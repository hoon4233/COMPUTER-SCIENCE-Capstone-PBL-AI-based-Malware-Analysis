adc
or
add
add
dec
add
add
add
add
add
add
add
add
push
mov
add
adc
or
add
add
add
adc
add
push
sub
es
and
add
add
and
add
cmp
fwait
add
add
and
jbe
xor
and
enter
cmp
add
sub
add
and
add
add
jp
add
and
add
and
pusha
enter
or
pop
inc
add
add
loopne
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
cmp
add
and
add
add
and
add
add
add
adc
add
push
add
add
sub
add
and
add
add
and
add
add
add
sub
add
add
pop
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
cmp
and
add
add
cmp
(bad)
(bad)
jmp
sub
add
push
sub
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmps
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
and
xchg
(bad)
(bad)
jmp
add
adc
sldt
add
add
add
sub
es
pop
sub
add
cmp
add
and
add
cmp
add
add
fwait
nop
pop
hlt
cmp
add
or
or
add
and
add
add
and
add
cmp
add
add
mov
pop
add
cli
and
add
icebp
cld
jle
and
rol
cmp
sub
add
push
and
add
add
pop
add
or
sub
push
add
add
and
add
cmp
add
and
mov
sub
and
add
add
arpl
add
adc
and
out
sub
ficomp
add
add
and
sub
sub
lea
add
add
add
add
rol
push
add
push
mov
add
push
or
or
add
cmp
arpl
add
and
sub
retf
add
sub
adc
lea
add
add
add
and
add
add
sub
add
push
mov
add
push
sub
add
push
cmp
(bad)
(bad)
jmp
or
add
cmp
add
add
dec
sbb
add
and
adc
and
movs
ds
pop
popa
cmp
add
or
push
add
push
and
add
cmp
and
adc
mov
es
popa
cmp
add
add
push
add
add
jae
add
or
or
add
or
jmp
and
add
add
outs
add
add
inc
ror
and
cmp
mov
push
pop
inc
or
add
jmp
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
xor
add
adc
and
and
cmp
or
add
sub
cmp
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
(bad)
jmp
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
add
add
xor
add
add
add
add
sub
es
and
add
add
cmp
or
dec
and
add
xchg
aam
aas
and
add
adc
sbb
add
and
add
add
cmps
xlat
loopne
cmp
add
add
adc
add
sldt
add
inc
add
add
mov
sbb
fs
fs
and
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
sti
add
add
and
cmp
mov
cmp
pop
sub
add
push
and
add
cmp
add
add
pushf
add
add
push
add
add
jae
add
or
sldt
push
or
push
add
add
mov
add
push
sub
add
push
sub
add
push
push
sub
add
push
cmp
add
add
and
add
cmp
push
(bad)
push
xor
add
and
sti
or
cmp
(bad)
(bad)
jmp
call
sbb
add
and
imul
add
cmp
add
add
pop
add
add
cmp
add
and
mov
cmp
(bad)
(bad)
call
push
add
push
and
add
add
aas
add
add
jne
add
add
and
add
add
add
add
and
and
stos
add
(bad)
(bad)
jmp
hlt
add
add
adc
add
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
cmp
add
jne
(bad)
(bad)
jl
(bad)
dec
add
sub
add
sar
inc
(bad)
dec
(bad)
(bad)
jmp
add
and
add
add
cmp
pop
and
pop
cmps
sub
xor
retf
popa
cmp
jmp
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
cmp
inc
and
push
stos
pop
and
gs
cmp
(bad)
(bad)
inc
sub
add
push
cmp
std
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
and
cmp
add
add
imul
and
dec
mov
pop
popa
cmp
std
(bad)
(bad)
cmp
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
adc
add
push
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
add
sub
add
sub
add
adc
or
or
add
add
add
sub
es
add
outs
add
add
sub
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
xor
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
xor
add
add
push
and
add
add
test
add
and
cmp
add
add
int
ins
dec
and
add
or
add
add
pop
aas
pop
bound
and
add
add
push
add
add
or
xor
add
and
add
cmp
add
adc
and
and
stos
push
popa
cmp
add
add
add
push
or
or
add
pop
cmp
add
add
adc
and
fwait
repz
and
cmp
push
adc
adc
or
xor
add
cmc
add
add
or
jmp
and
ror
cmp
imul
(bad)
(bad)
jmp
and
add
add
leave
add
add
retf
add
add
push
pop
jae
add
or
pop
and
add
add
mov
add
add
add
or
and
add
add
lahf
add
add
adc
add
add
cmp
or
rcr
xor
popa
cmp
add
push
sub
add
push
adc
add
cmp
add
and
xchg
inc
dec
cmp
add
add
or
sbb
xor
add
es
sub
add
cmp
(bad)
jmp
and
cmp
add
adc
and
in
mov
std
test
and
add
sbb
or
add
add
sub
add
push
cmp
add
add
push
push
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
add
sbb
(bad)
(bad)
jmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
(bad)
aas
add
add
(bad)
(bad)
inc
jmp
push
add
add
movs
(bad)
(bad)
call
or
test
lods
pop
pop
and
dec
cmp
cmp
add
add
add
aas
adc
(bad)
jmp
push
add
add
cmp
call
add
pop
adc
adc
add
cmp
(bad)
inc
sub
add
push
pop
or
and
add
add
cmp
(bad)
jmp
and
arpl
push
push
popa
and
pop
inc
or
add
test
std
(bad)
dec
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
adc
add
cmp
(bad)
call
or
cmp
and
pop
pusha
out
popa
cmp
push
sub
xor
add
add
adc
add
push
and
add
add
jo
add
adc
xchg
mov
cli
ret
popa
cmp
add
add
adc
add
add
dec
add
pop
movups
pop
setne
pop
setne
and
add
add
and
add
cmp
add
add
and
sbb
pop
and
shl
cmp
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
add
add
inc
add
or
mov
add
cmp
add
adc
pop
or
pop
pop
or
popa
sahf
and
rol
add
or
pushf
repnz
es
and
cmps
imul
cmp
add
adc
adc
and
adc
push
rcr
cmp
pop
sbb
or
and
add
sub
add
cmp
xchg
add
adc
add
adc
pusha
mov
or
fnsave
dec
das
popa
cmp
add
add
sbb
lea
add
add
or
pop
add
add
cmp
add
adc
retf
fcomp
push
push
xor
aam
add
adc
sbb
pop
sbb
or
add
add
cs
add
or
mov
and
or
stos
add
add
or
or
popa
or
add
or
add
or
pop
push
adc
and
mov
les
xchg
add
adc
adc
xchg
adc
and
add
add
and
add
cmp
add
add
and
add
add
or
pop
adc
and
add
add
mov
add
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
lods
add
add
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
add
xchg
add
add
or
push
and
adc
pop
sbb
and
jge
add
push
adc
and
add
add
jo
add
adc
pop
or
pop
pop
or
or
or
popa
sahf
and
add
add
push
add
add
fcom
aas
repnz
add
aad
dec
xchg
and
add
push
adc
and
add
add
xor
add
and
data16
add
pop
sbb
pop
sbb
sahf
and
add
add
adc
add
adc
add
and
retf
popa
cmp
pop
adc
pop
adc
sahf
and
add
add
jmp
je
inc
jmp
popa
cmp
add
adc
pop
pop
adc
and
mov
add
sahf
and
add
cmp
or
cmp
(bad)
data16
popa
cmp
and
and
add
and
and
add
add
mov
add
pop
adc
adc
and
add
add
jne
add
and
in
(bad)
fbld
inc
iret
repz
adc
and
inc
and
add
mov
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
std
(bad)
inc
(bad)
(bad)
inc
add
add
add
sub
add
clc
(bad)
(bad)
dec
add
iret
(bad)
(bad)
jmp
cld
(bad)
jmp
add
in
(bad)
call
add
add
add
add
std
(bad)
call
std
(bad)
(bad)
stc
std
(bad)
(bad)
fdivr
(bad)
push
add
lea
add
in
add
add
add
add
(bad)
jmp
sbb
add
cmp
add
add
and
and
add
add
mov
or
adc
add
pop
je
popa
cmp
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
mov
add
and
adc
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
or
and
xchg
sbb
imul
popf
popa
cmp
(bad)
(bad)
call
add
pop
adc
and
add
cmp
add
and
loopne
and
add
and
cmp
(bad)
(bad)
call
or
adc
lods
add
add
xor
add
cmp
add
add
movs
cmp
push
add
add
and
add
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
add
adc
or
or
add
cmp
add
add
or
fcomp
push
sub
and
lods
push
ss
cmp
(bad)
call
or
push
and
dec
(bad)
(bad)
call
add
add
add
cmp
adc
adc
and
adc
rcr
sub
add
push
cmp
add
add
and
add
add
add
add
or
icebp
xor
inc
adc
popa
cmp
std
(bad)
call
or
add
push
add
add
add
add
cmp
add
adc
xchg
jbe
arpl
jle
mov
popa
cmp
std
(bad)
call
or
push
and
adc
pop
adc
and
add
add
sub
add
or
or
and
add
or
push
add
add
lods
add
add
adc
add
dec
or
add
add
add
cli
(bad)
dec
(bad)
call
(bad)
(bad)
mov
sti
(bad)
jmp
std
(bad)
dec
(bad)
inc
add
or
add
mov
(bad)
inc
(bad)
(bad)
jmp
std
(bad)
inc
(bad)
dec
(bad)
inc
(bad)
jmp
add
add
cli
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
add
add
cld
(bad)
call
std
(bad)
(bad)
cld
sti
(bad)
inc
sti
(bad)
(bad)
mov
(bad)
(bad)
dec
stc
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
add
cmp
call
add
add
add
cmps
add
add
sbb
and
or
xchg
pop
and
call
(bad)
call
add
adc
mov
sub
cmp
(bad)
(bad)
jmp
adc
call
mov
and
cld
(bad)
call
adc
add
(bad)
(bad)
call
or
mov
push
dec
pop
and
mov
pop
cld
(bad)
call
or
adc
cmp
jmp
sldt
add
mov
(bad)
call
or
lods
sti
ror
and
xor
popa
cmp
(bad)
call
add
xchg
(bad)
jmp
sub
add
cmp
or
sbb
and
add
add
jg
(bad)
call
pop
pop
or
xchg
or
or
push
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
call
or
jnp
int
pop
and
fnstsw
cmp
cmp
sti
(bad)
call
or
sbb
popf
adc
dec
test
popa
cmp
sti
(bad)
call
or
scas
loopne
leave
pop
and
sbb
and
mov
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
adc
(bad)
call
or
imul
pop
and
pop
fs
cmp
adc
and
add
add
cmp
std
(bad)
jmp
and
setbe
jne
(bad)
dec
or
sbb
or
add
aam
(bad)
call
or
(bad)
lahf
(bad)
pop
and
add
cmp
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
stos
std
(bad)
call
adc
add
add
sahf
std
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
cmp
scas
in
mov
add
add
or
cmp
sti
(bad)
jmp
add
adc
push
add
add
sub
es
add
std
scas
sahf
add
loop
popa
adc
add
push
or
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
add
add
ja
popa
and
pop
inc
or
add
adc
add
hlt
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
push
movs
add
add
or
pop
and
cmp
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
push
daa
je
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
add
dec
pop
and
pop
sub
popa
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
popaw
jno
and
(bad)
inc
outs
pop
push
or
add
and
pop
cmps
(bad)
and
add
cmps
retf
arpl
adc
mov
popa
cmp
pop
and
cmps
dec
pop
and
pop
adc
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
or
add
outs
or
add
adc
or
push
adc
and
ret
inc
pop
and
add
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
pushf
xchg
mov
sbb
inc
sub
xor
add
add
add
add
adc
add
push
add
pop
loop
ins
pop
and
add
cmp
and
and
and
pop
inc
adc
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
pop
lea
add
sbb
jmp
or
add
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
test
repnz
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
and
pop
iret
sub
int
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
mov
sub
cmp
outs
sbb
or
add
and
cld
mov
and
add
hlt
cmp
sti
and
hlt
sbb
cmp
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
xchg
into
inc
pop
and
xchg
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
push
aaa
pop
and
push
cs
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
and
push
and
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
adc
and
inc
xor
and
cmp
std
(bad)
call
pop
and
and
dec
mov
(bad)
dec
push
mov
or
pop
and
pop
lea
xchg
jb
and
cmp
pop
push
or
pop
and
adc
pop
and
xchg
std
(bad)
inc
outs
pop
push
or
add
and
aas
sti
push
and
add
out
xor
ja
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
shr
or
std
(bad)
inc
sub
adc
push
add
add
add
add
adc
add
push
add
gs
(bad)
pop
and
push
arpl
popa
adc
and
fidiv
and
and
pop
inc
push
add
add
add
add
add
add
(bad)
(bad)
inc
add
sbb
add
cmp
add
xchg
add
add
add
add
add
add
add
add
cmp
add
add
bound
add
pop
and
and
mov
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
je
pop
and
dec
popaw
cmp
(bad)
inc
pop
push
or
add
adc
adc
and
and
stc
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
mov
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
and
cmp
outs
sbb
or
add
and
mov
add
add
jnp
int3
(bad)
and
xor
adc
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
outs
and
add
cmps
xchg
cmp
(bad)
dec
push
mov
or
pop
and
cs
or
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
jp
(bad)
pop
and
cmp
std
(bad)
call
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
push
dec
or
jge
std
adc
sahf
std
(bad)
inc
outs
push
push
or
add
and
gs
add
and
push
jnp
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
and
push
std
(bad)
inc
sub
add
adc
push
add
add
add
add
adc
add
push
add
dec
or
pop
and
adc
add
push
or
jb
mov
jle
loopne
popa
and
pop
inc
adc
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
and
and
add
in
popa
cmp
pop
and
imul
add
loop
popa
cmp
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
mov
(bad)
jo
cmp
out
(bad)
dec
push
mov
or
pop
and
and
int3
pop
popa
cmp
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
aad
adc
and
sub
sub
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
fidivr
pop
and
fldz
mov
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
push
neg
mov
lock
push
(bad)
(bad)
inc
outs
sbb
or
add
and
int
adc
add
sub
inc
inc
and
(bad)
inc
outs
pop
push
or
add
and
inc
jns
cmp
add
add
push
mov
and
(bad)
call
push
movs
add
add
or
pop
and
fld
and
lods
aad
popa
cmp
std
(bad)
inc
sbb
add
pop
and
or
pop
and
scas
sti
sbb
fdivrp
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
add
jo
popa
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
data16
pop
and
pop
push
aas
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
repnz
into
ret
or
popa
cmp
std
(bad)
inc
sub
adc
push
add
add
adc
add
push
add
in
mov
and
adc
and
lahf
stc
and
mov
adc
pop
adc
adc
add
repz
add
add
add
add
and
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
cmp
pop
push
or
add
adc
adc
and
xchg
fbstp
pop
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
jle
and
sub
(bad)
(bad)
inc
outs
push
push
or
add
and
jp
xlat
and
add
jb
data16
retf
cli
mov
(bad)
(bad)
call
pop
and
into
inc
pop
and
pusha
lock
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
movs
dec
push
pop
and
sub
(bad)
(bad)
inc
sbb
add
pop
and
enter
and
lock
cmp
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
jns
cmp
(bad)
(bad)
call
lea
add
sbb
mov
out
out
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
xlat
sub
jbe
in
popa
cmp
std
(bad)
call
pop
and
inc
add
aam
xchg
aam
cmp
std
(bad)
call
push
movs
add
add
or
pop
and
and
cmp
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
fwait
icebp
das
pop
and
fsub
test
(bad)
inc
outs
sbb
or
add
and
and
and
add
movs
xchg
xor
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
fsub
add
je
icebp
cmc
and
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
(bad)
sub
pop
and
pop
out
popa
cmp
cld
(bad)
inc
sub
add
sub
es
add
sbb
add
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
sldt
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
adc
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
adc
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sbb
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
inc
add
add
add
adc
add
push
push
sub
add
push
cmp
add
add
and
add
add
and
add
add
add
bound
add
add
mov
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
jmp
add
lahf
add
add
add
add
add
sahf
add
add
add
cmp
add
cmp
pop
and
sub
pop
and
mov
popa
cmp
add
add
jnp
add
add
inc
lock
add
push
add
add
jg
(bad)
inc
and
xlat
(bad)
pop
and
push
aas
cmp
cmps
add
add
and
add
pop
jge
add
add
sldt
add
push
(bad)
(bad)
inc
and
and
fcom
stc
popa
cmp
add
and
add
add
add
add
add
add
sbb
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
cs
sbb
add
mov
jae
and
fwait
movs
scas
pop
popa
cmp
add
add
and
add
bound
add
add
or
add
cmp
(bad)
(bad)
inc
and
and
cmp
popa
cmp
add
add
add
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
or
add
sub
add
push
cmp
and
sar
add
and
enter
es
and
stc
ins
pop
popa
cmp
jnp
add
add
add
add
inc
add
add
adc
add
cmp
(bad)
inc
and
mov
pop
into
add
xchg
add
add
sub
in
push
pop
sbb
xchg
add
add
jge
add
add
or
add
cmp
(bad)
jmp
add
fs
cmp
add
add
add
jnp
add
add
fs
jge
add
add
add
add
cmp
(bad)
(bad)
inc
and
jecxz
and
cmp
add
add
jnp
add
add
add
add
inc
in
(bad)
jmp
or
out
(bad)
inc
jnp
add
add
or
add
add
or
pop
add
add
int3
std
(bad)
jmp
push
push
jno
pusha
cwde
pop
xor
or
push
pop
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
jmp
add
(bad)
dec
(bad)
dec
add
test
add
adc
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
cmp
jnp
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
pushf
std
(bad)
jmp
and
add
add
cmp
std
(bad)
jmp
cmp
add
add
and
add
pop
jge
add
add
add
add
cmp
std
(bad)
jmp
in
les
retf
push
add
add
icebp
jle
(bad)
and
and
cmp
(bad)
(bad)
call
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
das
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
sbb
add
cmp
add
add
pop
pop
or
xor
add
and
add
add
push
add
dec
add
add
add
add
adc
add
sar
inc
add
add
add
add
add
mov
add
pop
add
add
and
retf
(bad)
(bad)
jmp
dec
out
xchg
shl
add
ret
aam
mov
add
add
and
xchg
jle
popa
cmp
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
xchg
(bad)
call
or
add
add
cmp
(bad)
inc
and
clc
push
icebp
pop
and
mov
add
add
outs
pop
add
add
add
pop
pop
bound
xchg
(bad)
(bad)
jmp
add
add
cmp
(bad)
jmp
cmps
addr16
and
pop
(bad)
lods
popa
and
push
add
add
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
add
mov
(bad)
jmp
(bad)
jmp
add
add
cmp
test
(bad)
jmp
add
xor
pop
add
add
add
adc
add
push
and
add
add
repnz
add
adc
push
add
add
mov
cmp
cmp
add
pop
pop
pop
or
or
add
cmp
add
add
push
inc
cmp
add
pop
push
ds
(bad)
jmp
add
add
sub
add
cmp
cmp
add
add
jnp
add
add
and
add
add
xchg
add
add
or
inc
add
push
sub
add
cmp
add
add
and
cmp
add
es
mov
adc
popa
and
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
fwait
(bad)
(bad)
jmp
and
add
add
cmp
add
or
aaa
pop
cmp
pop
and
sub
mov
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pop
or
inc
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
pop
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
or
dec
push
into
lahf
pop
and
xchg
popa
cmp
(bad)
inc
pop
add
add
add
pop
pop
bound
add
add
xor
mov
add
or
add
sub
es
and
add
add
cmp
pop
or
add
add
cmp
xchg
push
cmps
jmp
mov
adc
add
ret
add
add
add
add
add
das
add
add
(bad)
(bad)
(bad)
add
add
add
add
add
add
cmp
add
cmp
add
or
jnp
add
add
pushf
add
add
add
add
cmp
add
push
inc
inc
sti
cmp
pop
bound
and
add
sub
add
cmp
add
add
and
add
push
or
or
add
cmp
add
add
or
cmp
or
add
dec
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
jo
add
adc
mov
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
cmp
add
or
add
inc
add
push
cmp
adc
mov
push
mov
and
adc
(bad)
(bad)
call
or
or
add
cmp
(bad)
inc
or
pop
pop
pop
bound
pop
sub
add
cmp
and
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
adc
mov
(bad)
and
pop
jo
cmp
pop
pop
or
mov
and
pop
(bad)
(bad)
call
add
(bad)
ins
mov
and
outs
(bad)
(bad)
inc
sub
xor
rol
add
or
add
sub
es
and
add
add
cmp
add
adc
je
arpl
and
loope
popa
cmp
add
pop
loopne
add
add
add
cmp
add
or
add
and
add
and
popa
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
(bad)
call
add
movs
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
and
add
add
mov
inc
repz
and
cmp
inc
popa
and
pop
inc
or
add
xor
add
pushf
add
add
(bad)
jmp
add
aam
add
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
or
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
pop
cmp
(bad)
jmp
adc
xchg
int3
sbb
and
(bad)
call
or
add
add
cmp
(bad)
inc
pop
bound
pop
sub
add
cmp
add
add
and
add
add
sub
(bad)
call
add
adc
mov
and
inc
into
xchg
popa
cmp
(bad)
inc
or
cmp
and
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
dec
sub
sbb
ret
cmp
das
(bad)
(bad)
inc
or
pop
pop
pop
bound
and
add
push
cmp
(bad)
(bad)
jmp
pop
or
or
add
cmp
(bad)
(bad)
jmp
sbb
adc
add
sar
sub
(bad)
call
or
or
add
cmp
add
cmps
repnz
in
and
daa
sbb
(bad)
(bad)
inc
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
and
add
add
cmp
add
and
and
add
add
add
add
add
cmp
add
add
and
and
cmp
add
add
add
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
push
add
add
push
add
dec
add
add
add
add
jne
(bad)
push
add
add
add
xor
add
add
add
call
add
add
add
add
add
add
jo
(bad)
jmp
and
add
add
mov
and
sbb
sbb
lods
popa
int3
mov
cmp
add
add
jge
add
add
or
add
cmp
add
add
sbb
add
add
add
add
sub
add
cmp
jl
(bad)
inc
and
or
pop
and
dec
push
and
add
add
pop
pop
or
pop
add
add
pop
(bad)
(bad)
jmp
inc
ret
out
and
add
jb
mov
and
add
push
or
or
add
sub
add
cmp
(bad)
jmp
and
jp
pop
and
and
or
add
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
call
sub
add
cmp
(bad)
(bad)
jmp
and
add
pop
cmp
(bad)
(bad)
jmp
add
jge
add
add
or
add
cmp
(bad)
(bad)
inc
and
lods
scas
lea
sbb
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
xor
add
add
add
add
sub
es
push
sub
add
cmp
add
add
and
add
add
mov
sar
stc
mov
add
and
pop
jmp
add
and
add
bound
add
add
push
add
add
pop
add
cmp
add
and
cmp
mov
sahf
popa
and
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
pop
cmp
add
cmp
jnp
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
cmp
add
and
popf
(bad)
(bad)
inc
jnp
add
add
add
add
inc
pop
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
push
add
add
(bad)
(bad)
call
add
add
sbb
(bad)
jmp
and
iret
(bad)
(bad)
inc
and
and
cmp
(bad)
(bad)
jmp
adc
or
pushf
add
add
add
sub
es
and
add
add
cmp
jnp
add
add
and
add
add
sub
add
adc
imul
popa
scas
inc
popa
cmp
add
add
push
xor
add
cmp
add
and
add
add
push
push
add
or
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
jb
(bad)
dec
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
and
lahf
(bad)
(bad)
inc
push
pop
pop
pop
adc
sldt
add
cmp
cmp
loop
cmp
add
add
sahf
push
(bad)
les
in
(bad)
and
add
add
push
bound
jnp
add
add
dec
add
push
shl
and
add
add
push
(bad)
(bad)
jmp
nop
movs
adc
cmp
add
add
or
adc
add
cmp
(bad)
(bad)
jmp
loop
or
and
and
pop
inc
or
add
mov
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
cmps
add
add
(bad)
(bad)
jmp
dec
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
push
adc
pop
pop
pop
or
add
ret
inc
push
bound
and
add
add
mov
(bad)
call
add
sub
add
jnp
popa
cmp
dec
pop
pop
or
add
xchg
(bad)
(bad)
call
add
dec
pop
and
cmp
(bad)
inc
or
add
je
(bad)
dec
pop
bound
adc
pusha
or
or
add
cmp
(bad)
call
add
xchg
pop
and
and
(bad)
call
add
(bad)
pop
and
and
cmp
(bad)
(bad)
inc
pop
or
push
add
add
sub
add
jo
and
add
popa
cmp
(bad)
(bad)
inc
and
add
add
(bad)
jmp
add
add
cmp
jmp
adc
add
jge
add
add
adc
add
cmp
std
(bad)
jmp
pop
(bad)
shr
add
and
pushf
inc
test
(bad)
(bad)
inc
push
jge
add
add
or
add
cmp
std
(bad)
inc
jnp
add
add
and
add
add
mov
(bad)
dec
sub
xor
add
add
add
add
sub
es
sub
es
add
dec
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
cmp
add
add
pop
and
shl
pop
and
dec
mov
add
add
jnp
add
add
pop
add
add
cmp
add
add
pop
add
add
inc
add
pop
and
jno
sahf
pop
and
cmp
add
add
or
push
add
add
loopne
add
add
rol
add
lea
add
add
add
add
push
add
push
sub
add
cmp
add
add
and
add
add
cmp
sbb
add
push
jge
add
add
movs
add
add
and
add
add
xchg
add
add
pop
or
lea
add
add
add
add
add
add
cmp
add
cmp
adc
add
adc
add
cmp
add
pop
and
jb
add
cmp
cmp
push
push
adc
add
inc
add
add
(bad)
jno
ins
and
add
xchg
push
mov
je
add
push
pop
pop
or
adc
add
cmp
add
add
sbb
lea
add
add
add
add
pop
add
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
call
(bad)
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
(bad)
(bad)
aas
add
add
add
ret
add
(bad)
(bad)
call
add
or
add
push
cmp
add
rol
add
lea
add
add
add
add
or
add
cmp
inc
pop
jb
lea
add
add
add
add
sldt
add
pop
(bad)
(bad)
inc
jae
add
push
jge
add
add
push
add
add
inc
(bad)
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
push
cmp
(bad)
(bad)
jmp
add
or
lea
add
add
add
add
or
cmp
(bad)
jmp
add
add
push
jge
add
add
pop
add
add
(bad)
(bad)
(bad)
inc
sub
push
and
add
add
out
(bad)
(bad)
inc
jae
add
push
jge
add
add
adc
fsin
(bad)
inc
jae
add
push
jge
add
add
adc
add
sub
add
cmp
and
dec
pop
and
xchg
sbb
add
push
add
add
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
add
add
push
jge
add
add
add
add
cmp
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
sub
add
cmp
(bad)
cmp
(bad)
jmp
adc
(bad)
(bad)
jmp
add
add
xor
add
add
or
add
sub
es
and
add
cmp
add
add
add
add
cmp
add
add
sub
add
cmp
add
add
and
add
add
push
add
push
cmp
add
add
pop
and
cli
push
test
shl
lds
add
add
add
add
sub
add
cmp
add
and
add
dec
add
dec
add
add
add
add
jns
add
jns
add
imul
(bad)
jmp
add
add
add
add
push
add
add
int
(bad)
inc
and
sbb
jp
sub
add
add
jnp
add
add
sub
add
jge
add
add
pop
add
add
lahf
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
or
or
add
sub
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
add
add
jge
add
add
cmp
(bad)
jmp
and
pop
(bad)
(bad)
jmp
sbb
xchg
sbb
add
(bad)
(bad)
call
(bad)
(bad)
call
add
sar
(bad)
fdivr
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
(bad)
and
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
add
add
add
pop
add
push
sub
add
xor
add
add
add
add
adc
add
push
push
sub
add
cmp
add
add
and
add
add
push
add
add
out
add
add
add
add
sub
add
and
add
add
dec
mov
test
or
pop
inc
add
add
fdivr
(bad)
call
add
(bad)
(bad)
(bad)
jmp
mov
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
and
mov
pop
and
push
and
mov
(bad)
inc
push
pop
pop
jge
add
add
pop
add
add
push
add
push
cmp
pop
add
pop
pop
bound
cmp
add
add
and
add
add
(bad)
(bad)
(bad)
inc
jnp
add
add
sub
add
and
add
add
cmp
(bad)
jmp
pop
and
and
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
push
and
add
add
xchg
add
add
and
push
cmps
inc
pop
and
cmp
add
jnp
add
add
pop
add
push
and
push
add
push
cmp
add
cmp
add
or
cdq
pop
and
pop
and
cmp
add
add
pop
pop
or
add
push
add
push
cmp
pop
pop
pop
or
push
add
add
add
add
jg
fdiv
add
jnp
add
add
loopne
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
in
(bad)
(bad)
(bad)
aas
add
add
add
add
add
into
add
add
add
add
add
cmps
add
add
(bad)
call
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
mov
add
add
adc
add
cmp
(bad)
jmp
in
sbb
in
cmp
add
add
cdq
lods
jne
and
add
pop
add
add
add
jnp
add
cmp
add
and
add
add
inc
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
es
(bad)
jmp
xchg
xchg
add
and
jmp
add
add
sbb
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
loop
(bad)
jmp
jno
push
into
and
add
xchg
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
and
and
dec
adc
js
add
add
add
add
pop
add
push
and
add
add
cmp
and
es
mov
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
pusha
(bad)
(bad)
dec
and
scas
cld
pop
and
cmp
add
add
pop
pop
or
adc
add
cmp
(bad)
dec
and
cmp
xor
enter
popa
cmp
add
add
or
sbb
add
cmp
(bad)
(bad)
inc
jl
add
add
cmp
push
add
add
or
and
pop
mov
pop
and
push
(bad)
add
add
jnp
add
add
add
add
add
pop
add
push
and
(bad)
(bad)
dec
and
and
inc
popa
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
mov
(bad)
inc
jnp
add
add
sub
add
and
add
add
fwait
std
(bad)
jmp
test
ins
add
add
pop
pop
or
add
add
pop
cmp
or
std
nop
loope
pop
and
out
cdq
popa
cmp
add
push
or
add
add
sub
add
cmp
(bad)
jmp
cmp
add
or
push
add
add
dec
std
(bad)
jmp
retf
push
call
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
std
(bad)
dec
and
and
sbb
add
add
jnp
add
add
pop
add
push
and
add
add
(bad)
cld
(bad)
jmp
(bad)
int3
inc
loope
cmp
add
add
scas
jmp
and
add
push
sbb
pop
or
or
add
cmp
cld
(bad)
dec
and
test
pop
and
push
mov
cmp
pop
jb
retf
jmp
sbb
add
cmp
and
add
add
test
(bad)
dec
and
es
and
jo
pop
popa
cmp
add
push
pop
or
jae
(bad)
jmp
push
add
push
sub
add
cmp
std
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
cmp
(bad)
dec
and
xor
in
inc
popa
cmp
add
add
and
and
xchg
jle
popa
cmp
add
add
jnp
add
add
loopne
add
add
sub
adc
sub
(bad)
jmp
ss
jo
and
mov
fbld
or
pop
add
add
sti
(bad)
jmp
(bad)
(bad)
out
cld
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
sti
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
push
(bad)
jmp
or
add
sub
add
cmp
sub
add
adc
push
add
add
adc
add
push
and
add
add
push
add
adc
and
movs
ret
push
rol
fisub
add
add
or
add
dec
or
add
add
add
add
adc
add
cmp
or
add
mov
rcr
pop
and
cmp
add
adc
add
jnp
add
add
add
jnp
add
add
sub
add
sub
push
adc
and
add
add
test
and
mov
pop
and
(bad)
pop
iret
popa
cmp
jnp
add
add
adc
sub
add
and
add
add
cmp
or
add
adc
and
(bad)
lock
and
js
(bad)
popa
cmp
add
adc
and
pop
(bad)
movs
pop
and
cmp
add
adc
add
add
adc
and
add
cmp
add
push
add
push
and
jl
add
push
adc
pop
add
add
push
add
push
cmp
add
adc
and
and
cmp
add
or
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
or
add
sub
add
cmp
or
add
add
add
add
pop
sub
add
and
add
add
pop
or
add
cmp
add
or
or
push
add
add
cmc
or
add
and
push
add
add
push
xchg
mov
adc
and
popa
cmp
add
adc
sub
cwde
pop
add
and
add
add
push
add
push
cmp
mov
add
and
push
add
add
adc
push
pop
pop
pop
bound
and
add
add
xchg
or
add
add
adc
add
or
add
je
fsubr
and
add
mov
adc
and
popa
cmp
add
adc
(bad)
adc
and
push
or
add
or
(bad)
jmp
das
add
add
cmp
and
cmp
add
add
fcmovnb
push
mov
es
add
add
jnp
add
add
jnp
add
add
or
bound
add
sbb
or
sub
add
cmp
add
adc
and
data16
and
push
loop
popa
cmp
jnp
add
add
add
push
and
add
add
cmp
or
add
adc
and
and
test
cld
popa
cmp
add
adc
and
and
pop
add
add
jnp
add
add
or
pusha
add
push
and
add
add
cmp
jnp
add
add
jnp
add
add
sub
add
sub
add
and
add
add
push
add
push
cmp
add
cmp
add
and
inc
jae
cmp
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
add
and
add
add
push
add
push
cmp
add
adc
and
and
out
(bad)
popa
cmp
add
add
add
add
add
push
sbb
add
push
sbb
or
sbb
add
pop
cmp
or
add
and
xchg
xchg
and
add
imul
cmp
add
nop
add
push
and
add
add
fadd
add
and
add
fidivr
js
add
or
or
xor
add
cmp
pop
add
adc
and
(bad)
cdq
pop
and
cmp
add
add
adc
cmp
add
cmp
push
mov
add
add
jnp
add
add
jnp
add
add
add
popa
add
push
adc
and
add
add
jne
add
adc
add
add
fs
add
adc
and
push
dec
pop
and
and
popa
cmp
add
add
add
xchg
add
push
and
add
add
inc
pop
add
and
mov
add
add
int3
pop
stos
push
and
sbb
jecxz
popa
cmp
add
add
jnp
add
add
sub
add
adc
and
add
add
or
add
and
and
add
ret
test
adc
and
push
push
pop
popa
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
pop
cmp
pop
add
and
add
sub
add
cmp
adc
and
xchg
and
cmp
add
pop
adc
jmp
add
add
nop
push
add
add
add
add
push
push
add
add
jnp
add
and
push
out
sbb
add
adc
and
ret
pop
and
cmp
ret
popa
cmp
add
add
or
cmp
add
cmp
add
and
sub
and
add
rcr
and
leave
clc
cwde
or
popa
cmp
add
add
outs
adc
jmp
and
push
add
push
cmp
push
add
add
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
add
out
add
and
cmp
add
add
jmp
jp
add
pop
add
add
jnp
add
add
aas
add
push
pop
or
and
add
cmp
add
add
add
jnp
add
add
or
bound
add
pop
adc
and
add
add
xchg
add
sub
sub
add
jns
and
add
fst
mov
add
push
add
push
and
add
add
pop
add
xor
(bad)
and
mov
popa
and
pop
inc
cmp
add
in
add
sahf
add
add
(bad)
(bad)
dec
cli
(bad)
dec
add
add
stc
(bad)
(bad)
mov
sti
(bad)
inc
(bad)
(bad)
inc
add
mov
add
jns
(bad)
inc
(bad)
push
cld
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
push
(bad)
jmp
add
add
add
add
stc
(bad)
(bad)
(bad)
cli
(bad)
dec
add
add
add
add
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
std
(bad)
push
add
add
(bad)
(bad)
sti
sti
(bad)
dec
add
add
add
add
cld
(bad)
call
cld
(bad)
dec
add
add
add
mov
(bad)
jmp
(bad)
(bad)
call
std
(bad)
dec
add
test
add
std
(bad)
call
add
je
add
lds
add
pop
cli
(bad)
jmp
and
add
pop
cmp
add
adc
and
rol
loope
lahf
cmp
in
(bad)
(bad)
call
mov
mov
adc
pop
cs
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
and
add
add
sbb
add
or
mov
and
add
add
push
add
push
cmp
add
add
inc
add
and
(bad)
(bad)
call
or
std
(bad)
jmp
push
add
add
loope
add
and
mov
lock
add
add
add
adc
jnp
add
add
push
sub
add
pop
or
add
add
cmp
imul
push
add
add
or
lods
test
(bad)
inc
add
add
add
in
add
and
push
add
push
cmp
add
adc
and
jne
and
mov
(bad)
popa
cmp
mov
jb
cmp
and
adc
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
std
(bad)
jmp
add
add
sub
add
adc
and
mov
pop
and
pop
xor
std
(bad)
call
add
add
add
cmp
add
add
and
rcr
cmp
or
adc
and
add
add
jmp
mov
por
and
cmp
mov
fs
mov
mov
std
(bad)
dec
adc
push
add
push
sub
add
cmp
and
add
cmp
pop
(bad)
xchg
xchg
cmp
(bad)
inc
or
or
add
cmp
mov
jbe
xchg
pop
and
adc
sub
cmp
std
(bad)
call
add
add
add
cmp
add
es
(bad)
dec
xchg
cmp
std
(bad)
call
or
add
sub
add
cmp
add
adc
sub
adc
add
cmp
add
and
push
jmp
add
add
push
inc
or
and
idiv
(bad)
cld
(bad)
call
add
or
add
add
cmp
add
add
add
jnp
add
add
push
sub
add
adc
and
add
cmp
add
add
mov
and
adc
cmps
adc
test
(bad)
call
add
pop
add
and
add
sub
add
cmp
add
add
adc
and
mov
mov
sub
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
(bad)
jmp
daa
add
add
cmp
adc
and
and
icebp
outs
popa
cmp
cld
(bad)
dec
or
add
push
add
push
cmp
add
and
push
push
mov
cld
sti
(bad)
call
mov
push
int3
pop
and
jmp
popa
cmp
sti
(bad)
call
or
and
xor
add
adc
sub
and
add
cmp
add
add
mov
adc
push
pop
and
and
mov
or
add
cmp
add
add
adc
and
push
sbb
add
xchg
sti
(bad)
call
add
std
(bad)
jmp
cmp
add
cmp
add
add
fldcw
push
add
add
ffree
jb
and
(bad)
call
push
add
add
mov
add
and
dec
sar
cmp
add
add
mov
test
mov
movs
add
popa
cmp
sti
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
cmp
add
and
add
cmp
add
adc
and
sbb
pop
and
clc
dec
jo
cmp
sti
(bad)
inc
jnp
add
add
or
imul
add
add
add
add
add
add
push
adc
add
push
add
push
cmp
add
add
adc
and
push
mov
and
cmc
mov
mov
or
(bad)
(bad)
jmp
adc
add
dec
adc
dec
add
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
push
cmc
(bad)
jmp
(bad)
call
(bad)
inc
(bad)
(bad)
inc
cli
(bad)
jmp
idiv
push
(bad)
(bad)
cmp
(bad)
jmp
(bad)
inc
sti
(bad)
jmp
sti
(bad)
call
(bad)
jmp
idiv
push
hlt
(bad)
dec
std
(bad)
jmp
hlt
(bad)
push
repz
jmp
clc
(bad)
inc
sti
(bad)
push
cmc
(bad)
push
(bad)
(bad)
call
cmc
(bad)
call
cli
(bad)
inc
cmc
(bad)
call
(bad)
jmp
hlt
(bad)
jmp
idiv
jmp
cld
(bad)
call
(bad)
(bad)
(bad)
mov
cld
(bad)
inc
(bad)
inc
cmc
(bad)
jmp
(bad)
inc
(bad)
push
(bad)
call
(bad)
dec
hlt
(bad)
call
stc
(bad)
inc
sti
(bad)
dec
(bad)
jmp
std
(bad)
dec
std
(bad)
call
cli
(bad)
call
idiv
(bad)
jmp
(bad)
inc
cld
(bad)
call
idiv
(bad)
(bad)
cld
(bad)
call
clc
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
and
jg
mul
add
sbb
cmp
(bad)
jmp
add
add
xor
or
add
sldt
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
cmp
push
xchg
pop
or
and
add
add
cmp
add
adc
and
adc
lods
popa
cmp
add
add
sub
add
and
add
add
dec
add
add
push
and
lock
and
data16
cmp
add
adc
add
cmp
add
and
add
add
cmp
add
add
cmp
or
sub
add
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
inc
add
add
add
int3
add
add
add
add
add
add
add
dec
(bad)
(bad)
dec
add
add
add
add
cmp
sbb
and
add
add
mov
push
and
neg
add
popa
cmp
add
pop
adc
push
pop
pop
pop
pop
bound
add
add
add
cmp
(bad)
jmp
popa
out
sub
jg
add
push
adc
add
pop
(bad)
(bad)
call
push
and
fisttp
and
sbb
popa
cmp
add
adc
and
add
add
cmp
(bad)
call
adc
pop
add
add
sub
(bad)
inc
sbb
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
and
xchg
cmp
add
add
repnz
pop
add
add
adc
dec
add
push
and
add
cmp
(bad)
(bad)
jmp
sbb
add
and
mov
punpcklwd
inc
or
add
mov
(bad)
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
mov
(bad)
inc
push
xchg
pop
or
and
add
add
push
add
push
cmp
sub
adc
or
xlat
add
add
add
adc
add
push
and
add
add
add
add
sbb
add
sub
add
cmp
add
and
add
add
dec
add
add
cmps
add
add
sbb
add
and
add
add
call
sub
inc
add
add
jb
add
pop
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
call
add
add
xchg
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
mov
add
xor
push
and
inc
retf
cmp
sub
and
and
cmp
(bad)
call
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sbb
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
imul
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ins
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
ins
add
push
sub
add
xor
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
inc
add
push
sub
adc
or
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
test
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
push
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
test
add
sub
add
xor
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
add
and
add
add
push
add
add
xchg
in
pop
push
cmp
add
add
add
add
add
push
add
add
jmp
add
cmp
(bad)
(bad)
jmp
mov
out
shr
and
add
(bad)
(bad)
inc
(bad)
(bad)
call
add
and
add
inc
add
add
add
mov
add
and
cmp
add
add
dec
popf
fiadd
cmp
pop
or
or
add
cmp
and
and
pushf
(bad)
(bad)
inc
add
add
add
or
add
push
cmp
add
es
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
add
add
cmp
add
add
add
add
cmp
(bad)
jmp
and
add
add
sub
add
add
add
add
loopne
add
add
sbb
add
push
add
pop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
adc
or
fadd
add
or
add
sub
es
pop
sub
add
cmp
add
add
and
add
add
dec
add
add
adc
sub
add
pop
pop
or
or
add
push
cmp
add
es
and
out
out
and
xor
jns
add
add
add
aaa
add
push
and
add
add
or
add
and
fs
and
add
mov
cmp
add
add
add
add
loopne
add
add
sub
or
add
cmp
add
add
dec
add
add
and
rcr
and
cmp
add
add
jl
add
add
cmp
add
add
cmp
jmp
arpl
in
in
and
or
or
or
add
mov
(bad)
(bad)
jg
(bad)
jmp
add
add
(bad)
(bad)
call
add
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
xchg
(bad)
(bad)
jmp
and
add
add
outs
add
push
cmp
add
es
and
icebp
js
pop
and
cmp
jnp
add
add
aas
(bad)
(bad)
jmp
push
add
add
add
add
and
jmp
pop
and
cmp
inc
jnp
add
add
loopne
add
add
sub
(bad)
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jle
(bad)
jmp
add
add
push
cmp
(bad)
(bad)
jmp
push
or
add
add
cmp
jl
add
add
aaa
add
push
and
sahf
(bad)
(bad)
inc
and
sbb
and
icebp
call
(bad)
(bad)
jmp
adc
or
mov
add
or
add
sub
es
and
add
add
mov
add
cmp
and
aas
fwait
scas
pop
and
jno
popa
cmp
add
add
add
add
sub
add
push
pop
or
add
add
push
cmp
add
es
and
or
pop
and
jno
popa
cmp
add
add
push
pop
or
add
add
cmp
add
add
and
les
mov
aad
add
push
add
add
add
loopne
add
add
add
add
push
pop
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jnp
add
imul
add
(bad)
call
add
add
add
add
sub
add
cmp
add
and
add
add
cmp
jl
add
add
sub
add
push
cmp
add
and
outs
add
push
cmp
and
stos
loope
cmp
jnp
add
add
loopne
add
add
add
add
push
sub
and
mov
and
cmp
add
add
or
dec
add
add
and
add
add
pop
(bad)
(bad)
jmp
ins
sub
and
dec
out
and
or
add
int3
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
cld
(bad)
(bad)
call
(bad)
(bad)
call
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
or
add
cmp
(bad)
(bad)
jmp
pop
and
push
add
add
leave
ins
add
cmp
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
push
add
add
jl
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
jbe
add
jbe
add
dec
add
add
add
add
add
mov
add
add
add
add
cmp
(bad)
(bad)
inc
pop
adc
lea
add
add
add
add
sub
add
cmp
add
add
and
add
add
cmp
add
jae
add
push
jge
add
add
and
and
add
add
mov
(bad)
inc
pop
adc
lea
add
add
add
add
pop
add
add
cmp
(bad)
jmp
add
jno
add
and
add
add
popa
(bad)
(bad)
inc
jl
add
add
adc
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
rol
add
add
adc
add
push
and
add
add
xchg
add
add
and
and
out
outs
popa
cmp
add
push
loopne
or
add
jge
add
add
or
outs
add
add
or
xor
add
and
or
xor
loope
pop
popa
cmp
add
add
add
and
add
or
add
cmp
add
add
xchg
ret
pop
cwde
popa
and
inc
push
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
mov
add
add
cmp
add
add
arpl
inc
mov
cmp
add
add
mov
mov
cmp
pop
add
pop
pop
bound
pop
jge
add
add
add
mov
fcmovbe
inc
mov
inc
jnp
add
add
cmp
add
and
add
add
cmp
or
sub
out
pop
and
jmp
dec
(bad)
(bad)
call
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
cmp
add
and
or
jmp
and
and
ja
ins
popa
cmp
(bad)
(bad)
inc
add
add
add
or
add
cmp
add
add
das
lahf
adc
and
add
sbb
or
lods
add
push
inc
ss
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
add
push
add
add
(bad)
jmp
(bad)
(bad)
inc
add
add
add
jge
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
(bad)
inc
add
add
iret
(bad)
(bad)
jmp
and
add
add
jns
add
cmp
pop
pop
pop
or
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmp
or
ja
pop
cdq
pop
and
cmp
popa
cmp
(bad)
(bad)
call
or
sldt
add
imul
inc
jnp
add
add
pop
(bad)
(bad)
jmp
or
add
push
cmp
(bad)
jmp
cmp
add
add
add
add
loopne
or
add
sub
add
and
add
add
xor
(bad)
dec
and
pusha
sbb
add
popa
cmp
std
(bad)
jmp
or
and
ret
and
cmp
std
(bad)
inc
jnp
add
add
inc
lahf
std
(bad)
jmp
or
add
cmp
(bad)
(bad)
dec
and
int3
addr16
and
pushf
stc
inc
popa
cmp
adc
or
cmp
add
adc
add
sub
es
sub
add
sub
add
cmp
add
add
and
add
add
mov
inc
mov
add
add
or
or
add
cmp
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
ins
add
add
lahf
adc
cmps
and
or
pop
inc
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
push
add
add
cmp
add
and
imul
add
add
std
test
cmp
and
add
loopne
or
add
sub
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
push
(bad)
(bad)
call
add
sbb
add
sub
add
push
(bad)
(bad)
add
add
adc
and
jns
add
cmp
(bad)
(bad)
(bad)
cmp
pop
pop
or
add
add
cmp
and
add
pop
push
inc
jae
(bad)
jmp
add
add
cmp
and
and
push
push
popa
cmp
(bad)
(bad)
jmp
adc
or
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
pop
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
jge
add
sub
adc
or
and
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
add
jle
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
jp
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
sub
add
sub
mov
add
and
add
add
mov
add
push
pop
pop
or
pop
add
add
add
push
cmp
cwde
add
add
or
add
add
cmp
add
adc
pop
fsub
or
pop
inc
add
add
add
add
scas
add
add
(bad)
(bad)
jmp
push
add
add
pop
add
add
in
jne
and
add
sti
loope
loope
cmp
and
pop
add
add
aaa
add
push
cmp
(bad)
jmp
and
and
add
cmp
add
push
and
add
add
ret
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
cmp
(bad)
(bad)
jmp
or
or
cmp
(bad)
inc
and
les
and
pop
pop
popa
cmp
(bad)
(bad)
jmp
add
adc
or
or
add
or
add
sub
es
sub
add
sub
inc
add
add
and
add
add
jg
add
cmp
add
and
xor
nop
add
add
and
add
add
add
add
push
add
add
add
push
cmp
add
cmp
add
pop
or
add
add
and
add
add
das
add
add
mov
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
cmp
add
and
aad
(bad)
jmp
push
xor
or
(bad)
push
lods
xor
or
pop
inc
add
add
fdivr
(bad)
inc
add
add
(bad)
jmp
add
add
cmp
cmps
sub
fwait
and
add
lock
and
popa
cmp
shr
add
add
xor
add
add
add
add
push
and
add
add
cmp
add
add
and
js
lahf
cmp
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
cmp
add
or
scas
add
add
or
add
dec
add
dec
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
imul
add
lahf
add
add
add
xchg
(bad)
(bad)
(bad)
jns
add
and
add
add
cmp
pop
(bad)
adc
cmp
add
add
and
add
add
cmp
add
add
and
and
sbb
sub
popf
add
add
and
loop
pop
and
aam
popa
cmp
sbb
sub
jg
add
cmp
and
add
push
cmp
(bad)
jmp
and
sbb
cmp
add
add
adc
cmp
add
push
and
add
add
add
add
or
add
cmp
(bad)
(bad)
jmp
or
add
add
xchg
and
fild
popa
cmp
add
add
and
add
add
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
outs
cli
in
and
retf
and
inc
or
add
jle
(bad)
inc
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
jmp
add
add
sub
lods
(bad)
(bad)
(bad)
cmp
or
cmp
jmp
or
add
cmp
or
add
add
cmp
dec
adc
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
or
add
cmp
(bad)
inc
pop
bound
pusha
or
push
add
add
dec
(bad)
(bad)
jmp
pop
outs
cli
in
and
add
ret
cmc
and
(bad)
inc
shr
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
pop
sub
xchg
add
add
and
add
cmp
add
cmp
add
lea
add
add
add
add
add
sub
add
push
and
test
jl
(bad)
popa
cmp
add
add
add
stos
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
int
(bad)
inc
jnp
add
add
cmp
sub
add
and
add
add
mov
(bad)
jmp
sti
ror
add
add
jge
add
add
or
add
sub
xchg
(bad)
(bad)
jmp
and
enter
pop
xor
push
pop
inc
add
add
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
jmp
add
add
cmp
(bad)
inc
push
jge
add
add
pop
add
add
push
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
pop
sub
arpl
add
and
add
add
sub
add
push
and
dec
xor
mov
push
je
cmp
add
cwde
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
add
add
mov
add
cmp
(bad)
(bad)
jmp
and
jbe
enter
das
icebp
popa
and
add
add
add
add
add
(bad)
(bad)
call
push
add
add
mov
add
cmp
test
(bad)
jmp
add
sbb
cmp
add
add
mov
mov
es
and
cmp
pop
popa
cmp
push
jge
add
add
add
add
cmp
(bad)
(bad)
cmp
add
add
add
add
add
mov
add
cmp
(bad)
(bad)
(bad)
cmp
push
jge
add
add
or
add
sub
pop
(bad)
(bad)
jmp
add
add
push
and
add
add
push
(bad)
(bad)
inc
and
push
fimul
aam
popa
cmp
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
add
add
jnp
add
add
imul
add
add
add
add
add
imul
and
cmp
add
add
add
test
add
cmp
and
add
add
mov
add
cmp
add
add
sbb
add
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jl
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
mov
add
adc
add
push
and
add
cmp
xchg
cmp
and
pusha
idiv
and
pop
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
push
cmp
add
and
or
add
and
enter
es
and
imul
(bad)
(bad)
jmp
pop
and
fcomp
and
cmp
push
jge
add
add
mov
add
and
add
dec
add
dec
add
add
add
add
dec
(bad)
(bad)
dec
dec
add
add
add
jl
add
pushf
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
jnp
add
add
jae
(bad)
jmp
add
add
cmp
jnp
add
add
jnp
add
add
or
sub
sub
add
and
add
add
test
(bad)
inc
and
and
mov
popa
cmp
(bad)
(bad)
inc
cmp
add
cmp
add
add
and
add
add
mov
add
cmp
(bad)
jmp
and
(bad)
(bad)
inc
add
add
add
sub
add
or
add
cmp
(bad)
(bad)
jmp
xchg
lds
add
add
sbb
es
and
popa
cmp
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
add
idiv
(bad)
jmp
adc
push
add
add
adc
add
sub
es
and
add
add
cmp
add
add
or
jle
into
xchg
pop
and
cmp
sub
add
add
rol
add
add
add
add
fwait
add
add
or
add
cmp
and
mov
gs
popa
cmp
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
cmp
add
add
and
add
add
mov
add
cmp
add
add
add
add
jnp
add
add
mov
add
and
add
add
inc
add
add
pop
aas
pusha
dec
and
add
xlat
xchg
jg
and
add
push
add
add
add
or
push
add
add
pop
add
add
mul
xor
in
dec
push
popa
and
inc
or
add
ret
(bad)
(bad)
push
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
daa
add
add
add
add
add
add
add
add
sub
retf
add
add
and
fs
pop
and
add
(bad)
retf
and
(bad)
dec
and
and
add
scas
popa
cmp
pop
pop
adc
and
mov
add
cmp
cmp
add
add
or
add
add
push
cmp
add
or
pop
or
mov
and
cmp
popa
cmp
(bad)
inc
add
add
add
add
add
sub
jecxz
(bad)
jmp
and
add
add
inc
add
add
jnp
add
add
pop
pop
pop
or
add
add
cmp
add
add
and
aaa
and
add
jo
push
sub
(bad)
inc
inc
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
stc
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
std
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
call
(bad)
(bad)
call
add
add
or
add
sub
mov
(bad)
jmp
and
hlt
ss
xchg
(bad)
(bad)
jmp
add
adc
or
pop
add
add
add
adc
add
push
sub
mov
add
cmp
and
add
add
test
add
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
and
add
sub
pop
add
add
push
add
add
jnp
mov
and
add
xchg
dec
daa
clc
and
cmovl
pop
popa
cmp
add
add
test
add
and
add
add
sub
add
cmp
jnp
add
add
jnp
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
jmp
and
iret
(bad)
(bad)
jmp
rep
pop
push
and
call
pop
inc
add
add
fdivr
(bad)
dec
(bad)
(bad)
call
add
add
add
add
push
cmp
pop
and
mov
and
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
and
add
add
jns
add
add
add
add
pop
pop
pop
or
add
add
sub
pop
add
add
push
add
add
add
lods
add
add
sub
ins
add
add
and
add
sub
aaa
add
add
xor
add
and
cdq
and
xlat
jg
popa
and
add
add
ins
add
add
add
loopne
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
and
iret
(bad)
(bad)
(bad)
cmp
add
add
add
or
push
add
add
mov
(bad)
inc
and
mov
pop
and
fiadd
(bad)
(bad)
inc
jnp
add
add
loopne
sub
xor
add
add
add
add
sub
es
sub
es
add
lea
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
push
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
cmp
add
add
push
and
addr16
xchg
(bad)
bnd
popa
cmp
jnp
add
add
or
add
add
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
mov
(bad)
(bad)
jmp
add
add
add
add
pop
add
add
int
(bad)
inc
jnp
add
add
inc
mov
xor
add
and
add
cmp
sbb
and
and
adc
mov
cmp
add
add
push
jge
add
add
add
mov
(bad)
jmp
inc
dec
and
jge
in
popa
and
pop
add
add
(bad)
(bad)
jmp
add
and
add
mov
(bad)
(bad)
dec
add
sldt
add
add
add
cmp
(bad)
(bad)
cmp
add
sub
and
push
mov
pop
and
cmp
and
add
pop
jge
add
add
push
add
add
pop
(bad)
(bad)
jmp
push
and
imul
and
movs
xor
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
(bad)
(bad)
jmp
pop
push
jno
cmp
(bad)
jmp
adc
or
pop
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
sbb
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
push
jge
add
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
pop
or
add
add
adc
or
push
add
add
add
sub
es
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
sub
es
add
popf
add
push
sub
adc
or
add
add
adc
add
push
jle
add
add
push
cmp
add
add
dec
scas
push
xlat
and
and
pop
inc
or
add
mov
add
lds
add
fwait
add
add
add
and
add
add
add
add
(bad)
(bad)
dec
add
add
rol
add
adc
and
popa
pop
test
and
jmp
xlat
popa
cmp
adc
mov
call
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
iret
add
add
add
add
sub
ret
mov
call
adc
and
aas
or
popa
cmp
(bad)
call
xchg
add
push
es
cli
imul
cmp
(bad)
(bad)
call
pop
and
push
outs
pop
and
cs
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
sub
add
and
jle
fnstcw
or
or
adc
mov
(bad)
(bad)
(bad)
call
pop
and
and
mov
jmp
(bad)
call
or
cmp
(bad)
call
add
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
cmp
add
or
ss
pop
or
or
add
sbb
add
call
cmp
(bad)
(bad)
inc
jle
add
add
sub
add
add
ins
xchg
pushf
sub
push
and
add
xchg
pop
pop
pop
adc
inc
add
adc
or
mov
add
adc
add
push
jle
add
add
add
add
push
and
jns
mul
popa
and
pop
inc
or
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
int
add
push
or
adc
aad
or
cmp
pop
and
pop
aaa
sahf
pop
and
cmp
or
add
pop
and
cmp
rcr
je
adc
mov
(bad)
call
add
add
add
inc
nop
sti
in
cmp
(bad)
inc
popa
push
pop
push
popa
inc
add
add
outs
add
add
mov
cmp
cmp
(bad)
call
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
sub
cmp
(bad)
(bad)
call
pop
and
dec
dec
retf
pop
and
cmp
(bad)
call
cwde
add
push
and
jbe
mov
cmc
(bad)
(bad)
call
add
add
cmp
(bad)
call
push
adc
cmp
inc
mov
add
sbb
fwait
add
push
or
adc
outs
(bad)
(bad)
inc
pop
pop
or
add
add
and
pop
cmp
add
add
push
and
add
add
add
inc
(bad)
(bad)
call
or
repnz
(bad)
call
add
add
xchg
pop
adc
sub
(bad)
inc
jne
add
add
sbb
add
sbb
(bad)
inc
adc
or
mov
add
adc
add
sub
es
jle
add
add
push
and
jae
push
and
adc
pop
or
or
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
cmp
add
add
popa
pop
dec
pop
push
popa
inc
add
add
jmp
add
and
mov
cdq
add
push
adc
and
add
xchg
and
adc
push
call
pop
and
and
add
add
add
cmp
(bad)
call
or
push
pop
adc
mov
(bad)
call
or
call
or
inc
popa
cmp
(bad)
call
add
add
add
pop
add
add
(bad)
inc
add
pop
add
add
add
mov
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
pop
jmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
mov
pop
and
(bad)
js
popa
cmp
(bad)
(bad)
call
or
or
or
pop
and
cmp
(bad)
(bad)
call
or
cwde
popf
aaa
inc
pop
and
mov
mov
cmp
(bad)
(bad)
call
cmp
(bad)
call
sbb
add
inc
mov
add
sbb
pushf
add
push
or
add
inc
pop
pop
or
mov
add
or
and
add
dec
or
or
pop
cmp
add
adc
pop
push
sub
or
repnz
(bad)
inc
jne
add
sbb
pop
or
add
inc
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
stos
add
push
sub
adc
push
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
add
jb
out
and
and
pop
inc
or
add
xor
add
rol
add
test
(bad)
(bad)
(bad)
mov
add
add
add
add
add
retf
add
add
pop
push
jle
add
add
scas
add
add
add
add
adc
add
add
cmps
add
add
scas
les
(bad)
call
movs
add
push
sbb
add
jb
out
cmp
adc
pop
and
(bad)
neg
push
or
shl
(bad)
(bad)
call
add
or
add
or
add
pop
add
jb
(bad)
jmp
add
or
add
mov
add
add
add
add
add
jnp
add
and
dec
(bad)
cmp
(bad)
(bad)
call
or
rcl
and
(bad)
call
pop
and
iret
pop
and
out
popa
cmp
(bad)
(bad)
call
add
add
bound
(bad)
call
push
pop
xor
(bad)
(bad)
call
pop
or
add
jne
(bad)
inc
mov
add
sbb
mov
add
sbb
cmps
add
push
or
push
and
add
xchg
and
add
dec
(bad)
(bad)
inc
pop
pop
or
or
sbb
add
cmp
(bad)
dec
sbb
sldt
add
push
and
adc
and
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
sbb
add
push
(bad)
(bad)
inc
adc
or
scas
add
add
add
adc
add
push
jle
add
add
push
and
mov
fidiv
call
pop
inc
or
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
push
add
add
fiadd
add
jle
add
add
pop
adc
and
arpl
sbb
popa
cmp
and
in
stos
pop
and
pusha
cmp
cmp
or
adc
test
call
and
fcmovnbe
pop
and
cmp
call
movs
add
push
and
data16
add
popa
pop
and
popa
inc
add
add
imul
add
(bad)
or
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
xchg
add
add
sub
adc
call
or
shr
in
adc
(bad)
(bad)
call
adc
mov
loopne
(bad)
call
push
pop
pop
xchg
sbb
call
or
adc
inc
mov
add
sbb
sub
adc
and
add
add
(bad)
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
pop
xchg
sbb
cmp
(bad)
(bad)
call
adc
inc
je
add
sbb
push
adc
inc
adc
push
add
add
sub
es
jle
add
add
add
repnz
mov
and
repz
popa
and
pop
inc
or
add
loope
add
imul
add
xor
add
into
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
inc
and
mov
popa
cmp
or
cmps
clc
mov
and
ins
pop
adc
xchg
(bad)
(bad)
call
add
add
add
add
pop
das
mov
inc
popa
pop
pop
pop
push
popa
inc
add
add
add
add
pop
ficom
(bad)
cmp
(bad)
call
or
add
movs
add
add
and
movs
push
mov
call
or
js
retf
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
inc
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
mov
(bad)
inc
fadd
fnstcw
stc
(bad)
(bad)
call
or
pop
sub
sbb
xor
(bad)
call
add
add
call
add
add
or
inc
mov
add
sbb
test
pop
jle
add
add
jg
push
add
add
jg
add
das
pop
pushf
pop
or
and
pop
or
inc
sbb
or
add
pop
or
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmps
add
push
sub
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
mov
add
sub
adc
push
add
add
add
add
push
jle
add
add
add
loop
dec
loop
xchg
popa
and
pop
inc
or
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
jle
add
add
push
adc
and
mov
cmp
aas
lea
movs
(bad)
(bad)
inc
jle
add
add
nop
add
add
add
add
nop
add
add
add
add
pop
push
popa
inc
add
add
ret
add
cmp
cmp
(bad)
call
or
lods
loop
xor
lock
cmps
adc
cmp
(bad)
call
or
rcr
and
pop
and
cmp
(bad)
call
add
add
add
add
xchg
icebp
pusha
icebp
cmp
(bad)
(bad)
call
add
or
add
je
add
pop
(bad)
(bad)
push
add
add
push
add
add
add
add
add
add
add
add
and
mov
call
or
shr
in
out
(bad)
call
add
add
and
dec
not
popa
mov
(bad)
call
adc
or
fs
and
pop
and
push
(bad)
(bad)
call
or
jne
(bad)
call
add
jns
(bad)
inc
mov
add
sbb
sub
pop
pop
or
and
add
or
mov
add
or
mov
add
pop
or
pop
pop
cmp
sbb
(bad)
(bad)
call
cmp
(bad)
(bad)
call
push
and
adc
pop
ds
pop
adc
sub
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
xchg
(bad)
inc
add
adc
or
ins
add
add
add
push
jle
add
add
add
add
push
and
and
and
inc
pop
add
add
add
add
add
add
add
iret
(bad)
(bad)
call
add
add
xchg
add
add
push
pop
imul
sbb
call
or
add
add
add
aas
(bad)
sbb
call
add
or
add
imul
add
add
mov
add
add
add
mov
add
add
add
mov
add
sar
ins
(bad)
(bad)
inc
push
popa
inc
add
add
and
add
and
sub
(bad)
cmp
(bad)
call
adc
or
xchg
je
retf
(bad)
out
into
imul
adc
and
cmp
(bad)
call
push
and
pop
dec
pop
adc
jnp
(bad)
inc
mov
add
sbb
mov
add
sbb
mov
add
push
pop
pop
or
add
add
or
cdq
add
add
stos
add
add
sbb
pop
aas
or
add
sbb
add
inc
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
ds
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
daa
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
ret
push
sub
adc
or
mov
add
adc
add
push
jle
add
add
push
and
dec
mov
popaw
and
pop
inc
or
add
test
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
jecxz
add
adc
and
add
add
adc
and
xor
leave
call
adc
and
aad
retf
call
cmp
inc
or
add
and
add
and
add
mov
add
jb
add
xchg
add
add
add
add
add
mov
add
mov
add
bound
add
sti
add
add
cmp
and
dec
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
pop
and
and
popa
cmp
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
xchg
lea
and
sbb
(bad)
call
adc
xchg
mov
and
fwait
pop
popa
cmp
(bad)
call
shr
(bad)
call
mov
and
sub
out
(bad)
call
or
xchg
cdq
jg
cmp
(bad)
(bad)
call
push
pop
adc
call
push
adc
inc
mov
add
sbb
mov
adc
and
adc
pop
dec
xchg
pop
adc
inc
pop
pop
or
dec
or
add
push
add
add
add
sbb
pop
aas
sldt
add
pop
and
adc
call
push
and
add
add
xchg
pop
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
and
aas
cli
sbb
pop
pop
or
or
add
rol
add
add
jae
add
mov
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
pop
and
xor
jge
mov
cmp
mov
and
(bad)
(bad)
call
or
add
mov
adc
cmp
(bad)
(bad)
inc
sub
add
add
imul
add
and
mov
imul
call
pop
and
inc
cmps
out
pop
and
cmp
(bad)
call
add
or
add
test
add
jo
add
test
add
push
add
add
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
add
in
sbb
xor
pop
(bad)
(bad)
call
adc
mov
scas
cmp
or
(bad)
call
push
and
add
add
add
loope
(bad)
call
pop
or
add
xchg
(bad)
(bad)
inc
mov
add
sbb
add
mov
pop
or
add
jge
(bad)
inc
pop
pop
or
into
add
add
and
pop
cmp
add
add
adc
pop
(bad)
(bad)
call
call
push
and
add
add
add
add
inc
(bad)
(bad)
inc
jne
add
add
pop
or
add
xor
(bad)
call
xor
mov
add
sbb
add
sub
es
jle
add
add
push
cmp
add
and
xor
and
pop
inc
or
add
sbb
add
fadd
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xlat
add
add
pop
and
(bad)
loope
pop
and
push
cwde
popa
cmp
or
or
add
repnz
push
and
add
add
add
retf
cmp
pop
and
xchg
dec
pop
and
cmp
(bad)
call
mov
sbb
add
in
(bad)
(bad)
(bad)
call
add
add
add
pop
add
add
add
outs
add
add
add
add
(bad)
push
add
add
add
add
add
mov
(bad)
(bad)
mov
lahf
scas
mov
inc
popa
pop
ds
push
popa
inc
add
add
sbb
add
add
push
ror
call
pop
and
sbb
jbe
aad
popa
cmp
(bad)
(bad)
call
cmp
(bad)
call
cmp
(bad)
jmp
or
add
add
add
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
pop
pop
or
jle
add
or
add
adc
or
or
cmp
sbb
(bad)
(bad)
call
or
repnz
(bad)
call
or
add
inc
sub
or
add
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
adc
add
push
add
add
les
add
sub
add
adc
or
or
add
add
add
sub
es
add
mov
adc
or
or
add
add
add
sub
es
add
enter
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
aam
add
sub
adc
or
aad
add
sbb
add
sub
es
and
je
add
and
mov
sub
sub
add
jle
add
add
push
and
add
add
pop
add
add
adc
add
pop
or
pop
cmp
and
add
add
inc
add
add
jbe
and
add
add
cmp
add
add
jle
add
add
add
add
and
add
adc
add
xchg
pop
adc
xchg
add
add
cmp
(bad)
(bad)
call
add
add
clc
add
add
add
add
and
add
add
call
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
or
inc
xchg
push
pop
dec
(bad)
popa
cmp
add
adc
and
in
js
and
mov
popa
cmp
add
adc
pop
adc
add
add
adc
add
add
cmp
loop
adc
cmp
add
adc
imul
add
add
add
add
add
add
repnz
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
add
push
sub
add
push
cmp
add
and
add
add
xor
add
push
pop
pop
or
or
add
sub
add
push
cmp
add
add
cmp
sub
add
push
cmp
(bad)
(bad)
jmp
or
push
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
movs
add
add
(bad)
(bad)
dec
add
add
(bad)
push
(bad)
(bad)
fild
add
xchg
(bad)
push
(bad)
jmp
(bad)
(bad)
push
add
add
adc
add
cmp
sti
(bad)
(bad)
call
adc
popf
loopne
and
dec
add
add
or
cmps
mov
ds
iret
xchg
popa
cmp
add
add
add
pop
and
add
add
retf
jmp
add
add
cmp
(bad)
jmp
fcom
add
add
or
push
add
add
inc
(bad)
(bad)
jmp
mov
or
popa
and
pop
inc
or
add
xchg
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
retf
push
and
add
cmp
(bad)
(bad)
call
or
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
sbb
or
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
pop
adc
dec
std
(bad)
jmp
and
mov
(bad)
jmp
cmp
add
adc
adc
add
add
sbb
add
sub
es
jle
add
add
push
and
xchg
fldenv
xchg
loop
call
pop
inc
or
add
add
add
add
add
add
add
add
add
jns
add
mov
add
ret
add
add
add
sbb
add
adc
pop
push
xchg
and
add
add
add
out
add
pop
and
call
call
add
add
add
data16
add
add
jmp
add
xlat
add
add
add
add
add
add
add
dec
add
add
add
cmc
add
add
add
mov
(bad)
(bad)
call
or
and
idiv
mov
(bad)
(bad)
call
push
and
pop
ds
adc
mov
call
or
or
(bad)
(bad)
call
adc
jmp
daa
pop
and
sub
or
(bad)
call
retf
add
push
es
push
xchg
repz
(bad)
(bad)
inc
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
jns
jae
cmp
(bad)
(bad)
call
or
jp
mov
adc
(bad)
(bad)
call
or
ds
mov
pop
and
mov
mov
sub
pop
adc
and
and
dec
mov
cmp
pop
pop
imul
(bad)
call
sbb
add
inc
mov
add
sbb
rol
add
or
adc
inc
pop
pop
or
sub
and
add
or
inc
or
sbb
add
add
pop
jle
add
add
pop
xchg
jle
add
add
inc
xchg
pop
pop
es
pushf
pop
pop
cmp
adc
and
adc
call
or
repnz
(bad)
call
adc
inc
je
add
add
pop
adc
call
xor
adc
add
sbb
add
sub
es
push
sub
add
push
cmp
add
and
add
add
pop
add
add
push
and
and
adc
add
add
or
dec
sub
and
xor
cmp
add
add
int3
add
push
cmp
and
add
add
fadd
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
add
pop
jo
loop
and
pop
inc
or
add
ret
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
and
add
push
cmp
cmp
add
pop
or
add
add
(bad)
add
push
cmp
add
and
add
or
or
add
sub
add
push
cmp
add
and
and
add
add
inc
add
add
add
jb
(bad)
inc
add
pop
pop
push
popa
inc
add
add
inc
add
and
add
add
sbb
add
adc
and
fisub
pop
and
and
cmp
call
or
push
add
add
cld
add
add
sbb
outs
into
cmp
(bad)
(bad)
call
add
add
add
xor
add
mov
(bad)
call
add
leave
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
(bad)
push
adc
add
cmp
push
add
add
push
and
add
add
(bad)
add
push
cmp
and
int3
(bad)
(bad)
call
or
es
(bad)
in
and
push
sbb
(bad)
(bad)
jle
add
add
pop
and
ins
add
add
inc
or
sbb
cmp
and
add
add
push
add
add
pop
(bad)
(bad)
jmp
rol
add
or
push
add
add
add
add
ja
push
aad
jo
(bad)
call
inc
outs
into
cmp
(bad)
call
pop
and
and
add
add
loope
(bad)
call
cmp
add
add
or
add
dec
or
dec
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
dec
(bad)
(bad)
jmp
add
test
(bad)
call
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
or
(bad)
(bad)
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
sldt
add
cdq
(bad)
(bad)
call
adc
call
cmp
(bad)
(bad)
call
pop
and
adc
add
ja
(bad)
(bad)
cmp
je
add
add
adc
and
pop
push
pop
adc
add
push
(bad)
(bad)
call
or
add
add
cmp
(bad)
jmp
adc
pop
aaa
xchg
and
adc
add
sub
ss
(bad)
inc
add
adc
or
bound
add
sbb
add
sub
es
jle
add
add
add
fisub
xchg
sub
or
pop
inc
or
add
retf
(bad)
(bad)
(bad)
cmp
add
call
add
add
add
add
add
xchg
add
add
adc
jnp
jae
cmp
add
push
popa
inc
add
add
ja
add
and
mov
(bad)
(bad)
call
or
adc
xchg
and
call
or
xchg
push
rcr
pop
jo
popa
cmp
adc
or
cmp
call
popa
cmp
(bad)
call
add
or
add
popf
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
das
sbb
call
cmp
(bad)
call
add
dec
pop
adc
mov
(bad)
inc
mov
add
sbb
mov
add
sbb
rol
add
push
pop
pop
or
xchg
add
lock
add
add
add
sbb
pop
aas
or
add
sbb
(bad)
(bad)
call
add
lahf
add
add
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
int
add
sub
lock
(bad)
inc
add
xor
add
add
add
push
jle
add
add
add
inc
and
jmp
pop
inc
or
add
cmps
add
add
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
adc
or
xchg
(bad)
call
and
mov
(bad)
call
add
pop
adc
mov
xor
mov
push
add
add
push
sbb
add
or
outs
xchg
mov
popa
cmp
add
pop
je
push
popa
inc
add
add
dec
add
add
push
jmp
(bad)
(bad)
call
or
lods
sbb
sub
call
add
or
add
sub
add
xor
add
pop
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
xchg
(bad)
call
push
and
cmp
(bad)
call
adc
mov
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
xor
pop
pop
or
sbb
sbb
pop
aas
or
add
sbb
add
mov
(bad)
call
push
and
add
add
add
out
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
into
add
push
sub
daa
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
xlat
add
push
sub
adc
or
or
add
add
add
sub
es
add
fadd
add
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sub
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
das
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
add
xor
lds
add
sbb
add
push
jle
add
add
push
and
jnp
es
popa
and
pop
inc
or
add
sub
add
jecxz
add
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
fiadd
add
rcr
add
push
es
adc
pop
cmp
or
popa
pop
xor
pop
and
or
cwde
(bad)
(bad)
inc
add
pop
jge
push
popa
inc
add
add
cmps
add
add
ret
call
call
or
aad
ins
push
pop
and
mov
les
push
(bad)
call
add
add
add
int3
add
add
add
add
add
aam
add
jne
(bad)
call
add
add
add
add
add
add
inc
xchg
jg
cmp
(bad)
(bad)
call
or
adc
adc
sbb
(bad)
(bad)
jle
add
add
pop
adc
and
and
cmp
(bad)
(bad)
call
or
and
iret
mov
and
sbb
(bad)
(bad)
call
adc
sbb
loopne
(bad)
call
push
and
add
xchg
and
add
add
loope
(bad)
inc
or
pop
and
add
add
add
add
dec
(bad)
(bad)
inc
mov
add
sbb
in
add
or
adc
inc
pop
pop
or
pop
or
add
push
or
or
cmp
adc
and
add
xchg
and
adc
call
repz
(bad)
call
adc
inc
sub
push
pop
js
and
add
add
add
inc
add
adc
or
xor
add
push
add
adc
add
push
and
add
add
xchg
add
cmp
add
shl
add
push
and
add
add
jno
add
and
push
cmp
mov
and
pop
inc
or
add
test
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
add
es
pop
or
add
push
add
add
add
add
push
pop
push
(bad)
call
adc
add
and
add
add
jmp
add
sbb
add
add
(bad)
add
add
adc
add
jmp
add
es
add
(bad)
(bad)
inc
add
inc
pop
push
popa
inc
add
add
xchg
add
and
add
add
jmp
add
cmp
and
add
add
or
pop
pop
cmp
and
jg
add
adc
and
add
and
cmp
(bad)
(bad)
call
or
add
add
cmp
add
sbb
add
add
push
add
add
(bad)
retf
mov
(bad)
(bad)
call
or
add
or
iret
(bad)
(bad)
call
adc
add
add
add
test
add
push
pop
pop
or
sldt
add
cmp
add
add
cmp
add
pop
je
add
add
adc
and
add
add
add
add
adc
jmp
add
cmp
add
add
out
add
jle
add
add
push
and
add
add
aad
add
adc
and
and
out
push
(bad)
(bad)
jle
add
add
pop
and
add
add
cmp
and
scas
ror
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
(bad)
(bad)
in
std
(bad)
call
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
call
add
and
add
add
add
add
cmp
add
out
std
(bad)
call
or
(bad)
mov
and
popf
xchg
(bad)
(bad)
call
or
adc
idiv
enter
adc
and
and
pop
popa
cmp
push
and
add
add
call
cmp
or
add
dec
or
dec
add
add
add
(bad)
(bad)
(bad)
aas
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
push
(bad)
jmp
add
add
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
std
(bad)
(bad)
mov
std
(bad)
call
std
(bad)
dec
(bad)
(bad)
call
std
(bad)
dec
add
add
(bad)
(bad)
cmp
add
and
add
cmp
cmp
push
sub
add
push
cmp
and
add
add
cmp
(bad)
cmp
(bad)
(bad)
jmp
in
add
or
or
add
pop
cmp
(bad)
jmp
cmp
xor
add
add
adc
add
push
jle
add
add
push
and
cwde
pop
mov
or
or
or
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
ret
add
push
and
adc
imul
shl
add
push
and
(bad)
(bad)
call
adc
data16
pop
and
cmp
inc
or
add
or
add
and
add
add
add
cmps
(bad)
(bad)
call
add
add
add
add
add
test
add
test
add
int3
add
add
or
push
dec
(bad)
(bad)
inc
popa
pop
aas
pop
push
popa
inc
add
add
cmp
add
and
xor
(bad)
call
or
push
pop
and
add
imul
jle
add
add
pop
adc
and
stc
fcomp
xchg
jae
daa
popa
cmp
(bad)
call
push
and
add
ss
(bad)
call
pop
or
add
inc
mov
add
sbb
out
add
or
or
add
inc
pop
pop
or
les
add
or
les
add
or
add
sbb
pop
aas
sbb
add
adc
and
adc
and
add
add
adc
(bad)
call
pop
and
add
add
jmp
je
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
and
movs
xor
or
or
or
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
mov
add
sbb
add
or
idiv
inc
and
cmp
or
add
add
xchg
pop
adc
shr
cmc
ret
cmp
popa
pop
aas
pop
push
popa
inc
add
add
jb
add
and
jo
lods
cmp
(bad)
call
add
or
add
inc
add
add
add
mov
add
add
add
mov
(bad)
(bad)
call
add
inc
add
add
mov
je
cmp
call
adc
mov
jg
cmp
(bad)
(bad)
call
or
push
mov
mov
and
mov
popa
cmp
(bad)
call
or
pushf
jno
neg
jg
push
stc
popa
cmp
(bad)
(bad)
call
call
add
add
(bad)
(bad)
inc
mov
add
sbb
out
add
push
pop
pop
or
les
add
or
les
add
or
xor
add
pop
sbb
pop
aas
adc
push
and
add
add
add
add
inc
(bad)
(bad)
call
add
add
jmp
sbb
or
or
add
add
add
add
add
add
add
add
loop
add
sub
out
(bad)
(bad)
inc
add
adc
or
stos
add
add
add
sub
es
jle
add
add
add
add
fcmovu
fwait
popa
and
pop
inc
or
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
add
cmps
add
add
fild
add
sbb
adc
and
sub
sub
popf
popa
cmp
inc
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
div
nop
xchg
jno
(bad)
call
or
data16
pop
and
cmp
call
or
mov
and
cmp
(bad)
(bad)
jle
add
add
add
int3
fsubr
pop
and
sub
(bad)
(bad)
call
or
push
das
fs
pop
and
lods
popa
cmp
(bad)
call
or
imul
cmps
scas
cmp
(bad)
(bad)
call
add
or
jb
cmp
(bad)
inc
pop
push
popa
inc
add
add
or
add
and
mov
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
adc
add
or
and
pop
cmp
add
add
or
call
add
pop
xchg
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
sub
push
add
xor
add
add
add
add
sub
es
add
in
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
hlt
add
push
sub
adc
or
add
add
add
sub
es
sub
es
pop
adc
and
add
repz
push
sub
add
lea
add
add
add
repz
push
sub
add
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
adc
add
push
sub
es
and
add
add
sbb
add
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
cmp
add
add
and
add
add
sar
(bad)
inc
sub
add
and
ret
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
xor
sub
add
add
add
sub
es
push
lea
add
add
inc
add
push
and
add
arpl
add
sub
dec
add
push
push
sub
add
push
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
and
add
and
and
cmp
cmp
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
adc
add
sbb
add
xchg
add
sbb
add
add
add
add
add
add
add
or
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
dec
add
add
or
add
add
and
add
cmp
sub
add
and
add
add
cmp
and
cmp
add
add
jne
inc
arpl
add
or
add
repz
and
cmp
add
sbb
xor
add
add
add
add
xor
add
mov
add
and
dec
(bad)
(bad)
dec
and
dec
jb
pop
and
shl
add
or
sub
and
dec
ja
cmp
add
add
inc
pop
add
add
add
lahf
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
fadd
jno
je
dec
sbb
or
add
add
(bad)
jmp
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
call
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
mov
(bad)
dec
and
or
xchg
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
inc
add
and
add
add
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
and
add
add
arpl
(bad)
jmp
add
adc
or
rol
add
add
adc
add
push
jle
add
add
push
and
dec
mov
mov
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
add
mov
inc
add
adc
and
add
add
add
scas
cmp
sti
add
push
es
clc
xor
cmp
add
push
popa
inc
add
add
mov
add
pop
popa
leave
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
inc
push
jge
repz
cmp
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
dec
pop
sti
mov
call
or
adc
int
adc
(bad)
call
push
and
adc
mov
dec
pop
and
cmc
(bad)
(bad)
call
or
stos
cs
or
and
push
scas
out
cmp
(bad)
(bad)
call
or
in
dec
imul
pop
and
dec
mov
(bad)
(bad)
call
or
mov
dec
and
jbe
push
popaw
cmp
and
cmp
(bad)
(bad)
call
sbb
add
inc
mov
add
sbb
sub
add
push
or
add
inc
pop
pop
or
add
add
daa
or
pop
or
or
add
pop
adc
call
pop
and
add
add
jmp
jne
add
add
push
adc
call
xor
add
add
add
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
push
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
hlt
add
add
or
les
jecxz
and
cmps
(bad)
(bad)
call
push
sbb
add
add
jns
pop
pop
and
push
iret
hlt
popa
cmp
or
stos
imul
cmp
(bad)
call
or
push
(bad)
pop
and
mov
(bad)
(bad)
(bad)
call
or
popf
stos
inc
push
pop
and
cmp
(bad)
call
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
data16
add
add
and
mov
(bad)
(bad)
call
push
pop
ins
xchg
adc
dec
cmp
(bad)
(bad)
inc
popa
pop
jne
push
popa
inc
add
add
sub
add
and
dec
popa
cmp
(bad)
(bad)
call
cld
add
push
es
or
add
jns
sar
(bad)
call
or
cmp
inc
dec
cmp
(bad)
(bad)
call
pop
and
addr16
cmp
or
adc
inc
mov
add
sbb
add
add
or
adc
inc
pop
pop
or
sub
pop
or
add
sbb
pop
aas
or
add
sbb
add
call
push
and
pop
adc
jmp
je
add
add
adc
and
add
add
add
call
xor
add
add
add
add
sub
es
add
add
add
xor
add
add
add
add
sub
es
add
push
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
adc
or
sldt
add
add
add
add
push
add
or
add
aaa
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
and
add
cmp
add
add
and
add
and
add
sub
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
cmp
add
add
and
add
add
sar
(bad)
jmp
cdq
add
add
iret
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
scas
(bad)
(bad)
push
add
push
sub
add
call
xor
add
add
push
jle
add
add
add
jmp
inc
pop
pop
mov
and
pop
inc
or
add
xor
add
daa
add
add
add
add
add
add
add
inc
add
add
(bad)
(bad)
call
add
add
enter
push
or
sub
in
jmp
call
adc
or
add
sub
or
popa
cmp
adc
mov
mov
xchg
(bad)
(bad)
call
or
push
dec
mov
pop
and
xor
cmp
push
add
add
push
adc
and
dec
mov
pop
and
je
popa
cmp
(bad)
call
add
or
add
and
add
jne
(bad)
jmp
add
and
add
lods
add
add
(bad)
inc
add
pushf
add
add
add
push
add
add
test
sub
adc
or
cmp
xchg
js
pushf
popa
cmp
(bad)
(bad)
dec
add
outs
pop
push
popa
inc
add
add
or
add
and
aaa
pop
mov
cli
(bad)
(bad)
call
add
push
(bad)
(bad)
call
push
and
adc
jnp
(bad)
inc
mov
add
sbb
add
add
add
add
add
push
push
pop
pop
or
mov
add
or
out
add
add
and
or
add
or
pop
pop
cmp
sbb
(bad)
(bad)
call
push
pop
adc
call
push
and
add
xchg
sbb
and
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
or
add
sub
dec
(bad)
(bad)
inc
add
adc
or
or
add
add
add
sub
es
add
adc
add
sub
adc
or
add
add
sub
es
add
add
push
add
adc
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
cmp
add
sub
adc
or
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
xor
add
add
add
add
adc
add
push
jle
add
add
add
cmp
test
and
pop
cmp
add
add
add
add
add
jecxz
add
add
add
add
add
nop
add
add
add
add
add
cmp
add
add
adc
add
sbb
mov
lods
(bad)
(bad)
inc
add
pop
inc
pop
push
popa
inc
add
add
mov
xor
cmp
or
jno
cmp
cmp
add
pop
xchg
or
adc
or
jecxz
jnp
popa
cmp
call
push
and
mov
xchg
jge
cmp
(bad)
(bad)
jle
add
add
add
leave
aam
pop
and
and
and
aas
(bad)
(bad)
call
or
cli
cmp
(bad)
(bad)
call
push
and
jecxz
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
adc
add
ds
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
sub
(bad)
call
add
add
add
and
add
adc
add
test
add
and
loopne
(bad)
call
or
fwait
(bad)
(bad)
call
adc
es
pop
or
(bad)
(bad)
inc
mov
add
sbb
push
add
push
or
add
cmp
pop
pop
or
jle
add
add
in
add
jle
add
add
in
add
xchg
add
mov
add
pop
pushf
pop
cmp
add
add
or
call
add
push
add
add
jmp
inc
(bad)
(bad)
inc
jne
add
add
adc
add
add
add
cmp
(bad)
(bad)
inc
add
adc
or
add
add
and
add
sub
es
jle
add
add
push
jle
add
add
pop
cmp
add
and
or
pop
fsub
adc
pop
or
or
add
mov
add
add
add
add
add
fadd
add
sbb
add
sub
add
cmp
add
add
add
add
add
add
jmp
mov
and
mov
stos
(bad)
(bad)
call
adc
add
and
fwait
(bad)
(bad)
call
push
pop
xor
and
mov
(bad)
call
or
mov
jl
(bad)
inc
push
popa
inc
add
add
xchg
add
add
mov
pop
(bad)
(bad)
call
or
add
and
stos
fadd
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
cmp
(bad)
fild
add
pusha
(bad)
(bad)
call
dec
cmps
(bad)
cmp
(bad)
(bad)
call
push
pop
pop
xchg
adc
or
rcr
fld
out
(bad)
call
or
sub
pop
and
cmp
(bad)
(bad)
call
push
and
cmp
(bad)
(bad)
call
cmp
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
pop
add
push
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
sbb
add
or
push
pop
setno
push
pop
sub
xor
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
ins
xchg
pop
bound
in
(bad)
(bad)
call
push
and
add
add
add
inc
sub
pop
and
push
(bad)
(bad)
(bad)
call
xor
add
add
add
add
push
jle
add
add
add
add
push
cmp
add
add
inc
dec
rcr
dec
mov
adc
adc
pop
or
or
add
mov
add
add
add
add
add
xchg
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
repz
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
cmp
add
inc
add
and
jge
inc
cmp
(bad)
call
pop
and
and
or
data16
(bad)
call
adc
and
and
push
(bad)
(bad)
call
pop
and
and
pop
and
cmp
(bad)
call
pop
and
aad
jae
and
cmp
(bad)
(bad)
call
add
dec
pop
adc
pop
and
and
cmp
(bad)
(bad)
call
adc
test
xchg
dec
cmp
(bad)
(bad)
inc
popa
pop
dec
pop
push
popa
inc
add
add
add
add
add
and
inc
jecxz
cmp
(bad)
(bad)
call
or
push
and
and
add
add
add
movs
mov
jb
retf
(bad)
(bad)
call
cmp
cmp
or
or
add
idiv
(bad)
inc
mov
add
sbb
sbb
add
or
or
add
loope
(bad)
inc
mov
add
sbb
sbb
add
or
push
pop
dec
xchg
pop
outs
pop
adc
(bad)
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
mov
(bad)
dec
sbb
sldt
add
push
and
add
add
(bad)
(bad)
call
push
and
add
add
jmp
sub
or
add
cmp
inc
add
xor
add
add
add
add
sub
es
add
sbb
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
and
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
aas
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
daa
add
push
sub
adc
push
add
add
sub
es
jle
add
add
push
and
adc
shl
(bad)
fiadd
or
or
or
add
hlt
add
add
add
sbb
add
sub
add
fild
add
aas
add
add
(bad)
(bad)
inc
add
add
out
add
add
or
jns
ret
and
mov
scas
(bad)
(bad)
call
or
test
or
(bad)
(bad)
call
push
pop
cmp
adc
mov
(bad)
jle
add
add
pop
adc
and
inc
stc
pop
and
rol
outs
(bad)
(bad)
call
add
add
add
or
add
or
add
int3
add
add
add
jle
add
or
add
xor
add
add
add
lds
add
and
sub
add
push
jle
add
add
jp
sub
sbb
add
add
cmp
add
and
(bad)
fidivr
add
(bad)
call
and
add
adc
pop
jnp
pop
or
inc
or
cmp
(bad)
(bad)
call
or
pop
pop
push
add
(bad)
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
and
pop
ins
pop
adc
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
xor
and
add
add
or
or
cmp
push
adc
call
or
repnz
(bad)
call
adc
inc
je
add
sbb
adc
and
add
add
(bad)
(bad)
call
xor
add
add
add
add
adc
add
push
and
add
add
pop
add
add
je
add
or
add
add
pop
cmp
add
cmp
add
add
add
add
cmp
add
add
and
rol
add
push
popa
inc
add
add
stc
add
add
sub
add
sub
add
push
cmp
add
and
add
add
sub
add
cmp
add
add
test
add
popf
add
add
sbb
pop
aas
adc
add
and
add
add
fld
add
sbb
add
add
push
and
pop
ss
cmp
(bad)
(bad)
inc
sub
pop
pop
push
adc
add
cmp
pop
xor
sub
cmp
or
dec
jns
rcr
js
mov
popa
cmp
add
add
or
adc
add
cmp
push
and
adc
add
jne
add
cmp
(bad)
(bad)
jmp
mov
xor
and
adc
pop
or
inc
or
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
adc
add
cmp
add
add
add
add
push
and
add
add
sub
add
cmp
add
add
pop
or
add
cld
add
add
or
outs
adc
rcr
out
push
ins
popa
cmp
(bad)
call
or
js
sub
pop
and
cmp
(bad)
call
or
leave
punpckldq
pop
and
loope
popa
cmp
(bad)
call
and
add
and
add
add
mov
add
jle
add
add
pop
and
cmp
cmp
add
add
pop
pop
or
adc
add
cmp
adc
add
sub
add
cmp
add
cmp
add
cmp
add
add
add
add
push
or
add
add
cmp
add
adc
and
jne
popa
pop
and
or
popa
cmp
(bad)
(bad)
call
or
add
add
sub
add
cmp
add
add
and
push
inc
jge
ret
(bad)
(bad)
call
adc
dec
cmp
push
pop
pop
xchg
pop
popa
pop
cmp
(bad)
(bad)
call
add
and
add
add
push
or
dec
add
add
add
std
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
std
(bad)
push
(bad)
dec
call
add
cmp
and
add
add
cmp
and
jg
or
and
(bad)
call
add
add
(bad)
(bad)
call
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
cld
(bad)
jmp
(bad)
(bad)
inc
std
(bad)
jmp
or
add
pop
cmp
(bad)
jmp
cmp
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
inc
add
or
add
xor
add
add
daa
add
adc
add
push
and
add
add
add
add
add
add
sub
add
push
cmp
add
add
and
add
pop
cmp
add
es
and
xor
push
adc
and
inc
pop
add
add
add
add
add
rol
add
add
sahf
add
add
(bad)
(bad)
jmp
xor
add
sub
add
push
cmp
and
add
add
stc
add
add
mov
add
push
je
add
add
and
mov
xor
add
sub
add
push
cmp
add
add
add
add
cmp
add
add
or
add
add
pop
xchg
cmp
(bad)
(bad)
call
or
or
add
cmp
and
xchg
xchg
pop
and
cmp
(bad)
call
or
aaa
cmp
(bad)
inc
jne
add
add
lods
sbb
push
add
xor
add
pop
jo
and
push
add
sub
stos
add
add
fwait
add
add
and
add
add
pop
add
add
aad
lods
push
cmp
(bad)
(bad)
jmp
test
add
add
xor
add
and
add
and
add
pop
add
sub
sahf
add
add
lds
add
sub
add
sub
retf
add
in
add
add
or
add
or
mov
add
and
add
add
push
or
dec
add
add
add
add
or
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
or
add
jp
(bad)
call
add
xchg
add
add
add
leave
(bad)
(bad)
jmp
jge
jl
and
add
cli
sar
and
(bad)
dec
inc
or
add
xor
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
int3
(bad)
(bad)
jmp
pop
add
add
jp
(bad)
(bad)
cmp
add
add
add
mov
and
or
add
pop
(bad)
(bad)
jmp
mov
adc
(bad)
call
cmp
and
add
cmp
(bad)
(bad)
(bad)
add
add
push
add
add
fld
add
add
adc
cmp
and
add
add
cmp
add
add
and
xchg
ficom
popa
and
inc
add
add
(bad)
(bad)
inc
add
mov
add
test
add
cmp
add
add
add
add
dec
or
dec
add
add
add
std
(bad)
call
std
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
add
aad
(bad)
(bad)
cmp
add
adc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
cmp
adc
and
(bad)
pop
(bad)
pop
and
lods
popa
cmp
call
jle
add
add
push
add
add
add
add
push
add
add
add
and
add
pop
pushf
sub
lock
dec
das
cmp
(bad)
(bad)
inc
sub
add
add
add
sub
add
add
add
add
add
add
xor
add
add
add
add
sub
es
sub
es
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
loopne
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
fld
add
sub
add
sub
es
and
add
add
repnz
add
(bad)
out
add
or
xchg
add
xchg
and
or
add
add
cmp
add
add
or
or
add
pop
cmp
add
add
and
push
add
add
cmp
add
add
add
and
add
add
cmp
cmp
jne
add
add
jnp
add
add
mov
ret
add
or
add
cmp
add
add
jnp
add
add
or
and
and
push
and
dec
add
add
or
add
and
add
add
dec
add
add
ds
cmp
add
add
mov
cmp
add
add
cmp
add
add
jnp
add
add
and
add
add
adc
or
add
cmp
add
add
add
add
cmp
add
add
pop
(bad)
and
mov
popa
and
pop
inc
or
add
fwait
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
popa
add
add
add
add
(bad)
(bad)
call
add
add
cmp
add
add
mov
add
push
jne
add
add
jnp
add
add
cmp
add
cmp
add
add
jnp
add
add
adc
add
sbb
test
add
add
add
push
sub
add
push
and
add
add
jl
add
adc
pop
xchg
or
adc
add
sub
add
cmp
add
es
je
add
add
and
add
add
add
push
sub
add
push
and
add
add
inc
add
add
sub
jae
xor
cmp
add
or
sub
add
cmp
(bad)
jmp
and
add
add
sbb
add
adc
push
pop
and
adc
push
(bad)
(bad)
dec
inc
or
add
jae
add
cmp
(bad)
jmp
std
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
retf
add
add
mov
jne
add
add
jnp
add
add
sbb
add
and
add
add
or
and
add
add
mov
push
(bad)
inc
jne
add
add
jnp
add
add
outs
add
add
sub
add
sub
add
sub
and
add
add
jne
add
and
loope
dec
cmp
(bad)
call
ss
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
cmp
add
push
or
push
add
add
inc
add
add
or
xor
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
push
add
push
and
add
add
je
add
sub
add
sub
cmp
add
and
add
add
push
push
add
or
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
fdivrp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
cld
(bad)
jmp
(bad)
(bad)
(bad)
out
cld
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
or
xchg
(bad)
(bad)
call
or
sldt
add
mov
(bad)
call
or
adc
inc
add
push
cmp
(bad)
jmp
jle
add
add
and
add
cmp
(bad)
(bad)
cmp
(bad)
inc
jne
add
add
and
aas
sub
add
push
and
add
add
mov
or
add
and
add
add
cmp
(bad)
jmp
push
jne
add
add
cmp
add
sub
add
adc
or
add
add
adc
add
push
sub
es
and
add
add
pop
add
add
jne
add
add
stos
add
add
lea
add
sub
add
sub
and
add
add
inc
add
push
cmp
add
add
cmc
add
add
pop
jne
add
add
and
add
add
cmc
add
add
push
add
sub
add
add
add
add
cmp
add
add
je
add
add
and
sbb
add
add
add
push
and
add
add
sahf
add
add
push
add
sub
imul
add
add
fwait
add
add
adc
aaa
add
add
or
mov
add
add
add
add
and
jo
add
push
and
fadd
add
sub
add
sub
mov
add
and
add
add
pop
add
add
jle
add
or
add
add
or
add
cmp
add
add
add
jne
add
add
push
add
add
push
pop
inc
pop
pop
sub
add
sub
lds
add
and
add
add
adc
add
push
adc
or
add
sub
add
cmp
add
add
add
jne
add
add
nop
dec
sub
add
sub
add
add
aas
add
push
sub
add
cmp
or
add
cmp
add
add
add
je
add
sbb
add
and
add
add
mov
add
add
add
or
add
add
add
add
sub
add
push
cmp
add
jne
add
add
and
add
add
rol
add
push
add
sub
cmp
add
jge
add
add
add
outs
add
add
jnp
add
add
and
sub
add
push
sub
ja
add
cmp
add
add
and
add
add
inc
add
add
bound
add
pop
je
add
add
and
sbb
add
add
add
push
and
add
and
add
add
push
add
sub
sar
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
add
add
add
add
add
mov
(bad)
call
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
inc
add
sub
(bad)
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
pop
add
add
xchg
(bad)
(bad)
inc
jle
add
or
add
add
add
add
sub
add
push
cmp
(bad)
jmp
add
add
or
add
add
sldt
add
inc
add
push
cmp
jmp
cmp
add
pop
je
add
add
add
add
add
add
cmp
(bad)
inc
pop
lea
or
add
sbb
pop
sub
or
add
and
add
add
jecxz
add
sub
add
sub
add
inc
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
dec
jne
add
sbb
add
or
push
add
add
out
(bad)
(bad)
inc
jle
add
or
add
add
push
add
add
(bad)
(bad)
call
add
pop
adc
adc
retf
jmp
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
inc
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
das
add
add
add
adc
add
push
and
add
cmp
add
add
adc
cmp
add
adc
and
add
add
inc
pop
maxps
add
add
or
add
cmp
adc
cmp
or
cmp
add
xchg
and
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
pop
add
push
or
sbb
add
cmp
add
cmp
or
xor
adc
and
retf
sub
add
add
or
pop
add
push
and
add
add
or
add
pop
cmp
add
add
pop
adc
pop
cmp
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
adc
cmp
adc
add
dec
or
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
aas
add
add
add
add
(bad)
jmp
add
push
add
add
add
add
(bad)
call
add
add
add
popf
add
add
add
add
add
add
add
enter
stos
(bad)
(bad)
inc
add
add
sub
pop
add
add
and
add
add
ins
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
pop
(bad)
(bad)
inc
adc
push
or
push
add
add
cmp
(bad)
jmp
adc
and
add
xchg
pop
and
test
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
push
pop
or
xchg
or
pop
add
add
adc
(bad)
inc
or
pop
add
push
and
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
pusha
movs
(bad)
cmp
add
add
or
push
cmps
repz
and
enter
mov
add
adc
pop
and
add
pop
cmp
(bad)
inc
jnp
add
add
xchg
and
(bad)
(bad)
jmp
or
add
cmp
arpl
pop
sbb
or
push
add
add
mov
mov
iret
xchg
and
add
inc
test
pop
add
add
pop
inc
adc
add
adc
std
(bad)
call
add
add
add
(bad)
jmp
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
std
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stc
pop
or
mov
and
inc
push
add
add
(bad)
push
(bad)
(bad)
(bad)
jp
(bad)
call
(bad)
(bad)
jmp
add
add
cmp
std
(bad)
call
adc
cmp
(bad)
call
push
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
xlat
std
(bad)
call
or
pop
add
add
add
pop
and
add
add
cmp
jnp
add
add
push
pop
or
xchg
or
adc
add
cmp
push
add
add
or
sbb
add
pop
cmp
pop
sbb
adc
add
add
add
add
cmp
(bad)
jmp
cmp
(bad)
(bad)
inc
pop
maxps
add
je
(bad)
(bad)
cmp
(bad)
jmp
and
add
add
push
std
(bad)
call
or
iret
add
add
and
inc
std
(bad)
(bad)
jle
add
add
or
add
add
cmp
std
(bad)
(bad)
cmp
sbb
add
add
add
add
adc
add
sub
paddw
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
push
aas
sub
sbb
add
cmp
cld
(bad)
call
movlps
and
add
add
out
(bad)
inc
jnp
add
add
xchg
or
pop
add
add
sar
(bad)
inc
pop
maxps
add
xchg
add
push
cmp
pop
sbb
adc
or
adc
add
adc
add
push
sub
add
fld
add
add
fld
add
add
add
add
adc
add
add
or
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
sub
es
sub
push
sub
add
sub
add
sub
xor
add
add
adc
add
push
and
add
add
cmp
pop
adc
pop
and
add
add
jb
add
push
pop
pop
cmp
adc
add
cmp
add
adc
and
and
add
iret
add
add
add
add
pop
xchg
pushf
pop
adc
cmp
cmp
(bad)
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
xchg
add
push
cmp
add
add
sbb
pop
cmp
add
add
and
add
dec
or
dec
add
add
add
add
mov
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
(bad)
call
add
ins
add
add
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
mov
push
add
cmp
add
and
add
add
pop
(bad)
(bad)
call
adc
and
add
cmp
(bad)
(bad)
call
add
(bad)
jmp
sub
clc
(bad)
(bad)
inc
add
add
add
add
push
jge
add
add
push
add
add
cmp
(bad)
(bad)
jmp
push
sub
jnp
add
add
sub
add
or
sub
add
pop
cmp
(bad)
(bad)
jmp
add
and
add
add
scas
(bad)
(bad)
(bad)
cmp
add
add
add
add
out
add
add
adc
add
cmp
pop
add
add
sbb
add
daa
add
add
jg
(bad)
inc
jle
add
add
dec
add
add
sub
add
cmp
(bad)
call
adc
pop
cmp
add
add
and
repnz
(bad)
inc
pop
or
inc
add
add
pop
add
add
cmp
(bad)
jmp
push
push
cmp
add
add
or
add
cmp
or
sub
pop
cmp
add
add
adc
repnz
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
push
(bad)
(bad)
inc
sbb
add
add
add
add
cmp
std
(bad)
call
sbb
pop
cmp
sbb
repnz
(bad)
call
sub
jnp
add
add
sub
add
and
add
add
int
(bad)
inc
sbb
add
add
and
add
cmp
pop
pop
xchg
adc
cmp
add
pop
sbb
inc
sbb
add
add
sbb
add
cmp
pop
add
add
sub
add
add
add
adc
pop
add
push
and
add
add
or
add
cmp
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
bound
add
or
xor
add
cmp
(bad)
call
sub
jnp
add
add
add
push
push
inc
sub
jnp
add
add
jnp
add
add
arpl
add
cmp
add
and
add
add
sbb
(bad)
call
adc
pop
and
cmp
std
(bad)
jmp
adc
pop
ins
xchg
adc
and
add
add
cmp
cld
(bad)
jmp
cmp
jnp
add
add
test
(bad)
jmp
add
add
cmp
cld
(bad)
jmp
call
add
adc
and
add
xchg
sbb
add
add
pop
cmp
add
adc
pop
push
xchg
cmp
add
pop
adc
push
cmp
add
sbb
pop
add
add
cmp
add
sbb
push
add
add
or
cdq
add
add
add
adc
add
or
add
add
sub
add
adc
and
add
add
pop
and
pop
cld
(bad)
call
adc
and
add
add
dec
cld
(bad)
(bad)
cmp
add
add
pop
arpl
add
sbb
aaa
cld
(bad)
inc
and
add
pop
jge
add
add
sub
add
cmp
cld
(bad)
call
adc
cmp
add
add
pop
cmp
(bad)
(bad)
call
sub
add
add
add
pop
add
push
jge
add
add
pop
add
add
repz
(bad)
jmp
jnp
or
cmp
add
add
add
add
push
sub
mov
(bad)
jmp
and
add
add
int3
sti
(bad)
inc
push
cmp
std
(bad)
jmp
or
add
cmp
jg
add
add
add
add
adc
pop
add
push
or
xor
add
cmp
or
add
add
xchg
add
push
cmp
sbb
pop
and
add
pop
cmp
jmp
add
add
push
add
add
push
(bad)
inc
sbb
add
add
and
add
push
cmp
(bad)
jmp
adc
and
shl
mov
mov
adc
and
mov
add
adc
inc
and
add
test
cld
(bad)
jmp
(bad)
(bad)
inc
add
add
std
(bad)
(bad)
cmp
(bad)
call
cld
(bad)
(bad)
ds
(bad)
call
add
je
(bad)
(bad)
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
sti
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
add
add
(bad)
call
std
(bad)
inc
cld
(bad)
(bad)
(bad)
cld
(bad)
call
cld
(bad)
jmp
(bad)
dec
add
pop
std
(bad)
dec
sti
(bad)
inc
add
add
add
add
cmp
(bad)
std
(bad)
(bad)
jle
add
add
or
sbb
add
cmp
dec
(bad)
(bad)
inc
jle
add
add
dec
add
add
add
add
outs
cli
(bad)
call
push
adc
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
pop
jge
add
add
adc
add
sub
dec
cli
(bad)
jmp
or
pop
inc
or
add
inc
std
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
jnp
(bad)
inc
std
(bad)
call
add
add
cmp
cli
(bad)
call
add
add
add
les
add
retf
add
add
add
add
and
add
cmp
stc
(bad)
(bad)
cmp
jnp
add
add
push
add
push
and
xchg
add
push
cmp
stc
(bad)
jmp
jle
add
add
or
pop
add
add
cmp
adc
and
adc
and
add
add
cmps
stc
(bad)
(bad)
cmp
(bad)
inc
jae
add
push
jge
add
add
das
add
add
mov
(bad)
jmp
dec
or
and
push
rol
sbb
inc
push
add
add
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
and
xchg
add
push
cmp
(bad)
jmp
sbb
pop
and
add
sub
cmp
pop
sbb
pop
cmp
std
(bad)
call
and
repnz
(bad)
call
or
rol
add
call
(bad)
(bad)
(bad)
call
adc
and
add
add
or
(bad)
(bad)
cmp
std
(bad)
inc
sub
add
sub
sub
sub
add
adc
or
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
imul
arpl
maxps
imul
arpl
maxps
imul
or
xchg
pusha
push
add
add
add
add
sub
es
add
pop
add
add
xor
add
sub
add
sub
and
add
and
add
add
adc
add
push
bound
sub
cmp
add
jle
add
add
xor
add
xchg
pushf
sub
add
xor
test
add
add
adc
add
push
and
add
add
sbb
add
cmp
add
add
and
add
(bad)
jg
add
push
add
add
or
add
cmp
add
add
add
push
pop
and
cmp
add
add
add
das
add
add
add
pop
add
add
ja
add
jp
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
push
sub
push
add
and
add
add
cmp
and
loopne
and
add
add
mov
and
sbb
and
mov
add
add
add
or
pop
jge
add
add
add
add
cmp
add
pop
inc
lock
sbb
add
add
add
fcom
ss
cmp
add
or
add
add
(bad)
jmp
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
cmp
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
dec
add
or
add
xor
(bad)
dec
add
add
add
add
add
add
(bad)
call
or
add
cmp
(bad)
(bad)
jmp
or
add
test
je
and
inc
or
add
retf
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
cmp
(bad)
jle
add
add
add
add
add
cmp
(bad)
(bad)
cmp
add
jmp
and
jmp
popf
(bad)
(bad)
inc
and
add
inc
mov
add
add
cmp
call
or
jmp
and
add
add
xor
(bad)
jmp
add
sbb
push
add
adc
add
add
sub
es
and
add
add
ins
add
add
adc
add
add
pop
add
add
sbb
ret
add
add
cmp
add
pop
or
repnz
(bad)
jmp
inc
add
add
xor
cdq
add
push
adc
jnp
add
add
cmp
xor
add
sub
add
sub
sgdtd
add
and
call
or
add
or
add
dec
sub
dec
add
add
add
or
add
add
xor
add
or
add
inc
push
add
fisttp
add
adc
add
popf
or
add
(bad)
call
or
add
or
add
add
add
add
dec
add
add
or
add
add
xchg
or
add
or
add
add
add
add
mov
or
add
or
add
mov
add
add
add
add
or
add
or
add
or
add
push
add
ror
add
jno
add
dec
or
add
or
add
add
pop
add
add
or
add
or
add
or
add
or
add
or
add
(bad)
(bad)
(bad)
jmp
or
add
or
add
cmp
(bad)
(bad)
jmp
lods
mov
add
add
pop
and
add
add
push
cmp
add
add
sbb
xlat
add
add
add
add
(bad)
dec
jne
add
sbb
pop
pop
pop
call
add
into
(bad)
(bad)
jmp
pop
mov
dec
sbb
and
pop
inc
adc
add
mov
or
add
add
test
add
add
cdq
pop
add
loop
add
jns
add
add
add
jne
(bad)
dec
or
add
or
add
add
mov
or
add
or
(bad)
jmp
add
add
sub
popa
(bad)
(bad)
jmp
cmp
add
adc
je
add
add
jp
test
add
and
add
add
adc
add
push
inc
inc
adc
add
xor
(bad)
(bad)
cmp
or
add
add
add
and
add
add
cld
add
add
adc
add
pop
pop
inc
mov
push
add
add
add
(bad)
call
adc
and
add
cmp
std
(bad)
(bad)
cmp
pop
add
adc
sbb
or
and
add
cmp
std
(bad)
call
or
push
and
aam
(bad)
call
or
sbb
pop
push
dec
and
and
inc
push
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
cdq
add
add
sbb
add
add
add
xchg
add
outs
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
lock
call
(bad)
call
daa
and
dec
ret
fimul
imul
jle
add
add
add
add
dec
add
or
or
add
and
cmp
add
add
arpl
mov
dec
(bad)
(bad)
call
sbb
pop
xchg
pop
or
sbb
lods
sub
cmp
(bad)
call
sbb
pop
add
add
in
(bad)
(bad)
jle
add
add
add
add
dec
add
or
adc
jno
add
and
lds
add
sub
je
add
add
mov
mov
adc
add
adc
sbb
sbb
adc
(bad)
call
or
add
add
ja
add
adc
pop
push
clc
(bad)
(bad)
call
or
add
add
cld
add
add
ret
add
adc
adc
or
add
add
adc
into
(bad)
(bad)
call
or
add
adc
sbb
adc
pop
add
add
aaa
add
add
push
add
sub
adc
and
and
sbb
cwde
(bad)
(bad)
call
add
add
adc
cmp
pop
pop
xor
in
(bad)
(bad)
call
or
sbb
pop
add
push
adc
add
add
xchg
pop
adc
cmp
(bad)
call
push
adc
cmp
add
add
adc
scas
jmp
dec
sbb
and
inc
add
add
(bad)
(bad)
call
add
xor
add
add
push
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
daa
and
mov
add
pop
into
mov
popa
cmp
or
sbb
mov
mov
add
push
adc
and
mov
(bad)
(bad)
fisttp
add
es
jmp
dec
and
and
inc
add
add
(bad)
(bad)
call
add
add
push
add
add
adc
adc
and
xchg
sti
pop
and
mov
or
leave
(bad)
(bad)
(bad)
fisttp
add
add
pop
adc
fld
add
add
adc
and
jae
mov
dec
sbb
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
daa
and
jle
pop
and
jb
popa
cmp
push
cmp
add
add
adc
and
jnp
and
and
pop
inc
or
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
adc
add
in
add
add
add
add
cmp
add
add
fwait
stos
ss
call
adc
add
add
jl
add
cmp
add
add
cmp
add
add
and
push
dec
cmp
daa
and
fucomip
pop
and
push
push
fisub
jge
(bad)
call
pop
and
add
add
add
jp
add
adc
jne
add
add
jge
add
adc
and
cmp
cmp
(bad)
(bad)
call
and
add
add
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
cmp
add
cmp
(bad)
(bad)
call
adc
add
add
jg
add
and
add
add
cmp
add
and
out
sub
add
lods
xchg
sbb
es
(bad)
(bad)
call
and
sbb
sub
js
add
adc
sub
add
adc
and
add
add
cwde
add
push
cmp
add
add
or
add
sbb
and
push
add
add
cld
add
add
adc
and
add
add
out
add
add
adc
add
adc
sub
push
and
add
add
(bad)
add
add
pop
pop
or
cmp
(bad)
jmp
and
mov
adc
add
add
or
sbb
adc
sbb
add
sub
cwde
add
push
cmp
(bad)
(bad)
jmp
and
add
add
xchg
add
adc
and
xor
pop
and
adc
(bad)
call
pcmpeqw
jp
add
and
add
add
cmp
add
and
mov
dec
cmp
std
(bad)
call
adc
and
jnp
fs
std
(bad)
call
adc
and
add
pop
cmp
adc
jne
add
add
add
add
add
and
push
add
push
sub
add
adc
cmp
(bad)
jmp
add
add
dec
sub
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
inc
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
cmp
pcmpeqw
sbb
add
push
and
add
add
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
call
adc
add
add
add
push
adc
fld
add
add
fld
add
add
adc
and
push
fwait
dec
and
and
inc
add
(bad)
(bad)
inc
add
add
add
add
jne
add
(bad)
pop
add
adc
and
and
cmp
xor
add
add
push
jne
add
add
add
or
push
jne
add
add
adc
je
out
pop
cmp
inc
push
add
add
add
add
add
add
add
add
daa
and
adc
pop
pop
and
jmp
(bad)
(bad)
add
add
adc
and
add
add
add
adc
add
add
adc
and
add
cmp
idiv
jmp
dec
inc
dec
bound
add
movs
push
jo
cmp
clc
(bad)
call
daa
and
xor
cmp
idiv
call
daa
and
jae
in
and
nop
inc
ret
call
add
and
add
add
scas
add
add
pop
add
sub
aaa
add
push
and
add
cmp
adc
and
add
add
xor
call
daa
and
out
and
cmp
je
add
sbb
pop
call
and
jecxz
add
sub
add
sub
push
(bad)
jmp
or
add
cmp
(bad)
call
daa
and
sub
mov
(bad)
popa
cmp
(bad)
call
adc
add
and
(bad)
call
or
add
add
adc
adc
and
add
cmp
idiv
call
daa
and
inc
dec
sub
scas
adc
jmp
adc
inc
sbb
add
push
add
sbb
add
(bad)
(bad)
(bad)
cmp
add
stos
add
add
add
pop
idiv
call
add
add
add
sub
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmc
(bad)
dec
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
jbe
(bad)
call
sbb
pop
add
xchg
adc
pop
bound
sbb
add
pop
cmp
(bad)
jmp
sbb
push
cmp
(bad)
call
or
call
add
add
pop
and
add
add
stos
add
add
adc
add
adc
and
daa
cmc
(bad)
call
es
push
add
add
add
nop
add
add
add
add
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
call
or
je
add
sbb
test
add
xor
add
cmp
hlt
(bad)
jmp
or
dec
and
and
inc
add
add
inc
add
add
add
add
(bad)
(bad)
jmp
xor
test
or
push
and
add
add
fwait
hlt
(bad)
call
adc
push
and
add
cmp
pop
pop
es
adc
and
add
add
jl
(bad)
call
daa
and
fcom
mov
mov
inc
add
add
xor
add
sub
jne
add
add
sbb
add
and
add
add
adc
add
and
add
and
add
sub
and
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
dec
je
add
sbb
or
add
and
add
add
pushf
add
add
push
add
sub
and
add
and
add
add
cmp
repz
jmp
adc
and
mov
repz
and
cmp
cmc
(bad)
call
adc
and
add
add
cmp
repz
jmp
cmp
std
(bad)
(bad)
jle
add
add
adc
jae
add
and
add
sbb
add
and
add
add
movs
repz
call
add
add
adc
pop
pop
pop
adc
cmp
sbb
add
adc
and
add
add
test
(bad)
jmp
rol
jbe
mov
(bad)
(bad)
jle
add
or
add
sbb
add
cmp
(bad)
call
pop
and
or
adc
and
add
add
push
repz
call
adc
push
and
add
add
inc
repz
call
or
push
cmp
(bad)
call
or
repnz
(bad)
call
add
add
add
mov
add
add
or
add
cmp
repnz
jmp
xor
add
cmp
repz
call
pop
pop
pop
xchg
adc
and
add
add
cmp
repnz
jmp
cmp
repz
call
adc
push
and
add
add
jmp
pop
pop
je
and
push
cmp
cld
(bad)
call
pop
pop
pop
xchg
sbb
in
(bad)
(bad)
dec
je
add
sbb
or
pop
call
add
xchg
add
push
cmp
cmp
or
add
sbb
add
add
add
add
mov
(bad)
(bad)
cmp
sbb
pop
and
add
sub
je
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
push
sub
fdivr
(bad)
jmp
and
add
add
push
repnz
call
or
push
and
add
add
cmp
(bad)
jmp
and
mov
repz
call
and
and
fwait
add
push
pop
lea
adc
adc
add
sbb
pop
sub
adc
je
add
sbb
mov
cdq
add
add
sldt
sub
add
cwde
add
push
cmp
icebp
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
sbb
dec
xchg
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
call
add
add
jmp
add
and
or
add
push
ds
jmp
adc
add
cmp
out
or
cmp
repnz
call
adc
push
and
add
add
call
xchg
and
add
add
push
and
add
add
test
(bad)
call
pop
and
add
add
push
cmp
(bad)
call
cmp
(bad)
(bad)
call
add
add
loopne
add
and
or
add
cmp
(bad)
(bad)
jmp
add
cmp
(bad)
jmp
cmp
(bad)
call
add
add
or
pop
and
add
add
test
add
sub
add
push
add
add
cmp
icebp
(bad)
jmp
adc
and
mov
xchg
hlt
sti
adc
(bad)
call
add
sub
add
push
or
sbb
add
cmp
lock
(bad)
cmp
cli
(bad)
call
adc
and
add
add
loopne
(bad)
(bad)
cmp
cli
(bad)
call
or
add
pop
je
scas
add
add
loopne
add
sub
add
sub
inc
inc
adc
and
add
add
xchg
add
push
cmp
iret
jb
jns
fdiv
(bad)
call
daa
and
sub
and
cmp
icebp
(bad)
(bad)
jle
add
add
sbb
sub
jge
(bad)
(bad)
cmp
add
adc
and
push
fisttp
cmp
adc
add
sub
inc
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
push
add
add
add
add
push
add
push
or
add
add
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
adc
add
push
sub
cwde
add
push
cmp
add
and
add
add
sbb
add
sub
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
(bad)
jle
add
add
add
mov
and
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
sbb
or
pop
fld
pop
sbb
inc
push
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
cwde
add
push
sub
pusha
add
add
and
add
add
cmp
add
add
cmp
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
movs
jge
js
push
(bad)
(bad)
call
add
cmp
sub
iret
add
add
add
add
iret
add
add
add
aam
add
xchg
pop
and
pushf
pop
or
dec
cmp
(bad)
(bad)
inc
pop
add
add
add
add
push
cmp
and
inc
cmp
push
add
add
push
dec
xchg
jp
es
(bad)
(bad)
call
pop
and
jno
mov
and
enter
(bad)
(bad)
call
cmp
jne
add
add
add
sbb
add
and
add
add
sbb
add
cmp
add
add
je
add
add
add
imul
sub
add
sub
fnsave
adc
and
dec
push
pop
fld
pop
sbb
inc
push
add
add
(bad)
(bad)
call
add
add
add
add
add
add
imul
add
adc
and
(bad)
(bad)
(bad)
call
pop
and
dec
movs
inc
pop
and
jmp
popa
cmp
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
out
ficom
das
cmp
jne
add
add
or
add
and
pushf
push
jnp
cmp
add
add
jno
dec
jl
cmp
(bad)
call
cmp
jne
add
add
add
push
fadd
je
add
add
add
inc
sbb
add
add
add
add
arpl
add
fld
add
mov
add
add
add
adc
or
add
add
sub
es
add
add
adc
and
add
je
add
sub
add
sub
sub
add
adc
or
push
add
add
add
adc
add
push
and
cwde
add
push
cmp
add
add
sbb
and
add
cmp
add
add
or
lock
cmp
or
adc
add
cmp
or
add
add
cmp
add
add
mov
pop
and
add
add
and
add
sub
add
and
add
add
cmp
add
add
or
push
mov
mov
cmp
add
or
xor
call
repz
mov
add
sbb
add
and
add
add
test
pop
je
imul
pop
or
adc
add
cmp
add
push
stc
add
push
jae
add
or
lahf
add
push
and
add
add
cwde
add
push
cmp
add
es
rcr
add
inc
or
add
add
add
sbb
add
jns
add
inc
(bad)
(bad)
inc
add
add
add
add
sldt
add
aaa
add
add
and
xchg
lahf
cs
and
rol
nop
popa
cmp
sbb
pop
sbb
sub
sahf
add
push
cmp
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
add
cmps
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
and
add
add
xchg
add
push
cmp
imul
add
sbb
pop
sbb
sub
movs
add
add
fadd
add
sub
push
add
add
cmp
(bad)
jmp
and
and
fst
popa
and
inc
push
add
add
add
add
add
daa
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
sub
fs
(bad)
jmp
and
add
add
cmp
(bad)
jmp
and
xchg
(bad)
(bad)
inc
and
add
inc
and
add
jae
add
or
adc
add
and
add
add
push
add
sub
or
add
sub
sar
(bad)
jmp
and
pop
(bad)
(bad)
inc
and
add
add
pop
add
sub
or
scas
(bad)
(bad)
dec
and
mov
pop
and
sahf
(bad)
bound
xor
(bad)
inc
push
sub
or
add
cmp
and
pop
xor
and
inc
push
xchg
popa
cmp
(bad)
(bad)
inc
and
add
and
dec
add
or
test
add
add
add
sub
add
add
cmp
(bad)
dec
and
lods
push
xchg
pop
and
cmp
(bad)
(bad)
jmp
add
adc
or
xchg
add
add
add
adc
add
push
and
add
cmp
add
add
mov
jne
add
sbb
xchg
push
jne
add
sbb
xchg
cmp
add
add
adc
add
and
add
add
cmp
add
add
adc
and
sub
pop
and
mov
mul
sbb
and
add
add
add
add
sub
add
sub
rol
add
and
add
sub
and
add
add
pop
add
adc
and
mov
cld
outs
aaa
stc
popa
cmp
add
add
add
add
loope
mov
cmp
add
add
add
add
add
or
add
cmp
add
call
scas
add
add
adc
add
add
pop
cmp
add
es
add
add
push
and
add
add
sub
add
cmp
add
add
and
add
add
rol
add
sub
add
sub
dec
pop
sub
add
sub
sub
xchg
add
push
cmp
(bad)
jmp
and
add
add
repnz
add
(bad)
int
add
dec
add
add
pop
and
add
leave
pop
and
cmp
add
add
or
add
add
cmp
add
add
sbb
add
ins
add
add
or
repnz
(bad)
call
sub
pop
pop
or
or
cmps
add
add
add
add
add
add
cwde
add
push
cmp
and
dec
jg
cmp
add
add
je
add
sbb
add
je
add
sbb
add
add
add
add
add
add
pop
and
scas
es
pop
and
in
xchg
mov
mov
add
adc
std
add
add
add
add
add
add
(bad)
jmp
add
pop
(bad)
(bad)
call
call
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
(bad)
call
(bad)
dec
add
add
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
std
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
cmp
shr
les
and
and
pop
inc
or
add
adc
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
mov
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
std
(bad)
jmp
adc
add
cmp
(bad)
jmp
mov
cmp
add
add
daa
lock
inc
and
(bad)
call
pop
and
and
cdq
pop
popa
cmp
add
add
mov
sub
jne
add
sbb
dec
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
pop
jne
add
sbb
add
and
add
add
jecxz
(bad)
call
push
and
and
adc
adc
add
cmp
(bad)
(bad)
call
adc
jo
(bad)
call
add
add
jmp
or
add
add
cmp
or
add
push
add
add
cmp
adc
add
add
xor
(bad)
call
push
and
add
xchg
pop
outs
pop
cmp
(bad)
(bad)
call
sub
add
adc
or
add
add
add
adc
add
push
and
add
add
lahf
add
add
or
add
push
pop
pop
or
pop
add
add
mov
add
add
pop
adc
and
add
add
jge
add
and
add
add
pop
popa
and
pop
inc
or
add
into
add
add
add
cmps
add
add
(bad)
(bad)
call
add
inc
add
add
add
mov
add
ins
add
add
add
add
or
add
sub
xor
add
es
or
add
hlt
(bad)
(bad)
inc
add
push
add
add
ds
add
add
cmp
add
and
cmp
add
add
and
mov
push
add
add
dec
add
cmp
(bad)
call
or
add
cwde
add
push
cmp
add
add
rol
add
pop
or
add
add
js
add
xchg
push
pop
cmp
(bad)
(bad)
inc
add
or
add
add
adc
add
pop
cmp
and
leave
push
sbb
and
(bad)
(bad)
jle
add
add
add
add
xchg
add
add
pop
adc
and
add
add
cmp
add
cmp
add
into
add
add
xchg
pop
or
add
cmp
add
es
or
add
cmp
and
add
add
add
add
adc
(bad)
call
add
add
add
inc
add
add
add
add
add
add
push
or
cmp
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
call
add
or
(bad)
dec
(bad)
(bad)
fsin
(bad)
call
(bad)
(bad)
(bad)
jl
(bad)
(bad)
jl
add
xor
(bad)
(bad)
jmp
(bad)
push
add
add
add
call
call
(bad)
jmp
add
and
add
cmp
push
and
fwait
mov
pop
and
xchg
xor
(bad)
dec
inc
or
add
les
add
ss
(bad)
jmp
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
or
add
cmp
(bad)
call
push
and
push
pop
and
(bad)
jl
popa
cmp
std
(bad)
call
or
add
add
cmp
(bad)
(bad)
inc
add
add
or
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
pop
cmp
adc
and
and
bound
std
(bad)
call
push
and
cmp
or
popa
cmp
(bad)
call
add
mov
add
xchg
or
push
cmp
(bad)
inc
add
or
sar
(bad)
jmp
push
add
add
cmp
adc
or
add
pop
or
call
add
add
add
out
(bad)
inc
sub
push
cmp
(bad)
jmp
or
add
cmp
(bad)
call
or
call
hlt
(bad)
(bad)
inc
sub
add
xor
add
add
adc
add
push
add
dec
add
push
add
dec
add
push
pop
adc
sub
add
sbb
or
add
add
adc
add
push
and
add
add
aaa
add
add
aas
or
mov
or
pop
inc
add
add
(bad)
(bad)
dec
add
add
add
cmp
add
add
add
dec
or
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
test
add
and
add
add
cwde
add
push
cmp
or
add
or
add
add
cmp
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
jno
(bad)
call
or
cs
imul
pop
push
popa
cmp
(bad)
inc
push
and
add
add
push
(bad)
(bad)
call
adc
test
pushf
pop
mov
or
or
or
add
(bad)
(bad)
(bad)
jmp
add
mov
add
pop
add
add
add
fild
add
sbb
add
scas
add
add
add
sub
cwde
add
push
cmp
add
and
add
add
test
add
cmp
push
add
and
add
add
mov
and
add
push
pop
and
sahf
add
add
and
add
and
add
add
and
add
cmp
add
sbb
add
push
add
add
xor
add
and
(bad)
(bad)
inc
and
je
add
and
add
add
add
sub
inc
add
add
add
add
dec
or
dec
add
add
add
(bad)
dec
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
jmp
mov
je
cmp
(bad)
(bad)
inc
add
and
add
add
jo
add
sub
add
sub
pop
pop
pop
pop
push
sub
add
sub
or
add
pop
cmp
and
add
(bad)
call
or
inc
rcl
pop
and
repz
popa
cmp
adc
or
add
cmp
(bad)
jmp
add
cmp
mov
(bad)
call
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
sub
(bad)
call
or
jp
pop
ret
dec
ror
mov
(bad)
inc
add
pop
add
push
or
add
add
cmp
(bad)
(bad)
call
or
loop
pop
lock
and
cmp
(bad)
(bad)
fnsave
adc
and
in
rcl
and
adc
sbb
inc
push
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
outs
add
add
adc
and
(bad)
(bad)
(bad)
inc
jne
add
add
or
add
and
cmp
cmp
add
add
dec
mov
cmp
inc
pop
add
add
add
add
add
add
add
add
add
add
xor
pop
adc
ja
(bad)
call
or
mov
push
sub
aam
fisub
cmp
call
cmp
add
add
add
push
fcom
adc
push
sub
and
(bad)
jmp
and
add
cmp
cmp
push
cld
(bad)
inc
jne
add
sbb
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
xor
pop
add
add
add
adc
add
push
and
add
cmp
and
cmp
mov
and
and
pop
fdivr
cmp
and
add
clc
pop
jge
add
add
add
add
cmp
add
and
push
cmp
or
or
add
push
cmp
add
es
or
add
add
cmp
add
and
adc
inc
cmp
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
cmp
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
add
push
add
add
add
xchg
(bad)
(bad)
jmp
add
add
(bad)
inc
pop
add
add
cmp
(bad)
(bad)
jmp
and
add
xor
adc
or
pop
inc
pop
add
add
(bad)
(bad)
dec
(bad)
call
add
sbb
add
sbb
(bad)
push
(bad)
call
(bad)
(bad)
call
sub
das
add
add
and
add
add
test
(bad)
(bad)
cmp
add
pop
inc
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
and
push
(bad)
(bad)
dec
and
sub
pop
and
das
xchg
popa
cmp
(bad)
jmp
sbb
push
add
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
adc
add
sbb
jmp
jo
ins
xchg
popa
and
inc
pop
add
add
add
jmp
add
add
cmp
(bad)
(bad)
call
sub
pushf
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
and
xchg
aad
stos
(bad)
(bad)
call
pop
and
aam
inc
pop
and
cmp
je
add
add
push
add
add
and
add
add
daa
add
sub
push
add
add
cmp
add
add
and
rol
cmp
(bad)
call
or
add
add
add
add
dec
or
dec
add
add
add
add
sar
inc
add
add
add
jle
(bad)
call
add
add
add
cmp
add
add
and
iret
(bad)
(bad)
jmp
jb
out
jecxz
sbb
(bad)
inc
je
add
add
inc
add
add
dec
add
add
sub
add
and
add
sub
mov
pushf
(bad)
(bad)
(bad)
cmp
add
or
add
add
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
jmp
add
add
sub
push
(bad)
(bad)
cmp
(bad)
jmp
loopne
sub
(bad)
fstp
adc
xor
add
xchg
popa
and
inc
add
(bad)
(bad)
(bad)
aas
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
lahf
push
cmp
adc
xor
add
inc
je
add
add
or
add
and
sbb
add
and
cmp
(bad)
call
cmp
(bad)
(bad)
inc
jne
add
add
add
push
fcomp
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
das
add
add
std
(bad)
dec
add
add
add
and
add
cmp
(bad)
(bad)
call
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
inc
and
add
and
add
add
sub
add
pop
sub
cmp
and
add
add
mov
(bad)
jmp
add
add
add
add
add
push
add
add
add
jl
add
lahf
add
add
add
add
xor
add
add
add
add
adc
add
push
and
add
add
movs
add
add
add
dec
add
add
adc
add
cmp
add
adc
add
cmp
dec
add
add
jnp
add
add
jnp
add
add
stos
add
add
add
arpl
add
and
ret
and
mov
retf
popa
and
inc
pop
add
add
add
jnp
add
add
add
iret
(bad)
(bad)
call
add
pop
add
add
sub
pop
add
add
and
add
add
xchg
add
push
cmp
add
add
push
or
pop
add
add
and
cmp
(bad)
(bad)
inc
cmp
and
add
add
cwde
add
push
cmp
add
add
call
add
jp
and
fnstenv
popa
cmp
(bad)
(bad)
jle
add
add
add
jbe
add
and
add
add
cmp
push
add
cmps
(bad)
(bad)
jmp
or
add
cmp
push
jge
add
add
adc
add
cmp
or
fild
add
adc
adc
inc
and
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
push
add
add
adc
dec
pop
and
ins
es
cmp
(bad)
(bad)
dec
pop
pop
xchg
or
das
popf
jns
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
add
and
add
add
pop
add
add
pop
add
add
add
add
adc
add
cmp
add
add
inc
add
add
and
add
pop
jge
add
add
push
add
add
in
add
and
test
(bad)
cmp
call
or
or
add
cmp
add
add
add
xor
add
and
sbb
and
(bad)
dec
inc
or
add
add
(bad)
(bad)
(bad)
std
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
add
add
(bad)
(bad)
jp
(bad)
push
(bad)
(bad)
inc
add
cmp
add
and
add
add
cmp
add
adc
pop
add
add
cmp
add
gs
sbb
out
(bad)
(bad)
jmp
xchg
add
jp
pop
pop
cmp
add
add
cmp
add
or
inc
xchg
pop
jl
or
or
cmp
add
add
push
or
push
(bad)
call
cmp
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cmp
add
add
push
push
add
or
add
add
add
inc
jmp
(bad)
call
(bad)
(bad)
(bad)
fscale
(bad)
dec
add
xchg
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
(bad)
dec
std
(bad)
call
add
and
add
add
cmp
sub
and
add
add
mov
(bad)
jmp
adc
or
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
add
add
sub
es
jle
add
add
das
add
add
add
add
push
or
jne
add
add
adc
sub
push
jle
add
add
sub
add
jle
add
add
inc
xchg
pushf
sub
adc
(bad)
mov
add
xor
add
push
sub
xchg
add
push
cmp
add
and
add
add
cwde
add
push
cmp
add
add
dec
xlat
mov
add
inc
add
add
add
add
add
add
add
add
add
add
and
add
add
imul
add
add
or
add
pop
add
add
add
loop
test
and
test
add
add
add
add
add
add
or
add
add
cmp
add
add
add
mov
repz
and
cmp
add
or
add
add
mov
add
and
add
add
push
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
jnp
(bad)
dec
add
pushf
add
add
or
add
sub
(bad)
(bad)
(bad)
jmp
and
mov
(bad)
and
xchg
jp
popa
and
inc
or
add
retf
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
jb
(bad)
inc
(bad)
(bad)
dec
(bad)
push
add
add
and
add
cmp
shl
inc
jnp
add
add
push
jne
add
sbb
add
add
add
sub
inc
add
add
sub
add
and
add
add
dec
(bad)
(bad)
(bad)
jle
add
add
cmp
(bad)
jmp
and
add
add
aaa
(bad)
(bad)
jmp
sti
jbe
sar
(bad)
(bad)
call
add
addr16
ins
int
and
push
fldenv
pop
(bad)
(bad)
inc
je
add
sbb
add
push
sub
add
sbb
or
cmp
add
add
add
sub
es
and
add
add
fadd
add
sub
inc
dec
add
push
jae
add
or
mov
add
and
add
add
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
das
xor
push
push
add
add
xor
add
add
add
add
adc
add
push
sub
add
pop
jne
add
add
push
add
push
pop
jne
add
add
lea
add
and
add
add
sub
add
or
scas
add
add
or
leave
and
and
inc
push
add
add
add
bound
add
sar
(bad)
inc
add
add
add
cmp
add
or
add
add
add
add
pop
add
add
add
add
add
mov
(bad)
cmp
add
stc
sub
ins
call
(bad)
inc
je
add
add
or
add
and
fsub
add
push
daa
push
in
and
(bad)
call
or
jmp
call
cmp
(bad)
(bad)
inc
je
add
add
add
push
fadd
je
add
sbb
add
add
add
or
sub
add
adc
or
sbb
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
add
add
aaa
add
adc
add
push
and
add
add
mov
and
setno
sbb
pop
cmp
add
and
add
add
jmp
or
adc
dec
add
add
mov
add
or
add
adc
push
adc
and
add
add
push
push
add
sub
and
add
cmp
add
pop
sbb
pop
and
add
cmp
add
cmp
movhps
adc
add
add
add
sub
xor
cmp
add
or
ds
(bad)
jmp
push
add
add
sbb
adc
or
add
cmp
add
add
adc
pop
das
xchg
pop
or
pop
cmp
add
cmp
(bad)
(bad)
dec
jne
add
add
dec
add
push
push
add
add
fild
add
jle
add
add
and
sub
cwde
add
push
cmp
add
add
and
xor
lds
stos
or
add
jne
add
add
je
add
add
push
add
and
lahf
add
add
adc
and
add
add
xchg
add
add
je
add
add
push
add
push
and
add
sub
ja
add
adc
pop
sub
pop
cmp
and
cmp
(bad)
(bad)
call
add
add
push
or
or
inc
add
add
jne
add
add
dec
add
push
adc
and
add
add
cmp
add
add
push
or
add
or
add
sbb
and
add
sub
add
cmp
add
and
add
add
push
xor
dec
add
add
add
(bad)
call
add
or
add
jmp
add
add
jae
add
sti
or
add
or
add
or
add
jno
add
loope
add
test
add
cmp
inc
add
es
add
mov
or
add
or
add
pop
add
add
data16
add
or
add
add
dec
or
add
add
add
add
add
add
jmp
add
add
add
std
(bad)
(bad)
cmp
add
or
add
or
add
add
add
add
pop
(bad)
(bad)
inc
or
add
or
(bad)
(bad)
cmp
add
sub
(bad)
(bad)
fisttp
add
test
add
xor
or
add
add
add
xor
add
or
add
or
add
(bad)
(bad)
cmp
(bad)
(bad)
mov
add
add
add
mov
add
inc
add
std
(bad)
call
add
std
(bad)
push
add
jge
add
mov
add
lahf
or
add
or
add
std
(bad)
(bad)
clc
add
add
push
add
jns
add
sar
(bad)
inc
add
add
add
add
or
add
push
add
and
add
add
cmp
daa
add
add
dec
add
push
adc
and
add
sub
gs
(bad)
(bad)
cmp
(bad)
call
cs
loopne
sbb
ja
or
or
add
and
jmp
fwait
add
push
sub
and
rol
cmp
or
add
jne
add
add
jg
add
and
add
add
sbb
(bad)
(bad)
cmp
add
adc
jnp
jge
inc
in
pop
add
and
add
add
std
std
(bad)
call
and
or
add
add
in
std
(bad)
dec
je
add
add
or
add
push
adc
pop
pop
pop
xor
push
add
sub
and
add
add
enter
adc
sbb
add
pop
and
cmp
sbb
and
imul
pop
add
popa
and
inc
add
add
add
add
mov
(bad)
(bad)
jmp
cwde
add
push
sub
rol
add
and
add
add
xor
add
and
cmps
mov
cmp
sbb
add
add
add
lea
add
adc
cmp
add
add
add
add
dec
das
add
or
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
and
add
cmp
(bad)
(bad)
call
and
xchg
add
xchg
and
adc
and
xchg
add
push
cmp
and
and
call
sbb
add
sbb
pop
add
push
or
add
xchg
(bad)
(bad)
(bad)
cmp
add
add
and
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
jmp
fdivr
aad
out
(bad)
(bad)
fnstsw
adc
shl
pusha
pop
add
popa
and
inc
push
add
add
(bad)
(bad)
inc
add
add
add
jne
add
xor
add
cmp
add
adc
add
add
add
add
or
add
or
add
or
add
push
add
add
add
and
test
(bad)
call
sbb
add
add
or
add
and
cmp
add
add
sub
test
cmp
and
popa
xor
cdq
cmps
or
cmp
(bad)
call
adc
loop
arpl
(bad)
call
out
(bad)
(bad)
call
sbb
add
sub
sbb
daa
and
add
cmp
sti
(bad)
jmp
mov
stos
push
add
adc
inc
and
add
pop
add
add
add
mov
pop
add
mov
add
or
add
add
add
cli
(bad)
push
stc
(bad)
push
add
add
cli
(bad)
dec
cli
(bad)
inc
or
add
or
add
add
add
add
add
pop
add
ds
(bad)
push
add
xor
(bad)
(bad)
fdivr
(bad)
inc
add
add
fiadd
add
call
push
add
add
add
dec
or
add
add
add
std
(bad)
jmp
xor
add
cmp
sti
(bad)
call
sbb
pop
and
add
pop
cmp
sti
(bad)
jmp
cmp
(bad)
call
pop
je
add
sbb
push
je
add
sbb
sub
add
adc
and
add
add
in
(bad)
(bad)
cmp
or
sbb
add
push
adc
and
add
sub
ret
cli
(bad)
(bad)
cmp
and
mov
add
xchg
adc
and
add
add
and
add
cmp
and
pop
and
add
add
xchg
cli
(bad)
(bad)
cmp
add
add
and
and
add
popa
cmp
daa
and
add
add
outs
cli
(bad)
jmp
inc
cmps
and
and
add
push
pusha
inc
lea
stos
cs
pop
popa
cmp
add
pop
and
jns
cmp
add
cmp
(bad)
(bad)
inc
je
add
add
je
add
add
push
add
push
cmp
daa
add
add
cwde
add
push
cmp
pop
adc
pop
and
add
add
cwde
add
push
cmp
cli
(bad)
(bad)
cmp
stc
(bad)
call
and
lods
add
add
add
pop
and
add
cmp
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
cmp
stc
(bad)
call
adc
je
add
sbb
adc
adc
and
add
sub
add
and
stos
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
add
xchg
add
push
cmp
and
add
add
adc
jne
add
sbb
sbb
add
sub
add
adc
cmp
add
cmp
(bad)
(bad)
cmp
add
push
dec
add
enter
and
add
cmp
(bad)
(bad)
cmp
sti
(bad)
call
add
sbb
mov
add
add
cmp
stc
(bad)
jmp
cmp
(bad)
call
lea
add
add
add
mov
add
adc
and
add
add
push
stc
(bad)
call
or
or
add
cld
clc
(bad)
call
and
pop
xchg
adc
and
add
add
jmp
(bad)
call
adc
adc
add
and
add
add
cmp
clc
(bad)
jmp
jle
add
add
and
add
cmp
adc
and
and
cmp
add
add
daa
inc
pop
add
add
add
or
(bad)
inc
(bad)
inc
add
push
add
add
inc
pop
add
and
add
cmp
(bad)
call
and
setno
pop
cmp
and
xor
bound
(bad)
call
pop
push
cmp
add
and
dec
clc
(bad)
(bad)
cmp
adc
adc
adc
and
add
push
cmp
clc
(bad)
jmp
cmp
(bad)
call
adc
sbb
add
push
adc
inc
add
add
sbb
(bad)
call
lea
add
add
add
cmp
clc
(bad)
jmp
sbb
sub
xor
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
fadd
add
daa
add
add
add
add
add
and
cmp
add
and
ret
cmp
(bad)
(bad)
call
and
and
and
popa
cmp
sbb
sbb
pop
add
push
or
add
add
push
xor
dec
add
add
add
add
mov
add
add
add
add
add
add
bound
add
and
add
add
cmp
(bad)
(bad)
jmp
cmp
sub
add
add
add
add
add
add
add
add
and
add
mov
(bad)
jmp
xchg
add
push
sub
sar
jmp
and
add
add
(bad)
(bad)
(bad)
jmp
xor
fadd
call
adc
and
add
add
js
(bad)
jmp
and
cmps
cmp
adc
add
add
lea
add
adc
add
dec
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
frstor
adc
and
pusha
pop
add
popa
and
inc
add
(bad)
(bad)
call
add
aas
add
add
add
add
add
add
and
ret
add
sub
mov
sar
call
sbb
sub
or
add
and
jp
and
add
jle
add
popf
(bad)
(bad)
call
sub
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pop
add
cmp
(bad)
call
and
cdq
add
add
call
sbb
sub
add
push
fcom
adc
add
xchg
add
push
cmp
idiv
jmp
adc
and
add
add
pop
cmp
cli
(bad)
call
and
rol
add
xchg
pop
pop
pop
cmp
(bad)
(bad)
call
prefetchnta
cli
(bad)
jmp
dec
add
add
aam
(bad)
jmp
movs
je
mov
cmc
popa
and
pop
inc
or
add
push
add
add
sti
(bad)
call
sti
(bad)
call
cld
(bad)
call
add
lock
(bad)
inc
(bad)
(bad)
jmp
add
and
add
cmp
lea
add
add
add
mov
add
adc
and
add
cmp
(bad)
call
and
pop
xchg
sbb
pop
and
add
add
pusha
cmc
(bad)
call
adc
and
add
add
push
cmc
(bad)
call
and
pop
xchg
and
add
add
pop
and
add
add
cmp
(bad)
call
and
test
add
xchg
pop
or
pop
sub
cwde
add
push
cmp
(bad)
jmp
and
add
add
adc
les
shl
pusha
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
jmp
stc
(bad)
call
hlt
(bad)
dec
add
mov
add
add
sldt
add
(bad)
(bad)
call
pop
adc
and
add
add
int3
hlt
(bad)
call
add
nop
bound
add
pop
add
add
cmp
cmp
clc
(bad)
call
or
add
movs
hlt
(bad)
(bad)
cmp
add
adc
add
idiv
push
idiv
call
(bad)
push
idiv
push
idiv
push
idiv
jmp
pop
add
add
cwde
add
push
cmp
(bad)
jmp
cmp
or
ds
add
add
xor
add
cmp
(bad)
jmp
pop
inc
cmp
add
add
and
add
push
cmp
(bad)
jmp
cmp
je
add
add
push
add
push
adc
and
add
add
and
gs
(bad)
call
add
push
dec
add
sbb
(bad)
jmp
adc
add
sub
add
add
(bad)
call
or
pop
and
add
add
xchg
add
push
cmp
repz
jmp
cmp
(bad)
dec
je
add
add
or
sbb
adc
sbb
add
and
push
add
sub
and
add
add
mov
(bad)
dec
jne
add
add
push
add
push
adc
and
add
add
lahf
repz
call
and
or
add
xchg
and
adc
cmp
idiv
call
and
repnz
(bad)
call
add
add
add
push
add
add
cmp
(bad)
jmp
cmp
adc
adc
push
(bad)
jmp
aas
add
add
push
repz
(bad)
cmp
jne
add
add
push
add
push
adc
and
add
add
cmp
(bad)
jmp
movs
je
mov
call
adc
and
add
mov
add
adc
and
add
add
adc
(bad)
jmp
mov
cmp
(bad)
call
adc
and
add
mov
add
adc
and
add
add
jmp
pop
cmp
idiv
call
adc
repnz
(bad)
call
and
jno
and
add
add
fwait
add
push
sub
or
add
add
push
add
push
and
add
cmp
and
sub
aam
cdq
popa
cmp
mov
add
or
push
add
add
cmp
adc
and
add
add
xchg
pop
adc
cmp
and
mov
add
xchg
sbb
jmp
add
add
adc
and
add
add
cmp
(bad)
jmp
and
pop
outs
(bad)
cmp
(bad)
call
and
cmp
add
xchg
and
adc
and
add
add
sub
(bad)
jmp
mov
pusha
pop
add
popa
and
inc
add
repz
jmp
push
(bad)
call
(bad)
(bad)
jmp
sub
add
cmp
icebp
(bad)
jmp
cmp
add
and
add
sub
push
add
add
xchg
add
push
cmp
icebp
(bad)
jmp
pop
sbb
pop
cmp
and
repnz
(bad)
call
push
cmp
(bad)
jmp
push
add
add
mov
je
add
add
push
add
push
adc
or
add
cmp
loope
(bad)
dec
je
add
add
aad
add
and
add
add
adc
jne
add
add
dec
pop
je
adc
aam
add
add
adc
add
gs
(bad)
call
or
pop
and
add
sub
push
icebp
(bad)
jmp
and
push
mov
(bad)
call
nop
repz
jmp
dec
add
add
cmp
(bad)
jmp
pop
push
adc
cmp
(bad)
call
and
adc
add
xchg
cmp
(bad)
(bad)
dec
jne
add
add
push
add
push
adc
and
add
cmp
icebp
(bad)
(bad)
cmp
idiv
call
adc
pop
and
add
add
xchg
add
push
cmp
lock
jmp
or
add
sub
add
and
add
cmp
lock
(bad)
cmp
cmc
(bad)
dec
je
add
add
adc
sbb
adc
sbb
add
and
add
sub
add
sub
and
add
add
mov
and
pop
xchg
adc
and
add
pop
cmp
pop
and
pop
and
add
add
xor
dec
je
add
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
or
add
add
add
xor
add
add
adc
add
push
and
add
add
cwde
add
push
cmp
add
cmp
add
add
add
adc
push
add
add
or
add
cmp
add
add
add
add
add
and
or
add
adc
and
and
or
inc
popa
cmp
add
adc
and
cmc
mov
fwait
gs
cmp
add
or
add
add
(bad)
push
add
add
add
add
add
add
add
mov
add
pushf
add
add
add
add
cmp
add
or
add
pop
or
add
call
jg
and
and
inc
pop
add
add
add
and
add
dec
add
add
(bad)
(bad)
dec
add
test
(bad)
push
(bad)
jmp
or
add
cmp
add
jle
add
add
add
or
add
cmp
add
cmp
add
add
add
add
add
push
sub
add
pop
add
add
sub
add
and
adc
mov
(bad)
inc
jnp
add
add
cmp
add
add
fild
add
and
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
call
add
or
add
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
fild
add
and
add
add
mov
or
jmp
and
add
add
cmps
(bad)
(bad)
call
call
cmp
(bad)
(bad)
call
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
xor
(bad)
jmp
and
cs
add
add
(bad)
call
(bad)
(bad)
call
add
pop
xchg
or
xor
jbe
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
(bad)
jmp
cmp
std
(bad)
inc
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
adc
and
repnz
add
jne
add
sub
and
add
add
xor
push
add
add
add
push
add
add
and
push
add
add
aam
(bad)
(bad)
jle
add
add
add
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
jmp
jg
(bad)
std
and
and
inc
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
cmp
or
out
lods
jge
and
inc
add
add
add
add
add
(bad)
(bad)
call
cwde
add
push
sub
pop
add
add
and
add
add
cwde
add
push
cmp
add
add
cmp
add
iret
add
add
in
cmp
inc
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
(bad)
in
mov
and
add
mov
cmp
dec
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
and
jb
fnstcw
sbb
(bad)
call
add
or
pop
(bad)
(bad)
inc
jne
add
add
and
add
and
add
sub
add
sub
pop
add
add
je
add
add
and
add
add
in
add
sub
add
sub
(bad)
pop
and
lods
jge
and
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
add
cdq
add
add
icebp
int
cmp
(bad)
(bad)
inc
je
add
add
or
add
and
rcr
add
add
mov
or
and
(bad)
call
pop
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
xchg
movs
into
jecxz
js
(bad)
call
add
add
cdq
(bad)
(bad)
inc
je
add
add
add
push
fadd
jne
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
adc
lldt
add
add
add
adc
add
push
and
add
add
cmp
pop
or
add
add
push
add
add
push
add
add
pop
cmp
cmp
add
and
add
add
push
or
dec
add
add
add
add
and
add
or
add
mov
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
sahf
add
add
add
add
add
add
and
add
and
(bad)
(bad)
(bad)
jmp
add
or
add
add
cmp
(bad)
jmp
retf
sub
dec
add
add
or
jmp
adc
cmp
add
adc
and
add
xchg
and
add
add
add
cmp
add
add
push
and
add
add
in
(bad)
jmp
ja
add
jp
jnp
add
add
pop
and
jg
add
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
and
add
cmp
(bad)
(bad)
jmp
add
add
add
and
add
or
add
add
add
add
add
and
pushf
and
sar
(bad)
call
adc
add
or
repnz
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
and
out
add
sub
add
sub
or
add
cmp
into
add
add
and
push
cmp
and
add
cmp
(bad)
jmp
scas
jmp
or
add
push
sub
or
rol
pop
popa
cmp
and
add
pop
and
add
sub
cmps
(bad)
(bad)
jmp
and
add
add
cwde
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
cdq
xor
inc
sbb
adc
pop
or
or
add
xchg
(bad)
(bad)
(bad)
fld
add
add
add
(bad)
(bad)
(bad)
stc
add
add
(bad)
jmp
(bad)
(bad)
jmp
push
add
add
out
(bad)
(bad)
jle
add
add
push
and
add
add
(bad)
std
(bad)
call
or
mov
and
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
add
dec
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
or
add
cmp
(bad)
call
(bad)
(bad)
call
pop
and
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
add
sub
inc
std
(bad)
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
std
(bad)
jmp
jl
sahf
inc
cmp
(bad)
(bad)
call
add
add
or
(bad)
call
or
div
pop
and
(bad)
(bad)
dec
and
add
cmp
and
jecxz
(bad)
call
push
and
add
add
add
call
or
repnz
(bad)
inc
add
stc
std
(bad)
jmp
adc
add
push
cmp
sbb
add
call
push
and
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
jmp
add
add
push
push
add
add
mov
(bad)
call
adc
add
jnp
(bad)
call
or
add
add
ins
cld
(bad)
jmp
adc
push
add
add
add
add
adc
add
push
pop
sub
sbb
add
and
add
add
cmp
cmp
add
add
jnp
add
add
pop
and
jg
add
push
add
add
add
add
cmp
pop
inc
pop
add
add
sldt
add
add
add
mov
dec
mov
imul
popa
and
pop
inc
or
add
test
add
or
add
push
add
add
(bad)
(bad)
call
add
add
add
add
add
and
cmp
add
pop
or
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
add
pop
sub
add
pop
or
or
add
cmp
rol
add
add
jnp
add
add
jnp
add
add
sub
add
or
or
jmp
mov
add
xchg
and
or
add
rol
add
sbb
add
lds
add
and
ds
cmp
add
(bad)
and
cmp
popa
cmp
(bad)
(bad)
inc
add
push
add
add
and
add
and
add
sub
sub
add
and
add
and
add
sub
add
adc
add
cmp
add
jle
add
add
add
add
add
pop
cmp
add
and
sar
(bad)
call
or
cwde
cmp
(bad)
(bad)
call
add
sbb
mov
cmp
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
sub
add
or
bound
add
and
add
add
push
push
add
or
add
add
add
(bad)
jmp
add
add
add
add
add
sahf
(bad)
(bad)
push
add
adc
add
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
inc
add
lods
add
add
adc
and
add
add
fwait
(bad)
(bad)
jmp
call
(bad)
call
add
mov
add
xchg
pop
adc
and
add
add
cwde
add
push
cmp
(bad)
jmp
pop
or
add
imul
and
add
add
and
add
add
push
(bad)
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
inc
or
add
daa
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
fdivrp
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stos
neg
out
jns
(bad)
call
add
jge
and
cmp
(bad)
jmp
add
push
add
add
or
push
add
add
retf
call
add
neg
ja
jae
popa
cmp
ds
(bad)
jmp
or
add
cmp
imul
inc
sub
add
adc
or
add
add
adc
add
push
and
add
add
cld
add
add
adc
add
add
jge
add
add
or
add
cmp
add
add
cld
add
add
jnp
add
add
jnp
add
add
leave
push
add
and
mov
add
add
add
cmp
push
add
and
add
add
mov
add
add
add
add
cmp
or
add
inc
add
add
call
pop
add
push
and
add
add
cmp
add
add
add
add
add
jnp
add
add
push
rcr
pop
cmp
add
cmp
add
add
add
add
add
add
jge
add
add
xor
add
cmp
add
add
and
add
add
xor
dec
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
and
add
cmp
add
add
or
(bad)
outs
cmp
and
fisub
add
add
and
or
jmp
je
add
adc
inc
sub
add
adc
add
inc
add
add
add
add
add
add
pop
add
jmp
add
add
cld
add
add
(bad)
jmp
add
(bad)
(bad)
inc
pop
add
sbb
add
pushf
add
add
or
add
add
add
add
add
push
add
les
add
mov
add
add
(bad)
call
pop
add
cld
add
add
(bad)
(bad)
(bad)
call
add
add
ds
add
dec
add
add
add
add
add
fild
add
add
add
add
add
add
xor
add
add
adc
jge
add
add
daa
add
add
sbb
xor
(bad)
inc
add
sub
add
jge
add
add
sbb
add
pop
cmp
add
add
pop
sbb
or
and
icebp
add
add
sbb
add
add
and
add
cmp
add
add
or
daa
add
add
or
inc
add
add
leave
add
add
add
add
or
add
cmp
or
cmp
add
add
and
add
cmp
mov
and
cmp
and
cmp
add
sub
add
and
add
add
cmp
add
and
add
stos
popa
and
pop
inc
or
add
scas
add
add
add
add
ret
add
(bad)
push
add
mov
(bad)
(bad)
dec
(bad)
jmp
cwde
add
push
sub
cld
add
push
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
sbb
pop
add
push
or
cmp
add
cmp
add
add
adc
and
add
add
cld
add
add
add
add
add
jnp
add
add
jge
add
add
inc
add
add
fild
add
cmp
std
(bad)
inc
jnp
add
add
jnp
add
add
push
add
add
cmp
cmp
adc
pop
bound
or
or
add
pop
cmp
cmp
pop
pop
adc
add
add
or
mov
add
adc
and
add
add
add
add
xchg
std
(bad)
call
or
out
add
add
call
sub
jnp
add
add
sub
push
and
cmp
add
add
sub
add
cmp
add
cmp
(bad)
inc
push
jge
add
add
cmp
add
sub
sub
add
cmp
(bad)
inc
add
sub
add
jge
add
add
xor
add
cmp
add
add
adc
cmp
std
(bad)
call
or
sub
add
xchg
pop
gs
cmp
(bad)
(bad)
call
sub
or
pop
add
push
and
add
push
cmp
add
add
adc
and
add
add
add
or
das
add
add
enter
cmp
cld
(bad)
inc
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
and
add
add
xchg
add
add
or
or
adc
add
push
cmp
adc
pop
adc
add
add
jno
add
adc
and
adc
cmp
(bad)
call
or
xchg
add
add
call
sub
and
add
add
add
pop
jge
add
add
sbb
cwde
add
push
cmp
add
add
pop
adc
or
inc
cld
(bad)
call
or
add
add
xchg
cmp
(bad)
(bad)
call
sub
sbb
pop
add
push
cmp
adc
add
dec
or
add
add
add
add
add
add
add
add
nop
add
add
(bad)
dec
add
arpl
add
(bad)
(bad)
call
add
add
add
mov
add
sbb
add
cld
add
add
add
cld
cld
(bad)
call
cld
(bad)
call
add
add
add
add
add
add
(bad)
call
std
(bad)
dec
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
sti
sti
(bad)
call
cli
(bad)
call
cld
(bad)
jmp
add
add
std
(bad)
call
(bad)
mov
add
add
std
(bad)
dec
(bad)
jmp
cld
(bad)
(bad)
call
add
add
add
(bad)
(bad)
call
(bad)
call
add
add
(bad)
(bad)
dec
add
ss
(bad)
(bad)
fdivr
(bad)
(bad)
mov
add
add
add
add
add
outs
add
add
add
add
(bad)
jmp
add
add
add
add
cli
(bad)
push
(bad)
jmp
add
add
(bad)
push
stc
(bad)
dec
add
add
and
add
push
cmp
(bad)
(bad)
jmp
and
jmp
cld
(bad)
call
cmp
cli
(bad)
call
or
call
(bad)
cli
(bad)
call
or
add
or
xchg
pop
cmp
or
xchg
add
add
sahf
cli
(bad)
call
adc
xchg
cli
(bad)
call
push
adc
and
add
add
cmp
(bad)
jmp
adc
pop
push
xchg
(bad)
call
and
call
sub
and
add
pop
jge
add
add
adc
add
cmp
(bad)
call
or
movs
add
add
add
or
push
cli
(bad)
call
or
sub
add
add
(bad)
call
sub
sbb
add
add
push
add
add
adc
(bad)
call
and
or
and
(bad)
call
adc
repnz
(bad)
inc
add
add
add
jecxz
add
jge
add
add
or
add
sub
loopne
(bad)
jmp
pop
push
adc
and
add
cmp
std
(bad)
call
adc
or
add
add
ret
std
(bad)
inc
sbb
pop
add
push
and
add
add
cmp
pop
movlps
and
add
cmp
sbb
or
inc
add
add
cmp
cmp
(bad)
(bad)
call
or
push
and
leave
mov
popa
cmp
sti
(bad)
call
push
adc
and
add
add
ins
std
(bad)
call
or
pop
xchg
sbb
or
jns
(bad)
call
or
test
add
xchg
and
cmp
(bad)
(bad)
inc
push
jge
add
add
push
add
add
cmp
(bad)
call
adc
or
dec
stc
(bad)
call
or
add
add
jmp
push
cmp
add
add
inc
add
add
adc
(bad)
call
or
xchg
test
(bad)
pop
and
aas
movs
push
(bad)
call
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
or
add
cmp
cld
(bad)
inc
push
cmp
cld
(bad)
jmp
sbb
add
push
cmp
cld
(bad)
jmp
cmp
clc
(bad)
inc
add
sub
add
jge
add
add
inc
add
add
xchg
add
push
cmp
add
jge
add
add
add
add
mov
(bad)
(bad)
cmp
add
add
jnp
add
add
or
and
add
push
cmp
(bad)
jmp
and
cmc
stc
(bad)
(bad)
jle
add
add
or
add
add
cmp
(bad)
inc
or
pop
add
push
or
add
inc
cld
(bad)
call
or
push
pop
cmp
cld
idiv
jmp
and
add
add
es
(bad)
call
or
xchg
add
add
and
add
add
adc
(bad)
(bad)
cmp
clc
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
sti
(bad)
inc
push
jge
add
add
pop
add
add
loop
(bad)
call
or
add
add
aam
(bad)
call
or
imul
and
sar
inc
sbb
add
add
xor
add
cmp
or
(bad)
jge
and
pop
mov
cmp
stc
(bad)
inc
jnp
add
add
add
xor
add
cmp
adc
idiv
call
or
repnz
(bad)
call
sub
pop
adc
adc
(bad)
jmp
cmp
add
cmp
(bad)
call
sbb
idiv
call
sbb
repnz
(bad)
inc
jnp
add
add
jnp
add
add
paddw
jmp
add
add
cmp
sti
(bad)
call
adc
or
dec
idiv
call
cmp
(bad)
(bad)
call
sub
and
add
pop
jge
add
add
sub
add
cmp
sti
(bad)
inc
jnp
add
add
cmp
cli
(bad)
jmp
push
add
add
cld
cli
(bad)
inc
pop
jge
add
add
add
add
cmp
cli
(bad)
dec
jle
add
add
jnp
add
add
pop
or
add
sar
(bad)
(bad)
cmp
idiv
inc
add
adc
(bad)
mov
add
cmp
add
sub
es
and
add
add
cmp
add
es
or
add
push
add
add
inc
add
add
rol
add
add
add
add
jnp
add
add
add
and
jg
add
and
add
add
pop
add
add
push
lods
add
add
adc
add
cmp
add
add
pop
or
pop
add
add
add
add
add
add
add
cmp
add
add
sbb
add
cmp
add
add
or
add
sldt
add
fadd
add
cmp
add
add
add
add
and
cmp
xor
mov
add
add
add
add
and
mov
add
and
mov
add
add
jnp
add
add
pop
add
add
adc
nop
add
add
add
add
add
add
jg
add
cmp
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
or
add
cmp
add
adc
retf
add
add
add
sbb
add
and
add
add
cmp
add
adc
add
add
add
cmp
add
add
or
add
sbb
add
cmp
add
add
cmps
add
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
inc
(bad)
(bad)
call
add
dec
(bad)
(bad)
jmp
add
jle
add
test
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
add
ins
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
call
add
retf
add
add
sub
inc
(bad)
(bad)
jmp
and
add
add
xchg
add
push
cmp
(bad)
jmp
adc
pop
adc
add
add
add
add
jmp
jnp
add
add
add
add
pop
and
sub
add
and
add
add
cmp
(bad)
jmp
enter
and
pop
pop
popa
and
inc
pop
add
add
(bad)
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
inc
(bad)
dec
add
add
or
add
sub
clc
(bad)
(bad)
jmp
adc
sbb
add
add
ja
add
jle
add
add
ja
add
xchg
jle
add
add
dec
xchg
pop
and
add
add
pop
adc
add
add
cmp
adc
and
add
cmp
add
add
and
add
pop
jge
add
add
adc
add
sub
(bad)
(bad)
(bad)
jmp
and
cmp
add
add
cmp
dec
(bad)
and
imul
cmp
(bad)
(bad)
call
add
or
add
add
cld
(bad)
push
(bad)
call
(bad)
(bad)
mov
add
add
add
add
std
(bad)
(bad)
fdivr
(bad)
call
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
(bad)
cmp
or
add
add
adc
aam
call
adc
and
loop
neg
rcl
(bad)
call
push
and
cmp
std
(bad)
inc
jnp
add
add
add
adc
add
cmp
std
(bad)
(bad)
jle
add
add
push
and
add
add
enter
adc
and
adc
dec
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
sub
adc
ltr
add
adc
add
push
and
xor
add
and
mov
data16
jnp
add
add
jnp
add
add
je
add
sbb
add
add
add
inc
add
add
sub
add
sub
add
sub
add
add
cmp
add
add
add
add
and
add
add
xchg
add
push
cmp
add
add
and
xor
add
adc
jb
pusha
xor
mov
cmp
jnp
add
add
add
add
or
or
add
push
cmp
and
pop
sar
fs
and
inc
pop
add
add
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
dec
add
and
add
add
outs
add
add
add
and
in
loopne
and
mul
mov
(bad)
dec
and
add
add
cmp
(bad)
jmp
and
add
add
cmp
add
sbb
add
add
push
cmp
add
add
cmp
add
or
add
add
(bad)
push
add
add
(bad)
call
add
cmp
add
add
add
push
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
sub
jl
(bad)
jmp
and
add
add
mov
jl
dec
cmp
push
(bad)
(bad)
inc
je
add
sbb
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
xor
add
sub
es
and
add
add
inc
add
add
mov
cmps
enter
and
pop
inc
or
add
inc
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
or
add
push
cmp
add
add
and
mov
cmp
and
add
(bad)
jg
add
push
add
add
add
add
cmp
add
add
add
dec
pop
and
or
call
add
sbb
popa
cmp
(bad)
dec
and
add
xchg
sbb
and
cmp
and
popa
and
add
(bad)
ss
cmp
(bad)
dec
inc
or
add
sbb
add
add
(bad)
jmp
(bad)
(bad)
cli
add
add
add
add
add
lods
(bad)
(bad)
jmp
push
add
add
dec
add
add
add
mov
and
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
cmp
(bad)
(bad)
jmp
pop
add
add
push
push
add
or
add
add
add
(bad)
(bad)
(bad)
jns
(bad)
inc
add
add
add
(bad)
(bad)
call
add
or
add
xor
(bad)
(bad)
cmp
add
sub
add
jg
add
sar
(bad)
(bad)
mov
or
add
cmp
sub
and
add
add
cmp
and
dec
jo
pop
(bad)
(bad)
call
or
leave
(bad)
(bad)
jmp
and
mov
(bad)
call
or
add
add
cmp
(bad)
jmp
fmul
and
xor
push
add
add
stc
add
or
es
(bad)
call
or
jge
push
add
sbb
(bad)
inc
push
cmp
and
add
add
inc
(bad)
(bad)
(bad)
cmp
add
add
(bad)
jg
add
add
sub
xchg
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
jle
add
add
add
add
add
sub
or
(bad)
jmp
and
sub
and
add
add
xchg
pop
cmp
add
adc
push
add
add
add
adc
add
push
and
add
add
fadd
add
cmp
add
push
adc
adc
add
cmp
add
add
add
je
add
sbb
or
pop
pop
pop
bound
add
cmp
add
cmp
adc
pop
push
add
pop
pop
cmp
(bad)
(bad)
inc
jne
add
sbb
movups
pop
adc
mulps
pop
pop
bound
and
add
push
cmp
add
and
add
add
or
add
add
cmp
add
adc
test
add
pop
adc
xor
dec
add
add
adc
adc
push
add
add
cmp
add
adc
dec
add
push
adc
and
add
cmp
add
add
add
cmp
add
or
add
add
cmp
or
adc
retf
add
and
repnz
(bad)
call
adc
fadd
add
pop
adc
adc
add
sub
jmp
pop
adc
adc
das
add
add
cmp
add
add
adc
pop
adc
add
add
sub
rol
add
mov
adc
add
add
adc
sub
add
pop
cmp
adc
adc
aas
sti
(bad)
(bad)
jmp
or
add
pop
cmp
adc
and
add
add
jb
(bad)
jmp
or
je
add
pop
pop
adc
sub
add
cmp
add
adc
and
add
add
add
add
push
add
add
add
jne
add
sbb
push
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
cmp
add
cmp
add
add
push
and
adc
sbb
cmp
add
adc
or
add
or
sub
push
and
add
add
cld
add
add
adc
mov
add
adc
add
add
out
(bad)
inc
adc
add
add
add
sub
add
cmp
add
add
add
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
test
add
adc
add
add
adc
sbb
add
cmp
or
add
add
cmp
cmp
add
push
pop
or
pop
add
add
inc
add
add
push
add
cmp
add
add
add
add
and
add
add
push
add
add
or
add
jnp
add
add
or
push
adc
sbb
or
popf
and
add
cmp
add
adc
and
push
mov
cmp
ret
mov
add
pop
sbb
adc
sub
add
add
adc
add
adc
inc
add
add
hlt
add
add
push
and
sbb
adc
add
add
fiadd
add
pop
or
adc
xchg
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
sete
add
adc
add
cmp
jae
add
adc
sbb
adc
and
add
add
movs
add
add
and
adc
pop
add
add
or
repnz
(bad)
inc
jnp
add
add
adc
push
sbb
punpcklbw
and
add
cmp
add
and
jo
iret
cmp
add
add
sbb
push
(bad)
(bad)
inc
jne
add
sbb
pop
add
and
add
pop
add
add
add
inc
add
add
adc
and
add
add
xchg
add
push
cmp
add
add
jle
add
add
adc
add
and
add
cmp
add
add
add
cmp
add
or
repnz
(bad)
jmp
cmp
add
dec
sbb
dec
add
add
add
std
(bad)
(bad)
clc
add
add
(bad)
(bad)
jg
add
imul
add
add
sbb
(bad)
dec
add
stos
cld
(bad)
call
sti
(bad)
call
add
(bad)
(bad)
jmp
add
add
std
(bad)
push
add
aad
add
jnp
(bad)
push
cli
(bad)
push
add
fscale
(bad)
jmp
std
(bad)
jmp
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
call
add
xchg
(bad)
(bad)
inc
(bad)
push
add
add
cld
(bad)
(bad)
cmp
add
and
add
sub
add
add
add
inc
sti
(bad)
(bad)
cld
sti
(bad)
call
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
ds
(bad)
jmp
(bad)
push
add
add
add
add
add
jb
(bad)
inc
add
add
std
(bad)
jmp
add
add
add
iret
sti
(bad)
inc
sti
(bad)
dec
add
add
jle
add
sti
add
add
add
xchg
(bad)
(bad)
jl
add
pushf
cld
(bad)
call
add
add
add
add
std
(bad)
push
add
or
add
and
add
push
sti
(bad)
jmp
add
add
add
lods
(bad)
(bad)
call
push
adc
push
add
add
cwde
add
push
cmp
xchg
(bad)
(bad)
jmp
push
retf
and
and
pop
inc
or
add
aas
add
add
(bad)
dec
call
add
add
std
(bad)
inc
(bad)
(bad)
jmp
add
test
(bad)
jmp
or
add
sub
dec
(bad)
(bad)
jmp
pop
and
add
add
cmp
(bad)
jmp
mov
(bad)
xchg
cmp
push
cmp
and
add
cmp
(bad)
(bad)
call
pop
adc
rol
add
pop
push
cmp
(bad)
(bad)
inc
je
add
sbb
push
xchg
and
adc
sub
cwde
add
push
cmp
add
and
add
cmp
std
(bad)
jmp
cmp
add
add
out
loope
adc
and
inc
xchg
neg
cmp
(bad)
(bad)
call
adc
or
push
add
add
mov
(bad)
(bad)
cmp
add
or
pop
or
sub
add
cmp
push
add
add
push
add
add
and
add
sub
cmp
jmp
sbb
adc
cmp
jb
(bad)
jmp
add
add
adc
add
popa
std
(bad)
(bad)
cmp
add
add
push
pop
pop
adc
and
add
add
dec
std
(bad)
jmp
cld
mov
(bad)
call
adc
add
add
add
add
add
add
add
add
add
add
cli
(bad)
inc
(bad)
(bad)
stc
add
add
add
add
add
cli
(bad)
call
sti
(bad)
inc
add
add
add
push
add
add
sti
(bad)
inc
add
add
sti
(bad)
(bad)
in
add
add
sti
(bad)
jmp
add
add
add
add
cld
(bad)
jmp
add
add
stc
(bad)
push
(bad)
(bad)
dec
stc
(bad)
(bad)
fdivrp
(bad)
call
sti
(bad)
push
add
add
cld
(bad)
dec
(bad)
(bad)
inc
add
add
sub
cmp
pop
and
adc
lock
(bad)
jmp
and
add
add
cmp
call
(bad)
(bad)
call
and
repnz
(bad)
call
or
pop
adc
and
add
add
fs
(bad)
(bad)
cmp
or
adc
pop
or
pop
pop
bound
or
daa
add
add
inc
cld
(bad)
call
pop
and
aas
inc
jno
and
cmp
or
add
cmp
push
adc
and
add
sub
adc
(bad)
jmp
adc
cmp
adc
add
(bad)
call
push
pop
pop
xchg
adc
mov
(bad)
call
cmp
(bad)
(bad)
call
adc
and
add
add
loope
(bad)
call
adc
add
adc
push
add
add
cwde
add
push
cmp
sti
(bad)
jmp
cmp
(bad)
call
push
pop
(bad)
ret
jmp
dec
add
add
lods
sti
(bad)
(bad)
cmp
(bad)
call
or
(bad)
(bad)
jmp
dec
add
add
xchg
sti
(bad)
call
push
and
sbb
dec
add
add
jle
(bad)
call
adc
or
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
adc
xchg
adc
and
add
sub
push
sti
(bad)
jmp
cmp
(bad)
(bad)
call
push
pop
pop
adc
and
add
sub
cmp
(bad)
jmp
adc
and
add
add
sub
(bad)
call
pop
and
(bad)
xor
and
out
jg
popa
cmp
adc
or
add
xchg
add
push
cmp
sti
(bad)
jmp
cmp
or
or
(bad)
(bad)
jmp
and
add
sub
jecxz
(bad)
jmp
cmp
jnp
add
add
adc
inc
add
pop
xchg
adc
and
add
add
xchg
add
push
cmp
cmp
(bad)
call
or
add
or
add
mov
pop
std
(bad)
inc
jne
add
sbb
push
adc
and
add
add
mov
(bad)
call
adc
pop
maxps
pop
pop
bound
adc
cmp
add
sub
outs
cli
(bad)
jmp
cmp
std
(bad)
call
add
cmp
add
or
adc
add
cmp
call
adc
adc
sldt
add
inc
cli
(bad)
call
adc
adc
inc
add
add
cmp
(bad)
call
nop
cmp
and
add
cmp
adc
adc
(bad)
(bad)
call
push
and
add
add
call
adc
and
add
push
cmp
cli
(bad)
jmp
cmp
adc
adc
pop
pop
pop
bound
adc
and
in
(bad)
(bad)
cmp
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
and
add
add
mov
movlps
and
add
cmp
cmp
(bad)
call
adc
adc
pop
pop
pop
bound
adc
pop
add
add
cmp
adc
and
adc
inc
cld
(bad)
call
push
and
add
add
jmp
adc
or
cmps
pop
add
cmp
add
sub
es
and
add
add
out
add
add
jle
add
add
and
add
add
jge
add
add
sbb
add
cmp
add
add
inc
pop
loope
and
push
cmc
popa
and
pop
inc
or
add
adc
add
pop
add
add
(bad)
(bad)
jmp
push
add
xlat
add
add
push
add
and
add
add
add
sub
add
push
cmp
cmp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
popa
add
push
and
add
add
popa
add
add
add
add
pop
and
push
add
add
and
add
pop
jge
add
add
sub
add
sub
xor
add
adc
add
test
add
add
fld
add
add
cmp
add
add
adc
and
pop
sbb
push
cmp
add
add
repz
(bad)
call
sub
jnp
add
add
jnp
add
add
inc
add
push
and
(bad)
call
sti
add
add
sbb
add
cmp
add
add
push
cmp
add
add
adc
add
cmp
push
cmp
add
add
add
add
cmp
adc
cmp
add
add
pop
and
add
inc
pop
or
add
add
and
add
cmp
adc
dec
add
add
or
add
cmp
add
adc
and
stos
push
int
and
scas
repz
popa
cmp
adc
push
push
sub
test
add
and
add
add
inc
add
add
sbb
push
cmp
add
pop
adc
repnz
(bad)
call
sub
jle
add
add
xchg
jge
add
add
and
add
cmp
add
add
pop
and
sbb
push
cmp
add
pop
sbb
repnz
(bad)
inc
push
jge
add
add
and
add
pop
cmp
add
add
adc
pop
ins
xchg
sbb
push
and
add
add
fld
add
add
add
add
jnp
add
add
pop
add
push
or
add
rol
add
dec
add
add
push
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
stos
add
add
add
add
add
jbe
add
sbb
add
add
add
pop
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
pop
add
add
add
out
add
cmp
(bad)
(bad)
jg
add
or
(bad)
call
add
jbe
add
dec
(bad)
(bad)
jmp
sbb
xchg
add
push
cmp
add
add
adc
pop
cmp
add
push
and
add
add
cmp
cmp
(bad)
inc
and
add
add
add
add
xor
add
cmp
add
add
jle
add
add
xchg
jge
add
add
or
jecxz
add
pop
adc
push
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
inc
and
add
add
add
add
push
add
add
cwde
add
push
cmp
mov
add
add
jge
add
add
das
add
add
cmp
push
adc
cmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cwde
add
push
cmp
add
sbb
push
cmp
pop
and
and
add
add
out
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cmp
add
add
pop
adc
add
add
daa
add
add
data16
(bad)
inc
jnp
add
add
ds
(bad)
jmp
or
add
cmp
add
adc
and
add
add
push
cmp
(bad)
(bad)
call
adc
repnz
(bad)
inc
push
cmp
add
add
daa
add
add
xchg
add
push
cmp
add
add
pop
or
push
and
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
pop
or
add
add
sub
add
cmp
sbb
push
and
add
add
cmps
add
add
jns
sbb
(bad)
call
or
jae
adc
and
cmp
sti
(bad)
(bad)
jle
add
add
or
xor
add
cmp
add
and
push
push
xchg
cmp
jnp
add
add
ins
add
push
or
push
add
add
pop
add
add
pop
pop
and
add
cmp
cld
(bad)
jmp
xor
add
cmp
add
cmp
sbb
add
add
add
cmp
add
push
add
add
add
or
and
add
cmp
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
jmp
sub
add
dec
or
dec
add
add
add
(bad)
(bad)
push
(bad)
call
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
(bad)
std
cli
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
jp
(bad)
inc
add
(bad)
(bad)
jmp
add
add
sti
(bad)
call
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
std
(bad)
jmp
(bad)
dec
dec
add
add
cld
(bad)
inc
std
(bad)
dec
add
add
std
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
add
add
cld
(bad)
jmp
(bad)
push
add
cli
(bad)
call
(bad)
jmp
call
(bad)
(bad)
call
add
and
(bad)
(bad)
mov
add
add
add
add
cmp
jnp
add
add
jnp
add
add
pop
add
push
or
add
add
or
(bad)
call
or
push
pop
push
sbb
cli
(bad)
inc
jnp
add
add
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
cld
(bad)
inc
jnp
add
add
ds
sti
(bad)
jmp
sub
add
sub
(bad)
(bad)
(bad)
jmp
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
inc
add
push
or
fdivr
(bad)
jmp
and
xchg
add
push
cmp
adc
and
push
pop
rcr
(bad)
push
pop
adc
mov
(bad)
call
or
pop
mov
pop
and
movs
stc
(bad)
call
or
add
lods
add
add
(bad)
call
adc
call
or
hlt
add
add
add
add
(bad)
call
or
mov
or
push
and
add
add
sub
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
sub
add
and
add
cmp
(bad)
(bad)
call
or
push
and
add
add
cmp
(bad)
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
pop
pop
sub
call
sub
adc
dec
add
add
adc
add
cmp
std
(bad)
call
sub
jle
add
add
and
add
add
jge
add
add
adc
mov
pop
pop
pop
xchg
sbb
or
add
push
cmp
and
inc
cmp
(bad)
call
pop
pop
ins
xchg
adc
and
add
add
mov
(bad)
inc
and
add
pop
jge
add
add
push
add
add
jae
(bad)
call
pop
adc
cmp
or
sti
add
add
xchg
pop
cmp
(bad)
(bad)
call
sub
adc
(bad)
jbe
add
cmp
add
sub
es
and
add
add
cwde
add
push
cmp
adc
and
xchg
and
add
add
adc
add
pop
add
add
outs
add
add
push
add
add
and
add
pop
jge
add
add
add
add
sub
dec
add
add
adc
and
or
pop
and
jmp
and
pop
add
add
or
sbb
add
cmp
add
and
mov
or
inc
add
add
and
add
fs
add
add
push
add
add
or
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
adc
add
cmp
add
add
push
pop
push
lea
add
pop
or
repnz
(bad)
inc
sub
jnp
add
add
jnp
add
add
or
or
add
cmp
adc
(bad)
add
add
and
add
pop
jge
add
add
add
add
cmp
inc
add
add
push
jge
add
add
push
add
add
xchg
add
pop
or
add
and
add
cmp
add
cmp
add
add
or
add
add
add
add
pop
and
add
and
and
je
add
adc
loop
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
cmp
add
add
and
sub
pop
pop
adc
adc
add
xor
add
add
add
add
xor
(bad)
jmp
call
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
outs
add
add
add
add
push
cmp
add
adc
and
dec
jp
and
les
(bad)
call
pop
and
mov
lods
mov
loopne
cmp
(bad)
call
adc
add
add
add
cmp
add
pop
or
add
jmp
(bad)
(bad)
inc
adc
and
add
add
xchg
add
push
cmp
jle
add
add
add
add
xchg
add
push
cmp
add
add
and
and
(bad)
inc
add
pop
pop
adc
add
add
add
pushf
and
add
add
jmp
cmp
add
xchg
and
adc
cmp
call
add
add
xchg
pop
cmp
(bad)
(bad)
inc
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
or
add
sub
pop
add
adc
add
sbb
add
pop
cmp
add
add
(bad)
jmp
pop
add
add
push
add
adc
and
(bad)
sbb
popa
cmp
(bad)
call
pop
and
jo
xor
arpl
cmp
(bad)
inc
jnp
add
add
cmp
and
add
add
add
add
add
add
push
and
add
add
xchg
add
push
cmp
add
add
and
dec
int3
adc
add
pop
jle
gs
(bad)
call
pop
and
loop
pop
and
xchg
mov
push
(bad)
(bad)
call
adc
add
(bad)
fwait
les
add
(bad)
inc
pop
pop
or
sbb
add
push
cmp
add
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
and
add
sub
add
sub
add
sub
sldt
add
xchg
add
push
cmp
pop
or
add
inc
std
(bad)
call
add
add
add
out
(bad)
inc
jmp
push
add
add
jo
add
and
xchg
(bad)
call
movlps
adc
pop
add
add
adc
mov
(bad)
jmp
and
add
push
cmp
add
and
pop
std
(bad)
call
or
inc
(bad)
(bad)
inc
(bad)
jmp
adc
add
cmp
add
add
and
inc
cmp
std
(bad)
inc
cmp
pop
add
add
push
or
dec
add
add
add
sti
(bad)
(bad)
std
cld
(bad)
(bad)
call
sti
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
cld
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
cld
std
(bad)
jmp
(bad)
dec
(bad)
push
(bad)
inc
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jge
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
sti
(bad)
push
std
(bad)
dec
sti
(bad)
(bad)
mov
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
push
sti
(bad)
call
(bad)
jmp
add
add
sub
sbb
(bad)
jmp
and
popa
(bad)
(bad)
call
adc
or
add
cmp
(bad)
cmp
sti
(bad)
inc
add
add
stos
add
add
add
add
stos
add
add
add
add
sub
add
xor
add
add
add
add
sub
es
and
repnz
lea
add
add
add
mov
add
sub
add
xor
add
add
add
add
sub
es
and
add
add
add
add
sub
add
adc
or
add
add
push
and
sahf
add
add
mov
add
adc
sbb
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shr
nop
add
push
and
add
add
cmp
add
cmp
add
adc
adc
xor
add
and
add
add
cmp
add
add
and
repnz
stc
and
and
pop
inc
or
add
mov
add
add
add
add
and
add
add
add
add
mov
add
sahf
add
add
add
add
cmp
add
add
xor
(bad)
(bad)
call
push
inc
adc
add
mov
add
sbb
add
add
add
pop
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
cmc
add
add
add
add
(bad)
(bad)
inc
cmp
and
add
add
mov
add
adc
pop
imul
add
cmp
add
jle
add
add
add
add
pop
or
add
add
add
pop
add
add
nop
adc
and
add
add
dec
add
add
adc
and
add
add
cmp
add
adc
and
add
push
and
add
cmp
add
adc
pop
pop
pop
adc
and
inc
add
arpl
pop
and
add
add
or
add
cmp
(bad)
(bad)
call
or
add
sbb
or
add
cmp
add
add
add
add
mov
add
add
fld
add
pop
or
push
and
add
add
iret
add
add
or
add
adc
adc
add
mov
adc
and
add
add
cwde
add
push
cmp
jle
add
add
adc
push
add
add
cmp
mov
cmp
add
add
push
pop
sbb
and
(bad)
inc
and
add
and
add
add
push
lock
stos
cmp
adc
and
sub
fnstcw
jbe
cmp
(bad)
(bad)
call
cmp
add
add
je
add
add
or
add
jle
add
add
push
add
sbb
adc
or
or
adc
sbb
xor
(bad)
call
or
pop
adc
jmp
or
push
adc
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jns
add
inc
(bad)
(bad)
jmp
std
(bad)
dec
std
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
out
std
(bad)
inc
add
add
add
scas
(bad)
(bad)
jmp
add
add
add
jne
(bad)
dec
add
add
add
adc
add
dec
(bad)
(bad)
dec
std
(bad)
call
(bad)
inc
add
add
cld
(bad)
dec
add
mov
add
fdivrp
(bad)
push
add
add
add
add
add
add
add
cmp
jmp
adc
and
ins
jns
and
cmp
std
(bad)
(bad)
jle
add
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
or
pop
adc
and
add
add
and
(bad)
call
adc
push
cmp
std
(bad)
call
cmp
(bad)
(bad)
call
add
sbb
add
sub
and
add
add
std
(bad)
(bad)
call
adc
pop
add
add
push
cmp
std
(bad)
call
or
repnz
(bad)
call
pop
pop
punpckldq
or
add
adc
xchg
adc
and
add
add
sar
call
or
add
add
mov
(bad)
call
or
push
and
add
add
cmp
adc
and
and
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
jmp
add
add
cmp
(bad)
call
or
add
sbb
or
pop
xchg
adc
push
add
add
push
(bad)
(bad)
jmp
ds
cli
cmp
(bad)
call
adc
fild
add
xchg
pop
push
pop
adc
and
xchg
test
std
sti
(bad)
dec
je
add
sbb
sbb
pop
popa
or
pop
add
add
sbb
(bad)
call
adc
push
xchg
adc
and
add
add
or
(bad)
(bad)
cmp
pop
add
adc
sbb
xchg
add
push
cmp
std
(bad)
jmp
adc
and
mov
jbe
popa
cmp
outs
add
push
and
add
add
retf
std
(bad)
(bad)
cmp
(bad)
call
mov
add
add
xchg
add
push
cmp
and
add
add
cmp
adc
and
adc
and
add
cmp
mov
push
pop
and
xchg
(bad)
(bad)
jmp
adc
add
sub
jb
(bad)
jmp
cmp
add
add
xor
add
add
add
adc
add
push
and
add
add
repnz
add
or
or
inc
pop
and
or
add
add
add
add
cmp
add
add
cmp
pop
pop
or
imul
sldt
add
mov
add
and
add
add
sbb
pop
aas
sub
add
and
sahf
add
add
sbb
sti
(bad)
cmp
add
add
add
add
pop
and
add
add
add
add
pop
add
add
sub
and
add
add
ins
add
add
push
and
adc
add
pop
add
add
dec
add
add
add
add
cmp
add
adc
and
jmp
xchg
and
push
popa
cmp
add
adc
and
mov
sbb
popa
cmp
add
adc
add
add
jb
(bad)
push
add
fadd
add
mov
add
(bad)
inc
add
add
add
add
add
add
add
add
or
add
cmp
add
add
pop
pop
ins
xchg
adc
add
cmp
add
add
jle
add
add
push
and
add
cmp
add
add
repnz
mov
and
popa
and
pop
inc
or
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
add
add
add
dec
add
add
add
add
add
add
add
add
pop
cmp
add
and
mov
(bad)
call
push
and
and
adc
add
dec
add
add
inc
cmp
(bad)
(bad)
call
push
pop
push
xchg
and
add
add
add
hlt
cmp
(bad)
call
push
and
add
add
add
loope
(bad)
call
cmp
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
jmp
std
(bad)
call
add
sbb
add
sar
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
call
(bad)
jmp
(bad)
call
std
(bad)
(bad)
jmp
add
sub
(bad)
std
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
call
pop
pop
imul
pop
(bad)
(bad)
call
inc
je
add
add
adc
and
adc
and
pop
adc
add
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
out
push
stos
pop
and
sub
cmp
or
out
rol
pop
and
lods
pop
ret
popa
cmp
(bad)
call
outs
add
push
and
cwde
add
push
cmp
adc
(bad)
call
gs
add
cmp
(bad)
(bad)
jmp
adc
and
(bad)
and
sbb
(bad)
call
or
or
add
cmp
(bad)
(bad)
jmp
pop
imul
inc
add
pop
sub
popa
inc
add
add
mov
add
add
cmp
xchg
std
(bad)
call
xor
add
add
sbb
add
sub
es
and
add
add
push
add
add
rcl
cmp
add
adc
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
mov
pop
pop
or
adc
add
cmp
add
add
cmps
(bad)
(bad)
inc
sub
pop
sub
movs
add
add
and
add
add
aam
add
cmp
push
add
add
pop
and
add
add
cmp
adc
and
mov
loop
and
ret
add
popa
pop
jl
push
popa
inc
add
add
jno
add
and
add
add
mov
add
or
add
add
add
add
pop
pop
frstor
add
adc
add
cmp
add
adc
pop
dec
xchg
pop
jp
adc
add
xchg
add
push
cmp
add
adc
and
adc
retf
popf
popa
cmp
add
adc
and
and
nop
add
add
pop
cmp
add
add
and
add
add
adc
adc
jmp
add
add
dec
or
dec
add
add
add
add
test
(bad)
(bad)
push
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
push
add
mov
add
mov
add
pop
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
push
pop
and
add
call
cmp
(bad)
(bad)
inc
je
add
add
adc
pop
or
pop
inc
pop
adc
add
gs
(bad)
jmp
pop
mov
add
add
or
out
adc
pop
and
cmp
add
adc
pop
ins
xchg
adc
aaa
cmp
add
adc
and
inc
push
and
mov
popa
cmp
adc
add
xchg
add
push
cmp
(bad)
(bad)
jmp
or
pop
cmp
adc
(bad)
(bad)
(bad)
(bad)
cmp
or
and
in
(bad)
(bad)
jmp
inc
pop
sub
push
mov
sbb
adc
pop
or
add
and
add
sub
(bad)
(bad)
stc
std
(bad)
(bad)
jnp
(bad)
call
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jle
(bad)
call
std
(bad)
call
(bad)
jmp
(bad)
call
add
and
add
add
xchg
add
push
cmp
adc
and
and
ss
popa
cmp
jo
add
and
add
push
cmp
(bad)
jmp
jle
add
add
push
and
add
add
pop
(bad)
(bad)
jmp
xchg
push
cmp
(bad)
call
or
or
add
cmp
(bad)
jmp
and
cmp
and
add
add
cmp
(bad)
(bad)
jmp
adc
pop
cmp
add
add
add
jo
sub
jo
add
pop
jl
pushf
pop
adc
add
add
(bad)
(bad)
cmp
add
adc
or
lds
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
and
and
and
pop
inc
or
add
les
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
or
and
test
adc
mov
mov
and
cdq
hlt
mov
cmp
push
and
add
xchg
and
adc
xlat
cmp
(bad)
call
jno
add
and
stos
lea
addr16
(bad)
call
or
outs
pusha
js
pop
and
push
dec
cmp
push
(bad)
(bad)
call
add
add
add
add
add
outs
add
add
add
add
add
or
add
stos
(bad)
(bad)
dec
add
add
add
add
add
and
sbb
cmp
(bad)
(bad)
inc
and
popa
inc
add
add
aas
add
add
lds
mov
call
adc
ds
int3
pop
and
pop
(bad)
popa
cmp
(bad)
(bad)
call
or
sahf
(bad)
mov
and
or
popa
cmp
(bad)
(bad)
call
or
shl
(bad)
(bad)
call
cmp
or
push
pop
push
pop
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
xchg
add
push
or
(bad)
(bad)
inc
pop
pop
or
int3
add
add
loope
add
or
add
sbb
pop
aas
or
add
push
adc
call
pop
and
cmp
(bad)
(bad)
inc
sub
pop
and
adc
inc
add
adc
or
add
add
add
adc
add
push
jle
add
add
add
adc
fwait
sbb
rol
pop
pop
or
or
add
xor
add
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
cmp
add
mov
add
xchg
or
popa
cmp
add
push
popa
inc
add
add
mov
add
and
add
(bad)
call
or
pop
lock
and
fwait
pushf
fwait
popa
cmp
or
xchg
retf
and
(bad)
cmps
popa
cmp
(bad)
dec
inc
or
add
push
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
sbb
add
add
add
add
pop
xchg
in
jg
ss
(bad)
call
pop
and
int3
outs
sbb
popa
cmp
(bad)
(bad)
call
or
sub
(bad)
(bad)
call
cmp
(bad)
call
or
inc
mov
add
sbb
sub
pop
pop
or
pop
or
inc
sbb
pop
add
add
or
call
cmp
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
jb
add
sub
clc
(bad)
(bad)
inc
add
adc
or
xchg
add
sbb
add
sub
es
jle
add
add
add
cmps
pop
jo
and
mov
or
or
or
add
stos
add
add
add
aaa
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
or
jp
loope
pop
and
jp
ds
cmp
or
stos
xor
(bad)
call
or
or
sub
mov
cmp
push
add
popa
inc
add
add
bound
add
and
jo
xor
js
(bad)
call
adc
or
das
test
pop
and
inc
(bad)
call
adc
and
mov
push
(bad)
(bad)
call
add
or
add
sbb
add
adc
add
ja
(bad)
call
add
add
add
ja
(bad)
jmp
add
add
add
add
(bad)
(bad)
je
cmp
(bad)
(bad)
call
cmp
add
add
mov
mov
add
sbb
add
sub
add
push
pop
pop
or
fiadd
add
or
inc
or
sahf
add
add
sbb
pop
aas
or
add
sbb
add
xchg
(bad)
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
jae
add
es
add
add
add
add
add
add
add
add
add
add
sub
stc
(bad)
(bad)
inc
add
xor
add
add
sub
es
jle
add
add
add
add
push
and
in
dec
xor
adc
pop
or
or
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
test
(bad)
call
pop
and
mov
pop
imul
adc
and
iret
or
cmp
xlat
jb
cmp
add
or
add
or
add
mov
add
je
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
(bad)
(bad)
call
or
add
mov
adc
dec
jns
cmp
inc
add
pop
inc
pop
push
popa
inc
add
add
sbb
test
sbb
je
add
es
adc
test
(bad)
call
add
repnz
add
ss
(bad)
call
adc
and
add
add
cmp
(bad)
inc
mov
add
sbb
xchg
add
push
or
adc
inc
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
sub
sbb
or
add
pop
or
add
sbb
(bad)
call
push
and
adc
and
add
xchg
pop
cmp
(bad)
(bad)
inc
je
add
sbb
adc
pop
adc
cmp
(bad)
(bad)
call
xor
add
add
adc
add
push
sub
es
sub
cwde
add
push
cmp
and
add
add
cwde
add
push
cmp
add
add
loope
add
push
je
add
sbb
and
add
popf
and
add
add
retf
add
add
add
add
add
add
pop
cmp
adc
mov
and
cmp
add
add
je
add
sbb
and
and
add
add
lea
add
push
je
add
sbb
and
and
add
add
jbe
add
and
fdivr
cmp
mov
or
or
add
cmp
add
cmp
add
adc
cmp
add
pop
add
add
inc
add
add
les
sub
cmp
add
push
je
add
sbb
mov
and
add
add
and
add
adc
fistp
aam
and
popa
cmp
add
or
add
add
add
add
add
data16
add
add
jg
(bad)
call
(bad)
(bad)
jmp
adc
add
cmp
add
add
and
sbb
and
cmp
add
add
jle
add
add
and
add
add
mov
add
jmp
popa
cmp
add
add
add
jle
add
xchg
and
add
add
and
add
add
pop
add
and
sbb
cmp
add
add
and
add
mov
add
cmp
add
pop
add
add
popa
add
add
pop
pop
xchg
or
adc
cmp
add
and
jge
add
push
jne
add
sbb
and
add
popf
and
add
add
xchg
add
push
cmp
add
add
and
push
add
add
je
add
sbb
and
or
add
jmp
or
add
dec
push
add
or
add
add
add
(bad)
(bad)
inc
(bad)
jmp
add
add
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
mov
(bad)
jmp
std
(bad)
dec
std
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
dec
add
add
add
add
push
add
add
(bad)
(bad)
(bad)
jmp
mov
mov
je
add
sbb
add
add
ins
(bad)
(bad)
call
or
or
add
cmp
(bad)
jmp
xor
push
inc
cmp
add
xchg
pop
and
fcmovne
or
jp
add
push
je
add
sbb
and
add
popf
and
add
cmp
(bad)
jmp
les
sub
cmp
add
push
jne
add
sbb
and
add
add
or
jmp
cmp
add
sub
add
hlt
pop
and
(bad)
push
add
add
jne
add
and
add
add
(bad)
(bad)
call
lea
and
into
(bad)
(bad)
jmp
les
sub
and
and
pop
inc
adc
add
jne
(bad)
jmp
(bad)
dec
(bad)
call
(bad)
(bad)
call
cld
(bad)
call
std
(bad)
push
(bad)
(bad)
dec
std
(bad)
push
std
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
xor
add
add
adc
add
push
add
add
movs
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
cmps
add
push
sub
adc
or
or
add
adc
add
push
add
add
cmps
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
test
add
sub
adc
or
or
add
add
add
sub
es
add
test
add
xor
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
stos
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
adc
add
push
add
add
mov
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
mov
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
int3
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
jo
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
pop
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
or
add
sub
adc
or
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
and
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
pusha
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
popa
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
bound
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
arpl
add
sub
adc
or
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
data16
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
or
add
adc
or
or
add
add
add
sub
es
add
push
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
imul
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
imul
or
add
xor
add
add
add
add
add
add
push
add
or
add
ins
add
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
ins
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
outs
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
rol
push
sub
adc
or
lods
add
add
add
push
jle
add
add
push
jle
add
add
pop
and
cs
jg
and
pop
inc
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
pop
adc
lods
xor
pop
and
inc
push
xor
test
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
imul
call
mov
and
pop
(bad)
(bad)
call
push
and
add
add
and
or
sub
inc
(bad)
(bad)
call
or
adc
and
ss
(bad)
inc
add
pop
and
add
add
inc
add
add
mov
sbb
(bad)
call
or
xchg
shl
pop
and
aas
in
popa
cmp
(bad)
(bad)
call
or
or
or
js
cmp
(bad)
(bad)
call
or
sahf
sti
fisttp
pop
and
cmp
(bad)
(bad)
call
push
and
add
xchg
and
cmp
(bad)
call
or
sbb
add
inc
mov
add
sbb
mov
adc
pop
adc
(bad)
(bad)
inc
pop
pop
or
jl
add
or
adc
add
or
pop
or
sldt
add
pop
and
adc
call
push
pop
inc
xchg
sbb
cmp
(bad)
(bad)
inc
sub
adc
call
xor
add
add
adc
add
push
and
add
add
cmp
add
add
and
adc
mov
and
add
add
inc
add
and
(bad)
mul
push
test
adc
pop
or
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
stos
add
add
fcom
xlat
mov
cmps
(bad)
(bad)
call
or
push
pop
not
arpl
popa
cmp
add
add
add
add
mov
(bad)
(bad)
jle
add
add
pop
and
add
add
add
add
xchg
xchg
push
mov
call
or
mov
jb
pop
and
adc
js
cmp
(bad)
call
push
pop
cmp
add
add
xor
add
adc
and
dec
test
push
(bad)
rcr
(bad)
call
pop
pop
imul
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
inc
(bad)
(bad)
call
add
add
add
je
add
popa
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
push
adc
add
cmp
adc
and
push
mov
loop
popa
cmp
call
pop
and
adc
mov
push
add
jbe
push
popa
inc
add
add
das
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
cmp
(bad)
(bad)
call
or
or
mov
pop
and
cmp
(bad)
(bad)
call
or
adc
add
cmp
(bad)
call
or
pop
or
sub
add
cmp
add
add
and
clc
(bad)
(bad)
jmp
pushf
add
add
or
add
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
inc
jne
add
add
adc
and
pop
pop
adc
add
mov
push
add
add
push
and
add
add
stos
(bad)
(bad)
call
push
and
and
add
add
add
add
cmp
and
add
add
test
(bad)
(bad)
cmp
(bad)
call
or
mov
stc
or
sbb
cmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
add
stc
(bad)
(bad)
jmp
(bad)
jmp
add
add
ret
push
cmp
(bad)
(bad)
jmp
pop
push
or
add
ret
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
mov
and
add
add
rol
push
cmp
std
(bad)
jmp
cmp
add
adc
push
add
add
adc
add
push
jle
add
add
add
sbb
loopne
and
adc
stos
popa
and
pop
inc
or
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
(bad)
cmp
add
add
add
add
add
inc
mov
movs
scas
xchg
popa
cmp
add
cmp
add
adc
and
stos
bswap
pop
and
sbb
dec
popa
cmp
add
pop
or
mov
rcr
sub
popa
cmp
(bad)
dec
add
imul
inc
add
add
jb
add
and
in
pop
stos
cmp
(bad)
dec
inc
or
add
push
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
sbb
xchg
cmps
cmp
(bad)
(bad)
call
or
div
shr
call
mov
and
xchg
test
(bad)
call
or
cmp
(bad)
(bad)
call
add
pop
add
add
add
loop
(bad)
call
or
pop
or
inc
mov
add
sbb
add
sub
pop
or
inc
pop
pop
or
add
jle
add
add
sbb
add
add
sbb
pop
pushf
pop
sbb
pop
add
add
(bad)
call
add
fiadd
add
xchg
and
cmp
(bad)
(bad)
call
add
pop
add
add
cmp
(bad)
(bad)
inc
sub
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
push
add
add
add
sub
es
add
add
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
push
add
sbb
add
sub
es
jle
add
add
add
and
sub
and
leave
dec
jmp
and
inc
or
add
retf
(bad)
(bad)
call
add
mov
add
add
add
add
add
xor
add
cmp
add
push
popa
inc
add
add
mov
add
and
dec
sar
(bad)
(bad)
call
or
sub
jbe
pop
and
ins
xor
(bad)
call
or
(bad)
imul
cmp
adc
outs
in
cmps
loop
jge
(bad)
call
add
or
add
das
add
add
add
aaa
add
add
add
cmp
(bad)
jns
add
inc
add
add
add
add
add
or
add
and
inc
(bad)
(bad)
call
or
add
dec
pop
adc
cmp
cs
(bad)
call
add
add
(bad)
(bad)
call
add
call
add
sbb
sub
add
push
push
pop
pop
or
jle
add
or
lds
add
or
mov
add
pop
or
or
cmp
pop
adc
data16
(bad)
call
cmp
(bad)
(bad)
call
adc
pop
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
sub
(bad)
(bad)
inc
add
xor
jp
add
adc
add
push
jle
add
add
add
add
push
pop
or
add
xchg
adc
in
add
popa
and
inc
or
add
and
add
add
add
imul
add
add
add
(bad)
(bad)
(bad)
cmp
or
mov
test
mov
popa
cmp
adc
xrelease
cmp
or
add
add
and
xchg
(bad)
(bad)
call
or
xor
adc
pop
and
jmp
daa
popa
cmp
add
or
popa
inc
add
add
inc
add
add
dec
clc
jno
cmp
(bad)
call
add
or
add
mov
(bad)
jmp
add
push
add
adc
add
pop
add
add
add
add
add
add
add
add
add
ffree
inc
push
cmp
(bad)
call
outs
(bad)
(bad)
call
push
and
adc
mov
(bad)
inc
mov
add
sbb
leave
add
push
push
pop
pop
or
dec
or
mov
and
or
sbb
cmp
sbb
add
cmp
call
add
out
(bad)
(bad)
call
add
add
add
addr16
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
int
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
lds
add
add
add
sub
es
sub
es
push
sub
add
push
cmp
push
add
add
cmp
add
add
add
push
jge
add
add
add
add
cmp
add
add
add
add
add
push
add
push
and
add
add
add
add
sbb
add
add
add
add
cmp
jae
add
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
test
(bad)
jmp
and
cmp
(bad)
(bad)
jmp
add
rol
add
and
add
add
mov
add
add
xor
add
add
adc
add
push
sub
es
sub
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
add
push
lea
add
and
add
rol
add
add
add
add
add
cmp
add
add
add
add
add
sbb
add
add
rol
add
cmp
add
push
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
call
or
add
add
cmp
sub
jmp
cmp
and
xor
and
cmp
popa
cmp
sbb
add
add
rol
add
cmp
add
or
add
cmp
jmp
sub
add
add
inc
add
(bad)
(bad)
dec
add
das
(bad)
(bad)
dec
add
add
add
and
add
add
dec
(bad)
(bad)
(bad)
cmp
push
lea
add
and
add
rol
add
add
add
fsin
(bad)
jmp
and
and
(bad)
dec
and
lock
retf
pop
and
inc
lods
popa
cmp
add
add
or
or
add
cmp
(bad)
jmp
lods
cs
pop
and
mov
dec
popa
and
or
add
sar
inc
(bad)
(bad)
call
add
cmps
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
jmp
pop
add
add
(bad)
(bad)
(bad)
jmp
mov
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
fld
add
pop
add
adc
add
push
jle
add
add
push
and
jl
mov
sbb
push
or
or
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
or
adc
repz
mov
(bad)
call
adc
movs
fild
and
ja
jge
cmp
add
push
popa
inc
add
add
mov
add
mov
stos
in
lea
jl
(bad)
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
hlt
mov
cmp
(bad)
call
push
and
pop
inc
pop
adc
mov
and
(bad)
call
or
xor
dec
fwait
js
popa
cmp
(bad)
(bad)
call
and
lods
xchg
pop
and
xor
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
and
and
cmp
(bad)
(bad)
call
(bad)
add
push
and
adc
cmp
(bad)
(bad)
call
cmp
pop
and
and
cmp
or
or
add
inc
mov
add
sbb
add
xlat
add
push
or
push
pop
adc
(bad)
(bad)
inc
mov
add
sbb
add
fadd
add
or
or
add
inc
pop
pop
or
mov
and
and
add
add
sbb
pop
aas
adc
push
and
add
xchg
and
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
adc
or
or
add
adc
add
push
add
add
fiadd
add
sub
add
adc
or
or
add
adc
add
push
add
add
fld
add
sub
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
add
add
add
add
add
sub
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
repnz
add
add
sub
es
sub
es
and
add
add
cmp
add
add
and
stos
add
add
push
or
add
add
cmp
add
add
or
add
call
xor
add
pop
pop
and
mov
add
and
add
push
cmp
add
add
pop
or
add
pop
adc
repz
(bad)
call
add
test
or
add
stos
add
add
cmc
add
add
and
add
add
sar
(bad)
jmp
sbb
nop
add
add
fild
add
push
jne
add
sbb
and
pushf
and
add
add
je
add
jle
add
add
add
adc
add
sub
add
push
cmp
add
es
cmc
xchg
cmp
add
pop
and
mov
add
add
cmp
add
add
mov
add
push
je
add
sbb
and
or
sub
add
push
cmp
add
cmp
add
add
add
gs
or
add
pop
add
add
or
add
cmp
(bad)
(bad)
inc
jne
add
sbb
add
push
sbb
add
or
loopne
add
cmp
add
add
and
add
add
mov
add
and
add
add
mov
add
or
add
mov
add
cli
sub
cmps
add
add
inc
adc
add
add
add
fs
(bad)
(bad)
jnp
(bad)
inc
add
add
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
sbb
add
cmp
add
push
and
daa
clc
cvtps2pd
gs
cmp
add
and
add
add
or
push
add
add
sub
add
pop
push
or
call
or
repz
(bad)
inc
je
add
sbb
add
push
sbb
add
and
add
sub
add
push
cmp
add
add
adc
cdq
add
add
add
sub
add
push
cmp
add
add
pop
and
or
and
add
sub
add
push
cmp
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
and
pushf
and
add
add
mov
add
adc
add
xchg
pop
or
add
xchg
add
add
pop
sti
ins
push
and
add
idiv
ja
add
jle
add
add
add
add
outs
add
add
push
and
ja
pop
and
add
jecxz
cmp
add
adc
adc
add
add
daa
add
add
add
and
add
add
cmp
add
add
push
or
xor
(bad)
jmp
and
add
add
cmp
add
sbb
call
or
repz
(bad)
call
adc
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
call
call
add
(bad)
cld
(bad)
dec
add
add
add
add
add
add
(bad)
jmp
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
cld
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
cli
add
add
add
pop
(bad)
(bad)
jmp
cld
(bad)
(bad)
mov
cld
(bad)
(bad)
ds
(bad)
call
std
(bad)
inc
(bad)
jmp
(bad)
push
add
add
(bad)
inc
add
pop
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
push
and
push
rcl
pop
popf
popa
cmp
add
pop
prefetch
push
add
add
cmp
(bad)
call
push
and
pop
aam
pop
and
imul
je
add
sbb
and
pushf
and
add
add
push
(bad)
(bad)
jmp
bound
cmp
clc
jno
pop
popa
and
pop
inc
or
cld
(bad)
(bad)
cmp
add
sbb
(bad)
(bad)
(bad)
jg
(bad)
call
std
(bad)
jmp
(bad)
push
add
add
(bad)
(bad)
inc
inc
sti
(bad)
jmp
pop
add
add
mov
push
and
aas
test
pop
and
cmp
push
and
cmps
(bad)
pop
and
ds
popa
cmp
or
jge
jg
(bad)
call
adc
add
cmp
(bad)
jmp
cmp
cld
(bad)
inc
and
add
add
imul
add
add
pop
(bad)
(bad)
(bad)
cmp
jne
add
sbb
and
pushf
and
add
add
inc
(bad)
(bad)
call
add
in
add
cmp
(bad)
(bad)
(bad)
cmp
add
adc
or
push
add
add
add
sub
es
sub
es
add
out
add
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
xor
add
add
add
adc
add
push
sub
es
push
sub
add
push
cmp
add
and
add
add
cli
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
cmp
add
add
lds
sbb
add
lea
add
and
add
jmp
pop
add
add
jecxz
add
and
add
add
mov
jnp
retf
daa
cmp
add
add
adc
and
add
jmp
add
add
or
add
push
cmp
add
and
retf
daa
and
sbb
inc
push
add
add
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
cmp
add
add
or
or
add
cmp
add
add
jne
stc
jno
mov
lea
add
and
add
jmp
pop
add
add
cmp
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
dec
and
push
xchg
(bad)
pop
and
cmp
(bad)
call
or
pop
add
add
cmp
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
pop
push
add
xor
add
sub
es
sub
es
and
add
add
cmp
add
add
sbb
adc
add
sub
add
push
cmp
jle
add
add
sbb
and
add
cmp
and
adc
mov
adc
add
pop
adc
and
add
out
add
push
sub
add
pop
add
add
cmp
add
adc
sbb
sbb
nop
shl
fiadd
add
sbb
add
sub
add
push
cmp
add
es
or
add
add
xor
add
pop
push
lea
add
add
and
add
add
push
add
add
clc
add
add
add
add
push
pop
or
dec
add
push
popf
and
add
add
inc
add
and
fstp
out
cmp
add
add
cld
cdq
pop
call
add
or
and
add
add
pop
dec
xchg
pop
dec
pop
or
add
add
sub
add
push
cmp
add
add
adc
xor
and
add
add
mov
add
push
or
mov
add
pop
adc
repz
(bad)
call
push
lea
add
sub
and
add
add
mov
add
cmp
add
jle
add
add
and
add
add
pop
sbb
add
popf
and
add
add
lock
push
cmp
add
es
adc
and
add
out
add
push
sub
add
adc
add
sub
add
push
cmp
add
es
add
add
and
add
add
sub
add
and
jb
cmp
adc
add
add
add
aas
add
add
add
test
add
(bad)
(bad)
jmp
add
add
add
add
add
cmp
add
inc
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
push
(bad)
(bad)
jmp
push
add
add
cmp
xchg
(bad)
(bad)
inc
pop
push
aas
push
add
add
sub
add
cmp
or
jnp
(bad)
call
or
repz
(bad)
call
add
add
add
add
and
cmp
add
and
xchg
test
sub
popa
and
pop
inc
push
add
add
(bad)
js
add
and
add
or
(bad)
push
add
add
add
add
add
add
std
(bad)
push
add
add
add
(bad)
(bad)
call
sbb
add
cmp
add
add
cld
(bad)
(bad)
inc
and
add
add
cmp
add
cmp
add
add
or
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
or
add
sar
(bad)
jmp
add
add
std
(bad)
call
std
(bad)
(bad)
jmp
add
add
cld
(bad)
dec
cld
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sldt
add
inc
(bad)
(bad)
(bad)
cmp
push
add
add
add
and
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
dec
add
push
popf
push
sub
add
push
cmp
(bad)
jmp
and
add
add
cld
(bad)
(bad)
(bad)
cmp
std
(bad)
(bad)
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
dec
add
push
popf
and
add
add
xlat
(bad)
(bad)
(bad)
jle
add
add
and
pushf
and
add
add
sar
dec
and
out
add
add
and
add
add
test
imul
add
and
pushf
and
lock
push
cmp
cmp
(bad)
inc
pop
pop
or
and
add
sub
add
push
cmp
(bad)
jmp
jle
add
add
and
pushf
and
add
add
pop
(bad)
(bad)
jmp
mov
(bad)
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
dec
add
push
popf
and
add
add
cmp
(bad)
(bad)
cmp
std
(bad)
inc
and
add
add
mov
(bad)
jmp
add
add
pop
cmp
adc
inc
pop
and
aam
mov
xchg
std
(bad)
dec
and
sbb
and
add
add
cmc
std
(bad)
(bad)
jle
add
add
and
or
cmp
std
(bad)
call
adc
add
add
sub
add
push
cmp
std
(bad)
jmp
adc
xchg
pop
and
ins
mov
popa
cmp
(bad)
call
add
rcr
out
adc
popa
cmp
std
(bad)
call
add
clc
pop
and
xchg
das
popa
cmp
or
movs
sti
(bad)
call
or
add
icebp
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
or
or
add
cmp
(bad)
call
add
iret
add
add
add
cmp
(bad)
call
push
or
adc
dec
std
(bad)
jmp
fiadd
cld
(bad)
jmp
push
add
add
sub
add
add
add
cmp
std
(bad)
call
or
adc
add
cmp
std
(bad)
(bad)
cmp
sti
(bad)
inc
and
add
add
popa
sti
(bad)
jmp
sub
add
push
cmp
cld
(bad)
jmp
and
add
add
sub
add
sub
add
sub
add
push
cmp
cld
(bad)
jmp
sbb
mov
(bad)
call
or
call
add
iret
add
add
add
cmp
xor
aas
cld
(bad)
inc
and
mov
(bad)
jmp
or
add
cmp
or
ja
(bad)
call
add
popf
add
add
add
add
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
pop
add
inc
add
adc
add
push
jle
add
add
push
and
addr16
adc
adc
pop
or
or
add
add
add
add
add
add
lds
add
adc
add
ret
inc
add
add
add
add
rol
add
push
adc
push
cmp
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
out
add
cmc
add
add
add
add
or
je
je
(bad)
call
hlt
add
push
es
or
add
jo
pusha
(bad)
(bad)
call
or
push
and
adc
push
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
and
dec
ja
popa
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
xor
add
and
adc
or
jecxz
ins
out
and
out
call
call
or
retf
push
inc
sbb
mov
clc
popa
cmp
(bad)
(bad)
call
pop
pop
adc
call
pop
or
add
inc
mov
add
sbb
mov
add
sbb
clc
add
push
or
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
push
adc
call
cmp
(bad)
(bad)
call
adc
inc
je
add
add
sbb
add
inc
adc
or
aam
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
cmp
add
and
cmp
mov
and
pop
inc
or
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
or
pop
sbb
sub
mov
(bad)
call
or
dec
dec
cmp
pop
and
pop
and
lahf
(bad)
(bad)
inc
pop
push
popa
inc
add
add
mov
jl
test
test
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
scas
add
add
add
aaa
add
add
add
add
loope
xor
call
or
sub
imul
xor
(bad)
call
push
pop
adc
and
and
in
adc
(bad)
call
cmc
add
push
adc
pop
pop
xchg
pop
push
pop
adc
inc
cmp
(bad)
(bad)
call
or
pop
pushf
pop
push
pop
and
jg
popa
cmp
(bad)
(bad)
call
pop
and
pop
sub
adc
add
sar
(bad)
call
call
adc
and
sbb
add
inc
mov
add
sbb
mov
add
sbb
stc
add
push
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
adc
and
and
add
add
add
call
push
pop
aaa
xchg
and
cmp
(bad)
(bad)
call
or
add
inc
je
add
sbb
pop
or
add
call
xor
add
add
add
adc
add
push
jle
add
add
add
call
xchg
adc
pop
or
inc
or
add
mov
add
add
add
add
mov
add
in
add
add
add
add
add
add
add
add
test
add
test
push
and
mov
stos
(bad)
(bad)
call
push
and
push
sbb
ret
popa
cmp
sub
add
adc
cdq
pop
and
aam
adc
jge
(bad)
dec
inc
or
(bad)
(bad)
call
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
popa
pop
es
push
popa
inc
add
add
pusha
add
add
add
and
pop
jnp
sbb
(bad)
call
cmp
call
or
stos
mov
ss
popa
cmp
(bad)
(bad)
call
push
and
sub
pop
and
das
stos
popa
cmp
(bad)
(bad)
call
push
and
and
add
or
or
cs
(bad)
(bad)
call
cmp
add
pop
xchg
pop
dec
pop
cmp
or
or
inc
mov
add
sbb
cli
add
push
or
add
jnp
and
or
inc
mov
add
sbb
sti
add
push
or
add
add
add
add
(bad)
(bad)
inc
pop
pop
or
and
pop
cmp
add
add
(bad)
call
or
repz
(bad)
call
add
add
add
add
(bad)
(bad)
inc
je
add
add
pop
or
call
xor
add
add
add
add
sub
es
jle
add
add
add
push
and
and
pop
inc
or
add
retf
add
add
jae
add
test
add
push
add
add
add
sub
add
cmp
add
mov
add
add
repnz
add
or
mov
jb
scas
(bad)
(bad)
call
or
add
pop
and
push
cmps
pop
and
xor
xchg
(bad)
(bad)
call
test
mov
xchg
(bad)
inc
push
popa
inc
add
add
scas
add
add
fst
cmp
call
pop
and
scas
jl
and
(bad)
(bad)
popa
cmp
(bad)
call
adc
mov
(bad)
(bad)
call
add
or
add
pop
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
jmp
add
mov
add
movs
add
add
add
add
retf
arpl
or
(bad)
call
adc
pop
and
and
mov
cmc
(bad)
(bad)
call
pop
and
mov
shl
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
push
adc
and
and
cmp
(bad)
(bad)
call
add
add
add
pop
(bad)
(bad)
inc
push
adc
pop
(bad)
(bad)
inc
mov
add
sbb
sub
add
push
or
add
add
add
inc
(bad)
(bad)
inc
pop
pop
or
pop
or
push
and
adc
and
sbb
or
add
sbb
add
adc
or
repnz
(bad)
inc
sub
add
add
add
add
hlt
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
je
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ja
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
js
add
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
cmp
add
add
and
push
add
or
add
cmp
add
add
and
add
or
add
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
mov
cmp
add
adc
movs
add
add
add
add
add
add
add
sub
add
stos
add
add
add
add
add
add
mov
aam
push
and
and
pop
inc
or
add
pop
add
add
add
add
add
aam
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
or
jno
add
and
cs
into
cmp
adc
push
add
push
sub
scas
add
add
and
add
add
dec
add
add
add
add
add
add
push
and
add
add
xor
add
push
adc
ds
(bad)
call
push
pop
xor
pop
push
pop
cmp
(bad)
(bad)
jmp
pop
adc
and
add
add
adc
add
adc
and
push
pop
and
cmp
(bad)
inc
add
push
pop
push
popa
inc
add
add
into
add
add
or
add
push
cmp
add
add
adc
and
int3
shl
and
push
(bad)
popa
cmp
(bad)
(bad)
call
or
jp
bound
pop
and
mov
dec
popa
cmp
(bad)
(bad)
call
add
cmp
add
xchg
(bad)
call
add
add
call
and
cmp
(bad)
(bad)
call
or
or
add
sub
add
push
cmp
add
es
add
add
add
add
ins
add
add
add
and
add
add
pop
add
add
or
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
push
cmp
add
add
adc
and
test
das
pop
and
xchg
cmp
popa
cmp
(bad)
call
cmp
(bad)
call
add
add
bound
add
and
add
add
push
or
dec
add
add
add
add
add
std
(bad)
(bad)
ds
(bad)
call
(bad)
(bad)
inc
std
(bad)
dec
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
and
add
and
add
add
fwait
(bad)
(bad)
jmp
js
add
pop
sbb
pop
aas
pusha
(bad)
(bad)
jmp
adc
add
cmp
(bad)
std
(bad)
jmp
or
add
and
add
add
outs
(bad)
(bad)
jmp
cmp
(bad)
call
xor
mov
add
and
add
sub
es
jle
add
add
push
and
jb
stos
popa
and
pop
inc
or
add
and
add
add
add
add
add
mov
add
clc
add
add
add
add
add
add
repz
add
push
add
push
adc
and
add
xchg
and
add
in
cmp
push
and
adc
into
cmp
or
add
cdq
cmp
sbb
jae
(bad)
inc
pop
push
popa
inc
add
add
xchg
add
add
xor
xchg
sti
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
icebp
cmc
jge
and
cmp
(bad)
(bad)
call
or
pop
fstp
fistp
fwait
and
popa
cmp
(bad)
(bad)
call
or
shl
cmp
(bad)
(bad)
call
or
fadd
mov
lea
popa
cmp
(bad)
call
add
add
add
sbb
add
adc
add
data16
add
add
stos
(bad)
(bad)
push
add
outs
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
addr16
idiv
retf
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
and
add
or
pop
or
cmp
adc
and
adc
call
push
pop
push
(bad)
call
or
add
inc
sub
or
add
inc
add
adc
or
int
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
inc
sbb
aam
fiadd
popa
and
pop
inc
or
add
mov
add
add
add
add
add
enter
sub
add
fild
add
sahf
add
add
add
add
add
dec
add
add
hlt
add
add
or
movs
xchg
rcr
outs
int3
loop
popa
cmp
pop
add
push
and
inc
cmp
or
add
mov
(bad)
inc
popa
inc
add
add
mov
add
and
outs
dec
or
jno
(bad)
call
or
pop
fsqrt
inc
pop
and
scas
mov
popa
cmp
(bad)
call
add
add
add
test
(bad)
call
(bad)
call
add
add
add
add
add
add
add
(bad)
jmp
add
daa
push
cmp
(bad)
(bad)
call
or
add
xlat
add
pop
and
xchg
inc
popa
cmp
(bad)
(bad)
call
or
jmp
rcr
inc
or
idiv
(bad)
call
or
add
stos
movs
neg
jb
shr
(bad)
call
push
and
add
xchg
and
add
add
add
adc
call
push
and
cmp
(bad)
(bad)
call
push
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
jo
add
or
push
and
pop
or
adc
add
adc
and
add
add
add
call
pop
pop
ss
pop
xor
cmp
(bad)
(bad)
inc
jne
add
add
pop
or
add
inc
add
adc
push
add
add
inc
add
adc
add
push
and
add
add
test
add
pop
and
xor
and
aad
retf
cmp
add
or
push
add
add
xlat
add
add
adc
adc
add
cmp
add
add
cmps
add
add
add
or
add
jp
add
out
add
out
add
inc
add
add
add
add
add
add
add
bound
add
sldt
add
add
jp
add
stos
(bad)
(bad)
jmp
or
test
add
cmp
pop
pop
or
adc
add
cmp
add
adc
and
jbe
mov
test
add
add
add
mov
adc
push
add
push
sub
movs
add
add
and
add
pop
cmp
add
add
sbb
add
push
add
add
sub
add
and
cmps
add
add
add
mov
or
push
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
push
add
out
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
fadd
add
and
add
add
xchg
(bad)
(bad)
jmp
xchg
add
add
pop
and
push
cmp
and
inc
popa
cmp
add
add
pop
and
inc
or
push
cmp
add
add
push
and
add
add
add
call
aad
add
add
popa
pop
or
add
add
sbb
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
or
pop
add
add
push
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
or
add
jle
add
add
or
add
xchg
add
sti
add
add
pop
or
adc
add
cmp
(bad)
(bad)
call
pop
and
xchg
push
mov
and
mov
cdq
popa
cmp
add
add
add
push
and
add
add
ret
call
adc
add
add
cmp
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
sbb
add
adc
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
dec
sbb
fcos
(bad)
jmp
add
add
cmp
jmp
and
mov
out
or
adc
pop
or
inc
or
add
mov
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
jno
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
jmp
jmp
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
or
and
add
add
push
(bad)
(bad)
jmp
call
(bad)
call
or
add
and
add
add
add
(bad)
jmp
sbb
stos
dec
cmp
or
add
or
add
sub
add
push
cmp
std
(bad)
jmp
jle
add
add
add
add
aad
(bad)
(bad)
cmp
std
(bad)
call
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
sub
es
add
jns
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
jp
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
jnp
add
sub
add
xor
add
add
add
add
add
add
push
add
jl
add
sub
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
ins
push
add
jnp
jge
add
daa
dec
fistp
and
push
dec
xor
lahf
ds
cld
adc
or
add
pop
and
cmp
add
push
inc
inc
clc
dec
js
les
dec
test
in
(bad)
and
call
sahf
into
inc
mov
jp
fwait
xchg
mov
pop
pop
xor
pop
add
sub
and
xor
sub
je
outs
fwait
mov
(bad)
adc
sub
jno
pushf
push
mov
sub
fiadd
dec
dec
adc
mov
test
ret
mov
pushw
push
dec
mov
inc
jnp
aas
bound
addr16
xor
cmp
mov
popf
xchg
push
jno
jmp
dec
jmp
mov
add
cmp
and
cli
or
aaa
mov
push
xor
arpl
push
mov
xchg
jmp
jno
inc
shl
std
mov
popa
and
jbe
(bad)
rol
mov
sub
xor
pop
popf
pushf
mov
inc
mov
ret
xlat
pop
mov
inc
nop
mov
mov
pop
jg
jno
fcomp
test
or
das
movs
pusha
das
outs
popa
out
(bad)
sbb
push
sti
dec
or
xlat
fld
cmp
jnp
fwait
rcl
icebp
test
add
xchg
xchg
mov
sbb
fs
cmp
inc
loope
jmp
mov
add
fld
test
cwde
(bad)
fiadd
scas
xlat
adc
movs
std
(bad)
inc
mov
or
inc
jmp
mov
sbb
push
sbb
mov
aad
mov
add
cs
hlt
fidiv
jbe
fcmovne
pop
icebp
or
xchg
aaa
cld
mov
xlat
jg
movs
bound
aad
cmp
in
stc
test
cmps
inc
push
scas
and
jnp
adc
jb
dec
cmps
mov
in
xor
popf
sub
retf
mov
frstor
stos
rcl
jno
push
push
jbe
and
ds
ins
jmp
js
xchg
(bad)
sahf
inc
jg
add
cdq
and
out
mov
add
push
jns
lds
fs
arpl
mov
adc
jnp
mov
movs
lahf
out
(bad)
fild
int3
cmps
xor
ret
repnz
jp
mov
pop
sub
and
add
out
push
pop
pop
mov
inc
arpl
mov
cmp
(bad)
mov
xchg
shr
call
and
jne
push
jmp
xchg
in
sub
and
xtest
and
out
and
(bad)
test
cs
mov
test
push
test
adc
stc
sbb
cmps
jns
sar
mov
psraw
test
dec
add
je
or
and
push
jmp
mov
jge
jge
cmps
push
mov
mov
mov
test
pop
popa
push
pop
aam
mov
push
xor
or
mov
cld
jmp
sti
inc
call
mov
dec
adc
cmp
fbld
sub
jo
fstp
daa
adc
dec
push
push
xchg
nop
mov
xor
xchg
jbe
arpl
cmp
xchg
cmp
or
outs
sub
cdq
leave
mov
cmp
inc
mov
leave
rcr
inc
mov
dec
mov
repnz
xchg
lock
sbb
ret
ret
fwait
xor
call
mov
or
mov
imul
add
es
or
and
adc
loop
mov
cdq
xor
jbe
dec
dec
mov
pop
ins
js
sub
mov
cdq
sti
cmp
mov
inc
xchg
xor
mov
pop
das
imul
sti
dec
jns
inc
adc
arpl
pop
mov
sahf
dec
ins
test
dec
dec
sbb
mov
cli
popf
push
mov
outs
inc
call
push
lods
cdq
or
movs
and
lea
cmp
mov
push
sbb
movs
lods
rcl
out
fcomp
scas
(bad)
push
and
fmul
fidivr
fwait
jmp
sub
pop
mov
push
jg
pusha
nop
cmp
jg
push
arpl
lods
ds
jb
mov
jne
and
inc
and
gs
lahf
lea
xchg
jmp
fdivr
dec
rcr
aas
dec
cmovs
idiv
add
push
cmp
pop
add
sbb
pop
adc
push
mov
adc
loopne
into
mov
pusha
or
or
push
aaa
mov
mov
aad
ffree
pop
mov
icebp
inc
movs
lahf
mov
out
pop
fcmovb
inc
jo
addr16
mov
cmp
sete
jo
fstp
iret
jae
add
test
xlat
gs
test
dec
mov
loopne
retf
or
xchg
mov
inc
popf
xor
scas
mov
mov
sbb
pop
js
jl
cld
or
inc
int3
mov
inc
mov
dec
retf
xchg
in
mov
sbb
and
std
or
ret
pop
mov
pxor
repnz
inc
push
movs
inc
push
das
fidivr
and
xor
mov
jns
xor
in
dec
pop
cmps
ja
and
pop
sub
dec
add
push
mov
cmps
jmp
call
popa
pop
int
(bad)
xchg
pop
nop
jno
iret
mov
ds
dec
add
mov
push
cmp
push
add
or
dec
and
ffree
cmp
adc
or
test
daa
in
sti
outs
mov
hlt
jnp
jmp
out
int
sbb
add
scas
jmp
cdq
cdq
inc
ins
rol
push
lock
push
jle
cdq
jno
test
sbb
in
data16
xor
mul
out
fisub
out
sbb
mov
rol
cmp
ret
inc
mov
mov
loope
push
adc
pop
dec
shr
pop
jl
dec
(bad)
out
xor
sub
loopne
mov
pusha
cmp
pop
aaa
xor
shl
pop
sub
mov
pop
in
fmul
ins
dec
cwde
add
jle
push
xchg
mov
(bad)
into
mov
adc
inc
mov
push
pushf
rcr
xor
(bad)
pop
pop
scas
sbb
ja
xchg
lods
cwde
jp
(bad)
mov
out
int3
sub
ins
popa
mov
fucomi
(bad)
rcr
pop
inc
mov
ja
lods
jmp
faddp
dec
adc
aad
repnz
pop
enter
movs
xor
aaa
and
adc
push
cli
inc
out
sub
cmp
jle
mov
cmp
std
mov
scas
lods
ret
into
into
xchg
ret
ret
arpl
dec
cmp
stc
jb
in
pushf
mov
ror
cmps
es
cli
shr
add
retf
repz
shl
and
icebp
sti
push
js
cmp
out
xchg
sub
inc
out
adc
mov
retf
sti
sahf
pop
or
mov
neg
pop
mov
out
xchg
mov
scas
cs
fdivp
cmp
test
pushf
jnp
int
xchg
jp
rol
mov
mov
push
cdq
jge
movs
xchg
sub
xor
mov
sbb
jle
(bad)
lea
pop
fisttp
mov
sub
imul
es
std
(bad)
out
jnp
cmps
retf
push
(bad)
rcr
mov
pusha
adc
stos
xor
das
sti
xchg
ins
xchg
xchg
mov
jns
fucom
shl
div
adc
out
pop
rcl
(bad)
cmp
and
test
xchg
ins
sbb
push
adc
ss
fst
jge
and
jecxz
add
pop
adc
scas
(bad)
dec
inc
fstp
cmps
mov
sbb
xor
in
les
sbb
cli
ret
bnd
pop
std
xchg
mov
out
cmp
pop
xchg
stos
mov
test
sbb
and
push
push
xor
jne
imul
dec
and
aam
dec
(bad)
xchg
(bad)
into
xor
push
mov
inc
and
jl
push
cmp
pop
clc
das
adc
dec
pop
pop
cwde
cld
dec
mov
mov
xor
repnz
cs
adc
jo
nop
in
sbb
push
push
and
cmps
inc
outs
jo
(bad)
cmp
dec
idiv
xor
jb
repz
ret
shl
sbb
lods
pop
sti
add
mov
popf
jmp
inc
sub
in
sub
pop
enter
push
bound
fnsave
fidiv
jnp
inc
pop
clc
fidivr
pop
jne
jb
mov
lods
xor
rcr
jg
data16
daa
xchg
mov
loopne
cmp
or
xchg
imul
retf
dec
dec
cmps
adc
inc
out
mov
ret
cs
push
dec
inc
loopne
in
mov
and
add
xchg
ret
sti
mov
sbb
std
ds
mov
out
cwde
pop
xor
stos
inc
dec
pusha
xor
clc
add
arpl
adc
(bad)
fild
xor
adc
cmc
jnp
push
or
in
xor
inc
in
sbb
int
or
jnp
dec
movs
mov
mov
jne
int
dec
scas
xlat
int3
and
adc
dec
cs
mov
adc
out
mov
and
push
imul
mov
in
dec
sub
repnz
ret
mov
mov
aam
out
sbb
out
mov
dec
add
icebp
fistp
popf
mov
adc
stc
out
and
sbb
xor
add
xchg
cmc
bound
sbb
jl
test
sbb
cdq
outs
pop
jbe
inc
lahf
pop
in
push
pushf
(bad)
stc
imul
lods
sub
pop
cmc
ins
push
xor
cmp
sub
jnp
mov
sahf
ins
push
test
push
add
bound
aad
xor
fucomip
push
in
inc
mov
(bad)
dec
mul
pop
adc
push
(bad)
mov
aaa
sbb
(bad)
ins
inc
pop
inc
movs
or
stc
inc
test
ins
out
(bad)
jbe
nop
mov
mov
scas
or
mov
pushf
mov
or
int
xor
push
(bad)
aaa
sbb
popa
and
lods
sbb
xchg
sbb
retf
inc
mov
jle
call
enter
nop
xor
lds
imul
pop
sub
jae
clc
pop
jne
arpl
dec
mov
mov
out
lea
xchg
aaa
pop
dec
hlt
push
aad
mov
in
lods
pop
daa
pushf
pop
push
xchg
jle
mov
xor
fidiv
adc
xchg
inc
mov
in
ins
or
inc
add
popf
aad
push
dec
cmc
bnd
jge
das
call
test
loope
pop
scas
ins
push
or
sahf
sub
scas
lds
shl
jb
aaa
jne
jl
shl
inc
adc
out
xor
xor
out
jne
cmc
push
retf
adc
imul
mov
jbe
mov
pusha
xchg
call
jp
push
dec
pop
adc
inc
popf
popa
popf
(bad)
lock
xor
(bad)
ficom
into
in
jl
dec
push
xchg
sbb
xchg
lods
and
add
or
sub
sti
mov
xchg
in
push
dec
cmc
add
sub
sbb
add
mov
std
add
test
mov
not
dec
jmp
out
iret
cmp
cmps
bound
mov
sbb
loopne
cli
pop
sti
dec
xchg
sub
sar
pushf
cmps
push
pop
jmp
inc
out
fld
cmps
outs
cmc
outs
sub
outs
les
lea
jp
loop
pop
in
push
mov
and
mov
(bad)
loope
lds
call
sub
(bad)
into
inc
mov
mov
(bad)
(bad)
jb
pop
and
mov
popf
rcr
pop
leave
push
pop
push
add
and
and
xchg
lahf
sbb
std
out
adc
rol
dec
and
imul
cmp
(bad)
call
adc
mov
sub
xchg
nop
xchg
aas
push
cdq
or
dec
daa
sub
arpl
inc
lods
test
rol
and
shr
fcom
out
sbb
test
jb
repz
add
aas
push
stos
mov
fdivr
sub
jnp
lahf
pushf
push
jle
pop
nop
sub
xor
hlt
cmps
pop
ss
jp
lock
xchg
jbe
clc
sub
jp
push
cwde
rcl
pop
int
pop
jmp
inc
push
add
into
test
push
lds
jns
adc
mov
adc
aad
mov
mov
xchg
and
lods
jno
shl
push
xor
lea
cmp
or
xor
fldenv
mov
pop
call
fisub
into
pop
inc
pop
bound
std
cmp
sub
inc
out
test
inc
arpl
mov
cs
sbb
(bad)
or
fldcw
adc
repz
inc
add
sbb
lahf
(bad)
cli
push
adc
mov
das
push
dec
xchg
jae
inc
hlt
pop
cmp
test
xchg
pop
loope
jns
rcr
cmp
lea
das
imul
mov
xor
jno
adc
or
(bad)
or
aam
pop
xchg
test
stos
out
sub
sub
mov
sub
stc
or
add
jmp
xor
or
push
or
retf
sub
cli
mov
call
jae
cdq
dec
cmp
push
int3
mov
aas
je
mov
mov
sub
mov
push
or
mov
test
lds
xchg
and
mov
cmp
dec
repz
das
add
icebp
dec
icebp
inc
inc
adc
push
inc
int3
mov
inc
add
mov
repnz
stos
ja
ror
push
add
sbb
dec
dec
cld
nop
or
sub
mov
and
xor
pop
retf
push
push
mov
in
test
loop
sub
or
imul
ss
add
retf
mov
cmp
push
jle
popa
or
ror
repz
ficom
(bad)
sub
jl
into
mov
push
vmovaps
and
push
or
fidivr
mov
or
jp
cmc
fldcw
cli
imul
xlat
popf
add
push
xchg
push
sbb
inc
jge
and
pusha
cmp
mov
lods
mov
stos
dec
loopne
aas
pop
popa
inc
rcr
cmp
and
imul
nop
xor
push
ja
pop
jnp
int
mov
mov
repz
cdq
pop
mov
jnp
mov
repnz
out
add
or
outs
out
jmp
aad
sub
inc
es
fs
pop
fwait
gs
mov
out
inc
movs
and
fiadd
js
sti
push
xchg
das
xchg
or
xor
jno
popa
ror
mov
jmp
lds
mov
es
mov
or
repz
out
jmp
imul
push
xor
xor
and
sbb
lods
inc
jne
(bad)
retf
or
jbe
push
mov
pop
fs
add
idiv
aas
lock
rcl
push
addr16
sub
dec
mov
out
push
cmp
sbb
mov
jle
inc
push
je
fimul
in
and
or
add
sbb
sbb
add
js
je
in
mov
fsubr
aam
add
je
into
jno
iret
add
call
pop
mov
adc
pop
rol
pop
gs
mov
out
jmp
push
mov
sub
(bad)
scas
int3
and
lds
dec
stos
shl
test
rol
out
cmp
mov
and
(bad)
mov
mov
(bad)
jbe
pop
fild
jecxz
into
xchg
loopne
inc
push
(bad)
int3
push
push
in
xchg
adc
sub
fnsave
push
push
and
fwait
adc
mov
shl
les
lods
cs
jle
push
fidiv
mov
retfw
and
and
sar
ins
fwait
mov
sub
(bad)
ins
mov
imul
pushw
and
jnp
lds
xchg
pop
push
add
int
nop
sub
adc
mov
jmp
rol
xor
pop
mov
pop
inc
inc
aam
lock
dec
adc
addr16
into
(bad)
mov
out
test
test
pop
inc
jnp
lock
enter
cmp
mov
mov
mov
push
mov
lods
mov
mov
push
scas
fstp
stc
or
pop
adc
int3
fdivr
mov
fisubr
adc
jns
(bad)
mov
jle
arpl
mul
mov
inc
lods
sbb
imul
xchg
xchg
xchg
mov
into
xor
out
out
cwde
ins
push
movs
inc
adc
cmp
scas
sub
push
shr
cmp
(bad)
fisubr
lods
mov
adc
and
xor
retf
jo
add
jg
mov
jb
fiadd
fidiv
push
mov
xchg
push
pop
std
push
xor
mov
fs
fisttp
or
inc
ds
or
scas
out
bound
inc
mov
imul
jno
inc
div
popf
div
push
cli
xor
dec
cmp
sbb
es
add
loope
test
sub
add
or
dec
adc
push
aad
data16
xor
mov
int
mov
cmp
xchg
push
scas
arpl
lods
loope
(bad)
popf
push
jns
push
xchg
pop
push
sub
inc
es
outs
mov
sbb
mov
outs
inc
or
inc
sub
push
push
mov
mov
add
xchg
scas
dec
push
aam
leave
(bad)
dec
sub
or
sub
xor
pop
pop
mov
jmp
inc
add
xchg
scas
imul
fiadd
mov
loope
and
pop
inc
sbb
cli
loop
cmp
cmp
jmp
add
ret
pop
int
cmp
in
pop
jnp
cmp
inc
and
int
in
or
pop
pop
inc
push
push
loop
sbb
sahf
jae
xor
sub
push
out
or
jmp
pop
mov
adc
sub
repnz
mov
cmp
or
popf
push
push
inc
scas
(bad)
jge
fadd
adc
and
retf
retf
push
mov
add
bound
sti
sahf
and
lods
(bad)
push
adc
fdiv
mov
cli
daa
xchg
mov
pop
mov
push
xchg
sbb
jno
push
iret
xchg
pop
inc
jle
das
(bad)
std
or
adc
je
mov
dec
repz
(bad)
std
inc
loop
movs
dec
rcl
mov
cli
imul
cmc
sbb
cmp
stos
sar
std
mov
and
cmp
cmp
cmp
scas
mov
fwait
pop
fcom
scas
or
inc
or
movs
pop
nop
popa
or
fwait
icebp
inc
cmp
cmp
mov
in
aad
jbe
push
test
retfw
adc
push
out
stc
in
aam
xor
movs
stos
dec
xor
ds
sub
mov
jge
leave
ret
outs
mov
rcr
iret
cmc
inc
aas
mov
adc
mov
enter
out
js
mov
xchg
in
xchg
mov
xchg
movs
test
adc
pusha
xor
xor
(bad)
add
sbb
mov
ins
push
popa
stc
fs
int3
or
push
repz
xor
push
mov
lock
mov
cli
cmp
cmp
adc
mov
cmp
add
lods
je
out
es
push
(bad)
lahf
out
jnp
jo
and
jp
dec
adc
lock
xchg
call
imul
mov
addr16
push
sbb
xor
scas
imul
outs
cli
sbb
sub
inc
ss
stos
(bad)
fiadd
add
icebp
inc
mov
cwde
cmp
cmp
imul
ins
out
sub
xor
jo
dec
fst
push
dec
rol
jmp
push
pop
pop
mov
mov
lods
xor
test
mov
clc
stc
aas
and
data16
ja
dec
and
cmp
xor
cmp
mov
mov
inc
mov
out
and
adc
adc
pop
cmp
idiv
push
mov
call
xor
inc
push
mov
adc
sub
shr
(bad)
cmp
jle
imul
shl
sar
push
add
scas
inc
cli
stos
xchg
sub
sbb
and
nop
jl
inc
(bad)
jbe
jl
xor
ss
xor
in
ret
and
jl
lods
add
mov
push
pop
mov
dec
aam
les
call
pop
cdq
sbb
movs
and
jo
scas
cmp
das
rol
cmps
pop
mov
test
pop
mov
mov
xchg
ss
jb
sub
inc
xchg
push
idiv
mov
jle
sub
xchg
pusha
xor
icebp
mov
push
add
push
push
push
inc
inc
jecxz
cmp
xchg
data16
and
sbb
pop
test
sbb
adc
adc
jno
ret
mov
std
jno
repz
jae
and
jmp
icebp
pusha
(bad)
push
pop
mov
fld
cli
fs
cmps
xchg
shl
mov
addr16
push
cmp
adc
pushf
into
in
cmp
jg
sbb
cmp
rol
lahf
lods
imul
mov
stos
nop
xor
nop
or
(bad)
cdq
mov
mov
lods
xlat
dec
add
(bad)
pusha
enter
and
xor
cdq
mov
xchg
jnp
sar
daa
inc
mov
(bad)
adc
mov
push
call
mov
mov
ss
cmp
xor
sbb
and
cmps
sbb
jo
cdq
inc
mov
imul
push
icebp
mov
jnp
(bad)
jb
jmp
dec
pop
dec
xchg
test
xor
int
or
sbb
loopne
xchg
push
addr16
(bad)
addr16
sbb
mov
xchg
and
mov
adc
inc
das
cmps
pop
outs
xor
in
pop
xor
cmp
inc
into
jmp
inc
sub
outs
js
in
xchg
or
stc
jns
inc
ja
pushf
shr
and
jb
test
test
dec
and
fs
sub
cmp
aam
in
movq
stos
cmps
fwait
xchg
pop
(bad)
xlat
adc
rcr
dec
dec
inc
pop
mov
adc
pusha
les
out
mov
lahf
jmp
lods
and
cmp
or
mov
data16
jg
leave
and
ds
inc
gs
cwde
pop
push
add
es
mov
pop
sub
in
fdivr
add
inc
inc
dec
in
xchg
push
dec
pop
jo
aaa
lahf
xlat
sti
jae
pop
pop
sbb
rcpps
call
imul
ss
mov
inc
aas
pop
mov
or
add
xchg
fs
ret
rol
mov
ins
int3
or
stc
and
adc
movs
pop
xchg
popf
dec
xchg
sbb
cmp
adc
das
mov
mov
adc
retf
or
inc
push
add
xor
imul
pop
in
mov
sar
xchg
dec
inc
iret
sub
rcl
cmps
pop
ss
je
xchg
pop
out
test
jbe
repnz
pop
retf
daa
jmp
xchg
sbb
int
push
and
mov
and
xchg
dec
inc
push
scas
stos
mov
ins
movs
mov
xchg
js
loopne
pop
cs
or
dec
out
cmp
icebp
in
cli
dec
lds
ret
mov
pop
or
test
pop
test
pop
call
push
adc
cmp
popf
scas
jo
mov
out
push
ror
xchg
ins
icebp
or
sub
int
mov
xlat
mov
cmc
das
mov
mov
bound
cmp
push
shr
xor
sahf
cli
fld
shl
mov
fcom
mov
or
mov
adc
es
outs
arpl
(bad)
rol
inc
in
ror
mov
mov
movs
jl
ds
add
sub
aad
add
sub
lock
into
mov
jmp
pop
jg
fadd
fcomp
sub
ret
push
out
dec
mov
in
jno
push
jle
(bad)
sbb
inc
inc
mov
pop
es
sub
lock
mov
fst
rcl
pop
nop
dec
jae
in
add
sar
xchg
data16
clc
(bad)
scas
pop
in
push
inc
push
das
bnd
dec
ja
or
mov
mov
mov
mov
ds
outs
xchg
test
sub
out
(bad)
and
cmc
mov
(bad)
mov
sbb
ss
dec
shl
cdq
jnp
outs
or
stos
ins
repnz
repnz
pop
cmc
ret
mov
mov
pop
mov
sbb
movs
sahf
mov
lods
and
shr
pop
sub
aas
jl
sub
fwait
outs
dec
mov
jne
push
jl
imul
loopne
loope
mov
fdivr
push
cwde
cli
push
jl
mov
pop
lods
ins
(bad)
mov
cs
dec
add
(bad)
ins
mov
pusha
cmps
dec
xchg
pop
(bad)
loopne
jmp
je
(bad)
into
loope
or
out
xor
lea
(bad)
es
push
mov
shr
push
inc
dec
mov
sub
inc
mov
lods
leave
xor
imul
retf
cmp
inc
pop
lods
pop
xchg
fwait
jmp
aam
push
shr
mov
pop
sub
fwait
xor
aaa
push
lahf
test
xchg
jns
xor
xor
inc
xchg
dec
push
xchg
mov
mov
jg
imul
mov
clc
call
(bad)
cmc
stos
test
sbb
icebp
out
movs
je
call
sbb
pusha
popa
fs
mov
pusha
jl
stos
add
idiv
jbe
in
iret
jl
aaa
stos
sub
in
div
or
popf
adc
push
rcl
cmp
and
cmc
ja
jp
lods
repnz
fs
xor
out
loop
sbb
cmps
test
icebp
or
dec
dec
fistp
imul
xchg
cmps
xlat
arpl
inc
je
repz
xor
(bad)
(bad)
mov
jmp
push
cmc
sar
jg
sub
in
inc
out
lods
jl
mov
das
dec
pop
push
in
push
sub
clc
in
lock
jnp
cli
mov
mov
scas
jge
stos
not
sbb
int
push
retf
inc
adc
xor
outs
test
mov
cdq
sub
mov
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
rol
rol
enter
leave
inc
lods
ror
inc
lods
ror
inc
lods
ror
inc
lods
ror
inc
lods
ror
inc
lods
ror
inc
lods
shl
inc
lods
shl
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
lods
shr
inc
lods
shr
inc
lods
ror
lods
ror
ror
lods
ror
lods
ror
lods
shl
lods
shl
lods
shr
lods
shr
lods
shr
lods
shr
lods
shr
shr
lods
shr
lods
shr
lods
rol
inc
lods
ror
inc
lods
ror
inc
lods
ror
lods
ror
inc
lods
shl
inc
lods
shl
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shr
inc
lods
shl
data16
(bad)
clc
data16
(bad)
cli
data16
(bad)
cld
data16
(bad)
(bad)
data16
(bad)
push
mov
dec
push
add
add
add
add
add
add
add
mov
add
mov
add
fadd
add
add
add
add
add
sbb
add
rol
add
dec
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
push
add
add
add
xchg
add
mov
add
xor
push
add
jecxz
add
or
add
xchg
add
add
ret
or
add
or
add
add
pop
or
add
pop
add
int
add
movs
pop
add
jnp
add
push
pop
add
pop
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
sub
add
push
or
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
or
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
sbb
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
sub
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
aaa
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
stos
push
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
ret
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
rol
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
or
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
or
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
push
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
and
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
popa
xchg
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
mov
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
int3
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
adc
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
cmc
cmc
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
in
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
rcl
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
rcr
add
add
add
add
xor
xor
add
xor
arpl
sub
add
xor
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
aaa
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
cmp
adc
add
add
add
xor
xor
add
xor
arpl
sub
add
cmp
outs
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
pop
add
add
add
add
xor
xor
add
xor
arpl
sub
add
popf
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
stos
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
mov
add
add
add
xor
xor
add
xor
arpl
sub
add
mov
add
add
add
xor
xor
add
xor
arpl
sub
add
aam
add
add
add
add
xor
xor
add
xor
arpl
sub
add
loop
add
add
add
add
xor
xor
add
xor
arpl
sub
add
lock
and
add
add
add
xor
xor
add
xor
arpl
sub
add
inc
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
xor
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
popa
push
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
pop
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
add
and
add
add
add
xor
xor
add
xor
arpl
sub
add
add
jae
add
add
add
add
popa
add
add
add
add
add
bound
fiadd
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
push
loope
pop
inc
inc
inc
inc
inc
cmp
out
jmp
in
jno
mov
mov
mov
xchg
xor
lods
push
ss
fisub
not
pop
jg
repz
add
cmp
aaa
xchg
inc
push
ja
gs
fild
fisub
out
dec
inc
push
rol
push
not
clc
aad
std
push
jns
imul
lods
or
mov
sub
bound
fwait
rcl
dec
dec
js
inc
out
pop
inc
shl
or
sub
pop
scas
and
sub
adc
sti
popf
sub
lods
xchg
lods
(bad)
into
adc
stc
ins
sbb
or
push
call
jmp
std
jge
adc
ret
(bad)
aam
fcomip
xchg
pop
dec
pusha
or
and
ins
in
jl
mov
jb
dec
adc
cld
ret
jnp
and
adc
int
loope
fwait
adc
ja
stc
mov
xor
jmp
or
pop
test
sbb
dec
rcl
int
cmp
push
pop
pop
mov
or
das
jecxz
ins
pushf
into
iret
inc
inc
push
xchg
mov
scas
jnp
call
xchg
cmps
cmpxchg
test
xor
mov
sub
dec
loope
pop
fisubr
sbb
je
popa
mov
cmp
lea
mov
mov
push
test
lea
cmp
pop
mov
push
jae
jge
call
push
jg
cmp
fnsave
sti
mov
fistp
(bad)
push
test
loope
add
cmp
ret
in
mov
ins
adc
pop
cmp
adc
fidiv
adc
es
lock
cmp
xchg
mov
pop
cmps
retf
mov
push
or
lods
arpl
push
out
stos
sbb
out
sub
and
ss
lock
pop
sub
and
int3
adc
aaa
in
(bad)
sti
pop
jne
add
mov
dec
outs
pop
and
lods
or
bound
xlat
imul
sbb
mov
mov
in
add
icebp
mov
add
fsubr
inc
outs
jnp
out
and
jmp
scas
adc
(bad)
in
scas
jmp
jno
jns
test
lods
repz
in
dec
sbb
out
mov
popa
aas
popa
ins
fs
call
and
pop
not
inc
push
mov
sbb
mov
daa
xor
and
jnp
std
or
mov
cmps
jne
inc
pop
mov
(bad)
mov
fnsave
inc
sahf
psubsw
movs
pop
std
fsubp
and
popf
mov
xchg
ss
dec
mov
fidivr
test
jmp
mov
vmulss
ins
je
mov
jae
lock
shl
js
push
add
mov
push
dec
jo
shr
push
xchg
addr16
or
pop
(bad)
xor
loopne
sbb
jae
clc
outs
cmp
call
fst
in
aad
pop
inc
call
not
mov
and
push
ja
ja
pusha
aaa
dec
lods
int3
jmp
cmc
add
jbe
icebp
push
test
ins
es
sbb
dec
xor
jmp
mov
push
xor
mov
scas
scas
jle
push
mov
movs
cvtpi2ps
pop
or
in
inc
cmp
iret
ds
adc
jmp
retf
je
or
dec
std
(bad)
xor
into
imul
repz
cmp
aam
test
push
jbe
pusha
mov
(bad)
imul
mov
push
daa
jmp
mov
iret
dec
inc
mov
dec
cdq
ror
pop
adc
hlt
inc
retf
pushf
pop
mov
mov
jae
clc
lea
neg
aaa
ins
das
movsx
adc
pop
pop
ds
mov
xlat
call
mov
xor
ds
shr
(bad)
cmps
(bad)
push
cdq
gs
rcl
mov
sub
and
and
je
cli
pop
lods
mov
add
lahf
mov
in
mov
cmp
in
xchg
push
not
cmp
cmc
mov
mov
or
jl
fsubr
dec
xor
aas
inc
inc
lods
enter
call
push
fxch
cmp
sub
mov
jge
push
mov
or
mov
call
rcl
out
xchg
pop
fnstcw
in
and
jno
or
adc
and
int3
sub
pop
mov
fistp
mov
sub
mov
jne
pop
jmp
add
xor
jb
push
into
or
popa
or
enter
cli
mov
jmp
and
xchg
push
nop
lahf
inc
stos
outs
sahf
fnstenv
and
inc
pop
xchg
stos
outs
rcl
stc
pop
imul
mov
(bad)
pusha
sub
sub
cs
sub
test
mov
jo
sub
(bad)
or
scas
push
adc
rcl
xor
cmp
nop
sar
inc
out
jmp
aaa
xchg
ja
inc
inc
les
in
jp
shr
xchg
bound
sbb
neg
pop
(bad)
int
dec
loope
jle
xor
jecxz
sti
mov
jp
push
js
je
out
in
inc
ror
test
not
adc
pushf
pop
cli
mov
pop
retf
movs
inc
sub
adc
mov
jne
xor
sahf
xchg
jge
scas
fild
cmp
shl
pop
xchg
push
sbb
jne
stos
inc
(bad)
cld
push
jne
lea
ret
dec
bound
sub
push
out
sbb
cmc
push
call
mov
das
adc
push
mov
je
inc
mov
sbb
jo
and
ss
leave
mov
pop
mov
lods
lods
dec
inc
nop
(bad)
xlat
ins
pop
inc
popf
xchg
pushf
lds
fcmovb
inc
dec
(bad)
das
imul
sub
xor
sbb
mov
add
cmp
fcmovu
or
loope
cld
fdivp
mov
std
loopne
dec
or
push
in
or
lods
mov
sahf
push
cmp
dec
jmp
dec
test
clc
inc
popf
jae
gs
cmc
or
in
arpl
and
in
or
adc
lods
xor
in
jge
jmp
aam
dec
jge
hlt
(bad)
push
cwde
sub
sub
push
cmp
ja
jo
sbb
jmp
cmp
pop
stos
idiv
cmps
pop
fsub
adc
cmp
sti
loop
mov
call
xor
ret
push
outs
call
mov
test
jae
hlt
inc
dec
push
fisttp
fcmovbe
inc
inc
lea
daa
cmps
or
or
sbb
adc
rol
add
sbb
jb
pop
fs
add
pop
ins
icebp
(bad)
imul
and
imul
mov
movs
sub
mul
fimul
jne
pop
dec
into
dec
fmulp
adc
jmp
mov
push
mov
mov
mov
mov
xchg
(bad)
fsubr
mov
rcr
inc
fadd
xor
mov
test
jo
ret
push
repz
pop
push
loopne
sbb
ss
arpl
mov
mov
push
mov
lds
push
je
cld
pop
repnz
jnp
push
mov
push
fmulp
imul
or
out
stos
jp
clc
pop
xor
arpl
fadd
jp
jmp
addr16
cmc
bnd
retf
xchg
adc
test
sbb
into
mov
retf
xchg
cdq
mov
aad
shl
jle
jno
imul
lods
jnp
ds
test
push
or
mov
(bad)
js
mov
cmps
jb
scas
mov
mov
cwde
jp
rcr
or
lahf
cmp
fidivr
jl
iret
stc
sub
sahf
stos
mov
dec
adc
lahf
dec
mov
add
pop
fsubr
outs
push
xor
outs
inc
lahf
jmp
daa
mov
fiadd
sub
jb
pop
mov
ss
mov
pop
mov
arpl
inc
cmp
call
push
dec
ja
pop
xchg
xor
test
(bad)
pop
adc
dec
sahf
cdq
ins
fincstp
sub
push
imul
faddp
cmp
pop
adc
mov
and
cld
in
sub
cdq
movs
loope
sbb
jp
idiv
hlt
xchg
xchg
lock
cmp
test
jmp
sbb
fst
ss
and
movs
shl
aam
mov
out
movs
neg
cmp
mov
mov
xor
pop
pop
inc
dec
xchg
test
dec
clc
pop
sub
in
mov
or
or
shl
or
lods
or
dec
hlt
cmc
adc
mov
and
lods
mul
push
rcr
je
lds
inc
dec
test
movs
(bad)
pop
mov
xor
imul
mov
lock
out
push
dec
lahf
mov
mov
cmp
test
dec
scas
inc
pusha
mov
jp
mov
outs
popa
jg
dec
popa
pop
call
lock
push
(bad)
mov
or
inc
out
rcl
clc
or
(bad)
fmul
xchg
push
jbe
mov
jmp
mov
pop
mov
(bad)
ror
mov
icebp
(bad)
adc
xor
mov
in
fisub
pop
aam
xor
jns
dec
add
cmps
push
std
scas
xchg
out
aaa
fcomip
sti
je
cld
or
add
sub
cmp
addr16
or
ss
push
test
rcr
mov
movs
fnstsw
and
push
enter
xchg
sub
scas
mov
aad
test
mov
add
sar
mov
sbb
(bad)
jp
leave
push
xor
mov
sub
sub
inc
mov
sub
pop
xor
add
aaa
push
mov
or
retf
cmps
and
sbb
sbb
xchg
out
scas
inc
jmp
dec
mov
mov
mov
ret
daa
add
aas
(bad)
sbb
in
and
dec
and
pusha
(bad)
rol
addr16
sar
and
mov
jnp
sar
test
lea
dec
repz
test
mov
mov
push
xor
push
sbb
xchg
pop
adc
iret
add
push
jmp
jle
xor
stc
mov
mov
aad
scas
jge
jecxz
stc
add
aam
cli
nop
jecxz
shr
pop
xchg
xlat
out
clc
add
loopne
(bad)
int
(bad)
iret
fistp
mov
lahf
(bad)
pop
adc
(bad)
xchg
jns
xchg
in
inc
pop
cmp
std
cld
cmp
mov
fist
ret
adc
jb
sbb
pop
lods
(bad)
int3
cmp
lods
addr16
ret
rcr
cmp
mov
push
iret
inc
mov
and
mov
in
pop
sub
pop
jno
push
and
ins
(bad)
lea
loop
xchg
out
aam
xor
(bad)
loopne
idiv
xchg
or
sub
lods
imul
or
sbb
aad
jg
adc
daa
lock
loopne
sar
jmp
xor
lods
in
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
idiv
daa
mov
fidivr
sbb
enter
into
cmp
sahf
and
and
jecxz
and
xchg
xchg
arpl
mov
xlat
pop
lock
add
pop
pop
mov
push
push
pop
pop
jle
dec
cld
xchg
sub
cwde
rol
stos
popa
cmps
lock
xchg
cmps
aaa
rcr
lods
xor
paddsw
test
les
mov
sub
dec
mov
fild
call
and
les
cmp
adc
rcl
stos
fmul
sbb
jbe
mov
push
sub
adc
and
jecxz
fldl2e
xchg
jae
pop
lahf
je
int3
ja
push
out
scas
lods
rcl
call
popf
push
jnp
push
lea
fisubr
arpl
jmp
xor
xor
ins
mov
mov
inc
rcr
xor
cmps
and
test
les
sub
add
lods
sub
push
jno
add
nop
ja
rcl
mov
push
mov
add
xor
(bad)
in
xchg
xchg
aaa
aam
xchg
mov
cmp
sahf
xchg
loope
mov
out
adc
(bad)
popf
pop
mov
mov
inc
or
jbe
(bad)
dec
dec
cmp
imul
mov
loopne
inc
loop
jmp
jl
pop
in
xchg
and
(bad)
sub
ds
idiv
lock
or
push
nop
mov
cmps
call
(bad)
cld
arpl
mov
out
fistp
jne
fmul
push
loope
pop
mov
cmp
mov
adc
aam
cmp
push
jecxz
dec
daa
fs
sbb
mov
xchg
xor
push
push
mov
call
sub
loop
jmp
cdq
pop
cmp
aas
add
jns
and
mov
or
add
pop
and
fadd
faddp
int
jp
cld
ins
sbb
push
push
data16
loop
daa
and
add
mov
mov
mov
jb
add
pop
or
sub
pop
dec
(bad)
and
mov
cmp
xor
xchg
lahf
(bad)
xchg
mov
or
inc
jmp
sub
enter
add
sbb
ds
sub
call
out
inc
push
cmp
mov
repz
cmp
stos
jns
xor
jle
cdq
div
fld
xchg
and
add
fwait
popa
cld
in
call
ret
movs
call
(bad)
fdivr
movs
mov
cdq
jnp
div
jecxz
or
ins
mov
jmp
pop
sub
push
and
jno
sbb
into
inc
out
mov
mov
dec
ror
gs
adc
loopne
dec
cmp
pushf
inc
stc
cs
jae
mov
fisttp
dec
aaa
fs
inc
ins
rol
shl
sbb
cs
mov
jg
movs
sub
mov
ds
cdq
jno
nop
les
outs
imul
inc
mov
sbb
xor
cmp
inc
jg
mov
repnz
pusha
pop
imul
xor
sbb
jb
call
push
ret
ret
xor
es
mov
xor
call
icebp
outs
mov
pop
mov
dec
sar
out
and
push
fisttp
cdq
retf
test
daa
sbb
mov
cld
aad
cwde
push
jge
imul
or
jmp
(bad)
mov
mov
and
mov
aad
test
sar
int3
cld
mov
and
pop
sbb
jle
lock
div
push
scas
inc
xor
xor
push
fucom
push
mov
test
movs
xchg
adc
psllq
inc
inc
cmp
sub
sbb
(bad)
and
arpl
xor
outs
mov
loope
jno
jnp
and
push
stos
clc
pop
hlt
mov
or
mov
ret
jbe
push
cmps
mov
std
(bad)
fld
adc
mov
jb
and
lds
mov
mov
lock
mov
push
out
mov
inc
inc
(bad)
aad
inc
jns
xchg
and
imul
outs
in
lea
xlat
and
addr16
fdiv
test
mov
and
ror
mov
jmp
mov
pop
mov
jbe
sub
ficomp
sub
in
fdiv
cmp
fimul
jg
inc
dec
js
data16
push
ss
outs
dec
sub
loope
cmp
adc
jg
loopne
mov
cwde
shr
xchg
js
mov
xor
je
xchg
jecxz
push
ss
push
mov
cmp
mov
imul
dec
das
pusha
call
imul
cmp
jbe
sbb
movs
cli
push
test
fwait
fwait
rol
sbb
pop
mov
pop
sahf
popa
lods
mov
inc
dec
or
inc
fist
mov
jge
sub
test
and
int
xor
xchg
jns
inc
mov
or
neg
shl
ds
repnz
iret
jae
or
aaa
pop
daa
fs
les
inc
shl
enter
(bad)
(bad)
xlat
or
cmp
fsubr
out
xchg
sahf
cmp
jmp
jg
fsub
aad
sbb
stc
test
cmp
(bad)
add
rcl
icebp
push
xchg
ins
jp
scas
inc
dec
push
jecxz
mov
push
jp
xor
xor
sub
std
jns
push
(bad)
xchg
js
jb
out
push
cmp
mov
fadd
adc
mov
xchg
add
xchg
pushf
adc
or
enter
icebp
les
test
push
or
mov
retf
(bad)
call
sbb
push
jp
cmp
sub
leave
mov
or
push
enter
push
mov
or
inc
enter
stc
fidivr
xor
mul
mov
mov
ss
lock
adc
mov
mov
mov
mov
movs
clc
and
jmp
adc
maxps
fs
mov
(bad)
aas
or
retf
push
outs
xor
xchg
daa
mov
cwde
icebp
shr
add
pop
pop
pop
add
ffreep
jmp
jb
jmp
cdq
int
ret
push
pop
mov
push
fs
mov
ja
cmp
inc
jmp
outs
inc
push
jg
aaa
dec
push
xor
in
retf
xchg
cwde
mov
cmp
mov
cmp
loopne
xchg
daa
clc
jmp
dec
adc
dec
loop
or
pop
cdq
push
push
mov
push
(bad)
ret
ins
sub
call
mov
push
inc
mov
xchg
cmp
sub
push
inc
pop
sub
inc
dec
shl
sbb
dec
scas
xchg
sbb
inc
out
jmp
mov
dec
sahf
scas
mov
xchg
sub
pop
test
sbb
in
or
fwait
xchg
or
push
in
jo
fld
push
pop
popf
cmp
jg
cmps
dec
xor
shl
mul
(bad)
cmp
(bad)
int3
pop
call
ins
push
scas
test
and
call
or
xchg
mov
inc
push
jo
movs
dec
pushf
call
ret
xchg
(bad)
out
sub
sbb
iret
stc
mov
loope
leave
fadd
(bad)
cmp
cmp
dec
mov
mov
jecxz
xchg
fucom
mov
(bad)
cmps
int3
mov
sti
dec
(bad)
push
mov
jo
mov
std
dec
cmps
jmp
fstp
mov
leave
sub
retf
push
(bad)
ins
pop
jg
int
enter
pop
loop
ss
sbb
loopne
cld
mov
push
push
mov
or
in
dec
and
push
sbb
xchg
cdq
push
movs
mov
add
dec
nop
ret
sbb
fisub
jbe
pxor
pop
push
dec
ins
and
pop
ret
(bad)
jns
cmp
sti
adc
je
fucomip
jle
clc
sbb
enter
xchg
outs
adc
jg
daa
retf
inc
mov
div
imul
xlat
and
or
imul
int3
xchg
fcmove
mov
push
adc
mov
cli
jge
cld
jp
test
sub
inc
out
fild
rcl
dec
repnz
mov
xlat
test
out
pusha
out
cmp
dec
adc
inc
popf
dec
jne
mov
scas
fldcw
sahf
or
add
push
inc
icebp
inc
xchg
xchg
pop
dec
std
hlt
lea
push
in
push
in
shr
out
(bad)
adc
les
sub
inc
cli
mov
add
mov
and
jae
add
mov
(bad)
test
mov
out
jle
inc
fadd
cli
sahf
xchg
jbe
out
pop
retf
ss
bound
xchg
ds
icebp
push
inc
jae
movs
clc
dec
sbb
adc
(bad)
sub
cli
mov
les
cld
pusha
(bad)
cmp
inc
xchg
retf
push
int3
pop
ja
sub
mov
imul
cmp
push
and
retf
xchg
int
xchg
pop
neg
fstp
cmp
dec
xchg
retf
inc
jo
mov
adc
or
sub
fst
dec
cmp
cdq
outs
fnsave
out
pop
mov
enter
addr16
mov
cmp
rcl
out
aad
fcom
dec
aad
out
jns
movs
test
imul
movs
inc
lods
fldcw
into
xlat
inc
aad
jle
in
enter
sub
xlat
add
xchg
xchg
dec
cmp
popw
jne
mov
mov
mov
add
std
dec
dec
adc
pusha
mov
mov
imul
dec
fst
jecxz
xchg
fcom
add
or
gs
xchg
pop
pop
adc
movs
fimul
sub
push
jmp
push
or
sub
mov
mov
sub
or
add
in
test
int
sub
outs
mov
adc
dec
pop
imul
stos
pop
bnd
(bad)
push
fidivr
mov
aam
pop
out
jg
add
(bad)
fnsetpm(287
hlt
pop
or
cmp
cmp
aaa
jae
imul
mov
iret
arpl
fmul
sub
and
add
enter
xchg
fwait
inc
repz
xchg
sub
inc
sti
jmp
arpl
xchg
ss
bound
jmp
mov
dec
cmp
push
push
adc
push
in
jl
imul
dec
imul
movs
lock
sub
cmp
mov
sar
push
aad
loopne
sub
mov
fs
jbe
jno
mov
(bad)
dec
outs
out
aaa
dec
pop
adc
cld
mov
fstp
pop
mov
das
bswap
jmp
std
or
sbb
xchg
cdq
jmp
mov
mov
movs
push
jle
pop
push
(bad)
sbb
in
sbb
mov
movs
add
add
inc
mov
dec
ss
scas
adc
jb
mov
aad
test
sbb
shr
mov
mov
inc
xchg
out
fs
cli
mov
call
and
or
jb
mov
push
or
cmp
clc
daa
lock
loopne
sar
jmp
into
cs
jb
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
dec
into
cmp
ins
xchg
mov
inc
xchg
xchg
cdq
mov
inc
(bad)
sbb
sub
addr16
in
xor
scas
call
push
xchg
xor
leave
fdivp
sti
inc
jl
in
stc
adc
add
xor
and
les
daa
xor
jnp
pop
push
clc
jmp
sti
outs
push
call
sub
ret
and
xchg
cdq
dec
dec
movs
xor
retf
int3
mov
mov
push
retf
neg
or
popf
loopne
(bad)
in
xor
push
cmps
(bad)
in
or
test
das
inc
scas
mov
ds
int
into
mov
rcr
lods
int3
sub
adc
mov
(bad)
retf
or
out
fisttp
cld
std
mov
je
inc
dec
jbe
and
mov
sbb
mov
cdq
and
mov
mov
xlat
push
and
xchg
and
jecxz
pusha
rol
ret
dec
int
push
push
add
cwde
xchg
sti
fsubp
(bad)
stos
dec
clc
fsub
push
movs
adc
pushf
jp
mov
cmp
pop
dec
pop
dec
and
cmp
fistp
add
xor
in
test
and
cmp
mov
xchg
pop
mov
sahf
adc
mov
stos
xchg
ss
(bad)
xchg
mov
loopne
sbb
add
jecxz
pop
les
push
dec
push
scas
inc
retf
(bad)
pop
call
fcomp
fwait
ret
outs
adc
push
pop
out
enter
call
icebp
mov
cmp
adc
(bad)
icebp
div
and
in
pop
leave
in
gs
test
mov
inc
(bad)
ins
test
in
repz
das
mov
outs
xchg
lods
sbb
hlt
clc
xchg
mov
icebp
fnstenv
jge
loopne
pop
add
jle
cmp
mov
adc
ja
mov
or
push
sbb
inc
loopne
jl
push
mov
jecxz
push
icebp
mov
enter
ins
xlat
bound
mov
mov
rcl
dec
in
push
mul
pop
mov
(bad)
jmp
popa
cmp
jmp
ss
test
cdq
add
xlat
arpl
rcl
add
out
in
mov
fcomi
pusha
in
(bad)
lahf
leave
movs
je
jo
fisubr
sub
sub
cmp
jb
mov
hlt
push
test
hlt
jge
ins
out
inc
lods
fistp
ss
ror
test
sub
mov
je
fdiv
xchg
cdq
push
sti
(bad)
jmp
imul
cmp
iret
inc
neg
dec
scas
call
(bad)
outs
in
rol
aad
cmc
data16
(bad)
cli
cmc
lock
jo
rcl
iret
scas
sub
lahf
ret
loopne
lds
ss
cmp
clc
mov
outs
out
inc
mov
or
add
dec
daa
add
retf
jl
cmp
cmp
out
int
pop
das
pop
stc
out
rcr
push
mov
aaa
nop
mov
in
pop
add
pop
clc
xchg
jge
in
je
in
sub
fwait
pop
shr
xchg
addr16
mov
test
dec
mov
push
sbb
rcl
cld
or
test
fstp
outs
fst
sub
mov
and
fs
mov
pop
adc
pop
in
push
fld
aad
lods
pop
inc
loopne
and
lahf
in
test
mov
sbb
loopne
mov
test
scas
inc
cli
pop
add
xlat
aad
add
es
into
jno
loope
cdq
add
pushf
xchg
sbb
das
ins
(bad)
push
les
xor
sti
push
xlat
stos
nop
in
(bad)
jns
pusha
dec
sbb
pushf
jge
jne
xlat
jno
inc
test
shl
imul
pushf
lds
cwde
pop
gs
in
inc
sub
sbb
enter
test
ins
out
pop
pop
jmp
scas
dec
pop
repz
xlat
jbe
push
test
inc
stc
dec
cdq
jb
(bad)
cdq
leave
movs
mov
cdq
pop
push
shl
cmps
shr
cmc
mov
outs
sbb
dec
fisttp
adc
fwait
aaa
jae
stos
mov
mov
dec
aas
out
cmp
push
pushf
push
push
add
js
add
in
fmul
xor
fidiv
int3
(bad)
pop
ins
fwait
pop
jge
pop
dec
in
pop
pop
add
mov
(bad)
or
pop
pop
push
retf
enter
xchg
xchg
jns
jnp
sar
(bad)
popf
jmp
test
push
or
mov
std
xor
jne
dec
loope
(bad)
jp
inc
mov
push
pop
fwait
pop
loop
(bad)
and
mov
push
push
inc
mov
frstor
pop
jb
jge
test
dec
mov
clc
das
and
adc
test
fisubr
nop
xchg
mov
mov
or
xchg
or
in
aad
sub
cmp
inc
movs
jmp
xor
jmp
mov
jecxz
idiv
fsubr
(bad)
adc
movs
vaddps
dec
and
mov
lea
out
adc
in
dec
mov
xor
leave
movs
mov
adc
xlat
stos
inc
mov
(bad)
aaa
iret
lock
and
inc
dec
push
jge
stc
push
push
xchg
(bad)
mov
push
imul
xor
ret
call
pop
mov
inc
or
and
adc
push
(bad)
into
enter
add
sbb
jae
mov
lods
adc
scas
lahf
inc
addr16
stos
cmp
sub
inc
movs
xchg
push
in
push
and
jl
pop
dec
mov
sbb
out
sahf
and
sbb
push
cmps
mov
hlt
out
cmp
inc
test
jp
rol
je
inc
adc
sbb
ins
data16
dec
outs
movs
sub
push
or
stc
mov
push
inc
rcr
std
test
dec
or
lods
sub
movs
enter
ins
inc
push
pop
clc
xchg
mov
rcr
sbb
pop
push
sbb
sbb
xor
ins
fidiv
mov
int3
daa
jle
dec
lods
jne
xor
sbb
and
scas
or
(bad)
cmps
aam
jae
push
mov
inc
mov
outs
jge
jb
in
sub
mov
rcr
push
mov
inc
dec
call
sti
and
in
jmp
daa
imul
icebp
cs
jg
jmp
in
jnp
dec
(bad)
cmps
jg
test
scas
retf
mov
inc
imul
push
test
shl
or
pop
iret
xchg
adc
mov
imul
test
test
shl
jne
xchg
fsubr
or
dec
sub
sub
xor
int
stos
adc
add
cmp
xlat
cmps
stos
sbb
outs
nop
shl
and
pop
fistp
imul
pop
fld
push
cmps
inc
jecxz
push
or
xor
xchg
push
pushf
jmp
mov
sti
xor
xchg
(bad)
es
inc
pop
fucom
js
cwde
fstp
mov
mov
inc
pop
mov
push
mov
lea
daa
sbb
and
sbb
mov
mov
adc
loope
enter
lahf
(bad)
and
aaa
dec
cmc
(bad)
pop
sub
daa
jmp
leave
mov
jg
and
cmp
leave
pop
push
movs
add
out
fimul
cld
retf
and
jnp
jmp
popa
mov
and
jno
mov
arpl
push
adc
pusha
push
xchg
popf
push
lock
mov
xlat
sub
and
push
cmp
xchg
or
xlat
movs
jo
sbb
loopne
jbe
pop
int
sbb
and
push
scas
jae
or
stos
lock
in
lds
lods
xchg
sbb
pushf
lahf
les
jbe
xor
jl
repz
or
scas
mov
mov
test
pop
dec
jg
aad
lea
push
test
fld
sti
pop
xchg
xor
sbb
and
push
cmp
push
lods
stc
inc
pop
push
sub
mov
cmc
cmp
mov
dec
add
xchg
jle
cwde
push
sub
mov
or
dec
aad
(bad)
div
pushf
jno
hlt
sbb
rol
jns
xchg
xor
jp
rcr
ret
inc
outs
mov
add
add
aad
jmp
in
stos
push
cld
dec
add
adc
xchg
push
mov
sti
ins
mov
aas
into
mov
inc
xor
add
int3
inc
and
xchg
jo
mov
out
rcl
sahf
jbe
div
sar
mov
je
and
inc
repz
js
xchg
int
div
pop
stc
mov
cmps
mov
xchg
clc
sub
std
xchg
ins
repz
popf
sbb
add
mov
pop
mov
adc
cli
ins
adc
adc
cmp
jno
add
pop
jns
inc
cmp
cmps
pusha
or
idiv
and
jb
jne
std
xor
in
cmc
in
data16
in
xor
test
std
je
and
pop
jbe
mov
mov
jmp
cwde
cvtps2pd
push
or
cmps
or
fs
and
inc
test
das
mov
pusha
ret
imul
sub
mov
lods
ins
stc
hlt
xor
mov
xlat
sub
xor
das
adc
dec
cmp
mov
xchg
aad
scas
in
stos
(bad)
ficom
and
adc
mov
shl
das
loope
pop
pushf
mov
pop
dec
je
popa
(bad)
mov
mov
jle
cmps
push
sub
(bad)
(bad)
push
mov
add
add
daa
cdq
bound
lods
dec
bound
pop
mov
fstp
add
jns
cmp
jo
pop
mov
loopne
dec
xor
xchg
jae
sbb
aam
ret
(bad)
push
push
fcmovnu
mov
cli
icebp
sbb
outs
cmp
test
add
(bad)
ret
aaa
mov
pusha
and
jbe
enter
(bad)
push
cmp
push
pop
mov
cmps
(bad)
fnstsw
outs
add
retf
in
test
cli
adc
(bad)
cmp
movs
cmps
sbb
mov
cmp
inc
pop
dec
lods
dec
or
(bad)
jmp
push
xor
adc
xchg
fprem
cmp
xchg
mov
adc
mov
jmp
adc
repz
cli
loop
jecxz
out
iret
loop
dec
dec
mov
rol
lods
mov
cdq
das
adc
mov
stc
push
mov
lods
pushf
popf
imul
rcr
push
stos
and
cmp
cmp
push
(bad)
fidiv
ins
mov
xor
mov
mov
xchg
push
adc
cmc
inc
cmp
lods
out
mov
and
or
ficom
xchg
push
and
hlt
in
dec
fnsave
dec
add
pop
ins
dec
mov
enter
jne
and
lods
jae
jg
mov
add
ret
inc
push
jmp
cmp
dec
sti
sbb
aaa
ss
retf
(bad)
push
lock
jns
pop
out
push
and
xchg
xchg
aaa
aas
or
retf
retf
sub
pop
adc
mov
clc
fisub
jb
nop
fwait
popa
imul
fld
icebp
adc
cmp
jo
push
xchg
xchg
pop
dec
xchg
(bad)
fisubr
sub
pop
dec
stos
mov
sbb
movs
stc
call
and
dec
pop
mov
aas
test
rol
(bad)
fimul
mov
(bad)
pop
cdq
mov
int
daa
add
pop
rcr
dec
cld
sbb
loopne
sbb
pop
sbb
cmp
data16
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
sbb
leave
ficomp
retf
fwait
mov
push
les
into
cmp
ins
loope
nop
mov
mov
xor
stc
mov
dec
clc
add
add
mov
inc
mov
inc
movs
jmp
ret
adc
or
jmp
fisub
dec
mov
imul
or
or
or
push
inc
stc
sbb
jae
fcomp
aam
dec
outs
mov
cli
pop
test
sbb
xchg
inc
or
xor
ret
jns
cmp
or
cmp
adc
xor
ins
mov
data16
xor
movs
aaa
pop
jge
push
into
adc
sbb
rcr
cmp
push
dec
mov
adc
gs
bound
jbe
cmp
jo
mov
sahf
pop
(bad)
and
mov
mov
sahf
push
pop
add
pop
scas
pop
fistp
test
not
in
call
div
icebp
aaa
mov
ins
pop
mov
sub
inc
cmp
sti
xchg
outs
loop
aam
xchg
push
stos
into
push
sub
scas
out
(bad)
dec
call
(bad)
fisub
jno
gs
test
add
(bad)
(bad)
mov
xor
sub
in
xor
retf
jnp
mov
and
jmp
mov
imul
and
dec
push
imul
aas
fsubrp
jmp
mov
arpl
push
repnz
or
sti
add
cmc
mov
or
push
xor
adc
iret
sub
pop
jge
inc
adc
and
sti
and
dec
jmp
(bad)
aad
jo
pop
inc
mov
inc
pushf
sahf
popa
les
jbe
mov
and
or
adc
xor
fld
fbld
call
xor
mov
inc
daa
popf
movs
adc
ret
stos
mov
jno
jl
mov
aam
icebp
mov
pop
mov
jbe
mov
mov
call
sbb
mov
aas
inc
adc
xchg
push
aaa
jle
dec
inc
ror
mov
mov
jae
das
(bad)
jp
cmp
test
fldln2
sbb
cmp
icebp
stos
or
xor
out
js
sub
(bad)
stc
xor
mov
sub
xor
rol
add
cmp
shl
(bad)
xlat
mov
mov
xor
(bad)
cmp
xor
test
std
enter
ja
mov
or
xor
imul
or
jle
dec
sahf
mov
(bad)
out
mov
in
mov
popa
and
jo
repnz
jmp
sbb
es
clc
mov
jnp
sbb
sbb
mov
gs
add
(bad)
or
ror
repnz
pop
mov
cmp
xchg
push
dec
jle
loopne
jp
int
push
sbb
mov
repz
inc
cdq
fmul
cmp
pushf
hlt
(bad)
not
popa
imul
shr
cmp
in
fwait
sahf
jae
pop
pop
addr16
pop
push
jo
test
dec
xlat
retf
or
mov
test
jae
and
xchg
fxch
clc
inc
je
jns
jne
(bad)
es
jmp
sub
daa
ror
sub
mov
jle
fistp
out
cmc
std
push
xchg
push
dec
xchg
sub
inc
cld
lods
ins
mov
mov
stos
mov
jmp
adc
aas
push
jbe
shr
retf
int3
nop
std
(bad)
repnz
(bad)
scas
xchg
call
pop
hlt
into
rcl
jae
or
mov
mov
ret
mov
sbb
stos
out
jb
dec
clc
repz
hlt
arpl
lea
push
loope
jbe
mov
inc
mov
push
mov
imul
nop
mov
and
pop
jp
popf
sahf
and
cmp
or
jle
jns
aas
mov
enter
int3
or
or
fnstenv
jae
xchg
aad
test
or
out
xor
pop
mov
scas
je
or
outs
sub
cmc
mov
cmps
or
stos
bound
rol
pusha
sbb
xor
sbb
dec
iret
les
scas
dec
cmp
inc
arpl
jo
mov
rol
adc
clc
sub
leave
idiv
add
dec
push
imul
das
nop
pushf
(bad)
test
jbe
xchg
jp
sbb
xlat
xor
mov
adc
pop
hlt
test
mov
pop
push
push
je
dec
lods
test
mov
retf
push
push
pushf
rcl
push
adc
push
push
lds
mul
ja
cs
and
mov
test
imul
cmp
mov
cmp
xor
stos
repz
loope
cmp
mov
jle
ror
in
xchg
mov
rol
jg
imul
mov
sub
stos
push
in
push
and
cmc
xchg
aaa
stc
scas
xchg
fild
add
jno
or
mov
xchg
dec
cmps
pop
imul
dec
xor
pop
inc
in
mov
fimul
je
movs
push
and
pop
out
into
fisubr
and
shl
mov
movs
mov
std
sbb
cmp
mov
enter
push
sub
call
jnp
jp
arpl
inc
loop
daa
sub
rcl
pusha
and
or
add
xchg
jne
xor
js
mov
test
pop
or
int
add
arpl
icebp
scas
out
mov
aas
inc
ja
hlt
mov
ins
outs
and
push
cmp
jcxz
and
neg
and
adc
ffreep
pop
mov
(bad)
mov
jae
or
dec
inc
lods
lds
fsubr
xor
iret
add
int
cmp
jno
inc
xor
pop
cmc
mov
mov
div
push
mov
jnp
xchg
fyl2xp1
icebp
sub
std
ins
xor
out
mov
fsubr
or
add
add
call
mov
sub
jmp
or
lahf
sub
mov
icebp
test
xchg
sub
xchg
outs
jp
scas
in
cmc
sbb
add
daa
sub
shr
mov
sub
shr
fs
jno
pop
pop
jg
push
jbe
cmc
mov
sti
xchg
mov
ja
jb
inc
int3
inc
mov
retf
xchg
int3
xlat
or
mov
iret
cwde
ret
ret
sbb
repz
ja
movs
out
cs
pop
fwait
sti
add
fmul
mov
outs
jb
cmp
sbb
adc
pop
sbb
je
cmp
out
dec
movs
sub
popf
mov
xor
arpl
(bad)
fwait
and
fisub
sub
mov
cmc
outs
or
inc
pop
xchg
xor
call
(bad)
push
jae
lea
imul
adc
inc
dec
inc
xchg
dec
(bad)
test
ss
arpl
or
pushf
iret
cs
push
sbb
push
fidivr
mov
xor
(bad)
or
std
dec
lea
(bad)
stos
jno
clc
jle
leave
mov
ret
xchg
je
test
or
inc
sbb
jno
or
pop
cmps
adc
cmps
ins
push
or
add
test
inc
sbb
aam
dec
or
jmp
call
outs
enter
sub
int3
repz
rcl
out
aam
adc
fwait
jno
mov
js
hlt
lahf
repz
cmp
jmp
xor
add
push
mov
hlt
test
xchg
xchg
call
hlt
pop
es
pop
inc
arpl
and
test
push
movs
add
aad
cwde
into
cmc
inc
bound
pop
jle
in
outs
in
lods
mov
test
pop
add
rcl
pusha
in
data16
out
cmp
test
sub
sti
shl
mov
scas
pop
jae
mov
or
popa
cmp
pushf
and
and
or
scas
cmp
xor
mov
jns
inc
fwait
sub
xor
xchg
mov
into
jmp
test
mov
mov
imul
mov
push
pop
mov
test
add
xchg
pop
mov
sbb
ror
pop
(bad)
jg
(bad)
js
add
fwait
or
or
sub
in
stos
sbb
int3
or
mov
or
mov
mov
ret
cmps
cmp
xchg
sbb
retf
out
sahf
ret
mov
leave
mov
push
hlt
call
stos
cmps
es
pusha
js
inc
jle
inc
arpl
pop
addr16
js
gs
push
mov
add
(bad)
lods
jnp
pop
adc
sub
jbe
popa
sbb
js
xchg
out
sar
cmp
iret
mov
inc
fild
bound
(bad)
neg
cmps
ins
sub
sub
pop
stos
cmp
dec
lods
xor
lock
retf
jecxz
pop
pop
ja
lds
inc
pop
xchg
pop
push
(bad)
inc
rol
inc
dec
stc
fistp
mov
pop
retf
les
bound
sub
or
movs
xchg
(bad)
inc
pop
push
(bad)
push
pop
pop
jae
mov
jp
xchg
push
xchg
pop
repz
fucomp
outs
das
xor
mov
sub
sar
adc
push
jp
shl
mov
sub
jno
add
icebp
mov
inc
mov
jbe
imul
cmps
repz
sub
imul
sub
fs
icebp
in
sbb
adc
aad
daa
jnp
icebp
dec
mov
sar
or
ror
sbb
add
jno
movs
scas
dec
sbb
cmps
movs
xchg
mov
pusha
loopne
mov
sub
adc
loope
jecxz
adc
inc
icebp
add
jg
data16
aas
jge
sbb
pusha
je
sub
je
push
jne
cmp
movs
int
sahf
clc
mov
rcl
(bad)
mul
add
mov
pop
lahf
bound
into
jmp
stos
mov
retf
and
arpl
icebp
aad
mov
mov
push
in
adc
push
outs
jb
push
pop
icebp
jge
xor
push
xchg
in
mov
inc
adc
(bad)
and
inc
or
test
push
loop
outs
or
sbb
ja
sub
mov
mov
dec
ss
dec
cld
inc
jmp
push
imul
rol
cmp
jecxz
xchg
fnsave
repz
push
pop
sub
xlat
xlat
dec
xchg
and
xor
dec
pop
fwait
adc
ret
out
jbe
imul
jmp
cmp
xor
(bad)
adc
pop
imul
inc
push
test
jle
push
cmp
je
fld
ret
cmp
daa
jmp
mov
cmp
sub
repnz
repnz
icebp
out
mov
in
sbb
mov
lock
mov
nop
jmp
sbb
movs
and
mul
outs
cmp
test
cmp
mov
dec
sub
das
psubd
div
mov
fistp
call
popa
int3
in
lods
adc
mov
push
pop
frstor
fstp
inc
adc
dec
mov
aam
scas
pop
shr
push
out
sub
mov
inc
mov
push
mov
mov
(bad)
stc
aaa
lock
loopne
sar
sar
cmps
repz
jo
cs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
jecxz
xchg
fnstsw
cmps
fistp
outs
xchg
pushf
call
je
(bad)
xor
cmp
repz
pop
add
aam
das
add
cdq
jle
jp
movs
stos
jp
and
loope
or
xchg
sbb
das
jg
enter
lods
xchg
mov
ins
iret
dec
sub
in
test
repz
(bad)
fucomp
dec
(bad)
pusha
mov
mov
add
xor
rcr
inc
div
inc
outs
mov
inc
adc
mov
ja
sbb
sbb
pop
outs
inc
xchg
or
cmp
sub
sub
xor
in
in
mov
retf
xchg
es
mov
mul
std
mov
sbb
mov
shr
cmc
ins
imul
js
pushf
rcl
mov
mov
mov
mov
data16
fprem
pop
ins
push
pop
sbb
mov
cmp
and
pop
sbb
mov
cli
sbb
test
xor
xor
les
xor
inc
jb
fwait
movs
cmp
jge
xor
lods
push
push
gs
iret
mov
jmp
jp
call
mov
pop
xchg
outs
and
jb
cmps
lahf
xchg
out
sub
xor
jmp
jnp
mov
in
jge
inc
rcl
xlat
jbe
out
pop
cmp
and
xchg
out
ins
out
fistp
fldenv
cmp
addr16
scas
sub
dec
stos
aas
sar
sub
push
test
in
adc
cdq
jg
in
jle
mov
out
inc
and
out
lods
jae
retf
imul
adc
ret
data16
xchg
xchg
jo
push
mov
nop
cdq
sbb
push
std
(bad)
imul
out
std
add
inc
and
int
mov
rcr
dec
mov
xchg
push
push
dec
mov
dec
je
mov
adc
mov
mov
hlt
iret
adc
arpl
stos
sbb
ss
outs
pop
jns
dec
mov
sub
xchg
lods
(bad)
fidiv
cmp
push
jno
lods
or
push
push
jb
jmp
imul
xchg
sbb
dec
push
pop
call
jbe
shl
mov
retf
test
pop
iret
adc
pop
hlt
cmp
xchg
push
adc
aad
pop
add
fadd
fistp
dec
loope
push
push
adc
sub
data16
push
rcl
sub
inc
jnp
ret
lds
xor
(bad)
iret
xchg
dec
(bad)
int
sbb
dec
cmp
iret
lea
xor
aam
sbb
pop
jmp
es
cmp
xor
test
sub
mov
jae
jge
lahf
aam
adc
xchg
lahf
fwait
mov
sbb
data16
outs
jno
dec
dec
push
mov
test
xchg
sbb
mov
push
dec
ins
mov
mov
pop
imul
je
scas
inc
ds
cmp
mov
cmp
stc
mov
and
xor
push
std
jbe
and
mov
inc
sbb
leave
mov
jmp
jge
xor
retf
(bad)
mov
repnz
lods
dec
js
mov
fidiv
test
idiv
xor
lahf
cmp
dec
push
cmps
and
or
and
push
add
test
or
pushf
mov
(bad)
daa
dec
inc
(bad)
rcr
jge
mov
dec
loopne
leave
push
fimul
inc
push
add
or
cli
inc
popa
int
pop
fild
test
cmp
sub
or
lock
test
stc
cmp
pop
stc
jg
sti
loopne
ror
add
repz
test
movs
or
stos
add
call
movs
adc
retf
dec
call
mov
push
inc
add
stos
adc
sub
jp
test
ins
sbb
or
dec
test
outs
bound
hlt
bound
dec
and
or
int
aad
add
mov
push
push
push
xor
inc
jae
repz
jecxz
mov
mov
mov
outs
lds
xor
jbe
mov
push
and
inc
sti
mov
fs
cld
mov
cld
addr16
mov
fst
gs
daa
ss
adc
xchg
inc
sub
sahf
in
in
lods
mov
pop
sbb
and
out
sbb
add
xchg
sahf
sbb
jmp
cmp
mov
xlat
bound
mov
je
mov
pop
jno
nop
stos
sbb
mov
sbb
xor
call
aaa
cdq
cmp
fst
aas
dec
xchg
ret
adc
dec
aad
inc
fcom
push
stc
or
mov
clc
jbe
add
xchg
mov
ret
in
pop
dec
push
dec
sbb
jno
cmp
mov
icebp
push
and
pusha
cmp
jg
jae
rcl
ret
cmp
mov
inc
mov
push
ds
cmp
std
jnp
cmp
hlt
scas
add
mov
jbe
xchg
pop
ror
mov
mov
jnp
ud1
loop
xchg
pop
into
push
scas
mov
sahf
fstp
cmp
adc
cs
movs
add
jae
sub
adc
mov
or
retf
inc
xor
neg
cs
xor
call
cmp
mov
ins
je
and
mov
mov
icebp
loop
arpl
mov
fmul
out
test
stc
fimul
adc
lea
mov
fld
mov
std
in
scas
jg
sub
mov
and
xchg
shr
xor
mov
mov
jecxz
mov
aam
je
jns
int
dec
or
std
imul
(bad)
jmp
loop
adc
mov
mov
test
adc
mov
inc
pushf
add
adc
pop
mov
cdq
push
xor
add
inc
in
mov
adc
rcr
mov
pop
mov
hlt
adc
les
outs
cdq
jo
ja
push
mul
cmp
jno
mov
ds
jnp
sbb
mov
add
or
arpl
lds
xchg
dec
js
aam
mov
fst
dec
pop
push
inc
dec
rol
arpl
pop
or
mov
les
sub
je
sbb
icebp
(bad)
loope
movs
std
ftst
dec
fs
xchg
scas
pusha
xor
popf
inc
mov
mov
pop
or
repnz
popf
cli
test
dec
xchg
adc
das
inc
std
mov
sbb
dec
mov
sti
sub
scas
pop
imul
(bad)
mov
push
mov
dec
mov
xchg
icebp
xor
sub
bound
sahf
jne
sbb
and
add
aaa
fsubr
sbb
pop
push
pop
xor
cdq
stos
mov
imul
aaa
sti
data16
mov
jl
ins
sub
dec
adc
int3
pop
scas
in
loope
mov
cs
xor
outs
int3
sbb
outs
pslld
lea
cmp
inc
bound
clc
inc
adc
adc
inc
out
pop
shl
or
jg
mov
outs
push
ins
(bad)
cmc
pop
int3
inc
jno
rol
push
getsec
mov
add
add
shl
loop
cmp
dec
jb
ins
hlt
push
lds
push
call
sub
lahf
out
lock
movs
in
leave
sahf
fiadd
std
jbe
hlt
sub
inc
sbb
das
pusha
cdq
xor
adc
popa
out
(bad)
cmc
dec
scas
add
jecxz
(bad)
xor
fs
push
xor
adc
push
push
push
out
inc
data16
sbb
cmps
std
je
cmc
xchg
sahf
jmp
or
mov
inc
xchg
and
jb
xor
and
xchg
jp
mov
push
or
pop
inc
gs
fwait
cwde
xor
inc
test
icebp
push
mov
dec
jmp
loop
mov
push
sti
test
mov
push
sub
add
lock
int3
xchg
pop
sub
xor
fwait
push
mov
and
int3
rcr
mov
cmp
les
mov
cdq
jmp
(bad)
pushf
addr16
popa
pop
mov
pushf
mov
add
mov
cmp
enter
inc
xor
test
cmps
pop
jb
dec
pop
mov
xchg
adc
leave
and
aaa
test
jne
rcl
out
stos
not
jbe
and
or
fwait
mov
push
mov
jbe
push
cmp
out
inc
iret
rcr
mov
clc
mov
add
imul
imul
mov
push
test
ret
mov
dec
rol
pop
pop
lds
dec
movs
sub
push
(bad)
fcomp
fdiv
inc
movs
shl
imul
xor
fwait
jp
(bad)
(bad)
xor
inc
call
cmc
vmwrite
scas
popa
pop
(bad)
xchg
test
in
js
sbb
cmp
in
mov
mov
test
push
or
mov
jp
cs
mov
jmp
adc
(bad)
sbb
push
pop
mov
cmp
cmp
imul
sahf
test
adc
lahf
cmps
add
mov
mov
test
adc
jmp
jmp
push
inc
push
or
and
test
neg
adc
fucomp
jl
adc
nop
ins
mov
and
fwait
mov
sbb
aas
sub
mov
inc
inc
ins
out
pop
xlat
test
jbe
fstp
nop
or
(bad)
(bad)
popf
pop
test
call
or
stos
lock
sub
or
pop
clc
inc
mov
les
outs
dec
adc
pop
jbe
fisttp
jae
adc
nop
pop
jmp
fidiv
(bad)
push
call
sbb
iret
pop
mov
int3
imul
and
test
jmp
ror
mov
mov
or
gs
rcl
xlat
xchg
dec
adc
fs
das
jmp
xor
stos
pop
jecxz
xor
pushf
pop
cmp
lahf
cmp
or
ror
adc
lods
imul
jno
aam
ja
push
dec
rcl
ins
or
xor
imul
and
add
ds
out
sbb
inc
jb
fcom
push
lea
mov
in
pop
mov
sbb
call
loopne
pop
and
inc
pop
sbb
stc
fbstp
imul
inc
ret
sub
div
(bad)
sub
inc
clc
aaa
mov
xchg
(bad)
xchg
pop
into
sub
cdq
js
jae
scas
sbb
(bad)
fnstsw
fiadd
fiadd
mov
mov
push
test
cmp
data16
jbe
hlt
ficom
bound
mov
xchg
sbb
test
or
rol
pop
dec
inc
addr16
lahf
sbb
enter
call
clc
aaa
lock
loopne
sar
lock
out
inc
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
cwde
and
retf
dec
push
inc
inc
je
push
jmp
inc
nop
sbb
mov
mov
bound
cmps
movs
pushf
mov
jg
cs
add
lods
inc
cmp
push
fs
xor
dec
sbb
(bad)
push
dec
mov
and
adc
inc
and
xor
(bad)
jle
sub
xor
push
adc
shr
stc
mov
sub
test
mov
push
pop
lods
adc
(bad)
hlt
in
pop
jmp
inc
ss
mov
jp
sub
pop
movs
adc
sbb
or
scas
ins
imul
push
inc
push
fdiv
mov
lds
push
clc
lahf
jnp
stc
enter
pop
fcom
shl
out
pop
cdq
sub
xchg
loope
add
pop
test
jne
push
mov
fst
mov
leave
into
and
cmp
fisub
or
(bad)
cmp
loopne
cdq
jns
ds
out
idiv
nop
pop
mov
rol
sbb
xor
adc
cmp
fcom
sahf
jp
mov
outs
add
dec
mov
push
pop
movs
ss
push
sbb
fld
ret
nop
ins
aas
push
out
(bad)
call
ret
inc
and
pop
into
test
mov
sbb
cmp
sub
xchg
ins
dec
int3
out
xchg
loopne
jmp
out
sti
ins
fadd
dec
xchg
mov
mov
pop
xor
dec
dec
ds
ficomp
call
test
mov
sbb
adc
icebp
mov
aam
push
lods
mov
mov
call
pop
mov
cwde
bound
jns
cdq
add
xor
test
jo
add
push
jmp
pop
xor
int3
rcl
or
in
aad
ja
and
clc
clc
and
cmps
pushf
or
jae
jmp
jns
test
pop
dec
js
ja
xchg
xchg
popa
push
cmp
inc
fisub
in
call
fwait
or
hlt
(bad)
sbb
movs
neg
int
js
cmp
xor
rcl
movs
jo
jo
aaa
adc
in
mov
jno
push
bnd
imul
ins
mov
cmps
sbb
out
stos
push
hlt
cmp
mov
xor
out
cs
pusha
test
push
jecxz
mov
das
stos
rol
mov
(bad)
jl
retf
sub
pop
loope
jle
push
jg
loop
(bad)
cmp
clc
cwde
mov
push
outs
and
shr
or
lock
mov
adc
lds
test
aad
pop
jne
call
nop
and
sbb
repnz
jae
mov
cmps
cmp
mov
jmp
mov
mov
cli
push
mov
sahf
pcmpeqd
cmp
loope
inc
push
jnp
aas
mov
repnz
lahf
clc
aam
je
inc
int
sub
fisttp
stos
dec
jmp
or
fs
(bad)
push
jmp
ja
sub
movs
mov
adc
iret
fidivr
push
ja
or
lea
cmp
push
mov
mov
fistp
mov
adc
mov
shr
xchg
xor
cs
loop
push
in
jbe
imul
mov
cmp
adc
mov
mov
pop
mov
push
enter
adc
dec
dec
lahf
retf
sbb
mov
popa
cmp
and
cmp
pop
lea
mov
daa
cmps
addr16
pop
jns
sub
jno
(bad)
shr
out
(bad)
sub
sub
mov
clc
cmp
add
aas
mov
jmp
sub
jne
in
jo
mov
push
jbe
fist
xor
das
out
cmp
js
(bad)
adc
cmp
sub
(bad)
push
fcmovnu
xor
and
mov
call
mov
std
xchg
sbb
mov
jmp
movs
jno
push
dec
mov
repnz
sub
sti
mov
or
sar
aad
ret
pop
andnps
lds
push
rol
add
mov
mov
pop
sbb
repnz
mov
dec
out
inc
lock
ror
and
mov
jmp
into
scas
gs
(bad)
mov
pop
into
(bad)
fidiv
not
or
jl
sbb
mov
jne
mov
add
inc
jge
push
dec
mov
lods
call
aam
pop
pushf
pop
mov
dec
xchg
out
push
or
inc
pop
mov
dec
sbb
xlat
dec
and
add
scas
das
cmps
jle
xor
rcl
mov
mov
(bad)
call
mov
add
xor
(bad)
mov
imul
clc
inc
(bad)
or
ss
cmp
xor
mov
cdq
(bad)
xor
ds
pop
push
xchg
mov
jge
dec
mov
pop
sti
xor
jo
test
inc
xor
imul
inc
test
mov
xor
(bad)
loopne
fild
popf
pop
cmp
fimul
imul
repz
pop
sbb
pop
je
cmp
fs
xchg
jge
pop
adc
pop
imul
js
pop
daa
ds
xlat
mov
cli
dec
dec
jbe
sub
pusha
retf
sub
sub
int
inc
push
adc
sub
push
sub
ret
jns
aam
loopne
(bad)
jp
jbe
aaa
push
into
mov
mov
movs
mov
call
ds
test
xor
cmps
mov
mov
stc
hlt
jmp
(bad)
push
and
outs
cmp
adc
xchg
jnp
(bad)
jnp
pushf
adc
push
mov
dec
dec
inc
cmp
jl
mov
outs
add
cmp
inc
fiadd
inc
adc
lock
je
sbb
add
ds
adc
fstp
adc
xchg
mov
into
xchg
cwde
call
push
stos
aam
jmp
in
jmp
mov
inc
sub
int3
or
mov
inc
popa
je
call
repz
lds
stc
xchg
inc
jae
aas
fild
out
test
mov
push
mov
inc
add
dec
cmp
dec
pop
cs
and
adc
js
push
lds
inc
rcl
sti
mov
push
xchg
inc
adc
int
into
jp
xchg
(bad)
in
cmp
in
xor
fnstenv
add
scas
adc
sub
cmp
jnp
mov
mul
jl
push
xchg
add
or
cli
fidiv
push
aas
fwait
shl
mov
dec
inc
hlt
push
pop
stos
movs
outs
sahf
push
push
out
sbb
push
sub
stc
sbb
lock
icebp
(bad)
out
or
cld
fwait
jmp
mov
push
lods
retf
(bad)
xor
xor
push
and
adc
daa
fsub
aam
mov
push
mov
sub
inc
and
test
je
sbb
adc
data16
mov
push
retf
fcomi
call
sar
inc
xchg
xor
jp
pop
out
aaa
sbb
ds
add
out
sbb
fsubp
out
in
pop
icebp
mov
push
push
hlt
dec
mov
inc
dec
lahf
int
into
jno
and
mov
mov
mov
call
or
test
test
add
addr16
in
push
test
or
test
cmc
in
popf
test
jg
ins
gs
pusha
jo
nop
push
sbb
and
push
push
stos
cwde
stos
cmp
cmp
xchg
jnp
jno
into
mov
sbb
movs
fst
jmp
gs
sbb
cmps
in
dec
dec
xchg
(bad)
test
dec
mov
mov
je
jmp
cmp
xor
imul
test
pop
add
sbb
sbb
sti
mov
push
gs
daa
fs
je
inc
and
adc
loop
push
clc
int3
xor
bound
push
xchg
(bad)
push
xchg
sub
mov
mov
jg
cmp
stos
xchg
push
push
jb
mov
pop
mov
je
dec
int3
ror
and
dec
push
std
into
push
sub
fldcw
xor
mov
loop
sti
stc
mov
cmp
das
push
lods
dec
mov
or
iret
ss
sbb
pusha
shl
pop
pop
sub
add
sti
cmp
inc
pop
outs
jecxz
std
lock
and
add
xchg
dec
sbb
mov
test
pop
xor
mov
or
into
jl
fistp
test
out
sub
hlt
or
jb
fistp
inc
mov
inc
pop
sub
sub
or
rcr
xor
dec
mov
xchg
inc
pop
jnp
mov
dec
pop
retf
shl
(bad)
pop
shl
(bad)
call
push
daa
mov
repnz
cmps
push
xor
mov
push
mov
cmps
mov
idiv
in
adc
and
or
and
mov
inc
dec
jmp
inc
out
call
sub
or
loopne
mov
lahf
jg
mov
lods
inc
cmp
ins
sub
or
mov
cwde
pusha
shl
cmps
stc
jmp
(bad)
dec
xchg
les
jbe
push
dec
int
idiv
xlat
ds
and
jo
cmp
popf
mov
popa
sahf
sbb
or
fisubr
imul
std
jno
shl
xor
ror
nop
dec
cli
and
cmp
and
pop
xor
adc
inc
jnp
xchg
push
xchg
or
dec
aad
and
cmp
imul
xlat
and
push
sub
div
and
mov
inc
jecxz
out
les
dec
and
adc
xor
and
sub
and
lahf
retf
into
or
or
pop
pop
xchg
pop
add
ins
ja
pushf
mov
jmp
inc
mov
inc
xor
test
out
mov
dec
sbb
ins
jmp
lea
or
shl
nop
shl
xlat
dec
pop
dec
xchg
jne
nop
adc
jae
xchg
and
fld
mov
pop
sub
out
jp
mul
cmp
adc
(bad)
daa
call
jl
adc
loopne
adc
scas
push
(bad)
jne
std
arpl
(bad)
jne
dec
into
sub
and
mov
push
add
jno
xchg
cmp
sar
xor
push
cdq
add
mov
mov
sbb
jnp
dec
lods
sub
ss
pop
inc
scas
xor
push
ds
ds
shl
iret
ret
jl
movs
js
mov
nop
stos
inc
adc
mov
out
jmp
mov
and
rcl
jecxz
dec
shr
daa
sbb
xchg
rcr
push
cli
mov
rcr
push
test
repz
or
push
(bad)
cld
sbb
aaa
lock
loopne
sar
inc
add
jne
xor
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
cmp
(bad)
jecxz
icebp
push
neg
es
arpl
popf
int
dec
inc
(bad)
jbe
sbb
fnstcw
and
in
cwde
(bad)
int3
enter
and
pop
inc
cdq
aad
inc
(bad)
push
std
mov
dec
js
div
add
mov
leave
adc
movs
dec
icebp
mov
push
add
fiadd
jp
mov
(bad)
test
imul
or
push
push
test
push
ret
sub
call
fcomp
xchg
jle
mov
(bad)
call
fcomp
aam
shl
(bad)
jae
push
scas
sbb
(bad)
popf
imul
inc
call
(bad)
mov
in
and
(bad)
xchg
mov
cmp
(bad)
xchg
adc
test
es
cmp
pop
arpl
jp
add
xchg
stos
lahf
xor
neg
xor
and
into
fstp
mov
int3
rcl
push
mov
int
jge
out
adc
sahf
fcom
dec
push
cmp
xor
movsx
call
lds
icebp
add
and
cmp
jnp
scas
enter
(bad)
bound
cmp
push
sbb
push
xor
jno
fiadd
inc
pop
jle
cmp
fst
fld
dec
aam
mov
jns
dec
dec
inc
icebp
mov
push
jae
or
fcom
sbb
and
test
retf
cmp
call
and
add
pop
cmp
push
mov
and
test
sbb
mov
jp
(bad)
jl
dec
mov
cmp
sti
daa
mov
xchg
pminub
aam
les
ss
mov
scas
adc
aad
jne
pop
inc
xchg
int
xchg
ret
xchg
inc
jmp
pop
jno
ror
ins
sub
loopne
xor
xchg
mov
in
push
aad
sbb
out
movs
mov
xchg
pop
sub
mov
xchg
dec
push
sbb
adc
mov
and
push
mov
mov
(bad)
bnd
cmc
mov
jl
push
out
jmp
push
or
and
pushf
repnz
adc
js
inc
clc
or
shl
sbb
jbe
pop
fst
jo
cmp
jecxz
sbb
jle
test
dec
dec
lea
lock
test
adc
daa
fdiv
mov
test
or
pop
pop
adc
xor
jmp
pop
sbb
dec
mov
(bad)
xchg
lock
fcmovu
push
dec
nop
add
outs
hlt
sbb
dec
sbb
pop
aaa
out
pop
push
mov
mov
sub
pop
out
jno
addr16
and
sbb
inc
mov
in
mov
out
ret
into
loopne
xchg
mov
pop
sbb
adc
and
mov
push
pop
popf
xlat
mov
lahf
fist
shl
lods
jbe
cmps
ins
scas
push
cmp
lock
sub
jo
xchg
aas
xor
xchg
aas
pop
push
mov
outs
inc
ficomp
mov
xor
aam
out
mov
jb
cmp
call
repz
inc
sub
push
mov
dec
icebp
dec
add
pop
cmp
repz
sbb
mov
rcl
pop
mov
dec
fnclex
addr16
outs
cmc
push
or
enter
xchg
movs
and
sbb
into
test
hlt
adc
sti
pop
mov
aas
mov
scas
loope
arpl
bswap
push
sub
out
inc
addr16
push
cmps
pop
dec
or
push
mov
imul
sbb
mov
xchg
int3
popf
ins
cmps
cmc
mov
sub
loop
shr
dec
jb
mov
fist
jg
test
je
pop
inc
pop
add
pop
sub
jge
or
mov
scas
mov
sub
nop
jns
pop
mov
scas
nop
jge
pop
dec
cdq
out
cmps
add
dec
inc
push
mov
lea
(bad)
addr16
mov
int
cmps
add
cmps
lods
fld
xor
add
(bad)
int
out
mov
rol
xor
scas
push
mov
popf
inc
je
xchg
or
addr16
push
mov
jo
(bad)
imul
sub
ins
cwde
mov
xor
or
or
or
imul
fs
push
cwde
out
jae
xor
xor
test
push
adc
cmp
or
xchg
fadd
loop
fcomp
jmp
je
ja
dec
inc
shl
mov
out
imul
ds
jbe
stc
pmaxub
mov
movs
(bad)
pushf
mov
movs
cli
or
push
add
mov
mov
rcl
ja
leave
mov
push
jb
shl
fst
mov
xlat
mov
icebp
add
pop
sar
imul
sub
pop
imul
lds
jb
das
mov
mov
pop
pushf
fidiv
xlat
popf
int3
xor
out
jo
xor
add
xchg
out
cmps
mov
test
push
mov
ins
xchg
test
sub
bound
scas
aas
jnp
jnp
mov
lds
pop
ja
dec
xchg
or
mov
loope
lods
sbb
xchg
in
out
retf
mov
nop
add
mov
mov
inc
loop
ret
retf
push
jecxz
dec
xor
fcmovne
cmps
not
movs
shl
dec
in
fistp
cdq
cmp
mov
cmp
and
push
sub
sbb
cmp
imul
adc
or
push
scas
sub
cdq
pop
bound
cmp
outs
push
push
ins
mov
xor
fsubp
or
imul
jo
mov
push
clc
push
push
scas
hlt
cmps
pop
shr
nop
cmp
rol
cwde
es
push
out
mov
adc
cmp
xchg
push
std
cmps
popa
and
sub
xor
add
leave
cmp
pusha
shl
jmp
pop
fnstcw
xor
bound
outs
sti
dec
pop
mov
js
and
xor
test
adc
ja
stos
mov
push
fistp
dec
mov
inc
int
jbe
jl
cmp
leave
sub
jge
or
adc
inc
jb
cdq
mov
or
and
loope
inc
sub
fs
mov
pushf
scas
mov
outs
mov
neg
cmps
aaa
push
iret
pop
stc
jmp
sub
sub
repz
mov
mov
or
jo
or
je
repz
gs
push
adc
rol
push
jns
xchg
dec
inc
jmp
sub
aad
test
popa
fstp
mov
xlat
test
pop
mov
(bad)
imul
das
inc
imul
pop
push
cmps
xchg
rol
(bad)
jae
jne
(bad)
cmc
and
pop
jmp
cmp
add
repnz
dec
iret
push
stos
add
push
retf
movs
jo
add
shl
push
not
xchg
stos
jmp
push
in
inc
(bad)
jae
adc
add
jmp
mov
lods
leave
lea
neg
push
sahf
xor
or
sub
js
pop
(bad)
outs
outs
in
test
imul
scas
ret
jmp
repz
jle
rcl
lods
outs
mov
and
sti
mov
rcr
cmp
jnp
daa
das
jne
jg
retf
push
into
dec
jbe
out
mov
test
adc
sub
pushf
mov
push
push
popf
int3
cmps
cld
jno
sub
push
(bad)
shr
fdivr
repnz
push
test
push
adc
sub
imul
int
out
iret
add
dec
adc
mov
lock
cwde
and
cmp
popa
push
aaa
and
mov
addr16
out
adc
pop
pusha
out
dec
int
int3
jns
call
push
push
cmp
jge
stos
or
xlat
aas
mov
retf
add
sti
sbb
pop
dec
sahf
or
xor
pop
mov
aad
icebp
cmps
pop
mov
push
mov
pop
lea
and
cmp
lods
xor
dec
ret
fiadd
aam
pop
mov
cmps
popa
test
aam
xchg
pop
lods
cmp
mov
xchg
pop
loop
mov
add
in
pop
push
cmp
sbb
fcmovnbe
mov
jge
xor
dec
sub
pop
(bad)
into
repz
mov
dec
mov
outs
popa
(bad)
sbb
ins
inc
xor
sub
data16
aaa
mov
sub
dec
mov
sub
xor
scas
rcl
inc
and
lahf
stos
and
int
mov
dec
sahf
dec
jmp
fdiv
lods
add
into
push
dec
mov
daa
repnz
(bad)
shr
xor
pop
daa
inc
int
stos
sbb
aaa
sbb
jp
and
sar
ficomp
ins
jne
inc
scas
inc
xchg
(bad)
mov
inc
or
aas
es
stos
add
(bad)
loopne
inc
mov
pusha
inc
outs
in
mov
ins
aad
mov
mov
daa
sbb
push
daa
call
xor
icebp
xor
dec
add
sbb
stc
sub
lds
in
adc
xor
sbb
mov
inc
imul
lods
inc
rcr
popf
fwait
sub
aaa
(bad)
movs
cmp
or
inc
or
in
mov
(bad)
in
daa
push
(bad)
ins
add
and
std
inc
fdivrp
xchg
mov
jg
sub
fidiv
dec
stos
mov
ret
lds
adc
mov
pusha
xchg
pop
sbb
rcr
(bad)
jecxz
repz
loop
movs
fimul
mov
push
jmp
imul
shl
fstp
and
cmp
push
cmp
push
push
ret
xlat
ja
jnp
fs
das
inc
cdq
ss
fnstsw
scas
mov
add
mov
lods
cwde
out
daa
xchg
xlat
jno
push
cwde
or
jmp
into
lahf
mov
mov
popf
call
in
mov
inc
ds
xor
fist
(bad)
iret
loop
inc
push
neg
mov
xor
in
in
jl
aam
xor
ds
fsubr
repz
add
xchg
pop
mov
mov
lds
mov
sub
ja
xor
inc
sbb
fdiv
add
and
xor
xchg
punpckhbw
xor
mov
inc
pop
pop
or
ds
es
add
ss
cld
and
jo
lods
hlt
or
mov
in
call
loopne
sbb
xchg
stc
mov
lock
movlhps
push
das
stc
fwait
dec
test
call
outs
(bad)
jbe
xchg
dec
mov
out
and
repz
push
sbb
push
xchg
push
xchg
mov
sti
sbb
cmps
sbb
es
jne
cwde
xor
or
rcl
sub
(bad)
rcr
test
daa
xacquire
imul
popf
mov
ss
shl
test
pop
push
dec
jle
es
in
push
into
movs
adc
push
mov
nop
pushf
xor
int3
int
test
ficom
adc
repz
xor
lea
xor
or
rol
outs
add
mov
push
cs
dec
add
and
clc
bound
dec
loopne
sar
jg
dec
inc
add
sbb
lods
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
(bad)
jecxz
icebp
pop
addr16
cmp
mov
sub
xchg
cmp
xchg
dec
fs
jae
dec
xchg
cmp
addr16
cdq
mov
mov
fidivr
(bad)
loope
imul
loopne
add
sbb
mov
lock
lahf
(bad)
fcmovnbe
cmp
retf
pop
add
jge
scas
jmp
xchg
add
addr16
shr
ds
mov
dec
xor
stc
test
fadd
jae
mov
pop
fdiv
sbb
je
dec
sbb
in
(bad)
neg
pop
sti
stos
bnd
cmp
fsubr
jmp
cli
lds
test
add
rcl
lds
jp
inc
and
fcomp
sub
inc
les
jno
outs
adc
std
adc
xor
sahf
jmp
iret
(bad)
rol
ret
mov
std
in
cmp
push
ret
das
cmp
repz
in
or
rsm
or
mov
aaa
lea
aam
aad
(bad)
jns
(bad)
cs
movs
push
scas
jmp
nop
cmp
pop
popa
ror
inc
inc
mov
gs
pop
rcl
xchg
pop
or
ret
out
dec
mov
ins
fdivr
mov
cmps
fs
xlat
js
pushf
js
cmp
push
fst
push
in
sar
leave
popa
jecxz
(bad)
imul
scas
push
js
mov
cmc
lods
mov
call
or
push
push
repnz
lock
inc
arpl
mov
mov
inc
push
or
out
lahf
test
jge
add
sbb
adc
rol
ffree
outs
pop
mov
push
push
sub
bound
mov
pop
in
test
dec
cmp
xor
out
repz
ror
shl
loop
fwait
scas
stos
cmp
jns
inc
fnsetpm(287
and
loope
aaa
and
push
cmp
add
push
pusha
add
xor
sub
cwde
int
xchg
into
loope
mov
in
cmps
xor
mov
jno
loope
xor
dec
pop
mov
fisttp
stos
popf
push
xor
dec
out
xchg
mov
jo
je
scas
sub
dec
dec
jmp
xchg
aas
push
add
inc
mov
jns
into
stc
cmp
or
mov
xlat
iret
retf
fmul
dec
mov
mov
lock
inc
loop
adc
push
adc
sub
mov
(bad)
pop
or
xor
mov
ja
ret
mov
test
retf
sub
dec
xchg
out
retf
test
mov
cwde
inc
das
iret
xor
je
mov
jno
dec
add
pop
das
ret
add
dec
sub
pop
(bad)
push
mov
scas
loop
mov
xchg
inc
cmp
push
add
inc
add
mov
adc
push
pushf
call
sbb
nop
jmp
mov
test
inc
push
aas
inc
push
ds
push
scas
test
je
ss
mul
or
dec
or
mov
mov
mov
lock
jmp
enter
adc
add
lahf
push
fsub
out
xchg
outs
jl
inc
push
fistp
xchg
retf
pusha
mov
mov
imul
or
scas
icebp
mov
ret
dec
scas
jns
inc
xchg
shr
mov
pushf
cmp
mov
das
sbb
fwait
cwde
inc
and
sub
fistp
pop
out
pop
inc
in
lds
mov
mov
jl
aas
jge
mov
jne
cdq
mov
pop
jmp
loope
daa
pop
sbb
repz
gs
push
jne
adc
xchg
jno
xchg
inc
out
fs
mov
jp
xor
sub
dec
push
xor
or
lahf
fsubp
or
fyl2xp1
pop
fcmove
cli
movs
and
or
not
pop
out
xor
sbb
sub
repz
dec
cmp
cld
cmp
outs
retf
arpl
mov
ret
pop
pusha
jnp
sahf
fild
scas
mov
in
sub
jl
sub
cmp
pushf
(bad)
xor
fcomi
fld
push
cli
shl
ret
ins
aam
add
into
sub
xchg
scas
call
pusha
add
push
sbb
(bad)
shl
xchg
and
or
xor
cmps
in
ret
pop
test
int
or
mov
push
ret
popf
icebp
scas
jo
and
mov
aas
je
cmp
cmc
fs
jge
in
mov
sub
jbe
mov
xor
aam
pushf
xchg
loope
inc
jge
xor
daa
xchg
jns
lahf
inc
hlt
shl
je
xor
sar
or
dec
int
mov
div
xchg
bound
dec
imul
test
jg
adc
push
cmovp
rol
sub
ds
enter
jnp
in
dec
mov
cmp
out
leave
cwde
mov
sbb
inc
push
inc
clc
adc
jmp
cdq
add
or
aam
rcr
xchg
mov
retf
sub
fsubr
jmp
mov
jmp
sbb
jmp
fdivr
jno
jle
dec
mov
push
xlat
and
mov
xor
mov
and
jmp
jmp
gs
or
jl
nop
ror
or
and
mov
pop
adc
pop
cdq
pop
test
pop
int
push
(bad)
out
movs
ja
scas
outs
jns
xor
mov
fadd
dec
and
push
test
mov
xor
es
jne
adc
push
rcl
popf
ficomp
in
pop
xchg
pandn
pop
adc
jns
xchg
and
jl
mov
xor
push
out
repnz
xchg
adc
push
es
or
in
(bad)
and
push
push
xor
(bad)
dec
leave
xor
stc
jmp
lods
pop
sub
adc
dec
mov
sbb
mov
inc
(bad)
test
cmp
cmps
jg
fisub
sub
mov
bound
xchg
aad
test
out
outs
jmp
cmps
pop
mov
lea
outs
in
hlt
lahf
dec
iret
inc
div
movs
sub
les
pop
sub
in
mov
out
pop
pop
xchg
mov
fldenv
adc
mov
fsub
or
into
icebp
movhps
sbb
dec
fwait
add
idiv
fucom
cld
jmp
jl
push
jmp
cmp
fwait
enter
imul
mov
jo
cmp
inc
inc
jo
in
loopne
push
sti
idiv
scas
leave
loope
outs
push
loopne
popa
adc
push
test
fild
mov
adc
cmc
lods
loopne
popa
mov
aaa
dec
ss
mov
dec
sub
mov
cld
lea
xchg
inc
aas
in
jl
pop
mov
mov
stc
loope
xlat
cmp
dec
(bad)
int
icebp
sub
mov
cmp
adc
arpl
jmp
dec
sti
add
call
test
(bad)
mov
add
pop
inc
or
bound
popa
les
in
neg
std
inc
ror
and
pop
test
mov
pop
dec
xor
jnp
pushf
pop
mov
into
aaa
test
add
int
push
dec
jmp
lods
push
dec
cmp
sahf
push
cmps
shl
jo
sub
add
je
aas
adc
movs
jae
repnz
loop
imul
je
in
mov
jnp
fs
mov
jmp
pop
inc
fs
loopne
repnz
shl
jns
lea
pop
xchg
cs
jmp
fucomip
ins
pop
pop
jne
cmps
imul
jmp
dec
or
inc
and
adc
pop
or
mov
repnz
jnp
in
mov
xchg
adc
(bad)
sub
hlt
ja
xor
ficom
ins
je
or
repnz
pop
push
dec
adc
pop
push
jmp
push
mov
sbb
and
cld
xchg
cwde
jno
push
fidiv
jbe
ret
cmp
xlat
in
cmp
xchg
jbe
retf
dec
aam
daa
jbe
adc
mov
je
mov
xchg
or
pop
mov
(bad)
mov
or
pop
lods
in
shr
push
ins
shl
mov
add
mov
shr
xchg
out
dec
adc
addr16
scas
jno
jo
lods
jmp
adc
sub
addr16
sub
or
pop
and
fcmovb
cdq
push
mov
jae
rol
retf
mov
push
xchg
xchg
sub
in
jmp
rcl
xor
push
loope
jno
arpl
mov
dec
scas
and
outs
pop
jecxz
lds
in
pushf
iret
das
pop
and
ror
xchg
jecxz
sub
nop
push
jbe
iret
jecxz
sub
dec
pop
jo
xor
inc
dec
scas
(bad)
aad
push
nop
lods
imul
test
mov
sbb
out
push
dec
pop
push
das
mov
std
int
xchg
sbb
fmul
or
aad
mov
pop
out
fidivr
dec
mov
cld
fld
sub
sbb
dec
outs
frstor
pop
xchg
dec
rep
iret
retf
push
ins
and
mov
push
dec
enter
loop
add
xchg
lea
sahf
pop
dec
fist
sbb
mov
or
mov
bound
jge
push
loope
mov
shl
or
fld
or
ds
nop
dec
xor
mov
cmp
dec
mov
xchg
and
lods
xchg
call
clc
xor
adc
pop
shl
outs
push
pop
fdivp
add
jo
jp
mov
xor
into
pop
aaa
pop
cmp
jge
and
lods
hlt
and
je
(bad)
pop
retf
push
jmp
push
hlt
mov
std
movs
xchg
fadd
xlat
(bad)
std
imul
enter
sub
push
or
mov
pop
mov
push
xchg
push
aas
imul
cmp
out
mov
push
jg
popa
xchg
jmp
(bad)
jns
cs
sub
shr
sar
xor
and
aaa
fnstenv
mov
jp
pusha
dec
inc
push
add
imul
pop
cdq
call
nop
out
movs
mov
push
sahf
stos
jo
bound
pop
push
ret
xchg
ins
push
pusha
sub
je
inc
xor
add
jecxz
xor
sub
or
jbe
es
push
js
test
mov
retf
ss
and
jmp
test
movs
out
push
cmp
jp
sbb
sti
xchg
xor
clc
fst
pop
xchg
pop
sbb
jl
leave
gs
mov
lds
mov
es
stc
adc
xchg
outs
adc
xor
cld
and
sar
and
enter
call
cdq
aad
jae
add
inc
gs
mov
cmp
xor
and
fwait
sub
adc
or
repz
inc
sahf
inc
ficom
add
jne
or
ja
xchg
es
imul
sar
mov
or
ror
cmp
shr
adc
jnp
frstor
push
push
mov
iret
out
hlt
mov
xchg
push
dec
push
and
cmp
loopne
mov
cmp
sbb
adc
jmp
fild
xchg
inc
lods
out
sub
out
in
adc
(bad)
xchg
out
cmps
xchg
adc
lods
mov
cmp
add
sar
daa
lock
loopne
sar
loopne
add
aam
inc
ret
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
int
xchg
adc
fnstcw
mov
sub
fiadd
fwait
lods
nop
jns
les
ins
cmps
in
cdq
out
cmp
idiv
pop
add
fsubr
hlt
and
cmps
clc
call
repnz
(bad)
dec
(bad)
pop
and
xchg
arpl
out
or
adc
jmp
nop
push
mov
clc
xchg
aad
fldenv
mov
and
cmp
call
mov
mov
pop
mov
push
and
clc
mov
add
popf
adc
inc
cmp
mov
(bad)
push
test
sbb
ror
sub
push
rcr
(bad)
jnp
sub
repnz
jno
std
scas
movs
cld
das
popf
jbe
inc
fs
test
push
data16
xor
call
push
xchg
dec
pop
ins
ficom
stos
sub
adc
cmp
fwait
xor
xor
dec
call
call
mov
mov
outs
mov
nop
inc
fld
nop
mov
push
sbb
das
imul
or
std
out
push
call
test
push
stc
out
jmp
xor
cmp
push
add
add
das
inc
fisubr
push
cli
xchg
cli
and
push
pop
push
inc
inc
test
and
or
test
aad
pop
test
mov
(bad)
bound
jns
inc
xchg
adc
loope
loop
xchg
add
push
pop
test
outs
fbstp
or
mov
and
fidivr
sub
push
dec
pop
push
xor
fisubr
adc
sub
xor
dec
aas
mov
push
push
imul
adc
inc
js
shl
xchg
stos
div
scas
ficom
xchg
mov
sub
add
mov
pop
scas
sub
fnstsw
jmp
js
adc
lock
jb
hlt
and
adc
std
pop
jno
cs
sub
sti
sahf
inc
repz
jle
sar
inc
ror
cmp
sub
dec
cmp
sub
jle
push
or
imul
cmp
pushf
sti
jbe
jle
and
sub
push
pop
pusha
int3
fnstenv
(bad)
(bad)
cmp
sbb
test
push
push
or
mov
sbb
test
movs
mov
mov
out
mov
jb
push
sbb
or
mov
add
or
fld
xchg
adc
dec
sbb
jbe
mov
test
pop
iret
lods
inc
leave
dec
dec
mov
pop
sub
icebp
aaa
pop
mov
gs
inc
jg
dec
call
cli
push
mul
jmp
pop
pop
pusha
ror
jp
mov
mov
and
stc
cmc
sub
out
mov
cmp
mov
(bad)
retf
data16
xchg
cmp
retf
jno
inc
dec
aam
or
jbe
cs
add
xchg
retf
add
fwait
adc
sub
fild
movs
imul
xchg
mov
sub
xor
lock
jecxz
scas
mov
cmp
cwde
cmc
ret
pop
jge
mov
sub
sar
cmp
inc
sub
jmp
test
lahf
stc
sub
aaa
aad
adc
and
add
std
pop
movs
dec
jno
data16
sbb
jo
inc
push
cmp
jmp
in
scas
pop
cmc
aam
ja
repz
push
xchg
ja
pop
sub
scas
add
mov
je
add
outs
cmp
push
cmp
movs
clc
dec
xor
enter
jp
nop
cwde
pop
outs
cmp
bound
mov
and
aad
daa
xchg
fsub
add
out
xchg
mov
mov
in
(bad)
inc
clc
mov
jb
xchg
nop
in
push
mov
pusha
enter
mov
push
test
ins
adc
outs
leave
mov
in
(bad)
adc
(bad)
sub
jne
add
or
or
out
(bad)
sbb
div
(bad)
out
jns
jmp
daa
mov
retf
es
out
cmp
cmps
shr
ret
fidivr
in
adc
(bad)
pop
mov
mul
sahf
inc
jg
outs
or
fdiv
push
and
mov
fst
add
xchg
lahf
mov
repnz
fist
jbe
popa
sar
sbb
mul
or
jecxz
dec
inc
aad
pop
ret
inc
pop
call
ucomiss
mov
loope
out
push
ins
mov
and
popa
xchg
push
xchg
pop
jmp
pop
inc
fmul
gs
bound
fistp
jmp
lds
xchg
inc
xlat
jecxz
std
loope
fimul
pop
sti
inc
sub
add
not
inc
mov
xlat
loop
js
cmp
neg
fdivr
lea
fild
dec
nop
in
sti
xchg
mov
xchg
aam
ins
dec
cmps
sbb
inc
or
sbb
adc
xchg
das
add
scas
sub
stos
push
outs
inc
(bad)
retf
and
ret
into
or
xchg
pop
rcl
adc
cmp
repnz
cwde
push
daa
mov
dec
pop
stos
fs
jnp
loopne
fcomp
leave
push
rol
and
arpl
push
pop
lds
jno
and
addr16
jle
fdiv
mov
lods
push
nop
inc
cmps
sahf
sbb
sbb
sbb
ds
mov
xor
jmp
ja
sbb
outs
mov
mov
mov
mov
inc
push
mov
add
jle
fiadd
cmc
push
cs
adc
test
and
cs
fcomp
pushf
mov
es
mov
push
in
in
xchg
push
das
xchg
fisub
adc
cmp
fsub
dec
icebp
mov
or
sub
inc
test
or
inc
ss
cwde
mov
pop
fbld
dec
mov
(bad)
mov
loope
jp
add
and
mov
add
popf
and
call
mov
fwait
popf
enter
push
arpl
setbe
jae
jmp
addr16
mov
(bad)
cdq
mov
jg
mov
or
icebp
fucom
pop
mov
inc
fcomi
xor
jge
mov
fwait
imul
sbb
mov
mov
inc
scas
mov
loopne
cli
movs
xor
jle
pop
call
ret
mov
cmc
test
repnz
jbe
aad
inc
(bad)
jle
pop
and
gs
mov
push
rcl
mov
sti
xor
xor
and
xor
pop
xchg
iret
xchg
fs
jne
jmp
out
in
(bad)
push
inc
jmp
and
fistp
mov
xor
dec
jae
mov
sar
in
pop
xor
es
call
lods
inc
dec
into
popa
push
popf
in
sbb
ja
mov
inc
aam
das
fnstsw
js
aam
fld
cmp
mov
int3
and
rdmsr
mov
jl
(bad)
dec
sti
in
push
xchg
call
dec
(bad)
cmp
adc
aam
mov
sahf
mov
fcomp
add
popa
xor
pop
sbb
jp
add
or
push
cld
dec
ret
stos
jnp
mov
out
call
mov
xchg
mov
mov
sub
cmp
push
push
push
sub
leave
dec
lock
inc
call
sbb
dec
jg
pop
iret
nop
adc
jge
cmp
jg
(bad)
dec
int
nop
lahf
adc
mov
mov
adc
and
xor
fiadd
inc
mov
adc
pop
sbb
inc
fwait
xchg
cmp
out
cmp
adc
stc
push
rol
pop
jmp
mov
rol
and
cli
sbb
push
add
pop
pop
pop
cwde
test
cmc
mov
push
cmps
cmps
dec
icebp
ss
or
iret
aad
xor
mov
xor
sub
mov
add
push
push
cmps
or
pop
push
out
jmp
xor
mov
ss
push
fs
js
mov
fwait
sub
pop
xor
out
retf
int
pusha
cmp
imul
test
arpl
mov
test
in
pop
jmp
or
aas
adc
xchg
in
inc
ja
scas
pusha
or
addr16
fwait
lods
fnstsw
mov
jp
int3
dec
sub
cmp
shr
bound
mov
out
daa
jp
arpl
in
sbb
(bad)
out
mov
mov
jge
int3
int
jae
pop
add
pop
pop
mov
aaa
add
xchg
pop
retf
popa
lahf
lods
imul
icebp
cmp
jb
inc
pop
cmc
mov
add
dec
clc
push
daa
push
push
lods
xchg
inc
out
cmc
fld
stc
sbb
leave
cli
outs
adc
jnp
call
sub
pop
cld
inc
dec
mov
xor
lock
push
out
jl
xor
loope
ins
lods
sbb
ds
jle
cmps
in
sub
pop
cwde
mov
mov
popf
add
fcom
and
dec
cs
ins
push
popf
xor
mov
aam
or
mov
loop
sbb
(bad)
dec
test
mov
dec
sub
xchg
icebp
int
lea
jno
inc
pop
push
sub
add
lea
mov
xor
jb
jl
inc
call
pusha
pusha
add
sbb
aaa
lahf
jmp
push
adc
mov
jbe
mov
das
adc
jbe
mov
pop
xchg
xlat
cmp
cdq
pop
pushf
dec
inc
inc
adc
adc
out
nop
das
out
cdq
aaa
pushf
out
fldl2e
test
mov
push
mov
pop
sbb
pop
sbb
dec
aas
icebp
sub
addr16
add
iret
push
or
mov
xor
sar
dec
cmps
cmp
dec
cmp
mov
loope
cmps
mul
rcl
stos
cmp
aas
pop
or
xlat
aad
(bad)
iret
ucomiss
and
lock
repnz
shl
push
in
int3
int3
adc
movaps
fstp
ins
in
cli
dec
jae
adc
adc
test
call
and
pop
push
xor
es
(bad)
cld
sbb
in
xchg
push
test
inc
in
les
and
daa
mov
pusha
(bad)
cmps
fwait
cmps
push
ret
loop
xor
cmp
pop
dec
push
inc
mov
scas
push
scas
pop
sti
imul
je
aas
mov
mov
adc
je
mov
jp
out
xchg
sbb
(bad)
fstp
(bad)
adc
loop
ins
ror
dec
cmps
sub
mov
ja
push
int3
inc
les
jmp
cs
jge
call
fcom
sbb
iret
mov
or
pop
test
idiv
jle
in
popf
pushf
imul
ror
ja
mov
adc
aaa
loopne
cli
int
mov
sbb
xor
(bad)
jno
push
mov
pop
dec
(bad)
sbb
adc
aas
xchg
sti
pop
out
les
je
inc
xor
ins
sbb
and
add
stc
aaa
lock
loopne
sar
sar
in
xor
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
jmp
jmp
scas
ror
leave
mov
call
or
jp
into
xor
mov
idiv
dec
fistp
cld
adc
aas
cmp
add
and
mov
mov
daa
inc
jnp
gs
stc
daa
stos
mul
loope
mov
or
call
test
mov
dec
xchg
jae
ins
and
push
xlat
adc
mov
pop
jns
pop
or
in
jecxz
out
sub
adc
ror
jmp
fistp
test
sbb
pop
mov
repnz
or
add
out
stos
mov
icebp
push
int3
inc
mov
vmaxps
loopne
retf
adc
dec
js
adc
jmp
xor
xchg
retf
sbb
aaa
pop
and
cld
cmp
mov
adc
ror
jle
sbb
in
push
xor
pop
test
mov
fs
dec
(bad)
mov
dec
adc
call
lds
mov
outs
mov
call
movs
lahf
int
jmp
fsub
adc
jg
pop
aad
std
jae
lock
xor
fs
(bad)
cld
inc
nop
jg
cmp
push
mov
bound
jp
ins
jmp
mov
push
jg
aad
popa
je
inc
retf
cmps
lock
arpl
cld
push
jle
dec
adc
rcl
dec
xor
out
lods
dec
sbb
aam
mov
xor
jnp
cmp
jno
jmp
mov
inc
shl
dec
xchg
popa
jg
inc
adc
jnp
dec
cmp
mov
push
xor
xor
cwde
and
xchg
lea
push
rcr
dec
inc
xor
jns
inc
lds
or
loop
adc
out
add
outs
jg
and
jecxz
and
sub
lahf
or
mov
inc
pushf
mov
es
mov
lods
loope
int3
jno
shr
arpl
and
aad
bndstx
mov
jmp
sub
inc
outs
jp
or
pop
mov
clc
pop
out
cmp
nop
add
out
test
test
mul
jb
shl
and
pushf
into
movs
sub
into
cmp
xor
retf
inc
test
mov
aaa
sub
movs
out
aam
dec
and
add
fisubr
push
xchg
ds
inc
pop
scas
enter
(bad)
push
cmp
movs
dec
ror
inc
sub
mul
push
jne
adc
adc
adc
mov
push
fidiv
fnsetpm(287
mov
inc
fsubr
dec
in
dec
ficom
pop
in
inc
pop
retf
call
loopne
jnp
out
xchg
adc
xor
and
scas
jp
sub
mov
adc
pop
scas
mov
xchg
pop
in
mov
pop
mov
mov
mov
retf
(bad)
out
loop
push
dec
cld
arpl
(bad)
mov
xor
ds
add
adc
cmp
pop
outs
and
adc
cmps
cmc
or
arpl
mov
push
xchg
ins
gs
jae
xor
out
or
or
mov
cld
and
adc
and
nop
in
xchg
push
sub
repz
dec
loop
aam
push
into
gs
mov
lahf
(bad)
in
push
sti
mov
mov
clc
pushf
int
out
movs
cli
xor
(bad)
mov
push
fadd
sbb
dec
xchg
jns
imul
sub
into
scas
mov
mov
std
mov
xor
cmp
pop
sahf
xor
shl
leave
inc
xlat
xchg
out
mov
mov
and
ins
shl
and
imul
shl
inc
fsubr
cmp
cmps
dec
mov
inc
cdq
mov
fs
pop
cmps
neg
ins
outs
mov
mov
imul
ret
jl
ror
lods
out
lds
int
jle
jmp
inc
(bad)
nop
xchg
sahf
jg
rcr
sahf
outs
out
dec
into
mov
xchg
mov
push
mov
and
dec
imul
int
xchg
pop
inc
mov
push
jmp
cmp
shr
mov
lahf
data16
jmp
and
loopne
out
push
inc
scas
mov
mov
dec
and
or
xchg
es
jg
mov
pop
dec
sub
push
jb
mov
xor
push
sbb
push
rcr
fidivr
lahf
lea
cmc
popa
adc
ins
adc
out
dec
repz
mov
popw
sub
cmp
dec
pop
repnz
sub
ja
sbb
fwait
movs
mov
or
xchg
adc
lods
push
imul
cld
inc
mov
mov
mov
pop
push
pop
adc
ficom
(bad)
cli
popa
(bad)
int3
pop
sub
(bad)
cmp
sub
adc
inc
arpl
cmps
mov
dec
out
call
shr
mov
sub
test
fucomip
inc
push
dec
adc
mov
into
in
retf
lods
cmp
daa
jecxz
retf
mov
std
fwait
loopne
xchg
or
rol
xchg
push
fiadd
xchg
push
and
fld
ins
lods
sub
call
pusha
xchg
imul
hlt
xlat
lea
mov
imul
je
cmps
pop
iret
(bad)
in
inc
dec
ins
pop
nop
or
clc
mov
cdq
mov
stc
ss
sar
in
mov
jecxz
arpl
cwde
icebp
dec
mov
jmp
cdq
mov
mov
dec
xchg
mov
inc
into
lea
arpl
out
jmp
retf
mov
shr
cmp
sub
sub
mov
push
push
hlt
pop
out
(bad)
repnz
mov
(bad)
pop
outs
shl
not
cmp
das
imul
mov
ficomp
pop
repnz
push
push
pop
sbb
dec
push
ss
cmp
mov
fnstenv
push
cmp
ficom
or
pop
call
std
jns
cmp
adc
adc
aad
push
sti
sub
outs
cdq
xor
or
sbb
mov
and
xchg
stos
inc
fs
sbb
dec
outs
retf
out
xor
push
or
mov
(bad)
xchg
add
cmp
cmp
adc
pop
fisubr
add
xchg
fs
xchg
enter
sbb
jne
jmp
or
push
pop
rcl
in
out
pop
xchg
loopne
(bad)
out
cli
or
cmp
mov
aaa
push
in
scas
lods
mov
jmp
adc
mov
cmps
lahf
retf
mov
lods
cwde
cmp
jmp
and
aaa
sub
ficomp
jmp
dec
jl
call
jno
fadd
ja
inc
outs
pop
in
add
clc
(bad)
rol
jo
xrelease
je
xor
pop
xlat
mov
leave
sbb
mov
popa
push
and
js
mov
cmp
inc
lahf
xor
jmp
push
icebp
daa
inc
les
xchg
(bad)
cmc
push
lods
cmp
push
sbb
test
mov
adc
int3
pop
fidivr
aam
call
pushf
enter
into
xor
jecxz
inc
shl
loop
jns
push
and
es
adc
mov
pop
pop
sbb
adc
xor
fistp
lea
pushf
or
inc
pop
test
dec
mov
add
pop
inc
sub
stos
xchg
int
into
lahf
lahf
xor
loopne
(bad)
mov
iret
mov
or
addr16
mov
outs
inc
push
xchg
retf
xor
aam
jb
frstor
dec
jo
sub
aas
aaa
push
pushf
mov
add
mov
das
or
rol
pop
repz
xor
(bad)
jp
lea
(bad)
adc
cmc
sbb
adc
lea
push
jp
lds
into
popa
push
jne
int3
sbb
das
cmp
rcr
push
ficom
cld
add
cmc
sbb
outs
xchg
sub
mov
push
pop
push
les
arpl
(bad)
mov
clc
mov
std
mov
adc
call
sbb
inc
call
into
dec
jge
jae
jb
int
jl
inc
js
adc
scas
into
(bad)
loopne
xchg
mov
imul
mov
jecxz
test
leave
xor
pusha
adc
inc
loopne
lea
adc
sbb
(bad)
push
mov
(bad)
sahf
xor
pop
or
test
inc
mov
pop
inc
push
rol
mov
mov
(bad)
lds
sbb
push
jp
daa
retf
jno
sub
jne
into
ds
iret
pop
sub
and
into
adc
jmp
call
cmps
arpl
mov
iret
fidivr
fild
ret
jg
call
xchg
movs
mov
cmp
add
pushf
sbb
aam
mov
popf
mov
adc
test
mov
sbb
add
aam
aam
aad
jne
scas
(bad)
mov
xor
mov
ja
xchg
push
ins
jo
not
retf
pop
ss
cmp
retf
nop
push
push
aaa
cmp
jae
jecxz
fwait
mov
enter
push
sbb
fstp
or
mov
cdq
ss
push
lock
sub
push
je
lea
pop
add
adc
mov
cmps
in
shufps
fcomp
ret
mov
sub
(bad)
and
dec
icebp
mov
mov
into
or
imul
pop
test
and
lods
imul
push
jne
xchg
cmp
jmp
mov
pop
mov
push
lea
(bad)
lahf
(bad)
repnz
mov
mov
jp
pop
loopne
(bad)
ror
movs
lods
cdq
(bad)
(bad)
imul
sub
data16
dec
push
jne
pop
mov
pop
movs
push
sbb
test
into
outs
pusha
pop
std
cmp
in
cmp
cmps
dec
rcl
pop
pop
sub
test
push
jg
or
inc
sbb
pop
and
sbb
pop
pop
aad
(bad)
xor
mov
daa
push
adc
xchg
cli
aam
sbb
aad
out
es
inc
scas
pop
push
cmp
adc
push
repnz
jnp
mov
push
push
cdq
cmp
or
push
outs
push
add
xchg
adc
xor
adc
pop
or
(bad)
pop
or
test
cdq
or
test
xchg
sub
test
xor
fisub
push
cld
sbb
popa
addr16
mov
add
cdq
mov
(bad)
sub
mov
jmp
ins
ins
dec
mov
adc
mov
ret
pop
inc
sbb
(bad)
jl
jns
pop
xor
shr
xchg
inc
dec
retf
dec
fistp
bound
stc
or
pusha
ja
mov
arpl
fsubr
adc
call
jecxz
gs
add
outs
and
dec
push
pop
not
mov
xor
inc
cmp
jp
mov
fwait
ss
gs
mov
jae
adc
mov
addps
iret
xchg
cld
cmc
xor
jae
sub
out
sar
push
jne
pop
daa
jmp
mov
xor
pusha
xor
xlat
aas
cmp
cld
adc
jg
cld
movlps
push
shl
jle
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
and
ror
retf
movs
daa
xor
fnstcw
popf
jns
xchg
jno
mov
fnstenv
sahf
xchg
pop
into
mov
in
in
out
pop
icebp
cld
(bad)
dec
js
add
outs
dec
loop
mov
inc
inc
jle
cmp
shl
out
dec
xor
xchg
xor
out
sub
ret
je
loopne
cdq
xchg
movs
and
sbb
bound
mov
xor
mov
mov
xor
push
pop
push
leave
imul
jmp
retf
fldenv
addr16
enter
call
or
mov
or
les
ret
xor
sub
mov
sub
mov
xor
jno
enter
outs
jne
retf
mov
call
cmps
mov
int3
pop
cmp
jno
mov
pop
xor
sti
in
fimul
loope
pop
imul
test
(bad)
mov
popf
add
and
pop
cmp
repnz
mov
sti
jo
dec
add
mov
in
jp
(bad)
dec
mov
xor
test
stos
and
out
and
pop
xchg
cmps
cdq
int
mov
add
adc
and
sbb
jns
cmp
(bad)
div
in
jle
push
push
(bad)
and
cdq
out
ds
adc
cmps
mov
das
pop
ror
inc
lods
jg
ins
(bad)
int3
scas
mov
push
xor
and
jle
dec
shl
arpl
sar
daa
cmp
push
push
cmp
hlt
jne
jb
test
jne
mov
cmp
retf
jmp
cld
push
adc
xor
aad
fwait
mov
push
mov
daa
dec
mov
push
inc
push
call
inc
mov
test
ins
mov
movs
fwait
cmp
in
loope
mov
jmp
sar
test
gs
sbb
mov
cmp
out
mov
ins
(bad)
xchg
jge
retfw
pop
sub
lods
addr16
ret
xor
test
pop
(bad)
in
push
dec
lds
xor
cwde
ins
and
inc
sub
cmp
mov
imul
ins
loopne
push
adc
aad
mov
fcomp
out
gs
arpl
test
mov
jnp
clc
cmp
cmp
pop
in
test
fimul
popf
addr16
inc
cli
lahf
pusha
dec
jle
(bad)
adc
stos
mov
inc
sbb
out
sbb
sbb
(bad)
je
stos
push
lock
mov
shr
js
bound
lods
sbb
mov
push
jge
sub
sub
retf
jae
fld
into
lea
leave
lds
dec
xor
xor
push
cmp
or
call
bound
xchg
ja
out
jno
pop
dec
sub
out
mov
pop
cmp
lds
mov
pop
cld
push
mov
sub
mov
mov
xchg
inc
ds
stos
jb
retf
pop
add
aam
push
jbe
in
out
test
vcvtsi2ss
fs
div
out
xchg
xor
pop
int
sbb
inc
(bad)
adc
xor
stos
push
mov
add
cmps
in
xchg
sbb
mov
xchg
cmps
cs
scas
cmps
pop
jno
cwde
loop
pop
xlat
jl
mov
iret
xchg
and
fdivr
adc
sub
pop
mov
out
iret
xchg
mov
fdivr
call
jmp
mov
std
in
push
lahf
or
test
test
(bad)
or
mov
jno
dec
cmp
jns
cs
cmc
sbb
jae
addr16
jbe
mov
pop
mov
dec
jmp
sbb
inc
jns
dec
cmp
out
in
das
xchg
fwait
je
inc
jg
aad
push
mov
test
mov
add
inc
les
aas
sub
add
sub
cli
fidiv
sbb
addr16
pop
rcr
sbb
push
inc
pop
dec
xchg
pop
shr
pop
sub
jge
cmc
xchg
addr16
adc
jae
retf
mov
jle
ja
mov
jbe
and
es
dec
nop
pop
test
sub
lahf
cwde
pop
or
pop
and
lea
fild
xor
mov
mov
and
jmp
mov
and
or
pushf
imul
cmps
lahf
adc
stc
test
dec
mov
call
mov
mov
iret
cmps
mov
or
push
jmp
dec
nop
loopne
xor
add
bound
mov
aam
adc
mov
add
cmc
xchg
xlat
dec
or
clc
mov
pop
test
jmp
fimul
aam
or
dec
sbb
fwait
jne
test
cmps
push
fsub
mov
icebp
sar
mov
outs
ja
xchg
(bad)
out
imul
mov
jno
outs
loope
sub
mov
mov
and
popf
cmps
ins
push
or
cmps
xor
lock
xchg
adc
sti
push
jmp
xor
pop
pushf
and
mov
aas
mov
push
pushf
pop
stc
fwait
div
shl
xor
mov
jmp
dec
rep
xor
out
retf
xchg
pop
test
in
push
pop
push
dec
fwait
shl
mov
leave
mov
je
jge
arpl
mov
fisubr
cmc
iret
inc
jecxz
ss
out
stos
(bad)
mov
sahf
int
sub
add
dec
(bad)
gs
jmp
pop
adc
adc
push
sbb
dec
imul
push
cmps
xchg
inc
jne
sub
push
dec
(bad)
jmp
aas
sbb
(bad)
jg
repz
and
leave
add
dec
mov
(bad)
(bad)
test
cmp
loop
pop
push
(bad)
leave
(bad)
lods
test
sub
sub
test
sar
jne
inc
cmc
shr
clc
ins
aam
add
mov
in
mov
hlt
mov
mov
or
in
xchg
retf
ja
(bad)
xor
dec
jo
and
pop
aaa
hlt
ror
push
sti
inc
sub
div
ins
add
stc
jo
dec
(bad)
icebp
sti
test
push
pop
or
(bad)
jmp
in
mov
mov
jae
push
imul
scas
jmp
imul
push
xor
(bad)
pushf
xchg
outs
xchg
loop
rcr
mov
mov
cmp
cmps
out
jbe
pop
and
imul
sbb
ret
push
hlt
cmp
or
icebp
(bad)
clc
in
dec
xchg
mov
pop
jnp
movs
ret
mov
sub
inc
outs
test
jne
ins
jle
pop
jmp
popf
je
cmps
test
mov
cmps
shl
and
sub
xlat
aam
popa
xor
push
dec
fst
fwait
push
sbb
call
outs
pop
int3
xor
mov
push
xchg
ficom
sbb
(bad)
xor
xchg
idiv
cmp
test
aam
dec
fcmovbe
mov
dec
xchg
ret
retf
cdq
add
dec
jb
jge
jmp
fs
jmp
out
pop
xchg
lahf
adc
add
xor
ficom
aaa
push
mov
xchg
call
jne
add
cdq
movs
bound
cmp
mov
shl
fnsave
sti
fdivr
adc
pop
pop
repnz
sbb
xchg
pop
pop
xor
ins
mov
mov
jge
mov
call
push
inc
std
clc
scas
std
xchg
lods
jae
shl
or
xchg
mov
repnz
loopne
inc
xchg
pop
sub
sti
mov
std
jb
jle
jmp
dec
sbb
sbb
ret
dec
clc
(bad)
mov
shr
xchg
mov
xchg
mov
or
in
jns
shl
xor
xor
jmp
xlat
pop
call
sahf
xlat
in
jecxz
out
mov
push
sar
xor
or
or
enter
in
cld
arpl
mov
retf
cli
icebp
jns
mov
cmps
dec
ror
test
and
push
aam
jge
xor
stc
jo
mov
sub
fstp
add
push
fsubr
mov
mov
pop
das
pushf
cmp
mov
ins
out
fdiv
push
test
adc
fs
mov
add
fdivr
jae
out
sbb
rcl
inc
inc
mov
dec
arpl
lahf
sub
adc
in
ds
retf
cmp
or
push
cmp
xchg
mov
fstp
aam
dec
jmp
cmp
xlat
jmp
ret
cwde
dec
or
cwde
(bad)
imul
sahf
dec
outs
adc
arpl
retf
mov
dec
adc
push
cmp
fwait
and
retf
inc
repnz
xchg
stos
mov
idiv
jns
sub
pop
sbb
xchg
inc
dec
inc
sbb
and
mov
cmp
(bad)
ins
out
sub
push
cmps
ret
enter
mov
add
mov
pusha
jle
scas
loopne
xchg
stos
(bad)
out
mov
lock
outs
pushf
ds
shr
cs
out
sub
neg
mov
mov
fcom
cs
inc
inc
cmp
inc
adc
jmp
cdq
je
mov
jl
scas
outs
leave
xchg
fcom
mov
out
call
and
sub
jmp
inc
mov
ret
adc
cmp
outs
(bad)
rcl
mov
mov
jno
jmp
and
test
xchg
(bad)
jp
leave
mov
or
fstp
xchg
in
stos
ja
popf
enter
dec
iret
push
ror
and
adc
mov
test
add
xor
neg
fld
mov
stc
dec
(bad)
cmp
xchg
stos
sub
pushf
fwait
mov
sub
and
aas
enter
pusha
sar
xchg
and
mov
test
sub
jl
test
dec
loop
mov
jg
hlt
fisubr
popf
add
loope
xchg
pop
sbb
cmps
sti
jb
dec
test
xchg
stos
cmp
xchg
or
ja
mov
call
lahf
(bad)
std
retf
and
sub
aas
dec
stos
fdiv
aas
ficom
pop
aam
push
out
fimul
imul
retf
push
std
pop
adc
mov
dec
cmp
fcomp
dec
mov
jne
sar
in
cmp
aas
xchg
xor
add
xor
or
pusha
stos
mov
sub
icebp
sbb
mov
daa
pop
iret
pop
or
mov
inc
aam
inc
lock
jns
ret
xchg
cs
fidivr
inc
jg
lock
add
adc
or
xchg
fnsave
je
sbb
xor
cmp
mov
cdq
fs
jbe
add
arpl
fmul
(bad)
cwde
push
and
pop
push
push
lea
xor
jnp
xor
add
xchg
shl
(bad)
ds
in
aam
mov
jmp
fs
rol
push
dec
jle
jp
dec
jp
inc
cwde
dec
test
hlt
mov
mov
jb
adc
dec
jmp
mov
out
stc
push
aas
inc
dec
lock
loopne
cmp
aas
add
inc
fnstcw
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
in
mov
fs
clc
fldenv
pop
fs
sbb
mov
push
idiv
pushf
inc
(bad)
pop
popf
rcr
gs
mov
enter
enter
mov
in
repz
add
sbb
add
pop
je
popa
mov
in
push
icebp
dec
test
iret
push
mov
das
cdq
xchg
imul
sar
ins
hlt
jge
jno
aad
mov
scas
push
cmp
in
jp
mov
cmps
xor
imul
xor
adc
xchg
adc
outs
xchg
arpl
and
in
inc
das
(bad)
and
enter
jae
sahf
outs
pop
test
mov
or
lods
sub
icebp
xchg
mov
xchg
mov
dec
repz
shr
mov
dec
mov
mov
in
mov
in
fs
sub
nop
pop
sub
fs
push
mov
xchg
jb
aad
or
mov
das
jl
ret
jns
dec
dec
test
stos
jno
or
or
jno
arpl
pop
pop
repnz
mov
fmulp
fprem
mov
rcl
dec
sbb
jge
xlat
ss
nop
retf
mov
inc
pop
xchg
sub
push
out
xor
sti
imul
retf
sub
fcomi
aad
pop
sub
mov
outs
inc
sub
movs
movs
jmp
outs
das
fs
xlat
pop
or
cmp
adc
int3
loope
test
mov
out
jl
mov
sub
in
mov
pop
or
and
push
cmp
test
lea
out
imul
push
shl
ror
jmp
leave
daa
stos
(bad)
mov
fbstp
jb
mov
gs
sbb
add
fsubr
jl
out
or
xor
sbb
sbb
jl
idiv
test
mov
jbe
pop
mov
in
adc
fldenv
and
retf
adc
mov
pop
push
ds
mov
int3
cdq
xchg
cmp
add
pop
push
adc
push
aaa
movs
lea
inc
aas
mov
xor
push
or
jbe
jmp
repz
mov
cmp
(bad)
pop
arpl
das
retf
xor
outs
fsubr
rcr
mov
xchg
cli
or
cmp
pop
sbb
in
int
jae
mov
inc
enter
loope
call
xchg
fsub
dec
add
mov
push
sbb
dec
jmp
aas
je
fmulp
pop
rcl
mov
idiv
(bad)
xchg
inc
lds
sub
mov
xchg
push
fmul
cmp
or
sti
add
in
mov
fidiv
outs
push
aaa
mov
add
retf
loope
seto
mov
sbb
faddp
sub
mov
mov
jmp
js
outs
fucompp
xor
scas
mov
ja
idiv
ret
retf
enter
pop
scas
or
out
pusha
add
cmp
pop
in
call
(bad)
cli
pop
sbb
pop
outs
mov
mov
ss
clc
iret
ss
add
mulps
dec
cmps
pop
adc
rol
sub
dec
xchg
and
call
addr16
push
inc
adc
push
and
push
cmc
dec
bnd
das
add
pushf
stos
ins
ror
sbb
in
cmps
(bad)
add
out
sub
mov
nop
scas
loope
out
jns
addr16
mov
fmul
jbe
adc
jmp
ins
(bad)
or
imul
dec
push
repnz
loop
push
aad
inc
daa
pusha
dec
shl
loope
mov
les
gs
push
ja
cld
jns
inc
jbe
mov
iret
cmc
adc
mov
fwait
jb
sub
xchg
xchg
push
push
(bad)
jo
push
xchg
loope
inc
adc
sub
pop
imul
xlat
fsub
repnz
mov
sbb
pop
rcr
push
cmc
xchg
test
jmp
(bad)
pop
sbb
daa
mov
adc
stos
jge
push
sbb
inc
push
inc
jbe
(bad)
stc
(bad)
sub
repnz
cmp
adc
jg
(bad)
mov
lahf
(bad)
mov
sbb
jmp
or
pop
addr16
mov
xchg
sbb
lods
iret
jmp
jae
es
popf
push
pop
cmc
fnstenv
add
fist
push
mov
xor
fstp
fdivr
sahf
aam
push
push
pushf
or
cdq
jne
inc
pushf
add
pop
sar
push
pop
imul
ds
and
mov
push
scas
cmps
mov
and
mov
sbb
out
sub
push
mov
jnp
mov
mov
loopne
outs
inc
mov
push
inc
mov
xchg
outs
mov
push
inc
push
test
test
sbb
cmp
lods
xchg
inc
push
cmp
sar
mov
or
js
pop
cdq
bound
test
je
mul
fcmovbe
neg
je
(bad)
imul
sub
pop
jne
jb
arpl
test
mov
inc
loope
mov
mov
and
scas
sbb
popf
je
push
adc
ja
jo
xchg
stc
push
xchg
and
pop
and
out
es
mov
add
or
gs
mov
mov
lock
stos
gs
imul
movs
(bad)
cli
inc
out
and
jb
pop
cmp
mov
mov
leave
xchg
(bad)
arpl
xor
mov
inc
xor
xor
mov
adc
mov
push
leave
call
and
in
cwde
mov
fisubr
dec
add
and
dec
push
daa
xchg
mov
sbb
dec
mov
or
jae
inc
mov
call
jmp
(bad)
popf
pop
adc
pop
or
data16
xchg
mov
mov
pushf
test
jp
mov
hlt
and
loopne
outs
movs
addr16
cmp
fstp
mov
outs
int
mov
mov
pop
jge
push
mov
push
xchg
aad
jecxz
jae
adc
jmp
pusha
pop
mov
or
cmc
pusha
lods
mov
and
mov
mov
inc
js
adc
(bad)
mov
xor
or
fcom
bound
(bad)
cmps
xchg
rcr
or
xchg
cmps
mov
pop
outs
iret
ds
jmp
push
pop
push
push
(bad)
popf
addr16
sub
jno
stos
pop
(bad)
mov
leave
mov
clc
outs
ret
rol
jo
xchg
sti
xchg
jnp
stos
sti
and
xchg
hlt
jmp
cmp
xlat
pop
out
cwde
in
jae
xor
xchg
sbb
add
loop
jbe
mov
bswap
ret
pop
cmps
xchg
ins
jmp
(bad)
fldenv
sub
into
dec
xor
cli
cmp
xchg
add
ret
fxch
fs
inc
arpl
clc
js
fnstcw
inc
cmps
daa
cld
popf
mov
test
call
int
ret
cmp
out
jmp
ins
cs
mov
adc
adc
lahf
sbb
shl
outs
cli
dec
add
sbb
add
lds
movs
vmovdqu
pop
sbb
lds
movs
mov
xor
je
sub
dec
push
mov
jae
push
hlt
xchg
mov
jno
or
push
mov
inc
inc
sahf
xchg
leave
sub
xchg
cmps
xor
inc
pop
mov
sbb
inc
and
arpl
adc
rcl
ret
dec
pop
jo
popa
mov
cmc
cmp
fst
or
sub
call
adc
hlt
push
mov
cld
call
jl
cmp
dec
or
mov
call
jge
sahf
sti
push
mov
inc
and
daa
scas
div
ja
cmps
imul
data16
(bad)
loopne
sbb
or
add
push
out
movs
xor
aaa
dec
dec
lahf
mov
add
inc
aam
out
mov
adc
fld
dec
cmp
jne
fstp
movs
stc
adc
inc
xchg
(bad)
xchg
outs
jmp
jmp
retf
div
add
int
loope
push
lock
sbb
les
push
dec
int
inc
sar
psrlq
call
xchg
movs
neg
add
lods
jbe
out
mov
xchg
aad
pop
into
dec
cmp
fnstsw
jae
mov
add
pop
ins
mov
pusha
repnz
xor
daa
pop
mov
fist
sub
sbb
in
movs
xchg
pop
sub
sbb
mov
iret
sar
imul
cld
arpl
inc
inc
sub
cmp
and
lods
fidivr
sbb
xor
cmc
mov
imul
jmp
ds
dec
mov
push
sbb
cmp
jns
inc
mov
ins
into
xor
lea
xchg
lock
push
stos
in
lods
out
sbb
in
mov
xchg
add
add
ret
xor
cs
aam
ret
clc
fs
leave
pop
cmp
inc
ror
mov
dec
xchg
aaa
movs
adc
cmps
push
dec
jl
push
and
pop
adc
mov
(bad)
xor
cmp
pop
dec
in
cmp
lods
ret
push
xchg
(bad)
jae
rcr
sbb
mov
inc
mov
cs
mov
inc
inc
jo
adc
in
cmp
sbb
pop
pop
xchg
and
scas
ror
cmp
xchg
jns
sar
int
int3
push
jge
fld
sub
inc
cmps
fisttp
mov
imul
aad
xor
mov
fisub
push
jle
xor
ficomp
mov
pop
adc
cmps
aad
mov
sub
push
xor
mov
dec
fdivr
xchg
sub
dec
inc
adc
rol
sub
sbb
sub
xchg
lds
shl
loop
imul
add
mov
js
sbb
adc
ja
pop
idiv
ret
pop
or
push
pop
mov
sti
popf
adc
sar
mov
jl
mov
push
sti
ins
jge
dec
das
sub
pop
cmp
pop
xor
adc
adc
ret
in
add
hlt
add
iret
repz
lods
in
inc
cmp
bound
cld
adc
fdiv
out
pop
dec
cmp
not
int3
lock
dec
xchg
imul
lahf
ret
push
ret
stc
out
push
add
lea
aas
push
aam
pop
mov
in
cld
rol
adc
xor
xchg
in
stc
sbb
push
ins
xchg
push
call
scas
int
mov
or
push
ja
mov
in
fidivr
leave
mov
daa
outs
adc
pusha
lahf
sbb
pop
in
cmp
adc
lods
cmp
push
mov
repz
mov
jbe
in
and
test
stc
mov
adc
mov
movs
adc
xor
cmps
and
mov
fcom
hlt
push
xor
push
das
pop
or
jp
lock
jl
mov
add
sbb
jecxz
imul
fld
int
rol
xor
mov
ret
out
jbe
scas
xchg
ins
ficomp
xor
aas
out
jp
addr16
pop
cmp
sbb
aaa
lock
loopne
sbb
pop
movs
inc
cmp
retf
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
gs
lods
nop
jge
int3
call
test
je
inc
call
loop
cdq
cdq
gs
dec
jl
pop
(bad)
jno
jbe
inc
mov
sti
aas
fcomp
std
or
(bad)
or
fsubr
pop
test
pop
aas
pop
inc
mov
call
stc
mov
jecxz
cli
jg
iret
mov
pop
jl
ret
fs
sbb
aas
xchg
mov
sbb
jb
loop
dec
jmp
int
pop
leave
fdivrp
aam
dec
cli
in
(bad)
push
adc
add
pop
sbb
mov
(bad)
mov
imul
shl
aam
inc
add
imul
outs
add
(bad)
and
mov
int
push
repnz
pop
inc
call
cli
xchg
data16
mov
bound
pushf
repz
repz
loopne
dec
push
lods
or
cmps
sahf
mov
in
movq
xchg
mov
xchg
push
sub
lods
pop
(bad)
das
out
out
push
jb
mov
in
inc
out
jae
(bad)
or
call
inc
jmp
push
out
mov
inc
div
cdq
mov
retf
mov
out
push
fmulp
sub
pop
cmp
enter
pop
adc
sar
mov
pop
cs
cmp
xor
inc
ja
stos
cmps
cmp
cwde
es
ja
fnstsw
hlt
repnz
dec
lods
pop
mov
and
cmp
sub
sub
pop
ss
movs
cmp
test
movs
add
scas
jecxz
aas
scas
sub
in
adc
push
lea
js
lea
jg
icebp
lahf
sti
aam
sahf
push
mov
and
jbe
test
(bad)
cmp
add
mov
pop
arpl
push
scas
shl
cwde
adc
cdq
nop
dec
cdq
or
outs
inc
data16
adc
outs
xchg
rol
(bad)
fisub
mov
or
loop
cmps
lods
nop
sti
jl
and
xchg
aaa
adc
xchg
dec
inc
shl
dec
and
je
jmp
test
xor
sahf
add
fisubr
sub
frstor
scas
and
adc
imul
lds
ins
xchg
out
cdq
jg
sub
mov
in
(bad)
lds
mov
sbb
scas
mov
add
jb
sub
popa
test
js
pop
sub
push
pop
mov
mov
jnp
fxam
sahf
int3
or
pop
push
jae
movs
sub
mov
scas
and
div
pop
xor
push
outs
xchg
cmp
daa
push
je
push
stos
mov
or
ror
out
xlat
loop
cli
push
push
sbb
add
xchg
outs
(bad)
retf
inc
dec
out
mov
sbb
arpl
cmp
ret
(bad)
outs
push
jmp
add
sub
mov
mul
cmc
push
sbb
inc
sar
mov
sbb
je
pop
cs
xchg
clc
(bad)
out
inc
push
lods
and
mov
mov
jg
fld
mov
sub
cmp
push
inc
in
aas
xchg
lock
rcr
push
imul
(bad)
xor
enter
addr16
xor
sub
jge
mov
int
jl
dec
data16
(bad)
scas
lea
addr16
mov
cmp
or
scas
ins
mov
mov
(bad)
sar
mov
sbb
arpl
mov
jno
test
in
icebp
or
adc
lods
les
in
cmp
repz
push
pop
(bad)
dec
xchg
fnstcw
clc
inc
aam
mov
lods
xchg
in
inc
test
fcomp
jns
clc
cmps
aad
inc
dec
(bad)
hlt
adc
es
cld
or
xchg
ins
std
(bad)
pusha
enter
and
or
jne
shl
xor
mov
mov
xchg
ss
cdq
cmp
push
in
xchg
jns
mov
gs
(bad)
and
iret
jo
fisubr
inc
cmc
mov
sub
ins
inc
add
xor
bound
das
sbb
adc
(bad)
lods
sub
push
pop
lldt
mov
mov
add
sub
aas
push
dec
jl
cs
cld
in
je
jno
inc
adc
das
fild
cmc
cli
dec
push
scas
lods
inc
out
sbb
rcr
mov
in
shl
mov
add
add
cli
ja
arpl
outs
sar
movs
movs
ds
adc
adc
outs
pop
shl
iret
mov
push
mov
(bad)
cld
xlat
out
into
out
jmp
sub
push
or
sbb
dec
push
fdiv
mov
dec
mov
in
cmp
mov
cmp
fs
bound
aad
add
adc
jecxz
fistp
das
into
add
cdq
mov
repnz
pop
add
jle
xlat
dec
push
or
xchg
fstp
rol
sub
xor
(bad)
xor
pop
sbb
fiadd
cs
in
pop
pop
bound
inc
(bad)
mov
dec
dec
ret
(bad)
pop
push
or
sbb
fwait
xchg
(bad)
sub
add
jbe
xchg
push
mov
jecxz
daa
(bad)
sbb
scas
js
div
dec
movs
int
sahf
lods
movs
sub
jmp
int3
jo
fcomp
or
jae
push
retf
fwait
test
cmp
imul
mov
xchg
out
mov
test
cmp
stos
sbb
sbb
sub
inc
fisubr
xlat
cmps
push
add
cwde
push
sbb
mov
xchg
jbe
in
cmp
and
dec
rol
vfnmadd132ss
pop
or
xchg
movs
mov
push
test
fidiv
pop
push
xor
test
sub
xchg
and
push
fdiv
xor
fisttp
repnz
xchg
jo
out
push
inc
and
jp
mov
jnp
add
add
je
fcomp
push
mov
xchg
into
jo
mov
push
mov
call
push
cmc
mov
test
in
loop
pop
and
lahf
xor
stc
lahf
into
das
std
inc
out
push
test
stos
push
jb
imul
mov
and
and
nop
inc
mov
cmp
out
int3
dec
bnd
jb
mov
sar
out
cld
enterw
sub
sub
cmp
cld
call
test
fcomp
cmp
push
sti
xchg
in
sbb
pop
scas
(bad)
or
retf
or
call
add
jmp
xor
loope
ret
pmullw
sub
adc
ds
into
test
xchg
addr16
add
push
xor
stc
push
mov
xor
dec
adc
ins
xor
imul
jg
and
pop
fld
ror
and
mov
push
stos
adc
or
cmp
sub
push
fild
adc
jnp
push
pop
movs
jmp
ss
das
fsubr
test
test
mov
xchg
mov
mov
mov
push
aam
jge
leave
jb
das
ficom
iret
test
repz
(bad)
jmp
and
pop
ret
mov
xor
pop
mov
sbb
aaa
and
inc
jle
or
xchg
popa
test
jbe
lahf
inc
into
mov
adc
jg
int
xchg
rcl
dec
and
adc
aam
mov
shr
loop
int
push
xchg
mov
pop
sub
scas
lahf
adc
inc
out
cld
int
enter
jmp
inc
mov
fdiv
cmp
cmp
xor
test
sub
jp
sub
jmp
push
das
mov
das
cs
cmp
stc
lds
fwait
dec
test
out
pop
xor
fld
fstp
rcr
call
into
sub
aas
mov
cmp
in
xchg
push
lods
into
data16
iret
mov
out
adc
push
ins
mov
dec
cwde
retf
push
xor
loope
jbe
mov
sub
cmp
mov
cld
test
sub
mov
adc
pop
jmp
les
gs
out
fs
lds
sub
mov
stos
jb
sub
and
aas
jmp
xor
pop
jns
(bad)
rcl
xchg
fwait
mov
or
ins
and
int3
cli
jg
jle
(bad)
in
sub
fst
inc
dec
in
mov
mov
jle
or
lahf
mov
mov
ret
xor
and
lea
jp
pop
(bad)
movlps
cld
sti
int3
fwait
div
pop
aaa
scas
fimul
push
scas
(bad)
and
jns
xor
out
call
(bad)
sbb
out
dec
ror
call
retf
repz
jmp
shr
aam
push
aaa
jp
mov
das
daa
cmp
test
dec
pop
fwait
cld
sbb
fmul
(bad)
push
inc
pop
les
loopne
xlat
neg
cmp
adc
and
mov
mov
arpl
sti
push
cmp
mov
out
sbb
add
jo
fsave
fwait
push
cmps
scas
push
out
jge
dec
xchg
sub
sub
pop
cli
sbb
in
inc
mov
xor
outs
fiadd
xchg
call
out
mov
fcomp
std
and
mov
or
xchg
sbb
(bad)
popf
jb
mov
add
das
les
mov
retf
ins
dec
(bad)
(bad)
or
pop
mov
addr16
push
cld
into
inc
push
cmc
sub
(bad)
es
ret
shr
mov
xchg
retf
jl
retf
xchg
mov
test
test
cmp
jp
mov
cmp
xchg
inc
dec
mov
leave
mov
pop
mov
fs
popf
dec
mov
mov
loope
hlt
cld
not
call
iret
or
fstp
aaa
stos
test
or
mov
sbb
pop
ins
stos
push
retf
rcl
nop
mov
test
dec
in
add
inc
out
inc
xor
mov
loopne
pop
inc
mov
push
xor
fisubr
push
retf
aam
jo
jo
lods
jns
mov
gs
das
into
fidiv
xor
jle
mov
xor
outs
push
outs
outs
jmp
outs
sbb
jns
xchg
leave
jno
jbe
fistp
xchg
mov
mov
lods
dec
jle
xchg
push
aas
sbb
xchg
das
mov
push
mov
push
or
(bad)
loopne
xchg
push
ret
lahf
outs
and
push
push
push
mov
jno
push
xlat
xchg
xor
rcr
dec
adc
mov
push
push
add
fisttp
add
out
icebp
mov
and
jbe
data16
jmp
aad
fmul
movs
test
lods
sbb
movs
inc
mov
push
xor
and
pop
pop
jae
or
jns
mov
mov
sbb
push
push
or
pusha
popf
xchg
dec
ins
fwait
or
in
mov
lods
inc
mov
outs
popa
aas
test
jg
xchg
mov
fwait
lods
lock
mov
aas
inc
adc
cli
fwait
movs
dec
shl
rcr
cmp
cmps
add
or
adc
daa
lock
loopne
sar
loopne
pop
out
popa
adc
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmp
xchg
ins
loop
int3
sub
jno
jmp
sti
call
jecxz
push
jbe
jmp
out
popf
mov
mov
ins
inc
xor
loop
adc
mov
add
mov
push
inc
push
ja
test
inc
adc
adc
or
cld
aam
dec
pop
dec
loope
lahf
rcr
push
ror
repnz
lods
inc
gs
push
jl
jmp
sub
in
cli
test
aam
mov
mov
jbe
dec
aad
pop
pop
mov
retf
xchg
cmp
add
jne
test
pop
mov
std
sub
or
leave
sbb
lods
mov
xchg
cmp
imul
adc
mov
ds
setp
ds
test
hlt
adc
in
dec
push
ret
out
cmp
(bad)
cwde
jp
sbb
xchg
iret
add
aaa
shl
cdq
ret
and
xor
cmps
fistp
shr
inc
popf
outs
test
adc
mov
shr
mov
inc
daa
cld
out
movs
cmp
push
add
mov
mov
inc
xchg
jae
mov
cmps
cmp
iret
stos
push
mov
aad
mov
into
push
sub
dec
cmp
std
retf
xlat
call
test
pop
xchg
mov
imul
cmps
or
fs
(bad)
ins
pop
and
push
sbb
popa
out
mov
lds
shl
sub
nop
ins
sbb
pop
pop
push
sahf
ins
or
outs
test
and
das
outs
xchg
cwde
sbb
jge
xor
int
dec
jl
mov
inc
push
in
push
push
scas
rcl
lods
cwde
fdiv
outs
mov
add
jae
xchg
cmp
pop
inc
cs
inc
cmp
xor
ins
pop
fwait
test
xor
xor
cmp
xchg
jb
pop
neg
mov
lods
xchg
loope
xor
pop
clc
sub
pop
or
ds
shl
mov
inc
xchg
sti
sub
je
jno
push
addr16
sahf
cmp
addr16
sub
mov
(bad)
sub
fsubrp
in
sbb
cmp
dec
mov
out
xchg
jno
xchg
jp
ja
mov
mov
pop
test
lods
(bad)
leave
or
pop
(bad)
mov
retf
push
pushf
pop
jno
push
cmp
mov
mov
movs
sub
out
(bad)
sbb
adc
mov
mov
(bad)
movs
fimul
dec
idiv
mul
dec
and
lds
int
fmul
imul
push
lock
mov
daa
dec
scas
daa
xchg
out
jno
or
or
lods
push
cmp
(bad)
jmp
and
add
sbb
arpl
pop
sub
imul
ds
ins
and
imul
push
pop
and
rcl
push
xor
pusha
mov
pop
pop
retf
xchg
addr16
xchg
sbb
add
mov
movs
lods
std
mov
aaa
and
cmps
and
mov
btc
and
sub
addr16
pop
lock
repnz
jle
in
loopne
std
mov
xor
jb
mov
pop
sbb
xchg
xchg
(bad)
mov
adc
leave
cdq
stc
push
mov
xor
aaa
sbb
es
iret
jp
dec
and
sub
lahf
sub
cdq
bound
aad
sbb
dec
addr16
mov
pop
ss
stc
add
and
jmp
dec
shl
jne
loop
sbb
popf
push
idiv
out
push
cmp
sub
and
cmp
pop
fwait
cmp
ret
test
jmp
ss
nop
sub
jae
sub
mov
cs
sub
(bad)
mov
dec
xor
xchg
jno
mov
sub
jo
fadd
xchg
imul
adc
out
fist
imul
xor
or
pusha
int3
sub
add
pxor
daa
mov
es
out
mov
into
ins
imul
mov
mov
fneni(8087
jae
mov
imul
xor
ficom
or
js
adc
je
mov
mov
jl
outs
scas
sbb
pop
rcl
jns
xor
loopne
xor
sub
and
inc
ds
(bad)
les
cs
xchg
xchg
ret
ja
adc
pop
mov
jle
push
imul
in
es
mov
cmp
pop
xchg
outs
add
loop
sti
cmp
call
mov
xchg
jo
push
loope
cmc
adc
popf
out
mov
dec
lahf
sbb
test
mov
mov
fucomp
mov
sub
loopne
and
or
add
xor
cmp
cmp
in
movs
cmps
xchg
ins
and
aad
daa
test
jns
mov
and
loope
mov
arpl
mov
push
adc
aaa
gs
adc
rcr
repz
jnp
fnstsw
pop
call
rep
jecxz
xchg
mov
sar
cld
sahf
sub
pop
cmps
pop
int3
ret
ins
mov
jge
push
mov
mov
shl
lahf
icebp
mov
cld
and
in
pop
cli
adc
cli
pop
loop
retf
loopne
cmp
mov
or
add
inc
test
imul
cs
mov
imul
jmp
test
jb
cld
adc
aas
inc
pop
lods
xor
mov
aas
lahf
daa
mov
mov
cmp
imul
or
jnp
shl
rcl
clc
jno
inc
xor
iret
and
pop
enter
xor
arpl
add
fcmovnbe
add
idiv
cdq
imul
sbb
mov
movs
or
sbb
pop
(bad)
(bad)
jle
out
out
test
js
push
neg
fnstcw
ss
xlat
retf
call
test
ret
adc
stos
fnsave
lea
icebp
mov
imul
cli
sar
mov
int3
push
sbb
(bad)
loop
fxch
scas
(bad)
jnp
mov
pop
mov
inc
and
loop
cld
(bad)
push
not
xor
xchg
mov
and
(bad)
xor
js
mov
ja
bound
cmp
sub
or
mov
mov
ins
pop
sbb
sub
inc
cs
and
or
mov
stos
std
out
mov
xchg
jg
mov
sbb
call
aaa
dec
jp
jne
fs
xchg
sub
pop
pushf
out
add
shl
mov
jle
jo
mov
ror
in
icebp
xor
inc
mov
ss
mov
aaa
xor
mov
push
pop
daa
call
jmp
ror
fild
mov
popa
jns
xor
add
push
mov
pop
iret
je
fst
mov
stc
hlt
push
imul
mov
and
shl
pop
les
mov
and
add
push
and
jg
cmp
rcr
stc
cmps
out
out
mov
in
jecxz
(bad)
cli
aam
repnz
shr
nop
(bad)
jae
aad
mov
push
add
mov
and
test
sub
std
jp
test
mov
or
into
mov
das
mov
and
rcl
jne
jnp
(bad)
imul
cmp
and
mov
lea
outs
cmp
rol
sbb
iret
lds
aaa
jne
stos
test
retf
ins
adc
(bad)
sub
scas
fnstsw
mov
xchg
movs
clc
imul
and
push
dec
jp
dec
and
xor
in
loop
dec
(bad)
bound
cmp
add
in
in
mov
pop
adc
add
or
inc
pop
mov
mov
std
sbb
or
xchg
cmp
push
in
pop
mov
repnz
out
out
cld
jns
jp
xor
add
cli
call
mov
sbb
mov
adc
out
nop
dec
shr
mov
push
inc
add
arpl
inc
add
retf
js
sbb
mov
xchg
mov
sub
mov
push
inc
xchg
in
(bad)
and
xor
sub
adc
xor
jbe
inc
mov
cmp
data16
pop
in
icebp
ins
fbstp
daa
jns
xor
lds
(bad)
lods
mov
mov
mov
push
pop
dec
sub
jecxz
adc
or
aas
(bad)
imul
jg
add
xor
push
iret
push
rep
repz
pop
mov
mov
jmp
shl
cwde
out
outs
test
ss
cmp
(bad)
add
shr
xlat
clc
jmp
cs
je
outs
mov
dec
and
jne
push
jecxz
inc
cmp
lahf
mov
fbstp
scas
arpl
mov
aas
push
out
aam
sbb
push
push
push
out
xlat
aam
call
mov
(bad)
push
cmp
mov
mov
mov
call
cdq
cli
xor
jmp
mov
mov
aas
popf
out
dec
xchg
push
dec
(bad)
jmp
gs
mov
xchg
movs
retf
push
sbb
dec
or
cmps
lock
daa
das
push
pop
int
push
pop
cmp
adc
mov
xor
xor
mov
arpl
cdq
dec
jno
loope
pop
lods
dec
mov
fisttp
jmp
bound
add
sub
dec
push
in
jo
xchg
scas
push
cmp
test
fwait
stc
je
cwde
int
jne
aad
xchg
cmp
jo
xchg
cmp
xor
dec
adc
mov
mov
loopne
enter
dec
cmp
mov
mov
gs
mov
cmps
or
push
in
xor
iret
pop
sbb
add
xchg
dec
add
jl
xor
mov
sahf
cmp
xor
xor
test
or
push
retf
pop
(bad)
cld
aad
mov
mov
popa
test
mov
fs
in
shl
mov
rcl
and
or
cmc
mov
and
push
cmps
jne
sbb
inc
cmps
fidiv
cs
mov
lods
cmp
cdq
(bad)
js
je
jne
and
jle
mov
adc
ja
mov
imul
adc
dec
mov
movs
ja
add
xchg
jne
ret
adc
cmp
inc
jne
out
sbb
or
in
(bad)
cs
cmp
xchg
mov
dec
repnz
jmp
fild
(bad)
push
mov
adc
jb
and
lahf
xor
sub
movs
movs
pop
inc
dec
enter
inc
sar
out
xor
xor
dec
sbb
mov
outs
aam
fwait
inc
xor
inc
dec
mov
add
mov
leave
sbb
loop
adc
or
mov
mov
xchg
aam
pop
aad
jge
sub
fist
out
add
cld
and
mov
add
out
or
(bad)
xchg
cwde
lods
push
ss
ins
mov
jbe
push
out
fstp
fst
push
jns
fsubr
pop
aad
xor
int
cld
outs
fnstcw
dec
xor
aad
and
stc
aaa
lock
loopne
sar
sar
call
daa
pop
pop
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
mul
aam
jecxz
icebp
xchg
cmp
jno
test
xchg
xchg
mov
neg
pop
leave
loope
daa
cdq
outs
jnp
jne
and
cmp
jmp
int3
sub
out
aas
jl
in
stc
daa
cmp
jp
add
ror
cs
mov
inc
je
mov
push
dec
inc
outs
call
daa
jp
xor
or
mov
mov
fs
mov
sub
loopne
jmp
jno
fnstcw
sub
ret
xor
repz
mov
les
out
sbb
mov
fist
add
cwde
(bad)
out
pop
daa
sbb
outs
out
lahf
das
inc
cs
aaa
push
push
fldcw
sub
das
jno
jg
xor
or
stos
adc
mov
aaa
add
(bad)
mov
cmp
xchg
and
mov
lods
jb
and
xchg
xor
xor
mov
ins
mov
call
arpl
std
icebp
push
mov
shl
push
test
gs
and
inc
daa
in
push
retf
jae
ins
dec
cwde
push
push
lahf
rcr
jg
jno
mov
cmp
or
int
ficomp
outs
jmp
inc
sub
push
(bad)
int
aas
retf
lods
sub
adc
fmul
aam
arpl
jp
bts
xchg
(bad)
sbb
jle
ret
push
xchg
dec
mov
shl
test
pop
inc
push
dec
ret
adc
xor
jmp
int3
mov
mov
pop
xchg
test
inc
into
pop
jmp
mov
data16
mov
jge
and
jecxz
mov
inc
outs
or
sub
and
jb
or
lock
outs
mov
adc
and
in
dec
inc
(bad)
pop
add
ds
sub
sahf
jnp
nop
and
cmp
pushf
or
cmc
adc
lock
push
xor
jmp
je
sbb
stos
add
ja
jmp
mov
pop
pushf
mov
cmp
xchg
mov
mov
sti
nop
cmp
sbb
mov
cmp
xchg
stos
pop
jb
aam
imul
push
dec
or
je
shl
push
xchg
inc
and
rcl
jle
mov
in
loop
pop
mov
jge
adc
and
out
dec
or
out
and
sub
arpl
fadd
xchg
mov
jbe
cmp
mov
mov
scas
sub
dec
sahf
cmps
pop
in
lods
mov
mov
cmovl
and
out
cmp
int
fdivr
mov
push
shl
cmp
or
jp
(bad)
adc
inc
jae
mov
jnp
js
jbe
(bad)
and
sub
aad
jno
adc
imul
and
add
pop
pop
popf
xchg
inc
test
test
dec
shl
and
sub
jmp
iret
rcr
xchg
scas
push
loopne
mov
(bad)
hlt
adc
or
inc
jg
inc
pop
std
outs
lods
and
pop
cmp
sbb
aaa
and
fld
mov
es
mov
std
fisub
std
cmps
sub
push
les
in
in
cdq
mov
adc
mov
daa
pop
imul
pop
cmp
call
or
out
arpl
fcmovb
cwde
std
neg
pop
jne
push
mov
test
inc
fimul
in
pop
loop
pop
popf
lods
jg
cdq
fcompp
add
imul
cmp
jg
pushf
lods
scas
ins
repnz
add
(bad)
adc
sub
aaa
int
push
rol
xor
push
push
mov
movs
sbb
ret
push
jl
mov
xlat
ins
nop
sbb
fnstcw
mov
fucom
rol
or
stos
or
scas
retf
jnp
xor
scas
repnz
repz
sub
or
cmp
adc
jmp
push
mov
out
pushf
stc
pop
pop
jo
and
leave
sti
jo
sub
aad
retf
push
inc
or
pop
movs
xor
sub
movs
jge
rcl
xor
daa
bound
in
jbe
loop
and
xor
jl
jbe
shr
pop
pop
mov
nop
aaa
mov
aaa
adc
daa
mov
out
daa
cmps
js
sahf
add
les
adc
push
pop
repz
cmp
add
outs
push
xor
sub
push
jle
mov
test
lods
mov
sub
mov
mov
in
sbb
mov
jge
mov
mov
xchg
ss
jo
mov
mov
ret
jle
dec
aas
stos
adc
inc
or
popa
jl
addr16
cmp
cdq
daa
pop
(bad)
aad
enter
mov
int
jmp
fstp
dec
lahf
and
ins
dec
addr16
xlat
cmp
pop
xchg
jo
cld
ins
pushf
pop
fbstp
out
dec
cmp
retf
enter
mov
stos
inc
ins
mov
ror
push
imul
sbb
cmp
push
aas
push
push
mov
dec
test
mov
hlt
stos
mov
jnp
repnz
lods
(bad)
dec
and
or
repz
push
ficomp
cmps
call
sbb
inc
retf
popf
popa
icebp
out
mov
xlat
std
pop
fiadd
inc
mov
cmp
aas
mov
push
or
mov
(bad)
lods
ins
sbb
push
and
shr
call
sub
or
scas
daa
mov
dec
(bad)
and
aaa
fld
retf
inc
jb
and
sub
fld
jb
ins
mov
sbb
fcom
icebp
mov
dec
or
mov
dec
mov
mov
fwait
mov
or
jns
push
xor
cmp
clc
inc
cld
push
hlt
add
repz
sar
push
movs
jbe
jl
push
fmul
ins
sub
pop
jns
pop
pop
outs
mov
rcr
mov
push
imul
cld
mov
mov
mov
inc
fsubr
lock
icebp
mov
lock
shr
popf
repnz
jb
add
and
sbb
lahf
sbb
sub
rcr
clc
lds
push
cmps
scas
xor
adc
lods
pop
addr16
dec
and
xchg
jmp
xchg
lods
jmp
mov
hlt
popf
int
push
push
mov
nop
add
pop
or
in
sub
shl
pop
lahf
cmp
dec
push
dec
jbe
out
xchg
out
sub
clc
push
out
xlat
sbb
push
lods
cmp
ret
mov
xchg
retf
sbb
loopne
(bad)
adc
fidiv
in
ja
nop
mov
repz
push
shl
imul
adc
(bad)
adc
xchg
aas
cld
shl
jmp
sti
lods
ja
stos
mov
pop
gs
call
jns
sub
sbb
mov
mov
or
push
push
sub
or
loopne
scas
stos
or
adc
dec
(bad)
(bad)
ja
pop
int3
sbb
adc
lahf
das
jle
xor
jnp
add
push
add
mov
push
pop
mov
cdq
int3
sub
into
cs
dec
clc
inc
dec
and
dec
mov
stos
mov
(bad)
and
test
mov
icebp
sbb
out
xchg
pop
sbb
gs
test
push
jge
ins
enter
xchg
add
mov
mul
pop
inc
fdiv
adc
mov
xchg
int
sbb
call
imul
lds
pop
packsswb
push
pop
or
fld
lods
or
xchg
xor
mov
push
scas
test
imul
frstor
shr
fs
fld
dec
mov
ins
jp
push
jecxz
retf
imul
pusha
cmp
pop
lock
aam
leave
(bad)
mov
out
jbe
shl
fldenv
cli
(bad)
addr16
cmc
adc
outs
add
dec
test
cmp
cli
(bad)
dec
fwait
push
jbe
test
sbb
scas
xchg
rol
mov
cdq
dec
(bad)
sbb
iret
dec
lea
sub
out
mov
cmc
(bad)
xchg
hlt
sub
cmp
pop
jge
icebp
jae
retf
add
mov
(bad)
xor
stc
test
adc
(bad)
xor
test
scas
fcomip
(bad)
repnz
pop
movs
mov
out
jp
push
pop
fbld
(bad)
out
aaa
into
call
imul
or
push
pop
cmp
and
call
retf
lods
sub
mov
hlt
imul
pop
mov
cmp
push
jg
mov
jae
(bad)
push
into
push
sub
test
dec
xchg
sub
pop
and
xor
add
test
pop
mov
or
sbb
inc
test
push
inc
sub
add
jmp
dec
cdq
add
mov
out
xchg
xchg
jb
dec
dec
(bad)
in
xchg
fcmovne
mov
sub
push
sahf
cs
xor
xchg
das
test
cdq
push
jp
sbb
test
cmp
sbb
mov
inc
add
call
jmp
pop
popf
sub
fisubr
jge
call
cmp
popa
clc
jae
adc
pop
fmulp
(bad)
xchg
sti
mov
retf
call
pop
popf
cdq
fwait
ror
cld
adc
stos
and
test
shr
push
inc
cdq
jae
inc
sbb
adc
mov
test
lahf
outs
cs
ja
test
mov
in
imul
movs
inc
imul
idiv
in
inc
neg
mov
cmp
addr16
outs
push
clc
lmsw
cmp
mov
sar
xchg
add
jle
inc
xchg
add
mov
jo
sub
les
mov
fimul
mov
cld
adc
mov
cmp
cmp
xchg
cmp
or
push
adc
cmp
movs
dec
adc
adc
ret
sti
fst
outs
dec
mov
popa
mov
xor
pop
(bad)
or
add
in
xchg
push
sub
xchg
xchg
fmulp
xor
mov
push
ss
pop
sbb
std
cdq
nop
out
and
mov
adc
jnp
call
xchg
in
push
fcomp
imul
popa
out
add
dec
dec
xchg
loopne
cmp
xchg
inc
int3
jnp
loop
or
(bad)
mov
jmp
test
dec
xor
(bad)
push
jmp
inc
mov
ja
lahf
loop
xor
pusha
xchg
mov
pop
ret
xchg
mov
add
in
shr
mov
xchg
jmp
mov
cmp
adc
jl
mov
out
rcl
fxch
ss
inc
xchg
mov
test
(bad)
call
cdq
cmc
lahf
jg
in
movs
(bad)
aam
lahf
ret
pushf
imul
mov
and
test
xchg
xchg
inc
pop
rcl
cld
push
inc
mov
clc
mov
jnp
jp
popa
xchg
push
pusha
mov
fwait
push
push
imul
lds
jl
mov
sub
mov
jecxz
fst
cmp
popf
ins
pop
jl
push
scas
mov
pop
cmp
loopne
sar
jg
inc
lahf
add
add
sub
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
xchg
dec
jbe
leave
(bad)
fstp
or
and
dec
and
mov
mov
out
xor
into
mov
inc
test
cmovg
mov
cld
in
xor
arpl
cmp
sub
pop
out
nop
inc
cmp
dec
lock
add
movs
xchg
test
mov
movs
pop
or
jp
or
mov
fldcw
mov
adc
arpl
ret
loop
jle
sbb
je
fstp
and
mov
cld
and
mov
ins
pusha
sub
inc
jb
push
xor
and
xchg
je
jmp
ins
bound
(bad)
sbb
mov
mov
inc
ja
mov
pop
ins
inc
xor
or
xor
pop
imul
int3
push
inc
pop
push
xor
and
sub
xlat
lea
movs
popa
and
mov
add
inc
(bad)
shl
pushf
fidiv
push
lods
fdiv
jnp
shl
fnsave
jmp
jno
push
pop
push
enter
dec
cmp
test
lods
bound
scas
jge
aad
xor
push
xchg
ror
sub
mov
popf
cs
jmp
mov
pop
inc
dec
lds
push
mov
push
jmp
or
(bad)
pop
sbb
jns
and
cs
dec
rol
add
adc
or
and
xor
mov
sbb
sbb
inc
adc
lock
lods
inc
mov
test
inc
stos
es
or
out
dec
and
int3
xchg
aam
pop
push
sub
pop
mov
add
ins
test
push
in
pop
jmp
push
xchg
push
iret
mov
sub
push
imul
in
rol
div
dec
pop
int
sti
fist
outs
ds
adc
add
inc
int3
dec
out
sar
jns
lahf
icebp
mov
mov
arpl
push
jmp
jb
into
push
(bad)
mov
(bad)
sbb
push
clc
mov
(bad)
xlat
das
jne
mov
pop
sub
lods
or
mov
mov
loop
scas
imul
jg
jae
imul
pop
mov
(bad)
mov
push
jo
bound
push
jns
std
arpl
cmp
iret
or
pop
mul
(bad)
sub
mov
sbb
inc
(bad)
(bad)
in
out
and
fst
mov
inc
movs
add
pop
sbb
inc
add
pop
leave
lea
pop
cs
and
lods
std
ss
cdq
sub
dec
sub
stos
cs
bound
(bad)
outs
mov
and
rcr
mov
repz
and
xchg
dec
int3
cwde
push
dec
mov
sbb
inc
sub
repz
or
and
cmc
or
xchg
fwait
int
mov
push
out
stc
es
push
mov
aad
cmps
fistp
and
push
jge
inc
pushf
retf
lds
cmps
jecxz
jge
ret
cmp
sub
pop
ja
cli
pop
out
cmps
pop
repz
out
test
cdq
fiadd
or
xchg
mov
stc
rcl
loopne
loope
mov
ror
fiadd
xchg
shl
jle
imul
ret
push
push
inc
xchg
sbb
nop
ins
pushf
or
jecxz
test
push
(bad)
js
pusha
dec
mov
shr
les
dec
jmp
not
jae
add
inc
shl
xor
(bad)
xor
(bad)
nop
mul
rol
push
mov
sbb
sbb
or
and
dec
retf
mov
rcl
mov
jle
push
or
fcomp
add
cmp
jne
xchg
cmp
xchg
test
mov
int
cmc
sub
inc
leave
bound
int
(bad)
cmp
mov
dec
mov
imul
fidivr
enter
es
cmovl
leave
push
imul
sub
sti
mov
gs
data16
das
int
aam
pop
inc
or
addr16
dec
out
into
fmul
mov
pop
mov
mov
cwde
jnp
jne
jnp
mov
aas
sbb
lea
xchg
lods
aas
push
cmps
or
or
add
sub
(bad)
add
push
xchg
lods
nop
pushf
xchg
ss
add
data16
shl
(bad)
mov
test
rcl
jmp
lock
stos
dec
cmp
(bad)
les
jmp
repz
test
and
jecxz
cs
scas
div
xchg
test
fimul
pop
pop
mov
enter
mov
loopne
mov
call
lods
enter
adc
push
xor
mov
xor
inc
icebp
dec
pop
int
push
xchg
in
push
mov
lods
popa
inc
aam
sub
das
dec
iret
rcl
ds
mov
loope
add
in
int
and
fisubr
push
cmp
test
jmp
mov
inc
sub
shl
lahf
add
xchg
add
popw
jp
ret
fidiv
cdq
xchg
stos
aas
dec
jae
sbb
aad
mov
neg
xor
mov
hlt
push
pop
xor
jb
ss
out
mov
dec
inc
xor
gs
fsub
pop
sbb
out
aad
push
jp
gs
mov
cmc
stos
popf
jmp
push
add
hlt
inc
push
adc
cmps
push
xor
pop
push
retf
sub
stc
xchg
cli
dec
mov
imul
pop
jle
push
ins
push
push
sbb
jne
lods
mov
(bad)
mov
dec
and
pop
sar
dec
cmp
push
pop
(bad)
xor
(bad)
fstp
jae
jbe
inc
cwde
cwde
mov
xlat
inc
cmps
and
add
mov
sbb
mov
adc
inc
jnp
add
enter
and
jmp
or
outs
inc
stos
cmps
dec
and
inc
jp
jnp
mov
mov
call
push
(bad)
clc
leave
and
repz
sbb
pop
mov
pop
jmp
icebp
or
addr16
dec
push
or
loop
jb
or
sub
rcl
gs
pop
mov
mov
push
pusha
xor
adc
retf
sbb
jnp
icebp
push
jge
repnz
xchg
rcl
rol
sti
push
mov
sub
cmps
pop
xchg
jp
xchg
mov
adc
rdtsc
sbb
push
pusha
pop
xchg
aaa
sub
cdq
test
aam
bound
in
jecxz
push
mov
mov
sbb
ss
mov
jp
dec
cmp
add
stc
pop
ds
enter
mov
dec
xor
setg
inc
je
imul
push
enter
mov
push
aaa
fistp
mov
mov
mov
rol
sub
xchg
and
outs
fsubr
xchg
(bad)
test
cwde
push
ret
in
jns
mov
pop
sbb
lods
jp
mov
and
lock
sub
test
cmps
pop
add
inc
and
jecxz
and
cmp
push
movs
inc
adc
mov
es
mov
rcr
xor
ins
cmps
mov
fsub
mov
sub
gs
inc
inc
xor
shl
in
jg
and
dec
les
pop
mov
sub
cli
or
sub
xchg
push
test
pop
mov
jecxz
add
out
mov
shl
loope
mov
dec
pop
mov
into
xor
aaa
jnp
std
push
sbb
xor
aam
and
scas
push
sub
imul
loope
scas
cmp
pop
jge
imul
std
mov
js
repz
repz
jns
sub
xor
cld
mov
mov
push
(bad)
pop
aas
sub
sbb
or
shr
stos
scas
dec
fcomp
arpl
rcl
mov
cld
xlat
pop
arpl
sbb
out
pop
imul
aaa
mov
int
in
xchg
sub
stos
ins
sbb
mov
jne
leave
out
pusha
repz
jl
int
jmp
or
fst
test
repz
inc
pop
sar
sbb
sub
imul
stos
ret
xchg
jno
pushf
cmc
xor
outs
push
hlt
mov
sbb
jb
xchg
in
dec
push
dec
lds
adc
mov
ins
and
mov
mov
mov
and
retf
dec
push
fimul
or
scas
xlat
mov
sbb
cmps
mul
in
cli
(bad)
into
cld
push
cmc
sahf
lea
cmc
mov
push
add
dec
sar
add
call
stos
rol
mov
push
jmp
outs
inc
mov
scas
inc
rol
bsr
pop
(bad)
mov
(bad)
cmp
cmp
loop
test
mov
pop
dec
jecxz
test
ror
(bad)
cmp
les
dec
imul
mov
add
and
xor
out
mov
fsub
mov
mov
in
dec
ret
pop
loopne
out
psadbw
sar
call
push
imul
in
push
(bad)
jle
dec
pop
test
cmc
cdq
sbb
hlt
mov
ds
into
sbb
sub
cwde
or
sbb
jb
cmps
imul
jne
test
sbb
imul
or
cmp
mov
jnp
movs
push
mov
loop
xor
icebp
repz
cmp
imul
das
inc
add
retf
jns
pop
and
fs
push
cmp
xchg
jle
sahf
popa
int
pop
jbe
sub
xchg
inc
dec
ins
fisub
sbb
(bad)
cmc
push
movs
dec
mov
xor
cmps
inc
shl
je
mov
cdq
ja
jp
fbld
arpl
fist
test
les
add
test
nop
pop
outs
dec
sar
repnz
xchg
push
jns
js
jb
jecxz
push
stc
icebp
sbb
sub
xor
push
gs
les
stos
jb
mov
mov
aas
scas
jnp
jno
popf
cmp
out
dec
adc
shl
sahf
inc
sbb
and
(bad)
daa
retf
stos
shr
icebp
push
sti
fiadd
bound
dec
shr
push
add
loopne
dec
adc
mov
loop
mov
xor
or
loop
sub
out
xchg
xor
jo
cdq
ror
add
pop
lock
adc
jo
jl
test
dec
movs
mov
fadd
lahf
(bad)
in
push
inc
call
xor
fwait
cwde
clc
mov
aaa
jnp
add
dec
(bad)
sbb
cwde
dec
(bad)
push
cmp
inc
sbb
add
je
test
sti
(bad)
and
repz
std
data16
push
das
ss
sub
push
mov
mov
cmp
add
mov
cmps
retf
mov
or
and
pop
call
add
or
adc
daa
lock
loopne
sar
loopne
retf
sub
sub
sub
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
mul
aam
jecxz
icebp
xlat
mov
cdq
inc
(bad)
sbb
cmp
sub
test
mov
inc
daa
out
test
cmp
mov
mov
sahf
jg
jecxz
daa
add
call
mov
adc
fisttp
sub
stc
repz
call
ret
dec
jns
je
icebp
(bad)
mov
xchg
jmp
je
(bad)
movs
sub
and
ins
xor
sbb
push
mov
mov
dec
icebp
loop
call
mov
add
jo
sbb
addr16
cmp
pop
out
xor
dec
test
mov
int
adc
ffree
loopne
lds
out
cmp
xchg
mov
inc
jg
jecxz
dec
popa
loope
dec
cmp
add
add
cmp
test
scas
pop
scas
test
loope
mov
out
mov
pop
sub
pop
fist
xchg
repz
mov
or
adc
repz
pop
pusha
fdiv
xchg
xor
aam
and
imul
hlt
pop
xor
shl
push
(bad)
cdq
mov
and
loope
mov
and
xchg
in
push
dec
adc
sbb
sbb
adc
retf
sub
mov
pop
scas
jmp
in
and
mov
xchg
scas
push
mov
xor
inc
iret
stc
rcl
mov
clc
xchg
int
inc
div
or
test
scas
sub
add
ins
enter
loopne
xlat
data16
mov
mov
mov
ja
mov
lods
imul
cmp
inc
mov
scas
in
in
pop
add
popf
dec
mov
and
adc
ins
mov
iret
mov
mov
int
xchg
pop
push
cmp
sar
fcmovbe
fdiv
icebp
mov
and
and
or
ror
cmp
add
adc
aas
and
mov
cmp
mov
mov
adc
lds
pop
mov
mov
jmp
jecxz
and
and
xor
aad
mov
movs
jbe
xlat
dec
in
cmps
loope
aas
retf
add
out
dec
scas
lahf
and
or
xlat
jp
xchg
cmc
pop
and
cwde
push
(bad)
fcomp
sahf
sbb
pop
lea
cmp
xchg
push
and
mov
inc
push
into
push
rcr
adc
int
ja
mov
mov
aam
daa
pushf
in
popa
out
pop
xchg
sbb
mov
pop
fwait
inc
inc
nop
out
fld
add
push
xchg
cmp
scas
mov
sbb
sub
mov
daa
mov
push
inc
jo
cmc
cmc
out
sub
push
xlat
imul
pop
mov
and
shl
imul
in
in
mov
ins
dec
xor
mov
sub
xchg
sub
sahf
and
push
dec
imul
inc
lods
test
pop
or
adc
xlat
sub
and
out
dec
cpuid
ins
sub
int
pop
sbb
mov
push
xchg
das
cdq
jb
adc
dec
and
adc
test
cwde
loopne
je
or
stos
mov
pop
nop
xor
aaa
repz
ret
das
cmps
fadd
int
aas
cld
pop
retf
ret
mov
adc
repz
push
popa
adc
push
push
out
call
(bad)
sbb
fbld
mov
mov
in
dec
add
or
mov
(bad)
imul
inc
outs
push
push
mov
mov
loopne
pop
and
out
mov
mov
mov
cld
cwde
call
or
adc
sub
adc
out
jnp
outs
cmp
mov
int3
inc
push
aad
mov
sbb
in
push
ins
loopne
ds
and
mov
jae
pop
lods
pop
movs
pop
push
idiv
mov
cmp
sbb
cmp
ins
xchg
retf
lock
cli
cmp
pop
aam
and
stos
(bad)
and
xor
outs
mov
pop
jb
fst
mov
mov
(bad)
cmc
and
mov
gs
push
xchg
ret
pushf
neg
leave
out
popf
stos
or
sub
add
push
mov
mov
dec
mov
call
mov
mov
fld
adc
loopne
rcl
and
lods
outs
je
aad
sahf
(bad)
mov
movs
inc
inc
or
xchg
cmps
fiadd
dec
popa
push
out
arpl
fstp
clc
push
scas
les
inc
(bad)
sub
hlt
(bad)
mov
imul
retf
mov
nop
aas
push
sar
sub
(bad)
and
jns
movs
jne
and
out
cmps
(bad)
or
imul
into
push
add
or
xor
ds
cmp
add
dec
xchg
cmp
test
out
cmp
into
sar
sar
popa
fwait
enter
jns
scas
pop
jne
or
push
(bad)
fdivr
cs
xor
lds
or
fs
clc
mov
inc
mov
iret
jnp
xchg
out
les
ins
ins
inc
mov
cmps
sub
hlt
push
xor
rcl
retf
in
cmp
lods
jp
jmp
mov
sbb
jmp
pmullw
sub
mov
(bad)
sub
out
add
or
cs
adc
aam
adc
mov
dec
ja
div
push
punpckhbw
jl
or
iret
mov
xor
mov
cdq
or
js
cli
sub
int3
(bad)
mov
xchg
cmp
dec
mov
in
lahf
fcmovnbe
mov
cmp
sub
call
or
aaa
xchg
mov
jbe
mov
inc
movs
pop
call
out
rol
adc
in
jnp
pop
lds
test
neg
or
jmp
clc
mov
or
test
add
mov
xchg
lahf
shr
jbe
sbb
adc
mov
mov
loopne
out
fdivrp
aas
xchg
mov
sti
pop
(bad)
cld
cdq
neg
pop
xchg
push
jl
jecxz
ret
test
out
call
cmp
or
or
loope
movs
lods
sub
leave
(bad)
mov
mov
push
or
fnstsw
or
fisttp
mov
or
aad
iret
cld
sbb
dec
aas
(bad)
call
mov
mov
mov
pop
test
cmc
adc
daa
push
xchg
push
push
pop
pop
xchg
push
push
adc
pop
stc
aaa
jo
add
enter
mov
aas
sbb
loop
dec
jmp
xchg
push
xchg
and
ror
push
push
cmp
mov
mov
aad
bound
dec
jl
mov
dec
stc
int3
idiv
mov
retf
dec
push
add
cld
or
lock
xlat
push
push
pop
bound
push
es
push
jmp
adc
cmps
xlat
add
dec
sti
es
lock
out
inc
inc
mov
outs
xchg
push
mov
ror
xlat
or
pusha
mov
rol
and
(bad)
(bad)
push
out
pushf
inc
mov
pop
xlat
xor
xlat
or
xchg
xor
lods
adc
adc
push
out
xor
bound
jnp
add
les
fcomp
dec
lods
call
cmps
and
cmp
sub
(bad)
test
scas
xchg
loop
cmps
mov
adc
je
(bad)
pop
mov
test
mov
icebp
cmps
shr
adc
push
mov
test
cmp
and
xor
imul
jle
retf
jge
shr
add
sbb
lods
jmp
add
repnz
aaa
pop
jl
or
inc
pop
or
ins
fwait
mov
mov
stos
xchg
loopne
retf
fs
lods
in
push
add
adc
jl
test
outs
mov
pop
pop
xor
es
cld
rol
mov
dec
in
ss
fadd
out
mov
pusha
(bad)
mov
int3
popa
stos
mov
and
imul
ss
dec
pop
ret
enter
icebp
ins
push
mov
xchg
mov
test
je
pop
cdq
inc
push
cmp
or
mov
and
test
sbb
cmp
test
pop
lods
fldcw
mov
push
sbb
aam
and
or
ins
mov
add
add
jle
lods
mov
and
pop
mov
pop
xchg
cli
mov
ja
pop
push
lahf
xor
into
xor
inc
dec
and
shl
outs
adc
(bad)
lock
inc
dec
aad
(bad)
push
or
jb
hlt
sbb
inc
aam
mov
clc
jbe
mov
imul
add
sbb
cli
jg
xchg
pop
push
int3
fwait
xor
sub
push
(bad)
je
pop
xchg
enter
scas
test
gs
or
stc
sbb
sub
push
movs
and
pop
lds
dec
ss
test
pop
outs
shr
into
sub
mov
mov
xor
imul
or
sahf
and
mov
cmp
(bad)
mov
cmp
xor
xor
mov
aam
sub
hlt
fisubr
retf
out
dec
(bad)
sub
push
jp
cdq
xchg
xchg
xor
xchg
scas
xor
jo
xchg
stc
ret
imul
js
jmp
cmp
fmul
dec
cmp
out
jne
aam
push
dec
xchg
and
(bad)
(bad)
mov
ins
fstp
and
inc
push
imul
mov
and
call
shr
std
mov
mov
arpl
cmc
or
cmp
outs
shr
add
push
call
sbb
test
adc
mov
(bad)
fucom
out
dec
inc
inc
je
ror
jno
loopne
repz
and
inc
jmp
cmc
pushf
jge
loope
dec
ror
in
adc
pop
int3
in
dec
mov
or
fsubp
fist
push
and
xor
(bad)
mov
cld
call
mov
fimul
(bad)
repnz
adc
fadd
inc
je
add
mov
pop
sbb
ins
add
nop
jge
iret
daa
retf
test
pop
ficomp
std
mov
xor
fimul
ret
inc
jae
pop
mov
in
(bad)
fdecstp
ror
lds
adc
retf
push
pusha
test
lahf
sbb
push
mov
adc
outs
popf
aaa
adc
cmps
bound
je
mov
mov
call
es
je
pop
fbstp
stos
shl
imul
into
sub
add
mov
dec
pushf
aas
sub
mov
push
les
out
imul
or
pop
xlat
in
and
xor
mov
fsubr
pop
dec
daa
xor
mov
aaa
jmp
xchg
mov
mul
cmps
jmp
out
iret
ret
(bad)
gs
pop
dec
(bad)
pop
push
mov
jb
inc
cmp
and
dec
shr
rcr
cmp
push
lahf
push
cmp
ficomp
hlt
jp
leave
js
test
mov
lahf
leave
mov
(bad)
sbb
aaa
movs
inc
jg
hlt
es
mov
fsubr
in
mov
movs
adc
clc
daa
lock
loopne
sar
jmp
pop
or
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmp
and
and
retf
push
ss
or
in
in
xchg
cdq
jno
xchg
xchg
jge
lahf
mov
dec
jbe
push
mov
(bad)
and
sub
jns
push
lds
shl
sub
mov
xchg
xor
not
sti
outs
fstp
mov
push
jmp
ja
jne
out
jnp
xchg
enter
(bad)
lahf
pop
das
mov
mov
fmul
push
mov
and
ja
and
not
pop
mov
lock
push
test
mov
sbb
repz
data16
sbb
sub
jbe
fstp
pushf
xchg
adc
adc
jne
(bad)
and
pop
sahf
mov
stos
xchg
and
dec
or
inc
sti
mov
fwait
arpl
dec
xchg
arpl
pop
repnz
stos
mov
cmps
ins
push
add
mov
push
sub
shr
sbb
mov
mov
or
mov
gs
jge
xchg
fidiv
shl
std
cdq
stc
mov
lock
jb
xchg
push
pop
imul
js
jl
pop
sbb
idiv
outs
shl
test
xchg
push
les
bound
cmp
add
pop
xchg
jmp
mov
mov
popf
arpl
loop
mov
push
sub
mov
add
neg
adc
adc
cli
test
inc
and
adc
xchg
cmp
or
jno
in
in
fld
retf
mov
xor
adc
cld
pop
dec
ss
push
mov
mov
test
mov
addr16
jnp
(bad)
aad
mov
out
cmp
cli
cs
rcr
lock
xor
cld
push
sti
ss
jmp
fs
jns
loopne
push
das
stos
xchg
dec
xor
inc
aam
iret
ret
adc
test
leave
mov
aaa
jae
add
lods
adc
cdq
cdq
out
rol
out
and
inc
push
int3
rcr
jo
adc
xchg
jmp
popa
rcr
je
pop
inc
push
mov
pop
ins
jl
xchg
int
mov
add
and
jb
jne
push
mov
je
(bad)
gs
push
cmc
xchg
je
call
pop
(bad)
cmc
or
pop
jae
dec
adc
jmp
pop
fiadd
pushw
jno
fsub
lea
push
xor
mov
mov
xchg
jns
inc
mov
outs
mov
push
jp
loop
les
mov
pop
jmp
sub
retf
test
add
or
loop
and
adc
ss
ror
pop
xor
aas
ret
imul
and
int
movs
(bad)
imul
xchg
fnstenv
inc
xor
aad
push
je
(bad)
test
cmp
mov
aad
sti
cli
xchg
(bad)
std
mov
jmp
ss
jnp
sbb
test
xor
inc
mov
ficom
pop
sub
pop
or
dec
or
dec
sti
push
or
stos
push
fwait
aas
add
cli
add
xchg
mov
imul
xchg
mov
jp
mov
push
stos
mov
and
sub
and
sub
fist
mov
test
mov
loope
mov
add
popf
addr16
fsin
cs
inc
data16
jp
leave
mov
cmp
push
ds
xor
mov
lds
movs
(bad)
out
mov
lock
xor
cmc
shr
dec
pop
ja
fwait
mov
test
pop
xlat
scas
cld
(bad)
loopne
sub
sbb
into
ss
push
sbb
int3
cmps
pop
xchg
adc
icebp
add
(bad)
jo
cmps
outs
ds
cmp
mov
or
fisttp
cmp
in
sti
out
int3
jnp
jne
mov
inc
leave
or
cwde
nop
in
div
pop
popa
jmp
cmc
in
add
clc
inc
das
outs
jae
jge
xor
ja
dec
push
jbe
icebp
xor
cld
js
xchg
push
iret
stos
hlt
clc
mov
lods
vrsqrtps
fs
sub
fisub
inc
mov
sbb
stos
xchg
es
pop
jo
xor
ret
xchg
cmp
dec
inc
hlt
icebp
and
adc
fcomp
pusha
and
outs
pop
sahf
inc
(bad)
out
mov
movs
mov
push
inc
adc
and
lods
movs
mov
jbe
mov
retf
hlt
nop
lock
mov
les
mov
pop
fisttp
mul
jmp
clc
inc
inc
pop
adc
sub
shl
not
xchg
lahf
mov
mul
sbb
push
sub
xchg
(bad)
(bad)
outs
shr
sbb
les
dec
mov
out
mov
mov
xchg
cmp
pushf
(bad)
(bad)
push
inc
push
xor
shr
lds
inc
fwait
mov
inc
ret
jp
xchg
xor
push
mov
cld
adc
into
popa
xor
xor
jmp
add
cmps
int3
scas
sar
adc
cmp
clc
into
cmp
mov
push
cmp
adc
adc
sub
jle
mov
ret
je
leave
sbb
jg
cmps
in
xchg
enter
dec
push
sbb
jg
push
adc
outs
jl
fisttp
pusha
jnp
stos
xchg
int3
mov
cld
sub
inc
jns
in
repnz
aas
popa
addr16
and
aam
sahf
outs
jl
mov
repnz
pop
(bad)
and
mov
adc
(bad)
mov
pop
pusha
test
jmp
xchg
aaa
fsub
xchg
mov
jbe
fmul
bnd
dec
mov
sbb
out
pop
jge
jne
xor
(bad)
push
into
or
cmps
std
ficomp
xor
hlt
push
mov
cmp
mov
fsubr
ret
sub
add
or
mov
movs
lods
mov
dec
jae
in
ja
inc
push
ficom
sub
push
dec
pop
movs
xor
stos
scas
js
fwait
mov
mov
aam
sub
sahf
dec
or
jle
mov
adc
jo
shl
ds
mov
add
adc
shl
fldenv
xchg
pop
(bad)
mov
add
jbe
xor
push
mov
mov
(bad)
jmp
data16
movs
mov
fcom
loope
xchg
es
lea
pop
pop
inc
imul
shl
outs
arpl
iret
mov
lock
xchg
push
cli
ret
push
movs
adc
add
test
mul
setg
xchg
jb
mov
jb
pop
mov
je
mov
cmp
mov
(bad)
into
cs
xchg
sbb
push
jns
xor
loopne
add
lahf
push
sbb
jp
test
inc
xor
xchg
mov
dec
movs
sub
hlt
mov
jle
in
mov
sbb
movs
sub
jb
adc
(bad)
dec
hlt
loope
dec
shr
mov
popa
mov
cmps
push
test
aas
lds
xchg
mov
lods
mov
inc
in
jo
inc
sbb
in
stc
fsubrp
hlt
push
dec
adc
sbb
ficom
mov
test
mov
fadd
jle
dec
mov
jb
les
mov
inc
outs
popa
mov
sub
mov
daa
das
js
mov
sbb
or
push
mov
(bad)
and
jne
sbb
mov
test
in
clc
jle
mul
pop
pop
arpl
sub
fst
out
outs
inc
pop
adc
addr16
test
sbb
mov
inc
mov
xchg
cmps
cld
sub
jb
mov
sbb
dec
or
and
gs
mov
jmp
adc
pop
jle
jecxz
cld
aad
int
fidivr
xchg
add
(bad)
jno
mov
push
lods
lock
ss
jge
aam
add
push
outs
test
adc
xchg
and
jno
adc
adc
jns
inc
add
pop
sub
cmps
cmp
mul
adc
push
fild
(bad)
test
loope
les
lds
ss
iret
loope
sahf
inc
mov
idiv
xchg
fidiv
ins
add
stos
popf
mov
dec
addr16
mov
popf
(bad)
repz
jp
ds
inc
retf
pop
test
jmp
lea
out
jl
loopne
sub
or
mov
rol
xchg
pop
inc
mov
std
push
fwait
popa
clc
retf
jne
clc
mov
bsr
scas
and
aam
mov
idiv
movs
fbld
movs
outs
mov
sub
into
jle
adc
ja
dec
jnp
in
in
clc
sub
jge
dec
sbb
xchg
scas
pop
sbb
ror
mov
jle
push
movs
mov
inc
aad
pusha
outs
scas
push
call
push
push
inc
jmp
movs
rcr
mov
rcr
out
ins
or
cmc
aam
or
dec
mov
(bad)
mov
fs
retf
pop
hlt
fidiv
test
pop
cmps
jb
in
dec
stos
int
xor
cdq
push
enter
cmp
sbb
loope
ret
(bad)
jge
out
mov
jmp
(bad)
cwde
sbb
cmp
adc
jmp
xchg
mov
ins
rcr
adc
pop
pop
cmp
pop
xchg
mov
mov
ins
imul
push
loope
jns
mov
xor
call
push
lea
loop
push
adc
or
test
iret
jae
push
dec
pop
popf
fwait
jne
pop
and
rcr
jl
sbb
in
mov
ficom
into
test
adc
xchg
sub
and
fdivp
repnz
out
cld
in
data16
adc
ja
xchg
clc
cmp
push
sub
mov
push
(bad)
fnsave
sbb
cmp
sub
lds
movs
add
lods
gs
dec
adc
out
in
sub
mov
leave
pop
in
inc
add
cmp
jo
xchg
fwait
push
cmp
pusha
fstp
and
iret
aaa
adc
ins
out
mov
add
mov
and
out
or
(bad)
add
int3
cmps
fisttp
jecxz
mov
jmp
aam
loop
out
push
scas
push
out
das
test
cmp
in
repz
jns
in
addr16
mov
ret
leave
fmul
lods
mov
loop
add
cli
mov
jmp
cmc
push
rol
jecxz
idiv
and
mov
push
retf
je
test
pushf
fsubr
pop
sub
xor
scas
dec
pop
jp
inc
leave
and
in
push
mov
pop
mov
ss
std
mov
push
outs
pusha
popf
adc
test
fmul
sub
clc
loopne
fdiv
jp
cmps
dec
push
lahf
jno
pop
cmps
cmps
test
aad
mov
scas
pop
mov
out
push
lahf
mov
xchg
icebp
aad
dec
pop
int3
xor
popa
test
sahf
and
js
pop
jns
inc
jmp
xchg
and
in
push
pop
and
or
pop
dec
xor
fcomp
call
fnstcw
stos
(bad)
mov
sbb
push
mov
test
sbb
mov
js
call
inc
test
jecxz
or
add
xor
(bad)
push
dec
inc
cld
xor
jg
inc
dec
pop
inc
sti
call
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
xchg
or
add
inc
mov
shl
cmp
or
nop
push
mov
ja
push
or
je
lea
add
movs
sbb
mov
add
xor
loopne
jno
sahf
rcr
push
or
xor
mov
je
ins
xor
mov
xchg
icebp
xor
in
aaa
mov
or
out
jle
fldln2
pop
pop
push
xchg
or
mov
and
pop
jmp
icebp
dec
sar
in
jl
push
pop
int3
outs
pushf
imul
movs
jmp
cdq
arpl
cld
pop
jge
xor
adc
mov
jp
pop
sbb
stos
scas
mov
xchg
xor
fsubr
pop
inc
push
(bad)
push
scas
in
xchg
add
shl
ficom
mov
scas
xchg
pop
jge
test
sub
and
es
retf
cmp
mov
pop
repnz
ja
cs
xor
lock
mov
ss
and
daa
retf
jbe
mov
or
and
add
pop
dec
bound
push
call
xchg
cmps
jbe
add
dec
(bad)
pushf
sub
shl
into
imul
mov
out
mul
dec
push
and
clc
in
cmps
repz
cli
cwde
int3
into
into
jmp
xor
shr
data16
pop
jle
xchg
jno
lods
mov
mov
sahf
mov
mov
stc
add
pushf
adc
fsub
xor
les
(bad)
xor
inc
cli
xor
mov
jne
push
jl
mov
sub
push
or
(bad)
sbb
jmp
test
in
lods
and
ret
gs
cmp
sar
aas
add
loope
adc
adc
cmc
and
mov
jmp
je
mov
xchg
mov
jb
int3
shr
mov
push
ins
xchg
dec
icebp
lea
xchg
sbb
inc
rcr
adc
jo
jecxz
push
inc
ds
sbb
sub
dec
xchg
fwait
arpl
(bad)
cs
adc
dec
sbb
jecxz
les
xor
mov
adc
data16
mov
ret
and
mov
or
pop
(bad)
aam
inc
push
hlt
shr
xlat
mov
jmp
(bad)
adc
pop
fst
gs
fisub
call
pop
lock
jmp
xor
repnz
repz
lahf
call
movs
adc
sub
jp
jne
lods
test
push
add
pushf
xchg
and
xchg
mov
add
stos
movs
push
call
sub
popa
sbb
add
fild
rcl
dec
sbb
mov
call
dec
out
pop
nop
push
adc
or
push
aas
xor
inc
mov
in
pushf
xchg
(bad)
jo
je
rol
rcr
mov
bound
das
pop
add
adc
in
ss
jecxz
aam
cs
gs
xor
add
add
sbb
repz
stos
(bad)
cmp
(bad)
pop
or
mov
dec
mov
jns
pop
add
mov
ja
movs
repz
aas
sub
cmp
sbb
into
fistp
sar
pop
iret
xchg
ds
cmps
xor
(bad)
test
scas
xchg
cmp
sbb
mov
rol
mov
cmp
add
in
push
mov
ror
loop
sbb
push
and
push
jle
cmps
mov
adc
sub
mov
dec
das
out
je
pop
shl
in
inc
push
cmp
cdq
mov
test
cmp
jb
gs
aam
jne
enter
ss
gs
sub
xchg
push
sar
(bad)
pop
push
sub
shl
shl
cmp
ja
push
dec
xchg
(bad)
nop
popf
sbb
mov
outs
fmul
pop
inc
mov
out
outs
hlt
daa
push
dec
sbb
cmp
add
hlt
or
and
jb
stos
fdivr
jp
sub
cmps
fs
das
mov
mov
jmp
fisttp
adc
push
push
cwde
adc
call
imul
mov
xchg
sub
xlat
and
dec
dec
test
aad
stc
mov
xchg
add
add
push
call
repnz
sbb
pop
jbe
jo
data16
out
pop
(bad)
out
fwait
shr
dec
cmp
jl
lahf
test
push
mov
cmp
mov
fld
popf
into
xor
out
dec
sbb
adc
or
call
adc
fwait
mov
sysenter
cdq
sbb
out
cli
scas
test
mov
adc
neg
(bad)
and
(bad)
xor
loopne
aas
add
in
enter
cmp
out
add
out
cmp
or
sti
add
dec
lahf
xor
or
out
fwait
xchg
dec
and
les
push
ds
or
shl
test
enter
scas
jne
mov
jo
loope
dec
mov
xor
int3
or
lahf
inc
(bad)
aad
pop
xor
adc
arpl
imul
sbb
(bad)
in
imul
stos
adc
imul
xlat
adc
out
dec
sti
jo
pop
icebp
scas
test
iret
fsub
pop
mov
jmp
push
inc
xchg
jo
mov
sar
dec
les
sbb
pushf
jo
and
inc
and
ins
xor
adc
(bad)
pop
icebp
(bad)
in
(bad)
pop
inc
repz
cli
cs
sbb
pushf
out
clc
push
pusha
ret
jnp
push
clc
leave
out
ins
mov
mov
mov
or
gs
out
adc
push
xor
outs
clc
sub
mov
sahf
adc
out
shr
dec
or
xor
in
int3
jecxz
pushf
ror
or
fcmovnu
stos
dec
pop
jo
sub
mov
fcomp
inc
rcr
fdiv
cmp
push
cmps
dec
test
imul
mov
add
sbb
mov
cmps
mul
cmp
js
mov
pusha
jp
stos
cs
mov
lahf
in
pop
fsub
or
ds
jnp
mov
dec
int
dec
or
repz
ins
push
xchg
add
xchg
push
in
jle
mov
sub
daa
imul
sbb
in
out
pusha
test
sbb
cmps
je
or
adc
inc
push
sti
mov
adc
sahf
pop
and
or
les
call
mov
movs
sar
bound
dec
outs
xlat
lods
xor
and
dec
bound
sub
shl
add
fimul
arpl
lock
loop
xchg
jmp
movs
sub
(bad)
stc
fnstcw
jmp
aam
js
popf
mov
mov
cmps
mov
out
mov
lea
add
jnp
adc
cmp
test
xor
lods
jb
push
aas
fdivr
add
jge
jne
push
bound
mov
movs
push
dec
xorps
pop
aas
pop
mov
aaa
ror
jo
sbb
loopne
sub
ss
pop
adc
sti
xor
popf
cmps
mov
jmp
mov
xor
imul
sub
in
mov
jg
sahf
lds
std
fwait
data16
mov
fwait
xor
jmp
cmps
or
hlt
lea
out
push
scas
data16
pop
adc
add
fst
ret
lods
fcom
jns
jmp
mov
push
xchg
in
mov
(bad)
pop
ja
push
scas
add
cmps
jmp
jnp
ss
repz
dec
std
xchg
jmp
hlt
jmp
ret
or
(bad)
dec
add
out
and
stos
lods
bound
sbb
movs
mov
lock
dec
in
fisub
sti
mov
inc
cmc
xchg
jle
jecxz
test
add
sbb
add
adc
jecxz
fsub
test
in
push
loopne
mov
sub
inc
jg
xchg
(bad)
and
data16
sbb
into
sbb
dec
cwde
xchg
xor
clc
sbb
outs
adc
cld
imul
outs
and
lock
out
push
cs
mov
ss
dec
cdq
sbb
in
mov
push
in
mov
in
clc
ds
xlat
push
rol
cmps
dec
fidiv
pop
xchg
aad
adc
jmp
sbb
dec
and
lds
pop
retf
inc
mov
dec
pop
sbb
xchg
inc
add
add
movs
les
out
fild
mov
and
adc
out
xor
outs
icebp
repnz
add
sahf
and
addr16
vmovlpd
scas
(bad)
mov
sbb
and
or
stc
sbb
fsubr
int
cmp
hlt
push
into
ins
adc
inc
stc
cmp
xlat
pop
pusha
leave
xor
test
into
dec
or
jns
push
ret
vpsubusw
mov
sbb
repnz
jnp
mov
dec
ins
dec
inc
dec
inc
ret
xchg
cmp
nop
cmp
and
inc
mov
sub
and
xchg
jne
scas
addr16
enter
outs
sub
fistp
stos
scas
sub
cmps
iret
popa
pop
in
dec
mov
das
test
pop
rcl
xchg
hlt
in
std
je
xchg
dec
in
lods
dec
add
fstp
repz
mov
icebp
mov
inc
imul
pop
lea
and
pop
xor
lea
jmp
pop
movs
fisub
in
xchg
rol
jnp
adc
pop
aad
dec
inc
dec
call
sub
addr16
add
dec
push
das
test
inc
(bad)
out
xor
ss
jnp
in
push
icebp
and
sub
shr
call
lods
sbb
(bad)
mov
fwait
loop
cli
clc
add
mov
aad
pop
test
loopne
sub
dec
jp
sub
sbb
xor
int3
jns
and
cmp
push
inc
cmc
pushf
or
jbe
retf
cmp
shr
push
mov
int3
fcmovu
sti
pop
cmps
popf
sbb
xchg
test
ret
push
jne
sbb
(bad)
mov
adc
(bad)
lds
nop
addr16
push
dec
hlt
imul
in
imul
and
vucomisd
pop
(bad)
cmps
pop
cmc
jmp
addr16
popa
xor
(bad)
or
mov
fdiv
cmps
leave
(bad)
mov
sub
pop
scas
cmp
lds
sbb
sub
ss
nop
xor
stos
rcr
movs
inc
repz
inc
jecxz
rol
ins
iret
xor
mov
mov
jbe
fcmovbe
push
push
mov
call
mov
or
add
mov
dec
aam
push
daa
push
ja
dec
fdivr
shr
call
adc
inc
scas
mov
adc
cmp
ret
test
dec
mov
enter
js
fidiv
dec
sbb
lods
inc
cdq
inc
test
outs
imul
or
jb
or
xchg
adc
xchg
add
ins
mul
push
stos
add
(bad)
scas
push
imul
test
dec
mov
pop
push
mov
pusha
inc
jg
xchg
mov
ficom
pusha
sub
dec
test
push
ins
pop
sub
movs
jno
mov
mov
jg
dec
cld
sbb
loopne
sbb
pop
mov
xchg
dec
sti
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
and
test
fldenv
jnp
fs
mov
pop
mul
inc
aas
sti
dec
inc
pop
and
xchg
inc
fnstenv
jno
pop
neg
sahf
pop
icebp
cld
(bad)
and
fmul
cmp
sahf
retf
cmc
arpl
(bad)
(bad)
sbb
test
adc
int
cmp
inc
jmp
adc
xor
neg
in
inc
pop
les
imul
pop
push
into
idiv
nop
pop
pop
jne
mov
push
adc
dec
fsub
jns
cmc
jmp
sbb
jb
dec
aam
call
sub
cld
sub
scas
jl
add
mov
pop
rol
fs
sbb
mov
xchg
(bad)
scas
ret
pop
jge
lds
iret
lock
inc
hlt
rcl
lods
ins
add
movs
cwd
jp
imul
cld
enter
push
(bad)
leave
jl
push
mov
pop
mov
std
add
stc
neg
inc
jns
push
pop
adc
sbb
and
mov
sbb
mov
fadd
sub
pop
cmc
push
or
sahf
cli
inc
rol
rcl
je
nop
adc
sbb
sub
adc
jo
repnz
test
punpckldq
jo
xchg
inc
mov
push
test
push
outs
jns
pop
mov
js
cmps
push
fisub
out
dec
std
adc
iret
int3
fnstenv
fwait
and
frstor
movs
mov
mov
(bad)
out
adc
enter
mov
retf
sti
jmp
test
cld
aas
add
shl
std
imul
clc
push
cmp
iret
inc
mov
push
sbb
add
loope
imul
jne
leave
mov
enter
or
out
setae
mov
retf
les
sub
out
test
mov
test
mov
call
cmp
pop
jle
rcl
aam
mov
fld
data16
xor
js
shl
push
and
jp
pop
out
mov
ret
push
or
stc
fisttp
fidiv
mov
xchg
or
mov
or
into
shl
mov
pop
(bad)
sbb
test
mov
pextrw
mov
inc
mov
adc
ret
dec
mov
inc
retf
xor
sar
es
jbe
inc
pop
xchg
cmp
fstp
dec
add
xor
add
xor
pop
or
ret
jbe
or
adc
(bad)
sti
mov
movs
fst
or
dec
shl
(bad)
mov
push
and
addr16
sbb
fwait
loop
mul
cmc
push
adc
cs
sub
test
cwde
pop
mov
xor
ret
pop
cmps
mov
mov
and
adc
test
sub
adc
loop
mov
xor
and
inc
jmp
imul
call
outs
gs
cmc
mov
jbe
popa
sbb
jmp
mov
iret
add
pop
rol
mov
sbb
ins
jmp
pop
mov
shl
sub
aaa
xor
xchg
fisub
clc
dec
dec
out
adc
push
or
cld
pop
pop
fwait
sub
mov
jecxz
adc
cmp
test
mov
mov
inc
out
pusha
scas
cmc
pop
loopne
xchg
fimul
sar
ss
xor
inc
jae
leave
mov
cmp
in
inc
cld
test
or
cmp
mov
fisttp
inc
cld
sub
push
(bad)
mov
inc
loope
pop
mov
pop
push
push
lods
(bad)
cs
push
mov
mov
or
jp
fiadd
xor
mov
dec
mov
dec
jecxz
repnz
pop
test
mov
mov
mov
mov
pop
fs
cmp
adc
ficom
out
(bad)
mov
jae
(bad)
push
ja
(bad)
pop
movq
push
jo
ret
int
repz
pop
not
gs
xchg
retf
idiv
and
adc
stos
retf
js
outs
hlt
loope
cmc
lds
and
addr16
stos
sub
adc
add
ror
cmp
cmp
mov
xchg
daa
xchg
jecxz
push
mov
addr16
pop
(bad)
movs
mov
(bad)
movs
imul
dec
inc
cld
push
xor
push
or
push
xor
aad
xchg
push
scas
jmp
add
out
mov
xor
push
loop
xchg
cmp
push
add
pmaxsw
mov
(bad)
lea
inc
out
push
das
mov
pop
loope
xchg
in
add
out
popf
xchg
adc
cmps
sub
shr
or
test
movs
mov
test
pop
adc
es
cmp
mov
cmp
sbb
clc
nop
inc
mov
push
pop
jle
or
mov
dec
ret
loopne
cmp
aas
mov
push
enter
das
into
addr16
or
out
mov
sbb
in
xchg
pop
jle
int3
mov
mov
scas
pop
dec
sbb
stc
shl
pushf
scas
ret
fisttp
push
mov
lods
out
mov
mov
dec
and
in
xor
std
in
dec
test
xchg
inc
test
fdivr
daa
outs
fwait
lods
sar
fisub
adc
and
fidivr
cmp
fs
xchg
mov
popa
pop
mov
and
outs
fidiv
pop
ror
aam
sbb
and
cmps
cmps
ror
xchg
dec
ins
sub
dec
mov
inc
mov
or
repz
pop
inc
mov
mov
inc
jecxz
fwait
xchg
xor
pop
out
xlat
lahf
ror
pop
sbb
xor
jg
cdq
pop
outs
or
inc
mov
scas
push
mov
repnz
xchg
add
imul
inc
mov
ja
(bad)
daa
jmp
adc
sbb
jb
mov
data16
pop
push
fcomi
sub
sub
add
inc
ret
push
rol
addr16
les
scas
lahf
scas
inc
fidiv
nop
rcr
loopne
mov
shl
(bad)
adc
retf
repnz
mov
outs
clc
push
mov
xchg
sub
push
cld
mov
cwde
and
call
ds
xchg
inc
stc
cmps
movs
sub
or
dec
adc
sbb
adc
ret
cli
or
dec
out
xlat
ss
jb
scas
scas
mov
in
mov
stos
in
sub
int
jb
leave
push
fwait
int3
push
sub
sbb
(bad)
rol
pop
aaa
lea
not
fdivr
inc
repz
mov
jmp
scas
ss
and
mov
sti
pop
out
iret
mov
lahf
cmp
scas
mov
mov
(bad)
div
addr16
hlt
sub
out
vpaddsb
jl
adc
movs
push
inc
imul
mov
inc
sub
inc
(bad)
sbb
sub
xchg
das
arpl
cmps
dec
rol
jl
jns
ins
mov
sbb
fisttp
fwait
cmp
rcr
pop
sbb
in
mov
mov
xor
jnp
xor
or
jne
cld
gs
xor
mov
ins
mov
cli
xchg
jno
push
cdq
les
fwait
pop
(bad)
mov
in
xchg
jp
mov
or
push
xchg
push
out
aaa
fisttp
cs
retf
fbstp
cmp
mov
dec
in
cmp
push
jl
pushf
push
mov
(bad)
test
pop
repz
aam
in
(bad)
xchg
inc
cdq
popf
mov
adc
leave
inc
jle
mov
inc
iret
jb
cmp
loopne
inc
test
xor
mov
(bad)
jge
and
inc
test
cmps
push
out
imul
call
test
jecxz
inc
push
and
pop
jo
rcl
cmps
mov
inc
pop
fcom
ds
movs
sbb
and
aad
sbb
mov
add
inc
mov
mov
cld
and
push
mov
inc
pop
leave
test
mov
aam
popf
xor
or
test
into
test
mov
xchg
mov
mov
(bad)
iret
pop
std
bound
(bad)
mov
push
stc
ds
jge
adc
lods
adc
xlat
mov
(bad)
pusha
imul
add
dec
add
mov
inc
and
adc
sub
add
loope
sub
pop
out
les
mov
push
mov
jne
xchg
mov
out
sbb
and
out
clc
sbb
xchg
add
loop
div
outs
pop
es
aas
push
fwait
sub
sub
add
lock
xor
push
(bad)
cli
icebp
jae
inc
pushf
add
addr16
pop
push
push
rol
inc
ds
dec
nop
aas
push
mov
ss
into
mov
out
mov
push
hlt
ret
out
scas
jg
xchg
mov
and
lds
add
sbb
retf
std
cdq
lods
xchg
js
arpl
into
pop
pop
or
outs
shl
cmp
ins
mov
daa
and
push
mov
out
add
jbe
bound
push
xor
fst
jno
xchg
jmp
pop
mov
and
mov
aad
inc
stos
xchg
xchg
inc
lods
mov
fisubr
dec
into
sub
xchg
xchg
jmp
push
icebp
cmp
je
xchg
add
inc
inc
mov
sbb
xor
cmps
(bad)
jle
and
jg
fs
mov
scas
movs
gs
jnp
inc
ret
sbb
or
imul
repz
mov
loope
sahf
dec
jecxz
xchg
scas
mov
lds
aam
arpl
sbb
popa
sbb
adc
je
mov
ds
xor
xchg
popa
jb
xor
retf
or
mov
dec
xor
jl
es
add
int
mov
cmp
loope
mov
sub
dec
mov
test
cli
test
pop
in
in
loop
aam
std
sub
ins
das
(bad)
or
pop
in
inc
dec
call
add
pop
ss
outs
push
clc
imul
movups
pop
sbb
call
call
fimul
sub
pop
add
not
or
outs
push
jo
mov
stos
mov
and
cli
test
mov
add
(bad)
retf
(bad)
push
int
dec
iret
push
and
inc
hlt
xor
cmp
adc
xchg
(bad)
jae
dec
rcl
aaa
push
jne
or
movs
dec
jmp
xchg
test
mov
test
xchg
xchg
sbb
mov
hlt
fucomip
test
push
xor
pushf
jbe
inc
inc
out
into
or
jg
cmps
xchg
sbb
xchg
adc
pushf
fdiv
neg
sahf
and
push
cmp
ror
(bad)
(bad)
fucomip
ja
adc
dec
movs
inc
xor
outs
sbb
xchg
test
cdq
scas
adc
pushf
cmps
mov
mov
dec
fs
fsubr
or
in
jmp
adc
jmp
add
pop
sahf
pop
lods
sahf
daa
or
sbb
cdq
jg
daa
fistp
in
popf
stos
fxch
cs
les
xchg
inc
xchg
and
dec
pop
(bad)
stc
aaa
lock
loopne
sar
sar
test
test
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
xchg
or
add
fwait
scas
loope
sub
les
movs
push
sbb
sub
adc
mov
fisttp
sub
je
lahf
pop
icebp
jle
cli
or
add
add
jbe
not
and
aam
jo
and
push
sbb
stc
test
pop
hlt
mov
jle
es
xchg
test
into
ins
stos
mov
(bad)
daa
mov
mov
enter
out
jg
jmp
add
int3
cmp
out
sub
mov
ret
mov
jp
mov
jae
mov
jge
je
lea
ret
mov
inc
add
adc
cmp
imul
mov
sbb
add
xchg
shl
or
jbe
aas
pop
pop
xor
push
outs
ss
mov
mov
push
pop
cld
out
stc
mov
xchg
jge
mov
(bad)
mov
pop
mov
es
arpl
jp
ss
imul
jg
push
push
les
mov
ins
sbb
push
cmp
jmp
adc
(bad)
imul
dec
jg
xor
jg
clc
xor
fsubr
fs
cmp
mov
daa
cmp
sub
lods
je
push
lods
icebp
test
loop
cmp
xchg
xchg
std
mov
and
sbb
iret
fnstenv
in
cmp
lods
push
inc
sub
sub
xchg
fld
imul
and
outs
jecxz
cmp
repnz
push
enter
data16
ss
int3
dec
mov
add
inc
mov
dec
retf
jnp
mov
out
lods
in
bound
mov
cmp
ins
xor
arpl
ins
cwde
test
dec
hlt
mov
or
push
iret
nop
xor
sar
pop
pop
dec
mov
call
loope
nop
mov
les
dec
ret
cmc
call
push
call
arpl
dec
arpl
ja
xchg
ss
shl
fidiv
mov
mov
mov
imul
add
outs
leave
push
mov
pushf
sub
fild
sbb
in
imul
mov
js
aaa
gs
and
mov
add
jl
dec
pop
repz
bound
vmovups
pop
pop
mov
adc
int3
sub
sub
repz
das
ds
dec
mov
push
sub
and
test
inc
mov
mov
shl
in
push
cmp
mov
dec
lahf
cmp
sbb
adc
xor
ds
or
out
scas
out
je
and
dec
ss
and
test
xor
stc
sbb
out
dec
jno
mov
mov
test
(bad)
lock
cmp
gs
cmp
push
pushf
sbb
mov
jmp
shl
dec
rcl
adc
movs
popf
adc
cwde
and
shr
bound
cmp
xor
pop
in
je
les
mov
aaa
mov
push
call
push
xchg
dec
mov
mov
and
pop
bound
scas
sbb
mov
or
not
mov
and
bnd
inc
jmp
jge
test
cli
ror
mov
inc
jg
mov
xor
xchg
jb
or
(bad)
test
inc
das
hlt
lea
loop
shl
cdq
xor
test
jl
adc
or
xchg
and
mov
dec
pop
mov
cmp
fadd
in
sub
lahf
out
jle
pop
fmul
sub
outs
or
xor
sub
xchg
cdq
scas
jmp
xchg
jle
in
push
ja
int3
add
fadd
arpl
lods
or
cmp
adc
jb
sbb
pusha
jp
dec
inc
sbb
ins
fwait
dec
mov
enter
in
stos
mov
outs
push
lea
scas
call
pushf
jmp
jae
mov
stos
pop
mov
(bad)
jl
test
xchg
das
jmp
js
int
outs
loopne
loope
jmp
dec
repnz
(bad)
rol
dec
test
loopne
es
or
or
jmp
clc
test
ja
fidivr
inc
pop
xlat
fs
ja
and
push
adc
inc
jns
jle
or
rcl
sbb
fild
enter
sbb
or
mov
rcr
sub
inc
mov
inc
adc
je
sbb
and
(bad)
loopne
mov
and
xchg
lds
mov
fild
push
movs
fiadd
push
pop
movs
ret
xchg
aad
jmp
xor
pop
xor
cmp
or
mov
dec
mov
pop
push
loop
data16
sub
mov
(bad)
sbb
in
or
xor
call
mov
inc
push
push
adc
cmp
shr
loop
call
jae
(bad)
leave
sti
push
adc
retf
xchg
mov
mov
push
sbb
ror
call
frstpm(287
jo
xchg
mov
fs
xchg
xor
cld
and
cli
arpl
ficomp
fnstcw
and
rcl
cmps
(bad)
test
stos
or
cmp
xlat
jmp
mov
and
loopne
sbb
cmp
sahf
and
imul
push
sar
inc
cld
shr
push
loop
mov
fstp
clc
push
call
fbstp
cmpps
push
loopne
in
sbb
push
fwait
mov
shl
adc
adc
sub
inc
in
or
shr
or
fidivr
mov
sub
hlt
cmp
push
xchg
inc
in
lmsw
out
rcl
mov
jmp
sar
popa
lahf
in
push
sbb
mov
shld
add
inc
fsubr
mov
jmp
cmp
stos
xchg
or
test
ja
or
dec
push
and
call
out
add
dec
sub
cdq
(bad)
ss
dec
fisub
shr
js
cmp
cmp
xor
xor
inc
xor
scas
jmp
inc
push
sti
test
adc
xor
jmp
outs
adc
nop
lock
xchg
inc
fild
xor
enter
dec
popf
js
push
jg
push
nop
addr16
jnp
xor
sbb
or
not
adc
(bad)
xor
pop
cdq
add
and
jle
or
jmp
mov
xchg
mov
mov
xchg
push
jle
mov
or
mov
sub
dec
retf
xchg
(bad)
push
repz
aad
pop
push
mov
pusha
lds
out
sbb
xchg
inc
aam
dec
imul
mov
or
mov
cmp
lds
mov
scas
inc
cs
lock
mov
popf
shr
fxch
leave
cmps
adc
pop
xlat
ss
xchg
repz
dec
jmp
push
aaa
daa
sbb
jecxz
xchg
mov
and
out
push
pusha
mov
xchg
scas
xchg
cmp
inc
mov
jg
stc
shl
mov
dec
xchg
fdivp
push
int
fs
or
stos
gs
push
retf
in
adc
mov
add
add
out
sbb
or
jg
xor
les
fst
pop
cmp
sbb
(bad)
pusha
dec
pop
aam
push
das
inc
loopne
and
push
add
inc
lahf
lods
icebp
dec
stc
inc
test
test
sbb
scas
cmps
cmp
das
es
jns
adc
call
and
xor
push
xchg
xchg
jl
fnstenv
and
push
cdq
jno
es
xor
add
inc
dec
in
in
xor
pop
sahf
sbb
movs
push
daa
cmp
in
js
test
(bad)
mov
xor
jo
cmp
inc
lock
loop
call
push
and
cmp
and
retf
mov
and
and
sar
fsub
add
lea
dec
sbb
jbe
clc
push
ret
mov
jecxz
inc
or
or
dec
xchg
adc
popf
mov
mov
stos
inc
out
mov
sbb
test
(bad)
jae
jg
iret
inc
das
dec
jg
es
dec
in
push
cwde
mov
adc
jo
in
gs
pop
out
sti
mov
and
loop
sahf
mov
loope
jbe
sub
(bad)
test
call
jecxz
jl
mov
(bad)
jp
xor
sbb
or
xchg
not
ins
adc
les
sub
aaa
outs
cmpxchg
mov
xor
mov
loop
ins
xchg
lods
sbb
mov
xor
xchg
pop
les
xor
sbb
mov
movs
mov
cli
pop
arpl
into
adc
push
stos
or
into
out
inc
adc
imul
cmc
movhps
add
jae
out
fcomp
inc
jmp
mov
cs
sysenter
push
inc
pop
mov
or
in
adc
popa
pop
dec
sub
add
nop
jl
inc
sar
dec
fwait
adc
int
adc
cli
lock
pop
sbb
and
inc
addr16
jnp
out
push
dec
inc
mov
inc
fpatan
imul
cli
or
dec
jb
mov
or
jg
ins
lods
pop
jbe
stos
lahf
push
add
xchg
aam
jnp
pop
mov
pop
xor
aas
jg
jp
push
into
and
es
inc
lock
popa
jg
and
add
xor
lds
or
fcom
and
rcl
jb
leave
add
test
dec
jno
sub
cdq
mov
sbb
daa
vucomisd
push
xor
xchg
fisttp
mov
sahf
dec
into
stos
mov
xchg
adc
es
stos
ss
mov
leave
ret
out
add
ja
cwde
int
pcmpgtb
enter
mov
jmp
cwde
xor
mov
call
pop
jns
imul
outs
ret
mov
dec
cld
sbb
std
pop
jmp
retf
inc
ins
jbe
and
jae
pop
xchg
or
jbe
js
mov
dec
mov
fst
xor
aaa
push
xor
popa
mov
sub
stos
jp
pop
ins
loope
xor
imul
push
int
jecxz
cmp
lods
pop
push
nop
int
stos
cmp
(bad)
int
imul
imul
addr16
mov
int
dec
clc
sti
jmp
push
cmp
rcl
scas
dec
jmp
push
or
mov
(bad)
adc
mov
and
into
outs
cmp
pusha
jle
xchg
inc
(bad)
cmc
mov
jecxz
xor
pop
(bad)
xchg
push
sahf
mov
shr
mov
mov
movs
xchg
imul
xor
imul
adc
adc
and
jnp
shr
push
push
and
add
mul
push
in
imul
xchg
jbe
mov
mov
fs
fld
fwait
js
sbb
in
push
scas
sub
loope
jb
fisubr
or
idiv
fldenv
cmps
es
shr
sub
iret
or
push
stos
mov
and
xchg
shl
es
sub
dec
xor
sub
test
jne
adc
adc
pop
call
loopne
add
add
cli
cmp
ja
out
rcr
mov
inc
dec
lds
inc
cmp
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
mov
jne
out
int3
enter
mov
mov
mov
push
mov
in
in
xor
pushf
mov
sbb
push
inc
loope
std
pop
mov
push
aas
cmp
adc
mov
aas
call
xor
idiv
call
pop
jno
je
out
xor
dec
outs
sar
inc
push
int
jmp
push
or
scas
cmc
icebp
xchg
xor
(bad)
je
push
mov
int
out
push
out
into
jae
jge
fisubr
or
scas
sbb
sbb
stos
dec
and
jl
inc
call
out
and
mov
xor
jne
repz
dec
data16
mov
test
nop
mov
rol
cmp
dec
jg
fiadd
lods
loopne
ror
pop
mov
ret
pop
xchg
mov
(bad)
mov
rol
sbb
in
mov
sbb
or
inc
mov
lods
loope
mov
fwait
mov
dec
sbb
ret
icebp
sub
push
jnp
xchg
aaa
ficomp
mov
mul
pop
cmp
aam
test
push
test
scas
ins
add
pop
jns
mov
push
ror
dec
xor
aam
inc
sti
jnp
ret
loope
outs
iret
sub
or
pop
xchg
popf
xor
movs
fwait
adc
dec
les
inc
and
mov
push
jb
repz
mov
push
mov
outs
push
fmul
fbld
pop
je
xchg
call
loop
cmp
arpl
sbb
xor
jno
add
mov
fwait
repz
adc
out
xchg
xchg
jbe
arpl
movs
push
pop
xor
sub
arpl
pop
adc
ror
or
cmc
jmp
mov
outs
inc
outs
adc
js
(bad)
pop
or
out
fbld
lds
xchg
lods
xchg
inc
fcmovu
jmp
mov
arpl
aad
scas
in
inc
mov
(bad)
int
mov
mov
adc
sbb
add
mov
or
ss
arpl
repz
mov
inc
in
jl
add
ficom
in
sbb
mov
fst
mov
jmp
stos
in
arpl
cmps
iret
xchg
jo
mov
xor
push
sbb
das
icebp
(bad)
sub
jbe
mov
pop
ffree
stos
(bad)
pushf
fdiv
lods
mov
into
mov
les
xor
aad
int
fisubr
in
scas
cs
jne
mov
scas
mov
jmp
in
mov
movs
or
call
xor
mov
js
jg
stos
(bad)
pop
xchg
or
dec
push
lods
loop
loopne
inc
pop
fst
out
loop
jb
or
retf
shl
push
popf
and
cmp
icebp
in
xchg
test
cmp
clc
pop
jb
test
div
pop
in
outs
popf
or
loope
pop
or
pop
xor
ret
ins
test
aas
cmps
xor
dec
repz
sub
fisttp
fldenv
aam
das
jmp
and
pop
pusha
add
mov
out
mov
adc
mov
adc
push
nop
xchg
or
dec
das
int
gs
stos
(bad)
repz
leave
ins
fldcw
push
test
sti
jns
dec
mov
mov
call
scas
xor
sub
aas
ins
popa
icebp
stc
daa
dec
aas
pop
imul
rcl
jl
jb
pop
out
pop
inc
leave
push
in
dec
adc
enter
and
aam
cmp
inc
push
movs
pop
xlat
lds
adc
mov
add
and
push
cmp
cdq
pop
jecxz
cli
mov
loope
shl
mov
std
push
add
int3
ret
adc
outs
fisttp
pop
xor
in
(bad)
add
sub
cli
call
sbb
jae
sub
mov
xchg
ins
pop
sbb
(bad)
dec
push
push
into
add
mov
pop
iret
add
jae
sar
ss
jmp
dec
jecxz
inc
jl
fsub
es
mov
jle
cmps
mov
xchg
jmp
mov
clc
(bad)
and
aad
inc
test
pop
cmp
inc
call
jp
xchg
je
pop
les
into
push
sbb
test
xchg
xchg
cmp
fcom
mov
add
push
add
fwait
dec
jbe
dec
xchg
sub
pusha
call
pop
sbb
enter
sbb
jge
xchg
mov
mov
add
cdq
cmc
push
xor
leave
sub
sub
mov
shr
cmps
in
ret
xchg
mov
mov
jecxz
mov
add
int
cmp
xor
push
mov
ficom
cs
test
adc
fnstsw
fimul
dec
in
imul
push
xchg
xchg
adc
dec
push
sbb
inc
jmp
xlat
fwait
or
out
sbb
cmp
jmp
lahf
inc
ds
adc
cmps
sub
dec
cmps
fst
and
xlat
xor
aam
mov
loope
mov
cwde
push
test
or
jns
outs
fcomp
jbe
mov
jo
daa
cs
iret
cmp
into
dec
(bad)
data16
add
scas
jg
xchg
sbb
test
jo
ins
cmp
(bad)
sub
push
daa
ja
movs
pop
add
mov
cli
fidivr
dec
push
sub
das
lock
lahf
mov
mov
fisubr
inc
js
mov
push
movs
lahf
fistp
mov
sub
mov
outs
push
add
pop
ret
jbe
cmp
cmp
inc
sbb
lods
and
cmp
ins
out
arpl
cmp
add
out
adc
inc
push
cmp
mov
jno
sahf
jmp
cmp
push
idiv
loope
iret
lahf
and
popa
int
iret
ret
out
cmp
dec
dec
fsub
bound
inc
push
push
add
in
mov
sub
ins
pop
mov
outs
std
pop
inc
das
and
bound
adc
push
mov
mov
clc
jnp
cmps
(bad)
or
mov
stc
push
adc
lahf
xlat
and
inc
repz
push
inc
ret
gs
push
push
xchg
pop
or
stos
ins
cmp
mov
sbb
shl
(bad)
retf
jmp
mov
in
cmps
fld
lock
loopne
das
mov
sub
sti
mov
cdq
fcomp
test
ins
inc
or
call
rcl
jno
sub
mov
xor
js
jne
jl
mov
fcom
inc
or
lahf
pop
call
sahf
mov
inc
adc
sub
pop
clc
mov
imul
fs
push
add
dec
fld
mov
aas
cli
stos
or
sbb
dec
test
push
and
push
ror
(bad)
hlt
cmc
dec
stos
sub
mov
(bad)
idiv
sub
cdq
(bad)
jae
sar
mov
iret
xor
sub
xor
or
into
aad
mov
push
pop
out
pushf
mov
dec
in
jae
in
jmp
mov
inc
ror
ins
leave
icebp
ins
jmp
mov
xchg
div
and
xlat
push
(bad)
mov
xchg
in
jns
popa
and
sub
jp
jbe
xor
cmp
inc
jl
push
mov
sbb
(bad)
pop
adc
mov
push
adc
dec
cmp
hlt
sbb
ins
xchg
add
imul
or
vpcmpgtd
loop
or
hlt
add
jnp
test
sahf
mov
xchg
mov
sub
test
mov
pop
mov
xor
dec
jle
call
jnp
xchg
ret
sub
out
scas
imul
aas
and
popa
sbb
das
mov
sti
pop
sbb
xor
test
sbb
inc
mov
mov
and
cmps
ds
ficom
test
(bad)
jecxz
add
push
mov
fidivr
ins
cmp
leave
shrd
inc
lock
sbb
mov
(bad)
pop
xlat
sub
sbb
ret
inc
shl
or
mov
jae
mov
dec
jg
aad
or
jne
daa
xchg
push
fwait
cwde
add
ins
pop
in
jg
cli
add
or
loop
xchg
jg
sahf
iret
int
imul
mov
arpl
test
es
push
add
cmps
jmp
push
sbb
mov
sub
adc
jmp
movntps
xchg
out
loopne
pushf
loope
xchg
adc
je
cmps
gs
pop
pop
aaa
sub
cmp
cmp
mov
mov
out
push
fwait
sbb
fldenv
repz
xchg
jmp
adc
pmaddwd
mov
jmp
shl
dec
mov
push
jmp
pop
fwait
clc
sbb
sub
in
out
mov
out
or
pop
out
cmps
fs
dec
dec
xchg
sub
daa
sahf
test
adc
mov
aam
and
repz
int3
or
inc
mov
into
jo
fistp
jp
pop
dec
xor
jnp
cmp
leave
push
clc
sbb
ins
cli
jecxz
push
out
outs
leave
ret
out
imul
cmc
push
push
daa
sbb
mov
cdq
sub
xchg
call
dec
test
clc
iret
in
test
in
mov
push
dec
xchg
lahf
rcr
xchg
adc
std
out
jle
mov
or
mov
xchg
inc
add
daa
retf
jb
fadd
ds
inc
pop
test
xchg
rcr
aaa
stos
adc
jo
sub
push
pop
enter
adc
js
jbe
push
jo
push
xchg
call
call
fs
nop
sbb
(bad)
cmc
or
ins
inc
fs
je
pusha
pop
mov
xchg
out
out
stos
loop
sub
es
jl
lods
push
mov
dec
dec
shl
xchg
out
cs
jno
pop
jo
sbb
je
in
mov
popa
pop
popf
mov
gs
inc
arpl
out
test
dec
push
test
pop
dec
test
ret
jp
add
add
pop
in
nop
jne
jg
addr16
xchg
mul
adc
mov
out
inc
and
call
cs
inc
dec
jns
xor
inc
add
push
outs
scas
hlt
gs
fadd
addr16
(bad)
jmp
pop
gs
into
scas
mov
int3
sbb
push
fisubr
ret
pop
jae
ja
pop
mov
mov
mov
aad
in
mov
in
jle
(bad)
and
lock
jp
mov
push
inc
icebp
aam
adc
pop
and
repnz
push
add
ds
jns
mov
shr
sbb
adc
push
sub
shl
push
cmp
cmp
bound
mov
out
shl
pop
imul
sahf
fist
mov
inc
dec
cli
sbb
pop
jns
icebp
cmp
or
push
push
jmp
xor
jg
int
add
xchg
stc
xor
xchg
jnp
sbb
mov
mov
(bad)
inc
jne
xchg
adc
push
xor
mov
mov
pop
fsub
aad
push
xor
adc
push
inc
push
js
push
jb
out
and
jns
jno
jg
in
mov
cmp
dec
loopne
sar
jmp
xor
sbb
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
jns
sub
nop
push
sbb
jnp
mov
pop
jnp
retf
cmp
sub
pop
fs
sbb
ficom
lds
and
sbb
jg
not
sahf
aas
loope
add
jecxz
xor
or
lds
mov
push
xor
adc
das
push
mov
dec
push
lods
or
sbb
jecxz
cmc
scas
xchg
ins
fnstenv
sahf
scas
push
lahf
js
jne
push
or
shl
dec
unpckhps
push
push
cmp
mov
not
stos
pop
lds
stos
shl
pop
cmp
ds
lea
jae
es
icebp
shl
sbb
pop
xchg
cwde
pusha
je
shl
repz
outs
push
retf
cld
push
clc
xchg
arpl
sub
scas
and
stos
jge
mov
mov
ss
lds
ss
leave
mov
mov
inc
test
mov
dec
imul
int
(bad)
adc
push
imul
xor
push
shr
jmp
dec
(bad)
imul
cdq
mov
scas
shl
mov
cmps
aas
jl
pop
sti
(bad)
hlt
mov
fsubr
push
dec
pop
xor
test
jl
or
not
push
sbb
in
stos
outs
test
jle
xchg
lock
cmp
xchg
push
arpl
int
xlat
cmp
scas
cwde
cmp
or
cmp
cmp
inc
pop
js
push
movs
pop
jmp
inc
pusha
das
not
daa
cli
pushfw
fchs
mov
in
sar
aad
pop
leave
(bad)
xor
push
pop
xchg
rcl
or
jg
je
leave
ds
add
gs
or
adc
sbb
jmp
test
xor
aaa
stos
cmp
ss
je
shl
cmp
enter
push
retf
xor
ds
movs
xchg
inc
or
push
cs
les
dec
and
xchg
cwde
mov
cmp
sub
inc
mov
std
js
hlt
mov
sbb
push
out
ret
mov
daa
shr
push
outs
and
es
mov
call
or
xlat
sbb
jge
dec
push
ins
fcomp
clc
push
jo
mov
aad
sbb
imul
lock
pop
jl
lock
jno
jbe
lock
sti
arpl
xchg
inc
stc
retf
sbb
push
xlat
or
stos
arpl
xchg
stos
lock
fbstp
cwde
out
inc
dec
in
pop
or
pop
leave
sub
cmp
sbb
dec
out
jns
lock
in
pop
push
mov
psrlw
out
ja
shl
rcl
dec
dec
out
test
cli
jmp
jecxz
ficomp
xor
das
add
xor
cmp
push
mov
fistp
test
adc
mov
jecxz
push
es
imul
iret
and
repz
imul
cmp
inc
fild
jle
int
lea
ret
pop
(bad)
jmp
test
and
(bad)
(bad)
mov
xor
pushf
hlt
gs
mov
pop
sar
adc
call
push
iret
ficomp
cmp
pop
or
(bad)
cmp
(bad)
sbb
push
loop
sub
clc
arpl
push
mov
pop
inc
sub
mov
dec
add
sbb
mov
adc
aaa
ror
sub
xchg
mov
xor
inc
inc
in
outs
xchg
push
jle
into
xor
(bad)
fsub
sub
ins
addr16
xlat
xchg
push
jno
in
fldcw
out
js
sub
das
jmp
fadd
data16
inc
in
xor
and
dec
cwde
inc
rcl
and
xchg
retf
mov
mov
ja
push
mov
leave
ret
sub
pop
fisttp
jno
xor
inc
sahf
fs
cmp
jno
jge
pushf
pop
mov
mov
fsubrp
cmps
retf
shr
js
push
xchg
call
pmulhuw
mov
push
cmps
aaa
jl
popf
cmp
jns
inc
in
and
or
stc
mov
pop
and
add
xor
and
lds
pop
fdiv
in
pop
xchg
jecxz
popa
fist
dec
outs
push
(bad)
call
(bad)
mov
loopne
popa
les
and
dec
jmp
cmps
fisub
call
pop
xlat
and
sbb
iret
mov
gs
adc
mov
cli
jb
jo
jns
pop
and
inc
ret
xchg
inc
mov
pop
fwait
loopne
lods
ds
nop
sub
add
pushf
(bad)
popa
je
call
neg
sbb
sti
push
jmp
xchg
cmp
dec
addr16
imul
sbb
gs
jno
(bad)
es
test
enter
lds
mov
ins
stos
ror
mov
push
aas
cmp
jge
jne
or
inc
xor
lds
cmc
mov
sbb
xchg
aam
pop
push
dec
fadd
add
dec
cmps
fbstp
push
mov
mov
add
ja
nop
add
lock
neg
adc
popf
xor
ret
loopne
pop
or
lds
fs
dec
sbb
out
nop
cmp
(bad)
dec
mov
sahf
and
xor
cmps
inc
jmp
xor
imul
jecxz
rdtsc
sar
cmp
sub
test
add
fmul
loope
hlt
push
ud1
das
inc
stos
push
jb
add
adc
jo
aaa
cmp
or
cmp
mov
popa
(bad)
imul
test
xor
xchg
jb
shl
retf
(bad)
or
das
or
xor
xor
jle
mov
adc
mov
jbe
sub
pop
xor
scas
call
adc
retf
pop
mov
xor
mov
adc
xor
or
lds
not
jle
in
sub
les
dec
sbb
stos
mov
mov
ror
out
push
jl
pop
imul
mov
xchg
out
in
fist
sbb
mov
and
js
xchg
sub
ins
push
push
mov
mov
pop
jl
fst
pop
xor
push
jbe
dec
dec
cwde
icebp
mul
cli
mov
pop
or
xor
imul
add
out
pop
arpl
ins
dec
div
xchg
js
cmp
sub
dec
(bad)
mov
add
push
or
xchg
daa
(bad)
test
push
ins
dec
inc
add
dec
xor
je
or
fisubr
sub
inc
cmp
pop
imul
cwd
mov
mov
aaa
adc
int
adc
push
test
xor
fadd
adc
repz
mov
push
cmp
in
test
mov
jle
xchg
hlt
cmp
daa
jecxz
int3
adc
or
(bad)
retf
lods
push
outs
xchg
cwde
pop
pop
mov
xchg
dec
loope
fild
mov
push
mov
mov
jnp
mov
push
inc
rol
retf
pop
(bad)
push
bound
out
leave
pop
sbb
jo
hlt
and
sbb
lahf
dec
loopne
imul
dec
mov
xchg
pop
dec
into
mov
inc
fimul
(bad)
adc
xlat
(bad)
pusha
fiadd
jb
cwde
jg
mov
in
movs
je
leavew
mov
int
dec
loope
out
pop
sahf
adc
or
loop
adc
pop
js
(bad)
mov
mov
fnsave
pop
sbb
sti
out
push
test
add
jno
xor
adc
lea
sahf
jnp
fdiv
mov
fs
mov
rcr
frstor
pushf
arpl
xor
xchg
cdq
scas
cmps
enter
mov
adc
xchg
fwait
(bad)
pop
mov
call
ja
push
or
cmps
movs
popf
pop
cli
fsubrp
xor
lahf
mov
mov
iret
scas
scas
cmc
adc
imul
or
jne
xchg
mov
ja
jmp
shl
push
(bad)
xchg
sub
call
push
cmp
leave
fs
mov
das
dec
cmp
retf
test
push
pop
daa
inc
retf
dec
cmp
jecxz
sbb
test
jne
add
in
mov
mov
das
lock
aas
in
fld
clc
das
adc
dec
xchg
fbld
or
xor
mov
imul
sub
xchg
out
pop
pop
jmp
cld
(bad)
or
mov
sub
jge
xchg
inc
jns
pop
or
popf
dec
fwait
push
push
fs
dec
loop
jp
lock
dec
or
and
mov
ja
hlt
lods
sbb
inc
inc
dec
(bad)
in
ror
pop
dec
sti
dec
add
jns
loope
jmp
fs
sub
cmps
ins
inc
xor
push
cli
loopne
fwait
test
aam
gs
mov
xchg
xchg
dec
out
lods
cwde
push
xor
cli
inc
dec
stos
xchg
jns
ret
mov
shl
cmps
popa
and
mov
(bad)
call
pop
lods
mov
sbb
cld
or
mov
fistp
pop
(bad)
push
xor
nop
jecxz
aas
mov
jno
imul
dec
sti
mov
or
jne
and
push
sti
push
jbe
jb
cli
and
sti
push
adc
not
cmp
and
and
aad
mov
push
fst
cmps
gs
adc
sbb
in
add
xchg
jge
jecxz
push
or
sub
into
mov
inc
xor
aaa
test
sar
pushf
inc
call
lock
leave
inc
(bad)
adc
and
jns
xchg
pop
repnz
mov
dec
pop
icebp
mov
mov
jp
mov
neg
loopne
movs
mov
mov
ins
in
cmps
add
xchg
push
ror
ret
push
imul
sub
imul
dec
bound
cmp
sbb
inc
idiv
gs
jae
sub
std
pop
jmp
pop
mov
jg
pop
repz
mov
loop
add
daa
xchg
movs
(bad)
xchg
xchg
jp
lea
call
jle
fdivrp
sbb
repnz
xchg
or
fst
push
retf
jae
jle
into
xchg
cmps
inc
jb
dec
jl
ror
aaa
fidivr
add
repnz
(bad)
retf
sbb
pusha
inc
push
jb
xchg
out
lock
sbb
xor
mov
shl
adc
or
xor
and
leave
mov
xchg
cmp
fwait
ror
in
pop
test
adc
cmps
push
(bad)
mov
les
push
sbb
cmps
pusha
lods
les
push
adc
add
arpl
dec
push
jne
sub
cwde
mov
and
imul
rol
daa
aam
pop
icebp
test
cmc
mov
cdq
dec
daa
sub
cmp
pop
mov
or
jecxz
jnp
mov
repnz
retf
arpl
es
xor
out
popa
inc
cmp
xlat
fild
dec
cld
sbb
pop
in
das
dec
adc
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
sub
pop
fnstcw
mov
pop
addr16
jne
cdq
inc
pushf
xchg
mov
addr16
cmp
and
iret
fisubr
test
repz
das
loope
add
and
(bad)
xor
outs
test
pop
sub
pop
cmp
adc
mov
pop
sbb
fsubr
sub
test
sbb
and
adc
jnp
sub
pop
inc
into
sub
loopne
loope
dec
scas
out
jns
mov
jmp
or
mov
jmp
mov
push
inc
adc
in
loope
stos
jbe
stos
jmp
inc
mov
rcr
outs
sub
std
pop
shr
add
jge
scas
mov
and
jecxz
cmps
adc
outs
lds
shl
mov
xor
mov
cmc
and
xchg
push
cmps
iret
add
je
add
addr16
xor
pop
outs
and
cmp
adc
vhsubpd
or
aas
cmps
and
mov
loope
fcomi
jge
cli
das
pop
or
in
(bad)
mov
sub
test
ds
test
inc
cmp
cmp
popa
sbb
daa
repz
push
cmp
fdiv
repnz
loope
pop
es
jae
mov
in
cmp
out
in
push
scas
arpl
xchg
retf
lods
(bad)
out
pop
cmc
ins
fnstcw
outs
test
xchg
rcr
(bad)
mov
xor
test
ins
popf
icebp
jns
mov
cld
imul
lock
jle
rcr
mov
movs
xchg
pop
cmps
enter
bound
enter
xor
xor
out
jno
jmp
and
mov
test
push
pop
dec
jp
ror
int3
mov
push
(bad)
add
xchg
shr
pop
adc
neg
sbb
pop
hlt
push
mov
ficomp
and
out
xor
mov
jb
cld
fwait
popa
fwait
mov
sub
shr
std
clc
jge
mov
mov
pop
inc
pop
mov
iret
dec
add
gs
mov
out
cmp
clc
in
arpl
arpl
nop
retf
rcl
imul
les
inc
pop
add
sbb
pop
cmp
add
push
pop
jmp
mov
arpl
iret
cmp
inc
popa
xchg
ins
(bad)
fs
cli
cmp
jecxz
xchg
iret
lods
retf
xchg
mov
ins
push
jo
repz
mov
fisttp
fcom
fadd
sub
sti
push
add
mov
mov
mov
repnz
mov
aam
mov
inc
in
repz
dec
xchg
into
fistp
adc
mov
or
xchg
jne
retf
xor
stos
pop
sub
aas
jno
(bad)
jmp
pushf
repnz
sub
rcl
cmp
aaa
push
sub
shr
jle
add
mov
pusha
cmps
cmps
aas
(bad)
jb
adc
fsubrp
adc
xor
scas
mov
stos
(bad)
mov
mov
aas
xor
mov
cmp
adc
push
jbe
mov
xchg
sbb
add
jnp
lea
enter
sub
das
inc
xor
div
dec
add
mov
xchg
xchg
xchg
stc
push
or
nop
js
add
les
cmp
repz
inc
enter
mov
xchg
sbb
inc
stc
cld
sbb
js
out
shr
pop
in
push
adc
sbb
mov
movs
xchg
sbb
div
fcmovb
and
sbb
mov
mov
movs
sub
mov
loop
and
(bad)
outs
jbe
sub
daa
into
mov
push
aam
pop
mov
(bad)
shr
jbe
cmp
(bad)
xchg
xchg
hlt
js
mov
addr16
pop
jno
jecxz
mov
push
pop
in
pop
sahf
jl
sbb
sbb
mov
pop
div
jne
xchg
mov
ins
lds
cmp
xor
enter
int
adc
push
sub
xlat
xchg
ret
push
int
mov
pop
icebp
inc
sub
imul
pop
stc
cwde
sbb
and
mov
cmp
xchg
rol
pushf
inc
aam
xchg
imul
and
cld
stc
js
and
mov
and
mov
inc
mov
inc
icebp
je
add
add
stos
retf
test
push
inc
shl
ins
adc
xbeginw
mov
test
dec
and
out
cmps
loopne
mov
jecxz
movs
in
bound
jb
shl
mov
adc
inc
shr
push
cli
cld
rcl
cdq
pop
ret
int3
dec
outs
sbb
je
imul
lods
sahf
cmp
scas
(bad)
ror
xchg
mov
cmp
jo
dec
jle
pop
or
mov
xchg
sub
shl
daa
loopne
retf
sahf
jnp
mov
fld
lock
rol
mov
push
xchg
mov
jb
jge
sub
call
aas
mov
jnp
jbe
or
and
push
fild
lods
(bad)
cli
inc
lds
rol
add
ret
mov
pushf
mov
pop
cdq
cmp
(bad)
js
rcl
jb
scas
test
adc
ins
xchg
mul
mov
cmp
ret
jge
cwde
push
sbb
sbb
imul
cmp
xchg
mov
popa
inc
fwait
ja
mov
imul
or
mov
adc
enter
mov
jmp
popa
and
shl
xchg
sbb
mov
retf
ds
int
push
cmp
adc
loopne
push
mov
in
ret
icebp
and
cli
call
enter
loop
mov
out
xchg
dec
jle
mov
add
scas
xor
sub
call
mov
addr16
stos
pop
fwait
and
ds
fnstsw
add
repz
cmp
sbb
jmp
enter
sub
aad
xlat
cmovns
push
pop
and
jno
fidivr
mov
sub
or
jns
push
in
add
or
arpl
mov
and
xlat
push
ja
test
nop
sti
mov
fcom
pop
jp
leave
pusha
out
idiv
xor
lahf
fs
movs
xchg
pop
jp
xchg
pop
push
add
mov
cmp
dec
inc
int
cmp
nop
jne
lahf
test
cld
into
xchg
dec
push
jae
js
lods
es
push
jg
(bad)
jl
push
adc
cmp
mov
jle
mul
mov
ins
mov
jecxz
inc
pop
xor
fldcw
jb
jg
pop
ins
pop
movs
or
sar
stos
and
pushf
inc
push
and
js
dec
ss
in
ficomp
cmp
fmul
sbb
ins
stc
cli
not
cld
not
mov
call
test
dec
push
xor
fwait
xor
jl
push
or
enter
sbb
sub
pusha
xor
mov
icebp
pop
ins
push
inc
adc
mov
pop
pop
cld
cmp
ror
or
adc
xor
add
mov
rol
pop
out
sbb
cmp
sbb
push
or
mov
jnp
push
fsub
jmp
pminsw
dec
div
adc
into
mov
jg
jnp
stos
inc
inc
sbb
xchg
dec
fisub
lahf
jp
jno
ffree
jg
mov
lods
fidiv
cmp
inc
cmp
ficom
fs
stos
hlt
or
dec
and
out
jmp
leave
popa
push
pop
push
pop
icebp
mov
dec
adc
and
jb
dec
cmp
sub
es
dec
dec
add
cdq
jb
sub
sbb
jo
retf
call
fist
scas
mov
fwait
xor
in
je
jg
push
aad
ret
and
dec
jmp
mov
in
sub
pop
retf
cmp
dec
mov
dec
mov
and
push
nop
jno
jnp
add
inc
mov
cmp
sbb
mov
xor
jno
(bad)
jae
test
aam
shl
aad
jp
jns
pop
or
jl
(bad)
sub
add
scas
das
or
mov
fsincos
pop
shl
arpl
int
rcl
mov
ret
fldcw
inc
jno
leave
pop
lea
sahf
or
pop
push
dec
cli
mov
sbb
push
pop
adc
out
fwait
mov
mov
mov
cld
and
cmps
loopne
xchg
outs
fist
mov
enter
inc
cmp
call
jne
dec
or
xor
rcr
scas
push
cmps
xor
push
mov
mov
out
aaa
add
ins
neg
std
fstp
sub
mov
push
lea
cmp
adc
ror
popa
xchg
xor
fisub
das
adc
push
call
adc
xchg
pop
fcmove
mov
jnp
repnz
adc
jne
(bad)
test
add
push
xor
add
stos
lahf
lahf
push
rol
xchg
daa
or
pop
sub
adc
cmps
cmp
pop
push
push
adc
scas
pop
or
(bad)
push
in
pop
fwait
ret
dec
add
lods
(bad)
jge
jae
bound
popf
mov
icebp
add
cmc
cmova
outs
stos
fisubr
pop
ret
lahf
push
imul
aam
pushf
mov
lea
mov
adc
movs
jp
pop
push
fdivr
test
scas
inc
and
out
push
dec
pop
xchg
dec
jnp
dec
jmp
xchg
mov
jne
fs
pop
(bad)
imul
cmp
ins
cmp
pop
pop
call
cdq
cmp
imul
rcl
fdivrp
xchg
(bad)
push
ret
test
lods
pop
lods
mov
(bad)
je
push
cmp
in
mov
mov
(bad)
mov
sbb
pop
or
xchg
and
loop
stc
push
out
cmc
mov
test
push
cdq
out
jle
into
xor
jae
call
dec
aas
ds
add
cmps
push
(bad)
rol
or
push
cmp
adc
mov
pushf
popa
dec
push
push
call
fbld
cmp
xlat
mov
push
or
mov
out
mov
data16
int
retf
dec
sub
imul
xchg
and
adc
cdq
mov
xor
jo
sbb
push
aam
sub
aad
dec
(bad)
cmp
retf
sub
arpl
ins
(bad)
mov
call
and
mov
jge
mov
add
mov
sbb
pop
daa
std
pop
mov
ins
fldenv
ficomp
or
aad
pop
pop
bound
movs
(bad)
lahf
mov
aaa
or
mov
ror
pop
aam
gs
dec
xchg
test
(bad)
mov
push
sub
scas
adc
xchg
lods
es
nop
push
dec
cmp
adc
ins
mov
xchg
mov
and
or
inc
lds
sub
daa
movs
mov
push
sbb
dec
scas
das
and
and
sub
div
(bad)
cmp
pop
xchg
mov
jnp
lods
(bad)
ss
mov
pop
or
mov
aas
push
neg
shr
mov
push
dec
pop
inc
xchg
(bad)
cmp
xchg
out
std
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
setb
int3
retf
aam
xchg
jge
in
xchg
adc
mov
pop
addr16
aad
stos
in
adc
fs
jno
fnstcw
jnp
mov
xchg
sahf
aas
loope
add
sub
add
dec
dec
mov
(bad)
pop
outs
out
inc
(bad)
and
fbld
dec
iret
and
cmovle
mov
(bad)
(bad)
lahf
sub
enter
ret
repnz
push
or
pop
sub
nop
sbb
mov
xchg
retf
xchg
shr
out
fisub
dec
out
push
mov
sahf
mov
mov
retf
sub
add
cmp
in
ins
inc
lods
jmp
outs
scas
shr
jmp
jle
cmp
adc
shl
push
pop
pop
mov
repz
pop
test
mul
inc
xor
jb
cmps
mov
js
jecxz
std
lods
cmps
xchg
and
idiv
pop
pop
repnz
fisttp
movs
int3
mov
ss
stos
inc
fucomi
in
fwait
add
fnsave
shl
mov
call
popa
xor
cmp
mov
mov
push
shl
aad
call
xor
fmul
pusha
dec
pop
imul
loop
adc
stos
fstp
ret
mov
fisttp
cmps
int3
jecxz
sbb
jno
std
xor
push
aam
cdq
pop
sub
pop
sub
inc
cmp
inc
mov
and
popa
sahf
cmps
je
xor
xor
cmp
fcomp
repz
pop
add
popa
addr16
dec
sub
dec
in
push
les
outs
inc
into
pop
std
mov
lea
ja
test
sbb
shr
aam
add
ror
outs
pushf
push
int
cmc
sub
icebp
nop
lea
(bad)
cmps
push
push
jle
jmp
call
adc
mov
push
cmp
(bad)
sbb
imul
xor
mov
enter
clc
dec
sub
or
dec
daa
imul
(bad)
pop
js
mov
fnstenv
cmp
and
in
mov
push
bound
lahf
push
xchg
dec
xlat
jno
jle
push
sbb
inc
sahf
jbe
cmps
sub
or
inc
stc
lahf
in
push
daa
sub
push
pushf
ret
inc
clc
mov
mov
xchg
cld
call
add
add
pop
std
mov
adc
xlat
mov
iret
jle
(bad)
dec
sbb
xchg
xlat
bound
fsub
and
aam
in
jp
sbb
dec
dec
sahf
js
in
shl
cmp
std
xchg
ss
out
lock
dec
or
dec
(bad)
not
mov
hlt
(bad)
xor
call
mov
jg
mov
jbe
jg
fucomp
cmp
(bad)
jbe
ja
movs
dec
js
jp
(bad)
dec
mov
and
adc
ja
cmc
mov
das
nop
xlat
adc
lods
jmp
push
(bad)
adc
add
popa
xor
call
push
push
leave
popa
(bad)
hlt
cmp
dec
inc
jne
je
pop
pusha
cli
fisub
shr
hlt
arpl
int
xchg
xor
scas
push
movs
stos
push
jg
rcl
call
cmp
call
cmp
mov
mov
mov
adc
xchg
movs
sub
imul
or
ins
sbb
jle
repz
mov
out
mov
dec
leave
mov
cmps
lods
mov
jno
mov
cmp
xor
inc
jge
xchg
scas
inc
xor
xor
jecxz
xlat
es
jp
add
lds
jmp
lahf
mov
sub
xor
outs
push
stos
outs
mov
sub
cwde
and
aaa
mov
xchg
addps
cmp
rep
push
(bad)
jp
mov
jb
scas
cmp
pop
pop
cmps
mov
push
inc
mov
add
dec
xchg
int3
test
ret
inc
cmp
add
xchg
push
mov
int3
xchg
pop
scas
jmp
out
psrld
rol
ret
jecxz
out
outs
outs
fstp
mov
mov
enter
pop
inc
sub
push
cmp
or
test
xor
(bad)
pusha
shr
pop
add
lea
in
dec
int
jl
mov
popa
ror
xor
in
push
scas
test
add
jmp
test
push
sub
dec
mov
fisub
lahf
and
adc
pop
and
xchg
push
sub
pop
into
sbb
mov
retf
or
mov
push
sbb
xchg
cld
adc
adc
or
or
adc
jle
aam
xchg
pop
cdq
adc
fs
and
repz
aam
sbb
imul
lock
pop
cmc
bound
cld
sbb
jmp
mov
fbstp
dec
jmp
mov
add
(bad)
dec
pushf
lahf
mov
dec
sub
mov
call
sbb
push
jle
cmp
jb
shr
xchg
daa
int3
and
mov
mov
loope
cmp
arpl
(bad)
and
cmps
aam
cmp
adc
mov
pop
ja
mov
push
jg
mov
jns
cs
sahf
cdq
dec
jg
mov
scas
mov
adc
mov
cmps
repnz
mov
xor
out
jmp
jge
or
and
std
das
inc
aam
(bad)
jle
push
fwait
ret
inc
push
ret
retf
mov
loop
push
mov
mov
ins
les
sahf
ror
pop
mov
arpl
dec
cmp
cdq
imul
and
int
stc
add
xchg
add
pop
lock
mov
bound
mov
vpshufd
das
pop
lods
xor
aam
pop
out
cmp
sub
iret
or
push
(bad)
xor
scas
inc
pop
sahf
ffree
mov
data16
inc
mov
call
(bad)
xchg
aam
and
jmp
xor
ror
fidiv
inc
loopne
test
outs
sub
movs
call
fcom
fimul
fimul
inc
dec
sub
xchg
or
div
cmp
shl
pop
iret
ins
in
xchg
push
sub
ins
and
mov
cld
imul
sub
lock
bound
jno
or
inc
fst
(bad)
loop
add
movs
inc
dec
add
xchg
inc
lock
xchg
hlt
mov
jo
test
ja
sub
das
mov
sbb
dec
fmul
jecxz
dec
daa
cld
jo
stos
into
pop
mov
mov
jge
mov
jno
mov
ins
mov
test
pushf
or
and
(bad)
sbb
(bad)
into
xor
xchg
retf
sar
pusha
loope
jno
xchg
mov
mov
push
jae
cmp
fst
in
mov
xor
outs
std
mov
mul
arpl
fadd
loope
icebp
push
ins
inc
mov
cdq
dec
movs
ja
movs
jp
popa
inc
cmp
sahf
sti
push
imul
ret
and
cmp
outs
out
fisttp
aad
xor
pusha
into
xlat
adc
retf
and
out
iret
cmove
aaa
push
ins
aas
add
leave
dec
cld
cmp
mov
xchg
jae
(bad)
push
cmps
hlt
mov
pop
hlt
pop
in
cmp
test
xlat
sbb
mov
adc
data16
mov
outs
jne
enter
ja
aad
dec
cwde
xor
inc
mov
in
inc
ret
arpl
or
xchg
inc
or
add
sub
std
(bad)
cli
call
push
xchg
movs
jbe
sahf
mov
arpl
cmp
jb
jecxz
ds
clc
mov
or
shl
mov
outs
fwait
retf
dec
jmp
(bad)
mov
add
sti
popa
add
push
hlt
mov
icebp
les
dec
scas
nop
pop
in
cmps
sub
and
retf
movs
imul
fcomip
rcr
xchg
inc
(bad)
stos
leave
ins
nop
mov
out
and
(bad)
cmp
test
jae
int
cmps
pop
inc
sub
jb
(bad)
sub
out
movs
std
adc
or
dec
and
dec
inc
inc
sbb
ds
push
mov
shl
out
mov
jle
mov
nop
dec
mov
jmp
(bad)
cmp
dec
pusha
arpl
lahf
mov
pop
call
outs
js
(bad)
mov
sub
(bad)
xor
or
fild
and
ror
repz
xor
mov
push
mov
fadd
mov
adc
mov
(bad)
in
pop
push
xor
popf
sti
add
clc
mov
or
mov
xor
jne
div
mov
stos
movlps
adc
mov
shl
sahf
outs
cmp
test
shl
push
(bad)
pushf
sbb
sbb
pop
lea
clc
outs
enter
or
jb
jmp
jge
add
(bad)
pop
push
jne
jns
lahf
xlat
jno
xor
outs
stc
push
inc
in
scas
into
jb
test
jl
pop
add
jl
dec
xchg
inc
fadd
jle
into
or
sub
mov
(bad)
add
test
je
mov
mov
cmp
popa
in
jo
ins
mov
sub
fnstenv
xchg
in
loopne
addr16
cmp
gs
aad
pop
lock
or
sub
jle
movs
data16
js
add
hlt
sub
mov
and
or
inc
mov
pop
fdivr
adc
pusha
call
jbe
xor
mov
shl
sub
jmp
or
retf
pop
add
jle
push
addr16
out
out
in
js
dec
inc
inc
cmp
xor
xor
or
adc
popf
pop
lock
mov
sub
sbb
xchg
iret
rol
mov
dec
sti
mov
push
(bad)
test
cmp
mov
popa
sub
jmp
jge
dec
cdq
mov
xor
in
stos
int
xchg
int3
stos
sahf
inc
mov
mov
mov
lock
or
inc
retf
rcr
mov
jecxz
pop
cli
fs
sahf
jge
and
jl
adc
jnp
ds
pop
pop
arpl
adc
loopne
pusha
std
es
pop
das
jp
mov
push
dec
xchg
fdiv
test
mov
out
pop
pop
mov
cs
or
imul
sahf
sti
jne
push
fwait
rcl
mov
jmp
daa
aaa
mov
repz
es
movs
push
jb
in
jno
push
mov
lds
push
mov
hlt
mov
sahf
xchg
pusha
mov
daa
or
push
fild
jge
aad
xor
pop
dec
repnz
fidivr
call
fidivr
ficomp
pop
les
dec
adc
leave
adc
push
mov
or
or
retf
mov
dec
in
pop
movs
pop
es
pop
hlt
outs
test
xor
iret
add
add
sbb
jle
add
scas
xor
icebp
jb
or
movs
or
cmc
ja
out
rcr
mov
iret
cmp
repz
fadd
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
push
data16
fs
xchg
xor
ins
adc
xor
jmp
push
cmps
mov
jecxz
sub
les
mov
mov
mov
sahf
pop
icebp
cld
(bad)
and
hlt
(bad)
adc
and
ret
imul
test
push
mov
pop
lock
inc
scas
fnstsw
daa
ror
loopne
jb
push
pop
mov
outs
js
into
mov
mov
fcomp
dec
xor
test
retf
imul
mov
(bad)
xlat
inc
jecxz
mov
and
or
in
shld
out
add
push
xchg
cmp
sub
(bad)
(bad)
sar
retf
sub
xchg
es
popa
mov
xchg
mov
mov
enter
xor
not
mov
pop
mov
imul
out
movs
mov
mov
leave
pop
(bad)
outs
dec
dec
test
mov
sbb
rcr
sbb
jge
ret
jge
cmp
stc
pop
dec
adc
popa
add
cmp
jmp
jmp
lds
lea
add
xchg
ds
push
fsub
sub
adc
xor
loop
jne
sar
mov
int3
(bad)
mov
shl
cmp
fstp
data16
movs
adc
mov
repnz
mov
sahf
in
stc
aam
xlat
or
sub
sbb
repz
push
adc
inc
icebp
lahf
loope
and
rcl
js
idiv
cdq
sbb
xor
mov
adc
mov
dec
jb
ja
fisub
nop
mov
punpckldq
sub
leave
mov
fiadd
fadd
setae
bound
xchg
jb
ins
cmp
push
ficomp
sahf
cmp
clc
into
mov
add
mov
pusha
mov
xacquire
jae
sub
or
mov
scas
vunpcklps
ret
retf
jno
je
jns
pop
je
popa
adc
jmp
and
lea
cmc
je
jle
test
daa
int3
dec
cmp
sbb
xchg
sbb
xor
enter
aad
mov
enter
sub
stc
pop
retf
popf
pop
aaa
cs
ret
jmp
or
cmps
int
adc
int
pop
cmp
in
(bad)
and
cmps
fidiv
(bad)
ins
pop
cmps
gs
xchg
or
ds
test
or
fwait
cs
(bad)
xlat
into
std
mov
test
iret
sbb
nop
das
shr
sti
jmp
shl
add
mov
or
xchg
repz
call
mov
inc
add
mov
call
inc
cs
in
fwait
pop
cmp
and
stc
dec
loop
jge
push
xchg
test
xor
addr16
out
dec
inc
pop
call
sub
in
xchg
cmp
dec
or
mov
add
call
ror
dec
rcl
or
out
pop
jne
outs
popf
dec
call
jge
add
and
ret
mov
mov
cmp
(bad)
rcl
scas
sahf
iret
into
push
xlat
shl
fidivr
int3
jno
dec
mov
push
sub
lgs
sbb
xor
dec
jmp
xor
shr
sbb
dec
and
mov
cli
rcr
in
mov
into
push
jle
pop
and
inc
call
stos
xor
pop
sub
inc
dec
test
int3
sbb
sbb
mov
(bad)
fdiv
push
stos
cmp
mov
in
pop
pop
(bad)
push
adc
jge
cli
stc
xchg
outs
mov
cmp
xchg
cdq
leave
xchg
push
and
cld
or
xor
xchg
xchg
or
test
push
mov
mov
mov
rol
aad
add
aam
dec
addr16
fidivr
out
cld
push
retf
mov
or
sbb
call
daa
xor
(bad)
jge
mov
call
push
pop
pop
dec
ins
mov
sbb
xor
push
xchg
push
jb
popf
dec
loope
jnp
cmp
gs
jp
mov
xor
cmps
(bad)
mov
loop
mov
iret
xor
rol
add
rol
sub
rol
jl
sub
adc
or
es
loope
movs
xor
push
push
retf
push
(bad)
xor
call
jle
out
(bad)
sbb
frstor
push
or
jp
pop
jb
(bad)
mov
dec
imul
ja
jns
pop
push
push
add
clc
fild
cmp
imul
test
fucomip
pusha
lods
push
ja
scas
mov
and
pop
nop
std
xchg
mov
adc
fwait
pop
addr16
stos
pmaxub
retf
xchg
(bad)
xchg
aam
push
inc
mov
cmc
fsincos
outs
push
js
add
shl
sub
retf
mov
shl
and
add
mov
xchg
or
push
xchg
dec
jg
cmps
int3
jle
data16
adc
cmps
cmp
fldcw
enter
sbb
push
mov
jo
add
adc
(bad)
cmps
ds
cmp
in
cmc
out
test
jne
mov
test
mov
out
adc
call
dec
ins
mov
(bad)
stos
adc
out
jnp
sahf
add
cmp
js
xor
or
inc
jl
aaa
mov
xchg
xor
add
ret
push
mov
or
cs
push
lods
pop
fbld
cmc
movs
std
lock
and
inc
xor
stos
mov
popa
pop
iret
mov
mov
mov
or
fwait
mov
inc
jle
retf
lods
out
into
jg
sub
jl
mov
fmul
xor
or
stc
add
ror
dec
cmps
add
xor
addr16
ja
fcomp
out
pop
or
mov
jno
(bad)
cmp
ins
scas
aaa
jnp
in
pop
aas
leave
sub
in
inc
in
lds
mov
jnp
movs
mov
jp
push
ffreep
pop
or
dec
stos
js
outs
pop
add
cmp
xchg
in
repnz
xchg
xor
out
sub
cmps
sti
(bad)
xor
les
inc
aad
fild
push
dec
push
pop
(bad)
test
xchg
mov
packsswb
mov
out
in
outs
inc
adc
jae
mov
sub
das
pop
mov
xlat
xchg
mov
rcr
jb
daa
imul
cmc
adc
cmp
call
sub
pop
scas
adc
sti
scas
iret
jl
movnti
push
aaa
loope
jae
push
mov
sbb
mov
sub
das
pushf
dec
pop
inc
cmps
add
xor
cld
outs
imul
movs
ja
sub
cmp
aad
addr16
hlt
ins
xor
add
inc
iret
ja
add
lds
lea
cld
mov
dec
pop
xor
add
cld
test
mov
mov
mov
sbb
es
sub
jl
and
xor
mov
out
stc
push
mov
sub
inc
test
dec
lods
xor
ror
xchg
int3
in
xchg
mov
mov
mov
movs
add
pop
push
aad
imul
(bad)
je
sbb
inc
pop
mov
daa
loopne
mov
jge
(bad)
dec
loopne
imul
pop
xchg
jae
shl
push
add
sti
imul
aaa
popf
frstor
push
push
push
sbb
push
call
pop
retf
pop
fiadd
mov
pop
and
push
push
jg
and
das
fwait
sar
add
retf
js
addr16
cmp
sub
mov
pminub
xchg
fiadd
cmps
ret
mov
jo
mov
xchg
jnp
xlat
sbb
cmc
pop
adc
dec
ror
or
sbb
xchg
ja
into
mov
in
add
and
jge
stc
jns
jbe
pop
cld
mov
cmp
push
(bad)
arpl
addr16
shr
call
into
add
push
push
mov
mov
ins
mov
test
jl
rol
push
fs
jle
jl
(bad)
mov
xor
or
pop
sub
sub
pop
pop
sub
mov
mov
or
inc
cmp
jmp
dec
(bad)
mov
sbb
push
rol
fbstp
push
mov
stc
cmps
push
sbb
sub
inc
cmp
cli
pop
push
arpl
jns
and
jmp
sub
retf
test
cs
mov
sub
and
mov
outs
ret
cdq
cmp
test
aam
fwait
call
mov
inc
ret
mov
pusha
xchg
dec
mul
push
or
std
arpl
push
cmp
(bad)
fistp
mov
xor
mov
ret
dec
adc
out
retf
out
sbb
sub
xor
mov
imul
imul
pop
xchg
mov
(bad)
loopne
pop
adc
adc
and
xor
movs
inc
nop
add
inc
mov
(bad)
jecxz
mov
test
cmps
cs
nop
call
cs
cmc
cmp
fst
inc
ret
inc
xor
add
and
push
and
inc
add
push
iret
lods
ds
loope
sahf
push
xor
jno
ret
(bad)
popw
jg
popf
dec
inc
adc
sahf
adc
fs
xchg
ret
je
push
sub
add
imul
fmulp
jbe
jnp
push
aas
and
cmc
jmp
jle
push
mov
and
push
xchg
cmp
adc
push
push
sbb
xor
mov
in
loop
(bad)
aam
rcr
jae
xchg
mov
mov
inc
pop
sbb
jl
mov
adc
mov
ja
dec
push
mov
loop
sbb
retf
add
stos
test
or
mov
dec
loopne
jle
sbb
out
xchg
call
and
cmp
fisubr
push
sti
dec
imul
fsubr
or
stos
gs
data16
mov
mov
mov
ret
stos
aad
(bad)
jns
jmp
mov
cli
fisub
std
std
inc
push
mov
nop
(bad)
int3
lock
pusha
mov
mov
mov
adc
push
data16
cmp
lea
std
sub
cmp
arpl
out
mov
in
mov
jle
call
sar
push
pusha
call
dec
mov
mov
mov
sahf
in
xchg
mov
pop
fwait
inc
or
out
mov
xor
fisubr
or
mov
add
dec
je
xor
pop
imul
pop
xor
inc
mov
vmovlhps
into
retf
out
scas
test
or
scas
inc
int
test
mov
hlt
inc
dec
jp
test
arpl
push
push
sbb
pop
xor
clc
out
sar
dec
add
sub
sbb
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
in
in
in
cmp
cmp
and
mov
xchg
cdq
adc
popf
xor
cmp
popf
nop
popf
in
icebp
mov
das
loope
add
dec
cmp
out
cmc
mov
addr16
and
ret
nop
pop
cmp
or
aad
pushf
dec
inc
(bad)
(bad)
or
sub
sub
push
push
add
add
pop
(bad)
fisubr
xchg
rcr
cmp
sbb
(bad)
loopne
xchg
das
gs
mov
jmp
xchg
stos
addr16
(bad)
stos
(bad)
leave
out
add
out
pop
push
shl
loopne
lods
lock
mov
scas
mov
lds
call
das
adc
or
mov
scas
sub
cmp
aaa
jmp
call
out
aaa
daa
jnp
adc
fwait
jmp
into
jmp
mov
addr16
aam
out
jbe
test
jle
and
adc
and
push
push
scas
jbe
cmp
rcl
out
cwde
ins
es
pop
daa
aas
xchg
call
jbe
dec
inc
shl
aaa
mov
cdq
add
xchg
mov
mov
mov
jmp
mov
push
in
jle
pop
pushf
sbb
loop
(bad)
dec
dec
(bad)
xor
call
mov
xchg
sbb
mov
aad
pop
pmulhw
(bad)
scas
add
out
pop
inc
push
add
mov
hlt
xchg
and
faddp
stos
sub
mov
es
cdq
pop
jg
xor
popa
enter
fcmove
cmp
sub
xor
inc
js
es
daa
shl
imul
ss
jecxz
in
and
lods
dec
fsubr
in
js
dec
sbb
in
ss
iret
sub
ret
mov
dec
sti
imul
xor
xor
mov
xchg
add
ret
aad
and
popa
push
(bad)
pusha
dec
pop
fs
mov
dec
cmc
sbb
out
(bad)
std
stos
fucom
shl
outs
inc
icebp
inc
mov
or
lods
jle
inc
ja
jns
enter
addr16
loop
pushf
not
ficomp
imul
mov
out
jge
test
data16
lahf
mov
xchg
xor
xchg
fidivr
xor
outs
scas
outs
addr16
jns
adc
add
mov
les
aam
inc
ficom
cdq
es
cbw
add
imul
jmp
jmp
xlat
pusha
sub
out
in
push
or
mov
adc
xchg
mov
scas
jg
daa
and
sbb
dec
out
xlat
mov
xchg
mov
fsub
test
mov
rcl
and
imul
out
xor
(bad)
xor
xchg
sbb
in
jo
xchg
adc
jle
inc
push
fadd
ss
(bad)
cmps
pop
test
call
inc
add
pop
test
icebp
push
sbb
in
out
in
pop
push
or
fcmovb
clc
rcl
add
and
pushf
das
cmp
sbb
outs
dec
in
cwde
mov
pop
or
cmp
jg
sub
cwde
aaa
dec
es
mov
out
xchg
sub
stos
jmp
enter
out
stc
pop
arpl
sub
push
loop
loop
test
js
or
je
push
int
dec
push
push
jecxz
push
les
push
lea
ftst
jae
or
sbb
dec
mov
add
mov
mov
cmps
push
jbe
mov
icebp
sbb
sbb
(bad)
in
fiadd
call
arpl
xchg
push
gs
add
out
add
mov
xor
sub
xchg
cmp
cmps
lea
pushf
mov
xchg
inc
mov
or
test
mov
shl
mov
xlat
sbb
call
(bad)
pop
pop
inc
and
stos
jmp
ds
push
inc
jg
inc
aas
(bad)
ins
dec
push
mov
(bad)
or
mov
lock
repz
cmp
inc
xor
retf
pop
xchg
rcr
test
popa
jecxz
xor
cmp
mov
ror
repz
inc
fld
movs
mov
push
cmovbe
pusha
mov
ins
jmp
scas
mov
dec
mov
scas
sbb
sbb
add
in
sbb
cmpps
imul
push
dec
outs
in
jecxz
ins
ror
loopne
push
jae
mov
mov
mov
sub
bound
test
jmp
jmp
lds
aam
push
mov
ja
(bad)
enter
cdq
pop
aad
sub
jno
jo
cwde
sbb
fidiv
fldcw
dec
pop
jo
cld
outs
out
(bad)
fnstenv
std
pop
aas
inc
inc
(bad)
mov
dec
sub
cmp
int
scas
dec
xor
repnz
cmp
jae
pcmpeqb
popa
addr16
repz
frndint
sbb
mov
aaa
or
test
cmps
cs
jno
jno
cmps
stos
inc
mov
lea
push
outs
mov
test
sub
mov
jbe
pop
ja
aad
movs
pushf
jne
pop
xchg
jno
inc
push
lahf
imul
dec
sbb
(bad)
jmp
mov
dec
aas
xor
icebp
cmp
push
dec
(bad)
fistp
adc
dec
shl
mov
add
aas
dec
test
mov
mov
push
sbb
lahf
repz
icebp
pop
sbb
mov
mov
push
test
jns
push
cs
xor
aas
mov
sbb
outs
cmc
fcmovu
fst
movs
fdiv
imul
sub
pop
or
pop
inc
xor
(bad)
jge
mov
pop
mov
cld
inc
not
popf
retf
mov
lock
jbe
pop
add
push
in
jb
test
(bad)
test
dec
push
ret
jns
je
dec
xchg
sbb
sub
pop
mov
call
pop
mov
dec
nop
xchg
shr
sub
xchg
xchg
jne
or
lock
icebp
jg
inc
(bad)
cmp
or
mov
cs
cmp
pop
mov
sub
jp
aas
je
(bad)
cdq
push
sub
jnp
ror
(bad)
lods
pop
xchg
movs
mov
inc
pop
ret
movs
adc
push
cmp
pop
je
cmps
push
cld
mov
jecxz
fcom
pop
ss
test
adc
jns
fldcw
dec
mov
aam
pop
inc
add
leave
fwait
jecxz
cmp
cld
neg
sub
fs
push
xor
mov
(bad)
jne
pop
mov
jp
sti
int3
dec
mov
sub
mov
test
and
cdq
sti
sbb
push
idiv
xchg
jnp
and
call
arpl
and
jnp
xchg
inc
mov
adc
das
pop
mov
test
push
jae
add
(bad)
and
pushf
pop
out
mov
inc
sbb
test
repnz
sti
mov
push
sub
sub
sub
fild
sar
pop
mov
mov
ror
(bad)
retf
jmp
retf
fucomp
xor
scas
adc
cmp
int
call
icebp
hlt
sar
fwait
and
fmul
push
jle
cmc
jle
outs
aas
shl
or
js
fisttp
mov
test
pop
sub
imul
int3
imul
sub
xchg
aad
push
fdiv
cmp
pop
lods
xchg
sbb
xchg
inc
sbb
mov
ds
call
cmps
push
test
lahf
jb
sbb
aas
ins
daa
dec
sar
inc
jnp
imul
fiadd
js
xor
jmp
cmp
pop
sub
in
test
add
mov
test
aam
sub
data16
xor
mov
not
pop
mov
in
xor
(bad)
mov
adc
pop
and
or
popa
icebp
std
push
xor
retf
sbb
and
xchg
mov
mov
scas
mov
pusha
cmp
mov
not
in
ret
adc
lea
push
icebp
jns
lods
pop
idiv
dec
push
xchg
cwde
cli
xchg
jg
repz
int
jmp
lods
mov
xchg
mov
scas
movs
cwde
mov
mov
cmp
scas
ficomp
sub
inc
(bad)
out
dec
jns
out
fild
jbe
imul
lea
mov
or
lods
scas
mov
xchg
or
arpl
idiv
ret
jp
adc
fcomi
jmp
fiadd
mov
sbb
add
push
(bad)
pushf
inc
ror
rol
lahf
jne
adc
jmp
push
pop
mov
hlt
adc
xor
cmp
shr
sub
loopne
inc
add
mov
shr
retf
mov
sub
out
sub
pop
and
push
mov
fistp
pop
loop
int3
daa
fwait
movs
out
xor
fisttp
mov
out
jl
xchg
xchg
mov
cmp
adc
into
inc
shl
xchg
loopne
gs
xor
jle
jns
xor
adc
xchg
xor
sub
loopne
ja
jnp
or
and
ins
and
pop
jo
imul
lods
push
in
(bad)
and
ret
(bad)
xor
ret
adc
xor
fld
std
xchg
sar
cdq
pop
out
cmp
add
aad
jmp
leave
push
or
inc
xor
ins
out
jbe
inc
cmp
xor
(bad)
in
jne
gs
scas
sahf
dec
xor
ror
adc
jmp
adc
call
push
push
cs
jae
jae
push
jne
lods
call
fs
pop
rol
hlt
fst
cmp
ret
cmp
in
lock
add
xlat
cwde
pop
mov
ins
dec
into
push
test
shr
call
mov
and
cmps
test
fimul
leave
scas
sub
mov
sub
enter
ret
shr
cmp
xchg
lea
cmp
(bad)
or
stos
mov
xor
aas
stc
mov
dec
imul
ret
faddp
lods
jmp
jnp
lods
and
arpl
ret
inc
xor
movs
stc
(bad)
addr16
shl
lea
inc
stos
dec
push
push
(bad)
icebp
mov
test
xchg
fwait
sbb
gs
cwde
cli
retf
push
ret
lock
xlat
cmp
fidivr
les
lahf
adc
push
xchg
sti
dec
or
scas
and
mov
test
xchg
scas
sbb
and
enter
adc
jecxz
(bad)
and
pop
jnp
or
cmps
enter
jnp
icebp
pop
mov
scas
aad
and
jmp
and
cmps
cmp
push
imul
movq
cwde
cmp
jp
cld
js
loopne
dec
mov
fsub
out
jp
mov
mov
sub
adc
fwait
into
add
(bad)
xchg
mov
xchg
sahf
pusha
add
xlat
movs
nop
ss
(bad)
loopne
lea
pop
xchg
mov
adc
pop
or
ret
test
push
xchg
lods
mov
adc
int3
push
fadd
in
pop
push
push
jp
lock
fimul
mov
inc
js
lock
mov
push
dec
pop
inc
fs
movs
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
aaa
xchg
je
adc
xor
jmp
(bad)
xor
data16
mov
arpl
aam
call
cld
mov
add
and
xor
pop
imul
call
cmp
xchg
mov
addr16
jmp
push
pop
and
cmp
add
xchg
dec
push
add
fsub
enter
mul
mov
adc
sub
js
pop
cmp
fnsave
out
or
arpl
push
xchg
arpl
dec
mov
in
mov
sub
ret
mov
or
jae
jne
xor
sub
adc
adc
and
mov
dec
shr
test
mov
inc
jle
push
repnz
mov
aaa
push
push
hlt
inc
inc
aas
out
les
push
and
mov
sub
push
nop
dec
enter
jecxz
jns
add
clc
push
fisub
sti
sub
push
sbb
lahf
add
imul
cmps
push
out
push
inc
(bad)
inc
pushf
push
and
test
xor
ret
lds
retf
xchg
sub
sbb
and
xchg
dec
ror
cmps
loopne
adc
leave
cli
dec
mov
dec
dec
in
adc
repnz
push
imul
push
xor
dec
repnz
mov
and
in
xor
aam
enter
mov
or
inc
jns
out
inc
inc
inc
cmps
sbb
jl
inc
sub
xor
fistp
fstp
mov
jmp
dec
fs
push
and
fstp
mov
and
mov
retf
cmp
shl
mov
pop
mov
jno
in
ds
bound
add
sbb
lea
add
movs
push
add
inc
rcr
jge
xor
cmp
xchg
or
arpl
xchg
mov
int3
xchg
push
inc
xor
aad
mov
(bad)
jl
jnp
aad
fs
jns
std
cmp
xor
pop
out
xor
retf
retf
in
jp
dec
(bad)
and
call
jne
mov
outs
jecxz
dec
cdq
mov
(bad)
(bad)
fisubr
mov
push
xor
cmc
rcr
ror
and
repz
std
lea
jbe
stos
add
pop
xchg
jne
fsub
hlt
ins
into
jecxz
test
lock
cmc
cmp
or
sub
dec
sbb
mov
ja
mov
je
inc
dec
aaa
xlat
mov
ret
loope
ins
imul
lods
adc
xchg
mov
and
inc
fstp
loopne
lea
in
push
mov
jmp
cmp
push
scas
(bad)
pop
jecxz
lods
fisttp
dec
les
pop
xchg
xchg
aam
xlat
cmp
iret
and
scas
div
pop
movs
dec
and
shr
push
loop
mov
pop
sbb
push
shr
cli
cmp
sahf
into
test
sub
mov
adc
pop
pmaddwd
mov
add
mov
retf
mov
repz
pcmpgtb
cld
mov
adc
int3
add
aam
mov
xchg
inc
pop
lods
lods
popf
cmc
mov
lds
retf
jl
ja
and
pushf
xchg
fmul
hlt
int
fld
(bad)
hlt
xlat
rcl
mov
fs
ins
les
mul
fsincos
mov
mov
shl
xlat
and
adc
movs
xchg
mov
lods
pop
loopne
fnsave
test
lods
add
(bad)
inc
inc
cmp
adc
pusha
mov
sbb
xchg
xchg
icebp
cmp
mov
test
pop
adc
or
imul
cdq
lds
mov
xchg
ss
call
xor
int
fwait
les
fwait
data16
lds
std
xlat
xor
jmp
sub
mov
lods
pop
xchg
jp
imul
push
cmp
jp
adc
loop
(bad)
ins
lds
xor
push
in
fistp
inc
jns
sbb
loopne
iret
mov
jnp
cmps
sub
xchg
outs
inc
stos
stc
sahf
cmp
imul
push
jo
gs
aam
push
js
aaa
dec
push
inc
mov
push
out
xor
and
adc
or
(bad)
js
jecxz
jns
mov
loop
pop
jno
out
xlat
test
lods
in
sar
pop
lahf
fdiv
push
cmp
push
pop
pop
das
ins
cs
push
xchg
in
test
sti
xchg
mov
push
xor
push
lock
stc
out
xchg
and
pop
adc
cmp
or
mul
aad
sahf
call
daa
scas
in
movs
xchg
aam
pushf
pop
test
dec
dec
pop
push
imul
mov
mov
test
fild
mov
fnsave
repz
mov
jp
sbb
cmp
inc
mov
enter
or
fdivr
jmp
lods
mov
ffree
daa
jmp
push
mov
xchg
fiadd
aas
cmp
and
ins
das
(bad)
push
mov
pushf
cwde
ficomp
mov
retf
xor
dec
scas
sub
sub
xchg
outs
dec
repz
xchg
ins
inc
push
or
(bad)
xchg
push
push
adc
jmp
arpl
adc
sbb
push
sub
sbb
mov
adc
mov
mov
push
gs
mov
enter
cmp
fcom
dec
mov
push
mov
ins
jl
push
and
mov
xchg
or
xchg
stc
inc
pop
mov
push
mov
sbb
sub
jmp
shl
cs
push
sbb
and
(bad)
imul
jno
inc
sub
loope
mov
mov
push
sub
jbe
or
sbb
fimul
popw
fxch
cmp
stos
dec
xchg
ficomp
mov
or
mov
pop
mov
ja
clts
pop
mov
pop
in
mov
rol
xchg
outs
mov
jmp
sub
pop
add
or
shr
clc
in
ins
inc
pop
push
fist
cmps
xchg
aam
push
mov
dec
lock
xchg
retf
movs
mov
mov
pop
cli
dec
sbb
rcr
jns
dec
idiv
scas
mov
inc
test
dec
sahf
or
inc
jge
ins
jb
lods
into
push
aam
push
sub
retf
retf
add
cmps
push
push
mov
in
inc
sbb
icebp
xchg
add
bound
lods
lods
frstpm(287
sti
dec
cld
frstor
call
cmp
xor
adc
int3
std
icebp
in
fadd
cld
daa
add
jle
xlat
scas
mov
mov
sub
stos
pop
in
stc
and
gs
push
mov
das
xchg
xchg
mov
dec
loop
adc
call
gs
mov
(bad)
int3
add
int
ins
lds
pushf
scas
jmp
jns
inc
or
pop
and
xchg
scas
mov
ffree
push
push
mov
in
jecxz
test
push
add
add
xor
adc
lds
stos
dec
mul
jp
ja
inc
les
scas
enter
jo
loopne
sbb
ret
aad
push
int
inc
or
out
mov
jns
retf
cmc
es
rol
jno
mov
inc
sahf
mov
push
jmp
in
cmps
adc
mov
fs
stc
cmc
ret
and
and
or
add
mov
dec
addr16
jle
sti
das
int
mov
(bad)
(bad)
add
adc
or
ror
outs
push
call
fmul
mov
fild
mov
mov
dec
int
push
or
scas
xor
dec
push
nop
pop
lea
or
jne
sub
data16
sahf
jns
cmps
int
jno
cmp
pop
fwait
loop
xchg
aad
pop
fdivr
xor
int3
jecxz
xchg
cs
and
jecxz
loop
xchg
hlt
xor
mov
xor
xchg
aaa
out
in
out
pop
inc
fsub
and
mov
add
cdq
sub
add
imul
mov
or
pop
dec
jmp
add
dec
mov
in
cmp
fldenv
fidivr
ud0
sbb
xor
mov
or
hlt
jae
inc
jg
cmp
sbb
(bad)
push
out
fcom
pop
fnstcw
out
mov
mov
cld
loop
push
jo
pop
aam
repnz
dec
jecxz
jns
arpl
or
push
ins
bnd
sbb
in
xor
(bad)
mov
out
es
push
jb
aaa
mov
sbb
stc
bound
shl
cdq
jmp
fwait
sahf
mov
rcl
adc
xchg
xor
out
test
sub
cmps
sbb
push
mov
lods
into
mov
mov
cs
pop
inc
fcomp
cmps
cmp
jg
fs
xor
iret
mov
push
rcl
or
cmc
cld
xlat
fwait
jb
lods
cwde
cmps
inc
pop
jns
ror
cmp
shl
repnz
icebp
iret
sbb
adc
nop
adc
stos
add
mov
jns
popf
dec
mov
jmp
sti
cli
pop
lea
pop
inc
popf
out
imul
adc
fidiv
xchg
loope
add
test
inc
ss
stos
in
not
and
nop
sub
mov
sahf
sub
pop
into
mov
stc
js
test
ds
pop
sbb
lods
jmp
cmps
xchg
inc
call
push
dec
mov
add
rcl
mov
fistp
aad
scas
mov
mov
clc
stc
jb
cmp
rol
and
hlt
(bad)
push
fwait
(bad)
jns
push
test
scas
adc
iret
push
jno
les
out
jg
xor
mov
adc
retf
mov
cdq
mov
in
mov
(bad)
aas
xor
xchg
test
mov
mov
xchg
mov
in
and
push
and
into
sub
cmps
cmc
push
into
movs
jae
mov
jecxz
std
mov
shl
je
push
xor
sar
stc
mov
push
lea
jb
xchg
xor
call
fisttp
shl
or
scas
or
and
test
add
clc
sbb
call
cmp
cmc
or
popa
sub
add
arpl
mov
aas
mov
arpl
pop
(bad)
aaa
mov
adc
stos
jb
sub
(bad)
cmp
arpl
sub
push
jbe
and
mov
sbb
cli
int
dec
inc
and
outs
jae
stc
out
push
int3
mov
push
push
push
push
jge
mov
pop
jno
adc
mov
mov
push
jae
mov
lods
mov
dec
jbe
adc
std
fucomip
pop
sub
mov
mov
fisubr
cdq
cmps
push
stc
jge
push
clts
mov
mov
loop
repnz
mov
test
sub
xchg
and
lds
stos
or
gs
cmp
cmp
cmp
or
sbb
ss
bound
fist
pop
aas
jb
adc
add
cmp
cld
sbb
aaa
lock
loopne
sar
loopne
add
rcr
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
xchg
dec
or
and
and
pop
pushf
enter
push
out
and
cdq
int3
ret
int3
in
dec
inc
in
lods
mov
jnp
push
gs
ret
clc
(bad)
(bad)
daa
cmp
shl
add
inc
or
(bad)
fcomp
sbb
sub
pop
int3
jmp
pop
sub
(bad)
int
adc
inc
xor
outs
mov
bound
mov
loopne
repz
cmp
cld
and
mov
das
pop
xor
dec
arpl
cwde
xlat
pop
repnz
or
fisubr
xor
push
push
push
add
jg
je
imul
push
sub
out
jae
xor
cmp
inc
test
adc
nop
mov
ins
xor
call
jmp
mov
call
adc
clc
dec
add
fsub
arpl
dec
adc
push
mov
pop
push
mul
mov
pop
mov
in
mov
stos
fdivp
icebp
pop
push
mov
mov
mov
int
test
xor
xor
ins
pop
movs
adc
inc
in
inc
pop
ss
xor
mov
mov
fs
ss
clc
fabs
pop
in
ror
outs
pop
movs
jmp
sbb
mov
test
sbb
call
nop
cmp
fst
inc
sub
add
cwde
enter
jb
test
push
int3
sahf
cmp
adc
pop
adc
sbb
dec
xchg
fstp
and
fstp
fisub
jb
jle
sub
rol
jmp
sub
loope
jb
outs
cld
mov
iret
stc
dec
pop
je
push
and
fidivr
(bad)
mov
adc
and
mov
push
(bad)
aad
jb
fld
loop
mov
push
shr
idiv
mov
stos
stos
(bad)
movq
jbe
jne
div
or
popa
dec
add
ror
jle
and
ins
sbb
dec
pop
or
xor
jp
stos
fimul
and
sbb
scas
cli
neg
sub
pop
mov
sbb
xchg
sbb
cmp
mov
ja
lock
in
pop
shl
test
jnp
xor
inc
and
mov
mov
ss
sub
in
inc
jge
out
push
xor
pop
and
push
scas
jnp
in
or
and
(bad)
sub
push
(bad)
adc
lds
push
jmp
add
ins
adc
jbe
ja
cld
adc
out
out
and
dec
dec
ja
inc
cmc
dec
add
push
mov
mov
xchg
pushf
jle
pop
mov
adc
sbb
cli
std
pop
loope
(bad)
xor
es
dec
push
cs
inc
shl
mov
es
div
test
sub
push
or
imul
test
fdiv
ss
dec
xchg
call
add
in
ja
add
cli
fwait
xor
dec
(bad)
dec
mov
into
and
cmp
jne
and
mov
fbstp
inc
cmp
pop
movs
popf
xor
mov
lods
push
(bad)
fiadd
bound
mov
and
sbb
mov
inc
aaa
in
sbb
pop
dec
cmp
sti
sbb
mov
dec
mov
fs
mov
push
sahf
add
ds
and
inc
dec
cmps
pusha
stc
daa
sahf
pop
pop
adc
pop
sbb
cmc
rol
mov
repz
push
out
stos
dec
scas
iret
xor
out
and
xchg
push
out
mov
test
out
es
mov
mov
push
xchg
fidivr
xor
jnp
dec
(bad)
xchg
retf
rol
aas
or
sub
inc
ficomp
mov
cmps
test
int
lods
or
add
aas
ficomp
cmc
mov
push
add
mov
push
(bad)
push
cmp
(bad)
mov
out
inc
push
cmp
das
jbe
jmp
pushf
cmp
lods
neg
mov
cdq
cmp
push
nop
xchg
cmc
shl
jp
out
push
xchg
pop
push
aas
inc
mov
mov
in
not
es
dec
cwde
test
pop
lods
dec
cmps
dec
push
dec
shr
cld
int3
and
adc
add
or
jl
mov
gs
repnz
mov
sbb
pusha
aam
in
ror
and
xchg
jge
dec
daa
ja
lds
aad
int3
fcomi
in
fldcw
xchg
lods
sahf
xchg
loope
or
push
stos
jne
(bad)
sahf
and
sahf
push
jge
icebp
(bad)
cmps
ss
popf
leave
and
inc
xor
push
sub
fdivr
add
imul
inc
mov
adc
inc
cdq
pusha
imul
loop
sbb
mov
scas
cmc
jmp
xlat
lea
pusha
xchg
xor
dec
dec
arpl
gs
xchg
scas
xchg
cmp
test
sub
push
retf
inc
stc
push
pop
repz
outs
push
shr
es
cmp
pop
cmps
inc
in
fdiv
pop
pop
das
popa
pushf
dec
mov
inc
mov
xchg
imul
pusha
cmps
and
jg
cmp
mov
scas
(bad)
pop
or
loop
push
dec
(bad)
sbb
leave
jo
ret
and
out
shl
xchg
sbb
(bad)
xchg
pop
cld
idiv
lds
push
test
fs
cli
mov
fs
dec
(bad)
loope
xchg
movs
push
dec
add
pop
cmp
mov
sub
and
dec
je
pop
xor
aaa
push
in
js
loope
push
(bad)
ins
pop
shr
jo
pop
(bad)
hlt
ret
mov
nop
mov
push
enter
outs
sbb
pop
pcmpgtb
inc
or
adc
scas
or
scas
sbb
jmp
cmp
outs
jg
jg
inc
push
repz
or
(bad)
loop
mov
inc
add
jbe
adc
pushf
fstp
pop
xchg
jne
jg
add
sbb
pop
out
mov
or
fcmove
pop
(bad)
xchg
js
xchg
mov
mov
jle
imul
icebp
fdiv
aas
rcr
popf
push
sub
repz
mov
dec
mov
or
outs
popf
out
data16
lds
jl
retf
pop
mul
jp
inc
xchg
data16
test
ins
xor
adc
jne
sbb
adc
in
repnz
repz
jle
icebp
xchg
or
aas
ret
loopne
loope
or
push
mov
xor
loope
in
je
add
adc
test
iret
into
ja
ss
inc
pop
add
shl
push
jmp
mov
adc
pop
jle
mov
mov
pop
dec
das
mov
fwait
xor
mov
stos
jns
inc
inc
ret
jbe
add
repnz
fstp
outs
retf
fiadd
pop
jnp
inc
push
push
mov
sub
xchg
loop
mov
push
sub
int3
jmp
xor
repz
sbb
mov
mov
fistp
mov
aam
add
jmp
xchg
stos
or
or
shr
fsub
dec
aaa
(bad)
xchg
inc
jae
or
xchg
and
mov
xchg
aas
outs
stos
ja
dec
aad
outs
xor
fwait
mov
fwait
mov
jbe
jo
push
push
out
cdq
mov
aad
jecxz
push
sbb
xchg
hlt
hlt
jge
cmc
pop
jge
pushf
pop
xor
sub
xchg
dec
lock
mov
in
cmp
dec
inc
xor
lea
out
ins
stos
xor
adc
or
xchg
adc
jmp
mov
lahf
cli
dec
and
fcomp
in
xchg
in
jo
sub
sub
stos
or
mov
pushf
mov
in
pop
fst
dec
pusha
inc
sbb
mov
nop
outs
into
push
push
aam
leave
sahf
push
(bad)
dec
test
pushf
push
std
xchg
adc
test
sub
add
pmaxub
loope
shr
sti
xchg
test
aas
cmp
xchg
inc
hlt
inc
push
cmps
mov
dec
leave
fdivr
jo
sbb
aaa
mov
ins
fs
int3
shl
loop
mov
dec
cmp
or
call
aad
cdq
call
out
cdq
pop
loopne
call
pop
ins
das
dec
sub
mov
xor
cmp
push
in
nop
mov
mov
mov
in
xor
cmps
mov
jle
cmc
rcr
dec
push
mov
ins
stc
cli
in
pop
outs
outs
retf
outs
dec
daa
test
in
dec
sbb
sub
cmp
mov
cld
mov
sub
adc
sti
or
cmps
fst
and
cmp
fisub
lods
cdq
call
fwait
xacquire
ror
xchg
in
dec
or
or
(bad)
push
aam
mov
lahf
fst
cmps
mov
cmp
lahf
test
push
out
lahf
mov
jne
jo
stos
shl
cmp
cmp
test
call
and
jns
rol
std
iret
(bad)
(bad)
data16
call
loop
or
call
stos
loope
mov
cs
inc
iret
ds
cli
les
popa
pop
aaa
adc
out
ins
or
daa
movs
cli
xchg
sub
adc
(bad)
sti
pop
sar
cld
adc
in
pop
push
xor
enter
xor
ins
and
paddusb
es
cld
push
pop
shr
push
icebp
leave
test
pop
mov
out
fst
repnz
inc
sub
or
aaa
and
inc
mov
stos
fdivr
in
(bad)
stc
sar
inc
or
push
xchg
inc
dec
cmps
and
jp
inc
pop
nop
fcom
mov
mov
cmp
xor
(bad)
imul
test
les
outs
xor
aad
out
pop
test
retf
mov
jg
out
mov
xchg
mov
mov
jnp
mov
jl
out
sbb
daa
pop
xor
mov
shl
push
scas
std
sub
cmc
jnp
inc
std
mov
aam
dec
popf
pop
xchg
bound
sub
inc
call
fld
mov
arpl
add
add
inc
mov
or
xor
xchg
ja
in
jge
mov
arpl
stos
mov
mov
cdq
ja
popa
push
mov
ja
mov
xchg
mov
sbb
inc
iret
dec
aam
(bad)
xor
mov
sbb
mov
test
jp
mov
mov
sahf
(bad)
jb
jo
in
cmp
push
movs
mov
stc
in
in
stc
js
mov
scas
jo
cmp
mov
lds
stc
sbb
(bad)
loopne
(bad)
hlt
std
sbb
sub
mov
adc
mov
int3
xchg
inc
cmps
lahf
dec
xor
mov
cmps
cmp
cmp
push
daa
pushf
sub
push
mov
test
ja
push
adc
push
fdivrp
cdq
popa
ss
mov
loop
pop
inc
xchg
sahf
push
into
jb
das
mov
cmps
sahf
mov
int
push
aas
ret
sbb
ss
in
inc
and
dec
add
cli
cmp
ja
out
rcr
mov
inc
push
data16
and
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
xor
in
and
popf
mov
lods
ins
mov
and
cdq
(bad)
xchg
fs
in
cmp
and
fistp
(bad)
dec
js
add
ins
jp
xchg
inc
cmp
call
adc
ja
push
mov
mov
or
push
(bad)
pop
pop
outs
retf
jg
fsub
mov
pusha
sub
mov
sahf
outs
xchg
push
lahf
mov
lods
mov
dec
psubw
xor
ins
outs
mov
jp
das
out
mov
sub
ror
sbb
add
and
cmp
call
repz
shl
jecxz
xchg
mov
push
xchg
or
xchg
iret
push
setns
sbb
leave
shl
int3
push
pop
jmp
mov
icebp
icebp
push
(bad)
dec
clc
in
push
mov
fild
dec
gs
dec
enter
and
mov
test
and
dec
shl
ret
cmp
xchg
dec
sbb
or
jae
lds
push
push
xchg
or
sub
out
mov
dec
adc
out
scas
or
rcl
sub
gs
cli
xchg
mov
inc
push
std
push
xor
jne
jl
lods
jge
push
jae
movs
pop
push
(bad)
mov
pop
mov
in
repnz
xor
mov
loope
pushf
cdq
(bad)
in
jnp
push
xor
call
pop
jne
hlt
and
xor
push
test
inc
or
mov
popf
lods
and
xchg
(bad)
rcr
fwait
sti
xor
sub
movs
or
inc
xor
pop
aad
loop
jmp
loop
ds
les
mov
popa
stc
movs
xor
ins
mov
and
nop
ss
imul
in
push
fcmovnbe
xor
jo
fnstenv
mov
test
mov
adc
mov
out
or
in
mov
arpl
movs
or
cmps
fnstenv
sub
pop
push
dec
dec
xor
lds
int3
cmc
pusha
mov
cmp
scas
push
mov
xor
std
imul
sahf
jnp
dec
pop
test
out
mov
sub
retf
push
bound
jp
test
ret
dec
data16
lods
jno
inc
mov
or
jle
dec
mov
xchg
call
dec
test
xchg
pop
in
stos
xor
mov
push
and
mov
xor
inc
test
fwait
test
and
aad
(bad)
cmp
fucom
(bad)
leave
sub
popf
xor
push
jmp
or
or
int
cdq
or
sahf
xor
into
cld
mul
fs
shl
cld
sbb
sbb
adc
cdq
dec
ins
mov
retf
out
inc
jle
cmps
in
test
mov
dec
fcmove
ds
rcr
test
sar
mov
cmp
fs
test
bswap
push
push
(bad)
je
sub
sbb
out
fcom
sub
lods
rcr
cli
sbb
test
inc
xchg
std
adc
mov
nop
push
mov
repz
add
pop
dec
sub
cmc
popa
fsubr
push
lods
sti
sbb
lahf
in
sub
mul
xchg
mov
int3
mov
and
mov
aam
jne
dec
in
jne
dec
jge
or
sti
mov
in
into
pop
sahf
std
jbe
fdivr
push
mov
mov
inc
sahf
inc
ror
cmps
sub
fidiv
repz
in
or
cli
mov
jmp
in
xchg
jb
push
gs
stc
and
repnz
movs
daa
gs
inc
jmp
inc
out
inc
sbb
push
push
(bad)
xchg
push
mov
jne
jmp
mov
sub
enter
imul
(bad)
mov
outs
xor
fdivr
inc
inc
ror
fucomip
jmp
js
cmp
lock
iret
mov
push
mov
adc
jl
movs
fwait
call
rcl
clc
push
std
push
xchg
and
fbstp
pop
or
push
scas
sub
or
inc
cmp
sar
(bad)
pop
mov
div
xchg
scas
loope
popf
jge
cmp
ss
mov
add
adc
and
adc
mov
jns
jecxz
adc
rcl
into
mov
dec
stos
ret
outs
jae
fild
inc
pop
retf
and
out
aad
ins
lds
xor
xor
lahf
cmp
xchg
mov
data16
cmps
icebp
ret
cmps
dec
stc
ins
and
mov
sbb
mov
hlt
std
xchg
pop
jl
push
bound
push
xchg
mov
mov
and
pop
or
jns
dec
xor
xchg
push
cli
fsub
test
pop
inc
cld
pop
mov
les
dec
mov
in
repz
movs
mov
pop
outs
leave
mov
pop
ja
push
jns
(bad)
cmc
jo
in
mov
hlt
xabort
mov
(bad)
mov
clc
xor
test
cdq
(bad)
jl
adc
push
movs
lods
outs
sub
push
mov
mov
jno
inc
sub
xchg
bound
jecxz
sub
das
jo
pop
jmp
int
inc
pop
jns
push
add
outs
sbb
sbb
sahf
pop
into
cmp
retf
sub
stos
(bad)
mov
sahf
pop
dec
pop
jmp
dec
nop
loopne
out
(bad)
cmp
repz
aas
pop
xor
mov
cmp
dec
mov
add
sub
gs
jmp
xchg
hlt
clc
cmp
shl
fisttp
mov
dec
pop
adc
popa
ror
xchg
push
cmp
pop
out
pushf
jne
inc
fstp
loopne
sahf
cdq
mov
sbb
loop
nop
pop
shr
push
mov
xchg
sbb
outs
loope
and
ficom
push
jmp
mov
adc
enter
arpl
leave
pop
dec
mov
push
mov
cdq
adc
(bad)
jmp
int
mul
je
dec
loope
dec
or
icebp
jmp
xchg
mov
or
add
in
jmp
int3
jne
std
lods
xchg
fidivr
jnp
inc
daa
popa
arpl
aas
es
xor
xchg
mov
sbb
mov
mov
xor
xchg
jmp
cmp
loop
pop
jae
or
jne
arpl
outs
jae
sahf
mov
sbb
adc
leave
or
movs
push
outs
sub
fwait
scas
and
call
xchg
lods
xchg
dec
add
mov
push
rcr
xchg
cmp
stos
mov
arpl
lds
push
nop
ret
xor
outs
jne
enter
xchg
mov
xor
jg
push
dec
xchg
int
add
retf
imul
push
xchg
mov
or
pop
mov
gs
push
mov
fwait
push
add
jbe
imul
jle
int3
xor
rcr
mov
adc
cmps
setnp
or
sbb
mov
cmp
sbb
xchg
nop
popf
adc
call
mov
in
xor
sbb
mov
(bad)
and
sbb
mov
pop
fnop
aam
aaa
xchg
clc
xchg
in
xlat
stos
sbb
mov
jl
mov
(bad)
ss
pop
inc
dec
add
cmp
(bad)
out
sub
jb
mov
pop
lods
cmp
pusha
inc
std
stc
or
pop
push
arpl
sbb
cld
loope
xlat
add
push
and
mov
inc
jb
mov
dec
fld
xor
adc
or
sbb
fiadd
frstor
cmps
daa
mov
dec
test
inc
les
aaa
mov
in
call
lea
sbb
in
dec
cli
movs
lock
ror
popf
mov
jp
pop
(bad)
sahf
and
das
clc
and
jmp
popa
call
jg
push
ds
ins
ins
sahf
dec
loope
mov
in
push
arpl
sbb
xor
shl
adc
jmp
cwde
xchg
inc
mov
movs
and
sbb
mov
imul
stc
jle
mov
hlt
inc
call
and
pusha
mov
jmp
fimul
jae
int3
jno
push
pop
mov
arpl
sub
cmp
imul
jmp
sahf
sbb
stos
dec
adc
aad
retf
mov
rcr
sub
jb
in
(bad)
mov
xchg
test
jle
mov
fadd
cs
pop
mov
daa
xor
xchg
test
adc
jmp
loopne
ret
adc
cmc
jno
gs
(bad)
stos
neg
in
pop
imul
xchg
push
lods
push
push
retf
bswap
jecxz
out
push
bsr
pusha
and
pop
cld
inc
xchg
test
(bad)
sub
xchg
iret
(bad)
mov
xor
push
mov
sar
daa
sub
(bad)
in
scas
or
sub
not
jmp
je
cld
mov
pop
arpl
jp
sbb
or
jne
jae
sbb
add
lock
mov
jmp
rol
adc
or
pop
jg
out
cdq
sub
mov
daa
outs
xor
mov
sbb
sbb
lods
and
lods
daa
(bad)
in
mov
pop
int
xlat
xchg
cmps
mov
add
mov
js
cs
daa
jo
hlt
ret
adc
je
pop
push
pop
or
sub
push
mov
jae
or
cmp
cmps
xor
ficomp
fcomp
push
pop
cdq
mov
(bad)
rcr
and
sbb
shr
leave
jbe
pop
xlat
jle
sti
sbb
retf
loopne
addr16
push
int3
cli
pop
xchg
ins
adc
lods
and
add
dec
(bad)
fild
(bad)
sbb
xchg
mov
jns
ffree
test
fwait
inc
into
loop
ins
je
fwait
enter
or
call
or
(bad)
cmc
sar
mov
mov
out
loope
mov
sbb
push
sub
out
xlat
mov
mov
fcmovb
je
(bad)
push
arpl
shr
ja
enter
push
xor
xchg
sbb
mov
push
(bad)
out
or
jge
aaa
stc
das
jae
mov
and
inc
mov
xchg
je
pop
ins
fwait
sbb
cmps
outs
(bad)
in
lods
push
pop
inc
mov
jne
jle
inc
in
ret
pop
shl
inc
jno
jg
jg
push
jle
add
or
cmc
cmp
add
mov
inc
mov
sub
sub
push
loop
imul
push
jo
icebp
rcl
and
clc
sti
enter
retf
mov
(bad)
push
sub
test
mov
out
xor
into
enter
lods
dec
call
cmps
sub
mov
lds
dec
pop
push
cmc
add
ret
dec
sub
test
ins
cmp
es
push
or
rcl
jl
mov
int
mov
xor
cmps
rol
adc
shr
(bad)
mov
mov
mov
scas
pop
shl
sub
cmps
into
inc
xor
jno
adc
dec
inc
mov
xchg
mov
push
sbb
push
subps
add
xchg
mov
outs
test
sub
ins
xor
out
ficomp
out
ds
push
mul
(bad)
mov
outs
cs
inc
add
sar
push
dec
lock
loopne
cmp
jg
sbb
out
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
arpl
cmp
cmp
out
xor
arpl
xor
imul
out
call
in
ja
jno
mov
mov
sahf
jg
jns
pop
add
push
jnp
or
push
repz
xor
push
jb
mov
pop
loopne
rol
daa
ds
pop
pop
fwait
dec
lds
mov
ds
in
and
mov
ja
cmps
cli
xor
mov
inc
sti
js
idiv
jo
in
repz
test
ins
jp
loopne
pop
iret
xchg
cwde
push
test
(bad)
lods
or
and
inc
jp
mov
pop
lock
push
in
mov
daa
mov
scas
movs
adc
or
sbb
movs
enter
bound
clc
mov
xchg
scas
and
or
and
mov
mov
retf
sub
test
sbb
xchg
cmp
sub
cs
push
(bad)
sbb
adc
adc
sub
dec
outs
mov
xor
rcr
ins
ja
push
jmp
(bad)
enter
scas
mov
jp
arpl
xchg
add
daa
xchg
add
mov
fisubr
jle
stos
test
dec
ror
dec
loope
fs
rcl
popf
mov
jecxz
sbb
push
push
xchg
pop
inc
enter
mov
fadd
mov
lahf
cmp
inc
repnz
mov
pop
mov
retf
loop
jmp
mov
test
push
popf
cwde
xor
je
pop
mov
mov
fcom
pop
cmp
aaa
imul
push
mov
pop
scas
jb
xchg
in
cmp
imul
pop
mov
scas
sbb
mov
add
fs
sbb
xor
sbb
jae
push
test
int
fnstenv
outs
jbe
in
push
repnz
stos
xlat
jno
pop
popf
mov
or
loope
into
sbb
icebp
mov
push
pusha
adc
or
sub
mov
push
cmp
jnp
sub
cli
sbb
jbe
aaa
cwde
xor
jns
aad
and
scas
sub
scas
repz
daa
mov
mov
push
stos
pop
aad
push
xchg
jle
(bad)
adc
ret
retf
xchg
adc
ss
xor
xchg
xlat
add
jg
(bad)
mov
mov
add
jmp
jo
sti
ja
gs
mov
fild
lahf
call
sub
stc
stos
(bad)
push
fldenv
fs
call
fnstsw
cmp
dec
daa
loope
inc
jmp
jb
clc
sub
and
imul
icebp
sbb
mov
mov
out
in
das
std
xchg
fsubr
cmp
adc
sbb
dec
pop
ficom
fsubp
dec
jo
add
pop
mov
aaa
dec
mov
test
cdq
pop
xor
xor
mov
sti
jp
sti
not
(bad)
push
loope
mov
sbb
push
in
cmp
cmp
pusha
cmp
stos
pop
stos
jmp
shl
sub
repz
inc
push
adc
add
mov
or
jne
jo
fmul
pop
inc
enter
cmp
cmps
xor
rcl
xor
push
sub
loopne
ret
sub
push
or
enter
ss
cs
xchg
movs
jg
pop
mov
sahf
fcomp
push
push
push
sbb
or
pop
les
outs
sub
mov
mov
in
sub
pop
mov
(bad)
movs
out
not
xlat
fwait
sbb
mov
xchg
(bad)
jnp
es
cmp
daa
cmp
movs
and
sub
jecxz
loope
mov
movzx
int
push
or
cs
push
jg
jecxz
inc
(bad)
cmc
in
es
mov
jmp
dec
inc
sub
mov
ins
in
mov
das
xchg
xchg
lods
repz
mov
scas
int3
sbb
xor
xchg
psubb
dec
fucomi
xor
ins
pusha
jmp
mov
fiadd
icebp
in
pop
push
or
lock
pop
js
je
mov
jno
and
call
call
(bad)
loop
push
(bad)
(bad)
mov
xor
jmp
mov
mov
je
scas
cld
mov
jle
sub
jbe
fldcw
repnz
push
(bad)
pop
in
mov
jle
out
cmp
(bad)
add
inc
jp
cmp
into
add
lods
nop
out
ja
test
cmp
iret
loopne
(bad)
in
leave
outs
shr
xchg
or
and
mov
inc
imul
push
icebp
adc
stc
retf
cld
outs
dec
add
xchg
ret
mov
jbe
out
push
(bad)
adc
jbe
fldenv
and
lock
push
or
bnd
xor
icebp
jbe
cmp
(bad)
je
repnz
test
mov
mov
mov
mov
mov
fcom
arpl
add
sahf
call
scas
sub
shr
arpl
leave
mov
movs
daa
adc
cmovg
lock
stos
mov
xchg
mov
icebp
sahf
fbstp
mov
mov
sbb
pusha
aaa
mov
mov
inc
push
mov
inc
ret
xchg
(bad)
push
xor
lods
test
mov
adc
aaa
xor
mov
(bad)
push
js
inc
loop
addr16
cmp
int3
enter
pop
stos
mov
sbb
push
les
dec
jg
loop
inc
adc
xchg
push
mov
cmp
push
pop
shl
test
mov
jp
aam
xchg
push
ins
in
inc
push
iret
xchg
push
(bad)
mov
aas
fsubr
in
stos
xor
ss
lods
xchg
jnp
fidivr
(bad)
add
sub
dec
mov
mov
push
int
test
iret
cmp
(bad)
repz
and
push
ja
clc
test
mov
lods
and
je
movs
push
bt
mov
and
jo
fist
push
ins
mov
aad
add
jo
jb
pop
push
dec
xchg
mov
ror
stos
in
mov
jns
or
push
int
push
pop
push
test
sbb
xchg
jg
sbb
xchg
sbb
fnstenv
jmp
and
test
push
or
ds
in
ret
adc
imul
enter
pop
xlat
movs
sbb
mov
loop
fsubr
pop
lahf
jbe
mov
arpl
repz
xor
in
in
outs
inc
sub
(bad)
mov
aad
and
jecxz
dec
jecxz
xchg
push
sbb
and
and
into
clc
out
fwait
or
adc
(bad)
cmps
jmp
pop
fdiv
or
fs
pop
jno
mov
fistp
dec
(bad)
scas
pop
enter
mov
(bad)
push
out
lds
mov
sub
jne
or
pop
and
scas
mov
sub
in
mov
gs
(bad)
das
stos
mov
adc
sbb
push
stc
mov
in
popa
out
pop
rcr
stos
adc
mov
add
jo
imul
adc
adc
xor
mov
pop
and
ins
dec
jbe
xchg
pop
adc
and
iret
in
into
mov
mov
fld
(bad)
fild
inc
push
add
sbb
push
scas
push
leave
xor
or
push
inc
inc
ss
popa
mov
aaa
lods
jb
aas
rol
int3
fmul
outs
mov
mov
fisubr
aas
add
push
movs
retf
pop
push
and
mov
popf
jg
aad
dec
mov
mov
test
add
bound
(bad)
imul
mov
fldenv
les
popa
mov
ja
sti
div
inc
and
mov
inc
pop
out
repnz
dec
adc
icebp
mov
cwde
sbb
ror
jno
xor
adc
imul
xor
inc
push
sbb
lods
jbe
xlat
sbb
ss
(bad)
jo
xor
scas
icebp
cmp
push
mov
push
xchg
lahf
gs
imul
mov
add
imul
mov
xor
(bad)
je
aam
inc
std
in
out
sar
in
pop
dec
mov
repz
xor
and
xchg
push
mov
xchg
jecxz
xchg
jnp
sbb
and
add
jns
sub
jns
imul
fld
cmps
mov
leave
lea
test
xor
aad
cwde
or
dec
mov
ret
(bad)
fistp
mov
jle
pusha
int
test
push
cmc
xchg
shl
push
mov
jecxz
adc
fstp
mov
push
push
pop
(bad)
sub
xchg
(bad)
fbld
cld
adc
rol
retf
rcl
jmp
jne
cmp
push
mov
jecxz
inc
dec
stos
xor
xlat
fs
sub
dec
test
inc
lods
push
pop
out
inc
mov
mov
jns
inc
popa
pop
mov
mov
bound
imul
scas
sbb
outs
mov
xchg
cwde
test
sbb
cld
in
loope
lea
movs
ret
lds
mov
jmp
or
mov
dec
mov
imul
sub
mov
nop
mov
adc
inc
and
xchg
jns
cmp
cmp
sub
je
mov
and
(bad)
repz
xchg
push
add
or
cmp
icebp
and
fiadd
xor
push
jp
inc
cmps
imul
sub
loopne
sbb
rol
(bad)
fist
dec
cmp
add
retf
ret
push
xchg
xor
mov
mov
cmc
fisubr
jns
mov
jmp
hlt
xchg
cmp
push
pop
jmp
and
pop
pop
add
pop
cld
loop
pop
int3
pop
or
enter
cdq
cmc
mov
in
and
fs
icebp
adc
push
ror
adc
inc
add
cs
mov
call
xchg
std
add
add
mov
inc
jbe
pop
lea
aam
test
jle
in
scas
lock
fmul
inc
call
mov
bound
add
adc
stos
xor
mov
rol
push
mov
and
mov
daa
adc
sbb
xchg
and
cmp
pop
jno
iret
rol
in
sub
sbb
push
add
mov
cli
loopne
xchg
inc
int
push
ins
cmp
pusha
xor
std
sub
pop
pop
jmp
sbb
jmp
xchg
fist
dec
lea
jo
test
add
dec
add
sub
(bad)
xchg
lods
and
xchg
fsubr
std
jne
push
mov
je
std
or
push
int3
add
jl
xchg
outs
js
arpl
sub
loopne
hlt
mov
xor
pop
sbb
(bad)
jns
push
je
cli
lahf
cwde
and
cs
in
cmp
mov
shr
out
out
aad
rol
mov
cwde
jnp
clc
(bad)
inc
jb
gs
call
clc
out
sar
dec
add
pause
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
cdq
push
(bad)
push
pop
cmp
scas
fdiv
fldenvw
jno
push
addr16
sti
pushf
fs
cdq
addr16
push
gs
cmp
and
aas
loop
imul
lock
or
sbb
and
mov
jmp
cmp
ja
in
xor
xchg
(bad)
mov
add
std
and
(bad)
mov
out
repnz
sahf
cs
sbb
rcl
sbb
loope
or
sti
rcr
stos
scas
lock
lock
(bad)
test
xor
hlt
cmp
test
into
sbb
loopne
sbb
fistp
xchg
call
xor
sub
mov
mov
jg
fs
mov
icebp
add
sub
pop
inc
enter
adc
inc
cmp
mov
out
imul
test
iret
xchg
mov
aam
repnz
xor
push
dec
inc
not
cmp
sub
inc
push
xchg
and
leave
mov
push
add
fstp
ss
leave
sub
pop
retf
arpl
es
lods
pop
outs
cmps
cwde
loope
inc
test
stos
(bad)
(bad)
dec
pop
mov
mov
std
inc
fsub
and
(bad)
xor
sub
and
and
lahf
cmp
(bad)
fnsave
ret
idiv
outs
int
and
stos
push
cmps
xchg
xchg
push
inc
js
hlt
mov
test
push
and
retf
inc
out
or
imul
inc
lods
jmp
icebp
jb
aas
push
ins
xor
(bad)
sti
test
(bad)
jno
sbb
test
(bad)
repnz
fcom
das
pushf
lds
pop
leave
test
ror
in
(bad)
scas
add
and
fstp
cdq
pop
mov
ins
add
arpl
out
cld
(bad)
push
and
lods
cmc
pop
sub
lahf
dec
add
or
and
push
push
cmp
adc
(bad)
fisttp
inc
(bad)
and
fimul
icebp
or
call
dec
xchg
into
iret
mov
mov
cmp
cmp
jp
das
loopne
jecxz
(bad)
bound
imul
movs
mov
cwde
and
add
sub
stc
call
fsubr
jmp
test
xor
mov
scas
sbb
leave
ja
cmp
sar
data16
popf
rcl
test
adc
movs
xchg
inc
xor
loopne
cwde
sbb
bound
sti
(bad)
mov
mov
cs
mov
pop
repnz
hlt
push
push
sbb
sub
pop
mov
(bad)
mov
in
clc
or
out
push
jmp
imul
fs
mov
adc
push
jl
(bad)
scas
ds
jmp
gs
mov
test
cli
cld
xchg
mov
mov
outs
cs
into
mov
dec
pop
sub
xchg
mov
addr16
movs
mov
jae
or
arpl
mov
cmp
sub
sbb
cmc
in
inc
xchg
test
dec
(bad)
pop
mov
sub
mov
pop
push
push
adc
(bad)
jmp
and
mov
in
add
mov
and
fwait
mov
ds
mov
stc
scas
fisub
jnp
jo
mov
sahf
ins
sub
pop
js
jecxz
xchg
mov
das
jae
push
stc
lods
stos
(bad)
shr
dec
jns
(bad)
cmp
popf
(bad)
xlat
push
popa
cmps
out
ret
or
sbb
push
aaa
les
les
jp
jge
inc
xor
scas
mov
icebp
and
dec
mov
xor
pop
or
and
or
pop
and
mov
xor
mov
arpl
aam
fild
addr16
retf
daa
add
test
push
aam
push
adc
pmaddwd
adc
fadd
jae
mov
out
xor
popa
sar
xchg
lea
ja
xor
js
jge
pop
push
nop
jnp
test
jg
inc
pop
mov
mov
rcl
js
jp
out
test
inc
jmp
fmul
pop
out
pop
repz
or
and
and
mov
xchg
pop
(bad)
ficomp
sub
test
fcomp
clc
add
push
inc
sbb
add
mov
cmp
and
icebp
and
rol
into
ins
int
add
pop
stos
ja
out
sbb
sub
addr16
pop
push
pusha
mov
push
sbb
out
imul
xchg
push
inc
and
or
int
sub
es
and
mov
or
fisttp
movs
sub
loopne
or
in
sub
xor
and
stos
xor
std
push
loop
outs
xor
mov
fs
out
sub
inc
sbb
mov
sbb
aaa
xchg
push
adc
xor
stos
push
rcl
bound
add
mov
cmc
popf
outs
xor
aad
pop
push
jg
retf
jecxz
dec
popf
adc
pop
nop
dec
enter
ds
cmp
cwde
pop
imul
ins
mov
std
or
xchg
out
int3
dec
pop
aaa
xchg
mov
xchg
stc
test
jmp
jg
pop
mov
clc
jno
or
or
cmp
cmp
imul
mov
or
xor
loop
icebp
sbb
inc
in
dec
retf
mov
cmp
ror
fcom
inc
mov
scas
movs
shl
dec
pop
xor
cli
xor
fisttp
fsubp
shr
and
mov
push
mov
and
push
and
sub
jg
inc
pop
jge
fmul
push
arpl
dec
pop
mov
inc
push
fwait
cmp
pop
retf
aad
fmul
das
enter
pop
xchg
sahf
(bad)
mov
mov
sbb
adc
enter
mov
(bad)
mov
or
neg
xchg
push
cmps
dec
xor
movs
or
xchg
outs
test
add
aam
jge
les
xchg
pop
std
aad
push
lods
mov
inc
mov
hlt
scas
mov
test
and
(bad)
sbb
arpl
repnz
out
mov
test
push
addr16
(bad)
push
jae
push
sahf
mov
hlt
xor
jbe
loope
mov
fisubr
in
mov
loopne
or
or
iret
jge
cmp
dec
jle
pop
mov
pusha
or
mov
sub
push
cmps
jne
pop
in
mov
out
leave
fwait
push
adc
jecxz
fwait
and
add
icebp
inc
stos
sbb
shl
sti
movhps
sti
(bad)
sbb
outs
sub
pusha
pop
(bad)
xor
cdq
adc
jmp
cli
(bad)
sbb
imul
fisub
scas
push
or
mov
jge
and
and
test
ja
repnz
aas
mov
das
cmp
shl
jmp
fidivr
dec
cmp
es
scas
jmp
push
cdq
mov
push
neg
aaa
sub
inc
jne
in
movs
scas
cs
cdq
scas
in
pop
int
adc
mov
je
int3
stos
push
dec
jnp
mov
mov
cmp
test
fild
and
neg
add
or
push
daa
test
bound
outs
enter
fcom
dec
sub
loopne
sbb
mov
ds
mov
pop
test
sub
xor
xor
sbb
sub
aaa
xchg
aad
add
cmps
sub
cmps
or
cdq
movs
ja
push
imul
aas
xor
int3
popf
xchg
push
mov
push
mov
add
dec
push
mov
jb
and
repz
stc
lds
mov
mov
jg
jmp
loope
setnp
arpl
retf
mov
sub
icebp
pushf
lods
repz
call
adc
jne
push
pop
cmps
das
movs
sti
jbe
bound
push
mov
push
call
mov
hlt
pop
push
add
cmps
into
fs
aam
cmc
fdiv
mov
sub
aam
(bad)
mov
stos
xchg
faddp
jne
mov
jae
sub
addr16
(bad)
lock
mov
retf
xor
xchg
retf
xchg
and
fdivr
jae
adc
ret
nop
out
sahf
add
dec
cs
(bad)
and
imul
add
xchg
or
xchg
and
inc
into
xchg
je
xchg
and
mov
out
(bad)
ret
cwde
mov
mov
arpl
jns
in
stos
ins
(bad)
and
ins
push
loop
iret
les
push
sub
xlat
(bad)
mov
jg
and
ins
add
push
fild
lods
adc
inc
ins
jo
mov
int
push
cmp
xchg
jmp
and
pop
mov
imul
jo
fbstp
loope
ret
aad
cli
jae
mov
(bad)
or
mov
outs
add
aas
iret
push
sbb
lods
ss
stc
jno
mov
add
repz
(bad)
mov
and
xor
popf
and
arpl
aas
mov
and
jp
mov
dec
int3
mov
popa
rcr
ds
fs
xor
clc
data16
call
push
pop
mov
mov
mov
repz
pop
adc
scas
mov
mov
sbb
cmps
jmp
call
sahf
dec
jl
cwde
cmp
mov
ins
cmps
sub
test
ins
int3
cmp
push
out
(bad)
jmp
mov
push
iret
push
ret
jnp
inc
(bad)
fsub
jl
or
(bad)
rcl
pop
test
jle
mov
or
xchg
movs
mov
and
out
int3
movs
fstp
scas
std
stos
(bad)
add
pushf
xchg
daa
jl
adc
enter
mov
shl
dec
add
aam
out
in
fistp
pop
xchg
pop
mov
sub
test
jne
jle
mov
test
jo
inc
cld
js
jnp
jecxz
int3
call
je
ret
pop
xor
je
jmp
bound
xchg
xchg
adc
mov
shl
ficomp
repz
cmp
inc
call
pop
xor
mov
loop
push
shl
div
mov
das
nop
push
sti
inc
dec
enter
jmp
add
pop
imul
sti
imul
test
or
or
pop
dec
arpl
stos
fcomp
out
test
mov
call
push
lods
popa
mov
retf
mov
dec
cmp
lahf
mov
push
pop
(bad)
repz
test
lods
(bad)
loope
outs
pop
test
sar
mov
test
(bad)
cld
mov
xchg
cmps
push
shl
ins
xchg
adc
js
pushf
mov
jmp
mov
rcl
fadd
pop
or
movs
fnstsw
repnz
adc
jmp
push
rcl
ins
pusha
dec
jecxz
ds
mov
push
out
push
gs
mov
sahf
fstp
mov
pop
mov
mov
xchg
das
(bad)
and
fs
outs
out
xor
xor
std
mov
mov
pop
push
fisubr
lods
xchg
jnp
bound
(bad)
adc
xlat
fild
dec
cld
sbb
pop
pushf
movs
aas
jne
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
sbb
daa
push
test
enter
sbb
jo
ret
cmp
jmp
rcl
push
fldenv
pop
inc
data16
fs
pushf
ret
arpl
xor
idiv
or
daa
add
inc
icebp
cmp
jecxz
jmp
in
mov
lock
and
pop
adc
(bad)
ja
and
call
fimul
push
inc
inc
rol
fwait
add
push
data16
sub
xor
and
call
mov
mov
retf
loopne
cmp
fidivr
sbb
into
out
frstor
repz
mov
jo
movs
push
movs
inc
(bad)
dec
shl
mov
ja
(bad)
push
ret
jns
call
cmp
loope
js
cmp
cmp
in
hlt
mov
loope
paddw
call
mov
sbb
test
xor
inc
idiv
jae
test
das
mov
mov
mov
mov
mov
and
mov
stos
dec
add
cmc
popf
cmp
daa
jne
sub
xchg
mov
and
cmp
pop
addr16
call
fldenv
jne
mov
in
dec
in
jmp
in
aaa
dec
ffreep
xchg
pop
mov
pop
cmc
pop
outs
push
std
popf
test
adc
mov
lahf
cmp
cmp
jno
cli
pop
lea
sbb
push
(bad)
rol
ror
xor
ins
jno
cmp
mov
ins
adc
call
sub
out
inc
dec
xchg
outs
add
mov
jecxz
ja
repz
dec
idiv
(bad)
and
xchg
inc
push
dec
adc
retf
(bad)
into
push
loopne
push
mov
add
xor
push
dec
scas
loop
(bad)
mov
icebp
retf
loopne
into
cmp
or
jne
and
sub
mov
xchg
xchg
jno
mov
inc
dec
push
jl
in
xchg
out
sub
lods
sbb
xor
mov
sub
shl
inc
lock
xchg
cld
or
fstp
push
mov
aad
cmps
test
push
sub
fmul
sub
movs
frstor
nop
adc
std
xor
jmp
jnp
jb
and
call
test
div
fcom
stos
jp
pop
daa
jg
inc
cmp
jnp
fcom
in
call
pop
in
aaa
sub
imul
(bad)
out
les
nop
sbb
push
icebp
test
pop
lods
mov
aaa
adc
jmp
xchg
mov
int3
test
outs
xor
sub
or
xchg
mov
dec
adc
adc
mov
inc
test
jecxz
fwait
inc
fiadd
mov
lods
mov
mov
into
mov
pop
clc
or
jbe
cmp
or
jno
mov
setne
or
pop
xchg
add
rcl
fist
push
pop
sti
adc
inc
mov
jo
xchg
iret
retf
aas
mov
xor
aam
dec
xchg
mov
or
add
std
out
stos
stos
and
sbb
cmps
cmp
and
inc
inc
ror
or
push
mov
rcr
cmp
cmps
inc
out
lods
daa
inc
out
scas
lea
push
retf
inc
jns
pop
test
jno
inc
or
loope
std
daa
dec
add
jg
mov
push
dec
(bad)
and
sbb
pusha
add
sbb
push
add
jle
cdq
mov
cli
(bad)
or
push
inc
test
xchg
mov
mov
mov
cli
xchg
sbb
xchg
add
cld
sbb
iret
inc
jno
popa
and
pop
imul
std
repz
ud2
gs
mov
(bad)
scas
pusha
cmp
fadd
fldcw
jno
jg
mov
repz
retf
test
icebp
push
shl
xor
daa
jecxz
(bad)
add
sub
stos
sub
sbb
enter
sub
dec
mov
clc
lods
mov
stc
outs
mov
mov
fbld
aaa
adc
or
inc
ficom
mov
into
imul
loop
in
mov
bound
mov
add
(bad)
fcmovu
shr
adc
mov
push
add
or
pop
push
mov
retf
fiadd
xor
or
xor
(bad)
or
xchg
cdq
pop
jl
mov
call
cmp
mov
int3
add
loopne
xchg
lods
pop
cdq
ds
push
cs
leave
sbb
jmp
xchg
mov
dec
mov
jle
dec
xor
adc
and
adc
pop
(bad)
js
mov
(bad)
iret
pop
int
shl
out
cmps
xor
in
mov
cmps
ja
stos
aad
push
test
cld
mov
pop
les
pop
mov
(bad)
xchg
fnstenv
cdq
jne
and
imul
inc
sbb
mov
jae
icebp
cmp
sub
ror
shl
movs
jmp
cmps
out
cmc
mov
int3
add
out
mov
lods
dec
pop
mov
cld
lods
sub
mov
push
movs
push
in
ins
cmp
call
cmp
ins
sub
inc
dec
xlat
mov
in
fcos
fstp
retf
jb
dec
pop
cmp
imul
jl
imul
loop
movs
push
mov
cs
imul
push
test
push
push
cs
jo
mov
(bad)
(bad)
out
movs
mov
test
bound
sub
inc
sub
mov
mov
xor
push
inc
mov
es
or
(bad)
(bad)
dec
jmp
pop
mov
cmp
pop
ins
pop
pusha
sbb
adc
pop
cmp
jle
scas
push
aas
pop
jg
lods
inc
mov
ficomp
call
dec
outs
xchg
mov
push
add
data16
xchg
lahf
and
jle
xor
push
in
xchg
idiv
imul
ret
fstp
lea
inc
mov
ja
std
push
enter
xor
mov
pushf
arpl
mov
push
movd
and
rcl
cmp
mov
retf
call
sbb
jmp
fiadd
add
(bad)
test
repnz
addr16
push
push
aam
dec
push
dec
or
cmp
mov
nop
ret
aaa
sbb
(bad)
and
sub
leave
push
cmp
and
iret
sub
xor
lods
cmp
dec
pop
or
inc
mov
xor
mov
in
or
outs
push
pop
cmp
jae
add
(bad)
mov
or
bound
push
fiadd
sbb
jp
sbb
cmp
jmp
push
test
sbb
(bad)
pushf
(bad)
(bad)
jl
loope
aas
aam
lods
or
cmp
xchg
mov
jnp
int
stos
cmp
daa
faddp
call
xchg
jecxz
loope
pop
dec
stos
dec
rcr
and
add
add
out
push
cmp
sahf
(bad)
xchg
adc
(bad)
clc
sbb
cmp
add
int
out
(bad)
(bad)
hlt
and
sub
(bad)
dec
das
(bad)
in
pop
(bad)
idiv
cld
dec
cdq
fucomip
aad
push
loope
jmp
sti
out
pop
pop
call
mov
xchg
push
mov
push
ror
jae
dec
xchg
retf
loopne
dec
dec
inc
into
bound
dec
loope
cmp
mov
retf
pop
jmp
mov
movs
sub
jns
mov
xor
mov
inc
cwde
sti
xchg
(bad)
jo
in
add
xor
push
pop
bound
loope
test
push
jle
push
fadd
cmp
mov
or
test
fist
adc
dec
call
mov
js
ss
out
aas
or
add
pusha
retf
outs
xor
mov
jecxz
into
mov
loopne
push
jmp
sar
mov
int
jp
pop
neg
mov
fld
and
cmc
mov
mov
aas
xor
hlt
aad
xchg
or
jae
loopne
je
jne
dec
ins
stc
lea
sub
inc
out
ret
mov
in
fadd
mov
jg
sbb
mov
jmp
rcl
push
data16
mov
mov
sahf
fbld
fsubr
bswap
inc
mov
mov
dec
aas
cmc
out
mov
jmp
test
xor
js
sub
jl
sbb
mov
ret
fwait
cmps
push
adc
in
jns
neg
mov
bound
xor
push
repz
stos
clc
pop
inc
pop
mov
mul
adc
mov
adc
pop
or
jg
arpl
imul
pop
mov
outs
mov
ins
push
popa
dec
add
bound
ja
addr16
xchg
pop
adc
repnz
call
cmps
cmps
pop
scas
mov
mov
cli
push
adc
gs
loope
ins
xor
pushf
jle
stc
sub
shr
or
jb
and
cmp
xchg
lods
jns
icebp
leave
out
add
and
lock
push
mov
push
push
fstp
jnp
mov
mov
fcomp
push
test
dec
mov
sti
test
mov
jb
ret
mov
push
add
dec
sbb
jnp
ss
shl
nop
daa
fwait
add
(bad)
jae
sub
loope
and
shr
mov
movs
test
iret
jecxz
sti
outs
sbb
dec
test
dec
js
movs
mov
test
or
scas
dec
stos
xchg
and
std
pop
and
outs
ins
retf
push
iret
dec
jmp
inc
add
push
cli
hlt
div
je
scas
(bad)
mov
lds
push
int
int3
xchg
xchg
ins
adc
push
add
push
cdq
adc
xchg
out
(bad)
clc
(bad)
rol
xchg
scas
inc
outs
idiv
sbb
pop
and
mov
ror
mov
mov
pop
dec
leave
je
fsubr
jg
dec
sub
jno
pop
pushf
(bad)
lahf
cmp
test
add
xor
add
int3
fldlg2
dec
das
les
repz
out
lods
push
jl
dec
cs
cdq
jg
jp
repnz
ins
push
pop
or
and
pslld
xor
sbb
ss
sbb
dec
(bad)
lahf
imul
out
je
xchg
inc
and
fisub
mov
cli
xor
aaa
je
pop
or
out
iret
inc
shl
fisubr
shr
fcomp
pop
xchg
or
aas
xchg
or
(bad)
xchg
aaa
stc
fstp
ss
std
adc
sub
mov
idiv
sub
call
add
das
xchg
cmp
pop
pop
and
lods
imul
imul
inc
std
out
mov
jnp
iret
sbb
sar
mov
(bad)
lahf
sub
bound
aam
bound
inc
push
jge
xchg
mov
(bad)
stos
jl
(bad)
or
push
fs
add
cmc
dec
loopne
sar
jg
inc
lahf
add
add
dec
xchg
mov
loopne
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
jne
addr16
nop
or
enter
gs
mov
mov
mov
xchg
das
fwait
dec
sbb
or
cs
gs
inc
test
cmovg
mov
xchg
clc
xlat
mov
push
sub
adc
stc
cmp
das
addr16
jae
mov
cmp
and
jbe
outs
pop
sub
push
repz
or
and
cmp
xor
jecxz
sbb
fs
fwait
arpl
inc
inc
mov
stos
pop
aam
mov
repnz
js
and
repnz
push
xchg
aad
inc
xchg
or
imul
sub
call
mov
scas
std
xor
dec
dec
xchg
stos
adc
cmps
inc
out
(bad)
adc
(bad)
mov
bound
fmul
mov
xchg
adc
ficomp
popa
mov
mov
cld
cmp
sbb
sbb
in
fadd
das
xchg
test
test
push
add
out
movs
aaa
neg
jmp
repz
in
push
add
inc
imul
les
(bad)
ret
and
mov
jg
ret
popf
dec
mov
push
jnp
push
pop
cmp
movs
xchg
(bad)
xor
xchg
xor
sub
popf
(bad)
push
gs
jge
add
pop
inc
mov
out
fsub
pop
cmp
dec
jmp
pop
cmp
sbb
mov
push
int3
shl
les
enter
test
mov
loope
cmc
call
fisttp
bound
mul
aad
mov
pop
sbb
retf
inc
push
ds
stos
enter
mov
jmp
jmp
sub
mov
gs
popf
arpl
push
xchg
pop
push
repz
sti
imul
mov
inc
jle
scas
dec
iret
retf
lea
xor
aam
int
icebp
mov
push
cmp
imul
push
xchg
dec
dec
cmc
fs
push
dec
push
mov
ror
push
jae
popa
jp
ret
mov
fcmovbe
call
xor
mov
pop
imul
aas
lods
xchg
mov
(bad)
fild
sahf
mov
adc
int3
mov
lods
fdivr
and
in
push
fistp
add
std
fs
pop
pop
dec
aam
add
pop
xchg
push
out
xchg
ror
call
(bad)
xlat
jecxz
bound
fcomp
loopne
test
ja
mov
jnp
or
mov
int3
or
push
jae
add
jecxz
ret
cwde
sahf
sub
jecxz
push
nop
sbb
cmp
clts
mov
leave
pop
sbb
fld
and
sbb
in
cli
sbb
or
loope
in
retf
jl
femms
sub
fistp
mov
outs
inc
adc
pop
aas
xor
xor
push
jl
and
and
sub
cli
or
jl
cmp
(bad)
rol
imul
lods
hlt
push
dec
add
add
movs
push
cmp
loop
cs
sub
xor
bound
cmp
dec
adc
pop
clc
retf
mov
add
ss
(bad)
mul
cmp
aas
enter
fnstenv
ja
cli
loope
fs
jg
push
cli
rep
leave
(bad)
(bad)
mov
and
dec
lea
cmp
loopne
ror
mov
sub
repnz
fwait
out
inc
pop
cmps
std
imul
push
mov
add
jne
outs
ret
mov
inc
in
mov
jmp
das
psubq
sbb
xor
mov
imul
adc
icebp
xor
out
cvttps2pi
pop
popa
pop
std
sti
cmp
cmp
add
xchg
outs
push
mov
adc
aam
test
push
pop
adc
loop
test
jp
xchg
xor
adc
sbb
sbb
js
lods
lods
int3
mov
je
aad
in
jge
aad
pusha
mov
pop
stos
iret
out
mov
inc
sub
out
and
aas
adc
jg
and
push
data16
xlat
sub
and
xor
stos
adc
repz
dec
js
dec
push
jo
retf
push
adc
jp
xchg
inc
jg
cmp
jmp
dec
fld
fcomip
fldenv
stc
jb
cmp
(bad)
in
inc
pop
add
call
xchg
push
and
jg
stos
icebp
ficom
repz
jp
icebp
ret
xchg
jne
or
sbb
lods
mov
sbb
mov
int3
adc
(bad)
(bad)
xlat
test
jae
retf
mov
cld
outs
and
mov
mov
mov
mov
lods
pop
mov
cmp
push
jge
or
int
or
test
loop
sbb
pmulhuw
call
cmps
lds
mov
test
daa
loope
imul
xor
sbb
not
call
pop
aas
loope
sub
mov
mov
jmp
scas
inc
stc
mov
int
into
dec
push
fimul
mov
pusha
mov
mov
mov
retf
mov
(bad)
(bad)
jp
jl
movs
sub
lea
inc
daa
shl
fistp
das
xor
sar
pop
jmp
lds
dec
not
leave
pandn
mov
xchg
xor
mov
jmp
sti
add
int
sub
lods
sbb
cmp
test
js
push
or
pop
rcr
push
mov
test
pusha
jle
lea
sub
mov
pop
adc
mov
jb
ss
pop
push
sub
xchg
cmps
pusha
jmp
popa
and
cld
sub
pop
jp
out
jecxz
movs
and
jb
outs
pushf
cmps
sub
push
gs
mov
daa
inc
cli
mov
daa
and
xor
int3
sbb
sub
fisub
push
jecxz
repnz
mov
call
movs
or
stos
cmp
jno
jecxz
inc
push
mov
or
mov
jb
shl
sbb
fwait
sbb
clc
jno
mov
push
adc
retf
mov
sbb
sar
mov
xchg
call
out
push
icebp
(bad)
hlt
mov
cld
out
aam
ds
into
pop
lds
jno
data16
sbb
std
ds
mov
pop
cmp
xchg
dec
lahf
push
ins
mov
cmp
stc
inc
dec
call
pop
sub
das
test
sbb
xchg
push
retf
setns
jnp
mov
xchg
sub
inc
scas
imul
scas
xor
fwait
jmp
inc
xchg
mov
addr16
daa
idiv
popf
mov
cmp
ss
out
push
pop
jne
jecxz
add
or
cmp
sbb
fwait
shl
xor
inc
inc
and
mov
and
outs
and
jl
fcomp
push
(bad)
leave
test
stos
cmp
sbb
dec
cwde
adc
loope
call
(bad)
mov
retf
fdiv
xchg
cli
and
fwait
icebp
in
ins
bound
loopne
(bad)
mov
fldcw
aam
mov
jmp
xchg
cmp
seta
cmc
xchg
dec
dec
scas
hlt
lds
sbb
pop
adc
inc
mul
and
sub
pop
dec
cmp
xchg
xor
mov
loope
das
push
mov
mov
adc
push
shl
das
mov
out
out
mov
ds
jb
pop
scas
pop
sub
add
jns
ss
jmp
out
xor
dec
adc
jl
jno
imul
into
repnz
mov
push
mov
adc
push
es
imul
sub
rcl
dec
sbb
jno
jecxz
jg
dec
jge
js
or
fisttp
jmp
ds
or
sub
pop
xor
repz
loopne
sbb
js
aam
or
cdq
mov
fld
pusha
shl
(bad)
xchg
inc
mov
cwde
xor
jbe
in
add
ss
jae
mov
int
lahf
mov
cmc
in
lds
data16
add
ror
fldenv
mov
cmp
cmp
out
jns
jmp
cmp
add
je
push
cs
(bad)
inc
pop
adc
xor
add
out
add
jecxz
ret
add
mov
mov
pop
cmp
mov
out
test
ds
rcr
xchg
ret
stos
out
mov
sub
(bad)
pop
pop
out
stos
mov
jge
fist
out
cmp
fucomp
aam
data16
jmp
xchg
push
imul
push
icebp
push
push
adc
sbb
fisub
scas
sbb
sbb
sub
jae
daa
ror
pushf
sub
stos
xchg
xchg
and
pop
fisub
sbb
adc
sbb
jno
pushf
(bad)
cs
cmp
dec
loopne
xchg
push
ja
jmp
sahf
test
or
cmps
(bad)
fstp
aad
push
mov
mov
(bad)
push
stc
test
xchg
add
cmp
das
or
xchg
push
pop
dec
jmp
and
mov
and
pop
dec
cmp
lahf
push
mov
cmp
mov
imul
pop
call
(bad)
jae
and
or
sub
cmc
out
cmp
and
shr
pop
cdq
pushf
push
mov
ss
fdivp
xchg
shrd
loope
pop
jbe
lods
ss
mov
pop
rol
lahf
out
jnp
test
mov
out
repnz
pop
test
mov
pop
push
dec
das
inc
(bad)
adc
cdq
retf
xchg
(bad)
neg
rol
mov
leave
jo
xchg
and
pop
fcmovnbe
scas
dec
hlt
pushf
ds
and
scas
jo
fisub
(bad)
(bad)
test
test
jno
pop
scas
mov
sbb
cmps
jae
into
aaa
jg
ret
push
fcmove
xchg
push
shr
xchg
sbb
scas
sub
aam
jge
outs
xchg
rcr
fbld
pop
mov
mov
mov
jo
pop
(bad)
ret
test
pop
(bad)
dec
stos
jae
ficom
jnp
in
sahf
ret
rcl
vucomisd
add
add
jmp
daa
pop
sbb
cmp
dec
paddusw
mov
dec
gs
call
(bad)
push
stc
inc
dec
je
and
sbb
jns
sbb
inc
cld
shl
fisttp
lea
fwait
dec
in
jb
cmp
mov
cmp
cld
pop
adc
sbb
dec
(bad)
fidiv
cmps
test
add
jmp
ftst
jb
jp
or
xchg
mov
rcl
lea
rcr
popf
lea
xor
mov
popf
jnp
cmp
mov
push
and
ss
lds
xor
mov
or
jl
test
stos
out
and
rcr
pushf
push
out
stc
mov
loope
ins
cmp
mov
sti
inc
popa
outs
js
ds
mov
pop
jg
movs
hlt
cmp
ss
(bad)
in
adc
add
in
je
cmp
clc
daa
lock
loopne
sar
jmp
push
inc
jmp
(bad)
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
enter
push
addr16
jno
test
cmp
fs
out
and
ins
shl
adc
jnp
(bad)
inc
inc
(bad)
cmp
iret
dec
clc
add
lea
and
in
mov
cmp
mov
cmp
jmp
push
push
aad
cmc
pop
(bad)
cmc
jmp
cmc
fstp
mov
lods
neg
push
repnz
jecxz
sub
or
and
xchg
imul
arpl
push
and
dec
rol
mul
aas
dec
mov
cmp
repz
mov
or
pop
(bad)
iret
scas
pop
add
daa
cmps
cmp
iret
or
dec
and
movs
nop
gs
(bad)
ins
je
into
and
mov
mov
pusha
pop
pop
pop
inc
loopne
adc
jge
cmc
mov
in
sti
test
hlt
or
ins
jns
nop
aad
retf
mov
daa
inc
(bad)
xor
lods
pop
shl
adc
leave
mov
mov
out
es
retf
test
iret
mov
rcr
or
mov
xchg
ret
push
imul
pop
call
mov
pop
mov
push
fs
loop
xor
gs
cdq
jle
call
pop
(bad)
mov
push
or
mov
stos
ja
ret
stos
arpl
out
fwait
aas
cmp
inc
repnz
jnp
inc
add
xchg
lods
fdiv
out
aaa
int
jno
xor
cmp
ds
out
xadd
dec
mov
popf
push
adc
sub
xchg
push
mov
push
mov
stc
int3
test
mov
push
mov
mov
lds
push
fimul
out
or
fcomp
xchg
neg
and
push
cmps
repz
mov
dec
push
or
pop
mov
mov
dec
nop
xor
add
(bad)
icebp
ret
mov
aad
add
xchg
rcr
daa
fst
and
out
popa
test
sub
ret
mov
out
test
aad
scas
cmp
scas
popa
lock
aad
shl
lds
(bad)
push
repz
dec
xchg
test
addr16
and
aam
into
push
sbb
mov
stc
idiv
mov
pop
mov
les
add
out
pop
push
jp
pop
inc
push
addr16
rcr
dec
mov
(bad)
fmul
pop
sub
xlat
out
test
popf
xchg
jnp
scas
icebp
or
sbb
jo
inc
std
xchg
sbb
fidivr
hlt
js
aaa
mov
sbb
cdq
ins
push
sub
cld
shr
mov
cmp
fwait
cmps
add
aaa
push
mov
mov
mov
stos
inc
pushf
pusha
mov
push
or
mov
repnz
add
sub
es
mov
lock
dec
or
out
and
dec
pusha
xchg
add
inc
xchg
adc
pop
ret
in
mov
add
xlat
leave
out
lods
call
iret
sub
scas
cmc
cmp
inc
fwait
(bad)
outs
add
pop
bound
mov
pop
rol
mov
js
push
pop
inc
pop
xchg
push
and
or
jmp
sbb
in
int
ss
xchg
sbb
dec
adc
xchg
mov
retf
push
(bad)
inc
push
(bad)
ins
hlt
(bad)
lock
inc
mov
imul
dec
adc
test
cli
pop
cmp
cdq
imul
and
or
adc
addr16
xchg
es
popf
movs
std
imul
inc
and
sbb
ins
xor
ret
fsubr
out
mov
cmp
daa
aam
xchg
or
mov
xlat
jp
xor
test
or
or
stos
rcl
ds
sahf
jecxz
xor
icebp
movq
xchg
cmp
push
sbb
pop
out
mov
mov
cmp
js
int3
xchg
mov
pop
mov
enter
loope
pushf
pop
test
push
mov
dec
shl
sbb
mov
test
ret
out
mov
cwde
in
test
jb
push
mov
inc
adc
cmp
int3
psrld
push
cmps
pop
sbb
xchg
xor
mov
icebp
(bad)
outs
jmp
shl
sub
jns
es
push
test
rcr
ss
or
rcr
sbb
leave
cli
cmp
push
lea
inc
pusha
sub
(bad)
inc
pop
mov
push
nop
fld
fdiv
mov
adc
or
fwait
fwait
loop
(bad)
push
cmp
bound
in
fisttp
int3
daa
dec
xor
lods
push
movs
dec
pop
or
mov
lahf
(bad)
scas
rcl
cmp
xor
out
mov
loope
inc
loopne
into
or
xchg
clc
rcl
lahf
xchg
in
loope
dec
mov
push
ss
dec
xlat
adc
enter
(bad)
lahf
shl
push
xlat
psubsb
shr
dec
ds
jp
ins
xchg
mov
pushf
cld
scas
add
test
mov
or
pop
addr16
ror
jae
xchg
cmp
mov
jge
jmp
dec
lock
icebp
scas
in
sub
ins
jbe
add
sub
dec
out
adc
xchg
dec
mov
hlt
pusha
ret
out
rcr
fcom
iret
daa
movs
xor
sti
cs
mov
shl
stc
xchg
adc
ficom
shr
stos
ret
cmp
ja
aaa
sahf
mov
out
xchg
sti
adc
mov
mov
push
lahf
scas
or
push
(bad)
xor
dec
push
sbb
retfw
stc
mov
aaa
mov
xchg
into
and
in
sub
fcomp
sub
cmp
jle
pop
sbb
xor
imul
pushf
or
jns
or
sbb
jb
push
je
mov
(bad)
ds
loop
mov
mov
jge
test
mov
mov
test
sub
sti
loop
out
jmp
movs
jbe
cmp
dec
sar
adc
cmp
ret
push
or
rcr
(bad)
sbb
popf
mov
pop
test
jno
outs
mov
psrlw
stos
jno
movs
lock
rcl
or
(bad)
jns
mov
add
in
mov
jmp
mov
xchg
retf
adc
outs
inc
sti
es
loope
inc
dec
xchg
cld
or
xchg
jge
nop
sbb
and
jp
cli
loop
ret
ret
cli
sub
xor
sub
jb
callw
pop
adc
vmaxpd
dec
jb
jne
jae
or
mov
das
inc
aam
(bad)
mov
cmps
jmp
mov
ja
cdq
pop
push
and
aaa
xor
sub
sbb
mov
lea
mov
shr
xchg
movs
loop
fisttp
inc
pusha
repnz
mov
ret
ss
sub
inc
scas
mov
(bad)
lock
xchg
sub
or
dec
cmc
icebp
shl
outs
lahf
mov
shld
add
xchg
or
jmp
(bad)
mov
lock
daa
add
sub
sbb
xchg
mov
je
into
mov
outs
jge
div
xchg
lods
pop
mov
pop
fwait
inc
pop
mov
cwde
jns
movs
sahf
fs
pop
repnz
sub
es
mov
push
jmp
inc
retf
and
mov
adc
pop
retf
xchg
mov
lock
mov
ret
int
jmp
out
xor
ss
jmp
arpl
dec
jle
test
ffree
ss
movs
repnz
popa
dec
mov
icebp
jp
inc
push
sti
pop
push
mov
push
push
cmc
pop
xor
xchg
jno
and
popf
mov
into
adc
(bad)
sahf
adc
xchg
xchg
das
jne
ret
inc
fld
stos
into
nop
mov
ins
ret
aaa
arpl
xchg
dec
mov
adc
push
out
sub
mov
arpl
call
add
inc
popa
(bad)
fistp
pop
push
mov
jae
cmp
and
adc
icebp
retf
neg
mov
adc
scas
xlat
(bad)
cdq
dec
loope
add
push
pop
lods
popa
mov
rol
xor
push
mov
sbb
ret
mov
out
pushf
add
jbe
scas
sbb
or
fnsave
cld
dec
(bad)
jmp
cli
sub
lahf
pop
push
inc
arpl
pop
dec
ins
das
mov
stos
stos
retf
jp
addr16
pop
fidiv
popa
mov
add
push
pusha
in
iret
xchg
or
jecxz
fucomi
pop
rol
push
lds
cmp
and
out
mov
mov
lea
inc
adc
aas
inc
sub
adc
rcr
and
pop
push
imul
stos
icebp
repnz
sbb
ror
jg
mov
ror
call
outs
mov
in
pop
inc
and
lock
loop
loop
mov
mov
push
in
arpl
sub
(bad)
rep
mov
mov
fsubr
pop
test
movs
mov
leave
(bad)
dec
push
dec
cmc
add
xor
xor
in
fstp
gs
dec
or
rcl
pop
sub
stc
mov
or
mov
cmp
mov
mov
ins
pop
shr
dec
sbb
jecxz
inc
nop
fstp
cwde
ss
cdq
movs
adc
push
xchg
fstp
sahf
or
mov
fadd
pop
mov
scas
data16
test
stos
adc
push
xchg
repnz
loopne
into
repz
cmps
test
sub
clc
test
pop
pushf
fmul
into
aad
(bad)
imul
hlt
mov
fst
ins
(bad)
loopne
sti
stc
or
pop
cmp
retf
mov
das
int3
jge
iret
mov
loopne
das
xchg
clc
pop
and
jns
xor
xor
and
push
dec
xchg
cmps
rol
mov
repnz
xsave
jae
cmps
cmp
scas
(bad)
mov
hlt
jecxz
jne
push
mov
leave
rcl
ja
sbb
fdiv
or
test
or
ds
into
jle
xlat
addr16
adc
out
ins
stc
mov
(bad)
popf
lea
mov
repnz
sbb
lds
data16
into
jno
bnd
out
fstp
ret
sbb
daa
pop
daa
mov
push
fsub
jne
mov
movs
xor
cmp
or
mov
sahf
fwait
popf
push
cmps
mov
push
das
mov
repz
cs
dec
ds
push
aaa
popf
(bad)
int3
not
pop
mov
out
rol
(bad)
dec
cmp
cld
in
sbb
push
xor
(bad)
in
sbb
adc
pop
or
jnp
pop
mov
movs
sub
jmp
push
jle
rcl
fwait
sar
push
mov
cmp
add
ret
out
popa
jns
movs
test
test
pop
in
rcl
pushf
test
xlat
bound
sbb
jp
rcl
imul
cwde
pop
aaa
jle
xchg
push
fld1
mov
pop
lods
cmp
repnz
push
outs
int3
or
or
das
xchg
jne
push
xchg
adc
fcmovne
daa
sub
mov
xor
clc
mov
out
add
lods
inc
cmp
pop
fiadd
scas
sbb
leave
or
lahf
jg
inc
dec
lock
cld
rdpmc
cmp
jns
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
packuswb
push
inc
test
pop
test
cmp
pop
xchg
dec
enter
inc
neg
cmc
fcmove
push
idiv
jnp
movs
enter
fistp
inc
push
rol
and
hlt
outs
push
and
cmp
push
jecxz
add
adc
cdq
pushf
jno
data16
iret
inc
mov
pop
pop
inc
not
xchg
inc
hlt
mov
mov
loopne
or
out
popf
jae
retf
add
or
call
rcl
idiv
push
mov
cmp
mov
or
xor
or
mov
div
pop
lds
or
mov
(bad)
jge
mov
sahf
mov
push
inc
bound
xchg
shl
add
lahf
xor
sub
jmp
pusha
jle
dec
cmc
fldl2t
mov
push
jp
xor
cmp
sbb
pop
aam
adc
and
(bad)
or
jmp
jb
pop
mov
pusha
adc
and
ja
iret
rcr
dec
mov
daa
and
cmp
sbb
push
dec
push
popf
(bad)
in
(bad)
push
retf
mov
jo
mov
mov
add
jecxz
test
in
pop
push
mov
mov
pop
pop
(bad)
mov
enter
mov
rcl
dec
mov
arpl
lods
(bad)
add
(bad)
mov
sbb
push
or
sbb
lods
mov
sar
xchg
pop
mov
aam
jbe
and
sbb
jg
test
cdq
pop
adc
add
pop
xchg
test
(bad)
or
jb
adc
mov
xchg
jne
cmc
mov
mov
repz
lods
cvtps2pi
xchg
pop
pop
add
pmulhw
and
ins
(bad)
push
popf
ss
sbb
dec
pop
retf
dec
or
or
mov
(bad)
shr
std
cwde
ror
xor
cmp
out
xchg
scas
les
jl
sub
out
mov
dec
mov
and
in
mov
stos
leave
jge
loope
sub
in
cmp
iret
sub
sahf
out
repnz
repnz
(bad)
xchg
daa
adc
fnstenv
lea
adc
add
push
outs
mov
inc
sbb
data16
pop
cdq
xchg
mov
test
movs
fadd
cdq
gs
xor
scas
(bad)
add
add
jb
clc
movs
inc
dec
daa
test
aam
mov
test
xchg
add
jno
xchg
xchg
push
and
mov
xchg
stos
xchg
and
jecxz
inc
sub
test
arpl
call
xor
add
adc
push
and
xor
mov
mov
jnp
movs
inc
popf
loope
fnstenv
push
mov
inc
cmp
imul
sahf
popf
fadd
call
cmp
push
push
stc
adc
in
lods
xchg
mov
dec
inc
sahf
scas
or
hlt
inc
(bad)
ror
jl
ins
aas
mul
or
jle
test
push
je
inc
cmp
push
mov
nop
dec
jmp
pop
scas
outs
inc
cwde
fcmovne
test
out
mov
dec
call
mov
cmps
(bad)
inc
rcl
mov
ins
scas
pushf
inc
ficomp
push
out
bound
jno
div
call
jmp
mov
lahf
xchg
lods
mov
adc
sahf
cmp
popa
gs
add
sbb
inc
ja
shl
call
cli
test
push
sbb
lea
add
mov
mov
daa
dec
or
inc
(bad)
stos
xchg
inc
addr16
inc
cmc
lahf
ins
jnp
(bad)
and
adc
shr
mov
fmulp
imul
mov
iret
jns
retf
js
cmps
cmp
ds
pop
adc
test
xchg
in
xor
sar
fwait
data16
popa
ror
mov
jle
pusha
call
xchg
cdq
(bad)
lods
mov
adc
rcr
fnstcw
test
jne
or
cdq
sbb
mov
xor
call
bound
(bad)
repz
xchg
sub
xor
dec
pop
or
adc
shl
cmp
xor
xchg
inc
imul
jnp
sub
inc
jno
mov
es
mov
inc
cld
sub
dec
sub
(bad)
push
inc
mov
inc
in
pop
pop
jnp
les
mov
iret
inc
pop
sbb
inc
push
mov
xor
adc
test
mov
rcr
inc
dec
test
xor
push
les
pop
sahf
add
ret
stos
xchg
or
es
add
jnp
stos
xor
push
out
scas
aam
cmp
inc
ret
jno
cli
(bad)
push
mov
(bad)
mov
popf
mov
in
outs
sbb
(bad)
cdq
stc
fisub
adc
das
ja
push
stc
xchg
int3
jo
sbb
mov
cmp
mov
aad
(bad)
ins
ins
call
or
mov
retf
nop
repnz
adc
pop
test
sbb
xchg
mov
or
repnz
cmps
lods
cmps
inc
jo
neg
movs
fnstsw
retf
cmps
push
loop
ds
push
or
cld
push
mov
ss
sub
mov
(bad)
mov
out
loopne
and
popf
(bad)
fstp
das
in
ja
(bad)
rcl
inc
ss
push
bswap
push
gs
(bad)
dec
pop
add
daa
scas
and
hlt
fadd
aas
es
js
mov
das
addr16
out
in
sbb
jge
pop
cmps
inc
nop
adc
idiv
push
ja
xchg
in
cwde
ja
out
bound
jno
cmps
and
movs
or
not
ins
mov
aas
test
mov
push
cmps
ret
mov
add
out
dec
aad
xchg
jle
pop
inc
pop
lock
(bad)
sub
scas
movs
fwait
mov
jmp
ins
adc
fwait
add
out
push
leave
sahf
inc
mov
mov
adc
movs
scas
fwait
call
pusha
inc
sbb
cmps
scas
aam
adc
(bad)
outs
mov
mov
dec
cmp
mov
xor
xor
imul
shl
je
xor
and
dec
jl
in
in
adc
pop
inc
sbb
scas
jg
jbe
fisubr
push
fbstp
les
sbb
out
sahf
xlat
shl
adc
jnp
mov
aas
and
mov
push
jmp
sbb
pop
pop
ret
xor
out
in
bound
cmp
sbb
adc
dec
fimul
push
fldcw
push
stc
cli
pop
test
mov
push
mov
(bad)
jb
stc
fwait
xchg
and
and
cmp
cwde
test
add
mov
ret
ret
jne
and
cld
clc
push
pop
sbb
fs
inc
out
inc
aas
ret
dec
cmp
pop
stos
movs
sub
mov
mov
xor
jne
fimul
dec
popf
sub
add
xchg
sbb
sbb
call
or
clc
in
pop
fdivr
imul
jns
jae
fwait
mov
inc
js
inc
lock
aas
aad
cmp
sbb
shr
dec
jg
mov
ins
int3
popf
aad
lods
nop
xchg
mov
inc
push
push
das
sub
adc
stos
bound
mov
pusha
sbb
jmp
add
call
loop
scas
push
add
cmp
sti
mov
and
adc
mov
sti
sub
dec
push
push
push
pop
push
jg
outs
movs
lea
ds
leave
jge
and
loope
retf
jg
cmp
or
jae
mov
mov
enter
push
ss
fcmovu
hlt
pop
dec
adc
rcl
sub
mov
daa
inc
shr
sbb
mov
dec
mov
jns
add
idiv
inc
nop
dec
push
in
outs
iret
mov
icebp
out
enter
mov
jmp
inc
leave
cmc
sbb
clc
mov
das
out
sbb
outs
inc
hlt
push
and
fsubr
xchg
or
and
cld
jmp
mov
in
(bad)
aam
cmc
xchg
xor
sub
test
mov
test
test
fistp
xor
mov
fistp
xchg
add
add
xor
or
push
jns
adc
ret
outs
mov
mov
mov
xchg
data16
mov
retf
inc
push
dec
mov
popf
imul
loopne
iret
xchg
repz
pop
das
push
mov
jge
mov
cmp
pushf
adc
push
ds
inc
adc
push
add
repnz
pop
jmp
mov
mov
xchg
(bad)
mov
and
or
and
adc
pop
shl
lods
stos
push
push
pop
mov
shl
aam
test
sub
movs
adc
out
out
sbb
dec
pop
imul
pop
ret
xchg
imul
sti
je
outs
ds
in
push
push
fwait
and
out
adc
jle
clc
lds
cwde
mov
scas
and
in
ins
retf
sub
sub
shl
mov
cmp
sbb
test
cmp
mov
dec
lea
push
lods
sbb
or
pop
xchg
inc
cmps
rcr
sti
dec
int3
jl
or
sbb
test
(bad)
xchg
jne
or
adc
sar
pusha
fiadd
rol
mov
sar
dec
test
into
inc
sbb
mov
stos
fnsave
out
neg
(bad)
in
jle
rol
je
cmp
dec
retf
int
adc
mov
(bad)
call
adc
gs
push
xchg
outs
xchg
jmp
scas
push
ret
mov
std
(bad)
aas
ss
movs
sbb
(bad)
out
ret
add
(bad)
leave
fidiv
lds
push
das
shr
jae
mov
dec
cmp
shr
sbb
retf
lea
jg
out
inc
adc
sbb
push
sub
loop
pushf
cwde
push
cli
fist
cmp
pop
add
(bad)
sbb
lods
cwde
rcr
mov
sbb
sub
ret
push
icebp
mov
stos
repnz
repnz
out
pop
aas
cmps
mov
out
jle
sub
adc
test
and
push
mov
pop
jp
js
inc
loop
fdivr
jmp
pop
js
dec
pop
inc
cmps
inc
in
dec
int
sub
mov
mov
sbb
shr
cdq
dec
fcom
jmp
jg
xchg
std
loopne
sub
dec
sub
cs
pop
retf
mov
(bad)
bound
je
cmp
cmp
and
mov
sbb
in
adc
lods
daa
test
repz
push
mov
mov
rcr
ficomp
fisttp
mul
dec
cwde
in
xchg
cmp
and
outs
mov
scas
and
arpl
inc
fs
ss
push
cmp
das
outs
push
aam
into
cmc
lahf
js
mov
pop
mov
push
scas
adc
mov
or
pop
dec
aam
rol
add
dec
cld
sbb
pop
or
inc
or
inc
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
inc
into
sub
xor
fldcw
gs
xchg
lods
lods
sub
jnp
jne
pop
fstp
xor
mov
jl
(bad)
rep
lahf
xchg
lock
dec
popf
das
popf
inc
sbb
cwde
fdivr
jmp
movs
lds
clc
mov
sub
cmc
jns
cli
xchg
push
lock
cdq
adc
mov
inc
mov
cmp
cld
dec
cdq
not
mov
js
into
aas
sub
pop
jo
push
mov
sbb
inc
push
ja
xor
mov
jnp
pusha
aam
jmp
cs
jecxz
ins
(bad)
arpl
sahf
dec
out
mov
addr16
pop
shl
pop
sbb
loop
xlat
popf
inc
daa
inc
outs
scas
scas
mov
jae
test
(bad)
leave
mov
(bad)
out
mov
mov
dec
sbb
add
fmul
mov
mov
add
inc
jmp
scas
jge
fild
jne
xchg
xchg
mov
sbb
call
adc
dec
xchg
leave
rol
shr
clc
sub
sti
dec
loop
in
mov
fisubr
repz
leave
cmp
cmovp
in
and
(bad)
sub
mov
sub
inc
sti
in
gs
fcmovb
lea
push
xchg
dec
jno
adc
dec
ja
movs
(bad)
mov
pop
pop
pop
ss
ds
pusha
int3
xlat
cli
inc
ret
stc
mov
inc
and
std
test
jmp
add
pop
shl
ss
cmps
cmp
xchg
fs
push
xor
test
jns
test
loop
jl
lods
movs
cmp
leave
shl
mov
dec
out
inc
loop
repz
sub
out
adc
sbb
out
lds
jl
push
jle
push
lods
inc
sahf
(bad)
sub
sub
dec
lds
sub
loop
shl
pop
add
or
sbb
ins
pop
cli
lahf
loopne
jmp
inc
jmp
imul
scas
imul
adc
xchg
daa
shl
dec
and
icebp
aam
cwde
dec
push
icebp
and
xor
push
(bad)
xor
dec
and
add
dec
pop
fwait
not
lods
jmp
aas
sub
mov
mul
leave
or
fistp
pushf
popf
in
stos
mov
jno
jne
das
(bad)
pop
pop
mov
in
int
pop
sbb
add
xor
push
call
sbb
call
(bad)
push
call
sahf
inc
das
jge
push
sub
shr
jmp
repnz
icebp
mov
call
shl
shl
popf
imul
jo
je
js
mov
xchg
mov
mov
pop
stos
xor
mov
xchg
jno
mov
js
inc
ret
dec
aad
mov
add
sbb
lds
or
cmp
mov
lea
call
mov
xor
out
adc
scas
xchg
adc
add
rcr
push
fistp
xchg
call
leave
dec
out
pop
fidiv
sub
pop
push
aas
xchg
adc
aas
push
sar
pop
stos
(bad)
adc
xlat
out
pop
adc
adc
jnp
mov
retf
test
iret
(bad)
fst
cmp
lods
mov
js
jmp
mov
mov
xchg
pop
(bad)
cli
je
je
daa
inc
add
out
call
jne
dec
mov
(bad)
fld
push
jmp
add
pop
jbe
xlat
xlat
call
out
aaa
push
ror
mul
call
(bad)
iret
xchg
out
jns
cmp
xor
leave
es
sbb
mov
test
xor
sub
inc
shufps
icebp
pop
fs
sub
inc
bound
and
popf
nop
clc
jle
cld
or
sti
ins
outs
test
mov
and
pop
add
rcl
sub
xchg
jb
call
mov
aas
sbb
dec
push
or
push
ror
jecxz
cdq
lods
adc
mov
xchg
cmc
adc
jns
pop
cmp
dec
iret
jae
es
inc
enter
cdq
lds
mov
mov
loop
cmp
lock
mov
xor
gs
jge
js
mov
and
xor
sbb
xor
iret
lods
pop
and
ja
or
add
retf
or
mov
jl
out
inc
xchg
daa
icebp
stc
sub
jl
dec
mov
cli
pop
in
inc
arpl
and
mov
xor
xchg
fcom
mov
sub
out
aaa
sub
add
dec
inc
mov
(bad)
jne
(bad)
mov
(bad)
out
adc
jo
mov
dec
enter
jno
ror
xor
and
push
out
fldenv
cdq
cmp
dec
sub
lock
retf
add
adc
xchg
cs
mov
fstp
add
int3
aam
jns
sub
jge
jl
xor
aad
inc
push
cmp
stos
idiv
dec
div
sub
lods
or
jno
jmp
jno
mov
enter
or
mov
xchg
enter
imul
cwde
cmp
stc
daa
pop
call
mov
jecxz
adc
loopne
xchg
jp
jp
rcr
xchg
cli
mov
mov
xor
xor
(bad)
jle
pop
fiadd
imul
xor
lock
rol
imul
loopne
repz
repz
xor
dec
(bad)
adc
fldcw
jle
pop
sub
inc
dec
jbe
adc
icebp
dec
mov
xor
mov
sbb
in
(bad)
(bad)
cld
repz
unpckhps
push
pop
adc
or
sbb
lahf
(bad)
jmp
mov
fcom
outs
mov
add
ret
je
and
push
mov
fadd
ins
mov
call
add
icebp
movs
adc
pop
push
(bad)
js
movs
into
lods
push
mov
es
movs
mov
bound
outs
and
call
jmp
jmp
jecxz
push
cmps
sub
jp
imul
jecxz
pop
pop
dec
mov
cmp
jp
out
mov
xor
out
mov
outs
and
lahf
xlat
movs
xchg
pop
(bad)
fsub
out
rol
add
and
and
lock
dec
std
enter
add
stos
sbb
sub
mov
mov
sbb
jl
arpl
lock
outs
dec
mov
mov
lea
repz
(bad)
ror
jmp
cmp
mov
stc
shl
cld
pop
push
sub
shl
(bad)
stc
fiadd
stos
xlat
outs
jae
add
sub
mov
add
or
fnstsw
or
cmp
push
jle
cs
sub
jo
aad
jp
inc
jno
or
ja
es
loopne
jno
sub
mov
cmps
aas
sahf
test
jmp
retf
xchg
xchg
loop
repz
push
out
dec
pusha
push
inc
call
sub
dec
icebp
loop
retf
add
sub
cli
push
jbe
retf
push
jno
lds
and
test
enter
stos
ror
ret
mov
push
cmp
in
sti
pop
lods
ja
xchg
jge
jns
sub
jl
icebp
sbb
adc
inc
mov
mov
stos
cwde
dec
sbb
sub
cmp
pop
xchg
in
test
test
(bad)
stc
jmp
push
adc
jo
add
pusha
lock
sbb
jae
dec
sub
iret
out
sbb
pop
xchg
jg
pop
loop
ins
pop
jg
lds
adc
dec
sub
cmp
scas
xlat
inc
push
rcl
xchg
mov
int
push
jle
sar
sbb
daa
rcr
pop
cli
cmp
pop
test
pop
iret
push
aam
pop
js
mov
pop
es
popa
jg
dec
movs
push
cmp
aaa
sbb
sti
std
or
mov
stos
mov
aad
fistp
push
and
arpl
push
inc
dec
cmps
dec
rep
adc
jp
add
(bad)
cmp
call
sbb
inc
je
enter
mov
call
xchg
fbstp
cmc
mov
fcmovnb
mov
adc
cs
or
call
je
mov
shl
retf
daa
test
in
push
adc
leave
cwde
mov
scas
stos
sbb
push
outs
xor
mov
mov
retf
cmp
jmp
jbe
xchg
lods
jno
pop
adc
sub
stc
inc
shld
mov
retf
cmp
je
das
dec
js
inc
sbb
adc
aam
jmp
iret
jecxz
dec
or
pop
add
xchg
icebp
add
adc
in
mov
jl
out
not
sub
jge
push
dec
and
cwde
imul
fild
loop
movs
fsubr
and
jl
pop
pop
jp
jmp
xchg
test
xlat
cld
mov
mov
pop
mov
and
mov
das
jmp
mov
das
cmp
mov
push
add
xchg
cli
jle
pop
xchg
(bad)
push
mov
int
jmp
cdq
ss
sbb
mov
icebp
mov
jle
mov
ins
mov
std
jl
mov
or
stos
or
inc
imul
xchg
cmp
std
add
push
popa
fwait
es
ret
adc
sbb
jns
pop
pop
xchg
dec
pop
sub
dec
xchg
mov
push
dec
ja
test
pusha
dec
xchg
add
imul
pop
mov
aam
std
ins
add
out
sub
push
dec
or
push
xlat
mov
jne
push
dec
scas
stc
push
mov
pop
ins
or
das
xchg
jns
push
mov
push
outs
dec
aad
mov
popf
fwait
and
loopne
push
into
ret
push
xchg
fcmovnb
ds
jmp
popf
pushf
mov
fistp
adc
dec
mov
test
dec
lahf
cmps
gs
mov
rcr
sbb
xor
or
mov
or
cmc
(bad)
pop
stos
cmp
pop
mov
stc
sbb
xchg
jae
mov
xlat
or
gs
in
adc
lds
outs
adc
cdq
push
test
aad
cmp
arpl
scas
inc
mov
sub
inc
or
push
ins
fadd
jecxz
fistp
mov
ficomp
dec
test
or
xlat
xlat
outs
fnsave
pop
push
jge
inc
cli
into
dec
or
fs
push
pop
sub
fmul
cdq
or
mov
sub
pop
and
retf
aam
jae
jmp
aas
jno
push
out
mov
js
pop
and
popa
mov
cmp
adc
test
mov
hlt
pop
outs
les
test
(bad)
sahf
jbe
ret
popa
cwde
jns
add
in
adc
fst
ja
cmp
cmp
and
push
pop
push
loopne
xor
push
lds
inc
jl
repnz
jp
jo
add
stc
aaa
lock
loopne
sar
sar
xlat
cwde
dec
jle
out
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
loop
loop
shl
repz
gs
mov
pushf
jo
cmp
mov
retf
xchg
mov
push
idiv
cmp
iret
dec
clc
add
dec
and
sbb
std
push
push
(bad)
cmp
cmps
dec
sti
imul
push
sbb
mov
lods
and
xlat
mul
push
xchg
inc
cmp
lds
repz
outs
dec
and
fistp
jb
(bad)
jecxz
cs
sar
push
aad
jb
test
add
pop
ins
popa
cmp
sub
(bad)
js
loop
pop
in
sub
and
adc
popa
shl
push
addr16
aad
push
dec
xlat
jp
add
repz
inc
sbb
pop
push
sub
xchg
pop
inc
cmp
loop
mov
adc
pop
outs
repz
cmp
pop
jmp
xchg
mov
pop
(bad)
in
sub
fs
pusha
(bad)
out
adc
jmp
or
inc
icebp
dec
jle
scas
fwait
icebp
sub
or
add
cmp
je
cmp
jmp
mov
inc
call
dec
fsubr
out
dec
add
movs
mov
popf
loop
or
xor
xchg
dec
ja
jns
push
fwait
dec
dec
fs
cmp
sub
imul
out
mov
add
add
xor
xchg
pop
xchg
mov
movs
lahf
add
leave
loope
test
out
popf
sbb
mov
frstor
es
in
cmps
dec
mov
sar
cmps
sbb
xor
lods
cmp
daa
inc
pop
mov
jmp
ds
or
dec
adc
das
lahf
mov
aad
icebp
dec
adc
into
jne
xchg
inc
jo
mov
mov
shl
or
gs
sbb
cli
hlt
aas
loop
add
inc
sbb
mov
test
(bad)
mov
pop
lods
ins
enter
mov
sbb
cmp
xor
cld
call
sbb
lea
cmps
xchg
out
scas
xchg
pop
pop
pop
shr
retf
push
std
sub
cli
mov
add
xchg
movs
cmp
imul
mov
and
jg
jae
jge
dec
fisttp
(bad)
scas
dec
mov
mov
xchg
cdq
xchg
push
pop
or
sbb
pop
sub
sbb
mov
adc
xor
loope
(bad)
jb
pop
or
jl
inc
cmc
repz
mov
xchg
xchg
sbb
xor
sub
test
mov
mov
lea
sti
sub
xchg
push
xchg
push
fdivrp
push
jg
xor
or
push
inc
outs
call
fisubr
mov
inc
int3
ficom
cmp
outs
aam
in
mov
xor
arpl
test
push
push
lods
inc
int
into
mov
add
stos
ja
mov
nop
mov
fidivr
cld
shl
(bad)
xor
in
pop
(bad)
mov
rol
cld
fs
jb
mov
pop
pop
dec
in
adc
xchg
jl
jg
adc
mov
nop
std
loop
jl
cdq
push
cmp
test
dec
in
std
pushf
mov
movs
mov
mov
jmp
pop
mov
imul
aam
in
test
std
xchg
dec
pushf
sahf
lahf
dec
int
stc
(bad)
dec
mov
(bad)
(bad)
bound
mov
mov
sub
mov
jb
add
adc
je
in
out
cld
nop
fbld
inc
push
fwait
dec
push
test
subps
push
adc
mov
xchg
xor
inc
xchg
imul
xchg
sub
sub
js
addr16
mov
pop
(bad)
xor
adc
mov
push
xor
loopne
outs
jne
in
in
dec
arpl
push
cld
imul
ret
loop
mov
sub
mov
gs
sub
jge
pop
pop
repnz
cwde
or
mov
lock
mov
sahf
sub
dec
test
cmp
push
mov
inc
imul
popf
jmp
pushf
mov
xor
shr
sub
push
(bad)
xchg
in
sbb
mov
cdq
dec
loopne
test
loopne
mov
pop
pop
push
movs
pusha
cld
div
pop
push
movs
mov
pop
mov
enter
ins
cmc
cld
fwait
add
loop
push
sbb
cmp
les
mul
(bad)
test
inc
call
jge
adc
int
imul
cmp
aaa
cmc
cld
retf
sahf
into
icebp
or
add
and
retf
mov
sbb
jp
cwde
cmps
mov
ins
cmp
imul
xchg
xor
dec
xchg
clc
add
push
mov
mov
ret
jmp
sub
sbb
dec
pop
dec
gs
pop
push
sbb
push
aad
pop
and
fldcw
sbb
xor
daa
or
(bad)
jmp
mov
into
mov
arpl
and
mov
out
in
or
imul
test
xchg
scas
inc
push
or
mov
inc
and
sar
xchg
xor
or
sbb
outs
pop
outs
dec
push
cmc
loop
rcl
out
inc
cmp
ins
lods
jb
into
aas
call
stos
(bad)
mov
ret
outs
idiv
dec
push
push
and
mov
jmp
stc
mov
mov
adc
mov
and
adc
pop
inc
adc
arpl
push
mov
(bad)
mov
push
int
aam
(bad)
lods
mov
cmp
dec
xchg
push
out
mov
outs
ss
push
dec
shl
or
stc
fwait
push
cmc
aaa
cmp
(bad)
lods
inc
and
push
or
fcom
je
cmp
xor
stc
lea
or
mov
mov
mov
retf
jmp
and
lea
push
sbb
fiadd
mov
leave
mov
out
pushf
cmp
jmp
outs
lods
sbb
mov
gs
mov
xchg
out
dec
xchg
jb
jecxz
pop
xchg
dec
mov
sbb
scas
xchg
fild
clc
mov
pushf
push
jecxz
out
pop
cmp
arpl
xor
and
adc
fisub
data16
sub
inc
(bad)
adc
cwde
pop
add
loope
xor
mov
cli
rcl
push
outs
loop
adc
cmc
sub
inc
arpl
fisttp
les
mov
mov
pop
xor
repz
or
mov
xor
(bad)
fistp
pop
sub
sub
repz
sahf
or
pop
jno
mov
shl
pusha
and
dec
cmp
mov
xchg
cmp
push
push
inc
inc
loop
add
int3
iret
sub
mov
inc
stc
push
clc
jnp
xor
pop
ins
in
test
xor
loopne
je
(bad)
inc
movs
push
pop
scas
rcr
dec
or
push
push
xchg
sub
into
xor
call
ficomp
jbe
fidivr
pop
jg
mov
or
mov
push
sub
out
cmp
sbb
add
(bad)
ror
xor
retf
jo
jno
out
jb
(bad)
push
call
mov
mov
or
mov
pop
(bad)
icebp
sbb
ficomp
outs
xor
test
rcr
lock
rcr
xchg
lahf
shr
jbe
mov
mov
retf
push
jmp
cmp
fcmovnb
repz
iret
jbe
sbb
and
dec
mov
ins
sbb
pusha
xchg
stos
(bad)
aam
mov
ds
push
sahf
xor
jae
call
fldcw
sar
popa
stos
lock
sar
outs
std
xor
lea
jae
fsubr
cmp
test
jns
mov
dec
repnz
mov
aaa
ja
jb
push
jb
and
jns
jecxz
mov
stc
and
icebp
lods
mov
dec
mov
pop
jmp
mov
jne
push
hlt
push
mov
cmp
cmp
pop
loope
sub
cmp
fs
iret
cdq
out
xor
mov
push
add
ja
pop
push
fwait
cmp
add
xchg
cmp
into
add
outs
xchg
jo
sahf
mov
jo
and
dec
sbb
or
jecxz
aad
call
dec
push
stos
ret
jae
push
out
add
xchg
inc
pop
add
mov
and
repnz
add
repz
imul
test
and
ins
xlat
retf
std
jbe
in
das
stc
std
movs
or
push
mov
shl
ss
adc
imul
xor
mov
push
lods
icebp
pop
jns
ret
pop
(bad)
add
mov
xor
mov
sbb
lds
mov
mov
xor
ins
(bad)
popa
xor
dec
repz
inc
into
push
jmp
cmps
bound
js
sbb
mov
cmps
sub
jg
call
lock
popf
mov
cmp
mov
cmc
cmc
push
or
fadd
scas
pop
mov
xor
outs
jp
ds
loop
sti
inc
pop
add
mov
sbb
icebp
fs
add
or
cmp
repnz
ins
pop
ss
iret
test
jmp
out
int3
imul
fsubr
shl
pop
leave
sub
pop
lods
arpl
frstor
icebp
mov
and
xor
ret
sahf
adc
xor
scas
xor
xor
sub
(bad)
dec
daa
or
adc
adc
stos
pop
mov
sbb
not
and
sub
sub
out
mov
fcomp
cmp
loop
mov
leave
inc
mov
add
xchg
jnp
out
jne
shr
add
pusha
xchg
cmp
scas
cmp
outs
jl
sbb
pop
lods
jbe
in
js
cld
jns
fimul
mov
xchg
cmp
fimul
push
lock
adc
es
mov
dec
outs
cli
jo
clc
or
add
fisub
fwait
xor
into
clc
cdq
daa
aas
ins
xchg
jnp
pushf
rol
outs
mov
cmc
jae
lds
mov
pop
(bad)
retf
mov
scas
loopne
hlt
test
test
xor
pop
psubq
jmp
call
pop
pop
xchg
jno
push
iret
jge
lea
test
xchg
and
ins
fst
test
les
adc
push
mov
xor
ins
jmp
mov
clc
push
(bad)
dec
and
fiadd
imul
loope
dec
lods
ret
js
add
inc
fistp
inc
pop
push
dec
lea
les
pop
jl
repnz
dec
xor
or
aaa
push
xor
out
mul
stos
adc
test
not
leave
jns
xor
int3
and
neg
xchg
int3
lods
and
mov
outs
inc
fnop
sbb
fist
mov
sub
adc
xlat
add
clc
pop
nop
cmc
mov
or
clc
out
sar
dec
add
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
sbb
das
and
jnp
enter
pushf
xchg
xchg
sbb
sub
sub
jmp
nop
lods
xchg
sbb
dec
mov
out
int3
ins
xor
jns
iret
mov
add
push
inc
add
popf
clc
mov
jno
pop
imul
cmps
ja
inc
int
dec
in
fiadd
sub
lahf
inc
dec
xchg
cmp
pusha
dec
pop
push
frstor
xchg
mov
push
and
mov
dec
enter
push
popa
cmps
ret
js
mov
or
inc
(bad)
iret
mov
std
xor
mov
jmp
ror
push
fs
sbb
cmp
or
and
jbe
push
inc
cmp
cs
int
movs
clc
jmp
cs
in
rcl
xor
mov
xlat
sbb
pop
cs
inc
inc
loop
nop
add
sub
xor
aad
jbe
mov
mov
push
mov
(bad)
retf
cmp
jecxz
or
pop
jg
mov
cld
ret
push
dec
cmp
jp
inc
xor
pop
push
in
imul
loope
movs
arpl
popa
outs
in
aam
sbb
or
in
cwde
pop
ss
outs
dec
aas
jmp
addr16
fs
sub
ss
(bad)
icebp
xor
inc
neg
pushf
jo
xor
(bad)
jmp
xchg
data16
add
or
sti
imul
or
mov
stc
jp
pop
pop
dec
inc
add
call
fisub
push
mov
or
shr
adc
xor
mov
lock
cmp
repz
inc
xchg
mov
inc
sar
sub
dec
dec
add
arpl
jp
jp
adc
sub
fld
icebp
xchg
jb
push
icebp
push
ret
pop
jge
cmp
addps
dec
dec
lods
hlt
retf
sbb
mov
jns
sub
les
pushf
outs
sbb
mov
pop
aam
and
test
aad
cmp
(bad)
push
sub
jmp
adc
sub
retf
cmc
cmp
jbe
pop
push
xor
jmp
outs
scas
imul
and
stc
push
sbb
mov
adc
stos
scas
and
mov
cwde
mov
fstp
in
ins
fmulp
sar
or
or
dec
jae
add
xor
cmps
ja
lds
mov
jp
jg
call
std
xchg
cmps
into
push
or
fidiv
dec
repnz
sub
ins
mov
mov
jbe
xor
std
mov
pop
pusha
mov
xchg
xchg
addr16
add
pop
inc
leave
or
test
ret
pushf
imul
adc
rcl
shr
scas
jbe
imul
push
movs
jnp
popa
add
add
mov
push
and
int
adc
pop
sub
jb
sub
fs
(bad)
ror
mov
pop
inc
out
mov
retf
add
push
cmp
test
(bad)
stos
fwait
dec
shr
xlat
add
mov
dec
movs
xor
sar
int3
cmp
jp
dec
mov
sti
fs
ficomp
mov
xor
dec
sahf
pop
inc
mov
mov
pop
adc
sub
out
fucomp
jle
cmps
inc
out
mov
scas
xor
sti
or
cmp
push
mov
jecxz
sub
push
inc
ins
jnp
fsubr
js
dec
lods
js
retf
test
mov
ficomp
in
push
and
and
popa
jae
(bad)
mov
cmps
test
push
(bad)
hlt
mov
sar
test
jp
push
aaa
or
or
les
add
out
inc
call
rcl
and
lahf
bound
mov
(bad)
out
fdivr
xchg
repnz
in
inc
sub
cmp
ins
or
xchg
pop
loope
cmps
sbb
rol
mov
sbb
daa
push
nop
fisttp
push
mov
jg
cs
imul
pushf
es
adc
mov
movzx
push
push
fimul
fistp
int
data16
cmovo
fdivr
and
in
push
push
int3
retf
jmp
mov
xchg
push
ret
push
jl
test
stos
push
retf
or
push
ror
adc
les
call
out
lods
or
test
outs
jns
imul
xor
cmp
(bad)
mov
repnz
jge
inc
(bad)
xlat
loopne
push
fwait
ja
into
or
xchg
fs
retf
jecxz
push
fistp
cli
stos
lock
add
enter
and
bound
adc
js
jge
je
sar
xor
sbb
cmp
dec
jl
sbb
(bad)
mov
test
dec
rcr
outs
neg
pop
(bad)
push
pop
loopne
mov
dec
(bad)
shr
pop
jmp
inc
cmp
ja
enter
xor
js
in
pusha
inc
sub
ret
pop
jl
(bad)
xchg
jge
outs
loop
inc
and
in
jp
mov
jns
pop
in
mov
imul
jp
sti
xlat
xchg
xor
dec
mov
clc
loopne
push
sbb
gs
outs
push
cmps
mov
out
das
inc
xchg
inc
lock
sar
xor
and
or
(bad)
js
mov
sbb
stc
mov
loopne
and
mov
test
and
push
inc
sbb
jge
xchg
push
mov
fsub
dec
inc
icebp
rcr
adc
mov
out
dec
jbe
mul
jg
clc
js
pop
sbb
dec
xlat
mov
cmp
jg
jp
jne
fidiv
mov
dec
shl
je
add
xchg
jl
push
or
nop
stos
pop
test
iret
xchg
or
pop
retf
push
inc
push
test
cmp
cmc
scas
dec
retf
int3
mov
sub
inc
shl
mov
in
iret
mov
scas
mov
jp
(bad)
rol
mov
jno
aad
mov
sbb
clc
mov
fstp
test
xchg
sbb
sbb
xchg
(bad)
idiv
lods
sub
mov
sub
xor
out
loop
sbb
jmp
lods
pushw
cwde
push
icebp
jns
neg
shl
jne
mov
repnz
mov
sti
fwait
xchg
pop
(bad)
cs
int3
and
sub
mov
ror
(bad)
and
and
pop
in
sahf
(bad)
out
cmc
mov
xor
pop
test
sbb
ss
popf
test
adc
scas
dec
pop
sub
cdq
cld
call
pushf
mov
adc
lock
cvtdq2ps
sub
push
jmp
(bad)
xchg
mov
in
jnp
(bad)
sbb
xlat
(bad)
jno
sub
lea
outs
int3
xor
stos
test
inc
ret
int
sahf
out
lea
loopne
test
sub
inc
test
pop
nop
inc
into
dec
stos
ss
pop
fcmovnu
ss
jo
cli
push
stos
(bad)
jmp
inc
lds
jns
retf
mov
inc
jae
daa
inc
pop
jge
rol
pusha
jae
dec
cmps
lahf
scas
std
bnd
sar
movs
jle
lahf
mov
stc
in
push
cmp
cmp
sahf
sub
push
mov
imul
mov
xlat
cmp
sbb
lahf
push
rol
sub
fs
mov
xchg
mov
inc
and
jo
jmp
sub
call
pop
xlat
jo
jp
add
(bad)
mov
loope
es
aad
(bad)
retf
loope
data16
adc
mov
addr16
call
dec
out
mov
fucomip
dec
pushf
and
inc
rol
imul
and
(bad)
fild
lds
inc
jmp
int3
push
dec
xor
cmp
lods
int
xor
cmps
bound
in
pop
inc
mov
jmp
jns
popa
call
cli
sbb
xchg
cdq
xor
sbb
mov
inc
xor
mov
cmp
pop
(bad)
mov
mov
jne
mov
imul
in
cmp
aam
int
ja
xor
aaa
mov
dec
ins
div
jnp
xor
xor
pop
add
push
jae
addr16
loopne
sti
mov
mov
test
imul
std
xchg
jnp
and
stc
ins
test
and
sahf
dec
dec
jp
daa
and
fs
inc
dec
sbb
inc
pop
mov
sub
mov
neg
push
xor
data16
les
pop
and
test
mov
shr
ss
push
repnz
xchg
jb
inc
and
in
stc
fistp
push
in
xor
ret
ins
lock
jmp
xor
mov
cli
cmp
xor
sahf
jbe
test
add
mov
movs
(bad)
xchg
outs
xor
jmp
iret
cmc
adc
cmp
mov
loopne
scas
adc
xor
(bad)
dec
xor
xchg
dec
xchg
mov
stos
imul
push
ja
das
xor
cmps
jnp
sbb
or
retf
out
daa
scas
shr
cdq
adc
out
inc
add
xchg
(bad)
shl
xor
sar
scas
cmps
mov
xchg
test
cmp
hlt
mov
jmp
fnsavew
ret
scas
mov
xor
lock
repz
adc
jno
mov
pop
dec
enter
loope
cmp
stc
mov
ins
inc
xor
into
mov
stos
adc
mov
clc
movs
adc
adc
out
ja
fmul
sub
fstp
mov
mov
repnz
call
clc
fcmovne
sub
cli
in
movs
scas
out
fcom
fstp
jge
fwait
aad
xchg
arpl
sbb
push
mov
pop
repz
mov
cmp
lods
xchg
push
loopne
fsubr
rcr
pop
adc
cmp
or
lods
push
dec
sbb
stos
jecxz
jg
lods
mov
enter
vunpcklps
repnz
enter
ficom
or
adc
add
out
push
fmul
jb
clc
das
leave
pop
fmul
lea
aas
lock
dec
dec
sar
cmp
jne
xchg
in
and
or
std
int
jge
cmps
test
pushf
mov
or
mov
and
gs
lahf
sar
and
pop
pop
or
scas
xchg
lahf
dec
ret
inc
mov
(bad)
push
les
movs
jb
add
lods
mov
out
pop
and
cmp
inc
sti
and
(bad)
sbb
data16
nop
mov
dec
sbb
gs
ret
xor
imul
outs
call
ret
or
push
cmp
scas
in
int
nop
lods
lahf
jge
bound
mov
aam
and
mov
into
or
xchg
(bad)
lds
mov
out
in
pop
inc
cmps
je
or
sbb
(bad)
xchg
jle
lods
cld
aaa
dec
rcr
sub
or
push
push
xor
(bad)
pop
fbld
cwde
lahf
sbb
movs
int3
jecxz
outs
sub
dec
jns
jl
xchg
js
jg
sub
jne
cdq
(bad)
stos
aad
sbb
lods
dec
xchg
jg
movs
mov
sti
cmps
cmp
mov
sub
dec
loope
push
call
mov
or
mov
stos
aaa
inc
or
ss
add
add
add
xchg
mov
inc
iret
xchg
out
jl
ja
stc
and
rcr
jecxz
arpl
cmp
jmp
addr16
(bad)
jmp
out
test
cli
test
popa
inc
adc
cld
rep
loopne
sar
dec
cmp
popf
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
dec
inc
push
mov
sbb
fnstcw
mov
addr16
mov
dec
inc
mov
fisub
pop
pop
addr16
jno
push
sbb
jo
lods
out
cmp
idiv
pop
add
xor
pop
mov
outs
pusha
mov
cs
mov
xor
add
push
push
xchg
cmp
push
addr16
je
out
sbb
xchg
loope
ficomp
fucomip
jecxz
sbb
rcl
jbe
dec
aas
push
ja
sbb
push
popa
(bad)
xchg
les
cmps
es
mov
inc
jmp
aam
stc
es
pop
inc
movs
out
add
mov
fwait
pop
aaa
sub
ds
jle
push
aam
cdq
lea
cld
push
jo
pop
(bad)
push
je
mov
loope
mov
pop
(bad)
out
adc
adc
mov
and
xor
dec
iret
jecxz
add
dec
mov
test
jb
repz
push
sub
(bad)
leave
push
pushf
or
fcom
cmp
imul
movs
inc
cmp
aad
movs
sbb
mov
aas
mov
push
into
mov
and
or
enter
cmp
repnz
cdq
cmp
jl
ss
mov
in
outs
repnz
fst
push
scas
add
xchg
mul
xchg
ret
push
int
out
loope
fld
repz
(bad)
fidiv
cmp
xchg
jp
mov
pop
mov
mov
mov
test
mov
mov
lock
das
inc
push
jnp
jecxz
jbe
test
mov
test
xchg
movs
out
ror
loope
mov
or
ror
in
jne
mov
loopne
cmp
pop
xchg
mov
add
fsubr
dec
sbb
push
and
cdq
jg
sub
sub
cmp
add
push
pop
fidiv
jnp
adc
(bad)
push
test
mov
not
jmp
sub
sbb
cli
test
stos
(bad)
sbb
cld
sub
push
mov
push
pop
mov
fcom
mov
pop
out
jp
push
pop
mov
rol
pusha
xor
jae
or
adc
xchg
iret
push
or
jne
les
mov
fadd
or
in
inc
sub
push
repnz
rcl
test
push
sbb
jns
lds
jg
pop
scas
ret
sbb
js
out
fdivr
lahf
xchg
adc
xchg
pop
test
icebp
dec
sbb
(bad)
adc
sub
cdq
cwde
mov
xor
fild
cmp
rol
add
movs
sbb
jle
xchg
and
jp
xor
stos
xchg
pop
cmp
jmp
das
ret
fwait
je
mov
cdq
pushf
mov
xchg
sbb
mov
addr16
sti
movs
push
pop
mov
call
cmp
cmp
jbe
imul
je
jl
out
repz
pop
or
mov
ficomp
gs
push
xchg
mov
dec
iret
xor
mov
lods
jb
pop
adc
jle
and
jl
rcr
mov
sbb
sbb
mov
and
mov
stos
scas
dec
jl
movs
stos
cmps
sub
out
(bad)
push
idiv
(bad)
xchg
and
xchg
mov
add
mov
fisubr
add
dec
jb
std
cld
fadd
ins
jl
sub
clc
jno
jbe
fsubr
ds
jno
les
fstp
mov
pusha
movs
xchg
hlt
push
mov
inc
pop
pop
or
(bad)
mov
xchg
mov
cmps
retf
sbb
mov
adc
xor
adc
add
xchg
jecxz
jle
mov
daa
push
pop
xchg
outs
popa
sar
fwait
das
push
add
mov
inc
pop
(bad)
jecxz
ins
mov
ins
int
fld
mov
imul
pop
sub
bound
loop
and
mov
pop
cmp
inc
sub
mov
sahf
inc
mov
push
imul
push
inc
push
pop
mov
cld
lea
sub
loop
or
pop
loop
inc
inc
xor
xchg
iret
stos
icebp
xor
test
jle
out
shr
ret
sti
push
adc
call
(bad)
add
outs
mov
and
push
loopne
jge
xchg
icebp
(bad)
push
pop
ins
(bad)
in
test
rcl
xchg
cmp
(bad)
stos
xchg
sub
cmp
cwde
ins
jmp
neg
mov
mov
adc
test
pop
stos
rcl
mov
mov
lahf
sub
xor
stos
push
jns
pop
dec
xchg
leave
aas
(bad)
in
test
adc
inc
push
pop
popf
ret
addr16
mov
mov
cmp
xor
leave
jmp
jbe
bnd
xchg
jnp
dec
pop
xor
jle
jg
xchg
dec
sbb
cmps
jmp
cmps
(bad)
sti
mov
push
stc
ins
test
ja
cmp
sbb
jns
movs
addr16
call
scas
ret
add
push
push
cmp
repnz
jg
aas
jb
cwde
dec
xchg
out
loop
adc
jmp
push
jp
inc
in
sub
daa
xchg
xor
inc
jmp
(bad)
fs
pop
mov
xor
adc
or
data16
or
outs
iret
sub
pop
xor
int
dec
xor
movs
sub
push
pop
xchg
fdivp
call
cmps
jns
push
dec
push
or
cmp
add
mov
push
jo
sub
xchg
xor
addr16
mov
fstp
cmp
adc
and
cld
mov
jne
bound
push
pop
(bad)
cli
adc
cmp
adc
sbb
aaa
jp
cmps
dec
test
out
scas
dec
sbb
pusha
popa
sub
scas
cdq
leave
xlat
mov
movs
xchg
lea
sub
push
in
and
loopne
sub
xchg
jb
pop
pop
cmp
add
cmp
mov
mov
jle
xor
loope
lods
mov
adc
fld
xor
mov
aam
std
adc
je
into
dec
cdq
jns
nop
(bad)
out
outs
add
not
sbb
das
mov
xchg
mov
push
dec
xchg
push
and
scas
push
inc
and
(bad)
sti
rcr
imul
ins
movs
pop
adc
sbb
movs
ins
pusha
add
cmp
inc
jmp
fsub
pop
sub
pop
mov
add
mov
jb
out
repz
(bad)
ss
jl
mov
or
in
arpl
das
cdq
pop
lods
in
aam
mov
and
(bad)
(bad)
mov
movs
rol
mov
cmp
pop
or
adc
jecxz
lods
in
cld
cwde
loope
xor
xor
pop
cmps
lock
or
cmp
jl
sub
fistp
add
out
enter
cdq
jle
retf
fstp
das
fisttp
push
sbb
inc
iret
scas
mov
sti
nop
inc
adc
cwde
mov
cli
or
xor
addr16
into
xor
popw
dec
push
mov
dec
stc
imul
outs
ret
fiadd
jns
cs
pop
add
xor
xlat
dec
lods
or
push
mov
mov
mov
es
inc
add
push
pushf
jge
inc
cs
ss
cmps
sbb
call
sar
out
push
pop
mov
push
loope
pusha
mov
adc
je
stc
shr
outs
mov
outs
xchg
int
cli
sar
rcl
inc
int3
jmp
jp
bound
jbe
sub
in
in
add
scas
in
adc
cmc
std
lds
arpl
and
loope
aam
and
add
ret
std
add
loope
lods
loop
mov
test
pop
je
in
mov
xchg
or
lahf
ins
xor
cmps
mov
mov
sub
popa
test
dec
push
mov
popa
push
imul
pop
mov
mov
cmp
dec
pop
arpl
push
leave
sub
pop
or
jg
fs
clc
push
inc
jg
ss
mov
aaa
es
ror
mov
jge
(bad)
dec
dec
je
inc
nop
fisubr
neg
lea
mov
xor
loopne
xlat
outs
inc
cld
adc
sti
mov
or
jbe
fcmovb
mov
aaa
push
xchg
pop
shr
cdq
push
repz
mov
inc
and
jno
(bad)
dec
adc
mov
mov
imul
add
push
cmp
call
push
lock
mov
jecxz
pop
or
test
push
pop
pop
add
cmps
fs
ins
xchg
xor
int
jp
pop
nop
ret
imul
int
xor
mov
jae
lea
nop
sub
fxch
add
in
(bad)
fadd
or
loope
les
aas
mov
js
das
sti
xchg
daa
sti
mov
inc
push
movs
and
mov
test
cmp
pop
pop
mov
and
inc
jo
inc
adc
mov
ins
sbb
fild
inc
dec
imul
fist
jns
inc
test
fs
arpl
fistp
mov
lock
fcomp
jmp
xor
xor
and
jnp
jl
fcmovbe
add
movs
bswap
ret
ins
data16
out
push
jno
cmc
add
xchg
repz
mov
cli
sub
push
(bad)
test
sahf
int
js
xchg
in
arpl
dec
mov
jecxz
inc
mov
inc
sbb
and
popa
adc
adc
fldenv
hlt
xor
dec
xor
lahf
inc
xor
dec
add
les
adc
movs
dec
add
call
movs
sub
xlat
xor
sahf
jmp
in
mov
mov
jno
cli
call
jne
mov
xchg
ins
out
into
xchg
add
arpl
daa
repz
dec
sar
cmp
xchg
fild
jmp
hlt
dec
ins
ror
cmp
mov
movs
push
inc
icebp
jmp
jnp
or
fcomp
cmc
inc
adc
xchg
push
sbb
aad
mov
into
inc
and
mov
iret
cli
add
sbb
lahf
fstp
aas
jae
nop
mov
adc
sub
rcr
test
js
stc
inc
pop
loop
cmp
cmc
imul
push
xchg
sbb
mov
ror
push
xor
int3
xchg
out
iret
sti
jmp
pop
aaa
rcr
lahf
mov
test
popf
iret
cli
les
call
lods
ret
cli
popa
outs
fdiv
mov
aam
mov
push
adc
stc
adc
arpl
mov
cmp
mov
aaa
das
adc
mov
lahf
xchg
lahf
cmp
xchg
mov
add
pop
or
cmp
pop
cmps
lods
test
mov
outs
pop
mov
sub
into
sar
ds
sbb
xchg
cmp
mov
stos
repnz
fistp
call
(bad)
in
jge
(bad)
adc
pop
addr16
ja
(bad)
xchg
loopne
cli
imul
push
and
pop
fwait
mov
sub
or
mov
xchg
dec
and
retf
mov
lea
in
in
lea
in
mov
mov
pop
mov
sar
push
dec
lock
loopne
sbb
pop
sub
pop
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
adc
add
loopne
mov
sbb
and
mov
jnp
xchg
or
enter
(bad)
jno
psubusw
ja
or
pop
loop
mov
and
add
jno
int3
pop
inc
std
add
inc
inc
sbb
xchg
bound
mov
adc
mov
push
fdiv
mov
or
and
push
rcl
adc
cmp
out
xchg
xchg
icebp
sub
repz
xchg
dec
ds
gs
lea
jo
(bad)
jne
jb
jmp
fisttp
inc
fimul
push
and
add
sti
ds
push
jnp
neg
ret
imul
inc
repz
pop
pop
out
xchg
fnstenv
jmp
push
pop
mov
dec
mov
fiadd
retf
rol
mov
jmp
ror
inc
xchg
pop
int
fmul
jbe
fsub
fcom
push
add
cmp
push
dec
push
aas
ror
xrelease
popa
pusha
pushf
or
mov
das
into
cld
inc
cmp
arpl
xchg
gs
add
loop
loope
cmc
(bad)
cmp
dec
pop
xor
inc
or
imul
mov
jmp
xchg
xchg
shl
into
fadd
into
cmc
cmp
adc
xchg
sub
out
popf
jbe
push
and
lea
int
int
or
mov
pop
daa
int
into
leave
cmp
pop
fdivr
cwde
add
xchg
call
push
jns
mov
lods
sbb
neg
lods
scas
mov
jge
adc
cmp
inc
outs
and
repz
inc
mov
test
adc
test
pop
xchg
adc
aad
push
int3
jmp
push
in
mov
(bad)
(bad)
jmp
jmp
sub
ret
add
pop
jne
(bad)
cmp
add
(bad)
bnd
or
ss
sbb
dec
iret
pmulhuw
xchg
jge
js
in
or
movups
lahf
cmp
add
std
xchg
sbb
fld
fild
pusha
test
mov
sub
mov
push
movq
dec
dec
cmp
mov
cmp
leave
push
sub
mov
inc
pop
sub
pop
inc
aaa
add
add
inc
enter
mov
mov
lds
(bad)
add
inc
pop
pop
stos
push
jb
and
xor
bound
push
xchg
mov
cmps
cmp
cmps
xchg
test
jmp
dec
mov
cmp
mov
cmp
rcl
in
push
push
retf
jbe
cwde
fist
cs
mov
push
mov
xlat
js
lock
cmp
and
adc
push
fldenv
out
aad
jmp
push
into
pusha
xor
mov
push
cmp
cmp
inc
pop
sbb
or
adc
stos
retf
lods
dec
lds
dec
lods
sub
xor
cmp
cmps
sub
jg
mov
jae
sub
push
rcr
sbb
mov
push
pop
test
out
dec
or
nop
jo
in
jmp
push
mov
shl
test
aad
sub
sbb
in
inc
push
cli
mov
movs
xor
jns
bswap
sbb
mov
jg
sahf
daa
sti
xor
push
sub
into
movs
or
cld
fld
cmc
lock
add
nop
mov
lods
xlat
das
mov
pop
push
fwait
pop
mov
or
in
rcl
call
in
sbb
(bad)
stc
or
iret
fcomp
jl
mov
cs
or
xor
sbb
xchg
int
dec
xor
out
arpl
lock
mov
xor
imul
outs
pop
lods
leave
cld
adc
mov
mov
dec
adc
shl
outs
pop
dec
outs
jecxz
inc
scas
pop
aam
add
loop
fild
pop
jnp
into
call
fadd
mov
and
mov
push
mov
(bad)
mov
pop
sti
cmps
in
mov
sub
das
sbb
ins
test
popf
jne
clc
movs
je
(bad)
xchg
dec
mov
sti
add
sub
cwde
pop
aad
idiv
dec
jns
outs
(bad)
jns
dec
loope
or
test
push
add
jnp
fwait
je
lea
fisubr
fmul
xchg
cmp
push
in
inc
inc
sar
aad
icebp
xor
pop
fldcw
jle
loop
or
push
outs
xor
sar
jge
mov
rcr
mov
sub
test
ss
pushf
sub
data16
das
pop
cmp
ja
adc
mov
and
cmc
daa
daa
loop
cwde
or
sbb
div
cmp
test
dec
in
pop
xlat
or
xchg
push
push
mov
popa
lock
fst
mov
ss
ret
retf
xchg
jb
and
cmp
imul
jnp
push
inc
mov
imul
push
mov
xchg
adc
pop
dec
push
dec
xor
leave
pop
sbb
mov
sub
dec
add
ret
sbb
lods
add
push
adc
pop
pop
cmc
mov
fucomp
shr
test
or
inc
aas
or
das
dec
xchg
xchg
jo
mov
dec
enter
sar
push
dec
jl
(bad)
push
fbld
pusha
jmp
test
rol
stos
sub
nop
(bad)
addr16
movs
(bad)
loop
pop
mov
add
cs
and
adc
js
pop
les
(bad)
std
add
mov
dec
or
mov
in
(bad)
xor
addr16
xlat
loope
(bad)
imul
mov
test
xchg
das
ret
sub
or
add
or
cs
jne
mov
dec
inc
(bad)
mov
mov
inc
pop
(bad)
cs
leave
fs
aaa
add
fdiv
jecxz
inc
dec
pop
lock
mov
push
dec
int
and
cli
call
fbld
and
mov
jge
sbb
aas
cmp
mov
test
lahf
or
rol
retf
jmp
inc
and
xchg
loopne
lods
sbb
inc
inc
mov
fdiv
jne
int3
lods
and
dec
inc
mov
arpl
(bad)
dec
sbb
ret
xchg
imul
in
cs
mov
ss
addr16
push
cmp
into
and
repz
or
dec
xor
mov
daa
mov
pop
push
adc
sti
add
sbb
daa
xlat
fwait
dec
and
(bad)
dec
lahf
or
mov
jle
shl
out
cmp
push
sbb
in
sar
out
xor
jo
xlat
jp
mov
xchg
xor
popf
out
mov
add
icebp
push
imul
fisub
mov
jne
mov
adc
shl
into
(bad)
or
retf
xor
mov
test
jp
scas
enter
sbb
jg
xor
pop
inc
sub
mov
scas
lods
scas
fidiv
push
fist
pop
retf
sbb
add
ret
sbb
out
sub
stos
pcmpeqw
icebp
pop
ss
dec
arpl
sbb
mov
loope
dec
aam
test
cmpxchg
xchg
jecxz
test
jo
hlt
(bad)
jnp
jg
xchg
mov
ins
loope
mov
test
xor
fmul
jo
scas
xchg
inc
xchg
jge
add
mov
adc
rcr
fldl2t
(bad)
fmulp
pop
movs
or
push
mov
ret
rol
pop
xor
imul
sbb
test
sub
into
popa
test
icebp
mov
cmp
and
fs
data16
add
movs
pop
pop
std
cmps
imul
push
lods
mov
and
mov
test
adc
inc
sti
pop
ret
jecxz
dec
pop
mov
ret
sahf
xchg
test
outs
mov
or
and
push
cmp
push
sub
jnp
cmp
pop
mov
movs
(bad)
push
lods
cmp
fbld
xor
scas
jle
xor
loop
pop
adc
sub
jns
inc
mov
out
into
lea
aad
pop
mov
jbe
mov
fdivr
rcl
xchg
(bad)
xor
cli
into
push
inc
leave
ror
jmp
clc
xchg
adc
cmc
push
popf
nop
in
adc
rcr
mov
jmp
cmp
mov
fdiv
or
sbb
lahf
mov
rol
pop
div
jnp
ret
sub
sti
pop
mov
scas
push
dec
and
mov
out
sti
imul
xor
xchg
cld
pop
hlt
push
dec
xor
or
gs
fisttp
loope
push
mov
xchg
sub
jae
push
or
sub
test
test
fidiv
cmc
add
in
out
xlat
push
or
xchg
dec
sbb
enter
fstsw
and
mov
cmp
sbb
cwde
ins
aad
and
daa
movs
mov
cmp
pop
aad
lods
in
dec
add
loop
cmc
dec
or
mov
ds
jnp
mov
sub
push
xor
mov
mov
sti
(bad)
add
inc
not
dec
cmp
adc
(bad)
adc
in
dec
and
mov
std
shl
xchg
mov
test
cmp
inc
dec
rol
push
dec
dec
pop
(bad)
hlt
test
jmp
(bad)
out
rcr
mov
mov
mov
inc
push
fldenv
push
inc
arpl
out
in
icebp
pop
retf
and
mov
ret
addr16
mov
aaa
sub
ds
and
bound
pop
and
not
jbe
(bad)
aam
cmps
rol
push
test
xor
dec
loop
scas
out
out
repnz
push
add
push
ins
mov
es
sub
dec
inc
std
xchg
jne
xchg
ins
stos
jecxz
repnz
pshufw
popa
push
test
pop
pop
scas
repz
push
push
int3
inc
sbb
pop
mov
movs
and
aas
cmp
cmc
jo
cld
cmps
xlat
outs
mov
icebp
xchg
jmp
in
push
push
mov
dec
mov
and
push
jmp
call
add
or
hlt
sbb
inc
push
xchg
in
call
mov
movs
imul
push
aaa
pop
cmps
sub
aaa
push
rcl
jne
retf
and
(bad)
arpl
jne
inc
adc
lods
loopne
dec
in
mov
push
inc
mov
imul
pop
ror
lods
add
scas
push
lock
fwait
mov
pop
out
nop
js
(bad)
mov
std
and
ins
shr
not
adc
lahf
leave
rol
add
daa
fisubr
mov
stc
bound
retf
popf
enter
mov
test
mov
aam
popf
ss
pop
pop
jmp
pop
repz
sub
shl
mov
inc
and
jae
lahf
or
inc
sub
and
nop
xchg
adc
cmps
sub
pop
arpl
fild
into
retf
imul
pop
fdivr
add
fst
(bad)
call
ror
cli
add
pop
rcr
lock
mov
push
dec
pop
inc
push
movs
xor
enter
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
dec
fs
sub
int3
mov
daa
pushf
xchg
int
aam
cmp
jnp
in
cmp
jb
sbb
jns
inc
(bad)
or
fldpi
fs
loop
mov
dec
clc
add
lea
sbb
jo
dec
adc
dec
pop
(bad)
inc
ud0
shr
leave
and
scas
loop
mov
mov
xor
hlt
aam
push
pop
bound
fs
mov
mov
push
stos
sbb
mov
lds
and
out
push
data16
push
xchg
mov
sbb
xchg
sbb
mov
lahf
sbb
cmps
jmp
xchg
jl
sbb
sub
mov
int
outs
rcl
inc
pop
mov
push
dec
mov
pop
out
adc
popa
mov
ret
jne
pop
sub
daa
mov
fs
imul
int
ret
jl
ins
jl
sti
loopne
movq
adc
inc
ds
jl
inc
xor
hlt
je
int
cwde
outs
lods
add
adc
lea
pop
mov
fwait
xchg
shr
push
jl
pop
adc
mov
sahf
and
aaa
call
pmulhuw
sbb
retf
ror
or
lea
shr
in
push
out
(bad)
fadd
frstor
test
inc
dec
aas
xor
push
dec
or
shr
cdq
rol
pushf
clc
cwde
xchg
mov
xor
dec
xchg
dec
and
jnp
pop
daa
inc
retf
xor
mov
ds
sbb
push
mov
pusha
jp
jb
in
repz
mov
push
push
(bad)
(bad)
mov
pop
mov
inc
loop
(bad)
in
or
sub
lahf
idiv
icebp
js
mov
(bad)
mov
lods
std
sbb
pop
push
sub
or
mov
jp
jae
fs
cmps
iret
lods
fpatan
jl
sbb
jne
ss
enter
or
xchg
add
xchg
mov
shr
mov
sbb
mov
in
(bad)
mov
mov
mov
push
clc
imul
mov
xor
sbb
pusha
test
jmp
xchg
fcom
ins
shl
mov
clc
add
jns
aam
xchg
jge
(bad)
test
adc
sub
or
add
sahf
mov
fistp
mov
repnz
jne
mov
adc
dec
mov
cmp
lods
mov
arpl
nop
cmc
out
mov
pop
adc
ror
dec
je
in
xor
mov
pushf
pop
movs
push
div
jg
loopne
fistp
sbb
ja
add
pop
int
jb
dec
push
sub
dec
hlt
into
mov
arpl
mov
lea
or
mov
pop
sbb
or
and
addr16
in
adc
cmp
icebp
sbb
idiv
mov
repz
mov
or
inc
jnp
lds
xor
jno
in
pop
or
pop
mov
push
and
mov
mov
stc
mov
retf
and
and
add
sub
xor
cmp
sbb
(bad)
(bad)
mov
inc
shl
imul
mov
mov
dec
sbb
outs
popa
sub
nop
lahf
adc
xchg
cmp
mov
stos
add
scas
aaa
cmp
nop
mov
enter
push
sbb
enter
int
sub
sbb
jno
dec
push
mov
int3
loopne
test
into
jg
jmp
out
jmp
into
xor
loopne
push
(bad)
icebp
aaa
cmc
push
xor
adc
dec
(bad)
push
cmp
aaa
cmc
adc
pop
test
nop
stos
cmp
cmp
xchg
ja
out
inc
mov
into
loope
jecxz
push
sub
jno
dec
stos
push
jl
pop
int3
sbb
ret
sub
sbb
daa
in
xor
sub
ret
clc
mov
and
pusha
xor
in
test
lds
fisub
dec
cmps
xchg
jl
imul
adc
push
clc
loop
enter
scas
jp
inc
vpsubusb
jmp
retf
cmp
loopne
loopne
jbe
std
lock
and
sub
sbb
pop
ja
adc
ss
mov
jecxz
outs
sub
rol
mov
(bad)
int
adc
mov
je
out
mov
push
mov
(bad)
push
cmps
movs
inc
popf
in
dec
jge
adc
or
in
es
mov
xchg
popf
add
cmp
sub
pop
pusha
adc
push
test
inc
imul
stos
pop
cmp
or
pop
loop
cwde
mov
push
loop
ret
xchg
jmp
mov
cmps
cld
and
ss
push
or
or
aad
fst
pop
imul
fldenv
xor
cwde
mul
in
jg
lods
adc
out
dec
jl
push
xchg
gs
lds
cmp
aaa
imul
sbb
inc
inc
std
inc
jo
imul
jp
mov
inc
mov
mov
retf
adc
cmp
imul
jb
shl
sub
pop
stc
in
push
sti
cdq
push
bt
inc
xor
in
sbb
push
pop
(bad)
jns
pop
retf
scas
outs
pop
push
je
sbb
test
xchg
sbb
imul
clc
retf
shl
inc
cli
and
repz
jnp
movs
xor
xchg
jne
aaa
mov
ficom
aad
pop
pop
loop
inc
push
scas
push
add
adc
(bad)
fxch
jmp
ja
mov
dec
mov
not
shl
scas
push
movs
sub
cmp
fmul
fst
cld
sub
inc
rcl
jmp
xchg
test
daa
push
xor
bound
dec
inc
int3
mov
and
mov
and
retf
push
xor
sbb
mov
data16
jmp
stos
ds
gs
push
es
or
inc
add
lds
push
loope
adc
inc
aaa
int3
mov
mov
xlat
sar
jns
(bad)
push
push
shl
nop
aaa
xchg
sub
jge
sub
xchg
hlt
push
arpl
loope
fcmovb
aam
xchg
repnz
sbb
and
mov
daa
mov
popf
push
push
ss
jbe
pop
or
enter
cmp
add
shr
mov
push
call
movs
shr
es
adc
(bad)
xlat
pop
sub
pop
pop
outs
sub
stc
add
mov
bnd
mov
outs
lea
fisubr
fcomp
in
and
pushf
and
xor
es
inc
(bad)
in
mov
push
scas
and
mov
test
fisubr
movs
xor
xchg
stc
pop
pop
aam
les
xor
sub
(bad)
sub
(bad)
jmp
iret
neg
pop
test
and
mov
retf
mul
push
in
pop
(bad)
pusha
jg
dec
cmp
cmp
lds
adc
pop
jne
cli
stc
mov
cmp
push
push
xchg
mov
test
enter
sbb
xor
inc
sbb
push
bound
repnz
and
scas
movs
pop
mov
stos
cmp
sbb
inc
inc
rcr
mov
stos
inc
and
(bad)
sbb
into
shr
gs
imul
out
or
(bad)
out
and
push
xchg
gs
out
mov
jns
ins
ins
je
dec
adc
or
js
cmp
xchg
clc
jl
mov
adc
cmp
iret
ds
fisttp
aas
retf
loop
mov
inc
cmc
mov
pop
repz
xor
scas
repz
cmp
mov
xchg
adc
mov
jnp
ins
xor
pushf
fsubr
jne
into
adc
inc
jmp
test
pop
xchg
loopne
or
inc
retf
jo
aaa
les
cld
cmp
scas
imul
mov
dec
push
jle
mov
and
popa
ret
out
stc
aas
mov
adc
jecxz
lahf
mov
mov
in
xor
cdq
mov
jb
mov
lock
retf
add
adc
sub
call
mov
mul
push
and
mov
dec
retf
jne
enter
sar
mov
inc
mov
aaa
mov
cmp
in
retf
mov
sbb
and
or
mov
sub
iret
imul
jp
add
and
mov
rcr
dec
xchg
out
xchg
adc
popa
adc
add
fidiv
popf
xor
shl
pushf
std
mov
ja
and
pop
jl
jge
pop
inc
hlt
lahf
pop
shr
or
inc
sbb
push
adc
in
ds
inc
mov
cmp
movs
cmps
ins
sub
daa
rol
sub
inc
cmc
jmp
xchg
push
jmp
dec
push
mov
push
xlat
das
call
fs
aad
mov
rol
xor
daa
push
and
mov
sbb
mov
xor
jbe
pop
fldenv
cdq
fsubr
cmp
mov
or
cmp
lds
push
fdivp
sbb
jnp
push
add
sbb
jne
add
loop
cmp
ror
ror
aam
sub
add
outs
inc
addr16
jae
lea
push
imul
push
loope
mov
cwde
mov
nop
xchg
fnstenv
enter
scas
ret
push
cmp
(bad)
pop
hlt
adc
or
lods
les
shl
xchg
retf
mov
dec
sub
ins
into
or
(bad)
push
into
shr
or
retf
ret
push
and
pop
sbb
sbb
push
cmp
loope
outs
push
or
imul
add
popa
int
inc
jmp
sub
fild
idiv
cmp
movs
enter
popa
out
out
inc
dec
dec
push
(bad)
jae
sub
add
js
dec
adc
pop
cwde
ss
(bad)
mov
mov
loopne
fidivr
fist
cmc
outs
push
outs
imul
inc
inc
lea
bound
mov
adc
xchg
fcom
stos
cmc
inc
in
fnsave
cmp
rcl
push
daa
pop
mov
adc
sub
pop
imul
jmp
enter
add
xchg
add
cmp
dec
sub
mov
iret
cmps
mov
nop
xlat
mov
xor
xlat
xor
xor
in
pop
ret
cld
jle
int
push
sbb
inc
sub
inc
(bad)
ss
and
mov
mov
jo
xor
shl
cdq
jmp
test
mov
stos
push
shl
dec
loopne
test
mov
retf
test
ja
push
sbb
sbb
mov
mov
stos
cmp
mov
in
xlat
div
in
or
outs
pop
add
popf
aad
dec
add
sti
add
mov
xchg
repz
dec
pop
sti
ficom
out
cwde
inc
bound
mov
mov
add
stc
aaa
lock
loopne
sar
sar
pop
jo
add
popf
pop
test
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
test
enter
pop
sub
lods
mov
fistp
enter
xor
and
adc
addr16
icebp
mov
xchg
lods
int3
cmp
jns
iret
mov
add
xchg
rol
and
fnstcw
cmps
mov
sub
mov
test
lahf
sbb
push
adc
stc
call
xor
sahf
dec
xor
and
sbb
scas
add
std
in
jno
(bad)
test
adc
and
cmp
xlat
ror
jno
push
aam
jno
shr
mov
in
repz
or
add
clc
scas
and
sub
adc
(bad)
xchg
cmp
(bad)
or
jg
jmp
out
and
fld
adc
int3
aas
mov
mov
or
push
dec
mov
icebp
cmp
and
adc
jl
mov
and
(bad)
(bad)
push
outs
xchg
(bad)
pusha
ins
mov
fdivr
in
sti
test
stos
stos
mov
arpl
and
retf
inc
lea
and
loope
add
shl
mov
ins
jg
cmp
sbb
out
mov
(bad)
(bad)
popa
jg
(bad)
mov
std
xor
jb
inc
dec
dec
sub
hlt
push
mov
(bad)
adc
out
call
arpl
adc
jecxz
or
out
ror
inc
scas
mov
cld
mov
dec
inc
mov
repz
outs
add
arpl
sahf
mov
ret
and
push
pop
xor
adc
cmps
mov
call
pop
stos
es
rol
mov
mov
cmp
xchg
and
sub
aam
mov
inc
pop
ja
add
jne
popa
mov
pop
add
mov
mov
mov
gs
lahf
test
call
fld
rcr
dec
lock
sub
sbb
mov
stc
ss
xchg
pop
into
sub
fsubrp
push
popf
imul
js
adc
ins
dec
sti
inc
fsub
mov
test
pop
pop
ret
xchg
sub
int
shl
mov
jns
cmc
into
cmp
outs
cwde
int3
sbb
test
add
das
fsubp
adc
lea
dec
sbb
cmp
loope
inc
retf
adc
adc
dec
fucomp
mov
and
sbb
iret
out
jmp
out
jbe
inc
jp
pop
xor
retf
pop
jbe
cmp
mov
mov
lds
hlt
xor
mov
or
cmp
push
dec
inc
lods
cmp
das
ins
sbb
(bad)
in
ficom
into
mov
inc
movs
imul
jbe
mov
xchg
mov
jle
push
aas
push
xor
sub
add
sub
loope
loope
popf
cld
repnz
cmps
push
or
aas
ds
pop
test
dec
adc
test
inc
ss
aam
sub
inc
inc
xchg
repnz
(bad)
jns
dec
xor
into
pop
mov
pop
push
sahf
xchg
das
dec
mov
leave
aas
jmp
cdq
inc
int
cmps
mov
jns
(bad)
push
mov
jge
sub
jmp
arpl
scas
pop
dec
push
adc
mov
mov
jb
jns
and
neg
aaa
or
scas
lods
pop
jae
aad
(bad)
loopne
mov
sti
or
jbe
std
inc
xchg
fsubr
test
dec
cmp
out
jb
cli
adc
lods
dec
adc
loope
cmps
fwait
pmuludq
cli
inc
sbb
xchg
shl
sub
xchg
mov
test
jp
pop
xor
lods
pop
in
test
jnp
inc
mov
int
addr16
cmp
(bad)
mov
jecxz
in
aam
dec
fidivr
aaa
jp
jg
mov
ins
sbb
sbb
aas
call
test
jne
inc
aaa
into
lock
push
(bad)
popf
mov
sub
lods
imul
cwde
jle
xor
mov
cli
mov
das
jne
push
xor
pop
into
in
rcl
into
and
xor
sbb
mov
aas
sbb
sbb
mov
push
loop
scas
cmp
imul
popa
mov
sub
push
out
pop
test
in
pop
inc
lods
xor
out
stos
in
pop
jmp
or
add
xor
xor
loop
add
sub
mov
sbb
pop
xor
fisttp
sub
jo
adc
cmps
lock
inc
fwait
cmc
push
test
and
test
in
popf
push
push
pop
add
in
popa
sbb
lods
mov
and
jbe
xor
xchg
sub
inc
scas
movs
push
and
mov
loopne
adc
mov
jae
inc
jbe
imul
dec
dec
in
leave
int
(bad)
ins
shr
inc
xor
loope
sub
dec
fmul
div
mov
(bad)
daa
jo
jne
(bad)
test
test
mov
xor
ficom
pop
mov
idiv
sti
mov
mov
xor
dec
lock
dec
mov
popf
movs
pop
ficom
push
(bad)
aad
cmps
cli
push
mov
sbb
loop
or
fstp
test
pop
fcom
call
cwde
mov
ret
scas
ret
lock
jle
lods
mov
loop
pop
mov
mov
xchg
frstor
daa
int
cmp
ds
outs
sar
mov
sub
addr16
scas
mov
sub
inc
add
adc
xor
loopne
cs
jp
xchg
inc
hlt
adc
jb
stos
cmc
mov
add
test
ds
jae
mov
cmp
push
and
movs
inc
dec
leave
push
sub
dec
jl
xchg
mov
div
mov
mov
jb
stc
adc
femms
mov
mov
outs
das
nop
cmp
jle
inc
and
jle
mov
(bad)
jmp
fimul
ja
bound
loope
leave
mov
xor
aas
sbb
dec
pop
lods
xor
fwait
shl
mov
inc
xor
fnstcw
sbb
dec
fistp
adc
inc
push
(bad)
dec
rcr
movs
(bad)
pop
adc
or
pop
rcr
jne
fcomp
sub
mov
jns
data16
and
test
scas
jmp
hlt
mov
and
mov
pushf
cs
imul
(bad)
sub
add
loope
fwait
cdq
jnp
dec
lods
xchg
movs
mov
dec
enter
inc
jecxz
(bad)
sti
in
shl
xchg
arpl
sahf
dec
popf
sbb
and
test
in
mov
inc
jne
xchg
in
inc
test
cmp
leave
jb
ss
fst
pop
(bad)
mov
mov
call
cmp
xor
adc
test
int3
mov
aam
xchg
jno
sub
rol
or
out
outs
jmp
jmp
xor
out
cmps
test
jb
aas
data16
ror
jp
or
sbb
adc
and
mov
ror
mov
(bad)
adc
mov
dec
ret
iret
in
xor
outs
out
xchg
int
mov
shl
pop
mov
xor
in
cmps
ja
addr16
sbb
dec
call
adc
sar
adc
gs
test
hlt
out
loope
mov
pop
dec
mov
imul
hlt
push
lods
pushf
aad
lock
div
aad
xchg
cmp
loop
inc
lahf
pop
inc
pop
cmp
dec
in
push
cmp
xchg
je
mov
and
lods
fcmovnu
pop
push
test
lahf
mov
and
call
ret
mov
cmp
retf
fst
fs
ds
fld
cmp
into
add
lds
mul
pop
ret
push
enter
gs
adc
setbe
inc
or
adc
dec
retf
and
pop
fisub
and
stos
sub
cdq
addr16
not
xchg
pop
in
inc
xchg
dec
push
xor
loop
dec
(bad)
std
sahf
xchg
popf
sub
mov
jg
dec
mov
adc
in
dec
adc
outs
jb
lea
or
sti
cmp
enter
mov
lock
xlat
leave
call
dec
addr16
cmps
inc
xchg
sbb
mov
scas
push
inc
out
mov
pop
pop
jno
sub
sbb
xor
loop
dec
sub
fistp
sbb
mov
and
inc
xor
sub
sbb
shl
pop
js
les
jecxz
mov
mov
add
cdq
mov
and
repnz
stos
and
mov
or
imul
test
xlat
pop
pop
push
push
js
mov
sahf
inc
xor
int3
dec
mov
push
les
cmps
adc
mov
jb
mov
ja
movs
and
and
test
push
mov
fimul
ret
mov
shr
ins
ret
dec
push
(bad)
push
xchg
adc
dec
adc
xor
jns
imul
fwait
test
jge
aam
pop
sar
sbb
xchg
ficomp
xchg
mov
inc
jbe
dec
mov
push
repz
sub
sbb
and
lea
sub
push
inc
icebp
add
or
fild
sub
pusha
dec
stc
pop
nop
mov
jg
in
or
adc
add
cmp
repz
retf
jns
sbb
fstp
stos
jp
enter
push
fisttp
jmp
or
sahf
es
mov
loop
add
push
mov
jmp
cdq
inc
push
push
mov
outs
repnz
nop
and
inc
enter
mov
xor
mov
cmp
cdq
mov
push
adc
dec
jmp
jmp
jb
xor
pop
mov
bnd
stc
int
adc
or
xchg
aad
fisttp
xor
xchg
and
mov
rcr
jmp
pop
cmc
lock
outs
xor
mov
xor
sub
jg
(bad)
pop
(bad)
mov
sahf
jecxz
or
adc
and
adc
pop
or
mov
call
dec
enter
shl
cli
cmps
and
aam
push
(bad)
ror
add
jl
ror
mov
retf
arpl
cmc
xchg
and
mov
inc
mov
jb
lods
int3
xchg
es
hlt
lods
icebp
or
xlat
ja
int
pop
pop
cld
mov
retf
cld
clc
or
popa
aaa
leave
jp
cmc
mov
xchg
ds
push
pop
mov
in
mov
xor
mov
pusha
pusha
mov
mov
scas
das
pushf
out
or
sub
aam
add
cmp
add
add
mov
aam
jp
cmc
pop
inc
pop
adc
dec
es
adc
outs
fs
js
int3
ror
pop
ror
lods
mov
xor
mov
sbb
je
inc
cwde
mov
cmps
xchg
cs
enter
pop
and
out
(bad)
ins
push
push
and
mov
mov
push
addr16
add
jge
xchg
lods
pop
fimul
stos
fiadd
xor
pop
adc
imul
sbb
test
dec
pushf
rep
pop
mov
or
jno
xlat
xor
add
cmp
ret
(bad)
dec
les
ins
fnsave
xchg
dec
es
xchg
pop
mov
ror
jecxz
or
fidivr
daa
mov
jae
(bad)
out
aas
inc
dec
lock
loopne
sbb
pop
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
xchg
cmp
in
cmp
inc
mov
and
sbb
fs
xchg
mov
cmp
fxch
mov
in
repz
add
pop
mov
push
inc
out
mov
clc
mov
pop
jg
cmc
das
pop
sub
sub
dec
cli
test
mov
pop
jbe
cmp
imul
push
pop
jg
add
icebp
test
ret
into
popa
and
dec
pop
push
stos
cmp
icebp
dec
jmp
out
imul
mov
inc
std
adc
ret
mov
mov
add
ja
mov
jbe
retf
pop
cs
jecxz
jl
push
mov
inc
dec
dec
xchg
cmp
pop
pop
mov
sahf
push
sahf
push
repz
or
sub
cdq
jmp
mov
xchg
adc
adc
iret
push
mov
sub
daa
retf
lds
aam
jl
daa
and
cmps
cmp
pushf
add
fsubr
cs
dec
cmp
shl
mov
mov
cmp
std
in
mov
into
mov
jmp
fistp
lods
stos
xchg
mov
add
sub
lds
cmp
neg
jnp
hlt
in
mov
loop
out
movs
ror
lds
adc
mov
mov
inc
cmp
pop
jmp
stc
ja
scas
and
adc
fs
pop
and
pop
int3
scas
mov
mov
jmp
jbe
add
push
clc
out
xlat
mov
cmp
xchg
push
jae
cmps
adc
iret
adc
in
repz
shl
out
adc
xchg
sbb
enter
or
mov
js
xor
mov
shr
jle
pushf
in
pop
add
jne
enter
movs
and
mov
(bad)
xchg
mov
mov
fwait
test
mov
jns
mov
je
mov
pop
and
repz
test
mov
nop
mov
mov
mov
and
pop
ret
cmp
or
inc
inc
ins
repz
(bad)
or
add
mov
js
jno
cdq
sbb
cwde
test
imul
sbb
mov
call
sub
ins
bound
(bad)
cmps
ficom
mov
fcomp
sbb
cld
jno
retf
mov
push
mov
push
jmp
lahf
das
shl
inc
dec
(bad)
(bad)
push
mov
fcmovnbe
in
call
sbb
xor
sbb
loopne
pop
jecxz
push
call
idiv
sub
jecxz
outs
sbb
retf
cmp
sub
push
adc
add
fnsave
scas
and
call
std
adc
push
jp
push
cmp
js
test
stc
js
pop
dec
leave
cmps
dec
cmps
mov
stos
pop
dec
jp
push
rep
outs
dec
mov
inc
sbb
sub
sbb
jae
push
jnp
call
jns
pop
sbb
pop
sbb
sub
mov
popf
iret
sahf
cdq
sub
jbe
push
pop
dec
jmp
pop
xor
retf
outs
aas
cmp
xchg
fisttp
loope
or
mov
sub
pop
xchg
sti
pop
jp
sub
mov
retf
pushf
(bad)
mov
add
aaa
xor
inc
jnp
jnp
jo
add
std
jb
std
dec
mov
inc
push
cmp
push
sbb
mov
pop
add
in
rep
(bad)
je
dec
dec
sub
jge
call
stos
adc
ret
mov
add
lods
sbb
pop
dec
aam
mov
jmp
jle
mov
cwde
int
adc
fwait
push
sbb
mov
inc
pop
outs
inc
jle
xor
pop
adc
xor
cs
adc
div
mov
jno
ds
mov
rcl
iret
pop
lds
inc
(bad)
stos
xchg
out
mov
in
lahf
mov
imul
fdivr
or
jo
jmp
ds
iret
and
outs
mov
movs
outs
imul
lods
retf
xchg
mov
xlat
mov
jmp
adc
xor
adc
mov
push
xor
out
movs
les
add
sbb
and
leave
cwde
pop
cdq
cmps
push
xchg
mov
adc
lea
pop
mov
fcmovbe
jb
in
cmps
and
mov
cmp
push
out
or
cmp
sub
pop
mov
cmp
fmul
sub
and
mov
lds
jp
xchg
(bad)
fisttp
int
sub
sub
push
push
mov
dec
cwde
(bad)
xchg
shl
mov
mov
sub
cmps
sbb
fcomp
xor
stos
add
add
adc
adc
test
push
mov
(bad)
or
mov
stc
das
out
imul
xor
inc
jle
xchg
cmp
jmp
mov
stos
sahf
pop
push
sub
movs
xchg
push
mov
mov
or
push
mov
push
mov
mov
out
cmps
adc
call
cmp
xchg
mov
mov
ret
ret
movs
jo
fsubr
push
aad
mov
lds
addr16
outs
cmp
dec
jno
xor
and
mov
xchg
jo
sub
or
xor
mov
or
mov
(bad)
xchg
sahf
push
data16
psubusb
and
lods
inc
sub
jge
cmp
(bad)
out
mov
in
adc
cmps
and
aam
inc
add
or
retf
jle
retf
cmp
jmp
pop
div
mov
mov
movs
xor
xor
stos
neg
xchg
dec
inc
shl
inc
ins
push
lea
xchg
xlat
and
aam
std
pop
add
test
push
pandn
out
dec
and
dec
pushf
pop
mov
add
xor
pop
xchg
dec
inc
add
fistp
test
in
cmp
sbb
js
and
mov
dec
vcvtps2dq
cmps
sub
cmps
mov
cdq
sub
in
adc
pushf
(bad)
xchg
mov
adc
xor
sar
inc
and
pop
aaa
push
rcl
pushf
enter
add
sub
jbe
fild
pop
test
popa
dec
in
bound
lds
mov
add
pop
cdq
or
inc
push
and
ret
xchg
out
rcl
dec
mov
repnz
div
mov
jp
jae
jbe
lods
inc
jo
jecxz
jp
pop
(bad)
mov
cmp
shr
call
lods
pop
imul
imul
adc
jg
sub
or
inc
retf
sbb
in
mov
lahf
into
cmp
in
jne
icebp
push
ja
mov
dec
mov
push
jne
div
lods
mov
mov
mov
cs
(bad)
jle
les
add
inc
pop
mov
sbb
fs
fimul
jns
pop
dec
int3
mov
dec
call
lea
add
movs
mov
fimul
push
into
push
xor
ja
dec
push
jg
cld
jle
shl
xor
push
jbe
and
push
into
stc
add
pop
repz
ja
add
sub
and
(bad)
xor
inc
and
push
(bad)
icebp
lods
mov
js
and
cmps
lea
jge
mov
mov
js
outs
and
cmp
mov
outs
adc
dec
cmp
pop
inc
ds
jns
and
dec
test
cli
xchg
shl
xor
stos
fmul
inc
lock
mov
pop
or
push
cld
adc
mov
mov
call
pop
cs
push
or
cld
mov
dec
popa
inc
retf
and
sti
ss
mov
xchg
and
push
cmp
(bad)
inc
fild
fisubr
fs
adc
(bad)
sub
push
push
loop
cmp
rol
mov
cs
xrelease
dec
ret
xchg
test
and
rol
lds
imul
xor
dec
xchg
adc
xor
sbb
jp
cld
inc
xchg
(bad)
cmp
fidivr
fstp
pop
cmp
xor
loopne
out
arpl
xchg
or
outs
sbb
test
fxch
sahf
xchg
dec
jge
and
test
and
xor
jo
mov
sub
pop
imul
into
and
adc
lods
lds
mov
sbb
jne
(bad)
pop
xchg
hlt
pop
cmps
sub
or
call
xor
out
xor
int3
aaa
fdiv
dec
inc
jp
or
pop
(bad)
retf
xchg
add
mov
(bad)
popf
ins
in
mov
jmp
mov
mov
ds
jecxz
inc
repnz
xchg
mov
pop
test
(bad)
jl
xor
dec
jae
int3
pop
xchg
lea
xchg
out
stos
neg
pop
cdq
jb
push
jg
frstor
ss
out
jp
jmp
mov
cmp
sbb
xchg
pop
push
jmp
mov
push
push
mov
addr16
dec
rol
vmovupd
fwait
xchg
mov
push
push
ins
int
jnp
inc
ret
pop
push
outs
cmp
xlat
dec
xor
adc
outs
jg
test
push
sbb
aam
out
movs
mov
(bad)
leave
dec
into
test
lock
retf
(bad)
call
and
clc
jne
inc
cmp
mov
xchg
ret
mov
xor
shr
mov
jne
sar
(bad)
cmp
cli
pop
xor
pop
add
jb
std
mov
(bad)
stos
bound
mov
adc
pop
or
pop
mov
stos
fs
pop
dec
(bad)
pop
mov
aad
in
adc
ins
ds
call
lods
mov
inc
push
cmp
call
sahf
xchg
mov
sar
loop
and
mov
jne
data16
loope
cmp
add
xor
add
popf
cmp
cmc
mov
add
fild
(bad)
mov
ins
mov
xor
test
cmps
out
bnd
push
sbb
movq
jmp
dec
pusha
xor
push
xor
mov
lods
or
ins
dec
out
rcl
add
pop
push
(bad)
loop
bound
jg
adc
mov
mov
lock
or
xor
out
call
ins
scas
(bad)
pop
jmp
add
inc
add
sub
xchg
dec
(bad)
aad
dec
ja
es
sar
movs
sub
scas
adc
cs
xchg
lock
inc
aas
pusha
adc
mov
adc
sbb
sub
xor
stc
and
movzx
or
push
jae
push
and
inc
sub
sub
les
pop
int3
(bad)
push
sbb
pop
dec
xor
aad
mov
xor
or
(bad)
jle
pop
(bad)
dec
lahf
adc
dec
mov
test
mov
es
add
add
clc
aaa
lock
loopne
sar
lock
mov
xor
shl
cmps
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
push
loop
enter
fs
mov
fisub
push
fs
ret
sbb
fldenv
fs
in
mov
mov
leave
scas
in
lods
jae
gs
and
icebp
stc
dec
fistp
dec
(bad)
pop
sahf
add
shl
dec
mov
jns
xor
sub
arpl
cmp
xchg
add
and
aam
cs
xor
pop
out
repnz
jbe
jl
push
test
pop
punpckhwd
fdivp
loope
fcmovnbe
retf
jb
fs
fs
(bad)
lahf
and
xchg
or
add
adc
sbb
inc
push
leave
stos
in
xchg
shl
cwde
xor
or
jbe
or
into
add
gs
mov
xchg
je
ffreep
cmps
jl
lock
add
xor
(bad)
stos
call
aad
mov
sub
pop
in
mov
inc
mov
faddp
inc
out
int
fistp
(bad)
arpl
fnsave
lock
in
mov
stos
clc
fistp
cwde
sbb
xchg
aas
inc
sbb
in
stos
adc
int3
outs
out
fcmovbe
sub
inc
dec
or
push
jp
call
mov
outs
mov
and
dec
rcl
sub
sub
sub
dec
ror
mov
push
jecxz
cs
gs
stos
push
pop
in
push
cli
mov
sub
push
(bad)
mov
int
or
hlt
dec
or
popf
sti
ds
imul
icebp
or
test
dec
push
pop
jo
fs
movs
push
sub
aad
xchg
xchg
pop
out
cld
(bad)
int
movs
inc
xor
or
retf
(bad)
xchg
ret
or
mov
pop
xor
lea
arpl
test
ins
hlt
sub
or
pop
cmp
int
leave
cwde
fld
push
inc
fs
xlat
xor
push
aas
mov
sub
adc
jo
cmp
mov
cmp
mov
push
mov
popa
shl
es
inc
retf
push
sub
jmp
ss
movs
scas
les
xchg
push
or
mov
test
out
add
fistp
xchg
sub
cdq
outs
jl
lods
inc
sub
push
and
xchg
mov
xchg
test
lock
mov
inc
retf
cli
jnp
push
rcl
std
pop
xor
xor
enter
sub
jb
js
mov
(bad)
dec
add
pop
jmp
cmp
jmp
into
sbb
cmp
loop
lea
stc
fcmovu
mov
inc
fs
jb
add
jns
jl
fistp
lahf
xor
ror
test
push
jno
shr
or
int3
mov
sub
pop
aad
je
or
sbb
pmuludq
call
or
test
mov
pop
fist
aad
add
inc
shl
ret
lods
mov
jmp
(bad)
scas
aam
or
add
gs
pop
mov
div
sub
out
pushf
adc
fucomp
(bad)
fcom
addr16
cmp
adc
push
pop
pop
sahf
sbb
mov
ror
cmp
lock
ret
popa
adc
mov
push
or
push
jns
add
and
pop
call
jg
fwait
inc
pop
dec
sub
sbb
fistp
into
inc
xlat
pop
pop
lahf
std
inc
cmp
jnp
test
add
push
sbb
or
adc
mov
(bad)
pop
mov
adc
jl
sub
std
sub
ror
jae
add
fwait
test
test
scas
add
cmp
sub
jle
xchg
jmp
xchg
stc
sbb
xchg
test
pop
outs
aaa
pop
cmp
stos
pop
sub
cdq
push
push
pop
xchg
xor
out
imul
jp
push
xor
test
ss
push
scas
int3
popa
loop
mov
in
inc
mov
pop
sub
xor
clc
pop
pop
push
dec
xchg
or
fistp
jns
push
fsubr
and
inc
sub
das
sub
das
dec
push
test
jge
push
movs
mov
fcomp
and
xchg
icebp
mov
pop
pop
sbb
addr16
mov
frstor
das
push
mov
stos
popf
mov
jmp
add
stos
test
sbb
cmp
dec
call
out
fidiv
dec
test
rcl
ins
mov
rol
mov
sub
data16
aam
fadd
mov
pop
mov
adc
dec
cmps
xchg
cmp
popa
mov
scas
xchg
je
cld
adc
mov
mov
jns
xchg
add
add
jl
stos
inc
aaa
mov
call
mov
sar
mov
or
das
cld
popa
fadd
xlat
inc
int3
add
or
xchg
leave
test
jecxz
not
aaa
loop
mov
add
jl
(bad)
std
in
xor
push
dec
movs
cld
out
mov
icebp
and
sbb
xchg
aas
push
fisub
jns
fcmovnb
mov
adc
pop
xlat
icebp
sbb
gs
or
push
(bad)
push
xchg
in
push
add
in
push
add
inc
push
arpl
xlat
xor
fst
mov
push
xor
(bad)
retf
pusha
cmp
stos
push
ret
stos
mov
xchg
push
test
movs
fild
fldln2
lea
push
pop
test
out
lea
(bad)
xchg
or
in
int3
in
jmp
dec
mov
jb
icebp
aad
cmps
pop
bnd
mov
sub
(bad)
pop
mov
sub
dec
dec
sbb
pop
shl
jb
push
movs
pop
daa
sti
fs
jl
cmp
jg
sti
pop
sti
pop
in
cmp
adc
sub
adc
mov
inc
scas
arpl
xlat
jnp
lods
pop
mov
cli
ret
fwait
mov
je
les
cwde
repnz
jb
xlat
or
or
mov
rcl
aad
mul
iret
pop
(bad)
push
test
cmp
mov
add
xor
arpl
push
jg
jle
mov
cwde
lock
pop
bnd
out
(bad)
rcl
xlat
fidivr
mov
(bad)
data16
add
jo
pop
mov
out
sbb
and
shl
daa
iret
ds
fimul
arpl
jae
loop
int3
ja
test
jle
iret
adc
cwde
jecxz
fld
cdq
mov
outs
loop
packsswb
stos
xor
inc
shl
repnz
loope
jecxz
inc
dec
jno
(bad)
stos
mov
pop
out
fsub
ins
rcl
mov
pop
gs
cmp
(bad)
push
add
es
adc
adc
sbb
ja
leave
mov
mov
pop
push
lock
dec
fisub
adc
xor
jns
retf
call
adc
mov
push
adc
or
jno
mov
movs
push
scas
enter
sbb
mov
adc
push
stos
jge
inc
cmp
daa
test
mov
lods
in
add
mov
mov
jl
add
mov
ret
inc
ins
sbb
stos
std
out
jae
retf
icebp
cdq
out
xchg
adc
popf
or
fbld
pop
push
fild
repz
cmp
fs
shl
or
xchg
ficom
mov
or
mov
scas
repnz
jp
add
push
dec
imul
iret
jb
(bad)
mov
jmp
cmps
mov
mov
(bad)
xchg
out
pop
or
inc
pop
sub
sbb
in
(bad)
popf
hlt
mov
xchg
call
mov
pop
jnp
shl
inc
inc
mov
xchg
add
xchg
cmp
xchg
jbe
cmp
imul
xchg
into
out
aaa
mov
loope
pop
cmc
movs
jnp
mov
xchg
out
ror
dec
adc
mov
xor
fcomp
sbb
dec
cmp
sbb
inc
push
mov
pop
(bad)
rol
and
enter
iret
shr
pop
sub
pop
mov
push
mov
stos
xor
ins
sub
nop
sbb
push
es
pushf
aam
fist
and
les
xchg
js
sbb
int
enter
mov
icebp
idiv
(bad)
ja
jne
push
gs
in
push
bnd
sub
inc
cmp
bound
pop
mov
mov
les
fwait
mov
inc
and
mov
xor
jb
pop
cmp
sub
popf
pop
xlat
icebp
inc
push
jg
inc
(bad)
push
ror
int
ror
outs
sub
outs
out
pop
push
pop
sub
pop
dec
inc
add
mov
out
dec
out
jle
movs
jle
pop
mov
lahf
loopne
xor
mov
pusha
sub
xchg
stos
call
mov
pop
push
or
pop
jle
mul
aas
push
aam
stos
mov
dec
inc
sti
test
rcl
push
add
mov
fisubr
or
cmp
dec
sub
shl
call
push
jge
fs
cmc
mov
cmc
push
mov
jnp
mov
dec
xchg
mov
sub
fmulp
dec
stos
and
xchg
ins
push
sbb
scas
push
pop
les
(bad)
dec
xor
push
or
test
pop
outs
push
mov
std
addr16
fdiv
(bad)
(bad)
ficomp
popf
(bad)
mov
loopne
test
mov
xor
in
mov
mov
or
xchg
(bad)
ss
inc
add
stc
icebp
cmps
and
ret
push
jmp
cmp
jg
inc
mov
je
aad
sbb
pop
lods
stc
or
mov
xchg
dec
in
jl
(bad)
pushf
call
or
sub
mov
sti
sub
test
(bad)
cmps
xor
xlat
add
inc
(bad)
fadd
add
jp
(bad)
push
leave
gs
or
mov
retf
mov
dec
lahf
mov
lock
iret
int3
add
add
ds
(bad)
retf
pop
pop
clc
mov
mov
fs
dec
aam
mov
mov
stos
(bad)
push
xchg
test
test
inc
dec
test
out
or
nop
enter
repz
(bad)
stc
and
(bad)
rcr
les
je
and
sahf
mov
mov
lea
cmps
dec
fild
(bad)
movs
push
adc
rol
mov
popf
leave
cdq
arpl
aam
cmp
stc
sub
push
int3
adc
out
xchg
jae
inc
into
push
gs
in
fcom
(bad)
shr
int
pop
cmp
dec
and
fld
xor
fwait
sbb
dec
pop
pushf
add
mov
shl
push
add
ss
std
mov
stc
rcl
clc
not
sbb
repz
loopne
xor
inc
stos
sti
lds
ins
rcl
jb
xor
fwait
xlat
adc
jns
mov
movs
or
dec
movs
jl
div
out
loop
imul
xchg
ret
jmp
push
xchg
mov
jle
rcr
popf
xor
fs
adc
sub
mov
and
sub
and
ret
push
sbb
scas
xchg
bound
push
mov
pop
adc
jecxz
xor
into
retf
pop
es
jbe
fidiv
sbb
call
mov
fdivr
or
jo
add
adc
mov
clc
daa
lock
loopne
sar
loopne
mov
push
inc
add
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
sahf
mov
cmps
xchg
in
cmps
(bad)
jge
dec
or
in
mov
dec
xlat
je
jno
outs
push
xchg
ss
and
pop
add
(bad)
ret
test
inc
je
dec
sub
mov
call
mov
out
mov
adc
fcom
mov
sbb
cmc
test
loope
cmp
pop
shr
dec
repz
leave
mov
data16
ins
clc
mov
add
dec
push
bound
jnp
mov
mov
add
cs
das
shl
std
test
add
pusha
inc
push
xor
(bad)
push
in
adc
ret
hlt
pop
scas
dec
cmc
js
es
xor
xor
daa
mov
sar
sbb
shr
sar
adc
pop
mov
sbb
xor
mov
sbb
retf
cmp
adc
xchg
sahf
and
loope
mov
pop
sar
aas
push
jns
pusha
cmc
test
aas
sbb
xchg
jle
fdivr
dec
(bad)
mov
adc
push
ror
inc
jl
xor
xchg
jns
addr16
(bad)
ja
inc
fistp
jmp
sti
xchg
fisttp
outs
rol
dec
icebp
jle
pop
sub
movnti
push
fsub
je
ins
movs
or
xchg
mov
movs
pop
xor
movs
retf
xor
dec
movs
add
fld
adc
push
je
or
repnz
pop
clc
fist
mov
jge
cs
xchg
sub
jl
js
pop
add
mov
pusha
(bad)
mov
sub
daa
addr16
stos
sbb
pop
sbb
cmp
stos
fwait
enter
js
dec
ror
aam
aam
dec
xor
jmp
mov
aaa
jns
xor
mov
jle
cmp
xchg
xor
pop
jo
in
fisttp
push
xchg
into
sti
cmp
call
(bad)
cwde
jae
sti
mov
mov
xor
jmp
mov
xchg
neg
and
shl
jmp
adc
les
in
push
loopne
pop
xchg
bswap
iret
xchg
fwait
mov
mov
push
mov
jae
jb
xor
(bad)
sti
retf
imul
sub
je
and
mov
push
xor
xor
or
call
mov
sti
(bad)
xor
xchg
jg
pop
and
jp
hlt
std
fild
mov
outs
ds
ficomp
(bad)
out
aas
fs
xchg
sbb
mov
and
scas
stos
and
pop
xor
xchg
dec
sbb
xchg
movs
pop
mov
inc
mov
jb
cmp
js
cmp
or
in
push
add
cld
test
cs
mov
pusha
and
fs
popa
pop
jae
bound
arpl
and
jo
into
cmps
sbb
or
leave
cli
(bad)
xor
mov
inc
jp
cdq
xor
push
adc
icebp
inc
pop
cmc
adc
sbb
test
jmp
and
rcr
jmp
shl
pop
data16
xchg
sub
(bad)
(bad)
sub
sub
mov
pop
popf
adc
out
lock
cmp
mov
fadd
stos
dec
mov
jno
pushf
mov
lock
add
mov
cld
pop
inc
cmp
dec
lods
stc
stos
mov
test
mov
fs
out
fisub
sub
jp
and
push
sahf
jbe
(bad)
(bad)
jnp
dec
mov
sahf
scas
cmp
pushf
mov
or
push
or
and
cmp
cli
mov
dec
or
es
(bad)
adc
and
push
mov
or
xor
mov
or
fwait
pop
and
add
xor
mov
lods
in
xchg
(bad)
and
pop
fwait
mov
adc
adc
sub
stos
dec
ds
(bad)
cmp
adc
repnz
iret
scas
(bad)
into
or
jmp
jp
pop
mov
fistp
xor
mov
data16
xor
push
sub
xor
xchg
mov
push
into
lds
pop
sbb
xor
mov
inc
cli
dec
inc
mov
call
push
dec
xor
outs
popf
addr16
pop
out
stos
jns
mov
arpl
das
pop
xor
mov
aam
jg
scas
dec
xor
inc
cmp
jmp
push
into
add
rol
mov
add
iret
mov
or
xor
popa
clc
cmp
outs
sub
adc
sbb
or
or
mov
ret
cs
fsub
inc
push
fsubr
fcomp
ins
fimul
jmp
inc
js
outs
popf
outs
aas
jno
rol
in
pop
(bad)
xchg
cmp
cmp
sbb
test
rcl
sub
pop
jbe
cmp
rcl
(bad)
lods
mov
cmp
adc
or
lods
out
xchg
pop
xchg
cld
mov
call
xchg
fwait
adc
cmps
mov
arpl
xchg
push
and
or
int
mov
adc
movs
fisub
cmp
out
ss
cmp
ins
sbb
push
les
leave
mov
dec
jg
pop
mov
leave
lock
inc
in
in
int3
mov
popf
xor
push
clc
iret
mov
je
push
cmp
jmp
repnz
test
add
sub
scas
mov
scas
pmulhw
movs
mov
vxorps
test
mov
inc
and
lea
adc
mov
lock
cdq
mov
dec
push
les
out
adc
dec
jb
jl
outs
nop
aad
sbb
add
outs
test
mov
pushf
out
pop
mov
fadd
jns
jae
cmp
sbb
(bad)
arpl
pop
xchg
(bad)
aad
xchg
mov
mov
(bad)
sub
(bad)
in
adc
xor
(bad)
in
mov
push
jp
(bad)
fiadd
jge
jmp
mov
mov
icebp
mov
cli
loope
pop
xchg
adc
js
push
test
xor
or
and
ss
test
jecxz
rcl
rol
jg
(bad)
das
fisttp
out
pushf
scas
fsub
adc
sub
or
jg
popf
inc
xchg
xchg
mul
sub
out
add
arpl
push
addr16
xchg
inc
sbb
sti
(bad)
dec
stos
cmp
mov
imul
dec
into
movs
adc
cli
fs
push
xchg
test
int
shr
sbb
pusha
outs
sbb
xor
aad
out
or
cmps
sbb
xchg
xor
(bad)
xor
pop
ja
enterw
sahf
mov
and
stc
sub
(bad)
xor
mov
fcomp
popf
sub
sub
imul
loop
sub
imul
fistp
ins
ds
xchg
outs
in
jg
xchg
out
addr16
aam
push
push
dec
arpl
scas
fisub
movs
sub
sub
stos
push
adc
movs
mov
ins
rcl
lods
call
sub
xchg
retf
sahf
and
(bad)
(bad)
xor
aaa
pop
loop
in
sbb
ror
mov
pop
scas
dec
mov
push
inc
jns
cdq
jg
mov
mov
sbb
cmp
xchg
fidivr
push
push
leave
repnz
pop
and
mov
push
daa
loopne
dec
cmps
cld
xchg
test
jle
push
and
je
nop
and
inc
mov
mov
cmp
shl
cmp
and
scas
fstp
sbb
xor
inc
or
ss
inc
stc
test
les
lods
cmps
into
xlat
jle
aaa
cli
mov
inc
ins
or
outs
sbb
daa
repz
push
test
dec
pop
xlat
jbe
add
and
sti
xlat
inc
fnstsw
cdq
not
rol
cs
inc
(bad)
mov
arpl
or
enter
imul
add
sub
in
and
inc
jmp
push
cli
(bad)
fst
xor
repnz
jno
sbb
sub
in
in
cmps
test
mov
mov
push
push
dec
scas
cwde
not
jae
loop
push
push
jne
aad
pushf
jg
fmul
sbb
xor
dec
ret
into
in
cwde
xor
mov
push
mov
shl
mov
mov
jae
stos
cs
out
or
movs
repnz
icebp
mov
xor
icebp
fist
and
sbb
test
fnsave
xor
(bad)
inc
ret
outs
dec
pop
xor
sti
mov
fistp
jmp
ds
popf
shl
jne
sti
outs
fnstsw
jns
ins
xchg
pop
sub
push
cmp
dec
aas
ficom
or
fdivr
aad
lahf
pop
fbld
repnz
xor
jb
mov
into
fdiv
int
xlat
call
shl
jo
mov
mov
xor
loope
test
movs
jnp
arpl
mov
mov
push
loop
add
dec
cmc
adc
mov
int3
push
inc
(bad)
pop
dec
dec
xchg
dec
or
mov
sub
cmps
sbb
pop
ficom
sar
and
and
cmp
out
movs
sahf
(bad)
in
nop
adc
xchg
sub
scas
ror
shl
push
push
aaa
jmp
lods
jle
outs
nop
jge
hlt
mov
mov
mov
cmp
pop
pop
add
jecxz
pop
push
add
or
mov
and
dec
adc
adc
cmp
jle
and
(bad)
fisttp
and
(bad)
xlat
aad
pop
mov
mov
not
xchg
add
mov
and
push
pusha
hlt
sub
sbb
in
xchg
sub
aaa
inc
pop
fstp
add
in
mov
bnd
int
mov
mov
jbe
retf
xchg
call
imul
and
push
jg
push
jp
inc
popf
test
data16
push
xor
test
jmp
test
cmps
inc
adc
arpl
push
xchg
sar
add
sub
dec
pop
or
or
mov
mov
popa
push
mov
cli
sub
mov
ret
pop
xchg
(bad)
sti
fcom
add
call
gs
fisttp
enter
(bad)
je
pmaxub
loope
or
adc
adc
ror
repnz
clc
adc
ss
jns
mov
test
addr16
rcr
xchg
ds
dec
adc
jo
mov
inc
sub
inc
cmc
sbb
aaa
outs
not
adc
add
cdq
out
cld
xor
imul
jo
add
mov
aam
dec
add
das
push
cmps
push
cs
push
leave
or
jmp
mov
jno
push
add
cwde
test
adc
dec
push
cmps
pushf
sar
into
or
arpl
add
pop
mov
test
xchg
ja
mov
sti
dec
fbld
loopne
cmp
pop
sahf
mov
sub
push
push
xor
ss
jge
cmps
mov
jp
inc
dec
icebp
push
cmp
jmp
and
pop
dec
movs
mov
(bad)
jmp
mov
loope
cmp
mov
adc
rol
mov
inc
cmc
xchg
pop
sbb
test
pop
pop
jl
aam
in
and
movs
dec
add
add
cld
sbb
aaa
lock
loopne
sar
lods
push
inc
fs
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
xor
scas
in
xchg
sub
(bad)
fld
sub
xchg
jno
pop
gs
xor
mov
ret
leave
sbb
mov
in
repz
add
bound
inc
fisttp
dec
mov
sub
sbb
(bad)
sbb
mov
(bad)
xor
pop
mov
pop
cmp
mov
sar
(bad)
ror
ret
adc
out
shl
xor
pushf
aad
shl
push
bound
scas
jp
push
inc
mov
in
or
adc
xchg
or
inc
cs
(bad)
test
in
aad
dec
xchg
push
repz
add
shl
or
dec
retf
and
cwde
icebp
xchg
and
in
push
pop
pop
ret
mov
fld
idiv
call
cmp
xlat
sbb
fxch
test
fstp
stc
icebp
jle
push
cmp
out
dec
loop
into
jns
lds
stc
cli
adc
cs
sub
and
(bad)
and
cmps
imul
jl
sahf
sar
adc
sbb
mov
sub
popa
sbb
sbb
xchg
dec
cld
jnp
test
ja
inc
xchg
outs
sahf
in
adc
sbb
mov
rol
pop
mov
or
adc
imul
xor
popa
push
xchg
cmps
int3
and
hlt
ins
ror
adc
popa
xchg
inc
push
and
dec
ret
fidivr
and
sbb
sar
xor
sub
adc
jnp
xchg
jnp
repz
dec
mov
int3
ss
shl
sub
(bad)
lea
bound
ins
or
out
pop
cmps
repz
out
inc
fsubr
call
pusha
pop
pop
aas
ret
movs
ret
outs
rcl
pop
pop
aaa
adc
sar
mov
pop
fistp
mov
push
ret
ret
push
xor
(bad)
jnp
icebp
push
xor
stc
popf
ins
inc
cdq
leave
mov
nop
pop
jl
cs
sahf
mov
fisub
repz
and
(bad)
sahf
icebp
popf
hlt
cmp
into
add
aas
das
and
in
push
loopne
jmp
(bad)
daa
popf
icebp
in
int3
movs
ds
jge
hlt
xor
aad
cmp
scas
stc
pop
sahf
cmp
js
xchg
test
arpl
(bad)
ins
add
inc
and
(bad)
mov
mov
aaa
pop
out
jae
sahf
outs
(bad)
pushf
wrmsr
scas
mov
xchg
es
xor
mov
xchg
loope
stos
out
push
or
rcl
mov
and
xor
out
arpl
dec
push
xchg
cs
(bad)
xlat
adc
mov
mov
out
xchg
inc
mov
cmp
mov
mov
pop
adc
pushf
je
fwait
fs
mov
adc
test
cmp
mov
retf
add
or
cmp
sti
mov
movs
push
xchg
sbb
add
retf
shl
bound
mov
leave
jecxz
and
push
les
pop
jecxz
arpl
test
or
fst
jbe
inc
mov
ret
lods
mov
sub
cmp
sub
mov
test
push
sub
(bad)
imul
pusha
test
mov
scas
daa
mov
pop
cli
in
push
push
xchg
cs
add
mov
mov
jle
fisttp
stc
(bad)
shl
das
xor
fadd
or
and
sbb
and
inc
xchg
clc
sub
xlat
inc
xchg
dec
mov
dec
cmp
xor
jne
sbb
push
je
scas
outs
arpl
movs
pop
pop
test
mov
mov
popa
xor
jae
arpl
adc
mov
call
jg
xchg
dec
sbb
test
cdq
sbb
fnclex
mov
(bad)
(bad)
pop
inc
dec
fsub
cmp
into
push
cmp
sahf
mov
push
adc
cmps
loope
mov
pushf
xlat
push
mov
call
mov
(bad)
scas
mov
lods
arpl
sbb
cmp
iret
inc
mov
or
cld
je
(bad)
addr16
pop
call
outs
pop
test
imul
or
repz
pop
fst
lods
xor
mov
shl
mov
movs
gs
not
movs
adc
test
jmp
retf
fnsave
gs
fisub
clc
lds
stos
mov
test
mov
mov
clc
xchg
inc
je
xchg
fld
push
ja
and
push
iret
xchg
add
or
addr16
xchg
push
fs
stos
aas
shl
ss
in
xchg
enter
movs
fst
xor
jmp
out
or
push
mov
add
out
push
out
cwde
test
fst
pop
repz
mov
out
adc
loopne
in
ret
xor
pop
pusha
pop
stos
pop
adc
aaa
sbb
iret
fbstp
mov
pop
in
mov
or
js
aad
(bad)
cs
xchg
mov
test
xchg
ret
in
call
or
and
and
push
push
in
js
es
mov
pop
movs
sub
shr
es
inc
pop
stos
(bad)
out
push
das
xchg
imul
test
jns
lods
or
test
popa
lahf
jo
movs
sbb
pop
and
sbb
pushw
jno
push
cdq
repnz
aas
dec
jb
shr
std
out
jo
xchg
hlt
outs
mov
pop
mov
lahf
dec
enter
movsx
mov
sub
stos
cmp
sub
into
cmp
cmp
ret
jecxz
mov
mov
mov
mov
les
scas
or
outs
and
lods
das
inc
mov
add
jl
adc
js
and
lds
push
adc
mov
or
mov
loopne
retf
jo
lock
loop
jl
shl
push
in
mov
inc
add
ret
repz
int3
leave
inc
test
shl
jg
arpl
jbe
add
movs
sbb
or
movs
pop
pusha
and
std
rol
sub
inc
xchg
test
pop
mov
xor
jae
mov
sub
sub
adc
inc
mov
addr16
fwait
dec
pop
dec
adc
xchg
cdq
mov
in
dec
cmps
sbb
mov
push
fstp
mov
ja
fild
(bad)
mov
cmp
ins
(bad)
int3
jecxz
cmps
sbb
fmulp
out
jb
push
dec
loopne
ror
xor
push
cmp
movs
push
inc
or
out
add
ds
and
dec
loopne
repnz
xchg
retf
scas
inc
jnp
jne
or
mov
jl
xchg
xor
mov
fimul
movs
aas
cmp
pusha
xchg
push
push
fcom
hlt
jns
in
or
sub
sbb
or
pop
mov
hlt
ins
push
or
push
ins
mov
je
aaa
pop
rcl
add
push
jecxz
push
and
mov
mov
pop
retf
ret
jo
mov
call
daa
ds
mov
out
mov
push
sbb
pop
xor
lods
scas
push
cli
xor
push
mov
jmp
mov
jns
test
mov
lds
fnstenv
push
aas
sbb
shl
cmp
mov
xchg
(bad)
mov
cmc
cmp
shr
out
push
movs
cmp
das
and
aaa
mov
rol
out
fs
clc
mov
stos
inc
jo
inc
push
daa
jnp
add
cld
shl
(bad)
stc
mov
mov
xchg
dec
xlat
lea
clc
clc
jne
jp
jge
add
mov
ss
out
sti
mov
lock
mov
loopne
cmc
retf
push
lahf
(bad)
lods
push
xchg
inc
outs
into
or
cld
dec
cmc
adc
mov
(bad)
pop
xor
cmp
jp
xchg
or
push
mov
lock
push
loopne
inc
mov
cmps
call
jb
jmp
sbb
jecxz
arpl
push
out
popf
repnz
mov
or
fld
mov
int
jmp
retf
gs
in
pop
loop
push
xor
mov
mov
xor
mov
fwait
jl
pop
popf
ret
mov
mov
cmp
cmc
sbb
jnp
pop
adc
or
retf
pusha
aaa
shl
push
mov
outs
jl
adc
and
pop
or
mov
mov
ja
arpl
ins
adc
popf
pop
inc
ja
cli
adc
xchg
sbb
and
jne
xchg
ret
fwait
ins
lods
in
inc
ss
mov
push
dec
fbstp
xor
mov
sahf
push
mov
(bad)
out
pop
fmul
pop
fs
cmps
cmp
retf
push
and
or
ins
ss
push
pusha
aaa
push
mov
pop
jbe
into
popa
enter
jae
ror
repz
adc
jno
inc
cmps
mov
mov
fadd
cmp
stos
pop
xchg
popa
mov
lea
xlat
addr16
inc
(bad)
call
stos
cmp
dec
push
jle
(bad)
jb
mov
aam
push
(bad)
sahf
or
hlt
sub
fsubrp
dec
lgs
xchg
xchg
jmp
pop
movs
dec
mov
aas
imul
sub
add
dec
xchg
outs
scas
pop
jb
mov
(bad)
fdiv
xlat
sub
das
ss
iret
push
cdq
addr16
pop
add
mov
stos
inc
inc
aad
or
mov
jmp
call
int
(bad)
outs
add
sub
js
jl
ret
pop
enter
jb
call
sbb
fcmovnb
dec
push
mov
inc
repnz
push
jge
fisttp
xchg
clc
mov
sti
add
jle
aas
xchg
std
imul
rcl
inc
and
cmp
out
cmps
jl
push
jbe
outs
inc
fmul
into
and
call
sbb
repnz
and
es
lds
mov
call
popf
jae
jmp
(bad)
xor
sbb
jecxz
push
jns
aas
les
mov
outs
das
mov
xor
dec
hlt
dec
(bad)
pop
(bad)
sbb
and
js
push
inc
fs
sbb
mov
xchg
stos
rol
mov
enter
sbb
xlat
cli
stos
(bad)
dec
std
(bad)
movs
xor
sahf
cmp
jmp
push
and
rcl
aaa
sbb
mov
pop
loopne
jp
aam
xor
push
dec
sub
call
outs
imul
mov
test
fs
neg
std
push
fisubr
mov
cld
sub
addr16
jbe
and
sub
jl
jnp
bound
sub
cmp
dec
enter
cli
mov
cwde
repnz
jmp
mov
fldcw
jne
ficom
jae
cmps
lock
jo
outs
adc
push
xor
sub
and
mov
pop
dec
jmp
pushf
add
push
xor
add
jmp
cmp
cdq
xchg
jo
mov
jl
stos
jge
jecxz
mov
add
inc
rol
jmp
pop
nop
addr16
pop
pushf
clc
push
loop
idiv
test
xchg
das
mov
repnz
fcom
jb
push
pop
push
adc
pusha
pop
lods
xor
iret
sub
outs
pop
add
adc
jle
aam
cmc
call
sar
test
push
rcr
and
sbb
add
sub
aad
pop
and
jae
mov
jne
cli
sub
pop
mov
cmp
into
lds
xchg
push
fist
pop
lock
add
cld
sbb
aaa
lock
loopne
sar
cmp
xor
retf
icebp
call
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
inc
jbe
fidivr
mov
and
sub
fld
fs
inc
data16
mov
pop
jne
out
(bad)
sbb
mov
jo
out
aas
jl
in
stc
daa
cmp
js
add
int3
inc
mov
xor
rol
push
sbb
aad
xor
xchg
push
pop
(bad)
pop
push
mov
leave
js
std
fcomp
out
stos
xchg
mov
cld
mov
mov
pop
sbb
es
rcr
stos
fmul
dec
jge
dec
pop
inc
test
xor
aam
push
out
imul
jmp
ss
mov
ret
xor
movs
push
pop
nop
xor
push
(bad)
lods
sbb
inc
(bad)
lahf
push
push
test
add
mov
cmp
test
mov
inc
xlat
cmp
pop
bnd
or
sti
popa
mov
(bad)
js
cld
mov
cmovle
adc
lods
adc
cmc
sbb
mov
push
xor
xlat
cmp
test
dec
and
(bad)
adc
push
lahf
and
mov
outs
xchg
fild
repz
cmc
js
in
fldcw
sbb
in
out
inc
jmp
loope
shl
pusha
jns
dec
mov
pop
ret
ja
ins
mov
and
dec
stos
movs
retf
jmp
or
adc
add
push
out
(bad)
push
add
push
push
cmp
out
xor
xchg
xor
daa
sub
push
pop
(bad)
js
(bad)
fdivr
bound
sbb
les
jno
and
outs
(bad)
call
(bad)
in
test
inc
jae
imul
int
pushf
and
test
mov
mov
mov
lds
dec
jle
xlat
and
retf
adc
fucom
pop
jmp
fwait
cld
sbb
aam
nop
cmp
xor
xor
iret
xor
repz
add
mov
and
scas
sub
stos
ss
jmp
mov
movs
out
inc
pop
push
or
pop
pop
call
fld
out
adc
mov
lock
push
ja
aad
dec
xor
sbb
sub
daa
xlat
push
cmps
xor
jne
push
cmp
shr
inc
inc
div
je
mov
cmp
daa
add
lahf
mov
adc
in
mov
sub
ret
xchg
push
sub
cs
or
and
or
inc
ret
and
cmp
fs
lods
outs
inc
pop
xor
add
dec
jge
adc
stc
or
data16
pop
fs
(bad)
jecxz
aaa
push
mov
jo
cdq
jo
push
xchg
pop
adc
ds
push
out
sub
adc
xchg
les
jbe
sub
push
aas
movs
call
into
xchg
cld
pop
int3
jmp
std
loope
inc
rcl
mov
push
sub
aaa
adc
jbe
xor
mov
scas
mov
out
xor
cwde
cld
mov
mov
outs
xchg
pop
test
sub
mov
movs
jmp
push
mov
mov
(bad)
outs
jecxz
or
ins
and
jnp
test
ror
jno
mov
mov
jmp
out
shr
cmp
retf
pop
mov
xor
push
out
icebp
mov
lods
xlat
outs
out
lock
adc
dec
fmul
mov
cmc
mov
xchg
nop
icebp
movs
scas
push
jg
mov
iret
ja
and
loopne
in
repz
xchg
out
adc
xchg
fcom
sub
ds
in
std
jecxz
inc
out
loop
aam
jb
adc
gs
cli
jmp
cmovp
dec
sub
ja
sbb
jp
add
xchg
aam
pop
mov
push
inc
xor
pop
aam
out
mov
aam
add
push
lea
gs
ja
xor
sti
or
jb
pop
sub
add
stc
mov
sub
in
sub
outs
fwait
dec
mov
loope
inc
xchg
inc
fwait
and
stos
daa
pop
mov
loope
jbe
aas
dec
hlt
hlt
jp
push
leave
aas
or
dec
dec
popa
mov
scas
in
rcr
jne
into
scas
imul
ja
popf
pop
cmp
xor
sbb
pop
mov
je
stc
(bad)
jp
xor
push
adc
call
(bad)
icebp
scas
test
leave
aas
jb
add
pop
and
fcmovne
mov
int
and
add
icebp
test
cdq
scas
dec
test
movs
hlt
mov
or
xchg
push
imul
pop
mov
stc
pop
movs
loop
sbb
fsubr
mov
cmp
call
cmp
jns
pop
push
jbe
test
(bad)
popa
outs
push
(bad)
jp
sbb
cwde
icebp
push
sar
stos
or
ret
loop
push
pop
pop
es
cwde
push
adc
adc
sbb
mov
adc
addr16
xor
das
and
daa
ins
das
imul
cmp
aam
mov
mov
pop
jo
inc
mov
xchg
inc
shl
sbb
inc
xchg
adc
(bad)
push
jge
ret
jmp
and
push
mov
pop
test
lea
pushf
aam
add
test
fisub
xchg
mov
repz
(bad)
cmp
cmp
jge
sbb
js
mov
mov
xor
cli
repnz
xchg
mov
in
and
rcr
(bad)
jmp
mov
add
and
adc
mov
push
sbb
and
xchg
dec
movs
enter
rcl
cmps
fidivr
mov
and
mov
mov
gs
jbe
or
arpl
fimul
les
pop
inc
sub
inc
pop
jp
pop
inc
cs
mov
push
repnz
adc
lds
inc
movs
sub
mov
retf
xchg
mov
aad
mov
mov
sbb
adc
push
daa
jg
movs
jecxz
adc
fcom
ficomp
and
inc
mul
out
xchg
ucomiss
mov
mov
inc
movs
call
addr16
xchg
xchg
in
call
rcl
fld
(bad)
adc
int3
cmp
out
ins
pop
inc
xchg
jecxz
push
or
inc
jnp
test
pop
jg
mov
mov
dec
jo
mov
sar
nop
push
out
dec
add
hlt
xchg
fs
push
mov
retf
mov
push
in
into
mov
lahf
es
outs
loopne
mov
cmc
jp
inc
fisubr
sbb
jle
jo
ins
in
lods
pop
ins
cmps
dec
mov
lods
aad
aad
sbb
cmp
mov
enter
fst
fld
fidivr
cmps
push
sbb
ss
dec
and
adc
mov
push
jmp
pop
mov
sub
mov
add
add
data16
into
cmp
cmp
mov
retf
fcom
inc
das
in
adc
mov
in
in
cdq
call
fadd
pop
inc
out
sub
in
jmp
repz
imul
xchg
int3
pop
xchg
fadd
pop
daa
xchg
or
mov
xchg
jno
fdivr
int
fs
dec
js
xchg
xor
and
dec
pop
jmp
movs
sbb
mov
cmp
push
xchg
jne
into
xor
mov
in
mov
push
pusha
leave
fst
daa
int
rcr
sub
in
inc
dec
dec
dec
xor
and
ds
jno
call
inc
inc
call
jle
xor
aas
push
inc
inc
test
test
cli
in
nop
dec
je
icebp
rcl
ficom
arpl
scas
xor
sbb
cmp
add
cwde
(bad)
mov
push
inc
bound
mov
ins
jo
loopne
es
inc
add
mov
jmp
mov
cdq
ds
and
fist
cmp
out
or
or
jmp
sbb
sub
xchg
icebp
call
push
adc
dec
fbstp
sub
pop
add
mov
sbb
aaa
and
push
sub
fist
stc
inc
jmp
dec
lds
ja
nop
mov
jmp
inc
xlat
pop
and
jo
jns
retf
scas
(bad)
jnp
iret
cs
pand
das
push
(bad)
aad
jbe
jmp
imul
jnp
cmps
and
into
push
and
cdq
push
cmp
jge
cmp
lahf
dec
push
dec
dec
(bad)
and
inc
mov
dec
cwde
fdivr
xlat
add
(bad)
jmp
std
into
jns
xchg
(bad)
sbb
loopne
int
xchg
das
nop
pop
iret
and
cwde
push
push
mov
repnz
test
push
stos
(bad)
and
push
bound
xchg
aam
ucomiss
push
jae
aaa
push
(bad)
rol
(bad)
not
(bad)
sub
and
es
mov
icebp
dec
in
fcmovne
xor
and
std
push
adc
add
xchg
mov
aam
(bad)
repnz
fistp
jnp
jb
lods
adc
in
and
sub
nop
jae
shr
adc
test
push
ss
pop
nop
xor
and
jmp
mov
jg
in
xchg
aas
(bad)
push
sub
mov
or
pushf
mov
ins
mov
jns
in
add
mov
xor
sbb
xchg
sub
cdq
jle
xchg
clc
scas
repnz
xor
push
(bad)
in
mov
or
in
cld
jmp
mov
cmp
lds
jle
cwde
mov
inc
lock
hlt
frstor
add
mov
xor
mov
pop
or
in
hlt
mov
fstp
lds
or
sti
std
call
out
jae
cwde
pop
sbb
inc
adc
lea
pop
das
mov
xchg
cmp
xchg
xchg
mov
jg
mov
(bad)
imul
imul
pop
nop
mov
mov
sbb
jle
scas
jmp
ror
shr
xor
loope
or
dec
loop
cdq
jg
pushf
repnz
mov
das
xchg
adc
mov
icebp
jge
dec
dec
jle
sub
sbb
loop
jle
(bad)
push
mov
scas
xor
in
mov
mov
sbb
push
daa
xor
cld
stc
xchg
jno
repz
push
mov
aaa
add
test
jnp
sbb
pop
lock
jbe
aad
lahf
aad
jmp
outs
scas
(bad)
dec
int3
xchg
adc
mov
inc
cmp
mov
pop
stc
or
(bad)
mov
(bad)
into
adc
xchg
into
cmp
push
rep
enter
pop
movs
jg
test
xchg
cmc
imul
aas
push
out
into
mov
mov
outs
cmps
push
adc
nop
push
in
pop
fnsave
mov
dec
test
mov
and
or
adc
and
test
mov
and
jg
xchg
loop
add
sbb
add
nop
loope
enter
jo
or
js
pop
and
sub
mov
xchg
scas
jg
sbb
(bad)
sbb
xor
push
imul
jb
ficom
inc
addr16
mov
loope
and
xor
xlat
aas
cmp
cld
adc
jg
cld
mov
cs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
into
xchg
ja
mov
xor
into
es
fcmovnb
xchg
into
test
xor
(bad)
aam
fnstsw
loop
ja
xchg
lock
push
pop
repnz
cmps
xor
ret
inc
inc
repnz
jl
sbb
nop
jns
cmps
ret
mov
loop
pop
(bad)
mov
dec
bound
ins
lods
inc
push
inc
lock
daa
jno
and
movs
sub
ins
sub
or
(bad)
push
ror
mov
jge
sub
(bad)
fstp
call
jae
jmp
jg
push
push
jmp
loopne
add
or
fld
sub
sbb
mov
rcl
movs
xchg
pop
hlt
test
sub
cdq
xor
xor
das
mov
in
push
fst
mov
aad
std
fs
pop
fdiv
xchg
fiadd
fdivr
mov
je
(bad)
mov
mov
test
dec
push
repz
push
add
leave
sar
(bad)
pop
mov
xchg
cmp
jmp
mov
jg
shl
fs
sar
cmp
ja
xor
mov
(bad)
push
jns
adc
out
xchg
or
mov
jmp
or
scas
ss
aam
out
sub
iret
inc
and
jae
pop
cmp
ins
aas
lods
ret
lds
pop
adc
out
and
cwde
sub
ss
mov
popa
xor
mov
cld
call
push
xor
outs
call
rcl
fnstcw
call
shl
cdq
adc
stos
stos
cmp
aas
sbb
cmp
mov
lds
mov
dec
mov
(bad)
mov
loop
int
and
mov
mov
movs
mov
add
leave
or
push
icebp
repnz
pop
inc
retf
scas
dec
pop
popa
dec
movs
push
sub
mov
iret
add
sti
jnp
imul
cli
aad
not
push
in
mov
(bad)
sbb
cmp
div
pop
dec
ror
cmp
call
xor
mov
pop
pop
aaa
ds
int
(bad)
loopne
mov
repz
dec
xor
test
shr
mov
lea
push
(bad)
in
ds
out
cmc
push
sub
fnstsw
fcomp
in
les
fbld
shr
jo
and
cmp
fmul
int
bound
pop
sbb
gs
dec
mov
dec
sar
mov
cmp
enter
hlt
lea
pop
jno
pusha
movs
mov
ins
sti
jle
enter
in
adc
mov
pop
in
ficom
mov
mov
mov
or
cmp
cmps
inc
out
pop
cs
xchg
ins
fld
movs
mov
push
push
(bad)
push
jns
xchg
xor
push
dec
out
push
push
or
mov
fistp
push
ror
(bad)
add
jbe
jnp
aaa
out
das
xchg
or
xchg
dec
cmp
or
push
sub
fiadd
xor
push
xchg
push
stos
in
jp
push
xor
fcmovnu
or
or
jg
cli
mov
mov
cdq
dec
mov
xchg
and
rcr
cld
ins
jno
cmc
jns
pop
loop
inc
sbb
xor
add
push
test
sub
sar
xchg
mov
xchg
arpl
adc
cmp
dec
(bad)
ror
repnz
sbb
aas
jne
scas
push
mov
ja
rcr
and
mov
cdq
popa
adc
ficomp
cmp
pusha
push
ss
inc
sar
cmp
(bad)
test
mov
int
xor
lods
jl
rcr
fneni(8087
imul
mov
fsubr
repnz
or
movs
test
xchg
mov
out
fs
stos
in
or
outs
cmp
cmp
cli
mov
iret
loopne
lods
or
stc
mov
(bad)
pop
cdq
mov
add
stc
popa
stos
sar
jecxz
jg
or
pop
(bad)
popa
add
and
arpl
fadd
or
or
out
clc
sbb
inc
in
add
fcmovnu
dec
and
out
or
fucomi
dec
push
fs
out
push
and
stos
mov
inc
gs
arpl
sbb
mov
adc
out
mov
push
push
sub
mov
sbb
lods
bnd
fisttp
jp
mov
loope
mov
icebp
or
or
dec
ss
repz
iret
aad
or
jmp
adc
adc
in
add
int3
not
jb
cmp
xchg
das
or
shl
pop
add
pop
inc
add
add
mov
pop
fmul
(bad)
and
sub
push
jecxz
add
dec
call
jbe
repz
lahf
fdivr
pop
sbb
fsubr
dec
lds
gs
dec
sub
popa
(bad)
pushf
int3
sar
stc
pop
sub
push
jge
sub
pop
repz
out
mov
std
and
ror
and
adc
fsub
rcl
mov
jg
mov
or
jp
scas
nop
or
sbb
popa
mov
jmp
or
aad
jnp
push
idiv
in
dec
ret
dec
mov
lds
loopne
scas
pop
ret
pop
mov
addr16
data16
xchg
shr
bound
shl
ror
cld
aam
ret
mov
push
aam
stos
mov
mulps
jae
outs
jbe
iret
movs
sub
loopne
es
movs
push
mov
pop
aas
cld
inc
cs
lock
das
stos
outs
jecxz
(bad)
(bad)
jge
imul
leave
and
js
mov
xchg
sahf
jmp
es
in
ret
mov
push
jmp
sbb
retf
sahf
or
or
xchg
mov
or
push
and
ins
mov
jo
cmps
das
outs
add
daa
in
jnp
lods
cmp
cli
out
xchg
xor
jg
stos
push
push
arpl
dec
push
repnz
sbb
test
adc
clc
sub
mov
mov
call
inc
dec
jg
pop
inc
sahf
fld
ror
fistp
and
xchg
cs
inc
mov
jmp
ins
cwde
je
fwait
xchg
push
jmp
mov
push
inc
jne
and
push
cmp
mov
mov
add
xchg
mov
ficom
pop
loopne
sti
rol
mov
push
outs
icebp
adc
sbb
mov
mov
hlt
fsub
sub
sti
out
pop
xchg
clc
leave
mov
ret
rol
sbb
mov
je
jne
pop
ret
fisttp
add
dec
fild
rcr
jmp
mov
cmps
xchg
mov
jmp
add
les
dec
and
bound
cmps
and
mov
cmp
jmp
add
jmp
imul
dec
retf
enter
scas
aaa
pop
xchg
xchg
shl
loopne
xchg
(bad)
mov
lea
sub
cmp
xchg
sahf
push
mov
mov
xor
mov
mov
sub
dec
mov
ss
sbb
repnz
xor
add
xchg
add
sub
(bad)
cmp
inc
popa
mov
dec
pushf
daa
sahf
fdivr
bound
sbb
adc
push
sbb
xchg
aaa
out
ja
mov
lds
mov
sub
(bad)
cmp
lds
sti
xor
mov
test
add
sub
(bad)
scas
mov
mov
movs
jp
int
mov
movs
sub
add
xchg
fistp
pop
sbb
jmp
and
sbb
inc
and
xor
inc
cs
jl
out
test
stos
imul
fwait
sti
stos
inc
or
fcom
(bad)
out
into
pop
push
jmp
mov
aad
cwde
xchg
(bad)
jp
aam
inc
imul
mov
je
(bad)
push
hlt
sbb
mov
jp
call
popa
int
push
cmp
xor
jbe
fxch
jmp
push
fwait
inc
cs
jo
rcr
mov
and
fld
cmp
neg
iret
bound
mov
gs
stc
out
inc
int3
jo
adc
dec
jge
xlat
cmps
int
xor
cmp
xchg
pop
inc
cmp
es
bound
ret
inc
(bad)
cmps
cli
(bad)
push
js
lds
cmp
arpl
pop
inc
out
daa
mov
leave
sti
in
and
lods
and
inc
or
dec
(bad)
int
in
arpl
fadd
mul
adc
mov
and
jns
pushw
pop
jp
mov
stc
push
stc
test
sbb
push
xor
dec
jmp
iret
adc
std
retf
dec
ror
adc
inc
fidivr
enter
push
or
jbe
fdiv
ins
loope
iret
leave
aaa
inc
ja
pop
add
xchg
scas
dec
jnp
pop
xor
dec
in
in
test
jg
inc
xlat
rcr
cmp
inc
out
push
dec
and
jb
dec
mov
add
lods
(bad)
jnp
and
test
or
lods
jp
test
push
cdq
jns
or
jl
(bad)
icebp
adc
add
call
fiadd
push
adc
arpl
out
jle
dec
outs
das
movs
and
rcl
scas
mov
jb
or
(bad)
(bad)
sbb
test
out
mov
sub
std
inc
movs
fstp
push
jecxz
stos
clc
jp
cmp
rcl
iret
push
push
mov
not
jno
call
push
dec
aam
mov
aam
clc
gs
add
ja
jnp
mov
add
xchg
pop
aas
jae
clc
mov
push
pop
pop
inc
aam
ins
push
fwait
sub
into
pop
mov
cmps
dec
cdq
jecxz
shl
sbb
jle
and
into
test
adc
loop
fadd
movs
xchg
xor
add
out
or
(bad)
popf
ds
out
mov
retf
mov
inc
int3
sub
cdq
mov
cmps
jl
adc
push
adc
xchg
pop
pop
push
mov
inc
addr16
adc
scas
aam
out
and
pop
pop
adc
xchg
sub
js
inc
clc
fbld
fisub
xor
sbb
adc
jmp
ret
mov
dec
push
aam
push
inc
retf
scas
(bad)
xchg
pop
daa
push
or
mov
loope
ins
in
jmp
push
out
mov
jno
js
add
jmp
pop
sub
add
test
outs
pop
xchg
xchg
movs
and
imul
fucom
dec
push
fst
cmps
out
fstp
cs
les
xchg
inc
cmps
xchg
sub
repnz
dec
cwde
xor
inc
scas
sbb
xchg
gs
mov
push
arpl
inc
mov
test
std
inc
cdq
fbstp
push
inc
cmp
push
mov
lahf
xchg
jg
sahf
ins
test
push
sbb
lahf
jns
inc
mov
lahf
imul
push
loop
cmp
leave
ret
dec
xor
int
sbb
dec
icebp
stos
mov
and
and
push
(bad)
stc
aaa
lock
loopne
sar
sar
push
leave
and
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
xchg
rcr
add
mov
aaa
mov
xchg
push
sub
fnsave
dec
push
inc
jmp
movs
xchg
call
ds
lock
test
mov
clc
fcom
fwait
pop
clc
inc
lahf
stc
sbb
sub
fisttp
repz
sbb
lods
inc
and
call
jg
out
arpl
dec
pop
popa
pop
cmp
push
push
xchg
scas
pop
adc
pop
or
out
mov
int3
sub
push
and
mov
add
lods
xchg
dec
rol
not
xchg
xor
pop
sub
popf
xor
mov
outs
xlat
in
mov
mov
test
xchg
jmp
outs
sahf
dec
push
in
out
shr
rcl
out
cdq
ret
outs
in
jg
sahf
mov
push
outs
pop
inc
inc
mov
dec
push
push
(bad)
mov
push
and
mov
xor
repz
and
xchg
add
dec
cmp
enter
pop
cmpxchg
rcl
data16
push
and
repnz
xor
push
push
sub
retf
pop
stos
repnz
adc
and
xor
out
xor
jle
fdivp
test
retf
push
les
push
arpl
push
(bad)
sti
push
mov
rol
xor
xchg
lahf
sbb
cmp
and
cmp
xchg
jmp
imul
(bad)
lahf
xor
jo
push
push
or
scas
and
adc
adc
popa
and
dec
and
mov
xchg
ds
movs
mov
(bad)
pop
mov
imul
pop
cs
mov
out
push
icebp
mov
dec
mov
pop
dec
rcl
test
adc
xchg
test
jge
and
jo
jns
push
ret
add
test
pop
jl
(bad)
add
jbe
push
call
jae
ins
in
adc
aaa
loop
jae
adc
mov
inc
xchg
mov
popa
jnp
mov
dec
lahf
jle
jno
arpl
mov
popf
loope
dec
sti
std
in
or
stos
mov
lock
xchg
inc
push
jp
fwait
repnz
xchg
mov
xchg
dec
push
ret
das
out
test
sbb
test
add
push
pushf
ret
repnz
add
dec
and
aas
inc
dec
push
iret
sbb
mov
and
fld
dec
daa
fldln2
push
and
or
movs
mov
loop
push
in
push
dec
sahf
mov
movs
pusha
cmp
neg
jbe
cmp
in
push
cmps
fidiv
inc
pop
pop
and
jns
pop
adc
adc
pop
cs
adc
mov
in
loope
fcmovne
cmp
push
fiadd
or
es
ds
xchg
mov
fstp
outs
shl
mov
clc
jne
inc
adc
loopne
push
test
dec
(bad)
mov
out
push
sti
lods
aas
jo
outs
into
jmp
cmp
into
fimul
lods
fnstcw
movs
inc
loope
xchg
out
xchg
mov
frstor
push
or
xor
sbb
pop
sub
cmp
lods
ret
add
in
sbb
mov
mov
inc
mov
mov
inc
pop
inc
cdq
inc
ret
pop
pop
icebp
rcr
pop
repnz
cs
lods
mov
(bad)
push
cdq
jb
inc
cld
ins
pop
xchg
mov
pusha
xlat
mov
jns
mov
xchg
xor
pop
sub
lea
jp
push
inc
add
es
jnp
inc
popf
xchg
xor
cmc
xor
push
inc
mov
test
jge
push
dec
sti
jl
imul
dec
loop
cmp
and
(bad)
adc
xor
jl
fild
push
inc
mov
xor
das
cmp
ror
adc
hlt
sub
pop
test
adc
fucomp
cmp
lahf
inc
inc
mov
cmp
test
xchg
test
data16
js
sahf
cmp
jle
lds
les
lods
inc
dec
xchg
inc
lahf
punpcklwd
and
in
jle
jae
les
adc
(bad)
test
mov
mov
mov
mov
add
int3
fcomi
adc
bound
out
mov
push
adc
jp
sub
fsub
rol
in
lock
cmp
or
inc
pop
sub
pop
stos
enter
cmp
xor
pop
mov
xor
mov
test
xchg
add
xchg
cmp
jno
out
nop
xor
popf
push
cmp
cs
call
xor
retf
daa
pusha
or
pop
adc
(bad)
dec
mov
adc
mov
jo
push
imul
lds
add
pop
out
and
mov
cli
nop
xor
outs
mov
std
es
enter
icebp
adc
cmps
lock
dec
mov
inc
pop
jecxz
and
and
sbb
jmp
mov
ja
sahf
pop
clc
bound
dec
mul
pusha
sbb
imul
mov
jo
push
daa
dec
(bad)
popa
lea
aas
xchg
pop
ret
loopne
(bad)
mov
lods
aam
dec
and
sub
sub
push
les
adc
hlt
outs
shl
add
xor
mov
fisubr
xor
ds
pop
nop
or
fild
jle
pop
mov
out
sbb
aas
sbb
inc
sbb
pop
pop
stc
pop
rcr
les
add
arpl
inc
push
dec
pusha
cmp
out
imul
and
into
xchg
mov
aaa
adc
mov
ja
test
inc
push
xchg
retf
sti
sbb
mov
jp
popf
stos
js
mov
out
fwait
cld
xchg
scas
inc
mov
mov
xchg
mov
add
arpl
in
clc
or
adc
push
call
(bad)
gs
or
mov
mov
xchg
ins
call
push
cmp
call
scas
inc
movs
mov
mov
test
sbb
cmp
lods
popa
ins
and
lods
(bad)
loopne
jae
sub
data16
add
or
sbb
adc
(bad)
cmp
sub
and
lods
outs
leave
ins
sbb
jns
or
pop
dec
fwait
idiv
dec
push
stc
xor
rcr
mov
fisubr
jl
or
leave
loopne
xor
lahf
std
fimul
inc
mov
dec
xor
stos
scas
mov
gs
pop
sti
adc
xor
inc
scas
(bad)
cdq
fcmovnu
add
mov
out
sbb
sub
jg
xor
jecxz
cld
les
test
cmp
jb
or
inc
pop
fmul
jnp
adc
dec
enter
retf
je
cmp
lahf
mov
or
dec
mov
adc
cmp
xor
out
or
(bad)
jae
shr
mov
ror
out
xor
inc
ror
dec
jle
dec
ds
out
and
fnstsw
iret
push
dec
xor
push
je
inc
dec
int3
ror
jecxz
jmp
pop
mov
xor
pop
sbb
sub
jbe
or
pop
dec
xchg
push
mov
fisttp
xlat
pop
js
test
jbe
fisub
lods
dec
loop
mov
add
cmps
test
dec
jae
sbb
out
ds
dec
inc
repnz
shl
ja
adc
jmp
scas
xchg
mov
mov
pop
push
test
sub
sbb
faddp
(bad)
push
jmp
sub
ds
cli
mov
sub
xor
in
aad
cmc
test
mov
dec
in
or
rol
addr16
dec
cmc
push
(bad)
sbb
and
mov
mov
lds
and
pop
or
into
inc
leave
stos
mov
ficomp
mov
(bad)
stos
imul
popf
and
xchg
cdq
daa
inc
call
btr
cmp
xor
jmp
retf
aaa
mov
xor
xor
xchg
retf
ret
pop
cwde
pop
fbstp
jo
repnz
cmp
xchg
mov
ffreep
jmp
ficom
dec
ja
mov
push
ret
add
ja
outs
movs
fcmovnbe
inc
sbb
adc
jmp
ret
aas
test
adc
(bad)
retf
xchg
addr16
loop
aaa
xor
pop
push
dec
push
jmp
add
arpl
ja
cmp
add
mov
jge
sub
add
sub
stos
mov
sbb
loopne
pop
daa
loop
push
es
(bad)
xor
loope
lock
das
mov
jne
lea
jbe
push
cmc
xor
cmp
mov
in
jl
(bad)
fldenv
jp
jno
adc
data16
in
xor
push
gs
movs
push
xchg
mov
lods
ins
fmul
leave
xchg
icebp
fbstp
cli
mov
sub
arpl
push
enter
sub
xor
imul
retf
cmc
and
out
dec
mov
and
cmp
sbb
cmp
lods
sti
xor
jmp
es
sbb
js
sbb
mov
es
xor
lock
nop
mov
pop
aam
in
test
and
shl
jnp
add
push
pop
mov
bound
rcl
push
jecxz
jmp
mov
add
xchg
sub
shr
pop
jge
mov
jno
ins
mov
adc
fild
inc
ficomp
sub
call
out
daa
ficom
das
ret
jb
mov
mov
adc
adc
pop
aas
inc
or
dec
pop
shl
pop
sub
fbld
push
(bad)
pop
fistp
mov
in
sub
adc
mov
cmp
ret
fistp
xchg
retf
pop
mov
in
ins
movs
xor
repnz
mov
inc
fstp
lea
repz
sbb
mov
idiv
xor
aam
cld
xchg
test
(bad)
push
sub
or
fs
pop
add
out
mov
int
sbb
out
mov
xchg
popa
out
fld
fs
sahf
cmp
xor
mov
cwde
daa
(bad)
fist
js
mov
mov
xchg
scas
adc
dec
xchg
xchg
cdq
mov
ins
and
mov
shl
or
inc
adc
pop
test
call
outs
mov
mov
xchg
sub
jae
add
cmp
xor
push
mov
test
mov
icebp
in
sub
mov
lds
ins
in
stos
pop
cmp
mov
mov
in
mov
leave
xor
iretw
pop
arpl
dec
xchg
xchg
add
mov
pushf
add
test
movs
sub
popa
(bad)
fild
ss
pop
jle
push
pop
mov
mov
fiadd
cmp
(bad)
adc
sbb
and
clc
lds
inc
lea
lds
clc
and
pop
jb
out
loope
adc
ret
sbb
in
cmp
xchg
ins
xchg
lock
fadd
dec
fidiv
inc
movs
out
sahf
cmp
or
pop
dec
mov
add
push
dec
lock
loopne
sbb
pop
cmc
mov
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
(bad)
xchg
fdiv
bound
xor
cmp
ja
mov
jmp
cmps
mov
mov
clc
(bad)
mov
adc
push
push
pop
cmp
add
fmul
rol
pop
mov
sbb
lods
inc
mov
mov
ja
pop
jp
adc
gs
cwde
jo
scas
neg
pop
js
mov
add
xchg
mov
xor
pusha
adc
add
pop
scas
push
movs
addr16
int
outs
stc
loop
test
retf
inc
push
icebp
mov
mov
loopne
jmp
mov
push
mov
icebp
xchg
fwait
aaa
pop
xchg
dec
dec
jo
fisttp
cmp
mov
cmp
jnp
push
movs
fcmovnb
imul
inc
mov
inc
dec
jns
inc
into
inc
in
test
mov
push
push
xchg
mov
repz
inc
fsub
mov
xchg
mov
push
(bad)
daa
inc
test
lods
das
or
adc
add
(bad)
or
and
jno
or
repnz
cdq
imul
cmps
pop
jmp
movs
fld
loope
mov
lahf
js
mov
jg
mov
mov
pop
dec
retf
imul
cmc
and
and
mov
std
jmp
and
push
(bad)
jae
mov
dec
and
mov
fsubr
aaa
mov
test
fmul
mov
adc
cmp
imul
ja
imul
cmc
lods
les
cmc
cmp
rol
mov
jle
xor
push
push
push
jg
fdivr
or
sbb
xor
xlat
cmp
dec
adc
jge
dec
pop
mov
xor
fst
clc
and
xchg
xor
call
pop
mov
push
loopne
xor
popf
imul
(bad)
fs
xchg
cmp
xchg
sahf
cs
aam
or
jmp
sbb
in
(bad)
push
fld
out
push
adc
pop
cld
dec
jno
and
movs
and
sahf
daa
and
cmp
cmp
inc
dec
inc
mov
clc
mov
xchg
lahf
cdq
ins
adc
mov
and
mov
lock
sbb
push
out
mov
repz
gs
jecxz
and
clc
jns
ins
inc
cmp
gs
dec
inc
xor
or
mov
inc
in
cwde
mov
jp
ins
or
test
in
cmp
adc
xor
mov
pop
xor
mov
push
mov
lods
mov
pusha
int3
push
mov
xchg
xchg
xchg
jns
push
push
jne
jnp
lock
cmps
push
mov
lds
retf
mov
inc
push
out
sbb
in
push
ins
shl
sub
xchg
sub
sub
push
clc
push
popf
mov
cmp
aaa
jbe
mov
movs
lahf
xchg
popf
es
repz
mov
mov
(bad)
repz
mov
mov
test
inc
pop
adc
sub
sbb
fisubr
movs
adc
movaps
call
dec
jmp
imul
mov
scas
and
cmp
inc
lock
repnz
pop
inc
cli
loopne
cmp
outs
xchg
push
adc
shl
add
push
mov
xor
push
push
das
popa
sahf
xchg
aas
push
(bad)
mov
mov
bound
sbb
xor
cdq
cmp
mov
mov
test
pop
inc
rcr
push
inc
push
mov
stos
test
push
mov
test
cmc
adc
adc
inc
dec
xor
mov
mov
icebp
adc
inc
xor
movs
inc
mov
dec
jge
aam
xor
aas
mov
ds
jge
dec
mov
or
fimul
xchg
dec
adc
push
mov
and
xchg
loope
xchg
xchg
add
push
pop
dec
(bad)
xchg
adc
cwde
in
add
sub
mov
add
push
loope
xor
cli
sub
mov
fs
mov
xor
sub
int3
cdq
outs
or
push
(bad)
jnp
mov
pop
pop
mov
mov
ins
sub
loope
or
aas
mov
imul
cmps
push
dec
loopne
mov
(bad)
pop
pop
retf
out
stc
fcom
jl
sbb
inc
cmp
xchg
lea
mov
in
pop
sub
jge
sbb
iret
and
movs
cmp
sub
gs
adc
out
jae
cmp
pop
test
in
clc
shl
or
lahf
xchg
cmps
jb
(bad)
pop
imul
fisub
push
and
add
aaa
xchg
retf
leave
cmp
mov
xor
dec
push
jb
sti
std
dec
push
imul
loope
nop
dec
lahf
mov
push
mov
push
push
xlat
sbb
loopne
hlt
mov
push
and
mov
out
pusha
pop
cmps
mov
rcl
jmp
fbld
add
bound
pop
jo
inc
cli
jmp
push
mov
mov
cmp
dec
push
lods
inc
sbb
adc
ja
mov
lahf
adc
mov
sbb
xor
pop
test
mov
pop
in
daa
stos
push
or
ficomp
push
jl
sbb
jp
ins
cmc
mov
in
test
jb
jl
test
enter
fnstenv
push
push
add
fwait
pop
mov
and
dec
ror
fadd
push
jl
mov
push
adc
dec
imul
add
xchg
fadd
dec
lds
jecxz
loop
sub
mov
imul
jecxz
pushf
nop
adc
sub
mov
js
add
and
dec
mov
pop
icebp
xor
retf
aam
dec
adc
lds
mov
addr16
pop
iret
push
dec
and
out
in
js
push
nop
popa
(bad)
shl
and
outs
pop
add
test
mov
adc
sahf
pop
outs
add
bound
xchg
ins
or
cmp
imul
sub
cmc
xor
jmp
(bad)
adc
hlt
sub
fstp
cdq
mov
ins
xchg
into
gs
out
mov
out
out
jl
mov
and
cmps
dec
clc
add
sub
mov
ficom
aas
cmp
and
sbb
in
or
(bad)
jge
push
sar
rcl
imul
leave
add
and
adc
or
(bad)
loopne
or
sub
in
xchg
inc
pop
fsub
pop
mov
mov
mov
daa
bound
cmp
jo
aam
xor
ret
pop
jae
call
push
(bad)
push
cld
mov
pusha
or
inc
gs
jp
mov
xchg
mov
or
call
stos
pop
or
dec
dec
cmp
in
pushf
cwde
xchg
sub
cwde
sbb
inc
repz
mov
ffreep
jmp
enter
mov
mov
arpl
aas
nop
call
(bad)
fisttp
adc
inc
cld
int3
adc
jns
sub
mov
add
jno
frstor
outs
xor
sbb
mov
sub
ds
push
jo
loope
sbb
std
adc
cmp
mov
sub
mov
aam
inc
neg
jp
repnz
ds
repz
test
int3
out
gs
movs
loopne
lea
sbb
mov
cmp
outs
fdivr
pop
mov
lds
hlt
dec
add
not
pop
sbb
push
dec
add
mov
test
and
jns
(bad)
loopne
pop
adc
out
outs
add
xchg
xchg
repz
int3
jne
push
aaa
mov
and
pop
dec
fidiv
mov
mov
xchg
imul
test
(bad)
in
xchg
out
cmps
sub
mov
adc
inc
ja
cwde
sbb
xchg
lahf
(bad)
mov
cmps
or
xor
sbb
movs
cs
outs
mov
mov
cmp
and
push
mov
and
ds
mov
push
movs
int
push
outs
mov
mov
jmp
stos
(bad)
fcmovnbe
fcomp
add
and
mov
mov
push
in
add
arpl
in
mov
sbb
cmp
imul
stos
add
xor
stos
shl
daa
cmp
fwait
retf
pushw
jae
ins
cmp
push
mov
xchg
sbb
sbb
out
and
jae
push
dec
fidivr
into
in
cdq
jmp
sbb
bound
sub
das
aam
xor
pop
pop
cmp
mov
(bad)
imul
lahf
es
dec
mov
ins
loopne
mov
mov
inc
add
pop
pop
jmp
cmovno
dec
fs
jne
mov
and
jbe
inc
mov
loop
in
movs
addr16
jae
mov
mov
xchg
test
shr
cmp
push
adc
cmps
(bad)
xor
dec
cmp
inc
dec
es
jb
sub
stc
cld
retf
push
mov
cmps
or
jp
xor
aam
movs
or
shr
mov
mov
aas
xor
sub
test
xor
fcom
in
dec
call
xor
stos
iret
aas
out
test
jne
iret
hlt
jne
(bad)
cdq
test
xor
adc
xchg
add
jecxz
jno
ss
lods
popa
xor
repz
cli
jae
cmp
sub
ret
test
mov
and
call
sbb
adc
adc
call
cs
test
jmp
fst
inc
ins
ins
cld
sbb
adc
dec
jge
pop
cs
(bad)
pop
cmp
aam
fwait
pusha
daa
push
sti
aad
and
inc
jg
xor
out
pop
push
push
sbb
push
push
aad
retf
inc
icebp
sti
ret
push
dec
jnp
fst
daa
test
scas
push
mov
push
imul
(bad)
mov
jbe
sti
in
fcmovnbe
add
inc
dec
aad
inc
out
dec
jae
adc
xor
push
ins
cmps
inc
fmul
call
mov
inc
xchg
cmc
repz
lock
push
pop
std
push
in
in
popa
mov
push
enter
inc
add
inc
inc
fistp
daa
add
mov
mov
jge
dec
push
mov
pop
ins
xor
(bad)
cli
arpl
cmp
sbb
out
fmul
or
retf
int
jns
mov
pop
push
sub
les
test
lock
mov
mov
fcom
xchg
aam
cmps
pushf
cmove
or
cmp
aaa
in
(bad)
popa
clc
popa
pop
dec
dec
lea
mul
test
nop
out
gs
sti
enter
jbe
std
mov
inc
in
jecxz
mov
jmp
xor
out
cmp
out
cmps
scas
push
jmp
stos
add
fwait
in
add
push
or
jmp
sub
lock
pop
push
adc
rol
mov
mov
sbb
and
(bad)
repz
(bad)
sbb
cmp
ja
out
rcr
mov
inc
dec
and
loope
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
into
cmp
jnp
mov
pop
mov
cmp
jnp
mov
sbb
mov
inc
or
pop
movs
and
adc
mov
xlat
lahf
lock
add
or
mov
pop
mov
rol
and
push
jno
daa
adc
mov
stc
jnp
repnz
sbb
xchg
int
or
lods
or
mov
fs
xchg
frstor
lods
outs
sti
push
adc
out
icebp
test
lea
cmp
ret
mov
dec
out
lock
loope
clc
inc
adc
nop
loop
in
outs
hlt
cld
sub
sbb
loopne
dec
std
mov
jns
mov
mov
enter
repz
adc
push
not
mov
lods
jnp
cli
inc
sub
push
aaa
punpckhdq
aam
pop
stos
jmp
mov
sbb
sub
loope
adc
jns
dec
leave
pop
jl
mov
dec
cmp
pop
or
ret
adc
mov
sbb
inc
dec
push
sub
adc
test
dec
bound
ret
inc
sub
cdq
jle
scas
push
xlat
sahf
push
adc
(bad)
xlat
dec
hlt
jecxz
fadd
mov
pop
rol
movs
and
or
jle
push
push
lods
push
int
pop
dec
mov
js
retf
in
push
jecxz
dec
cmp
repnz
loopne
(bad)
out
dec
jb
call
add
dec
dec
mov
and
daa
adc
mov
xchg
mov
rol
mov
mov
sbb
leave
jae
and
pop
dec
daa
(bad)
mov
cmp
dec
xor
aaa
sub
idiv
sub
imul
pop
push
ror
inc
sbb
mov
rcr
xor
inc
sar
xor
xchg
pop
mov
cmp
jnp
sub
sbb
js
and
mov
xchg
sbb
pop
adc
mov
aad
sahf
lea
adc
push
test
ins
mov
ror
cmp
outs
dec
iret
push
out
mov
inc
mov
adc
xchg
lods
mov
pop
fdivr
aam
repz
inc
lahf
gs
popa
xor
pop
leave
cli
gs
addr16
mov
repnz
data16
jmp
scas
jbe
mov
outs
or
stos
mov
out
mov
(bad)
sub
mov
rol
pop
inc
or
xchg
hlt
mov
xor
or
(bad)
jmp
inc
and
push
ss
aad
push
pop
jle
fild
imul
adc
ins
pop
jae
sbb
das
mov
sub
mov
mov
mov
and
gs
movs
sar
mov
or
lock
jae
cs
enter
movs
push
push
jbe
push
stc
pandn
lods
pop
push
imul
xchg
repz
dec
xlat
push
test
inc
dec
popa
pop
adc
jle
and
mov
pushf
push
push
out
jl
jnp
dec
test
sbb
adc
js
shr
inc
jmp
jne
xchg
mov
mov
sbb
jp
das
dec
lock
sbb
test
jle
jg
mov
loopne
repz
popa
or
cmc
dec
push
ffree
cmp
popf
push
push
mov
mov
sbb
scas
(bad)
cli
das
mov
iret
int3
push
xchg
add
dec
mov
cmc
mov
inc
mov
cmp
cld
jbe
les
jns
mov
xchg
fisub
jo
pop
dec
in
mov
ret
pushf
sbb
std
into
mov
mov
xchg
or
sbb
gs
sub
cmp
adc
xchg
cmp
and
mov
add
test
mov
mov
mov
ja
retf
jne
jmp
cmp
lods
fimul
imul
xor
or
add
ins
xchg
fild
push
jbe
mov
dec
jo
dec
shl
clc
cdq
xor
pop
das
adc
je
add
(bad)
mov
cld
nop
(bad)
sbb
mov
dec
dec
or
xchg
pop
adc
jl
mov
ins
push
inc
pop
daa
jp
fidivr
and
ret
lds
sbb
fadd
xor
sbb
outs
int
in
jnp
and
movs
rol
lods
jmp
daa
dec
test
xchg
xchg
prefetch
adc
in
and
xchg
sbb
or
inc
push
int
jae
repz
add
sbb
ret
pop
push
cmp
xchg
retf
push
pop
mov
lea
out
xlat
mov
jmp
push
push
leave
lods
push
sbb
push
jae
xchg
mov
loopne
jmp
jns
adc
lock
into
jp
cld
cmps
xlat
rcl
sbb
or
and
mov
pop
xlat
xor
pop
inc
icebp
leave
mov
ins
cmp
ret
ins
div
bound
xor
xor
movs
xor
bound
xor
push
fwait
sahf
and
sbb
xchg
lock
cmp
or
pusha
xchg
adc
pop
ds
fxch
push
jo
icebp
sbb
cmp
jp
xor
fnstcw
cmp
aam
ret
cs
sbb
sti
and
mov
imul
fild
jmp
movs
xchg
push
pop
mov
cld
idiv
cmp
repz
sar
repnz
xchg
xor
pop
mov
and
pop
je
adc
fstp
cmps
mov
outs
jb
xor
ins
cmps
out
leave
inc
nop
pop
or
sbb
add
int3
add
(bad)
(bad)
popf
mov
pop
inc
std
pop
pusha
aaa
and
lods
dec
dec
xchg
jnp
push
enter
inc
cmp
popf
xor
jge
xor
fmul
add
imul
test
mov
pop
fwait
sbb
inc
aad
sub
sbb
jmp
push
fimul
mov
imul
stos
dec
fbld
lods
in
push
push
mov
cmps
pop
cmc
mov
addr16
adc
out
sub
addr16
adc
sbb
loop
inc
cmp
ins
adc
imul
call
sub
loop
lea
call
movs
inc
imul
mov
add
mov
out
push
or
shl
test
cs
mov
movs
jecxz
adc
div
push
popf
xor
xchg
daa
dec
sti
xchg
loopne
fst
xchg
inc
out
pop
mov
mov
loope
loope
dec
ss
test
xor
cwde
cli
pop
inc
mov
loope
ss
mov
sbb
jle
aaa
sbb
mov
sbb
jge
fadd
fisub
inc
les
dec
mov
inc
push
daa
mov
imul
retf
pop
add
inc
push
fwait
leave
pop
fucompp
gs
or
out
add
nop
xor
pop
(bad)
imul
shr
lods
push
pusha
addr16
addr16
pusha
dec
call
pop
mov
push
call
jae
sub
sub
dec
mov
xchg
jecxz
sbb
or
jmp
xchg
mov
push
lods
lods
jl
cmps
(bad)
retf
outs
mov
jecxz
std
push
push
mov
or
fcom
mov
scas
push
xor
mov
xchg
test
inc
and
aas
or
repnz
inc
pop
fs
in
icebp
loopne
popa
or
in
xchg
js
ret
inc
pop
mov
mov
jo
add
pop
jle
jl
fbstp
pop
dec
or
hlt
loope
pop
sbb
sbb
sti
sub
push
adc
jb
push
adc
jle
ds
pop
ds
scas
mov
fst
lods
pop
inc
stc
cmp
xchg
push
mov
addr16
lods
sbb
data16
inc
push
inc
dec
xchg
sahf
sub
push
lahf
push
mov
jle
neg
mov
mul
sub
sbb
pop
test
xchg
rol
loope
add
aam
mov
push
gs
clc
repnz
and
pop
push
jl
(bad)
adc
dec
dec
sbb
ds
mov
lods
test
cmp
das
je
loope
jo
mov
cmp
push
and
in
cmp
jp
mov
dec
mov
pop
xchg
in
in
scas
or
out
retw
jle
mov
lock
stos
pop
sti
shr
es
popa
xor
jmp
leave
icebp
loope
leave
inc
hlt
repnz
or
xchg
stc
ret
fwait
leave
xor
jmp
div
dec
dec
pop
repz
ret
pop
(bad)
(bad)
retf
sub
cmps
scas
fs
ret
pop
rol
lods
in
daa
fisttp
sbb
jl
bound
or
jmp
mov
test
push
lods
out
cld
and
dec
call
retf
popf
outs
lock
bound
pop
push
lods
cli
push
inc
pop
outs
into
xchg
pop
fidiv
test
inc
pop
or
ficomp
clc
xor
xchg
jnp
mov
jg
ins
mov
sbb
jmp
iret
je
inc
inc
jo
ss
rcl
xlat
into
dec
leave
push
xor
fcom
mov
out
mov
inc
leave
lea
jg
jae
xor
mov
mov
xor
mov
mov
les
xlat
es
push
aas
mov
sbb
cmp
push
sub
scas
in
loop
dec
les
loop
push
enter
or
(bad)
stos
push
inc
ins
inc
(bad)
daa
mov
or
(bad)
xlat
rcr
stc
sub
or
shl
xlat
adc
xchg
xor
push
jmp
mov
mov
gs
jae
add
repz
retf
repnz
sbb
cmps
push
(bad)
int3
jg
scas
cs
or
jmp
test
in
pop
and
jl
or
in
xchg
pop
mov
add
dec
retw
jo
pop
mov
mov
retf
(bad)
iret
jp
int3
jns
inc
mov
push
mov
cdq
les
push
xor
xor
xchg
mov
stos
dec
loopne
mov
aad
push
adc
movs
jnp
push
pop
loope
inc
sub
cwde
mov
cwde
cli
jns
mov
fdivr
cmp
adc
push
out
xor
ficomp
jae
imul
sub
repnz
and
mov
mov
jbe
sub
loop
mov
xchg
adc
pop
push
repnz
in
push
sar
sbb
into
mov
(bad)
sbb
(bad)
push
mov
loop
(bad)
sub
aad
xor
loope
sbb
push
ja
mov
mov
dec
popf
and
retf
dec
inc
jmp
movs
stos
pop
pop
xor
jnp
or
mov
lods
cmp
in
mov
fwait
xor
push
cdq
stc
cmc
pop
out
cld
clc
imul
and
retf
sbb
sub
hlt
rcr
popf
(bad)
fidivr
xchg
cmp
call
and
jle
scas
jnp
jae
outs
sar
daa
xchg
stos
sub
mov
push
xchg
fcomp
jp
retf
push
test
sub
dec
xchg
adc
aas
in
pusha
inc
push
and
cmps
lds
and
cmp
stc
stos
xchg
adc
dec
xor
inc
cmp
and
adc
movs
add
cli
daa
lock
loopne
sar
jg
dec
inc
xor
inc
nop
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cdq
adc
and
push
fnstcw
in
mov
pop
pop
xchg
jo
je
push
push
cs
pop
aas
jnp
nop
adc
cmp
pushf
and
jne
mov
in
repz
add
rcr
pop
pushf
fsubr
mov
xchg
into
xchg
ss
push
aas
mov
lahf
mov
pop
jae
lods
sbb
imul
out
call
sbb
sahf
cmc
and
scas
add
jecxz
aad
sub
sub
push
ins
jo
aas
jne
pop
aad
pushf
stos
mov
sbb
mov
jmp
call
fisubr
jb
inc
ds
pop
aas
mov
call
stc
rcr
jnp
aaa
gs
out
mov
pop
inc
and
cmps
call
mov
ja
aaa
aaa
xchg
mov
sbb
cmp
mov
pop
jg
jge
out
mov
dec
test
sahf
mov
lea
sti
(bad)
int3
pop
mov
inc
bound
jb
jmp
xchg
pop
jg
or
sub
mov
mul
mov
jl
add
(bad)
ds
mov
sub
inc
out
scas
(bad)
or
cmp
movs
xor
lods
xor
pop
imul
push
push
neg
add
xchg
mov
xchg
pop
push
xor
(bad)
jne
and
xchg
mov
or
sar
inc
aad
jmp
pop
mov
lods
push
sbb
cmp
rol
xchg
js
sub
out
mov
mov
sbb
lea
xchg
ud2
out
adc
cmp
fsubr
adc
clc
jp
imul
and
aad
xchg
test
mov
movs
sbb
push
mov
adc
fs
fistp
xor
or
je
test
sar
xor
xchg
dec
(bad)
out
mov
jo
into
arpl
sbb
test
cmc
pop
jne
and
mov
movs
jle
fwait
cmp
mov
and
lods
out
cli
pop
jmp
and
dec
test
stc
xchg
push
ja
inc
ja
sti
std
pop
mov
mov
test
dec
sub
ds
ja
cli
jbe
jle
jg
ins
mov
mov
mov
retf
xlat
std
out
push
imul
dec
mov
inc
mov
adc
data16
xchg
cmp
xchg
loop
cmc
xor
sbb
pop
scas
jno
js
inc
movs
retf
sub
pop
push
sbb
loop
and
std
clc
stc
fbstp
imul
rcl
and
lsl
mov
and
mov
outs
mov
jo
mov
retf
cmp
test
pop
in
fld
mov
or
imul
sbb
sbb
dec
(bad)
ret
mov
push
add
test
into
in
or
out
out
adc
(bad)
call
mov
push
push
pop
out
dec
int3
cmps
out
das
into
shl
js
sub
popa
ret
cmp
xchg
cmp
(bad)
rcl
pop
shr
dec
inc
dec
das
and
out
hlt
call
in
mov
jno
clc
jmp
mov
mov
xchg
sbb
dec
xchg
xchg
mov
sti
fs
call
enter
pop
dec
shr
mov
retf
shl
cmp
mov
in
jg
and
addr16
inc
ins
(bad)
es
aad
mov
sar
pop
mov
jb
sub
loopne
push
mov
out
push
dec
jecxz
fidiv
add
icebp
or
arpl
xlat
(bad)
nop
or
iret
sub
cmp
sbb
push
sub
push
pop
aas
aad
pop
push
fcom
push
fadd
daa
xlat
add
scas
pop
call
inc
jmp
aas
retf
dec
inc
xchg
lahf
mov
popa
and
leave
stos
es
cmp
xor
jmp
into
or
in
je
fmul
push
xor
movs
lods
loope
mov
sbb
mov
imul
xor
mov
sub
xlat
inc
and
data16
popa
dec
mov
cmp
xchg
lods
loopne
iret
push
cli
test
pushf
pop
sub
or
loopne
addr16
xchg
mov
not
dec
popf
jnp
and
clc
js
into
mov
dec
add
mov
cmp
mov
jb
mov
out
aad
pop
das
rcr
psubq
imul
pop
aas
mov
mov
cmp
test
les
pop
stos
mov
push
fdivr
cmp
std
mov
pop
xchg
scas
sar
ss
mov
ss
xchg
ins
shl
ret
push
jmp
xchg
inc
in
xlat
xchg
pop
cmps
jg
add
in
sbb
mov
fwait
or
inc
inc
stc
mov
pop
inc
push
or
cmp
push
lods
pop
xor
arpl
daa
rcl
(bad)
jb
sar
cld
jmp
test
sub
cmp
call
push
cld
push
(bad)
xor
neg
sbb
bound
mov
ror
scas
cmp
shl
cmps
xor
fbld
outs
push
xor
xchg
mov
outs
xor
(bad)
mov
xlat
cmps
jge
mov
clc
or
dec
push
and
jmp
test
cmc
cmp
rcl
mov
push
add
sar
setp
movs
shl
cwde
push
xchg
cli
not
cld
hlt
xchg
or
enter
ret
test
repz
dec
call
push
lahf
dec
dec
jbe
xchg
mov
xor
in
add
inc
mov
dec
rol
rcl
and
popf
ret
mov
mov
push
push
push
lahf
sub
pop
enter
push
jge
dec
dec
mov
sub
out
clc
mov
sub
es
mov
lds
cmp
mov
inc
and
sub
in
pand
in
lock
repz
add
cmps
frstor
in
inc
adc
or
retf
(bad)
je
pop
fsubr
push
pop
inc
repnz
dec
cmc
inc
and
test
xor
out
cmps
scas
cmp
push
mov
jg
scas
(bad)
out
jne
sbb
inc
leave
mov
pop
pop
pop
xor
test
outs
test
push
adc
(bad)
shl
jle
or
mov
gs
call
ret
adc
jnp
adc
std
xor
fcmovbe
xor
imul
sub
jns
mov
mov
cmp
sar
das
pop
push
inc
lods
iret
pushf
ins
mov
jbe
shl
in
adc
adc
les
sbb
add
sub
inc
enter
push
sbb
test
cmp
ror
call
es
mov
es
push
cmp
mov
add
sar
dec
lahf
mov
sbb
pop
cdq
jmp
xchg
cmc
into
xchg
mov
(bad)
aas
add
ja
xor
jg
xchg
sub
add
sbb
cli
inc
mov
xchg
pusha
cmp
push
jl
inc
nop
retf
xchg
or
inc
js
xor
xchg
imul
ret
or
in
jae
out
lods
dec
sbb
(bad)
cmc
shl
test
icebp
xchg
inc
inc
inc
adc
jle
jne
adc
jle
loop
adc
sahf
(bad)
xlat
in
mov
(bad)
jns
adc
stos
jno
push
adc
dec
mov
sub
arpl
or
daa
jae
xor
ins
push
cdq
inc
inc
in
les
scas
mov
mov
int
or
sbb
leave
rcr
test
inc
cmp
xchg
jae
pop
pushf
mov
daa
vpcmpeqb
ds
call
in
call
bound
jno
pushf
cs
xor
and
cmp
in
rcr
inc
xchg
jmp
push
push
xor
stos
cmp
popf
das
loopne
sub
data16
clc
dec
(bad)
in
cmp
push
test
rcl
fistp
mov
jle
adc
xor
push
fistp
pop
into
push
sbb
outs
in
jbe
cmc
mov
mov
imul
xchg
scas
jbe
(bad)
rol
inc
repnz
div
mov
jmp
jmp
sbb
stc
mov
dec
mov
daa
mov
sti
mov
and
cmp
fdivr
leave
cmps
fisubr
and
adc
cdq
jmp
pop
xchg
xchg
movs
pop
sub
fcomp
gs
std
inc
test
lods
cwde
add
addr16
out
jo
stc
mov
adc
cs
mov
push
mov
jg
lea
les
sbb
inc
leave
imul
out
imul
mov
mov
cs
hlt
mov
jb
std
sahf
xchg
lds
icebp
fwait
add
adc
loope
into
das
jg
adc
sti
stc
gs
scas
andnps
pop
jge
adc
and
cmc
sub
push
lods
cs
jne
dec
sub
ja
mov
ja
adc
jo
xchg
inc
and
mov
or
out
mov
push
movs
mov
inc
or
test
lods
adc
mov
out
lds
sbb
fnstcw
repz
pop
cmp
repnz
xor
push
pop
jle
mov
xor
add
out
jae
dec
inc
jbe
sub
scas
addr16
movs
fcmovb
stos
fcmovne
fucomp
test
xchg
mov
fsubp
call
add
into
jmp
fs
in
push
inc
and
mov
dec
out
rcr
jne
and
or
arpl
inc
inc
or
add
pop
jae
int3
adc
imul
lods
jne
ins
cli
mov
scas
clc
cmp
mov
in
test
into
popf
jns
cmc
mov
imul
(bad)
sub
sbb
sbb
push
movs
and
fs
cld
clc
scas
fsub
inc
bound
jns
arpl
je
mov
daa
ins
sub
and
push
div
dec
or
js
int3
test
mov
ins
idiv
push
std
mov
mov
push
pop
fsub
add
popf
repnz
jg
std
out
nop
stc
dec
cwde
pop
sbb
cdq
outs
push
and
jb
add
imul
int3
push
test
mov
mov
adc
mov
xchg
push
shl
or
mov
mov
cld
mov
rcl
punpckhbw
mov
mov
fldenv
aaa
sub
in
ins
xchg
xchg
add
call
xlat
jmp
inc
pop
mov
push
xor
push
sti
leave
enter
pushf
aas
rcl
retf
cmps
addr16
xchg
(bad)
das
retf
fistp
add
push
in
in
sbb
ins
lods
jne
in
lods
loop
pop
mov
fst
mov
jbe
es
and
repz
dec
fiadd
xor
lds
scas
mov
sti
jge
lods
mov
mov
nop
jns
bound
cmp
push
jmp
mov
cmps
sub
out
mov
sbb
leave
push
out
stc
sub
push
add
dec
ins
int3
dec
mov
inc
es
(bad)
ja
jg
outs
test
lds
loope
sar
push
dec
lock
loopne
sbb
pop
push
sub
push
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
ja
leave
pop
ja
enter
(bad)
adc
xchg
xor
mov
mov
in
cdq
cmp
cdq
sbb
leave
sub
and
cli
ds
repz
mov
ror
sbb
fcom
imul
jb
sbb
mov
sbb
adc
das
outs
(bad)
addr16
gs
imul
jecxz
sbb
das
cdq
stos
lods
push
mov
xchg
sar
jbe
cdq
or
sti
add
dec
out
int
mov
mov
mov
in
mov
sti
mov
pop
push
test
adc
jmp
fidiv
retf
hlt
sti
daa
js
push
sub
dec
scas
(bad)
add
imul
mov
mov
mov
inc
mov
mov
loope
inc
adc
adc
mov
jbe
retf
jae
dec
pop
and
jp
inc
ss
in
outs
(bad)
mov
mov
int
push
rcr
add
sbb
data16
jle
shl
cwde
inc
imul
clc
mov
inc
push
cmp
ret
mov
daa
stc
mov
pusha
push
xchg
bound
xchg
dec
out
(bad)
cmp
push
psubq
stos
repz
(bad)
cmc
cmp
xor
push
data16
fidiv
mov
cs
bound
adc
push
loopne
sub
mov
stos
inc
cmps
lods
cmp
push
cdq
hlt
inc
jo
ins
mov
add
loop
retf
dec
popa
pop
push
jge
push
outs
fsubr
push
retf
das
jo
mov
dec
adc
in
fmul
jns
push
dec
pop
xchg
xchg
adc
pop
mov
lahf
fbld
push
dec
in
add
mov
repz
sbb
mov
mov
and
or
xor
test
xor
fistp
out
out
fwait
mov
arpl
in
lds
cmps
jecxz
int
and
dec
push
sbb
xchg
push
ja
ja
test
sahf
in
gs
sbb
adc
rcl
mov
dec
xor
xchg
xchg
div
inc
pop
mov
push
in
sub
add
pop
or
fcomp
xor
out
fidivr
ror
stos
in
xchg
adc
push
dec
pop
pop
mov
adc
xchg
adc
mov
jg
sahf
in
(bad)
shl
cmps
fdivr
xor
data16
paddsw
or
and
ret
fmul
xchg
pop
loop
les
sahf
outs
adc
cmc
les
fcmove
fisub
mov
cmp
and
mov
neg
dec
inc
cmp
iret
stos
dec
aad
push
pop
scas
pop
fnstenv
pop
inc
ret
mov
mov
aad
dec
inc
mov
cwde
jns
mov
mov
retf
shl
and
add
push
jo
cmp
in
test
ins
cmps
pop
shr
data16
iret
jle
test
jmp
stos
in
ins
dec
ss
inc
mov
cmp
xchg
jnp
sbb
cmp
shl
dec
aam
inc
stc
lock
test
mov
jmp
sar
xor
test
lods
call
ret
into
cs
ds
fs
rol
test
inc
jg
cmp
in
js
ins
xchg
call
xor
aad
pop
loop
jnp
xlat
repz
cmp
mov
mov
mov
shl
pop
add
call
(bad)
mov
mov
sbb
cmps
or
and
(bad)
inc
push
fadd
jge
pop
loope
in
outs
(bad)
push
in
cmp
sahf
scas
ds
sar
test
and
sar
dec
cmp
mov
xchg
push
inc
jbe
mov
das
mov
cmps
jp
push
adc
out
arpl
bound
fistp
xchg
inc
aam
cli
adc
std
cdq
enter
pop
(bad)
mov
test
cmps
mov
shl
loop
enter
test
and
fsubr
adc
add
stos
daa
mov
push
mov
out
pushf
lods
daa
sbb
mov
cli
xlat
adc
push
(bad)
lock
imul
js
push
outs
jl
inc
fucomi
jns
cwde
mov
push
dec
push
mov
psrlq
addr16
mov
mov
jg
hlt
jecxz
mov
xor
fist
aad
mov
cdq
push
cmp
pop
retf
adc
adc
push
cmp
push
repz
mul
and
test
inc
sbb
(bad)
int3
dec
stc
inc
out
lods
nop
sbb
jg
sahf
push
push
and
fst
cld
ins
or
hlt
jge
jmp
fcmovnu
or
and
pop
lds
into
lods
push
(bad)
aas
push
jmp
cwde
outs
mov
outs
clc
retf
fnstsw
sub
(bad)
retf
xchg
and
fwait
cmc
sbb
dec
cmp
sub
in
scas
sub
sbb
test
ret
call
sub
shl
xchg
cld
jp
cmp
cmps
retf
loope
rcr
imul
cmps
repz
sub
xchg
cs
xor
rcl
sub
lock
(bad)
and
(bad)
shl
cwde
push
out
int
cmp
sub
out
or
pop
lods
cs
add
setb
xchg
fwait
add
pop
mov
in
xchg
test
cmp
js
mov
or
sub
imul
nop
ss
leave
jmp
repz
out
push
daa
mov
xor
stos
dec
and
outs
lods
xchg
push
push
push
cmp
shl
aas
lea
mul
inc
scas
fisub
fucom
jmp
std
or
mov
loopne
push
out
push
xor
mov
sti
das
push
adc
aas
jmp
add
cs
outs
mov
push
push
inc
add
pop
(bad)
clc
fwait
xchg
shl
neg
pop
clc
test
test
cmp
mov
mov
push
xchg
cmp
aam
jle
out
sbb
sub
add
rcl
idiv
(bad)
xchg
aad
aaa
bound
retf
push
sub
push
dec
stos
or
pop
add
mov
xchg
mov
std
cmp
scas
ins
sub
add
or
(bad)
nop
pop
hlt
aad
and
mov
shl
std
leave
ret
push
mov
in
dec
mov
or
or
call
mov
mov
cmps
or
mov
icebp
ins
sti
out
inc
mov
or
cld
lods
jp
data16
lods
sub
lock
jo
xor
cs
and
ret
(bad)
sub
mov
or
stos
jbe
repz
or
mov
add
shl
mov
adc
xchg
cmp
outs
loope
bnd
daa
mov
push
and
sbb
xchg
sbb
mov
mov
inc
pop
ins
js
xlat
movs
cdq
js
dec
mov
cmp
xchg
fstp
push
lods
xchg
nop
arpl
outs
stos
cli
jb
dec
popa
and
mov
adc
push
lea
jg
retf
or
fidivr
xchg
rcr
in
mov
xor
and
xchg
inc
jne
jp
enter
retf
leave
cmp
lods
(bad)
aaa
enter
sbb
loop
test
in
pop
xchg
stos
arpl
int
cmp
and
je
adc
cmp
aad
jmp
dec
and
outs
jp
push
ja
mov
mov
addr16
loopne
dec
lahf
dec
(bad)
clc
push
mov
in
xor
push
(bad)
inc
repz
call
nop
and
xor
mov
jne
addr16
(bad)
jbe
sbb
xchg
inc
or
sbb
mov
bound
push
dec
push
fdivr
cdq
push
out
(bad)
push
ds
mov
mov
test
lods
stos
push
std
aam
adc
enter
jae
mov
dec
mov
jbe
xchg
sbb
and
cmp
mov
cmp
neg
jecxz
movs
(bad)
cmps
outs
les
(bad)
lock
jnp
cmpxchg
fldcw
push
inc
in
mov
mov
enter
inc
xchg
mov
push
pop
jp
cdq
xor
popa
mov
std
add
pop
ins
in
fsubrp
shl
lods
inc
gs
mov
push
clc
(bad)
xor
out
pop
inc
jns
aas
stc
pop
scas
sbb
xor
test
sub
out
xchg
lock
test
cmps
jl
push
pop
into
xchg
inc
push
pop
sbb
adc
adc
movs
cdq
mov
iret
out
push
sbb
cli
cmp
in
repz
ret
test
les
js
push
fimul
dec
mov
popa
cld
imul
mul
xchg
les
stc
imul
xchg
addr16
push
hlt
test
jae
adc
mov
sub
cmps
and
test
xchg
xchg
mov
out
push
(bad)
pop
aaa
cmp
mov
les
int
pop
pop
push
lahf
mov
movs
cli
and
or
clc
dec
cmp
scas
jl
push
ss
or
xchg
(bad)
das
pop
xchg
xchg
pusha
jmp
scas
jmp
movs
mov
fimul
js
xchg
sub
(bad)
(bad)
sbb
(bad)
sbb
cli
cmp
shl
neg
outs
dec
sbb
cld
mov
mul
enter
pop
cdq
push
ss
movs
or
cmc
mov
sahf
pop
test
scas
dec
je
aam
call
or
jecxz
lahf
xor
cmp
xor
or
jbe
aaa
sbb
push
push
out
push
out
xor
mov
loopne
add
add
add
test
(bad)
cmp
jne
cmp
jbe
imul
cs
aam
add
fidivr
or
mov
mov
sub
enter
sub
or
retf
or
movs
mov
mov
(bad)
fs
mov
cmp
push
test
sahf
lahf
dec
jg
cmp
pop
add
jae
mov
jnp
pop
pop
push
stc
xlat
jbe
mov
fistp
aam
(bad)
fs
xor
jle
out
cdq
push
loope
clc
rcl
sahf
cmp
jbe
pop
daa
in
push
dec
pop
xor
add
sub
xor
ins
iret
fmulp
mov
sub
lock
inc
sub
xchg
pop
cmp
dec
pop
xchg
mov
jg
(bad)
xchg
mov
cli
cmp
mov
add
inc
imul
call
out
sbb
inc
cmp
add
cmp
fdiv
xchg
xchg
in
dec
pop
imul
in
and
mov
fimul
jb
xlat
into
aad
adc
out
pop
repz
mov
xor
stc
or
push
sbb
and
retf
sub
and
imul
fbstp
rcl
retf
repnz
sbb
daa
test
(bad)
mov
stos
sbb
std
xchg
or
test
and
dec
cwde
push
outs
int
fwait
jg
dec
mov
jl
xchg
aam
xchg
jae
inc
push
pushf
sub
lahf
mov
icebp
stc
mov
pop
fdivrp
scas
pop
jecxz
mov
mov
inc
js
pushf
mov
pop
bound
repnz
(bad)
cmp
sub
fiadd
mov
and
in
(bad)
sahf
push
dec
xor
pop
lahf
arpl
iret
pop
ins
(bad)
aam
xor
fucomp
dec
bound
test
mov
test
dec
mov
seto
add
cmp
aaa
lock
loopne
sar
loopne
dec
int
xchg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
push
imul
mov
dec
sub
xor
arpl
sub
je
jmp
adc
sbb
xor
jmp
or
add
or
xor
outs
aam
fs
sub
ja
lods
fcom
into
push
xor
or
jecxz
cld
sbb
xchg
das
aaa
xchg
jns
out
sub
(bad)
into
retf
push
arpl
adc
sbb
test
call
adc
jp
adc
inc
fadd
inc
sar
sahf
aad
pop
push
ja
dec
mov
xor
test
mov
out
ins
xlat
jge
add
xor
test
mov
or
(bad)
cmp
sahf
cli
push
cmps
and
add
in
push
ja
pop
(bad)
(bad)
push
ds
mov
mov
sub
popf
add
movs
or
lods
push
ds
mov
sbb
movs
sub
inc
sbb
sub
inc
repnz
cs
jg
jb
adc
(bad)
mov
ins
in
push
xor
mov
iret
cmp
aaa
(bad)
push
jle
mov
idiv
mov
mov
jbe
popf
lods
fild
mov
bound
mov
mov
fild
jle
jb
mov
fstp
int
daa
mov
push
enter
fs
jle
icebp
xor
inc
loope
ins
add
jno
mov
lods
movs
aam
xor
jle
xlat
sub
iret
sbb
imul
ret
arpl
mov
pop
retf
mov
lods
or
shr
inc
push
push
adc
ins
xchg
pop
sbb
adc
fmulp
mov
jecxz
xor
mov
mov
mov
or
push
sub
dec
ret
test
push
inc
movs
repz
call
lods
sti
sub
dec
dec
dec
cwde
lock
sti
(bad)
mov
mov
jmp
xchg
stos
pop
mov
cmps
add
push
adc
sbb
aam
sbb
or
xor
mov
das
cmp
repnz
jl
xchg
push
cmp
inc
inc
test
mov
shl
cwde
std
mov
jmp
ins
and
aam
sbb
gs
call
inc
in
scas
jno
pop
adc
out
or
cmp
mov
gs
push
add
outs
popf
out
push
aad
lods
stos
mov
shr
mov
and
sbb
adc
mov
stos
mov
or
addr16
(bad)
jns
dec
sbb
call
xchg
nop
xchg
adc
not
dec
enter
or
xchg
(bad)
push
fnsave
jmp
(bad)
cmps
adc
xor
movnti
mov
add
xchg
test
test
add
jle
inc
pop
xchg
mov
cdq
push
mov
xchg
cmps
int3
jecxz
je
pop
jge
mov
mov
push
cli
dec
xor
xor
jnp
js
or
inc
in
mov
test
pop
sbb
cmps
icebp
repz
or
test
into
mov
cmc
je
int
scas
addr16
mov
jp
fs
mov
lahf
add
add
test
or
and
stos
push
test
outs
ficomp
xor
out
or
test
test
jb
mov
fwait
ret
jb
lods
rol
(bad)
mov
push
in
call
dec
pop
mov
jp
dec
xor
adc
pop
mov
mov
jbe
in
pusha
add
lock
js
xor
in
jmp
add
dec
push
adc
mov
lahf
lea
pop
outs
mov
lahf
in
(bad)
fcomp
leave
rol
adc
ss
loop
mov
loopne
dec
mov
mov
mov
mov
inc
(bad)
sbb
and
inc
and
jle
outs
cli
xor
and
dec
sub
leave
push
std
adc
sar
pop
loope
inc
ret
inc
add
or
data16
cmp
bswap
add
push
inc
xor
sub
dec
into
loop
adc
aaa
or
adc
jns
cmp
jno
in
(bad)
cmp
out
push
jbe
pop
or
xor
mov
sti
mov
mov
call
in
frstor
sbb
xchg
mov
adc
bound
nop
jne
adc
movs
push
rol
or
mov
lods
xor
aam
jne
aas
sahf
xor
(bad)
mov
mov
int
ins
test
sbb
out
cmps
fs
test
or
out
sbb
iret
xor
add
xchg
xchg
sub
mov
mov
pop
ss
(bad)
adc
mov
(bad)
and
imul
add
shr
pop
jbe
inc
std
mov
dec
pushf
imul
mov
sbb
mov
xchg
add
loope
std
mov
in
or
add
call
out
pushf
push
cs
inc
ror
fmul
xchg
push
mov
push
cmp
clc
ja
mov
cwde
mov
fmul
cwde
mov
fidivr
shl
stc
pop
adc
cmp
fnstcw
hlt
into
cmp
aaa
jne
adc
int3
mov
push
nop
jnp
mov
gs
inc
fwait
loopne
dec
pop
int3
fist
ins
pusha
cmp
repnz
push
mov
into
inc
shl
imul
sahf
xchg
mov
ja
fs
lock
(bad)
mov
dec
mov
push
sbb
imul
mov
(bad)
cmp
jle
add
test
sar
or
sbb
lods
dec
(bad)
lahf
mov
sti
int
mov
movs
idiv
das
sbb
retf
sub
test
push
mov
jle
fidivr
arpl
out
ja
fsub
cdq
jl
push
nop
in
mov
and
pop
jmp
xor
fidivr
fs
xchg
icebp
xor
les
push
push
cmps
dec
or
stos
mov
mov
loopne
pop
les
aam
xchg
scas
daa
push
pop
adc
xchg
push
sti
js
cmc
mov
mov
daa
mov
push
hlt
and
scas
xchg
pop
pushf
popf
rcl
rcl
stc
push
push
mov
jmp
sub
shl
mov
mov
ins
popa
pusha
popa
scas
sub
adc
cmp
cmps
xor
xor
adc
sbb
mov
stos
jbe
or
adc
js
pushf
hlt
ja
fist
fdiv
leave
mov
jns
mov
jbe
xchg
push
pop
push
mov
add
loopne
dec
dec
xor
pop
or
stc
cli
adc
xchg
ffreep
xor
ret
imul
mov
push
outs
mov
push
cmp
rcl
into
lods
inc
gs
pop
in
adc
xor
or
jmp
push
pop
bound
push
pop
out
scas
push
dec
ret
push
add
sub
js
sub
loope
mov
scas
(bad)
fcomp
(bad)
int3
not
idiv
cwde
int
mov
les
xor
arpl
sbb
jmp
dec
icebp
iret
sbb
cmps
lock
call
pop
push
shl
loopne
cmps
rol
pusha
mov
dec
xor
or
aam
fbstp
mov
push
jg
mov
sbb
iret
and
mov
int
push
mov
lds
ficom
mov
in
iret
movs
inc
inc
(bad)
jmp
clc
arpl
stc
fiadd
fadd
sbb
in
mov
or
icebp
lock
pushf
jne
mov
xchg
push
sub
test
mov
out
loope
jmp
cmp
ret
dec
stc
aam
mov
xchg
mov
push
xor
pop
jmp
out
mov
pop
jecxz
jbe
int3
pop
sbb
(bad)
pop
pop
shl
lods
cmps
in
adc
inc
push
lahf
cmps
push
cdq
sub
sbb
sbb
out
imul
jp
bound
mov
mov
jo
dec
and
mov
ret
dec
cmp
or
jnp
cwde
mov
outs
iret
in
call
cli
test
fucomp
cli
pop
out
std
or
stos
shl
pop
jg
push
cmp
push
cdq
ins
add
mov
not
xlat
push
push
je
jne
addr16
aaa
rol
cmps
xchg
js
mov
or
sbb
cwde
not
std
jno
div
js
mov
call
push
bound
(bad)
pop
mov
mov
bound
mov
es
mov
and
inc
cs
leave
ins
aaa
loop
cs
es
or
sti
mov
sbb
call
mov
add
sbb
(bad)
mov
push
std
or
sub
inc
aad
jp
xor
js
jbe
mov
cmp
dec
nop
aad
or
and
es
je
dec
dec
or
jmp
add
sub
jecxz
jbe
pop
mov
shl
sub
pop
sub
mov
xchg
jecxz
cs
xor
jns
ja
mov
and
xchg
push
mov
push
loopne
adc
or
mov
ins
ins
pop
jmp
es
lds
mov
pop
jl
or
mov
retf
arpl
pop
ficom
pop
add
jmp
mov
ins
xor
cmp
test
xor
sub
movs
mov
jmp
xlat
mov
jmp
scas
add
jne
stos
out
aas
repz
shr
and
lea
dec
test
pop
lock
(bad)
jmp
jmp
outs
add
sahf
or
out
mov
shl
mov
je
mov
out
xor
ins
mov
mov
iret
(bad)
jge
inc
scas
mov
sub
fisubr
cdq
arpl
push
xor
or
icebp
aas
and
jno
sar
outs
mov
lea
xor
outs
out
int
dec
data16
inc
mov
and
push
lahf
xor
pop
cmps
scas
pushf
cdq
mov
int
out
clc
imul
mov
js
sub
(bad)
clc
iret
push
push
fiadd
movs
mov
popf
dec
jno
ss
jb
cmp
adc
inc
rcr
leave
sub
mov
adc
cmp
out
aaa
push
sub
out
repz
jae
cmp
rcr
jge
and
popf
xchg
mov
xchg
sbb
mov
jmp
lahf
jge
(bad)
mov
cmp
pop
das
adc
jo
jmp
repnz
push
fs
(bad)
outs
fstp
or
test
or
leave
sbb
or
mov
inc
out
cmp
xchg
fs
jge
(bad)
adc
pushf
or
and
loope
mov
jp
cmps
xchg
int3
sub
stc
stos
inc
lahf
cmp
mov
arpl
test
mov
cmp
sbb
dec
pop
cld
xor
call
cmp
int3
sbb
iret
mov
push
dec
pop
inc
cld
movs
inc
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
test
inc
dec
xchg
dec
test
addr16
jns
push
jbe
xchg
sbb
test
outs
sahf
pop
icebp
cld
(bad)
and
mov
pop
adc
xchg
cmp
and
cmp
call
and
inc
pop
rol
mov
jge
sub
push
mov
mov
pop
cmp
call
push
out
das
stos
ret
xchg
sbb
ins
inc
stc
or
test
arpl
jmp
in
sbb
cmp
pop
inc
retf
xchg
idiv
jecxz
mov
pop
das
retf
in
and
pop
xchg
ins
xlat
sub
(bad)
push
add
gs
mov
dec
and
jg
iret
mov
push
mov
xchg
jg
sub
sti
cmp
mov
js
push
neg
arpl
dec
call
scas
rcr
mov
sub
adc
fs
loop
mov
cdq
jns
pop
and
vpaddq
js
and
test
add
js
cmp
pop
(bad)
jecxz
inc
xchg
push
lods
xor
mov
jne
fdiv
jbe
addr16
lahf
loopne
pop
xor
out
mov
es
cmps
sbb
(bad)
popa
and
das
or
test
dec
inc
(bad)
xchg
or
cmp
jne
mov
iret
(bad)
ret
fs
mov
pop
clc
or
shl
fist
js
mov
and
jo
scas
sub
dec
sub
pop
call
xchg
out
adc
jg
mov
push
repnz
setns
dec
mov
cdq
push
bound
ror
lods
push
adc
test
fisubr
mov
shr
imul
jl
shr
cmps
add
jnp
push
adc
mov
cmp
mov
out
push
fcom
pop
push
rep
xchg
cmps
fiadd
xchg
stos
cmp
inc
push
xchg
and
sub
movs
(bad)
sahf
jns
cld
retf
daa
ja
push
sti
inc
or
outs
das
mov
call
fstp
ss
aad
pop
das
fcomip
repnz
daa
xchg
inc
js
jno
mov
cwde
add
mov
adc
inc
jmp
inc
lds
inc
sub
jo
test
bnd
sbb
into
cmp
daa
shl
cmovno
aad
cli
xchg
scas
and
adc
adc
aaa
push
add
shr
push
or
and
and
add
femms
popf
pop
std
inc
(bad)
sbb
pop
cmp
mov
pusha
imul
daa
jp
ja
sbb
cdq
cmp
pop
lds
gs
dec
sahf
mov
cs
sbb
jns
xchg
fisttp
ret
jno
inc
pop
std
or
push
aas
enter
test
sbb
and
repz
jns
mov
xor
dec
outs
mov
scas
dec
std
pop
jle
cmp
xlat
bswap
cmc
cmp
mov
aad
hlt
fnstsw
mov
mov
sbb
adc
int
or
call
xor
jne
xchg
sbb
repz
add
jmp
(bad)
mov
imul
lahf
dec
mov
pop
popa
aaa
(bad)
iret
cmp
pushf
pop
(bad)
in
cmp
ja
mov
jge
daa
loope
push
les
dec
test
mov
pop
mov
push
stos
mov
sbb
mov
repz
ror
sub
mov
out
loopne
aaa
push
mov
or
rol
mov
mov
jle
retf
lahf
mov
stos
stos
xchg
or
mov
sahf
test
xor
xchg
daa
mov
lds
sub
inc
fsubr
xlat
or
test
sub
in
neg
mov
xchg
push
mov
pop
push
(bad)
sbb
mov
dec
int
add
inc
pop
add
mov
ret
push
pusha
mov
in
push
xchg
scas
out
mov
retf
shr
outs
mov
push
les
or
mov
fild
dec
lea
or
add
adc
push
sub
fcmove
test
int3
adc
pushf
enter
sti
test
jl
leave
ret
jge
jp
repnz
push
and
aas
push
test
inc
test
lods
push
dec
mov
jb
in
jl
xchg
lods
push
out
cmp
push
dec
(bad)
sar
ds
jp
popf
dec
lahf
sbb
repz
arpl
dec
cmps
mov
push
ins
xchg
mov
add
in
cmp
and
cmps
daa
inc
add
idiv
adc
sbb
push
test
pushw
xor
repz
push
cmp
cmps
dec
rcr
cdq
repz
aad
mov
mov
sahf
adc
mov
xor
(bad)
mov
sub
stc
mov
das
cmp
and
je
inc
or
(bad)
sti
add
dec
(bad)
xchg
rol
pop
xchg
rol
ret
mov
jmp
sub
dec
les
das
addr16
adc
leave
xor
imul
jae
jne
or
test
push
fstp
jp
fdivr
push
fcom
xor
popf
arpl
and
aam
pop
test
sbb
aad
adc
in
aaa
aam
dec
ins
(bad)
stc
jb
int
jae
adc
or
ss
out
mov
lods
jbe
mov
mov
push
jge
and
int3
jecxz
inc
mov
popf
movs
push
sub
add
sbb
into
out
push
jmp
xchg
xor
lock
ficomp
scas
xor
push
pop
int
stc
(bad)
mov
push
sti
jle
xor
sub
sbb
xor
jae
xchg
shl
jbe
xor
out
data16
fwait
and
or
add
loope
dec
jmp
jae
shr
adc
stc
scas
in
add
dec
mov
aaa
jmp
sahf
pop
cmps
and
fdiv
and
inc
jecxz
test
inc
sbb
shr
data16
stos
pop
(bad)
mov
ret
pushf
jge
add
jge
jmp
or
rcr
movs
or
jnp
pop
jmp
push
xor
sti
popa
arpl
and
jae
add
sbb
ins
mov
fcom
mov
bound
pop
pop
test
std
out
test
pop
cmp
popa
ins
mul
push
or
enter
imul
call
popf
inc
sub
add
jb
mov
adc
gs
sub
dec
jno
sbb
test
jno
test
xor
mov
push
ins
cli
xor
call
(bad)
mov
movs
mov
dec
cmp
fisub
push
jnp
cmp
jle
imul
xlat
cli
in
cmps
rol
outs
jp
jl
push
push
sbb
int3
mov
mov
sub
push
and
mov
ss
cli
scas
xchg
pop
xchg
call
test
popa
das
scas
jge
and
mov
test
imul
mov
fisub
in
inc
in
mov
mov
lea
shr
sbb
or
mov
imul
stos
int
adc
pop
pop
cdq
and
outs
xchg
dec
xchg
adc
xchg
das
adc
aaa
jle
push
loope
les
dec
xchg
cmp
shl
jno
int
adc
in
imul
sbb
jge
add
sub
push
out
ror
dec
gs
xor
dec
adc
push
gs
lock
gs
mov
fidivr
addr16
mov
jae
mov
and
jmp
ss
cs
sub
clc
mov
sti
inc
mov
jmp
mov
xor
push
jle
out
sti
inc
sub
pop
je
rol
push
dec
dec
jmp
add
sbb
and
jae
mov
add
fdivr
adc
cmp
mov
push
adc
test
iret
outs
inc
sbb
imul
(bad)
movs
mov
xchg
xor
or
mov
pusha
int3
pushf
popf
inc
cmp
aad
add
inc
enter
es
aaa
test
xchg
push
fdiv
or
rol
sbb
fsub
xor
mov
pop
cwde
pusha
sub
sub
shr
push
lock
arpl
(bad)
retf
adc
jg
sub
jmp
pop
les
ja
xchg
cld
adc
pop
xor
sub
aaa
jg
pusha
inc
mov
in
aad
(bad)
stc
repnz
xchg
pop
jg
inc
movs
es
scas
dec
imul
nop
fs
fs
xchg
xchg
jmp
lock
ret
jne
jecxz
js
xor
hlt
clc
icebp
dec
xchg
jns
inc
push
and
rcr
sti
pop
jmp
cmps
inc
ins
jecxz
mov
in
ficom
adc
push
cdq
ins
cs
inc
inc
xchg
add
jmp
cmp
cmp
or
add
out
xchg
pop
push
ret
popa
xlat
push
inc
mov
and
test
loop
not
mov
push
(bad)
pushf
mov
and
jp
cwde
xchg
sub
fisubr
xchg
xchg
xchg
aam
mov
push
pop
mov
sar
and
dec
cmp
repnz
jmp
add
out
gs
jle
retf
mov
mov
lock
push
repnz
adc
cmp
inc
clc
ja
retf
xchg
pop
xchg
loopne
iret
bound
sub
pop
call
add
sar
mov
adc
movs
std
enter
dec
cmp
sar
mov
jae
dec
mov
mov
cli
cmp
push
fimul
jp
enter
imul
fwait
xor
cs
je
pop
push
in
ret
push
mov
sub
adc
adc
push
fidiv
(bad)
and
mov
xor
fdiv
xchg
adc
xchg
and
and
dec
fist
or
jae
daa
leave
xor
or
xor
(bad)
imul
ret
es
inc
adc
sti
mov
mov
ret
int3
xchg
stc
ficom
lea
repz
fld
xor
sbb
sub
popa
mov
ds
mov
mov
cwde
dec
ins
mov
(bad)
out
loope
and
lods
push
cmp
shl
sbb
pop
rol
mov
push
add
sub
push
mov
add
pop
jle
into
js
out
mov
sub
mov
mov
jne
xor
(bad)
sub
jmp
hlt
(bad)
xchg
cmp
push
iret
popa
sar
clc
ss
mov
pop
mov
jmp
mov
jp
outs
inc
sub
pop
xchg
scas
push
mov
js
xor
fmul
scas
ss
cld
adc
cs
pop
mov
movs
jl
call
hlt
adc
mov
es
cmp
outs
sub
and
add
les
mul
mov
cmps
cmp
test
fwait
xor
in
mov
(bad)
cld
sbb
aaa
lock
loopne
sar
mov
or
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
outs
(bad)
int3
(bad)
aam
cwde
fdiv
loop
push
ds
dec
ja
ins
mov
ret
les
cld
adc
scas
jnp
or
add
xlat
pop
mov
popa
dec
lods
cmp
lea
jo
addr16
add
cs
push
loopne
shl
adc
cmp
ins
or
scas
out
mov
push
add
(bad)
aaa
outs
leave
repnz
out
mov
daa
daa
mov
into
sbb
dec
xchg
mov
jns
push
pop
addr16
enter
call
push
int
xor
jns
lock
cmps
fadd
sbb
sbb
sahf
les
and
repnz
push
cmp
mov
xor
mov
push
stos
xor
cmp
jl
inc
rcr
test
fsub
pop
sar
je
cli
aaa
callw
shr
ret
ss
lahf
in
sbb
mov
add
push
test
sar
push
and
pop
dec
jecxz
cld
mov
add
into
mov
jle
xor
xchg
(bad)
push
(bad)
(bad)
and
pop
inc
mov
jle
cmps
sub
pop
mov
mov
sbb
sbb
push
xor
jb
out
mov
xchg
dec
dec
mov
inc
sub
add
out
cmps
mov
clc
ja
sub
sbb
xlat
mov
cmp
sbb
push
movs
mov
adc
cmps
xchg
push
pmulhw
ss
mov
add
push
jnp
cs
dec
xor
mov
pop
rcl
stos
cmps
in
mov
(bad)
dec
jmp
mov
rcr
jmp
jge
rol
(bad)
adc
retf
out
(bad)
sbb
xor
out
int
(bad)
mov
sti
mov
jp
jbe
add
std
dec
xor
push
sub
mov
stc
cwde
(bad)
push
sbb
scas
mov
repnz
popf
inc
xchg
adc
adc
ficomp
mov
stos
ins
and
mov
push
call
push
enter
lods
pusha
inc
cmp
sub
or
das
outs
imul
pxor
test
jmp
pusha
sbb
xchg
ss
out
hlt
addr16
mov
lods
ret
test
sbb
(bad)
mov
jnp
(bad)
int
or
hlt
pop
mov
hlt
fs
pop
push
sbb
mov
fbstp
jae
xor
test
xchg
mov
jmp
pop
jl
mov
xchg
js
aam
clc
mov
iret
jns
das
add
mov
out
and
dec
jmp
cmp
movs
mov
rol
jns
inc
jno
aaa
xor
adc
push
push
imul
fdiv
sub
xor
sti
fwait
xor
xchg
mov
imul
test
cmp
clc
or
add
les
retf
mov
(bad)
clc
scas
ss
es
mov
fcomp
cmp
push
mov
and
xor
(bad)
jmp
dec
jae
es
pop
push
ins
arpl
mov
inc
jo
sub
out
hlt
adc
or
test
pop
pushf
fmul
sbb
jo
pop
cmp
es
and
mov
cli
mov
xor
shl
ds
lahf
push
dec
stos
cmp
pop
pop
test
icebp
add
pop
mov
sbb
(bad)
xchg
call
push
ficomp
into
cs
pop
pop
pop
iret
dec
sbb
or
shl
stos
data16
mov
jecxz
xchg
pop
push
jae
cmp
adc
enter
mov
mov
dec
mov
movs
nop
pop
push
cmp
sti
mov
push
je
iret
addr16
adc
jns
push
shl
push
inc
sar
call
inc
mov
jmp
test
or
shl
xor
lods
clc
dec
enter
scas
pop
sbb
push
push
adc
and
push
mov
test
and
adc
dec
or
mov
outs
stos
enter
xlat
add
or
shl
xchg
retf
or
mov
(bad)
add
sahf
movs
das
push
stos
mov
cld
or
je
or
sub
out
adc
push
sub
mov
cmp
xchg
jmp
xor
or
or
xlat
dec
stos
cmp
in
adc
outs
mov
mov
fwait
clc
cmp
mov
clc
icebp
push
inc
push
mov
adc
rcl
push
out
ret
jp
test
cwde
fs
lods
fs
mov
add
ror
jecxz
sbb
and
fimul
loopne
pop
into
fst
mov
cmps
in
sub
(bad)
mov
(bad)
dec
aas
cmp
and
cmp
add
jne
xchg
popa
xor
test
inc
xchg
add
pop
ret
cwde
ror
ja
idiv
fisubr
je
push
add
push
not
call
lock
loop
(bad)
mov
xchg
popa
sahf
adc
in
pop
hlt
xchg
xchg
mov
mov
mov
pop
pop
sbb
shr
add
in
dec
cmp
cmp
xchg
(bad)
(bad)
cld
mov
xor
push
mov
inc
pop
outs
ret
enter
nop
xor
jbe
pop
inc
rol
inc
push
stos
sub
loop
sbb
or
push
out
lds
xchg
enter
and
pop
mov
fisttp
inc
movs
lods
sbb
push
xlat
rcr
fcomp
pop
jecxz
lods
mov
mov
test
popf
mov
pop
add
pop
xor
cdq
or
not
adc
daa
stos
cmp
jae
call
mov
mov
arpl
fisub
fst
fcomp
popa
mov
mov
retf
outs
dec
push
js
cmps
mov
mov
fild
cmp
adc
call
cmps
int
dec
and
xor
pop
push
inc
sbb
adc
in
sbb
in
fldcw
fwait
dec
nop
mov
pop
test
pop
in
dec
into
xchg
sti
mov
mov
fs
ja
mul
add
cmp
fs
loope
retf
out
or
adc
dec
mov
lods
pop
mov
xchg
das
sar
inc
add
rcr
shr
cld
pmaxub
cmp
push
xor
sbb
dec
jl
jmp
xchg
mov
mov
pop
mov
outs
mov
das
scas
sub
mov
push
xchg
fadd
mov
cwde
pop
lods
es
aas
xor
(bad)
cli
popf
es
ins
push
mov
pushf
xchg
dec
jb
and
cmp
jg
xchg
call
pop
dec
fpatan
sub
fild
add
js
mov
push
pop
pop
pop
ins
loop
cmp
mov
bound
(bad)
leave
cwde
pop
sub
jecxz
not
test
repnz
xor
cmp
xor
add
mov
dec
jmp
inc
jnp
push
fdivr
jae
mov
(bad)
(bad)
scas
mov
dec
fidiv
mov
dec
daa
or
push
vmwrite
sub
movs
cmps
mov
es
jmp
sbb
in
dec
idiv
inc
xor
ror
inc
pop
mov
mov
shl
jl
add
mov
sub
sub
(bad)
push
into
adc
and
sbb
stc
aad
inc
das
fs
push
fcomip
sub
into
push
popf
in
retf
lods
pop
pushf
add
std
sub
mov
add
sub
dec
imul
popf
(bad)
std
icebp
cmp
cwde
push
mov
jae
repnz
or
int
popa
xlat
and
popf
int
addr16
not
xchg
pop
iret
inc
pop
push
inc
cwde
test
adc
imul
in
adc
push
out
jmp
std
aam
(bad)
xor
cmp
push
fisub
push
loopne
inc
jl
jo
jae
jle
dec
pushw
pop
popf
mov
jo
mul
aad
fsub
ficom
out
mov
lock
push
popa
cmp
dec
cmovae
aas
cmp
cmp
(bad)
cdq
mov
dec
sub
(bad)
or
sbb
sbb
fsubr
cmc
mov
sub
xchg
icebp
or
int3
test
inc
add
lods
sar
mov
jbe
in
fisub
loopne
popa
or
fldenv
call
push
jmp
push
xor
push
push
adc
adc
push
ret
pop
test
and
ss
fsub
dec
xchg
imul
and
fld
int
dec
call
gs
fisubr
lods
dec
lods
(bad)
mov
out
and
mov
not
push
add
jmp
mov
push
pop
loope
dec
jp
sub
cdq
das
int3
xchg
bound
aaa
or
and
clc
lds
mov
aad
or
loope
pop
into
pusha
mov
jae
fstp
call
xor
scas
dec
out
jge
mov
push
outs
imul
lods
std
out
pop
test
shl
lea
inc
pop
push
movs
mov
pusha
dec
stos
push
cmps
jmp
sti
movs
mov
movs
fadd
sbb
inc
mov
pushf
adc
pop
lds
lahf
or
test
push
lahf
cmp
xor
fisttp
mov
(bad)
dec
and
and
mov
cli
out
rcl
adc
sub
or
lea
dec
(bad)
pop
mov
jle
das
add
jno
xchg
aad
fs
das
dec
dec
sub
lods
pop
dec
push
in
and
mov
stos
mov
mov
fisttp
ins
and
sbb
ja
xor
in
xor
sbb
test
sar
xchg
fwait
xor
or
lahf
mov
adc
cld
lds
iret
pop
xchg
mov
ret
mov
mov
pop
cmp
iret
jmp
fst
mov
aaa
hlt
add
ins
mov
jno
mov
dec
or
fidiv
outs
mov
shl
fsub
mov
and
movs
xchg
xor
dec
sbb
ja
jle
stc
in
pop
icebp
adc
fidiv
sbb
sti
pushf
mov
inc
iret
cmps
cli
enterw
js
aad
aas
popa
fisttp
bound
fs
xchg
loope
shl
jge
pop
mov
xor
jmp
pushf
or
rcl
xor
ds
pinsrw
mov
mov
add
out
stos
jmp
mov
jne
adc
les
cmp
xor
jns
xchg
xor
gs
and
in
mov
pop
adc
out
mov
mov
or
sbb
push
cmp
mov
and
mov
and
retf
lea
fadd
clc
ja
add
sbb
lea
leave
sbb
inc
add
cmp
mov
xchg
dec
xor
mov
push
inc
(bad)
cmc
adc
call
dec
rcr
out
lock
(bad)
stc
aaa
lock
loopne
sar
cmp
dec
pushf
add
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
iret
fnstenv
mov
xchg
mov
xor
nop
jne
retf
jle
adc
jo
je
ds
out
test
jbe
(bad)
(bad)
adc
pop
jnp
test
add
mov
mov
mov
adc
sahf
repz
and
imul
inc
or
or
lods
or
out
cmps
jg
adc
sti
dec
fldz
dec
imul
repz
sbb
and
mov
or
test
or
sub
add
nop
mov
aam
jp
xchg
bound
and
sub
gs
sbb
cmps
cmp
dec
fdiv
pop
retf
addr16
cmps
jecxz
aam
test
shr
push
push
cmp
dec
or
jecxz
(bad)
jnp
cld
mov
scas
rcr
push
mov
cmc
scas
mov
loop
push
inc
scas
jnp
cmp
aas
sub
movs
popa
xor
lea
push
fnstcw
aam
adc
ins
stos
cmc
push
sub
out
fidivr
or
dec
es
out
dec
pminsw
repz
fcom
cwde
adc
jb
mov
adc
dec
xlat
inc
and
add
inc
shr
xor
or
stc
and
mov
cdq
outs
sahf
mov
sbb
adc
fmul
sub
push
sar
adc
pushf
add
rcr
das
jne
outs
(bad)
pusha
repz
pop
int
test
cmp
pop
sbb
push
int
dec
adc
leave
call
dec
fdivr
gs
push
cmp
out
xchg
rol
cmp
jge
inc
jge
in
adc
js
pop
in
jecxz
jnp
(bad)
clc
les
ror
push
stc
dec
and
push
jmp
icebp
mov
push
out
sub
cmc
jmp
jge
enter
xlat
or
and
cs
aad
xor
ins
test
aam
cmps
add
(bad)
lods
xor
mov
outs
or
enter
sub
pop
sbb
into
mov
repz
popa
ins
mov
mov
jb
ins
loopne
in
pusha
mov
xor
ins
mov
xor
jmp
push
mov
dec
mov
adc
mov
nop
xchg
das
(bad)
gs
in
jne
or
outs
pop
pop
mov
lahf
fs
xor
loopne
std
xchg
cmp
xchg
stc
int3
xchg
int
jne
push
jbe
sub
arpl
mul
xchg
shl
je
pop
into
jnp
(bad)
(bad)
(bad)
xor
xor
repnz
fst
loopne
mov
shl
out
push
popf
ins
adc
and
pop
fcomp
cld
jecxz
fs
sbb
mov
aam
mov
retf
pop
into
sbb
aas
or
fisubr
adc
in
sbb
mov
imul
outs
mov
cmp
lea
test
mov
dec
pop
mov
fstp
push
xchg
inc
jl
cli
xor
cld
mov
jbe
stc
sub
aas
aas
aaa
mov
fisttp
scas
ins
out
push
bound
mov
ret
push
sbb
sub
pop
fldcw
bound
xchg
in
arpl
pop
jno
cmp
xchg
mov
jmp
xchg
icebp
mov
add
cmp
mov
stos
fst
aas
jbe
dec
aaa
cmps
pop
push
add
and
mov
cmp
movs
mov
push
leave
cmp
cmp
inc
and
(bad)
adc
pop
sahf
int
fs
arpl
stos
ror
mov
rcl
xchg
adc
push
pop
aad
pop
or
xor
mov
sbb
data16
push
fdivp
mov
xchg
rol
push
sahf
mov
mov
push
scas
xchg
je
lds
ja
(bad)
jmp
test
clts
call
and
jp
sub
pop
cdq
push
fdivp
inc
(bad)
mov
mov
cmp
mov
add
leave
inc
test
pusha
pop
sbb
add
mov
fcom
cmps
sbb
mov
sahf
mov
mov
sub
ret
and
pop
pop
pop
dec
jo
pop
mov
push
lahf
fiadd
movups
sti
mov
and
movs
mov
sbb
mov
push
ficom
inc
and
xchg
push
inc
jecxz
inc
sub
out
cdq
dec
ret
clc
xchg
pop
fsub
xchg
test
mov
adc
jle
cmp
xor
in
(bad)
pop
nop
jmp
in
cmp
add
jmp
in
pop
mov
pop
dec
sbb
fild
cli
out
mov
pop
mov
js
js
xlat
sbb
scas
ds
xchg
fmul
add
lahf
aas
repz
int
fbstp
(bad)
fdivr
xchg
adc
xor
pop
pop
aaa
jne
jb
cmps
push
mov
pushf
mov
cmps
sbb
test
xor
shr
stos
iret
js
pop
sub
mov
aad
out
fsub
addr16
xor
dec
push
iret
xchg
jl
jb
and
mov
mov
and
das
add
mov
cdq
pop
cmp
cmp
fistp
(bad)
cli
fcmovnu
push
and
gs
fcom
scas
pushf
imul
pop
mov
jle
sub
not
into
rol
mov
cld
jl
pop
push
daa
sub
sbb
dec
shr
in
cmp
(bad)
div
sub
gs
out
inc
loopne
cmps
shl
test
clc
fidiv
rol
sti
fs
inc
sar
and
sbb
fnsave
movs
test
pop
mov
ja
adc
sub
sub
das
popa
iret
jnp
jne
push
and
inc
call
out
lds
sbb
add
pop
mov
add
or
test
mov
sahf
adc
iret
bnd
cmp
loopne
sbb
(bad)
mov
in
mov
cmp
inc
sti
mov
(bad)
into
(bad)
sub
lahf
mov
cmp
hlt
sbb
lods
cmp
out
dec
cmp
popf
addr16
pop
push
lea
cmp
jmp
cs
popf
dec
fwait
push
push
mov
dec
int
adc
jbe
shl
arpl
inc
test
shl
leave
mov
ins
ins
stc
jbe
mov
mov
lods
movs
lods
sub
lods
or
fnstcw
lods
mov
xor
aam
dec
int
loop
cld
pop
sub
nop
std
icebp
sbb
(bad)
dec
sbb
pop
cld
aaa
jge
jl
xlat
cli
sbb
push
scas
outs
jle
mov
movs
test
loopne
pusha
es
mov
in
mov
jnp
push
fidiv
pop
stos
add
mov
and
jge
enter
cmp
mov
(bad)
push
iret
xor
xchg
cmps
adc
mov
xor
push
pop
mov
rcl
sub
sub
mov
sahf
std
xor
leave
mov
es
dec
sbb
cdq
fnstsw
(bad)
mov
ins
(bad)
lea
push
mov
daa
mov
or
test
or
mov
gs
or
sbb
hlt
xor
test
fucomip
xchg
add
retf
sbb
repnz
sbb
fprem1
addr16
outs
add
dec
(bad)
aaa
jbe
test
or
pop
sub
xor
sub
xor
pop
test
dec
jge
lahf
ror
or
jno
inc
mov
retf
lds
pop
mov
std
rol
jmp
jo
outs
or
ror
(bad)
loopne
push
push
popa
int
mov
mov
jo
adc
jmp
xchg
dec
mov
fnstenv
pop
sub
rcl
xchg
xor
mov
(bad)
xlat
fdiv
or
retf
push
push
xchg
mov
repz
cmp
std
pop
mov
fsubr
jg
dec
cmp
call
lock
jle
out
xlat
outs
hlt
xor
sub
dec
fst
push
clc
retf
fiadd
mov
add
rcl
xor
retf
ja
sbb
mov
cmp
push
lods
xchg
pushf
xor
pushf
mov
daa
dec
aad
ins
sub
rcl
mov
dec
fimul
outs
shl
add
repz
sbb
ror
(bad)
outs
push
sbb
pop
xor
nop
jnp
aas
cli
jle
and
adc
push
xchg
xor
hlt
jne
jne
imul
pop
pop
and
movs
lods
push
(bad)
or
sti
and
fldcw
pop
cmp
push
sub
mov
arpl
call
sbb
es
cmps
imul
xchg
dec
hlt
mov
pop
adc
add
push
cwde
daa
xor
xor
push
imul
inc
xchg
mov
imul
es
sub
les
dec
(bad)
cmc
icebp
lods
adc
mov
xlat
dec
(bad)
ss
cmp
data16
pop
xchg
pop
cmp
mov
data16
fwait
jno
ins
fist
fcomp
sub
(bad)
xorps
or
repz
mov
shl
push
add
sub
xchg
dec
arpl
mov
es
loop
dec
fld
and
cmp
cwde
push
gs
mov
sub
jmp
cmp
mov
push
mov
or
mov
cmps
mov
mov
inc
mov
cmp
xor
adc
pop
adc
mov
mov
leave
call
shl
xchg
fwait
hlt
sbb
xor
push
ds
add
add
je
ins
push
xor
mov
aaa
scas
jmp
inc
sar
xor
sahf
imul
shr
mov
or
fmul
xor
lods
cmc
push
dec
daa
div
hlt
cmp
pop
sub
retf
out
repz
(bad)
or
ret
into
addr16
pop
daa
xor
mov
leave
in
addr16
out
add
sbb
cmps
stos
test
fdivr
scas
(bad)
out
add
adc
loop
(bad)
sbb
push
cmp
jno
(bad)
sahf
jmp
mov
test
jmp
jmp
mov
xchg
xchg
push
cmp
or
outs
cmps
push
(bad)
outs
mov
pop
or
sub
and
pop
inc
and
xchg
scas
inc
out
xor
inc
(bad)
sub
icebp
jnp
jbe
in
sbb
shl
add
adc
push
call
inc
mov
clc
les
inc
mov
xor
mov
cmp
sti
inc
xor
adc
loop
mov
popa
xor
jns
adc
cmp
les
mov
out
loopne
xchg
lahf
mov
and
shl
in
jmp
pop
clc
inc
mov
ins
ficomp
inc
ds
(bad)
jmp
or
retf
mov
out
lods
add
inc
(bad)
loope
daa
jmp
inc
lock
pop
cmp
add
or
jmp
xor
dec
popa
popf
or
sub
mov
xchg
pop
int3
xor
fild
dec
cld
sbb
pop
ins
movs
dec
and
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
scas
popa
ret
in
xchg
xlat
in
fcom
cmps
fcmovnbe
xor
ja
fstp
ret
je
cmps
outs
mov
rcr
pop
idiv
adc
inc
imul
cmp
sti
xor
jb
adc
fild
movs
mov
in
jmp
push
add
pop
lea
sub
repz
sbb
or
retf
scas
and
pop
mov
mov
mov
xchg
mov
cmp
rcr
es
pop
(bad)
pop
xchg
add
inc
dec
sub
cmp
stc
mov
push
adc
aas
aaa
sub
add
cmp
out
mov
mov
jo
sub
rcl
fistp
ror
pop
push
pop
mov
dec
push
aaa
pop
retf
mov
movsx
jbe
mov
push
inc
push
adc
inc
shl
out
add
jp
pop
dec
sti
mov
in
(bad)
cld
adc
stos
adc
xor
pop
cli
jl
repnz
jg
icebp
loopne
cmp
in
fist
mov
inc
mov
xchg
push
inc
repz
push
add
ds
pop
or
dec
xor
or
ja
pop
pop
mov
pop
jmp
xchg
fiadd
mov
adc
int
popa
inc
xchg
adc
xor
mov
xor
jp
xchg
mov
out
jno
fwait
and
sbb
jno
pop
call
jae
into
xchg
jecxz
jns
xor
(bad)
mov
pop
cdq
cdq
inc
rcr
imul
dec
ds
mov
popf
lods
stos
clc
lock
movs
rcl
jns
imul
retf
jecxz
fstp
or
shr
shl
mov
adc
sbb
xchg
fnstcw
jb
and
fld
test
dec
loope
mov
cmp
int
dec
dec
add
and
cmp
lahf
lock
aad
stos
outs
shl
lock
ja
adc
(bad)
jle
fnsave
clc
sbb
mov
std
gs
pop
mov
mov
gs
test
sub
inc
(bad)
hlt
imul
jmp
arpl
sub
xchg
mov
sbb
in
mov
lea
imul
out
(bad)
ret
xchg
shr
out
push
cmp
inc
jl
je
adc
xchg
cli
jmp
pop
cdq
popf
out
retf
sbb
out
sbb
sbb
test
and
pushw
adc
mov
loop
and
popf
dec
mov
std
jmp
je
sbb
mov
je
jecxz
sub
sar
ins
retf
pop
pop
lock
arpl
test
pop
mov
loop
sahf
adc
cwde
stos
shl
push
cmp
xor
daa
test
(bad)
and
push
popf
xchg
jae
icebp
xchg
cmc
fmul
(bad)
retf
in
jmp
mov
daa
cmp
sbb
mov
sub
pop
sub
arpl
push
daa
retf
push
mov
fldln2
cdq
(bad)
jp
xchg
push
adc
sub
je
dec
jmp
enter
jae
jo
dec
or
stos
push
imul
scas
add
lods
(bad)
loopne
pop
jnp
pop
push
sbb
adc
push
or
mov
inc
adc
stos
aad
daa
push
in
and
vcvtsi2ss
xchg
clc
jmp
mov
xor
and
lahf
test
inc
test
jg
inc
cmp
inc
stc
mov
iret
shl
pop
push
out
inc
aad
retf
fs
dec
es
adc
or
jnp
xchg
adc
add
xchg
mov
xchg
sti
jne
imul
cmc
inc
xchg
into
in
inc
fs
rol
xor
iret
xchg
lods
(bad)
jge
retf
dec
sub
mov
outs
mov
mov
mov
push
fistp
in
fist
mov
push
mov
call
jl
leave
sub
mov
pmulhw
mov
add
(bad)
jl
mov
cmp
lea
pop
aam
mov
scas
leave
fsubr
jae
fadd
pop
push
lea
test
lods
mov
add
dec
cmp
push
mov
fst
repz
jo
mov
sub
shl
addr16
imul
cmp
or
mov
pop
mov
ror
push
xchg
push
out
out
inc
loop
ds
je
xor
or
or
sub
pop
ins
and
xchg
push
cwde
ror
das
(bad)
in
loopne
push
add
push
test
inc
sub
out
mov
pop
lahf
sti
or
push
popa
push
fld
in
dec
stc
test
data16
mov
pop
xor
or
ins
ins
xchg
mov
movs
cmps
daa
and
clc
pop
js
jg
mov
test
js
sbb
(bad)
mov
in
mov
test
lahf
fsub
int3
dec
pop
fstp
pop
ficom
sbb
push
sub
data16
push
mov
(bad)
aad
stc
jg
and
xor
mov
or
dec
stos
cs
out
ins
(bad)
or
push
sahf
sbb
jg
pop
jecxz
xchg
jnp
or
out
sbb
dec
mov
shr
scas
test
std
sar
cmp
pusha
inc
xchg
jmp
ins
dec
jmp
mov
jmp
cmps
inc
(bad)
push
jns
add
mov
adc
xchg
sub
out
adc
cmp
pop
and
out
sub
mov
mov
dec
aad
in
inc
stc
inc
pop
xchg
in
ja
mov
imul
sub
outs
inc
enter
add
outs
(bad)
or
sbb
dec
test
dec
aad
sub
jp
mov
call
add
sbb
pop
(bad)
lahf
frstor
ret
clc
jae
xchg
call
nop
add
fld
mov
jp
sti
scas
xchg
or
mov
mov
and
loopne
mov
(bad)
cwde
shr
adc
or
idiv
jbe
cmc
lea
add
sbb
cwde
fnstcw
mov
or
fidivr
lock
sbb
mov
fld
pop
hlt
fxch
repz
stc
out
(bad)
movs
fbstp
out
cmp
jg
test
push
movs
outs
lahf
xor
jmp
popf
movs
adc
inc
(bad)
ret
shl
or
cdq
imul
xchg
mov
push
jmp
add
xchg
xchg
fist
test
mov
adc
int
repnz
inc
sub
(bad)
cdq
xchg
adc
fwait
sub
pop
pop
movs
mov
in
out
lea
sbb
outs
cmp
mov
fcomp
sub
lods
lahf
xor
cmp
dec
imul
(bad)
inc
inc
cmps
in
xchg
out
cld
cs
or
mov
xor
(bad)
ins
pop
cld
mov
xlat
cld
lahf
bound
cs
or
and
shl
push
mov
call
or
xlat
cwde
in
das
bound
xchg
inc
cs
sbb
sbb
add
ret
xchg
jmp
dec
push
push
cmp
push
es
jmp
inc
lods
jg
pop
das
jb
push
xchg
lock
sahf
aas
ss
ret
dec
mov
ja
push
add
xchg
mov
(bad)
ds
adc
leave
outs
mov
dec
push
push
mov
retf
dec
mov
jg
pop
mov
aad
(bad)
cmp
pop
cmp
sub
jae
loope
loopne
sub
popf
xchg
mov
daa
aad
push
adc
loope
and
mov
xlat
mov
in
xchg
push
mov
push
test
pop
inc
outs
adc
int3
push
out
retf
jp
push
outs
xor
lahf
push
loop
push
test
repz
pushf
push
movs
pushf
dec
and
out
arpl
fs
idiv
std
repnz
lods
mov
movlps
in
imul
jge
cli
dec
mov
xchg
pushf
fldcw
adc
aas
hlt
inc
pushf
jmp
imul
cdq
dec
pop
fsubp
sbb
cld
mov
and
and
xchg
xor
mov
mov
fidiv
retf
or
inc
in
push
xor
sbb
pop
cs
xor
inc
dec
stos
add
aam
cmp
out
adc
and
push
iret
popf
cmp
pop
add
fs
mov
mov
xor
xor
ins
xor
and
mov
leave
add
ins
daa
sbb
arpl
outs
push
lods
jbe
push
dec
mov
ds
and
lods
pop
xchg
int
jmp
dec
aaa
in
mov
out
push
jns
sbb
jle
fsubr
adc
aaa
imul
sbb
mov
jo
ret
or
popf
cmp
pop
inc
fdivp
rcl
test
(bad)
in
jge
xor
or
psubw
dec
ins
sbb
inc
sub
(bad)
mov
je
int
test
mov
je
in
addr16
sbb
cmp
mov
jnp
movs
pop
pop
mov
test
jae
sub
adc
ds
dec
pushf
out
xchg
xchg
cmp
in
push
ins
ins
adc
int3
inc
inc
sbb
lea
jmp
mov
fld
push
jle
mov
outs
lahf
hlt
fisub
mov
in
icebp
leave
mov
add
mov
adc
jmp
cmps
addr16
int3
xchg
xchg
dec
out
cli
nop
adc
push
inc
inc
gs
dec
mov
int3
cdq
jmp
push
clc
mov
fwait
gs
or
jge
ds
leave
in
(bad)
shl
sub
bound
rcr
(bad)
mov
xchg
out
xor
xor
call
daa
loopne
pop
ficomp
mov
jno
dec
push
adc
mov
cwde
xchg
(bad)
fisubr
push
mov
cmc
mov
fst
push
ins
xor
jge
repnz
dec
mov
bound
out
mov
inc
xchg
jp
mov
cwde
pusha
stc
rol
out
retf
push
or
lahf
outs
cdq
fwait
stos
subps
push
stc
xchg
xchg
int3
mov
(bad)
push
loope
or
push
ret
add
mov
cli
xor
sbb
push
outs
xchg
sub
xchg
xor
in
xchg
xor
out
fst
push
jnp
jecxz
mov
xor
stos
push
xchg
or
in
jne
cmps
inc
mov
les
out
(bad)
mov
enter
test
push
jns
push
push
retf
ret
cli
into
push
fisub
out
inc
cs
outs
or
pop
dec
add
mov
fwait
xchg
mov
mov
mov
shl
dec
je
lods
psubd
cmc
in
les
cmp
cmps
jnp
pop
sbb
mov
sbb
or
and
into
sbb
in
out
xlat
mov
cwde
inc
push
cmp
jns
push
aam
aas
cli
sub
leave
xchg
jp
xchg
movs
and
sbb
adc
fstp
lods
jnp
xor
and
neg
pop
push
mov
adc
jns
ret
jp
imul
mov
(bad)
sub
jno
dec
pop
push
jle
rcr
fs
jno
(bad)
sti
mov
sbb
dec
lock
loopne
sar
loopne
add
aas
es
je
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
xchg
ins
jle
pop
xchg
xchg
jns
sbb
pop
and
xchg
jne
fldenv
jb
(bad)
lods
mov
sbb
sti
test
fstp
hlt
mov
das
loope
add
call
xor
loopne
in
hlt
adc
fs
movs
xor
call
dec
sbb
lea
rol
in
jmp
inc
push
test
inc
inc
scas
test
add
ret
out
das
mov
cmp
dec
(bad)
js
mov
shl
ret
pop
inc
mov
pop
sti
pusha
add
clc
jle
bound
out
(bad)
xor
sbb
push
pop
jg
sbb
cmp
outs
mov
pop
push
je
lods
mov
dec
icebp
test
test
pop
scas
inc
popf
mov
xchg
mov
neg
push
push
cmp
mov
shl
int3
test
ja
jecxz
dec
out
in
lods
inc
dec
daa
fucomip
cmp
rol
aas
out
or
sbb
push
cmp
push
jp
mov
repz
mov
cmp
cmp
mov
mov
loope
xchg
lods
jle
add
(bad)
fmul
xchg
ds
jmp
push
imul
scas
cs
pop
hlt
jno
jae
stos
mov
xchg
mov
loope
call
sub
cmps
inc
hlt
sahf
fwait
or
cmc
jae
fidivr
jne
hlt
xor
les
repnz
sub
jle
repnz
pandn
cmp
pop
arpl
push
pop
xor
jecxz
call
scas
pusha
in
sti
lods
fimul
in
fsubr
lods
push
(bad)
repz
mov
ins
mov
out
mov
call
ss
cs
inc
dec
add
and
lock
xchg
ds
mov
jbe
cmc
dec
sbb
push
pop
mov
or
dec
das
cmps
imul
sbb
dec
in
enter
mov
pop
std
cmp
cmp
movs
pop
outs
xor
xchg
retf
jmp
test
fsub
popf
pop
mov
add
inc
icebp
rcl
(bad)
sbb
int
leave
leave
mov
or
mov
xchg
cmps
sahf
jae
xchg
ds
jae
retf
xchg
jno
movs
and
fadd
and
push
aad
aam
loope
out
in
jns
int
sbb
ud1
jns
ins
mov
or
hlt
nop
mov
push
jns
loop
xchg
cli
arpl
out
mov
mov
loop
jb
les
ins
fisub
jo
add
push
xchg
iret
int3
xchg
ror
mov
push
stos
arpl
pop
sti
mov
mov
dec
test
mov
mov
repz
cmp
lock
xor
mov
(bad)
in
push
dec
scas
xor
mov
dec
mov
scas
mov
inc
cmp
retf
repz
mov
push
(bad)
xor
fsubr
sti
inc
sar
mov
mov
shl
jae
add
pop
xor
dec
lock
jne
shl
out
push
(bad)
stos
fsub
xor
adc
sahf
fcomp
icebp
inc
xlat
push
cmp
cld
das
jae
(bad)
sti
jp
mov
(bad)
cld
out
mov
xchg
pop
enter
clc
mul
daa
cli
push
inc
jge
adc
ins
std
adc
jo
std
mov
pop
scas
or
push
xchg
dec
cmps
popf
mov
push
add
mov
stos
push
adc
cmps
cwde
cmp
adc
mov
mov
arpl
add
movs
mov
pop
cdq
imul
in
adc
pop
mov
or
in
pop
and
inc
push
inc
(bad)
and
lahf
jns
ja
enter
sbb
xchg
cli
lahf
test
pusha
enter
adc
mov
mov
(bad)
adc
ret
inc
jnp
in
movs
leave
xor
mov
mov
sub
cmp
mov
aaa
test
mov
nop
cmc
inc
xchg
push
ficomp
dec
bound
cmp
dec
es
xor
push
pop
enter
popf
jns
inc
pop
adc
test
mov
(bad)
(bad)
fcmovbe
movs
push
jmp
jle
js
repnz
or
pushf
jae
adc
fsubp
scas
inc
push
js
loopne
retf
mov
pusha
fadd
ds
adc
dec
jecxz
std
es
mov
and
jg
popa
xchg
sti
mov
add
mov
rol
cmps
out
int
pop
repnz
pop
mov
adc
arpl
retf
push
scas
xchg
sub
clc
das
test
inc
and
push
repz
cmp
jge
out
es
in
xor
shl
mov
out
pop
add
jge
out
inc
ins
popf
arpl
jmp
push
mov
and
ins
mov
aas
(bad)
xchg
aam
das
movs
lods
add
sar
xor
out
cmp
ret
in
cmps
mov
cmps
cs
xlat
popf
loop
mov
fsub
retf
pusha
xchg
sti
(bad)
in
mov
sbb
sbb
mov
sbb
loope
lahf
addr16
fs
jle
out
push
(bad)
sub
xchg
xchg
sub
fsubrp
imul
inc
cli
in
cmps
jmp
mov
(bad)
je
cmp
mov
retf
rol
push
pop
jnp
ds
aad
idiv
rcr
mov
call
pop
push
addr16
jg
pushf
jmp
je
loope
popa
or
xlat
xor
stc
nop
push
mov
xchg
in
sbb
arpl
shl
push
sub
fstp
enter
push
sbb
imul
push
ja
cli
pusha
mov
ret
retf
cmc
es
sub
mov
cmps
lods
out
rcr
in
add
stc
test
dec
cs
xchg
sti
(bad)
jmp
or
sti
leave
bound
xchg
pop
and
push
cs
loope
div
les
jae
jne
mov
xor
cmp
fst
sbb
ins
mov
or
inc
sbb
dec
pop
adc
std
inc
es
xor
pop
scas
mov
arpl
stos
mov
int
rcl
fpatan
(bad)
jge
fld
pop
xchg
retf
jmp
(bad)
cli
(bad)
jmp
js
pop
in
mov
mov
fsub
add
out
lahf
jmp
cld
and
hlt
call
daa
outs
jbe
xchg
popa
cdq
mov
pop
add
(bad)
in
repz
bswap
int
or
je
xchg
retf
cs
fidivr
jl
push
scas
in
push
mov
mov
cmp
mov
ret
dec
fsubr
or
fs
push
lahf
push
cmc
xor
pop
jmp
(bad)
adc
sub
test
jno
(bad)
pop
(bad)
cdq
cmp
cmp
retw
leave
dec
out
dec
inc
lock
out
xchg
call
imul
or
in
cmc
mov
sbb
sub
popf
dec
cmps
stos
call
in
fsubr
mov
cmc
aaa
xor
mov
out
jb
idiv
add
sbb
push
sub
mov
in
std
or
mov
jl
in
add
mov
jmp
pop
sbb
jae
addr16
adc
nop
inc
inc
jmp
jmp
mov
shr
and
cmp
and
stos
dec
jmp
xchg
scas
xor
ins
mov
outs
cmp
push
(bad)
arpl
out
cmp
adc
push
cli
xchg
popf
pop
cwde
add
inc
cli
jnp
jo
mov
rcl
iret
fisub
mov
or
xor
xor
inc
mov
add
cwde
xor
or
jmp
pushf
std
mov
xlat
sar
mov
mov
fwait
inc
inc
movhpd
shl
pop
aaa
push
int3
lock
dec
pop
push
adc
scas
daa
sti
mov
movhps
xchg
sub
fist
cmps
out
jo
or
dec
fs
(bad)
xchg
clc
fstp
push
xchg
pop
jb
push
inc
cmps
scas
hlt
jnp
fcmovbe
cmp
idiv
mov
aad
adc
add
ret
ss
lods
adc
push
or
cmp
push
mov
in
ins
sar
adc
imul
repz
inc
popa
leave
mov
(bad)
out
pop
mov
test
(bad)
fild
mov
add
daa
pop
sub
mov
sub
push
jae
mov
ss
push
sub
fisubr
int
push
xchg
dec
ss
pusha
adc
in
sbb
out
mov
fsubr
(bad)
mov
and
pop
add
xchg
adc
fild
jmp
inc
(bad)
fninit
into
sbb
aaa
jg
mov
lock
xor
jae
inc
pop
inc
(bad)
les
fcom
clc
popw
sub
outs
rol
xchg
daa
add
in
sbb
retf
add
scas
inc
lods
xor
pushf
xchg
xchg
hlt
xchg
xlat
adc
rcr
stos
jne
cmps
(bad)
in
(bad)
sbb
mov
add
aas
inc
pop
xor
inc
shl
pop
or
sbb
or
push
stos
mov
mov
pop
dec
inc
outs
xchg
xchg
rcl
jp
pop
inc
(bad)
push
scas
pusha
inc
jae
add
out
gs
dec
xlat
fsubrp
out
dec
sub
adc
nop
push
sub
cmps
repnz
sbb
xchg
test
lods
icebp
or
push
shr
jmp
test
std
pop
pop
xlat
adc
scas
lock
add
mov
mov
jmp
mov
xchg
push
imul
push
xchg
stc
fiadd
cmc
xchg
jecxz
cdq
lahf
shl
pushf
pushf
test
rcl
test
xor
ret
adc
jp
sub
sbb
imul
retf
ret
sub
ins
or
push
push
aaa
mul
leave
push
add
test
js
test
pop
dec
lods
xor
and
shl
xchg
or
dec
mov
in
sub
push
nop
enter
inc
out
popa
xchg
mov
mov
adc
fwait
out
xor
fld
enter
mov
mov
loop
call
popf
pop
inc
cld
mov
mov
sub
outs
ss
or
cmps
je
leave
mov
sub
push
(bad)
retf
mov
scas
out
xor
jecxz
jmp
mov
mov
push
or
mov
in
jge
mov
aad
pusha
(bad)
int3
test
push
icebp
jmp
push
adc
das
and
inc
mov
add
sub
shl
push
jnp
dec
ins
enter
outs
and
ret
movs
jp
dec
or
das
mov
data16
add
jmp
aas
mov
das
push
outs
aam
pop
outs
or
mov
push
push
addr16
push
leave
fisttp
lahf
inc
and
pusha
add
fnsave
sub
sar
data16
mov
add
dec
xor
inc
jmp
cmp
add
dec
mov
push
dec
fstp
xor
mov
fstp
push
jge
gs
push
pushf
pop
aam
jno
retf
jmp
daa
inc
call
nop
and
cld
rep
loopne
sar
dec
cmp
inc
rol
retf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
adc
addr16
gs
jno
fnstenv
cmp
popf
nop
xor
push
fnstcw
mov
xor
and
xchg
xchg
cdq
dec
(bad)
sbb
(bad)
in
hlt
mov
das
loope
add
or
sub
adc
xor
call
mov
add
dec
pop
(bad)
loopne
push
fbld
xlat
add
sbb
popf
sbb
push
mov
mov
push
dec
loope
add
fld
pop
loope
push
push
cmps
das
into
sub
jp
sub
push
hlt
pop
mov
mov
push
fmul
jle
hlt
dec
push
or
data16
adc
scas
popf
out
mov
sub
shr
cmp
jmp
test
xor
(bad)
lea
(bad)
sbb
xchg
push
lahf
stos
pushf
mov
(bad)
call
in
rcr
push
aad
fsub
in
movs
jnp
adc
mov
dec
jle
stos
hlt
xchg
push
(bad)
mov
cmc
cmp
jns
(bad)
cwde
in
fst
push
mov
imul
or
fadd
dec
xlat
ja
out
dec
dec
adc
or
imul
ss
shr
push
inc
pushf
loopne
add
or
in
les
not
leave
fwait
sub
fcom
cmp
movs
dec
mov
in
int
jge
and
ins
jns
sbb
inc
push
xlat
gs
(bad)
clc
in
das
lahf
push
out
dec
fimul
fwait
daa
adc
cmp
cmps
pushf
gs
(bad)
std
repnz
pop
stc
dec
jno
addr16
loop
cmp
enter
sub
pop
mov
add
jge
or
jne
pusha
test
outs
out
pop
mov
or
inc
lods
jne
pusha
loop
cmp
pop
fs
lock
mov
je
xor
lea
fadd
mov
or
add
loope
mov
movs
jge
xchg
xor
sub
(bad)
leave
in
xchg
add
das
pop
push
je
xor
mov
inc
xor
sbb
push
jmp
sbb
inc
iret
sbb
in
dec
test
imul
(bad)
jp
sbb
shl
adc
loop
mov
cmp
jecxz
loope
cli
js
cmps
popa
and
pusha
aas
lods
mov
or
jne
xor
mov
adc
in
aaa
push
test
jle
sub
mov
aas
mov
out
push
int3
sub
pop
out
push
pop
cwde
jecxz
sbb
cmp
out
fcomp
repz
xor
popa
fdivr
pop
pop
popf
inc
or
xor
ins
sbb
lds
daa
sar
out
adc
or
shl
cmc
mov
loop
test
test
movs
pop
push
push
stc
mov
sti
xchg
pushf
ins
test
sbb
pusha
sbb
sbb
js
int
xor
ja
dec
stos
mov
cmp
nop
sub
fild
neg
out
inc
jmp
push
scas
(bad)
mov
outs
mov
xor
(bad)
mov
inc
adc
stc
add
int3
jmp
dec
add
mov
outs
mov
sbb
ret
and
fld
cmp
mov
push
std
int3
mov
ja
mov
jnp
loope
scas
mov
test
retf
mov
push
int3
mov
popf
jl
push
addr16
and
jne
in
jl
xor
jmp
xlat
sub
push
and
lods
xchg
je
in
mov
icebp
dec
sub
mov
daa
sbb
shl
inc
sti
push
outs
popa
lahf
mov
jl
xchg
das
xchg
or
rcl
test
xchg
stc
fwait
inc
xor
jbe
aam
mov
inc
xchg
(bad)
clc
inc
ficomp
inc
sub
clc
push
mov
fild
pop
ds
into
neg
lds
lahf
jae
push
cld
inc
cs
sub
pop
adc
stos
cmp
xchg
cmp
(bad)
mov
fnstcw
dec
and
shl
cs
loopne
and
movs
in
dec
mov
cmp
retf
pop
aaa
cwde
inc
mov
aam
jmp
sti
xchg
shr
adc
push
jo
adc
sub
shl
jns
pop
cli
xlat
or
dec
xchg
cmps
mov
repz
jns
stc
cs
outs
adc
push
push
dec
inc
test
stc
fwait
sti
test
ins
jge
pop
jnp
xor
cmp
je
inc
pushf
jle
or
and
xchg
push
xchg
addr16
xor
icebp
pop
fiadd
hlt
and
outs
and
mov
shl
jbe
cmp
fst
les
dec
sub
fdivr
rcr
aam
mov
mov
mov
cld
pop
add
sub
icebp
aam
leave
(bad)
dec
cld
cmc
aad
repnz
or
push
pop
(bad)
mov
pushf
xlat
test
or
or
push
xchg
mov
pop
leave
sub
in
popa
jge
pop
ror
jmp
sahf
sbb
jns
std
pushf
(bad)
nop
test
cmps
js
iret
stos
xchg
popa
adc
(bad)
fimul
iret
sbb
das
test
iret
xchg
js
cmp
xchg
cmp
add
mov
mov
test
sub
movs
mov
add
dec
mov
jmp
bound
adc
and
loop
mov
sub
scas
mov
dec
pop
cmp
hlt
mov
push
inc
rol
or
mov
pop
aad
inc
sbb
adc
mov
into
cli
in
(bad)
sub
push
inc
xchg
add
jg
inc
or
ins
mov
xchg
xchg
jns
lods
push
xor
fxch
push
or
scas
rcr
jo
xchg
sbb
fld
jns
mov
mov
les
stos
sbb
dec
push
cmps
aad
and
call
sbb
jmp
xor
sahf
or
fisub
leave
xchg
cs
fdivrp
mov
inc
fmul
jbe
xor
or
in
repz
pop
mov
push
into
jmp
or
sub
test
or
pop
mov
xor
fxch
push
mov
outs
and
stc
data16
shl
repnz
cmp
sahf
dec
pop
fbstp
mov
je
das
retf
js
call
retf
(bad)
jb
mov
inc
std
cmps
add
cmp
scas
iret
dec
fs
jne
inc
mov
movs
xor
mov
and
leave
in
(bad)
loope
push
push
xchg
sub
add
(bad)
repnz
cmp
pop
popa
mov
iret
mov
retf
aad
sbb
sub
jmp
mov
mov
(bad)
ss
leave
aaa
cmps
push
das
cmps
mov
fiadd
sbb
aas
push
sti
inc
xchg
lods
inc
mov
movs
paddw
lds
add
repnz
sbb
mov
dec
add
jae
and
retf
adc
jp
idiv
pusha
sti
scas
mov
adc
mov
(bad)
cmp
lods
aas
sub
push
sti
inc
xchg
jmp
mov
(bad)
xor
in
clc
sbb
daa
inc
loop
add
ficom
mov
jae
int
adc
push
popf
stos
lods
repnz
mov
(bad)
fwait
mov
or
fstp
sub
bt
cmp
rcl
lock
in
pushf
sub
cmp
xor
or
jmp
out
push
inc
jae
cmp
cmp
leave
sbb
cwde
idiv
dec
and
clc
aaa
stos
xlat
stc
les
jbe
adc
sub
leave
addr16
aam
mov
and
jmp
jns
xor
retf
jne
jmp
push
mov
in
add
dec
stos
push
ja
shl
dec
or
cli
dec
fbstp
mov
sub
mov
scas
iret
dec
inc
aas
sbb
adc
or
neg
addr16
fistp
(bad)
arpl
bound
mov
jge
fcom
cmp
cmp
and
ret
icebp
fmul
sbb
daa
mov
mov
xchg
cmc
div
out
shl
fdivr
retf
imul
adc
mov
neg
pop
int3
test
in
lods
mov
fcomip
aas
dec
leave
cmp
fst
ficom
lods
mov
iret
cwde
ret
mov
jmp
or
(bad)
loope
adc
cmp
lods
sbb
adc
or
jg
addr16
cmps
cld
rol
sbb
das
stc
push
outs
adc
popa
adc
pusha
int
mov
adc
and
loope
adc
retf
das
scas
pop
mov
jge
inc
push
dec
sbb
into
fs
arpl
icebp
jge
out
dec
pop
gs
push
retf
ficomp
loopne
arpl
push
sub
aas
and
mov
push
aas
push
popa
xor
enter
inc
jno
mov
pop
enter
mov
push
int3
stc
retf
xchg
cmp
cmp
(bad)
out
mov
pop
mov
mov
lahf
mul
xchg
stc
cmp
ds
outs
daa
dec
xchg
ja
or
sbb
retf
cmc
mov
fidivr
xchg
dec
scas
ror
and
inc
call
inc
fisub
iret
(bad)
cmp
dec
bound
jno
sti
enter
adc
popa
(bad)
scas
lahf
dec
mov
jmp
ins
sti
jae
mov
stos
xor
adc
mul
adc
mov
pop
xchg
xor
mov
lds
xor
rol
test
(bad)
pop
aam
in
neg
mul
xchg
fnstcw
and
or
mov
cwde
icebp
pop
je
sar
dec
dec
pop
push
or
scas
mov
cmp
dec
ror
fist
mov
scas
push
sub
(bad)
jmp
push
movs
sbb
add
call
push
jg
cmp
add
jno
xor
packssdw
mov
repz
aad
sub
rcl
adc
inc
sar
pop
mov
push
ss
push
push
loope
dec
xchg
ret
not
xor
repz
in
add
daa
mov
test
je
fisttp
out
mul
cs
push
sub
add
cld
inc
inc
out
sbb
enter
popf
jno
cmps
mov
cli
or
sar
jns
cmp
cmps
push
xchg
dec
stos
out
push
cmp
sub
jmp
les
mov
mov
adc
cmp
retf
fwait
mov
mov
(bad)
(bad)
xchg
mov
mov
xlat
dec
add
scas
ds
movs
sbb
or
pop
sbb
outs
sbb
xor
xor
and
das
jae
stc
ds
cmps
ins
clc
(bad)
sub
dec
js
mov
aam
mov
mov
mov
call
adc
jecxz
shr
jno
push
gs
movs
jno
ret
cdq
test
cmc
jecxz
lds
repz
add
add
xchg
or
mov
push
cdq
test
pop
and
dec
in
scas
mov
popf
sub
fs
add
cmps
popa
jbe
adc
test
xor
scas
and
rol
xchg
mov
shr
push
push
fwait
ss
jle
jbe
xor
stos
inc
mov
loop
loop
pop
dec
sub
adc
xlat
popf
dec
mov
mov
dec
lock
loopne
sar
lock
sub
sar
in
int
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
add
dec
inc
inc
push
pop
inc
in
sar
cmp
or
add
das
sbb
mov
retf
mov
popf
mov
cmc
xor
push
sbb
inc
xor
mov
repnz
jnp
fmul
mov
into
mov
std
int3
popf
shl
popa
cmp
sbb
jno
outs
fmul
(bad)
lahf
lock
and
fild
je
dec
fisubr
dec
pop
mov
ss
ja
test
cs
and
mov
sbb
rcr
mov
jg
stos
arpl
adc
pop
outs
dec
pop
mov
stos
pop
fs
movs
cmp
mov
adc
sbb
xchg
movs
and
jno
das
xchg
xor
jae
(bad)
(bad)
cld
xchg
mov
jb
movs
sbb
xor
dec
push
shr
adc
sbb
sbb
in
lahf
jp
cmps
ficomp
iret
repz
dec
mov
iret
sbb
ins
arpl
xchg
mov
scas
repz
ds
jbe
jl
xchg
icebp
mov
cmp
sub
pop
sub
jne
mov
xchg
aad
ret
cmp
dec
cmps
push
jo
push
add
mov
inc
shl
pop
call
stos
sub
popa
ja
outs
fsub
push
neg
leave
xlat
fwait
jno
xor
dec
push
mov
outs
pushf
adc
mov
loopne
push
adc
test
out
mov
mov
lea
mov
rcr
cmp
cld
icebp
mov
push
mov
pop
jg
lahf
sub
je
rcr
(bad)
loope
sahf
sti
sbb
cdq
fnstsw
addr16
outs
dec
jge
lds
dec
std
repz
cli
dec
jns
ins
(bad)
fs
mov
inc
or
adc
icebp
mov
push
(bad)
test
push
xor
dec
or
add
adc
mov
mov
mov
lds
add
push
repnz
mov
and
xor
nop
push
mov
and
cmp
ret
xchg
mov
stos
jl
ret
fisubr
jg
ds
xor
or
loope
scas
jle
mov
mov
jg
imul
in
push
push
test
daa
jp
pop
or
popa
arpl
mov
fdiv
test
dec
sbb
xchg
sbb
xor
mov
sub
aad
jns
(bad)
gs
sub
inc
cdq
xlat
imul
mov
sub
cmp
lahf
and
cmp
mov
push
clc
mov
push
(bad)
mov
dec
xor
lods
inc
pop
jno
jb
test
pop
mov
xor
cmp
icebp
not
xor
mov
data16
inc
bound
popa
out
pop
gs
xchg
sub
bnd
pop
int3
rcr
fild
imul
pop
daa
out
sbb
int
mov
jne
cli
data16
shl
mov
jp
shr
cdq
or
mov
ds
jmp
or
adc
inc
push
jns
inc
jg
sub
cmc
popf
mov
push
repz
(bad)
(bad)
mov
mov
aam
inc
push
pop
mov
jl
leave
ja
inc
retf
adc
xlat
mov
daa
xor
xor
cmp
loopne
pop
push
js
xor
cs
xor
xchg
aas
cwde
and
(bad)
pop
push
adc
mov
int3
cmp
pop
inc
stos
in
pushf
js
rcl
add
dec
fdiv
lock
push
or
dec
movs
in
sub
push
pop
out
popf
ret
sbb
imul
adc
out
mov
xor
ficomp
in
lds
nop
inc
adc
(bad)
cmp
addr16
xor
js
jle
mov
aaa
or
jge
cmps
imul
mov
adc
inc
movs
cmp
loop
jne
fcomp
mov
dec
mov
test
dec
mov
bound
repz
imul
out
mov
inc
int
push
adc
cmc
ins
and
add
add
add
add
add
add
add
add
add
stos
cmp
(bad)
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
jmp
idiv
int
jmp
dec
ja
jo
out
hlt
hlt
mov
sbb
cmps
sbb
adc
aas
in
jns
iret
mov
add
call
jp
cmp
stc
fwait
dec
in
ins
pushf
jb
out
sbb
fistp
and
mov
test
pop
clc
sar
dec
jae
sahf
mov
jmp
stos
jmp
xlat
add
pop
push
scas
scas
ffree
lahf
and
dec
adc
lock
pushf
test
sub
or
xor
js
std
retf
and
xor
bswap
push
js
rep
pop
test
mov
(bad)
imul
xor
pop
jnp
inc
fdivr
dec
jb
cmp
repz
jo
daa
jmp
rep
std
xor
cmps
xchg
add
int
cmp
push
pop
(bad)
pop
test
ret
jp
mov
loop
inc
xor
cwde
xor
jae
popa
fnstcw
dec
cmp
or
mov
add
push
pop
mov
jnp
in
cmp
xor
and
mov
xor
jne
mov
bound
dec
iret
ror
pop
and
aas
jo
jmp
xor
mov
pop
or
add
inc
cmps
pusha
xchg
scas
aam
xor
jb
or
sub
call
add
test
repnz
outs
xchg
aad
inc
fsubr
inc
dec
dec
outs
mov
or
add
test
sti
dec
jl
mov
sbb
add
mov
ds
into
and
mov
mov
mov
jmp
bound
sub
push
xchg
loopne
je
pushf
xchg
cmp
daa
inc
(bad)
fadd
rcl
aas
cmc
adc
mov
pop
jns
mov
pop
mov
lods
sti
push
es
xor
adc
loopne
sbb
shl
push
jne
jecxz
loope
movs
mov
pop
data16
cmps
das
fdiv
lods
fild
mov
pop
and
xchg
scas
cmp
not
imul
jae
mov
clc
into
pop
fcomp
pop
pop
lea
or
jnp
pop
fsubrp
xchg
inc
in
sahf
in
loopne
test
xchg
push
repnz
fiadd
shl
jl
ds
push
dec
jp
inc
sbb
xchg
imul
shl
pusha
jbe
lods
mov
call
lea
movs
bound
mov
xchg
not
or
or
ret
call
dec
ins
jnp
shl
adc
push
jae
js
xchg
bound
mov
xor
sbb
push
shr
mov
shr
leave
and
lods
pop
cmp
inc
fisubr
add
ror
lods
pop
repz
mov
imul
xor
mov
mov
adc
jge
out
cdq
mov
fstp
mov
push
push
fidivr
movs
repz
call
fdiv
outs
aaa
scas
and
inc
or
mov
dec
and
sub
call
dec
sbb
xor
and
cmc
cwde
and
xor
mov
xor
in
or
or
test
sub
loope
stos
mov
inc
(bad)
iret
and
push
add
cli
test
mov
gs
cdq
mov
cmc
int
stos
mov
ins
jno
rol
and
adc
out
cld
and
cmp
mov
dec
push
cmp
mov
add
rcl
sub
cmp
test
adc
in
ja
pop
push
cmp
sbb
(bad)
pop
(bad)
jb
imul
call
jmp
stc
popa
pusha
adc
sbb
sbb
mov
scas
jecxz
aas
xchg
(bad)
mov
inc
mov
jmp
dec
inc
int
(bad)
scas
push
push
ror
push
push
mov
ds
dec
mov
sbb
jp
add
idiv
and
cmp
int3
outs
xorps
sbb
xlat
gs
add
imul
push
or
mov
mov
dec
cmp
(bad)
out
inc
dec
cmps
dec
retf
adc
add
add
ficom
not
mov
(bad)
scas
pop
(bad)
or
or
dec
imul
cmp
enter
das
or
(bad)
cs
(bad)
mov
fwait
or
and
clc
pop
dec
add
fadd
dec
adc
call
push
lahf
jmp
ins
inc
ja
sahf
ss
push
sub
stc
mov
xlat
das
lods
add
xchg
and
cmp
fistp
jnp
pop
std
fs
or
push
push
and
pop
fwait
mov
pop
test
mov
int3
xor
sbb
and
xchg
sahf
jge
pusha
pusha
scas
jle
ins
mov
lods
xlat
sar
or
arpl
inc
inc
lock
add
pop
shl
les
(bad)
call
mov
daa
mov
push
or
fisubr
mov
add
pusha
ins
jg
lea
xor
stos
daa
pop
xchg
xchg
loopne
xchg
pop
out
mov
jl
dec
in
and
movs
jae
push
pop
inc
sub
loopne
xor
xchg
inc
cmp
mov
dec
push
idiv
add
popa
fdivr
and
xor
ds
xchg
jmp
bound
jle
cli
mov
ins
dec
xchg
std
aaa
mov
or
popa
shl
loop
cmp
xchg
ficomp
sbb
sub
dec
aam
enter
sub
data16
inc
pop
shl
addr16
jp
sbb
mov
cs
retf
mov
(bad)
inc
jns
cmp
add
(bad)
scas
sub
inc
jns
stos
into
mov
fmul
adc
mov
call
outs
(bad)
stos
xchg
cmc
cmp
pop
arpl
pop
addr16
cmp
outs
xchg
test
push
stos
aad
mov
sbb
cdq
enter
and
add
cwde
inc
sbb
test
mov
pushf
push
add
cmp
in
mov
sub
aaa
mov
mov
(bad)
sar
(bad)
daa
or
pop
pandn
not
dec
call
mov
lea
pop
and
mov
sub
das
push
xor
mov
outs
dec
fst
dec
daa
jo
dec
xor
pop
mov
push
pop
dec
bound
mov
lds
adc
sub
adc
dec
sub
or
std
and
push
movs
(bad)
xchg
adc
cs
movs
mov
call
mov
das
std
sub
jle
jl
or
inc
jo
in
rcl
push
fcomp
jmp
pop
repz
sbb
mov
mov
aad
and
push
or
hlt
dec
mov
adc
inc
pop
push
sub
stc
retf
lods
jp
xchg
inc
jg
push
adc
mov
test
shl
and
fsub
dec
or
adc
rcl
pop
cmp
(bad)
out
push
dec
cmp
dec
clc
(bad)
sti
mov
mov
aad
ins
jecxz
sbb
aaa
cmp
ret
xchg
sbb
mov
lods
mov
push
push
test
mov
loop
inc
sbb
mov
jne
hlt
mov
or
xchg
loop
mov
xor
mov
xchg
movs
bound
clc
lock
jae
push
pop
scas
stos
fsubr
dec
call
movs
(bad)
icebp
mov
cs
jecxz
cmps
es
xor
push
out
add
out
or
dec
lds
scas
pop
nop
ins
stc
loope
jne
ror
bnd
mov
lds
ror
iret
icebp
sbb
jge
mov
lahf
in
call
xchg
xor
fnstsw
push
es
pop
lods
call
cmps
(bad)
push
repz
pop
xchg
in
test
cmp
je
sbb
(bad)
and
(bad)
out
imul
jge
xchg
movs
in
fild
shr
test
inc
xchg
add
cmp
mov
jecxz
sub
sbb
xor
adc
pusha
jno
jne
ds
push
or
mov
lock
ja
imul
imul
add
imul
lock
daa
addr16
xor
ja
(bad)
xchg
cmp
push
into
push
push
mov
mov
fdiv
pop
sub
and
jb
lods
cmp
push
mov
cmp
jmp
inc
in
pop
cmp
jg
pop
pop
das
pop
int
fstp
or
pusha
mov
and
jp
jb
dec
xor
jbe
push
xchg
imul
add
adc
repz
mov
cdq
inc
aaa
int3
js
cmc
fsubp
mov
and
lods
imul
dec
cmp
cmps
jbe
cmc
test
push
movs
sti
sub
repz
dec
fimul
mov
mov
es
cld
rcl
in
and
xor
mov
fld
mov
push
or
mov
in
sub
and
jmp
(bad)
nop
(bad)
cmp
sbb
jbe
push
push
loopne
movs
div
popf
inc
lods
cli
push
retf
rcl
cmp
xchg
es
aaa
xor
mov
sbb
sub
adc
pop
mov
dec
aad
(bad)
(bad)
jbe
adc
mov
imul
sub
sub
cmp
fsubr
cwde
fld
jno
data16
stc
je
or
enter
repnz
out
push
mov
mov
jle
into
outs
shr
into
jno
mov
jne
or
pand
push
imul
dec
fidiv
add
sahf
and
(bad)
xor
rcl
cmp
jnp
js
stos
pusha
out
fucomi
jmp
idiv
sar
movs
lea
push
into
rcr
sbb
movs
(bad)
fisttp
or
xor
ins
lods
adc
fist
jge
or
dec
add
call
cmp
dec
popa
mov
or
jmp
inc
dec
not
ins
sub
ds
out
scas
repz
mov
adc
repz
fsubrp
scas
adc
xchg
push
cmp
mov
repnz
or
push
jns
dec
push
push
pop
cdq
sar
mov
rcr
cmp
sbb
ret
dec
ror
mov
(bad)
in
and
ret
pop
push
sbb
out
push
ficomp
dec
dec
xchg
inc
das
aad
aam
retf
push
in
das
sti
aad
and
jnp
dec
outs
mov
inc
jne
jecxz
mov
fcmovb
add
cmp
push
xchg
pop
push
mov
pop
enter
jp
xor
mov
mov
fwait
xchg
sub
jp
mov
xchg
fsubr
arpl
xchg
call
lahf
repnz
or
jmp
nop
test
jge
pop
push
not
movs
sub
and
bound
mov
or
(bad)
xchg
sti
cmc
mov
mov
xchg
repnz
jg
or
lock
loopne
sar
lock
mov
dec
lea
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
cwde
xor
(bad)
sub
jmp
xchg
rcl
test
movs
inc
mov
xchg
nop
add
adc
shl
inc
clc
call
cmp
jno
cli
pop
ret
movs
es
rol
push
jmp
shr
sbb
fistp
fdivr
cld
imul
sub
out
mov
cmps
in
mov
popa
mov
popf
shr
std
or
adc
sub
cmps
xchg
cwde
icebp
fcmovu
cmp
jmp
adc
sbb
repz
push
fiadd
out
fsubr
in
int
pusha
inc
lods
mov
pop
cmp
mov
jle
adc
adc
outs
std
mul
lods
mov
jecxz
dec
je
or
and
fiadd
and
js
loope
lods
scas
fs
cmps
clc
add
sbb
loope
aad
lds
inc
int3
xchg
ja
stos
adc
fdivr
mov
fbld
sub
xor
inc
lea
lahf
or
jmp
mov
pop
push
iret
call
dec
inc
add
lds
and
dec
arpl
sbb
or
movs
xchg
xchg
clc
(bad)
cli
shr
inc
xchg
mov
push
mov
and
add
int
and
mov
and
iret
pop
fistp
adc
add
mov
outs
pop
(bad)
in
mov
out
jmp
shr
mov
fsub
jle
and
adc
dec
jecxz
and
cmp
xor
in
loopne
(bad)
mov
test
sub
pop
shl
or
push
mov
jle
add
cmp
cmp
ins
jle
neg
iret
dec
pop
pop
xor
int
dec
sahf
xchg
jnp
daa
pop
jo
fild
jle
cmc
or
jne
push
jnp
pop
pop
or
repnz
dec
je
dec
aas
inc
lds
daa
xor
mov
push
shr
(bad)
jecxz
pop
std
clc
in
repz
mov
push
inc
mov
mov
mov
mov
je
adc
fwait
dec
call
mov
dec
scas
xchg
hlt
and
inc
movs
push
stos
sbb
sbb
inc
and
xlat
jmp
mov
mov
(bad)
xlat
sti
inc
jle
pop
outs
sbb
and
jb
ffreep
clc
sbb
jo
push
jecxz
xchg
push
sub
not
leave
lds
mov
push
les
sub
dec
stos
push
xor
test
fwait
int3
aad
adc
in
jnp
es
sub
xchg
retf
inc
inc
lock
pop
lahf
stos
ret
mul
sbb
jmp
imul
pop
outs
mov
iret
mov
xchg
xchg
dec
sbb
sbb
push
xor
mov
scas
mov
sub
sbb
and
pop
sbb
and
aaa
jmp
pop
xlat
es
lea
and
jmp
and
(bad)
(bad)
mov
icebp
neg
mov
add
mov
mov
xor
clc
das
adc
mov
ds
loop
or
nop
(bad)
jo
mov
outs
xchg
mov
inc
sahf
jo
jmp
mov
mov
push
cmp
adc
xor
aad
icebp
sbb
and
ins
cli
mov
mov
les
cmp
lods
add
or
adc
mov
xor
jmp
into
jae
inc
loopne
xchg
or
mov
int
mov
ret
jle
pop
repnz
inc
test
pop
ja
(bad)
int3
mov
push
sub
inc
cmp
xchg
sub
ja
jmp
pop
adc
dec
pop
and
outs
dec
in
push
mov
sti
inc
je
adc
ss
fwait
fwait
or
adc
sub
push
adc
xchg
push
daa
cdq
pusha
shld
js
rcl
ins
jecxz
push
pop
mov
sub
sub
scas
xor
xchg
cdq
pop
out
jmp
scas
inc
mov
jo
outs
cmp
(bad)
jmp
sub
xor
jp
mov
inc
daa
fwait
out
lock
dec
jo
adc
mov
popf
xchg
push
sbb
inc
adc
jmp
xor
es
into
mov
adc
hlt
(bad)
scas
aad
faddp
cmp
ss
aad
xchg
rcl
jmp
push
in
aas
push
je
rol
jle
cld
pop
das
repz
int3
jecxz
ror
ficomp
sub
or
cmc
es
ins
xchg
sahf
lea
jge
cs
cmp
cmp
push
xor
inc
xchg
cmp
add
dec
push
js
dec
pop
(bad)
cld
rol
and
bound
imul
mov
not
add
jmp
ror
jb
cmps
pop
ror
fidiv
out
pusha
xor
dec
stos
sub
ret
sbb
popa
into
dec
mov
ins
pop
jb
stc
pop
fdecstp
and
xor
push
jmp
cmp
cdq
mov
push
fbstp
mov
std
test
test
pop
stos
and
dec
mov
and
mov
dec
pop
or
sahf
and
shr
lahf
aaa
pop
and
popa
xchg
arpl
cmp
lods
pop
push
setg
add
add
xchg
xor
enter
sbb
xor
loopne
dec
mov
xor
daa
dec
out
add
cmp
cmp
dec
sahf
pop
dec
pusha
sbb
stc
and
mov
sub
pop
xchg
sti
sub
or
test
jmp
sbb
push
sub
sbb
ins
xor
movs
in
adc
es
push
sahf
ret
lods
mov
pop
fistp
dec
bound
jl
cmp
enter
inc
in
mov
or
sbb
pop
cld
mov
aas
fs
sub
(bad)
mov
data16
xchg
xor
jno
mov
cmc
cmp
movs
pushf
test
mov
js
inc
push
out
jmp
test
push
hlt
es
cmc
loop
mov
sbb
pop
mov
pop
pop
pop
cmp
call
rol
cmps
jb
xchg
cwde
into
push
inc
lock
sbb
jnp
mov
push
or
cdq
jge
daa
mov
add
imul
or
cmps
adc
dec
xchg
ror
push
mov
clc
aad
movs
cmp
test
pop
dec
adc
int3
enter
aaa
pop
fild
(bad)
out
mov
retf
mov
mov
lea
shl
shr
repnz
fisub
(bad)
call
ins
lods
std
xor
pop
jno
and
xchg
(bad)
fstp
push
fimul
jge
aam
pop
out
pop
or
icebp
mov
(bad)
jo
mov
inc
mov
dec
push
mov
sbb
and
or
test
mov
push
into
daa
push
cmp
outs
les
lahf
xor
ror
mov
sbb
enter
test
mov
cmp
gs
mov
mov
push
push
enter
sub
add
inc
rcr
ret
add
test
call
test
mov
(bad)
popf
xchg
loopne
loop
(bad)
cli
push
xchg
push
addps
retf
js
or
jp
cmps
rcl
aam
jo
pop
mov
or
je
mov
inc
imul
test
mov
ret
or
retf
scas
and
jg
ror
xor
(bad)
xor
lds
xlat
pop
cmp
mov
sub
fidivr
mov
aad
fwait
sub
movs
or
mov
jmp
add
lea
cmp
test
pop
out
xor
mov
ds
mov
sbb
push
pop
and
nop
and
cmps
mov
jnp
retf
in
inc
outs
das
mov
arpl
inc
mov
out
ret
jne
mov
dec
fs
mov
popf
(bad)
movs
sti
sbb
test
jmp
dec
mov
not
or
in
ficom
das
gs
sbb
ret
adc
shr
pushf
aaa
jo
shr
mov
lds
clc
adc
leave
fsub
xchg
pop
mov
and
int
push
and
xchg
mov
inc
cmp
(bad)
sti
inc
or
out
sbb
cld
nop
mov
xchg
cld
inc
bound
pop
pop
jbe
xchg
dec
mov
(bad)
psllq
mov
or
mov
jb
vpshab
sbb
cdq
cmps
imul
fdiv
pop
call
mov
movs
jno
dec
and
inc
loopne
sbb
in
stc
mov
mov
aas
xor
push
dec
jge
jmp
pop
not
jmp
add
js
or
test
add
aas
loop
hlt
or
aad
dec
cdq
leave
mov
std
mov
pop
push
inc
pop
add
into
cmp
cmp
xchg
add
dec
sbb
fwait
cmp
xchg
cmp
sar
add
les
mov
js
and
outs
push
push
mov
pop
sbb
cmp
jae
into
jp
push
pop
(bad)
xchg
dec
std
xor
fstp
cmp
shl
push
fsubrp
pop
inc
das
cmp
mov
pop
push
(bad)
bound
sbb
dec
inc
jge
lods
sbb
rol
dec
arpl
leave
aaa
cmc
ficomp
cmp
jbe
sti
das
xchg
jmp
dec
dec
and
aaa
or
out
xchg
xchg
jmp
cli
repnz
les
adc
inc
push
or
loop
xor
xor
add
(bad)
jp
imul
push
mov
scas
into
scas
lods
ins
hlt
aas
hlt
or
imul
xchg
retf
ins
dec
(bad)
scas
les
pop
pop
sub
or
sbb
sbb
jl
fs
arpl
xor
mov
dec
jg
mov
out
(bad)
mov
jle
adc
dec
jno
dec
dec
lahf
dec
push
xor
call
ror
adc
ror
cmp
jns
mov
jmp
mov
mov
out
dec
scas
je
jge
fstp
ss
icebp
aam
add
ret
sbb
push
les
xor
fldenv
jp
adc
add
or
mov
mov
adc
jne
cmp
mov
mov
ror
push
inc
pop
loop
jmp
imul
fild
lea
stc
ret
into
pushf
inc
repnz
cmp
mov
ss
and
jl
(bad)
jl
push
test
pushf
xchg
aas
lock
sub
inc
jb
dec
sub
push
pop
pop
outs
iret
imul
(bad)
sbb
sbb
out
jmp
jmp
cld
(bad)
cs
cmp
fsubrp
xchg
cmps
rcr
jne
adc
add
(bad)
stos
xchg
xor
popf
jmp
outs
rcl
inc
xor
fisubr
or
jg
or
(bad)
pop
cli
push
push
call
mov
inc
fnstenv
es
sar
sub
je
sbb
mov
add
aaa
lock
loopne
sar
sar
call
jg
les
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
gs
movs
cmp
retf
and
jnp
enter
loope
(bad)
mov
push
into
retf
and
into
sub
fxch
enter
repnz
das
loope
add
push
add
stc
pop
sub
and
arpl
outs
sbb
retf
sub
cmp
adc
scas
ret
adc
and
test
or
pop
iret
xor
cmc
sahf
xchg
xchg
mov
and
or
test
mov
mov
and
(bad)
cs
test
inc
xchg
imul
xor
and
or
jecxz
lock
fstp
pop
push
add
fsubr
jl
aaa
inc
in
or
xchg
pop
and
xchg
test
xchg
xchg
sub
cli
add
ror
jb
sbb
fist
jl
jle
stos
pop
cwde
je
repnz
fild
jmp
rcl
mov
mov
retf
ss
mov
mov
mov
loope
pop
lock
movs
fst
in
sub
jg
call
add
shr
jb
out
push
cdq
sti
add
and
aaa
and
retf
shr
xor
hlt
push
xor
pop
adc
pop
jmp
sub
ins
cmp
dec
cmp
push
cmp
pop
or
je
and
lods
sub
cmps
xlat
xchg
fdivr
lods
mov
jp
cmp
mov
cs
and
pop
push
mov
add
enter
push
pop
inc
scas
and
dec
xchg
dec
xchg
fldcw
cmp
push
cs
adc
lahf
mov
push
mov
and
in
pusha
ret
ins
mov
call
push
lods
pop
mov
(bad)
jne
in
add
jne
jecxz
movs
pmulhuw
sbb
sbb
add
jge
cmp
pop
inc
aaa
xor
scas
mov
inc
data16
repnz
mov
(bad)
sbb
xchg
or
gs
inc
jge
(bad)
into
pusha
inc
inc
push
dec
(bad)
mov
xchg
icebp
cli
xchg
inc
cmp
loop
jmp
mov
mov
xchg
sbb
test
jb
mov
dec
(bad)
cmc
ror
mov
mov
and
cdq
cmp
or
adc
mov
jmp
mov
cmps
push
push
mov
mov
pop
xchg
push
call
jp
(bad)
les
comiss
(bad)
icebp
retf
add
dec
imul
ja
pop
jae
lock
clc
ins
and
inc
rol
push
popa
lods
leave
cmp
xor
or
jb
adc
mov
push
sar
ret
push
test
mov
and
into
lods
pop
aas
(bad)
in
test
xchg
popa
or
out
mov
mov
lahf
mov
mov
push
fnstsw
mov
xor
(bad)
outs
inc
out
mov
jge
or
push
retf
xchg
jmp
push
mov
xor
or
xchg
xchg
gs
popa
xchg
cmp
shr
cmp
mov
inc
hlt
dec
std
cli
pop
dec
scas
fst
out
jb
lods
pop
dec
retf
in
bound
int3
jbe
push
data16
inc
ins
jle
dec
into
into
rcr
addr16
addr16
jns
lock
xor
pop
push
popa
xchg
sub
mov
or
inc
and
and
out
jmp
leave
push
mov
clc
aaa
je
lods
sti
loope
aad
je
cmp
mov
movs
mov
cmp
push
pop
mov
lock
test
das
jae
or
mov
adc
mov
data16
sub
rcr
xchg
in
aad
leave
push
mov
sub
je
mov
inc
jbe
call
push
stos
push
into
mov
adc
mov
pmaxsw
call
xchg
popa
call
sbb
leave
mov
push
sbb
fs
jl
leave
daa
xchg
mov
jbe
call
cwde
jle
loopne
mov
(bad)
icebp
mov
cld
dec
mov
adc
jnp
mov
out
cmp
cli
jnp
pop
into
aas
(bad)
cmp
loopne
icebp
and
mov
shl
cmp
jle
sbb
inc
enter
bnd
push
sub
mov
repz
sub
mov
adc
mov
test
xchg
imul
stos
sbb
sub
test
xchg
outs
out
jns
sub
dec
(bad)
sbb
mov
pop
push
and
fbld
leave
pop
cs
ss
mov
inc
push
or
cld
add
in
arpl
fwait
popf
dec
adc
pop
and
or
gs
push
jle
scas
mov
mov
add
es
jb
sub
lahf
retf
scas
ss
or
push
movs
xchg
jnp
stc
mov
add
xor
push
fwait
(bad)
ret
lods
popf
nop
adc
xor
std
sbb
push
(bad)
fldcw
in
mov
push
sbb
lahf
xchg
hlt
jmp
jle
rcl
add
imul
jle
hlt
stos
adc
xchg
and
or
bound
inc
adc
pop
addr16
imul
out
std
and
loope
xlat
shr
mov
ret
cmp
lock
int
jae
iret
mov
jecxz
xchg
mov
imul
pop
lods
and
daa
int3
push
jno
loop
scas
push
sbb
cmp
xlat
lds
jnp
sbb
mov
ja
loope
sub
jb
cmp
dec
fisubr
faddp
jecxz
jl
or
gs
pop
add
jmp
dec
pop
xor
mov
aad
mov
aad
rcl
rcl
mov
jge
mov
mov
push
retf
loopne
out
sub
pop
mov
mov
sub
xchg
clc
pop
fnsave
mov
scas
jne
mov
pop
cmp
lds
ror
xchg
xor
ins
outs
push
xchg
enter
jnp
retf
cwde
rol
and
pop
neg
enter
and
adc
ins
pop
out
mov
fwait
aam
int3
mov
(bad)
shr
cmp
call
movs
or
push
sub
mov
test
mov
jp
jae
mov
adc
fs
jle
pop
and
ret
lds
and
mov
mov
fcmovbe
cli
les
inc
je
mov
jmp
scas
jb
stos
push
aas
sub
sar
cld
mov
sub
adc
fdiv
jns
dec
rcl
fst
jge
cmc
jne
test
jo
pop
in
push
mov
(bad)
adc
movs
aas
pop
shr
mov
mov
and
adc
xchg
push
icebp
sbb
mov
sub
jmp
les
dec
repnz
(bad)
out
cwde
push
jmp
aas
push
mov
dec
mov
xor
popf
xor
push
add
mov
push
mov
pop
cwde
out
into
dec
gs
or
idiv
push
dec
sub
outs
inc
out
cmp
fadd
sub
cli
jle
sbb
icebp
jge
ins
mov
sub
aam
pop
pop
or
jbe
xor
mov
add
sub
push
rol
mov
mov
add
in
fwait
jns
inc
mov
in
pop
fs
jg
and
and
xor
mov
xchg
js
cmp
imul
and
dec
dec
gs
(bad)
cmps
fwait
cmp
ror
mov
test
push
xor
sub
ds
mov
jae
out
pop
cmps
jle
mov
clc
ds
out
jge
(bad)
js
or
fmul
(bad)
sahf
ins
inc
ins
adc
mov
jnp
push
out
mov
mov
mov
jg
std
jb
inc
bound
in
repnz
or
or
fisttp
mov
cmp
sbb
xchg
in
aaa
leave
ret
pop
pushf
out
shl
adc
stos
sahf
adc
jmp
imul
ror
sub
sbb
int3
outs
sbb
arpl
dec
es
ja
and
sahf
cmp
mov
mov
sub
mov
add
outs
cmp
dec
sbb
nop
out
mov
(bad)
fiadd
out
push
and
pop
or
adc
(bad)
sbb
sub
mov
mov
mov
call
inc
ds
iret
pop
sub
or
lea
pop
add
push
sbb
xchg
adc
sub
cmovg
mov
sbb
jno
mov
fcmovbe
shl
pop
addr16
std
imul
pop
mov
enter
std
test
sub
push
xor
aam
sbb
mov
or
ja
pop
call
(bad)
jmp
dec
sub
call
sub
std
xchg
(bad)
push
bnd
popf
addr16
pop
adc
pop
scas
or
xchg
test
add
movs
rol
lea
sbb
dec
in
leave
cmp
inc
ins
daa
jmp
and
aas
aad
aaa
movs
popf
sub
or
inc
mov
ror
dec
pusha
jge
cmps
daa
xchg
mov
lods
push
mov
mov
ret
pop
ficomp
jne
repnz
push
out
mov
test
push
adc
mov
fs
push
stos
mov
push
xor
je
lds
cld
rcl
or
jmp
stos
add
mov
mov
into
out
dec
aad
cmp
dec
pop
gs
sbb
sbb
pop
mov
pusha
jbe
xchg
test
into
push
fistp
mov
cs
fdivp
push
std
stc
(bad)
cmp
mov
(bad)
lahf
call
ja
jp
and
add
stos
mov
rcl
out
lock
push
stc
cmovs
dec
stc
cmp
mov
outs
fsub
lods
mov
setp
loope
mov
les
push
fnsave
test
out
fidivr
into
clc
imul
jae
xor
push
push
inc
and
addr16
mov
les
mov
xor
mov
cmp
(bad)
push
hlt
fcomp
enter
aas
inc
add
add
mov
sbb
pop
sahf
jmp
stos
mov
lods
jno
xlat
js
fcomip
mov
repz
and
les
or
mov
push
xchg
test
and
ret
(bad)
std
inc
(bad)
test
ror
lahf
outs
loope
xor
stos
jb
popa
(bad)
into
fs
pop
ds
sub
cbw
or
push
shl
xchg
in
ret
push
out
jbe
mov
adc
mov
lahf
xchg
mov
jmp
clc
jmp
test
push
shl
xchg
mov
call
mov
ds
push
mov
xor
sub
push
mov
adc
push
rcr
cmc
clc
dec
jmp
cmps
psrld
jp
cmp
(bad)
mov
fstp
sub
test
imul
mov
xor
(bad)
xor
stos
mov
and
cmp
je
(bad)
sti
mov
mov
pop
jmp
fsubp
push
repz
xor
loope
pop
cld
lahf
adc
iret
inc
aam
or
std
sbb
lahf
jg
inc
dec
lock
cld
seto
push
mov
imul
dec
inc
dec
inc
scas
inc
pusha
or
inc
add
add
add
inc
mov
(bad)
outs
pop
aad
xor
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
(bad)
pushf
mov
stc
call
cwde
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
outs
hlt
cli
mov
sbb
lea
jb
pop
icebp
jb
idiv
clc
jge
ret
fld
mov
xor
int3
adc
and
imul
ret
adc
shr
dec
xchg
dec
shl
mov
mov
outs
fst
xchg
pop
int3
jle
call
scas
lods
fs
out
push
xchg
popa
push
dec
clc
or
adc
ins
mov
dec
ror
das
adc
pop
mov
cmp
cmp
or
inc
adc
cs
out
cmp
outs
adc
stos
mov
cmp
dec
push
cdq
sbb
push
add
xchg
fild
inc
push
arpl
mov
xor
int
dec
cmc
jae
xor
push
jge
je
and
mov
loope
xchg
and
sub
push
stos
es
or
adc
loopne
jns
ss
mov
lods
jecxz
jg
dec
inc
xor
arpl
in
js
int3
or
stos
int
xor
stos
jmp
pop
and
xchg
loop
les
loope
cwde
and
cmp
or
cmp
adc
in
out
addr16
es
mov
dec
ror
and
scas
cs
sbb
sbb
fwait
pop
pushf
movs
and
or
sbb
dec
cmc
dec
sub
(bad)
(bad)
push
jae
addr16
lahf
test
idiv
scas
dec
adc
popf
jle
jbe
ror
cmp
jnp
pop
out
xor
push
sbb
jbe
stos
(bad)
in
rcl
xchg
pop
sub
daa
es
movs
sti
jle
dec
rcl
jne
pop
lea
test
inc
daa
movs
mov
retf
jp
push
int
xor
dec
mov
xchg
mov
xor
(bad)
xlat
push
aas
mov
mov
loop
cmp
jle
fidiv
pop
cwde
data16
and
sbb
mov
mov
xchg
xor
mov
ss
(bad)
rol
(bad)
xor
pusha
jb
outs
mov
out
in
iret
fcomi
fsubr
cmps
inc
or
lods
dec
mov
push
imul
sysexit
add
loope
jbe
loop
daa
ret
mov
imul
fistp
in
call
fcom
mov
fs
loope
jo
mov
xchg
lods
into
push
fisttp
outs
retf
int3
inc
scas
mov
inc
mov
pop
out
mov
inc
sub
push
mov
sbb
jge
pop
ins
into
add
sub
fld
(bad)
xchg
scas
ror
mov
test
cmp
xchg
push
mov
aad
enter
dec
bound
push
pop
lods
loope
and
or
dec
sbb
add
inc
adc
mov
jge
or
loope
cmp
pop
(bad)
pop
sahf
mov
test
pop
xor
pushf
sbb
jle
idiv
mov
ds
lods
pop
add
mov
into
(bad)
repz
mov
rcr
adc
shr
call
ds
std
lahf
repz
stos
mov
and
add
xor
mov
or
fisubr
ja
ror
arpl
adc
push
sub
repz
je
lea
xchg
out
sahf
pop
cmp
cli
mov
sbb
nop
(bad)
sbb
outs
mov
mov
sbb
jo
pop
sti
push
and
out
mov
jo
call
mov
jns
xor
mov
push
int3
int
push
das
adc
pop
cmp
inc
xchg
and
mov
cwde
popf
xor
scas
in
dec
pop
jp
loopne
mov
or
add
fwait
and
aad
pop
adc
jbe
lea
sub
push
pop
push
dec
xchg
loopne
xor
inc
mov
jle
nop
test
inc
movs
sti
add
dec
fldenv
pop
mov
xchg
enter
push
pusha
scas
xchg
pop
fdivr
cmc
xchg
dec
arpl
adc
outs
and
outs
scas
hlt
scas
addr16
outs
push
aam
add
push
(bad)
rcl
jle
mov
pop
push
and
in
out
pop
adc
jae
retf
int
xchg
gs
push
jg
shl
ficomp
int
test
icebp
push
idiv
push
retf
je
fcom
dec
movs
pop
jbe
xor
adc
int3
xchg
xchg
mov
gs
outs
scas
push
lds
sbb
mov
adc
sti
pop
in
ret
mov
xchg
cmp
xlat
jecxz
enter
mov
or
jo
xchg
or
xor
or
pop
and
and
pop
lahf
ds
xchg
and
(bad)
mov
in
rcl
or
xor
(bad)
xchg
movs
xlat
push
push
test
sbb
or
xchg
mov
cld
sub
jl
or
mov
cwde
(bad)
ret
push
push
inc
or
mov
rsm
popf
jmp
das
mov
push
mov
setae
push
call
mov
cmc
cmp
pop
lea
sbb
pop
sbb
pop
outs
int3
xchg
stos
mov
shl
dec
in
fdivr
js
cs
je
neg
(bad)
loopne
(bad)
jbe
call
push
arpl
imul
into
cmp
sbb
jmp
adc
out
push
mov
or
inc
pop
rcr
repz
sbb
pop
(bad)
lds
ds
pop
mov
add
pusha
test
ds
inc
dec
neg
mov
mov
jns
and
cmp
test
ror
xor
sbb
aad
shl
adc
test
ins
fchs
sbb
jmp
test
mov
int
jae
or
jns
inc
cmp
mov
repz
add
mov
movs
ja
push
(bad)
cmps
mov
std
cmp
popf
out
into
mov
int3
pop
pop
mov
gs
shr
(bad)
xchg
stos
mov
jno
retf
ror
ss
test
das
and
adc
stos
ins
call
cmp
fistp
call
ret
sbb
mov
rol
xor
or
(bad)
shr
dec
adc
xchg
jmp
mov
int
inc
out
neg
or
cmp
fisub
vprotd
dec
sbb
gs
mov
shl
pause
clc
cdq
jmp
push
mov
jmp
int3
sbb
dec
std
adc
call
add
mov
int
movs
mov
mov
pop
sub
jno
gs
dec
pop
sbb
ins
xchg
out
xor
mov
outs
arpl
clc
movs
mov
push
bound
jb
add
int3
mov
inc
loopne
in
(bad)
out
cmp
push
jb
mov
leave
or
lahf
mov
add
sbb
daa
jmp
xor
and
adc
jle
xchg
cmp
adc
add
or
outs
cmp
fldcw
inc
faddp
stos
pushf
iret
jo
ror
cmp
jns
add
pop
bound
sbb
sub
fsubr
mov
dec
ja
cmp
jb
adc
dec
add
je
dec
mov
out
jle
in
cmps
mov
cdq
push
dec
mov
adc
sub
shr
movs
out
push
leave
cld
repnz
ret
mov
pusha
cmc
push
push
or
and
inc
fs
sub
popa
dec
xchg
jmp
cmp
lahf
xor
push
push
sub
sub
pushf
fisubr
fimul
mov
jo
cmps
test
mov
enter
sbb
mov
push
rcl
xor
dec
(bad)
jmp
pop
(bad)
int3
pop
pop
ret
ret
mov
mov
fnstenv
in
das
fisubr
stos
aaa
push
in
pop
fnstcw
pop
cmp
lahf
adc
sbb
push
dec
imul
or
adc
or
popa
sar
pop
(bad)
pop
jmp
mov
ss
fisubr
fst
adc
das
cmps
and
jge
sub
sub
pop
clc
imul
pushf
xor
cli
mov
nop
iret
shl
(bad)
leave
pop
fisttp
mov
xchg
add
and
cmp
sub
pusha
push
mov
mov
dec
and
lods
fidivr
jmp
cmp
loope
pop
mov
inc
dec
inc
jg
sbb
adc
inc
push
hlt
inc
jecxz
loopne
jle
repz
(bad)
or
pop
lods
dec
jo
jecxz
jmp
cmp
add
shl
pop
jnp
sbb
jge
frstor
loope
mov
and
ins
pop
sahf
cmp
mov
mov
clc
xor
inc
out
(bad)
adc
ret
ins
xchg
mov
or
inc
sub
cmp
or
rol
fstp
or
jne
adc
inc
fs
sbb
fwait
add
jbe
inc
test
fldpi
xchg
mov
in
jmp
mov
mov
sub
push
and
sti
outs
shr
pop
in
repz
movs
inc
jle
mov
inc
ja
mov
sbb
mov
movs
cmc
cmc
outs
jns
sar
ds
xlat
aad
sbb
pop
gs
or
ret
das
add
mov
mov
test
push
aad
sbb
gs
fild
sahf
sub
mov
dec
shl
fisttp
add
add
icebp
pop
dec
loopne
fcomp
mov
repz
in
lea
das
inc
sbb
mov
(bad)
cmps
push
add
ins
in
mov
inc
sub
nop
push
jo
(bad)
in
add
div
and
sbb
mov
dec
dec
test
outs
enter
jns
pop
retf
sub
ss
repz
add
rol
jecxz
fwait
cdq
mov
sbb
mov
ficomp
xchg
xor
and
mov
stos
les
mov
xlat
dec
xchg
xchg
arpl
in
ins
bound
(bad)
pop
jmp
adc
inc
ret
add
adc
(bad)
xchg
ffree
mov
pop
int3
mov
loopne
mov
xchg
sub
sbb
scas
sbb
idiv
mov
dec
movs
mov
sbb
sub
inc
int
dec
sar
loopne
lahf
and
lea
pusha
or
fwait
int
xchg
inc
inc
xchg
jae
sbb
and
adc
dec
inc
ins
(bad)
jge
ret
in
bound
mov
push
hlt
pop
mov
rcr
in
cwde
jle
cdq
addr16
mov
rcl
outs
repz
sar
cmps
enter
rcl
xor
dec
nop
jno
test
jg
(bad)
aam
jno
xor
dec
push
xor
aam
(bad)
mov
inc
jle
outs
popa
std
test
out
xor
sub
fist
das
leave
mov
ss
outs
ds
dec
adc
push
imul
fnstenv
das
sbb
mov
sbb
movs
add
outs
bound
lods
mov
add
repz
bound
(bad)
mov
aaa
push
jle
pop
aas
push
inc
jmp
fs
jo
mov
call
add
cwde
sbb
mov
nop
int
cmc
cmps
retf
cmp
xchg
jge
jmp
xlat
or
push
or
scas
sbb
arpl
popf
test
pop
fldenv
leave
cmp
sbb
sbb
leave
pusha
and
jb
(bad)
jle
xor
fld
sbb
lea
shr
pop
pop
mov
cmp
int
jmp
jb
mov
loop
iret
cdq
imul
or
jmp
ds
adc
adc
and
jo
shl
jp
ins
mov
nop
dec
ret
push
(bad)
repz
movs
ficomp
cmp
fcomp
popa
pop
sub
shl
mov
dec
aad
push
cs
adc
add
int3
sub
nop
pop
sub
adc
pop
sahf
or
cmp
add
mov
mov
retf
lods
in
inc
je
lea
jmp
xlat
leave
xor
leave
les
dec
fmul
add
fdiv
push
fs
xor
jg
mov
fst
push
sub
cdq
mov
fdiv
push
mov
xor
add
and
jl
fdivp
push
xchg
imul
mov
xchg
xor
push
and
mov
jmp
cld
add
or
push
loopne
push
lahf
inc
jne
(bad)
mov
or
cmp
stc
pop
xchg
adc
jne
add
dec
mov
dec
je
pop
aas
xchg
dec
scas
lods
scas
mov
jmp
add
cmp
fisttp
cmps
xchg
mov
out
jmp
cs
daa
jns
call
cld
adc
repnz
push
imul
inc
xor
cli
and
cmps
(bad)
iret
(bad)
mov
das
shl
mov
mov
xlat
rol
add
jae
repz
test
mov
sbb
mov
xlat
lock
dec
xor
xor
add
mov
cmps
mov
(bad)
push
dec
mov
std
arpl
into
push
xor
lods
cmps
nop
out
pop
jl
(bad)
mov
popa
pop
stc
xor
in
add
(bad)
(bad)
cmps
or
out
mov
add
stc
fld
jno
leave
daa
xchg
in
repnz
sub
and
icebp
cli
shr
cmp
dec
or
neg
xchg
inc
xchg
mov
inc
into
push
sub
inc
in
sahf
mov
xchg
cmps
rcl
retf
inc
cmp
inc
add
mov
pop
popf
rol
mov
add
dec
test
mov
popa
ds
fst
out
xchg
scas
sahf
mul
es
jge
xchg
(bad)
inc
loopne
inc
retf
jns
mov
jmp
push
jmp
(bad)
call
mov
dec
fst
call
xchg
push
fwait
jl
pop
pop
aam
(bad)
and
scas
xor
popf
jmp
mov
push
sub
loopne
mov
push
add
fiadd
in
rcl
test
ds
(bad)
div
mov
push
xor
cmp
rol
idiv
retf
mov
mov
mov
aam
scas
mov
mov
rcr
enter
and
cmp
rcr
dec
mov
(bad)
cs
and
ret
jmp
or
test
pop
icebp
test
sbb
arpl
nop
push
xlat
lock
add
inc
cmp
or
aad
or
mov
sbb
xchg
mov
test
dec
aam
xchg
addr16
mov
inc
int
pop
clc
inc
fadd
xchg
ret
sub
into
push
mov
aas
movs
sbb
call
arpl
leave
lock
rcl
xor
(bad)
push
addr16
mov
adc
sbb
fist
mov
xchg
mov
dec
pushf
(bad)
mov
pop
das
adc
add
and
sbb
jge
mov
movs
and
loopne
mov
pop
dec
das
jb
inc
jecxz
mov
mov
test
jecxz
aad
cdq
dec
add
jnp
mov
and
adc
cmp
in
or
stos
addr16
(bad)
mov
retf
(bad)
not
or
fwait
clc
or
pop
push
retf
rcl
dec
test
push
pop
outs
stos
test
sub
jb
fwait
add
lods
cmp
js
jl
jecxz
xchg
mov
jecxz
pop
add
mov
es
je
repz
dec
jmp
pop
out
nop
js
shr
clc
div
fs
jbe
sub
jmp
jmp
retf
les
mov
jo
pop
ins
add
pop
inc
out
imul
lock
loop
jl
pop
int
sub
jge
mov
xor
adc
dec
push
add
adc
stos
adc
xchg
mov
push
out
mov
jb
stc
mov
pop
retf
fcmovb
jg
mov
push
jp
jb
loope
dec
das
je
sub
mov
sahf
mov
xchg
ja
mov
call
adc
outs
sbb
inc
add
add
cwde
xor
jae
cmps
jns
(bad)
fidiv
inc
hlt
pop
imul
fadd
mov
lea
iret
pop
adc
jecxz
es
lahf
add
dec
xor
ins
cmp
fidiv
mov
push
fnstcw
jmp
mov
ins
stos
mov
test
repnz
push
jge
bound
inc
inc
in
(bad)
mov
cmps
(bad)
call
cmp
lea
clc
push
xchg
mov
sbb
ret
add
cs
mov
fidivr
push
mov
jno
pop
fwait
pop
mov
sub
push
call
shr
or
or
loopne
push
fs
daa
rcr
jno
mov
inc
cmps
push
ins
test
test
test
sar
mov
ret
xor
mov
je
in
xchg
lock
jae
popf
std
clc
mov
mov
movs
enter
mov
mov
xchg
mov
cmc
xchg
out
mov
aas
fldenv
js
and
movs
push
int3
hlt
push
(bad)
mov
enter
mov
mul
(bad)
test
out
hlt
mov
fwait
bsf
pop
pop
mov
xor
inc
iret
mov
jp
sahf
ror
cmp
loope
pop
sbb
xor
sub
add
xor
jmp
pop
mov
jns
and
mov
sub
push
sbb
pop
fistp
repnz
mov
pop
lock
repz
and
test
in
push
popf
adc
leave
fisubr
(bad)
fcomp
push
dec
cwde
and
imul
imul
add
dec
push
stc
xor
inc
or
pop
dec
jbe
pop
dec
rcl
jle
pop
scas
imul
mov
push
cld
pop
mov
leave
push
shl
test
cmp
jp
movs
xchg
mov
out
les
je
(bad)
(bad)
pusha
xchg
inc
movs
mov
movs
mov
into
in
adc
jb
and
cld
lds
mov
out
add
lea
(bad)
cmp
sti
(bad)
pop
push
shr
das
xchg
jb
(bad)
push
loope
fistp
ins
fist
std
retf
mov
lock
cmp
lds
lds
pop
xor
inc
sub
fmul
or
mov
mov
fsubr
and
jecxz
iret
(bad)
les
mov
mov
sub
mov
mov
and
xor
pop
and
std
dec
mov
mov
dec
lods
cwde
mov
pop
jnp
retf
pop
retf
or
adc
adc
repnz
fisub
mov
cld
mov
dec
xchg
fnstsw
push
mov
sbb
mov
push
(bad)
mov
int3
popa
mul
stos
es
out
mov
and
xlat
mov
push
cmps
mov
pop
xchg
mov
dec
outs
std
popf
rcl
dec
add
inc
sub
(bad)
out
rol
imul
push
jb
fucom
in
pop
jmp
xchg
jae
mov
fwait
sar
push
inc
ins
or
out
xchg
add
cmps
scas
pop
retf
cmc
loope
cdq
aas
mov
sub
cmps
popf
(bad)
pop
pop
daa
das
imul
loop
nop
(bad)
jle
scas
enter
rcl
sahf
loope
ds
or
sbb
lea
ret
lea
fcom
pop
ror
mov
fldenv
scas
bound
inc
scas
inc
mov
cmp
ret
jae
xor
jb
inc
xor
and
mov
dec
jbe
into
sub
xlat
add
mov
pusha
sub
cmps
inc
xchg
jp
fwait
cmps
jo
sbb
cdq
mov
stc
mov
pop
xchg
daa
push
popa
sub
jmp
ret
out
rol
ret
std
test
daa
mov
leave
inc
ja
push
jo
mov
in
js
xor
test
arpl
adc
xor
in
aas
push
stos
nop
dec
cdq
xlat
or
fstp
xor
and
mov
cmc
inc
xchg
xchg
push
cmc
imul
xor
xor
xor
sti
push
mov
cs
mov
and
sbb
dec
mov
adc
jnp
std
sbb
mov
mov
mov
bound
xor
or
push
jne
push
cmc
lds
call
aam
movs
sub
pop
mov
stos
cmp
(bad)
mov
pop
xlat
sbb
dec
ins
lock
xor
hlt
push
add
mov
pop
hlt
mov
push
or
dec
push
add
mov
jo
stos
add
xchg
cmp
pop
fdiv
and
sbb
inc
into
or
xor
ret
movs
jecxz
in
and
ret
and
adc
and
xor
sub
mov
adc
mov
aas
pushf
aad
xchg
add
loopne
lea
je
mov
out
jle
dec
push
and
ss
imul
xchg
mov
fist
cmp
push
cmp
lods
test
push
and
cmp
in
int
data16
xor
jg
vmwrite
mov
mov
idiv
dec
sbb
pop
add
adc
sbb
lock
sbb
jbe
ja
out
(bad)
adc
movs
jae
mov
sti
or
and
and
pop
ss
add
(bad)
mov
add
sbb
popa
std
nop
mov
dec
xchg
sub
mov
mov
test
cmc
ins
dec
pop
fcmovu
nop
cmp
push
fcmove
retf
fist
mov
push
mov
outs
ret
mov
ss
retf
sub
cli
add
add
pop
xor
cmp
inc
mov
mov
and
jne
cli
xchg
pop
leave
jne
cmps
push
mov
inc
jae
call
loope
scas
fstp
int
daa
les
movs
sbb
mov
shl
sub
sar
xchg
push
mov
push
mov
loop
call
or
jmp
jb
cwde
in
jno
mov
adc
ins
je
hlt
jnp
ret
in
test
loope
in
mov
xor
dec
xchg
cli
outs
inc
pop
cmp
cmp
mov
aam
ss
sub
stos
jns
pop
sbb
adc
dec
sahf
xchg
ins
loope
sub
fwait
xchg
dec
jb
imul
inc
mov
aam
jle
mov
push
mov
shl
mov
popf
pop
xor
in
sbb
mov
jno
jns
pusha
fst
mov
jecxz
sbb
cmp
pop
shl
xchg
xchg
inc
mov
mov
adc
aam
sub
loop
js
movd
inc
mov
sbb
leave
jecxz
cli
je
xor
retf
ja
add
fst
mov
mov
fisub
dec
adc
cmp
cld
or
loop
inc
dec
xchg
scas
and
into
mov
daa
cwde
sub
push
out
cmp
fcomp
outs
or
stos
aad
fst
sub
inc
dec
mov
rcr
retf
sbb
(bad)
mov
movs
lock
mov
pop
xchg
repnz
adc
not
in
mov
pop
idiv
sub
aas
mov
stos
pop
nop
std
jecxz
loopne
or
mov
mov
inc
adc
xchg
cwde
mov
je
in
rep
(bad)
in
cmp
xor
mov
adc
mov
and
sub
movs
stc
mov
(bad)
mov
or
(bad)
adc
push
(bad)
cmp
adc
test
xor
add
and
push
jl
arpl
add
and
or
into
dec
int
lods
push
(bad)
cld
xor
push
add
pushf
pop
push
pop
dec
lods
mov
retf
or
push
cmp
icebp
xchg
or
ror
movs
push
mov
lea
jbe
retf
mov
mov
outs
xchg
or
es
dec
mov
ds
jnp
test
loope
shr
fwait
aaa
gs
test
(bad)
in
dec
imul
div
or
dec
adc
jo
retf
pop
jne
xchg
cwde
pusha
adc
(bad)
push
mov
in
test
les
cwde
push
adc
retf
out
and
lock
and
mov
shr
mov
cmp
clc
ins
shl
ds
ss
aas
int
jbe
(bad)
jmp
ja
cli
loope
dec
retf
out
mov
inc
inc
lahf
xchg
dec
enter
call
mov
je
ja
shr
add
fwait
out
loop
pop
mov
sub
rcl
xor
mov
outs
xchg
xor
mov
sbb
xchg
push
lds
aam
adc
mov
clc
xchg
adc
(bad)
jbe
cdq
je
in
stc
(bad)
sub
pop
mov
mov
fild
out
(bad)
imul
sub
retf
je
xor
dec
lods
add
sahf
call
(bad)
loop
jmp
cmp
dec
inc
in
shl
add
pop
stos
bound
outs
cmp
xchg
dec
cs
(bad)
xlat
outs
dec
(bad)
loop
mov
je
add
mov
aad
js
ret
pop
loop
jmp
rcr
(bad)
mov
pusha
xchg
inc
xchg
stc
lods
pop
add
add
xor
push
stos
(bad)
xchg
fs
imul
icebp
(bad)
mov
ss
mul
in
mov
and
inc
push
push
rol
dec
jns
icebp
fcomp
out
jecxz
jmp
mov
lods
jg
(bad)
lds
(bad)
out
mov
or
push
(bad)
neg
ins
das
bound
iret
jmp
inc
retf
jle
dec
pop
addr16
adc
rol
setns
cdq
dec
sbb
loopne
and
pop
add
push
(bad)
cmp
stos
mov
or
push
jmp
jbe
jae
mov
es
adc
inc
push
cmp
jle
pop
xor
retf
loopne
mov
mov
xchg
call
repnz
adc
lods
icebp
mul
daa
sbb
adc
(bad)
es
mov
mov
or
aas
ret
add
and
mov
lods
push
or
loop
mov
sbb
mov
jge
pop
std
sbb
push
xor
cmp
mov
push
jecxz
in
cmp
mov
add
int
(bad)
aas
leave
test
jb
mov
aam
xchg
xchg
sub
or
retf
stos
das
inc
hlt
mov
daa
clc
push
inc
jle
mov
shr
or
inc
xchg
jecxz
and
or
fldcw
sub
mov
inc
addr16
ror
inc
in
dec
or
out
(bad)
and
arpl
fwait
out
mov
(bad)
rcl
mov
cwde
jmp
movs
pop
cmp
repz
hlt
je
cmp
push
outs
xor
add
(bad)
push
xchg
(bad)
jmp
cmps
mov
retf
test
cld
loopne
out
or
push
pop
popf
jl
sbb
lods
mov
pop
mov
push
sti
push
jecxz
pop
sub
sbb
js
stc
jb
xchg
fs
pop
mov
std
addr16
shl
and
inc
fcom
arpl
lea
cwde
mov
ret
jge
(bad)
mov
pop
inc
inc
repnz
inc
icebp
fmul
in
inc
shl
dec
stos
jmp
mov
inc
vprotw
lea
mov
mov
mov
push
loop
jae
jg
mov
cld
sahf
mov
pop
es
mov
cwde
pop
pop
xchg
test
dec
xchg
xchg
fidiv
ds
std
stos
sub
sbb
push
mov
clc
(bad)
jmp
cmp
push
add
jne
lods
dec
nop
mov
xchg
xchg
sbb
dec
sbb
and
adc
arpl
mov
push
(bad)
mov
xor
cli
xchg
lds
xor
in
aaa
jae
hlt
addr16
dec
icebp
cmp
repz
iret
inc
je
int
add
pop
cdq
stc
test
jle
sub
xor
sub
pusha
cs
in
mov
popw
push
movs
mov
fcom
shl
mov
or
fdiv
outs
in
fs
(bad)
and
push
adc
jb
adc
xchg
gs
lahf
js
mov
jp
loope
fsub
push
add
fld
adc
js
mov
dec
mov
outs
pop
ret
cmps
es
adc
outs
lds
mov
mov
or
int3
add
lods
cld
push
in
pop
push
sub
adc
repz
popf
jne
in
cmp
loop
pop
rcl
dec
pushf
dec
js
das
and
setl
sub
push
mov
xor
inc
loope
mov
ss
call
lock
scas
xor
mov
and
sar
(bad)
inc
ret
cmp
cmp
xor
inc
mov
into
out
push
jno
loop
add
into
ins
jnp
lsl
sbb
ficom
imul
or
loop
dec
ins
test
jb
scas
add
mov
ss
arpl
jle
xlat
mov
xor
scas
pushf
inc
pop
out
test
or
fnstenv
pop
xchg
das
retf
stos
inc
hlt
arpl
mov
pop
iret
in
cmp
mov
push
mov
cwde
pusha
adc
mov
fbstp
pop
pusha
lock
sub
adc
outs
retf
inc
mov
leave
pop
and
ror
test
imul
mov
inc
or
jle
dec
gs
pop
and
nop
cmp
mov
pop
add
ss
dec
jo
int3
rcl
sbb
push
adc
or
xchg
add
cmp
sbb
ret
mov
mov
cwde
ja
xlat
jb
cmp
shr
nop
retf
aas
int3
push
mov
call
out
call
stc
push
retf
into
xor
mov
xchg
pop
lahf
(bad)
inc
mov
add
ja
push
pop
fild
push
or
into
fld
xchg
imul
mov
movs
mov
push
dec
loopne
hlt
push
xlat
enter
mov
push
cld
ror
mov
dec
clc
int3
mov
aam
div
cld
and
sar
push
addr16
mov
sbb
and
push
xchg
or
mov
mov
and
div
push
ins
test
jmp
hlt
pop
mov
add
out
repnz
imul
mov
jge
leave
(bad)
cmp
in
into
pop
outs
cdq
cmc
and
js
mov
push
fmulp
outs
inc
cwde
and
outs
mov
outs
test
and
fmul
stos
enter
pop
and
pop
cmp
mov
cmc
and
jge
out
mov
ins
int3
cmp
enter
dec
add
in
cli
mov
inc
pop
cmps
in
ins
cwde
mov
imul
mov
outs
retf
jecxz
add
inc
inc
cmps
sub
add
loop
pop
and
xlat
test
add
add
jecxz
in
out
cmps
(bad)
mov
sbb
dec
push
adc
movs
add
imul
mov
sub
sub
imul
add
int
or
adc
sbb
lds
cli
sub
add
add
mov
xchg
push
mov
cmps
adc
loopne
dec
or
pop
xor
retw
xor
pop
int3
outs
pusha
dec
xor
push
popf
shl
inc
fsubr
out
arpl
pop
cmp
sti
lds
or
arpl
data16
xor
push
std
jl
sbb
sub
adc
adc
aam
pop
leave
cs
mov
jne
fsubr
pop
pop
stos
xor
sub
xchg
adc
xor
mov
test
add
(bad)
xlat
(bad)
stos
arpl
sub
in
pop
mov
sti
jnp
jnp
cld
inc
popa
push
mov
add
cdq
cmp
movs
xchg
xchg
popf
stc
lss
dec
popa
xchg
leave
int3
test
push
adc
les
cmp
pop
add
and
imul
popf
and
mov
push
mov
jnp
dec
rcl
movs
mov
lea
xchg
xchg
jbe
mov
mov
cmp
jp
test
or
mov
fs
mov
fwait
loope
sbb
inc
iret
xor
arpl
repz
add
nop
cmps
fwait
hlt
aas
adc
xor
add
push
popf
lock
add
mov
xchg
test
or
scas
push
push
(bad)
cmp
dec
inc
jmp
pop
cmc
mov
in
inc
sbb
push
sbb
inc
fucomp
dec
cwde
pushf
mov
retf
movs
ins
inc
dec
add
stos
sub
mov
jno
addr16
scas
rcr
add
stos
test
outs
enter
ins
(bad)
test
mov
pushf
aas
push
mov
dec
mov
xor
mov
ds
getsec
fsubr
rol
imul
in
jmp
or
add
gs
jecxz
lea
neg
ret
retf
xchg
pop
ins
test
mov
imul
gs
jge
mov
int3
std
stos
add
dec
jge
xchg
inc
sbb
push
push
xchg
xor
test
addr16
push
push
sbb
mov
jge
aad
js
sbb
xchg
push
mov
xor
mov
jo
sub
mov
fs
lods
inc
dec
mov
data16
and
into
jecxz
and
cmp
mov
mov
not
mov
and
adc
lods
jecxz
loopne
icebp
shl
imul
jg
xchg
cli
test
and
das
push
xor
adc
sub
cmp
retf
mov
sahf
out
xchg
xor
imul
ss
and
fmul
or
jmp
pop
mov
mov
mov
rcl
das
hlt
push
pop
movs
lea
pop
(bad)
retf
cmps
js
sbb
in
dec
fnstcw
in
xchg
fnstcw
outs
sub
mov
dec
loop
sbb
mov
fs
dec
gs
sub
ret
mov
sub
lea
bound
scas
(bad)
cmp
add
cwde
sar
js
sbb
sbb
fisub
or
fild
jp
out
mov
push
sahf
out
cmp
adc
test
push
inc
mov
imul
xor
push
out
cmps
sbb
repz
push
xor
inc
rol
mov
popf
les
cdq
jp
or
sahf
js
push
mov
cmp
das
inc
inc
jmp
sbb
imul
or
sub
in
inc
ret
inc
xor
fcmovne
out
pusha
adc
pop
les
call
lds
rol
add
jb
xchg
jmp
pop
pop
or
sub
lahf
sub
fimul
mov
mov
sub
fidivr
ret
fs
jnp
ret
pop
adc
push
xchg
dec
iret
js
in
shl
and
or
dec
outs
and
nop
sub
jae
push
jge
and
jno
xor
pop
aam
sbb
adc
cmp
(bad)
fcomp
mov
add
xchg
jne
int
jg
or
push
jae
lds
leave
cmps
xchg
add
sahf
sub
jo
out
push
rcr
mov
cmp
(bad)
mov
fwait
xchg
add
(bad)
jmp
mov
cdq
(bad)
nop
sbb
sub
aad
js
stos
aaa
inc
push
jmp
(bad)
xchg
imul
int
es
cdq
sbb
sub
repz
pusha
(bad)
xchg
ds
jg
jbe
scas
xchg
repz
or
mov
cmp
jl
aas
scas
stc
out
xchg
xor
xchg
or
jno
movs
dec
push
test
jns
pop
jg
push
dec
or
xor
inc
mov
or
sbb
mov
fdivr
stos
pop
dec
mov
rcr
and
adc
loope
int
imul
aaa
push
popf
inc
or
(bad)
cmp
xor
xchg
dec
add
push
in
cmps
adc
and
mov
cmps
or
push
jmp
dec
xchg
and
clc
(bad)
jmp
stc
pusha
cmp
jg
icebp
into
xchg
sbb
mov
push
mov
cmc
fwait
repz
repz
retf
adc
mov
std
int3
std
or
fist
jo
outs
icebp
or
stos
je
jnp
(bad)
xchg
add
add
cmp
ror
push
ss
dec
cdq
hlt
aas
add
stos
cmps
dec
sub
clc
mov
sbb
xchg
mov
mov
push
push
jle
pop
cmp
iret
inc
adc
xchg
add
dec
iret
inc
xor
rcr
jg
dec
mov
es
popa
xor
sub
das
fistp
mov
das
sub
cmp
dec
into
and
jbe
ja
add
outs
jecxz
aad
inc
pop
std
mov
ins
dec
sbb
mov
push
dec
movs
cmp
mov
cld
bswap
leave
inc
dec
cmp
(bad)
cld
test
dec
stos
sub
pop
sbb
mov
sahf
sbb
sub
cdq
es
add
mov
jecxz
lods
int
movs
repz
mov
add
xchg
fmulp
or
idiv
cmps
pop
cwde
or
jp
or
sbb
test
mov
inc
push
inc
push
stos
cli
push
loop
pop
into
outs
test
mov
xchg
fwait
mov
int
jecxz
test
shl
nop
cmp
add
push
fimul
push
stos
xchg
jmp
out
dec
xor
stos
loopne
arpl
push
idiv
je
ror
push
pop
push
and
or
xchg
mov
ret
and
ss
inc
xchg
inc
mov
aam
mov
cmp
or
mov
mov
scas
lock
loop
pop
call
movs
push
fisubr
pop
add
jp
loopne
(bad)
mov
jo
or
rcl
pop
popf
push
xor
out
in
test
push
call
js
xchg
jb
enter
cmp
adc
push
inc
popa
sbb
cmc
jmp
cld
pop
and
inc
push
add
mov
dec
(bad)
aam
fcom
xchg
push
push
jle
in
dec
fldenv
adc
push
out
sbb
dec
jae
mov
test
cmp
in
pop
jmp
popa
cmp
inc
push
in
adc
out
xor
aaa
fisub
stc
push
push
leave
mov
stc
es
push
arpl
xor
sub
ret
test
xchg
es
in
push
push
or
pop
test
jecxz
lods
js
push
adc
jecxz
pop
stc
fxch
fs
and
xchg
mov
sbb
ffreep
dec
jmp
xchg
test
mov
add
dec
push
dec
pop
dec
xor
sahf
push
push
or
addr16
add
mov
push
inc
lahf
int
rol
popf
aad
push
dec
sub
popf
aaa
sub
ds
imul
dec
xchg
repnz
(bad)
rcl
dec
cmps
or
mov
mov
test
pop
(bad)
jnp
mov
sbb
mov
fnsave
dec
fwait
test
push
fucomip
mov
mov
test
xchg
or
adc
ret
push
lds
jg
test
imul
mov
ja
movs
cmp
add
and
and
push
push
xchg
jmp
mov
in
jmp
aad
test
pop
jge
push
pop
mov
pop
cli
out
in
jns
or
pop
mov
iret
lahf
jno
mov
pusha
in
sbb
push
pusha
jp
mov
push
mov
jecxz
(bad)
repnz
jl
push
addsd
push
(bad)
adc
std
sbb
dec
push
aam
cmp
push
in
xor
jbe
sbb
mov
cmp
pusha
xor
pop
sti
loop
cmp
sub
mov
shr
push
mov
hlt
xchg
lahf
adc
or
fstp
inc
jmp
push
rcr
or
sahf
mov
lods
jg
xor
add
add
outs
jns
push
mov
in
sub
loope
pop
jge
clc
pop
and
ds
xor
or
mov
into
and
call
in
or
pop
push
jge
ja
fidiv
into
sbb
test
imul
fsubr
add
add
pop
push
or
ds
pop
sub
sti
push
or
pop
setns
xlat
fs
sub
out
hlt
ret
jl
in
sub
xchg
xor
jmp
fimul
cmp
xor
cmps
sahf
push
(bad)
xlat
test
test
xor
dec
aam
add
adc
push
outs
aaa
(bad)
in
ret
xor
xchg
arpl
mov
ds
mov
outs
and
mov
add
xor
mov
shl
push
cmp
adc
push
jno
call
enter
mov
fldenv
cmp
out
in
mov
mov
in
or
test
jp
jb
cmp
push
mov
stos
fisub
int
cmps
jmp
pop
jmp
mov
das
cs
in
mov
and
(bad)
fs
fidiv
mov
sbb
or
dec
or
cli
mov
shl
imul
mov
inc
sub
add
div
sub
aaa
xchg
popf
hlt
push
imul
or
mov
data16
hlt
out
je
or
add
mov
sbb
xor
cwde
es
and
stos
sbb
xor
push
mov
lea
jb
or
and
inc
cmc
sbb
push
add
and
imul
jge
mov
mov
lods
popa
xor
xor
leave
inc
test
out
fisttp
dec
adc
xor
ss
adc
lea
cmp
xchg
icebp
out
loopne
data16
clc
adc
shl
add
fs
xor
rol
inc
daa
sbb
ss
shl
hlt
mov
or
(bad)
test
xchg
sbb
scas
or
or
or
or
jno
xor
mov
cmp
and
fist
pop
jne
scas
push
dec
inc
and
xlat
in
adc
je
out
lock
rcl
mov
pop
pop
xor
es
mov
icebp
or
mov
mov
aas
ins
cld
out
mov
cmc
retf
fisub
popa
push
cli
enter
sbb
dec
sub
aaa
mov
out
push
cmp
fwait
pop
add
mov
mov
pop
adc
call
cmp
inc
xor
outs
aaa
jbe
retf
jae
shr
daa
mov
add
dec
add
js
repz
test
adc
aaa
fsub
cwde
cmp
mov
cmp
daa
retf
addr16
test
xchg
and
daa
daa
adc
xchg
cmp
mov
mov
jle
movs
std
int
cmp
sub
push
fwait
xchg
stc
push
nop
and
icebp
fwait
jae
in
and
jg
movs
adc
int3
sbb
xor
pop
xor
mov
enter
aam
lahf
and
jecxz
inc
mov
out
adc
jecxz
in
dec
adc
fstp
aaa
(bad)
and
or
mov
lods
adc
adc
lds
or
mov
fcmovb
gs
and
(bad)
mov
inc
add
inc
push
mov
data16
xor
push
mov
pop
or
test
pusha
data16
aaa
jno
add
pop
jmp
call
in
mov
inc
add
iret
push
mov
push
std
pop
jbe
loopne
fist
adc
adc
aaa
jmp
test
mov
push
fistp
cmp
sub
movs
add
popf
adc
sbb
pushf
pop
or
loopne
shl
adc
aam
into
push
lods
call
mov
in
sub
test
jb
js
dec
mov
mov
lock
xchg
ret
sahf
push
pop
stos
adc
arpl
mov
fst
pushf
dec
and
ins
cmp
out
test
fsubr
jecxz
jno
stc
fisub
or
je
sbb
std
push
or
rcr
not
cmps
xor
sbb
scas
mov
and
repnz
imul
enter
mov
rcr
imul
mov
jmp
sub
or
daa
stos
mov
into
(bad)
enter
cmps
fld
add
outs
out
jmp
xchg
popf
in
inc
mov
adc
fwait
xor
(bad)
inc
push
push
sub
push
lock
adc
dec
gs
and
jle
mov
js
pop
retf
xchg
fs
sub
loope
gs
inc
imul
dec
sbb
daa
pop
daa
xor
mov
ret
sahf
add
jg
cmps
and
xor
shl
mov
loopne
cdq
in
enter
ss
mov
inc
dec
adc
(bad)
dec
pop
imul
xchg
addr16
cmc
pushf
mov
mov
out
mov
lods
add
mov
pop
push
push
jle
mov
pushf
xchg
in
push
cmp
dec
adc
(bad)
loopne
ret
adc
loopne
jle
jb
cmp
aas
sub
mov
or
jne
dec
mov
outs
dec
inc
pop
xor
sti
cdq
cmps
xor
mov
cmps
(bad)
loop
cmp
jge
mov
ins
jbe
fsub
mov
mov
xor
xchg
arpl
push
jmp
add
mov
jle
int
add
lahf
in
cdq
jmp
xchg
ss
das
xor
in
push
jle
addr16
out
sub
sub
dec
mov
sub
pop
ret
sbb
cli
pop
out
cmp
cwde
mov
int3
dec
cmp
loopne
lods
pop
(bad)
sbb
mov
cdq
or
xlat
stos
(bad)
pushf
mov
movs
push
dec
or
mov
add
mov
pop
mov
pop
mov
pop
inc
into
xlat
push
popa
push
in
es
vmwrite
cmps
adc
aad
mov
outs
dec
jmp
mov
mov
out
loopne
jne
mov
xchg
or
lods
test
and
arpl
push
xchg
inc
aaa
sbb
(bad)
xor
retf
sbb
xchg
pusha
inc
xor
sahf
mov
sub
(bad)
cwde
into
stc
retf
cmp
pop
cmps
je
mov
cmp
mov
icebp
jge
inc
nop
dec
ror
popa
cld
arpl
mov
das
arpl
push
in
lods
sbb
pop
mov
scas
leave
xchg
stos
pop
push
inc
cli
jae
lds
jo
mov
call
push
cmp
pop
pop
sub
xchg
sub
xchg
shr
pop
sub
fld
add
dec
mov
out
and
mov
shl
sbb
shl
adc
lods
lock
cmp
dec
inc
mov
retf
hlt
gs
call
xor
das
xchg
xchg
xchg
js
(bad)
into
adc
add
pushf
std
(bad)
mov
or
rol
dec
shr
and
bound
mov
mov
es
jns
jo
xor
lds
jmp
dec
imul
xor
jge
and
in
lds
push
lods
pop
sub
aaa
xchg
nop
mov
push
lds
and
ins
es
inc
les
arpl
(bad)
sub
call
inc
sbb
sub
imul
pop
es
ins
fdiv
cli
rol
xchg
jl
loop
pusha
inc
mov
xor
clc
rcl
retf
jmp
cli
aam
jo
dec
push
or
mov
es
sub
cs
mov
mov
iret
aam
fidivr
rol
xchg
xchg
mov
pop
(bad)
jle
popf
(bad)
test
cmp
or
dec
enter
dec
pop
mov
push
shl
outs
jo
adc
movs
data16
mov
mov
and
and
call
inc
mov
addr16
lahf
pop
cmp
mov
aad
jbe
test
fmul
retf
mov
ret
cld
cdq
cdq
pop
imul
shl
mov
(bad)
dec
movs
and
jmp
xchg
dec
leave
dec
stc
ins
jnp
push
test
inc
sub
mov
pop
xchg
inc
push
or
and
sub
fst
and
push
mov
shl
enter
cmp
fisubr
sub
pop
cmp
lea
cdq
loop
leave
arpl
mov
ficomp
mov
sbb
xor
arpl
rol
out
sub
sti
inc
call
or
add
sub
dec
add
popf
push
jo
cmps
xchg
inc
nop
ret
lock
pop
jbe
add
pop
sub
jecxz
jae
ficom
add
cdq
sbb
into
add
repz
jmp
test
or
pop
add
stos
and
cmps
je
jb
popf
and
xor
jg
ret
add
fld
cmp
es
enter
jg
mov
and
and
call
ret
mov
lock
outs
sub
enter
xchg
add
rcr
in
sub
cld
sbb
cmp
push
cwde
enter
inc
repz
jg
and
cmp
stc
adc
(bad)
adc
cld
mov
push
mov
push
sub
pushf
lock
push
lock
test
xchg
into
cmps
cld
sub
cli
(bad)
pusha
sbb
mov
inc
push
and
adc
or
or
sbb
stc
adc
outs
mov
mov
fs
jbe
test
push
leave
mov
mov
mov
inc
pop
sbb
repz
ss
iret
enter
mov
fild
inc
mov
mov
push
arpl
push
push
add
ins
cli
jb
mov
out
push
mov
sbb
mov
popf
arpl
pop
pop
and
push
sbb
lock
jmp
xor
enter
outs
lock
lods
xchg
not
addr16
mov
and
out
push
out
inc
adc
cmp
gs
repnz
in
out
enter
mov
xchg
mov
add
lds
add
movs
sti
cmp
dec
add
adc
popf
push
ss
adc
cmps
cdq
xor
pop
xlat
daa
inc
shl
ins
inc
mov
fiadd
adc
inc
push
sbb
out
pop
jp
xchg
jmp
jb
dec
dec
rcl
into
mov
push
test
mov
dec
out
dec
addr16
adc
rol
xlat
jnp
das
xchg
jge
lods
in
mov
inc
dec
nop
xlat
sub
(bad)
ss
add
xor
inc
inc
mov
or
sub
(bad)
jae
cmc
aad
test
xchg
jmp
and
xchg
jnp
inc
nop
scas
xor
cs
les
mov
cmp
jne
push
adc
mov
mov
shr
or
cmp
add
ds
inc
pop
sub
mov
jno
jle
jge
movs
cli
or
add
pop
addr16
ja
push
cmp
cmps
mov
jbe
xchg
pusha
fnstsw
data16
aam
sahf
ficom
push
out
ds
dec
ins
std
les
push
sbb
fs
adc
adc
icebp
mov
push
gs
and
cmps
mov
in
add
pop
in
jns
xor
stos
bound
loop
pop
pop
or
sub
inc
mov
iret
sar
ins
xor
inc
cmc
scas
in
dec
lahf
xor
sub
js
test
mov
cmp
fcomi
test
lock
jb
push
mov
sbb
arpl
sub
fnclex
lods
sar
loopne
test
xor
xor
or
jecxz
jnp
and
dec
xchg
cmp
dec
ret
mov
lods
or
adc
xchg
xor
push
cmp
ror
cmc
or
xchg
and
popf
dec
push
outs
mov
fs
les
sub
scas
push
inc
push
jns
scas
adc
pop
push
dec
test
add
pop
jg
out
or
pushf
mov
out
or
nop
stos
jae
mov
neg
jmp
inc
mov
lds
push
mov
pop
pushf
stos
jbe
test
push
xor
popa
aas
and
aaa
js
fcomi
inc
jae
icebp
(bad)
es
cmp
fist
sbb
(bad)
or
aam
stc
cmp
(bad)
repz
cmp
imul
(bad)
sbb
imul
js
mov
test
popf
and
stos
add
or
push
sti
addr16
xchg
sub
jmp
cli
add
inc
nop
movs
fisubr
inc
fld
mov
fisubr
mov
and
ins
mov
xchg
jae
stos
xor
cmp
mov
cmp
test
test
movups
aam
xchg
lods
push
(bad)
in
sub
stos
data16
sbb
sub
mov
adc
cs
out
cwde
sbb
cwde
ss
xor
jp
movs
dec
xlat
aad
mov
leave
mov
dec
lods
mov
push
lahf
(bad)
call
push
sbb
add
loopne
xchg
xchg
push
inc
add
mov
int
pop
cmp
inc
aam
test
aam
or
ds
jns
cmp
jmp
movs
mov
mov
pop
popf
sbb
xor
daa
inc
and
xor
loope
rcr
mov
sub
mov
mov
out
loope
shl
pop
dec
shr
xchg
sbb
clc
lods
and
or
test
iret
pop
(bad)
or
jle
mov
iret
in
dec
jbe
stos
jne
cmp
mov
push
fs
test
rcr
sbb
pop
fild
mov
add
adc
xor
popa
or
cmp
sti
pop
loop
or
je
stos
js
push
pop
sub
fadd
pop
sub
not
aad
or
add
or
sbb
push
rol
xor
and
dec
(bad)
call
push
pop
jmp
cmp
imul
test
ins
stos
out
jne
xchg
jmp
(bad)
push
fld
jg
test
mov
mov
enter
adc
mov
adc
shr
mov
sbb
mov
movs
cmp
xor
fucompp
imul
movs
inc
outs
pop
stc
push
add
lock
fprem1
push
icebp
inc
jnp
cmps
out
sbb
adc
scas
dec
mov
add
arpl
xlat
dec
mov
dec
dec
in
xchg
scas
lds
in
inc
cs
mov
sub
jno
es
in
jbe
xor
sbb
or
jge
mov
jb
mov
lods
cmps
inc
pop
jge
out
dec
pop
addr16
aas
or
aad
mov
or
and
mov
ins
stos
sub
mov
imul
jl
pop
test
fs
sbb
data16
and
pop
adc
(bad)
int
lods
clc
sub
sub
pop
int3
jecxz
cmc
cwde
(bad)
in
jmp
(bad)
push
mov
mov
sbb
(bad)
xor
pusha
jo
popf
xchg
sub
sub
pop
cmp
push
add
inc
inc
dec
inc
inc
mov
lds
cmp
stos
out
(bad)
cli
outs
xchg
sub
mov
pop
std
imul
loope
sbb
mov
mov
loope
cld
nop
clc
xchg
lea
mov
loope
inc
pop
pop
xor
mov
ret
daa
add
in
cmps
aas
inc
pop
push
movs
rol
dec
add
sbb
mov
xlat
(bad)
sar
and
lock
aam
jecxz
movs
fcomp
loope
ds
cmp
pushw
ja
ror
or
ins
ins
mov
xchg
inc
pop
loopne
and
test
add
iret
or
xor
xor
dec
icebp
adc
stos
pop
sub
cld
fs
mov
dec
inc
xor
jno
add
pop
push
adc
inc
shr
ins
xor
mov
mov
fwait
mov
xor
pusha
cmp
xchg
sub
outs
pushf
sbb
jnp
scas
fstp
adc
test
shl
dec
push
add
mov
and
sub
mov
mov
inc
test
cdq
xor
inc
fcomp
pop
arpl
jo
inc
sbb
clc
sbb
xchg
pushf
in
pop
adc
in
xchg
pop
mov
iret
(bad)
stc
dec
jp
popf
mov
lods
loop
sub
ror
add
ror
cmp
dec
mov
inc
mov
clc
pop
cmc
mov
push
adc
addr16
lods
push
movs
aas
out
out
push
mov
ficom
addr16
fld
jno
inc
sar
jp
add
jo
inc
lock
push
push
sbb
cld
xchg
jle
jle
fbld
pop
repz
xor
adc
ins
test
pop
imul
fsubrp
popf
scas
rol
repz
push
mov
pop
jbe
mov
aaa
test
and
push
inc
aam
out
and
and
cmp
movs
dec
mov
jmp
add
xor
mov
pop
mov
into
push
and
js
push
add
pop
jne
shl
mov
cmp
inc
addr16
rcr
jge
int
aas
in
inc
retf
retf
lods
or
(bad)
adc
cmps
push
loop
retf
push
movs
test
fucomip
pcmpeqd
inc
jmp
jo
movs
call
mov
inc
fnstcw
mov
(bad)
sbb
cmp
or
aad
cmps
ja
mov
inc
fchs
cld
(bad)
ret
ror
pop
aam
push
inc
aam
xchg
mov
cdq
rcr
fucomp
push
popf
pop
(bad)
push
sbb
xor
xchg
ja
mov
lods
inc
add
mov
or
xor
call
sahf
inc
cmp
scas
jl
push
stos
mov
ret
add
pop
mov
jae
out
lds
jne
and
pop
es
cmp
hlt
inc
icebp
outs
dec
mov
or
dec
cmp
mov
and
lahf
xchg
out
enter
daa
fs
pop
dec
mov
cmps
cmp
mov
xor
movs
push
out
fdivr
dec
(bad)
jge
mov
out
loope
mov
cwde
out
(bad)
adc
test
out
jg
xor
jl
mov
pop
inc
sbb
neg
outs
jmp
sub
pop
and
jnp
push
fild
pop
sbb
sbb
ret
adc
jecxz
sub
cmp
loopne
retf
pusha
popa
daa
or
xchg
push
repnz
dec
sahf
adc
pusha
shl
ja
xchg
pop
push
mov
mov
mov
add
dec
lods
lahf
pop
jmp
adc
(bad)
mov
leave
das
scas
push
dec
daa
repnz
xor
sahf
or
jp
in
stos
xchg
popf
push
pop
scas
jns
gs
loopne
sub
popf
push
xchg
pop
in
in
enter
push
je
mov
pop
mov
nop
inc
xchg
xor
xchg
sub
xchg
imul
push
daa
dec
cmp
xchg
sub
xchg
shl
push
mov
jbe
pop
mov
mov
hlt
arpl
pop
cmp
retf
enter
lea
fisub
(bad)
mov
addr16
mov
movs
and
loopne
add
sbb
mov
and
stos
jbe
test
icebp
inc
pop
cmp
call
repnz
hlt
call
mov
lods
add
lods
scas
add
add
fld
sub
xchg
cmp
retf
push
and
shl
pop
push
xchg
add
mov
adc
sbb
push
mov
sar
adc
call
jg
inc
sub
or
lds
(bad)
(bad)
push
xchg
and
push
lods
mov
(bad)
fldpi
imul
cwde
cwde
jmp
and
jmp
mov
xchg
pop
push
dec
and
and
fucomi
xor
or
cld
add
enter
lahf
inc
scas
addr16
and
add
out
arpl
hlt
cwde
xor
adc
or
jb
popa
popf
xchg
call
imul
add
cmp
ret
call
ins
cmp
out
loop
push
push
sahf
xchg
mov
and
jmp
(bad)
add
mov
cmp
bound
leave
push
fbld
(bad)
rcl
ins
mov
(bad)
or
and
push
jecxz
cmps
jle
hlt
or
pop
ret
jns
or
and
aam
adc
and
sbb
fcomp
inc
mov
mov
fldl2e
scas
push
inc
stos
retf
in
(bad)
iret
mov
scas
pop
mov
and
ds
cmps
or
push
ror
jb
jl
arpl
sti
cmp
fiadd
shr
mov
nop
ret
dec
js
sub
(bad)
test
int
jg
mov
adc
xchg
aad
sbb
sub
xchg
push
fsubr
adc
das
(bad)
fld
(bad)
sbb
add
mov
cmc
or
pop
(bad)
inc
loopne
(bad)
push
sub
fidiv
and
xchg
stos
cli
and
pusha
or
push
push
jo
adc
mov
je
cmp
pop
mov
ins
xchg
sahf
jg
in
jl
mov
sbb
and
and
ds
adc
les
gs
bound
(bad)
jp
push
jns
les
mov
mov
xchg
xor
outs
pop
leave
icebp
push
pop
or
(bad)
loopne
xchg
(bad)
fwait
(bad)
imul
fisttp
loop
pop
iret
mov
test
or
mov
test
mov
sub
push
sub
(bad)
data16
icebp
inc
cmp
out
sub
push
mov
lock
inc
or
ss
mov
or
leave
cli
pop
mov
fdiv
dec
lods
push
mov
pop
inc
adc
out
adc
inc
pop
out
movs
mov
jmp
mov
adc
je
mov
arpl
push
sub
call
push
push
das
xlat
push
retf
in
fadd
add
add
sub
sub
aad
in
and
jge
xor
xor
xor
add
inc
jecxz
cdq
outs
push
xor
cwde
out
inc
mov
in
arpl
outs
loopne
int
pusha
xor
pop
adc
pop
xlat
pushf
mov
mov
mov
mov
jae
adc
fiadd
loope
pop
outs
imul
pop
add
dec
adc
aam
dec
cmps
aad
shl
fadd
fisubr
fidivr
cmps
dec
call
retf
rcl
ret
jo
mov
mul
adc
xchg
bound
jae
inc
pop
jo
dec
es
stos
and
and
xchg
xchg
test
outs
inc
js
lods
jnp
and
pop
jmp
cwde
scas
mov
(bad)
jbe
mov
bound
into
pop
mov
(bad)
pop
or
loope
mov
sub
jno
inc
jno
test
sbb
loop
mov
ins
shl
pop
arpl
ins
cmc
cdq
push
or
les
xor
repnz
push
loopne
pushf
lahf
mov
loop
inc
pop
and
push
stc
stos
dec
cmp
aam
icebp
retf
cli
addr16
ja
dec
adc
cmp
add
(bad)
(bad)
mov
test
ins
ror
push
mov
loope
sbb
inc
ja
data16
lds
xlat
mov
clc
nop
sub
sbb
jo
int
inc
and
sahf
sub
adc
or
xor
rol
pop
nop
and
adc
cmp
ins
pop
and
ds
mov
(bad)
into
lods
adc
and
(bad)
push
fs
hlt
mov
movs
iret
push
sub
test
fiadd
mov
out
rcr
jecxz
sub
fs
adc
inc
mov
or
rcl
(bad)
cmp
jg
sub
jo
or
rcr
mov
pop
outs
cdq
fcomp
test
pusha
mov
push
add
dec
mul
es
add
out
inc
enter
lahf
cdq
pop
or
mov
inc
mov
mov
aam
xor
jns
(bad)
jne
les
xchg
xor
xor
das
fst
in
and
or
cs
imul
pushf
cwde
cmp
cmps
fstp
out
shl
lods
loopne
mov
cmp
lock
stos
(bad)
mov
sbb
cdq
dec
cmp
and
leave
adc
pop
inc
movs
mov
dec
outs
mov
add
inc
pushw
pop
mov
jecxz
xor
mov
pusha
shl
stos
jmp
pop
jo
inc
les
fdivr
in
arpl
adc
sbb
jnp
inc
movs
sbb
aaa
aam
hlt
sbb
call
pop
mov
mov
mov
dec
jle
test
test
pop
fist
push
or
sbb
sar
push
mov
mov
or
(bad)
ins
mov
aam
jbe
pop
xchg
pop
and
xor
je
popf
xchg
jg
cmps
cmp
mov
cli
sti
mov
dec
sub
aad
xchg
fsub
xor
jg
lods
shl
stc
jo
gs
pushf
cwde
aaa
lahf
das
mov
sub
cmc
jge
rol
cmp
mov
rcl
sbb
mov
rcr
dec
lods
out
and
mov
or
sbb
pop
call
out
jno
ja
xchg
xchg
imul
ror
dec
jle
mov
retf
cmp
ja
ret
inc
xchg
cld
cs
mov
fwait
add
mov
clc
add
lock
add
mov
mov
push
mov
(bad)
dec
leave
push
aaa
outs
cs
sub
or
jae
push
push
xchg
js
or
mov
sub
movs
ret
mov
arpl
(bad)
loopne
je
mov
popf
mov
xchg
push
ins
jb
xor
shl
(bad)
in
xor
sar
(bad)
out
popa
inc
ja
shl
push
fs
sti
dec
scas
mov
push
mov
lea
es
ret
mov
xchg
push
adc
dec
in
xchg
xor
xchg
sbb
aaa
xor
fisubr
inc
retf
popa
imul
jbe
bnd
sub
sub
mov
cmp
ds
movs
rcl
lods
and
mov
adc
or
push
jae
pop
push
fstp
xchg
fs
push
imul
add
mov
nop
sub
int
mov
out
dec
pop
xchg
outs
jmp
xor
cs
gs
out
jmp
jno
cmp
fwait
or
and
fdiv
jp
jns
mov
std
nop
pop
jnp
adc
bnd
cdq
jmp
pop
daa
es
jmp
cli
mov
inc
ss
imul
push
mov
inc
and
mov
ins
pop
sahf
repz
sub
jmp
loope
loop
adc
mov
dec
push
dec
xchg
push
int
jmp
xchg
ret
xchg
je
stc
xor
pop
mov
test
push
dec
or
mov
sbb
push
lods
cmps
retf
add
cmp
mov
int3
inc
mov
in
adc
jno
pop
(bad)
or
(bad)
jmp
pop
sub
push
cli
jl
mov
rol
ins
sub
inc
stos
in
dec
cmp
add
mov
icebp
movs
jo
retf
loopne
mov
das
lahf
stc
leave
jl
pusha
add
pushf
cmp
scas
add
dec
call
push
(bad)
enter
mov
(bad)
repz
int
sti
add
push
retf
pusha
add
jmp
stc
sbb
or
mov
fwait
das
stos
mov
dec
daa
add
fucomi
xchg
jecxz
sub
lahf
mov
sbb
cwde
mov
das
cmp
pop
mov
ficom
inc
dec
cs
push
data16
out
add
inc
movs
and
sub
inc
jmp
popf
movs
test
mov
in
out
repz
aad
adc
xchg
enter
ret
data16
inc
cmp
mov
dec
inc
jnp
xor
sbb
sbb
pop
xchg
fcmove
inc
scas
xchg
inc
push
shr
push
loopne
in
ins
lods
das
test
cmps
pop
lods
push
xor
aad
hlt
pop
scas
leave
int3
test
mov
pop
pop
cmc
sbb
aad
pop
(bad)
out
scas
popa
rcl
addr16
jg
stc
and
(bad)
daa
in
fucomp
dec
mov
push
push
popf
dec
add
(bad)
ficomp
and
addr16
icebp
xchg
ficomp
sbb
sbb
neg
mov
or
loope
test
fiadd
call
jp
pop
push
pop
out
(bad)
adc
adc
dec
sar
das
inc
test
pop
and
arpl
and
das
adc
int3
in
ret
xchg
mov
out
sbb
jb
cmp
ins
or
add
popf
ja
jmp
xchg
push
or
ss
mov
aad
stos
mov
mov
cmp
sub
enter
dec
xchg
scas
mov
jg
dec
arpl
add
sar
push
ja
cmp
iret
das
xchg
pop
test
test
icebp
push
pop
fsubr
jmp
imul
in
outs
stos
dec
sub
jae
xor
aam
sbb
add
cwde
aas
out
mov
daa
pushf
cli
(bad)
pop
inc
cs
call
inc
lahf
sub
jmp
es
scas
call
and
addr16
call
stos
and
fwait
jg
sahf
hlt
xchg
mov
and
les
sub
or
add
add
stc
jecxz
jns
pop
xchg
btr
js
sub
iret
(bad)
jb
cmps
pop
mov
jnp
mov
mov
pop
test
cli
popa
les
sub
push
cld
test
data16
sub
nop
dec
lods
and
in
aam
xchg
(bad)
fucomp
jl
inc
push
scas
cmp
call
sub
hlt
js
xchg
fbld
cmp
outs
or
outs
daa
mov
mov
rol
pop
je
mov
ss
call
in
rcl
jo
inc
xchg
out
inc
int
push
mov
sbb
xor
xor
mov
shl
inc
cld
push
add
jge
lock
inc
dec
mov
js
test
push
jl
cdq
mov
pop
(bad)
repnz
pop
test
out
or
fisubr
and
xchg
dec
cmps
push
push
dec
xchg
inc
sub
or
loopne
dec
pop
fstp
sub
call
and
jle
jecxz
xchg
pop
test
es
(bad)
out
fiadd
leave
ins
cmp
mov
jns
mov
mov
sub
je
ins
sbb
inc
xor
mov
enter
(bad)
xor
pop
call
mov
mov
in
fmul
push
jecxz
inc
xchg
dec
jg
add
add
mov
inc
rol
iret
or
inc
push
stos
sbb
fwait
dec
push
adc
cmps
dec
aaa
sbb
sub
pop
sbb
push
jecxz
push
inc
mov
fnsave
pop
(bad)
inc
adc
leave
retf
mov
and
mov
and
retf
test
xchg
mov
add
std
xor
sbb
neg
leave
test
call
inc
movs
into
sub
fcmovnbe
sub
sub
mov
leave
fist
ins
popa
mov
js
jge
enter
push
sbb
enter
mov
lods
and
leave
mov
scas
and
jge
push
cmps
out
sub
xor
push
sar
loope
or
imul
imul
stc
sbb
shl
stos
dec
add
lods
ins
cmovno
fild
cmp
inc
icebp
(bad)
fstp
and
rep
sbb
and
xor
inc
push
call
fcom
xor
jo
in
repnz
in
jo
mov
push
cmp
mov
lods
adc
cmp
call
add
pop
pop
rol
ins
icebp
adc
movs
mov
enter
std
xor
jno
push
leave
nop
push
repz
sbb
popa
scas
gs
(bad)
arpl
xor
xchg
cmp
and
sbb
dec
sbb
sbb
mov
inc
hlt
jp
cmp
cwde
mov
add
sub
mov
fadd
retf
mov
out
fld
and
retf
stc
lods
mov
cmp
adc
xchg
std
xchg
xchg
cs
aaa
sub
inc
pop
jmp
add
adc
jno
adc
or
sbb
cmp
lahf
dec
aam
repnz
and
sbb
and
pop
push
cld
jmp
cmp
mov
mov
jns
(bad)
rcr
mov
addr16
mov
out
and
sub
sti
pop
cmp
jbe
loop
push
std
push
xchg
mov
push
retf
xor
aad
jl
sub
retf
jb
in
iret
stos
imul
in
stos
in
dec
inc
xchg
jo
cld
pop
or
cmp
je
movs
cmp
cmps
inc
repz
(bad)
not
popf
dec
addr16
movs
push
or
sub
std
mov
adc
dec
xor
mov
sub
je
push
cmp
jae
mov
xchg
mov
xchg
lock
fsubr
xchg
pop
scas
mov
mov
ficomp
add
jecxz
mov
imul
ss
popf
hlt
ins
push
scas
jp
cs
repnz
mov
jp
cmp
ds
jle
mov
mov
fst
or
cmc
daa
adc
cvtps2pi
mov
fimul
into
adc
or
dec
inc
popf
das
dec
fsubr
mov
mov
xor
sbb
inc
enter
pop
mov
mov
pushf
dec
cmp
mov
xlat
inc
ss
mov
sub
push
adc
mov
xchg
xor
cmp
stos
sub
lahf
fadd
sbb
and
inc
punpcklbw
fdivr
push
mov
xor
adc
(bad)
and
out
fwait
sub
pop
repnz
test
outs
dec
push
push
pop
(bad)
sbb
adc
mov
cmp
xor
sbb
lods
push
mov
faddp
jmp
dec
inc
push
imul
mov
adc
je
or
out
aas
movs
fdiv
jns
leave
fcom
(bad)
fldenv
jns
push
mov
xchg
inc
repnz
fistp
fist
loopne
enter
mov
or
rol
lods
sub
and
add
dec
cmp
not
adc
jp
push
sub
mov
inc
push
sahf
or
test
xlat
dec
and
or
jmp
inc
pop
jge
fstp
dec
xor
pusha
push
jge
ds
addr16
pop
jae
push
mov
in
dec
cwde
mov
inc
out
cmps
and
and
test
push
std
ds
(bad)
into
sahf
les
jnp
xor
aad
(bad)
in
jo
push
sbb
into
(bad)
pop
arpl
leave
sbb
xchg
pop
pushf
call
nop
push
cmp
ret
loopne
push
pop
ds
hlt
pushf
mov
xchg
mov
sub
inc
(bad)
(bad)
repnz
and
sub
mov
or
dec
mov
data16
call
and
inc
fdivr
sub
in
shr
enter
push
mov
and
icebp
or
pushf
mov
mov
repz
jo
push
and
or
or
and
test
nop
test
ret
dec
cmp
aas
lahf
jne
pop
outs
push
jo
cmp
cli
test
cdq
or
mov
mov
pusha
hlt
xor
ds
loop
cmp
push
ror
das
enter
int
clc
jp
fsub
adc
lods
lock
in
sbb
push
push
sbb
imul
xchg
pop
clc
pop
popf
lods
por
mov
nop
cdq
ins
push
hlt
stos
outs
jmp
popa
loopne
dec
lods
dec
mov
imul
mov
or
adc
dec
loop
cs
jg
mov
inc
push
sub
call
ss
retf
sar
fistp
dec
mov
pop
aam
scas
xchg
or
jl
imul
mov
lods
sbb
cdq
pop
jno
push
mov
test
xor
repnz
(bad)
int3
scas
cmpxchg
jo
je
and
cli
inc
pop
dec
mov
mov
in
push
aaa
sbb
out
in
pop
and
mov
cmps
addr16
xchg
and
in
xor
out
or
rol
xchg
(bad)
sbb
inc
js
cmp
rcr
inc
xchg
xchg
push
xchg
sub
aad
xor
xor
dec
lods
mov
dec
cli
fistp
adc
pop
imul
(bad)
stos
mov
bound
mov
pusha
push
lea
pop
mov
nop
xchg
cmp
cmc
jnp
sub
or
iret
sbb
or
loop
cmp
lea
adc
leave
ins
push
(bad)
mov
push
and
xchg
inc
cwde
shld
add
call
xor
xor
and
mov
ret
imul
ja
loop
inc
das
mov
jmp
fadd
inc
cmp
arpl
mov
fistp
mul
je
jmp
in
dec
mov
mov
mov
mov
iret
int3
xchg
push
call
lods
push
mov
mov
jecxz
popf
cli
lahf
icebp
fisubr
add
jl
in
cmp
out
push
data16
or
cmp
mov
outs
and
and
sub
div
sbb
xchg
adc
(bad)
inc
aas
movs
jns
inc
cmps
dec
retf
mov
cld
mov
push
aad
and
add
lds
mov
xchg
dec
push
pusha
out
pop
ins
int3
cwde
int
pop
inc
cmp
repz
out
ins
cmp
aad
sar
pusha
popa
mov
leave
dec
sbb
cmp
in
pushf
and
pop
mov
jl
ret
shl
add
enter
dec
jo
retf
xchg
or
dec
or
test
lods
loopne
add
xor
or
test
push
fbstp
jp
or
(bad)
xor
push
out
cmp
cli
outs
test
fsub
add
mov
lods
fimul
stc
call
arpl
pop
pop
ret
mov
adc
mov
sub
sbb
lods
add
pop
sub
ret
mov
mov
dec
inc
aaa
jl
jnp
lods
pop
aam
mov
out
mov
and
adc
stos
out
xor
jg
xchg
retf
outs
repz
retf
push
in
dec
stos
fwait
sbb
fisubr
cmp
lods
and
test
jne
movs
jmp
and
and
lods
and
cmp
sti
gs
sbb
sbb
fisttp
push
outs
mov
pop
sub
je
fadd
aaa
test
iret
or
sub
icebp
or
iret
mov
cdq
inc
add
ror
rcr
pusha
mov
pop
pop
lahf
jmp
pop
sbb
cmp
xor
hlt
xor
mov
inc
mov
popa
jg
int
or
add
or
xor
das
cli
cmp
add
xchg
(bad)
inc
mov
sbb
stos
xor
jl
icebp
push
xchg
fs
sub
in
fwait
mov
retf
mov
movs
iret
cld
(bad)
cwde
sbb
mov
jge
cmp
out
pop
mov
or
mov
dec
je
fsubrp
sbb
stc
sbb
call
xchg
mov
jl
mov
and
movs
jb
mov
mov
(bad)
pop
mov
shl
jno
cs
jecxz
loop
inc
into
test
add
ffree
push
adc
and
shr
lds
hlt
mov
add
sar
addr16
mul
mov
sbb
stc
mov
inc
popa
sbb
or
ret
fld
shr
xchg
sbb
jb
fidivr
lds
in
dec
or
jns
mov
push
rcl
jo
inc
mov
jecxz
ss
push
cwde
in
fisubr
rcr
scas
lea
sahf
fs
(bad)
jbe
out
xchg
data16
mov
mov
push
add
in
movs
mov
fwait
imul
stos
loope
cs
mov
mov
pop
jg
mov
xor
loop
clc
sbb
fs
pushf
xchg
dec
ins
test
xchg
fst
mov
loopne
jo
jno
jmp
test
iret
mov
lock
pop
mov
imul
enter
sbb
mov
dec
(bad)
fidiv
mov
or
fisub
pop
outs
into
cmp
(bad)
aas
jmp
or
or
inc
pop
shl
push
push
push
and
xor
dec
sub
sub
call
add
add
ins
std
jg
aaa
fisttp
retf
or
clc
bound
sbb
mov
mov
adc
lahf
mov
push
std
and
stos
(bad)
cmp
pop
pop
enter
clc
imul
and
dec
(bad)
retf
pop
and
movlps
jnp
sbb
gs
push
push
test
iret
add
pop
inc
push
mov
jecxz
(bad)
adc
out
fdivp
dec
sub
cmp
pop
mov
push
mov
std
jl
pop
or
add
xchg
pop
or
in
mov
hlt
aas
adc
push
int3
xchg
xchg
cs
imul
or
inc
rcl
ds
mov
mov
stos
xchg
(bad)
std
fnstcw
lahf
pop
test
das
shl
fimul
das
pop
or
pop
(bad)
push
(bad)
jb
xchg
(bad)
(bad)
popa
cmp
xor
icebp
push
test
pop
xor
jg
push
outs
mov
jmp
xchg
mov
fadd
sbb
(bad)
mov
jl
or
imul
xchg
packsswb
or
add
pushf
sahf
push
(bad)
dec
mov
add
popf
push
push
inc
cmps
jno
cwde
ds
and
xchg
in
mov
dec
inc
adc
aas
cmc
cmp
adc
cmp
shl
add
pop
fs
out
sbb
jp
fptan
iret
imul
mov
xlat
xchg
jl
or
and
pop
(bad)
popa
retf
ins
and
and
add
pop
js
jne
int3
icebp
nop
xchg
pop
pop
je
(bad)
mov
inc
jmp
push
or
xchg
xor
test
loopne
push
clc
je
jns
add
mov
push
cmps
or
fidivr
inc
inc
es
add
sub
lods
pop
cmp
mov
mov
sbb
fisub
mov
xchg
add
jle
int
sbb
jmp
cmp
and
sub
das
dec
shl
daa
mov
std
imul
fdivr
dec
sahf
fdiv
cmp
add
sbb
pop
inc
or
dec
xchg
mov
jmp
add
call
jle
mov
in
inc
inc
(bad)
sub
xlat
cmp
loopne
mov
jle
or
adc
inc
mov
imul
jne
test
rol
rcr
push
jmp
cld
pop
dec
test
inc
out
outs
xor
adc
popf
loopne
sti
jns
xor
ss
jmp
scas
cld
repnz
xchg
push
jl
(bad)
mov
gs
fwait
and
popa
mov
aam
add
push
test
mov
add
jb
lahf
cmc
dec
out
cdq
in
xor
xchg
cmp
mov
or
add
push
sahf
dec
adc
or
sti
lahf
xchg
push
ret
cwde
xor
neg
add
(bad)
and
dec
fmul
jo
cmps
xor
iret
rcl
cmp
or
xlat
sbb
dec
ja
sbb
stos
nop
pop
jg
add
mov
jl
cmp
jle
jno
ds
bound
xor
and
sub
lahf
data16
sbb
cmp
loop
pop
cld
xchg
lds
setge
sbb
mov
mov
push
out
or
in
ror
push
leave
retf
mov
in
sbb
push
imul
jae
add
xchg
test
or
in
out
and
dec
ret
push
sub
imul
xor
fisub
and
sahf
arpl
pandn
add
pusha
push
popf
fisttp
add
rcr
sub
pop
xchg
not
xor
rcr
mov
stos
adc
jmp
mov
adc
mov
out
add
in
cmp
mov
outs
ror
es
fadd
push
xchg
outs
mov
aas
dec
repnz
cs
pop
sub
test
or
call
sub
xchg
adc
mov
mov
inc
icebp
lock
gs
fs
out
push
xor
and
push
adc
lea
aas
fsub
iret
inc
mov
pushf
div
add
call
xchg
sub
inc
in
mov
shl
xor
mov
add
pop
es
(bad)
aad
inc
loop
xor
in
test
ins
sub
call
sbb
data16
test
into
jmp
mov
mov
in
xchg
push
fidivr
mov
out
xor
hlt
not
inc
xchg
in
loopne
inc
push
xchg
add
ficomp
mov
mov
or
adc
inc
stos
cmc
loopne
retf
adc
es
xor
pop
sti
adc
cmp
ds
xchg
(bad)
fdivr
fidiv
pop
push
or
jb
jo
iret
adc
mov
cld
jg
jle
pop
mov
push
loope
jno
mov
adc
jge
mov
mov
and
sub
and
es
cld
pusha
in
mov
pop
mov
xor
pop
lods
lock
mov
cmp
xchg
fbld
(bad)
retf
mov
cmps
xor
xchg
cmc
mov
xor
shl
and
mov
ja
mov
out
or
movs
mov
push
out
stc
or
sub
adc
inc
xchg
sub
stos
mov
ds
xor
lock
aas
add
stos
add
shl
adc
cli
pop
dec
sub
xchg
ins
out
jle
xor
fcos
loope
daa
fst
ja
fs
inc
(bad)
sub
jmp
out
sbb
sub
or
xchg
lods
loop
pop
sti
push
adc
push
mov
repnz
das
repz
push
pusha
sbb
or
mov
xchg
and
dec
unpckhps
sbb
mov
icebp
sar
outs
sub
test
in
mov
in
inc
dec
xchg
fild
loope
and
adc
fbld
push
or
push
in
jp
push
xchg
and
pop
and
ja
(bad)
sub
mov
(bad)
jns
sahf
push
push
pushf
and
adc
pop
inc
gs
xor
pop
std
push
inc
sbb
fisub
and
aaa
jge
xchg
iret
pushf
xor
push
popf
shl
int3
ins
and
out
dec
vshufpd
dec
jnp
movs
dec
mov
xchg
xor
sbb
nop
mov
je
dec
aas
loopne
in
cs
cmp
adc
cmp
gs
movs
stos
add
sbb
push
push
jg
adc
sahf
fimul
xchg
arpl
call
push
cmp
test
cmp
hlt
les
rol
std
test
push
xor
addr16
or
imul
jmp
loope
xchg
enter
rcr
push
push
sbb
cli
mov
xchg
cmps
call
adc
and
pop
dec
push
dec
dec
pop
mov
cld
push
or
lock
add
mov
scas
test
cdq
xor
jmp
jno
mov
jns
add
pop
inc
sbb
and
xlat
rcr
test
outs
call
outs
call
and
rcl
dec
and
xor
aaa
pop
icebp
pusha
xor
add
fisttp
xor
daa
sub
inc
pusha
mov
mov
icebp
imul
iret
data16
fsubr
ret
(bad)
ins
in
movs
push
push
rcr
sub
loop
dec
mov
movs
and
outs
sub
mov
pop
jns
pop
or
fimul
cmp
repz
jmp
test
mov
or
out
stos
rol
sti
rcr
and
lds
sti
jecxz
sbb
sbb
outs
xchg
lods
dec
fs
mov
sbb
loopne
mov
ja
int
add
lahf
add
retf
fadd
idiv
pop
mov
test
rcr
jb
sahf
(bad)
fwait
push
scas
stos
cmps
movs
pop
add
jbe
sbb
repnz
daa
adc
sub
or
adc
ins
xor
push
sub
jmp
cwde
test
cmp
inc
(bad)
in
push
inc
outs
xchg
or
daa
dec
in
cmp
mov
(bad)
js
sbb
out
(bad)
xchg
jle
sbb
cmp
sahf
jno
leave
je
or
daa
adc
out
jbe
mov
aam
leave
mov
popa
mov
das
scas
cmp
mov
and
repz
sahf
mov
(bad)
sbb
stos
imul
sbb
inc
jns
fwait
push
and
div
out
cmp
mov
(bad)
dec
xor
call
fbld
or
mov
arpl
test
add
aam
into
lods
adc
stos
xlat
movs
and
dec
push
icebp
out
mov
sbb
(bad)
popa
inc
lahf
not
mov
fmul
test
(bad)
xor
mov
push
lock
and
or
je
and
cmp
test
psubusw
icebp
inc
les
addr16
stc
and
ins
inc
scas
lods
cdq
pop
call
cmc
lds
test
outs
in
xor
mov
sbb
icebp
add
push
sub
inc
and
jbe
cmp
lds
xchg
mov
paddd
add
fucomi
sub
add
cmc
dec
cmps
sti
mov
(bad)
mov
inc
outs
xchg
stos
inc
ja
data16
(bad)
add
pushf
aad
jl
shr
(bad)
call
mov
jb
mov
pop
add
bswap
mov
popa
div
nop
nop
inc
cs
mov
pop
push
jae
outs
into
data16
arpl
xchg
fisttp
jbe
lock
pop
outs
dec
and
sub
sub
stos
xor
cmp
adc
cwde
add
dec
mov
push
(bad)
sbb
pusha
pop
xchg
xchg
adc
add
cmp
repnz
sub
jp
pusha
dec
(bad)
fcmovnb
pop
jb
sbb
out
lods
mov
ds
mov
and
clc
push
mov
aaa
jb
(bad)
gs
mul
adc
mov
stos
mov
stos
adc
xor
push
pop
icebp
add
mov
mov
loop
inc
ins
lahf
shl
jno
mov
adc
retf
clc
adc
(bad)
mov
rcl
jno
out
mov
sub
jmp
cmp
stc
int
fiadd
fnstsw
pop
cmps
mov
jge
or
sbb
fs
sub
xchg
test
pushf
mov
fsub
(bad)
hlt
cs
sub
aam
sbb
(bad)
(bad)
mov
xor
jmp
jle
(bad)
clc
fcomp
inc
and
(bad)
stos
jmp
pop
push
(bad)
retf
pop
in
inc
push
ja
in
push
jle
clc
int3
jbe
ins
in
in
adc
sahf
adc
mov
pop
cld
in
fldenv
call
test
imul
add
call
xor
sti
fcom
cmps
ins
fcomp
les
mov
loope
(bad)
push
call
xchg
cmps
mov
xor
ja
aaa
push
sub
jns
inc
int3
neg
fsubr
adc
movs
push
lods
mov
popf
inc
sbb
add
ins
dec
pop
push
aas
ja
pushf
dec
int
cwde
js
xchg
cmps
int3
sbb
push
fcom
sahf
mov
inc
add
cmp
aam
xchg
mov
xlat
push
sti
call
pop
mov
jg
xchg
push
cmps
dec
ret
dec
test
cli
ror
xor
mov
inc
inc
xchg
xchg
pop
mov
sub
lock
mov
daa
dec
test
das
popa
mov
mov
imul
xlat
test
fidiv
or
push
ret
cmp
sbb
jecxz
movs
pop
xchg
and
stos
mov
(bad)
adc
retf
enter
call
imul
or
jbe
xor
ja
jg
aad
in
popa
fwait
aaa
inc
adc
mov
or
and
and
sbb
movs
pop
js
mov
test
mov
add
frstor
mov
retf
aas
mov
mov
stos
fdiv
dec
bound
adc
fstp
in
addr16
push
mov
and
call
retf
repnz
adc
mov
psadbw
jmp
int3
ret
jae
inc
stc
pop
push
pop
jmp
dec
pop
push
adc
repnz
bound
bound
dec
call
data16
add
add
and
repz
mov
and
(bad)
in
dec
popa
jle
mov
in
mov
(bad)
cmp
cmps
and
pop
mul
call
xor
or
scas
ret
sub
xchg
call
cmc
xchg
dec
mov
mov
arpl
out
iret
and
jnp
xor
pushw
push
rol
jnp
push
shr
push
inc
outs
push
out
sbb
inc
icebp
std
pop
inc
xchg
out
cmp
cmps
sbb
mov
and
test
mov
jb
push
or
jno
cmp
mov
jl
mov
cmp
mov
arpl
adc
sub
mov
sub
jmp
lds
pop
fstp
fcomip
mov
pop
and
push
loopne
mov
mov
cli
movs
mov
sbb
push
out
retf
cmc
shr
fbstp
xor
cmp
mov
adc
xchg
push
and
cdq
jle
enter
rcl
sti
add
push
add
loop
sbb
das
cmc
push
mov
add
lahf
div
(bad)
sti
jmp
enter
xchg
xor
jno
jg
int
and
mov
sub
(bad)
lahf
loopne
test
mov
xchg
pop
mov
movs
(bad)
xchg
inc
pop
mov
out
or
imul
mov
dec
in
push
push
clc
loopne
test
pop
mov
xor
mov
add
scas
push
sbb
ja
sub
test
inc
sub
stos
loop
ss
sbb
call
sub
sbb
sub
mov
push
std
jl
cmp
pop
dec
add
add
xor
dec
(bad)
in
out
sbb
pop
mov
enter
out
loopne
cmp
adc
ja
movs
adc
(bad)
jo
jmp
fisttp
inc
mov
es
push
std
xchg
or
cdq
inc
add
(bad)
std
dec
xor
xchg
lock
sub
aaa
cmp
or
mov
(bad)
(bad)
mov
mov
add
mov
push
jne
js
push
nop
imul
int
jmp
int3
in
pop
xor
mov
push
or
mov
(bad)
in
jl
cmc
clc
xor
push
cmps
(bad)
cwde
inc
(bad)
in
stos
(bad)
xchg
lock
xchg
cwde
dec
push
bound
not
lock
rcpps
dec
stos
xor
fstp
es
jmp
int
movs
mov
jl
nop
out
(bad)
pop
inc
or
push
pop
mov
sub
into
pusha
mov
or
cmp
js
loope
in
adc
(bad)
(bad)
mov
ins
xchg
jae
cdq
lods
std
adc
mov
xchg
inc
scas
sub
xchg
pop
sub
lods
adc
cmp
(bad)
cli
gs
jge
push
jbe
push
fcomp
mov
scas
test
sub
mov
sub
fwait
mov
imul
mov
out
dec
dec
in
aad
outs
outs
dec
test
adc
stc
movs
mul
cmp
lds
adc
fmul
bound
and
in
push
cmps
lds
je
(bad)
adc
iret
mov
ss
mov
dec
sbb
and
or
(bad)
cmps
xchg
cmp
je
lods
(bad)
adc
cmc
popa
dec
push
push
sub
(bad)
sub
push
ror
adc
add
push
push
fisub
pop
jmp
aaa
call
or
push
cwde
popa
into
sbb
sub
movs
add
inc
push
mov
shl
lea
dec
and
cmp
das
(bad)
sbb
add
sbb
or
ds
jbe
in
int3
cmp
inc
jp
fwait
push
dec
pop
not
sar
stos
mov
dec
test
cmc
bound
stc
stos
cli
enter
or
mov
dec
push
jnp
movs
cmc
jae
pop
call
ss
push
push
loop
out
cmp
aas
adc
xor
fnstenv
bound
mov
xchg
dec
popa
popa
sub
pop
(bad)
leave
pop
mov
or
add
addr16
shl
lods
sbb
shr
mov
xor
adc
xlat
jecxz
push
cs
pop
mov
fsub
ror
mov
sub
cmp
and
hlt
or
sahf
(bad)
pop
add
retf
mov
int3
lods
and
sahf
mov
les
xchg
mov
jg
mov
dec
repnz
or
mov
mov
push
sbb
pop
mov
fidiv
mov
xchg
sub
push
repnz
cli
mov
daa
and
pop
dec
pushf
das
rcr
xchg
mov
jge
in
mov
or
add
sbb
jbe
dec
in
lods
push
mov
neg
jo
jmp
sbb
push
mov
(bad)
mov
cmp
in
iret
popf
loop
fdivr
test
std
leave
das
(bad)
sar
int3
test
jb
sbb
pop
aas
movs
call
sub
aaa
shl
xchg
xchg
push
lock
jo
(bad)
sbb
les
mov
mov
mov
cwde
mov
xor
data16
jo
jle
pop
adc
sub
data16
cmps
inc
std
neg
jmp
adc
ds
mov
inc
lods
or
add
pop
push
test
mov
fwait
cmp
ins
push
add
jp
cs
mov
mov
icebp
cdq
loop
mov
xchg
xor
jns
call
mov
gs
leave
out
adc
jo
jo
sub
movs
repz
xor
test
into
fwait
repz
mov
cmps
or
outs
pushf
dec
mov
or
fisttp
jecxz
xchg
test
and
sbb
sub
fidivr
push
hlt
(bad)
aam
je
add
mov
bswap
cmp
lods
fwait
sub
je
enter
icebp
in
nop
jle
lods
pop
xlat
lods
pop
fnop
xchg
xor
push
inc
jbe
dec
and
jmp
sub
push
scas
mov
int
test
jbe
and
xchg
test
aad
cmp
movs
je
or
ds
cmp
aad
xchg
xchg
adc
(bad)
std
lods
sti
ins
int3
and
mov
repz
xchg
push
jmp
xchg
mov
popw
cs
jl
pop
xchg
cwde
mov
pop
mov
sub
(bad)
cmp
test
call
or
stos
mov
scas
ret
test
popf
xchg
test
not
xor
pusha
hlt
inc
daa
es
mov
fdiv
and
ins
shl
cdq
pop
jbe
shl
mov
popf
mov
dec
pop
lock
push
ds
cwde
mov
movs
jge
pop
(bad)
je
add
pop
fwait
add
inc
cwde
xor
cmps
repz
(bad)
mov
mov
or
mov
dec
xor
and
push
xlat
in
fisubr
(bad)
or
imul
mov
xchg
ins
ret
xchg
cmp
loop
dec
push
sub
call
or
push
mov
out
push
pop
push
dec
fisttp
les
ret
dec
ret
jp
repz
mov
mov
not
jo
js
popa
loop
loop
mov
stos
call
mov
push
mov
retf
add
loopne
mov
enter
inc
xchg
jl
push
xchg
pop
jmp
inc
stos
jle
jmp
jne
loopne
fadd
in
(bad)
cwde
mov
mov
test
mov
mov
rol
aam
mov
push
push
push
hlt
aaa
repnz
outs
mov
out
and
jnp
sti
imul
jle
push
in
adc
sbb
je
push
(bad)
push
push
cmps
push
outs
push
inc
cli
mov
xchg
mov
enter
fdiv
js
sub
popf
call
in
cmps
push
(bad)
mov
xor
std
jge
mov
add
fs
js
inc
xchg
mov
and
pop
jl
xchg
stc
call
sub
xchg
(bad)
test
jmp
jo
pop
movs
sti
test
fdivr
lock
retf
fidivr
xchg
inc
mov
add
repnz
mov
adc
cmp
aam
jmp
pop
(bad)
xlat
or
stc
and
xlat
pushf
push
fsub
and
imul
and
sahf
sub
shl
xor
ins
mov
test
adc
hlt
sbb
jne
int
shl
dec
cmps
pop
and
sahf
jg
xor
add
test
popa
pushf
add
jp
test
pop
add
lods
in
and
push
clc
data16
jmp
(bad)
aas
and
ret
lods
test
xchg
pop
imul
jb
call
ror
dec
(bad)
rcr
and
pop
sub
outs
fild
or
add
fldln2
pop
(bad)
jle
and
test
outs
or
cmp
popa
data16
xchg
adc
dec
and
popa
adc
jg
xor
sbb
inc
inc
inc
add
jecxz
inc
or
fwait
bound
sbb
mov
mov
ds
mov
je
pop
push
xlat
pop
gs
pop
or
cmp
mov
mov
or
sar
add
xchg
xchg
int3
shl
adc
inc
or
test
push
dec
pop
add
ja
sub
repz
ret
(bad)
int3
outs
sahf
leave
or
sbb
(bad)
adc
test
mov
dec
mov
in
mov
leave
test
and
and
out
mov
adc
repz
cmp
xor
add
add
push
mov
out
cmp
jmp
mov
fdiv
pop
cmp
int3
cmp
mov
mov
or
fsub
sub
sub
mov
dec
jno
(bad)
sbb
popa
jl
push
or
cld
rcr
xlat
mov
cmp
xor
inc
es
das
imul
test
push
adc
jecxz
test
push
jp
je
and
mov
cmc
xchg
inc
mov
push
xchg
das
xor
mov
and
xchg
pop
and
mov
mov
add
xchg
cld
or
sub
sahf
in
addr16
mov
repnz
and
bound
jp
jne
lds
sbb
les
mov
and
icebp
push
aam
dec
lahf
jl
xchg
call
inc
popf
bswap
popf
ins
and
cmp
imul
sahf
mov
push
ins
test
retf
xchg
jle
mov
xchg
and
aas
dec
mov
xlat
inc
pusha
and
jne
int
jnp
xchg
xchg
cmc
inc
mov
push
pop
mov
repz
jbe
fsubr
scas
outs
mov
and
loopne
jae
and
imul
xor
(bad)
not
std
dec
push
mov
cwde
outs
pop
fistp
mov
jns
pop
iret
fisubr
push
loop
mov
pop
dec
in
mov
cmp
repnz
or
and
lods
fstp
rol
in
push
es
and
mov
xor
or
xchg
mov
test
jbe
cmp
jmp
add
mov
lea
shr
mov
cmp
leave
stos
sub
pop
mov
cmp
cs
adc
aas
and
jnp
iret
xor
xor
cmp
mov
lea
leave
add
data16
imul
adc
movs
arpl
idiv
retf
dec
scas
je
shl
retf
cmp
and
xchg
cdq
fisttp
repz
bound
add
repnz
je
push
push
push
out
adc
jno
cli
sahf
adc
xchg
cld
ins
(bad)
pop
mov
push
xchg
pop
push
vpacksswb
fdivrp
push
imul
iret
out
mov
xchg
push
fcomp
popa
mov
mov
out
fnstcw
pop
not
(bad)
repnz
xchg
jb
mov
mov
lods
jns
(bad)
adc
mov
mov
loopne
inc
cmps
dec
and
add
retf
mov
call
xchg
ror
arpl
add
fisub
jb
hlt
out
xor
jp
add
add
repnz
add
sub
lods
mov
and
or
xor
dec
sti
add
mov
(bad)
jmp
arpl
push
cdq
push
es
pop
push
sub
sbb
inc
dec
mov
push
mov
std
jb
pop
jo
and
ss
jge
fisub
xchg
xor
mov
xchg
(bad)
jmp
popa
cs
dec
xor
sbb
push
or
jp
in
dec
sub
xlat
pop
cmps
jecxz
pop
mov
inc
fwait
(bad)
sahf
enter
loopne
daa
mov
add
inc
div
icebp
push
xor
fmul
pop
aam
jb
dec
cmp
mov
(bad)
cdq
int3
xlat
jmp
test
dec
fdivr
jae
repz
pop
gs
push
stc
push
aam
jg
(bad)
pop
addr16
or
jecxz
add
icebp
cmp
fstp
add
jns
(bad)
mov
dec
xchg
fimul
pop
sub
mov
sbb
cs
jmp
scas
inc
in
repnz
mov
pop
fcom
push
mov
je
popa
mov
fstp
push
stos
adc
out
push
and
repnz
retf
sahf
gs
(bad)
cmps
mov
retf
jp
pop
loopne
(bad)
jecxz
xchg
test
jecxz
aad
cmp
dec
imul
mov
jecxz
loopne
dec
inc
mov
faddp
xchg
adc
out
cdq
lea
pusha
retf
xchg
je
sar
sbb
mov
imul
iret
inc
rcl
and
(bad)
xlat
adc
lds
ret
mov
mov
popf
push
jns
push
cdq
int3
ss
or
js
mov
bound
xchg
dec
and
inc
xchg
clc
sub
cmp
and
xchg
add
adc
mov
scas
(bad)
jae
jo
xor
jl
push
stos
test
fwait
xchg
inc
push
cmp
sbb
jecxz
push
inc
sbb
sbb
push
and
out
cdq
lock
out
xor
pop
call
sub
shr
sub
popf
dec
mov
ja
fwait
es
(bad)
repz
pushf
psrlw
cmp
popa
mov
dec
cmp
jp
int3
pop
not
lock
cwde
push
inc
sbb
sbb
mov
div
out
pop
add
push
jl
add
push
fiadd
shr
jne
push
xchg
repz
push
sub
(bad)
ins
add
pop
iret
xchg
pusha
mov
mov
mov
cmp
ret
in
jne
test
mul
xor
mov
ins
mov
pusha
ficomp
cmp
fs
sub
cli
out
inc
add
jo
ret
(bad)
ins
and
faddp
pop
push
jne
enter
imul
add
cli
lahf
sbb
fld
add
jecxz
dec
adc
xchg
call
adc
pusha
lea
bound
mov
sbb
push
pop
add
arpl
iret
out
loope
jl
fdiv
(bad)
fld
sub
adc
repz
mov
fdivr
add
iret
das
icebp
add
xor
adc
inc
(bad)
cmp
inc
pop
pusha
and
sub
je
mov
pop
mov
or
imul
pop
scas
xchg
(bad)
repnz
add
ss
ja
dec
arpl
fsubp
jge
cld
mov
stc
inc
push
loopne
ss
repnz
ins
out
repnz
mov
jge
pushf
mov
imul
dec
pushf
shl
or
test
aaa
pop
out
dec
movs
and
fiadd
shr
cmp
cmp
mov
xchg
pop
or
repz
shr
mov
sub
out
mov
lods
lea
fiadd
int
test
push
std
data16
push
not
cmp
ins
sbb
or
push
test
popa
mov
adc
stos
jno
sub
sbb
ucomiss
ficomp
jae
les
add
pop
inc
xor
xchg
dec
xchg
les
stos
add
(bad)
adc
push
imul
scas
xchg
xlat
adc
push
mov
mov
das
jg
mov
inc
mov
push
mov
add
xchg
shr
xor
cs
adc
cmp
xor
push
mov
lods
and
push
jecxz
xchg
popa
adc
mov
in
sbb
in
pushf
xchg
mov
push
fwait
imul
mov
fisubr
pop
lahf
and
xchg
xchg
push
xor
and
mov
inc
retf
inc
leave
dec
and
and
retf
jnp
sbb
push
ffree
mov
ins
pop
cmps
add
hlt
stc
cwde
clc
dec
xchg
mov
pusha
sub
test
mov
sub
inc
in
cmp
add
daa
(bad)
mov
jle
dec
scas
call
in
pop
pop
and
es
out
or
xor
add
or
cmp
arpl
or
push
mov
lahf
mov
adc
or
xchg
(bad)
push
jnp
or
dec
lds
out
out
mov
fdiv
ins
jg
jecxz
adc
push
inc
cmp
fmulp
stos
int3
daa
push
retf
xchg
rol
jnp
jns
cmp
xchg
xchg
inc
fild
xchg
jno
add
shl
int3
ds
add
call
inc
enter
outs
aam
mov
test
or
cmps
add
mov
in
sbb
mov
inc
xor
or
sbb
aas
push
jecxz
nop
mov
movs
clc
pop
iret
aaa
jmp
ror
pop
imul
cld
call
dec
sbb
(bad)
pop
fisubr
ins
data16
nop
das
pop
call
imul
or
aas
call
cmp
and
and
jmp
jns
pop
sub
jmp
ins
dec
mov
test
inc
pusha
shl
cmp
jb
sub
jmp
int3
inc
cwde
and
add
fsubrp
aas
xchg
in
in
cmp
cmp
fbstp
retf
stc
sub
jmp
pop
push
or
mov
cmp
dec
xor
iret
push
dec
lock
jne
inc
cmc
xlat
jmp
hlt
loope
jne
jle
ja
and
sub
nop
fwait
aas
sahf
cmps
fnstcw
outs
jecxz
and
and
arpl
dec
test
mov
ret
bound
cmps
ret
es
sbb
mov
and
cmps
xchg
ror
pop
imul
mov
cmc
xchg
push
sub
inc
jne
fadd
jg
and
js
fs
rcr
add
lods
enter
inc
jae
mov
push
or
or
and
repnz
mov
push
(bad)
scas
test
jne
pop
push
push
fs
adc
imul
sub
dec
xchg
push
daa
add
loope
push
mov
push
pop
cmp
pusha
mov
lods
inc
adc
add
mov
and
cmp
mov
sub
repnz
push
jg
mov
mov
into
daa
scas
pushf
dec
jmp
jb
inc
test
outs
cmps
aad
mov
lods
jns
add
pop
fidivr
ins
sub
fistp
or
mov
adc
sbb
popf
jmp
xchg
pop
in
sbb
push
push
gs
sub
add
jp
push
inc
out
lock
push
xchg
inc
jo
lods
(bad)
outs
mov
out
pop
mov
mov
test
(bad)
or
push
mov
adc
call
arpl
(bad)
in
dec
ret
loop
xlat
inc
xchg
test
sbb
fld
mov
lods
popf
dec
cmp
fisubr
add
int
sti
loop
sub
xor
stos
dec
push
push
ror
dec
loope
pop
adc
mov
hlt
fdiv
mov
inc
dec
nop
call
in
pop
add
dec
ficom
push
push
(bad)
or
push
jae
mov
xchg
mov
aas
or
fdiv
sub
cmps
in
leave
jns
push
push
shl
gs
shufps
cmp
jne
dec
adc
test
jns
rol
popf
fcmovnu
call
ss
mov
lds
fmul
icebp
or
aam
jmp
or
xchg
cdq
push
cmp
sbb
push
out
cmp
mov
cmp
cwde
movs
push
dec
test
xchg
xor
ins
pop
lock
dec
int
push
push
xchg
xor
ja
loop
dec
repz
js
imul
push
outs
fiadd
sbb
mov
js
(bad)
(bad)
xchg
mov
cli
lods
sub
jbe
jg
mov
fs
or
fnstenv
cmp
pusha
into
repnz
jmp
sahf
xchg
ds
adc
mov
(bad)
out
dec
push
xchg
mov
pop
or
test
(bad)
cmps
and
push
adc
fld
ds
inc
sbb
in
mov
sbb
adc
push
mov
and
jo
mov
jmp
lock
test
jmp
js
retf
cmp
ja
lock
icebp
imul
and
jecxz
adc
dec
pop
loopne
adc
push
add
fisubr
shr
xlat
popa
ins
call
push
mov
mov
adc
jl
lahf
shl
inc
adc
not
jnp
mov
xchg
jnp
jp
add
ins
sub
xor
xchg
test
inc
or
(bad)
jno
xlat
test
mov
or
mov
repz
dec
mov
sub
cs
inc
in
sbb
xchg
mov
xor
stc
retf
cmp
rcl
mov
jae
fild
in
or
inc
sbb
in
cmp
cmp
leave
iret
outs
bound
ds
xchg
(bad)
mov
add
pop
outs
cld
fs
xor
xchg
into
mov
jb
jns
adc
push
repz
ins
jmp
pushf
fst
cmps
mov
mov
outs
add
aaa
jae
cmp
xchg
xchg
sub
std
fnsave
outs
stos
inc
or
(bad)
cmc
aaa
mov
int3
sub
cmps
fnsave
scas
xor
sbb
out
jo
outs
or
mov
in
das
add
pushf
ret
push
mov
push
mov
test
sbb
xor
xchg
dec
pop
sub
scas
pop
sub
movs
add
jmp
sti
xchg
add
call
or
xlat
in
jp
(bad)
mov
movs
push
test
fwait
jns
dec
test
dec
xchg
scas
inc
xor
mov
mov
fsub
ret
inc
mov
pop
dec
push
aas
cmc
clc
test
mov
fnsave
mov
sub
stos
das
jne
push
mov
icebp
fnsave
repnz
loop
fnsave
movs
popf
test
mov
and
push
pop
ret
push
ret
jae
jp
push
mov
je
pop
add
jb
adc
push
mov
pop
lahf
fbld
sbb
fidivr
shr
retf
int3
in
repz
push
dec
cmp
or
dec
enter
and
cmp
fist
cmp
in
add
mov
(bad)
cmp
push
jmp
leave
repz
in
push
fiadd
lock
ins
fs
in
pop
add
and
and
jae
fbld
mov
and
repz
mov
jecxz
outs
addr16
or
sub
dec
loopne
call
xchg
(bad)
popf
mov
add
jb
into
mov
add
xchg
shl
mov
xchg
outs
loopne
lods
fsub
inc
sub
mov
sbb
xchg
pop
aam
dec
adc
into
hlt
mov
mov
add
and
mov
sub
(bad)
or
outs
addr16
sti
sti
fsub
push
mov
(bad)
sbb
imul
ds
les
sbb
mov
fcomp
jle
out
ins
or
in
and
pop
fsub
xor
sbb
jecxz
jbe
adc
shl
inc
fsub
nop
loopne
repz
out
jmp
or
cdq
mov
xor
dec
scas
ins
imul
mov
neg
data16
pop
mov
aad
std
ja
out
(bad)
and
stos
call
xor
test
jb
add
call
fdiv
mov
jg
neg
add
int
pusha
push
adc
push
loope
or
jbe
push
pop
das
sub
inc
cmp
fist
adc
push
pop
push
pop
pusha
sub
mov
mov
jno
push
jge
sub
mov
fdivr
nop
stc
das
add
cld
pop
cld
xor
sub
in
popf
xchg
js
iret
push
out
mov
mov
inc
xor
sub
ins
jmp
lods
adc
repnz
pop
cmps
(bad)
jmp
push
imul
cs
xor
ins
fiadd
mov
add
jp
mov
fisub
jne
sub
xchg
lea
lea
mov
xchg
xchg
mov
adc
mov
push
push
dec
inc
lock
mov
retf
imul
sar
(bad)
xacquire
inc
jg
fdivrp
or
cmp
pop
xchg
jg
pop
ss
fs
pop
(bad)
push
sahf
xchg
xor
or
loopne
mov
sahf
adc
mov
pop
(bad)
movs
mov
sub
pushf
imul
or
aam
loopne
or
xor
cdq
in
out
stos
es
jge
out
mov
leave
and
inc
orps
sar
mov
mov
nop
xchg
hlt
sbb
pop
cmp
adc
shr
xor
fadd
adc
popf
lahf
jp
leave
cmc
cld
stos
repz
add
adc
in
dec
adc
inc
xchg
dec
repz
add
mov
and
int
mov
jae
sbb
sbb
jbe
inc
inc
mov
sbb
in
rcr
mov
inc
sub
cmp
jecxz
jmp
add
ins
aaa
fiadd
retf
jmp
pop
sar
or
add
push
mov
or
push
outs
mov
dec
jne
push
cmp
and
mov
sbb
pop
mov
lahf
das
cli
xchg
cld
push
outs
mov
icebp
je
fild
ss
in
lods
push
pop
inc
jo
out
adc
push
(bad)
mov
add
gs
in
xor
cmp
aam
cmc
sbb
cmc
xchg
std
aaa
aas
(bad)
push
adc
xor
pop
pop
cli
cli
(bad)
jbe
les
dec
stc
xor
enter
mov
shl
imul
adc
adc
mov
test
xchg
sub
inc
and
push
xchg
aad
xchg
mov
pop
push
xabort
in
(bad)
out
je
scas
fwait
push
call
mov
rol
mov
xchg
or
out
shr
mov
bound
or
fistp
mov
push
loopne
pushf
jo
push
mov
out
mov
fisttp
push
enter
or
sbb
fs
jb
add
(bad)
in
cdq
ret
out
and
mov
jne
inc
push
(bad)
std
add
dec
ret
pop
rcr
inc
add
aaa
test
dec
mov
jecxz
mov
popf
lods
push
loopne
cdq
and
hlt
push
mov
shl
(bad)
mov
jne
mov
xor
outs
test
mov
and
cmp
cdq
fucomi
scas
xchg
mov
sub
mov
and
jno
test
jae
push
hlt
xchg
jnp
dec
mov
xchg
test
pop
sub
int
adc
pop
int3
inc
shl
(bad)
push
xchg
dec
enter
jge
jns
js
mov
cmp
and
adc
push
imul
movntps
sbb
or
cmc
sub
cmp
cmp
or
or
test
(bad)
mov
inc
dec
cmp
jbe
pop
add
ret
sub
in
out
ret
outs
push
pop
sub
movs
adc
jne
scas
mov
leave
sahf
std
adc
jo
rcl
test
cmp
add
add
adc
scas
imul
frstpm(287
mov
inc
outs
push
clc
jae
add
cmps
loop
mov
xor
cli
inc
(bad)
hlt
in
push
jo
leave
dec
scas
sbb
adc
jle
cmp
leave
adc
into
xchg
call
popf
popa
and
ins
mov
call
in
in
xor
push
jge
aad
jnp
xor
mov
sti
mov
sahf
popf
dec
or
pop
jbe
mov
leave
mov
(bad)
scas
sar
xor
xchg
jbe
xor
adc
pop
dec
sbb
int
movs
mov
(bad)
jo
xor
shr
fdivr
clc
dec
ret
cmp
xor
out
movs
icebp
fwait
in
sub
push
adc
dec
nop
test
je
(bad)
cmp
adc
imul
jnp
stos
sbb
pop
xchg
push
add
ret
add
fadd
sub
mov
cmp
scas
or
ret
or
mov
adc
aam
and
in
mov
stos
mov
mov
outs
seta
adc
test
imul
xor
enter
xchg
or
movs
fdiv
ins
adc
js
pushf
sbb
out
add
cwde
lods
sbb
out
daa
arpl
mov
jge
ret
loope
div
or
lods
ret
jae
(bad)
sub
mov
sbb
add
sbb
sub
(bad)
mov
ins
jns
push
out
xchg
jne
xchg
sub
in
sub
dec
daa
mov
bound
lea
aad
mov
and
push
mov
in
jl
xor
aam
jbe
enter
push
fwait
sub
push
out
mov
or
scas
cmp
pop
sub
stc
xchg
nop
pop
mov
mov
xabort
cld
leave
cmp
mov
push
ins
mov
mov
sub
xchg
outs
push
lods
rol
push
(bad)
arpl
push
or
mov
lds
adc
or
popf
call
mov
lods
pop
lahf
rcl
pop
mov
dec
xor
sbb
push
jne
mov
cmp
aaa
push
(bad)
mov
cwde
pop
aam
dec
repz
fmul
out
fcomp
jmp
cmps
inc
ja
adc
cmp
in
in
(bad)
jbe
icebp
cmc
rcr
sbb
and
sbb
repnz
xchg
std
cmps
test
adc
bound
and
sbb
mov
dec
sar
ins
mov
test
pop
pusha
mov
pop
lds
xchg
xor
mov
loop
mov
icebp
jmp
call
pop
add
mov
pusha
pop
outs
jg
shl
push
test
sbb
add
cmp
inc
sbb
jmp
inc
xor
jnp
ss
mov
test
int
push
arpl
movs
mov
sar
adc
xchg
inc
or
popa
push
mov
cli
loop
rcl
aaa
xchg
shr
mov
ins
call
adc
gs
cmp
sbb
adc
jp
mov
ret
push
xchg
fidivr
call
fcomp
ins
dec
pushf
push
xor
sbb
idiv
rol
inc
jle
aam
mov
movs
jg
xchg
sub
xchg
test
cmp
xchg
sub
add
mov
jge
pop
xor
cli
fcomp
call
scas
scas
sahf
test
(bad)
out
adc
pop
dec
xor
out
and
int
lods
hlt
sbb
pop
ja
in
das
dec
cld
fdivr
nop
loope
push
cmc
mov
cmp
aas
ret
outs
cmp
in
cmp
stos
cld
sbb
jmp
push
hlt
push
std
add
sar
and
cmp
arpl
jge
jecxz
sahf
(bad)
jp
inc
xor
or
sbb
pop
dec
push
(bad)
dec
mov
mov
mov
mov
and
pop
mov
cmc
jg
fsub
mov
mov
rol
sbb
neg
sbb
daa
xchg
ret
lock
mov
ja
and
arpl
sbb
sub
mov
fbstp
xlat
push
mov
and
sbb
xor
retf
dec
movs
outs
out
inc
retf
pop
jo
test
ja
jp
jns
pop
je
aam
sbb
mov
xor
test
pushf
js
and
jb
jmp
loop
adc
and
sti
xchg
in
jg
fwait
mov
mov
sti
popa
adc
aaa
adc
mov
mov
jecxz
inc
jbe
sbb
push
cmp
leave
push
pop
sub
and
fs
mov
retf
push
xor
loopne
fidiv
bound
push
cmp
std
jae
in
gs
xchg
mov
cmp
in
retf
xchg
push
(bad)
or
daa
jecxz
pop
(bad)
jecxz
or
cdq
les
icebp
xchg
(bad)
pop
fwait
repz
and
stos
push
push
pop
push
scas
movs
push
in
add
fld
jmp
cmp
cmp
inc
dec
xor
lds
mov
gs
fldl2t
enter
sbb
and
jbe
pop
(bad)
popf
cmp
add
or
sub
pop
jno
or
dec
xor
cmc
and
mov
push
call
int
inc
das
push
and
adc
cmp
jl
jb
repz
mov
fwait
adc
std
dec
(bad)
and
dec
jbe
xchg
mov
(bad)
shl
fist
xchg
ss
and
jne
(bad)
fisub
fdivr
or
add
or
(bad)
test
stos
mov
aam
or
hlt
add
fldcw
test
fidivr
xlat
cmp
push
pop
cmp
cmp
daa
ret
pop
cmp
and
add
jbe
cmp
pop
cs
cs
add
aad
mov
sub
(bad)
out
adc
into
dec
mul
cmp
pushf
aam
xor
int
jg
push
pop
pop
mov
xchg
mov
adc
adc
jo
jno
outs
sub
jb
jg
mov
es
jne
mov
and
dec
shr
ficom
outs
addr16
sub
call
and
daa
jnp
test
arpl
xchg
sbb
call
outs
or
push
mov
push
ins
jecxz
inc
push
xchg
xlat
inc
mov
xchg
push
jle
pop
adc
adc
sbb
pushf
rol
fmul
adc
jge
jp
pop
gs
mov
jle
lock
mov
adc
dec
add
push
outs
sbb
mov
mov
and
sbb
and
out
and
pusha
test
jae
jne
mov
ror
pop
movs
call
jl
cmp
push
fsub
mov
dec
inc
ins
dec
leave
push
out
mov
pop
sbb
loope
icebp
push
in
retf
mov
imul
popa
icebp
lods
mov
aas
jmp
pop
retf
or
xor
push
cmps
xor
and
sbb
dec
push
cs
popa
jmp
jp
cdq
scas
jns
test
mov
adc
mov
mov
add
jae
lock
mov
dec
nop
jne
rcl
(bad)
push
std
xchg
dec
test
cmps
xor
imul
mov
iret
daa
xchg
add
shr
cmc
int3
and
mov
sub
lods
(bad)
setno
push
ds
mov
push
daa
data16
xor
retf
dec
mov
in
ss
and
iret
data16
test
lds
pop
sbb
or
pop
scas
mov
add
or
cdq
jbe
push
mov
jo
fcom
outs
jge
dec
movs
imul
xlat
push
jnp
stos
arpl
es
xchg
xchg
in
or
add
and
cld
sub
push
loope
(bad)
(bad)
aas
fwait
jne
jo
adc
or
xor
mov
test
sti
add
xlat
inc
loopne
mov
pop
xor
adc
mov
test
repnz
mov
mov
jmp
jl
mov
(bad)
sub
je
movs
call
out
loopne
mov
bound
clc
inc
leave
(bad)
pop
retf
cwde
pop
inc
ret
std
and
int
adc
xchg
push
gs
iret
cwde
pusha
inc
sub
test
push
xchg
out
or
mov
imul
or
lahf
enter
out
inc
and
xchg
push
dec
jbe
out
mov
mov
test
outs
cli
dec
lds
test
push
cmp
fldenv
or
push
push
arpl
popa
es
cli
or
int
pushf
imul
(bad)
lods
mov
xchg
or
iret
sbb
pop
fst
dec
mov
enter
imul
pop
jns
and
push
rol
ror
sahf
xchg
inc
mov
mov
aam
cdq
mov
cmps
jne
pop
lods
inc
fisttp
mov
test
ins
int3
sahf
push
mov
in
shl
movs
pop
mov
es
shl
xchg
mov
inc
xchg
daa
and
in
push
adc
repnz
out
xchg
loope
dec
call
cmp
pusha
sar
or
dec
sub
add
in
mov
xor
aaa
xchg
out
ret
xchg
fsub
mov
pop
xor
dec
jge
xor
cld
sub
and
xchg
out
loope
sub
or
mov
stos
fwait
cli
jb
dec
(bad)
and
pushf
sbb
scas
repz
sbb
(bad)
out
push
inc
mov
fnstcw
js
jne
enter
sub
xchg
imul
lock
cdq
lods
sti
add
adc
add
lea
push
mul
or
fild
adc
(bad)
pop
or
sbb
test
mov
mov
call
cmp
movs
retf
cmc
sbb
push
jbe
pop
jmp
inc
js
das
imul
or
jbe
jbe
pop
jle
cmp
cmp
shr
mov
outs
loopne
(bad)
popa
cwde
in
ds
jae
fadd
(bad)
ds
or
inc
rol
retf
jmp
(bad)
fistp
or
push
mov
xchg
dec
fcomp
sub
lahf
div
loopne
stos
out
push
jmp
aaa
push
pop
xchg
pop
repnz
lods
aas
mov
inc
adc
sbb
pop
(bad)
mov
dec
mov
test
dec
cmp
pusha
retf
mov
pop
push
and
je
dec
clc
xor
out
mov
mov
xor
or
and
arpl
or
mov
addr16
fs
or
popf
jnp
cmp
(bad)
cmc
mov
jo
xor
or
mov
mov
bound
jae
shl
jmp
aas
mov
inc
sub
inc
pop
pusha
push
jns
jno
xor
add
inc
jno
icebp
fdiv
daa
into
aas
fs
pop
int
imul
sbb
rcr
hlt
xor
mov
pop
or
mov
int
retf
and
sbb
jp
push
fsubp
jae
not
sbb
xchg
out
mov
cli
ss
es
push
push
push
mov
mov
outs
dec
daa
jne
repnz
in
pop
ror
iret
scas
and
dec
data16
jo
xchg
in
jns
push
push
xchg
mov
pop
loop
push
pushf
hlt
jmp
adc
addr16
scas
gs
(bad)
clc
imul
das
mov
push
xchg
mov
imul
pop
dec
cdq
sbb
mov
iret
ds
pushf
pop
jmp
nop
(bad)
out
xchg
out
scas
repz
out
cmps
inc
cmp
mov
jo
cmp
xchg
rcl
sbb
fst
and
out
int3
inc
fstp
(bad)
add
or
add
loope
test
or
adc
mov
bound
into
cmp
pop
pop
hlt
xchg
jnp
leave
cld
jecxz
cmc
push
daa
pop
ins
sti
loopne
fdivr
sbb
lahf
mov
mov
fwait
xchg
add
jne
je
fmul
in
cmps
lock
cmp
ins
sbb
fcomp
iret
dec
ins
sub
adc
mov
or
adc
sub
push
addr16
ss
push
jne
ja
lahf
xor
ss
sbb
rol
js
scas
inc
into
dec
cmp
mov
pusha
adc
retf
adc
xlat
xor
mov
iret
sbb
test
js
adc
adc
mov
repz
sbb
loope
fiadd
fsub
lds
push
lock
pop
fwait
ja
mov
sti
cld
sub
or
mov
loope
mul
popf
cmp
test
dec
lahf
dec
jo
jae
mul
xlat
aas
js
cmps
scas
xchg
dec
mov
pop
push
or
stos
sub
pop
das
(bad)
mov
bound
xchg
adc
jg
mov
idiv
or
push
fdivrp
movs
std
ret
mov
aad
out
retf
out
int3
jge
cwde
repz
rcl
jg
mov
mov
les
mov
jl
(bad)
repz
hlt
xlat
andps
and
cli
stos
push
mov
mov
out
add
cdq
push
mov
loope
mov
mul
js
add
gs
sub
jecxz
dec
xchg
gs
jg
push
int3
in
xor
inc
jbe
adc
adc
leave
mov
inc
scas
std
dec
mov
mov
pop
xchg
adc
bswap
aaa
fmul
in
(bad)
cmp
xor
in
mov
imul
out
sub
sbb
test
(bad)
movs
xchg
retf
adc
into
mov
ror
paddb
xchg
adc
mov
push
inc
lods
movs
push
ins
cs
mov
(bad)
scas
mov
sbb
mov
aam
call
jb
cmp
test
jo
adc
pop
xor
add
(bad)
pop
push
jae
xchg
pusha
cmps
(bad)
mov
cmp
pop
sub
lahf
or
aaa
sub
add
je
xor
lock
ins
jmp
inc
jmp
inc
pop
mov
or
inc
mov
cmp
cmps
mov
fucomi
out
push
imul
mov
cwde
into
lahf
xchg
pop
cmp
or
rol
mov
cmp
inc
pop
push
stos
sbb
pop
mov
add
pop
xor
push
sar
loopne
sub
shl
mov
fbstp
or
cmp
int3
dec
sub
movs
cwde
mov
fisttp
sub
loop
adc
fld
lods
jmp
inc
ins
aam
sub
sbb
push
xchg
test
sar
xchg
fiadd
and
outs
adc
shl
sbb
call
enter
mov
mov
cmps
mov
(bad)
repz
mov
into
sub
movs
xchg
daa
fdiv
sub
xor
fistp
es
jmp
mov
gs
adc
rcr
leave
jmp
mov
fdivr
xor
aam
dec
in
ret
mov
mov
mov
xchg
mov
call
pop
sub
mov
add
jb
fwait
push
and
mov
int
adc
and
add
mov
jecxz
icebp
pop
xchg
call
or
daa
mov
fnstsw
push
cwde
push
test
mov
cmp
(bad)
sbb
mov
ins
mov
inc
mov
(bad)
test
mul
imul
fwait
rcl
hlt
inc
fist
cmp
mov
enter
push
pop
jle
shl
pop
cmp
pop
fadd
or
icebp
and
ret
(bad)
dec
mov
in
aaa
xchg
pop
and
mov
imul
cmp
mov
in
lahf
push
dec
xor
test
jmp
pusha
sub
mov
or
loope
pushf
div
mov
sub
imul
ins
xchg
ret
sbb
mov
fcmovnb
mov
push
adc
add
mov
std
or
push
inc
cmc
inc
mov
loopne
mov
sbb
outs
mov
adc
aas
pop
jns
pop
or
push
outs
sti
add
dec
adc
popa
retf
ds
and
cmp
pop
ja
lock
xor
(bad)
mov
imul
cmps
push
and
or
leave
repnz
xchg
outs
outs
ret
jl
imul
add
xor
sbb
xchg
adc
xchg
and
nop
lock
enter
xchg
lock
xor
es
adc
sub
(bad)
std
pop
mov
(bad)
dec
popa
mov
je
outs
lods
pop
jo
xchg
ja
push
mov
ret
inc
pop
mov
add
enter
xchg
pop
sub
and
repnz
lock
stos
fs
mov
or
test
nop
or
jno
lods
rcl
mov
mov
fcomp
out
cdq
mov
out
adc
adc
xor
aaa
bound
push
fisttp
nop
pushf
iret
mov
jmp
mov
mov
cdq
ins
mov
push
and
mov
cmc
add
inc
mov
mov
mov
hlt
sbb
(bad)
push
aad
dec
xchg
jbe
or
jmp
cmp
push
leave
sahf
arpl
sbb
push
or
jmp
sub
ret
aas
mov
arpl
inc
dec
push
add
xchg
pop
out
loopne
sub
div
ds
mov
xor
or
adc
sbb
push
mov
xor
mov
not
adc
fwait
popa
mov
push
scas
test
push
pop
adc
popf
out
push
rol
fist
aad
(bad)
inc
push
test
sbb
mov
lahf
mov
xor
push
sar
mov
mov
jle
sbb
sbb
repnz
jno
es
inc
mov
cld
fs
int3
into
aaa
arpl
jnp
jmp
int
pusha
outs
push
push
jns
les
aas
sub
pop
cmp
sar
mov
sub
fst
mov
mov
and
add
test
loop
jge
pusha
sbb
ins
sub
in
popf
iret
jb
pop
and
jb
pop
or
jo
cmp
dec
icebp
sbb
inc
cdq
movs
adc
xchg
xchg
xchg
pop
pop
out
clc
sbb
cmp
pop
mov
or
mov
icebp
mov
jnp
pop
push
out
pop
not
jmp
cdq
lahf
mov
ds
jns
int3
add
sub
(bad)
bound
ins
movs
seta
sbb
call
cmp
pop
inc
cmp
or
add
xchg
cmps
xor
mov
gs
dec
(bad)
or
std
sub
jns
xchg
nop
dec
cmp
imul
mov
or
lods
mov
lods
gs
sbb
xchg
out
dec
lods
cmp
dec
fldenv
lods
inc
cs
adc
mov
(bad)
adc
movs
out
dec
stos
(bad)
sbb
jl
xchg
mov
pushf
mov
pop
jmp
adc
in
or
jle
jg
ret
xlat
xor
push
sti
jne
(bad)
iret
or
in
inc
pop
add
sbb
sub
xor
int3
shr
shr
ficomp
dec
mov
jno
sbb
(bad)
or
jno
ret
out
pushf
sbb
jg
cli
movs
adc
repz
xor
in
dec
mov
fnstcw
jmp
mov
sbb
imul
inc
pushf
sbb
stc
lock
cdq
cld
in
jle
push
ror
mov
sbb
and
push
scas
mov
std
add
and
xor
repz
pop
ins
loop
jl
les
ins
fs
jecxz
fadd
cmp
mov
out
scas
test
fisttp
nop
cli
inc
loopne
mov
add
inc
inc
xchg
or
mov
iret
les
ficom
adc
sub
(bad)
push
pop
mov
adc
es
xor
ins
or
leave
xchg
mov
and
add
je
loop
gs
call
xchg
aas
pop
and
push
cld
lds
sar
test
xchg
jne
inc
out
mov
push
js
adc
ja
sahf
and
cmc
xchg
retf
pop
aam
in
in
sub
pop
inc
xchg
inc
cmps
es
(bad)
jle
outs
out
call
sub
ds
jp
ret
xor
hlt
dec
fcom
in
xor
cmp
(bad)
enter
das
stos
push
add
xchg
data16
pop
inc
pushf
pop
pop
xor
sub
push
arpl
jg
xchg
push
hlt
test
adc
ret
imul
dec
fst
(bad)
scas
xchg
xchg
add
out
enter
or
(bad)
or
fisubr
rol
cmp
(bad)
xor
dec
test
xchg
mov
int3
dec
test
hlt
cmp
push
stos
aas
mov
xchg
(bad)
nop
or
cmp
icebp
xlat
(bad)
js
push
push
call
and
js
leave
xchg
ss
sbb
div
in
mov
pop
sub
test
sub
in
xor
mov
add
clc
sbb
(bad)
ss
aam
dec
(bad)
ins
xchg
and
stos
pop
dec
leave
dec
ins
mov
mov
push
jb
(bad)
mov
adc
out
add
fstp
xor
xchg
mov
test
out
xchg
(bad)
jmp
test
les
retf
je
loop
shl
add
add
push
fist
xchg
push
mov
xor
mov
jle
xor
pop
inc
repnz
enter
stc
mov
cmp
idiv
fisttp
add
and
or
or
mov
out
shl
test
mov
ror
sub
loope
adc
push
out
and
mov
mov
sub
test
fsincos
and
std
mov
daa
mov
pushf
mov
sbb
mov
in
and
adc
cmps
jb
jne
loop
sysenter
scas
ret
and
or
xlat
jns
das
aaa
jo
cdq
push
dec
pop
ins
or
ja
cmp
dec
repz
jl
cld
mov
adc
sbb
int
sar
sub
sub
out
cld
shl
xor
push
pushf
xor
add
add
movs
xor
idiv
in
cmp
inc
es
retf
test
add
jge
xchg
xchg
push
pop
je
mov
fidivr
(bad)
and
adc
popf
adc
lahf
(bad)
jae
aas
mov
test
lea
adc
xchg
dec
repnz
fs
inc
and
jg
inc
sub
push
aas
push
adc
mov
cmp
dec
outs
mov
inc
in
retf
mov
call
inc
push
xchg
xor
mov
addr16
add
lock
and
adc
xchg
and
ja
cmp
dec
movs
xchg
xchg
(bad)
repnz
in
dec
sub
jns
inc
sbb
test
cmc
and
test
(bad)
cmc
add
sbb
and
rep
push
sbb
gs
adc
xor
add
and
test
push
push
sbb
mov
and
(bad)
ins
js
xchg
cld
xor
xor
mov
aam
movs
pop
mov
cli
enter
test
mov
sub
and
hlt
test
call
fmul
hlt
jmp
pop
xchg
div
pop
mov
sbb
inc
xchg
or
sub
je
idiv
leave
in
sub
fist
das
test
sub
sub
mov
data16
outs
pop
in
pop
les
fsubp
mov
push
cmp
jge
mov
aaa
dec
gs
xchg
aam
ret
mov
stos
retf
jge
push
mov
sbb
xchg
fst
ds
dec
cmp
movs
into
sub
pop
adc
jl
cmp
mov
test
dec
adc
shl
push
or
icebp
inc
sbb
xor
out
jmp
dec
into
je
out
jbe
imul
mov
pushf
repz
adc
mov
mov
cwde
sahf
and
and
inc
dec
stos
mov
neg
fs
pop
js
fist
mov
pop
pop
pop
cmps
(bad)
xchg
test
pop
aam
ds
movs
test
mov
aas
add
movs
xor
dec
aaa
stos
mov
aas
xor
cmc
mov
push
cmps
retf
pushf
adc
mov
test
xor
fnstsw
fmul
sub
out
gs
loope
rol
xchg
cli
or
loope
push
jg
cmp
xchg
and
or
icebp
fwait
xor
jno
dec
inc
pop
ret
sub
inc
jmp
mov
xchg
mov
(bad)
adc
sub
adc
sbb
lods
sub
add
loopne
scas
cmp
out
xchg
hlt
adc
mov
or
mov
dec
aaa
test
pop
sbb
pop
push
(bad)
jbe
cli
dec
push
pop
push
in
inc
mov
es
mov
xchg
fidivr
mov
or
or
and
pushf
cli
mov
sti
sub
sar
jmp
(bad)
pop
arpl
xchg
and
add
daa
inc
std
push
adc
jmp
sbb
inc
fcmovu
cmc
sub
lods
loopne
push
inc
lods
loope
xchg
push
push
sbb
repz
arpl
mov
inc
push
push
pop
sahf
xlat
fwait
outs
enter
nop
fidivr
xchg
xchg
inc
cmp
mov
and
push
add
fmulp
repz
push
dec
add
push
add
xchg
out
mov
xchg
xchg
sub
cmp
pop
cmp
aas
fsub
cmps
xlat
out
jp
sbb
rol
out
mov
mov
xor
push
sbb
test
imul
mov
mov
xchg
and
xor
daa
adc
fsubp
sbb
mov
pop
push
jge
adc
cmps
mov
jle
pop
dec
call
daa
xor
dec
push
jge
data16
adc
sub
or
popa
in
aam
push
mov
cdq
pop
and
ins
nop
jecxz
test
adc
or
aaa
push
cmp
aad
sub
push
and
shl
clc
mov
(bad)
loope
retf
sub
lahf
jb
jmp
hlt
loop
ret
pop
pop
sbb
jb
sbb
push
mov
adc
dec
out
or
stos
mov
lods
cmp
and
jbe
or
in
js
adc
cmp
xor
mov
jp
loopne
xchg
jae
xchg
jnp
lock
pop
or
scas
push
mov
clc
dec
mov
fistp
and
(bad)
mov
shl
imul
adc
inc
shr
jbe
mov
and
push
retf
int
inc
inc
ja
mov
enter
jp
add
sti
pop
sbb
push
fld
jl
repnz
out
mov
ss
cld
inc
out
lea
retf
(bad)
aad
pop
mov
fcomi
iret
xchg
sbb
(bad)
fwait
pop
(bad)
imul
mov
loop
mov
retf
mov
inc
retf
and
inc
add
mov
in
lods
pop
scas
pop
out
adc
add
aas
(bad)
push
std
imul
adc
inc
scas
jp
mov
mov
xchg
gs
in
imul
jb
pusha
xor
mov
dec
pop
ret
cs
in
xor
sbb
mov
jp
mov
iret
or
sub
adc
(bad)
lods
jmp
sti
sbb
push
mov
xchg
or
jecxz
imul
ja
(bad)
adc
movs
(bad)
or
lahf
mov
loopne
or
dec
rcr
(bad)
call
iret
adc
loop
mov
fsub
clc
jmp
jae
sub
aad
push
jl
mov
(bad)
idiv
test
mov
cld
cmp
jge
cld
or
mov
cmp
cdq
loope
mov
adc
sub
push
cmp
sub
cdq
fadd
std
bound
push
inc
xor
mov
movs
outs
and
cmc
cmps
xlat
and
js
imul
inc
adc
enter
jno
jmp
imul
mov
cmp
mov
call
xor
fidivr
push
mov
or
lahf
jle
or
repz
fadd
or
add
ss
xor
or
out
pop
xor
inc
aas
scas
push
push
adc
arpl
fdivr
or
jae
je
sub
ins
pop
jmp
daa
push
ja
or
cmp
shl
loope
sub
push
or
dec
imul
js
loope
add
shr
sahf
lods
stos
push
cdq
add
lea
scas
and
mov
rcl
sbb
shr
mov
arpl
lahf
icebp
xor
pop
lds
into
xchg
out
popf
cdq
sub
mov
inc
iret
dec
retf
jno
sbb
hlt
xlat
sar
jge
sub
(bad)
aaa
rcr
mov
fdiv
stos
jmp
push
mov
fiadd
stos
outs
popf
jl
xor
lds
in
pop
inc
ins
(bad)
mov
cmp
jns
aad
dec
xor
pop
pop
out
xlat
lods
sbb
sub
dec
nop
test
loope
arpl
mov
leave
loope
mov
mov
mov
jl
sbb
(bad)
and
lds
sahf
sbb
test
sub
test
inc
cmp
imul
or
mov
aaa
pushf
mov
out
aas
lods
fbstp
rcl
(bad)
sbb
(bad)
xchg
fstp
add
lods
mov
fldenv
retf
fwait
loop
mov
repnz
rcl
hlt
lods
and
es
dec
out
cmp
sub
jae
push
inc
jp
icebp
mov
das
fs
pop
movs
mov
rcl
out
out
adc
xchg
adc
mov
stc
push
dec
lds
inc
cs
enter
jb
mov
push
jne
lahf
mov
outs
(bad)
sbb
or
cmp
mov
or
test
int
inc
cmp
or
sub
aas
or
xchg
xchg
mov
hlt
into
mov
aaa
dec
and
mov
bound
loop
mov
call
adc
dec
push
or
inc
jno
xchg
cmp
popa
nop
and
sbb
jg
mov
mov
mov
add
mov
test
adc
ss
test
jle
jnp
out
cs
in
xlat
data16
es
jae
scas
mov
movs
sbb
add
dec
pop
xchg
clc
cmp
pop
jmp
les
leave
(bad)
sub
jae
int3
mov
or
ds
adc
mov
std
jle
repnz
outs
ja
test
js
cwde
call
retf
push
lods
and
mov
pop
sub
gs
stc
btc
hlt
ins
inc
test
mov
xchg
push
mov
mov
sub
shl
mov
xor
mov
jnp
or
pop
dec
ins
(bad)
jno
inc
push
dec
int3
stos
test
lods
jnp
adc
pop
movs
retf
loope
inc
or
mov
std
cli
sbb
retf
ins
inc
adc
in
dec
pushf
ficom
pop
out
mov
and
stos
mov
fidiv
xchg
out
test
cmp
dec
nop
add
mov
and
rcr
or
sbb
stos
out
jmp
push
add
neg
xchg
les
outs
inc
cdq
xchg
jo
xor
in
jo
jbe
sub
lea
jns
pop
mov
xor
cmp
mov
call
jmp
out
and
test
xchg
neg
push
pop
push
je
outs
in
mov
push
data16
dec
push
test
rcr
xchg
es
ret
test
add
adc
dec
inc
sub
and
in
fwait
mov
adc
cmp
mov
call
inc
fbstp
je
jne
daa
mov
aam
stc
jmp
adc
loopne
mov
iret
out
jmp
loope
aaa
push
fldenv
or
shl
pop
imul
in
in
js
dec
sbb
jecxz
add
fist
jmp
jmp
and
ins
xor
jmp
lods
mov
bound
pop
and
in
iret
scas
sbb
jnp
and
cmps
cdq
popf
aas
dec
add
ror
xchg
add
mov
inc
add
pop
sbb
push
popa
push
xor
mov
and
sar
test
mul
aas
call
adc
mov
sbb
xor
push
sub
mov
clc
pop
test
(bad)
adc
push
or
xchg
lock
xor
gs
scas
adc
inc
xchg
test
cmp
lock
leave
push
neg
xor
sub
xchg
adc
pop
enter
movs
pushf
dec
mov
xchg
mov
arpl
dec
je
inc
jns
fcomp
pop
sub
pop
fwait
(bad)
jnp
in
inc
or
adc
xor
test
pop
push
out
push
outs
arpl
xchg
in
or
and
popf
rol
test
fimul
(bad)
push
sub
push
out
cmp
push
ss
movs
xchg
into
dec
rcl
outs
pop
outs
xor
mov
cmp
add
call
jmp
popa
push
(bad)
jnp
mov
jmp
mov
test
and
xchg
dec
push
mov
mov
test
aad
adc
push
mov
shl
add
scas
dec
push
pop
sub
rol
inc
std
out
shl
sbb
arpl
aam
mov
or
rcr
mov
add
mov
pop
(bad)
cmp
xor
xor
mov
test
cmps
ret
pop
xchg
loop
xchg
(bad)
lods
test
inc
cld
in
call
push
in
fidiv
cmps
popf
or
jl
adc
adc
push
xchg
inc
jl
outs
arpl
sar
push
adc
popa
lea
bnd
xchg
push
sbb
mov
pop
push
add
je
xchg
fadd
popf
xchg
jl
loop
cwde
mov
adc
mov
xchg
sbb
test
imul
es
fld
cmps
cmp
mov
in
inc
rcr
push
cmp
pop
mov
jbe
dec
out
sti
cmc
nop
nop
and
cmps
push
lock
and
jp
mov
pushf
mov
out
mov
dec
mov
mov
mov
ss
cmp
pushf
nop
pusha
jo
mov
sbb
xchg
sub
es
sbb
fimul
scas
jne
dec
pop
push
fild
xor
inc
(bad)
int3
mov
std
bound
(bad)
mov
(bad)
xor
jle
in
xor
xchg
ret
add
mov
xlat
jge
mov
pop
vunpckhps
add
je
mov
cmp
out
xor
jno
fstp
out
je
repnz
xor
pusha
shl
push
mov
fistp
jecxz
inc
inc
pop
push
out
add
sub
sbb
or
mov
or
out
cmp
jge
imul
mov
jbe
iret
inc
scas
xor
imul
cmp
jl
push
pop
cmp
push
and
ds
dec
sbb
xchg
es
add
imul
dec
pop
call
or
mov
mov
out
push
mov
sbb
fcomp
mov
dec
test
pop
shl
stos
fcom
mov
pop
outs
out
test
hlt
push
fwait
adc
mov
gs
dec
(bad)
popa
or
cmps
ja
or
add
in
xor
pop
in
cdq
mov
mov
test
in
je
cmps
scas
loopne
adc
std
push
nop
push
in
sahf
xor
ja
or
xchg
enter
ds
cmps
jl
pushf
aas
or
scas
pop
cli
inc
std
ja
sar
jnp
add
nop
rol
loope
and
into
scas
ja
es
sub
das
jmp
sub
in
retf
arpl
push
xchg
sbb
sahf
int3
ins
iret
adc
mov
call
popf
das
dec
mov
pushf
adc
(bad)
push
xchg
imul
push
adc
sub
popa
xor
in
test
xchg
inc
das
or
test
ret
(bad)
loop
and
mov
cwde
inc
(bad)
or
push
mov
cld
adc
cmp
and
jb
sar
popf
cmp
stos
shl
outs
mov
mov
das
or
xor
ins
out
adc
loope
popf
mov
inc
scas
movlps
inc
pxor
xchg
into
cs
push
mov
scas
aas
into
int3
jmp
int3
pop
xchg
daa
in
add
jmp
push
mov
into
stc
sar
js
int
dec
jns
jp
xchg
mov
mov
leave
call
les
ror
(bad)
sub
jmp
(bad)
push
cmp
push
icebp
(bad)
pop
and
nop
sub
clc
ror
pushf
out
out
dec
ror
sub
xor
outs
xor
jmp
retf
int3
or
jmp
cli
repz
mov
fsubrp
inc
pop
xchg
in
mov
daa
pop
test
test
in
imul
mov
rol
sub
stos
popa
sub
mov
jecxz
xor
scas
mov
push
fnstcw
movs
cmp
or
fdiv
(bad)
(bad)
mov
push
cmp
ins
jno
(bad)
loopne
in
push
push
pushf
ret
ret
add
jl
jp
inc
pushf
sub
or
call
je
dec
xchg
pop
or
mov
or
xor
retf
leave
add
scas
jl
push
push
dec
sysret
fwait
xchg
cmps
cmp
xchg
ins
or
xchg
jb
ins
(bad)
loop
stc
and
or
out
and
fidiv
jb
jmp
aas
fwait
pop
sbb
aad
xchg
(bad)
cld
xlat
push
push
xlat
jne
sub
stc
fcmovu
out
scas
adc
(bad)
mov
adc
push
adc
frstor
add
pop
adc
rol
outs
dec
dec
stos
push
loop
adc
clc
sbb
fwait
sub
push
aaa
cmps
out
loopne
cld
push
je
loopne
lock
stos
(bad)
pop
bound
push
fcmovbe
cmp
pop
retf
or
xchg
(bad)
jo
jecxz
push
cld
ret
loope
sahf
loop
(bad)
fbstp
mov
mov
test
mov
or
xchg
cmp
xlat
add
out
cs
sbb
test
push
mov
daa
imul
fidivr
adc
pop
mov
idiv
push
xchg
mov
fiadd
fwait
xchg
push
cs
sahf
aaa
es
push
xor
inc
fisubr
sub
(bad)
mov
lahf
mov
not
add
add
(bad)
in
xchg
int
dec
and
stos
mov
mov
cli
inc
adc
or
adc
pop
adc
push
sub
add
sar
test
mov
test
xchg
sbb
add
scas
push
and
ret
jmp
movs
loope
xchg
xchg
popa
fxch
xchg
or
retf
mov
cmp
pop
imul
daa
bound
retf
cmps
fmul
jno
add
xor
ins
iret
mov
add
cmp
in
xchg
pop
cmps
sub
ss
in
js
mov
jae
in
(bad)
lods
mov
sbb
(bad)
clc
jno
push
fcompp
out
add
(bad)
mov
in
popa
imul
xchg
fwait
out
or
call
das
aad
clc
push
and
ins
cld
add
call
xchg
cmps
sbb
cmps
adc
pop
adc
stos
(bad)
adc
std
outs
cmp
out
mov
int3
inc
lods
push
cdq
les
leave
xchg
fptan
sahf
add
cmp
test
nop
push
cmp
retf
dec
fimul
xchg
sahf
mov
mov
jmp
ror
mov
dec
sub
ins
add
xchg
mov
pushf
xor
xor
fst
loopne
cmp
mov
jmp
cwde
jns
or
out
mov
mov
or
push
mov
jb
push
fbstp
js
sub
shr
inc
or
not
stos
js
mov
xchg
cs
out
std
xchg
mov
imul
mov
jecxz
lock
jns
mov
loopne
mov
fdivr
sar
lods
popa
pushf
jns
shl
adc
imul
or
mov
loope
or
mov
dec
cmp
add
add
inc
aaa
lea
movs
inc
shr
dec
loop
cmc
mov
out
jae
jae
xchg
xchg
outs
cmps
xor
mov
(bad)
pop
or
push
sahf
dec
xchg
or
push
clc
xchg
cmps
jmp
sbb
cs
xor
cmp
xchg
add
shl
in
sbb
inc
out
push
pop
mov
xor
push
ds
jne
and
inc
mov
int3
aam
mov
adc
lock
repnz
push
aad
add
dec
popf
mov
adc
pop
jnp
call
inc
lods
outs
push
rol
das
inc
lahf
clc
or
cmps
mov
xchg
(bad)
lock
mov
push
or
jge
mov
cld
inc
lds
or
adc
data16
add
lea
xchg
add
repnz
cmp
push
clc
in
pop
leave
cmp
jo
mov
xor
jo
jne
enter
cld
cpuid
xchg
aas
and
jl
stos
xchg
mov
mov
(bad)
out
aam
test
out
dec
arpl
xchg
in
test
mov
les
cmc
mov
pop
les
fsqrt
cli
mov
push
ror
jnp
mov
mov
cmp
das
push
out
or
mov
pop
mov
cwde
sub
aas
aam
add
in
pop
sbb
outs
shl
cmp
inc
enter
es
mov
sub
or
inc
js
adc
pop
popf
jecxz
cmp
lahf
ins
jae
sbb
popf
popf
(bad)
xor
mov
mov
cmp
mov
dec
and
dec
jbe
call
push
leavew
pop
or
inc
jno
cmc
leave
xchg
cdq
or
test
mov
mov
mov
loop
mov
dec
sahf
jo
jg
stos
or
or
shl
lahf
add
fidiv
std
sub
mov
test
or
fwait
pop
xor
or
mov
inc
and
sub
(bad)
xor
adc
cmp
inc
sbb
out
fstp
fwait
call
adc
cmp
call
in
aas
mov
cmps
mov
mov
xor
in
xor
lds
jo
push
push
dec
push
fst
(bad)
aam
loopne
push
push
cmp
lods
and
lock
sti
push
mov
cmps
cmp
xor
std
es
jl
mov
aaa
cmp
pop
and
sub
ret
aas
ret
xchg
jb
daa
jbe
pop
mov
repnz
push
fistp
mov
sub
aas
mov
lea
pop
pop
add
out
push
mov
fnstcw
stos
xor
shl
push
mov
cwde
fisttp
pop
sti
cli
adc
jle
xchg
aas
ret
lods
add
push
mov
les
xor
push
sar
cmc
push
dec
adc
js
aam
and
int3
gs
sahf
dec
xor
adc
and
fcomp
xchg
in
jnp
sahf
cmp
vpunpckhqdq
sub
les
xchg
fdivr
repnz
mov
mov
xchg
(bad)
adc
sub
push
sbb
jl
movs
mov
sbb
icebp
call
into
enter
sbb
push
das
in
stos
outs
mov
add
lods
adc
pop
das
(bad)
in
mov
sti
sub
loopne
mov
or
and
pop
in
jg
std
int3
xchg
pop
movs
sbb
ss
arpl
arpl
push
or
push
outs
push
into
sbb
popa
movs
or
pop
pop
inc
dec
jb
adc
fs
and
stc
mov
je
dec
shr
iret
dec
(bad)
xchg
test
call
mov
idiv
out
jmp
adc
dec
pop
pop
movs
fmul
test
fcmovnb
push
adc
jecxz
loope
js
mov
outs
push
leave
mov
aaa
test
into
mov
lea
mov
aam
pop
mov
push
add
dec
sub
xchg
out
add
bound
sbb
or
in
xchg
add
gs
(bad)
aaa
fcomp
jbe
mov
inc
xor
ror
jp
(bad)
lods
cmp
adc
cwde
scas
or
add
loope
mov
and
xchg
fidivr
int
fldcw
cmp
jmp
inc
xchg
idiv
xlat
push
lods
mov
xlat
xor
jl
in
scas
bound
fsubr
dec
mov
retf
and
js
xchg
cmc
repz
mov
push
stc
inc
mov
adc
mov
stos
xchg
jg
popf
xor
out
ins
push
wrmsr
out
fwait
add
stos
xor
repnz
mov
push
dec
lods
jb
and
mov
outs
jnp
rol
popa
stos
fdiv
pop
arpl
inc
inc
jge
inc
bound
(bad)
jbe
pop
adc
mov
xlat
scas
(bad)
pushf
pushf
js
mov
mov
adc
call
call
sub
lahf
rol
je
mov
or
repz
push
cmp
xchg
inc
test
loope
nop
test
or
(bad)
icebp
hlt
and
push
imul
mov
jg
jmp
push
repnz
fcmovnu
sbb
add
cli
sub
add
jl
in
cmp
ret
xchg
(bad)
mul
fs
mov
dec
popa
imul
mov
jmp
loop
adc
test
cs
retf
push
jmp
in
fisub
jecxz
shr
ins
jnp
test
mov
outs
pop
jns
xor
outs
xchg
pusha
lahf
push
mov
fcmovnbe
stos
call
xlat
movs
sub
xor
pop
and
sbb
xor
scas
mov
mov
cld
sub
shr
repz
dec
movs
or
sbb
inc
movs
fisttp
aaa
call
sbb
add
rcl
mov
adc
ret
iret
(bad)
(bad)
test
push
xor
or
(bad)
cmp
inc
mov
stc
aaa
xchg
lahf
out
sub
inc
push
xchg
sbb
cmps
xor
inc
setno
pop
dec
cmp
sbb
inc
cmp
push
push
or
bound
les
push
sbb
dec
sbb
inc
mov
adc
sbb
push
das
imul
lods
inc
out
mov
or
fnstenv
leave
repz
cdq
repz
sbb
xchg
mov
jb
inc
jl
sbb
mov
and
test
in
mov
xor
jg
push
jb
aas
add
test
xchg
into
inc
daa
ret
xacquire
cld
int
or
jnp
mov
xchg
cmps
inc
or
(bad)
sub
xchg
and
je
bound
in
(bad)
aaa
dec
fdiv
cmps
sub
pop
inc
sbb
mov
xor
or
cmp
mov
stc
mov
in
repz
pop
scas
dec
lds
inc
in
clc
jb
test
out
inc
arpl
test
sbb
fadd
(bad)
mov
pushf
xor
xchg
add
test
mov
sbb
retf
xor
pop
call
mov
stos
(bad)
(bad)
or
repz
sbb
jae
(bad)
stc
xchg
sub
jge
movs
mov
(bad)
out
cs
jae
lea
imul
jne
mov
and
cld
(bad)
das
mov
(bad)
pushf
inc
dec
popa
pop
sub
jnp
out
repz
dec
dec
bound
popf
jg
iret
mov
fwait
pushf
cwde
lods
or
inc
enter
mov
inc
pop
ins
inc
in
dec
aas
scas
jne
(bad)
movs
cmps
pop
ret
xchg
push
jp
pusha
mov
mov
ficom
es
pop
sub
push
or
jle
pop
add
nop
dec
cmps
jbe
pop
hlt
sahf
cli
mov
sahf
pop
xor
sbb
xchg
mov
in
arpl
jle
sbb
adc
aad
rcr
aad
in
mov
cli
imul
fst
(bad)
jae
inc
es
and
add
int3
cmps
jl
adc
push
add
in
add
mov
or
outs
mov
sub
enter
retf
ds
dec
adc
push
add
jmp
mov
hlt
xor
or
retf
push
mov
outs
cmp
nop
jbe
sbb
jecxz
scas
repz
test
daa
hlt
jb
and
adc
into
inc
clc
cmps
sub
imul
xor
iret
out
(bad)
scas
add
xor
loopne
sar
push
or
jp
retf
iret
outs
(bad)
(bad)
xor
inc
ds
adc
or
(bad)
adc
int
xchg
cmp
loop
or
shr
rep
pop
xchg
sub
mov
icebp
stos
mov
into
and
stos
enter
out
and
jne
jae
imul
inc
push
retf
not
and
fbld
mov
inc
inc
repz
test
scas
mov
(bad)
ret
lods
mov
cmp
mov
adc
mov
std
data16
psubsb
xchg
or
fild
movs
mov
(bad)
jge
scas
pop
mov
gs
(bad)
push
sahf
adc
pop
push
hlt
call
fcom
fdivr
and
mov
add
fisubr
pop
fyl2x
imul
xor
(bad)
scas
jle
ret
addr16
and
pop
push
jnp
xchg
das
mov
call
push
repz
add
add
mov
add
in
xchg
cmp
leave
repnz
in
(bad)
fidivr
sbb
lahf
retf
aam
(bad)
mov
sbb
std
and
mov
and
pop
add
xchg
or
cmp
fld
stos
dec
mov
mov
out
push
cli
daa
adc
les
ret
mov
repz
(bad)
hlt
test
inc
and
clc
repnz
or
pop
mov
xlat
adc
xchg
call
cdq
xor
rol
push
imul
push
out
add
mov
(bad)
icebp
leave
jb
push
push
push
popa
pop
bound
retf
jb
xor
(bad)
in
imul
xchg
or
mov
xor
enter
inc
popf
out
sti
sub
push
sub
xchg
xor
outs
and
add
cmp
mov
lock
inc
pop
dec
xchg
mov
sub
mov
add
and
jecxz
jne
pop
int3
sbb
cmp
xchg
mov
push
cmp
sbb
mov
dec
ss
mov
ud1
cmp
xor
(bad)
std
mov
cmp
dec
mul
out
dec
jp
test
xor
push
retf
add
ins
xor
inc
xchg
inc
jno
jle
int
mov
je
js
(bad)
jo
pop
mov
sub
out
cli
adc
int
loop
mov
mov
mov
and
xor
popf
xchg
daa
mov
mov
pop
test
and
aas
scas
ret
cs
inc
push
jmp
jb
lods
out
stos
push
gs
inc
jnp
and
cmc
add
sahf
out
push
dec
mov
adc
daa
arpl
mov
xchg
repnz
imul
cmps
mov
out
lds
shl
(bad)
inc
ret
pop
ss
fdivr
mov
lods
movs
mov
pop
js
test
sub
push
mov
mov
ret
dec
or
inc
cmp
mov
nop
mov
div
jecxz
adc
push
(bad)
popa
dec
je
dec
xor
lods
push
cli
adc
push
cmp
xor
out
and
arpl
(bad)
in
je
imul
pusha
and
cmp
bound
popa
jle
fcomp
cs
mov
ja
int3
add
push
cli
dec
add
cmp
inc
sbb
sar
test
sti
repz
xor
cmc
idiv
div
pop
data16
and
jnp
add
jmp
lds
pop
rcl
fisttp
clc
or
ret
call
call
sub
push
jnp
bound
ror
hlt
std
mov
adc
fist
aam
pop
dec
int
ficom
shl
js
mov
xchg
jle
and
div
iret
mov
sbb
mov
or
neg
imul
stos
and
xchg
push
sbb
(bad)
push
(bad)
sub
xlat
int
out
mov
ret
sub
jmp
jnp
inc
adc
mov
sbb
xchg
and
nop
and
dec
cmp
jmp
inc
out
bound
ret
xchg
mov
test
stos
push
lods
cli
jno
xchg
jbe
xor
rcl
sub
pop
inc
jnp
fisubr
push
mov
cmp
pop
neg
mov
mov
add
in
inc
push
adc
dec
inc
stc
daa
add
clc
mov
not
lods
stos
cmp
inc
pop
mov
frstor
mov
add
cs
jmp
stos
add
scas
jne
sub
dec
adc
xchg
lea
ror
repz
jae
lds
ret
jp
sub
clc
jne
xchg
add
lods
aas
mov
out
xor
add
adc
loop
iret
cmps
mov
icebp
push
mov
sar
push
push
add
call
bound
mov
dec
sub
pusha
aas
fwait
arpl
jle
lea
dec
shl
mov
push
sbb
ss
or
loopne
daa
mov
xchg
fnstcw
jnp
lea
jg
mov
xchg
jno
xor
xor
xchg
mov
cmp
icebp
adc
xchg
fimul
adc
inc
lahf
loopne
mov
rol
cmc
adc
sbb
shr
xor
jno
mov
js
jl
movs
or
mov
es
(bad)
mov
call
add
or
int3
push
in
loope
inc
call
ja
xor
sbb
fiadd
mov
mov
lods
dec
lahf
out
inc
or
sub
movs
nop
mov
inc
and
sbb
in
bound
retf
popf
out
daa
das
sub
xchg
xlat
or
inc
sbb
ja
sar
pop
shr
xchg
add
sbb
jmp
popa
out
fiadd
movs
mov
pop
push
xchg
pop
clc
retf
fadd
clc
scas
(bad)
pop
iret
imul
inc
inc
je
popf
xchg
jbe
push
mov
or
xor
jno
out
adc
push
xor
pushf
aad
or
mov
or
cwde
popa
xchg
push
cmps
mov
push
shl
sbb
iret
and
and
push
mov
mov
ds
out
ins
lahf
xchg
dec
in
test
mov
daa
inc
adc
or
out
in
(bad)
xor
mov
ret
pop
shl
out
loopne
xchg
ins
call
sbb
xchg
jno
sti
mov
aam
fist
inc
add
mov
ss
adc
adc
adc
sbb
pop
aad
inc
inc
mov
add
(bad)
(bad)
pop
ret
rol
icebp
shl
jge
push
fild
inc
loopne
inc
mul
(bad)
and
dec
or
inc
cdq
mov
adc
push
cmc
in
or
xchg
and
or
jmp
shr
mov
retf
cmp
mov
call
outs
addr16
sbb
fsubp
pop
or
cmp
ins
movs
dec
(bad)
ds
or
xor
xlat
cmp
call
data16
sub
loope
enter
mov
cmp
lahf
les
test
and
xchg
mov
push
push
dec
shr
xor
neg
jnp
push
jo
and
jmp
pop
sbb
pop
mov
add
in
dec
mov
cdq
inc
add
fld
(bad)
not
xchg
mov
lahf
jns
rol
movs
jecxz
mov
inc
mov
aas
jmp
fs
adc
jae
cmps
jecxz
jge
mov
les
cmp
(bad)
fbstp
pop
hlt
cs
clc
cld
aam
sub
shr
sahf
mov
shr
popa
inc
pop
test
jmp
sbb
(bad)
(bad)
mov
loope
adc
add
popa
cmp
dec
fwait
mov
mov
mov
lock
mov
scas
fstp
mov
bound
mov
dec
fist
ja
pop
xor
add
fist
retf
(bad)
sahf
leave
push
(bad)
setl
jmp
inc
mov
test
mov
psubq
xchg
in
sahf
jbe
cld
stos
ins
xchg
ja
add
or
cmp
iret
pop
mov
or
sub
outs
in
outs
fidivr
adc
dec
inc
gs
push
test
inc
mov
cmc
int
jmp
ins
or
xchg
jg
imul
adc
lahf
ins
xchg
xlat
test
and
lods
ds
xchg
sub
jmp
lahf
sbb
jo
sub
add
into
and
mov
cmp
mov
movs
loop
pop
mov
mov
out
stos
dec
movs
or
das
lahf
jo
or
fidiv
in
ror
xchg
adc
or
fcmovne
outs
ffree
cmp
sub
mov
or
cmps
inc
fbld
jmp
fisubr
dec
push
stos
ds
hlt
dec
hlt
jno
push
dec
mov
and
dec
mov
add
push
jecxz
and
dec
loop
adc
clc
loopne
dec
xor
mov
movs
jno
and
scas
mov
and
or
int3
arpl
and
inc
(bad)
aad
or
mov
mov
jnp
cmp
inc
ins
xchg
xchg
pop
mov
mov
push
mov
iret
cmp
mov
stc
arpl
mov
sub
jmp
adc
call
stos
hlt
test
or
ss
dec
popf
loope
or
mov
(bad)
rol
mov
(bad)
retf
in
mov
jecxz
add
pop
stc
mov
jp
aam
neg
sbb
pusha
inc
adc
dec
dec
std
in
inc
fiadd
std
push
clc
out
les
mov
inc
mov
das
sbb
pop
or
inc
neg
mov
xor
test
into
rol
adc
cmps
push
movs
stc
mov
cmp
repz
mul
xchg
ins
daa
or
into
icebp
bound
mov
ss
mov
jp
ins
pop
cmp
and
outs
hlt
mov
push
in
in
add
aaa
push
mov
(bad)
pop
lods
mov
repz
outs
adc
cld
imul
out
push
imul
jg
gs
cmps
adc
xchg
cmp
daa
or
les
(bad)
in
pop
xlat
dec
(bad)
sbb
add
mov
imul
cmp
popf
push
int3
sar
(bad)
jg
outs
jmp
lods
jle
jbe
or
lea
pusha
sub
jmp
dec
repnz
xor
or
cli
aas
pop
pop
cbw
hlt
stos
(bad)
data16
jp
popf
(bad)
jae
dec
adc
in
mov
xchg
cli
cs
scas
sar
cmp
enter
sub
nop
add
stos
aad
xor
(bad)
int3
sar
sbb
mov
pop
test
sbb
addr16
scas
pop
dec
sbb
pop
pop
sar
cld
mov
stc
cmps
pusha
clc
rcr
fwait
jmp
aaa
call
inc
aas
mov
or
sub
inc
xchg
div
sub
aam
shr
loopne
and
mov
ror
std
outs
push
pop
es
retf
or
icebp
xor
(bad)
mov
adc
stos
add
pop
pop
fisub
ins
fisttp
cmc
and
or
inc
in
adc
mov
ins
add
add
mov
inc
je
xor
clc
and
ret
shl
mov
movs
lods
mov
fdivr
daa
out
aaa
jb
dec
lods
inc
out
sub
jg
popa
mov
dec
mov
xchg
inc
xchg
repz
sbb
push
rcr
fmul
das
fisttp
movs
cmp
mov
jbe
jo
jb
or
push
mov
scas
sahf
fst
push
pop
retf
mov
add
mov
stos
xor
loop
in
in
xor
(bad)
ins
test
enter
and
es
jns
push
aam
inc
cdq
dec
ret
jle
mov
add
add
fnstenv
or
dec
dec
mov
or
loop
cmps
cdq
and
adc
or
and
and
pusha
or
dec
xlat
sahf
mov
pusha
pop
shl
adc
dec
jmp
adc
es
in
sbb
jg
daa
sub
pop
and
jmp
rol
repnz
adc
mov
into
jbe
xor
adc
cwde
mov
mov
add
ja
cld
and
jae
inc
xor
xor
jbe
stc
xchg
loope
js
lds
mov
adc
pop
or
and
xchg
push
popf
add
iret
xor
js
icebp
pop
fld
xchg
cmps
(bad)
push
or
jno
enter
jb
pop
adc
je
or
mov
add
jae
adc
(bad)
pop
ret
mov
std
hlt
test
inc
rol
(bad)
mov
daa
add
adc
and
xchg
test
(bad)
cmp
add
js
outs
mov
enter
es
pop
pushf
ret
out
cmc
ror
inc
sahf
adc
and
popa
ins
push
sub
mov
cmp
jns
shl
aam
mov
push
fistp
mov
adc
popf
lock
ds
js
dec
dec
inc
inc
sti
xor
inc
push
pop
dec
call
mov
jp
dec
jns
sbb
lds
cwde
in
cmps
popa
scas
sub
arpl
cmp
lfs
fwait
lock
sbb
ins
dec
mov
xor
enter
cmp
in
cld
shr
push
lods
loopne
popa
push
(bad)
loope
jle
jge
scas
mov
inc
out
mov
pop
adc
pop
pop
add
dec
pop
sahf
adc
and
bound
sub
imul
pop
int
das
push
leave
gs
jmp
adc
sub
xor
retf
int3
sub
mov
pop
fistp
(bad)
and
jle
sub
pop
sbb
addr16
dec
outs
push
(bad)
lods
inc
je
fisub
popf
clc
and
pop
outs
cmp
dec
outs
enter
ficom
cdq
mov
shl
xlat
lahf
and
add
les
fst
jp
mov
lock
push
cmp
or
lods
mov
dec
dec
cld
mov
inc
int3
pop
jne
mov
mov
jmp
(bad)
jne
lods
sbb
mov
popa
gs
ds
sbb
jb
into
mov
mov
dec
sbb
and
pop
in
into
add
dec
call
jns
repnz
or
push
jne
and
out
cmovb
and
push
xchg
and
and
fild
inc
lahf
add
jnp
ja
cli
or
mov
bound
add
adc
test
jns
xchg
mov
jge
lods
and
cmp
or
xchg
test
loopne
mov
inc
and
jbe
aas
inc
mov
add
in
sbb
pop
cld
out
jmp
adc
cmc
in
rol
mov
mov
test
in
(bad)
movs
jns
in
xchg
mov
out
inc
xor
js
xor
jo
push
idiv
sub
and
jle
shl
lea
sbb
call
sub
inc
lock
sbb
and
je
ja
pushf
loopne
lahf
nop
retf
inc
add
inc
ss
or
dec
das
int3
hlt
push
fcom
mov
mov
sahf
jae
loope
sub
call
jo
iret
sar
jge
pop
lock
xchg
nop
xor
mov
jmp
fdivp
or
adc
mov
inc
xchg
mov
push
popa
daa
dec
mov
sbb
out
cdq
daa
lock
adc
lds
sar
cmp
or
mov
sub
inc
or
sub
xor
xchg
imul
lods
in
add
pusha
push
sbb
test
mov
sbb
dec
jae
sahf
jge
jg
inc
mov
lods
cwde
adc
sbb
loopne
xchg
pop
mov
sub
push
and
sbb
out
mov
cmps
ss
dec
mov
dec
call
push
and
repnz
movs
nop
jae
mov
fist
dec
xchg
push
bound
jns
jmp
dec
cmp
sub
push
xchg
push
xor
imul
sbb
mov
xchg
adc
or
loope
xchg
inc
jp
and
cmp
mov
or
cli
dec
pop
sbb
adc
stos
int3
mov
dec
cmps
xor
cmp
out
mov
add
cmp
xor
icebp
cmp
les
pop
and
ins
fxtract
aas
ficom
mov
jb
mov
mov
inc
mov
popa
pop
dec
jg
fldcw
inc
pop
push
xor
add
dec
mov
xchg
fnstsw
dec
hlt
push
adc
mov
dec
add
imul
retf
xor
jns
jp
xchg
cld
fldcw
nop
js
test
xchg
es
mov
inc
jmp
mov
out
scas
popa
out
std
leave
js
stos
popf
test
mov
ds
mov
push
push
arpl
push
jnp
unpcklps
adc
sub
adc
jbe
adc
inc
xor
js
out
pop
mov
loop
or
fwait
stos
syscall
adc
movs
jae
inc
xchg
mov
(bad)
repz
arpl
mov
nop
push
cmc
sbb
retf
retf
jge
cmp
ins
call
mov
cmp
mov
ss
dec
lods
stos
add
out
fwait
push
xlat
outs
jnp
rcl
int
xor
outs
and
repz
xchg
and
gs
xchg
jb
(bad)
mov
(bad)
aas
jmp
(bad)
ss
mov
js
xchg
mov
pop
ror
cld
(bad)
mov
les
sub
inc
dec
xor
push
pushf
ins
sbb
push
int
sbb
jmp
cld
outs
sub
xchg
pop
push
aas
cdq
jmp
test
rcl
jbe
in
icebp
ret
repz
pop
xor
outs
in
scas
mov
aaa
pop
cs
mov
pop
inc
cmps
popf
pop
scas
scas
aaa
mov
imul
mov
mov
or
dec
adc
push
add
test
xor
adc
xchg
mov
jbe
outs
in
xchg
lahf
ret
jmp
cmp
fisttp
push
and
xor
sub
fldenv
xor
mov
sub
mov
in
(bad)
(bad)
sti
fmul
push
jg
or
gs
in
xchg
mov
bound
js
imul
ret
pop
or
mov
scas
loop
cmp
xor
cmps
xor
adc
mov
iret
pop
pop
jbe
push
cmp
pop
xchg
and
rol
add
xor
call
inc
test
push
sar
test
inc
dec
add
sub
cmp
imul
adc
cmp
mov
sar
fldenv
push
test
rcl
daa
movs
test
sub
push
or
sbb
cmp
mov
sti
or
mov
push
xor
lahf
lds
mov
xchg
mov
ins
cwde
jmp
les
(bad)
out
xchg
jge
bound
jb
call
sbb
movs
dec
hlt
in
in
movs
out
lds
daa
cmp
(bad)
cs
jmp
imul
rol
jmp
cs
xchg
add
in
add
jne
pop
cmp
(bad)
adc
or
inc
jecxz
pop
xlat
stos
or
out
jbe
pop
mov
lahf
xor
rol
pop
mov
xchg
in
fld
lea
inc
jl
into
inc
mov
outs
aas
ja
mov
xor
xor
fcom
stc
scas
sbb
pop
sbb
inc
cmp
addr16
test
leave
sub
xor
scas
jge
imul
mov
and
das
retf
arpl
or
repz
mov
int3
mov
imul
aas
cmps
std
lea
jge
and
sbb
je
xchg
test
mul
movs
fcomp
repz
jecxz
pusha
jecxz
ja
shr
or
call
sbb
jb
lods
retf
in
leave
addr16
dec
pop
stos
xor
imul
dec
test
inc
cli
dec
xor
retf
imul
add
in
cmps
bound
icebp
or
jmp
out
mov
pop
jmp
push
inc
add
lds
mov
loopne
adc
or
mov
inc
and
les
push
xchg
fwait
aas
dec
mov
add
pop
ret
add
xchg
or
xchg
scas
push
cmps
dec
(bad)
in
sti
lea
sub
fist
sub
jnp
popf
add
addr16
xor
push
shl
in
fucomi
lock
pop
pushf
xchg
inc
pop
jp
fdiv
pop
loopne
loop
rol
pop
push
push
call
stos
fsub
mov
inc
xchg
out
lds
fimul
stc
push
jae
das
jb
lea
in
add
rcl
mov
mov
xor
jne
cmps
push
sub
imul
aad
jl
mov
shr
xchg
cmp
stc
mov
out
adc
push
pop
mov
leave
stos
outs
icebp
ror
pusha
sub
inc
jne
dec
adc
enter
lds
dec
pop
cmps
or
loope
mov
mov
jg
in
xchg
mul
xlat
mov
sbb
je
and
(bad)
aaa
and
scas
xchg
jl
gs
pusha
cmp
fwait
jae
loope
pop
shl
jns
in
test
add
push
out
cwde
(bad)
dec
or
outs
sub
lea
mov
pop
sub
or
mov
lahf
or
adc
jg
xchg
mov
nop
mov
das
push
imul
and
jg
inc
sbb
jnp
cmp
imul
das
xchg
das
jnp
sbb
xchg
sub
mov
mov
sbb
mov
xchg
add
mov
mov
sub
aas
rcl
jge
sbb
in
xchg
lods
adc
jge
popf
adc
mov
push
test
sub
fdivr
sub
dec
pop
adc
lock
fidivr
xchg
imul
(bad)
adc
sahf
fwait
in
repnz
enter
lea
push
loopne
retf
icebp
in
mov
xchg
xor
mov
dec
(bad)
pop
cmp
and
dec
(bad)
jmp
and
in
xchg
jmp
pop
xchg
xor
mov
int3
sub
push
push
test
cmp
outs
idiv
cmp
sbb
jns
mov
xchg
pop
jecxz
idiv
and
xchg
(bad)
cmp
call
xchg
mov
pop
push
fisub
cld
xor
jae
ss
jmp
mov
push
rcl
call
pop
out
xchg
neg
(bad)
aas
pop
or
jl
pop
dec
ins
out
call
mov
mov
fldcw
ficom
ret
mov
jle
dec
cdq
add
sub
cmp
(bad)
fisubr
xor
daa
sub
mov
mov
(bad)
sti
pop
jle
add
adc
pop
xchg
push
xor
cdq
ins
hlt
dec
jecxz
xchg
and
xchg
cmp
aad
in
cmp
nop
(bad)
mov
jecxz
xlat
xchg
mov
mov
push
adc
dec
nop
sahf
sub
sub
pop
inc
shr
imul
fnstsw
push
jecxz
fsub
pop
push
adc
mov
(bad)
jg
adc
movs
ds
sti
sahf
dec
xor
jnp
sub
lds
jmp
xor
mov
dec
aas
pop
push
nop
xor
cmp
pop
mov
inc
cmp
or
jp
adc
xchg
fisubr
and
or
jle
mov
dec
mov
xor
add
dec
sbb
loop
add
mov
(bad)
repnz
rcr
xchg
into
or
test
stos
mov
push
cmc
test
cld
test
sbb
test
jg
int3
push
int
add
xchg
ins
jecxz
pop
mov
mov
je
(bad)
mov
dec
es
leave
push
addr16
xchg
test
mov
xor
jo
int
xchg
lahf
sbb
scas
push
dec
nop
in
sar
sbb
jp
pop
test
ret
sbb
or
arpl
cld
sub
js
xchg
movs
cmp
pushf
cmp
(bad)
mov
movs
cmp
retf
mov
cmps
ins
ss
out
test
push
sub
add
test
mov
or
xchg
xlat
push
mov
neg
mov
and
scas
sub
cmp
jo
push
dec
lea
add
pop
sbb
pop
cmps
fcmovnu
mov
add
inc
(bad)
pop
cld
sbb
sub
call
(bad)
pop
sub
xor
sbb
je
das
popa
xchg
xchg
mov
int3
rcr
cdq
mov
out
sub
jmp
sub
js
adc
pusha
mov
nop
lods
lds
cdq
data16
xor
bound
sbb
ins
sub
lods
imul
js
push
adc
pushf
mov
stc
push
ds
je
div
inc
xchg
mov
or
adc
xchg
mov
cmc
pop
mov
dec
push
jle
fisttp
sbb
sub
pop
pop
sub
jmp
mov
daa
stos
out
mov
loope
jle
out
arpl
cmps
mov
xor
out
int3
pop
mov
push
div
mov
sbb
mov
fst
xchg
mov
cmps
jecxz
or
xchg
dec
mov
cmp
jg
loop
sbb
popf
cli
rcl
loope
push
mov
enter
gs
lahf
add
add
jecxz
ins
scas
pop
dec
fdivr
ficomp
cmp
mov
mov
int
std
mov
pop
dec
push
cwde
out
ja
(bad)
adc
gs
mov
and
adc
pushf
xor
mov
cmp
jg
std
push
test
loopne
add
outs
jno
test
push
test
fst
mov
push
xor
mov
cmps
ret
xchg
inc
xor
ret
dec
sbb
enter
out
add
ins
add
xlat
rcr
not
js
sbb
mov
cmps
stos
add
loop
aad
ss
scas
mov
xor
xchg
mov
icebp
ds
and
push
jmp
dec
ret
lods
addr16
pop
jg
inc
fiadd
punpckhdq
(bad)
(bad)
(bad)
jg
(bad)
aaa
ds
jl
pop
aam
pop
xchg
js
cli
mov
stos
in
push
ss
or
xlat
xchg
or
or
in
inc
rcr
pop
enter
mov
push
dec
rcl
mov
mov
neg
adc
nop
or
mov
out
xchg
les
jg
cmp
aaa
pop
pop
cmp
pop
dec
in
cwde
retf
aas
arpl
dec
pop
or
in
imul
loop
jbe
sbb
add
adc
shl
push
xlat
sbb
retf
dec
push
and
aaa
aaa
lea
es
mov
rcl
in
jp
lods
lods
sbb
jb
in
fs
inc
lahf
mov
mov
pop
sbb
lods
ins
sbb
sar
sub
stc
dec
dec
out
in
cmp
and
stos
add
cmp
leave
cld
xor
sbb
int
outs
push
cmp
sub
and
call
fwait
inc
(bad)
pop
ja
sub
adc
inc
retf
aad
cmp
popf
test
push
mov
dec
ss
dec
jae
and
rcl
fcmovnb
cdq
enter
and
dec
jle
daa
sub
adc
mov
adc
xchg
call
adc
push
xchg
ror
pop
(bad)
in
scas
push
pop
test
sbb
imul
pop
or
test
add
inc
push
fsubr
xchg
loopne
retf
push
out
add
xchg
xchg
ja
scas
add
rcr
ja
(bad)
sub
repz
popa
xor
sub
inc
inc
aas
mov
adc
mov
xchg
adc
push
mov
mov
push
mov
push
lahf
inc
push
imul
(bad)
push
cwde
stos
and
dec
imul
into
lock
dec
imul
push
and
xchg
push
ins
cli
adc
data16
sbb
call
or
cmc
out
add
ret
pop
jo
inc
fsin
cmc
or
mov
xchg
clc
pop
scas
xchg
xchg
mov
and
lahf
repz
adc
inc
repnz
push
dec
(bad)
jp
jmp
sub
int3
and
push
mov
dec
in
retf
loope
cld
xor
pop
add
fcomi
xchg
pop
das
mov
fbstp
shr
retf
aam
into
pop
jecxz
mov
adc
es
lock
pop
mov
data16
jle
fsub
retf
ret
mov
(bad)
shr
push
or
mov
ins
push
cmp
mov
lea
lea
test
or
push
push
dec
lahf
pop
or
sar
in
or
mov
mov
les
add
nop
loopne
fisub
push
adc
mov
push
dec
in
fistp
cs
xor
neg
inc
adc
lods
outs
mov
ins
cmps
xor
pop
sub
iret
xchg
lahf
pop
add
adc
cmc
test
xor
(bad)
js
fcmovnbe
dec
or
or
cmp
jnp
sub
sub
in
jmp
(bad)
cld
jns
sub
call
xor
sbb
gs
(bad)
sbb
enter
in
xor
call
pop
sub
lods
(bad)
pop
icebp
sub
push
ins
mov
or
pop
(bad)
jb
repz
sti
shl
cmp
xchg
sub
gs
mov
aas
fld
fwait
sbb
ffree
pop
ror
ja
lea
sub
gs
dec
dec
out
dec
test
mov
sbb
lods
std
cmp
in
retf
cwde
cdq
jmp
push
lea
cmp
mov
int
(bad)
cld
jns
lea
push
jnp
inc
or
(bad)
dec
cmp
outs
jb
and
pop
int3
daa
fist
xor
inc
sbb
xchg
add
(bad)
les
retf
mov
cmp
pop
mov
and
xor
mov
sub
add
ror
xchg
fstp
jnp
test
add
mov
jns
(bad)
rol
ficom
addr16
gs
mov
mov
dec
add
loop
mov
idiv
mov
movs
mov
mov
sar
dec
data16
pushf
stos
cdq
pop
out
or
inc
imul
jmp
(bad)
jmp
imul
cld
popf
xchg
(bad)
cmc
and
sti
icebp
pop
push
not
in
jle
aas
sub
scas
mov
pushf
mov
xor
xor
retf
push
sti
mov
push
repnz
xchg
inc
ret
sbb
lds
iret
pop
push
add
push
inc
cmp
pop
rcr
mov
mov
stos
aaa
jbe
sbb
dec
mov
pop
movs
pop
sub
xchg
fstp
test
arpl
pop
jne
dec
xchg
add
and
push
sbb
jecxz
inc
or
xchg
fwait
inc
scas
sbb
dec
mov
std
loopne
(bad)
sub
cmp
cmps
and
ss
fisub
cmp
in
adc
xor
pop
data16
outs
mov
dec
out
outs
xchg
mov
ficom
sub
add
loop
popa
outs
cmp
jle
xlat
xchg
aam
sbb
daa
int3
data16
dec
enter
mov
stos
xchg
add
jmp
cmc
xchg
push
cld
mov
loope
repz
xchg
stos
inc
sub
test
out
xor
or
retf
(bad)
pop
sbb
loope
call
xlat
cmc
mov
js
push
jae
fwait
out
ds
pop
jmp
setno
jp
jo
cwde
mov
sbb
add
cmp
int3
dec
pop
push
inc
mov
mov
or
std
add
outs
ffreep
icebp
inc
xor
lods
(bad)
retf
push
mov
sub
inc
gs
retf
dec
push
mov
xchg
aas
jmp
add
push
aaa
xor
sahf
dec
das
dec
(bad)
pop
nop
(bad)
retf
xor
imul
fsub
imul
sub
outs
je
jecxz
lods
retf
mov
in
out
mov
xchg
imul
and
sti
repnz
fsub
or
lods
mov
test
movs
inc
jmp
xlat
test
out
add
add
shl
or
push
cmc
aad
das
ins
pop
arpl
cmp
lock
push
adc
jo
fisub
aam
int3
sbb
jb
mov
ret
loope
add
pop
iret
aaa
and
add
rcl
inc
fld
xchg
stc
xor
sbb
dec
sub
pop
ficomp
aaa
sets
fisttp
jno
jmp
cmp
divps
(bad)
ins
and
pop
out
sub
jo
mov
push
jmp
mov
cmp
adc
(bad)
shl
dec
rcr
enter
pop
sbb
xor
cmp
sti
dec
out
shl
das
dec
mov
lea
into
popa
jne
test
jle
sub
mov
and
pop
mov
lods
xor
jae
dec
xor
add
mov
aad
sub
rcl
std
pop
xor
jg
add
pop
jb
jmp
sub
das
mov
clc
stc
inc
push
(bad)
cdq
stos
outs
mov
xor
add
out
(bad)
out
or
or
push
xchg
frstor
xchg
fisttp
das
or
pop
push
int
pop
loopne
cmc
cmp
test
nop
cmc
push
mov
sbb
adc
and
jno
adc
retf
(bad)
xchg
xor
or
in
adc
sahf
adc
push
jae
inc
dec
sbb
fnstcw
inc
mov
mov
sub
sub
lods
out
jb
lahf
sub
push
and
and
daa
adc
test
iret
aam
lods
xor
(bad)
scas
bswap
bound
test
pop
and
xlat
or
icebp
mov
pop
movs
movs
outs
or
rdmsr
fimul
cwde
mov
mov
add
fldcw
inc
xchg
popa
mov
icebp
jnp
mov
or
data16
sub
push
sahf
cdq
ret
test
mov
repnz
cmp
mov
jno
popf
adc
cmc
mov
xor
leave
cmp
and
cmp
cmp
dec
and
cmp
cmps
xchg
pop
xor
push
scas
popa
ret
inc
add
jnp
inc
pop
adc
sub
jns
cmp
movs
nop
jae
es
push
leave
stos
sbb
mov
stos
pop
and
cmp
sti
lock
popa
push
scas
fild
fstp
jp
sbb
out
mov
fisttp
loopne
out
shl
dec
rcr
sub
lahf
cmp
dec
and
jl
inc
jp
mov
cmp
inc
jmp
lea
pop
retf
stos
jns
stc
sub
add
das
(bad)
enter
mov
rcr
aam
xchg
and
push
xchg
adc
retf
loopne
in
(bad)
sar
out
lock
sub
fcomp
(bad)
pop
dec
ins
clc
or
(bad)
sbb
int3
ins
add
fisubr
gs
fidiv
movs
mov
ret
inc
push
out
pop
pop
sub
aaa
fnstenv
mov
jg
mov
add
ss
int
cmp
add
clc
pop
nop
push
ret
jecxz
xor
cli
adc
rcr
fisttp
outs
xchg
mov
or
or
(bad)
add
cli
daa
test
jmp
scas
out
cmps
jmp
xor
xor
outs
fisub
sti
cs
sub
xor
pop
imul
scas
xor
retf
repnz
pop
fimul
int3
imul
cmc
mov
adc
and
jb
ins
dec
mov
fsubr
xor
sti
push
out
mov
(bad)
pop
push
pop
sub
mov
cdq
aaa
(bad)
aam
loop
in
or
movs
add
nop
test
imul
push
dec
stos
out
push
aas
and
push
push
push
dec
nop
push
jge
adc
jo
cs
call
test
jbe
imul
cwde
setae
(bad)
ror
mov
sub
xchg
jb
arpl
out
or
test
inc
ficom
lahf
loopne
loop
data16
cmps
cs
ins
ret
push
and
mov
mov
inc
mov
ficomp
cmps
and
or
ds
pop
aad
call
lea
sub
xor
push
xchg
pop
loop
mov
in
lahf
rcl
cli
sti
jecxz
dec
lds
shl
cmps
push
retf
dec
xchg
les
shl
jnp
cmc
push
xchg
data16
test
mov
inc
mov
lahf
es
sub
pop
shl
popa
cwde
ror
mul
rcr
iret
jns
aad
adc
out
mov
jnp
das
mov
cld
retf
out
adc
sub
ret
call
add
aaa
retf
adc
cmp
pop
ss
jmp
dec
hlt
sbb
xor
jno
test
mov
cs
shl
lods
cli
mov
inc
mov
retf
dec
mov
jae
test
mov
clc
xor
push
loope
cld
push
and
les
bnd
xor
xchg
cmps
push
stc
or
enter
push
pop
(bad)
imul
imul
xor
aad
sub
popf
mov
jo
cmps
mov
nop
stos
mov
add
inc
xchg
movs
scas
jae
fmul
mov
shl
imul
pop
retf
retfw
or
es
jmp
inc
cdq
push
or
cmps
sbb
dec
in
sub
pop
les
in
adc
not
jne
cwde
push
push
clc
jp
fadd
jb
cdq
sub
add
adc
xor
cli
fdivr
js
cmovno
cld
std
cmp
js
rcl
pop
push
aad
pop
pop
pop
repz
mov
jbe
xor
fst
cdq
cli
push
cmp
sub
sub
imul
retf
(bad)
cmp
loop
cld
adc
addr16
retf
xor
arpl
icebp
dec
out
push
cdq
cmp
icebp
int3
pop
cmp
in
sub
or
sub
test
lods
or
gs
leave
call
rcr
mov
or
fist
(bad)
sahf
imul
sahf
(bad)
movs
adc
or
add
rol
push
push
sbb
sub
mov
cmp
(bad)
inc
dec
push
jg
pop
jge
repnz
mov
dec
xor
scas
cdq
or
cdq
ins
das
push
scas
and
movs
jb
cmps
cs
pop
jns
test
daa
push
pop
jge
clc
pop
xor
jp
or
lock
mov
sub
call
mov
pop
sub
xchg
and
xchg
jbe
lock
nop
out
jmp
xchg
fisub
nop
and
idiv
xor
icebp
pop
sbb
sub
mov
lds
xlat
adc
outs
ins
jo
mov
jmp
and
and
pushf
cmc
dec
leave
xchg
(bad)
xchg
(bad)
clc
dec
dec
jp
pop
int
ds
jb
daa
lods
push
fld
or
into
pop
dec
pop
stos
mov
pop
push
out
jl
xor
imul
jnp
icebp
push
pushw
push
gs
pop
sub
shr
jb
fs
sub
and
dec
add
mov
cmps
mov
imul
push
(bad)
cdq
inc
fwait
outs
imul
pop
fwait
lods
lock
push
bound
imul
std
xchg
pop
test
and
pop
jmp
push
dec
sbb
inc
or
xchg
lods
int3
shl
cmp
sub
mov
sbb
int
inc
pushf
sub
(bad)
outs
mov
rcl
mov
sar
call
and
(bad)
xchg
jmp
jmp
adc
mov
arpl
sbb
xchg
mov
push
cmc
pop
sbb
in
cld
dec
je
mov
push
les
sub
std
aas
dec
sbb
mov
cli
add
stos
sub
cli
dec
int3
bound
and
aas
dec
jo
gs
push
pushf
adc
lock
xchg
loop
pop
sbb
add
adc
ins
pop
inc
pop
lahf
lahf
push
int3
std
mov
call
clc
mov
and
mov
pushf
mov
test
(bad)
cld
enter
add
(bad)
stos
cmp
add
xor
push
jecxz
mov
inc
js
inc
cwde
xor
inc
ret
push
xor
mov
sbb
push
lods
sbb
retf
and
inc
lds
jl
pop
inc
dec
add
test
pop
cmp
outs
neg
shl
dec
stc
jo
mov
sub
popa
xchg
push
dec
test
xor
and
jae
rcl
add
inc
fdivr
stos
arpl
inc
mov
mov
jns
mov
(bad)
bound
leave
mov
xchg
xor
leave
jbe
dec
or
mov
lds
jo
jg
jge
add
cmp
jmp
lds
sahf
inc
mov
mov
xchg
jb
jle
lds
outs
mov
adc
jmp
push
mov
fld
push
push
hlt
mov
pop
lahf
bound
xchg
ficom
bound
inc
in
(bad)
mov
pop
pop
dec
test
aas
addr16
loop
add
inc
pop
sbb
xchg
ja
jge
sbb
add
out
inc
jmp
iret
sti
int
pop
inc
les
push
xchg
add
and
mov
fcmovnbe
mov
sti
sub
adc
inc
fcomp
and
mov
xchg
sti
(bad)
faddp
inc
nop
ret
sti
in
or
cmp
fstp
rcl
imul
sti
jbe
mov
mov
test
or
or
lds
pop
popa
jmp
adc
xchg
aam
imul
in
or
or
fprem1
add
repz
pusha
in
in
lods
jp
xchg
fldcw
or
push
jg
mov
push
cwde
cmp
arpl
addr16
mov
inc
fild
movs
xchg
pop
test
(bad)
ss
rcl
jno
mov
repnz
xlat
mov
test
sahf
loope
pop
mov
or
mov
or
out
call
add
mov
sub
jbe
jne
mov
push
adc
jo
cmp
push
mov
pop
add
ds
test
mov
or
cmp
cld
loop
repz
daa
sti
mov
add
cmp
xchg
call
mov
push
ins
add
fistp
in
es
push
jmp
mov
xor
out
stc
push
fisttp
ror
nop
inc
(bad)
int3
nop
mov
je
add
xor
stc
sbb
mov
out
imul
cli
cmp
call
cdq
(bad)
imul
pop
out
or
(bad)
stc
xchg
push
jle
std
dec
sbb
aas
movs
js
pop
fsubr
sbb
adc
xchg
ds
add
inc
jg
pop
xchg
test
(bad)
(bad)
aam
and
lods
mov
push
sbb
sub
cld
xchg
shl
enter
inc
dec
hlt
in
js
aas
mov
mov
xor
data16
jp
fwait
xchg
popf
dec
bswap
outs
pop
leave
inc
ins
xlat
scas
add
push
gs
loope
mov
jge
out
mov
jle
outs
add
inc
jo
pushf
sub
cwde
xchg
ja
outs
inc
(bad)
jmp
jae
mov
xchg
daa
idiv
sbb
cmp
dec
cwde
xchg
or
mov
lds
ins
test
dec
mov
add
or
pop
mov
dec
data16
xchg
and
mov
push
inc
mov
fwait
inc
fldenv
sub
push
lock
mov
adc
mov
scas
int3
adc
gs
adc
push
push
cmp
cmp
pop
and
lock
or
xchg
fucomi
xchg
ret
pop
std
jmp
adc
imul
or
and
adc
xor
xlat
push
les
cmp
scas
or
inc
stos
(bad)
or
sahf
jp
repnz
(bad)
pop
mov
add
hlt
jbe
jmp
jae
ds
cwde
stos
pop
mov
dec
sti
ror
push
scas
call
aaa
ffreep
or
shl
sbb
jge
leave
dec
clc
(bad)
jo
xor
mov
cmc
and
pop
iret
adc
lock
dec
lods
cs
sub
rcr
sub
pop
loop
sub
ret
xlat
push
iret
cs
repnz
jb
dec
add
push
gs
fwait
inc
sbb
pop
jnp
cli
(bad)
adc
movs
clc
cmp
outs
rcl
and
xor
cmp
add
frstor
(bad)
sbb
pop
xor
aad
add
push
icebp
mov
mov
stc
mov
jge
mov
(bad)
call
stos
cmp
cld
stos
iret
xchg
jl
add
dec
mov
pushf
ror
scas
sahf
js
mov
xchg
jae
sar
sub
outs
mov
stos
xchg
mov
push
push
enter
(bad)
outs
add
or
jmp
cmps
add
into
push
sbb
popa
mov
dec
jg
inc
dec
push
js
push
mov
std
mov
push
jl
push
ret
add
xlat
pop
cmp
xchg
mov
outs
mov
mov
mov
icebp
test
imul
outs
fldcw
pop
out
xlat
xchg
lods
jnp
xchg
js
out
xor
add
jbe
cs
or
scas
pop
cdq
shl
cwde
sub
push
sahf
pop
das
(bad)
dec
lods
leave
adc
aaa
stos
lods
je
aam
mov
add
and
test
or
jg
addr16
fist
sub
test
xlat
and
xchg
shl
jbe
ret
jl
repnz
int
and
clc
sub
xchg
ret
ins
in
mov
out
dec
cs
inc
leave
iret
sti
xchg
mov
inc
dec
inc
jecxz
adc
push
loopne
sub
xor
and
ss
mov
dec
repz
push
jbe
sbb
sahf
mov
icebp
jb
ret
jo
cmp
lea
sub
jl
sbb
test
sbb
pop
pop
sbb
jae
lahf
mov
fwait
mov
dec
mov
xor
scas
fidivr
lds
out
popf
shr
pop
cli
xor
push
shl
or
addr16
cmp
shr
sti
add
xor
retf
pop
sbb
jnp
fs
sbb
in
mov
pop
jl
(bad)
ja
and
add
sub
xchg
xor
adc
in
jne
cli
cmp
es
xchg
out
push
and
retf
icebp
push
mov
sub
adc
addr16
cmp
cmc
rcr
jnp
mov
cmp
ins
int
pop
out
inc
jl
mov
mov
loop
scas
push
sbb
inc
pop
and
xchg
xor
es
jo
mov
loope
loop
int
pop
and
adc
aaa
and
push
stos
or
outs
add
dec
pop
ds
ins
mov
test
sahf
dec
adc
mov
aam
jmp
int3
xchg
ins
mov
adc
call
iret
mov
outs
mov
pop
fsubr
pop
mov
adc
pop
cmp
mov
sahf
in
xor
sub
push
adc
sbb
xchg
cmps
rcr
scas
fnstsw
pop
sub
adc
repnz
mov
test
cmps
sub
jge
jno
dec
bound
je
out
push
test
xor
cmp
clc
stos
dec
cmp
inc
retf
jnp
dec
xchg
and
mov
cs
xchg
or
adc
call
xchg
pop
iret
pop
push
(bad)
mov
cmc
mov
xlat
sbb
std
loope
sbb
mov
test
jle
jno
sub
push
cmps
xor
adc
(bad)
mov
pop
mov
(bad)
mov
pushf
xor
clc
shr
cmc
clc
jmp
(bad)
scas
xchg
stos
stos
aam
arpl
es
add
push
enter
mov
mov
out
and
pop
push
inc
(bad)
cmp
loope
pop
sar
add
or
sbb
or
mov
fnstsw
push
fst
daa
movs
or
dec
in
(bad)
lods
inc
mov
jge
inc
popf
fsubrp
cmps
push
dec
push
(bad)
sub
outs
jmp
sar
lods
mov
stos
or
lea
out
aaa
stos
into
or
jecxz
retf
push
aam
ds
or
in
mov
xchg
xchg
or
fmulp
das
pop
push
jbe
fidiv
test
(bad)
dec
cmp
ror
sti
clc
arpl
cmp
sbb
mov
push
inc
xchg
sub
adc
test
adc
mov
leave
pushf
in
popf
repnz
inc
dec
ret
dec
test
mov
cmp
or
bound
dec
inc
imul
aad
mov
adc
in
cld
test
sub
in
push
repnz
cwde
inc
fidiv
mov
cdq
mov
dec
adc
test
test
sbb
or
sub
pop
leave
jns
in
jle
pop
xor
sub
in
out
or
jp
es
shl
cwde
sub
pop
jo
call
cmp
stos
stos
and
sbb
xchg
fucomp
inc
push
cmp
rcl
ja
scas
mov
test
sub
cdq
push
in
cmp
jecxz
sbb
fidivr
mov
enter
in
icebp
fild
lods
sbb
aad
xor
xor
jno
pop
ins
cmp
clc
push
sub
and
push
leave
jnp
repz
pushf
and
sbb
jb
int
call
jne
into
aas
pop
aad
mov
push
pop
cmp
push
(bad)
int
jmp
es
mov
mov
shl
push
cmc
fdiv
mov
test
sub
(bad)
gs
mov
mov
(bad)
xchg
jnp
hlt
xchg
adc
pop
inc
(bad)
mov
push
mov
cmp
adc
or
fst
cdq
xor
push
cmp
dec
test
call
ss
push
xchg
mov
push
jb
sub
enter
adc
imul
mov
mov
test
jno
push
cmp
xchg
mov
or
lods
cmp
adc
sbb
cmp
add
sub
pop
inc
fs
xchg
dec
aas
dec
hlt
ds
xchg
int3
fnstcw
test
sbb
inc
or
ret
cmps
sar
dec
and
icebp
cdq
sahf
leave
mov
push
mov
das
or
push
js
jnp
xor
aaa
test
xchg
xlat
adc
jns
jbe
pop
cli
ret
cld
sbb
test
xor
push
stos
adc
pop
sbb
cmp
stos
fcom
mov
and
sbb
xchg
rol
adc
mov
shr
test
pushf
sbb
xchg
in
xor
dec
test
inc
pusha
popa
repz
popa
add
xor
in
lahf
stc
xor
xor
add
lock
pop
cmp
out
sar
clc
cdq
xor
sub
xchg
xor
rcl
mov
fst
mov
sub
test
jle
xor
aam
out
push
scas
fisttp
dec
repz
ret
pop
mul
hlt
xchg
jb
imul
enter
sbb
popa
dec
(bad)
lods
jg
out
pushf
ss
adc
inc
outs
mov
mov
in
and
movs
xor
out
add
lods
mov
cmp
push
mov
mov
xlat
nop
mov
repz
pop
xchg
mov
fstp
aam
jns
ret
adc
clc
sbb
nop
jp
mov
and
adc
xchg
adc
mov
sub
sbb
add
or
push
mov
dec
mov
xor
fbstp
fwait
or
and
aad
test
xchg
mov
adc
int3
xor
dec
fs
adc
sub
cli
push
mov
mov
xor
mov
jl
cmp
int
sub
ss
int
(bad)
test
retf
push
or
or
stc
xor
pop
dec
pop
mov
or
adc
fwait
in
test
je
adc
(bad)
fdiv
dec
sbb
mov
movs
stos
push
sbb
add
or
in
enter
pushf
jno
and
(bad)
sub
xchg
ds
out
mov
fmul
cwde
movs
icebp
lods
jge
xchg
into
call
adc
adc
push
pop
dec
addr16
and
retf
cmps
mov
ss
inc
or
cli
pop
and
js
(bad)
scas
mov
xchg
cmps
and
(bad)
push
mov
mov
mov
xchg
xor
or
aad
ins
dec
les
icebp
add
ficom
ja
xchg
into
mov
xchg
and
dec
dec
addr16
cmp
call
and
push
mov
shl
arpl
retf
push
cmp
or
jge
imul
and
xchg
dec
and
mov
aad
push
mov
jae
or
test
retf
cmps
jns
mov
sub
mov
inc
pop
das
mov
dec
push
imul
xor
sub
add
out
push
xchg
mov
jge
je
(bad)
jp
cmps
popf
sbb
cdq
push
add
clc
pop
hlt
das
sub
lods
bound
mul
cmp
xbegin
push
adc
pop
xchg
jmp
or
leave
sbb
les
ror
inc
push
sbb
adc
sar
rol
sahf
sar
ds
div
mov
lea
int
lods
rol
sbb
add
ficom
leave
cmp
mov
call
xor
cmp
sub
popf
mov
pop
or
sbb
jp
dec
dec
jecxz
mov
sbb
cdq
xor
(bad)
(bad)
dec
lods
es
add
call
call
push
nop
cmps
jp
mov
xlat
mov
xchg
ret
nop
ret
jo
mov
test
movs
aam
fnstsw
push
mov
lahf
ss
ins
push
add
fisub
lock
into
jle
in
enter
jno
push
add
rol
sub
aam
lsl
push
mov
ret
ins
push
sbb
xor
mov
mov
add
fist
add
fadd
sbb
rcr
dec
fmul
and
jno
fldenv
div
mul
jnp
add
xchg
out
jae
push
test
mov
sub
lods
xchg
push
mov
out
cmp
and
loopne
cmp
imul
mov
lods
cdq
fcomp
jl
(bad)
imul
hlt
std
sbb
shr
push
popa
dec
cmps
movs
lods
and
cmp
(bad)
retf
jno
push
shl
adc
lahf
jne
push
mov
das
aas
lock
mov
sbb
pop
inc
not
push
mov
movs
xlat
cmp
jo
ja
dec
cmc
mov
retf
(bad)
and
sub
mov
and
mov
stos
test
jge
or
shl
mov
lahf
add
jge
sbb
outs
popf
leave
je
and
not
into
pop
pop
mov
push
add
ret
sub
fisub
and
repz
pop
jmp
ss
or
in
mov
mov
mov
sbb
pushf
movs
jle
dec
inc
ja
inc
movs
mov
mov
(bad)
movs
fwait
mov
retf
inc
dec
scas
mov
in
xchg
pop
pop
xchg
cmp
popa
xor
and
nop
mov
nop
ins
nop
xchg
test
pop
jae
out
jb
dec
push
adc
xchg
adc
fsubr
ja
into
or
clc
les
push
jns
or
fimul
pop
sub
neg
iret
mov
jmp
pop
scas
mov
mov
fnstcw
fcomp
mov
mov
nop
stos
xor
sbb
(bad)
cmp
inc
imul
rcl
add
fsubp
mov
ds
daa
jle
add
jge
jg
rcl
sti
loope
popa
es
inc
jmp
imul
inc
ret
loopne
adc
loop
addr16
xchg
jbe
adc
push
sbb
test
mov
(bad)
mov
inc
mov
stos
outs
je
iret
mov
ret
jno
pushf
inc
outs
and
cld
pushf
cwde
and
call
xor
cwde
sbb
aaa
sub
loopne
mov
(bad)
mov
dec
push
sbb
sahf
je
sub
or
dec
pop
pop
fxch
add
ror
cmp
or
jbe
or
(bad)
in
in
sbb
or
je
push
lock
dec
adc
sbb
cmps
loop
(bad)
push
std
mov
popa
add
(bad)
sub
cwde
mov
mov
ins
repnz
sub
mov
or
lock
mov
stc
add
add
push
(bad)
mov
cmp
cmp
movs
jnp
cmp
and
cmc
aam
jbe
adc
and
push
mov
cmp
mov
add
add
pop
or
xchg
and
test
dec
inc
pop
je
push
dec
bnd
and
je
jmp
ss
mov
xchg
dec
mov
push
inc
cmp
lea
push
adc
add
std
popf
mov
fcom
mov
or
mov
adc
mov
lock
(bad)
mov
sahf
out
and
lock
pop
sub
mov
mov
and
mov
retf
mov
mov
xor
or
loope
dec
test
adc
fidiv
(bad)
and
popf
mov
int
ror
adc
enter
icebp
sbb
adc
call
mov
pop
ds
popa
fcmove
sbb
(bad)
jge
les
add
sti
(bad)
jl
fcomip
pop
and
or
pop
loope
pop
dec
mov
mov
dec
sbb
movs
je
mov
dec
adc
adc
js
and
ret
cmp
add
cs
cmp
jae
push
(bad)
inc
cmps
or
mov
adc
out
std
cmp
pop
cmps
adc
fnstsw
daa
mov
cs
std
xor
xchg
cs
rcl
arpl
arpl
es
dec
push
loopne
pop
mov
or
(bad)
iret
add
ss
xor
daa
mov
fwait
mov
cmp
cmp
mov
rcl
sbb
mov
sbb
xchg
mov
mov
xor
mov
or
cli
mov
jmp
mov
pop
mov
(bad)
inc
mov
stc
cmps
push
sbb
xor
ror
pop
out
pop
cmp
div
cmp
or
push
dec
mov
ror
(bad)
into
pop
pop
jl
sbb
add
dec
lods
xchg
xor
pop
push
cmp
add
in
cdq
push
xor
and
mov
mov
ret
retf
(bad)
das
mov
stc
pop
inc
mov
or
aam
xlat
xlat
imul
xor
xchg
mov
pop
pop
xchg
mov
mov
(bad)
fldcw
rcl
dec
mov
cmp
aas
std
ja
imul
fdiv
adc
pop
push
cmps
mov
retf
ret
jae
les
fld
int
inc
pop
xor
lea
pushf
jae
mov
mov
js
or
dec
test
adc
pop
ds
xchg
pop
(bad)
enter
cli
(bad)
aam
sbb
iret
mov
xchg
xor
cs
repz
adc
movs
push
in
lahf
sbb
icebp
and
push
add
rcl
sbb
outs
inc
retf
mov
mov
dec
jb
lods
push
shl
sbb
xchg
ins
ss
mov
outs
test
movs
xchg
fwait
outs
or
ror
jae
sar
pop
adc
jno
adc
push
in
arpl
test
push
push
xchg
jle
neg
out
aaa
out
mov
xor
add
xor
das
rol
bound
jge
push
mov
je
and
lock
int3
(bad)
rol
mov
inc
adc
and
cmp
cmps
adc
cmc
push
(bad)
loopne
push
mov
add
sbb
push
jg
daa
pop
jmp
mov
lods
mov
pushf
lahf
mov
and
jl
and
push
fistp
adc
retf
sbb
mov
or
dec
std
or
aad
xor
cmp
pop
into
mov
inc
dec
fdiv
or
mov
pop
sbb
pop
mov
xchg
xor
mov
mov
dec
cmp
popa
rcr
sbb
inc
(bad)
push
stos
mov
adc
(bad)
outs
xchg
cmps
leave
xor
ret
lods
mov
repnz
jb
stos
sub
mov
jl
mov
push
daa
and
push
mov
lahf
mov
out
jg
cli
mov
cmps
lock
mov
pop
and
js
cmp
(bad)
shr
retf
(bad)
enter
and
dec
or
test
xor
or
pop
dec
(bad)
aas
daa
inc
inc
fwait
cmp
sub
pop
popf
aas
add
xor
mov
out
test
sbb
jns
(bad)
fsubrp
in
cli
test
xchg
sbb
adc
out
add
inc
mov
and
les
push
and
ficom
bound
es
leave
mov
xor
mov
xchg
cmp
jae
adc
dec
xchg
sbb
hlt
cwde
pop
iret
mov
cmp
jns
mov
adc
cmp
add
retf
pop
push
aas
repz
fadd
mov
inc
loop
fidiv
or
xor
adc
nop
dec
push
mov
sti
lods
mov
hlt
mov
movs
cmp
cmp
lds
(bad)
stc
mov
out
push
push
out
or
add
fs
add
ds
cmp
sub
ret
pop
sbb
mov
pop
pop
pop
aas
mov
fidivr
fild
out
and
lods
sub
mov
push
dec
cli
test
in
jecxz
dec
mov
fcomp
xchg
and
jl
popa
mov
cwde
fnstenv
std
pop
movs
movs
push
in
test
out
paddusw
and
dec
mov
arpl
(bad)
pop
neg
call
xchg
xor
or
stc
sbb
sbb
ret
push
sub
xchg
cdq
push
pop
mov
rcr
cmc
add
sbb
mov
xchg
js
add
lds
hlt
je
sahf
or
mov
(bad)
pop
arpl
and
jne
lods
imul
int
push
nop
ja
scas
jno
pop
jmp
jmp
daa
mov
movs
cmps
sbb
rol
jg
int3
lods
jl
enter
ret
cld
xchg
je
and
out
cmc
pop
in
or
ret
add
in
test
or
in
cdq
shl
popa
stos
test
or
pop
cmp
pop
push
mov
jecxz
xchg
mov
ret
inc
sub
mov
sbb
dec
push
cmp
sbb
ror
aaa
cmp
mov
xor
in
jmp
imul
iret
push
adc
jecxz
loop
lds
or
mov
cwde
popa
int3
loope
lods
gs
call
retf
icebp
test
push
or
into
jns
cdq
and
push
out
sbb
cmp
out
pop
cmp
gs
clc
mov
aaa
out
fstp
or
stos
mov
mov
sub
fld
out
xchg
push
push
std
push
data16
lods
adc
mov
mov
std
dec
cdq
mov
fimul
fstp
push
pop
iret
push
mov
rcl
int
hlt
retf
cwde
lods
inc
aam
je
vpaddw
push
in
ds
scas
shr
sub
into
and
xchg
pop
add
dec
or
sahf
cwde
pop
add
xor
data16
cmps
in
sub
add
xor
dec
jp
out
test
nop
adc
push
aas
xchg
mov
aam
sub
out
xchg
mov
mov
test
test
repz
int3
inc
(bad)
arpl
dec
stc
enter
push
xor
retf
mov
enter
adc
cmp
(bad)
mov
lods
jge
retf
cmps
imul
jmp
jl
mov
sbb
adc
lods
in
inc
fs
pop
dec
es
jmp
clc
fs
pop
mov
fild
adc
fcomp
outs
enter
adc
add
xlat
dec
mov
adc
idiv
faddp
div
std
ret
(bad)
inc
add
add
aam
mov
lods
enter
loop
int
cmp
lock
or
pop
cdq
add
jmp
call
dec
ds
ins
enter
pop
or
dec
inc
push
pop
add
push
cmp
sbb
pop
retf
pop
pop
stos
mov
lds
(bad)
mov
jmp
pop
xchg
in
rcr
stc
xor
or
mov
aaa
jle
dec
add
cwde
cwde
std
cmp
jge
sbb
push
cmps
(bad)
push
lds
adc
jle
sbb
stos
xchg
out
mov
jns
bound
daa
sbb
cmp
jo
(bad)
cmp
adc
mov
dec
in
int
mov
mov
(bad)
data16
(bad)
push
push
push
sbb
mov
imul
sti
out
and
xor
pop
mov
sbb
push
pop
inc
xor
cli
pop
add
sbb
leave
cmp
or
push
sbb
fidivr
or
ins
iret
fistp
mov
outs
repz
jnp
outs
popa
repnz
xchg
inc
add
stos
xor
lods
pop
mov
pushf
jg
mov
jo
cmc
not
push
int
or
mov
aam
dec
in
adc
stc
les
inc
pop
lahf
(bad)
lods
sbb
cmps
int
or
or
gs
xor
sub
loop
push
cli
out
push
adc
rol
mov
(bad)
fiadd
xor
mov
repz
push
and
jae
les
and
call
mov
in
pop
int3
sbb
enter
fldcw
pop
and
inc
std
mov
ds
ret
lods
or
inc
jns
and
xchg
push
xchg
movs
push
jno
popf
adc
leave
sbb
push
(bad)
fisttp
mov
int3
fdiv
int
push
sbb
arpl
(bad)
jns
push
call
push
and
mov
ja
bound
int3
add
xor
xor
mov
mov
test
mov
cld
pop
cmp
shl
push
icebp
adc
or
jne
mov
jnp
mov
dec
cmps
sbb
mov
sbb
jg
cmp
sar
mov
jp
mov
push
loop
arpl
jno
(bad)
imul
jle
xchg
mov
push
sahf
xor
stos
cli
push
xchg
inc
jnp
xlat
jo
out
cmp
xor
mov
retfw
add
sub
xchg
xor
neg
ins
lock
ret
jge
sar
fsub
adc
dec
lea
sub
imul
and
ins
pop
test
jmp
dec
out
pop
jecxz
lds
fcomp
mov
shl
and
or
lds
int3
int
sbb
repz
ret
aas
shl
and
inc
nop
mov
data16
(bad)
mov
lds
stos
lods
and
jae
data16
test
adc
aas
xchg
sti
(bad)
sub
mov
das
pop
dec
ja
ja
out
mov
push
add
loopne
add
xlat
and
jmp
sub
push
pusha
push
stos
mov
addr16
js
mov
cmps
cmp
mov
out
mov
jnp
bound
or
sar
mov
lods
dec
jbe
mov
jo
ins
frstor
jg
sbb
adc
jle
jecxz
mov
xchg
es
xchg
dec
or
add
xchg
mov
mov
sti
cmp
xchg
sub
pop
and
pop
mov
aam
cmp
mov
jge
push
jmp
fmul
dec
fs
inc
push
push
push
xchg
out
bound
cmps
(bad)
(bad)
or
mov
jl
retf
mov
(bad)
jo
in
cmc
cwde
ret
in
add
inc
or
ins
push
push
out
shl
fst
sar
(bad)
std
pop
cwde
aad
cmps
pusha
call
repnz
sahf
outs
outs
push
repz
pop
mov
les
imul
call
push
push
int
outs
fs
into
mov
xchg
or
inc
jmp
int
cmp
rcr
mov
mov
and
mov
int3
test
aaa
xor
dec
lahf
mov
arpl
loopne
call
adc
popa
and
adc
rcl
xchg
adc
push
fild
cs
(bad)
cmp
cld
pop
cli
mov
fistp
xor
sbb
jne
xchg
jbe
jmp
(bad)
int3
(bad)
(bad)
aad
inc
and
test
(bad)
ds
push
jl
(bad)
stc
jmp
xchg
sahf
daa
fimul
inc
test
xor
push
pop
mov
jb
dec
cmc
sub
jnp
xchg
nop
fidivr
out
lahf
mov
aaa
dec
dec
sub
retf
mov
and
scas
fcmovnb
or
or
data16
cmp
stos
shl
mov
mov
xlat
xor
inc
push
pop
dec
xchg
in
movs
movs
lods
jge
icebp
cwde
dec
pop
dec
push
(bad)
fild
pusha
inc
pushf
xchg
repz
(bad)
adc
enter
xor
add
aad
pop
add
or
scas
add
and
push
add
inc
pusha
popf
inc
jmp
add
jecxz
sbb
pushf
iret
mov
out
popf
dec
adc
dec
push
inc
mov
adc
xor
fldcw
cmp
mov
sbb
repz
std
aas
push
cld
xor
iret
dec
or
push
sbb
mov
fwait
jno
in
push
or
pop
cwde
out
push
or
adc
push
test
cmp
cmp
out
sbb
retf
push
idiv
inc
push
xchg
sub
and
cmp
cmps
std
jmp
retf
add
stos
xor
jbe
adc
imul
dec
pop
call
cmp
sub
jmp
cmp
loopne
ror
and
inc
jmp
or
jle
push
in
jl
enter
nop
test
int
popa
pushf
(bad)
fstp
adc
popf
call
push
cs
dec
push
clc
add
(bad)
cmp
dec
arpl
jno
test
imul
jae
ret
(bad)
shl
push
loope
or
fsub
fwait
mov
iret
mov
xchg
jmp
mov
outs
call
repnz
xor
push
jne
in
cdq
lds
lods
dec
add
(bad)
movs
push
int
gs
fadd
cs
jg
jl
retf
push
stos
cmp
mov
adc
xchg
(bad)
out
aad
push
jmp
jb
arpl
loopne
pop
out
je
das
jecxz
add
mov
pushfw
leave
movs
jno
jmp
mov
mov
push
xchg
mov
pop
xchg
push
cs
cmp
ret
jne
push
sbb
pop
push
jo
dec
cmps
cwde
jmp
std
push
push
test
xor
in
and
cs
push
jle
pusha
cmp
mov
and
jnp
sub
and
jge
fld
push
mov
ss
jecxz
xchg
popa
sbb
or
mov
add
mov
sbb
scas
ret
lods
xor
mul
ret
xchg
xor
xchg
xor
gs
shr
and
mov
imul
cmp
inc
lock
fidivr
(bad)
push
packsswb
and
(bad)
mov
mov
push
loope
and
cmp
mov
push
mov
xchg
imul
cmps
sti
jbe
aam
dec
retf
and
pop
mov
or
inc
lahf
xchg
aad
ja
xchg
mov
mov
dec
pop
popa
and
into
shl
cmps
and
nop
xchg
pushf
arpl
mov
popf
leave
fidivr
pop
cs
push
jl
adc
push
add
cmp
icebp
push
mov
pop
mov
call
jb
mov
out
(bad)
and
popf
cmp
adc
cwde
pusha
ins
and
hlt
call
jo
push
jb
outs
push
jns
mov
jge
dec
(bad)
xchg
popf
lods
xchg
mov
lods
cmp
xchg
rol
jae
pushf
lahf
icebp
push
sbb
(bad)
pop
shr
xchg
frstor
inc
outs
call
fisubr
das
mov
clc
mov
bound
or
push
bound
mov
jnp
rol
ret
int
dec
sbb
(bad)
pop
pop
mov
mov
mov
ds
cmc
stc
lods
push
aaa
in
adc
ss
enter
in
cdq
mov
fwait
dec
mov
dec
mov
jbe
dec
sbb
cmps
inc
cli
and
mov
mov
xchg
xchg
mov
stc
xor
pop
pusha
add
imul
lods
and
(bad)
in
lock
mov
(bad)
call
xchg
iret
dec
and
ficom
push
(bad)
xor
mov
cli
adc
shr
ins
fdivr
push
adc
or
push
outs
scas
sub
hlt
jb
scas
push
mov
inc
pop
ret
dec
retf
js
sub
sbb
adc
jbe
rcr
mov
jno
(bad)
aad
adc
adc
ds
pop
dec
jecxz
aaa
rcl
cs
mov
int
xchg
retf
pop
jg
enter
lds
jbe
sbb
push
movs
mov
pop
cmps
icebp
jmp
out
dec
pop
cmc
mov
nop
jecxz
jnp
jo
jmp
xchg
mov
pop
dec
sbb
(bad)
leave
aas
dec
or
loope
push
push
out
sbb
pop
sbb
pop
movs
pop
jne
and
dec
outs
das
aam
fyl2x
imul
into
pushf
sbb
cmc
mov
test
sub
or
push
ins
in
sbb
sbb
rcr
aam
xor
push
fwait
and
sub
sbb
push
push
jmp
cmps
in
ins
jno
movs
es
call
jnp
mov
pop
adc
sbb
js
cwde
cmc
jmp
jne
neg
push
icebp
repz
adc
ret
jne
leave
into
push
pop
ins
jp
lea
push
movs
fisub
daa
neg
mov
ins
add
jo
mov
xchg
sub
in
xchg
mov
es
ret
stc
in
daa
call
sub
mov
push
add
stos
cdq
mov
mov
pop
movs
mov
cdq
nop
or
add
cmp
into
adc
ins
sahf
xchg
fisubr
cwde
xor
aam
mov
int
push
je
ret
sti
fidivr
add
in
shl
enter
and
push
div
cmp
xchg
push
mov
sar
push
cmps
adc
pop
or
mov
and
aam
(bad)
(bad)
call
xchg
loop
jo
das
in
jnp
mov
xor
sub
bound
loopne
cli
sbb
cs
and
je
ins
mov
xchg
or
mov
cmc
sub
or
sub
add
movs
fmul
neg
div
aas
ror
lods
cmps
adc
inc
adc
jnp
shl
cmp
mov
(bad)
mov
jnp
sub
sub
jno
data16
adc
xor
fnsave
pop
mov
sbb
push
mov
aam
jno
fnsave
fdiv
xor
loop
adc
aas
fcomp
mov
(bad)
xchg
retf
fsubp
cli
sub
mov
inc
pop
setns
loope
adc
mov
in
add
jmp
iret
sbb
inc
cwde
mov
inc
and
fstp
dec
sar
sar
push
and
and
fistp
(bad)
loopne
push
and
aaa
pushf
sub
push
dec
ret
shl
test
retf
jne
stos
xor
xlat
sbb
inc
sub
dec
lods
loope
aam
jg
dec
fmul
jmp
dec
ds
adc
cdq
mov
cmp
cmp
and
sub
adc
out
cld
fst
ins
js
and
icebp
push
and
sub
loop
push
movs
sub
jmp
jmp
mov
std
retf
sbb
sub
das
pusha
jle
dec
sar
dec
mov
and
shl
rep
mov
into
pusha
inc
popf
pop
cmps
std
mov
lahf
ss
or
and
bndldx
add
mov
loop
(bad)
test
or
mov
pop
push
push
out
sti
xor
xor
shl
daa
mov
mov
push
loope
leave
inc
dec
repnz
iret
add
loope
xor
mov
nop
mov
mov
mov
(bad)
stos
mov
cmp
fisub
and
xor
data16
push
push
lods
pop
jo
dec
(bad)
out
xchg
pop
mov
ins
jmp
ins
sti
fs
sbb
xchg
(bad)
mov
pop
out
icebp
inc
inc
int
loopne
fstp
mov
bound
and
ror
xchg
neg
pushf
mov
ret
out
fist
pop
ficomp
aad
cmp
and
stc
clc
bound
sbb
push
fsubr
mov
inc
pop
and
jno
push
inc
xor
lahf
push
out
iret
fdiv
pop
cmp
pop
xor
and
fbld
pop
out
jo
adc
test
gs
mov
xchg
bound
mov
push
jae
dec
xchg
ret
into
js
xor
retf
push
add
fnstcw
ds
or
rcl
int3
sti
lods
xor
adc
ins
pushf
xchg
rcl
imul
xor
mov
pop
stos
or
ret
cmc
inc
mov
mov
out
pop
pop
sahf
sbb
lock
adc
cmp
mov
push
dec
retf
movs
stos
loop
add
in
dec
jno
popa
add
adc
jmp
fs
sub
add
mov
mov
and
pop
inc
pop
es
adc
push
jbe
sub
retf
pop
xchg
out
jns
mov
pop
(bad)
addr16
(bad)
aad
and
sbb
sub
sbb
adc
out
xor
mov
sbb
xor
dec
(bad)
pop
out
js
lods
sahf
outs
inc
(bad)
push
aas
sar
adc
repz
jecxz
cmp
(bad)
sbb
add
pop
jmp
cli
cs
sub
jns
cmps
(bad)
rcr
and
or
pop
lds
into
sub
jge
push
jo
loopne
xor
mov
out
out
xchg
jp
int
sti
push
mov
adc
pop
and
sahf
cmc
adc
rcr
jge
iret
cmp
jnp
arpl
inc
int3
and
pop
(bad)
fist
mov
inc
xor
or
inc
pop
jl
pop
mov
aam
add
in
nop
jb
out
add
and
pop
repnz
mov
push
add
mov
mov
jecxz
data16
popf
paddsb
jo
cmp
aam
jno
jne
fisubr
mov
int
mov
data16
cmps
daa
xchg
or
int3
xor
xor
mov
pop
dec
and
out
scas
sub
inc
adc
jo
dec
lods
(bad)
imul
cmp
ja
dec
xchg
dec
cmc
cmp
imul
xchg
mov
(bad)
cmp
cld
aaa
hlt
out
iret
mov
movs
jno
fcmovnbe
les
shr
movs
mov
inc
shl
cmp
sbb
dec
xchg
rcr
add
push
call
cmp
ss
in
jb
stos
lahf
or
test
scas
repz
ret
add
lahf
repnz
rcr
and
lock
push
mov
loopne
push
and
xor
jnp
mov
mov
xor
xchg
add
imul
jb
push
jns
jp
xor
mov
mov
jl
sub
xor
pop
mov
int
pop
shr
mov
mov
pop
cmovno
fld
popa
push
or
mov
xor
ds
jp
sub
(bad)
fprem
enter
or
inc
cmps
mov
or
in
xchg
xor
sub
(bad)
ror
add
aaa
pop
jbe
xchg
push
dec
ins
sti
rcr
push
sbb
cwde
sub
cmp
xchg
mov
cmc
xchg
or
gs
inc
call
push
and
and
imul
fild
in
add
stos
and
sbb
jp
and
cmp
lds
pop
imul
dec
shl
lods
jle
sub
out
into
shr
inc
push
or
dec
out
pop
retf
or
in
out
shl
je
je
(bad)
cmp
das
and
mov
jne
sbb
pop
adc
(bad)
adc
in
jmp
sbb
aas
stos
push
jae
or
jo
jg
mov
cdq
pop
sub
pop
fwait
sbb
out
xchg
jb
test
retf
not
(bad)
inc
cmps
fwait
jecxz
dec
or
lock
loope
push
jp
cmp
push
jne
sbb
mov
(bad)
fst
cmp
jge
int3
sub
cld
stc
(bad)
xchg
out
outs
add
mov
mov
mov
pop
iret
adc
imul
sub
push
xchg
or
jbe
adc
xor
pop
jp
in
arpl
ins
imul
xchg
loop
popa
inc
ds
(bad)
mov
jecxz
mov
mov
iret
fiadd
in
mov
inc
mov
push
adc
daa
stc
neg
hlt
stc
icebp
hlt
lock
inc
mov
cmps
adc
add
sbb
dec
loop
mov
pop
outs
loope
mov
mov
in
es
push
fwait
mov
pop
adc
inc
in
sub
pop
movs
mov
push
cdq
neg
sbb
push
push
(bad)
xchg
jo
push
inc
imul
xchg
lea
pop
frstor
in
xor
(bad)
leave
pop
movs
xor
xor
(bad)
cmp
or
clc
iret
das
cld
jns
dec
lahf
push
shr
ret
add
daa
pop
fild
push
jno
and
add
push
sub
cdq
aad
pop
jmp
movs
call
xchg
cmp
push
jbe
sub
xchg
xchg
push
aad
xor
mov
shl
mov
cdq
int3
in
leave
pusha
xchg
pop
inc
xchg
inc
jb
or
mov
mov
mov
jno
mov
adc
test
adc
push
adc
gs
push
nop
pop
push
and
pop
clc
lods
push
mov
xor
popf
(bad)
jne
cmp
test
xor
mov
add
adc
mov
and
cld
retf
mov
fstp
pop
jmp
aaa
jne
ficom
fnstsw
xchg
in
test
cmp
(bad)
stos
pop
cmp
mov
enter
in
retf
jb
call
retf
test
cmp
jge
imul
ja
xor
test
repnz
pop
gs
(bad)
hlt
inc
jecxz
int
and
mov
inc
fnstsw
mov
add
xor
dec
dec
xor
test
retf
add
aad
add
sbb
push
jnp
aaa
xchg
(bad)
fcom
push
sbb
xchg
xchg
pop
inc
or
retf
cwde
dec
mov
inc
rcl
pop
pop
popf
and
push
add
inc
mov
jp
or
mov
fcomi
jg
xchg
and
and
into
test
pop
or
sbb
xchg
daa
mov
iret
mov
adc
(bad)
fdivr
cwde
add
scas
jmp
cmp
fcomp
xchg
imul
stos
lahf
adc
jle
pusha
or
jge
dec
mov
sub
push
add
inc
jle
jg
pushf
jo
scas
push
cmps
or
bound
aad
dec
sti
or
sti
movs
repnz
data16
popa
in
icebp
sub
push
addr16
sbb
and
nop
das
cmp
aad
jb
popf
addr16
inc
and
stc
fcom
sahf
aaa
and
mov
xor
mov
jb
add
sub
stos
call
loop
ret
mov
add
jp
(bad)
cmp
inc
dec
xchg
stos
fist
xlat
adc
and
addr16
or
mov
jmp
mov
in
xor
sub
sub
inc
dec
pushf
ror
sbb
pop
int
rol
jp
dec
into
enter
dec
std
clc
jbe
mov
sub
and
sub
shl
sbb
fild
clc
das
pop
cmps
xchg
mov
mov
mov
mov
jmp
daa
inc
jp
push
out
mov
repnz
cmp
(bad)
and
sub
rcl
jp
test
es
add
mov
sub
out
ss
fistp
xor
in
jmp
adc
fcom
pop
aam
add
retf
mov
add
sbb
inc
cmps
je
push
lds
adc
lea
sub
push
cmp
sbb
fcmovnbe
sub
jnp
pop
inc
ret
xchg
sbb
cmc
mov
enter
shl
(bad)
ss
cwde
out
sbb
dec
jns
gs
pop
in
mov
sbb
imul
sahf
aas
cmp
call
push
sub
test
test
cmp
and
xchg
lahf
sahf
cmp
mov
push
xor
pop
jge
mul
mov
xor
lods
lds
xchg
data16
(bad)
retf
jmp
outs
daa
sahf
repnz
mov
enter
sbb
pop
clc
or
xchg
add
pop
fistp
inc
inc
dec
dec
fwait
push
xor
int
mov
pop
lock
pop
int
add
push
xor
pop
dec
retf
jo
cmp
mov
je
inc
js
mov
sub
sbb
push
aam
in
push
fst
jnp
jno
jecxz
sub
repz
lods
loop
das
push
cmps
lock
mov
add
int3
jp
jmp
iret
ins
and
pop
push
xchg
out
push
data16
add
mov
cmp
call
mov
xchg
push
sar
aad
sbb
prefetcht0
inc
push
push
sub
fdivr
and
std
div
shl
inc
dec
into
je
mov
(bad)
adc
or
clc
push
xchg
or
push
xor
jle
fwait
and
pop
xor
jo
mov
ins
hlt
pop
mov
inc
call
sti
or
out
xor
data16
adc
(bad)
sub
add
and
xchg
cmp
rol
pop
ret
stos
sbb
test
jb
mov
mov
lock
call
test
push
mov
bound
hlt
loop
scas
scas
push
addr16
or
xchg
add
xor
adc
aam
shl
or
dec
and
sar
sahf
loop
retf
mov
in
leave
cld
cmps
push
scas
jno
nop
fild
inc
(bad)
rcl
mov
cmc
rcr
fdiv
xchg
or
hlt
mov
push
retf
push
mov
xchg
xchg
jnp
rcl
shr
addr16
fadd
and
std
or
cdq
pop
mov
sub
inc
or
daa
in
xchg
cmps
stc
aas
gs
push
sub
rcr
jne
out
xlat
ins
shr
retf
cmp
aas
dec
or
mov
xchg
das
xor
pop
inc
in
ds
cmp
(bad)
fst
shr
mov
mov
sub
imul
int
xchg
xchg
adc
inc
ss
ds
and
outs
arpl
ja
jle
mov
and
adc
movs
cmp
mov
dec
mov
imul
lahf
push
(bad)
cli
jns
rcl
add
pop
out
cmp
adc
repnz
add
pop
loope
out
add
or
xchg
cvtps2pi
adc
mov
ret
aaa
mov
jge
aam
lods
inc
stc
sub
sbb
lods
popf
xor
cwde
mov
dec
bnd
pusha
xchg
inc
pop
pop
cs
jl
cmp
jns
cwde
imul
adc
jg
in
xchg
loope
xor
or
sub
cmp
jo
imul
ret
test
cwde
retf
repnz
xchg
jecxz
inc
cld
dec
inc
xchg
aam
int
push
dec
call
test
mov
xor
sub
or
inc
sub
mov
fstp
rol
mov
imul
test
rcr
mov
jp
jle
sahf
sbb
push
into
popa
mov
adc
add
mov
jns
popf
mov
pop
cmp
add
inc
js
push
mov
lods
pop
(bad)
in
sub
dec
jl
jge
mov
inc
sbb
stos
fadd
lsl
outs
and
mov
adc
movs
fldenv
lahf
(bad)
mov
add
(bad)
test
shr
xchg
stos
std
push
scas
(bad)
mov
dec
sti
push
pop
push
dec
mov
push
push
es
dec
sbb
or
loopne
(bad)
pop
lods
in
pop
ja
jo
popf
xchg
or
jae
addr16
out
pop
mov
icebp
mov
js
cmp
mov
and
xor
fs
addr16
out
jmp
adc
sbb
das
in
jo
dec
fimul
fdiv
adc
iret
js
cmp
cdq
(bad)
leave
or
(bad)
adc
fild
in
shl
mov
cmp
fcomp
xlat
(bad)
jne
scas
xor
dec
mov
mov
jo
jns
or
mov
or
aas
(bad)
loopne
push
jns
call
sbb
call
adc
or
mov
sub
pop
xor
or
mov
imul
repnz
xor
mov
pop
dec
out
imul
cwde
xor
je
outs
popa
xor
jae
add
aas
push
push
in
push
pop
sbb
shr
inc
push
inc
pusha
(bad)
es
sub
mov
mov
ss
(bad)
fwait
retf
xchg
outs
xor
push
in
(bad)
or
push
into
shl
ror
mov
addr16
outs
sbb
jmp
daa
inc
call
mov
ja
xor
pop
and
add
dec
mov
sbb
adc
sub
ds
xchg
sub
cmp
dec
push
(bad)
jmp
mov
xchg
int
inc
fwait
inc
sub
dec
loope
adc
outs
std
daa
fisub
mov
lahf
push
mov
sub
scas
pop
repz
ss
jae
xchg
or
out
push
je
jb
movs
stos
inc
mov
test
mov
fs
inc
pop
leave
mov
or
addr16
jbe
leave
mov
or
xchg
push
sti
inc
and
and
and
pop
push
xchg
inc
iret
icebp
adc
ins
arpl
mov
cs
cwde
xchg
addr16
(bad)
sbb
or
out
mov
rcl
xchg
into
jns
dec
pop
mov
ds
sbb
test
mov
or
or
jnp
add
popf
hlt
xor
cmp
(bad)
lods
xor
je
mov
inc
ins
sub
movs
paddusb
rcr
cmp
cld
dec
iret
fwait
push
and
inc
cdq
mov
out
cld
sbb
jle
push
inc
test
add
cmp
fbld
push
addr16
add
cmp
not
dec
popf
(bad)
je
(bad)
xor
inc
sub
mov
add
mov
and
add
push
fwait
xchg
in
xor
inc
stos
dec
shl
(bad)
je
mov
fsub
xor
inc
nop
repnz
pop
ss
sbb
ins
popa
sar
dec
mov
xor
fdiv
rcl
(bad)
lods
(bad)
xchg
out
inc
outs
iret
cwde
add
or
retw
xchg
jnp
dec
sbb
jne
cmps
psubb
fisub
std
out
mov
fcomp
sub
shr
idiv
in
out
mov
push
int3
and
stos
xchg
sub
pop
and
mov
xor
jmp
ret
push
in
sub
test
push
mov
pop
ins
nop
daa
bound
scas
or
adc
dec
add
adc
push
adc
loop
bound
adc
mov
ret
daa
js
dec
xor
dec
jb
mov
xor
jmp
sar
ins
cld
popf
test
sahf
data16
iret
std
fdivr
add
in
ja
push
jb
mov
mov
push
pop
arpl
mov
lods
sub
idiv
jmp
pop
pop
test
adc
daa
mov
test
fisttp
pop
pop
jge
out
hlt
xchg
loope
mov
stc
jnp
xor
adc
xor
dec
pushf
xor
lahf
mov
sub
repz
stc
aad
int
xor
call
(bad)
jp
cli
daa
outs
int3
jae
push
and
mov
dec
push
sub
mov
mov
xchg
cmp
dec
mov
xchg
inc
stos
xor
jge
clc
mov
jmp
adc
fnsave
add
adc
add
sbb
and
call
aad
data16
cli
jo
cli
pop
data16
xor
iret
lods
fdivrp
fwait
imul
je
lods
rcl
ins
ret
inc
xor
mov
dec
rol
neg
pushf
mov
cmps
std
jle
retf
xchg
xor
dec
add
addr16
mov
call
movs
xchg
xchg
jmp
std
dec
bound
ja
movs
mov
push
add
pop
inc
pop
in
sbb
xchg
mov
mov
icebp
or
clc
mov
dec
dec
stc
cmp
fwait
dec
movs
or
ins
jae
add
popa
aam
push
mov
out
mov
inc
aam
scas
add
test
js
sub
aaa
cmp
xor
sbb
fnstcw
mov
aas
sbb
cmp
add
add
sub
bnd
sbb
jg
clc
stos
pop
shl
pop
sbb
fmul
inc
daa
pop
fimul
jmp
ret
or
mov
fist
pop
xchg
sbb
pop
dec
adc
dec
xchg
mov
sbb
push
mov
dec
test
adc
(bad)
cmc
xchg
call
fnstcw
icebp
int
fs
ret
and
xchg
mov
ja
test
outs
mov
cmp
int3
sbb
xor
mov
xor
nop
ja
jge
pop
mov
cmps
shl
in
jge
test
jmp
mov
popf
out
lods
clc
push
dec
sub
nop
cmp
in
sbb
add
mov
es
push
cdq
popf
mov
mov
xchg
pop
sub
aad
ds
dec
pop
frstor
sbb
sbb
out
idiv
pop
dec
test
mov
push
cld
dec
test
inc
push
shr
xchg
arpl
outs
(bad)
(bad)
xchg
call
cwde
fwait
retf
sahf
cs
and
jmp
fadd
jmp
pushf
xor
rcr
jl
pop
dec
in
sub
lods
sbb
inc
shr
ds
push
scas
jmp
repnz
pop
mov
sub
pop
sub
lea
jle
pop
movs
jno
sub
mov
(bad)
(bad)
jae
cmp
xchg
rol
(bad)
(bad)
popf
xchg
in
push
repz
loopne
push
xchg
mov
xchg
and
aad
pop
enter
cmp
mov
cmp
enter
inc
inc
pop
call
jae
shl
xor
dec
les
jb
jb
pushf
cmp
(bad)
mov
movnti
js
mov
xchg
push
and
add
xchg
cli
retf
xchg
jae
stos
lahf
in
cmps
test
add
or
push
out
pop
pop
add
ins
outs
mov
jle
(bad)
nop
push
(bad)
in
xor
mov
icebp
inc
xlat
sahf
cmp
push
stc
lods
jl
cmps
cmp
fist
ret
mov
or
mov
into
int3
mov
fsubr
pop
loopne
dec
cmps
arpl
aad
fsubr
popa
fldcw
sub
sub
fst
arpl
fs
jecxz
jae
fs
sahf
idiv
mov
jae
or
mov
fild
mov
push
dec
or
(bad)
pop
idiv
test
jno
aad
popf
mov
retf
clc
adc
js
mov
xchg
cmps
bound
pop
outs
cs
dec
mov
sbb
mov
lods
outs
neg
int3
adc
sahf
xchg
dec
inc
shl
sbb
arpl
xchg
xor
dec
inc
fdivr
mov
sub
scas
test
cmp
aad
cmps
dec
dec
fstp
clc
adc
dec
popa
pop
fist
adc
lods
or
or
shl
sbb
and
pop
cmp
lock
icebp
hlt
pop
mov
cld
outs
ss
pusha
sub
mov
lods
cwde
loop
mov
arpl
test
test
mov
xchg
jnp
jnp
sub
(bad)
jmp
lds
fistp
sub
mov
jae
xchg
add
sbb
loop
pop
fs
adc
cli
fisttp
mov
and
xor
(bad)
into
inc
adc
in
in
ficom
pop
mov
leave
jecxz
and
or
xchg
or
hlt
shl
or
pop
adc
xchg
int
aas
jle
mov
mov
mov
fwait
repnz
repz
outs
mov
outs
fisubr
mov
lahf
fs
pop
sahf
push
fxch
ffreep
push
lds
jge
inc
xchg
sub
js
nop
fild
jle
cmp
pop
retf
cdq
xchg
inc
lock
cmp
(bad)
and
aam
push
(bad)
popa
push
stos
add
das
jae
inc
add
rcr
sar
mov
rcr
cld
sub
inc
outs
mov
mov
nop
adc
imul
test
adc
aam
ror
mov
push
dec
out
mov
imul
and
rcl
mov
dec
das
push
cwde
pop
sub
cdq
push
aas
add
dec
pop
cwde
or
pop
retf
lods
pop
pushf
xchg
sbb
jns
int3
sub
push
cmps
bnd
lods
inc
dec
jo
nop
lahf
dec
mov
retf
mov
mov
xor
pusha
push
out
setp
add
or
cmp
cdq
inc
push
fs
dec
hlt
mov
mov
inc
adc
push
cmc
sahf
leave
cdq
push
jno
jnp
mov
pop
xchg
cdq
or
mov
out
dec
(bad)
mov
je
ins
sbb
xchg
mov
inc
repz
push
hlt
mov
xchg
mov
fmul
xchg
stos
into
pop
repnz
mov
add
mov
imul
xchg
fstp
inc
cld
out
inc
push
stos
adc
shl
mov
loope
mov
je
jnp
clc
es
pop
movq
mov
out
lock
push
stos
arpl
jne
mov
adc
add
sti
xor
xchg
cmp
in
(bad)
mov
lea
and
out
outs
push
aad
dec
inc
loopne
pop
pop
or
sub
or
pusha
jmp
jl
movs
ds
inc
cmp
pop
xor
mov
pop
mov
cld
cmp
inc
ficomp
mov
mov
outs
(bad)
aas
xor
daa
lea
sbb
fidiv
cmp
push
add
add
mov
mov
cmp
push
jge
sub
cmc
jecxz
cwde
out
ret
cmp
push
mov
push
js
and
repz
xor
mov
aaa
icebp
popa
mov
and
or
or
push
xor
push
dec
or
lods
pop
rcr
aas
repnz
(bad)
cwde
jp
es
mov
out
imul
ins
push
push
jo
jp
inc
pop
mov
bound
cld
xor
pop
push
cmps
mov
call
mov
daa
outs
add
pushf
lahf
sbb
enter
aaa
std
sbb
and
sahf
mov
push
sbb
xchg
popa
xor
add
in
dec
fcmovu
call
xchg
mul
pushf
xchg
aaa
mov
aaa
xchg
fcomp
push
adc
test
pop
mov
pop
mov
hlt
mov
les
and
mov
add
xchg
jmp
sbb
adc
add
cli
dec
aam
aad
jge
popf
aaa
xchg
mov
fwait
mov
or
mov
dec
jecxz
pop
mov
jne
in
and
bound
jbe
aam
sbb
adc
test
mov
mov
add
and
xchg
inc
adc
or
xor
(bad)
and
retf
movs
dec
cmp
add
mov
aam
cld
pusha
(bad)
movs
inc
aas
cmp
cmc
mov
jecxz
jmp
pop
or
ss
mov
cmp
das
xor
mov
pop
push
xchg
push
mov
aad
sub
push
cli
or
int
ins
or
popf
or
cli
inc
aas
hlt
movs
jmp
repnz
stos
xchg
sbb
xor
scas
enter
dec
inc
lods
rcr
ja
(bad)
cmc
inc
add
pop
retf
and
jae
call
push
retf
scas
dec
xchg
daa
mov
sub
ret
adc
xchg
mov
jo
(bad)
frstor
xchg
mov
ret
inc
popa
div
adc
lods
sub
xor
xor
jb
inc
adc
scas
or
stc
dec
lahf
push
mov
push
mov
push
aam
mov
jmp
out
push
rol
pop
xlat
pop
out
xor
arpl
sti
mov
and
icebp
into
pop
lds
pop
imul
xor
sub
xor
imul
xchg
push
push
lock
cmp
ja
dec
xchg
test
or
mov
mov
cmps
rol
dec
inc
sbb
les
fsub
push
sbb
cmp
or
adc
cmp
stc
scas
sub
jo
(bad)
mov
pop
xchg
pop
jmp
push
ret
sbb
add
xlat
jb
imul
mov
(bad)
fdiv
add
jbe
xor
push
push
mov
ja
sub
mov
jl
outs
jnp
sbb
inc
xchg
dec
fcom
dec
xchg
retf
sbb
pop
leave
adc
add
test
aam
sar
adc
mov
lock
pop
sub
or
jl
and
sub
mov
fbstp
mov
jnp
cmp
es
aaa
aaa
das
out
aas
movs
or
cdq
push
mov
cdq
mov
jb
mov
push
retf
scas
iret
aas
inc
test
dec
cmp
mov
mov
mov
mov
fsubrp
sub
cmp
inc
retf
inc
sbb
cdq
aad
push
push
jmp
push
mov
inc
repz
jge
shl
leave
inc
pop
or
adc
jmp
adc
jns
add
xor
popa
(bad)
push
stos
or
cmp
fistp
jl
dec
sub
mov
jp
pop
ret
bound
aad
repz
pop
xchg
lahf
and
push
xchg
js
dec
push
ss
or
movs
in
repnz
push
dec
es
jle
popa
jle
xor
movs
mov
pop
cmc
test
push
mov
dec
mov
push
scas
pop
ficom
push
mov
mov
mov
cmp
xchg
and
xor
and
mov
mov
add
data16
hlt
cmp
or
dec
jnp
loop
inc
stc
retf
rcl
xchg
sbb
pop
add
adc
jae
cmps
push
pop
cmp
jae
popf
test
mov
aaa
adc
pop
imul
cwde
push
pop
outs
or
add
push
push
imul
push
icebp
clc
stos
pop
icebp
mov
inc
jns
push
add
push
dec
push
ds
stos
inc
push
stos
aad
and
pushf
adc
mov
and
push
mov
and
add
mov
dec
setl
pushf
movs
and
add
push
dec
(bad)
and
cmp
test
imul
out
or
pop
sbb
xor
adc
push
sub
int3
aam
jmp
pop
call
les
jnp
mov
mov
mov
push
call
shl
mov
stos
adc
cmp
adc
ins
and
loopne
jmp
cmp
je
mov
int3
das
jp
or
(bad)
jp
dec
cmp
ja
pop
(bad)
mov
mov
xor
push
xchg
adc
int
jae
and
jno
dec
into
jl
call
pop
(bad)
stos
mov
sub
sbb
cmp
fnstsw
dec
mov
push
shr
pushf
mov
jcxz
sub
sbb
jecxz
test
(bad)
dec
or
out
test
movs
cmp
scas
mov
or
dec
sar
jge
hlt
jge
test
leave
loope
js
xchg
or
in
sbb
inc
xor
in
push
jnp
add
sub
jmp
dec
rcr
mov
ins
jo
js
dec
sub
idiv
fsubr
or
int3
lock
daa
dec
push
out
push
or
add
call
or
add
or
inc
pop
fistp
les
pop
pop
xchg
ja
pop
sar
push
add
movs
mov
(bad)
repnz
loop
(bad)
std
dec
and
dec
lds
xor
fisubr
push
jb
dec
xchg
push
lock
and
cdq
adc
(bad)
std
retf
sbb
add
cmps
iret
xchg
mov
xor
push
js
or
ss
mov
lods
movs
pop
pop
outs
hlt
cmc
push
sub
inc
dec
adc
lods
cmp
xor
mov
add
cmp
aas
retf
(bad)
je
inc
aaa
test
std
loope
adc
add
mov
in
hlt
jns
push
lahf
jne
into
(bad)
mov
shr
leave
add
push
mov
pop
inc
inc
mov
or
or
shl
lea
inc
and
aad
stos
repz
sti
sbb
mov
loopne
ret
sbb
push
fist
cs
jg
bound
mov
loopne
inc
inc
push
call
dec
adc
imul
xor
xchg
dec
sub
int3
(bad)
jmp
jae
aad
cmps
and
sbb
mov
leave
pop
xor
nop
pop
outs
dec
ret
popf
push
outs
mov
jl
cwde
fxch
fdiv
jge
jbe
cmps
dec
pushf
retf
or
xchg
mov
mov
das
xchg
push
out
sub
or
and
xchg
jo
mov
mov
into
sub
dec
jg
or
dec
dec
xor
fdivr
cmps
push
imul
or
cwde
xchg
repnz
stos
mov
shl
mov
fcomp
test
push
in
pop
rcr
dec
pop
ja
push
test
pop
sahf
ja
out
sub
movs
xchg
lahf
jbe
das
ss
dec
and
call
mov
sub
(bad)
and
push
inc
das
sub
mov
pop
loope
xor
ja
mov
int3
adc
(bad)
loop
inc
lahf
leave
mov
js
pop
loopne
jb
imul
push
mov
inc
fidiv
ins
fdivr
mov
jno
or
icebp
repnz
inc
enter
inc
inc
inc
mov
sub
add
push
das
dec
xchg
call
loopne
xor
push
add
fist
xchg
ins
rol
mov
repz
cmp
fmul
bt
ret
jp
push
pop
and
test
cwde
push
sub
mov
ins
xchg
sahf
push
out
push
mul
clc
add
ins
ins
xchg
aam
pop
xchg
jmp
add
pusha
fiadd
push
or
cli
mov
pop
pop
bound
adc
daa
les
mov
out
or
xor
dec
popf
jmp
adc
ja
jle
push
xor
and
mov
repz
and
test
nop
push
mov
add
rcr
push
movs
ret
xchg
call
mov
movs
idiv
scas
mov
pop
out
xchg
imul
je
jg
lock
loope
dec
sbb
jae
cmp
mov
lds
push
rcl
mov
push
push
xor
jmp
(bad)
in
sbb
loopne
ja
fwait
mov
add
rol
sti
push
mov
pop
mov
or
pop
cwde
bound
adc
mov
jb
test
adc
mov
arpl
mov
ret
lods
sub
rcl
shl
pop
cmp
rol
sbb
ins
out
add
push
mov
add
sbb
xor
iret
sub
mov
adc
loope
xchg
cmp
nop
and
cmp
lock
shl
dec
(bad)
mov
xchg
(bad)
mov
sahf
jle
mov
add
outs
sub
or
inc
xchg
int
repnz
mov
jecxz
adc
shl
pusha
xor
shl
add
jl
fcom
(bad)
fadd
cld
mov
mov
xchg
cmc
cmp
mov
push
mov
clc
xor
lods
xchg
outs
out
aas
sub
stos
or
pop
das
sbb
or
dec
ror
repnz
loopne
iret
dec
stos
cmp
ins
push
jbe
mov
stos
(bad)
jmp
jae
imul
or
cli
arpl
bound
sbb
mov
inc
jmp
mov
mov
mov
jmp
dec
fmul
cdq
scas
sahf
xchg
jno
test
retf
push
fst
jbe
mov
xchg
retf
cmp
or
arpl
je
inc
ret
xchg
cmp
sub
repnz
push
add
js
ss
xchg
sub
cdq
xchg
ficomp
push
ds
or
ds
mov
arpl
xchg
ficom
cld
add
les
xchg
pushf
aad
jns
in
in
push
xchg
mov
dec
inc
and
lahf
sub
fnstcw
dec
int3
pop
sub
dec
repnz
and
and
xchg
push
pop
mov
enter
dec
xchg
xchg
cmp
aam
xchg
mov
cmps
fwait
movs
push
jae
test
push
(bad)
and
stos
fsub
retf
push
or
push
sti
mov
cmp
ins
xchg
mov
jge
adc
pop
out
cli
loop
and
clc
nop
jecxz
int
popa
ffree
mov
pop
shl
cmps
xor
test
call
es
int3
fwait
jnp
add
mov
mov
push
mov
mov
cli
cmps
int3
imul
cmp
or
xchg
les
xchg
mov
inc
dec
dec
xchg
xor
sbb
jns
or
cmp
aam
shl
scas
cwde
ja
fmul
cmps
jbe
ret
mov
xchg
cmp
mov
mov
adc
sub
sbb
(bad)
pop
push
cmp
fwait
ja
fwait
adc
pop
mov
dec
pop
mov
pop
dec
loopne
popa
sbb
stos
cdq
neg
dec
sahf
mov
popf
into
fs
into
shr
cdq
mov
ins
ins
fisub
add
sub
cs
(bad)
push
(bad)
adc
jns
fmul
adc
sar
outs
int
sub
sbb
shr
jmp
push
dec
cmps
and
call
inc
das
in
cwde
xor
xchg
clc
fwait
pop
add
sbb
cmps
adc
repz
pop
push
inc
adc
xchg
sbb
movs
xchg
call
in
ret
popw
std
inc
ja
inc
sahf
cmps
daa
xor
push
addr16
out
mov
mov
mov
sar
ds
cmc
or
mov
inc
cmps
ss
or
cli
cmps
repnz
movs
inc
xor
inc
cld
mov
cmp
shl
adc
mov
jmp
cmps
stos
shl
stc
popa
mov
retf
inc
dec
scas
and
jge
mov
xchg
pop
loop
sub
aam
inc
xor
aas
push
jge
call
in
adc
nop
cmp
push
jae
mov
mov
xchg
xor
pop
int
shl
dec
mov
pop
ret
pop
nop
gs
shl
dec
loope
mov
push
ret
out
test
enter
sbb
sti
ffreep
imul
out
dec
cmps
je
inc
xchg
cwde
push
lods
popa
push
dec
int
push
ret
xor
add
fld
mov
rol
or
jo
loop
xor
test
nop
rcr
test
imul
test
ds
ror
cs
mov
sub
dec
je
add
jo
ficom
repz
dec
mov
mov
and
or
add
ja
(bad)
cld
jl
jmp
arpl
pop
shr
push
sub
scas
retf
pop
in
adc
mov
pop
cmp
xchg
mov
lock
(bad)
dec
mov
inc
adc
pop
jge
mov
iret
dec
jnp
test
outs
sub
and
mov
sbb
test
(bad)
cli
mov
ret
xor
pop
mov
adc
ins
das
in
push
test
cmp
pushf
leave
pushf
or
outs
sti
sbb
sar
sbb
sbb
scas
sub
dec
mov
fnsave
neg
jecxz
push
ins
(bad)
(bad)
or
out
in
sbb
(bad)
repnz
(bad)
pop
mov
sbb
data16
and
add
push
cwde
inc
adc
inc
dec
stos
into
cmp
(bad)
dec
out
shr
retf
daa
inc
aam
and
sti
inc
add
in
mov
mov
xchg
sbb
sti
push
loope
jl
int
and
test
dec
and
pop
ret
dec
out
jmp
cmc
push
mov
popa
cmp
rcl
xchg
push
mov
je
sti
int
xchg
stos
lods
das
xchg
imul
fimul
stc
xor
mov
ret
or
rcr
jmp
add
push
xor
sbb
push
and
mov
mov
jge
jmp
xor
pop
cmc
adc
xchg
outs
call
repz
lods
ret
out
sbb
or
pop
sbb
out
je
xchg
cmp
call
jmp
inc
dec
fild
shl
int
or
stos
ret
dec
call
rcr
outs
and
cmp
sbb
es
push
mov
out
jg
call
dec
push
(bad)
jmp
and
mov
fdivr
mov
xor
(bad)
not
jp
and
or
outs
call
dec
and
mov
sbb
sahf
fldz
inc
push
and
or
add
(bad)
repz
sub
mov
pop
sahf
int
jns
pop
xor
or
push
ret
dec
in
adc
retf
lea
fst
push
sbb
pop
movs
push
push
sub
(bad)
fist
dec
adc
call
mov
rdmsr
stos
mov
mov
imul
adc
push
mov
mov
out
xchg
mov
or
fucomip
xchg
scas
repz
mov
sub
adc
fst
push
out
mov
div
mov
ins
mov
pushf
jns
in
call
arpl
mov
lds
cmc
xchg
cmp
movs
fsub
sbb
test
nop
cmps
fidiv
adc
xchg
test
mov
out
sub
xchg
wbinvd
fcomp
repz
push
cmp
pop
dec
jno
mov
fcomip
or
jmp
ins
ja
or
xchg
fs
jmp
retf
adc
lods
dec
mov
xor
fiadd
or
retf
or
xchg
out
mov
xor
in
mov
xor
lahf
lods
inc
test
es
dec
arpl
cmps
cli
cli
cmp
jb
in
imul
jge
mov
jb
add
mov
and
or
add
add
fimul
fmulp
push
sub
mov
xchg
stos
xor
inc
mov
sub
push
mov
(bad)
(bad)
aad
adc
sub
jp
stos
sub
fwait
lods
sbb
jp
mov
daa
inc
ret
pop
gs
pop
(bad)
in
push
xchg
fisubr
cs
imul
dec
and
jbe
lds
enter
(bad)
jne
or
sub
retf
es
or
(bad)
in
pop
sub
test
fadd
loop
push
pop
xor
shl
pusha
or
je
fistp
(bad)
jg
arpl
mov
and
cld
add
and
jne
adc
xor
adc
xor
or
cmp
xor
test
sbb
pop
jmp
stc
mov
imul
xor
retf
arpl
jp
(bad)
out
and
fist
xchg
mov
popa
loope
jae
pop
xchg
mov
std
cmp
loop
(bad)
repz
push
fst
nop
add
cmps
sub
mov
outs
mov
mov
add
fstp
xor
mov
div
inc
lea
(bad)
js
outs
xchg
lahf
pop
addr16
out
loopne
mov
aaa
jbe
mov
cmps
push
div
and
sbb
(bad)
retf
xlat
mov
adc
in
cmp
push
pop
sub
imul
mov
mov
add
or
movnti
(bad)
mul
mul
pop
add
test
xchg
addr16
sub
pusha
mov
xchg
in
lock
mov
push
sahf
shl
sbb
dec
jmp
outs
repnz
jo
push
repz
(bad)
std
add
push
lock
jl
cdq
stc
xchg
xchg
sub
and
lea
mov
test
jne
push
mov
mov
jno
aas
and
xchg
in
test
inc
pop
adc
and
loopne
add
cs
sti
std
pop
cdq
(bad)
cmp
mov
sub
lods
jmp
cmp
dec
mov
jnp
frstor
call
cwde
fistp
or
add
into
cmps
sbb
jl
std
mov
gs
stos
jnp
sahf
xor
push
jbe
cs
call
fcmovu
jmp
(bad)
(bad)
mov
js
or
test
outs
mov
inc
adc
in
ins
push
adc
adc
test
fnstsw
(bad)
xor
and
fnstenv
fs
xor
mov
test
(bad)
aad
or
int3
cmps
std
popf
in
lods
jo
std
cld
inc
fld
mov
add
or
xchg
out
cmp
je
daa
jno
adc
dec
dec
loop
aas
mov
mov
mov
xor
ss
dec
mov
popf
sbb
dec
mov
mov
jge
mov
in
xchg
sahf
(bad)
(bad)
lea
xlat
cmp
(bad)
imul
into
pop
das
out
aam
dec
sbb
jnp
mov
data16
pop
mov
and
jb
mov
mov
imul
mov
lods
pushw
popf
hlt
cs
sub
iret
jle
mov
cmp
inc
ret
fsub
call
jne
pop
and
scas
(bad)
pop
shl
cdq
xchg
sbb
push
or
in
mov
int
and
push
stos
mov
cli
or
ss
ins
mov
push
ja
lea
fxch
inc
fbld
add
nop
stos
aaa
sbb
pop
adc
retf
cmp
xchg
lods
mov
push
cs
or
fist
jne
popf
fist
add
pop
pop
dec
or
fadd
jmp
jb
jle
lea
shl
das
add
jecxz
dec
test
jmp
daa
jbe
pop
sub
dec
xchg
mov
dec
pop
xchg
sbb
sti
dec
arpl
sub
push
rcr
pop
jns
in
xchg
(bad)
jmp
mov
sar
sbb
xor
imul
pop
push
imul
js
pop
or
rcr
and
inc
fisubr
add
test
inc
ds
mov
mov
dec
pop
xchg
add
pop
iret
out
rcr
cmp
ss
xchg
clc
sbb
(bad)
push
retf
xchg
push
shl
jb
push
fnstcw
sahf
scas
fist
sbb
push
data16
fdivr
or
cmp
dec
jcxz
jns
(bad)
mov
scas
and
mov
jle
aaa
popf
or
fwait
jne
sar
ins
dec
retf
(bad)
scas
out
hlt
sar
sub
add
cmp
lds
jb
adc
enter
retf
dec
ins
sahf
mov
push
jg
hlt
aas
aam
add
or
jb
mov
imul
mov
pop
mov
imul
fimul
mov
retf
xor
aas
inc
sbb
gs
sbb
sbb
mov
push
nop
hlt
adc
pop
adc
sbb
ja
sahf
inc
dec
pop
mov
lods
mov
loopne
mov
xor
(bad)
cmp
call
lahf
outs
push
add
mov
repnz
aaa
mov
call
mov
jmp
dec
jae
or
jns
cwde
cld
fimul
cmovo
inc
int
jae
icebp
stos
mov
pop
out
adc
popa
cmp
movs
add
push
mov
mov
inc
sahf
pop
(bad)
outs
xor
enter
inc
fsubrp
mov
inc
push
or
call
jecxz
jb
es
inc
loop
mov
cmp
pop
(bad)
mov
movs
popa
lock
jbe
arpl
xor
stos
and
push
jae
lahf
jmp
dec
or
mov
pop
in
or
dec
data16
xor
pop
mov
xor
int
xchg
retf
movs
popa
dec
daa
fcmovnu
out
mov
jb
les
nop
jbe
xor
mov
adc
mov
inc
adc
xchg
pop
aas
mov
inc
mov
inc
cmp
int
les
jnp
int3
pop
adc
popa
add
shr
sbb
scas
in
cdq
(bad)
push
inc
add
neg
mov
jnp
pop
sub
or
daa
mov
popf
mov
dec
mov
mov
retf
test
xor
imul
add
out
jmp
mov
int3
xor
loop
out
jge
push
mov
sar
xor
mov
retf
dec
cmp
add
ror
dec
aam
jle
mov
movs
fstp
cmp
les
mov
scas
cld
je
fdivr
mov
add
pop
rcl
mov
movs
xchg
xor
sbb
ds
add
pusha
sahf
adc
sub
addr16
push
push
push
mov
add
or
imul
repnz
mov
sub
push
sbb
hlt
and
mov
cmps
ficom
sub
jns
je
out
mov
neg
pop
lds
mov
cs
sbb
test
or
(bad)
and
mov
xchg
jns
sbb
sbb
fwait
cmps
cld
arpl
arpl
mov
cs
das
dec
pop
pop
sub
xlat
push
js
jl
lds
cmp
addr16
jecxz
pop
dec
div
ret
int
jbe
cmp
(bad)
fld
jle
and
sub
jno
mov
fs
sbb
ficom
and
add
sbb
(bad)
jmp
inc
shl
pop
and
adc
pop
gs
sbb
and
push
mov
call
in
ins
test
push
rcl
loop
mov
or
pusha
cwde
mov
(bad)
push
in
ror
loopne
lods
fmul
sbb
and
mov
inc
mov
add
add
pop
mov
cmp
push
push
mov
cmp
dec
dec
hlt
fstp
in
mov
push
aam
mov
dec
inc
dec
rcr
(bad)
sti
rol
sbb
rcr
lock
jg
mov
cs
mov
mov
pop
cmp
int3
jae
and
inc
mov
jecxz
cmp
cmp
fstp
adc
mov
out
movs
mov
xchg
fild
sbb
js
pop
adc
inc
call
mov
call
xor
inc
mov
mov
dec
and
mov
pop
jae
push
dec
and
out
rol
and
inc
outs
xor
ficom
or
repnz
push
adc
xchg
sbb
shl
popf
es
push
and
loope
ror
mov
fstp
sbb
lods
lea
lods
and
cmp
jb
or
jmp
pop
fcmovne
pop
push
push
call
fwait
pusha
(bad)
stos
push
fcmovnu
repnz
out
xchg
mov
inc
add
mov
sbb
or
xchg
lods
das
and
int
iret
jbe
push
xor
pop
add
lahf
jne
mov
pop
je
stc
shr
xor
data16
pop
cmp
or
mov
es
not
dec
lods
inc
aaa
cmps
mov
shr
aad
add
stos
mov
and
xor
jecxz
(bad)
xchg
mov
push
xchg
scas
pop
cmp
cmps
cmps
scas
lea
cmp
cmp
pop
call
loop
inc
xor
xchg
fisubr
dec
push
popf
push
mov
adc
fdiv
and
clc
mov
push
jns
imul
fdivr
pop
retf
xor
movs
(bad)
inc
outs
call
mov
inc
imul
ss
cmp
(bad)
out
imul
dec
dec
cmp
mov
mov
lock
das
jle
mov
adc
mov
scas
pop
pop
add
les
pop
push
mov
mov
mov
mov
inc
scas
lods
rcl
pop
push
sub
push
cmp
xor
mov
push
lahf
inc
ds
sbb
xor
sti
rol
pop
jns
fsubr
std
adc
add
jmp
xor
xor
mov
pop
jmp
jns
inc
rol
xor
dec
(bad)
jo
mov
sub
sub
repnz
push
inc
in
xchg
and
test
mov
dec
sub
fist
adc
add
leave
xor
pop
retf
ret
cmovle
add
adc
sub
scas
fsubr
and
mov
jb
pop
xor
jmp
popf
neg
(bad)
xchg
ret
mov
ja
fistp
xchg
ret
jg
sub
rcr
jo
or
test
cmp
mov
xor
or
icebp
mov
push
or
repz
inc
cmps
arpl
and
adc
lods
fisubr
imul
daa
addr16
cs
add
in
xor
mov
call
iret
inc
sub
or
cmp
and
sbb
int
ja
out
and
inc
push
call
shl
mov
movs
adc
in
cmp
(bad)
mov
xchg
mov
pop
rcl
dec
sbb
push
and
retf
push
arpl
xor
xor
repz
adc
test
call
xchg
pop
mov
das
retf
mov
add
(bad)
mov
add
gs
or
jmp
int3
or
adc
cmp
ss
repnz
xor
ror
loopne
xor
dec
xor
cmp
or
add
inc
or
cmp
cmp
outs
lahf
mov
cmp
test
movs
sbb
push
pop
fcmovbe
ja
mov
lods
cmps
into
scas
sbb
mov
push
mov
test
cs
jecxz
push
in
inc
xchg
ins
jns
and
cmp
ror
scas
jns
dec
or
xor
push
adc
jle
test
nop
jno
call
es
aas
repnz
div
push
out
test
jb
std
dec
(bad)
jmp
and
cld
and
rcr
cmp
popf
test
sub
mov
daa
jmp
in
rol
mov
gs
add
test
js
cmp
cmps
inc
adc
lahf
inc
mov
cmp
xor
mov
push
cld
xchg
out
arpl
mov
or
mov
xchg
pop
fcmovu
mov
xchg
pop
mov
mov
mov
mov
push
js
dec
xor
mov
mov
or
lahf
stc
out
adc
and
and
xchg
push
jb
in
out
or
mov
push
pusha
es
jl
ss
or
push
inc
push
cs
(bad)
and
rcr
adc
and
or
enter
mov
add
mov
sahf
jmp
stos
xlat
jns
cmpxchg8b
arpl
mov
jbe
addr16
sbb
cmp
int
pop
cwde
push
cwde
mov
ds
inc
(bad)
xor
fnop
(bad)
(bad)
addr16
daa
adc
xor
or
adc
adc
pop
inc
mov
xlat
xor
out
inc
stos
out
scas
pop
inc
fldenv
cmp
jne
out
repz
sbb
movs
inc
sbb
pusha
data16
and
leave
pop
outs
xor
jp
jae
fnstenv
push
outs
jae
sub
push
jmp
stos
add
lahf
out
add
mov
cmp
push
psubb
jno
lea
xchg
ja
sbb
ss
mov
fwait
imul
jb
jge
sahf
mov
or
jmp
loope
aam
mov
jnp
jmp
lods
adc
mov
shl
xor
shl
jne
mov
jmp
std
repnz
and
xor
cmp
retf
sbb
push
or
aam
or
pop
lods
stos
pop
add
loop
mov
cmc
sub
ins
mov
jb
imul
and
fild
mov
cmp
jp
sti
aas
mov
push
xor
ja
outs
cdq
test
pop
inc
(bad)
shl
add
je
test
adc
dec
out
outs
and
dec
sbb
xchg
ja
test
mov
pop
inc
mov
jno
sub
into
sbb
mov
cdq
or
cdq
pop
jmp
add
fstp
adc
push
xchg
or
loope
mov
pop
push
fnsave
shl
dec
cdq
cli
jmp
mov
fistp
cmp
push
xchg
(bad)
jl
xchg
stos
jecxz
jns
pop
pusha
xchg
mov
test
mov
in
cmp
mov
mov
ror
dec
movs
cmp
mov
push
dec
cmp
pop
sahf
loope
sbb
jecxz
jmp
sub
adc
mov
test
jns
adc
mov
mov
(bad)
and
xor
fndisi(8087
mov
adc
repz
cmps
xlat
fild
xor
ins
pusha
cld
out
outs
push
(bad)
mov
shl
mov
sbb
add
jmp
sbb
repnz
sbb
sbb
cwde
jl
inc
or
jecxz
std
cmp
mov
sbb
pop
addr16
sbb
shr
movs
or
gs
ins
popa
mov
aaa
ret
adc
out
xor
cdq
fisubr
inc
test
mov
std
shl
fnstenv
mov
pop
xchg
or
xor
call
leave
jae
xchg
push
out
ds
in
movs
retf
(bad)
ret
pop
jbe
outs
mov
inc
daa
(bad)
xlat
pop
sub
adc
je
cmp
out
xchg
fadd
push
je
inc
fnstenv
js
or
cmp
stc
cmc
neg
jg
scas
imul
sahf
dec
sub
les
mov
imul
bound
loopne
cmp
fmul
pop
mov
pop
sbb
add
or
ret
imul
push
ret
aam
stos
ins
cdq
dec
das
jecxz
data16
daa
not
fs
add
dec
fcom
in
out
ret
xor
int3
inc
test
out
mov
mov
jecxz
inc
outs
adc
cmps
jbe
sbb
sub
ret
push
ins
add
cmp
mov
retf
xchg
xlat
dec
mov
rcl
mov
xchg
lahf
js
movs
mov
cmp
shl
sub
int
arpl
aaa
in
fdivr
call
pop
push
jns
adc
ja
or
test
(bad)
cmp
and
dec
dec
push
pop
mov
stos
(bad)
sti
(bad)
mov
data16
xchg
inc
mov
repnz
inc
test
test
jmp
or
(bad)
imul
lahf
js
adc
jle
xchg
jp
shl
in
inc
movs
sbb
add
push
pop
sub
pop
(bad)
push
gs
cdq
adc
pop
mov
xchg
retf
retf
mov
hlt
mov
inc
push
ficomp
test
push
xor
push
(bad)
dec
mov
or
mov
scas
pusha
and
stc
pop
sub
sbb
push
lods
fmul
mov
xor
mul
jle
repnz
or
inc
in
shl
pop
int
in
cli
xor
jg
int3
cmps
cmc
aas
adc
call
inc
pop
loopne
fsubr
inc
mov
mov
dec
(bad)
xchg
and
lahf
out
push
push
movs
into
or
aam
add
out
jg
add
mov
nop
lgs
aaa
js
mov
faddp
in
fld
add
push
mov
push
imul
stos
xor
cli
xor
mov
xchg
fist
imul
and
sub
vmovmskpd
popa
xor
sbb
retf
mov
in
xor
and
loopne
mov
repz
(bad)
loopne
cmp
push
sub
(bad)
adc
dec
lds
sbb
cmp
mov
movs
push
retf
inc
nop
imul
mov
pusha
iret
add
add
sahf
push
pushf
cdq
dec
sbb
(bad)
sub
sbb
jo
sbb
movs
cmp
adc
rol
mov
(bad)
lahf
pop
shl
pop
retf
nop
push
test
mov
nop
add
pop
xchg
xchg
pop
out
(bad)
sbb
das
adc
stc
aad
cmp
jge
into
xor
aaa
loopne
jb
xlat
stos
hlt
cli
das
jnp
vmread
adc
ins
dec
adc
mov
xchg
and
xor
pushf
scas
test
fldcw
mov
lea
cs
iret
mov
fbstp
int
jle
popf
xchg
and
dec
xchg
or
mov
jns
mov
outs
(bad)
stos
jp
jmp
add
xchg
dec
in
sub
inc
icebp
das
aas
ja
jle
gs
into
sbb
out
xchg
or
inc
push
dec
or
daa
sub
mov
add
xor
pop
jno
jbe
or
shl
dec
(bad)
mov
std
rcl
xchg
xchg
mov
mov
jbe
or
sub
cmp
aaa
(bad)
(bad)
sbb
inc
xchg
mov
imul
clc
mov
repz
lods
push
rcr
sahf
pop
rcl
pushf
jmp
jmp
xor
and
cmps
(bad)
ror
mov
out
push
inc
in
inc
jne
jns
inc
(bad)
add
mov
outs
and
add
(bad)
mov
scas
and
icebp
pop
call
mov
mov
mov
sbb
popf
sbb
aas
mov
jne
jmp
mov
pop
xor
mov
xlat
xchg
xor
push
mov
or
sar
imul
pop
aam
scas
mov
je
out
call
cld
mov
push
mov
test
neg
test
cmps
mov
cmp
xchg
mov
xchg
sub
bound
inc
leave
jnp
fist
adc
push
cmps
or
push
jb
iret
lods
jg
or
fist
movs
mov
fwait
std
push
arpl
mov
sbb
push
dec
add
jns
cmp
arpl
xchg
jle
in
in
je
push
cmps
hlt
jmp
xor
add
inc
push
xor
sub
hlt
imul
dec
nop
test
push
test
adc
lock
push
repz
or
or
loopne
test
xchg
sub
inc
xchg
inc
pop
pop
jge
dec
dec
sub
jle
test
jg
xchg
inc
call
xlat
xchg
jne
pop
inc
cmp
cmp
(bad)
jp
mov
push
and
jge
(bad)
clc
pop
dec
fldcw
int3
icebp
jno
sbb
pusha
mov
mov
outs
cmp
adc
cmp
jb
mov
das
mov
call
adc
cmp
xor
repz
sub
sbb
jne
outs
out
cmc
push
test
xchg
jo
add
cli
cmp
fcmovnb
dec
out
daa
sbb
push
or
inc
test
push
mov
retf
jb
xlat
jl
xchg
xchg
jmp
xor
mov
sub
xor
pusha
fcom
mov
xchg
xor
inc
push
(bad)
(bad)
in
push
pop
sub
fld
jns
sbb
retf
dec
mov
push
add
fadd
xor
ffree
jne
sbb
retf
iret
aas
and
inc
das
dec
mov
jmp
iret
xchg
test
xchg
jp
je
mov
or
inc
les
jae
xor
mov
jbe
jae
sub
iret
mov
pop
retf
jp
imul
pusha
sub
int
xchg
in
fldl2t
xor
and
es
jle
xor
scas
adc
stos
bound
js
(bad)
ins
jecxz
mov
jno
mov
stos
push
mul
ret
push
and
or
sahf
ins
jecxz
jne
addr16
nop
jp
pop
loope
in
jno
and
int3
mov
(bad)
push
fmul
fs
lods
test
popf
(bad)
mov
inc
pop
adc
adc
cmp
(bad)
jle
rcr
or
adc
ins
idiv
and
cmp
lahf
call
mov
stos
add
mov
loop
mov
push
popf
adc
mov
cmp
shr
sbb
inc
stos
mov
repnz
inc
sub
push
sub
rcl
jge
dec
push
aam
test
jge
push
hlt
ret
mov
push
imul
xchg
and
push
mov
aam
aad
pop
push
iret
push
mov
sbb
pop
cdq
mov
cli
ret
push
imul
bound
imul
mov
cmp
push
popa
push
stos
out
dec
or
rcl
ins
data16
ret
mov
push
mov
inc
jb
mov
push
in
mov
in
aam
fist
retf
aad
popf
mov
hlt
xor
(bad)
push
ret
jge
popf
rol
int
pop
pop
dec
xchg
adc
sub
stos
dec
and
(bad)
mov
mov
sar
xor
add
cmps
adc
pop
les
mov
pop
fild
mov
lahf
mov
stc
stos
rcl
adc
arpl
xchg
lods
fidivr
xchg
(bad)
ds
out
cmp
out
push
les
stc
sbb
jae
add
stc
pop
mov
add
mov
add
je
inc
or
lahf
lock
gs
aaa
int
xchg
das
(bad)
int3
xor
jecxz
rcl
or
retf
ja
(bad)
mov
mov
je
arpl
push
out
mov
aad
fs
add
popa
addr16
push
sub
sar
dec
cmp
dec
pop
xlat
inc
adc
adc
in
ja
fbstp
data16
in
sbb
add
push
or
retf
repnz
jnp
push
sub
es
movs
out
les
les
pushf
test
mov
xor
push
jmp
not
jne
inc
dec
add
or
mov
add
iret
cmp
(bad)
jo
mov
mov
mov
dec
in
imul
ret
fsub
mov
loopne
imul
jmp
je
stos
clc
push
sbb
arpl
mov
push
mov
fnstenv
outs
mov
inc
out
das
jae
xor
jl
or
jbe
xchg
jmp
sub
cmp
xor
dec
jae
or
push
inc
popa
xor
cmp
dec
icebp
cmp
jge
pop
push
dec
jp
fidiv
cdq
jmp
fisub
jge
pop
in
pushf
push
push
jae
daa
push
call
es
sub
inc
js
daa
mov
dec
out
fwait
dec
xlat
test
xor
ds
repz
lock
mov
adc
sub
xchg
push
jns
lahf
jp
push
dec
(bad)
xchg
mov
(bad)
fidiv
sub
rcr
adc
pop
test
rol
pop
iret
add
jl
cmp
xchg
(bad)
or
popf
(bad)
jb
nop
pop
mov
xchg
mov
push
cmp
fistp
arpl
or
mov
dec
pop
je
stos
xor
adc
pop
inc
inc
lock
movs
dec
or
out
scas
sbb
pop
je
jne
(bad)
jbe
jge
mov
int3
push
in
push
fcom
xchg
push
jnp
(bad)
fcomp
mov
mov
div
push
out
int3
cli
mov
cli
movs
pusha
cmps
sub
pop
adc
jmp
xor
pop
iret
jno
test
repnz
mov
sbb
jns
mov
or
fnstsw
and
sbb
adc
add
adc
into
push
sbb
inc
jns
ja
mov
cmp
clc
inc
push
sbb
push
jnp
enter
mul
xor
jo
mov
addr16
sub
sbb
cmp
xchg
cmp
xchg
jns
test
jo
xchg
je
int
xor
aam
push
sub
and
mov
retf
xchg
je
test
addr16
stos
and
dec
mov
dec
scas
jmp
jo
movs
inc
cld
ret
pop
popa
lock
scas
ds
call
xchg
(bad)
sub
lods
vpmovzxbw
loope
mov
xor
add
test
fwait
dec
add
nop
leave
imul
or
mov
dec
ror
movs
pusha
and
xlat
ret
cmp
es
ret
sbb
mov
lods
xchg
arpl
call
dec
mov
jnp
push
js
bound
test
pop
cmps
or
add
xchg
pop
(bad)
adc
aad
mov
dec
fstp
rol
fisub
pop
or
sahf
movs
pop
stc
mov
xchg
inc
jl
xchg
inc
sbb
mov
inc
mov
inc
xchg
loop
dec
dec
xchg
pop
or
gs
out
sbb
(bad)
div
clc
lods
lock
mov
loop
jno
dec
add
(bad)
mov
aad
add
ins
(bad)
push
jns
aad
mov
sbb
adc
shl
test
and
pop
hlt
ss
shl
(bad)
test
cmps
dec
cmp
sub
or
ret
xor
ficom
inc
je
loope
sbb
shl
cli
inc
out
sbb
add
dec
retf
dec
popf
push
jecxz
outs
icebp
call
int
sub
enter
inc
outs
mov
addr16
xchg
mov
fist
xor
adc
mov
sbb
in
xchg
mov
cli
mov
jmp
jmp
sbb
rcr
xchg
loop
dec
sahf
fsubr
outs
ins
fsub
lds
add
push
xlat
mov
outs
inc
fadd
sbb
ret
dec
and
mov
xchg
jo
xor
(bad)
imul
retf
jp
jle
cmp
or
sub
mov
xchg
jmp
outs
mov
les
and
dec
mov
mov
cmp
push
jmp
fs
mov
mov
adc
fdiv
cdq
rcl
imul
mov
lods
test
mov
in
inc
fist
inc
lds
sar
xor
imul
test
imul
adc
pop
cdq
ret
les
push
and
es
movs
inc
mov
ins
inc
adc
es
(bad)
fild
loope
fs
cmp
or
dec
fdivr
push
arpl
and
or
out
out
add
aad
jnp
inc
inc
adc
adc
push
and
call
shr
movs
loop
mov
fidiv
mov
mov
lods
adc
aad
mov
repz
retf
or
cmp
jae
mov
add
movd
cmps
dec
loope
les
lea
inc
jnp
fisub
dec
sbb
pop
lods
inc
movs
xor
adc
ror
das
dec
push
dec
ja
push
xchg
sub
(bad)
lods
dec
xchg
adc
mov
jp
pop
add
lods
lds
adc
inc
fisubr
xchg
ins
fiadd
sub
loope
(bad)
sahf
push
in
jno
and
adc
out
call
xchg
adc
add
ret
add
(bad)
xchg
adc
cmp
or
or
and
test
xchg
mov
not
add
cmp
repz
in
jo
out
ins
cmp
outs
sbb
lea
test
pop
shl
inc
xor
ins
out
jns
iret
movs
and
(bad)
cdq
ins
out
jmp
les
hlt
fdiv
out
enter
mov
loop
aaa
jmp
add
cmp
std
call
xor
std
jl
mov
popf
dec
sub
je
dec
dec
gs
adc
imul
jle
sti
sar
or
cdq
fcmove
xchg
les
pop
mov
in
pop
repz
push
adc
ds
push
and
mov
cld
retf
outs
pop
sahf
dec
lea
jns
mov
jbe
push
neg
and
std
push
push
call
inc
imul
mov
lods
jne
mov
and
sub
mov
int3
(bad)
sbb
(bad)
sub
scas
jno
imul
gs
jge
pop
out
push
xchg
and
xor
sbb
sub
inc
scas
jae
and
pop
sbb
inc
in
cmp
sbb
pop
push
xor
mov
dec
mov
popf
(bad)
enter
int
add
mov
cmps
mov
in
mov
stos
movs
push
out
jmp
outs
jl
int3
cmp
add
mov
jmp
cmp
fs
adc
mov
xchg
fmulp
ds
cmp
pop
pop
test
mov
mov
popf
mov
jp
add
jae
jno
ds
arpl
popa
daa
and
cmp
pusha
cmp
ja
fist
imul
xchg
push
sub
(bad)
or
test
and
mov
xlat
in
add
out
lods
mov
outs
jae
jb
clc
(bad)
clc
out
adc
dec
ret
cmps
retf
pop
mov
jl
cmp
dec
xor
mov
sti
out
cmps
les
inc
addr16
cwde
cli
xchg
and
cmp
daa
pop
clc
ins
xchg
int3
dec
ret
dec
icebp
push
and
in
xor
in
cmps
mov
clc
jle
aam
ficom
jns
stos
clc
les
test
je
enter
jnp
mov
fdiv
or
scas
imul
scas
stos
mov
aam
fidiv
adc
sbb
popa
lock
data16
push
jbe
sub
cwde
adc
les
add
fnstcw
ret
adc
jmp
sub
gs
or
repnz
pop
xor
push
out
sbb
push
loopne
pop
inc
jmp
mov
push
mov
cmps
mov
adc
shl
inc
lods
fdivr
add
fstp
xor
push
sub
pop
xor
aam
xchg
dec
push
call
add
aam
xchg
xchg
adc
and
inc
inc
out
and
add
inc
js
push
add
frstor
mov
xchg
fsubr
shr
or
mov
mov
add
xchg
push
inc
pushf
mov
mov
sub
pop
cmp
call
pop
loop
in
xor
mov
mov
pop
loopne
push
cmc
(bad)
(bad)
mov
pop
xor
mov
sbb
pop
adc
jle
pop
add
lahf
pop
push
mov
add
sub
cmc
pop
cmp
jg
(bad)
clc
mov
push
das
movs
leave
add
jne
mov
ret
outs
cmp
ret
xor
push
mov
and
sbb
pop
movs
lock
xchg
adc
repnz
xchg
cmp
push
stos
and
cmc
fstp
hlt
jg
jmp
adc
and
lea
in
dec
ror
or
mov
pushf
xor
fcmove
ret
mov
outs
mov
sahf
pop
pop
xchg
out
arpl
sbb
je
sahf
push
cmp
dec
xor
push
mov
int3
pusha
cdq
inc
mov
call
addr16
inc
dec
pop
and
inc
mov
nop
sub
mov
mov
mov
lods
and
and
das
or
jge
jns
mov
cmp
dec
gs
jne
fcmovu
jp
into
test
mov
sbb
dec
fnstenv
scas
cmc
pop
dec
and
mov
icebp
push
lods
mov
ret
pop
add
dec
inc
in
(bad)
xchg
lahf
sti
mov
rol
mov
mov
xchg
xchg
ror
ror
inc
stc
iret
cmps
(bad)
adc
mov
(bad)
push
mov
dec
mov
sub
out
ins
popf
sar
pusha
adc
and
loop
cmp
xchg
(bad)
push
mov
push
and
pop
mov
movs
ins
push
xchg
ss
or
adc
sbb
(bad)
pop
xor
push
add
stos
mov
je
and
dec
(bad)
movs
pop
push
push
xor
(bad)
inc
idiv
(bad)
(bad)
pusha
mov
mov
and
aas
neg
add
push
(bad)
aam
(bad)
aas
mov
loope
and
or
mov
std
and
cwde
imul
mov
mov
xchg
mov
push
xor
mov
ret
retf
push
push
jge
arpl
cdq
push
xchg
mov
stos
daa
inc
aaa
push
or
stos
push
add
in
mov
cwde
arpl
fild
outs
int3
sub
inc
sar
int
stos
dec
js
sbb
test
fbstp
push
stos
inc
dec
movs
mov
mov
ss
nop
jb
dec
lea
outs
jb
adc
cld
sbb
cmp
mov
xchg
inc
ja
and
jmp
and
int3
test
lods
pop
loope
in
mov
in
dec
les
call
mov
mov
push
xor
dec
dec
mov
jle
mov
adc
mov
xor
add
jns
ins
or
inc
mov
outs
mov
adc
loop
mov
in
and
into
(bad)
push
sti
add
inc
jno
movs
pusha
inc
retf
nop
ins
or
int3
jbe
xor
popa
int3
std
jae
imul
push
mov
stos
dec
test
push
iret
pop
xchg
inc
int3
jmp
repnz
sti
std
and
ret
and
mov
lds
loop
cmps
test
inc
shl
xchg
fcomip
neg
mov
mov
mov
(bad)
or
in
stos
adc
pop
fstp
pop
push
mov
dec
dec
lds
and
dec
dec
cmp
dec
les
push
xor
or
rol
push
cs
push
push
lock
ss
cmp
out
cmovbe
or
mov
aam
(bad)
iret
je
int3
loope
sub
fcom
sbb
inc
and
hlt
push
imul
aam
repz
add
add
xor
push
xchg
xor
sub
out
dec
fistp
test
enter
jo
sub
push
jae
mov
movs
cs
ror
dec
sbb
je
add
ss
sub
mov
retf
dec
js
fmul
and
leave
xchg
inc
or
iret
leave
inc
sbb
sbb
xchg
sub
xchg
jb
jo
mov
les
jg
sub
mov
sbb
pop
jo
arpl
push
jle
adc
push
dec
xor
sub
mov
call
jecxz
(bad)
pop
or
mov
out
aad
dec
call
and
outs
mov
adc
cmp
mov
fcomp
pop
mov
test
movs
inc
aaa
es
ins
jmp
mov
inc
call
mov
aam
add
xchg
cmps
and
inc
xchg
inc
jo
mov
add
in
and
js
loope
jo
inc
xor
dec
mov
jg
lahf
aad
mov
push
xor
mov
dec
es
fistp
jecxz
mov
sbb
fcmove
adc
inc
test
aas
fcomp
jae
and
push
int
dec
mov
mov
out
pop
out
hlt
jae
popf
jmp
stos
popa
sub
stos
inc
jmp
mov
mov
mov
inc
movs
scas
xchg
cmp
jae
push
(bad)
and
nop
push
mov
(bad)
scas
mov
cwde
lahf
sub
xchg
fist
jnp
(bad)
out
sahf
out
adc
clc
sbb
push
dec
xchg
stos
ror
daa
pop
(bad)
adc
in
(bad)
pusha
out
hlt
ficomp
stos
dec
inc
ficomp
mov
sbb
xchg
popa
mov
frstor
mov
jl
cmp
aaa
push
in
push
fwait
jmp
call
cmc
mov
xor
push
dec
outs
popf
jge
test
shl
mov
or
mov
scas
mov
retf
jae
cs
push
pop
outs
fwait
into
hlt
xor
clc
jl
sbb
jp
lahf
out
cmp
push
sub
stos
cmp
fld
pop
shl
push
inc
mov
xor
inc
jmp
pop
sbb
dec
imul
outs
inc
ins
test
iret
pop
mov
push
jbe
ret
adc
sub
mov
les
dec
fist
clc
cmc
mov
xrelease
scas
out
call
fmul
int3
hlt
xchg
fs
dec
mov
loopne
mov
cwde
into
push
sbb
cmps
adc
shl
inc
in
les
imul
dec
out
jno
in
jg
sahf
add
cli
das
sbb
cmps
jecxz
xor
jecxz
xlat
xchg
cmp
jmp
mov
inc
retf
xchg
or
aam
xchg
test
cmc
cmp
pop
out
dec
mov
xor
push
mov
(bad)
fimul
push
fidivr
xchg
pop
shl
fidiv
push
inc
scas
mov
stc
bnd
pushf
adc
aad
mov
jb
stos
rcr
stos
nop
stos
(bad)
jecxz
mov
inc
pop
pop
enter
xor
mov
jns
sub
(bad)
dec
jne
push
inc
in
xchg
jmp
mov
pop
push
mul
neg
xlat
ffree
pop
addr16
sbb
out
je
arpl
lock
and
(bad)
(bad)
in
fst
sti
rcr
stos
call
cmp
sub
mov
nop
jle
xlat
fpatan
sbb
cwde
push
inc
sbb
pop
sub
mov
xchg
xchg
retf
adc
imul
xor
push
jmp
jg
or
mov
repnz
inc
jmp
add
pop
test
push
jbe
pop
adc
xchg
pop
jne
mov
mov
dec
in
push
sub
and
xor
js
sahf
and
adc
movs
cmc
aad
imul
(bad)
(bad)
rol
popa
das
std
cmp
pop
mov
mov
jp
push
xchg
lahf
adc
pop
and
pop
xchg
in
stos
pop
sbb
jne
or
aad
push
pop
cmp
mov
push
popf
sub
xchg
push
mov
ss
inc
ins
inc
iret
mov
stos
neg
(bad)
cdq
pop
dec
dec
mov
jns
mov
inc
jb
stos
inc
jb
sbb
lds
sti
or
(bad)
jnp
and
div
sub
leave
pushf
aaa
fiadd
xchg
(bad)
jp
retf
adc
jae
cmp
mov
loop
xlat
mov
mov
aam
dec
dec
repnz
sahf
and
dec
bound
pushf
retf
adc
loopne
test
cmps
mov
add
aam
xchg
push
add
out
or
push
das
push
or
or
(bad)
lds
or
add
xchg
das
out
movs
loope
adc
pop
leave
iret
push
or
les
adc
int
movs
mov
nop
lock
jbe
gs
jge
leave
jecxz
pop
popf
in
xor
pop
test
ins
mov
les
push
iret
jmp
push
xchg
pop
or
sub
je
mov
ret
mov
inc
adc
xor
stos
or
xor
addr16
sub
rcl
rcr
pop
loopne
mov
cmps
mov
pop
pop
hlt
add
or
scas
push
push
aas
shl
cmp
and
xlat
sar
pop
fdivp
or
jecxz
test
into
repnz
mov
repnz
aas
xor
rcr
into
call
mov
xchg
sar
ins
mov
jecxz
add
jge
xor
push
jb
fs
ins
cmp
in
fild
pop
dec
push
ja
and
sbb
and
loope
daa
(bad)
dec
mov
add
fdivr
xchg
cmc
cwde
int3
add
mov
push
add
adc
leave
mov
sbb
ja
mov
movs
sub
les
jbe
and
std
jne
out
stos
repz
in
leave
xor
gs
loop
test
sbb
fidiv
jne
mov
or
jmp
cmp
mov
push
sub
sub
out
xor
cdq
sub
mov
sub
pushf
jl
sub
mov
movs
rol
aas
or
cmp
aam
inc
repz
fadd
scas
jns
or
shl
(bad)
call
and
(bad)
mov
sbb
sub
or
pushf
punpckhwd
fiadd
loope
or
enter
or
or
xchg
and
mov
cmp
repz
sbb
ja
out
inc
cmc
cli
or
jp
add
dec
test
es
pop
sbb
sbb
gs
jle
push
leave
push
(bad)
fidivr
ins
shr
pusha
shr
ins
add
in
in
lods
dec
fstp
mov
js
xor
adc
(bad)
xchg
xchg
call
call
sub
arpl
(bad)
adc
and
lahf
cmp
xchg
sub
lock
out
add
mov
xor
xor
pushf
jo
std
inc
add
jbe
ja
xchg
fwait
sbb
xchg
aad
inc
push
repnz
stos
xchg
sub
das
fsub
sub
cmp
outs
sbb
(bad)
retf
sbb
(bad)
xchg
fistp
clc
cs
lock
faddp
fmulp
xor
hlt
xchg
shr
cmp
cwde
mov
jle
pop
call
std
jne
mov
xor
xor
lock
push
dec
push
and
and
dec
and
outs
stc
jno
std
pop
popa
ins
out
xchg
jge
mov
scas
(bad)
rcr
mov
(bad)
jns
fsub
push
cmp
fmul
imul
xor
rcr
xchg
push
dec
scas
call
pop
push
xchg
bswap
iret
xchg
cmp
and
ret
sub
sub
mov
std
repnz
je
adc
or
test
leave
je
lods
test
sbb
jge
jl
sub
mov
cmp
cmps
adc
nop
xor
jno
adc
mov
sbb
xchg
(bad)
push
mov
and
jnp
inc
test
ja
bnd
cli
loope
fimul
mov
sub
mov
lock
fiadd
shr
dec
sbb
inc
jmp
or
mov
jne
xor
add
ret
sbb
arpl
aam
cmp
cmc
add
ror
push
out
and
js
aam
es
cmp
ins
sbb
inc
fild
pop
mov
mov
lds
adc
cdq
lock
pop
fstp
inc
xor
pop
dec
jne
leave
retf
loop
ret
fld
sbb
lods
repz
jp
js
xor
push
inc
out
lahf
outs
pop
mov
dec
push
jp
add
imul
aaa
dec
pop
pop
into
mov
inc
loope
push
iret
lods
rcl
xor
xchg
mov
icebp
test
pop
fmul
inc
cwde
mov
jbe
sti
add
pop
lahf
push
in
sbb
pop
or
bound
arpl
mov
and
int3
push
rcl
jbe
cmps
call
jb
jge
sar
daa
pop
cli
gs
push
in
xchg
jb
fs
fidiv
sub
add
xchg
pop
jge
mov
or
std
push
adc
test
push
je
bound
loope
pop
cmp
jge
and
cdq
dec
popf
pop
inc
push
inc
stos
push
mov
jecxz
not
test
sar
int3
movd
mov
mov
call
jp
stc
mov
(bad)
out
bound
push
add
rcr
adc
scas
sbb
inc
addr16
lahf
fistp
sub
out
mov
inc
xor
mov
add
lock
mov
or
repnz
adc
aad
jmp
iret
xor
mov
imul
add
rcr
push
mov
cmp
pop
xlat
iret
xchg
fild
cmp
or
xor
pop
adc
cmp
jno
scas
mov
jmp
pusha
rol
xchg
call
call
dec
shl
ds
mov
fadd
repz
mov
outs
mov
xor
js
mov
iret
mov
mov
ja
mov
jmp
sbb
das
dec
xchg
arpl
fnstcw
dec
cmp
out
jne
adc
pop
sbb
cmps
aam
aam
add
push
aas
push
stos
and
mov
in
pop
outs
mov
lods
inc
sbb
mov
sbb
fcmovnb
mov
enter
movs
jp
lea
sub
sub
mov
cmp
mov
adc
pop
jmp
dec
adc
xor
mov
shl
add
push
mov
dec
leave
stc
icebp
ds
inc
ror
or
bound
pop
push
inc
inc
iret
push
in
fnstcw
dec
movs
xchg
arpl
fidivr
lahf
aam
fwait
mov
cdq
loope
popa
fucomip
push
fwait
into
push
mov
jg
adc
sahf
or
stos
xchg
adc
and
in
out
jno
stc
cmp
in
xchg
and
adc
hlt
dec
or
sbb
xlat
fwait
jo
sar
push
ret
ficomp
call
fidiv
aaa
daa
mov
pop
test
dec
jno
dec
adc
sbb
call
dec
(bad)
neg
sar
xor
and
cmc
jnp
or
add
mov
adc
clc
out
jmp
imul
lods
and
cmps
push
dec
pop
das
ret
pop
fnstenv
jnp
icebp
call
jns
xchg
xchg
sub
push
jb
lahf
int3
mov
out
and
std
test
out
aad
pop
or
aad
push
movs
dec
adc
push
mov
mov
int3
call
mov
jb
and
sbb
shr
push
xchg
nop
je
sbb
fs
mov
in
adc
pop
test
repz
and
test
je
mov
and
push
into
scas
cli
ret
scas
sbb
js
ret
xchg
je
iret
mov
ficomp
mov
retf
mov
push
mov
inc
mov
push
js
je
ret
sbb
pop
mov
cmps
add
movs
inc
sub
ins
test
mov
jae
outs
xor
mov
xor
and
jno
sub
jl
mov
pop
(bad)
cwde
mov
jmp
xchg
aaa
xor
arpl
scas
test
in
(bad)
mov
int3
sbb
enter
add
mov
loope
or
(bad)
loopne
sbb
xchg
popf
sub
not
arpl
push
pop
retf
adc
(bad)
mov
cld
ret
test
cmc
clc
mov
and
mov
sub
inc
xchg
cmc
jg
add
repnz
push
inc
popa
hlt
imul
adc
fsub
mov
fldenv
cmp
call
cmp
stos
sub
and
pop
mov
loop
popf
aad
lods
sbb
add
xor
xchg
sbb
imul
gs
mov
test
dec
mov
adc
test
jmp
fwait
dec
fwait
mov
fs
dec
dec
push
lds
cmps
jle
mov
cld
movs
pop
fld1
sahf
lds
and
xchg
enter
jnp
mov
(bad)
jb
mov
fisttp
popa
xor
mov
cmp
fwait
les
inc
xor
inc
fst
repnz
test
aam
in
xor
push
push
(bad)
sub
repz
mov
xchg
mov
cdq
(bad)
loop
pop
sahf
rol
fimul
pop
push
dec
fucomi
mov
dec
pop
cmps
aaa
sbb
push
ret
or
mov
jg
aam
fs
dec
cmp
inc
call
dec
sti
mov
mov
cmc
popa
stos
mov
pop
jle
stc
mov
gs
push
or
dec
dec
imul
leave
sub
mov
mov
xchg
sbb
sbb
int3
jp
sbb
pop
ret
inc
cs
mov
mov
adc
aaa
inc
loope
jnp
mov
pusha
pop
cmps
shl
mov
int
cmp
int
arpl
push
out
int3
int3
cmp
jns
dec
push
icebp
add
out
sbb
add
loope
add
push
inc
popa
cmp
push
fwait
inc
adc
sbb
mov
mov
adc
cmp
jmp
add
push
lods
in
inc
pop
pop
sub
and
aas
les
lds
or
fdiv
sub
sbb
iret
sti
mov
mov
outs
or
mov
mov
das
xchg
shl
mov
and
sahf
or
sbb
sbb
sti
in
xchg
mov
fiadd
xchg
mov
cmp
test
lods
jns
or
rcr
push
push
ror
jp
lods
sub
and
js
sub
pushf
lahf
in
add
sub
cmp
inc
mov
adc
scas
scas
test
(bad)
aaa
pop
pop
jmp
iret
je
test
dec
mov
data16
sub
dec
pop
xor
outs
repz
add
pop
xor
jno
xchg
and
pop
and
(bad)
jge
jl
push
stos
lds
in
jns
icebp
cmp
movs
popf
xchg
mov
stos
out
jmp
mov
sbb
lock
xor
jle
adc
shl
jns
xchg
outs
repz
cmp
sub
pop
and
into
int
push
and
loop
mov
inc
mov
push
and
jne
test
cs
jo
mov
jno
ret
scas
ret
adc
add
jg
inc
sbb
lods
xchg
cdq
and
leave
and
fistp
mov
push
imul
adc
and
std
pop
inc
bound
mov
jp
xchg
xor
sti
mov
or
xor
dec
pop
cmp
or
adc
mov
dec
nop
ins
jmp
push
sbb
cmp
sub
pop
movntps
push
cmp
mov
sub
and
xchg
sar
push
xor
mov
xchg
sbb
jns
loop
repnz
jmp
xchg
sar
repnz
das
retf
and
call
cs
and
mov
and
jae
jbe
sbb
popf
imul
mov
xchg
xchg
mov
mov
arpl
jle
and
adc
inc
jae
jp
aas
adc
(bad)
mov
retf
leave
sbb
pop
or
aas
mov
xlat
(bad)
cld
jl
xlat
pop
aam
(bad)
push
mov
shr
clc
cmp
sbb
inc
adc
je
dec
mov
loopne
xor
push
xchg
mov
sbb
retf
mov
inc
mov
push
pushf
cmps
push
hlt
test
(bad)
or
mov
dec
add
pop
and
jp
jmp
adc
dec
aad
dec
test
jle
int
sbb
inc
jno
jl
frstor
pop
pop
test
and
mov
dec
(bad)
stc
neg
ror
pushf
mov
push
push
pushf
dec
and
inc
(bad)
or
outs
jo
idiv
add
dec
jo
movs
push
loopne
in
inc
jb
jle
xlat
fwait
add
or
pusha
jge
sbb
clc
mov
push
lods
adc
pop
xor
int3
fmulp
or
sub
ins
pop
push
movs
cld
and
sbb
out
adc
lea
cmp
mov
sar
xchg
mov
outs
repnz
sti
sbb
cmp
mov
xchg
sbb
pop
dec
xchg
jae
push
mov
pop
lea
(bad)
(bad)
adc
sti
retf
movs
fnop
stc
sub
arpl
push
ror
mov
fisub
loope
fistp
ins
or
lock
xlat
push
adc
or
lds
add
inc
cmp
xchg
xchg
xchg
jne
fcmovne
xor
adc
jns
sbb
push
or
jno
sbb
mov
xchg
pop
imul
outs
inc
mov
cdq
pop
test
data16
adc
sub
pop
lods
outs
hlt
pop
imul
and
add
mov
inc
movs
ficom
stc
or
in
adc
iret
xchg
pusha
and
jp
ins
pop
xor
push
fidivr
ss
mov
mov
mov
sti
add
sar
gs
sub
jno
add
int
icebp
inc
out
stos
push
and
imul
fst
jg
sbb
sahf
iret
xchg
dec
lahf
retf
bound
add
fstp
jne
repz
mov
mov
dec
jnp
pop
nop
stos
fidivr
test
mov
stc
enter
cmp
xchg
cmp
fld
jnp
imul
stos
jl
inc
cmc
pop
mov
and
lods
fdivp
mov
sub
add
add
cmc
lock
into
aad
dec
es
push
jns
imul
sbb
(bad)
xchg
aam
xchg
test
movs
mov
add
and
inc
push
out
ficomp
in
mov
fst
dec
nop
setb
jmp
bound
shl
mov
push
fdivr
shl
jnp
xlat
in
sub
lds
push
xchg
loopne
daa
xchg
dec
popa
mul
leave
mov
add
les
xlat
cmp
movs
inc
shl
sahf
pop
outs
ds
rcl
(bad)
fmulp
dec
mov
pop
in
test
inc
ss
(bad)
mov
leave
stos
mov
push
ret
add
jge
lahf
sbb
push
cmps
int
cld
movs
jg
out
repz
or
call
pop
popa
mov
adc
push
in
cs
popa
jmp
mov
mov
mov
test
lahf
mov
jbe
ror
mov
scas
pop
add
in
in
xor
js
dec
push
out
xchg
(bad)
ds
sub
pushf
sub
cs
(bad)
push
jns
mov
dec
int
or
mov
dec
fiadd
aas
lods
jbe
pop
xchg
lea
or
dec
sbb
sub
jp
pop
out
xor
push
dec
stc
inc
enter
btc
xchg
daa
add
xlat
fmul
shr
xchg
je
pop
out
dec
push
adc
stos
pop
ja
fadd
adc
mul
sbb
shl
outs
sbb
add
movs
je
sbb
and
push
out
cld
ins
mov
aaa
ret
jge
or
mov
into
xchg
mov
fs
cmc
mov
in
jb
cmps
retf
pop
test
xchg
inc
jge
sub
icebp
in
jo
ss
addr16
mov
sar
sub
div
daa
pop
xchg
mov
out
jbe
je
pop
inc
add
mov
add
adc
sbb
cwde
xchg
fstp
or
cmp
cmp
add
pop
xor
mov
add
div
xor
pop
add
outs
test
lods
mov
shr
adc
hlt
lock
xchg
push
retf
popf
adc
stos
enter
hlt
cmp
pop
lods
push
fadd
mov
cmps
int3
or
or
rcr
sbb
(bad)
hlt
in
arpl
cdq
mov
inc
dec
sub
push
(bad)
jmp
dec
fild
jle
xor
adc
sbb
jbe
mov
xor
mov
adc
xor
fucomi
loop
out
pusha
xchg
ja
jae
stos
or
sub
pop
xor
fisttp
cmps
leave
push
jmp
fld
xchg
(bad)
xchg
aaa
jle
sbb
movs
fwait
ss
mov
or
cli
dec
inc
popa
xor
mov
xor
xchg
mov
jl
movs
ror
pop
jmp
aam
and
jecxz
(bad)
jns
fistp
push
imul
push
xchg
sbb
or
push
and
mov
mov
out
xchg
outs
addr16
call
fisub
(bad)
aad
imul
mov
push
push
cmps
cmc
hlt
or
scas
or
dec
sub
(bad)
ins
fdiv
pop
(bad)
rcr
sbb
ins
test
mov
iret
or
dec
loope
mov
xchg
rcr
fucomi
dec
movs
and
xor
repz
xor
pop
int3
test
ins
adc
adc
push
scas
inc
add
out
hlt
mov
rcl
pop
sbb
inc
aad
push
(bad)
das
fisub
loop
cmp
push
jmp
sbb
and
movs
scas
repz
jecxz
fmul
loopne
fadd
sbb
rcl
xchg
mov
add
(bad)
xor
jbe
sahf
pop
add
push
mov
std
mov
dec
inc
xchg
or
test
in
jecxz
jmp
(bad)
or
sbb
pop
add
dec
sbb
push
cli
bound
inc
pop
xchg
cmps
adc
xchg
adc
sbb
jp
lahf
adc
jno
adc
fadd
cmp
fadd
xlat
pop
out
fcom
xchg
into
fisttp
push
pop
jmp
aas
(bad)
stos
mov
jbe
out
push
inc
inc
mov
neg
test
cmc
in
mov
dec
icebp
adc
jb
mov
arpl
mov
push
mov
dec
popf
push
inc
pop
mov
icebp
adc
sub
push
int3
sbb
mov
jne
fst
xor
in
pop
push
or
fistp
es
stos
mov
ins
shl
dec
mov
push
and
jbe
adc
sub
jp
mov
push
lock
cdq
dec
xor
xor
pop
rcr
jmp
dec
mov
clc
es
sub
(bad)
imul
enter
adc
jmp
cwde
inc
mov
add
or
dec
les
aad
pop
rcl
sub
cmp
out
mov
push
rcr
pop
mov
shl
std
and
sub
imul
sub
sahf
loop
adc
idiv
sbb
dec
aad
ja
pop
add
inc
(bad)
(bad)
jno
push
sahf
xor
mov
cmp
mov
sub
adc
pop
cmp
in
sahf
push
fimul
sbb
icebp
cmp
xchg
sahf
cdq
push
cwde
xor
mov
and
hlt
rol
dec
xchg
inc
in
pusha
and
fsub
mov
push
ror
js
inc
mov
or
dec
outs
jmp
test
sbb
outs
in
dec
sahf
and
add
and
(bad)
stos
and
lods
cmps
push
adc
dec
in
std
ret
xchg
add
test
or
je
adc
cmc
sahf
rol
cs
push
shr
out
cmp
loop
cli
mov
add
fldcw
inc
rcl
outs
enter
sbb
push
lods
lock
enter
jp
mov
jne
mov
or
push
xor
or
sbb
jmp
adc
pop
jl
adc
je
jns
pop
cwde
sub
ror
ret
cmp
add
cmp
and
test
cmp
sbb
mov
push
mov
xor
jo
dec
jge
imul
int3
mov
add
fistp
sub
jo
shl
and
push
nop
leave
imul
sub
pop
xchg
xor
push
test
out
xchg
sahf
or
push
mov
aam
outs
outs
lea
cs
push
in
stos
xchg
push
scas
les
push
pushf
push
(bad)
cmp
lea
loope
cs
sub
xchg
xor
cmc
sar
int
mov
xchg
imul
in
sbb
scas
or
jnp
(bad)
out
frstor
sub
fsub
and
cli
lds
dec
in
(bad)
aaa
inc
inc
(bad)
ins
jecxz
jecxz
jl
xor
jno
je
cli
retf
(bad)
mov
repnz
ja
(bad)
inc
mov
push
loopne
je
int
in
sub
inc
stc
imul
adc
call
ins
mov
pop
push
outs
adc
or
add
xchg
push
jmp
dec
mov
dec
push
repnz
sar
sbb
add
scas
cmp
jmp
jo
pop
je
addr16
cmps
xor
hlt
in
add
lock
stos
std
adc
fbstp
jl
inc
add
push
and
mov
in
push
dec
arpl
sbb
jecxz
push
fsubr
jno
lahf
push
inc
xchg
inc
scas
int
push
out
rcl
arpl
fwait
pop
ror
add
jae
sub
dec
xlat
push
push
fdiv
in
rol
mov
(bad)
mov
mov
retf
pushf
aaa
pop
sahf
cmp
arpl
(bad)
icebp
rcl
inc
xor
or
dec
sbb
jmp
movs
jb
dec
mov
sbb
ins
scas
ins
cmp
sbb
add
daa
loopne
add
mov
sbb
dec
mov
jg
mov
cmp
test
int
std
pop
(bad)
fiadd
jno
cmp
or
mov
pushf
sbb
repnz
idiv
jae
or
jp
push
xchg
xor
adc
adc
inc
xchg
loope
jp
dec
jg
xor
sub
sti
dec
pop
and
pop
or
or
adc
cmps
stos
repnz
add
jle
pop
aam
out
and
cwde
pushf
push
mov
into
xlat
int
and
mov
icebp
sub
les
pushf
adc
pop
xchg
push
test
retf
jae
and
cld
jbe
jae
mov
fsubr
and
in
retf
xchg
adc
test
sub
in
sbb
loope
jecxz
cmp
rol
(bad)
jns
(bad)
sar
in
(bad)
jle
test
cs
sub
out
icebp
push
rol
sbb
ins
push
or
push
push
fcmovbe
jmp
inc
push
in
mov
outs
clc
in
mov
jp
in
xor
(bad)
std
mov
sbb
jle
les
sub
sub
fidiv
mov
add
out
jl
test
loopne
sbb
daa
push
ja
imul
jnp
jg
jne
sti
cmp
jne
xchg
out
or
(bad)
add
jno
rcr
les
xchg
movs
rcl
mov
call
sub
dec
pushf
es
je
addr16
add
clc
xor
jmp
test
out
or
leave
addr16
loopne
ret
(bad)
dec
pop
retf
pop
retf
bound
jmp
cbw
pop
push
jmp
xor
in
shl
mov
jb
cdq
enter
addr16
aaa
cmp
sti
ret
aad
mov
mov
mov
or
sub
add
cmps
sub
aam
sub
dec
adc
xchg
(bad)
shr
pushf
xchg
xchg
and
loop
outs
fldenv
scas
sbb
pop
test
cmp
movs
and
stc
sbb
pop
mov
mov
ror
sbb
repnz
cmps
sbb
(bad)
cwde
push
fld
sbb
pop
rcl
xchg
fadd
test
lock
sub
add
ficom
scas
cmps
mul
pop
(bad)
push
mov
or
xchg
xor
loope
jb
jnp
xchg
fist
xor
fidiv
dec
push
in
(bad)
cmc
xor
adc
in
adc
pop
xchg
mov
sbb
mov
scas
sub
adc
into
pop
push
loop
je
out
imul
sbb
jecxz
ret
mov
mov
inc
in
mov
in
jns
hlt
pop
icebp
(bad)
test
icebp
mov
sbb
xchg
xchg
xchg
xor
jle
jge
mov
sbb
inc
mov
repz
ja
data16
pushf
or
push
jge
mov
xlat
ja
add
stc
lea
dec
fs
pop
(bad)
repz
daa
jp
pop
mov
sbb
ja
les
(bad)
xor
cmc
add
cmp
leave
mov
sbb
int3
sbb
into
mov
cmc
adc
jle
mov
push
rol
push
sub
sar
push
jl
ret
std
mov
iret
add
sbb
hlt
fist
add
sub
into
fild
pop
sbb
cmp
add
cmps
in
repz
dec
sbb
adc
ss
push
call
add
prefetchwt1
ja
push
sahf
mov
out
retf
push
add
fisubr
inc
bound
aaa
fmul
xor
je
add
scas
loope
cld
cmp
pop
sbb
pop
xchg
retf
xor
mov
push
and
jnp
or
into
push
jecxz
cmp
mov
push
push
jnp
iret
mov
xchg
cmp
ret
add
es
cmps
cli
aam
jge
and
dec
jnp
in
out
mov
je
xor
inc
jmp
or
div
neg
(bad)
sub
pusha
pop
imul
xchg
cmp
or
push
cmp
pop
clc
aad
ds
mov
shr
mov
inc
dec
int
push
outs
xor
xor
mov
cmp
xchg
fcomp
or
mov
dec
mov
adc
retf
jmp
inc
sub
pop
sub
call
jno
test
ficomp
stos
addr16
xchg
jle
out
fadd
sub
aaa
aad
or
hlt
out
cld
movs
ret
cmps
xchg
(bad)
not
xor
jmp
adc
ret
nop
rcr
pop
cld
in
push
test
(bad)
mov
jmp
pop
jmp
lods
jmp
sub
jae
fdiv
repnz
setge
sar
and
jl
push
inc
add
fisttp
out
jae
and
push
das
push
dec
add
dec
xchg
rcl
fst
jp
sbb
outs
jno
adc
retf
lahf
gs
adc
ja
xchg
int
sbb
add
mov
les
in
dec
je
add
dec
int
pop
pop
test
mov
add
adc
mov
sbb
xor
cli
outs
sub
jne
arpl
ins
adc
jmp
ins
xor
test
idiv
cmp
ret
lods
ja
int3
into
xlat
ror
sbb
push
repnz
popf
imul
(bad)
lea
inc
jae
mov
mov
jno
xor
loopne
and
loope
call
add
adc
pop
mov
lods
mov
std
ins
in
jae
rcl
sub
pop
or
adc
xor
loopne
pop
movs
jne
push
in
adc
stos
mov
sub
adc
shr
call
and
and
lock
(bad)
mov
lock
jb
movs
push
in
inc
fs
inc
pop
jo
inc
fld
and
outs
sub
add
sub
pop
or
xor
or
leave
and
repz
retf
mov
stos
test
rcl
pop
popa
cs
dec
mov
popf
iret
fwait
int3
sbb
pop
push
(bad)
(bad)
aas
mov
cld
mov
daa
add
je
std
inc
jg
add
push
fldcw
pop
sbb
fcomp
inc
adc
or
sub
sub
and
push
sbb
test
cmc
and
ss
dec
xor
cmp
xlat
movs
mov
shr
xchg
cmps
adc
cmp
pusha
movs
inc
lods
pop
sar
pop
lods
mov
fist
fst
jge
ror
jmp
loop
xor
int3
les
je
lahf
test
aad
pop
retf
add
push
cli
ds
mov
in
add
add
aas
in
push
sub
shr
imul
xchg
sbb
inc
popa
outs
push
dec
push
outs
xor
xor
push
sub
imul
dec
dec
or
ret
daa
jne
sbb
movs
enter
std
cmp
mov
pop
push
stc
jae
inc
stos
mov
loop
les
das
inc
ret
nop
cmc
jecxz
push
aas
push
mov
and
popf
xchg
lods
mov
push
icebp
pop
mov
dec
jb
pop
xchg
setnp
js
lods
mov
fisub
push
js
icebp
jl
out
stc
pop
push
les
sub
cld
mov
stos
jno
out
call
icebp
test
dec
add
lods
jge
test
mov
clc
and
mov
push
sbb
fcom
ds
sar
mov
cmp
xchg
or
pop
sti
push
inc
stos
sub
and
fadd
push
xchg
daa
ins
mov
sbb
cdq
daa
lods
push
push
sbb
cdq
add
sub
inc
xor
or
scas
leave
daa
sti
inc
push
stc
scas
fild
inc
mov
push
gs
je
movs
xor
xchg
and
jg
xor
mov
push
add
rcr
inc
xchg
dec
bound
mov
loopne
dec
mov
mov
sbb
cmc
mov
mov
aad
push
test
shl
clc
push
cdq
mov
ret
ret
rcl
fcom
jne
xor
ret
retf
jb
add
movs
and
(bad)
rcl
pop
inc
test
aas
pop
jg
stos
mov
shl
data16
fimul
scas
xor
std
les
xlat
cwde
mov
mov
popf
jnp
mov
out
add
retf
sub
call
dec
mov
ins
cwde
ins
push
jl
cdq
icebp
xchg
fldenv
aas
test
and
or
(bad)
and
rcl
push
sub
js
and
xchg
sbb
push
cmp
in
and
jno
shr
pop
fcmovb
fild
sbb
cmp
push
push
mov
idiv
sbb
dec
nop
push
aam
repz
adc
adc
or
scas
mov
sub
sub
mov
lea
outs
(bad)
retf
cld
or
dec
leave
inc
pop
test
pop
retf
add
into
ja
les
push
xchg
dec
std
inc
xlat
pop
call
jmp
dec
cld
xor
push
and
push
push
sub
add
aas
and
leave
loop
mov
pushf
clc
mov
dec
and
inc
imul
xor
push
pop
pop
push
sbb
dec
retf
(bad)
pop
mov
pushf
mov
cmp
ret
and
jp
or
daa
test
sbb
(bad)
icebp
dec
test
test
add
dec
mov
sbb
aad
test
dec
pop
loope
push
push
mov
inc
mov
mov
in
push
inc
or
cmp
mov
fldenv
add
fs
into
lods
dec
add
dec
mov
dec
dec
test
pop
and
fisubr
imul
inc
or
sbb
ret
jns
xor
stc
mov
mov
sbb
sti
bound
xor
test
dec
xor
push
ins
mov
xchg
gs
mov
or
inc
jns
frstor
adc
push
mov
outs
call
inc
sub
jb
sub
xor
lods
loopne
loope
jp
add
aad
dec
mov
out
cmp
test
(bad)
pusha
mov
(bad)
imul
xchg
adc
in
pop
loopne
jo
mov
pop
int
mov
jmp
cs
sahf
mov
xor
(bad)
or
ds
add
adc
(bad)
xor
mov
pop
push
sti
retf
iret
add
jmp
es
in
dec
push
xchg
cmps
xlat
xchg
fiadd
sar
inc
movs
xor
div
scas
ins
movs
fstp
pop
add
sub
mov
mov
mov
mov
xchg
push
scas
inc
mov
ficom
int3
mov
xchg
movs
mov
inc
pop
jge
lods
xchg
cmp
(bad)
loope
and
mov
mov
sar
sbb
dec
mov
mov
popf
dec
pop
dec
cmp
nop
inc
sub
jmp
jne
sti
sahf
lods
dec
sbb
pop
dec
pop
sbb
cmps
call
loopne
dec
mov
jbe
adc
and
sub
mov
jmp
pop
sub
mov
mov
movs
(bad)
push
ret
mov
bound
dec
ja
adc
rol
jecxz
jmp
inc
ins
shr
jb
xchg
push
mov
cli
or
cmp
xor
or
dec
mov
add
jae
jmp
repz
lahf
out
ja
xlat
mov
mov
inc
ins
push
lahf
aas
test
lods
pop
jle
sbb
cmp
das
pop
repz
dec
mov
not
sub
rcr
add
call
pop
aaa
dec
mov
inc
or
pop
dec
iret
mov
and
add
fwait
pop
outs
(bad)
jns
jbe
xchg
rol
mov
cs
pushf
cmp
add
fcmove
lea
sub
data16
inc
cmps
mov
jnp
mov
xchg
(bad)
mov
push
mov
shl
dec
movs
fst
or
js
xlat
fwait
add
pusha
enter
push
jmp
add
add
daa
fwait
and
adc
call
mov
cmp
je
mov
pushf
(bad)
jmp
pusha
sti
mov
fmul
je
ror
shr
cmc
nop
mov
adc
mov
mov
loope
push
fisttp
sbb
lahf
bound
idiv
out
stos
mul
cmc
xor
fwait
inc
cdq
cmp
cli
mov
enter
mov
nop
stos
fimul
(bad)
push
jmp
in
sbb
std
and
mov
pop
fidiv
mov
push
inc
sbb
ret
fwait
mov
cmp
or
data16
inc
jno
mov
lock
sub
or
popf
fsub
mov
and
jmp
jns
cmp
std
jge
push
xor
dec
fcomp
push
or
ror
adc
or
cli
shr
add
aaa
sub
ret
sub
pop
sub
fst
ins
iret
fld
jg
or
xor
push
mov
xchg
inc
xor
adc
das
icebp
pop
or
iret
lods
es
sub
or
adc
dec
xchg
xchg
test
mov
sbb
sbb
add
and
movs
outs
jg
jae
add
js
mov
push
cli
fldenv
rcr
xchg
and
and
mov
pop
cmp
pushf
stos
stc
xchg
push
pop
xor
mov
push
dec
add
mov
sub
cli
popf
and
and
and
repnz
repz
pop
mov
pop
and
les
shl
shr
cmps
jp
shl
pop
bound
xchg
fmul
je
sar
jecxz
enter
in
xchg
dec
sar
mov
and
out
pop
adc
jge
cmp
cld
jl
and
jg
test
fsubr
mov
fs
fmul
adc
dec
jge
jb
sbb
adc
retf
hlt
add
dec
xchg
es
push
fadd
je
int3
sbb
das
inc
lods
add
jp
test
popf
div
outs
pop
pushf
ja
and
ret
sar
dec
or
jge
sub
iret
cwde
push
inc
and
out
fidivr
pusha
dec
das
adc
adc
or
lds
retf
in
inc
pop
dec
rcr
es
push
push
and
shr
bound
fidiv
fisttp
retf
mov
ins
test
push
mov
adc
test
retf
mov
cmp
dec
arpl
mov
fnstenv
imul
mov
out
je
lahf
mov
in
add
sub
mov
mov
jle
adc
and
adc
sub
push
pop
jge
xchg
ja
mov
int3
xor
pop
push
clc
retf
inc
or
lea
adc
test
adc
cmp
pop
jge
dec
mov
shl
gs
jae
neg
adc
pop
xor
retf
mov
and
call
push
bnd
or
in
push
je
adc
push
xor
arpl
(bad)
mov
rcr
bound
call
ins
push
outs
es
cmp
(bad)
xor
sbb
mov
push
cli
stos
ja
sbb
lds
jmp
test
je
sar
pop
jns
into
pusha
xlat
pop
test
push
test
inc
and
xlat
xchg
xchg
shl
push
scas
lods
cmp
gs
fnstsw
stos
ins
mov
les
cmp
mov
xor
test
cmp
aaa
(bad)
out
mov
ja
inc
mov
pop
xor
loope
in
dec
outs
sub
ins
enter
ds
out
xchg
push
push
xor
test
jmp
jle
push
inc
jge
inc
mov
aaa
dec
add
sahf
lods
gs
nop
pop
neg
(bad)
rcl
outs
xor
xchg
fadd
stos
mov
test
pop
mov
push
sbb
stos
mov
(bad)
xchg
xor
sub
add
stc
popf
sbb
ss
sti
push
xchg
les
sub
add
pop
das
push
rol
or
and
div
(bad)
push
inc
push
inc
sbb
sub
and
fidivr
scas
outs
mov
lock
retf
call
dec
adc
hlt
stos
(bad)
mov
out
pop
enter
jp
mov
cs
pop
push
pop
rol
shl
pop
outs
xchg
(bad)
int
inc
sbb
shl
pop
pop
jge
arpl
jge
xchg
movs
mov
ret
hlt
popa
or
sar
fs
and
sbb
test
lods
mov
ins
pop
and
xlat
movs
in
add
adc
cld
pop
pop
push
mov
push
pop
in
push
cmp
dec
inc
push
shr
push
lods
xchg
mov
shr
mov
pop
(bad)
cli
(bad)
popf
push
mov
fdivrp
sbb
mov
mov
xchg
enter
movs
xor
sbb
mov
ret
ja
fstp
fwait
(bad)
(bad)
xor
std
cmc
jge
cmp
shr
push
inc
or
movs
push
call
in
loopne
rol
daa
iret
outs
or
adc
outs
iret
fs
fsubr
lock
and
ja
addr16
add
enter
pop
or
add
xchg
data16
mov
scas
or
adc
(bad)
push
(bad)
test
call
inc
dec
in
into
popa
arpl
outs
sbb
aam
hlt
jbe
pop
mov
and
add
xor
sbb
pop
inc
cmp
jp
jnp
(bad)
cmp
push
jns
push
push
enter
repz
push
xor
jb
popa
lahf
pop
out
jnp
pop
sub
sar
out
hlt
mov
pop
outs
int3
push
call
sub
dec
fyl2x
jbe
in
xchg
push
mov
into
loope
xor
push
mov
mov
mov
in
shl
mov
test
test
fbstp
xchg
mov
push
pushf
lods
iret
sub
mov
jo
sar
cmp
movq
outs
(bad)
(bad)
clc
icebp
out
cld
add
imul
xor
movs
lahf
push
inc
mov
call
hlt
iret
data16
xor
mov
out
adc
mov
mov
mov
movs
add
xor
mov
mov
loope
xchg
(bad)
pop
(bad)
enter
ret
outs
fild
and
scas
jge
movs
xchg
sbb
aam
cld
mov
mov
push
(bad)
int
ror
pop
das
mov
dec
mov
mov
iret
sbb
jmp
jno
pusha
es
repnz
xor
shr
jmp
or
mov
or
inc
inc
popa
sub
sbb
test
mov
stc
jg
shr
fimul
jb
jnp
(bad)
sub
stc
or
jl
stos
lds
mov
fidivr
or
mov
loopne
inc
shl
mov
push
jge
call
cmc
sti
cmp
stos
cmc
ss
cmp
pop
or
int3
pop
add
fwait
pop
sahf
ret
imul
mov
sub
hlt
(bad)
or
pop
in
mov
leave
lea
xchg
cld
and
ficomp
xor
xchg
stos
sbb
mov
jbe
outs
mov
xor
dec
mov
sti
aas
inc
and
popf
mov
mov
sub
test
inc
adc
inc
ret
repnz
mov
jb
adc
ins
retf
aaa
sbb
loop
movs
rol
movs
ret
in
xor
dec
pop
xchg
inc
sbb
dec
add
scas
push
rol
into
loop
inc
inc
sub
stos
iret
inc
aam
fisttp
mov
and
sbb
mov
outs
ins
(bad)
mov
mov
(bad)
out
mov
jo
push
movs
cdq
inc
(bad)
xchg
push
les
sti
mov
std
jbe
call
cmps
ret
popa
inc
jo
xor
mov
aas
lods
je
xchg
test
xchg
xor
dec
(bad)
cdq
aad
and
dec
addr16
dec
push
add
inc
mov
nop
sub
cmp
neg
imul
lods
mov
leave
pop
add
cwde
cmps
and
mov
pop
mov
fadd
dec
hlt
and
cld
rcl
out
add
(bad)
adc
mov
push
ror
or
iret
or
je
loop
in
iret
ja
jbe
cmps
(bad)
cmp
aad
fisubr
(bad)
int3
lds
cld
jnp
push
daa
enter
push
inc
cmp
cmp
add
pop
push
inc
jmp
cld
and
adc
fs
and
je
xor
pcmpeqb
loope
xor
jg
mov
out
imul
mov
add
aaa
and
jg
dec
cmc
inc
pop
xchg
jmp
xchg
fiadd
cmp
sbb
sub
push
or
sbb
aaa
cmp
dec
xchg
(bad)
xchg
mov
xor
mov
retf
call
data16
in
push
sahf
(bad)
pop
push
pop
jo
fisttp
sahf
psubb
pop
inc
sbb
xchg
cmp
or
jecxz
sbb
imul
push
dec
sbb
addr16
js
icebp
xor
loope
js
add
dec
and
add
cmp
outs
test
ja
mov
cmp
icebp
enter
sbb
pop
cmp
data16
push
(bad)
adc
xor
jp
pop
push
inc
popa
out
sti
neg
outs
repz
jge
repz
mov
jl
lock
inc
in
cmp
and
sub
outs
fbstp
out
(bad)
sti
jmp
jle
dec
jo
mov
and
adc
push
push
add
pop
enter
xchg
das
fnstsw
inc
cwde
(bad)
fcmovbe
inc
in
jmp
ret
pushf
paddsb
mov
or
pop
push
cs
sub
xchg
add
jmp
push
outs
iret
icebp
xchg
mov
add
fbstp
and
sbb
cmp
or
mov
dec
iret
jns
and
call
mov
pop
repz
mov
stc
fs
dec
out
test
push
fsub
xor
mov
mov
sti
mov
shl
arpl
div
js
or
mov
aas
stc
in
xchg
dec
nop
pop
xor
js
xchg
sub
call
push
jmp
cs
out
les
xor
mov
xchg
cmp
sub
push
mov
ror
fstp
imul
mov
sub
inc
icebp
pop
cmp
int
dec
mov
mov
call
clc
mov
lods
retf
cmp
ja
jmp
add
sbb
cld
mov
mov
dec
loop
test
xor
aam
pop
mov
outs
push
movs
mov
or
int
xchg
mov
add
jns
push
pop
inc
mov
popa
test
mov
rcr
sti
out
jmp
jmp
xchg
adc
scas
(bad)
popf
popf
push
bound
movs
mov
pop
push
out
shl
je
scas
mov
fimul
fisttp
dec
mov
and
hlt
xor
and
das
mov
inc
mov
dec
and
aas
shl
mov
dec
in
jnp
sub
(bad)
jmp
mov
movs
fmul
xchg
jnp
sar
add
jmp
cmps
mov
jb
inc
in
call
cld
adc
pop
lock
in
sbb
cld
or
movs
or
add
std
adc
cli
ds
dec
icebp
repz
into
pop
cmc
adc
je
enter
(bad)
push
push
adc
push
(bad)
fwait
xor
and
push
xor
dec
xor
int3
cld
add
or
inc
arpl
repnz
inc
out
in
call
in
jecxz
out
retf
wrmsr
or
mov
push
aaa
mov
xchg
jecxz
mov
sti
mov
dec
movs
mov
js
and
nop
leave
mov
retf
movs
sub
xchg
mov
cmp
xchg
cdq
xchg
dec
add
xchg
mov
and
ds
arpl
shl
pop
and
addr16
and
and
je
adc
inc
hlt
movs
xchg
sbb
push
lahf
mov
xor
cmps
mov
mov
pop
cmps
mov
repnz
in
mov
mov
test
cmp
test
idiv
cmp
xor
pop
ret
test
mov
cmp
test
xchg
movups
inc
mov
xchg
ficomp
nop
push
iret
xor
es
mov
xchg
push
push
rcl
jb
pop
jne
push
sub
sbb
dec
(bad)
adc
sar
sbb
aad
or
mov
jge
sbb
addr16
retf
popf
int3
push
dec
outs
jmp
and
or
enter
push
cmp
add
std
mov
call
cdq
std
call
lea
mov
push
test
push
inc
lods
pop
std
out
popa
stos
push
inc
pushf
mov
xchg
sti
mov
jae
mov
xchg
test
cmc
mov
sub
jne
jbe
pusha
ds
or
dec
stos
enter
jmp
push
jne
push
and
jecxz
inc
or
in
das
pop
lock
(bad)
cmc
mov
hlt
mov
push
movs
cs
push
scas
ret
push
retf
pop
sub
in
outs
add
mov
icebp
sbb
lds
mov
int3
dec
aad
ret
mov
adc
mov
cmp
in
jns
cmp
push
movs
xor
jle
(bad)
pop
cmp
in
xchg
fs
test
xchg
inc
jmp
and
inc
jg
enter
test
dec
inc
mov
mov
push
jge
aaa
test
jb
mov
inc
out
sub
and
jbe
add
call
lods
scas
xchg
sbb
inc
or
push
in
adc
pop
(bad)
lahf
popf
bound
mov
dec
push
enter
mov
adc
jecxz
xor
mov
mov
sub
sbb
mov
mov
xor
sbb
lock
pop
mov
fwait
inc
repnz
mov
sbb
sub
jno
adc
dec
loopne
add
popa
push
mov
ror
call
sbb
in
mov
inc
and
jns
pop
jae
sbb
retf
xchg
aaa
out
outs
add
dec
out
imul
es
and
dec
scas
push
cmps
lahf
fs
jmp
dec
or
or
and
cwde
pushf
mov
scas
aad
stos
adc
cmps
jmp
adc
or
pop
repnz
and
nop
rcr
rol
sti
xchg
test
sahf
pusha
aam
in
enter
(bad)
test
adc
in
lods
aam
clc
xchg
push
inc
and
and
int
mov
outs
pushf
push
outs
aad
inc
jns
das
or
and
mov
sub
and
cmc
jae
sti
sub
xor
movs
jnp
push
or
ds
stc
dec
lock
adc
lods
dec
jb
cs
dec
xchg
pop
icebp
test
xchg
dec
loop
arpl
jnp
inc
mov
cmp
push
int
pop
popa
(bad)
ins
cli
xchg
aad
dec
mov
cmp
xor
mov
aas
mov
fbstp
shl
mov
retf
sub
test
mov
es
aam
cmp
push
leave
es
aaa
cmp
fmul
mov
adc
or
sbb
icebp
jecxz
cmp
adc
leave
sub
mov
pop
xchg
cli
adc
mov
movs
jg
lock
pop
in
push
mov
(bad)
mov
ret
pop
repnz
int
push
cmp
mov
sbb
xchg
push
(bad)
pop
mov
lods
jle
ss
aas
lar
dec
imul
fiadd
movs
sbb
call
jnp
jns
or
or
rcl
and
call
enter
pop
ret
pop
or
sbb
xchg
xchg
pushf
xor
push
xchg
outs
lods
fst
or
and
adc
dec
jae
jmp
out
jae
repz
fisttp
mov
fild
rol
or
push
sub
repz
fisttp
jne
mov
add
aam
fsubr
fstp
fsub
mov
ss
int3
xor
loop
dec
jge
pop
fwait
aas
test
ss
lea
loopne
ret
fst
cdq
inc
jne
push
outs
add
xchg
add
fisub
sahf
lods
jmp
sbb
mov
popa
je
xchg
dec
outs
mov
inc
(bad)
jno
or
push
adc
sub
hlt
mov
iret
cmps
and
test
adc
jb
pop
pusha
jo
lock
mov
rol
lods
shl
in
cmp
jg
xor
(bad)
jecxz
or
mov
inc
stos
ror
lahf
mov
outs
in
scas
sub
pop
pop
test
sub
test
test
sar
aam
push
push
fiadd
mov
nop
add
sysenter
stos
add
or
call
call
aas
inc
movs
ret
jmp
and
sub
arpl
imul
iret
shl
xor
xor
fucomp
mov
int
xor
in
mov
stos
or
dec
dec
cwde
movd
cmp
or
mov
rol
test
fcom
rol
xchg
sar
popa
mov
sbb
addr16
add
jne
lds
and
or
or
scas
or
and
mov
and
sbb
sti
loopne
mov
loope
and
fcomi
mov
add
adc
xor
push
enter
pand
adc
mov
push
mov
mov
xchg
inc
bound
adc
mov
cmp
mov
(bad)
es
mov
push
ins
and
jmp
or
adc
mov
das
push
icebp
movs
cs
jo
push
lea
gs
xchg
je
gs
movs
sbb
fst
xor
in
mov
xchg
cmps
jle
test
jo
xchg
push
or
jg
in
inc
jae
pushf
push
retf
pop
sbb
inc
fs
outs
stc
xor
mov
push
xor
pop
jno
les
test
and
pop
add
cmp
xchg
ss
push
rcl
xor
aas
mov
jl
jl
shl
jle
dec
jnp
cmc
pop
das
cmps
inc
mov
push
mov
shr
xchg
push
pop
das
mov
sti
inc
push
jb
pushf
shl
sbb
mov
ja
mov
pushf
retf
jecxz
jg
fsub
ins
out
xor
push
and
std
call
mov
mov
and
push
add
aam
sbb
ror
mov
enter
jo
outs
push
ret
nop
loopne
lea
ins
scas
push
mov
mov
push
xchg
xchg
and
fsub
jb
push
add
mov
mov
add
xchg
fisub
xchg
mov
xchg
test
push
into
jae
inc
bound
jbe
pop
or
in
fs
retf
push
adc
cmp
pop
xor
pop
mov
push
jmp
jmp
cmc
cmc
(bad)
out
mov
fdiv
ror
mov
or
fistp
es
adc
out
loopne
mov
ds
dec
ja
aas
int
pop
es
mov
mov
pop
mov
and
inc
popf
xor
dec
jbe
xchg
add
int3
push
mov
cdq
jae
xlat
jg
pop
xor
es
push
icebp
jmp
cmp
repz
out
mov
(bad)
push
outs
adc
les
mov
or
push
cwde
mov
xchg
xlat
dec
xchg
out
mov
mov
mov
test
dec
dec
lahf
fwait
adc
mov
and
fwait
jae
ret
fwait
sbb
dec
(bad)
hlt
cmp
add
mov
fidivr
jmp
xlat
(bad)
and
dec
ins
adc
arpl
or
out
mov
retf
dec
dec
mov
mov
and
repz
xor
mov
add
mov
cmp
mov
or
out
iret
sbb
or
cmp
mov
out
fsub
mov
xchg
jp
in
imul
loope
and
nop
fs
paddsb
sub
add
(bad)
test
xor
jbe
dec
pop
cmp
add
sti
jp
jne
sbb
cmps
push
pop
outs
jp
loopne
inc
mov
pop
pop
outs
std
fs
das
je
addr16
xlat
lods
adc
push
cs
push
inc
adc
test
mov
mov
ret
rol
and
out
cmps
adc
mov
sbb
fcom
dec
mov
xchg
ins
dec
inc
mov
fnstsw
add
push
mov
add
fisttp
jbe
pusha
push
ret
lds
test
push
test
mov
gs
frstpm(287
sub
pop
sub
pop
xor
retf
loop
daa
movs
mov
lock
mov
mov
and
or
retf
jecxz
mov
cmps
push
dec
xor
dec
sbb
popa
clc
mov
pop
rcl
sub
push
dec
ds
dec
add
xchg
aad
pop
retf
mov
repz
stc
cwde
cmp
or
or
popa
push
ins
cmp
add
jmp
push
cwde
mov
pop
or
sub
or
dec
test
mov
xor
sbb
aam
pop
pop
aam
inc
arpl
adc
icebp
pop
pop
or
iret
or
mov
scas
int
in
cmp
test
sub
ins
enter
adc
cmp
les
adc
xchg
jmp
mov
shl
fsubr
jl
or
imul
shr
std
out
push
das
lahf
(bad)
or
pop
outs
dec
add
int
ret
push
sub
and
jo
push
dec
pop
lods
xchg
pop
test
mov
hlt
adc
xchg
adc
shl
test
movs
pop
out
movs
and
sar
inc
sub
jae
cli
sar
xchg
rcr
mov
dec
mov
out
pop
push
cdq
cmp
aas
sbb
jecxz
test
xchg
loopne
jno
cdq
out
call
hlt
cwde
push
out
(bad)
aad
scas
(bad)
push
xor
inc
dec
and
jge
into
xor
arpl
push
mov
mov
dec
popa
in
inc
out
sahf
shr
dec
in
mov
cmp
call
xor
add
or
sub
cmp
lods
pop
fs
pushf
(bad)
mov
sbb
imul
imul
jb
dec
pop
mov
mov
out
jp
shl
test
(bad)
jae
in
xchg
fldz
or
and
iret
inc
mov
adc
aaa
into
movs
mov
jmp
(bad)
fisub
xchg
pop
cld
xor
or
clc
cmp
pop
and
mov
test
jns
sahf
ja
int
xchg
cmps
stos
inc
sbb
(bad)
and
inc
inc
mov
addr16
daa
pop
adc
aas
outs
pop
jbe
or
(bad)
scas
addr16
bound
sar
pop
mov
ss
fmul
pop
sbb
mov
(bad)
cdq
fiadd
mov
or
jo
and
stos
jno
fistp
mov
mov
scas
ss
and
retf
pop
sti
and
popa
(bad)
gs
jmp
or
scas
into
das
pusha
ins
pop
xchg
jns
popf
aad
bnd
sbb
ja
cdq
test
cmp
or
pop
cmp
stc
clc
xchg
dec
pop
outs
inc
dec
xor
jno
pushf
cmp
or
dec
in
add
fimul
lahf
sbb
or
sar
add
jle
scas
scas
aaa
dec
jle
pop
mov
inc
jbe
call
xchg
or
mov
cmc
inc
leave
add
mov
xor
loope
push
cld
fdiv
fisttp
lods
mov
stc
dec
ds
in
mov
inc
dec
test
mov
stos
scas
dec
mov
push
cld
iret
jns
aad
mov
mov
fcmovnbe
mov
xor
lods
adc
mov
xchg
out
push
imul
ins
push
jb
test
test
and
icebp
mov
(bad)
sub
cmc
sbb
pop
popa
mov
or
sbb
xor
pop
fld
or
js
xchg
popf
cmc
jge
fst
stos
xor
pop
inc
xchg
cs
jmp
test
xchg
shr
outs
cld
mov
test
ins
inc
mov
arpl
repz
jb
ror
hlt
xchg
xor
sub
scas
push
ins
les
jg
leave
fisubr
lea
pop
pop
push
or
add
and
xor
xlat
push
push
lea
(bad)
mov
mov
call
scas
add
inc
mov
jne
push
cmp
daa
cmp
fbld
ins
and
xor
mov
ins
mov
xchg
cmp
test
jg
fist
xchg
add
loop
pop
xlat
jbe
xchg
pop
sub
pop
mov
loop
and
stos
setae
bound
dec
enter
data16
aas
enter
jmp
cmp
push
loope
rcl
fwait
js
jmp
fstp
cmp
aam
cmps
mov
and
sbb
aas
push
adc
jae
push
pop
out
push
out
popa
jae
in
xor
jno
mov
add
dec
fsub
cmc
sar
mov
sub
jns
mov
test
fs
and
addr16
jne
je
popa
scas
leave
push
xchg
idiv
daa
adc
adc
jbe
das
push
jg
loopne
push
sub
jns
aam
test
push
mov
stos
mov
push
and
inc
and
push
std
aad
mov
shl
mov
cmps
jae
mov
dec
push
dec
cmp
cwde
rol
loope
popf
mov
addr16
out
ficom
movs
retf
out
(bad)
push
or
in
jle
daa
xor
ficomp
or
cmc
stc
inc
mov
mov
xchg
inc
outs
scas
call
dec
inc
fiadd
mov
ds
mov
mov
cmp
or
fild
sbb
adc
push
retf
inc
cmc
fs
mov
gs
out
jge
movs
mov
jp
adc
xchg
cmp
mov
sar
mov
test
leave
call
adc
scas
nop
ja
and
std
in
bound
mov
stos
out
sub
cmp
popf
scas
or
adc
mov
sbb
jmp
out
inc
movs
mov
xor
xchg
push
bts
pop
mov
lods
test
(bad)
or
(bad)
inc
aad
imul
mov
push
icebp
repz
loope
sbb
(bad)
pop
enter
inc
pop
scas
les
scas
inc
sub
push
xor
cs
mov
pushf
call
push
int
out
mov
in
mov
nop
mov
sbb
data16
rcr
icebp
jmp
imul
sbb
and
imul
jae
fstp
push
je
inc
fnstenv
aad
dec
cmp
mov
adc
sub
sbb
fdiv
adc
dec
mov
ins
jb
inc
cmp
test
fcmovnu
ret
mov
push
shl
gs
mov
out
stc
imul
repz
jnp
lock
jecxz
aad
fidiv
test
xchg
in
cmp
jl
jmp
into
mov
cs
push
ins
xor
xor
ret
xchg
sub
sbb
or
retf
test
arpl
cs
sub
mov
lock
mov
xchg
aaa
mov
fsub
sub
imul
test
push
cmp
mov
scas
mov
xchg
xchg
jecxz
xchg
stc
adc
adc
sahf
jno
cdq
out
jle
cmp
nop
(bad)
jne
and
dec
jmp
inc
out
outs
and
daa
fwait
stos
xchg
sbb
sbb
or
loop
lods
cmps
or
fadd
sub
(bad)
xor
imul
into
push
ret
inc
dec
scas
inc
test
fs
adc
xchg
call
cli
sbb
arpl
inc
cmps
div
jmp
push
je
lods
fcmove
leave
pop
dec
jg
inc
retf
inc
cmp
cld
inc
sub
sar
push
inc
fs
int
xor
sar
sti
popa
fwait
mov
xchg
mov
inc
pop
pop
dec
pop
adc
mov
mov
je
sub
xchg
std
xchg
jge
push
enter
inc
leave
add
mov
jae
ret
lods
repnz
and
sub
cli
or
dec
inc
fadd
shl
mov
jg
cmp
and
(bad)
(bad)
xchg
test
call
sub
add
mov
(bad)
mov
cdq
ins
rol
xor
loopne
push
mov
popf
sub
mov
mov
jg
ss
fisub
jb
mov
cdq
fstp
ror
lods
cmc
fld
ds
es
mov
rol
push
js
stos
in
pop
or
call
scas
lods
adc
jl
pop
sti
push
dec
out
mov
ror
std
push
ss
les
ds
mov
cld
(bad)
ds
push
(bad)
movs
mov
inc
push
lock
out
cli
lahf
xor
ins
pop
outs
mov
ja
push
and
test
push
enter
adc
push
(bad)
ret
mov
add
or
call
push
retf
sbb
mov
inc
mov
lahf
icebp
pop
push
out
iret
adc
pop
jecxz
dec
cdq
stos
loopne
data16
ror
dec
fsub
sbb
sahf
and
fdivr
sub
mov
inc
cmp
mov
dec
dec
pop
mov
cmp
push
xchg
sbb
js
addr16
fmul
addr16
gs
jne
sahf
cmps
retf
adc
ins
xor
xchg
add
sub
pop
test
scas
pop
xor
cs
addr16
mov
neg
dec
add
add
inc
jmp
(bad)
sub
xchg
xchg
xchg
aas
and
push
jae
jb
in
ds
daa
cli
das
adc
mov
sbb
add
add
jle
sbb
cmp
xchg
jmp
add
pop
push
(bad)
and
int3
retf
mov
adc
push
out
aam
arpl
mov
outs
pop
inc
pop
cs
ret
test
in
test
or
push
shl
clc
xchg
popf
dec
mov
sbb
inc
xor
sar
xlat
imul
xor
gs
pop
jmp
mov
cmp
into
xchg
pop
outs
and
loop
dec
adc
pusha
movs
mov
pop
mov
dec
pop
jmp
mov
(bad)
ja
aaa
inc
popf
dec
push
xchg
adc
push
retf
jmp
xor
loope
jne
jl
shl
dec
std
lods
sub
ud0
sub
aaa
adc
adc
sbb
outs
adc
(bad)
push
inc
aaa
imul
aam
fidivr
mov
xchg
out
out
xor
sub
das
ins
jno
pop
mov
xchg
jmp
jb
mov
xlat
fs
mov
test
daa
ins
fadd
cdq
(bad)
ss
retf
mov
rcl
dec
cmps
sub
nop
dec
xor
mov
sub
push
pusha
or
add
sbb
aaa
test
fnstsw
jae
in
leave
inc
call
sbb
loopne
lahf
push
rcl
test
xor
xlat
dec
xor
push
sar
wrmsr
mov
pmullw
jge
add
mov
mov
(bad)
scas
call
push
and
rcr
mov
js
ror
iret
mov
xchg
(bad)
push
fisubr
mov
popa
dec
sbb
inc
ror
ins
cmp
adc
push
rol
(bad)
sub
lahf
call
nop
nop
rol
fcom
ror
jns
dec
or
add
adc
xchg
jge
je
outs
jmp
jl
sbb
add
cmp
imul
pop
pusha
and
fidivr
pop
shl
pusha
aaa
and
es
add
fdivr
in
mov
pop
cmp
fmul
fmul
push
jmp
or
std
xchg
jno
mov
frstor
pop
mov
xchg
mov
ja
cmc
fwait
mov
sub
and
mov
aas
mov
xor
mov
dec
xchg
mov
imul
xor
mov
mov
sahf
retf
addr16
(bad)
mov
jle
std
repz
call
mov
test
add
cld
adc
mov
jb
pop
sub
inc
test
inc
out
push
xor
jge
pop
push
and
lea
shl
(bad)
mov
jg
and
ror
mov
enter
fistp
shl
icebp
mov
cmp
mov
neg
stos
mov
test
inc
ja
lds
jns
cld
repnz
pop
jne
jo
and
ret
call
rcl
ficomp
test
inc
add
mul
js
fnstenv
dec
into
mov
cmp
repz
push
mov
outs
cmp
test
fsubr
jae
sbb
out
mov
mov
int
enter
icebp
dec
or
add
push
jno
das
scas
add
shl
repnz
mov
scas
and
into
xor
pop
add
sbb
movs
jmp
dec
fst
sahf
mov
xor
int
pop
mov
xchg
pop
cwde
jo
sbb
mov
push
adc
fldcw
rcl
jp
xor
movs
popf
adc
fistp
cmps
sbb
cmc
fwait
movs
mov
pop
push
pushf
imul
pop
adc
dec
jmp
mov
(bad)
scas
mov
adc
mov
sbb
outs
jmp
and
daa
add
or
imul
mov
bound
push
pushf
jo
fs
jp
xchg
mov
jae
fwait
sub
scas
mov
inc
jb
sti
push
jp
xchg
imul
and
fcom
lahf
sub
mov
or
pop
pop
sub
jge
(bad)
pop
ins
mov
dec
pop
dec
and
call
lahf
jmp
movs
sbb
ds
push
rol
(bad)
fisubr
cmp
inc
aas
nop
popf
fst
pop
xchg
xor
cwde
mov
std
pop
ret
and
cmp
adc
dec
and
mov
stos
jo
push
or
sub
mov
cmp
test
stos
rcpps
sbb
push
(bad)
pop
cmc
jge
jns
mov
out
outs
xchg
sti
popa
ss
inc
mov
fstp
jmp
fcom
je
xchg
inc
push
push
std
mov
and
call
pushf
(bad)
dec
rcl
sub
out
cs
in
xor
test
test
cld
paddusw
retf
aaa
fistp
push
push
data16
inc
ins
cdq
xchg
mov
daa
push
lea
mov
sbb
or
inc
sbb
mov
(bad)
repz
dec
adc
adc
rol
mov
ss
mov
mov
js
jnp
rcl
jno
inc
push
adc
jge
data16
push
sbb
loopne
call
jo
sahf
shr
sub
jp
popa
dec
scas
mov
mov
(bad)
leave
test
data16
mov
mov
jmp
push
scas
add
inc
inc
retf
jmp
sub
or
mov
pop
adc
(bad)
shl
xor
pop
rol
add
rcr
and
lea
push
neg
outs
inc
sahf
jb
enter
mov
aad
xor
xchg
mov
sbb
push
cli
test
mov
lods
mov
or
xchg
test
out
daa
push
adc
xchg
mov
push
mov
and
jle
pop
sbb
imul
sti
(bad)
mov
sbb
bound
adc
mov
and
in
aas
or
mov
fcomi
je
nop
pop
fbld
jmp
jnp
push
xchg
popf
repz
icebp
sub
dec
ins
pop
repnz
mov
and
aad
push
movs
push
cmp
push
adc
ss
ja
test
lds
lds
pusha
enter
inc
xor
call
aad
push
nop
out
jmp
dec
aam
ins
cmp
mov
mov
sbb
jmp
mov
(bad)
sub
cmp
push
jmp
adc
clc
test
das
fild
inc
sahf
jae
mov
cdq
fcomi
div
fstp
cmp
retf
pop
mov
fstp
sbb
mov
jge
pop
mov
stos
dec
call
retf
cmp
xlat
inc
mov
dec
adc
and
ficomp
xchg
jge
jnp
call
stc
push
xor
push
rcr
pop
dec
imul
loope
jp
arpl
rcr
sbb
jge
aad
mov
fmul
das
pop
shl
mov
dec
and
xchg
dec
cmps
enter
(bad)
xor
mov
inc
push
call
push
arpl
popf
daa
push
fist
adc
mov
xor
fild
pop
and
mov
mov
xchg
and
lods
in
xor
(bad)
es
push
popf
jb
xor
lock
gs
sbb
das
push
push
lods
not
je
push
fdivr
inc
cmc
pop
sub
and
or
pop
mov
scas
jmp
rcl
int3
jge
sub
push
push
sbb
popf
call
lods
hlt
imul
inc
jae
add
icebp
dec
sti
ror
mov
cmp
pushf
aas
cwde
adc
add
mov
aad
xor
sbb
sbb
mov
rol
ror
xchg
rcr
cli
test
xchg
jecxz
rcr
sub
(bad)
in
cmp
xor
scas
popa
jmp
xor
cmp
jmp
dec
jo
pop
das
mov
mov
daa
sbb
int3
loopne
pop
neg
pop
es
sbb
lds
sbb
cs
aam
mov
outs
test
lock
xchg
mov
test
stc
not
stos
jecxz
inc
xor
mov
in
lea
ins
push
mov
and
call
xor
inc
sub
lea
lods
gs
dec
pop
fwait
pop
mov
repz
sahf
pop
add
imul
outs
stos
cmp
mov
adc
mov
aam
push
ins
inc
sbb
cmp
push
pop
sub
pop
and
call
nop
fdivp
adc
push
call
inc
fist
sbb
in
int
dec
fisttp
add
paddusb
lea
int
cmp
std
jo
adc
or
push
jns
sub
sbb
jle
or
or
xchg
xchg
aas
sti
xor
jno
mov
xor
pushw
fwait
out
jl
sub
push
pop
sti
jge
aaa
addr16
inc
sub
add
jo
pop
mov
sar
mov
movs
(bad)
push
jecxz
outs
add
and
dec
shl
or
adc
imul
push
imul
xchg
add
adc
and
je
or
inc
mov
dec
(bad)
nop
pop
push
scas
xor
sahf
adc
jo
pop
add
inc
mov
mov
or
out
loop
add
mov
cli
fwait
cmp
fincstp
or
mov
xor
int3
push
sub
mov
mov
loop
lea
movs
retf
outs
aad
mov
mov
int3
sahf
adc
sti
shl
retf
out
sbb
loopne
pop
xor
test
test
sub
fwait
jge
cmp
sbb
add
in
mul
ss
sbb
out
pop
ror
stos
gs
cmp
dec
mov
sbb
test
stos
inc
jge
stos
fnstenv
add
dec
(bad)
bnd
add
mov
add
unpcklps
dec
imul
jg
movs
push
and
(bad)
retf
jnp
sub
fmul
lea
rcl
test
dec
cmp
ret
push
adc
stc
in
aas
cwde
xchg
xor
outs
sti
xchg
jbe
jb
ror
add
fwait
cmp
mov
ins
loope
cmp
mov
push
jb
dec
cdq
fmul
cld
xchg
mov
mov
dec
imul
pop
pop
xor
jmp
scas
ins
mov
retf
sar
sbb
sbb
add
cmp
movs
inc
adc
shl
cld
fmul
(bad)
pushf
js
sbb
adc
dec
rcr
cmp
(bad)
adc
push
push
or
mov
test
adc
xor
mov
and
mov
mov
(bad)
aaa
push
dec
push
dec
pop
cli
bnd
pushf
retf
jb
lds
icebp
stos
push
inc
enter
cs
leave
cli
jne
push
fst
ss
push
mov
pushf
lahf
cmp
sbb
shl
and
stc
div
xchg
dec
sbb
inc
mov
inc
cdq
inc
pop
popa
sbb
fisubr
mov
and
mov
shl
nop
xchg
jmp
call
mov
mov
sbb
xlat
jmp
(bad)
les
sbb
pop
jp
add
add
test
repnz
xlat
icebp
jl
push
imul
sbb
cld
sbb
dec
sbb
push
ins
sbb
sub
pushf
clc
fwait
mov
ror
add
in
into
std
inc
mov
das
ror
pop
pop
pmulhw
mov
push
and
shl
and
mov
jle
addr16
cwde
xchg
push
ror
ds
call
adc
sar
inc
or
jne
fiadd
fidiv
lods
sahf
pop
push
xor
stc
pop
je
sbb
inc
mov
push
ins
mov
mov
push
out
fcmovu
and
pop
jle
cdq
fwait
push
cmps
in
je
cmps
stos
out
pop
aam
mov
or
stos
inc
mov
pop
ins
in
stc
mov
adc
mov
xor
mov
adc
gs
arpl
add
mov
sub
shl
adc
(bad)
aam
jno
jmp
dec
push
cmp
add
scas
add
sub
retf
lods
retf
xchg
jmp
inc
mov
arpl
nop
pop
mov
in
cmps
aam
ret
xor
sub
retf
xor
int3
jl
inc
je
(bad)
xchg
jno
inc
in
fmul
pop
dec
jns
dec
sub
mov
jo
sahf
push
out
push
sbb
mov
mov
into
mov
jbe
xchg
cli
mov
sbb
push
and
fcom
enter
and
call
mov
mov
out
sub
cld
lds
ins
push
aam
jecxz
push
mov
sub
aad
pop
cmps
jle
jecxz
pop
cmp
cmp
fdivr
add
or
and
retf
cs
nop
lds
fcmovb
out
(bad)
sbb
push
jns
popf
daa
xor
nop
inc
xlat
mov
ror
js
cld
icebp
jne
lods
out
or
cmc
mov
jmp
mov
jp
and
fstp
push
repz
or
cdq
cmps
jbe
loope
call
repz
shr
mov
xchg
pop
pop
add
push
mov
retf
gs
rol
fbld
push
inc
out
imul
xchg
and
bound
add
cs
ins
push
ss
nop
sar
sub
fist
jns
pop
push
jno
ja
cmp
push
xlat
std
test
pusha
pop
arpl
out
mov
iret
push
movs
xor
add
lods
retf
mov
jns
leave
out
jl
jne
test
inc
test
fadd
add
pop
xor
adc
inc
mov
out
mov
mov
xchg
jb
push
mov
and
push
dec
sbb
js
hlt
sub
jmp
lds
cmp
or
mov
xlat
lahf
add
js
dec
cs
jae
push
mov
dec
ja
loop
mov
xlat
lds
or
cmp
out
adc
popa
fidiv
scas
cmc
cmp
mov
js
inc
addr16
and
cmp
jg
mov
gs
and
int
hlt
mov
inc
punpckhwd
lea
and
and
xchg
call
int3
sahf
fist
sbb
jbe
mov
(bad)
dec
sbb
inc
lds
mov
push
ss
repz
inc
cmp
cli
aas
inc
jge
push
enter
jns
push
neg
mov
das
loop
pop
xchg
loop
pop
cld
out
mov
or
and
shl
sbb
xchg
popa
pop
(bad)
sub
xor
lahf
pop
push
jmp
jae
push
sbb
mov
xor
leave
loop
dec
in
mov
jns
xor
bound
push
arpl
jo
sbb
mov
mov
bound
mov
fisub
push
mov
jecxz
retf
mov
xor
or
and
xchg
fiadd
fisttp
push
repnz
mov
or
in
retf
push
retf
fmul
repz
mov
aaa
jl
cwde
popf
jns
in
jns
enter
imul
fwait
in
arpl
dec
fdiv
test
jmp
(bad)
cld
sub
inc
outs
loop
ror
inc
(bad)
adc
dec
shl
mov
loop
mov
lea
pop
in
pop
push
and
enter
jnp
into
pop
dec
push
fst
outs
push
pop
xchg
push
mov
repz
scas
push
xor
pop
dec
push
in
cmp
ja
ins
mov
sub
sub
dec
cmps
(bad)
shl
mov
into
fs
ins
push
mov
mov
lds
sbb
push
add
pop
in
ss
add
and
cmp
dec
and
inc
in
cmc
fistp
(bad)
xchg
cmp
push
cwde
pop
dec
inc
and
scas
lods
mov
cwde
sub
adc
mov
lods
das
(bad)
sub
mov
sbb
lea
es
leave
jl
icebp
enter
outs
mov
pop
(bad)
inc
inc
jo
out
xchg
ins
mov
cmp
pop
sub
cld
les
ds
aas
jns
push
fld
dec
ja
sub
out
scas
rcr
adc
in
cmp
push
(bad)
jo
imul
dec
mov
mov
sub
xor
stos
(bad)
ror
(bad)
xchg
fidivr
mov
jle
movs
push
xlat
and
jno
test
mov
sub
fnstcw
push
inc
(bad)
rcr
ins
sub
push
js
adc
pop
(bad)
int
xor
sub
fbstp
mov
push
ficom
push
div
mov
(bad)
cmp
push
mov
into
mov
popf
hlt
push
jbe
and
aaa
cmp
hlt
(bad)
call
push
in
aam
add
xchg
mov
int
or
dec
in
sub
icebp
add
das
dec
xchg
iret
fist
push
sbb
cmps
lock
adc
dec
div
xchg
ins
adc
jecxz
ror
mov
push
(bad)
push
cs
jg
xor
and
sbb
scas
inc
inc
je
es
ret
mov
imul
or
xor
sbb
push
outs
test
jmp
xchg
ins
dec
test
cmps
dec
loop
cli
xchg
daa
rcl
sahf
out
push
lods
mov
ficom
loope
dec
mov
inc
mov
sub
jno
fisttp
jno
adc
sbb
test
or
push
adc
adc
pop
pusha
jae
(bad)
jl
ins
mov
pop
mov
and
mov
imul
push
outs
push
push
push
xchg
mov
test
mov
dec
retf
mov
ffreep
aas
cdq
xor
mov
rcr
aaa
jmp
or
test
jb
(bad)
jge
(bad)
mov
imul
fisubr
test
mov
(bad)
xlat
loope
ins
mov
nop
aaa
push
bound
jle
sbb
sahf
stos
lds
push
jno
push
fistp
mov
test
int3
sbb
xchg
inc
cmp
test
or
mov
push
mov
pop
add
shl
iret
mov
xor
adc
push
push
cmc
pop
(bad)
leave
push
xchg
mov
pop
out
add
lods
push
dec
sub
shr
sti
pop
mov
jne
shr
sub
xchg
mov
pop
shl
adc
lahf
xchg
movs
int
bound
xor
imul
repz
mov
adc
xchg
and
pop
xor
mov
retf
xor
cmp
ror
mov
mov
mov
call
sub
cli
mov
stos
and
xchg
fstp
pop
add
mov
movs
mov
xchg
out
jge
cs
dec
cdq
pop
jns
jns
push
aad
sub
cld
push
cmp
stos
scas
xchg
push
dec
push
aad
jb
fild
push
pop
mov
sub
or
out
ins
push
out
mov
xchg
sub
scas
ret
jg
sub
mov
or
mov
jo
jo
mov
mov
movs
stos
add
into
mov
ins
pop
xchg
mov
jb
mov
or
jp
stos
and
cmp
inc
test
fstp
cmp
stos
icebp
pop
aam
lods
cmp
js
je
jle
je
push
jmp
cmps
aas
nop
and
call
fldenv
cmp
aaa
and
fst
add
enter
jnp
lds
adc
and
or
ret
mov
push
inc
retf
mov
inc
mov
dec
sub
push
retf
mov
sub
jp
add
popa
inc
push
xchg
mov
mov
fimul
xor
cmps
mov
jmp
mov
je
push
into
jmp
inc
ret
cmp
test
inc
inc
mov
pop
int3
fdiv
jp
sbb
sar
sbb
aas
mov
dec
xchg
jne
jle
sub
jmp
call
lods
lods
mov
(bad)
adc
pop
das
sar
push
imul
xor
int3
fs
movs
(bad)
jnp
sti
inc
call
mov
jl
cmps
frstor
jp
je
pop
(bad)
cmp
ss
cmps
xor
inc
add
dec
test
cmovb
fisub
popa
pop
ins
retf
int
adc
sbb
mov
call
jb
popa
jnp
xchg
and
ins
xchg
(bad)
movs
mov
pop
stos
or
pushf
shl
fsub
xchg
sub
(bad)
fisub
fs
rcr
inc
jnp
pop
mov
mov
and
mov
mov
retf
leave
pusha
fnstcw
xchg
(bad)
scas
inc
imul
xor
xchg
lds
(bad)
adc
or
pop
xlat
test
mov
push
mov
ins
sub
xchg
jbe
test
jl
enter
inc
dec
in
jle
pop
vpunpckhqdq
mov
imul
je
add
inc
sub
jb
fild
loope
jl
int3
inc
and
test
mov
push
in
or
ret
cld
adc
jl
add
addr16
repz
movs
dec
in
enter
push
loop
(bad)
repz
clc
imul
mov
and
test
fs
inc
rcr
push
mul
mov
mov
pop
mov
outs
xchg
out
dec
out
add
pop
jnp
and
jnp
and
mov
pop
mov
out
fwait
bnd
dec
xor
mov
icebp
test
xchg
and
data16
push
dec
rol
adc
repz
mov
inc
inc
adc
sub
hlt
repnz
xor
cmps
jns
mov
adc
cmps
icebp
add
fs
mov
es
es
inc
jne
cmc
arpl
jecxz
jge
inc
(bad)
dec
mov
loop
inc
imul
jmp
adc
jne
pop
pop
pop
or
(bad)
popf
mov
adc
(bad)
fst
das
fidivr
pushf
out
mov
or
jmp
ins
mov
retf
push
pop
push
or
loopne
jmp
loope
inc
sbb
and
test
and
stc
xor
inc
in
xchg
push
not
sbb
dec
mov
std
out
dec
sbb
jnp
or
xor
jb
xchg
inc
mov
push
jmp
lahf
shl
inc
sbb
aaa
xlat
jbe
cld
xor
scas
mov
mov
or
lods
test
fsub
push
pushf
cmp
out
cwde
div
lods
xchg
xchg
leave
out
pinsrw
test
ror
dec
dec
mov
or
add
into
into
aad
in
mov
mov
int3
xchg
pop
xchg
or
or
retf
sub
popa
xor
or
bound
rcl
add
sub
mov
cmp
xchg
xchg
jo
add
or
xchg
inc
ret
pop
mov
pusha
push
dec
dec
shr
pop
cmp
cld
adc
jmp
mov
mov
push
sub
adc
add
jmp
push
jle
inc
(bad)
repnz
sub
repz
sub
mov
mov
inc
mov
jmp
out
cmp
cmp
mov
add
dec
imul
popf
cmp
pop
sbb
dec
mov
mov
ins
shl
(bad)
rcr
push
sbb
(bad)
lds
dec
xchg
sub
je
call
stc
stos
cmp
les
mov
or
jge
pop
push
xchg
aad
mov
(bad)
mov
mov
outs
fidivr
call
daa
jl
fwait
sub
or
gs
mov
jle
adc
xor
dec
loope
aas
dec
jle
mov
mov
ds
(bad)
mov
iret
test
cli
xchg
lahf
or
jnp
daa
clc
xchg
fidivr
sub
fisubr
std
outs
fidiv
pushf
ins
adc
retf
es
(bad)
retf
stos
xchg
xchg
test
leave
iret
fld
lahf
das
daa
mov
xor
mov
call
push
xor
push
pop
imul
pop
and
fsubr
jmp
jecxz
call
jne
pushf
movs
mul
jno
rol
mov
push
enter
jmp
popf
in
mov
push
mov
daa
push
inc
retf
or
sahf
xchg
push
cmp
adc
mov
outs
xchg
bound
js
sar
dec
jno
mov
arpl
retf
int3
sub
dec
icebp
or
imul
stos
les
add
sbb
or
push
dec
mov
add
cwde
sbb
mov
sbb
pop
pop
sbb
push
leave
cmps
mov
out
sbb
push
xchg
fstp
out
jbe
xor
ret
xor
je
pop
in
mov
xor
jge
cwde
repnz
sbb
push
aad
into
or
call
daa
mov
sar
(bad)
jl
outs
js
cmc
les
cmc
mov
add
inc
push
mov
cs
lods
mov
jno
add
xchg
jle
jbe
adc
addr16
dec
pop
mov
stos
loopne
jne
inc
movs
jmp
sbb
ins
inc
adc
cdq
push
or
(bad)
pop
(bad)
jmp
leave
setb
pop
stc
fidiv
adc
inc
loopne
fsubr
in
mov
inc
clc
ins
into
lahf
mov
jge
frstpm(287
addr16
mov
add
es
rcr
stos
add
sbb
movs
cmp
pop
retf
fld
lods
xor
fwait
cld
or
or
pusha
lea
fisubr
pop
xchg
push
and
(bad)
xchg
mov
lods
push
xchg
and
imul
jno
pop
xchg
pusha
addr16
int3
sbb
mov
cs
movs
jp
xchg
pop
mov
push
sbb
rol
jae
jne
push
pop
mov
jns
jae
leave
dec
shr
pop
repz
mov
xor
sub
(bad)
mov
sub
ror
and
mov
jmp
sub
sti
iret
mov
repz
pop
xchg
and
push
scas
setbe
clc
xlat
and
test
je
aas
and
ret
dec
lods
push
sti
scas
push
jg
mov
inc
xchg
cs
mov
pop
dec
sbb
or
test
mov
gs
out
pop
rcl
lock
bts
loop
dec
nop
stc
and
jb
loop
jno
add
cmp
sub
out
icebp
gs
adc
jb
lea
lods
retf
ins
xor
lea
adc
fwait
(bad)
les
jne
mov
loope
mov
ins
ins
sbb
dec
movs
test
int
jno
xor
pop
cwde
cmp
push
pushf
sub
and
das
outs
(bad)
xor
iret
fcomp
fiadd
adc
fwait
mov
scas
mov
nop
(bad)
aad
ja
(bad)
jp
es
fwait
add
aaa
or
ins
jns
mov
mov
and
or
fcmovnbe
mov
icebp
xchg
sub
das
push
add
test
enter
sub
call
mov
(bad)
sub
dec
jecxz
fcom
mov
mov
jae
into
and
int
add
js
cwde
push
call
ins
jmp
pop
push
pop
mov
(bad)
repz
jge
adc
or
xor
mov
add
and
ret
icebp
xlat
icebp
jnp
and
xor
(bad)
cmc
fidivr
imul
xor
mov
jp
(bad)
sub
pop
fs
adc
stc
pop
inc
pop
jb
mov
data16
(bad)
cmp
and
cmp
ja
push
fiadd
stos
ja
fcomp
pop
sub
into
je
jl
test
mov
fld
xlat
inc
pop
mov
les
rcr
xor
cdq
mov
cmp
ds
adc
movs
mov
call
ss
fstp
xchg
ja
jbe
xor
push
(bad)
sar
dec
mov
(bad)
cmc
fst
cld
test
sbb
retf
push
sub
cwde
stos
jge
jmp
mov
xchg
xchg
(bad)
cld
inc
mov
xor
adc
jge
inc
call
adc
push
mov
(bad)
cdq
rcr
adc
in
retf
sbb
pop
adc
lea
jo
jl
or
jns
add
adc
fwait
shl
cmp
fadd
dec
lahf
xchg
mov
jnp
fstp
mov
in
stos
mov
sub
dec
fist
mov
fsub
cmp
mov
push
outs
mov
sub
mov
adc
push
ja
mul
inc
xchg
aam
cmp
and
das
push
repnz
sbb
gs
inc
out
inc
fild
and
aaa
rcr
cmp
pop
in
jle
push
xor
and
jle
inc
mov
call
pop
push
and
popf
cmp
cs
sti
push
mov
mov
adc
popf
cmp
jecxz
fimul
outs
push
pusha
xchg
adc
or
jp
mov
xchg
js
add
repnz
test
pop
sub
not
iret
int
stos
(bad)
loopne
jecxz
sbb
push
pop
jns
ds
cmps
imul
cdq
dec
and
mov
test
mov
mov
fcom
mov
mov
and
mov
jo
xchg
outs
stos
pop
jmp
push
js
mov
daa
sbb
ds
mov
push
out
(bad)
mov
pop
cli
pop
cmp
and
cmps
les
adc
sahf
sub
movs
(bad)
das
pop
int
loopne
pusha
mov
jbe
fidiv
int3
xchg
hlt
fild
fcmovu
push
sar
stos
or
xor
xor
ds
mov
mov
jecxz
stos
jo
icebp
ret
mov
test
lds
shr
push
pop
xchg
pop
repnz
dec
cmp
and
jno
mov
rcl
adc
mov
sub
or
hlt
mov
cmp
cld
mov
std
adc
cld
outs
stos
adc
xlat
mov
adc
icebp
push
out
data16
dec
les
sbb
sub
shr
in
xor
aaa
sub
xchg
mov
or
(bad)
lock
dec
pop
ret
or
popa
sbb
dec
lds
pop
xchg
xchg
inc
fnstcw
rcl
shr
rcl
xor
enter
xor
jg
scas
jns
fs
in
inc
sub
sbb
repz
pop
mov
fcomp
fistp
std
aad
inc
daa
(bad)
jle
xchg
mov
mov
and
xchg
std
fwait
push
and
xchg
cdq
movs
jle
mov
xchg
sbb
sahf
cmp
les
add
sub
cmp
mov
mov
data16
lock
add
and
mov
shr
into
aaa
(bad)
mov
mov
ss
lods
(bad)
or
jp
mov
cmps
mov
adc
jle
jl
xor
scas
mov
push
lods
rcr
(bad)
dec
pop
aaa
or
shl
gs
pop
(bad)
add
pop
adc
mov
xor
(bad)
mul
add
inc
out
(bad)
pop
shl
add
xor
dec
nop
aad
adc
loop
scas
js
daa
xlat
call
(bad)
jb
xchg
cs
(bad)
pop
push
xchg
sbb
aad
xchg
adc
push
in
add
jb
and
clc
outs
sub
jno
aas
inc
mov
out
or
sub
(bad)
ins
pop
pop
mov
arpl
inc
add
scas
mov
dec
test
dec
jl
dec
sub
xor
inc
sti
cmc
dec
mov
iret
sub
or
aaa
pop
pop
push
mov
xchg
iret
cwde
in
ror
into
repnz
jbe
mov
mov
mov
in
adc
div
mov
sbb
mov
or
(bad)
mov
inc
ds
and
leave
xor
xchg
and
or
xchg
push
dec
cmp
fwait
loop
fcom
jns
test
mov
inc
shr
cmp
xor
mov
push
outs
in
cmp
cmps
push
sub
jmp
jo
add
or
popa
sub
out
in
inc
lahf
xchg
xor
imul
sahf
add
dec
out
sar
sub
ja
push
mov
iret
push
addr16
mov
(bad)
mov
(bad)
fist
xchg
lds
jmp
nop
ficomp
lahf
inc
test
push
repz
dec
test
jbe
mov
in
dec
jmp
je
loope
js
add
shr
dec
pop
jns
cmp
push
push
(bad)
push
xor
mov
inc
repnz
jne
inc
aam
scas
xchg
inc
call
call
dec
add
jbe
repnz
cmp
ins
(bad)
xchg
push
mov
inc
dec
cmp
in
sub
call
pmaxub
inc
push
push
push
sub
xchg
sub
jae
fld
loope
pushf
loopne
lods
jb
or
(bad)
stos
jge
add
push
jmp
or
sbb
dec
inc
outs
dec
les
add
and
mov
dec
push
fisub
(bad)
jno
push
inc
pushf
push
outs
mov
inc
mov
not
sub
es
sub
das
mov
cmp
dec
push
pop
xor
mov
add
xor
add
cld
rcr
inc
inc
sbb
in
xchg
daa
cmps
je
mov
and
jnp
enter
push
cli
jo
scas
movs
pop
stc
push
sbb
xchg
push
popa
xor
gs
jnp
mov
add
lea
xor
jp
jo
mov
sbb
jg
fst
xor
ins
dec
inc
inc
sub
(bad)
rol
int
shl
inc
aad
jecxz
mov
je
leave
(bad)
mov
sar
add
jle
mov
or
mov
mov
imul
adc
mov
aaa
jmp
icebp
sub
ja
xor
sbb
ja
xchg
cdq
into
nop
sub
push
jae
pop
dec
jmp
rcl
push
fnsave
int3
aam
int
ins
ins
sahf
stc
stos
repnz
ret
mov
pop
js
aad
pushw
mov
int3
call
in
fst
inc
cmps
rcl
mov
inc
rcl
les
jb
or
cmp
adc
repnz
adc
and
xor
cwde
dec
addr16
ss
hlt
sub
or
aam
push
mov
mov
cs
and
lahf
(bad)
stc
xor
movs
shl
inc
enter
outs
mov
lods
jno
in
fidivr
mov
popa
and
cs
in
loope
daa
cmp
push
sub
in
gs
push
xchg
stos
out
enter
mov
xor
ss
out
es
adc
xchg
lds
in
(bad)
les
ss
or
mov
xchg
adc
xchg
pusha
jbe
neg
xor
cmp
imul
ins
xchg
jle
popf
mov
nop
add
(bad)
ins
test
or
mov
ret
ret
xor
mov
sbb
or
lea
sbb
test
adc
clc
mov
jbe
icebp
out
jge
call
ret
mov
cmpxchg8b
repnz
lods
and
and
pop
adc
xor
aaa
push
(bad)
jg
and
add
arpl
mov
cld
sahf
mov
mov
ss
add
enter
pop
mov
test
bound
xlat
mov
sbb
enter
pop
dec
sub
scas
or
fidivr
mov
jb
sbb
xor
popa
adc
cmp
je
nop
shr
jbe
mov
ret
and
jno
push
xchg
outs
cs
sub
push
sub
sti
mov
cmps
neg
pop
cmps
cmps
add
or
xor
xchg
adc
or
push
out
aas
pushf
pop
ds
cmps
jno
lods
sar
sbb
or
sub
(bad)
sbb
cli
push
xor
inc
jp
pop
out
in
stos
sti
push
aas
adc
clc
push
xor
popf
xchg
cs
gs
in
or
shr
add
xor
(bad)
sbb
fiadd
int
out
jbe
pop
push
sbb
cmc
push
gs
retf
movs
and
test
mov
jb
xchg
xchg
inc
sub
(bad)
mov
mov
ret
xlat
movs
xlat
push
push
push
pop
sub
sti
pop
mov
ret
xchg
jbe
inc
mov
rol
call
popa
iret
and
inc
test
jecxz
enter
in
cwde
or
or
popf
sbb
push
or
jl
repnz
sbb
inc
call
out
push
movs
xchg
pop
and
xchg
xor
dec
retf
popa
rol
mov
movs
or
and
aam
fwait
push
movs
inc
xchg
(bad)
mov
test
jb
std
jg
jge
xchg
adc
push
data16
gs
fist
mov
cmps
into
fnsave
xor
retf
mov
rcr
jns
adc
imul
imul
mov
add
sahf
dec
pushf
adc
and
aam
cdq
mov
stos
ja
pop
sbb
adc
inc
sub
enter
cmps
inc
(bad)
out
mov
dec
mov
push
mov
(bad)
aas
cwde
push
movs
push
adc
mov
xor
mov
hlt
sbb
push
dec
loope
cwde
pusha
clc
mov
push
sbb
pop
lds
sbb
popf
jns
sbb
aaa
mov
inc
jge
inc
mov
es
sar
call
inc
test
adc
(bad)
sub
and
mov
pusha
mov
dec
lea
adc
mov
ret
xchg
adc
pop
push
mov
dec
xchg
push
cdq
das
sbb
or
gs
add
rcr
push
cmp
pop
mov
push
jl
cmp
push
mov
je
iret
or
mov
push
xchg
dec
aaa
sbb
das
mov
je
in
ins
mov
inc
xchg
sti
sahf
push
nop
out
into
xchg
xchg
(bad)
mov
add
popf
js
adc
jne
mov
sar
pop
mov
popa
movs
jp
jmp
stos
cwde
mov
daa
jmp
fs
xchg
(bad)
push
jo
ins
sbb
add
inc
fxch
and
or
ror
sub
cmp
dec
jle
sbb
sbb
sbb
stc
bound
data16
adc
mov
adc
sbb
xor
ds
aad
xchg
jnp
inc
fist
dec
mov
jmp
in
adc
pushf
stos
cs
and
pop
or
and
mov
aam
mov
sbb
sbb
xchg
loopne
sub
fs
outs
fwait
push
outs
push
mov
scas
shl
cmp
inc
aas
xlat
call
and
sbb
jbe
add
fild
jmp
lds
jbe
sub
xor
xor
leave
or
out
ja
ins
xor
ins
adc
arpl
scas
cmp
xor
(bad)
repnz
push
bound
leave
fisttp
cmp
cmp
jp
nop
imul
xchg
and
add
in
hlt
push
inc
dec
daa
jnp
and
cmps
jecxz
out
or
jle
dec
pop
mov
lock
imul
repz
aaa
mov
int3
stc
popf
or
xor
je
fs
loop
xor
and
fwait
inc
bound
inc
adc
(bad)
in
mov
jmp
add
cld
push
test
jb
das
(bad)
fidiv
pop
inc
imul
fnstcw
popf
call
and
sub
xchg
dec
test
cmps
inc
or
add
or
lds
jmp
pop
push
mov
sbb
aam
loope
loopne
jmp
mov
xchg
ins
mov
mov
lds
push
cli
stos
push
sbb
data16
sbb
gs
div
rcr
sub
retf
(bad)
fwait
jg
xchg
out
pop
xchg
lock
cmp
(bad)
in
xlat
arpl
dec
arpl
jmp
aad
jmp
xlat
test
mov
out
push
push
sbb
(bad)
shl
sti
out
dec
add
jle
rcr
xor
adc
shl
stos
xor
mov
and
pop
arpl
mov
mov
dec
rcpps
call
cmps
mov
add
rcl
aas
pop
ss
cmp
mov
imul
ror
into
hlt
(bad)
hlt
loopne
imul
push
and
fcomp
ret
push
pop
push
sahf
scas
mov
retf
and
and
ins
push
imul
mov
mov
xor
push
ss
cmp
aaa
out
gs
adc
out
cli
sbb
or
in
into
retf
(bad)
in
(bad)
pop
retf
popf
scas
cwde
scas
jnp
in
movs
xchg
cmps
mov
lds
loop
jmp
xchg
add
repnz
xor
out
fwait
rep
push
mov
jmp
ins
push
jg
dec
cmps
pop
(bad)
fmul
sbb
enter
push
sub
inc
aaa
cmp
rcr
jo
xor
xchg
cmp
sub
inc
aaa
ins
sub
xchg
cmp
sub
add
aaa
jo
rcr
jg
imul
add
aaa
fs
sbb
addr16
cmp
sub
sub
sbb
and
cmp
sub
add
sbb
mov
aaa
xor
in
sbb
les
push
sub
sbb
sbb
shr
inc
add
aaa
sbb
fcomp
and
cmp
sub
add
sbb
fld
ins
add
aaa
or
xchg
pop
sbb
shr
push
add
aaa
fs
sbb
sbb
retf
sub
mov
adc
aaa
jle
xchg
add
ss
mov
shl
(bad)
retf
fiadd
lock
fmul
ror
sub
(bad)
fldenv
cld
ror
dec
sub
inc
sub
adc
xchg
mov
and
push
cmp
sbb
or
xor
xor
xor
adc
push
stc
mov
mov
mov
cwde
fsubr
sub
ss
xor
or
in
push
fcom
jmp
lds
neg
jecxz
pop
fcom
in
in
shr
lds
jmp
sar
cmp
data16
ins
xor
inc
icebp
jae
jne
inc
movs
push
fadd
ins
cmp
inc
sti
jae
jne
inc
push
cli
pop
cli
pop
cli
jge
nop
into
mov
ret
(bad)
(bad)
out
jns
ret
xlat
int
jmp
repz
fstp
out
div
ss
jmp
repz
(bad)
out
xchg
and
sub
imul
sbb
cmp
or
out
xchg
push
ror
dec
scas
int3
inc
lods
push
fcom
add
sahf
mov
ins
pop
aad
(bad)
mov
jbe
pop
cmp
mov
mov
popf
mov
js
push
in
xor
outs
stc
adc
pop
stc
pop
adc
out
in
and
cmp
adc
push
pop
rcl
hlt
sub
ret
add
loope
mov
lods
iret
dec
push
inc
sbb
xlat
mov
add
ret
dec
ror
xchg
imul
mov
cmp
sbb
push
cmp
aad
pop
lock
fcmovb
mov
fst
outs
in
jp
jnp
jns
push
pop
test
(bad)
mov
mov
cmp
mov
pop
loop
(bad)
and
retf
dec
leave
adc
pop
popa
test
fninit
ss
movs
in
bound
mov
rcr
mov
leave
out
pusha
scas
cld
and
jns
push
sti
adc
xor
pop
push
mov
ds
cmp
dec
(bad)
in
add
dec
dec
shr
lea
data16
pmuludq
sub
xor
sub
setno
add
add
cmc
addr16
mov
mov
pop
je
xchg
mov
push
cmps
les
jo
pop
mov
les
ret
mov
xchg
pop
movs
add
xor
mov
sbb
inc
mov
stos
mov
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
add
and
add
add
clc
xchg
add
push
je
imul
add
add
adc
add
and
dec
inc
add
add
add
cld
or
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
jge
add
xor
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
dec
add
add
in
add
add
push
inc
push
push
add
push
dec
add
add
push
clts
add
add
add
test
push
add
add
adc
push
push
add
add
dec
add
add
js
push
add
add
add
add
dec
daa
add
add
dec
cmp
or
pop
dec
daa
add
add
dec
dec
add
add
dec
dec
add
add
add
add
jne
adc
test
adc
add
push
adc
add
add
add
pop
push
adc
jne
scas
adc
add
cmp
or
out
push
daa
add
add
add
push
dec
add
add
push
dec
add
add
push
dec
add
add
push
adc
add
daa
pop
dec
add
add
add
pop
adc
add
pop
pop
pusha
push
add
pusha
dec
add
add
popa
dec
add
add
popa
dec
add
add
add
fs
dec
push
add
fs
pusha
push
add
fs
push
push
add
gs
push
push
add
xor
adc
add
dec
add
add
adc
add
adc
add
adc
add
add
add
add
dec
add
add
inc
push
push
add
add
add
dec
add
add
dec
add
add
jno
push
sbb
push
ja
add
add
inc
push
push
add
add
ja
push
push
add
jns
add
add
jns
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
test
push
add
xchg
add
add
add
add
add
add
adc
add
add
aaa
add
push
add
push
add
cmp
add
sbb
add
add
add
add
push
add
sbb
or
dec
add
sub
add
add
add
add
xor
add
add
add
or
aaa
add
push
add
add
add
cmp
add
add
add
add
inc
add
push
add
add
add
inc
add
push
add
xchg
add
add
add
push
inc
sbb
sub
xchg
add
add
add
add
mov
add
dec
push
inc
sbb
sub
mov
add
adc
jg
push
inc
sbb
sub
mov
add
push
inc
sbb
sub
leave
add
add
add
push
push
inc
sbb
sub
fadd
add
adc
dec
push
push
inc
sbb
cs
add
add
add
push
push
inc
sbb
cs
add
add
add
add
add
add
inc
add
sbb
xor
or
add
add
add
add
add
add
add
pop
push
inc
sbb
xor
adc
adc
add
dec
inc
add
push
add
add
add
add
add
add
push
inc
sbb
xor
add
add
pop
push
inc
sbb
xor
add
add
dec
add
push
add
add
add
add
add
cmp
inc
add
add
add
jns
add
add
add
jns
inc
inc
add
add
add
jnp
inc
sbb
ds
add
jge
add
add
add
add
jnp
add
add
aad
add
jns
add
add
fiadd
add
jg
add
add
loop
add
add
sbb
pop
add
add
add
sbb
push
add
add
add
repz
add
add
jg
inc
sbb
outs
add
add
xchg
add
jnp
adc
adc
add
rol
jnp
adc
adc
add
fadd
jnp
adc
adc
add
mov
add
adc
adc
add
xor
add
jnp
adc
adc
add
stos
adc
adc
adc
add
bound
inc
push
add
adc
adc
fld
adc
adc
push
add
add
add
adc
pusha
pop
rol
add
pop
lds
add
out
lods
add
add
lods
add
add
sbb
add
add
pop
rol
add
add
and
add
add
add
and
add
add
rol
add
and
add
add
or
and
repz
add
add
rol
add
and
add
add
sbb
and
jecxz
pop
add
add
sbb
add
(bad)
push
lods
add
add
es
add
add
add
add
adc
and
loop
adc
add
pop
rol
add
rol
add
pop
add
add
das
lods
add
add
add
add
xor
add
add
add
add
xor
aaa
rol
add
add
cmp
cmp
add
add
cmp
add
add
add
lods
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
arpl
xor
mov
addr16
xor
push
inc
push
adc
push
inc
add
push
add
dec
pop
push
add
dec
pop
push
add
inc
dec
pop
push
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
mov
add
add
inc
lds
add
xchg
inc
lds
add
xchg
inc
sbb
add
cdq
inc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
xchg
inc
lods
add
add
add
add
inc
lds
add
mov
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
dec
inc
lds
add
mov
add
add
add
lds
add
rol
add
mov
add
add
add
add
add
add
dec
add
dec
add
dec
add
addr16
adc
push
inc
addr16
adc
push
inc
push
inc
push
inc
ins
or
ins
or
jb
adc
xchg
inc
jb
adc
mov
or
ja
adc
xchg
inc
jl
adc
push
inc
jl
adc
mov
and
add
add
sbb
add
add
add
xchg
add
and
add
aam
add
or
xchg
add
add
add
dec
add
or
adc
dec
add
add
fs
or
adc
fld
push
add
add
add
add
add
push
add
add
adc
icebp
add
add
add
add
add
jb
add
enter
or
adc
jmp
add
add
or
adc
ja
xchg
add
cld
add
or
adc
repz
mov
add
adc
add
or
adc
outs
pop
xchg
add
add
add
or
adc
jmp
sahf
add
add
add
add
add
movs
add
add
add
add
add
or
daa
add
or
adc
pop
or
daa
add
or
adc
fisttp
lods
add
add
adc
push
or
daa
add
or
adc
ror
mov
add
aam
add
or
adc
dec
or
daa
add
or
adc
retf
or
sub
add
add
add
mov
add
sbb
add
or
adc
ret
or
add
add
add
or
adc
aas
or
dec
sub
add
add
add
add
add
add
add
add
add
or
xchg
add
push
and
add
sub
add
or
xchg
add
add
add
add
add
xchg
add
add
xchg
add
adc
add
add
add
add
add
inc
add
or
xchg
add
adc
add
add
inc
add
or
xchg
add
and
add
in
add
or
xchg
add
mov
add
clc
inc
add
or
xchg
add
mov
add
or
add
or
xchg
add
sub
add
or
xchg
add
adc
add
dec
inc
add
or
xchg
add
adc
add
push
add
add
add
xchg
add
adc
add
test
add
or
xchg
add
adc
add
enter
or
xchg
add
add
add
inc
add
or
xchg
add
jo
add
add
add
add
add
add
add
or
xchg
add
adc
inc
add
or
xchg
add
adc
inc
add
or
xchg
add
js
add
push
add
add
add
xchg
add
mov
add
mov
add
add
add
inc
add
or
xchg
add
push
add
call
add
add
add
add
or
xchg
add
add
inc
add
or
add
adc
dec
inc
add
or
add
push
mov
inc
add
or
xchg
add
add
add
add
add
inc
add
or
xchg
add
push
mov
add
loopne
add
or
sbb
add
add
add
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
xchg
add
sbb
add
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
add
sbb
add
add
push
add
or
add
sbb
add
add
add
or
add
sbb
jo
add
or
add
sbb
sbb
or
sbb
add
push
add
or
xchg
add
mov
add
push
push
add
or
xchg
add
mov
add
fs
add
or
xchg
add
mov
add
js
add
or
xchg
add
xchg
push
add
or
sbb
add
push
add
or
add
daa
and
add
or
add
add
add
add
pop
add
or
add
sub
add
add
add
or
add
sub
add
add
add
add
add
add
add
or
add
sub
add
add
add
or
xchg
add
add
outs
add
or
xchg
add
inc
add
add
add
or
xchg
add
sub
outs
add
or
xchg
add
mov
add
inc
outs
add
or
xchg
add
ins
add
add
add
add
add
add
xchg
add
test
add
or
xchg
add
add
outs
add
or
xchg
add
add
outs
add
or
xchg
add
sub
add
add
add
or
xchg
add
sub
jo
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
xchg
add
sub
add
add
jo
add
add
add
add
jo
add
add
add
add
add
or
xchg
add
mov
add
inc
jno
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
xchg
add
sub
add
add
jno
add
add
add
add
add
or
add
xor
jne
add
add
add
add
jbe
add
add
add
add
ja
add
add
add
add
ja
add
add
add
add
js
add
add
add
add
add
or
add
xor
add
add
jp
add
add
add
add
add
or
add
xor
push
add
add
add
add
ss
add
les
or
sbb
add
jl
add
add
add
add
jl
add
add
add
add
jge
add
add
add
add
add
aaa
mov
add
dec
jge
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
xchg
add
cmp
add
add
cmp
add
add
add
or
add
cmp
dec
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
or
add
aas
or
add
sub
add
aas
or
mov
add
add
add
add
add
or
xchg
add
mov
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
add
inc
mov
add
mov
add
inc
mov
add
mov
add
add
add
lea
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
add
add
aaa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
jg
add
xchg
xchg
add
or
adc
sahf
inc
xchg
add
lods
xchg
add
or
xchg
add
inc
inc
add
add
xchg
add
or
xchg
add
inc
xchg
add
add
xchg
add
or
xchg
add
mov
add
cld
xchg
add
or
xchg
add
mov
add
adc
add
test
add
sub
add
or
xchg
add
add
add
or
xchg
add
xchg
add
or
adc
mov
add
xchg
add
or
adc
push
inc
mov
add
int3
xchg
add
or
adc
rol
add
xchg
cdq
add
or
adc
lds
add
add
adc
inc
dec
fiadd
add
les
adc
mov
add
cdq
add
or
xchg
add
inc
add
add
cdq
add
or
xchg
add
add
add
call
jo
mov
add
sub
add
or
xchg
add
inc
call
sahf
dec
inc
add
add
add
or
xchg
add
dec
inc
add
add
add
add
add
add
add
add
add
adc
push
inc
adc
add
add
or
adc
fisttp
add
add
add
or
adc
pop
dec
es
add
add
or
xchg
add
dec
inc
add
add
add
or
xchg
add
dec
xor
add
jo
add
or
xchg
add
dec
mov
add
test
xchg
add
mov
add
cwde
sahf
add
or
xchg
add
push
add
mov
add
add
add
sahf
add
or
adc
mov
push
add
add
adc
xchg
inc
ins
add
add
mov
adc
mov
add
mov
adc
ret
dec
mov
add
movs
add
or
adc
aas
dec
xchg
add
add
add
or
adc
mov
add
add
add
add
dec
call
add
add
add
add
add
or
xchg
add
dec
test
add
xchg
movs
add
or
xchg
add
dec
stos
add
add
add
add
add
movs
add
or
xchg
add
dec
mov
add
loopne
add
or
xchg
add
add
movs
add
or
xchg
add
add
add
or
xchg
add
movs
add
or
adc
mov
ret
add
test
add
add
add
fld
add
stos
add
or
adc
xchg
inc
icebp
add
add
add
or
adc
rol
add
mov
add
add
add
mov
add
add
add
inc
mov
add
add
add
dec
pop
add
add
or
adc
xchg
dec
es
add
or
adc
push
push
sub
add
or
adc
test
add
add
or
xchg
add
push
inc
add
add
xchg
add
add
add
mov
add
add
add
add
mov
add
add
add
add
or
xchg
add
add
add
or
xchg
add
push
jo
add
xor
add
or
xchg
add
push
push
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
add
add
add
adc
push
inc
je
add
fdiv
adc
cdq
inc
mov
add
or
adc
dec
inc
xchg
add
add
or
adc
rol
add
aam
add
or
adc
adc
add
in
mov
adc
call
add
add
or
adc
jnp
mov
add
sbb
add
or
adc
not
add
add
add
or
adc
jae
mov
mov
xchg
add
push
inc
add
add
add
or
xchg
add
jl
add
or
xchg
add
push
mov
add
nop
mov
xchg
add
lods
mov
xchg
add
jo
add
les
add
add
mov
xchg
add
add
mov
xchg
add
push
aad
add
sbb
add
or
xchg
add
mov
xchg
sbb
add
add
add
add
add
add
push
dec
add
add
xchg
add
inc
add
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
mov
add
dec
loop
add
int3
mov
les
rol
add
test
add
or
adc
mov
push
add
je
add
or
adc
push
inc
sbb
les
add
add
add
push
mov
add
les
add
add
add
sub
add
jl
add
or
adc
hlt
push
das
push
add
xchg
les
add
add
add
xor
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
lds
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
inc
push
add
push
add
add
add
sbb
add
lds
add
add
add
add
xchg
add
add
add
or
adc
mov
add
enter
add
add
pop
pop
push
add
cmp
add
or
adc
dec
pop
and
add
push
enter
add
add
add
add
or
xchg
add
pop
mov
add
jl
add
or
xchg
add
pop
inc
add
add
add
add
add
enter
add
add
add
add
add
inc
xchg
push
add
movs
int3
add
or
adc
push
inc
stos
push
add
nop
into
add
or
adc
xor
mov
add
test
add
or
adc
rcr
add
ror
add
add
add
add
into
add
or
adc
mov
add
into
add
or
adc
xor
add
iret
add
or
xchg
add
add
add
or
xchg
add
pop
xchg
add
inc
iret
add
or
xchg
add
pop
mov
add
pop
iret
add
or
xchg
add
pop
mov
add
ins
iret
add
or
xchg
add
pop
xchg
add
mov
add
or
xchg
add
mov
add
test
add
or
xchg
add
mov
add
(bad)
iret
add
or
xchg
add
iret
add
or
adc
mov
push
add
mov
add
add
add
aam
add
add
add
out
push
add
call
add
add
pop
clc
push
add
add
add
or
xchg
add
add
xchg
add
add
aad
add
add
add
add
add
add
push
add
fs
add
add
push
add
test
add
or
xchg
or
add
fadd
add
add
add
add
fadd
add
add
add
add
add
or
adc
das
pusha
mov
fld
add
add
pop
add
pop
fld
add
add
pop
add
js
add
or
xchg
add
pusha
mov
add
mov
add
or
xchg
add
pusha
mov
add
mov
add
add
add
xchg
add
popa
xchg
add
(bad)
add
or
xchg
xchg
inc
jne
add
(bad)
fld
add
add
add
add
or
adc
ss
mov
add
push
loope
add
add
add
add
add
or
adc
bound
loope
add
add
add
add
add
add
xchg
pop
add
mov
add
or
adc
test
mov
loope
add
add
pop
add
in
loope
add
add
add
add
loop
add
add
add
add
add
or
xchg
add
inc
add
add
add
or
xchg
add
add
add
add
or
xchg
add
add
add
or
nop
add
add
nop
add
and
add
loopne
add
or
nop
add
add
out
add
add
add
add
or
nop
add
add
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
push
add
or
nop
add
add
add
or
nop
add
inc
adc
add
hlt
adc
add
add
or
add
add
or
nop
add
add
pop
add
or
nop
add
dec
or
add
add
add
or
add
nop
add
loopne
add
aam
add
or
nop
add
inc
jne
add
xchg
sbb
add
add
add
add
sbb
add
add
or
add
sbb
nop
add
add
push
add
or
nop
add
loopne
add
test
add
or
nop
add
fmul
add
cmp
add
or
nop
add
test
add
xor
nop
add
add
cmp
add
add
or
add
add
or
nop
add
inc
sub
add
add
add
add
and
xor
add
mov
add
add
or
add
add
add
or
add
dec
add
or
nop
add
add
dec
add
or
nop
add
inc
pop
or
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
add
or
nop
add
test
add
or
nop
add
add
add
add
dec
leave
or
add
imul
or
adc
mov
add
outs
add
or
adc
cmps
gs
jb
add
add
add
add
add
or
adc
mov
or
add
in
jne
add
add
add
xor
or
adc
ret
gs
or
add
jns
add
add
add
add
jl
add
add
add
gs
jl
add
add
add
cmp
add
add
add
or
adc
fsub
or
add
adc
pop
addr16
or
add
jge
add
add
add
addr16
or
add
add
or
adc
pop
push
ins
jge
add
add
add
push
test
add
add
add
pusha
or
add
adc
shr
or
add
add
add
jno
add
sar
add
add
add
push
or
add
jge
add
add
add
inc
add
add
jle
add
add
add
imul
add
jle
add
add
add
ins
sub
add
xor
add
add
add
ins
or
add
add
or
adc
inc
ins
xor
add
or
adc
into
ins
xchg
or
add
add
add
add
mov
jle
add
add
add
outs
mov
add
mov
add
or
adc
pop
outs
mov
jle
add
add
add
outs
es
add
or
adc
data16
or
add
jle
add
add
add
jo
add
add
jg
add
add
add
leave
or
add
add
or
adc
jmp
jg
add
add
add
mov
add
pop
jg
add
add
add
jb
or
add
add
add
add
mov
add
mov
add
add
add
jae
or
add
adc
push
je
or
add
adc
shl
add
fdivr
add
add
add
jmp
jg
add
add
add
jne
or
add
add
or
xchg
add
mov
add
sbb
add
or
xchg
add
mov
add
xor
xchg
add
clc
or
add
add
or
xchg
add
dec
add
je
add
or
xchg
add
add
add
pop
add
mov
add
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
ja
add
add
add
or
xchg
add
ja
or
add
add
add
push
add
test
xchg
add
test
add
mov
add
add
add
add
add
add
add
add
ja
add
add
add
add
ja
add
add
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
add
add
or
xchg
add
or
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
or
add
add
add
or
add
xchg
add
test
add
test
add
or
xchg
add
test
add
les
xchg
add
push
add
add
add
or
xchg
add
add
test
add
add
add
add
add
or
xchg
add
test
add
add
add
add
test
add
add
add
add
add
or
adc
mov
add
mov
add
add
add
jns
or
add
mov
add
add
add
push
add
add
mov
add
add
add
jp
or
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
xchg
add
mov
add
nop
mov
add
add
add
add
xchg
add
add
mov
add
add
add
add
mov
add
add
add
jge
add
lea
add
add
add
add
mov
add
add
add
jl
or
add
add
or
adc
test
add
sbb
add
or
xchg
add
jge
or
add
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
imul
xchg
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
or
xchg
add
jle
add
add
add
add
add
adc
rol
add
mov
add
add
add
adc
mov
mov
xchg
add
or
xchg
add
add
xchg
add
or
xchg
add
push
add
add
xchg
add
or
xchg
add
mov
add
sub
add
or
xchg
add
mov
add
inc
xchg
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
or
xchg
add
jg
add
add
xchg
add
or
xchg
sbb
add
add
add
call
ds
add
add
call
in
mov
add
or
add
or
xchg
add
jg
add
add
fwait
add
or
xchg
add
inc
add
add
add
or
xchg
add
fwait
add
or
xchg
sbb
add
add
add
pushf
add
or
adc
and
in
pushf
add
or
xchg
add
or
xchg
add
add
xchg
add
xor
add
or
xchg
add
cmp
add
push
popf
add
or
xchg
sbb
add
add
add
add
add
or
add
mov
xchg
add
mov
add
in
add
or
xchg
add
add
mov
xchg
add
add
movs
add
or
xchg
ds
add
add
movs
add
or
adc
dec
inc
cmc
or
add
movs
add
or
adc
xchg
inc
add
add
or
adc
mov
add
adc
push
inc
xor
add
or
adc
fld
mov
add
add
inc
or
add
or
adc
rol
shr
adc
dec
sbb
add
call
add
add
or
add
lods
add
or
xchg
add
add
add
add
or
xchg
add
mov
add
cmp
add
mov
add
dec
lods
add
or
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
lods
add
or
xchg
add
test
add
in
add
or
adc
cdq
inc
or
adc
dec
inc
xchg
add
or
adc
aam
xchg
or
add
or
adc
push
test
mov
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
xchg
mov
add
add
add
add
add
or
xchg
add
xchg
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
ds
add
ds
add
bound
push
add
imul
add
add
sbb
add
adc
lea
push
add
add
add
add
ficom
jb
popa
add
adc
add
adc
pop
add
add
add
add
lods
add
add
rcl
add
add
add
adc
add
add
add
add
add
add
sub
cdq
add
add
inc
lea
rol
inc
cwde
add
add
add
in
add
add
add
add
cs
add
cmp
add
dec
mov
dec
movs
add
add
jge
and
js
sbb
cmp
es
aas
add
fiadd
sub
es
add
add
scas
add
enter
mov
add
add
push
pop
add
add
add
pop
mov
popa
add
push
mov
sub
out
ds
sbb
jge
dec
push
jno
add
pop
pop
push
dec
add
pop
and
add
sub
into
pop
mov
pop
enter
xor
add
xchg
mov
mov
add
pop
clc
push
sub
add
popa
dec
pop
leave
add
add
bound
add
aas
add
cmp
sub
in
fs
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
rol
iret
jbe
add
add
ja
add
pop
ja
or
ja
inc
or
add
add
ficom
push
or
stc
ja
or
adc
pusha
or
add
add
ja
dec
add
inc
add
add
add
js
add
adc
add
and
add
jns
or
add
xor
jns
add
stos
jns
add
add
or
add
jge
or
add
lds
add
lds
add
push
or
push
or
cmp
cmp
pop
or
and
mov
or
int3
or
(bad)
or
aas
add
ror
je
loopne
sti
add
add
sti
add
and
sti
add
adc
inc
add
add
adc
add
and
sti
add
inc
push
sti
add
pusha
pop
sti
add
adc
add
mov
add
sti
add
pusha
sbb
add
sbb
add
mov
add
sbb
add
loopne
sti
add
add
add
and
add
inc
sbb
add
pusha
sbb
add
pusha
pop
sti
add
sbb
add
pusha
and
add
and
add
pusha
and
add
and
add
mov
add
sti
add
and
inc
add
sub
add
sti
add
and
sti
add
inc
cs
add
pusha
cs
add
sub
add
inc
aaa
sti
add
pusha
aaa
sti
add
xor
add
sar
add
loopne
sti
add
sar
add
cmp
add
mov
add
ds
add
loopne
sti
add
mov
add
inc
sti
add
loopne
sti
add
add
add
add
add
add
add
add
add
add
add
add
repnz
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
sub
add
dec
add
add
add
add
add
add
add
add
aas
add
rol
add
add
in
add
add
add
add
rol
sub
inc
add
mov
add
add
add
add
add
add
add
add
jmp
push
test
sahf
push
fadd
push
pop
push
pop
jp
sahf
pop
fadd
jmp
outs
or
clc
or
or
or
cmp
arpl
mov
scas
or
or
or
or
aam
in
or
or
add
rol
add
sub
add
adc
hlt
add
data16
add
add
pop
or
add
add
add
inc
add
add
add
add
add
add
add
pop
pop
add
add
mov
pop
add
mov
add
pop
pop
add
rcr
add
loopne
pop
add
push
pop
pop
add
enter
je
inc
pusha
pop
add
mov
add
pusha
pop
add
shl
add
sbb
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
sub
sub
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
fild
das
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
gs
xchg
add
add
in
add
add
ja
loope
add
add
jns
loope
add
add
jnp
loope
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
jecxz
loope
add
add
jecxz
in
add
add
in
loope
add
add
out
loope
add
add
jmp
add
add
loope
add
add
jns
loope
add
add
lea
loope
add
add
pop
loope
add
add
lods
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
xor
add
fld
ret
pop
xchg
add
in
add
add
pusha
pop
or
popw
call
add
add
pop
jmp
add
add
or
int3
pop
js
int3
pop
add
add
js
xor
or
add
or
add
or
mov
add
sub
jle
inc
add
or
jle
out
int3
pop
mov
int3
pop
clc
add
sbb
outs
or
or
add
add
add
or
pop
add
add
or
adc
add
imul
push
add
(bad)
jns
adc
popa
add
add
add
add
add
add
add
add
add
add
add
lea
sbb
add
add
add
add
add
add
xor
and
add
add
add
add
add
sub
mov
add
add
das
add
add
add
add
add
add
rol
xor
add
aaa
add
push
jbe
fs
gs
add
outs
jbe
fs
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
jb
ja
outs
add
jae
gs
add
jae
gs
cs
outs
jb
add
jae
outs
popa
add
jb
gs
xor
add
sub
sub
jne
arpl
add
xor
xor
sub
sub
sub
sub
gs
xor
cmp
jge
xor
arpl
xor
xor
cs
gs
jne
arpl
cs
jae
jne
arpl
add
gs
sub
mov
sub
mov
sub
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
mov
or
scas
loop
stos
loop
(bad)
loop
mov
or
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
add
sub
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
or
lods
loop
mov
or
loop
stos
loop
mov
sub
loop
mov
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
add
je
add
arpl
outs
jb
push
jns
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
gs
add
jae
gs
cs
push
imul
imul
arpl
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
arpl
add
jbe
jb
outs
ins
outs
je
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
or
stos
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
mov
sub
scas
add
sub
mov
sub
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
add
or
loop
lods
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
jb
jns
push
jne
je
ins
gs
imul
fs
gs
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
outs
je
ins
gs
jns
gs
popa
outs
fs
gs
sub
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
add
je
gs
outs
fs
or
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
add
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
sub
outs
fs
popa
jae
add
jne
ins
jae
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
or
scas
add
sub
mov
or
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
mov
sub
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
lods
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
or
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
add
or
lods
loop
mov
or
stos
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
sub
mov
sub
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
sub
lods
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
mov
or
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
sub
mov
or
lods
loop
lods
loop
mov
sub
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
add
sub
stos
loop
scas
loop
lods
loop
mov
sub
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
or
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
stos
loop
stos
loop
mov
sub
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
or
add
sub
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
or
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
sub
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
add
outs
je
xor
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
add
data16
inc
ins
outs
arpl
outs
jo
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
loop
lods
loop
(bad)
loop
mov
sub
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
or
stos
loop
mov
or
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
scas
add
sub
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
add
sub
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
add
push
ins
inc
dec
outs
aaa
imul
gs
outs
push
push
outs
add
push
push
je
pop
inc
arpl
inc
dec
fs
push
jno
add
xor
inc
pop
ss
cmp
jb
push
add
xor
push
dec
inc
push
imul
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
imul
jno
jbe
dec
gs
imul
jno
push
dec
aaa
outs
push
addr16
inc
pop
outs
dec
je
xor
inc
outs
outs
arpl
add
jne
gs
push
je
popa
cmp
inc
xor
jbe
imul
xor
push
push
arpl
jb
gs
jbe
dec
jo
add
imul
imul
dec
fs
inc
pop
xor
dec
xor
dec
dec
add
je
dec
jae
popa
arpl
jb
jne
add
xor
jno
imul
jns
xor
imul
je
dec
inc
imul
ja
pop
push
arpl
aaa
xor
push
add
je
inc
jne
jb
outs
je
push
add
pop
arpl
jbe
js
xor
xor
push
add
gs
dec
outs
dec
push
push
cmp
jns
xor
dec
ins
inc
add
jne
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
popa
js
dec
xor
xor
addr16
push
push
add
dec
outs
addr16
je
push
dec
ins
xor
jno
addr16
dec
cmp
add
je
dec
jae
ins
imul
imul
jo
pop
xor
xor
add
jb
popa
ins
add
je
dec
outs
addr16
add
push
popa
xor
xor
pop
ss
pop
add
popa
fs
jns
add
jno
dec
xor
inc
push
dec
outs
inc
pop
inc
push
cmp
push
gs
add
xor
dec
js
outs
inc
pop
inc
push
push
ss
jns
dec
fs
xor
jae
dec
pop
aaa
dec
inc
inc
push
add
ins
pop
dec
dec
aaa
dec
push
push
dec
outs
ins
push
dec
dec
jb
add
outs
fs
je
cmp
inc
push
cmp
xor
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
or
mov
or
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
add
ins
jne
push
jns
gs
sub
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
(bad)
loop
mov
sub
add
sub
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
add
or
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
mov
or
stos
loop
stos
loop
stos
loop
mov
or
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
add
jbe
xor
xor
gs
push
push
cmp
add
dec
fs
inc
cmp
je
cmp
push
push
ja
outs
push
xor
pop
dec
inc
inc
xor
ja
add
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
or
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
add
or
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
scas
loop
scas
add
or
loop
stos
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
mov
or
mov
or
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
sub
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
or
loop
(bad)
loop
mov
sub
(bad)
loop
mov
or
stos
loop
(bad)
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
(bad)
loop
mov
or
mov
sub
dec
arpl
dec
xor
arpl
add
cmp
jno
pop
dec
dec
outs
je
dec
inc
cmp
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
or
lods
loop
mov
or
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
add
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
mov
sub
stos
loop
scas
add
sub
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
mov
sub
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
(bad)
loop
mov
or
mov
sub
scas
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
mov
sub
loop
lods
loop
scas
add
je
dec
push
jb
push
ins
popa
push
push
xor
jae
push
push
inc
push
push
arpl
add
imul
push
dec
inc
outs
inc
dec
xor
jo
add
dec
popa
inc
bound
xor
bound
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
mov
sub
sub
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
sub
mov
sub
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
stos
loop
scas
add
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
stos
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
add
or
stos
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
or
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
mov
sub
scas
add
sub
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
add
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
add
sub
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
mov
or
lods
loop
mov
sub
loop
lods
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
add
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
or
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
mov
or
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
scas
add
or
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
scas
add
sub
scas
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
or
loop
mov
sub
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
or
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
add
or
loop
lods
loop
mov
or
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
scas
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
mov
or
mov
or
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
mov
sub
lods
loop
scas
add
sub
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
scas
add
inc
dec
js
ins
xor
imul
push
xor
ins
cmp
push
dec
push
cmp
dec
js
jb
jb
jbe
push
xor
dec
jb
ins
outs
inc
inc
jae
xor
push
dec
pop
pop
popa
push
pop
bound
jb
inc
inc
add
je
add
js
imul
jno
push
ins
jae
inc
dec
push
arpl
add
dec
dec
inc
dec
fs
dec
fs
aaa
dec
xor
dec
pop
inc
ins
addr16
jne
dec
dec
inc
jno
xor
data16
xor
xor
pop
push
inc
xor
inc
push
pop
add
pop
jb
push
xor
dec
imul
jns
push
arpl
je
ins
inc
inc
bound
je
dec
outs
xor
pop
push
cmp
push
push
jns
dec
arpl
push
inc
push
push
add
ins
dec
dec
data16
push
dec
inc
outs
push
outs
inc
fs
push
jbe
push
jno
imul
push
jo
aaa
add
dec
cmp
xor
dec
push
push
add
inc
cmp
cmp
aaa
pop
ss
aaa
jne
add
dec
push
xor
imul
bound
ja
push
jb
dec
dec
push
jns
dec
jbe
push
ss
push
jbe
cmp
ja
imul
pop
bound
arpl
jae
xor
popa
xor
outs
push
bound
xor
push
add
imul
dec
push
pop
xor
pop
add
cmp
cmp
imul
xor
inc
inc
gs
add
push
pop
xor
dec
ins
pop
inc
dec
push
aaa
outs
inc
data16
outs
xor
push
push
xor
jno
jne
ins
add
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
sub
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
mov
or
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
mov
sub
mov
sub
or
mov
sub
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
or
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
mov
or
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
or
(bad)
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
or
loop
scas
add
sub
stos
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
mov
or
stos
loop
lods
loop
scas
add
dec
imul
outs
dec
dec
js
addr16
inc
push
arpl
xor
inc
dec
push
dec
inc
push
bound
add
je
inc
xor
imul
arpl
imul
sub
scas
loop
lods
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
mov
or
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
mov
sub
scas
add
or
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
or
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
or
lods
loop
mov
or
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
mov
sub
scas
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
add
or
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
mov
or
loop
mov
or
mov
sub
or
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
scas
add
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
lods
loop
mov
or
lods
loop
stos
loop
scas
add
or
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
mov
or
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
sub
loop
scas
add
cmp
push
ins
dec
push
cmp
xor
jo
push
jae
push
jp
push
jb
ss
push
fs
add
cmp
inc
inc
dec
inc
push
push
cmp
add
sub
scas
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
add
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
stos
loop
mov
sub
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
mov
or
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
add
aaa
inc
dec
xor
push
xor
dec
popa
fs
outs
add
addr16
xor
push
push
dec
ins
push
jb
dec
push
arpl
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
or
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
mov
sub
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
sub
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
sub
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
scas
add
sub
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
add
or
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
or
scas
add
sub
scas
loop
(bad)
loop
mov
sub
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
sub
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
pop
push
inc
inc
outs
inc
imul
dec
xor
push
dec
pop
push
ins
inc
pop
gs
fs
dec
ins
inc
cmp
ins
add
dec
push
ins
xor
push
push
je
outs
aaa
xor
pop
dec
add
imul
pop
jns
outs
push
dec
dec
push
jns
dec
push
dec
addr16
fs
inc
inc
ss
push
pop
push
dec
ins
outs
push
mov
sub
lods
loop
lods
loop
mov
or
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
scas
add
sub
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
scas
add
or
mov
or
lods
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
mov
or
loop
scas
loop
mov
sub
sub
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
mov
or
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
or
sub
lods
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
or
mov
sub
loop
scas
add
or
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
inc
inc
jb
pop
dec
dec
xor
ins
jae
add
ins
xor
xor
cmp
pop
inc
je
ins
arpl
add
sub
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
lods
loop
(bad)
loop
mov
sub
sub
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
ins
bound
popa
ins
gs
and
sub
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
or
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
scas
add
jae
ins
bound
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
inc
push
inc
dec
js
inc
xor
push
jbe
dec
pop
add
fs
data16
jo
ss
dec
push
dec
push
dec
push
push
outs
push
pop
je
add
outs
jno
dec
inc
jbe
je
inc
bound
dec
dec
push
add
addr16
arpl
xor
outs
cmp
jne
dec
inc
add
je
popa
ins
add
outs
fs
cmp
xor
pop
aaa
push
js
add
je
jne
ins
imul
dec
xor
inc
xor
dec
dec
xor
inc
je
push
imul
fs
loope
test
loope
mov
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
mov
sub
mov
sub
(bad)
loop
scas
add
or
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
stos
loop
scas
loop
mov
or
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
scas
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
add
outs
je
outs
ins
add
jb
jb
inc
xor
jbe
jo
inc
outs
inc
ins
dec
inc
add
jo
outs
add
xor
pop
push
inc
aaa
xor
dec
push
ss
inc
ins
add
dec
jne
ss
dec
jae
dec
push
ja
dec
js
xor
add
inc
xor
inc
js
imul
ja
inc
pop
ins
bound
push
jo
imul
push
je
push
inc
aaa
inc
fs
inc
outs
ins
inc
add
jae
outs
fs
popa
jns
jne
add
aaa
push
push
dec
jns
bound
push
jno
push
add
cmp
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
or
loop
(bad)
loop
(bad)
loop
mov
sub
add
or
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
jo
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
outs
inc
push
xor
inc
cmp
push
dec
addr16
ins
inc
ja
add
je
inc
ins
imul
add
je
push
jno
xor
imul
jne
pop
pop
add
inc
dec
jbe
inc
push
ins
xor
je
outs
dec
inc
js
add
ins
jns
push
push
jns
popa
xor
dec
outs
dec
xor
fs
inc
jae
gs
bound
gs
ins
jbe
add
imul
inc
inc
arpl
arpl
push
xor
imul
loope
movs
loope
mov
pop
dec
gs
outs
fs
outs
outs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
mov
dec
inc
outs
ins
jo
jb
bound
xor
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
add
sub
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
sub
push
dec
inc
push
popa
dec
inc
pop
aaa
dec
pop
push
dec
jb
add
je
inc
outs
je
jns
outs
imul
arpl
dec
xor
arpl
cmp
add
bound
jb
outs
add
je
push
inc
bound
bound
inc
dec
fs
xor
dec
inc
xor
dec
inc
pop
pop
ins
pop
inc
inc
dec
imul
inc
add
inc
dec
dec
push
inc
jae
dec
push
xor
push
addr16
addr16
popa
inc
inc
dec
pop
inc
inc
dec
xor
push
jne
pop
imul
gs
push
outs
jae
je
outs
outs
add
ins
pop
inc
xor
push
arpl
cmp
push
loope
movs
loope
movs
add
outs
jne
gs
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
loope
mov
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
mov
sub
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
outs
arpl
jae
outs
fs
gs
sub
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
sub
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
(bad)
loop
(bad)
loop
mov
sub
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
sub
scas
loop
mov
or
lods
loop
mov
sub
mov
or
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
scas
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
jo
xor
push
inc
push
popa
pop
pop
arpl
inc
push
inc
add
inc
pop
outs
ja
ins
push
dec
bound
push
add
bound
je
inc
inc
jb
dec
outs
push
fs
push
dec
xor
inc
jo
ins
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
ss
addr16
jae
push
push
imul
gs
dec
outs
fs
gs
popa
ins
add
inc
dec
jbe
inc
dec
dec
bound
imul
add
je
js
arpl
imul
ins
bound
dec
inc
ins
inc
gs
outs
push
bound
xor
jae
je
dec
popa
ins
add
outs
imul
push
push
jb
xor
pop
cmp
jae
je
dec
gs
pop
push
push
imul
xor
inc
dec
jb
pop
dec
xor
add
and
imul
imul
aaa
dec
push
cmp
loope
movs
loope
lods
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
arpl
jae
push
imul
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
add
or
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
add
or
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
outs
je
imul
je
outs
ins
add
pop
outs
jne
imul
push
dec
bound
xor
push
push
dec
inc
outs
jbe
xor
inc
imul
pop
ins
bound
dec
inc
popa
dec
xor
push
data16
dec
imul
bound
outs
js
xor
jno
add
je
jne
jb
outs
je
jb
arpl
jae
imul
push
jb
pop
dec
aaa
xor
xor
xor
addr16
dec
popa
imul
add
inc
xor
inc
push
aaa
outs
xor
dec
xor
add
outs
imul
gs
imul
jno
outs
outs
inc
cmp
je
js
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
cmp
xor
xor
pop
ja
dec
jb
push
movs
loope
mov
loop
mov
sub
mov
sub
mov
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
lods
loop
scas
loop
lods
loop
scas
add
inc
dec
push
inc
inc
xor
jbe
xor
inc
add
js
addr16
inc
jo
inc
push
inc
push
arpl
js
dec
add
inc
xor
push
pop
jno
bound
dec
inc
inc
imul
push
inc
ss
jne
gs
push
xor
add
and
jbe
outs
je
jb
jae
inc
imul
dec
inc
outs
ins
jo
jb
bound
dec
inc
imul
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
sub
(bad)
loop
mov
sub
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
scas
add
sub
loop
lods
loop
(bad)
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
or
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
or
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
je
inc
jp
dec
addr16
je
xor
bound
push
je
pop
push
xor
imul
dec
xor
fs
add
ja
outs
push
inc
push
jne
dec
ja
inc
dec
add
push
inc
push
xor
inc
imul
inc
jbe
inc
js
je
dec
push
dec
ins
outs
ja
inc
jae
outs
jno
dec
inc
push
je
dec
add
inc
ss
push
push
inc
jbe
cmp
je
dec
bound
add
cmp
push
outs
push
jne
inc
bound
push
dec
inc
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
push
pop
xor
push
push
xor
push
outs
xor
pop
add
push
jae
ins
push
inc
push
aaa
jb
push
push
movs
loope
mov
push
push
inc
push
push
inc
je
jb
bound
gs
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
mov
or
scas
loop
mov
sub
mov
sub
sub
scas
loop
mov
or
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
or
scas
loop
(bad)
loop
mov
sub
outs
popa
ss
cmp
outs
inc
dec
push
outs
aaa
inc
ins
ins
push
add
xor
push
push
push
inc
je
cmp
xor
jbe
add
outs
add
dec
pop
inc
cmp
inc
outs
ins
dec
jne
bound
inc
dec
add
jo
add
jbe
push
outs
dec
inc
imul
dec
push
add
and
inc
outs
outs
jbe
jb
imul
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
loop
scas
loop
mov
or
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
loop
stos
loop
mov
or
stos
loop
mov
or
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
lods
loop
mov
or
lods
loop
mov
or
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
add
or
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
je
dec
popa
ins
add
bound
push
dec
ins
jbe
ss
gs
push
imul
inc
jno
popa
ins
imul
ss
push
dec
dec
xor
push
js
xor
imul
push
pop
push
jbe
push
inc
ss
ja
cmp
dec
add
ss
push
pop
push
inc
outs
ins
dec
pop
push
outs
jbe
jne
inc
add
popa
jb
jae
imul
push
inc
push
cmp
data16
inc
cmp
jns
add
je
dec
gs
imul
cmp
push
xor
js
jae
arpl
dec
cmp
addr16
inc
ins
outs
arpl
imul
inc
xor
dec
push
ss
push
dec
dec
add
and
sub
loop
mov
sub
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
mov
sub
loop
mov
sub
jb
jbe
inc
jns
gs
loop
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
or
addr16
inc
cmp
push
inc
inc
ins
dec
jno
xor
add
outs
dec
pop
xor
push
xor
je
jbe
push
xor
push
push
push
dec
push
jns
js
xor
inc
gs
jns
gs
imul
push
push
cmp
push
xor
dec
bound
dec
cmp
dec
imul
dec
inc
push
xor
xor
ins
push
outs
xor
ss
and
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
jno
popa
je
bound
xor
loop
mov
sub
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
add
imul
push
jae
push
inc
arpl
dec
dec
gs
inc
add
bound
push
push
inc
gs
imul
push
add
dec
push
jno
dec
cmp
inc
inc
je
dec
add
dec
aaa
cmp
push
pop
inc
jns
outs
pop
dec
ins
inc
ja
xor
push
imul
xor
push
dec
xor
inc
gs
inc
xor
jns
inc
cmp
push
bound
jns
dec
pop
push
inc
inc
inc
add
jb
imul
je
add
popa
jb
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
mov
or
(bad)
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
mov
or
mov
or
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
sub
imul
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
sub
or
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
or
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
mov
sub
dec
ins
inc
inc
addr16
ins
xor
dec
jns
dec
xor
push
je
dec
dec
dec
push
dec
inc
imul
push
jb
cmp
js
cmp
push
inc
je
inc
jne
imul
inc
bound
push
imul
imul
inc
dec
dec
inc
push
js
xor
push
push
jne
inc
push
aaa
cmp
arpl
jb
pop
inc
inc
cmp
jb
inc
jae
inc
push
push
ss
add
and
sub
sub
sub
sub
js
gs
imul
jae
ins
bound
dec
inc
outs
jne
gs
bound
xor
inc
outs
outs
je
imul
addr16
dec
je
ins
add
ins
gs
je
gs
ins
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
jb
jo
outs
push
gs
imul
imul
outs
je
popa
outs
fs
gs
inc
gs
push
data16
cmp
cmp
imul
jae
inc
jb
jo
outs
push
je
gs
ins
add
jbe
inc
imul
je
add
je
xor
dec
inc
ins
outs
outs
gs
bound
loope
lods
loope
movs
add
sub
sub
sub
sub
and
stos
loop
stos
loop
scas
loop
mov
or
scas
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
or
mov
sub
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
ins
imul
imul
jo
imul
loop
scas
loop
mov
sub
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
mov
or
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
or
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
(bad)
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
arpl
jns
outs
outs
add
sub
loop
stos
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
mov
or
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
or
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
add
or
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
or
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
or
loop
scas
loop
scas
add
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
or
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
lods
loop
lods
loop
scas
add
sub
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
sub
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
(bad)
loop
mov
or
loop
stos
loop
stos
loop
(bad)
loop
scas
add
jae
popa
outs
popa
addr16
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
or
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
add
jns
je
push
je
gs
ins
dec
outs
fs
or
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
stos
loop
mov
sub
mov
sub
scas
loop
mov
sub
sub
lods
loop
mov
sub
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
jb
popa
je
js
gs
imul
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
add
or
loop
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
mov
sub
imul
dec
popa
outs
popa
addr16
sub
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
(bad)
loop
(bad)
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
or
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
mov
or
scas
add
sub
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
or
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
or
add
sub
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
scas
loop
mov
or
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
or
mov
or
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
mov
sub
add
inc
js
addr16
dec
push
xor
outs
xor
xor
dec
add
jae
push
pop
push
addr16
xor
gs
push
outs
ja
dec
jns
xor
push
pop
push
dec
fs
dec
jno
inc
jns
ins
inc
jno
addr16
push
jns
jb
jne
inc
push
push
imul
push
dec
xor
bound
jo
inc
data16
push
xor
pop
push
jo
xor
inc
add
jne
push
inc
push
imul
xor
xor
add
je
push
gs
add
xor
inc
aaa
xor
bound
pop
jno
inc
add
fs
dec
outs
popa
add
dec
addr16
push
popa
inc
ss
ins
cmp
pop
push
push
add
jae
ins
gs
popa
jns
jne
add
ins
dec
push
inc
push
gs
xor
imul
pop
add
je
push
push
jns
jbe
dec
push
jbe
imul
add
aaa
dec
gs
push
pop
jbe
xor
ja
xor
jb
inc
ins
popa
jae
xor
dec
outs
popa
add
dec
bound
push
push
cmp
dec
push
push
xor
add
je
add
je
gs
jo
popa
je
add
inc
xor
push
jno
pop
inc
xor
xor
cmp
add
jb
popa
je
push
cmp
jbe
push
jne
push
xor
push
jno
imul
imul
jns
inc
jb
popa
je
inc
imul
jns
ja
push
push
bound
push
jo
data16
jo
xor
cmp
inc
dec
pop
push
push
popa
push
push
imul
push
jae
add
ins
add
imul
xor
arpl
push
inc
dec
jae
jae
jo
xor
add
outs
push
jb
je
add
push
pop
xor
ss
outs
push
jae
dec
dec
pop
inc
push
add
xor
push
dec
xor
arpl
outs
jb
push
outs
jae
add
imul
push
ins
fs
jae
ins
inc
dec
dec
add
fs
imul
xor
jp
dec
push
xor
aaa
push
push
add
imul
outs
inc
inc
push
push
ins
push
dec
inc
js
xor
inc
push
cmp
je
outs
inc
jns
inc
data16
push
jae
je
dec
push
add
inc
pop
cmp
push
pop
jno
arpl
cmp
push
inc
popa
ins
ins
imul
ins
bound
push
xor
push
outs
outs
fs
push
arpl
dec
xor
add
push
inc
push
inc
outs
pop
arpl
inc
push
outs
inc
outs
inc
xor
popa
outs
jae
outs
jb
inc
imul
arpl
ja
arpl
outs
dec
xor
push
dec
jno
imul
arpl
outs
outs
push
jae
push
jbe
cmp
inc
add
outs
jbe
jb
add
popa
jae
ss
je
imul
inc
pop
push
outs
inc
dec
dec
outs
cmp
inc
push
inc
outs
jne
jp
xor
push
outs
jb
pop
outs
jbe
ins
je
inc
inc
ja
inc
xor
push
outs
push
je
dec
push
ins
pop
jo
ins
push
jns
jae
je
dec
gs
imul
push
inc
dec
outs
imul
inc
xor
js
cmp
outs
inc
jb
popa
jns
push
pop
arpl
push
outs
ja
inc
xor
aaa
jbe
xor
push
add
sub
and
je
jb
bound
gs
or
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
or
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
loop
mov
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
push
gs
outs
cmp
inc
xor
xor
fs
ins
inc
add
outs
xor
outs
dec
inc
inc
cmp
imul
xor
outs
dec
arpl
push
outs
inc
xor
inc
inc
add
push
push
jno
outs
xor
push
dec
ss
push
popa
pop
add
je
xor
dec
xor
xor
dec
aaa
inc
jno
add
jae
inc
imul
push
push
jns
inc
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
and
jne
outs
push
arpl
gs
outs
fs
sub
lods
loop
lods
loop
scas
loop
mov
or
loop
mov
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
scas
add
sub
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
je
inc
jne
outs
push
arpl
gs
outs
fs
arpl
cmp
outs
jb
jbe
arpl
jne
add
imul
push
dec
push
popa
pop
add
inc
xor
dec
ss
ins
js
push
cmp
xor
pushw
outs
xor
data16
ss
popa
jae
push
xor
loope
mov
loop
(bad)
loop
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
add
bound
outs
outs
cmp
push
push
data16
add
inc
dec
push
inc
outs
push
push
ins
inc
inc
dec
pop
inc
ja
outs
ins
add
cmp
ins
outs
push
pop
inc
push
ja
push
add
inc
push
jno
outs
xor
jbe
outs
cmp
pop
popa
ss
sub
stos
loop
mov
or
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
mov
or
loop
mov
sub
add
or
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
or
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
add
dec
inc
ins
aaa
outs
jae
aaa
dec
inc
outs
aaa
cmp
jbe
add
gs
je
inc
outs
arpl
jo
outs
jb
jne
dec
bound
outs
push
jae
inc
ins
dec
ja
push
imul
inc
outs
arpl
dec
dec
dec
xor
pop
xor
push
push
dec
inc
outs
pop
inc
imul
ins
xor
inc
push
dec
jae
dec
outs
dec
ins
dec
dec
pop
cmp
add
addr16
push
outs
inc
dec
ja
ins
inc
jo
data16
ins
aaa
add
dec
inc
je
outs
bound
push
ss
imul
xor
outs
dec
push
inc
dec
popa
push
popa
jb
inc
push
dec
add
and
push
gs
inc
outs
ins
dec
je
push
dec
xor
addr16
imul
pop
inc
outs
inc
xor
js
imul
pop
dec
bound
push
dec
xor
push
push
xor
jo
outs
imul
loop
mov
sub
stos
loop
mov
sub
scas
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
add
pop
imul
jne
inc
jns
addr16
inc
inc
xor
inc
push
ss
outs
fs
je
xor
dec
pop
ja
inc
inc
xor
js
outs
dec
arpl
xor
dec
inc
dec
popa
outs
add
pop
jae
outs
xor
inc
push
inc
push
xor
loope
mov
loop
mov
or
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
add
inc
xor
outs
ins
ss
push
push
pop
push
imul
xor
push
push
outs
push
push
xor
push
jae
push
add
push
dec
xor
jae
outs
imul
inc
add
and
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
sub
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
add
sub
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
scas
add
sub
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
or
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
or
mov
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
(bad)
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
add
jo
dec
jo
popa
inc
push
xor
jae
gs
add
xor
outs
outs
imul
inc
jbe
cmp
inc
jae
fs
outs
xor
jbe
inc
inc
dec
jo
add
imul
outs
gs
inc
push
xor
dec
aaa
outs
cmp
push
xor
jbe
jns
fs
push
gs
xor
push
jb
ins
add
gs
dec
cmp
ss
popa
jae
xor
ins
add
outs
ja
jb
jbe
push
xor
outs
push
pop
push
bound
jo
push
imul
inc
push
ins
push
cmp
push
outs
jno
push
inc
dec
xor
dec
jae
jae
add
jbe
fs
arpl
popa
arpl
jns
loope
movs
loope
mov
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
add
or
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
or
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
add
push
jne
cmp
xor
dec
inc
add
inc
ss
outs
jo
push
jns
cmp
ins
push
push
add
popa
bound
imul
jns
gs
push
jb
xor
pop
outs
push
dec
outs
push
bound
jbe
pop
gs
add
pop
dec
outs
gs
popa
ins
imul
inc
push
outs
inc
cmp
imul
cmp
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
ins
jne
ss
popa
inc
inc
je
fs
pop
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
xor
aaa
ins
xor
push
inc
ins
jb
add
and
and
and
add
and
add
and
add
imul
jne
add
sbb
mov
dec
mov
in
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
sbb
sub
pop
add
or
add
add
pop
or
adc
adc
or
or
push
add
sbb
pop
add
adc
or
add
sbb
pop
add
pop
add
add
and
add
or
sub
or
or
add
or
adc
add
push
or
add
xor
add
sbb
add
add
add
sbb
adc
sbb
adc
add
add
add
adc
add
adc
add
add
or
add
add
adc
pop
or
xor
or
or
or
push
and
add
add
sbb
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
add
add
cmp
sbb
add
push
push
or
add
adc
add
or
add
adc
adc
add
add
push
add
add
sub
sbb
and
sbb
sbb
sbb
sbb
add
add
add
add
add
sbb
add
add
add
add
and
add
add
sbb
and
or
add
sbb
and
or
add
sbb
and
or
add
sbb
or
or
add
or
add
add
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
pop
add
or
add
dec
or
pop
or
or
or
or
add
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
dec
adc
pop
adc
sub
or
or
or
or
or
or
and
adc
dec
or
or
or
or
or
or
or
add
or
or
or
add
add
or
add
add
add
or
add
sbb
or
sbb
or
add
sbb
sbb
or
add
add
or
push
add
add
or
push
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
dec
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
or
or
or
or
or
add
push
add
add
add
add
add
or
sbb
or
sbb
or
add
adc
add
or
pop
or
adc
sbb
add
add
or
add
add
adc
popa
push
add
sbb
and
or
add
add
add
pop
add
add
or
add
gs
add
add
push
add
add
push
push
add
add
or
sbb
or
or
add
add
add
add
add
adc
gs
pop
add
sbb
add
imul
sbb
pop
or
or
or
sbb
or
or
add
push
add
ins
or
or
add
push
add
add
add
add
add
jno
ins
pop
add
add
jne
jns
and
add
ins
push
add
add
ins
add
jns
pop
or
adc
or
or
or
add
adc
adc
or
adc
push
or
or
or
add
or
or
pop
or
or
or
or
add
or
add
add
add
adc
add
push
or
add
dec
add
add
or
or
push
add
sbb
or
sysret
or
or
or
sbb
or
or
add
add
push
add
pop
or
adc
or
or
add
push
push
add
add
pop
or
sbb
or
or
or
add
adc
add
or
or
or
sbb
or
add
push
add
add
or
adc
add
push
add
add
add
add
add
push
adc
adc
add
add
imul
adc
and
push
add
add
push
add
adc
or
or
or
sbb
or
add
or
add
add
pop
or
adc
or
or
add
adc
pop
or
sbb
or
or
or
add
adc
push
or
add
add
add
push
or
add
push
add
sbb
or
add
cdq
or
add
or
add
adc
add
mov
and
add
sbb
adc
adc
and
add
sub
sbb
pop
or
adc
or
or
add
push
add
push
push
sysret
or
adc
or
or
add
adc
push
push
add
add
xor
or
add
adc
add
add
or
or
mov
adc
pop
add
add
push
add
or
push
add
jno
push
adc
push
or
push
adc
pop
or
cmp
add
add
push
add
push
or
or
or
sbb
or
add
push
add
add
add
or
or
or
sbb
or
add
or
add
add
add
push
adc
add
push
push
add
or
or
or
add
add
push
pop
or
or
or
or
or
add
or
add
or
add
or
or
or
push
adc
push
adc
pop
or
push
add
or
or
add
add
push
add
cdq
add
mov
adc
push
adc
add
sbb
or
add
add
or
add
push
push
add
adc
sbb
or
or
push
or
add
adc
adc
or
adc
add
add
add
pop
pop
sbb
add
add
adc
add
push
sbb
add
adc
adc
pop
or
or
or
or
or
or
add
or
adc
add
adc
add
add
or
adc
add
or
sbb
or
add
add
or
adc
sbb
adc
add
or
adc
push
sbb
sbb
sbb
adc
add
dec
adc
or
or
or
or
or
or
or
or
or
add
push
add
add
and
adc
adc
add
push
pop
and
add
add
add
rol
add
add
adc
adc
or
or
xor
or
or
add
lea
add
adc
add
adc
sbb
add
add
add
or
or
mov
imul
or
add
add
imul
add
add
push
or
or
or
or
add
pop
pop
add
add
popa
adc
pop
or
or
or
or
add
or
test
pop
or
and
or
or
or
or
or
lds
adc
adc
add
or
or
or
or
or
or
add
adc
xor
or
sbb
or
add
or
or
add
adc
add
cmp
or
push
sbb
or
or
adc
add
adc
add
jne
jns
pop
add
or
add
xor
add
add
sbb
xor
or
or
adc
or
or
or
adc
and
sbb
and
sbb
or
or
or
or
or
or
or
add
or
or
xor
sbb
or
or
add
xor
or
add
adc
add
or
or
push
or
or
or
add
add
or
add
adc
push
add
add
push
or
or
or
or
add
or
or
add
or
or
adc
or
or
or
or
or
or
or
or
sbb
or
sbb
add
sysret
or
or
or
or
sbb
or
add
adc
or
add
or
sbb
or
and
add
push
add
push
or
add
pop
or
adc
or
or
add
push
sbb
or
add
adc
or
or
add
add
or
pop
or
or
or
or
add
push
add
add
or
add
add
add
or
add
adc
add
push
or
pop
adc
sbb
add
adc
add
adc
push
add
push
push
sbb
push
add
adc
add
push
push
push
add
add
push
push
add
adc
add
adc
add
add
adc
add
adc
add
icebp
add
sbb
and
add
dec
adc
or
add
dec
adc
add
and
and
add
or
add
cmp
add
add
adc
and
mov
add
add
sub
adc
add
add
adc
add
add
sbb
push
push
add
sbb
push
or
and
add
xor
add
sbb
push
or
add
or
add
sbb
or
add
add
add
or
adc
add
push
add
or
add
adc
pop
or
or
sbb
or
add
or
add
or
add
dec
or
add
adc
add
add
adc
ins
add
add
add
adc
add
push
add
or
add
push
add
add
add
add
and
add
adc
add
or
xor
push
or
add
xor
sbb
adc
add
mov
and
add
add
add
adc
or
or
add
gs
add
add
add
adc
add
add
or
or
or
adc
add
push
add
add
or
add
or
sbb
or
add
push
add
add
pop
add
adc
gs
add
sbb
add
or
sbb
and
sbb
add
or
or
adc
sub
add
adc
xor
or
add
push
add
add
push
or
add
dec
push
add
add
push
sysret
or
adc
sbb
or
add
adc
push
or
add
adc
pop
add
adc
popa
push
add
add
jne
and
adc
sub
add
xor
arpl
aaa
fs
sub
sub
sub
cmp
fs
gs
add
or
push
daa
or
add
add
adc
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
