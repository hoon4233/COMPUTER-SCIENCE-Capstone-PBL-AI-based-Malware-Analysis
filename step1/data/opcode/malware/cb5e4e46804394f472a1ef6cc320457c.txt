inc
add
cld
out
inc
add
ins
add
add
adc
aas
(bad)
call
sti
xchg
ror
jbe
xchg
ret
sbb
lds
ss
mov
call
dec
int3
ss
cmps
pop
retf
int
outs
ror
jb
pop
adc
ror
das
fnstenv
or
xlat
xor
movs
or
aas
add
cmp
fstp
fadd
paddusw
(bad)
xchg
loope
loop
jecxz
mov
in
out
push
call
ss
jmp
cmps
imul
pop
add
add
add
inc
pop
mov
das
mov
inc
add
add
pop
add
adc
gs
jge
xor
iret
and
leave
cmps
fcomp
repnz
int
int
mov
dec
ror
fild
(bad)
mov
in
or
push
jnp
pop
ss
cmp
addr16
imul
pop
imul
imul
jle
push
push
ret
jb
ins
cmp
mov
retf
or
add
jne
data16
mov
or
or
xor
int
dec
inc
pop
sahf
push
or
imul
ret
sub
gs
call
adc
sbb
cmp
xchg
adc
data16
pop
(bad)
aam
sbb
call
xor
imul
mov
into
sbb
pop
and
in
mov
inc
sub
in
das
inc
xor
jl
push
add
jo
ds
cmp
cmp
aas
popa
cs
sahf
add
push
test
sbb
mov
out
call
add
int
int
sbb
outs
jnp
leave
or
cwde
inc
call
xor
int
imul
jo
xchg
inc
dec
cs
pushf
cld
repz
inc
add
inc
lock
inc
pop
dec
shl
cmps
repnz
inc
call
imul
jns
addr16
ja
pop
push
shl
add
and
pushf
mov
jo
aaa
popa
dec
daa
dec
shr
dec
and
xor
and
daa
and
rcr
push
mov
fnstenv
sbb
and
in
aaa
jmp
imul
dec
aaa
mov
stos
dec
cmp
add
ss
neg
adc
je
dec
das
and
pusha
inc
jbe
push
ins
shl
xchg
dec
lahf
repz
scas
pop
push
mov
sub
add
pop
cmp
int3
comiss
inc
test
repz
call
and
int
imul
ins
mov
cmp
data16
pop
ss
mov
pop
cmps
gs
retf
and
pop
mov
shr
mov
jg
jne
data16
lock
(bad)
fdiv
arpl
dec
fs
xchg
retf
in
imul
outs
mov
jo
out
jno
sub
data16
push
jb
loopne
jae
sub
data16
je
fnstcw
jne
push
ret
or
jp
(bad)
xor
ret
clc
sbb
sub
cmps
je
js
cld
cmp
sub
lods
jp
mov
retf
dec
jl
cs
pop
jae
jle
imul
retf
mov
pop
jmp
xchg
retf
in
mov
test
imul
lds
cs
retf
in
lods
add
mov
mov
in
imul
xor
shl
xchg
les
leave
add
retf
shr
lock
retf
jle
or
int
imul
popf
fstp
iret
lahf
add
sub
sub
ret
retf
inc
jle
popa
xlat
adc
das
fst
inc
add
popf
and
jmp
sbb
shl
mov
aad
imul
adc
cmps
imul
mov
fadd
loopne
add
in
mov
data16
in
xor
xchg
mov
xor
fdiv
add
add
aas
push
mov
test
enter
gs
outs
rcr
sahf
cmp
sbb
stos
add
ss
jno
and
push
push
xchg
adc
sbb
inc
(bad)
gs
call
std
sbb
scas
cld
int
int
(bad)
(bad)
mov
jns
inc
pop
mov
cmp
cmps
or
dec
test
in
and
imul
lods
imul
shld
jno
addr16
in
not
dec
or
or
sub
fnstenv
pop
ficomp
icebp
add
push
sbb
arpl
lods
call
adc
jp
fnstenvw
inc
or
jae
jbe
cmps
imul
retf
ret
jg
pop
mov
ss
ja
in
hlt
sbb
sub
imul
xchg
retf
out
sysret
adc
loope
(bad)
ins
xchg
int
pop
pop
in
sbb
sbb
and
int
jmp
call
cmps
jmp
jne
jp
aas
outs
nop
movs
mov
add
and
jnp
je
lock
je
push
stc
sbb
sbb
and
dec
adc
xchg
xchg
out
dec
adc
add
dec
sahf
and
cld
adc
add
cmp
fwait
mov
cmp
out
mov
adc
repnz
and
adc
jae
cmp
sbb
adc
inc
aam
adc
movs
mov
push
mov
adc
mov
fs
or
enter
dec
sahf
fist
(bad)
adc
test
sbb
sbb
adc
out
adc
cmp
stc
into
es
adc
sbb
popa
mov
adc
fs
cmp
enter
adc
fs
jmp
je
and
iret
out
adc
adc
sub
mov
sbb
xlat
test
ins
ss
mov
(bad)
mov
fs
leave
ja
pop
hlt
jno
adc
loopne
push
mov
add
xor
add
dec
or
test
mov
jge
fwait
ror
daa
ror
push
imul
push
(bad)
adc
dec
fcom
mov
loope
(bad)
(bad)
call
sar
not
mov
repnz
xchg
cmp
xor
jmp
mov
stos
in
rcl
add
add
lds
jb
jb
sbb
or
cmp
cmp
add
add
ficom
je
in
lods
rcr
push
int3
add
and
add
ins
int3
(bad)
or
test
fadd
mov
xor
jbe
xchg
and
mov
dec
ret
adc
and
mov
mov
sub
cmps
jmp
lods
mov
(bad)
imul
xor
cmps
test
mov
imul
sti
add
imul
(bad)
jae
imul
pop
sbb
aas
dec
iret
out
arpl
out
jmp
jmp
into
das
pop
mov
lods
sbb
imul
mov
inc
(bad)
out
pop
into
inc
out
mov
fisubr
and
test
xchg
mov
sahf
aas
inc
into
outs
sub
xchg
fwait
mov
iret
out
dec
pop
arpl
imul
call
mov
xchg
or
xchg
mov
(bad)
xchg
pop
add
adc
mov
jae
fbstp
mov
sub
scas
mov
movs
jg
(bad)
jnp
sbb
jae
pop
sahf
das
ja
add
out
add
fisttp
fdivp
arpl
mov
sub
jge
fisubr
mov
jns
mov
lods
add
fistp
out
mov
fild
jns
add
call
pop
fistp
xor
popa
mov
pmovmskb
out
arpl
fisttp
and
jnp
daa
or
(bad)
(bad)
movs
sub
outs
xlat
jne
inc
and
add
push
(bad)
dec
fdivp
sbb
arpl
jg
(bad)
and
mov
jnp
test
inc
xlat
xlat
or
xor
(bad)
(bad)
arpl
jae
pushf
mov
test
add
inc
xor
daa
into
cs
sbb
jnp
cmps
jmp
(bad)
pxor
jg
add
in
and
cmp
lahf
nop
dec
fs
xchg
dec
add
bswap
into
cmp
push
add
xor
sub
fbstp
add
test
xchg
add
fistp
andps
lahf
add
mov
movaps
outs
dec
push
adc
mov
addr16
add
aaa
add
add
cdq
dec
(bad)
adc
lahf
aaa
add
mov
pop
sub
adc
pop
cmp
imul
inc
mov
pop
leave
inc
popa
add
(bad)
push
inc
dec
dec
sbb
ror
pushf
mov
add
add
scas
jmp
aas
mov
add
aas
or
nop
addr16
push
in
mov
dec
mov
mul
add
pop
jg
ror
addr16
es
in
imul
fild
add
ret
aas
xlat
fild
sti
aas
(bad)
xor
adc
and
cwde
pusha
outs
fs
aas
add
add
and
aas
inc
add
test
(bad)
adc
das
stos
adc
fadd
dec
or
and
inc
inc
add
add
push
sub
add
nop
cld
adc
dec
pop
jae
je
(bad)
adc
imul
mov
test
inc
inc
aas
fmul
pusha
and
ds
add
dec
or
or
pop
sub
cmp
in
enter
ins
pop
jge
add
adc
mov
arpl
sub
pop
inc
test
push
pop
add
xchg
std
mov
push
ins
and
adc
add
mov
in
cmp
pop
pop
adc
mov
mov
mov
pmulhuw
aas
add
add
pop
and
jp
or
or
call
pop
imul
xor
das
sti
mov
add
inc
loopne
sbb
and
and
mov
sti
ss
js
or
sub
add
jp
or
mov
add
pop
ucomiss
cmp
(bad)
pop
mov
std
outs
pop
mov
and
and
dec
bound
cmp
aas
call
pop
or
or
jae
mov
rol
mov
or
mov
sbb
push
add
clc
aas
int
(bad)
add
add
aas
add
jg
leave
add
and
addps
std
add
clc
add
jg
pop
aaa
enter
cmps
and
adc
xchg
sbb
dec
shl
cmp
repz
ins
xchg
sub
add
sbb
xchg
add
push
mov
daa
push
and
sbb
or
(bad)
(bad)
dec
fcos
pop
test
inc
sub
add
int
sbb
jne
cdq
add
pop
sub
dec
shl
adc
dec
out
jle
jmp
(bad)
aaa
(bad)
push
fdivr
pop
mov
add
rol
sub
mov
xlat
je
xchg
jp
pusha
inc
jg
pop
and
shl
sbb
push
call
stc
mov
jno
add
inc
in
jmp
out
call
mov
dec
mov
add
fiadd
xor
mov
call
dec
jg
add
cmp
xor
jg
fild
jg
(bad)
addr16
call
out
push
mov
cmps
(bad)
mov
test
add
je
sar
push
mov
daa
scas
(bad)
cwde
or
xchg
mov
out
loopne
pop
pop
nop
add
ds
rcl
fld
fwait
dec
and
mov
test
call
jg
in
xor
stos
(bad)
jmp
fld
jg
cmps
fcos
(bad)
pop
and
test
(bad)
or
iret
pop
xchg
pop
xchg
add
jg
adc
push
add
push
movs
add
test
enter
sub
aaa
mov
add
xor
or
gs
ins
ud0
jg
hlt
iret
imul
jnp
jg
inc
mov
dec
int
les
sub
add
cli
inc
ja
bnd
jp
ins
jg
in
ins
stc
cmovae
(bad)
xor
iret
jbe
jg
jg
ins
nop
jecxz
push
js
xor
pop
shr
dec
xchg
mov
stos
loopne
sahf
cmp
and
xor
bnd
in
mov
shl
lods
outs
mov
jg
push
xchg
mov
xor
jnp
ja
sub
dec
fwait
fs
mov
cli
dec
sar
mov
mov
(bad)
mov
mov
ss
add
imul
les
in
push
jecxz
(bad)
out
xor
aaa
jmp
mov
dec
jmp
loopne
add
mov
inc
xchg
jg
and
push
shrd
test
or
fld
jnp
sub
mov
fneni(8087
jb
dec
aaa
mov
les
sub
mov
aad
add
clc
mov
int3
add
(bad)
adc
inc
cmps
fucom
test
cld
add
mov
adc
dec
repz
in
(bad)
xchg
data16
out
jecxz
out
cmps
sbb
jmp
lahf
inc
call
fidiv
nop
ret
cdq
inc
lahf
stc
jmp
retf
in
mov
pop
or
js
fstp
in
clc
pop
mov
mov
in
fidivr
mov
pop
xchg
(bad)
and
ror
sti
ja
sti
jnp
rcr
xlat
fnsave
cld
mov
pop
dec
pop
mov
imul
rcr
call
(bad)
push
shl
test
add
lahf
int3
mov
jg
fbstp
xlat
outs
xchg
(bad)
aam
mov
rcr
jns
in
mov
mov
fwait
(bad)
call
jmp
inc
mov
push
jg
push
push
inc
jg
sahf
add
inc
mov
cmp
jne
pop
mov
add
(bad)
mov
and
mov
jmp
jae
mov
shl
stos
jbe
(bad)
mov
lds
jp
sti
dec
mov
aad
inc
dec
mov
dec
add
xchg
leave
cmp
rol
inc
mov
icebp
jo
aas
outs
or
fpatan
inc
jecxz
cmps
int3
inc
fs
(bad)
xor
mov
pop
add
xlat
add
add
lahf
std
add
fwait
add
inc
add
add
jle
and
add
add
or
xchg
pop
dec
pusha
or
aam
repnz
adc
and
pop
jno
bound
xchg
jmp
xchg
xchg
sub
pop
fs
out
repnz
das
xchg
xchg
add
inc
pop
pusha
xor
fs
sub
je
test
inc
sar
inc
mov
fst
jnp
push
je
xor
pop
ja
sti
retf
test
push
push
push
jo
dec
inc
xor
cdq
mov
das
(bad)
push
add
cmps
mov
in
dec
pop
ins
das
cmp
jne
jbe
mov
xor
add
xor
das
popa
or
xchg
adc
xchg
ret
das
sub
test
and
das
gs
pop
add
fs
popa
jg
imul
dec
das
imul
ins
cmp
dec
ins
das
dec
push
and
sub
dec
enter
xchg
xchg
sbb
and
nop
jl
xchg
or
dec
popa
retf
jnp
add
das
inc
in
sub
xchg
add
adc
(bad)
mov
pop
push
add
mov
dec
xchg
sub
jg
sub
lahf
nop
mov
add
xor
cwde
sub
xor
pop
inc
push
jnp
call
addr16
jle
xchg
nop
push
mul
daa
das
xor
or
jge
add
sbb
cmp
add
nop
inc
jge
js
pop
adc
inc
sahf
push
mov
sbb
add
jg
mov
pop
push
mov
imul
or
outs
inc
fs
add
and
ss
pop
pop
dec
lea
sub
sub
add
jno
sbb
xchg
cs
out
add
or
rcl
sub
pop
popf
lahf
lahf
pop
sub
inc
push
fnsave
push
sbb
das
jp
inc
xchg
call
push
fwait
push
pop
push
inc
pop
sahf
mov
test
jl
add
push
pop
mov
cmp
add
mov
ins
add
jbe
aaa
imul
inc
sbb
pop
inc
jg
or
nop
pop
add
adc
enter
add
and
pop
sub
pop
out
fisub
add
mov
clc
pop
pop
add
push
and
add
add
or
sub
sbb
adc
add
jns
mov
and
nop
or
inc
xchg
(bad)
cmc
add
jecxz
fld
xor
aas
jl
rep
ins
and
and
(bad)
mov
test
in
jmp
lods
(bad)
or
inc
jo
int3
jg
fsubp
dec
or
adc
gs
xchg
sub
loopne
pushf
push
mov
std
jmp
gs
cld
dec
out
jmp
mov
call
(bad)
iret
add
movs
jae
and
or
popa
xchg
int
xchg
(bad)
(bad)
cmps
out
aam
adc
(bad)
and
clc
push
mov
pop
mov
xchg
in
cmp
inc
xor
int
popa
dec
mov
popf
sub
add
cmc
inc
jmp
jae
jl
shl
push
cmps
xchg
dec
rcr
and
sbb
or
add
or
dec
mov
inc
push
add
stc
dec
and
jae
movs
mov
xchg
pop
retf
cmp
cmp
ret
sar
fld
jo
outs
pop
cs
push
enter
push
stos
fxch
je
in
jae
push
outs
shl
push
and
pusha
outs
push
mov
mov
retf
out
adc
aaa
outs
add
pop
mov
ret
mov
fst
cs
pushf
repz
mov
dec
xchg
mov
and
mov
push
add
and
dec
mov
and
inc
and
xchg
jmp
adc
mov
pop
mov
cmp
jmp
mov
data16
sub
mov
or
stos
add
dec
inc
not
xor
movs
inc
ja
outs
and
xlat
daa
mov
mov
mov
add
sub
mov
add
inc
(bad)
inc
sub
add
sub
(bad)
retf
aas
xlat
cmps
inc
xchg
ins
(bad)
and
adc
mov
add
pop
int3
out
jnp
sub
out
ins
mov
mov
xchg
clc
add
push
mov
pop
push
mov
idiv
call
sti
mov
adc
xchg
lds
add
inc
int
jg
enter
mov
mov
pop
push
aas
mov
pop
rcl
fs
loop
cmp
add
add
inc
add
xor
jnp
adc
mov
aaa
fild
mov
add
test
pusha
adc
add
xchg
(bad)
mov
imul
ss
push
add
and
mov
xchg
lahf
or
mov
xchg
xlat
adc
fnsave
sub
pop
jmp
add
mov
mov
in
mov
arpl
sub
jmp
mov
dec
iret
in
(bad)
in
mov
adc
xor
shl
add
add
out
add
fdiv
sbb
xchg
pop
or
outs
fld
sub
dec
mov
imul
loop
xchg
jmp
xchg
dec
sub
out
cmps
add
mov
xor
adc
mov
mov
ret
enter
repnz
mov
cmova
mov
mov
sbb
enter
(bad)
jmp
ror
add
inc
repz
add
xchg
aaa
retf
cmp
inc
mov
movs
ja
arpl
ja
mov
iret
jmp
std
jl
mov
ret
fadd
mov
(bad)
repnz
retf
mov
mov
jnp
sti
out
mov
ret
call
mov
adc
out
in
loope
int
dec
mov
dec
xlat
pop
sahf
ret
inc
mov
loopne
cmc
jg
std
jb
scas
stos
(bad)
adc
mov
mov
jmp
cli
add
xor
mov
sbb
inc
dec
mov
inc
inc
mov
enter
idiv
loop
mov
pusha
jg
xor
xor
xor
sahf
fsubr
(bad)
mov
in
clc
cld
(bad)
std
add
repnz
jmp
int3
inc
jmp
add
inc
mov
xchg
enter
out
mov
or
call
sbb
add
xchg
fucomi
sub
or
jmp
js
pop
jmp
imul
rol
(bad)
add
lahf
mov
pop
dec
pop
mov
addr16
aam
rcl
jge
sti
add
xlat
rcl
add
mov
scas
fcmovnb
add
enter
add
int
mov
mov
or
xchg
(bad)
mov
in
xchg
out
sub
mov
jle
(bad)
xor
add
inc
mov
lock
loopne
pextrw
dec
(bad)
aad
adc
adc
pop
test
arpl
jecxz
cmc
arpl
inc
call
rcr
mov
inc
xor
push
adc
cli
add
(bad)
arpl
inc
outs
loopne
pop
sbb
add
lahf
outs
sbb
addr16
sbb
lods
mov
mov
mov
imul
xchg
and
push
xor
jae
xchg
(bad)
shr
iret
mov
shr
test
test
xor
pop
sbb
push
cmps
xor
js
xor
add
cmp
mov
in
pop
add
in
push
push
inc
dec
pop
cld
add
inc
sbb
xchg
cld
cld
inc
pushf
outs
jb
pop
add
test
pop
jg
xor
pop
and
iret
pop
lock
stc
inc
int3
lahf
lahf
or
clc
pop
ss
and
add
jb
xor
xor
inc
sbb
(bad)
out
add
jns
add
gs
or
call
mov
or
add
add
add
or
add
inc
pop
rol
dec
mul
jns
aaa
add
mov
fadd
and
cmp
xor
mov
or
mov
sbb
nop
data16
add
loopne
arpl
push
pusha
adc
sub
lahf
cmp
test
stos
pop
dec
cmp
enter
dec
add
xor
popf
in
sbb
or
jg
test
(bad)
cmp
inc
lds
cmps
stos
sbb
imul
inc
inc
and
or
add
sbb
push
jb
xor
dec
call
pop
inc
add
add
add
pusha
gs
ins
add
jb
jae
pusha
mov
add
dec
(bad)
fdivr
outs
and
das
inc
add
outs
add
fmul
bound
xchg
mov
gs
jbe
xor
in
jge
add
pop
test
call
(bad)
mov
pushf
adc
push
sbb
in
xchg
test
sbb
enter
xchg
pushf
cmp
inc
dec
push
lock
pushf
push
sbb
adc
in
and
pop
fmul
push
xor
lea
jb
sbb
mov
cld
mov
sbb
mov
in
mov
inc
ror
dec
push
call
or
jb
xchg
cmp
mov
xchg
sbb
inc
add
or
sbb
aaa
mov
sbb
or
add
ja
pop
mov
push
aaa
xlat
mov
dec
lods
int
push
cmp
add
dec
mov
or
pusha
rcr
clc
pop
daa
pop
out
test
daa
mov
pop
imul
pop
jb
fsubr
jge
fcomp
and
xor
sbb
test
jmp
ins
mov
add
add
and
add
fucomip
loopne
inc
sbb
lahf
iret
fdivr
inc
and
sub
inc
int
je
add
pusha
loopne
mov
ss
sbb
cmp
sub
ror
gs
xlat
sar
jbe
jo
sub
pop
inc
loopne
stc
frstor
fdivr
cmc
pop
(bad)
dec
nop
das
inc
fisttp
(bad)
rol
call
dec
cwde
push
in
cmp
mov
popf
pop
xchg
add
imul
sub
push
pop
push
imul
das
adc
mov
jo
mov
leave
inc
mov
pushf
add
or
dec
js
xor
or
enter
mov
cmp
dec
push
nop
data16
fs
sbb
je
adc
sti
xchg
add
adc
inc
or
inc
inc
inc
inc
and
mov
call
outs
push
and
inc
mov
icebp
xchg
repnz
xchg
test
pop
dec
mov
pop
cwde
loop
bnd
mov
add
cmp
push
(bad)
(bad)
jmp
xor
inc
cmp
outs
addr16
ins
and
ins
gs
dec
imul
(bad)
jmp
and
jae
popa
ins
and
jne
imul
and
out
jnp
cs
dec
(bad)
push
add
aaa
mov
out
cmovs
cmp
nop
mov
and
mov
(bad)
sbb
test
jmp
or
ins
fmul
add
add
inc
add
sub
sbb
inc
inc
and
adc
addr16
xor
push
pop
add
add
sar
push
test
out
add
and
adc
inc
mov
sub
add
and
add
dec
mov
ins
sbb
sub
aaa
adc
xchg
add
adc
cmp
xchg
or
inc
xor
sbb
mov
jg
sub
jbe
jo
xor
cs
pop
clc
adc
addr16
gs
je
push
ds
gs
mov
(bad)
add
add
out
push
or
mov
je
jmp
push
adc
or
push
pop
dec
gs
inc
lods
dec
and
nop
das
not
outs
inc
mov
enter
pop
pusha
add
inc
jb
popa
push
adc
stc
imul
mov
jns
inc
out
mov
inc
into
sahf
scas
cmp
xchg
and
cmp
mov
ins
mov
xchg
in
add
or
jnp
inc
ins
retf
mov
in
mov
test
gs
and
push
xchg
lea
leave
mov
xor
nop
xchg
inc
xchg
inc
jl
pushf
jnp
leave
and
dec
rol
outs
pop
jae
or
inc
push
mov
imul
fs
les
aam
mov
dec
call
jns
dec
sahf
lea
and
in
sub
(bad)
push
and
sbb
fs
mov
sar
push
shr
pop
ja
mov
xor
push
les
enter
rcr
fwait
or
leave
sbb
ss
rep
fs
test
fisttp
pop
mov
fsub
push
mov
inc
push
add
inc
inc
mov
pop
mov
nop
and
in
mov
in
clc
xchg
mov
inc
hlt
sbb
dec
pop
push
cmp
mov
ins
test
outs
arpl
or
ja
add
sub
push
add
or
in
nop
or
dec
mov
jle
push
inc
dec
arpl
and
adc
rcl
in
fwait
add
and
aad
sti
gs
inc
imul
cmp
scas
sbb
jbe
pop
leave
clc
dec
dec
jae
nop
mov
pop
aaa
dec
xor
add
sub
dec
push
mov
or
arpl
jbe
inc
fs
mov
outs
iret
outs
push
xor
fs
xor
add
mov
inc
adc
jb
outs
je
arpl
dec
inc
mov
and
nop
mov
cmovns
dec
lods
add
push
mov
popa
adc
xchg
fild
dec
push
fs
pop
mov
test
sbb
(bad)
jb
cmp
pusha
push
aam
mov
in
dec
outs
ret
dec
outs
or
ror
dec
push
in
je
lea
sbb
pop
jo
add
cld
inc
outs
jne
sub
push
xor
fs
push
js
or
push
(bad)
je
or
jecxz
lea
mov
lea
and
shl
jb
ja
das
cmp
add
mov
ins
(bad)
in
pop
arpl
inc
cmp
pushf
sbb
push
push
cmp
add
js
add
mov
push
sbb
push
(bad)
or
jb
or
les
test
push
add
sub
and
inc
or
adc
mov
inc
into
arpl
enter
sbb
xlat
stos
mov
addr16
js
das
cmp
test
jge
inc
fs
ret
push
inc
mov
loopne
add
test
jg
popa
cmp
pop
jb
add
in
xchg
clc
or
adc
ins
inc
xchg
dec
cmp
cmp
pusha
or
adc
push
jae
cmp
adc
cld
sub
leave
add
lods
nop
arpl
fs
addr16
and
(bad)
jge
fild
in
clc
pop
or
gs
xchg
ja
dec
shr
xchg
jb
addr16
adc
push
dec
or
nop
or
pushf
inc
mov
sub
sbb
mov
sbb
dec
fs
movs
push
out
xchg
push
xchg
add
sub
lock
xchg
sbb
jp
inc
cmp
scas
js
and
and
(bad)
es
jo
je
inc
push
jmp
test
dec
into
jle
mov
xor
mov
jo
xor
orps
jae
enter
mov
sub
xchg
adc
pop
iret
pop
icebp
inc
xchg
add
in
push
hlt
pusha
xchg
mov
inc
dec
mov
je
cmp
pop
or
adc
or
aam
addr16
pop
sbb
js
xchg
xor
aaa
inc
sbb
jne
xor
dec
and
xor
(bad)
pop
dec
add
cwde
shl
pop
mov
(bad)
jo
push
push
cmp
int3
jb
or
jae
sbb
das
add
mov
adc
sub
add
mov
inc
cwde
add
jns
jmp
ins
or
aam
(bad)
jbe
ss
add
adc
cmp
and
sub
das
pusha
cmps
and
adc
or
mov
inc
dec
push
or
push
pop
test
sbb
or
push
inc
arpl
mov
pcmpeqb
add
iret
ret
pop
shl
fs
js
jne
aad
fbld
ja
gs
ror
mov
pop
jae
adc
xlat
jne
outs
cmp
jae
inc
jge
das
mov
jne
outs
pop
push
pop
jb
pop
outs
jae
mov
jo
cmp
xlat
xor
sub
mov
aas
dec
xor
sti
sahf
jmp
or
outs
ins
dec
neg
test
xchg
and
adc
push
add
and
or
out
ror
push
jo
xor
xchg
and
int
(bad)
jae
(bad)
int
repz
leave
sub
push
inc
xor
dec
adc
fist
out
sbb
jae
imul
cmps
loope
mov
ss
jge
jb
dec
out
jg
jnp
xlat
pop
dec
arpl
ins
and
and
and
xchg
pushw
rcr
das
imul
inc
or
adc
(bad)
call
outs
lods
fwait
mov
outs
dec
sti
push
gs
or
dec
pop
inc
add
addr16
fdivr
xor
lea
cmp
or
inc
or
movs
xor
sbb
add
inc
inc
inc
cdq
sti
pop
nop
push
daa
(bad)
push
dec
aaa
push
xchg
lock
inc
inc
adc
push
jmp
jbe
push
inc
dec
and
xchg
dec
rep
iret
jmp
sbb
pop
adc
pop
gs
and
bound
jnp
and
add
inc
add
sbb
sub
ins
mov
dec
mov
adc
cmps
and
mov
sbb
add
inc
cmp
inc
stos
push
popa
sub
xor
and
nop
jo
popa
sbb
xchg
jb
push
leave
pop
pop
xchg
mov
stc
and
outs
add
mov
test
in
outs
loope
add
dec
or
int3
pop
ret
xchg
dec
dec
inc
push
sti
ins
shl
xlat
fs
movs
das
xor
ins
dec
push
add
sbb
jb
push
jno
je
dec
add
jne
rcl
mov
daa
mov
ret
sub
imul
add
ins
das
and
xor
pusha
jo
xor
das
xchg
icebp
mov
inc
jne
mov
add
or
fdivrp
or
sbb
sbb
pop
pop
jbe
popa
inc
jb
inc
je
inc
mov
jecxz
arpl
ja
adc
add
and
add
add
push
add
ret
dec
and
push
frstor
or
gs
je
xlat
dec
pop
xor
in
int
sub
jmp
sub
mov
add
cmp
xchg
lds
(bad)
add
fs
iret
mov
pop
enter
inc
dec
push
ror
or
inc
sbb
inc
cmove
add
jne
retf
adc
das
sbb
or
sti
cmps
pop
ss
xchg
inc
ss
dec
pop
div
popa
jb
popa
je
dec
xor
pop
shl
dec
outs
jbe
dec
sbb
in
lods
sbb
push
inc
int3
popf
mov
sub
outs
and
cmp
jae
js
inc
ret
mov
pop
loope
xor
inc
outs
outs
imul
jb
stos
mov
push
jb
imul
rcr
bound
jnp
jno
pusha
xchg
lds
inc
jne
pop
pop
pop
in
icebp
mov
push
pop
daa
inc
outs
cwde
scas
addr16
mov
sub
fwait
xor
dec
std
jno
(bad)
mov
das
inc
int3
pop
mov
pop
xor
dec
adc
cmp
adc
add
push
add
iret
je
pop
push
outs
push
outs
imul
push
lahf
dec
outs
inc
cmp
xor
cmp
mov
imul
mov
mov
pop
xor
or
sbb
xchg
xchg
dec
sub
and
and
push
mov
aaa
inc
pop
dec
xchg
ss
sub
arpl
pop
inc
ja
(bad)
das
test
mov
popf
push
jns
add
imul
lods
jmp
mov
add
ins
popf
cmp
sub
loop
jmp
vmwrite
test
or
das
std
rol
mov
push
mov
fbstp
call
add
je
sub
dec
arpl
jnp
sahf
fld
scas
xor
mov
and
sbb
dec
retf
scas
push
xor
lahf
outs
jmp
dec
add
sahf
jb
fnsave
pop
add
adc
inc
retf
fist
adc
fadd
outs
and
cdq
ins
xchg
outs
and
push
and
jns
jmp
cmp
test
xor
ja
out
mov
nop
outs
cmp
addr16
add
outs
sti
jp
add
in
(bad)
dec
dec
(bad)
ins
adc
fbstp
aaa
rol
inc
and
cmp
cmp
rcr
(bad)
stc
or
xchg
and
adc
fld
aas
push
adc
and
ret
dec
xor
xchg
jae
outs
fwait
push
mov
mov
xor
add
rdmsr
add
push
imul
xor
dec
and
ins
xor
jno
push
and
adc
je
add
outs
adc
and
xchg
sbb
movs
push
inc
imul
sub
retf
add
adc
push
mov
and
sub
das
add
pop
ins
movs
ja
test
mov
dec
push
adc
loope
mov
dec
fwait
sbb
cdq
je
mov
inc
pop
cmovs
dec
pusha
cmp
dec
sbb
push
adc
push
out
xor
xchg
add
imul
int
sbb
cmp
jnp
arpl
adc
jae
jmp
pop
or
mov
icebp
imul
neg
lea
fst
popa
fs
popa
fstp
add
add
push
or
(bad)
loopne
test
imul
sbb
and
int
and
inc
sbb
sub
xor
cmp
add
push
test
ret
cmp
push
mov
sti
fiadd
sub
push
sub
cmp
mov
popa
xchg
shr
jp
push
jl
and
mov
inc
fwait
dec
fwait
jmp
adc
xor
add
inc
pop
shl
pop
sub
xor
ss
xlat
jne
pop
sub
or
add
xor
inc
sub
add
sbb
gs
add
xor
and
jmp
mov
mov
xor
or
xor
inc
cmp
dec
aaa
jnp
add
xchg
les
sbb
pop
loope
jge
sub
es
xlat
xor
pop
push
add
cmp
movs
arpl
jne
mov
lea
mov
xor
rcr
sbb
(bad)
pushf
(bad)
popa
(bad)
sub
aaa
adc
pop
mov
daa
dec
xor
xchg
dec
lock
jae
imul
shl
es
dec
daa
iret
or
jecxz
add
or
mov
or
or
xchg
sub
cmp
ret
or
addr16
adc
rcl
xor
jno
push
es
jmp
push
jg
shl
mov
mov
test
sbb
pop
pop
loopne
or
push
xchg
bound
pop
cmc
jnp
test
mov
pop
leave
or
retf
fld
jecxz
push
xchg
inc
add
or
pop
fisttp
(bad)
sub
fst
das
cmp
je
adc
mov
cmp
sbb
pop
add
loope
pop
in
adc
mov
jmp
ins
nop
cmp
popf
inc
sbb
cmp
arpl
jge
pop
daa
or
aas
inc
push
mov
jns
push
sub
es
repz
add
ret
stos
ss
mov
jmp
sub
push
sub
jae
xchg
adc
mov
scas
loope
mov
lds
mov
mov
add
ins
sub
cmps
pop
pop
ret
dec
pop
add
das
add
sbb
inc
push
arpl
xor
les
pop
push
lahf
enter
dec
daa
ret
and
pop
xor
or
mov
xlat
or
ss
dec
dec
sbb
loope
retf
sub
lods
add
or
jl
push
arpl
or
fisttp
add
mov
jo
or
and
mov
sbb
pop
lahf
and
jo
inc
pop
inc
sbb
xchg
bound
(bad)
rcl
adc
rcl
nop
adc
xchg
je
mov
cmp
mov
test
je
xor
leave
inc
mov
ins
test
jae
add
adc
xor
xor
push
cmovl
dec
sub
or
jb
inc
or
fdiv
push
arpl
fadd
or
idiv
sbb
mov
or
sbb
mov
xor
hlt
retf
push
xor
imul
and
adc
jo
xor
mov
adc
pop
add
mov
pop
xchg
jmp
add
mov
cmp
iret
and
add
dec
retf
jno
xor
js
das
and
pop
outs
gs
ficom
add
daa
dec
ins
out
int3
adc
xor
arpl
and
or
or
jp
or
xor
ds
fwait
inc
xor
pop
cwde
mov
dec
pop
js
js
mov
xchg
sbb
ins
movntq
out
inc
cmp
scas
sti
rol
and
jo
call
imul
mov
sti
into
push
popa
cmc
out
out
jnp
jno
out
jns
xchg
daa
xor
shl
test
fisub
mov
call
int
in
adc
and
out
sbb
jecxz
popa
out
sub
jo
pop
inc
test
push
loop
out
bound
arpl
loope
inc
xchg
(bad)
jnp
fidivr
and
inc
pop
sub
(bad)
fadd
dec
or
cmp
mov
inc
std
push
out
cmc
js
sbb
fwait
adc
cs
push
mov
popa
and
or
dec
mov
and
inc
xor
jmp
test
popf
jne
xchg
bound
fnsave
je
repz
dec
into
push
ret
inc
ss
xor
leave
xor
(bad)
pop
js
dec
jno
sbb
and
add
aaa
add
popa
enter
imul
mov
(bad)
jge
add
add
ins
ins
outs
mov
jo
inc
movs
inc
dec
sub
ja
stc
lods
fimul
jbe
inc
je
dec
sub
loopne
jge
cmp
je
ret
dec
and
adc
je
bound
jb
mov
iret
imul
ja
iret
adc
jbe
inc
imul
les
pushf
mov
cmps
jns
jmp
enter
addr16
gs
push
(bad)
mul
jnp
pushf
push
mov
addr16
dec
mov
sbb
nop
mov
iret
fs
cs
icebp
dec
mov
(bad)
mov
pop
cmp
mov
xor
aaa
pop
add
pop
xor
cmp
xor
sub
sub
xchg
push
jne
xor
stos
xor
mov
pop
leave
add
add
stc
into
inc
fs
xor
xor
retf
test
arpl
push
jl
and
jb
outs
enter
pop
pop
in
nop
add
push
push
js
sub
add
mov
loop
and
and
or
test
mul
add
lods
cmp
inc
pop
dec
test
js
add
mov
inc
or
shr
push
sbb
dec
aaa
add
cs
out
add
test
add
int3
inc
mov
in
sub
push
jle
jg
mov
call
or
mov
mov
inc
or
lock
(bad)
fimul
loope
mov
push
or
jae
push
call
adc
add
add
or
ins
mov
mov
add
adc
add
jg
dec
es
cmp
outs
out
jns
sbb
push
test
in
mov
jmp
or
xchg
fucomip
mov
or
xchg
mov
mov
loop
cwde
cmp
adc
into
or
das
push
inc
sbb
dec
fidivr
xor
arpl
fld
jmp
mov
dec
xchg
cmp
aaa
or
or
push
cwde
push
xchg
adc
and
mov
pushf
push
adc
and
push
scas
mov
lock
pop
jae
mov
xchg
and
sbb
jl
nop
jl
cmp
nop
hlt
popf
in
inc
push
hlt
lea
(bad)
sti
pop
lock
cmp
xor
dec
xchg
push
fmul
push
pop
cmps
mov
push
sti
sbb
enter
push
cmps
xor
popa
addr16
in
in
ret
sbb
test
cdq
fs
add
movs
sbb
pushf
cwde
pushf
pushf
jl
test
xchg
sub
and
mov
xchg
fcom
pop
adc
xchg
sub
repnz
xchg
fs
imul
test
repnz
add
test
or
fdiv
mov
or
push
lea
push
push
sub
add
dec
xor
pop
and
fsub
adc
lods
adc
enter
pop
aam
xor
rcl
es
nop
ror
nop
rcr
out
mov
push
iret
push
dec
mov
and
cmp
push
loope
int3
pop
int3
pop
or
push
push
or
or
and
les
nop
pop
leave
push
push
shr
or
push
mov
ins
fisttp
test
push
(bad)
mov
inc
push
mov
push
in
mov
test
cwde
mov
mul
neg
sbb
add
data16
rcl
push
je
add
and
test
or
push
pop
outs
mov
das
call
inc
cs
or
mov
nop
mov
getsec
xor
add
sbb
mov
mov
fs
add
add
jae
push
js
mov
les
shl
test
mov
push
loop
int3
in
and
xchg
push
push
jns
test
mov
or
dec
push
shl
rcl
pushf
fmul
ret
or
and
or
xchg
or
inc
mov
mov
enter
lods
and
test
inc
mov
cmp
pusha
pusha
cmp
and
int3
(bad)
sbb
pop
push
int3
pop
int3
add
fcom
retf
jbe
push
cdq
mov
add
or
sbb
fdiv
inc
psadbw
fsub
and
cmp
(bad)
lea
ss
mov
ror
xchg
out
push
xchg
dec
pusha
(bad)
int3
rol
imul
mov
jecxz
call
and
adc
aad
or
rcl
jns
adc
fsubr
sub
push
add
cmp
js
mov
js
adc
fdivr
pusha
and
lea
or
cmp
dec
lea
lods
xchg
retf
aaa
data16
push
adc
enter
push
xchg
test
cmp
xlat
or
inc
(bad)
adc
movs
movs
enter
movs
mov
mov
in
cmp
cwde
cwde
fs
dec
cwde
mov
mov
sbb
inc
outs
sub
mov
xchg
test
xor
xor
add
xor
leave
and
nop
nop
lahf
neg
ja
mov
xchg
addr16
lods
mov
clc
lea
dec
lds
dec
fdiv
enter
outs
lods
mov
sub
lea
imul
xchg
or
les
xor
and
test
imul
pushf
inc
nop
xchg
inc
inc
cli
pushf
dec
rcr
pop
cmove
jne
(bad)
enter
pop
or
popa
add
pop
daa
push
and
jb
int3
mov
loopne
push
xor
outs
mov
movs
push
or
xor
sar
movs
(bad)
int3
sahf
jle
push
mov
inc
(bad)
popa
mov
adc
ret
cmps
shl
mov
inc
push
pop
or
xor
fistp
push
test
ins
je
push
into
(bad)
test
(bad)
mov
cmps
test
int3
scas
enter
add
pop
cmc
pushf
jp
cmp
and
cmp
cwde
push
dec
mov
sbb
mov
test
mov
add
das
xor
icebp
sbb
xor
or
retf
pusha
jno
out
inc
test
inc
and
ret
xor
xor
jl
xor
ficom
ss
shl
test
or
pop
mov
mov
sbb
pop
(bad)
jl
aam
xor
pop
es
push
inc
test
xchg
out
push
int3
in
icebp
push
sbb
sbb
lea
xchg
out
sar
test
xchg
mov
mov
xchg
ja
xor
and
les
fcom
adc
test
test
sub
mov
fld
ins
add
out
int
mov
popf
xchg
xchg
inc
push
je
push
pop
pop
call
xchg
shl
pop
push
jb
jg
cld
sbb
inc
dec
inc
xchg
fdiv
fdiv
call
mov
mov
cmps
xchg
sar
mov
inc
call
lea
jbe
jb
inc
mov
mov
inc
mov
or
xchg
sub
push
sub
nop
pop
test
and
je
lods
fcomp
loope
dec
inc
sbb
and
add
mov
int3
or
and
push
sbb
les
or
js
xchg
lods
adc
dec
aam
mov
push
cmp
jbe
cmps
stos
inc
adc
add
and
sub
hlt
in
jb
adc
daa
pop
sbb
add
js
cmp
fldenv
mov
fsubr
add
and
sbb
cmp
fldcw
mov
sub
in
mov
popa
dec
mov
xor
add
adc
add
xchg
scas
icebp
sbb
je
add
stos
nop
xchg
inc
jo
push
and
(bad)
sbb
ins
jne
and
pop
inc
rol
ficom
push
inc
adc
adc
mov
test
or
mov
iret
ret
mov
add
pusha
in
popf
sub
adc
cmp
add
aad
int3
inc
outs
push
dec
inc
les
dec
ret
cs
pop
cmp
xor
dec
into
xchg
je
sbb
inc
in
sub
add
add
push
or
jno
shr
shr
mov
mov
mov
mov
int3
or
xchg
dec
fs
xchg
jmp
xchg
sub
xchg
or
fs
xor
pusha
pusha
pop
pop
jb
sbb
and
and
mov
pushf
nop
iret
pop
inc
inc
cwde
push
adc
test
adc
xchg
inc
xor
adc
pop
inc
and
mov
dec
push
in
push
push
or
sub
cmp
and
lods
dec
xor
add
push
jae
xor
inc
retf
pop
pop
popa
mov
inc
nop
rcr
cdq
dec
add
nop
inc
cs
inc
sbb
in
inc
inc
cmp
gs
rcr
fcomp
rcr
xchg
sbb
(bad)
gs
les
fs
(bad)
jnp
cmp
ins
popa
adc
inc
cld
inc
sbb
(bad)
leave
repnz
xor
fadd
cmp
or
inc
jb
xor
enter
xor
sbb
xor
and
jb
sbb
xor
and
fdiv
mov
add
and
inc
push
sub
nop
dec
push
in
and
or
sub
and
nop
inc
push
sbb
adc
add
and
mov
xchg
add
push
sbb
adc
push
fs
add
adc
add
inc
adc
xchg
pop
and
add
shl
xchg
pop
or
inc
cs
and
add
add
repnz
nop
add
cld
or
pop
test
or
dec
repnz
cld
cmp
enter
hlt
cld
popa
test
sbb
cld
dec
xor
pop
xchg
or
adc
rcr
or
inc
push
retf
xor
mov
test
int3
les
inc
inc
les
cwde
adc
in
mov
pop
test
add
dec
push
(bad)
and
jl
aam
jmp
enter
add
dec
and
and
jl
cld
cmp
push
pop
cmp
jne
adc
rcl
xchg
cmp
dec
je
ins
call
and
lock
fbstp
cmp
fsub
inc
and
mov
outs
and
sbb
pusha
in
sub
inc
(bad)
test
cmp
inc
xchg
or
pop
shl
leave
mov
jp
aam
cmp
sub
mov
add
pop
ret
sub
mov
or
jg
adc
cmp
clc
loopne
inc
jne
(bad)
adc
(bad)
push
mov
push
xchg
pop
adc
add
push
push
into
push
ss
xlat
or
fbld
ja
in
pusha
add
outs
or
and
call
add
mov
pop
push
or
adc
xor
add
and
adc
ins
add
aam
cmp
dec
push
mov
ret
push
add
sbb
cmp
mov
mov
adc
push
clc
pushf
sub
ja
jge
push
mov
sub
inc
loopne
xchg
pop
mov
(bad)
dec
popa
dec
inc
mov
inc
pop
enter
or
xchg
push
dec
nop
and
sbb
idiv
or
cwde
jmp
or
shl
push
ret
jnp
cld
inc
lds
int3
pop
in
sbb
inc
adc
pop
adc
adc
inc
mov
pop
adc
adc
icebp
push
jns
dec
test
inc
cmp
adc
add
cmp
inc
cmp
je
push
adc
xor
inc
or
sar
pop
inc
cwde
popf
fwait
or
out
adc
fldenv
nop
addr16
cwde
lea
mov
sbb
retf
loope
test
lods
sbb
add
das
push
sub
sub
inc
jbe
je
dec
jb
jge
in
push
(bad)
push
push
daa
addr16
(bad)
jl
push
sub
mov
adc
push
in
and
add
cmc
xor
sbb
nop
pop
leave
js
js
push
xor
push
js
test
and
pushaw
sbb
mov
(bad)
ret
xchg
pusha
gs
leave
test
adc
sub
test
jne
jmp
inc
inc
int
inc
leave
nop
jne
cli
fdivr
inc
retf
es
ds
call
ins
adc
push
xchg
(bad)
in
or
cmp
inc
inc
ds
xchg
push
xchg
sar
fwait
enter
cmp
repz
add
test
lea
fs
mov
push
sbb
push
enter
push
pop
nop
cwde
cwde
mov
xor
sbb
pop
dec
add
push
dec
jo
cwde
push
inc
inc
pusha
add
cdq
fs
pop
cmp
mov
xchg
inc
push
mov
dec
enter
inc
inc
inc
pop
jb
leave
cmp
or
dec
jae
xor
sub
enter
cmp
add
leave
sbb
fdivr
movs
mov
or
push
cmp
add
inc
push
jb
stc
clc
stc
test
inc
xchg
push
xor
lock
fsubr
stc
and
xor
xor
loopne
in
lahf
stc
fdivr
fdivr
js
dec
ja
add
pop
in
and
enter
inc
push
repnz
stc
mov
jmp
mov
lock
test
sbb
xchg
cmp
mov
ss
jb
sub
add
mov
sub
sbb
cmp
cld
ss
xor
sub
cdq
sbb
and
sbb
pusha
pop
pop
mov
and
and
dec
and
dec
sbb
inc
cmp
mov
xor
xor
and
sub
enter
sbb
daa
xchg
mov
push
jb
sbb
cmp
or
clc
clc
clc
fst
lock
das
sbb
adc
adc
xchg
xchg
loopne
fmul
mov
clc
sti
adc
pop
adc
movs
pop
enter
stc
sbb
adc
clc
mov
sbb
loope
inc
mov
or
and
xchg
add
clc
cwde
dec
push
in
cwde
cwde
sti
or
nop
xchg
out
js
or
cmp
in
js
or
nop
xchg
out
mov
xchg
xchg
xchg
add
pop
dec
push
in
pop
cmp
and
out
test
add
inc
cmp
or
and
mov
xor
(bad)
jae
clc
or
xor
fwait
sub
and
enter
in
mov
leave
test
cwde
dec
cli
mov
js
push
in
jae
(bad)
push
pushf
jl
mov
dec
sub
inc
xor
sbb
sub
pmulhuw
clc
std
call
jns
std
or
std
in
or
std
test
call
sbb
std
mov
js
es
and
stc
push
dec
dec
test
cmp
mov
cmp
xchg
clc
cld
add
enter
fdivr
inc
inc
pop
enter
cld
dec
repnz
push
enter
cld
mov
in
push
xor
js
push
pop
or
xchg
and
cmp
xor
or
sti
cmp
sbb
call
jb
test
sti
test
mov
inc
test
cwde
sti
nop
pop
repnz
mov
push
cmp
dec
xchg
dec
xchg
and
mov
repnz
sub
cli
call
xor
clc
add
xchg
mov
outs
inc
dec
adc
sbb
pop
xchg
xchg
xchg
and
sub
inc
inc
mov
pusha
in
inc
inc
dec
dec
and
adc
shr
xchg
lea
pop
pop
dec
pop
clc
daa
addr16
dec
in
test
cmp
call
(bad)
adc
jb
jb
js
test
xchg
xchg
fdivr
(bad)
(bad)
cmp
pop
ja
xchg
adc
cmp
cmp
mov
xor
enter
ftst
in
sti
sti
sti
adc
leave
leave
leave
push
into
leave
leave
enter
cmp
cmp
inc
add
mov
adc
sub
pop
es
mov
xor
movs
(bad)
pusha
pop
and
inc
push
push
sbb
cdq
pop
mov
and
sub
pop
jb
sub
inc
jb
dec
les
loopne
and
inc
jb
sub
inc
jb
dec
test
sub
cwde
shr
test
mov
cs
mov
in
pop
sbb
jns
rcl
pop
and
sub
mov
jne
in
popf
push
std
dec
dec
push
xor
(bad)
cli
shl
fadd
xchg
sbb
(bad)
jb
jae
xor
inc
scas
mov
and
enter
outs
fldcw
mov
add
xchg
fdiv
or
psubusb
xchg
test
sbb
inc
pop
shr
test
sub
not
aam
cmp
ins
jne
test
and
cmp
nop
mov
pop
adc
cdq
pop
jl
pop
jb
imul
gs
xchg
add
pop
jb
leave
test
mov
xor
cwde
nop
cmp
enter
enter
push
fmul
enter
inc
jp
cwde
adc
lahf
cmps
nop
sbb
(bad)
test
in
add
mov
add
adc
sbb
test
pop
cmp
sub
mov
jne
cmp
sbb
adc
jb
ret
mov
adc
and
xor
dec
sub
cmps
cmp
pop
push
mov
nop
or
inc
test
iret
adc
ret
bound
xor
imul
shl
inc
mov
cmp
mov
xchg
sub
pop
pop
lea
pop
and
lea
and
fcomp
mov
adc
jo
push
sub
fs
sbb
jns
mov
jmp
nop
xchg
or
cmp
cmp
inc
pop
out
jmp
ficomp
test
xor
je
dec
add
ins
inc
or
test
jne
push
scas
int3
inc
ins
and
add
fwait
shl
add
sub
inc
push
adc
popf
mov
adc
rcl
aas
not
cmp
fisub
ret
add
or
push
test
in
inc
dec
ret
lea
cmp
inc
and
adc
push
or
rol
jecxz
pop
out
fstp
sbb
jbe
dec
test
repz
cmp
daa
fs
xor
mov
sub
jge
dec
push
or
or
or
test
cmp
ins
xor
sbb
int3
addr16
pop
mov
mov
add
popa
push
jne
ins
pushf
dec
bound
or
mov
inc
and
pop
dec
iret
dec
jl
dec
ret
sbb
xor
fild
rcr
adc
adc
or
and
ret
pop
(bad)
repz
dec
(bad)
adc
xchg
ja
mov
push
hlt
pop
fldcw
xor
dec
lods
add
in
mov
jnp
mov
mov
push
push
lods
pop
sbb
inc
dec
push
sbb
fimul
adc
inc
jecxz
sbb
fadd
rcl
inc
inc
ss
enter
dec
mov
sub
jo
dec
xor
dec
mov
pop
xor
dec
lea
ins
frndint
lods
bound
xchg
dec
ss
out
add
xor
adc
inc
repnz
add
call
dec
aam
mov
dec
test
je
popf
cld
lea
movs
adc
(bad)
sub
movs
adc
adc
ins
ret
inc
test
leave
inc
push
or
ss
cmp
clc
or
or
or
in
ins
pop
inc
and
or
jbe
cmp
mul
xchg
or
cmp
cmp
enter
clc
add
xor
add
add
and
jb
cmp
fsubp
cmp
clc
cld
not
fwait
xchg
ins
sub
clc
test
neg
sbb
addr16
bound
sub
enter
les
pop
jb
xor
ss
les
cmp
inc
xchg
das
sbb
cmps
sub
xor
push
jo
mov
fs
add
outs
and
cmc
or
cmp
inc
cmps
inc
pop
push
adc
dec
push
or
mov
and
clc
cld
sbb
sub
imul
gs
adc
ret
test
and
and
push
test
add
xor
inc
inc
int3
or
ror
push
not
pop
xor
sbb
xor
xchg
les
ja
enter
sbb
fisttp
movs
jmp
fcom
dec
pop
gs
mov
xchg
push
add
dec
xchg
pop
sbb
ret
into
dec
call
pop
jmp
dec
outs
pop
sbb
and
mov
sbb
es
adc
leave
and
and
pop
xchg
and
nop
dec
mov
cmps
nop
stos
mov
pop
and
mov
pop
add
std
bound
sub
arpl
jb
xor
sbb
loop
xor
gs
mov
enter
test
pop
hlt
imul
add
or
and
jmp
data16
lods
jne
test
movs
out
mov
adc
ret
lahf
xchg
inc
cmp
add
sbb
lea
xor
jmp
xor
cmps
and
xor
xor
pop
sar
cmp
xchg
fbstp
call
push
push
adc
sub
sbb
nop
(bad)
jae
loopne
and
push
inc
pushf
cmp
push
fisub
cmp
shl
cwde
nop
pop
sub
ret
es
push
into
ins
mov
adc
test
inc
push
test
mov
int3
das
push
pusha
sbb
stos
ins
push
enter
inc
inc
movs
fs
enter
int3
push
movs
and
sub
and
or
xlat
inc
pop
dec
add
(bad)
sbb
dec
add
sbb
xchg
pushf
and
and
pushf
nop
and
inc
push
lock
push
lea
leave
push
enter
cmp
pop
and
pop
fist
bt
sbb
adc
daa
push
sub
and
sub
add
and
test
movs
leave
sbb
sub
fs
sub
add
add
ds
xchg
or
enter
ror
xor
pop
and
pusha
push
test
pop
ss
push
cmp
cmp
or
push
and
or
push
push
dec
sbb
push
and
push
push
enter
adc
pop
and
leave
mov
and
inc
adc
jb
fs
sbb
sbb
adc
sbb
mov
adc
or
or
in
or
cmp
and
sub
and
scas
nop
or
dec
scas
sbb
push
cs
in
xchg
js
push
inc
sbb
xchg
add
mov
nop
cmp
sub
cmp
adc
pushf
add
add
fs
jne
or
es
nop
(bad)
leave
enter
or
in
adc
cmp
xor
fwait
jae
fs
cmp
je
or
adc
xor
mov
jo
je
mov
jo
inc
sub
sbb
pop
repnz
cmp
dec
movs
inc
mov
sub
sbb
sbb
dec
and
and
push
gs
inc
fwait
lods
in
and
dec
dec
and
xor
xor
sub
popfw
mov
pop
repnz
aaa
fs
add
xor
dec
loop
and
push
aam
and
pusha
push
aam
neg
mov
xchg
test
loopne
or
(bad)
dec
sbb
push
cmp
clc
and
jns
div
div
mul
fs
hlt
test
pop
and
sbb
sub
and
test
lock
sahf
and
cld
not
neg
xchg
add
mov
in
and
sub
and
test
retf
dec
add
push
int3
push
pusha
xor
adc
and
aaa
sub
inc
pushf
stos
jae
and
xchg
inc
push
or
das
pop
push
ja
adc
leave
pop
pop
lea
dec
inc
add
mov
cmps
and
js
and
inc
inc
push
inc
arpl
dec
or
sub
ret
cmp
pop
pop
dec
add
adc
push
sub
pop
xor
jbe
nop
test
jnp
(bad)
or
daa
fucomi
add
xor
xor
push
ins
add
pop
or
adc
mov
push
pop
sub
(bad)
inc
inc
in
(bad)
clc
xor
cmp
cli
or
sbb
xor
push
adc
push
xor
leave
(bad)
adc
clc
or
cmp
cmp
cld
sub
cmp
sbb
cmp
push
cwde
jns
mov
enter
and
add
std
mov
dec
and
and
pop
push
or
mov
or
and
add
dec
mov
pop
push
fs
test
sbb
retf
push
or
mov
sbb
std
or
mov
or
mov
arpl
fs
mov
dec
push
fs
fs
and
push
test
add
leave
or
in
inc
mov
sub
xor
mov
mov
jge
add
in
fsubr
mov
fcom
les
xchg
test
push
inc
inc
inc
inc
inc
xor
adc
cmp
inc
add
(bad)
in
enter
(bad)
sar
test
add
fcmovu
(bad)
out
push
or
sbb
pop
cmps
fbstp
aam
pop
shl
in
add
das
lea
and
fist
sbb
es
or
in
push
add
adc
iret
out
or
fsubr
pusha
clc
call
push
stc
add
(bad)
sbb
(bad)
dec
je
into
adc
test
loope
cmp
bound
cmp
adc
pop
add
cmp
xor
into
mov
mov
in
jne
jmp
call
xlat
test
das
and
cmp
and
fiadd
mov
call
add
jle
imul
call
mov
jl
fwait
add
mov
mov
inc
(bad)
(bad)
out
loopne
push
mov
jae
and
cmp
scas
je
inc
lods
sti
mov
xor
adc
push
icebp
cmp
cmp
scas
mov
push
ins
mov
push
jo
popf
pop
and
sub
push
and
pop
stc
adc
pushf
xchg
call
jo
in
push
in
xchg
mov
sbb
adc
std
or
ins
ss
stc
dec
pop
add
inc
shr
push
stos
xchg
cmps
or
pushf
add
add
inc
push
add
mov
pop
pop
dec
sub
dec
ret
or
int3
or
je
addr16
push
pop
in
xchg
and
sbb
push
fdivr
out
sbb
and
inc
inc
les
ret
loope
ins
test
enter
into
jae
push
stos
pusha
enter
sub
and
adc
or
cmps
add
xchg
fcomp
add
sahf
lea
and
xchg
cmp
in
mov
outs
push
in
adc
or
dec
les
lods
sahf
and
scas
fs
or
aam
xchg
sahf
fmul
jb
xchg
fdivr
aam
retf
and
aam
xor
shl
loopne
call
enter
push
nop
in
lahf
or
jbe
movs
loop
mov
inc
fdiv
mov
sub
lock
mov
mov
stos
sub
jp
mov
and
cmp
leave
leave
leave
(bad)
es
xor
leave
leave
fld
fs
jmp
or
imul
sub
lock
sub
or
mov
fisttp
pop
in
add
fdiv
jo
sbb
and
inc
call
xchg
add
in
sbb
sar
fnstsw
das
sbb
lahf
and
pop
adc
div
push
in
sbb
pop
or
dec
push
pop
push
push
or
in
movs
add
pop
push
je
push
retf
test
jb
add
mov
es
nop
sub
sub
fcmovne
inc
push
ret
push
push
mov
aam
inc
rol
add
pop
das
jp
mov
fidiv
sahf
sbb
test
mov
loopne
loope
push
lods
xor
pop
or
add
xchg
jns
in
in
aam
push
ins
imul
std
rcr
push
sbb
aas
sahf
gs
jae
mov
xor
aam
add
pop
inc
sar
dec
push
inc
mov
enter
jmp
and
rol
out
xlat
adc
cmp
jl
ins
(bad)
jmp
retf
dec
sub
adc
push
dec
ins
adc
dec
and
mov
sub
xchg
stos
dec
jmp
sub
data16
addr16
fwait
imul
shl
mov
(bad)
xchg
lods
push
ret
xor
js
pop
push
cli
loop
sub
les
jbe
fdiv
xor
movs
stos
test
stos
(bad)
mov
push
inc
data16
inc
sbb
add
mov
pop
dec
add
adc
cwde
adc
and
icebp
sub
add
pop
inc
sar
jno
adc
fcomp
lods
dec
sub
fdivr
pop
adc
ins
loope
test
shl
jle
test
or
les
les
fcmovnbe
adc
xor
mov
inc
xchg
pop
rol
xchg
push
push
pop
xchg
fwait
test
sub
jbe
sub
in
mov
xor
mov
adc
sbb
pop
or
pop
lock
retf
cwde
add
xchg
or
jae
inc
cli
fmul
inc
add
fwait
cmp
and
test
(bad)
fdiv
sub
ret
and
sbb
in
xchg
(bad)
pop
mov
scas
push
and
mov
hlt
xor
mov
in
popa
push
out
nop
inc
sub
sbb
and
mov
add
sahf
adc
lds
push
mov
out
jge
add
mov
mov
push
or
xor
adc
pop
sub
imul
dec
stos
and
mov
mov
stos
xlat
ins
dec
leave
pop
sti
pusha
retf
div
dec
or
push
mov
out
add
mov
xchg
sub
lahf
xchg
in
cdq
xchg
push
adc
cmp
xor
xor
sub
and
xor
repz
xchg
inc
lods
mul
sbb
push
cld
or
pop
xor
out
dec
int3
stos
or
jmp
(bad)
jl
ins
push
in
out
cwde
mov
(bad)
(bad)
or
jmp
les
test
sbb
in
call
imul
and
inc
push
dec
xor
sub
fcomp
out
addr16
and
add
inc
les
mov
xchg
sub
enter
fdiv
inc
dec
dec
dec
and
stos
jmp
sar
fst
int3
sub
ins
sub
es
add
sbb
dec
adc
push
fdiv
inc
aas
push
mov
push
ret
in
pushf
aad
movs
(bad)
mov
pushf
pop
sahf
xchg
push
hlt
pushf
sub
sub
and
pop
add
fldcw
mov
cmp
scas
dec
fidivr
fdivr
mov
mov
loope
mov
and
and
inc
leave
imul
sbb
or
mov
fsub
or
sub
cmps
test
popf
mov
pop
xor
and
movs
arpl
mov
test
(bad)
test
stos
mov
pop
add
inc
dec
ret
mov
push
mov
adc
mov
pusha
sbb
fcom
xor
in
jp
ret
or
and
dec
scas
adc
sub
pop
stos
in
fdivr
sbb
jmp
loop
sbb
inc
repnz
adc
fcom
adc
shr
dec
je
int3
mov
test
arpl
add
fcom
dec
adc
pushf
sub
ins
fcom
xchg
pop
and
add
push
inc
jle
pop
fmul
mov
les
adc
mov
xchg
inc
fld
mov
mov
int3
xchg
inc
(bad)
rol
mov
clc
pop
push
mov
pop
in
or
add
sbb
fcom
dec
stos
inc
mov
aad
jmp
adc
leave
cmp
add
xchg
shl
cli
sub
cdq
dec
sbb
nop
mov
rcl
pushf
ss
ins
sub
push
cwde
adc
mov
(bad)
mov
mov
nop
fistp
xchg
outs
enter
mov
enter
xchg
push
pushf
test
rdtsc
ss
push
mov
jge
add
stos
mov
inc
fisttp
jmp
lods
ins
(bad)
push
or
popa
mov
sbb
sub
ins
mov
fimul
mov
cmp
das
mov
or
cmp
packssdw
or
pusha
add
jo
adc
(bad)
push
test
lahf
cmps
sar
pushf
and
gs
ins
push
out
out
dec
rcr
mov
inc
jns
add
push
pop
ds
imul
or
lods
jae
aaa
pusha
pop
jne
jo
xlat
cmp
cs
add
rcl
or
add
sub
add
xor
push
sub
mov
adc
mov
push
xor
xchg
jmp
enter
rcr
fs
mov
das
pushf
jo
and
data16
cdq
ins
mov
fcomp
fsubr
xchg
and
movs
cmp
xor
fs
push
mul
jecxz
jp
test
cmp
xchg
mov
xchg
in
push
push
or
sub
stc
adc
xchg
push
sub
sub
lods
xchg
lea
cs
nop
lahf
in
xchg
pop
dec
movs
or
in
push
cmps
fcom
xor
outs
clc
call
and
or
loopne
push
loop
iret
jb
pushf
add
sti
add
dec
xor
rcl
enter
mov
sbb
in
ror
and
cdq
xchg
pop
enter
pushf
add
lahf
aam
repnz
xchg
mov
mov
ins
inc
sbb
arpl
loopne
push
push
out
xchg
sub
pushf
inc
sbb
xchg
xor
push
adc
shl
mov
or
test
je
nop
push
dec
adc
rol
mov
test
inc
sahf
stos
ins
fs
or
hlt
mov
and
movs
test
stc
pop
daa
add
and
xor
(bad)
std
xchg
sahf
enter
inc
int3
(bad)
enter
jb
int
jb
mov
pop
frstor
ds
sbb
push
lods
inc
inc
dec
dec
jb
or
aaa
mov
adc
jl
gs
ins
retf
or
adc
leave
je
pusha
lahf
mov
sahf
or
mov
sbb
aas
sbb
push
adc
inc
adc
mov
pusha
dec
jp
movs
enter
cmp
fsub
inc
fdiv
retf
or
adc
test
js
mov
jp
inc
inc
sub
and
in
adc
cmps
cmp
iret
add
cmps
add
pushf
cmps
adc
enter
je
push
nop
out
mov
jo
cdq
js
stos
jo
fld
add
jp
mov
test
push
enter
add
test
sub
cmps
xor
adc
gs
sbb
adc
and
jo
dec
leave
xor
add
xchg
pop
add
jp
stos
inc
or
add
jo
push
jb
sbb
stos
fild
das
js
sbb
cmp
lods
dec
lods
in
dec
es
les
inc
inc
sub
add
lods
sbb
and
nop
lods
jo
push
enter
scas
sub
or
pushf
scas
jo
push
jbe
and
lock
jo
cld
mov
scas
add
sbb
movs
jns
push
pop
and
arpl
addr16
fldcw
xchg
mov
jb
lds
mov
xor
jae
xor
add
fst
xor
add
mov
mov
sbb
sbb
fnstcw
(bad)
(bad)
and
dec
enter
add
xor
(bad)
cwde
xchg
scas
sub
add
add
nop
rcr
inc
sbb
arpl
es
enter
lods
jns
test
or
mov
or
dec
sub
nop
jl
fwait
sub
sbb
shl
ins
mov
ins
add
pop
leave
lock
cmp
mov
cmp
in
call
xchg
mov
cmp
leave
mov
enter
xchg
sub
or
fs
in
or
enter
daa
pusha
mov
mov
inc
pop
or
xor
add
das
sub
pop
push
xor
jb
add
in
cmp
inc
xchg
adc
enter
icebp
enter
pop
jbe
fs
hlt
mov
and
cmp
call
mov
mov
push
add
push
and
xchg
xchg
les
push
add
inc
or
jb
fs
or
mov
xchg
pop
bound
adc
ret
ret
outs
and
dec
loopne
adc
add
xor
jmp
je
adc
les
lock
imul
pop
dec
mov
xor
les
push
les
adc
dec
xchg
sub
cmp
ins
test
push
inc
pop
js
add
pop
retf
add
adc
inc
pop
pop
and
mov
enter
push
clc
call
nop
or
push
jo
or
adc
mov
or
and
dec
call
ror
or
mov
xchg
inc
and
add
mov
xchg
mov
movs
ins
out
mov
push
mov
adc
xchg
inc
or
inc
jno
enter
and
cmp
inc
dec
(bad)
(bad)
push
cwde
xchg
cwde
jl
inc
inc
call
or
inc
inc
cmp
rcr
cwde
xchg
and
dec
cmp
mov
inc
nop
fisub
mov
mov
or
sub
xchg
sbb
iret
mov
test
mov
test
sbb
add
cmps
mov
movs
cmp
sbb
data16
pop
push
add
fmul
jl
pop
leave
sbb
xor
fs
js
js
inc
xchg
inc
lods
lods
cmp
or
mov
mov
pop
add
dec
repnz
push
les
xchg
xor
rcr
mov
mov
cmp
int3
jl
xor
mov
rcl
or
mov
mov
cmp
mov
add
(bad)
push
ret
inc
(bad)
test
push
(bad)
jo
in
inc
jo
push
int3
mov
stos
adc
jae
test
mov
ins
pusha
push
leave
and
sub
dec
xor
mov
mov
cmp
test
call
sbb
adc
fs
inc
ds
push
pusha
pusha
pusha
cmp
test
test
xchg
xchg
inc
inc
arpl
ret
cwde
movs
ret
movs
cs
xchg
inc
xor
mov
or
inc
add
sbb
shl
add
test
retf
add
enter
xlat
mov
movs
dec
dec
arpl
retf
addr16
mov
js
jb
pop
dec
movs
stos
push
sbb
(bad)
nop
retf
mov
jecxz
xor
push
pusha
push
leave
and
sub
dec
xor
mov
mov
sbb
ret
test
call
add
adc
push
cmp
sbb
enter
push
xchg
xor
mov
xor
push
sbb
add
loope
xchg
mov
add
sub
push
les
(bad)
(bad)
add
jmp
inc
inc
inc
xchg
or
push
cmp
leave
and
jb
cmp
add
enter
inc
enter
(bad)
xor
mov
sub
pop
add
int3
mov
leave
and
jb
sub
push
xor
adc
or
and
and
and
xor
sbb
sbb
adc
or
sbb
nop
or
pop
ret
jo
and
or
mov
lods
std
(bad)
and
sub
jb
pop
adc
enter
adc
or
push
xor
or
and
jb
or
xor
adc
and
add
inc
mov
xor
and
je
and
in
adc
push
popa
adc
lea
and
xchg
pop
scas
mov
inc
adc
lea
pop
and
push
call
jbe
and
jns
pop
and
or
retf
in
loop
sbb
or
fcomp
add
mov
inc
and
and
inc
cwde
scas
xor
jecxz
(bad)
rcr
test
sbb
clc
call
lahf
cwde
add
int3
std
leave
xchg
push
and
std
enter
mov
or
ret
rol
inc
adc
or
cmp
mov
xor
inc
sbb
adc
leave
mov
mov
or
or
lods
lods
leave
sbb
or
inc
xor
inc
and
adc
and
add
push
in
pushf
pushf
test
nop
sub
fs
xchg
nop
sub
cmp
fs
mov
mov
int3
adc
mov
dec
mov
in
sbb
test
sbb
test
cmp
in
js
fs
sub
add
xchg
nop
aas
adc
ficom
mov
cdq
or
movs
mov
fs
lods
add
leave
adc
mov
jmp
sbb
sbb
or
inc
xor
and
fs
sbb
or
pop
pop
mov
add
push
push
dec
dec
add
mov
jmp
sbb
mov
dec
push
cmp
dec
inc
scas
xchg
inc
dec
dec
mov
dec
inc
adc
sub
push
stc
dec
lods
fs
test
fiadd
xchg
or
dec
jmp
cmp
push
xor
adc
or
xor
xor
xor
add
enter
rcl
nop
push
cld
(bad)
cld
(bad)
and
adc
sub
inc
mov
scas
and
or
sbb
or
inc
xor
adc
movs
cmp
adc
push
(bad)
xchg
mov
nop
pop
or
push
fisubr
sbb
sub
fs
nop
or
add
in
sbb
add
sub
mov
cld
clc
cld
hlt
sub
fisub
adc
enter
cld
hlt
cld
hlt
cld
and
push
fwait
sub
or
inc
jbe
call
xchg
or
xchg
cld
in
loopne
sbb
or
in
lock
call
fcom
scas
fdivr
mov
cld
fdivr
mov
(bad)
aam
ret
and
xchg
add
or
int3
cld
int3
cld
and
enter
pop
enter
in
adc
and
popf
pop
retf
aaa
fs
cs
les
sahf
cmp
mov
xor
dec
mov
mov
mov
dec
loop
scas
mov
in
nop
mov
mov
cs
call
repnz
lods
lods
lods
xchg
or
inc
test
pop
and
mov
mov
jb
pushf
cwde
and
and
mov
mov
pop
and
jb
xchg
xchg
xor
adc
xchg
or
push
mov
mov
test
pop
fisub
in
dec
test
(bad)
loopne
loopne
and
movs
mov
mov
fstp
lods
mov
mov
test
jb
adc
jmp
and
dec
xor
and
cmp
and
je
jo
pop
xchg
dec
jo
ins
mov
pop
test
adc
dec
fsubr
test
pop
sahf
mov
adc
nop
fs
pusha
nop
stos
fs
pop
pop
pop
scas
dec
sbb
push
jecxz
nop
inc
push
push
(bad)
cmp
inc
push
push
jmp
int3
mov
mov
add
scas
dec
sbb
nop
mov
sbb
inc
inc
scas
dec
es
cmp
in
nop
cmp
pop
test
fimul
dec
rcr
pop
and
scas
xor
or
inc
xor
xor
sub
leave
sbb
or
and
jns
and
and
cld
fs
test
int3
fcmove
or
es
inc
adc
sbb
dec
xchg
sbb
sbb
xchg
pushf
pop
xchg
adc
and
pop
xor
adc
adc
daa
push
or
push
add
leave
or
enter
test
enter
sbb
daa
dec
and
in
add
add
sub
cdq
add
cld
sti
xchg
cmp
mov
sti
clc
sti
clc
jns
jb
sti
clc
sti
hlt
sti
xchg
pop
sbb
lock
test
enter
fiadd
xchg
pop
leave
les
sub
in
mov
nop
in
or
call
shr
ret
dec
mov
dec
add
fdivr
jmp
sti
rcl
cdq
adc
shr
retf
aam
les
or
pushf
and
sti
sar
stos
xor
int3
(bad)
int3
loop
sbb
nop
daa
xchg
(bad)
sti
(bad)
sti
inc
push
arpl
ror
pop
mov
adc
or
inc
push
dec
sbb
rol
mov
add
mov
mov
or
jns
inc
sub
pop
pop
add
xor
mov
dec
mov
or
or
ucomiss
ror
int3
mov
xchg
inc
and
pop
aam
mov
dec
mov
sbb
sub
inc
popa
aam
inc
clc
call
inc
dec
mov
or
xor
js
rcr
mov
retf
dec
enter
push
(bad)
cs
mov
sbb
repnz
and
and
jb
lods
lods
inc
mov
jns
call
test
mov
pop
inc
cmp
movs
nop
pop
jb
and
cmp
and
jmp
cdq
xor
inc
enter
xor
cmp
inc
ror
xchg
cmp
dec
mov
popa
xchg
dec
pusha
outs
xchg
mov
add
mov
popa
cmp
and
and
nop
sti
dec
add
cmp
test
push
pop
add
dec
dec
test
retf
xor
ins
test
mov
adc
adc
std
mov
mov
sbb
mov
mov
xor
jecxz
cmp
xchg
ins
call
aam
push
push
xchg
les
or
mov
pop
push
sar
test
(bad)
stc
xchg
lock
movs
push
mov
or
push
cmc
mov
mov
and
cmp
call
popa
mov
xor
std
mov
shr
or
sub
xchg
leave
retf
cmp
and
add
loopne
add
or
xor
clc
mov
rol
cmp
das
fsub
mov
push
shl
xchg
jno
cmp
mov
ret
ins
movs
or
add
jo
add
clc
add
push
inc
xchg
xor
call
sbb
fidivr
ret
ucomiss
xchg
movs
push
(bad)
adc
push
add
call
pop
clc
or
push
inc
push
adc
enterw
jb
add
add
enter
repnz
push
sub
add
stc
jb
sahf
xor
mov
test
sub
clc
daa
push
data16
mov
push
push
or
push
ret
enter
arpl
or
int3
xor
outs
daa
rol
mov
ins
xchg
js
mov
xor
sub
push
cmp
les
int
data16
cmp
push
and
pop
fadd
(bad)
adc
dec
cmps
mov
add
repz
test
add
or
fsub
fdiv
inc
jne
sbb
mov
movs
jno
mov
enter
sbb
adc
push
scas
and
je
cmp
fwait
popa
lea
stos
mov
std
adc
fwait
xor
push
push
or
and
mov
hlt
cmc
xchg
je
lea
test
sbb
dec
add
dec
push
or
shl
loope
mov
push
lahf
inc
leave
mov
popa
jae
test
jno
(bad)
std
aas
je
or
xor
sbb
inc
xchg
fs
cmp
pop
dec
dec
fisub
cmp
or
sub
dec
es
cld
inc
iret
and
lock
int3
cld
les
xor
nop
cld
(bad)
cld
mov
and
add
dec
xor
test
xchg
clc
scas
aam
sbb
xor
ret
out
int3
and
xchg
xchg
or
cld
cld
repnz
push
in
mov
pop
mov
imul
mov
inc
fs
movs
mov
je
test
xchg
dec
inc
int
pushf
dec
inc
xor
nop
mov
test
sbb
cli
jl
adc
mov
mov
cli
push
fs
(bad)
cli
mov
add
imul
cdq
test
pop
int3
mov
dec
xor
dec
and
int
pusha
inc
or
daa
xchg
mov
hlt
stc
or
cmp
xor
repnz
iret
int3
stc
(bad)
stc
(bad)
stc
mov
mov
sub
and
dec
xor
mov
sbb
sbb
add
or
and
push
xor
and
hlt
clc
in
sub
nop
cld
aam
mov
xchg
(bad)
mov
clc
sbb
adc
aaa
ds
pop
sbb
pushf
je
shl
sub
les
test
and
mov
sti
aam
jns
dec
add
inc
push
enter
je
xchg
add
dec
fs
push
sti
cdq
nop
xchg
xchg
xor
and
in
enter
je
cli
sbb
paddq
mov
pmulhuw
cli
je
cmp
daa
and
push
cli
enter
xor
and
in
dec
adc
stc
xor
nop
pop
repnz
aam
mov
repnz
sahf
mov
stc
xchg
stc
enter
je
adc
stc
in
inc
push
push
stc
xor
push
push
daa
in
adc
(bad)
fldenv
fmul
dec
mov
sar
cli
adc
in
fs
mov
xor
(bad)
in
cmp
je
mov
repz
(bad)
hlt
add
mov
inc
not
mov
daa
daa
daa
(bad)
hlt
add
daa
fisttp
inc
cld
es
stc
adc
and
wrmsr
dec
mov
scas
xlat
enter
add
push
mov
push
fs
cmp
add
inc
xor
out
inc
or
push
mov
enter
std
enter
pop
enter
fs
add
ins
cmc
jo
and
jo
mov
sub
in
sbb
enter
repz
repz
mul
repnz
cld
idiv
test
dec
cld
idiv
idiv
repz
xor
cmp
repz
std
hlt
je
sahf
data16
hlt
hlt
push
lock
addr16
dec
push
hlt
div
leave
leave
and
repz
rcl
lock
dec
inc
push
in
inc
in
and
sbb
cmp
in
xchg
xchg
xchg
dec
inc
in
xchg
out
nop
in
pop
loopne
sbb
pop
in
adc
mov
call
ret
push
das
mov
push
xchg
iret
lea
dec
push
ss
or
add
cmp
push
std
pop
in
inc
out
std
je
and
cmp
pop
jb
jns
std
pop
std
pop
std
dec
dec
mov
push
xchg
dec
into
dec
pop
adc
pusha
cmp
nop
xchg
fs
cmps
inc
push
push
xor
add
add
scas
or
adc
dec
cmc
mov
and
ror
loopne
adc
xchg
aaa
leave
test
jbe
or
fbld
enter
mov
les
jp
or
jmp
jo
or
pusha
cmc
hlt
shl
dec
mov
fld
or
or
push
cmp
mov
add
popa
dec
jl
das
enter
pop
and
hlt
pop
pusha
push
push
sub
outs
test
xchg
push
push
sub
sbb
dec
add
jno
dec
and
and
test
xchg
and
jge
add
or
mov
sub
and
sar
jne
es
adc
and
jmp
pop
fnstenv
dec
push
xchg
xchg
mov
push
scas
pop
adc
pusha
xchg
add
or
sub
icebp
and
ror
jb
sbb
xchg
and
push
adc
cmp
cmp
je
xchg
movs
cmp
cmp
mov
aam
in
mov
hlt
mov
xchg
mov
fs
adc
cmp
mov
movs
cmp
cmp
mov
aam
out
shl
add
adc
xchg
xchg
xchg
xor
push
fs
je
xchg
movs
in
in
add
adc
hlt
dec
dec
into
loop
clc
adc
xchg
adc
jmp
push
dec
into
push
nop
fs
adc
mov
dec
dec
dec
(bad)
aam
hlt
xchg
xchg
adc
clc
adc
push
sub
adc
xor
or
mov
xchg
pop
aaa
mov
sbb
add
xchg
xor
lea
jo
pop
or
stos
mov
sti
or
cli
mov
pop
mov
imul
add
int3
enter
ror
enter
pusha
pop
pop
push
enter
push
dec
dec
inc
enter
inc
cmp
xor
enter
sub
or
sahf
xchg
out
cld
in
int3
popf
pop
(bad)
xlat
or
stos
pop
adc
cmp
repz
test
cmp
push
lea
or
xor
(bad)
je
mov
mov
in
arpl
pop
pop
mov
call
mov
jge
add
fsubr
aam
add
int3
push
dec
xor
push
xor
sbb
scas
sbb
mov
sti
ret
cmp
jmp
enter
adc
mov
push
test
mov
and
and
mov
and
dec
jae
inc
adc
loopne
push
inc
inc
sbb
rcr
pop
rcl
sbb
hlt
cmp
xchg
push
scas
sub
out
push
adc
call
popf
jnp
add
cs
inc
xchg
mov
fwait
push
pusha
mov
bound
cmp
call
jp
and
cwde
(bad)
imul
dec
popf
push
lea
adc
aaa
ins
sbb
xchg
jmp
mov
out
pop
mov
rcl
inc
mov
ret
sbb
inc
jns
sub
xor
fisubr
xor
inc
pop
ret
jl
ja
sbb
pop
mov
push
fst
mov
loopne
inc
shl
add
add
xor
adc
les
mov
ret
cmp
into
stos
pusha
and
jb
mov
in
(bad)
or
push
adc
xchg
out
dec
mov
add
dec
fadd
pusha
clc
mov
sar
ret
ds
(bad)
inc
jp
add
ja
xchg
pop
mov
fwait
lea
in
es
or
and
and
int3
push
and
test
mov
xor
outs
popa
rcl
mov
add
scas
js
xchg
scas
or
sub
enter
sub
sahf
into
out
xchg
xchg
mov
cld
in
bnd
cld
cld
cld
jb
sbb
sbb
xor
mov
and
and
stos
int
cwde
outs
stc
or
push
in
int
mov
es
pop
enter
add
inc
movs
dec
leave
leave
pop
les
push
push
adc
leave
push
adc
fs
cmp
mov
and
sbb
ins
and
sbb
bound
push
imul
rol
sub
loop
adc
shl
loop
xor
in
inc
xchg
jae
rcr
sar
xor
xor
sub
push
xor
es
jg
lods
xchg
xchg
add
lods
sub
in
fs
pop
movs
pop
or
and
stc
push
push
loope
leave
test
push
xchg
or
sbb
xor
inc
dec
push
cdq
push
clc
dec
nop
inc
cmps
in
cmp
or
cmp
sbb
fiadd
mov
inc
inc
inc
fimul
into
dec
dec
dec
inc
inc
dec
adc
jb
xchg
jno
fs
inc
mov
adc
cmp
or
fimul
jge
xchg
fiadd
or
je
lods
push
jnp
sbb
mov
neg
dec
cmp
xchg
xchg
and
pop
int3
jl
stos
cmp
repnz
sbb
out
or
add
movs
sub
cmc
(bad)
int
push
pop
pusha
fld
dec
cwde
shr
pop
and
pop
in
loope
adc
push
mov
call
pop
xor
cmp
xor
jmp
cmp
dec
xor
adc
adc
call
loopne
test
cli
or
dec
push
arpl
and
pop
test
cmp
and
and
arpl
dec
arpl
repnz
enter
push
sbb
adc
dec
mov
enter
in
mov
push
sbb
movs
sbb
or
stc
push
inc
xor
adc
ret
add
test
arpl
push
and
add
idiv
and
adc
mov
push
dec
inc
xor
jo
pop
in
arpl
rol
inc
sbb
in
in
dec
adc
ins
and
daa
pop
fs
and
xchg
inc
arpl
loop
movs
frstor
and
push
(bad)
push
pusha
add
dec
pusha
arpl
into
pop
mov
cmps
es
pop
arpl
mov
nop
or
sub
(bad)
dec
push
push
pop
loop
sub
jmp
inc
jae
dec
push
and
inc
cmove
repz
test
stc
or
sbb
aas
fstp
sahf
imul
call
nop
in
xor
fsub
inc
dec
cmps
in
sti
mov
sub
dec
or
ins
mov
ins
adc
xchg
add
push
fstp
adc
std
push
sbb
sar
mov
ror
add
xor
ss
enter
cmp
stos
and
cmp
pusha
ss
or
fs
sub
mov
add
sbb
or
push
ret
stos
call
pop
lds
xchg
nop
push
ins
(bad)
or
push
inc
nop
rol
stc
add
push
inc
psubb
push
test
fadd
ret
sub
retf
shl
sub
test
inc
inc
mov
inc
movsx
push
push
repnz
sbb
mov
cmp
mov
cs
mov
fdivr
push
push
sbb
fsubr
sub
mov
test
mov
inc
push
mov
mov
inc
cmp
lahf
mov
or
fdivr
inc
xor
xor
and
jl
xchg
and
xchg
cmp
push
push
js
nop
push
nop
adc
mov
xchg
push
pop
inc
add
(bad)
retf
cmp
int3
mov
cmp
inc
inc
mov
add
mov
xchg
gs
mov
or
adc
sub
add
inc
push
nop
mov
or
or
popa
push
xor
fstp
add
sbb
and
in
fsubr
or
xor
pop
movs
inc
pop
add
sbb
mov
lods
mov
add
sbb
or
fcom
push
retf
dec
and
lods
gs
sub
push
sbb
push
movs
pop
out
or
inc
cmp
cmp
scas
mov
sbb
mov
mov
adc
pop
cwde
out
imul
fild
data16
sub
xor
fwait
jae
mov
push
imul
or
iret
sub
push
add
mov
adc
add
es
mov
mov
add
in
mov
add
push
adc
es
inc
sub
sbb
jb
ja
push
add
dec
enter
or
int3
sbb
or
retf
outs
mov
repnz
push
pusha
sub
mov
repnz
xchg
or
loopne
enter
and
popa
push
aam
lods
daa
iret
pop
ja
in
push
push
and
sub
xor
dec
mov
cwde
mov
or
enter
dec
mov
add
rcr
ins
jns
push
adc
push
dec
push
jb
ret
add
dec
loopne
and
retf
jb
and
pop
mov
inc
sbb
dec
popa
jo
or
shl
sub
jmp
das
push
fwait
movs
cdq
and
add
dec
push
cwde
imul
mov
or
pop
les
rol
(bad)
loopne
sbb
jae
adc
dec
(bad)
or
nop
mov
mov
push
lds
sbb
cmp
pusha
call
lea
mov
popf
inc
pop
nop
cli
jnp
mov
mov
test
faddp
or
pusha
pop
enter
push
add
addr16
mov
les
cvtpi2ps
xchg
mov
dec
mov
out
adc
call
xchg
adc
add
imul
mov
out
inc
cmp
lods
xchg
and
mov
popf
nop
mov
popf
add
pop
mov
mov
js
int
inc
xor
adc
nop
pop
pop
dec
pushf
xchg
xchg
add
sub
sbb
test
movs
sbb
or
jo
add
adc
inc
inc
dec
mov
push
cmp
push
mov
in
pop
in
mov
(bad)
pop
arpl
call
mov
pop
fcomp
aaa
pop
mov
sbb
sar
jmp
(bad)
lods
xor
cmp
adc
or
or
repnz
stc
mov
sub
xor
xor
inc
js
repz
mov
mov
and
movs
or
sahf
and
sbb
dec
sbb
nop
xor
jb
push
xor
mov
xchg
and
add
mov
and
xchg
enter
pop
cwde
fisttp
add
cwde
mov
sbb
pop
jo
cli
pusha
dec
mov
nop
inc
adc
mov
arpl
fstp
push
scas
push
fnclex
std
sahf
mov
into
and
xor
inc
or
jl
pop
add
mov
xor
std
mov
test
out
inc
adc
pop
stos
enter
test
outs
dec
adc
es
pop
inc
or
sub
adc
cli
push
sub
pushf
add
cmp
dec
push
jg
adc
sahf
inc
add
adc
mov
icebp
sbb
dec
push
dec
ss
dec
add
jge
inc
std
dec
xor
add
pop
popa
push
mov
clc
test
sub
dec
enter
js
adc
loope
scas
push
push
inc
ret
aam
adc
fs
sub
mov
shl
jg
adc
push
in
sbb
test
sub
outs
or
push
pop
loop
mov
adc
or
jne
frstor
cdq
mov
add
or
imul
jmp
enter
jmp
jno
imul
gs
out
stc
xor
mov
jbe
mov
jle
jbe
xchg
(bad)
xor
stc
xor
lock
add
xlat
adc
mov
mov
in
repnz
stc
push
stc
push
data16
popf
adc
sbb
cmp
fst
push
ror
dec
stc
ret
adc
xchg
out
dec
mov
fcom
mov
push
mov
in
movs
dec
inc
es
cmovo
sub
test
dec
loopne
dec
or
aaa
mov
cmp
icebp
pop
leave
adc
pop
je
or
mov
mov
je
enter
rcr
add
jge
xchg
push
sbb
lods
add
iret
or
mov
inc
add
adc
clc
cmc
(bad)
jmp
int
pushf
lock
lock
add
(bad)
sub
lock
arpl
inc
ds
or
ror
int
arpl
sbb
jo
repz
pop
repnz
clc
mov
arpl
mov
sub
or
mov
mov
ficom
add
stc
cmp
and
test
mov
push
cmc
xor
cwde
cmp
leave
mov
mov
jb
and
and
adc
add
data16
sahf
jo
dec
mov
shl
cdq
fs
dec
sahf
fld
push
pop
ficom
sub
dec
xor
and
outs
inc
sahf
inc
idiv
fstp
xchg
xor
xor
xor
xor
and
and
sahf
dec
and
neg
in
and
int3
mov
adc
mul
mov
or
xchg
add
cmp
inc
push
push
arpl
hlt
lock
xchg
nop
or
xchg
xor
hlt
loopne
fwait
ins
dec
test
les
rcl
inc
dec
dec
sbb
test
add
retf
jns
mov
loopne
daa
movs
pop
rcl
dec
sbb
pusha
push
es
sbb
add
clc
inc
clc
xor
enter
adc
clc
lock
mov
jge
mul
enter
not
nop
pop
jb
not
inc
div
inc
mov
not
test
lock
idiv
repnz
push
mov
mov
in
sbb
mul
push
pop
mov
int3
and
and
adc
clc
(bad)
mov
sub
leave
fldenv
adc
lock
jg
dec
inc
inc
xchg
cmp
jmp
loopne
test
addr16
(bad)
idiv
cmp
fwait
jo
mov
sar
stc
add
sbb
sub
mov
add
xchg
pop
xchg
ins
push
add
dec
pop
adc
jbe
jle
test
xchg
sub
inc
pop
mov
inc
std
sahf
hlt
pop
add
mov
cli
adc
mov
mov
jne
pop
inc
sub
fs
inc
push
aam
sbb
dec
dec
adc
and
iret
add
test
ftst
and
cmp
or
adc
in
in
in
in
or
mov
in
ret
in
jnp
mov
(bad)
hlt
mov
fwait
pop
scas
shl
hlt
sub
mov
hlt
loopne
mov
push
and
mov
push
out
mov
mov
ins
mov
mov
out
in
xchg
add
mul
cmp
sbb
and
mov
in
dec
xchg
sbb
and
lods
lods
pop
test
nop
inc
inc
test
lods
xchg
ror
test
(bad)
fdivr
dec
inc
sub
jbe
mov
xchg
adc
inc
cmp
xchg
pushf
and
push
mov
xchg
sbb
stc
push
stc
dec
dec
add
add
inc
fyl2xp1
stc
jbe
or
push
sub
daa
cmps
push
dec
xchg
es
inc
push
inc
dec
and
and
xor
pop
mov
sub
stc
je
aas
push
sub
cmp
hlt
pop
push
or
add
aas
lods
lods
cmp
cmp
fisttp
cmp
into
sar
sbb
mov
pop
icebp
cld
mov
sub
dec
xchg
ins
pop
in
jns
cmp
mov
dec
and
nop
data16
out
icebp
mov
inc
push
and
push
int3
mov
sub
out
cmps
xor
jbe
movs
jle
js
sub
sbb
pop
mov
stc
js
(bad)
int3
mov
leave
shl
scas
inc
adc
mov
pushf
sti
or
mov
icebp
pushf
ror
add
mov
sub
xor
cmp
pop
vprotb
and
or
nop
push
(bad)
fldenv
hlt
dec
inc
cwde
nop
xchg
xchg
pusha
jo
mov
pusha
mov
loopne
aam
cmp
lock
inc
mov
push
sub
in
pusha
jo
mov
es
mov
sub
dec
dec
lock
jb
and
and
jb
adc
xor
rcl
pusha
rcl
cmp
aam
pop
enter
jmp
add
repz
sbb
sbb
or
jb
sahf
add
mov
sub
or
add
neg
cld
pop
inc
dec
arpl
popa
fs
data16
popa
outs
or
sbb
add
push
or
cmp
lods
add
dec
or
xchg
add
std
xchg
outs
fs
imul
mov
or
imul
push
mov
and
test
push
inc
add
add
mov
inc
popa
push
add
nop
add
add
push
add
(bad)
mov
mov
cmp
call
push
add
dec
outs
daa
int3
mov
push
xor
leave
sbb
call
fiadd
rcr
mov
pop
pop
nop
leave
sbb
fild
or
imul
add
or
jmp
push
inc
dec
push
pop
push
dec
dec
dec
pop
mov
sub
and
mov
fild
cwde
jl
imul
add
and
add
bound
inc
xchg
inc
inc
arpl
pop
rol
mov
xchg
mov
int3
cmp
xchg
adc
or
sub
pop
sbb
in
popa
jmp
add
add
jno
je
in
popa
jl
ror
call
and
js
inc
mov
dec
add
jmp
add
or
xchg
or
outs
mov
inc
add
jle
gs
dec
sub
sbb
sub
leave
shl
mov
or
rol
and
adc
sub
or
jno
xchg
pop
fs
add
(bad)
push
je
test
or
adc
inc
xchg
movs
jl
mov
xchg
nop
xchg
sub
fst
jmp
out
xchg
sbb
sahf
fs
xor
mov
pop
push
les
cwde
fsubr
push
mov
add
and
mov
dec
push
mov
and
sub
push
(bad)
arpl
add
into
add
add
iret
fsubr
or
loopne
sidtd
add
or
jo
hlt
pop
mov
xor
add
add
out
sub
mov
add
test
adc
stos
pop
test
add
(bad)
mov
mov
jbe
outs
stos
cmp
mov
rcl
jbe
scas
loope
popa
arpl
adc
inc
pusha
cs
or
push
sti
add
fidiv
jg
inc
or
cs
jb
ret
retf
fist
daa
add
sar
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
