out
sti
jb
adc
out
mov
(bad)
call
call
std
inc
movs
bound
dec
xor
adc
jbe
xor
mov
adc
test
in
fisub
loop
xchg
cwde
and
out
xchg
inc
push
hlt
jge
and
pop
push
bound
pop
jp
mov
xchg
shl
(bad)
mov
xchg
pushf
dec
aas
aad
pop
in
aad
mov
sbb
stos
mov
pop
pop
and
(bad)
loope
shl
push
ins
sbb
cmc
sar
into
stos
pop
fmul
jl
mov
jns
mov
imul
pop
ret
mov
mov
mov
pop
mov
mov
or
mov
fistp
mov
xor
add
int3
out
push
sar
jl
call
xor
mov
sub
dec
adc
pop
pop
dec
aad
mov
dec
jmp
xchg
push
gs
adc
sub
jb
aas
in
daa
cmps
outs
and
and
xchg
fwait
cmp
in
in
rol
xchg
xchg
stos
jb
mov
stos
push
push
pop
cmp
enter
ret
xor
mov
fstp
push
fwait
popa
mov
fistp
in
gs
call
mov
push
xchg
push
inc
jmp
mov
jp
add
test
test
xchg
xchg
rcl
mov
ret
dec
cs
(bad)
adc
push
or
cdq
sub
pop
xlat
imul
mov
jmp
lods
jg
pusha
add
or
movs
xor
stos
lods
sti
add
fcom
loopne
inc
push
test
mov
sar
jae
add
ins
mov
stos
mov
mov
iret
mov
push
mov
jge
jae
xchg
mov
loope
cmps
sbb
(bad)
leave
add
xor
sbb
mov
xchg
loopne
in
jnp
mov
ret
or
out
fcomp
add
xchg
and
push
int
or
jp
fcom
sbb
pop
jmpw
pop
inc
inc
xchg
adc
ins
fiadd
aas
and
pop
movs
xor
pop
(bad)
mov
add
hlt
inc
stc
(bad)
out
mov
stos
push
push
xchg
pushf
adc
stc
les
test
push
jmp
and
ret
add
repnz
in
in
daa
test
not
sub
or
arpl
stc
sbb
and
pop
movs
lea
and
jmp
fldenv
pop
jbe
(bad)
adc
out
pop
mov
scas
pop
xchg
or
mov
lds
mov
mov
dec
xchg
adc
sahf
lds
cwde
addr16
je
and
imul
mov
dec
inc
daa
mov
jae
mov
fst
(bad)
inc
add
scas
jp
xchg
inc
dec
or
mov
rol
mov
xchg
pop
in
mov
or
mov
cmp
mov
inc
or
pop
mov
or
(bad)
outs
adc
ins
cmp
movs
xchg
shr
sub
hlt
inc
js
or
inc
daa
mov
sbb
xor
dec
jno
out
fs
fdivr
mov
add
dec
aaa
and
test
retf
mov
add
fsubr
push
mov
loopne
int
inc
add
scas
xor
aam
outs
pop
xchg
add
loop
push
add
add
pop
sbb
cmp
cmp
scas
mov
(bad)
sub
pop
mov
mov
test
lods
sub
dec
in
out
outs
and
pop
aad
data16
gs
cmp
mov
jnp
inc
test
imul
dec
mov
push
sti
and
xchg
mov
imul
pop
inc
ins
sub
or
outs
xchg
cmp
adc
jmp
aam
stc
xchg
mov
xor
in
sbb
iret
idiv
mov
outs
mov
inc
jp
popf
sub
adc
mov
out
cli
cwde
daa
push
sbb
inc
jle
sbb
add
mov
aas
dec
in
push
mov
pop
ss
pop
jmp
(bad)
(bad)
push
xchg
dec
out
sub
ss
jl
push
jmp
inc
inc
mov
dec
xchg
xchg
movs
in
jne
sar
jl
add
sbb
and
add
inc
jne
(bad)
dec
push
imul
or
outs
dec
xor
jns
sbb
inc
fld1
xor
jmp
xchg
aaa
das
jmp
test
and
add
(bad)
in
jge
test
mov
aad
lea
clc
pop
or
inc
inc
ret
enter
mov
jl
rcr
or
call
fwait
nop
popa
(bad)
fsub
(bad)
fmul
jno
ss
pop
xchg
lock
pop
imul
sbb
push
or
mov
data16
sub
data16
loopne
add
cmp
into
imul
push
or
mov
jle
jmp
push
dec
mov
mov
dec
jmp
fsubr
add
in
or
push
test
loopne
pushf
daa
and
mov
mov
pushf
inc
popf
and
dec
sti
fstp
or
jmp
inc
xor
lahf
add
aaa
shl
mov
adc
and
xor
adc
rol
mov
jno
out
jge
sbb
lods
jno
mov
adc
cs
in
sbb
jg
std
in
push
and
add
popa
lock
shl
ds
or
and
cmp
fidiv
xchg
mov
add
push
cld
sbb
(bad)
lea
mov
adc
jne
jmp
test
push
test
retf
hlt
jbe
xor
sub
cdq
and
mov
cwde
inc
mov
or
lahf
push
xor
mov
jp
add
in
dec
jp
add
dec
add
push
xchg
xor
repz
scas
mov
or
ja
push
lods
mov
xchg
or
jle
leave
rcr
and
sbb
hlt
pop
mov
je
loop
loopne
loop
(bad)
push
mov
pop
push
cwde
test
push
nop
pop
pop
(bad)
enter
and
cmp
ret
loope
fld
jae
sbb
nop
and
mov
scas
stos
jmp
sbb
fs
iret
repnz
sub
sbb
iret
sub
dec
imul
aam
(bad)
push
mov
js
sub
(bad)
sub
or
pop
sub
je
in
imul
jae
sti
jns
imul
mov
jb
push
loope
unpcklps
dec
gs
pop
and
jl
mov
or
push
lods
retf
scas
mov
addr16
imul
adc
sub
mov
pop
mov
add
fwait
ins
or
add
pop
xchg
icebp
inc
jge
or
fadd
push
jg
test
dec
nop
iret
aaa
jp
out
into
imul
push
add
ret
jnp
sub
scas
xchg
and
and
stos
mov
mov
jl
dec
mov
jle
xor
shl
pop
int
adc
inc
movs
hlt
dec
sub
xor
fadd
mov
push
and
mov
cld
cs
into
add
aad
aad
mov
scas
sub
mov
popa
push
ins
xor
pop
dec
ss
out
inc
sub
xchg
adc
or
adc
out
cmp
lods
pushf
mov
push
cmps
mov
cmp
sahf
jmp
push
jno
loop
(bad)
mov
pusha
inc
inc
movs
mov
test
add
fnstsw
and
push
add
ftst
mov
xor
push
jnp
inc
inc
repz
pop
bswap
mov
pop
dec
popf
pop
sub
pop
(bad)
les
scas
ja
sub
push
or
out
test
shl
retf
pop
adc
js
xchg
mov
test
cdq
pop
jns
ja
push
mov
mov
sub
mov
fistp
cmps
ins
lock
(bad)
adc
or
into
pusha
mov
adc
(bad)
out
fldenv
scas
push
mov
jg
inc
mov
xchg
mov
cmps
dec
popa
xchg
sbb
mov
mov
clc
lods
inc
icebp
iret
in
clc
and
cmps
ret
add
add
add
shl
mov
pop
mov
xchg
fmulp
frstor
push
mov
(bad)
ins
int3
pop
sti
mov
das
mov
mov
fsub
jg
sbb
pop
ss
mov
dec
out
sub
rcr
fild
sub
retf
clc
jno
jnp
jo
mov
inc
cld
(bad)
xchg
jp
adc
jnp
call
rol
int3
or
enter
out
jno
(bad)
(bad)
push
push
add
inc
mov
adc
fs
popa
push
xchg
dec
in
pusha
jno
jbe
sub
mov
in
loope
push
imul
mov
sbb
mov
repz
fcom
adc
lds
xor
stc
dec
mov
xor
adc
out
push
test
lahf
mov
mov
daa
je
push
xor
jg
rol
out
jl
push
pushw
or
pop
(bad)
xor
pop
enter
cmps
xor
in
sub
jmp
dec
cmp
pop
cwde
ror
lods
cli
xchg
push
jo
repnz
xlat
(bad)
mov
and
pop
mov
mov
adc
rcr
jb
pop
inc
mov
int3
fs
sub
mov
dec
push
pop
pop
mov
in
dec
or
ss
mov
cmps
mov
add
cmp
fmul
mov
das
data16
bound
aad
or
mov
sub
cli
sub
xchg
repnz
pop
adc
xchg
adc
xor
jb
mov
hlt
daa
jecxz
popf
mov
pop
ja
loopne
lock
cld
xor
pop
mov
sti
in
imul
cdq
(bad)
mul
xor
lock
sub
scas
add
jecxz
repz
out
xor
je
dec
jmp
sti
pop
repnz
sar
mov
inc
push
(bad)
leave
xor
lds
jbe
popf
ret
imul
mov
loope
pop
shl
les
clc
dec
mov
aad
sub
sbb
sub
xor
ins
test
add
pop
push
psubd
cli
jne
xor
sbb
retf
loopne
imul
cmp
push
dec
jle
or
in
push
(bad)
mov
retf
push
adc
mov
je
rcr
mov
shl
repz
mov
jnp
jno
or
loop
jae
pop
or
popa
outs
test
jne
idiv
or
mov
xor
aaa
rcl
mov
sub
mov
call
es
in
mov
jp
xchg
in
pushf
int
cmp
and
mov
sbb
dec
shl
pop
(bad)
jmp
xchg
jmp
push
push
mov
mov
inc
das
rol
add
neg
mov
pop
cmp
(bad)
xor
mov
push
push
xor
loop
in
sbb
mov
dec
sbb
mov
mov
or
cs
add
lock
jns
adc
dec
mov
pop
sbb
lock
in
in
addr16
bnd
jl
jo
cli
jge
mov
je
jo
mov
and
sbb
ja
outs
mov
jbe
outs
sahf
int
fucomip
mov
push
icebp
stos
sti
mov
cmps
lods
call
jle
scas
aaa
fadd
adc
std
sbb
push
jp
xchg
jo
test
outs
inc
cmp
loopne
and
rol
dec
and
popf
sbb
sub
add
xchg
lahf
xor
mov
imul
scas
dec
aaa
fnstsw
popa
aas
sbb
dec
push
jmp
cmp
inc
mov
mov
adc
inc
int
cmp
add
call
cmps
(bad)
fdiv
lods
xchg
ret
mov
dec
and
cmc
xor
sub
es
mov
fs
fldenv
icebp
aas
addr16
push
mov
data16
popa
ins
ja
mov
push
xchg
out
jecxz
mov
sahf
ins
pushf
dec
pop
adc
cmp
mov
fcom
mov
xchg
jno
cmc
and
scas
fadd
adc
jle
js
call
jg
das
cmp
pop
dec
adc
not
(bad)
mov
jle
jnp
mov
shl
or
aaa
(bad)
hlt
pop
push
inc
pop
mov
adc
test
jl
or
fisub
xchg
push
mov
nop
mov
not
bswap
sahf
je
outs
mov
or
jae
popa
ret
outs
fdivp
jle
(bad)
push
push
and
fdiv
outs
jae
daa
and
mov
add
xor
push
out
and
and
or
xchg
call
or
fdiv
pop
icebp
mov
call
sar
cmp
push
jmp
stc
inc
add
push
aas
fwait
and
sbb
mov
adc
push
push
cmp
adc
test
and
popa
retf
mov
in
xchg
dec
sub
push
int
cmp
iret
xor
jo
mov
xor
pop
push
xchg
mov
inc
leave
push
nop
data16
aas
mov
mov
stc
adc
fild
push
inc
push
mov
push
and
movs
imul
cmp
push
sub
mov
mov
movs
xor
mov
scas
sub
retf
in
arpl
std
jmp
xor
cmp
aam
push
mov
adc
scas
dec
mov
pop
pop
mov
cld
stc
cmp
stos
dec
pop
ds
ret
add
int
adc
add
mov
inc
ins
pop
punpckhbw
mov
push
out
ret
ins
aad
ret
add
test
dec
pop
pop
retf
and
mov
(bad)
fs
xchg
mov
mov
mov
lahf
cs
xlat
bound
inc
ins
mov
push
push
loope
and
fwait
pop
test
xor
loop
fisub
imul
daa
lods
mov
or
adc
jns
popf
(bad)
repnz
lea
sbb
or
push
data16
repnz
mov
imul
inc
xor
arpl
or
(bad)
arpl
add
outs
retf
(bad)
xor
sub
test
cmp
das
pop
mov
mov
jecxz
sub
or
mul
gs
and
addr16
xlat
add
xchg
jnp
pop
in
and
add
xor
sub
cmp
or
ins
add
idiv
dec
rcl
lods
stc
aas
jp
ficomp
fiadd
sbb
pop
push
push
pop
setl
mov
mov
or
ds
mov
push
inc
pop
movups
scas
add
stos
loop
jnp
jns
mov
loop
add
icebp
shr
and
mov
scas
add
das
fadd
fucomi
and
or
jae
push
fst
adc
mov
jmp
cmps
mov
call
cmps
repz
ds
mov
dec
cs
data16
xchg
ins
jb
mov
sbb
dec
jae
bnd
lods
and
pop
xor
pop
sar
push
pop
das
ror
dec
sub
jecxz
stc
fistp
sub
inc
jmp
stos
xor
shl
daa
lea
call
ds
lahf
movs
cmp
mul
retf
jmp
and
push
push
rcl
retf
(bad)
jmp
inc
xor
adc
lahf
ins
addr16
mov
pop
fistp
or
jmp
push
in
fsub
sbb
mov
mov
pop
adc
int
xor
xchg
mov
retf
int
dec
lds
idiv
pop
push
mov
imul
(bad)
sti
out
pop
in
aaa
jp
not
bound
imul
(bad)
jns
bound
jmp
out
mov
adc
mov
cmp
es
out
sbb
cmp
std
add
iret
sti
adc
mov
cmps
lahf
in
lock
adc
dec
dec
test
and
fisub
or
cmp
clc
mov
icebp
inc
ins
aam
pop
arpl
push
cmp
dec
cmp
push
fisub
lods
test
ja
retf
lods
outs
popf
pop
rcl
dec
(bad)
mov
(bad)
test
jp
or
rcl
icebp
ficomp
inc
and
test
leave
inc
xchg
mov
dec
cvtdq2ps
aam
mov
adc
mov
in
pop
inc
and
push
push
xrelease
arpl
inc
mov
jg
mov
mov
(bad)
jecxz
ret
mov
jg
mov
bnd
call
imul
mov
jge
xchg
dec
rcr
mov
(bad)
and
pop
mov
adc
stos
das
repz
dec
lods
in
cmp
mov
pop
jp
sbb
mov
aad
inc
je
jp
mov
mov
scas
(bad)
inc
je
mov
bound
in
lds
shl
fucomip
ins
stc
lock
sbb
add
jg
in
push
ja
in
lahf
mov
cs
pop
aad
mov
jmp
mov
or
in
jo
jecxz
xor
xor
mov
out
aam
pop
mov
cdq
jo
dec
or
mov
pop
popf
xchg
sbb
xchg
pusha
sti
mov
add
mov
repz
stos
(bad)
in
test
pop
loopne
jb
xor
mov
adc
cmp
cli
frstor
dec
push
dec
push
clc
call
leave
ss
add
push
mov
and
mov
jp
sbb
outs
adc
mov
pop
jo
es
mov
pusha
mov
inc
sti
outs
adc
and
in
sbb
add
mov
(bad)
pop
stc
sub
mov
sub
adc
or
movs
dec
pop
gs
or
jl
pop
pop
dec
test
pop
sbb
cdq
or
mov
xchg
aad
adc
xchg
aad
pop
push
mov
int
daa
mov
push
gs
mov
dec
or
push
(bad)
loopne
stos
pop
ins
xchg
in
xchg
ss
xor
mov
jge
mov
adc
icebp
out
ror
pushf
or
movs
sti
sbb
inc
push
dec
mov
sbb
mov
lock
jmp
es
dec
popa
mov
mov
sahf
jb
jmp
push
and
add
lea
push
xchg
ss
jnp
or
add
stc
xlat
jmp
test
pop
dec
add
clc
cmp
stos
jbe
inc
(bad)
cli
js
test
(bad)
and
(bad)
sub
push
not
test
xchg
jb
jecxz
ror
xor
test
mov
stos
icebp
and
mov
arpl
or
jmp
xor
and
sbb
or
inc
jmp
cwde
bound
mov
xlat
inc
(bad)
dec
ret
cmp
and
mov
push
add
ror
imul
adc
sbb
mov
popf
or
in
xchg
dec
or
add
mov
pop
cmp
inc
fimul
cwde
das
test
jp
jns
sub
aaa
mov
mov
and
scas
rcr
dec
dec
test
out
ds
les
push
ficomp
test
push
jno
xor
movs
jp
inc
(bad)
push
cmp
jae
or
or
jecxz
mov
adc
inc
sub
in
js
mov
push
lock
dec
in
retf
push
cld
jo
in
enter
in
call
sub
dec
ins
adc
ret
mov
push
cmps
repz
xchg
fistp
mov
cmps
retf
(bad)
dec
add
jmp
or
cmp
xor
ret
or
mov
into
jmp
not
(bad)
xlat
sbb
inc
ins
imul
xchg
xor
dec
xchg
stos
js
test
ja
sub
pop
mov
pop
fwait
int
cwde
movs
scas
fs
scas
ss
out
jg
leave
mov
jo
add
and
jge
bound
push
pusha
loop
cmp
xchg
or
cmp
int3
inc
jmp
pop
popf
cmp
dec
jo
into
cmp
add
fdivr
test
add
jp
jl
imul
cmp
jg
mov
and
mov
push
pushf
cmps
mov
movs
stos
xor
push
and
sbb
inc
mov
aam
xor
xor
test
mov
popf
inc
adc
xor
xchg
cld
in
jecxz
popf
jp
hlt
arpl
mov
jmp
cwde
cmp
js
xor
shl
sub
and
cmp
xor
pop
outs
(bad)
in
jge
xchg
push
xchg
sub
cmp
mov
push
outs
cmps
and
cmp
(bad)
arpl
xchg
adc
pop
push
sub
sub
in
inc
loop
out
xor
jmp
bound
movs
imul
(bad)
fs
leave
retf
sbb
fiadd
(bad)
test
nop
mov
popa
xor
int
mov
cmp
lahf
loop
pop
arpl
or
add
jno
or
adc
aam
mov
stos
add
xchg
sbb
fstp
mov
xor
(bad)
push
or
pop
mov
into
sub
push
gs
adc
hlt
sbb
add
das
or
jbe
xchg
sub
mov
cli
bound
loop
and
pop
push
movs
mov
fisub
cdq
scas
repnz
xchg
cli
adc
rcr
test
jb
lds
popf
mov
scas
cmp
test
data16
and
mov
sub
cmps
lock
jns
cmp
adc
mov
das
or
scas
cli
in
sbb
out
or
(bad)
xchg
test
call
js
in
mov
jg
ret
sbb
mov
adc
aaa
aam
sbb
arpl
sahf
(bad)
xor
xor
in
inc
es
rcr
call
jmp
test
dec
adc
push
mov
pusha
rcl
pop
jmp
test
fs
dec
setle
(bad)
dec
test
jo
stos
ins
xchg
mov
sbb
add
xchg
or
idiv
sub
mov
mov
dec
pop
inc
add
call
cdq
sub
jle
rol
sub
sar
sar
inc
xchg
fild
mov
idiv
inc
mov
xor
push
adc
stos
retf
fadd
inc
cmps
push
jns
xor
mov
cmp
outs
arpl
cs
sar
mov
push
xchg
das
xchg
std
or
fld
fwait
stos
mov
(bad)
inc
sbb
(bad)
or
aaa
push
sar
sub
stos
(bad)
int3
adc
jb
outs
xchg
cli
daa
aaa
sbb
aad
clc
cwde
inc
jg
out
test
xor
mov
loop
pushw
stc
or
enter
sbb
iret
xchg
cmps
call
adc
jl
and
cmp
or
mov
in
jnp
add
jecxz
jmp
scas
(bad)
loop
xchg
or
cwde
add
add
sar
adc
pop
adc
mov
cli
aaa
scas
fcmovbe
imul
mov
jmp
fisubr
add
pop
pop
test
inc
scas
pop
mov
fs
mov
stos
pop
lods
lea
mov
stc
push
test
shl
pop
xchg
push
mov
imul
mov
and
mov
adc
ja
ret
out
bound
xor
adc
xchg
imul
(bad)
cs
sete
jle
sbb
dec
out
mov
mov
and
nop
inc
dec
mov
jp
fsub
dec
jg
movs
sbb
jge
cmp
repz
push
jl
imul
xor
dec
cmp
sbb
mov
push
jns
jbe
inc
push
nop
stos
getsec
lahf
xchg
scas
jb
lahf
ret
in
mov
aad
icebp
out
pop
push
mov
jmp
add
mov
hlt
gs
pxor
addr16
add
xchg
push
mov
cmp
aad
call
add
add
push
cmp
or
adc
call
add
ss
add
ja
xor
dec
aaa
sub
jmp
(bad)
pop
inc
shr
imul
inc
adc
or
push
adc
out
stos
jp
aam
adc
mov
xor
movs
or
mov
pop
add
mov
xchg
jne
dec
fidiv
xchg
call
stos
enter
icebp
jne
repz
push
popa
xchg
and
jmp
add
xor
lea
lods
dec
outs
jg
cli
popa
cmps
popf
imul
xor
cmps
imul
out
int
adc
pop
repz
cli
xor
adc
inc
lods
mov
lods
mov
stc
jg
adc
ds
pushf
jecxz
das
cmp
test
bound
pop
stos
fs
adc
cmp
lahf
bound
inc
xor
adc
aad
push
rol
(bad)
or
test
call
mov
pop
or
mov
pop
sub
dec
add
imul
call
adc
(bad)
sahf
xchg
daa
fcom
cmc
daa
in
mov
cmp
stos
movs
arpl
mov
sub
enter
ret
cmp
mov
mov
jns
sbb
mov
add
pop
stc
sbb
(bad)
xchg
pushw
adc
arpl
pop
outs
test
jae
xor
xchg
movs
loopne
sub
add
leave
jecxz
add
jmp
call
call
data16
dec
sub
mov
(bad)
cli
addr16
imul
in
pop
xor
mov
or
icebp
or
push
sub
push
cmp
call
mov
(bad)
aad
out
cmp
jg
push
and
or
nop
or
jp
(bad)
cmps
fs
retf
ins
gs
push
xchg
loope
daa
(bad)
cmp
pop
lds
or
das
sbb
lea
push
mov
ficomp
add
jge
xchg
mov
cwde
fldenv
cmp
ret
mov
mov
pop
pop
xor
lea
mov
sbb
push
arpl
xchg
push
push
mov
push
fcmove
sub
sub
imul
cmp
dec
sub
inc
fistp
aam
icebp
push
push
int3
stc
jbe
mov
add
add
cmp
ja
push
lahf
xchg
sub
adc
add
push
aad
test
inc
adc
daa
adc
push
hlt
nop
cli
dec
popf
or
repnz
pop
push
push
movs
loope
stos
(bad)
push
xchg
clc
cmps
(bad)
loope
mov
fldcw
xchg
push
or
mov
mov
mov
loopne
test
push
xor
bound
mov
retf
jle
xlat
xchg
push
xchg
call
xchg
shr
cwde
pusha
iret
pop
push
sahf
test
mov
mov
xchg
ror
ret
std
mov
das
ret
retf
aaa
xchg
icebp
call
cmp
jg
(bad)
sub
aaa
fimul
xchg
and
cmp
or
adc
outs
aad
lahf
int3
aas
popf
xor
push
call
data16
jge
mov
adc
sub
ss
cs
sbb
push
stos
and
jge
xchg
mov
mov
loope
fcomp
jb
mov
retf
neg
test
lahf
(bad)
mov
mov
gs
pop
mov
push
rol
mov
jbe
xor
jg
int
ins
adc
jns
push
popf
cmc
and
mov
inc
xchg
inc
les
dec
stos
mov
sub
mov
cmps
(bad)
iret
test
fisub
push
mov
mov
and
(bad)
jmp
jbe
push
test
jnp
outs
lods
ins
dec
out
dec
leave
fld
ror
push
mov
adc
adc
sti
inc
call
and
cmps
(bad)
pop
shl
push
or
(bad)
cld
jmp
add
pop
(bad)
(bad)
jbe
push
ret
ss
test
push
jmp
jp
sahf
inc
and
in
(bad)
xchg
push
push
aad
pop
cdq
push
mov
(bad)
and
jns
sub
cmp
push
sub
stc
in
and
inc
ficom
arpl
fsubr
mul
jnp
xor
and
xor
sbb
xor
and
mov
mov
xchg
int3
imul
pop
jmp
shr
push
push
data16
mov
cmps
in
mov
jl
or
adc
dec
pop
mov
sbb
stos
scas
stc
mov
bound
cld
xchg
add
sbb
retf
(bad)
pop
xor
cmp
scas
adc
in
jns
lahf
pop
or
mov
sahf
push
push
sub
dec
xchg
or
jecxz
(bad)
mov
inc
mov
mov
movs
xor
scas
aaa
fnstcw
call
jge
and
call
cld
cmp
sbb
xlat
pop
dec
cmps
push
xchg
cdq
xchg
bound
xchg
mov
stc
xchg
sbb
ja
and
(bad)
mov
jmp
jae
pop
or
test
out
(bad)
pop
sbb
sbb
test
mov
push
inc
repnz
mov
sbb
fimul
pop
retf
mov
out
repz
push
js
or
mov
push
inc
inc
aaa
xchg
out
fidiv
loope
mov
fs
mov
cld
add
sub
pop
std
inc
mov
adc
nop
cmp
inc
pop
lds
addps
inc
add
sub
sti
xchg
outs
shl
cmp
and
or
pusha
add
sbb
inc
push
jbe
jle
ret
and
mov
into
sbb
(bad)
push
out
rcr
xchg
aam
call
xchg
fnstcw
lods
hlt
lahf
cmp
movs
xor
rcr
cwde
ficomp
adc
shr
shr
clc
inc
inc
retf
push
jg
xchg
or
movs
xchg
aas
mov
and
jp
repnz
adc
loopne
mov
int
sbb
adc
lods
dec
xor
es
mov
adc
out
and
or
jae
lds
mov
or
xchg
daa
cmp
in
sbb
jp
xchg
pop
(bad)
mov
jae
xchg
inc
sbb
mov
retf
push
mov
stos
inc
jns
cmovge
pop
mov
inc
push
int3
cld
mov
push
js
lods
sbb
fs
pop
adc
sub
icebp
dec
jnp
(bad)
(bad)
pop
sar
fstp
out
pop
pop
push
or
iret
test
push
in
add
inc
into
lods
inc
aaa
mov
pop
cmp
repz
sbb
inc
scas
mov
mov
pop
xlat
fs
cwde
xor
jb
or
pop
push
pop
ins
aam
les
dec
mov
lock
cmp
add
sar
or
retf
cld
adc
xor
movs
js
adc
lods
test
rcr
cdq
pop
(bad)
pop
jg
xchg
aaa
cmovne
(bad)
stc
xchg
fxch
movs
in
and
aaa
pop
sti
xor
mov
inc
xor
call
jmp
mov
inc
aas
mov
mov
repnz
lds
call
(bad)
jno
mov
into
loope
pop
(bad)
enter
sbb
sbb
push
and
fild
les
lods
sbb
lods
movs
or
test
stos
call
mov
jmp
pop
push
imul
in
leave
or
add
jb
fild
sbb
and
loope
push
loope
cmc
outs
jno
pop
scas
cmps
dec
and
jns
sbb
and
rcl
fstp
dec
fcmovnb
loope
mov
mov
push
aam
and
add
fsubr
mov
and
xchg
jb
cmp
(bad)
mov
loop
inc
jo
adc
mov
shr
sbb
mov
cmp
jno
inc
repz
add
stc
dec
int3
fild
inc
mov
int3
inc
mov
cwde
out
pop
ds
or
pop
out
mov
neg
add
addr16
out
pop
(bad)
ins
fcom
sbb
gs
inc
and
paddb
dec
mov
and
cld
sti
ret
mov
das
jle
add
mov
inc
push
pop
add
jmp
or
ret
add
pop
sbb
and
movs
jmp
popa
pop
xor
mov
sbb
adc
fld
or
jecxz
call
mov
xor
adc
cmps
inc
ret
inc
outs
mov
lahf
aad
dec
cmc
bound
cmc
mov
or
or
add
neg
xor
or
daa
(bad)
cmp
std
ret
or
jecxz
push
jns
stos
cmps
mov
mov
popf
xor
pop
inc
push
mov
pop
movs
push
ins
xor
jns
cmp
sub
lahf
imul
ss
push
lods
mov
clc
push
cmp
dec
scas
adc
js
adc
xchg
pop
out
xchg
in
retf
lock
sbb
pop
add
arpl
or
into
lea
jmp
push
cs
dec
fs
outs
fist
aam
xchg
xchg
mov
rcr
fidiv
push
hlt
dec
push
das
sub
je
mov
jae
jge
cmp
inc
add
ret
(bad)
xchg
xchg
in
iret
push
fwait
push
jmp
int
cmp
push
push
call
push
jecxz
mov
movs
icebp
or
push
fwait
inc
jecxz
cli
mov
push
loopne
(bad)
and
add
xor
shl
pop
xor
stos
aad
sbb
jns
pusha
xor
mov
int3
mov
adc
pop
stc
dec
lds
xchg
or
je
mov
int3
mov
mov
dec
stos
jmp
sub
mov
xor
arpl
cmp
dec
xor
test
or
cmp
pop
and
mov
or
xchg
xchg
or
sbb
and
xchg
jle
in
sbb
sub
enter
add
adc
addr16
cmps
mov
mov
sbb
scas
inc
fucomp
(bad)
les
add
cmp
xchg
pushf
xor
pop
in
jne
sbb
xor
mov
pushf
xchg
jns
sbb
mov
inc
imul
fwait
or
or
push
dec
(bad)
arpl
rcr
loopne
inc
std
sar
xor
lahf
adc
push
jle
xor
(bad)
jge
scas
icebp
mov
and
dec
sbb
das
sub
mov
and
pop
pop
test
mov
cdq
lock
cmp
mov
sbb
ja
push
xchg
push
in
scas
xor
or
sbb
retf
pop
dec
sbb
and
adc
sti
cmp
aaa
xlat
pop
gs
or
fs
fistp
add
or
in
sub
test
add
ins
ss
ins
fist
outs
mov
call
pop
movs
xor
(bad)
adc
xor
das
push
outs
das
sub
push
dec
pop
je
mov
test
sbb
(bad)
pop
ja
sbb
sub
ror
pop
pop
std
and
push
stos
add
fldenv
xlat
mov
push
lahf
cmp
retf
mov
add
repnz
jo
cdq
xchg
outs
and
xchg
pushf
sub
jae
jne
cld
xchg
std
or
int
jl
shr
mov
outs
jmp
pushf
mov
inc
sahf
sbb
fimul
dec
xor
(bad)
call
ficom
bound
sbb
leave
imul
movs
jns
int3
data16
adc
lods
cdq
jbe
xchg
fnstenv
lods
jo
mov
jmp
mov
dec
mov
iret
mov
cmc
adc
mov
pop
shr
rol
sub
pop
ins
xchg
pop
out
retf
add
loopne
cmp
add
les
and
scas
pop
inc
cmc
mov
retf
jo
les
les
mov
push
and
push
pop
pop
jmp
in
pop
pop
clc
leave
push
xchg
inc
(bad)
and
in
inc
mov
mov
repnz
or
lods
xchg
shl
add
add
retf
inc
add
sar
xor
mov
add
sti
push
or
or
ins
adc
vpackuswb
lods
lock
popa
or
in
repnz
xchg
sbb
popa
jnp
stos
cmp
movs
jl
imul
retf
pushf
cli
sub
clc
sbb
mov
icebp
lds
and
imul
xor
stos
push
jg
hlt
scas
and
bound
out
mov
(bad)
mov
mov
xchg
das
movs
jle
jecxz
pop
(bad)
add
add
add
imul
mov
and
mov
call
inc
mov
repnz
pop
push
shl
cld
or
(bad)
enter
(bad)
data16
dec
sub
scas
inc
adc
sbb
in
in
cwde
adc
fmulp
and
lods
hlt
or
je
lds
and
fisttp
mov
shl
or
xor
stos
jns
aaa
ret
in
adc
gs
nop
movs
mov
cmp
popa
xchg
jge
sbb
xor
imul
mov
in
das
add
xchg
jp
or
and
cmp
loop
cmp
pusha
xor
das
and
dec
lods
pop
lods
arpl
sbb
loop
push
inc
(bad)
fist
jecxz
and
xchg
mov
pop
or
jbe
xor
cmp
add
leave
dec
das
mov
sub
mov
ret
lock
(bad)
and
and
fcmovbe
jl
cli
push
std
fcmovnu
jl
aas
pop
std
lahf
pushw
dec
add
pop
popa
fcmovne
sbb
stos
and
(bad)
or
out
cmp
mov
push
sub
mov
jl
mov
mov
pop
jmp
jp
push
jnp
or
out
xchg
push
popa
cmp
loopne
cdq
mov
int
fwait
scas
test
loope
sbb
in
push
hlt
scas
or
(bad)
call
nop
loope
adc
mov
push
xchg
dec
jl
or
jmp
dec
xchg
and
mov
or
jl
idiv
dec
pop
rcl
push
mov
xor
mov
ret
call
pop
pop
or
ror
dec
push
call
pusha
mov
stos
mov
cmps
pop
xchg
add
push
jl
mov
mov
sbb
mov
xor
add
add
rol
push
or
pop
cmp
inc
imul
fcmovnb
dec
mov
pop
lods
test
sub
sbb
call
cmp
mov
mov
adc
hlt
fimul
add
pop
out
in
(bad)
jg
mov
sub
imul
inc
icebp
retf
xor
das
test
ds
nop
inc
adc
pop
adc
mov
push
shr
mov
jns
cmp
dec
sti
out
imul
mov
xchg
mov
pusha
add
sbb
sub
push
nop
or
xchg
je
icebp
movs
sub
sbb
or
mov
mov
scas
push
or
adc
dec
in
push
int3
pop
imul
dec
sbb
sub
int3
cli
out
lahf
pop
dec
pop
ss
mov
scas
push
push
xchg
sub
lods
mov
lea
pop
in
mov
dec
jo
gs
cmp
jns
xchg
(bad)
ret
mov
add
int3
dec
xor
in
or
outs
and
push
fsubrp
into
lahf
xchg
rol
das
lods
call
scas
repz
imul
mov
xor
cld
sub
push
pusha
xchg
adc
push
mov
mov
adc
xor
inc
clc
rcl
stc
xor
imul
(bad)
nop
adc
je
shl
dec
bound
push
mov
rcl
call
and
ja
into
lahf
inc
jb
xor
test
xchg
shl
push
dec
push
mov
out
inc
retf
adc
jge
addr16
pop
hlt
jo
push
stos
sub
adc
jmp
jp
out
mov
and
ins
int3
jo
movs
push
jle
(bad)
fdiv
mov
out
call
xor
fst
dec
sub
jmp
add
xchg
ret
inc
mul
mov
retf
fistp
jae
leave
jnp
sbb
movs
or
dec
jecxz
xlat
pop
std
shl
sub
pop
sub
imul
sbb
std
cmp
mov
xchg
pop
mov
into
fisubr
mov
lods
sub
push
sub
xchg
or
(bad)
clc
cdq
inc
es
bound
mov
cs
loopne
jno
pop
movs
push
neg
into
adc
add
or
test
add
lods
out
mov
clc
sbb
cmp
pusha
(bad)
mov
arpl
sbb
and
sub
loopne
mov
push
shl
ss
push
xor
inc
xchg
pop
stc
xor
leave
mov
sbb
xchg
jmp
out
or
mov
pop
push
mov
repnz
stos
data16
outs
xchg
mov
push
cmp
pop
or
cwde
test
cmp
inc
imul
mov
and
add
retf
and
sub
pop
retf
pop
mov
out
lds
xchg
mov
adc
jecxz
in
pop
movs
retf
adc
mov
dec
xchg
xchg
add
jae
das
mov
iret
arpl
and
jecxz
cmp
adc
(bad)
or
mov
add
loope
xchg
ret
fldenv
fstp
jns
and
icebp
cli
pop
xor
or
inc
dec
mov
and
sub
mov
adc
ret
xchg
mov
jnp
jb
jp
in
(bad)
(bad)
adc
movs
jecxz
jnp
sub
push
scas
xchg
push
and
lea
mov
ror
mov
mov
(bad)
rcl
shl
inc
sub
cmps
add
sbb
sbb
repnz
inc
sbb
xchg
sbb
mov
mov
scas
(bad)
das
ret
inc
jno
xchg
arpl
out
jae
lds
cld
aam
inc
fstp
xchg
jg
(bad)
enter
sbb
push
xor
cwde
mov
out
cwde
js
xchg
fsubr
jle
imul
clc
push
and
push
and
inc
mov
xor
mov
jbe
sbb
pusha
cdq
clc
into
mov
sbb
dec
pop
mov
xor
je
lds
neg
into
pop
jl
jae
adc
jo
adc
xchg
out
enter
dec
repnz
dec
add
dec
in
xor
lock
sahf
lahf
pop
int
inc
push
ja
or
mov
jns
mov
in
lods
mov
dec
inc
or
into
pop
sti
inc
adc
in
dec
push
dec
test
sbb
scas
rcl
jne
push
cmps
sub
(bad)
and
add
enter
jno
out
push
sbb
push
call
mov
inc
mov
mov
jbe
push
retf
sub
cmps
stos
popf
sub
pop
mov
movs
mov
jo
out
pop
xchg
xchg
loop
std
or
icebp
push
jecxz
(bad)
xor
mov
sti
push
arpl
mov
repnz
cli
nop
jp
std
lods
mov
std
rcr
int
fs
sub
cdq
sar
mov
adc
sti
out
mov
sahf
scas
mov
ins
jo
ret
cmps
icebp
dec
icebp
jmp
stos
cmp
stc
adc
cmp
je
shr
imul
mov
mov
cmp
loop
xchg
add
jb
inc
iret
sbb
and
leave
out
mov
scas
and
not
xchg
repnz
aam
mov
movs
mov
add
jnp
or
cwde
jne
jmp
add
(bad)
pop
fisttp
add
imul
jae
mov
call
xchg
dec
(bad)
mov
imul
cmp
ins
inc
imul
ja
int
mov
and
xchg
nop
stos
adc
cmps
sbb
div
nop
pop
clc
pop
push
mov
mov
cwde
popa
out
inc
ret
out
and
sbb
jns
mov
cs
jmp
hlt
ja
shl
iret
cmp
cmps
xor
out
ror
in
push
mov
push
pop
test
sbb
fs
aas
sbb
xor
test
or
out
ffree
aad
dec
cmp
scas
inc
dec
dec
xor
imul
not
das
pop
pop
cmp
ins
leave
daa
xchg
in
adc
push
pop
adc
xchg
dec
cmp
movs
add
sar
mov
mov
pop
mov
xchg
and
aad
sti
ins
mov
mov
add
repz
add
ficomp
and
cmp
jnp
mov
pushf
inc
inc
mov
jmp
call
jnp
in
loopne
sub
mov
xlat
xchg
fistp
mov
enter
cmp
les
leave
ds
add
hlt
loopne
aad
enter
ror
lods
not
shl
add
or
neg
push
out
sbb
(bad)
je
imul
add
inc
jns
or
xor
das
xlat
xlat
mov
das
inc
popa
clc
ins
adc
lds
xchg
dec
stc
cmc
setl
dec
or
fs
dec
adc
cmps
scas
mov
or
dec
xchg
mov
js
and
test
loopne
in
fidiv
(bad)
js
js
sub
dec
jno
sub
pop
adc
and
out
(bad)
je
xchg
repz
bound
cwde
sbb
adc
movs
daa
sub
(bad)
or
adc
shl
or
xchg
mov
rcr
fldenv
scas
jmp
xlat
or
xor
pop
stos
sahf
sahf
fidiv
(bad)
sbb
ror
test
idiv
inc
out
scas
mov
repz
mov
or
and
aad
and
mov
push
enter
ins
mov
sar
addr16
cmps
aam
or
adc
jecxz
cmp
adc
cwde
cmp
inc
rcr
cld
push
sti
pushf
out
mov
fmul
pop
push
or
test
loopne
in
push
enter
sub
imul
jb
jmp
movs
jmp
div
outs
ja
shr
jnp
mov
jae
fwait
outs
adc
nop
push
sub
sub
adc
add
and
(bad)
call
cmp
mov
dec
dec
shl
mov
mov
arpl
outs
nop
je
xchg
cmp
pop
dec
xor
xchg
xchg
dec
jb
push
ins
push
pop
mov
mov
retf
dec
cmp
mov
cmp
int3
je
inc
sub
test
xchg
push
push
adc
popf
dec
cld
rcr
push
mov
or
xor
loop
(bad)
inc
icebp
call
shr
and
popf
js
cld
data16
fisttp
out
or
imul
fadd
movhps
or
leave
sub
adc
adc
xchg
mov
and
cs
pop
inc
mov
push
cld
add
cmp
pop
fs
xchg
pop
stos
xor
pop
add
repnz
mov
push
call
cmp
movaps
fwait
xchg
or
lea
pop
push
ret
jb
out
imul
inc
sbb
loope
or
shl
jae
sbb
sub
xchg
jnp
xchg
(bad)
punpcklbw
pop
jo
jle
int
(bad)
sbb
outs
ror
and
cli
jnp
dec
add
jbe
in
fadd
dec
dec
mov
fucom
pop
jne
lods
lods
iret
adc
mov
pop
rcr
ss
test
nop
xchg
push
int
mov
push
pop
mov
cmp
xchg
arpl
mov
dec
sub
push
pop
les
shl
cwde
add
lahf
mov
cwde
push
pushf
mov
inc
or
outs
div
xchg
mov
inc
lock
xchg
mov
mov
add
pusha
mov
xchg
pop
add
repz
inc
arpl
aam
adc
sub
push
pop
ins
dec
mov
xor
clc
add
sar
and
mov
js
or
sub
mov
lock
mov
cld
into
push
shl
jmp
lahf
es
push
jnp
les
jecxz
prefetchwt1
and
or
jmp
cs
jg
mov
add
movs
in
pop
(bad)
bound
(bad)
(bad)
mov
(bad)
push
jecxz
les
jne
test
test
(bad)
dec
and
sbb
xchg
popa
sub
sbb
sub
push
imul
(bad)
xchg
fwait
or
fisttp
lea
loopne
imul
shl
retf
xor
dec
fild
jmp
ja
jecxz
sbb
xor
mov
cmp
add
sub
lods
mul
retf
lods
xchg
pop
loopne
cmp
inc
pop
data16
inc
in
outs
clc
or
fisub
rcl
jp
mov
pushf
jecxz
dec
adc
jbe
daa
addr16
jne
inc
adc
(bad)
or
inc
pop
mov
(bad)
and
mov
inc
cmp
jge
pop
xchg
lds
push
jecxz
mov
push
lods
pop
cmp
pop
add
das
pop
pop
(bad)
mov
sub
pop
iret
xor
pop
loop
cmc
lock
shl
xchg
(bad)
scas
ja
mov
lea
fwait
or
jp
push
pop
and
xchg
outs
out
jle
scas
push
fld
imul
shl
sbb
dec
or
cld
retf
jle
mov
fdiv
movs
jmp
out
int
nop
push
je
and
sub
into
mov
sar
aam
mov
aaa
test
dec
mov
xchg
jmp
inc
sub
pop
outs
mov
int
pop
std
sub
mov
loop
call
loopne
dec
test
loopne
xchg
xchg
mov
add
gs
cli
cmp
lock
stos
dec
xor
fisubr
and
push
ja
or
enter
lahf
sbb
mov
pop
cli
aad
iret
push
pusha
or
push
(bad)
retf
outs
ja
ins
jg
mov
mov
push
sbb
pop
mov
cmp
ror
dec
push
es
fst
lock
lea
jge
call
xchg
clc
cmp
fcmove
lods
movs
jmp
mov
ins
mov
ds
sahf
xchg
lods
pop
xchg
mov
fnsave
sub
push
jp
aam
ror
int
or
pop
cmp
xlat
add
cmp
cmc
aam
int3
dec
xchg
pop
je
fninit
sub
inc
fs
mov
xor
mov
pop
pop
push
mov
imul
xchg
xchg
pop
les
mov
rcr
xchg
gs
add
outs
lahf
push
aam
out
inc
xchg
fs
and
ja
retf
inc
jecxz
xor
mov
loopne
scas
jno
push
clc
(bad)
pop
std
mov
sub
mov
fwait
enter
jne
dec
jbe
jl
mov
jp
cs
adc
adc
sbb
mov
ficomp
ret
mov
cdq
pop
or
push
dec
cdq
js
repnz
cmp
xor
movs
fmul
mov
lock
push
lods
gs
and
dec
in
cmp
cmp
pop
inc
mov
movs
sub
mov
retf
inc
pop
ss
pop
adc
pop
repnz
adc
mov
clc
cmp
dec
pop
cmps
ss
std
loope
test
jo
lahf
gs
lock
lds
fs
cmp
sbb
ds
pop
ret
sub
dec
xchg
lods
je
sub
add
scas
push
sub
inc
imul
out
aaa
lods
data16
mov
lock
jo
cmp
push
xchg
icebp
cmovnp
cld
xor
sub
mov
mov
sbb
in
fnstsw
mov
push
fcom
push
jle
jns
sbb
adc
pop
adc
mov
(bad)
xadd
cld
das
stos
test
pop
inc
movs
push
mov
hlt
aad
push
mov
daa
and
pushf
push
mov
fst
sub
(bad)
and
out
sbb
xor
mov
inc
inc
add
pushf
mov
pop
pop
and
push
cs
retf
and
inc
imul
stc
enter
mov
or
scas
dec
pop
sub
adc
hlt
cmps
push
call
dec
cmp
add
sbb
mov
mov
fiadd
mov
cdq
sbb
jno
(bad)
mov
push
(bad)
aas
lea
stos
sahf
mov
rcl
cs
xchg
adc
jno
lods
xchg
inc
jne
xchg
and
fwait
push
lahf
mov
pop
cmc
add
call
cli
dec
and
cmp
out
jb
ret
les
movs
fsubr
or
inc
test
dec
add
sub
add
aad
bound
cmc
dec
sar
mov
push
test
loope
inc
lods
add
cli
push
sub
pusha
mov
jo
sbb
and
cmp
sbb
mov
mov
hlt
lea
data16
push
loopne
jb
push
mov
in
call
not
mov
mov
pop
push
bound
test
and
cmp
dec
lea
mov
das
pop
ins
adc
push
push
xchg
fstp
or
add
rcr
pop
push
mov
xchg
lods
adc
push
jns
pushf
sahf
addr16
or
mov
in
shr
pop
call
mov
(bad)
mov
sbb
not
sub
repz
int
and
xor
ja
jnp
push
cs
ret
sti
inc
pop
mov
les
or
xor
xor
mov
(bad)
mov
stos
imul
push
mov
inc
nop
dec
or
dec
pop
arpl
idiv
lods
cmp
(bad)
or
mov
pop
sahf
push
ins
jns
push
xor
cmp
add
aad
(bad)
push
add
cwde
lods
cmp
fisttp
ds
mov
pop
adc
ret
fs
ret
popa
inc
stos
ret
jmp
push
popa
ficom
jg
imul
lods
int3
int3
fnsave
jmp
pop
ja
ds
xor
adc
mov
(bad)
stc
push
dec
ins
adc
or
push
jnp
mov
out
cmp
mov
neg
inc
int
jbe
int
adc
daa
(bad)
aas
sbb
(bad)
push
mov
clc
jae
or
jg
(bad)
pop
mov
adc
xchg
lock
jl
pushf
mov
out
push
into
pushf
or
call
mov
adc
lea
fnsave
jne
dec
mov
push
sub
aaa
imul
mov
dec
cmc
push
in
add
vprotw
imul
js
shl
mov
pop
pop
pop
in
loopne
pop
fdivr
jmp
mov
repnz
xor
cmc
jle
adc
les
int3
loopne
sub
(bad)
popa
mov
fld
cmp
lock
mov
popa
sar
(bad)
rcr
loop
dec
push
or
lods
cmp
xchg
push
in
inc
shr
sbb
fsubrp
push
lods
xchg
and
add
imul
popf
xchg
ret
mov
inc
jecxz
jmp
neg
mov
(bad)
jle
idiv
pop
jp
adc
add
add
loope
mov
mov
push
pop
test
or
out
sub
adc
out
mov
push
(bad)
xchg
mov
fdiv
lods
jbe
dec
rcl
dec
xchg
push
outs
loope
pop
mov
aam
dec
cmp
out
push
pop
add
leave
ret
neg
dec
enter
in
cmp
cmps
xchg
movs
and
ins
outs
or
xor
and
test
popf
mov
sbb
pop
xlat
bound
sahf
sbb
fsub
dec
pop
and
dec
mov
xchg
pop
sub
push
outs
cmc
pop
repz
dec
hlt
dec
jbe
inc
movs
in
pop
mov
loop
inc
bound
inc
push
leave
les
inc
or
adc
out
pop
out
add
test
in
int3
cmc
mov
inc
mov
inc
ss
fsubr
cmps
mov
clc
stc
outs
(bad)
cmp
mov
xchg
enter
add
aad
shl
mov
xchg
clc
ins
and
imul
add
pushf
(bad)
movs
test
mov
fidivr
and
pop
pop
cwde
call
(bad)
(bad)
fcmovnu
(bad)
out
adc
cmps
icebp
push
addr16
fst
cwde
rep
cmp
add
test
leave
pushf
addr16
mov
not
xchg
inc
std
and
sahf
and
enter
imul
jp
xchg
inc
sub
sub
adc
jle
xchg
mov
xor
aad
mov
mov
inc
inc
shl
ja
dec
and
fisub
and
or
push
ds
out
std
fst
test
sub
popf
test
adc
sbb
lahf
call
js
dec
into
push
or
cdq
mov
data16
ds
xor
pop
dec
mov
push
cmp
mov
daa
push
xor
clc
shr
imul
push
mov
adc
cmp
or
xchg
rol
daa
pop
jno
xor
mov
mov
sbb
ror
mov
jle
push
mov
jne
xchg
(bad)
popa
pop
jno
and
sbb
aad
test
add
pop
adc
mov
cmp
es
xchg
add
loop
push
cpuid
lahf
sub
pushf
scas
add
repz
std
stos
push
xor
cli
js
je
fcomp
stos
sbb
outs
sar
gs
xchg
pushf
jmp
mov
mov
je
int3
rcr
sbb
movs
out
and
scas
stos
xlat
cs
mov
ins
hlt
loop
inc
sbb
and
sub
(bad)
pop
movs
mov
daa
sbb
(bad)
aam
inc
mov
(bad)
sbb
mov
js
push
xor
(bad)
xchg
mov
in
sub
imul
sti
adc
cmps
jo
jl
in
cmp
das
add
add
mov
and
mov
adc
mov
xchg
push
cwde
std
and
dec
retf
adc
pop
inc
cmc
sbb
inc
shl
push
sub
jno
sub
xchg
test
push
jl
push
or
int
mov
mov
xor
mov
cmp
(bad)
test
jbe
out
sbb
cmp
cmp
sti
sahf
sbb
pop
daa
sub
sbb
fistp
or
movs
sbb
sbb
stc
leave
lods
fwait
or
fisubr
fwait
and
mov
call
and
inc
pusha
push
adc
dec
adc
mov
aaa
inc
pop
scas
js
dec
mov
xlat
cmp
les
mov
adc
test
fild
in
aam
mov
retf
cdq
sbb
add
jae
(bad)
in
outs
dec
and
pop
scas
mov
cli
bound
or
mov
mov
clc
out
scas
rcl
leave
div
hlt
and
fistp
xor
and
add
xchg
jecxz
imul
shl
fmul
sub
popa
repz
repnz
mov
or
(bad)
xlat
xlat
les
call
mov
in
imul
das
cmp
ret
scas
sub
jle
movs
add
inc
(bad)
pop
mov
or
xchg
dec
test
xor
(bad)
mov
stos
fisttp
cdq
pop
sar
mov
mov
push
mov
neg
mov
dec
(bad)
scas
cmps
jnp
arpl
in
adc
mov
adc
test
pop
jno
mov
fs
mov
mul
stos
test
and
or
sbb
adc
test
repnz
retf
push
cdq
push
jmp
mov
mov
mov
inc
test
pushf
in
or
xchg
cmps
test
push
movs
cmp
test
repnz
outs
sbb
fisttp
cld
mov
add
ror
adc
fiadd
sbb
or
shl
xchg
pop
jg
cmp
mov
mov
xor
mov
mov
aas
xor
fisttp
jnp
jbe
dec
mov
xor
push
push
sbb
mov
inc
pop
sub
fld
nop
cmps
ss
mov
je
gs
stos
rcl
sub
ror
ror
test
and
jmp
imul
iret
lock
into
jg
sbb
mov
sbb
fstp
mov
mov
psraw
jl
sub
push
call
jnp
cmp
nop
cld
pop
mov
mov
and
pusha
(bad)
mov
ficomp
cld
xlat
xchg
dec
cmc
and
(bad)
rcr
mov
jp
repnz
dec
jae
mov
mov
mov
mov
dec
(bad)
and
pusha
mov
stc
pusha
inc
xor
mov
addr16
dec
xchg
cmp
add
imul
test
scas
(bad)
mov
std
xor
pop
arpl
aas
dec
loopne
mov
enter
push
and
jae
pop
adc
shl
xor
inc
pop
cmp
jecxz
lea
imul
cmp
pusha
jb
inc
cmp
jne
rol
inc
inc
cmps
pop
mov
popf
shl
sbb
mov
cmp
mov
add
iret
sub
mov
test
adc
add
in
jecxz
ins
(bad)
push
(bad)
es
xchg
mov
out
jp
imul
(bad)
enter
jbe
sub
test
xchg
mov
sti
or
sbb
nop
sub
js
(bad)
jp
loop
mov
fnstenv
jg
cdq
imul
mov
xchg
les
sbb
jne
sar
retf
mov
and
aam
or
ret
mov
dec
jg
pop
fld
jnp
xchg
ss
inc
sbb
out
lods
pop
add
jne
cmps
push
adc
icebp
loope
or
es
jp
gs
sti
xchg
jmp
push
(bad)
outs
mov
push
jmp
dec
fstp
out
or
xor
int
cld
mov
jle
pop
arpl
cld
sbb
xchg
imul
dec
ret
xor
fs
leave
lock
pop
mov
sti
jo
fs
pushf
jmp
dec
adc
sub
xor
les
mov
retf
sub
xor
pop
fistp
out
loope
out
out
jmp
in
in
xor
xor
jnp
xor
or
push
and
pushf
aam
mov
dec
cmp
cmp
sbb
xchg
repz
sbb
fild
dec
xchg
repnz
ins
cld
js
mov
pop
test
push
lock
mov
push
mov
and
cwde
lods
jmp
test
jmp
mov
push
add
repnz
lods
ja
in
dec
sub
mov
and
jmp
div
mov
jno
aaa
icebp
mov
stc
arpl
retf
jns
aad
loop
in
shl
movs
xchg
add
jb
xor
shr
xor
stos
push
mov
mov
pop
sbb
fidiv
call
add
mov
pop
or
clc
jnp
test
dec
cld
mov
out
mov
add
sbb
dec
loop
adc
push
lock
gs
cmps
bound
pop
push
cmp
mov
pop
sar
fcomp
es
scas
push
les
je
popa
iret
push
call
push
xor
mov
jmp
xlat
mov
jae
sub
je
repz
dec
push
arpl
mov
pop
sub
inc
inc
dec
icebp
ja
hlt
xlat
push
cwde
js
fsubr
or
mov
(bad)
retf
mov
mov
sbb
les
ja
push
pop
rcl
sbb
and
mov
or
cmp
in
mov
std
jb
cdq
lock
addr16
jae
cmp
sbb
or
cmps
mov
sti
fwait
jg
shl
in
pop
push
mov
inc
leave
dec
dec
mov
and
adc
sub
pop
and
ins
cmps
(bad)
fs
mov
ret
jge
dec
or
sahf
inc
in
sbb
popa
leave
ja
pop
addr16
out
mov
sbb
sar
out
test
icebp
pusha
ins
xor
nop
xor
stos
mov
pop
sbb
push
loopne
dec
cmp
retf
les
jo
add
les
add
pop
push
mov
leave
mov
mov
mov
data16
in
shr
movs
out
shl
cli
pop
enter
stc
scas
mov
xchg
jmp
(bad)
in
mov
cmp
ins
cmps
test
stos
or
int
dec
cdq
lods
sbb
add
test
pop
jnp
stos
jmp
call
(bad)
push
ret
(bad)
lahf
xchg
mov
(bad)
and
shl
xchg
xor
inc
imul
stos
xchg
xor
(bad)
rcl
idiv
lahf
shr
pop
mov
add
lock
mov
jb
imul
cld
cmps
pop
clc
(bad)
shl
es
(bad)
cmp
test
sar
adc
scas
lds
clc
lods
xchg
punpckldq
push
jnp
ds
push
pop
pushf
ja
loop
mov
lock
cld
push
or
scas
mov
adc
xchg
mov
cmps
add
sbb
push
ret
dec
jle
call
mov
sbb
in
add
pop
dec
lahf
lock
je
das
cmps
inc
jmp
lods
jae
in
les
jmp
fldcw
push
aad
jne
adc
retf
repz
jmp
test
iret
shr
add
dec
jg
xlat
jb
jb
stc
lahf
sbb
sub
jns
enter
outs
adc
ins
sbb
fcmovnu
mov
es
mov
push
pop
pop
mov
fist
mov
(bad)
ss
push
shr
ins
outs
clc
inc
push
mov
dec
mov
cmps
ss
aad
pop
and
movs
sub
pop
or
addr16
rcl
fwait
inc
add
sbb
and
add
cmc
mov
loop
mov
mov
loope
mov
push
sti
adc
push
sbb
cdq
push
pop
not
mov
jmp
js
rep
retf
jo
ficomp
sbb
xor
jecxz
out
test
gs
and
push
retf
mov
in
and
mov
out
in
xchg
fwait
or
mov
xor
repz
mov
mov
out
data16
inc
cmp
add
not
mov
mov
sub
or
jl
cmps
jl
sub
cmp
fisub
xchg
pusha
jb
es
add
mov
mov
sbb
loop
(bad)
inc
addr16
mov
push
mov
(bad)
sbb
cdq
xor
out
stc
push
push
xor
ins
out
dec
enter
dec
(bad)
dec
dec
dec
in
jns
xor
iret
mov
out
inc
dec
mov
inc
iret
dec
fld
push
jmp
xor
sub
jae
mov
in
push
ret
dec
xchg
out
aaa
dec
xchg
addr16
and
xchg
xchg
(bad)
popf
js
and
push
mov
adc
in
jg
in
adc
aas
inc
faddp
mov
mov
jae
jmp
aas
dec
dec
mov
push
sbb
cmps
addr16
clc
imul
fsubr
inc
push
sar
jp
cmp
das
mov
mov
ficom
mov
addr16
cmp
pop
int
sbb
out
or
(bad)
or
or
pop
call
(bad)
in
inc
mov
jne
fwait
mov
and
(bad)
and
das
push
lock
enter
add
fs
pop
into
push
mov
test
cmp
jge
sub
adc
movs
cmps
mov
pop
mov
push
les
ret
mov
adc
push
push
cdq
(bad)
loopne
sbb
cmp
sub
pop
sbb
shr
test
and
imul
js
jns
mov
jne
icebp
int
cdq
cs
pop
xor
cli
retf
out
inc
rol
xor
and
or
loope
lds
inc
inc
xchg
movq
pop
aaa
xor
xchg
mov
std
jmp
fwait
leave
repz
add
mov
(bad)
sbb
mov
xchg
fcmovbe
aaa
(bad)
adc
xchg
xchg
ins
inc
push
imul
outs
or
div
outs
and
pop
aas
ins
sar
andps
ss
cld
cmp
push
mov
shr
push
jmp
sub
mov
in
dec
imul
sbb
jge
cmp
mov
inc
add
mov
jae
and
cmp
xor
push
adc
cmp
cwde
fisttp
or
shl
mov
xchg
inc
icebp
mov
dec
std
pop
sbb
mov
add
sbb
cmp
lds
into
cmp
push
xchg
retf
les
sub
dec
jns
jecxz
mov
(bad)
das
(bad)
dec
leave
mov
or
imul
cmp
mov
popf
jge
sub
loope
aad
adc
shl
and
adc
das
cmc
jne
or
test
sbb
sbb
mov
lds
mov
scas
cmp
mov
and
adc
jmp
aaa
lods
or
das
fistp
(bad)
ss
cmp
fmul
mov
mov
pop
js
movs
stos
(bad)
arpl
cmps
lods
repnz
mov
loopne
test
sbb
fisubr
call
xchg
mov
out
or
mov
xchg
int3
bound
pushf
in
dec
adc
pop
mov
fdiv
mov
mov
cmp
(bad)
push
sub
mov
xchg
pop
aaa
into
mov
push
jecxz
retf
ins
aas
and
sub
popf
sub
rcr
ficomp
stos
cmp
push
add
xor
xchg
xor
fld
jl
stc
xchg
xor
inc
or
cmp
les
int
push
push
dec
inc
push
or
pop
outs
sbb
sub
push
inc
cmp
dec
lods
cmps
jo
pop
xlat
sbb
xchg
mov
ret
inc
mov
cli
sub
jmp
cmps
clc
dec
es
das
push
inc
ror
iret
test
jo
cmc
mov
dec
mov
mov
add
mov
call
xor
lods
xchg
cmp
popa
pushf
adc
cmp
cmp
mov
xchg
dec
test
fistp
sub
or
popf
daa
in
xor
mov
sbb
mov
jmp
and
out
dec
or
sar
enter
and
inc
xchg
sbb
sahf
push
pop
push
sbb
mov
mov
cmps
jecxz
xlat
out
cmp
sub
inc
int
repnz
movs
fcom
add
stos
lods
daa
sub
cmp
xchg
nop
rcl
das
push
jae
jl
mov
out
enter
jecxz
enter
pop
stc
cmps
inc
out
movs
cmp
or
nop
test
jmp
fdiv
(bad)
in
dec
push
daa
and
mov
out
mov
lea
push
lods
xlat
or
gs
bnd
mov
sti
mov
aam
xchg
outs
bound
div
push
sbb
in
push
push
lods
mov
mov
int3
je
push
pop
and
sbb
xor
push
lods
and
dec
mov
imul
popa
add
push
mov
jl
inc
or
shl
shr
inc
sub
push
jg
pop
jae
repz
mov
imul
aas
(bad)
xchg
test
sub
add
mov
jno
mov
je
mov
add
cmp
lods
(bad)
mov
xchg
aam
pop
mov
aas
fisubr
sahf
sbb
enter
xchg
jge
and
lea
scas
ins
sub
ja
fwait
lock
nop
mov
add
ja
(bad)
mov
enter
outs
and
in
ja
pop
daa
hlt
mov
inc
out
and
mov
xor
movs
push
pusha
push
pop
add
test
mov
js
(bad)
movs
ins
jmp
mov
and
fstp
test
jl
pop
out
scas
xchg
ins
(bad)
outs
xchg
push
aam
sahf
pusha
mov
jge
dec
push
enter
cmp
lea
(bad)
sbb
pushf
sti
fs
push
aas
bnd
or
mov
test
sub
ret
(bad)
imul
stc
dec
cmp
loope
cmps
daa
xchg
jmp
jns
enter
cmp
xchg
sub
mov
shrd
sub
pop
loope
imul
cld
xchg
mov
inc
(bad)
aad
inc
mov
lds
arpl
bndldx
jbe
out
call
fldenv
or
dec
hlt
add
xchg
inc
pop
clc
xlat
data16
or
das
push
add
mov
sahf
fsubp
lds
add
sub
imul
xchg
mov
jg
cwde
ja
lock
fstp
cmc
mov
rol
xchg
std
jle
cli
test
jmp
pop
jb
mov
push
test
mov
mov
mov
call
cmp
fwait
(bad)
je
test
mov
mov
daa
adc
cwde
loope
mov
ds
sbb
pop
int3
fwait
mov
dec
mov
in
jne
cmps
ror
out
fwait
es
xor
push
out
sub
pop
aad
cmps
(bad)
push
mov
mov
pop
sar
sbb
xchg
mov
and
imul
outs
adc
(bad)
int
lds
dec
sub
mov
xchg
inc
push
(bad)
push
dec
test
push
call
dec
pop
pushf
aad
inc
(bad)
je
dec
xchg
cmps
push
sbb
push
test
cli
cmp
xor
stos
xchg
aam
inc
push
cmp
into
or
out
clc
rcl
out
imul
sahf
iret
sti
cwde
sbb
in
ja
inc
push
and
popf
mov
inc
lods
(bad)
xchg
fcomp
test
out
out
pop
mov
ss
bnd
sbb
imul
push
test
pop
xchg
push
xchg
jnp
xchg
aaa
jmp
or
int3
fmul
xor
adc
repz
xor
pop
stos
jae
pop
iret
push
dec
mov
sbb
pop
out
pop
adc
xlat
fidivr
add
pop
jge
push
cmp
js
out
and
aad
adc
lea
dec
xor
shr
je
jle
test
div
pop
xchg
mov
adc
push
sub
and
sti
std
xchg
dec
data16
ja
test
scas
popa
and
push
fwait
and
dec
sar
mov
or
mov
popf
dec
push
jb
jmp
cmps
mov
lods
add
cld
scas
mov
aam
or
push
pop
inc
xor
push
mov
push
out
adc
or
add
mov
cmps
mov
sub
or
jno
dec
pop
int
add
cmp
and
lock
push
add
aas
fwait
inc
xchg
mov
out
mov
and
out
jne
sti
mov
inc
push
pop
inc
lea
int3
test
retf
jb
lods
in
mov
test
push
jp
jmp
gs
inc
out
cwde
inc
cmp
js
push
stos
xchg
jns
leave
iret
dec
dec
adc
dec
test
rcr
jnp
sub
in
repnz
and
adc
loop
dec
add
out
repz
cmp
fiadd
test
jge
sbb
mov
aas
or
ja
and
cld
jmp
stos
fidivr
sbb
enter
jns
scas
jl
movs
ret
sbb
dec
adc
fmul
int
jp
xchg
and
dec
gs
xchg
push
shr
ficom
mov
out
popf
out
(bad)
aad
rcr
mov
mov
add
lahf
adc
jns
nop
lods
ins
into
cmp
fcomp
pop
fldenvw
push
push
jl
jmp
into
daa
(bad)
and
in
add
mov
cmc
cmp
mov
adc
cmp
sub
dec
or
jne
test
add
or
rcr
sub
in
iret
stos
jo
dec
call
or
jecxz
scas
outs
std
jnp
out
fild
fsubr
int
js
rol
test
push
cmp
shr
imul
iret
add
or
data16
mov
mov
or
push
push
inc
shr
add
sbb
into
xlat
imul
test
cli
add
std
sub
dec
mov
inc
fidivr
pushf
push
test
or
inc
push
push
or
mov
jp
dec
inc
push
cld
retf
nop
test
sub
inc
test
pop
pop
xchg
test
mov
jbe
pop
test
mov
xor
pushf
push
ret
mov
cmp
and
ins
pop
xchg
ss
mov
and
sub
mov
inc
lahf
sub
cld
push
xlat
dec
add
cmp
test
lea
adc
push
outs
xchg
test
lea
(bad)
and
pop
int3
add
mov
cmp
movzx
loope
int
or
rol
cwde
adc
stc
pop
adc
lds
mov
dec
js
jg
jbe
inc
fwait
pop
dec
add
mov
or
jnp
push
mov
push
pop
or
sub
mov
mov
std
push
shl
mov
push
xchg
xor
cmp
sbb
jge
mov
mov
adc
int3
and
ret
mov
mov
cmc
ret
pop
es
shr
inc
jg
retf
mov
adc
and
jp
(bad)
iret
and
test
adc
(bad)
jae
mov
(bad)
call
cmp
es
jg
arpl
cmp
(bad)
fcomip
mov
pop
push
cmp
cmc
pop
lahf
mov
xor
bound
inc
ret
cmp
sbb
imul
fimul
mov
sbb
mov
ret
out
sbb
fdivr
sub
arpl
mov
mov
mov
in
push
pusha
shr
pushf
inc
mov
mov
daa
sub
inc
mov
out
sub
cli
adc
jb
fimul
leave
cmp
ret
push
test
xchg
or
mov
fwait
push
sub
mov
and
fst
fidiv
adc
mov
int3
rcl
shl
jmp
scas
fisttp
icebp
out
pusha
and
dec
dec
and
fmul
mov
idiv
push
call
in
out
push
mov
push
xchg
sar
in
loop
data16
scas
add
test
or
movs
mov
(bad)
sub
jbe
sbb
retf
int
mov
mov
xor
pop
xchg
addr16
std
xlat
test
dec
pushf
(bad)
div
test
std
mov
mov
rol
add
sub
popf
jb
ret
popf
rcl
fs
loopne
sbb
xchg
inc
repz
cmp
dec
and
popf
inc
push
fdivr
and
jbe
push
rcl
mov
cmps
cdq
cld
sbb
(bad)
pop
xor
xor
mov
and
test
dec
test
inc
arpl
dec
outs
jno
push
fs
pop
sub
adc
mov
xchg
ret
sbb
sub
jo
pop
sbb
mov
or
jo
sub
push
sar
cmps
mov
lods
scas
xor
add
shl
pushf
jle
sub
push
sar
lods
jmp
sbb
inc
sub
shl
(bad)
pop
cld
scas
popa
or
sub
inc
cmp
jle
ja
mov
cmp
cmp
adc
sar
add
add
mov
adc
jp
pop
out
enter
sbb
mov
mov
jecxz
aas
push
xchg
lahf
adc
xor
mov
or
loop
sub
xchg
sub
or
fidiv
movs
ret
and
adc
xchg
sub
(bad)
push
into
sbb
xor
shl
or
jne
jmp
(bad)
sti
out
xchg
mov
jecxz
jno
dec
idiv
shl
or
add
sbb
out
jp
push
xchg
jmp
mov
movs
mov
xor
adc
daa
frstor
xor
xlat
leave
aam
mov
mov
mov
inc
mov
lods
mov
push
lds
push
or
inc
push
jmp
in
inc
cmp
and
and
fidivr
mov
pop
retf
jae
stos
mov
ret
aad
cmp
push
mov
arpl
jle
cs
retf
dec
mov
inc
add
mov
cmps
popf
mov
adc
adc
popa
and
mov
adc
cmps
in
js
dec
dec
hlt
loopne
in
pop
adc
sub
mov
cdq
pop
je
loop
xlat
fstp
push
mov
popa
sub
test
lods
push
test
(bad)
sbb
xchg
call
sub
cmp
cmp
push
stos
cmp
fisubr
arpl
mov
fist
add
adc
sub
cld
inc
in
sbb
aam
push
arpl
sub
call
mov
push
enter
push
lea
mov
and
dec
out
jmp
mov
daa
push
in
jbe
sub
xchg
aad
add
mov
jg
cmp
cld
jno
inc
xor
std
out
cmp
fwait
mov
ss
dec
pop
xchg
cdq
mov
shl
(bad)
cmp
mov
adc
aaa
stos
sbb
das
jg
or
repz
cmp
sbb
pop
add
push
sahf
and
mov
mov
dec
scas
mov
(bad)
fsub
loopne
add
cmp
and
(bad)
stc
push
std
jbe
xchg
pushf
pop
aad
arpl
nop
jp
arpl
ret
fbld
popf
mov
repnz
test
repnz
sbb
jmp
mov
mov
fadd
mov
cmp
scas
cmp
test
jns
aas
cmp
addr16
lods
adc
adc
inc
out
inc
xchg
xlat
jbe
push
fstp
sub
out
addr16
xchg
cld
mov
xor
repnz
sbb
out
mov
mov
iret
mov
mov
leave
xchg
pop
ja
bsf
cs
pop
es
inc
cmp
retf
adc
mov
hlt
cld
sub
std
mov
adc
push
test
jns
xchg
sbb
repz
mov
fcom
aaa
ja
and
(bad)
push
or
mov
enter
adc
fcmovbe
lahf
iret
lahf
in
(bad)
xchg
mov
(bad)
stc
loop
cli
mov
sub
fisttp
jmp
sub
(bad)
fmul
loopne
popf
jp
cmp
mov
sahf
and
pop
aad
call
fs
(bad)
lea
and
ss
std
test
cmp
clc
stos
or
inc
xor
mov
clc
mov
aaa
stos
add
pop
adc
xchg
shl
mov
movs
or
cmc
xor
mov
xor
sub
pop
inc
mov
jne
call
addr16
(bad)
mov
xchg
add
add
mov
mov
pop
outs
divps
popf
mov
cmp
pop
in
xchg
pavgb
lock
xchg
mov
test
add
aaa
std
inc
(bad)
idiv
xchg
cwde
in
xchg
xchg
das
shr
jo
mov
cmp
jg
xchg
pop
aam
movs
stc
mov
or
inc
enter
sbb
fwait
pop
je
mov
cmps
lds
ins
int
mov
or
fs
inc
mov
jg
fwait
dec
popa
mov
data16
cs
sbb
xor
(bad)
push
dec
fs
mov
pop
add
push
mov
xor
popa
pop
shl
adc
xor
fbld
retf
mov
xchg
dec
push
call
push
jns
movs
lds
mov
les
xchg
mov
pusha
outs
dec
xchg
push
or
add
sbb
pop
pop
pop
jae
jns
mov
cli
aas
cmps
ja
mov
and
add
sub
(bad)
rcr
add
fucomp
mov
in
inc
fdivr
and
aam
imul
jo
jns
ins
mov
sub
xchg
pop
inc
xchg
iret
jg
aaa
inc
adc
mov
jnp
aad
sub
xlat
cmp
inc
adc
test
mov
sub
repnz
pop
xor
mov
mov
xchg
int3
push
out
mov
xor
pop
lds
mov
mov
sbb
clc
(bad)
jo
push
jmp
mov
sub
pop
fwait
xor
xchg
dec
xchg
adc
movs
shl
leave
ret
(bad)
cmp
or
add
mov
adc
shl
and
into
imul
mov
and
jnp
movs
call
pusha
rcl
jns
lods
and
add
and
jg
ss
mov
sub
inc
mov
popa
or
or
in
test
dec
cmps
jmp
call
aam
enter
or
aam
jmp
cdq
push
scas
stos
outs
mov
loopne
retf
neg
shr
pop
mov
dec
int3
imul
jbe
and
into
int3
loopne
imul
out
fdivp
cmp
test
mov
jmp
lods
and
push
mov
out
xchg
dec
push
push
ds
pop
sbb
arpl
mov
leave
popf
mov
cmp
js
push
out
popa
and
(bad)
dec
gs
push
and
inc
mov
sub
shl
shl
loop
(bad)
jmp
ds
test
push
cmps
push
daa
jge
cli
xchg
ins
(bad)
xchg
movs
out
dec
and
push
push
add
aaa
push
int3
sahf
ja
mov
ficomp
xchg
mov
rcl
sbb
push
test
pop
shr
and
sbb
shl
inc
das
test
mov
faddp
fwait
arpl
in
shl
mov
mov
pop
mov
push
sar
cmp
iret
jnp
js
aaa
pusha
lahf
xchg
pop
fstp
inc
xchg
push
adc
out
and
dec
mov
(bad)
sub
sub
xchg
push
mov
add
sub
or
addr16
cmp
mov
fdivr
lds
call
cmps
mov
cli
inc
std
xchg
imul
sub
ja
out
pop
outs
fs
pop
dec
out
call
mov
mov
pop
mov
xchg
mov
out
add
mov
loop
push
and
out
aam
inc
adc
xor
xor
stos
push
push
push
jne
and
repz
cmp
mov
jmp
push
je
xlat
rcr
cli
je
and
or
popf
retf
mov
or
sbb
icebp
pop
mov
sar
add
ja
test
stos
int3
ins
mov
inc
mov
icebp
sub
dec
sti
call
jl
jnp
inc
not
in
cmp
ja
rcl
xor
arpl
jp
push
ss
push
retf
ret
(bad)
adc
dec
ret
and
mov
inc
push
(bad)
in
jp
sub
jge
inc
push
popa
or
mov
fs
mov
xchg
jp
mov
mov
sbb
repz
jo
inc
sti
add
pop
lock
(bad)
mov
jb
lock
lods
daa
inc
fnsave
xor
mov
pop
das
xlat
enter
bound
popf
cmp
jno
xchg
jns
ds
cmp
push
inc
fcos
repz
aaa
ret
sbb
mov
jl
scas
cmps
pop
mov
xlat
push
cmps
pop
mov
fldcw
mov
iret
aad
mov
pop
repz
xor
out
aad
rcr
sub
and
addr16
or
push
dec
dec
std
mov
dec
cmps
xchg
loopne
movs
cmps
mov
xor
mov
cmp
push
data16
mov
adc
pop
into
jno
loopne
cmps
push
mov
push
sub
repz
out
push
out
xchg
adc
icebp
cmp
pop
imul
out
lahf
inc
sbb
ja
cmp
mov
stc
ret
imul
jl
or
test
aaa
mov
pop
in
rcl
ror
sar
std
inc
jnp
int
jecxz
cmp
jo
int
pop
in
outs
arpl
(bad)
jo
jle
xchg
mov
add
push
ret
sbb
je
push
fcomp
ins
cwde
cmp
sti
mov
neg
sbb
mov
and
mov
xor
dec
icebp
and
aam
add
out
pop
(bad)
popa
sbb
popa
push
fld
lods
ja
xor
ret
dec
cdq
pop
out
cwde
push
fld
push
inc
and
in
pushf
or
mov
aad
or
cmp
or
push
dec
jl
sub
call
push
sar
xor
stc
mov
or
out
adc
popf
jns
aaa
cmp
push
sti
inc
clc
lock
inc
movs
adc
adc
aaa
mov
sbb
daa
out
sbb
mov
mov
cli
cmp
cmc
je
and
add
dec
(bad)
sbb
cmc
xchg
imul
dec
pop
mov
lock
push
mov
jg
addr16
xchg
xchg
sub
jns
sbb
add
jge
and
or
xor
push
ins
scas
mov
jmp
fidivr
pop
pop
mov
jnp
into
icebp
rol
mov
inc
and
mov
cmp
push
inc
xor
and
ds
xor
inc
imul
sbb
icebp
or
leave
jmp
lods
jl
jnp
pop
scas
xchg
leave
and
sub
sahf
xor
inc
sbb
mov
xchg
push
xor
lahf
push
pop
or
mov
ficomp
(bad)
shr
jle
icebp
mov
mov
fwait
pop
xchg
(bad)
cmp
popa
xchg
hlt
mov
xchg
dec
cdq
pop
cld
cwde
xchg
neg
ss
jnp
inc
pop
dec
pop
jne
test
out
stos
retf
push
test
ret
and
lock
mov
push
sub
shl
outs
sbb
pop
mov
out
push
cmp
aad
push
dec
cmp
scas
dec
jmp
cwde
mov
dec
push
cli
xchg
(bad)
pushf
mov
fistp
jle
hlt
inc
push
jle
or
cmp
mov
aaa
mov
inc
and
xor
pop
stos
xor
dec
std
(bad)
mov
(bad)
call
test
daa
int3
jne
mov
hlt
repz
push
std
adc
adc
mov
out
xor
push
cmps
adc
or
cwde
jmp
push
fwait
iret
mov
aad
mov
dec
jne
push
fdiv
test
xchg
stc
push
xor
(bad)
retf
mov
mov
fs
jg
inc
call
pushf
push
mov
ret
fadd
sub
mov
test
retf
adc
push
icebp
fisubr
or
pop
xor
inc
mov
xchg
ret
(bad)
fs
and
mov
pop
xor
sub
xor
pushf
js
sbb
sar
xor
dec
cmc
xchg
add
push
jo
sbb
mov
cmp
dec
xchg
adc
into
(bad)
and
inc
leave
pushf
xor
inc
push
sti
xchg
mov
xchg
pop
sar
inc
sub
xor
sbb
mov
pop
mov
cmp
cmp
(bad)
and
lods
test
lods
(bad)
dec
pop
sbb
mov
jae
sbb
mov
into
shl
bound
outs
jecxz
into
mov
xor
cmps
das
stc
cmc
out
mov
inc
imul
cs
pop
cwde
inc
xor
or
cmp
and
das
adc
cmp
movs
sbb
and
(bad)
or
fs
scas
push
arpl
xor
retf
stc
jmp
inc
add
add
mov
pop
ss
dec
mov
xchg
pusha
lea
push
in
in
aad
loopne
jmp
pop
xchg
mov
pop
in
dec
aad
and
dec
cwde
ds
cdq
aad
or
or
cmp
dec
cmc
adc
jo
out
hlt
inc
and
dec
in
or
adc
int3
adc
aaa
jbe
lock
popa
cdq
rcr
lahf
add
sti
imul
out
fisubr
xor
add
inc
rcl
sub
sti
pop
test
clc
neg
jmp
outs
scas
dec
xchg
xchg
rcl
in
and
pop
cdq
dec
sub
mov
outs
sub
push
data16
or
dec
rol
(bad)
ss
sbb
js
jg
es
jmp
xchg
fstp
or
jmp
test
add
xor
xchg
(bad)
jb
aad
fimul
stos
fistp
push
das
mov
rcr
iret
mov
push
pop
xchg
rcl
cli
jbe
arpl
fcomp
lock
neg
test
cmp
inc
jl
fwait
pusha
cld
jecxz
xor
cmp
sub
mov
xor
ins
cmp
mul
mov
fdiv
movs
repnz
leave
mov
xlat
jno
lock
inc
ret
add
out
in
sbb
push
or
mov
adc
ins
mov
pop
inc
jp
adc
into
cmp
xchg
pop
jo
jmp
repz
aad
lods
loopne
retf
or
cmp
or
mov
pushf
movs
ficom
adc
mov
enter
movs
cmp
mov
pop
push
sub
xchg
lea
cmp
call
inc
mov
xchg
cmp
pop
not
xor
fisttp
pop
fwait
or
add
mov
daa
sbb
lea
mov
es
enter
push
rol
cdq
sbb
pop
call
inc
fidivr
in
pop
outs
xor
jb
xchg
ret
loope
cmp
dec
xor
popa
fst
push
jmp
xchg
movs
jns
arpl
xchg
fdivr
adc
mov
dec
ror
dec
dec
or
iret
xchg
xchg
or
dec
(bad)
sbb
inc
push
jo
dec
rcl
jp
fnstenv
cmps
retf
push
push
fdiv
jo
loopne
enter
and
cmp
push
mov
loop
xchg
push
shl
jg
nop
cmp
test
stos
cmps
sub
addr16
jns
pop
push
mov
xchg
mov
pusha
ss
mov
jl
fcomip
stos
and
shl
je
jge
and
pop
push
and
cmc
fcomi
dec
fisub
or
push
sbb
cmp
push
dec
adc
js
xchg
pop
es
clc
adc
lds
dec
xchg
add
scas
pop
test
inc
mov
pop
addr16
sahf
push
cmps
fidivr
mov
xor
mov
pushf
pop
in
inc
iret
popa
pop
imul
adc
jno
or
push
fistp
push
sti
push
aaa
inc
inc
jecxz
sar
mov
pop
mov
mov
push
jns
pop
pop
cmp
sub
leave
dec
inc
movs
push
inc
mov
movs
lds
repz
push
cmp
push
jge
pop
mov
int3
cmp
inc
sbb
mov
rcl
mov
jge
jp
mov
retf
loop
inc
jns
xchg
or
push
ss
out
scas
std
and
out
push
dec
in
dec
xor
and
pop
mov
push
clc
jl
stos
fcom
and
cmc
push
sub
sbb
test
mov
push
xor
psubd
xchg
popa
jae
fiadd
jmp
xchg
cmp
aad
add
stos
pop
sbb
push
adc
movs
es
sahf
cwde
cmp
xor
sbb
loope
jne
imul
je
xchg
pop
clc
mov
mov
xor
inc
fiadd
enter
fidivr
aaa
dec
inc
test
fdiv
shl
arpl
cmc
fsub
and
outs
retf
repz
sar
stos
rcr
loop
xchg
pop
sti
xor
mov
cmc
int3
in
cvtpi2ps
adc
dec
mov
iret
or
push
dec
icebp
test
(bad)
retf
jmp
add
outs
sbb
jo
xor
ds
mov
ss
inc
daa
or
(bad)
sti
test
and
inc
ret
add
or
mov
outs
jl
pop
icebp
pop
adc
push
sub
movs
dec
cwde
jne
mov
xchg
sbb
shr
sbb
(bad)
cld
xchg
inc
ror
repz
mov
push
in
sbb
mov
sahf
shr
add
js
(bad)
pop
call
ja
jle
xchg
dec
jne
and
and
cmps
test
mov
adc
(bad)
fimul
mov
out
xchg
ins
push
inc
int
jmp
gs
push
cld
pop
mov
cwde
sbb
adc
adc
mov
pop
and
sbb
inc
aaa
jno
adc
dec
and
jbe
mov
dec
or
mov
ins
outs
stc
cmps
fisub
xor
cmp
jae
cmc
dec
test
cmp
test
or
dec
dec
popa
out
push
xor
addr16
jnp
ret
sbb
xchg
in
arpl
int
mov
stos
inc
push
mov
lea
bound
pushf
mov
and
xor
pop
(bad)
lds
xchg
test
inc
xchg
retf
mov
or
add
sub
enter
fucomp
neg
out
xchg
lock
int
dec
(bad)
lahf
sub
mov
div
(bad)
mov
sub
in
mul
icebp
xor
sbb
sub
in
lahf
inc
mov
and
jne
cmp
ds
out
sub
enter
pop
or
add
pop
and
lds
mov
popf
jl
push
xchg
sub
mov
icebp
push
inc
mov
mov
pop
mov
xchg
lock
mov
js
xchg
mov
mov
(bad)
push
sbb
scas
xchg
push
cmp
and
retf
or
mov
pushf
add
out
xchg
jle
jbe
hlt
dec
jne
xchg
mov
fld
mov
jo
jg
xlat
pop
jmp
sti
into
(bad)
ja
fdivr
sti
out
push
xchg
push
fwait
xchg
mov
fild
cdq
cli
or
cld
xor
shl
mov
add
xor
push
adc
mov
mov
or
cmps
fs
push
pop
retf
neg
dec
cmp
add
lock
and
popf
popf
cmc
mov
pop
dec
cs
cmp
pop
jbe
xor
test
(bad)
xor
stc
aam
xchg
retf
clc
fs
pop
out
ret
jae
or
xor
and
add
sub
mov
cmp
jg
xchg
stc
pop
dec
and
cmps
mov
loop
push
scas
add
js
daa
ret
cmc
and
sub
outs
je
xor
mov
add
push
call
sub
in
in
mov
ror
mov
rol
pop
dec
sub
loop
xchg
sbb
test
sub
jl
mov
add
movs
pop
dec
retf
push
sub
data16
gs
es
adc
push
mov
mov
jle
pop
mov
dec
pop
iret
fild
xchg
es
xchg
outs
xchg
cmp
add
retf
mov
addr16
push
sub
nop
pop
dec
addr16
cmp
mov
adc
nop
icebp
hlt
and
mov
xchg
pop
push
adc
cmp
jg
xor
xlat
mov
jb
xchg
sub
(bad)
add
in
mov
int
mov
fisub
push
ror
loopne
push
movs
ret
sbb
bound
mov
loopne
sub
hlt
retf
loopne
adc
fs
inc
or
je
iret
mov
adc
push
stc
sbb
jmp
fnstcw
leave
loope
sbb
mov
cs
push
movq
outs
mov
inc
nop
pushf
cdq
jmp
jno
cwde
movs
or
adc
test
cmp
aas
rcl
pusha
jb
jp
sbb
movs
rcr
adc
adc
sbb
enter
push
or
jp
test
imul
les
cli
adc
popa
mov
retf
sbb
aam
test
std
jle
ja
inc
clc
sbb
cmp
test
sub
sbb
into
or
jae
(bad)
or
(bad)
rcl
mov
mov
retf
jge
loop
retf
jnp
add
bound
cdq
or
xor
aaa
and
stc
xchg
adc
dec
inc
mov
sub
pushf
or
lods
dec
push
dec
sbb
aaa
xlat
sbb
dec
mov
lea
loopne
pop
dec
clc
sub
mov
dec
add
pop
leave
(bad)
push
popa
sbb
add
stos
lahf
ss
push
inc
test
scas
lock
int
push
sbb
sub
arpl
ds
hlt
cld
int3
mov
imul
jle
hlt
shl
(bad)
icebp
adc
retf
popf
inc
leave
push
cmp
retf
or
and
daa
cmps
adc
ja
popf
xor
repz
mov
dec
dec
push
jge
inc
fld
xchg
sbb
jnp
fimul
inc
pusha
inc
push
cwde
adc
pop
xor
mov
(bad)
jb
cmp
out
push
popf
push
mov
mov
lock
les
xchg
retf
adc
xchg
and
sbb
out
and
dec
mov
sbb
test
ja
test
pushf
lods
fdivr
pop
xchg
popf
ja
jge
in
in
mov
inc
stc
jmp
popf
call
aad
xchg
hlt
(bad)
cmc
add
sub
adc
xchg
sar
pop
stos
dec
(bad)
das
out
shr
inc
aaa
test
cmps
das
push
inc
repnz
stc
mov
push
mov
push
push
jae
idiv
sahf
sub
pop
xor
(bad)
call
xor
(bad)
adc
xlat
push
ins
jb
jno
popf
sbb
sbb
outs
push
outs
scas
enter
nop
push
xchg
cmp
add
inc
lahf
loopne
dec
in
test
(bad)
sbb
jle
test
fstp
sar
retf
sbb
rcl
xor
jno
outs
bt
rcl
(bad)
mov
and
pop
not
dec
into
lea
pop
je
into
sub
pop
mov
pop
fnstenv
outs
call
cmp
inc
aas
adc
js
leave
dec
cwde
jns
sub
inc
test
jnp
pushf
int3
inc
neg
sub
push
div
cmc
or
jne
inc
push
or
mov
sub
push
ficomp
lea
outs
fld
gs
push
and
xchg
jl
inc
xor
cmp
fisttp
mov
adc
sti
sub
push
mov
or
mov
cwde
adc
jo
shl
jmp
pop
pop
dec
fidiv
aas
mov
dec
push
push
jns
sbb
ret
cdq
and
fadd
xor
xchg
repz
sbb
or
or
inc
sti
stos
and
addr16
dec
xchg
or
(bad)
out
jg
imul
adc
pushf
enter
push
mov
fdiv
js
inc
push
pop
pop
jns
xor
cld
ss
jbe
loope
inc
jmp
ror
loop
cs
pop
inc
or
inc
add
inc
cwde
cld
add
push
or
xchg
add
imul
lds
adc
inc
scas
ficomp
dec
dec
xor
retf
pop
fs
inc
stos
pop
in
aaa
pusha
push
sub
fbld
(bad)
mov
(bad)
loope
jle
pop
call
mov
add
pop
dec
(bad)
cmc
mov
mov
mov
or
pop
(bad)
dec
lods
mov
pop
cld
cmp
aaa
ins
push
es
ins
arpl
mov
mov
dec
inc
add
dec
int3
inc
jb
retf
lods
mov
addr16
cmc
bound
mov
inc
or
jmp
fwait
cld
movs
mov
movs
imul
sub
ret
push
(bad)
sub
shr
cmp
jmp
mov
nop
push
lods
xchg
or
dec
jmp
jecxz
mov
xchg
jg
scas
add
and
jno
stc
jle
dec
hlt
ret
mov
int
adc
cli
loop
dec
add
ficomp
js
mov
popa
movs
cdq
shr
cmps
sbb
es
or
outs
je
push
dec
ror
pusha
stc
loope
xchg
adc
jo
popa
push
pushf
sub
clc
data16
mov
mov
cmp
(bad)
push
xchg
cmp
xchg
lods
add
fldenv
idiv
or
clc
jmp
(bad)
lock
addr16
movs
hlt
inc
push
pushf
mov
cmps
cmp
jnp
loope
lock
jnp
pop
adc
scas
push
iret
push
adc
pop
xchg
inc
repnz
dec
lea
(bad)
and
fdivr
mov
jnp
daa
cmp
jb
dec
in
pop
js
mov
dec
jnp
and
cmp
adc
cmp
dec
mov
xor
repz
adc
mov
mov
leave
psubq
shl
push
jo
sub
pop
xor
cwde
fs
imul
pusha
out
lods
mov
mov
adc
outs
rol
popf
sbb
sbb
sbb
int
scas
or
fstp
mov
(bad)
push
cmp
imul
call
xor
ror
pushf
xor
cmp
lahf
xchg
jp
and
bnd
mov
push
fld
adc
xchg
and
ins
in
push
out
push
retf
out
mov
scas
test
jmp
pop
int
fnsave
push
(bad)
lods
jmp
or
inc
in
dec
out
jbe
aaa
test
call
mov
out
mov
not
fild
fwait
push
mov
add
dec
adc
sbb
jae
xchg
push
cli
jne
frstor
push
xchg
dec
sti
xchg
push
and
xchg
and
outs
(bad)
das
movs
das
and
xchg
dec
shl
(bad)
sbb
mov
out
outs
and
(bad)
mov
ret
popf
adc
out
sar
mov
sub
jns
dec
pop
cmp
push
mov
and
push
(bad)
mul
outs
mov
pop
jns
call
pop
push
popf
or
xor
shl
pusha
xlat
dec
sbb
movs
out
inc
push
hlt
mov
bound
dec
data16
mov
stos
add
mov
int
les
push
push
mov
inc
mov
lock
rcl
(bad)
jmp
sbb
repz
inc
cmp
ja
sub
popa
shl
jb
pop
jo
sbb
aad
pop
sahf
icebp
add
mov
add
xchg
dec
pop
fdiv
out
xchg
enter
mov
inc
out
cmp
add
mov
ja
fild
xor
sbb
aaa
dec
cmps
cmp
dec
push
jmp
aas
rcr
jnp
imul
or
sar
sub
and
imul
lea
pop
pop
lods
imul
shl
mov
push
mov
adc
cwde
into
push
mov
(bad)
mov
mov
sub
imul
fst
add
mov
out
jg
xor
iret
or
add
mov
add
pop
adc
cmp
or
push
sbb
cmp
rcr
popa
mov
and
and
pop
mov
sbb
std
inc
pop
enter
retf
adc
(bad)
fmul
ficomp
inc
push
cmp
xchg
push
add
lds
iret
aam
xchg
jbe
je
or
pusha
(bad)
ror
lahf
inc
jns
(bad)
pop
outs
je
(bad)
pop
pusha
cdq
inc
or
mov
into
jo
aaa
lods
(bad)
movs
mov
call
xchg
pop
inc
inc
and
pop
inc
xchg
sbb
or
jbe
sub
adc
push
test
je
iret
in
(bad)
push
retf
sar
add
mov
or
pop
xchg
and
imul
fdiv
sub
dec
les
mov
mov
xchg
out
fsub
mov
ds
jl
icebp
adc
movs
jp
fidivr
std
add
test
adc
jne
mov
ds
sar
push
mov
sbb
test
(bad)
in
and
fs
inc
sub
icebp
push
ins
push
xor
jae
lods
inc
adc
push
dec
and
xchg
fsub
fcom
push
mov
cmp
sub
mov
mov
dec
fadd
popf
out
jae
pop
aaa
lods
cwde
xchg
rcr
jbe
lods
aad
sbb
test
fmul
lods
or
mov
xchg
and
cmp
pop
das
xor
inc
jmp
mul
xchg
(bad)
scas
stc
pop
out
imul
jne
cld
xor
mov
pop
sar
out
cs
xchg
es
ror
or
push
cs
sbb
test
mov
repz
inc
cmp
add
add
inc
fild
in
int3
adc
mov
pop
es
dec
dec
test
push
push
ins
loope
popf
cdq
fild
ja
int
outs
imul
add
push
mov
movs
jae
fsubp
es
sbb
fcomp
sbb
mov
sbb
sahf
jge
sub
pop
stos
ret
dec
push
mov
repz
ror
movs
mov
mov
sbb
test
mov
cwde
loop
icebp
retf
push
jb
je
dec
and
or
data16
xchg
call
imul
(bad)
and
xor
ins
pop
mov
cdq
mov
aaa
jecxz
and
outs
inc
xchg
mov
jmp
jle
pop
cmp
call
push
add
repz
sbb
add
or
jg
addr16
push
ret
cmps
sbb
sub
adc
cmp
or
je
loope
xchg
sub
mov
fwait
aad
aaa
(bad)
mov
pop
inc
sub
inc
rcl
je
aam
or
push
add
push
sub
retf
movs
pop
xchg
cli
div
and
fcom
mov
push
int
icebp
or
dec
or
mov
dec
dec
into
loop
cmp
fsub
outs
and
pop
xchg
cs
sbb
out
xor
pmulhuw
add
dec
add
sbb
lea
in
cmps
pop
ins
shr
(bad)
in
leave
push
mov
push
out
and
lea
imul
push
repz
mov
inc
ror
pop
cmps
mov
aam
mov
(bad)
jecxz
xor
sahf
movs
imul
ss
jns
shr
cmp
cmp
mov
icebp
gs
mov
test
in
or
xchg
add
sbb
jo
jbe
jge
lahf
das
lea
stos
lds
inc
movs
sbb
dec
fwait
daa
sbb
lahf
call
leave
(bad)
sbb
repz
jl
aas
add
push
out
xor
stos
xchg
fucomip
imul
push
scas
push
outs
lahf
fild
mov
jmp
inc
fidivr
test
mov
adc
push
sbb
inc
(bad)
push
push
test
outs
fidivr
in
xchg
sahf
jns
sahf
dec
jl
mov
jbe
fld
(bad)
push
mov
jmp
adc
shr
push
adc
adc
test
je
mov
in
enter
dec
fisub
call
nop
push
pop
in
xchg
ja
dec
mov
inc
xor
push
jg
mov
fldenv
outs
mov
outs
cmp
cwde
cdq
dec
movs
fadd
xchg
dec
stc
outs
bound
mov
arpl
icebp
push
arpl
push
addr16
cmps
lahf
push
ja
adc
hlt
inc
jns
jg
jp
cld
js
add
dec
mov
movs
and
es
loop
movs
scas
ds
loopne
mov
jg
add
test
adc
rol
push
xchg
sub
adc
xor
mov
stc
out
into
ror
sar
mov
jb
movs
mov
retf
mov
call
std
lods
jl
es
xor
inc
out
mov
mov
iret
in
enter
movs
movs
dec
and
mov
xchg
loop
ds
and
jne
loope
jg
cmps
je
loope
add
repz
out
cmps
sahf
imul
nop
jg
jnp
mov
es
sub
xchg
leave
push
adc
push
hlt
sub
popa
aas
sbb
and
stc
add
cdq
pop
ds
jb
imul
cdq
sbb
mov
and
inc
inc
sbb
in
cmps
adc
enter
sbb
jle
adc
and
pop
in
movs
ror
pop
inc
outs
mov
push
cmps
mov
retf
mov
pop
and
cli
adc
out
dec
sub
sar
or
inc
arpl
dec
(bad)
pop
jecxz
inc
and
aam
scas
(bad)
adc
sbb
dec
loopne
adc
pusha
mov
scas
cli
cmp
mov
and
inc
xchg
gs
or
inc
movs
mov
mov
sbb
jmp
xchg
xchg
mov
fnsave
adc
inc
test
push
pop
in
div
test
test
xchg
adc
div
xchg
jle
in
(bad)
xchg
in
jp
dec
sub
mov
jo
es
push
push
adc
hlt
adc
jbe
pop
mov
sar
popf
jae
adc
xchg
stos
xchg
shl
scas
(bad)
mov
mov
sub
push
test
inc
mov
retf
scas
adc
sti
xor
and
(bad)
pop
add
rcr
loop
jg
hlt
pop
int
ss
mov
push
xchg
and
test
xchg
jg
aaa
ficomp
psrlq
cmps
jmp
out
push
jnp
imul
fabs
pop
mov
sti
lods
pop
mov
mov
imul
xchg
rcr
adc
xor
inc
inc
xlat
pop
imul
xor
mov
mov
and
sbb
mov
ret
fld
push
jb
xchg
das
ins
imul
ins
aad
popa
mov
add
mov
test
pop
mov
mov
out
xchg
rol
xchg
fwait
jo
mov
cmp
sub
fisubr
jg
or
lods
nop
fwait
xchg
or
ds
xor
push
mov
popa
(bad)
icebp
mov
sub
mov
or
mov
adc
push
and
retf
ficomp
pushf
xchg
test
(bad)
shl
cmp
fcmovb
cmp
iret
jb
xchg
cld
xchg
data16
js
test
imul
cwde
push
ret
pop
adc
pop
aas
(bad)
adc
sub
lock
xchg
dec
pop
(bad)
mov
sub
int
das
std
rol
(bad)
mov
shl
inc
push
push
lea
mov
adc
and
sub
push
movs
inc
out
mov
jno
cmp
xchg
sbb
push
sbb
jl
aad
pop
dec
jmp
xchg
mov
fsubr
inc
js
push
dec
stos
mov
mov
inc
jge
dec
adc
inc
pop
push
cmp
xor
push
in
lahf
fnsave
jge
xor
jl
hlt
add
loop
push
lds
pop
and
imul
imul
inc
sbb
sub
test
das
mov
xchg
(bad)
sbb
or
sub
test
mov
ins
repz
rcl
fcmove
ins
fsub
aad
out
repnz
js
(bad)
and
lods
and
adc
jmp
pop
cmps
xor
push
push
pop
jmp
pop
mov
sahf
shl
ins
loope
ja
mov
mov
cmp
lods
cmp
call
inc
lahf
daa
in
das
or
cs
test
bound
dec
std
lods
stos
addr16
(bad)
push
mov
mov
fldcw
iret
movs
rol
xchg
in
inc
sbb
inc
sbb
mov
nop
fnstcw
movs
cld
sbb
int3
sahf
cld
out
ss
les
call
cdq
mov
adc
cs
ror
mov
out
out
pushf
sub
shr
cmp
xchg
icebp
mov
ror
mov
ins
and
aaa
aad
mov
outs
into
lds
(bad)
inc
es
push
jnp
lods
in
daa
cmp
push
in
mov
adc
imul
std
add
inc
int3
inc
or
pushf
je
and
cmc
sub
jecxz
sub
jnp
fadd
mov
test
mov
or
ja
rol
leave
sbb
mov
push
fcom
ins
xor
stos
cmp
test
or
inc
inc
or
cmp
mov
push
add
mov
fnsave
clc
fs
outs
gs
add
mov
lea
sbb
imul
cmps
sar
xor
retf
addr16
frstpm(287
cmovs
out
dec
in
add
or
push
pop
inc
lds
cld
(bad)
leave
mov
and
jle
stos
mov
enter
(bad)
mov
dec
aad
inc
xchg
and
cmc
leave
inc
xchg
cmp
push
cmp
cmp
jle
(bad)
adc
pop
xchg
xchg
vpandn
xchg
int3
int3
dec
dec
cmp
dec
inc
sar
jnp
or
add
sahf
das
pushf
ret
lock
push
sahf
push
jmp
cmp
xchg
clc
adc
dec
pusha
inc
sbb
dec
pop
mov
xor
lea
es
xchg
sbb
nop
adc
ret
mov
(bad)
ds
rcl
stos
scas
mov
pusha
dec
sbb
inc
or
pushf
dec
jp
loope
leave
fstp
sub
stc
jae
xor
sub
mov
scas
mov
or
xchg
add
jle
jle
and
js
adc
shr
sar
test
jmp
jle
push
mov
mov
popf
cwde
rcr
lea
imul
outs
inc
enter
jmp
and
in
xchg
xchg
ds
push
mov
outs
cmc
add
addr16
out
div
(bad)
xor
leave
add
inc
ds
add
repz
sbb
dec
sbb
les
add
jge
ja
or
in
pop
add
outs
add
std
es
xchg
add
mov
mov
push
scas
inc
add
test
lea
mov
mov
stos
rcr
ds
cwde
shl
mov
imul
loop
retf
pusha
int
cmp
(bad)
fidivr
call
adc
aas
bound
fidiv
pushf
jmp
movs
lock
das
lods
push
add
retf
push
mov
adc
clc
and
push
mov
stos
pusha
pop
rcr
push
bound
inc
int
arpl
popf
add
jecxz
mov
or
(bad)
aaa
movs
sbb
dec
fcom
push
ins
fist
mov
repnz
pop
mov
push
inc
cmc
into
bound
xor
sbb
sbb
mov
sub
inc
cmps
pop
test
xor
jbe
fdivr
call
(bad)
nop
mov
xchg
sbb
jge
push
or
mov
cmp
and
sti
fst
test
add
mov
call
sub
out
imul
dec
or
jae
sbb
mov
jp
adc
dec
dec
dec
lea
popf
sub
inc
xor
dec
(bad)
(bad)
adc
iret
add
shl
lods
loop
xchg
rcr
dec
cdq
(bad)
(bad)
js
je
ret
rol
(bad)
mov
test
ficom
push
jmp
adc
clc
test
inc
stos
arpl
add
cwde
nop
mov
arpl
iret
push
or
pop
test
mov
mov
cmp
ficomp
je
push
cmps
push
ror
push
adc
in
clc
jmp
int
je
sub
cmp
push
jnp
aad
push
test
mov
sub
jmp
xchg
bound
loop
popa
sub
retf
into
mov
mov
sbb
mov
jmp
mov
xor
jmp
fbld
adc
jae
cmps
adc
imul
cli
cmp
enter
xlat
mov
scas
js
push
int3
ficomp
(bad)
ror
adc
aaa
xchg
mov
enter
jmp
repz
sub
xor
mov
enter
gs
jg
sub
dec
hlt
or
(bad)
outs
aaa
jns
mov
call
cmp
scas
push
sub
ror
jns
sub
mov
js
lea
add
xchg
shld
rcl
sbb
mov
pop
xlat
(bad)
icebp
call
sbb
adc
(bad)
fisttp
jb
jge
mov
retf
and
sbb
out
xor
jae
inc
fdiv
test
adc
push
iret
pop
popf
movs
and
mov
push
in
xor
xchg
add
arpl
imul
dec
icebp
xchg
add
jg
adc
shl
inc
jge
lods
not
outs
lea
int3
pusha
or
jbe
mov
sub
in
(bad)
int3
imul
jno
std
stos
fmul
mov
stos
je
(bad)
rcr
push
sub
push
cmp
cmps
sti
sbb
push
ss
imul
adc
mov
adc
push
cli
jge
mov
dec
(bad)
mov
test
mov
adc
mov
or
pop
inc
imul
jbe
stc
inc
stos
pop
hlt
je
cmps
jp
(bad)
out
ja
adc
sub
pop
cwde
push
inc
mov
icebp
pop
in
sbb
push
xchg
inc
outs
cmp
stos
add
div
mov
sbb
ins
jb
test
cwde
push
push
mov
dec
test
mov
outs
cmp
mov
mov
rcr
inc
out
or
xchg
inc
dec
ins
(bad)
out
fs
jmp
pop
sbb
xchg
xchg
cwde
mov
test
inc
xchg
xchg
in
aad
or
xchg
rcr
mov
icebp
jb
js
jp
(bad)
idiv
xchg
lods
aaa
leave
arpl
test
icebp
outs
iret
popa
jmp
jno
mov
repz
clc
jmp
ja
and
aad
(bad)
loope
je
sub
push
cmp
cmps
push
push
pop
dec
sbb
sub
out
jge
inc
jmp
mov
xor
jle
sub
sub
xchg
xchg
mov
into
ret
test
int3
call
jmp
dec
jbe
jae
sti
push
inc
adc
mul
(bad)
mov
test
push
std
xor
dec
ins
and
cmp
cmp
or
test
fs
aaa
fisttp
or
sbb
into
enter
cld
cmps
push
pop
pop
xchg
fst
mov
mov
(bad)
mov
in
inc
cdq
sub
mov
imul
aam
movs
arpl
xchg
or
mov
int3
push
jno
fldenv
ds
int3
inc
mov
xchg
pop
inc
fsub
outs
dec
idiv
int
sahf
mov
inc
data16
pop
jo
mov
cld
push
rol
push
ds
rol
or
fwait
out
jge
inc
stc
and
icebp
sti
xor
adc
mov
inc
out
jnp
mov
rol
clc
mov
not
pop
dec
jnp
mov
sbb
and
pop
in
ror
sub
mov
xor
dec
ds
outs
pop
jae
aad
std
inc
add
aam
mov
cli
inc
sbb
(bad)
push
dec
dec
jg
mov
jno
(bad)
cmp
loopne
cli
clc
sub
xchg
ins
xchg
sub
mov
jmp
push
cmp
and
sub
jp
sbb
inc
fwait
xchg
fldenv
inc
fstp
cmps
mov
call
(bad)
sbb
mov
mov
jle
pusha
push
(bad)
out
xor
sub
(bad)
rcl
and
pushf
jecxz
aaa
test
mov
not
xlat
dec
(bad)
popf
aad
pushf
cmp
int3
lods
cmps
div
vmovss
cmp
sbb
cmc
jb
inc
mov
nop
int3
dec
pop
loope
push
push
mov
test
cmp
sbb
aam
ja
mov
adc
jmp
mov
mov
pop
pop
aaa
fstp
jmp
jne
push
xor
mov
enter
ins
and
lea
lahf
xor
jecxz
dec
add
sub
cdq
jmp
dec
mov
js
clc
inc
mov
xor
dec
sbb
xchg
mov
mov
ss
and
mov
xchg
cmp
inc
ja
xchg
rol
test
inc
xor
adc
clc
out
inc
in
cmp
sbb
mov
pop
sub
push
sbb
xchg
or
test
jmp
iret
hlt
shr
ins
fst
rcr
int3
mov
shl
push
call
mov
lahf
or
fnstsw
mov
xrelease
das
push
ret
loope
pop
mov
mov
xchg
mov
test
ja
cdq
inc
or
push
jae
fstp
and
int3
push
push
mov
adc
repnz
ins
add
mov
call
pusha
sub
aad
(bad)
movs
pop
fistp
clc
jo
cmp
das
call
xor
mov
xor
outs
adc
push
fdiv
add
or
(bad)
(bad)
ss
xchg
loop
outs
nop
sar
pop
mov
inc
cli
data16
push
into
stos
fistp
mov
sub
addr16
pushf
mov
lock
gs
pop
lea
dec
fmul
mov
lods
sbb
iret
dec
pop
adc
ror
xor
xchg
loope
pop
stos
or
mov
mov
push
fistp
mov
icebp
fisub
xor
lods
add
dec
pop
ror
mov
(bad)
xchg
cmps
mov
jmp
lahf
xor
cmc
or
jne
mov
cld
sbb
jmp
jecxz
push
adc
mov
test
out
xor
vsubss
mov
xlat
out
inc
imul
dec
in
push
vmovups
xchg
loopne
mov
scas
daa
pushf
mov
jae
inc
daa
pusha
cmp
dec
jb
aam
jmp
inc
fs
je
jle
push
add
stc
dec
aad
es
push
mov
inc
mov
mov
dec
aad
repnz
xchg
mul
das
fstp
mov
jne
dec
sub
xchg
pop
mov
scas
in
xchg
or
ins
push
jbe
sub
or
in
stc
(bad)
mov
add
outs
in
int3
stos
xor
adc
sar
mov
loope
or
mov
out
mov
fdiv
int
pop
ja
adc
jp
jb
cmp
push
int3
ins
inc
jle
xchg
or
shl
in
cmp
daa
xor
add
or
push
retf
jnp
outs
pusha
mov
mov
fsub
cmps
jno
hlt
push
push
lods
push
pop
or
inc
xchg
outs
movs
stos
and
jbe
arpl
mov
jp
test
mov
jnp
call
in
inc
nop
xlat
mov
pop
cld
repz
cmp
test
ret
sub
sar
shl
add
jecxz
lods
push
fidivr
out
sbb
sbb
add
mov
mov
(bad)
jae
sbb
mov
loope
mov
xor
jl
(bad)
rcl
inc
or
and
push
mov
mov
call
ror
aam
(bad)
sbb
ficom
add
mov
ficomp
outs
fisubr
mov
push
mov
dec
lock
loop
retf
loop
adc
data16
xchg
mul
or
mov
mov
and
imul
inc
fisub
ja
aam
out
movs
sub
adc
mov
movs
shl
fnstenv
cmp
fistp
pop
out
xchg
lds
lea
sbb
sub
leave
jns
dec
mov
add
fcmovnb
push
or
sbb
xlat
jae
loop
outs
aaa
xlat
pop
data16
xchg
push
push
ins
sub
xor
inc
push
dec
and
aas
add
push
cs
nop
and
inc
add
sbb
scas
das
(bad)
fdiv
call
test
repnz
fdivp
dec
mul
out
dec
jae
xchg
mov
sub
cmp
lods
cmp
addr16
jmp
inc
mov
xchg
dec
pop
cwde
sub
push
data16
out
jg
mov
mov
cmc
cmp
test
jb
adc
sbb
mov
(bad)
or
cmp
cmp
mov
pop
mov
xchg
and
mov
test
aaa
xlat
mov
cwde
push
sub
int
imul
(bad)
fsub
jp
add
inc
mov
dec
mov
pop
sub
cwde
sbb
xor
aam
test
pusha
and
cwde
jl
push
sbb
inc
sbb
jbe
test
and
jb
add
fbstp
inc
jg
enter
out
add
(bad)
dec
jo
dec
or
inc
xor
or
(bad)
ror
mov
(bad)
jge
pop
repz
push
inc
mov
int3
test
sbb
loop
jecxz
jo
mov
out
push
mov
inc
push
and
xor
data16
in
test
dec
movs
mov
sti
jp
in
int
push
int
arpl
adc
(bad)
lods
int
or
xchg
jnp
mov
jo
push
leave
pop
js
add
add
fldcw
xor
lods
jne
stos
add
push
or
push
retf
ins
cmps
dec
pop
ja
lods
fcmovnbe
jp
test
dec
out
lods
mov
add
in
mov
addr16
mov
push
dec
push
xor
jmp
or
into
repnz
retf
popa
ins
das
push
es
into
mov
xor
xor
jb
pop
(bad)
push
sbb
je
(bad)
adc
jge
rcr
ret
std
stos
sub
or
and
aas
mov
push
loop
push
btc
pop
test
sub
adc
cs
cmp
dec
inc
pop
mov
inc
test
xor
and
outs
add
jge
pop
mov
inc
push
test
cmp
sub
mov
mov
dec
xchg
xor
add
fdivr
jmp
sbb
mov
loopne
cld
call
(bad)
mov
jp
fadd
in
xor
clc
inc
sbb
in
inc
loopne
sar
pop
xor
out
ja
pop
(bad)
adc
stc
adc
bnd
sbb
pop
call
or
sbb
cmp
or
push
cmps
push
inc
add
js
mov
lds
pop
test
iret
mov
fisub
push
retf
push
cmp
aam
stos
jb
pop
mov
retf
and
pop
out
mov
add
sahf
hlt
scas
mov
push
leave
fwait
cs
mov
int3
or
lds
cwde
cmc
mov
fsubp
jns
or
mov
js
mov
pop
outs
mov
sub
loopne
or
int3
mov
stos
push
inc
or
loope
sub
mov
cli
int
cld
(bad)
aas
cmp
sub
aam
je
jmp
ficom
inc
push
(bad)
data16
adc
mov
sti
mov
mov
push
dec
test
stc
iret
push
mov
sub
ss
pop
outs
pop
movs
sub
aaa
hlt
stos
ds
dec
aam
aam
fisttp
xor
lahf
push
sbb
movs
into
sub
cdq
(bad)
jmp
fcom
fdiv
mov
dec
mov
ds
xchg
aas
or
adc
sub
mov
or
in
mov
test
cli
fiadd
sar
push
(bad)
cdq
scas
adc
inc
dec
sub
jecxz
mov
or
mov
loop
stos
inc
aad
or
dec
cmps
mov
sbb
cmp
retf
mov
cmp
add
and
mov
mov
fs
retf
jge
xchg
jle
inc
cmp
lea
fnstcw
mov
les
pushf
dec
push
out
adc
loope
std
imul
mov
jae
jmp
js
adc
addr16
outs
imul
pop
mov
loope
dec
cwde
sub
ret
adc
in
add
cmp
(bad)
lahf
push
les
mov
mov
dec
test
pop
vpunpckhbw
scas
stos
(bad)
fcomip
mov
mov
adc
lock
cmp
xchg
ins
cmp
fiadd
pop
icebp
sar
dec
addr16
push
iret
fcom
dec
jb
cmp
rol
repz
aas
cmp
add
imul
mov
jl
and
cmp
sbb
(bad)
inc
lahf
push
sub
hlt
add
mov
pop
ja
ss
out
jbe
mov
in
and
in
aam
gs
in
bound
jno
mov
jmp
mov
xor
and
cmp
mov
scas
xor
jg
sti
mov
cmp
fist
and
add
cwde
fidivr
mov
in
jno
push
xchg
jge
cmps
fcomp
scas
ins
pop
in
mov
aad
cmp
xor
into
(bad)
call
mov
aaa
in
ss
and
fwait
out
jo
in
ins
jmp
ins
imul
mov
pusha
cli
outs
int
and
stos
(bad)
loop
fisub
push
call
jge
xchg
cmp
xchg
retf
jb
inc
dec
sbb
clc
mov
add
push
jg
push
leave
lea
and
push
dec
adc
js
xor
adc
cmc
pop
or
mov
das
and
movs
retf
xor
loopne
fstp
dec
jl
lahf
shl
xor
rcr
mov
dec
jno
lea
pop
dec
stos
and
jecxz
(bad)
jl
lods
mov
dec
pop
sahf
and
mov
lea
es
scas
into
jg
cwde
jae
stos
xor
mov
cmps
pushf
outs
xlat
pop
mov
aad
mov
dec
xor
cmc
cli
push
sbb
call
les
jecxz
sub
mov
push
pop
rep
ror
xchg
dec
pop
js
jne
cmps
and
test
aam
(bad)
or
mov
push
je
adc
xchg
ret
dec
loopne
mov
push
add
xchg
xchg
setnp
jl
mov
shl
mov
pop
xchg
inc
cli
(bad)
lahf
sub
push
into
fs
sar
pop
adc
daa
sub
add
xchg
fs
repnz
mov
(bad)
xor
movs
sar
out
or
dec
xor
dec
inc
(bad)
jbe
inc
sub
xchg
not
mov
dec
push
push
push
add
push
stc
bound
xor
and
jo
dec
pop
dec
xor
loopne
add
sub
(bad)
leave
push
test
mov
loope
iret
outs
mov
ds
jb
ror
sub
fld
or
movs
rcr
in
xor
cmp
jns
jge
or
xor
mov
xchg
arpl
lods
scas
out
inc
push
sysexit
cwde
sub
in
movs
mov
shl
xchg
aad
mov
fs
inc
jnp
xchg
gs
xchg
jmp
add
and
pop
addr16
or
rcl
push
loopne
out
add
add
dec
in
pop
mov
push
jmp
jno
push
loop
push
pop
mov
pop
adc
lds
mov
xchg
aaa
add
jp
push
ret
xor
out
mov
frstor
mov
xor
pop
loop
fcomp
mov
mov
(bad)
in
pusha
cmps
xchg
adc
sbb
add
retf
icebp
sub
nop
fwait
sti
inc
or
sbb
dec
dec
in
mov
push
sub
push
mov
(bad)
daa
gs
jl
or
test
jmp
test
fsub
inc
mov
lahf
arpl
mov
fdiv
jl
sti
mov
inc
cli
sub
jae
xor
add
fcomp
shr
and
sbb
test
inc
dec
sub
xchg
inc
mov
arpl
pop
nop
inc
stc
jae
xchg
xchg
or
mov
pop
movs
js
sar
sbb
inc
pop
pop
fsubr
pushf
aaa
(bad)
lahf
inc
mov
mov
sbb
clc
ins
xchg
mov
scas
inc
sub
(bad)
stc
dec
sbb
cwde
pop
sbb
dec
stc
fdivr
sbb
ret
mov
cmps
aad
lods
test
adc
add
xor
call
xor
xor
(bad)
jecxz
retf
loope
rcr
nop
mov
ficomp
mov
inc
stos
and
jns
test
fwait
cmp
test
inc
inc
xchg
loop
pop
mov
nop
pop
adc
push
dec
push
pop
mov
pop
sti
dec
xchg
rol
inc
lods
inc
outs
imul
sub
or
cmp
add
mov
aaa
xchg
sbb
ficom
adc
jns
les
mov
or
mov
xchg
jmp
hlt
outs
mov
or
add
ds
rol
lahf
add
popa
stos
cmp
push
int3
(bad)
ja
or
fsubr
jp
mov
adc
sar
in
jmp
or
sbb
inc
jns
aam
call
lods
sti
and
mov
sub
aaa
xor
fild
stos
(bad)
mov
jl
or
inc
in
mov
sti
dec
pop
push
imul
call
in
cmc
ins
xchg
in
mov
pop
es
sub
sub
push
(bad)
aam
pop
(bad)
sti
dec
xchg
gs
pop
popa
cmp
inc
add
cmp
xchg
jmp
add
xchg
lods
mov
loope
jo
gs
pop
xchg
je
stos
neg
fs
outs
jg
dec
pop
movs
xor
(bad)
outs
pop
jne
jmp
(bad)
call
(bad)
neg
dec
dec
in
ror
mov
mov
or
mov
std
sbb
sahf
add
cwde
cmovnp
mov
jp
mov
or
test
mov
arpl
cmp
repz
cmp
and
adc
adc
cdq
mov
and
dec
fidiv
daa
loopne
aas
mov
addr16
add
enter
repz
jl
rcr
push
outs
ffree
retf
dec
and
aas
in
cmp
adc
(bad)
cmp
rcl
ret
adc
push
cmp
pusha
push
push
retf
jge
cmps
xor
xchg
mul
mov
cmp
inc
lock
xchg
ret
popw
div
push
and
dec
jg
and
out
xchg
xlat
addr16
stc
sub
fiadd
sbb
lods
adc
or
adc
js
push
aas
add
pop
jge
repnz
ret
xlat
xlat
hlt
mov
push
dec
sar
jge
(bad)
repz
sar
fcomi
movq
and
xor
mov
cmps
stos
sbb
mov
jo
bound
and
das
fnsetpm(287
push
xchg
mov
inc
pop
or
out
ins
int
inc
mov
retf
aad
push
outs
adc
jne
and
(bad)
mov
aaa
sbb
push
(bad)
repz
loop
mov
jmp
xchg
dec
leave
adc
jnp
fiadd
(bad)
popf
cmp
cmps
sbb
out
jl
jb
jmp
daa
or
fnstenv
aas
sub
mov
outs
push
stc
sub
sahf
es
ins
cld
mov
inc
jae
pop
dec
cmp
aam
mov
out
push
fs
fisubr
test
adc
mov
pop
xor
lock
(bad)
xchg
fisttp
push
(bad)
push
arpl
xor
pop
gs
xor
mov
es
inc
in
out
sub
push
es
mov
mov
not
fmul
ret
in
inc
mov
sub
jmp
pop
outs
mov
fidiv
mov
cdq
imul
das
pop
mov
ret
cmps
push
fnstcw
mov
pop
xchg
jg
jbe
std
pop
pop
out
jle
dec
sbb
fidivr
movs
pop
add
pusha
or
repz
outs
sbb
or
jno
cmp
test
mov
mov
(bad)
call
dec
jnp
clc
mov
clc
faddp
aaa
inc
movs
sub
fstp
jmp
push
mov
jne
push
aas
mov
movs
iret
dec
and
add
sbb
outs
out
mov
add
and
fwait
iret
mov
mov
ror
xchg
adc
pop
xchg
xchg
call
sbb
adc
cmp
xchg
jl
adc
movs
sub
in
pop
imul
retf
cmp
adc
aam
sbb
add
jecxz
sub
out
bound
leave
cdq
test
and
pop
imul
dec
xchg
shl
push
cmp
cmp
push
das
out
add
fnstenv
add
sti
push
fucomip
pop
sbb
mov
dec
lea
lods
xor
loop
xchg
mov
aad
push
not
ins
int3
jno
test
loope
cmp
ins
xchg
out
xchg
adc
fld
adc
addr16
xor
(bad)
cmps
or
es
mov
xlat
cwde
jns
loop
cli
lds
jmp
cmp
push
jmp
(bad)
test
mov
dec
and
add
sub
shr
ss
mov
jle
jno
mov
push
lds
into
mov
jl
pusha
jb
jns
cli
fdivr
sar
shl
fld
pop
fadd
stc
test
mov
int3
mov
call
loop
retf
jle
cmps
arpl
dec
pop
fsubr
xchg
dec
mov
dec
lds
pop
push
mov
add
sbb
push
fist
jne
adc
scas
lods
jmp
add
jno
xor
dec
lock
outs
popf
outs
daa
(bad)
jg
jns
jae
jnp
ins
adc
call
sub
fld
cli
ret
jae
and
jg
xor
mov
test
nop
ins
xchg
mov
mov
jle
cld
jmp
scas
(bad)
arpl
cwde
and
mov
inc
aaa
xlat
test
dec
mov
inc
fmul
out
and
lds
push
int
cli
pop
hlt
into
std
ret
or
clc
sbb
or
in
outs
test
iret
xor
inc
aaa
sbb
jne
jp
sub
mov
jecxz
sar
nop
les
sub
mov
mov
shr
js
mov
mov
test
popf
and
fs
stc
inc
inc
outs
repnz
or
rcr
mov
dec
ins
je
dec
xchg
fcmove
shr
mov
lods
adc
jmp
dec
cmps
mov
cmps
xor
inc
sub
test
sti
cmc
test
inc
popf
sti
mov
jp
cmp
call
add
dec
mov
ins
add
mov
pop
xor
xchg
mov
not
sbb
sub
mov
jp
xor
in
cli
sbb
xchg
cmp
ror
jle
pusha
rcr
sbb
xchg
sbb
mov
mov
in
mov
pop
xor
fstp
jae
dec
xchg
cwde
xor
retf
mov
pop
gs
in
fwait
jae
push
push
not
cmc
xlat
mov
sahf
enter
sub
repnz
jae
or
and
mov
add
inc
or
adc
inc
adc
fs
mov
les
fadd
mov
or
hlt
lods
inc
retf
cmc
js
jo
(bad)
cmp
xchg
mov
cmps
test
push
loop
jae
mov
cmp
xchg
cmp
mov
push
aaa
sub
mov
or
(bad)
xlat
(bad)
sti
sbb
sbb
push
daa
fld
mov
test
and
inc
shr
dec
aas
push
xchg
or
fdivr
test
add
(bad)
jb
sub
pop
mov
scas
loopne
jp
cmp
fidivr
(bad)
fidivr
les
int
jmp
cmps
and
imul
ss
cmp
push
in
sub
fcmovb
xchg
movs
repz
shl
adc
push
mov
or
imul
push
loope
dec
mov
stc
mov
bound
push
pop
push
mov
(bad)
add
mov
stos
pop
imul
retf
cs
and
dec
add
in
dec
sbb
dec
push
loopne
xor
dec
jae
lods
std
je
gs
and
cdq
sub
dec
mov
mov
and
daa
(bad)
out
retf
cmp
int
out
mov
adc
jmp
mov
(bad)
jmp
(bad)
cdq
loop
cs
sub
mov
jmp
addr16
ret
inc
dec
ja
vcvttss2si
int3
int3
pop
int3
cld
pushf
pusha
das
push
(bad)
std
(bad)
push
add
je
push
or
add
scas
dec
arpl
xlat
fst
mov
jg
cli
test
jo
ret
inc
popf
jnp
(bad)
shl
stos
adc
jo
pop
mov
addr16
call
or
fwait
xchg
outs
mov
jnp
les
enter
mov
daa
mov
cmp
int3
sahf
daa
popf
mov
push
shr
pop
adc
bound
loopne
pop
jge
and
jb
cmp
imul
cmp
adc
mov
test
pop
sub
jno
(bad)
enter
and
add
mov
mov
xor
movs
inc
cmp
ror
sub
jbe
mov
retf
out
scas
jbe
xlat
xchg
into
push
sbb
xor
jnp
sub
adc
in
and
mov
pop
repz
pop
inc
adc
dec
ss
cmp
adc
jae
cmp
push
sti
jge
pop
inc
mov
ds
and
lea
(bad)
sbb
pop
or
xchg
lahf
mov
jb
shl
inc
(bad)
xchg
and
lods
xchg
add
mov
or
out
(bad)
and
push
ror
xor
pop
push
cmp
arpl
or
add
aam
cmp
fsubr
enter
push
cdq
gs
pop
out
mov
ins
push
mov
and
cmp
push
fadd
das
cdq
cwde
fcomp
ret
inc
fdivr
repnz
jae
aaa
dec
imul
icebp
nop
mov
adc
test
sub
std
call
xor
fld
mov
jno
cmp
hlt
xor
push
(bad)
sub
xor
mov
sub
jle
stc
inc
or
cmp
dec
test
pop
jge
inc
or
jnp
pushf
rol
in
add
mov
js
jge
pop
inc
aas
cmp
scas
inc
xor
js
mov
movs
mov
fsub
add
fwait
nop
sub
out
jns
mov
out
out
and
fnstenv
out
retf
out
imul
xor
xchg
inc
out
xor
inc
ret
pop
mov
aam
ret
jne
pusha
mov
push
movs
mov
cmp
lock
xor
xor
jmp
adc
mov
test
or
or
pop
popa
cli
movs
fsub
and
add
push
or
popa
jmp
cmp
jmp
dec
mov
inc
and
sbb
mov
das
xor
(bad)
stos
adc
mov
leave
jmp
jp
mov
mov
loopne
mov
mov
pop
sub
ret
or
pop
js
pop
test
cdq
adc
ins
xchg
call
das
or
cmps
js
or
nop
outs
mov
sbb
clc
push
and
adc
pusha
mov
jmp
(bad)
cmp
cmp
bound
and
movs
stos
fstp
pushf
repz
out
(bad)
pop
out
test
sub
mov
adc
adc
movs
add
std
int
dec
mov
xor
push
jne
add
add
ins
pop
xlat
sbb
ins
aam
stos
xchg
or
xchg
push
daa
xchg
xor
pop
xlat
mov
sbb
div
push
imul
loope
lahf
or
adc
and
ds
lea
or
imul
dec
inc
jbe
inc
push
aas
push
sahf
iret
adc
icebp
leave
cs
cs
daa
mov
cmp
inc
stc
adc
cmp
cli
into
repz
xchg
dec
lods
(bad)
aaa
lahf
and
mov
mov
loope
sar
xchg
inc
stos
arpl
mov
mov
aad
mov
test
les
or
mov
adc
scas
xor
and
dec
mov
movs
mov
cmc
cwde
mov
jle
jle
bndldx
adc
dec
ficomp
mov
jbe
loop
sahf
mov
push
lahf
mov
mov
fs
lea
test
aam
stos
leave
ds
popa
mov
je
aam
inc
cmps
and
stc
popf
outs
mov
jmp
test
cld
push
sub
inc
push
in
test
dec
ds
(bad)
out
or
lock
mov
or
jae
sahf
pop
pop
jmp
je
shl
cld
pop
aas
pop
fisubr
leave
mov
out
add
mov
and
inc
fistp
dec
cmp
mov
std
(bad)
shl
sub
fistp
cmp
(bad)
aam
mov
sub
and
clc
pop
inc
movs
pop
loopne
xor
cmp
push
mov
inc
adc
or
xchg
xchg
imul
jnp
xchg
push
fwait
pop
jb
push
cmp
xor
pop
cmp
mov
jmp
dec
inc
mov
sbb
inc
or
push
out
mov
gs
stos
test
fstp
cld
sbb
mov
cmp
ss
movs
xchg
jge
cmp
push
jne
out
or
fwait
mov
or
dec
repz
xor
clc
add
retf
cmp
add
popa
ret
xor
sub
mov
repnz
jecxz
mov
ds
das
shl
or
mov
test
mov
fimul
call
or
pushf
xchg
dec
jbe
fnsave
(bad)
cmp
sbb
push
jne
out
adc
shr
scas
in
fisttp
jge
leave
sub
push
aas
fwait
cmp
fsub
repz
adc
popa
ror
test
(bad)
dec
and
mov
push
xchg
dec
sti
jmp
inc
loopne
aaa
push
and
jo
js
jl
enter
push
pop
bswap
dec
mov
and
push
add
cmp
(bad)
jae
movzx
cmp
dec
iret
mov
push
push
icebp
aas
jge
cmp
retf
cmps
rcr
lods
or
xor
retf
pop
add
dec
dec
enter
daa
inc
xchg
sbb
clc
in
or
jecxz
mov
mov
dec
mov
(bad)
loope
(bad)
mov
retf
lea
jns
jno
xchg
push
xchg
push
jnp
mov
or
sbb
lahf
adc
aam
pop
adc
push
dec
adc
mov
mov
pop
or
and
nop
or
(bad)
fcom
movs
add
mov
scas
xor
cmc
mov
and
mov
mov
add
xor
sub
and
pop
mov
jb
fadd
and
sahf
dec
dec
cmp
fdivr
pop
pop
xlat
(bad)
push
nop
jmp
inc
fidiv
cmp
call
fwait
sbb
js
scas
je
push
sub
xchg
daa
add
xor
hlt
mov
xor
sub
xchg
dec
jge
sti
pop
push
aas
xchg
push
int3
es
add
xchg
cmp
jl
(bad)
ja
out
mov
sub
adc
scas
mov
jecxz
repnz
cwde
out
lds
sub
pop
loop
inc
mov
and
pusha
lds
jae
sub
sub
std
mov
jl
dec
sub
fbld
inc
mov
ret
adc
ret
mov
mov
sahf
sbb
loope
ror
dec
and
(bad)
sub
loop
push
cdq
test
sub
mov
jns
icebp
push
bnd
out
icebp
inc
outs
cmps
ficom
xchg
hlt
mov
push
sbb
je
inc
mov
xchg
call
cmp
xor
sbb
dec
ficomp
xchg
pusha
cmp
push
and
scas
scas
mov
add
in
daa
cs
pop
shr
sub
cmp
sahf
push
jp
mov
popa
or
xor
and
int
pop
imul
mov
jae
jne
lods
mov
cmp
inc
inc
cld
inc
or
xchg
popa
iret
cmp
mov
add
sbb
pop
push
mov
jne
cmc
xor
and
cwde
pop
fwait
inc
pop
fwait
sbb
jae
push
push
shl
mov
hlt
mov
push
loope
test
retf
dec
loopne
mov
mov
popa
dec
mov
ficom
mov
mov
inc
xchg
pop
fs
outs
out
xchg
clc
pop
rcr
stos
and
int
(bad)
jae
sub
sbb
pusha
inc
out
sbb
push
pushf
aas
ja
inc
mov
test
fidivr
loopne
popf
mov
test
not
mov
mul
dec
sahf
or
dec
adc
cli
stos
mov
call
arpl
out
mov
enter
jmp
popf
xchg
repz
mov
ins
retf
pop
sbb
dec
(bad)
dec
stc
jecxz
out
enter
xor
add
ror
lea
js
jle
sbb
push
mov
cdq
pusha
shl
or
or
mov
adc
or
scas
dec
dec
or
xchg
daa
jecxz
lods
ror
stos
mov
leave
mov
mov
mov
cmp
jp
or
call
arpl
mov
retf
fadd
inc
push
jno
rcl
pop
xchg
test
mov
inc
dec
clc
dec
movs
dec
jnp
and
xchg
xchg
cld
enter
pusha
aam
es
or
lods
cmc
jmp
ret
movs
sar
inc
pop
stc
fild
pop
pop
(bad)
dec
int3
int
inc
inc
pop
outs
leave
jl
sub
jle
add
fcmovnbe
(bad)
lock
add
fwait
jle
or
and
mov
ds
push
bound
sti
mov
bound
and
imul
pop
mov
push
popa
loopne
pop
push
stos
add
xor
inc
into
sbb
jmp
les
enter
leave
jo
mov
ss
stos
sub
adc
inc
jnp
sbb
leave
jle
es
add
dec
(bad)
lock
loope
mov
dec
add
jecxz
jp
shl
xchg
hlt
aam
lock
lock
(bad)
std
xor
adc
add
cs
rcr
jmp
sar
sti
dec
clc
loop
fsubr
rcl
call
(bad)
or
sbb
repnz
push
loope
jno
sahf
popf
lahf
jmp
mov
push
mov
or
sbb
adc
test
cmp
dec
or
add
jae
pop
xor
out
xchg
gs
pop
fdivr
push
aad
popf
call
xlat
adc
mov
push
mov
aad
jmp
das
cmps
and
nop
mov
arpl
jne
fscale
js
push
dec
ins
mov
push
pop
add
jge
or
jmp
loopne
adc
(bad)
dec
cld
mov
mul
clc
jg
test
xor
stos
push
push
test
xor
(bad)
out
adc
dec
adc
push
sub
pushf
out
xor
sbb
das
enter
sub
das
pop
mov
in
loopne
shl
xor
jo
push
les
mov
mov
push
es
and
sub
dec
jne
in
push
push
iret
adc
mov
push
ret
mov
mov
dec
pushf
add
sar
icebp
xchg
inc
inc
xchg
push
movs
xchg
mov
xchg
mov
out
fdivr
int3
mov
in
pop
xchg
(bad)
push
inc
hlt
movs
mov
hlt
ds
or
loop
xor
and
ror
aas
xchg
mov
push
cmp
cmp
dec
fs
fist
mov
mov
sub
dec
ret
clc
out
xchg
imul
and
gs
lds
test
(bad)
add
push
(bad)
data16
in
call
sbb
add
out
loop
pusha
rol
or
or
movs
or
repz
push
add
sub
or
mov
sbb
retf
das
mov
and
lock
fwait
and
test
or
repnz
into
and
pop
xchg
push
in
nop
xor
dec
mov
pop
push
mov
push
sbb
and
push
xor
and
mov
mov
xor
pop
loop
mov
ret
fstp
push
aad
mul
cdq
(bad)
dec
push
js
sub
mov
icebp
cld
fisubr
sbb
dec
pop
daa
sbb
(bad)
adc
pop
mov
loop
scas
push
sub
xchg
jne
hlt
sbb
out
mov
sub
xchg
sub
xor
gs
push
mov
js
in
and
xchg
dec
lahf
dec
mov
cmc
aam
xchg
fild
mov
inc
(bad)
and
mov
jo
push
(bad)
pop
in
dec
test
aad
das
int
inc
xchg
cmp
cdq
and
(bad)
iret
or
leave
adc
mov
aaa
in
(bad)
jmp
ret
add
mov
jb
push
or
hlt
mov
rol
test
movs
xor
add
jge
retf
jmp
push
mov
mov
aam
sub
mov
inc
clc
(bad)
loop
fcom
sub
rcr
fdivr
jp
add
dec
sub
imul
mov
out
lds
sub
fwait
mov
jne
or
jne
in
push
in
or
movs
ins
mov
mov
mov
sub
clc
test
add
or
(bad)
sbb
and
or
inc
cmovs
call
jbe
or
pop
add
je
shl
clc
push
aad
push
test
xchg
sub
inc
lds
pop
add
mov
inc
add
ret
cmc
xor
shr
mov
ret
jmp
pop
les
mov
and
push
fsubp
gs
sbb
mov
jo
outs
mov
cwde
or
mov
cmp
stos
adc
pop
push
jl
jae
loopne
retf
cmp
js
mov
sub
and
mov
(bad)
mov
scas
jmp
test
cmps
mov
nop
inc
ss
ss
icebp
idiv
ja
jle
sbb
stos
pop
int3
sbb
push
fmul
xlat
es
xor
cwde
mov
out
fcomp
ins
jmp
inc
mov
and
pop
std
adc
pushf
test
cmps
test
xchg
mov
jmp
mov
push
das
dec
mov
mov
sub
pop
jl
sahf
push
push
cmc
movs
daa
sub
mov
sub
push
xor
call
rcl
repz
(bad)
test
mov
dec
jno
les
pusha
movs
cmps
pop
retf
and
sbb
adc
jno
sub
cmp
test
scas
icebp
pop
enter
mov
inc
xor
push
imul
mov
xlat
call
mov
mov
dec
pop
test
fst
adc
push
test
enter
stos
and
in
jnp
mov
sbb
xchg
sahf
and
ins
mov
fisttp
repz
sub
in
sub
test
cmp
xchg
in
or
add
push
mov
jbe
cmp
dec
int
aaa
shr
(bad)
in
out
iret
add
lock
xlat
lahf
aaa
test
push
jle
(bad)
cli
jbe
inc
xchg
add
inc
xor
push
shl
mov
cmp
sar
lahf
sti
(bad)
mov
mov
lods
repz
push
dec
push
sbb
mov
pusha
jbe
jns
(bad)
xor
cmc
sub
dec
pop
loope
cmps
clc
ds
ror
in
add
call
out
daa
mov
data16
inc
stos
xchg
cld
retf
fdiv
mov
in
push
xchg
inc
rep
jns
adc
cld
xor
push
pop
fwait
(bad)
neg
cmp
mov
push
cld
mov
add
xchg
push
es
cld
push
mov
cmp
loopne
push
bound
adc
or
xor
repz
inc
(bad)
dec
(bad)
fstp
call
stos
mov
clc
jmp
fmul
clc
cmps
inc
rcl
outs
add
js
jnp
stos
cmp
inc
pop
dec
xchg
(bad)
or
jecxz
jmp
aas
or
not
pop
adc
daa
cmp
movs
stos
xchg
xchg
jmp
mov
lahf
cdq
dec
xchg
add
mov
jge
fs
outs
add
fcomp
ins
mov
mov
sti
pop
fld
pop
das
pushf
pop
fsub
lock
pop
jo
scas
jg
ficomp
cmp
or
inc
jl
and
pop
(bad)
pop
add
stos
cmc
pop
arpl
loope
sub
cmps
or
(bad)
in
push
jmp
xchg
jo
push
add
test
add
xor
mov
mov
es
imul
fst
test
xchg
setge
cmp
push
lods
outs
push
adc
pop
mov
or
leave
push
push
loope
addr16
cmp
inc
pop
add
or
push
fadd
mov
xor
dec
ins
fcomip
xchg
sbb
dec
pop
cmp
dec
sub
pop
xchg
sub
mov
mov
jo
fs
std
cli
jns
loop
enter
mov
xchg
adc
mov
add
retf
cs
sbb
out
shl
stos
xchg
fwait
icebp
pushf
jge
cmp
jns
sbb
mov
outs
dec
es
sub
fidiv
mov
cmp
lods
jb
inc
mov
test
or
sahf
inc
retf
es
lods
xchg
push
(bad)
xlat
cli
sbb
and
(bad)
xchg
in
push
and
shr
cli
out
jle
bound
push
sub
inc
ret
mov
xor
mov
lahf
paddd
jb
mov
dec
push
sub
bound
push
inc
dec
mov
ss
lods
test
dec
(bad)
fmul
bound
cmp
jl
cwde
ja
in
outs
pop
sbb
jo
imul
imul
outs
lds
in
inc
xor
test
inc
pop
xor
push
or
cmp
mov
mov
lds
sub
jecxz
(bad)
push
pop
in
cmps
adc
les
popa
(bad)
aas
aas
cmp
repz
pop
pop
sbb
fnstenv
mov
cmp
xor
jno
xor
std
inc
xchg
jle
mov
cld
add
fs
or
into
pop
dec
mov
aam
sar
jg
arpl
mov
jmp
push
adc
xor
xor
jecxz
repz
std
pop
inc
daa
mov
ret
pop
adc
addr16
mov
dec
jmp
adc
frstor
mov
inc
or
inc
xchg
or
nop
int3
pop
add
cmp
lahf
stos
mov
jbe
arpl
fwait
test
cdq
pusha
cld
push
inc
popf
pop
pop
mov
cmp
int
out
push
and
in
pop
or
dec
mov
lods
in
cmp
mov
test
sub
ins
xor
enter
inc
(bad)
mov
mov
popf
shl
jl
or
jg
cwde
loope
xchg
xchg
mov
mov
add
push
sbb
and
shl
pop
aad
in
mov
rol
inc
jge
jmp
mov
inc
(bad)
sahf
sub
out
adc
test
inc
xchg
mov
ja
and
mov
xor
mov
and
dec
lods
icebp
push
cmps
sbb
add
and
cld
imul
sbb
xor
int
lods
pop
(bad)
out
pop
and
test
stos
xchg
xor
cmps
(bad)
push
push
or
cmp
jno
mov
fs
cmc
data16
pop
std
imul
and
xor
mov
mov
sub
or
sub
mov
jmp
js
repnz
retf
retf
push
test
movs
or
out
aaa
jo
add
sub
call
cmc
fld
push
loop
pop
adc
xor
lahf
add
sbb
xor
pop
mov
sbb
inc
std
ja
push
fwait
jl
stc
xchg
rol
fdivr
lock
rol
out
mov
pop
ja
jecxz
shl
cmps
lock
xchg
mov
cli
cmp
pop
mov
jbe
fwait
mov
not
xchg
push
test
out
mov
mov
jbe
test
mov
push
mov
test
jle
(bad)
scas
popa
pop
sar
push
cmp
cmp
jge
gs
jg
mov
popf
aam
icebp
fidiv
jge
gs
cli
add
push
mov
ds
jp
shl
push
xchg
push
mov
dec
xor
push
adc
mov
out
cli
mov
dec
dec
and
test
enter
add
or
sbb
sbb
push
(bad)
mov
inc
dec
dec
mov
lods
xchg
dec
cli
jns
adc
xchg
in
mov
sub
xor
mov
repnz
push
je
xchg
test
push
add
adc
aas
pop
mov
fadd
in
and
jle
out
cmc
mov
retf
mov
(bad)
or
inc
sahf
sbb
jge
test
push
int
enter
ucomiss
mov
test
dec
inc
fcomi
inc
clc
sub
sbb
scas
dec
and
test
pop
loopne
int3
and
mov
int3
(bad)
(bad)
cld
mov
jle
repz
pusha
out
xchg
xchg
and
call
xchg
xchg
xor
in
sub
adc
icebp
call
pop
leave
scas
push
outs
mov
sti
xor
in
xchg
sub
mov
push
pop
sub
adc
or
or
xor
nop
fist
(bad)
cmc
sub
outs
test
and
sbb
xchg
repnz
adc
push
movs
cdq
jno
inc
jl
xchg
push
je
xchg
fs
std
jl
jge
jo
inc
sbb
arpl
add
cwde
pop
ins
ins
mov
in
leave
aaa
sub
push
jle
call
lgdtd
adc
out
jnp
ins
dec
fsqrt
xchg
lea
fmul
inc
mov
daa
cld
inc
push
int
pop
retf
retf
loopne
sub
push
dec
in
addr16
inc
loop
leave
pop
je
(bad)
fnstsw
push
mov
jnp
jb
ds
inc
imul
sbb
repnz
inc
inc
aad
test
(bad)
push
inc
xchg
pop
out
xchg
shl
jp
in
adc
push
mov
lock
lea
ins
pop
mov
repz
mov
and
test
stos
mov
jge
dec
sub
mov
in
xchg
lds
push
dec
jbe
mov
and
shr
stc
dec
sub
test
pop
add
imul
mov
sub
or
pop
les
movs
cmps
sbb
xor
adc
mov
push
popf
adc
inc
out
icebp
shl
lods
into
jmp
xor
mov
movs
cmp
(bad)
je
fdivr
dec
outs
fisttp
shl
test
sub
jmp
jl
cs
repz
sbb
sbb
adc
add
push
popf
or
jnp
push
push
(bad)
mov
pop
and
xor
mov
and
xchg
ds
ror
and
push
jecxz
jge
test
stos
out
mov
and
jl
stc
sub
push
mov
repnz
sbb
mov
xchg
or
aas
cvtpi2ps
loopne
inc
push
xchg
jmp
mov
repnz
shl
xlat
jne
rcl
push
rol
dec
pop
sti
or
mov
loop
test
sbb
jle
jb
sub
push
lods
jno
pop
iret
sub
inc
mov
mov
jnp
enter
cmps
inc
aaa
push
mov
pop
add
mov
in
add
loope
push
push
stos
ficom
or
lock
adc
jmp
addr16
add
push
push
or
jl
and
sub
inc
cmp
hlt
in
clc
loopne
and
int
pop
sbb
push
stc
pop
std
test
pop
jle
adc
or
pop
or
jo
cmp
mov
loopne
mov
push
and
sub
jb
pop
cmp
repz
out
ins
outs
ss
cli
push
mov
add
or
arpl
rcl
push
push
call
inc
sahf
rol
sub
and
or
jl
sbb
rcl
push
popa
pop
(bad)
mov
adc
retf
jl
cmp
loopne
jg
mov
push
add
push
mov
mov
lahf
push
(bad)
push
mov
xor
pusha
mov
add
mov
xchg
add
push
call
and
xchg
test
xor
mov
in
shl
test
call
int3
test
repnz
das
adc
(bad)
loop
and
adc
ss
dec
cmp
ins
out
leave
sar
mov
push
sbb
scas
ins
jp
add
add
cld
push
fwait
dec
repz
cmp
pop
mov
jb
adc
mov
push
fcmovb
jo
mov
mov
xlat
es
movs
sbb
xor
ror
pop
fstp
movs
add
das
inc
dec
pavgb
(bad)
aaa
push
xchg
fsub
(bad)
std
pop
mov
popa
pop
in
cmp
or
ret
cs
hlt
jmp
cmp
daa
in
out
rcr
lods
call
and
shr
mov
punpcklbw
dec
xchg
and
mov
mov
dec
mov
and
or
fsincos
daa
fsubr
jb
xor
call
ret
mov
outs
mov
(bad)
iret
cmp
or
ss
mov
cdq
imul
mov
fcom
lds
xor
in
xchg
xor
cmp
popf
aas
mov
loop
fisub
fidivr
cli
mov
cmp
jns
dec
push
lock
cwde
and
adc
imul
outs
outs
or
jne
ja
xchg
nop
fs
mov
xchg
xchg
add
xchg
or
pop
test
inc
and
arpl
jmp
sahf
xchg
mov
fst
push
in
fucom
mov
sbb
jb
ins
dec
or
fwait
adc
shr
xchg
ins
sub
imul
bound
in
add
popf
idiv
add
aaa
ins
out
daa
adc
push
pop
fidiv
out
push
das
ds
jge
mov
fxch
outs
cld
in
sub
pop
fs
repnz
out
jb
inc
cmp
jmp
jns
bound
xor
pop
ins
imul
inc
push
cdq
ret
daa
in
pop
xchg
sub
pop
adc
inc
lods
cmc
sysret
dec
xor
mov
loopne
cld
push
fwait
jg
xchg
mov
adc
dec
cmp
add
push
or
enter
pop
mov
retf
pop
fistp
mov
nop
stc
loope
adc
loop
push
xchg
push
pop
mov
mov
inc
dec
xchg
popa
in
imul
mov
push
and
lea
cmc
retf
and
stos
pop
mov
mov
mov
jmp
and
xor
mov
push
data16
push
inc
pop
(bad)
in
xchg
bound
jne
loopne
in
dec
mov
addr16
and
mov
adc
scas
mov
sbb
xchg
mov
lock
or
inc
xor
in
push
aam
xor
movs
mov
cmp
or
pop
xchg
ins
clc
call
xchg
cmp
repz
aaa
push
jmp
dec
cmp
loopne
hlt
mul
(bad)
jns
cmp
sub
cmp
leave
ins
(bad)
xchg
sbb
stos
jp
pop
push
ror
mov
retf
aad
xor
fisubr
movs
test
js
cmp
cmc
cdq
mov
ja
jl
sbb
gs
fadd
movs
inc
xchg
call
hlt
push
fnstenv
push
imul
cwde
cmp
pop
or
cmp
cmps
out
cmps
sub
cmps
mov
shr
xchg
mov
xchg
cmp
pop
leave
inc
sub
ds
pop
dec
nop
mov
add
inc
cmp
xchg
xchg
dec
pop
pop
adc
fistp
cli
shr
cmp
in
push
(bad)
std
inc
shl
xchg
sub
fdivr
shl
fldcw
outs
iret
mov
push
fistp
xchg
xchg
inc
std
movs
xor
add
test
icebp
jge
push
sbb
in
popf
xlat
xchg
ins
sub
lods
iret
sub
push
mov
or
sbb
lea
enterw
inc
lds
enter
xor
mul
cmps
pop
cmp
xor
cmp
ret
xlat
cmp
or
add
sbb
repz
jge
cmp
jae
shl
mov
loope
pop
mov
jb
xlat
and
lods
popa
xchg
bound
repnz
div
sub
repz
out
sbb
rol
jp
(bad)
in
into
jge
fwait
adc
xor
pop
cmp
xor
in
or
cmc
pop
push
cmp
and
in
jno
pusha
iret
in
iret
(bad)
jle
sar
sub
popa
in
pop
push
mov
xchg
fidivr
xchg
or
dec
sbb
lods
xchg
xlat
ins
ins
xchg
stos
ja
enter
scas
inc
call
(bad)
cmp
fst
pop
ds
lahf
xor
psubd
enter
inc
add
inc
enter
lea
pop
lea
in
xor
cmp
xchg
(bad)
pop
ss
repnz
dec
cmp
or
fmul
lahf
cdq
pop
or
inc
iret
or
inc
fs
retf
pop
pop
or
mov
cmps
stos
add
push
dec
int3
not
pavgw
mov
test
mov
cmc
xor
sub
and
ds
xor
mov
(bad)
out
sbb
xchg
pusha
push
sub
adc
data16
stos
push
inc
scas
mov
adc
pop
sub
fucomi
test
into
jecxz
add
jnp
stos
dec
test
scas
out
add
int3
aad
and
sub
jmp
shl
cmps
push
repnz
fiadd
jecxz
jge
clc
gs
out
ror
dec
and
mov
test
hlt
cmps
aad
sub
jmp
(bad)
lods
push
dec
pop
mov
sub
pushf
imul
dec
jle
js
xchg
mov
out
movs
mov
push
pop
std
stos
outs
jnp
inc
mov
daa
inc
sti
or
scas
dec
sbb
call
aam
jae
jg
xchg
ret
ret
jecxz
xchg
int3
add
mov
xor
xor
lods
push
out
mov
xor
(bad)
mov
jbe
aam
(bad)
sbb
sub
std
psubw
or
loop
mov
loope
imul
adc
mov
sub
enter
lods
push
ror
in
loopne
loop
iret
push
repz
out
in
jle
dec
(bad)
iret
sub
jne
mov
pop
out
and
(bad)
adc
or
sbb
fwait
cmc
add
ins
xor
(bad)
jmp
out
jbe
mov
sbb
adc
adc
xchg
(bad)
cmps
jae
adc
xor
in
and
mov
movs
loop
mov
pop
mov
idiv
sub
(bad)
xor
repz
out
xor
scas
je
adc
ret
add
push
mul
mov
fadd
xchg
sbb
(bad)
adc
cwde
outs
popw
or
pop
fld
(bad)
in
rcr
retfw
xor
mov
xchg
cmp
ret
mov
sbb
sub
cli
adc
dec
xor
inc
add
inc
popa
mov
shr
mov
or
dec
add
xchg
in
inc
mov
jmp
mov
mov
repnz
fnsave
pop
mov
xor
mov
div
mov
sub
ja
xor
aad
mov
aaa
test
neg
and
lahf
adc
add
push
adc
arpl
dec
fs
ja
loopne
out
xchg
xchg
sbb
clc
add
gs
xchg
mov
loope
mov
neg
push
xlat
fucom
js
cmps
aas
inc
outs
outs
pushf
test
and
inc
mov
das
int3
xlat
adc
bound
pop
xchg
fdiv
outs
mov
cs
sub
push
xor
aad
mov
fdiv
es
and
pop
sar
je
ins
mov
add
int
bound
movs
test
ja
mov
adc
bound
pushf
repz
aas
jge
cmp
sbb
out
sahf
bound
mov
enter
push
or
mov
pusha
leave
push
popf
das
push
xchg
dec
cmp
mov
sub
push
adc
cmp
arpl
outs
push
fwait
jg
mov
int
bound
push
or
lahf
(bad)
mov
and
mov
inc
ds
jnp
iret
ret
dec
mov
cmp
ds
das
outs
lods
repz
cmp
fwait
sbb
movs
rol
mov
iret
dec
(bad)
rol
mov
fsubr
and
imul
addr16
mov
mov
jmp
aad
shl
cli
adc
std
imul
sahf
and
jle
lds
imul
test
cs
or
mov
sub
jb
ins
pusha
(bad)
popa
push
jmp
jg
sbb
addr16
mov
add
je
xor
imul
inc
xor
test
and
adc
imul
fst
stos
retf
pop
fisub
stos
mov
in
cdq
popa
pop
clc
adc
fld
int
hlt
fld
jg
ret
stos
aas
js
jp
(bad)
mov
retf
push
test
test
jecxz
mov
fsubr
or
fnstenv
push
dec
aas
sbb
push
pop
jne
and
lods
pop
xor
push
or
fistp
pop
adc
sbb
push
adc
cmp
pop
mov
jae
push
pop
lahf
gs
test
push
(bad)
cvttps2pi
add
push
jg
jle
inc
js
jb
int
cli
std
mov
ja
and
cmps
xchg
cmp
mov
jmp
pusha
or
inc
int
fxch
scas
and
es
jle
jmp
aam
adc
mov
mov
popa
call
push
xlat
push
push
pusha
dec
stc
jbe
nop
gs
lahf
(bad)
(bad)
cmps
pop
jne
cmc
lods
clc
addr16
mov
stos
nop
and
aad
imul
mov
mov
dec
(bad)
(bad)
xchg
rol
or
inc
dec
push
mov
or
push
int3
shl
fstp
ret
jnp
bound
data16
adc
popa
out
or
push
push
fcomp
xor
pop
cmp
mov
jg
and
(bad)
jns
sbb
mov
shl
repz
inc
int3
addr16
clc
test
and
pop
sub
mov
add
lods
out
sub
or
pop
out
adc
adc
repnz
bound
xchg
adc
mov
xchg
mov
cmc
jbe
test
popf
loope
cmp
arpl
mul
mov
retf
loopne
neg
and
shr
nop
mov
adc
xchg
or
fsubr
and
xchg
dec
cmp
add
inc
pop
movs
jecxz
or
mov
fmul
ja
push
hlt
mov
inc
dec
mov
bound
inc
dec
ds
add
in
mov
ror
jno
pop
sub
and
add
fild
neg
jl
sub
js
mov
mov
mov
addr16
cwde
out
push
mov
mov
outs
sub
(bad)
sub
ds
(bad)
cmp
cmp
pop
push
test
shr
(bad)
out
aaa
or
mov
and
fs
(bad)
ror
push
and
push
push
jl
stc
(bad)
xchg
and
lods
mov
jmp
dec
pop
aaa
out
cdq
mov
cmps
test
mov
aas
xchg
jmp
push
xchg
test
dec
cli
cmp
mov
dec
aas
cmovo
rcr
shl
addr16
test
pushf
dec
xchg
repnz
jl
aaa
sbb
pop
xchg
mov
int3
xor
pop
or
adc
aaa
movs
adc
xor
sbb
mov
movs
mov
xlat
sbb
aas
jle
or
lods
in
pushf
shl
inc
arpl
push
(bad)
and
test
jmp
sub
fld
in
and
push
add
xchg
mov
iret
out
sahf
xor
rcr
nop
sub
scas
xor
pop
loope
jl
ja
pop
mov
add
test
rol
das
jbe
and
fiadd
mov
pop
dec
lods
(bad)
push
clc
mov
nop
ins
inc
stc
retf
inc
div
dec
sbb
std
xor
cmp
movs
jle
mov
nop
add
jp
repz
test
push
mov
gs
sub
adc
cmp
sbb
dec
arpl
add
and
jmp
add
add
add
aaa
jmp
jle
xchg
push
ins
mov
lods
cmp
leave
in
int3
rol
fisub
or
xchg
pop
mov
loope
inc
call
ins
jp
mov
mov
outs
mov
lock
push
and
div
xchg
call
and
sbb
push
jo
mov
jg
sbb
mov
xchg
mov
inc
js
xor
sbb
ja
fdiv
adc
shl
fbstp
jnp
cmps
int
loope
xchg
cmp
push
push
mov
test
aas
cmp
enter
xchg
inc
jo
in
push
adc
(bad)
test
pop
jge
imul
dec
cmp
popf
mov
or
mov
jbe
dec
inc
in
test
sahf
cmps
cmc
cmp
push
aaa
je
rcpps
xchg
mov
sub
aad
mov
inc
fdivr
aas
push
sub
lods
mov
(bad)
(bad)
dec
repz
sub
cmp
pop
(bad)
jmp
mov
test
sub
mov
into
data16
fist
or
loop
inc
cwde
and
adc
sub
test
cs
xlat
ret
adc
loopne
xor
shr
sahf
clc
lea
and
cwde
and
cdq
cmp
data16
and
sub
xor
jb
xor
clc
gs
and
mov
sub
scas
movs
sti
pop
jbe
(bad)
push
xchg
std
xchg
mov
ret
pop
dec
or
fcom
clc
int
push
jmp
xchg
and
cmps
and
pushf
ret
fbstp
jne
cmp
out
aam
mov
inc
pushf
aam
push
inc
(bad)
pushf
cmp
add
ins
push
out
repz
outs
add
mov
fist
stos
xchg
cld
(bad)
addr16
(bad)
xchg
cli
dec
fbld
test
inc
lods
dec
(bad)
ror
dec
cmps
sti
mov
lock
(bad)
push
out
dec
or
cmp
or
inc
nop
adc
daa
ins
push
add
or
cmp
in
dec
or
mov
or
sahf
test
outs
in
add
pop
dec
sub
inc
adc
inc
or
sbb
mov
call
cmps
push
pop
daa
push
cmps
mov
sub
cmps
and
pop
pop
loopne
add
(bad)
and
aad
hlt
adc
dec
or
into
xchg
push
pusha
or
mov
xchg
cmp
imul
jbe
mov
js
inc
or
adc
xchg
xlat
cmps
fdivr
pop
inc
inc
popf
fisubr
test
lea
jb
rcr
pop
in
adc
add
jno
iret
std
sub
cmps
add
cmc
ins
imul
dec
ret
sub
in
pop
add
ret
addr16
or
outs
mov
jae
out
xor
push
das
std
pop
in
vmovq
cmp
popa
mov
push
call
dec
jecxz
loopne
mov
xchg
popf
cmp
pushf
rcr
outs
xor
adc
mov
sbb
mov
dec
cmc
rcl
test
jnp
jb
mov
jmp
push
sbb
xchg
retf
(bad)
in
pop
dec
cmps
mov
(bad)
ins
outs
retf
pop
jne
mov
les
shr
pop
(bad)
mov
inc
(bad)
push
xor
dec
add
sti
fwait
cmps
movs
fidiv
stc
frstor
inc
jecxz
pop
mov
push
test
jp
sub
std
adc
xor
jecxz
jp
lahf
mov
aaa
pop
pop
mov
(bad)
cld
aas
pusha
loop
(bad)
mov
arpl
or
lea
dec
jno
in
sbb
mov
push
test
mov
push
dec
inc
loope
clc
movs
in
push
into
shr
test
adc
mov
popa
sbb
push
inc
inc
mov
adc
adc
ja
js
push
push
xchg
fisubr
and
xor
cdq
xlat
lahf
mov
loop
dec
push
loopne
cmps
xor
pop
dec
loope
add
mov
ret
pop
stc
(bad)
mov
mov
ja
test
push
sub
mov
sub
inc
cmp
fild
mov
cs
xor
push
shr
jecxz
(bad)
dec
dec
push
jo
fmul
(bad)
in
adc
or
cld
aaa
add
add
push
int
xchg
jns
hlt
inc
outs
out
add
je
clc
dec
scas
add
clc
cli
push
sbb
ret
imul
stc
xchg
neg
jne
ds
xor
xchg
js
push
and
push
push
jmp
sub
out
ss
cli
xchg
mov
dec
mov
or
jne
call
fs
dec
shl
mov
sbb
out
sbb
test
leave
jge
in
add
or
sub
dec
and
std
and
mov
test
arpl
fdivr
test
and
retf
inc
jae
test
stos
vmovdqa
dec
movs
fstp
aam
daa
jns
popf
jmp
pop
popf
sub
ror
iret
sahf
mov
adc
or
int3
fstp
cmps
dec
jo
add
enter
sbb
inc
sub
ficomp
mov
inc
std
je
or
out
ds
mov
clc
mov
and
mov
scas
xchg
xor
(bad)
sbb
dec
and
dec
(bad)
xchg
inc
stos
push
xchg
inc
xor
xor
jnp
or
cmp
aaa
sti
lahf
jg
mov
in
xor
dec
inc
aad
mov
popf
mov
es
dec
inc
aas
cmps
jne
fdivr
scas
sub
mov
add
fdiv
clc
cs
fnstcw
pop
das
dec
xchg
(bad)
ror
daa
aad
mov
jp
call
loopne
fst
jnp
ds
(bad)
add
repnz
sub
jp
lods
in
adc
popf
and
xor
xchg
and
xchg
adc
and
lods
cmp
aaa
sbb
push
sub
dec
cmp
addr16
or
pop
push
cdq
in
mov
outs
loop
mov
mov
inc
mov
inc
loop
cmp
jmp
out
mov
sub
jp
mov
cmps
repnz
lea
xor
in
leave
sar
jno
scas
push
gs
sbb
jbe
adc
jle
jne
pushf
ins
jl
pop
(bad)
loopne
sub
jmp
xchg
inc
mov
mov
mov
rcr
pushf
cmps
cs
stos
pop
push
imul
xor
cmp
rcr
imul
jp
cdq
pop
test
cmp
pop
mov
or
enter
std
dec
xor
jge
xchg
jmp
mov
sahf
mov
jnp
xor
gs
mov
ror
and
pop
jmp
cmp
cmp
jl
dec
sbb
mov
mov
das
push
test
aad
dec
in
pop
sub
dec
pop
sbb
xor
rcr
adc
mov
daa
ss
cmp
mov
push
in
ficom
jmp
sub
sbb
push
dec
mov
inc
fs
pop
popf
lock
test
inc
gs
mov
mov
sub
enter
mov
and
push
inc
push
xor
add
add
jmp
sbb
es
and
and
push
jecxz
ret
mov
or
add
and
clc
retf
imul
and
ins
mov
xchg
sbb
es
adc
pop
jne
push
test
sub
add
and
ret
jge
cmps
xor
in
adc
std
rcl
sti
stos
xchg
repz
dec
cs
das
repz
adc
push
pop
mov
pop
adc
inc
xchg
out
scas
xor
and
aam
sub
xchg
loopne
call
fs
cmp
fistp
pop
jmp
xchg
dec
adc
or
(bad)
cli
mov
mov
sbb
sbb
sbb
lods
mov
cs
cmp
xchg
js
jl
inc
sbb
sub
push
fisubr
sahf
call
and
xor
sbb
outs
fwait
shr
mov
mov
rcl
rol
mov
das
dec
shl
cmps
add
cmp
jg
lods
dec
clc
sub
cmp
mov
lods
inc
sbb
or
imul
in
sub
imul
inc
xor
sbb
sub
fidivr
push
xchg
movs
inc
int3
das
loop
in
or
cmp
test
cli
lock
sub
cmp
xor
adc
mov
push
cmc
or
cmp
repz
mov
outs
xchg
call
ds
xchg
jmp
loopne
xchg
fidivr
icebp
lods
xchg
rcr
clc
addr16
push
fnstsw
repz
jno
fsub
in
pusha
loopne
jno
adc
stos
in
jne
push
jle
add
mov
pop
sub
pop
mov
outs
inc
jb
imul
jl
sahf
jl
js
jae
repz
pop
imul
sbb
les
(bad)
inc
adc
(bad)
cmp
lods
jno
mov
and
les
and
in
adc
cdq
leave
pusha
jmp
add
cmp
movs
fs
call
std
inc
ins
cmc
mov
movs
and
stos
lds
jp
iret
mov
pop
fcom
imul
jnp
cmc
outs
fistp
inc
lods
jae
fstp
mov
jle
repz
or
ins
or
ins
ds
adc
aad
aam
inc
jmp
add
mov
jo
xlat
leave
pusha
je
add
into
pop
push
mov
sub
adc
push
and
les
dec
sbb
ja
in
mov
rcr
dec
mov
jno
or
or
and
mov
rcr
dec
cmps
(bad)
pop
add
sbb
fcmovu
dec
outs
push
mov
and
shl
rcl
lds
mov
xchg
call
sbb
sub
imul
jle
xor
inc
les
lods
or
imul
sbb
das
imul
ret
jg
lahf
bound
mov
push
mov
in
mov
xor
xchg
stos
xor
sub
sbb
imul
es
pop
mov
inc
(bad)
or
call
cli
test
dec
add
mov
pusha
lds
push
in
xchg
pop
ins
scas
gs
imul
mov
ret
js
mov
push
jns
push
mov
es
push
outs
test
dec
inc
pusha
cmps
es
sub
gs
loopne
test
jle
dec
adc
fist
add
mov
mov
xchg
call
inc
inc
inc
push
nop
push
sub
mov
js
jnp
pop
pop
and
stos
fistp
cmp
jecxz
and
push
jg
push
pop
inc
in
xor
add
enter
cmp
mov
sti
jae
add
mov
mov
movupd
popa
mov
cli
mov
fcom
add
and
stos
cmps
and
inc
and
shl
sbb
jbe
mov
mov
mov
popa
sahf
arpl
sbb
aad
cmp
mov
or
mov
aaa
add
pushf
mov
call
mov
push
test
stc
cmp
retf
mov
jg
jmp
popa
xor
mov
gs
retf
lahf
(bad)
dec
and
loope
mov
jo
mov
or
mov
mov
repnz
inc
mov
sub
xchg
es
dec
adc
in
and
or
aam
lahf
mov
mov
cmps
sub
or
cli
adc
neg
add
sub
jge
mov
popf
jl
retf
nop
ss
and
ficomp
add
int3
movs
or
cmp
cli
scas
adc
and
sub
inc
fwait
loop
rcr
xchg
jl
or
and
out
push
push
loop
jl
mov
das
mov
add
pop
ret
jb
mov
fistp
ror
and
call
lds
nop
outs
fwait
xchg
and
push
(bad)
je
pop
iret
xchg
lock
arpl
xchg
sbb
retf
mov
sub
jp
lock
in
and
cli
gs
jne
and
movs
ret
dec
sar
add
jnp
cdq
in
xor
popf
mov
jge
lock
sbb
shl
cwde
stc
jne
or
inc
ja
mov
sti
and
mov
or
stc
add
mov
das
pop
enter
rol
jl
inc
add
(bad)
mov
into
xlat
cmc
dec
in
xor
inc
in
adc
in
pushf
shr
dec
ss
mov
dec
hlt
retf
addr16
out
mov
test
iret
(bad)
adc
dec
in
add
add
lds
push
popa
clc
mov
and
push
js
mov
pop
add
adc
push
fnsave
mov
sahf
ret
out
cs
jl
test
xor
aam
or
mov
pusha
sbb
push
lds
pop
in
clc
xor
inc
loop
lods
retf
push
xchg
mov
pop
push
lods
xchg
cmovns
lahf
cli
loopne
leave
jnp
ja
adc
inc
mov
jp
and
sbb
mov
fld
je
pop
sbb
pop
or
jp
pop
sar
sub
sub
mov
call
fcomp
xor
jl
mov
inc
out
mov
(bad)
fs
stos
and
sti
popa
pusha
push
lods
push
ins
cmp
loop
mov
add
aas
fcomp
cs
retf
mov
mov
inc
ins
(bad)
fldenv
adc
xchg
pop
push
mov
in
aas
jmp
call
xchg
sbb
das
sar
mov
xchg
cli
lods
daa
loop
xchg
and
add
and
in
xor
add
sbb
(bad)
add
lods
pop
shl
cmp
daa
and
out
inc
ret
out
adc
sub
sbb
dec
out
mov
call
fcmovbe
pop
retf
cli
movs
pop
sbb
les
cmp
add
jge
jmp
pusha
sbb
sub
imul
add
mov
hlt
cmp
mov
push
xchg
mov
fdivp
push
cmp
mov
cmp
shl
lock
pop
cwde
add
mov
test
loopne
jns
into
sub
jmp
and
mul
faddp
push
(bad)
push
pop
lods
mov
(bad)
dec
sbb
cmp
xchg
int
out
pusha
mov
mov
shr
sub
xchg
mov
push
aas
cld
jo
cmp
imul
test
xor
xor
call
inc
(bad)
in
mov
frstor
mov
xchg
rcl
outs
imul
dec
outs
les
cli
push
adc
xchg
mov
bound
or
and
jecxz
gs
lds
test
pop
push
mov
(bad)
in
shl
bound
out
lahf
inc
idiv
adc
into
sbb
push
ret
push
mov
push
push
hlt
sub
sub
mov
adc
std
lahf
dec
aaa
stc
mov
jmp
push
or
adc
and
and
xlat
es
inc
sbb
mov
(bad)
sbb
xor
les
ret
jmp
inc
pop
ja
stc
pop
cmp
loop
popf
scas
pop
repz
clc
push
test
cmp
stos
cwde
lods
mov
(bad)
mov
and
dec
cmp
outs
inc
mov
and
fldenv
push
inc
ret
dec
out
shl
or
fisttp
inc
pop
pop
aas
or
xchg
gs
xor
push
retf
mov
push
(bad)
retf
inc
pop
into
fidiv
arpl
pop
cmc
cmp
enter
out
pop
xchg
mov
outs
inc
daa
adc
add
test
dec
sbb
in
and
inc
xchg
pop
cmps
mov
push
dec
pop
jmp
push
aam
test
jno
pop
sahf
rcl
fist
mov
dec
fistp
icebp
in
fadd
retf
mov
call
mov
dec
fcomp
pop
int
sbb
mov
pop
pop
movs
mov
dec
scas
lods
push
mov
leave
mov
xlat
enter
adc
outs
mov
mov
mov
out
push
jne
(bad)
mov
jl
test
imul
mov
sbb
xor
and
in
xlat
dec
je
lds
add
dec
push
jbe
jmp
loopne
int3
dec
test
inc
push
scas
dec
out
arpl
dec
lods
loop
add
out
dec
push
push
mov
stos
xor
fwait
or
push
imul
and
test
push
fwait
repz
je
cmp
push
push
(bad)
jb
push
jo
loopne
inc
mov
fiadd
inc
inc
dec
jb
pop
dec
pop
lods
push
push
ret
mov
shl
jmp
sbb
or
and
icebp
repnz
xchg
cmc
daa
add
into
cmp
adc
ss
cmp
imul
data16
shl
outs
ja
mov
lods
call
jmp
lea
or
pop
pusha
mov
mov
sub
movs
int3
scas
je
cmp
xlat
pushf
push
or
and
adc
xchg
jae
sbb
enter
mov
out
xchg
adc
not
pusha
jp
fcom
jb
sub
or
repz
cli
pop
(bad)
cs
mov
cmps
ret
mov
cmp
inc
or
stos
(bad)
push
and
mov
and
xlat
or
mov
jne
(bad)
loop
lods
sub
leave
fcmovnb
cmp
add
inc
shl
movs
movs
jns
sub
mov
ja
mov
int
dec
test
push
icebp
sub
push
inc
(bad)
mov
cmp
in
inc
add
xchg
mov
imul
hlt
adc
pop
cmp
cmps
out
pop
inc
les
inc
push
dec
sahf
xchg
or
shl
out
xchg
aad
dec
retf
and
adc
mov
and
rcl
xchg
mov
sbb
(bad)
adc
movs
inc
shl
dec
sbb
arpl
dec
mov
clc
pop
das
and
xchg
lds
loopne
cmps
into
cmp
ret
lea
sub
test
push
outs
push
(bad)
outs
(bad)
mov
(bad)
(bad)
jne
xchg
push
stc
leave
and
gs
adc
(bad)
mov
add
fucomip
cmp
sbb
addr16
push
int
mov
mov
loope
cmp
out
sub
sahf
mov
jle
xchg
aad
mov
push
imul
into
sub
mov
sub
es
adc
adc
test
inc
add
neg
loope
sub
loop
imul
cwde
sub
movs
fiadd
fimul
repnz
push
pusha
stos
cmp
jp
fldcw
in
mov
sbb
mov
inc
and
popa
jge
test
pop
out
xchg
push
mov
aad
push
push
add
ror
mov
push
retf
and
and
test
(bad)
sub
addr16
sub
test
push
leave
clc
and
es
hlt
inc
mov
or
cmc
(bad)
retf
cmp
scas
iret
out
mov
dec
in
jae
inc
xor
ret
mov
fldcw
stos
mov
das
and
retf
pop
dec
out
and
pop
test
aas
add
hlt
mov
cs
jmp
adc
lods
cmp
pop
jmp
int3
leave
cmps
cmps
stos
and
mov
jle
cli
bound
enter
out
call
mov
rcr
outs
mov
mov
retf
mov
js
jmp
stos
inc
sub
jle
imul
mov
or
pop
add
jae
cmp
cmp
and
shl
inc
cmp
aad
fst
movs
fdivrp
add
frstor
fs
mov
fadd
lea
sub
fcomp
pop
int
adc
jmp
pop
adc
retf
sbb
(bad)
push
sbb
pop
mov
in
stos
xchg
adc
pop
jp
rol
das
jg
mov
xor
stos
ins
adc
inc
ret
fwait
mov
or
sbb
push
ss
pop
(bad)
or
retf
inc
sar
xchg
mov
sub
add
push
ins
xlat
sub
mov
push
adc
imul
loope
xchg
data16
loop
outs
inc
call
in
rol
pop
(bad)
jl
lds
sbb
das
loop
clc
int3
jg
lahf
stc
aas
mov
xchg
shr
dec
loop
or
outs
pop
cld
cmps
lods
pushf
xor
fnstsw
in
lds
mov
mov
pop
idiv
or
push
sub
sbb
xor
leave
mov
xor
jmp
test
or
fdivr
(bad)
icebp
mov
shl
mul
xchg
mov
pop
in
inc
and
adc
in
mov
test
xor
sub
scas
and
lock
pop
sub
dec
mov
mov
sbb
inc
mov
in
or
jle
mov
push
ja
sub
test
or
cmp
xor
mov
and
lods
test
xor
and
cmp
shr
mov
nop
not
ins
push
ror
pop
jmp
aas
mov
dec
scas
adc
and
adc
ss
inc
sub
imul
sub
sbb
clc
(bad)
in
out
iret
pop
inc
outs
push
hlt
push
fst
push
ror
fist
cmps
sub
jo
xchg
jmp
push
cmp
mov
repnz
rol
push
mov
sub
mov
adc
sub
or
jl
repnz
jp
lds
mov
fist
inc
jae
or
ror
adc
push
inc
cmps
push
xchg
ins
adc
mov
inc
jge
xchg
inc
(bad)
loope
push
jge
js
arpl
ret
sbb
imul
fdivrp
sti
xchg
jne
push
jb
pop
cmc
loop
scas
mov
adc
jne
scas
push
mov
cmp
loopne
xor
movs
and
jae
mov
fsubr
data16
xchg
or
(bad)
rcr
(bad)
out
mov
leave
nop
push
fist
leave
and
cmp
retf
shr
scas
mov
div
pushf
repnz
mov
and
test
lds
mov
or
imul
dec
push
cmps
adc
hlt
arpl
rol
(bad)
lods
mov
jbe
ret
or
ins
sub
sub
cmp
retf
fmulp
adc
mov
pop
das
mov
ds
int
ja
dec
pop
xchg
rol
test
push
sbb
les
fimul
xor
or
mov
retf
loop
cwde
shl
adc
fsubr
push
in
mov
icebp
test
inc
clc
xchg
mov
jnp
daa
pop
test
mov
daa
test
inc
pop
pushf
ins
js
sub
sbb
shl
shl
repz
add
jae
out
popa
ret
arpl
fmul
mov
rcl
add
or
mov
dec
mov
outs
stos
or
jl
ins
repz
jle
jbe
sbb
bswap
mov
and
pop
push
aam
cld
movs
stos
xor
jno
icebp
push
lahf
xor
pop
cmp
(bad)
mov
mov
mov
mov
jmp
bound
shl
dec
call
dec
fmul
jmp
scas
jmp
mov
or
imul
push
inc
jnp
xchg
pop
stc
inc
mov
add
addr16
pop
enter
cmp
loop
push
cdq
int3
shl
mov
xor
pop
push
(bad)
fldcw
cmps
loopne
mov
push
jnp
call
not
jo
icebp
jecxz
out
adc
loop
lock
sub
xor
add
dec
sar
retf
cmps
mov
lods
(bad)
mov
or
aaa
cmp
les
(bad)
pop
sub
icebp
jbe
ins
sub
cli
push
add
jp
mov
retf
test
push
aam
inc
sahf
(bad)
popf
aad
(bad)
cdq
int3
pusha
cmps
dec
ret
fdivp
xor
push
adc
sbb
icebp
mov
xor
or
jbe
xchg
cmp
xchg
mov
pop
out
aaa
out
lahf
jns
fisttp
nop
call
data16
fwait
jmp
rcl
(bad)
loopne
cmp
jnp
and
add
test
outs
or
push
mov
jns
push
sbb
sub
repnz
add
inc
sub
pop
pop
adc
fs
sub
pop
sub
das
xchg
int
or
jmp
jae
clc
xchg
nop
dec
aad
int3
adc
(bad)
sar
dec
cdq
push
ins
and
cmp
push
cmp
mov
sbb
mov
cmp
(bad)
outs
push
dec
mov
int
xlat
iret
retf
movs
jl
mov
jbe
xchg
adc
adc
cmp
mov
mov
(bad)
cmp
leave
aam
jp
scas
jb
test
dec
push
push
dec
(bad)
pop
cmp
data16
xor
xchg
jo
and
mov
sbb
xlat
(bad)
adc
mov
sub
pop
mov
out
add
retf
retf
pop
(bad)
hlt
(bad)
mov
mov
mov
add
mov
mov
test
je
xchg
in
movs
test
mov
lods
xor
sub
cmc
out
pop
dec
iret
adc
in
mov
push
xchg
(bad)
xchg
mov
(bad)
aam
xchg
gs
dec
mov
sub
shr
in
arpl
sub
cwde
inc
jmp
sar
sub
enter
mov
add
dec
cmp
ror
sbb
cmps
mov
add
fsubr
sub
scas
daa
push
mov
ins
push
daa
out
jnp
jne
or
push
jecxz
jno
sbb
or
inc
(bad)
fwait
jmp
not
xchg
loop
inc
iret
or
mov
xlat
out
inc
lock
jno
imul
mov
ret
dec
inc
aad
cs
add
shl
xchg
daa
adc
rol
lods
jge
mov
std
das
add
mov
or
mov
sbb
adc
icebp
inc
xlat
and
jbe
ins
mov
dec
mov
stc
push
cli
sub
hlt
xchg
jbe
mov
fstp
data16
cdq
jl
enter
mov
pop
ja
inc
mov
push
jmp
xlat
mov
out
(bad)
dec
arpl
push
jno
mov
adc
(bad)
cmp
ins
pop
dec
mov
inc
mov
mov
sti
loopne
pop
psubb
jbe
mov
jecxz
movs
loope
je
jecxz
ror
inc
jle
fadd
sub
push
xchg
push
sub
scas
push
mov
fisubr
retf
lods
ja
add
clc
mov
push
(bad)
hlt
in
(bad)
int
pusha
jg
inc
and
add
sub
sub
fwait
cmp
and
inc
or
rcl
dec
ds
enter
pop
enter
pop
ret
stos
mov
retf
or
scas
pop
add
das
arpl
jae
xor
outs
loope
loop
mov
jno
sti
pop
jg
xchg
mov
fistp
rol
cmp
fist
lods
xchg
mov
adc
or
sti
inc
pop
retf
jns
add
movs
scas
mov
mov
mov
in
cmp
addr16
iret
(bad)
aas
inc
cmovne
popf
fcomp
jbe
adc
pop
push
mov
jno
jnp
push
xor
mov
mov
mov
call
jnp
loop
cmc
and
mov
cmp
jmp
pop
xchg
dec
cwde
inc
loope
push
adc
add
and
cmp
rcl
rol
data16
outs
rcr
enter
imul
pop
pop
and
dec
add
sub
popf
inc
sahf
cli
(bad)
cmp
lahf
push
and
sub
fisttp
fwait
in
clc
test
pop
mov
loopne
and
jns
or
push
jp
js
pop
(bad)
cmps
clc
inc
pop
pop
add
test
cdq
aam
retf
ins
jecxz
(bad)
popa
xor
dec
jmp
mov
fwait
or
shr
inc
sbb
adc
sub
push
cmp
cmp
fwait
mov
stos
push
das
les
xchg
in
lods
sub
sbb
lahf
repnz
jp
lahf
cs
jmp
cmp
aas
mov
lock
mov
mov
sbb
sti
bound
dec
cmp
mov
popf
jb
shr
add
das
scas
fisttp
mov
out
nop
dec
sub
xchg
cld
jbe
mov
jo
fisub
mov
push
and
lahf
test
xchg
inc
dec
out
loope
jg
jbe
dec
adc
push
ror
jle
sbb
jbe
cmc
xchg
jns
ja
out
cmc
bnd
imul
addr16
cmp
push
repz
push
adc
div
rcl
mov
add
aaa
mov
aaa
in
inc
adc
pop
(bad)
or
pop
scas
retf
addr16
or
or
icebp
iret
cmc
xlat
movs
pop
dec
mov
pop
jo
jnp
(bad)
cmp
fs
cmps
clc
test
inc
add
hlt
pop
sub
je
lahf
jb
pushf
(bad)
cmp
mov
fwait
repz
cli
and
adc
hlt
cmps
arpl
mov
repnz
stos
(bad)
xor
or
lods
in
sub
nop
sbb
out
lods
sbb
jnp
cmc
loopne
retw
popa
loope
imul
stos
xlat
inc
xchg
lods
pusha
test
pop
inc
inc
pusha
dec
sub
stos
out
pop
add
xor
pop
leave
mov
repnz
test
and
mov
in
push
jmp
dec
ret
jae
shr
inc
fisttp
movs
cmc
clc
mov
not
adc
shl
cmp
in
mov
push
mov
sti
cmp
hlt
repnz
loope
push
test
ss
adc
jo
call
sub
inc
mov
inc
pop
adc
cdq
xchg
mov
xlat
or
sub
push
mov
mov
push
jmp
mov
daa
icebp
mov
retf
mov
dec
cmp
xchg
or
scas
das
dec
cmp
and
jge
xchg
(bad)
lock
arpl
jne
xchg
imul
fsub
movs
dec
inc
stc
push
shl
xchg
nop
(bad)
pop
and
leave
nop
in
bound
stos
xchg
outs
inc
or
in
pop
out
sub
push
imul
out
mov
xchg
adc
sbb
mov
mov
push
icebp
jmp
es
sbb
ins
movs
nop
push
call
outs
xchg
sbb
std
xchg
jecxz
(bad)
ins
cmp
jns
jl
mov
mov
das
mov
lahf
xchg
fisub
ror
movs
cmp
push
sbb
cwde
cmp
icebp
jle
xchg
outs
(bad)
jle
stos
jmp
ja
mov
mov
adc
dec
pop
outs
push
loope
(bad)
sahf
rdpmc
adc
in
jmp
cld
stos
outs
dec
jge
fistp
into
xor
mov
sub
repz
movs
dec
and
xchg
fild
ja
xchg
xchg
xor
out
xchg
mov
dec
jge
sbb
dec
push
aad
cmovo
in
inc
test
inc
sahf
neg
xchg
push
xchg
pusha
sti
out
jecxz
cmps
(bad)
mov
and
sbb
xor
sub
loopne
and
arpl
fnstsw
and
mov
jg
test
idiv
clc
gs
das
xchg
std
retf
loope
icebp
ss
mov
pop
xor
loop
mov
lock
jbe
imul
sub
call
cdq
xchg
call
and
jmp
jmp
pop
(bad)
sti
fstp
fdiv
push
or
test
cwde
jmp
xor
or
or
push
jecxz
jno
stos
sub
js
sbb
add
xor
cdq
popf
mov
jmp
xchg
clc
std
or
in
mov
xlat
pop
(bad)
pop
shl
std
gs
inc
xlat
add
clc
jae
cmp
xor
pop
leave
xor
fimul
xor
inc
inc
mov
mul
jl
sbb
cld
cmp
test
mov
add
(bad)
jge
popf
pop
aas
into
lahf
inc
sbb
dec
adc
mov
push
jle
lahf
rcl
lods
clc
hlt
ja
enter
mov
dec
rcr
dec
xchg
fmul
stc
mov
mov
adc
inc
fcomi
imul
mov
or
mov
cmovnp
sub
add
out
aaa
cmp
sar
pop
jnp
test
lock
xor
cmps
push
add
imul
nop
dec
mov
jb
xor
mov
push
adc
mov
loope
or
stos
mov
mov
hlt
pop
(bad)
test
mov
mov
ror
(bad)
xor
cmp
inc
arpl
dec
adc
pop
mov
loopne
mov
pop
xor
sbb
dec
push
jnp
les
and
cld
cmp
adc
jle
outs
xlat
cmp
sti
pop
mov
inc
jns
mov
mov
xor
sub
(bad)
stos
xor
or
pop
dec
clc
mov
jp
sub
mov
mov
push
mov
ffree
and
xchg
icebp
fimul
mov
pop
cld
sbb
pop
jns
dec
repnz
cmp
or
add
test
cmp
pop
cmps
inc
mov
nop
add
cmp
xchg
mov
loope
sub
and
mov
out
add
cmp
jae
or
(bad)
cld
xor
ror
jbe
mov
add
pop
cli
inc
popf
xchg
and
pop
mov
push
fsub
xchg
jp
lods
ret
jge
mov
mov
jbe
sub
fwait
leave
xlat
inc
popa
jbe
and
outs
push
repz
mov
jg
pop
xor
(bad)
fidiv
mov
imul
int3
sahf
inc
in
jl
sub
sub
dec
push
xor
and
pop
fnstenv
and
stc
mov
and
shl
ja
or
ret
push
mov
cmp
pop
or
lods
push
imul
ja
(bad)
(bad)
cmp
jge
xchg
(bad)
mov
gs
popf
inc
push
add
pop
out
pop
lods
test
addr16
mov
adc
adc
or
cmp
lods
outs
add
repnz
jmp
dec
xchg
outs
dec
lahf
fst
fsub
cmps
mov
movs
pop
(bad)
test
jo
sbb
xor
outs
mov
jg
mov
cdq
xchg
int
and
jmp
adc
xchg
sbb
arpl
mov
fsubr
sti
push
sub
jb
xlat
inc
das
xchg
mov
xchg
mov
lods
mov
jo
adc
jl
mov
inc
sub
pop
xor
adc
pop
imul
test
gs
leave
jne
push
inc
mul
sbb
jmp
hlt
xchg
out
pop
rol
sub
mov
mov
test
outs
cmp
push
sbb
push
pop
mov
in
jb
xchg
mov
addr16
mov
(bad)
mov
add
mov
mov
mov
je
rcl
imul
sahf
imul
(bad)
fstp
push
jp
xor
(bad)
jp
ficom
not
loope
inc
and
jge
loop
sub
adc
or
mov
xchg
(bad)
inc
jp
leave
push
add
daa
sbb
pusha
mov
jmp
push
stos
aaa
sub
out
gs
inc
mov
int
add
jne
lahf
mov
ror
cmp
mov
mov
mov
loope
test
int3
inc
mov
dec
mov
pop
fadd
jecxz
inc
iret
inc
call
hlt
das
loope
in
or
mov
jle
jne
push
fld
in
mov
into
inc
inc
or
fisubr
lahf
xor
sbb
pop
movlps
sbb
cbw
xchg
cmp
popf
mov
add
cwde
je
and
ficomp
or
inc
mov
gs
je
fld
mov
stc
out
inc
xor
jmp
pop
les
add
jl
add
pop
cmp
pop
push
cmps
stos
(bad)
ja
push
into
or
sahf
(bad)
rcr
das
mov
jle
cs
pop
scas
rol
arpl
out
mov
outs
into
pop
std
sbb
pop
mov
rcr
gs
loopne
sbb
mov
call
(bad)
cmps
in
dec
cli
mov
popa
pusha
dec
xor
sub
and
stc
cmp
mov
mov
in
push
push
imul
cmp
gs
shl
cmps
push
loop
jno
or
lods
fwait
and
dec
sar
and
arpl
dec
ss
in
push
pop
dec
xchg
mov
adc
jle
gs
mov
xor
sbb
mov
sbb
push
arpl
xchg
and
pop
or
pop
movs
les
mov
jge
outs
popf
push
in
pop
shl
sub
stos
cmp
or
ds
pop
and
loop
popa
(bad)
std
add
xchg
pop
jge
jmp
push
fmul
mov
push
and
into
xor
cmc
inc
mov
add
sar
or
jg
push
ret
sbb
mov
call
inc
ss
mov
sub
pop
call
inc
imul
xor
rcr
pop
movs
jb
add
fstp
jl
data16
mov
inc
push
xchg
sahf
je
pop
push
mov
jnp
pop
cmp
lahf
xchg
scas
xchg
mov
cmp
dec
jp
adc
mov
out
movs
bound
in
dec
jb
sti
mov
sub
dec
movs
ror
or
inc
and
xor
xor
bound
cmp
xchg
pop
or
rcl
mov
(bad)
jmp
mov
jecxz
pop
xchg
adc
pop
add
sahf
jge
aaa
mov
and
test
out
mov
adc
fs
inc
and
outs
adc
jl
bound
jle
pop
inc
(bad)
enter
mov
(bad)
sar
(bad)
mov
xchg
inc
int
sbb
daa
pop
call
fadd
push
jg
xor
rcr
retf
loopne
call
fistp
add
cdq
or
add
jb
and
hlt
mov
pushf
mov
mov
or
or
pop
or
jge
(bad)
leave
push
push
(bad)
cwde
push
pop
or
fs
inc
hlt
sub
outs
or
xchg
sti
push
sub
(bad)
xchg
pop
xlat
mov
out
shr
pop
inc
adc
mul
out
fild
inc
popa
push
and
stc
pop
jge
call
inc
dec
cs
mov
pop
fwait
sahf
mov
ret
or
cmps
cmp
mov
outs
call
iret
and
jne
mov
aam
cmp
fbld
jno
inc
cld
inc
fadd
xchg
aam
es
mov
daa
push
pop
outs
inc
fld
pop
cs
les
pop
shl
jl
cmps
cmp
sub
fcom
jbe
movs
outs
push
sub
inc
(bad)
sbb
xor
test
les
ins
inc
enter
imul
sti
out
in
sbb
es
popf
es
outs
mov
scas
sbb
clc
cmp
lods
les
pop
aad
or
stc
jbe
das
test
into
mov
adc
das
xor
add
lock
test
xchg
or
jmp
aam
es
dec
leave
push
nop
imul
repnz
push
ret
fisub
test
loopne
mov
(bad)
popf
fnstcw
inc
jo
int
(bad)
outs
call
repz
ret
aam
mov
mov
adc
mov
pushf
cwde
xor
add
xor
jle
fsubr
(bad)
cmp
xor
dec
fild
(bad)
and
inc
aaa
dec
sub
adc
dec
mov
mov
mov
mov
daa
push
mov
ins
call
push
cmp
inc
int
push
cmp
cvtps2pi
xchg
int3
mov
pop
sub
cmps
popf
pusha
loope
and
stc
mov
jge
sub
js
inc
push
dec
mov
mov
mov
sub
fstp
jne
popf
mov
cs
repz
ins
mov
cmps
xchg
xor
fdiv
fiadd
fs
and
cmp
inc
cli
mov
call
aas
scas
addr16
ins
fstp
and
mov
sub
xchg
sbb
sub
jg
mov
pushf
push
rcl
gs
and
inc
repnz
pop
jmp
popa
sub
pop
push
rcl
or
(bad)
movs
push
xor
aam
add
pop
mul
hlt
dec
test
push
ins
cmp
cmps
int
jl
popa
pop
rol
loop
and
fild
sub
xchg
or
sar
sbb
retf
int
repnz
push
out
and
out
ins
push
or
or
movs
or
dec
cmps
mov
fcomp
jne
adc
sub
mov
xor
in
push
cmp
outs
jl
adc
call
call
dec
es
xor
xor
mov
in
sar
pmaddwd
adc
fidiv
xlat
xor
je
cmps
loope
gs
cld
jmp
xchg
add
cs
push
fild
loop
fld
test
loop
cmp
jmp
jo
jecxz
and
int
pop
cmps
jl
sbb
push
xchg
ins
mov
in
xor
add
fisttp
xchg
movs
rcr
inc
popf
sbb
xchg
scas
adc
and
add
sti
xchg
mov
and
aaa
outs
fisttp
std
mov
repnz
ror
pop
nop
cmp
lds
outs
lahf
add
xlat
fsubr
retf
scas
jae
out
aas
and
imul
cmp
jg
pop
xchg
sbb
jae
jmp
dec
mov
jmp
sahf
neg
call
cdq
jl
je
stos
fsub
add
(bad)
adc
xchg
sti
cmp
ins
(bad)
jg
xchg
mov
jge
adc
ins
call
push
mov
inc
call
(bad)
xchg
jno
xchg
or
and
dec
inc
mov
fucomi
mov
test
outs
and
add
cld
or
mov
dec
loopne
retf
push
(bad)
sysenter
ins
pop
push
ret
add
xor
or
and
clc
mov
outs
retf
push
fsub
fcom
dec
cld
mov
test
jno
imul
sub
in
out
cmp
stos
rsm
mov
push
cmps
movs
popf
lods
not
mov
dec
arpl
nop
test
adc
ins
addr16
dec
out
add
adc
test
add
add
pusha
imul
repnz
in
mov
dec
mov
jnp
lea
jmp
ret
cmps
mov
sub
popa
jo
mov
push
push
cmp
pop
push
sbb
pop
(bad)
mov
rcr
sti
arpl
mov
pusha
mov
xchg
mov
mov
mov
cmp
pop
dec
mov
adc
fistp
repnz
mov
jne
add
(bad)
in
movs
adc
inc
pop
push
or
xchg
ins
dec
pop
or
push
inc
clc
cwde
cmps
cs
aaa
aad
(bad)
cwde
add
clc
or
xchg
jg
ss
dec
mov
std
pop
or
enter
outs
daa
or
ss
ficomp
and
mov
popa
inc
cmp
call
fsub
(bad)
xor
cmp
push
cmp
daa
imul
(bad)
repz
clc
jnp
fld
cmp
dec
mov
adc
stos
xchg
or
and
mov
dec
ret
push
pop
je
cmp
movs
and
add
sbb
in
mov
movs
inc
and
rol
push
push
mov
cmp
mov
imul
add
loop
adc
xchg
ret
imul
ins
mov
jmp
je
jno
adc
imul
cmp
push
ins
retf
(bad)
icebp
dec
in
push
lahf
add
xchg
or
leave
cmc
xchg
adc
out
xor
rcl
movs
dec
les
out
dec
in
jmp
mov
add
sub
icebp
std
jb
xor
push
mov
imul
arpl
mov
mov
imul
(bad)
mov
mov
(bad)
in
mov
test
repnz
push
aad
inc
(bad)
not
rol
add
xchg
jno
pop
sub
cmp
jne
mov
das
loop
inc
ja
add
icebp
das
retf
inc
in
jg
fdiv
inc
cmp
ins
les
pushf
push
daa
mov
xchg
pop
(bad)
lahf
mov
jmp
hlt
repz
scas
fmul
jg
push
or
dec
push
xchg
pop
int
aam
enter
outs
(bad)
jle
xchg
add
or
test
(bad)
mov
dec
cwde
mov
(bad)
hlt
repnz
mov
dec
cld
jge
xchg
fsub
push
cwde
inc
mov
clc
js
inc
stc
aam
xchg
xor
and
sar
cmp
mov
pop
pop
mov
cmp
sub
jb
js
fst
mov
pop
and
and
test
stc
outs
in
xor
ja
push
nop
icebp
and
jecxz
dec
call
cmp
out
push
int
aam
cmp
test
(bad)
pop
pusha
add
add
ret
loopne
xor
test
cmp
xchg
inc
jne
sub
fisttp
fadd
ret
jo
data16
cld
bound
push
jbe
imul
mov
imul
out
fcomp
idiv
out
adc
jmp
inc
shr
ffree
stc
and
mov
cld
pop
fidiv
mov
sar
adc
sahf
mov
mov
and
shl
nop
loop
inc
push
and
push
add
or
popf
pushf
mov
xchg
adc
xchg
or
or
gs
add
movs
aaa
push
test
jmp
in
fstp
lock
aas
or
shl
inc
sbb
nop
in
push
jnp
and
shr
xor
out
rcl
inc
daa
inc
enter
int
pop
rcl
cs
addr16
mov
lods
xchg
stos
in
fdivr
popa
mov
and
sbb
push
and
fdiv
bound
call
xor
out
xchg
mov
(bad)
dec
stc
cmp
xchg
fdivr
dec
retf
xchg
mov
stos
daa
or
xchg
repz
push
mov
xlat
test
enter
or
stos
daa
jne
cmp
imul
mov
retf
jle
aam
jmp
sar
sbb
inc
pop
or
push
icebp
pop
mov
pop
mov
out
data16
sub
pop
lods
mov
sahf
inc
icebp
jle
mov
out
int3
nop
xchg
repnz
jnp
pop
mov
adc
in
xor
inc
dec
ss
call
outs
retf
nop
(bad)
adc
mov
sar
iret
cmp
xor
mov
retf
test
push
or
pusha
hlt
cmps
pop
std
fdiv
xor
jne
or
mov
mov
xchg
ss
cs
loope
cmp
mov
sub
leave
push
push
sub
pop
mov
xor
pop
mov
cmc
inc
cmp
(bad)
je
jo
jbe
popa
retf
cmp
dec
inc
xor
rol
xor
bswap
or
xor
mov
push
xor
shr
mov
test
sbb
lods
test
repz
shl
dec
sbb
int
test
lds
lock
xchg
sbb
mov
xchg
add
popa
xchg
jae
add
jge
jmp
fist
int
inc
pop
adc
push
repz
mov
loope
cmp
push
push
iret
int
lods
stos
pop
imul
pop
ins
dec
push
push
push
loope
mov
repz
jg
jmp
leave
jmp
ret
adc
daa
(bad)
push
(bad)
daa
test
sbb
outs
ret
and
(bad)
or
dec
inc
mov
scas
repz
das
iret
adc
mov
les
inc
cmp
sbb
lods
or
jp
cmp
ss
adc
xchg
cmp
iret
or
hlt
and
mov
loope
repz
mov
pop
ret
scas
ds
(bad)
ficomp
sbb
jmp
mov
jge
enter
ds
pop
call
ret
inc
mov
pop
(bad)
jns
mov
xchg
cmpxchg
dec
xchg
add
pop
scas
inc
aaa
ror
les
dec
nop
jle
push
cmp
in
mov
lahf
inc
outs
leave
rol
dec
mov
add
push
retf
int3
cmp
mov
jne
iret
cli
xchg
cmc
mov
nop
sub
gs
jmp
inc
jae
dec
leave
aas
stos
leave
or
cmp
retf
fist
dec
jbe
mov
mov
repz
sbb
neg
aaa
(bad)
scas
aad
test
packuswb
(bad)
and
jl
lods
out
dec
lods
sbb
jmp
xchg
ror
popa
pop
out
sti
setae
out
fs
cmps
push
mov
iret
popf
xchg
jecxz
mov
leave
dec
fdiv
dec
dec
mov
aaa
lea
mov
int
jmp
xor
sbb
or
fcmovbe
push
movs
pop
test
mov
push
push
xor
dec
mov
or
mov
push
push
imul
add
and
and
xor
movs
pop
adc
rol
into
or
xchg
aam
(bad)
mov
inc
out
pop
in
mov
stos
jno
sub
cmp
cdq
bound
imul
mov
add
arpl
mov
pop
add
(bad)
push
jle
jle
adc
sar
(bad)
rol
cmp
mov
outs
sbb
out
sub
mov
sti
mov
mov
out
pop
adc
xchg
dec
push
loopne
push
push
test
sbb
(bad)
fdivr
outs
xor
cdq
xchg
dec
xor
shr
pop
mov
mov
xor
inc
xor
mov
hlt
push
(bad)
mov
pop
mov
pop
outs
add
nop
test
sbb
inc
nop
add
dec
cmp
rcr
dec
cmps
mov
fmul
mov
cmc
ret
pop
xchg
pop
gs
out
fild
dec
mov
inc
sub
mov
sub
cmp
lea
mov
stc
stc
fidivr
rcr
pop
mov
xor
outs
mov
mov
xchg
mov
imul
fadd
cmps
jmp
leave
mov
out
int
clc
or
cmp
repz
pop
jo
adc
mov
add
mov
movs
imul
retf
cmps
aam
iret
outs
(bad)
les
out
sar
or
inc
cs
ret
into
push
stos
mov
cmps
or
cmp
pop
(bad)
ja
in
jne
mov
imul
hlt
arpl
jmp
cmp
out
and
xchg
in
outs
gs
call
pop
xchg
fistp
je
dec
add
sbb
push
add
mov
inc
mov
cld
add
repz
xor
rcr
movs
push
in
jo
cwde
repz
sub
inc
in
cmps
ins
imul
jmp
mov
(bad)
(bad)
js
push
and
ret
loop
xor
pop
lods
ficom
nop
lods
mov
xor
mov
fmul
mov
inc
sahf
mov
ja
stc
xor
pop
mov
mov
mov
xchg
call
push
pop
or
sbb
jle
mov
pop
mov
fisub
adc
dec
fwait
jo
cmp
or
xchg
dec
and
cmp
mov
rcl
jno
sbb
sbb
adc
loope
sub
pushf
mov
sbb
(bad)
and
repnz
lock
mov
mov
cmp
std
stos
xchg
pushf
mov
loopne
adc
lock
pop
mov
fld
cmp
sub
inc
dec
mov
mov
int
leave
sub
fs
and
fisub
mov
js
pop
xlat
cmp
dec
stc
ja
vandnps
in
clc
push
push
add
xor
fld
ficomp
sbb
cmp
aas
jg
jge
push
out
mov
pop
add
popf
fs
sbb
xchg
ret
repnz
jg
pop
pop
mov
push
sti
stos
mov
test
repnz
aad
ucomiss
jbe
mov
or
or
daa
div
jb
add
add
xor
jae
jnp
xor
add
xor
cmps
or
pop
pop
jnp
mov
ins
cmps
mov
div
mov
rcl
mov
xchg
mov
outs
mov
rol
push
mul
out
repnz
pushf
mov
aas
retf
cld
push
iret
fucomip
aaa
xor
mov
jl
mov
mov
cmp
adc
mov
sar
ins
frstor
icebp
mov
sbb
and
lds
mov
leave
in
test
lea
jnp
cdq
xlat
cmps
adc
mov
or
cmp
iret
xchg
adc
retf
ins
jb
mov
aam
rcr
or
inc
mov
xor
jo
mov
jns
call
mov
inc
mov
mov
mov
inc
xchg
stc
jbe
std
stc
xor
sti
ret
sahf
mov
fxam
mov
stos
jp
cli
repnz
jb
dec
ss
mov
lods
div
arpl
addr16
and
stos
retf
sbb
ja
mov
jnp
mov
mov
pop
jae
mov
daa
pop
pop
push
add
push
addr16
push
and
xlat
pop
jnp
retf
lods
pop
mov
push
xchg
fcom
int
pop
cmc
movs
adc
aam
arpl
cmp
imul
into
mov
or
sbb
dec
mov
push
ss
push
imul
add
pop
out
inc
push
sbb
dec
and
mov
call
jge
inc
icebp
and
xor
xchg
adc
xchg
fsub
leave
mov
pop
(bad)
es
js
imul
xor
mov
dec
popf
mov
arpl
xor
leave
in
sub
jg
out
xchg
iret
mov
data16
js
jecxz
mov
pop
xchg
cmps
cmc
push
push
add
fld
cmc
lods
aas
loop
sbb
nop
dec
pusha
cmps
mov
loope
dec
mov
stc
xor
sub
mov
push
clc
jmp
or
or
cmp
cld
fstp
lahf
jns
bound
sbb
repnz
adc
loope
or
jnp
xor
ins
lahf
xchg
shl
mov
in
pop
mov
adc
pop
ins
lock
out
ja
daa
add
mov
xchg
stc
(bad)
std
aaa
cld
in
and
xchg
add
sbb
and
(bad)
adc
js
in
jg
mov
mov
repz
pushf
ins
lods
sbb
push
cli
cmp
inc
mov
sbb
in
sbb
inc
xor
mov
cmp
jp
mov
mov
mov
push
(bad)
xor
scas
xchg
adc
pop
add
cdq
jnp
pop
in
repnz
cmp
cmp
xor
aam
dec
scas
and
pop
pop
std
and
aad
jo
pop
or
inc
push
hlt
jnp
lock
out
stos
rol
jnp
imul
jmp
mov
cmp
fwait
inc
mov
mov
fidiv
pop
fdiv
or
pop
xchg
dec
das
cs
test
xchg
jecxz
adc
mov
stos
jp
jae
push
(bad)
int
xchg
xchg
ja
call
mov
bound
sbb
test
ins
(bad)
bound
lock
out
into
inc
ins
jp
ss
ds
push
out
mov
icebp
push
popf
xor
les
xchg
inc
fld
aas
add
push
je
psubusw
or
scas
popa
jmp
in
loopne
ror
pop
or
xchg
in
pop
outs
outs
rcr
test
daa
lods
mov
dec
sub
cmps
mov
cld
push
into
iret
retf
call
pusha
mov
addr16
(bad)
dec
cli
daa
dec
ins
shl
(bad)
sbb
leave
sahf
rcl
pop
addr16
mov
aaa
and
inc
jl
and
adc
push
call
pop
mov
inc
push
and
aas
lock
sub
xor
jge
mov
push
pop
jns
cld
xlat
add
adc
xchg
xor
pop
mov
(bad)
cs
jnp
popf
push
bound
mov
cmps
sti
or
stos
adc
ja
mov
shl
cmp
or
xor
push
inc
aaa
mov
mov
adc
pop
js
jle
out
adc
rol
in
inc
dec
ds
sub
outs
ds
shl
cld
jmp
fmul
add
ficomp
push
cmp
mov
cs
pop
(bad)
cmp
dec
(bad)
mov
push
pop
jge
push
lock
retf
add
mov
mov
push
ja
aam
pop
into
mov
(bad)
daa
cmp
xchg
mov
mov
int
call
mov
pop
movs
cmp
out
data16
loopne
mov
cmps
retf
ret
fld
gs
add
fld
sub
test
mov
stos
mov
fwait
addr16
jge
push
and
pop
imul
jae
les
and
push
push
mov
out
push
fdiv
popf
adc
sub
push
mov
jb
mov
jb
push
out
push
lahf
cmc
fimul
(bad)
(bad)
jge
jae
xchg
xor
sub
outs
jle
ja
popf
int3
cmp
fdivr
imul
mov
les
movs
xchg
(bad)
sbb
in
mov
fild
push
outs
bound
xchg
pop
pusha
ins
sub
push
lock
push
fcmovbe
xchg
repz
into
fdivr
(bad)
lods
lods
jg
pop
pop
inc
es
ret
imul
or
sub
pop
jns
adc
push
or
scas
ret
dec
(bad)
xor
(bad)
icebp
retf
jecxz
in
pop
test
push
xlat
lods
fwait
jmp
(bad)
jns
lock
xor
fld
lea
mov
jae
enter
repnz
sbb
imul
jne
jne
xchg
hlt
out
and
sub
dec
or
cmp
cmp
inc
ins
mov
pop
ss
cmp
imul
stos
fwait
outs
and
iret
adc
scas
fld
inc
push
cmp
mov
mov
mov
jge
sub
pop
aaa
inc
push
inc
adc
lea
jbe
in
dec
stos
and
mov
xor
push
jne
or
fstp
ficom
cmp
mov
test
sub
jg
xchg
jo
sbb
cmp
jno
aam
sete
test
fsub
jle
loope
test
xor
aaa
adc
push
pop
cmp
and
push
mov
or
jmp
(bad)
mov
dec
or
xchg
pop
xor
lods
scas
call
pusha
leave
bound
aas
dec
gs
add
or
lock
pop
jmp
cmp
pop
pop
idiv
lahf
int3
push
lahf
dec
sbb
push
shl
(bad)
in
(bad)
or
xchg
adc
mov
adc
mov
fld
retf
imul
pop
xor
xchg
push
mov
cwde
or
inc
inc
dec
cmp
jecxz
ror
push
int3
inc
dec
or
dec
ds
mov
imul
jb
out
rcr
repnz
lahf
cmp
mov
fcomip
cs
push
lds
sti
ins
js
scas
jns
jns
lahf
arpl
push
pop
pop
fisttp
shl
inc
jns
dec
jns
add
imul
popa
add
dec
clc
popa
icebp
or
js
jp
repz
jnp
out
pop
rcr
xchg
and
cli
sub
cmp
push
jnp
sub
mov
dec
dec
das
or
movs
inc
inc
or
(bad)
push
push
pop
mov
or
add
mov
sbb
xor
sbb
sub
adc
and
outs
mov
mov
sub
bound
cmps
retf
stos
(bad)
cmps
xchg
xlat
shr
stos
jg
sbb
das
mov
cmp
jo
stos
and
add
ret
mov
stos
jecxz
test
call
add
xor
cmp
cmp
test
aad
ins
fs
adc
mov
jmp
mov
mov
mov
inc
in
leave
aad
cs
and
outs
jbe
hlt
fwait
add
mov
xchg
stos
in
xchg
add
xchg
aas
sub
(bad)
jecxz
aaa
mov
and
xchg
int3
ins
or
adc
vunpcklps
ja
and
std
add
jbe
sbb
xchg
mov
mov
les
cmc
imul
ficomp
mul
adc
fwait
dec
adc
int3
push
hlt
leave
cs
sub
jmp
sar
rcl
imul
push
imul
int
add
add
pop
loopne
lock
ins
dec
jmp
xchg
(bad)
test
jle
xchg
sub
push
add
scas
add
sahf
movzx
aaa
add
clc
push
int
(bad)
sbb
fwait
jl
jne
cmps
outs
jae
aam
jo
push
pop
repz
xor
popa
loop
es
test
sbb
push
add
sub
fistp
shl
repz
xor
in
sahf
or
not
and
dec
push
or
mov
dec
push
fild
movs
mov
pop
scas
outs
push
cli
xlat
movs
cli
inc
scas
mov
mov
jl
jne
dec
jmp
push
or
enter
jo
inc
cs
clc
and
mov
xchg
and
push
popa
jo
push
push
retf
pop
imul
test
or
aam
dec
jl
cmps
js
add
cmp
mov
mov
xor
lods
movs
ret
cli
jo
(bad)
xlat
leave
dec
scas
pop
js
sub
fdivr
add
daa
jb
out
pop
mov
adc
mov
dec
sar
je
fcomp
(bad)
gs
add
dec
push
jno
xor
scas
mov
sar
fisttp
jmp
in
cmp
or
fild
cwde
or
cmp
and
stos
mov
cmps
push
rol
movs
mov
mov
mov
mov
cmps
push
sub
jmp
iret
aam
(bad)
xchg
and
movs
pusha
jb
(bad)
pushf
sbb
mov
es
inc
add
jg
mov
out
mov
mov
push
cld
popf
adc
enter
add
xchg
mov
pop
ja
ins
mov
and
std
xor
int3
sub
outs
aam
mov
jl
loop
jge
inc
adc
push
mov
sbb
test
test
js
adc
ins
dec
pop
inc
adc
add
clc
mov
loop
fimul
sub
daa
pop
pop
ds
xchg
xor
sub
(bad)
jle
pop
sub
int
mov
clc
lock
mov
inc
sub
gs
dec
frstor
fcmove
rol
and
pop
pop
jo
jg
pushf
sub
cmp
scas
or
f2xm1
and
outs
jae
push
and
sbb
jg
out
xor
ret
add
in
jb
dec
mov
shl
into
adc
xor
sti
cld
pop
sub
(bad)
cmps
repnz
sbb
xchg
sub
mov
das
add
fmul
add
in
xor
movs
std
mov
loope
or
pushf
pop
pop
daa
inc
push
ss
dec
sbb
mov
add
jns
aad
jmp
and
pop
add
and
jmp
pop
popf
sub
retf
sbb
(bad)
imul
call
fwait
inc
cmp
dec
aad
(bad)
sbb
leave
pusha
sbb
in
or
xor
mov
aaa
xor
loopne
xor
sub
leave
hlt
sub
sbb
jecxz
call
lods
xor
mov
inc
sahf
inc
(bad)
enter
dec
aad
and
loope
outs
mov
inc
(bad)
and
in
sub
test
xor
fstp
das
ficom
jl
rcr
mov
cmps
jmp
xor
lods
mov
mov
mov
mov
sbb
rcr
push
outs
sbb
std
jp
add
cld
adc
mov
push
sti
cmp
jge
add
test
test
fldl2t
add
sahf
bound
inc
cmp
jle
loope
test
pop
sti
pop
push
or
or
fistp
fdiv
inc
mov
pusha
pushf
cmp
mov
mov
xchg
pop
pusha
gs
lahf
sbb
es
fucomip
sbb
dec
sub
push
add
test
adc
test
sub
rol
xor
cmps
(bad)
or
inc
(bad)
fsubr
ja
mov
sub
icebp
fadd
and
jmp
jmp
fcom
pop
iret
adc
adc
idiv
push
test
mov
adc
(bad)
sub
neg
popf
add
jmp
mov
xor
sub
xor
pop
add
sub
bound
push
mov
test
xchg
(bad)
fucompp
shl
jmp
mov
iret
pop
inc
(bad)
in
cmp
mov
sub
dec
fnsave
xor
out
mov
mov
aad
pusha
mov
es
cli
int3
pop
outs
test
retf
jecxz
mov
leave
or
(bad)
mov
or
add
mov
stos
push
xchg
(bad)
pop
jg
call
sbb
xor
pusha
add
xbegin
jmp
ret
cdq
and
pop
mov
retf
jmp
mov
adc
inc
xor
cli
bound
movs
les
cmp
and
jg
sti
jb
cmps
ins
mov
pop
fisubr
out
pop
or
or
cmp
xor
ja
ret
int
mov
xchg
jmp
addr16
adc
mov
mov
push
mov
pop
inc
or
cs
loop
call
mov
ja
jg
rcr
test
retf
pop
push
cmp
push
pushf
sub
mov
(bad)
ins
repz
pop
pop
retf
mov
in
loop
(bad)
pop
jnp
ds
loop
jle
push
cmp
xchg
add
mov
sub
popf
xchg
push
push
mov
jo
and
inc
jnp
push
inc
xor
sub
or
push
mov
mov
or
pop
out
inc
mov
std
jl
lods
out
das
or
push
xor
pop
sar
sub
adc
sbb
iret
ret
ret
cld
fcmovne
or
inc
(bad)
sbb
jne
and
retf
std
dec
(bad)
jge
inc
xor
xchg
cmp
repz
nop
dec
cmp
bnd
movs
aas
xlat
xchg
clc
outs
mov
test
cdq
inc
jmp
mov
mov
adc
pop
in
int3
mov
outs
mov
in
(bad)
aad
add
cwde
jle
jbe
add
xchg
and
inc
add
dec
call
ins
mov
xchg
mov
test
adc
mov
add
shr
pop
outs
xchg
nop
popf
mov
stc
xchg
jno
adc
ret
(bad)
mov
sub
adc
ja
xor
retf
push
push
jge
dec
(bad)
mov
shr
jbe
shr
sbb
nop
push
movs
in
loop
call
out
adc
pop
call
pop
fiadd
(bad)
mul
dec
mov
out
dec
jle
jmp
adc
jns
and
cmp
fldcw
mov
mov
sbb
shr
inc
xchg
pop
sar
xor
mov
fwait
popa
lahf
imul
pop
inc
ror
xchg
sbb
popf
ja
arpl
jbe
sar
div
pop
popa
xchg
(bad)
pop
(bad)
std
lahf
test
or
lahf
out
sti
mov
lock
sbb
mov
sar
shr
push
repz
vpinsrw
(bad)
fwait
mov
movs
clc
cmps
sbb
jmp
lock
neg
retf
scas
jmp
push
stos
lahf
mov
pop
ss
jbe
gs
sbb
jmp
data16
mov
pusha
dec
jbe
push
aad
sbb
xchg
push
sbb
lods
fidiv
fucomp
dec
add
jbe
mov
lds
push
cmc
aas
fs
shr
jnp
sbb
push
adc
mov
or
out
(bad)
sbb
lahf
and
pop
bound
dec
adc
push
inc
out
add
inc
and
mov
lock
xor
push
or
shl
popa
fmul
push
and
sbb
(bad)
mov
lahf
int3
adc
jae
dec
sbb
add
sbb
jnp
jl
sbb
enter
cmp
sbb
retf
mov
adc
test
scas
push
sbb
out
fisttp
in
ins
sub
adc
lahf
jo
add
imul
push
loope
add
fwait
cmp
in
jmp
movs
int
mov
cmp
push
fwait
xor
ret
sub
pop
outs
movs
into
aas
pop
ins
lods
sub
fstp
scas
cmp
and
dec
adc
mov
js
adc
inc
lock
ins
rcr
es
movs
out
push
fst
mov
dec
dec
les
dec
out
and
std
ss
ins
mov
jle
sbb
mov
add
jle
and
cmp
mov
aam
pushf
add
into
and
add
icebp
mov
test
pop
ror
xchg
dec
cs
ins
outs
je
sbb
pop
jo
mov
ror
loopne
inc
jle
cmp
cmc
and
(bad)
jmp
push
dec
arpl
hlt
cmps
mov
add
xor
pop
dec
inc
dec
xor
call
pop
xchg
js
jb
or
arpl
mov
and
push
mov
in
repz
mov
jge
adc
int3
sbb
int
(bad)
scas
adc
fsubr
push
mov
xchg
add
ror
mov
xor
cld
mov
not
mov
addr16
inc
fmul
cmp
dec
inc
mov
sahf
xor
add
sbb
test
dec
inc
and
and
sub
in
popf
lods
sbb
scas
xor
pop
test
loopne
(bad)
sub
dec
lahf
pushf
int
je
xchg
jne
add
repnz
jns
dec
mov
imul
push
mov
out
sbb
retf
mov
lea
into
into
fmul
inc
xchg
imul
or
cmps
outs
sahf
es
daa
test
stos
mov
mov
and
mov
pop
or
fisubr
pop
nop
stos
daa
and
xor
fsubr
mov
inc
ret
mov
mov
leave
xchg
lds
shl
jae
lahf
pop
jg
jns
dec
xchg
in
scas
and
jae
fnstenv
scas
inc
sub
mov
and
out
fcom
sub
pop
mov
xor
adc
xchg
outs
call
push
mov
pop
or
mov
div
jne
jecxz
loop
push
(bad)
arpl
js
xor
(bad)
fisttp
movs
rcr
movs
xchg
iret
add
mov
js
push
stos
xchg
jg
inc
xor
cs
loope
ja
xor
pop
cld
sub
pop
pop
das
xchg
arpl
xchg
adc
dec
adc
jb
inc
and
cmps
xchg
pop
cmp
and
fistp
inc
add
push
fs
xchg
fbstp
ficomp
fst
(bad)
fdivr
ds
xor
mov
mov
lds
and
dec
lea
outs
add
adc
push
cmp
mov
sub
push
data16
sahf
ins
nop
cmps
outs
jl
sbb
add
jmp
shl
jb
fs
into
es
outs
dec
mov
and
xchg
cmp
ja
movs
dec
pop
mov
outs
push
xchg
leave
lds
fnsave
sbb
pop
mov
sub
cdq
mov
ror
in
out
xchg
inc
jbe
int
retf
fisubr
xchg
int
xor
mov
fisttp
js
cmp
pop
push
mov
rcr
pusha
in
(bad)
adc
or
cld
aas
loope
pop
dec
ficom
(bad)
pop
xlat
call
(bad)
fmul
std
mov
movs
xchg
pop
cmp
jmp
(bad)
pop
scas
mov
ja
adc
mov
inc
jle
call
dec
mov
xchg
mov
xor
jo
call
or
jae
cmps
mov
jno
les
test
fld
lock
xchg
adc
pushf
out
test
fadd
test
dec
and
loop
les
daa
pop
icebp
sahf
pusha
cmc
xlat
sbb
add
push
jp
inc
lds
jo
shl
js
stc
jbe
loope
(bad)
inc
fistp
push
push
fistp
adc
fdiv
mov
shl
int
fucomi
sar
inc
inc
out
push
ins
and
leave
test
inc
imul
sub
pop
dec
add
mov
mov
cmp
mov
cmps
dec
push
pop
push
add
fwait
mov
inc
jg
xchg
add
das
lds
popf
pop
xchg
or
movs
pop
cmc
add
cld
scas
inc
and
cmp
shl
and
and
or
aas
push
repz
mov
mov
and
jbe
pop
ret
arpl
scas
sbb
and
inc
adc
xor
test
sbb
cmp
fimul
jns
inc
mov
jl
daa
xchg
mov
ins
int
out
std
and
std
jle
xor
call
or
leave
cmp
outs
movs
icebp
je
push
inc
sti
(bad)
adc
mov
sar
push
sbb
cwde
push
les
ret
or
push
or
mov
gs
jg
pop
jge
jne
xchg
(bad)
push
push
stc
dec
jl
adc
xor
pop
sahf
mov
in
adc
xchg
adc
outs
mov
xchg
popa
inc
cmps
cmp
xor
fst
fs
mov
sbb
mov
mul
sub
jne
mov
mov
shl
mov
or
arpl
sub
cli
(bad)
pop
add
into
cmp
int3
dec
adc
fsubr
pop
mov
cmc
pop
and
cmps
cmp
pop
fwait
aaa
das
test
pop
in
lods
mov
je
mov
ja
push
sub
fwait
push
or
retf
or
ins
call
cmp
pusha
xchg
xchg
addr16
call
in
fs
je
cmp
mov
test
mov
xor
fisubr
(bad)
xor
sbb
int3
aaa
push
rcl
or
lods
cmp
int3
pop
mov
pop
xchg
adc
lea
xchg
mov
cmp
and
cdq
dec
repz
call
add
aaa
push
cmp
psrlq
out
add
ret
cld
in
xor
pop
cmp
pop
scas
xchg
add
in
sub
sub
(bad)
sbb
push
cmc
pop
pop
pop
lea
ss
fimul
or
ins
leave
xor
repnz
in
and
xor
xor
outs
xchg
mov
rol
dec
mov
xor
lock
mov
cs
lods
push
xor
shl
ss
iret
push
jo
adc
adc
sbb
jge
shl
ror
mov
xor
int3
dec
neg
xchg
scas
in
jge
out
pop
movs
push
add
mov
inc
sbb
or
cdq
jl
div
loop
pop
call
mov
or
stos
pop
inc
sti
sub
cmc
xchg
pusha
ret
loopne
xchg
pusha
inc
test
sqrtps
jecxz
fistp
sar
retf
clc
mov
mov
adc
dec
xchg
jnp
cli
loopne
scas
or
in
ins
sub
jmp
hlt
das
das
les
(bad)
unpckhps
xlat
xchg
pusha
push
add
fnstenv
les
mov
mov
add
ss
pop
sbb
movs
and
sub
test
jno
push
stos
mov
and
test
dec
pop
scas
ja
pusha
mov
mov
jge
lods
ficom
push
and
std
bnd
or
jecxz
jb
or
imul
push
add
add
adc
int
iret
and
cmps
test
xor
dec
push
push
sahf
aad
push
pop
das
push
mov
or
adc
push
popa
ret
or
lock
jne
sbb
sar
add
jge
adc
inc
add
xor
pop
clc
xlat
rcr
ja
dec
pop
cmp
add
movs
(bad)
ins
test
or
xor
out
pusha
cdq
xor
pop
pop
sbb
jns
dec
cmc
dec
or
mov
test
jg
stos
retf
cmc
gs
jnp
xor
mov
aad
dec
sbb
leave
inc
jmp
push
mov
pop
sahf
int3
and
call
jmp
jnp
cmp
aam
scas
or
pop
(bad)
xlat
add
std
xchg
and
in
add
cmp
call
fisttp
fisubr
mov
jne
cmp
ins
jmp
retf
cmps
scas
stc
jb
or
pop
dec
fsub
inc
mov
dec
adc
imul
sub
pop
(bad)
popf
xor
pop
jne
shr
jmp
sub
outs
jp
cs
adc
retf
rol
popa
push
leave
cmp
or
fsubr
imul
mov
fmul
lea
sub
xor
(bad)
pop
adc
and
movs
mov
xor
or
inc
ss
add
lods
mov
jo
push
scas
push
mov
mov
mov
out
mov
jl
aaa
hlt
push
and
adc
inc
fidivr
mov
inc
stc
mov
movs
push
sub
cmp
mov
cmps
imul
jle
repnz
cmp
xchg
outs
mov
hlt
and
xor
aad
fucom
jmp
or
sbb
xchg
test
jg
mov
and
iret
(bad)
xlat
rol
stos
data16
xchg
or
xor
retf
dec
sbb
push
ss
data16
popf
push
lahf
inc
icebp
(bad)
push
ret
out
mul
clc
push
popf
mov
and
pop
dec
das
dec
cdq
mov
sbb
inc
push
adc
mov
cmc
adc
mov
or
dec
out
ds
popf
pop
sbb
adc
jo
or
popf
aaa
mov
push
add
cmp
adc
es
iret
icebp
fild
nop
push
mov
in
cmp
mov
adc
jg
int3
loop
cmp
aas
sbb
push
push
(bad)
pop
inc
cwde
scas
call
shl
out
jmp
in
and
in
mov
add
mov
movs
jae
or
cwde
push
dec
loop
adc
cmp
test
stos
fnstsw
popf
movs
sub
out
aaa
and
xchg
push
mov
sbb
cs
mov
add
jmp
xchg
sbb
scas
dec
lea
out
push
pusha
or
cmps
xor
(bad)
jmp
dec
stos
or
xchg
test
in
out
mov
inc
stc
jno
inc
push
stos
or
pop
cld
xor
aam
inc
in
push
xorps
xchg
xchg
mov
pop
and
xor
adc
rcr
pusha
or
xor
call
push
jb
cmp
jo
sub
jb
fstp
sub
mov
fdiv
out
xchg
xchg
jo
pop
(bad)
std
sub
jge
ret
in
pop
mov
pop
pop
xchg
sbb
and
rol
lds
lahf
and
sti
xchg
std
add
mov
mov
xor
mov
pop
fidivr
mov
arpl
sti
call
push
or
xchg
dec
test
sbb
ds
cmps
dec
cli
and
pop
sbb
push
outs
or
jb
mov
ins
in
xchg
into
mov
xor
dec
aad
pop
imul
xchg
mov
daa
mov
imul
xchg
adc
jl
or
sbb
aad
jle
into
or
dec
ins
sbb
popf
ret
xchg
test
dec
push
mov
pop
retf
ret
nop
sub
shr
popf
out
imul
and
cmp
push
jl
lds
adc
pushf
out
sbb
in
push
jmp
test
bound
xchg
mov
mov
fbld
test
ins
mov
fs
dec
mov
aad
push
jp
lods
rol
mov
ror
mov
mov
cmp
xchg
push
in
es
ins
loope
xchg
jne
rcr
sahf
pop
aaa
jle
xchg
cld
je
hlt
arpl
std
(bad)
and
cdq
sar
ins
mov
xchg
xor
imul
ret
or
mov
pop
or
cmp
add
nop
mov
std
std
and
add
push
and
clc
(bad)
test
xchg
es
imul
sub
jo
or
call
out
nop
mov
pop
ds
cmps
or
loop
inc
call
jmp
push
dec
and
in
jmp
test
push
and
out
loope
mov
icebp
popf
mov
fbld
pop
dec
mov
dec
push
pusha
imul
jb
cmp
pop
mov
xor
ds
push
retf
pop
cmp
mov
and
test
xchg
imul
jno
xchg
stos
cs
inc
or
iret
mov
lock
imul
and
(bad)
push
mov
adc
repnz
(bad)
ficom
imul
xlat
outs
inc
das
xchg
js
mov
push
out
jbe
scas
jnp
pop
test
sub
enter
rcr
scas
cld
dec
lea
ss
pop
jle
push
ja
sar
shr
cmc
cld
jno
stos
aas
adc
in
popf
mov
loope
or
pop
ins
pop
cmps
xchg
idiv
popa
(bad)
cld
lods
pop
add
call
inc
cdq
repz
in
xchg
push
cli
daa
and
cld
push
xor
sbb
lds
movs
or
adc
push
loopne
pop
sub
jae
adc
imul
inc
dec
fsub
adc
enter
jmp
push
retf
and
pop
iret
and
sbb
sbb
scas
rcr
mov
std
call
cmp
ret
call
xchg
aad
ficom
mov
jbe
dec
(bad)
sahf
xchg
lahf
xor
and
push
dec
mov
cmps
inc
xchg
lahf
int3
cs
and
xor
jb
pop
das
sahf
not
fstp
(bad)
stc
adc
push
sub
cmc
out
push
mov
enter
lock
cmp
sbb
cli
mov
out
xchg
imul
jmp
ins
inc
cdq
cwde
dec
mov
sbb
jno
push
xchg
xchg
aam
mov
push
jb
imul
call
imul
cmp
adc
ins
inc
lds
(bad)
mov
in
and
and
jns
mov
scas
xchg
test
pop
ja
hlt
dec
and
inc
xchg
sti
jecxz
push
out
enter
add
cmps
(bad)
pop
es
cmp
(bad)
inc
arpl
out
sbb
cmp
(bad)
fninit
jl
jge
pop
js
jmp
cld
jnp
sub
dec
lds
inc
inc
jp
xchg
cmp
push
sbb
arpl
mov
sbb
sub
loope
mov
popa
stc
inc
mov
xor
mov
cmp
iret
lds
daa
sbb
aad
mov
loop
mov
in
test
ret
(bad)
iret
repnz
sbb
test
sub
sub
(bad)
lahf
neg
sub
inc
popf
inc
xchg
sti
sahf
inc
mov
div
ror
fisttp
or
(bad)
fadd
fnstcw
test
cmp
push
lods
inc
sub
(bad)
cmc
push
cmp
shl
cmpxchg
(bad)
sti
movs
loope
mov
xlat
xchg
jle
ret
jb
mov
xor
xor
push
and
inc
mov
jmp
xlat
stos
jnp
inc
ret
sbb
and
cmps
push
imul
sub
shl
cdq
out
out
loopne
js
adc
inc
mov
xor
or
inc
jo
dec
push
pop
std
sub
jnp
push
into
in
sbb
sub
test
adc
add
cmp
sar
pusha
(bad)
xor
sub
pop
sti
push
scas
add
and
mov
repz
js
fbstp
jnp
add
xchg
fsubr
mov
sbb
pop
jl
int3
popa
movs
xchg
pusha
sub
shr
dec
mov
xchg
and
mov
cmp
popfw
add
and
pusha
pop
or
xor
and
sar
push
jno
jne
inc
jo
mov
dec
cmp
xchg
add
out
sbb
repz
jae
out
add
add
fldenv
(bad)
call
mov
xchg
in
jb
adc
aad
push
or
push
pop
bswap
jge
or
call
cmp
aad
imul
jg
shr
test
fnstenv
in
jb
jns
adc
mov
js
push
popf
fild
movs
out
or
inc
pop
pop
lahf
jne
scas
jg
or
outs
rcr
mov
call
stc
(bad)
repnz
add
push
mov
or
fsub
mov
sub
push
iret
pusha
mov
scas
cdq
into
jecxz
loop
sbb
stos
inc
mov
imul
movs
lods
stc
mov
movs
inc
xchg
dec
push
ja
inc
push
in
pop
jmp
ins
gs
push
out
push
inc
mov
ins
aas
rcr
jb
sub
jmp
test
mov
push
enter
and
dec
hlt
out
in
mov
imul
outs
xchg
ja
or
jo
push
fsub
aaa
nop
call
mov
lods
popf
(bad)
in
xchg
push
mov
inc
inc
dec
mov
call
sub
inc
stos
int3
lock
fild
cmps
xchg
mov
xor
out
sbb
and
inc
scas
aad
push
xlat
push
sub
push
mov
sahf
add
jno
addr16
xor
ds
test
lock
push
shr
aaa
hlt
call
fs
add
fadd
push
aas
and
loop
stos
push
stos
cmp
add
ins
sahf
cmc
mov
iret
sub
shl
cld
and
shl
xor
int3
and
xchg
add
or
icebp
xchg
xlat
test
fcmovbe
sub
cmp
jb
loopne
xlat
jb
iret
ins
dec
outs
adc
or
imul
pop
pop
sbb
out
repnz
pop
adc
and
jns
fwait
scas
xchg
mov
popf
pop
or
pop
int
sbb
push
xchg
jo
(bad)
out
nop
push
(bad)
sbb
aas
cli
and
jbe
or
in
xchg
imul
adc
jmp
dec
(bad)
(bad)
jmp
pop
ins
mov
int
cmp
mov
jnp
xor
push
rol
jns
or
std
mov
mov
int
dec
cmp
ror
lods
int
stos
push
jle
jecxz
pop
(bad)
xor
xlat
or
mov
sar
(bad)
jge
mov
push
mov
dec
mov
add
ins
stc
or
jmp
fs
stc
adc
sub
add
inc
or
in
sbb
stc
adc
sbb
cwde
ins
and
push
repnz
dec
sbb
or
mov
jb
pop
mov
inc
shr
popa
pop
fwait
dec
jle
sub
mov
mov
jecxz
mov
in
jbe
scas
(bad)
aad
je
sti
fwait
sbb
pop
sbb
in
or
outs
mov
add
leave
add
out
dec
adc
mov
out
mov
add
into
jbe
add
enter
sub
js
sbb
js
mov
adc
pop
cmp
add
and
mov
mov
in
popa
dec
add
adc
mov
xchg
dec
push
inc
(bad)
in
push
ins
add
mov
ja
stc
or
add
test
sbb
mov
sbb
jmp
(bad)
or
ss
test
inc
and
fnstenv
xor
test
jmp
mov
leave
daa
loop
xchg
shr
push
sbb
(bad)
gs
movsx
sub
mov
cmps
add
sub
xor
outs
iret
cmp
loope
pusha
sub
les
daa
cmp
clc
lds
scas
(bad)
or
mov
in
xchg
cmps
in
mov
lds
adc
pop
cmc
ss
push
or
push
mov
mov
out
cmp
stos
jno
inc
xor
xchg
scas
pop
xchg
in
jnp
cmp
push
movs
mov
lahf
jl
inc
add
ja
pop
in
push
stos
test
fwait
sbb
xor
sub
int
inc
cs
jnp
jl
mov
push
hlt
int
xchg
adc
int3
xor
sub
xchg
addr16
jmp
pop
shl
fisub
sub
sub
cld
loop
mov
in
lods
outs
call
push
retf
inc
push
outs
and
in
aad
pop
mov
into
xchg
xchg
xchg
ror
jne
xor
jmp
xor
adc
mov
ret
pop
call
mov
push
or
mov
rol
sti
movs
(bad)
ins
sbb
data16
shl
ds
or
out
lea
aam
and
sahf
adc
rol
jb
std
mov
(bad)
sbb
push
hlt
aas
push
lds
fstp
call
gs
dec
call
mov
in
adc
(bad)
div
or
hlt
fmul
push
dec
sub
lods
ret
jbe
xlat
inc
inc
loope
sub
dec
ror
xchg
ja
retf
or
adc
dec
xchg
sub
mov
aad
push
(bad)
or
pop
bound
stos
inc
ins
outs
jge
mov
(bad)
inc
push
fisub
enter
mov
loopne
aaa
neg
fsubr
out
jns
cwde
mov
mov
ds
and
in
mov
cmp
xor
das
mov
sub
test
mov
unpcklps
xor
fcomp
xchg
jb
jnp
jl
out
loop
fs
cmp
xor
and
adc
shr
leave
in
cmp
and
loop
retw
inc
call
sub
lds
add
add
leave
mov
(bad)
jmp
je
push
push
or
cmp
pushf
mov
cmp
aaa
lds
cmc
or
mov
int3
jnp
push
push
cmp
dec
dec
lea
(bad)
out
xchg
mov
icebp
inc
addr16
inc
and
bound
nop
test
iret
or
xor
test
sti
pusha
rcl
push
int
cmc
(bad)
jge
inc
dec
push
sar
repz
xchg
or
loop
ds
push
sbb
dec
inc
mov
fmul
popa
(bad)
rcl
movs
cdq
xchg
xor
mov
addr16
dec
test
(bad)
or
lods
sbb
mov
ins
shl
mov
fadd
mov
xchg
add
push
cmp
push
push
ss
push
xchg
inc
jno
mov
mov
shl
out
mov
lea
sbb
rcr
cmp
aaa
scas
jae
adc
cli
ret
add
call
ins
adc
jbe
sub
sbb
jmp
fs
sbb
sar
cmp
lea
mov
xor
add
mov
mul
imul
add
xchg
outs
dec
xchg
and
dec
stc
repz
rcr
int
sbb
call
ins
add
mov
movs
mov
retf
pop
mov
fsubp
into
iret
dec
dec
adc
mov
rcr
xchg
push
dec
cld
(bad)
fist
inc
(bad)
jecxz
jg
imul
jp
fs
int3
jnp
and
je
pop
cmp
jae
sub
imul
in
shl
and
lea
test
fadd
jecxz
inc
retf
cs
inc
ins
ins
hlt
pushf
sbb
dec
cmp
push
out
sar
push
mov
xchg
sbb
outs
cmp
mov
loop
test
mov
sbb
pop
mov
cmp
out
xchg
dec
jg
or
pushf
mov
mov
das
xor
(bad)
aad
and
xor
in
and
jns
arpl
inc
xlat
mov
pop
pop
out
icebp
jno
push
adc
repz
jb
pop
xor
fcomp
shr
mov
xor
jge
int
dec
push
jg
setno
xor
jl
aad
xchg
lahf
pop
fdiv
leave
(bad)
fcmovnu
cmp
bound
add
ds
test
mov
out
aad
scas
mov
push
push
adc
jo
mov
adc
(bad)
adc
jl
adc
sub
add
add
les
xor
pop
dec
int3
in
imul
popa
mov
ds
jb
or
je
sub
shl
popa
and
xchg
lahf
jge
or
outs
nop
(bad)
out
or
scas
add
clc
data16
data16
in
stc
outs
or
aad
inc
and
scas
cli
jbe
or
movs
mov
sbb
xchg
or
xchg
inc
ins
movs
xchg
ins
out
cdq
xchg
jecxz
dec
ss
addr16
mov
out
daa
cs
fist
fdiv
add
loopne
mov
xor
out
dec
pusha
xor
mov
loopne
nop
stos
dec
push
outs
ret
int
mov
stos
jp
ror
mov
inc
or
mov
mov
icebp
fisubr
lock
out
hlt
cmps
loopne
pop
xor
cmp
cmps
dec
data16
(bad)
(bad)
cli
pop
add
or
pop
pop
mov
cdq
std
dec
push
stos
int
or
xor
dec
xor
mov
sbb
xchg
pop
sub
pop
packuswb
out
outs
jno
mov
push
mov
(bad)
jb
push
shl
outs
daa
inc
in
rol
(bad)
pop
imul
dec
popf
push
jns
or
mov
mov
out
sbb
and
in
mov
sbb
add
sub
mov
mov
ja
cs
(bad)
mov
or
nop
gs
adc
mov
push
std
fst
adc
cli
sub
mov
in
sbb
xor
sbb
aam
sbb
pop
add
jbe
xor
(bad)
jecxz
pop
cld
addr16
dec
fadd
adc
fwait
sar
sub
cld
in
aaa
mov
dec
sub
fisubr
jb
shl
(bad)
mov
jno
mov
jmp
jg
and
mov
fwait
test
aaa
mov
je
cld
ins
add
add
loop
add
sbb
cmp
fadd
icebp
addr16
push
xor
adc
jne
sub
call
cmp
inc
(bad)
hlt
stos
dec
sub
ret
stos
sbb
or
lods
add
xchg
out
pop
icebp
fbstp
test
add
jle
push
xchg
shl
and
pop
int
mov
pop
ret
pop
pop
fstp
in
repz
pop
das
push
retf
xor
add
stos
xor
mov
dec
mov
mov
pop
pop
je
lods
int
or
int3
pop
mov
fdivr
jmp
or
fist
in
ror
cmc
and
iret
int3
cmp
cmp
lahf
add
movs
and
or
jo
dec
mov
lea
or
shr
fwait
xchg
daa
push
and
mov
(bad)
inc
sahf
lahf
out
out
pop
popf
xchg
xchg
out
jmp
cdq
and
pop
sbb
rcr
mov
stos
jge
push
inc
and
daa
popa
aam
ror
push
mov
cdq
neg
dec
sub
adc
jbe
(bad)
or
dec
sti
adc
cld
outs
dec
popf
cmp
out
jo
push
add
call
inc
data16
pop
call
inc
js
push
pop
dec
cmp
inc
mov
mov
and
dec
stos
out
push
sub
sar
imul
rol
js
les
push
outs
sbb
movs
jbe
xchg
mov
push
sub
mov
sbb
adc
add
pop
sub
xor
dec
mov
out
fdivr
and
leave
test
dec
jne
mov
dec
jmp
xchg
cli
daa
or
sbb
add
xchg
push
sbb
or
and
cmp
inc
repnz
enter
xor
cmp
dec
test
xor
lods
aas
pushf
loope
cdq
out
xor
mov
and
enter
in
jo
fisttp
in
mov
jno
add
popa
inc
stos
pop
sti
pop
sub
and
dec
mov
das
and
repnz
xchg
pop
inc
xchg
sbb
mov
mov
retf
dec
inc
or
arpl
push
out
lock
ror
xor
out
repnz
test
(bad)
sub
cmp
dec
push
fisttp
dec
sub
sar
into
test
xor
pop
test
xchg
cmp
mov
popf
push
enter
movs
jl
add
iret
push
cmc
mov
add
xchg
daa
nop
ins
sbb
lock
pop
and
mov
retf
pop
mov
sub
push
push
pop
in
cdq
rol
scas
xlat
push
cmps
adc
pop
and
stos
fld
adc
popa
adc
sti
aaa
xchg
jmp
lea
mov
mov
xor
pop
in
ins
pop
imul
aam
hlt
ret
sub
stos
add
retf
push
cwde
xchg
sub
dec
push
stc
add
fcmovb
inc
add
xchg
push
mov
dec
sub
cmp
xchg
fwait
adc
retf
xchg
xor
add
pusha
xchg
(bad)
mov
int
or
sub
mov
call
arpl
add
jns
mov
ins
inc
push
stc
fistp
fmul
add
jle
xchg
sub
popa
fs
test
in
cmps
std
scas
sub
cmp
cmp
mov
sub
fstp
push
lock
aaa
pushf
sub
push
pop
jl
jne
push
sahf
jns
jne
xchg
adc
in
pop
icebp
push
loopne
fdivr
sar
xlat
xor
mov
inc
stc
mov
add
call
lea
jb
pop
cmp
je
inc
and
and
in
cld
ds
mov
sti
aam
ins
and
jmp
or
cwde
cli
sbb
cmp
(bad)
and
fisttp
lods
cli
pusha
push
adc
sub
or
jae
mov
aaa
lea
sub
lds
test
pop
sbb
jle
cmp
sub
mov
ror
or
or
hlt
push
adc
jmp
shr
inc
push
dec
cmp
in
inc
sub
jg
push
pushf
(bad)
cs
fwait
arpl
jb
jl
imul
xchg
cmp
das
fstp
cmp
fst
add
xor
mov
add
popa
cmp
out
mov
imul
addr16
jae
mov
sub
sub
inc
(bad)
sbb
sar
ror
call
jnp
add
jb
ins
and
pop
enter
or
lahf
pop
xor
ins
js
icebp
or
nop
push
sbb
pushw
into
fst
adc
sahf
adc
stos
mov
push
cmp
push
lahf
pop
adc
push
in
inc
cli
rcr
xchg
imul
jne
sub
(bad)
cld
push
mov
xor
stc
xchg
mov
nop
das
xchg
cwde
xor
push
leave
push
push
loopne
(bad)
outs
mov
jnp
push
ins
or
fist
mov
rcl
fisubr
dec
loopne
cwde
movs
addr16
pop
push
mov
push
xchg
mov
mov
outs
mov
aad
sub
xchg
mov
out
(bad)
sti
sbb
stos
mov
pop
es
test
(bad)
int3
sub
push
adc
add
push
js
imul
or
repz
test
push
jmp
dec
repnz
mov
sahf
jg
sbb
sub
dec
aad
js
cmp
pop
test
test
sahf
pop
lahf
dec
add
int
ret
push
outs
pop
fcomp
push
mov
jno
mov
mov
push
(bad)
sar
inc
jp
daa
ss
ins
nop
outs
sbb
scas
dec
dec
fidiv
push
sbb
jmp
loop
jno
lea
xchg
xchg
add
dec
cmc
(bad)
out
mov
and
not
jbe
mov
mov
fnstenv
popf
fstp
das
mov
pop
scas
dec
test
jecxz
mov
cmp
nop
jnp
rcl
popa
and
mov
mov
inc
fwait
shl
mov
push
push
bound
mov
mov
inc
cmps
pop
and
jae
sahf
jp
sub
pop
fwait
test
jns
out
xchg
mov
xchg
pop
ror
pushf
xor
loopne
fsubr
shl
rol
inc
std
aad
movs
ja
cmp
aas
xchg
punpcklwd
mov
mov
inc
adc
push
daa
xor
cli
inc
je
cmps
add
les
inc
mov
xlat
(bad)
or
fstp
pop
mov
push
inc
inc
mov
movs
dec
jp
pop
xor
repnz
sbb
mov
out
dec
inc
mov
xor
inc
das
xchg
sub
retf
mov
in
call
adc
(bad)
push
or
imul
xchg
sbb
ret
push
std
adc
popf
stos
in
jae
stos
fst
cmp
and
imul
jmp
leave
inc
popa
jb
hlt
retf
add
sub
jns
add
mov
push
arpl
adc
add
das
stos
add
push
sbb
pop
push
or
cmp
ds
int3
clc
inc
sbb
mov
pop
std
(bad)
nop
sbb
ins
ins
in
xor
mov
rol
or
outs
test
out
jmp
cmp
in
leave
aam
dec
daa
jl
cmc
jp
sbb
and
sub
adc
(bad)
stos
jmp
inc
pop
retf
dec
ds
inc
pop
sub
repnz
bound
push
add
mov
inc
rcr
sub
(bad)
aad
(bad)
shl
fcmovbe
jle
arpl
cmp
adc
stc
pushaw
dec
and
or
cmp
adc
into
jnp
push
leave
iret
gs
mov
pop
call
ret
xchg
into
movs
popa
gs
push
cdq
gs
sbb
sbb
or
outs
jge
repz
jge
fist
jbe
(bad)
in
hlt
jo
stc
or
xchg
adc
repz
fisttp
push
(bad)
(bad)
xlat
cli
jle
jb
jmp
jmp
aaa
cmp
dec
lds
sbb
jno
cmps
cs
leave
jecxz
adc
fidiv
ror
into
mov
add
data16
pushf
enter
pop
xor
test
xor
fsub
and
rcr
pop
fstp
lods
mov
xor
mov
fcmovbe
nop
mov
mov
cmp
mov
data16
mov
cmp
pop
loope
(bad)
les
pop
fsubrp
gs
push
jo
jnp
pop
repnz
ins
push
pop
stc
xor
out
fcmovb
dec
sti
push
mov
inc
fstp
js
mov
xchg
sbb
jbe
in
iret
sti
fcmove
icebp
outs
mov
jno
xor
mov
add
dec
pop
jle
pop
mov
cmps
xor
sti
adc
imul
out
repz
into
xchg
js
call
mov
sbb
inc
je
fwait
and
jmp
pop
call
call
adc
add
inc
in
and
pop
and
cmp
test
sbb
mov
mov
pop
shl
or
fisub
gs
mov
jns
lds
mov
call
pusha
mov
mov
xchg
mov
jne
(bad)
aas
aaa
dec
ins
aam
mov
push
out
dec
pop
jo
gs
xchg
dec
adc
inc
push
adc
ficomp
xor
cmc
jmp
(bad)
fnstenv
sbb
into
inc
pop
mov
outs
daa
enter
push
clc
rcr
loop
dec
ret
test
mov
mov
icebp
ret
fistp
adc
rcr
sar
xor
add
je
add
loop
sbb
stos
fmul
das
fisttp
je
es
jmp
leave
push
bound
add
push
cdq
retf
mov
cmc
xchg
fist
nop
xchg
loopne
jge
cmp
mov
sub
stos
mov
gs
movs
jnp
movs
lds
in
outs
mov
jge
dec
jl
or
pop
ret
adc
mov
lock
and
lods
stc
jl
and
fbstp
xchg
ret
or
add
mov
cmp
mov
inc
or
or
lahf
(bad)
dec
and
jae
dec
js
retfw
pop
cmps
or
sub
and
data16
xchg
stos
lods
adc
dec
imul
shl
adc
loope
add
xchg
pop
sub
lock
add
xor
daa
lock
sub
xlat
dec
dec
shr
nop
mov
je
scas
jb
cmp
inc
inc
push
mov
pop
jo
iret
stos
mov
xchg
push
stc
imul
aaa
test
jge
jne
sti
mov
mov
adc
xchg
mov
ror
in
jmp
movs
pop
or
add
inc
pop
rol
outs
bswap
push
add
sub
push
mov
aaa
(bad)
addr16
mov
enter
nop
jge
hlt
ret
cmp
adc
int
cmp
sbb
pushf
dec
sub
xor
xor
leave
xor
sbb
loope
pop
push
inc
or
inc
mov
sub
xchg
mov
stc
jp
mov
mov
imul
dec
aas
lea
push
or
pop
cmp
pop
aad
rcl
out
fscale
int
leave
test
outs
and
hlt
cmp
inc
daa
stos
push
lds
mov
xchg
adc
data16
adc
mov
pop
and
push
jle
outs
pop
gs
shl
adc
cwde
xor
mov
xor
push
sbb
fidivr
sahf
movs
and
rcl
shl
sub
repz
adc
xor
ret
dec
dec
movs
sahf
xor
les
adc
xor
out
mov
sub
ins
mov
fcom
sbb
lods
pop
sub
je
jae
into
movs
dec
(bad)
mov
add
ret
out
out
arpl
pop
push
sar
jb
sub
scas
cmp
sub
jmp
aaa
inc
test
push
and
sbb
xlat
or
dec
cmp
dec
and
ds
jmp
js
push
or
aaa
fsubr
shl
fiadd
js
(bad)
sbb
jo
leave
cdq
popf
push
add
repz
dec
sbb
xor
loopne
push
inc
stc
in
or
addr16
mov
bswap
adc
xlat
or
mov
jae
movs
aam
xchg
int3
lahf
add
test
stos
dec
mov
mov
mov
leave
sbb
nop
adc
or
sbb
cdq
jbe
popa
sub
std
bound
in
test
sbb
je
add
cwde
sahf
sti
pop
add
enter
pop
fwait
(bad)
mov
pop
bound
adc
das
jmp
pop
cs
mov
dec
add
mov
cmc
out
sub
mov
loope
lahf
sbb
(bad)
push
sbb
jle
fst
je
add
add
add
pop
push
outs
pop
mov
jns
push
push
xchg
sbb
mov
lea
repz
cmp
jo
bound
inc
in
addr16
arpl
jl
enter
dec
add
aad
test
leave
inc
cmp
jmp
jmp
mov
movs
mov
inc
cmps
jecxz
enter
xor
rcr
or
cmps
jne
dec
xlat
repz
mov
mov
dec
inc
pop
rcl
stos
pop
sbb
jmp
std
jecxz
sbb
shl
mov
cmp
fcom
sbb
mov
cmps
add
pop
mov
rol
inc
push
retf
sar
mov
lds
ret
pop
mov
test
mov
aaa
inc
or
adc
xchg
je
push
jmp
jae
inc
cli
pop
jmp
pop
push
mov
mov
mov
and
fs
and
cmps
cmp
dec
je
and
cmp
mov
out
shl
cmps
dec
dec
sbb
jae
out
inc
iret
add
imul
mov
sub
jmp
push
or
scas
cld
mov
inc
dec
jmp
mov
lds
jmp
lock
aaa
icebp
in
loopne
ins
pop
test
jp
pop
xchg
cmp
inc
push
clc
jno
ret
cmp
shr
fistp
xlat
shl
adc
call
mov
mov
sub
rol
push
sub
retf
and
sbb
mov
and
fcmovnb
rcr
aad
jae
jp
dec
lods
imul
inc
jg
test
leave
pop
cmp
daa
cmc
xchg
popa
mov
xchg
adc
pop
xchg
xchg
pop
fwait
nop
fld
xchg
mov
iret
cdq
es
enter
mov
ja
test
icebp
mov
xlat
cmp
jg
sar
ds
sbb
inc
xchg
xor
pop
rcl
sbb
inc
adc
pop
gs
jecxz
push
imul
std
or
sbb
sub
xor
pop
loope
scas
xchg
dec
inc
inc
popf
and
jle
jmp
mov
jle
pusha
inc
in
test
jno
mov
mov
add
add
add
sbb
repnz
mov
mov
jmp
jns
adc
inc
pop
imul
out
ror
in
inc
jae
in
sbb
mov
fnsave
faddp
sub
lock
ds
jb
sahf
add
dec
add
xchg
cli
imul
cmp
stos
das
out
jge
sub
mov
xchg
pop
mov
fisttp
in
xchg
push
adc
xchg
pushf
stos
jmp
retf
jge
fyl2xp1
sub
or
and
inc
mov
(bad)
fmul
jle
cmc
pop
retf
cmp
mov
loopne
jae
sub
(bad)
mov
adc
or
dec
(bad)
pop
adc
adc
leave
(bad)
adc
xlat
mov
sub
push
(bad)
mov
add
mov
ins
push
inc
jne
sti
ror
ret
adc
push
(bad)
(bad)
or
jb
or
scas
inc
push
xor
jp
cmps
rcr
ficomp
push
outs
into
xor
outs
mov
or
mov
inc
cmc
repz
popa
mov
bound
push
fld
in
call
shl
sub
jne
(bad)
dec
(bad)
jg
mov
cmp
out
add
jecxz
sub
loope
stos
mov
mov
jae
aas
sbb
mov
pushf
cmps
std
mov
rol
push
mov
and
and
rcr
ss
push
sub
mov
mov
pop
mov
fidivr
mul
hlt
jmp
(bad)
test
pop
xchg
jl
inc
xchg
clc
or
sub
sub
call
cmc
jno
cld
pop
jbe
and
adc
add
sub
push
scas
adc
jge
scas
sbb
xchg
cmp
js
nop
pop
hlt
add
jno
sub
loop
or
or
mov
add
popa
adc
mov
mov
ds
mov
xor
fistp
leave
xor
jne
jo
retf
cmc
dec
fld
push
aaa
std
test
sar
jo
mov
fidiv
push
dec
xchg
cld
xlat
rcl
mov
(bad)
mov
shr
push
sbb
mov
xchg
test
daa
je
push
xor
stc
std
jmp
or
xlat
imul
cmp
jno
pusha
mov
push
jge
aaa
es
test
push
jg
push
jne
(bad)
mov
cdq
idiv
inc
fld
pop
sbb
dec
mov
and
ffreep
lock
xchg
xchg
inc
push
ret
sbb
addr16
or
(bad)
cli
gs
jnp
arpl
loop
pop
mov
dec
cmp
bound
mov
(bad)
hlt
in
repnz
into
dec
xchg
mov
jbe
aam
fidiv
adc
fidivr
test
sub
push
ss
shl
call
retf
adc
sar
push
scas
cs
mov
clc
mov
inc
ins
movs
rcl
(bad)
jnp
int3
pop
pop
faddp
xchg
imul
test
cmps
mov
rcl
stc
outs
sub
arpl
aam
push
cmp
gs
sub
mov
and
jp
push
fdiv
xor
xchg
pop
lock
repz
or
mov
retf
jmp
test
sub
lea
aas
aas
mov
mov
pop
inc
mov
retf
push
(bad)
sub
sbb
sub
movs
mov
popa
adc
pop
adc
hlt
gs
ficomp
and
hlt
push
mov
call
jmp
out
xor
das
mov
mov
add
jge
shl
mov
lea
adc
or
std
sub
xchg
mov
xchg
mov
clc
mov
jae
cli
ds
ja
sar
fsubr
retf
xor
test
mov
cmp
jo
cmp
cld
mov
mov
dec
fsub
push
xor
cmp
cmc
repnz
sub
dec
inc
shr
adc
pop
loopne
dec
cwde
int3
pop
sub
jecxz
xor
pusha
shl
add
mov
xchg
and
ds
fisubr
inc
sti
cmp
in
mov
aas
mov
xchg
(bad)
dec
ret
rcr
sbb
int
inc
repz
ins
retf
xor
sub
es
sar
mov
add
pop
int
fwait
cmp
adc
jp
push
adc
int
out
aam
pop
add
jle
jle
lods
(bad)
call
xchg
xor
mov
inc
(bad)
xor
std
adc
je
repz
push
jb
loop
aaa
mov
mov
jmp
inc
ins
aam
shl
ins
das
pop
dec
(bad)
dec
test
mov
or
mov
push
jno
sbb
ret
shl
xchg
push
push
popa
mov
mov
push
lahf
sub
or
movs
push
mov
out
mov
jae
lock
int3
jp
int
pop
or
xchg
add
mov
dec
sub
or
into
pushf
jnp
dec
and
(bad)
sbb
inc
xchg
sub
sbb
lea
das
je
call
in
cmc
push
jge
inc
(bad)
rol
sub
pop
imul
push
ret
xchg
xchg
jl
fistp
fs
in
sub
cmc
mov
or
inc
cli
dec
inc
ja
xchg
lods
jb
sbb
repnz
xchg
jl
sahf
arpl
or
imul
pop
cli
mov
loopne
pop
push
mov
lahf
push
sub
jbe
ficomp
outs
pop
shl
scas
mov
call
add
xchg
add
out
or
xchg
sub
scas
test
sbb
call
jns
cs
jns
lock
ss
out
arpl
div
cld
fistp
jbe
pop
push
jbe
pop
loopne
popa
jge
aad
sub
sbb
mov
mov
cdq
sub
add
in
mov
jo
std
xchg
dec
inc
mul
adc
sub
ds
call
aad
inc
push
es
addr16
mov
imul
ror
sbb
sub
xor
pusha
jne
sti
and
out
adc
icebp
push
out
xor
xor
das
jae
pop
jecxz
mov
jmp
popf
rcr
ret
imul
adc
hlt
adc
xlat
cmp
or
and
and
mov
aas
jnp
pop
mov
or
imul
gs
jb
xor
or
dec
mov
adc
cdq
dec
add
adc
(bad)
dec
sbb
mov
push
movs
sahf
mov
cwde
jnp
adc
repz
data16
dec
repz
js
loop
or
test
xor
mov
mov
add
adc
sbb
test
jmp
aad
int3
test
xchg
mov
xor
mov
jge
sbb
adc
shl
add
js
cli
cmc
push
mov
pop
inc
xchg
pop
add
push
pop
xor
and
jmp
sub
adc
daa
retf
cmp
rcr
pop
in
cmp
fmulp
sbb
push
nop
or
cli
not
mov
pushf
jecxz
cli
call
mov
in
jmp
loopne
xchg
pop
push
xchg
fadd
inc
pop
and
mov
fstp
sub
pop
(bad)
sbb
stc
jmp
inc
cwde
jl
cmps
jmp
stos
dec
sbb
sub
ins
or
fisttp
sub
jae
cmp
inc
pop
sub
mov
inc
xor
xor
push
inc
push
ins
jns
mov
adc
jecxz
movs
pop
outs
sbb
lahf
jl
xchg
std
mov
add
mov
jo
add
sub
data16
lds
mov
out
mov
rcr
(bad)
std
mov
and
dec
mov
jnp
mov
adc
mov
inc
jo
adc
and
xor
rol
mov
mov
sbb
mov
or
jmp
movs
aaa
cmp
fucom
fild
push
lahf
mov
sbb
mov
test
jo
in
dec
pop
or
je
push
(bad)
jmp
adc
xor
enter
mov
nop
pop
test
push
mov
mov
cmp
stos
push
mov
push
inc
fimul
leave
jns
push
(bad)
jns
clc
sub
scas
sbb
xchg
jg
cdq
in
outs
test
lds
rcl
ins
push
mov
lea
xor
ja
cmp
enter
loop
dec
push
jmp
mov
retf
mov
adc
inc
mov
push
out
clc
out
jns
lahf
in
mov
sar
aas
out
xor
mov
cmp
mov
jbe
pop
int3
sub
mov
icebp
sar
mov
mov
sub
les
and
mov
sbb
mov
hlt
std
adc
pop
inc
std
adc
xchg
sub
fdivr
mov
adc
dec
test
mov
arpl
jnp
loope
adc
push
cld
adc
test
xor
rcpps
fs
mov
les
adc
dec
aaa
mov
add
and
addr16
lds
jmp
mov
push
sub
sub
jle
inc
lods
sbb
mov
inc
pushf
out
movs
jnp
mov
xor
xchg
test
and
inc
test
sbb
call
nop
out
adc
jecxz
ins
into
sub
xchg
push
mov
arpl
xlat
movs
sar
xor
stos
xor
stc
jecxz
pop
fstp
retf
mov
jmp
lock
push
jl
lds
xchg
scas
pop
dec
ja
icebp
(bad)
sub
jge
inc
or
retf
(bad)
out
(bad)
das
add
fwait
mov
pop
jnp
sbb
and
cmp
js
dec
test
and
jmp
mov
in
in
mov
mov
jl
inc
cmp
adc
shl
test
aas
ret
outs
stc
jmp
leave
and
pop
mov
(bad)
out
(bad)
sti
pop
cld
adc
mov
or
and
and
push
mov
je
push
fwait
and
xor
jmp
add
mov
sub
sbb
or
or
sar
aaa
dec
shl
(bad)
xor
cmp
shr
push
xor
push
in
(bad)
sbb
fmul
pushf
cld
into
dec
popf
jecxz
jp
mov
repnz
mov
xchg
xor
inc
ja
push
cmps
add
mov
jne
and
popa
mov
jp
(bad)
xchg
inc
and
adc
cmp
aad
sbb
add
(bad)
push
cmp
mov
imul
rcl
jge
aad
jns
xchg
pop
stos
jns
cs
xchg
gs
dec
cmp
lods
data16
shr
lods
hlt
sbb
pop
in
xchg
and
retf
inc
push
mov
mov
les
mov
pop
push
cdq
pop
jmp
clc
mov
mov
stc
push
jbe
pushf
cmp
repnz
dec
sub
lahf
sub
lahf
stos
cli
jp
push
bound
call
xchg
call
mov
cwde
sar
mov
xchg
outs
and
in
ss
mov
jns
mov
mov
jle
inc
cwde
dec
pop
arpl
icebp
int
dec
pop
scas
sub
(bad)
lock
cvtps2dq
popf
mov
outs
nop
hlt
shr
cmps
fist
and
ins
ins
lds
es
xor
cwde
in
push
rcr
enter
sbb
adc
or
or
inc
pop
jmp
dec
lea
mov
xchg
movs
and
ret
add
out
or
mov
mov
ins
and
and
test
push
int3
jecxz
nop
pop
jmp
adc
push
iret
cld
arpl
cmp
in
mov
jb
dec
jno
cmp
shl
dec
or
sbb
mov
add
dec
or
or
fild
bound
int3
push
sbb
test
sbb
adc
leave
fisttp
sub
scas
inc
cmp
jno
stc
lods
aad
pop
pop
rcl
sti
jnp
ss
popf
xchg
into
(bad)
mov
xlat
xchg
push
jbe
cmp
add
(bad)
xor
xchg
or
gs
xlat
adc
xchg
jp
fnstcw
ret
cmp
mov
or
retf
sub
sbb
retf
sbb
stos
and
call
leave
jmp
sbb
jmp
mov
cld
mov
lods
pop
iret
aam
dec
test
adc
inc
ja
pop
cmc
push
cmp
cmp
dec
in
bsf
cmps
inc
push
sbb
je
popa
jmp
mov
test
test
sub
lods
int
mov
(bad)
test
js
sbb
loopne
inc
loopne
push
aas
sbb
xor
and
mov
mov
sahf
ins
and
xchg
out
in
push
xor
stos
jge
sub
daa
inc
daa
xchg
hlt
popa
shr
outs
fs
xchg
push
inc
xchg
fstp
aaa
jae
loopne
cli
push
icebp
push
sub
sub
or
call
jns
add
pop
sbb
and
fadd
(bad)
cmp
jne
mov
out
or
(bad)
cmp
cld
sbb
inc
push
pop
push
xchg
enter
sub
xchg
sub
push
xchg
scas
sti
iret
stos
mov
aam
call
retf
mov
cmp
fistp
inc
pop
mov
adc
sar
mov
adc
rcr
pop
cmc
sti
mov
out
sbb
fidivr
ss
add
loop
xchg
mov
pop
sbb
and
and
sbb
dec
add
add
mov
pop
mov
mov
push
stos
out
and
and
pop
inc
xchg
ficom
add
mul
stc
pop
xchg
scas
jmp
(bad)
mov
adc
lea
aad
je
cs
es
stos
(bad)
pop
fs
jb
stos
(bad)
ror
adc
xor
mov
test
in
sbb
cmp
(bad)
(bad)
push
cmp
call
aaa
cwde
cmp
mov
push
jmp
scas
push
mov
pop
push
jne
jns
dec
or
or
jb
retf
fsub
mov
xor
mov
stos
aas
dec
cld
(bad)
jne
rol
add
push
xchg
pop
jne
aad
mov
pop
adc
jnp
cmp
(bad)
mov
ret
mov
xor
mov
xor
push
mov
cli
stos
mov
sbb
ror
aad
or
test
push
daa
repnz
or
mov
cli
push
adc
jecxz
jmp
push
mov
loope
ja
in
cdq
aas
inc
pop
(bad)
scas
ins
and
mov
jo
push
sub
fsub
lods
fidiv
sub
das
and
cmc
stos
dec
lods
mov
int
add
pop
jb
icebp
cmp
push
repz
jbe
(bad)
fcos
jp
jno
addr16
sub
pop
push
(bad)
cmps
mov
retf
xchg
ins
mov
mov
(bad)
out
sub
pop
mov
mov
or
jbe
fild
jns
out
sub
dec
sbb
int
push
mov
sbb
dec
push
(bad)
ds
fiadd
dec
push
out
xchg
or
sbb
nop
mov
or
jg
gs
xchg
xchg
pop
jbe
(bad)
jmp
xor
adc
sbb
aaa
test
jb
test
mov
iret
cmps
fst
aas
jb
mov
aam
inc
(bad)
cli
ficomp
or
or
pop
and
arpl
cmps
jb
cmp
jne
enter
xchg
or
push
push
loopne
mov
jae
mov
dec
fistp
fidiv
pop
mov
or
add
pop
cmp
leave
scas
mov
mov
push
add
push
sub
xor
popf
fndisi(8087
fnstsw
add
(bad)
in
or
mov
adc
jo
in
aad
mov
xlat
and
hlt
mov
jl
cmps
loopne
daa
adc
inc
les
push
dec
push
dec
mov
loop
mov
mov
adc
xor
mov
or
cmp
(bad)
mov
fidivr
cmp
adc
sub
fs
ds
in
jmp
ror
rol
push
clc
pop
js
in
test
push
frstor
call
sbb
mov
jnp
push
loopne
fadd
sub
std
mov
bnd
xchg
repz
xchg
and
cmp
not
jp
aad
js
jns
mov
jecxz
lods
call
hlt
inc
loope
and
fbstp
out
push
loopne
(bad)
(bad)
fnstsw
dec
mov
sub
mov
arpl
dec
inc
mov
sub
dec
cmps
mov
pop
mov
xchg
pop
push
inc
add
xchg
mov
adc
mov
repz
loopne
cmp
sub
scas
ins
call
add
add
xchg
hlt
and
and
and
pop
pusha
imul
inc
inc
mov
inc
mov
dec
in
or
leave
retf
xchg
pop
or
out
(bad)
push
jae
pop
ror
xchg
outs
add
(bad)
push
and
sbb
aas
cmp
rol
cs
sbb
std
retf
rol
push
push
jne
mov
mov
data16
repnz
inc
sub
lahf
mov
push
loop
daa
(bad)
(bad)
out
fstp
and
mov
std
inc
pop
and
sbb
cli
enter
mov
push
scas
loop
movs
or
inc
jecxz
mov
mov
enter
or
loop
shl
adc
movs
xchg
shl
push
inc
ja
cmps
das
inc
mov
sahf
hlt
mov
xlat
xchg
pop
enter
ins
cmp
mov
and
fstp
add
ret
sbb
mov
aam
sahf
and
(bad)
xchg
push
popf
icebp
mov
mov
data16
or
xor
push
mov
neg
hlt
in
adc
push
pushf
inc
cs
inc
mov
out
or
movs
icebp
and
mov
jp
ss
dec
es
fwait
or
inc
mov
inc
or
std
pop
pop
and
cmp
sahf
stos
loope
adc
pop
xlat
mov
pop
jge
dec
ffreep
add
pop
(bad)
lock
cmp
lahf
jno
idiv
nop
outs
rol
xlat
pop
shl
daa
jg
movs
cmp
(bad)
xchg
cdq
mov
inc
mov
les
sub
arpl
adc
mov
shr
int3
push
cmp
in
push
pusha
xor
fldenv
icebp
push
scas
cmp
xor
mov
dec
sub
dec
(bad)
aas
(bad)
es
(bad)
sub
jl
std
xor
and
xor
fs
sbb
outs
add
hlt
lods
inc
sbb
or
pushf
call
nop
or
sub
mov
loop
out
test
cld
mov
vfrczps
push
hlt
jne
scas
fs
mov
pop
fiadd
mov
sbb
mov
add
cmp
vpmulhw
fld
ret
xchg
cmps
jp
mov
mov
push
mov
xchg
or
test
xor
dec
mov
mov
cmp
xor
push
daa
fisubr
cmp
add
or
call
pop
imul
add
or
scas
mov
adc
sbb
add
jmp
push
clc
adc
add
and
repnz
sti
retf
cld
push
scas
sub
sub
pop
test
mov
xor
cdq
iret
sub
je
dec
or
rcl
inc
jle
dec
es
push
fwait
cmps
je
xchg
add
std
xchg
inc
mov
fld
loop
xor
dec
xchg
push
sbb
xor
fs
jmp
fisubr
mov
pusha
mov
xor
pop
inc
cmp
int3
cmp
or
div
(bad)
stos
push
xchg
outs
out
cmp
shl
pop
data16
jle
cdq
jo
sbb
jae
(bad)
cmp
add
xchg
scas
in
retf
push
inc
xlat
cmp
pop
push
es
cmp
fst
pop
sbb
mov
mov
xchg
dec
adc
add
out
aas
xor
pop
jle
jns
loope
dec
pusha
push
or
scas
test
mov
adc
shl
sbb
mov
icebp
inc
mov
clc
mov
ins
not
iret
outs
push
fisub
pop
and
or
test
(bad)
mov
sahf
dec
inc
add
pop
xor
(bad)
cmc
scas
mov
adc
add
add
and
xor
xor
lds
mov
mov
mov
inc
call
(bad)
jns
repnz
or
dec
scas
push
xchg
mov
cmc
xchg
int
out
hlt
jo
or
dec
and
add
pop
sahf
retf
adc
loope
cs
pop
jmp
cli
loopne
test
pop
mov
xor
mov
push
test
aas
in
call
jns
sar
pop
sub
test
out
inc
loop
imul
test
xchg
mov
xchg
sub
stc
adc
arpl
fs
es
test
aad
aad
xchg
push
test
push
add
pop
adc
pop
xchg
or
nop
push
mov
arpl
and
sub
fsubrp
dec
sbb
and
lods
pop
iret
in
out
out
je
push
repnz
mov
stos
dec
jmp
(bad)
xor
stc
xchg
add
adc
mov
pop
inc
jmp
cli
adc
push
dec
jbe
rcr
cmp
dec
in
cld
fld
pop
(bad)
pusha
add
jb
jp
xor
or
aad
inc
or
daa
rcr
out
xchg
pop
cmps
xor
dec
daa
(bad)
out
rcl
cld
adc
test
or
cwde
fwait
jecxz
jnp
or
fist
sub
lods
shl
sub
daa
mov
sti
cmp
sub
pop
ficomp
jns
ret
aaa
cmps
and
gs
fwait
lods
jmp
mov
(bad)
fcomi
jbe
xchg
jmp
out
and
push
es
jmp
call
gs
loope
loopne
pop
outs
dec
int3
mov
call
dec
out
call
adc
addr16
mov
dec
(bad)
out
pop
out
push
pop
fnstenv
ret
test
dec
jnp
cs
stos
push
inc
adc
fmul
fsubrp
ret
or
pop
outs
nop
mov
jb
or
sbb
popf
pop
and
mov
jns
(bad)
imul
ja
mov
retf
mov
fisttp
inc
push
cwde
adc
mov
mov
cdq
fild
xor
mov
pop
out
jmp
ss
mov
cmps
in
in
test
inc
imul
adc
sbb
jno
jmp
cmp
dec
mov
mov
xchg
fdivr
movs
pop
fcomp
fcmovne
push
pop
jmp
sub
mov
and
clc
test
hlt
ja
cmc
cmp
cld
fmul
mov
lea
push
daa
mov
iret
sbb
sti
ret
or
shl
mov
mov
lock
inc
sub
xchg
add
xor
clc
add
mov
imul
icebp
ror
jae
enter
ds
mov
(bad)
aaa
and
mov
cwde
pop
repz
add
inc
dec
(bad)
fbld
call
and
shl
fsubr
cmp
movs
outs
leave
test
and
ror
jb
call
dec
sub
adc
popa
xor
out
js
xor
clc
loope
movs
enter
and
stos
cmp
mov
jbe
cs
xchg
xor
cmp
scas
fcomp
retf
push
xchg
rol
xchg
sbb
loope
mov
ins
mov
stos
data16
lds
mov
inc
(bad)
jecxz
sahf
mov
and
sti
pop
pop
lahf
xchg
and
xor
test
jne
mov
outs
pop
push
mov
sub
jmp
mov
and
cdq
pop
pushf
sub
ror
ins
cmp
and
daa
loop
je
repz
std
xchg
cmp
nop
or
cli
ins
fdiv
jns
clc
jecxz
(bad)
jns
mov
mov
lock
sub
lahf
push
pop
lods
aaa
cmp
ret
push
loop
lods
cmp
arpl
out
imul
ins
xchg
xlat
mov
cmp
pop
fimul
sbb
push
xchg
sbb
cmp
push
adc
or
xchg
shl
sub
(bad)
xchg
rol
aas
fsub
lock
push
mov
pop
jmp
dec
sbb
inc
jge
in
pusha
xor
push
gs
test
and
lock
cmp
(bad)
leave
popa
add
xlat
mov
push
dec
push
ds
das
xchg
ror
inc
dec
addr16
adc
push
mov
push
pop
jp
or
push
cwde
push
jg
test
mov
(bad)
jb
movs
in
gs
mov
enter
inc
imul
sub
adc
mov
ins
js
cli
sbb
jb
stos
(bad)
jecxz
leave
leave
in
movs
div
add
retf
jne
fstp
fabs
test
cmp
cmp
add
and
into
pushf
push
inc
cmp
cmp
outs
push
push
push
and
adc
test
lods
add
cwde
(bad)
inc
jb
cld
cs
lods
mov
or
dec
sar
aaa
nop
push
cmps
sub
aas
jns
xor
or
out
lahf
daa
cli
lods
in
fwait
dec
lea
cdq
ret
adc
push
cs
push
sbb
mov
stos
aam
(bad)
enter
inc
out
inc
in
xor
jecxz
repnz
rol
dec
pop
sbb
in
jno
sub
ret
pusha
les
fadd
fimul
add
test
mov
adc
and
xchg
out
retf
aam
leave
mov
ret
shl
push
mov
lock
nop
pop
retf
(bad)
pop
adc
mov
add
arpl
xchg
icebp
xchg
outs
cmps
(bad)
adc
fimul
push
dec
imul
ins
leave
inc
ins
shl
xor
test
mov
jmp
imul
lea
push
push
sbb
(bad)
js
aam
lods
outs
xchg
sub
fs
xor
sub
js
aas
mov
add
xchg
or
pop
lea
sbb
lea
mov
inc
jbe
ins
ss
sti
pop
mov
rol
push
adc
or
aaa
inc
fisubr
mov
jbe
shr
fldcw
inc
in
or
jmp
in
popa
ss
ins
mov
or
shl
imul
ficomp
mov
jle
gs
outs
retf
pop
into
(bad)
and
inc
ds
iret
inc
out
cmp
test
jb
test
jo
jmp
aas
inc
mov
push
xlat
pop
mov
aam
out
xor
int3
or
mov
jmp
test
push
int3
fcomi
and
aaa
cmps
or
ret
lods
cmpxchg
pop
stos
dec
inc
(bad)
fdivr
mov
pushf
xor
jo
mov
xchg
sar
sahf
hlt
lds
adc
loopne
cli
fsubr
(bad)
popf
and
or
xchg
xor
jbe
mov
inc
sbb
scas
inc
cmc
sbb
dec
or
or
(bad)
popa
dec
fstp
xchg
cmps
push
pop
mov
pop
xor
jl
xor
push
addr16
and
inc
pop
xor
out
mov
push
lea
mov
loope
sbb
aaa
sbb
rol
xlat
int3
jmp
or
popa
imul
and
into
pop
add
ret
adc
rol
mov
jmp
imul
sbb
cpuid
sbb
je
mov
fdivp
cmp
xchg
pusha
cmp
jecxz
push
arpl
aam
dec
mov
aas
inc
cdq
xchg
ins
jbe
iret
dec
in
push
xchg
es
or
mov
aas
imul
xchg
dec
out
ins
into
aas
sub
aas
and
jmp
lods
je
push
in
pushf
pop
add
jmp
and
mov
aam
cmp
out
sub
xchg
jns
jg
fs
mov
pop
pop
cdq
xchg
mov
ds
test
push
in
sti
and
int3
popa
in
adc
mov
add
cwde
xchg
dec
jmp
or
xchg
adc
jge
call
pop
jge
int3
inc
pop
ret
sub
sub
inc
enter
call
fyl2xp1
lods
fwait
lods
jns
adc
call
xor
add
inc
(bad)
and
(bad)
mov
sti
inc
xor
test
xor
sbb
cli
popa
das
sub
clc
shl
rcl
inc
ret
dec
jmp
inc
xlat
iret
mov
or
cmp
xor
in
fs
fs
lahf
mov
fstp
sub
dec
jl
jns
add
sbb
push
push
cmp
sti
pop
adc
bound
scas
push
jmp
mov
mov
pop
cs
mov
popa
xchg
mov
inc
test
adc
cmps
daa
and
repz
adc
cwde
xchg
push
add
fisttp
push
jae
daa
mov
mov
jmp
xchg
pop
pop
enter
add
scas
sar
shr
jmp
or
xchg
sub
sahf
das
xchg
fmulp
mov
int
inc
mov
lods
mov
push
mov
in
lods
mov
mov
push
cwde
mov
(bad)
aam
inc
adc
ds
je
inc
das
and
sub
test
(bad)
icebp
inc
xor
iret
jge
mov
leave
cmp
push
out
adc
bound
lea
ja
or
sti
xchg
test
mov
pop
aad
repz
dec
mov
or
xchg
sbb
loope
cmp
sti
into
push
ficomp
jbe
push
add
dec
push
je
pop
retf
out
inc
mov
and
ins
loope
(bad)
test
jmp
fs
les
aas
sbb
cdq
(bad)
jb
test
xchg
out
pusha
jecxz
fisttp
jbe
jno
cli
mov
xchg
dec
lock
cmc
(bad)
loope
sahf
jb
aaa
imul
sbb
bound
cwde
enter
pop
push
inc
and
xor
add
sub
or
test
ret
mov
add
push
mov
stc
fcmovnb
and
xchg
adc
fcomp
fwait
mov
pop
in
test
ret
mov
jge
ja
fcom
fadd
fst
mov
es
iret
xchg
cmp
sub
repnz
jbe
pop
jp
idiv
or
stc
inc
loop
cmps
test
aad
cmp
cdq
sub
cmp
ret
mov
pop
scas
sbb
call
(bad)
xchg
sub
inc
sbb
xor
shr
mov
mov
int
inc
adc
sub
sub
jno
push
sub
and
mov
add
lods
cwde
mov
jo
or
mov
scas
sbb
add
(bad)
les
xchg
fsub
push
push
fwait
pusha
(bad)
cdq
imul
mov
inc
inc
(bad)
rcr
iret
adc
xchg
out
xor
add
xor
or
mov
pusha
push
xchg
fcomip
aas
push
lds
dec
scas
sar
jns
ss
jmp
mov
je
xor
data16
xchg
outs
ret
(bad)
lds
pop
je
sub
in
mov
pop
cld
push
repnz
inc
and
int3
and
cmp
jle
popa
mov
sbb
adc
mov
and
shl
ret
ins
out
mov
adc
add
jp
(bad)
sbb
pop
int3
cdq
mov
nop
mov
shr
pop
mov
inc
mov
cmp
fwait
adc
aaa
xor
pushf
push
sbb
mov
xchg
(bad)
rcr
(bad)
repnz
arpl
jle
int
ret
test
in
pop
cmp
cmc
jnp
sub
fwait
shl
xchg
sub
mov
cmp
sub
and
addr16
scas
push
ds
lock
not
loope
mov
xor
inc
cld
push
mov
push
mov
(bad)
mov
in
mov
call
pop
mov
sar
jbe
or
cs
aam
gs
and
adc
xchg
jl
sub
push
xchg
(bad)
div
jle
or
cwde
fld
retf
mov
add
sbb
push
sub
out
inc
push
gs
inc
jo
cmp
je
retf
retf
jge
jns
fild
pop
loopne
and
xor
aam
push
arpl
jb
dec
push
pop
into
stc
jb
shl
vpcmpgtd
jmp
fidivr
pop
and
push
cdq
fst
push
(bad)
lds
imul
xchg
mov
outs
enter
stos
cmp
les
pop
pop
add
jno
outs
jmp
fsubr
test
push
adc
stos
mov
sub
inc
not
or
idiv
ss
cdq
(bad)
cmp
fdivr
xchg
xchg
repz
mov
dec
mov
inc
mov
sbb
jecxz
and
push
add
and
sub
jmp
jecxz
inc
mov
or
push
cld
mov
cmc
and
lock
push
ret
xor
inc
push
movzx
ins
loop
stos
xor
movs
aad
daa
into
sub
rcl
fcomi
pushf
ficom
fld
(bad)
fnsave
push
mov
inc
xchg
dec
ret
pop
mov
outs
push
jo
mov
xlat
or
pop
sar
mov
fwait
(bad)
sub
add
mov
or
xor
pop
jae
out
dec
jmp
adc
aad
(bad)
jmp
xchg
fmul
clc
lods
adc
adc
jmp
cdq
push
repz
pop
aad
mov
sub
(bad)
cmps
retf
and
sbb
out
add
(bad)
inc
mov
xor
jne
cwde
ror
scas
cwde
push
adc
jns
lds
and
lahf
jo
add
and
pop
cli
xor
iret
shl
dec
test
fwait
cmp
or
je
or
stos
call
xor
loopne
adc
push
push
mov
jbe
fsqrt
pop
in
cmp
sti
pusha
xor
aaa
into
fwait
add
mov
add
or
adc
dec
ss
rol
fist
and
dec
div
lahf
gs
jne
scas
iret
fwait
lahf
sbb
int
cmp
inc
mov
movs
es
or
cmp
aaa
jg
push
lea
jg
pop
out
test
fwait
(bad)
fidivr
psubusb
mov
sbb
mov
xor
dec
lock
nop
mov
sbb
mov
mov
rcr
and
sub
jge
inc
and
add
or
fld
aam
rcl
aaa
mov
fnsave
(bad)
xchg
or
in
cmp
jae
jp
lods
xor
pop
push
dec
dec
mov
sbb
push
inc
loopne
xlat
adc
push
lock
stc
aam
ret
or
sbb
scas
aaa
and
hlt
dec
fst
mov
or
inc
jmp
ret
adc
cld
(bad)
not
hlt
retf
sbb
ins
cmps
jecxz
push
mov
push
and
and
mov
sbb
dec
outs
je
cmp
xchg
jmp
in
mov
or
xor
bound
pushf
call
xlat
adc
retf
les
add
loopne
mov
data16
inc
shl
popa
inc
mov
mov
mov
inc
push
pop
addr16
ins
into
pusha
adc
sbb
sbb
call
rol
pop
dec
add
shl
pop
outs
cmp
adc
push
cdq
mov
les
jge
rcl
retf
ja
mov
pandn
popf
xchg
or
ds
fwait
cmp
sbb
(bad)
sti
cs
mov
popf
adc
adc
fwait
and
mov
pop
data16
mov
ja
test
movs
es
ins
loopne
adc
push
cmp
imul
fsub
cmp
test
jno
push
cdq
icebp
or
cmp
add
and
mov
pop
ds
mov
mov
fistp
fstp
mov
pop
das
jnp
add
scas
cmp
lods
cmp
mov
sub
ret
jl
cmp
sub
fadd
push
add
sbb
pop
inc
fmul
ins
sub
inc
push
not
sbb
sar
ins
mov
rcr
shl
neg
sahf
fld
xchg
sbb
(bad)
jecxz
jl
addps
cmp
mov
in
rcl
into
call
sti
movs
(bad)
daa
sub
mov
lahf
nop
mov
nop
pop
cmps
mov
xor
loop
mov
aad
mov
sbb
popf
jno
and
pop
jbe
sbb
out
ret
or
inc
sub
mov
and
add
pop
sbb
pop
mov
lods
paddusb
leave
and
retf
(bad)
stc
and
fwait
in
inc
fld
repnz
(bad)
dec
(bad)
hlt
adc
loop
push
fdiv
pusha
pop
xor
xchg
jb
aad
or
mov
imul
shr
les
fwait
jb
xor
add
stos
outs
dec
repnz
rol
xchg
cmp
adc
pop
xor
jno
shr
out
and
mov
bound
xor
push
jg
add
inc
dec
or
daa
test
(bad)
mov
mov
or
imul
and
adc
leave
out
retf
dec
bound
mov
shr
add
cdq
dec
std
aas
sbb
scas
inc
fcomp
aad
(bad)
mov
stc
pop
mov
ss
mov
pop
or
or
ret
or
iret
sub
xchg
cli
xor
es
(bad)
jns
fild
fsub
in
mov
loop
in
(bad)
xchg
mov
aam
imul
xor
repnz
jp
add
cmp
and
sahf
inc
outs
mov
repnz
inc
push
nop
and
dec
push
inc
sar
ins
dec
pop
cmp
sbb
inc
sub
out
loop
mov
xchg
push
and
hlt
or
adc
and
ss
inc
pop
cli
fdecstp
scas
cwde
sar
pusha
stos
stos
sbb
mov
imul
jg
jecxz
(bad)
push
cs
icebp
inc
daa
jne
sahf
lea
in
sbb
jo
xchg
addr16
mov
imul
ror
push
(bad)
pop
xchg
jae
xor
fiadd
push
jae
arpl
out
sbb
xor
pop
movs
fldenv
add
add
jb
xor
xchg
adc
jmp
(bad)
fsub
lods
ins
jno
addr16
(bad)
repnz
call
shl
sbb
xor
cld
ss
mov
inc
sbb
or
pop
outs
out
fucomi
sbb
add
xchg
pop
imul
cmp
xor
pop
into
pop
ins
pop
lea
pop
(bad)
int
iret
push
cmp
pushf
lea
jnp
or
out
or
mov
call
loop
mov
pop
repnz
and
mov
xchg
or
popf
adc
add
gs
fidivr
icebp
lods
add
pop
pop
jae
leave
and
xchg
pop
js
out
mov
loopne
and
lea
jp
sub
lock
xlat
push
fcmovnb
out
cwde
out
cvtpi2ps
xchg
pop
mov
rcpps
ret
mov
cmp
mov
mov
faddp
cld
adc
push
sub
sub
das
aam
dec
ins
iret
pop
mov
sbb
and
shl
cmp
cdq
test
fisttp
out
scas
dec
clc
xor
mov
ja
dec
aaa
in
ds
mov
arpl
imul
jp
adc
jmp
ret
pop
fst
sbb
xchg
dec
fcom
and
in
push
mov
xor
inc
xor
jp
inc
mov
xchg
mov
jno
lods
xlat
aas
and
jg
jg
bound
or
pop
daa
dec
jb
dec
test
in
je
es
imul
push
sub
(bad)
sar
jae
jno
mov
and
popa
cmp
inc
jmp
fisub
outs
imul
push
sahf
add
dec
std
inc
bound
jmp
and
inc
sti
xchg
fst
xchg
cwde
cmp
push
xor
push
test
mov
lods
js
or
cmp
and
sahf
push
std
ins
mov
lods
mov
cmps
fsub
pushf
adc
xchg
stos
repz
push
stos
xchg
bound
xor
outs
mov
cmp
cwde
data16
daa
ret
aad
imul
in
(bad)
pop
mov
pop
pop
lea
push
outs
stc
inc
push
lahf
inc
inc
fdivp
cmc
add
iret
ret
xor
push
rcr
inc
mov
jno
fcomip
add
xchg
idiv
in
mov
push
outs
push
neg
mov
push
xchg
xor
adc
bound
adc
iret
ins
ins
mov
scas
jo
sbb
dec
mov
add
pushf
mov
push
pop
xor
jne
ds
leave
xchg
fidiv
push
into
js
xchg
ins
add
dec
mov
mov
aam
stos
scas
nop
jl
xchg
pop
mov
div
scas
ins
retf
push
test
mov
cmp
xchg
xchg
xchg
retf
aaa
inc
ficom
stos
dec
jl
sbb
mov
and
nop
mov
push
ins
dec
sub
push
cmp
mov
loopne
lock
in
push
pop
cmc
inc
or
pop
push
jle
sbb
rcr
out
sub
jns
dec
add
dec
sbb
imul
pop
inc
push
ins
inc
push
scas
shr
xchg
gs
sbb
mov
ficom
mov
into
gs
xor
test
sub
(bad)
mov
out
(bad)
jmp
mov
mov
jle
ins
(bad)
enter
fild
pop
xchg
mov
and
pop
pop
lock
repnz
repz
stos
popf
mov
repnz
stos
push
xchg
xor
test
inc
ss
mov
sbb
inc
test
lds
arpl
lods
jae
loope
and
mov
(bad)
push
mov
stos
out
cmps
jp
dec
adc
jbe
mov
xchg
cmp
jns
sti
add
sbb
jg
mov
arpl
sbb
in
shl
ins
sbb
js
fidiv
out
push
sahf
ins
jmp
fistp
dec
rcr
rcr
mov
xchg
(bad)
(bad)
dec
mov
fldenv
scas
cmp
jmp
rcr
sbb
shr
jae
inc
in
inc
mov
add
(bad)
out
pop
mov
inc
mov
mov
inc
sub
or
mov
cmc
dec
sub
add
jge
das
cmp
xchg
sbb
add
add
jg
inc
fistp
mov
jecxz
gs
iret
cld
cmp
push
mov
das
and
movs
sti
scas
lea
inc
pop
movs
stos
mov
ins
call
stc
movs
pop
test
into
push
fs
out
call
sub
cmp
addr16
fadd
xor
push
xchg
mov
test
mov
inc
fist
xchg
inc
dec
xor
enter
mov
icebp
mov
inc
inc
sbb
dec
fmul
sbb
jne
retf
out
inc
ret
inc
data16
mov
jo
mov
cmps
xchg
sbb
fisttp
rol
stos
test
and
xor
dec
mov
dec
les
pop
ss
arpl
fst
sub
sahf
and
push
aas
scas
arpl
fwait
mov
mov
jno
adc
push
add
inc
cmp
xor
mov
lock
movs
mul
shl
add
cmps
jge
ins
fs
inc
outs
jmp
scas
or
xchg
jae
fsub
es
sub
xor
je
inc
fcomi
cmps
xor
jno
mov
cli
mov
sub
into
popf
movs
rcr
pop
pusha
cmp
lods
xor
fwait
test
scas
leave
addr16
sub
or
pop
inc
shl
cmps
sbb
pop
jl
neg
dec
cmc
jmp
lods
sub
jb
mov
(bad)
jmp
sbb
or
mov
test
mov
sub
add
sti
pop
cwde
mov
add
gs
xchg
pop
(bad)
mov
dec
jge
lods
fs
push
jb
jg
mov
adc
pop
ror
dec
mov
adc
inc
mov
(bad)
jbe
jp
cmp
pop
in
push
sub
scas
mov
call
daa
mov
mov
inc
sbb
rcr
add
(bad)
mov
sti
mov
push
adc
mov
mov
pop
fistp
sbb
(bad)
jns
xlat
add
pop
pusha
dec
mov
push
mov
dec
popf
stos
dec
and
das
retf
add
mov
jge
mov
out
not
dec
lods
xchg
mov
pop
jmp
or
jmp
mov
int3
xchg
pushf
(bad)
mov
fidiv
mov
inc
sbb
mov
jb
or
jbe
aad
pop
es
adc
into
shl
iret
fstp
jnp
add
ret
leave
mov
iret
outs
enter
mov
xchg
jecxz
sbb
rcl
dec
popa
sub
movs
jnp
cmp
push
xchg
inc
(bad)
push
daa
push
cmp
pop
push
popa
imul
pop
jno
sub
jne
loop
dec
inc
stc
sbb
aaa
fdiv
adc
les
xchg
(bad)
jno
push
addr16
not
pop
mov
cld
test
xchg
inc
jmp
cdq
fld
sub
jecxz
lahf
mov
pop
mov
cmps
repnz
xor
outs
push
mov
jmp
js
stos
jp
pop
jmp
out
cmp
jbe
inc
xor
xchg
add
jmp
fstp
loop
outs
aaa
popa
loop
jae
mov
dec
jg
out
or
out
jge
div
loop
sub
ud2
xchg
inc
adc
adc
movs
ficom
gs
push
and
stos
lock
ret
xchg
js
clc
dec
pop
sbb
imul
add
sub
inc
xor
push
jp
mov
mov
sub
adc
or
out
sbb
retf
sti
jl
aas
inc
jno
inc
dec
dec
dec
xor
push
stc
and
xchg
imul
xlat
and
ret
inc
shr
das
lock
jmp
jmp
aas
and
out
out
imul
es
adc
sahf
out
repnz
sbb
jecxz
xor
(bad)
jns
cmc
xor
push
aad
fisubr
push
pop
fst
aas
push
test
pop
fidivr
imul
les
(bad)
in
fist
dec
xor
shr
xor
or
loop
rcr
in
test
adc
fs
sti
mov
or
or
int
retf
dec
jbe
call
sbb
or
enter
cmp
repnz
pop
and
cmps
sub
inc
popf
adc
xor
fstp
push
sbb
jno
jmp
stos
and
cmp
xchg
jle
xor
daa
dec
and
out
(bad)
loope
pop
scas
leave
lahf
adc
mov
mov
and
push
cmp
xchg
dec
es
adc
sbb
mov
lds
lahf
mov
jge
cmc
ss
js
sub
daa
mov
movs
fist
xor
mov
enter
mov
retf
addr16
cwde
fdiv
or
loope
pop
and
xchg
sub
leave
cli
out
or
icebp
push
pop
es
cmp
arpl
inc
mov
add
jo
test
sbb
aaa
mov
xchg
xchg
imul
inc
js
sub
pop
cmp
call
mov
inc
fs
mov
cmps
xchg
imul
int3
test
scas
jns
scas
xor
test
sub
xchg
into
push
ja
cmp
add
cmp
shl
add
out
push
mov
jb
into
nop
std
xor
adc
mov
pusha
ins
mov
xchg
xor
add
stc
push
sahf
sbb
xor
mov
shl
mov
mov
mov
push
mov
sub
imul
inc
lock
mov
xor
sub
je
ins
int3
div
inc
fdiv
push
sub
xchg
data16
in
(bad)
sbb
out
adc
sbb
ss
pop
add
and
in
stc
add
mov
push
(bad)
mov
xlat
adc
pop
fisub
and
aam
shr
xchg
push
inc
xor
call
test
fbld
fiadd
aam
outs
(bad)
push
mov
imul
lea
xchg
cmp
rcr
std
mov
sub
ror
push
fld
jp
fcomp
mov
je
rol
(bad)
and
scas
push
shl
sbb
and
sub
ja
push
std
mov
in
retf
mov
cdq
std
in
push
mov
daa
sub
cld
movs
xchg
add
repz
in
mov
les
scas
mov
jmp
mov
mov
jnp
fwait
add
ins
push
gs
dec
mov
add
out
stos
sub
mov
push
retf
push
mov
push
cmp
shl
mov
jge
in
xchg
or
xchg
or
ret
push
pushf
xlat
dec
int3
xchg
add
inc
div
int3
adc
dec
(bad)
xchg
add
mov
out
add
mov
imul
mov
xchg
imul
xor
es
imul
and
pop
jnp
adc
in
cmp
push
cs
pop
jle
out
pop
push
and
into
call
ret
(bad)
dec
xchg
cmps
push
push
cmc
lea
jns
mov
movs
add
in
cmp
fwait
sbb
retf
mov
cmp
ss
(bad)
popf
pop
cmp
jbe
fnstsw
gs
or
push
xor
ins
mov
mov
and
dec
not
pop
sbb
jae
or
scas
retf
sbb
jo
mov
pop
sub
dec
stos
adc
dec
mov
push
adc
cld
xchg
mov
dec
fadd
push
test
sub
shr
ss
push
ret
push
fiadd
mov
or
cwde
push
or
mov
and
loop
imul
(bad)
xchg
push
aaa
cmp
xor
jb
sbb
into
mov
(bad)
xor
(bad)
out
mov
js
xchg
add
inc
jo
dec
or
mov
fcmovbe
sahf
loope
push
pushf
add
test
jne
mov
and
push
push
(bad)
cli
xchg
shl
sbb
mov
cdq
cmp
stos
push
idiv
inc
cmp
mov
fstp
inc
add
jmp
hlt
es
movs
repz
popa
test
movs
es
popf
push
jp
sahf
(bad)
pop
int3
jp
jecxz
nop
mov
addr16
test
mov
(bad)
cmp
inc
rcl
xor
pop
pop
mov
cld
mov
fld
cli
imul
sbb
in
xchg
adc
mov
push
xchg
xchg
inc
or
add
int3
jo
jae
mov
in
aam
pop
lea
cmp
inc
mov
pop
stos
enter
pop
call
ret
iret
cs
push
cmovbe
rol
retf
(bad)
mov
sub
xchg
pop
popf
xlat
mov
div
retf
jp
icebp
dec
or
sbb
lahf
sbb
push
(bad)
xor
data16
cmc
mov
pop
xchg
jno
jge
and
sbb
dec
pop
sbb
push
and
test
push
mov
inc
lea
ret
jb
(bad)
call
iret
data16
or
mov
scas
pop
jo
mov
cmp
movs
sbb
stc
in
seta
test
sub
push
into
aas
iret
xor
pusha
add
or
inc
dec
(bad)
int3
out
fstp
test
imul
jno
add
push
sub
or
jnp
push
iret
and
pop
or
ins
sub
jmp
ins
inc
fadd
cmc
sub
stos
iret
pop
sbb
xchg
jno
les
inc
add
mov
ret
inc
js
call
cs
ror
gs
and
dec
aad
fcmovne
xchg
std
data16
out
(bad)
jns
arpl
(bad)
cmp
dec
aas
jle
mov
js
mov
dec
sbb
fistp
and
push
sti
dec
sub
dec
xchg
mov
icebp
and
lods
cwde
dec
scas
fstp
xor
adc
sub
fisub
cmp
cmp
pop
aaa
xchg
int
sbb
sub
sbb
inc
xchg
jmp
xlat
(bad)
lea
int3
xor
sti
(bad)
out
inc
push
jl
mov
sbb
add
inc
pop
xchg
(bad)
into
sbb
sbb
fnstsw
mov
jmp
xor
lds
stc
rcr
into
scas
sbb
xchg
outs
out
outs
sub
inc
fisttp
stc
test
ins
hlt
xor
test
bound
loope
popf
pop
xchg
sbb
je
daa
jl
gs
xor
pop
inc
mov
or
jne
std
cmp
das
inc
dec
add
cmp
fcmovnu
inc
xchg
nop
xchg
hlt
pop
push
jbe
sar
retf
neg
dec
test
xor
out
dec
fdivr
mov
call
ss
xor
jmp
stos
pop
mov
mov
or
mov
xchg
cdq
in
dec
push
mov
movs
sbb
cmps
sbb
xor
adc
cmps
push
es
dec
inc
pop
push
pop
adc
dec
sub
jecxz
repnz
xor
and
push
push
push
or
sbb
rcl
ror
rcr
inc
add
inc
mov
push
aaa
iret
das
aad
fdivr
addr16
aaa
enter
xor
fs
or
in
loopne
ret
lods
and
sahf
push
cmp
xor
gs
and
test
mov
cmp
retf
push
mov
scas
push
ret
clc
jns
mov
jnp
(bad)
mov
aam
fiadd
cmp
addr16
jge
inc
cs
jg
push
sti
in
inc
ja
nop
sub
jg
dec
test
stos
leave
pusha
rol
sbb
(bad)
enter
(bad)
pop
xor
push
cmps
pop
ds
dec
or
xchg
sbb
imul
stos
mov
xchg
and
add
les
out
sbb
retf
sub
lock
sbb
outs
movs
push
dec
and
pop
(bad)
mov
or
mov
jle
jmp
arpl
mov
xor
xchg
fild
and
cdq
dec
fist
sar
sub
call
add
mov
lds
das
cmp
sub
pop
loope
adc
lods
push
leave
(bad)
imul
jb
adc
and
movs
dec
jg
fld
push
mov
pop
add
jo
ret
jno
call
mov
add
out
or
fdiv
push
out
mov
repz
push
xor
mov
sub
cmps
int
lea
sbb
adc
pop
sbb
xlat
in
cmp
dec
mov
mov
mov
mov
ss
enter
loopne
mov
icebp
inc
addr16
dec
lods
ret
fadd
pop
xchg
stos
loopne
mov
scas
cmp
pop
push
and
and
add
test
push
ds
sub
sti
cmps
xor
xchg
dec
daa
(bad)
repz
dec
es
pop
(bad)
cmps
cmps
mov
cmps
mov
push
(bad)
xchg
and
sub
or
pop
ror
movs
push
(bad)
sub
je
lods
call
cmp
(bad)
shr
loope
aad
add
inc
popa
cmp
cmp
inc
div
inc
push
dec
cs
imul
push
in
add
xchg
adc
jle
test
pusha
push
popa
inc
mov
sbb
sbb
sub
popf
int3
lahf
(bad)
es
bound
int
addr16
fnstcw
call
aas
jns
push
or
or
xor
push
add
xchg
test
outs
adc
add
sahf
sub
jnp
rcr
pop
aad
retf
jl
maskmovq
div
scas
add
fldcw
dec
loopne
shl
mov
jmp
jne
mov
in
mov
xor
les
lock
xor
pop
cmc
pusha
jb
dec
and
fdiv
sbb
fcomip
cmc
pushf
lds
bound
sbb
fwait
and
jae
repnz
jmp
sar
call
mov
jb
mov
imul
mov
adc
pop
pop
mov
cld
sub
inc
push
daa
dec
xchg
in
jmp
je
pop
adc
fst
js
dec
aad
adc
shr
pusha
jo
pop
xor
jp
dec
mov
and
clc
add
and
push
jg
mov
cmp
or
les
sbb
pushf
dec
dec
lods
enter
out
gs
pop
adc
icebp
add
or
inc
rcl
push
hlt
pop
xor
xchg
mov
idiv
inc
pop
lods
sbb
dec
imul
fnstenv
iret
out
pop
(bad)
cmps
jns
mov
xchg
cmp
jno
int
dec
das
mov
(bad)
(bad)
(bad)
and
push
push
mov
mov
inc
mov
mov
pusha
pop
sbb
pop
rcr
inc
in
xor
cdq
jno
sti
inc
sbb
adc
cmp
pusha
xchg
xor
xor
mov
je
call
push
fsub
pop
sub
ja
fnstenv
mov
ins
mov
movs
pop
test
loop
push
lds
in
dec
addr16
in
neg
fstp
cmc
jge
xor
pop
(bad)
or
repz
mov
jo
dec
mov
gs
pop
aad
or
dec
inc
lahf
mov
pop
adc
ja
mov
loope
fdivr
add
(bad)
out
pop
fimul
fisubr
(bad)
iret
mov
int
pop
or
sar
repnz
(bad)
pop
fbstp
mov
arpl
fwait
pop
ins
popa
fisub
jle
jo
or
les
sub
xchg
jnp
popf
sbb
push
mov
xchg
dec
repnz
xchg
lods
div
push
pop
sub
fcom
ds
add
sbb
sub
jae
and
repz
mov
inc
es
jg
xchg
sbb
out
mov
pop
loop
movs
out
std
retf
mov
lds
cmps
cmp
jmp
jmp
cmps
imul
pop
push
adc
fistp
mov
scas
int
sbb
cmc
imul
xchg
in
xchg
mov
xlat
add
or
or
pop
sub
inc
sbb
pusha
lds
jb
inc
mov
fst
lock
adc
call
ret
jno
clc
mov
shrd
test
add
loopne
pop
daa
pop
test
bound
(bad)
jb
pop
cmp
loope
jnp
add
into
lds
xor
mov
or
lock
xchg
and
jmp
inc
into
icebp
out
ins
test
pop
fdivr
mov
or
test
jg
test
jmp
rcr
out
test
js
gs
jnp
xchg
xor
ret
mov
push
jg
pushf
call
and
jmp
je
enter
adc
cwde
call
push
push
aad
push
xchg
sbb
jg
xchg
stos
push
sar
lock
add
sub
add
xchg
dec
loope
ss
je
mov
xor
jmp
cmp
cs
aas
out
add
adc
mov
sbb
jo
dec
dec
sahf
(bad)
xor
fsub
mov
mov
mov
test
leave
in
fdiv
adc
lods
adc
std
jnp
pop
cmc
push
je
pop
lods
test
add
das
pusha
in
fcmovb
jae
push
sahf
and
push
dec
dec
or
iret
fidivr
std
sahf
dec
out
jo
cmp
ins
fistp
and
je
test
and
or
push
scas
outs
xor
xlat
leave
je
mov
cmp
test
int3
imul
lock
sbb
and
rol
std
ja
and
pop
scas
bound
jmp
xchg
jecxz
cmp
outs
lea
cmp
jb
add
adc
cmc
mov
rcr
icebp
aam
cli
(bad)
out
rcr
cmp
lahf
and
inc
int
mov
cmps
adc
inc
mov
jle
pop
inc
(bad)
jmp
stc
push
sbb
int3
aaa
ins
stos
aaa
lods
stos
mov
aad
or
mov
add
repz
adc
out
push
sub
mov
pop
sub
in
adc
push
popa
push
xor
and
cmps
in
movs
xlat
push
sub
jmp
mov
sbb
push
stc
add
cmp
cld
adc
mov
mov
mov
and
mov
xor
xchg
aaa
dec
int
push
pop
mov
pop
add
mov
sti
hlt
sbb
inc
push
in
mov
xor
in
sub
jmp
xor
cmp
add
scas
leave
retf
test
js
jns
push
pusha
cmp
arpl
and
mov
fsubr
sbb
xchg
jnp
or
mov
jecxz
test
inc
sub
ins
pop
enter
and
sbb
dec
je
fimul
sub
mov
nop
mov
call
stos
jmp
sub
add
add
cmps
mov
jbe
xchg
rol
mov
clc
not
repnz
(bad)
mov
shl
loop
out
or
out
std
push
cmp
sbb
pop
mov
(bad)
and
jle
outs
out
push
jge
rcr
retf
test
mov
mov
jns
movs
and
dec
cmp
cmp
inc
daa
test
dec
xchg
loope
pop
mov
cmps
out
sub
mov
pop
inc
(bad)
or
mov
repnz
jne
jo
(bad)
movs
frstor
scas
jo
(bad)
in
hlt
and
cmp
xor
test
mov
dec
jg
jg
jne
je
jnp
or
shr
cwde
sbb
cmp
enter
into
(bad)
clc
cmc
pusha
jp
push
mov
mov
pop
inc
mov
xchg
(bad)
imul
xor
test
adc
pop
loopne
test
sbb
call
sub
call
ficom
cmp
popa
scas
mov
aam
imul
jge
push
mov
shr
mov
jo
dec
arpl
adc
pop
jno
ins
mov
repz
cwde
jmp
fdiv
xchg
cs
push
out
xlat
pcmpgtw
fdivr
fucomi
call
add
(bad)
or
jp
mov
shl
and
jp
push
daa
mov
icebp
(bad)
or
adc
jg
jge
jns
xor
sub
cmp
pop
jmp
mov
cmp
sub
jmp
stos
push
cmp
push
mov
fsub
sbb
jmp
pop
push
push
mov
mov
xchg
inc
cmp
das
movs
clc
aas
mov
call
pop
out
es
pop
push
mov
pop
ror
add
mov
addr16
and
shl
cld
mov
fdiv
push
mov
pop
repnz
call
mov
sti
adc
es
dec
add
dec
outs
dec
adc
push
adc
fstp
ins
(bad)
es
mov
push
jmp
fsubr
in
pop
jmp
pop
mov
xor
stos
sub
shr
out
mov
inc
jb
xchg
ret
jle
xchg
mov
arpl
pop
push
shr
inc
inc
call
retf
or
fcomp
lock
les
icebp
mov
lock
js
ss
push
push
push
(bad)
outs
inc
cmp
dec
xor
repz
mov
jmp
out
dec
push
(bad)
jg
loop
cdq
xchg
(bad)
jl
aam
shl
xor
hlt
mov
imul
mul
(bad)
pop
sbb
mov
sub
mov
jp
mov
mov
shr
arpl
aam
cmc
ficomp
push
pop
sbb
mov
jl
xchg
loopne
imul
mov
xlat
sti
cmp
pop
cmp
addr16
xlat
mov
adc
pop
fdiv
hlt
add
iret
sahf
movs
mov
fsubr
jne
movs
cmp
xchg
mov
outs
xchg
and
jo
ret
and
adc
nop
mov
pop
jmp
dec
sbb
xchg
push
sub
pusha
mov
repz
xchg
call
int
ds
inc
add
pusha
mov
jl
lahf
mov
adc
dec
xor
or
in
icebp
not
and
jmp
xchg
or
and
ins
jae
and
and
jnp
(bad)
rcr
jne
ja
adc
mov
mov
add
fbld
lea
ins
cmp
(bad)
jbe
fwait
jnp
int
test
(bad)
mov
sub
sub
pop
icebp
ret
cvttps2pi
inc
push
jmp
mov
jo
xchg
(bad)
xchg
mov
jns
push
add
xlat
retf
or
aaa
inc
pop
mov
jecxz
or
mov
cmp
std
loop
adc
mov
cld
test
fisubr
inc
mov
repnz
sti
aam
or
push
jp
xor
adc
dec
xlat
pushf
jg
ds
into
nop
mov
sub
je
mov
sbb
jnp
sub
in
cwde
fistp
sub
push
mov
pop
mov
mov
les
mov
and
xchg
sbb
xor
jmp
test
jmp
pusha
hlt
cmp
out
pop
dec
inc
dec
aaa
mov
and
fidiv
add
(bad)
sub
inc
xchg
push
xchg
jo
(bad)
test
inc
aas
movs
out
push
or
out
data16
inc
add
outs
pop
pop
sbb
xchg
sub
je
fdivr
inc
jne
outs
sbb
push
inc
loope
xchg
je
idiv
sbb
dec
(bad)
sub
aas
sbb
mov
sbb
dec
mov
loop
imul
leave
jl
(bad)
(bad)
cmp
(bad)
popa
outs
(bad)
jp
mov
cmps
call
loop
in
mov
clc
inc
bound
fnstcw
or
or
xor
jmp
sub
loop
hlt
scas
inc
js
jl
xchg
fstp
ror
adc
jae
pop
and
or
sub
cmp
ret
and
scas
(bad)
in
cmp
pop
and
fst
cdq
push
mov
cmp
in
push
loop
(bad)
jl
int
xchg
mov
sbb
int
(bad)
iret
bound
imul
jp
cwde
stc
mov
mov
lds
dec
push
cmps
mov
fwait
mov
or
inc
jae
enter
not
push
push
jnp
int3
mov
push
lahf
int3
retf
dec
fs
cmps
mov
jle
dec
int3
push
sbb
cvtps2pd
fild
lods
or
cmp
outs
rcr
push
cmp
inc
fwait
shl
mov
adc
fwait
gs
leave
pusha
mov
(bad)
ja
mov
sahf
(bad)
ror
xchg
loop
add
cmc
cdq
pop
data16
cmp
in
cmps
lds
js
add
fsubp
mov
or
push
fild
xor
sbb
pop
in
or
and
rdtsc
xor
push
push
aad
jo
pop
mov
adc
push
push
push
call
lahf
shl
dec
adc
or
ja
lods
push
mov
cmp
push
loope
in
sub
sub
or
xchg
and
inc
clc
mov
jg
add
xor
daa
add
aad
pushf
ins
inc
cli
or
adc
mov
inc
test
sub
push
push
mov
js
imul
pusha
cld
pop
int3
data16
jnp
(bad)
(bad)
fiadd
cmps
ins
repz
bound
push
mov
jb
shl
clc
out
dec
mov
nop
movs
push
xchg
xchg
or
test
and
mov
leave
cmc
mov
in
dec
inc
jns
clc
out
cmp
pop
and
mov
sub
xlat
and
(bad)
data16
in
into
leave
aam
pop
and
mov
and
ss
push
mov
adc
xor
adc
push
idiv
out
pop
sbb
sub
mov
cli
(bad)
push
in
push
jnp
lods
aad
call
mov
mov
pop
xlat
jge
mov
sahf
pop
iret
clc
sahf
jnp
mov
push
mov
out
dec
aam
push
cwde
push
int3
out
das
mov
xor
jbe
(bad)
es
pop
es
leave
cmp
mov
jne
push
xchg
lds
or
cwde
sbb
mov
int
(bad)
mov
add
inc
cmp
pop
pop
sqrtps
fwait
xor
mov
test
xor
rcpps
inc
sbb
xor
test
fsub
mov
xchg
inc
mov
xor
push
or
mov
add
push
add
inc
(bad)
mov
mov
mov
cld
sub
pop
sahf
sar
xchg
loop
aad
aam
add
dec
adc
push
push
fdiv
pushf
enter
dec
xchg
std
imul
bound
mov
and
push
mov
ins
aas
jnp
leave
int3
repz
cmps
adc
push
les
add
push
pusha
mov
push
sbb
fcmovbe
xchg
add
ffree
(bad)
push
rcr
mov
or
rol
shl
mov
aam
mov
mov
xchg
mov
imul
and
xchg
stc
gs
xor
sbb
pusha
inc
popf
and
movs
lahf
pop
xchg
jle
xchg
into
mov
fisub
cld
jecxz
lea
aas
enter
imul
lock
je
xchg
push
nop
and
test
je
in
mov
ds
and
fwait
cwde
inc
sbb
mov
fild
xor
add
jg
mov
push
and
mov
scas
loop
int
push
fsub
xor
jg
dec
imul
mov
retf
push
cmps
adc
add
xor
jb
jmp
and
jo
push
rol
mov
push
mov
pop
out
push
(bad)
sub
adc
ror
ror
fbstp
arpl
daa
ret
imul
movs
fnstcw
in
or
xchg
outs
dec
sbb
mov
rcr
mov
loop
fwait
shl
adc
sti
test
mov
jmp
pop
jl
popa
cli
mov
or
sbb
sub
into
xchg
lods
sub
repz
pop
inc
xor
adc
add
xor
adc
pop
shl
xor
aad
outs
leave
imul
popf
push
push
outs
jns
std
mov
sub
lods
lods
mov
adc
jg
adc
fdivrp
sbb
mov
sub
mov
jb
frstor
test
sbb
or
int
sub
pop
ss
test
cmps
(bad)
jmp
jl
data16
ins
xchg
mov
rcl
mov
adc
les
(bad)
and
aad
push
xor
ret
rol
das
jge
jns
sbb
xlat
icebp
clc
and
adc
lds
rcl
fsub
mov
repz
enter
mov
inc
pop
push
mov
test
or
sub
out
push
fwait
sbb
mov
popf
stc
fwait
sub
je
lock
out
std
jmp
cmp
push
ja
dec
(bad)
rsqrtps
cmc
mov
(bad)
xchg
int3
sahf
lds
add
mov
mov
ret
jnp
das
movd
inc
leave
or
mov
xchg
daa
in
lods
imul
cwde
sub
je
retf
ja
dec
adc
push
add
es
clc
pavgw
mov
mov
aad
sub
addr16
shr
aam
adc
scas
repnz
test
push
test
xor
sub
fwait
dec
mov
ret
xchg
mov
inc
addr16
pop
inc
jne
push
adc
add
mov
cmp
cwde
xlat
fldenv
jno
es
or
jno
in
mov
cmc
xlat
stc
cmp
fcmovb
mov
mov
or
mov
mov
cmp
loop
in
fadd
cdq
bound
es
push
mov
mul
mov
in
mov
and
cld
inc
out
sbb
xlat
mov
adc
aam
(bad)
mov
cdq
jmp
nop
ds
or
xchg
dec
in
mov
add
shl
sbb
xlat
mov
ja
test
xchg
pop
pop
push
out
pushf
and
fidivr
sti
dec
outs
ucomiss
outs
mov
imul
test
sar
int3
test
(bad)
stc
retf
adc
cmp
mov
pminub
call
cmp
mov
dec
or
test
idiv
jne
inc
jge
scas
jle
lds
scas
enter
jmp
ds
sub
and
mov
push
push
push
pop
(bad)
popa
fidivr
push
mov
inc
in
push
ja
fsub
xchg
adc
lods
rcr
js
push
jb
mov
scas
mov
into
push
xor
dec
call
jp
cli
sbb
loope
or
ja
jb
dec
out
pop
arpl
popa
test
mov
cmp
adc
out
nop
lahf
or
jecxz
ret
fs
(bad)
xchg
out
xor
cs
xor
push
rcr
daa
mov
loopne
add
repz
dec
mov
and
das
inc
mov
leave
mov
and
fstp
or
fild
push
pop
into
rcr
pop
jl
jae
cdq
es
scas
lea
mov
or
clc
(bad)
dec
xchg
push
std
jae
jno
jmp
push
push
sub
xchg
dec
sahf
out
mov
ret
lock
mov
mov
fxtract
adc
jns
sub
sub
test
cmps
out
dec
pushf
mov
popf
test
adc
addr16
dec
jecxz
shl
push
jl
(bad)
dec
sbb
sbb
mov
arpl
or
je
dec
loop
add
or
mov
mov
sbb
xchg
enter
(bad)
adc
retf
inc
mov
cmp
xchg
or
fld
cmp
out
js
stos
push
enter
push
add
pop
jb
pop
add
and
xor
outs
outs
xor
jne
es
retf
fld
dec
or
pushf
mul
dec
push
xor
je
mov
jo
imul
daa
out
sub
jmp
cmp
xchg
sub
in
mov
movs
push
jp
lods
push
scas
or
sti
pop
ret
daa
(bad)
jmp
sub
adc
je
dec
and
dec
leave
and
enter
inc
imul
mov
fcomp
xor
hlt
xor
or
rcl
ret
fsub
jg
sub
lsl
imul
fsub
xchg
cmp
xlat
xor
das
jbe
push
xchg
add
sbb
loopne
addr16
mov
push
and
or
out
mov
nop
cmp
cmps
inc
and
pushf
push
stos
(bad)
jno
outs
fcom
and
sub
jne
cdq
mov
(bad)
xchg
xor
test
or
jbe
int
mov
out
adc
inc
fs
out
loope
xor
dec
jne
inc
enter
dec
or
xchg
dec
into
les
add
scas
fs
jb
or
lahf
movs
movs
popa
fadd
test
fcomp
jp
push
repz
or
shl
xchg
leavew
xor
xchg
jmp
aam
retf
stos
rcr
xchg
jno
mov
js
pop
fisubr
dec
sub
iret
jae
popf
add
mov
loopne
pop
jl
xchg
ret
mov
mov
adc
add
push
or
xchg
outs
push
mov
cmp
dec
sub
inc
push
(bad)
int
mov
sbb
mov
shr
nop
sbb
aad
inc
xchg
fdiv
inc
ret
shl
not
scas
xlat
dec
or
aam
icebp
call
retf
cmp
sub
std
sub
clc
bound
push
into
dec
aas
lods
mov
mov
ror
call
sub
and
fwait
or
outs
sahf
out
push
dec
jns
xor
adc
xchg
popa
fiadd
repnz
push
mov
mov
shr
cld
fiadd
push
pop
mov
pop
(bad)
sub
xchg
dec
shl
dec
mov
jmp
dec
mov
fnstcw
cmp
gs
gs
push
in
movs
jl
popf
rcr
jle
fstp
jb
sahf
sbb
mov
adc
sub
rcr
(bad)
sub
xor
push
inc
rol
mov
lock
adc
push
inc
xor
out
stos
lds
or
aaa
lods
shr
mov
jmp
dec
dec
enter
dec
push
inc
out
ficom
cmps
add
test
mov
rcl
imul
ror
or
cmp
ficomp
cs
ja
leave
xchg
cmps
je
ficomp
jae
nop
imul
inc
jp
lds
cmp
mov
jl
sub
idiv
outs
out
jns
mov
fist
inc
outs
ds
outs
sub
push
mov
dec
adc
pop
push
ret
ror
fwait
jecxz
mov
and
jle
xor
inc
and
repnz
(bad)
jmp
ja
xor
mov
xor
in
pop
dec
sub
mov
lods
shl
pop
pop
cwde
inc
es
sbb
mov
shl
inc
ret
in
cmp
dec
xchg
fwait
sbb
push
or
aam
jecxz
dec
cwde
sbb
(bad)
push
ss
jmp
out
cs
adc
sbb
loope
mov
dec
fld
pushf
inc
pusha
jp
aam
dec
xlat
jae
mov
rcl
fs
sub
fcomi
dec
(bad)
xchg
mov
xor
test
jnp
sub
adc
inc
dec
cmc
xor
pusha
std
jne
les
imul
push
add
jb
and
(bad)
mov
dec
rcr
scas
lods
rcr
test
mov
sbb
repz
cmp
mov
sti
and
sbb
sub
add
or
loopne
fdivr
sub
rol
mov
xor
xchg
call
movs
push
stos
and
clc
movs
jl
mov
inc
fist
fldenv
mov
jbe
into
jne
pop
jge
call
sub
imul
dec
ds
test
adc
push
test
jle
jns
arpl
jo
call
js
add
push
inc
mov
cmp
mov
fist
das
xor
ss
pop
push
push
out
mov
cdq
xchg
add
pop
sahf
mov
fdivrp
(bad)
div
arpl
(bad)
push
mov
sbb
aad
lods
pop
in
rcl
hlt
jg
xchg
retf
and
cwde
(bad)
lahf
loope
out
pop
std
cmc
repz
ret
cs
ss
aam
jecxz
outs
dec
cld
ficom
mov
fcomp
ds
out
fstp
xchg
push
mov
cmp
or
xchg
dec
test
pop
aas
(bad)
out
dec
dec
jno
jp
mov
xchg
dec
add
(bad)
push
leave
sbb
cld
and
lea
ss
cmc
dec
sub
mov
vmwrite
push
adc
cdq
sub
add
ret
or
and
mov
sahf
jbe
sbb
and
inc
dec
ins
dec
xchg
jg
adc
dec
mov
sub
inc
js
aam
les
sar
xchg
push
or
or
cwde
dec
mov
bound
mov
add
jmp
ret
sbb
sub
retf
cwde
shl
xchg
js
jne
adc
(bad)
fwait
jp
cmp
cmp
jbe
shl
sti
test
std
fsubr
or
ins
mov
jecxz
sbb
xor
pop
pop
jne
(bad)
jle
pusha
pusha
movs
xlat
outs
hlt
rcr
stos
mov
pop
cdq
shr
cs
jge
jecxz
pop
out
test
pop
sub
push
pop
push
pop
add
or
scas
mov
int3
sahf
and
pop
pusha
call
mov
dec
call
push
pop
rcl
repnz
push
je
bound
repz
sbb
mov
sar
sahf
push
test
mov
mov
mov
ins
or
xchg
(bad)
cli
mov
nop
rcr
push
ret
push
xor
cld
shl
ja
cmp
movs
fcmovnb
push
call
das
push
cmp
xchg
aas
repz
fidivr
aad
mov
mov
fbstp
or
jmp
cmp
xor
mov
mov
push
adc
mov
movs
call
mov
inc
add
push
bnd
inc
xor
mov
sub
out
dec
pop
mov
lahf
shl
mov
out
jle
and
cmps
outs
add
ds
mov
loope
hlt
mov
push
xor
ret
jecxz
dec
mov
inc
mov
sbb
mov
call
shl
ds
mov
xchg
lds
movs
scas
cmp
add
enterw
test
lods
imul
pop
mov
(bad)
in
dec
int
pop
stc
push
or
push
jg
adc
inc
mov
and
push
loopne
fisttp
retf
fsub
add
lea
jg
ss
test
xchg
and
mov
mov
ficomp
aas
retf
movs
vpcmpeqw
outs
dec
adc
mov
cmp
je
arpl
cmp
ficom
cmp
test
and
xchg
sbb
int
mov
jmp
cmps
cmp
std
(bad)
inc
outs
lods
mov
xor
mov
inc
fsub
sbb
add
push
dec
test
out
test
loop
das
mov
push
jns
imul
pop
mov
or
fild
mov
test
or
data16
dec
pop
std
test
(bad)
add
fsub
stos
adc
rol
sbb
inc
adc
xchg
psrld
shr
lds
hlt
hlt
enter
out
xchg
and
stc
sub
mov
sbb
xlat
add
dec
xor
test
sub
and
push
in
inc
sub
jbe
retf
pop
scas
push
push
jecxz
sbb
sub
jb
cmp
mov
cli
and
daa
test
or
xor
cmp
pusha
into
jmp
fadd
adc
xchg
jns
xchg
push
push
mov
push
xor
cld
sbb
imul
out
mov
mov
xor
xchg
add
(bad)
jecxz
gs
sar
pop
fidivr
fwait
out
and
dec
call
fcom
mov
xchg
mov
mov
daa
rol
jecxz
test
xchg
bound
jmp
les
mov
nop
push
and
fdiv
or
out
pop
call
loope
jmp
jo
adc
lahf
fs
imul
mov
fiadd
ins
inc
push
jns
cmp
popf
push
test
cld
retf
int3
out
jne
xor
repz
push
retf
shl
(bad)
ins
imul
js
mov
pop
loopne
ins
mov
dec
icebp
mov
sub
or
pop
imul
aad
mov
xor
lahf
aas
cmp
test
add
cwde
lods
sbb
sbb
addr16
and
mov
outs
test
lods
mov
xchg
and
test
add
and
(bad)
pop
data16
push
push
pusha
jle
and
jle
jp
rcr
sub
sar
push
cdq
(bad)
fwait
into
cmc
jecxz
cmp
packssdw
mov
loopne
xchg
out
loopne
and
(bad)
outs
jmp
imul
imul
dec
ret
js
jne
and
jno
pop
and
cld
(bad)
jno
paddusw
cmp
add
and
not
and
inc
lahf
cmp
rcl
int
cld
mov
mov
movs
nop
jns
mov
or
adc
fwait
pop
popf
add
push
push
std
mov
fisub
imul
cmp
pusha
repz
stc
out
je
cld
lods
into
and
add
jae
pop
fldcw
jne
mov
leave
(bad)
ror
repz
cmps
xor
(bad)
sub
jg
jno
mov
arpl
cld
fstp
js
inc
lahf
inc
or
mov
shr
ror
jo
arpl
mov
and
or
mov
mov
inc
push
dec
inc
dec
shl
stc
neg
jno
(bad)
jb
fucomp
jecxz
fwait
jne
jmp
ins
retf
or
int3
cli
xchg
cmp
inc
sbb
inc
dec
xor
mov
jae
test
pushf
in
pop
xchg
js
xor
sub
loop
inc
imul
mov
xchg
push
sub
fnstsw
idiv
shl
or
push
sbb
sbb
pusha
mov
gs
pushw
jmp
inc
mov
data16
cli
xchg
movs
and
pop
mov
fmul
in
xor
out
fiadd
enter
mov
push
imul
adc
sub
js
jge
xor
and
retf
or
call
xchg
jb
sbb
test
lock
mov
jae
cdq
ja
(bad)
sahf
cmp
add
or
shl
or
fstp
sahf
ins
lods
aas
cmp
es
sub
mov
(bad)
out
in
ds
cmp
and
(bad)
int3
(bad)
fidivr
data16
mov
int
ins
aad
xor
jo
lea
push
pop
jmp
pushf
aam
mov
xchg
and
div
or
fst
jmp
imul
mov
js
lods
dec
sbb
mov
cmp
dec
add
pop
jp
push
in
xchg
fbstp
test
jge
mov
cs
outs
add
popf
or
push
shl
in
pop
dec
ret
dec
xor
lahf
scas
(bad)
sar
push
xor
es
dec
ret
ffree
push
inc
int
push
(bad)
enter
dec
fdivrp
xor
pop
das
fnstsw
push
fsqrt
push
xor
fs
cwde
fstp
scas
pop
pushf
mov
rcr
mov
leave
xor
push
jmp
mov
xlat
and
jmp
cmp
pusha
inc
mov
enter
jge
in
and
jle
enter
cmp
and
lock
pop
stos
cmp
dec
add
mov
(bad)
loop
ret
in
(bad)
cmps
jne
(bad)
retf
pop
ins
adc
jno
xlat
sbb
xor
lahf
xor
cmp
in
dec
sar
call
scas
retf
xor
repnz
cmp
pop
xlat
je
fwait
or
cmp
out
xor
sub
jmp
mov
test
inc
scas
das
adc
sar
xchg
cmp
dec
xchg
inc
mov
shl
arpl
mov
jbe
ss
jno
mov
ins
pushf
stos
dec
mov
leave
cmovnp
xor
xor
mov
in
mov
add
sub
test
jmp
into
inc
je
xor
stc
test
movs
nop
jl
sub
outs
test
adc
in
fsubr
add
push
xchg
xlat
push
stos
cmp
adc
aad
dec
push
and
imul
mov
and
out
cmp
and
(bad)
xchg
test
fbld
lods
or
sub
out
imul
and
call
jns
mov
push
ret
pop
test
div
xor
dec
stc
pop
jne
ret
jo
pop
jo
sub
or
xchg
scas
jmp
mov
add
add
mov
enter
into
jp
js
dec
jg
ret
out
and
call
pushw
imul
sbb
sub
rol
or
fimul
stos
mov
add
jg
inc
mov
leave
xchg
dec
xor
inc
scas
aad
jmp
cmp
lahf
mov
imul
cmps
mov
inc
inc
cwde
add
movs
pop
push
hlt
pop
push
lods
push
mov
fdivp
and
mov
push
or
push
jno
shr
cmp
cld
fdivrp
inc
fsub
pusha
aas
es
add
adc
inc
outs
sub
and
mov
mov
dec
adc
push
xor
fiadd
lock
or
cmp
fdivrp
sbb
mov
mov
xchg
fcomp
in
push
push
inc
retf
jns
sub
(bad)
aas
pop
nop
pusha
stc
enter
lods
sub
mov
mov
call
in
(bad)
test
test
sub
nop
jb
(bad)
shl
enter
jno
pop
jne
movs
outs
inc
stos
ret
lock
and
dec
inc
adc
(bad)
mov
fsubp
mov
push
and
(bad)
fisttp
pop
out
mov
sub
xchg
lock
jge
cmps
xor
dec
jg
dec
inc
or
mov
add
pushf
in
pop
and
stos
shl
ret
push
in
out
inc
mov
push
sub
fnstsw
xor
mov
xchg
loopne
addr16
aaa
pop
movs
or
jl
mov
push
cmp
xchg
xchg
mov
sub
ret
(bad)
mov
add
stos
push
xchg
sub
inc
jns
test
cdq
pop
call
(bad)
test
sub
movs
in
and
clc
xor
dec
lahf
mov
pop
test
jno
outs
pop
dec
call
mov
sub
movs
ror
lea
outs
mov
add
push
push
mov
mov
mov
(bad)
sub
sbb
cmps
sbb
mov
add
ins
inc
(bad)
sub
std
adc
repnz
cmps
xor
cmp
fwait
ins
mov
mov
jl
inc
stos
pop
loop
(bad)
mov
and
sbb
pop
dec
xchg
popf
fld
push
int
mov
mov
sbb
sub
jae
xchg
popa
or
sub
mov
mov
aam
sub
and
imul
push
xor
stos
xchg
or
or
push
adc
xlat
inc
jle
data16
pop
xchg
retf
cs
mov
push
or
mov
icebp
jbe
fs
mov
xchg
test
pop
ss
out
fmul
sub
call
xlat
sub
add
cmp
cld
push
jne
mov
mov
or
xchg
mov
xchg
ds
outs
enter
pop
dec
jns
and
pop
xchg
inc
dec
mov
in
pusha
fld
mov
adc
push
aam
xchg
cmps
out
lds
mov
paddusb
call
aaa
std
scas
lahf
cmc
dec
(bad)
pop
inc
je
add
(bad)
imul
mov
shl
nop
mov
sub
adc
xor
lods
nop
fidivr
icebp
cmp
adc
mov
jns
and
das
lods
repz
mov
push
inc
jmp
add
mov
sahf
fist
(bad)
cs
iret
xlat
push
mov
add
movs
xor
push
mov
loope
or
fdivr
aas
xchg
xchg
cwde
inc
jne
push
stc
jnp
ret
pop
outs
mov
test
mov
xor
push
inc
sbb
mov
das
int3
or
fimul
jmp
std
mov
mov
push
sbb
adc
ret
aad
or
sub
adc
cmp
sub
lock
jg
pop
sub
jno
scas
addr16
cmp
pop
and
pop
mov
in
rcr
and
in
dec
fcomp
clc
and
xchg
or
out
daa
aaa
push
dec
imul
out
test
cmp
sar
leave
test
ss
push
mov
dec
test
dec
ins
dec
mov
jmp
dec
or
sub
push
cwde
pusha
push
lods
in
mov
pop
xor
pop
xor
stos
rcr
mov
mov
add
push
mov
in
pop
rep
sub
inc
leave
je
inc
mov
cli
shl
cmp
(bad)
sti
mov
lods
ds
dec
movs
mov
cwde
out
push
dec
in
mov
sub
mov
mov
arpl
shl
jle
out
sub
sbb
das
mov
test
jo
inc
push
sub
(bad)
seta
mov
dec
sbb
mov
clc
ret
(bad)
rcr
scas
hlt
test
iret
inc
dec
sub
xor
xchg
nop
or
or
adc
mov
or
ret
dec
out
mov
mov
sbb
push
cmp
sub
cmps
pop
mov
out
sub
retf
js
push
mov
ret
pop
push
push
xor
mov
xor
fist
enter
dec
jle
pop
xchg
jmp
pop
nop
ds
and
jl
iret
mov
xor
mov
addr16
sub
js
enter
cmps
mov
and
xor
test
ja
int
or
mov
xchg
test
pop
fnstenv
bound
jne
cmp
out
jns
xlat
mov
xor
popf
popf
jne
jnp
mov
out
push
sub
lods
enter
in
pop
xor
add
sbb
in
sub
cmps
(bad)
sti
nop
daa
mov
mov
jle
lock
adc
cwde
outs
adc
pop
ja
dec
cmp
pop
loopne
loop
sub
adc
movs
mov
ror
stos
lahf
xor
movs
call
data16
and
popf
push
les
jns
pop
jb
ss
call
ja
sub
xlat
xchg
call
inc
ins
sub
cmp
cmp
push
(bad)
pop
in
xchg
clc
mov
(bad)
cmc
mov
stc
adc
repnz
cmps
(bad)
aas
sub
or
pop
and
stos
lea
mov
cwde
jae
sti
lea
ss
loopne
ins
ins
fidivr
in
mov
stc
loope
mov
sub
dec
call
or
pusha
push
aas
push
loopne
or
fstp
add
and
adc
sub
cmps
aaa
das
jp
pop
sbb
pop
mov
sbb
lock
cmp
xor
sub
xor
aaa
(bad)
fisubr
je
sbb
out
imul
mov
loop
adc
retf
stc
cwde
jb
scas
lds
js
popa
idiv
adc
mov
push
mov
out
xor
dec
adc
jmp
and
adc
arpl
aad
pushf
mov
dec
loop
add
push
push
mov
gs
add
mov
in
retf
lea
mov
into
aas
jmp
and
pop
(bad)
inc
in
and
ins
pop
popa
jae
push
xchg
cmp
int3
daa
push
(bad)
aas
retf
pop
xchg
cmp
pop
cmps
push
aaa
mov
stos
mov
js
and
shr
cmps
fwait
lahf
push
sbb
lock
scas
(bad)
push
out
out
push
pop
jo
or
(bad)
push
jo
stos
cmps
adc
mov
movs
pop
out
or
jo
shl
(bad)
mov
cdq
clc
aam
dec
cmp
loop
jle
(bad)
clc
push
xor
hlt
std
ret
xchg
aas
int3
lods
fidivr
sahf
inc
mov
mov
add
out
pop
push
leave
and
jmp
xchg
xchg
leave
or
mov
jle
inc
pop
push
scas
dec
xor
cdq
outs
dec
sti
(bad)
pop
enter
sub
dec
or
(bad)
mov
xor
push
mov
lds
pshufw
lods
icebp
jp
mov
add
pop
cmp
push
add
icebp
or
(bad)
pop
and
cmp
popa
loope
sub
cmp
pop
fwait
lods
cwde
mov
cli
lds
lods
mov
call
pop
push
lock
rol
or
es
mov
shl
sti
or
fdivrp
mov
adc
sbb
ret
fadd
pushf
in
add
mov
jmp
pop
or
jle
push
push
xor
adc
fisub
jg
mov
sub
out
ss
lods
test
inc
dec
lods
(bad)
cmp
pop
pop
test
xchg
loopne
rcl
repnz
test
mov
mov
aam
sbb
mov
retf
adc
mov
dec
inc
jecxz
out
jns
lods
mov
mov
pop
mov
cmp
push
xor
mov
mov
pop
pop
add
test
dec
pop
pop
ret
cmps
jo
mov
xchg
in
gs
jmp
(bad)
mov
mov
push
pop
mov
mov
mov
jmp
out
sub
stc
jbe
mov
xchg
mov
sub
jecxz
lds
jecxz
lods
sub
out
scas
nop
jbe
je
aam
cmps
lea
xchg
in
inc
push
dec
movs
test
gs
pop
lds
push
hlt
les
nop
cmp
push
dec
and
sbb
adc
retf
push
cld
xchg
sub
inc
pop
jp
(bad)
jecxz
into
sub
mov
mov
mov
jns
std
outs
sahf
inc
or
push
aam
or
ror
mov
(bad)
stc
dec
mov
sub
scas
mov
xor
adc
xor
movs
pop
aaa
je
aaa
pop
lds
call
pop
push
cld
in
push
and
inc
mov
mov
push
sub
(bad)
dec
stc
xor
and
test
mov
mov
dec
dec
push
cmp
adc
call
shr
jne
jecxz
shl
cmps
imul
dec
ss
sub
push
dec
shl
or
aad
mov
push
xchg
call
push
mov
cmc
inc
xchg
inc
in
fcmovbe
bound
push
jae
inc
mov
xor
xchg
fwait
loope
dec
mov
and
js
daa
add
dec
sub
jmp
jo
repnz
mov
in
mov
loope
call
popf
loope
push
test
add
test
pop
call
jb
fisub
xor
(bad)
jmp
and
mov
ret
out
and
mov
lods
test
jnp
icebp
push
jne
add
push
pop
xchg
mov
iret
sbb
xor
iret
or
loop
mov
and
xchg
lea
popf
add
push
inc
push
pop
or
adc
pop
mov
inc
mov
jle
inc
dec
dec
outs
loop
and
mov
push
cmp
mov
cli
mov
pop
cmp
cmp
daa
inc
xor
int3
shl
inc
sti
stc
sub
retf
adc
mov
sub
push
mov
jge
sbb
push
inc
and
push
xor
icebp
aas
xchg
adc
lds
dec
mov
or
jl
fcom
dec
pop
dec
pop
loop
lds
imul
cmp
cmp
pusha
sbb
sub
dec
or
dec
(bad)
call
sbb
imul
add
popf
pusha
mov
popf
dec
out
addr16
je
jl
jge
add
jno
cmp
pop
sub
xchg
xlat
inc
xchg
add
popa
xchg
mov
repnz
hlt
stos
xor
int
sbb
add
ins
call
add
cmp
aaa
aad
inc
(bad)
mov
sbb
lock
or
mul
xor
leave
jns
nop
fdivp
or
call
out
fwait
inc
(bad)
jle
sbb
pop
movs
stc
inc
movs
mov
dec
pop
popf
sbb
fadd
xor
mov
neg
mov
mov
(bad)
xor
out
and
test
ds
cli
cmp
mov
pop
test
add
mov
pushf
sti
mov
push
pop
mov
lods
in
mov
js
pop
xchg
sbb
imul
icebp
(bad)
mov
ja
lds
and
xchg
xchg
dec
push
repnz
scas
outs
test
bound
xor
popf
pop
jecxz
push
mov
fs
(bad)
jno
std
jp
iret
fsubr
mov
push
xchg
adc
shl
nop
es
cmc
fwait
jae
jmp
rcl
pusha
je
std
push
stos
sbb
push
sar
jl
fstp
dec
das
xchg
outs
mov
stos
imul
loop
pop
jl
repz
dec
jl
jecxz
enter
pminsw
fidiv
ds
mov
jb
lods
gs
call
out
mov
mov
adc
gs
sub
cmp
inc
sbb
dec
jecxz
cmp
add
jle
in
call
push
push
ror
adc
hlt
fwait
pop
push
xchg
mov
leave
jnp
dec
(bad)
addr16
and
sbb
scas
fnsave
pop
imul
rcl
xor
cmp
not
ins
into
call
mov
aas
inc
xlat
imul
adc
xchg
leave
fcomp
rcr
dec
fldlg2
stos
or
add
dec
xor
cmp
xchg
mov
dec
jne
mov
push
cmp
xchg
std
add
cli
add
mov
or
dec
pop
pop
(bad)
shl
sar
rcl
sbb
lock
mov
inc
test
mov
xchg
mov
add
test
out
mov
lods
retf
nop
push
ss
(bad)
cmps
and
dec
ret
arpl
neg
inc
and
push
lods
pop
mov
xchg
pop
xchg
movs
enter
pop
(bad)
loopne
pop
in
xor
xlat
sahf
push
add
and
xor
not
fs
mov
ficomp
pushf
ins
mov
gs
stc
mov
js
adc
inc
aaa
jmp
inc
mov
and
imul
je
jp
jno
sbb
mov
jnp
mov
inc
loop
pop
scas
cli
push
retf
icebp
push
and
scas
sti
sub
and
imul
fs
or
lds
pushf
rcr
dec
xchg
jb
mov
test
or
cmp
sub
adc
jno
push
pushf
xlat
fld
pusha
jg
fiadd
test
xchg
lds
jae
pop
fsub
adc
int
jmp
xchg
scas
xor
add
jecxz
in
pop
pop
int3
pop
dec
and
stos
repnz
mov
adc
(bad)
lds
inc
(bad)
xchg
ss
dec
scas
hlt
(bad)
retf
lds
add
and
add
sbb
mov
data16
or
mov
in
stos
hlt
mov
mov
inc
movs
hlt
arpl
fst
aaa
gs
test
jp
push
ins
push
ja
sbb
test
jge
retf
lock
push
inc
stos
jp
dec
inc
(bad)
out
outs
nop
mov
fst
in
fwait
xor
jmp
pop
mov
inc
mov
jns
adc
inc
jmp
rol
dec
outs
mov
push
cmp
mov
jb
cld
outs
scas
push
mov
fild
mov
stc
push
jp
jnp
push
jne
fmul
pop
adc
xchg
rcl
retf
cmp
mov
cmps
fisttp
jae
iret
sti
add
dec
adc
test
daa
or
push
enter
int3
rcl
mov
ds
cmp
and
mov
ja
fmulp
popa
in
adc
fwait
jge
aaa
repnz
ins
in
push
dec
int
test
sub
fs
stos
adc
mov
add
cdq
sbb
cmps
and
loope
jnp
jns
(bad)
das
(bad)
in
test
add
and
scas
popf
jl
aam
mov
ss
stos
jge
lea
xchg
clc
inc
sub
cmc
pop
dec
dec
icebp
icebp
dec
cmp
dec
jmp
mov
jg
scas
out
pop
call
push
push
add
dec
aam
popa
and
stc
pushf
mov
fstp
call
ja
ret
out
inc
xlat
mov
sbb
xchg
stos
jbe
cmp
dec
fisttp
and
lods
int3
dec
iret
jnp
sbb
sbb
xchg
push
lahf
push
sbb
pop
mov
rcl
mov
add
sub
test
sbb
test
xchg
pop
addr16
fsub
popf
jmp
in
adc
fidiv
pop
clc
dec
(bad)
mov
je
or
sbb
pop
pop
movs
cmp
movups
dec
bound
loopne
std
xlat
mov
ins
cdq
out
out
test
dec
adc
or
cli
add
push
test
push
xor
data16
outs
push
mov
scas
shl
shl
test
loopne
bound
push
popa
cmp
push
(bad)
aas
lea
stos
inc
repnz
mov
pop
test
xlat
mov
xchg
out
shr
scas
sbb
pop
fidiv
(bad)
cld
add
mov
data16
and
mov
adc
mov
xor
jle
mov
dec
dec
cli
movs
shr
sbb
dec
cmps
adc
fcom
and
pop
inc
cmp
ret
jnp
pop
adc
push
xchg
popa
add
jns
sub
xchg
jle
std
xor
jmp
cmp
xor
dec
mov
push
test
dec
pop
xor
mov
outs
mov
mov
das
inc
fisttp
in
(bad)
cli
push
xchg
aam
xor
pop
jmp
and
xchg
xchg
cld
xor
adc
mov
cli
jne
push
inc
pop
fwait
or
push
rcr
xor
dec
mov
ror
fsubr
mov
inc
inc
es
xor
jp
movs
mov
push
rcr
movs
sbb
divps
mov
mov
retf
pop
cmps
repnz
repnz
xor
test
mov
fs
push
(bad)
inc
fsub
add
fmul
xor
pop
push
xor
lahf
test
dec
inc
jl
fwait
cld
(bad)
and
cmp
dec
rcr
cmp
push
and
cmp
jle
cmps
jno
push
push
in
or
jmp
bound
lock
jecxz
mov
cmp
mov
cmps
call
and
pop
mov
dec
cmp
sar
pop
sub
push
fwait
xchg
push
xchg
and
add
dec
scas
jle
inc
pop
and
mov
push
pusha
jmp
ins
dec
pop
pop
xor
jmp
jl
fld
mov
cmps
call
rcr
and
dec
arpl
xchg
call
adc
and
enter
retf
sub
fisttp
cmp
hlt
mov
jmp
mov
mov
sub
scas
dec
in
je
sub
adc
inc
test
out
repz
rol
push
(bad)
ss
hlt
fwait
inc
inc
add
ret
pop
pop
je
sbb
jmp
push
jg
in
rcr
xor
add
cdq
dec
stos
dec
cmp
icebp
cs
test
icebp
dec
add
add
sub
or
(bad)
dec
sbb
xchg
adc
jbe
dec
out
scas
xchg
xchg
add
adc
cmp
push
fisttp
das
xchg
test
jle
sub
and
in
iret
shr
mov
add
mov
jo
dec
inc
mov
fidiv
xor
mov
xor
rcl
gs
push
imul
scas
aad
cmp
mov
mov
xlat
xchg
adc
sbb
add
xor
or
push
jmp
or
push
pop
jae
fs
mov
jge
mov
pop
lock
mov
mov
jo
fdivr
pcmpeqd
add
into
sbb
jae
int
in
mov
(bad)
xchg
dec
ror
gs
jge
xor
enter
imul
and
push
nop
jo
call
sbb
imul
xlat
and
shl
mov
retf
jmp
stos
xchg
add
add
sub
and
in
jo
jge
outs
jge
xchg
pop
std
push
add
mov
xchg
or
push
cmc
push
pop
push
icebp
mov
(bad)
jnp
jecxz
fdivr
loopne
sub
ja
lock
ror
rcr
lea
ins
add
cli
push
jmp
adc
out
test
and
jecxz
mov
inc
xchg
and
xchg
mov
imul
sub
fistp
xchg
and
mov
adc
jge
lods
sbb
jecxz
cmp
mov
xor
jle
cld
scas
call
push
enter
mov
in
sub
(bad)
lods
and
jle
cwde
(bad)
mov
das
sti
lock
adc
out
cwde
scas
inc
inc
jle
mov
xchg
aad
sbb
jno
sbb
jbe
sub
or
add
dec
and
fcom
adc
cmps
sub
push
loopne
inc
mov
inc
daa
mov
dec
dec
xlat
aaa
inc
cmps
mov
test
jnp
lds
mov
xchg
ins
push
jbe
or
mov
sti
aad
retf
dec
xchg
or
xchg
cdq
inc
sub
or
adc
in
and
bound
idiv
xchg
movs
pushf
dec
xchg
call
aaa
retf
aaa
sbb
or
fidivr
pop
fsubp
inc
sub
popa
mov
lods
iret
add
cmps
jp
mov
cmp
into
dec
mov
out
mov
sub
pushf
into
xchg
jle
je
mov
lods
shl
(bad)
mov
shl
pop
inc
fs
ret
add
pop
mov
js
and
jns
xlat
rcr
sub
aam
jmp
outs
cmps
imul
mov
inc
dec
icebp
or
sub
outs
and
ret
jae
(bad)
hlt
loope
jle
adc
cli
out
pop
pop
and
mov
push
and
ror
jl
call
mov
loope
sub
mov
push
pop
movs
xchg
lods
dec
lods
scas
adc
popf
rcl
xor
stos
xchg
cwde
lea
les
retf
add
sbb
inc
(bad)
shr
aam
xchg
leave
adc
rcr
loop
dec
and
mov
(bad)
dec
sbb
sahf
aam
mov
xchg
cld
cmps
pop
add
lar
fcomp
nop
ror
jne
(bad)
push
test
jnp
int3
pop
mov
data16
pop
push
retw
les
call
mov
test
sub
les
cmp
jecxz
sahf
arpl
mov
sti
int3
sbb
lahf
test
je
add
mov
inc
rcr
inc
repnz
cmp
adc
lods
xor
stos
or
fwait
pop
std
dec
sub
pusha
add
movs
enter
push
push
or
dec
shr
adc
pop
adc
dec
mov
repz
mov
jnp
jg
mov
sub
add
lods
sub
addr16
adc
aaa
xchg
mov
jge
cmc
mov
mov
je
dec
and
mov
inc
mov
cwde
clc
push
jmp
inc
out
outs
mov
mov
jo
mov
adc
ja
pop
cmp
es
das
ins
xor
and
js
xor
call
jl
sti
out
fwait
outs
pop
fisubr
jne
in
sub
mov
les
(bad)
jne
pop
mov
or
mov
aam
sbb
fbstp
outs
mov
push
shl
stc
push
fadd
sbb
xor
enter
xchg
or
cmp
imul
mov
mov
and
in
adc
pusha
das
fst
adc
xor
push
sbb
pop
and
loop
mov
enter
out
inc
dec
or
retf
popf
retf
arpl
lds
jmp
out
mov
add
(bad)
xor
pop
pop
xchg
rcr
pop
jl
and
(bad)
xchg
fwait
sub
imul
mov
or
dec
into
fld
sub
sahf
stc
(bad)
repnz
mov
clc
cdq
push
dec
inc
xor
mov
push
pop
sbb
mov
mov
inc
mov
movs
xchg
pop
cmp
mov
adc
mov
mov
jmp
mov
aas
ja
sbb
pop
xchg
sub
es
in
(bad)
jecxz
out
dec
pop
and
or
cmp
or
out
mov
lea
aad
add
mov
les
test
(bad)
mov
das
out
lds
cwde
xchg
xchg
inc
adc
mov
dec
popf
leave
daa
cmc
push
pop
sahf
mov
and
mov
inc
std
mov
adc
inc
adc
call
dec
loope
and
cmp
cmps
popf
and
sub
push
inc
mov
cbw
in
mov
and
adc
cmp
pushf
mov
xor
adc
je
loopne
das
inc
shr
mov
cmp
push
sub
and
or
pop
mov
cli
(bad)
inc
(bad)
push
aas
dec
pop
add
rcl
pusha
icebp
(bad)
mov
call
or
pop
push
shr
imul
jae
jg
int
popf
sbb
in
mov
nop
fwait
xchg
imul
loop
fild
popf
jecxz
leave
xchg
rcr
leave
out
fdiv
enter
sub
adc
test
and
dec
popa
sub
mov
fidivr
dec
inc
cmp
movs
hlt
xor
rcr
cmc
and
test
js
fwait
dec
cmp
js
adc
jae
repnz
mov
dec
cmp
sbb
gs
aam
sub
out
sub
xor
(bad)
cmp
jle
movs
sti
pop
int
retf
sub
push
push
and
mov
xchg
sbb
in
cmp
push
jp
(bad)
lods
clc
jne
ret
mov
inc
cwde
loopne
add
pusha
jnp
and
or
sahf
adc
shl
popa
loop
test
ds
sub
(bad)
fld
push
inc
jmp
scas
fwait
push
cwd
shl
xchg
and
xor
mov
or
popa
clc
mov
and
frstor
pusha
inc
inc
es
pop
(bad)
jae
sbb
jb
shl
xchg
xor
les
mov
xlat
gs
test
jno
aas
push
pop
cld
sub
out
push
mov
jg
add
pop
(bad)
xchg
xor
int
or
and
test
push
fimul
data16
int
xor
sbb
fcomp
cmp
xchg
inc
xchg
movs
daa
jne
outs
xor
not
jae
xor
loope
ror
call
mov
and
push
dec
mov
and
in
xchg
je
or
inc
aaa
aas
lea
xchg
adc
pop
mov
adc
xor
or
or
jge
dec
jg
lock
mov
pusha
loopne
add
outs
sbb
mov
popa
ins
xchg
jg
cmp
es
xor
sub
pop
test
xor
rcr
ja
xchg
lods
pushf
sub
std
mov
mov
mov
fst
out
fist
pop
mov
sbb
dec
repz
out
ficom
outs
test
mov
sub
ins
sbb
(bad)
jl
cwde
dec
repz
inc
stc
adc
inc
sub
pop
sbb
or
lds
cs
sar
das
sbb
jo
and
pop
adc
aad
xchg
ss
xor
xchg
cmp
mov
in
cmps
pushw
or
or
test
mov
jecxz
in
(bad)
ror
aam
push
cmc
mov
mov
hlt
outs
xchg
pop
popf
pop
mov
xor
and
jb
pop
mov
mov
mov
test
scas
(bad)
enter
xchg
pop
icebp
jno
les
push
retf
jp
fimul
out
xchg
jbe
ret
jae
xchg
addr16
sbb
clc
push
pop
jle
loopne
popa
(bad)
mov
daa
popa
dec
or
or
push
call
and
jle
sub
add
leave
fdivp
scas
mov
sbb
jmp
xlat
dec
mov
in
push
mov
scas
jo
sub
out
stc
mov
out
mov
sbb
addr16
neg
jbe
jne
rcl
inc
xchg
push
push
adc
sbb
imul
inc
test
sbb
enter
jle
push
sub
cvtdq2ps
or
fsubr
xor
jne
mov
cwde
icebp
bswap
inc
in
or
push
jl
shr
sub
push
or
sub
pop
(bad)
jb
bound
mov
and
addr16
or
mov
shl
jo
jecxz
dec
vcomisd
xchg
pop
repz
mov
mov
or
iret
dec
mov
shr
jne
cld
xchg
push
outs
push
je
dec
enter
dec
mov
mov
inc
bswap
fsin
pushf
cmc
lahf
jnp
push
lahf
ins
inc
retf
or
nop
neg
ds
xchg
iret
inc
push
cwde
inc
dec
into
mov
or
mov
loope
jns
sub
sub
and
jmp
cli
jle
push
push
jmp
out
jbe
imul
iret
aaa
mov
mov
dec
loopne
outs
jg
les
push
and
adc
adc
imul
fcomp
cli
imul
and
push
mov
push
and
xor
gs
mov
push
jbe
or
mov
xchg
inc
and
jae
test
and
mov
out
push
repz
dec
(bad)
loop
ret
sbb
or
mov
imul
loop
fld
or
sbb
xlat
test
push
test
(bad)
dec
outs
cmp
repnz
sar
pop
(bad)
jmp
sbb
add
test
add
sub
mov
jnp
push
jno
mov
push
retf
cmc
add
ret
data16
and
sbb
(bad)
js
jecxz
xchg
inc
or
and
or
sub
adc
cs
fmul
aas
ja
push
lock
pusha
pop
jnp
aaa
mov
adc
sub
push
cld
xchg
popa
mov
pop
push
pop
clc
loop
xchg
lea
ins
pusha
cmps
aad
mov
inc
rcl
scas
or
sub
iret
call
ret
xor
mov
or
add
sub
push
dec
xor
in
repnz
les
(bad)
popf
mov
ds
cmp
or
add
retf
and
addr16
mov
mov
push
addr16
gs
xchg
in
mov
mov
cdq
es
mov
jg
leave
cs
inc
out
gs
push
bound
mov
out
adc
mov
das
xor
cmp
js
ins
int3
or
gs
arpl
add
or
sub
mov
ret
neg
mov
jnp
pop
adc
mov
in
cmps
push
bswap
xchg
or
jmp
scas
aas
or
push
push
retf
das
ret
dec
xchg
shl
mov
fs
dec
retf
pop
pop
outs
mov
adc
sbb
sar
or
pop
push
cmp
and
dec
jmp
pop
(bad)
add
mov
xor
out
adc
fiadd
cmp
bound
test
data16
mov
pop
fimul
lods
cmp
or
outs
dec
je
cwde
dec
gs
jns
inc
ins
sub
cmp
in
repz
loopne
jp
xchg
sbb
cmp
cli
adc
ret
ja
pushf
leave
adc
mov
lock
popfw
xchg
mov
ds
rcl
add
mov
test
cmp
idiv
inc
inc
leave
xchg
sbb
jne
push
test
into
and
sbb
in
mov
push
xchg
clc
xchg
out
aad
movs
test
dec
pushw
inc
jae
push
sub
or
cmp
jbe
mov
mov
das
jmp
outs
cmc
cmps
loop
imul
sbb
mov
ja
pop
scas
mov
lods
sbb
sub
cmc
bound
stos
js
repnz
gs
retf
fisub
(bad)
sahf
mov
enter
xchg
dec
pop
pinsrw
rcr
pop
push
in
out
sbb
jne
cmps
(bad)
jg
jns
les
push
pop
mov
pop
scas
fdivr
pop
scas
sbb
rol
inc
scas
or
test
aas
into
ins
sub
and
cmp
xchg
mov
mov
xchg
pop
or
shr
leave
jmp
mov
sbb
pop
fcomi
(bad)
in
and
jecxz
mov
inc
aad
rcr
and
sub
jecxz
pop
rcr
aam
adc
hlt
xor
jne
pop
imul
pusha
push
cmp
add
jmp
nop
or
jnp
call
mov
and
and
and
repz
cmp
mov
sub
xor
nop
leave
mov
xor
inc
dec
es
dec
(bad)
daa
mov
and
inc
repz
push
les
retf
mov
ins
test
jmp
jl
jbe
dec
inc
pop
mov
cs
add
loop
adc
and
mov
pop
in
jo
jl
jbe
aas
sub
adc
sar
jmp
aad
push
pop
adc
push
addr16
sbb
xor
push
div
lds
retf
outs
retf
jge
and
outs
pop
pop
fisttp
mov
mov
xchg
push
and
xchg
pop
aam
add
int
fcomp
pushf
sahf
(bad)
mov
stos
inc
mov
pop
dec
mov
out
sahf
add
and
mov
movs
in
cdq
test
and
ret
ret
sahf
fisttp
lea
and
dec
(bad)
and
pop
dec
cmps
push
ja
mov
add
scas
(bad)
aam
shl
sbb
mov
mov
stos
jmp
jnp
mov
dec
dec
dec
pop
int
rcl
outs
push
cmp
cli
push
or
dec
pop
xlat
push
cmc
xchg
movs
scas
or
aaa
imul
into
pop
ins
into
in
jae
mov
push
mov
hlt
jmp
adc
rol
ds
cwde
cmp
shr
xor
push
pop
mov
outs
pop
xchg
mov
xor
xchg
out
jle
shr
cmp
mov
xor
sub
sub
cmp
jne
je
dec
sub
pop
sub
aaa
dec
inc
out
and
pop
mov
out
hlt
cdq
jnp
mov
(bad)
mov
outs
or
adc
add
or
aaa
push
sub
nop
rcl
nop
xor
and
add
nop
adc
add
sub
sub
mov
das
push
out
in
fmul
jg
leave
cdq
ja
inc
dec
int3
fisttp
jb
push
xor
shl
jecxz
mov
inc
xor
xchg
shl
pushf
mov
sbb
jge
in
data16
push
push
jl
inc
lea
pop
stos
xor
fidiv
mov
rol
ficomp
mov
pop
popf
sahf
(bad)
aaa
add
cmp
cmp
pop
fsub
jmp
sbb
loope
push
cli
and
dec
or
lods
stos
retf
mov
dec
imul
sbb
out
arpl
or
pop
mov
(bad)
lahf
aaa
pop
test
push
xchg
and
jo
retf
add
lds
stos
data16
push
push
icebp
ins
cmp
mov
ror
rcl
add
dec
int
sub
shr
push
xor
call
add
(bad)
retf
aam
gs
cmp
out
add
mov
in
jb
std
rol
jb
jnp
les
jns
adc
sub
sbb
mov
and
mov
xor
(bad)
jo
sbb
loope
or
icebp
rcr
mov
jge
dec
add
cs
adc
scas
and
js
not
push
inc
lds
xchg
dec
jne
xchg
dec
sbb
jno
xchg
ror
aam
mov
ds
adc
cmp
int
int
daa
leave
push
pusha
mov
call
add
add
adc
mov
int3
cmovno
stc
adc
push
push
setle
mov
and
ffree
aaa
xchg
stos
pop
mov
adc
mov
sahf
call
cli
jl
push
jmp
inc
mov
jae
or
fdivr
or
rcr
jmp
les
push
xchg
push
adc
sub
test
cmp
add
inc
xchg
stos
inc
jne
hlt
xor
dec
stc
or
or
shr
mov
adc
dec
sub
mov
sbb
shrd
cld
test
fisub
push
pop
or
cmp
shl
mov
scas
and
test
mov
stos
xchg
std
pop
lock
mov
dec
push
(bad)
lock
outs
xchg
stos
out
mov
leave
or
movs
lea
jnp
imul
cmp
push
leave
pop
inc
es
cmc
enter
mov
and
arpl
xchg
test
es
jo
retf
sbb
imul
test
ja
dec
sbb
inc
and
cld
add
push
sub
add
fst
retf
or
push
dec
fst
jno
ficom
arpl
xchg
dec
sbb
arpl
mov
mov
and
mov
int3
inc
or
stc
fwait
or
mov
dec
test
out
popf
fiadd
rol
fcom
addr16
nop
ret
xchg
int
ret
ficomp
pop
gs
jmp
sub
sbb
pushf
in
push
and
out
into
pop
push
mov
sbb
adc
mov
cmps
mov
fstp
xor
cmp
hlt
add
addr16
cdq
pop
aad
in
dec
loope
call
movs
mov
pop
lea
inc
stos
or
jbe
pop
in
inc
popa
or
add
push
cdq
mov
push
movs
mov
popf
jp
pop
inc
dec
dec
and
sbb
jb
mov
mov
loopne
sbb
push
ret
sar
(bad)
adc
xchg
imul
push
arpl
adc
je
mov
cmps
test
add
sub
dec
add
mov
neg
test
sbb
idiv
xchg
sbb
sub
ret
fwait
repnz
dec
ins
test
fs
mov
jg
pop
sub
sub
(bad)
std
repz
adc
push
retf
sbb
mov
nop
iret
call
xlat
sub
cdq
or
stos
fdivr
je
mov
and
data16
mov
or
sti
fcom
fldcw
push
or
mov
shl
and
es
or
das
sub
sbb
movs
inc
jo
add
xchg
pushf
cmc
pop
(bad)
adc
repz
xchg
ds
pop
imul
mov
rcr
(bad)
cmp
cmp
jmp
les
shl
mov
pop
(bad)
cmp
je
jnp
call
outs
pop
scas
pop
sbb
inc
dec
scas
arpl
data16
or
movs
data16
mov
sbb
inc
and
pop
call
rcl
dec
xor
push
jb
push
aad
outs
jg
cs
pushf
mov
inc
ds
mov
dec
imul
cmp
scas
outs
(bad)
fcmove
pop
sahf
and
dec
leave
bound
dec
adc
(bad)
loope
sub
lea
dec
add
das
sub
addr16
sub
xchg
mov
sub
xor
pop
stos
mov
repz
sub
pop
pushf
pusha
gs
pop
xor
fld
dec
mov
add
xor
jne
fnstsw
iret
xor
das
(bad)
aad
(bad)
lods
je
in
lea
dec
ins
pop
sub
adc
fidivr
cmp
lods
(bad)
sti
dec
mov
addr16
shl
test
mov
jg
or
adc
inc
dec
mov
pop
dec
mov
ins
and
clc
sbb
adc
in
rcr
mov
mov
or
mov
fstp
adc
aas
fimul
add
push
lds
mov
mov
pop
xchg
sbb
cld
iret
push
mov
fnsave
inc
xchg
inc
and
inc
into
movs
js
or
inc
inc
stc
xor
adc
jno
inc
dec
fld
inc
(bad)
cdq
daa
in
or
jle
pop
fstp
clc
push
jae
add
sbb
outs
cmp
or
mov
pop
mov
sbb
add
dec
adc
fsubr
mov
add
adc
bsr
in
mov
xchg
(bad)
or
cwde
fucomip
rol
or
(bad)
sti
mov
mov
and
mov
mov
and
dec
imul
aaa
int
sahf
mov
dec
adc
scas
sub
cwde
sbb
or
stos
jg
sbb
fisubr
mov
mov
jae
sub
inc
adc
and
ins
aam
mov
stos
and
lds
imul
std
inc
std
xchg
rcl
pop
sub
xchg
stc
lods
sub
icebp
(bad)
sbb
dec
mov
leave
movs
mov
lods
adc
jbe
cmp
js
mov
out
jnp
lock
(bad)
mov
out
xor
dec
add
xchg
add
jbe
je
cmp
cmp
push
mov
inc
mov
mov
ror
xchg
mov
xchg
js
push
mov
jge
push
ret
mov
mov
shl
jmp
mov
push
fs
push
or
adc
cmps
jmp
dec
xor
sti
movs
repz
pop
scas
and
cmp
mov
mov
(bad)
out
js
mov
pop
adc
icebp
xlat
and
pop
ins
test
dec
bnd
arpl
push
out
xor
mov
pop
dec
enter
inc
mov
enter
or
xor
mov
inc
xchg
or
shr
mov
or
shl
pop
inc
in
int3
fld
sbb
pop
lods
test
bswap
fbld
icebp
mov
les
jg
jno
adc
pop
cmp
pop
cwde
lods
mov
xchg
stos
push
dec
push
pop
popa
(bad)
xor
test
not
xchg
int
ins
push
jecxz
inc
dec
xor
cs
inc
sub
sbb
mov
sub
add
scas
clc
sahf
(bad)
enter
add
pop
cdq
or
xor
ret
mov
out
leave
push
xchg
idiv
push
sub
mov
pop
fdiv
fwait
(bad)
push
aad
and
add
fcom
stos
mov
xor
mov
mov
test
ins
mov
pop
stos
(bad)
xor
mov
pop
fcom
mov
mov
xchg
push
repnz
int
sahf
retf
jl
fs
sbb
push
cmc
test
test
cmp
lds
(bad)
mov
test
cwde
sbb
repz
out
retf
or
cmp
das
and
dec
pop
cmp
mov
push
cmps
cwde
mov
std
jmp
xlat
mov
mov
retf
lods
mov
inc
xchg
sbb
and
addr16
aas
mov
push
movs
sahf
test
jnp
rcl
xor
dec
cmp
push
or
ret
or
fisubr
vpaddsw
xchg
push
jle
movs
aas
cs
pop
xchg
iret
mov
xchg
jecxz
push
sbb
mov
pop
sar
out
hlt
xor
mov
cmp
sbb
rcr
mov
ja
add
sar
pop
fild
push
jl
jl
into
mov
das
and
cld
xchg
shl
sub
cmp
aaa
test
out
sbb
mov
add
jecxz
call
pop
or
mov
mov
inc
adc
call
div
dec
dec
cmps
daa
(bad)
and
fisub
push
pop
xchg
das
sbb
pop
shr
mov
scas
adc
add
je
push
push
aam
call
arpl
dec
dec
mov
pusha
pushf
lods
push
jmp
cwde
ret
push
xchg
and
sbb
cmp
std
jl
ret
and
adc
mov
test
ds
adc
shl
popa
sbb
mov
mul
and
cmps
xchg
movs
push
push
test
fcomp
pop
pop
arpl
push
mov
or
xchg
ja
mov
adc
pop
arpl
lea
push
mov
push
mov
stc
ficomp
adc
jmp
add
fstp
scas
sahf
ins
dec
jmp
or
scas
enter
sbb
fild
retf
adc
(bad)
dec
adc
(bad)
xchg
outs
jae
lods
push
jecxz
push
sbb
ds
test
jmp
test
fsub
or
mov
ins
je
outs
loope
shl
mov
aad
sbb
loopne
in
mov
div
fidivr
call
loope
xchg
dec
ret
cdq
fmul
jb
sub
push
imul
mov
mov
pop
mov
int
movs
xchg
dec
inc
jg
int
and
pop
adc
push
addr16
out
pop
xchg
xor
lods
push
add
dec
sbb
pop
mov
ja
cmp
not
retf
(bad)
(bad)
fld
bextr
mov
test
sahf
push
xchg
mov
mov
aaa
aaa
xor
and
or
sub
mov
shl
cmp
sbb
shl
jmp
mov
(bad)
push
add
ror
test
movs
loop
retf
mov
push
outs
(bad)
clc
sbb
mov
mov
adc
mov
cmp
mov
push
inc
stc
jnp
ret
jo
lahf
mov
enter
jns
mov
jmp
fdiv
mov
and
mov
out
pop
addr16
repnz
mov
pop
pop
je
pop
jecxz
nop
mov
dec
jmp
rcl
rol
mov
clc
lods
jbe
nop
sub
mov
test
jmp
loope
daa
cmp
sbb
stos
and
xor
and
fxch
in
jge
stos
in
fisttp
cmps
add
out
stos
es
leave
inc
and
xor
xor
jne
pop
pop
cdq
out
push
push
inc
das
or
fnstsw
cld
mov
std
popf
repz
cmp
rcr
dec
fcomp
lock
ret
mov
(bad)
iret
test
push
dec
out
mov
ja
loop
mov
mov
imul
jne
push
inc
fwait
sbb
mov
aam
or
add
mov
enter
xor
leave
icebp
xor
aam
in
icebp
pop
jle
sbb
mov
iret
push
inc
jmp
sub
mov
cmp
int3
mov
js
push
jge
jp
aad
push
popf
cwde
ds
mov
shr
mov
inc
daa
xchg
adc
(bad)
loopne
pop
jge
fild
mov
mov
in
loop
sub
loope
inc
call
mov
sub
fnsave
fs
ror
cwde
fistp
jp
adc
into
jmp
sub
lock
or
pop
inc
ins
cdq
movs
add
cmc
sub
les
and
sub
imul
pop
inc
out
int
ficom
je
outs
mov
ds
push
and
dec
shl
cmp
inc
retf
inc
xor
push
retf
sub
mov
push
out
movs
cmp
into
cld
pop
cwde
xor
jge
mov
inc
add
mov
aam
xchg
ud2
pop
sub
jecxz
fsubr
out
rol
shl
dec
xor
jmp
pop
and
push
rcr
or
enter
pop
xchg
sar
jmp
(bad)
imul
pop
test
(bad)
fs
inc
ins
push
mov
in
xor
and
adc
test
add
js
fwait
mov
xor
ror
push
into
cdq
jge
adc
mov
lahf
and
dec
mov
xchg
mov
xchg
mov
repnz
cmc
imul
mov
enter
sar
and
fldz
imul
inc
cmp
(bad)
mov
out
sbb
push
push
xchg
lods
mov
sub
mov
cmp
sub
cs
dec
test
xor
lods
dec
gs
sbb
fs
(bad)
(bad)
jnp
mov
test
cmc
jb
mov
xlat
popa
dec
nop
pop
cmps
jns
add
add
pop
and
into
jmp
stc
into
enter
leave
jmp
xchg
mov
sbb
and
dec
fcomi
test
cmps
es
push
aas
and
adc
sbb
ror
loope
mov
(bad)
sbb
je
cld
loope
mov
push
jno
pop
jecxz
inc
jns
loopne
jp
and
mov
jmp
ins
pop
pop
aam
popa
retfw
cdq
cmp
fwait
jecxz
mov
push
loope
jmp
xor
or
(bad)
mov
aam
pop
(bad)
test
ret
imul
jmp
xlat
rcr
(bad)
loopne
add
mov
or
and
cmp
jns
and
loope
dec
pop
(bad)
fcmovbe
sbb
div
rcr
jg
mov
or
scas
stc
clc
pop
div
jo
fld
arpl
inc
and
addr16
push
mov
es
add
fdivr
test
jns
enter
mov
push
repnz
push
ja
mov
dec
push
add
jp
xor
mov
and
xchg
mov
(bad)
sti
ja
jmp
cdq
iret
icebp
imul
push
and
inc
out
mov
push
pop
mov
out
mov
scas
xor
(bad)
shl
push
ja
sbb
or
sbb
rcl
inc
es
mov
add
retf
fstp
dec
xor
test
std
push
fidiv
out
mov
mov
or
jge
mul
popa
call
jnp
dec
popa
mov
retf
jmp
out
dec
mov
and
mov
test
test
inc
psrld
int3
add
xor
or
and
fwait
inc
fist
pop
inc
jmp
das
dec
mov
mov
call
adc
jne
cmp
nop
lock
push
sbb
ins
or
shl
mov
jge
mov
stos
or
icebp
stos
aam
fsub
or
or
or
pop
mov
leave
je
es
outs
pop
mov
inc
mov
rcr
loope
fs
push
push
loopne
(bad)
sti
cmps
pop
push
(bad)
mov
pop
(bad)
push
cmp
sub
jae
lock
dec
sub
push
cdq
xchg
and
or
stc
rol
jmp
mov
imul
imul
push
jge
or
cdq
repnz
inc
scas
enter
gs
pop
cmp
scas
push
cmp
push
out
xchg
cs
and
imul
mov
into
mov
fs
pop
sub
mov
mov
or
dec
jmp
shl
mov
call
xchg
pop
mov
inc
cld
jmp
sahf
and
sbb
data16
xchg
call
push
push
fild
mov
xor
loope
add
fiadd
mov
daa
or
mov
jno
xchg
ins
sbb
pop
ret
push
test
jmp
test
xor
xchg
out
scas
fld
mov
jo
mov
xor
xor
jb
xlat
xor
(bad)
enter
in
cmps
mov
xor
out
push
mov
addr16
push
push
jo
push
sub
add
and
hlt
mov
in
mov
dec
mov
repnz
sahf
in
push
cld
mov
push
rcl
pop
rcl
lds
nop
lahf
dec
dec
jns
aam
mov
lahf
call
fistp
js
mov
fisubr
fs
jns
out
sbb
or
push
pop
add
mov
lods
outs
or
cmps
rcl
pop
or
fstp
mov
cmc
and
sub
fs
jne
fcomip
outs
or
push
cwde
ror
call
mov
pop
movs
dec
fidivr
xchg
or
adc
xor
lahf
fild
mov
add
add
jg
xchg
pop
push
into
mov
push
mov
jge
xchg
mov
dec
lds
ins
push
movs
in
hlt
push
inc
jg
dec
push
add
clc
sub
int
enter
sub
cmp
pop
add
(bad)
cmp
cld
mov
jbe
xor
jbe
fld
test
sbb
loope
pop
jbe
dec
scas
adc
in
cmps
xchg
(bad)
out
out
jmp
loopne
call
mov
scas
push
and
sub
jbe
and
test
cmp
pop
and
xor
sbb
mov
jno
xchg
xchg
int3
jl
jp
pop
inc
pop
jb
xchg
pusha
pop
mul
jge
cli
imul
xchg
jnp
mov
inc
push
mov
sar
mov
xchg
mov
push
dec
add
xchg
jge
push
psrlw
shr
pusha
bound
stos
out
repz
imul
adc
shr
mov
ret
sub
call
sbb
mov
aad
xchg
lods
mov
aad
pop
mov
stos
xchg
xor
mov
loopne
mov
dec
and
pop
pop
in
mov
repnz
(bad)
stos
(bad)
sub
push
retf
cld
(bad)
adc
shl
cld
push
iret
clc
xchg
sbb
add
push
cs
cs
push
fimul
mov
jl
outs
(bad)
retf
mov
call
sbb
pusha
xchg
std
pushf
adc
or
fwait
lahf
inc
adc
pop
ret
jae
pop
lahf
sar
fimul
ror
fldenv
sbb
punpcklbw
mov
aaa
add
call
mov
mov
lock
or
repz
je
sti
je
and
mov
xor
mov
arpl
(bad)
shl
ja
adc
test
fwait
push
xlat
gs
sub
add
loope
movs
pop
movs
fld
inc
in
sbb
cmp
push
adc
pop
add
xchg
mov
movs
inc
mov
jecxz
or
mov
addr16
mov
jl
add
jl
mov
pop
add
fisub
sti
pop
jne
or
rcr
mov
push
push
pushf
adc
add
fbld
sbb
sbb
sahf
in
push
imul
cmp
outs
adc
bnd
push
(bad)
mov
inc
aam
xor
ins
fidivr
sbb
mov
loop
adc
je
push
sub
or
push
ins
pusha
fucomi
sub
push
in
fst
push
mov
and
add
popa
aaa
pop
inc
add
xchg
jnp
xor
pop
jecxz
jns
cmp
jb
jno
rol
(bad)
mov
sbb
push
or
push
cwde
add
movs
jmp
push
cmp
push
jo
loopne
inc
add
ret
push
and
sub
out
in
jmp
pop
jae
stc
ret
ror
daa
mov
push
sbb
mov
jae
adc
pop
les
add
retf
sahf
xchg
cmp
mov
stc
jecxz
inc
jecxz
mov
clc
pop
pop
or
dec
dec
xor
ins
imul
add
mov
cmc
or
sbb
imul
push
pop
sbb
jle
mov
repnz
call
test
not
sbb
cmp
mov
std
xchg
aas
mov
and
test
or
and
xchg
xchg
and
fisttp
stos
and
add
js
push
and
xlat
dec
ftst
cld
sbb
xor
fcom
mov
sbb
in
xor
or
fnstcw
push
rcl
inc
jb
cwde
pop
in
adc
stos
xchg
out
mov
and
mov
pop
call
xchg
scas
inc
xor
mov
loop
mov
loope
test
nop
hlt
mov
mov
mov
mov
repz
inc
jmp
lds
and
dec
jp
enter
out
sbb
jbe
sub
ins
xor
add
push
cmp
(bad)
outs
xor
ficom
imul
retf
inc
ds
js
(bad)
xor
mov
(bad)
xor
and
call
pop
xor
sbb
mov
mov
iret
aad
or
movs
add
lea
mov
sti
inc
or
inc
or
stos
retf
ins
mov
mov
retf
mov
lds
adc
repnz
cmp
cmc
in
push
and
cmc
call
xor
and
push
imul
cmp
xchg
inc
sbb
sahf
or
xor
adc
or
pop
dec
int
shr
adc
mov
ret
mov
and
aad
out
cmp
clc
sbb
test
push
or
sub
aad
rcl
cdq
(bad)
retf
fisubr
test
mov
jbe
and
xchg
mov
xchg
sti
icebp
jne
sub
pop
and
les
push
jge
(bad)
fist
inc
or
inc
test
les
mov
fdivr
into
and
mov
test
push
xor
scas
mov
adc
(bad)
(bad)
and
sbb
out
mov
pop
pushf
or
out
in
sbb
inc
adc
xchg
jg
lea
cmp
pop
mov
and
pop
dec
ror
lods
popa
repnz
retf
mov
xchg
aaa
sub
adc
push
xchg
or
je
vzeroupper
sub
sub
inc
popa
sbb
jne
xor
fisub
xchg
add
add
cmp
les
lock
pop
mov
and
or
xlat
into
sahf
push
in
pop
xchg
lods
jle
sar
and
inc
jo
pop
outs
les
mov
pusha
(bad)
cmc
(bad)
or
out
cmp
adc
pop
dec
fist
ficom
cmp
cmp
jecxz
cmps
add
out
cmp
jno
push
popf
mov
lock
mov
pop
es
or
mov
repz
or
shl
movs
add
push
and
and
repnz
ins
aam
pop
clc
out
jbe
mov
mov
fstp
sbb
mov
lahf
sahf
mov
fstp
or
jl
sub
add
inc
add
loop
sbb
fwait
jg
xchg
add
das
loopne
xor
push
or
out
mov
stos
jge
adc
iret
cmps
aaa
jo
inc
loop
xchg
pop
cld
clc
xchg
ins
imul
fadd
inc
xor
movs
cld
adc
pop
dec
outs
mov
mov
dec
cs
jmp
pop
jg
icebp
adc
jno
ror
(bad)
retf
ja
jmp
shl
sbb
push
cmc
or
stos
loopne
jb
idiv
mov
aas
out
cmc
mov
push
adc
js
add
div
test
pop
scas
add
neg
xor
nop
nop
stc
(bad)
outs
(bad)
(bad)
pop
repz
push
inc
push
sbb
add
xor
adc
mov
enter
call
pop
clc
xlat
aaa
mov
mov
aas
push
arpl
add
call
loope
stos
(bad)
or
ja
pmullw
sub
push
fnsave
lea
xchg
cli
gs
mov
or
mov
fld
shl
sbb
cmp
loopne
test
xor
mov
in
test
ror
cwde
and
add
bound
in
cmps
sub
cmps
in
outs
pop
in
pop
mov
idiv
(bad)
fidivr
test
sub
xchg
mov
inc
aam
jl
(bad)
rcl
popf
sbb
in
retf
or
arpl
jl
cmp
(bad)
ss
jmp
add
push
leave
rep
inc
scas
sub
rcl
jo
sub
or
and
sub
ret
sbb
and
sbb
mov
inc
mov
and
(bad)
call
xchg
popa
sbb
jne
mov
rcl
aam
aad
and
cmp
push
movs
xor
lods
(bad)
sub
inc
push
sub
ins
add
dec
adc
mov
test
loopne
mov
scas
dec
push
loopne
mov
jmp
aad
stos
dec
in
in
scas
sar
rcl
dec
inc
repz
push
mov
lods
inc
sar
cs
xchg
mov
scas
jnp
xor
pusha
retf
loope
test
sub
inc
int
and
push
jnp
les
mov
jne
xor
cld
add
cmp
aaa
xchg
sbb
mov
xchg
ins
and
xchg
imul
sbb
movs
test
dec
jl
add
sar
jmp
sbb
and
push
jne
fnstcw
pop
sub
push
ja
push
ret
fmul
rol
das
iret
mov
and
fwait
int
pop
fiadd
into
xchg
or
neg
lahf
les
dec
pop
(bad)
(bad)
sti
out
jb
pop
cmp
sub
adc
fdivr
leave
push
fmul
sub
xchg
dec
js
stc
jmp
jno
mov
rcl
xor
test
or
sub
neg
jb
add
xor
jb
dec
sahf
lods
xchg
adc
test
addr16
int3
stos
lods
ret
push
jp
mov
mov
cmps
ret
jecxz
jmp
popf
(bad)
test
shl
adc
stos
jo
sub
or
test
xchg
mov
jl
mov
push
stos
fild
dec
and
ins
popa
int3
jno
movs
cmps
out
push
outs
inc
aam
(bad)
mov
xlat
in
push
aaa
add
popa
push
push
and
rol
(bad)
sbb
adc
jae
jo
retf
cdq
int3
fistp
lods
mov
adc
push
inc
data16
stos
push
es
jl
shr
sbb
sub
fldenv
outs
mov
out
fnstenv
mov
data16
cli
mov
pushf
das
sbb
cmp
outs
fild
xchg
push
pop
ror
hlt
test
inc
add
in
or
cmps
add
or
mov
cmp
jmp
pusha
or
sbb
cli
or
inc
pop
fild
out
push
push
leave
push
imul
fdiv
add
push
or
jo
std
mov
ret
dec
sbb
cmp
loopne
aas
stos
(bad)
xor
jle
add
fs
test
(bad)
enter
pop
sti
pop
inc
add
jmp
xlat
and
sub
test
(bad)
(bad)
inc
adc
ds
xchg
jae
js
sbb
or
cmps
mov
add
nop
outs
push
xor
pop
xchg
int3
xchg
fcmove
add
mov
pop
pop
test
sbb
repnz
and
call
xchg
dec
mov
push
test
fwait
in
xlat
inc
fcomp
lods
fstp
div
sub
popa
xchg
out
aas
loope
jl
sbb
push
sub
adc
das
sbb
push
(bad)
cmp
pop
sub
jl
mov
and
mov
pop
jb
jbe
dec
jmp
cmps
add
or
xchg
outs
sub
sub
test
push
dec
xchg
mov
mov
add
popf
dec
jno
pop
retf
mov
xchg
movs
or
mov
jmp
popa
cld
scas
cmp
stos
mov
sub
ret
and
add
lahf
cmp
add
adc
(bad)
fbld
mov
push
cli
ins
mov
adc
pop
xchg
fcomp
cmp
inc
movs
xchg
cwde
and
arpl
mov
call
inc
mov
or
cmp
xor
in
stc
xor
or
faddp
sub
loope
out
xchg
and
lds
pop
fld
inc
xor
lods
sbb
(bad)
cmc
sbb
test
inc
xor
dec
jo
jb
fwait
cli
stos
pop
(bad)
imul
fs
dec
add
sub
push
inc
push
jns
xor
pop
mov
int
outs
fs
xchg
das
nop
arpl
mov
mov
cmps
ret
xchg
ret
std
dec
cmc
and
xor
jae
sub
xor
dec
mov
jo
mov
(bad)
xlat
adc
jnp
add
loopne
push
sar
cmp
rol
(bad)
aad
xchg
loopne
cmp
(bad)
(bad)
mov
jmp
mov
scas
sti
mov
sbb
sub
retf
push
cmps
lods
and
repz
mov
inc
ret
jae
int3
pop
jae
mov
fild
xor
cmp
or
cmp
mov
dec
jnp
add
mov
stc
add
pop
out
mov
xor
nop
les
dec
inc
call
mov
popf
inc
movlps
cli
xchg
mov
pop
out
inc
jmp
mov
dec
xor
push
lock
not
cmp
adc
aaa
push
mov
cmp
(bad)
jae
sub
push
add
jecxz
and
push
and
jne
fs
scas
inc
in
inc
jno
sub
adc
mov
and
pushf
and
sub
pop
xlat
and
jge
ret
dec
pushf
cdq
jae
pop
xlat
add
adc
fadd
mov
cmp
and
pop
mov
pop
(bad)
cwde
mov
lock
in
daa
(bad)
push
inc
pop
cmp
clc
fist
repz
call
lock
mov
jbe
aam
mov
jmp
dec
leave
ret
popf
xor
pop
sub
and
sbb
lahf
out
mov
shl
aaa
adc
push
dec
xlat
shl
in
ja
xchg
(bad)
mov
push
fist
sti
call
xor
pop
inc
push
leave
outs
ja
push
mov
daa
stos
fcom
jp
stos
rcl
dec
xor
jnp
cmps
cmc
xchg
data16
sbb
int3
sub
dec
mov
mov
std
fwait
std
mov
dec
jmp
addr16
movs
repz
setae
sbb
fs
clc
cmp
(bad)
jge
dec
inc
aam
sub
adc
in
add
les
push
pop
popf
add
add
sahf
in
mov
sbb
dec
mov
into
xor
cld
aam
and
(bad)
pusha
enter
jp
jl
jmp
xor
loope
shl
into
addr16
std
sub
imul
mov
jno
xchg
jg
mov
push
add
jl
(bad)
push
push
inc
adc
in
mov
and
cmc
or
xor
add
xchg
nop
xchg
sbb
mov
dec
inc
pop
pop
mov
xchg
sub
push
dec
rcr
call
in
mov
mov
lahf
sbb
fwait
or
dec
scas
adc
imul
pusha
mov
xor
icebp
shl
sar
js
stc
cmp
mov
hlt
xchg
ds
test
fcomp
out
sbb
enter
arpl
xor
xor
sub
sbb
push
sub
add
fisttp
test
inc
add
jne
adc
dec
sbb
sub
pop
ja
aad
pop
lea
xor
je
dec
test
popa
ficomp
xor
wrmsr
push
dec
stos
inc
mov
loopne
cwde
jecxz
fwait
pop
push
cmps
int
ret
fisttp
call
out
shl
repnz
ret
cmp
cmp
push
mov
sahf
xor
cld
sub
mov
scas
sub
xor
pop
lahf
or
(bad)
scas
adc
and
(bad)
out
cmp
popf
ss
mov
cmp
sbb
sahf
jmp
pop
movs
inc
jle
rol
clc
add
out
push
jp
mov
xor
ror
retf
xor
and
and
popa
pop
inc
and
test
das
inc
push
or
std
call
push
lds
jne
cdq
mov
jp
cmps
cmps
lock
imul
in
int3
outs
into
inc
aaa
scas
cdq
je
and
mov
pop
mov
in
mov
test
outs
stos
and
adc
pusha
sbb
adc
push
outs
mov
imul
(bad)
cmp
ret
sbb
jecxz
sub
adc
or
xor
cmp
mov
popa
xor
sahf
je
jp
fiadd
loope
or
jbe
inc
mov
fmul
and
fs
shl
dec
leave
call
jmp
(bad)
scas
xor
pop
stos
cmp
lods
jno
push
sahf
lahf
push
sbb
pop
sub
mov
or
sub
leave
lock
popa
shr
sub
adc
mov
cmp
or
clc
jne
inc
jbe
fsub
mov
push
test
mov
xor
push
fwait
test
(bad)
push
aad
fwait
(bad)
cld
inc
or
cmp
mov
fst
lea
cli
fwait
ins
sub
add
xchg
mov
sub
jno
xor
loope
rcl
daa
dec
je
pop
jns
push
rcr
scas
int
popa
sub
dec
mov
dec
push
movs
(bad)
fadd
jns
jns
mov
rol
repnz
or
dec
lods
dec
cmps
dec
out
hlt
sub
(bad)
adc
add
fsub
and
pusha
int3
inc
jb
jmp
sub
xlat
mov
aad
pop
pushf
icebp
call
jge
xlat
dec
or
xchg
jbe
daa
push
add
sub
loopne
pop
push
pop
fs
int3
mov
sbb
fbstp
fucomi
cld
cmp
mov
pusha
dec
stos
lods
pop
mov
xor
add
jp
push
xchg
dec
call
mov
sti
call
fimul
ins
sbb
outs
fucomp
jl
and
mov
or
pop
lds
cmp
iret
dec
mov
dec
enter
std
pop
xchg
in
and
cmc
out
pop
pop
xor
mov
xchg
or
test
imul
jno
mov
sbb
call
stos
xchg
addr16
push
and
mov
and
iret
cmp
shr
jmp
mov
(bad)
adc
mov
fwait
mov
fst
xchg
ja
xor
mov
ret
loopne
mov
sbb
clc
test
fst
dec
adc
arpl
imul
test
lods
rcr
mov
jl
mov
xor
fst
mov
cmp
sub
es
mov
lock
push
sar
xchg
fwait
xchg
sbb
repz
xchg
sub
imul
inc
lods
imul
imul
lea
sbb
out
and
pop
mov
gs
inc
pop
ds
(bad)
(bad)
mov
dec
pop
or
jge
pop
lock
mov
sbb
inc
cmps
add
and
mov
inc
stos
xor
adc
and
call
xchg
daa
pmaxsw
push
je
(bad)
in
mov
mov
adc
je
sbb
(bad)
xchg
push
sbb
jnp
addr16
sbb
jnp
not
shl
mov
jo
call
jg
test
sub
xor
adc
cmc
shr
dec
pusha
sub
shl
pop
adc
jb
inc
mov
adc
or
pushf
das
add
(bad)
in
jge
cmp
dec
jecxz
addr16
inc
mov
and
mov
mov
pop
dec
jp
mov
push
js
ror
fld
push
scas
dec
xlat
cld
lds
clc
int3
shl
and
inc
in
mov
inc
iret
ret
push
cmovo
mov
pop
scas
mov
pop
(bad)
not
adc
sbb
inc
cmp
add
push
test
call
(bad)
inc
dec
or
aad
std
inc
push
pop
pop
ja
retf
loop
mov
popf
pop
std
(bad)
out
push
cmp
cmp
dec
and
xchg
jg
outs
cmp
dec
in
lock
fnsave
lods
sub
stc
into
sar
lock
rcl
cmp
fdiv
xchg
fdiv
add
mov
adc
inc
iret
jmp
lods
cmp
adc
push
mov
(bad)
(bad)
jo
cmps
and
mov
ficomp
mov
test
mov
sub
jge
imul
pop
cmp
(bad)
mov
outs
out
inc
cdq
hlt
ret
jle
mov
leave
sbb
std
pop
idiv
in
xlat
ins
add
(bad)
adc
mov
jmp
addr16
sub
scas
mov
fwait
nop
and
adc
push
data16
push
(bad)
dec
cld
mov
sahf
mov
pushf
dec
std
pusha
xor
add
push
stc
mov
add
int
iret
push
adc
pop
push
adc
or
mov
jo
inc
ror
jno
mov
mov
enter
jmp
jo
call
int3
sahf
fst
and
ins
xor
data16
jne
add
popa
jl
loope
rsqrtps
sub
and
(bad)
push
inc
(bad)
push
aas
scas
cdq
test
push
sti
daa
push
inc
inc
push
xor
mov
clc
mov
daa
xor
push
add
sbb
cdq
push
jns
mov
sbb
and
ds
call
movs
not
push
rcl
lea
cmp
arpl
scas
and
jo
dec
pop
fcomp
out
xchg
xchg
iret
out
test
neg
sbb
jecxz
fwait
add
cli
or
adc
retf
aas
lahf
movs
and
pop
fadd
(bad)
mov
movs
das
xchg
aad
add
retf
cwde
sbb
test
jae
pop
pusha
xor
jp
aaa
ins
xor
movs
push
adc
mov
mov
call
stos
mov
jnp
sub
xchg
or
sub
xchg
pop
add
ds
adc
dec
xchg
outs
enter
inc
es
cwde
mov
sub
nop
outs
aaa
jmp
leave
adc
and
addr16
pop
inc
nop
stos
xchg
mov
sbb
jp
(bad)
xchg
mov
sbb
sub
mov
sbb
inc
icebp
std
pop
movs
stos
sbb
out
mov
(bad)
sub
inc
rcl
mov
cmp
(bad)
cli
rcl
std
add
inc
fld
popf
push
jb
lods
add
cmp
push
mov
cmp
xchg
cmp
shl
jb
fucomi
mov
ret
mov
dec
out
repz
push
mov
(bad)
mov
pop
cmp
icebp
cmp
sbb
inc
mov
repnz
data16
pop
push
jmp
push
cmps
dec
add
sub
out
lock
mov
test
lock
gs
ss
dec
jne
jecxz
jae
in
and
jb
fimul
xor
out
add
xchg
(bad)
mov
shl
mov
inc
repnz
jecxz
loopne
pop
jne
stos
stos
das
leave
ret
hlt
jbe
test
loope
(bad)
and
or
leave
mov
jp
int
(bad)
cmp
jno
pop
mov
mov
mov
mov
jo
xor
cwde
push
pop
out
xor
or
idiv
mov
mov
sub
mov
ins
scas
pop
hlt
jl
in
inc
adc
inc
cmp
sti
mov
test
out
mov
pop
fldz
push
mov
fcomp
gs
repz
movs
pop
add
xchg
lods
cli
test
mov
pop
rcl
inc
xchg
mov
adc
or
sub
dec
dec
fisttp
mov
mov
fs
mov
or
push
fs
cmp
cdq
or
jo
cmp
xor
pusha
mov
loope
xor
sub
xchg
enter
inc
pop
adc
neg
mov
adc
push
xor
and
push
cmp
xchg
repnz
imul
into
pusha
into
xchg
stos
jp
adc
ror
cli
sub
add
xchg
pop
int
stos
aam
rol
inc
dec
jp
and
imul
add
outs
aaa
jl
outs
xor
push
popf
(bad)
xor
inc
jg
mov
pop
fld
push
(bad)
mov
xor
loope
test
xor
in
lock
jmp
cmps
sbb
mov
sub
jo
dec
inc
sbb
mov
inc
push
sub
inc
inc
das
or
icebp
mov
nop
loop
fsubr
jge
(bad)
push
inc
scas
rcr
(bad)
xchg
or
adc
push
fldcw
fdiv
cmc
mov
cs
std
out
enter
fdivp
pop
loop
pushf
mov
add
loopne
pop
mov
test
test
enter
retf
mov
in
aad
add
mov
or
mov
push
loope
pop
jecxz
clc
arpl
frstor
and
sub
inc
rcl
add
xchg
jmp
outs
(bad)
jmp
xchg
cs
fdivr
xlat
mov
mov
xor
das
dec
mov
xor
stos
jl
and
test
int
int3
pop
pushw
jnp
dec
pop
pop
cdq
push
lahf
sbb
outs
inc
mov
inc
jmp
dec
jnp
sti
jle
pushf
imul
dec
scas
retf
(bad)
mov
sti
pop
inc
or
les
cmc
sti
std
idiv
sub
scas
cmc
fdiv
or
daa
repz
xchg
loop
adc
inc
sbb
popa
sub
jmp
clc
push
movs
mov
mov
imul
dec
jne
dec
int3
pop
and
jmp
and
loop
repnz
adc
mov
jecxz
mov
lods
lods
dec
adc
adc
adc
cmp
lock
cwde
in
leave
fist
mov
push
push
inc
ret
fwait
scas
jno
xchg
xchg
lds
imul
or
and
mov
adc
push
sub
outs
out
aas
fmul
add
sbb
mov
int3
mov
cli
cli
xor
sub
mov
mov
push
add
sub
mov
mov
ds
mov
xor
inc
int3
jbe
test
test
das
js
icebp
shr
popa
add
push
outs
and
dec
cmp
mov
dec
and
jecxz
mov
(bad)
pop
xor
xlat
mov
(bad)
ds
xor
pop
dec
mov
jg
lods
push
mov
ins
shl
sbb
sbb
adc
sti
repnz
mov
pusha
daa
jo
xor
sub
mov
pop
xchg
xor
ret
test
push
rcl
xor
fmul
mov
lods
adc
rol
fisub
fbstp
add
sbb
fidivr
push
jge
lock
icebp
pushf
cli
fs
imul
dec
ja
push
pop
jnp
call
rcl
ins
mov
and
inc
and
adc
mov
fs
test
fisubr
mov
push
sub
enter
mov
pop
mov
wbinvd
and
mov
or
cmp
(bad)
shl
pop
jns
add
outs
stos
xor
in
ds
std
(bad)
jecxz
mov
mov
neg
xchg
push
pop
push
imul
js
and
cmp
clc
pusha
mov
and
out
lods
cmp
xor
adc
pop
xor
retf
stos
sar
or
pop
pop
xor
cdq
cmp
or
out
aam
inc
cs
(bad)
movs
cld
cwde
addr16
push
push
inc
cmp
imul
dec
lahf
push
cmc
cmp
daa
pop
mov
es
mul
mov
pusha
loopne
or
mov
cwde
jmp
pop
clc
adc
push
mov
pop
mov
mov
xor
clc
out
sar
aaa
mov
cdq
pop
lds
loopne
inc
sbb
in
cmp
xlat
lahf
inc
sbb
cmps
sbb
je
xchg
out
and
dec
sub
sar
stos
(bad)
es
sti
mov
pop
retf
xchg
stos
std
push
mov
loop
scas
xchg
pop
or
lahf
adc
call
push
ror
xlat
push
(bad)
not
and
ins
(bad)
fidivr
push
mov
inc
mov
jno
sub
ret
test
jecxz
movs
cmp
pop
xor
add
mov
or
cmp
ins
sub
lahf
gs
sub
xchg
xchg
js
xchg
cli
xor
test
das
cwde
sbb
aam
adc
mov
pop
push
adc
adc
add
sbb
ja
add
mov
pop
push
sahf
cmp
cmps
mov
push
ret
ins
pop
push
movs
out
mov
out
mov
sub
mov
xchg
lods
xchg
and
sahf
or
cs
or
dec
mov
aas
pop
jo
fwait
sti
mov
(bad)
(bad)
outs
jmp
ror
rcr
fld
lds
(bad)
push
leave
sar
iret
cmp
sbb
push
push
(bad)
push
inc
ror
xor
inc
test
es
sub
bound
test
push
xchg
push
ret
retf
xchg
push
push
mov
hlt
jnp
mov
push
test
imul
cwde
retf
aam
or
scas
jb
mov
(bad)
aad
call
je
jae
jle
repnz
dec
push
imul
xor
std
push
inc
jne
pop
xchg
mov
cmp
inc
mov
mov
sbb
cmp
cmps
stos
mov
mov
sbb
mov
rcr
jo
add
sub
sbb
lock
mov
stos
xchg
sahf
aaa
push
pop
pushf
iret
dec
(bad)
mov
stos
inc
jg
and
mov
mov
mov
icebp
and
shr
push
es
popa
adc
clc
jle
fwait
cmp
push
es
movs
les
xor
xor
ins
ds
fisub
leave
sti
dec
xchg
xchg
adc
sub
out
outs
shl
mov
push
xchg
adc
fcomp
ds
out
out
adc
add
jecxz
mov
adc
mov
sbb
push
mov
push
fisub
jmp
out
adc
sbb
mov
xchg
pusha
rcl
cmc
out
mov
ins
adc
imul
std
ret
sub
mov
hlt
int
out
das
mov
(bad)
mov
lds
aaa
inc
mov
push
out
in
xchg
or
aaa
jbe
stos
(bad)
mov
out
je
and
(bad)
std
iret
(bad)
mov
cmp
dec
nop
out
xchg
or
inc
outs
sub
shl
cmp
sar
adc
push
call
(bad)
mov
dec
and
popa
retf
cmp
cmp
repz
jbe
jns
hlt
jno
mov
inc
es
jg
push
mov
(bad)
lahf
jg
pusha
mov
(bad)
out
mov
addr16
mov
cmps
mov
jl
(bad)
fld
fcmovnb
in
rol
or
loopne
fadd
sar
in
rcl
cmp
sbb
ret
call
outs
loop
inc
and
test
aas
and
cmp
fldcw
ficom
xor
stc
cmp
sbb
mov
call
cmp
ins
out
aas
push
push
retf
rcl
and
adc
cmp
sub
sub
movs
fadd
mov
cmp
cmp
add
mov
xor
dec
dec
cs
pop
(bad)
adc
leave
dec
jo
sbb
enter
xor
out
aam
sub
nop
movs
call
sbb
call
sar
cmps
xchg
add
(bad)
int3
mov
hlt
add
push
adc
mov
call
add
push
and
ja
sub
pop
pop
(bad)
mov
fst
fcomp
sbb
test
cmps
ret
xchg
xor
jne
cmps
rcr
xchg
or
add
aam
push
push
dec
or
pop
pop
ds
test
fild
xchg
adc
imul
jno
fcomi
clc
lods
sub
mov
add
shl
ficomp
outs
and
dec
daa
retf
mov
scas
jge
push
addr16
xlat
adc
mov
xor
aaa
test
xchg
adc
mov
dec
xchg
mov
sbb
in
data16
clc
xor
push
sub
jmp
imul
fstp
mov
scas
sahf
jecxz
pop
stos
cmp
or
push
mov
or
jmp
sub
pop
xchg
mov
xchg
aam
pop
jnp
push
ret
adc
arpl
mov
lock
fld
les
retf
or
lods
xor
push
popa
gs
adc
cld
mov
in
popa
pop
rcr
jle
rdmsr
pop
xchg
jmp
jl
sbb
(bad)
sbb
mov
cmp
call
xlat
lea
pop
and
stc
imul
xlat
jae
push
push
jecxz
fadd
jb
call
jae
int
or
fld1
movs
jno
fwait
test
fwait
mov
ds
mov
mov
dec
xor
sub
sub
mov
into
sub
daa
inc
sbb
fnstcw
or
out
mov
sti
add
loop
retf
lahf
loop
out
test
icebp
jno
xor
jmp
cmps
mov
ss
inc
mov
dec
jbe
or
cwde
inc
lods
das
bound
(bad)
hlt
sbb
adc
xchg
dec
(bad)
ins
nop
jno
loope
ret
xchg
in
pop
sbb
xor
mov
pop
aas
xor
lock
mov
xchg
mov
fidivr
mov
add
cli
sbb
xor
push
pop
dec
imul
outs
add
xchg
or
add
fmul
dec
in
push
jnp
inc
push
dec
xor
sbb
fist
inc
test
xor
or
push
mov
cdq
inc
and
retf
les
lock
ins
xor
push
sbb
(bad)
mov
pop
xor
mov
jg
cwde
jmp
(bad)
push
ficom
mov
mov
pop
f2xm1
mov
shl
and
repnz
out
xor
ret
jno
push
sahf
sub
mov
aad
or
jmp
in
je
cmc
jg
or
xchg
cwde
into
clc
sub
dec
leave
cmp
mov
mov
cmp
(bad)
fiadd
fucomip
jne
or
xchg
js
pusha
scas
push
loopne
dec
cmp
mov
add
and
call
add
mov
and
ja
adc
stc
pop
cli
retf
movs
xor
ret
jge
pusha
imul
jb
mov
sub
(bad)
jg
jg
push
fmul
int3
pop
sbb
dec
mov
xor
pop
cmps
cdq
pusha
(bad)
movs
jg
jp
arpl
fcmovne
in
pop
loop
add
les
sub
ins
mov
mov
pop
pop
repz
jnp
mov
mov
test
pop
sbb
es
scas
jno
jb
dec
into
clc
push
sbb
cmps
and
or
test
cmp
mov
les
push
retf
shl
fwait
test
mov
sar
fs
retf
lahf
ja
mov
sar
jle
inc
es
add
add
cmc
outs
lds
sub
sub
test
out
std
mov
icebp
clc
cmc
test
lea
push
scas
test
dec
jl
mov
mov
xchg
in
sub
cdq
lea
xchg
lods
mov
mov
inc
jmp
mov
pushf
cmp
je
js
jg
jo
dec
ficom
mov
enter
or
sbb
fsubr
icebp
mov
call
int3
jmp
adc
repz
mov
daa
jo
retf
lods
call
cli
mov
call
cdq
pop
out
mov
popf
jmp
outs
loopne
out
cmp
fsub
adc
sahf
pushf
push
pop
dec
sub
or
or
push
sub
stc
or
iret
test
inc
adc
cmps
jl
in
adc
fsubr
and
pop
in
sbb
fild
pop
and
(bad)
bound
mov
add
add
push
ds
jl
lods
lods
pushw
adc
add
add
dec
sti
jne
pop
jecxz
popf
enter
push
(bad)
rcl
dec
(bad)
imul
das
jecxz
daa
das
das
jb
push
movs
mov
movs
cmp
inc
loop
jmp
aam
jns
xchg
neg
sar
jge
pop
sbb
jmp
pop
inc
push
(bad)
clc
ins
mov
mov
loope
les
(bad)
outs
pop
sub
jmp
lea
loope
push
xor
cs
jae
fstp
adc
cs
lea
pop
adc
lods
sbb
mov
mov
fmul
mov
shl
dec
xor
cdq
inc
repnz
push
rcl
add
jno
xchg
ss
arpl
shl
add
mul
add
cmp
js
mov
(bad)
jno
lods
rol
cmp
loop
jne
inc
jnp
xchg
mov
and
leave
xlat
cli
call
push
or
cld
mov
(bad)
lahf
inc
std
push
(bad)
cmp
dec
dec
jno
les
cmp
push
add
idiv
test
jo
lods
outs
ret
mov
sub
fidivr
fs
and
in
pop
xchg
jmp
inc
push
(bad)
into
or
mov
rcl
paddusw
popa
mov
mov
mov
lahf
jg
movs
cmp
push
in
inc
sub
mov
cmp
and
lods
or
js
cmc
jle
imul
fsub
and
push
stos
push
push
test
arpl
movs
or
inc
in
mov
xchg
mov
fadd
mov
sbb
xchg
cmp
sub
call
mov
pause
jo
imul
jns
in
shl
push
mov
push
jl
xchg
imul
add
mov
scas
clc
lahf
adc
mov
shl
mov
rcl
gs
adc
inc
cld
add
popf
cmps
div
(bad)
(bad)
push
and
sbb
aas
push
pop
outs
stos
jne
(bad)
leave
test
dec
add
addr16
xlat
(bad)
movs
mov
xor
sub
test
jae
xor
test
jge
sti
loope
xchg
pop
fsubr
jp
push
xchg
ja
mov
fild
mov
mov
xchg
jl
inc
xchg
cli
mov
sub
mov
aad
imul
arpl
mov
loopne
cld
and
xchg
xchg
retf
shl
ja
mov
and
jne
cmp
mov
mov
bt
add
inc
jecxz
push
data16
loopne
retf
or
lds
sbb
jo
ins
push
ins
ret
shr
dec
jle
js
sub
xor
jnp
sbb
and
arpl
jmp
into
imul
pop
cs
ins
cdq
lock
inc
mov
and
(bad)
add
ins
mov
fldcw
mov
movs
lods
fwait
mov
loop
adc
jnp
ds
sbb
popf
sub
movs
pushf
xor
push
out
out
mov
inc
aam
mov
jae
pusha
(bad)
shl
in
push
jns
jp
inc
mov
xor
adc
std
bound
inc
xor
push
mov
sbb
pop
mov
cmc
pop
in
popa
xchg
daa
mov
gs
in
mov
dec
or
inc
pop
cmp
dec
hlt
push
pop
fisubr
fiadd
inc
jecxz
mov
jns
mov
fldenv
dec
xchg
ror
aad
cmp
jge
mov
(bad)
sti
shl
into
push
inc
or
jns
and
sub
jae
stc
mov
dec
in
(bad)
(bad)
xchg
jno
xchg
popf
jmp
push
retf
data16
mov
dec
pop
scas
or
lea
add
push
mov
mov
push
adc
adc
and
adc
loop
cmp
repz
scas
xor
ins
imul
push
icebp
ins
mov
and
xlat
fs
mov
out
xchg
test
out
fucomi
leave
mov
(bad)
cwde
rcl
scas
push
add
mov
ins
dec
pop
stos
stc
adc
(bad)
cld
or
jmp
retf
mov
nop
dec
sub
add
cwde
xchg
mov
aas
pop
and
mov
jp
sbb
pop
stos
pushf
pop
jmp
int3
push
out
int3
call
out
in
repnz
or
fiadd
add
movs
lds
and
or
push
push
fnstcw
xor
cs
jl
js
out
cld
fld
loop
add
imul
push
cdq
xor
cmps
and
dec
int3
add
leave
or
jge
jne
test
jmp
push
das
fcmovb
inc
mov
cmc
jl
and
outs
repnz
or
lahf
sbb
ss
scas
hlt
(bad)
(bad)
fsubr
and
adc
ret
push
xor
pop
movlps
pop
push
aas
rol
push
out
inc
sub
sub
jae
pop
inc
xchg
jae
aad
mov
dec
scas
jp
and
loop
retf
cmp
lds
mov
jmp
ins
push
mov
or
fdivr
popf
sti
outs
xchg
push
dec
je
pop
xchg
leave
jl
and
arpl
shl
mov
sub
pushf
jo
sti
call
sub
inc
shr
jmp
mov
arpl
ja
cmp
(bad)
pop
out
mov
xor
adc
push
cmp
pop
pop
sub
fcom
adc
or
push
fimul
jge
div
daa
call
repz
outs
add
aam
adc
jmp
and
or
bound
adc
fsubr
mov
and
cmp
cli
sbb
mov
pusha
in
pop
jnp
push
cmp
loope
pop
add
pop
sar
scas
stos
mov
push
mov
loopne
adc
call
call
sub
add
and
sbb
push
xor
pop
popw
lock
or
adc
neg
mov
or
rol
ss
enter
sub
push
push
mov
ins
mov
pop
dec
out
push
bound
mov
mov
popf
inc
or
fcomip
jecxz
sbb
es
std
cmp
inc
mov
push
in
out
mov
pop
dec
mov
aas
pop
movs
mov
imul
mov
cmp
ret
jmp
xchg
jle
inc
jg
and
movs
(bad)
das
adc
adc
rol
push
icebp
fld
(bad)
ss
cld
add
mov
hlt
adc
movs
sti
pop
mov
(bad)
fidiv
or
jo
pop
push
jg
cmp
(bad)
dec
push
add
stos
or
(bad)
out
mov
push
mov
retf
lock
retf
stos
rcr
pop
aad
sbb
mov
ds
inc
adc
daa
retf
dec
mov
pop
xchg
(bad)
scas
dec
shr
jmp
and
jne
mov
pop
scas
(bad)
lods
(bad)
addr16
sahf
sti
push
aaa
adc
xchg
dec
jbe
push
adc
sub
mov
fimul
jne
mov
std
mov
cs
jae
ss
out
sub
movs
xlat
iret
mov
push
std
push
adc
movs
and
pop
fiadd
test
aaa
xchg
das
daa
push
jmp
inc
xchg
lea
mov
leave
outs
xchg
retf
call
push
fbstp
mov
jnp
jno
lahf
pop
out
out
inc
and
pusha
jae
jo
es
sub
js
xchg
cmc
push
(bad)
pop
or
aam
shl
movs
jbe
and
and
add
(bad)
mov
mov
pusha
jl
xchg
jl
mov
xchg
cmps
adc
in
movs
ins
mov
sub
add
inc
inc
je
or
retf
push
in
and
ret
jg
mov
sti
adc
mov
mov
jns
ret
loopne
(bad)
fisub
cmps
scas
adc
ss
lahf
lahf
in
mov
stos
pop
cmp
mov
das
cld
fwait
inc
stc
cmp
and
jnp
int3
or
jb
sti
push
gs
(bad)
ds
pop
sub
adc
xchg
lahf
outs
xchg
mov
cmc
cmp
outs
pop
push
movs
(bad)
sidtd
pop
xchg
mov
and
mov
out
enter
sub
jg
cwde
iret
add
pop
and
movs
pop
test
adc
(bad)
arpl
movs
repz
or
xchg
and
inc
sub
js
push
push
sbb
pop
jno
call
mov
rol
jbe
or
test
in
pop
inc
inc
int
pop
repz
ds
mov
out
mov
mov
(bad)
mov
xchg
pop
gs
ins
lods
pop
imul
sub
or
ret
inc
in
ins
and
fld
lods
js
add
jno
test
cmovne
scas
dec
(bad)
scas
loopne
and
test
pop
imul
nop
jns
push
dec
or
in
push
aam
mov
xchg
pop
inc
or
or
xor
hlt
sbb
or
pop
call
xor
stc
retf
into
repnz
mov
jle
(bad)
mov
mov
int3
mov
repz
jp
jmp
out
push
cmp
jge
scas
push
cmp
xchg
and
clc
jmp
lea
inc
cld
aaa
dec
jp
cwde
stos
gs
cs
iret
sbb
fcmovbe
cs
div
mov
jns
cmp
test
inc
xor
outs
inc
test
sbb
bound
jl
xchg
mov
lahf
dec
dec
mov
in
mov
fidiv
mov
outs
add
adc
lahf
das
push
jge
mov
mov
bound
daa
jle
mov
gs
ficomp
cmp
cmc
and
inc
inc
jae
xchg
lods
jbe
int3
mov
cmp
mov
xchg
outs
inc
repnz
js
jmp
hlt
sahf
cmp
(bad)
neg
int
inc
pop
lds
push
dec
retf
push
gs
jmp
dec
out
fcom
xor
cli
mov
rcr
jnp
mov
xchg
lods
mov
mov
stc
fldlg2
push
inc
aaa
pop
pop
xchg
loop
jecxz
adc
fiadd
xchg
lea
sub
mov
out
sub
mov
les
and
jbe
inc
std
mov
pop
jmp
mov
dec
push
pop
es
push
sub
mov
std
xchg
cmp
int
mov
cmps
pop
add
mov
add
mov
imul
into
lods
test
in
pop
ja
retf
outs
mov
stc
loopne
pop
retf
sub
jo
aas
lods
add
xor
dec
mov
mov
das
mov
fisttp
outs
stc
lods
les
or
mov
cld
outs
xchg
inc
mov
mov
mov
jns
adc
xchg
nop
mov
js
inc
jns
into
xchg
and
dec
ret
int
xor
rcl
mov
xor
imul
retf
sbb
int3
(bad)
mov
and
jge
inc
nop
inc
inc
nop
idiv
(bad)
add
loop
mov
fcomp
leave
or
jb
nop
dec
dec
xchg
inc
cmps
rdmsr
rcr
mov
popf
idiv
adc
ficomp
jbe
add
cwde
sbb
push
xchg
pop
jbe
(bad)
push
aaa
sahf
add
mov
xchg
jae
rcr
fnstenv
popa
mov
pop
pop
pop
into
ins
pop
stos
fisubr
neg
mov
jge
js
jo
mov
xor
imul
js
daa
pop
inc
sbb
cmp
ret
xor
cmp
dec
push
rcr
cmp
ret
mov
(bad)
jb
mov
xor
adc
inc
mov
jbe
shl
sub
cwde
pop
pop
push
sub
sbb
int3
dec
adc
push
pop
push
or
les
mov
stos
not
ins
pop
leave
xchg
adc
mov
sbb
mov
in
in
out
mov
xor
loope
cmc
inc
xlat
(bad)
scas
push
das
jg
adc
retf
and
jns
sbb
cwde
(bad)
loopne
jns
jb
clc
xlat
outs
and
pop
sub
les
dec
push
(bad)
push
xchg
sbb
clc
xchg
out
mov
dec
(bad)
aam
cmp
xlat
pop
in
jg
test
mov
xor
and
inc
jge
inc
repnz
out
push
iret
mov
sub
aaa
mov
pop
sahf
dec
sti
out
or
dec
push
cld
loope
retf
sub
and
test
(bad)
cdq
and
push
fcmovnb
retf
mov
mov
and
add
xchg
xlat
dec
ret
arpl
pop
lea
call
int3
or
dec
inc
ror
push
xor
das
jb
mov
adc
aad
add
aad
xchg
retf
sbb
mov
push
mov
xor
cwde
or
push
or
out
mov
adc
xchg
jecxz
imul
mov
pop
test
int3
rcl
jmp
sbb
and
push
retf
rol
xchg
iret
adc
jg
and
or
imul
push
inc
std
test
psraw
bound
pop
test
imul
xchg
push
mov
jae
fninit
sbb
inc
push
shl
xchg
xchg
test
ret
xor
aaa
popa
icebp
xor
inc
stc
or
xchg
pop
mov
repz
(bad)
adc
sbb
in
mov
scas
adc
fdivr
loop
and
rcr
adc
fst
dec
loop
test
inc
xor
nop
jb
inc
lahf
push
xchg
ss
push
xchg
mov
es
movs
and
pop
sub
pop
test
cmps
push
jbe
mov
jb
daa
sbb
shl
jno
in
sbb
in
mov
fisubr
add
jno
shl
xor
fnstsw
pop
mov
jp
cdq
fidiv
xlat
jmp
aas
pop
std
ret
sbb
jns
dec
movs
stc
(bad)
movs
lods
fiadd
inc
pop
out
retf
mov
mov
dec
inc
mov
outs
loope
mov
cmp
xchg
dec
movs
outs
repz
sti
imul
or
xchg
shl
lock
mov
jl
dec
mov
mov
pop
sub
ds
(bad)
enter
or
pop
xchg
xchg
inc
out
jb
gs
outs
add
mov
jge
pop
popf
push
mov
mov
enter
cmp
or
sub
push
rcl
aam
movs
cmp
in
mov
mov
pop
mov
or
aaa
aaa
jne
and
xor
xchg
lahf
fsubr
fwait
repnz
sbb
inc
outs
in
cmps
shl
add
jb
in
arpl
jecxz
jge
dec
aam
bound
jmp
jno
sar
pop
test
xor
xchg
cmc
cli
or
inc
mov
cmp
and
ins
fstp
pop
pop
sbb
sub
or
sar
mov
mov
pop
cmps
dec
jo
out
movs
add
mov
xchg
sbb
sub
popf
mov
push
mov
repnz
test
ja
lock
aaa
sbb
xchg
fsqrt
sub
pop
pop
ds
fimul
xchg
sbb
pop
mov
mov
pop
inc
repnz
xor
adc
fcmovu
rol
movs
or
loope
stos
push
(bad)
xchg
pushf
or
pop
(bad)
enter
sbb
movs
xor
mov
adc
jg
xor
dec
pop
mov
retf
(bad)
shr
out
cmps
adc
mov
movs
dec
aam
xor
imul
je
sub
push
add
arpl
es
add
neg
mov
ret
call
pushw
mov
sti
fdivr
jb
clc
gs
xlat
fisttp
test
punpckhdq
add
cdq
xor
fs
pusha
pop
mov
fdiv
(bad)
push
iret
adc
out
mov
in
and
add
push
and
out
retf
mov
in
inc
adc
out
adc
push
movs
lock
fucomip
mov
sub
data16
inc
mov
clc
sar
daa
in
dec
inc
nop
pop
xor
jge
iret
push
outs
es
dec
xor
in
pop
xchg
punpckhdq
push
lods
repz
shl
outs
enter
daa
adc
(bad)
js
inc
and
test
loop
push
sub
jg
mov
aam
cwde
lea
lea
push
ins
ins
push
in
fisttp
push
fadd
out
cmp
loop
or
sahf
xchg
add
sbb
dec
add
mov
jmp
add
jge
retf
and
cmp
retf
shl
mov
push
adc
fst
imul
fild
cmp
retf
jle
and
fwait
push
pop
inc
mov
sbb
cmp
xor
pop
or
pop
mov
and
or
ja
push
mov
cmps
fwait
jae
cmps
in
lods
test
(bad)
aad
adc
cmp
and
pop
hlt
mov
xchg
out
mov
add
test
mov
dec
in
repnz
jg
mov
and
mov
xor
retf
shr
mov
movs
ds
sub
mov
lds
inc
imul
sub
xchg
in
pop
pop
inc
retf
xchg
xchg
sti
scas
sub
pop
cmp
push
and
mov
add
jecxz
jbe
fmul
lods
addr16
sbb
test
jmp
cmp
dec
sbb
retf
push
mov
or
cmovg
cmc
inc
fsubp
mov
lods
sub
loope
sub
stc
jecxz
fdiv
jb
or
nop
and
fwait
popa
scas
rcl
push
lods
lahf
out
mov
push
inc
retf
adc
push
adc
test
bound
arpl
mov
arpl
mov
(bad)
je
mov
mov
aaa
iret
test
ret
shl
inc
pushf
or
cdq
jbe
cmp
popf
icebp
sub
test
lds
cmc
fisttp
fnstsw
pop
dec
adc
imul
adc
xor
nop
pop
push
push
daa
(bad)
in
jg
mov
inc
mov
adc
sbb
xor
ins
pushf
or
rcl
scas
int
mov
pop
jo
das
sbb
push
push
add
mov
mov
aas
push
aad
mov
inc
adc
sbb
in
mov
push
neg
mov
out
push
out
je
jnp
arpl
mov
daa
retf
cmp
xor
sbb
sbb
ins
add
pop
mov
or
scas
jp
pop
push
es
dec
mov
into
mov
and
dec
icebp
fnstcw
xchg
pop
call
xchg
sar
jmp
popa
dec
inc
xor
sbb
lods
out
push
sub
adc
dec
rcr
xchg
jae
jg
ret
and
push
test
cmc
loope
add
(bad)
les
out
and
movs
mul
aas
aaa
pop
cmp
xchg
outs
sub
ror
pop
push
push
retf
stos
add
jle
sar
push
lods
jmp
xor
cmp
imul
cwde
jbe
in
(bad)
out
add
ins
xchg
lds
jb
imul
pop
jno
ins
xlat
inc
fnsave
add
das
in
test
mov
aam
xchg
ficomp
push
cli
xlat
out
add
cmp
out
mov
cwde
jne
sbb
imul
xchg
add
cmp
inc
repnz
adc
ror
loopne
xchg
test
into
jno
shl
sti
int3
jne
sbb
leave
sub
sub
mov
push
repz
inc
clc
mov
scas
and
sub
add
jae
fld
stc
fisttp
(bad)
popa
outs
sbb
jmp
cmp
dec
dec
dec
test
cwde
pop
test
in
dec
repnz
sub
pop
add
shr
addr16
out
xchg
push
je
scas
xor
mov
adc
call
xor
imul
inc
mov
and
jmp
mov
inc
stos
push
gs
retf
aaa
pop
lea
in
call
lods
mov
sub
jp
jae
xchg
sub
seta
xchg
dec
fiadd
daa
retf
xor
dec
add
pop
cmp
cmp
dec
or
jecxz
dec
sbb
(bad)
mov
retf
aam
cmps
iret
outs
test
mov
test
xor
in
push
push
mov
nop
add
cmp
mov
out
(bad)
cmp
jmp
pop
xchg
jg
scas
jbe
(bad)
outs
popa
ja
cmp
xlat
shl
repz
stos
scas
sub
cmp
in
cmp
lods
mov
xor
sbb
loopne
xchg
push
or
jp
idiv
adc
rcr
jmp
jo
adc
mov
shr
or
cmps
rcl
xor
xor
xchg
outs
add
sbb
cmp
arpl
xchg
jbe
adc
cmp
push
push
int3
rcr
push
(bad)
cs
sub
push
mov
mov
test
mov
mov
ror
push
mov
out
mov
add
in
inc
popa
xor
push
xor
mov
lds
pushf
imul
dec
push
(bad)
push
dec
jl
stc
inc
shl
push
cli
cmc
outs
leave
add
push
shr
shr
dec
add
adc
mov
in
xchg
adc
fdivrp
dec
dec
xor
lods
repnz
add
in
pusha
ret
xor
push
movs
(bad)
jg
sbb
adc
mov
mov
prefetch
pop
bound
dec
pop
les
(bad)
push
fnstsw
scas
test
xchg
aad
(bad)
in
out
inc
outs
out
mov
sub
in
ins
div
inc
xchg
out
or
adc
gs
(bad)
ds
sbb
gs
inc
push
jno
pop
sar
jg
pop
lds
push
bswap
pop
mov
test
sahf
stos
hlt
rcr
jb
add
mov
pop
fisubr
sub
mov
push
and
jmp
dec
mov
repnz
lods
inc
lods
mov
add
and
pop
mov
jl
inc
xchg
add
jmp
pop
xor
sub
xchg
adc
call
sahf
mov
sub
movs
loope
(bad)
arpl
lea
jno
js
(bad)
test
adc
scas
dec
retf
pop
xchg
push
push
imul
push
inc
hlt
ins
jmp
pop
sub
xchg
fnstsw
imul
mov
jnp
(bad)
cld
aam
xchg
sub
fld
xchg
mov
mov
xchg
scas
call
cmp
arpl
push
fcomp
push
int
add
sahf
aas
add
out
nop
into
jg
scas
imul
cdq
gs
mov
dec
test
push
movs
xor
sub
call
je
dec
lea
loopne
and
out
jbe
xchg
push
jmp
mov
jnp
xor
lock
imul
add
int
cmps
ins
jns
test
aas
pop
std
jmp
out
imul
sub
leave
mov
jle
enter
pop
jecxz
call
lea
mov
mov
cmps
pop
pop
mov
lods
mov
and
push
rol
(bad)
int3
test
clc
pop
fidivr
loopne
aad
mov
mov
push
pop
out
pop
push
hlt
mov
stos
xor
(bad)
or
sub
xchg
cmp
mov
xchg
stos
mov
mul
mov
out
les
lds
mov
dec
mov
data16
dec
jmp
pop
enter
cmp
loope
adc
cs
test
fdivr
jg
add
cmp
imul
dec
jae
call
cmp
in
add
lods
jno
scas
mov
aas
ins
dec
push
das
or
mov
push
sub
inc
inc
xor
jecxz
pusha
pop
mov
mov
sti
jb
test
add
out
mov
push
imul
jbe
in
fisttp
adc
add
aam
or
mov
(bad)
aaa
es
sahf
aad
dec
ss
cmp
pop
(bad)
and
ins
push
xchg
jmp
std
es
mov
(bad)
add
cmp
mov
cdq
dec
adc
and
dec
sub
mov
xor
pop
mov
mov
adc
shl
push
sbb
cmp
pop
push
mov
ds
or
and
outs
pushf
mov
or
and
in
inc
cmps
dec
loope
cmp
shl
sub
sub
xor
add
mov
cld
xchg
add
jnp
push
fisubr
imul
and
mov
cmp
in
ds
pop
adc
sub
ds
adc
push
enter
imul
rcl
or
mov
pop
(bad)
aas
or
in
fld
xchg
loop
jae
lea
inc
cmp
pop
movs
jg
xchg
jb
cmp
sar
adc
mov
pop
push
pusha
outs
(bad)
mov
adc
lea
xchg
mov
or
pop
and
retf
jge
adc
fcom
or
lods
(bad)
test
jne
pushf
mov
in
add
mov
xchg
loope
sti
movs
xchg
ja
push
mov
mov
xor
out
lea
mov
sbb
xchg
cmp
dec
sbb
sub
lods
pop
jmp
jbe
xor
dec
call
jl
push
ja
call
pop
(bad)
xlat
xor
jl
push
fdivp
xchg
(bad)
pop
cli
mov
jmp
jns
sti
xchg
sbb
idiv
mov
mov
jbe
lods
push
mov
in
xor
ja
dec
fst
sbb
mov
xchg
or
rcr
imul
loop
or
inc
mov
or
jmp
and
add
mov
sbb
mov
fnsave
retf
je
xor
xor
daa
add
ja
scas
jge
loopne
adc
sub
pop
push
add
jno
jl
cmps
loop
stos
(bad)
fstp
shl
jb
mov
jmp
push
jo
add
sub
retf
sub
cld
jno
in
arpl
xor
ja
nop
mov
mov
not
xchg
cmp
mov
loope
es
ret
and
jbe
mov
pop
jl
div
pop
test
xchg
xchg
inc
shr
lods
mov
sbb
inc
in
aaa
push
pop
xor
scas
or
fcomp
xchg
(bad)
push
mov
mov
pop
fsubr
or
lock
push
pop
aas
xchg
(bad)
aam
jo
cs
lods
add
xchg
clc
pop
mov
call
adc
push
icebp
int3
test
mov
iret
out
out
mov
jne
dec
xchg
push
add
mov
push
mov
ret
sbb
mov
mov
pushf
jmp
sub
push
lea
das
cmp
or
ins
dec
call
cmp
add
(bad)
push
or
mov
fadd
sbb
test
push
mov
das
push
cmp
cwde
push
inc
sub
fadd
pop
xchg
adc
cmp
aas
or
fist
dec
mov
dec
inc
sub
mov
mov
inc
jbe
mov
cmc
xchg
aas
or
mov
aad
pop
push
mov
mov
fidiv
inc
inc
xchg
mov
stos
iret
cld
inc
pop
adc
cmps
cmp
jbe
xor
pop
inc
cmc
mov
xchg
dec
fimul
and
outs
push
or
cld
jbe
inc
mov
jl
inc
jg
or
movs
repnz
mov
(bad)
mov
stos
sub
mov
nop
and
or
popf
lods
(bad)
pop
push
imul
jno
sub
sahf
(bad)
adc
cld
mov
ja
popa
test
pop
sbb
daa
pushf
stc
adc
ss
cmp
mov
cmp
out
jl
(bad)
rcl
cdq
aam
fldenv
xor
mov
add
fld
jle
out
inc
push
pop
ins
mov
mov
jns
sub
movs
mov
xlat
aam
lea
dec
imul
in
dec
adc
sbb
xchg
mov
and
retf
scas
movs
push
outs
dec
popa
jl
pxor
push
int
cs
stos
jbe
push
aaa
adc
outs
xchg
push
lods
mov
pop
add
retf
stos
(bad)
pop
arpl
jnp
mov
adc
mov
dec
jmp
and
repnz
inc
or
xor
add
rcl
aam
jae
mov
jo
push
ss
ret
fwait
dec
sbb
jnp
inc
mov
ja
push
(bad)
into
aam
sub
call
dec
rcl
cmp
sbb
in
test
in
stc
shl
add
iret
shl
stos
and
out
es
cmp
dec
call
dec
mov
test
xchg
test
jbe
test
inc
sbb
xlat
sub
imul
jg
add
mov
(bad)
add
dec
js
xchg
sub
mov
push
out
loopne
test
je
div
daa
push
jge
push
popf
out
mov
push
xor
ds
outs
pusha
xor
mov
(bad)
mov
push
pop
jo
fwait
push
in
out
or
in
adc
xor
arpl
jg
fisttp
test
popa
push
icebp
out
retf
outs
or
mov
push
mov
xchg
in
push
fucom
in
mov
dec
sahf
cmc
push
nop
out
sbb
pop
mov
out
mov
mov
lods
(bad)
inc
popf
(bad)
mov
(bad)
fbstp
popa
push
jnp
das
inc
imul
pop
aad
mov
clc
jo
and
or
or
mov
adc
jmp
js
jmp
(bad)
not
cwde
jmp
jo
and
adc
jmp
cli
cmps
xor
cli
mov
add
popf
xchg
xchg
popf
not
mov
jne
xor
mov
mov
jns
push
push
jnp
or
ss
out
call
popa
cmps
aas
dec
xchg
xor
in
movs
repz
push
aad
mov
fldz
xchg
push
xor
inc
push
test
mov
sbb
push
jg
sub
sbb
pop
xchg
es
test
sub
shl
nop
fcomp
add
xor
adc
ret
mov
fisub
add
lds
out
popa
pop
int
add
jns
aas
rcl
repnz
sbb
mov
in
sub
stc
out
arpl
stc
pop
push
push
push
out
jns
gs
dec
(bad)
sub
pop
cmps
sub
iret
(bad)
cmp
int3
rcl
jb
xchg
cmp
repz
pop
mov
or
fsub
pushf
fcom
pop
or
push
mov
dec
clc
in
ja
cmp
mov
scas
dec
jp
push
nop
adc
lahf
outs
inc
mov
call
adc
sub
jno
cmp
imul
cmps
and
mov
push
ds
jmp
test
inc
retf
sbb
test
scas
cmp
cmp
pop
push
jge
into
leave
mov
out
and
add
sbb
fstp
movs
mov
fwait
out
xor
pusha
mov
(bad)
js
cmp
xchg
sbb
data16
jmp
aam
xchg
adc
dec
sub
shl
sub
jle
test
xchg
repnz
dec
test
jle
mov
je
or
(bad)
pop
xor
pop
jnp
mov
sub
cld
jmp
and
jge
shl
gs
xor
mov
and
fwait
adc
fadd
add
pop
shl
jp
not
mov
stos
sub
jge
outs
add
(bad)
test
adc
test
xor
xlat
sbb
loopne
call
nop
xor
sbb
addr16
add
(bad)
lds
dec
lods
dec
(bad)
aaa
dec
loope
fsubr
out
inc
rol
xchg
movs
cld
sbb
hlt
jmp
enter
out
xlat
and
add
xchg
sti
adc
loopne
retf
or
cwde
xor
stc
ja
push
out
repz
sbb
popa
pop
cmp
jbe
push
pusha
popa
arpl
jb
fadd
and
(bad)
mov
dec
fistp
pusha
in
ds
mov
mov
(bad)
xchg
xchg
adc
xor
data16
test
sti
in
(bad)
dec
pusha
int
repz
fbstp
pop
repnz
or
sahf
stos
call
into
aas
loop
outs
mov
in
repnz
stc
stc
fld
pop
and
rcl
dec
push
addr16
stc
mov
sti
jl
mov
push
push
xor
push
leave
js
sbb
fimul
xchg
fimul
push
ret
xchg
mov
loopne
inc
cmps
push
cmp
enter
inc
xchg
int3
jbe
pusha
adc
imul
xchg
jl
inc
sbb
jae
aam
sub
in
sti
pop
out
mov
mov
cmc
(bad)
and
fstp
lods
pop
sbb
mov
add
cs
xchg
mov
mov
ds
fidivr
jmp
in
lock
ins
pop
(bad)
js
stc
les
movs
shr
int
mov
mov
rcl
sbb
xor
pop
mov
stos
pop
scas
mov
ret
int3
shl
stc
shl
(bad)
dec
aad
lds
xchg
sahf
sub
push
imul
xchg
dec
xchg
shl
into
mov
mov
sbb
les
mov
in
sub
ins
cmp
ja
add
xchg
add
push
jb
test
hlt
mov
jo
jb
push
ja
xor
and
cwde
push
adc
cwde
out
into
jnp
mov
retf
or
xor
or
cld
dec
loopne
xor
sbb
jo
popa
jmp
dec
jno
pop
stos
test
(bad)
icebp
int3
jnp
cli
cs
sub
xchg
adc
(bad)
or
add
nop
push
jge
popf
std
bound
fmul
out
cs
shr
add
push
dec
xlat
pop
push
icebp
inc
mov
jno
ins
sbb
mov
scas
sub
xchg
dec
int3
mov
pop
(bad)
adc
cmp
lahf
mov
(bad)
in
sub
sub
or
imul
loope
cs
fiadd
inc
mov
sbb
xchg
push
cs
sub
and
enter
sub
jmp
inc
mov
nop
cmp
test
jge
push
xchg
cmps
cld
and
mov
dec
movs
jno
out
loope
lods
pusha
icebp
sbb
and
lahf
jg
and
or
jns
outs
loopne
or
sub
(bad)
adc
iret
pop
and
cmp
pop
sub
mov
dec
call
std
push
(bad)
mov
pop
jl
pop
les
cwde
dec
(bad)
test
jge
jbe
pop
pop
dec
push
jo
loop
std
cmps
sub
lods
push
sub
sub
cmp
sti
(bad)
mov
pop
(bad)
(bad)
cmp
mov
jg
jge
adc
mov
inc
push
dec
icebp
cld
shl
sbb
xlat
aas
add
mov
test
and
dec
out
in
pop
sti
jl
add
popf
mov
cmc
inc
cwde
xor
fild
ficomp
je
imul
mov
cmp
cmp
mov
(bad)
cmps
jp
mov
pop
and
mov
call
cmc
stos
xchg
or
jne
cmp
out
or
es
add
xor
(bad)
sub
(bad)
shr
fwait
test
dec
mov
lods
sbb
dec
and
rcl
lods
sahf
jp
jno
fild
xlat
(bad)
std
sub
adc
xchg
out
or
cli
xchg
mov
jle
dec
pop
mov
call
xchg
in
out
xchg
sbb
or
cmp
dec
push
fs
idiv
pop
mov
mov
gs
fs
fist
sahf
jno
lock
jns
fcomip
jp
repz
adc
lahf
(bad)
sbb
jmp
push
out
inc
push
adc
jae
loope
aaa
jbe
sar
pop
ret
pop
shr
mov
(bad)
mov
push
jb
ss
mov
dec
push
cwde
(bad)
lods
icebp
or
add
call
xor
sbb
inc
pop
mov
and
jb
xor
mov
cmp
push
mov
adc
das
arpl
ja
test
rsqrtps
jmp
push
and
add
cdq
xchg
mov
jge
in
imul
inc
pop
les
push
arpl
mov
mov
pmaxsw
cmp
jmp
je
push
fld
das
adc
pop
es
sub
sar
sub
fdiv
cmp
mov
sahf
push
leave
jp
mov
loope
movs
fcom
fisubr
jg
adc
xor
arpl
stos
div
les
stos
stc
stc
mov
pop
mov
or
fistp
test
jnp
(bad)
ds
pop
jecxz
jmp
jnp
and
js
test
cmps
dec
mov
outs
push
pop
push
cld
lds
(bad)
ds
test
xor
icebp
mov
(bad)
pop
or
inc
daa
cld
loope
repz
and
inc
in
jnp
icebp
(bad)
sti
or
cmp
adc
mov
push
inc
ja
or
jbe
es
(bad)
ss
gs
call
dec
sub
int
sbb
inc
adc
adc
dec
xchg
icebp
stos
or
pop
rol
mov
push
or
or
sub
(bad)
sbb
xor
pop
mov
xchg
push
mov
inc
sbb
sar
mov
add
inc
jmp
dec
xor
loope
cmp
and
loopne
sti
outs
leave
mov
call
inc
mov
out
(bad)
ins
test
into
cmp
xchg
das
imul
bound
xor
or
repnz
mov
inc
jg
dec
rcl
add
mov
loop
in
xor
add
in
popa
stos
call
mov
test
stos
ja
or
fiadd
loopne
and
out
and
(bad)
scas
(bad)
fist
or
scas
into
imul
es
dec
stos
cdq
sbb
dec
and
leave
pop
adc
inc
adc
sbb
dec
ror
aam
push
imul
sub
push
inc
pop
xor
mov
(bad)
pop
retf
(bad)
(bad)
loope
cmp
pop
xchg
cmp
and
add
call
dec
add
pop
mov
rol
push
sub
int3
adc
xchg
cmp
out
push
xchg
push
dec
cmp
nop
xchg
mov
push
adc
adc
loop
xor
fidiv
or
push
ret
mov
rol
add
imul
or
mov
inc
or
dec
push
out
mov
add
(bad)
jmp
sub
or
les
enter
data16
gs
das
in
jmp
movs
outs
mov
icebp
outs
call
in
xor
sbb
push
(bad)
adc
or
fisttp
test
leave
push
sar
xchg
cmps
pop
mov
jge
ds
pushf
shr
pusha
xor
jns
sbb
dec
inc
sbb
mov
in
mov
jge
fist
rol
pusha
(bad)
xor
mov
add
aad
xlat
xor
lods
fidivr
test
test
mov
data16
mov
or
mov
hlt
int3
mov
ins
popf
adc
or
pop
lds
push
fdiv
xchg
cmp
mov
leave
icebp
cdq
int3
push
xor
movs
xchg
pop
pop
loopne
push
js
sbb
std
adc
sub
loop
dec
inc
ret
or
(bad)
not
mov
add
jbe
(bad)
mov
pop
scas
lods
xor
mov
adc
pusha
paddd
movs
pushf
push
bound
jp
mov
addr16
jl
or
inc
push
sbb
retf
mov
and
test
adc
pop
test
mov
mov
sbb
in
and
add
mov
pop
jnp
xchg
retf
or
lock
ds
jl
fwait
push
jnp
into
movs
lds
xor
jb
dec
pusha
adc
seta
aas
xchg
neg
mov
dec
in
cmp
mov
test
xor
dec
sbb
adc
movs
push
loope
xchg
ds
mov
mov
pop
out
xlat
mov
adc
dec
cmps
lea
or
loopne
sub
xor
pop
and
inc
cwde
out
call
jl
fild
dec
jmp
clc
outs
mov
sbb
imul
or
add
pop
mov
addr16
faddp
js
cld
pop
pop
sbb
outs
sbb
push
inc
push
jp
sbb
pop
or
push
loope
adc
movs
das
ins
push
xor
movs
cmp
sbb
adc
(bad)
int3
in
push
pop
lock
sbb
in
mov
mov
lods
xor
xlat
enter
add
sbb
inc
daa
je
mov
xor
icebp
popa
adc
cdq
push
or
sub
pop
push
mov
aad
adc
test
fcomp
movs
fistp
and
push
in
mov
mov
sbb
mov
fs
lds
inc
mov
cmp
add
adc
adc
adc
jno
in
jmp
and
adc
pop
test
repnz
cwde
(bad)
in
scas
pop
sub
pop
lock
add
mov
int
xor
sbb
lds
addr16
outs
pop
cmc
cmps
ja
adc
xchg
sub
dec
(bad)
pop
rcr
push
movs
push
xchg
js
mov
sub
sub
or
add
pop
xchg
add
scas
inc
mov
aas
(bad)
out
push
mov
mov
mov
adc
pop
pop
xlat
jns
mov
aad
ins
pop
push
nop
loopne
imul
jmp
ret
sub
sbb
mov
dec
test
inc
dec
aad
mov
jge
call
cli
add
fst
push
sub
xchg
int
dec
mov
repnz
out
aad
sbb
add
add
add
out
ss
sbb
or
push
jle
ins
in
jns
lea
mov
mov
sub
mov
lods
xor
jb
addr16
fmul
dec
stos
movs
sti
add
add
mov
pop
push
daa
xchg
jo
popa
lock
adc
jb
xchg
call
push
ss
cmp
or
and
jnp
mov
and
loope
mul
je
test
aam
fcmovne
arpl
add
iret
pop
aaa
add
dec
mov
(bad)
jl
push
iret
jmp
sbb
in
xor
mov
sbb
(bad)
ins
adc
cmp
dec
jl
out
push
retf
sbb
xchg
leave
je
data16
ret
adc
sbb
add
xor
mov
jno
movs
cli
mov
rcl
jecxz
out
add
imul
adc
call
lods
push
mov
sub
test
adc
cld
push
push
test
push
fistp
or
inc
adc
mov
ret
fstp
fist
pusha
push
mov
in
hlt
in
xchg
std
sub
or
push
cmps
fadd
add
push
dec
sbb
cli
call
mov
jge
test
push
dec
ret
imul
dec
push
mov
inc
ins
movs
dec
xor
push
or
pop
test
xchg
std
stc
cwde
das
pop
(bad)
dec
pop
vmwrite
scas
mov
jl
fs
push
retfw
sbb
btr
popa
cmp
dec
jmp
xchg
ror
or
test
push
pop
arpl
hlt
or
fmul
hlt
pop
(bad)
dec
xchg
jmp
push
or
lea
add
sbb
test
push
jns
jmp
(bad)
in
xor
mov
icebp
pop
mov
push
enter
sub
inc
mov
int3
pop
pop
cmp
pop
and
mov
cld
fdiv
leave
xchg
push
pop
stos
mov
xchg
test
shr
mov
loopne
dec
and
gs
lods
mov
ret
jno
stos
mov
(bad)
test
rcr
ror
mov
push
xchg
inc
stos
inc
sbb
aad
jp
add
shl
mov
mov
ja
je
stos
addr16
push
fdivr
dec
push
out
pushf
lock
mov
push
xor
mov
out
push
xor
fmul
into
repz
lds
jg
je
(bad)
jne
dec
repnz
pop
and
cld
adc
mov
in
dec
jmp
ins
imul
mov
shl
xchg
push
sbb
fs
xlat
in
fnstcw
add
xchg
retf
cmps
das
fsub
or
mov
inc
sti
xor
inc
sar
jbe
sub
aas
fwait
das
gs
mov
pusha
inc
mov
push
cmps
test
nop
(bad)
adc
test
jbe
mov
dec
xor
aas
push
neg
repz
push
jle
inc
sub
jnp
clc
mov
outs
sub
addr16
or
in
cmp
inc
mov
jp
icebp
retf
dec
fiadd
mov
mov
inc
leave
test
push
mov
inc
add
pop
outs
hlt
cld
sbb
add
das
cmp
mov
shl
out
mov
mov
(bad)
mov
adc
(bad)
loopne
pusha
inc
call
out
jo
cwde
mov
int3
push
test
fs
push
mov
inc
call
lock
mov
lea
mov
out
push
not
jl
scas
cld
jge
scas
repnz
fstp
loop
lock
sub
inc
sar
sub
call
inc
cwde
shr
mov
push
mov
push
mov
pop
mov
sbb
xor
cmp
ror
xlat
cmps
in
adc
add
test
mov
jecxz
dec
jno
std
sahf
jle
inc
mov
sahf
scas
out
jg
push
jl
sbb
add
pushf
adc
pop
mov
and
mov
movs
dec
test
xor
pop
fldcw
icebp
adc
loopne
push
jecxz
in
cmp
add
mov
aaa
push
sbb
push
xchg
push
clc
(bad)
daa
js
aad
cmp
add
or
cld
das
(bad)
pushf
ins
fadd
ins
xor
mov
push
(bad)
mov
icebp
jne
sbb
shl
dec
das
shr
mov
pop
shl
imul
test
xor
mov
loope
out
jae
(bad)
(bad)
scas
jmp
les
int3
add
scas
daa
das
ror
mov
push
pushf
lds
test
jbe
xchg
adc
es
icebp
ficom
pop
loopne
sub
mov
pop
xor
or
cmp
cwde
mov
push
jecxz
je
fidivr
pop
push
sbb
cmp
in
push
sub
into
adc
cmp
gs
jbe
(bad)
fsubr
cdq
es
sbb
bound
mov
mov
inc
retf
sti
push
dec
adc
movs
sahf
jle
out
jo
jg
adc
int3
pop
jns
shl
retf
mov
dec
movs
pop
pop
retf
stos
cmp
jb
dec
jb
sub
dec
sbb
lock
mov
mov
je
xor
xchg
stos
jmp
push
lahf
(bad)
or
jae
mov
add
and
fisub
jl
in
out
stos
mov
outs
arpl
or
xor
gs
imul
cmc
gs
ret
sahf
and
lock
dec
push
and
repz
push
movs
sbb
dec
mov
nop
sahf
aam
dec
ffreep
sbb
mov
fstp
dec
xchg
cld
daa
or
imul
inc
test
xor
inc
cmps
sub
ins
(bad)
es
mov
fcomp
in
push
out
ins
push
pop
sbb
adc
(bad)
shrd
daa
sbb
iret
mov
pusha
mov
push
mov
movs
cmp
in
mov
retf
mov
and
fnstsw
in
xor
or
retf
retf
pushw
adc
repz
imul
div
inc
loopne
dec
lods
sbb
or
xchg
xchg
retf
mov
add
xor
add
xchg
imul
lock
push
xchg
adc
in
push
in
fbld
push
sub
movs
jns
inc
aad
(bad)
xchg
inc
push
icebp
imul
jge
shl
mov
sub
iret
sub
cmp
in
scas
retf
sbb
jmp
pop
jb
pop
in
push
xchg
je
loopne
xchg
mov
cmp
in
call
dec
pcmpgtw
jo
popf
stc
inc
js
xor
jp
or
cmps
out
sub
arpl
lock
or
out
loope
pop
xor
push
pushf
fnsave
jbe
mov
push
int
sbb
lahf
ja
push
nop
pop
lods
xor
js
in
pop
push
pop
mov
xchg
push
dec
cwde
std
and
add
ret
xor
push
ret
in
in
idiv
inc
in
dec
(bad)
frstor
in
sub
mov
and
or
stos
push
adc
das
mov
loopne
sbb
mov
aam
and
das
and
xor
mov
push
jne
xor
les
fld
sub
dec
xlat
fisubr
idiv
repz
addr16
lahf
push
movs
das
xchg
or
ror
push
fidivr
std
pop
out
adc
fmul
loop
ret
cmp
push
ins
(bad)
jo
jle
push
in
cmps
je
leave
pop
in
cmp
fisub
(bad)
cmc
mov
int3
push
inc
ffree
in
pop
inc
ficomp
ror
js
iret
ficomp
push
in
out
xchg
mov
test
movs
int
test
fnstenv
dec
in
add
add
je
push
ss
push
inc
ins
lahf
jl
aaa
push
sti
lahf
rol
mov
cmp
sbb
outs
inc
jge
ret
xchg
sbb
push
jl
jmp
add
jnp
dec
jae
add
int
mov
mov
dec
jl
push
xchg
mov
adc
xchg
out
aas
add
xor
pop
jp
push
mov
mov
scas
repz
xlat
add
mov
mov
mov
add
neg
xor
bound
push
cmp
jne
cwde
pop
mov
repnz
or
and
jb
cmp
pop
mov
test
adc
int3
les
push
sti
xor
jo
mov
pop
cwde
mov
pop
vpunpcklwd
mov
gs
cmp
cmp
aad
xchg
(bad)
stc
sub
xor
mov
gs
sbb
pop
inc
rcl
xor
jecxz
sbb
push
(bad)
cmp
pop
loop
xchg
fidiv
cs
inc
daa
sbb
cdq
jmp
repnz
jae
or
push
movs
scas
jmp
adc
jge
(bad)
jns
adc
inc
inc
ja
not
inc
or
inc
out
inc
inc
dec
xchg
and
push
or
addr16
pop
pushf
and
mov
pop
jecxz
sub
std
or
sahf
or
addr16
ret
in
mov
out
test
inc
cs
pop
xlat
test
mov
popa
rol
not
jb
leave
adc
fdivr
fimul
popa
add
push
mov
cmp
adc
sar
inc
aas
repnz
je
cmp
mov
add
fst
mov
ds
mov
xor
cmps
sbb
jae
int
cs
repnz
sbb
in
mov
jmp
lea
(bad)
xor
rcr
rcl
mov
push
(bad)
or
lds
es
into
out
retf
dec
and
jmp
in
push
mov
jne
bound
clc
push
mul
push
pop
rcl
and
imul
call
(bad)
mov
jbe
fldenv
int
sub
sub
push
jmp
push
xchg
mov
jl
mov
les
and
imul
pop
imul
add
or
lahf
cli
lods
adc
rcr
retf
mov
xor
and
xchg
ss
dec
outs
and
dec
mov
pop
xlat
mov
loop
pop
mov
aam
or
push
scas
ins
stos
call
push
push
cmc
loop
aad
cmps
movs
int
call
and
mov
adc
fisttp
or
mov
push
mov
call
stos
and
out
pop
call
mov
sti
adc
mov
push
(bad)
call
jecxz
aad
mov
cwde
inc
push
xor
push
pop
femms
or
pop
rol
ss
jo
inc
xchg
mov
push
data16
mov
cli
cld
ror
arpl
movs
je
add
push
std
mov
stos
jecxz
or
fdiv
call
push
sbb
fs
push
and
pop
cmp
mov
pop
cdq
(bad)
lock
mov
mov
sbb
sub
daa
mov
ret
cld
sub
jbe
les
inc
repnz
jno
cmp
push
push
adc
leave
fdiv
xor
jns
cmp
sahf
jmp
mov
xchg
mov
ret
test
or
mov
or
leave
xor
scas
retf
(bad)
sbb
daa
xchg
push
and
inc
mov
punpcklbw
paddusw
ja
clc
adc
xor
push
push
fadd
pop
mov
aas
jge
jecxz
div
dec
pop
and
call
dec
nop
je
xchg
cmp
mov
gs
ss
jmp
jmp
xchg
(bad)
adc
stos
in
ds
shl
bound
adc
and
xor
lahf
xchg
cli
jmp
and
cmc
adc
push
lock
sbb
jg
in
js
js
mov
inc
xor
pop
mov
pop
jb
mov
sub
adc
fbstp
enter
test
pop
cmp
sub
push
out
xchg
push
fild
cli
cmp
mov
jno
sbb
xchg
repz
mov
mov
lods
aaa
cld
push
sbb
xchg
repnz
pop
mul
xchg
js
imul
push
ret
fwait
add
stos
out
out
push
push
or
jl
hlt
aam
mov
aam
jle
inc
xchg
xor
xor
rcr
xchg
mov
sub
push
sub
inc
into
xchg
fs
inc
popa
nop
repnz
int
les
retf
jbe
sbb
or
sbb
je
imul
aad
push
or
push
(bad)
mov
adc
pop
mov
inc
ds
stos
fwait
dec
nop
pop
sbb
and
mov
in
mov
pop
in
cld
retf
push
sub
inc
xor
(bad)
test
jecxz
mov
daa
mov
(bad)
icebp
mov
jo
retf
sub
sbb
pop
es
add
call
cmp
(bad)
jo
jns
aam
pop
mov
out
and
int
inc
cli
mov
cld
pop
or
les
mov
jbe
add
or
adc
mov
test
xchg
popa
imul
fsubr
outs
xchg
adc
sub
xor
xor
or
jge
jno
push
sbb
aad
(bad)
fmul
adc
push
mov
repz
jecxz
icebp
xchg
out
pop
out
sub
xchg
loopne
fild
iret
mov
dec
ror
retf
xchg
add
fwait
mov
and
mov
pop
std
mov
adc
xchg
out
addr16
out
mov
popf
mov
mov
xlat
cmps
mov
pop
imul
cs
push
enter
push
loopne
dec
jl
cld
add
arpl
xchg
push
pop
(bad)
push
mov
push
pop
mov
jae
loope
sbb
jbe
add
sbb
test
jle
adc
xchg
pusha
fistp
mov
adc
or
or
leave
sub
mov
call
adc
aaa
push
ds
mov
dec
imul
call
pop
mov
push
sub
or
mov
xchg
mov
mov
(bad)
add
cmp
sub
inc
sbb
mov
aad
sbb
lahf
imul
pop
or
out
mov
sub
test
leave
sbb
out
clc
dec
fs
fstp
mov
repnz
mov
sub
mov
ret
enter
lods
or
or
jno
pusha
and
push
cmps
jl
dec
and
ret
add
or
push
jbe
pop
fs
xchg
les
jmp
sti
call
mov
jae
int3
mov
sbb
push
jbe
jp
(bad)
test
test
hlt
cmp
loop
aas
jmp
inc
push
nop
sub
pop
sbb
icebp
addr16
jb
loop
adc
mov
and
lds
inc
cmp
jl
sysenter
shl
shr
sti
cwde
stos
ror
and
ja
retf
imul
out
jge
out
fstp
test
cmp
xchg
xor
mov
shl
mov
jae
and
mov
cmp
out
sub
sbb
cmps
push
push
jne
stc
xchg
cmp
repnz
dec
pop
(bad)
lock
int
add
shl
xor
dec
dec
sbb
jmp
xor
jle
inc
ret
sbb
in
sbb
sbb
int
sar
xor
push
iret
std
sbb
leave
dec
call
push
and
in
push
mov
rcr
sbb
xchg
push
les
icebp
imul
out
sbb
stos
int3
xor
jmp
cmp
cmp
xchg
lds
test
jb
push
scas
cmps
popa
loopne
dec
aas
mov
imul
jmp
xor
lods
out
xor
scas
cmc
cmp
aad
ja
mov
sahf
adc
push
xor
push
fidivr
push
jbe
ins
jo
mov
fsub
rol
gs
stos
jbe
dec
call
int
mov
cdq
mov
mul
mov
add
loope
icebp
push
dec
sub
jns
loopne
mov
sub
sbb
popa
cmp
sub
ins
lahf
push
cwde
popf
test
and
xchg
ja
dec
int3
(bad)
jmp
call
add
mov
mov
ins
xor
add
imul
xchg
out
in
cmp
add
ins
cwde
sbb
test
stos
cdq
dec
sub
stc
call
repz
jge
inc
cmp
imul
xchg
scas
sub
sub
out
sub
aas
sbb
inc
inc
mov
inc
sub
adc
frstor
xchg
add
pop
xchg
pop
push
(bad)
mov
cmp
stc
jo
adc
cmc
rep
lock
stos
retf
test
test
stos
pop
rcr
jmp
inc
fwait
ja
sti
jl
lods
call
push
(bad)
pop
push
movs
in
jb
pushf
add
arpl
ret
and
cmp
retf
mov
inc
mov
popa
jne
and
fs
addr16
adc
in
sub
std
(bad)
in
(bad)
pop
push
adc
stos
adc
es
mov
or
scas
sub
sti
mov
xor
mov
outs
fst
xchg
push
add
mov
xchg
mov
arpl
cmp
mov
pop
jo
add
jmp
sbb
inc
test
pop
sti
inc
retf
jbe
fimul
cmps
push
gs
push
dec
and
inc
fcmovnu
xor
retf
cmc
inc
jg
popa
sbb
sar
mov
repnz
bound
jb
or
fmul
add
sub
bound
mov
mov
retf
mov
mov
int
pop
jmp
jmp
stos
pushf
add
push
jle
nop
add
scas
lds
stos
fsubr
inc
and
inc
mov
inc
xchg
push
cs
and
sahf
lds
and
xchg
movs
push
sti
mov
aaa
mov
jae
rcr
fcom
push
push
popa
pop
movs
sub
dec
rol
clc
jnp
pop
and
repz
fst
(bad)
or
fidivr
or
not
std
xlat
loop
and
rcl
push
xchg
sub
add
jmp
jnp
mov
ins
and
aam
pop
addr16
sahf
sub
aad
test
jg
inc
outs
jl
adc
push
adc
call
lock
adc
pop
loopne
dec
or
and
mov
pop
push
call
add
sub
sbb
mov
jmp
jmp
mov
push
ror
xor
cmp
sub
sbb
loope
inc
add
call
xchg
inc
inc
popf
mov
js
or
pop
loopne
push
dec
cld
cmp
mov
imul
cmc
rcl
call
push
jae
loopne
jg
dec
test
repnz
cdq
mov
mul
push
lds
push
int
fwait
jns
mov
in
dec
test
sub
and
(bad)
adc
iret
repnz
ins
loop
push
outs
mov
or
jb
cmc
neg
cmp
leave
inc
or
cmp
push
js
pop
pop
(bad)
mov
and
push
sbb
dec
jne
stos
jne
test
mov
cmp
ins
push
dec
iret
adc
hlt
push
out
jecxz
or
jnp
pop
retf
inc
push
ss
les
loopne
out
and
aad
enter
jmp
mov
pop
enter
lods
xor
sahf
call
mov
add
test
clc
or
xchg
mov
fsub
dec
mov
push
call
imul
dec
sub
inc
and
ss
(bad)
rol
push
fcmovbe
push
stos
inc
popf
addr16
test
sti
sub
mov
enter
out
xor
outs
or
(bad)
or
mov
mov
adc
int
cmps
or
inc
sub
xchg
jb
cmp
sbb
jg
stc
loopne
inc
enter
mov
pop
scas
test
sub
push
or
jb
out
xor
pop
std
in
add
lods
lea
jmp
dec
fs
or
hlt
repnz
rol
cmp
pop
push
jmp
mov
in
and
aaa
stos
jmp
inc
cli
lea
lds
jp
shl
ins
in
out
sti
pop
dec
clc
and
pop
or
retf
rcl
ins
cdq
mov
sub
or
iret
pop
or
cmp
inc
aas
scas
push
popa
jmp
mov
(bad)
adc
inc
dec
inc
and
shl
push
sbb
pop
pop
mov
stos
mov
ud0
xchg
loop
lahf
cmp
and
mov
das
xchg
retf
sub
push
jno
add
mov
sub
add
add
xchg
stc
(bad)
sti
jo
gs
add
mov
or
clc
pop
xchg
inc
rcl
mov
sbb
inc
and
shl
pop
(bad)
lock
popa
cmp
push
adc
xchg
or
lahf
lea
cmp
push
seto
mov
dec
out
out
mov
scas
pusha
mov
popa
je
repz
mov
and
out
jbe
inc
mov
test
inc
fmul
mov
loopne
xchg
cmp
push
jmp
mul
cmp
xchg
dec
jecxz
jmp
fistp
mov
dec
inc
lea
ins
dec
imul
nop
jnp
div
or
lds
icebp
jle
push
push
cmp
mov
ins
inc
outs
sahf
mov
sar
push
in
imul
mov
in
sbb
getsec
cdq
movs
adc
mov
stc
xchg
rcl
inc
rol
sub
(bad)
push
push
and
inc
fbstp
fcomp
push
pop
inc
fdiv
(bad)
mov
and
pop
in
pushf
mov
push
movs
ins
jo
gs
inc
call
sahf
fs
or
inc
sti
xchg
inc
or
rol
cmps
aam
inc
adc
mov
mov
stos
retf
add
test
cmps
xor
aad
push
mov
mov
sub
out
sub
fidiv
dec
sahf
mov
icebp
ja
cwde
xchg
test
jns
mov
dec
jle
fwait
(bad)
mov
sub
cmp
push
mov
push
data16
dec
jl
xchg
jbe
inc
ficom
ja
pop
test
and
rcl
push
and
fldenv
(bad)
and
push
and
vmovups
add
add
mov
les
aaa
sub
pusha
dec
call
xor
jecxz
cld
es
xchg
rcr
cmc
mov
jge
fwait
or
xor
dec
sbb
add
add
hlt
add
ficomp
jbe
pop
fxch
push
test
dec
add
test
fs
cmp
(bad)
jns
dec
fsubr
push
inc
pop
rol
inc
dec
push
sar
dec
popf
jmp
dec
call
jbe
xchg
aaa
cld
jmp
sbb
adc
ja
pop
inc
popa
mov
rol
push
(bad)
std
rcr
call
and
fldenv
stos
mov
into
add
jno
and
fisttp
sar
pop
dec
push
cmc
movs
into
inc
mov
mov
enter
hlt
jo
mov
mov
and
dec
out
sub
lock
pop
add
mov
popf
(bad)
test
xor
pop
add
and
call
push
in
int3
rcr
sbb
xor
pop
repz
add
xor
cmc
xchg
push
sub
push
cmp
inc
cld
loop
mov
lods
push
add
adc
jp
mov
mov
and
pop
pop
adc
pop
or
lods
add
lock
das
sahf
pop
pop
fmul
ins
ds
sbb
mov
loopne
mov
xor
add
(bad)
dec
mov
jne
push
loopne
add
xor
mov
sar
dec
mov
outs
push
not
sub
retf
push
(bad)
movs
or
add
add
(bad)
mov
dec
sbb
lock
daa
(bad)
test
push
xchg
jg
dec
test
mov
outs
inc
push
adc
(bad)
adc
out
imul
and
movs
lods
mov
and
xor
and
pop
mov
xor
fnstenv
jno
mov
xchg
adc
lock
test
in
jg
adc
mov
jns
push
int3
bound
dec
mov
or
jge
aas
lea
and
add
div
iret
in
test
mov
mov
push
enter
adc
cmps
inc
mov
sbb
int3
or
pop
(bad)
adc
movs
mov
or
cmp
inc
arpl
push
scas
push
push
dec
ins
jmp
out
fisubr
in
lods
add
pop
shl
push
or
fmul
loope
or
mov
out
xchg
pop
sbb
sbb
jp
or
imul
push
jo
in
arpl
mov
popa
lea
test
dec
in
mov
xor
add
xchg
lods
gs
lock
sar
jno
shl
aam
(bad)
mov
les
jno
movs
sub
inc
loope
mov
int3
mov
scas
pop
fdiv
jns
push
movs
or
and
mov
fs
mov
jo
adc
jge
inc
cmp
repnz
cmp
out
sti
cmps
xor
popa
dec
push
out
outs
shl
mov
and
add
xchg
push
xor
les
adc
jo
movs
ins
push
inc
int3
sub
icebp
inc
mov
movs
jmp
jb
and
push
fwait
xchg
mov
push
pop
fcomp
mov
add
adc
popf
pop
imul
imul
adc
js
pop
in
push
pop
(bad)
cmp
lods
lods
mov
sub
int3
sub
jp
jle
(bad)
push
lock
inc
pop
les
hlt
arpl
bound
repz
mov
lock
fadd
pop
or
mov
and
hlt
in
sti
bnd
ja
jno
mov
mov
sbb
sti
in
lgs
dec
adc
cmp
xlat
lds
mov
pop
cli
adc
pop
pcmpgtw
adc
std
jne
daa
xchg
push
pop
cmp
jp
test
sub
pushf
push
add
pop
pusha
sub
mov
ficom
or
enter
popf
test
pop
es
mov
in
ja
push
jl
movs
dec
ret
dec
pop
push
mov
xor
(bad)
xor
inc
mul
into
mov
mul
mov
dec
imul
(bad)
push
cs
pop
arpl
enter
fs
cwde
mov
std
push
sar
int
sub
sbb
sti
xor
cmp
iret
add
mov
mov
or
ror
mov
call
out
stos
addr16
repnz
ja
(bad)
enter
lods
loop
mov
enter
cmp
and
div
imul
and
sub
mov
(bad)
ins
loope
out
fst
sbb
lahf
lds
push
mov
xlat
mov
mov
outs
mov
leave
movs
mov
and
jmp
fiadd
xchg
daa
mov
hlt
jmp
leave
out
sbb
sar
ror
test
cld
cmps
cs
and
push
lock
pop
rol
inc
stos
push
and
daa
ret
add
inc
xor
xchg
fisttp
push
stc
cmp
loop
or
push
xchg
add
mov
dec
cmc
sub
fsub
mov
adc
fwait
out
inc
mov
minps
and
mov
xchg
inc
inc
nop
(bad)
push
mov
jmp
pop
push
mov
inc
loope
(bad)
xchg
dec
cmp
xchg
push
and
jecxz
xchg
fdiv
rol
xchg
push
cld
push
jb
pop
sub
adc
imul
jmp
es
icebp
mov
leave
sub
fcomip
sahf
imul
or
lahf
jnp
mov
and
mov
daa
call
mov
sub
mov
adc
popf
jl
inc
mov
adc
lock
(bad)
daa
push
(bad)
and
pop
stos
sub
mov
xchg
pushf
add
inc
aaa
cmps
pop
mov
xchg
add
xchg
xchg
mov
loop
push
jge
mov
cmps
sbb
mov
clc
mov
jmp
dec
stc
(bad)
adc
or
scas
dec
in
adc
xchg
xor
jbe
movs
jecxz
sbb
div
cmp
lds
clc
outs
lahf
xchg
dec
mov
int3
mov
daa
jne
imul
outs
test
and
and
bound
sbb
jno
mov
mov
xor
je
(bad)
enter
cmc
mov
std
mov
dec
mov
push
jl
sbb
adc
or
inc
sbb
mov
int
xor
inc
int3
lods
jmp
mov
push
es
xchg
ins
pusha
icebp
retf
nop
rcl
mov
xchg
icebp
adc
jl
pop
scas
or
js
push
or
xchg
mov
clc
hlt
xlat
mov
sbb
sti
popf
xor
(bad)
hlt
outs
dec
adc
call
xchg
adc
sbb
out
neg
mov
xor
adc
out
das
jp
imul
imul
lds
jne
push
jno
sub
shl
pusha
jae
data16
(bad)
push
xchg
std
inc
or
loop
aas
xchg
adc
inc
jmp
cwde
lea
jle
jne
xchg
iret
pushf
fs
inc
or
xchg
ins
inc
add
sub
push
dec
hlt
pop
sub
and
mov
in
inc
mov
sbb
dec
neg
popa
xor
std
push
jnp
mov
mov
jmp
pand
xchg
pop
jo
pop
xor
pushf
push
add
lahf
mov
ss
mov
(bad)
xor
fwait
and
adc
pop
dec
iret
push
mov
sar
dec
int
hlt
into
jp
dec
aam
out
dec
jmp
sub
push
push
pop
sub
mov
inc
dec
dec
pop
cs
addr16
imul
mov
jl
jne
out
scas
lea
shl
sbb
icebp
pushf
(bad)
xor
sbb
mov
add
cmp
push
ret
popa
sub
(bad)
jmp
jecxz
and
call
and
aad
sar
mov
dec
cmp
cmp
push
rep
int3
add
sub
das
stos
mov
pop
jmp
add
inc
mov
loop
mov
mov
stos
dec
or
cmp
popf
icebp
mov
stos
retf
test
clc
inc
dec
jmp
xor
sbb
js
and
pushf
call
or
inc
and
out
cwde
sbb
cwde
jns
ds
mov
jmp
mov
xor
pop
jnp
je
aam
fwait
shr
ds
pop
mov
pop
jle
dec
or
xor
cmp
enter
cdq
data16
xchg
xlat
sub
and
pop
ret
inc
xor
sbb
mov
cmp
mov
adc
addr16
ins
imul
int
(bad)
in
and
and
mov
xor
cmps
sbb
and
out
(bad)
sar
sti
test
push
sbb
iret
push
sub
mov
cmc
mov
ins
xor
inc
stos
xchg
test
dec
jbe
push
bswap
sub
sbb
rol
or
cmp
ret
xchg
jecxz
xor
dec
mov
mov
jl
mov
mov
std
xor
aam
cdq
sti
ret
js
cmp
popa
repz
sub
ins
mov
pop
jp
scas
int3
mov
adc
lods
push
and
shl
sub
jae
nop
cmps
pop
mov
retf
out
push
inc
xor
xor
mov
(bad)
push
adc
sub
into
icebp
(bad)
dec
inc
mov
pushf
add
es
jo
mov
ret
stos
jo
push
adc
in
jns
repz
mov
(bad)
jmp
xor
shl
cwde
and
mov
hlt
ins
adc
xchg
retf
stc
test
bound
dec
sbb
movs
jmp
out
ss
add
sub
in
daa
pop
xchg
pop
sbb
loop
shl
leave
xchg
jl
pushf
pop
lods
xchg
cmp
jge
or
sub
ins
dec
xchg
fcmovne
mov
in
dec
mov
jge
mov
pop
(bad)
push
js
cmps
jge
xor
xchg
ins
fisttp
xchg
adc
loop
nop
mov
out
adc
xchg
add
and
jno
inc
cdq
mov
outs
(bad)
xlat
pop
stos
fisubr
imul
out
mov
push
adc
aam
dec
fld
push
lahf
xchg
(bad)
jnp
int3
inc
fisttp
(bad)
(bad)
cli
push
or
cmp
and
jae
push
nop
loop
mov
icebp
and
dec
cmps
iret
mov
inc
xchg
jl
adc
in
scas
ret
retf
xchg
in
fsubr
mov
sub
or
fst
and
cmp
sbb
jne
mov
inc
xchg
jnp
ins
xor
jnp
data16
ja
or
aam
retf
or
push
(bad)
rcl
cmp
adc
dec
push
mov
(bad)
mov
mov
push
add
xor
and
jbe
and
imul
out
movs
ja
jp
jmp
and
add
pop
push
mov
outs
push
out
aas
xchg
test
(bad)
imul
xchg
mov
mov
jne
and
sbb
cmp
and
in
shl
dec
or
fisubr
test
xor
jb
jno
cli
scas
fs
xchg
adc
pop
enter
sbb
sub
sbb
hlt
repz
sbb
push
arpl
sbb
push
mov
data16
(bad)
pop
js
add
into
or
out
mov
jmp
or
push
mov
push
(bad)
push
jae
lods
out
sbb
mov
lods
or
cmp
push
sub
cmp
pop
xor
aad
pop
jmp
adc
or
in
and
jae
sub
xchg
imul
jbe
xlat
cs
mov
rol
mov
das
inc
sbb
gs
cmps
retf
xor
out
test
pop
mov
jb
loope
mov
fdiv
sahf
mov
push
pushf
adc
jl
jb
rol
sub
push
cwde
mov
int3
cwde
stc
ds
ins
jle
sar
cmp
lock
add
ins
sbb
and
dec
cmp
pop
push
and
xor
iret
dec
aam
ret
int3
leave
js
icebp
popa
nop
nop
dec
call
iret
std
ret
fdiv
sti
xor
dec
int3
pop
xchg
sahf
pop
cmp
out
out
shl
enter
push
(bad)
and
in
sbb
inc
ins
in
sbb
jle
jo
int
xchg
out
je
out
adc
jno
call
dec
ins
int3
push
mov
xchg
ficom
push
xor
or
int3
xchg
inc
xchg
je
jg
dec
shr
inc
push
arpl
jp
xlat
je
imul
mov
pop
inc
xchg
js
movs
mov
sbb
out
push
test
dec
pop
and
imul
pop
mov
xchg
stc
cli
test
pop
dec
and
hlt
movs
ret
sub
push
out
dec
mov
mov
jle
mov
push
xchg
test
mov
aas
adc
push
jle
dec
or
jnp
je
std
ins
packssdw
cmps
mov
cmp
jne
and
cdq
mov
and
add
cmp
sub
add
mov
and
iret
aad
ds
add
addr16
jle
nop
pop
push
jge
out
and
je
dec
scas
mov
call
ss
lock
retf
int3
in
pop
sub
adc
dec
mov
cmp
mov
popf
xor
push
retf
mov
shr
cmc
pop
sub
hlt
out
adc
dec
push
sbb
or
(bad)
pop
mov
adc
call
aaa
out
cdq
cwde
dec
mov
sub
inc
ror
jp
mov
sbb
pop
push
dec
js
daa
stc
jne
mov
mov
jl
outs
jle
(bad)
cmp
fisttp
adc
fstp
lock
ins
mov
or
pusha
add
in
retf
and
shl
int
icebp
fwait
test
push
fidiv
loope
pushf
sbb
cmp
rol
pop
sub
cmp
jl
xchg
imul
sbb
pop
nop
dec
or
outs
cmps
loopne
xchg
pop
push
sbb
add
cmp
or
(bad)
ret
pmullw
fisubr
mov
outs
hlt
cmp
popf
out
repnz
fwait
stos
xchg
mov
fdivr
dec
mov
aam
fisub
sbb
repnz
jnp
mov
push
sub
mov
sti
cli
or
sbb
mov
add
lock
sub
cwde
movs
cmp
add
push
les
and
es
std
int
dec
inc
lock
xchg
clc
push
sub
test
iret
jne
rol
dec
pop
inc
and
xchg
dec
lods
iret
fst
adc
jge
int
push
dec
ds
les
sbb
js
pop
ja
daa
jl
into
jno
sub
add
xor
or
mov
and
out
ror
xlat
call
clc
sti
inc
fsubr
cmps
sub
xor
ficom
aas
push
outs
rol
jecxz
mov
stos
add
mov
mov
jne
mov
xor
out
xchg
packssdw
xor
pop
mov
mov
dec
pop
adc
dec
ins
call
dec
pop
daa
cwde
sub
cmp
xor
adc
sub
sub
xor
mov
push
mov
fmul
out
add
adc
pop
dec
inc
nop
or
xor
jno
loope
enter
push
sti
outs
popf
mov
lods
xchg
mov
add
mov
call
pushf
dec
aaa
and
push
adc
loop
fisubr
mov
int
pop
and
aas
mov
push
dec
stos
out
and
pop
mov
add
fnsave
pop
sbb
pop
adc
aad
and
loope
movs
adc
mov
in
dec
in
out
and
mov
jge
dec
fwait
out
inc
rol
push
ret
ror
imul
push
cs
mov
push
adc
mov
pusha
dec
jno
xor
sbb
stos
imul
and
cmps
sti
push
bound
sub
in
sti
cmps
jp
aaa
mov
cmp
hlt
fidivr
lahf
jge
inc
ins
push
inc
in
jno
pop
ret
xchg
fadd
ret
loop
cld
and
cli
jp
dec
pop
in
push
aas
dec
(bad)
adc
dec
mov
addr16
sub
shr
mov
jecxz
mov
and
aam
adc
ins
hlt
push
cmp
mov
pop
cs
sahf
jl
enter
and
nop
xor
pop
cli
cmp
pop
xor
adc
or
cli
pop
test
and
add
clc
(bad)
in
ss
sbb
push
ja
xchg
mov
pop
daa
push
mov
add
in
int
not
xor
jb
repnz
cmps
mov
xlat
cmp
or
int
bound
aad
xchg
jno
ret
xor
fbld
pop
sbb
pop
sub
call
xchg
out
mov
jns
gs
add
dec
push
(bad)
je
js
inc
stos
js
or
cmp
mov
push
lahf
loopne
sub
test
adc
add
push
cdq
in
loop
lds
cmp
jnp
test
dec
push
xchg
adc
ss
xchg
jb
movs
pusha
jmp
or
aad
lods
push
gs
mul
and
cmp
(bad)
test
ror
jb
sub
cmps
int
sbb
call
int3
ja
cmps
ins
cs
push
push
pop
out
mov
mov
jbe
xchg
leave
loop
jbe
inc
inc
in
test
rol
loopne
sub
xchg
and
dec
jbe
mov
cli
(bad)
push
inc
xchg
ins
xor
dec
cmp
mov
or
aas
sbb
ja
lds
stos
xchg
pop
add
std
mov
jb
or
or
push
in
dec
sub
or
add
scas
push
scas
pop
pop
push
sub
into
je
mov
outs
and
sbb
rol
sahf
mov
dec
out
movs
pop
pop
mov
and
gs
test
int
imul
jo
jbe
add
inc
pop
scas
pop
sub
out
push
call
pop
mov
in
cmp
push
inc
jecxz
sahf
sub
mov
stos
push
lods
cdq
xchg
inc
rcl
sbb
mov
jmp
mov
push
xchg
rcl
sub
dec
js
xchg
mov
jle
xor
out
mov
lods
mov
xchg
fadd
xor
lock
pop
popf
repz
mov
leave
inc
mov
in
jbe
and
mov
or
sub
icebp
cmp
mov
rcr
lock
jns
mov
mov
sub
xchg
fld
adc
pop
push
mov
aaa
test
dec
lods
addr16
ret
sub
retf
and
jo
fimul
int
cdq
sub
icebp
test
cmps
mov
test
adc
addr16
xor
dec
clc
loop
int3
push
mov
scas
in
jno
rol
popa
or
test
mov
cld
and
add
std
jb
cmp
fs
add
adc
or
test
jnp
daa
test
shl
movs
sbb
xchg
mov
cmp
cmps
mov
loopne
mov
mov
mov
les
test
out
pop
mov
pushf
je
in
mov
jbe
xchg
clc
scas
push
or
jae
push
sahf
push
mov
or
mov
pop
xor
ss
or
dec
mov
pop
push
repz
mov
cmovae
arpl
pop
pop
xor
xor
rol
fistp
push
jnp
sub
mov
fstp
addr16
mov
(bad)
fdivp
inc
push
ds
or
lds
push
add
or
aaa
jg
out
mov
xchg
xor
jl
mov
in
inc
or
or
pop
push
lds
stc
xor
and
add
adc
and
add
inc
and
inc
xchg
jo
pop
pop
leave
mov
aam
lahf
loop
and
or
and
cdq
pop
nop
nop
stos
icebp
shl
movs
shl
and
sub
fs
add
inc
pop
cmp
ret
xor
dec
arpl
jo
ins
xor
jbe
mov
inc
dec
adc
cdq
or
sub
pop
outs
sbb
cmp
or
cld
jl
and
retf
js
shl
jns
test
into
cwde
push
pop
push
sar
js
cmp
call
ret
fmul
xor
xchg
jbe
rcr
pop
inc
pop
ret
dec
aas
pop
(bad)
pusha
mov
fs
adc
hlt
sub
fwait
into
sbb
pop
mov
add
(bad)
lods
xchg
sub
jns
stos
adc
xor
(bad)
imul
mov
(bad)
jne
stos
xlat
mov
xor
(bad)
leave
sub
ins
add
clc
call
push
pop
(bad)
and
mov
xchg
mov
retf
bound
ja
movs
or
sbb
and
repnz
or
jne
fidivr
or
mov
iret
or
fldz
(bad)
out
arpl
jg
inc
fild
ret
inc
int
nop
je
mov
mov
(bad)
mov
pop
retf
cmc
clc
stos
mov
cmp
xchg
popa
mov
int3
scas
into
cmp
xchg
call
jbe
cmps
pop
xor
test
push
cdq
rcr
jo
xchg
mov
mov
adc
inc
lock
jp
push
pop
in
mov
inc
ret
outs
hlt
je
ins
pop
pusha
leave
mov
ins
imul
jp
hlt
sub
sub
je
xor
lock
test
mov
outs
jbe
sbb
push
pop
(bad)
fmul
xor
cmc
test
xlat
aad
scas
jmp
fisubr
lds
lods
cmp
arpl
add
shr
adc
je
ins
pop
xchg
jo
in
and
mov
xchg
mov
ins
sub
push
jne
jge
retf
popf
shl
jae
lods
cs
stos
mov
fwait
lahf
gs
int
push
fs
sub
cmp
jnp
not
push
xchg
cld
and
test
fistp
cmp
cmps
mov
add
xchg
adc
vmread
fimul
cdq
out
and
scas
fisttp
cmp
xor
ficomp
sti
add
test
sbb
dec
or
int
enter
nop
jae
dec
lahf
inc
pop
ins
test
jmp
pop
push
jbe
mov
(bad)
imul
xchg
add
lods
sahf
xor
pop
arpl
xchg
mov
rcl
inc
aaa
adc
test
dec
and
das
and
dec
fmul
or
xor
jnp
mov
loopne
in
stc
mov
aad
loop
inc
mov
or
hlt
pop
fild
dec
cmp
push
pop
mov
sbb
xchg
daa
out
(bad)
int3
xor
xchg
and
add
sub
das
adc
push
sub
jecxz
sbb
inc
mov
xor
rol
adc
addr16
mov
mov
repnz
lahf
fisubr
xchg
mov
cmp
xchg
js
cmp
dec
mov
add
retf
in
cdq
test
sub
add
and
mov
inc
mov
add
adc
ret
or
sbb
sti
push
and
push
sbb
dec
sbb
mov
(bad)
mov
std
aad
les
xlat
stos
fwait
int
xor
dec
dec
mov
fs
jle
ins
push
mov
dec
sub
sub
jmp
iret
js
aas
jno
loop
mov
push
outs
cmp
sti
cmp
push
sub
repnz
pop
outs
adc
push
rcr
dec
mov
adc
sub
movs
pop
cmp
sbb
adc
cld
leave
pop
leave
das
loop
adc
imul
fwait
ror
in
call
scas
imul
pop
ror
mul
push
in
test
cmp
adc
cmp
mov
div
and
adc
pushf
push
mov
pop
cdq
dec
bound
and
and
test
xor
push
add
xchg
fwait
cli
leave
adc
xor
push
js
xchg
retf
data16
and
sub
push
adc
(bad)
fsubr
or
shr
push
loope
pop
les
and
ss
fisttp
jns
adc
cwde
cmp
add
mov
loopne
adc
jbe
in
(bad)
push
icebp
int3
cmp
jl
popa
in
xor
test
adc
adc
scas
in
leave
ret
push
push
push
test
mov
push
mov
(bad)
sub
call
jp
cmp
dec
fs
pop
jae
xchg
jmp
sbb
mul
inc
xchg
xor
dec
pop
push
test
xchg
clc
and
das
loop
sbb
mov
xor
mov
push
jle
lds
jl
or
jle
sahf
mov
imul
or
and
lods
hlt
sbb
mov
inc
aam
out
aad
pop
cmps
mov
cli
movs
mov
in
and
iret
retf
fcomp
adc
lahf
or
es
loop
push
fdiv
or
pop
add
jns
jne
mov
xchg
int3
psrld
inc
jecxz
adc
fst
jb
mov
cld
xchg
jle
dec
nop
mov
mov
jns
fisub
gs
push
xor
retf
cld
mov
mov
and
mov
xchg
fs
push
xor
adc
xor
lods
cmp
loope
jecxz
xchg
cmp
pop
vunpckhps
xor
lods
call
in
out
sbb
in
leave
mov
xor
xchg
adc
inc
push
sub
mov
nop
cmps
stos
imul
dec
js
jns
sahf
and
and
mov
cli
jbe
add
jns
push
jno
cld
scas
pop
scas
dec
cmp
and
shr
das
in
xchg
xchg
pop
ds
push
sbb
movs
push
cmps
cld
daa
mov
mov
sbb
push
test
mov
loope
cdq
cmp
iret
push
cmp
and
test
mov
adc
add
hlt
jecxz
mov
push
jge
inc
test
mov
or
xor
ss
fsub
sub
shl
fs
sbb
pop
dec
cli
iret
add
adc
pop
inc
cmp
shl
sbb
das
ins
mov
repnz
or
xchg
adc
jecxz
mov
jo
jge
int
adc
mul
and
sub
and
aad
push
cmp
inc
fs
or
inc
rcr
jbe
pop
call
es
ss
int
cmps
jecxz
xchg
push
add
loope
mov
lods
ret
jns
ret
stos
loope
call
sbb
stos
into
enter
cmp
jb
cmps
test
pop
add
xchg
mov
mov
out
jmp
imul
icebp
xchg
sub
call
jge
cmps
inc
add
pop
cmp
int3
cmp
push
hlt
mov
pushf
in
(bad)
not
fnsave
ins
mov
(bad)
mov
data16
inc
pushf
add
add
in
imul
xlat
fiadd
push
sar
pop
into
(bad)
hlt
jle
sbb
outs
dec
call
out
lods
sbb
mov
sub
inc
mov
cs
stos
in
xchg
(bad)
gs
lods
add
and
int
xchg
inc
mov
pop
add
movs
cmp
cmp
cwde
pop
enter
(bad)
lea
xchg
clc
sub
jmp
retf
dec
bound
sub
inc
push
mov
lods
out
mov
push
(bad)
sbb
mov
ret
mov
mov
push
and
and
cmp
pop
pop
jb
jmp
fist
in
jns
out
jecxz
ficomp
pushf
iret
push
dec
(bad)
shl
pushf
cwde
into
dec
xchg
loop
pop
jnp
lock
call
push
mov
scas
call
dec
addr16
loop
pop
in
rcr
inc
xchg
and
mov
sub
jmp
scas
div
or
or
xor
fs
(bad)
in
pop
adc
outs
push
adc
stc
mov
sar
xor
movs
retf
add
xor
shl
xor
out
nop
mov
push
jbe
sub
aas
clc
test
mov
scas
push
mov
movs
call
sub
push
mov
mov
iret
add
jmp
push
sar
fld
and
adc
inc
adc
push
adc
xchg
movs
sti
aad
daa
sahf
bts
nop
mul
outs
xchg
lods
loop
(bad)
outs
cmp
dec
(bad)
dec
in
jmp
lahf
leave
adc
cmp
xchg
ret
pop
xlat
push
in
das
mov
fpatan
pop
dec
repnz
xchg
(bad)
shl
mov
xor
push
lea
stos
int3
sub
inc
or
or
not
test
sbb
leave
xchg
ins
inc
mov
and
js
repz
test
shl
daa
jo
and
xchg
cmp
or
imul
enter
jb
mov
mov
mov
sub
sbb
cmp
hlt
jo
jnp
or
or
xchg
hlt
fidiv
fmul
xchg
lds
jl
fimul
icebp
lods
xchg
div
mov
mov
mov
retf
pop
and
das
dec
add
xchg
mov
ds
xchg
and
xchg
js
push
dec
in
loop
lods
or
push
xchg
xor
mov
pop
jb
mov
cmp
jle
or
dec
cmp
pushf
fsub
fisub
pop
mov
das
test
in
into
cmc
shr
xor
rcr
cmp
int3
mov
iret
nop
mov
es
in
xchg
add
jno
sub
sar
mov
aad
ficom
dec
aas
adc
loop
fstp
cmp
and
fwait
test
movs
xchg
sub
loope
repz
pusha
out
out
std
gs
(bad)
xor
or
js
xchg
test
dec
ror
sahf
out
xchg
fistp
outs
sbb
jns
pop
in
or
std
hlt
aas
and
push
pusha
mov
cld
pop
call
out
retf
push
fcomp
mov
or
aad
xchg
shl
adc
popa
add
and
mov
jne
and
outs
retf
add
and
sbb
inc
call
cmp
bnd
movs
mov
sub
popa
fs
xchg
and
push
jmp
pop
fstp
push
data16
jb
es
iret
xor
pop
xlat
mov
pop
dec
pushf
(bad)
lods
jp
pop
dec
test
mov
and
dec
stc
sub
retf
call
inc
sti
ror
lds
xor
mov
mov
call
aad
push
les
cli
or
push
sub
mov
pushf
fwait
pop
les
mov
mov
loop
adc
pop
adc
(bad)
retf
mov
pop
push
mov
xchg
and
(bad)
cmp
pop
xor
loope
push
rol
rol
lahf
mov
xchg
push
fisttp
in
xor
out
mov
adc
and
addr16
test
pop
fwait
hlt
(bad)
mov
cmp
daa
push
push
rol
pop
mov
out
xor
rcr
neg
lahf
push
xlat
lds
jne
pop
adc
cmp
arpl
xchg
loop
dec
lahf
pop
stos
sbb
sub
mov
add
daa
jecxz
pusha
cmps
out
pop
rol
push
bound
or
ins
push
jge
out
lods
bound
sbb
leave
push
test
imul
mov
add
cmps
jecxz
or
stos
mov
xchg
out
(bad)
clc
pop
xchg
fs
jecxz
mov
mov
cli
das
dec
fnstcw
jb
out
mov
jbe
das
movs
and
(bad)
aad
dec
call
and
pop
pusha
and
sub
aaa
test
imul
cmp
fwait
jge
loop
sbb
jecxz
cmp
aad
push
in
or
out
pop
inc
adc
movs
or
jmp
lods
pusha
xchg
int
mov
adc
pushf
pop
xchg
in
xchg
cmps
data16
mov
cmps
add
adc
into
arpl
dec
adc
repnz
cmps
(bad)
rol
push
das
in
pop
push
and
in
ret
xchg
pop
stos
jae
mov
add
pop
icebp
push
and
inc
xor
cmc
lock
into
push
movs
nop
xor
add
pop
adc
bound
mov
pop
rol
mov
shl
xchg
jo
mov
cmp
sub
dec
add
mov
imul
cmp
int
daa
aaa
ret
sbb
pop
cmps
xlat
xor
push
movs
mov
aas
cmp
and
jnp
xor
pop
jl
mov
sub
sti
or
or
jmp
push
ins
xchg
adc
in
cmp
push
ins
xchg
xor
pop
mov
test
cmp
and
fwait
jmp
fdiv
outs
adc
adc
addr16
frstor
mov
test
addr16
adc
out
stc
jecxz
ss
and
imul
jp
or
scas
sar
mov
cdq
call
ins
in
out
sahf
repnz
retf
jp
push
jmp
out
scas
cmps
retf
shl
ins
aaa
xchg
add
xchg
inc
cli
add
mov
push
ror
add
mov
rcl
shr
rcl
dec
mov
xlat
adc
adc
and
jno
xchg
push
pop
outs
mov
idiv
or
xlat
xchg
sbb
lods
or
inc
xor
outs
fnstcw
loopne
add
mov
jge
sub
fwait
cmp
adc
or
sub
push
adc
inc
mov
mov
sub
push
add
pop
add
sahf
clc
mov
inc
int
fisttp
adc
xchg
imul
test
lock
or
fist
mov
bnd
pushf
mov
mov
sti
mov
xchg
sub
fsubp
sub
movs
pop
push
xor
je
hlt
push
push
mov
jb
rep
fwait
and
cmp
dec
and
pop
retf
or
cdq
(bad)
jo
icebp
or
mov
daa
jo
push
or
and
(bad)
hlt
out
and
(bad)
sbb
mov
imul
xchg
and
das
int
adc
mov
(bad)
xchg
add
aam
xchg
add
mov
js
inc
cmp
dec
add
push
stos
in
adc
imul
in
and
inc
lock
xor
jge
data16
sbb
xchg
pushf
fimul
or
cmc
and
pop
lods
xchg
dec
add
inc
and
outs
inc
xchg
jecxz
pop
jg
ror
xchg
inc
sbb
icebp
test
mov
mov
(bad)
in
sub
outs
or
cmp
mov
repz
sahf
test
push
shl
jmp
fs
jmp
repz
sbb
fidiv
and
sub
popa
pop
stc
retf
dec
adc
or
sahf
pop
cmp
mov
push
adc
mov
stc
imul
leave
push
dec
popf
xchg
and
xchg
hlt
push
cmps
mov
cmc
adc
adc
data16
xchg
in
mov
repnz
call
aad
pushf
stos
test
jle
add
iret
mov
ds
sub
das
xchg
es
sbb
xor
outs
call
or
mov
pop
push
or
lahf
adc
loopne
test
imul
mov
mov
push
push
imul
cmp
bound
ret
icebp
xchg
retf
sub
std
mov
push
sbb
sub
or
dec
es
add
sbb
mov
cli
xchg
movs
jb
push
(bad)
loopne
test
dec
icebp
add
and
mov
xor
jmp
enter
ja
jecxz
hlt
push
xchg
xchg
mov
jae
sub
and
shl
cmp
pop
pop
xchg
loopne
jnp
cmp
jnp
mov
dec
int3
add
jno
loope
push
mov
test
leave
mov
and
movs
repz
mov
dec
and
aaa
pop
pop
test
ins
(bad)
add
sti
sti
sub
(bad)
js
es
and
inc
xchg
or
jg
mov
(bad)
add
rcr
mov
mov
std
or
xchg
sahf
minps
(bad)
jp
jg
test
inc
jp
mov
pcmpeqb
aas
sub
shr
loop
ins
pop
cmp
mov
pop
scas
mov
jp
pop
retf
inc
dec
jbe
inc
mov
and
ja
lock
das
aaa
leave
imul
xchg
add
sbb
data16
mov
cmp
les
das
cs
retf
xchg
fimul
pop
scas
or
xchg
adc
xchg
fs
in
in
ins
mov
adc
xchg
add
(bad)
pop
cmp
or
dec
call
das
lods
or
push
imul
sub
pop
push
mov
and
add
fcom
jp
out
inc
mov
shr
test
(bad)
ss
out
mov
scas
pop
and
cmp
cmp
mov
je
out
mul
mov
push
dec
int3
(bad)
mov
push
adc
retf
lds
ror
cli
cmp
or
pop
or
push
mov
stos
pop
rcr
je
xor
cmp
dec
add
cmp
out
mov
push
lods
in
add
mov
pop
or
or
imul
mov
shl
and
add
mov
mov
sbb
push
dec
adc
xchg
xor
cmp
ret
outs
movs
cmp
push
add
or
adc
ror
xchg
mov
pop
push
xlat
mov
push
or
sub
(bad)
stos
xchg
xchg
jbe
sahf
sbb
lahf
adc
mov
sub
xlat
fnstsw
add
das
call
mov
push
xor
ror
sub
push
push
pop
stc
push
in
cwde
in
repnz
in
repz
dec
pop
cs
arpl
icebp
lahf
and
pop
lahf
int
pusha
test
or
stc
xchg
jge
inc
and
jne
retf
rcl
retf
rcl
retf
sbb
dec
arpl
mov
inc
outs
in
jecxz
outs
std
rcr
and
xchg
mov
sbb
xchg
cmp
xchg
cs
sub
mov
jb
jmp
sub
add
test
add
cld
sbb
(bad)
pushf
jg
in
xchg
push
mov
mov
pop
mov
pushf
mov
push
mov
leave
shr
sbb
lahf
inc
xor
mov
mov
addr16
push
sbb
xchg
xchg
lds
add
cdq
or
fild
lods
sub
add
addr16
aaa
ins
and
xchg
out
add
xchg
push
pusha
sbb
fld
dec
cmp
std
pop
push
jge
ds
push
ins
jbe
lods
ret
scas
xor
and
dec
out
cmp
or
not
sbb
xchg
test
imul
mov
jb
movs
xchg
or
ss
int3
mov
icebp
push
ins
in
xlat
bound
xchg
mov
pop
cwde
mov
push
out
and
(bad)
cmps
jmp
out
xchg
push
cmp
add
adc
mov
cs
inc
dec
or
dec
rcl
es
xor
fadd
aam
lahf
movs
int
push
(bad)
dec
sbb
aaa
shr
inc
rcr
xchg
jp
pop
std
(bad)
adc
mov
pusha
adc
iret
or
mov
cmps
shl
mov
mov
cmp
xor
jmp
outs
or
mov
aad
call
pop
les
push
pushf
cld
xor
stos
cmps
iret
push
mov
(bad)
jo
push
test
and
cmp
js
ret
sbb
movs
push
movs
mov
xchg
je
xchg
sbb
mov
add
icebp
jmp
dec
inc
jg
rol
dec
jmp
cdq
push
loop
sahf
xor
xchg
mov
out
inc
ret
mov
fs
jmp
mov
mov
inc
jns
sbb
out
jl
outs
aaa
cld
cmp
mov
dec
add
pop
inc
gs
test
push
sar
cmps
adc
push
pop
mov
pop
mov
sbb
jmp
scas
addr16
push
dec
mov
jmp
adc
ficomp
dec
(bad)
mov
jae
das
dec
add
fs
pop
mov
int
out
sbb
pop
xchg
sub
in
cli
shr
add
pop
loopne
xchg
cdq
out
add
inc
(bad)
adc
ret
outs
std
daa
cmp
sti
sub
ret
jmp
jl
ins
mov
and
fisub
fs
repz
add
mov
xor
adc
mov
ud2
mov
cmp
mov
mov
jg
add
mov
mov
xchg
lahf
xchg
loop
in
aaa
and
cmp
call
ficomp
sub
sbb
outs
pop
(bad)
cmps
sti
mov
test
push
ret
mov
push
cwde
xor
stos
fistp
test
mov
inc
push
mov
cmp
push
or
mov
pushf
test
data16
ins
outs
data16
gs
cmp
xlat
jns
xlat
inc
mov
jmp
pop
dec
sar
cs
xchg
ds
inc
and
outs
ror
mov
pusha
out
leave
sbb
cli
inc
lahf
jnp
scas
or
xchg
mov
outs
scas
(bad)
ss
ja
pop
fldenv
mov
daa
test
test
ins
cld
sar
and
jg
mov
mov
div
aad
jl
jo
lock
sbb
xor
lea
dec
fidiv
mov
jl
dec
jmp
mov
cdq
pop
repnz
push
adc
aas
xchg
je
jle
pop
cmc
xor
ins
mov
call
xor
or
inc
ficomp
or
imul
addr16
pusha
nop
adc
je
dec
retf
scas
jbe
scas
push
jmp
sub
hlt
and
push
call
movs
popa
(bad)
mov
fisttp
sub
mov
jg
ret
out
mov
jmp
jg
aas
jge
arpl
and
sbb
mov
pop
pop
pop
cmp
fist
dec
cmp
push
int
inc
rcr
dec
sbb
jne
cwde
ss
xchg
arpl
mov
push
out
jbe
pop
data16
xor
mov
mov
test
(bad)
je
repnz
clc
cdq
lock
(bad)
mov
pop
xlat
mov
es
cmp
repnz
lahf
mov
pusha
in
lds
cli
push
arpl
dec
cmp
rol
cmps
loope
sub
(bad)
cmp
dec
fld
inc
aam
iret
jo
sub
sub
ficom
xchg
and
stc
imul
fdiv
cdq
dec
lea
mov
dec
mov
pop
cld
push
out
ins
sbb
inc
mov
xlat
outs
arpl
sbb
out
pop
inc
out
jo
pop
inc
mov
mov
sti
sub
dec
push
ss
sar
pop
adc
lea
pop
mov
scas
movs
push
test
out
bnd
out
cmp
sahf
test
test
rcr
xor
arpl
cmps
push
push
fild
loope
pop
retf
data16
jae
or
sub
prefetchnta
popf
jne
pop
xchg
ret
sbb
jp
add
fild
xor
pop
lea
dec
js
inc
sub
cwde
mov
dec
xor
popa
cmp
addr16
ins
fimul
xchg
add
mov
fxch
in
int
cmps
cli
mov
push
mov
push
jae
inc
push
lea
mov
xor
loope
stc
jg
adc
cmps
dec
jp
mov
daa
cs
bound
pop
ret
das
stos
shl
lods
or
imul
les
into
push
mov
xchg
cmp
repz
inc
stos
cmp
cmps
repnz
fmul
mov
xchg
cmp
cmps
loopne
(bad)
(bad)
aas
add
lock
test
test
out
into
cmps
jns
add
std
test
pop
mov
movs
mov
mov
inc
cli
dec
mov
lds
sti
xchg
dec
mov
icebp
xchg
pop
pop
fst
mov
add
jb
dec
gs
arpl
mov
in
sub
imul
xor
jp
jmp
shr
adc
test
retf
adc
or
aad
fmulp
sbb
neg
sbb
test
push
adc
xchg
movs
cwde
mov
push
pop
pop
pop
in
das
cld
ja
adc
repz
dec
mov
jmp
push
jae
arpl
jmp
rol
mov
arpl
dec
pop
mov
mov
adc
add
es
add
jle
pop
into
xchg
xchg
das
jno
adc
std
pop
das
sbb
sub
cwde
add
and
pop
das
xor
scas
fsub
pop
lds
adc
mov
ins
or
xchg
nop
std
loop
xor
fadd
mov
mov
mov
xor
pushf
sbb
into
and
push
push
jmp
mov
enter
cmc
clc
dec
ret
sbb
data16
out
das
call
push
mov
movs
sub
and
icebp
dec
push
xor
xor
cs
std
pusha
(bad)
mov
adc
xor
push
or
add
ret
sub
(bad)
aas
enter
sbb
test
(bad)
or
(bad)
pop
dec
mov
cmps
js
push
nop
shl
xor
int3
push
cmps
sar
mov
cmps
sub
jecxz
sub
and
stos
bound
xor
push
mov
add
pop
xor
into
outs
and
cli
loop
inc
fnstenv
sbb
sahf
jecxz
fimul
push
retf
leave
jmp
push
push
inc
sub
frstor
bound
mov
sahf
lds
(bad)
jg
sbb
lea
sahf
and
(bad)
adc
xor
mov
add
push
mov
dec
adc
and
pop
mov
push
mov
ror
test
jecxz
xchg
cmp
cmp
(bad)
lock
fldcw
push
aas
mov
mov
jg
dec
les
push
lds
xor
in
sub
sub
mov
(bad)
idiv
jmp
leave
push
and
pop
clc
and
push
fistp
add
sahf
jmp
aas
and
and
or
mov
jnp
ins
jmp
and
sub
stos
(bad)
xchg
ficomp
loopne
jge
iret
pop
lock
rcr
ror
dec
daa
ds
inc
mov
ins
inc
je
ins
adc
pop
sbb
sbb
lods
jns
pop
ret
test
xchg
in
enter
sbb
ins
pop
ins
pop
inc
inc
push
js
loopne
movs
pop
or
xor
pop
fidivr
sbb
test
mov
cmps
addr16
mov
fistp
aam
sbb
outs
(bad)
jmp
dec
arpl
sub
inc
gs
int3
mov
mov
out
test
mov
sbb
adc
cmp
sahf
imul
add
fild
shl
cld
popa
loop
jle
(bad)
aas
push
mov
push
mov
and
xor
(bad)
mov
sar
pushf
out
lahf
and
sahf
pop
jo
jl
xchg
jmp
mov
test
sbb
sub
add
rol
jns
data16
cmp
inc
inc
inc
xchg
add
push
jmp
cmp
test
(bad)
cli
push
or
xlat
outs
mov
test
mov
retf
bound
add
mov
jge
mov
mov
addr16
mov
out
push
xor
push
jmp
mov
xor
cmp
cmps
push
jg
cmp
arpl
cdq
test
pushf
mov
pop
int
mov
setge
xor
mov
js
(bad)
stos
daa
pop
fstp
xchg
inc
mov
xchg
lds
mov
mov
and
popf
repnz
push
mov
and
nop
jns
mov
push
mov
js
mov
push
jge
adc
inc
sbb
mov
and
and
imul
cmps
cmps
mov
inc
(bad)
inc
cmc
test
ficom
jge
mov
movs
shr
enter
nop
add
in
mov
imul
sbb
jmp
cmps
cmp
(bad)
fdiv
cld
lahf
test
fwait
cmps
xor
mov
addr16
scas
outs
xor
cmp
jne
in
imul
std
jl
pop
pop
sbb
mov
fsubr
call
adc
xor
sub
sub
ja
fld
mov
not
inc
leave
popf
in
jmp
je
bound
push
ror
retf
fstp
mov
add
mov
in
mov
mov
push
xor
pop
loopne
push
or
test
leave
nop
div
sbb
pop
pop
xchg
lea
imul
push
test
ret
mov
mov
lods
sbb
outs
clc
test
fdivr
or
mov
loop
mov
into
ds
mov
and
pop
cwde
imul
dec
push
loope
jo
icebp
inc
pop
sbb
push
xor
lock
out
ins
lea
lods
mov
pop
mov
jecxz
lds
pusha
sbb
cmps
push
out
shl
or
adc
mov
dec
pop
pop
sbb
mov
fist
sti
out
push
lods
aam
fisubr
std
mov
call
outs
fidivr
(bad)
jl
fiadd
fs
movs
data16
mov
pop
jns
lods
aad
lock
and
test
cmps
cmp
test
cmc
pushf
sbb
daa
data16
pop
call
xor
fiadd
adc
dec
in
gs
pop
test
les
inc
clc
mov
or
sbb
(bad)
sub
sti
les
cld
sti
jge
cmps
add
push
div
addr16
pop
or
popf
jmp
pusha
sub
mov
in
call
icebp
icebp
inc
ds
jne
out
mov
sub
and
mov
shl
add
mov
lock
xchg
mov
mov
(bad)
cmps
mov
jecxz
adc
cmp
loop
mov
mov
pop
into
and
adc
daa
popa
or
sub
nop
mov
(bad)
lock
icebp
outs
jbe
ret
out
xchg
lds
mov
jnp
loopne
jp
mov
hlt
mov
stos
in
push
sub
inc
push
pop
in
(bad)
ins
jno
or
push
js
xchg
sbb
mov
loop
dec
sbb
scas
aas
scas
les
cdq
jb
test
aas
sub
lock
(bad)
das
fsub
inc
ds
cmps
cdq
mov
jmp
or
mov
cmc
xchg
push
fisubr
xor
xchg
cmps
stos
adc
xor
cld
inc
les
inc
movs
outs
pusha
out
mov
call
push
dec
inc
dec
push
inc
retf
ja
lods
pusha
pop
popf
xchg
push
out
popf
aaa
dec
jmp
xor
cld
mov
xlat
and
sub
push
cmp
push
xchg
loopne
mov
bound
adc
jmp
cmp
jle
mov
mov
mov
out
inc
shl
retf
push
out
jp
add
mov
push
xchg
push
push
mov
inc
sbb
icebp
cdq
sqrtps
jno
stos
xchg
dec
sti
out
and
outs
and
cwde
int3
test
pop
pusha
les
loop
ds
cmp
aaa
sbb
jge
std
stc
pop
aas
pusha
mov
cdq
dec
pop
inc
loope
fnstsw
not
pop
rol
sbb
les
ret
dec
inc
imul
hlt
(bad)
adc
into
mov
aad
dec
add
inc
retf
aad
mov
mov
pop
daa
ins
push
push
das
outs
xchg
fist
ror
stc
adc
xchg
xor
add
jp
jns
and
sbb
jne
pop
cmp
icebp
mov
aad
xor
in
stc
sub
ret
(bad)
pop
dec
cwde
xor
adc
outs
loopne
sbb
icebp
push
loopne
mov
aaa
mov
sbb
xor
jnp
cmp
and
push
jmp
inc
adc
adc
jmp
xor
cmp
cmp
stos
fbstp
pop
js
adc
imul
and
dec
int3
test
add
mov
mov
std
xor
jecxz
rep
pushf
push
adc
add
xchg
ffree
jnp
mov
hlt
and
xor
shr
mov
outs
inc
and
cs
jge
sahf
mov
cmp
add
scas
or
call
retf
ret
inc
xchg
jbe
aas
cmp
lea
loopne
cmps
stos
inc
push
dec
cmp
xor
icebp
fstp
mov
adc
fnsave
les
mov
ins
mov
add
ss
int3
loope
shl
xchg
push
scas
ds
js
jns
pop
arpl
and
xor
loope
les
add
dec
xchg
xchg
sbb
push
jle
loop
and
cmp
pop
and
mov
or
cmc
lds
es
pop
in
adc
adc
(bad)
loope
mov
movs
sbb
add
fcomp
and
nop
imul
dec
push
adc
or
popf
jns
rol
fwait
pop
jae
hlt
in
jecxz
call
imul
push
xor
lods
enter
iret
sub
cmp
adc
fisttp
xor
imul
fnstenv
fstp
adc
jae
dec
dec
mov
xchg
outs
jle
jbe
sub
mov
and
cdq
adc
add
js
and
loope
and
cmp
push
out
test
add
test
test
jge
popa
jmp
rcl
xor
loope
dec
cli
(bad)
int3
lds
add
xor
stc
in
sub
push
push
cli
add
jl
pop
(bad)
mov
jne
ret
adc
sub
cli
add
mov
sub
call
les
arpl
mov
pop
lods
jnp
and
inc
retf
mov
(bad)
loope
(bad)
mov
mov
mov
addr16
and
xchg
inc
loop
nop
add
scas
mov
mov
mov
je
push
pop
rol
jg
pop
jmp
jb
jbe
fucomip
and
xchg
movs
dec
ds
aas
int
jne
fisttp
lds
clc
pusha
add
mov
movs
fcom
xor
sti
popa
out
sub
cmp
push
inc
retf
popa
pop
or
mov
adc
dec
or
pop
push
and
inc
mov
arpl
das
fs
ins
stos
jno
jmp
movs
mov
imul
push
push
jo
retf
jecxz
push
in
push
cs
jne
push
sbb
rcl
stc
pop
icebp
sub
lea
mov
xchg
and
mov
pop
ins
repnz
and
or
cmp
jmp
cmp
push
mov
pop
dec
add
out
mov
push
and
fdivr
addr16
mov
les
ins
jns
mov
xchg
lds
int3
inc
cmc
daa
or
sar
(bad)
dec
(bad)
jecxz
cmp
(bad)
xor
and
imul
out
jecxz
push
xchg
call
jl
in
in
inc
inc
mov
and
or
cmps
xor
(bad)
cmc
dec
aad
pusha
mov
sbb
rcl
jae
or
add
jmp
adc
sahf
adc
jmp
cdq
movs
pop
xor
and
out
pop
(bad)
mov
ins
xor
adc
inc
sbb
popa
cmps
scas
add
cmp
aaa
sbb
sbb
sub
inc
div
or
or
inc
cld
mov
out
test
sar
mov
adc
push
ins
push
add
push
mov
jmp
adc
out
int
inc
es
rcl
add
ins
aas
cmp
mov
movs
sbb
and
lods
push
dec
(bad)
push
adc
mov
jmp
push
rcr
mov
call
jge
jb
sub
add
sub
pop
sti
addr16
jne
cmp
fs
daa
imul
test
pop
push
mov
in
pop
or
mov
mov
data16
out
push
sar
mov
fsubr
fndisi(8087
cmp
jb
push
mov
cdq
aaa
lods
sbb
or
xor
xchg
stc
xchg
pop
mov
xor
aam
mov
push
pop
jns
paddd
jge
dec
ds
call
pop
sbb
sub
pushf
jnp
inc
or
loopne
cdq
and
fs
jb
cmps
xchg
idiv
mov
mov
movs
sbb
repnz
jmp
popf
adc
mov
cmp
das
inc
or
int
fdivp
and
jnp
aad
and
popf
idiv
xchg
pop
cmps
nop
push
ss
mov
jmp
ins
jmp
inc
inc
ins
or
jmp
inc
cmp
cmps
sub
imul
sub
mov
dec
out
mov
mov
xchg
(bad)
das
and
pushf
pop
push
adc
sbb
add
cs
xor
sahf
xchg
push
pop
xchg
and
mov
inc
lea
pushf
xor
adc
dec
iret
push
cmp
in
imul
lea
jp
inc
retf
and
mov
xchg
rcr
or
jo
mov
hlt
ret
mov
in
repz
mov
sub
or
jnp
and
popa
pop
sti
test
(bad)
ret
inc
hlt
xchg
shr
inc
inc
dec
add
inc
dec
verr
mov
mov
pop
scas
jnp
ret
dec
setne
add
pop
dec
jp
and
xchg
les
xchg
in
and
jb
sub
pop
cmp
fld
jp
pusha
mov
nop
rcl
xchg
xlat
fistp
mov
movs
popa
leave
dec
push
xor
sbb
fsub
mov
jbe
js
mov
cdq
mov
repnz
test
mov
jl
mov
and
scas
or
out
leave
dec
sbb
ds
shr
xor
cmp
push
pop
movs
mov
add
nop
int
retf
mov
mov
xor
adc
adc
jle
jecxz
aas
pop
in
mov
sub
cmp
fnstsw
(bad)
push
ins
fst
xor
push
cmp
jl
adc
aad
retf
mov
push
xor
out
je
sub
fidivr
jge
dec
(bad)
not
test
and
daa
add
cmp
sbb
push
add
fnstenv
retf
and
imul
stos
jp
xchg
aam
push
(bad)
outs
push
sti
sahf
ds
(bad)
jo
cmp
mov
and
dec
and
cmp
(bad)
xchg
lods
inc
mov
repz
inc
or
call
add
mov
push
push
push
(bad)
les
dec
pop
movs
mov
mov
shl
push
sub
xor
jmp
aas
mov
adc
retf
jne
cli
or
mov
mov
pop
adc
jg
cs
data16
mov
std
test
(bad)
ins
jmp
add
sub
sbb
hlt
shr
pop
scas
sbb
or
(bad)
fdiv
jp
int3
int3
push
out
adc
jmp
or
or
adc
mov
lock
in
fbstp
dec
arpl
fisub
das
push
adc
stos
mov
enter
or
mov
das
ss
cmp
add
mov
imul
pusha
sbb
sub
int
ss
das
out
sbb
and
mov
inc
test
dec
push
cld
outs
push
pushf
idiv
mov
fistp
mov
repnz
stc
scas
inc
xchg
sbb
test
bound
sub
inc
aad
xchg
pop
xor
call
cmps
dec
cmp
int
call
loope
(bad)
test
jb
sbb
xchg
adc
jno
cdq
jb
sbb
cdq
pop
push
cmps
cmc
test
mov
aam
pop
inc
jmp
inc
in
sbb
aad
xor
nop
mov
cmp
sahf
mov
xor
mov
lock
jg
mov
xor
sar
mov
(bad)
push
(bad)
pop
iret
mov
in
in
ss
xchg
sar
cmp
xlat
pop
xor
push
mov
mov
std
add
movs
bnd
int
inc
push
loop
mov
stos
mov
adc
jb
hlt
arpl
cmp
notrack
jecxz
call
or
xchg
xor
jge
sub
fwait
hlt
fs
sbb
aam
or
loope
dec
movs
rol
pop
pop
repnz
inc
call
add
or
jge
adc
sar
and
aad
mov
loope
adc
sub
xchg
cli
popf
xchg
jns
pop
adc
ss
and
dec
retf
mov
and
sub
das
xchg
out
sahf
test
and
sbb
lods
push
xor
mov
dec
adc
add
xlat
aam
imul
cmc
xor
ins
(bad)
aad
and
addr16
and
clc
mov
mov
inc
push
push
pop
xor
loop
in
xchg
and
fdivr
or
adc
dec
mov
call
outs
imul
push
clc
inc
fild
fimul
push
fwait
hlt
cdq
popa
add
les
pop
popa
lds
pop
iret
dec
scas
pop
or
and
fstp
jmp
lds
and
xchg
push
mov
je
adc
push
push
pop
out
jns
xchg
push
jecxz
test
in
push
sbb
daa
ret
shl
sbb
push
(bad)
xchg
push
in
lock
mov
icebp
test
mov
les
dec
inc
dec
mov
pop
xchg
pop
jmp
and
in
sbb
in
mov
outs
cld
or
outs
es
mov
test
pop
add
cmp
aaa
pop
shl
mov
aas
adc
cwde
jo
fs
idiv
jbe
xchg
jno
inc
std
fild
aam
js
fistp
fs
cli
loope
imul
retf
cmc
test
cdq
inc
fist
test
mov
xor
add
mov
bound
mov
sahf
or
mov
iret
sub
jae
sub
pop
xchg
mov
inc
shl
div
inc
ret
push
and
inc
cdq
inc
pop
aad
(bad)
and
call
(bad)
cmp
ins
gs
dec
lds
(bad)
loopne
stos
mov
cmp
clc
popf
jno
test
mov
sbb
lea
xor
sbb
into
(bad)
jns
inc
dec
dec
cwde
(bad)
sub
and
popa
daa
out
test
push
push
aaa
pop
jo
inc
fsub
repnz
pop
cmp
push
es
clc
or
xor
and
inc
mov
mov
sar
into
out
or
cmp
jnp
push
cwde
sub
test
or
sbb
and
cmp
mov
adc
xchg
sub
or
push
inc
sti
xchg
outs
mov
leave
or
adc
xchg
aaa
ret
pop
mov
mov
push
pop
adc
test
mov
mov
jmp
pop
xor
fstp
cmp
cmp
add
sub
daa
(bad)
jmp
lock
jp
fxtract
sbb
loop
inc
clc
xchg
or
add
and
inc
aam
sbb
pop
jge
jae
and
outs
xchg
pushf
mov
fmul
push
jnp
lods
xchg
dec
add
lods
js
int3
nop
ud0
pop
or
imul
mov
mov
jnp
and
sub
mov
xchg
sub
mov
mov
stos
sub
cmp
push
jmp
cwde
mov
jae
test
les
mov
jl
jmp
pop
push
add
or
in
mov
xor
or
mov
hlt
sub
pop
sbb
in
push
fadd
lods
sbb
and
das
mov
add
adc
inc
push
mov
jb
or
js
mov
xchg
mov
rol
int3
cli
push
sub
push
mov
call
pop
jae
repz
int3
push
inc
mov
mov
shl
sbb
rol
mov
es
test
jg
push
je
test
and
or
fidivr
push
inc
cmp
test
std
mov
push
bound
mov
mov
mov
mov
das
and
sbb
inc
push
ret
cmp
mov
sti
push
addr16
mov
add
lock
stos
xor
sbb
loopne
mov
in
mov
or
xor
jo
jne
jb
fdivr
in
pop
imul
in
mov
dec
aad
mov
repz
add
fisttp
popa
ret
xchg
add
jnp
xor
into
ret
data16
sbb
inc
loope
stos
lods
jno
int
and
sub
mov
xchg
jnp
inc
push
mov
(bad)
fs
pushf
xchg
push
dec
mov
mov
clc
(bad)
add
repz
inc
jae
hlt
jle
arpl
shr
loop
imul
sahf
sbb
jae
cli
pop
or
movs
(bad)
mov
cdq
and
xor
test
sub
imul
ffreep
sbb
mov
mov
push
lds
mov
sbb
and
mov
adc
out
ficomp
adc
dec
push
ret
out
push
(bad)
in
cmps
jle
mov
lea
xlat
jl
mov
test
inc
iret
pop
push
jbe
(bad)
cli
xor
lds
mov
aam
xor
push
pop
and
retf
jg
xor
ror
jo
hlt
scas
outs
push
dec
cmp
mov
sbb
xchg
push
mov
mov
iret
and
out
js
scas
sub
xor
xchg
sub
xor
and
shl
inc
outs
mov
mov
cmp
rcl
xchg
outs
inc
xor
fild
add
push
mov
add
push
pop
test
js
aam
xlat
leave
fild
js
stos
add
dec
das
iret
push
inc
xchg
mov
das
cld
popa
sub
fstp
ret
shr
out
inc
inc
and
dec
outs
mov
or
test
mov
xor
or
fdiv
xchg
jp
jb
jno
addr16
mov
inc
ja
jbe
(bad)
xchg
sub
icebp
or
or
jmp
xchg
inc
xlat
test
push
lahf
int3
in
jns
push
adc
jbe
pop
int
out
xchg
push
add
mov
sbb
jmp
jb
inc
scas
add
data16
scas
mov
xchg
jle
sub
sub
push
fisttp
je
div
addr16
movs
stos
or
iret
mov
dec
fs
in
cdq
into
mov
iret
push
adc
push
cs
cmc
cs
and
ret
adc
sub
mov
dec
and
test
in
sbb
ins
repz
and
(bad)
mov
xchg
aas
mov
xchg
pop
setno
jg
lods
cmp
pop
in
inc
xchg
push
mov
ret
imul
cdq
mov
jne
pushf
test
inc
mov
pop
ret
mov
test
call
push
mov
aad
jo
xchg
(bad)
ficom
ror
sub
inc
pavgw
jmp
mov
dec
mov
mov
mov
jp
call
and
fsubr
xchg
jp
xchg
mov
gs
daa
inc
aam
jnp
or
je
jb
inc
add
mov
ds
pop
scas
leave
mov
rol
mov
sub
sbb
push
or
fwait
mov
je
retf
xor
mov
clc
xchg
lds
pop
nop
xlat
dec
pop
test
out
mov
mov
fcmovnu
jmp
call
in
add
ins
mov
jae
add
scas
gs
or
sahf
push
cmps
mov
pop
pop
in
pop
outs
jno
(bad)
cld
push
test
mov
loopne
dec
pop
or
adc
loope
lock
cwde
mov
or
xor
imul
or
sub
push
arpl
jecxz
sub
or
pop
adc
(bad)
inc
mov
jmp
mov
hlt
or
push
mov
push
pop
cmp
xor
sub
add
pop
sub
icebp
stos
dec
hlt
cmp
dec
cdq
aad
adc
mov
jl
pusha
(bad)
loope
test
mov
sbb
leave
xchg
ds
cmp
sub
push
and
ret
call
pop
jl
inc
add
cmp
or
repz
cmp
(bad)
jnp
xchg
pop
mov
mov
add
mov
in
mov
retf
sbb
add
xchg
repz
pop
jmp
ror
pop
jg
pop
xchg
daa
sbb
pop
lock
scas
mov
sbb
imul
mov
sbb
push
sub
ret
sbb
fsub
int3
and
popa
fs
fwait
imul
sbb
jle
sbb
shl
cmp
out
mov
in
or
lds
pop
dec
push
mov
cmps
add
dec
gs
xchg
daa
and
and
sub
inc
and
cs
adc
add
mov
repz
jno
xor
ins
sbb
retf
pop
cmp
jns
ins
add
fwait
mov
inc
xor
pop
or
jmp
jo
fcom
es
mov
call
xor
lea
je
and
or
sbb
out
jg
cmp
stos
stc
xchg
outs
or
inc
repz
shr
div
jbe
aaa
in
jp
pusha
xchg
pop
adc
cmps
scas
sbb
xchg
sbb
sbb
gs
je
mov
xor
push
pop
dec
fisttp
adc
out
jbe
fst
mov
mov
xchg
imul
(bad)
and
scas
bound
pop
fwait
xlat
inc
xor
sub
add
mov
dec
addr16
jmp
movs
xor
and
cmp
cdq
repnz
push
test
add
push
sbb
jmp
mov
movs
push
pop
std
push
jmp
pop
and
dec
in
mov
add
in
cdq
push
cmp
and
nop
sti
sbb
pop
xchg
in
dec
les
shl
call
and
xchg
out
test
xchg
adc
js
cli
sbb
xchg
push
mov
adc
xlat
jne
les
(bad)
sub
fcomp
jecxz
mov
(bad)
pop
mov
shl
pop
(bad)
in
push
int3
dec
mov
xor
std
lds
dec
inc
fdivr
jp
or
add
lods
xchg
cmp
jns
jbe
sbb
jbe
out
add
in
(bad)
jmp
xchg
and
inc
prefetcht1
cdq
shl
jbe
push
aad
mov
adc
cmp
sti
xchg
mov
adc
inc
movs
cwde
repnz
pop
xor
nop
repnz
cmp
push
mov
cmps
lds
sub
ja
sti
dec
stos
loop
sub
or
repz
xor
mov
sub
fwait
scas
es
das
repz
xor
xchg
cmp
xchg
sub
adc
xchg
test
cmp
lahf
lods
aam
mov
sub
jns
aaa
mov
xor
xchg
jnp
mov
sbb
sbb
dec
rol
xlat
call
adc
sti
sub
sbb
stc
scas
cld
and
retf
rcl
jo
pop
jg
or
mov
scas
iret
or
lods
jg
cmp
or
retf
adc
movs
xchg
jecxz
jl
into
push
das
inc
mov
stc
sub
pop
ja
add
aaa
mov
sub
push
sbb
sahf
scas
xchg
stc
sub
push
add
aas
inc
out
int
retf
mul
pop
js
sub
aaa
iret
repz
imul
lods
leave
push
lods
fwait
mov
push
or
pop
cwde
pop
jno
int
cmp
bswap
pushf
jmp
ins
stos
push
xchg
repnz
jmp
iret
pop
adc
xor
cmp
ins
dec
add
in
jns
mov
pop
test
xchg
inc
sbb
js
mov
xor
inc
xchg
pop
xor
arpl
jge
rol
cld
pop
pushf
cmp
sub
sub
fs
js
cmps
movs
and
xor
sbb
sbb
and
xor
dec
data16
test
xor
inc
jmp
icebp
sbb
sar
cmp
xchg
inc
mov
push
daa
cdq
xchg
imul
xchg
gs
sti
dec
dec
push
cmp
div
cwde
ss
daa
xchg
adc
xchg
cmc
mov
jge
adc
test
movs
add
dec
push
cwde
push
adc
pop
js
xor
xchg
out
dec
(bad)
imul
pop
leave
pop
add
add
loop
jg
mov
in
inc
aas
loop
xor
cmp
cmp
hlt
bound
(bad)
xor
and
push
pop
aas
out
mov
call
shr
jno
mov
shl
or
sbb
mov
jp
ins
into
adc
popa
loopne
xchg
dec
and
jmp
dec
sub
sti
data16
xor
test
or
pop
pop
dec
sub
je
test
or
cmp
clc
inc
mov
mov
out
aaa
pushf
sub
jo
add
in
mov
pop
or
sub
ror
cmps
iret
pop
xor
xchg
repz
and
mov
mov
pop
popa
nop
ins
mov
psrlq
repnz
xor
sub
pop
pop
ror
jmp
push
addr16
mov
test
sbb
aas
mov
js
sbb
shl
fiadd
call
dec
sar
cmp
xlat
addr16
ficom
jp
dec
fs
test
(bad)
dec
fsubp
fwait
cli
or
mov
je
mov
movs
push
ret
aas
push
and
jne
adc
arpl
data16
iret
mov
pop
sbb
into
and
(bad)
inc
push
lods
loop
mov
sar
push
sahf
fst
js
xlat
neg
jl
loop
mov
test
aaa
cli
test
call
push
fdivr
call
mov
jge
imul
jno
lea
xchg
add
mov
scas
dec
mov
outs
movq
jmp
inc
sub
push
pop
xlat
icebp
in
and
enter
iret
loope
outs
mov
cmps
call
pop
out
jle
jo
das
adc
jae
pop
scas
and
stos
movs
iret
ds
jge
mov
fnstsw
les
mov
push
cdq
je
mov
and
aad
sbb
xchg
std
mov
xchg
(bad)
mov
jo
imul
xchg
mov
call
loop
pop
retf
dec
shl
in
inc
fucom
gs
out
mov
inc
xor
int
cmp
push
jl
mov
and
mov
movs
fnsave
addr16
(bad)
loop
xor
push
sar
jnp
pop
imul
xchg
adc
outs
out
mov
jne
popf
push
sub
pushf
jae
inc
stos
stc
pop
arpl
int3
lock
sub
adc
add
mov
sub
les
shl
pop
mov
and
shl
gs
or
push
xchg
xchg
dec
(bad)
cld
cmc
aam
inc
and
xor
daa
test
sub
dec
push
inc
mov
xchg
sub
push
cmp
rcr
xchg
(bad)
and
movs
and
push
lods
out
pop
dec
outs
sbb
xchg
pop
repz
jo
pop
mov
xor
call
aas
cmp
xor
call
aas
mov
sbb
inc
and
xchg
adc
pop
movs
ins
mov
cmp
call
mov
(bad)
sti
inc
dec
mov
lahf
cmc
int3
sbb
mov
jmp
jle
out
fs
repz
add
arpl
mov
rol
lock
jne
(bad)
out
xchg
stos
js
xor
fstp
mov
jmp
dec
sub
pusha
aaa
jbe
xchg
mov
push
inc
rol
mov
lea
jo
mov
jmp
rcl
arpl
dec
loopne
daa
mov
dec
mov
aam
(bad)
sbb
push
pop
shl
lea
sub
sub
shl
add
jmp
repz
mov
push
add
test
daa
inc
add
in
sar
cli
(bad)
test
fwait
scas
mov
sbb
and
ds
test
dec
cwde
lods
push
leave
sbb
leave
movhps
(bad)
ds
jmp
jg
pushf
adc
push
xchg
mov
sti
cmp
stos
scas
xor
add
push
lock
pop
rcr
jae
or
shr
mov
fild
pop
add
in
adc
mov
and
shl
mov
pop
dec
pmulhw
sbb
sub
sbb
xlat
stc
repz
ins
frstor
inc
jns
mov
(bad)
inc
(bad)
outs
mov
jle
jecxz
mov
(bad)
xchg
mov
stos
jecxz
or
jbe
xor
jmp
je
mov
xlat
xchg
jnp
hlt
addr16
jmp
call
sbb
in
add
or
push
push
call
push
je
outs
mov
lods
xor
xor
adc
inc
add
mov
or
cmp
stos
imul
mov
mov
mov
lods
sbb
mov
lods
in
repnz
xor
je
out
push
dec
lahf
or
pusha
fdiv
into
(bad)
push
push
adc
jle
in
inc
push
je
inc
fistp
add
ror
rcl
add
inc
sbb
(bad)
leave
stc
hlt
sbb
sbb
lahf
adc
pusha
daa
cmp
push
mov
add
enter
xchg
push
mov
push
pop
dec
sub
sub
pop
das
(bad)
in
into
pushf
mov
retf
inc
dec
les
pusha
xlat
stos
shr
xchg
ror
out
xchg
rcl
mov
and
test
pop
sub
popf
push
fsubp
xor
push
xchg
push
les
cmp
shl
lods
nop
and
shr
pop
xchg
push
dec
sub
enter
dec
test
sub
jmp
ins
(bad)
mov
cwde
inc
xchg
(bad)
push
jbe
jo
jae
ins
stos
mov
outs
repz
fdivr
fwait
(bad)
imul
push
push
sbb
shr
in
cmps
pop
and
xchg
xchg
(bad)
pop
push
and
pop
fnsave
mov
add
pushf
xchg
(bad)
mov
pop
cmp
adc
adc
pusha
pop
xor
push
in
xlat
js
pop
pusha
outs
jle
call
pop
arpl
adc
push
mov
mov
and
mov
sar
movs
xchg
popf
aad
stos
retf
aaa
jno
lods
lahf
or
popf
sub
iret
sub
inc
mov
inc
or
sub
push
xchg
in
cli
mov
rcr
imul
pop
movs
dec
int3
aam
pop
jmp
xor
das
fmul
dec
adc
lods
mov
es
mov
ds
ror
enter
pop
fdiv
mov
fisub
push
cmps
imul
in
or
repz
cmp
cld
test
stos
loopne
gs
sub
(bad)
icebp
xor
stc
jmp
(bad)
xchg
pop
mov
mov
ins
sbb
out
mov
xchg
sbb
test
jne
mov
mov
sub
jne
ffreep
or
cvttps2pi
push
out
cmp
pop
sbb
leave
add
dec
dec
xor
cmps
retf
sub
adc
stc
ja
bnd
iret
jge
lods
xor
pop
xchg
inc
sub
and
dec
iret
scas
sbb
loope
pop
inc
and
sub
mov
ret
mov
cmp
pop
and
jecxz
sbb
push
mov
and
mov
adc
xchg
push
mov
jnp
outs
fcmovnu
mov
lock
mov
clc
add
add
mov
push
ror
arpl
aam
mov
lahf
jne
sbb
mov
add
test
sar
sti
mov
rol
or
cmc
int
xor
and
nop
aaa
jne
xchg
mov
(bad)
data16
push
fistp
mov
ror
jo
and
inc
adc
pop
retf
hlt
loope
dec
jns
fnstcw
push
pop
movq
loopne
mov
ins
xchg
rcr
pop
stos
fcom
add
push
inc
or
pop
fiadd
mov
loope
fldcw
mov
adc
jmp
jb
push
inc
pop
outs
mov
mov
test
mov
cmp
scas
mov
hlt
mov
push
cmps
(bad)
jne
mov
jp
js
cmp
sbb
psubusb
pop
and
shl
ins
pop
arpl
sbb
loopne
jecxz
adc
mov
js
sbb
lock
test
cmp
std
iret
mov
call
add
dec
pop
shl
fimul
mov
cmps
call
das
mov
in
or
dec
mov
jbe
jb
sbb
add
cdq
test
or
mov
pop
fidiv
jne
rcr
mov
ficomp
push
mov
pop
mov
stos
jmp
xchg
add
inc
out
and
pop
sub
aaa
stc
jnp
int3
push
push
and
fadd
outs
push
jmp
fsubr
lods
inc
sbb
ja
arpl
xchg
mov
add
es
mov
sub
mov
cmps
nop
shl
add
push
in
pop
(bad)
(bad)
rcl
mov
ss
adc
pop
in
inc
repnz
sbb
fnstcw
lahf
rol
xchg
ficom
cmps
cmp
rcr
xchg
adc
mov
push
mov
mov
ins
loop
sub
inc
in
fwait
jg
sti
push
sahf
aaa
sub
inc
mov
push
imul
adc
mov
inc
push
sbb
popa
sub
xchg
ins
retf
xor
and
sbb
or
ret
adc
ffreep
mov
out
idiv
mov
int
push
scas
jmp
rol
mov
lds
push
mov
stc
iret
mov
inc
cli
jb
jbe
out
jge
in
xor
push
jecxz
popf
jp
lods
ret
jge
mov
iret
in
jp
adc
cmp
fistp
pop
and
mov
out
ins
adc
cmp
dec
inc
adc
fbstp
fmul
aam
stos
outs
lock
jl
in
(bad)
pop
hlt
cmps
add
pop
cmc
jmp
sbb
jge
mov
popf
test
lahf
inc
movs
popf
adc
sbb
fdiv
pop
dec
(bad)
pop
push
mov
gs
mov
aaa
xlat
in
cmp
mov
adc
popa
iret
or
add
add
push
into
push
sub
repnz
dec
mov
jle
mov
sub
clc
push
ss
stos
cmp
addr16
popa
gs
pop
mov
test
pop
mov
cwde
cdq
jns
cdq
push
mov
dec
lock
jmp
add
jecxz
add
(bad)
out
jnp
popa
push
pop
sub
adc
call
and
inc
mov
aad
sar
jmp
retf
jb
cdq
or
mov
pop
fs
xchg
and
jmp
cmpxchg
sbb
call
mov
mov
mov
jmp
retf
pusha
out
mov
sbb
(bad)
sbb
mov
pop
push
scas
cli
push
pushf
les
mov
mov
mov
xchg
push
inc
pop
jg
clc
adc
mov
jg
repz
and
out
sbb
(bad)
in
test
mov
dec
ins
jmp
cmp
adc
add
hlt
xchg
xchg
cmp
sti
add
inc
adc
xchg
es
loope
mov
les
push
mov
cmps
scas
cld
loope
shl
cmp
sbb
inc
cmp
mov
hlt
lahf
clc
les
pusha
adc
dec
iret
adc
mov
rol
pop
js
aaa
(bad)
mov
pushf
fdivr
imul
call
shr
mov
or
out
mov
jns
lds
ds
jle
mov
je
ins
sub
sti
(bad)
dec
ins
jmp
ins
sub
xor
mov
test
jl
aam
mov
add
fstp
jne
push
pop
cli
mov
popf
xor
xor
cmp
inc
sub
pusha
outs
fs
(bad)
sub
scas
adc
inc
cmp
adc
fsub
push
add
push
add
int3
loope
js
sar
les
ins
sbb
data16
jecxz
dec
mov
xlat
mov
call
adc
or
pop
test
call
cmp
outs
or
cmp
pop
xchg
fdivrp
jb
jp
cmp
inc
ret
jbe
ret
mov
ret
mov
aas
out
repz
cwde
je
dec
stc
inc
(bad)
xchg
adc
(bad)
sub
mov
cmp
and
test
cmps
popf
pop
lods
addr16
cmp
ret
ja
imul
(bad)
gs
mov
shr
cmc
into
pushf
(bad)
sbb
pop
(bad)
popa
(bad)
fstp
mov
scas
call
fldenv
daa
sahf
mov
xchg
sub
clc
adc
push
outs
add
js
paddsb
lahf
popf
mov
dec
sbb
jge
mov
push
xor
mov
test
aad
imul
ror
xchg
adc
repz
mov
into
and
inc
jne
int3
adc
sbb
stos
call
std
mov
mov
pop
or
mov
(bad)
shl
xor
clc
mov
icebp
adc
xchg
push
stos
and
rcl
into
movs
imul
shl
fsub
leave
mov
out
and
test
out
cli
ror
iret
adc
(bad)
ror
cmc
stos
stc
fisubr
mov
jae
xchg
inc
jmp
cwde
mov
mov
pop
lds
pop
call
test
mov
add
leave
(bad)
lods
rcr
lods
addr16
sti
pop
(bad)
mov
aas
data16
xor
cdq
inc
in
enter
shr
scas
pop
(bad)
into
loopne
xchg
inc
xor
pop
sub
fisubr
or
mov
xlat
hlt
cli
cmp
mov
adc
mov
les
jnp
scas
push
fld
cmps
test
mov
pusha
jnp
inc
scas
or
push
add
pop
pop
ins
sub
retf
dec
scas
or
cmps
ror
and
or
movs
add
in
mov
loopne
mov
adc
pop
dec
adc
sub
aam
mov
fst
(bad)
gs
inc
mov
cli
aaa
sub
fs
test
mov
stos
jecxz
push
mov
bswap
stos
push
mov
push
add
(bad)
into
outs
cs
add
and
test
sub
jecxz
inc
cmp
mov
gs
and
cwde
mov
imul
out
pop
xchg
test
lods
ret
retf
iret
inc
(bad)
out
in
ins
or
push
fs
xchg
push
pop
jno
and
bound
mov
js
jnp
sbb
add
dec
xor
pop
imul
leave
arpl
and
add
xor
(bad)
sysenter
push
inc
(bad)
dec
cmp
stos
gs
add
sbb
cmp
pusha
push
out
and
stos
test
cmp
jmp
dec
nop
test
sbb
popa
mov
sbb
cwde
outs
mov
dec
xor
sbb
pop
mov
lods
ss
test
dec
dec
rcr
cmp
jl
fwait
call
sahf
pop
cmp
adc
mov
jge
xchg
adc
cdq
cmp
imul
fsub
fldln2
push
fmul
mov
jne
ror
mov
ror
es
out
and
ret
cmps
jmp
dec
hlt
(bad)
daa
nop
and
xchg
dec
sub
sub
pop
mov
xor
add
ret
xchg
popa
movs
dec
aam
mov
push
mov
clc
xlat
sbb
xchg
retf
sahf
and
push
fs
jae
pop
jg
int3
mov
add
mov
loopne
cli
nop
mov
jle
rcl
jo
xchg
mov
adc
daa
dec
jecxz
mov
stos
sub
das
push
movs
sub
xor
adc
in
xchg
(bad)
lods
inc
(bad)
xlat
inc
loop
add
xor
rcl
imul
mov
cwde
cmp
sub
add
inc
nop
push
xchg
dec
pop
cmp
loope
lea
(bad)
aad
cmp
in
imul
pop
cmc
shl
jns
cdq
xor
std
and
xchg
icebp
iret
jmp
add
int
out
ret
cmp
fsubr
ror
jle
mov
mov
mov
clc
lds
xchg
and
nop
cdq
(bad)
in
or
bound
cwde
addr16
dec
lds
jle
mov
add
imul
lahf
mov
sahf
sbb
rcr
push
nop
xor
mov
movs
adc
addr16
popa
shr
jnp
jbe
loope
sti
nop
cmps
jnp
xor
arpl
enter
(bad)
icebp
pop
outs
repz
pop
xchg
ja
add
arpl
imul
or
add
lock
and
sub
push
and
push
stos
jne
or
sbb
push
mov
adc
loopne
ins
bound
repz
gs
or
mov
xchg
test
ja
mov
fcmovnu
ins
mov
pop
pop
sbb
jle
nop
repz
rcr
int
ds
lods
mov
in
mov
jmp
add
jae
lods
and
xor
out
and
repnz
jb
out
enter
test
jge
pop
inc
adc
sahf
(bad)
aad
repnz
jo
clc
xchg
push
mov
push
jnp
test
les
movs
push
cmp
popf
call
pop
(bad)
xlat
mov
shl
shr
test
cmp
addr16
jae
fsubr
mov
adc
fwait
xor
mov
aas
jmp
add
into
into
scas
xor
dec
in
pop
inc
(bad)
(bad)
in
push
das
gs
xor
cli
xchg
dec
jg
push
mov
movs
mov
fdivr
aam
(bad)
cmp
(bad)
push
mov
and
into
retf
addr16
repz
xchg
test
jae
cmp
dec
jmp
cmp
arpl
pushf
or
sahf
test
xchg
inc
cmp
(bad)
or
(bad)
sbb
call
outs
pop
mov
jge
sub
leave
adc
ds
imul
aam
fmul
dec
fcom
outs
add
mov
cdq
xchg
daa
ja
or
mov
or
test
ins
mov
xor
xor
mov
in
add
cmps
repz
cs
inc
pop
jecxz
mov
icebp
xchg
dec
add
jmp
mov
fmul
and
lods
in
in
pop
retf
mov
cmp
rcl
aad
popf
pop
mov
xor
fnsave
and
sbb
fs
mov
cmp
add
push
mov
sub
jne
add
rol
xor
xor
ins
movs
test
adc
stc
cmps
jecxz
sbb
jg
call
fxch
xor
cmps
jmp
int
sub
aaa
mov
adc
in
lock
xchg
daa
push
outs
push
mov
xchg
push
mov
jno
and
and
fisubr
cwde
in
sub
(bad)
call
cmps
xor
arpl
(bad)
pop
(bad)
ss
mov
adc
ja
inc
mov
js
mov
mov
pop
add
jbe
stc
(bad)
sub
inc
aas
jl
js
jl
xchg
sbb
ret
test
lods
inc
push
mov
mov
jg
push
js
loopne
inc
cmp
sahf
mov
mul
pop
mov
pop
mov
mov
rol
cdq
inc
(bad)
xchg
call
lods
mov
popf
nop
mov
jmp
popf
cmp
and
icebp
stos
(bad)
aam
push
aaa
and
lods
xchg
jae
inc
sub
sti
addr16
push
add
pushf
loopne
xor
ins
fnstcw
inc
pop
imul
shr
loop
outs
pop
sub
xor
mov
or
sub
fisub
push
jbe
pop
cs
and
push
ins
inc
int
in
push
sub
repz
push
add
test
fcmovbe
adc
ror
out
ins
lock
neg
int
sub
daa
add
push
ror
das
(bad)
push
les
(bad)
pop
dec
jne
mov
push
stc
sub
aam
clc
dec
jno
das
sti
push
dec
ins
fwait
sbb
out
daa
es
pop
pop
sub
push
cmp
mov
jmp
lods
mov
nop
dec
jne
aaa
mov
dec
xor
inc
jmp
je
cmp
xchg
mov
xor
adc
out
retf
adc
lods
outs
push
nop
sbb
push
mov
in
cmp
jnp
outs
mov
icebp
cmp
ret
je
enter
adc
outs
(bad)
cmp
arpl
out
jle
push
loope
dec
loopne
in
xchg
pushf
cmp
out
adc
rcl
stos
ja
mov
cld
mov
iret
xchg
pop
cld
je
sti
hlt
jg
or
inc
scas
or
in
xor
cld
xchg
jl
in
(bad)
cld
pusha
jmp
adc
int
pushf
arpl
shl
dec
mov
das
push
mov
(bad)
lea
xor
dec
(bad)
addr16
adc
int
outs
mov
mov
pop
cmp
mov
add
lahf
inc
adc
movs
add
add
mov
sbb
pop
and
xchg
rcl
int
nop
fld
out
add
(bad)
out
adc
inc
xchg
fcomi
fisttp
push
inc
xchg
(bad)
enter
jb
xchg
mov
adc
movntq
out
push
sbb
sbb
ffree
ss
nop
ror
icebp
ffree
sub
jl
add
xor
lahf
lds
into
and
sbb
xor
cmp
mov
loopne
and
shr
cli
shl
lea
repz
(bad)
mov
(bad)
lds
inc
jbe
(bad)
mov
push
test
push
cmc
mov
mov
mov
mov
push
out
dec
sar
sar
mov
cmp
out
data16
fist
mov
mov
jl
sbb
fisubr
rcl
in
les
inc
aad
mov
ret
xchg
fs
pop
daa
sbb
push
xor
ja
fidivr
imul
inc
xchg
jne
adc
cmp
loop
xchg
int
nop
and
xchg
or
imul
jle
and
inc
cmp
stos
sbb
out
stc
adc
push
push
call
cwde
cmc
ret
cmc
and
stos
push
sbb
xchg
cld
(bad)
adc
push
les
mov
test
(bad)
cmc
aaa
test
aam
mov
push
aam
cld
ja
mov
push
inc
push
push
ficom
aaa
jge
popf
lea
pop
ret
push
int3
sub
cs
push
lods
adc
xchg
es
in
vlddqu
xchg
jbe
dec
in
mov
lock
les
or
xchg
push
out
mul
(bad)
hlt
add
es
xchg
sub
lods
push
scas
or
and
dec
in
fs
loopne
sub
sar
lock
ja
imul
adc
jp
repnz
fs
imul
cmp
push
repz
lods
fwait
or
clc
xchg
mov
ins
dec
aam
iret
dec
cld
sbb
inc
iret
jmp
cmps
sar
sub
push
addps
xchg
jg
outs
sub
or
mov
lods
push
sub
(bad)
and
cmc
(bad)
jnp
xlat
movs
sub
aad
dec
mov
mov
mov
xchg
push
or
pusha
inc
adc
xchg
pop
je
fst
pop
mov
aas
dec
call
clc
jp
and
pop
push
rcl
pop
mov
aaa
mov
xor
sub
pop
mov
rol
mov
mov
popf
push
mov
leave
push
rol
jo
fcomp
dec
mov
cs
into
inc
aas
aam
(bad)
mov
ja
jp
aad
push
lods
scas
push
inc
mov
popf
lock
aad
loop
mov
jmp
shl
(bad)
mov
mov
jne
pop
shl
push
dec
ins
fisubr
cwde
xor
or
(bad)
cmp
mov
xor
sub
dec
sub
stos
add
inc
fcmove
adc
daa
cwde
or
not
dec
xlat
retf
inc
ins
(bad)
and
lahf
popf
fldenv
push
sbb
mov
xchg
inc
(bad)
cmp
jg
xchg
push
or
lods
ins
enter
ins
xor
test
cdq
and
out
mov
adc
push
sti
dec
xchg
sub
popa
mov
cmc
mov
jb
pop
fmulp
das
in
in
adc
mov
or
pop
jl
push
pusha
leave
dec
inc
add
lds
lods
aam
sbb
pop
and
jl
nop
outs
or
dec
and
xor
push
inc
mov
(bad)
mov
inc
mov
lds
sbb
pop
dec
jge
scas
sub
or
sub
xchg
sub
mov
mov
(bad)
aam
xchg
gs
ss
pop
nop
(bad)
lock
mov
and
cmp
out
and
pop
retf
out
lea
call
add
loop
jns
mov
push
nop
lea
mov
mov
arpl
jae
inc
(bad)
mov
(bad)
inc
adc
jae
and
in
clc
and
push
xchg
pop
and
xchg
shl
cmp
or
mov
shr
retf
pop
ror
cmp
scas
or
sbb
sub
fwait
std
mov
cli
(bad)
nop
xchg
xor
and
into
push
scas
das
push
push
add
mov
push
or
jp
cmps
leave
push
cli
mov
mul
cld
std
cmps
push
in
jg
(bad)
fwait
mov
call
fisttp
loop
in
sub
sbb
or
imul
mov
and
nop
xchg
(bad)
enter
rol
jl
sbb
pinsrw
pop
in
(bad)
js
jge
shr
pop
push
push
and
(bad)
cmp
mov
lds
jns
jmp
mov
inc
adc
dec
aaa
imul
pop
retf
sbb
sbb
dec
ja
mov
out
pushf
dec
gs
enter
outs
mov
dec
mov
sub
les
idiv
leave
push
dec
jge
das
ret
add
mov
fdivrp
cdq
test
and
stc
xor
fs
push
repnz
ret
sub
daa
jne
stos
jmp
stos
test
or
push
ret
or
shr
inc
xor
mov
add
adc
ret
push
in
xchg
add
sbb
jae
mov
push
das
dec
lods
in
xor
lods
pop
(bad)
cli
and
sbb
ret
sbb
jge
push
push
rol
les
push
push
sub
or
cmp
jecxz
in
xchg
ret
adc
gs
push
dec
iret
leave
lds
inc
pop
call
or
add
mov
jl
aam
fist
cmp
cmps
cmp
ds
jg
call
jmp
shl
jp
pop
pusha
leave
jbe
jae
jbe
into
movs
aaa
lods
dec
test
jae
(bad)
aam
or
add
enter
rol
pop
inc
pcmpgtw
pop
mov
popa
pop
xor
movs
adc
xchg
jmp
push
fmul
popf
mov
push
jns
sbb
wbinvd
ret
in
stos
fiadd
add
xor
jnp
sub
out
scas
dec
jmp
(bad)
sub
loop
mov
mov
stc
xchg
or
or
and
adc
aad
jae
push
mov
dec
push
lock
mov
xor
out
mov
inc
mov
cmp
jl
sub
mov
cli
icebp
push
mov
(bad)
cmps
mov
pop
or
mov
jno
push
mov
idiv
pusha
and
jmp
test
pop
fsubr
pop
pop
mov
jle
push
imul
mov
jg
jae
pop
jle
pop
pop
lods
add
cs
sub
inc
imul
mov
(bad)
pop
call
movhps
lods
inc
sti
pop
add
jno
lods
jns
mov
xor
adc
inc
dec
fbld
mov
push
inc
dec
repnz
es
gs
push
jp
in
cmp
jmp
jo
and
js
loope
add
add
cmp
inc
cmp
and
sub
pop
inc
(bad)
mov
out
retf
nop
in
jb
cmps
fdiv
inc
dec
push
(bad)
std
mov
push
shl
mov
sti
sbb
jno
dec
mov
pusha
pop
push
mov
idiv
arpl
cmp
fst
outs
ror
jns
jmp
fdivrp
dec
jge
sbb
into
cmps
or
pop
xor
mov
popa
inc
or
idiv
jle
mov
push
inc
push
cmps
mov
pop
stos
sub
adc
fimul
add
cmp
mov
pop
sbb
and
mov
inc
add
sbb
cmp
mov
(bad)
not
outs
cmp
data16
and
dec
into
fisttp
push
test
or
inc
xor
mov
or
into
push
sub
and
clc
je
in
cmovge
fisubr
repz
lahf
sbb
mov
cdq
xlat
or
(bad)
mov
xchg
into
lods
bound
into
mov
daa
push
mov
fsubr
jb
push
add
and
sbb
mov
sub
aas
fadd
movs
lea
mov
rol
icebp
sbb
je
je
cmp
cmp
enter
or
lods
jnp
js
pop
dec
add
popa
add
scas
dec
sahf
mov
add
adc
push
xchg
mov
xchg
aas
(bad)
in
test
pushf
jno
shr
fidivr
push
or
loop
xchg
int
(bad)
mov
bound
mov
ficom
retf
hlt
int3
dec
cmp
xchg
inc
stos
mov
retf
gs
adc
ror
and
cmp
dec
icebp
adc
std
cmps
and
xor
pop
sub
stc
popf
sbb
data16
sub
mov
popa
sti
icebp
pop
mov
dec
shl
add
adc
mov
test
je
mov
inc
add
outs
cmps
push
jle
cmp
lds
ret
in
inc
ja
mov
mov
push
lea
mov
add
adc
sbb
jo
push
and
cmp
fwait
mov
or
mov
adc
or
mov
enter
mov
stc
lods
shl
jns
daa
dec
test
inc
pop
add
dec
sahf
push
call
les
sahf
push
and
xchg
mov
push
aad
mov
out
daa
adc
and
ror
mov
dec
and
shl
sub
ret
rol
out
int3
movs
and
aam
cmps
or
xor
and
jle
test
cld
inc
call
out
into
jne
imul
cmp
or
pop
or
or
mov
in
push
fchs
push
jae
(bad)
out
or
lds
(bad)
xor
jmp
sti
jp
es
push
pop
mov
push
(bad)
aad
call
pusha
aam
lds
xor
bound
loope
sbb
pop
mov
pop
lock
pop
in
mov
popa
arpl
das
cmp
adc
out
ret
jge
out
sub
mov
bound
and
(bad)
jp
or
rcl
ds
mov
sbb
shl
and
fldenv
lahf
loopne
xor
and
add
std
jge
pop
arpl
test
(bad)
arpl
push
out
retf
stos
in
push
test
lods
out
test
cs
imul
jo
in
rcl
dec
adc
add
push
retf
and
xchg
and
jl
popf
xchg
imul
stos
inc
adc
pop
test
cmps
(bad)
fbld
ins
(bad)
popf
xor
fsub
cli
js
mov
add
xchg
push
inc
stos
push
hlt
aam
push
add
cmps
aaa
cmps
ror
into
mov
bound
div
pop
or
xchg
sti
loop
mov
retf
mov
and
stos
adc
xchg
xchg
or
or
or
dec
icebp
or
cmp
je
outs
sub
dec
iret
pop
aam
aaa
ins
jecxz
out
and
int
rep
int3
int
out
call
mov
js
add
sub
jecxz
(bad)
cld
call
loop
lods
sbb
jl
retf
sbb
and
mov
es
xchg
push
clc
sbb
retf
pop
sbb
push
mov
cmp
mov
push
lock
mov
xchg
outs
imul
mov
test
push
jne
mov
dec
lock
cs
stos
adc
adc
jle
or
(bad)
ficomp
(bad)
dec
outs
push
vmread
inc
cmp
or
daa
xchg
ror
mov
push
push
and
pop
sbb
fadd
adc
jg
mov
and
loope
call
inc
and
mov
xchg
dec
push
pushf
xchg
push
or
jbe
cmp
ds
pop
gs
cwde
loope
sahf
out
jb
and
popf
and
ror
loope
daa
pop
(bad)
push
adc
test
pop
neg
or
xor
pop
retf
inc
aad
and
mov
out
push
jmp
sub
sti
out
pop
add
jecxz
xchg
pushf
adc
jge
inc
add
mov
int
icebp
fwait
add
cwde
test
sbb
cmp
xor
jmp
mov
mov
fwait
out
push
(bad)
pusha
jecxz
add
arpl
dec
stos
shr
mov
call
movs
stc
sub
rcr
dec
sbb
push
mov
repz
shl
jmp
and
test
xchg
or
mov
les
add
pop
movs
imul
jl
xor
cmp
fdivr
cmps
je
push
sar
test
ds
xor
loope
lock
mov
out
xchg
ja
lds
rol
mov
jae
inc
or
xor
dec
int
jns
(bad)
push
sar
(bad)
pop
xchg
loop
pop
inc
fdiv
test
std
fsub
imul
mov
fstp
cmp
iret
mov
push
mov
sub
sahf
sub
rep
or
xor
pop
call
or
xchg
pushf
and
sar
outs
or
je
repz
stos
sub
mov
adc
pusha
mov
mov
adc
mov
rcr
pop
cmp
call
out
mov
cmovbe
mov
push
and
fwait
push
cmps
xchg
movs
fcomp
push
out
mov
test
fnstsw
nop
ror
push
ins
in
push
push
stos
push
adc
cli
push
call
sbb
sbb
jmp
xor
xor
inc
sbb
gs
outs
icebp
push
(bad)
inc
dec
mov
xchg
pop
mov
ins
mov
loopne
cdq
cmp
jle
fs
test
sbb
test
xchg
or
lahf
cld
in
arpl
idiv
not
imul
loop
gs
pop
clc
sub
cmp
xchg
mov
js
loopne
jp
pop
pop
in
pop
fisub
add
mov
cmp
mov
sub
imul
fimul
mov
mov
fisttp
ret
or
sub
mov
inc
imul
loop
add
es
mov
mov
pop
xor
pusha
es
out
and
sbb
inc
mov
lods
in
mov
cwde
cmc
push
jp
pop
test
aaa
adc
xchg
enter
pop
(bad)
into
and
mov
cld
push
int3
mov
xor
mov
xor
cdq
ficom
lods
sub
ja
sahf
xchg
aam
div
das
imul
inc
sbb
test
add
mov
push
fdiv
mov
mov
push
mov
loope
outs
xchg
popf
inc
je
cli
sar
icebp
mov
xchg
sub
es
idiv
lds
mov
pop
xor
push
outs
popf
packuswb
adc
jb
jmp
xchg
xchg
sub
pop
add
pusha
ret
rcr
push
and
out
repnz
jmp
(bad)
dec
sub
repz
xor
jae
jmp
mov
pop
or
je
ss
cmp
pop
adc
inc
idiv
inc
push
mov
scas
jg
rcr
scas
mov
pop
add
mov
ror
ins
dec
or
xor
push
lods
scas
ret
pop
mov
push
inc
pushf
test
xchg
and
mov
mov
loopne
rcl
std
leave
test
call
ins
imul
jmp
cmp
xor
test
dec
inc
cmp
stc
fadd
bound
rcl
xor
jmp
call
inc
por
fiadd
xchg
push
cli
arpl
shl
lahf
sar
in
shl
adc
scas
or
dec
inc
lods
ins
xchg
js
mov
cld
jmp
iret
xchg
xchg
imul
xor
sbb
repnz
and
fmul
or
xor
sbb
in
sub
mov
mov
jl
cmps
icebp
inc
pop
cmp
(bad)
aaa
sub
or
ja
retf
cmp
and
je
mov
push
and
jmp
pushf
push
mov
daa
dec
in
jge
or
int
mov
add
lds
sub
dec
(bad)
jecxz
or
es
jae
cli
push
cld
dec
rol
dec
cmp
rcr
jle
repnz
mov
pop
jle
repnz
push
adc
outs
mov
pop
stos
cmps
dec
xchg
or
mov
les
jns
(bad)
or
push
in
pop
xor
out
sub
aam
jp
mov
es
aaa
loope
les
jl
fwait
into
lods
iret
test
mov
xchg
fmul
cmp
popa
cwde
jbe
pop
mov
inc
ins
movs
and
out
add
mov
cld
aaa
jb
cmc
nop
test
cmc
fnclex
cmps
cmp
scas
or
pop
xchg
mov
cmp
ret
outs
daa
lods
out
rol
jp
dec
rcr
cs
ins
or
sbb
jno
ins
add
push
js
scas
mov
je
xor
ror
jo
dec
xchg
jge
sub
cmp
outs
and
int
aad
call
cwde
(bad)
cli
add
push
inc
fisub
pop
outs
jbe
pop
call
shl
lea
pop
rcr
sub
iret
sbb
cdq
movs
mov
mov
jmp
mov
mov
jae
mov
je
pop
mov
fdivr
mov
icebp
aad
pushf
mov
xchg
and
retf
dec
xchg
mov
mov
push
(bad)
jnp
(bad)
pop
cmp
mov
mov
sub
aad
jge
or
test
dec
fld
scas
call
add
out
vunpckhps
stos
dec
cli
shr
mov
int
xor
fisttp
retf
push
jns
mov
test
lea
cdq
(bad)
mov
sbb
js
mov
ror
dec
shl
xchg
fnstenv
or
xchg
jecxz
adc
add
mov
es
xor
mov
ins
rol
push
scas
push
pop
mov
shl
cs
jae
ins
dec
in
nop
mov
test
adc
xchg
mov
cmps
cwde
sbb
pop
adc
(bad)
lahf
inc
pop
icebp
cmps
jge
ror
retf
cwde
loopne
in
retf
aad
mov
xor
jmp
shl
test
adc
icebp
pop
xchg
jbe
mov
fnstsw
dec
pop
sub
aam
and
and
outs
jbe
dec
pop
hlt
xor
cli
mov
movs
into
sub
and
js
stos
add
pop
adc
mov
or
aam
mov
dec
mov
jne
(bad)
lds
cmp
ins
push
adc
ja
xchg
cmp
mov
(bad)
addr16
cmp
popf
imul
or
retf
(bad)
hlt
cmp
pop
or
dec
imul
and
imul
and
scas
sbb
(bad)
dec
add
mov
mov
bound
mov
out
pop
jb
pop
in
(bad)
add
add
aas
sub
mul
hlt
shl
jp
dec
inc
mov
nop
in
cld
jg
mov
pop
xchg
add
pusha
cdq
repnz
ins
cmp
neg
push
adc
mov
or
inc
fidivr
lock
push
cmp
(bad)
popf
xchg
clc
jl
repz
add
cmp
mov
jne
inc
mov
call
mov
xchg
stos
xchg
inc
arpl
movs
and
cdq
loope
pop
movs
inc
jb
cld
dec
xor
repnz
out
or
mov
fs
loope
shr
sub
pop
hlt
mov
pop
mov
jecxz
mov
loope
pushf
and
adc
(bad)
mov
rcr
and
clc
(bad)
mov
outs
pusha
mov
dec
addr16
imul
mov
sbb
data16
js
sub
test
repz
out
add
clc
(bad)
xor
adc
xchg
cmp
xchg
fnstenv
(bad)
popa
jb
out
adc
scas
lahf
sbb
push
clc
sbb
mov
out
inc
aam
cmp
xor
stos
jb
mov
loope
cmp
add
cmpxchg
jle
fcomp
mov
adc
leave
mov
(bad)
mov
and
mov
shl
(bad)
(bad)
cli
sbb
(bad)
mov
mov
addr16
cmp
push
shl
pushf
adc
pop
sub
push
jnp
mov
(bad)
es
js
gs
jl
jp
fs
add
(bad)
mov
inc
inc
add
mov
cmp
add
pop
fidivr
js
mov
les
sbb
jmp
out
inc
movs
jo
shl
or
pusha
inc
push
inc
mov
jne
or
sub
addr16
out
adc
mov
push
popf
test
mov
add
scas
bound
mov
fdivr
fs
jo
loope
jb
cmps
jbe
add
call
(bad)
sub
mov
inc
int3
dec
adc
ja
cmp
mov
dec
daa
xor
cmp
out
xor
stc
mov
add
fwait
mov
sbb
(bad)
dec
pusha
test
push
sar
fld
inc
shl
loopne
cmp
adc
xor
cmp
sahf
loop
mov
mov
iret
cmp
inc
ret
push
sbb
bnd
(bad)
pop
inc
cmp
cmps
pop
cmp
arpl
jnp
int3
add
adc
bound
call
dec
aaa
mov
cmp
sbb
and
mov
imul
push
mov
stos
sti
jnp
xlat
add
inc
xor
cmp
imul
lods
(bad)
fdiv
(bad)
cmp
jg
icebp
inc
outs
into
push
int3
sub
sub
xor
repnz
fistp
ficom
dec
les
adc
mov
aam
fisub
test
dec
int3
mov
pop
add
cmp
addr16
or
pop
lea
mov
adc
fs
in
push
inc
add
call
sbb
sti
sbb
add
out
inc
mov
stos
xor
mov
mov
lods
xlat
adc
jge
mov
movs
test
adc
je
mov
ficomp
pop
retf
es
mov
fwait
sub
pop
(bad)
out
push
push
shl
lods
stos
add
hlt
fistp
and
std
inc
je
ss
ret
or
dec
jl
lds
daa
sti
sbb
and
and
mov
(bad)
(bad)
and
mov
pop
adc
mov
xchg
das
cmc
fmul
pop
mov
jmp
pop
and
bnd
enter
shl
and
iret
jge
push
add
sahf
ds
aam
mov
rcl
pop
fst
imul
lods
aaa
and
dec
jmp
(bad)
in
inc
xchg
mov
pop
out
mov
dec
(bad)
out
or
sub
fwait
jl
pop
mov
push
fs
repz
call
mov
sbb
fwait
inc
xor
xor
(bad)
in
sbb
pop
push
xlat
test
sti
dec
pop
scas
pop
dec
xchg
jmp
pop
dec
pop
inc
adc
(bad)
jle
inc
hlt
stos
aas
add
xchg
out
mov
mov
scas
or
sbb
push
inc
push
inc
js
cmp
jmp
sbb
(bad)
adc
lahf
adc
imul
add
push
je
xchg
jle
popf
jmp
pop
mov
push
jnp
sub
shl
sub
out
cmp
pushf
gs
inc
or
hlt
mov
hlt
test
xor
jge
xor
daa
mov
push
push
ficomp
clc
push
leave
sbb
hlt
fnsave
std
dec
jne
mov
ffree
shl
jnp
mov
mov
sar
out
pop
loopne
rol
ret
and
ins
xor
jo
imul
and
or
pop
sbb
jg
(bad)
ret
es
mov
xchg
es
push
hlt
lods
das
jne
dec
jae
push
inc
mov
mov
push
mov
aas
mov
xor
jb
add
mov
sub
xlat
jmp
aad
or
ja
in
in
and
cmps
sbb
out
push
jp
repz
cmp
nop
leave
(bad)
or
xchg
test
icebp
ret
xchg
das
sbb
int
lock
pop
popf
jne
lods
push
call
and
stos
test
push
int
les
sbb
inc
adc
dec
sub
aas
ret
sbb
pop
push
xchg
jno
pop
in
jne
ficom
mov
cmp
xor
pop
sub
lea
loop
dec
and
ds
xchg
cwde
les
fdiv
clc
cli
xor
retf
xor
xchg
(bad)
mov
ja
pop
jle
aaa
ror
aaa
sti
pop
not
sbb
lods
and
pop
(bad)
lods
in
pop
fist
jge
shl
retf
ja
jmp
sbb
sub
pusha
in
jge
mov
push
sbb
popf
jg
jp
leave
inc
inc
arpl
inc
icebp
into
rol
rol
bound
inc
ror
ss
out
jl
sbb
js
mov
fwait
cdq
xchg
pop
mov
popa
inc
mov
mov
test
loope
push
add
data16
push
test
jmp
cmc
ins
jnp
movs
dec
pop
cmp
push
adc
push
cmc
or
mov
sub
mov
mov
ins
fwait
cwde
loopne
push
inc
or
adc
test
addr16
mov
loope
sub
int3
cs
fidiv
sti
or
ss
lea
jge
jnp
arpl
add
dec
fmul
mov
(bad)
mov
cld
adc
mov
push
dec
sub
add
mov
arpl
pop
xor
mov
pop
cmp
movs
jbe
mov
push
dec
icebp
cld
cmp
xor
fcom
dec
jmp
mov
jno
push
aas
scas
(bad)
je
inc
mul
mov
add
push
pop
test
loope
mov
sub
add
xor
popa
out
stos
push
pop
sub
(bad)
loopne
mov
gs
jne
mov
xor
scas
jbe
mov
add
jmp
cmp
mov
xchg
add
pop
pop
mov
mov
jl
adc
jnp
inc
lods
and
std
int
xchg
sub
and
fwait
(bad)
leave
retf
push
mov
sub
stc
aaa
pop
aam
pusha
mov
mov
cmp
mov
test
mov
data16
out
iret
adc
in
call
or
int
daa
movs
add
jo
fistp
adc
add
and
push
mov
in
xor
inc
mov
inc
iret
xlat
xchg
pop
or
movs
fwait
cmp
push
stos
pop
xlat
les
xchg
pop
ret
push
jl
in
inc
sbb
fbld
sahf
(bad)
retf
mov
push
imul
sub
clc
js
pop
cdq
aad
mov
outs
add
nop
or
push
jmp
pop
push
inc
lds
jb
dec
retf
xchg
mov
out
arpl
daa
out
pop
push
push
xor
sub
xor
shr
jp
inc
or
call
les
sahf
(bad)
movs
movs
out
mov
scas
dec
pop
mov
outs
out
fdiv
xor
leave
sbb
icebp
mov
cmps
out
xor
add
popf
xor
cmp
popf
lock
outs
pop
dec
mov
and
(bad)
jmp
or
mov
mov
addr16
sbb
es
sub
fstp
ficomp
lods
sbb
pop
push
stc
cmp
lods
ds
(bad)
adc
fimul
lahf
jb
imul
push
aaa
and
mov
retf
pop
adc
repz
pop
mov
push
sub
push
jg
cmp
out
sar
mov
iret
sub
mov
inc
ins
ror
adc
retf
scas
gs
aam
or
outs
ins
cmc
dec
mov
sbb
outs
inc
in
mov
rcl
popf
or
outs
dec
push
mov
aaa
test
test
cld
sub
mov
ins
sub
xor
es
sbb
jae
sub
test
out
inc
add
scas
jge
(bad)
mov
and
(bad)
loopne
mov
aaa
sbb
sub
outs
push
test
mov
dec
and
sub
loope
adc
test
retf
sar
xlat
cs
test
or
scas
icebp
mov
js
sbb
nop
jp
aas
test
stos
jmp
pop
adc
adc
mov
std
xchg
movs
xor
jne
sbb
fcom
adc
xchg
sbb
xor
ds
jmp
or
dec
mov
test
das
cmps
jno
nop
inc
mov
and
adc
iret
lahf
ficom
not
jecxz
mov
ja
mov
xchg
into
jno
add
sub
dec
xchg
inc
loopne
fiadd
mov
gs
mov
fs
xor
shl
xchg
out
push
cmp
loop
aas
loop
rol
call
sbb
mov
add
push
jae
scas
jmp
xor
sub
push
retf
mov
and
mov
movs
push
jae
mov
or
push
imul
sbb
mov
out
iretw
ins
sbb
add
push
inc
and
cmp
jae
xor
lods
cmp
adc
xchg
retf
add
test
and
sub
mul
jmp
aas
xchg
xchg
cld
frstor
sti
retf
retf
push
mov
faddp
call
mov
pop
pop
les
(bad)
and
es
lock
pop
and
fimul
mov
push
push
fcomi
sub
mov
fsub
sub
xor
vdbpsadbw
mov
push
xchg
outs
mov
hlt
test
add
dec
je
mov
fistp
outs
sbb
sub
idiv
movs
add
mov
ror
xor
pop
in
push
dec
lods
mov
pop
cld
mov
(bad)
rcl
mov
jb
retf
jo
cdq
jecxz
push
bnd
sub
test
jo
xor
jp
mov
push
lods
inc
jge
imul
lods
dec
push
xchg
aad
cmps
sub
jl
lods
test
add
inc
inc
or
vpcmpgtw
or
ret
or
sbb
inc
jmp
ss
outs
lods
(bad)
out
pop
outs
enter
lods
push
pop
inc
xchg
std
js
xor
sbb
push
(bad)
in
retf
je
mov
cmp
and
jp
lahf
xor
sbb
daa
cmp
or
and
shr
jmp
(bad)
call
cmp
(bad)
or
test
mov
jae
test
cdq
add
out
jle
cvtps2pi
imul
push
mov
sub
jp
or
push
adc
das
mov
mov
or
mov
(bad)
adc
sub
gs
mov
bound
push
les
lods
push
shl
push
jbe
movs
xor
in
je
sbb
loope
dec
cmp
jmp
ror
js
cmps
inc
(bad)
cs
rcl
(bad)
cmps
nop
cwde
out
data16
cmps
mov
or
call
dec
add
pop
push
push
not
mov
out
fstp
mov
jmp
or
xor
pop
cmps
sub
sub
push
je
and
mov
sar
cwde
xor
ds
pop
xlat
popf
jecxz
xlat
popf
mov
or
xchg
loopne
add
mov
out
pop
pop
mov
xor
scas
in
jbe
sub
add
hlt
sbb
mov
xor
(bad)
jo
cmps
add
jae
jo
test
lds
shr
pusha
xor
pop
not
call
stc
fisub
enter
movs
add
or
outs
mov
retf
cmp
imul
in
sbb
rcr
icebp
hlt
mov
std
repnz
ins
jns
dec
aad
adc
imul
popa
(bad)
cmps
or
mov
sub
mov
mov
push
retf
lds
sub
bound
cmp
sbb
dec
xchg
scas
das
xchg
jno
jne
cli
mov
or
sub
xchg
pop
imul
rol
fbld
loope
shl
movs
push
cmp
mov
dec
adc
jecxz
mov
iret
push
test
or
dec
mov
stos
jmp
gs
and
fs
push
sub
xchg
inc
shl
inc
pop
stc
(bad)
push
xor
cmp
inc
fsub
fisttp
enter
cmps
fisub
xchg
xchg
nop
mov
mov
mov
or
dec
pop
add
adc
js
push
pop
adc
sar
js
xchg
mov
rcr
fmul
xchg
jbe
mov
mov
pop
jmp
into
call
mov
std
jns
popf
dec
aad
lods
push
mov
jns
sub
dec
mov
sub
ins
push
pusha
pop
pop
xchg
adc
inc
pusha
mov
adc
sub
clc
mov
and
loope
add
dec
das
(bad)
cmc
sbb
push
adc
hlt
push
jle
xchg
mov
movs
pop
push
dec
xlat
xchg
mov
aam
retf
add
lock
sbb
arpl
setne
pushf
pop
inc
test
daa
ss
add
or
test
test
sub
sahf
in
and
popa
lahf
lock
cmp
sbb
mul
mov
xchg
lods
adc
inc
mov
or
push
xchg
xchg
test
cmp
inc
enter
xchg
rol
jbe
mov
push
inc
mov
or
das
mov
icebp
call
push
psubd
popf
push
clc
ss
cmps
into
rol
pop
cdq
adc
ds
(bad)
iret
mov
xor
inc
xor
dec
in
jns
jge
fist
add
addr16
sbb
mov
mov
lods
sub
call
mov
inc
stos
and
div
cmp
mov
cmps
xor
addr16
sub
and
retf
sbb
mov
xchg
aad
popa
add
jmp
int
push
test
cmps
leave
lods
fadd
push
stc
imul
mov
inc
into
mov
xchg
or
(bad)
(bad)
mov
nop
push
jbe
mov
sbb
lods
nop
retf
or
loopne
adc
(bad)
push
int
mov
jle
cwde
cs
retf
mov
or
out
push
clc
addr16
add
shr
mov
cmc
or
or
or
cmp
in
pop
aaa
cmp
add
movs
mov
das
imul
push
mov
mov
add
cwde
push
lods
cwde
adc
sar
xor
aas
loope
int
inc
in
movs
xor
xor
movs
cmp
retf
retf
xchg
or
call
dec
xor
and
(bad)
jns
jmp
pop
mov
jns
cmp
int3
sub
mov
sbb
jns
xor
cmp
fsubr
add
cmp
scas
cwde
push
mov
out
mov
aaa
ins
sub
mov
das
mov
aad
and
push
in
push
cdq
and
mov
test
xchg
add
fsubrp
push
jle
dec
mov
sbb
dec
fisubr
dec
fcmovnbe
sbb
fs
cmp
mov
mov
and
push
int3
(bad)
ins
pop
add
sub
jae
inc
push
push
jbe
pop
shl
add
cmp
xchg
(bad)
int
(bad)
cmp
cmp
cmp
dec
ja
fs
out
mov
jmp
mov
fst
mov
mov
(bad)
rcl
call
loopne
fisttp
add
and
ret
lods
or
jb
xchg
xchg
adc
dec
sbb
adc
(bad)
stc
dec
mov
fdivrp
test
(bad)
pop
ret
mov
shl
fmul
add
dec
pusha
mov
mov
xchg
mov
mov
shl
sub
inc
push
push
xor
cmps
xchg
sti
mov
adc
xor
jl
and
mov
xchg
ins
mov
jle
mov
adc
sbb
out
mov
icebp
and
mov
(bad)
clc
enter
xchg
push
pop
int3
push
mov
iret
sub
pushf
imul
sar
bound
sub
sbb
pop
cmp
jo
(bad)
popa
leave
(bad)
pushf
fidiv
adc
pop
fnstenv
in
inc
lahf
sbb
mov
fidiv
sub
dec
(bad)
cmp
mov
xor
sahf
fsubr
sbb
xchg
mov
dec
test
cmp
cmp
sub
into
sub
(bad)
call
dec
stos
xlat
xor
or
mov
out
jns
imul
test
cli
dec
les
or
mov
ret
dec
(bad)
sub
fcom
cld
mov
xchg
xor
and
fsincos
xor
arpl
push
push
loopne
mov
sti
push
aaa
dec
arpl
ret
cmp
fisttp
cmp
in
sti
push
xor
iret
push
mov
push
(bad)
ja
add
xor
xchg
dec
sar
mov
test
push
and
jmp
and
imul
popa
fnstsw
(bad)
cli
jo
sbb
stos
repnz
js
fucom
or
or
mov
cmp
mov
aaa
retf
prefetch
stc
fisubr
fst
cmp
(bad)
lahf
iret
add
cmc
sbb
enter
or
mov
push
pop
xor
sbb
push
nop
ret
dec
xchg
scas
inc
cs
aad
xor
cmp
enter
aad
mov
cmp
or
xchg
mov
imul
stos
mov
sbb
mov
push
cmp
add
dec
and
or
into
fisubr
jb
inc
jp
and
shl
punpckhwd
mov
cwde
in
pop
mov
nop
adc
repz
xchg
xchg
jns
cs
adc
or
cmp
sub
xchg
ret
fisubr
jle
mov
mov
repnz
fadd
sub
ror
aam
out
aas
mov
mov
push
sbb
je
mov
sbb
pop
lods
iret
jnp
imul
sbb
inc
mov
mov
movs
in
daa
sub
jae
jae
push
fidivr
retf
rcl
mov
add
mov
push
sub
icebp
sub
pop
mov
rol
cmp
jge
mov
fcomi
repnz
aas
jecxz
add
and
mov
and
add
daa
(bad)
repz
fmul
add
aad
out
or
mov
xchg
mov
ins
jg
in
dec
sti
gs
lahf
int
jp
scas
mov
pop
xchg
in
adc
xchg
out
sar
pushf
add
out
sbb
lods
jecxz
jnp
push
pop
jno
pop
mov
mov
(bad)
std
cmp
scas
inc
aaa
inc
jmp
and
call
push
inc
inc
push
lds
(bad)
pushf
or
loopne
push
aad
lea
lock
nop
retf
out
leave
cmc
push
pop
das
cmps
(bad)
(bad)
pop
out
inc
xchg
imul
test
iret
je
xchg
mov
sbb
stos
pop
push
cs
jmp
mov
pusha
jg
sbb
sbb
das
cmc
inc
data16
mov
out
cdq
mov
inc
arpl
(bad)
xchg
sbb
or
addr16
rcr
or
add
stc
call
movs
inc
js
scas
test
loope
push
push
shl
in
dec
or
xor
inc
pop
popf
daa
std
fsubr
(bad)
push
popa
mov
xor
xor
mov
enter
xlat
jne
icebp
icebp
icebp
ja
push
push
arpl
pop
dec
ss
dec
dec
maxps
xchg
ret
inc
push
ror
(bad)
mov
test
dec
jecxz
das
push
shl
mov
push
xor
adc
enter
stos
jno
jle
adc
aam
xor
das
in
sub
cwde
sti
sub
dec
jp
sub
push
sbb
mov
int3
inc
pushf
dec
pop
int3
cs
sub
mov
push
lds
daa
lods
daa
mov
or
mov
imul
into
push
outs
mov
or
jo
inc
mov
test
dec
fild
cld
add
sbb
aaa
(bad)
xor
scas
lahf
rcr
retf
mov
loope
push
push
sub
sti
or
test
ins
push
dec
test
pop
in
dec
test
lock
sub
(bad)
ds
in
push
xor
sti
(bad)
les
js
sub
aaa
icebp
(bad)
loopne
js
mov
adc
loope
xchg
xor
fwait
lahf
jp
jecxz
mov
ret
hlt
mov
cmp
dec
and
(bad)
ret
pop
(bad)
mov
and
xchg
cmps
sbb
cs
sub
pop
scas
fisub
test
fld
add
xor
(bad)
lds
loop
lds
fstp
or
ret
pop
imul
out
mov
jne
xchg
jl
adc
pop
push
cmp
push
loope
xor
push
pop
sahf
dec
xor
mov
adc
fwait
cmps
jl
popf
jno
pusha
or
inc
push
dec
jae
jbe
xor
rcr
jnp
push
loop
pop
push
iret
arpl
sbb
add
jns
and
dec
mov
mov
cmp
push
adc
rcr
or
dec
jae
push
(bad)
mov
or
dec
xchg
and
popf
jg
adc
test
xor
xchg
mov
pop
popa
sbb
retf
ds
dec
jno
mov
mov
and
test
jbe
xor
jnp
cmp
clc
mov
dec
stos
sub
sub
shl
sbb
mov
dec
sti
stos
mov
sti
out
add
sub
outs
imul
or
xor
and
push
push
cmp
adc
cld
js
add
mov
repnz
or
push
ret
dec
mov
(bad)
test
or
sbb
movs
inc
rcr
xchg
out
and
fild
jb
pop
push
das
arpl
mov
inc
cmovno
fmul
mov
icebp
in
xchg
push
outs
dec
jmp
inc
hlt
jmp
push
ficom
pop
retf
sub
push
dec
les
xor
ret
cs
sub
inc
push
push
push
jb
mov
jbe
push
dec
pop
push
call
sti
inc
sub
cmp
sbb
cmp
sub
arpl
mov
pop
es
fimul
in
scas
xlat
sti
scas
and
lods
frstor
test
loope
mov
fild
test
cli
add
call
or
or
inc
xor
out
xchg
test
jbe
xchg
jmp
test
push
cmp
cli
pop
sub
fucomip
or
pop
jg
pop
nop
xor
clc
xchg
std
(bad)
arpl
inc
and
mov
push
leave
sbb
sub
popa
outs
adc
rol
pop
dec
in
mov
outs
cmp
and
mul
fcmovnbe
sbb
push
psrad
sbb
xchg
fisttp
in
mov
lea
mov
outs
leave
jecxz
mov
test
sub
test
pop
sti
out
mov
xchg
jns
fisttp
cli
mov
sbb
mov
repnz
call
imul
sar
out
ficom
mov
cmp
push
cs
push
sub
or
and
out
inc
cmc
aam
arpl
call
cmc
clc
lds
call
jp
mov
jmp
std
sub
inc
stos
cmps
sub
inc
aam
loopne
(bad)
push
inc
jne
pop
(bad)
arpl
pop
repnz
xchg
mov
add
inc
xor
mov
cmp
dec
dec
gs
mov
or
(bad)
xor
add
sub
cmp
stos
push
in
inc
sti
xor
imul
or
retf
test
add
jl
movs
jb
loope
fwait
aas
sbb
jp
mov
retf
imul
in
test
cmp
mov
rcl
pop
jecxz
xor
xlat
push
stc
in
sub
(bad)
adc
sbb
sbb
fst
and
pop
je
stos
cmp
inc
add
mov
xchg
or
stos
adc
jb
lods
jno
scas
lock
jl
add
fwait
loopne
int3
(bad)
(bad)
and
and
xchg
mov
xchg
rol
ins
push
cmp
mov
or
sbb
jne
(bad)
js
or
(bad)
imul
mov
xor
scas
mov
into
lock
mov
fnsetpm(287
into
mov
fist
add
xlat
jecxz
mov
lock
aaa
sbb
rcl
stos
pop
enter
mov
(bad)
mov
(bad)
or
mov
or
and
mov
lods
xor
add
jle
femms
shl
dec
mov
cli
adc
mov
xchg
out
in
push
fcom
repz
xor
test
dec
scas
fld
pop
icebp
js
sub
sub
jbe
inc
pop
sahf
push
movs
push
lods
push
sub
jno
or
das
xchg
sar
sbb
lahf
xchg
add
sub
jno
dec
push
sub
push
bound
outs
dec
sub
addr16
sbb
lods
push
mov
int3
cmp
add
and
ret
loope
aas
mov
ror
movs
(bad)
sar
jl
or
mov
mov
bound
pop
mov
mov
mov
stos
jmp
dec
sar
mov
dec
bound
lods
cmp
pop
cmps
mov
scas
push
or
xchg
mov
ret
leave
jecxz
shl
ror
xor
test
aaa
out
popa
mov
adc
mov
sbb
and
ins
mov
push
in
pop
or
test
push
popf
xchg
push
ins
leave
jmp
xchg
bound
mov
inc
rcr
scas
mov
jg
fcom
stos
test
xor
lods
ds
sbb
adc
popf
dec
sahf
dec
xchg
leave
sti
fsub
push
and
xor
cmp
and
ret
pop
ins
sbb
dec
enter
mov
ins
sbb
push
leave
xchg
mov
ret
sbb
stc
mov
fld
or
test
fld
mov
pop
lods
lods
out
out
mov
gs
and
pop
mov
adc
mov
adc
out
sub
loop
movs
sub
jp
sbb
xor
(bad)
cmp
rcl
gs
aam
mov
push
(bad)
enter
cmp
iret
sbb
rcl
mov
mov
push
cli
mov
or
mov
outs
in
jecxz
ins
sbb
(bad)
sbb
out
mov
dec
add
and
clc
adc
mov
out
jmp
gs
push
imul
ror
mov
addr16
pop
sbb
xchg
shr
aas
pushf
add
fiadd
xchg
dec
and
jae
leave
rol
cmp
daa
xchg
cmp
and
xchg
std
push
xchg
dec
cmps
jo
test
inc
xchg
cmc
retf
mov
and
xchg
jae
mov
shl
inc
scas
lea
(bad)
jg
xor
mov
dec
nop
mov
or
mov
bound
fsub
push
repz
pop
mov
jae
mov
xchg
int3
sbb
loope
mov
xchg
call
sbb
jne
ins
inc
shl
fcom
and
inc
xchg
xchg
daa
sti
mov
xor
sbb
xor
mov
aad
jmp
cmc
jns
and
jge
mov
call
xor
adc
addr16
lock
xchg
jecxz
pop
gs
mov
or
aam
dec
push
mov
adc
sar
(bad)
mov
inc
jg
cmp
retf
rol
sbb
lds
add
pusha
mov
inc
mov
in
jno
sub
adc
ror
push
dec
xchg
cs
ret
(bad)
std
fsubr
mov
pusha
mov
loope
and
fisttp
lds
mov
cmp
outs
mov
mov
mov
lea
fld
sub
dec
stos
sub
cmp
fwait
icebp
push
aas
inc
dec
std
ins
inc
scas
cmc
push
cmps
xor
icebp
jns
cmp
pop
or
inc
pop
js
push
and
mov
add
ja
out
pop
push
shl
shl
fist
or
inc
popf
dec
imul
call
sub
test
or
movzx
mov
fstp
in
outs
mov
cmp
and
sar
loopne
xchg
cdq
jae
inc
add
aam
and
adc
add
xchg
repnz
mov
xor
pop
pop
xchg
adc
les
add
in
and
or
inc
mov
in
xchg
fwait
das
dec
es
loopne
xchg
leave
sahf
mov
xor
xchg
outs
pusha
mov
xor
aad
cld
xchg
pop
(bad)
mov
arpl
rol
inc
jbe
or
push
mov
repz
popa
mov
ja
mov
or
pop
out
push
or
sbb
add
cmp
jne
fild
dec
loope
and
pop
mov
fsubr
dec
or
jl
aas
fcomp
mov
mov
sbb
int
mov
cmp
sti
and
cmp
(bad)
mov
adc
mov
cbw
jp
adc
inc
popf
retf
inc
push
mov
test
sub
sub
div
mov
icebp
gs
fst
xchg
scas
loope
or
sbb
leave
jge
icebp
dec
cli
aaa
pop
test
shl
adc
sub
inc
call
(bad)
dec
ror
jl
jns
test
sbb
data16
jnp
mov
fsubr
enter
into
into
push
neg
dec
imul
movs
outs
sub
sub
and
jb
fbld
icebp
mov
fld
cmps
push
mov
sbb
das
xor
les
push
add
add
inc
in
(bad)
cmp
out
arpl
push
dec
mov
push
outs
mov
(bad)
sbb
jbe
pop
jecxz
mov
xor
mov
shr
test
sbb
adc
or
pop
inc
test
cld
jnp
nop
and
or
adc
aaa
stos
bswap
cmp
addr16
mov
jae
sbb
retf
out
nop
pop
dec
mov
jle
dec
xor
ficomp
add
sahf
push
call
push
lea
ins
inc
mov
ficom
inc
stc
lods
neg
(bad)
sub
mov
or
ret
pusha
mov
dec
lahf
pop
scas
cmp
stos
pop
or
neg
pop
je
xlat
shr
sub
repnz
sbb
stos
pop
fs
inc
rol
mov
cmps
(bad)
scas
sbb
fnstenv
cwde
mov
jb
add
je
pushaw
mov
test
mov
sub
push
pusha
scas
jns
or
ror
push
retf
pop
icebp
mov
add
jnp
fstp
xchg
and
push
mov
push
dec
cmp
outs
movs
push
push
inc
ret
adc
jp
push
pop
mov
inc
daa
test
mov
mov
adc
pop
(bad)
sti
push
sub
sbb
fisub
jo
push
mov
and
pushf
in
pop
mov
dec
dec
pushf
push
movs
or
jns
xor
int3
push
sub
pop
adc
mov
loop
and
xor
jmp
shl
and
adc
jne
jp
(bad)
cmc
sbb
push
sub
je
xchg
scas
fild
xchg
(bad)
pop
ja
ds
push
push
mov
cmp
cmc
fmul
push
int
xchg
std
xchg
test
and
popf
pop
cli
stos
ins
mov
fimul
xchg
(bad)
pop
mov
call
jno
push
or
adc
fsubr
in
les
add
sar
jo
add
mov
in
mov
jmp
arpl
les
pop
jp
pop
arpl
leave
fwait
fwait
mov
nop
push
pop
test
es
pop
(bad)
cmps
add
out
int
mov
pop
inc
dec
icebp
cmp
fdivr
mov
mov
imul
scas
outs
push
lahf
mov
hlt
outs
adc
and
clc
jno
and
frstor
mov
jg
jge
mov
fnstsw
xchg
cmp
push
push
loop
cmp
cmp
jae
call
jmp
mov
clc
je
adc
jae
cmp
int
je
sbb
jle
cmp
inc
(bad)
mov
dec
call
add
push
inc
ja
hlt
or
mov
adc
sbb
fst
push
xor
xor
jae
sbb
(bad)
mov
(bad)
dec
cmp
sti
dec
nop
push
fwait
push
fild
enter
outs
es
jns
dec
push
movs
xchg
mov
xchg
nop
outs
daa
push
or
jb
movs
int
pushf
jl
dec
or
int
or
mov
nop
sbb
cdq
dec
sbb
(bad)
jmp
in
aam
hlt
mov
ret
pop
or
xchg
sbb
xchg
pop
mov
std
(bad)
mov
mov
imul
mov
pop
mov
retf
iret
std
mov
xor
jp
pushf
inc
mov
jmp
xchg
xor
lods
das
cmp
retf
jnp
(bad)
xor
and
(bad)
cli
cld
ret
repz
test
mov
sar
sub
jae
cmp
dec
fs
mov
(bad)
xchg
rol
xchg
or
pop
repz
sbb
nop
rol
in
xchg
push
mov
xor
dec
les
inc
aaa
adc
dec
or
les
and
cmp
push
mov
mov
inc
mov
test
push
add
cmps
xor
xor
adc
dec
xchg
dec
lds
out
sbb
and
pop
adc
mov
inc
aaa
pusha
dec
out
sar
sti
push
xor
popf
imul
mov
out
or
pop
sub
jle
push
pusha
xor
ins
add
push
push
inc
or
sbb
sbb
mov
retf
push
jbe
(bad)
psrad
dec
clc
sbb
inc
push
pop
mov
in
jl
push
js
clc
in
mov
xor
sub
pop
ret
std
mov
mov
je
push
xchg
ror
(bad)
sub
in
and
inc
mov
test
sbb
je
cmp
sub
(bad)
cmp
sbb
jge
cmps
movs
test
das
mov
and
test
test
mul
dec
jge
popf
sub
lea
jmp
cmps
dec
test
div
daa
inc
cs
jl
dec
inc
iret
in
mov
bound
push
loopne
ds
jge
not
addr16
shl
test
sbb
mov
sbb
inc
jno
int3
sbb
xor
mov
add
pushf
das
int
dec
inc
dec
pop
mov
aam
test
sar
icebp
push
out
loopne
imul
jp
sbb
mov
pop
nop
xor
aad
enter
sahf
sub
fistp
dec
addr16
in
cmp
movs
xchg
jo
pop
mul
mov
in
outs
stos
test
sub
lods
call
pop
mov
cmp
je
and
in
mov
clc
repz
(bad)
adc
dec
adc
std
and
imul
xor
mov
sbb
leave
test
mov
jae
sub
iret
xor
les
not
inc
and
idiv
xchg
call
out
cmp
fidiv
push
xchg
test
hlt
pop
stos
fucom
pusha
pop
push
jno
loope
int3
mov
(bad)
hlt
ss
jp
cmp
aaa
imul
fld
dec
jnp
mov
ficomp
mov
sahf
ja
jge
push
sub
bnd
cmc
mov
cmps
push
adc
addr16
cld
popf
mov
and
fstp
pop
dec
adc
(bad)
out
sub
mov
lods
jo
popf
pop
push
xor
sub
out
mov
arpl
sub
jle
xor
pop
jnp
dec
xchg
hlt
xchg
fidivr
pop
dec
repnz
mov
loope
mov
xor
test
add
adc
add
xor
pop
pop
push
sbb
push
pop
cmps
sbb
add
call
xor
fmul
out
test
in
pop
aam
cmp
ins
in
pop
or
cld
adc
into
int3
jle
mov
push
hlt
xlat
jp
shl
test
mov
scas
inc
inc
cmp
cs
in
stos
lds
xchg
fild
imul
iret
into
cmp
popf
pop
mov
int3
dec
adc
xchg
mov
jmp
or
jnp
inc
fs
sbb
dec
xchg
(bad)
xchg
mov
je
inc
and
(bad)
test
je
cmp
call
xor
std
rcl
fstp
or
mov
xchg
dec
cmp
push
imul
xor
adc
xor
dec
mov
rol
loopne
dec
test
inc
mov
ror
jecxz
repz
sbb
aam
pop
leave
imul
imul
adc
adc
ss
pop
mov
bnd
add
outs
ja
inc
pop
(bad)
and
sbb
adc
div
sbb
push
loope
push
into
scas
cmp
shr
sub
dec
jge
js
mov
xchg
sbb
and
and
clc
cmp
or
sub
dec
jmp
in
test
pop
push
mov
add
mov
shl
ret
test
and
xor
cmp
fnstsw
sbb
xlat
cli
inc
push
retf
rol
xor
call
rcl
rol
mov
je
outs
stos
mov
retf
in
js
and
fs
loop
adc
pop
pop
bswap
test
mov
fcom
and
mov
inc
cmp
test
inc
out
(bad)
daa
push
stc
icebp
fdivr
outs
dec
aam
xchg
inc
cmp
aam
scas
not
mov
js
ror
jnp
int
xchg
sub
adc
icebp
pop
add
addr16
mov
xchg
jne
cmp
out
test
lock
xor
mov
clc
xor
repnz
leave
xor
adc
mov
mov
push
and
dec
scas
pop
lahf
mov
lds
aas
movs
(bad)
stc
out
ror
inc
adc
xchg
scas
mov
lds
(bad)
bound
push
push
stos
dec
(bad)
scas
push
push
test
stc
push
add
mov
popa
rcr
fist
int3
cli
shr
push
inc
mov
str
dec
jne
push
jnp
out
mov
(bad)
sub
sub
or
cmp
das
xor
retf
fcomp
jp
jge
mov
aas
leave
inc
and
imul
or
ror
push
xchg
cmp
out
adc
inc
(bad)
push
jne
enter
inc
mov
nop
int3
sbb
sbb
(bad)
stc
jnp
shl
cmc
ja
data16
jp
mov
test
cs
pop
jne
cmp
mul
mov
test
or
cmp
sbb
sti
jo
pop
xor
or
and
cld
aad
ret
bnd
pop
cmc
inc
mov
push
fsubr
test
pop
lods
mov
cmps
and
dec
inc
adc
or
addr16
cdq
rcr
es
jo
adc
je
add
stos
shl
test
fwait
jns
mov
dec
ins
int3
mov
(bad)
test
rcl
push
cmps
pusha
mov
cmp
scas
movs
mov
test
mov
xchg
and
cwde
loope
rcl
mov
fmul
out
xchg
test
and
pop
push
ins
cli
(bad)
in
enter
sahf
shr
leave
xor
dec
inc
pop
mov
fimul
movs
test
repz
sub
popf
cmps
jp
add
out
fcomp
ja
mov
rol
inc
mov
js
hlt
aas
(bad)
int3
fdivp
cwde
sbb
or
xchg
xor
pop
cmp
inc
or
fstp
lods
(bad)
leave
popa
ret
mov
xor
mov
aas
jnp
cli
fwait
mov
sub
iret
aam
xchg
scas
cmps
fld
lock
push
icebp
push
(bad)
shr
out
push
iret
push
or
cmp
int
xchg
fnstsw
icebp
neg
mov
(bad)
clc
into
rcr
pop
dec
aas
push
adc
jno
scas
arpl
popa
fild
cmovnp
test
enter
add
xor
(bad)
mov
gs
push
pop
movsx
or
push
push
out
ins
dec
or
or
out
mov
sbb
ficomp
rol
xchg
clc
mov
or
pusha
fcom
fdivr
add
lahf
cdq
cmp
std
loop
adc
push
icebp
mov
xchg
add
push
(bad)
pop
icebp
fwait
mov
aaa
push
(bad)
dec
cmps
fld
xchg
jbe
pop
sub
mov
js
mov
jle
nop
mov
scas
test
ret
test
pop
fst
cmp
xor
cmps
cdq
int
and
call
dec
add
cwde
call
add
pop
fisubr
jge
jb
mov
mov
mov
nop
jmp
loop
pop
push
lods
popf
dec
sbb
push
sbb
lods
in
aam
outs
cmp
fsub
punpcklwd
cmp
pusha
jnp
lock
int
cdq
out
movs
in
cdq
bound
shr
aad
aad
fldenv
sbb
xchg
in
jne
jnp
adc
aad
ins
div
or
xor
jb
mov
sub
mov
or
lea
mov
jmp
sub
or
push
imul
cmp
shrd
jbe
fisubr
je
cli
imul
int3
and
xchg
inc
bound
rcr
icebp
dec
push
pushf
pop
mov
cli
push
sub
jns
hlt
xchg
enter
pop
dec
sbb
add
pop
lock
pop
popa
xchg
cwde
hlt
mov
movs
add
xor
div
xor
adc
int3
out
test
jno
clc
xchg
jb
sahf
jge
xor
cmp
xor
repz
in
in
retf
dec
inc
out
adc
or
(bad)
jmp
adc
jmp
std
mov
repnz
mov
(bad)
or
test
and
xor
mov
popf
test
hlt
cli
jle
pop
jb
stc
stos
pop
add
ret
mov
cmp
and
fcomp
pop
mov
aad
cmp
xor
adc
pop
sbb
push
popf
adc
xor
push
loope
push
repz
or
cmp
mov
jp
scas
popf
rcl
jle
sub
mov
ficomp
iret
or
test
adc
jae
and
(bad)
int3
jmp
jb
imul
jbe
scas
ins
xor
push
cmp
cmps
popf
pop
ins
dec
daa
hlt
ds
in
mov
aas
daa
jnp
les
mov
ins
ror
cmps
jne
out
cmps
outs
movs
(bad)
(bad)
in
or
sub
push
adc
sbb
popa
vpcmpgtw
push
adc
iret
push
inc
inc
in
data16
add
jge
xor
test
outs
lea
pop
in
data16
shl
fistp
and
inc
push
lahf
mov
cmc
test
cmp
sbb
int3
fwait
sti
ins
cdq
outs
in
ja
inc
mov
icebp
jmp
sbb
jp
inc
and
mov
pop
cmps
jl
popa
cld
jmp
hlt
int
lahf
push
mov
xchg
pop
inc
int
ins
mov
imul
mov
enter
or
daa
push
xor
and
inc
fs
and
xor
pop
adc
std
es
cmp
sub
inc
and
sub
sbb
cmp
into
jle
loope
addr16
adc
in
test
dec
pop
jmp
inc
sti
(bad)
dec
mov
jbe
xchg
stos
arpl
cmps
cdq
dec
add
data16
xchg
pop
cmps
push
aas
dec
(bad)
rol
dec
jle
imul
cmps
jmp
repnz
push
inc
pop
fadd
daa
jecxz
ins
imul
xchg
fadd
and
clc
sub
xchg
mov
arpl
pop
or
sar
and
icebp
addr16
or
sbb
(bad)
push
cmp
add
mov
out
cwde
inc
out
add
jns
dec
add
out
jb
inc
sub
(bad)
addps
xchg
jmp
mov
iret
cmp
pop
adc
push
push
sahf
sub
mov
jge
push
cs
stos
cmps
jne
push
not
xchg
inc
adc
pop
jne
clc
push
and
cmp
arpl
movs
cli
cld
adc
(bad)
jl
(bad)
cmp
imul
add
dec
cvtps2pi
mov
cmp
push
cmp
or
call
leave
fist
mov
mul
push
cld
mov
mov
ds
fidivr
add
xor
scas
ret
pushf
mov
rol
lea
xchg
mov
xchg
cld
jno
mov
ret
push
dec
add
in
jo
jne
mov
stos
in
test
add
pop
loope
xchg
xchg
fwait
cld
cmp
dec
repz
dec
adc
aad
sub
aad
push
xor
ja
pusha
(bad)
test
rcl
add
push
cmp
aam
push
mov
inc
and
push
jne
jecxz
cmc
inc
xchg
into
cmp
add
pop
mov
scas
adc
mov
and
jne
push
imul
pushf
pop
cli
adc
jle
loop
and
pushf
bound
sub
sbb
add
dec
jge
test
divps
aam
push
or
push
(bad)
(bad)
dec
dec
fadd
xchg
push
(bad)
jle
int3
add
popf
(bad)
stc
adc
push
cld
inc
xlat
pop
pop
adc
mov
adc
popf
int3
jl
aad
jge
mov
jns
pop
inc
out
popf
xchg
and
sub
jl
add
add
fisttp
push
ins
pushf
movs
fwait
xor
adc
jl
sub
sbb
call
sbb
arpl
(bad)
sbb
movs
sar
out
push
int
adc
push
mov
hlt
adc
cmp
ret
push
(bad)
mov
ss
(bad)
mov
dec
outs
(bad)
and
and
mov
or
mov
lods
fiadd
adc
jmp
js
test
(bad)
inc
retf
add
fld
jp
sub
adc
cmp
push
pop
retf
jle
shl
jno
mov
outs
fs
dec
sbb
dec
fimul
sar
push
icebp
cmp
scas
and
mov
lahf
inc
mov
pop
xchg
out
xchg
call
jne
sti
call
mov
xchg
jecxz
mov
js
inc
in
dec
jae
stc
jge
mov
arpl
push
imul
popa
loopne
fnstsw
call
inc
inc
or
ds
cmp
adc
jne
pop
jno
repnz
inc
or
fadd
in
fs
or
sub
leave
loope
xchg
vpcmpeqw
clc
gs
cmc
dec
jo
push
movs
(bad)
jmp
ins
sbb
loopne
arpl
into
ja
dec
stos
mov
lock
rcr
mov
mov
mov
repz
and
inc
sub
ret
mov
cli
scas
(bad)
jg
(bad)
xor
sti
stos
mov
mov
adc
mov
xor
daa
lock
out
ss
(bad)
into
dec
stos
ins
xchg
push
cmp
add
push
xor
inc
cmps
fdiv
sbb
sahf
(bad)
jmp
inc
(bad)
stc
mov
xor
loopne
sti
call
js
in
add
add
inc
in
and
stc
push
mov
imul
ja
pop
pop
icebp
dec
iret
sbb
shl
and
loopne
cmp
lahf
sub
sub
test
cdq
pop
mov
add
inc
fwait
mov
mov
inc
(bad)
in
pop
cmp
xchg
and
cmp
pop
fsubr
shr
(bad)
adc
push
sbb
dec
push
arpl
into
add
dec
pop
push
imul
push
in
mov
jp
jmp
and
call
cmp
rol
push
outs
xor
and
mov
fidivr
jge
js
cmps
or
ret
xor
iret
push
add
loope
push
mov
adc
mov
loope
mov
adc
adc
add
lock
mov
mov
dec
jg
sbb
stos
inc
cmps
adc
push
popa
xchg
pop
adc
aas
mov
stos
push
bound
sti
pop
ficomp
sbb
stc
cmc
(bad)
pop
gs
push
inc
nop
adc
mov
and
add
xchg
xlat
movs
push
mov
jecxz
and
sbb
xchg
lea
xlat
pop
inc
scas
xor
mov
and
add
loopne
push
into
mov
test
adc
cdq
or
into
mov
sub
mov
mov
jmp
outs
neg
retf
enter
lods
not
sub
cmp
push
cmp
dec
cmp
dec
outs
inc
cld
xchg
repnz
sub
jmp
js
mov
xchg
int3
ret
fstp
loope
stos
push
fidiv
xor
bound
aaa
jp
xchg
jbe
cmp
xchg
dec
shr
adc
and
or
mov
jno
out
sahf
bound
lea
bound
(bad)
shr
rcr
lock
or
in
cwde
repnz
inc
jb
popf
xchg
icebp
pop
jmp
jmp
out
test
jg
sub
cmps
(bad)
aam
lods
enter
pop
push
add
adc
jge
xchg
inc
leave
sbb
sub
mov
sar
push
shr
cmps
mov
shl
inc
xchg
dec
data16
dec
movs
cmp
xor
les
out
xor
inc
ss
pop
adc
test
pushf
into
mov
sub
lds
popf
xor
in
sti
int3
(bad)
xor
fisub
pop
push
cmp
pop
popf
add
adc
fst
call
fs
not
dec
jmp
sbb
ds
ret
adc
xchg
dec
jmp
bound
ss
ds
mov
adc
jecxz
mov
out
xchg
and
push
push
add
jbe
repnz
xor
ins
pop
aas
addr16
mov
scas
in
icebp
(bad)
dec
test
rcr
popa
xor
cmp
adc
pop
lods
dec
imul
nop
adc
je
(bad)
sub
and
popf
leave
imul
repnz
or
ja
sbb
lds
cmp
loop
enter
pop
mulps
(bad)
and
pop
out
cmp
pop
adc
addr16
cs
push
inc
add
fld
add
dec
std
es
stc
adc
pop
in
in
out
and
lods
movs
sub
jb
mov
ror
jmp
lea
or
mov
add
xchg
sub
pop
or
jle
ja
test
leave
cmp
inc
ins
sbb
cli
frstor
jns
inc
push
scas
or
clc
push
loop
add
lods
mov
or
clc
popf
or
out
stos
mov
jmp
ret
(bad)
xor
out
mov
nop
add
push
xchg
push
fadd
das
inc
cs
xchg
mov
cs
retf
ins
ret
lahf
cli
in
fst
out
repnz
rol
mov
or
shl
mov
out
push
loop
mov
jl
popa
dec
in
mov
unpckhps
xchg
pop
sahf
sub
inc
and
sbb
ins
lds
and
movs
mov
xchg
dec
jnp
adc
jbe
mov
rol
pop
pop
sbb
inc
xlat
push
mov
in
icebp
sub
jae
ss
or
xor
add
in
sub
shr
lock
js
mov
(bad)
lock
in
in
scas
xor
ins
inc
jecxz
popa
or
test
dec
cli
addr16
jmp
inc
sub
cwde
scas
into
xchg
lods
repz
adc
in
mov
jle
sbb
xor
stc
inc
jno
movs
call
enter
jl
pop
jecxz
movs
sub
sbb
xor
fld
sbb
out
clc
adc
cs
(bad)
sti
rol
jge
cmp
dec
cmp
iret
sbb
jb
xlat
pop
or
pop
xchg
into
xor
movs
jp
add
loop
or
std
aam
jb
scas
retf
fdiv
or
lea
xchg
or
jmp
lock
ss
ret
retf
jno
std
mov
sti
xchg
mov
imul
xchg
les
dec
je
call
push
mov
jno
xlat
jnp
and
shl
js
xor
aas
xchg
aaa
xchg
ror
jb
jno
pop
push
push
adc
add
out
sub
lahf
jmp
adc
scas
add
push
stos
xchg
inc
cmp
int
adc
push
dec
ss
imul
and
dec
jnp
sub
leave
(bad)
adc
rcl
arpl
movs
call
lahf
adc
sbb
sbb
movs
and
add
pop
pop
mov
fisub
cmp
and
ja
(bad)
jne
adc
jno
imul
push
mov
sbb
bound
pop
and
or
(bad)
push
add
or
cmp
daa
scas
scas
jae
mov
hlt
call
jmp
(bad)
sbb
dec
mov
test
push
stos
mov
jmp
and
cmp
adc
jno
adc
mov
mov
lahf
mov
jg
and
idiv
mov
cmps
hlt
adc
or
mov
scas
lods
push
bnd
pusha
popa
and
rcl
adc
xchg
ror
mov
adc
dec
pop
sub
int3
rcl
test
popf
rcr
loope
jnp
fist
jmp
push
loopne
or
test
cmp
(bad)
(bad)
test
fsubr
push
sbb
mov
cmc
mov
(bad)
push
jns
(bad)
mov
mov
push
xchg
jnp
or
test
es
icebp
xor
xor
in
mov
mov
mov
push
inc
cli
mov
jmp
lods
mov
sbb
adc
xlat
xchg
test
cmps
call
mov
rol
xchg
aaa
push
stos
imul
icebp
lock
jg
and
in
xlat
dec
pop
mov
inc
xor
je
mov
sahf
sti
rcl
sub
inc
ds
sti
dec
cmp
rcl
retf
out
out
sub
sbb
dec
ficom
cmc
sub
ds
loopne
jnp
in
adc
jnp
jno
rep
ja
add
mov
add
sbb
xlat
std
fcom
inc
dec
fiadd
mov
rol
call
in
xor
push
inc
jl
pop
push
imul
cwde
aas
and
sub
xchg
sub
jp
xchg
xor
mov
cmp
and
(bad)
adc
test
dec
xchg
sbb
(bad)
inc
and
leave
mov
lahf
xor
inc
inc
dec
mov
es
sbb
lods
xchg
mov
int3
mov
push
dec
mov
push
daa
ret
jecxz
cmp
and
mov
pop
xchg
or
dec
imul
pop
xlat
mov
mov
out
mov
imul
push
fild
mov
arpl
jp
xor
mov
(bad)
cld
and
cmp
inc
retf
or
pop
sahf
cmp
fisttp
mov
call
sbb
clc
cmp
daa
(bad)
mov
mov
fmul
adc
pmaxub
shl
push
push
fidiv
shl
sbb
scas
add
add
pop
in
fild
mov
jno
jo
push
addr16
sbb
repnz
mov
jle
lds
sti
sub
inc
hlt
movs
call
or
int3
scas
and
dec
in
mov
pop
jmp
arpl
sahf
or
push
cwde
jne
fisubr
mov
mov
pop
or
push
cli
sub
test
push
pusha
and
mov
push
pushf
loopne
mov
lock
xchg
jne
sbb
push
pusha
jle
pop
add
mov
jp
sti
sbb
shr
ja
add
test
mov
ds
sti
push
cdq
xor
mov
movs
inc
push
xor
fucom
push
jp
or
sbb
sar
(bad)
ss
pop
xor
and
sbb
dec
retf
mov
mov
jns
push
(bad)
ss
pop
inc
in
call
ins
or
adc
fnstcw
jl
test
out
xchg
lods
and
jo
add
stc
pop
mov
movs
enter
dec
push
mov
mov
mov
std
repnz
mov
or
xchg
arpl
stc
daa
pop
mov
fwait
sub
ror
stc
pop
in
cdq
fst
adc
jp
std
or
inc
mov
jae
adc
or
xor
push
push
jge
es
inc
daa
adc
rol
iret
cmp
mov
test
sbb
stc
mul
mov
arpl
out
call
ror
xchg
xlat
sar
lods
adc
sbb
fmul
movs
das
fst
rcl
cmp
push
(bad)
xor
pop
adc
mov
daa
dec
sub
push
sbb
pop
adc
pop
outs
dec
jno
push
pop
ins
fstp
les
dec
aad
jle
add
int3
scas
in
movs
push
add
xor
and
loop
mov
jp
lods
call
xchg
pop
jmp
or
push
pop
into
mov
arpl
jmp
div
pop
icebp
adc
sbb
push
sbb
push
je
loope
shr
out
cs
inc
cmc
test
js
es
mov
cmp
ficomp
mov
imul
mov
sbb
push
jmp
stc
dec
mov
fldcw
xor
xor
shl
dec
xchg
out
xor
xchg
sbb
jp
sbb
mov
in
repz
push
jmp
cld
(bad)
sub
xor
mov
in
xor
jbe
sbb
jg
xchg
jno
ds
call
and
xchg
adc
cmps
sbb
pop
sub
sti
push
mov
inc
or
add
cld
and
pop
sbb
adc
cmp
sar
fwait
push
ds
or
aam
mov
repnz
inc
inc
sbb
sub
inc
or
(bad)
adc
nop
xchg
popa
and
and
pop
mov
shl
fst
pushf
ret
push
cli
and
test
mov
nop
sub
mov
scas
xchg
ret
push
(bad)
call
imul
jno
sub
add
adc
out
or
in
nop
stc
push
mov
call
sbb
jo
cdq
cdq
add
rol
adc
cmc
jle
dec
inc
mov
mov
or
push
fidivr
rcr
inc
cwde
dec
push
jae
sub
adc
dec
popf
jnp
test
cmp
lock
scas
rcr
adc
pop
or
dec
lahf
dec
sbb
mov
in
add
and
test
jmp
aas
mov
outs
push
popa
jl
call
iret
push
and
and
lock
jne
dec
cmp
mov
sbb
fadd
out
imul
cs
dec
mov
call
adc
cmps
xor
movs
ret
inc
fcmovbe
sbb
jl
out
add
or
inc
fst
test
(bad)
jo
mov
xchg
and
dec
mov
movs
ss
sbb
ret
sub
lods
shl
push
inc
inc
icebp
call
pop
out
xor
xchg
movs
cmp
or
lods
ret
jg
popf
jmp
jb
pop
loop
stc
ds
pop
shr
shl
push
in
jle
retf
rcr
loopne
loopne
pop
stos
and
adc
jmp
loope
out
enter
and
(bad)
dec
sar
out
inc
shl
sub
cmp
cmp
xchg
pusha
or
aad
retf
xlat
cmps
test
sub
sbb
mov
mov
fbld
out
cmp
mov
shl
pusha
aam
xchg
frstor
cmc
dec
repz
jge
pop
out
add
lods
sahf
or
adc
inc
inc
retf
push
mov
sbb
mov
add
popa
push
mov
cmps
aaa
dec
or
movs
cwde
jne
shl
bound
mov
jle
in
out
arpl
mov
mov
call
stos
imul
push
gs
mov
stos
push
enter
fild
xor
and
xor
jle
jns
pop
sbb
cmp
add
les
outs
cmp
ss
in
scas
mov
call
jl
(bad)
pop
(bad)
js
repnz
ins
pop
jecxz
jge
xor
fisttp
lods
sub
mov
enter
fist
mov
push
fldenv
cmp
lea
aam
and
jecxz
jecxz
cmp
scas
call
add
mov
in
ja
mov
inc
ins
push
jmp
ret
outs
push
push
or
add
xor
fsub
xlat
dec
mov
xchg
push
dec
(bad)
cmp
fcomp
dec
xor
sub
push
mov
nop
movs
mov
mov
shr
and
not
enter
stc
retf
xor
mov
das
push
in
and
inc
xor
stos
and
sub
push
pop
gs
std
outs
stc
pop
test
int
inc
sar
(bad)
or
lahf
js
outs
call
pop
lea
lds
mov
stos
push
sar
cmp
aaa
xchg
xchg
gs
add
jne
es
xor
xor
cli
push
sti
sbb
ror
add
lea
ins
jge
inc
dec
or
inc
ret
movs
aam
ds
jb
adc
aam
test
je
inc
adc
mov
cdq
(bad)
jb
into
mov
adc
jle
mov
sub
js
pop
(bad)
push
lock
mov
sbb
sahf
pop
fsub
rcr
cmps
ss
mov
(bad)
jne
sbb
gs
call
pushfw
into
inc
cdq
pop
test
jl
in
jbe
jl
mov
or
mov
retw
xor
lods
sbb
cmps
mov
repz
sub
pop
out
and
xchg
ret
push
mov
or
sbb
int
xor
jp
lds
pusha
adc
daa
stos
dec
pop
mov
jg
push
pop
outs
xor
stos
pop
add
ins
xor
jb
mov
jbe
jge
loopne
(bad)
ins
mov
adc
cmps
dec
push
mov
je
cmp
xchg
xor
jmp
pop
push
dec
(bad)
clc
cmp
rol
jmp
aad
scas
mov
aas
lds
int3
arpl
jo
inc
pop
adc
add
cmp
sbb
cdq
mov
out
or
push
push
adc
push
mov
lods
mov
xor
mov
inc
(bad)
es
in
es
pop
aaa
mov
lds
addr16
sub
outs
or
jge
(bad)
ror
or
ss
and
xor
in
lods
xchg
xchg
cmps
push
cmp
fiadd
movs
xchg
sbb
add
inc
xchg
mov
xor
sub
xchg
pop
test
dec
int3
fcmovne
adc
push
or
cli
mov
pop
in
jg
jmp
mov
jmp
out
ja
jp
repnz
cmp
idiv
aad
std
das
repz
nop
jecxz
das
dec
ds
call
fs
jo
sub
push
aam
dec
popa
or
out
scas
(bad)
(bad)
inc
arpl
mov
adc
cli
jle
ret
mov
dec
xchg
mov
call
xor
out
cmp
lods
mov
cmps
jl
movs
(bad)
xor
push
adc
imul
xchg
ror
mov
push
push
lss
adc
xor
rol
fst
(bad)
scas
cmp
dec
jecxz
push
and
push
and
mov
adc
mov
out
inc
mov
aaa
lods
push
inc
(bad)
(bad)
lock
retf
in
aas
mov
in
cmp
ins
out
das
movs
aad
arpl
xchg
push
and
inc
test
sub
dec
imul
shr
push
sbb
scas
pop
lahf
ds
push
jb
data16
aaa
(bad)
xor
test
inc
into
or
inc
mov
xchg
aad
push
cmps
mov
fldenv
mov
jp
pop
jno
js
mov
mov
sub
fbld
add
lea
jmp
mov
sub
push
mov
jne
mov
and
(bad)
jmp
xchg
sub
and
pop
test
xor
mov
std
in
inc
aad
adc
xchg
mov
les
cmp
rol
mov
dec
pop
dec
xor
gs
ds
retf
pop
les
mov
jle
xor
cmps
lods
add
add
and
cdq
ds
outs
mov
dec
adc
sahf
xchg
push
or
test
or
add
jmp
mov
jmp
cmp
icebp
push
(bad)
icebp
dec
fs
jecxz
jne
mov
push
sar
stc
inc
rcr
inc
ds
imul
push
mov
cmp
add
xor
popa
add
gs
iret
les
test
add
push
push
inc
adc
cmp
fdiv
xchg
outs
clc
and
aad
add
cmp
scas
repnz
in
dec
lock
pusha
fisubr
xchg
push
jnp
pop
pop
movs
pop
lds
stos
dec
rcr
ins
adc
test
inc
jge
lea
xchg
mov
jbe
dec
aas
fwait
xchg
sub
aam
test
mov
div
(bad)
aam
shl
outs
test
(bad)
call
into
adc
je
ja
stos
jecxz
jle
sub
das
shl
sahf
jb
xlat
dec
xor
je
in
popf
enter
xlat
arpl
jae
fnstenv
fdiv
popa
push
inc
aas
dec
loopne
aad
stc
out
test
jae
add
repz
sub
stos
cmp
sub
jge
das
push
cli
cmc
dec
hlt
mov
xor
push
ins
icebp
scas
jnp
inc
mov
addr16
cdq
jmp
push
xchg
add
in
pushf
shl
dec
adc
mov
inc
sbb
popa
inc
jmp
les
shl
scas
mov
gs
push
lods
sar
movs
mov
xlat
pop
stos
test
mov
movs
pop
cld
hlt
in
sub
or
mov
mov
adc
cld
aas
scas
es
cmp
adc
aam
xor
mov
or
inc
xor
mov
outs
and
int3
push
xor
push
sbb
lock
xor
mov
ret
inc
out
jo
jp
das
ja
or
mov
gs
push
icebp
scas
xchg
jl
cwde
enter
xchg
mov
mul
cmp
call
jo
xor
cmp
mov
jne
pop
call
sbb
adc
fadd
cmps
rcl
pop
inc
xchg
ds
cmp
adc
lea
fadd
cmp
div
lods
add
ja
push
dec
jnp
stos
out
loopne
cmp
sub
cmp
mov
loope
jge
cmp
int
or
mov
dec
mov
std
cs
jne
rol
cwde
pop
inc
dec
div
jecxz
stc
inc
retf
mov
pop
pop
ret
jp
jp
push
jmp
ss
dec
bound
(bad)
mov
inc
mov
jmp
in
and
xchg
daa
ret
xor
mov
je
pop
ret
mov
cs
mov
and
jns
push
in
mov
mov
cwde
adc
test
dec
arpl
enter
fsubr
lahf
xchg
mov
lock
sbb
jb
mov
cmp
jo
sbb
sbb
test
adc
scas
mov
sahf
or
pop
dec
sar
xor
int3
or
ins
sub
xchg
cmp
inc
nop
push
aam
and
sbb
pushf
test
sbb
xchg
stos
sub
sub
mov
cli
(bad)
pop
or
sbb
and
mov
adc
pmaddwd
pop
jnp
leave
aas
adc
and
add
retf
add
std
(bad)
adc
inc
sar
mov
ins
inc
rcr
and
rcr
xor
aaa
arpl
push
or
add
xchg
pusha
fnstsw
fisttp
mov
xchg
xchg
stos
xor
xchg
xchg
ins
sbb
out
inc
pop
out
jl
dec
out
cmp
and
cdq
jmp
mov
dec
js
cmps
fadd
(bad)
enter
lds
mov
jecxz
iret
scas
stos
sub
ds
dec
pop
pusha
sbb
push
leave
inc
sub
lahf
pushf
fcom
dec
repz
sbb
sub
sbb
sar
es
xchg
sbb
iret
lods
add
push
mov
test
in
aaa
mov
or
pop
in
dec
jbe
xor
inc
sahf
fdivr
sub
mov
ins
fstp
inc
lods
xlat
popa
mov
retf
add
jnp
sub
icebp
mov
cmp
xchg
sbb
cmp
call
nop
(bad)
jae
shl
int
cmp
push
sar
inc
addr16
in
mov
pop
in
fisubr
xchg
inc
iret
aaa
loope
adc
imul
scas
inc
mov
rol
add
sbb
adc
stos
(bad)
sub
sub
jle
lock
jmp
dec
sbb
cmps
aaa
in
div
int3
in
ins
loopne
jne
stos
sti
std
call
and
push
add
jns
test
cmp
and
xor
adc
pop
(bad)
repz
sub
or
(bad)
pop
xchg
mov
cmp
xor
cmc
push
sbb
fmul
stos
cmp
js
aam
dec
out
push
mov
xchg
ret
jae
lods
cmp
sub
mov
and
jmp
xchg
in
pushf
cmp
jl
and
sbb
sti
and
jbe
shl
pop
jnp
(bad)
sti
jecxz
(bad)
or
ss
test
scas
retf
xor
pushf
movs
nop
cmp
jge
leave
cmps
push
cli
ja
sti
add
call
jno
push
mov
fs
fs
aad
loop
sub
repz
ins
jecxz
push
xchg
mov
(bad)
movs
aaa
inc
add
pop
out
lahf
fld
mov
and
stos
loop
in
push
push
mov
in
adc
lods
dec
fsubr
pop
popf
(bad)
mov
push
or
les
push
popf
aas
out
std
outs
pop
aas
pop
mov
cmp
add
dec
xchg
push
retf
jnp
mov
mov
mov
pop
sbb
mov
adc
movs
int3
and
pop
dec
pop
pop
inc
retf
inc
int
pop
mov
stos
mov
jmp
mov
jnp
test
cld
out
or
xchg
inc
xchg
mov
push
into
push
retf
xlat
movs
or
sub
cmp
sbb
lock
pusha
psllq
xor
or
or
xor
shl
loop
cwde
and
dec
rol
fld
xchg
mov
and
(bad)
mov
icebp
sub
sbb
sub
dec
ja
add
and
mov
aad
pop
test
aad
lods
add
daa
ds
jmp
sub
mov
or
mov
and
jle
dec
add
cmc
hlt
mov
scas
test
jmp
imul
cmp
jmp
and
retf
sub
into
daa
xor
cmp
cwde
(bad)
sbb
ficom
xor
es
mov
inc
push
mov
and
jb
clc
jg
adc
mov
scas
mov
xchg
pushf
out
popa
ss
fild
js
aam
sub
loopne
sbb
sub
mov
outs
mov
sti
test
movs
pop
jle
add
aad
mov
pop
dec
ja
scas
imul
iret
mov
mov
inc
fnstenv
push
adc
mov
jmp
and
scas
jae
enter
push
xor
jbe
loop
jne
push
mov
lds
jnp
xlat
xor
add
fidiv
addr16
jecxz
cwde
or
hlt
int3
mov
jg
or
xchg
pop
mov
div
sbb
aad
push
lods
push
mov
mov
lods
mov
(bad)
fwait
lds
pop
xlat
mov
cmp
xor
adc
in
mov
xchg
dec
pop
sahf
xchg
adc
and
cdq
push
add
(bad)
mov
sub
xor
pop
fs
inc
(bad)
push
ja
ror
ins
sbb
push
sub
pop
sbb
push
cmps
cwde
xor
fsubr
cld
aas
cli
and
and
mov
sub
jle
ficom
pop
inc
out
iret
add
cdq
nop
dec
mov
mov
in
ins
mov
mov
shr
neg
xor
lods
add
call
iret
jb
mov
cmps
je
dec
frstor
mov
cmp
stos
or
sub
stos
mov
fs
sbb
rcl
popa
test
in
sahf
stos
add
sahf
mov
gs
jp
out
dec
pop
test
ja
xor
cmp
scas
xchg
ins
repz
cmp
std
mov
mov
setle
dec
mov
out
repz
or
jns
inc
popa
stc
add
xor
neg
or
xor
and
lock
pop
push
(bad)
iret
inc
inc
scas
sbb
ins
mov
mov
nop
shl
(bad)
mov
pop
or
jnp
fbld
mov
std
fnstcw
inc
(bad)
ret
fisubr
mov
inc
sahf
push
loope
(bad)
out
dec
and
add
mov
les
cli
add
shl
mov
retf
and
mov
mov
mov
mul
ret
pop
cmp
stos
sub
jmp
mov
dec
ret
add
nop
add
mov
jbe
add
mov
and
dec
push
scas
scas
clc
and
mov
imul
adc
sub
in
sbb
hlt
jecxz
xchg
sub
js
xchg
mul
fidiv
pop
sbb
(bad)
out
stos
or
movs
jle
(bad)
out
pop
add
lock
aam
movs
clc
aaa
mov
out
loop
call
in
and
jae
les
dec
cmp
xchg
fistp
cmp
mov
fimul
test
test
inc
fs
aas
pushf
dec
pop
pusha
pop
push
ror
xor
add
iret
in
sbb
xchg
ret
mov
xor
out
test
jns
lock
dec
fsub
out
dec
cdq
fisttp
cmp
push
pusha
lods
mov
or
cmp
cli
pop
iret
mov
inc
leave
push
lahf
lock
mov
jg
in
ds
sbb
mov
jl
daa
retf
adc
inc
mov
inc
stos
or
sbb
adc
xor
lods
clc
inc
pop
mov
les
jmp
fsub
pop
(bad)
daa
jecxz
cmp
ds
mov
repz
push
movs
jmp
add
sar
imul
xor
mov
ds
and
push
test
adc
sub
repz
mov
enter
mov
xor
scas
in
ss
sub
int3
ss
mov
inc
add
fsubr
mov
adc
rol
jge
in
fcomp
cmps
cdq
pop
sbb
in
mov
jnp
mov
cwde
fadd
mov
cmc
mov
dec
mov
cmps
icebp
lahf
jmp
xlat
addr16
adc
fimul
jae
mov
retf
loope
cld
arpl
mov
aam
mov
int
clc
mov
adc
js
xchg
aas
xor
daa
mov
lahf
mov
sub
repz
fstp
test
cmp
icebp
mov
cmc
pop
lods
mov
je
outs
sahf
in
mov
ret
mov
out
inc
rol
scas
test
out
inc
(bad)
ins
icebp
mov
inc
xchg
push
mov
adc
jecxz
imul
mov
mov
adc
mov
scas
mov
mov
dec
push
test
aas
pop
mov
pop
cmp
and
mov
xchg
pushf
bound
pop
and
test
aaa
sub
add
jg
scas
fld
sub
cmps
jmp
mov
popf
xlat
arpl
mov
adc
bound
arpl
jmp
push
sbb
dec
push
or
adc
enter
xchg
pushf
xchg
mov
or
and
ja
cdq
push
push
or
into
stc
push
pushw
mov
add
add
(bad)
inc
scas
(bad)
fidivr
cmp
outs
(bad)
sub
(bad)
sbb
pusha
imul
inc
jle
inc
inc
mov
jno
popf
enter
or
push
adc
aam
dec
test
jo
mov
enter
icebp
sub
xchg
pop
cmp
mov
cmp
jmp
ret
cmp
enter
into
sbb
cmps
jmp
inc
cmp
sub
nop
push
jmp
jo
mov
fiadd
cwde
(bad)
fbstp
inc
test
pop
pop
test
xchg
test
mov
gs
xor
or
shr
fmul
(bad)
jmp
ret
push
xor
ss
jo
or
mov
jle
sub
mov
jle
loopne
fimul
inc
stos
arpl
or
add
push
jmp
jmp
xchg
ds
aas
icebp
call
pusha
scas
push
shl
out
mov
xchg
fnstcw
lock
or
dec
ficom
mov
(bad)
ja
in
sub
or
push
xchg
int
sub
pop
add
in
js
nop
(bad)
cmp
sbb
jo
hlt
sbb
gs
pop
adc
push
push
mov
loope
xor
vphaddubd
loop
int
pop
sub
pop
xor
pop
push
jne
or
push
jne
lods
stos
sbb
movs
mov
je
pop
push
data16
pop
mov
sti
or
mov
rol
jb
hlt
cmp
fild
jmp
repnz
mov
sbb
xchg
cmps
fsub
mov
nop
xchg
and
les
sub
push
daa
fs
jns
pop
ret
cmp
cmp
xchg
sahf
inc
inc
adc
mov
fbstp
inc
adc
dec
or
jg
test
cmp
inc
test
mov
cdq
(bad)
cdq
mov
mov
fld
xor
enter
mov
and
adc
sysenter
rol
fwait
mov
loope
leave
and
out
mov
dec
retf
xor
push
mov
imul
push
dec
je
outs
push
imul
cmp
ja
xchg
inc
dec
or
test
push
or
fadd
sub
hlt
(bad)
in
imul
lods
xor
mov
popf
ficomp
sub
inc
outs
loop
cmps
dec
mov
adc
jl
sub
xchg
adc
lods
pop
das
xor
mov
dec
fist
retf
inc
repz
dec
jp
out
push
xor
mov
mov
jge
fwait
cmp
fist
sub
sub
push
add
je
xchg
js
rcl
mov
cld
pop
(bad)
ds
dec
mul
in
(bad)
out
xchg
push
mov
dec
jmp
cmp
(bad)
mov
adc
(bad)
or
jns
cmp
mov
sbb
test
cmc
aaa
or
jmp
enter
rcr
mov
mov
push
jge
mov
sub
pop
pop
dec
shr
mov
movs
dec
in
addr16
pop
cmps
or
mov
dec
jae
(bad)
dec
nop
lods
sub
sub
inc
mov
and
pop
mov
and
add
sbb
adc
xor
inc
jmp
sub
mov
dec
fmulp
push
push
loopne
dec
sti
ficom
mov
inc
inc
add
in
stos
arpl
adc
lea
fs
mov
xchg
daa
push
adc
arpl
pop
(bad)
fsubr
pushf
push
cli
inc
and
mov
cmp
mov
dec
mov
xor
sti
cmp
shl
sbb
mov
pop
loop
call
sbb
test
pop
mov
arpl
xacquire
push
mov
jno
pop
pop
xor
jmp
daa
adc
add
daa
movs
xchg
sbb
dec
iret
add
fwait
and
add
imul
cli
(bad)
aas
(bad)
ins
xchg
cmps
fisttp
dec
mov
mov
(bad)
loope
xor
fsubr
dec
mov
addr16
shl
inc
ins
inc
ss
lea
dec
rcr
xchg
dec
les
fcomp
cmps
xor
out
ror
push
or
pop
hlt
pop
lods
and
fnstenv
out
out
bound
push
push
sub
and
pop
jecxz
sbb
(bad)
jnp
inc
std
in
sar
lods
dec
xchg
push
outs
and
(bad)
aaa
push
push
push
(bad)
mov
enter
sub
cmps
popf
cmp
push
sub
mov
out
ds
ret
push
dec
aas
sbb
fistp
gs
pop
loopne
aas
or
jo
ror
pop
mov
call
cmp
enter
pop
add
xor
push
mov
jne
cmp
jle
mov
push
and
sbb
ror
in
xor
jbe
or
(bad)
inc
fwait
outs
adc
ret
sub
pop
push
les
sar
cmps
pop
xor
dec
les
pop
movs
jno
addr16
sub
push
shl
mov
ja
xchg
jnp
xor
inc
repnz
ret
je
and
sub
int3
pop
lods
and
and
add
fcom
std
sti
mov
mov
and
mov
mov
jp
ds
dec
inc
mov
lods
daa
cs
adc
int
aad
divps
xchg
mov
dec
dec
sahf
shl
dec
fnstcw
jl
ret
inc
icebp
jnp
(bad)
es
lods
in
fwait
mov
gs
mov
outs
call
pop
ds
sbb
jns
xchg
aam
pop
cmps
sub
iret
sub
mov
test
sub
xchg
push
push
mov
cmps
daa
stos
fisttp
and
out
cmps
jae
jecxz
jmp
mov
jns
stc
ja
in
add
rcl
sub
push
xchg
pop
cmc
fmul
cli
iret
std
jne
xor
or
add
inc
in
addr16
bound
xchg
nop
bound
fs
jmp
xchg
mov
shl
adc
icebp
retf
jbe
dec
push
shr
cmp
jl
xor
js
cmps
push
fsubr
xchg
cmp
mov
pop
mov
cdq
mov
inc
ficom
mov
and
sub
dec
cli
push
adc
fistp
sbb
add
mov
push
xchg
dec
imul
jge
push
push
idiv
sbb
mov
div
jmp
adc
fst
outs
xchg
arpl
inc
popa
(bad)
xchg
fnsave
loope
imul
adc
nop
out
in
push
pop
xchg
xchg
lods
xlat
dec
mov
inc
mov
jno
lods
(bad)
mov
rol
adc
inc
ret
mov
retf
inc
jnp
icebp
pop
call
adc
xchg
mov
ret
or
sub
xchg
mov
jmp
xchg
addr16
push
data16
in
loopne
pop
sub
xor
cmp
cmp
outs
and
and
les
ds
cmps
(bad)
push
dec
pop
and
mov
retf
call
pop
mov
add
(bad)
fcomip
(bad)
or
mov
jb
stc
dec
in
sar
std
adc
mov
loopne
ds
ja
pop
std
rcr
jecxz
(bad)
pusha
dec
mov
lods
cmp
rcl
scas
adc
inc
mov
xor
lods
jnp
push
mov
inc
dec
xlat
inc
shl
arpl
in
fisub
adc
jg
enter
push
add
jmp
in
cmp
retf
pop
test
mov
hlt
jmp
pop
jb
pop
push
popa
ds
mov
ficomp
cmps
add
pushw
jle
push
push
loop
mov
mov
lods
jle
mov
dec
rcr
mov
fcomp
pop
push
add
dec
aam
leave
inc
adc
jecxz
and
scas
xor
xchg
aas
outs
jbe
sub
pop
push
bound
xchg
cld
out
and
shr
imul
ja
or
ins
test
pop
adc
test
push
push
stos
xor
gs
inc
xchg
dec
enter
or
aas
pushf
frstor
mov
stc
mov
enter
ss
sti
and
scas
and
nop
and
add
and
jmp
jp
push
mov
jae
add
and
xor
pop
dec
fsubr
test
out
mov
movs
das
retf
mov
mov
sub
add
aad
mov
xchg
daa
or
in
cmp
mov
dec
fs
test
lahf
mov
adc
pop
mov
ja
popa
arpl
popa
pop
mov
jns
dec
scas
and
push
adc
mov
jns
sub
jg
pop
daa
jnp
retf
add
dec
clc
mov
out
dec
fsubr
mov
mov
cmp
std
cld
movs
dec
push
push
or
pop
pop
pop
adc
fucomp
sub
inc
test
repz
adc
sbb
mov
pop
cmp
(bad)
loope
imul
mov
shl
sbb
and
pushf
sub
in
ins
mov
sbb
clc
jp
mov
sbb
ss
test
aam
stos
or
push
popf
cmp
aas
jl
lds
popa
retf
data16
popf
cmp
leave
test
dec
test
push
push
pop
sbb
push
in
inc
fcmovnbe
cmps
js
push
cld
sbb
pop
cmp
mov
scas
push
dec
lods
mov
lods
(bad)
(bad)
push
sbb
xchg
jge
or
loopne
xlat
mov
into
pushf
stos
cmp
test
and
pop
push
mov
and
xor
stos
add
and
lahf
in
sub
(bad)
and
movs
cmps
cmp
ja
fimul
xchg
dec
scas
fwait
aam
test
pop
in
in
stc
mov
jge
icebp
xchg
inc
repz
sahf
scas
xor
add
cmp
mov
in
and
xlat
jge
aaa
repnz
jmp
loope
fimul
xor
jl
pop
mov
sti
in
mov
pop
jl
mov
stc
adc
shr
fiadd
mov
xchg
lods
pop
lods
push
pop
(bad)
enter
sbb
out
(bad)
sub
sbb
aas
push
fs
enter
shl
push
(bad)
in
cdq
popa
das
cmovns
xor
jp
popf
call
(bad)
jns
jno
dec
sub
pop
and
popf
loopne
(bad)
cmc
add
jne
and
mov
iret
push
xchg
(bad)
mov
adc
test
xlat
das
add
mov
adc
mov
mov
stos
sub
sub
imul
cmp
arpl
push
cmp
cmp
push
jb
dec
xchg
jge
xchg
jae
cld
jno
mov
xor
jecxz
sub
out
push
stos
daa
js
test
dec
push
jb
je
call
cdq
lods
pop
shl
mov
mov
fisttp
fbld
mov
fs
sahf
lock
push
shr
adc
out
inc
inc
in
jmp
daa
cwde
push
(bad)
int3
loopne
mov
inc
sbb
dec
jmp
xchg
ret
ds
in
adc
fs
es
adc
movs
xchg
hlt
cmps
xor
xchg
(bad)
jg
(bad)
daa
sbb
push
inc
inc
dec
addr16
outs
push
cwde
daa
mov
(bad)
test
and
jge
in
lods
and
dec
mov
pop
mov
push
inc
xchg
mov
fsub
push
stos
sub
jmp
and
inc
ret
adc
loope
data16
adc
mov
sub
movs
xchg
in
ja
js
shr
pop
data16
(bad)
mov
mov
fucomip
test
dec
push
or
push
sbb
cwde
inc
stc
mov
push
pusha
into
nop
push
lea
jecxz
dec
mov
push
daa
fidivr
pop
je
stc
sti
and
inc
add
loope
pop
mov
sub
outs
add
adc
push
add
js
in
in
aad
cmc
cmc
add
(bad)
std
retf
shr
mov
push
fwait
pop
add
inc
push
adc
add
jmp
aam
sub
fdivr
es
xlat
repnz
fsubr
push
xchg
in
loope
in
pop
xchg
jnp
xor
cwde
push
jae
(bad)
retf
mov
loop
inc
or
hlt
in
xor
aam
push
data16
popa
xor
cmp
clc
shl
xchg
push
push
sbb
test
jge
aam
and
sub
xlat
mov
test
movs
(bad)
setbe
js
leave
cwde
xor
dec
push
paddw
push
mov
adc
pop
inc
loope
in
mov
out
xchg
inc
test
ins
inc
dec
ret
pop
xchg
in
(bad)
xor
cmp
pop
stc
out
xchg
mov
jb
out
mov
aaa
jae
les
jno
js
dec
dec
lock
test
jg
mov
sbb
mov
mov
xor
push
loope
xchg
sub
(bad)
and
mov
xchg
sar
popa
mov
xchg
push
cs
and
(bad)
loop
push
or
cld
scas
mov
rol
(bad)
xacquire
adc
lods
fbld
sti
popa
inc
repz
xchg
xchg
(bad)
push
mov
xor
jns
inc
sti
mov
pop
shl
ror
jne
xchg
es
push
dec
dec
and
mov
sub
push
mov
ins
out
test
push
fwait
mov
aad
ss
sbb
mov
xor
jns
ds
xchg
xchg
mov
jl
fsubr
inc
fmul
cmps
xor
xchg
aaa
xchg
xor
mov
scas
fimul
inc
out
jb
jge
and
dec
pop
mov
lods
xchg
clc
(bad)
jmp
test
stc
and
pop
add
ret
shl
or
pop
inc
fdivr
and
repz
dec
lods
fidivr
outs
test
push
mov
cmp
adc
push
jg
(bad)
xchg
ret
(bad)
out
pop
mov
add
sub
daa
ins
mov
jbe
jnp
push
inc
jl
xchg
aas
mov
sub
cmp
xor
inc
jb
xchg
jecxz
fdivrp
in
xchg
mov
test
lock
int
enter
and
es
mov
sbb
push
cmps
sub
repnz
cmp
test
sahf
lds
not
cmps
pop
ror
stos
adc
jns
add
xchg
popf
pop
mov
xor
inc
lahf
out
mov
(bad)
xchg
aaa
test
fisubr
push
lahf
jb
pushf
idiv
fld
iret
dec
(bad)
push
mov
icebp
fnsetpm(287
out
inc
jle
ret
pop
jg
push
daa
pop
adc
mov
lds
xor
mov
mov
jl
jp
in
xchg
inc
js
daa
dec
mov
lods
fld
cwde
adc
adc
push
pop
cmp
test
fadd
jmp
ds
fisttp
or
mov
jmp
mov
fdiv
fdivr
adc
xchg
xchg
(bad)
enter
rol
or
ins
adc
fisttp
xchg
icebp
(bad)
int
inc
mov
mov
add
loop
xchg
cmps
inc
or
popf
jle
rol
movs
xor
cmp
pop
xor
mov
sbb
out
sbb
inc
mov
xchg
retf
push
sub
movs
cmp
in
xor
lods
leave
inc
mov
inc
or
dec
fcomp
push
punpckhdq
cmps
add
imul
into
addr16
shl
loopne
int3
(bad)
pusha
jl
jmp
data16
or
mov
(bad)
xlat
mov
cmp
js
xlat
repnz
imul
and
dec
sub
dec
push
mov
dec
sbb
mov
inc
shl
shl
dec
inc
mov
outs
loop
dec
sti
neg
wbinvd
push
mov
inc
fcmovnu
rol
(bad)
pop
shl
cmp
jp
xchg
rcl
lock
aam
(bad)
addr16
(bad)
dec
lock
mov
rcr
sbb
mov
repz
jmp
sub
dec
pop
push
xchg
(bad)
movs
ins
cmp
sub
shl
js
sar
std
in
pusha
sti
xor
lahf
xchg
dec
mov
xchg
popf
mov
add
dec
iret
pop
sbb
call
inc
pop
jmp
fdivr
cmp
inc
adc
jge
ds
jb
mov
icebp
movs
rcl
test
pop
shl
rol
retf
jg
adc
jmp
jge
nop
pop
xor
out
cmp
xchg
mov
call
xor
movs
or
jne
push
jge
adc
push
stos
mul
sub
clc
mov
aam
sbb
dec
xor
sub
and
data16
push
cmp
and
push
adc
aam
enter
cmps
xor
xchg
fbld
jmp
add
add
adc
sbb
nop
mov
mov
repnz
inc
(bad)
repnz
mov
sbb
aam
scas
add
mov
mov
push
cmp
adc
(bad)
jno
inc
xchg
xchg
shr
jne
loope
push
pop
js
ins
push
gs
mov
retf
mov
outs
sub
fld
ja
xchg
cs
xor
stc
adc
cmp
imul
dec
sbb
or
adc
mov
mov
leave
ja
adc
fwait
jns
sub
lods
ja
cmp
cmp
cmp
and
pushf
aaa
xlat
sub
daa
sub
inc
leave
sti
movs
adc
imul
lahf
fsub
aaa
adc
repnz
dec
mov
pop
add
or
xchg
inc
cwde
mov
mov
popa
popa
jae
adc
fdiv
mov
add
ss
std
push
jge
push
les
cwde
out
mov
mov
add
mov
repnz
push
popf
sub
outs
xlat
fst
xor
push
sahf
dec
(bad)
mov
mov
in
idiv
sbb
xor
add
aad
cmps
addr16
call
rol
or
std
dec
rcr
push
stos
scas
add
push
mov
pop
fstp
inc
out
jns
xchg
pop
mov
mov
add
sub
sar
push
dec
pusha
imul
sahf
inc
dec
sbb
mov
and
fidiv
loopne
(bad)
jae
push
or
das
out
mov
sbb
out
test
pop
in
pushf
fst
push
xchg
ins
das
fwait
inc
mov
lds
stc
push
jb
outs
xor
loope
sbb
sbb
inc
hlt
inc
cmp
cmp
pop
call
dec
and
add
pop
sub
push
je
repnz
imul
pop
inc
mul
sub
mov
fwait
adc
mov
in
mov
pop
push
ret
push
lods
jo
sub
push
inc
daa
mov
add
jmp
jmp
sbb
nop
jnp
cs
mov
push
rcl
test
dec
sub
test
stos
dec
cmc
sbb
inc
mov
int
and
lahf
mov
and
out
cmp
cs
mov
lahf
es
jp
ins
cmp
dec
jmp
shl
stos
(bad)
dec
ins
inc
in
fwait
stc
mov
mov
ins
mov
inc
mov
rcr
test
in
lods
js
cmp
cli
int3
rcr
into
ror
add
push
sbb
stos
arpl
icebp
and
jmp
dec
push
or
pusha
jns
dec
mov
adc
jle
jmp
inc
clc
dec
dec
imul
pop
outs
or
test
sub
jle
cld
jle
js
dec
cld
ins
push
fs
fcmovb
mov
int3
inc
hlt
jo
xor
test
int3
push
pop
or
enter
cld
dec
js
jno
cmp
xor
jge
int3
mov
daa
imul
popa
cmp
sbb
cmc
movs
sahf
ret
jecxz
push
loope
push
dec
add
in
test
into
(bad)
int3
pop
pop
xor
ds
outs
dec
jle
pop
add
aam
push
jmp
xor
cmps
sub
test
jge
adc
and
xchg
lds
(bad)
stc
dec
push
add
xchg
jbe
mov
jne
inc
imul
sub
dec
sbb
dec
in
push
call
cmp
rcl
sub
mov
xor
pop
jo
xchg
sbb
mov
hlt
int3
dec
mov
leave
ficomp
fldenv
mov
cmp
mov
movs
adc
(bad)
jmp
repnz
cs
jb
shl
scas
stos
pop
mov
mov
or
imul
ss
sar
aam
iret
jae
adc
sbb
mov
icebp
jl
shr
fistp
mov
stos
mov
sbb
fldenv
mov
and
mov
pop
loop
addr16
and
hlt
jmp
push
test
push
xchg
push
mov
xor
add
fidivr
sub
xor
sbb
mov
pop
push
add
aam
or
jmp
jmp
sbb
outs
jno
jge
int3
pop
bound
sbb
mov
pop
les
mov
fdivr
in
and
mov
inc
mov
or
rcr
jecxz
inc
sub
jle
arpl
mov
mov
rol
dec
jb
loop
pop
pop
mov
sti
and
jbe
movs
jns
pop
retf
mov
jmp
add
mov
push
int
push
cmp
sub
push
popf
jmp
pop
jae
cmp
inc
aaa
jp
sub
sbb
(bad)
and
out
rcr
fwait
outs
enter
cmp
adc
and
adc
dec
jae
rol
add
(bad)
xor
add
mov
test
in
or
fcompp
int3
stos
mov
mov
adc
jns
xlat
add
and
add
mov
test
inc
mov
lock
fisubr
(bad)
xor
jnp
lock
aam
sahf
lea
sub
(bad)
and
sub
js
push
push
fsub
cmp
and
push
dec
and
fcom
les
cdq
pop
loop
push
dec
push
sbb
test
outs
jnp
ds
out
call
xchg
rol
nop
or
push
daa
outs
mov
adc
js
scas
add
or
fisub
xchg
or
scas
push
jmp
sti
arpl
pop
lahf
rcr
popf
test
dec
mov
inc
pop
je
aas
lds
stos
adc
cli
mov
dec
adc
retf
push
es
rol
lea
loop
xor
mov
js
(bad)
btc
rcr
xor
mov
add
xchg
scas
pushf
sub
inc
clc
repnz
mov
pop
sub
xchg
dec
mov
popa
jo
bound
xchg
std
xchg
sub
push
pop
push
(bad)
movs
jbe
hlt
fcomp
mov
aas
or
push
xchg
test
loopne
scas
jbe
pop
scas
xchg
push
repnz
jno
inc
sbb
pop
adc
cmc
lea
add
adc
dec
jns
mov
retf
iret
xchg
mov
stc
jge
mov
out
fidivr
ss
mov
jne
movs
jg
ret
pop
loopne
adc
pop
add
and
inc
mov
xchg
push
retf
sub
fwait
iret
cmp
shl
jns
hlt
cmps
sub
retf
jnp
push
aas
icebp
in
sti
stc
mov
leave
mov
(bad)
push
mov
cli
ds
jbe
fs
sahf
shr
je
pop
out
jmp
arpl
call
loopne
movs
xchg
mov
sbb
test
or
lock
mov
dec
addr16
adc
shl
aaa
cmp
xchg
mov
sub
mov
jle
dec
cmp
stc
lods
or
pop
js
rcl
jl
daa
pop
push
fbstp
(bad)
add
sub
push
xchg
scas
xor
call
or
pop
or
(bad)
(bad)
push
sub
fdiv
shl
add
inc
mov
(bad)
retf
lea
adc
xchg
push
jne
pop
mov
mov
jne
out
cmp
cdq
mov
in
mov
retf
pushf
add
ins
cmp
sahf
dec
pop
dec
bnd
arpl
cdq
jo
(bad)
call
loop
dec
hlt
or
sbb
mov
sub
fnstsw
push
pop
mov
dec
int3
jbe
dec
mov
ror
cs
inc
in
fsubr
lds
xor
inc
xchg
inc
jecxz
mov
pshufw
mov
pushf
push
xor
leave
sahf
jbe
in
dec
in
cs
or
jg
push
bound
adc
cmp
les
out
mov
test
xchg
mov
rol
xchg
retf
jo
es
pop
pop
or
scas
(bad)
push
outs
sbb
rcl
pushf
jne
clc
push
in
(bad)
lods
pop
test
mov
and
enter
call
push
lahf
and
cmp
cli
xor
mov
repz
arpl
push
pop
aaa
push
jne
xor
jne
js
jae
je
jb
gs
out
or
lods
jle
sahf
cmps
jmp
fdiv
ret
inc
je
or
xchg
sbb
les
loop
mov
adc
xor
or
push
and
sbb
mov
xchg
sti
cwde
push
push
push
push
or
dec
call
cmp
repnz
xor
xor
sti
xlat
mov
mov
xor
mov
xchg
in
(bad)
arpl
pop
mov
icebp
mov
mov
out
out
das
sbb
pop
and
ret
ficomp
loopne
or
es
sbb
dec
add
mov
push
bound
xor
ins
pop
sbb
ret
pop
jbe
jne
sub
cmp
bound
in
or
nop
and
bound
xor
push
inc
lahf
mov
inc
lock
xchg
cmp
jno
mov
movs
mov
loope
xchg
jo
hlt
gs
mov
out
push
popf
call
mov
int3
mov
mov
inc
pop
xor
or
in
pusha
jg
clc
(bad)
lahf
test
cmp
and
and
aas
mov
xchg
sub
dec
cmp
lods
pop
cmps
mov
pandn
bound
jae
sbb
cmp
fwait
sub
xchg
push
inc
push
sbb
ss
int
mov
in
ins
mov
imul
and
mov
les
ss
jnp
retf
out
pop
ins
jae
sub
test
(bad)
test
ja
inc
xchg
and
pop
stos
mov
add
sbb
dec
into
js
popa
push
rcl
dec
and
and
out
push
rcl
inc
adc
mov
ffreep
jo
or
mov
in
pusha
arpl
pop
aaa
and
into
std
into
add
add
push
mov
mul
push
stc
in
dec
dec
(bad)
sub
loop
dec
jmp
ja
inc
xchg
cdq
add
stos
iret
push
xchg
inc
or
sub
mov
lds
dec
pop
rcr
cmps
lods
mov
adc
sbb
iret
pop
push
mov
pop
inc
pop
push
xor
mov
dec
jge
cmp
mov
sbb
movs
sub
push
(bad)
cli
ret
call
inc
and
mov
pop
dec
mov
dec
fst
(bad)
fistp
test
and
and
js
push
pusha
call
jae
(bad)
sub
cmp
dec
lods
jmp
inc
jae
pusha
(bad)
sahf
int3
cdq
cmp
jb
js
rcr
xlat
add
inc
popf
jp
jne
or
sahf
inc
inc
jnp
add
ds
xchg
pushf
adc
test
xor
inc
mov
into
test
add
pop
or
inc
mov
ret
or
add
loopne
mov
mov
out
sar
cmp
cmps
ins
pop
pop
cmp
out
adc
in
aaa
bound
or
fcom
dec
mov
ins
(bad)
(bad)
daa
jb
loop
sub
idiv
popf
(bad)
sub
pusha
xchg
add
and
inc
repnz
shr
imul
pushf
pop
(bad)
fdivrp
mov
and
jmp
cmps
ss
cmp
(bad)
rol
sbb
pop
pop
inc
cmps
mov
cmp
stos
jecxz
pop
and
push
inc
mov
cs
sub
sbb
aad
mov
mov
addr16
dec
jno
shl
pop
nop
xchg
movs
sub
push
add
inc
jbe
pop
sub
movs
or
lahf
adc
and
inc
int3
or
sbb
mov
dec
push
push
cmps
mov
cmp
mov
xchg
lock
jns
jne
jge
add
add
rcl
lock
pop
pusha
xchg
loope
jl
das
xor
inc
xchg
div
jp
mov
mov
dec
add
cdq
dec
fwait
leave
inc
lock
stc
xchg
add
data16
ret
arpl
aad
xor
mov
jg
sub
call
fcom
mov
push
push
pop
jp
mov
xor
pop
push
sub
cs
push
cmp
mov
mov
push
mov
xor
(bad)
push
push
pusha
mov
outs
add
fprem1
xchg
scas
xor
adc
sbb
adc
cmc
push
pusha
push
rcr
std
push
sahf
sbb
scas
cmp
jmp
sbb
lock
std
add
test
sbb
ins
mov
lds
dec
and
fistp
imul
fwait
pusha
add
push
pop
inc
mov
scas
(bad)
sbb
inc
cmp
inc
shl
dec
(bad)
mov
cmp
jmp
push
sub
adc
push
dec
jge
mov
int3
test
sub
cmp
pusha
push
daa
push
test
(bad)
(bad)
mov
sub
mov
cmp
add
sbb
add
cwde
scas
dec
es
repnz
inc
pop
call
sub
dec
mov
mov
xchg
popf
inc
pop
pop
mov
sub
pop
(bad)
fsub
pop
xor
dec
jo
jmp
mov
sub
sub
cmp
dec
aad
and
mov
and
arpl
lea
ja
or
push
sti
add
or
not
out
shl
leave
dec
(bad)
pop
ins
fmul
cdq
push
mov
ror
xor
add
stc
das
pop
cmps
sbb
add
outs
inc
test
push
dec
adc
mov
imul
adc
adc
xchg
shr
adc
sbb
call
xor
xchg
mov
mov
mov
xor
add
dec
sbb
push
pop
into
xchg
retf
retf
rcl
ins
sub
mov
cld
stc
xor
xor
aad
inc
jg
jbe
dec
inc
add
das
mov
jge
out
inc
mov
cmps
cmp
(bad)
inc
js
scas
icebp
push
jg
call
das
cmp
addr16
ins
xor
and
(bad)
int3
das
call
mov
imul
pop
adc
jnp
sti
and
(bad)
push
jle
sar
test
cmp
or
stos
repnz
inc
mov
enter
mov
sar
fisub
mov
jecxz
ffreep
inc
leave
fidiv
cmp
shl
or
scas
push
adc
pop
cmp
push
int3
sbb
inc
mov
clc
aaa
pop
fldcw
pusha
retf
ret
ds
cmc
ficomp
inc
mov
push
call
adc
sbb
adc
sub
outs
clc
adc
mov
sar
xchg
xchg
test
stos
adc
mov
jp
(bad)
sub
jecxz
in
mov
push
icebp
icebp
aas
je
clc
sub
mov
pop
pop
(bad)
and
mov
loope
ret
cmps
mov
xor
repnz
bound
inc
das
out
sar
mov
imul
push
lods
pop
repz
aas
stc
or
sub
(bad)
out
ret
jg
cld
retf
xor
mov
repz
call
adc
ret
mov
push
push
enter
repz
fadd
nop
inc
popf
es
fstp
shl
push
push
call
mov
cmc
sub
sahf
(bad)
sahf
rol
sub
mov
inc
or
adc
pusha
xchg
fs
outs
addr16
or
out
push
xor
ret
sub
outs
dec
jo
and
push
gs
cmp
jo
cdq
mov
mov
add
sbb
les
sub
inc
xchg
adc
push
test
out
jo
mov
and
movs
cmp
ds
clc
sbb
(bad)
int3
rcr
jno
sbb
popf
mov
jecxz
out
sbb
xchg
mov
xchg
movs
cmp
pop
or
inc
cwde
pop
xor
cmp
lods
push
adc
enter
and
xchg
inc
dec
cmps
mov
mov
dec
or
dec
pop
xor
and
cmp
adc
mov
lahf
pop
into
jnp
dec
in
mov
mov
mov
jns
repnz
icebp
jmp
dec
rcr
neg
add
fmul
inc
jle
lock
lock
das
daa
xchg
and
xchg
push
mov
jae
add
ror
test
(bad)
xor
retf
mov
cld
and
or
aaa
dec
sbb
jecxz
cwde
inc
aam
rcr
out
shr
pop
cli
sub
js
hlt
repnz
ins
test
popa
jg
ficomp
xchg
ja
icebp
(bad)
std
icebp
jp
push
push
imul
sti
and
fwait
pop
mov
icebp
push
daa
cmp
mov
or
stos
js
fldlg2
enter
and
dec
cs
out
fcom
cwde
mov
inc
imul
xor
mov
aad
lods
xor
retf
leave
jge
jo
mov
xchg
push
dec
push
js
enter
pop
clc
adc
fisttp
jge
and
and
sbb
ror
pop
je
jp
aam
adc
outs
jecxz
sub
xor
fcom
je
sub
pop
jge
mov
ficom
pushf
jns
fistp
retf
dec
(bad)
fadd
sub
movs
mov
rcr
lock
pop
loop
out
icebp
xor
icebp
sub
sbb
push
mov
and
push
push
cld
push
pop
(bad)
fsub
cmps
in
adc
xchg
std
stos
and
mov
ror
push
pop
mov
in
js
movs
je
push
pop
das
push
stos
mov
add
cmp
repnz
mov
retf
jmp
or
mov
cmp
scas
ins
push
and
sub
std
(bad)
cli
rcl
bound
enter
mov
cli
into
enter
xchg
cmp
pop
xor
cmp
xlat
fistp
mov
movs
shl
sbb
popf
cli
adc
inc
pop
enter
mov
xor
mov
fcmovb
ins
inc
nop
and
out
mov
cld
retf
adc
sbb
cmp
pop
push
movs
dec
retf
mov
push
jbe
mov
add
pop
pusha
push
call
add
fs
cmps
mov
fistp
jp
jno
cmp
lahf
lods
pop
pop
data16
shl
ins
xchg
mov
or
pop
sub
lds
mov
js
mov
std
push
push
mov
add
inc
stos
nop
mov
sub
enter
daa
mov
pop
cmc
mov
out
mov
xor
out
loop
and
mul
xchg
xchg
int
rcr
iret
test
and
and
add
(bad)
repz
fsubr
nop
add
fwait
test
or
dec
dec
pop
dec
(bad)
xchg
popf
lods
mov
jecxz
dec
mov
and
xlat
dec
mov
sahf
mov
xchg
rol
cwde
mov
pop
jae
or
aam
jnp
add
mov
scas
or
push
out
inc
stc
call
mov
or
pusha
cs
dec
fist
xlat
mov
add
cmp
pop
les
xchg
push
cwde
(bad)
into
test
popa
ds
jp
jmp
sub
xchg
test
mov
jno
rcr
dec
mov
aam
loop
hlt
push
mov
jae
cmp
adc
outs
mov
iret
mov
add
int
jb
mov
das
mov
ror
fist
dec
ret
aam
mov
mov
bound
movs
scas
(bad)
dec
(bad)
push
mov
mov
test
test
in
mov
push
ret
adc
add
mov
jmp
leave
jge
adc
xchg
je
cs
jns
pushf
add
sub
mov
shl
repz
xchg
jno
mov
movs
jecxz
ret
out
adc
xchg
mov
mov
and
sbb
inc
mov
or
scas
lods
scas
scas
sbb
js
adc
in
dec
push
inc
rep
mov
jg
mov
push
mov
bound
mov
jmp
dec
pop
sbb
mov
ins
shl
ficom
in
in
stos
push
test
popa
popa
xchg
std
xor
xor
mov
bound
enter
es
(bad)
aaa
into
fistp
mov
enter
shr
pop
fucomp
mov
nop
sub
nop
shr
icebp
daa
cs
cli
jnp
xor
loop
jns
int
(bad)
lock
arpl
stos
aad
sub
sbb
icebp
arpl
loop
test
inc
mov
iret
nop
adc
ror
push
adc
jge
sbb
or
pop
ss
ror
mov
ffreep
or
cmp
jo
mov
ret
jo
add
sbb
aad
leave
mov
fdivr
push
inc
xor
jmp
sub
arpl
jnp
push
mov
js
pop
jmp
daa
sar
xor
inc
xchg
or
cmps
cmp
test
shl
cld
test
nop
xchg
aad
or
fld
adc
addr16
inc
test
inc
adc
and
div
pop
add
pop
adc
mov
ss
mov
gs
cwde
call
sbb
jns
inc
out
pop
retf
psubd
repz
push
jno
sub
test
add
lods
push
inc
xor
xor
dec
add
inc
add
xor
(bad)
not
fiadd
(bad)
in
in
mov
lods
lods
add
ret
and
inc
push
mov
enter
fs
xor
fs
mov
clc
in
inc
jmp
mov
push
cmp
ror
pop
mov
lahf
nop
pusha
push
and
mov
stos
fadd
shr
ja
adc
scas
lds
sbb
lock
xchg
pop
or
xor
popa
adc
push
adc
mov
dec
xor
sti
int3
scas
cwde
jnp
add
sbb
or
add
imul
rol
xchg
stc
inc
cmp
push
or
in
mov
xchg
data16
pushf
les
add
test
jns
fistp
aas
push
arpl
je
or
ds
out
imul
add
js
jno
icebp
out
add
jns
test
enter
ja
push
pop
mov
imul
and
and
jle
out
test
mov
push
add
xchg
sub
not
lods
out
add
movs
mov
int3
adc
cwde
cmp
push
ins
push
es
push
sub
loop
jne
mov
retf
movs
xor
(bad)
push
pop
lds
popf
jbe
ficomp
or
adc
push
outs
adc
cwde
lds
enter
retf
and
mov
int
sub
mov
daa
mov
fmul
addr16
xchg
ret
mov
pop
and
bound
aaa
xchg
sbb
repz
cmps
or
ret
repnz
or
scas
mov
jge
retf
call
pop
fnsave
aad
sub
xor
mov
mov
xor
div
out
cld
mov
cmps
popa
scas
dec
in
stc
es
lea
or
ins
mov
jbe
xor
dec
addr16
dec
xchg
add
push
aas
push
lock
into
or
jl
cmp
cmp
dec
(bad)
out
add
rol
jae
mov
call
inc
jg
push
aam
retf
outs
iret
jns
jb
cs
dec
fimul
sub
or
in
test
(bad)
push
cmps
out
xor
mov
popa
fisub
jle
clc
pop
test
push
in
inc
fwait
(bad)
shl
jo
pop
loopne
mov
pop
add
es
jb
call
mov
stc
xchg
fwait
push
push
mov
inc
xchg
data16
(bad)
xor
sbb
loopne
nop
outs
mov
arpl
into
test
rol
inc
ds
cmp
inc
and
xchg
jb
push
inc
mov
ret
add
add
or
push
and
or
shl
lahf
mov
clc
out
imul
popf
iret
and
push
mov
adc
rcr
jecxz
push
mov
adc
out
sbb
push
leave
(bad)
int3
repnz
ins
rol
dec
sbb
pop
cmp
add
sbb
xchg
data16
lods
or
fsubr
inc
in
pop
adc
adc
fdivrp
fdivr
test
shl
sub
das
jmp
xchg
icebp
dec
ins
cli
push
xlat
mov
imul
mov
gs
jmp
test
ud1
pop
jne
cmps
mov
mov
ja
mov
push
adc
mov
cmps
clc
call
jae
mov
les
cs
xchg
push
fcmove
popa
mov
ror
stos
outs
dec
js
pop
pop
repz
ret
div
jae
pop
cmps
idiv
add
mov
neg
sbb
sub
cmp
bound
xchg
jecxz
xchg
push
mov
xchg
das
jg
jo
inc
fdivr
mov
and
mov
test
pop
in
or
ror
mov
loope
and
dec
adc
cmps
repz
mov
(bad)
out
(bad)
stos
stc
rcl
push
mov
mov
sub
mov
dec
test
sbb
mov
mov
gs
push
jge
xor
push
mov
mov
or
xchg
pop
jmp
xchg
mov
lea
fadd
nop
test
push
pusha
mov
sbb
push
stos
sbb
sub
push
sub
ret
jne
(bad)
xor
cmp
js
push
cwde
(bad)
mov
pop
mov
cwde
xchg
je
add
adc
loop
(bad)
mov
or
pop
mov
adc
jle
enter
shl
cmp
popa
(bad)
js
add
loopne
pop
(bad)
jno
adc
pop
aad
push
es
scas
stos
nop
(bad)
push
mov
int
ror
sub
iret
ds
push
jae
cmp
and
in
push
sbb
and
shl
sub
adc
add
inc
out
sub
or
cld
pop
add
mov
sbb
sbb
jl
dec
mov
xchg
mov
adc
mov
ds
add
out
sub
mov
stos
mov
adc
nop
add
popf
in
pushf
inc
pushf
push
xchg
mov
and
jns
mov
mov
mov
ins
(bad)
inc
ins
not
fcmovb
sub
out
cmp
mov
adc
or
inc
pop
inc
add
dec
int
mov
dec
cs
mov
lea
cmc
sbb
or
sbb
push
inc
add
je
jg
ror
and
test
and
or
xor
rep
mov
loope
push
push
xor
pop
xchg
scas
out
bound
sbb
shl
mov
stos
addr16
dec
sub
pop
in
outs
inc
pop
fcmovnu
push
outs
ficomp
fisub
das
mov
rol
add
mov
cmps
in
fmul
ret
test
test
sbb
repz
adc
int3
xchg
std
inc
fcomp
movs
cs
mov
push
stos
fmul
dec
push
call
lahf
div
ret
loopne
fidiv
test
push
inc
call
into
(bad)
iret
inc
out
lahf
hlt
mov
ret
fstp
daa
stos
xor
cwde
in
xlat
inc
and
mov
gs
mov
je
xchg
mov
and
(bad)
stc
pop
mov
push
add
xchg
adc
dec
test
add
xor
fbld
test
icebp
std
fmul
sbb
push
or
xor
push
loopne
gs
push
mov
sbb
add
dec
sbb
(bad)
fstp
mov
les
xchg
not
add
aad
dec
retf
sbb
psrlw
mov
pop
jb
test
xchg
pop
cmp
lods
sahf
lock
lods
jle
cmp
leave
pop
icebp
mov
dec
(bad)
jmp
jne
pop
iret
sahf
das
hlt
(bad)
mov
add
std
cld
adc
mov
and
jecxz
jle
pusha
add
(bad)
adc
pop
mov
and
xor
not
sbb
add
(bad)
push
add
dec
imul
jbe
icebp
fstp
sbb
mov
cwde
lods
pop
inc
adc
mov
sub
push
jp
test
inc
loope
dec
shl
sti
and
test
arpl
xor
es
retf
bound
add
add
mov
inc
mov
dec
and
je
test
ret
int
mov
pusha
mov
sbb
mov
xchg
sbb
sub
cwde
mov
out
ret
sub
jecxz
inc
fadd
test
and
mov
mov
add
push
aaa
outs
into
inc
call
mov
(bad)
movs
aaa
cmps
test
or
pop
xchg
std
stc
add
jge
jp
jge
xchg
push
fwait
pop
aam
test
pop
jns
loop
dec
test
inc
lds
pop
push
adc
pop
pop
sbb
sahf
outs
js
xor
cmp
popa
add
not
adc
push
sub
das
and
fwait
adc
sbb
sub
xchg
push
pop
push
std
dec
mov
aad
mov
lds
mov
or
xchg
xor
ret
mov
jo
push
cmp
pop
fdiv
add
jl
cmp
pop
cmp
cmps
push
xor
aad
pop
jno
popf
(bad)
popa
jnp
jbe
inc
pop
(bad)
lods
mov
sbb
mov
aaa
(bad)
fild
xlat
jge
sbb
mov
xchg
mov
out
push
xchg
mov
int
aaa
fcomp
mov
dec
mov
repz
push
mul
test
push
icebp
stc
ror
js
dec
inc
mov
push
in
movs
ja
call
test
mov
push
rcl
jmp
mov
push
cwde
lds
neg
mov
aam
xchg
or
jno
jecxz
ins
mov
mov
mov
mov
inc
sti
inc
mov
aad
xor
push
push
out
mov
inc
or
adc
ret
mov
sub
(bad)
pop
bnd
out
sbb
div
(bad)
add
jnp
test
popa
cmps
or
xchg
into
mov
sbb
inc
or
add
neg
push
mul
mov
xor
jmp
pop
sbb
and
out
dec
jmp
int
(bad)
sbb
add
xchg
hlt
mov
mov
dec
outs
add
xor
pmulhw
outs
mov
xchg
sub
jecxz
mov
movs
jo
sub
cmp
ja
cdq
add
pop
(bad)
int3
mov
push
or
jmp
cli
(bad)
or
and
call
ja
and
inc
mov
mov
mov
mov
mul
dec
xor
jmp
lahf
or
cdq
hlt
xor
jbe
adc
dec
rcl
call
icebp
pop
xor
and
cmp
in
(bad)
cld
dec
cmp
test
ins
stos
mov
cs
aaa
or
dec
mov
fwait
and
loope
mov
retf
mov
(bad)
mov
xchg
ins
mov
leave
fimul
cmp
and
cmc
mov
dec
or
mov
xchg
pop
dec
stos
arpl
or
sub
mov
outs
xor
in
xchg
je
sub
cmp
loopne
lods
sub
dec
mov
fmulp
mov
add
jle
fldcw
(bad)
sbb
push
outs
jb
sub
xchg
sahf
xor
sub
mov
stos
jp
das
sub
xchg
sbb
pop
(bad)
fmul
shl
jp
and
jmp
int3
mov
sbb
inc
in
addr16
mov
repnz
std
push
iret
out
sbb
les
inc
push
fs
push
ror
adc
dec
xor
xchg
cmp
ret
in
in
sbb
xchg
sar
cwde
clc
pusha
push
pop
dec
dec
jo
adc
in
or
push
pusha
mov
fbld
mov
int3
jl
loop
mov
es
rol
pop
or
jle
or
gs
gs
inc
lods
je
dec
aaa
xor
ja
pop
mov
pop
mov
xor
aas
xor
push
jbe
push
sbb
retf
or
or
mov
mov
add
jmp
or
push
and
pop
cmp
add
jecxz
xchg
xor
cmp
bound
dec
ins
push
mov
cmp
pushf
add
jg
retf
push
xchg
leave
xor
xchg
stos
jmp
je
mov
leave
cs
pop
test
call
ss
sbb
adc
jne
nop
dec
mov
inc
push
dec
push
gs
jmp
out
xlat
sbb
add
lock
in
xchg
inc
push
dec
mov
(bad)
out
(bad)
adc
jno
xchg
xor
add
shr
in
cmps
and
or
dec
popa
mov
fcom
xor
jmp
inc
xor
push
cmp
push
inc
sub
jae
or
bound
push
inc
mov
mov
ds
js
pop
jmp
push
test
popf
jne
into
std
mov
or
push
mov
jle
xor
ss
cmp
jns
loopne
xchg
in
push
bound
cs
(bad)
icebp
adc
sbb
xchg
(bad)
push
ja
pop
pop
(bad)
sbb
mov
inc
cmc
lock
cwde
add
sbb
dec
stos
xor
imul
cmps
loop
push
retf
fsubp
sub
arpl
repnz
cmp
mov
fsubp
gs
push
pop
mov
dec
jmp
xchg
push
mov
cmps
add
xor
push
sub
adc
imul
pop
and
jae
cmp
sub
pop
(bad)
stos
xchg
jae
out
adc
pop
dec
scas
adc
(bad)
iret
add
ss
nop
stc
int
sub
jno
jp
test
or
cdq
into
gs
cli
or
pop
xor
cmp
pop
xor
push
inc
push
pop
(bad)
mov
gs
cmps
and
data16
cmp
inc
cmp
push
jl
pop
jnp
sub
sub
enter
mov
push
pop
inc
xor
repnz
sub
retf
cmps
cmps
pop
dec
xchg
mov
mov
cmps
fisttp
int
(bad)
cld
in
cmp
xchg
pop
out
and
bound
loop
adc
push
test
lods
(bad)
push
gs
mov
iret
push
out
lods
pop
and
push
sub
pushf
pop
fisub
popa
xchg
fidiv
test
sub
and
sbb
add
jmp
pop
mov
mov
cmp
ret
lahf
loop
lea
jecxz
mov
mov
cmp
push
sbb
jbe
ins
push
(bad)
out
ficom
sbb
inc
mov
add
and
mov
sub
xchg
dec
dec
xor
push
pop
mov
in
rcl
push
cwde
xor
fdivr
stos
js
jnp
mov
and
fcom
stos
jl
in
lods
push
and
out
add
push
jle
push
sahf
pop
pop
mov
cmp
out
int3
shl
popf
xor
js
movs
leave
mov
inc
ss
ret
lods
shl
cmps
push
test
shl
mov
push
cmp
and
mov
add
je
outs
and
leave
(bad)
cwde
inc
mov
stos
int
retf
sbb
mov
mov
in
cld
(bad)
aad
xchg
(bad)
sbb
neg
mov
xchg
pop
push
pop
std
mov
(bad)
fisttp
jnp
mov
imul
dec
xlat
pop
mov
add
inc
in
pop
sbb
into
int
push
cmc
(bad)
cmp
ficom
stc
mov
aam
dec
inc
push
call
clc
movntps
or
ret
(bad)
cmp
loop
call
shl
out
in
mov
fiadd
in
cld
(bad)
jmp
add
pushf
jmp
jbe
add
cmc
cmps
test
adc
inc
pop
push
pop
add
xor
lahf
and
nop
pop
mov
sub
adc
and
xchg
pop
xor
mov
xor
xchg
ins
ds
dec
xor
inc
or
scas
jg
dec
push
sbb
push
aas
test
sbb
or
leave
push
xor
lds
gs
mov
push
add
fcmovnbe
aam
shl
push
ret
fistp
loope
shr
adc
dec
mov
loope
inc
adc
test
add
jbe
mov
adc
inc
dec
icebp
xor
and
push
into
pusha
pop
sub
pop
shl
and
mov
and
push
mov
retf
cmp
and
mul
mov
ror
inc
jb
sub
push
mov
dec
ins
ret
int
cmp
inc
(bad)
les
into
cmp
xchg
xor
shl
add
clc
int3
fsubr
mul
push
jmp
ins
fdivr
inc
and
sub
lea
pop
mov
cmp
ret
mov
push
push
push
in
ret
(bad)
adc
sbb
mov
ret
call
rol
std
shl
and
and
jno
pop
fdiv
outs
xor
test
push
stc
push
adc
gs
mov
xor
or
jbe
ss
and
push
retf
pushf
sbb
rcr
push
adc
(bad)
aas
mov
dec
push
push
aad
mov
push
lds
lods
adc
or
add
push
(bad)
mov
iret
add
mov
push
push
mov
mov
jl
push
loopne
adc
pushf
xchg
jno
bound
cmps
bound
jnp
dec
mov
mov
outs
hlt
imul
or
pop
jne
or
inc
fisub
jno
aad
push
sbb
fwait
adc
mov
xchg
(bad)
sbb
iret
mov
and
lds
jg
cmp
inc
out
mov
gs
or
mov
cli
mov
in
add
int3
not
and
repnz
lock
aaa
fs
push
sbb
sbb
adc
push
leave
sahf
add
pop
push
jbe
mov
gs
cmp
int3
cld
leave
retf
ins
and
int3
repz
int
loope
and
cmps
inc
jecxz
mov
and
push
enter
push
cdq
fcmovnb
aaa
call
ds
xor
push
pop
jge
(bad)
xchg
mov
icebp
jmp
dec
adc
push
sub
mov
push
sar
or
lods
inc
dec
xchg
aaa
loopne
repz
xchg
outs
jmp
pop
pop
and
sbb
(bad)
pushf
out
jne
lods
adc
lahf
ret
cmp
mov
fadd
adc
repnz
rol
mov
add
sub
jo
pop
in
and
(bad)
jecxz
or
test
mov
jbe
or
mov
xchg
push
push
xor
mov
adc
adc
add
scas
repnz
pop
shl
and
outs
sub
test
xlat
mov
repnz
fstp
data16
lock
test
xchg
or
out
push
je
inc
inc
enter
xchg
jle
inc
popa
cmp
dec
bound
inc
sar
popa
mov
sbb
loopne
pop
jp
aad
or
sar
call
cmp
jecxz
adc
add
add
call
cli
ret
ret
push
movs
dec
inc
pop
jecxz
lods
pop
sub
in
stc
lea
out
sub
imul
xor
xor
mov
rcr
cmp
arpl
inc
inc
push
arpl
mov
push
(bad)
inc
dec
adc
int
test
loope
jge
mov
cmc
lahf
push
mov
jnp
cld
in
xchg
mul
test
into
dec
add
lods
pop
pop
xchg
pushf
adc
adc
jo
call
mov
push
into
and
mov
shl
(bad)
into
repnz
dec
xor
hlt
lds
lahf
or
and
sbb
inc
xchg
fs
pushf
dec
adc
sbb
sti
xchg
hlt
pop
mov
stos
cdq
jmp
mov
repz
addr16
xchg
std
(bad)
lds
pop
lahf
dec
aaa
and
mov
call
outs
push
and
outs
and
cmp
lods
mov
call
ins
sar
push
mov
jne
dec
pop
or
or
push
rcr
(bad)
cmc
shr
int3
pop
push
cmp
addr16
add
pop
cmp
pushf
test
jl
lods
mov
aam
movs
ror
sub
shl
sub
dec
int3
sub
imul
out
push
scas
(bad)
ds
add
pop
xor
imul
shl
and
jmp
stc
pop
in
xchg
lods
mov
sbb
jmp
cwde
mov
adc
test
pop
ss
(bad)
pusha
add
sub
push
inc
inc
hlt
lods
sti
mov
retf
cmp
mov
out
sar
jo
pop
(bad)
in
sub
xchg
cmp
daa
jo
mov
lea
xor
retf
cwde
ja
dec
test
xor
std
pop
or
jae
fs
push
sbb
jl
jmp
jns
mov
call
nop
out
(bad)
ror
mov
sub
lods
push
sub
mov
retf
push
and
ret
push
fnstenv
push
mov
aaa
mov
ror
dec
and
ror
jbe
mov
and
mov
sub
mov
in
push
outs
xlat
test
push
xor
xchg
xor
mov
push
and
bound
inc
and
aam
inc
inc
retf
add
cli
movs
mov
sub
loope
xlat
adc
test
sub
sbb
ja
xchg
mov
lods
cmp
dec
in
or
dec
out
out
jecxz
inc
mov
jns
jae
sbb
mov
stos
or
cmps
xchg
mov
xchg
in
xor
cmp
ficom
mul
shl
or
jne
adc
in
push
push
adc
out
sub
mul
bound
sbb
lock
adc
aad
add
(bad)
fadd
xor
mov
vorpd
lock
fndisi(8087
gs
outs
xchg
dec
pop
push
(bad)
fld
mov
(bad)
std
or
ficom
add
int
sub
sub
cmc
jae
adc
dec
sbb
adc
rol
jmp
dec
and
sar
adc
push
add
or
call
shl
inc
mov
loope
fnsavew
ss
mov
jo
mov
mov
dec
or
stos
cmps
cli
mov
mov
add
inc
or
jmp
mov
jno
daa
mov
sbb
sbb
push
(bad)
sub
jmp
cwde
sub
out
dec
and
cwde
or
push
xor
mov
loop
mov
add
jp
push
fistp
dec
sti
sub
les
mov
pushf
lds
push
mov
or
iret
iret
out
aam
pop
push
xlat
fnsave
bound
cs
push
scas
pusha
aaa
in
jecxz
mov
js
je
or
xchg
jl
jge
inc
add
push
gs
maxps
mov
mov
in
(bad)
mov
inc
scas
and
xchg
pop
jl
mov
push
fcom
pop
into
out
jo
mov
adc
mov
ds
stos
push
or
sub
or
xor
fsubr
adc
mov
cli
xchg
cmps
fwait
ret
aaa
mov
push
lods
xchg
inc
imul
adc
push
push
inc
pushf
imul
add
add
enter
loop
pop
stos
in
lahf
shl
and
(bad)
mov
inc
data16
or
dec
pop
std
clc
pop
push
fwait
and
fbstp
mov
fnstsw
mov
in
inc
mov
sbb
ss
sbb
call
mov
lea
in
sub
xor
icebp
sub
push
or
dec
jmp
fld
xor
nop
retf
sahf
pop
retf
movs
ret
sub
push
test
mov
jns
push
add
add
iret
jg
adc
in
mov
(bad)
aam
sbb
cmp
jae
xlat
inc
jg
test
sub
rol
xchg
lods
inc
scas
xchg
mov
in
jne
push
mov
cmp
clc
pop
mov
xchg
in
inc
pushf
popf
adc
fsubr
es
xor
mov
call
or
mov
loop
xchg
stc
sub
cld
pop
add
dec
es
mov
pusha
addr16
mov
inc
inc
dec
xchg
sbb
xor
cmc
mov
outs
xchg
or
xchg
mov
cmp
iret
inc
dec
addr16
dec
ret
bnd
or
sbb
in
mov
cmp
cdq
mov
xor
cmps
pop
xchg
es
cmps
xchg
hlt
and
maskmovq
div
scas
add
test
sub
sub
ins
sbb
mov
ror
retf
call
jecxz
mov
gs
inc
xchg
adc
cmp
scas
call
mov
popa
jnp
xlat
scas
cld
xchg
mov
mov
jne
enter
push
movs
mov
ret
push
pop
jp
and
push
pop
cmp
inc
dec
fimul
and
or
arpl
mov
mov
and
and
mov
mov
aam
inc
cld
ror
or
sar
cmp
push
out
jae
dec
push
lods
or
cmp
nop
or
xor
cmp
dec
mov
mov
test
movs
mov
scas
aad
pushf
jp
push
stc
bound
push
bound
sbb
sbb
adc
hlt
or
mov
inc
mov
stos
sub
or
int3
icebp
movs
scas
inc
jl
fistp
dec
ss
jmp
mov
dec
sbb
mov
pop
push
das
or
dec
dec
shl
mov
jge
cmp
es
pushf
std
or
mov
mov
movs
loope
mov
sub
sbb
dec
movs
mov
addr16
in
dec
js
xrelease
lock
cmp
(bad)
(bad)
scas
jg
(bad)
imul
das
(bad)
cli
inc
sbb
es
xor
dec
iret
out
jg
aaa
das
div
arpl
pop
paddq
xchg
fdiv
jl
add
and
call
jne
pop
jae
mov
stos
mov
out
ret
xchg
and
arpl
pop
cld
xchg
push
xor
imul
mov
sahf
or
lea
dec
mov
xor
and
dec
xchg
and
mov
mov
mov
add
xor
or
pop
jge
jp
into
cld
jge
es
xor
inc
push
jl
add
pushf
je
imul
lea
pop
je
ret
(bad)
push
or
(bad)
fist
out
and
adc
test
push
pop
and
mov
int
adc
cmc
push
mov
sar
mov
lds
in
pop
inc
and
xor
jno
adc
retf
mov
inc
movs
pop
sub
loopne
shl
fidivr
cdq
enter
cmp
add
jmp
sub
in
mov
xor
popf
jge
push
jge
inc
and
jg
ret
retf
int3
adc
repz
test
cmp
js
add
adc
call
ss
or
cs
loop
(bad)
cmp
test
retf
pop
test
jmp
jb
dec
cs
kmovb
jo
xor
retf
mov
imul
mov
or
out
xor
and
das
push
fst
add
pop
call
push
mov
or
mov
mov
sbb
pop
sbb
xchg
xchg
xor
data16
push
ss
push
jae
ss
(bad)
push
mov
aas
scas
(bad)
inc
sbb
das
je
push
cmc
in
js
or
adc
fs
jle
fild
mov
mov
rcr
jbe
rcl
add
push
mov
mov
mov
repnz
xor
jb
or
mov
jne
sub
jbe
pop
inc
sbb
loopne
push
jl
int3
fldenv
pop
and
mov
jecxz
cmp
out
ss
and
jo
xchg
loop
sar
cmps
shl
inc
adc
cdq
xor
xor
jmp
ja
xchg
out
sbb
jg
xor
outs
(bad)
jmp
push
in
out
(bad)
lahf
jle
loopne
mov
pop
int3
loopne
icebp
inc
stc
or
pusha
sbb
xchg
jge
xor
inc
in
in
aam
xchg
mov
push
shl
push
ret
(bad)
ins
aad
xchg
mov
jb
js
pusha
or
daa
mov
js
movs
clc
stos
es
int3
lea
cmc
ror
arpl
push
popf
jb
ficom
movs
movs
pop
or
inc
jge
xchg
ja
out
test
xchg
jo
mov
clc
push
and
and
out
push
xlat
push
dec
fs
popa
ror
fwait
loopne
cwde
push
aaa
imul
mov
xor
jge
push
lahf
popf
out
jecxz
jge
jg
add
out
pop
call
xchg
bound
jle
add
leave
xlat
sbb
inc
scas
mov
arpl
int
push
cs
jl
cmp
fwait
or
cmp
add
outs
xchg
ss
idiv
fs
ss
inc
mov
imul
jecxz
cs
xchg
xor
sahf
push
arpl
sbb
push
fsub
push
lahf
out
xchg
mov
mov
xor
aad
rcl
ins
xor
std
inc
jae
mov
push
retf
scas
mov
add
add
pop
adc
imul
push
mov
sbb
pop
in
or
adc
stos
(bad)
ins
and
xor
jl
xlat
in
(bad)
scas
daa
mov
outs
inc
pop
pop
retf
sub
arpl
movs
pop
test
outs
pop
cdq
xchg
ds
call
push
nop
push
and
(bad)
pusha
mov
int3
rol
mov
pop
lods
jl
(bad)
out
add
add
ficomp
and
mov
popf
aam
fmul
fwait
mov
je
pushw
push
jno
mov
jo
fld
jae
repz
lahf
xor
loopne
inc
data16
rcl
xchg
dec
std
jmp
inc
lahf
daa
addr16
call
loopne
mov
scas
and
jmp
xchg
inc
adc
xor
xor
pop
pop
dec
pop
mov
scas
mov
popf
ret
mov
cmc
sbb
(bad)
out
or
cmps
das
pop
mov
sbb
push
jb
repz
rsqrtps
add
popf
arpl
sbb
call
aad
mov
test
mov
jbe
mov
pop
loopne
mov
arpl
pop
aas
mov
loop
(bad)
lods
add
(bad)
(bad)
bound
mov
in
add
(bad)
call
int3
cmp
jle
aas
into
mov
movaps
movs
popf
sti
xlat
scas
cmc
dec
dec
mov
movs
addr16
sbb
mov
bound
xchg
mov
jmp
shr
or
add
daa
pop
test
or
movs
cli
sub
dec
mov
fwait
mov
adc
movs
scas
test
inc
test
leave
xchg
sbb
xchg
or
rol
mov
mov
icebp
jb
inc
bound
push
je
cmp
mov
mov
or
pop
popf
pop
jle
out
or
shr
mov
(bad)
mov
out
rol
lods
fld
mov
xor
popf
jne
lahf
test
ret
pusha
sti
jle
xchg
mov
mov
xor
mov
jle
and
jl
inc
mov
or
jecxz
pop
push
lds
and
dec
push
fldenv
xchg
mov
push
pop
push
mov
adc
lods
ins
(bad)
mov
cwde
mov
pushf
pop
xor
mov
cmps
cdq
lds
sub
fdivr
fwait
cld
xchg
movs
mov
rol
adc
leave
xchg
push
or
jae
xchg
sbb
sti
sahf
das
pop
pop
(bad)
iret
aas
shl
push
inc
ins
push
sbb
popa
or
loopne
out
mov
inc
test
inc
inc
jae
or
cld
mov
outs
aam
aam
push
add
mov
stos
jge
enter
jno
add
xchg
mov
test
mov
inc
cdq
add
pop
push
push
add
or
or
cld
sbb
cwde
xchg
xor
mov
dec
pusha
jge
jp
into
es
ficomp
or
dec
in
pop
leave
mov
imul
sar
loope
data16
enter
fstp
pop
cwde
pop
call
ret
cdq
(bad)
pushf
and
into
cld
test
test
aaa
(bad)
cli
popa
sub
ret
cmps
jno
adc
xchg
test
jle
jge
nop
and
rol
fs
mov
sbb
iret
scas
add
cwde
sub
jl
mov
out
dec
and
aad
jb
pop
adc
addr16
add
adc
xchg
sahf
test
mov
jne
es
jmp
in
test
stos
dec
js
in
dec
hlt
sti
cmp
(bad)
xchg
mov
ins
push
inc
fimul
mov
and
and
inc
imul
mov
(bad)
xor
mov
adc
cwde
xchg
fdiv
mov
pop
inc
mov
mov
in
retf
push
pop
(bad)
sbb
mov
fsubr
test
jno
sbb
xchg
sub
jne
(bad)
sbb
xor
mov
add
mov
jmp
adc
out
jg
gs
xchg
retf
cmp
cdq
cmp
and
aad
sbb
cli
aam
aaa
inc
aas
sbb
imul
mov
aaa
dec
into
jecxz
fwait
(bad)
leave
(bad)
pop
mov
inc
ins
call
push
jmp
in
push
jb
cmp
xchg
jb
mov
out
xchg
bound
inc
bound
mov
and
xor
jno
dec
cmps
(bad)
in
mov
add
sbb
(bad)
fstp
fiadd
pop
and
idiv
fisubr
outs
xor
(bad)
jge
mov
ds
or
jne
lahf
pusha
aam
cs
jne
outs
fucom
mov
fstp
fstp
loopne
sbb
mov
or
les
cdq
mov
ret
jg
xor
push
int3
fistp
popf
mov
jmp
sub
(bad)
sbb
dec
or
test
cmps
cmp
xor
and
aad
popa
neg
ins
add
ss
and
sub
dec
adc
arpl
xchg
cmp
push
ds
xchg
fistp
int
rol
cmps
loope
sbb
ins
push
cmps
cmp
das
imul
or
cmp
xor
pop
jbe
(bad)
imul
movs
pop
cmps
leave
mov
sub
jl
hlt
xchg
mov
mov
dec
test
xlat
gs
push
std
(bad)
std
and
jae
xor
imul
dec
mov
(bad)
mov
ja
add
sahf
dec
push
cmps
pop
fisttp
mov
out
xchg
xchg
fldenv
rol
sbb
push
xchg
inc
xor
call
mov
out
ficom
dec
pushf
dec
and
mov
bound
push
movs
inc
ror
out
fisttp
call
in
ins
xor
pop
ja
cmp
or
push
out
int3
mov
imul
inc
mov
push
inc
push
add
ficomp
mov
jbe
jns
push
xchg
outs
adc
test
inc
bound
xor
popf
int3
xchg
or
imul
cmp
sahf
mov
sbb
movs
xchg
lods
push
mov
jle
push
arpl
adc
mov
fist
mov
mov
dec
mov
pop
pop
(bad)
fwait
arpl
adc
jp
cmp
ds
sbb
shl
aas
cmps
stc
test
hlt
lahf
ret
stos
dec
push
(bad)
aam
sub
xchg
adc
push
cmp
cwde
add
outs
outs
nop
in
mov
inc
aam
test
lock
cmp
push
adc
adc
(bad)
mov
popa
jno
xchg
sbb
pop
pop
stc
cli
and
sub
add
or
popf
in
push
fimul
out
jecxz
xchg
sahf
xlat
iret
ret
cld
pop
xor
pop
test
pushf
sub
or
sbb
mov
cli
inc
sub
retf
pop
mov
jg
adc
add
sar
(bad)
cmps
scas
ins
sub
mov
jo
dec
call
cmp
popf
scas
pop
cmp
mov
or
mov
add
mov
addr16
and
ja
enter
rcl
or
retf
add
xchg
push
icebp
stos
outs
gs
push
(bad)
iret
push
inc
xor
dec
xchg
int3
sar
outs
sub
loopne
push
jno
aad
mov
out
loope
les
jge
mov
adc
std
push
ret
jae
iret
jb
test
push
add
sbb
inc
adc
inc
push
sub
daa
inc
mov
out
dec
sbb
mov
mov
and
mov
jb
(bad)
mov
jno
int
(bad)
mov
fadd
out
sbb
xchg
icebp
jge
cmp
and
add
bound
mov
imul
bound
aas
adc
add
dec
or
pop
idiv
ficomp
jmp
je
adc
mov
cdq
push
and
out
pop
xlat
jmp
stos
mov
cld
mov
addr16
sbb
pushf
lea
xchg
pop
push
retf
jmp
sbb
and
popa
or
add
push
xor
pushf
dec
cmps
sbb
sbb
adc
je
leave
pop
sub
jnp
mov
aad
mov
addr16
fnsave
inc
xlat
test
icebp
inc
dec
in
and
sbb
popf
nop
mov
out
mov
inc
mov
int
sahf
js
call
dec
sub
jp
stos
(bad)
mov
pop
mov
jg
mov
jns
pop
and
hlt
repz
stos
push
ins
fcomp
xlat
mov
pop
add
and
inc
and
ficom
or
xlat
push
push
push
xchg
rcl
push
pusha
mov
inc
ror
jno
cwde
call
mov
dec
cmc
in
pushf
push
test
push
inc
inc
movs
mov
jmp
push
add
outs
push
hlt
sbb
jnp
sub
xor
bound
pop
xor
loop
xor
stc
lods
jnp
data16
xchg
sub
pop
cmp
inc
sbb
xchg
test
lds
arpl
fsub
jmp
je
push
(bad)
lock
movs
add
mov
jb
push
adc
inc
fiadd
jg
mov
xor
test
das
stos
cdq
aaa
retf
and
bnd
mov
lahf
push
mov
es
test
div
add
adc
test
shl
rcl
xor
jmp
and
xchg
xor
loop
sahf
mov
fs
add
jbe
sbb
mov
mov
mov
jge
lahf
cdq
xchg
mov
mov
sub
lods
jl
dec
hlt
inc
cli
mov
pop
push
sbb
retf
xor
fmul
repz
mov
fadd
movs
(bad)
xchg
sbb
in
sbb
and
popf
(bad)
jl
cmp
xchg
inc
das
rol
dec
ja
jnp
mov
inc
stos
cdq
int
stos
pop
jecxz
(bad)
jne
fisttp
stos
dec
lods
adc
add
stc
mov
movs
and
fistp
mov
jl
jl
jo
dec
pop
les
outs
mov
(bad)
call
js
dec
iret
(bad)
pop
add
retf
imul
inc
movs
mov
into
ret
or
frstor
jo
arpl
or
mov
push
mov
pop
sub
and
sub
push
pop
sub
mov
outs
jmp
push
fwait
sub
and
xor
mov
sbb
pop
das
sbb
jg
cmp
movs
scas
adc
je
aaa
neg
aas
sbb
inc
inc
cmc
adc
push
icebp
mov
outs
int
inc
std
and
or
retf
stos
pop
dec
imul
lahf
test
adc
and
pop
mov
jae
xchg
sahf
mov
jmp
mov
jb
inc
call
jecxz
cwde
rcl
xor
out
sub
mov
sar
sub
pop
pop
cli
jb
push
jnp
int3
dec
or
enter
(bad)
mov
adc
ss
adc
jnp
inc
shl
adc
in
jnp
test
add
sub
pop
test
aaa
mov
mov
mov
cmps
pop
sahf
pop
lock
xchg
pop
mov
cmp
fcomp
jne
dec
jle
pop
mov
dec
stos
xor
call
loopne
mov
jle
inc
call
sub
leave
stos
data16
mov
stos
(bad)
sar
dec
idiv
sbb
pop
loop
je
mov
addr16
pop
std
mov
mov
nop
aaa
std
fild
les
add
ret
mov
pop
jae
retf
xor
aam
pop
outs
shr
(bad)
cmp
test
outs
jl
xor
popf
pop
jl
(bad)
cmp
popa
inc
popa
outs
pop
fcom
jmp
xor
mov
test
dec
leave
jbe
imul
dec
fcmovne
sbb
pusha
inc
repz
ins
cdq
test
jle
(bad)
je
call
mov
xor
sbb
std
test
fimul
(bad)
loope
or
mov
fnstenv
das
jmp
ret
mov
inc
adc
adc
test
xchg
sbb
repz
inc
inc
repnz
mov
add
add
sub
cmp
or
in
push
xor
imul
leave
add
das
dec
(bad)
jg
mov
and
and
std
mov
mov
call
sbb
(bad)
sahf
xor
les
arpl
mov
sbb
xor
and
(bad)
push
in
icebp
enter
push
std
jle
mov
out
pop
mov
or
in
pop
push
int3
addr16
cmps
cmp
fwait
in
fnstsw
dec
(bad)
xchg
imul
jmp
aaa
stc
mov
fcom
sub
mov
mov
retf
cld
or
inc
jle
and
pushf
mov
sbb
mov
or
inc
add
ins
leave
mov
jle
adc
or
xchg
mov
xor
stos
aam
pop
jp
mov
lods
pop
test
out
dec
popf
aad
adc
(bad)
(bad)
fnsave
push
sbb
mov
xchg
outs
push
xchg
jne
sub
cwde
dec
aam
or
or
adc
movs
cmp
jmp
cmp
xchg
nop
adc
retf
shl
cmp
adc
or
fucomip
clc
and
inc
jecxz
(bad)
mov
int3
inc
cwde
dec
in
das
aas
je
adc
test
in
adc
lea
adc
jo
imul
jle
gs
add
dec
cwde
jne
cs
and
jmp
cmp
sub
int
dec
jno
push
dec
popa
pusha
cld
pop
pop
mov
inc
mov
outs
scas
sbb
xor
mov
cmps
add
out
mov
xchg
dec
in
test
(bad)
jl
fist
retf
inc
cmp
push
xchg
xor
imul
xor
fcomp
js
cwde
and
mov
and
dec
adc
cmc
aad
dec
out
sub
sub
inc
inc
xor
inc
out
push
popf
outs
add
aad
cmp
add
shl
(bad)
jmp
inc
addr16
aaa
pop
add
ret
cmp
clc
sbb
mov
ds
add
idiv
xchg
les
stos
ret
hlt
pop
repnz
pop
es
dec
repnz
jb
out
imul
sbb
or
mov
(bad)
mov
or
mov
jl
mov
shufps
test
cld
hlt
push
aam
push
stos
inc
js
clc
arpl
int3
jmp
fwait
sub
adc
retf
(bad)
fistp
jg
dec
int
and
sub
(bad)
fs
pop
xchg
out
cmp
or
jnp
iret
or
mov
dec
add
cmps
mov
push
test
add
pop
pop
popa
push
pushf
hlt
hlt
sub
sbb
inc
xor
or
push
imul
xor
mov
sar
pop
mov
xor
ins
neg
xchg
add
push
add
popf
push
mov
sub
cmc
stos
inc
pop
push
test
icebp
push
cli
cmp
sbb
xchg
or
xchg
cmp
sub
jne
loope
mov
icebp
fdiv
rcl
xchg
inc
xchg
sbb
pop
in
pop
sbb
adc
movs
(bad)
mov
mov
mov
mov
xchg
xchg
(bad)
fadd
rcr
shr
pop
cmp
ss
mov
and
dec
add
ror
fild
xchg
std
cli
push
xor
push
aam
(bad)
stos
nop
sar
lods
cmp
and
stos
pop
mov
clc
fisub
popf
call
push
imul
stc
dec
outs
test
xor
push
adc
aad
mov
aam
inc
jp
aam
add
cmp
xor
and
add
aas
mov
xchg
cdq
mov
dec
sub
dec
movs
rcl
add
sbb
bound
out
cmp
push
xor
loope
js
mov
popa
push
and
loop
ss
pop
dec
cmp
out
les
ins
aad
ins
jmp
loope
sti
int
mov
popf
jg
(bad)
js
push
mov
push
into
mov
js
shl
mov
cmps
push
imul
aaa
cmp
idiv
sbb
push
jbe
in
mov
(bad)
mov
sbb
enter
pop
jmp
gs
mov
cmps
shl
jne
mov
(bad)
push
add
scas
jmp
dec
inc
retf
es
les
cs
sbb
adc
mov
xchg
test
sar
mov
shl
(bad)
sub
xor
std
fstp
nop
mov
cmp
mov
xor
ins
or
push
cwde
adc
stos
fmul
outs
test
(bad)
jb
or
adc
enter
ja
add
in
adc
jl
leave
test
shl
fadd
cmc
ins
pushf
cmc
push
sub
pop
movs
cmps
js
adc
adc
fdivr
jmp
out
fwait
retf
fadd
dec
ret
cmp
gs
call
ins
xor
dec
fs
xor
in
(bad)
aaa
inc
push
xor
inc
clc
mov
xchg
sub
pop
mov
mov
mov
lock
cmps
sbb
adc
pop
sbb
xlat
push
mov
fadd
jmp
add
test
cmp
data16
sbb
out
jne
in
lods
jmp
mov
iret
and
cdq
loopne
std
fldenv
xchg
into
jne
jns
and
lods
xchg
inc
and
cmp
sub
ret
push
movs
jns
movs
(bad)
push
xlat
cmp
ins
call
cmp
(bad)
shl
sbb
call
mov
xor
aam
in
cmc
aas
jecxz
jg
push
jne
dec
cmp
not
and
ror
sub
cwde
cmp
mov
mov
add
add
std
icebp
dec
outs
es
jbe
add
fcom
cmps
sub
jge
cmc
call
ret
(bad)
cli
in
lock
jne
fdivr
fidiv
out
loop
test
add
cmp
fst
sti
loope
jo
push
fmul
push
popf
lods
cmp
sar
cmc
xlat
push
aaa
mov
jo
int
dec
adc
xchg
fcmovnb
aam
sub
and
add
adc
push
add
and
add
pop
popa
inc
test
jae
add
fidivr
adc
bound
fs
ds
sbb
pop
xchg
cmp
loopne
fmul
cmp
ret
cmp
out
push
inc
pushf
nop
ds
push
dec
or
add
push
stos
(bad)
movnti
cmp
mov
xor
push
xchg
in
mov
rcl
mov
in
jl
xor
enter
dec
lahf
xor
and
es
lods
scas
(bad)
jnp
adc
or
movs
pop
int3
in
lock
jae
ins
pop
js
mov
push
cmp
les
add
sbb
jmp
inc
mov
aad
out
dec
lods
jge
cmc
cpuid
mul
nop
pop
inc
(bad)
iret
jle
push
ret
iret
aas
call
out
icebp
repz
inc
jge
lods
bound
jg
mov
add
cmps
(bad)
(bad)
arpl
push
idiv
or
dec
xchg
out
enter
pusha
pop
punpckhbw
adc
add
pop
les
add
mov
dec
sub
and
xchg
mov
scas
mov
adc
adc
jp
clc
jmp
jne
ja
pop
fs
mov
jecxz
pop
jecxz
and
inc
jae
nop
mov
aad
inc
inc
or
int
push
in
and
and
jl
clc
out
aaa
jns
sub
std
(bad)
jae
not
jmp
pop
jmp
mov
sti
cwde
cli
mov
mov
retf
xchg
sbb
xchg
mov
inc
pushf
pop
xchg
sub
lods
lods
push
cmc
inc
in
shr
or
or
fisubr
outs
in
lock
sub
jge
hlt
mov
cs
xchg
push
sbb
mov
pusha
jl
addr16
pop
loope
sub
rcl
mov
repnz
lock
aad
leave
xchg
shl
jp
test
rcr
lods
out
pop
cmp
inc
push
(bad)
push
int
int
dec
jp
mov
je
lds
pop
cmc
loop
hlt
test
cmp
out
xor
stos
adc
ret
lahf
cs
test
outs
scas
int3
jle
jmp
stos
sbb
clc
(bad)
test
inc
jle
int
loope
push
call
xlat
add
in
ja
lea
push
mov
repz
jl
aas
xchg
mov
or
jl
mov
mov
fsubr
stos
mov
push
xchg
dec
and
inc
mov
(bad)
in
stc
pop
xor
mov
push
sti
or
mov
cmp
jl
fiadd
ret
dec
ss
push
pop
(bad)
mov
xor
movs
out
clc
(bad)
dec
imul
inc
adc
scas
das
pop
es
xchg
or
mov
dec
mov
jmp
pop
outs
cmp
bound
cs
mov
jmp
xlat
cmp
rol
test
pop
imul
lods
into
add
mov
xor
fs
cld
icebp
cmp
dec
jl
sub
ins
and
(bad)
(bad)
sti
push
int3
es
retf
or
sbb
addr16
or
adc
(bad)
sbb
mov
pop
sbb
inc
imul
mov
mov
cli
or
mov
stos
push
mov
add
fimul
fcomip
lods
push
(bad)
push
data16
jmp
lods
mov
dec
pop
ins
xor
mov
mov
imul
iret
outs
mov
in
cwde
dec
in
jge
or
mov
jo
stos
mov
out
cmc
or
cmps
cmps
ds
jo
popf
push
ja
mov
je
das
aam
sbb
ret
push
adc
cmps
stos
out
mov
fisubr
xor
shl
jno
aam
test
mov
pop
jl
(bad)
ret
cmp
or
aas
add
jne
adc
xchg
inc
clc
push
mov
daa
hlt
mov
cwde
or
bound
pop
xchg
jmp
sub
retf
pop
adc
and
and
cs
les
mov
lea
jecxz
pop
inc
mov
or
adc
hlt
sub
dec
mov
and
cmps
jmp
lods
pushf
cld
sti
inc
jp
push
and
dec
(bad)
cmp
in
push
jg
inc
sahf
sub
cs
mov
xor
mov
fst
dec
push
push
dec
and
lock
adc
pop
adc
shl
xlat
jo
mov
push
dec
ss
xchg
loop
jecxz
test
pop
jne
mov
call
ffreep
das
aaa
dec
push
dec
xchg
(bad)
rcr
xchg
sar
aam
pop
mov
repnz
xor
aad
sub
nop
lahf
cmp
leave
hlt
adc
into
sbb
mov
jmp
bound
jmp
std
add
nop
in
(bad)
popa
mov
dec
jnp
push
scas
or
vrcpss
add
add
or
cmp
pop
repz
movs
(bad)
rcl
dec
inc
jge
push
inc
jge
and
mov
je
aad
dec
cli
inc
sbb
and
bound
bound
xor
pop
movs
jmp
pop
inc
cli
jl
push
call
pop
add
sub
mov
xor
xchg
(bad)
into
(bad)
sahf
pop
ror
adc
aas
or
scas
cwde
fcomp
cli
ja
sbb
repnz
mov
loop
mov
dec
sbb
push
or
dec
jg
out
xchg
fld
mov
lock
cdq
jb
enter
xor
imul
xor
cwde
push
lock
je
fldcw
popa
cwde
cmp
jno
lods
loope
adc
pop
xchg
outs
imul
push
pop
mov
adc
push
mov
fmul
fadd
pop
jnp
(bad)
ror
mov
hlt
xchg
rcl
mov
push
cmp
out
push
push
add
icebp
mov
xor
dec
mov
data16
add
fwait
pop
add
dec
cmp
les
rol
jns
adc
adc
inc
dec
sbb
dec
and
pushf
lds
popa
out
out
cmp
dec
cmc
ret
int3
xchg
mov
add
clc
arpl
loop
push
jb
sbb
pusha
cmp
add
adc
and
dec
or
cmp
or
jbe
fs
mov
movs
loop
xchg
cmps
gs
aaa
add
call
ss
repz
jge
int3
(bad)
push
pusha
ret
sub
sub
mov
push
inc
pop
aaa
jle
inc
fst
push
arpl
push
leave
sub
jmp
push
ja
pop
sub
mov
call
push
adc
or
add
sti
pop
xchg
mov
jecxz
sbb
cmp
es
(bad)
jmp
cld
add
cmp
mov
std
mov
jne
jbe
push
push
adc
fsub
add
mov
sub
push
pop
mov
sub
rol
bound
inc
test
leave
dec
cmp
pop
cs
cmp
dec
dec
pop
mov
int3
sbb
or
sbb
les
inc
daa
xor
push
xor
mov
mov
jge
fcmovnb
xchg
sub
adc
(bad)
leave
loop
cmp
adc
add
cmps
xchg
and
lock
cmp
add
xchg
inc
inc
and
scas
adc
retf
push
sub
movs
jo
mov
imul
movs
mov
mov
push
pusha
adc
dec
rcl
out
ds
ins
jmp
mov
leave
data16
add
dec
cmp
sahf
jmp
xor
(bad)
xchg
jle
gs
and
adc
sub
jg
mov
sub
inc
xor
test
popf
push
aas
dec
jecxz
cdq
inc
sub
xor
inc
sub
into
outs
mov
jae
mov
push
adc
sbb
ins
ja
cwde
pushf
and
aaa
dec
movs
fld
inc
dec
pop
push
imul
push
test
fimul
fcomp
in
inc
dec
pop
repz
mov
cdq
mov
push
xchg
add
mov
fwait
imul
sti
adc
inc
pop
and
xchg
pusha
xor
cmc
mov
pusha
jno
cmp
je
es
pop
loop
sahf
or
and
cmc
out
aaa
mov
jle
sub
fist
xchg
in
ss
or
es
xlat
dec
fwait
dec
ror
push
and
fwait
xchg
mov
and
jae
and
push
movs
xchg
fsub
ret
je
sbb
jnp
dec
cmp
out
adc
addr16
fabs
jmp
mov
adc
outs
das
pop
in
arpl
pop
les
fimul
xchg
popa
push
sub
xchg
shl
test
mov
aad
mov
inc
hlt
mov
sub
jno
push
inc
lock
xchg
sub
popa
jge
cli
and
and
es
inc
cmp
sub
mul
cmp
push
xchg
mov
and
in
ds
inc
jne
ret
je
mov
je
mov
cmc
dec
xchg
daa
lock
cmp
popa
fs
out
push
dec
mov
iret
aaa
jmp
and
jb
pushf
lods
push
xchg
jl
xchg
mov
lds
in
push
ins
jp
les
je
mov
and
cmp
loop
arpl
and
mov
xchg
jmp
leave
adc
push
imul
mov
(bad)
lods
adc
fs
and
jge
xchg
nop
pop
or
add
int
mov
mov
push
adc
leave
pop
gs
cli
test
sbb
xlat
jnp
sub
sbb
mov
mul
scas
sbb
stos
mul
mov
adc
mov
inc
inc
popf
push
mov
sbb
mov
adc
and
mov
inc
inc
push
js
or
cmps
cmc
mov
js
jg
icebp
xchg
sbb
retf
push
fcom
pop
sbb
lahf
mov
call
sub
retf
jp
adc
inc
inc
xchg
outs
jnp
lods
(bad)
mov
inc
or
dec
mov
fs
xor
mov
dec
pop
ror
cdq
(bad)
mov
call
fcom
add
add
mov
cli
cmp
(bad)
out
imul
fs
fnsetpm(287
jmp
pop
inc
stos
mov
leave
xor
adc
(bad)
mov
push
sti
cmp
mov
jge
mov
push
aam
push
lods
test
or
sub
rol
test
mov
xlat
mov
mul
xchg
test
pop
repnz
sub
std
(bad)
inc
aaa
fwait
enter
adc
push
jae
cs
(bad)
sahf
mov
adc
(bad)
aad
clc
mov
sti
mov
ret
or
xchg
retf
in
js
fucomp
push
sub
mov
repz
cwde
fld
jge
push
push
and
pop
mov
mov
xchg
shl
lods
sub
in
test
cmp
xchg
xor
xchg
inc
and
or
(bad)
nop
mov
movs
dec
push
push
jmp
jae
mov
push
xor
outs
xchg
push
and
call
enter
mov
sub
jbe
or
arpl
cmp
icebp
sbb
lods
mov
ds
mov
rcr
inc
shl
inc
dec
bound
mov
cs
fild
push
cdq
cmp
sub
les
repnz
imul
lods
icebp
inc
shr
inc
outs
add
test
bound
int
gs
sbb
(bad)
fdivp
rol
shr
and
stos
sar
stc
lea
out
cmp
mov
stos
movs
xchg
cld
sahf
ins
sbb
add
dec
mov
imul
hlt
aaa
loopne
cmp
ror
dec
cmp
loop
and
fadd
and
test
and
jmp
pop
add
sub
jmp
and
rcr
pop
and
dec
sbb
xor
sbb
jl
xchg
or
pop
jge
(bad)
jo
jb
rol
xor
mov
xchg
imul
daa
add
adc
cld
test
lods
lahf
imul
cmp
cmp
scas
retf
adc
(bad)
and
push
sub
cmp
nop
fistp
test
cld
push
stos
sbb
das
bndstx
and
pop
aas
and
sub
sbb
lahf
out
call
movntq
sar
daa
cmp
push
aas
fadd
xchg
sub
inc
dec
jb
ficomp
push
xchg
addr16
cld
adc
int
repz
ja
adc
push
sbb
xchg
loop
or
aad
retf
adc
pop
stos
jmp
stc
aaa
fist
and
loop
mov
ss
sub
in
inc
adc
mov
push
mov
inc
ja
adc
and
xor
(bad)
loope
ins
cdq
and
cld
shl
and
cli
mov
adc
idiv
sahf
dec
in
mov
not
or
pop
or
sub
push
mov
cmc
xor
or
xor
push
mov
leave
push
xlat
and
jb
retf
sub
aas
xor
push
jo
pop
lea
pop
jb
retf
cmp
neg
pop
xchg
jle
pusha
retf
gs
mov
lock
push
lds
mov
push
push
or
sub
jo
sbb
mov
in
outs
in
mov
jmp
mov
mov
and
ret
dec
sbb
or
jo
imul
inc
out
call
ficom
(bad)
pop
adc
je
adc
inc
pushf
pop
js
or
cmps
add
divps
jg
in
aaa
or
or
ins
pop
in
mov
outs
jl
aaa
shl
(bad)
lock
fcmovnb
into
push
cmp
jg
xchg
mov
ror
lods
sti
nop
xchg
xor
xchg
mov
cmps
adc
or
or
stc
mov
pop
add
sub
in
xchg
outs
out
cmp
mov
and
imul
pusha
fs
cmp
hlt
in
bound
or
dec
and
stc
movs
mov
xchg
stc
dec
add
fimul
sub
ret
frstor
jle
add
shr
test
fstp
mov
(bad)
dec
(bad)
ret
fcomp
out
or
xchg
push
fucomi
nop
fcomp
dec
jb
inc
pop
in
add
call
mov
mov
sar
repnz
jbe
repz
xchg
xor
jmp
jno
bound
pop
cmp
jmp
jo
cli
jb
pop
sub
ss
scas
and
loop
iret
sbb
cmp
jo
inc
fs
sbb
add
hlt
cdq
pushf
imul
stos
push
push
repnz
mov
ins
push
scas
pusha
movs
xchg
jmp
mov
push
cmps
or
add
fwait
mov
sbb
xor
mov
sti
pop
pop
mov
aaa
or
hlt
imul
ror
inc
into
jnp
pop
gs
or
mov
test
sub
mov
pop
xlat
shl
and
loop
pop
repz
ins
xchg
gs
rcl
mov
adc
push
xchg
call
mov
aam
lods
std
pop
dec
mov
cmp
cmps
ja
mov
adc
push
mov
and
ja
(bad)
lahf
adc
in
movs
test
fidivr
ror
addr16
add
or
outs
fstp
loop
push
imul
cmps
ja
pop
repnz
and
mov
sbb
outs
rcr
add
loopne
xor
aad
mov
xchg
inc
sbb
ins
int3
stos
sub
pushf
js
nop
push
out
push
pop
push
dec
dec
sahf
xchg
and
jne
add
rol
movs
mov
call
dec
sub
add
xor
xlat
arpl
(bad)
aas
mov
test
mov
cmps
test
out
std
loop
hlt
mov
pop
and
lock
push
popf
mov
dec
(bad)
pusha
pusha
sahf
call
pop
(bad)
mov
xchg
popa
sub
pop
pop
rcr
in
scas
jp
lods
xchg
loope
scas
stc
loopne
(bad)
xchg
inc
scas
pop
jmp
(bad)
out
xor
pop
(bad)
adc
xchg
hlt
scas
movs
call
inc
xchg
test
jns
stos
mov
inc
aas
push
push
cs
push
inc
push
lods
push
test
pop
or
repz
jge
adc
push
retf
sti
push
pop
cmp
mov
loop
cdq
pusha
inc
das
cmps
test
lods
xchg
jmp
and
add
lods
sub
movs
aam
dec
dec
retf
aaa
loopne
inc
ds
adc
mov
imul
jle
out
aas
imul
inc
std
pop
ins
addr16
xchg
push
addr16
mov
or
pop
aam
xor
sbb
iret
mov
sub
(bad)
sti
js
mov
push
mov
pop
jp
and
inc
mov
xchg
xor
add
out
push
fidiv
popa
xor
out
iret
addr16
sbb
inc
test
cmp
mov
fild
in
inc
shl
dec
xor
jmp
push
pop
(bad)
jmp
lods
push
xlat
stos
inc
mov
or
jns
std
repnz
or
inc
imul
test
les
mov
add
fsin
sub
cmps
dec
in
inc
mov
xchg
std
jp
jecxz
stos
sbb
jge
cmp
leave
sbb
fs
inc
sahf
xchg
hlt
(bad)
(bad)
push
imul
into
add
cwde
mov
cmp
arpl
cmps
xchg
xor
cmp
dec
push
aas
sbb
rcl
xchg
stos
rcr
jmp
mov
jmp
xchg
mov
sbb
inc
sub
sahf
and
fnstcw
loop
imul
push
cmp
stos
or
outs
cmps
das
add
dec
outs
dec
jle
rcr
inc
and
push
ss
test
jbe
jmp
addr16
ret
ins
cmp
mov
xchg
test
daa
adc
sub
inc
mov
sbb
jno
pop
movs
fsubr
popf
imul
shl
(bad)
fwait
pop
sbb
lods
or
stc
mov
out
cmp
data16
sar
sbb
imul
inc
ins
mov
dec
ins
lea
pop
jmp
jge
cwde
(bad)
pushf
and
sub
loop
aaa
lahf
scas
shl
cli
inc
popf
ds
mov
sti
ins
mov
and
not
retf
js
data16
(bad)
push
outs
jnp
leave
(bad)
or
or
xor
daa
sbb
ret
in
jns
inc
test
imul
lods
sbb
(bad)
jnp
out
xchg
shl
(bad)
lods
lahf
je
test
inc
xchg
into
das
mov
in
jne
sbb
cmps
sub
fnstenv
mov
sub
push
mov
sub
mov
xchg
mov
lahf
adc
push
(bad)
jb
mov
inc
sahf
stc
ret
retf
jnp
xchg
mov
mov
sub
add
(bad)
sbb
cmc
and
push
xchg
out
lods
into
or
mov
push
jle
xchg
jns
mov
inc
sbb
mov
aaa
fist
pop
push
xor
out
adc
sub
(bad)
ret
ds
dec
nop
or
mov
int3
cmps
add
mov
push
aas
lds
mov
xchg
outs
sbb
and
add
push
mov
cmps
add
and
push
hlt
cdq
pushf
call
ins
(bad)
push
mov
iret
pop
jo
dec
lahf
fwait
cmp
scas
or
pop
inc
test
jne
xchg
test
pop
gs
adc
cmp
movs
xchg
das
jmp
sahf
sbb
inc
int
xchg
ds
cli
test
xlat
inc
push
and
xlat
jmp
bound
ficomp
imul
add
pop
in
jle
sub
out
cmp
in
loopne
push
fwait
ds
das
pop
inc
cli
loop
xchg
js
stos
pop
out
jno
popa
mov
shl
mov
out
dec
cdq
std
mov
pop
popf
pop
and
test
cmps
cmp
push
xchg
or
ins
mov
js
sbb
stos
jbe
fisttp
pop
dec
mov
(bad)
popf
bound
xchg
imul
adc
retf
fcomp
dec
jbe
sub
ins
push
fs
jae
cmp
pop
push
(bad)
cs
call
imul
mov
arpl
add
stos
xchg
ss
xchg
cmp
mov
inc
inc
push
push
mov
jb
in
stc
ret
jmp
or
adc
pop
push
and
lods
inc
cdq
xchg
fld
pop
mov
mov
in
inc
(bad)
loopne
shl
in
sahf
fbstp
dec
ins
inc
add
mov
push
addr16
(bad)
push
add
ss
inc
adc
test
scas
stos
cmp
cli
popa
sub
push
xchg
lock
(bad)
inc
xor
cdq
std
scas
sbb
mov
adc
xor
sti
push
push
sti
xor
mov
inc
dec
stos
fldenv
enter
sbb
ds
fdivr
add
adc
and
in
ret
or
pop
cmp
loopne
and
mov
dec
xchg
sbb
cmps
push
dec
and
cmp
cli
add
cmps
and
push
add
mov
cmp
jmp
imul
sub
jl
fcom
das
mov
test
adc
out
mov
retf
in
mov
hlt
mov
je
stos
fimul
xchg
sbb
ja
js
test
popa
xor
loopne
cdq
not
inc
fsub
into
mov
iret
cmp
fst
rcr
(bad)
jmp
(bad)
out
or
loop
fs
push
sar
loope
push
push
pop
cwde
aad
add
or
daa
sti
push
push
sbb
dec
jecxz
dec
leave
pop
test
stc
retf
sahf
ss
inc
out
or
sbb
push
pop
jmp
lds
sub
push
(bad)
leave
cli
cmps
and
out
fst
ss
hlt
leave
dec
adc
add
out
xor
addr16
adc
ja
pop
in
sub
aam
sar
out
pop
xor
adc
mov
inc
or
stos
aas
xor
cwde
mov
pop
mov
pop
fisttp
pop
bound
sub
cdq
aaa
loopne
mov
movs
stos
xor
jmp
iret
xor
lea
loope
lahf
repnz
push
mov
ds
cwde
in
sti
test
xchg
and
icebp
xchg
arpl
inc
cmp
arpl
std
lea
inc
leave
test
fucomp
mov
vpunpckhwd
stos
scas
mov
stos
fstp
add
fidiv
pop
jl
add
ja
or
mov
fdiv
add
pop
ins
stc
pop
and
and
push
in
and
xchg
jmp
es
xchg
dec
dec
loop
out
scas
ss
pop
test
inc
into
test
add
and
and
inc
sub
retf
jg
inc
pop
xchg
lahf
xchg
lods
jmp
xlat
dec
and
pushf
movs
(bad)
in
push
cmp
inc
or
xchg
ins
cdq
(bad)
retf
xor
ror
jns
cmp
lds
add
add
or
jmp
or
adc
ja
mov
retf
mov
pop
sbb
inc
cmp
adc
adc
mov
(bad)
xchg
push
xchg
push
pop
mov
clc
fisub
bound
ss
or
mov
(bad)
mov
mov
lea
sbb
pop
sbb
mov
pop
test
add
xor
outs
xchg
ins
lods
xor
mov
adc
cmp
test
dec
shl
retf
dec
xor
or
dec
mov
push
jno
jge
outs
push
je
jns
mov
out
or
xchg
pop
add
pop
jle
pop
out
call
xlat
xchg
data16
in
inc
inc
loop
xlat
mov
mov
sub
int
pop
(bad)
in
icebp
jno
mov
add
sub
jecxz
push
in
in
mov
add
xor
and
sub
or
xor
mov
stos
hlt
loopne
or
loope
iret
jmp
stos
mov
dec
les
fst
sbb
cwde
test
pop
xchg
pop
ds
ss
jb
stos
lahf
shr
out
jno
ins
movs
retf
cmp
call
cmp
test
pop
scas
cmp
mov
fs
pop
mov
sub
adc
jns
mov
mov
in
imul
loope
call
jmp
or
and
xchg
ja
cmps
inc
icebp
cmps
jnp
rcl
cmp
cmp
out
adc
inc
xchg
or
not
adc
aam
xor
push
xor
mov
push
lahf
lods
pop
call
mov
leave
cmp
mov
xchg
es
lods
retf
sbb
xor
and
fwait
inc
add
push
mov
push
jnp
xor
pop
and
mov
out
sub
inc
shl
dec
xchg
ret
daa
adc
push
jg
push
pop
test
push
imul
jecxz
fst
push
sbb
retf
jbe
(bad)
fst
(bad)
adc
leave
mov
push
imul
lea
cmps
xlat
mov
inc
shl
imul
adc
lds
sub
imul
cmp
mov
pop
aas
mov
stos
test
or
popf
shl
xor
push
adc
aad
scas
icebp
pop
ins
imul
cld
mov
pop
xchg
xchg
lds
adc
gs
sar
mov
inc
mov
or
push
out
pop
inc
fsubp
call
add
lds
or
push
mov
sahf
out
inc
movs
jno
stos
stc
mov
adc
je
loopne
fwait
pop
jmp
adc
stc
add
repnz
inc
out
cmc
and
loope
pop
movd
sti
movs
sub
pop
sub
and
sub
and
repz
call
cs
mov
jb
scas
inc
test
add
xchg
pop
ja
mov
mov
ds
pop
jno
or
iret
test
daa
repnz
ds
or
adc
push
cmp
aas
jmp
hlt
jno
or
pop
mov
fsubrp
or
pusha
fwait
xor
shr
pop
cs
int
or
xlat
push
fst
jp
fsub
push
test
xchg
mov
lea
inc
jne
adc
add
cdq
mov
loopne
push
mov
sahf
ja
test
and
fwait
adc
adc
jbe
in
sub
imul
pusha
push
xor
mov
jae
scas
sub
push
adc
inc
int
xchg
sbb
mov
inc
popf
(bad)
iret
arpl
sbb
xchg
cmp
mov
mov
xchg
movs
jb
fwait
sub
mov
jmp
pop
inc
sbb
inc
mov
gs
dec
jae
inc
sub
out
ins
cdq
ins
mov
daa
mov
mov
leave
nop
xor
inc
sbb
pop
dec
retf
cmp
mov
jnp
mov
loope
cmps
adc
mov
cs
hlt
sbb
jne
and
mov
test
dec
sub
cdq
retf
int
rcl
mov
iret
xchg
or
mov
mov
mov
inc
adc
or
cs
scas
outs
pop
jnp
lock
imul
inc
js
and
xchg
mov
push
add
lods
clc
loop
inc
push
push
lods
ja
into
int3
int
sub
shr
push
lods
aaa
loopne
out
dec
ins
jb
push
dec
mov
ins
sub
inc
aaa
pop
cwde
pop
pushf
sbb
adc
lds
dec
and
cmp
icebp
int3
dec
adc
in
fldcw
aam
mov
xchg
not
inc
or
test
jb
arpl
les
jmp
fadd
js
(bad)
js
xchg
sub
inc
stos
add
xchg
(bad)
aas
icebp
push
test
stc
push
(bad)
and
mov
call
add
call
ja
cld
call
add
fsubr
add
pop
pop
mov
and
adc
lds
in
lahf
data16
sbb
mov
add
cmp
clc
or
or
mov
pop
dec
adc
add
sbb
jo
jne
push
stos
push
cwde
mov
sub
jg
iret
mov
stos
xor
mov
shl
into
push
sub
jno
jl
fsubr
sbb
jae
jmp
test
out
test
imul
add
test
push
add
or
inc
and
in
or
cld
mov
in
inc
lds
xor
mov
enter
jle
ins
pop
fmul
mov
pop
or
jle
mov
sub
jno
add
out
cmps
sti
dec
js
gs
jmp
aad
test
ins
xchg
retf
jbe
and
adc
and
(bad)
dec
(bad)
push
arpl
das
in
xor
loopne
inc
mov
cmps
jge
mov
ss
data16
mov
sti
test
rcl
push
jnp
rcr
xchg
loope
jmp
fwait
mov
enter
add
jg
dec
ror
cmp
ret
push
sbb
mov
(bad)
cld
mov
(bad)
imul
inc
sbb
in
pop
sub
arpl
shl
xchg
mov
pop
inc
cdq
xchg
mov
fwait
popa
out
mov
in
mov
cmp
cmp
in
pop
push
mov
daa
and
push
sub
pusha
enter
imul
pop
aaa
in
rcl
pop
pop
and
xchg
cs
imul
test
(bad)
je
sub
ret
add
sub
jp
int
inc
cmc
fiadd
xor
mov
int3
inc
push
fld
jo
cmp
jge
jp
ror
xor
lods
push
je
inc
int
daa
and
int
les
jl
sti
xor
loope
in
leave
push
sbb
xchg
js
or
mov
inc
ss
jmp
data16
pop
mov
in
add
push
stos
mov
int
call
int
outs
cs
outs
dec
popa
leave
sbb
add
dec
xchg
or
les
mov
jnp
push
mov
pushf
fstp
mov
and
pop
xor
inc
sahf
add
sub
jno
fnstenv
outs
rcr
sti
inc
retf
jo
add
mov
leave
add
mov
loope
aaa
sar
shr
pop
lahf
mov
sbb
mov
sub
xchg
dec
push
setle
movs
and
mov
sub
jo
inc
out
int
fadd
fs
ret
jecxz
mov
mov
dec
xchg
std
dec
stc
scas
and
push
xchg
mov
mov
sub
cdq
fdiv
arpl
mov
mov
imul
xlat
outs
sti
mov
pusha
icebp
imul
loop
push
test
shl
lea
jae
cld
sbb
shl
sbb
out
mov
std
fcomp
adc
fstp
int3
arpl
push
(bad)
mov
xor
fnstsw
stc
(bad)
out
cdq
loope
ror
(bad)
aad
sbb
add
inc
jnp
scas
adc
push
stos
mov
pop
xchg
jne
sub
inc
cmp
rcr
pop
mov
sbb
sar
cmp
or
movntps
sub
push
jecxz
inc
leave
inc
clc
jp
cmp
popf
inc
pusha
cmc
lock
xor
pop
mov
rcl
mov
jp
jg
mov
jns
mov
or
in
pop
xchg
arpl
(bad)
gs
push
fidivr
xor
mov
lea
data16
outs
arpl
aad
ret
fs
jp
mov
sbb
jp
(bad)
into
jno
xchg
js
pop
in
xchg
push
adc
push
or
clc
mov
sbb
cdq
inc
jb
addr16
ret
push
adc
jmp
dec
mov
out
mov
ja
or
clc
nop
mov
dec
shl
fcmove
scas
inc
mov
(bad)
mov
jge
test
xchg
movs
ror
xlat
test
dec
jmp
dec
sub
loopne
loope
call
stos
xchg
adc
mov
imul
dec
xchg
cmp
call
scas
jmp
in
mov
jae
ds
xchg
imul
imul
je
add
add
push
mov
xchg
call
mov
and
lods
rcl
sbb
and
pushf
shl
push
jae
cmps
adc
js
ss
pop
fbstp
cmp
lock
pop
xchg
jns
jl
cmp
or
into
addr16
mov
gs
imul
or
imul
or
ja
scas
mov
enter
fsubr
fcomip
test
sub
pop
jae
mov
xchg
movs
jge
xor
test
jmp
jmp
add
cmp
add
push
out
leave
jg
shl
test
xchg
jg
sbb
push
add
ss
mov
(bad)
loope
lock
adc
ss
add
xor
xchg
mov
sar
call
aam
pop
mov
pop
ret
mov
das
js
out
mov
jns
enter
ret
mov
xchg
mov
stos
and
cmp
lock
call
shl
pushf
pusha
mov
pushf
xchg
cmp
data16
mov
icebp
cdq
jo
xchg
test
jecxz
fsub
out
mov
inc
ins
cmp
xchg
push
das
xchg
xor
mov
in
xor
xchg
cwde
mov
bound
and
out
inc
pop
add
xchg
mov
sub
adc
xor
test
enter
or
add
fld
inc
sbb
xor
movs
aam
icebp
aam
outs
leave
mov
inc
fsubr
jae
adc
and
and
mov
push
pop
shl
addr16
nop
mov
mov
mov
nop
jns
xchg
xor
fsubp
dec
adc
cld
jg
fwait
outs
cdq
int3
outs
inc
cmp
ins
outs
in
aas
bound
repnz
ins
les
cmp
out
adc
popf
scas
cmp
movs
outs
pop
das
bound
pop
pop
dec
xchg
xchg
int
mov
repnz
xor
jb
adc
and
push
push
push
push
xchg
xor
lock
and
inc
enter
movs
stos
loop
add
in
xchg
or
or
movs
rol
xchg
pop
(bad)
lods
stc
cmp
mov
mov
ins
or
mov
dec
popaw
pop
inc
and
cmps
das
sbb
fcomp
xor
aam
or
add
inc
mov
mov
rcr
mov
or
mov
dec
lods
(bad)
out
out
cmc
and
mov
xchg
ds
les
mov
cmps
arpl
add
push
int3
xchg
fadd
jnp
and
das
sub
lods
call
in
xchg
fsub
mov
mov
fistp
mov
pop
push
cmp
ss
es
pusha
pop
les
enter
movs
sbb
xor
dec
bound
mov
push
push
add
push
outs
adc
shr
pop
nop
fld
aas
mov
xchg
lds
jge
pop
cmp
out
jb
enter
dec
test
sub
repnz
(bad)
push
loop
pavgb
pop
es
sub
add
pop
loope
or
mov
push
loope
push
cmp
pop
pop
retf
or
adc
pop
and
std
mov
cmp
push
add
aam
shl
clc
in
(bad)
adc
popa
mov
inc
aad
cdq
mov
loopne
loop
or
fwait
inc
mov
push
leave
aad
or
and
es
sub
rcr
sbb
inc
(bad)
jno
in
cmp
in
xchg
push
mov
add
xchg
add
aam
dec
dec
sahf
mov
(bad)
cmp
and
sub
iret
mov
jo
retf
outs
xor
ret
popa
psubsb
mov
data16
inc
(bad)
daa
and
rol
push
pop
sub
scas
jg
sbb
pop
xchg
mov
push
ja
(bad)
adc
inc
sbb
outs
pop
lea
aas
mov
sbb
icebp
imul
push
mov
or
fld
cwde
mov
ins
mov
addr16
(bad)
fsub
shl
xchg
clc
fcmovnbe
cwde
cmp
ret
aad
mov
(bad)
cmp
inc
cmp
inc
xchg
xor
xchg
dec
stc
inc
lods
push
fld
shr
loopne
shr
cmps
jge
jo
loopne
pop
push
mov
push
dec
or
jne
sbb
mov
and
and
fst
ss
cmp
icebp
xchg
gs
jp
(bad)
add
push
cld
sbb
int3
(bad)
cmps
cmp
mov
mov
sbb
mov
adc
and
jbe
mov
dec
jp
pop
retf
icebp
inc
jno
adc
dec
repz
adc
or
in
dec
xchg
stos
mov
mov
test
iret
adc
or
jo
mov
ficomp
fld
xchg
pop
movs
dec
fs
mov
mov
scas
sbb
ret
jae
mov
inc
ins
aaa
push
lods
cmc
or
mov
mov
or
outs
js
cmp
fimul
in
fisttp
mov
jno
jl
xchg
mov
cdq
repz
xchg
push
pop
ins
or
imul
mov
cmp
jp
dec
in
(bad)
aaa
mov
jecxz
fist
adc
add
cli
push
nop
mov
sub
sbb
or
in
mov
lahf
dec
mov
sub
es
pop
mov
(bad)
imul
rcr
daa
ins
adc
int3
cmps
push
movs
inc
pop
and
dec
stos
mov
xor
inc
call
lahf
pusha
or
(bad)
rol
cmp
call
jg
repnz
out
call
call
xchg
push
(bad)
add
push
test
pop
outs
sahf
mov
jbe
xor
cli
loope
rcr
inc
movs
xor
mov
inc
push
sub
adc
in
pop
cli
in
(bad)
cmps
out
dec
(bad)
fisttp
sub
loope
stos
and
mov
sbb
lock
not
xor
into
inc
shl
jns
cli
pop
mov
pop
mov
gs
out
xlat
mov
mov
xchg
mov
rcl
rcl
mov
dec
add
test
mov
das
dec
cdq
xchg
rcl
inc
xor
push
inc
fwait
cmp
pop
add
mov
add
mov
lea
sahf
sahf
inc
adc
jno
fwait
popa
inc
mov
repz
arpl
lods
pop
mov
push
inc
rcl
xlat
xchg
dec
aam
mov
cmc
xchg
sar
push
out
in
(bad)
cmp
ja
leave
pop
cwde
aad
mov
lock
push
or
nop
sub
mov
inc
aam
mov
lock
test
in
sub
mov
out
call
mov
sub
aad
nop
ss
fs
stos
mov
loope
hlt
and
pop
inc
sbb
xlat
and
ret
dec
and
adc
jl
xchg
xchg
sbb
mov
xor
jg
mov
pop
mul
lahf
sbb
or
push
inc
cmp
mul
shl
(bad)
xlat
jge
xor
fidivr
adc
jle
sub
mov
in
movs
sub
cmp
cmc
cwde
repnz
push
mov
fsub
aam
or
pop
imul
or
int3
inc
out
dec
repz
or
popf
xor
pusha
mov
std
les
ret
sub
gs
out
fs
movlps
das
pop
mov
xchg
sbb
xchg
push
xchg
xchg
add
lods
xchg
scas
cdq
dec
sar
fst
or
cli
xor
lock
lods
imul
xchg
sub
mov
js
ss
pop
fidivr
cs
rol
push
or
xor
push
push
jecxz
or
mov
mov
ds
jbe
imul
nop
jb
add
and
jns
jp
(bad)
cmp
je
addr16
inc
cmp
mov
rol
call
sbb
call
rol
je
jl
adc
(bad)
call
mov
xor
jp
mov
adc
popf
mov
call
les
mov
lock
outs
jne
or
or
xchg
jl
fldcw
aad
rol
push
mov
xchg
std
bound
les
cs
jo
out
aaa
pop
inc
arpl
les
(bad)
sar
pop
popf
fld
lods
inc
push
cmps
pop
ja
or
stc
mov
mov
pop
xor
sbb
outs
aad
jns
mov
and
int3
dec
push
mov
xor
xor
ss
jbe
scas
in
ins
xchg
xor
fwait
arpl
ins
repnz
pop
mov
jecxz
jne
jb
jmp
push
xchg
xor
push
in
sti
adc
mov
repz
jp
xor
sub
pushf
adc
loop
push
xor
rcl
dec
add
or
jle
stc
in
repz
lea
sti
fcmovbe
push
dec
dec
dec
(bad)
out
test
jmp
sbb
pop
mov
lds
dec
mov
inc
mov
rcl
fdiv
lods
popa
aas
xor
cmp
in
scas
xchg
movs
xchg
xor
mov
jno
pop
dec
(bad)
sbb
sub
inc
mov
push
stc
setno
inc
mov
lods
mov
(bad)
cmp
movs
bound
mov
pusha
(bad)
xchg
(bad)
xor
add
out
xor
nop
fwait
dec
jle
cmp
retf
xor
scas
xchg
int3
call
or
call
inc
fisubr
or
or
cdq
xor
test
jmp
mov
ss
adc
or
test
inc
or
das
test
pop
lock
and
dec
lea
out
out
(bad)
sti
xor
lahf
push
gs
pop
loopne
sbb
test
out
gs
das
loop
cmps
cmp
frstor
(bad)
push
sub
out
dec
cmc
cmp
loopne
call
xchg
jbe
test
jb
leave
cmp
xor
ja
add
into
lods
in
sbb
retf
or
sub
mov
inc
jmp
pushf
pop
or
pop
int3
fdiv
ja
int3
rcl
icebp
fld
int
cmps
aad
fdivr
pop
adc
ds
mov
dec
out
or
fbld
inc
fcmove
mov
fld
sub
(bad)
outs
fnstcw
push
out
pop
jle
aas
inc
je
lea
mov
(bad)
enter
inc
cdq
cmovnp
hlt
aam
cld
jp
loopne
retf
add
and
push
jecxz
imul
imul
xchg
shl
nop
aad
push
inc
add
stos
repnz
adc
dec
fs
add
sbb
jg
fcom
pop
push
cmps
ins
pushf
popa
rcl
imul
mov
into
daa
mov
mov
stc
cmovns
xor
inc
cdq
movs
mov
mov
cmp
jne
jl
mov
rcr
push
dec
sub
pop
outs
xlat
or
jmp
out
pushf
(bad)
js
and
loop
cmp
into
pop
cmp
loop
scas
out
pop
sbb
nop
loopne
jns
retf
mov
(bad)
cmp
pop
xchg
or
fucomip
test
cs
cmps
scas
jge
rcl
lods
push
pop
iret
cwde
arpl
push
lahf
jae
lods
mov
pop
cmp
outs
push
nop
mov
rol
loopne
lds
dec
arpl
in
bound
stos
iret
ret
xor
mov
pop
xor
push
pop
(bad)
(bad)
or
mov
or
aad
test
dec
push
jns
test
popf
push
jb
out
jo
retw
rcr
(bad)
push
je
inc
mov
cmps
mov
sub
mov
mov
jge
(bad)
retf
dec
push
pop
ins
xor
in
mov
fwait
fs
in
fimul
xchg
outs
adc
int3
xor
cs
xchg
xchg
mov
rol
iret
cld
jbe
retf
adc
xchg
mov
xchg
add
ret
retf
pop
test
jecxz
test
mov
div
mov
fs
add
adc
pop
dec
jp
std
stos
cwde
mov
fst
clc
mov
lods
fimul
dec
jp
push
sub
test
das
hlt
les
mov
rcl
mov
dec
dec
mov
push
out
xor
mov
mov
mov
lea
sti
jmp
ins
stos
int
cs
repnz
ret
loope
call
in
sbb
cmp
inc
and
stos
mov
popf
mov
cwde
xchg
inc
xchg
push
cmp
or
scas
in
sahf
push
mov
jbe
fimul
xchg
sbb
mov
dec
mov
aas
jae
leave
jle
ror
adc
aas
frstor
jmp
mov
cld
stos
fidiv
stos
sub
lea
jnp
mov
jno
xor
pushf
das
xor
pop
pop
sub
shl
popa
mov
or
xor
sub
icebp
push
sub
push
repz
cs
lahf
in
mov
ficomp
dec
jmp
fsubp
or
imul
mov
lea
shl
shl
iret
and
outs
test
shl
daa
mov
out
mov
cwde
jecxz
and
xor
addr16
mov
push
xchg
loop
jg
sub
fdivr
jne
movs
sbb
push
and
repz
dec
adc
or
je
push
pop
adc
adc
retf
xchg
jno
fucomip
pop
ins
ds
jae
adc
or
test
cmps
sahf
mov
setne
pusha
mov
gs
aam
cwde
or
mov
mov
sbb
shl
mov
mov
xchg
xlat
pop
xchg
add
pop
mov
ret
sub
push
imul
iret
inc
xchg
in
xor
popa
pop
aaa
daa
pop
in
jb
pusha
aas
or
push
cmp
jmp
sbb
fs
pop
loope
and
leave
fldenv
cmp
mov
pop
jecxz
or
sbb
add
aad
data16
out
jle
xor
and
inc
lahf
(bad)
cdq
lock
icebp
ror
in
(bad)
xor
push
lea
outs
data16
xchg
aam
repnz
arpl
fstp
sti
xor
cmp
or
pusha
cwde
pop
stos
icebp
xor
je
add
dec
retf
sbb
jp
sbb
scas
stc
mov
scas
dec
in
and
xor
cmps
add
push
popf
or
lods
sbb
jmp
in
xor
push
xchg
loop
xchg
xchg
mov
sub
clc
popf
cmp
sbb
mov
mov
out
pop
mov
(bad)
jb
add
repnz
nop
loope
jmp
jno
ret
and
mov
inc
mov
jmp
adc
aas
rcl
cmps
push
push
jle
xchg
xlat
dec
push
inc
mov
leave
and
xor
or
loopne
iret
rcl
nop
xchg
inc
test
push
pop
inc
push
cwde
loop
xor
loope
mov
imul
rcr
push
pop
bound
fnstcw
adc
mov
dec
clc
stos
outs
jno
std
repnz
out
in
mov
ss
popa
out
lds
repz
outs
shl
jo
retf
loop
scas
push
call
popf
sbb
aam
mov
lds
mov
lods
cmp
xchg
nop
sbb
adc
xchg
outs
push
rcl
mov
je
fimul
mov
movs
imul
in
retf
shl
jp
mov
dec
repnz
dec
xchg
or
dec
xchg
adc
scas
mov
or
sahf
xlat
push
daa
jmp
gs
dec
pop
push
repz
and
in
cmp
cmp
push
add
cld
imul
aam
cmp
lahf
mov
mov
iret
add
fsubr
stc
daa
xchg
xchg
cmp
not
pop
sbb
test
(bad)
xor
pop
stos
adc
pop
xor
dec
inc
add
dec
outs
in
sbb
push
mov
inc
aas
minps
test
icebp
cmps
loope
ins
jecxz
call
sub
pop
mov
sar
pop
psrld
mov
in
cdq
(bad)
fcomi
xchg
jp
enter
hlt
xchg
jecxz
or
outs
vpsubb
mov
pop
inc
ins
inc
or
sub
mov
push
pop
cmp
in
ins
stc
cs
punpckhdq
dec
out
push
repnz
mov
xchg
je
inc
int3
fdivr
xchg
sub
stos
pop
fisttp
int
sar
retf
xchg
aam
rol
mov
out
inc
ds
call
(bad)
cdq
repnz
sbb
mov
cmp
fucomp
cmp
outs
push
dec
pop
push
lods
add
ret
mov
stos
mov
fistp
sbb
or
lock
xchg
mov
mov
inc
imul
loop
jmp
cmps
jmp
mov
xchg
mov
fstp
add
fnstsw
(bad)
pushf
mov
jmp
mov
nop
dec
push
movs
imul
mov
push
cwde
mov
and
pushf
pop
push
jno
fs
or
mov
add
mov
inc
mov
adc
jle
lea
mov
pop
out
call
pop
or
push
push
dec
pop
cmp
imul
cmp
popa
fwait
dec
or
add
pop
not
dec
fwait
add
ins
xor
mov
fisttp
cwde
out
repnz
scas
xor
add
sub
popf
data16
cmp
xchg
movs
lods
scas
xchg
nop
mov
clc
add
aam
mov
push
test
jns
mov
aaa
jb
test
jle
addr16
(bad)
arpl
hlt
push
jp
and
xchg
das
push
push
std
mov
adc
loope
adc
ret
dec
inc
inc
in
sbb
or
lds
push
je
sar
push
imul
mov
add
push
mov
pop
arpl
dec
icebp
pop
jmp
pop
mov
jae
cmp
out
add
cmp
das
js
push
add
movs
pop
mov
dec
pop
hlt
mov
sub
repnz
jno
jno
aaa
ror
xor
xor
jecxz
aas
add
pop
or
call
gs
ins
jae
sbb
jno
jne
lock
mov
push
mov
mov
pop
or
jmp
das
ss
shl
neg
lods
iret
ret
into
sub
dec
out
jmp
pop
adc
mov
adc
sbb
ins
or
test
mov
mov
pop
mov
andnps
pop
xchg
xor
loop
mov
call
cdq
push
push
test
cmp
outs
test
jp
mov
scas
dec
inc
ror
hlt
mov
test
mov
cmp
jg
xchg
daa
movs
mov
outs
out
std
aas
test
test
xchg
jbe
add
push
enter
jecxz
xlat
and
in
dec
fcmovbe
aam
in
stos
call
and
sbb
or
sub
pop
dec
sbb
and
mov
dec
mov
jge
retf
sbb
aaa
jo
adc
(bad)
aam
popa
mov
mov
in
xchg
add
xchg
ins
or
repnz
and
idiv
push
lahf
jp
out
stos
loop
(bad)
enter
mov
outs
scas
pusha
dec
push
loope
fwait
add
js
(bad)
or
and
sbb
lds
pop
fisub
test
repnz
into
jecxz
and
adc
add
cmp
sbb
jo
(bad)
pop
in
outs
cmp
popa
push
or
sub
shl
adc
mov
mov
mov
stos
xchg
es
fistp
(bad)
inc
xchg
in
sub
test
pusha
(bad)
sbb
das
add
gs
cmp
fcmovbe
enter
fdiv
cmp
mov
push
add
or
(bad)
addr16
xor
inc
mov
mov
add
test
adc
dec
fs
inc
jmp
push
and
mov
es
sbb
imul
into
movs
out
aas
imul
pop
mov
lahf
push
pop
aas
fcom
movs
test
pop
mov
or
fcmovbe
pop
icebp
xlat
or
mov
out
mov
sbb
in
aaa
or
mov
cmp
loopne
xchg
pop
mov
pop
test
aaa
push
in
out
push
test
in
shl
push
fwait
xor
enter
dec
push
jno
jg
cmp
and
retf
sub
ins
popa
pop
ja
adc
sbb
cwde
xchg
jbe
rcl
sbb
push
add
cmc
imul
aad
pop
adc
cmp
xor
jae
jp
in
movs
add
data16
call
mov
mov
inc
das
pop
pusha
test
lock
jo
sbb
sub
fmul
das
call
mov
popa
xor
jb
adc
push
data16
sbb
push
repz
fs
mul
cmovl
nop
sbb
ret
popf
lahf
pusha
loope
xchg
xchg
add
jp
scas
sbb
and
imul
lds
ror
cmp
xchg
xchg
test
out
lahf
xchg
add
inc
inc
pop
mov
add
inc
jbe
lds
push
xchg
je
cmc
sub
sub
sbb
adc
push
xor
(bad)
and
fcomp
push
push
xor
adc
in
mov
mov
mov
dec
cmp
jnp
sbb
xor
and
movs
cmp
dec
dec
ja
jne
inc
stc
cmps
push
aad
iret
add
pmaxub
int
cwde
add
test
mul
cmc
mov
sub
dec
mov
fstp
call
push
or
xor
sbb
or
call
cmp
xor
push
jmp
mov
mov
pop
push
dec
and
and
push
mov
mov
vmptrst
pushf
dec
imul
adc
push
jmp
dec
ret
mov
sar
movs
pop
sbb
and
neg
push
pop
pop
sbb
pop
mov
inc
sbb
or
call
mov
dec
add
out
jp
les
jg
jmp
xchg
in
out
retf
dec
sbb
add
mov
enter
in
mov
ret
ins
out
and
push
pop
xchg
hlt
clc
jno
les
xor
jge
cmps
mov
or
pop
mov
(bad)
mov
faddp
jne
sar
jb
push
and
lods
sar
mov
fldcw
vmovss
adc
sbb
lds
frstor
push
xor
in
sar
daa
push
jge
xor
push
cdq
scas
(bad)
jne
stos
xor
ins
int3
es
mov
ins
(bad)
cmps
in
cmp
mov
mov
ins
cwde
leave
in
in
jbe
rcr
movs
fs
imul
test
jb
lods
lahf
mov
pop
call
mov
xor
test
into
or
ins
aaa
mov
adc
mov
jecxz
stos
sbb
shr
sub
rcl
lods
mov
jno
in
nop
idiv
dec
sub
ss
mov
sbb
pop
sar
inc
popa
jle
cmps
(bad)
sbb
xor
jle
imul
adc
push
loopne
xchg
inc
xchg
mov
dec
mov
hlt
pop
test
out
(bad)
fstp
jg
cwde
les
and
dec
adc
mov
scas
sub
fcom
lds
hlt
mov
cmps
js
addr16
mov
mov
mov
sbb
push
in
pop
or
mov
leave
mov
into
xchg
add
data16
pop
xchg
xor
popa
cmc
adc
cmps
outs
lea
jg
dec
pop
retf
fild
stc
jmp
xor
rcl
icebp
mov
ret
push
sub
jmp
mov
xchg
cmp
test
aad
lods
clc
retf
shl
mov
ss
mov
repnz
dec
movs
lods
(bad)
jo
dec
mov
inc
daa
ins
sar
or
xlat
in
sub
lods
aam
mov
jmp
mov
adc
mov
cmc
push
sub
sbb
mov
loope
scas
add
push
mov
inc
ja
ret
retf
(bad)
and
sti
xchg
pop
add
or
outs
add
addr16
repnz
into
xor
jmp
dec
add
dec
mov
ins
icebp
jbe
fcom
clc
lods
(bad)
xor
sbb
xor
mov
fsub
jle
inc
xchg
movs
pop
scas
mov
sub
icebp
(bad)
fiadd
mov
or
pusha
cs
push
das
mov
jge
jp
mov
in
ret
pop
(bad)
or
inc
ins
push
mov
inc
push
cs
or
call
gs
popa
or
scas
sbb
(bad)
(bad)
push
stmxcsr
cwde
dec
lods
aam
sbb
fdivr
mov
or
pop
mov
xchg
(bad)
ror
cwde
pop
and
fld
dec
ja
jbe
ins
imul
xor
adc
jmp
sahf
hlt
les
mov
test
test
pop
jecxz
jo
stos
ins
das
mov
(bad)
fisttp
outs
mov
aaa
fwait
inc
mov
gs
xlat
mov
add
cmp
and
xchg
or
lods
clc
bound
xor
les
(bad)
enter
jae
aaa
aas
fbld
cmc
add
jno
xchg
ror
fs
data16
ins
cmp
loope
(bad)
loopne
inc
pushf
dec
xlat
test
push
mov
jne
or
adc
or
shr
push
pop
add
cwde
xor
mov
sbb
add
in
test
push
adc
dec
sti
mov
jg
pop
mov
cs
add
mov
clc
pop
out
sbb
xchg
sub
dec
cmp
and
push
xor
in
call
movs
pop
mov
sbb
movs
movs
or
rcl
add
imul
mov
sbb
and
js
xor
test
test
lock
lock
sbb
push
loopne
test
ret
hlt
jb
xchg
inc
ins
retf
test
or
rol
inc
popa
add
shl
mov
ret
pop
adc
push
and
mov
das
cmc
in
cmp
dec
pop
xchg
fld
xor
int
bound
push
xchg
loope
pop
mov
movs
mov
mov
cld
cmp
rcr
shl
ja
mov
push
jp
mov
jl
cmp
add
sbb
mov
les
clc
lea
mov
stos
xor
pop
arpl
add
out
pop
icebp
ror
dec
retf
je
lods
xor
jle
sbb
mov
inc
ins
lods
cmp
and
push
mov
imul
cmc
mov
jg
pop
mov
jnp
fld
mov
push
ret
ja
lods
cmp
not
in
add
out
es
dec
cmp
pusha
ror
cwde
fmul
pop
push
pop
xor
dec
scas
pop
add
mov
test
jp
lods
fs
adc
jmp
mov
push
leave
inc
sbb
jo
mov
imul
ins
or
(bad)
ss
xor
pop
out
or
rol
test
ins
jle
mov
adc
and
xlat
mov
add
ds
mov
int
rcl
mov
and
push
mov
inc
pop
or
pop
mov
inc
xchg
cmps
or
iret
arpl
int3
call
dec
push
les
lods
sub
sub
push
xor
mov
or
fsub
and
sub
outs
push
fcomp
retf
xchg
cmp
scas
aas
pop
cmp
arpl
ins
stos
pusha
jmp
pop
pop
add
push
fnop
iret
adc
mov
or
(bad)
xchg
sub
dec
stc
sub
add
inc
js
mov
(bad)
push
sub
push
shr
mov
push
sub
fsub
push
pusha
sar
fs
sub
or
pop
test
jae
mov
outs
movs
jmp
adc
(bad)
fs
pop
retf
or
inc
stc
add
inc
mov
ja
cmps
scas
dec
jmp
or
(bad)
push
ret
repnz
xlat
pop
stos
(bad)
push
sub
pop
imul
dec
sub
inc
scas
mov
xchg
aam
jno
jne
add
fist
or
jno
add
or
cdq
sbb
into
(bad)
sbb
sahf
(bad)
push
dec
test
loopne
outs
cld
fisub
dec
icebp
retf
sub
imul
xchg
fwait
sbb
pop
mov
pop
adc
ret
xor
xor
mov
push
neg
jmp
in
push
cmps
dec
cmps
stos
cmp
push
(bad)
sub
ja
rcl
fs
mov
pop
cmp
xchg
sub
mov
ins
jle
add
outs
mov
push
add
out
and
call
ret
jge
mov
pop
retf
push
and
sbb
imul
aam
dec
fs
retf
in
push
push
addr16
rol
push
rcr
test
xor
call
sub
cmps
inc
popf
sbb
ss
sbb
std
xchg
inc
xchg
cmp
ret
aad
cli
xor
leave
mov
add
xrelease
mov
imul
loopne
or
adc
dec
int3
retf
pop
mov
out
sbb
mov
aad
movs
adc
repz
retf
and
fcmove
into
into
neg
push
call
shr
jbe
sti
xchg
hlt
dec
in
and
cmp
push
mov
(bad)
sub
fwait
sbb
jo
push
or
fbld
sub
iret
imul
xchg
cmovne
pop
dec
cmp
mov
pusha
inc
retf
in
pushf
jecxz
pop
pusha
in
mov
inc
sub
out
cmc
(bad)
fnstcw
mov
test
cmps
ret
jbe
adc
push
loop
dec
stos
sub
test
jnp
loopne
mov
jmp
aad
std
cmp
or
jg
sub
push
ins
fsub
pop
jne
cmp
push
sub
fsubr
mov
hlt
pop
in
mov
ja
je
fcom
pop
loopne
xor
out
call
mov
ss
loopne
push
addr16
leave
test
xor
aas
test
shl
xlat
add
es
and
lods
psllw
mov
and
sbb
das
cmp
nop
ret
pop
sbb
sbb
into
jnp
cmp
sar
adc
loop
push
mov
and
inc
fisubr
mov
sbb
sub
jge
cs
adc
add
aas
jbe
adc
cwde
pusha
cdq
fidiv
stos
dec
je
je
scas
out
xor
movaps
jmp
stc
mov
popa
dec
arpl
mov
imul
jbe
test
jp
lods
cmp
or
push
or
into
clc
jl
(bad)
(bad)
test
loop
movs
or
xor
jecxz
inc
jb
xchg
pop
lea
ins
jmp
sbb
or
dec
push
int
cmps
test
inc
fwait
xor
inc
hlt
mov
pop
bound
xchg
scas
push
or
out
in
(bad)
xchg
inc
inc
retf
or
and
mov
rcl
jno
xor
add
mov
mov
mov
in
test
sbb
inc
push
sbb
sbb
or
jnp
inc
out
pop
xor
jns
dec
and
jb
repnz
test
retf
pop
icebp
sbb
je
das
loop
xchg
outs
cwde
add
push
add
push
scas
inc
mov
lods
(bad)
div
leave
cmps
push
shl
sub
mov
cmp
mov
lods
or
xchg
aad
test
or
ja
xor
gs
mov
retf
call
push
dec
mov
mov
repnz
inc
cdq
into
les
pop
xchg
scas
jmp
adc
popf
test
pop
(bad)
and
sub
les
repz
call
jge
push
(bad)
xchg
inc
ss
movs
sbb
and
ins
in
add
addr16
mov
pop
dec
fsubr
fisub
mov
lahf
mov
push
lods
sbb
add
xor
mov
jmp
mov
pop
fistp
cmp
push
aam
adc
and
call
pop
inc
lds
and
lock
retf
xchg
fstp
mov
jnp
scas
pop
cwde
outs
mov
pop
fldcw
or
pushf
xor
dec
jbe
test
nop
shr
xchg
bound
pop
xor
(bad)
jmp
xor
mov
popf
mov
not
dec
popa
push
scas
lods
cwde
jb
jbe
ror
cmc
std
cmp
mov
pop
out
or
les
das
fwait
add
outs
popf
mov
les
jae
inc
out
mov
pop
mov
add
xlat
fstp
jmp
pop
nop
shl
fs
sub
rep
dec
mov
dec
mov
imul
sbb
popf
dec
and
mov
mov
(bad)
mov
mov
xor
jmp
xor
pop
inc
jb
dec
(bad)
jp
xor
or
mov
sub
daa
gs
pop
adc
pusha
sbb
mov
addr16
fwait
mov
mov
adc
or
jns
cmps
nop
mov
sub
(bad)
push
push
cmc
call
vpsubsw
mov
adc
mov
add
pop
xchg
movs
(bad)
imul
das
jmp
mov
ffreep
cld
shr
xor
daa
sub
or
aas
and
add
pop
test
repnz
cmp
rol
cwde
test
add
popa
xor
xlat
mov
jb
xchg
rol
xor
ins
shl
add
and
rcl
dec
icebp
adc
(bad)
in
out
xchg
ja
cli
cmps
mov
call
inc
imul
movs
cmps
int
rep
std
adc
push
lods
movs
in
inc
xchg
sbb
movs
pop
cmp
(bad)
icebp
fisub
adc
cmp
add
jns
and
xchg
push
es
fadd
xchg
stos
and
mov
or
ins
add
pop
js
sbb
push
adc
aam
in
test
(bad)
adc
push
sub
pop
push
jp
pop
adc
cs
adc
push
push
jge
lods
xlat
pop
movs
mov
jae
sbb
loopne
leave
dec
(bad)
sti
ins
ins
mov
xchg
xor
pop
mov
pop
jno
imul
js
and
add
cli
xchg
mov
enter
dec
pop
daa
cmps
jmp
cmps
pop
retf
stc
ret
enter
or
dec
cmp
into
cmp
inc
cld
or
call
ds
xor
mov
mov
fnsave
xchg
mov
sbb
out
ret
lock
cmps
lock
jmp
push
adc
jle
sub
icebp
in
mov
cmc
pusha
mov
lea
mov
dec
jmp
mov
push
sbb
shl
and
jge
cmp
dec
mov
jbe
and
jo
jb
push
scas
pusha
jbe
and
xchg
xor
pop
je
sub
aad
pop
or
sbb
jp
stc
(bad)
les
sub
mov
jmp
je
push
sub
inc
dec
mov
push
or
or
in
xor
pop
ror
in
xchg
inc
xor
inc
push
clc
jmp
inc
(bad)
(bad)
cli
(bad)
jmp
push
(bad)
push
mov
sbb
push
adc
retf
dec
nop
xor
gs
in
jp
das
cmp
mov
jo
and
xchg
xor
mov
and
or
inc
inc
in
jne
in
(bad)
and
add
ror
loope
pushf
into
pop
mov
cmp
sbb
mov
ror
in
cmps
mov
iret
cmp
aas
fmulp
jns
arpl
scas
movs
push
test
out
hlt
mov
cmp
cmps
scas
fucomi
pushf
movs
pop
mov
dec
jmp
sar
cmovs
pop
inc
sti
movs
and
xor
rcl
push
push
jmp
movs
pop
sbb
fnsave
lahf
xchg
idiv
cmp
xor
mov
popf
rcl
fcomip
repnz
push
jmp
pop
xor
inc
mov
aad
jo
retf
xchg
arpl
fcomp
popf
or
xchg
clc
jbe
retf
push
dec
add
fst
cs
adc
xchg
in
repnz
or
and
push
(bad)
es
hlt
ror
movs
aas
sbb
or
add
xor
movs
sub
xchg
jb
adc
mov
pushf
push
loopne
xchg
sub
outs
pushf
icebp
test
imul
out
adc
and
ror
clc
or
add
cmc
mov
test
or
test
add
mov
and
fist
mov
sbb
push
jo
xor
fmul
mov
add
jbe
xor
pxor
imul
je
inc
aam
adc
and
imul
scas
les
nop
lea
ret
repnz
push
mov
xor
push
xor
nop
das
xor
inc
xchg
cmp
daa
in
les
pop
mov
xor
or
xor
adc
movs
xchg
or
mov
cmp
pop
gs
stc
shl
inc
repnz
cmp
push
jmp
loope
(bad)
shr
ins
adc
(bad)
ins
mov
stos
in
test
inc
push
aam
bt
jo
push
and
(bad)
scas
xchg
in
add
push
pop
bound
arpl
test
bound
loop
jmp
xor
lock
icebp
jge
inc
xchg
lds
les
and
or
jmp
leave
jb
mov
into
les
ins
cmp
shl
jae
pop
aad
inc
sti
fsubr
add
js
jb
sub
xlat
cmp
add
inc
mov
dec
dec
cld
jp
push
loopne
aad
bound
inc
(bad)
test
jmp
(bad)
ja
retf
loopne
clc
daa
jns
xor
aas
popa
and
or
push
pop
inc
mov
popa
mov
js
dec
push
out
test
cli
cli
lea
jmp
and
or
mov
loopne
sub
aas
sub
jl
out
iret
data16
pop
push
push
inc
jl
imul
in
jno
in
in
mov
or
gs
and
sbb
dec
push
mov
push
jmp
call
xor
(bad)
push
stc
es
sub
cmp
shl
add
inc
aaa
mov
inc
imul
inc
aam
xor
mov
(bad)
iret
mov
addr16
push
test
inc
lea
lods
sub
or
adc
jbe
xchg
jge
sbb
mov
cmp
mov
fisub
cmps
ins
js
and
ins
pop
(bad)
adc
repnz
(bad)
(bad)
mov
in
sub
sar
pop
xchg
jae
test
sub
in
scas
imul
add
pusha
(bad)
cmp
and
mov
shl
jns
fisubr
in
add
jmp
push
add
das
mov
xchg
cmp
stos
xchg
clc
sbb
dec
cmp
sbb
shl
mov
cmp
scas
mov
fistp
ror
mov
(bad)
xchg
sbb
jp
xor
frstor
aad
ror
mov
aas
inc
xor
sub
shl
or
fnstenv
jg
mov
aaa
hlt
xor
(bad)
jnp
jp
out
sub
test
mov
push
cmp
shr
or
(bad)
fidiv
pop
jns
sub
ds
(bad)
rol
jae
xor
mov
cmps
aaa
dec
lea
in
retf
dec
jns
dec
dec
cmps
mov
icebp
dec
inc
iret
dec
imul
fcmovne
test
lods
inc
(bad)
jno
or
fdivp
mov
aam
push
dec
imul
mov
mov
icebp
jl
sub
mov
jge
mov
xchg
test
add
cmp
lods
movs
stc
mov
jl
outs
jp
dec
push
dec
movs
and
dec
sar
mov
mov
pusha
and
gs
jo
xchg
mov
repnz
mov
add
pushf
cmps
repz
sbb
xchg
(bad)
movs
pusha
jp
imul
mov
ja
mov
mov
outs
popf
pop
pop
dec
jns
out
add
es
dec
add
push
jns
pop
ror
pop
cmp
cld
(bad)
mov
not
loop
ss
or
lods
movs
jns
push
push
jne
xrelease
mov
test
sti
pop
or
add
push
xchg
push
push
dec
mov
push
hlt
ja
pop
pop
and
xchg
in
jp
mov
inc
jge
pop
js
cmp
push
or
or
lods
int3
pop
shl
cmps
jge
mov
lahf
xchg
mov
jno
mov
push
(bad)
mov
sbb
call
xor
mov
(bad)
ss
and
lods
add
in
sbb
or
push
mov
clc
push
adc
mov
pop
ret
jg
inc
imul
cs
cmps
in
mov
test
sbb
add
sahf
lods
scas
dec
enter
movs
xor
leave
pop
push
movs
retf
pop
hlt
pop
pop
das
cwde
push
js
arpl
fsubr
xchg
push
shl
xchg
sbb
and
dec
sub
xor
fs
jmp
jb
pushf
mov
mov
add
mov
and
into
int
xchg
rcl
jo
les
mov
call
rol
sub
stc
cmp
cmp
xor
mov
jmp
xlat
push
rcl
xchg
inc
dec
cmp
gs
inc
call
mov
or
mov
lock
loop
mov
add
adc
(bad)
in
int3
sub
add
cmc
lods
add
lds
xor
mov
sti
adc
lds
mov
sbb
mov
fidiv
add
xlat
and
cmp
pop
scas
iret
jno
mov
jge
sub
pop
jb
sbb
js
xchg
adc
jnp
inc
aam
fsub
fs
retf
ss
sub
cmp
bound
cmp
or
mov
xchg
xchg
xor
jnp
fdivr
cld
mov
mov
dec
cmp
mov
pop
aad
inc
jecxz
int3
mov
popf
jno
and
jb
pop
call
xchg
aas
push
inc
ja
popf
call
dec
sbb
pusha
repz
pop
add
mov
sbb
sub
repz
and
ds
or
retf
aam
imul
xchg
call
push
mov
test
rol
push
shl
imul
xor
call
scas
std
aaa
les
xchg
dec
lahf
xlat
add
or
mov
lea
jb
sub
xchg
cmp
push
sub
ds
mov
jle
cmc
je
pop
stc
test
mov
daa
cli
push
inc
ret
dec
push
xor
repz
rcl
retf
neg
mov
add
gs
xchg
mov
sbb
mov
xchg
lock
enter
aad
aaa
sub
mov
shl
repnz
pop
test
cmps
adc
pop
arpl
mov
add
xchg
je
test
cmc
int
adc
or
(bad)
xchg
cld
iret
call
dec
push
xchg
sahf
adc
cmp
sbb
(bad)
mov
xchg
mov
(bad)
cmp
cmp
aam
in
test
push
and
or
dec
adc
adc
imul
fs
and
add
idiv
shl
cmps
ret
cmp
xlat
repz
(bad)
cli
data16
lods
push
mov
test
in
or
loopne
pop
dec
shl
cmp
mov
jle
xchg
or
push
push
inc
add
mov
or
lods
inc
aaa
hlt
mov
in
loop
rol
nop
mov
push
lods
je
and
mov
xchg
popf
int
rcl
into
fld
cld
mov
aaa
outs
imul
jmp
loop
xchg
add
mov
mov
jecxz
fidiv
or
fucomip
in
jb
(bad)
shl
fst
push
cmp
or
stos
mov
xor
jne
xchg
push
test
ja
mov
adc
mov
into
and
jl
fwait
jl
lahf
aas
inc
inc
cmc
test
add
dec
scas
div
add
jge
lahf
fmul
in
dec
sbb
pop
dec
in
fsub
ret
dec
std
sti
in
jmp
sub
xor
ins
icebp
add
cmps
add
fistp
je
ret
fcom
push
divps
push
sub
sbb
mov
jl
mov
cmp
and
pop
ins
add
xchg
rol
fisttp
ja
jb
add
or
call
pop
je
sub
mov
inc
lahf
xchg
jmp
pop
xor
dec
arpl
mov
scas
lea
sub
ficom
dec
add
sbb
cmps
mov
int3
loopne
lods
cmp
fmul
and
cwde
and
loop
or
ss
les
jle
push
add
mov
add
pop
ret
add
ja
clc
lods
cmp
aas
das
retf
mov
pop
ret
jno
push
cmc
jbe
cwde
push
push
dec
enter
adc
mov
mov
sub
retf
add
push
and
(bad)
inc
shr
mov
in
add
movs
rcl
inc
ficom
loopne
sub
sub
pop
cli
imul
jecxz
dec
cmp
leave
jp
mov
das
retf
sbb
mov
cmp
mov
in
jnp
stc
and
(bad)
dec
or
loope
je
mov
loop
inc
aas
push
ins
in
cmc
jbe
pop
pop
std
xchg
jo
and
cmp
ins
leave
add
(bad)
mov
add
adc
dec
xor
movs
push
jp
or
pop
lods
imul
mov
inc
add
cwde
xchg
jecxz
fnstsw
and
inc
sar
(bad)
in
adc
sbb
xchg
xchg
iret
add
leave
stos
data16
sti
loope
in
xor
xor
sbb
ja
ret
inc
push
sbb
mov
jno
mov
mov
jo
xchg
adc
cli
loopne
out
cmp
jne
(bad)
jmp
sbb
rol
fcomip
leave
arpl
adc
aam
lds
adc
lea
cmp
out
xor
jmp
rcl
jg
jb
add
mov
mov
hlt
sub
leave
and
push
sub
and
jge
repnz
(bad)
xchg
cmp
mov
fnsave
or
cmps
ret
outs
mov
push
inc
adc
xor
(bad)
and
pop
jl
push
push
jle
shl
mov
adc
and
shl
scas
adc
add
test
shl
mov
(bad)
sub
leave
fucomip
sub
ror
sub
mov
xchg
mov
in
and
lock
pop
jbe
mov
add
adc
call
retf
sub
stos
int3
jae
add
outs
sub
imul
pop
pop
fimul
pop
xor
fnsave
and
dec
cmp
outs
aam
sub
pop
pop
in
cwde
push
fnstenv
call
and
push
fld
inc
aad
lods
(bad)
push
mov
cmp
sbb
jb
push
not
push
xchg
cmp
cli
push
sub
mov
cdq
ss
add
or
outs
sbb
inc
rol
xor
xor
adc
inc
inc
push
adc
mov
or
xchg
inc
jg
in
adc
adc
jle
and
dec
stos
add
arpl
iret
sub
daa
(bad)
jns
ret
mov
push
mov
mov
xchg
loope
out
jge
sbb
and
aam
adc
mov
cmp
mov
push
clc
test
adc
test
leave
xchg
sbb
jp
addr16
sbb
js
dec
add
pop
rol
out
daa
and
mov
or
pop
cmc
mov
popf
sti
dec
aad
sub
push
pop
mov
aas
fld
popa
jmp
adc
add
shl
add
ins
scas
push
test
push
pop
outs
mov
jge
push
dec
outs
sbb
je
ret
sti
fst
jge
and
sub
xchg
das
lea
cmp
lea
retf
shl
fmul
push
jae
inc
inc
cdq
and
enter
leave
push
pushf
pop
aam
add
pop
lods
cmp
or
xor
inc
outs
inc
sub
mov
(bad)
ins
adc
pcmpeqw
dec
inc
cmp
je
mov
or
lods
je
push
and
push
mov
fiadd
sub
leave
and
xchg
inc
cmc
aas
mov
pop
adc
pop
les
nop
jns
pop
gs
add
sub
mov
repnz
dec
fwait
(bad)
ss
cmp
mov
xchg
out
mov
mov
mov
xor
inc
mul
jmp
bound
mov
dec
fnstsw
shl
popa
out
dec
movs
cmpunordps
dec
and
or
or
jmp
or
xor
xor
jmp
mov
mov
jge
paddq
call
mov
ror
xchg
mov
mov
pop
(bad)
xor
mov
sub
xor
push
test
jae
jle
retf
ret
mov
je
test
cmp
inc
add
mov
vsqrtss
xlat
xchg
ror
push
jno
enter
sbb
repnz
dec
popa
in
jbe
ds
xor
ins
loopne
in
push
pop
xchg
imul
lods
mov
and
in
(bad)
jp
sbb
or
dec
pop
push
test
stc
loope
into
jle
jge
ja
pusha
in
sub
imul
xchg
add
cmp
shl
out
cmp
outs
mov
mov
outs
cmc
xlat
sub
pop
jle
je
inc
mov
sbb
xchg
inc
dec
and
je
push
cmp
ret
or
ror
cmp
jb
cmp
pushf
cld
imul
movs
pop
shl
sub
xor
pop
call
or
arpl
fldenv
ror
push
sub
imul
and
std
fldcw
cmp
stc
xchg
cld
fwait
mov
and
call
push
cwde
int3
dec
test
mov
cmc
xchg
pop
sub
or
dec
dec
int
xor
mul
inc
jecxz
push
mov
ins
loopne
fsubr
dec
adc
adc
xchg
or
por
ffree
fcmovne
add
(bad)
(bad)
out
clc
in
mov
cmp
jge
test
cmp
scas
inc
jle
xor
outs
jg
fwait
mov
or
shl
stos
popf
xor
out
inc
push
dec
out
push
xchg
imul
mov
clc
retf
iret
inc
dec
inc
push
mov
(bad)
leave
das
dec
mov
sub
sbb
mov
mov
call
fld
add
movs
jmp
jno
jb
or
xchg
dec
nop
call
mov
scas
cmps
clc
sub
pop
(bad)
test
sub
push
inc
cmp
and
retf
mov
sbb
mov
aam
xchg
test
arpl
xor
lods
popa
(bad)
shl
mov
and
sbb
cs
inc
sub
inc
push
out
mov
adc
xor
int3
jo
outs
pop
pop
es
ins
in
sahf
inc
sub
call
popf
sub
xlat
addr16
adc
pop
outs
sub
push
clc
pushf
mov
push
pop
test
pop
ficom
xor
outs
nop
jnp
cmps
mov
dec
cld
js
stos
or
(bad)
jne
fdivr
push
push
pop
enter
cmp
outs
fdiv
enter
mov
sbb
dec
mov
rcl
or
mov
ret
dec
cmp
xor
lds
jbe
xchg
xchg
mov
add
or
sub
out
(bad)
jae
pop
mov
jbe
cmps
push
es
and
mov
imul
lods
and
stc
rol
lds
(bad)
pop
adc
cmp
cmc
mov
enter
add
push
jle
jle
neg
pop
jmp
xor
dec
sbb
(bad)
cs
hlt
in
xchg
mov
mov
cmp
xor
pusha
and
cmp
fisub
ds
xor
inc
mov
ds
les
and
stos
frstor
iret
push
loop
cdq
xchg
cli
cdq
dec
push
stc
ret
out
fstp
dec
pop
xor
call
pushf
fcomip
out
sub
sbb
(bad)
test
pop
lahf
(bad)
out
jl
inc
and
mov
pop
popf
fdiv
cdq
cmp
cld
or
mov
mov
cmc
(bad)
mov
and
stos
inc
pushf
lock
inc
idiv
cmps
data16
rol
or
mov
jns
mov
sar
stos
mov
outs
sahf
or
arpl
stos
movs
lods
adc
pop
je
hlt
je
xlat
cmp
jmp
dec
test
outs
sbb
lods
out
xchg
dec
jo
jl
int
sahf
(bad)
and
es
data16
arpl
rcl
sbb
push
ins
test
dec
pop
inc
dec
jle
jmp
(bad)
popf
fld
daa
mov
mov
cs
adc
mov
dec
cmp
mov
rcl
ss
pusha
mov
mov
lahf
sub
jne
aam
xchg
cmp
hlt
mov
outs
enter
in
jmp
ja
xchg
inc
enter
lahf
call
sbb
add
mov
xchg
xchg
sbb
daa
xchg
pop
stc
mov
ins
popf
jae
imul
lods
iret
inc
adc
xchg
sbb
retf
sbb
or
mov
lahf
add
xchg
push
lock
jle
jle
xchg
mov
lock
push
push
aam
movs
and
dec
mov
and
scas
cwde
outs
pop
mov
push
xchg
inc
ins
cmp
loop
bnd
or
mov
mov
mov
push
pop
call
repz
outs
or
mov
call
rol
jmp
call
inc
mov
inc
repz
cmps
mov
imul
xchg
hlt
pop
sub
mov
pop
cli
push
pop
loopne
dec
mov
ja
pop
mov
stc
ret
retf
ret
in
(bad)
loopne
ret
nop
mov
lahf
ss
ret
cmp
add
out
xchg
loop
mov
popf
xlat
jb
fild
mov
out
adc
xchg
clc
and
ds
rcr
jg
scas
int3
cmp
cmp
fimul
sbb
cmp
out
clc
retf
call
xchg
imul
adc
leave
mov
test
out
jb
jbe
ins
es
imul
sbb
not
inc
cmps
jp
pop
js
test
xchg
(bad)
hlt
and
dec
dec
lahf
pushf
adc
adc
pop
int
in
ins
push
mov
and
cmps
inc
bound
or
push
mov
cdq
add
int
fwait
dec
icebp
lock
pop
fiadd
(bad)
fld
lods
iret
cmc
in
push
xchg
ss
mul
retf
pop
jno
fstp
adc
ds
adc
movs
or
xlat
shl
lea
mov
imul
je
push
add
fld
cwde
pop
jne
ds
inc
rcr
shl
js
mov
cmp
lock
jne
mov
mov
shl
cmps
into
stos
(bad)
rcl
retf
xchg
popa
stos
aad
jae
stc
xchg
mov
lods
test
xchg
adc
ins
sub
sti
repnz
iret
adc
jecxz
dec
pop
mov
push
jnp
dec
cmp
fdiv
pop
es
cs
(bad)
xchg
aad
mov
adc
add
mov
dec
sub
ret
mov
in
jmp
xchg
sbb
mov
inc
inc
add
mov
mov
rol
bound
imul
(bad)
mov
jp
dec
sub
push
push
cmp
cmp
sub
mov
pop
inc
pushf
icebp
or
lahf
mov
xor
cmp
ins
cdq
mov
outs
int3
jb
mov
or
mov
jae
xchg
xor
lahf
mov
xor
mov
shr
shl
jae
mov
and
scas
repz
shl
cmps
pop
aas
(bad)
fs
call
dec
or
aad
daa
mov
test
loop
arpl
pop
sbb
lea
push
pushf
inc
into
shl
lds
adc
mov
or
jbe
ins
xchg
pop
and
mov
outs
daa
loopne
lea
shl
push
cwde
and
icebp
xor
arpl
add
cmp
pop
ret
lods
add
dec
cld
idiv
test
mov
daa
mov
inc
mov
and
mov
sbb
test
shl
stc
inc
or
jmp
cmp
shl
inc
cli
push
std
fisttp
aam
push
sub
inc
cmp
jge
push
imul
mov
fstp
cmp
fdivr
mov
sbb
sub
push
cld
inc
or
or
or
adc
pop
fisub
pop
arpl
xchg
cmp
add
cwde
mov
mov
jl
jne
out
mov
outs
sub
or
test
fdivr
mov
frstor
leave
xchg
jle
fcom
inc
push
sbb
jle
mov
fdiv
mov
pop
jb
aad
stc
inc
xlat
sbb
imul
test
xchg
mov
push
dec
xchg
mov
add
(bad)
sahf
add
mov
cmps
jns
mov
pop
ror
in
mov
retf
or
sbb
xor
retf
mov
jl
fisubr
inc
inc
out
push
mov
sbb
add
(bad)
or
and
mov
icebp
mov
pop
pushf
mov
in
and
sahf
mov
cld
not
pop
dec
aaa
and
fsubr
hlt
inc
imul
repnz
jns
adc
and
je
pop
loop
xor
gs
pop
mov
pusha
out
sti
pcmpgtw
jmp
jnp
enter
cmps
icebp
jns
movs
dec
dec
sub
test
dec
and
push
cmps
and
inc
(bad)
call
mov
pop
sub
and
mov
scas
and
mov
push
xchg
mov
dec
dec
out
add
outs
and
outs
std
jl
push
cmp
jbe
or
inc
out
jecxz
adc
mov
pop
pop
push
gs
mov
daa
(bad)
in
test
jmp
xor
sbb
cmp
xchg
out
test
jbe
push
out
or
xor
mov
es
or
push
mov
dec
ror
test
cmc
loopne
jbe
mov
adc
jp
hlt
inc
repnz
xchg
cmp
adc
adc
inc
push
ja
adc
outs
mov
xchg
inc
or
shr
adc
push
jecxz
mov
inc
cmp
push
imul
test
int
or
sbb
aad
push
stos
stos
imul
jecxz
bound
int3
sub
xor
mov
pop
stc
pop
fidiv
dec
mov
jp
push
es
fnsave
mov
or
inc
std
sbb
in
or
loop
xchg
cmc
movs
or
adc
hlt
fidivr
sub
cld
inc
mov
in
mov
push
std
js
fcom
pop
out
lods
rcl
mov
in
mov
jmp
bound
ins
cmp
jp
xlat
test
cmp
ror
stc
cdq
call
cmp
sub
call
push
clc
out
xor
sbb
(bad)
in
mov
cwde
push
shl
popa
push
xchg
adc
ss
cmc
mov
mov
jecxz
sub
repnz
shl
fwait
nop
push
lods
push
xchg
mov
rol
das
fld
or
test
stos
shr
std
in
pop
dec
ins
dec
lods
fs
cs
(bad)
dec
cmps
aad
inc
mov
jmp
cmp
loopne
inc
xchg
ins
ror
pop
out
mov
in
push
add
popa
add
jns
inc
int3
pop
clc
jno
mov
shl
adc
scas
int3
je
in
scas
inc
outs
mov
ds
mov
rcr
iret
cld
outs
cld
and
xchg
(bad)
dec
push
test
cmps
fstp
add
ja
push
in
jns
aaa
repz
sti
outs
xchg
xor
pop
je
out
or
dec
mov
(bad)
jmp
adc
push
xor
cmp
bound
or
pop
mov
mov
aas
test
ret
(bad)
pop
ror
xchg
pop
cmp
arpl
sub
pop
mov
icebp
add
inc
xchg
inc
dec
clc
mov
jl
(bad)
icebp
cmp
aad
push
cmp
adc
ror
dec
add
int
jge
into
jno
xchg
shl
xor
sbb
push
ja
pop
mov
outs
push
dec
add
pop
rol
rol
mov
pop
in
push
cli
xor
pop
adc
cmp
lds
out
outs
scas
fbstp
xchg
rcl
adc
fnstcw
scas
sub
adc
pop
jg
mov
repz
push
cmp
add
xchg
gs
push
(bad)
icebp
or
outs
xor
xor
fdivr
cdq
lahf
test
in
mov
(bad)
hlt
xchg
add
movs
mov
cmp
cmps
outs
jae
outs
adc
stos
call
push
sbb
imul
mov
(bad)
call
std
aaa
sbb
push
cmp
pop
adc
sar
adc
xchg
popf
inc
push
loop
ins
iret
rcl
sub
jb
aam
daa
and
jp
push
outs
rcr
mov
in
loopne
jp
push
add
mov
cdq
fnstenv
mov
fs
data16
jecxz
dec
enter
js
bound
imul
or
into
in
(bad)
loope
lds
mov
add
dec
js
clc
inc
(bad)
and
pop
ins
test
fdecstp
pop
push
inc
out
lock
out
mov
sub
(bad)
dec
cmp
loope
test
mov
cmps
pop
and
test
add
pushf
push
and
ja
lds
xor
imul
inc
jbe
xchg
mov
mov
and
ret
adc
retf
aad
stc
les
cmp
xchg
aam
jo
arpl
jg
push
in
jo
mov
jge
call
(bad)
repnz
mov
(bad)
nop
mov
jnp
call
mov
mov
stc
test
mov
add
push
retf
or
mov
rol
push
pop
retf
or
cs
pop
or
adc
push
cmp
int3
dec
sub
fisttp
test
pop
mov
fisttp
aam
cmps
sbb
ja
popf
inc
dec
mov
shl
add
call
aaa
movs
pop
push
aaa
aam
pop
inc
adc
call
dec
ins
cmps
lds
and
mov
xor
adc
dec
mov
jl
scas
jnp
push
jmp
clc
mov
(bad)
xor
sbb
jp
test
fcomp
adc
je
push
add
mov
add
pushf
jmp
xchg
push
jp
je
data16
jmp
fist
pop
out
and
data16
pushf
repnz
gs
jae
test
es
add
or
push
jmp
cmp
jecxz
push
cli
lea
mov
or
ins
scas
or
test
cmp
push
inc
dec
(bad)
push
sub
ror
scas
data16
pop
fmulp
popa
jne
push
jmp
xchg
test
push
cmp
(bad)
mov
loopne
das
js
mov
or
das
lock
add
stos
and
rcr
popf
push
mov
jmp
lahf
mov
cdq
les
int3
or
xor
jnp
inc
xor
pop
sub
gs
aam
mov
in
ficomp
mov
or
iret
push
pop
cmps
ret
sub
dec
add
dec
adc
jecxz
(bad)
(bad)
inc
and
and
push
mov
mov
or
inc
arpl
popf
pop
jns
pusha
ror
icebp
lahf
mul
pop
or
inc
pop
arpl
add
movs
xor
imul
popf
dec
mov
adc
loopne
add
retf
inc
fs
ret
dec
inc
mov
and
cmps
(bad)
lock
jg
inc
and
push
mov
mov
mov
sbb
cmp
jle
jmp
ss
outs
mov
mov
pop
loopne
lea
cs
add
adc
mov
fbstp
xchg
lods
sub
jmp
cmps
int
xlat
(bad)
mov
in
add
smsw
movups
adc
jmp
cmp
push
ror
shl
adc
loopne
sub
scas
loope
retf
xlat
sub
add
push
outs
pop
into
ds
pop
out
sar
mov
add
sbb
stc
test
sahf
fnstsw
cmp
(bad)
movs
jmp
adc
jmp
add
loope
sub
daa
stos
adc
mov
fwait
ja
push
mov
mov
xor
fmul
mov
test
hlt
add
cmps
inc
pop
not
cmc
or
jmp
cmp
push
dec
sub
mov
push
cwde
push
call
stc
xor
and
push
sbb
(bad)
mov
jp
xor
paddusb
int3
cmps
jl
mov
fdivr
mov
cmps
cmp
inc
push
daa
pop
enter
int3
call
adc
push
or
cmp
bound
fs
xchg
repnz
cmc
pop
and
lods
sub
inc
shr
test
xlat
mul
and
(bad)
push
mov
in
popf
outs
pop
adc
push
and
fnstcw
jbe
mov
fstp
mov
pop
leave
lds
jne
add
enter
fs
not
imul
(bad)
test
or
std
icebp
mov
dec
je
in
xchg
jecxz
xor
mov
add
or
jmp
xchg
test
popa
dec
retf
mov
sbb
xor
xchg
and
xor
popf
mov
sub
mov
test
jo
std
inc
retf
(bad)
dec
call
inc
mov
inc
adc
mov
je
mov
xor
call
mov
jns
sub
ins
pusha
popa
repz
repnz
loop
fdivr
jg
xchg
cmp
lods
pop
aam
ins
inc
movs
out
aaa
mov
ss
sar
fsubr
xlat
mov
inc
gs
mov
sbb
sbb
cld
adc
rol
jno
pop
test
jmp
(bad)
cmp
aaa
arpl
add
and
push
cmps
cmp
jns
shr
jmp
or
daa
and
mov
xchg
addr16
ror
repnz
popa
loopne
cmp
jmp
and
fdiv
xchg
(bad)
in
adc
push
movs
js
(bad)
pushf
out
jb
fild
or
in
sbb
popf
outs
mov
cmc
aad
or
xchg
push
mov
aas
repz
or
pop
adc
in
mov
ins
xchg
push
scas
aam
push
imul
xchg
rol
dec
movs
stc
jae
icebp
int
sbb
lock
xchg
test
cmp
cdq
scas
add
clc
dec
xchg
inc
pop
loopne
jl
mov
adc
add
imul
mov
neg
pop
push
popf
mov
scas
sub
into
imul
out
repz
push
cmp
in
call
jl
sub
sbb
add
cmc
retf
retf
rol
push
push
or
dec
push
sub
dec
hlt
and
leave
imul
jnp
dec
mov
repnz
cdq
in
adc
outs
idiv
xchg
xchg
gs
sar
cld
ss
dec
lods
mov
out
bound
mov
add
lds
out
sbb
add
ds
inc
rcr
aad
aad
and
pop
and
sti
lea
push
repnz
adc
cs
jnp
mov
enter
aam
cmps
xor
out
rcl
(bad)
sbb
jnp
sbb
or
int
jl
test
sub
dec
rcl
cli
mov
sub
test
push
outs
sbb
rol
neg
arpl
push
adc
dec
sbb
adc
ds
test
loope
pop
or
call
fs
xchg
shl
movs
std
xchg
mov
js
test
outs
pop
cmc
ss
not
loope
test
adc
dec
push
mov
outs
sbb
fwait
repz
adc
loope
cli
xchg
cdq
js
mov
dec
xor
add
cmp
popa
adc
xlat
in
call
popa
inc
or
or
aam
scas
and
(bad)
inc
pop
in
sbb
sub
lock
pop
pop
push
mov
(bad)
test
iret
leave
shr
inc
dec
mov
fs
pop
push
lds
xchg
call
or
leave
pop
pop
(bad)
loope
sub
jecxz
loopne
and
popa
neg
sub
nop
mov
xor
daa
mov
je
pop
xchg
enter
les
dec
fldcw
sahf
les
cmp
push
push
pop
(bad)
gs
mov
scas
fld
mov
ins
inc
mov
arpl
xchg
add
adc
gs
aad
pop
mov
mov
cs
test
mov
retf
jg
xor
sbb
mov
mov
mov
shl
test
mov
(bad)
cs
and
dec
pushf
xor
mov
push
je
push
fwait
imul
popf
(bad)
xchg
mov
loope
sub
dec
test
ds
jb
aas
sub
sbb
enter
imul
xchg
xor
test
cmps
pop
pop
popf
push
lock
lods
cmp
ss
inc
cdq
pop
or
ins
jbe
stos
mov
xor
jnp
std
fcom
js
arpl
jecxz
int3
add
aad
js
(bad)
jo
jmp
add
xchg
repnz
xlat
retf
sub
xchg
fldenv
idiv
mov
les
add
retf
pop
xchg
cdq
icebp
mov
test
test
or
push
ror
sahf
shl
add
pop
or
add
addr16
int
pop
int
cmp
push
enter
xor
fsubr
adc
and
xor
jmp
xchg
std
out
scas
jmp
xor
or
dec
sub
icebp
sub
cmps
out
dec
mov
jge
fiadd
rcl
popa
scas
sub
or
(bad)
fild
sbb
ins
mov
repz
adc
push
pop
js
jge
cmc
call
inc
jne
or
(bad)
push
mov
loope
dec
push
dec
push
movs
(bad)
enter
mov
add
or
(bad)
scas
add
push
push
dec
je
loop
sbb
push
fs
inc
jecxz
xchg
in
stos
mov
jno
icebp
ins
out
sub
or
repnz
pop
out
mov
mov
push
xchg
xchg
ror
push
xor
call
shl
(bad)
mov
adc
outs
out
sub
fsubr
adc
jo
stos
mov
test
xlat
jg
mov
push
push
in
neg
jle
or
sub
pop
sbb
lds
jge
mov
stos
shl
scas
mov
lea
inc
shl
sbb
aad
loopne
sbb
xchg
outs
stos
inc
fcmove
jmp
mov
test
ja
adc
push
cld
pop
lahf
add
lods
test
inc
and
mov
inc
cmp
add
mov
scas
inc
push
stos
lods
js
gs
test
jnp
mov
loope
mov
jp
add
daa
pop
fidiv
dec
xor
sbb
add
xor
in
adc
hlt
test
mov
aaa
sub
push
sub
rcr
daa
xor
sbb
int3
jle
retf
or
fld
xchg
dec
fnstcw
movs
mov
xor
std
sub
pop
(bad)
sbb
jmp
xchg
adc
jl
int
mov
inc
stos
jnp
push
xchg
mov
aad
mov
push
fdiv
lea
and
sbb
pop
repnz
(bad)
jbe
fmulp
fisub
inc
fmul
jae
mov
sub
or
test
adc
popf
pop
scas
imul
pop
mov
adc
cmp
inc
push
repnz
int3
fisubr
ret
out
or
bound
lods
xchg
cs
test
cdq
xor
stos
adc
into
push
mov
sub
and
popf
(bad)
in
nop
xor
nop
or
adc
or
sub
adc
jge
mov
jnp
dec
inc
mov
call
(bad)
scas
ss
out
xor
loop
inc
popf
fs
push
sub
push
mov
cwde
sahf
and
mov
sub
repnz
push
repnz
jmp
jmp
pop
adc
(bad)
and
inc
lock
enter
adc
jmp
mov
push
sub
outs
xor
ins
repz
in
nop
les
out
into
sub
int3
int3
xor
inc
pushf
ficomp
xchg
and
sahf
xor
push
in
cmp
mov
out
cmp
or
test
mov
call
daa
dec
in
and
rcr
rcl
adc
ins
xor
xchg
adc
cmc
mov
jns
in
mov
popf
cs
out
lock
jmp
ins
and
or
inc
jne
cld
or
(bad)
dec
push
fbstp
aaa
xchg
mul
shr
addr16
in
push
sbb
jnp
xchg
jno
cwde
dec
jno
jae
imul
sbb
pop
scas
nop
pusha
rol
rcr
cmp
cli
stc
cmp
(bad)
cmp
sub
clc
icebp
cmp
push
sbb
mov
aas
das
jo
es
and
or
outs
push
cmovb
cmp
add
imul
add
(bad)
in
or
add
add
sar
aam
fidivr
imul
sbb
cwde
iret
jnp
mov
loopne
xchg
mov
pop
scas
mov
fnstenv
test
sub
lea
add
and
pop
addr16
or
lea
sbb
xchg
icebp
cmps
xchg
adc
gs
cmp
xchg
cmps
sbb
lds
out
mov
shufps
shl
(bad)
xchg
jg
xor
mov
leave
daa
lahf
daa
jb
jae
in
xchg
push
inc
push
sbb
push
sub
sub
(bad)
jp
scas
adc
push
jns
das
push
pop
mov
jecxz
push
packsswb
fadd
add
pop
call
imul
into
inc
mov
inc
push
push
clc
push
fimul
and
and
fisttp
mov
icebp
into
mov
pop
mov
sbb
adc
add
loope
fstp
ret
rep
jne
(bad)
cmp
sub
mov
push
mov
inc
pop
fisub
mov
mov
mov
fisub
sbb
dec
in
ss
xor
xor
push
dec
outs
cmp
repnz
scas
loope
pop
call
movs
cmp
push
xor
ret
push
lock
ins
jmp
repnz
xor
(bad)
int3
or
mov
es
or
jnp
mov
cmp
jae
push
js
or
lods
xchg
scas
out
(bad)
shufps
and
dec
(bad)
in
aam
mov
(bad)
scas
ins
sub
and
cmc
aad
addr16
or
sub
rol
loope
adc
ins
pop
imul
xchg
(bad)
mov
loop
inc
sbb
add
inc
(bad)
dec
and
loop
adc
sbb
adc
xor
sub
inc
push
jl
shl
mov
out
loopne
dec
push
scas
xchg
dec
mov
test
or
stos
stc
mov
sti
mov
gs
leave
xchg
adc
inc
pop
ret
loopne
sub
push
pop
push
outs
ret
not
adc
les
loopne
xchg
adc
or
jnp
jle
xchg
inc
xchg
fmul
fadd
jno
cmps
mov
es
test
push
pop
mov
xor
pop
and
and
(bad)
call
xor
lods
push
mov
outs
or
ret
in
mov
clc
adc
in
xor
and
or
sub
add
pop
inc
jge
data16
and
mov
imul
enter
ret
rcl
mov
mov
sub
enter
inc
dec
mov
push
mov
cmp
inc
pop
out
mov
xchg
aaa
std
mov
cdq
loope
scas
xor
fdiv
mov
push
cwde
cmps
dec
imul
mov
add
push
jp
sti
xchg
clc
daa
pusha
adc
cmp
mov
mov
dec
cmp
stos
push
imul
dec
cwde
pop
dec
sbb
add
mov
mov
jmp
(bad)
xchg
sub
pop
sbb
xchg
mov
(bad)
hlt
outs
adc
sub
pop
shl
mov
adc
mov
cs
test
mov
aas
ins
lock
push
(bad)
pop
lds
or
out
imul
adc
mov
sub
bound
daa
mov
jle
xor
cmp
pop
pop
or
cli
loopne
call
les
cmp
push
jg
aaa
sub
mov
dec
fmul
nop
xor
(bad)
cwde
jmp
nop
popa
mul
ins
test
or
mov
leave
and
and
loop
jmp
dec
add
bound
cmp
inc
nop
and
pusha
int3
leave
push
and
mov
sbb
push
and
movs
mov
(bad)
or
(bad)
ror
xor
pop
xor
add
pushf
outs
(bad)
and
cmp
outs
sbb
(bad)
push
imul
xor
inc
xlat
imul
mov
call
push
pop
(bad)
push
sub
hlt
jp
scas
dec
sbb
sahf
call
mov
cs
push
push
xstore-rng
inc
push
mov
dec
and
mov
sub
out
cmp
mov
fdiv
adc
pop
ja
sbb
loopne
arpl
add
gs
xor
pusha
push
cmps
fsubr
sub
add
or
sbb
jl
xchg
or
mov
mov
sbb
jmp
bound
mov
js
shr
sub
inc
sti
clc
iret
retf
mov
movs
or
and
ror
repnz
or
data16
sub
popa
jmp
scas
sbb
push
add
mov
pop
fcomi
cmp
dec
test
dec
out
mov
jl
push
sub
jmp
out
clc
in
aaa
pop
mov
xchg
daa
loop
adc
xor
xor
push
and
das
add
push
pop
sahf
adc
jae
xchg
mov
xchg
sbb
add
retf
push
sbb
push
fstp
loope
jmp
loop
cmps
jg
jmp
addr16
mov
jbe
add
icebp
or
jno
jne
and
add
jmp
cmp
repz
mov
cmps
scas
dec
jmp
in
rol
xchg
adc
mov
test
push
fst
(bad)
mov
(bad)
cmp
cs
bound
push
xor
or
cmp
sti
ss
lahf
push
lock
fdivr
lods
ror
retf
iret
jecxz
movs
ficomp
jno
daa
cmps
xchg
ja
and
in
loope
cmc
xlat
inc
xchg
mov
push
loope
pop
in
cmc
sub
mov
mov
and
adc
lods
loope
cwde
mov
jg
dec
das
clc
repz
popa
jnp
adc
add
mov
rcl
rcl
lahf
ficom
inc
in
add
cmp
xchg
imul
aas
xor
add
sbb
lods
inc
in
and
addr16
jne
jno
adc
push
and
sbb
push
and
hlt
sbb
sub
dec
sub
outs
hlt
push
ret
test
mov
(bad)
cmp
xchg
dec
mov
sub
in
bound
pop
cmp
or
pop
inc
popa
loopne
inc
mov
add
xlat
(bad)
cmp
das
sub
pop
xor
les
mov
inc
in
mov
mov
bound
inc
shl
sti
jns
test
mov
lahf
mov
cmps
out
push
and
aam
pop
(bad)
cmp
outs
pop
push
xor
cmp
je
js
sub
pop
movs
out
in
pop
(bad)
mov
rcl
xor
mov
aad
sar
pop
adc
push
xchg
lods
int3
retf
aad
mov
push
xor
jne
push
jg
xor
nop
sbb
in
icebp
cmps
(bad)
sub
push
loope
push
and
mov
or
js
pop
or
xor
push
jo
xchg
inc
gs
sub
in
xor
dec
jbe
or
cs
mov
test
stos
jmp
test
test
aad
js
inc
adc
jle
cdq
retf
mov
fstp
jbe
icebp
add
sub
sbb
mov
cs
mov
and
inc
addr16
ds
mov
mov
push
int
push
or
ror
test
add
jb
cli
sub
iret
pop
xchg
sbb
pop
lods
xor
jne
and
sub
and
not
mov
push
mov
push
add
not
bnd
arpl
stc
imul
cmp
shr
jg
ins
xchg
lock
icebp
or
cmp
pop
inc
mov
xor
fbld
leave
outs
imul
div
push
pop
fisttp
push
je
and
jmp
push
loopne
int
cld
cmp
pop
fldenv
(bad)
mov
xor
mov
imul
xchg
jmp
in
int
loopne
sbb
std
neg
sbb
fidivr
ds
mov
cmp
(bad)
ss
xchg
or
fwait
std
add
or
dec
out
mov
dec
clc
mov
test
adc
aaa
test
(bad)
mov
in
jae
cs
(bad)
(bad)
aaa
addr16
xor
pop
xor
mov
jecxz
repz
fcomp
cmp
jns
sbb
or
pop
(bad)
mov
push
sahf
ins
pushf
cmp
mov
rol
jmp
sub
xor
ins
jge
stos
sbb
imul
clc
xor
dec
pop
jnp
push
add
daa
(bad)
scas
movs
jno
data16
or
sti
addr16
aaa
mov
mov
loop
aas
push
iret
addr16
std
xor
lds
ret
pop
dec
daa
mov
fsub
je
jge
xchg
xchg
rcr
xchg
xchg
aaa
in
push
outs
stos
inc
push
xor
xchg
ja
retf
mov
sete
(bad)
xor
push
adc
fist
aam
mov
xchg
mov
pop
jmp
ins
push
lods
out
popf
sub
jne
ss
inc
popa
dec
xchg
mov
fmul
les
dec
mov
adc
out
stos
add
add
(bad)
das
xchg
(bad)
fisub
int3
movs
add
imul
xor
mov
xor
call
inc
cmp
and
pop
mov
call
and
(bad)
jo
int
hlt
push
jle
mov
ja
lock
jmp
push
mov
cmp
cs
and
jp
sar
xor
pusha
mov
retf
dec
nop
pop
jne
loope
cs
jp
iret
adc
adc
iret
fld
loopne
jg
cs
mov
jg
dec
cmps
lods
out
inc
pop
movs
adc
pop
retf
es
imul
into
sbb
inc
mov
push
in
sahf
cmc
dec
sbb
xlat
pop
out
test
mov
retf
popa
adc
outs
sahf
sar
and
lea
aaa
add
xor
inc
(bad)
daa
inc
dec
call
adc
outs
neg
jmp
popf
add
js
adc
xlat
jb
mov
inc
inc
pop
out
mov
adc
div
mov
int
add
pusha
test
push
jae
enter
xchg
cmp
and
(bad)
imul
mov
add
lahf
ror
das
mov
xchg
pop
push
pushf
out
fwait
inc
ret
in
fst
sub
(bad)
pop
jg
jnp
sahf
gs
fstp
and
adc
dec
xchg
mov
je
push
test
unpckhps
xor
scas
fmul
out
adc
mov
fisttp
int
sub
test
sbb
push
add
dec
pushf
inc
daa
xlat
ret
sbb
nop
rol
xchg
addr16
add
stc
fcmove
fdiv
and
pop
inc
pop
jecxz
mov
mov
leave
xchg
stos
enter
cli
fild
sbb
sbb
lods
mov
jle
adc
pop
xor
aas
loopne
fucom
dec
add
jge
fld
push
js
mov
sub
pop
or
mov
cmp
out
stc
xor
bound
in
jno
jne
aad
jle
mov
inc
bound
cmp
mov
cmp
outs
imul
sbb
outs
push
mov
push
ins
test
jg
cwde
jle
das
dec
dec
mov
mov
mov
xlat
push
add
pop
dec
jecxz
icebp
mov
and
(bad)
or
xor
mov
fimul
sbb
ins
fidiv
test
ret
add
lods
push
xchg
cmps
sti
(bad)
jns
jae
sti
add
xchg
shl
fsub
sbb
and
sbb
rol
ins
jns
mov
mov
mov
scas
int
movs
mov
dec
mov
lahf
not
push
cmp
cmps
repz
repz
ins
ret
(bad)
xor
pop
xor
inc
dec
sbb
ds
ins
push
das
daa
mov
iret
xor
arpl
movs
mov
dec
adc
mov
xor
mov
cmp
mov
jle
or
xor
outs
pop
scas
or
jge
xchg
jge
stos
or
mov
sub
cmps
pop
fucomip
mov
(bad)
(bad)
and
mov
jp
mov
aas
inc
aas
mov
jno
aas
and
xchg
sub
femms
sbb
pusha
jmp
adc
inc
add
in
aad
fs
pop
pusha
sar
(bad)
fild
sahf
test
(bad)
stos
jecxz
or
push
mov
imul
hlt
fs
adc
ja
push
aas
and
push
adc
push
xchg
sub
retf
jl
mov
push
aam
jb
push
inc
loope
test
loopne
outs
inc
inc
push
ret
inc
cmp
out
xchg
daa
aas
popa
mov
in
mov
jl
adc
dec
jg
retf
pop
ds
adc
test
mov
test
push
enter
mov
add
scas
sbb
(bad)
jge
dec
sub
popa
test
js
inc
jb
aaa
inc
loop
loopne
push
fwait
out
pop
pop
cmp
add
adc
int
jmp
movups
or
test
int
xor
(bad)
adc
fs
jbe
pop
pop
mov
mov
lea
push
jmp
lea
adc
in
cld
arpl
aas
ins
cwde
xor
push
jl
out
adc
push
jle
mov
ffree
adc
mov
mov
jmp
mov
es
imul
addr16
sbb
mov
call
dec
lods
sar
dec
or
ds
xor
lock
or
cmps
inc
or
mov
xor
and
jl
das
xor
lea
xchg
xchg
call
aad
mov
inc
ss
imul
jle
sbb
jmp
fwait
mov
cli
adc
stos
or
jmp
ss
or
mov
mov
mov
call
sbb
test
sbb
icebp
aam
jecxz
xor
ins
shl
xor
(bad)
xchg
xchg
ins
pop
cmc
inc
push
cdq
jg
sbb
imul
pop
sub
sub
test
leave
xlat
pusha
sub
jbe
cmp
out
push
loope
out
dec
or
or
aas
arpl
outs
jns
sub
push
ja
dec
push
or
in
fistp
ror
xchg
dec
and
mov
fwait
dec
jne
xor
mov
sub
wbinvd
xor
inc
mov
jmp
jns
(bad)
call
cmp
or
popf
in
pushf
cmp
pusha
mov
arpl
retf
mov
push
repnz
sar
loopne
adc
dec
dec
imul
xor
xor
xchg
popf
in
mov
mov
(bad)
mov
and
xchg
cmp
clc
cmps
adc
xlat
adc
mov
or
xchg
test
xor
fldenv
mov
sbb
and
xor
and
loopne
xchg
(bad)
stc
imul
popa
and
xor
and
(bad)
out
sbb
repnz
or
cmp
ret
pop
movs
cs
sar
adc
jbe
repz
clc
pushf
adc
xor
mov
sti
sbb
jbe
in
inc
push
out
lea
cmp
push
dec
lds
in
dec
cmp
les
jmp
lods
popa
imul
sub
jge
mov
shl
lds
inc
enter
push
pop
out
(bad)
jl
adc
cmovge
xor
jmp
imul
arpl
sbb
ds
sub
sub
mov
sub
adc
(bad)
mov
iret
lock
arpl
jg
push
xchg
sub
xor
ds
pop
in
and
fldl2t
call
xchg
jmp
pop
outs
jmp
push
aaa
lahf
jnp
mov
imul
fcmovu
mov
jnp
adc
jnp
retf
in
pop
or
push
mov
ret
add
icebp
call
cmps
mov
ja
pop
nop
(bad)
je
jbe
cmc
sub
scas
stos
push
sub
dec
scas
push
test
fsub
in
cwde
jp
jecxz
mov
dec
push
ficomp
cld
add
jno
sbb
cli
ret
in
icebp
and
loopne
or
mov
sbb
jbe
mov
lods
in
test
and
jns
lds
ret
mov
loopne
inc
mov
rcr
mov
dec
cmp
jl
xchg
in
jmp
mov
test
and
mov
stos
daa
jns
adc
push
jae
mov
mov
push
push
mov
add
lahf
sahf
repz
xor
and
imul
call
ins
dec
xchg
mov
cmc
mov
adc
mov
xchg
mov
sbb
add
xor
out
enter
xor
dec
fbstp
pop
out
in
test
jl
mov
std
sti
jae
jbe
cmps
cmp
xor
arpl
mov
mov
loope
nop
push
add
pop
add
pop
cmp
jmp
popf
test
call
fscale
jae
jae
xor
xor
xor
aam
jp
call
mov
push
inc
cmp
fcmovu
or
adc
mov
mov
fiadd
aas
icebp
jmp
mov
sbb
sub
add
out
mov
lods
and
ja
add
daa
mov
cmp
push
ret
jno
rcl
push
mov
push
jl
mov
mov
(bad)
push
jns
mov
cmp
or
arpl
push
add
stos
jl
lods
and
pop
sub
adc
(bad)
sti
pop
push
in
fmulp
(bad)
leave
mov
shl
mov
pop
mov
daa
xchg
imul
and
mov
push
jmp
test
xor
cmps
sahf
adc
xchg
cmps
and
xor
test
nop
add
xchg
jg
mov
pop
sbb
xchg
or
and
cmp
leave
test
div
sub
xchg
mov
popa
fwait
stos
dec
mov
pop
das
fild
add
fs
pop
ret
pop
add
inc
add
sar
cmp
data16
or
inc
rcr
sbb
ret
mov
aaa
sub
adc
out
je
and
jmp
inc
jmp
sbb
push
and
inc
sub
mov
or
aam
inc
or
inc
xchg
xor
jno
rcr
xor
adc
lahf
ja
jbe
push
imul
dec
pop
xor
pop
jb
sub
mov
xchg
dec
mov
dec
sbb
lock
pusha
or
loope
pushf
pop
pop
mov
movs
xor
jl
cld
int3
or
cmp
out
and
into
lods
mov
fwait
pop
xor
mov
data16
in
mov
loop
cmp
enter
mov
push
and
fdiv
xchg
sbb
inc
add
adc
ss
mov
sub
jmp
adc
mov
cmp
add
push
movs
imul
and
arpl
and
jns
dec
ret
inc
mov
fidivr
lock
dec
std
repz
xlat
adc
cld
add
js
(bad)
fist
jne
fwait
push
movs
ins
lahf
test
mov
lods
push
xchg
adc
cmps
pop
cmp
mov
jge
fadd
xlat
repz
mov
out
jge
push
sbb
or
test
fild
xchg
popa
(bad)
stos
cmp
push
push
adc
dec
in
fs
dec
ret
cs
add
mov
push
mov
out
call
mov
mov
sub
stc
in
adc
cmp
jmp
add
aaa
call
or
xchg
adc
xor
or
(bad)
sbb
pop
mov
pop
pushf
shl
sub
int
sub
nop
inc
push
lea
hlt
pop
repz
mov
int3
adc
cmps
jmp
jo
clc
adc
pop
call
mov
xchg
add
and
lods
push
xor
out
shl
pop
repz
mov
mov
mov
dec
lahf
lods
iret
mov
imul
push
cli
jmp
loopne
mov
cmps
nop
das
or
cmp
mov
loopne
dec
sub
stos
call
jae
sub
dec
icebp
imul
movs
jns
shl
out
les
push
mov
or
mov
mov
fsincos
and
mov
sar
add
push
pushf
les
xchg
and
fidivr
adc
aam
push
lea
jne
xor
adc
cmp
and
leave
push
cmc
dec
call
ja
mov
or
pop
in
mov
xchg
out
stc
pushf
mov
push
int
cld
jle
sub
ret
ffree
xor
pop
iret
imul
shl
pop
mov
setnp
jmp
mov
and
add
cmp
aaa
push
inc
std
loopne
xchg
and
xor
jmp
leave
fiadd
inc
neg
std
lea
pop
push
test
lea
clc
inc
popa
xlat
sub
mov
inc
repnz
rol
cli
clc
loopne
pop
cmp
loope
inc
sub
mul
js
sbb
xchg
mov
cmp
ins
icebp
repz
mov
mov
data16
add
loope
(bad)
in
jo
(bad)
jle
xchg
fwait
pop
jge
fiadd
push
cld
mov
mov
and
iret
out
xor
push
ficom
lds
pop
das
cmp
or
and
dec
sbb
iret
sub
push
push
and
daa
push
xchg
int
sbb
cmp
mov
jge
ja
in
cmc
out
lea
clc
ret
test
inc
or
les
lods
lods
cli
mov
in
popa
(bad)
retf
imul
cdq
call
adc
jge
push
sbb
cmp
xchg
hlt
movs
inc
push
push
sub
call
stos
jecxz
xchg
xor
and
add
mov
push
lds
stc
push
push
in
call
or
call
stos
jno
push
push
imul
adc
cmp
cmp
cmp
mov
jbe
jmp
lods
mov
dec
fisub
xchg
pop
lods
mov
xchg
fnsave
ror
pop
mov
cmp
mov
cdq
mov
mov
outs
and
xchg
cdq
nop
xchg
(bad)
jecxz
add
and
jmp
jl
lods
inc
inc
jp
nop
(bad)
ror
ror
push
pop
adc
adc
int3
jle
add
mov
jbe
rcr
mov
dec
cmp
loop
mov
push
inc
mov
scas
pop
xor
inc
retf
dec
pop
lods
pusha
leave
xlat
pop
add
lock
fisttp
mov
push
lods
cli
mov
rcl
jae
add
mov
ins
enter
cmp
cmp
push
xor
fld
push
jle
repnz
cwde
sbb
inc
lds
xor
push
lea
dec
addr16
cmps
shrd
adc
mov
mov
int3
stos
lods
out
mov
sub
or
inc
cdq
cld
scas
mov
inc
mov
les
xor
sub
or
lss
push
jnp
add
lds
dec
out
push
push
lock
push
dec
loop
and
jecxz
inc
sbb
mov
dec
enter
gs
mov
or
xchg
test
outs
lods
rcr
stos
mov
jge
lds
mov
aaa
xchg
stos
mov
je
sub
pop
and
sti
mov
fidiv
mov
xlat
xchg
and
inc
retf
adc
jp
push
ret
mov
push
out
dec
sub
push
pop
or
xchg
sbb
mov
jmp
cmc
inc
push
ss
cli
inc
div
aas
fcomp
mov
add
mov
xchg
movs
sub
shr
and
sar
ret
xor
cmp
and
outs
pushf
(bad)
aam
in
fwait
lock
mov
push
or
out
je
push
sub
(bad)
push
pushf
hlt
aam
cmp
lock
jns
push
popa
dec
push
xchg
add
mov
into
adc
sub
mov
xchg
xchg
mov
out
pop
xchg
jns
or
push
ja
pushf
shl
mov
stos
loope
cmc
xlat
xor
into
mov
sbb
clc
dec
pushf
push
enter
into
(bad)
mov
jecxz
ins
fwait
adc
or
lods
cmps
jecxz
sahf
dec
addr16
push
cmps
pop
add
ret
jg
push
repnz
js
push
pop
shr
jns
or
retf
dec
pop
pop
stc
xor
or
retf
cld
mov
int3
scas
lock
hlt
xchg
dec
sub
ja
(bad)
out
test
ret
push
mov
jns
ja
mov
fistp
inc
lds
adc
mov
xor
mov
cmp
in
xor
mov
xor
inc
(bad)
push
fcomp
cmp
cmp
xchg
(bad)
lods
mov
or
jge
scas
(bad)
jmp
dec
xchg
mov
test
call
dec
or
jno
and
retw
pop
inc
mov
cwde
int
xor
cmc
pop
sub
call
dec
test
leave
cmp
ds
cs
je
pop
mov
jae
sbb
add
pop
jecxz
xchg
push
mov
inc
pushf
rol
bound
push
(bad)
ficomp
aad
inc
cli
inc
pop
retf
xchg
push
das
push
jno
xlat
in
xchg
fsubr
lods
inc
xchg
(bad)
xchg
out
outs
push
repz
jne
(bad)
jge
fistp
shl
aad
mov
sbb
jl
addr16
pop
icebp
cmp
or
inc
sub
or
les
fidivr
pop
xchg
and
(bad)
jmp
jp
inc
ror
and
dec
gs
les
cld
(bad)
cmp
pusha
push
or
mov
mov
repnz
pop
and
lds
das
out
cmp
scas
inc
in
fdivr
add
aam
dec
iret
es
jo
div
add
xor
mov
add
movs
(bad)
mov
sti
retf
sub
clc
add
iret
cmps
or
sub
cdq
dec
dec
push
data16
add
shl
sub
out
shr
rcr
cli
mov
mov
sbb
xchg
test
shl
sub
mov
retf
sbb
rol
push
mov
arpl
mov
jb
gs
lahf
jae
dec
jno
or
jecxz
add
arpl
mov
inc
scas
das
xchg
dec
push
jae
lods
jecxz
dec
cli
iret
call
ins
popa
aad
push
imul
pop
adc
pop
jge
push
ds
and
fadd
shl
pop
xchg
dec
sbb
in
mov
adc
sbb
into
xchg
das
sbb
mov
mov
pop
jecxz
push
dec
outs
mov
retf
mov
stos
shl
lahf
test
mov
jge
loope
sbb
inc
rcr
xchg
adc
movs
daa
sahf
repnz
test
fild
pushf
or
(bad)
ja
jecxz
jae
xchg
repnz
ins
icebp
cmp
inc
lods
sbb
dec
imul
xchg
sbb
mov
in
push
cmp
enter
scas
mov
xlat
stos
inc
push
sub
cmc
and
or
movs
sub
and
test
xlat
mov
popf
jle
fdivr
mov
scas
mov
mov
mov
movs
(bad)
call
and
test
fsub
pop
or
mov
xchg
(bad)
hlt
fs
ss
imul
mov
adc
xchg
mov
(bad)
push
fcomp
stos
pop
pusha
test
push
ins
mov
into
xchg
mov
stc
xor
ds
and
push
stos
enter
mov
jg
jp
mov
pop
clc
cmc
add
dec
out
mov
xchg
sahf
pop
push
lock
cdq
sbb
dec
std
dec
call
sub
iret
sub
test
inc
daa
imul
add
and
gs
outs
dec
enter
pop
je
xchg
and
jb
and
adc
imul
jnp
push
adc
ret
pop
std
pusha
mov
xchg
jmp
call
xchg
repnz
dec
gs
cdq
xchg
and
mov
(bad)
(bad)
jb
js
or
aas
ja
cmc
sub
pop
cmp
push
jne
pminsw
push
movups
mov
rcr
push
mov
ss
enter
test
retf
xchg
push
loope
sub
cmp
and
jo
cmps
xchg
push
dec
sub
popa
mov
jae
jo
sbb
sbb
cld
mov
ins
and
pop
pop
jb
aad
jle
ds
out
jae
dec
cmps
ret
gs
inc
mov
neg
cmp
mov
aad
cmps
xlat
sub
lahf
sub
test
imul
out
in
push
sbb
or
mov
mov
jmp
jb
test
mov
(bad)
pop
int3
rcr
ficomp
fild
les
xchg
mov
xor
nop
mov
jg
retf
or
jge
sbb
je
ficomp
mov
cs
jb
lods
inc
mov
push
pop
nop
pop
and
shl
sub
clc
inc
call
jns
das
loopne
cmp
sub
pushf
loope
xchg
inc
push
pop
cmp
mov
aaa
leave
movs
aaa
push
jno
sub
es
aam
das
test
je
mov
je
pop
jb
sbb
jmp
add
arpl
and
cdq
aaa
bound
pop
mov
cli
in
xchg
loope
xchg
cdq
sub
adc
test
dec
push
(bad)
outs
(bad)
jg
cmp
sbb
or
iret
push
sub
xchg
jnp
add
retf
cmps
imul
lea
inc
adc
loopne
lods
aas
push
(bad)
pop
pop
out
cmp
add
mov
adc
push
loop
ficomp
dec
jns
ds
mov
jge
xchg
add
outs
out
out
sub
aaa
xchg
arpl
xor
pop
aas
stc
lods
in
sbb
fist
push
xchg
test
and
cli
and
fxch
ret
test
fcmovnu
repz
and
mov
out
stc
test
out
into
dec
imul
jg
stos
fmul
repz
fsub
sub
pop
loop
fbstp
stos
scas
mov
mov
jne
adc
ds
std
in
in
into
les
enter
xlat
xor
mov
or
pop
mov
push
arpl
add
dec
in
sbb
inc
pop
popa
pop
daa
xchg
gs
dec
stc
call
or
xchg
btr
dec
jmp
lahf
loop
adc
lea
dec
icebp
adc
mov
push
xchg
xchg
outs
retf
mov
mov
mov
retf
sub
xor
sbb
scas
in
add
cld
inc
adc
push
and
push
repz
push
sub
(bad)
je
rcl
and
test
pop
rol
pop
test
popf
add
stc
and
mov
ds
clc
push
out
sub
bound
inc
pop
mov
sbb
jb
retf
or
fst
aas
add
mov
cs
push
imul
ss
lea
mov
push
sahf
inc
pop
aaa
movs
sub
jle
inc
add
cld
mov
dec
sub
mov
mov
mov
cmps
in
sahf
jne
js
es
dec
or
leave
mov
lahf
rcl
mov
scas
fisttp
pop
and
adc
push
sub
add
sub
movs
scas
cmp
push
hlt
xor
out
(bad)
call
stc
xlat
mov
stos
jo
pop
fdecstp
jg
into
sub
cld
adc
mov
hlt
sbb
outs
push
bound
jmp
nop
sbb
cmps
xchg
xchg
jmp
add
xchg
pop
jbe
adc
push
jmp
sti
hlt
ins
or
add
adc
adc
(bad)
push
jecxz
sahf
xlat
jnp
cmp
cwde
imul
fimul
mov
ss
xchg
cld
ret
or
js
fwait
pop
pop
jnp
xchg
ss
outs
mov
cmps
test
ins
stos
ret
mov
mov
cdq
mov
dec
mov
sti
into
(bad)
mov
dec
adc
shr
rcr
lea
sub
add
mov
cmp
out
jecxz
mov
sar
or
add
push
dec
or
sub
sbb
pop
xchg
setb
mov
mov
fsub
and
scas
ja
js
lods
push
sbb
jb
loop
or
test
dec
pop
neg
ins
loopne
mov
inc
test
cmps
in
jecxz
movs
inc
lock
mov
pop
cli
iret
mov
fsincos
mov
push
jle
pop
add
mov
and
lea
dec
dec
mov
addr16
mov
cld
loopne
add
add
inc
dec
fimul
inc
mov
test
lods
hlt
mov
into
iret
jb
dec
push
xlat
xchg
popa
not
inc
jg
mov
jge
jle
popa
imul
imul
dec
call
leave
outs
xchg
push
pop
jb
jb
pushf
add
cmp
ret
fwait
ret
fimul
xor
fs
rcr
shr
iret
sbb
sub
imul
shl
pop
stc
inc
mov
xor
lods
sbb
imul
fdiv
xor
pop
cmp
je
push
sar
mov
push
mov
and
ss
fsub
shl
add
das
repnz
xor
mov
ror
jecxz
icebp
sbb
lds
js
stos
imul
mov
pop
js
xor
ror
sahf
sbb
call
pop
test
jb
jno
cwde
mov
xchg
and
push
jmp
outs
imul
into
pusha
mov
or
push
shr
rol
hlt
adc
ds
dec
imul
cmp
add
retf
mov
xlat
mov
mov
std
push
mov
test
clc
mov
es
inc
mov
jns
in
adc
cmps
(bad)
mov
jmp
jmp
stc
out
push
fidivr
adc
mov
enter
out
ret
add
repnz
in
add
fadd
mov
jl
push
ret
and
scas
cwde
xchg
add
test
clc
dec
das
adc
lds
lods
mov
inc
push
shl
adc
iret
push
js
mov
adc
mov
out
pop
xchg
xchg
and
inc
lds
shl
jle
push
sub
sbb
cli
pop
pop
ss
or
pop
sahf
push
dec
call
sbb
(bad)
fistp
sub
mov
or
ins
pop
pop
(bad)
sub
mov
or
sbb
xchg
outs
jle
cli
jbe
shr
pusha
stc
push
inc
repnz
adc
addr16
mov
cmp
out
cs
(bad)
jae
ins
ss
clc
and
or
imul
add
(bad)
gs
adc
out
sbb
rcr
call
mov
mov
nop
mov
ds
jno
fisub
inc
xor
dec
push
call
ja
rol
inc
xchg
jmp
adc
je
cdq
mov
fild
dec
test
sahf
test
jle
fs
sbb
sub
xor
arpl
loopne
int3
nop
pop
mov
in
mov
call
pushf
push
mov
jns
xchg
jbe
ret
repz
inc
ret
push
sti
mov
xor
lahf
retf
and
push
lods
cld
or
jle
lods
aas
addr16
test
ins
ret
fs
std
sbb
(bad)
cld
in
cmp
popf
xlat
add
(bad)
xor
lock
sub
sahf
jmp
rcr
sbb
add
cli
out
and
xchg
out
pop
and
push
xchg
or
or
xchg
mov
pop
(bad)
repz
or
stos
sbb
push
mov
mov
mov
jmp
mov
scas
xchg
imul
scas
xchg
les
mov
dec
mov
fisub
jg
mov
ror
pop
jnp
sbb
lods
test
call
cli
movs
sbb
ins
pop
js
sbb
adc
repnz
ds
sti
in
mov
test
push
es
fadd
clc
idiv
stc
aam
and
sbb
ror
sysret
sti
dec
ds
(bad)
std
xchg
out
loop
popf
add
sub
popf
dec
ja
inc
xchg
je
push
pop
cwde
fst
mov
or
loopne
loop
push
(bad)
out
cwde
cmp
adc
or
into
int3
movs
xchg
out
les
daa
pop
xchg
test
add
lods
push
leave
pop
icebp
(bad)
sbb
xchg
and
data16
aam
jle
xor
xor
cli
cmp
pop
xchg
xchg
loopne
adc
bound
(bad)
fcomp
jo
int3
call
mov
call
push
inc
pop
out
jbe
dec
(bad)
cmps
add
xor
mov
jb
jb
imul
cmps
in
es
pop
sub
loopne
retf
add
ror
sbb
mov
jnp
ja
jecxz
pop
mov
lds
mov
pop
xor
xor
out
(bad)
push
xchg
mov
(bad)
jno
xchg
dec
mov
xchg
bound
cmp
mov
mov
scas
push
jg
and
mov
mov
out
mov
push
mov
mov
sbb
xchg
fsubr
adc
mov
test
mov
push
in
movs
add
(bad)
jecxz
cmps
jb
xor
aas
das
sub
mov
ffreep
cmp
push
xlat
push
mov
dec
mov
mov
mov
mov
dec
add
mov
adc
dec
out
xchg
ss
sub
fs
ret
sar
xor
lahf
mov
repz
inc
inc
jno
iret
test
xchg
pop
adc
cmc
adc
dec
inc
loope
rcl
sub
xchg
jnp
ins
mov
mov
in
stc
cmp
in
cmc
jge
dec
push
jecxz
std
sbb
jb
xchg
pusha
xchg
or
stc
cmps
dec
(bad)
dec
pop
(bad)
cwde
ds
(bad)
xor
pop
xor
dec
retf
shl
mov
and
mov
int3
daa
ds
xchg
add
inc
mov
mov
or
scas
cmp
mov
push
pop
call
nop
xchg
mov
out
fsub
or
(bad)
jns
clc
loop
outs
scas
push
andnps
lods
dec
js
icebp
(bad)
dec
js
pop
lods
xor
call
sub
push
mov
mov
inc
pop
(bad)
dec
adc
add
mov
mov
sbb
xlat
mov
scas
in
push
pop
pushf
ins
xchg
loope
scas
pusha
imul
shr
adc
ja
(bad)
mov
std
fldcw
jmp
push
sar
push
jbe
pop
pusha
sbb
test
sbb
call
les
stos
(bad)
bound
lahf
pop
dec
mov
pop
sub
nop
loopne
shr
sbb
mov
shl
sbb
loope
stos
push
jne
retf
repnz
sub
int3
mov
lods
cmp
inc
or
sbb
shr
xchg
(bad)
iret
mov
sahf
and
(bad)
lds
int3
fwait
outs
xor
js
cmp
ss
add
sbb
push
jp
imul
mov
aas
add
push
xchg
ror
movs
shl
loopne
out
fcom
sub
xor
jmp
iret
call
ins
out
lahf
sbb
(bad)
enter
out
push
fsubr
sub
out
mov
out
ja
scas
mov
fldenv
nop
jo
pop
pop
ss
pop
add
mov
fimul
daa
mov
rcr
xchg
or
call
int
cwde
movs
jg
lods
push
sub
mov
sub
push
in
rol
lods
fwait
mov
movs
cmps
jecxz
shr
mov
inc
add
mov
(bad)
das
mul
xchg
jo
nop
movs
jb
repnz
in
rcl
jo
jle
mov
mov
cmp
push
jle
inc
add
push
mov
repz
inc
add
je
and
and
in
xchg
jbe
mov
dec
sbb
aam
xor
aam
sahf
lahf
adc
adc
std
jo
jg
aam
xor
stos
push
jbe
es
xchg
xor
sbb
fist
cmc
loope
sub
push
lods
add
lods
xor
loop
inc
xor
in
adc
sub
ror
add
jo
add
sub
mov
cmps
xor
out
cmc
mov
cdq
in
fdivr
jmp
inc
dec
or
mov
xchg
call
popa
ja
repz
cmps
ret
enter
(bad)
out
push
cmc
call
lods
ins
xor
or
or
inc
inc
dec
adc
dec
inc
fwait
xor
out
mov
cmps
push
inc
imul
xchg
call
pop
add
xchg
gs
pop
cmps
out
retf
ror
ficomp
xchg
inc
and
sub
xchg
hlt
arpl
dec
out
(bad)
iret
in
pop
push
ror
cs
xor
movs
clc
pop
lahf
xchg
xlat
ror
in
stos
mov
mov
pop
int
fs
ins
cli
movs
in
sub
pop
and
pop
push
mov
mov
xor
mov
jmp
popa
pop
cmps
mov
into
(bad)
pop
cs
push
push
hlt
es
adc
cdq
xor
cmp
xchg
adc
jmp
adc
call
fild
xlat
jmp
repz
loopne
mov
sub
mov
mov
jmp
call
cmp
stos
fwait
mov
mov
out
rol
or
pop
shl
dec
mov
jbe
lahf
push
and
imul
xor
loop
and
fistp
test
(bad)
jmp
and
xchg
and
sbb
push
adc
fisttp
test
or
xor
adc
mov
aad
sub
pop
jle
pusha
in
ins
test
xchg
into
fcomip
sti
aam
mov
lahf
sbb
(bad)
sbb
cwde
cmp
or
nop
test
dec
mov
(bad)
push
call
test
clc
adc
xor
sbb
sar
xchg
in
das
jge
mov
dec
sbb
into
mov
mov
cmps
fsubr
jge
mov
pop
pop
lock
fwait
inc
into
sub
movs
repnz
popa
jmp
pop
fwait
data16
cmc
cmp
dec
popa
dec
xor
jo
inc
fnstcw
in
jae
call
cmp
imul
sbb
aad
push
xor
sub
shr
in
dec
and
mov
test
cmps
jmp
gs
stos
clc
icebp
pop
js
mov
loopne
or
or
xor
sub
xchg
mov
dec
scas
cdq
movups
add
ins
ficom
pop
loopne
mov
xchg
(bad)
fsubr
push
sbb
inc
loopne
(bad)
adc
sbb
xchg
and
shl
jg
(bad)
adc
loopne
dec
push
add
sub
stos
fwait
mov
and
lods
mov
or
mov
call
int
pop
pusha
js
pop
xchg
cmp
dec
inc
sub
sub
addr16
cli
pop
inc
in
push
test
je
addr16
lds
mov
jne
sub
and
(bad)
and
int3
push
jle
jmp
xor
sbb
pop
mov
gs
inc
mov
out
fs
mov
(bad)
xor
inc
sbb
add
(bad)
jmp
push
arpl
jmp
push
fimul
rcr
push
fs
repnz
ins
pop
(bad)
(bad)
rcl
enter
cmps
retf
jno
jns
jl
jg
pop
icebp
out
mov
mov
(bad)
xlat
and
int
jns
xchg
push
ror
addr16
dec
in
cmps
or
pop
dec
jno
xchg
rcl
mov
jp
sub
adc
jae
rol
xchg
lds
icebp
mov
push
test
enter
pop
daa
or
les
inc
cmp
xchg
fwait
jno
leave
out
loopne
aas
and
rcr
lss
jnp
xor
jmp
cmps
mov
ja
jecxz
out
das
or
ror
mov
mov
out
loope
jl
loopne
mov
movs
je
sti
pusha
adc
mov
inc
jg
cmp
mov
pop
push
xchg
in
in
rcr
pop
aas
fisttp
pop
pusha
cs
sub
cmp
pop
rol
aad
imul
nop
push
out
stos
pop
xchg
fwait
test
ss
ins
out
sbb
fiadd
sbb
addr16
cmp
sbb
xchg
cmp
out
es
mov
xlat
sub
xchg
cs
add
in
loopne
cdq
jne
fisttp
mov
and
add
ins
out
icebp
aas
jmp
xor
add
int3
push
dec
pop
(bad)
fwait
lods
test
mov
fisub
sti
jp
jge
push
jne
retf
and
pop
inc
mov
jl
nop
push
xor
sbb
call
fnstenv
mov
or
jne
mov
movs
xor
mov
or
cdq
cmp
mov
jb
xchg
pop
test
out
jbe
out
or
dec
mov
and
fwait
sbb
xchg
jmp
jb
xchg
stc
xchg
jg
push
sub
bound
test
fbstp
les
shl
cmc
jnp
xlat
jp
push
(bad)
cld
mov
mov
popf
jge
xchg
pop
jp
cmps
mov
sbb
mov
jp
adc
ror
pop
test
enter
push
retf
outs
sbb
cdq
rcr
mov
jb
cmp
inc
leave
dec
je
mov
mov
sahf
push
mov
xor
xchg
loope
and
pop
pop
into
rcl
push
icebp
lds
cmp
aad
inc
shl
cmp
jl
rol
xchg
push
pop
inc
idiv
mov
push
jb
mov
push
sbb
xor
cmpps
push
add
rcr
cmps
inc
add
sti
test
inc
sar
jo
mov
mov
shr
rcr
lods
sbb
adc
xchg
jns
mov
jmp
rcl
mov
test
movs
adc
inc
outs
jmp
xor
out
adc
push
(bad)
in
sbb
ret
push
outs
push
xor
mov
(bad)
shr
jns
stos
or
ret
mov
aaa
stc
xor
sbb
retf
mov
add
xor
mov
or
adc
push
pop
(bad)
sub
dec
loopne
pop
aaa
shl
test
cld
cmp
sti
or
(bad)
in
fadd
sahf
(bad)
bnd
pop
lods
hlt
(bad)
mov
lock
scas
ret
fld
mov
adc
cmps
pop
push
inc
push
(bad)
fadd
aas
xchg
test
inc
xchg
cmp
mov
enter
add
rcr
fisttp
xchg
aam
cwde
mov
or
test
jge
adc
popf
cmps
jp
mov
mov
inc
les
(bad)
leave
scas
movs
rcl
(bad)
adc
pop
jb
mov
lock
jno
sbb
pop
movs
push
push
push
out
mov
jmp
sbb
xor
inc
sub
sub
std
adc
sub
(bad)
pop
pop
cdq
ret
pop
repnz
cmp
adc
cmp
imul
(bad)
scas
hlt
inc
inc
inc
mov
and
mov
jne
pop
inc
and
pusha
in
xchg
(bad)
push
and
add
jb
scas
(bad)
daa
js
add
into
ss
int
mov
xor
pop
outs
aad
shr
scas
xchg
mov
xor
pop
loop
daa
movhps
sub
enter
stos
cmp
nop
out
xor
mov
out
push
cwde
sub
enter
pop
sar
mov
xlat
int
(bad)
push
rol
push
jne
lahf
fst
xchg
xchg
push
loope
mov
push
fcomp
xchg
sahf
retf
ficom
mov
dec
cmp
mov
pusha
xchg
jns
aas
outs
test
add
in
idiv
push
movs
int3
ror
lods
mov
lods
add
xor
jns
jecxz
(bad)
movs
sub
in
mov
mov
in
popa
loope
mov
xchg
mov
cmp
dec
pop
jge
cmp
rol
pop
fmul
test
xor
xchg
sbb
pop
dec
inc
push
pop
hlt
mov
sti
loop
iret
sbb
call
dec
(bad)
in
xchg
loope
dec
jns
xchg
test
ret
adc
mov
pop
ss
(bad)
mul
out
pop
pop
mov
push
add
push
jne
stos
mov
aam
int
pop
mov
cmp
push
inc
ret
mov
jg
lods
mov
xchg
(bad)
stos
sbb
sbb
xor
jg
sub
cs
sbb
xchg
sti
dec
cli
adc
std
jg
mov
xchg
cli
ins
or
jecxz
cld
xor
lahf
test
(bad)
fist
mov
pop
(bad)
mov
call
pushf
js
inc
or
mov
inc
aam
daa
aad
stos
jg
(bad)
ss
or
test
iret
pusha
jle
arpl
or
dec
retf
or
lahf
inc
test
aas
push
inc
in
pop
(bad)
in
daa
call
dec
scas
and
push
mov
xchg
mov
test
pop
jmp
xor
inc
in
dec
test
mov
jmp
mov
rcl
neg
(bad)
xchg
pop
scas
or
int
push
in
mov
adc
adc
sbb
into
jp
pop
sar
jmp
mov
(bad)
jg
scas
mov
lock
test
ss
push
adc
and
xor
cmp
jmp
mov
lds
and
imul
inc
mov
pminub
mov
fsub
(bad)
cld
adc
mov
das
outs
inc
movs
sbb
mov
sbb
pop
jb
in
or
shr
mov
popf
inc
mov
xchg
aas
pop
or
push
xchg
sbb
xchg
pop
mov
test
xchg
and
push
xlat
xchg
loopne
push
or
ret
pop
or
mov
mov
adc
les
mov
xchg
pop
loop
(bad)
scas
stos
ret
jnp
mov
daa
push
or
in
cli
test
jnp
pop
lds
jne
push
jo
vcvttsd2si
xchg
mov
jge
int3
fwait
pop
xchg
and
sub
jge
mov
(bad)
jo
cmp
movs
call
popf
mov
repnz
pusha
(bad)
ds
push
lds
pop
retf
xchg
into
scas
xor
loop
mov
cmp
mov
or
lock
idiv
xor
ror
(bad)
sub
mov
pop
pop
mov
lock
repz
pop
leave
xor
xor
js
es
or
dec
in
jno
inc
xchg
test
daa
dec
inc
test
jle
cld
std
adc
pop
fnsave
(bad)
int
ds
idiv
sahf
sbb
inc
out
cmps
ss
repnz
dec
fbstp
push
aaa
pop
xchg
jg
(bad)
arpl
test
pop
int
stos
pop
lock
imul
dec
cmp
dec
fistp
adc
in
jp
pinsrw
stc
ror
xor
and
cmps
loop
add
jnp
mov
push
mov
dec
shr
xchg
xchg
ins
jo
sbb
inc
mov
mov
sbb
out
fcomp
sbb
outs
cld
mov
aaa
bnd
cmp
or
movaps
pop
mov
scas
dec
sub
rcl
mov
or
pop
mov
push
jo
and
loope
sbb
das
jo
xchg
fwait
mov
jns
retf
xor
retf
data16
pusha
sub
fisttp
jg
cmp
cmp
dec
mov
add
jb
test
and
sub
(bad)
lods
lds
mov
mov
pop
push
test
or
and
jmp
call
jne
mov
repnz
pop
ret
fmul
and
jns
mov
push
movs
push
retf
aaa
fdivp
in
retf
mov
(bad)
lods
ins
inc
(bad)
xchg
xchg
or
iret
add
lds
shl
push
mov
lock
and
xor
mov
(bad)
mov
adc
popa
pusha
xor
sbb
cli
inc
xchg
and
dec
add
adc
cmp
call
rcl
popf
scas
push
in
jmp
xchg
pop
hlt
leave
retf
pop
pusha
cmp
or
out
inc
inc
mov
aam
dec
test
test
pop
dec
shl
adc
xchg
test
mov
mov
outs
xor
or
je
adc
mov
mov
scas
fcomp
mov
sub
sbb
cmp
mov
or
lea
imul
icebp
ss
test
inc
es
inc
mov
jg
or
shl
bound
scas
jno
xchg
lods
pop
inc
int
ja
push
mov
mov
movs
and
sbb
inc
dec
inc
sbb
or
in
inc
lds
xchg
jle
inc
or
jle
xchg
pop
or
cmp
pusha
(bad)
out
test
push
push
loope
scas
xchg
mov
bound
xor
fcom
adc
sub
push
or
mov
mov
jecxz
es
push
scas
(bad)
or
sti
cs
jo
xchg
out
push
mov
mov
cdq
iret
sbb
cmps
mov
xchg
or
(bad)
add
dec
dec
repz
xor
mov
jns
cmp
ja
mov
(bad)
jecxz
ja
les
jmp
xor
clc
out
cmp
fwait
sub
or
lods
jb
cmp
out
cs
cmps
lahf
inc
jno
xchg
xor
outs
aas
add
mov
jl
cmp
lahf
mov
sbb
and
cmps
test
lds
lock
or
xchg
fld
mov
ror
hlt
pop
xchg
push
add
rol
cmp
leave
jmp
loopne
or
sub
mov
dec
js
jmp
jae
movs
(bad)
mov
cmp
add
into
mov
shl
or
pop
push
jo
outs
push
dec
inc
rcl
mov
mov
mov
and
xchg
lods
push
xor
xchg
std
xchg
into
adc
push
sub
iret
mov
cmp
outs
or
fs
and
inc
in
in
shl
dec
ds
mov
dec
pusha
jmp
lods
pop
mov
jle
jmp
inc
xor
mov
adc
xorps
cmps
jb
stc
push
outs
xchg
mov
pop
shr
or
imul
adc
inc
jnp
dec
dec
sbb
push
aad
inc
push
fwait
cmp
stos
or
xor
dec
mov
mov
into
mov
xchg
mov
mov
xchg
and
cs
sbb
je
pop
xadd
sti
inc
sub
add
dec
fisubr
aas
pop
pop
push
mov
shl
xchg
inc
repz
cs
jl
(bad)
(bad)
gs
pop
pop
jecxz
sub
(bad)
rcl
pop
jp
and
adc
ret
dec
pop
stc
je
add
cmc
sbb
jmp
xchg
ins
jl
inc
ja
icebp
mov
scas
sar
pusha
in
and
pop
cmovo
xor
dec
mov
sar
dec
fwait
inc
jne
add
push
stos
and
pusha
pop
(bad)
pop
shl
fwait
push
ret
scas
in
jmp
inc
pop
hlt
hlt
int
outs
xor
and
pushf
cmp
mov
stos
pusha
inc
or
cmp
(bad)
push
ss
retf
sub
js
retf
inc
jo
sahf
mul
int3
jge
fcom
pop
inc
ret
mov
pop
stos
sub
(bad)
outs
jg
loope
outs
mov
stos
enter
test
mov
(bad)
pop
mov
in
add
fisttp
in
jle
sub
aad
lock
jmp
iret
adc
push
dec
stos
jmp
jns
neg
cmp
neg
xchg
and
call
cld
icebp
loope
rcr
dec
add
sahf
popa
jbe
jns
int3
daa
adc
inc
jae
fisubr
(bad)
loope
xlat
inc
push
(bad)
cmp
in
cli
aaa
pushf
mov
inc
retf
or
test
jp
das
xchg
push
out
jo
dec
jge
or
dec
sub
sbb
jg
adc
scas
dec
mov
ss
mov
sbb
imul
ret
add
neg
mov
mov
mov
movs
aaa
push
shl
(bad)
neg
jmp
cmc
adc
push
cmc
add
mov
and
pushf
movhlps
stos
xchg
push
and
push
mov
xchg
add
movs
or
(bad)
inc
iret
cmp
cmp
cwde
inc
mov
movs
and
sbb
or
mov
in
lds
jno
pushfw
cdq
jns
jmp
inc
cmp
stos
imul
mov
xor
cld
and
(bad)
fidiv
sbb
xor
mov
dec
mov
cmp
into
adc
or
rcl
mov
mov
les
mov
ins
retf
jae
fstp
cmps
xor
repnz
add
mul
pop
pop
mov
adc
fld
mov
loop
xchg
or
xchg
cmp
neg
loopne
call
imul
xor
das
sahf
rol
emms
jbe
and
push
sbb
fst
retf
push
add
mov
xchg
shl
push
dec
dec
dec
popf
cmp
imul
adc
adc
int3
jbe
loop
imul
push
ss
hlt
mov
(bad)
mov
iret
data16
jbe
add
popa
lock
push
sti
xchg
adc
aas
push
fstp
sbb
sahf
(bad)
jno
cli
sub
retf
mov
test
scas
(bad)
call
push
mov
jo
sti
add
pushf
inc
pop
outs
aam
pop
or
pusha
ror
fisttp
hlt
mov
or
or
sbb
int
ds
xchg
pop
sbb
add
fbstp
push
xor
jmp
call
inc
dec
ja
cmps
pushf
lods
jmp
add
add
xchg
push
(bad)
mov
repz
int3
cmps
mov
(bad)
data16
sub
lea
or
adc
retf
add
adc
xchg
jb
fs
lods
push
clc
fmulp
ja
sbb
dec
and
imul
pop
stc
cmc
cmps
mov
hlt
pop
xchg
shl
pop
jmp
xor
mov
push
mov
stc
mov
cmp
jnp
nop
cmp
jnp
fist
lock
mov
or
bound
pop
stos
(bad)
xchg
jmp
rol
sti
dec
or
sbb
lds
mov
out
inc
popf
ret
in
add
mov
movs
(bad)
jns
lahf
stos
xchg
ins
mov
dec
jmp
pop
(bad)
mul
fmul
dec
in
dec
jnp
into
test
lahf
les
es
aas
pushf
xor
in
mov
push
(bad)
xchg
sbb
(bad)
pop
rol
int3
push
xor
pop
mov
int3
loop
xchg
dec
int3
popf
(bad)
jmp
adc
inc
out
mov
mov
in
(bad)
dec
push
or
xchg
add
xchg
lock
out
ins
addr16
jecxz
push
dec
sub
pop
sub
mov
pop
dec
cmp
pop
xchg
(bad)
xlat
and
add
aaa
es
cmp
pop
arpl
imul
test
das
add
icebp
mov
daa
lods
sahf
cmp
scas
popa
push
pop
cld
dec
bound
dec
mov
mov
sub
movs
mov
cli
push
xor
push
(bad)
pop
xor
int
mov
dec
fsub
push
out
stos
xor
int3
push
dec
adc
fstp
xor
sti
das
scas
adc
mov
hlt
pop
adc
or
or
mov
xor
das
cdq
mov
shr
adc
xchg
cmp
aaa
into
test
jo
test
cmp
pop
push
imul
icebp
stc
dec
xchg
out
out
mov
pop
retf
(bad)
mov
retf
pop
mov
jns
pop
inc
ins
fisubr
ins
pop
stc
pop
mov
xor
out
icebp
mov
mov
mov
push
test
nop
jle
push
iret
rcl
cs
xchg
stc
mov
icebp
xchg
dec
das
or
lods
inc
cmp
shl
sbb
mov
into
(bad)
psubusb
xor
test
push
sar
enter
mov
ins
xlat
bound
dec
fld
hlt
add
test
out
loopne
pop
or
sbb
adc
mov
out
shr
sti
cmps
in
and
inc
lock
cmp
jne
adc
push
xchg
inc
sub
inc
and
scas
xchg
(bad)
jae
or
outs
sbb
arpl
dec
and
call
icebp
fwait
pop
jge
scas
ins
pop
data16
xor
popf
push
push
jle
out
call
ins
dec
call
fisub
lock
pop
test
ds
jns
pop
xchg
sahf
cmps
mov
adc
inc
lahf
ins
sub
shl
mov
hlt
popf
gs
retf
lods
std
mov
shl
nop
pop
sti
aad
addr16
(bad)
push
mov
xor
sbb
push
nop
inc
lea
cs
mov
test
popf
adc
or
or
lods
add
lods
xchg
push
arpl
sahf
xchg
add
mov
das
dec
sar
ret
sbb
jns
add
shl
fdivr
jns
iret
dec
fidiv
push
dec
mov
jmp
dec
push
test
sbb
jo
or
fs
repz
add
dec
daa
mov
pop
sub
jae
jne
sbb
jg
xlat
lds
mov
push
cld
rcl
aaa
das
jno
out
or
daa
call
or
mov
xor
shr
and
cmps
out
aad
dec
cmp
jns
mov
adc
es
jbe
lahf
icebp
(bad)
cld
adc
fbstp
sar
pop
push
mov
pusha
imul
adc
push
or
iret
aam
or
cmp
or
mov
je
into
jne
inc
mov
mov
pop
xor
fld
cdq
mov
(bad)
fiadd
jae
test
jecxz
sbb
in
xor
cld
imul
xor
nop
mov
or
push
dec
test
mov
pop
or
mov
aas
and
cmc
xor
call
jo
(bad)
stos
ins
cs
push
gs
mov
shl
cld
lods
xor
clc
in
int
lea
fldenv
sbb
jmp
mov
mov
jae
ja
into
daa
mov
and
xchg
or
xchg
xor
sbb
jecxz
sbb
outs
push
push
sbb
lods
jle
test
sub
or
das
in
sbb
das
mov
dec
xor
adc
xchg
aaa
mov
or
xchg
cwde
cld
inc
call
mov
cmp
mov
(bad)
xchg
dec
in
mov
mov
sar
dec
loop
pop
loopne
(bad)
xor
add
addr16
mov
pminsw
fisttp
lods
scas
std
(bad)
in
shl
jp
cmp
lahf
arpl
mov
push
iret
inc
cmps
sub
hlt
sub
nop
not
pusha
or
or
stos
pop
mov
sub
fisub
aaa
inc
scas
test
mov
jg
fnstenv
or
sbb
xchg
and
pop
in
lea
retf
pop
retf
dec
cli
aam
ins
mov
mov
outs
xchg
mov
mov
push
push
mov
stos
and
movs
out
jecxz
mov
adc
xlat
cmp
movs
cmp
(bad)
sub
push
mov
stos
mov
mov
stc
pop
xor
xchg
icebp
jb
call
push
call
jl
mov
out
pop
xchg
retf
jmp
and
mov
lock
cmp
xor
ror
or
add
es
sbb
dec
movs
pop
push
inc
jecxz
dec
aaa
pop
lock
inc
mov
adc
inc
test
test
cmp
add
mov
dec
in
repnz
adc
rcr
add
add
in
sahf
aad
jb
push
xlat
add
sbb
push
mov
add
xor
(bad)
mov
aad
push
and
mov
pop
mov
xor
js
pop
stc
adc
sbb
or
cwde
adc
xchg
bound
and
pop
iret
outs
retf
fistp
lods
dec
sub
xchg
mov
push
dec
clc
or
add
pusha
cmp
add
dec
sbb
sub
aaa
xlat
pop
mov
mov
fnsave
in
fidiv
push
call
(bad)
movs
stos
sub
jp
call
inc
retf
add
iret
fcomp
stos
or
scas
inc
jae
push
jg
xor
or
inc
ret
push
jmp
ja
retf
cmp
xor
mov
std
push
sub
sar
xchg
inc
and
push
xlat
pop
dec
sbb
dec
or
push
cmp
fild
outs
mov
(bad)
out
sub
inc
icebp
xor
xor
jno
add
dec
fnstsw
out
dec
leave
and
cmc
jge
xchg
mov
test
fwait
push
test
inc
xchg
ds
fisub
mov
xchg
or
cmp
dec
icebp
cdq
adc
sti
adc
mov
lea
inc
adc
int
xor
sar
adc
leave
repz
es
rep
mov
mov
cwde
push
aaa
push
(bad)
stos
mov
push
mov
add
or
iret
inc
or
dec
mov
in
add
mov
cld
sbb
sub
adc
and
fistp
je
outs
data16
pop
mov
pop
loope
mul
mov
xchg
xchg
push
in
scas
test
lock
pop
movs
pop
icebp
xor
ret
shr
mov
test
or
inc
addr16
mov
adc
popf
xchg
outs
dec
jge
pop
mov
sbb
(bad)
sbb
sub
es
retf
push
pop
cld
hlt
push
scas
lea
jg
dec
lea
int3
jno
out
sub
retf
mov
dec
push
test
mov
cmp
movs
and
pop
ror
addr16
retf
lahf
mov
outs
add
mov
and
and
loope
mov
xor
sti
call
into
xchg
xchg
push
fadd
rcl
and
xchg
retf
adc
jl
adc
(bad)
mov
loop
adc
pop
mov
dec
mov
dec
cmp
jbe
in
xor
(bad)
aaa
test
je
popf
sbb
out
sub
pmullw
pop
xor
test
add
test
data16
push
sbb
iret
cmps
pop
sti
(bad)
and
xchg
lahf
int3
pop
aam
mov
push
add
fst
sbb
sbb
push
lds
jg
add
loop
test
inc
push
js
cmps
int
push
mov
push
adc
dec
pop
xchg
loope
shl
es
dec
sub
lahf
sbb
punpckldq
pop
inc
(bad)
cmp
inc
pop
jmp
(bad)
and
imul
lods
cmp
push
xor
and
xor
test
add
bnd
call
mov
out
stos
clc
sub
dec
sbb
nop
or
out
xor
sbb
(bad)
clc
jnp
xchg
mov
mov
fmul
mov
jne
shl
js
sbb
and
jl
pop
outs
call
(bad)
aaa
stos
aam
adc
popa
cmp
push
cmc
push
xor
xchg
inc
jecxz
enter
adc
and
cld
int3
js
mov
loop
call
xor
ins
cmps
mov
xor
mov
mov
cli
rcr
clc
iret
jge
or
inc
outs
adc
cmp
ret
test
push
pop
jb
cmp
add
sub
out
sti
jge
pushf
(bad)
or
popa
xchg
xor
push
in
xor
mov
sub
or
mov
add
(bad)
mov
(bad)
stos
in
jno
repnz
mov
test
jbe
mov
in
jo
mov
xchg
sbb
sar
xchg
out
mov
or
adc
and
lods
aas
les
adc
int3
jg
mov
mov
mov
out
fsub
sbb
test
and
push
adc
mov
jp
je
dec
cld
ror
scas
mov
out
and
sub
lea
inc
(bad)
or
scas
shl
enter
je
jb
jbe
adc
fisub
iret
pop
mov
push
into
pop
or
xchg
add
test
push
sar
mov
mov
fs
test
jmp
sar
jecxz
pop
xchg
jmp
hlt
ja
dec
jmp
mov
dec
push
cli
mov
test
lahf
int
mov
inc
adc
pop
mov
xchg
aaa
mov
mov
mov
cmp
and
pop
retf
aam
cmps
jmp
call
lahf
cmps
js
gs
pop
sub
dec
shl
shl
scas
dec
not
or
test
pop
mov
push
add
icebp
cwde
or
add
jg
sbb
and
xor
sub
mov
adc
mov
(bad)
gs
sub
aaa
cmp
stc
push
push
neg
pop
jnp
add
cmc
cmp
gs
sub
jae
into
ins
mov
les
retf
push
xchg
test
pop
mov
ins
inc
dec
imul
js
aad
xchg
sub
or
ins
cmp
adc
xor
out
jecxz
aam
sub
movs
fistp
add
je
rol
pusha
loop
and
daa
sbb
jnp
cmp
dec
ret
arpl
xchg
movs
scas
inc
or
cld
retf
in
jnp
xchg
pushf
mov
pushf
test
std
dec
lock
pop
add
lahf
test
out
push
rcl
mov
das
fsub
das
jle
xor
xor
not
movs
(bad)
adc
sahf
nop
clc
xor
test
inc
push
ss
lods
pop
loope
xchg
mov
jmp
mov
pusha
or
mov
rcl
mov
cld
scas
ds
popf
cmp
stos
(bad)
mov
pop
xor
dec
icebp
jae
loop
cmp
jle
or
mov
div
loop
out
outs
lea
inc
pop
cwde
jmp
push
scas
inc
imul
mov
ja
into
sar
pop
mov
scas
pop
xchg
push
ret
je
push
stos
ja
shl
stos
adc
and
iret
dec
mov
sub
add
shl
scas
mov
sub
inc
imul
mov
(bad)
mov
xor
jnp
pop
or
ins
scas
add
adc
sub
lds
cmps
sub
repnz
adc
inc
aaa
fsubr
daa
adc
and
rol
ret
rcl
pop
pop
add
ss
aam
sti
out
push
nop
mov
cld
pop
lahf
scas
stos
shl
(bad)
mov
add
neg
mov
inc
mov
pop
popf
sbb
push
pop
test
nop
mov
jmp
adc
(bad)
push
xor
retf
and
test
pop
stos
xor
xor
xor
adc
rcl
sub
sbb
add
or
adc
or
(bad)
rcr
bound
and
mov
mov
mov
xor
popa
fidiv
cmp
mov
push
or
popa
pop
and
mov
cmp
lock
ins
jg
test
cmp
or
shr
adc
leave
ins
xlat
in
and
mov
dec
jnp
pop
mov
movs
ret
mov
stc
cwde
cmp
inc
fwait
(bad)
lods
jb
rcr
mov
ret
je
or
add
mov
ror
jb
sbb
stc
dec
fild
popf
inc
(bad)
clc
mov
jo
push
repz
xchg
daa
inc
scas
popa
gs
(bad)
mov
aam
popf
xchg
inc
cli
inc
neg
test
popf
outs
fs
daa
das
icebp
push
mov
icebp
sub
fs
mov
jl
ja
je
in
mov
inc
pop
scas
add
push
adc
pop
or
mov
pop
js
call
sub
xchg
pop
mov
and
inc
mov
jb
xchg
fisubr
mov
add
lea
in
dec
fiadd
retf
in
loop
bound
(bad)
into
stos
mov
js
loop
(bad)
push
ds
out
pop
test
adc
cmp
fiadd
iret
test
je
mov
repnz
out
pop
dec
fxam
stc
mov
aaa
jmp
mov
popa
call
jle
data16
stc
pop
sbb
inc
inc
mov
pop
icebp
ss
aaa
jbe
inc
rcl
mov
test
jmp
and
push
sbb
ss
pop
test
cmp
cs
fsub
pusha
sbb
cmp
jb
ins
or
mov
frstor
rcl
aaa
sbb
gs
retf
mov
(bad)
fistp
fdiv
xchg
mov
js
sbb
ins
sub
out
mov
ins
(bad)
std
jge
push
xlat
sahf
pusha
lea
sub
inc
adc
aaa
std
out
ss
daa
retf
stos
sbb
sub
pop
adc
dec
fwait
cli
sahf
enter
fstp
jmp
movs
push
adc
mov
mov
or
mov
test
mov
(bad)
or
cmp
mov
repnz
pop
loope
mov
push
or
loope
out
mov
stos
fwait
push
imul
loop
fidiv
mov
sbb
inc
sbb
inc
fcom
dec
lods
fmul
and
xchg
call
fs
adc
lock
mov
ret
fcmovb
xchg
in
sbb
ss
and
imul
aad
mov
mov
ja
in
int
and
mov
shl
add
das
imul
jne
cmps
cmps
cdq
jg
call
xabort
popa
imul
pop
mov
loopne
jnp
dec
fs
loope
dec
shl
pop
push
cmp
and
popf
ret
cmp
(bad)
xor
repz
cmp
or
es
retf
push
aam
ins
adc
cmp
jmp
mov
cmp
lock
mov
sbb
mov
jo
cmp
mov
imul
(bad)
sbb
fdiv
mov
and
add
push
loopne
xor
sub
jbe
mov
xor
dec
shl
push
pop
cmc
test
dec
or
jns
in
(bad)
addr16
rcl
push
pop
mov
mov
adc
xchg
adc
pop
ficomp
aas
pop
mov
dec
rcl
or
stc
jne
sub
clc
fcmovbe
adc
test
or
or
fiadd
and
jg
cmp
cdq
lds
pusha
add
or
jo
jg
inc
add
adc
xchg
sub
cmps
out
dec
lock
mov
push
mov
xchg
xor
lea
xchg
xchg
mov
fst
movs
sbb
push
add
pop
ds
push
cmps
push
retf
adc
ins
and
cwde
repnz
jne
or
mov
cmps
les
pop
push
stos
loopne
mov
jb
jmp
stc
popf
mov
test
add
icebp
mov
add
and
loopne
jb
inc
outs
shr
sub
mov
dec
adc
or
or
jge
dec
inc
dec
xor
xlat
pop
pop
out
int
lods
pushf
mov
add
in
dec
mov
xchg
(bad)
movs
mov
(bad)
shr
enter
popf
cmc
or
push
adc
cmps
xor
xlat
retf
les
cmp
test
loope
ret
bound
xchg
pop
xor
and
inc
cwde
(bad)
fisttp
sbb
stos
cmps
mov
repz
ficomp
stc
lods
xchg
mov
and
loop
in
stos
add
jnp
loop
jmp
jmp
in
mov
mov
ret
dec
aas
jae
sub
and
mov
xor
mov
out
mov
sub
add
das
andps
mov
pop
mov
fs
leave
dec
mov
inc
jg
push
pusha
ret
(bad)
es
loopne
les
and
xchg
pop
out
out
daa
dec
inc
ja
clc
sub
pop
mov
mov
mov
xor
mov
lahf
pushf
leave
call
pusha
jmp
test
fst
out
ins
sub
mov
push
aas
test
cmp
sahf
movs
push
daa
xor
inc
cdq
mov
in
cmc
mov
xchg
mov
xchg
push
sahf
cdq
pop
lds
dec
or
ins
pushf
lods
mov
rol
jno
push
inc
sbb
jmp
inc
daa
inc
mov
rol
inc
lods
adc
imul
cdq
pop
mov
std
ret
sbb
jb
int
xlat
adc
std
cmps
dec
mov
mov
sbb
jmp
jge
and
lock
dec
test
scas
nop
mov
ror
jecxz
shr
sub
ins
fbstp
push
cwde
mov
fistp
test
iret
push
or
cli
sub
fst
mov
stos
xchg
dec
ret
add
mov
sahf
ja
mov
mov
mov
daa
pop
loop
mov
popf
push
cmp
adc
cmp
pop
or
mov
dec
pop
sub
jp
leave
ins
fs
neg
in
mov
inc
ret
push
mov
push
and
push
les
std
xchg
shl
push
je
add
xor
icebp
adc
call
mov
je
pop
out
repnz
push
mov
inc
xor
mov
loop
or
stos
cdq
shl
cmp
sbb
jbe
mov
sub
pop
push
lahf
pop
fisub
dec
std
scas
add
mov
call
stos
lahf
xchg
jno
and
fst
xor
ret
add
cwde
imul
sbb
sbb
mov
xor
movs
cmc
adc
or
popa
pop
ja
sbb
mov
into
pop
mov
rcl
mov
mov
sti
mov
mov
ret
sub
and
xchg
jnp
mov
lods
adc
or
ret
adc
fld
xchg
ffreep
lea
das
ss
test
sub
jg
inc
repnz
push
mov
in
jae
jbe
cmp
enter
dec
pusha
stos
ins
jbe
cmps
cmp
mov
retf
cwde
nop
sub
(bad)
xchg
dec
test
fild
xchg
fadd
jae
mul
mov
mov
sbb
out
inc
js
and
inc
or
ret
or
call
push
int
push
stos
out
imul
retf
mov
rcl
repnz
out
and
loope
push
pop
movs
ja
jl
retf
dec
mov
call
fist
(bad)
and
sub
pop
in
iret
in
and
call
inc
adc
pop
mov
mov
(bad)
xor
xchg
cwde
mov
mov
mov
mov
sbb
mov
ret
ds
aad
jp
pop
dec
pop
rol
jmp
ror
shl
rol
add
leave
imul
sbb
pop
or
cmp
movs
(bad)
lods
dec
xchg
(bad)
(bad)
mov
add
jg
(bad)
pop
test
fwait
dec
movs
cmps
xchg
ret
sbb
popf
ror
cwde
jmp
addr16
xchg
or
adc
push
mov
sub
jmp
sbb
gs
push
popa
out
or
dec
jle
call
add
and
sti
loop
fidiv
inc
add
shl
fstp
idiv
hlt
sub
fdivr
mov
push
dec
movs
lods
rol
mov
push
shr
xor
dec
addr16
inc
sub
mov
inc
mov
je
xchg
das
test
xchg
inc
mov
xchg
cs
sbb
cmp
into
mov
icebp
xor
pop
inc
bndstx
sbb
stos
and
lds
jb
shl
and
jae
and
sub
and
xchg
aaa
xor
dec
mov
sti
inc
mov
push
call
pop
jmp
inc
gs
jae
icebp
sub
inc
adc
aaa
mov
fstp
or
hlt
pusha
outs
test
scas
jne
sbb
in
xchg
xor
mov
mov
and
xchg
int
mov
mov
xor
inc
stc
or
inc
mov
xor
shr
ss
sbb
fmul
stc
ss
or
cmc
js
pop
push
shl
dec
cmp
fidiv
inc
(bad)
in
pop
ja
sbb
retf
adc
fbstp
and
inc
cwde
jbe
in
mov
dec
test
inc
xchg
sbb
xchg
(bad)
outs
stos
xchg
cmp
nop
mov
movs
mov
inc
dec
rcl
jae
inc
sbb
cmp
mov
xchg
in
imul
cmps
mov
cmp
mov
push
lock
or
clc
mov
test
jl
loop
test
enter
sar
add
inc
cmps
inc
pop
jge
lock
adc
aam
add
mov
mov
jbe
ret
call
add
leave
scas
(bad)
push
std
or
sbb
nop
sub
and
std
lahf
xchg
cmps
add
mov
push
rol
cli
jo
arpl
or
stc
push
or
out
sbb
adc
mov
shl
xchg
sub
push
cwde
(bad)
xor
push
or
hlt
in
mov
xchg
bound
pop
pop
pop
fistp
xor
mov
fld
cmps
lea
jns
out
add
cld
or
dec
out
iret
arpl
sub
pushf
repz
push
dec
mov
push
ja
cbw
shr
inc
imul
mov
lods
ficomp
xchg
mov
push
pop
repnz
mov
movs
lea
mov
fiadd
push
jg
xor
or
sub
jle
xchg
xchg
mov
add
jno
push
dec
imul
jge
mov
pushf
mov
and
int3
push
push
das
iret
add
cmp
repz
mov
cli
shld
sbb
aam
push
ss
repnz
push
call
xchg
dec
je
cmp
ret
inc
jnp
add
sbb
jb
adc
adc
push
sub
push
push
mov
cmps
sbb
or
add
mov
add
inc
pop
lahf
pop
xlat
sub
cmc
mov
mov
daa
lahf
push
clc
xor
(bad)
pop
cmps
test
xchg
mov
and
push
mov
add
pop
dec
in
pop
cs
aad
pusha
aad
jmp
pop
add
lods
call
dec
inc
sar
sar
add
mul
cmp
mov
(bad)
imul
in
mov
adc
mov
loope
sub
cwde
lods
or
inc
aaa
cdq
xor
aad
xor
or
stos
repz
out
jg
sbb
inc
nop
mov
push
aas
icebp
mov
add
jp
pop
mov
jne
mov
inc
ret
and
mov
jmp
inc
retf
cmps
maxps
mov
repz
fcom
inc
outs
leave
xchg
jle
pop
cmp
in
dec
sub
pop
iret
cs
iret
xchg
test
rsm
pop
and
jbe
neg
push
cdq
out
cmp
addr16
xor
push
cmps
cmp
lds
dec
dec
test
inc
aam
jo
dec
pop
mov
call
or
sub
and
retf
adc
pop
mov
in
lods
push
stos
push
dec
ja
xchg
xchg
fwait
and
pop
sahf
outs
xor
cmps
in
mov
and
imul
cs
stos
xor
lds
mov
stos
loopne
jno
or
xchg
or
aas
push
into
or
test
iret
lods
aas
repnz
cmps
sub
pop
ret
js
sar
packssdw
lds
punpcklwd
(bad)
sbb
mov
pop
sub
xchg
push
xchg
push
add
xchg
packsswb
leave
ret
rcr
ds
xlat
fmul
mov
int
cli
pop
push
xchg
xchg
add
add
mov
aam
jp
icebp
mov
inc
retf
sub
xchg
add
addr16
mov
push
sub
aad
mov
repnz
and
cli
cmp
jp
jns
mov
inc
int
xor
test
sar
test
lahf
mov
mov
rol
push
mov
adc
mov
inc
xchg
push
cmp
xor
adc
les
add
arpl
xchg
mov
sub
pop
(bad)
dec
sahf
ss
inc
iret
es
add
xchg
sbb
sbb
xchg
pop
imul
jecxz
push
push
stos
movs
mov
push
and
mov
stc
aaa
xor
mov
aam
imul
out
adc
fistp
adc
mov
push
loope
icebp
adc
pop
outs
pop
addr16
int
push
mov
jecxz
dec
ins
lds
ins
adc
movs
stos
scas
xchg
pop
(bad)
lock
ins
test
cmp
mov
test
aaa
test
mov
movs
das
jno
sbb
test
inc
push
scas
stos
sbb
fist
xor
inc
sub
or
mov
sbb
mov
daa
iret
inc
(bad)
aaa
mov
mov
outs
lds
mov
dec
mov
(bad)
pop
pop
fcomp
mov
jno
stos
ins
cmps
into
xor
nop
rcr
xor
sub
mov
sub
pop
inc
retf
mov
dec
arpl
push
das
xor
mov
push
xchg
mov
mov
dec
ja
xlat
push
mov
(bad)
add
in
stc
and
jge
dec
lea
scas
pop
fnstsw
popa
pop
mov
arpl
pop
push
jne
scas
cmc
or
mov
mov
lahf
and
stos
and
stos
inc
xchg
nop
xor
jmp
in
add
lea
cmp
dec
leave
dec
cmp
mov
add
out
addr16
xchg
imul
in
aas
mov
shr
das
or
idiv
ss
mov
mov
push
aaa
retf
pop
movs
xchg
es
fistp
mov
push
jns
movs
das
(bad)
sti
into
dec
push
aas
xor
or
mov
jg
loop
loopne
mov
push
fist
mov
(bad)
sub
jle
xchg
jmp
xlat
sahf
adc
adc
add
icebp
mov
fisubr
sub
stos
cwde
je
xchg
scas
jo
dec
xor
jg
ret
sti
les
fxch
xor
inc
sub
jmp
push
cld
xchg
sub
mov
jno
push
test
daa
lahf
fistp
mov
out
pop
jns
xchg
aaa
lods
mov
lods
ja
fisubr
adc
and
or
or
sbb
sbb
push
jl
push
jmp
sahf
mov
push
leave
push
push
or
ret
push
or
dec
and
mov
outs
test
pop
mov
dec
inc
call
fadd
mov
or
mov
push
cmp
les
pushf
movs
add
(bad)
xchg
mov
loop
xchg
(bad)
xchg
jne
test
arpl
mov
or
inc
sbb
(bad)
ror
std
jg
cmp
mov
je
mov
xchg
adc
push
push
mov
gs
inc
in
out
arpl
into
jns
leave
repz
lahf
aaa
mov
dec
sub
adc
dec
push
push
jge
adc
jns
or
test
in
mov
or
add
loopne
sub
xchg
or
lds
js
test
cmp
addr16
inc
js
and
pop
(bad)
cmp
imul
fwait
inc
inc
sub
lds
aam
out
cmp
dec
gs
scas
push
xor
jg
or
pop
retf
mov
sbb
gs
push
repnz
xchg
stos
rcr
dec
shl
imul
imul
add
jb
test
mov
mov
push
imul
pop
pop
enter
hlt
jmp
cmp
scas
inc
cmp
mov
sub
xor
sahf
std
or
xor
dec
mov
adc
xor
pushf
cmp
je
stc
fstp
xor
pop
push
jle
inc
(bad)
cld
pop
dec
bound
xchg
dec
test
(bad)
pop
push
jecxz
sbb
or
jmp
sub
xchg
mov
in
mov
mov
add
push
enter
jno
movs
out
push
jecxz
(bad)
(bad)
xchg
adc
(bad)
in
push
mov
iret
jl
pop
push
cmc
mul
or
dec
pop
mov
xchg
xor
stc
lock
sbb
dec
adc
out
sbb
ficomp
cmps
inc
add
xchg
jnp
sbb
cwde
mov
jb
xor
ficom
ins
push
bound
pop
jle
adc
mov
loop
fstp
imul
adc
test
inc
cli
sbb
mov
xor
or
mov
daa
aad
mov
mov
ins
(bad)
and
mov
dec
arpl
retf
add
and
or
in
adc
out
mov
pop
shr
xor
rcl
and
shr
push
push
sub
xlat
pand
dec
ret
(bad)
and
sbb
inc
pop
(bad)
cwde
test
sub
adc
mov
stos
push
pusha
icebp
shl
or
pop
jg
xchg
xlat
add
inc
adc
cs
scas
inc
add
push
movs
dec
loopne
add
lds
sub
jno
mov
imul
in
mov
push
aad
outs
inc
bound
mov
push
pop
push
jl
add
sbb
add
arpl
pop
(bad)
outs
jae
pop
fs
mov
mov
xchg
mov
mov
or
xlat
pop
adc
loope
aam
nop
out
sub
mov
or
fwait
rol
sub
lds
ss
xor
push
mov
arpl
xchg
test
add
dec
int
rol
popf
jp
mov
mov
push
gs
ror
ss
es
adc
sbb
pop
enter
iret
ins
add
mov
adc
or
fsub
add
jp
pop
out
sar
sbb
jg
(bad)
int
cmp
add
xor
inc
test
ror
aam
cmc
or
arpl
sub
inc
inc
dec
icebp
cmps
sub
cmp
scas
pop
inc
push
fs
popw
popa
frstor
ror
cmp
and
pop
or
(bad)
xchg
mov
bound
fmul
addr16
repz
pop
push
sbb
test
pop
fwait
adc
rcr
in
std
icebp
jmp
loope
je
bswap
sub
adc
ror
js
push
in
jmp
mov
shl
fld
add
jno
popf
push
xchg
add
adc
inc
aaa
and
fisttp
xor
sub
or
aaa
xor
fmul
pop
leave
sub
push
xor
dec
idiv
xchg
fistp
ret
push
or
jp
xor
mov
inc
sti
es
loopne
xor
jb
adc
inc
inc
xor
dec
sbb
sub
sbb
pop
add
and
cdq
imul
adc
imul
es
scas
sbb
jns
pop
sbb
jecxz
dec
dec
paddq
push
inc
repz
retf
pop
pop
sbb
loope
inc
cdq
test
jg
ins
sbb
out
or
data16
(bad)
fidiv
dec
rep
mov
jmp
or
cs
outs
outs
push
jne
add
push
pop
mov
xor
movs
retf
(bad)
in
cwde
loope
pop
std
sahf
inc
ins
iret
fwait
fwait
loopne
int3
adc
in
dec
and
aas
loope
mov
cmp
jne
lods
mov
jecxz
inc
shl
push
cwde
mov
addr16
cli
ret
into
xchg
movs
xor
imul
call
and
and
sti
and
cs
ret
pop
sar
(bad)
fadd
cmp
pop
clc
neg
sti
fsub
pop
add
fpatan
sub
adc
jmp
cmp
dec
cmp
repnz
dec
out
sbb
fst
ror
push
jl
jno
and
aad
xchg
inc
mov
(bad)
outs
mov
sub
or
(bad)
push
mov
ins
sti
jae
or
fistp
sahf
add
pop
outs
push
dec
ror
jbe
pop
sbb
xor
(bad)
cld
add
fs
loop
shl
ret
popa
sar
bound
mov
xlat
iret
ret
test
xchg
imul
in
gs
sbb
mov
lods
imul
add
mov
(bad)
jmp
int3
inc
les
movs
adc
push
pusha
mov
or
imul
stos
loopne
out
inc
and
sub
arpl
aas
mov
into
inc
daa
cld
xor
add
mov
mov
dec
push
(bad)
sbb
jne
xchg
lds
pusha
mov
cmps
jns
outs
mov
daa
stc
pop
test
ret
or
pop
dec
and
retf
pop
or
mov
cmps
adc
das
mov
jns
in
and
fcmovbe
repz
mov
jno
adc
jne
jns
inc
push
ja
mov
repnz
push
scas
leave
pop
cdq
clc
je
test
and
jno
pop
fidivr
mov
mov
jnp
push
jns
push
and
push
iret
adc
xchg
xchg
push
add
loop
push
and
gs
mov
mov
mov
cs
jne
outs
call
pop
push
dec
call
pop
(bad)
jl
loope
xchg
imul
push
xchg
cmps
(bad)
mov
pop
inc
dec
mov
and
sbb
aaa
outs
addr16
cmps
xchg
and
iret
mov
or
jl
push
mov
or
or
addr16
rcr
cld
lea
into
cdq
xor
js
cmps
lock
dec
mov
push
pop
mov
rol
push
ins
shl
test
cmp
out
fwait
dec
mov
xchg
movs
dec
xchg
test
ja
mov
and
sbb
rol
xchg
fidiv
xchg
ins
jp
das
imul
jnp
pop
retf
and
mov
movs
adc
popa
pop
xchg
xchg
push
mov
sahf
sub
push
inc
fld
jmp
mul
push
add
idiv
js
int
in
sub
pop
sbb
inc
dec
xor
add
retf
adc
or
inc
(bad)
cmc
inc
popf
push
sbb
out
loopne
sar
jns
ret
test
pop
pop
ja
shr
add
mov
jbe
push
pop
movs
addr16
jb
sbb
aas
(bad)
das
iret
mov
or
jmp
sahf
ss
ret
adc
jecxz
icebp
sahf
ja
xchg
arpl
sub
cmp
and
fcomp
ins
jp
lods
jg
imul
mov
imul
mov
stc
jmp
add
dec
pop
mov
(bad)
mov
test
fisttp
int3
mov
cmp
aaa
sbb
sahf
inc
pop
shl
mov
in
inc
int
xor
jmp
push
aaa
sar
dec
inc
js
and
pop
(bad)
fnsave
pusha
fsubr
js
cwde
(bad)
cmp
mov
inc
and
(bad)
push
add
ja
dec
cld
lock
sub
xchg
aam
and
sahf
das
test
dec
in
pop
lods
out
pop
shl
(bad)
cmp
movs
ds
icebp
imul
imul
aad
sbb
fmul
fcmove
and
push
inc
stos
jbe
mov
cmp
xchg
xchg
cmp
jbe
sub
(bad)
stos
jl
sub
xlat
sti
adc
pop
mov
(bad)
jns
fmul
mov
out
cmps
and
test
cmc
mov
cmp
mov
and
ret
xchg
(bad)
and
sbb
sbb
push
jmp
jmp
test
jle
dec
daa
jb
mov
rcl
je
retf
mov
pop
cmp
sbb
lea
dec
inc
lock
mov
dec
sbb
or
fcomp
fadd
outs
test
jmp
xor
mov
std
push
sahf
adc
shr
mov
hlt
cmps
fadd
test
cmp
mov
retf
cmp
dec
idiv
jg
leave
fisubr
ret
cs
cmps
pop
or
or
das
fcmovu
test
test
popa
xor
popf
iret
das
shl
or
pop
and
xor
sub
fcmovu
iret
scas
repz
inc
sar
mov
test
jmp
add
sub
xor
sti
loopne
cmc
jnp
sbb
fwait
jmp
popa
sbb
cs
(bad)
sbb
mov
stos
pop
bound
lahf
fldenv
or
xchg
adc
push
add
repz
jecxz
cmp
sbb
push
pop
ja
ds
push
jne
jg
iret
pop
and
inc
or
fwait
call
clc
or
outs
adc
leave
push
sub
mov
fsubr
scas
cmp
or
sbb
and
push
mov
add
pop
jae
gs
retf
sub
fldenv
shr
(bad)
(bad)
icebp
xchg
outs
ret
xor
xchg
ss
cmps
jns
xor
and
mov
adc
or
xor
mov
push
aas
or
aam
fnstenv
or
xlat
sti
sahf
jmp
lods
scas
pop
xchg
inc
test
add
fist
add
mov
sbb
cmps
sar
in
fstp
push
push
retf
xchg
or
adc
or
sub
jns
pop
outs
mov
aas
mov
sbb
dec
pop
retf
xor
and
dec
rcr
add
shl
idiv
stos
js
sub
push
jae
xchg
and
loopne
movq
aaa
dec
cmp
pop
xchg
pusha
dec
cmp
ja
inc
mov
mov
lea
shr
jbe
pusha
mov
call
(bad)
mov
popa
cld
sbb
mov
pop
xor
add
jmp
fninit
sti
mov
sbb
pop
iret
push
cmp
sbb
(bad)
popa
scas
inc
mov
pusha
jno
mov
adc
(bad)
mov
in
enter
push
(bad)
sbb
xor
xchg
mov
dec
jl
push
jns
mov
call
jb
imul
les
iret
imul
fidiv
mov
je
inc
cmp
fisttp
pop
sahf
das
jbe
adc
inc
cmp
mov
hlt
popf
inc
jmp
inc
mov
jle
popf
sub
in
fs
jno
fadd
je
xor
call
jp
cmp
sbb
mov
movs
mov
pop
shl
aad
iret
push
mov
js
scas
cdq
xchg
pop
sub
cmps
jns
fsub
xlat
xlat
pop
call
scas
xor
lahf
(bad)
pop
sahf
test
and
mov
outs
push
mov
pop
shl
xchg
sbb
sti
mov
cmps
popf
adc
sahf
sub
mov
pusha
jnp
pop
pop
pop
out
ins
mov
stos
sbb
iret
repnz
sub
mov
pusha
cmp
scas
mov
add
mov
test
xor
jge
inc
and
mov
(bad)
pop
jecxz
add
ror
jnp
xchg
js
cmp
in
lods
fs
int3
pop
and
cmp
dec
(bad)
jmp
sub
jne
jae
or
sub
out
out
imul
cmp
sbb
inc
test
movs
sub
jmp
ror
in
retf
inc
cwde
xchg
push
(bad)
inc
push
inc
push
jg
xor
mov
sbb
xchg
ss
jne
adc
test
xchg
sbb
pop
mov
test
fwait
cmps
mov
sub
scas
in
sub
(bad)
lods
lea
cmc
popa
lods
push
add
fdiv
xchg
aaa
ins
mov
sbb
sub
addr16
sub
adc
adc
mov
push
or
sbb
lahf
sar
mov
(bad)
std
nop
add
xchg
mov
rol
inc
sbb
leave
mov
jo
mov
mov
iret
mov
aaa
jp
inc
fistp
jp
mov
xchg
popa
imul
popf
leave
jno
xlat
push
pop
scas
test
or
inc
mov
adc
jae
dec
lods
movs
out
jne
xchg
push
pushf
mov
movs
retf
lea
dec
and
cmp
and
sbb
scas
fwait
out
mov
(bad)
or
fcom
ret
ret
sbb
sub
xor
loope
shl
(bad)
xor
mov
add
pop
xchg
scas
jmp
adc
leave
imul
les
sub
pop
pop
inc
sub
cs
lock
pop
test
push
push
fs
int3
add
jmp
aaa
adc
sub
inc
jo
in
pop
xchg
movs
and
fwait
les
call
xor
popf
pop
popa
fadd
adc
(bad)
test
loop
xor
sub
or
lahf
dec
fcomp
cmp
repnz
mov
xor
xor
xlat
xchg
cmp
call
mov
adc
cmp
outs
shufps
loop
hlt
sbb
pop
cmp
mov
and
test
daa
and
adc
mov
add
mov
adc
mov
es
ins
mov
push
rcr
mov
cmp
test
(bad)
push
rol
inc
ds
gs
mov
fnstsw
pop
rol
cmps
mov
lock
push
xor
(bad)
jl
call
lods
cld
mov
or
std
ss
xchg
rcr
push
scas
xchg
mov
or
inc
or
adc
inc
jae
dec
cmp
adc
in
xchg
arpl
retf
lods
movs
outs
aaa
stos
sbb
lahf
inc
sahf
jl
jmp
sbb
pop
aad
add
sub
sub
test
iret
inc
inc
ins
inc
in
stc
cmp
mov
inc
pop
stc
pusha
loope
je
or
jmp
pop
jbe
mov
js
rol
cs
and
inc
lea
call
adc
adc
std
(bad)
int
sti
ss
dec
sbb
dec
xor
mov
jl
adc
push
inc
push
(bad)
sbb
movs
pop
into
cs
mov
inc
inc
cld
dec
into
out
sbb
push
cli
test
outs
pop
inc
xor
shr
mov
or
fs
clc
dec
mov
ds
xchg
test
movs
stos
push
cmc
add
jge
icebp
adc
sbb
rcl
or
fidiv
rol
rcr
(bad)
push
repnz
sub
xor
inc
pop
sar
cli
jmp
data16
jb
dec
push
clc
(bad)
push
jmp
in
test
sbb
or
add
push
add
mov
jne
call
out
and
es
add
gs
push
adc
adc
xor
xchg
pop
fwait
in
cmc
aas
outs
adc
repnz
and
pop
add
cs
jae
repnz
scas
mov
lods
dec
lahf
cmp
adc
xchg
push
xchg
or
pushf
mov
test
imul
outs
test
mov
xchg
dec
sub
sbb
add
ss
mov
push
sub
mov
and
mov
out
pop
mov
cmp
and
ror
clc
shr
in
xor
cmp
test
dec
mov
daa
imul
in
jb
dec
js
jp
in
(bad)
pusha
push
(bad)
pop
xor
aaa
pop
push
stos
pushf
pop
ret
sbb
push
das
out
push
jecxz
loopne
pop
sub
xchg
ret
and
clc
cmp
mov
sub
jne
(bad)
mov
pop
loop
mov
cmp
mov
loop
lods
ss
test
into
out
call
and
add
cmp
shl
inc
push
sub
or
int
jle
adc
pcmpgtw
retf
mov
xor
inc
fldcw
loopne
stos
cmp
ss
test
xchg
adc
xchg
dec
cs
pop
mov
stc
push
pop
pushf
xchg
pop
mov
adc
add
fdivr
and
push
popf
int
gs
sbb
in
test
inc
bnd
push
add
shl
jl
xor
cmp
jge
bound
scas
mov
cwde
psraw
addr16
rcr
in
pop
pop
jmp
cmp
and
enter
sar
sub
in
adc
mov
add
and
sti
ret
xor
push
adc
std
push
pop
sub
jne
or
mov
or
lea
div
dec
stos
xor
jmp
push
outs
daa
(bad)
pop
xor
scas
lods
ss
inc
add
lahf
sbb
(bad)
mov
shr
jmp
push
cmp
rol
jp
pop
retf
xor
dec
repnz
aaa
mov
call
(bad)
(bad)
movs
add
xor
mov
push
sahf
movs
cmp
xchg
sub
ins
aas
pusha
add
outs
push
repnz
dec
mov
ret
mov
mov
mov
fs
rdpmc
add
stc
pusha
lea
xor
xor
in
imul
ins
leave
sbb
orps
jne
xlat
call
(bad)
xchg
sub
xor
imul
mov
jno
or
mov
stos
retf
in
pushf
push
jecxz
push
adc
std
push
and
pslld
pop
mov
nop
not
adc
push
sbb
jb
xchg
or
jnp
imul
xchg
cmps
dec
push
and
mov
lahf
mov
xchg
sar
repz
xor
xchg
stos
fldenv
inc
call
cmp
inc
pusha
daa
cmps
cmp
inc
retf
data16
mov
ret
dec
ror
mov
jle
loopne
mov
in
jl
test
dec
fdivr
and
fstp
test
out
stc
mov
enter
movs
cli
stos
(bad)
fs
popf
add
call
push
addr16
xchg
sbb
sar
pop
mov
or
out
jnp
jecxz
lock
icebp
cld
jp
test
jecxz
or
jne
ja
push
das
adc
jg
cmp
or
sti
rcl
fs
sbb
fld
cmps
popa
call
xor
movs
sbb
pop
mov
loope
loope
xchg
mov
mov
call
dec
sub
cld
loopne
jo
fiadd
pushf
div
scas
sub
imul
movs
pop
or
arpl
ret
pop
mov
jae
cli
popa
or
pop
pop
xor
xor
xor
ins
and
pop
push
lahf
rcl
neg
and
cmps
cld
cmp
adc
pop
and
cdq
cs
inc
xchg
and
mov
jmp
fld
or
retf
push
inc
fild
sbb
xchg
daa
std
push
jp
repz
adc
outs
jle
and
mov
cmp
sti
out
out
adc
add
cli
jge
xlat
dec
pop
clc
div
and
mov
arpl
xor
mov
aas
retf
stos
cmp
mov
dec
lods
into
ins
stos
adc
dec
xchg
stc
jle
sahf
xchg
adc
xchg
mov
sub
mov
push
jns
or
imul
retf
xchg
inc
mov
cdq
mov
test
push
outs
lahf
jp
mov
mov
dec
data16
mov
cwde
(bad)
push
aaa
scas
xor
repnz
sbb
mul
dec
les
add
push
xlat
jp
add
push
pushf
(bad)
xor
xchg
les
dec
xchg
and
ret
aas
out
add
dec
sbb
es
dec
push
push
push
xchg
push
rep
fisub
jbe
xor
shr
in
adc
jb
push
loop
(bad)
into
(bad)
push
dec
dec
(bad)
aas
mov
mov
test
call
cmp
test
xchg
xor
add
in
mov
push
push
in
out
push
call
bound
fadd
pop
(bad)
in
call
(bad)
sub
sub
pop
push
into
mov
jmp
jle
dec
es
je
vpcmpeqw
js
pop
push
cmp
test
push
sub
or
scas
mov
ret
sti
xor
mov
fistp
xchg
pop
push
popf
rcl
dec
loope
test
(bad)
dec
pop
fwait
dec
sbb
scas
pop
jmp
mov
mov
cli
mov
sbb
pop
out
add
inc
or
nop
test
xchg
pushf
or
(bad)
adc
popa
jge
push
mov
jle
cmp
adc
adc
fs
adc
xchg
in
add
push
ret
add
call
push
fnstsw
leave
stc
xor
imul
xchg
pop
out
int
mov
cmp
jle
in
xchg
fcom
jge
aad
repz
call
data16
and
int3
out
(bad)
sar
push
aam
js
les
movs
out
fdivr
sbb
jns
push
mov
lds
or
and
sub
adc
xor
mov
pop
icebp
popa
mov
jne
mov
cmp
dec
cmp
jle
dec
cmp
aas
push
dec
or
cmp
sahf
mov
xchg
rcl
pop
test
mov
inc
call
lea
push
sub
dec
and
(bad)
out
adc
jp
inc
sub
shl
stos
int
xor
pop
pushf
inc
jle
cwde
cmps
adc
dec
int3
rcr
(bad)
jmp
jb
addr16
int
and
fisubr
hlt
or
(bad)
(bad)
js
stos
jns
adc
clc
addr16
xor
mov
popa
and
inc
add
xchg
shl
inc
mov
lahf
(bad)
and
inc
mov
pop
dec
and
sbb
stc
push
jno
es
ficomp
test
adc
rcl
mov
adc
inc
mov
sub
push
jmp
or
xchg
pop
mov
in
pop
pushf
or
retf
mov
aam
add
push
lods
and
scas
popf
xor
sub
jo
sub
push
and
dec
arpl
test
jge
(bad)
cld
cld
lahf
gs
add
ror
imul
das
dec
pop
xchg
lods
fwait
outs
fstp
cwde
xchg
stos
mov
or
cwde
mov
not
push
adc
cmp
call
push
(bad)
mov
sahf
test
stos
push
and
imul
push
cmp
push
adc
loopne
fdivr
repnz
inc
sbb
loope
xlat
xchg
jp
push
jne
loop
nop
aad
xchg
aas
std
jo
sub
(bad)
adc
mov
icebp
sub
pop
adc
xchg
push
pop
and
scas
(bad)
clc
adc
retf
pusha
(bad)
dec
cmps
rcr
sbb
cmp
out
xor
fsub
dec
int
jne
js
mov
cmp
aaa
test
xor
and
sub
shr
fidivr
loop
outs
inc
ret
fwait
ds
mov
sbb
test
pop
fwait
pop
fs
in
fs
fistp
push
in
jp
pop
pop
fnstcw
and
jmp
jo
pop
pushf
xor
je
loope
cli
cmp
adc
inc
dec
lods
xor
fwait
sub
shl
enter
sub
mov
inc
retf
data16
xor
shl
mov
jns
mov
(bad)
or
add
stc
scas
sub
dec
in
mov
jmp
xor
cmps
scas
fcmovb
jb
mov
jne
sub
int
daa
retf
fistp
add
and
(bad)
jg
mov
dec
sub
mov
lock
push
push
cmp
jo
pop
or
push
pop
pop
cmp
xchg
stc
adc
enter
mov
shl
aam
sbb
mov
fisttp
mov
add
pop
fadd
daa
pop
push
jle
add
mov
shl
aaa
mov
push
mov
clc
lea
mov
data16
lea
fs
push
inc
ins
mov
inc
in
mov
lea
imul
mov
jae
push
rcr
jb
pop
xchg
cwde
cmps
adc
push
imul
mov
jbe
jecxz
es
dec
sub
sti
dec
outs
sar
outs
add
push
(bad)
into
push
adc
jle
xchg
jno
lahf
push
nop
sub
jg
(bad)
loopne
cs
xor
push
mov
inc
xchg
in
mov
sub
pop
lock
and
std
dec
pop
xchg
pop
sub
pop
or
pop
pop
enter
mov
(bad)
or
js
ins
cdq
sbb
test
push
adc
pop
mov
retf
int
jge
fwait
push
mov
dec
addr16
xor
jne
ret
repz
je
into
inc
jle
loope
sbb
bound
and
push
addr16
call
sahf
inc
mov
or
and
(bad)
pop
cmps
mov
repz
jnp
rcr
fcomp
cmp
sbb
push
jl
lahf
ror
dec
cmc
mov
dec
xor
pop
mov
jns
(bad)
jmp
mov
cmc
fcomp
inc
and
jg
stos
shl
xor
icebp
fldcw
xchg
mov
daa
mov
arpl
xlat
stc
jge
jbe
and
pop
dec
imul
sub
ret
mov
pusha
push
xchg
push
cs
xchg
push
jmp
add
stos
leave
sub
(bad)
cmp
jbe
cmc
cdq
inc
fdivr
ins
movs
daa
fsub
leave
mov
cmp
es
mov
and
movs
push
or
ror
cs
test
xor
sbb
aaa
loopne
test
or
adc
sbb
stos
xor
rol
(bad)
mov
(bad)
ret
dec
ficom
jbe
(bad)
pop
movs
push
div
fwait
push
bound
inc
dec
or
hlt
(bad)
jns
mov
sub
xor
xor
dec
push
jbe
add
xchg
lods
aam
cld
adc
mov
pop
out
repnz
loopne
movs
out
lock
cmps
fisub
adc
jo
test
and
es
sbb
ret
mov
call
dec
outs
in
adc
cmc
shl
mov
push
cmp
leave
and
data16
cmp
je
fnsave
xor
cdq
adc
push
call
push
clc
das
dec
push
add
mov
add
push
cmp
aaa
dec
repz
dec
push
jne
sbb
add
jnp
xchg
add
fdiv
xor
(bad)
dec
mov
bound
sub
xchg
pop
sahf
jecxz
sbb
dec
mov
arpl
sub
cwde
mov
out
test
ja
xchg
lods
jb
rcl
rcr
add
mov
mov
std
mov
(bad)
fist
jecxz
loopne
sub
mov
mov
adc
mov
jg
or
and
in
xlat
sbb
sahf
sbb
jnp
fadd
ins
test
push
inc
jge
mov
repz
jmp
pop
xchg
inc
inc
mov
or
sbb
jl
std
movs
lock
mov
pushf
sbb
push
jnp
push
fist
movs
sti
fldcw
les
adc
jns
aad
fisub
aas
stos
pop
outs
mov
retf
jb
pxor
mov
sahf
(bad)
mov
fwait
and
sub
xor
mov
dec
cmp
jmp
mov
mov
ins
sar
mov
ja
xchg
jnp
add
loopne
adc
mov
enter
scas
mov
fld
rcl
mov
cmc
loop
(bad)
sahf
je
inc
dec
jge
xor
cmp
jp
outs
call
cdq
push
loope
mov
dec
ins
leave
inc
aad
push
test
adc
jmp
dec
push
test
mov
xchg
cmp
lods
sub
fsubrp
push
xlat
cdq
jp
inc
dec
mov
aaa
sbb
aas
mov
jecxz
dec
out
cmp
sar
fnstenv
test
cmp
loop
pop
dec
cdq
push
adc
ds
xchg
pop
aaa
dec
ficomp
ret
stos
lock
and
jmp
cwde
rcl
add
add
add
adc
fisub
mov
push
jmp
bnd
(bad)
ret
push
or
mov
inc
(bad)
sysenter
dec
retf
add
(bad)
ds
shl
stos
push
dec
(bad)
out
sbb
sub
imul
sbb
push
xchg
sub
retf
xor
leave
mov
or
fstp
mov
aaa
push
loop
ret
call
cmps
movs
push
jg
loop
arpl
scas
sub
iret
mov
jl
stos
ins
push
pop
add
(bad)
jns
test
adc
push
bound
iret
imul
mov
add
jns
imul
mov
xor
imul
push
adc
push
ins
stc
popf
neg
(bad)
mov
cmp
jne
punpckhwd
rol
test
push
mov
ds
cwde
out
ins
sar
xor
pop
xor
mov
sbb
scas
daa
stc
frstor
test
jge
aaa
xchg
or
push
out
sub
mov
sbb
(bad)
std
sub
popf
(bad)
cmps
sti
pop
lds
les
je
inc
add
mov
xor
push
test
mov
dec
js
mov
jecxz
add
fwait
jmp
lods
push
fnstcw
dec
not
and
cli
jae
rcl
dec
mov
push
pushf
xor
sub
mov
imul
pop
scas
fistp
scas
cs
xor
(bad)
pop
out
hlt
lods
pop
(bad)
fmul
in
inc
js
sbb
stc
add
adc
push
mov
popa
jne
jb
scas
mov
je
lahf
lds
and
push
(bad)
in
mov
out
mov
bnd
jae
call
sbb
shl
call
ror
dec
inc
scas
iret
jle
in
retf
(bad)
mov
cmp
inc
jno
jle
ins
repz
pop
pop
call
aad
or
xchg
cmp
in
jb
ret
push
gs
fidivr
jne
cmp
icebp
das
fstp
xchg
cmps
(bad)
mov
mov
pop
xchg
std
and
js
fimul
xor
ror
mov
pop
mov
addr16
clc
xchg
cmp
push
mov
popa
mov
ss
aad
(bad)
mov
scas
das
test
ins
adc
push
push
cs
jp
(bad)
clts
jp
mov
fisttp
out
out
and
mov
mov
adc
(bad)
es
loope
(bad)
inc
popa
xor
fucomp
dec
mov
sbb
retf
pop
and
daa
mov
and
inc
mov
out
fs
jle
push
adc
mov
inc
mov
xor
mov
cmps
out
mov
add
sub
popa
aaa
idiv
jmp
enter
jnp
xlat
ret
push
mov
mov
daa
enter
inc
pop
jle
fisub
pop
shl
mov
ror
and
dec
cs
repz
jno
pop
or
sub
inc
call
xchg
xchg
sub
cmp
call
imul
or
pop
xor
jae
or
lds
xchg
add
hlt
jne
(bad)
out
nop
jnp
aam
push
sbb
mov
sub
imul
inc
idiv
out
push
cmp
retf
mulps
pusha
aaa
jno
call
push
sbb
dec
shl
pop
xchg
imul
(bad)
(bad)
cmp
int3
sbb
jne
ds
and
sbb
fdivr
shl
xor
adc
mov
lds
pop
popa
stos
cli
inc
or
(bad)
js
les
inc
jmp
out
mov
xchg
mov
add
arpl
pop
js
imul
fprem
mov
(bad)
inc
dec
mov
dec
add
popa
fstp
push
shl
add
ds
cmp
loope
aad
(bad)
imul
scas
jno
das
rcr
inc
push
lods
fcomp
jle
inc
mov
std
cdq
jmp
sbb
jns
inc
and
adc
cld
pusha
into
dec
(bad)
jno
loop
(bad)
mov
mov
xor
lahf
adc
and
rol
outs
xchg
cmp
ja
cmp
cmp
inc
push
xchg
ins
mov
inc
and
call
retf
pushf
and
xor
push
add
lods
push
ins
jno
fdivr
dec
push
mov
push
(bad)
fs
jbe
xchg
jge
andnps
dec
lahf
and
jle
ror
jmp
xor
jmp
aas
ja
push
cli
jo
jnp
jne
daa
retf
mov
loope
xor
into
ficomp
sahf
mov
sbb
clc
cmp
xchg
outs
push
stos
mov
mov
mov
fnsave
(bad)
ficom
pop
add
jne
mov
or
int3
stos
cmps
mov
shr
inc
or
fsub
in
cmp
xchg
loope
loope
and
repnz
inc
cdq
dec
sti
mov
and
mov
xchg
fs
loopne
idiv
sub
adc
xchg
out
out
inc
dec
pusha
push
ret
push
imul
arpl
call
pusha
adc
hlt
sbb
push
ret
mov
xor
jnp
add
imul
inc
jnp
ds
jne
add
mov
mov
imul
stos
loop
sbb
imul
bound
imul
mov
push
mov
add
xchg
cwde
stos
arpl
mov
inc
and
inc
gs
xor
aad
xor
adc
adc
inc
add
ficom
push
test
push
push
jae
dec
mov
sbb
add
test
mov
imul
(bad)
add
retf
scas
or
push
mov
xchg
dec
icebp
adc
aas
jecxz
push
ds
shr
(bad)
imul
retf
enter
jo
pop
call
lods
shl
leave
or
adc
aam
lahf
lods
(bad)
dec
mov
sbb
ja
sbb
call
and
jmp
cld
pop
pushf
xor
aas
fbld
xor
adc
loopne
sub
cld
fcmovnb
ss
pop
popf
clc
mov
adc
add
not
inc
pushw
mov
clc
setp
cdq
push
sub
xchg
mov
fldenv
into
mov
add
sbb
sub
pushf
cs
lea
mov
dec
mov
hlt
jl
jmp
arpl
pop
rol
mov
cwde
inc
mov
or
fs
add
jae
jecxz
push
sub
mov
dec
cmp
aas
ss
nop
das
add
aaa
imul
dec
jge
and
cmps
xchg
stc
jns
or
adc
retf
popf
sbb
fwait
call
mov
and
dec
pop
jns
add
and
gs
push
out
xchg
mov
test
pop
into
jmp
push
call
sub
or
jge
xlat
inc
and
xchg
jbe
push
mov
sbb
daa
fs
std
cmp
inc
daa
adc
sub
daa
fsubr
pop
mov
sub
rol
and
dec
addr16
cmp
sub
and
test
sbb
shl
mov
les
not
mov
stos
pop
and
fist
cmc
out
pop
adc
adc
iret
in
xchg
cmps
jno
mov
loope
inc
push
retf
repz
adc
xchg
iret
and
(bad)
dec
fwait
not
iret
rcl
int3
loopne
lahf
aad
mov
out
push
(bad)
repnz
push
inc
test
cmps
cwde
add
ror
mov
jge
rcl
shl
pop
cmp
cmp
mov
mov
mov
call
daa
dec
and
push
cmp
fmulp
inc
inc
cmc
aaa
test
pushf
add
fdivrp
(bad)
xchg
push
(bad)
fistp
xchg
sub
pop
sub
or
xchg
adc
icebp
movs
cdq
jb
out
push
call
fld
pop
outs
push
(bad)
pop
pop
(bad)
out
les
xor
push
mov
and
imul
mov
aad
jg
dec
daa
je
xlat
lea
leave
mov
imul
mov
inc
mov
jge
sub
xor
pop
fs
sbb
push
inc
sub
dec
mov
adc
cmps
mov
mov
rcl
or
sub
cmp
xor
aas
xchg
test
jg
xchg
inc
sbb
dec
pop
xchg
cmps
or
cmp
mov
sbb
test
push
int
xchg
retf
popa
mov
lahf
les
pop
jg
sbb
jg
dec
and
jnp
sub
xor
inc
test
cmps
lea
enter
fwait
adc
retw
jbe
or
shl
cld
stos
push
pop
push
dec
(bad)
cmps
imul
jecxz
xor
xchg
cli
pop
pushf
adc
mov
shl
push
dec
or
fwait
cmp
shl
movs
or
mov
(bad)
and
adc
fdiv
js
sbb
push
fdiv
movs
sbb
scas
lods
outs
pop
add
mov
and
lock
jno
mov
lods
stc
adc
adc
pop
pop
inc
xchg
hlt
movs
rol
in
aaa
push
and
add
aam
sub
or
les
fdiv
xchg
sbb
cmp
sub
je
jmp
adc
xchg
push
mov
add
sub
sbb
mov
test
(bad)
mov
sub
out
lahf
loopne
jl
fdiv
or
jne
xchg
inc
mov
inc
sub
aam
inc
mov
daa
outs
dec
clc
cli
rcr
wbinvd
pop
aas
xchg
inc
inc
popf
push
jl
xchg
inc
adc
jle
dec
adc
and
rol
pop
aas
movs
fistp
jp
in
leave
icebp
(bad)
enter
jle
inc
stos
inc
shl
sar
aad
push
mov
leave
jmp
jmp
inc
sar
mov
xor
adc
or
sub
add
test
jnp
je
sub
sbb
mov
icebp
inc
imul
in
in
sbb
sahf
inc
ss
fimul
lahf
pop
inc
mov
dec
out
icebp
sahf
scas
push
outs
mov
addr16
test
daa
call
or
inc
into
pushf
jno
(bad)
cld
fdivr
repnz
(bad)
mov
dec
push
(bad)
and
adc
sbb
lods
push
xchg
inc
sbb
fdivr
test
fs
std
in
jle
pop
loope
add
mov
sub
mov
xor
cmp
xchg
jge
in
test
or
outs
dec
dec
aaa
je
cmp
sbb
mov
shr
push
call
aas
push
int3
in
cmp
xor
add
retf
jo
xlat
dec
ret
out
jl
sar
jbe
mov
inc
cwde
fcom
test
mov
lahf
pop
dec
icebp
and
imul
jns
mov
mov
and
in
fwait
lods
inc
jl
push
mov
add
ret
daa
push
and
pop
add
and
mov
addr16
pop
das
icebp
add
xchg
popa
addr16
adc
lock
cmp
inc
push
enter
les
inc
jl
cmps
sub
or
mov
add
imul
mov
xchg
xlat
fcom
(bad)
xchg
out
jg
aas
aam
lods
add
data16
lahf
fstp
(bad)
imul
fsubr
or
hlt
fstp
or
les
iret
mov
pop
mov
cmp
cld
inc
mov
xchg
push
scas
or
movs
add
push
or
shr
mov
adc
adc
outs
pop
data16
mov
pop
sbb
std
imul
imul
xlat
call
loop
fcmovnbe
push
adc
jb
dec
sub
jge
es
cmp
add
gs
imul
dec
pop
scas
dec
neg
aaa
movs
aas
ds
repz
adc
xor
push
jnp
fdivrp
pop
(bad)
jo
arpl
test
add
or
push
not
inc
(bad)
out
in
dec
and
dec
std
iret
sub
daa
adc
cmps
or
jb
je
test
fisttp
xor
jp
add
cwde
test
push
push
pushf
(bad)
popa
jbe
lods
(bad)
les
ficom
es
dec
pop
dec
sub
inc
sub
and
das
mov
mov
jp
scas
in
push
out
(bad)
std
adc
std
inc
lea
jl
or
inc
mov
arpl
call
call
es
stc
lea
ins
jl
ret
(bad)
cmp
sbb
sub
int3
xchg
pop
ds
xor
push
dec
in
add
gs
fistp
ja
stc
add
cs
dec
sub
pusha
das
inc
push
jg
or
ja
aad
in
push
hlt
pop
outs
aad
pop
sbb
dec
loopne
into
mov
jne
and
fstp
ret
mov
push
(bad)
aad
cmp
inc
mov
fcomp
outs
stos
mov
popf
push
test
icebp
xor
add
scas
xchg
jecxz
mov
mov
jle
push
imul
jmp
in
test
jbe
(bad)
mov
mov
or
pop
jo
inc
or
ss
jbe
call
push
std
idiv
out
push
adc
cmp
outs
add
push
ins
inc
push
aas
add
xor
inc
dec
pop
mov
iret
mov
push
mov
mov
js
add
cmp
(bad)
out
fdivr
sbb
add
pop
outs
xchg
aam
sub
push
fstp
ins
arpl
mov
cmp
es
add
mov
pop
adc
movs
out
jmp
sbb
je
out
dec
ja
push
dec
and
jne
sbb
inc
pop
mov
pusha
call
ins
jbe
gs
sbb
jns
jns
aad
mov
lock
in
mov
mov
cwde
push
cmp
in
mov
das
add
mov
repz
nop
sbb
aas
inc
jecxz
fnstenv
les
xlat
xlat
mov
sahf
mov
mov
sar
push
cli
sbb
es
pop
adc
or
fisttp
add
out
outs
aam
jmp
adc
jae
sub
call
cwde
arpl
or
mov
(bad)
hlt
mov
push
adc
sahf
in
(bad)
repnz
aam
inc
loop
and
fdivrp
jae
stos
dec
test
retf
lock
and
aaa
jp
mov
test
call
cli
imul
jne
and
mov
xchg
push
pop
cmp
jle
sub
daa
pushf
in
mov
lea
dec
sbb
pop
push
cli
arpl
arpl
shr
mov
mov
adc
(bad)
sbb
vphsubwd
je
ror
jecxz
mov
sub
pop
jns
sub
or
cmps
lahf
fwait
xor
jbe
and
inc
mov
mov
or
jecxz
popf
test
fyl2xp1
push
adc
mov
sub
sub
jmp
call
mov
cmp
cmp
int3
cmp
iret
mov
push
gs
movs
dec
scas
stos
or
mov
sub
in
push
(bad)
dec
scas
cmp
stos
jge
repz
addr16
lds
cmp
mov
sbb
mov
dec
call
mov
test
mov
fdiv
mov
jne
sbb
mov
jge
test
stos
adc
movd
xor
push
out
add
lahf
enter
(bad)
fnstenv
popf
ins
inc
push
jbe
out
(bad)
and
aam
sahf
dec
xor
add
jecxz
mov
neg
pop
pop
sti
enter
and
xchg
xchg
ds
in
std
jb
jmp
sahf
aam
inc
mov
xchg
pop
mov
sub
push
mov
xor
jge
sbb
xchg
jo
cmps
popa
mov
test
shr
hlt
adc
sub
pop
add
and
(bad)
out
pop
or
sbb
jecxz
movs
neg
pop
les
inc
jne
xchg
rcl
xchg
retf
mov
cmp
into
int3
push
xchg
test
ret
mov
push
sbb
jo
leave
lea
mov
add
mov
mov
shl
test
add
test
iret
or
rcr
adc
loop
rol
enter
push
jmp
push
xor
ja
scas
xor
xor
(bad)
jno
and
inc
cmp
ins
fild
sub
xchg
aad
pop
mov
mov
cs
cmp
mov
scas
mov
cwde
sahf
es
cwde
jae
stos
stc
ror
cmp
cmp
mov
xor
not
jns
stos
cs
dec
out
fld
movs
ins
mov
sbb
test
dec
lods
inc
cdq
cs
sub
push
repz
imul
add
jp
sbb
addps
fiadd
xchg
or
sar
fist
(bad)
enter
jl
bnd
mov
adc
mov
je
mov
retf
repnz
mov
addr16
fdiv
mov
sbb
dec
jmp
mov
leave
jne
fld
mov
mov
lds
xchg
push
xchg
cli
xchg
inc
ja
push
outs
pop
(bad)
push
mov
icebp
ss
or
inc
and
sbb
loope
les
mov
and
pop
sub
in
xlat
jne
cmp
mov
sbb
sbb
ficomp
jae
stos
push
adc
jecxz
lahf
rol
enter
jg
shr
jmp
inc
call
movs
push
xchg
adc
movs
lods
xor
sub
add
outs
test
das
and
push
repz
in
or
les
dec
stos
ret
cmp
push
arpl
push
inc
mov
bound
adc
repz
pop
fdivr
jns
sbb
inc
scas
imul
jae
out
pop
sti
ficomp
retf
sahf
ins
cmps
dec
xchg
cld
cmp
mov
sub
jmp
add
es
fnstcw
mov
push
ret
xor
cmp
xchg
dec
loop
cmps
jg
xchg
push
stc
(bad)
jmp
pop
mov
repnz
mov
xchg
cmp
(bad)
pop
jl
lods
ins
outs
ja
test
cmp
dec
push
data16
push
fdivr
xchg
into
adc
xor
clc
xor
js
fs
push
in
jae
mov
jno
fst
hlt
(bad)
repz
push
push
outs
sbb
jl
ret
test
add
xchg
xchg
das
cmp
shl
pop
sar
dec
mov
mov
dec
je
cmp
lods
pop
add
pop
sub
inc
xor
inc
mov
leave
ror
imul
jle
(bad)
mov
popf
js
dec
ficomp
and
ins
ins
sar
cmp
rcr
jge
dec
hlt
push
and
and
fwait
jmp
sub
jp
pop
jo
inc
(bad)
cmps
mov
and
jne
in
xchg
mov
mov
fisttp
or
sbb
or
xchg
pop
sbb
popa
jne
jmp
jo
je
sbb
xor
loopne
cmp
cmp
(bad)
mov
adc
mov
aaa
lods
stos
test
pop
fld
stos
pop
or
add
mov
dec
imul
sub
lds
sbb
pop
sub
fisubr
ja
mov
sahf
lds
mov
mov
sub
aas
inc
popa
xchg
add
fistp
movs
sub
inc
(bad)
adc
test
mov
clc
adc
fs
dec
in
stos
outs
push
dec
stos
out
or
stc
rol
mov
jo
xchg
or
scas
mov
jle
xor
movs
add
neg
xor
jg
dec
push
xchg
mov
je
xor
pop
in
dec
mov
js
sub
adc
pop
pushf
retf
push
pop
jo
mov
xchg
pop
pop
loopne
loope
pop
in
mov
inc
add
lock
out
(bad)
sub
jne
xchg
cmps
cli
adc
bound
fcmove
data16
stos
xchg
loope
xchg
int3
jmp
xlat
xor
cmps
lahf
cmp
adc
adc
cmps
inc
sahf
adc
jle
ds
pop
or
adc
(bad)
loopne
lds
mov
and
adc
xchg
repz
lods
pop
add
mov
rol
dec
or
in
lods
dec
test
addr16
xchg
pop
sbb
repz
stos
mov
mov
push
call
aam
add
mov
mov
(bad)
icebp
dec
cwde
pop
cmp
(bad)
in
sub
js
or
outs
fld
xchg
and
push
in
inc
mov
nop
(bad)
and
or
push
push
xchg
fs
xor
mov
fadd
cmps
inc
sahf
cmps
jnp
popa
fiadd
test
fwait
repz
sub
jl
sbb
add
cmp
aad
mov
push
ret
cmc
push
sbb
jnp
push
jmp
and
xor
ds
dec
imul
ret
sub
repnz
addr16
xor
cld
(bad)
mov
xor
fbld
ins
dec
pop
js
mov
push
data16
fistp
bound
scas
sbb
rcl
pop
cmp
xchg
mov
sbb
push
nop
sahf
(bad)
sbb
cmp
xor
scas
clc
adc
and
lds
test
xor
sub
xchg
stos
mov
push
mov
mov
adc
data16
ss
pop
aam
mov
sub
push
inc
push
inc
jmp
rol
call
ins
(bad)
adc
fstp
or
rcr
or
and
ret
pushf
mov
fstp
sub
pop
movs
imul
ret
or
push
push
dec
adc
jp
mov
xchg
mov
imul
pop
retf
pop
outs
sub
jae
sar
out
popf
jg
cmps
and
mov
stos
push
dec
mov
cli
es
mov
retf
rcl
test
cwde
shl
jle
(bad)
cwde
or
dec
shl
pop
jb
out
or
sbb
push
jns
dec
pusha
push
pop
popf
push
inc
fld
add
pop
mov
or
jb
or
movs
fisttp
push
dec
inc
popf
mov
cs
in
cmp
iret
mul
mov
cld
lea
cmp
xchg
les
pusha
inc
push
ins
fwait
push
mov
dec
jp
cmc
ds
pusha
fidivr
mov
push
pop
pop
jmp
mov
bt
mov
and
fwait
adc
pop
out
mov
push
cmp
inc
loopne
xor
aam
jne
cdq
pusha
cmp
aas
stos
mov
scas
jne
out
mov
in
rol
movs
pop
cmp
push
sub
test
(bad)
xor
xchg
and
add
sub
movs
int
sub
mov
in
cmps
cwde
clc
or
rcl
jnp
push
mov
mov
fdivr
scas
push
outs
or
cmps
jb
imul
aaa
sbb
(bad)
sub
pop
js
cmp
in
das
jmp
mov
xchg
sbb
call
ins
or
xchg
adc
fsub
and
jg
fisttp
pushf
fwait
xchg
fnstenv
gs
and
mov
or
mov
or
(bad)
sti
pop
scas
pusha
mov
rol
cmps
enter
sbb
or
and
add
pop
outs
rcr
sbb
(bad)
(bad)
pop
xchg
add
xor
arpl
mov
clc
add
ja
or
push
loope
test
dec
sbb
stos
retf
mov
stos
sub
cmp
pop
sahf
ins
outs
jmp
xor
sub
ja
cmps
sbb
xor
aam
adc
pop
push
lock
dec
mov
pop
out
cmp
pop
clc
addr16
int
and
xor
push
dec
cmp
in
test
adc
or
popa
call
shr
(bad)
sub
ror
and
mov
xlat
fisubr
inc
and
sahf
push
mov
adc
lods
adc
icebp
das
std
aam
cwde
mov
jmp
stc
mov
rcl
jno
push
imul
add
add
mov
sbb
xor
push
fnstenv
leave
mov
fdivr
inc
adc
xlat
fbstp
test
iret
test
dec
(bad)
adc
sbb
mov
pop
push
push
sbb
(bad)
inc
ret
and
or
inc
add
mov
imul
mov
movs
cmp
pop
jb
shl
mov
test
sahf
js
push
outs
stos
or
call
xchg
push
jg
mov
cmp
push
add
out
retf
les
push
stos
call
(bad)
jle
test
or
mov
dec
mov
fld
bound
fsubr
push
cmps
mov
movs
pop
loope
fmul
fidiv
mov
shl
sub
js
icebp
mov
rcl
xchg
push
imul
imul
or
(bad)
lahf
dec
add
out
push
popf
cmp
bound
cdq
(bad)
pop
jae
shl
mov
and
imul
mov
js
dec
jge
jmp
mov
adc
pop
pop
inc
cdq
jle
sub
std
gs
cdq
enter
dec
cmp
inc
adc
ss
ror
leave
xlat
push
int3
hlt
pop
cmc
cli
mov
outs
xchg
jg
cld
out
mov
jnp
mov
scas
push
pop
repz
add
mov
cmp
cmc
test
mov
sbb
add
ror
cmp
daa
or
jecxz
mov
mov
jg
jle
mov
push
cmp
pop
call
mov
or
pop
test
fs
push
dec
movs
stc
sub
cmp
pop
pushf
push
and
stc
bound
test
dec
mov
mov
dec
ret
jmp
mov
mov
jge
popa
hlt
or
jbe
sub
push
popfw
mov
xor
and
xchg
or
popa
lods
stos
or
mov
enter
loop
and
retf
and
add
mov
sbb
pop
jae
popf
xchg
mov
enter
xlat
mov
shr
or
mov
mov
inc
mov
idiv
shl
mov
clc
dec
inc
adc
mov
dec
inc
push
ffreep
cmps
add
mov
clc
inc
push
cmc
or
jno
arpl
add
pop
sub
out
inc
push
dec
mov
or
cwde
imul
arpl
out
fisttp
mov
fmul
xchg
mov
iret
inc
pop
leave
xchg
call
div
mov
adc
std
mov
popa
pusha
arpl
cmp
sti
mov
imul
or
pop
or
ins
shr
or
cmps
pop
mov
lahf
sar
xor
cs
ins
data16
out
or
and
out
cmp
cmp
rol
adc
out
xchg
dec
or
lds
mov
call
xor
jo
into
out
push
lahf
fimul
or
xchg
cmps
sub
mov
pop
dec
jg
and
inc
xor
mov
xchg
outs
stos
jnp
mov
push
cmp
xchg
cmps
add
lock
cld
sbb
adc
loopne
xchg
fistp
repz
cmps
ss
push
jae
scas
dec
pop
mov
or
imul
adc
and
(bad)
bound
cmp
in
pop
(bad)
aaa
dec
pop
adc
dec
xor
test
mov
mov
stc
mov
fistp
adc
loop
(bad)
in
enter
sahf
or
and
iret
mov
adc
xor
loop
and
ins
adc
fs
or
dec
stos
arpl
rcl
shr
push
pop
jmp
ret
fsubr
rol
fucom
inc
xor
(bad)
pusha
call
cmps
adc
mov
mov
mov
or
pop
adc
leave
cmp
dec
fs
(bad)
popa
pop
push
mov
mov
and
enter
xlat
test
jmp
std
xor
jp
daa
bound
sub
popf
add
sub
jns
call
dec
and
pop
inc
cmps
jmp
pop
add
mov
jecxz
lods
call
mov
outs
out
ret
xchg
(bad)
arpl
in
pop
test
mov
rcr
mov
mov
cdq
or
arpl
arpl
pop
stos
xchg
xor
or
inc
mov
mov
imul
inc
lds
mov
ins
and
and
cmps
push
push
popf
std
xor
mov
imul
inc
fs
arpl
scas
mov
adc
enter
and
shl
icebp
and
push
ret
(bad)
sbb
pop
enter
fcmovnbe
xchg
sahf
or
push
ror
pusha
sahf
push
dec
or
ret
call
sub
dec
fwait
mov
popf
ret
ds
shr
jb
je
rcr
cmps
mov
scas
inc
(bad)
xor
and
sbb
clc
add
or
inc
fwait
pop
add
popf
cmp
stc
pop
or
gs
and
mov
imul
cmc
mov
mov
jns
mov
pushf
call
ret
inc
out
pop
pop
xor
inc
adc
loopne
ins
mov
adc
xchg
imul
in
mov
cwde
(bad)
inc
and
not
pop
repnz
les
ja
call
mov
scas
xchg
(bad)
cld
pusha
xchg
rcl
ss
call
pop
mov
std
adc
das
data16
xlat
jmp
je
add
sub
push
daa
mov
pop
dec
int3
stos
jmp
add
sbb
jmp
xchg
pop
xchg
ins
fs
fbstp
inc
mov
and
test
outs
int
ds
jns
mov
add
data16
sbb
mov
(bad)
sar
inc
and
shl
jb
ins
in
add
call
js
aaa
mov
shr
cmc
stc
cmps
retf
ds
sbb
iret
sbb
into
or
jl
xchg
mov
ins
or
inc
and
aas
rep
sbb
xlat
fwait
add
push
lods
test
into
add
xor
jecxz
(bad)
push
xor
adc
ins
push
popf
push
and
mov
xchg
jo
add
call
aam
and
fs
sti
cmps
lea
mov
sahf
and
out
and
cmp
inc
pop
cmp
sub
loop
dec
xor
pop
ret
jbe
xchg
push
daa
std
scas
sub
dec
mov
mov
pop
xor
shl
ficom
sub
pop
(bad)
iret
xchg
xchg
push
fcomp
cmp
lds
jp
out
inc
stc
pop
bound
xchg
add
sbb
add
jb
jnp
test
loopne
cmps
sahf
add
adc
jp
sbb
push
xchg
pop
pushf
pop
pop
stos
lea
jno
es
mov
and
(bad)
outs
pop
(bad)
adc
xchg
mov
(bad)
xor
jne
mov
xor
or
push
inc
and
xor
jmp
mov
std
lods
push
call
dec
(bad)
ss
pushw
dec
hlt
mov
cmp
clc
cmps
push
cmp
or
mov
jns
dec
icebp
rcr
push
push
(bad)
sbb
lock
jecxz
or
in
cmp
out
adc
jmp
xchg
loope
(bad)
fcomp
add
out
or
or
cmp
push
std
leave
enter
das
addr16
jl
mov
rcr
lahf
or
cmp
adc
add
add
add
pop
cmp
xchg
(bad)
out
jmp
iret
jb
adc
jne
ret
push
push
movs
jp
arpl
imul
cmp
push
jge
xchg
xchg
stos
aaa
faddp
xchg
fdivr
inc
inc
sub
sub
fdivr
push
fcomip
ins
gs
mov
adc
xchg
inc
mov
mov
dec
xchg
jl
push
push
xor
and
nop
adc
ss
mov
dec
int3
ret
cmp
popa
addr16
inc
pop
mov
xor
sbb
mov
mov
jnp
add
movs
dec
mov
icebp
mov
and
pop
adc
out
xor
inc
jp
ret
movs
and
fmul
xchg
std
sub
lods
fsubr
scas
cmp
out
mov
fisubr
div
and
sub
(bad)
ret
repz
cmp
mov
aas
mov
mov
ds
mov
lock
adc
je
mov
lods
scas
and
push
cmps
int3
(bad)
call
xchg
fidiv
and
dec
retf
aaa
cmp
popf
lahf
cmp
popa
adc
test
mov
enter
das
jecxz
mov
clc
hlt
pop
xor
xchg
in
cwde
xchg
scas
aaa
jp
cli
jg
jne
jnp
jnp
xchg
mov
aad
and
(bad)
sub
dec
imul
dec
lea
cmp
dec
mov
dec
jb
rcr
mov
mov
test
cld
cmps
in
or
mov
int3
leave
and
fnstsw
mov
daa
sub
xlat
jno
xchg
ds
in
cdq
outs
sbb
stos
cmps
popa
or
inc
and
inc
cld
ins
movs
sar
mov
test
cmp
sahf
sub
jo
dec
cmp
mov
sbb
xchg
out
(bad)
cld
mov
cs
sub
adc
into
jmp
xchg
clc
test
in
pop
sbb
outs
ret
daa
aad
frstpm(287
cmp
pop
shr
ds
xchg
iret
jmp
mov
push
cwde
pop
mov
jle
push
inc
loop
mov
jge
mov
int
fld
dec
cmp
mov
dec
sahf
mov
neg
jmp
test
repz
mov
iret
dec
mov
pop
sbb
cmp
push
dec
ins
push
and
push
loope
loope
call
clc
sbb
lock
popf
sub
rol
fild
pusha
and
sub
ds
jp
clc
inc
clc
popf
aam
ins
imul
fwait
sbb
aam
and
cmp
enter
(bad)
popf
jnp
and
mov
and
(bad)
movs
ror
ins
or
xor
xchg
rcl
or
mov
xor
xor
add
cmc
nop
jae
jge
cwde
int
or
mov
dec
leave
mov
xor
mov
popa
sub
fimul
xchg
inc
dec
mov
push
in
xchg
aaa
cmp
(bad)
jmp
sub
sub
mov
ret
retf
sub
shl
loop
js
sbb
mov
xchg
sbb
jmp
add
sub
cmp
and
xchg
(bad)
into
les
mov
hlt
push
adc
xor
xor
div
cdq
aad
outs
femms
jecxz
pop
mov
mov
or
jmp
dec
fisub
frstor
(bad)
fisubr
or
adc
inc
pop
xor
inc
jnp
jecxz
adc
mov
aad
ins
inc
cmp
lods
pop
ja
dec
push
test
addr16
enter
push
in
scas
shl
js
fsubr
push
jne
(bad)
jp
repnz
iret
xor
aaa
mov
and
rcl
inc
inc
mov
int3
pop
push
je
push
push
push
inc
cmp
sub
add
xchg
sub
loope
jle
xor
iret
cmp
cli
js
js
test
push
icebp
scas
xchg
out
movs
test
adc
and
mov
lahf
sbb
(bad)
cmp
mov
jb
stos
ret
xchg
mov
jo
clc
inc
sbb
shl
(bad)
jp
call
js
sub
fistp
dec
push
jne
jne
(bad)
leave
nop
sbb
and
sti
outs
inc
dec
push
gs
add
popa
adc
mov
repnz
outs
pop
dec
scas
das
(bad)
nop
push
mov
je
inc
das
adc
push
in
out
sbb
push
loop
dec
gs
retf
mov
dec
aad
add
pop
push
mov
mov
jmp
in
inc
xor
sub
and
pop
pop
sbb
adc
ja
retf
add
fild
and
mov
jmp
jae
jne
xchg
xchg
imul
mov
pop
cld
mov
and
movs
(bad)
gs
push
pop
test
jae
retf
ins
jns
dec
idiv
into
fcom
pop
mov
lea
fisub
ss
test
ins
es
mov
pop
in
mov
imul
ss
pop
ss
imul
jb
movs
call
cwde
aad
xor
repz
cli
push
pop
cmc
mov
(bad)
test
repnz
sub
popf
pop
mov
push
and
inc
or
sub
sbb
test
pusha
leave
sahf
in
jnp
xor
or
and
in
es
pop
cld
mov
and
das
into
mov
add
dec
data16
scas
je
stos
stos
pop
call
pushf
mov
add
std
int3
out
fwait
in
test
into
jmp
or
shr
fidivr
fcom
push
es
push
rol
call
and
(bad)
cmps
xor
in
imul
mov
cmps
out
pop
int3
mov
mov
and
cmp
cdq
aam
sbb
in
sub
mov
and
mov
dec
test
pop
mov
shr
js
test
jno
or
cmp
rcl
sub
xor
mov
sbb
pop
imul
sahf
fdiv
loopne
adc
dec
jmp
mov
xchg
ror
sbb
(bad)
mov
das
or
push
push
ret
xor
mov
and
rcl
mul
call
lock
jl
repz
jmp
xor
addr16
adc
rol
sahf
ins
(bad)
push
pop
call
or
sbb
dec
mov
jle
or
mov
push
ja
rol
test
leave
ins
lea
sbb
sub
mov
test
fs
ds
sbb
aam
xor
sub
das
and
jl
add
lahf
sub
or
mov
sub
jmp
addr16
xchg
les
or
mov
sbb
icebp
fidiv
mov
push
rol
or
jmp
pop
cmp
(bad)
mov
lods
pop
ins
loopne
push
repz
mov
sbb
jle
ss
xchg
nop
or
cli
jnp
(bad)
mov
into
pop
adc
int3
mov
and
outs
repz
int
lods
(bad)
test
sbb
int
xchg
xor
in
add
ss
inc
pop
push
(bad)
mov
mov
loopne
jmp
ins
mov
cmp
test
mov
ror
mov
jno
mov
outs
das
mov
outs
fisubr
mov
push
push
test
stos
test
sti
mov
call
repnz
sbb
repz
repnz
retf
enter
dec
push
mov
and
mov
retf
retf
sbb
pop
shr
std
xor
lea
xchg
les
das
lea
or
(bad)
xchg
scas
adc
jge
jmp
mov
test
push
repz
pushf
ins
dec
xchg
movs
enter
pop
aaa
mov
les
adc
shr
cmp
fdiv
mov
pushf
in
push
fsubr
or
jg
jae
es
jmp
popa
xor
addr16
xor
idiv
adc
cmp
in
push
shl
add
pop
jb
xor
mov
loope
(bad)
push
shl
jo
shl
sub
bound
pop
movntq
jmp
or
cs
push
adc
lea
mov
mov
or
mov
out
in
sti
xlat
jnp
lods
dec
lds
or
push
test
jne
cwde
mov
inc
fistp
jp
mov
pop
(bad)
dec
xor
mov
mov
retf
dec
nop
push
out
neg
push
push
and
mov
dec
dec
add
push
into
shr
xor
or
or
adc
cmp
call
mov
dec
fldenv
lahf
std
inc
xchg
bound
mov
les
and
test
loope
cmp
(bad)
adc
dec
xchg
xor
xchg
popa
sbb
test
add
pop
xor
sbb
cli
inc
mov
inc
dec
mov
scas
pop
push
jge
cmp
out
pop
pop
imul
adc
mov
ja
mov
scas
jae
mov
xlat
push
jp
mov
add
xor
cmp
mov
js
dec
pop
xchg
push
inc
cmp
mov
(bad)
mov
(bad)
push
test
mov
test
test
sar
(bad)
and
mov
mov
lock
mov
lods
fidiv
ja
cmp
lods
xor
ret
test
nop
std
loope
jno
or
dec
xchg
dec
ja
sbb
pop
imul
adc
sub
mov
(bad)
dec
lds
das
leave
cli
jno
mov
js
loop
leave
sub
push
pop
dec
sbb
xlat
popfw
sub
mov
mov
xchg
push
jo
and
sub
je
outs
outs
dec
xchg
pop
(bad)
cmc
xchg
adc
jl
sub
or
je
mov
xchg
jno
or
mov
sub
gs
mov
ins
dec
cmps
mov
push
fdiv
add
pusha
mov
outs
movs
dec
or
repz
lahf
lods
pop
mov
pop
xor
loop
(bad)
pop
pushf
or
mov
ss
outs
pop
fistp
push
ja
adc
mov
jae
add
lds
(bad)
cli
cld
fcomp
dec
es
fwait
in
sahf
imul
test
test
imul
popf
mov
sub
popa
mov
or
inc
sub
push
cwde
leave
(bad)
dec
into
call
xchg
call
mov
pushf
mov
xor
movs
mov
into
jae
jnp
sub
inc
cmp
push
mov
sahf
rol
mov
mov
sub
ins
add
jecxz
dec
dec
sub
cmp
mov
push
fisub
lds
jg
pop
addr16
add
movs
stos
inc
jmp
or
cpuid
imul
xchg
stos
add
cli
lahf
int3
inc
xor
(bad)
sbb
movs
pushf
xor
add
mov
stos
daa
cmp
aas
pop
out
sahf
xchg
inc
sbb
(bad)
mov
nop
inc
neg
loopne
adc
popf
ins
xchg
mov
xchg
push
cmps
retf
mov
lods
push
test
popa
xor
lds
out
dec
es
cmp
mov
dec
adc
or
and
mov
cmp
sbb
push
stos
in
push
in
repnz
mov
or
xchg
adc
es
out
mov
pop
add
scas
(bad)
imul
adc
cs
sub
mov
inc
sbb
movs
pop
daa
shl
and
lods
dec
sbb
sbb
bound
cdq
jbe
jb
ret
mov
sub
jmp
cmp
shl
das
cmp
mov
mov
movs
cli
les
clc
int
xor
xchg
rcr
(bad)
fdivr
push
add
push
test
mov
out
enter
jbe
repz
les
(bad)
jno
test
lds
sub
xchg
mov
xchg
test
out
outs
dec
ror
gs
js
mov
retf
js
or
in
adc
aad
scas
arpl
scas
loopne
mov
sbb
mov
into
mov
test
nop
sub
(bad)
out
xchg
les
cmp
cmp
push
inc
jmp
(bad)
xchg
(bad)
cdq
int3
push
(bad)
cmp
pushf
outs
mov
and
cs
movs
jle
fcomp
xchg
xchg
and
dec
pop
jnp
je
push
cmp
cld
test
dec
mov
mov
sub
test
movs
popf
sar
xor
inc
mov
enter
mov
jmp
stos
ret
scas
nop
dec
jle
dec
hlt
xor
or
mov
mov
sub
adc
ret
pushf
jle
jl
push
scas
lahf
push
adc
shl
jmp
xchg
jp
mov
xor
add
mov
or
popf
adc
add
mov
pop
dec
ja
fist
mov
jge
xchg
test
add
sbb
mov
fcmovnu
add
in
scas
mov
inc
mov
clc
xchg
gs
nop
cs
sub
cmp
adc
lds
into
add
jmp
and
mov
mov
test
in
test
mov
in
and
mov
sub
fsub
mov
mov
jns
mov
int
aas
pop
into
(bad)
cli
or
rcl
jo
shr
or
inc
mov
shl
pop
in
mov
getsec
nop
pop
call
add
dec
test
dec
sub
aas
leave
(bad)
rcl
xor
sub
out
outs
add
push
pop
sbb
jb
lods
iret
sbb
push
mov
js
jle
out
jle
push
pop
outs
in
idiv
scas
push
(bad)
rcr
sbb
ret
mov
push
fild
jle
mov
add
add
fild
(bad)
enter
add
dec
jns
fnclex
xor
cld
out
ror
dec
mov
jno
sub
adc
jp
jnp
lock
pusha
jb
or
push
xchg
je
repz
jle
fcmovnu
cli
mov
add
pop
mov
fwait
push
popf
mov
frstor
imul
cmp
leave
(bad)
movs
xor
pusha
pop
clc
cwde
xchg
lea
push
sti
mov
mov
mul
push
cld
xor
jp
push
dec
mov
sub
jmp
into
jmp
stc
xchg
push
in
jae
mov
jnp
push
dec
xor
rcr
xchg
pop
es
fbld
mov
cmp
jle
test
and
sub
pop
inc
xor
clc
pusha
lods
lods
pop
(bad)
repnz
pop
repnz
mov
jge
ret
ret
sub
dec
stos
mov
nop
jge
xchg
outs
mov
push
repz
mov
mov
adc
push
xor
std
iret
shl
sbb
cmps
mov
test
xor
xor
dec
dec
das
hlt
icebp
push
retf
sub
xchg
or
fnstsw
push
mov
xchg
sbb
inc
cdq
push
cmp
mov
enter
dec
mul
in
int
lods
and
int
arpl
xor
daa
mov
jmp
lahf
push
mov
sub
nop
inc
or
aam
ret
cli
inc
(bad)
ins
jge
or
clc
inc
jo
shl
push
pop
sbb
jmp
xor
test
(bad)
mov
leave
fwait
aad
sbb
and
sbb
lea
(bad)
mov
xchg
mov
push
or
test
jl
inc
les
ret
(bad)
sub
jmp
mov
jmp
iret
pop
fwait
je
push
imul
outs
mov
sbb
iret
xor
lahf
ret
xchg
mov
cmp
in
das
rol
jl
and
(bad)
dec
push
not
cdq
add
xor
dec
je
dec
ss
mov
xchg
in
je
mov
inc
fwait
pop
cld
shl
mov
xor
or
dec
neg
test
pop
push
(bad)
repnz
mov
mov
das
or
pop
cmp
xchg
popa
test
and
mov
push
iret
jmp
mov
cmp
jnp
mov
sbb
imul
jle
neg
int3
pop
cmc
push
cld
cmp
dec
cs
test
add
test
mov
inc
inc
sbb
movs
cmc
cmp
mov
rcl
dec
mov
inc
mov
mov
jmp
sbb
std
int
xchg
add
and
push
xor
fadd
cld
out
mov
dec
out
jne
inc
xchg
pop
mov
xor
fbstp
jbe
xor
pop
(bad)
mov
jae
out
aam
mov
outs
into
mov
adc
dec
pop
or
outs
out
pop
adc
ins
mov
jae
repnz
sbb
hlt
xchg
lock
mov
mov
test
mov
push
lods
and
in
sbb
stc
push
pop
jnp
lods
sahf
sti
in
pop
ret
mov
jbe
movs
or
icebp
repnz
push
xchg
mov
mov
mov
out
mov
mov
cmc
rcr
mov
loop
or
icebp
cwde
cmp
call
pop
inc
pop
add
pop
sub
adc
aas
inc
shr
(bad)
fimul
cmp
push
push
push
aad
xchg
xlat
shl
xchg
lock
cdq
in
push
imul
push
jnp
jg
push
mov
mov
dec
fadd
mov
pushf
lock
shl
sub
cmps
or
and
fs
mov
es
adc
out
xor
dec
xor
out
xlat
in
mov
jae
dec
arpl
add
icebp
push
cmp
add
and
stos
gs
xor
clc
fcom
mov
inc
in
daa
movs
aam
xchg
xchg
fistp
imul
mov
sahf
jns
dec
ins
cmps
pushf
neg
jne
xor
xor
repz
aam
push
xchg
jge
push
mov
sbb
inc
mov
out
int3
push
repz
jl
jno
or
xor
sbb
gs
pop
mov
popf
dec
lods
pop
jl
mov
mov
stos
aad
mov
aas
leave
repz
movs
mov
jp
mov
xchg
gs
sub
and
out
pop
bnd
test
mov
mov
or
(bad)
mov
mov
ja
outs
mov
or
mov
inc
and
xor
rol
jno
xchg
dec
sbb
test
inc
push
sbb
popf
xor
das
(bad)
xlat
iret
aas
adc
and
pop
aaa
inc
adc
nop
sbb
aaa
mov
or
xchg
mov
gs
mov
jns
jp
push
(bad)
movs
mov
jbe
cmp
cdq
jmp
test
jo
cmp
retf
not
call
sbb
sbb
inc
fisubr
or
mov
mov
pop
xor
(bad)
adc
shl
cmp
shl
ds
in
add
les
adc
sti
jp
into
jmp
xor
xor
inc
push
add
lea
dec
jl
inc
or
add
xchg
in
mov
scas
(bad)
fistp
fild
mov
fld
adc
dec
call
in
mov
out
inc
aaa
fnstsw
dec
sahf
xor
xor
in
push
cmp
fistp
add
fs
and
jbe
cmps
pusha
add
repnz
adc
or
fild
repnz
mov
cmp
repz
mov
add
jns
cmp
inc
nop
xlat
stos
js
into
and
fadd
call
shl
cld
xor
or
cmp
pop
ror
leave
dec
lahf
pop
les
push
cmps
shl
cmp
dec
dec
sar
clc
movs
js
cwde
xor
imul
test
jmp
push
or
xchg
nop
lock
push
(bad)
iret
ret
inc
adc
jb
mov
ins
js
in
fwait
out
mov
cmps
call
mov
jl
ins
fs
mov
xor
in
pop
outs
popf
arpl
retf
fist
(bad)
(bad)
or
adc
mov
jns
mov
leave
pop
movs
xor
mov
push
int
add
movs
(bad)
adc
inc
sub
fimul
sbb
lahf
in
(bad)
rcr
not
jle
jmp
lock
rcl
mov
imul
xchg
lds
xchg
cmp
inc
(bad)
sub
scas
test
and
sbb
ja
push
adc
ss
outs
or
or
ins
(bad)
sub
inc
int
cmp
ja
or
aas
(bad)
in
psubw
and
mov
fisttp
in
cmp
jns
pop
pop
xlat
sbb
arpl
jg
adc
cmp
or
xor
jg
xor
jecxz
neg
push
lds
lods
pop
xchg
cmc
jg
mov
sub
push
fstp
in
fiadd
nop
dec
cmp
jp
cs
add
mov
sbb
and
std
fld
jmp
cmc
fadd
xor
(bad)
cdq
ja
ror
ins
stc
jmp
inc
js
movs
and
mov
or
cs
mov
mov
mov
and
pop
cwde
imul
movs
jae
pusha
jecxz
jmp
mov
retf
adc
mov
ins
or
shr
mov
arpl
jle
test
pop
dec
int
test
adc
and
or
cmps
cmp
repz
mov
add
ja
mov
xor
push
jb
xor
sub
mov
data16
fistp
jmp
sub
add
out
push
adc
cmp
push
mov
aaa
jno
pop
out
sub
mov
mov
jg
es
pop
test
stos
xchg
outs
xlat
jo
add
dec
fistp
and
jnp
jo
test
or
ret
enter
daa
pop
and
jecxz
fdiv
movs
mov
or
jp
dec
out
mov
(bad)
jecxz
xlat
aaa
je
dec
push
sbb
and
mov
leave
adc
cmps
push
dec
xor
add
iret
mov
ret
ret
pop
push
mov
adc
scas
enter
pusha
pushf
outs
cwde
xor
mov
inc
aas
xlat
pusha
sbb
sub
sub
fsub
cmp
add
sub
sub
rcl
inc
dec
xchg
test
enter
(bad)
jg
pop
push
pop
xchg
mov
lods
movs
cmps
lahf
push
or
and
pusha
push
jmp
(bad)
mov
jge
int3
xchg
mov
mov
into
xchg
xchg
mov
mov
je
out
inc
jmp
addr16
push
pop
js
lea
scas
adc
add
inc
cs
mov
lods
sub
or
cdq
mov
mov
out
sub
mov
adc
leavew
dec
adc
cld
and
jmp
xchg
test
mov
pop
(bad)
dec
push
pop
or
pop
pop
out
pop
cli
dec
sub
(bad)
push
cmp
aas
sahf
adc
inc
and
xchg
daa
shl
inc
stos
in
test
or
jmp
scas
pop
jecxz
lock
je
push
(bad)
xor
add
xor
inc
and
sbb
and
and
add
stos
ss
ds
hlt
sub
ins
xlat
xchg
scas
cmps
pop
pop
mov
mov
sub
jecxz
je
and
jmp
dec
icebp
out
loope
inc
add
mov
dec
gs
xchg
stos
dec
adc
pop
inc
xchg
adc
inc
inc
jmp
mov
test
pop
aad
xchg
xor
mov
shl
mov
in
adc
xchg
mov
inc
call
aad
sbb
jne
push
stos
mov
movs
pop
fcom
mov
and
and
xor
lods
cwde
inc
in
sub
ffree
xor
pop
mov
leave
pushf
sbb
mov
icebp
and
inc
mov
test
cli
fcomp
jmp
or
arpl
(bad)
sub
outs
mov
fistp
xor
jno
jge
mov
or
(bad)
repz
retf
fsub
not
xor
xlat
stos
sti
ret
inc
retf
adc
aaa
mov
mov
and
cmp
dec
cmp
sub
out
es
dec
push
mov
lahf
push
add
ret
add
adc
or
stc
out
rcr
aas
hlt
adc
pop
cmp
out
fwait
pop
cwde
jnp
sub
fldenv
call
add
outs
or
lea
retf
xor
pop
push
ds
adc
sub
jge
mov
sti
xor
mov
out
dec
mul
push
ins
test
jne
aaa
mov
int
outs
arpl
add
mov
test
ss
push
jnp
frstor
stc
cld
xlat
push
or
or
mov
pop
mov
jb
jnp
repz
in
add
(bad)
ss
or
sub
fwait
xchg
mov
push
mov
xchg
sub
or
or
fimul
stc
sub
rol
retf
jp
jp
dec
xchg
jbe
add
sbb
pop
scas
lock
popa
cli
and
mov
mov
mov
mov
stos
push
or
mov
jae
ror
jns
add
lods
and
aas
sti
adc
mov
mov
cmc
shr
jmp
jae
xlat
adc
imul
cs
sub
les
call
(bad)
(bad)
sahf
or
ins
bound
das
ss
add
xchg
cmp
aaa
mov
mov
mov
scas
loopne
jp
pop
test
clc
dec
je
lods
and
loop
or
je
pushf
and
push
and
cdq
jge
sub
lods
cs
ins
imul
out
add
daa
or
mov
ds
sub
popf
popf
ret
test
dec
neg
adc
test
inc
aas
xor
adc
cmps
es
mov
mov
xchg
test
add
ror
jne
xchg
xchg
in
arpl
jns
inc
xchg
sbb
push
mov
into
xchg
push
les
mov
mov
arpl
sbb
aam
outs
out
popf
add
inc
jmp
test
mov
lahf
jno
mov
shl
mov
adc
pop
repz
sub
sub
push
lds
jecxz
rol
rcl
ror
dec
mov
sbb
sub
jo
cwde
adc
mov
jae
aad
scas
aam
mov
sub
mov
mov
mov
aaa
jno
movs
dec
xchg
and
lods
sub
mov
push
out
xchg
imul
loopne
fld
and
(bad)
in
mov
retf
in
xor
stos
mov
fwait
es
out
inc
and
inc
mov
push
scas
push
push
das
lods
aaa
cmp
nop
push
pop
xchg
dec
push
mov
(bad)
neg
rcl
ins
xchg
into
imul
cmp
push
pop
inc
sar
call
ret
lea
fnsave
xchg
or
inc
call
shr
adc
xor
inc
adc
loope
mov
ins
pop
xor
jl
scas
fwait
into
sbb
cmp
add
movs
xchg
fs
push
mov
(bad)
jnp
xor
sbb
jp
dec
stc
sbb
imul
int3
daa
sub
cli
clc
inc
pop
add
retf
fs
shl
pop
ins
adc
or
popa
adc
and
xor
sbb
fdivr
dec
sub
rcl
jl
clc
adc
(bad)
pop
or
mov
stos
ret
xchg
mov
pop
mov
rcr
das
adc
adc
sub
shr
sar
cli
or
loope
or
jecxz
mov
add
mov
sub
jecxz
fdiv
xchg
lods
pop
sub
inc
fs
push
xchg
(bad)
or
push
push
xchg
jb
fisubr
sbb
mov
lods
or
and
add
imul
sbb
jmp
push
(bad)
xchg
dec
int
inc
cmp
add
adc
cmp
mov
cmovg
repz
shl
pop
sbb
jnp
in
inc
fwait
or
pop
leave
push
movs
int
mov
inc
mov
lock
cld
retf
call
movups
in
cdq
aam
and
push
adc
in
cmp
jbe
out
cdq
fmul
cli
push
cdq
pop
jae
mov
fs
std
sti
lods
cmps
push
cmp
mov
mov
cmp
outs
xorps
bound
add
mov
pop
rol
aaa
xacquire
(bad)
cmp
nop
xlat
outs
sbb
push
popa
or
mov
stos
mov
movs
pop
out
aas
fwait
jmp
add
adc
sub
lods
shr
add
xor
cmp
xchg
hlt
fsubr
outs
bound
and
sub
movs
(bad)
cwde
mov
cmp
sub
inc
inc
jnp
xchg
mov
fwait
inc
jbe
pop
fcomp
dec
mov
ja
cdq
mov
inc
call
jno
lods
stc
sbb
and
sbb
cli
push
jecxz
(bad)
(bad)
popf
nop
inc
xor
push
or
stos
jge
pushf
call
pushf
imul
test
aaa
shl
sbb
xor
pop
loop
iret
xchg
push
cmps
xor
xor
fs
cmp
adc
fsubr
loopne
inc
adc
and
das
aam
in
adc
js
cmp
mov
push
jecxz
push
dec
push
stos
mov
jb
sbb
and
push
or
imul
push
push
xor
into
popf
sbb
jmp
imul
cmp
jmp
add
mov
cmps
mov
in
ret
inc
aad
ror
mov
rcl
cmp
outs
mov
scas
mov
jmp
push
and
jg
ret
scas
push
jle
rol
and
mov
shr
jnp
pop
pop
mov
call
or
pusha
ins
retf
repnz
test
call
sbb
scas
push
sbb
out
int
div
out
mov
mov
bnd
mov
push
pop
mov
lea
mov
jl
lock
sbb
cmps
push
outs
sub
cmp
mov
mov
in
mov
or
aad
shr
mov
in
xchg
imul
es
cmp
push
hlt
or
mov
lods
adc
shl
and
push
adc
xor
pop
es
dec
and
lahf
mov
jecxz
outs
jnp
xor
retf
push
ds
xchg
and
fsub
ds
cs
out
popa
and
out
fild
outs
mov
sbb
mov
mov
or
xchg
fcmovbe
es
out
ins
pop
retf
cmp
aam
clts
ror
jmp
fdiv
adc
pushf
adc
into
rol
leave
and
dec
bound
pop
(bad)
and
rol
das
shl
xchg
jo
clc
or
arpl
add
pop
cs
mul
stos
stos
dec
mov
mov
mov
es
mov
and
jne
and
jo
jp
xor
cmps
cmp
cdq
pop
cmp
mov
fnstsw
mov
xor
test
pop
mov
in
repnz
retf
lock
jmp
push
sbb
or
stos
hlt
(bad)
mov
mov
mov
mov
cmp
mov
in
inc
cmp
and
mov
xchg
aas
cmp
cs
movs
jns
jo
mov
loopne
pop
push
mov
outs
mov
sub
jmp
jp
jl
sti
enter
sub
jle
push
call
jg
xchg
add
lds
mov
push
dec
int3
loop
push
rcl
rcr
into
gs
call
adc
mov
push
jl
push
es
aaa
data16
pop
gs
inc
and
ficom
dec
jno
mov
xor
adc
add
xlat
cld
sub
aas
imul
shl
jecxz
jns
push
sti
popf
pop
jns
cs
stc
and
xchg
jmp
loope
clc
cmp
jno
ss
cmp
call
test
imul
div
jne
inc
mov
test
popf
ss
xor
lahf
push
pop
cmc
push
repz
adc
popf
xchg
inc
mov
jns
mov
inc
jae
sahf
fdivr
jp
fbld
lods
lods
retf
xchg
dec
adc
popa
stos
cld
and
lods
test
aas
mov
add
add
stc
gs
ja
push
adc
or
shl
fs
repnz
pusha
sbb
or
cwde
jle
test
out
outs
mov
or
dec
lea
scas
add
mov
cmp
dec
jb
test
mov
outs
in
push
jl
cmps
test
outs
mov
inc
cld
mov
test
mov
mov
out
dec
imul
clc
fcomp
add
and
and
lahf
add
sbb
neg
pop
inc
sbb
add
sub
adc
movs
dec
maskmovq
idiv
(bad)
push
pop
in
add
jbe
push
rol
or
or
call
cwde
outs
outs
(bad)
pop
pop
xchg
mov
aaa
ins
fwait
jl
jne
jnp
mov
push
repz
pop
stc
cwde
and
pop
(bad)
pop
scas
test
addr16
mov
xor
jmp
xlat
pushf
lds
or
xchg
push
not
push
adc
adc
fdiv
push
push
or
movs
cmp
std
test
jmp
iret
adc
popf
cli
xchg
inc
push
cmp
add
imul
mov
(bad)
popa
mov
mov
pop
xchg
test
or
and
outs
pop
jmp
movs
inc
ins
fnstsw
popf
push
outs
mov
mov
mov
lods
imul
test
adc
repnz
fwait
inc
jle
loopne
add
xor
mov
adc
pop
pop
ins
mov
pop
mov
(bad)
mov
push
icebp
jmp
xchg
scas
rcl
cmp
call
xchg
pop
call
xchg
outs
inc
cwde
mov
mov
sti
imul
mov
out
push
pushf
aaa
(bad)
jg
inc
mov
hlt
sar
test
xor
mul
fimul
out
xchg
bound
mov
stc
in
je
int3
mov
adc
in
(bad)
fsubr
mov
sbb
lahf
js
jnp
sub
sahf
mov
inc
adc
mov
inc
inc
or
push
mov
fwait
xor
popa
(bad)
fcom
jnp
(bad)
fdivp
xchg
out
add
cmp
mov
push
retf
pop
mov
mov
iret
mov
popf
xchg
jo
or
test
pop
jp
add
or
movs
in
mov
js
ins
imul
dec
or
pop
jmp
sbb
cmp
imul
mov
dec
sub
stc
mov
xchg
inc
mov
jecxz
retf
sbb
ins
sbb
(bad)
dec
pop
push
dec
mov
lods
xlat
outs
xor
lahf
pop
in
in
aad
fimul
sub
loop
inc
mov
cmps
fadd
push
in
cdq
sub
std
mov
pop
cs
popa
mov
xor
jge
in
ret
xchg
or
pop
ret
or
push
data16
xor
in
jbe
sahf
das
cli
jge
push
and
xlat
(bad)
fcomi
cmp
push
add
test
daa
call
pusha
fst
xchg
lea
pop
movq
push
jmp
aam
jns
dec
xchg
call
ret
sub
mov
cmc
addr16
mov
adc
aam
fiadd
movs
sub
jp
and
inc
xchg
sub
jle
dec
inc
retf
jecxz
mov
sub
gs
and
sbb
add
fdivr
sbb
outs
mov
mov
dec
xchg
arpl
add
and
mov
out
int3
xchg
movs
out
imul
pop
out
pop
xlat
add
out
test
(bad)
mov
sub
jae
cmp
fidivr
jb
push
mov
bswap
mov
test
sbb
icebp
dec
loop
ret
cmp
push
cli
add
xchg
ror
push
xor
sbb
in
mov
or
sub
ret
fwait
sub
sbb
push
out
push
sbb
cli
outs
icebp
pop
cmp
adc
test
sub
sahf
add
sbb
out
outs
call
dec
popa
(bad)
push
pop
and
xlat
fbld
sub
xchg
and
aam
es
out
xchg
cmps
jnp
shl
push
fucomp
pop
es
popf
arpl
fsubr
inc
mov
ret
adc
imul
cmp
pusha
adc
cmc
cmps
lock
gs
mov
inc
xor
mov
xlat
fsubr
xchg
mov
in
jmp
sub
(bad)
into
mov
push
xchg
aad
jmp
mov
arpl
call
ret
les
cmc
test
call
stos
repz
xchg
rcl
shl
pop
fcmovbe
mov
imul
aad
pop
clc
ds
mov
adc
mov
mov
mov
sahf
mov
(bad)
inc
pop
out
xchg
jns
nop
cmp
dec
iret
cmp
fnstenv
cld
cmc
repnz
not
adc
in
cmp
je
xchg
sti
(bad)
fcom
adc
and
ror
adc
sub
jo
jmp
jg
mov
or
sub
cmp
scas
dec
or
mov
test
mov
(bad)
mov
add
pushf
fwait
sbb
add
mov
pusha
aas
mov
cwde
pop
std
xor
leave
das
and
adc
(bad)
adc
nop
push
adc
ss
movs
into
cmp
loop
mov
jmp
pop
mov
inc
and
or
xchg
jmp
push
pushf
mov
test
test
lods
push
fadd
mov
in
jle
jne
pop
mov
push
push
push
rol
dec
push
mov
js
cmps
rol
scas
jl
add
xor
stos
ret
(bad)
push
cli
stc
mov
jne
hlt
jb
inc
inc
cs
jbe
mov
pop
cdq
mov
cmp
or
not
mov
and
mov
(bad)
jno
mov
nop
scas
std
sti
jbe
adc
fcomp
xchg
clc
outs
mov
fcmovnbe
cmp
jmp
pushf
jne
rcl
mov
jmp
scas
xchg
jge
movs
dec
shl
(bad)
in
cmp
inc
push
stos
leave
cmp
test
mov
call
inc
and
dec
push
dec
bound
sub
lods
xchg
or
or
cli
push
je
pop
cld
jae
call
push
pop
xchg
add
lods
je
or
xor
pop
inc
test
fdecstp
jmp
fst
push
and
repnz
(bad)
mov
pushf
aas
stc
sbb
loope
jnp
outs
push
(bad)
outs
sar
fwait
icebp
js
cmp
cwde
gs
out
inc
test
mov
adc
pushf
sbb
adc
mulps
iret
inc
jg
(bad)
sub
push
or
ins
push
jns
stos
inc
(bad)
dec
pushf
mov
sti
add
cmp
icebp
cmp
mov
test
cmc
mov
dec
nop
and
pop
nop
lods
add
sbb
xchg
mov
iret
outs
rol
repnz
rcr
call
shl
inc
xchg
(bad)
into
js
out
shl
mov
push
inc
push
push
mov
cmc
xchg
cmp
leave
out
stc
add
or
out
mov
scas
sub
pop
cmps
add
xor
and
int
stos
fld
inc
ret
fs
stc
aad
dec
rcr
add
jmp
enter
sti
pop
jns
or
push
xchg
jmp
(bad)
cmps
dec
mov
jmp
adc
mov
adc
retf
xchg
leave
or
shl
test
pop
adc
jmp
mov
jo
lds
inc
xchg
xor
popf
sar
mov
ds
fsubr
test
fisub
popa
es
and
fsub
xchg
lea
out
popa
pushf
dec
outs
pop
(bad)
jg
cmp
stc
movs
jl
into
push
jne
push
aas
pop
pop
test
mov
xor
imul
movs
into
call
aam
daa
outs
mov
(bad)
cmp
(bad)
cdq
pop
iret
ds
bnd
test
sub
push
icebp
and
outs
cmp
sbb
cli
int
sbb
into
sbb
popa
cld
mov
push
out
add
mov
leave
aas
ror
pop
fisubr
sbb
xchg
mov
int3
jge
add
inc
bound
jmp
lds
cwde
(bad)
dec
dec
popf
mov
xchg
test
sar
jmp
(bad)
rcl
movs
mov
aam
xchg
addr16
inc
aam
fbld
push
aam
and
lods
mov
fwait
push
mov
scas
mov
movs
ret
(bad)
push
gs
jne
movs
mov
push
sub
(bad)
fst
jbe
inc
ins
push
cmc
ret
in
mov
or
(bad)
mov
retf
test
pop
popf
stc
mov
sub
dec
dec
jae
pop
mov
push
fnstsw
xor
int
nop
sbb
xor
cwde
les
pop
scas
push
pop
sbb
push
scas
in
pop
push
ins
inc
ins
lods
jo
or
loop
repnz
jo
or
cmp
(bad)
add
rcl
daa
sti
push
mov
add
loop
popf
fcomp
jb
add
xlat
mov
mov
mov
test
add
test
cmps
test
cmps
stc
sub
push
and
fwait
mov
xor
push
mov
xchg
lock
pop
fwait
lock
and
fwait
call
pop
mov
jo
ret
jg
cmps
pop
pop
push
cli
inc
xchg
mov
mov
clc
loop
imul
push
fst
mov
xchg
out
das
rcl
std
les
inc
scas
push
pop
dec
mov
jg
adc
mov
imul
aaa
(bad)
mov
dec
sbb
jb
js
loopne
inc
and
xor
repnz
(bad)
xor
xor
mov
lods
inc
mov
fimul
cmp
fs
into
out
sbb
sub
pop
or
sub
into
mov
cmp
ss
or
push
jnp
es
fidiv
mov
aas
mov
lods
push
dec
xlat
and
aaa
push
fisttp
adc
and
mov
cld
jo
aas
xchg
mov
ret
push
cmp
cmp
(bad)
out
outs
push
out
imul
cmp
mov
jge
or
fwait
shr
sbb
xor
jns
outs
add
dec
out
push
adc
movs
pop
pop
jmp
xchg
mov
(bad)
in
pop
and
imul
imul
aad
loop
lea
je
(bad)
xlat
(bad)
add
cli
addr16
xchg
ret
aad
rol
mov
test
in
pop
adc
inc
dec
mov
je
push
and
or
inc
pop
mov
mov
mov
push
and
sub
pop
fdivr
movs
out
xchg
arpl
out
stc
ins
and
dec
shl
push
stc
add
jmp
mov
test
les
or
mov
outs
xor
bound
daa
mov
and
sbb
aaa
push
hlt
fcomp
je
push
add
push
dec
dec
push
out
jo
addr16
cwde
lods
cmc
out
dec
push
sbb
repz
sbb
pop
fwait
and
lahf
push
int
jmp
in
cld
cmp
xor
inc
jmp
cwde
loopne
mov
pop
loopne
fimul
mov
popf
cmp
js
xor
mov
mov
pop
add
cs
aam
les
ds
pop
jp
pop
outs
loopne
xor
xor
and
xlat
ins
cmp
stos
mov
mov
and
ror
out
mov
or
arpl
sub
mov
adc
push
das
add
jg
mov
loopne
dec
sbb
in
sbb
push
jnp
cmovne
sbb
or
leave
pop
xchg
(bad)
ja
shr
out
mov
in
mov
add
je
leave
adc
jmp
add
xor
mov
jmp
xor
call
ret
add
shl
(bad)
jo
inc
jp
jecxz
out
bound
ja
scas
xchg
push
xchg
std
inc
in
adc
ror
rcr
push
int
jmp
sub
xor
jne
loope
and
hlt
gs
jmp
fst
sub
rcr
mov
cs
loop
cwde
push
xor
add
popa
out
call
sar
loop
mov
add
dec
fwait
xchg
adc
pop
(bad)
mov
jg
pop
ins
sti
and
jb
xchg
fistp
call
push
pop
call
nop
jmp
and
cmp
lahf
in
addr16
and
pop
cmp
jns
inc
aaa
mov
jno
mov
xchg
mov
leave
xchg
mov
or
jb
mov
sub
adc
pop
ret
push
and
push
inc
inc
std
out
push
(bad)
jg
nop
sub
xor
inc
push
lods
sbb
int
sahf
dec
out
xchg
cmp
mov
pushf
xchg
pop
sub
adc
jp
add
icebp
mov
test
jae
cmc
js
ins
adc
daa
xchg
movs
cmps
and
xchg
sbb
xor
adc
cmc
xor
outs
or
sub
dec
(bad)
in
rol
loop
outs
mov
stos
cwde
pop
enter
sub
lods
shl
or
and
push
mov
addr16
or
cmps
pop
cmp
mov
arpl
inc
div
shr
repz
dec
pop
mov
(bad)
mov
loop
out
shr
adc
or
fnstenv
pop
cmp
mov
and
mov
stos
repz
sub
call
mov
and
adc
rcr
pop
inc
aas
lods
ds
aad
jae
push
jl
pop
sub
ins
mov
inc
or
jae
mov
test
lock
cwde
mov
jne
push
movs
adc
adc
add
jge
out
adc
icebp
ror
das
xor
lea
sub
xchg
cmps
aas
xchg
jmp
outs
ret
movs
popf
test
pop
jo
call
mov
pop
(bad)
stc
das
aas
push
pop
xchg
out
fs
in
test
cmp
(bad)
pop
and
ret
cmp
addr16
in
adc
daa
add
cmps
jne
xor
repz
xor
aam
lock
cmp
loope
cmp
mov
mov
hlt
mov
adc
adc
and
xchg
popf
push
sub
sbb
retf
cdq
ret
mov
in
xchg
in
pop
loop
leave
xor
pop
cmp
movs
mov
loope
dec
fs
stos
sub
faddp
sbb
mov
fwait
cmp
xor
in
and
cli
push
mov
xor
mov
(bad)
dec
(bad)
jmp
imul
pop
ror
inc
enter
jnp
das
retf
xor
sub
daa
cmp
xchg
rcr
or
sub
jae
(bad)
push
or
mov
pop
mov
mov
jecxz
and
sbb
jns
mov
dec
inc
inc
jp
(bad)
(bad)
xchg
pop
sub
in
loopne
das
mov
mov
pop
out
jns
retf
xlat
cmps
xchg
repz
cmp
inc
sbb
jg
pop
fistp
mov
mov
rcl
repz
xor
xchg
xor
ds
sub
and
mov
gs
fldenv
adc
mov
jb
jnp
mov
jge
sbb
sbb
push
inc
xlat
jecxz
or
std
xchg
add
jo
xchg
pop
or
cmc
mov
cmp
iret
imul
inc
jl
lods
mov
cmp
inc
(bad)
jnp
(bad)
loopne
sahf
xchg
push
rcl
xchg
cmp
sub
mov
sub
aam
mov
aaa
(bad)
cmp
ud2
dec
pop
jb
cld
pop
test
mov
dec
arpl
jmp
sbb
push
dec
inc
push
daa
mov
mov
sub
shl
xor
test
call
nop
rcl
test
ret
jl
sbb
iret
sub
iret
inc
push
ins
xchg
push
lock
mov
into
dec
xchg
mov
or
fmul
jo
repz
xor
sub
cdq
push
dec
fcomp
clc
inc
loop
cmp
jg
mov
cwde
aad
stos
test
jne
xor
mov
sbb
daa
lock
daa
nop
stos
psubusw
sub
xchg
cmp
adc
into
dec
icebp
mov
loop
or
cmps
cmps
cmp
out
rcr
jle
mov
call
xchg
and
rcr
jmp
pushf
jbe
aad
cmp
(bad)
lea
sbb
out
fisttp
jne
xchg
adc
pop
and
bound
loope
ret
inc
fld
ins
jmp
fmul
retf
arpl
jbe
into
pop
ins
rcr
retf
lahf
cmp
or
outs
xor
jmp
adc
pop
xchg
outs
cli
jp
dec
repz
mov
adc
cmp
fld
or
dec
jno
mov
mov
pop
lock
pop
xchg
hlt
pop
je
lds
and
mov
aaa
dec
mov
inc
fstp
shr
jp
inc
lds
xor
lock
xor
(bad)
daa
mov
push
icebp
imul
in
push
mov
xlat
in
cs
jns
arpl
xchg
fldln2
xchg
inc
es
push
pop
in
push
stc
sub
inc
sbb
aad
push
add
jg
outs
lods
stos
mul
gs
fdivr
and
pop
ss
and
rol
out
cmps
pop
jle
movs
mov
stc
fstp
enter
fsubr
mov
inc
lods
inc
cmp
xlat
push
mov
stos
dec
jle
ds
retf
loopne
mov
cmc
sub
xchg
xchg
jne
inc
stc
(bad)
or
lods
xor
mov
cmc
cdq
mov
je
dec
int
jmp
idiv
fsubr
mov
test
and
add
and
inc
xchg
jbe
sbb
dec
lds
imul
fs
add
ret
jae
xor
xchg
lods
sti
jle
test
cs
mov
mov
mov
jo
dec
leave
jno
cdq
dec
movs
pop
fldenv
adc
pop
push
test
pop
cmp
pop
movs
mov
sub
adc
xchg
pusha
das
scas
mov
pop
in
movs
in
outs
xchg
popf
pushf
fnsave
in
jle
retf
pop
jg
lea
xchg
mov
push
dec
and
inc
shr
repnz
loop
or
pop
rcr
jmp
loope
xchg
xchg
shr
loope
adc
and
fidivr
aaa
xor
inc
push
fild
push
outs
and
jmp
pop
inc
jmp
(bad)
fdivp
lahf
sti
jne
mov
sub
sbb
loop
jns
jns
retf
retf
sti
and
or
push
mov
sbb
push
mov
pop
mov
jg
hlt
xor
jl
cmp
mov
and
dec
sub
sub
sbb
cmp
cmp
and
mov
pushf
ja
add
dec
inc
popf
push
push
dec
pop
(bad)
fcmovnu
xchg
mov
xchg
pop
adc
retf
(bad)
icebp
stos
or
mov
pop
push
data16
rcr
cmps
push
dec
mov
mov
stos
xchg
enter
outs
stos
sbb
imul
jnp
pop
sahf
sub
mov
adc
jg
jbe
movs
pop
mov
cmc
mov
ds
sbb
fcmovnu
sbb
outs
inc
fcmovnb
or
fadd
out
or
outs
aad
sub
stos
adc
xlat
imul
add
sub
mov
aas
mov
xlat
mov
outs
pop
xor
ror
imul
pop
lds
fidivr
fwait
out
and
or
jnp
loopne
mov
and
or
fwait
mov
in
mov
jno
aas
loopne
dec
icebp
jo
dec
fmul
sbb
and
inc
pop
inc
jns
add
(bad)
mov
popa
jecxz
jmp
add
mov
adc
sahf
or
xchg
call
(bad)
mov
(bad)
popa
shl
xchg
and
aad
ret
mov
jne
pop
cmp
rcr
cmc
into
out
cmp
dec
mov
ret
and
add
mov
add
inc
and
outs
sub
jmp
sar
das
inc
inc
pop
je
dec
xchg
ss
test
(bad)
cmp
cmp
pop
mov
dec
add
les
mov
mov
neg
movs
in
ror
fmul
sub
sub
shl
out
es
ret
(bad)
ins
jb
inc
cli
inc
(bad)
shl
test
jecxz
sbb
fdiv
jne
push
clc
or
xor
cmp
mov
int
aam
icebp
rcr
sahf
or
push
aam
mov
sahf
push
movs
repz
cmp
cmp
mov
xor
data16
je
adc
push
icebp
cmc
jno
push
and
sbb
ret
and
les
mov
or
lahf
in
outs
jbe
jmp
push
outs
in
ror
retf
pusha
cmp
es
test
cmps
mov
fisub
xchg
ds
enter
loope
int3
mov
inc
add
xchg
out
inc
jl
push
in
dec
push
pop
dec
in
lds
mov
xchg
ss
repnz
xor
push
xchg
sbb
lds
ds
mov
add
or
call
shr
movs
sub
out
push
push
mov
mov
inc
loop
(bad)
lds
loop
add
fisttp
fcom
mov
(bad)
es
pushf
iret
ja
xchg
adc
(bad)
into
xchg
dec
push
rcr
mov
adc
mov
arpl
sub
pop
mov
out
jno
gs
jmp
push
gs
call
gs
push
push
out
enter
mov
inc
sbb
(bad)
ins
or
(bad)
imul
lock
(bad)
shr
cld
popa
cmp
mov
cs
pop
jmp
adc
cmps
int
pop
call
cmp
or
push
js
pop
shr
sub
push
cmc
dec
add
test
cwde
cmp
mov
fisubr
aaa
test
test
cmp
cmp
iret
push
sub
sbb
sub
loopne
mov
clc
pop
dec
jo
mov
adc
mov
sar
and
fild
and
inc
aaa
sbb
dec
pop
mov
sub
pop
or
push
pop
lods
(bad)
in
fcom
xor
fcom
inc
dec
add
jle
xchg
jg
mov
push
and
push
inc
dec
sti
ss
int
xchg
test
inc
imul
(bad)
xchg
mov
pop
dec
popf
movs
push
sbb
fild
mov
push
mov
(bad)
movs
ds
sbb
loop
mov
pop
dec
out
add
aaa
sub
stc
push
pop
not
cs
push
fcmovbe
adc
mov
cmp
test
add
cld
cmps
cwde
scas
inc
push
or
xchg
rcl
fwait
and
std
cld
sar
jmp
xchg
pushf
inc
lock
std
lods
xchg
fidivr
xchg
aas
push
xchg
dec
xchg
stos
adc
or
retf
repnz
and
(bad)
mov
adc
repnz
(bad)
pop
push
movs
in
inc
arpl
pop
mov
push
jbe
cmp
sub
cmp
xchg
adc
jb
addr16
or
adc
mov
daa
mov
bound
mov
test
xor
push
(bad)
loopne
mov
fistp
xlat
or
test
std
adc
pop
mov
jmp
mov
jp
sub
jnp
arpl
lahf
mov
(bad)
pusha
jae
mov
sahf
fisub
adc
inc
pop
mov
clc
dec
(bad)
adc
dec
sbb
push
push
stos
cmp
inc
cmp
and
mov
mov
popf
xchg
test
sub
cdq
cmp
dec
ins
xchg
lods
test
mov
out
jg
call
adc
cmp
sub
mov
inc
loop
test
xor
(bad)
jmp
jae
mul
repz
mov
(bad)
out
cdq
jmp
mov
popa
into
nop
and
rcr
pusha
push
test
jl
out
mov
retf
xor
shl
adc
les
push
movs
fidiv
push
daa
das
jbe
adc
call
ret
iret
ss
popf
dec
jb
jl
inc
sbb
pop
jmp
stos
add
jmp
pop
dec
fild
pop
xchg
jns
jl
inc
sub
(bad)
data16
sbb
mov
fidiv
xchg
add
sub
gs
jne
xchg
call
jb
mov
mov
mov
fidivr
jno
jl
adc
js
(bad)
or
ss
push
std
push
aaa
repz
lahf
adc
call
scas
iret
iret
stc
pop
mov
enter
pushf
push
xlat
mov
or
(bad)
dec
sti
mov
cwde
mov
aam
enter
xchg
rcl
sub
cdq
jb
gs
out
adc
push
xlat
pop
add
mov
ja
loopne
xor
cmp
icebp
outs
shr
call
mov
xchg
in
cmp
test
sub
lods
ins
cmc
scas
xchg
(bad)
fisubr
and
prefetchwt1
or
push
push
pushf
add
jg
dec
fwait
in
hlt
lods
pusha
pop
jp
ret
loopne
jle
jo
mov
sti
sbb
jl
cwde
jle
xor
xchg
jae
mov
jge
inc
push
pop
fcomip
push
rcr
mov
int3
cld
test
mov
in
leave
xchg
jg
or
adc
punpckhwd
fldcw
mov
mov
and
hlt
nop
fidivr
lods
(bad)
pop
cmps
dec
sbb
pop
(bad)
int
jl
das
add
push
cmc
and
sbb
and
out
fist
sti
loop
ja
inc
rol
mov
(bad)
lock
js
jge
pop
imul
out
pushf
dec
or
out
scas
push
mov
xchg
(bad)
pop
setb
je
aas
pushf
test
arpl
push
leave
cwde
or
int
mov
add
adc
enter
and
in
sbb
ins
xchg
push
xlat
push
movs
jg
push
stos
jo
shufps
dec
sub
mov
pop
mov
or
stc
push
addr16
ficom
pop
push
or
clc
and
je
outs
add
scas
cmp
in
xchg
xchg
cmp
daa
push
dec
xor
ins
outs
pop
or
sbb
push
fstp
sar
mov
pop
adc
rcr
xor
cmp
jae
mov
jbe
xchg
xchg
mov
inc
loopne
mov
rol
cmc
imul
lods
test
sub
inc
cmc
dec
mov
dec
vmovhps
sbb
fcom
inc
retf
int
out
(bad)
lods
cmp
or
mov
cdq
mov
pusha
inc
mov
dec
fdivr
or
mov
cmp
xchg
or
cld
dec
aam
loopne
mov
push
push
xchg
or
and
mov
add
icebp
xor
daa
ret
mov
fisub
cmp
jae
mov
mul
jecxz
or
cs
jmp
mov
jp
adc
jge
mov
push
lahf
cmp
out
retf
mov
fidiv
push
movs
dec
addr16
jmp
xchg
cmp
mov
arpl
pop
mov
repz
adc
daa
sar
ret
sbb
cmp
adc
pusha
ret
pop
mov
mov
jo
retf
in
push
pop
xor
ror
push
inc
ret
in
dec
add
mov
mov
aaa
fidivr
aaa
in
fimul
xor
ret
sub
dec
shl
shr
lds
popa
shl
push
add
xor
add
popa
mov
adc
pushf
xchg
mov
test
push
dec
sbb
add
xor
mov
and
add
adc
add
psubq
sub
add
scas
pop
cld
ret
jno
int3
(bad)
mov
fsubp
sbb
(bad)
mov
mov
add
sub
or
leave
(bad)
jne
dec
cmp
call
xchg
mov
hlt
pushf
add
jmp
sub
xchg
push
retf
hlt
add
mov
shl
mov
mov
dec
or
(bad)
adc
sub
pushw
push
jge
mov
adc
ss
outs
bound
add
inc
jnp
add
add
call
inc
xlat
jne
push
mov
mov
fnsave
jne
jp
dec
int
pusha
xor
mov
and
ja
retf
mov
inc
adc
jmp
pop
sub
or
mov
pop
es
mov
push
clc
int3
(bad)
cmp
movs
dec
mov
sbb
mov
in
cdq
movs
xchg
pop
pusha
sbb
sbb
call
cwde
push
addr16
(bad)
popf
es
inc
mov
or
adc
xchg
add
cwde
cmp
pop
movs
rcr
pop
repnz
retf
sub
loop
adc
das
loopne
jmp
jle
pop
retf
mov
dec
sub
sub
retf
inc
adc
mov
call
out
jg
daa
dec
aam
xor
outs
cs
mov
aas
btc
dec
(bad)
sbb
rcl
cmp
inc
and
inc
test
loop
push
pop
daa
xchg
mov
xchg
retf
rcr
bound
dec
ins
or
int
test
outs
cdq
mov
retf
mov
enter
xor
cs
div
jmp
push
pop
fistp
in
mov
dec
adc
aam
clc
call
psubw
sub
jle
xchg
sbb
push
fwait
outs
mov
or
jmp
gs
sbb
repz
mov
repnz
cwde
and
cwde
fucomip
and
cld
fist
cs
xor
call
fisttp
pop
jecxz
retf
xchg
pop
mov
mov
push
inc
dec
out
stos
(bad)
fdivr
lea
inc
inc
test
cwde
pop
fpatan
fld
(bad)
clc
sub
xor
(bad)
mov
jns
cmc
jb
rol
movs
dec
scas
aam
(bad)
int
sub
enter
outs
mov
pop
mov
dec
or
and
rol
push
mov
dec
sbb
xor
stc
mov
fild
in
sbb
sub
scas
shl
mov
jp
mov
mov
dec
fcomip
mov
dec
push
inc
ret
cmp
jo
cmp
inc
or
xor
dec
dec
mul
cmp
inc
popf
mov
call
out
out
cld
lods
lods
xor
cmp
xor
(bad)
ss
push
or
push
pop
inc
pop
dec
adc
(bad)
(bad)
mov
jne
or
xor
mov
js
xor
jmp
popf
ret
out
lods
(bad)
and
sbb
inc
sub
jl
or
sbb
xlat
loope
cwde
fidivr
ffreep
lods
sbb
mov
dec
cmp
in
aad
mov
mov
sbb
pusha
xor
pop
jbe
push
in
test
hlt
stos
pushf
xor
stc
inc
shr
and
add
test
mov
dec
jmp
pop
scas
xor
sub
jne
push
adc
adc
cmp
adc
xlat
mov
test
or
dec
hlt
mov
nop
repz
ins
cmps
scas
adc
rcl
out
fst
jno
stos
sub
sbb
jmp
stc
rcr
xchg
je
pop
dec
ret
inc
cwde
cmps
jno
push
es
shr
mov
ds
cmp
fs
pop
retf
or
das
out
mov
out
or
pop
sahf
mov
push
gs
test
add
movs
jae
test
mov
sub
pop
add
addr16
pop
out
stc
ret
fbstp
adc
sbb
loopne
cmp
sbb
rol
rcl
jb
jne
sbb
ret
jns
stos
dec
das
xchg
mov
in
loope
not
jnp
adc
adc
jb
frstor
push
push
ss
push
jp
daa
stc
push
out
fs
popw
out
xchg
mov
test
daa
mov
mov
inc
data16
(bad)
mov
jmp
cmp
rcl
cmp
(bad)
mov
dec
mov
jae
scas
into
xchg
jle
es
call
xchg
sub
add
mov
mov
movs
ins
jl
aaa
dec
rcr
jecxz
loop
test
adc
cmp
adc
outs
cmp
xchg
mov
sti
push
or
retf
fidivr
and
in
sbb
and
mov
paddw
jae
xor
push
dec
iret
stos
dec
pop
add
push
ror
add
mov
mov
std
mov
pop
cmp
icebp
jmp
cld
fnsave
ss
out
sbb
mov
retf
mov
ss
jae
xchg
adc
mov
and
jnp
adc
rcl
mov
nop
jecxz
in
in
xchg
mov
int3
fbld
clc
cmp
retf
ins
pop
add
push
stos
sbb
cmp
fidivr
cdq
in
jmp
stos
sbb
pop
sub
(bad)
and
cdq
xlat
sub
cmp
sbb
in
jno
out
mov
jmp
sub
fiadd
push
add
cmovs
sti
out
push
jmp
arpl
push
mov
bound
add
push
mov
pop
outs
sbb
ins
stos
ret
leave
fidivr
or
jae
scas
lods
mov
mov
lds
sbb
ja
xor
cmc
jne
popf
mov
mov
sbb
or
cli
sbb
fild
test
cmp
sbb
(bad)
push
fld
mov
xor
adc
(bad)
mov
mov
jns
pop
dec
dec
pop
xchg
xor
stc
mov
xchg
cmp
int3
add
adc
sar
pop
daa
push
call
mov
sbb
sbb
sub
jo
dec
jnp
js
mov
lea
xlat
cmp
(bad)
out
ins
and
sahf
inc
mov
lods
and
push
dec
iret
dec
pop
sub
inc
jne
fsub
hlt
pop
or
stc
fwait
les
mov
jle
sub
and
add
push
std
xor
ins
pop
dec
cmps
test
adc
lock
mov
hlt
pop
jno
js
sub
or
jge
jnp
add
(bad)
fist
push
dec
jb
popf
mov
jb
cmp
fidivr
mov
into
mov
adc
movs
(bad)
and
jns
test
jecxz
mov
adc
push
int
into
mov
out
gs
fiadd
outs
inc
jge
out
jnp
(bad)
fwait
dec
enter
adc
pop
sbb
push
(bad)
jns
(bad)
xchg
add
(bad)
retf
jl
push
add
lock
inc
cld
xchg
and
push
loopne
idiv
sbb
push
pop
xor
ins
add
jns
inc
popf
mov
xchg
leave
push
sbb
sub
or
sub
and
es
mov
dec
(bad)
cli
jp
test
mov
inc
fmul
ins
retf
xchg
addr16
mov
rol
pop
push
mov
mov
add
add
out
adc
mov
loope
or
mov
out
sub
and
movs
push
pop
out
or
adc
mov
pop
push
pop
rol
jg
pop
jae
sbb
mov
jnp
and
cmps
mov
sbb
fucomip
sub
push
mov
adc
mov
sbb
call
cmp
mov
adc
pushf
outs
js
cmp
daa
or
or
aas
(bad)
sar
xchg
mov
pop
test
mov
mov
jbe
les
loopne
rol
cmps
adc
xor
in
ins
and
cmp
xchg
lock
test
xor
imul
aaa
push
xchg
push
sar
(bad)
xor
repnz
cmp
mov
das
push
jmp
in
add
jbe
and
mov
stos
clc
ins
xor
ss
sbb
xchg
jl
ds
and
call
(bad)
clc
sbb
jg
(bad)
jns
or
popa
ret
cmovo
retf
shr
sti
sti
dec
and
scas
pusha
in
adc
cmp
cmp
fisub
cwde
sub
xchg
cdq
aad
and
shr
ins
add
fimul
jmp
sbb
mov
mov
retf
out
mov
mov
xlat
mov
fdiv
mov
jbe
push
pop
xor
(bad)
mov
dec
call
cld
call
xor
scas
push
mov
cmps
and
pop
inc
push
push
retf
jne
hlt
inc
dec
adc
mov
jns
lea
in
cmc
out
pop
or
cli
jecxz
inc
pushf
dec
movs
call
ds
loop
mov
cmp
stos
fwait
scas
pop
icebp
ss
push
icebp
shr
dec
(bad)
(bad)
mov
inc
sbb
cs
or
fmul
call
div
es
dec
mov
les
mov
dec
xchg
mov
fist
aaa
dec
sbb
push
adc
test
fdiv
xchg
cmps
popf
cvtdq2ps
or
or
push
test
fldenv
mov
rcr
test
jo
xor
and
mov
dec
xchg
daa
adc
cmp
call
stos
dec
rcr
loop
jmp
stos
je
xchg
cmp
jb
dec
push
add
jne
repnz
sbb
push
pop
xor
aas
mov
stc
dec
ja
cmps
scas
enter
dec
pop
jnp
mov
or
cmps
std
push
std
imul
jge
popf
inc
xor
je
or
jmp
sub
div
fmul
or
nop
stc
jnp
sbb
mov
sbb
sbb
jns
mul
shl
ss
aas
jae
in
pop
pop
add
add
jecxz
jno
dec
lods
popa
pop
mov
inc
dec
js
div
jne
push
jnp
inc
cmp
and
dec
pop
and
pop
mov
cmp
push
imul
imul
xchg
adc
adc
outs
ins
cmp
std
adc
mov
(bad)
data16
mov
popa
jb
xchg
xchg
or
in
clc
jb
scas
pop
(bad)
repnz
daa
add
lock
pop
ret
mov
(bad)
jmp
jb
sar
cmc
cs
pusha
fld
cmp
add
sub
icebp
dec
pushf
aam
pop
hlt
addr16
adc
push
xchg
jge
adc
cmps
and
nop
es
fwait
mov
cmp
or
mov
cmc
jb
addr16
ret
xchg
lds
mov
add
in
cld
push
push
and
mov
add
push
(bad)
and
xor
add
dec
mov
dec
inc
mov
sub
mov
sub
scas
and
mov
cli
(bad)
xor
lahf
cmp
jb
xchg
adc
fmul
sub
stos
xor
pop
(bad)
jmp
xor
push
rcl
sub
push
pop
jbe
and
mov
dec
js
jp
nop
stc
mov
arpl
or
sub
bnd
popf
(bad)
push
adc
gs
and
dec
clc
ss
mov
dec
xchg
push
addr16
(bad)
(bad)
adc
sub
and
jae
les
xor
(bad)
cs
mov
je
pop
pop
aad
ret
pop
clc
push
xor
add
jne
push
pop
addr16
push
out
sbb
and
mov
int3
pop
inc
fdiv
nop
push
mov
fldenv
xchg
mov
mov
jg
ss
sbb
test
xor
or
mov
into
mov
push
dec
mov
pop
rcr
or
mov
call
ret
xlat
(bad)
xlat
sub
(bad)
data16
push
push
rcr
adc
inc
pop
xor
aaa
test
stc
pop
int
mov
mov
icebp
lds
repnz
dec
popa
sti
loope
sbb
push
mov
dec
cmp
cmps
js
in
call
sbb
xlat
push
xor
push
sub
stos
mov
les
mov
push
push
jno
daa
les
pop
cmp
cmp
cmp
(bad)
call
jmp
mov
test
xchg
jp
iret
pop
aas
sub
imul
movs
aad
pop
fs
mov
leave
add
mov
xchg
jmp
stos
test
mov
inc
mov
loopne
xchg
iret
dec
retf
je
cmps
fisubr
and
add
cmp
jno
add
add
push
dec
or
les
je
jmp
call
aad
jecxz
cmc
sub
inc
pop
jmp
xlat
sbb
(bad)
adc
in
push
mov
cli
scas
mov
mov
dec
or
stos
mov
cmp
push
rep
or
or
pop
mov
add
stos
popa
push
dec
out
cmc
ror
mov
jbe
xchg
mov
xlat
and
pop
pop
call
or
fdivr
cld
sbb
cmp
cmp
pop
pop
xchg
pop
cmp
push
outs
pop
(bad)
xor
sbb
mov
ret
cmp
in
lds
push
ffreep
xchg
adc
adc
inc
mov
or
sbb
inc
push
mov
je
out
stc
loopne
(bad)
mov
nop
and
mov
cmc
push
and
es
jns
ss
iret
mov
call
(bad)
push
sti
sbb
xor
xchg
cmp
outs
fldl2t
test
cmp
aaa
push
cs
xchg
pop
mov
hlt
xchg
xchg
and
xchg
call
jle
pop
pop
inc
xor
and
popa
xchg
repz
mov
jmp
xor
bound
and
in
push
fiadd
and
push
cdq
fnstcw
push
cmp
xor
retf
sbb
(bad)
and
mov
xchg
addr16
inc
jecxz
mov
rol
js
jmp
jp
sbb
pop
ret
lods
push
mov
loope
jle
add
dec
sahf
add
adc
test
jbe
xchg
jbe
outs
mov
jmp
xlat
das
test
ins
stos
jbe
lahf
jbe
dec
test
retf
inc
fisubr
mov
stos
shr
push
pop
aam
sbb
adc
pop
lock
cmp
mov
jb
jno
cmps
cmp
test
(bad)
push
js
jae
pop
mov
dec
xor
dec
mov
xor
test
sahf
adc
or
mov
scas
ins
sbb
sbb
mov
mov
stc
add
xor
repz
or
cmps
or
out
ja
cli
mov
inc
pop
call
or
xchg
std
pop
fnstenv
inc
ror
xchg
mov
(bad)
out
cmp
daa
lods
lds
aam
je
call
adc
je
cmps
cs
cld
sub
scas
mov
mov
sbb
rol
cmps
sbb
and
mov
sub
xor
inc
xor
sub
mov
pushf
mov
cmp
arpl
retf
inc
xor
fcom
shl
sbb
push
and
dec
vminps
pop
xchg
cld
test
push
jno
xchg
dec
mov
in
pop
call
inc
mov
out
mov
push
jae
mov
nop
push
cmp
nop
or
push
and
into
or
adc
es
mov
mul
je
xchg
xchg
and
aaa
clc
sbb
(bad)
test
adc
ja
stos
stos
fld
jle
sub
jb
jb
out
nop
mov
mov
mov
add
mov
popa
push
cmps
imul
xchg
cld
jecxz
gs
ins
pop
sub
xor
sub
sti
cmp
inc
stos
push
jne
xor
sub
out
cmp
jmp
mov
jmp
adc
jbe
test
imul
adc
push
aad
(bad)
adc
ds
sti
mov
mov
push
fsub
xor
and
mov
sub
shl
sbb
xchg
pop
pop
scas
cld
jo
jnp
jg
popf
pop
repz
ret
mov
mov
enter
or
inc
and
pop
jb
es
jo
push
ja
xchg
and
mov
(bad)
repnz
jmp
mov
sub
into
jns
lods
mov
mov
ins
ror
inc
aad
adc
shl
cmp
inc
ins
lock
xchg
nop
sub
lods
mov
aam
sub
cmp
cdq
lock
push
rcr
mov
inc
xor
and
pop
cmp
push
cdq
es
into
ret
cli
nop
nop
mov
sbb
aam
sbb
xchg
shl
std
xor
pushf
clc
xchg
nop
add
cmp
je
mov
js
js
lds
jl
jmp
call
mov
fs
adc
jb
ins
daa
sub
call
adc
mov
cs
daa
mov
(bad)
fwait
jbe
jl
or
aam
pop
jne
movs
mov
arpl
outs
ds
dec
test
mov
cmp
push
outs
call
fisttp
mov
not
add
imul
pop
cwde
imul
icebp
sbb
sar
jecxz
and
ret
iret
retf
xchg
mov
and
dec
sbb
mov
push
pop
jns
add
retf
or
mov
or
push
push
add
sbb
sub
inc
jnp
cmps
pop
aas
mov
fadd
inc
scas
fdivp
in
inc
mov
pusha
sub
hlt
cmps
cwde
int3
push
inc
dec
retf
fs
pop
(bad)
dec
mov
neg
lahf
push
call
cli
(bad)
shr
mov
inc
call
fs
sbb
inc
xlat
in
xchg
add
std
adc
test
cmp
and
lahf
fnsave
xchg
push
inc
out
mov
add
sahf
ret
jnp
into
or
scas
sub
pop
mov
cs
dec
clc
pop
stos
iret
ror
adc
jbe
cmp
mov
or
mov
(bad)
add
mov
cmc
or
xchg
ds
clc
sti
xchg
(bad)
call
scas
stc
adc
mov
cwde
call
mov
push
sub
and
aas
cs
stc
scas
and
les
sbb
add
pop
xor
sub
xchg
into
loope
es
popa
icebp
repz
and
fwait
mov
mov
lods
cmps
clc
clc
jae
addr16
jbe
shl
jo
popf
stos
aaa
clc
shl
int
aad
or
mov
mov
aad
xor
in
hlt
mov
sbb
lods
(bad)
pushf
lock
sti
add
cmp
and
sbb
sub
out
xchg
adc
cmp
xor
pop
rcr
jns
mov
xor
rol
fimul
mov
movs
add
test
cli
dec
cmp
pop
dec
or
inc
loop
adc
adc
add
adc
adc
mov
outs
push
and
(bad)
fsub
push
dec
mov
and
mov
cmp
mov
fcmovne
call
cs
loope
jp
mov
inc
jp
cmp
push
fs
int3
inc
xor
push
loop
mov
addr16
shl
adc
pop
mov
mov
adc
(bad)
or
retf
into
ins
sbb
cmp
std
mov
push
ja
dec
call
xchg
sbb
je
iret
in
jge
inc
test
and
les
dec
in
cld
(bad)
mov
jb
adc
dec
in
add
cld
test
jno
icebp
jle
and
mov
popa
push
enter
lea
push
pushf
mov
mov
add
sub
inc
js
mov
loope
sub
(bad)
fnstsw
jne
inc
aas
push
popa
fmul
mov
pop
mov
iret
mov
lea
jle
pop
add
sub
cmc
ret
inc
add
and
sub
cmp
cs
pop
dec
cld
(bad)
loopne
std
in
pop
imul
adc
jns
outs
sbb
mov
leave
and
rcl
adc
add
adc
out
cmc
sbb
(bad)
bound
std
imul
dec
and
pop
enter
stos
cwde
dec
gs
jbe
pop
sub
cmc
jl
fisttp
test
dec
cdq
jae
sti
push
cmp
mov
jno
fwait
adc
mov
pop
mov
in
(bad)
jb
nop
aaa
sbb
push
xchg
sub
xor
pop
aad
adc
retf
pop
loop
xor
xor
xor
add
(bad)
push
push
popa
(bad)
xchg
push
inc
js
jno
and
add
xor
push
sbb
call
ins
inc
inc
mov
ret
loope
mov
icebp
dec
icebp
js
sbb
iret
sub
jno
out
(bad)
imul
pop
icebp
leave
mov
inc
mov
or
jae
movs
inc
(bad)
and
pop
mov
xlat
add
ret
jno
out
jo
or
push
out
inc
imul
push
mov
jo
pushf
call
scas
or
mov
mov
inc
pop
popa
adc
pop
aad
or
pop
push
mov
mov
cs
add
sub
loope
pushf
and
mov
adc
add
mov
push
adc
out
jmp
xor
push
add
in
mov
(bad)
icebp
xor
mov
mov
mov
fucomp
and
mov
xchg
fucomp
cdq
mov
xor
(bad)
dec
fisubr
nop
daa
popf
xchg
and
in
sub
int3
nop
fstp
and
repnz
pop
and
xchg
push
push
cmp
or
stc
xor
stc
(bad)
lahf
call
pop
ret
push
mov
sahf
mov
cmp
fnsave
or
or
and
not
or
dec
test
adc
cmc
mov
(bad)
push
xor
cli
scas
xchg
ins
or
mov
xlat
adc
inc
aaa
sar
(bad)
das
les
adc
push
pop
iret
xchg
in
cmp
cmps
rsqrtps
ss
mov
js
inc
adc
daa
call
jecxz
push
push
mov
inc
hlt
cdq
ds
(bad)
fldcw
(bad)
jp
int3
mov
cmps
mov
shr
sar
imul
fisubr
int3
inc
(bad)
pop
mov
fs
push
ins
out
dec
inc
mov
icebp
push
add
push
xchg
sahf
pusha
or
lods
stc
mov
cld
mov
cdq
(bad)
jmp
xor
fwait
cdq
jge
ds
jnp
in
ja
outs
pusha
(bad)
sub
pop
lods
fild
cmps
repz
lods
mov
inc
jbe
cmp
or
xchg
cdq
sbb
inc
in
and
jns
cmp
leave
xchg
pop
push
xchg
jb
cmp
pop
popa
imul
adc
(bad)
daa
jns
cwde
jno
gs
fwait
rcr
lea
pop
fwait
pop
icebp
lods
nop
call
daa
rol
xchg
mov
inc
cmp
retf
das
or
and
jp
fsub
mov
mov
xchg
out
outs
mov
cmps
add
add
jp
jge
call
cmp
fmul
xlat
push
lahf
adc
fiadd
sti
pop
cmp
cmp
push
pop
jge
or
mov
xlat
pushf
stos
pop
sub
rol
mov
jno
shr
int
xor
xchg
es
test
jb
sbb
jno
shl
fisttp
ret
dec
push
and
daa
inc
jb
add
rcl
pushf
xor
in
iret
out
shr
or
add
cmp
punpcklwd
sbb
retf
jecxz
push
into
mov
adc
add
or
movs
ds
mov
and
dec
repnz
xchg
ss
pop
xchg
aaa
jbe
pop
inc
or
scas
jle
outs
ss
add
movs
pop
sub
dec
fst
retf
mov
cs
rcl
xor
dec
test
fadd
push
sub
hlt
xchg
in
xor
mov
loope
pop
mov
and
sahf
jo
pop
inc
ss
imul
add
pop
push
pop
fisubr
retf
inc
and
retf
mov
das
jp
cmp
dec
ins
mov
jmp
sub
push
hlt
dec
xor
repnz
pop
test
xchg
add
test
test
pop
sub
push
imul
sbb
data16
cmp
pop
int
mov
add
push
sub
(bad)
mov
in
push
lock
pop
shl
ins
shl
push
sub
xor
repnz
cmp
retf
cwde
in
popa
addr16
test
out
or
mov
mov
cmps
dec
into
popa
or
test
and
cld
loopne
arpl
call
das
sbb
push
add
ins
fsub
scas
mov
add
ret
int
(bad)
scas
leave
mov
jle
dec
dec
lahf
mov
add
addr16
pop
rcl
jecxz
stos
add
les
jp
out
add
xchg
mov
repz
cmp
out
and
and
das
scas
ror
fisttp
(bad)
dec
and
mov
mov
call
clc
adc
in
push
mov
fist
or
fwait
pop
jecxz
outs
stos
(bad)
out
push
xchg
jge
mov
imul
pop
push
cmp
sti
frstor
or
pop
cmp
adc
jge
jne
sbb
push
dec
push
push
push
cmp
xor
sar
imul
lock
inc
push
xchg
aaa
sbb
mov
in
lea
daa
ret
adc
mov
adc
fwait
ds
pop
xor
stos
adc
neg
adc
addr16
enter
fcom
mov
and
jbe
and
rol
cmps
pushf
clc
das
lods
xlat
popf
rol
js
lds
fldcw
jg
mov
mov
sub
je
pop
aam
sub
into
dec
rcr
lods
iret
jbe
dec
ret
loope
test
jb
dec
mov
dec
(bad)
and
mov
mov
inc
mov
pop
in
or
scas
mov
xchg
jecxz
fadd
jg
inc
cmp
adc
lds
jmp
imul
outs
inc
add
not
and
or
fidiv
in
push
xchg
retf
and
aad
ret
cmc
or
push
sub
iret
jo
daa
in
inc
jp
cmp
mov
dec
aas
mov
call
cmp
mov
pusha
push
xor
sub
mov
sbb
dec
push
mov
cmp
js
and
in
jmp
add
sub
pushf
mov
push
or
mov
xchg
mov
mov
add
xchg
dec
pop
push
shl
mov
fmul
inc
sar
jmp
jmp
test
test
pop
pop
out
pop
les
jecxz
gs
sbb
push
pushf
adc
sub
xlat
xor
icebp
sbb
xchg
mov
sbb
lock
ret
inc
sbb
iret
fmulp
xor
sbb
aad
pop
jnp
mov
mov
pop
sub
jg
add
pcmpeqb
shl
fld
pop
add
sub
fs
es
test
repz
cmp
jge
(bad)
into
sbb
(bad)
mov
out
pop
call
sahf
jbe
push
repz
mov
sbb
and
dec
dec
mov
mov
push
lea
leave
mov
sub
pop
pop
mov
mov
mov
add
xlat
adc
cmps
mov
cdq
pop
ja
xor
xchg
scas
sub
iret
es
and
dec
push
or
repz
xor
ja
neg
sbb
dec
sub
jl
pop
dec
test
xor
jmp
in
xchg
aam
out
mov
out
add
aam
sub
imul
dec
pop
lea
adc
mov
add
mov
rcr
std
adc
mov
push
(bad)
clc
test
sar
out
sub
imul
sub
adc
outs
daa
pop
in
test
aaa
test
imul
stos
jae
je
sbb
push
jo
in
push
scas
sub
xor
push
xor
inc
(bad)
lds
in
dec
mov
inc
or
xchg
ds
push
cwde
dec
fisubr
mov
in
(bad)
shr
es
add
imul
es
mov
adc
push
mov
jb
mov
(bad)
data16
pop
dec
std
jle
jno
test
dec
rdpmc
pop
xchg
mov
popf
xor
sub
mov
ins
ss
cli
mov
adc
inc
ins
pop
ficomp
test
fidivr
movs
mov
popw
or
xor
and
(bad)
ret
(bad)
and
add
jp
xor
jp
mov
aad
out
push
push
adc
mov
pop
ds
ins
push
push
mov
cs
adc
or
mov
xor
mov
rol
test
les
xchg
and
cmp
ja
sbb
mul
lea
sub
mov
xchg
sub
jmp
pop
icebp
add
mov
mov
retf
xor
and
repnz
sahf
fist
outs
lods
inc
jecxz
and
cmc
jb
jle
out
cdq
aam
inc
je
mov
adc
push
inc
test
xchg
in
and
sub
or
mov
dec
fidivr
stos
mov
(bad)
xlat
dec
sbb
push
xchg
and
mov
out
mov
out
ror
mov
mov
push
test
dec
imul
mov
int3
xchg
out
push
adc
pop
repz
cmps
sub
rol
mov
sub
mov
gs
sar
xor
add
pushf
mov
add
mov
sub
xchg
push
push
sub
adc
mov
dec
and
enter
sbb
popa
or
in
outs
mov
aad
or
out
pusha
dec
push
(bad)
rol
in
sbb
inc
mov
adc
fbstp
pop
addr16
cmp
ja
pop
push
call
add
sbb
add
pop
call
jnp
and
or
jae
xchg
and
call
pop
rcr
stos
fisubr
loop
jno
(bad)
adc
ds
mov
nop
clc
inc
jp
scas
and
inc
mov
mov
retf
inc
push
pop
pop
(bad)
push
(bad)
daa
or
or
mov
adc
fwait
push
mov
inc
(bad)
jecxz
cmps
sub
cld
mov
lock
je
mov
icebp
sbb
xor
or
add
aam
pop
push
ret
test
(bad)
jmp
sbb
mov
xchg
mov
cwde
ret
(bad)
std
inc
adc
mov
inc
push
cmp
mov
mov
or
les
test
pop
jge
xlat
imul
js
mov
bound
pushf
sahf
add
jbe
dec
cld
add
cwde
cmp
jns
xchg
push
js
aas
cmp
outs
mov
jge
pusha
clc
xchg
in
cmp
adc
out
adc
mul
jns
(bad)
dec
enter
sbb
jne
in
and
mul
shr
jae
sub
sub
ja
adc
dec
cmp
loopne
pop
pop
(bad)
ficom
addr16
pop
mov
les
mov
cmc
cmp
mov
mov
lahf
mov
dec
and
and
or
and
and
or
fisub
mov
js
cmp
imul
or
repnz
cmovs
xchg
pop
mov
popa
sub
xor
in
adc
bound
adc
xor
sbb
sbb
test
daa
cmp
cmp
or
sub
add
outs
dec
push
gs
arpl
jne
call
aaa
call
or
enter
lock
inc
(bad)
cwde
mov
hlt
xor
or
pushf
xchg
jns
fs
shr
fnstsw
out
mov
int
cld
xchg
cmc
jecxz
xchg
dec
inc
add
jo
outs
test
hlt
(bad)
xor
(bad)
loop
sbb
inc
cmp
xchg
lock
shr
sar
(bad)
or
jns
mov
inc
pushf
add
aas
call
mov
js
pusha
inc
push
ror
(bad)
in
(bad)
test
push
jmp
jne
ss
push
out
and
or
scas
test
mov
lods
jge
test
or
mov
aad
jbe
add
mov
pop
inc
dec
pop
cmps
aas
add
out
imul
cmp
ins
mov
mov
bound
lahf
ret
popa
or
sbb
movs
icebp
and
jns
pop
cmc
pop
jecxz
imul
jnp
pop
push
sbb
sbb
pop
jb
and
rep
xchg
mov
xlat
and
or
es
popa
pop
lock
loop
cmps
or
add
into
das
repz
(bad)
(bad)
push
sub
(bad)
outs
sbb
cld
adc
mov
push
les
add
jne
pop
and
stos
into
inc
push
lahf
jmp
lock
outs
mov
outs
test
adc
es
loopne
pop
or
int
and
js
ins
mov
and
fld
jmp
sub
mov
out
dec
(bad)
not
lahf
loope
or
out
scas
cs
add
scas
je
cmp
push
xor
mov
gs
pop
out
xlat
imul
jge
lea
sbb
cmp
cmp
push
add
sti
js
adc
(bad)
cli
push
mov
jle
daa
xchg
loopne
or
pop
mov
mov
in
sub
aas
mov
lea
sub
push
mov
or
inc
aas
pop
lea
mov
xor
ror
sbb
aas
hlt
test
mov
adc
(bad)
clc
sbb
jo
jmp
out
mov
lods
sahf
imul
or
outs
pusha
fcmove
call
test
jmp
jp
inc
clc
pop
jns
adc
cmp
lock
fadd
xchg
shr
out
mov
shl
je
jmp
out
cdq
sub
popf
aam
int
rcl
jns
imul
mov
mov
(bad)
mov
pop
sub
pop
mov
jbe
rcr
adc
mov
cmps
ret
mul
adc
aaa
fadd
add
cmp
jns
(bad)
sar
and
pop
daa
lods
leave
addr16
pusha
pop
aam
mov
in
adc
pop
mov
xchg
and
fild
mov
mov
vmovlpd
inc
test
lea
mov
inc
(bad)
fisubr
daa
and
mov
cmp
add
add
cmp
or
rol
fcom
push
fsubr
aam
jbe
inc
cmp
rep
out
or
inc
ret
jge
jne
pop
sub
out
ins
repz
ins
jecxz
pop
jmp
sbb
cmps
popa
in
cli
jmp
sar
xchg
sar
sbb
lods
xor
xchg
xchg
jmp
cld
cmp
push
mul
jnp
adc
pop
nop
sub
fyl2x
dec
cmp
inc
fs
mov
push
jg
shl
adc
ds
jmp
int3
and
jnp
jle
mov
jg
xchg
test
neg
pop
loope
ret
sub
cmp
das
or
sub
xchg
inc
dec
jae
mov
pop
mov
dec
inc
pop
cmp
sub
gs
or
cmp
ss
retf
popf
inc
inc
repz
ror
repz
mov
rcl
lea
sbb
add
movs
cmp
push
jb
sbb
loopne
cmp
repnz
mov
cmp
pop
mov
jnp
mov
cdq
shl
arpl
add
loope
dec
inc
scas
call
push
fadd
push
xor
stos
mov
or
push
xor
and
ins
cmp
nop
fbstp
pop
mov
(bad)
mov
mov
xchg
xchg
imul
retw
sub
aam
or
and
call
rol
xor
jecxz
cmp
inc
jmp
(bad)
in
inc
xor
push
or
pop
adc
call
arpl
mov
cs
xchg
cmp
inc
pop
jg
stos
icebp
dec
rol
lahf
clc
fwait
xor
lahf
or
mov
test
(bad)
cmp
and
mov
push
in
ret
push
push
xchg
stc
data16
mov
or
lahf
fst
add
fadd
into
xchg
ds
clts
mov
daa
icebp
fdiv
and
call
mov
cmp
jo
ins
call
outs
mov
in
mov
xchg
pusha
mov
aam
mov
rcl
pop
(bad)
int3
clc
je
sti
repnz
cmp
clc
movs
ror
mov
rcr
push
mov
jge
xchg
xlat
pop
xchg
popa
sub
pushf
jle
out
mov
adc
lods
or
jo
jo
arpl
sbb
daa
mov
inc
fnstsw
mov
mov
shl
sbb
push
cmp
cld
mov
add
shr
sub
(bad)
retf
sbb
test
xor
add
jle
jl
and
and
lea
cmp
por
xchg
push
inc
aam
mov
xor
sti
adc
cmc
sbb
call
cmp
add
jbe
cmc
cmovl
add
xchg
jle
mov
loope
fdiv
test
stos
outs
cmp
sbb
push
push
lods
addr16
inc
aad
cmp
jmp
or
sbb
xor
mov
outs
mov
hlt
lds
fnstcw
ss
sub
pop
scas
sbb
lahf
pop
sbb
dec
(bad)
cmp
lea
dec
xchg
pop
cmps
mov
jo
mov
retf
cmps
int3
jnp
mov
sub
daa
push
das
mov
jns
fisttp
push
lods
sar
cwde
mov
push
mov
retf
lock
mov
sbb
pop
outs
gs
lock
fs
call
aad
mov
sbb
push
add
and
aas
out
(bad)
aad
dec
lods
out
sahf
add
and
outs
lahf
addr16
add
add
in
aaa
aas
stos
data16
push
jne
xlat
add
inc
mov
jo
clc
push
ins
push
add
jne
or
and
ficom
pushf
repz
mov
push
mov
aaa
sub
icebp
or
xchg
inc
jmp
pusha
ins
enter
int
xchg
mov
push
stos
in
movs
xchg
(bad)
xchg
mov
inc
pop
(bad)
(bad)
jae
test
data16
xor
cdq
shr
popf
shl
mov
fstp
rcl
cmc
ror
mov
fild
test
ror
adc
adc
neg
cmps
cmps
mov
sub
jno
cwde
fidivr
lods
mov
and
ret
aaa
scas
shl
add
loop
js
fwait
or
mov
ror
inc
push
push
jns
add
dec
(bad)
mov
jns
jmp
lods
pop
ret
xor
into
sub
clc
xchg
stos
test
movs
out
add
mov
mov
pop
retf
cmps
mov
dec
jbe
dec
pop
ja
dec
cli
(bad)
test
jb
mov
push
lods
push
aas
adc
stc
pop
iret
dec
mov
jp
movs
and
adc
hlt
je
dec
pop
into
pop
mov
ins
push
retf
(bad)
fisttp
pop
mov
call
mov
aam
xor
aaa
cmp
(bad)
fist
and
test
jns
inc
and
in
xor
cmp
sbb
cmc
(bad)
mov
(bad)
xchg
xor
pushf
dec
out
push
pusha
mov
das
lock
outs
dec
cld
and
inc
or
cld
scas
sub
sub
xor
test
xor
jbe
stos
sub
ror
cmp
lds
jno
hlt
pop
clc
call
ret
not
adc
data16
push
int
jge
jmp
fs
inc
push
inc
cmc
mov
mov
dec
sahf
adc
inc
(bad)
fcomp
lods
push
push
test
scas
(bad)
and
movs
push
mov
and
adc
in
adc
imul
inc
rol
jle
ins
(bad)
cmp
js
mov
pop
fiadd
mov
jae
push
outs
cmps
jae
stos
scas
jecxz
lods
dec
or
xchg
js
int3
sub
xchg
test
sub
test
call
or
(bad)
cdq
dec
fnstenv
push
aaa
cmp
cli
and
and
push
es
mov
mov
or
sub
sar
shr
out
repz
add
adc
mov
mov
add
and
mov
and
call
mov
test
push
daa
dec
scas
xchg
lock
fimul
addr16
jecxz
fdivr
(bad)
ror
cmp
pop
shr
or
(bad)
daa
add
ret
test
test
nop
ds
rol
or
(bad)
adc
push
in
fmul
cld
cdq
stc
out
fisub
mov
pop
dec
les
sub
pusha
or
cmp
xchg
jno
xchg
out
bound
cmc
iret
ds
sub
loope
int
xchg
jl
cmc
mov
or
fst
push
lods
and
(bad)
xor
movs
fadd
in
out
mov
cwde
imul
inc
mov
js
xchg
and
adc
push
mov
adc
jecxz
pop
ss
fs
inc
rcr
jmp
inc
and
jb
dec
adc
data16
repz
aad
xchg
xor
loopne
loop
icebp
push
dec
popa
xor
xor
dec
and
mov
sbb
test
sub
ror
fistp
jo
outs
mov
jb
ds
stos
shr
sbb
cld
ins
cld
sub
sub
js
in
das
add
in
dec
xchg
in
push
sbb
xchg
inc
shl
inc
or
enter
dec
out
push
xor
lods
fcmovb
add
stos
aam
push
outs
fnstcw
(bad)
mov
rcr
jg
jne
xor
cmps
cmps
jae
cmc
mov
or
out
dec
pop
iret
daa
cld
sbb
pop
cmp
pop
sbb
repz
pop
mov
pop
sub
movs
push
ret
shr
shr
mov
imul
pop
int3
call
movs
xor
adc
inc
cdq
daa
or
outs
int
fst
inc
push
stc
sub
fisubr
push
jns
pop
sub
sbb
and
and
das
or
jmp
jp
add
mov
dec
scas
jmp
shr
or
cmp
fsubr
fdiv
xor
(bad)
jmp
iret
jecxz
jle
outs
cld
aad
std
pop
cmps
stos
jl
pop
mov
push
sub
lea
into
inc
lock
mov
aaa
cmp
sub
mov
pop
int3
sbb
ret
sbb
in
bound
lahf
out
hlt
cmc
adc
iret
xor
sti
mov
stc
mov
push
mov
clc
scas
aad
hlt
iret
rep
jle
or
inc
jl
stos
test
inc
inc
repz
lds
js
stc
shl
adc
dec
nop
pushf
fdiv
mov
dec
xchg
push
test
add
clc
and
xor
dec
stos
cs
mov
sbb
and
add
test
xlat
adc
push
cs
(bad)
jge
in
and
ret
inc
lahf
jge
add
or
cmc
(bad)
enter
mov
mov
inc
test
test
cmp
retf
cli
dec
and
xor
adc
ss
in
or
jae
and
mov
sbb
sub
ins
lock
mov
add
fwait
push
add
sbb
xor
cdq
cli
mov
movs
jo
mov
mov
daa
out
inc
in
inc
adc
mov
and
add
(bad)
(bad)
mov
lods
pop
das
jmp
push
pushf
clc
xlat
mov
dec
sub
mov
lea
dec
inc
in
(bad)
inc
xor
js
repnz
iret
cmp
push
jo
and
test
or
mov
add
call
sub
ja
add
mov
mov
das
iret
mov
(bad)
pushf
mov
or
out
xor
out
cs
call
jbe
push
inc
add
inc
das
cdq
pusha
mov
jbe
inc
sub
movs
cmp
idiv
push
xchg
or
mov
enter
inc
arpl
pop
fs
rcl
sar
(bad)
imul
test
mov
xor
ja
in
push
ins
add
je
add
in
push
(bad)
daa
fldenv
in
jp
pmaxsw
lock
lds
sti
(bad)
jmp
xchg
push
and
ins
stos
arpl
mov
dec
(bad)
mov
call
or
pop
inc
mov
xlat
das
inc
sbb
cld
mov
lds
xchg
scas
dec
sub
dec
stos
cmps
into
pop
sbb
mov
push
das
mov
cmp
inc
fldcw
nop
dec
rcl
mov
sub
ror
retf
in
add
cmp
test
leave
xchg
xor
jmp
xchg
mov
inc
mov
jecxz
jmp
clc
adc
and
lock
and
bnd
mov
push
and
rcr
mov
out
cli
loopne
and
icebp
adc
les
xchg
sub
jl
dec
pop
pop
xor
lock
cmp
(bad)
test
or
cmps
mov
add
mov
push
inc
fdiv
adc
ins
mov
lahf
ss
std
enter
pop
in
gs
ins
inc
arpl
rcl
adc
push
popf
(bad)
dec
pop
loope
push
push
addr16
not
sub
ror
(bad)
dec
push
dec
dec
inc
int3
sbb
(bad)
cld
int3
sbb
jne
loop
pop
lds
idiv
rcl
or
and
mov
retf
xlat
or
scas
push
cs
jo
mov
fnstcw
xchg
and
jge
mov
aad
mov
or
push
and
rcr
fmul
popf
jg
ror
mul
aad
lock
imul
push
into
lods
mov
adc
lahf
aam
jmp
jno
push
adc
les
jg
sub
push
and
pushf
cdq
jne
repz
xor
cli
movs
jecxz
mov
xchg
or
mov
pusha
mov
hlt
mov
test
stc
out
movs
test
fld
retf
add
in
or
jb
or
call
pop
test
inc
mov
iret
sbb
imul
cmc
xchg
mov
dec
sahf
xchg
data16
mov
sahf
popf
ror
sub
and
and
adc
mov
cmp
pop
pop
test
movs
call
stos
rol
sub
pinsrw
shl
xor
pop
fs
lock
sahf
sub
push
gs
sahf
mov
loop
add
cmp
(bad)
lods
(bad)
push
sub
(bad)
sbb
xchg
xchg
nop
jno
and
lahf
mov
and
arpl
aam
mov
dec
inc
pop
dec
mov
sbb
mov
inc
xor
test
cmp
ret
jb
js
adc
inc
jbe
mov
or
call
hlt
sar
jle
cwde
test
xchg
adc
fstp
push
leave
cmp
xor
inc
sar
loope
cwde
pop
jno
jmp
xor
jmp
mov
pushf
or
xchg
inc
pushf
adc
aam
fist
call
cmp
pop
mov
and
pop
push
sti
xchg
ds
sbb
dec
mov
and
repnz
pop
aaa
cmp
pop
dec
sbb
sbb
jmp
popa
adc
cld
add
mov
movs
sbb
lahf
enter
cmp
or
outs
pushf
out
sar
rcr
and
not
imul
dec
xchg
into
jnp
int3
aaa
outs
xchg
sbb
pop
shr
dec
scas
leave
xchg
mov
fs
push
repz
or
add
ja
scas
outs
jo
imul
scas
sub
add
ficom
je
imul
add
mov
mov
repz
psrad
ins
into
and
rcr
push
dec
inc
lahf
into
pop
mov
pop
xchg
pop
or
lahf
into
push
and
sahf
and
shl
fbstp
call
popf
adc
jne
jbe
and
fisubr
mov
popf
repz
cli
and
sahf
and
test
arpl
sub
ret
sub
pop
std
jp
and
dec
adc
and
loop
test
pop
je
jmp
mov
inc
jle
sbb
out
mov
sub
add
je
in
adc
jne
out
rol
pop
push
test
dec
sar
scas
pop
push
cmp
push
adc
mov
or
sub
dec
gs
ret
out
pop
or
shl
out
or
addr16
lods
mov
popa
and
push
jne
aaa
pop
rcl
and
aaa
sub
mov
stc
inc
xor
leave
and
mov
xchg
loopne
adc
dec
lods
push
ja
aaa
mov
js
mov
inc
sub
push
lods
or
xchg
aam
aam
pop
push
add
pop
pushf
ret
push
adc
adc
std
xchg
xchg
aas
adc
stos
push
js
fsubp
cld
jbe
test
std
in
mov
movs
mov
push
inc
iret
mov
outs
rcl
pop
mov
add
dec
sub
add
jne
xlat
pop
dec
aad
mov
pop
imul
cmp
int3
dec
inc
shl
xchg
mov
pop
jmp
outs
push
sub
inc
sbb
mov
adc
rcl
cmp
imul
mov
sub
ss
xchg
add
inc
out
movs
mov
pop
add
gs
pop
mov
cmp
add
mov
cwde
mov
ds
add
sahf
adc
mov
and
loopne
pop
inc
aas
cmp
dec
mov
div
xor
cmps
cwde
aas
pop
clc
adc
pop
xchg
and
bound
dec
mov
aas
sti
retf
lea
arpl
test
xor
popf
fld
das
icebp
mov
jecxz
neg
je
mov
movs
xchg
std
aad
nop
xor
aam
jmp
bound
imul
push
sti
js
mov
dec
(bad)
xchg
nop
cmp
imul
push
in
loopne
cmp
mov
xchg
ds
and
repnz
adc
mov
movs
mov
repz
iret
dec
dec
adc
add
iret
dec
push
shl
pushf
and
xchg
lock
dec
fstp
fcmovne
ja
jp
xor
ins
or
arpl
add
(bad)
pop
outs
ins
test
cmps
test
jne
or
mov
jle
movs
ds
jne
icebp
cmp
ins
xor
cld
movs
call
adc
loope
cli
ror
es
cmp
sub
retf
(bad)
(bad)
xor
push
sub
jl
sbb
dec
lds
adc
div
sti
inc
jbe
dec
daa
sub
pushf
dec
xlat
inc
add
mov
jmp
lahf
les
or
sbb
hlt
adc
jmp
repnz
sbb
(bad)
leave
pop
sub
loop
cld
or
test
mov
movs
loope
movs
aas
movs
mov
(bad)
int
add
movs
xchg
pop
pop
mov
mov
(bad)
loopne
mov
adc
push
dec
cmps
pop
push
add
xor
sub
dec
add
dec
pop
mov
dec
movs
sub
jb
mov
push
jge
push
mov
cmps
xor
inc
mov
add
xor
sbb
aaa
pop
mov
inc
mov
div
(bad)
xor
test
mov
mov
pop
sbb
into
inc
(bad)
fmul
idiv
test
push
ins
inc
test
push
xor
(bad)
cmp
push
lock
mov
cmp
int3
lea
cld
push
dec
mov
mov
(bad)
pop
mov
movs
xchg
retf
nop
sbb
jne
mov
jbe
fsubr
or
jecxz
ins
call
stos
iret
std
sahf
rcl
lods
out
sub
jns
and
inc
jmp
adc
xlat
add
hlt
and
loopne
jne
lock
cdq
std
enter
xor
xor
pop
ins
pop
push
mov
sub
or
dec
cmc
jae
aad
push
pop
je
xor
bnd
sub
daa
xchg
fidiv
mov
fisub
inc
or
cld
rcl
push
inc
je
pop
mov
push
pushf
stc
test
inc
push
jns
test
push
out
or
sub
xlat
sub
mov
cs
push
sub
push
jmp
inc
xchg
inc
push
retf
jne
push
sahf
lods
cmps
sbb
xor
mov
jg
xchg
cmp
fistp
mov
sbb
pop
dec
or
sbb
cmp
iret
dec
mov
test
loopne
xor
mov
sub
es
or
xor
inc
and
jge
cmp
ror
ficom
mov
xor
inc
adc
push
push
hlt
adc
ror
dec
mov
rol
bound
push
dec
pop
outs
inc
lods
rcl
cmps
sub
adc
cmps
aam
push
not
jb
mov
mov
test
mov
mov
and
xor
aaa
jns
retf
loopne
ret
pop
jmp
js
push
push
sbb
jp
xchg
xor
int
adc
jp
cmp
test
push
lds
imul
call
lds
pusha
cwde
outs
bnd
or
or
inc
add
(bad)
cmp
and
cmp
shl
out
xlat
mov
js
mov
sbb
add
popa
xchg
imul
ret
fdiv
mov
cld
movs
jae
in
les
ins
lock
les
pop
test
mov
outs
add
jmp
push
inc
adc
(bad)
inc
test
inc
jge
aad
jb
popf
fs
mov
jmp
pop
jae
pop
sahf
xor
fnsave
xchg
sbb
int3
iret
inc
mov
aaa
mov
mov
stc
mov
sub
mov
aaa
add
sub
mov
sbb
lods
call
add
(bad)
push
(bad)
pop
jl
cmps
inc
jo
movs
xchg
inc
mov
pop
or
cmp
jae
cwde
dec
aas
lods
mov
mov
ret
fsubrp
push
dec
xor
add
sti
jno
pop
hlt
sbb
mov
data16
call
xor
sub
jae
ins
sbb
shr
inc
push
inc
inc
push
add
mov
cmp
dec
xchg
(bad)
sub
xor
(bad)
les
retf
sub
retf
or
cwde
fisttp
es
xchg
(bad)
xchg
test
fbld
ds
sub
je
and
push
movs
sahf
add
(bad)
mov
call
sahf
push
mov
jns
add
popa
ror
outs
add
shl
cmp
cmp
adc
pop
pop
test
cmp
jns
dec
test
push
mov
sti
xchg
or
push
push
xor
mov
(bad)
loope
mov
adc
adc
push
inc
push
push
(bad)
sbb
popa
xor
adc
retf
in
ds
dec
lods
ror
jge
in
jo
or
out
jecxz
mov
or
mov
retf
mov
outs
mov
mov
enter
addr16
dec
or
mov
pop
shl
jne
pop
int
jmp
test
ins
loopne
scas
div
jle
mov
mov
and
add
pushf
xchg
or
xchg
outs
jno
adc
dec
mov
or
ds
xor
sti
jmp
mov
test
push
ins
pop
xchg
inc
(bad)
rcr
adc
and
sbb
cmps
inc
mov
mov
sbb
leave
sti
mov
shl
ret
call
fsubr
daa
into
push
jno
cmp
mov
cmp
adc
cmp
das
push
movs
mov
retf
add
adc
adc
lea
out
and
mov
adc
push
inc
or
and
aad
scas
xchg
popf
pop
retf
(bad)
sahf
repnz
ins
enter
retf
les
pop
in
pushf
retf
daa
cmps
popa
mov
stos
jp
inc
and
mov
sub
xor
jmp
xchg
mov
outs
fsubr
mov
loopne
sub
pop
push
sbb
mov
inc
or
adc
add
mov
sub
inc
xor
sbb
jmp
pop
pop
daa
ins
into
push
mov
test
mov
nop
(bad)
adc
cmps
(bad)
out
jne
js
rcr
inc
repz
sahf
xchg
jb
les
jl
mov
pop
loop
pop
add
leave
xlat
push
dec
push
mov
(bad)
cmp
mov
lods
pusha
sub
notrack
cmp
push
(bad)
xor
pop
mov
sti
js
push
not
jge
out
push
stos
int
ficom
jecxz
in
fcom
xchg
repnz
fadd
out
fidivr
test
pop
mov
repz
mov
rol
nop
pop
movs
jmp
adc
imul
mov
aas
fdivr
mov
push
adc
cmps
mov
or
das
lds
mov
mov
stc
enter
loopne
push
out
jo
xchg
add
push
(bad)
int
loopne
pop
(bad)
aaa
mov
cmp
adc
rcl
mov
out
cdq
test
les
sbb
outs
cmp
push
add
mov
repz
push
mov
push
mov
and
ftst
mov
jae
mov
shl
and
push
(bad)
push
jbe
and
mov
pop
(bad)
jmp
xchg
arpl
movs
std
repnz
inc
stos
lds
ficomp
fwait
pop
(bad)
mov
push
scas
mov
cld
shr
call
sub
cmps
inc
sbb
push
in
inc
aaa
ins
ret
stos
sbb
out
stos
push
ins
or
mov
jno
adc
out
jnp
in
stos
clc
ins
and
push
push
xor
inc
adc
das
mov
(bad)
mov
push
(bad)
int
cs
test
pop
jp
push
call
push
(bad)
std
mov
pop
pop
jg
sub
leave
add
pop
pop
gs
jp
pop
jle
sub
and
mov
push
sbb
ficomp
sub
sbb
cmp
jl
cmp
pop
mov
cld
imul
push
aaa
ror
cmp
loopne
jmp
dec
loope
fs
or
sbb
add
ins
ret
aad
adc
popf
int
push
jg
sbb
stc
add
outs
lahf
push
ficomp
mov
cli
xor
push
lea
mov
push
jno
fistp
lock
dec
xor
pusha
mov
cmp
xor
loop
sbb
jle
pop
xor
test
add
int
pop
addr16
cld
xor
push
sbb
pop
test
jmp
ins
add
jl
xchg
loope
sar
in
jg
(bad)
cmp
enter
jb
(bad)
sahf
fisub
pop
(bad)
in
and
sbb
mov
sahf
and
adc
mov
cmp
cdq
rol
hlt
mov
test
inc
call
rcl
icebp
cmp
movs
cld
mov
add
sbb
or
xor
cdq
sub
push
xchg
xchg
inc
pop
cmp
mov
xchg
dec
jl
mov
and
and
mov
movs
cmp
mov
push
or
std
sub
sub
sub
outs
and
call
fidivr
rcl
adc
clc
mov
mov
les
and
xchg
and
pop
je
lock
ret
cmp
daa
add
jb
inc
(bad)
push
xchg
imul
mov
xchg
xlat
call
push
outs
fsubr
das
repnz
xchg
jbe
adc
cld
xchg
push
add
(bad)
bound
xor
ds
push
sub
imul
mov
sbb
cwde
inc
dec
sti
add
jmp
sub
repz
test
mov
or
push
lds
pusha
nop
icebp
sub
mov
push
loope
and
retf
pop
cld
ds
xor
xchg
shl
pop
jne
and
push
stc
lea
fistp
(bad)
sub
xchg
cmp
pop
xchg
frstor
in
push
push
push
leave
pushf
xor
cld
arpl
pop
cli
retf
jp
push
pop
push
mov
cmps
adc
cmps
stos
mov
and
or
daa
push
xchg
xor
loope
xor
pop
shl
rcr
sbb
fsub
jl
mov
inc
pop
rol
xchg
enter
into
add
dec
cmc
pop
mov
inc
in
or
ror
mov
pushw
js
or
rcr
push
(bad)
scas
pop
sub
lock
sub
pusha
mov
cli
fistp
mov
xchg
cwde
dec
jno
adc
jnp
cli
mov
jecxz
les
mov
jle
mov
stos
cld
pushf
ret
mov
loop
fsub
out
adc
xchg
cli
adc
lods
cs
sub
pop
test
add
pop
lea
jle
mov
dec
ret
cmc
nop
mov
sub
sub
sub
mov
mov
aaa
add
inc
pop
lock
dec
push
sbb
mov
push
out
out
xchg
fsubr
mov
iret
and
mov
or
xor
cwde
sar
arpl
retf
cwde
xchg
xchg
int3
dec
out
out
pop
arpl
arpl
out
xchg
dec
repz
data16
push
fstp
test
fld
sub
cli
or
push
shl
and
stos
sub
jecxz
cwde
pushf
aaa
mov
adc
cdq
stos
adc
push
outs
out
scas
cmp
jb
sub
jmp
sub
mov
cmps
sub
inc
call
push
mov
mov
jmp
call
out
mov
or
push
fisttp
jp
sub
pop
xchg
cmp
mov
mov
push
clc
jmp
mov
jl
cmp
sub
or
jbe
sub
sti
xchg
push
pop
int
mov
paddb
pop
push
fild
loope
jne
mov
test
inc
xchg
and
(bad)
inc
sbb
xor
xor
push
or
inc
(bad)
imul
fistp
sahf
in
cmp
adc
scas
je
sub
es
push
adc
(bad)
cs
sbb
pusha
ds
inc
add
mov
(bad)
clc
push
mov
cdq
(bad)
jg
push
mov
cmps
mov
es
aas
ja
psllw
scas
cmp
push
sbb
xor
ja
jge
xchg
xchg
sbb
js
add
mov
jge
or
int
mov
stc
cs
fimul
into
jg
cs
mov
mov
test
retf
js
xor
mov
jne
xchg
mov
or
idiv
nop
nop
cmc
pop
add
sub
mov
popa
mov
jg
call
jmp
ins
das
mov
push
popa
push
sbb
push
mov
lods
jl
xchg
xchg
sbb
fsub
mov
arpl
pop
adc
jbe
mov
cmp
cmp
lahf
mov
mov
push
or
push
lock
mov
retf
cdq
lods
adc
jl
push
retf
call
add
js
jge
pop
stos
jmp
loope
vcvtss2si
jnp
mov
dec
push
pop
je
push
jg
mov
pop
fs
fs
push
mov
add
dec
adc
dec
ds
mov
and
out
push
xor
mov
inc
mov
pusha
cmp
pop
mov
xchg
cld
sub
dec
sub
xchg
mov
ins
mov
mov
push
adc
test
mov
pusha
mov
or
jne
ret
(bad)
in
adc
xor
cwde
lea
fsubr
mov
inc
push
pop
call
ja
and
nop
outs
jp
mov
xchg
fdivr
mov
lods
jno
ss
pop
out
xchg
test
inc
jae
into
scas
push
and
cli
mov
popa
dec
xchg
sbb
xchg
sub
xchg
cmps
xchg
int
in
mov
pop
sti
(bad)
cmps
dec
ret
cld
call
(bad)
xchg
loop
lods
popf
mov
data16
clc
loop
pop
xchg
mov
enter
or
fcomp
mov
movs
hlt
stc
xor
mov
cmps
cmp
mov
or
xchg
add
mov
lds
sahf
mov
or
aaa
mov
and
sbb
daa
dec
clc
jnp
dec
jmp
movs
pushf
shr
cmp
xchg
cdq
call
xchg
xor
fistp
dec
lds
mov
add
in
add
xchg
mov
(bad)
in
dec
sub
les
xchg
pop
rcr
dec
jb
jbe
dec
je
inc
loope
rcl
mov
jno
popa
lea
xchg
dec
pop
cmp
mov
shl
lock
in
pusha
inc
pop
pop
jg
sti
jg
arpl
test
sar
cmc
jne
xor
outs
mov
lods
xor
sbb
into
mov
(bad)
mov
rol
or
sar
into
xor
inc
mov
inc
arpl
pop
test
pop
sahf
xchg
dec
mov
dec
cmp
jmp
pop
test
fadd
lea
mov
sbb
sbb
push
mov
ja
cld
inc
cdq
aas
xchg
dec
sub
lods
inc
xor
mov
add
cdq
pop
nop
add
xchg
xchg
scas
inc
inc
test
adc
fsub
ins
repz
add
rcl
outs
or
adc
out
fnsave
push
xchg
rcr
js
push
into
ror
pop
mov
push
dec
xor
int
retf
mov
dec
je
mov
jne
lds
ins
sbb
sub
div
add
ret
pop
pop
cdq
cmp
mov
(bad)
enter
cmc
lds
cmp
push
sbb
hlt
dec
jb
cmp
xchg
push
movs
add
jmp
adc
add
ja
sub
cmp
out
mov
add
scas
jno
hlt
pop
mov
mov
popa
add
js
leave
inc
mov
aam
adc
dec
mov
add
in
cmc
add
into
ret
data16
mov
js
sub
mov
aad
sub
int3
mov
call
pusha
(bad)
jmp
cmp
test
add
adc
ins
mov
movs
or
cwde
push
mov
mov
jecxz
idiv
inc
enter
mov
ja
ins
xchg
stc
int
push
inc
push
lock
or
(bad)
jmp
cmp
sbb
loop
les
cli
mov
xor
add
movs
sub
jne
inc
pushf
add
xor
cmp
cmp
mov
mov
mov
out
mov
xor
fstp
mov
jl
and
push
stos
jp
shl
xor
push
fwait
hlt
dec
shl
test
(bad)
mov
mov
sub
add
pop
mov
outs
fdivr
pop
cmp
clc
cmp
inc
clc
mov
into
in
outs
(bad)
sbb
ja
sbb
sahf
sub
leave
jmp
lahf
int
adc
add
or
ret
daa
adc
xor
push
jmp
pcmpeqb
(bad)
mov
xchg
arpl
repnz
mov
xchg
mov
inc
sbb
pop
pop
and
fs
sbb
push
pop
pop
mov
jno
jb
out
jle
out
lahf
pushf
int
mov
xor
push
inc
push
arpl
in
int3
call
pop
jp
loope
out
jo
neg
dec
xlat
inc
cmps
mov
inc
rcr
hlt
pop
xor
xor
(bad)
retf
mov
test
add
jge
jae
mov
test
inc
mov
std
mov
sbb
ror
daa
adc
dec
dec
dec
shr
mov
sti
fcom
lahf
mov
fild
out
inc
call
(bad)
adc
gs
cdq
mov
inc
mov
mov
and
push
out
in
ins
adc
sbb
imul
cwde
cmp
mov
push
push
jo
dec
clc
int
imul
push
dec
stos
shr
inc
mov
mov
popa
stc
xchg
jge
(bad)
repnz
or
adc
(bad)
push
add
sub
fisubr
xchg
pop
cmps
add
xchg
dec
and
mov
pop
adc
sar
and
mov
xor
jmp
sbb
mov
adc
pop
adc
mov
mov
out
fidiv
inc
and
in
jno
adc
sub
cmp
pop
inc
call
sti
pop
pop
dec
mov
enter
push
pop
pushf
xor
cmp
mov
pushf
cwde
pushf
and
pop
xchg
ror
sbb
inc
push
out
out
mov
push
or
mov
push
xchg
int3
loopne
iret
iret
or
leave
mov
xchg
mov
lods
mov
push
add
xor
ins
xchg
out
inc
(bad)
adc
pop
(bad)
xor
push
ds
push
or
xor
sbb
test
xchg
daa
movs
mov
add
mov
jmp
add
cli
rcl
inc
jmp
and
movs
sbb
xor
fcmovnbe
ficom
jb
dec
pop
push
in
xchg
cmc
or
lods
scas
cli
xor
adc
xchg
repz
ja
sub
add
or
lahf
repnz
cmp
cmp
jmp
push
and
mov
push
dec
aas
out
ret
add
sub
mov
xchg
inc
ret
repz
xchg
loopne
int3
adc
mov
stos
add
jbe
inc
push
cwde
shl
jg
xor
lahf
push
leave
mov
and
adc
neg
xchg
xchg
into
pop
dec
dec
aad
sti
jne
idiv
sub
je
cmp
sub
xchg
fstp
sub
jmp
test
mov
das
lock
inc
mov
ds
push
add
cmp
stos
xchg
not
add
nop
test
jp
fbstp
mov
hlt
mov
ins
push
scas
mov
mov
sti
inc
(bad)
jmp
(bad)
loop
pop
adc
jae
adc
mov
jl
mov
aas
and
add
cdq
and
cmc
jmp
(bad)
fstp
call
maskmovq
add
retf
jge
stos
sbb
push
(bad)
xchg
mov
dec
xor
mov
retf
sti
ret
stos
fwait
or
movs
push
cmp
cwde
mov
adc
sbb
call
fsubr
test
push
add
dec
ss
pop
(bad)
jmp
ret
in
sbb
and
shr
addr16
jae
cwde
fdivr
jecxz
in
scas
push
rcr
mov
add
inc
outs
mov
les
test
sub
fsubr
test
ins
and
sbb
(bad)
cmp
dec
xchg
ins
add
mov
push
dec
sub
out
jg
dec
aas
and
sbb
pop
sub
adc
xchg
arpl
sbb
idiv
outs
or
repz
mov
shl
inc
in
sub
(bad)
adc
xchg
ror
pushf
stos
popf
lods
add
js
pop
ror
(bad)
and
ja
inc
ret
shr
fild
icebp
test
inc
cmps
pop
and
mov
mov
cli
std
xchg
popa
repz
sti
arpl
sub
cli
jmp
cwde
inc
dec
xchg
push
icebp
loopne
mov
mov
mov
lods
xchg
sub
sbb
add
mov
test
mov
pop
sbb
shl
push
loopne
xchg
retf
lock
jae
dec
xchg
add
add
jge
xchg
pop
aaa
xchg
les
addr16
ins
sqrtps
loop
inc
fsub
call
jmp
jmp
mov
jnp
iret
mov
mov
mov
mov
push
cdq
out
xchg
bnd
popa
sbb
jo
push
outs
pushf
or
movs
outs
mov
inc
and
and
mov
les
mov
mov
inc
inc
mov
sbb
lahf
xchg
xchg
jne
add
or
xchg
sti
pop
or
jecxz
mov
je
loop
xor
cmp
jns
ds
xchg
test
mov
jns
leave
jmp
pop
arpl
popa
xor
mov
fist
pop
into
push
test
pop
and
jb
loop
ffreep
call
psrlq
jae
popa
adc
lahf
jmp
addr16
and
or
in
xlat
sub
das
neg
ss
fldenv
call
mov
enter
pop
(bad)
(bad)
outs
sbb
xchg
dec
(bad)
iret
rcr
mov
div
and
adc
dec
sahf
sbb
and
test
xchg
nop
mov
nop
les
aad
push
inc
mov
mov
jno
int
sub
mov
mov
mov
jbe
dec
pop
cmp
add
call
push
ret
sbb
test
xchg
pop
arpl
adc
jnp
lods
push
push
mov
pop
push
push
iret
mov
or
inc
push
mov
sub
push
jge
lods
cmp
sub
les
mov
push
ror
jecxz
jecxz
pop
ret
push
adc
push
lods
jo
inc
xchg
rol
dec
jnp
inc
pop
jecxz
(bad)
jb
jbe
xchg
loope
jno
fbld
movs
or
mov
cli
leave
adc
(bad)
mov
or
cmp
out
hlt
cmp
nop
pop
pop
fst
mov
add
xlat
mov
je
mov
push
xchg
mov
cmps
and
imul
mov
jl
jo
fst
clc
add
lahf
sti
push
test
gs
jno
lahf
call
lock
cmp
test
push
cmp
scas
push
add
sahf
mov
mov
sbb
lods
jl
icebp
into
mov
pop
fnstsw
mul
shl
pop
mov
js
mov
cwde
jb
es
pushf
stos
sbb
call
push
adc
pop
jo
cli
(bad)
ins
shr
movs
(bad)
adc
add
das
ins
mov
cmps
mov
adc
push
push
std
xchg
rcr
inc
pop
fbstp
fsubr
daa
je
mov
xchg
xor
pop
push
adc
cmp
adc
sbb
imul
(bad)
stc
pop
je
or
jns
mov
mov
mov
test
add
sub
sahf
mov
fbld
mov
xor
jle
and
or
ret
ss
ss
sub
jmp
vmread
add
push
leave
dec
mov
mov
pop
xor
int
or
mov
cmp
and
dec
ffree
push
xor
xchg
mov
mov
adc
cmp
mov
not
push
imul
sbb
jle
mov
lods
ror
inc
or
sbb
inc
push
sub
mov
sbb
xchg
and
cmp
inc
retf
or
imul
mov
push
mov
cli
or
(bad)
popa
adc
inc
test
sqrtps
push
stos
pop
push
js
aam
and
or
cwde
cmp
adc
jb
jl
cmps
mov
mov
cmp
cmp
and
pusha
popf
mov
or
and
fwait
add
dec
adc
push
and
sub
push
add
aad
call
jns
or
int
cmps
pop
sbb
icebp
scas
dec
jle
out
cli
cli
pop
sbb
pop
fiadd
sar
or
jecxz
push
jecxz
push
repz
mov
dec
push
(bad)
fisub
cdq
xor
jmp
leave
adc
push
push
in
stos
jbe
pop
mov
fcmovb
outs
out
mov
dec
adc
inc
hlt
sub
(bad)
cli
jmp
scas
add
or
cld
jmp
call
test
or
je
aad
or
jmp
pop
mov
push
push
or
out
jns
xchg
xchg
pushf
sbb
push
add
dec
ja
mov
pop
jb
xchg
(bad)
sbb
adc
loop
sub
cmp
mov
xlat
pushf
lock
jmp
xchg
or
retf
dec
lds
cwde
test
repnz
dec
ds
sar
clc
lods
ins
bound
add
pop
xor
(bad)
in
jmp
in
shr
adc
sbb
pop
add
inc
add
rcr
mov
inc
pop
mov
or
xor
jp
xchg
fstp
(bad)
aad
jge
xlat
mov
sbb
sti
mov
cld
xlat
imul
js
pop
push
outs
jnp
(bad)
bound
mov
outs
push
retf
xchg
add
je
jne
repnz
xor
inc
pop
jmp
je
inc
sub
ds
xchg
cdq
rol
cmps
std
mov
sbb
jns
lds
pop
push
jbe
adc
outs
outs
jne
div
outs
data16
mov
cmp
adc
pop
mov
inc
loopne
(bad)
lock
into
mov
pop
es
lods
jo
push
adc
fisttp
mov
sub
das
jno
add
data16
ret
xchg
lahf
test
pusha
movs
adc
push
aas
popa
hlt
dec
(bad)
loopne
pusha
or
hlt
mov
jno
shr
sub
cs
outs
lock
and
or
adc
cs
(bad)
aad
out
movs
lods
stos
lds
xchg
shr
push
xor
pop
cld
mov
xor
hlt
add
sbb
div
cmc
mov
or
dec
cmp
inc
clc
pop
xchg
sub
mov
in
jne
jne
jmp
sub
cwde
pop
lahf
dec
mov
mov
mov
mov
xchg
add
and
mov
nop
retf
mov
ss
mov
es
movs
push
and
arpl
adc
sub
loope
test
call
mov
sahf
add
in
aaa
mov
lock
pop
mov
add
adc
and
es
in
stc
sti
jg
aaa
adc
jb
int
sub
xchg
and
pop
lahf
shl
(bad)
xchg
jmp
test
lods
popf
mov
xchg
dec
paddq
(bad)
xchg
dec
sahf
cs
pop
jmp
inc
bound
imul
cmp
xchg
mov
push
(bad)
loopne
dec
aad
and
mov
lahf
cwde
test
stos
outs
ror
push
push
stos
xchg
sbb
add
sti
xchg
jae
sbb
retf
lahf
cmps
popf
sahf
xor
stos
in
fldcw
mov
inc
mov
pop
bnd
fisubr
les
outs
jg
jae
jne
out
cmp
pop
mov
(bad)
movlps
lods
cli
pop
push
adc
je
ret
jno
pusha
pop
jl
pop
sub
inc
fisttp
or
xor
push
rcr
sbb
jmp
jmp
mov
enter
movs
push
and
inc
mov
or
inc
lock
mov
adc
outs
or
push
sub
or
test
inc
out
loop
repz
push
pop
ror
call
popf
inc
pop
mov
and
add
mov
popa
jno
add
sub
loopne
cli
adc
dec
loope
jnp
(bad)
inc
or
pop
out
pop
inc
idiv
jns
push
and
pushf
std
in
lahf
sub
in
repz
scas
dec
jmp
dec
pop
pop
les
out
jp
mov
lea
sub
scas
sbb
add
and
push
lods
aad
xchg
movs
push
cs
cmp
xchg
sbb
clc
mov
popa
xor
dec
cmc
lock
inc
and
std
jne
ins
fistp
pushf
xchg
dec
aas
ret
es
or
mov
repz
lods
ins
dec
ins
fstp
mul
mov
out
push
leavew
lods
xchg
rol
mov
sbb
push
and
das
or
pop
cmc
mov
(bad)
(bad)
sub
inc
xchg
push
jnp
push
mov
pop
xchg
stos
mov
jae
xchg
push
adc
jbe
cmp
test
jnp
mov
cli
dec
fst
sub
popa
xor
div
js
call
or
mov
sbb
call
jmp
jnp
or
inc
mov
push
xchg
repz
mul
jb
scas
sub
fnstsw
or
iret
daa
jmp
test
(bad)
std
and
stos
mov
sbb
adc
sahf
pushf
ficomp
inc
pop
test
push
es
in
in
pop
push
lods
cwde
popf
test
or
adc
mov
stc
std
ja
je
jl
(bad)
mov
sub
pop
stc
imul
cmps
pop
mov
pop
xor
scas
hlt
push
mov
or
movs
push
jp
sbb
outs
inc
jecxz
push
ins
xor
aas
(bad)
aam
int3
cdq
int
sbb
clc
cmp
jle
mov
rcl
push
fimul
pop
popa
in
das
pushf
or
or
mov
bound
cmc
(bad)
jb
aas
adc
sar
jmp
popa
in
push
daa
sub
mov
cmp
sub
imul
mov
inc
mov
rol
(bad)
mov
(bad)
aas
fwait
dec
sbb
aaa
jb
cmp
mov
xchg
mov
sti
push
fdiv
mov
jp
or
xchg
adc
xchg
enter
mov
pop
mov
xchg
rol
jge
repnz
ds
push
adc
ret
cmp
pushf
adc
jmp
mov
dec
cmp
rcr
xor
stos
sub
das
mov
ss
cwde
push
sub
ins
xchg
imul
in
pop
repnz
push
xchg
and
popa
jle
stos
loop
mov
frstor
or
sbb
xchg
inc
sbb
adc
inc
jnp
sub
out
in
dec
lods
dec
je
push
aam
fidiv
sub
pop
cmp
sbb
xor
sbb
movs
cmc
les
jmp
stos
(bad)
das
cmp
imul
jmp
pop
mov
or
mov
cmp
fmul
std
icebp
popf
in
lds
imul
or
icebp
push
fstp
sbb
jb
mov
aaa
and
test
mov
idiv
jmp
or
lock
jp
dec
aam
pushf
dec
lods
mov
push
mov
dec
out
fstp
or
xor
pop
push
push
fnstenv
pushf
out
std
jnp
jl
iret
ins
xchg
pop
addr16
pop
outs
ins
hlt
lods
ins
stc
outs
xor
mov
adc
or
jne
xor
call
fcom
stos
add
fwait
cmc
out
mov
push
mov
and
test
(bad)
mov
pop
pop
and
cmp
test
jecxz
pushf
add
mov
mov
mov
les
pop
aam
ins
or
push
rcl
in
push
push
lock
jne
addr16
mov
push
sbb
xlat
adc
lds
aas
(bad)
int
or
call
xchg
mov
inc
or
inc
popa
test
adc
sbb
cmp
fisubr
cmp
mov
inc
jno
fisttp
dec
rcr
ret
cmps
inc
out
in
push
cmp
test
ror
loope
popa
fsub
rcr
mov
nop
jmp
push
jb
shr
xchg
push
or
lock
mov
jbe
add
add
push
mov
jmp
mov
repz
ins
xchg
jbe
pop
lock
cmps
not
imul
pop
ror
adc
cmp
mov
or
sbb
jb
repz
mov
retf
mov
mov
mov
mov
xor
ret
and
adc
cli
and
je
add
pop
adc
lahf
mov
adc
xchg
push
pop
imul
pop
add
pop
push
jg
fcmovu
inc
movs
in
mov
rcl
and
jbe
pop
lods
je
sahf
pop
neg
fimul
push
mov
mov
sub
sahf
push
push
movs
adc
adc
int
jp
xchg
or
pusha
movs
scas
aaa
scas
int
fimul
jns
inc
movs
inc
inc
jmp
jmp
jle
fsub
xchg
mov
in
fmul
inc
lahf
push
xchg
pop
push
xor
dec
pushf
and
popf
out
(bad)
xchg
mov
cmps
mov
xchg
clc
jge
xor
xchg
and
xchg
pushf
sbb
aas
dec
dec
jae
mov
mov
das
add
lods
mov
jg
and
xrelease
hlt
scas
addr16
iret
pop
sub
pop
movs
push
in
cmp
mov
sbb
inc
out
aaa
das
dec
mov
xchg
test
(bad)
adc
cmc
dec
test
jo
bound
dec
(bad)
std
inc
call
std
imul
push
pop
mov
sbb
dec
dec
jbe
jmp
les
sbb
xlat
jne
xchg
jl
div
xchg
mov
cmc
stc
int3
add
push
movs
adc
cld
mov
xchg
fbld
and
aas
nop
nop
aad
add
pop
movs
pop
fwait
inc
aam
mov
push
gs
loope
imul
jae
or
js
fdiv
stos
mov
add
int3
xor
lea
and
fcom
mov
cmp
xor
sub
imul
or
mov
xchg
pop
fidivr
inc
push
cmp
movs
sbb
mov
mov
add
sbb
cs
mov
xchg
(bad)
(bad)
in
xor
call
ss
mov
jae
jecxz
jecxz
fwait
loope
add
leave
cmps
imul
dec
dec
repnz
fidivr
fdivp
push
add
ins
add
cmps
out
mov
pop
lock
retf
and
into
dec
xchg
repnz
movs
jg
push
sahf
mov
xchg
out
mov
mov
add
cmp
cdq
daa
pop
mov
add
mov
test
repz
mov
push
retf
xor
inc
and
loope
cmp
jle
push
test
mov
add
popa
(bad)
mov
jns
(bad)
cmp
dec
sub
sahf
mov
ror
mov
mov
sbb
or
xor
add
push
push
imul
into
push
jg
repz
and
jno
push
rcl
cdq
fnstenv
add
dec
inc
jg
fidiv
xor
or
mov
mov
data16
push
daa
xchg
daa
xchg
test
jnp
add
sub
in
adc
and
and
inc
div
call
bound
mov
test
sbb
mov
rol
clc
push
aad
mov
fs
fucomip
add
test
xchg
push
(bad)
cld
mov
xor
xor
ror
adc
push
mov
jne
daa
faddp
xchg
cmp
rcl
cld
jns
ror
jmp
and
dec
imul
sub
adc
in
mov
repz
cmp
repnz
or
pop
xchg
lods
or
enter
ficom
cbw
call
cmp
dec
mov
fistp
in
dec
mov
scas
adc
cmp
add
js
inc
xchg
les
(bad)
movs
pop
xlat
arpl
pop
adc
cmp
cmp
inc
mov
test
loop
mov
jp
xlat
xor
xchg
push
mov
in
sub
mov
call
mov
and
sub
mov
pop
mov
dec
(bad)
mov
push
xchg
cmp
into
cmp
adc
popf
and
push
xchg
inc
test
or
inc
push
movs
sub
and
icebp
or
jmp
cmp
adc
pop
mov
mov
aas
mov
xchg
pop
pop
push
cmps
daa
jmp
in
rcr
pushf
into
imul
clc
jmp
jo
and
shl
and
ficom
daa
or
xor
cwde
cmp
aad
jmp
das
sub
jo
pop
loope
fisttp
push
mov
xchg
push
or
daa
sbb
mov
xlat
cmp
cld
dec
shr
mov
pop
mov
shl
fidivr
mov
mov
pushf
cmp
lock
jmp
mov
sub
ds
jno
ss
or
sbb
fsubr
in
outs
dec
int3
lea
into
sbb
adc
pop
cmp
push
xlat
push
mov
jmp
outs
ret
stc
jg
retf
mov
loope
adc
js
and
cdq
call
rol
dec
push
dec
mov
retf
rcl
cli
xor
and
pop
stc
imul
xchg
dec
(bad)
fstp
mov
(bad)
mov
(bad)
push
jle
adc
imul
scas
xchg
adc
std
loop
inc
fst
rol
lods
aaa
inc
cmc
mov
pop
mov
cmp
sbb
cmp
sahf
mov
punpckhwd
jb
push
cmp
das
test
mov
or
sub
fucomp
movs
xchg
ret
fiadd
repnz
pop
gs
sbb
xor
scas
inc
push
aaa
inc
pop
mov
push
fwait
lods
out
stos
push
dec
mov
pushf
fwait
pop
cmp
mov
jmp
mov
mov
jmp
xchg
xchg
jle
fstp
cdq
adc
test
hlt
mov
add
jle
addr16
adc
push
mov
(bad)
cmc
mov
push
inc
fcmovne
push
call
xor
push
pop
sbb
jne
arpl
xor
rcl
sbb
stos
imul
fs
dec
add
bound
jmp
dec
mov
addr16
and
adc
loope
mov
and
sbb
push
push
dec
sbb
(bad)
push
nop
mov
fisubr
gs
pop
and
pop
into
test
pop
dec
or
inc
shr
push
push
jns
movs
dec
hlt
mov
and
jae
inc
inc
(bad)
adc
jecxz
ror
sar
inc
cmp
pop
mov
ja
sahf
xchg
inc
and
fucom
lds
daa
pop
fcomip
jge
inc
pop
popf
sti
icebp
in
mov
cmp
stc
and
sub
je
test
icebp
adc
cld
mov
repnz
inc
and
cs
shr
mov
mov
bound
ds
out
out
inc
push
mov
call
jnp
xchg
call
outs
mov
mov
enter
dec
pop
rcr
adc
hlt
outs
fcmovbe
jae
test
mov
and
and
dec
loop
aas
sbb
fisub
mov
cld
lds
mov
add
retf
aad
cmp
add
int
push
ret
push
sub
mov
cmp
cwde
mov
xor
jmp
sbb
sbb
cld
test
mov
in
pop
ins
mov
xchg
sub
shr
outs
mov
push
cs
movs
xchg
sbb
(bad)
js
movs
mov
jl
jmp
pusha
out
adc
shl
aas
push
cmc
dec
mov
int3
mov
test
adc
adc
push
mov
push
or
dec
jns
sub
dec
into
or
call
pop
sbb
push
jns
mov
push
dec
and
ret
iret
dec
push
jg
or
dec
rcr
imul
pushf
cld
xchg
jp
int3
push
jb
push
pop
pop
and
pop
aas
out
or
shl
stos
sti
lds
push
pushf
xchg
mov
sbb
sbb
mov
out
popf
sub
mov
add
mov
iret
xchg
or
popf
push
jmp
in
call
in
pop
xlat
fst
xlat
jae
adc
pop
out
push
(bad)
js
dec
(bad)
(bad)
fmul
cmps
xor
lea
shr
adc
shl
sbb
in
ror
and
and
out
je
sahf
(bad)
lock
or
js
test
ja
jmp
add
(bad)
arpl
inc
repz
add
mov
gs
mov
mov
rol
cmp
dec
cmp
inc
sti
pop
jo
clc
dec
mov
pop
aas
dec
sbb
fst
and
stos
or
jecxz
mov
ret
daa
jmp
pop
call
and
xor
inc
(bad)
out
and
and
nop
scas
cs
add
dec
sbb
call
pop
test
in
out
jl
cmps
jp
jno
cs
mov
add
and
cmp
dec
ror
add
mov
dec
push
sbb
lock
vphaddwd
xchg
cmp
lods
mov
cmp
mov
inc
repz
(bad)
pop
mov
pop
pop
xor
into
popf
in
or
in
mov
push
adc
sub
fwait
push
cdq
mov
ja
push
mov
dec
mov
hlt
dec
jne
fs
(bad)
aas
test
or
ficomp
push
int3
imul
push
loope
pushf
and
xor
mov
add
mov
neg
pop
mov
pushf
fwait
add
or
ror
cmp
push
xchg
cmp
mov
sbb
ret
mov
mov
rol
(bad)
icebp
mov
cdq
or
cmp
pop
mov
sub
push
in
push
add
bound
mov
outs
and
lods
fisttp
and
lock
push
add
clc
fstp
cmp
jnp
call
hlt
cld
sbb
mov
xchg
pop
add
xor
push
(bad)
out
ja
xlat
push
pushf
mov
add
imul
js
jp
fisttp
sub
sub
lods
pop
mov
lock
pushf
test
sbb
and
mov
outs
loop
lods
add
cmp
std
jp
adc
jno
repz
ficomp
mov
xchg
inc
mov
sbb
ror
outs
pop
inc
xchg
xchg
stos
inc
pop
mov
outs
icebp
in
clc
mov
cs
push
sbb
adc
daa
sub
or
aam
cmc
mov
scas
mov
stc
fist
mov
aad
and
sti
mov
cs
pop
cdq
add
leave
out
add
push
mov
dec
in
inc
or
cmp
outs
test
in
ds
and
add
jle
xor
push
mov
sbb
test
mov
mov
xchg
in
sbb
or
iret
test
es
mov
jge
push
mov
icebp
mov
pop
aaa
jns
outs
inc
sti
rcr
clc
add
xchg
mov
xor
repnz
scas
lock
in
test
lods
jb
inc
push
pop
jmp
js
xchg
inc
cli
and
xchg
mov
in
out
je
mov
out
fiadd
fmul
ficom
inc
add
retf
cmp
dec
test
(bad)
cmp
cs
sbb
push
lock
and
or
mov
and
mov
jbe
add
add
imul
sahf
idiv
and
nop
and
push
mov
int3
xor
out
enter
jae
jns
rol
rcl
add
sbb
push
scas
mov
xchg
mov
push
mov
inc
xchg
push
or
aad
sub
daa
push
into
jae
sub
test
aad
sub
cmps
cmp
xor
lahf
and
fcomp
push
addr16
loop
mov
blcs
data16
je
xchg
mov
adc
(bad)
jne
gs
lock
scas
cmp
out
loope
push
xor
jno
loop
push
inc
out
cdq
sbb
inc
sbb
jo
fs
mov
pop
repnz
aaa
mov
sub
mov
jp
jge
jl
cli
jecxz
jle
push
xchg
fwait
inc
outs
je
jb
xor
xchg
lods
push
mov
scas
pop
mov
adc
inc
clc
mov
push
ins
xor
push
push
pop
jae
jmp
add
cld
shl
and
cld
in
sahf
int3
popf
sbb
or
sub
mov
jno
jp
inc
cmc
push
push
xchg
shl
or
pop
in
(bad)
cmp
nop
pop
sbb
mov
arpl
mov
retf
fisub
retf
mov
fld
call
sbb
pop
jecxz
jno
std
popf
jmp
aam
sbb
mov
sbb
mov
pusha
and
push
xchg
daa
aas
inc
test
loop
push
imul
je
push
bound
sbb
xchg
ja
inc
mov
mov
cmc
aam
in
add
pop
in
mov
mov
retf
push
adc
mov
mov
xchg
push
jae
xor
sbb
ds
in
ds
sub
cmp
out
out
icebp
enter
repnz
cmps
pop
(bad)
aam
call
js
xor
push
push
jb
mov
xor
sbb
rol
mov
xor
rcr
pop
pop
retf
dec
push
inc
jnp
aad
push
dec
push
les
pop
jne
mov
jl
(bad)
out
fcmovnu
call
sar
rol
cwde
jp
adc
cwde
popf
add
sahf
iret
mov
aam
xchg
test
inc
das
test
aam
add
mov
dec
xor
in
xchg
xchg
xor
arpl
add
or
ds
mov
mov
xor
cli
lahf
xchg
mov
cdq
xchg
mov
xor
pop
mov
or
sub
adc
arpl
aaa
mov
push
stos
(bad)
icebp
dec
xchg
fwait
mov
icebp
out
gs
adc
stos
or
xchg
xor
or
push
jle
sbb
data16
stos
repnz
shl
loope
push
sub
jmp
lea
add
sub
fsubr
mov
pop
push
or
sbb
and
imul
out
inc
pop
xchg
pop
hlt
pop
int3
jne
fwait
xor
test
dec
adc
sbb
or
iret
sbb
jmp
scas
inc
and
and
mov
in
jge
(bad)
dec
shl
bound
adc
sbb
dec
pop
xchg
push
loop
int3
inc
pop
cwde
test
or
jb
das
sbb
mov
mov
inc
jl
mov
ror
hlt
dec
cmps
xchg
jbe
adc
ja
das
in
or
aaa
(bad)
fbld
mov
jp
xor
arpl
push
lahf
loop
mov
fisub
dec
jecxz
add
jo
jb
cmp
mov
jp
fldenv
int3
dec
inc
std
jbe
or
lock
xchg
xor
icebp
ret
int
or
out
icebp
sbb
dec
xchg
(bad)
cmp
sub
mov
sahf
daa
iret
jbe
ds
fimul
lahf
les
xchg
sub
xchg
repz
aas
je
std
ret
(bad)
cmp
inc
outs
mov
mov
sti
ja
aas
movs
xchg
jl
or
lds
or
cmp
aad
push
adc
popf
cmp
popa
sbb
adc
mov
or
and
inc
sbb
fist
mov
inc
lea
addr16
push
and
and
out
push
movs
push
lahf
mov
or
movs
jmp
mov
retf
dec
daa
and
sub
add
mov
and
cld
push
out
scas
xor
pop
or
cmp
test
cmp
pop
cld
js
out
(bad)
int3
iret
jo
lods
jb
xor
and
mov
iret
adc
cmp
int
dec
int3
cmp
movs
aaa
mov
cmc
ja
and
cmp
or
pop
jnp
xchg
pop
call
jne
xor
push
(bad)
out
or
xchg
cmps
cmp
clc
xor
push
ins
jmp
add
outs
adc
push
dec
imul
or
(bad)
cmp
loopne
call
dec
in
pop
test
push
sub
jne
xchg
adc
mov
in
pushf
sub
(bad)
sbb
mov
cs
pop
or
mov
add
sub
test
mov
daa
mov
push
loopne
outs
aas
xchg
mov
push
sub
stos
mov
movs
mov
or
mov
(bad)
mov
lods
aam
push
dec
pop
jae
call
adc
lods
hlt
sub
sbb
bound
test
xor
mov
ficomp
cmps
mov
movs
dec
shl
lea
sbb
call
jle
arpl
ficom
pop
add
xchg
mov
inc
(bad)
ins
sbb
neg
stos
jg
xrelease
sbb
push
xchg
mov
inc
xor
jg
lahf
mov
movs
lods
jne
sbb
cmp
loopne
push
je
mov
adc
mov
push
dec
movs
(bad)
retf
aaa
int3
sub
inc
lods
jmp
push
and
lahf
push
push
and
inc
jge
leave
pusha
mov
outs
adc
bswap
cmp
xor
or
cwde
hlt
test
fild
mov
push
adc
aas
pop
add
hlt
scas
(bad)
add
inc
add
sub
mov
dec
pop
jnp
loopne
iret
or
cld
mov
push
pop
icebp
call
lock
cmps
jl
add
nop
push
lock
mov
int3
movs
mov
mov
mov
mov
adc
sbb
fidiv
cdq
not
(bad)
xchg
inc
call
sbb
cmps
sub
push
sub
mov
mov
gs
ins
pusha
push
inc
(bad)
push
or
shl
jl
dec
out
cli
push
push
(bad)
cdq
sub
repnz
hlt
mov
push
push
popa
mov
push
pop
mov
lds
cwde
out
out
arpl
bound
test
call
sti
test
inc
pop
out
mov
adc
dec
mov
lods
jge
adc
xlat
mov
inc
test
imul
dec
cdq
add
jge
inc
jmp
add
push
mov
sbb
sub
inc
xor
scas
mov
adc
xchg
xchg
mov
pop
xchg
jno
sbb
fwait
(bad)
and
mov
retf
add
push
mov
outs
lock
cmp
aas
mov
jo
sbb
sub
mov
mov
sub
call
iret
ficom
fs
jecxz
aaa
cmp
push
sbb
js
sbb
jmp
out
cmp
cmp
stos
cmp
movs
jmp
pop
mov
pop
stc
pop
add
mov
sbb
fst
jp
loopne
inc
cmc
into
add
push
repz
shl
xor
xchg
ins
adc
nop
add
mov
rol
adc
inc
test
jg
inc
push
adc
pop
ds
adc
jle
imul
fs
xchg
into
fs
test
cmp
popa
addr16
mov
in
dec
mov
adc
add
stos
jb
push
aam
outs
push
stc
inc
test
enter
fwait
aas
mov
mov
cmp
imul
clc
xchg
pop
xor
xchg
mov
sbb
jp
stc
sub
loop
mov
add
pop
mov
cld
sahf
pusha
idiv
les
aas
jae
inc
aad
pusha
jno
xor
sbb
xor
imul
lds
mov
outs
fstp
cld
call
xor
in
xchg
inc
leave
imul
sti
push
mov
sbb
pushaw
mov
stos
add
lahf
adc
adc
mov
and
adc
in
inc
push
repz
sbb
inc
lea
jo
outs
cmp
test
sahf
xchg
dec
mov
in
icebp
jae
popa
cli
xor
or
sub
(bad)
fcomp
dec
test
xor
repz
jo
jae
jb
popf
fdivr
clc
cld
fidivr
sahf
and
in
out
and
mov
dec
xchg
push
push
and
int
in
adc
ins
fimul
or
clc
push
(bad)
add
(bad)
ja
xor
ds
sbb
sbb
jp
push
pusha
cli
push
mov
push
icebp
dec
sahf
adc
jnp
pop
cmp
pop
ret
scas
xchg
cmp
mov
int3
test
cmp
add
iret
or
sub
aas
lds
push
mov
mov
mov
jp
je
and
push
mov
dec
in
in
outs
(bad)
sahf
push
mov
add
(bad)
lock
inc
dec
push
dec
and
or
cdq
stc
loopne
stos
dec
shl
xchg
inc
stos
loopne
push
pop
pop
sub
movs
sbb
movs
(bad)
fadd
mov
mov
rcl
outs
xchg
das
inc
movs
scas
out
inc
(bad)
adc
mov
inc
in
inc
or
pop
jle
ds
mov
xor
(bad)
popf
cmp
out
jl
xchg
frstor
rcl
push
fmul
imul
cwde
jbe
outs
pop
rcl
out
hlt
push
xchg
push
sbb
lock
enter
retf
lods
mov
call
dec
imul
cmp
pop
ror
pop
daa
enter
sar
ret
shl
hlt
stc
imul
pop
scas
pop
retf
inc
popf
(bad)
lahf
or
test
cwde
inc
shl
or
sub
mov
pop
dec
mov
add
or
dec
jae
popa
out
push
fldcw
inc
dec
or
jmp
pop
test
in
hlt
mov
push
jmp
adc
adc
cmp
lahf
sar
and
retf
ds
(bad)
sbb
loope
sbb
js
dec
dec
fmul
mov
mov
add
xlat
xchg
inc
daa
loop
push
xchg
out
inc
ret
int
add
jle
push
dec
mov
shl
(bad)
bound
loope
(bad)
js
rol
xor
push
mov
mov
sbb
call
in
cdq
sub
sub
sbb
jge
mov
out
cmp
jge
mov
add
sahf
sbb
dec
frstor
jmp
mov
push
xor
pop
iret
or
xor
lock
cmp
repnz
add
ins
int
mov
inc
pusha
jne
addr16
popa
in
(bad)
mov
jg
adc
popa
fld
scas
sub
es
adc
mov
(bad)
mov
out
xor
mov
mov
scas
in
rol
jno
mov
int3
adc
push
dec
popf
add
inc
ja
and
push
mov
movsx
sti
push
adc
retf
bound
dec
bound
push
out
enter
test
mov
pushf
pop
jns
mov
sbb
or
jne
(bad)
scas
push
inc
cmc
loop
cmc
iret
iret
xchg
sub
(bad)
imul
sahf
jl
cmp
rol
movs
adc
enter
lock
retf
(bad)
ss
shl
(bad)
or
loopne
pop
aas
aas
rcr
call
clc
int3
cs
sbb
mov
ret
pusha
das
xor
(bad)
lods
in
add
bound
scas
ror
imul
xor
or
repz
lahf
mov
fwait
aam
mov
aad
test
int3
mov
push
in
clc
mov
cmps
adc
or
dec
fsub
push
push
adc
popf
pshufw
ficom
shl
aas
adc
push
dec
cmp
sbb
les
adc
inc
pop
push
push
int3
stos
cmps
es
mov
mov
(bad)
pushf
out
(bad)
movs
push
ins
(bad)
ja
mov
adc
arpl
push
lods
call
in
addr16
lea
das
pop
(bad)
pop
dec
or
push
repnz
adc
mov
xor
ds
lock
iret
xor
sbb
sub
jo
pop
and
mov
mov
loope
mov
outs
jae
inc
mov
adc
adc
mov
out
sahf
shr
mov
xchg
pop
push
scas
sub
mov
das
xchg
inc
pop
loope
or
call
jns
aas
or
push
pop
imul
xchg
call
outs
stos
enter
cmp
add
cdq
ret
sbb
lea
adc
jae
mov
add
jae
mov
fcom
sub
inc
sti
push
pop
inc
fdivr
out
sbb
adc
xor
fsubp
push
cmp
mov
xchg
and
and
test
push
ins
mov
dec
es
or
daa
mov
xor
jmp
lods
aad
shr
dec
inc
cdq
and
sbb
mov
mov
sub
pop
in
mov
pop
retf
movs
cmc
mov
push
retf
lods
pop
js
mov
xlat
fwait
cdq
and
sub
add
setb
sahf
fsub
adc
and
ficomp
or
mov
retf
xchg
call
jmp
nop
retf
ins
xor
je
(bad)
repz
mov
adc
xor
in
stc
out
pop
ja
xor
jp
retf
jno
lods
jecxz
adc
mov
pop
cmps
cmp
pop
mov
mov
push
inc
popf
fistp
jecxz
add
(bad)
arpl
in
and
inc
imul
scas
cmps
inc
adc
hlt
dec
xchg
int3
mov
pop
daa
and
fld
adc
jne
and
and
adc
push
xchg
xlat
mov
push
jmp
fild
sbb
gs
push
push
pop
in
call
mov
repz
scas
(bad)
jp
cmp
push
cmc
or
adc
pop
movs
push
sti
in
sti
xchg
pop
ret
fst
loope
(bad)
call
pop
stos
scas
rcr
outs
dec
test
mov
pop
mov
mov
aaa
adc
add
daa
cmp
sar
out
add
int3
pop
push
out
ss
xor
adc
in
mov
inc
or
(bad)
cmp
adc
mov
rcr
cmp
outs
fisttp
(bad)
dec
stc
push
outs
mov
aaa
and
push
into
(bad)
bound
iret
in
not
sti
loope
les
rcr
or
mov
pushf
pop
mov
and
push
push
movs
aad
cmp
and
dec
push
pop
adc
lock
and
push
pop
add
inc
fnstcw
ins
shrd
add
lock
mov
popa
adc
mov
arpl
jne
fs
dec
xchg
imul
rcr
xor
mov
inc
popa
pop
iret
out
jnp
jmp
repnz
mov
push
dec
clc
cmp
aam
push
inc
xchg
and
hlt
pop
push
mov
shl
xlat
rol
clc
sbb
mov
imul
xchg
add
pop
mov
pop
add
imul
popf
lea
and
out
inc
test
jnp
pop
push
rcl
push
adc
mov
repz
inc
out
(bad)
mov
jno
xor
mov
pop
outs
(bad)
mov
(bad)
imul
sub
adc
cmp
jg
cmps
inc
mov
or
sub
mov
cmp
or
hlt
(bad)
inc
dec
jne
xor
inc
jle
popf
push
xchg
sbb
pushf
mov
inc
cmp
iret
push
outs
inc
fst
out
jne
inc
cmp
clc
cmp
rcr
int
cmps
popa
xlat
outs
push
mov
dec
push
cs
and
pusha
sbb
out
xchg
outs
leave
stc
mov
lods
in
pop
scas
mov
ret
sub
ret
mov
outs
out
pushf
add
mov
xor
xor
inc
jecxz
xor
stos
sub
ret
or
sbb
stc
aam
pop
jge
lock
cmp
sahf
inc
daa
dec
add
iret
jmp
jg
xor
inc
or
js
frstor
movs
sti
sub
lods
loope
repnz
push
mov
cmp
adc
push
dec
mov
jle
fisub
cmp
jecxz
push
pop
mov
loope
push
push
and
xor
lds
repnz
or
adc
mov
pop
jmp
das
pop
mov
jb
pop
adc
jmp
pop
es
ins
aad
in
repz
xor
sbb
(bad)
test
push
mov
mov
push
xchg
jno
xor
mov
in
rcl
xchg
leave
cli
ins
scas
xchg
cmp
out
xchg
sbb
les
ins
add
mov
enter
mov
mov
mov
sub
mov
jg
or
pop
sub
loop
je
out
cmp
mov
sbb
push
pop
nop
mov
pop
mov
or
xchg
popf
mov
inc
sub
push
push
inc
xor
outs
shr
push
xchg
pop
push
es
sti
aad
nop
mov
js
cwde
pop
je
jp
int3
mov
fcmovbe
pop
xchg
aam
push
cdq
imul
(bad)
imul
sbb
push
daa
jnp
sub
xchg
cmps
pop
inc
(bad)
das
stos
inc
test
clc
pusha
cli
lock
jmp
div
std
sub
jo
pop
push
nop
(bad)
sub
xlat
jo
sbb
lods
push
and
mov
aaa
xor
lods
jmp
xchg
and
or
rcl
xlat
aas
fild
xor
outs
jmp
(bad)
jbe
ret
sti
cmc
test
and
movs
xor
in
ror
not
stc
pop
adc
pop
cmps
lock
aas
call
(bad)
and
fcom
mov
jl
or
push
out
adc
out
ror
aad
mov
int3
mov
ret
inc
cdq
jno
and
call
fs
aaa
push
pop
mov
mov
jo
mov
ret
in
adc
pop
fucomp
and
sti
aam
cdq
inc
mov
arpl
pop
xchg
mov
mov
sub
jnp
icebp
sub
or
mov
dec
dec
xchg
rcl
xchg
out
mov
add
xchg
jne
movs
scas
lods
nop
fistp
jne
sbb
fcomp
and
cmps
jl
add
pop
aas
imul
shl
mov
sub
jae
or
and
sbb
cwde
cmp
movs
jmp
rcl
les
fcomp
jp
xchg
xchg
inc
cmp
jl
add
sti
fs
pop
(bad)
std
jl
adc
xchg
daa
sahf
mov
cmp
adc
lods
addr16
(bad)
out
pop
std
push
or
gs
mov
inc
xor
gs
and
sub
cmp
rcl
cs
xor
ret
dec
jl
call
push
shl
fidiv
(bad)
stc
rol
mov
mov
js
movs
jecxz
push
mov
cmps
pop
sub
ja
xor
je
imul
ins
xchg
pop
or
ficomp
imul
mov
add
cmps
gs
cmp
inc
test
in
nop
push
mov
popf
stc
mov
ds
cmc
jb
sbb
adc
mov
out
inc
fst
loop
sbb
daa
lods
jg
jo
cld
pusha
lea
jle
call
add
dec
pop
inc
xchg
inc
bound
xabort
or
lods
xchg
pop
and
aad
mov
or
js
std
test
dec
xlat
cmp
scas
addr16
adc
mov
loope
stos
stc
adc
push
pusha
xor
shr
jnp
dec
and
rcl
and
push
cwde
xor
call
enter
ins
icebp
adc
test
dec
add
dec
std
fwait
call
add
push
inc
out
pop
lea
loope
pop
imul
retf
aam
das
pop
push
test
and
shl
shl
mul
jno
in
test
pop
inc
mov
sbb
add
jl
cli
mov
idiv
leave
adc
and
jmp
retf
dec
cmp
and
stc
cs
jmp
and
imul
mov
call
pusha
and
xor
in
dec
scas
lods
push
inc
stc
sub
mov
sahf
push
sub
cmps
push
mov
test
mov
test
inc
mov
mov
retf
jne
fnstenv
sbb
inc
ins
js
ja
xchg
pop
xor
outs
sub
mov
mov
mov
aad
mov
ins
push
cmp
pop
retf
dec
and
loope
cmp
mov
sub
fs
mov
cmp
push
aad
inc
test
pop
add
movs
stc
jbe
hlt
mov
jmp
popa
popf
and
sar
cdq
mov
push
pop
or
pop
jg
xor
mov
imul
xor
in
pop
xor
jo
xchg
jno
xchg
stos
push
push
mov
addr16
lds
pop
sbb
sub
adc
sbb
push
cmp
inc
cli
pop
dec
aam
scas
stos
jmp
push
pop
fistp
jae
arpl
jge
lods
in
rcr
dec
and
sbb
in
jnp
popf
mov
pop
pop
je
cdq
jg
sub
cmc
out
outs
jmp
and
in
sbb
arpl
xchg
mov
jae
std
imul
(bad)
ret
push
les
aad
cmc
(bad)
(bad)
ret
mov
pcmpgtw
fild
and
mov
sbb
xor
pop
pop
xchg
cs
add
mov
aas
arpl
or
fsubr
into
sahf
cli
and
stos
xchg
jnp
or
and
xor
push
ins
jmp
xchg
mov
mov
sub
mov
int3
std
push
scas
dec
aas
adc
in
or
fwait
(bad)
je
inc
retf
sbb
in
jne
or
mov
sub
ds
loope
mov
mov
pop
call
addr16
pop
inc
aam
push
push
cld
inc
gs
stos
test
xchg
out
or
jp
push
or
mov
std
in
mov
push
ss
and
mov
mov
or
into
jbe
mov
das
cmp
mov
ins
cwde
pop
stos
xchg
iret
(bad)
imul
push
add
pop
xor
into
or
mov
aad
mov
inc
mov
sub
outs
lds
fnsave
xor
(bad)
adc
psubd
ins
scas
adc
xor
out
push
leave
or
mov
or
xor
add
repnz
mov
jno
fnstcw
(bad)
repnz
(bad)
sbb
mov
arpl
into
(bad)
xchg
bound
cmp
les
push
dec
icebp
stos
pop
adc
xchg
leave
ins
fs
jae
dec
add
push
int3
cs
fcomp
jne
or
cmp
pop
call
jno
inc
push
mov
cmc
leave
out
sub
jmp
or
mov
jb
pop
popf
xlat
or
dec
test
mov
in
(bad)
and
nop
mov
and
dec
dec
shl
add
fs
outs
sbb
xor
(bad)
mov
jmp
and
and
inc
pop
add
scas
aad
push
jmp
jns
fcom
aam
push
cmc
fbstp
mov
adc
dec
ror
rol
into
popa
stc
inc
stos
in
stos
lods
aaa
(bad)
xchg
jne
xchg
jno
cwde
pop
sbb
mov
push
xchg
mov
mov
sbb
and
adc
out
sub
pop
arpl
ficom
xchg
test
inc
push
pusha
dec
pop
jo
cdq
or
nop
out
xlat
pop
sbb
fwait
mov
ins
xor
ret
cmps
mov
pop
cmps
imul
(bad)
push
mov
adc
pusha
dec
mov
xor
xchg
nop
push
lods
mov
sahf
inc
add
das
cdq
test
add
mov
adc
scas
dec
inc
ja
sub
and
adc
adc
mov
loopne
pop
cwde
xchg
and
sbb
or
cwde
data16
nop
inc
ins
pop
je
shl
inc
push
(bad)
(bad)
inc
cmp
and
aas
retf
adc
call
pop
neg
rcl
mov
adc
pop
adc
xchg
or
adc
dec
sbb
mov
adc
out
mov
mov
and
mov
mov
jge
out
push
(bad)
mov
push
xor
out
sub
mov
lahf
mov
out
fist
push
cmps
out
push
and
cmp
int
cmp
mov
jle
jl
bound
ror
push
push
scas
fisttp
loop
nop
jns
cs
imul
aad
xchg
push
pushf
jp
jl
lds
mov
adc
push
xor
push
test
ss
xor
xchg
dec
cmp
xor
add
ja
and
loopne
je
(bad)
retf
sbb
addr16
sbb
outs
xchg
into
adc
(bad)
jecxz
call
add
mov
adc
inc
lods
mov
dec
or
sbb
jmp
or
sub
pop
and
add
dec
or
(bad)
add
movs
dec
adc
lock
stc
mov
addr16
jnp
test
(bad)
sahf
pop
ret
xchg
je
les
xor
les
cmps
lods
aam
(bad)
fidiv
ja
enter
jb
bound
imul
sub
cmp
ins
std
jmp
neg
mov
or
jg
sahf
xchg
xchg
fmul
cmc
fldenv
dec
or
jle
mov
shr
(bad)
lds
inc
stos
into
xor
movs
jmp
cmp
scas
retf
push
and
imul
jno
scas
mov
jp
fldcw
jp
ret
loop
fisubr
call
in
test
loope
call
cli
mov
in
(bad)
fisubr
dec
loope
jno
div
fsub
push
inc
mov
pop
cmps
sbb
xchg
fcmovnu
cli
push
and
leave
aam
sti
or
push
mov
addr16
add
pop
std
jle
test
inc
or
xchg
lidtd
push
mov
mov
(bad)
push
push
adc
and
or
push
push
pop
mov
xchg
ss
sbb
int3
inc
sar
mov
mov
idiv
fcos
adc
cld
xchg
add
loopne
fcom
mov
xchg
xchg
jne
xchg
push
mov
(bad)
and
cmp
sbb
cli
xor
lock
or
or
lahf
sub
mov
or
push
bound
xchg
lods
sbb
or
jmp
popa
scas
ficomp
cwde
xchg
pop
push
jg
inc
xchg
fisub
ins
ret
sbb
sub
cmps
xor
sbb
jbe
aad
push
jno
mov
mov
movs
mov
popa
les
sub
dec
(bad)
aam
fstp
sar
inc
and
cli
dec
fisub
mov
mov
inc
inc
retf
or
inc
out
(bad)
mov
sbb
fild
in
test
sub
es
scas
retf
jp
bound
sub
bound
outs
xor
es
add
cmps
lock
outs
dec
outs
sub
add
add
add
mov
or
sbb
jne
xor
cmp
push
adc
inc
xchg
fistp
test
mov
loope
mov
mov
cmp
movs
(bad)
in
add
mov
stos
mov
lahf
push
repnz
inc
(bad)
mov
fpatan
fbstp
into
aam
inc
add
pusha
sub
and
dec
sub
pop
jp
xchg
test
sbb
sbb
aas
jmp
icebp
das
ja
cmc
out
popf
xchg
out
std
mov
inc
push
inc
lds
icebp
retf
jl
jmp
cmp
push
(bad)
cmp
jmp
inc
mov
rol
cmps
push
dec
bound
push
je
cmp
jmp
pop
js
xor
aaa
xchg
(bad)
xchg
repz
fldenv
mov
mov
cmp
rcl
ret
xor
shl
or
(bad)
xchg
xor
dec
xor
call
test
adc
in
outs
mov
ret
pushf
cdq
jmp
das
(bad)
aaa
jge
(bad)
cmp
dec
sub
pop
pop
mov
xor
popa
imul
ins
movs
xor
push
dec
adc
inc
dec
lods
xchg
out
(bad)
rol
dec
push
pop
sub
or
mov
sbb
in
sbb
sahf
pushf
repz
or
mov
add
pop
xor
and
lahf
es
inc
bnd
mov
fld
push
xchg
add
and
jne
mov
and
xor
sbb
adc
fwait
neg
sbb
cmp
fist
fisubr
cmps
(bad)
out
sbb
ret
and
neg
test
jecxz
popa
xchg
lahf
xchg
xor
(bad)
popa
adc
sbb
inc
jp
ss
xchg
sbb
rcr
ret
sub
sub
stc
ds
sti
popa
leave
int
jo
lea
test
ja
lea
jmp
repz
out
jb
xor
sbb
ins
retf
or
inc
in
and
pop
aam
sar
add
adc
sar
ja
ret
cmp
mov
mov
mov
jnp
cmc
jg
rcr
lods
mov
mov
iret
push
retf
inc
fdiv
mov
mov
int3
fdiv
scas
in
xchg
aaa
push
movs
je
cld
aas
mov
js
jg
mov
adc
jbe
mov
shl
test
cmp
mov
pop
hlt
or
aad
stc
dec
mov
ja
scas
iret
test
cmp
fist
pushf
xchg
in
call
push
adc
xchg
add
jl
jmp
cmps
iret
aaa
cmp
push
test
rcr
mov
fs
js
adc
icebp
(bad)
(bad)
cmps
sbb
or
imul
xor
out
jnp
mov
pop
cmp
in
loop
repnz
sub
int3
aas
inc
sbb
mov
bound
jmp
cmp
xor
and
jb
adc
(bad)
cdq
cmps
jecxz
or
add
sub
mov
or
lods
cmps
jae
fnstsw
adc
repz
pop
mov
sub
push
mov
mov
js
shr
(bad)
in
and
pop
jle
mov
in
in
jns
rol
jbe
cdq
out
inc
cmp
push
mov
mov
mov
gs
xchg
cld
pop
adc
xchg
push
jmp
mov
mov
sbb
js
in
cvttps2pi
mov
xlat
hlt
mov
test
test
xor
sbb
rcl
mov
mov
js
jmp
gs
ror
jp
sub
scas
push
outs
retf
lock
mov
mov
fild
and
rcl
fcom
pop
push
aam
sub
shl
scas
push
adc
shl
mov
movs
movs
dec
rol
les
or
je
xor
(bad)
outs
mov
pop
fidiv
mov
jb
jns
mov
adc
jle
adc
jg
mov
pop
and
movs
xor
out
ret
imul
pop
xor
inc
inc
and
addr16
inc
jge
jl
push
ds
xchg
dec
clc
aas
jb
retf
sahf
pop
(bad)
fstp
in
adc
fld
scas
xchg
sbb
ret
jle
mov
pop
xchg
mov
outs
fs
xchg
(bad)
mov
std
loope
lahf
cmp
mov
leave
mov
push
sub
scas
mov
mov
or
pop
xor
cwde
xor
das
out
ret
das
jg
jne
arpl
ins
xor
xlat
cmc
aam
xor
add
lahf
fwait
cmps
jmp
pop
sbb
or
dec
and
shr
jbe
ins
pop
sbb
retf
call
(bad)
out
fnop
fimul
xchg
call
mov
xchg
imul
bound
xor
push
or
push
into
pop
jp
mov
sbb
sub
inc
inc
repz
pop
and
adc
ret
jnp
xchg
jmp
inc
call
push
repnz
jbe
mov
jmp
pop
mov
in
pop
xchg
push
dec
mov
add
push
or
ja
in
pop
call
and
cmp
sbb
lahf
sub
int3
sub
test
fcomp
cmp
fst
pop
push
xor
mov
aaa
pop
jp
jbe
or
push
fmulp
cld
adc
call
jmp
les
test
or
push
inc
mov
pop
adc
rcl
mov
xchg
sar
into
les
stos
cmc
ret
movs
sub
imul
lahf
jmp
sub
push
je
push
repnz
xor
xor
out
jno
push
jmp
stc
stos
adc
stc
jmp
data16
dec
pushf
sbb
std
jle
das
test
xchg
loop
mov
(bad)
bound
aam
bound
call
mov
jbe
cdq
push
mov
rol
sub
outs
cld
push
jb
cmp
pop
test
ud2
xor
pushf
or
in
jg
int3
cld
loop
fwait
xlat
jns
push
ja
push
push
ds
adc
iret
addr16
dec
jmp
in
pop
cmp
mov
repnz
(bad)
les
shl
popa
inc
push
mov
imul
leave
xchg
sbb
movs
call
ins
jae
addr16
add
push
mov
pushf
lahf
xchg
cmps
jno
sub
xor
cdq
aam
xchg
gs
(bad)
jmp
out
push
cmp
sbb
dec
shr
sub
push
add
adc
push
pand
popf
stos
xlat
cmps
push
mov
xor
push
in
xchg
xor
movs
ja
pusha
pop
push
ja
mov
outs
jne
push
ja
movs
jnp
mov
rcr
adc
out
(bad)
xchg
outs
push
aad
outs
int3
jnp
sbb
add
push
mov
out
retf
(bad)
xchg
sub
xor
pop
add
call
das
shl
js
xor
add
das
cmps
or
dec
loop
mov
push
iret
mov
mov
jne
sbb
adc
je
inc
scas
and
dec
jge
xchg
test
lea
pusha
inc
add
test
(bad)
idiv
hlt
sub
lods
mov
push
add
xor
pusha
out
ss
ja
sub
cmp
test
mul
push
into
adc
mov
xchg
push
test
aas
test
jo
dec
iret
stos
out
js
mov
test
data16
shl
jg
pop
xchg
test
inc
arpl
mov
mov
and
or
je
cmp
push
jbe
das
das
fs
pop
aam
adc
lods
jg
cmps
(bad)
lods
xlat
dec
pop
or
cwde
les
sub
jno
mov
mov
out
ss
mov
out
xlat
inc
lds
pop
cmp
ja
gs
pushf
sub
cmp
push
lea
movs
or
mov
xchg
xlat
in
aad
call
fcomp
lods
(bad)
shr
(bad)
mov
mov
(bad)
jecxz
or
mov
adc
aad
das
shl
dec
data16
push
add
aam
jmp
js
rcr
pop
shl
sahf
pop
cmp
test
jb
pop
push
stos
push
inc
xchg
retf
sub
push
nop
iret
cmps
js
call
loop
imul
hlt
mov
mov
sub
cmp
arpl
retf
mov
outs
popa
sti
fist
mov
lahf
push
out
push
in
movs
xor
push
jmp
test
aas
retf
mov
das
mov
push
mov
fcom
dec
push
mov
lahf
inc
sub
out
xchg
mov
fs
into
mov
mov
adc
jp
icebp
dec
test
sbb
out
movs
jge
xlat
loope
jo
cmp
or
test
add
xor
push
jl
sub
pop
pop
inc
(bad)
mov
push
outs
or
ins
sub
clc
popa
loope
xlat
cli
(bad)
jne
jnp
dec
pop
loopne
out
mov
call
push
pop
cmp
(bad)
das
int
cs
arpl
fadd
pushf
fst
adc
ja
jmp
aas
(bad)
orps
push
inc
aad
sti
or
mov
mov
adc
add
aas
xchg
dec
enter
push
mov
push
mov
test
out
icebp
dec
and
adc
inc
fidivr
or
adc
push
in
dec
outs
push
adc
adc
adc
sti
mov
in
mov
js
add
gs
sub
cli
sub
loop
scas
jno
fldcw
mov
mov
and
pop
cmp
(bad)
pushf
mov
inc
in
adc
ret
fild
icebp
adc
push
ret
rcr
adc
xchg
addr16
sub
pop
daa
sbb
adc
mov
jnp
pop
hlt
and
aaa
pop
mov
fst
shl
stc
push
mov
sbb
mov
sub
jge
or
push
lods
xchg
retf
or
xchg
pop
adc
cmp
xchg
mov
aaa
lahf
add
jnp
in
cli
shl
ret
mov
sbb
mul
adc
push
push
xchg
push
loope
or
mov
std
sbb
fiadd
push
in
pop
repz
and
jmp
xchg
pop
aam
xor
inc
xchg
pop
dec
inc
mov
je
mov
add
mov
pop
sub
(bad)
clc
push
je
mov
mov
icebp
mov
repnz
out
popa
ins
stc
pop
pop
lds
xor
sub
retf
int3
cmps
and
aad
adc
sub
or
div
adc
mov
or
sbb
mov
mov
jnp
push
push
aaa
inc
mov
mov
not
leave
xlat
je
int
jo
mov
xchg
mov
(bad)
int3
xlat
jmp
push
out
xor
call
pop
jb
xchg
push
test
mul
cmp
and
xchg
mov
in
lea
clc
je
mov
jle
xchg
cmp
jns
sbb
and
sbb
dec
xchg
(bad)
jge
cli
push
movs
test
mov
sar
test
mov
ret
push
loop
repnz
retf
iret
out
jmp
cld
and
xchg
cli
out
int3
shr
cmps
inc
mov
ror
(bad)
das
test
gs
call
pusha
xchg
test
pop
add
into
mov
cmp
and
imul
mov
mov
js
or
mov
imul
add
mov
hlt
mov
mov
push
inc
jmp
mov
aas
jo
mov
xchg
push
lods
cmp
push
packuswb
and
repz
into
ficomp
in
xor
jecxz
enter
fdiv
and
ffreep
mov
out
vmovupd
or
push
jnp
jo
push
(bad)
fbld
(bad)
hlt
xchg
pop
xchg
sbb
inc
mov
pop
cwde
jno
jmp
push
aam
xor
push
sbb
and
ret
and
aad
mov
dec
pop
jle
dec
mov
cdq
and
shl
test
lods
sbb
add
ss
daa
mov
xchg
test
call
jnp
dec
imul
sbb
je
xor
sbb
sahf
push
sub
fwait
mov
stos
xchg
rcl
jecxz
cmp
push
ds
test
cmp
mov
jle
aad
std
cld
and
repnz
mov
scas
mov
cmps
mov
mov
(bad)
lahf
cmps
ins
adc
adc
(bad)
mov
fbstp
push
out
dec
sti
push
lds
mov
mov
push
pop
inc
inc
xchg
mov
mov
xor
sbb
pop
fdivp
sbb
push
cmp
movs
push
mov
rol
dec
mov
outs
imul
jns
push
add
imul
(bad)
xchg
dec
stos
js
(bad)
sar
fiadd
cli
mov
icebp
(bad)
cmp
pushf
(bad)
dec
sub
jb
mov
xchg
and
pushf
js
cmp
inc
lods
xchg
cmps
aas
or
jp
jo
(bad)
cdq
and
jg
retf
jnp
ja
in
loop
in
fcmovu
jecxz
push
not
sub
and
pusha
outs
pop
ficomp
jle
fist
lock
mov
into
dec
iret
fist
jmp
(bad)
add
rcl
push
jmp
mov
pop
xchg
aam
out
aad
jmp
mov
pop
les
iret
aad
mov
xchg
pop
push
call
cmp
rol
sti
mul
in
pop
cmc
lea
aaa
fist
(bad)
pop
pushf
mov
test
daa
mov
ja
lock
xor
rcl
jbe
lods
adc
and
push
xor
push
data16
or
and
fimul
cmps
adc
rcl
cbw
xor
iret
gs
mov
fcomp
out
dec
das
and
hlt
cmps
inc
imul
and
mov
cdq
fistp
pop
(bad)
fimul
je
xchg
fsub
sub
sub
sti
popa
jnp
movs
paddq
nop
movs
pop
jg
xor
xor
in
dec
push
or
ret
pusha
sti
imul
imul
mov
shl
lahf
fld
xchg
sub
outs
jno
fisubr
mov
cmp
mov
ja
pop
adc
out
and
cld
mov
or
ret
in
lock
sti
mov
push
xor
xchg
pop
add
or
cmps
jecxz
retf
or
call
sbb
(bad)
xor
in
sbb
imul
icebp
movs
mov
jl
mov
test
jnp
mov
sub
icebp
aas
and
and
imul
mov
dec
push
sbb
mov
loope
int3
add
stc
adc
xchg
add
cmp
ret
test
outs
(bad)
xor
xor
out
dec
aas
fisttp
aas
jmp
or
add
jae
mov
cmps
jo
or
inc
cmp
jne
pop
xchg
fs
in
xor
call
or
popf
sub
jnp
inc
dec
jo
lds
cdq
out
xor
fistp
add
sahf
jge
and
stc
imul
mov
jmp
test
mov
and
(bad)
dec
pusha
ret
jb
jbe
loopne
(bad)
aaa
loopne
mov
push
and
pop
outs
icebp
iret
imul
lss
jmp
adc
dec
aaa
pop
push
add
test
mov
sbb
leave
push
and
push
cmp
adc
or
pop
pop
repnz
or
inc
(bad)
test
mov
int
sbb
and
aam
dec
pop
add
retf
jle
jnp
inc
jmp
fisub
out
xchg
repnz
pop
into
arpl
cmps
cmps
xor
dec
or
jo
add
xor
and
mov
mov
sbb
scas
sub
cmp
xchg
test
push
mov
pop
div
add
pusha
fwait
hlt
aam
dec
out
fisubr
adc
or
and
retf
mov
xchg
sbb
add
xchg
jae
shl
data16
ror
outs
dec
scas
dec
enter
(bad)
and
sar
jl
adc
fwait
stc
fstp
adc
fadd
call
je
hlt
mov
rcl
add
sbb
xchg
cwde
mov
push
call
xchg
xlat
test
mov
retf
mov
pop
jo
or
fldenv
jecxz
mov
cmp
ins
add
fidivr
adc
inc
int3
test
cmp
pop
dec
inc
rcr
fst
adc
or
lods
dec
pop
out
lea
ins
jle
push
sbb
push
adc
fstp
pop
pushf
sti
sbb
adc
into
mov
sar
pusha
ins
dec
enter
adc
cdq
lock
pop
arpl
in
mov
xchg
nop
das
adc
xor
mov
push
(bad)
inc
fnclex
fld
and
mov
outs
inc
enter
jbe
or
iret
and
lahf
in
lods
sahf
mov
adc
out
fmul
sti
shr
mov
pop
hlt
push
push
call
leave
js
mov
jbe
movs
cwde
lods
dec
or
js
adc
cmp
bound
(bad)
inc
aas
cmp
jmp
xor
popa
(bad)
ins
inc
enter
mov
adc
ret
and
push
popa
add
(bad)
and
xlat
and
or
rcr
mov
stos
adc
mov
or
xchg
inc
ror
push
cmp
das
inc
aas
out
outs
push
inc
repz
mov
in
pop
sbb
mov
rcl
aas
and
into
push
outs
dec
mov
mov
jmp
mov
pop
scas
inc
gs
fisttp
push
cmp
push
out
(bad)
test
cmps
loop
inc
pop
lods
mov
xchg
lea
loop
sbb
mov
(bad)
fidivr
jns
js
rcr
(bad)
aam
mov
outs
retf
enter
mov
xor
stc
movs
dec
adc
fwait
add
movs
rol
frstor
test
xor
cmp
or
xchg
test
xor
push
push
push
mov
dec
adc
cmps
add
xchg
pop
push
fs
aad
idiv
pop
inc
out
sub
cli
cdq
mov
add
push
mov
pusha
aaa
mov
hlt
inc
addr16
xor
in
js
out
ins
jae
xchg
retf
xchg
out
inc
repz
in
add
popa
repz
mov
fild
stc
sbb
pop
xchg
push
js
sbb
xchg
or
ret
pop
arpl
aas
inc
rcl
jmp
or
push
shl
push
and
je
bound
jmp
mov
mov
inc
xor
inc
adc
icebp
ins
xchg
cmp
pushf
int
push
fs
(bad)
cmc
sub
mov
jp
ret
clc
xchg
adc
outs
push
adc
and
mov
int
mov
int
out
cmp
icebp
cdq
pop
mov
adc
push
lods
leave
repz
mov
sbb
sbb
push
fist
fiadd
fld
mov
imul
sub
push
sbb
or
inc
fld
xor
stos
aas
inc
retf
cmp
adc
test
popf
jle
sub
cs
or
jns
leave
mov
je
xchg
mov
fistp
sub
adc
push
jno
mov
push
sbb
arpl
sbb
jmp
test
jb
arpl
adc
pop
sub
mov
addr16
jae
(bad)
jo
add
rol
fimul
mov
push
pop
mov
stos
jae
fiadd
adc
xor
inc
ret
(bad)
daa
mov
loopne
jns
(bad)
out
test
or
adc
iret
movs
sub
imul
addr16
inc
arpl
dec
add
xchg
or
push
test
dec
ds
lea
sub
jge
lods
in
push
xchg
mov
push
dec
jmp
loope
in
test
inc
fstp
call
pusha
test
daa
add
pusha
or
movs
sbb
lea
xchg
ins
xchg
jp
push
xchg
(bad)
inc
leave
leave
pop
mov
jbe
dec
dec
daa
cli
inc
in
xor
outs
or
mov
dec
test
movs
mov
call
stc
ror
test
sbb
dec
xchg
(bad)
clc
adc
push
mov
int3
pop
imul
pop
leave
jno
repz
movs
(bad)
xor
push
sbb
aaa
test
or
pop
shl
add
sar
std
sub
dec
leave
rcl
(bad)
cmps
retf
or
xor
aaa
fldcw
loop
rol
adc
loop
cmc
mov
dec
mov
lea
inc
adc
push
mov
lds
mov
cmc
jecxz
cmp
mov
lea
pop
add
mov
pop
xchg
rcl
pop
mov
mov
jno
and
mov
adc
cmp
sub
ins
jne
push
add
and
cmp
inc
test
xor
repnz
lahf
test
xor
mov
and
int3
xchg
cli
outs
mov
push
call
gs
gs
dec
pusha
bound
test
lahf
pop
cli
xchg
inc
std
push
inc
clc
fstp
es
mov
movs
sub
ins
nop
jne
sub
mov
(bad)
mov
jb
jns
pop
cmp
ins
pusha
cwde
pop
leave
test
imul
aad
cmp
hlt
lods
cmp
mov
and
or
mov
dec
mov
stos
pop
jbe
jne
iret
inc
movs
jg
jnp
fs
sub
repz
dec
add
pop
out
or
cdq
pop
jmp
jg
in
xor
in
mov
sbb
xchg
sbb
add
out
mov
inc
jecxz
popa
mov
xor
retf
cld
out
lds
sahf
test
mov
and
push
jl
and
out
sub
neg
(bad)
push
je
inc
and
sahf
add
pop
jnp
or
adc
mov
cli
mov
mov
repnz
cmp
mov
mov
xchg
jecxz
fstp
or
xor
call
and
fs
(bad)
jl
mov
jg
mov
inc
sbb
cs
inc
pop
adc
movs
arpl
js
mov
fdivrp
movs
sub
jl
adc
popa
adc
mov
hlt
or
ficomp
mov
cwde
push
stos
(bad)
push
bound
aad
adc
cmp
cwde
xor
add
pop
sbb
adc
test
in
push
loopne
rep
les
adc
push
outs
dec
jno
in
pop
cmovle
int3
aaa
loope
push
and
sbb
adc
sub
rcr
cmps
mov
cli
shl
imul
add
push
cmp
jl
lahf
cwde
enter
shl
enter
ins
jmp
push
ret
(bad)
repnz
fist
(bad)
fild
and
and
xchg
dec
pushf
dec
mov
sbb
in
cmp
rcl
mov
cmp
dec
test
retf
dec
or
sar
push
in
ret
xchg
push
sbb
xlat
sbb
enter
lods
cmc
aam
sub
dec
add
jns
mov
aaa
and
stc
xor
jmp
popf
rol
out
sbb
adc
and
lods
ins
stos
cli
call
dec
popf
push
adc
add
xchg
movs
outs
fld
shl
xchg
sahf
dec
cdq
jno
inc
jae
or
repnz
cmc
leave
push
and
idiv
loopne
test
xchg
fs
stos
leave
cmp
bound
sbb
ror
scas
idiv
sbb
jl
mov
lds
mov
je
dec
pop
push
and
cli
imul
mov
pushf
pop
xlat
xchg
test
xor
dec
rcl
sub
retf
sub
not
add
cmp
pop
bound
xchg
pop
ret
jmp
stos
arpl
(bad)
and
jmp
jge
push
pop
mov
dec
cmp
pop
inc
fimul
lahf
cmp
adc
mov
fs
jl
int3
mov
rcl
arpl
daa
movs
(bad)
fistp
mov
dec
jle
xlat
push
pop
(bad)
push
pop
fimul
pusha
sub
pop
cdq
xchg
cmp
pop
in
lock
add
retf
outs
imul
into
add
xchg
and
rcr
jnp
enter
mov
inc
int3
jmp
fisttp
jne
or
or
lods
push
xor
cld
lock
mov
cmps
inc
jmp
js
stc
bound
mov
pop
imul
jmp
push
pusha
lods
mov
stos
fsub
xor
inc
xor
and
xchg
out
jo
jmp
repz
iret
xchg
or
(bad)
lods
jg
loope
mov
rol
movs
inc
and
xchg
(bad)
xor
test
(bad)
lock
(bad)
mov
retf
cmps
mov
mov
jb
dec
push
hlt
fucom
repnz
xor
out
mov
add
sbb
dec
dec
xchg
stos
cwde
sub
push
out
xchg
mul
in
sub
mov
cmp
adc
push
jp
jecxz
lods
fisub
int3
sub
inc
rcl
addr16
movs
(bad)
lahf
mov
mov
jbe
sub
mov
or
add
pop
mov
cld
push
cli
(bad)
and
popf
ds
pop
pusha
inc
cmp
ja
aaa
adc
dec
cmp
jge
and
sar
cmp
fwait
ds
mov
pop
sub
or
in
movs
mov
sub
add
stos
sub
inc
hlt
leave
retf
dec
jg
cwde
jno
fwait
push
mov
retf
mov
mov
shl
xchg
shl
xor
fsubr
scas
js
repz
jo
sahf
xor
div
cmp
jo
jns
or
cld
dec
xor
pop
mov
mov
jg
dec
xor
loopne
push
div
mov
xchg
push
pop
xchg
(bad)
pop
and
mov
gs
in
push
jl
fstp
fidiv
je
inc
sub
cmp
jg
js
push
and
inc
and
aad
sub
bound
inc
or
test
mov
sub
inc
push
mov
iret
fcmove
sbb
jnp
xchg
dec
pop
dec
loope
mov
push
pop
fsub
jge
mov
and
mov
mov
sbb
push
or
xchg
icebp
push
sahf
(bad)
sub
rcl
out
inc
loopne
mov
aaa
sbb
add
cdq
adc
mov
test
cmps
add
mov
dec
(bad)
retf
icebp
shl
in
xlat
(bad)
movs
fst
jmp
push
jle
int
mov
loopne
mov
jo
xor
fwait
adc
xchg
out
loop
add
push
adc
icebp
xchg
pop
cmp
ss
sub
int3
jle
or
push
mov
cmps
pop
xchg
ja
movs
dec
push
push
and
inc
sub
pusha
mov
inc
sbb
or
xchg
adc
xchg
add
mov
mov
(bad)
xor
in
loop
loope
mov
pop
push
ret
inc
js
arpl
sub
push
(bad)
dec
iret
inc
clc
daa
mov
jle
and
adc
add
or
movs
scas
inc
out
add
lahf
cmp
or
mov
and
jmp
stos
cmp
dec
adc
shl
and
mov
mov
das
and
stos
push
xchg
sbb
pushf
jns
inc
fimul
ins
sub
pop
sub
add
cdq
cmp
out
pusha
cdq
push
enter
push
imul
dec
push
or
dec
in
adc
outs
sbb
int
add
mov
lods
pop
mov
or
shl
sar
adc
test
xor
lods
fadd
cmp
dec
dec
stc
ficomp
mov
push
inc
sub
push
shl
mov
xchg
(bad)
dec
aam
retf
or
xor
(bad)
int3
repnz
cdq
out
les
loop
in
inc
and
js
pop
inc
test
repnz
jbe
ins
jmp
lds
sbb
into
mov
pop
jmp
cmp
jbe
add
xchg
and
lock
mov
or
or
sub
nop
fwait
cmp
xor
mov
hlt
jl
adc
clc
push
mov
sbb
(bad)
(bad)
dec
ja
xlat
das
into
lods
rol
push
mov
das
js
push
pop
rcr
fisub
popa
pop
push
push
adc
push
push
das
push
arpl
setp
push
push
push
outs
xor
cmp
adc
jmp
ficomp
ss
test
cmp
add
xchg
ins
lock
dec
mov
(bad)
xor
cmp
push
sub
repnz
push
fbld
hlt
push
stos
imul
stos
jbe
test
int3
xchg
pop
out
sub
fwait
push
and
loope
pop
cwde
cli
xchg
jge
cdq
or
xchg
cli
or
push
adc
enter
ja
lods
outs
movs
push
pop
add
je
jmp
mov
push
xchg
jb
cs
mov
popa
sub
adc
xor
aad
sub
lds
jno
add
dec
mov
hlt
dec
movs
icebp
cmp
push
or
test
into
popf
lods
cmp
hlt
jecxz
adc
pop
pop
loopne
adc
in
out
lods
mov
xor
rcl
test
cmp
mov
jo
xor
rcl
mov
jp
ins
mov
xor
dec
loop
mov
add
rcr
mul
loop
fs
jge
adc
push
jno
adc
fdivp
mov
std
lods
mov
movs
outs
push
xchg
and
test
mov
sub
mov
lods
pop
mov
pop
out
jecxz
dec
ret
sub
cmp
sbb
adc
or
pop
xlat
mov
or
push
pop
int
lds
nop
inc
cmp
gs
int3
cli
mov
inc
add
sbb
jle
fadd
pop
daa
push
add
outs
sbb
mov
les
mov
adc
out
add
fwait
int
jno
popf
xchg
xchg
xchg
xor
jo
das
xor
inc
mov
mov
iret
sub
jp
add
or
pop
inc
call
test
in
sbb
mov
jg
push
xlat
mov
and
pop
test
clc
add
aas
(bad)
jbe
mov
jmp
push
sahf
sahf
and
mov
imul
dec
add
sbb
iret
xchg
pop
cwde
shl
mov
pop
aaa
mov
jno
cmp
out
std
imul
and
outs
jg
les
jbe
pushf
mov
cmp
xor
add
imul
push
fisubr
int3
jle
pop
jp
dec
lock
(bad)
sub
jno
sar
stos
lods
retf
out
int3
inc
aas
gs
clc
inc
push
fsubr
cli
mov
dec
jo
sbb
loop
arpl
lahf
rcl
adc
push
jo
jmp
imul
mov
dec
outs
dec
sub
sti
imul
xchg
and
xor
dec
xchg
mov
pushf
shl
sahf
cmps
addr16
fnstcw
mov
pop
je
and
jp
fwait
or
push
fidivr
push
xchg
pop
(bad)
jnp
xor
jmp
or
imul
lods
mov
add
fnstsw
mov
cmc
mov
mov
pushf
in
inc
adc
or
adc
mov
cmp
mov
cmp
ret
ins
ror
ret
loopne
mov
or
xchg
add
in
mov
mov
and
mov
push
ret
dec
adc
mov
adc
mov
mov
das
xlat
sbb
xchg
retf
mov
jmp
(bad)
int
or
sub
and
inc
add
dec
shl
cs
imul
jmp
or
inc
mov
sub
ret
pop
int
jg
pop
fnsave
mov
call
dec
xor
and
xchg
mov
xchg
mov
mov
icebp
imul
(bad)
xchg
adc
xlat
or
inc
inc
lahf
pop
adc
stos
or
aam
shr
cmovle
loope
imul
pop
mov
mov
add
push
mov
add
shr
and
cmps
adc
sbb
mov
mov
add
shl
or
mov
jnp
push
jbe
enter
scas
pop
and
add
jne
es
adc
pop
(bad)
cs
(bad)
ror
and
cmp
adc
mov
adc
jp
cld
dec
je
ins
int
mov
push
push
sub
jp
(bad)
pushf
inc
out
jnp
fucom
xor
cmp
loop
adc
out
arpl
call
(bad)
mov
imul
push
or
ss
dec
xchg
out
cmp
clc
jmp
xlat
shl
pop
push
fucom
movs
stos
jge
pop
jmp
pusha
dec
dec
pop
outs
push
xchg
xor
push
mov
xlat
out
or
mov
out
add
and
mov
mov
mov
dec
lds
fwait
mov
nop
dec
jp
jge
xchg
mov
mov
aam
sbb
mov
fiadd
outs
inc
pop
xchg
jecxz
call
out
ss
loop
cmps
cwde
ja
ds
mov
test
mov
inc
es
mov
ret
nop
in
mov
aaa
movs
sar
add
div
lds
mov
stc
pop
push
sub
ds
jns
shl
or
cwde
mov
jge
pop
mov
mov
addr16
or
sbb
es
data16
arpl
in
and
add
cld
cmp
lock
mov
loop
lods
ss
sahf
push
ds
pop
fstp
dec
enter
add
jmp
adc
test
mov
addr16
push
aad
jg
pop
hlt
fld
not
mov
or
xchg
pop
int3
test
push
sbb
test
sub
dec
stc
cmps
repnz
lods
inc
jnp
dec
cmp
xchg
scas
cmp
jle
fcmovnu
inc
or
cmp
add
xor
dec
mov
xor
push
imul
mov
sbb
and
fadd
mov
xlat
jns
mov
dec
cmp
pop
add
xor
lds
out
test
mov
sbb
and
jns
xor
clc
cmp
cmp
or
pop
inc
lahf
cmp
rol
in
cli
dec
mov
stos
jmp
cmp
enter
push
js
aad
js
add
and
test
stc
cwde
iret
test
retf
cmp
inc
cmc
lock
mov
xor
sub
int
and
mul
xor
pop
and
adc
sti
cmp
shr
jl
rcr
push
sbb
and
data16
stos
cmp
je
leave
dec
popf
pusha
push
inc
outs
sbb
retf
fst
(bad)
imul
cmp
mov
mov
ins
push
and
pop
jb
movs
daa
xchg
cmp
aaa
push
sbb
int3
popf
jae
pop
cld
int3
mov
mov
xor
ficom
ror
mov
push
ror
mov
jle
jecxz
cmp
int3
out
stc
and
movs
push
add
jge
lock
mov
fisub
popa
and
mov
xchg
(bad)
nop
push
outs
add
das
mov
sti
mov
dec
and
jmp
adc
push
jp
out
jb
shl
mov
push
stc
mov
push
pop
movs
jo
xor
mul
jge
cmp
je
push
fs
xor
sahf
inc
xchg
sbb
jmp
inc
xchg
je
sar
call
mov
add
push
call
call
pushf
popf
jno
mov
push
fnstcw
dec
jg
daa
mov
jnp
xchg
dec
ret
ret
data16
sub
cld
mov
int
mov
push
cwde
inc
scas
inc
(bad)
xchg
cmp
inc
pop
pop
sub
lea
xchg
xor
call
mov
outs
iret
outs
bound
pusha
adc
fld
push
and
leave
loop
aas
popa
aam
dec
(bad)
adc
iret
iret
pusha
mov
sub
adc
fs
pop
pushf
fadd
ds
xchg
hlt
push
into
ud1
and
sub
add
or
mov
rcr
mov
daa
jge
idiv
xchg
sub
in
add
jb
jo
xor
sub
fidivr
add
dec
add
(bad)
lea
fwait
out
inc
xor
jne
dec
test
mov
mov
(bad)
mov
stos
call
mov
xlat
inc
add
mov
shl
jb
movs
push
imul
jae
pop
inc
arpl
xor
mov
stos
and
mov
call
into
aaa
jl
cli
aam
lods
adc
(bad)
mov
pop
xlat
jmp
add
rol
mov
std
stos
mov
xchg
dec
rol
push
(bad)
jge
mov
aad
into
jl
scas
cmp
xchg
xchg
in
xlat
inc
imul
addr16
jae
ins
or
pusha
jmp
iret
mov
adc
xchg
ss
movs
jp
daa
imul
out
test
sbb
mov
leave
rcr
imul
dec
push
or
xchg
test
mov
hlt
or
jge
dec
je
dec
jbe
pop
xor
(bad)
pop
imul
lock
inc
loope
rcl
fdiv
adc
mov
enter
comiss
and
stos
ret
mov
sub
jmp
pop
dec
push
push
scas
push
pop
neg
lods
fsubr
rol
dec
adc
adc
lock
cs
inc
imul
jg
(bad)
repnz
leave
fistp
pop
sbb
jne
repnz
and
cwde
in
dec
dec
out
xchg
mov
lds
js
mov
and
loope
imul
ja
or
iret
or
stos
inc
je
xor
outs
push
xchg
fimul
or
pusha
test
xchg
pop
je
daa
pop
(bad)
mov
not
jne
jle
ins
lods
or
mov
js
in
(bad)
mov
cmp
mov
dec
xor
mov
push
add
xchg
mov
inc
xor
aad
add
mov
cwde
daa
out
mov
xor
add
in
icebp
push
push
pop
mov
jo
xor
push
mov
mov
jb
add
push
popf
jne
and
aas
mov
jno
or
test
mov
fdiv
(bad)
movs
xchg
pop
inc
outs
pop
outs
adc
dec
iret
mov
sbb
mov
jo
xchg
dec
mov
xor
pop
sbb
adc
add
cmp
and
leave
jbe
(bad)
lock
addr16
or
sub
dec
and
jge
cmp
lds
bound
movs
inc
push
sub
mov
idiv
out
addr16
pop
pop
and
lea
and
xchg
mov
sbb
inc
mov
jo
or
int3
inc
aaa
xchg
movs
dec
mov
mov
dec
sbb
addr16
mov
mov
in
adc
inc
adc
fucomip
sbb
push
scas
jmp
lds
mov
stos
into
mul
pop
adc
or
jp
xchg
mov
push
out
pop
outs
repz
shl
dec
shl
pop
in
jae
call
add
mov
icebp
push
jmp
push
sbb
int3
out
ret
xchg
add
dec
arpl
jl
cmp
push
aad
xor
sbb
cmc
push
inc
jne
mov
add
push
cld
mov
shl
dec
add
mov
les
dec
ins
outs
xchg
inc
leave
jno
jmp
idiv
adc
xor
add
lea
xor
test
movs
mov
jecxz
cmp
je
ret
dec
das
dec
cmp
dec
leave
inc
xchg
push
cld
repz
mov
and
mov
add
xchg
sbb
mov
cs
sub
or
mov
(bad)
jmp
add
xlat
cmc
ins
add
jp
lds
mov
add
sahf
div
outs
pop
cmp
adc
mov
xchg
mov
and
inc
popa
aas
cmps
sbb
and
mov
add
repz
cmp
sub
cmp
xchg
(bad)
jp
xlat
daa
or
inc
inc
pop
scas
das
cmc
xor
pop
out
push
or
add
push
pop
push
push
cli
inc
cmp
scas
dec
fs
hlt
sar
ja
mov
fcom
cmp
push
fdivr
lock
mov
out
inc
movs
pop
cmp
and
mov
inc
mov
test
mov
cmp
rol
xor
jo
and
stc
js
mov
jg
mov
push
(bad)
out
cmps
cdq
cdq
clts
or
sub
xlat
inc
xchg
js
cmp
add
sbb
mov
(bad)
(bad)
lea
mov
cmp
call
push
push
mov
in
(bad)
fnstcw
(bad)
outs
mov
popf
not
popa
mov
pop
stos
sub
sbb
enter
pop
pop
and
sbb
xor
sbb
push
sub
dec
add
jmp
stos
les
and
mov
aaa
xor
fcmovnb
mov
mov
or
mov
mov
xchg
sub
xor
push
iret
or
dec
movs
hlt
cmp
lods
daa
test
imul
(bad)
adc
ins
add
pop
mov
cmp
xor
push
jle
mov
and
push
mov
jl
pop
scas
adc
or
iret
addr16
mov
add
loop
add
call
test
icebp
and
fst
push
ins
cli
add
cli
jae
mov
cdq
dec
ret
ins
sbb
xchg
cmp
inc
xor
stos
cmp
mov
and
ret
in
mov
push
imul
scas
jmp
add
cmp
mov
push
sti
arpl
arpl
retf
dec
pop
add
inc
inc
call
in
fnstsw
xor
xchg
cmp
mov
outs
sub
outs
pop
xor
and
sbb
or
dec
xor
mov
rol
call
ja
ds
jae
cli
in
xchg
vmovdqa
in
jbe
dec
pop
ret
cmc
pop
or
ret
jne
test
jne
jns
loopne
xchg
add
call
xchg
push
into
and
mov
and
cmps
mov
mov
pop
push
popf
lods
inc
add
aad
adc
les
(bad)
daa
fiadd
mov
div
pop
data16
movs
jmp
inc
push
xor
or
lods
inc
jne
call
jg
adc
stos
sub
cmp
jne
mov
mov
push
jl
ret
and
push
lods
das
lahf
cld
add
les
fld
push
sahf
sbb
sti
mov
jmp
sbb
outs
jno
fs
pop
add
or
pop
push
imul
nop
adc
leave
sbb
pop
outs
mov
not
int3
mov
popf
mov
sub
cmp
fnstsw
jae
std
sete
or
mov
xor
mov
jle
daa
xchg
clc
repz
stos
cdq
jo
cdq
xchg
outs
cs
inc
jo
mov
push
inc
cmp
dec
mov
xor
leave
pop
dec
sub
in
mov
jae
cmp
popa
xor
int3
ror
and
ss
jno
outs
mov
add
leave
mov
mov
es
adc
ss
add
inc
dec
test
iret
pushf
pop
mov
jg
dec
and
frstor
ret
jg
push
cmp
cld
call
sub
movs
sub
fdivrp
jp
fwait
scas
pop
pop
and
sbb
inc
mov
imul
jno
mov
shl
aas
mov
(bad)
leave
(bad)
xor
stos
lods
pop
aam
cmp
push
inc
sbb
(bad)
adc
pop
mov
sub
lds
jg
shr
repnz
xlat
popf
icebp
pop
and
ret
shl
popa
sbb
inc
add
jno
in
jno
cmp
mov
sub
or
pop
repz
mov
mov
nop
es
jo
retf
push
fstp
cdq
sub
cs
ja
je
pop
outs
adc
in
pop
pop
add
sbb
add
int3
push
test
pop
fcom
add
(bad)
cs
dec
(bad)
(bad)
out
scas
mov
mov
push
push
push
stc
mov
out
repz
(bad)
lock
adc
add
arpl
adc
call
add
lock
inc
daa
retf
push
and
fwait
ins
jbe
sub
mov
xchg
out
imul
outs
sub
js
push
pop
rol
loope
push
mov
fucomp
xlat
ror
mov
push
sub
cmp
cli
jo
loopne
pop
inc
dec
jge
(bad)
(bad)
fimul
cmc
loop
sbb
(bad)
lahf
(bad)
cmc
jb
aam
pop
xor
jge
xor
mov
push
pop
std
shr
pop
push
mov
push
dec
icebp
push
mov
cmp
pop
(bad)
aad
sub
mov
pop
and
fmul
mov
frstor
jae
pushf
push
rol
popf
or
and
mov
call
ds
sub
fmul
push
mov
in
cmps
and
pop
xor
(bad)
movs
jno
push
add
mov
ret
in
scas
shl
push
imul
js
sbb
jae
mov
stos
iret
inc
dec
xchg
mov
lock
test
add
or
stc
enter
inc
xlat
cmp
sbb
ins
mov
mov
pusha
jle
push
bound
rcl
bound
sbb
jbe
jl
mov
xor
sub
mov
pop
jge
into
cmc
xchg
jecxz
inc
scas
jno
adc
xor
sahf
test
gs
push
arpl
dec
push
add
shr
or
stc
push
cmc
or
inc
loop
adc
mov
mov
cmp
shl
sbb
mov
mov
scas
aam
inc
add
adc
dec
xchg
lock
adc
mov
mov
dec
stc
js
in
(bad)
and
add
push
pop
idiv
and
push
popa
cmp
sar
inc
mov
pop
mov
sub
pop
push
sub
pop
loopne
xchg
mov
xor
mov
push
mov
or
mov
cdq
xchg
imul
cmp
cld
stc
pop
movs
push
lods
xchg
jbe
lahf
cwde
xor
xor
jno
mov
ins
cmp
ficom
inc
lods
cmp
xchg
fild
mov
mov
fistp
ins
mov
imul
sub
out
clc
neg
jbe
fidivr
mov
or
in
inc
fld
or
add
jecxz
pop
dec
mov
movs
icebp
jg
mov
mov
(bad)
fsubp
jnp
push
inc
inc
sbb
cmp
and
cwde
add
loope
sbb
pusha
into
cmp
out
pop
cmp
cmps
imul
push
neg
mov
mov
add
popa
mov
(bad)
test
inc
call
xor
mov
iret
cld
sub
or
movs
(bad)
loop
imul
pop
aas
mov
inc
scas
loopne
pusha
lds
inc
sahf
push
push
push
ret
(bad)
(bad)
ss
popa
and
lods
adc
or
inc
fsubr
call
and
sbb
push
cdq
clc
jno
push
and
clc
cwde
push
call
cmp
fs
or
fist
mov
scas
inc
push
pop
nop
pushf
adc
(bad)
in
mov
aam
mov
add
ficom
cmp
ins
out
call
enter
mov
sub
or
stos
xor
jb
cmp
lock
movs
out
daa
loop
in
and
fimul
cmp
inc
mov
push
xchg
and
cmp
jmp
add
loope
retf
popa
int3
iret
imul
cmp
lahf
sahf
stc
sahf
imul
push
or
in
movs
mov
jg
mov
lahf
dec
sub
nop
lea
ret
push
cmp
je
int
aad
sbb
inc
aas
inc
(bad)
in
add
mov
fs
xor
jecxz
pushf
jmp
adc
mov
lods
add
add
adc
or
sub
xchg
imul
or
in
lea
mov
bswap
mov
rcl
dec
sar
sti
mov
retf
std
inc
shl
mov
(bad)
push
push
mov
aaa
inc
jg
jge
sub
arpl
mov
mov
xchg
dec
xor
or
inc
cs
data16
loopne
pop
mov
dec
adc
hlt
pop
es
pushf
xchg
out
add
test
out
ror
mov
data16
sbb
loope
mov
add
out
xchg
pop
inc
loopne
fs
mov
or
ret
or
int3
cmp
mov
popf
adc
(bad)
bound
xor
int3
xor
mov
pop
pushf
xchg
and
sub
xchg
add
scas
mov
lock
cld
cmps
sar
fbstp
xchg
ficomp
adc
mov
or
pop
fs
dec
stc
fld
movs
ret
or
and
jae
inc
mov
adc
cmp
jle
fisttp
or
(bad)
iret
fist
mov
jle
lods
xchg
jmp
pop
jle
xchg
xor
repz
sar
clc
mov
pop
pop
or
icebp
in
xchg
jg
mov
sub
pop
mov
sub
and
xchg
inc
inc
sbb
mov
and
addr16
shl
sar
cmp
mov
adc
test
(bad)
mov
aas
into
jb
pop
mov
lock
jmp
aas
not
xor
mov
mov
das
int
or
mov
ret
paddw
xchg
ss
(bad)
test
bound
push
out
in
lahf
lods
push
mov
cmc
and
mov
retf
mov
jp
adc
jmp
mov
pop
mov
add
test
push
lock
mul
push
movs
xchg
push
mov
in
cmp
loope
jne
iret
outs
inc
pop
inc
in
push
sbb
xor
add
xchg
(bad)
in
pop
rcr
fimul
jns
xor
adc
and
pop
data16
je
(bad)
xor
jg
dec
cli
popf
push
inc
jl
ss
imul
inc
dec
in
mov
ins
sbb
ret
es
loope
fwait
not
mov
dec
pop
pusha
(bad)
jns
loopne
mov
pop
(bad)
daa
jge
pop
pop
fs
jnp
mov
mov
pop
call
les
sbb
cmp
cmp
dec
jne
xor
cwde
jbe
test
push
aaa
test
push
rcl
add
pop
out
dec
stc
in
stos
aaa
into
int3
dec
adc
mov
inc
cmp
inc
inc
cwde
mov
jg
jmp
push
daa
daa
test
xor
out
cmp
popf
cwde
loop
or
jle
leave
das
in
test
push
test
adc
js
lods
jl
js
push
pop
mov
xchg
inc
mov
adc
(bad)
mov
jle
xor
into
scas
xor
or
(bad)
xchg
jg
jecxz
sbb
repz
sti
jnp
xchg
sub
adc
movs
ret
pop
inc
dec
pop
sbb
pop
jp
test
xlat
mov
jp
imul
repnz
inc
jb
cs
mov
test
mov
pop
pop
push
imul
outs
xchg
sub
fisub
test
sub
cmp
pushf
xchg
dec
jle
dec
into
or
cmp
rol
add
lea
test
outs
pop
icebp
sti
shr
out
sbb
jmp
fucomip
pop
in
mov
jmp
push
mov
push
leave
push
cmps
push
enter
in
xor
jnp
mov
cmp
mov
xor
outs
(bad)
pop
sbb
hlt
dec
jl
push
sub
lods
inc
daa
jmp
dec
ss
outs
mov
and
sbb
and
mov
pushf
pop
xchg
pop
xchg
jbe
add
adc
mov
(bad)
test
mov
jp
ins
pop
imul
sbb
ret
or
mov
stos
jmp
pop
pop
mov
push
adc
sub
push
stos
out
cmps
scas
(bad)
loope
push
iret
test
xchg
iret
mov
or
in
mov
mov
dec
xchg
push
int3
fsub
addr16
aam
into
ret
sar
in
jne
jne
(bad)
sahf
ds
or
je
and
inc
pop
clc
sub
mov
pop
xlat
dec
add
adc
add
add
add
js
mov
jb
jmp
inc
popa
push
push
add
inc
mov
mov
push
lahf
jp
mov
inc
rcr
aad
dec
adc
mov
inc
or
jns
and
inc
cmps
push
mov
sub
out
push
lods
loope
push
jp
jae
xor
daa
and
jmp
and
and
ror
jp
inc
neg
rol
xchg
es
outs
push
pop
daa
fisubr
jmp
pushf
cmp
ds
imul
bound
mov
loopne
dec
enter
mov
mov
mov
mov
push
js
push
cld
stc
pusha
pop
call
cwde
dec
call
mov
mov
sub
(bad)
xchg
mov
iret
call
add
loop
xchg
pop
mov
sub
outs
xchg
push
movs
add
ja
pop
pop
cs
mov
imul
mov
outs
mov
inc
push
or
test
cmp
or
mov
int3
mov
gs
xor
xchg
out
int
xor
mov
inc
pop
pop
mov
dec
cmps
jmp
icebp
xchg
xchg
cmps
cmps
fstp
fwait
cmp
dec
js
js
out
cmp
fsubp
jbe
jae
lock
ins
xchg
inc
dec
jecxz
dec
addr16
mov
les
clc
push
push
out
into
mov
lea
(bad)
and
or
ss
test
jae
dec
mov
cli
outs
out
inc
je
fist
cmc
or
aaa
add
sub
cmp
xchg
std
cdq
mov
in
xor
sbb
dec
imul
imul
jecxz
push
lds
or
leave
test
cmp
mov
mov
adc
aam
inc
push
sub
cli
sar
or
into
push
or
pop
and
(bad)
xchg
adc
outs
icebp
in
loop
into
add
pusha
retf
sbb
cdq
or
outs
clc
push
inc
dec
adc
cmp
daa
xor
repnz
cmp
xor
pop
jnp
sub
inc
nop
iret
jmp
mov
dec
pop
push
inc
dec
xchg
sub
call
rol
mov
inc
xchg
iret
fst
out
cmp
sub
xor
push
or
in
fnstsw
(bad)
stos
inc
add
cmp
cmp
test
ror
in
(bad)
(bad)
jno
sub
not
and
push
movs
repnz
(bad)
out
xchg
pop
iret
inc
sbb
jmp
adc
je
out
add
mov
mov
out
fisubr
popa
and
or
cld
popa
popf
in
dec
cmp
daa
jno
xchg
repz
push
(bad)
in
inc
addr16
ret
or
loope
push
aaa
jnp
jbe
xor
jae
push
jle
stc
imul
mov
jmp
div
dec
fist
mov
call
mov
outs
mov
push
lea
add
mov
add
iret
jmp
xchg
shl
cmp
cdq
and
pop
xor
(bad)
xor
das
mov
dec
ret
fimul
pop
sbb
int
pusha
mov
rcl
bound
ins
sub
sub
fwait
jp
and
scas
fadd
div
lds
dec
push
add
sub
pop
jmp
mov
jno
adc
push
inc
cmp
adc
push
retf
dec
cmp
hlt
add
dec
add
retf
shl
jne
adc
dec
ins
ins
push
inc
push
test
mov
in
daa
adc
push
xor
pop
fadd
mov
push
sub
mov
les
lods
mov
push
(bad)
punpckhwd
sbb
in
gs
pcmpeqb
push
jle
ss
fdiv
popf
shl
dec
aad
cmp
js
cli
push
and
mov
mov
in
shl
sbb
push
mov
mov
mov
int
mov
pop
cmp
sub
adc
imul
js
test
jge
arpl
inc
fisub
loope
sub
and
fld
and
gs
ins
fs
inc
dec
es
es
addr16
shl
inc
out
push
mov
shl
ffreep
icebp
mov
stos
jne
dec
test
adc
sub
retf
pop
call
pop
aam
mov
mov
add
cmp
pop
push
adc
dec
dec
jg
stc
mov
sub
shl
icebp
xchg
imul
idiv
push
int3
stos
xchg
retf
loop
pop
jno
les
adc
sbb
push
jmp
add
mov
xchg
mov
jno
adc
scas
ret
in
call
mov
js
mov
rcl
or
ja
xor
and
int
mov
inc
cmps
data16
pop
mov
lods
ror
xor
mov
inc
or
pop
add
les
out
mov
adc
pop
dec
or
shl
or
jmp
ret
xchg
jle
cs
lods
push
add
imul
aam
sub
jge
pop
cdq
inc
and
mov
aaa
imul
jnp
mov
mov
dec
rcr
dec
or
mov
sub
pop
push
and
arpl
sub
sbb
xchg
dec
push
cmp
ret
mov
jg
or
xlat
cmp
mov
mov
xor
je
xchg
add
push
add
js
shl
xor
jnp
cs
and
(bad)
lock
cdq
dec
xchg
movs
lock
push
pop
into
dec
outs
inc
aaa
jne
imul
shl
fsubr
mov
adc
dec
movs
aam
call
dec
imul
pop
sub
and
enter
mov
and
mov
sbb
sbb
and
iret
iret
inc
sub
push
jmp
adc
mov
popa
cli
sbb
push
adc
adc
arpl
addr16
ror
into
mov
lods
(bad)
fsubr
and
sub
xor
or
imul
call
shr
daa
push
dec
les
sbb
in
fdiv
mov
inc
dec
cmp
retf
jecxz
or
push
mov
cmps
ins
hlt
and
ficomp
xchg
add
cmp
jo
dec
ret
out
(bad)
mov
into
pop
mov
inc
cmovp
xchg
out
or
xchg
(bad)
inc
es
pop
cmps
inc
jge
jle
in
sub
fsub
hlt
lock
sub
inc
es
cmp
adc
pusha
mov
mov
ins
in
icebp
shr
or
xor
shr
lea
fsubr
ins
cld
addr16
add
push
test
cli
in
dec
push
lods
sar
out
xchg
xor
nop
push
lea
loopne
popa
inc
pop
mov
mov
test
addr16
cmp
fsubr
push
test
add
mov
call
push
nop
int3
pop
mov
adc
cdq
out
jmp
shl
add
mov
movs
enter
adc
mov
movs
xchg
pop
scas
int3
(bad)
fistp
xor
cmp
ffree
lea
clc
mov
mov
fnsave
(bad)
mov
xor
dec
dec
outs
pop
shl
and
shl
xchg
in
adc
xchg
aaa
ret
imul
xor
fimul
movs
jb
pushf
and
xchg
in
cmps
sahf
sub
push
daa
scas
jo
repz
sbb
lea
xor
mov
hlt
nop
pusha
iret
xlat
jnp
pop
gs
xchg
dec
sbb
or
cmp
and
enter
ret
les
outs
arpl
jbe
std
adc
sahf
imul
sub
or
mov
or
rcr
jo
(bad)
mov
cmp
push
mov
icebp
comiss
pop
inc
push
and
pushf
mov
test
fisubr
pop
gs
repnz
cli
pushf
pushf
inc
retf
sub
jne
pop
stc
pop
fdiv
or
(bad)
fist
fdiv
jge
sub
mov
out
adc
mov
mov
and
or
sub
ret
retf
repz
or
popf
pop
stos
retf
imul
hlt
sbb
jmp
or
push
dec
xchg
push
jmp
push
inc
sbb
dec
fisttp
and
pop
pop
scas
and
mov
mov
push
add
pop
fist
(bad)
inc
test
xor
les
loope
adc
in
xor
aad
xchg
pushf
imul
xchg
pop
(bad)
add
and
mov
mov
popf
xchg
cmp
cld
test
mov
push
adc
lahf
lock
in
aam
rcl
fs
fdivr
mov
mov
arpl
mov
movs
rol
or
xchg
js
mov
and
jecxz
les
clc
(bad)
push
test
vpunpckhwd
mov
addr16
pop
inc
inc
ret
xchg
mov
fcom
data16
inc
mov
int3
sub
mov
sub
mov
mov
dec
add
(bad)
mov
mov
bound
sbb
jl
xchg
push
and
stos
popa
js
enter
mul
in
call
sbb
add
repnz
sti
xchg
aad
ins
icebp
adc
rcl
(bad)
in
mov
out
stos
or
dec
jae
cmc
nop
shl
in
inc
ja
pusha
mov
cmp
add
mov
leave
dec
aam
and
push
cmp
jg
mov
add
or
fcomp
push
imul
mov
adc
cdq
jmp
aam
jns
daa
sti
add
adc
mov
(bad)
and
cmp
mov
sbb
push
std
icebp
inc
sbb
inc
cmp
pushf
rcl
(bad)
mov
pop
cmp
fild
outs
inc
or
pop
sub
in
inc
in
xchg
mov
or
sbb
scas
xchg
aam
or
jae
fadd
inc
inc
inc
pop
fs
test
mov
out
pop
xchg
xchg
es
fld
adc
imul
xor
stc
sbb
add
cmp
int3
cmovp
push
and
sahf
loopne
loopne
leave
enter
fadd
test
mov
sbb
cmp
mov
lods
push
mov
cmps
(bad)
cli
pushf
aas
dec
xchg
popa
sub
cmp
add
adc
xor
(bad)
cmc
int3
or
mov
mov
(bad)
dec
jbe
sub
or
outs
aam
sbb
pop
call
stc
scas
je
mov
push
inc
inc
and
or
cld
sbb
mov
lock
int3
xlat
mov
inc
inc
ss
addr16
mov
mov
and
mov
cmps
mov
adc
cmp
cmp
pop
xor
popf
inc
mov
outs
mov
and
jbe
inc
or
stc
ins
aad
push
mov
push
and
es
mov
stos
mov
lds
dec
and
xor
mov
mov
dec
pop
add
rcl
(bad)
loopne
pop
pcmpgtd
inc
(bad)
fdiv
fsub
sti
sub
in
xchg
add
lahf
sub
fcomi
push
add
cmp
cs
cmps
cmc
sub
std
add
push
xor
icebp
(bad)
scas
sub
pop
cs
movs
mov
mov
in
adc
pop
mov
mov
add
lahf
mov
stc
sti
ficom
and
cmp
rol
add
pop
xchg
lea
call
(bad)
call
cdq
movs
pop
sub
dec
mov
push
sbb
es
cli
rol
and
fistp
and
rcl
sub
ins
rcr
xor
mov
lar
jg
mov
push
jmp
inc
ins
outs
or
std
pop
test
popf
pop
jb
(bad)
jb
ss
add
jp
daa
cli
pop
mov
aad
xor
mov
clc
fild
icebp
test
sar
pop
fwait
mov
mov
ins
mov
movs
and
pop
lods
inc
jecxz
sbb
in
xchg
aam
cmp
test
pop
hlt
jge
sbb
iret
and
inc
cwde
dec
push
sub
out
xchg
dec
pop
sub
dec
data16
idiv
out
xchg
(bad)
out
ror
out
hlt
(bad)
icebp
iret
jg
pop
pop
pop
call
sbb
not
push
clc
mov
fmul
dec
popf
ret
push
gs
mov
adc
mov
js
arpl
test
imul
mov
test
out
fst
xor
mov
push
xor
sub
jbe
cmp
sub
loopne
lods
push
adc
out
sub
imul
lods
inc
rcl
iret
mov
xor
sbb
mov
retf
mov
xchg
adc
movs
xchg
cmp
push
lds
adc
cmp
mov
mov
dec
div
(bad)
pop
push
jmp
or
and
cmp
lea
into
sbb
mov
xchg
test
daa
fadd
nop
pop
rol
stos
jmp
sar
mov
adc
jne
cmp
mov
mov
(bad)
mov
out
cmp
call
das
iret
cmp
xor
lock
cmp
adc
lods
fwait
pop
(bad)
jns
call
mov
mov
push
xchg
je
movs
fcomp
inc
adc
push
jns
xlat
repz
enter
add
inc
mov
lock
outs
imul
and
lahf
lods
cdq
rcr
jl
mov
fsub
cs
test
xor
pusha
mov
pop
xor
stos
mov
ffreep
xor
sub
hlt
jno
test
mov
lods
pop
push
inc
mov
cmp
ret
outs
dec
movs
fadd
bound
gs
cli
xchg
mov
lods
loope
vmovapd
and
fist
or
retf
sbb
stos
sub
pop
xchg
mov
in
xchg
push
sub
fst
jb
push
add
adc
into
add
cmps
cli
fisttp
ret
out
ds
jnp
test
popf
cmp
xchg
enter
mov
sbb
and
(bad)
pop
push
inc
mov
repz
shl
inc
sub
in
iret
mov
adc
xchg
mov
daa
xor
imul
add
je
dec
mov
(bad)
shl
push
inc
and
jge
clc
jbe
push
jbe
callw
or
jae
jmp
xor
add
daa
rcl
adc
idiv
and
cmc
loopne
movs
pop
sbb
cmp
enter
outs
xor
jne
scas
mov
sbb
or
stos
out
mov
cs
int
stos
inc
mov
js
out
aas
es
pop
ins
or
pop
xor
pop
fidivr
in
daa
je
inc
mov
addr16
fldcw
scas
arpl
shl
sub
pop
mov
or
shl
das
push
mov
sbb
sar
fwait
inc
jnp
stos
repz
and
xor
jnp
push
adc
lods
and
retf
add
jbe
js
in
dec
xchg
or
(bad)
movs
pop
mov
movs
fild
xor
clc
mov
inc
pop
aas
adc
inc
ss
pushf
sub
mov
add
dec
jns
retf
pop
jl
pop
data16
arpl
dec
sub
mov
sbb
ss
mov
aad
mov
jecxz
fisub
mov
call
pushf
rcr
icebp
aad
rcr
cdq
push
sbb
jmp
imul
add
int
ret
rcl
aam
jnp
retf
sub
add
mov
mov
cmp
push
dec
push
mov
cld
and
bound
ds
out
adc
mov
jnp
dec
enter
inc
int3
or
cs
cmp
aam
pop
xor
inc
sub
jp
cmps
ss
mov
repnz
mov
or
xor
fs
lahf
stos
xchg
and
pop
xor
sub
jno
xor
cmps
mov
jns
xchg
in
sahf
stos
cmc
inc
movs
imul
pop
and
arpl
and
les
test
fist
or
xchg
add
inc
cmc
or
in
add
cmp
jo
sub
adc
xor
and
mov
xchg
retf
pop
loopne
fptan
mov
dec
mov
and
dec
mov
lds
ds
and
jle
(bad)
stos
push
jno
cmp
repnz
xchg
mov
mov
aam
sub
sahf
push
sbb
pop
std
sbb
aad
xchg
jnp
out
outs
pop
movs
jp
mov
mov
adc
inc
sahf
fwait
imul
push
jg
add
cdq
ja
mov
push
mov
shr
push
pop
sbb
cmc
movs
(bad)
jecxz
add
inc
xchg
cdq
lods
imul
xor
cmc
test
(bad)
adc
mov
inc
add
out
xchg
icebp
fst
fcomi
loop
out
je
in
sbb
scas
xchg
push
mov
test
iret
jg
loopne
and
test
in
or
pop
repnz
iret
sbb
push
mov
repz
jecxz
pop
push
xchg
sti
sub
xchg
idiv
mov
out
loopne
je
dec
scas
inc
jle
jmp
or
pop
enter
xor
pop
fcom
cmp
xor
pop
push
or
jmp
inc
arpl
add
mov
bound
ficomp
outs
jmp
(bad)
mov
fs
loope
sysret
dec
pop
mov
hlt
xor
jg
ds
push
bound
cwde
mov
fild
push
fdiv
xchg
pop
mov
(bad)
jmp
pushf
out
dec
(bad)
popf
stos
or
(bad)
sub
call
call
pop
mov
aad
mov
pop
cmp
cmp
xchg
fs
ficomp
cs
push
add
out
out
bound
rol
and
adc
int
cmovbe
lds
mov
push
out
in
jno
(bad)
je
mov
in
sbb
push
es
jp
ret
rdtsc
fld
fsubr
inc
div
sbb
in
cmps
add
es
jnp
(bad)
das
das
adc
push
retf
ret
shl
mov
mov
pop
sbb
in
addr16
out
mov
(bad)
fldcw
jne
and
retf
ins
mov
sub
mov
outs
fwait
sub
aaa
jbe
sar
or
fwait
and
ds
retf
fnsetpm(287
std
xor
jmp
mov
xchg
add
add
aam
or
hlt
int3
rol
pop
cmp
pop
xor
sahf
scas
sahf
inc
leave
scas
dec
cmp
test
add
call
sbb
in
scas
mov
cmp
sub
jp
xchg
bound
sti
imul
or
and
sbb
xchg
mov
xor
scas
inc
push
mov
outs
je
fwait
fs
pop
lds
cmp
add
mov
pop
call
fld
shr
fdivr
adc
add
bound
bound
and
outs
push
repz
movs
xor
dec
sar
jge
outs
add
add
gs
stc
rcr
mov
dec
dec
cld
aas
mov
dec
push
test
sti
mov
daa
in
pop
and
cmp
in
rcr
(bad)
jmp
test
shr
shr
ja
sub
jecxz
fmul
jl
mov
in
and
stc
xchg
dec
mov
test
hlt
or
inc
pop
xchg
ins
and
push
mov
push
and
ret
ja
je
imul
out
clc
jo
jo
and
jne
repnz
out
imul
leave
int
jne
adc
cmp
add
sti
jmp
lods
jno
shl
out
xchg
(bad)
das
cmp
pop
push
loop
pushf
jge
cmp
ins
pop
movs
mov
jl
pop
data16
or
rsqrtps
iret
push
lds
inc
lahf
xchg
mov
push
mov
pop
popf
adc
inc
inc
push
rcr
out
mov
mov
add
nop
mov
ret
jb
(bad)
push
and
sbb
lods
(bad)
jle
(bad)
lds
in
mov
push
scas
(bad)
and
jb
jae
pop
rcl
add
gs
(bad)
xor
inc
or
lods
mov
shl
test
jg
call
popa
mov
lds
mov
jns
push
cmp
add
js
popf
(bad)
in
loopne
inc
mov
data16
call
loopne
sub
ins
add
and
int3
pop
lea
aaa
xor
and
loop
stos
jle
add
lds
jne
or
and
lea
fsubr
(bad)
jae
rol
lods
jne
and
out
leave
(bad)
or
inc
push
rcl
jmp
into
cmp
iret
xor
jb
inc
es
add
daa
test
out
test
sahf
cmps
iret
inc
dec
sbb
imul
scas
cmps
sbb
ja
es
loope
fnstenv
arpl
aam
lock
add
mov
jge
hlt
jae
mov
scas
scas
push
shld
gs
cwde
ja
(bad)
lahf
and
scas
jbe
mov
pop
or
arpl
arpl
pop
not
popf
add
ror
(bad)
jns
sub
push
test
jle
adc
cwde
int3
pop
ret
pop
inc
js
sbb
fdiv
pop
jg
dec
mov
(bad)
sbb
sbb
inc
or
sahf
dec
jl
mov
shl
inc
loope
retf
loopne
inc
jno
pop
int3
adc
mov
cmp
adc
dec
jmp
xor
dec
sbb
imul
movs
mov
scas
cmp
hlt
mov
and
lods
lahf
lods
aad
dec
nop
pop
cld
enter
daa
test
sub
push
xchg
xor
sbb
or
js
and
dec
aad
icebp
sahf
(bad)
add
iret
ss
dec
push
xor
mov
jmp
dec
ss
mov
jp
cmp
sar
xor
or
pushf
sbb
jae
mov
jp
lods
scas
push
es
mov
fs
adc
outs
sbb
cmp
pop
ss
xor
jne
push
add
call
pop
mov
jo
pop
xor
xchg
pushf
imul
jmp
cli
retf
xchg
push
xchg
es
mov
adc
sbb
sbb
hlt
sbb
jns
cld
push
xchg
cmp
mov
or
pop
mov
mov
jecxz
adc
loopne
adc
mov
mov
das
fidiv
mov
xor
jae
loop
pusha
adc
dec
pop
jl
hlt
ret
out
xchg
cdq
sbb
pop
rol
mov
adc
jne
mov
aad
push
dec
imul
sar
inc
cmp
fimul
ds
fist
push
jmp
mov
cld
stos
ja
mov
shr
sub
mov
jmp
add
jne
sub
dec
js
inc
push
pop
and
and
call
clc
sbb
pop
retf
aad
out
sbb
or
push
push
jmp
fninit
out
xchg
in
add
mov
test
jmp
and
xchg
jae
pop
jmp
es
pop
stc
jmp
(bad)
inc
lea
or
stc
and
out
inc
outs
mov
mov
pop
jns
mov
jmp
pop
cmps
fstp
in
addr16
aam
mov
sbb
pop
add
pop
retf
adc
cmps
fnsave
pop
into
(bad)
xor
ror
cmps
and
movs
and
mov
je
ins
scas
sahf
pop
fild
xor
jle
scas
xchg
push
ja
sub
ret
test
cmp
cwde
clc
push
div
dec
std
dec
xchg
(bad)
pusha
loopne
xchg
cld
inc
dec
mov
test
jg
mov
or
out
pop
inc
cmps
push
test
das
(bad)
in
loop
cwde
je
fist
inc
mov
ins
mov
and
and
fld
or
sub
pop
sbb
pop
cmp
inc
mov
scas
in
cmp
jp
mov
pop
mov
xchg
add
mov
cmp
jg
shl
(bad)
mov
(bad)
repnz
cdq
jl
shl
and
lea
and
xor
movs
adc
and
xor
inc
jo
repz
mov
adc
sub
sar
test
mov
mov
dec
pop
xor
scas
call
out
inc
dec
lock
push
mov
loop
retf
addr16
lahf
mov
shl
dec
inc
hlt
loope
and
inc
adc
xor
sub
stos
retf
outs
lods
cmp
loop
push
pop
pop
in
jp
mov
loope
dec
loopne
jbe
adc
lock
fisub
pop
imul
jo
inc
test
jae
pop
push
iret
mov
pop
into
pop
push
cdq
xchg
fidiv
fidiv
scas
frstor
mov
(bad)
in
sub
fiadd
mov
(bad)
mov
pop
adc
jecxz
pop
push
cmp
push
mov
nop
loopne
jge
ins
lds
inc
(bad)
pop
fisttp
sbb
pop
and
int
xor
ds
mov
push
cmp
mov
repz
cli
leave
mov
xchg
nop
std
xor
cs
xor
test
mov
adc
imul
aas
pop
shl
shl
cdq
adc
out
xor
or
add
addr16
xor
mov
jl
fstp
sub
inc
cmc
adc
sbb
out
cmps
scas
das
cli
aam
ss
add
pusha
adc
ins
aam
xchg
imul
inc
pop
enter
stc
dec
pop
(bad)
dec
cmp
mov
test
push
mov
bt
mov
repnz
cs
jl
jns
mov
repz
sbb
add
imul
xlat
mov
xchg
(bad)
push
sub
jo
adc
sbb
sahf
jmp
or
adc
out
jp
xchg
daa
mov
cli
call
imul
pop
(bad)
push
add
pop
cmp
cmp
stos
cli
or
retf
pop
enter
(bad)
jbe
sahf
add
cwde
inc
push
retf
dec
cwde
cs
xchg
pop
sahf
mov
mov
and
xchg
(bad)
sbb
aas
pop
into
retf
test
xchg
ds
je
in
push
movs
mov
shr
iret
cmp
test
shl
cmp
sbb
sub
cmp
dec
cmp
int
jecxz
mov
psubq
gs
push
mov
xor
or
dec
inc
push
jmp
rol
(bad)
test
jbe
jbe
daa
mov
stc
xchg
xor
or
push
mov
sahf
aam
fisubr
push
fisttp
scas
addr16
sar
test
hlt
mov
(bad)
pop
or
pop
cld
test
xchg
out
sub
lock
retf
sar
arpl
repz
scas
xchg
dec
bound
and
aaa
pshufw
in
jno
iret
xchg
dec
aaa
mov
mov
stc
inc
aam
sbb
sub
jno
sbb
in
mov
int
imul
push
xor
or
aam
push
mov
test
pusha
data16
in
sar
jl
mov
dec
jp
in
inc
and
inc
sar
clc
(bad)
jno
jecxz
gs
dec
outs
cwde
jmp
fst
cmp
or
test
call
cmps
jne
jno
dec
push
call
xor
imul
or
xor
icebp
loope
jle
adc
adc
and
mov
jo
jnp
dec
loop
test
mov
add
repz
push
add
jne
sub
mov
(bad)
adc
ret
dec
pushf
cmp
lahf
fcomi
inc
ret
test
lods
jae
(bad)
(bad)
add
fistp
stos
cmp
out
es
mov
cmp
dec
adc
out
bound
or
bound
pop
mov
ins
int3
adc
pop
jge
sbb
adc
jb
mov
fmul
hlt
inc
ror
xor
add
(bad)
rep
pop
mov
retf
pop
jno
dec
js
mov
cmc
xor
call
test
xor
cld
pushf
(bad)
(bad)
pop
xor
cmp
cmp
pop
dec
cmp
add
jne
lods
test
inc
pop
cmps
adc
adc
fistp
fcmovbe
cmps
cmp
mov
jmp
mov
cmps
les
jae
push
out
inc
dec
(bad)
mov
mov
sti
pop
test
rdpmc
gs
loopne
test
add
addr16
add
jl
inc
iret
mov
aaa
jle
rcr
outs
mov
and
jl
retf
adc
retf
adc
xor
repnz
cld
jo
push
jmp
sbb
not
aas
popf
mov
jbe
push
mov
sbb
jb
cmp
fcmovnbe
mov
push
fbld
pop
jmp
mov
add
(bad)
cmp
test
leave
cwde
mov
xor
lahf
lods
mov
ins
push
jne
call
cmp
xchg
(bad)
fld
adc
gs
inc
pop
pusha
movs
in
(bad)
data16
cmp
fld
add
outs
(bad)
inc
out
std
daa
add
rcr
mov
push
test
or
mov
je
adc
sub
int3
dec
movhps
loopne
(bad)
dec
sbb
idiv
mov
mov
dec
dec
jle
and
pop
mov
dec
outs
mov
cmp
sti
xchg
and
pop
jno
fidivr
cmc
dec
jbe
push
inc
int3
rol
and
hlt
jo
push
dec
ds
data16
js
adc
aam
iret
xchg
fmul
mov
test
jl
daa
mov
xchg
mov
lods
sbb
dec
fist
sbb
sub
outs
adc
sub
dec
mov
scas
mov
sub
ror
add
das
ret
mov
mov
push
mov
cdq
int
mov
cmps
adc
mov
jnp
cmps
lahf
clc
shl
mov
pop
dec
add
xor
dec
dec
jle
mov
ins
lock
and
out
inc
ffree
inc
pop
int
mov
sbb
push
mov
adc
adc
adc
(bad)
or
sbb
push
or
mov
pop
jns
mov
pop
out
adc
lock
add
ror
inc
popa
ja
add
inc
xchg
aad
dec
jns
nop
xchg
int
fbstp
xchg
fiadd
pop
cli
push
iret
cmps
xchg
ds
or
int3
push
sti
icebp
ds
shl
lds
add
nop
jmp
and
aaa
imul
iret
jno
xor
repnz
inc
loope
test
mov
dec
inc
bound
enter
adc
push
mov
bound
pop
jns
dec
fisttp
leave
add
in
push
add
(bad)
xchg
loop
sbb
mov
mov
cmp
loopne
popa
cmp
push
leave
inc
xor
call
pop
jns
mov
pop
adc
ins
pop
add
es
sbb
xchg
push
sbb
mov
mov
xor
and
xchg
(bad)
stc
retf
jns
out
clc
fsubr
fldz
dec
adc
daa
lahf
mov
aam
outs
add
push
cld
inc
out
jle
ret
pop
fs
add
(bad)
enter
das
mov
sub
mov
inc
cmps
sbb
iret
aam
dec
inc
int
fdivr
push
and
inc
movs
inc
xchg
aas
lods
ret
loopne
push
jnp
test
inc
ret
pop
in
rol
aaa
scas
mov
pop
clc
or
push
pop
pushf
fisttp
xor
frstor
push
push
cdq
test
push
cmc
pushf
addr16
mov
cmps
movs
mov
ss
and
outs
cwde
call
sub
xor
push
push
jae
push
je
and
aam
test
and
aas
and
and
xor
pushf
fmul
sbb
add
pop
in
daa
push
and
bound
xor
outs
add
sub
ss
imul
mov
xchg
push
jmp
repnz
fcom
and
jne
add
jge
sar
loope
xchg
je
add
aas
sub
ret
sbb
sti
shl
lods
addr16
dec
xchg
dec
pop
mov
and
mov
jle
(bad)
mov
push
in
ss
and
outs
loopne
push
sub
stos
push
jmp
jg
data16
adc
cdq
jl
(bad)
or
or
mov
push
imul
sub
sbb
es
pop
pop
jne
pop
inc
xlat
xor
cmp
gs
jle
mov
inc
cmp
jmp
xchg
test
jp
not
jmp
fstp
test
jnp
mov
and
ss
outs
sub
ret
xor
call
inc
loope
mov
xchg
jmp
sti
fldcw
adc
mov
movs
arpl
jg
repnz
int
add
pop
repz
std
cmps
xor
imul
pop
jle
push
dec
pop
add
adc
add
lock
jne
int
clc
cmp
test
mov
arpl
pop
mov
mov
jnp
scas
sub
mov
iret
and
and
data16
shr
shl
dec
sbb
xchg
add
sahf
fs
bound
cld
xlat
das
mov
fmul
xchg
dec
add
cmp
sub
inc
cwde
push
xchg
rcr
inc
in
mov
inc
add
out
inc
es
xor
mov
(bad)
push
icebp
stc
push
(bad)
dec
pop
mov
mov
aaa
clc
or
nop
adc
or
enter
jecxz
mov
pop
iret
add
xchg
sub
adc
push
lahf
stos
mov
dec
inc
out
mov
lea
loop
inc
push
pop
adc
cmp
xchg
jg
fisubr
sbb
pop
pop
mov
(bad)
push
sbb
retf
scas
out
mov
add
out
sbb
mov
inc
dec
es
(bad)
jmp
mov
clc
dec
in
pop
(bad)
push
dec
repz
and
sahf
ficom
out
lods
dec
pusha
stos
jmp
or
push
mov
or
call
mov
sbb
dec
rcl
aas
xchg
(bad)
mov
or
sub
aas
je
pop
lds
fisub
(bad)
cli
add
cdq
jl
scas
mov
dec
pushf
in
pop
lock
cmps
and
or
add
ficom
ss
clc
adc
loopne
push
or
inc
mov
ds
cli
sub
mov
test
cmps
dec
sti
in
mov
xor
mov
add
adc
jl
ins
lods
jl
jmp
pop
pop
aad
xor
jl
lock
mov
jmp
(bad)
adc
xchg
stc
in
imul
aad
sub
adc
xchg
adc
jge
inc
push
je
jno
(bad)
aas
xor
imul
jns
loop
or
push
shl
(bad)
xchg
inc
shr
pusha
sub
or
adc
cmps
fwait
dec
std
into
out
das
int
in
mov
mov
(bad)
push
repz
or
clc
in
pusha
icebp
push
mov
and
xor
fs
outs
fimul
(bad)
jns
pop
gs
cmp
lea
push
push
pop
jnp
call
jecxz
mov
popf
adc
mov
stc
adc
mov
jmp
mov
inc
or
out
adc
or
ja
imul
repnz
xor
pop
mov
(bad)
out
cmp
xor
or
jmp
das
add
fxch
scas
aaa
xor
cmps
out
sbb
cmp
push
call
(bad)
jns
inc
(bad)
ffree
mov
aam
push
push
sbb
int3
cdq
inc
aam
ficom
xlat
clc
daa
add
aad
pop
push
inc
aaa
popf
inc
sub
inc
and
mov
dec
pop
xchg
(bad)
sahf
mov
loope
iret
retf
and
pushf
cs
fadd
mov
repnz
loope
dec
cwde
and
scas
in
lahf
jno
hlt
sbb
inc
pop
stos
dec
(bad)
arpl
sub
push
arpl
fs
jo
sbb
mov
scas
(bad)
out
xor
push
cdq
fild
std
add
mov
arpl
movs
mov
test
mov
jno
and
ret
or
inc
sahf
movups
lock
aas
lds
fwait
out
ror
push
test
mov
push
or
add
push
repz
retf
or
test
push
jmp
mov
ins
add
dec
daa
pop
mov
and
push
mov
jmp
push
sti
nop
mov
ins
mov
mov
xor
int3
jp
fsubr
sbb
inc
in
fstp
and
cmp
mov
jmp
sti
out
rol
scas
add
pop
xor
fisubr
into
pop
outs
arpl
outs
gs
loopne
mov
push
and
ins
push
sub
pusha
movs
sti
cmp
rcr
push
jg
add
aas
and
dec
(bad)
jmp
adc
jno
pop
push
push
aam
xchg
(bad)
int3
mov
test
shl
dec
pop
scas
add
xor
test
xchg
mov
(bad)
das
add
jne
sub
inc
cld
fistp
mov
mov
jae
call
jne
cmp
daa
or
call
mov
movs
movs
xor
xchg
inc
cmp
ret
cmp
mov
adc
jg
mov
push
hlt
pusha
aaa
pop
mov
lock
std
xchg
mov
jmp
xchg
aad
add
daa
add
mov
dec
push
jecxz
jp
sbb
out
adc
jp
les
sti
dec
in
mov
mov
push
push
adc
push
pushf
or
into
(bad)
icebp
mov
mov
movs
lods
adc
push
fcomp
mov
mov
xchg
dec
(bad)
dec
dec
cmc
mov
xchg
cmp
cs
mov
loopne
jnp
aaa
sub
xchg
xor
fsubr
dec
fldcw
jne
out
pop
mov
adc
xor
xor
rcr
movs
xchg
nop
mov
call
pop
stc
(bad)
and
dec
jecxz
or
loope
mov
fcomp
imul
shl
dec
adc
test
jle
push
dec
pop
fwait
mov
inc
sub
push
sub
sub
lahf
jno
adc
loopne
and
sub
inc
rcl
and
and
xchg
ins
sub
pushf
bswap
daa
aam
arpl
cli
push
sub
dec
sbb
xchg
cwde
gs
push
imul
in
jge
daa
popf
sahf
pop
inc
add
(bad)
shl
inc
jmp
xor
pop
mov
je
iret
pop
inc
push
outs
retf
push
mov
in
arpl
(bad)
aas
loope
mov
dec
(bad)
pop
loopne
cld
dec
and
scas
sub
(bad)
xchg
add
adc
bound
push
ds
rcl
mov
or
in
fidivr
outs
std
jg
popf
add
or
pop
loop
scas
inc
imul
dec
ret
jne
stc
scas
dec
(bad)
idiv
add
mov
jae
pushw
int3
pop
inc
push
add
push
push
into
jmp
test
mov
pop
sbb
or
leave
push
into
and
mov
push
and
lds
xchg
jns
push
test
(bad)
icebp
iret
inc
mov
(bad)
and
popa
adc
add
inc
dec
sbb
mov
pop
cwde
push
loop
adc
pop
xchg
aaa
mov
or
xchg
cmp
pop
iret
mov
ds
out
fisttp
jae
ja
loopne
int
call
ins
sbb
dec
and
jb
xor
daa
sub
push
out
mov
sub
xor
mov
fyl2x
enter
pop
mov
dec
popf
xchg
push
adc
popa
mov
dec
mov
fucomip
push
psubq
cwde
je
fiadd
xor
mov
add
dec
sub
test
add
fisttp
jne
pusha
aad
and
mov
or
pop
iret
outs
push
adc
leave
movs
adc
(bad)
call
cmp
xchg
xor
(bad)
add
inc
xor
movs
cwde
call
mov
cmps
mov
stos
imul
sti
dec
lods
xlat
and
in
mov
xchg
mov
jp
cmp
xlat
(bad)
fldenv
pop
cmc
lock
fimul
movs
and
daa
(bad)
iret
int
or
in
mov
js
(bad)
jne
dec
std
adc
jmp
xchg
out
rcr
push
pop
push
clc
mov
dec
lock
adc
ds
cmp
hlt
dec
sahf
rcl
or
test
cld
jl
out
es
lea
pop
(bad)
nop
mov
sahf
mov
xchg
call
fdivr
jbe
dec
ja
shl
jge
ins
sub
adc
imul
jnp
ror
mov
cmp
or
addr16
ja
add
and
or
fidivr
lea
je
jb
pop
lock
jmp
mov
jl
retf
cld
mov
jmp
mov
retf
jmp
or
test
jne
or
xlat
and
iret
push
cld
(bad)
inc
xor
xchg
out
das
lds
test
mov
loop
push
shl
in
imul
fisttp
xchg
test
ficom
mov
call
int
sub
xor
sbb
int3
addr16
sbb
pop
nop
sbb
enter
push
sahf
or
xchg
in
int3
jg
repz
test
xchg
push
sub
call
mov
(bad)
in
sub
rcl
jecxz
dec
ror
and
adc
xor
int
pop
mov
out
jne
mov
xchg
add
dec
repnz
call
mov
gs
test
sbb
pop
mov
or
dec
or
ds
mov
out
cli
in
xor
pop
mov
mov
js
ret
cmp
pusha
popa
addr16
sub
popa
cdq
ret
dec
mov
cmps
sti
push
repnz
rcr
lds
aad
aad
adc
popf
loopne
jp
(bad)
into
cmc
adc
and
test
push
fsubp
daa
loopne
pop
add
cs
retf
popf
inc
loope
mov
in
push
mov
stos
int
cld
mov
hlt
daa
out
jl
inc
or
inc
cmps
push
ror
(bad)
clc
and
cmp
mov
repz
pop
dec
jecxz
mov
shl
cld
outs
test
cmp
cmps
add
cmps
cmp
sub
cmp
adc
gs
arpl
mov
loopne
test
repnz
dec
sbb
sub
icebp
add
lds
and
xchg
adc
ja
xor
jns
cmp
cmp
ret
lods
imul
cwde
push
mov
loopne
xchg
jmp
sbb
xor
dec
into
or
inc
xor
xor
fild
dec
pusha
imul
and
sar
aaa
repnz
push
sbb
mov
std
into
stos
loopne
jb
jo
jmp
mov
add
jmp
cmp
lods
adc
retf
mov
pop
fiadd
jp
lods
mov
jns
std
ret
(bad)
xor
pusha
inc
jne
push
lods
ja
xchg
push
test
cmps
xchg
aad
scas
rol
not
ret
in
addr16
js
outs
add
vshufps
and
xor
mov
mov
mov
js
shl
or
arpl
adc
pusha
stos
cs
cli
inc
cdq
mov
push
sbb
test
mov
idiv
jg
fstp
cmp
loopne
out
(bad)
adc
inc
popa
sbb
ret
xchg
gs
daa
ss
pop
mov
lds
mov
lds
push
or
test
sbb
out
xor
(bad)
fist
shl
test
dec
jmp
xchg
jno
xor
shl
mov
jle
xor
dec
sbb
or
ins
sahf
or
sub
push
cmp
in
cs
mov
and
dec
push
mov
js
test
fnstcw
xchg
loope
dec
pop
stos
int3
xchg
sbb
push
push
mov
jbe
and
push
ja
jle
dec
xor
jp
and
cmps
fsub
jo
dec
aaa
add
lods
inc
cmp
(bad)
fs
dec
jns
pop
cmps
mov
repz
iret
psubsb
repz
clc
leave
pop
(bad)
rep
out
inc
outs
movs
pop
push
outs
ss
xchg
pop
jne
ins
ds
add
addr16
adc
mov
ss
and
push
ins
push
rcr
je
cmp
xchg
pushf
pop
test
aaa
jmp
(bad)
mov
into
mov
jp
inc
loopne
popf
mov
mov
fwait
movs
mov
nop
scas
stos
xor
and
or
dec
mov
cmps
xor
or
and
lods
pop
mov
xor
lahf
cmp
cwde
xor
jmp
lods
loopne
pop
mov
push
adc
(bad)
and
pop
out
dec
vpminub
shl
dec
sbb
imul
mov
cmp
mov
cmc
mov
adc
inc
pushf
xchg
dec
push
cmp
in
xchg
cmps
adc
xor
lahf
inc
test
xchg
or
sub
(bad)
cmp
jno
or
mov
cmps
lahf
push
pop
and
cs
fdiv
rcl
mov
sti
into
cmp
pop
inc
(bad)
fidiv
xchg
repnz
mov
or
icebp
xchg
sub
ja
es
ins
sub
pusha
shl
xchg
xchg
lods
cwde
scas
call
xor
lahf
scas
sbb
cs
fisub
and
fnstsw
inc
and
fld
xchg
fsubr
xchg
das
fwait
xchg
dec
int3
lahf
sub
fstp
xor
jb
mov
or
sbb
xchg
das
mov
adc
movs
mov
push
lds
push
pop
sub
push
jo
lea
xor
jecxz
mov
loop
mov
or
js
sub
idiv
adc
push
aad
jl
loopne
in
outs
mov
ret
xchg
jecxz
mov
jle
dec
stc
fadd
sbb
cmps
sbb
dec
lock
push
sbb
mov
dec
pushf
and
sbb
push
icebp
stos
or
mov
(bad)
sub
mov
jbe
mov
clc
sbb
and
xor
xchg
or
adc
xchg
jnp
push
fcom
addr16
jnp
add
sbb
mov
pop
jns
movs
add
jle
daa
mov
mov
xchg
into
inc
xlat
and
in
sbb
mov
repz
jge
popf
jp
scas
out
ret
push
inc
out
outs
ret
push
arpl
pop
and
fcom
xor
cmp
inc
mov
test
in
test
adc
cld
dec
lods
into
and
xor
fmul
dec
and
sar
push
adc
xchg
inc
inc
push
pop
aad
lods
add
and
xchg
dec
adc
jae
(bad)
sub
push
fdivr
addr16
add
mov
scas
jbe
pop
jl
aam
imul
xor
lea
ja
repz
dec
pushf
je
and
pop
fnsave
bound
js
cmp
loop
cmp
pop
cmpps
mov
in
cld
gs
jp
xchg
ja
xchg
clc
cld
sbb
xor
sbb
(bad)
ror
stos
add
pop
(bad)
push
push
and
dec
or
in
cmp
(bad)
retf
das
push
adc
out
push
xchg
aam
mov
or
xchg
call
pop
cs
jns
xchg
clc
pop
mov
push
add
shl
add
mov
xchg
lea
and
push
fild
repz
fild
arpl
pop
xor
xor
data16
rol
(bad)
mov
xor
xchg
sub
or
or
dec
adc
jbe
jl
dec
jae
popa
adc
shr
ret
stc
out
push
(bad)
and
or
inc
mov
shl
sub
and
sti
mov
fs
call
jne
xchg
pop
cmp
fcomi
popf
mov
dec
fdivr
and
jne
add
add
mov
jmp
jnp
ret
dec
out
xor
shl
enter
add
jne
dec
aaa
sti
call
lods
dec
dec
push
sbb
cmp
xchg
and
(bad)
or
add
push
and
aam
fldcw
and
inc
sbb
cli
(bad)
stc
sbb
retf
loopne
mov
sahf
loope
in
cld
icebp
test
iret
or
lds
cmp
in
loop
jge
pop
daa
ret
fcom
mov
or
mov
jl
pop
div
ds
out
cmp
ret
punpckhwd
mov
mov
test
adc
sub
loopne
mov
pop
jne
mov
adc
adc
xchg
adc
ins
fwait
mov
and
scas
push
aaa
cmp
out
fsub
int3
and
sub
scas
inc
test
shl
lea
xlat
xor
and
ret
jo
xor
push
or
jge
mov
xor
je
xchg
adc
sti
push
out
xchg
pop
mov
add
cmp
mov
and
loop
and
call
leave
cmp
je
lods
lock
jne
hlt
xchg
xor
fmul
repnz
loope
dec
pop
sbb
inc
push
(bad)
jle
add
push
fwait
jge
adc
lock
and
inc
scas
adc
sbb
mov
ds
jmp
popf
lock
call
imul
cld
into
es
in
test
movs
xor
call
mov
pop
xor
push
repz
int3
clc
mov
mov
(bad)
and
inc
and
sub
icebp
rcl
adc
push
loopne
div
idiv
push
dec
jecxz
rol
mov
mov
mov
pop
add
loop
mov
scas
add
jns
or
cmp
mov
pop
sub
cmc
inc
fst
fs
sbb
fdiv
pop
cmp
xor
in
adc
sub
add
mov
push
addr16
into
neg
fcomp
cmps
mov
rcr
(bad)
mov
cdq
pop
bound
mov
mov
outs
ss
sbb
(bad)
xor
xor
mov
xchg
cld
dec
and
xchg
mov
into
mov
or
popf
xchg
fwait
dec
xchg
cdq
push
mov
xor
fwait
icebp
neg
fstp
loope
les
push
mov
push
(bad)
ds
fild
aad
dec
jns
shr
fwait
xor
add
jns
int3
mov
and
addr16
into
jns
xchg
jo
jno
lods
cs
retf
imul
xor
loopne
adc
popf
retf
sbb
fwait
jb
dec
imul
sub
sub
js
fdivr
call
shr
pop
and
aaa
mul
lock
data16
cmps
iret
cmp
shl
cdq
sahf
inc
mov
sub
fs
inc
lds
lea
xchg
sub
in
test
movs
in
add
push
dec
sbb
ror
inc
out
int
out
pop
xor
sar
pop
or
cmp
push
xchg
imul
inc
sbb
or
dec
lock
cld
xchg
xor
sub
sti
test
inc
test
(bad)
and
data16
or
out
lods
xchg
push
xchg
sahf
sub
fs
cli
pusha
fbld
push
hlt
xchg
cmp
add
add
cld
(bad)
movs
and
mov
bound
cmps
mov
jmp
icebp
pop
mov
cmp
jne
xchg
cdq
pop
inc
scas
std
(bad)
iret
jl
lea
push
mov
cmc
leave
cmps
sbb
fwait
or
adc
stos
(bad)
push
sbb
not
hlt
ds
add
or
inc
in
mov
push
fsub
push
retf
push
lahf
and
and
xchg
hlt
adc
dec
or
ds
add
(bad)
stos
mov
sub
iret
jmp
mov
imul
call
ret
lea
lods
push
xchg
lds
mov
adc
push
pushf
mov
sub
add
test
xchg
add
jne
stos
xor
or
mov
neg
xchg
cwde
retf
(bad)
pop
sbb
mov
hlt
push
pop
lods
or
and
mov
xchg
loope
xor
loope
cdq
lahf
push
inc
adc
(bad)
pcmpeqd
stos
enter
jge
int3
jae
push
shl
sbb
mov
or
jg
icebp
pop
dec
inc
mov
and
cmps
adc
lods
dec
out
pop
push
jae
sub
mov
fsincos
mov
test
sar
xlat
not
mov
sub
movs
sub
scas
pop
push
sbb
lahf
mov
loope
(bad)
iret
mov
sub
pop
push
add
adc
test
out
push
sub
dec
or
pushf
add
jl
shr
inc
xor
and
loope
cmp
xchg
push
cmp
add
mov
cs
sti
mov
inc
sbb
xchg
(bad)
fldpi
test
mov
sti
scas
retf
pushf
push
movs
pushf
inc
scas
pop
mov
into
sbb
ret
and
ds
fucom
cld
push
mov
ins
loope
adc
out
cdq
adc
cs
scas
and
push
pusha
stos
das
or
push
inc
mov
outs
push
pop
rol
jecxz
ins
dec
sub
out
adc
shr
pop
xor
push
sub
cmps
(bad)
enter
jp
sub
loop
jmp
xor
adc
adc
sahf
fs
aam
or
xchg
inc
unpcklps
and
mov
xor
xor
adc
push
mov
shl
or
fiadd
unpcklps
mov
rcl
adc
xchg
mov
mov
mov
jae
xchg
sbb
pushf
push
sub
add
mov
xor
clc
rol
mov
mov
xor
sbb
sbb
js
les
outs
lods
sbb
sub
cmp
sub
xchg
push
(bad)
fadd
(bad)
bound
shl
ret
add
retf
loope
out
add
fild
pop
clc
push
test
cmp
xor
xchg
pop
push
mov
out
je
jnp
fdiv
inc
mov
leave
cmp
int
pusha
push
jmp
pop
fst
out
and
dec
jbe
call
adc
pop
cmp
ss
sti
add
mov
and
xlat
js
call
repz
and
rcl
repz
jecxz
inc
push
stc
pop
jmp
fcom
xchg
or
call
into
and
pop
les
test
adc
sub
enter
inc
mov
clc
mov
and
js
mov
dec
pop
cld
mov
mov
mov
adc
aam
hlt
mov
sub
push
ja
jp
sbb
xchg
dec
shr
push
pop
loope
rol
fidiv
sbb
jnp
xchg
dec
or
test
sbb
or
gs
jge
adc
les
(bad)
mov
jnp
(bad)
ss
imul
sub
push
shl
mov
mov
popf
mov
test
mov
inc
pop
adc
fimul
shr
and
mov
mov
mov
jmp
rol
sar
pop
in
mov
lock
dec
xor
add
adc
out
mov
mov
mov
xchg
out
xchg
adc
test
pop
scas
pop
aaa
and
daa
xchg
(bad)
and
add
sti
test
push
fs
jae
pop
outs
mov
data16
mov
inc
and
outs
test
rcr
jno
or
in
retf
lahf
in
push
jbe
jge
pop
push
adc
push
retf
jb
push
ss
out
gs
repnz
in
ja
cli
pop
into
mov
ficom
aam
sub
cmp
mov
pop
or
add
jne
xlat
lock
outs
popf
mov
dec
cmps
sahf
rol
clc
jbe
call
push
sti
shl
and
std
mov
clc
icebp
sub
(bad)
push
jmp
push
cmp
dec
pop
mov
sbb
iret
cmove
popa
sub
xchg
and
sti
mov
xor
push
test
in
cmp
dec
daa
pop
pop
mov
push
clc
in
pop
xor
or
and
or
and
push
jae
fimul
shl
mov
inc
sbb
js
dec
dec
xchg
pop
lahf
push
mov
popf
inc
xor
push
dec
push
je
push
addr16
ficomp
inc
push
mov
stc
mov
cmp
mov
cmp
lea
xchg
sahf
adc
cmps
jns
int3
pop
es
clc
repnz
movs
pop
add
pop
mov
jmp
adc
sbb
or
jbe
dec
mov
outs
shl
cwde
movs
test
rcr
rol
aas
dec
mov
es
call
xor
scas
into
js
cmp
mov
push
movs
sbb
add
mov
je
mov
aam
mov
sahf
inc
movs
xor
mov
fnstcw
std
add
cmps
inc
lods
retf
xchg
xor
in
xchg
xchg
lods
cmp
or
mov
out
adc
lea
fwait
cwde
(bad)
out
pushf
cmp
dec
bound
inc
cld
inc
cmp
mov
inc
mov
(bad)
sbb
adc
cld
adc
call
pop
fisttp
push
shl
xchg
pusha
jecxz
int
popa
jmp
push
and
lahf
mov
mov
jecxz
inc
into
sub
add
mov
and
aaa
arpl
ss
enter
ds
scas
pop
mov
ret
leave
and
test
outs
jecxz
nop
mov
xlat
mov
and
(bad)
fnstenv
cmc
(bad)
push
movs
dec
rol
adc
sti
and
mov
ja
hlt
in
adc
or
dec
pop
stc
out
addr16
stc
lods
dec
sbb
xchg
sbb
mov
pop
jle
mov
jmp
movs
inc
sbb
dec
bound
stc
daa
scas
dec
push
mul
fnstcw
inc
sub
mov
dec
xchg
cmp
jg
and
dec
pop
adc
pop
push
fs
inc
push
imul
std
nop
addr16
clc
xchg
push
lods
jae
mov
inc
cdq
(bad)
daa
fdiv
pop
(bad)
mov
sbb
pop
addr16
scas
iret
push
fdiv
test
or
sbb
mov
or
lods
mov
lock
inc
mul
adc
mov
sbb
ucomiss
inc
cmc
icebp
jns
aaa
out
pop
mov
mov
das
xchg
xor
arpl
mov
daa
fldcw
int3
(bad)
fldcw
popf
shl
imul
aas
ret
je
ret
aas
mov
push
sbb
sti
addr16
xchg
mov
cld
jecxz
loope
js
xchg
cmp
rol
lds
and
je
fsub
xor
dec
movs
add
hlt
comiss
or
ins
xor
cmp
(bad)
pop
imul
xchg
adc
add
aam
xor
and
ror
push
xchg
mov
or
dec
rcr
std
mov
cmps
sub
mov
xchg
(bad)
icebp
fsub
dec
push
push
mov
fidiv
cmp
popf
or
adc
mov
or
sbb
dec
push
scas
and
sbb
int
add
jecxz
pusha
(bad)
cmps
xchg
mov
lds
jno
xlat
popa
xchg
ret
or
mov
cmp
sbb
inc
mov
test
xchg
xchg
pop
hlt
or
les
icebp
ins
out
mov
int
jno
xlat
xchg
daa
dec
dec
data16
inc
outs
repz
shl
into
dec
cmp
nop
push
popa
xlat
cmp
mov
sahf
mov
aaa
mov
test
add
mov
sar
and
adc
loope
(bad)
and
adc
mov
rcr
call
xchg
int3
push
mov
sti
bt
or
or
int
cmp
jecxz
outs
jmp
and
push
push
dec
movs
fcmovnbe
pusha
cmp
aaa
push
sub
or
pushf
push
pop
daa
test
scas
loop
ret
mov
sub
mov
dec
xor
(bad)
das
(bad)
lds
jecxz
push
gs
ret
cli
push
ds
inc
cmp
mov
add
jb
jge
leave
or
jl
jge
loopne
ds
sub
jle
lea
mov
pop
and
or
inc
pop
out
jg
div
je
fild
lock
cmp
cld
or
pop
or
dec
push
or
jl
imul
jp
pop
in
fs
and
dec
int
out
mov
sbb
and
lahf
or
mov
hlt
jg
(bad)
and
(bad)
mov
repz
les
pop
(bad)
bound
(bad)
jle
cld
xor
jne
or
sar
mov
loope
fcom
cmp
xor
int
sahf
das
or
not
call
call
mov
inc
test
lahf
mov
jg
icebp
daa
outs
add
daa
movs
pop
pop
jmp
cmp
lods
ret
or
sbb
mov
and
std
ficom
push
jmp
inc
xchg
cld
retf
data16
push
cli
jno
retf
and
and
cdq
test
xchg
xor
(bad)
xor
jno
xor
jp
mov
inc
test
movs
ins
nop
pop
cmp
sub
or
cmps
and
(bad)
push
mov
stc
lods
xchg
dec
jno
mov
outs
adc
mov
jo
or
cld
dec
hlt
pop
ret
jle
mov
cmp
push
outs
inc
mov
or
bswap
aas
sbb
call
cli
rol
fstp
adc
mov
inc
stos
repz
in
test
rcl
push
inc
bound
cli
call
ret
(bad)
les
mov
mov
in
ja
push
pusha
push
sysenter
mov
mov
inc
or
movs
fidivr
inc
inc
lods
fs
out
xchg
inc
mov
xchg
xor
enter
add
jecxz
sti
sbb
push
jb
pop
cmp
mov
int3
dec
jle
xchg
sub
push
in
mov
xchg
mov
lock
mov
or
(bad)
cdq
movs
jmp
mov
mov
cmp
inc
js
mov
add
out
loopne
jne
sqrtps
xor
std
les
fnsetpm(287
push
pop
sub
inc
fst
retf
fistp
or
pop
into
pop
jecxz
mov
and
add
test
in
pop
push
jmp
mov
out
popa
sub
ds
jecxz
hlt
pop
xchg
jmp
loopne
jnp
scas
dec
push
xchg
pop
enter
add
dec
push
mov
neg
hlt
pop
mov
sar
or
ss
enter
outs
fwait
popf
rep
ss
mov
fiadd
retf
movs
adc
add
adc
pop
lods
mov
movs
call
mov
push
pop
jbe
jmp
in
jp
xlat
mov
scas
jo
repz
retf
cmp
mov
xchg
push
ror
adc
lahf
mov
add
xor
js
pop
imul
xchg
lods
add
push
jnp
repnz
dec
push
loope
sbb
jmp
sub
std
retf
mov
mov
add
movs
sub
dec
in
retf
neg
jmp
nop
aad
inc
jb
clc
mov
js
add
fcmove
(bad)
(bad)
pop
jbe
mov
jge
jns
(bad)
xchg
(bad)
sbb
or
mov
xchg
push
clc
mov
pop
add
push
xor
out
out
ficom
mov
imul
stos
pop
out
add
jmp
jo
inc
retf
sbb
(bad)
push
dec
sub
pop
xchg
xchg
(bad)
repz
inc
(bad)
push
push
enter
retf
dec
cwde
arpl
test
push
add
mov
jbe
inc
cmp
lahf
in
pop
push
inc
sub
adc
cs
nop
cmps
mov
popf
add
sbb
imul
jp
xchg
test
jnp
ss
mov
jmp
jo
xor
int3
push
js
mov
xchg
pop
rcr
mov
pusha
sbb
mov
aad
xchg
rcl
mov
push
or
sti
xchg
retf
pop
jp
in
imul
mov
cs
inc
or
mov
push
adc
dec
hlt
shl
and
pop
lea
inc
add
sbb
mov
cli
cmps
pop
into
out
cld
push
imul
leave
cmp
xchg
imul
xchg
dec
add
or
imul
call
repz
test
inc
fadd
dec
add
jg
inc
sub
pop
popa
sbb
push
mov
inc
in
push
out
iret
nop
add
popa
jno
sahf
cmp
add
cmc
fs
jmp
je
xchg
mov
jno
fxch
(bad)
test
push
test
add
add
and
(bad)
shr
pop
neg
std
or
adc
xchg
push
nop
adc
xlat
stos
int3
aam
add
mov
xor
hlt
mov
push
xchg
inc
gs
push
adc
xchg
add
loop
dec
pop
es
sbb
and
adc
xchg
mov
cmp
call
cld
aad
or
push
pop
or
cmps
in
jmp
mov
xor
repz
pop
xchg
into
cld
or
pusha
add
add
sub
push
push
cmp
jne
xor
mov
iret
cdq
adc
sub
mov
sub
(bad)
test
retf
js
dec
cs
sub
arpl
dec
jbe
ret
imul
mov
dec
mov
into
or
aad
jne
xor
call
jns
ret
addr16
pop
movs
(bad)
mov
mul
pop
sar
or
pushf
cmp
sbb
pusha
lock
fs
int3
or
xchg
in
adc
stos
adc
ret
mov
push
in
dec
mov
and
test
pop
dec
push
(bad)
cmp
dec
sbb
mov
push
cmp
daa
test
test
push
inc
adc
sbb
sbb
inc
jae
jmp
mov
push
add
daa
or
inc
repz
jmp
xchg
fs
dec
sti
dec
mov
ja
ret
shl
add
xchg
ins
mov
jle
mov
mov
cmp
in
pushf
xchg
jae
clc
mov
popf
cli
mov
inc
pop
test
dec
out
sbb
fild
(bad)
xchg
push
add
push
outs
push
xchg
aam
mov
lea
cmp
inc
pop
or
jb
or
ret
jb
gs
js
adc
and
push
mov
sbb
inc
jecxz
cmc
add
xchg
js
jnp
pop
dec
cmp
mov
cli
ins
ins
fcomp
shr
in
loope
jmp
mov
fwait
xchg
(bad)
sub
pop
or
in
sbb
icebp
mov
dec
test
dec
add
fadd
shl
push
rcl
bound
rcr
jge
sub
or
idiv
cwde
ins
sub
pop
ret
mov
push
and
inc
or
mov
(bad)
xor
mov
data16
mov
lock
cmp
pop
or
push
jmp
std
jnp
pop
scas
push
push
call
jmp
leave
add
xchg
or
scas
push
pop
push
fucomip
pop
stos
push
idiv
sbb
fiadd
mov
je
jno
ins
jmp
push
test
out
or
bound
movs
fistp
in
sbb
push
cmp
adc
sar
test
leave
retf
in
fwait
and
retf
ss
mov
pop
sbb
dec
or
pop
xchg
sbb
fwait
mov
and
push
cmp
mov
jmp
mov
sub
sar
adc
pop
test
movs
jmp
call
xchg
jo
retf
jmp
xor
mov
sub
jae
fild
pop
jp
data16
lods
repz
fcomp
ret
bnd
les
(bad)
hlt
test
imul
out
inc
fidivr
outs
mov
inc
loope
(bad)
rcl
shl
jp
add
adc
int3
mov
sar
jnp
shl
push
and
in
fs
shl
push
jb
cwde
sbb
dec
push
add
lods
inc
out
push
retf
pop
sbb
fsubr
mov
jnp
add
sbb
inc
jmp
cwde
cmp
pop
dec
jmp
out
cmps
cmc
sbb
sar
sub
into
xchg
std
or
cmp
jb
cmp
fdiv
mov
inc
xor
cmp
mov
add
fbld
sub
rcr
inc
push
dec
std
scas
sbb
jecxz
push
aad
mul
sub
dec
or
out
jns
sbb
mov
xchg
and
mov
jbe
sti
jmp
mov
mov
inc
repz
pop
add
movs
push
pop
idiv
adc
outs
dec
pop
fsub
outs
retf
(bad)
fs
fnsave
mov
imul
inc
repnz
fnstenv
sbb
fistp
ret
in
jo
and
jl
(bad)
shr
sbb
adc
arpl
mov
mov
rcr
xchg
xor
(bad)
jg
dec
add
ret
test
dec
dec
imul
add
sahf
and
mov
pop
int3
mov
mov
cld
aas
push
(bad)
fisub
les
push
push
xchg
and
jbe
mov
cs
sbb
fnstcw
xchg
pop
aas
int
std
xchg
lods
(bad)
dec
push
dec
inc
xor
jmp
ud1
int3
popf
push
mov
mov
xchg
enter
add
jl
add
or
cmp
mov
mov
test
imul
mov
xchg
jbe
ficom
aam
and
shl
lahf
mov
pushf
cmp
jecxz
inc
sub
cld
mov
sar
or
jge
aaa
adc
cli
sbb
mov
pop
and
adc
scas
push
pop
lods
retf
fcom
add
cmp
lods
sub
pop
sahf
mov
pop
test
mov
jae
xor
ror
sub
fcomi
mov
jns
in
jae
scas
dec
mov
jg
lods
outs
test
push
in
shl
cmc
pop
sub
mov
mov
into
jg
scas
jge
dec
add
pop
cmp
and
mov
pop
fmul
fistp
inc
movs
jns
mov
pop
out
sub
cmps
movs
or
call
xchg
mov
pusha
xchg
xchg
inc
mov
cdq
and
cmp
pop
mov
nop
stos
js
scas
es
dec
add
mov
fdivr
dec
pop
push
inc
fisubr
jge
sub
jo
movs
xchg
add
ret
cmp
ja
jno
pop
pop
pop
in
mov
js
and
in
adc
imul
test
out
and
xlat
pop
call
fs
test
xchg
daa
int
in
test
xchg
pop
(bad)
jmp
jecxz
mov
cmp
loopne
dec
ds
pop
lds
fs
(bad)
pop
xchg
add
pushf
inc
and
add
popa
adc
pop
mov
push
imul
fld
mov
inc
inc
lahf
jl
pop
cmp
int
pop
daa
imul
retf
dec
retf
push
jg
lahf
test
sti
push
mov
rcr
enter
and
dec
ins
jns
repz
push
jl
das
mov
je
and
ja
xor
ret
xchg
inc
or
cli
pop
sbb
leave
push
test
dec
cmp
add
movs
jae
xchg
dec
call
push
stc
mov
retf
cli
or
sub
and
das
jmp
lahf
sub
lds
sahf
cld
xchg
stos
fwait
pop
mov
add
xor
jge
xchg
and
mov
jg
jmp
ins
push
dec
std
(bad)
and
mov
sti
daa
inc
cmps
inc
mov
inc
mov
repnz
or
jl
xlat
fistp
mov
fistp
mov
mov
xchg
dec
(bad)
es
repz
clc
(bad)
(bad)
shl
jb
repz
(bad)
push
mov
jmp
xor
cmp
loop
cdq
cmp
(bad)
push
cmp
stos
fwait
jl
aam
mov
push
mov
push
dec
pop
jecxz
pusha
xchg
cs
cmp
push
call
adc
pop
add
jle
xor
push
push
sbb
dec
push
shl
fist
sub
push
adc
adc
mov
or
pop
imul
xor
mov
dec
xchg
or
fst
mov
aad
test
cmc
ss
repnz
mov
jp
inc
sub
sub
popf
sahf
xchg
xor
ds
xchg
outs
jmp
dec
inc
add
inc
xor
inc
pop
push
lods
fnstcw
mov
sub
sub
add
rol
shl
sar
scas
sub
iret
add
xchg
imul
pushf
cdq
xlat
and
or
lods
iret
popf
not
cmp
sub
push
stos
inc
outs
add
inc
in
test
dec
mov
div
and
gs
mov
inc
push
sub
jecxz
setne
es
jne
je
into
dec
outs
(bad)
adc
loope
jle
and
fs
into
inc
add
pop
ins
ret
mov
les
rcl
(bad)
aam
imul
dec
pop
loope
fst
das
ss
and
sub
test
dec
std
into
add
jb
dec
cmp
fld
jo
jmp
xchg
stc
ds
adc
sbb
leave
add
call
scas
mov
or
jbe
jno
add
cmp
cmp
leave
call
or
sub
dec
rcr
mov
xchg
sub
mov
push
test
push
add
es
retf
push
fs
add
xor
jne
mov
and
push
into
int
jnp
cld
aam
int
and
call
and
jl
cmp
dec
xor
mov
xchg
inc
retfw
jbe
fmul
popf
clc
in
jae
fcomi
or
cmp
and
repnz
call
mov
and
cmp
add
sbb
push
push
dec
cmp
sbb
xchg
xor
and
jno
hlt
push
inc
popf
das
pop
jbe
mov
rol
and
gs
ins
stc
pop
fistp
push
loopne
cmp
jl
mov
push
push
push
dec
aad
add
and
and
push
in
mov
mov
pop
mov
lahf
push
and
sub
cmp
push
js
inc
xor
sbb
ja
cmc
pop
ror
jge
cmp
inc
(bad)
xchg
cmp
repz
lods
cmc
in
mov
test
pop
loopne
out
sub
gs
jecxz
addr16
cs
mov
mov
movs
sub
inc
sbb
xor
mov
in
xchg
(bad)
cmp
enter
mov
fwait
push
inc
repz
call
dec
ins
add
addr16
mov
jg
ror
adc
lea
or
inc
or
in
cmp
add
(bad)
retf
(bad)
xchg
lahf
imul
mov
scas
adc
daa
cmp
mov
imul
(bad)
mov
pop
(bad)
xchg
(bad)
lds
mov
pop
outs
pop
iret
in
or
cmp
cmp
sahf
inc
test
fisttp
test
xchg
jle
enter
adc
jge
(bad)
outs
sub
cli
push
adc
scas
sub
out
leave
out
adc
sbb
pop
dec
pop
or
(bad)
sub
test
add
mov
jb
pushf
mov
sbb
mov
repz
rol
add
shrd
ins
push
out
hlt
mov
or
loopne
push
mov
mov
adc
jno
(bad)
scas
div
push
mov
idiv
xor
sbb
xchg
pushf
push
pop
int3
push
xchg
sar
mov
in
mov
aaa
rol
outs
movs
loopne
add
mov
pop
jmp
pop
gs
repnz
or
int
int
add
add
adc
sbb
xor
xchg
fisttp
add
test
push
aam
test
fsubp
sbb
push
sub
popa
(bad)
mov
mov
inc
cmps
jg
es
idiv
(bad)
cmps
lahf
pop
jmp
retf
push
jns
scas
xchg
fild
dec
popf
in
stos
push
jp
xchg
mov
push
in
sub
pop
push
pushw
(bad)
inc
jne
aas
fsub
jmp
loope
pop
xchg
add
mov
xor
gs
xchg
jl
lds
movs
jmp
jmp
adc
jae
add
ds
mov
les
in
ins
in
xchg
fcomp
inc
jle
add
push
les
adc
hlt
in
lods
sahf
cmp
push
(bad)
mov
and
dec
lds
cmp
movaps
jae
ja
jl
and
inc
cmp
repz
push
les
movs
push
add
sub
cmp
das
mov
icebp
je
mov
stos
mov
(bad)
retf
repz
push
aaa
int
fidiv
pop
fiadd
aam
add
std
pop
gs
push
xchg
inc
aad
cmc
xor
hlt
fwait
enter
xor
aad
sub
mov
inc
mov
mov
cmps
ror
cmps
imul
mov
push
or
add
call
fdiv
sub
cmp
in
shr
dec
ins
add
pop
(bad)
in
idiv
xchg
add
rcr
mov
ins
pop
xor
outs
out
sbb
test
mov
add
movzx
and
cmp
jo
test
aad
push
es
aam
cmps
cmovl
pop
mov
iret
cdq
xchg
inc
add
pop
xchg
jge
cli
jae
fld
daa
sub
dec
lods
add
test
clc
fstp
je
mov
cmp
mov
sub
scas
or
inc
iret
aam
add
test
test
or
mov
in
push
sbb
add
leave
fdiv
jb
rol
dec
(bad)
test
add
imul
out
push
mov
xor
inc
xlat
inc
dec
sub
loop
and
dec
sbb
pop
dec
and
mov
cmp
pushf
retf
cdq
mov
idiv
lock
dec
pop
pop
out
repnz
pop
sub
xor
movs
loopne
bound
retf
inc
ss
xor
mov
mov
std
mov
repnz
ins
and
(bad)
jl
adc
scas
repz
fiadd
jmp
stos
fidivr
movs
dec
mov
xchg
es
sub
dec
sub
mov
cmp
jo
cmp
in
add
adc
sub
fcomp
cdq
je
movs
mov
sbb
sub
inc
push
(bad)
add
adc
mov
sbb
mov
sub
repz
sbb
push
out
movs
xor
sar
or
jb
mov
ds
loope
pop
test
xor
xor
mov
or
retf
sub
stos
pusha
cmp
mov
(bad)
in
xchg
cmp
gs
jp
in
loope
sbb
cmp
mov
push
sbb
push
dec
pop
xchg
cmp
pop
sti
pop
sub
cdq
fisub
(bad)
(bad)
pop
in
pop
sbb
pusha
push
clc
adc
cli
push
(bad)
jg
push
lds
push
mov
lea
repnz
cmc
sbb
test
std
in
aas
hlt
mov
xor
ja
lods
(bad)
lods
in
shl
mov
in
jg
ins
pop
in
fisttp
jno
pop
xchg
push
mov
xor
push
in
cmp
fisttp
mov
xor
xchg
jbe
popa
jl
imul
mov
dec
dec
push
jmp
add
cdq
cmp
xor
pop
cmps
or
dec
int
sbb
rcl
shl
lock
loopne
inc
mov
ret
je
dec
sahf
add
lods
adc
inc
jae
stos
push
out
xchg
and
xor
adc
bound
xchg
pop
push
sub
test
scas
pop
arpl
jl
jmp
add
push
mov
jne
mov
cmp
pop
out
xor
scas
sar
mov
hlt
ss
les
cmp
cld
popf
and
clc
pusha
into
ins
rcr
leave
mov
call
(bad)
adc
out
ja
bound
xor
xchg
into
mov
call
stos
ret
xchg
int
out
push
(bad)
fimul
aam
push
adc
push
inc
adc
pop
adc
mov
dec
adc
retf
(bad)
leave
pop
mov
lock
pushf
into
mov
sbb
not
jne
scas
fs
pop
push
out
sub
adc
mov
cmc
xchg
xchg
adc
mov
sub
cmp
jp
mov
rcr
movs
sbb
adc
loopne
cmps
mov
dec
sub
sub
jb
fs
xor
push
lahf
retf
dec
retf
cld
push
push
aam
mov
jb
sbb
call
and
mov
cmp
xchg
fcomp
outs
js
fs
push
loope
ret
xchg
cmp
inc
xchg
into
xchg
xor
jbe
or
or
push
mov
rol
push
bound
xor
cmp
mov
lahf
lods
nop
jne
dec
dec
clc
cmps
mov
adc
lods
jl
mov
jp
sub
add
xchg
ins
arpl
ret
lahf
push
call
adc
mov
imul
test
pop
inc
lods
pop
test
mov
dec
cmp
xchg
cs
cmp
imul
stos
cmp
fnstcw
sbb
cmp
mov
xor
scas
loopne
ret
cmp
movs
or
div
(bad)
mov
lock
cmps
adc
arpl
inc
mov
pop
mov
cmp
ret
xor
xchg
fdivr
and
ins
dec
add
mov
(bad)
mov
push
pop
push
mov
scas
pop
adc
lods
and
add
jmp
pop
adc
(bad)
lods
sub
dec
xchg
leave
push
or
xchg
lea
aas
stos
or
adc
dec
sbb
mov
sbb
pop
mov
inc
outs
cmps
pop
out
stc
pop
push
dec
xor
xor
or
fs
outs
jb
retf
dec
push
into
retf
xor
in
repz
sbb
dec
pushw
mov
sbb
(bad)
aam
scas
mov
pushf
xor
ficom
and
fisttp
arpl
xchg
jecxz
and
popa
hlt
add
cld
mov
cmps
jbe
push
cdq
jb
and
mov
mov
push
mov
mov
dec
pusha
xor
ins
pop
dec
lods
fs
lahf
xchg
shl
push
inc
xchg
fisttp
xor
fcom
adc
cli
in
lahf
call
dec
adc
push
inc
pop
push
jmp
mov
cmp
push
mov
mov
push
mov
mov
dec
sub
and
out
iret
jns
cmp
pop
out
jbe
arpl
xchg
lods
loope
outs
adc
xor
and
mov
nop
cmps
test
(bad)
adc
cli
fidivr
ins
fcomp
lds
jne
adc
cli
enter
out
inc
mov
mov
mov
or
in
rol
and
sbb
loop
or
or
cmp
imul
add
inc
mov
jp
mov
jno
xor
popa
cld
xor
jb
sub
and
xchg
lock
cmp
sbb
(bad)
mov
lods
mov
sub
jo
stos
in
das
not
xchg
mov
and
dec
ror
(bad)
cmps
mov
ds
and
xor
mov
push
jne
fild
push
(bad)
add
bound
hlt
dec
jno
mov
mov
enter
fcom
push
cmp
push
or
xchg
jo
js
sub
push
mov
xor
cli
int
repnz
pop
mov
loopne
fcmovne
mov
neg
popa
inc
xchg
mov
shl
aas
mov
std
repnz
xchg
cmp
nop
arpl
fprem
cmp
adc
mov
ret
adc
jo
add
pushf
adc
or
out
sub
fsubr
ficomp
call
cmp
add
dec
in
sub
xchg
jg
mov
jbe
(bad)
fld
addr16
jl
inc
mov
lds
out
xchg
add
mov
sbb
fs
fdiv
sbb
aaa
xchg
outs
mov
sub
lods
mov
adc
pop
lahf
repz
pop
sti
lea
pop
pusha
or
leave
mov
mov
(bad)
mov
into
cs
or
loope
repz
cmp
push
dec
pop
popa
and
cmc
xor
test
mov
lods
test
popa
jmp
hlt
retf
std
and
loope
rcl
or
add
and
dec
xchg
mov
or
mov
movs
pushf
mov
mov
mov
pop
add
inc
jns
or
or
scas
sub
call
popa
mov
pusha
loope
cli
cmp
call
movs
inc
out
xchg
lahf
sbb
dec
and
in
dec
cmps
cs
push
aas
int
cmp
and
push
ret
adc
pop
push
fcom
add
adc
adc
cmp
mov
test
aad
test
push
sti
or
(bad)
cmp
loopne
pop
out
icebp
sub
dec
sbb
jne
mov
(bad)
jmp
lods
cmp
mov
push
cdq
cwde
xor
mov
pop
inc
bound
mov
cmp
xor
mov
cwde
aam
repz
ins
sub
loopne
jmp
inc
cmp
pusha
pop
scas
push
pop
ret
adc
pushf
popa
mov
push
xchg
(bad)
jmp
retf
fisub
add
jo
mov
cmp
push
add
pop
(bad)
mov
mov
mov
pusha
mov
stc
mov
push
jbe
sahf
cmp
mov
inc
cmp
mov
inc
ins
mov
mov
adc
and
jns
jns
test
xor
adc
mov
pop
and
cmps
mov
enter
in
mov
cwde
imul
mov
js
xchg
or
out
jns
imul
loop
inc
loope
mov
adc
fcmovnbe
sbb
(bad)
jae
sbb
scas
mov
movs
(bad)
out
je
fstp
adc
xchg
adc
scas
or
cmps
loopne
retf
dec
fs
xor
into
(bad)
adc
cmc
or
mul
pop
in
(bad)
pop
sub
icebp
dec
pop
mov
mov
fwait
arpl
pop
sub
adc
jge
loop
sar
sub
mov
inc
push
inc
mov
(bad)
mov
xchg
push
mov
jae
push
imul
push
push
scas
mov
adc
imul
cld
(bad)
imul
pop
xor
ins
and
add
mov
shr
sub
cmp
and
mov
outs
jne
dec
sar
fnsave
js
xchg
lock
stos
(bad)
pop
adc
xor
(bad)
fdivr
jmp
push
and
fadd
or
jle
jno
aad
fcom
push
jg
pop
ror
mov
(bad)
jne
imul
dec
push
imul
sub
(bad)
cs
mov
cmp
ds
sub
addr16
lahf
lea
pop
(bad)
clc
jne
xchg
mov
inc
sbb
pop
sub
dec
add
push
push
in
imul
fcom
mov
jmp
and
pusha
es
xchg
inc
inc
in
arpl
adc
js
push
test
jle
faddp
loopne
adc
repz
popa
pop
repnz
cli
xchg
mov
xor
lock
lock
xor
mov
neg
dec
dec
mov
jp
dec
sub
mov
mov
mov
out
cmc
sar
mov
loope
aaa
jnp
(bad)
in
cmc
out
xor
scas
rcl
xor
jecxz
movs
in
cdq
or
sub
lea
xor
out
mul
mov
mov
out
dec
std
sti
adc
je
sub
jecxz
or
push
inc
pop
ins
fwait
call
mov
cmc
xchg
retf
retf
outs
scas
ret
in
mov
sbb
out
jp
mov
sbb
pop
sbb
xchg
(bad)
(bad)
cdq
inc
cs
xchg
test
jecxz
cmc
mov
xor
ins
arpl
call
adc
sub
add
adc
(bad)
leave
stos
and
sbb
stos
stc
add
test
mov
pop
data16
bound
pop
dec
js
sbb
mov
rcl
ret
imul
pop
adc
xor
mov
(bad)
nop
sahf
imul
pop
xchg
jmp
push
pop
out
pop
loop
xor
fdiv
shl
mov
sub
in
mov
pop
or
mov
int
sbb
popa
ss
sti
add
cmp
or
out
aaa
cmc
imul
push
lock
stos
fild
call
popa
repnz
fldenv
icebp
push
aas
lods
push
popf
adc
or
xchg
jge
daa
cmc
xor
movs
sub
jnp
sub
push
repnz
mov
jmp
out
ins
loope
push
xor
addr16
dec
mov
or
xchg
pop
and
adc
lea
add
cmp
cmps
xchg
jg
pop
add
dec
jmpw
lea
arpl
pushf
sbb
cmps
inc
cmp
rcl
scas
inc
in
mov
jb
inc
mov
(bad)
(bad)
mov
data16
call
leave
int3
out
sbb
jg
leave
rcl
mov
mov
sahf
ret
dec
or
cmp
jmp
xchg
outs
dec
fistp
fs
mov
ret
stos
ss
add
xor
repz
jge
das
into
in
push
pop
leave
int
fiadd
inc
xor
call
and
jnp
ss
clc
ins
sbb
jmp
mov
push
movs
xchg
cmps
cmp
ds
push
mov
push
ret
sub
aaa
inc
dec
jns
jbe
stos
jp
in
(bad)
adc
sub
pop
pop
or
push
out
pop
pop
push
bound
cld
sub
xchg
cmp
cmp
das
pop
sti
sub
clc
ss
mov
mov
push
or
push
(bad)
mov
adc
push
mov
xchg
call
or
add
mov
pusha
mov
add
pop
pop
jecxz
add
xor
mov
sbb
mov
mov
cvttps2pi
dec
inc
inc
in
xchg
sar
or
(bad)
cmps
adc
into
mov
push
mov
mov
push
jno
pushf
mov
ret
scas
ds
lahf
jo
retf
stos
imul
inc
sbb
or
and
jge
cmp
jp
into
test
mov
(bad)
mov
pop
cmp
pop
fstp
clc
or
push
jae
arpl
xchg
and
out
leave
in
cmp
cdq
and
pop
jns
fiadd
add
cmps
inc
cmp
mov
add
pop
add
jnp
nop
mov
stc
int
out
int
or
es
movs
and
sub
mov
mov
stos
inc
inc
jmp
jmp
mov
int
mov
sti
lods
lahf
aam
adc
or
push
stc
sbb
mov
mov
jo
and
fcomi
push
xchg
shr
mov
adc
jmp
cmp
sbb
sahf
call
cmps
xchg
arpl
into
adc
repz
mov
mov
mov
cs
sub
sbb
ins
or
iret
inc
daa
and
pop
inc
mov
push
in
call
mov
(bad)
push
mov
sub
mov
adc
and
loope
inc
mov
cmp
push
nop
mov
iret
nop
push
lock
into
ret
adc
xchg
fnstsw
adc
sbb
mov
lods
dec
jb
inc
inc
or
xchg
inc
and
jmp
jns
cwde
sbb
loop
fidiv
jmp
(bad)
div
(bad)
mov
dec
ins
rcl
fild
inc
mov
and
dec
cmp
mov
mov
lea
in
add
in
cmc
xor
repnz
push
call
push
aam
test
fwait
mov
mov
fdiv
sub
jae
inc
sbb
xchg
mov
mov
dec
adc
fadd
(bad)
out
mov
push
or
mov
mov
push
out
lea
aad
daa
stos
fdivr
mov
add
xor
pop
jl
mov
outs
mov
jae
or
repnz
repnz
not
mov
push
sub
xchg
cmps
out
aad
jmp
push
imul
imul
das
xchg
jo
or
lods
jne
sub
add
les
mov
pop
lods
cwde
adc
xor
push
and
push
in
mov
or
cs
js
rcr
add
pop
enter
mov
scas
rcl
sbb
sub
xor
in
sti
(bad)
data16
cmps
pusha
pop
add
sub
pusha
cmp
cmp
lods
jmp
jbe
jno
mov
and
and
adc
or
loope
movs
xor
mov
xchg
xor
(bad)
cld
cli
std
daa
cmp
mov
in
sub
lea
sub
inc
dec
fiadd
cmps
fcomp
into
jno
mov
das
cmps
or
ins
test
shl
adc
lods
imul
call
adc
push
sub
lock
sub
mov
out
lock
xchg
inc
jbe
out
sbb
mov
push
xor
fxch
sbb
xchg
sbb
fild
mov
adc
retf
ja
aad
or
pushf
rcl
add
push
or
pop
pushf
push
hlt
jge
xchg
mov
retf
adc
neg
pop
sub
rcl
jecxz
retf
ss
inc
sbb
loope
imul
and
or
inc
out
sbb
mov
pop
call
clc
cmps
jecxz
push
test
adc
popa
popf
adc
scas
or
mov
ret
popa
mov
jmp
and
push
mov
fisttp
mov
dec
mov
mov
push
mov
cmp
xchg
xlat
in
jp
movs
dec
xchg
inc
add
cld
shl
and
fdiv
test
test
lods
aas
sbb
pop
add
arpl
bound
pop
repnz
push
sub
pop
or
daa
test
jg
out
mov
outs
add
dec
push
in
or
jmp
mov
call
pop
push
cmps
push
mov
je
mov
int
xlat
rol
push
pop
ret
push
mov
sbb
mov
mov
mov
enter
mov
(bad)
jne
(bad)
movs
adc
push
fs
mul
shl
push
mov
jae
adc
bound
cmp
xchg
adc
jg
push
inc
imul
dec
stos
push
fiadd
mov
xchg
aas
cmp
or
add
loope
(bad)
lahf
mov
xchg
rcr
inc
sahf
(bad)
xor
fcomp
sub
push
xchg
push
add
jecxz
fs
jmp
inc
outs
neg
imul
mov
out
lahf
ror
cmc
add
dec
retf
mov
and
test
scas
xchg
outs
mov
push
jl
inc
cmp
pop
mov
jne
mov
jo
or
test
aam
push
sub
stos
sahf
jmp
mov
mov
les
lahf
ret
pop
lods
jge
cmp
pop
ret
push
and
call
or
outs
lds
and
adc
cmp
mov
int
jp
dec
rcr
lea
das
call
out
addr16
xchg
sbb
push
movntps
pop
imul
inc
xchg
fistp
jno
ja
enter
int3
sbb
mov
pop
out
pop
or
ins
sbb
dec
mov
jl
jl
add
int3
cmps
xor
pop
(bad)
adc
in
pushf
push
in
push
lods
lods
add
or
pop
fld
scas
in
push
loop
dec
jbe
(bad)
ja
cmp
pop
mov
push
or
int
cmp
cmp
fmulp
outs
xor
push
bound
leave
push
push
cmc
lods
xchg
and
sahf
push
mov
pop
xor
or
lds
xchg
cld
mov
cmp
movs
int
xchg
rol
sbb
push
add
jmp
test
test
jb
fidivr
std
repnz
test
jg
leave
repnz
mov
sbb
jge
sub
in
fwait
jg
aad
mov
mov
mov
add
pop
mov
pushf
lock
xchg
sbb
out
sti
cmps
pminsw
sar
dec
sbb
(bad)
cld
and
loope
jb
dec
push
(bad)
sbb
pop
jnp
inc
push
pop
cmps
in
cmp
in
out
jecxz
mov
xor
shr
imul
jnp
sti
add
add
or
xlat
cmc
nop
pop
fisttp
in
mov
push
jb
movs
dec
jae
stc
sub
mov
movs
and
pusha
mov
jp
bound
daa
test
repnz
or
ins
or
je
les
jg
fidiv
inc
bound
xor
jg
stos
mov
xor
arpl
or
shl
sbb
mov
mov
or
out
fcomip
out
sub
lea
inc
sahf
clc
fwait
dec
out
mov
sahf
lea
sub
div
jmp
and
loop
add
nop
shr
movs
ins
push
leave
jmp
repnz
popa
push
cmp
into
arpl
add
fld
adc
or
cli
shl
mov
ror
push
ss
add
retf
(bad)
setne
in
jnp
dec
push
ins
mov
sbb
clc
push
cld
ds
stos
xor
mov
add
sbb
mov
dec
cmp
add
adc
add
xlat
jmpw
mov
pop
lods
adc
pop
adc
daa
stos
mov
mov
xor
pop
stos
adc
je
pop
cmp
test
mov
or
and
std
dec
sub
adc
(bad)
retf
je
mov
mov
push
rcr
and
mov
mov
int
out
aaa
lahf
out
inc
rcl
nop
lds
pop
pop
cmc
pop
fwait
mov
sub
shr
cs
jmp
fwait
icebp
sbb
inc
xchg
xchg
inc
dec
fucomi
std
mov
gs
or
inc
inc
mov
adc
arpl
push
dec
in
push
or
frstor
push
jle
jmp
(bad)
mov
dec
fcomi
push
(bad)
pop
add
pop
xchg
push
les
jb
push
iret
mov
or
sub
aaa
clc
adc
sbb
ja
test
fisubr
mov
aad
in
call
or
and
ror
inc
adc
mov
or
mov
icebp
loope
call
xchg
xchg
sub
inc
imul
or
pusha
pop
inc
mov
test
push
dec
inc
sbb
cmp
jecxz
sub
sbb
in
jmp
fs
imul
jp
icebp
shl
mov
add
stc
dec
xchg
aaa
imul
lods
out
fchs
mov
cmps
dec
jae
call
dec
leave
dec
lahf
stos
add
dec
int
dec
and
leave
jns
or
mov
or
jno
mov
(bad)
sti
pop
je
enter
ret
mov
sbb
addr16
shl
or
jg
and
xchg
push
sbb
arpl
call
and
(bad)
mov
cmc
daa
inc
shl
js
sbb
addr16
shl
adc
cmp
fdiv
jmp
push
adc
fabs
js
inc
(bad)
lods
jne
aaa
rcl
dec
daa
sbb
dec
pop
pop
and
fadd
mov
mov
lea
popa
jge
inc
push
mov
fisttp
sahf
lds
lds
cmp
repz
into
aas
add
inc
std
ins
(bad)
cmps
xor
cwde
mov
add
adc
jmp
or
xor
sub
cmp
add
jno
loopne
fmul
fild
js
out
ret
ud0
into
jne
aam
repnz
jae
shl
shl
inc
and
out
push
mov
or
cmp
int
aam
cmp
pushf
aam
cmp
pop
sbb
mov
ret
cmp
test
adc
lock
movs
jmp
pusha
dec
cmp
push
icebp
gs
stos
jp
add
jle
dec
mov
imul
div
push
cmp
xor
push
bound
addr16
sti
fiadd
cld
adc
mov
sbb
jmp
mov
mov
add
mov
popf
jecxz
inc
pop
add
cdq
adc
and
out
xchg
out
mov
mov
pop
or
jmp
mov
and
push
push
and
pop
div
mov
jge
sbb
aad
mov
pop
xchg
jns
xchg
add
cmp
mov
xor
and
xchg
jle
bound
jmpw
mov
mov
pop
dec
mov
stos
inc
popf
imul
push
adc
or
or
xchg
ficomp
inc
xchg
cmp
inc
inc
(bad)
sub
add
mov
mov
test
xor
jg
in
or
jge
aas
and
pushf
aad
xchg
dec
xchg
or
push
gs
ss
xlat
lods
push
das
push
cs
cld
sbb
mov
icebp
xchg
xchg
pop
push
fbld
(bad)
fldenv
cmps
sbb
lods
mov
push
cld
je
ret
leave
addr16
in
sahf
inc
xchg
jg
push
ret
dec
add
dec
cli
jno
mov
test
aam
loope
(bad)
jg
inc
mov
xor
push
lods
popf
imul
mov
jge
fwait
mov
loopne
sub
or
shl
inc
fmul
jg
push
scas
ja
call
gs
jae
jmp
pop
jae
pop
sbb
lds
outs
xor
and
add
aad
scas
or
mov
int
(bad)
jno
mov
add
cmp
lahf
lods
cli
test
fadd
xchg
mov
gs
push
pop
outs
fiadd
es
ins
sub
out
xchg
mov
call
mov
mov
lea
cdq
addr16
cmc
push
dec
xlat
repnz
mov
dec
icebp
pop
pop
out
fdivr
dec
mov
gs
pop
imul
xchg
push
inc
inc
out
test
push
(bad)
outs
ss
dec
rol
xor
or
push
icebp
out
daa
mov
(bad)
mov
push
stc
aaa
daa
pop
fidivr
fucomip
lds
pop
sti
adc
out
mov
mov
jo
adc
mov
ins
leave
pop
pop
pop
or
dec
aaa
xchg
stos
imul
dec
push
pop
push
lods
jp
ss
loopne
adc
int3
nop
mov
fcomp
jb
jb
out
jns
dec
outs
in
cs
inc
push
push
inc
loopne
std
mov
and
mov
push
mov
cwde
sahf
xlat
push
int3
pop
test
daa
ficom
mov
push
ret
cs
sub
xchg
xor
movs
sti
inc
push
(bad)
fsub
loope
xchg
mov
xlat
mov
dec
xchg
fst
out
fwait
(bad)
pop
jmp
mov
int3
inc
dec
jle
push
jecxz
lock
mov
popf
cmp
in
shr
pop
mov
xor
inc
inc
inc
xchg
xchg
inc
ds
ins
shl
out
mov
jmp
mov
aam
sub
jo
sar
sysret
adc
mov
imul
xchg
push
cmc
fdiv
shl
dec
xchg
lock
aas
inc
mov
leave
push
inc
or
pop
dec
jp
cs
xchg
add
not
aas
out
enter
out
inc
lock
(bad)
movs
hlt
stc
nop
mov
add
pop
ror
ret
in
pusha
mov
sahf
icebp
fcomp
xor
ret
test
and
daa
dec
jl
cmp
sub
pop
jmp
popf
lea
jl
fcomip
imul
imul
loop
scas
jae
mov
pop
xchg
in
jp
sub
fcomip
jbe
in
rol
adc
xlat
or
call
daa
iret
cmc
popa
xchg
or
push
mov
inc
loop
mov
repnz
cld
add
std
ss
popf
jge
scas
mov
mov
imul
adc
cmc
in
cmp
lods
test
sbb
xchg
cmp
pop
mov
fcom
push
jnp
mov
push
popa
aaa
push
jns
or
ret
shl
hlt
and
lahf
add
inc
xchg
out
call
cmp
mov
ja
push
test
maxps
dec
mov
test
out
(bad)
pop
mov
loop
xor
mov
pop
lahf
inc
les
cmp
ud0
out
push
test
mov
(bad)
xchg
je
test
mov
sti
pop
in
mov
xchg
imul
ret
mov
jl
inc
pop
cli
loope
sbb
aas
daa
fistp
push
add
cmp
pop
jno
(bad)
push
ds
mov
rep
cmps
mov
cdq
sub
sbb
inc
rol
mov
cmps
inc
cmps
retf
dec
add
mov
xor
mov
jge
lahf
(bad)
mul
mov
fwait
cmp
adc
sub
out
stc
xor
shl
dec
cmp
ja
mov
loopne
outs
mov
std
mov
mov
push
pop
pushf
movs
scas
in
dec
pop
xor
or
inc
ror
cs
adc
jg
mov
adc
(bad)
sbb
xlat
xchg
enter
xor
jae
es
adc
or
mov
xchg
ret
repz
bswap
mov
stos
xchg
out
jl
mov
or
xor
lock
sbb
repnz
adc
in
xor
int
or
test
in
mov
retf
sar
out
neg
add
push
js
xor
push
mov
xor
jl
cmp
jne
jno
test
cmp
sti
icebp
and
push
lahf
out
cld
pusha
fisub
push
jp
adc
repz
iret
in
dec
lods
mov
out
addr16
push
inc
cmc
out
sbb
push
sbb
std
cdq
cld
outs
(bad)
in
aam
pop
ins
dec
pop
jmp
shl
pop
inc
scas
ss
push
in
push
or
cli
mov
pusha
mov
mov
mov
or
inc
hlt
mov
out
test
inc
lea
mov
push
gs
ret
pop
retf
in
inc
fisubr
sbb
push
int
sub
sbb
ja
leave
daa
sti
mov
ss
lods
xchg
fisub
into
popa
xor
ja
ret
fs
lock
aaa
cwde
int
jle
cmps
(bad)
dec
cs
bt
frstor
mov
lock
cli
pop
pop
adc
mov
xor
ss
ja
ss
cmc
scas
div
sub
cld
mov
fbstp
add
jle
xlat
jl
sbb
sbb
sub
test
cmp
test
cwde
(bad)
ret
inc
xchg
pop
lahf
call
dec
popf
sbb
nop
inc
pop
cmp
xchg
xchg
push
loop
into
dec
mov
repz
mov
mov
ret
in
sub
popf
xlat
(bad)
adc
mov
test
sahf
xchg
cmps
mov
mov
sbb
out
ret
mov
cmp
xchg
or
cmp
(bad)
push
aaa
xor
pop
jecxz
ror
clc
sbb
and
jno
and
push
add
mov
(bad)
stc
jns
jle
push
add
xor
jl
xchg
ret
mov
jp
xchg
mov
in
mov
mov
xchg
inc
push
sub
jo
add
jge
cwde
aam
dec
scas
jns
cmps
fcmovnu
popf
mov
jb
sub
xor
mov
ret
and
mov
out
xor
sub
mov
dec
gs
push
jns
sub
push
xchg
mov
mov
or
pop
std
gs
enter
dec
mov
mov
mov
inc
stc
dec
xbegin
aad
ss
or
cmp
cmp
ins
push
sbb
sub
cs
shl
out
mov
int
jmp
dec
cwde
test
xchg
ror
pop
outs
retf
cmp
ds
out
mov
cwde
cmc
call
loop
loopne
hlt
jle
mov
jnp
jnp
mov
cs
test
jmp
aam
pop
fcom
outs
dec
lahf
vsqrtps
cmps
loopne
sub
mov
idiv
pop
xor
rcr
dec
cmp
pop
mov
call
sub
pop
push
push
xor
mov
mov
shl
and
mov
push
pop
push
mov
mov
scas
xor
sar
or
dec
inc
pop
dec
retf
push
icebp
sub
imul
xchg
imul
xlat
mov
out
ss
js
clc
ins
les
out
sub
in
push
pusha
and
jecxz
ret
aaa
out
mov
dec
dec
(bad)
popf
xor
push
pop
pop
ins
mov
or
add
xchg
inc
sub
adc
sub
or
icebp
shr
pop
iret
rcr
adc
loopne
mov
pause
ror
dec
mov
and
cmp
aaa
lods
jnp
xchg
mov
pop
out
sub
dec
pushf
cmps
add
pushf
fmul
push
std
pop
dec
adc
add
call
sti
mov
test
jno
(bad)
dec
inc
xor
shl
ds
cmp
ins
sbb
sbb
dec
sub
push
lock
inc
sub
inc
jl
push
mov
xor
aad
sub
les
xor
stc
xchg
test
or
ds
mov
sbb
push
je
and
test
push
mov
inc
int
pop
lods
out
or
push
cmps
sbb
jg
inc
adc
mov
mov
dec
jbe
adc
xchg
rep
adc
jecxz
pop
mov
inc
test
sar
cmp
sub
jb
test
cmp
push
nop
iret
xchg
adc
mov
les
push
retf
loope
inc
jo
mov
call
ja
add
xor
mov
and
pop
add
je
fcomp
adc
inc
jmp
jmp
jmp
dec
repz
(bad)
fist
lea
idiv
outs
js
and
jne
cmp
add
xchg
ja
xor
clc
call
test
aam
out
(bad)
retf
jg
xor
xchg
dec
ja
push
adc
cmp
mov
cmp
adc
shl
icebp
in
and
dec
gs
js
mov
or
imul
dec
ins
adc
icebp
or
out
push
mov
jl
add
mov
stos
jl
fidiv
int
push
mov
fcmovne
je
xor
(bad)
bound
fcom
out
loope
jmp
adc
mov
adc
cmc
cmps
push
sub
and
aad
dec
gs
xor
or
inc
jbe
xor
gs
mov
retf
outs
xchg
dec
mov
pushw
mov
das
retf
dec
fidivr
jecxz
iret
dec
aam
imul
cs
mov
inc
mov
in
jl
movs
inc
mov
ret
icebp
movs
xchg
lock
lahf
mov
in
mov
inc
imul
and
rcl
cdq
push
es
pushf
sub
xor
cld
or
les
test
dec
adc
jl
xor
push
xor
ja
jne
jb
adc
cwde
push
add
jns
scas
mov
(bad)
stc
jp
in
sti
loop
into
mov
das
add
mov
ret
mov
push
xchg
repnz
mov
aas
mov
xor
mov
dec
pushf
ror
and
xchg
dec
xor
shl
ret
push
mov
ins
bound
pop
dec
cmp
inc
addr16
lahf
xor
pop
mov
xchg
dec
cmp
xor
arpl
pop
call
sbb
movs
and
mov
lea
sub
int
sti
dec
test
xchg
pop
repz
gs
mov
push
or
adc
xor
mov
xlat
add
sahf
popa
out
fs
sar
das
mov
sbb
bound
shl
cli
(bad)
call
(bad)
jbe
ret
fs
ret
pusha
push
out
jne
jp
pop
scas
lods
dec
jo
pusha
clc
inc
(bad)
test
cmps
out
lods
(bad)
mov
inc
adc
adc
fld
sbb
ja
stos
retf
jb
lods
fs
popf
cmp
add
test
aaa
jl
adc
pop
pop
jo
leave
in
stos
out
fisub
pop
rcl
jae
icebp
add
xor
xchg
movs
push
add
xor
xor
inc
push
mov
jns
cmp
mov
fdiv
dec
and
or
xchg
mov
scas
shl
scas
hlt
dec
(bad)
aam
ja
stos
sbb
mov
pop
in
xchg
adc
jne
lods
dec
dec
mov
aaa
dec
sbb
add
aam
shl
push
call
jae
(bad)
ss
mov
adc
inc
push
jne
sbb
xor
xor
scas
pop
inc
jg
sub
sahf
xor
fisttp
repz
adc
sub
lahf
fmul
outs
jg
push
mov
loopne
enter
scas
test
pushf
push
outs
arpl
in
adc
lahf
rol
sub
rcr
ins
pop
cmps
sahf
add
mov
xchg
sbb
sub
push
xchg
xchg
enter
fistp
xchg
into
shl
or
mov
out
pop
aam
pop
inc
jg
adc
jmp
test
adc
xor
shl
mov
loop
xchg
mov
pop
sub
stos
xchg
sar
mov
xor
xchg
xchg
int
jge
add
xchg
mov
stos
pop
jne
dec
dec
(bad)
das
jp
push
xor
mov
sbb
adc
mov
ret
inc
cmp
add
xor
sti
fsubp
mov
or
jge
pop
and
fnstcw
mov
loop
rcl
pop
dec
sub
outs
rcr
movs
sub
mov
sub
je
xchg
adc
fmul
and
xchg
mov
pop
icebp
and
and
mov
sbb
and
test
mov
mov
inc
dec
mov
dec
repnz
repnz
jmp
(bad)
pop
sbb
sbb
dec
pop
mov
add
push
popa
add
dec
dec
daa
mov
fnstcw
in
hlt
stos
cdq
out
loopne
cwde
nop
popa
jnp
mov
out
cmp
aam
xchg
sub
out
fs
in
sti
mov
dec
out
mov
inc
xor
jno
in
inc
addr16
scas
and
add
adc
aaa
push
xchg
std
pop
push
hlt
cwde
ss
cmp
pop
jmp
dec
mov
retf
aas
shl
lods
cdq
inc
inc
dec
repz
inc
and
leave
ror
nop
das
scas
mov
jge
cmp
popf
jno
push
test
push
mov
xchg
ins
fist
push
push
movs
ja
xor
mov
xchg
fbld
pop
inc
repnz
push
iret
and
push
(bad)
test
out
pushf
scas
and
xchg
lds
stos
mov
shl
pop
(bad)
sbb
jg
mov
in
mov
push
stc
shl
aad
mov
jb
gs
cmp
pop
jo
adc
stc
cs
sub
das
inc
das
pop
fidivr
xchg
movs
jno
mov
add
inc
add
icebp
repz
dec
repz
pop
dec
sti
int
jg
popa
lea
mov
xchg
sbb
sub
mov
int3
aad
mov
xchg
fs
jle
and
ret
push
sub
jae
sub
pop
faddp
cmps
push
xchg
inc
add
sbb
fsub
pop
retf
mov
sub
lods
cs
(bad)
xchg
(bad)
neg
mov
in
ja
mov
int3
popf
mov
pushf
jmp
in
(bad)
icebp
scas
cmp
loop
or
out
mov
cmp
jns
stos
jg
jle
test
jmp
ficomp
retf
cmp
mov
and
sub
add
cmp
fmulp
xchg
jns
scas
inc
in
pop
retf
pusha
xchg
push
test
leave
(bad)
out
(bad)
outs
leave
outs
add
jae
jo
outs
bound
dec
out
cmps
xor
sub
fptan
(bad)
(bad)
sub
pop
jp
xor
ret
and
push
or
ins
push
js
aaa
mov
pop
es
jne
push
and
cmp
jne
imul
mov
jae
fiadd
loopne
pop
mov
std
add
xchg
pop
std
aaa
jnp
push
mov
mov
scas
push
cmp
shl
scas
cmp
(bad)
scas
je
(bad)
jns
in
jae
test
inc
ret
repnz
sbb
push
hlt
xchg
dec
xchg
out
mov
push
(bad)
stos
inc
dec
jecxz
bound
mov
test
into
push
dec
test
add
fs
pop
fdiv
jbe
jo
jae
push
jb
or
call
jmp
(bad)
push
jmp
jmp
xor
ins
adc
or
dec
pop
ins
pop
ins
ds
cmp
jp
jmp
adc
jmp
shl
shl
aad
push
fld
cmp
in
inc
ficomp
dec
mov
js
cmp
imul
mov
outs
repz
sub
dec
int3
inc
and
dec
add
movs
enter
lods
pop
adc
pop
aad
int3
mov
sbb
iret
inc
adc
push
xchg
in
jb
lods
pop
clc
or
outs
fadd
push
fisub
add
inc
pop
mov
add
in
push
pop
cwde
call
icebp
ins
inc
movs
xchg
pushf
jo
jb
mov
cmp
lods
icebp
jge
icebp
fild
xor
pmulhuw
aas
and
add
lods
cld
fwait
sub
jnp
je
movs
out
add
mov
jae
xchg
popa
jecxz
pop
pop
dec
jnp
adc
loop
xor
jecxz
es
lods
sbb
mov
sbb
xchg
jno
pop
popa
and
(bad)
call
xor
add
(bad)
lock
push
lahf
mov
rcl
xor
add
and
out
pop
or
push
jmp
cld
mov
fmul
cmp
je
out
ss
shr
jmp
rol
fdivr
mov
bound
movs
popa
mov
xchg
test
cli
jecxz
pop
and
dec
sub
fwait
push
inc
mov
mov
mov
push
cdq
xor
mov
cmp
(bad)
push
mov
call
int
(bad)
in
fstp
and
adc
xor
xchg
stos
pop
jg
jp
mov
fisttp
and
adc
sbb
imul
sahf
cmp
dec
mov
arpl
je
pop
popf
sbb
ds
inc
lahf
or
mov
adc
shl
push
or
cdq
fs
push
inc
mov
shl
mov
movs
push
push
cmps
push
fistp
push
fdiv
(bad)
lock
push
xchg
leave
adc
fild
push
jle
adc
stc
sbb
jg
std
sub
gs
test
bound
aad
imul
ins
inc
mul
out
loopne
inc
enter
iret
jmp
inc
iret
push
xor
call
in
push
leave
sahf
loop
pop
movs
cli
fst
pop
out
adc
pop
pop
pop
dec
arpl
cmp
rcr
cmp
dec
hlt
xchg
cli
shl
cmps
ss
popf
mov
aam
iret
push
inc
das
inc
push
sbb
pop
pushf
adc
arpl
pop
push
in
bound
(bad)
pop
jmp
sbb
shr
inc
jno
cmp
mov
out
sar
jge
movs
loop
xchg
mov
or
sub
mov
movs
pop
shr
(bad)
cld
push
adc
jno
and
outs
arpl
ins
inc
idiv
outs
jne
jmp
test
or
lods
call
in
lods
pop
push
sub
stos
jnp
aam
sbb
outs
lea
cmp
into
ret
jno
jmp
fsub
scas
cli
add
scas
xchg
sub
dec
mov
retf
xchg
outs
test
xchg
aad
movs
cmp
outs
jmp
aas
push
sbb
std
pushf
mov
lock
dec
push
sub
push
add
mov
shl
aaa
push
pop
push
sub
outs
jbe
(bad)
mov
push
stos
xchg
push
and
cmp
add
jb
mov
sar
push
fcom
inc
and
mov
push
retf
cmp
in
xchg
sub
(bad)
cmps
push
xlat
push
(bad)
mov
test
push
int
es
xor
mov
in
shl
sub
mov
loope
push
mov
pop
bound
sbb
movs
in
mov
sub
pop
inc
adc
jno
and
add
xchg
or
cmp
jo
or
push
and
add
cmp
fsubr
and
mov
rcr
sbb
pop
push
sbb
push
test
std
adc
fmul
dec
mov
push
ins
repnz
in
out
in
hlt
(bad)
movs
add
hlt
stos
stos
lods
sbb
in
fs
jge
pop
test
loope
fld
ror
(bad)
nop
cld
mov
mov
out
retf
out
push
addr16
inc
rcl
jle
nop
fidivr
enter
out
jmp
test
xchg
inc
movups
jecxz
pop
dec
dec
push
mov
jne
pop
push
hlt
fs
aad
neg
leave
jne
(bad)
fdivr
aas
add
mov
xchg
sub
or
popa
(bad)
mov
dec
mov
jno
xchg
mov
pop
mov
cmp
fnstsw
aam
popf
xor
and
movs
(bad)
add
sti
jp
add
cmp
imul
jae
cmc
or
xor
dec
jge
cli
mov
sbb
dec
dec
push
xchg
and
test
add
repnz
out
pop
mov
mov
test
cmc
ficomp
push
mov
xchg
jg
mov
das
mov
pushf
mov
jo
xor
jmp
pop
and
add
add
add
add
xor
cdq
div
cmp
fwait
add
dec
or
cmp
push
dec
cmp
outs
xchg
es
sbb
ret
(bad)
scas
ss
imul
ja
mov
rol
scas
jno
or
lds
enter
mov
push
mov
xchg
xchg
xchg
pop
ror
jb
and
dec
sbb
(bad)
cmp
test
push
inc
loop
or
mov
into
sub
outs
mov
test
mov
mov
pop
sub
adc
jle
inc
cmp
xor
push
add
cwde
jne
jnp
jle
pusha
cmp
ficomp
shl
and
inc
scas
daa
sub
jae
aaa
test
div
getsec
(bad)
cmps
stc
mov
shl
and
clc
mov
shl
sti
mov
scas
sub
call
inc
pop
das
push
or
sub
fcmovnbe
shl
nop
mov
das
pop
popf
xchg
mov
sub
sti
pop
(bad)
push
cmp
jmp
mov
fwait
mov
and
outs
xchg
xchg
push
data16
mov
movs
stc
push
dec
daa
or
out
cmp
fs
jne
pop
push
pop
xchg
xor
aad
adc
loopne
pop
jge
xor
push
cmp
or
mul
or
repnz
fcomp
not
jmp
dec
test
mov
ins
inc
out
and
loopne
and
adc
ja
loopne
pop
mov
adc
inc
mov
inc
inc
cmps
push
pop
inc
dec
push
or
call
xor
add
out
xchg
jb
stos
push
xchg
jle
adc
aaa
pop
xchg
and
mov
rol
add
xchg
mov
imul
xchg
mov
add
add
jae
jl
sub
fwait
mov
fimul
sub
or
xchg
lds
(bad)
cmp
and
dec
pop
add
and
fucomip
sti
and
sahf
mov
enter
push
mov
test
adc
mov
repnz
adc
mov
xchg
imul
outs
sbb
jnp
pop
aas
jnp
test
sbb
jnp
int
cmp
loop
sub
shl
(bad)
xor
adc
aad
push
mov
pusha
inc
inc
dec
in
add
loopne
inc
mov
retf
or
arpl
xor
push
jge
or
mov
cmp
jb
mov
jns
mov
das
cwde
leave
movs
daa
jne
mov
cmp
mov
or
and
ins
test
movaps
push
sub
sub
shl
sub
pop
pop
lods
mov
pop
and
nop
in
and
and
add
and
sar
jmp
popa
jns
xor
sbb
movs
cmp
cmp
bound
sub
xor
pusha
mov
adc
mov
sub
and
xor
pcmpgtw
push
mov
push
jmp
mul
adc
or
or
sbb
sub
cmp
adc
jns
movs
shr
cs
movs
ret
aaa
and
mov
jb
xchg
and
clc
and
xor
adc
fistp
dec
xchg
mov
xor
scas
cmp
ss
cmp
pmulhw
fmul
cmp
push
adc
cli
add
repnz
nop
shr
mov
mov
mov
sar
cmp
and
jg
das
or
movs
sub
adc
ret
fstp
mov
mov
push
mov
out
arpl
add
jbe
retf
pop
push
inc
jl
xlat
sahf
aas
add
jp
ds
pop
jle
pop
mov
out
pop
ud0
jp
clc
stos
fldcw
(bad)
imul
jle
adc
inc
and
sahf
fnstenv
xchg
cmp
loopne
retf
popa
pop
or
and
push
rol
jmp
sub
imul
inc
sar
repz
xor
lahf
adc
sbb
push
push
dec
daa
push
hlt
ret
pop
mov
lea
fcmovnb
xor
das
xchg
dec
jns
les
mov
jge
xchg
cmps
cwde
movs
push
mov
stos
mov
mov
xchg
test
dec
dec
aas
ret
pushf
out
or
and
ds
mov
test
dec
imul
cdq
sub
aad
adc
(bad)
loopne
dec
add
ret
push
pop
hlt
cmp
in
cmp
jb
adc
sti
data16
mov
stc
xchg
popa
xor
jnp
mov
adc
xor
add
mov
mov
and
jl
loope
rcl
cmp
cmp
push
mov
hlt
push
(bad)
ficom
aam
push
stos
lea
push
retf
dec
aaa
add
shl
and
lods
xchg
movs
jle
inc
push
pop
dec
jp
and
dec
pop
or
int3
imul
add
hlt
jo
rol
xchg
shl
lods
cdq
clc
shr
fwait
cmp
(bad)
retf
(bad)
dec
inc
mov
sub
daa
(bad)
xor
stos
fst
out
or
push
mov
lea
pushf
ficomp
pop
push
adc
add
mov
mov
test
loope
int
lds
in
jmp
gs
xchg
mov
je
cmc
and
sbb
lahf
jae
loopne
xchg
imul
mov
add
mov
ret
pop
mov
sbb
shl
mov
iret
inc
or
jnp
out
adc
or
cmp
cli
rol
in
ja
test
fldenv
pop
mov
ffreep
push
push
pop
jno
xor
push
ret
mov
scas
in
ja
push
jae
inc
cmp
test
mov
cmps
jle
push
shr
push
cmp
xor
inc
(bad)
(bad)
mov
mov
out
mov
mov
call
push
in
fwait
jecxz
stc
xchg
shl
fist
sbb
push
jmp
lds
aas
jae
shr
pop
sub
add
test
test
test
or
add
xchg
repnz
stc
mov
mov
imul
dec
cld
sahf
iret
repz
pusha
les
push
cmc
xor
cmps
fmul
aad
data16
xchg
sub
jge
cs
(bad)
push
push
dec
lods
push
fcmovnbe
daa
xchg
sahf
mov
add
in
scas
mov
mov
or
inc
adc
sub
sbb
adc
outs
jae
and
pop
aam
(bad)
fwait
ret
adc
ret
cmps
dec
int3
cmc
stc
cwde
mov
xchg
test
and
inc
fisttp
fsubr
(bad)
std
(bad)
xor
test
sbb
imul
cmps
inc
adc
(bad)
out
jae
push
push
mov
xchg
xor
push
pop
jmp
xchg
jae
mov
and
test
push
dec
into
push
aam
ret
adc
enter
shl
fcom
lds
fcmovu
add
movs
std
test
mov
std
iret
into
mov
ret
es
mov
push
lds
push
imul
jns
das
cs
hlt
pop
or
hlt
mov
pop
jmp
push
lahf
jns
push
sub
out
mov
(bad)
push
mov
lods
adc
dec
fmul
pop
or
in
pop
pop
add
pushf
rcl
test
jbe
mov
xchg
push
out
adc
inc
pop
test
ss
add
push
jmp
js
aad
cmp
xchg
cmp
add
cmps
js
mov
adc
add
mov
sbb
mov
addr16
fdiv
push
push
popf
dec
ds
cwde
pop
adc
test
add
cmp
pop
in
repz
sahf
and
add
cmp
iret
dec
out
and
inc
push
jmp
stos
ja
mov
push
push
cli
sub
xchg
into
adc
std
repz
sbb
jae
push
ds
ret
mov
ss
lods
shl
pop
cmps
ror
pop
sbb
mov
retf
addr16
push
jmp
xor
in
enter
data16
mov
in
jecxz
sub
(bad)
mov
mov
stos
or
mov
pop
cmp
leave
push
adc
in
push
loopne
ja
sub
cmp
push
loope
inc
aaa
jb
jmp
push
push
mov
cs
inc
push
lock
cmp
and
fidivr
jns
mov
rcr
repz
stos
add
call
bound
xchg
ret
fadd
jbe
pop
aas
sbb
(bad)
sbb
in
add
push
push
cmps
ss
in
sti
jle
dec
add
cmp
aam
mov
mov
call
lahf
repz
pop
jnp
and
fdivr
sar
mov
mov
add
out
xchg
jb
jecxz
mov
mov
in
xor
adc
xchg
lods
pop
and
xor
lock
xchg
in
mov
inc
call
or
outs
leave
cmps
pop
rcl
xor
test
popa
fs
jno
add
repnz
dec
pop
pushf
inc
push
into
pop
or
sar
xchg
fild
retf
cmp
pop
stos
div
xchg
cmp
enter
shl
and
enter
out
in
sti
lds
in
adc
daa
mov
lds
mov
jp
add
mov
loopne
and
jecxz
mov
in
push
rol
rcl
(bad)
sub
icebp
jbe
(bad)
dec
add
inc
out
je
rcl
test
xlat
cmps
in
ins
or
lods
in
inc
aas
fstp
sar
ins
mov
and
xchg
test
aam
xchg
mov
adc
leave
jp
stos
jnp
or
inc
jmp
test
inc
test
push
adc
test
inc
push
shr
(bad)
pcmpgtw
loope
add
or
adc
mov
push
cmp
cmp
xor
movs
jns
cmp
std
rol
rcr
icebp
mov
push
mov
lods
mov
cmp
shr
aad
aaa
int
pop
sub
sar
scas
mov
push
mov
cmps
(bad)
mov
add
call
add
aam
and
mov
and
mov
sar
cmp
iret
xor
rep
(bad)
sbb
pop
xchg
cmp
push
push
push
lods
jns
inc
leave
fcomp
adc
mov
call
aaa
clc
xchg
jb
pop
dec
cs
jbe
enter
out
test
mov
icebp
imul
jbe
loope
cmp
bound
push
push
xchg
das
cmps
test
icebp
sub
aam
mov
pop
jae
jno
mov
inc
mov
sub
cmp
mov
adc
push
mov
xchg
lahf
stos
fadd
and
add
sub
in
shl
push
xor
repnz
sbb
loope
sbb
pop
cmp
pop
mov
xor
mov
xor
(bad)
inc
push
and
inc
lea
inc
pop
mov
inc
cdq
or
push
call
adc
aaa
fwait
pop
cmp
mov
fadd
dec
lods
push
inc
pop
push
fild
mulps
xchg
jb
scas
out
xor
dec
dec
cdq
ret
in
ret
cmp
in
dec
(bad)
cmp
adc
pop
test
fild
xchg
pop
cdq
test
outs
push
idiv
and
dec
retf
nop
adc
pop
mov
and
cmc
lods
outs
add
loope
xchg
icebp
jns
dec
dec
xor
out
rcr
jmp
add
lods
out
mov
sbb
or
stos
or
jecxz
dec
add
loop
or
xchg
push
push
and
mov
scas
(bad)
std
in
adc
repz
adc
inc
stc
cmp
sub
arpl
or
das
adc
mov
gs
mov
rcr
push
or
arpl
sbb
mov
(bad)
and
enter
cmp
jne
and
xchg
jnp
mov
scas
loope
inc
(bad)
stos
xor
popf
dec
inc
jnp
dec
shl
fimul
sbb
xchg
out
neg
jae
xor
push
mov
sub
push
push
mov
push
sub
movs
pop
sbb
mov
or
and
push
repz
je
in
mov
fwait
inc
pushf
mov
adc
imul
and
mov
imul
xor
in
jle
call
mov
aad
or
pop
int3
xchg
mov
pop
jmp
shr
icebp
xor
(bad)
call
mov
aad
fdiv
rcr
shr
(bad)
push
adc
push
inc
mov
sbb
push
inc
jg
(bad)
and
out
outs
addr16
mov
inc
int3
int
xor
into
mov
jns
test
das
hlt
fisubr
mov
jmp
mov
(bad)
xchg
jns
pop
loopne
dec
push
dec
test
clc
jbe
mov
cmps
jmp
pop
cli
div
aaa
loopne
mov
arpl
pop
mov
sbb
xor
push
nop
adc
pop
inc
das
outs
or
inc
cld
jg
sub
call
push
daa
clc
loope
lock
pop
jmp
rol
jnp
jmp
sub
imul
call
sbb
push
(bad)
pop
fld
xor
xchg
(bad)
adc
jne
jmp
fcomp
push
lock
inc
stc
sbb
arpl
fimul
sub
es
adc
gs
pop
fnstsw
lds
xchg
or
push
test
add
cmp
dec
pop
add
(bad)
pusha
dec
push
pop
xor
cmps
ss
pop
hlt
push
push
test
out
mov
nop
sub
(bad)
(bad)
(bad)
xchg
stos
ret
shl
loope
xlat
adc
xlat
add
nop
out
adc
mov
inc
cmp
xchg
push
dec
inc
mov
pop
ins
dec
adc
adc
dec
mov
mov
xchg
arpl
push
jne
lock
xchg
call
sbb
fdiv
mov
jmp
fnsave
inc
dec
aas
cmp
xchg
sbb
gs
iret
jecxz
in
ins
and
pop
mov
stos
loop
sub
jo
ss
imul
adc
add
(bad)
ins
imul
int3
iret
je
fmul
outs
adc
cmps
xlat
cmp
push
mov
xchg
into
outs
movs
push
xchg
cmps
add
mov
cmc
mov
inc
sub
dec
jge
outs
jae
push
cmc
test
or
jns
lods
push
mov
les
cwde
add
nop
mov
scas
pop
rcr
push
and
imul
mov
adc
xchg
ret
jns
push
xor
(bad)
jmp
mov
inc
ret
shl
and
scas
xlat
enter
adc
mov
adc
mov
jp
lods
daa
pop
mov
or
inc
adc
push
push
xchg
cwde
mov
add
sbb
dec
jne
push
(bad)
enter
lods
arpl
push
inc
jo
ficom
jmp
mov
sub
mov
inc
mov
or
fwait
fwait
cmps
xchg
inc
adc
cmp
dec
inc
mov
xlat
lods
mov
dec
dec
inc
rcr
cmp
dec
push
and
(bad)
pop
pop
cli
test
neg
jno
pop
sub
inc
fsub
pop
dec
adc
add
cmps
push
add
fistp
cdq
clc
jge
mov
cmp
sbb
out
icebp
mov
jb
push
mov
or
les
adc
(bad)
push
clc
in
mov
sub
dec
pop
scas
pop
jge
cmp
inc
push
(bad)
out
pop
rol
cmp
dec
xor
mov
mov
out
call
cdq
jnp
(bad)
sbb
jecxz
xor
fucomip
(bad)
dec
scas
dec
inc
cmps
fwait
mov
xchg
mov
cmp
mov
pop
sbb
imul
inc
sub
(bad)
add
xchg
push
adc
xor
jae
mov
mov
dec
mov
adc
sbb
cmp
mov
popa
xchg
arpl
sti
mov
sti
sbb
xlat
dec
dec
adc
call
cmp
push
cmp
cld
fs
adc
cmc
pop
clc
cwde
adc
les
pop
sub
push
repnz
cmp
mov
mov
mov
sub
adc
push
and
inc
shr
ss
test
cli
push
imul
mov
add
mov
cmp
fld
dec
adc
(bad)
xor
jnp
dec
sbb
aam
ds
or
inc
jecxz
outs
cmp
not
rcr
mov
je
push
mov
lock
or
push
adc
and
leave
adc
cmc
call
sub
ja
push
jmp
loop
cmp
add
retf
push
aas
sub
enter
sub
cmp
pop
sub
mov
push
xor
and
pop
rcl
dec
jns
xchg
cmps
cmp
push
test
int3
cmps
repz
pusha
and
ja
fs
jns
(bad)
or
sub
jnp
mov
cmps
xadd
lods
mov
in
sbb
xor
inc
data16
retf
push
jb
xor
cmovl
jl
add
lods
or
jae
cs
daa
inc
add
inc
arpl
adc
fistp
adc
and
sub
xor
or
pusha
xchg
fcom
fldenv
inc
je
jecxz
inc
rol
mov
push
nop
repz
cmovae
clc
sbb
je
fnstcw
jecxz
push
xchg
mov
enter
dec
loop
retf
push
pop
xor
dec
xacquire
xor
pop
cmp
push
and
fwait
jmp
jmp
lods
pushf
jl
stos
(bad)
loop
cmps
cmps
inc
jbe
loopne
jo
xor
ins
lahf
push
and
stos
push
or
lods
adc
rol
lock
inc
push
in
data16
in
lock
mul
inc
jo
popa
dec
fs
popf
bnd
mov
push
adc
jo
test
mov
ins
std
add
loopne
cmp
movs
lea
test
popf
ins
xchg
sub
pushf
adc
mov
imul
or
sahf
xchg
add
mov
loopne
push
push
data16
sbb
loope
xchg
mov
sub
jecxz
sub
or
xor
mov
stos
repnz
jg
retf
fwait
movs
and
hlt
lods
(bad)
push
fsub
add
mov
xor
mov
neg
adc
and
push
test
xor
scas
or
popf
bound
(bad)
fadd
mov
cld
pop
mov
fcmovnbe
jge
xor
sbb
dec
ins
inc
mov
(bad)
div
das
dec
ss
push
jmp
sub
mov
xor
cmps
pop
test
rol
pop
adc
rcr
jmp
sbb
xor
iret
mov
add
arpl
out
cmp
sbb
pop
fcom
push
int3
int3
dec
mov
mov
mov
(bad)
call
push
jne
jo
daa
mov
int
xor
stos
sbb
sahf
js
mov
add
mov
cli
loop
(bad)
sub
sbb
rcr
pop
xor
fwait
jecxz
add
mov
loop
je
sti
jge
test
(bad)
jp
test
in
popf
fst
mul
into
adc
cld
mov
lock
add
mov
cs
pop
test
repnz
and
pop
xor
inc
stos
daa
pop
adc
pop
jg
fisttp
mov
add
cmps
cli
imul
loopne
ins
iret
addr16
ss
mov
cmp
arpl
cmp
xor
lods
adc
mov
mov
in
call
(bad)
shl
daa
div
test
xor
ss
aas
scas
jo
das
fisub
jecxz
out
ret
in
mov
cdq
inc
enter
jecxz
(bad)
add
push
mov
pop
fucomp
aam
xor
sbb
mov
jae
push
in
jg
push
jl
repz
dec
jnp
vpor
or
mov
fadd
mov
out
rcl
rol
jae
inc
xchg
xchg
push
inc
pop
imul
and
mov
mov
sar
mov
jno
mov
bound
pop
inc
add
repz
addr16
mov
fs
add
loop
sub
outs
xchg
dec
rcl
mov
sub
loope
lods
inc
adc
int3
push
add
in
sbb
int3
mov
or
dec
sahf
inc
popf
xchg
xor
loop
add
mov
mov
in
aam
jb
sub
ins
aam
pop
ficom
fist
icebp
popf
jae
imul
sbb
in
push
push
dec
push
adc
cmp
dec
or
test
repz
pop
fistp
inc
xchg
ins
sub
sub
call
mov
les
sub
shl
mov
add
cmp
ds
clc
sahf
(bad)
adc
mov
lock
(bad)
in
inc
rcr
test
xchg
or
outs
test
(bad)
fdiv
mov
mov
in
inc
loop
pop
imul
adc
lea
daa
cs
nop
xor
ret
dec
in
jb
mov
and
sti
leave
sahf
stos
sub
mov
retf
test
push
repz
out
nop
pop
mov
mov
xchg
test
jbe
iret
jnp
jecxz
cmp
pop
cmps
dec
mov
cld
popf
add
inc
mov
popa
je
mov
in
test
adc
mov
mov
icebp
imul
les
mov
xor
jne
icebp
dec
mov
sbb
pop
mov
sbb
jae
sub
mov
call
mov
and
adc
lahf
test
into
dec
fcom
outs
dec
scas
dec
mov
stc
nop
pop
sbb
scas
cmp
cmps
popa
sub
imul
test
sar
pop
js
loop
sub
push
aam
mov
icebp
les
cwde
and
cmp
inc
leave
push
pop
mov
lahf
cmps
sti
jb
jl
shl
xchg
jae
aaa
in
inc
fiadd
mov
mov
add
stos
in
aaa
mov
ja
mov
cmp
enter
mov
test
cmc
xchg
push
and
and
inc
cmp
es
mov
jg
add
pop
pop
xor
inc
repnz
in
rol
adc
cmp
mov
mov
xor
in
cmp
mov
fdivr
xchg
push
push
mov
scas
mov
add
imul
pop
gs
dec
cwde
into
pop
test
mov
fld
mov
push
sti
outs
jnp
daa
ins
sub
test
cmp
or
sbb
xchg
jmp
jo
sbb
bound
xor
sbb
add
add
inc
ffreep
lea
sbb
ins
cld
jmp
mov
add
iret
jp
or
outs
mov
add
inc
dec
sbb
mov
ds
das
out
sbb
add
xchg
popa
push
add
fucomp
and
push
cmp
fist
data16
mov
imul
cs
ins
or
sub
or
test
jmp
fdiv
mov
pop
dec
dec
ret
pop
pop
imul
sub
lods
adc
jmp
dec
mov
dec
lock
mov
fimul
and
pop
pop
cmp
iret
movs
outs
push
adc
mov
mov
std
push
call
cs
mov
retf
xor
nop
in
ds
fimul
icebp
fisttp
lds
pop
ret
fs
ja
pop
jl
pop
inc
sub
sub
pop
xlat
test
scas
ja
leave
sbb
lea
clc
push
repnz
or
test
inc
shr
nop
dec
jmp
imul
jmp
cmp
xor
xor
gs
add
cwde
repnz
int
add
in
ret
dec
mov
dec
outs
add
and
push
jne
icebp
into
ins
(bad)
push
pop
cmp
es
ja
stc
test
sar
and
loopne
(bad)
repz
sbb
dec
cmps
nop
call
test
push
sar
push
sahf
xlat
imul
mov
stos
and
cmps
leave
jl
cli
xchg
add
repnz
add
inc
dec
mov
ins
fnstcw
cmp
(bad)
scas
out
push
mov
leave
test
movs
add
mov
push
push
ds
push
cmp
aad
shl
fcom
pop
jnp
cmp
sub
mov
dec
call
cmc
sar
jl
ror
inc
xor
loope
jae
jmp
adc
cld
arpl
pop
enter
sar
mov
data16
test
movs
ja
(bad)
xor
push
fwait
inc
fnstcw
and
xor
xor
pushf
or
push
and
dec
sbb
psubd
cdq
sbb
js
jns
fwait
cmp
clc
aad
out
mov
pop
popa
jb
cmps
or
adc
add
xchg
sbb
sbb
cmp
out
sahf
sbb
popf
mov
call
xchg
mov
inc
cmp
and
clc
mov
jle
bound
cmps
in
std
cmp
cdq
xchg
lahf
ret
enter
arpl
inc
aaa
clc
mov
(bad)
outs
add
mov
gs
or
fadd
mov
xchg
sbb
pop
inc
sar
and
sbb
sti
movs
scas
mov
pop
jp
sbb
xor
sbb
push
push
stos
lock
or
and
cmp
mov
sahf
hlt
mov
push
cmp
jb
jge
in
sbb
adc
jecxz
mov
inc
pop
loop
jo
imul
add
mov
xor
sbb
(bad)
ins
ins
mov
dec
xchg
icebp
inc
fs
mov
or
fisubr
mov
push
sar
fisttp
mov
lods
test
loope
xchg
movs
loope
mov
sub
aam
jb
adc
dec
sar
and
fdivr
add
jmp
imul
(bad)
or
fs
imul
out
mov
push
add
addr16
pusha
inc
xor
jb
and
sbb
(bad)
mov
jp
pop
aaa
cmc
ja
movs
push
adc
mov
call
aas
popa
ror
jl
call
mov
or
addr16
cmp
je
loope
sti
in
int3
pop
dec
sbb
mov
add
push
mov
push
mov
xchg
pop
pop
xor
ins
cld
bound
xchg
rep
pop
mov
sbb
sbb
out
jl
(bad)
mov
and
leave
pushf
mov
jle
adc
lock
mov
or
fs
cmp
push
out
pop
iret
and
dec
scas
xor
mov
jnp
ret
push
mov
pop
sub
xor
fisttp
xor
sub
scas
in
div
sbb
mov
cmp
xchg
push
out
popf
scas
pop
es
add
mov
push
aas
je
aad
push
loope
call
pop
test
pop
mov
fwait
and
dec
(bad)
jns
mov
cmp
mov
dec
test
xor
retf
hlt
(bad)
int
sbb
and
cdq
and
ss
push
xchg
pop
into
dec
sbb
stos
adc
ss
jns
add
lahf
js
fucomp
mov
sysret
sbb
es
mov
mov
xor
pop
loopne
lock
addr16
outs
dec
fist
imul
jnp
fs
shl
xchg
test
call
mov
xor
lods
adc
cmp
ins
out
push
fild
sahf
sub
jbe
push
xor
fidivr
push
xchg
enter
leave
lods
aad
push
jg
jp
jo
push
pop
dec
push
outs
ja
retf
mov
add
je
jmp
xchg
push
(bad)
sbb
call
sbb
shl
push
mov
mov
rcl
outs
cmp
pusha
in
call
ret
mov
pop
pop
int
stos
int3
cmp
arpl
sub
(bad)
adc
add
jge
mov
sbb
leave
adc
sub
aam
pop
rcl
pop
out
xor
in
xchg
xlat
xchg
sbb
in
icebp
pop
test
adc
xor
add
add
stos
dec
inc
inc
jge
or
shl
xchg
mov
sub
int3
dec
jns
out
cdq
mov
mov
aad
pop
adc
shl
inc
push
pusha
enter
dec
jg
pop
jl
sahf
hlt
lea
les
dec
sbb
inc
jge
in
hlt
das
ins
scas
stos
jecxz
into
xchg
mov
sahf
push
or
adc
loop
test
ret
jle
xor
sub
in
xchg
and
ret
jmp
pop
mov
sbb
imul
test
pop
lea
pop
mov
add
cmp
lea
mov
ror
int
mov
test
or
test
adc
inc
cmps
aam
leave
fimul
jbe
jge
es
test
lahf
ret
push
sbb
(bad)
cli
stos
shl
xchg
mov
mov
xchg
pop
lock
cmps
jno
(bad)
fsubr
cmp
repnz
sbb
aad
ret
nop
dec
xor
movs
cmc
or
cmp
sub
cmp
xor
or
scas
(bad)
rol
xchg
dec
push
adc
daa
dec
pop
nop
fdivr
inc
std
in
in
dec
(bad)
movs
stos
gs
imul
mov
mov
int3
jo
cmp
sahf
test
mov
push
cmp
aad
pop
ds
ficom
or
rcr
adc
push
pop
(bad)
xchg
pop
ins
mov
pop
pusha
pusha
push
xor
out
and
fwait
mov
sub
jl
jb
cmp
mov
mov
(bad)
enter
mov
dec
dec
loope
push
fadd
cld
push
lahf
(bad)
fidiv
aad
iret
dec
or
ins
(bad)
inc
std
xchg
test
enter
cmps
pop
pop
nop
add
xchg
mov
pop
das
aam
xchg
xor
mov
aaa
mov
clc
jmp
cdq
jle
ss
push
movs
pop
add
fimul
push
dec
push
adc
imul
mov
fcomp
adc
shr
cmps
xor
mov
stos
je
cmp
in
pop
dec
cmp
sub
jge
xchg
gs
popa
dec
out
(bad)
stos
jbe
dec
and
cmps
fidiv
adc
aam
in
or
sti
mov
mov
imul
pop
cmp
jmp
mov
arpl
cwde
cmps
iret
mov
adc
addr16
dec
mov
outs
xchg
cmp
call
and
dec
jae
movs
mov
push
jp
xor
arpl
dec
xchg
or
jbe
gs
pusha
loop
sub
fld
jecxz
add
lea
outs
repz
cmp
fld
rcl
cmp
in
js
pop
movs
std
int
jne
cmp
mov
cwde
sahf
or
jecxz
enter
fxch
call
mov
gs
stos
mov
or
nop
inc
ds
in
out
jmp
inc
mov
mov
inc
and
sti
adc
repnz
clc
std
lea
ret
shr
out
mov
icebp
push
sbb
test
ds
mov
dec
lock
test
pop
loopne
data16
stos
frstor
jae
lea
ins
stos
das
inc
jle
push
fidivr
imul
retf
xchg
jno
adc
aas
and
popf
sub
(bad)
cld
mov
out
push
mov
adc
sti
outs
jns
inc
test
lds
ins
cli
inc
jg
mov
aas
add
arpl
ucomiss
js
push
dec
push
js
inc
icebp
and
add
stos
sub
or
sub
popf
mov
push
into
outs
out
cdq
lea
ss
push
imul
inc
add
pop
aaa
movs
mov
popf
add
movs
and
fwait
fs
cs
or
push
data16
mov
or
pop
imul
sbb
mov
xor
mov
mov
sbb
adc
inc
cs
mov
add
enter
or
jl
ins
mov
sub
adc
call
xchg
in
sub
out
xor
add
fistp
mov
idiv
mov
mov
je
jo
data16
xor
sub
jl
das
out
mov
das
lahf
in
mov
cmp
outs
cmp
jnp
push
jns
pop
cld
cmp
mov
jnp
xlat
mov
cmp
ss
(bad)
jo
test
mov
aad
stc
cs
adc
imul
mov
(bad)
mov
sahf
and
in
fwait
ret
leave
sahf
cdq
adc
outs
lods
inc
leave
mov
and
arpl
std
and
jno
sub
xchg
adc
fld
sub
ja
sub
stc
in
test
dec
and
and
jb
mov
cmp
fadd
adc
jle
lea
adc
sub
dec
mov
jl
pop
repnz
rcr
pop
popf
sti
adc
mov
mov
cmp
adc
push
ret
sbb
sbb
aaa
int
test
pop
pop
inc
and
xchg
pop
adc
inc
jo
movs
lock
data16
push
sbb
pop
call
loope
adc
dec
sub
out
adc
push
mov
inc
lods
cmp
clc
pop
push
pusha
xchg
cmps
inc
out
repz
mov
cmp
int
cmp
stos
xor
jnp
mov
push
mov
cmp
in
or
jge
mov
retf
jo
sbb
nop
mov
popf
sub
lods
dec
cmc
sbb
mov
mov
and
lahf
loope
iret
cwde
shr
(bad)
adc
and
(bad)
scas
stos
aaa
mov
outs
je
jl
das
push
xchg
adc
ins
xchg
ds
xchg
cmp
lds
test
rol
cmc
sbb
and
adc
imul
add
aad
pop
and
dec
xchg
ja
push
bound
addr16
xor
cld
mov
retf
adc
jmp
inc
jmp
cwde
lods
and
ja
aas
sub
pop
jo
cmp
inc
test
ret
out
inc
mov
call
mov
mov
pop
mov
mov
dec
xchg
int3
ds
cmp
jne
pop
mov
mov
mov
out
in
pop
inc
xor
mov
xchg
loope
mov
push
push
ret
mov
daa
in
and
shl
lock
inc
fwait
ins
dec
cmps
or
mov
sar
icebp
test
inc
xor
addr16
out
sbb
cli
mov
jno
cs
dec
addr16
push
mov
pop
lea
retf
test
fbld
jne
clc
jno
dec
ror
lods
aad
neg
mov
push
jecxz
cmp
xor
retf
lods
leave
jmp
cli
cmp
ss
mov
or
cmp
mov
sar
mov
fsubr
mov
mov
lea
dec
push
xchg
inc
sub
(bad)
daa
out
mov
mov
aad
mov
mov
loop
sbb
nop
pop
fdivrp
nop
push
nop
mov
cmp
sbb
mov
ds
aas
xchg
ret
cmp
cwde
out
int3
inc
xchg
data16
dec
inc
div
fistp
cld
jecxz
mov
cmp
ja
pop
jno
(bad)
adc
xchg
adc
repnz
adc
sti
frstor
add
shl
imul
aas
les
fadd
inc
jae
mov
mov
add
xchg
and
xchg
(bad)
jg
xchg
sti
jae
aam
aaa
sbb
adc
jp
cmp
ret
in
lea
inc
xchg
mov
aad
inc
push
pop
aam
push
xlat
out
inc
inc
push
sbb
jp
xor
push
ins
xor
js
call
mov
jle
(bad)
fbld
retf
cmps
adc
pushf
scas
icebp
and
repz
mov
pusha
mov
mov
push
pop
pop
pusha
mov
and
jle
or
push
es
xor
xchg
mov
es
sub
(bad)
push
pop
mov
mov
inc
pop
xlat
cmps
add
xchg
sbb
mov
(bad)
cld
jne
jnp
and
mov
jl
loope
add
sbb
fist
dec
dec
pop
jo
fisub
into
or
mov
out
icebp
mov
xchg
mov
lock
dec
sub
fwait
out
mov
into
int
outs
jns
neg
in
lds
sub
add
rol
lods
mov
mov
cwde
inc
xchg
cli
std
sahf
cmovns
ret
mov
outs
fdivr
scas
loopne
mov
mov
jb
add
mov
popf
int3
popf
adc
cs
adc
sub
inc
inc
int
call
push
sub
cld
das
sbb
mov
bound
rol
sahf
mov
in
jecxz
xchg
sub
jns
rcl
fisubr
in
in
inc
icebp
push
mov
loope
nop
iret
sub
xchg
xchg
xchg
mul
sbb
mov
retf
or
std
in
call
sub
pop
push
sub
add
bound
cmp
mov
mov
pop
push
mov
jmp
stos
daa
ins
dec
xor
jns
lds
lea
repnz
mov
fwait
mov
mov
sbb
loope
dec
mov
int
cld
push
dec
shr
jno
mov
sbb
adc
jb
inc
leave
cmp
or
xlat
adc
popf
pop
and
xor
and
jecxz
and
xchg
adc
out
push
enter
test
fpatan
das
stos
mov
inc
push
(bad)
pop
gs
jnp
cmp
aas
scas
cmp
lock
(bad)
jmp
mov
shl
and
loope
xchg
mov
dec
test
enter
aaa
(bad)
fiadd
sbb
stc
inc
xor
into
inc
and
push
movs
and
retf
add
retf
les
sar
arpl
cdq
daa
not
inc
dec
movs
call
mov
pop
push
push
fsubr
pminub
adc
cmp
xor
neg
js
shr
mov
loope
jo
fidiv
sti
stc
les
movs
loopne
cmp
inc
and
cmps
ins
jecxz
lods
test
imul
xchg
xor
in
call
pop
repz
fistp
aas
inc
mov
mov
ror
jno
call
xchg
arpl
or
call
sbb
pushf
mov
mov
je
mov
test
pop
jmp
pop
pop
jb
mov
lock
sub
popa
arpl
out
pop
sbb
ret
adc
repz
mov
jns
(bad)
sar
adc
or
add
loope
call
fcomp
inc
push
pop
out
adc
mov
pop
mov
cmp
xor
add
cld
add
adc
push
movs
loopne
push
test
dec
iret
fstp
mov
hlt
test
or
push
lods
cmp
mov
xchg
outs
jbe
cmp
rol
cld
lods
das
mov
or
movs
sub
push
je
xor
push
adc
and
outs
mov
frstor
icebp
stos
aaa
fmul
mov
dec
outs
popf
ffreep
jmpw
adc
jmp
outs
xor
sub
repz
and
or
stos
aad
mov
jl
inc
repz
(bad)
mov
cli
mov
pushf
iret
popf
aad
jne
shl
jecxz
mov
nop
mov
ret
jo
mov
dec
lods
imul
adc
test
inc
(bad)
imul
jle
sbb
in
scas
fst
call
mov
cdq
push
sub
mov
clc
fstp
mov
jmp
or
sub
cmps
jl
and
jb
pop
mov
cmp
movs
xor
dec
fstp
je
xlat
ss
inc
in
ficom
xor
push
mov
xor
test
test
stc
mov
ins
pop
jae
mov
jmp
adc
in
jne
dec
inc
add
ja
xchg
out
jmp
mov
jmp
inc
std
gs
jo
jo
sub
sahf
mov
cs
or
sbb
adc
jo
mov
dec
adc
inc
stos
int3
push
sbb
cmp
fnstcw
pop
pop
addr16
stc
dec
ja
mov
(bad)
stos
std
sub
mov
push
movs
leave
jp
push
mov
add
jp
pusha
push
push
xor
push
mov
outs
inc
mov
adc
shl
mov
jbe
stc
dec
jmp
add
ss
iret
and
push
cdq
(bad)
push
loop
aas
jle
scas
fld
push
ror
push
mov
and
mov
inc
cld
and
aaa
sbb
pop
lock
mov
sbb
aas
mov
sub
cmps
loope
(bad)
and
lods
mov
jg
push
mov
scas
iret
mov
mov
mov
sar
pop
sti
lahf
sbb
pop
mov
imul
jp
xchg
or
les
clc
popa
(bad)
imul
es
call
outs
jae
hlt
iret
cmp
test
sahf
mov
xchg
pop
into
dec
mov
jmp
push
inc
loope
sub
or
sysenter
cmp
sbb
call
test
loope
ret
movs
mov
(bad)
cld
mov
out
les
or
gs
popf
test
lds
mov
sub
mov
pop
mov
bound
inc
dec
or
mov
ja
mov
out
imul
xchg
ins
push
ins
add
xchg
(bad)
mov
sar
loope
div
sbb
add
test
test
dec
xchg
push
cmp
ret
mov
in
scas
push
dec
imul
sub
mov
in
mov
aas
movs
cmp
push
int3
lock
jp
mov
cmp
(bad)
mov
das
imul
xchg
call
movs
dec
and
data16
sub
dec
push
cmp
sub
lds
sub
adc
aas
add
xor
inc
adc
push
sbb
fcmovu
scas
cdq
loop
mov
dec
shl
fwait
adc
jae
stos
sub
pop
aad
dec
in
daa
call
pop
xchg
or
push
pusha
xchg
mov
dec
mov
call
mov
mov
in
and
(bad)
out
jmp
sub
out
call
cmps
pop
in
enter
fbld
out
pop
cdq
cmp
cmps
pop
and
sbb
inc
loopne
add
jmp
pop
iret
loopne
jae
(bad)
das
pop
stos
and
push
repnz
test
loopne
inc
inc
adc
xchg
es
in
(bad)
leave
adc
ins
mov
sahf
cmp
add
sahf
adc
inc
cmp
call
pop
push
adc
fsub
sub
shl
ins
adc
mov
int
jge
repz
je
add
xchg
inc
xor
sub
dec
leave
out
mov
push
add
inc
cmp
jle
xchg
mov
(bad)
xor
lea
mov
ins
popa
out
xchg
and
dec
in
aad
ds
mov
iret
dec
aam
sti
aas
loopne
stos
in
je
xchg
ins
push
sub
cmp
call
and
sbb
cmps
mov
add
or
adc
and
shr
sub
fcomp
aaa
lea
jbe
iret
pushf
or
int3
dec
sbb
pop
outs
push
in
mov
inc
mov
in
jae
call
loop
rcl
xchg
int
(bad)
daa
or
or
mov
adc
repnz
mov
mov
cwde
mov
les
call
retf
mov
ins
pop
xor
xor
dec
jl
dec
dec
rol
mov
cmp
mov
push
mov
jbe
push
and
add
sbb
fdivr
cld
sbb
and
jle
cmp
cli
lea
test
jmp
dec
in
lods
xlat
je
or
popf
popa
sub
sbb
pop
stc
add
dec
fld
jmp
or
jmp
in
ds
mov
mov
sar
test
jb
inc
cmp
mov
loop
test
repz
in
daa
iret
sti
adc
add
xchg
sahf
retf
test
addr16
push
pop
cmp
pop
add
xchg
das
call
ret
stos
jb
(bad)
sub
jle
into
loop
mov
pushf
fisttp
mov
std
cmp
xchg
int
xchg
ja
and
cvtpi2ps
ins
leave
lock
mov
add
xchg
stos
icebp
push
pop
scas
mov
aad
(bad)
(bad)
push
inc
in
js
lods
dec
outs
push
ret
push
stos
lahf
and
ins
xchg
sti
and
xchg
fchs
jle
add
and
daa
or
jo
popf
pop
inc
jl
mov
fsub
test
retf
sub
push
adc
jnp
lds
mov
je
pop
(bad)
iret
repz
mov
aas
add
loopne
or
int
xchg
dec
das
out
push
ins
repnz
scas
cmp
loop
cwde
sbb
pushf
mov
xor
outs
out
in
ds
cs
in
jno
stos
(bad)
test
push
jo
test
xor
mov
(bad)
in
xor
pop
mov
cmps
popa
xchg
bound
repnz
fstp
scas
scas
rcl
shr
adc
mov
aam
loop
les
sub
cmp
stos
rcr
mov
jns
add
or
stos
lock
pop
mov
xchg
sbb
lods
mov
cmp
retf
fsubrp
aam
shl
pop
retf
in
enter
popa
daa
fisttp
fld
scas
push
dec
jmp
rcr
xchg
cmp
outs
sub
dec
mov
stos
cs
retf
out
xchg
and
jge
mov
xchg
adc
loopne
jle
jle
lods
in
mov
aas
sbb
lahf
cld
cmp
repnz
dec
sti
lds
sub
dec
ret
inc
jae
dec
fmul
xor
or
adc
mov
push
ret
les
div
jg
mov
(bad)
into
loopne
sbb
dec
jmp
jmp
stos
lds
ret
sub
sub
pop
mov
movs
mov
in
test
mov
add
fstp
sbb
arpl
add
xchg
pop
push
stos
dec
stos
jb
sbb
add
aaa
lds
call
mov
mov
cmp
xchg
jl
aam
push
pop
call
fsubrp
ja
loop
xor
mov
push
mul
mov
push
les
inc
fwait
call
mov
pop
pop
pop
adc
stc
stos
jmp
test
popa
fisttp
mov
shl
push
xor
sub
ror
sub
push
jl
stc
ins
rcl
clc
(bad)
ins
jecxz
stos
mov
xor
cli
add
mov
ja
ret
push
(bad)
and
dec
sar
mov
pop
fnstcw
movs
cmp
push
or
xor
into
xchg
sub
pusha
adc
or
fnstenv
pushf
cs
test
lock
sub
and
bound
xor
dec
xbegin
cs
movs
xchg
pop
sub
sbb
pusha
les
test
scas
sub
pusha
rcl
aas
adc
and
movs
cmp
mov
ins
push
mov
or
cmp
mov
stos
fld
dec
cli
add
jmp
or
xchg
popf
mov
or
inc
int
push
mov
sbb
les
xor
xlat
jae
lods
retf
cmp
int
dec
fiadd
bound
leave
retf
clc
test
repz
sbb
mov
call
addr16
dec
stos
les
outs
cmp
hlt
arpl
ret
inc
les
xchg
cmc
cmp
cld
lahf
inc
sub
pop
jecxz
xchg
mov
push
or
ja
imul
and
add
mov
add
scas
mov
mov
sub
jns
mov
cmp
sbb
iret
clc
retf
mov
or
push
pushf
test
stos
lock
test
jbe
test
test
pop
xlat
stc
jne
push
fsub
xor
jno
ins
inc
or
mov
pop
xor
(bad)
inc
loop
cld
mov
adc
push
jnp
adc
dec
jbe
or
imul
xor
jo
jmp
call
repnz
int
retf
ret
(bad)
fwait
ins
sar
sahf
add
cmps
pop
jl
shl
mov
pop
cmp
nop
cld
inc
stos
add
jp
xor
cs
lahf
ret
inc
or
jmp
stos
in
call
fiadd
pop
test
cdq
pop
fidivr
add
push
cmp
je
daa
enter
std
mov
repnz
aad
adc
push
imul
adc
add
ret
aas
cli
sub
fbstp
ss
lods
sbb
aas
rcr
jmp
xor
or
ror
push
lods
test
cmp
repz
xchg
or
adc
sbb
xchg
imul
mov
xchg
inc
cmc
add
ins
mov
inc
loopne
pop
enter
push
jo
dec
aam
jle
jecxz
add
fwait
jnp
jo
dec
fwait
shl
xchg
stos
lds
retf
add
mov
pop
aad
and
jae
mov
stos
fwait
xchg
cdq
mov
stos
outs
pusha
out
dec
jbe
sub
mov
stc
mov
cmp
push
fcmove
loope
hlt
fmul
pop
lock
adc
inc
mov
mov
add
adc
cmp
push
jp
sahf
or
(bad)
movs
cmp
add
xlat
jnp
add
mov
jle
ja
add
stos
mov
or
pop
dec
push
mov
add
loop
in
cmp
scas
sahf
das
ret
jg
or
adc
in
cmp
push
mov
and
push
jno
dec
cwde
jne
mov
jmp
push
out
xor
inc
sbb
outs
push
pop
adc
es
hlt
test
int3
adc
inc
mov
push
aam
xor
adc
xor
(bad)
push
test
(bad)
pminsw
pop
pop
adc
test
fsubr
jl
cmps
inc
cmp
pop
mov
mov
and
aaa
out
push
or
fcmovu
jo
mov
fmul
loope
mov
cli
lock
mov
and
cmp
adc
and
leave
sub
inc
outs
pop
jmp
ss
push
mov
sub
sbb
addr16
dec
mov
imul
out
push
xchg
sbb
push
pop
shr
imul
push
fdiv
push
int
inc
or
sti
sbb
ja
add
and
push
sahf
enter
cmps
pop
icebp
aad
mov
arpl
fsubp
jno
xchg
imul
adc
shl
ja
sub
rcl
sub
popf
jg
(bad)
imul
sbb
mul
div
mov
lods
xchg
and
xor
pop
push
mov
in
fadd
mov
gs
sbb
int
xchg
xchg
test
arpl
xchg
stc
dec
dec
test
fld
mov
gs
pusha
mov
jp
lds
sbb
and
push
aad
sar
inc
push
dec
loope
push
lods
addr16
cmp
fadd
inc
sbb
mov
shl
push
dec
xchg
lock
test
xchg
pop
push
shl
xchg
mov
and
push
int
fstp
mov
push
xor
(bad)
fsubp
enter
dec
xor
out
mov
inc
pop
and
stos
jns
int
out
imul
jg
mov
xor
pop
pop
xor
add
out
loopne
pushf
gs
add
clc
adc
adc
inc
xlat
inc
xor
pop
cmp
into
sti
jle
pop
icebp
xor
ds
adc
push
mov
or
jp
and
repz
cdq
stos
into
or
neg
adc
push
sbb
inc
ret
xchg
lods
adc
adc
mov
push
pop
or
ret
cmp
inc
jo
add
push
mov
xchg
jbe
push
es
mov
imul
bound
(bad)
call
push
xor
xor
sub
or
adc
pop
xchg
das
gs
or
clc
adc
cmp
push
cmps
bound
call
add
and
push
divps
mov
out
mov
fucomip
add
adc
cmc
jmp
movs
and
loopne
cmc
aas
cmps
mov
stos
push
jmp
adc
mov
adc
ins
jb
cmp
gs
lock
cld
bound
push
mov
fwait
dec
mov
pop
adc
popa
adc
inc
mov
rol
pop
mov
dec
lea
stos
sbb
stos
adc
jle
sub
xchg
jbe
call
mov
mov
adc
iret
fmulp
jg
repz
adc
cmps
jmp
outs
sbb
in
sti
dec
pop
enter
and
out
aad
outs
push
xchg
inc
sbb
jnp
out
je
mov
(bad)
int
sub
pop
ins
pop
xchg
call
jecxz
push
jp
fstsw
cmp
push
mov
call
ret
dec
div
adc
lahf
sub
dec
fisttp
dec
xor
jbe
fdiv
xchg
inc
shr
inc
call
aam
outs
cmp
xor
mov
(bad)
sti
inc
repz
ja
loope
std
out
call
aaa
imul
xchg
mov
scas
inc
pop
scas
and
add
sub
ss
cmps
cmps
repz
xchg
(bad)
in
js
inc
addr16
fstp
push
or
push
test
popa
sbb
fisttp
loopne
out
fnstcw
cwde
mov
push
push
aaa
add
or
fsubr
and
pop
aad
jne
sbb
retf
loopne
push
add
adc
outs
sub
and
ins
mov
xchg
mov
gs
lea
movs
jmp
lea
imul
adc
into
dec
sbb
push
in
test
lods
pop
(bad)
out
test
ins
push
cmp
jmp
pushf
gs
adc
xchg
push
lahf
icebp
and
mov
pop
outs
push
push
inc
xchg
sti
inc
sub
(bad)
cmps
out
inc
and
or
cwde
ds
push
mov
jns
jp
fs
add
jmp
mov
xchg
repnz
int3
adc
cwde
adc
sbb
fisttp
fstp
and
adc
or
mov
push
inc
stc
or
mov
ret
mov
fwait
(bad)
dec
test
aad
push
repnz
(bad)
sub
int
adc
in
movs
imul
fwait
push
daa
cmp
xlat
mov
idiv
pop
xor
lods
and
xlat
dec
bnd
mov
or
push
stc
loopne
cdq
dec
out
icebp
add
mov
nop
dec
rcl
jecxz
fwait
jle
loope
xchg
xchg
scas
sub
pop
pop
dec
nop
dec
cmc
ss
in
out
icebp
lds
imul
(bad)
cmp
add
xchg
xor
mov
iret
cdq
xchg
jns
cmp
fisttp
mov
xor
sub
xor
stc
popf
pop
mov
sbb
pop
adc
and
or
repnz
sub
xchg
jne
sar
sub
mov
mov
int3
out
cs
dec
sbb
hlt
mov
adc
mul
shl
rcr
pop
mov
jg
test
(bad)
mov
stc
and
popf
cmp
sub
and
cmp
pop
pop
repz
mov
sub
aad
out
fild
inc
mov
and
int3
movs
sbb
push
bound
scas
bound
xchg
loopne
cmp
es
loopne
cld
dec
mov
jl
add
and
test
push
mov
pusha
ficom
repz
out
mov
jecxz
(bad)
test
cmp
add
popa
cs
clc
sub
mov
inc
outs
dec
mov
xchg
adc
sub
retf
pop
and
and
pusha
pop
int
sar
pop
dec
fdiv
dec
cmps
cmp
and
test
dec
mov
mov
movs
xchg
dec
das
add
xchg
inc
add
sub
dec
mov
push
push
lods
fcom
mov
(bad)
fsub
and
daa
push
sub
sub
xor
dec
push
mov
xchg
dec
mov
mov
daa
popf
mov
xchg
cs
push
mov
jmp
or
repnz
das
adc
ret
mov
cli
cwde
jle
jmp
mov
cs
mov
xlat
sbb
lea
ins
gs
out
mov
mov
pushf
scas
push
or
ss
cmp
pop
push
inc
js
lds
xor
sub
ins
enter
sbb
jle
add
and
dec
fsubr
bound
cmp
dec
iret
mov
js
int
shr
sub
xlat
fbstp
jp
mov
addr16
inc
mov
adc
daa
mov
push
mov
mov
push
xor
mov
mov
xchg
pop
leave
cmp
mov
nop
jmp
lds
sbb
sub
ss
int3
mov
adc
mov
sub
ret
xchg
repnz
sub
and
imul
inc
push
dec
lds
pop
jns
dec
or
push
push
das
(bad)
cmc
iret
pushf
mov
mov
dec
push
fdivr
mov
xlat
test
ret
in
add
dec
bound
xor
hlt
scas
mov
mov
dec
inc
pop
xchg
xchg
cmps
stc
mov
sbb
pop
push
retf
mov
mov
fucomip
mov
push
ins
add
cmp
xchg
jnp
xor
ret
pop
adc
pop
icebp
xor
dec
not
imul
(bad)
xlat
mov
cmp
jmp
jg
mov
lods
repz
aaa
sbb
mov
xor
ds
fisttp
rcr
test
and
xchg
test
shl
dec
push
push
adc
fadd
push
pop
inc
xchg
call
aas
push
mov
outs
mov
jmp
(bad)
push
xchg
fwait
aad
inc
in
add
cmp
adc
call
movs
xchg
out
adc
test
not
ja
inc
jns
out
and
leave
(bad)
xchg
repz
add
add
mov
outs
popa
xor
(bad)
add
inc
inc
xchg
mov
popf
mov
mov
hlt
pop
iret
addr16
lock
je
xchg
pop
ror
popa
push
adc
inc
std
lahf
mov
lock
ror
jne
inc
cmp
push
ret
push
xchg
jmp
lods
add
fsubr
xchg
iret
in
cmp
inc
sbb
or
in
inc
dec
mov
dec
sub
cmp
xor
ds
push
sbb
mov
mov
sub
xchg
xchg
(bad)
arpl
jmp
sub
call
gs
loope
ror
xor
jb
mov
dec
add
adc
sbb
pop
ret
inc
and
push
mov
inc
rcr
int
sbb
jl
std
inc
sub
push
in
add
xchg
dec
and
pop
sbb
arpl
mov
mov
(bad)
cmp
imul
mov
test
push
mov
out
cwde
xor
dec
or
gs
push
jl
add
(bad)
cli
scas
inc
loop
or
ficomp
adc
push
jmp
sbb
popa
sub
repnz
pop
jmp
das
or
repz
dec
push
(bad)
fsub
push
xchg
inc
ficom
ins
or
adc
push
inc
push
pop
movs
push
jns
push
inc
shr
call
dec
sbb
xchg
fist
aaa
(bad)
dec
xchg
fucom
test
mov
xlat
sbb
push
push
jg
out
cdq
cli
cmc
scas
aam
inc
ret
inc
xchg
ficomp
(bad)
jecxz
push
scas
push
aam
push
(bad)
aas
cmp
sub
xlat
pop
rcl
loop
pop
mov
rcl
in
(bad)
push
xor
inc
arpl
mov
call
push
cmc
out
sub
mov
cmps
lds
clc
movs
or
(bad)
call
out
pop
pushf
cmp
js
fild
push
iret
xor
ins
aam
inc
popf
cmps
mov
jp
cmps
pop
sahf
push
mov
mov
(bad)
cmp
or
fnstenv
pop
push
repnz
dec
mov
mov
inc
mov
daa
push
aad
add
mov
lods
call
or
sar
push
in
(bad)
and
js
scas
sar
aam
int
retf
pop
jb
xlat
outs
pop
adc
mov
pop
mov
in
arpl
cmp
hlt
div
or
mov
inc
sub
or
ret
(bad)
shl
pop
ds
cmp
test
fisubr
sub
or
adc
pop
xchg
rcr
neg
fnstsw
clc
mov
inc
push
cdq
int
fs
aad
es
bound
push
ret
push
pop
imul
and
in
add
fwait
repz
and
dec
jnp
ins
(bad)
mov
neg
adc
imul
jae
or
jb
jl
xchg
add
scas
push
and
xor
cmps
mov
icebp
inc
inc
pushf
gs
pop
mov
jb
inc
cmps
lock
out
inc
xchg
in
push
inc
sub
enter
outs
sub
jge
and
pushf
sbb
(bad)
xor
lds
mov
nop
or
push
cld
adc
sbb
mov
xor
ret
adc
cmp
fs
jbe
cs
jae
cmp
jg
je
add
aas
add
mov
daa
dec
and
les
sahf
daa
int
mov
cmp
test
push
std
pusha
pop
loope
rol
out
(bad)
or
ret
fnstsw
(bad)
adc
clc
jecxz
or
iret
cmp
or
mov
int
(bad)
in
lea
(bad)
ror
popf
(bad)
xor
out
mov
add
add
iret
mov
pop
out
fwait
mov
pusha
mov
jns
leave
pop
inc
pop
fcomp
adc
in
sub
ss
ficomp
pop
adc
dec
mov
push
or
lods
pop
outs
ins
sub
call
or
pop
nop
pop
das
pop
inc
call
(bad)
fild
inc
add
fs
pop
xchg
mov
push
jmp
pop
fst
je
and
push
int
xor
and
cld
mov
in
sbb
xchg
(bad)
xchg
test
addr16
jbe
dec
xchg
jmp
push
mov
xor
iret
ficomp
jg
jmp
(bad)
xor
hlt
mov
and
je
dec
iret
add
js
(bad)
xor
jnp
int
dec
and
dec
nop
mov
js
adc
js
jmp
aaa
int
inc
adc
or
in
mov
jae
outs
pop
imul
lods
(bad)
push
push
xchg
mov
pop
(bad)
repz
mov
into
popf
je
xchg
push
mov
mov
push
sub
jmp
push
adc
and
xchg
arpl
inc
adc
in
out
mov
fdiv
push
repz
ret
inc
test
icebp
or
mov
or
pop
aad
mov
dec
mov
jle
daa
movs
addr16
jl
scas
or
xor
inc
(bad)
lea
adc
or
sbb
cs
pop
fldz
jmp
std
add
stc
into
cwde
cmp
pop
mov
mov
fs
add
ror
outs
jl
mov
push
and
lock
ret
xchg
dec
in
iret
fdiv
and
or
mov
xchg
or
lea
ins
and
pop
pop
loop
(bad)
aad
fidivr
inc
xor
test
inc
(bad)
xor
cwde
stos
jl
xchg
xlat
hlt
int
loop
adc
stos
mov
add
out
imul
ror
(bad)
(bad)
inc
mov
mov
sub
jo
sub
cmp
ja
xchg
hlt
xor
jae
mov
out
jbe
fidiv
stos
inc
shl
shl
push
pop
lods
rol
sbb
ja
sbb
stos
adc
pop
add
adc
mov
mov
ss
cmp
jbe
add
sbb
(bad)
stc
xchg
sub
mov
into
(bad)
std
and
repnz
add
test
sbb
add
pop
xchg
out
popa
test
fimul
dec
mov
dec
adc
sub
pop
adc
push
jl
fiadd
add
adc
out
out
cli
jl
in
bound
add
xor
xchg
xor
cwde
nop
ja
mov
aad
xchg
dec
cmc
and
or
in
jl
mov
add
mov
das
(bad)
iret
pop
cs
push
movs
xor
jmp
aaa
cld
sub
pop
(bad)
aam
jb
test
inc
test
adc
(bad)
movs
push
and
jnp
dec
idiv
fisttp
out
jno
sub
dec
mov
dec
or
fs
out
sbb
inc
sub
push
add
div
and
mov
sub
dec
mov
sbb
inc
nop
pop
xlat
and
mov
enter
mov
cmp
sbb
pop
lods
test
push
ins
adc
xor
cmp
lods
(bad)
in
push
inc
mov
iret
mov
sub
imul
or
sbb
push
xchg
adc
(bad)
push
xor
ror
push
dec
pop
add
jb
loopne
inc
sub
idiv
jmp
stc
test
aas
mov
fimul
pop
sbb
mov
loop
stos
movs
sar
sbb
mov
push
push
pop
cwde
mov
sub
xchg
add
pushf
ja
jne
pop
cmps
scas
jmp
pusha
xor
data16
ss
into
xchg
iret
cmps
push
jmp
mov
dec
mov
xchg
call
fs
xchg
mov
adc
or
fs
stos
jnp
fistp
dec
push
stc
mov
and
in
sub
push
inc
leave
loope
and
jmp
fld
call
sahf
outs
mov
cwde
scas
pop
sahf
sbb
inc
scas
je
sub
add
cmc
adc
mov
adc
aaa
je
inc
and
push
xor
xchg
pop
adc
out
or
xor
inc
push
mov
sub
sub
dec
xlat
jp
adc
out
mov
ficom
sbb
mov
movs
xor
es
pop
out
and
pop
(bad)
xor
leave
jns
stos
cmp
lods
cwde
mov
jmp
and
mov
mov
mov
aam
test
dec
adc
xchg
aad
arpl
mov
mov
lock
call
xchg
retf
and
xor
inc
mov
or
jp
les
int3
imul
jns
adc
fnstcw
outs
fstp
fnstenv
mov
add
push
add
mov
push
adc
jo
and
sahf
adc
sub
pushf
hlt
or
inc
cmp
xor
mov
rcl
outs
aad
adc
int3
sbb
and
repz
es
mov
cmp
cld
mov
fucomp
xchg
aam
jmp
data16
mov
cwde
pop
and
mov
add
ret
dec
add
adc
lea
(bad)
ror
mov
inc
das
push
in
fwait
retf
and
iret
outs
push
push
(bad)
les
retf
lock
jno
xchg
test
cmp
aam
aas
xor
mov
mov
pop
cwde
lods
add
in
imul
or
adc
jl
enter
inc
ins
sub
or
add
in
jle
and
hlt
xor
mov
or
int
dec
sbb
gs
fisubr
out
cmp
adc
fild
pop
jne
pop
and
add
pop
fiadd
pop
dec
mov
cld
pusha
es
call
add
int
jmp
xor
mov
mov
mov
adc
fsubr
lock
fwait
in
xor
shl
out
jle
addr16
ror
pop
loope
clc
popa
les
push
lds
je
add
push
out
(bad)
jb
je
jl
mov
xchg
jbe
mov
add
shl
pushf
dec
cmps
sbb
shl
pushf
or
jmp
lahf
enter
push
xchg
rcl
out
push
or
movs
sub
xor
dec
add
loop
xchg
sbb
xor
jae
out
inc
repnz
dec
add
pop
ret
mov
into
fdivr
add
call
and
dec
mov
(bad)
clc
dec
rcr
or
cdq
jle
std
adc
push
repnz
(bad)
call
das
cmp
retf
imul
aad
cdq
push
or
fwait
call
jg
jne
mov
pop
jae
in
sbb
sub
aad
jae
nop
adc
cmp
dec
mov
jle
aas
movs
mov
mov
dec
(bad)
xchg
bound
les
xchg
sub
cs
xchg
jne
js
xchg
cmp
mov
and
push
add
fdiv
inc
xchg
mov
test
inc
sbb
mov
sbb
popf
bound
shl
xor
cmps
jne
mov
popa
cwde
pop
(bad)
aas
cmp
jne
mov
nop
les
daa
add
dec
aas
ins
or
sub
(bad)
xchg
repz
pop
mov
cli
stc
lods
ret
pop
pop
test
xchg
addr16
cmp
bound
test
pop
lock
push
dec
fstp
jno
xchg
jecxz
in
adc
aam
lahf
push
push
js
jb
cs
pop
imul
jne
jmp
cli
jnp
dec
stos
cmp
inc
fwait
mov
cmp
mov
loop
fcmovb
ficom
icebp
dec
test
stc
loopne
(bad)
rcl
shr
icebp
push
mov
(bad)
shl
ret
jecxz
std
(bad)
fidiv
fs
div
into
mov
push
aas
inc
imul
inc
jnp
mov
sub
jne
clc
out
ret
lods
imul
ret
pop
dec
and
dec
push
popf
mov
add
out
ret
adc
repz
vcvttss2si
rcl
and
sbb
push
fadd
scas
repz
pop
or
mul
push
xor
hlt
inc
xchg
dec
cmc
cmp
mov
lea
mov
jo
jp
mov
pop
or
mov
pop
(bad)
mov
sbb
sbb
imul
test
and
pushf
xor
hlt
rcr
retf
ds
push
cmp
movs
xor
clc
daa
cmps
icebp
jnp
ss
or
test
mov
add
rcr
mov
shr
imul
pop
inc
inc
mov
jmp
mov
jg
outs
dec
imul
pop
jnp
lods
test
mov
and
xor
test
mov
pop
mov
lods
pop
add
sahf
loope
cmp
xchg
(bad)
pop
leave
imul
or
cmp
test
repnz
dec
adc
pop
int3
cdq
xor
sub
imul
data16
adc
cmp
rcl
lods
movs
sbb
mov
cmc
stos
add
dec
dec
mov
pop
cld
mov
lea
jecxz
xor
adc
dec
out
add
dec
jle
xlat
jmp
(bad)
fdiv
ins
mov
push
cmp
xchg
rcr
sub
lds
loop
mov
lods
outs
(bad)
pop
dec
popa
outs
out
xchg
stos
mov
cmp
pop
sbb
inc
add
jmp
es
sub
xor
or
xor
je
sub
push
jge
pop
loopne
test
dec
lds
sahf
dec
mov
inc
jge
pop
and
pop
into
pop
out
arpl
js
scas
jbe
mov
mov
test
adc
jl
aas
mov
jecxz
push
stc
mov
aaa
(bad)
mov
mov
jle
xchg
cmp
inc
or
xor
lea
bound
mov
sbb
shl
add
ins
aam
test
hlt
retf
sub
and
sbb
aam
dec
adc
push
mov
or
mov
sbb
xchg
mov
sub
sub
in
mov
and
pop
adc
push
xchg
mov
jns
mov
mov
or
or
sbb
data16
xor
stos
scas
call
sub
sub
mov
xchg
jae
ss
xor
inc
fs
ins
fdiv
outs
retf
xor
arpl
cmp
inc
or
cmp
scas
mov
mov
scas
adc
stc
pop
(bad)
ret
cmp
push
out
out
xchg
jmp
xchg
push
idiv
mov
cwde
push
inc
cmps
test
ficom
stc
xchg
sub
bound
stos
add
ins
pop
retf
sahf
or
xor
in
push
mov
push
les
dec
scas
inc
nop
xchg
add
xchg
jecxz
pusha
inc
repnz
push
jle
sti
xchg
mov
sbb
mov
fdivr
fdivr
add
pop
inc
das
sub
or
mov
in
leave
sar
sub
mov
adc
adc
shr
out
inc
mov
adc
sub
inc
stos
push
rcl
cld
push
stc
arpl
cmps
sub
test
mov
inc
gs
dec
jp
xor
rol
icebp
xchg
push
cli
mov
movs
(bad)
stc
jmp
mov
(bad)
leave
jbe
cmp
sbb
adc
ds
xchg
sub
mov
adc
pop
adc
mov
in
cmp
sub
jns
and
jg
in
push
and
cmps
or
shl
jmp
pushf
das
xchg
mov
dec
ins
mov
jl
call
ss
mov
pop
ret
jo
shr
and
cs
xchg
cmp
jns
sbb
gs
lods
ror
xor
add
mov
loope
gs
imul
mov
sub
test
fist
clc
xchg
sti
cli
test
mov
rol
mov
aaa
cmp
dec
and
pop
or
in
movs
sbb
cmp
mov
frstor
adc
push
fldcw
cmps
movs
std
sub
jle
or
cmp
cmps
sahf
push
cmps
loopne
scas
pop
rcr
imul
sbb
inc
loop
mov
mov
mov
mov
not
fdiv
pop
cs
jbe
stos
iret
pop
push
or
gs
call
mov
leave
(bad)
lods
out
push
pop
loopne
out
stos
push
sahf
push
cmp
mov
cmp
adc
gs
dec
xor
cld
push
inc
js
ins
and
or
sub
mov
jle
mov
jp
add
cmp
or
mov
ret
dec
pop
retf
cmp
sti
push
cmps
mov
out
mov
fwait
mov
aam
push
div
sbb
pop
sar
mov
jmp
clc
inc
mov
pop
icebp
xchg
icebp
jp
cld
pop
ja
push
clc
test
inc
out
add
or
fsub
imul
adc
dec
loopne
xchg
repnz
mov
(bad)
jo
pop
jbe
pop
xor
jmp
sbb
imul
mov
int3
xchg
je
cmps
shr
mov
and
mov
(bad)
jmp
lea
in
cmp
mov
sub
sahf
jae
push
jmp
das
(bad)
mov
dec
jmp
or
adc
sbb
xor
fstp
jmp
gs
fdivr
add
push
test
jae
and
movs
fsub
or
dec
and
and
mov
sub
mov
(bad)
scas
popf
cdq
js
add
jg
lds
jle
jecxz
nop
cld
inc
frstor
xor
ja
pop
into
rcr
leave
cmp
mov
ret
rol
xor
xor
ss
out
xor
lock
(bad)
mov
psubusb
cmps
enter
sbb
std
xchg
retf
std
stos
test
pop
cmp
test
sbb
fbld
out
js
(bad)
xor
(bad)
cli
not
or
xor
sbb
or
and
dec
call
ss
iret
imul
call
imul
mov
dec
mov
xor
pop
add
jnp
clc
mov
jmp
fmul
jl
push
mov
movs
sti
pop
int
mov
jge
inc
not
sbb
dec
add
xchg
repnz
pop
pop
scas
call
inc
adc
jo
das
mul
add
je
push
jmp
mov
push
int3
pushf
xor
std
je
mov
(bad)
jmp
pop
cmps
adc
outs
jb
cdq
fadd
repz
xchg
push
dec
ret
in
pop
cmp
(bad)
and
out
test
dec
hlt
dec
push
adc
or
out
xchg
call
loope
mov
xchg
push
mov
cs
out
scas
adc
mov
rcl
aad
pusha
xchg
lds
in
in
call
test
aaa
scas
mov
movsx
sub
cmps
out
sub
xchg
add
push
fiadd
lock
jb
ret
(bad)
fs
pusha
sbb
icebp
mov
shr
pop
and
xor
or
retf
cld
and
sub
js
cwde
and
data16
xor
ins
jecxz
mov
lahf
setae
and
movs
xchg
or
or
in
push
je
dec
lea
into
cs
into
mov
cs
fwait
pop
jecxz
out
pminub
outs
or
sbb
or
enter
pop
cmp
stos
mov
lds
mov
pop
adc
es
inc
push
in
cmps
sbb
jbe
aam
mov
ficomp
leave
mov
mov
pop
inc
inc
pop
out
cmps
clc
and
dec
mov
xchg
or
dec
sbb
and
ds
icebp
mov
das
push
add
sbb
jp
pop
push
xchg
or
mov
test
out
fadd
mov
icebp
mov
ins
adc
push
mov
lods
cmp
xor
sbb
xlat
jp
and
mov
jge
pushf
ins
dec
(bad)
cmps
retf
pop
cwde
sub
pop
push
or
scas
adc
(bad)
lea
jno
mov
fild
sbb
push
adc
cmp
push
aad
add
add
popf
xchg
mov
repz
xor
pusha
adc
lods
xor
jle
leave
(bad)
ja
vaddpd
pop
sahf
scas
push
aas
lahf
in
push
inc
jne
out
push
mov
rcr
retf
add
inc
pushf
cdq
rcr
xor
mov
popa
cmp
scas
loopne
inc
inc
jbe
dec
bnd
std
fstp
cmp
adc
pop
inc
adc
inc
mov
push
mov
mov
inc
in
stos
sub
es
mov
call
in
inc
xlat
push
loope
push
or
repnz
mov
cdq
xchg
and
jp
popa
xor
cwde
repz
stos
mov
add
inc
icebp
sub
mov
push
xchg
mov
in
add
or
mov
pop
lds
aad
sbb
aaa
cmp
nop
mov
inc
inc
pop
sbb
push
xor
or
cmc
jno
mov
inc
push
xor
dec
inc
(bad)
sar
jle
push
(bad)
cmp
mov
sub
je
stc
mov
test
mov
cld
mov
cmc
xchg
mov
(bad)
or
xor
enter
inc
xchg
arpl
mov
sbb
in
call
shl
dec
inc
dec
adc
mov
adc
push
out
jo
test
test
outs
add
push
dec
fwait
test
daa
addr16
lea
jge
and
sub
push
sub
in
mov
clc
icebp
in
mov
test
pop
popa
movs
outs
jge
mov
add
neg
(bad)
sar
es
cli
sub
retf
sub
mov
mov
inc
test
sub
cmp
bound
fdivr
fs
xchg
scas
stc
mov
cmps
(bad)
fs
jecxz
push
pop
fs
cmp
fst
pop
inc
stos
js
(bad)
(bad)
movs
push
dec
mov
mov
dec
cmp
jle
sub
ds
in
scas
cmp
inc
mov
push
pop
(bad)
mov
fistp
push
cdq
stos
ret
mov
cmp
adc
(bad)
mov
jbe
xchg
call
inc
(bad)
ja
mov
add
enter
xchg
scas
icebp
repz
and
lods
cmp
dec
stc
popf
movs
addr16
add
jmp
(bad)
ss
in
jg
jp
es
mov
dec
mov
mov
ins
jns
imul
push
xchg
or
mov
dec
es
hlt
add
pop
addr16
call
imul
sub
aas
sbb
vunpcklpd
dec
xchg
outs
fsin
xor
adc
frstor
cmp
cli
push
int3
mov
(bad)
dec
pop
cmps
sub
pop
mov
mov
jnp
clc
jmp
pop
cld
pop
std
jmp
jno
xor
jmp
and
dec
mov
jg
outs
dec
mov
mov
stc
loope
xor
rcl
outs
mov
add
mov
dec
mov
pop
popa
hlt
in
gs
cld
lds
rep
lea
call
pop
add
xchg
sbb
jg
mov
jg
add
in
push
je
sub
call
xor
jno
jno
movs
jp
pop
popf
std
pop
mov
in
sub
cmps
fimul
repz
aad
and
push
adc
jmp
std
mov
lods
pusha
aaa
cli
pop
lods
popa
in
cmp
jns
xor
test
jecxz
fstp
push
push
inc
mov
adc
and
mov
test
addr16
pop
mov
inc
shl
cmp
das
push
adc
xor
stos
or
jp
scas
sbb
stc
std
pop
jge
cdq
out
les
jle
pop
mov
or
mov
mov
sub
mov
jl
enter
lock
lods
inc
fwait
in
xor
shl
pop
dec
(bad)
gs
xchg
cmp
shl
movs
je
dec
mov
int3
scas
ds
sub
(bad)
or
add
jnp
cmp
loop
jl
sbb
in
sbb
nop
mov
inc
or
push
outs
pop
xor
push
in
sbb
mov
cld
int
add
dec
mov
sahf
fcomp
mov
aam
xor
test
xchg
cmp
add
or
and
jmp
sbb
cmp
mov
adc
outs
clc
xchg
pushf
inc
mov
adc
mov
lahf
out
lds
jb
jl
gs
clc
popa
xor
dec
jge
inc
push
call
pop
sahf
push
pop
sub
js
sbb
lock
hlt
sub
xchg
fwait
loope
xchg
mov
ins
and
jge
xchg
retf
aad
mov
sub
scas
inc
fld
in
pop
sub
push
mov
adc
cmp
mov
jmp
cwde
test
jne
ss
inc
jne
loopne
sub
call
and
lea
fist
dec
lds
ins
mov
sbb
dec
adc
lods
mov
mov
mov
pop
push
or
dec
dec
ins
or
std
jns
inc
loopne
mov
pop
jmp
add
mov
or
and
movs
out
and
and
xor
dec
or
out
(bad)
loop
jmp
push
enter
pushf
pop
pop
mov
mov
dec
mov
pop
add
or
lods
fs
jno
and
ins
rcr
cwde
mov
js
and
pop
dec
mov
dec
rol
into
dec
ficomp
mov
ds
lods
mov
daa
dec
fsub
les
add
cmp
lahf
cdq
push
push
dec
inc
fmul
das
or
mov
(bad)
(bad)
jnp
in
add
add
or
dec
out
sti
mov
mov
les
sahf
arpl
imul
xchg
jmp
cwde
dec
outs
cli
sub
inc
loope
ret
push
dec
(bad)
loope
xchg
and
imul
mov
pop
pop
xchg
cmp
or
jmp
mov
inc
xor
iret
(bad)
and
std
int
xor
data16
aaa
movs
jge
iret
arpl
xchg
clc
fmul
add
or
mov
mov
int3
push
movs
xchg
stc
(bad)
jnp
push
mov
mov
ss
les
inc
pop
xchg
div
into
sahf
xchg
and
push
mov
xchg
cli
sbb
out
xlat
cli
add
mov
cmp
cmp
xlat
or
gs
sbb
enter
les
xchg
or
push
mov
xchg
ret
pusha
int
bound
mov
jno
and
xor
in
stos
out
adc
mov
cwde
pop
mov
mov
loop
pop
out
jp
mov
fimul
xchg
and
mov
call
cmps
ret
dec
cmps
out
pop
mov
aad
sbb
call
jmp
push
lods
pandn
imul
jmp
mov
or
xor
dec
mov
dec
sbb
out
push
mov
mov
push
std
inc
pop
add
fdivr
jmp
jmp
cmps
pop
cmc
mov
shl
(bad)
repz
popa
fldcw
push
inc
mov
lods
ret
and
jae
mov
jns
das
pop
pop
inc
cwde
sub
push
add
add
(bad)
xor
adc
into
pop
sub
test
mov
sti
lods
or
sbb
push
or
xchg
fcmovu
jmp
inc
stos
adc
xor
(bad)
cmp
inc
push
ja
repnz
popf
addr16
xchg
sbb
retf
xchg
dec
pop
nop
inc
push
adc
mov
loopne
cmp
mov
das
and
int
pop
jno
fstp
cmc
sbb
xor
cmp
mov
outs
cmp
inc
fild
xchg
cmps
mov
int
mov
push
and
pop
int
and
jmp
daa
rol
loope
or
ja
pop
enter
push
fld
xchg
int3
aaa
in
pop
sub
jo
mov
cmp
fsubr
mov
int
int3
repz
shl
(bad)
xchg
inc
push
xchg
mov
sar
add
das
and
cmp
es
mov
psllq
aad
push
int
nop
dec
mov
in
sbb
sub
repz
push
sub
dec
mov
adc
out
jg
out
sbb
in
cwde
mov
jmp
cmp
jge
ins
rcl
or
loop
imul
and
shr
pop
(bad)
jo
mov
loop
mov
ret
es
cld
xor
adc
mov
ret
dec
adc
jne
add
aam
inc
jmp
cld
das
loop
xchg
dec
popa
or
xchg
call
lea
clc
into
add
sub
retf
test
mov
jl
push
push
mov
adc
fcmove
cwde
(bad)
bnd
iret
dec
jo
inc
sub
cmp
and
cmps
sub
sbb
cmp
jl
retf
arpl
lahf
movs
mov
psubb
iret
stos
stos
mov
int3
ret
and
xchg
popa
jle
jl
mov
xchg
xchg
inc
mov
cmp
add
mov
push
mov
bound
mov
cmp
mov
jns
or
not
in
cdq
movs
dec
arpl
rcr
pop
mov
icebp
out
mov
cmps
repnz
xlat
(bad)
push
mov
cmc
mov
jmp
pop
adc
xor
fist
in
mov
jcxz
test
and
hlt
sbb
sahf
lahf
mov
lea
pop
sub
xchg
push
cmp
dec
rol
adc
div
outs
sub
xchg
mov
mov
stos
xor
sti
jl
shl
mov
push
or
cmp
ret
stc
scas
cli
sub
fst
mov
jmp
sub
das
pop
(bad)
mov
and
sbb
push
pop
push
repz
retf
mov
mov
sub
or
jnp
xchg
or
sbb
pop
or
xchg
stos
mov
test
icebp
cs
jo
inc
push
leave
movs
out
mov
sbb
mov
cdq
shr
cwde
stc
in
bound
test
arpl
ss
jb
mov
pop
out
je
jo
outs
mov
xchg
icebp
test
push
jp
inc
(bad)
std
cmc
dec
push
pop
sub
mov
pop
lock
repz
sbb
mov
jp
dec
popa
or
sbb
push
std
or
dec
aad
dec
mov
inc
and
aas
xchg
out
aam
pop
jb
std
dec
jae
xchg
mov
and
or
adc
and
or
xchg
cmp
repnz
stc
retf
(bad)
xlat
cmp
jge
out
fldz
mov
xlat
push
fnstsw
cmp
xor
xchg
repz
cmps
mov
lahf
or
movs
inc
ja
add
mov
repz
rol
jnp
cli
sahf
movs
ins
loop
shl
inc
icebp
jp
sbb
mov
out
stos
or
pop
sbb
into
cmps
sahf
cmps
or
cmps
push
out
xlat
addr16
and
imul
daa
adc
jmp
inc
mov
inc
fsub
sbb
dec
(bad)
mov
add
(bad)
cmps
pop
mov
inc
arpl
adc
sub
movs
icebp
xchg
inc
inc
cmp
mov
or
gs
sub
pop
sbb
push
sbb
cmp
inc
ja
(bad)
mov
fucomp
sar
test
scas
push
arpl
and
adc
cdq
in
test
mov
popf
sti
push
mov
int3
xor
xchg
sub
(bad)
cmp
mov
add
xchg
and
popw
neg
push
ds
cmps
fistp
and
mov
cmc
xchg
jecxz
mov
mov
fst
es
inc
push
xchg
fcom
sbb
test
mov
inc
jns
xor
shr
nop
jecxz
sbb
imul
or
inc
dec
dec
(bad)
pop
dec
movs
mov
jge
mov
repnz
dec
mov
mov
mov
ror
pusha
out
mov
jecxz
xor
fisttp
dec
adc
xchg
mov
xchg
stc
mov
xchg
outs
cmps
outs
rol
pusha
add
push
call
inc
movs
imul
sub
jbe
inc
test
xchg
retf
addr16
shr
xchg
mov
lods
lahf
loop
jp
adc
stos
scas
dec
xlat
pop
and
sahf
push
dec
cli
outs
dec
rcl
in
and
outs
ds
push
push
mov
lods
cmp
dec
jb
inc
cdq
mov
lds
or
dec
iret
mov
mov
movs
mov
and
mov
add
pusha
add
adc
xchg
jge
add
dec
adc
ss
jno
push
mov
push
jae
je
(bad)
rol
xchg
test
jbe
lods
and
cmp
and
sub
cmp
add
ins
icebp
cli
daa
lds
aaa
pop
fisubr
sbb
cdq
outs
mov
(bad)
cs
inc
push
dec
mov
or
ret
xor
sub
jmp
pop
nop
dec
popf
sti
mov
xor
and
push
lock
leave
jg
(bad)
fwait
shl
xchg
movs
imul
je
scas
aaa
int
xchg
int3
pop
and
jnp
mov
pop
cmp
cmp
or
daa
test
pop
pop
enter
rol
and
ret
xchg
mov
mov
xor
popa
data16
xor
icebp
push
inc
out
and
inc
cmps
inc
call
lock
and
cli
test
retf
cwde
dec
inc
push
push
jnp
push
jl
hlt
ret
loop
xor
stos
jl
pop
popa
jno
pop
or
or
test
pop
mov
xor
loop
add
sbb
cli
adc
dec
icebp
std
cdq
xchg
lahf
pop
nop
nop
push
mov
push
dec
xchg
push
sbb
dec
push
jle
push
xchg
jns
add
sbb
push
jb
rcr
push
into
mov
jo
push
xchg
pop
shl
push
movs
outs
fild
pop
lock
fcmovu
xor
mov
(bad)
out
and
retf
pop
cmp
jae
sub
out
pop
pop
lock
fnsave
out
inc
mov
pop
add
adc
cmc
out
pop
js
out
mov
ins
mov
in
(bad)
loopne
or
xchg
push
jnp
aam
in
jecxz
loope
lahf
xor
out
adc
adc
fimul
xor
loop
xor
daa
and
lods
inc
xor
add
dec
in
dec
xchg
push
pop
fisttp
xchg
xchg
mov
mov
cmc
adc
dec
ds
ja
repz
pop
repnz
(bad)
and
daa
ds
jmp
and
mov
nop
push
jl
cmp
pop
mov
lahf
bound
test
leave
xor
rcr
js
fadd
popa
adc
popf
iret
xor
mov
pop
adc
rcr
pushf
add
mov
pop
mov
or
out
inc
sub
retw
addr16
cmp
jmp
test
or
cli
add
mov
loop
in
movs
js
dec
mov
or
cmps
dec
pusha
test
and
xor
and
es
stc
pop
xor
add
sub
adc
cmp
pop
in
add
iret
pop
cwde
fild
adc
xor
adc
clc
shl
or
cmc
test
inc
pop
and
jo
aam
push
dec
add
ins
mov
aas
adc
outs
aas
inc
jle
jp
or
call
mov
rol
mov
mov
push
xchg
pop
rcr
xchg
out
loope
and
adc
mov
lods
aas
div
add
(bad)
fbld
outs
push
push
ins
mov
pop
(bad)
xchg
adc
enter
ds
inc
push
hlt
aad
fidiv
ds
jns
cmp
xchg
xchg
or
and
add
(bad)
and
sahf
inc
ror
or
icebp
retf
test
mov
mov
cli
mov
fild
cmp
aam
or
out
or
mov
mov
hlt
inc
pop
sub
lods
add
mov
sbb
mov
push
loopne
int3
pusha
in
inc
fwait
ret
mov
add
cmp
dec
gs
sahf
aaa
ins
in
xchg
xor
dec
and
jb
nop
dec
inc
mov
add
sahf
jns
sbb
cmp
fcomip
jmp
mov
dec
es
sbb
pop
or
stc
cmp
lahf
loopne
and
mov
dec
sub
dec
xor
sub
repnz
push
cmp
ins
cmp
gs
mov
fst
fnsave
hlt
jo
mov
sbb
cmp
and
adc
dec
mov
xchg
sbb
(bad)
xchg
and
retf
inc
dec
lahf
push
ins
push
xchg
mov
push
pop
pop
stos
arpl
mov
add
test
fiadd
sub
fisubr
inc
sbb
fmul
ins
push
push
xchg
pop
mov
xchg
mov
pop
cli
(bad)
and
dec
test
imul
cwde
es
xor
jmp
xor
mov
shl
into
xor
xor
inc
mov
outs
fsubr
pop
loopne
lock
add
xchg
test
sbb
jecxz
mov
mov
scas
lods
call
and
push
xchg
retf
es
inc
shl
scas
mov
or
xchg
hlt
in
pop
pop
add
imul
shl
cld
jo
cwde
adc
lahf
pop
inc
pop
icebp
push
pop
fbld
clc
call
mov
mov
fwait
mov
jl
in
add
sub
mov
rcl
mov
xchg
push
adc
jae
xor
aad
and
idiv
dec
movs
imul
fwait
xchg
inc
sahf
mov
dec
adc
jp
popf
xchg
push
data16
idiv
cli
push
mov
lods
out
push
mov
das
(bad)
out
add
jbe
push
pop
xlat
mul
jnp
or
pop
or
movs
leave
call
pusha
fstp
push
(bad)
mov
or
cmc
fdivr
imul
dec
test
inc
pusha
xor
mov
idiv
out
cs
mov
jmp
mov
dec
mov
imul
out
xor
(bad)
mov
xchg
ror
dec
sbb
dec
shl
mov
test
ins
dec
call
test
test
mov
lahf
icebp
or
shl
(bad)
icebp
out
mov
cli
icebp
into
mov
add
mov
loop
call
pop
dec
jmp
scas
xor
in
aad
out
pusha
sub
mov
pop
mov
ins
mov
lahf
test
aam
mov
call
js
adc
and
hlt
or
push
mov
es
sub
movs
dec
call
nop
cs
pusha
pop
stos
shl
rcl
and
mov
in
rcr
lods
iret
movs
mov
jmp
mov
cld
je
stos
add
ja
mov
and
jp
mov
ja
xchg
mov
fistp
pop
pop
sbb
jo
push
mov
sbb
adc
and
push
dec
dec
stos
clc
test
enter
imul
push
in
or
cli
push
jbe
enter
pop
pop
jne
movs
retf
dec
xor
adc
cmp
mov
push
and
pusha
xor
pop
inc
ret
leave
jle
sbb
out
jge
aaa
mov
neg
mov
mov
jmp
popf
mov
(bad)
xor
push
inc
xchg
jge
mov
add
loopne
enter
sub
dec
jp
aaa
inc
inc
sub
mov
pop
mov
inc
out
sbb
xchg
outs
pop
hlt
(bad)
(bad)
pop
inc
jae
jge
ss
repz
fwait
out
mov
jb
cmp
sub
into
stos
sub
int3
pop
ret
dec
adc
(bad)
or
movs
cmps
sbb
mov
add
mov
jb
mov
enter
cmp
ss
(bad)
xor
mov
xor
call
push
and
push
mov
dec
stos
jne
push
xor
mov
push
stos
scas
ret
or
sbb
loopne
add
sahf
dec
pop
sbb
aaa
call
xchg
scas
arpl
icebp
out
imul
lock
ret
aad
ret
inc
and
push
pusha
scas
dec
cmp
push
cmp
daa
nop
dec
adc
sti
jns
push
add
(bad)
mov
dec
jno
cli
mov
es
div
push
ins
cmp
xor
dec
add
js
push
sub
xlat
arpl
out
sbb
jle
test
mov
jns
daa
popf
mov
add
cmp
movs
cmp
sub
push
outs
aas
cmp
push
(bad)
pop
jmp
bound
sub
push
rcr
pop
dec
sub
das
(bad)
pop
add
out
sti
push
out
add
jo
xchg
sub
mov
and
stos
gs
or
pusha
mov
add
call
pushf
loop
add
fcomp
aam
mov
mov
sbb
mov
mov
mov
xchg
inc
mov
mov
xchg
jo
loope
and
jae
shl
rcl
jmp
cdq
popf
out
aas
mov
mov
rep
or
enter
xchg
test
pusha
sub
fld
and
xchg
mov
(bad)
mov
xchg
test
jmp
jbe
xchg
fistp
jmp
(bad)
repz
fs
inc
xor
cmp
ffree
inc
xchg
pop
mov
cwde
jbe
xchg
jno
or
iret
sbb
shl
inc
jmp
dec
lahf
adc
mov
fild
dec
mov
jb
dec
js
nop
(bad)
sub
hlt
mov
xor
iret
test
jb
loope
adc
or
fs
xchg
sti
dec
cmp
daa
sti
movs
mov
jmp
clc
cwde
retf
mov
cmc
pop
xchg
lock
jne
sbb
int3
dec
call
xchg
sub
test
into
inc
cld
add
ins
stos
cmc
and
cmp
lods
pop
dec
popf
sahf
daa
in
shl
mov
mov
mov
pushf
inc
sub
add
jg
cmp
mov
or
mov
das
pop
retf
pop
jg
inc
cli
inc
stos
fs
ins
adc
cld
(bad)
fisttp
push
mov
ret
gs
xchg
aad
mov
and
xor
pop
pop
jbe
cmps
pop
nop
fucomp
shr
or
out
mov
test
jp
and
or
xchg
push
fwait
push
mov
frstor
and
sub
mov
cmp
fstp
mov
xor
mov
in
mov
retf
mov
cli
cmp
or
pop
push
scas
rcr
(bad)
xchg
cmp
stos
or
popf
xchg
pop
fstp
xor
popf
stc
loop
adc
sub
add
cmp
jmp
inc
mov
fsubr
imul
fisub
or
bound
cmp
jle
adc
add
aam
xlat
mov
imul
shl
stos
jns
push
ja
call
sub
mov
movs
xchg
aad
sti
cld
or
cmp
int3
mov
add
push
aam
mov
or
mov
loop
mov
lods
sbb
(bad)
sti
and
push
leave
cmp
sbb
ds
repnz
aad
loope
imul
xor
adc
adc
or
call
pushf
sbb
add
jno
mov
push
(bad)
xlat
mov
(bad)
or
repz
sar
inc
dec
std
jg
leave
sbb
xor
push
iret
push
xor
int3
cli
(bad)
sti
fidivr
aam
xchg
push
push
cdq
pop
ds
aad
inc
mov
sbb
mov
sub
adc
pusha
ret
pop
xor
(bad)
mov
test
pusha
int
add
fsubr
ror
mov
cdq
ror
and
mov
xchg
mov
in
mov
mov
add
mov
(bad)
not
cmp
xchg
xor
push
int
mov
mov
jecxz
clc
inc
mov
pop
xchg
mov
xor
cmps
inc
fadd
jae
pushf
in
hlt
stos
or
xchg
cli
inc
dec
aam
in
and
ret
xchg
stos
aad
ja
add
in
fisub
jns
xchg
std
xchg
push
and
nop
inc
or
int3
or
jecxz
loope
inc
ins
sub
xchg
stos
hlt
cmc
fild
dec
mov
push
sub
out
jecxz
stc
mov
push
fwait
cmps
iret
scas
sbb
fist
jl
scas
mov
jp
push
inc
ds
mov
(bad)
push
sti
or
pusha
fs
(bad)
mov
add
dec
mov
loopne
stc
and
and
test
xchg
add
add
loop
mov
dec
mov
mov
jle
jns
adc
sub
std
mov
mov
jns
adc
les
xor
pop
pop
push
addr16
mov
enter
mov
cmc
in
adc
mov
bound
cdq
pop
mov
int3
push
push
adc
scas
push
cdq
(bad)
sub
xlat
push
xor
push
mov
popf
cmp
movs
idiv
jae
add
fld
shr
lea
sbb
sub
push
arpl
pop
cwde
(bad)
repz
fistp
or
rcr
mov
sub
jne
shl
adc
aaa
icebp
pop
pop
push
xor
sbb
sub
outs
add
aam
stos
mov
xchg
les
jno
dec
adc
sbb
jl
leave
dec
push
or
bnd
dec
enter
aaa
sbb
mov
jecxz
les
add
fdiv
inc
cmp
jno
pop
ficom
clc
and
adc
in
mov
arpl
sbb
es
jne
pop
adc
cmp
add
lahf
pop
sbb
xor
hlt
jmp
xchg
retf
jle
(bad)
out
gs
pop
lea
sbb
cmovl
daa
daa
inc
xchg
pop
dec
popf
movs
mov
pop
xor
repz
out
ret
mov
inc
ins
sbb
pop
mov
inc
(bad)
cmp
lahf
jecxz
test
out
fistp
popf
push
ins
pushf
push
push
aas
imul
aaa
jbe
adc
ins
cdq
(bad)
sub
cwde
add
sbb
and
ret
xchg
cdq
data16
packuswb
ss
sahf
or
iret
and
or
ss
icebp
xchg
leave
jp
je
cmp
mov
xchg
sti
ss
pushf
push
cmp
mov
jae
mov
or
or
mov
repz
sbb
pushf
mov
xchg
jp
aad
idiv
mov
push
sub
lea
push
mov
pusha
out
cmp
iret
sub
adc
and
xchg
and
cmp
je
popf
mov
dec
fs
adc
mov
(bad)
xchg
push
popf
sbb
scas
out
test
rcl
rcl
push
mov
test
cmps
add
push
cmp
xor
sbb
mov
mov
xor
add
movs
mov
es
fs
adc
leave
sbb
inc
fnstcw
jp
fcomp
jg
pop
jno
retf
inc
out
and
cmc
mov
icebp
pushf
or
arpl
rcr
push
pop
mov
sub
mov
out
arpl
retf
das
out
cmp
push
push
and
add
call
iret
sub
or
es
in
fwait
gs
add
jo
pop
mov
ja
add
fs
pop
(bad)
sbb
push
push
or
sub
shl
inc
mov
add
xchg
push
out
bound
jb
dec
mov
mov
mov
hlt
jmp
and
mov
jmp
sbb
in
imul
outs
addr16
push
xor
mov
mov
fild
(bad)
and
cli
daa
loop
jp
sub
dec
mov
test
int3
in
and
xor
mov
enter
loopne
cmp
xchg
pop
popa
dec
pop
sbb
cli
pop
inc
arpl
adc
je
push
ins
out
cmps
xchg
inc
cmp
jno
cmp
test
loopne
ds
test
clc
test
call
in
inc
pop
pop
or
cmp
mov
gs
cli
(bad)
lods
pop
xchg
pop
inc
xchg
movs
add
test
adc
pop
iret
xor
sub
shl
shr
(bad)
cdq
push
aam
cs
repnz
leave
or
jmp
mov
push
cwde
mov
mov
mov
sbb
pop
add
stc
inc
neg
mov
mov
add
or
cli
retf
rcr
test
jge
ja
fsubr
fdiv
xor
test
mov
or
add
xchg
xor
cmp
pop
lods
jp
mov
xor
xchg
pop
jns
xchg
xor
mov
stc
push
adc
leave
mov
mov
xchg
push
popf
int3
in
adc
stos
pop
xor
scas
push
movs
std
imul
in
lahf
pop
(bad)
div
cmp
addr16
in
jae
jge
in
add
call
mov
adc
rol
mov
popa
cmp
mov
test
mov
pop
lock
data16
test
cmp
mov
aam
push
push
pop
push
xor
push
jp
loopne
addr16
fbld
sti
xor
xchg
jne
cdq
jmp
hlt
xor
jne
cmp
imul
push
call
jae
mov
jns
pop
mov
lds
inc
add
mov
mov
and
ret
cli
jg
and
xchg
in
dec
cmps
pushf
retf
cmps
fild
in
jb
mov
out
jmp
mov
stc
sar
popf
mov
repnz
rol
gs
not
mul
call
dec
xchg
push
jp
jecxz
push
in
jecxz
pop
add
mov
popf
sahf
dec
mov
imul
xor
fldcw
xor
aam
cli
fidivr
sbb
inc
cmp
rcl
sbb
repz
lea
cmc
or
popf
jp
mov
repz
out
push
or
lods
mov
pop
(bad)
call
jne
dec
add
mov
mov
out
jp
adc
fisttp
pop
xor
mov
inc
in
push
jns
ret
out
jp
xchg
pop
mov
jne
in
push
add
(bad)
jo
loopne
jbe
lock
cmps
pop
xor
pop
call
sbb
xchg
mov
inc
xor
test
inc
sub
sti
and
mov
cmp
(bad)
add
pusha
pop
in
icebp
push
add
cmc
push
clc
ficom
add
inc
mov
in
stos
mov
jp
add
inc
push
cwde
das
xchg
and
mov
xor
jmp
outs
cmps
or
inc
adc
xor
xor
lock
add
(bad)
ds
jmp
mov
cmp
ins
mov
in
pop
pop
add
adc
les
scas
jp
push
lock
outs
jecxz
dec
in
icebp
outs
jns
fcom
in
pop
repz
repnz
pop
inc
mov
mov
mov
retf
cmp
inc
mov
xchg
adc
xor
or
loop
pop
xchg
std
jg
xchg
cmp
sub
rcl
inc
ins
mov
lahf
stos
xor
ret
jmp
push
fsubr
loop
dec
or
pop
sub
out
cli
arpl
add
sub
repz
cld
call
jae
test
repz
pop
pop
sahf
dec
dec
mov
test
out
dec
adc
sub
lds
std
sub
mov
cli
repz
mov
out
nop
xchg
fmul
mov
fwait
pop
scas
pusha
loope
dec
cmps
xchg
jg
dec
push
pop
push
rol
mov
mov
push
daa
mov
dec
push
aam
mov
cmc
sub
retf
scas
fsub
imul
jecxz
repz
ins
in
and
pop
inc
in
movs
mov
push
inc
(bad)
bound
xor
loopne
(bad)
and
int
pop
dec
popa
daa
sbb
inc
add
mov
or
fnstsw
mov
or
pop
or
shl
rcl
inc
sub
int
dec
and
pop
jle
out
outs
lahf
rol
call
repz
(bad)
and
stos
sub
lods
add
hlt
not
jmp
out
sub
sub
outs
fidiv
jb
inc
outs
mov
pusha
lahf
adc
retf
xchg
add
fwait
(bad)
mov
stos
outs
push
pop
fiadd
push
sub
popa
inc
sahf
(bad)
out
inc
fbstp
ss
repnz
mov
dec
ret
mov
pop
sar
stc
and
out
inc
aad
adc
cmp
je
xchg
es
leave
xor
sub
or
fcmovne
test
lock
mov
popf
push
and
and
sbb
jecxz
ds
cmps
xchg
test
mul
mov
adc
cmps
pop
loope
cwde
fmul
and
sbb
sub
repz
push
xchg
loope
mov
xlat
clc
int
xchg
shl
rol
mov
push
add
into
enterw
push
sub
xor
call
(bad)
xor
shr
push
inc
sub
and
mov
daa
cld
add
sbb
add
int3
xchg
or
(bad)
push
fild
je
jle
(bad)
sbb
pop
pushf
pusha
inc
pop
push
dec
push
and
cdq
dec
std
xchg
push
pop
cmp
dec
dec
add
mov
test
push
iret
mov
pop
out
mov
fwait
xchg
(bad)
aad
sub
int
fwait
inc
pop
movs
ins
xor
pop
add
push
mov
int
cli
jne
les
test
pop
pop
movs
and
pusha
push
mov
repnz
lahf
pop
lahf
push
add
test
mov
sahf
inc
xchg
jecxz
xchg
adc
pop
in
in
inc
loopne
inc
test
adc
push
stos
fild
mov
mov
int
fdivp
(bad)
add
mov
fsub
out
mov
push
push
add
adc
imul
lds
das
mov
aad
sbb
fbstp
fadd
xor
sbb
inc
mov
jecxz
jmp
icebp
lds
xor
jge
dec
jecxz
mov
jle
in
int
pop
jne
fs
into
mov
mov
and
in
jmp
mov
and
mov
stos
push
xchg
cmp
jg
out
repnz
adc
pop
and
mov
cmps
inc
sbb
cli
ss
int3
cdq
lds
adc
mov
mul
sub
test
jne
or
test
icebp
adc
inc
inc
fst
pop
test
xlat
movs
inc
sbb
or
sar
xchg
and
gs
xor
sbb
inc
add
loop
adc
loop
aam
retf
imul
pop
das
sub
mov
xor
outs
aad
and
test
retf
test
icebp
in
imul
pushf
int3
je
loopne
stos
mov
ins
mov
(bad)
mov
js
int3
loopne
out
cmp
mov
sbb
adc
mov
jp
adc
xor
xor
adc
jmp
movs
add
jb
inc
jg
jb
pop
or
daa
push
add
jecxz
add
inc
mov
repnz
mov
and
jg
bound
and
pushf
int
aaa
cmps
cdq
pop
dec
pop
call
shl
jp
and
in
mov
les
mov
jmp
sbb
jae
out
or
pop
cmp
cmps
outs
xor
mov
adc
xchg
xor
mov
mov
mov
sub
jae
or
mov
shr
cs
lahf
xor
mov
mov
sbb
gs
fwait
jl
sub
cmps
sub
and
cmc
fisub
pop
jno
jno
rcl
imul
sbb
jns
add
ret
mov
lea
cmps
lods
iret
lods
movs
ror
out
jge
jl
xor
pinsrw
bound
push
dec
mov
inc
cmps
les
sar
pusha
and
shl
add
mov
push
jb
dec
jo
pop
shr
(bad)
je
lods
rcl
mov
cmc
addr16
aas
js
imul
sub
mov
repz
stos
add
js
movs
jb
ficomp
adc
xor
into
jbe
aam
pop
repz
out
jmp
xor
mov
(bad)
lahf
test
dec
cdq
add
ins
lahf
pusha
lahf
shl
jbe
cmp
sbb
mov
(bad)
adc
dec
inc
dec
mov
fmulp
inc
jne
sub
int3
stos
push
jmp
pop
push
pop
(bad)
push
or
jne
mov
xor
cwde
dec
xchg
sbb
adc
lahf
test
ret
(bad)
dec
arpl
pusha
int
hlt
inc
loop
(bad)
and
xor
mov
sub
push
(bad)
jne
or
jns
ins
xor
mov
pop
stos
cld
xor
neg
adc
cmp
sub
sub
pop
pop
test
sbb
sub
sub
sub
or
xor
lods
les
mov
inc
lock
stos
dec
or
push
stos
mov
sbb
xor
fs
mov
je
push
mov
jne
ret
fwait
sbb
adc
repz
cli
bound
outs
jmp
jg
xor
hlt
mov
mov
fstp
cmps
shr
cmp
push
loop
ja
mov
aam
and
fnstcw
pop
lahf
mov
retf
and
jp
std
adc
xchg
enter
sub
jb
jnp
push
adc
je
xor
leave
div
fmulp
clc
outs
fild
test
xor
popa
dec
sbb
call
ins
inc
fcmovnb
pop
inc
pushf
ret
fdivr
sbb
jecxz
fiadd
cmp
retf
lock
fisub
xchg
pop
xor
sbb
pop
ret
jo
lods
push
(bad)
clc
xor
jne
(bad)
fstp
mov
mov
and
cli
out
cmps
fwait
stos
(bad)
mov
mov
retf
inc
into
cmp
std
push
hlt
nop
fcom
inc
outs
adc
loope
out
xchg
cmps
(bad)
out
jecxz
retf
pop
aaa
shl
int3
in
mov
fs
test
mov
adc
mov
in
or
sbb
sbb
bound
sbb
adc
xchg
pop
sbb
dec
(bad)
jmp
cs
mov
les
in
xchg
sar
jnp
pop
jmp
stc
push
(bad)
and
movs
mov
or
ins
add
cmp
mov
mov
pop
int3
push
(bad)
mov
mov
movs
fimul
and
fadd
sar
mov
adc
hlt
sti
sub
fmul
arpl
mov
jp
xchg
out
adc
neg
xchg
arpl
mov
add
int
(bad)
adc
cmp
out
push
lods
es
or
push
push
ja
lods
push
cmp
mov
test
jno
repz
loope
jmp
ret
test
popf
retf
aam
(bad)
and
bound
inc
dec
pop
mov
push
inc
rcl
(bad)
or
pop
iret
test
adc
fsubr
pop
sti
pop
(bad)
jmp
push
js
jne
sbb
sub
mov
pop
push
int3
div
and
and
cmps
test
out
mov
push
popa
and
adc
add
test
repz
addr16
ja
imul
repz
les
icebp
xchg
inc
mov
shl
add
or
push
jbe
or
mov
popf
in
ds
test
aad
pop
out
rol
rol
data16
fisubr
stos
xlat
out
std
cmp
movs
arpl
adc
xor
xchg
cld
mov
in
stc
push
aam
repz
or
int3
or
or
sahf
(bad)
jb
push
xor
(bad)
xchg
push
cmp
leave
mov
mov
push
xchg
xchg
mov
data16
push
mov
fs
push
ror
sub
pop
jp
push
hlt
dec
jo
mov
not
stos
mov
xchg
in
rol
aaa
xchg
push
loopne
lods
xchg
fisub
dec
call
sbb
cli
es
rcl
movs
outs
dec
sub
imul
or
ror
inc
shl
and
push
out
jle
xchg
mov
das
je
mov
popf
dec
mov
idiv
and
popf
rol
shr
(bad)
xchg
push
and
sbb
lods
sbb
or
shl
mov
popf
out
ret
fwait
ins
mov
dec
leave
or
(bad)
fs
or
cld
sub
and
push
(bad)
mov
or
pop
sbb
test
sub
ret
xor
call
sbb
inc
xchg
jno
ins
xor
add
es
jg
cvtps2pd
fisub
bound
dec
add
out
bound
sbb
sub
test
jno
aam
imul
inc
fld
fldcw
nop
pop
inc
sti
mov
mov
add
lods
daa
jle
ret
push
dec
cmp
mov
mov
inc
xor
lods
mov
cmp
(bad)
fwait
call
ins
call
std
jmp
and
xor
xor
movs
and
fdiv
fild
push
sbb
add
or
enter
mov
cmp
jge
and
jmp
jecxz
push
aas
pushf
adc
dec
xor
pop
jae
pop
bound
stos
cmps
and
jno
sbb
push
test
add
adc
ffree
(bad)
clc
push
sub
jo
xlat
dec
gs
mov
jbe
shl
in
inc
push
mov
adc
(bad)
stc
push
ins
(bad)
xchg
push
cmp
xchg
mov
icebp
lods
test
xor
sub
inc
outs
adc
mov
pop
fidiv
into
push
repz
cmp
and
(bad)
ins
sbb
jmp
(bad)
pop
jns
mov
push
push
jae
fcmovnu
cmp
sub
jmp
pop
sbb
jb
lea
pop
mov
rcr
mov
xlat
rol
mov
mov
(bad)
hlt
test
mov
jle
cmp
cld
fwait
fs
jg
xchg
dec
jge
xchg
push
fsub
hlt
xchg
adc
mov
push
repz
mov
ror
es
jl
shl
fs
cmp
ja
lds
dec
mov
mov
mov
mov
outs
xchg
(bad)
pop
add
mov
mov
fld
es
jne
in
xchg
aam
pop
ss
inc
clc
mov
movs
call
pushf
xlat
mov
dec
and
xlat
mov
pusha
pop
out
jmp
push
xor
shl
out
nop
pop
mov
pushf
mov
loop
jge
or
push
mov
add
sub
add
jle
cmp
add
rcr
outs
out
and
ja
icebp
jle
dec
push
test
push
enter
in
lea
loop
sar
or
xor
xchg
jns
call
test
nop
push
ror
call
inc
jne
inc
jge
gs
frstor
cmps
jmp
or
pop
pop
xor
jecxz
movs
test
not
mov
fdivr
dec
cli
adc
sbb
dec
shl
and
aas
cs
mov
xor
test
and
add
pushf
sub
adc
gs
push
and
adc
mul
push
pop
mov
(bad)
movs
dec
in
call
push
and
rcl
ss
rcr
jge
in
std
stos
xlat
mov
pushf
test
push
sub
xlat
aad
adc
test
mov
xlat
cmp
xor
daa
rcr
jmp
mov
push
mov
(bad)
scas
dec
mov
mov
in
lods
shl
inc
out
cmp
gs
jle
dec
dec
push
stc
lock
shr
pop
shl
adc
inc
dec
cmps
pop
lock
dec
mov
sbb
push
xor
fadd
scas
shl
ret
jo
shl
and
cwde
test
mov
call
sbb
pop
pop
mov
xchg
cmps
out
add
push
and
jb
cmps
mov
(bad)
loop
xchg
pop
sub
xchg
hlt
sub
pop
punpckldq
sub
xor
fsubr
scas
sub
or
out
into
test
rol
out
cmc
loope
lds
mov
inc
and
loope
xchg
adc
std
dec
sar
leave
jne
pop
jmp
push
push
mov
cmp
jmp
dec
cmps
xor
fbstp
ins
dec
cld
stos
cdq
pop
in
pop
fadd
fcmovnu
rcl
xchg
sbb
hlt
xlat
xor
jmp
inc
mov
add
cmp
push
mov
test
mov
xor
dec
ss
mov
std
dec
sub
inc
loopne
sbb
jge
or
or
fbstp
div
clc
ins
mov
adc
lds
fwait
push
pop
clts
mov
mov
retf
repz
cdq
add
scas
push
jge
xor
and
push
jo
pop
jecxz
and
adc
mov
cmp
out
lds
mov
mov
mov
adc
leave
stc
push
mov
jns
push
call
out
pop
pop
ins
push
inc
push
stos
sbb
cmps
or
call
add
cmp
not
mov
cmps
cmc
jmp
mov
add
repz
iret
mov
mov
test
lods
xchg
nop
stos
out
inc
shr
int3
pop
xor
push
push
(bad)
mov
and
mov
ins
inc
sub
cdq
add
and
daa
add
js
xchg
pop
cmp
iret
and
or
test
adc
outs
ins
mov
std
(bad)
stc
or
iret
test
add
mov
call
or
wbinvd
xchg
dec
jnp
or
sub
fs
lahf
push
sbb
mov
push
hlt
stc
adc
sbb
scas
adc
ja
inc
inc
adc
mov
(bad)
jl
test
cld
xchg
popa
xchg
mov
scas
push
enter
in
xor
and
popf
test
jl
lahf
inc
mov
cmp
lea
retf
xchg
test
xor
ins
jno
pop
adc
cmc
sbb
add
ja
out
(bad)
call
aam
sbb
out
mov
mov
jecxz
jge
lock
(bad)
xor
or
jno
push
(bad)
nop
popf
fwait
mov
out
(bad)
call
inc
and
call
ja
sub
test
in
mov
popa
sub
fwait
data16
test
fcom
fwait
inc
push
shl
add
in
enter
adc
cld
and
push
mov
push
xor
cdq
pop
sbb
dec
mov
out
mov
sub
dec
test
or
in
push
es
push
push
add
out
inc
out
aam
mov
push
xchg
inc
loopne
xchg
pop
out
repz
test
push
xchg
sti
repz
jmp
or
(bad)
imul
inc
push
and
cmps
in
ret
(bad)
jae
sub
(bad)
mov
pop
daa
and
sub
fild
dec
fwait
sub
and
imul
aas
out
fnstenv
jno
cld
jl
cmp
(bad)
stos
lock
fistp
inc
das
pop
pop
mov
js
mov
jns
jecxz
(bad)
sub
mov
jno
jo
or
mov
cld
pop
js
mov
aas
out
out
add
xchg
out
movs
and
mov
aaa
out
inc
mov
in
das
adc
xchg
mov
sbb
sahf
clc
adc
mov
pop
in
je
ror
mov
dec
inc
xor
inc
xor
in
and
dec
xchg
adc
add
inc
jp
or
outs
int
es
leave
scas
pop
cmp
xchg
cmc
daa
retf
mov
mov
inc
test
dec
jno
pusha
and
xchg
push
jecxz
rcl
and
mov
and
les
iret
push
scas
mov
xor
mov
or
mov
clc
pop
test
push
inc
std
js
sbb
clc
in
xor
out
inc
jl
xor
cmp
outs
jne
sub
mov
aam
push
and
ss
mov
pop
xchg
xchg
sbb
test
div
and
or
fnstenv
js
add
xor
mov
stc
int3
push
call
and
inc
dec
imul
cmp
xchg
pusha
mov
scas
sbb
nop
and
xor
(bad)
push
sti
inc
cmc
aad
xchg
std
movs
and
add
push
(bad)
nop
jno
mov
mov
jmp
cmc
mov
repnz
ins
std
dec
mov
inc
daa
scas
jbe
jmp
xchg
lock
cmp
jp
out
pop
dec
nop
pop
aaa
idiv
push
leave
gs
cli
or
xchg
pop
push
cmp
movs
inc
sbb
add
pop
push
cdq
lock
pop
mov
mov
nop
jns
aaa
mov
cmp
rol
fidiv
clc
pop
adc
retf
sub
xchg
pushf
dec
cmp
in
jmp
idiv
or
movs
adc
jmp
ret
xchg
les
push
cmc
push
retf
pop
inc
mov
cmp
push
mov
cmp
dec
cdq
cmc
pop
dec
std
pop
outs
xlat
xchg
sbb
movs
les
loopne
aas
iret
clc
out
out
jg
shr
jge
shr
and
push
into
or
daa
jae
into
mov
loope
mov
or
push
shr
lea
sub
sub
cmp
stos
mov
inc
repz
dec
push
test
pop
xor
vpmacssdqh
iret
fs
sub
and
repz
mov
sbb
stc
into
ja
pushf
in
adc
call
fsubr
sub
outs
sbb
mov
and
enter
sbb
mov
xor
into
push
mov
mov
popa
lds
gs
push
pop
or
scas
out
dec
ds
mov
leave
inc
sbb
xchg
xor
mov
mov
mov
mov
jecxz
mov
call
scas
popf
pop
icebp
rol
mov
add
sbb
fisttp
mov
push
lds
pop
dec
int
sub
and
cmp
cs
mov
enter
inc
and
fadd
idiv
mov
or
sbb
repnz
xchg
inc
mov
mov
xchg
cmp
push
adc
loopne
dec
mov
adc
inc
mov
std
inc
test
sbb
sbb
mov
(bad)
cld
icebp
pop
or
and
ds
mov
jle
jb
or
cmc
call
shr
sar
push
push
mov
mov
call
loop
pusha
mov
mov
lods
jecxz
jns
in
daa
inc
mov
dec
dec
xchg
mov
xor
cmc
and
in
outs
push
hlt
push
and
add
bnd
ds
ins
imul
xor
and
sbb
scas
inc
(bad)
inc
out
nop
add
in
scas
inc
data16
and
sbb
repz
popf
stos
mov
xchg
and
lds
lea
pushf
inc
out
ss
mov
push
js
loop
clc
(bad)
fnstenv
xor
enter
lods
fst
lods
sub
xor
dec
cmps
mov
mov
out
stos
(bad)
sbb
adc
sahf
pop
fwait
push
aam
and
cli
pop
push
xor
dec
outs
sub
stc
push
ror
xor
inc
ret
mov
shr
mov
icebp
call
jmp
stos
lods
lods
pop
repz
div
pop
and
push
mov
cdq
arpl
lods
and
sub
cmp
scas
pop
(bad)
add
outs
cmp
add
pop
push
es
fcom
rcr
stos
cmp
out
add
or
icebp
mov
fsubp
mov
push
imul
push
cmps
push
test
js
push
shr
jecxz
xor
dec
or
xor
mov
pmaxsw
or
jle
popf
push
sub
push
dec
retf
xchg
das
pushf
ja
add
cli
mov
aaa
in
xchg
lods
mov
add
jae
rcl
ja
jmp
xor
dec
ds
cmps
cmps
in
inc
pop
ss
mov
out
and
and
outs
mov
jae
clc
nop
mov
test
and
xor
nop
inc
aam
sub
push
xchg
ficom
mov
je
outs
push
adc
cmc
popa
sbb
outs
mov
in
push
dec
inc
lods
jle
and
pushf
or
mov
clc
pop
outs
xchg
xor
jl
data16
jmp
xor
out
int3
inc
push
rol
in
adc
sub
xor
lods
sub
cmp
imul
(bad)
mov
ins
pushf
push
xchg
cs
xchg
mov
inc
das
leave
out
sub
cmp
jmp
mov
jnp
imul
jnp
push
mov
or
test
pop
sub
in
rcr
and
or
int3
imul
and
sar
stos
push
jmp
mov
jmp
out
shl
sub
(bad)
xchg
ins
xchg
pusha
(bad)
push
dec
jo
ja
(bad)
retf
pop
ins
dec
loope
je
cdq
jno
in
or
leave
pop
mov
or
mov
aad
aam
jae
xchg
xchg
sbb
les
cmps
adc
jg
hlt
aad
jno
ror
dec
lock
mov
dec
xor
xlat
call
jge
or
icebp
mov
lods
sbb
stos
jo
jno
lods
add
xchg
jecxz
clc
rcl
out
fs
lock
loopne
sub
ja
outs
out
jmp
sbb
mov
add
pop
xchg
in
inc
push
in
inc
stos
dec
jns
mov
stos
outs
inc
inc
(bad)
nop
jnp
icebp
loop
xor
xchg
dec
repz
clc
cmps
pop
(bad)
pop
dec
movs
mov
xchg
sub
hlt
aaa
jg
lock
ss
(bad)
jbe
xor
sbb
sub
or
ss
lea
cwde
call
xor
popa
mov
out
es
xchg
(bad)
pusha
ins
jecxz
inc
(bad)
and
mov
mov
xchg
mov
fiadd
outs
hlt
dec
mov
push
test
jns
dec
add
inc
cmp
cmp
cmp
jl
pop
jmp
shl
enter
nop
xchg
mov
fld
mov
cmp
(bad)
in
in
mov
jae
loop
pop
rep
mov
fstp
and
loope
and
push
or
xor
out
mov
add
rol
into
pop
adc
in
add
and
sbb
mov
inc
in
dec
test
call
outs
pop
and
leave
les
cmp
daa
in
jg
es
cmp
push
fld
leave
leave
mov
xor
daa
inc
dec
sub
jo
in
xor
push
jb
xor
inc
jg
retf
pop
xor
call
(bad)
in
movs
xor
(bad)
retf
ret
xchg
pop
mov
or
mov
cmps
iret
xchg
cwde
(bad)
imul
jle
or
leave
xchg
pop
jne
sbb
xchg
dec
enter
gs
movs
pop
mov
mov
call
add
and
(bad)
scas
shr
cmp
fcomi
and
pop
scas
cmp
xchg
dec
mov
xlat
sub
sub
cmp
(bad)
(bad)
sub
sar
xlat
and
cmp
fst
xor
mov
mov
mov
ret
xor
int3
icebp
sti
mov
mov
mov
fwait
or
(bad)
movs
push
inc
je
jne
sub
mov
dec
mov
add
mov
fwait
sbb
and
stos
je
sbb
aas
(bad)
out
(bad)
add
aam
lods
popfw
idiv
call
aam
pop
mov
inc
rcr
call
xchg
mov
jmp
in
sub
std
icebp
neg
(bad)
gs
sbb
mov
sbb
aas
mov
clc
mov
pushf
cmovle
rol
mov
jmp
dec
dec
sbb
mov
sbb
add
jecxz
ret
loope
pop
xchg
add
stc
cmp
push
xor
add
mov
or
dec
mov
xchg
sti
jle
lock
push
push
adc
mov
add
xchg
xlat
lds
addr16
dec
fild
stos
outs
dec
gs
adc
pop
cmp
xchg
addr16
mov
cmps
lds
repnz
dec
shl
push
dec
jecxz
mov
gs
mov
inc
cli
into
sbb
adc
cmp
inc
lock
imul
mov
ror
and
clc
(bad)
mov
outs
sub
bound
cmp
sbb
repz
xor
loopne
test
mov
imul
mov
xchg
mov
jmp
lock
pop
mov
cmp
mov
neg
popa
mov
push
pop
fisub
clc
cmp
push
into
or
cmp
dec
shl
mov
and
jnp
xchg
imul
push
dec
sbb
pusha
jmp
cmp
sti
adc
xor
mov
jb
push
mov
mov
cld
fsubrp
arpl
xchg
xor
aam
mov
pop
xor
dec
xchg
adc
inc
add
ficomp
frstor
mov
std
sti
or
jne
and
out
and
inc
and
cmc
lock
ret
xor
push
ret
dec
xchg
jmp
mov
xchg
je
sub
ffree
sbb
sbb
fnstsw
lahf
push
mov
sub
cmp
add
pusha
rcr
mov
mov
dec
(bad)
pop
jmp
into
popf
xchg
sar
stc
jbe
aam
iret
outs
sub
cmps
outs
cmp
fisttp
mov
cmp
je
(bad)
out
outs
aad
add
and
xor
mov
adc
cmp
mov
ret
(bad)
xor
cmp
out
jmp
loopne
xchg
sti
push
jno
retf
lods
jg
sbb
jmp
aaa
mov
mov
sub
stos
ds
mov
mov
es
mov
imul
push
and
mov
pop
push
pusha
movs
shr
ja
cmp
into
clc
add
push
cmp
mov
sbb
rol
ret
les
add
inc
int
xor
mov
cld
pop
or
lods
xor
ja
sbb
adc
popf
jo
out
or
adc
or
push
hlt
int3
imul
(bad)
in
add
ja
sub
xor
push
sar
aam
retf
cmps
sbb
fldenv
mov
aad
into
nop
lahf
and
lea
mov
mov
sub
or
or
push
ins
cmp
arpl
loop
inc
aaa
dec
push
popf
outs
hlt
push
mov
dec
dec
cmps
push
(bad)
cs
sub
or
mov
out
lods
clc
adc
sbb
and
fld
jl
xor
mov
mov
shl
xlat
or
or
mov
dec
sub
dec
ja
mov
test
jb
xor
inc
xchg
imul
lahf
dec
fmul
lahf
aaa
jp
dec
into
inc
sub
cmps
fnstenv
push
(bad)
mov
xchg
ins
sbb
jbe
push
gs
mov
pop
or
fnsave
lock
pop
sub
icebp
dec
mov
dec
jmp
push
xchg
nop
mov
jl
xchg
sub
sbb
mov
push
mov
and
or
add
push
popa
inc
fwait
xchg
js
imul
or
sub
movs
pop
and
in
and
fmul
fwait
int3
cmp
lds
sub
jl
iret
pop
aas
in
mov
xchg
aas
add
push
sti
or
ja
addr16
aaa
pop
push
mov
aam
adc
sahf
lahf
push
(bad)
jge
mov
repz
fsub
cmc
cmp
test
loopne
mov
(bad)
mov
mov
out
popa
cli
cmp
cmps
out
es
lahf
pop
and
xor
sbb
inc
fisub
inc
int
jge
and
sti
(bad)
not
arpl
xchg
mov
jg
mov
mov
mov
popa
xor
ss
sti
xchg
xor
xor
lods
pop
imul
psraw
xchg
and
retf
hlt
pop
popa
dec
jecxz
jl
ret
adc
jo
pusha
or
push
scas
movs
mov
push
(bad)
add
pop
sub
jp
ss
stc
loopne
jnp
mov
cmc
adc
shr
repnz
mov
pop
movs
cld
sub
xor
leave
mov
into
nop
shl
inc
div
lds
loopne
push
xlat
mov
test
loop
mov
cmps
xchg
ins
mov
sbb
pop
sub
cli
pusha
(bad)
loopne
or
pop
push
inc
fwait
repz
mov
adc
aad
inc
or
mov
pop
cwde
loope
es
enter
jo
pop
in
push
sub
(bad)
push
gs
pop
cmp
cs
sbb
cmps
mov
add
cmp
(bad)
seta
(bad)
xchg
clc
dec
pop
fs
fs
(bad)
sub
dec
mov
aas
lock
icebp
loope
lods
mov
dec
ret
fld
mov
and
fsubr
sahf
iret
or
xlat
xchg
or
shl
pop
or
add
inc
jne
jl
stc
lea
retf
inc
fisttp
mov
xchg
shl
push
shl
mov
test
mov
jae
lea
mov
cmc
sti
int3
mov
aam
test
xchg
push
jge
cdq
aad
pop
sub
jo
fisttp
pop
jle
mov
cmp
add
fs
arpl
(bad)
(bad)
fs
aaa
sbb
xlat
pop
test
jg
test
shr
test
xlat
or
sbb
scas
inc
ss
push
cmp
jmp
(bad)
int3
stc
fs
std
adc
push
inc
mov
or
add
fsubr
cmp
mov
rol
mov
add
mov
stos
out
inc
ret
cmp
or
es
push
sub
out
test
xor
js
cmp
mov
aam
data16
es
mov
jmp
test
fistp
mov
and
sbb
and
int3
js
xor
movs
test
pop
sbb
sbb
es
mov
or
fwait
push
push
arpl
out
add
jns
(bad)
xor
push
jecxz
fcom
mov
idiv
popa
or
push
or
push
daa
inc
xchg
(bad)
mov
adc
xchg
hlt
outs
push
loope
push
adc
scas
mov
imul
hlt
test
fwait
cmp
mov
mov
ss
jmp
dec
pop
push
adc
pushf
sar
retf
jns
into
sub
add
jecxz
pop
stos
adc
test
fwait
dec
pop
add
sahf
daa
test
mov
daa
lea
imul
sub
out
ins
or
loope
fisttp
out
fisubr
cmp
pop
and
pop
mov
and
push
xor
add
xchg
push
jbe
cmp
xchg
aaa
cmp
ret
push
or
pop
fst
dec
aaa
(bad)
mov
push
(bad)
mov
add
aaa
mov
cmc
inc
or
or
pop
jecxz
add
movs
or
movs
inc
inc
sbb
mov
aaa
in
outs
mov
fist
sahf
popf
mov
or
and
inc
arpl
imul
mov
xchg
aas
frstor
cmc
arpl
pop
retf
in
pop
neg
repnz
ins
lds
das
cmps
scas
in
and
pushf
add
rcl
sahf
jle
outs
mov
mov
push
fadd
cmp
rol
clc
mov
dec
inc
sub
mov
icebp
mov
push
pop
sahf
mov
sbb
loop
cmp
std
repz
mov
imul
push
fs
cwde
bound
inc
push
lahf
dec
pop
and
ret
sub
leave
adc
add
daa
ins
ins
sbb
imul
inc
and
push
das
jge
and
sahf
int
inc
out
inc
jl
dec
retf
cmp
dec
fnstsw
xor
add
retf
sbb
hlt
loopne
in
or
dec
ds
and
inc
jge
call
ret
add
loope
mov
or
inc
jbe
pop
(bad)
jmp
repnz
jne
push
inc
jp
loopne
sbb
sub
pop
aas
int
(bad)
or
push
cmps
inc
lods
pop
xor
and
sbb
adc
sub
adc
push
(bad)
aam
add
aaa
pop
mov
cmp
pop
lods
cs
in
pop
pop
fadd
mov
test
xchg
call
cmp
pop
cdq
xor
fmul
rol
mov
xor
loop
mov
xchg
sbb
fnstsw
dec
xor
pop
sbb
and
inc
in
mov
adc
mov
sub
cs
cmp
sbb
jno
add
ret
shl
adc
inc
fs
push
sar
rol
mov
adc
pop
js
pop
fst
mov
scas
scas
lods
test
lods
in
popf
js
add
loop
data16
lea
test
fild
pop
shr
outs
neg
fst
shl
addr16
pop
(bad)
dec
and
pop
call
xchg
mov
test
sub
sahf
push
std
leavew
cmps
test
aad
into
dec
pop
dec
and
test
pushf
sti
stos
or
jle
adc
add
scas
mov
xor
sar
inc
fldenv
cs
inc
mov
repnz
(bad)
push
sbb
ror
pop
ret
(bad)
clc
mov
jg
jns
out
mov
clc
int
mov
sub
add
or
xlat
imul
ss
mov
cmp
cmp
add
in
mov
lods
ins
clc
or
movs
mov
(bad)
ins
cmp
loopne
mov
push
mov
and
nop
adc
mov
mov
bound
int3
push
icebp
imul
add
pop
sub
stos
jno
mov
jge
neg
push
adc
retf
dec
adc
jo
cmp
jg
rol
inc
xchg
rol
aam
imul
mov
mov
cdq
ins
xor
mov
cmp
nop
sar
and
push
ja
inc
push
ret
data16
aad
shl
inc
dec
dec
jge
daa
es
lods
mov
clc
mov
inc
stos
fnstsw
repnz
call
sahf
rcr
inc
sbb
jge
push
mov
sahf
xor
mov
outs
xor
or
rcl
push
and
jbe
inc
cwde
addr16
loopne
call
je
fild
stos
and
lods
add
jge
(bad)
pop
sub
push
jo
mov
arpl
mov
ret
xchg
mul
cmps
push
dec
js
shl
push
lds
das
call
pop
xchg
call
add
inc
(bad)
or
sub
(bad)
(bad)
pop
shr
fs
dec
ja
lock
cld
call
test
cmps
cdq
cmp
xor
icebp
ret
xchg
clts
fld
out
cmp
jmp
fild
mul
sahf
jmp
out
(bad)
mov
mov
sub
jnp
xlat
test
pop
or
mov
xchg
shr
xor
inc
js
call
pop
outs
push
mov
pop
test
in
adc
push
vpmuludq
push
loop
je
sub
inc
stos
std
test
enter
pop
(bad)
mov
xor
push
sub
xlat
inc
pop
push
pop
mov
sbb
mov
cli
push
cmp
dec
cmp
cli
fsubr
iret
mul
(bad)
aad
add
outs
shl
into
pop
push
sbb
pop
js
test
test
adc
adc
popa
adc
shr
(bad)
in
cmp
in
xor
xor
xchg
pop
sbb
das
add
dec
push
inc
mov
daa
mov
les
push
mov
rsm
retf
and
retf
das
sub
sahf
mov
in
jl
dec
int3
outs
int3
ret
cmp
xchg
je
inc
pop
pusha
push
shl
or
std
push
popf
loopne
nop
xor
dec
movs
mov
add
stos
call
loopne
adc
es
push
mov
cmps
call
or
fnstenv
out
mov
fiadd
xchg
mov
mov
outs
xor
mov
shl
sub
cld
sti
sub
fcomp
push
cmp
ins
out
mov
or
nop
push
cli
cmps
imul
fadd
inc
in
and
xor
cmp
neg
xor
inc
inc
je
pop
int3
retf
xchg
pop
inc
fucomi
push
fcomp
xor
mov
dec
pop
(bad)
jl
fwait
sub
xchg
or
das
mov
xor
add
push
pop
jb
rcr
mov
jecxz
inc
add
dec
sbb
lea
dec
lea
aas
call
dec
mov
xor
test
sub
xor
jle
je
xchg
ja
in
pop
test
push
inc
or
mov
and
in
cmps
jl
cmc
inc
dec
jp
aam
mov
jne
push
cld
fsubr
jle
inc
jae
inc
push
idiv
mul
and
inc
fmul
popf
mov
pushf
hlt
shr
mov
rcl
inc
loopne
nop
sbb
cld
test
pop
and
jmp
inc
jnp
mov
enter
imul
pop
push
test
loope
pop
fiadd
mov
dec
push
pushf
jbe
jl
mov
dec
pusha
xor
add
bound
jo
mov
xchg
adc
ret
jl
gs
mov
adc
sbb
repz
inc
imul
mov
bound
xchg
xchg
repnz
pushf
ja
loop
xchg
int3
or
or
inc
mov
jg
loope
mov
iret
popf
and
push
icebp
es
test
xor
add
aad
inc
xor
imul
or
mov
repz
mov
xchg
jl
movs
mov
daa
mov
sub
es
inc
or
mov
movs
mov
xchg
mov
mov
sbb
or
repnz
(bad)
xor
push
jp
sub
and
sbb
and
mov
mov
aaa
mov
or
and
cld
shr
push
pop
mov
mov
imul
pop
jge
in
aad
in
inc
int
dec
jg
dec
fs
inc
ret
daa
mov
aas
sbb
int
mov
push
not
nop
mov
fld
enter
or
fs
inc
push
fadd
xor
movs
enter
jnp
aam
fsubr
pop
sbb
pop
mov
imul
mov
mov
sar
pop
inc
mov
sbb
sub
es
jns
mov
push
imul
mov
jecxz
xchg
mov
sar
stc
jnp
mov
xchg
mov
imul
or
in
ja
xchg
push
aaa
mov
add
icebp
in
add
mov
pop
shr
push
fucomip
mov
call
xchg
mov
and
or
mov
mov
in
sub
mov
cmp
adc
enter
add
mov
cwde
mov
or
xchg
mov
mov
dec
mov
dec
cmp
(bad)
fs
or
dec
xor
xor
hlt
push
leave
data16
mov
mov
push
fiadd
mov
pop
pop
sbb
xlat
js
sbb
cmc
mov
les
jg
sbb
and
xor
ss
retf
cmp
jo
pop
(bad)
out
sti
mov
das
mov
clc
fnstcw
sbb
les
mov
jmp
xchg
lahf
gs
into
push
jmp
icebp
fisub
mov
jae
addr16
outs
shr
jnp
mov
mov
fidiv
cli
mov
xor
jnp
xchg
js
inc
sbb
adc
lahf
push
push
into
pop
cmc
dec
jbe
(bad)
sbb
mov
mov
jmp
add
jecxz
popa
pop
(bad)
hlt
or
pop
inc
aad
cmps
add
adc
mov
adc
les
add
dec
(bad)
add
push
xor
mov
jmp
xchg
adc
data16
stos
addr16
lea
cmp
fimul
pop
mov
pop
stos
add
pop
mov
add
add
mov
dec
xchg
stc
in
dec
es
addr16
adc
push
push
enter
aaa
in
jecxz
(bad)
mov
imul
cmps
inc
loop
push
add
lods
push
in
xchg
test
test
mov
out
pushf
pop
inc
pop
jbe
aam
out
popa
lods
cmp
(bad)
push
sub
movs
sbb
mov
mov
int
jae
adc
jb
repnz
mov
in
ja
in
push
lock
mov
jge
test
sub
push
out
push
shr
iret
mov
push
(bad)
in
sub
fwait
sub
pop
stos
std
shr
scas
and
cmp
dec
push
(bad)
mov
push
int
scas
push
and
test
hlt
xor
inc
pop
out
(bad)
in
mov
mov
jae
mov
jne
fs
pop
mov
shrd
xchg
cmc
out
adc
sbb
sub
ret
push
sub
lahf
push
cld
push
popa
rcr
mov
dec
popa
inc
cmp
xchg
cmp
jmp
jmp
lods
jmp
es
mov
jge
xchg
mov
xchg
pop
test
adc
nop
or
mov
xor
fdivr
fcmovnbe
cli
jle
pop
std
sti
ins
sti
fisttp
shr
jo
inc
xchg
mov
retf
bound
(bad)
and
shufps
adc
jns
add
inc
retf
mov
movs
push
out
inc
inc
and
xchg
movs
or
int3
mov
(bad)
push
lar
mov
stc
pop
or
sub
out
imul
mov
mov
ja
pop
mov
mov
movs
clc
(bad)
loop
iret
clc
sbb
loope
fdiv
mov
mov
aaa
movs
inc
gs
pop
cmc
push
clc
int
pop
lods
enter
in
(bad)
(bad)
cwde
cmp
push
(bad)
mov
dec
stos
jl
pop
sub
int
shr
push
mov
adc
js
jg
shl
ins
pop
xchg
retf
sub
loop
mov
and
push
push
push
adc
sahf
stos
loop
(bad)
pop
sahf
dec
outs
lds
(bad)
aad
ret
jnp
sbb
inc
add
stc
repz
jl
lds
loope
or
pop
sets
mov
sub
dec
retf
mov
sti
inc
xor
jae
mov
mov
cld
hlt
cmp
jp
cmc
pop
icebp
and
or
(bad)
ret
fnsave
sub
test
pcmpgtd
les
loope
cld
leave
mov
xchg
leave
add
xchg
hlt
or
pop
jge
popf
cmps
out
out
mul
sar
retf
(bad)
sub
(bad)
push
sar
push
in
push
fdivr
push
les
retf
js
push
adc
pop
xchg
cld
xchg
das
cmp
mov
mov
pop
out
pop
inc
sbb
inc
xchg
in
sar
xor
sbb
cmps
xchg
retf
sbb
inc
(bad)
in
adc
push
and
int3
rcl
pop
jb
ja
call
jp
xor
sub
mov
push
pop
xchg
jmp
mov
shl
push
(bad)
and
mov
test
xchg
adc
(bad)
dec
jb
jmp
sub
and
inc
cld
fsub
iret
(bad)
stc
inc
ins
sbb
pusha
mov
xor
stos
pop
rcl
test
jnp
mov
std
or
xchg
add
sti
test
fimul
movs
aaa
push
loopne
cmps
ret
xor
bound
movs
(bad)
fimul
xchg
scas
(bad)
mov
xchg
das
outs
hlt
mov
(bad)
loope
mov
sbb
jo
aad
mov
pop
dec
add
cmp
fst
sti
ret
neg
jmp
into
(bad)
mov
(bad)
imul
jle
jnp
icebp
mov
sbb
jnp
mov
push
and
cmc
mov
movs
retf
inc
add
test
xor
mov
dec
ret
jmp
mov
stc
mov
mov
lea
xor
fucomip
mov
xor
pop
inc
mov
xor
add
inc
das
ds
rol
out
nop
jge
sub
pop
mov
movs
imul
gs
outs
sahf
addr16
clc
xchg
mov
imul
adc
sbb
cmp
aad
cmp
sahf
mov
mov
out
xchg
pop
imul
in
xchg
cdq
lds
popa
jmp
inc
pop
loope
mov
mov
xchg
sahf
ss
jp
cmp
cs
ins
cmp
or
(bad)
mov
fnstenv
jmp
adc
aam
mov
add
or
clc
and
or
out
(bad)
jbe
mov
ja
sahf
lods
addr16
push
(bad)
lea
adc
pop
out
rcl
leave
dec
adc
fst
add
int3
pop
pop
jg
lods
fwait
dec
inc
sub
cmp
mov
add
(bad)
outs
adc
push
cmps
mov
rcr
pop
(bad)
sahf
or
inc
movs
sub
arpl
and
jnp
pop
fnstsw
es
cmp
jo
cmp
loope
dec
mov
movs
rol
popa
addr16
outs
fcomp
(bad)
out
mov
jns
aas
in
and
push
in
jl
jmp
dec
jg
ds
aaa
lods
cmps
ss
dec
mov
mov
in
ins
cmc
test
mov
dec
addr16
push
fimul
sbb
hlt
mov
fild
mov
jle
imul
dec
sbb
add
add
pop
dec
jbe
ja
sub
pop
mov
mov
test
(bad)
sar
mov
add
bound
sub
xchg
push
repz
cmp
cmp
push
popa
xor
jl
lahf
es
push
xor
outs
jns
sahf
std
mov
pop
in
loop
mov
or
and
sti
aaa
std
and
sub
nop
stc
or
int3
jae
sbb
pop
js
and
retf
cmps
fdivr
std
imul
icebp
xchg
enter
(bad)
cmovge
add
and
ret
sbb
or
aad
pop
mov
jge
scas
rcr
sti
fnsave
clc
push
push
loopne
push
cmp
aad
sub
(bad)
ficomp
sub
es
(bad)
ins
mov
fimul
int3
in
pop
push
sbb
mov
cld
ss
stos
stos
pop
sub
repz
retf
imul
nop
mov
mov
fcomp
adc
jecxz
inc
pushf
adc
dec
or
movs
mov
(bad)
jmp
push
xor
leave
jae
mov
bound
xchg
pusha
mov
(bad)
mov
inc
(bad)
repz
push
out
sbb
fsub
sbb
shl
mov
in
mov
push
jmp
cwde
add
fdiv
cmp
lds
not
xor
inc
and
mov
sti
out
jle
xor
fs
sbb
add
sub
xchg
into
and
xor
add
aad
mov
xchg
push
xchg
sub
dec
mov
pusha
xor
and
mov
and
cmp
arpl
repnz
push
mov
push
push
mov
mov
or
or
gs
in
pusha
add
push
jnp
inc
das
add
movs
int3
mov
mov
outs
xor
ins
rcr
cs
jne
sbb
popf
leave
in
shl
out
inc
push
adc
inc
mov
jmp
xchg
or
or
aaa
jmp
(bad)
int
cwde
mov
frstor
mov
lods
fmul
(bad)
sbb
dec
add
xchg
aad
mov
(bad)
dec
test
out
movs
aas
jae
jmp
adc
jns
mov
jb
xchg
push
sti
out
or
add
dec
shl
push
pop
xchg
push
jmp
test
push
ja
nop
in
add
adc
fimul
or
or
icebp
mov
dec
adc
pop
xchg
inc
push
es
into
outs
cmp
mov
pop
sti
dec
xchg
cmp
ins
cmp
(bad)
(bad)
std
dec
cmp
xor
in
xchg
mov
or
movs
xor
stos
rcr
movs
cmp
sbb
push
pop
jo
mov
into
push
in
(bad)
mov
inc
jb
mov
and
sbb
loop
mov
push
push
jae
inc
lods
adc
jp
sar
aad
and
mov
loopne
imul
retf
ret
push
xor
aad
daa
mov
out
shl
or
push
add
xchg
aam
lock
ja
dec
or
aas
jle
adc
cmps
xchg
pop
ficom
movs
sbb
push
mov
test
outs
add
outs
inc
test
test
adc
sbb
xchg
xchg
mov
inc
sbb
sbb
(bad)
jnp
inc
imul
clc
sub
xchg
(bad)
xor
mov
mov
out
mov
out
iret
mov
imul
(bad)
dec
cld
loopne
xor
popa
jg
les
adc
add
icebp
mov
inc
jb
add
mov
gs
push
ins
mov
inc
mov
inc
js
call
add
pop
xor
and
in
pop
pop
repnz
xor
adc
fisubr
dec
jns
mov
sub
inc
push
mov
dec
mov
(bad)
das
clc
xor
cmp
inc
gs
adc
lods
dec
addr16
scas
out
dec
and
daa
pop
mov
cmp
loopne
ss
cmc
pop
dec
(bad)
push
sub
and
mov
jecxz
inc
sti
lea
pop
es
js
mov
dec
dec
pop
dec
xchg
xchg
shl
ror
push
mov
push
add
retf
ins
mov
sar
adc
scas
cmp
fisttp
sbb
std
inc
in
mov
pop
mov
out
inc
addr16
adc
push
mov
push
hlt
dec
cwde
in
add
in
call
mov
jo
mov
fiadd
mov
sbb
push
pop
in
js
pop
cmps
mov
lods
or
and
sbb
mov
sub
aad
xchg
pop
js
cwde
pop
loop
fsin
xor
aam
pop
jp
add
pop
call
repnz
push
les
mov
xor
jmp
pop
xchg
or
jl
mov
cmp
jp
imul
jb
daa
and
xor
or
lea
rcl
sbb
mov
sbb
in
xchg
adc
sbb
pop
sti
pop
inc
mov
push
and
jnp
xor
mov
push
cs
pop
jo
out
mov
aaa
mov
shl
movs
or
addr16
jae
mov
rcl
div
xor
mov
adc
int3
fadd
xlat
in
and
mov
pop
lods
fld
lock
fisttp
pop
mov
jecxz
push
cmp
cmp
lods
shl
inc
add
xor
rol
fcomp
push
add
add
xchg
sub
aaa
xchg
cmp
mov
and
jg
daa
test
shl
and
fistp
mov
pop
aam
jae
xchg
pop
cmc
(bad)
pmaxub
(bad)
int
mov
jns
adc
mov
push
(bad)
cmps
pop
inc
call
sbb
sbb
xchg
xor
jns
mov
xchg
pop
call
cmp
lods
jbe
and
lds
cmps
or
adc
out
dec
test
mov
jae
mov
xlat
pop
fld
push
sub
jns
push
(bad)
js
outs
popa
jle
and
mov
xor
push
mov
mov
and
mov
pop
sar
out
sar
lea
mov
xchg
lods
shl
pop
xchg
loop
daa
idiv
mov
dec
test
mov
gs
idiv
sbb
ds
jno
stos
fidivr
mov
repz
push
jle
out
push
and
ins
or
sbb
(bad)
xor
test
into
pop
hlt
pusha
js
js
test
lock
sar
daa
mov
cmps
xlat
out
repnz
push
jno
jb
pusha
jecxz
cmp
retf
scas
xchg
int3
(bad)
push
mov
lds
mov
jge
sub
lds
pop
test
lods
jae
jl
rcr
or
push
outs
(bad)
sti
lahf
hlt
jge
fst
inc
xor
arpl
movs
outs
mov
sbb
ins
repz
repz
cmp
aas
stos
dec
hlt
or
stc
imul
sbb
iret
int
jge
adc
stos
or
in
sub
mov
xor
add
ret
pop
mov
mov
cmc
(bad)
adc
test
ret
push
imul
daa
mov
xlat
sbb
in
js
mov
jmp
push
adc
in
daa
push
(bad)
dec
clc
sbb
mov
mov
adc
pop
fadd
pop
das
nop
clc
xor
in
pop
mov
clc
adc
or
mov
ds
push
jp
icebp
in
jl
mov
adc
sub
or
jp
inc
xchg
in
(bad)
out
push
les
push
lock
mov
xchg
ss
inc
push
popa
dec
pop
cmp
push
jns
call
mov
ja
or
iret
xchg
cmp
xchg
dec
(bad)
fld
mov
into
jmp
lods
xchg
retf
mov
xlat
imul
mov
sub
mov
add
jge
dec
pop
repnz
add
mov
inc
nop
fsubrp
test
fs
sahf
(bad)
mov
daa
sbb
mov
adc
fwait
pop
outs
sub
movs
scas
test
jae
jge
inc
cdq
pop
mov
jge
jmp
loope
(bad)
and
cli
stos
cmc
pop
sub
div
shr
mov
ins
pop
mov
xchg
popf
pop
dec
sti
inc
dec
and
imul
vphsubbw
cwde
mov
mov
push
fnsave
rcl
mov
adc
enter
mov
xchg
mov
sub
cmp
retf
pop
hlt
adc
in
in
dec
enter
push
pop
das
pushf
in
xchg
outs
sti
add
cli
psubw
loop
ja
dec
dec
out
jge
sub
pop
push
add
or
shl
sahf
pusha
aaa
inc
pop
push
pop
cdq
push
xchg
retf
fcmovne
fdivr
out
lock
retf
adc
lahf
xchg
fwait
mov
mov
cli
inc
retf
pop
lahf
dec
jne
clc
loope
inc
xchg
stos
ficom
pop
cmps
out
mov
xlat
(bad)
jp
jno
sbb
(bad)
jle
out
shl
dec
sahf
sub
enter
sub
sahf
(bad)
loop
cmp
fwait
sub
dec
pop
or
sbb
dec
or
retf
push
pop
loope
mov
or
jnp
sahf
mov
jmp
fcmovu
rcl
xor
es
adc
mov
int
mov
cmp
xor
loop
mov
mov
ins
sbb
xchg
mov
push
out
jns
and
jp
cmp
jp
dec
push
cmp
aas
fadd
dec
add
retf
test
fcom
xchg
inc
mov
out
pop
outs
or
gs
xor
or
pop
jg
or
adc
stc
xor
sub
test
dec
adc
push
xor
repz
add
sbb
and
popf
iret
inc
push
mov
(bad)
mov
mov
cli
mov
jb
retf
jl
fsub
mov
rol
xor
inc
sub
push
lahf
push
rol
inc
iret
xchg
repz
push
popa
pop
lock
pop
rol
int3
pop
mov
dec
and
mov
xchg
cmp
movs
ja
aam
sbb
cmp
push
push
adc
dec
mov
push
into
pop
inc
xchg
jbe
popf
and
cs
add
xchg
mov
mov
mov
test
(bad)
jae
add
mov
pop
jbe
lods
inc
cmp
jns
ret
mov
movs
add
and
cmps
neg
adc
or
lods
lahf
xor
into
pop
ins
adc
push
push
sbb
rcr
std
jl
sbb
mov
push
push
push
pop
mov
lds
cli
adc
mov
inc
retf
fistp
xor
inc
dec
loop
scas
xor
jp
pop
ret
int3
cmp
repz
jno
inc
or
fdiv
pop
cmp
ret
lds
sbb
cld
sub
adc
loopne
sub
add
ins
sub
(bad)
sbb
jl
scas
(bad)
cmp
add
out
in
movs
sub
push
nop
jns
shr
dec
push
ror
cmc
iret
pop
inc
push
jns
dec
pop
and
jge
mov
push
sub
clc
sbb
dec
imul
add
pop
(bad)
(bad)
jne
stos
or
test
xchg
or
xchg
xlat
push
(bad)
aas
mov
hlt
aas
or
rcl
cli
xor
xchg
jns
outs
lds
xchg
fisttp
or
jno
stos
int3
(bad)
cld
adc
loope
aad
mov
cmp
sub
lods
inc
jo
pop
fs
xor
cmps
(bad)
xor
scas
jg
jno
dec
cmp
out
xchg
cmc
sahf
cmp
xor
pop
in
dec
mov
cmps
out
movs
(bad)
sbb
je
and
cmp
in
push
xchg
mov
adc
dec
outs
push
push
js
movs
movs
adc
daa
adc
mov
iret
xchg
adc
popf
aas
push
push
fdivr
aad
or
jg
fistp
stc
outs
aas
test
cmp
or
pop
daa
add
dec
dec
xchg
jmp
std
sbb
rcr
loop
xchg
xlat
ret
sbb
je
sbb
jmp
or
push
or
mov
push
mov
pop
mov
imul
sbb
in
mov
push
pushfw
test
push
enter
xchg
add
mov
mov
pop
rol
inc
outs
int
fidiv
stc
sub
scas
imul
mov
mov
sub
mov
and
ror
inc
pop
(bad)
dec
xlat
out
cs
mov
call
jnp
fs
xchg
(bad)
in
jmp
rcl
mov
pusha
sbb
xor
aam
mov
xor
in
cmp
les
sub
(bad)
dec
lock
pusha
dec
imul
add
daa
and
fcmovnb
dec
mov
mov
hlt
arpl
push
retf
and
mov
add
jmp
mov
mov
pop
(bad)
ror
stos
pop
out
pop
in
jecxz
adc
repz
mov
lds
(bad)
xchg
xor
or
adc
sub
dec
jge
mov
or
dec
sbb
sub
mov
adc
dec
lahf
push
mov
and
je
js
sbb
fild
or
xor
mov
mov
cmps
sub
shr
dec
mov
mov
add
aam
push
imul
add
xchg
lahf
or
sub
jb
jp
lods
push
or
ss
stc
in
xor
mov
jecxz
dec
fild
and
mov
mov
inc
out
pop
lahf
cmps
add
mov
xlat
je
and
jb
xchg
outs
test
inc
je
jmp
xchg
push
dec
sub
test
dec
cli
cmc
xor
data16
scas
inc
cmps
xchg
and
cmps
jl
add
neg
mov
pop
push
fild
pop
mov
pmulhuw
sub
(bad)
or
test
gs
jb
push
fiadd
dec
stc
cmp
fistp
and
pop
or
fwait
pop
rol
mov
mov
jae
jmp
shl
add
fmul
(bad)
push
push
and
mov
lock
stc
mov
push
mov
jg
es
fsub
enter
mov
mov
xlat
outs
adc
shr
xor
es
push
xchg
nop
loope
cmc
mov
inc
movs
mov
adc
push
sub
nop
xor
pop
dec
sub
aad
push
sub
scas
jge
xor
enter
add
imul
js
in
mov
imul
shl
xlat
pop
clc
nop
imul
xor
dec
mov
je
mov
and
push
mov
inc
push
cmp
sbb
fwait
jno
int
jb
add
out
das
adc
cmp
add
cmp
imul
xchg
cmp
fist
dec
neg
pop
pop
mov
mov
loop
ins
push
aad
neg
inc
jp
pop
mov
xchg
call
mov
and
enter
out
(bad)
inc
or
cld
(bad)
xchg
add
xchg
mov
out
add
test
rol
loop
sbb
jecxz
push
outs
push
pop
inc
cmp
pop
mov
inc
xor
mov
cmp
mov
fadd
inc
jbe
sub
dec
push
fdiv
lahf
or
push
aas
imul
pusha
retf
outs
pop
adc
cwde
and
and
pop
xchg
(bad)
shl
pushf
xor
dec
push
scas
dec
xchg
dec
dec
sbb
mov
jbe
inc
aas
push
inc
xor
not
jb
inc
movs
push
pop
jbe
fimul
or
pop
cmp
imul
int3
xor
push
and
xlat
push
stos
cmp
fcom
test
jp
into
loopne
sti
iret
adc
leave
(bad)
cmp
sub
pusha
dec
mov
fs
pushf
push
or
ret
stos
movs
fcom
mov
mov
ret
sub
int3
mov
cmps
push
setl
aad
mov
jl
imul
jmp
js
test
sbb
mov
jo
jle
not
push
les
adc
sti
push
cmp
popa
cmp
(bad)
cli
jg
fadd
pop
push
lahf
xchg
ins
adc
sub
jle
xchg
dec
jb
rep
(bad)
sbb
mov
mov
gs
(bad)
cmp
pusha
add
and
pop
and
inc
xor
or
fstp
and
sub
ror
jmp
or
ds
xchg
or
movs
retf
int
add
pop
dec
push
mov
in
rcr
sbb
adc
pop
jo
xchg
jno
sbb
or
stos
in
cmp
push
push
pop
jmp
push
pop
mov
call
cdq
pop
adc
shl
lods
adc
aas
mov
cdq
mov
jmp
or
punpckhwd
cmp
xchg
or
shl
pop
ds
sub
xchg
pushf
es
inc
je
or
idiv
jecxz
je
mov
inc
xchg
push
push
fcmovbe
int
mov
fmul
(bad)
rcl
push
dec
ss
xchg
add
in
sbb
in
scas
mov
scas
mov
adc
lods
xlat
shl
ss
stc
xchg
push
add
sub
mov
sbb
test
pop
sub
ret
sbb
mov
inc
or
xchg
mov
and
mov
sub
push
dec
and
push
rcr
out
loope
xor
in
sahf
xchg
mov
pop
mov
loopne
std
push
fs
cmp
clc
std
int3
and
adc
imul
xchg
sub
and
in
dec
jl
ins
aad
sub
lea
jge
(bad)
pop
mov
aam
movs
jo
cmp
cmp
cmps
jecxz
pop
cmp
fbld
cmp
outs
popf
mov
dec
movs
xchg
adc
or
je
inc
fidivr
xor
loope
add
int3
scas
mov
add
lock
hlt
out
jo
add
popf
jle
retf
push
xlat
or
shr
(bad)
in
jns
fisub
test
jbe
xchg
pop
ss
pop
mov
jmp
xchg
xor
inc
xor
mov
dec
and
sub
mov
gs
pop
inc
or
xor
test
push
jno
mov
inc
add
gs
sahf
(bad)
jnp
mov
fst
xor
adc
adc
pushf
mov
xchg
push
sti
out
adc
pop
sahf
popf
adc
mov
dec
add
mov
mov
dec
inc
call
cwde
pop
and
pop
clc
add
pop
push
(bad)
sub
pop
push
pop
enter
std
out
scas
push
cdq
cmp
(bad)
rcr
xchg
ror
nop
sub
mov
jb
mov
add
in
cmp
push
jmp
repz
test
mov
imul
jnp
je
push
fsub
cdq
aas
adc
leave
test
fist
test
loope
stc
cli
shr
rol
or
jns
mov
jmp
lods
test
mov
push
dec
add
add
cmp
dec
cmps
sahf
lds
dec
add
call
repz
xor
sbb
mov
pusha
out
add
(bad)
out
mov
out
fnstcw
in
mov
mov
(bad)
ret
mov
loopne
or
loopne
jns
add
stos
dec
pop
push
mov
xchg
ret
or
mov
inc
stos
js
stos
inc
fldcw
(bad)
in
xchg
xor
xchg
push
mov
pop
push
push
xor
sbb
daa
cs
push
or
sar
pop
adc
movs
add
mov
push
mov
inc
xor
sbb
mov
lods
mov
ds
test
fsub
add
sbb
fimul
jmp
dec
lods
ins
cmc
push
cld
mov
mov
jg
xchg
mov
(bad)
and
das
xchg
pop
stc
dec
or
add
cmp
or
movs
jle
xor
out
mov
inc
ror
in
fisub
sbb
iret
mov
push
adc
push
out
xchg
mov
xor
popa
xor
(bad)
sub
mov
and
cmp
in
arpl
cld
dec
(bad)
ficomp
inc
jno
sub
mov
ja
xchg
and
adc
xchg
cmps
pop
jp
fsubr
xor
loopne
out
pandn
xlat
mov
sub
stc
ja
inc
loop
pop
sub
mov
cli
push
and
(bad)
add
pop
jp
jp
es
jne
sbb
cmc
cmp
and
sub
cli
pop
pop
(bad)
add
repz
scas
cmp
and
jecxz
out
push
dec
call
clc
scas
stos
lea
inc
sbb
ret
mov
sub
sub
je
inc
cli
push
(bad)
sub
jb
out
add
xchg
lock
call
sub
pushf
push
ins
jle
prefetch
and
in
fisubr
daa
int
out
imul
jns
pop
mov
mov
jae
inc
or
and
inc
xchg
mov
ds
lahf
xor
aam
sbb
and
bound
adc
in
mov
push
add
setne
stc
mov
adc
(bad)
xor
popf
jge
push
ins
inc
jns
or
lods
mov
and
jns
jmp
xor
test
jno
dec
mov
mov
das
add
aad
dec
fisttp
mov
xchg
jbe
daa
shr
xchg
add
ds
stc
jl
div
out
cwde
sbb
mov
pop
xor
ins
daa
lods
or
xor
retf
pop
adc
inc
popf
or
inc
scas
sbb
mov
mov
ss
sub
test
inc
shl
add
lea
mov
cmp
push
repz
inc
out
daa
ins
iret
out
fcmovu
mov
xor
int
mov
pop
icebp
outs
repnz
in
not
mov
loope
cmp
add
stos
add
and
daa
cli
mov
mov
sub
jo
push
adc
(bad)
iret
push
and
lds
cli
in
stc
call
push
bound
mov
scas
and
arpl
ret
hlt
aaa
or
loope
ficomp
mov
add
shl
xor
aad
inc
add
dec
aad
xor
sti
pop
dec
pop
cmps
daa
push
test
pop
pslld
call
adc
or
jb
loope
pop
xchg
mov
js
xchg
xchg
dec
cli
test
push
lahf
pop
fisubr
and
inc
clc
aas
cmc
call
in
xor
mov
fmul
cmp
mov
and
adc
sbb
or
mov
mov
xchg
pop
mov
dec
and
aaa
out
xchg
pushf
std
jns
leave
ins
sub
push
std
add
lods
mov
mov
mov
aam
lock
(bad)
jnp
stc
dec
popf
aad
into
call
outs
xchg
jo
and
push
jge
jmp
mov
sbb
and
and
adc
sub
cdq
add
(bad)
repz
loope
int3
data16
pusha
xchg
xchg
aam
sub
xchg
jae
ja
mov
lds
add
xchg
adc
push
clc
lods
xor
nop
test
mov
mov
std
inc
icebp
or
test
sbb
repnz
jge
lahf
aam
xor
shl
scas
xchg
out
jo
into
in
in
ficom
dec
rcl
test
pop
leave
dec
cmps
cmp
pop
jbe
sub
jp
and
imul
or
jge
shl
(bad)
ins
jb
aad
lahf
xlat
stos
dec
sub
push
mov
sbb
imul
xlat
call
shl
sbb
cmp
jne
sub
pusha
lock
mov
push
pop
adc
pop
cs
lock
xchg
jbe
mov
mov
loopne
ins
ins
push
lock
outs
adc
pop
xchg
retf
mov
push
adc
fnstcw
repnz
jo
test
pop
leave
(bad)
or
sbb
sahf
mov
aaa
push
push
push
jge
lahf
push
test
mov
push
ja
call
(bad)
mov
scas
inc
jbe
mov
cdq
not
jbe
jo
fdivr
clc
mov
fstp
ficom
sar
les
pusha
sub
out
and
out
push
sbb
test
dec
inc
(bad)
(bad)
clc
push
mov
xchg
add
sar
imul
dec
jmp
ret
add
outs
mov
inc
cmp
das
mov
add
pop
xchg
mov
call
add
lods
xchg
jb
inc
sub
xchg
shr
fidiv
xchg
dec
push
neg
pop
push
inc
sar
add
push
xchg
movs
hlt
mul
repnz
mov
inc
js
jmp
mov
in
repz
ds
loopne
sub
iret
(bad)
addr16
pop
adc
inc
outs
adc
adc
sbb
sti
sub
dec
in
inc
cmp
mov
call
imul
cli
inc
aas
leave
sar
inc
dec
add
in
sbb
dec
cld
sub
add
mov
adc
xchg
(bad)
repnz
pop
inc
mov
call
cmp
sub
dec
ret
fdiv
test
adc
call
jecxz
icebp
pop
ret
push
out
mov
je
pop
xchg
or
shl
sub
mov
adc
(bad)
enter
ret
add
icebp
jg
hlt
neg
mov
(bad)
in
repz
sbb
stos
ret
mov
pop
jl
je
jno
pop
bound
xchg
sbb
stos
or
pusha
sub
sahf
test
cld
dec
mov
shl
fs
or
fwait
xor
pop
cmp
or
cdq
fbld
pop
out
loope
inc
test
jg
hlt
cmc
loope
int3
cld
sbb
(bad)
jmp
push
scas
sub
or
dec
in
aam
mov
and
push
das
and
(bad)
mov
int3
and
shl
add
retf
lock
fwait
jns
int
cmps
or
push
pop
ins
xlat
add
jbe
fadd
mov
push
or
adc
xor
outs
sti
or
sub
mov
add
fiadd
push
fs
inc
or
rol
push
ret
lods
stos
shr
test
jno
jo
fisubr
lods
retf
ret
adc
push
sub
mov
pusha
mov
adc
jp
push
rol
ret
(bad)
das
cmps
fnsave
lock
in
pop
arpl
sbb
in
or
dec
add
add
sar
sbb
fsubr
mov
or
mov
pop
pop
inc
pusha
pop
push
inc
jg
fwait
mov
lock
int
inc
jnp
mov
and
add
ret
or
fmul
cli
jle
lock
(bad)
clc
loopne
leave
or
fidivr
(bad)
sbb
je
jne
xchg
mov
sbb
inc
mov
pop
ficom
mov
ror
mov
inc
jg
mov
cmp
lock
dec
mov
sub
(bad)
shr
pop
mov
les
cmp
xor
shl
pop
and
xlat
pop
cmp
sbb
inc
xor
pop
btr
fsub
movs
mov
scas
push
les
inc
sub
icebp
mov
inc
(bad)
and
pop
cmp
mov
push
jmp
cld
fsub
push
mov
or
mov
pop
xor
xchg
nop
cli
in
rcr
mov
ret
pop
sbb
inc
mov
mov
mov
mov
in
data16
lods
sar
mov
sahf
or
push
ror
imul
shr
pop
mov
jp
pop
inc
push
sub
stos
mov
jmp
xchg
call
inc
out
and
mov
dec
(bad)
push
cli
add
adc
sbb
mov
or
jae
or
mov
adc
push
or
in
stos
mov
jp
lock
add
dec
sbb
xchg
push
test
mov
fnstenv
(bad)
pop
mov
vrcpps
push
cmp
retf
(bad)
bound
and
ret
stos
les
inc
stos
aas
or
jbe
cmps
in
fcomp
cld
cmp
das
das
pop
(bad)
sub
or
jne
sub
rol
mov
pop
imul
ror
cwde
mov
inc
xchg
add
jbe
push
cmp
mov
push
test
pop
inc
inc
inc
mov
mov
mov
mov
xchg
jae
push
mov
daa
(bad)
or
mov
and
scas
push
int3
cmp
jne
cmc
in
cmp
mov
dec
retf
ror
enter
scas
jl
push
mov
cmp
fcomp
pusha
xchg
push
add
push
ins
jnp
in
out
in
xor
xor
das
push
pop
out
idiv
ficom
call
push
jnp
fisub
jmp
xor
test
mov
test
jl
push
mov
rcl
dec
xor
mov
inc
aas
shr
data16
sbb
lock
cs
nop
mov
xor
test
fabs
or
push
pop
dec
mov
push
adc
lods
(bad)
fdiv
clc
adc
loope
jmp
movs
int3
xor
xor
mov
test
mov
leave
in
cli
sbb
outs
jp
jns
adc
sub
inc
xor
outs
cs
adc
mov
imul
lds
adc
fsub
out
adc
fadd
lea
jmp
imul
outs
call
adc
cmp
pop
mov
mov
es
and
dec
mov
jp
hlt
int
lods
xchg
jbe
add
cmp
adc
loop
sar
(bad)
sahf
les
cmp
(bad)
pushf
fs
retf
inc
rcl
mov
sar
mov
sahf
cmp
dec
mov
sub
xchg
dec
jge
jo
adc
cmp
fisub
mov
ret
icebp
retf
jp
repz
adc
cdq
mov
das
imul
dec
aam
in
pushf
mov
outs
jp
nop
pusha
push
cli
mov
cs
mov
clc
xchg
inc
int
xor
test
addr16
(bad)
out
or
ret
mov
adc
retf
sub
mov
retf
popa
add
lock
mov
sahf
imul
inc
or
push
sbb
inc
(bad)
push
icebp
mov
mov
xor
aas
into
or
and
bound
xor
fwait
cmp
xchg
cmp
mov
cmp
push
and
lods
mov
bound
mov
add
into
push
gs
icebp
ja
popf
lods
cmps
aaa
fdivrp
stc
mov
xchg
fs
(bad)
sub
movs
fisub
jb
test
mov
xchg
xchg
mov
jecxz
mov
outs
dec
(bad)
ficom
dec
xchg
fabs
pop
cs
std
ds
out
xchg
lods
inc
stos
push
dec
dec
mov
and
lods
shr
pop
xchg
or
cli
mov
ja
cmp
hlt
pop
shl
pushf
push
xor
repnz
and
xchg
xchg
pop
sub
fsub
jo
push
push
and
call
ins
sbb
clc
ficom
or
lock
push
mov
in
xchg
xor
sbb
dec
mov
adc
and
imul
rcr
mov
test
mov
sbb
in
push
sbb
std
call
retf
loopne
xchg
enter
xchg
pop
pop
and
movs
mov
or
scas
jl
mov
pushf
mov
fldenv
and
in
push
out
xor
add
in
sub
shr
pop
icebp
out
fnstsw
xor
cmc
inc
lods
push
stos
outs
pop
or
mov
or
fldcw
out
(bad)
sub
mov
popf
sub
ins
aas
xchg
xchg
dec
or
call
aas
inc
mov
push
sub
ret
xor
inc
movs
stos
repz
or
xchg
sub
push
mov
jge
mov
(bad)
fstp
jecxz
dec
cmp
lds
pop
mov
(bad)
xor
fs
mov
sbb
cdq
in
ret
cmp
mov
loopne
imul
popf
div
mov
sub
adc
cmp
cld
dec
loopne
pop
clc
cmp
jmp
mov
push
mov
adc
mov
push
les
mov
dec
dec
jge
(bad)
in
sbb
xlat
lods
sbb
icebp
daa
mov
out
cdq
sub
sahf
push
add
call
mov
mov
jmp
sbb
cmp
mov
leave
fwait
mov
shl
mov
add
das
pop
out
cli
mov
bound
push
push
clc
dec
jmp
mov
jb
cmp
shr
xor
xlat
sbb
mov
fidiv
mov
jp
test
out
and
jmpw
sar
add
into
inc
cmp
(bad)
jmp
or
fadd
ins
mov
pop
pusha
ss
pop
jg
(bad)
fstp
cld
jp
dec
dec
cmp
cmp
and
inc
jnp
mov
pushf
mov
mov
inc
add
rcl
sub
fst
lods
pop
stos
xor
jmp
pop
out
out
add
mov
fwait
les
cmp
pop
pop
xlat
cwde
das
xchg
cmp
xchg
mov
(bad)
enter
dec
ret
mov
enter
cmp
push
dec
clc
mov
cmps
xchg
push
or
fs
mov
push
pop
aam
xchg
dec
daa
add
mov
inc
retf
out
mov
mul
in
jle
iret
mov
aam
cmp
out
mov
js
pop
add
lea
or
jmp
popa
retf
xchg
(bad)
arpl
out
std
mov
inc
jecxz
in
sub
fdivr
sbb
sub
push
stos
dec
fdivr
jo
lods
je
mov
sbb
sub
enter
jmp
mov
jnp
js
or
or
mov
jp
xor
pop
(bad)
imul
xlat
stos
pushf
ret
les
(bad)
(bad)
cmp
inc
jb
ror
xchg
ret
mov
das
rcl
cmp
xchg
fadd
mov
fild
lea
stc
pop
jp
in
fidiv
mov
imul
ss
movs
gs
pop
mov
cmp
xchg
xchg
ins
(bad)
adc
aam
dec
adc
sar
push
mov
in
scas
jmp
into
js
jmp
mov
gs
or
mov
or
xor
retf
imul
stc
les
mov
xchg
sbb
into
cmp
ds
inc
dec
loop
inc
push
sbb
add
(bad)
ins
fmul
lock
ret
pop
or
out
loope
popf
and
pop
push
les
int
rcr
stos
inc
cmp
nop
push
stc
jmp
stos
mov
adc
jbe
push
(bad)
popf
adc
or
or
icebp
aaa
imul
stos
leave
into
adc
push
popa
push
pop
push
test
inc
inc
push
push
sbb
mov
pop
shl
out
rcl
in
xor
in
xchg
sbb
sbb
fistp
sub
aam
shr
sbb
ds
cmp
inc
stc
clc
xor
push
push
sahf
gs
mov
mov
scas
fcomp
mov
js
sbb
mov
jnp
in
fimul
mov
call
ret
and
lea
bound
jo
jmp
les
scas
mov
in
push
shl
out
lock
je
sub
xchg
dec
pushf
cwde
pop
pop
sub
retf
cdq
bound
xor
inc
fwait
pop
mov
pop
dec
add
popf
mov
sbb
sti
pop
add
jnp
sbb
sub
adc
inc
sub
sub
gs
mov
leave
pop
mov
xchg
and
and
out
fnsave
in
sbb
or
pop
dec
sbb
(bad)
call
imul
push
(bad)
xlat
pop
adc
dec
push
dec
sbb
mov
test
and
jge
xchg
sub
mov
push
icebp
lahf
push
les
cmp
sbb
rcl
mov
fmul
xchg
mov
std
xchg
jne
stc
xor
(bad)
or
xor
lahf
dec
push
cmc
or
xor
sbb
hlt
test
inc
iret
lahf
sub
or
or
or
sub
mov
cmps
dec
out
xchg
(bad)
call
(bad)
call
test
xchg
loope
push
stc
(bad)
pop
xor
pop
shr
add
dec
inc
xchg
or
aad
(bad)
mov
ss
jae
outs
jb
retf
out
cli
add
dec
repnz
(bad)
rol
inc
sub
jnp
stc
jle
int3
or
fidiv
scas
(bad)
retf
aas
outs
push
fld
mov
sub
sar
dec
xchg
dec
fld
fsubr
sbb
jb
inc
and
adc
addr16
(bad)
div
inc
or
xchg
mov
fs
xor
push
sbb
xor
addr16
cmp
sbb
dec
or
sbb
daa
sbb
jnp
sti
sbb
loope
out
loop
jnp
fdiv
cli
xor
fdivrp
pusha
fsubp
icebp
mov
inc
dec
in
or
out
ds
cmp
test
xchg
inc
or
ins
cdq
ret
ret
xchg
jmp
sbb
sar
leave
lock
out
sub
dec
inc
out
pop
push
cmps
cdq
or
dec
loop
mov
push
popf
aas
movs
pop
xor
aad
leave
ror
loop
inc
jo
cmp
push
xor
adc
cdq
sub
das
jne
jmp
stc
pop
jl
jno
arpl
mov
dec
jmp
je
mov
mov
jno
mov
es
sub
pop
adc
or
xor
mov
dec
shl
mov
xor
push
mov
sub
out
and
arpl
cmp
in
clc
sti
jb
js
pushf
push
lahf
jmp
xlat
pushf
adc
call
mov
mov
inc
in
mov
call
add
add
inc
and
lods
cld
out
ret
cmp
sbb
lea
das
cmp
lock
pop
(bad)
retf
push
cwde
(bad)
test
stos
jle
out
fldenv
aad
data16
fwait
imul
mov
cmps
in
xchg
lahf
push
les
jo
or
pop
repz
or
adc
outs
jmp
pop
and
loopne
adc
xchg
mov
fnsave
in
or
push
jmp
or
aas
xchg
call
mov
outs
inc
mov
retf
js
xchg
fs
add
adc
add
push
in
mov
add
cmp
mov
icebp
repz
cmp
dec
rol
adc
dec
mov
ret
cmp
xchg
pop
sub
add
fsubr
sahf
std
ds
mov
repnz
loopne
add
mov
aaa
inc
repnz
out
and
xchg
mov
iret
out
sbb
mov
mov
jl
mov
shl
retf
mov
clc
mov
xchg
enter
lock
fdiv
jl
pop
out
ret
fild
dec
fcom
dec
jmp
pop
mov
xchg
mov
pushf
adc
data16
test
movs
pop
cmp
popa
sub
mov
push
(bad)
xchg
ds
sar
addr16
repz
std
movs
push
pushf
leave
xchg
or
mov
fdiv
xchg
addr16
jmp
push
or
push
shl
daa
jb
adc
dec
sub
cmp
inc
xchg
mov
outs
js
test
jmp
fwait
(bad)
mov
in
adc
lds
in
sub
test
fisttp
pushf
mov
jne
shl
into
xor
mov
mov
in
repz
shl
rcr
sub
pop
enter
dec
int
dec
loope
popf
jle
push
cld
xor
pushf
test
inc
push
fcom
lods
or
repnz
pop
int
adc
(bad)
push
test
pop
rcl
retf
cmp
sub
fst
and
out
mov
int
in
sbb
mov
inc
jnp
div
into
add
sub
int3
enter
mov
inc
cmp
aam
inc
(bad)
lods
push
into
xchg
fsubr
mov
in
out
hlt
inc
inc
(bad)
fiadd
xchg
jb
call
pop
jnp
adc
adc
and
and
test
aas
mov
inc
push
mov
in
sbb
jno
fcomp
inc
scas
aam
pop
pop
pusha
dec
mov
shr
int
ds
je
jne
shl
loope
idiv
pusha
mov
or
jmp
pop
das
xchg
jns
jae
sti
jmp
cmp
lock
hlt
xchg
mov
jbe
xchg
mov
xchg
mov
fld
xchg
outs
cmp
sbb
add
pop
js
loopne
push
ins
(bad)
and
cmp
lods
pop
cs
pop
test
sub
pop
repnz
rol
jmp
or
mov
add
dec
in
xchg
pop
sbb
mov
xchg
mov
push
cli
jl
mov
jno
jne
xchg
cmp
jne
ins
inc
xchg
push
in
mov
push
in
aaa
mov
mov
sti
dec
cmps
push
or
push
jle
mov
jns
pop
push
push
ss
in
test
sbb
movs
sti
push
test
pop
mov
js
pop
lahf
sbb
pop
test
pushf
fisttp
sub
loop
pop
mov
sub
mov
adc
mov
inc
loop
adc
mov
pushf
mov
inc
outs
repz
mov
mov
rcr
dec
xor
ss
pop
pusha
(bad)
xlat
rdmsr
mov
sti
and
jne
pop
mov
sbb
push
jle
dec
popa
and
cwd
stc
inc
cmc
call
sbb
dec
push
pop
push
std
push
cmp
add
or
popf
adc
shr
mov
cmps
fnstenv
jp
mov
xlat
or
lods
jns
mov
iret
pop
cld
push
hlt
pop
mov
cwde
cmps
ja
mov
sub
jge
cmp
aas
mov
loope
(bad)
sub
mov
cld
cli
test
cld
xchg
xchg
push
xchg
sbb
out
lahf
cmp
inc
ja
inc
arpl
outs
leave
cmp
cwde
and
dec
and
mov
dec
stc
lahf
ins
push
mov
retf
or
fsub
sub
test
inc
jo
je
jl
sub
popf
sub
jo
jle
imul
add
clc
ret
xor
sub
and
inc
scas
push
out
(bad)
push
add
aam
adc
pop
mov
xchg
mov
jnp
mov
cmp
int
cwde
mov
lock
sar
mov
std
inc
rcl
ret
addr16
push
cdq
mov
add
scas
ins
inc
(bad)
call
mov
cld
retf
out
mov
mov
mov
sahf
(bad)
adc
fnsave
sbb
mov
sbb
mov
aas
xchg
cmp
icebp
cmp
cwde
jbe
mov
ja
popa
mov
push
stos
test
jl
mov
cld
xor
fwait
hlt
popa
sbb
(bad)
clc
sub
rcr
popa
sub
call
push
(bad)
movs
pop
dec
cmp
push
adc
js
neg
pop
dec
div
imul
mov
test
cwde
cld
icebp
dec
mov
and
xchg
xchg
jge
aad
loope
repz
cmps
dec
ins
dec
jb
mov
jns
cmp
push
cmp
ss
mov
ret
into
(bad)
imul
mov
scas
stc
addr16
in
arpl
push
push
vmovsd
adc
sbb
stc
xor
shl
repz
cld
adc
call
sub
jmp
or
out
cmp
xchg
sub
xor
xchg
add
cli
cs
pop
dec
fcomp
sub
push
lock
jge
xchg
mov
idiv
lods
or
dec
out
leave
mov
std
pop
test
sub
xchg
sub
sbb
inc
outs
rol
pop
dec
leave
cmc
fcmovnb
cmp
cwde
or
in
cmp
cmp
out
scas
fyl2xp1
dec
jne
sub
mov
daa
(bad)
aas
sbb
fcom
push
imul
mov
out
js
test
mov
je
adc
ds
sti
cmps
jecxz
mov
mov
sub
fsub
mov
jmp
cmc
push
enter
xchg
lahf
nop
pop
test
pop
pushf
cwde
dec
inc
and
test
mov
rcl
call
sbb
stc
enterw
in
and
iret
jle
inc
push
and
test
in
clc
pop
nop
adc
enter
inc
or
lahf
push
adc
jl
es
mov
adc
dec
cli
lea
jno
xlat
pop
push
retf
cdq
repnz
push
xlat
xor
mov
in
test
sbb
sub
push
div
test
mov
xchg
and
jecxz
mov
mov
jmp
add
mov
dec
leave
pop
aas
jns
mov
dec
jecxz
sub
mov
sbb
js
aad
cli
add
iret
mov
(bad)
inc
(bad)
repnz
cmps
sbb
push
in
std
ins
pop
ret
mov
xchg
gs
ss
sti
ss
xchg
ror
ins
sub
or
xor
cli
repz
test
and
dec
cmp
icebp
ds
mov
test
adc
es
xor
es
jo
or
xor
push
pop
pop
jecxz
and
jae
sbb
jns
(bad)
loop
rcr
mov
jno
rcl
xlat
lods
pop
js
lea
lea
mov
(bad)
xor
add
push
in
sahf
pop
aas
outs
pusha
push
adc
inc
(bad)
aam
inc
dec
jp
xor
and
sbb
ret
or
(bad)
stos
dec
adc
je
adc
adc
xlat
mov
(bad)
add
iret
movs
mov
add
and
sub
pop
(bad)
adc
popa
vcvtss2sd
pop
cmp
arpl
cmp
sbb
mov
sub
aaa
inc
mov
dec
mov
(bad)
es
ja
xchg
hlt
push
jmp
sub
stc
mov
pusha
adc
pop
neg
(bad)
popa
loopne
push
sub
daa
inc
inc
(bad)
cmps
mov
mov
push
ret
pop
pop
cmps
mov
movs
pushf
inc
jbe
mov
xchg
es
inc
es
mov
adc
or
jmp
aad
ss
dec
jge
mov
adc
rcr
adc
adc
out
outs
and
test
jb
jp
jle
loop
and
fisttp
iret
sub
mov
aas
and
xchg
push
retf
(bad)
int
mov
push
js
sahf
sahf
add
popf
lods
or
in
add
call
jns
ret
gs
mov
rcl
pop
or
es
dec
mov
push
jp
outs
dec
clc
cmp
std
cmp
xlat
or
mov
std
dec
shr
adc
iret
ds
out
push
xor
xor
xchg
jns
fnstsw
lea
inc
add
pushf
cmp
stos
cmp
xchg
jne
dec
mov
cmp
cwde
movups
dec
js
or
ror
mov
es
and
mov
dec
jle
push
loop
cmp
pop
sub
ds
or
in
xor
fbstp
or
jp
push
ins
fidivr
aaa
mov
sti
jnp
ficom
inc
enter
xchg
xor
mov
fiadd
cmp
jge
cwde
popf
repnz
ror
pop
xchg
xor
imul
pop
test
movs
(bad)
jl
ins
into
cld
nop
repz
push
jns
xor
call
pop
inc
xor
push
bound
adc
cmp
das
fcom
mov
mov
aam
aas
test
cwde
pop
xor
push
pop
lds
inc
xlat
pop
mov
(bad)
out
xor
imul
rcl
add
jnp
xchg
inc
and
mov
mov
movs
cmp
dec
jle
and
cmp
inc
inc
mov
dec
(bad)
outs
pop
jge
mov
xor
push
out
pop
cmps
div
test
jp
add
mov
mov
push
rcl
pushw
mov
pop
in
dec
mov
mov
xor
je
ror
cmc
sahf
es
inc
leave
xchg
mov
nop
outs
cmp
dec
ins
ja
add
mov
push
pusha
(bad)
mov
icebp
in
push
leave
pop
sbb
adc
ret
xchg
mov
or
mov
sub
jae
mov
frstor
or
sti
xor
out
and
push
push
jge
push
les
pop
dec
xor
pop
es
inc
dec
pop
jg
std
push
jno
in
sub
inc
jns
shr
subps
lods
mov
and
xor
inc
jecxz
inc
in
out
xor
or
cmp
mov
ret
adc
aam
aam
cmps
fwait
jl
and
jno
into
sub
add
repz
fistp
ret
mov
xchg
test
add
or
or
or
dec
push
out
jo
xchg
and
mov
out
cmps
adc
shl
or
jmp
jg
and
std
lahf
es
pusha
in
icebp
jo
popf
mov
cmp
mov
lods
cmps
mul
cmp
mov
dec
adc
hlt
sbb
mov
ss
dec
arpl
sub
loop
or
pop
repz
cmp
and
imul
dec
je
jae
add
shl
sbb
pop
int
mov
mov
add
in
dec
pushf
sbb
retf
mov
pop
xor
mov
dec
or
std
sub
mov
mov
sub
fld
jecxz
addr16
xchg
jmp
(bad)
pusha
dec
or
(bad)
mov
dec
cmp
faddp
push
mov
pop
pop
movs
scas
pushf
inc
js
and
rol
sahf
jecxz
sub
ss
mov
inc
rol
in
inc
das
idiv
ins
retf
ret
dec
push
dec
mov
ss
xor
test
ror
ins
xor
pop
push
pop
mov
int
and
push
xchg
mov
stc
push
xor
xchg
scas
pop
dec
jno
pop
xchg
push
movs
xchg
pop
dec
int
loop
xchg
push
xor
out
pushf
rcr
inc
movzx
test
jmp
inc
jge
out
push
das
(bad)
dec
lods
pop
retf
icebp
rcr
in
out
cmps
push
(bad)
pop
sbb
push
test
add
mov
das
out
pop
xchg
ret
push
loope
sahf
mov
xchg
or
ret
mov
cmp
dec
scas
pop
fisttp
or
(bad)
cmp
sub
sub
xor
or
fild
(bad)
jge
fcomp
sbb
sti
leave
hlt
fwait
in
popa
movs
imul
sub
xchg
dec
xor
or
popf
dec
outs
dec
imul
(bad)
ds
fidivr
push
mov
add
call
dec
out
(bad)
ins
lods
loopne
or
mov
sub
mov
and
sbb
dec
jb
or
lea
push
and
jns
ret
test
dec
xchg
add
dec
jge
jb
sbb
xor
mov
cmp
and
enter
js
gs
push
les
outs
js
xchg
add
lods
movs
mov
aam
icebp
out
sbb
mov
jo
cmp
popf
xor
pushf
into
xor
mov
cwde
xor
(bad)
jns
je
jl
push
jns
lods
xchg
push
enter
jnp
mov
adc
in
push
aaa
fnstenv
push
popa
aam
lock
add
pop
dec
pop
sbb
popf
loop
(bad)
jmp
mov
push
shr
push
mov
sub
ds
cmp
mov
adc
mov
fiadd
xchg
mov
mov
outs
in
(bad)
(bad)
mov
jo
sub
pop
xchg
test
jo
or
aas
jns
loopne
fs
movs
push
mov
dec
cmp
cld
mov
push
cmp
aad
jp
icebp
pushf
mov
xchg
icebp
inc
fwait
push
aas
or
adc
mov
jns
and
(bad)
add
jmp
retf
jmp
and
pushf
adc
jp
mov
fmul
xor
arpl
stos
xlat
adc
mov
or
jmp
in
fwait
push
(bad)
sub
sahf
adc
add
adc
aas
jo
sub
scas
out
call
sub
jmp
rcl
loopne
inc
popa
mov
fs
push
jae
cmp
and
popf
daa
sub
cmps
jp
jnp
cmc
sbb
pop
movs
data16
or
xor
cmp
mov
(bad)
std
fcmovnb
mov
cmp
push
in
imul
jae
cmps
sbb
xchg
cwde
cmp
push
sbb
icebp
ins
lds
in
jg
cmp
push
int3
cwde
hlt
pop
and
push
xlat
movs
shr
cld
out
ffreep
or
xchg
pop
cdq
dec
cwde
out
js
imul
cmp
lods
pop
and
call
mov
push
and
sbb
xlat
and
adc
push
movups
sub
rcl
(bad)
lods
inc
add
mov
icebp
xor
aaa
movs
scas
sbb
cwde
cmp
cmp
adc
pop
jnp
pop
aaa
jp
lds
dec
mov
(bad)
outs
aas
fistp
test
xchg
call
nop
push
hlt
or
mov
cmc
hlt
std
mov
jbe
cmp
in
mov
popf
pop
push
push
movhps
(bad)
ss
add
(bad)
out
xor
lods
push
es
stos
ins
or
xor
or
push
test
sub
pop
push
and
std
sahf
lock
fmul
and
fdivp
adc
xor
aad
loope
mov
repnz
out
mov
cdq
sub
test
sub
ficomp
fst
shr
popf
daa
add
imul
xchg
outs
cwde
into
sbb
xchg
mov
sbb
or
cmp
(bad)
sbb
sbb
daa
scas
(bad)
dec
jbe
sbb
lods
sub
cmc
xchg
sub
add
or
(bad)
sub
mov
cmps
mov
sbb
dec
mov
push
push
in
pop
loopne
cmps
pushf
inc
pop
(bad)
movs
stc
xlat
out
or
enter
ficom
ins
popf
pop
sbb
cwde
sub
fwait
push
mov
sub
movs
out
dec
(bad)
push
xor
mov
sti
push
scas
xor
xchg
mov
hlt
ss
outs
inc
cmp
sbb
cwde
cmc
xchg
lahf
not
add
mov
ror
push
add
popf
push
aad
xchg
repnz
call
cwde
or
repz
into
push
lea
pop
lahf
enter
adc
pop
or
(bad)
mov
pop
js
pop
jne
fmulp
ret
inc
or
pop
movs
sbb
(bad)
adc
inc
push
xlat
mov
daa
dec
push
xchg
xlat
inc
push
into
or
push
inc
rol
dec
arpl
adc
cld
ja
add
loopne
mov
icebp
mov
or
push
and
pop
pusha
mov
and
jp
push
mov
xor
stc
out
sbb
sub
hlt
cmps
jmp
retf
pushf
sti
mov
lods
inc
rcl
dec
jmp
jo
mov
pop
popa
jae
ret
sbb
cmp
sbb
or
push
adc
les
nop
jns
retf
imul
adc
mov
test
adc
adc
nop
imul
lea
sbb
push
xor
in
out
and
cmp
adc
cli
pop
xchg
sbb
sbb
pop
mov
stos
dec
imul
popa
or
out
mov
out
mov
fisub
jb
sbb
and
cs
scas
int3
cmp
mov
sub
fisttp
mov
sub
pop
add
dec
shl
mov
ins
and
fs
push
and
add
ins
cmp
or
pushf
stos
xchg
int3
sar
add
xchg
cmc
push
mov
pop
in
pop
dec
js
sbb
stos
lods
ss
repz
push
sub
xchg
enter
jmp
xchg
pop
sbb
lahf
xchg
setno
ins
or
mov
and
imul
retf
add
mov
adc
daa
adc
pop
dec
inc
outs
in
jl
test
add
mov
xchg
xchg
ror
adc
cmps
cmc
xchg
inc
pop
inc
enter
aaa
xchg
neg
outs
mov
ins
dec
fst
mov
fmul
push
(bad)
cdq
rcr
cmps
jae
inc
jno
xlat
xchg
fs
adc
test
dec
push
ins
inc
sahf
and
retf
repnz
lods
les
rcr
int3
push
mov
(bad)
cmps
mov
jbe
jns
bound
aaa
add
imul
jmp
(bad)
repz
jmp
sub
cmp
mov
loopne
js
jnp
mov
test
mov
add
dec
add
mov
int3
inc
cmp
xchg
cmc
xchg
or
mov
(bad)
or
add
inc
mov
stc
(bad)
repnz
pop
pushf
adc
retf
sub
jle
mov
loop
(bad)
arpl
stc
mov
pop
mov
adc
in
mov
loop
or
les
pop
jb
out
lahf
mov
mov
rol
dec
fwait
jge
(bad)
dec
add
fwait
in
cld
or
(bad)
call
xchg
push
add
loopne
cmc
xor
adc
lods
enter
call
les
push
inc
mov
out
or
or
mov
out
dec
add
inc
(bad)
mov
and
or
dec
ds
push
sbb
or
in
mov
addr16
inc
push
stos
and
dec
fcom
add
or
ja
mov
jno
mov
into
inc
xchg
bound
adc
loop
pusha
test
adc
mov
movs
das
pop
out
or
cwde
div
loop
add
mov
sbb
fmul
mov
pop
mov
hlt
(bad)
es
cmp
sub
movs
js
or
cli
sti
cwde
mov
mov
mov
add
(bad)
xchg
std
mov
int3
xchg
adc
mov
and
push
jmp
sbb
sub
cwde
test
movs
sub
dec
icebp
cs
adc
loopne
cmp
sbb
sub
icebp
cdq
sbb
loopne
(bad)
iret
std
in
inc
retf
fs
pop
push
xlat
lock
push
adc
and
xor
data16
cmc
lods
sub
cdq
mov
inc
jge
loope
sbb
fild
in
out
xchg
jb
and
sbb
adc
int3
call
outs
xchg
mov
mov
jmp
cmp
ins
cmp
ins
pop
push
dec
dec
enter
sbb
popa
xor
(bad)
push
mov
pushf
call
pop
out
or
popa
mov
xchg
shr
(bad)
stc
xchg
cmc
jmp
and
out
mov
jb
jmp
ror
jo
shr
push
scas
rcl
push
jecxz
mov
out
pop
push
aam
jne
fdivr
mov
jne
movs
add
adc
fmul
pop
pop
inc
cli
div
call
in
mov
fisub
cmps
xchg
cmp
cmc
push
das
xor
xchg
push
sbb
data16
out
fwait
rcr
ror
or
and
sub
xchg
scas
jge
arpl
xlat
or
scas
mov
inc
pop
addr16
push
neg
movs
mov
shr
leave
and
sub
or
fisubr
and
lods
cmp
mov
push
push
or
fwait
inc
int
test
cmp
lods
(bad)
inc
jo
push
push
int
or
int
push
push
xor
push
inc
mov
sub
push
out
rol
jns
inc
mov
in
lds
xor
lds
push
aaa
lods
mul
jmp
bound
bound
lods
addr16
test
pushf
push
call
inc
ror
pop
and
rol
rol
xor
cwde
ja
push
and
add
pop
jle
push
xchg
and
mov
hlt
xchg
mov
data16
jo
test
pop
jmp
hlt
fs
mov
loope
sub
fwait
pop
xchg
and
(bad)
dec
xor
test
ror
inc
jge
dec
push
fistp
dec
adc
ret
and
add
test
fsubr
jmp
xchg
out
lea
out
add
xor
popf
stc
xor
sub
push
dec
jae
(bad)
pop
jmp
fst
out
mov
mov
test
push
aam
test
in
cld
inc
sub
pop
jbe
push
cmps
push
mov
jge
mov
sbb
bnd
mov
dec
scas
inc
daa
retf
mov
sahf
int
inc
(bad)
mov
out
add
adc
lea
icebp
sbb
pop
addr16
mov
enter
pop
rcl
mov
movs
jbe
in
xor
outs
or
int3
mov
daa
jbe
jmp
popf
xchg
jo
pop
aad
push
je
inc
scas
or
jmp
dec
add
cmp
jo
je
jns
pop
call
mov
in
xor
jge
leave
or
jecxz
hlt
mov
push
sub
imul
adc
imul
jmp
mov
je
xor
loopne
add
fs
imul
ds
fbld
sub
(bad)
aas
leave
cmc
nop
adc
in
test
adc
sbb
dec
sbb
pop
aas
jbe
aaa
jb
or
repnz
add
out
adc
stos
dec
into
sbb
pop
call
inc
ret
test
and
dec
lods
shr
(bad)
pop
syscall
dec
in
fst
sub
mov
aam
xor
jmp
imul
pop
and
fs
rcr
hlt
rcl
fs
and
shl
imul
idiv
int
xlat
xchg
aas
mov
mov
mov
pop
jnp
xor
pop
jne
dec
jbe
cmps
jecxz
sub
outs
outs
hlt
cwde
jbe
ins
or
ja
mov
test
inc
pushf
and
sub
sti
inc
mov
push
xor
int3
add
xor
pushf
gs
dec
repz
loop
dec
cmps
sub
push
sub
arpl
push
mov
push
or
icebp
inc
imul
jno
pop
cmp
loop
mov
xchg
js
push
cmove
inc
xor
out
push
sar
sbb
jo
mov
cmps
aaa
push
mov
and
hlt
mov
jp
cmp
inc
jno
popf
and
push
stos
cwde
pop
push
cmps
arpl
xchg
rcl
stc
sahf
or
lods
lods
mov
(bad)
fisttp
ficomp
mov
mov
sub
call
inc
loop
push
fiadd
xchg
xchg
in
leave
mov
inc
adc
sub
pusha
sbb
pushf
ins
sub
sbb
outs
mov
out
jae
out
stos
inc
add
sar
mov
or
xchg
and
outs
ins
shl
mov
mov
push
mov
dec
iret
sahf
mov
mov
adc
mov
mov
test
add
push
sbb
pop
mov
(bad)
data16
out
test
imul
stc
popf
fcomi
ja
dec
dec
mov
jecxz
ins
inc
cdq
sub
xchg
or
push
jmp
mov
push
add
cmp
inc
xlat
jae
jecxz
inc
fcom
and
aas
outs
shr
ins
pop
fistp
retf
add
mov
mov
popa
(bad)
or
fxch
jno
stc
int
jp
sahf
ret
sub
out
push
push
add
in
mov
imul
add
cmps
add
sbb
lods
repnz
xchg
ins
xchg
imul
jnp
jmp
cmc
pusha
stc
test
add
xchg
aas
outs
es
add
cmp
into
sbb
jg
outs
mov
adc
inc
dec
sti
fild
aad
mov
aad
fimul
adc
shl
sbb
mov
xchg
xor
and
pop
in
push
test
mov
lock
loop
add
cmps
xor
cmp
popf
or
test
push
or
cmp
cmps
pushf
addr16
sub
cmp
mov
popf
clc
push
aaa
lahf
retf
push
mov
shr
and
clc
inc
cs
je
in
cmp
imul
xchg
loop
xchg
push
mov
add
(bad)
jecxz
lea
call
lock
ins
jno
xchg
sbb
dec
xchg
pop
test
xlat
inc
pop
repz
sti
mov
addr16
xchg
add
shl
dec
loopne
stos
mov
xchg
iret
aad
inc
inc
daa
addr16
fldcw
clc
inc
mov
cmps
push
xlat
mov
mov
lahf
and
mov
mov
aaa
sbb
(bad)
mov
imul
push
lahf
adc
add
pop
data16
stos
xor
outs
add
ds
retf
imul
pop
or
out
pop
ffree
cmp
jno
mov
and
pop
lea
add
sub
movs
adc
dec
dec
mov
xchg
add
in
adc
in
pop
gs
fsubr
ss
or
adc
push
loop
in
jle
retf
mov
div
ins
mov
add
cmps
fstp
jecxz
pop
cmp
jns
fisub
icebp
push
adc
ret
push
jmp
xchg
adc
sbb
inc
mov
mov
dec
out
mov
adc
and
imul
cmp
jecxz
cld
ror
push
cld
pop
pop
inc
sub
jp
test
adc
sbb
ret
pop
cmp
out
and
sar
loop
aas
popa
in
pop
scas
cmps
test
les
call
mov
out
aad
sbb
dec
je
rol
(bad)
sub
repnz
leave
adc
or
and
mov
and
xchg
push
int3
loopne
(bad)
fmul
xchg
(bad)
std
retf
mov
pop
inc
sub
int3
dec
and
sub
adc
cmp
mov
add
xor
out
dec
jb
retf
inc
sub
rcl
sahf
test
mov
sti
pop
hlt
sti
aam
inc
jns
int3
adc
ret
cmps
in
(bad)
imul
dec
jle
outs
gs
aas
add
jnp
mov
int
or
ja
dec
popw
and
xchg
pop
pop
xchg
xor
cli
inc
(bad)
jmp
fsubr
(bad)
std
sti
add
fsubr
jmp
mov
adc
loope
inc
mov
jg
adc
sub
pop
jnp
jo
ja
jmp
jp
mov
popf
jp
in
int3
or
push
into
mov
in
or
inc
das
push
aam
jg
pop
mov
movs
inc
js
add
call
or
imul
sahf
cmp
mov
xchg
jns
or
cdq
aaa
and
sub
mov
retf
mov
inc
xor
out
int
jg
push
lahf
test
jb
push
fdiv
call
push
lds
mov
movs
mov
(bad)
mov
mov
inc
std
xor
es
call
sbb
ja
xchg
cmp
mov
dec
add
cmp
xlat
sub
hlt
cli
mov
add
xchg
out
dec
dec
mov
fcmovnb
sub
jp
or
add
aas
sub
xchg
or
scas
xor
fucom
dec
out
xchg
fwait
dec
out
push
pop
cld
dec
call
lods
cmps
je
mov
jp
and
movs
mov
jns
sbb
sbb
xor
loopne
mov
inc
ja
mov
adc
cmp
nop
ss
sub
arpl
ror
sahf
inc
pop
int3
scas
or
vpmacsdql
push
addr16
dec
push
mov
stos
mov
lock
and
lods
lock
sbb
jno
dec
jmp
jl
rol
xchg
daa
xchg
(bad)
sbb
jecxz
repnz
xor
push
or
stc
mov
dec
cwde
pop
leave
and
lods
or
lds
mov
cmp
sbb
nop
repnz
cli
xchg
dec
push
dec
nop
mov
and
push
and
mov
es
cmp
jle
outs
mov
stc
xchg
icebp
sub
jecxz
mov
xchg
ffreep
sub
imul
jmp
add
push
(bad)
jle
cmc
pop
push
ret
retf
jb
or
sbb
mov
cdq
inc
lahf
cld
inc
adc
push
(bad)
jnp
(bad)
int3
xor
and
dec
stc
(bad)
xchg
rcr
shl
mov
xor
in
fistp
cmps
out
pop
dec
jmp
add
test
cmps
push
push
shl
outs
push
bound
stc
adc
and
mov
push
movs
mov
jecxz
pop
lock
(bad)
push
mov
sub
(bad)
retf
mov
(bad)
clc
ja
fist
jb
loope
shl
mov
xor
pop
ret
push
sub
fwait
jno
jmp
mov
daa
ffree
iret
dec
imul
pop
int3
ja
dec
fst
(bad)
cmp
repz
shl
test
xor
dec
pop
cmp
stos
pop
imul
pop
lods
out
mov
or
dec
aaa
add
push
pop
lahf
sti
lahf
mov
lahf
cwde
rcl
adc
int
push
cmp
xor
es
xor
sbb
imul
push
cdq
add
scas
mov
xchg
dec
outs
and
cmc
xchg
mov
or
and
outs
shr
es
inc
mov
repz
popf
or
shl
mov
and
lock
xchg
jnp
xchg
ins
mov
push
jne
jmp
inc
out
dec
jbe
mov
sahf
dec
imul
cdq
pop
test
test
xchg
push
movs
sub
fistp
jge
rcr
or
add
cmc
outs
mov
fdivr
rol
addr16
cmp
push
pop
jne
rcl
jp
mov
adc
push
mov
and
dec
push
je
jg
or
push
repnz
mov
out
mov
loopne
scas
mov
push
sbb
ret
das
push
and
cmp
mov
push
mov
stc
retw
xchg
mov
push
inc
mov
sbb
inc
xchg
imul
ins
retf
or
xchg
rcr
call
jne
adc
scas
dec
mov
and
inc
cmps
lods
sub
rcr
(bad)
cmp
jle
cmp
add
mov
mov
cmp
sahf
data16
repnz
scas
mov
cmp
inc
or
pop
jnp
imul
or
dec
push
sbb
xor
ja
pop
hlt
xlat
mov
sbb
es
and
push
push
mul
push
out
pop
cmp
aas
outs
mov
lahf
cmp
xor
pushf
xchg
pop
xor
sub
sbb
jbe
lods
loop
sbb
xchg
sbb
les
push
add
iret
pop
dec
inc
pop
loope
gs
sbb
mov
mov
pop
mov
xor
std
jne
dec
mov
xlat
aaa
xchg
ror
dec
add
sub
push
mov
dec
movhps
in
fadd
out
jmp
jl
cs
jmp
leave
mov
mov
add
movs
adc
xchg
std
sub
outs
xchg
mov
ror
sahf
xor
scas
scas
(bad)
sbb
jmp
(bad)
xor
xlat
and
mov
fst
or
lahf
out
in
mov
icebp
add
cs
sub
push
pop
ret
data16
push
in
lahf
and
and
(bad)
popa
cmp
(bad)
retf
call
loop
mov
jns
fcomp
out
jb
pushf
je
push
pop
push
ja
addr16
xor
sub
mov
cmps
xchg
or
stos
cmp
push
xchg
dec
repnz
jno
neg
sbb
pop
sbb
push
mov
fild
add
cmp
sbb
cmc
push
push
inc
aam
lock
cmp
ss
test
inc
mov
shl
or
into
test
faddp
cmps
stos
inc
jg
out
imul
add
push
retf
and
sahf
sub
xor
cdq
mov
xor
or
fwait
cwde
shl
sbb
repz
leave
or
jg
dec
mov
add
repnz
dec
push
int
mul
cmp
pusha
daa
shl
mov
in
cwde
dec
xor
sar
imul
xor
into
add
les
fadd
in
test
inc
sub
in
push
and
mov
cmp
adc
inc
call
add
adc
and
xchg
push
fnstenv
push
movs
imul
in
int3
scas
shl
aas
ror
pcmpeqb
push
xlat
popf
cmp
sbb
mov
(bad)
adc
mov
adc
dec
shr
into
xchg
adc
and
pop
mov
in
adc
lods
sub
dec
pop
dec
int3
test
cmps
cmp
mov
rol
pop
popf
or
outs
call
mov
lods
jecxz
push
imul
(bad)
or
push
jle
xchg
stos
arpl
repnz
out
sub
jl
cmp
shl
push
iret
mov
(bad)
sbb
ins
daa
imul
cmps
cmp
jg
adc
bound
sub
pop
xchg
pop
and
popa
cmp
inc
mov
and
cld
test
je
(bad)
push
cmp
cmp
ins
mov
sub
iret
ss
jo
bound
sbb
mov
sub
mov
jns
push
and
sbb
je
pop
mov
pop
or
leave
movs
xchg
pop
and
xchg
cdq
fdivr
in
jbe
mov
outs
imul
xchg
inc
pop
add
push
mov
out
inc
push
(bad)
enter
mov
arpl
xor
test
jb
arpl
stos
inc
ds
cmp
in
jmp
pop
test
repz
out
pop
je
xchg
(bad)
cld
sti
push
mov
and
and
jmp
adc
push
ja
pop
dec
cmp
mov
loope
dec
dec
or
push
out
adc
push
lods
add
add
mov
mov
test
in
ss
sub
xor
sar
xchg
push
sub
bound
push
not
dec
cmp
jne
jg
cmp
xor
sbb
ret
sahf
cmps
(bad)
paddb
jne
gs
in
jb
mov
aas
cmp
fidivr
addr16
mov
repnz
mov
cwde
xchg
mov
imul
jl
lods
imul
mov
out
daa
out
(bad)
in
mov
jmp
xchg
mov
add
adc
sub
push
in
dec
or
pop
mov
sar
or
sub
cs
scas
push
or
sahf
jmp
dec
add
dec
call
mov
(bad)
leave
shr
lods
lock
sahf
push
inc
movs
adc
aaa
pop
push
cs
es
and
(bad)
ror
pop
mov
mov
pusha
adc
push
push
in
or
addr16
stc
jno
fwait
mov
sbb
pop
cmc
or
mov
inc
and
and
loopne
fidivr
xor
jns
xchg
push
jecxz
sub
mov
mov
inc
jecxz
scas
cmp
mov
xchg
inc
cli
mov
mov
mov
jmp
sub
sub
cmp
xor
cmp
aad
mov
js
sbb
push
js
jg
stc
adc
pop
mov
fwait
inc
les
or
les
push
jecxz
jle
out
pop
cmp
mov
je
jmp
repnz
mov
jp
(bad)
jmp
shr
xor
fwait
inc
lods
fld
outs
push
dec
daa
in
and
lods
jne
cld
fwait
call
dec
neg
sub
cmp
ins
xchg
lahf
cdq
or
jns
xchg
ret
out
pushf
push
icebp
xor
xchg
ret
sub
inc
aad
inc
cmp
dec
and
xor
jae
xor
nop
out
jb
and
dec
dec
imul
push
mov
mov
jmp
cld
pop
push
sub
in
sbb
xor
in
stc
inc
lods
push
add
ins
ss
xchg
test
data16
adc
adc
std
mov
mov
cmp
jne
iret
mov
frstor
push
pop
stc
cmp
ins
xchg
mov
mov
mov
xor
xchg
les
pushf
mov
dec
add
adc
addr16
inc
jae
dec
adc
or
cmps
das
cli
push
lds
ds
jmp
jae
out
sti
cmp
imul
or
daa
jp
inc
pop
cli
mov
and
or
and
lahf
pusha
cmps
pusha
int3
push
adc
sahf
aaa
mov
(bad)
enter
dec
dec
and
repz
mov
fwait
xchg
push
loope
dec
into
(bad)
daa
xchg
jmp
mov
xchg
out
pop
inc
or
shr
movs
fnstenv
sbb
pop
out
or
mov
cmp
ss
out
xchg
jns
jnp
mov
push
jp
ins
jecxz
cmp
sbb
(bad)
push
(bad)
cmp
and
loop
sub
mov
ror
(bad)
adc
jecxz
push
xchg
sbb
sbb
push
daa
(bad)
fwait
push
ret
sub
jp
adc
outs
mov
xchg
hlt
adc
stos
sbb
pop
sbb
inc
cmp
xchg
cmp
stos
cmp
aad
fwait
sbb
leave
xor
mov
or
jp
push
jecxz
xor
(bad)
inc
jmp
cmp
mov
idiv
cmp
iret
fwait
push
xchg
test
das
xchg
mov
fs
jns
and
xchg
pop
pop
adc
daa
pop
enter
mov
lds
mov
fisttp
or
cli
sbb
cmp
add
sub
(bad)
adc
mov
sub
iret
inc
std
addr16
pop
lods
imul
loope
idiv
(bad)
in
aam
popf
mov
leave
icebp
je
outs
cmp
fiadd
cwde
and
mov
push
mov
data16
dec
inc
sub
push
jo
jecxz
dec
jns
ss
and
bound
lods
jnp
fs
mov
inc
xlat
ret
inc
aas
xchg
out
inc
pushf
xchg
push
imul
sbb
sbb
scas
cld
aas
pop
popf
out
add
outs
or
leave
pop
loopne
and
retf
ret
push
(bad)
and
jmp
or
ret
xchg
fdiv
mov
aaa
xor
xchg
sbb
and
test
jne
mov
test
or
push
or
and
(bad)
xchg
mov
cld
repnz
out
popf
loope
or
(bad)
jle
aam
test
or
sub
inc
dec
cmp
clc
hlt
push
jne
rcl
gs
popa
in
xchg
add
add
push
and
mov
mov
cmp
ss
push
pop
or
call
jmp
je
jl
int
push
dec
js
xchg
push
lds
push
cmp
(bad)
xchg
sub
mov
pushf
pop
scas
inc
add
cmps
stc
cmp
btc
scas
shr
dec
xchg
ins
cmps
rol
and
data16
push
cmp
adc
(bad)
xchg
push
inc
(bad)
std
out
mov
xor
(bad)
xor
cld
push
mov
mov
outs
sub
cwde
ror
rcl
pop
xchg
mov
sbb
pushf
std
xchg
pushf
mov
(bad)
xlat
jmp
out
outs
push
nop
pop
out
dec
mov
or
sub
(bad)
shl
les
push
(bad)
dec
enter
repnz
adc
cmc
or
in
adc
shr
xor
mov
dec
sbb
cwde
leave
xchg
push
and
sbb
fwait
stc
(bad)
dec
test
inc
nop
xor
mov
jl
clc
add
icebp
add
mov
xchg
or
dec
adc
out
mov
push
inc
js
shl
push
sub
jg
pop
cmps
ins
jmp
and
push
jae
fdivr
push
push
or
pop
addr16
(bad)
mov
adc
in
jnp
jg
mov
pop
outs
jb
add
ret
push
repnz
arpl
ins
shl
mov
imul
in
call
jne
sahf
pop
mov
mov
in
mov
gs
cmps
(bad)
xchg
ins
mov
mov
mov
es
stos
lahf
loopne
imul
out
out
bound
shl
sub
mov
mov
nop
fs
out
ffree
test
xchg
xchg
cli
mov
popf
fild
adc
shr
std
ins
shl
xchg
ror
stc
addr16
repnz
lods
out
mov
dec
cld
inc
js
nop
push
mov
bswap
cmp
loope
xchg
iret
dec
sub
aas
push
(bad)
into
sub
cli
out
les
into
mov
and
lods
and
cmp
or
out
jg
sar
xor
es
(bad)
mov
jmp
add
mov
shr
or
ins
jecxz
jae
mov
pusha
retf
mov
mov
jecxz
cmp
cld
or
daa
pusha
leave
pop
lods
rcl
push
push
push
xchg
mov
mov
hlt
out
push
popf
mov
dec
shr
xor
rcr
gs
sbb
(bad)
fscale
mov
gs
loope
mov
and
shl
xor
stos
adc
(bad)
cld
std
arpl
dec
adc
lock
out
xchg
dec
mov
jl
xor
jge
xchg
outs
inc
(bad)
sbb
mov
mov
dec
fs
xlat
jno
fistp
bound
adc
mov
sub
push
repnz
leave
mov
or
cmp
int3
call
test
add
sbb
nop
vhsubpd
(bad)
jge
loopne
cmp
sub
stc
sbb
pop
repz
push
inc
push
jno
aam
or
push
neg
inc
pop
xchg
xor
push
push
ror
sbb
cmc
lock
retf
inc
push
adc
add
lock
sbb
dec
bound
or
jge
and
stos
out
sub
imul
retf
pop
xor
jg
pop
and
fisttp
and
cmp
sub
aad
cld
movs
sub
ins
repz
out
push
pushw
inc
mov
neg
xor
mov
stos
faddp
paddw
sar
pop
(bad)
pop
mov
sbb
adc
jg
fsin
or
mov
lds
out
fidiv
jno
(bad)
xchg
xor
repz
ja
pop
xchg
mov
test
pop
and
push
dec
nop
es
mov
push
addr16
adc
inc
and
mov
adc
sbb
mov
stc
daa
in
stos
add
mov
retf
mov
sar
jne
adc
out
push
sub
sar
jp
cmp
fld
ja
sub
pop
jne
dec
pop
fld
test
mov
inc
jne
dec
imul
imul
loopne
push
pop
sub
inc
mov
mov
sbb
ss
inc
cwde
xor
inc
fld
dec
xchg
test
in
jo
(bad)
inc
mov
sbb
ins
out
clc
and
add
aam
sbb
xchg
or
pop
push
xlat
lock
dec
jp
xor
cmp
mov
adc
fnstsw
rcr
cmp
and
pop
push
push
(bad)
fidiv
pop
xchg
adc
(bad)
imul
mov
inc
dec
nop
icebp
stc
les
rcl
mov
inc
neg
cdq
mov
dec
jecxz
cmps
inc
or
xchg
rcl
dec
xor
mov
mov
dec
ins
test
inc
sbb
(bad)
in
sbb
push
aas
popf
lds
test
inc
xor
mov
je
fbstp
dec
sbb
(bad)
pop
mov
shl
push
jmp
test
lods
mov
imul
mov
mov
xor
int3
sbb
push
push
cli
jp
scas
jae
add
cld
bound
js
stos
jbe
lods
ror
xchg
pop
nop
inc
sbb
int
arpl
pop
or
and
sbb
ss
or
ret
sbb
inc
cmp
inc
or
cmp
stos
ret
push
in
div
dec
mov
gs
out
mov
inc
out
jge
fs
jbe
movs
push
jne
mov
and
ja
shl
sub
rol
sbb
mov
cmps
or
pop
retf
addr16
add
ficom
pandn
out
sbb
lss
ss
fisub
arpl
xlat
cli
popa
sub
fwait
inc
xor
(bad)
fsubr
(bad)
push
sbb
jl
cwde
push
into
dec
fnstsw
mov
pop
sahf
xor
ds
int3
dec
adc
and
mov
arpl
inc
ror
push
(bad)
(bad)
jg
add
pop
jecxz
cmp
add
ss
les
and
and
mov
bound
sub
icebp
cmp
icebp
leave
pop
push
call
cmp
ins
clc
les
cmps
push
xchg
pop
adc
int
add
and
into
stos
sbb
outs
out
jbe
pop
stc
jbe
icebp
lock
mov
ror
add
stos
jno
fwait
mov
frstor
mov
cmp
cwde
cmp
xchg
pop
stc
out
inc
cmp
adc
scas
rcl
inc
push
jbe
ins
and
popf
mov
adc
out
mov
jno
jne
mov
mov
ja
gs
mov
jl
ins
iret
xchg
inc
mov
stc
stos
cmp
sahf
mul
cdq
mov
sub
push
inc
mov
aam
dec
pop
xchg
sbb
pop
mov
push
mov
aad
xor
cmp
not
fnsave
in
adc
mov
loopne
(bad)
jnp
inc
and
jnp
fs
inc
loope
jbe
in
jnp
mov
aad
cmp
dec
adc
add
mov
js
sub
mov
loope
mov
in
sub
hlt
dec
push
mov
dec
nop
dec
mov
icebp
je
ins
mov
mov
push
fisub
(bad)
sub
mov
cld
xchg
mov
lods
into
int
sbb
and
outs
fs
sub
inc
mov
cwde
mov
adc
adc
sub
ja
jecxz
test
pop
push
add
xchg
sbb
(bad)
aaa
xor
loop
or
repnz
rol
push
in
enter
sbb
mov
mov
mov
mov
pusha
xchg
jnp
jns
inc
hlt
xor
stos
test
lods
pop
sti
dec
jmp
jle
mov
ja
ja
mov
cmp
fidiv
xor
add
fadd
dec
or
and
mov
xlat
jnp
jb
pop
inc
enter
sub
push
imul
lds
add
dec
dec
lods
and
cmp
sub
add
or
mov
or
cmps
pop
inc
daa
into
push
cmovbe
lahf
out
mov
pop
sbb
dec
push
mov
dec
jbe
(bad)
scas
aas
xchg
stos
push
xchg
loope
retf
leave
test
adc
lea
xor
pop
dec
cwde
fistp
inc
push
loopne
mov
pop
jno
inc
xchg
inc
pop
mov
push
fucom
pop
pop
sbb
sahf
out
and
out
cmps
lahf
loope
pop
bound
test
xchg
(bad)
in
jae
cmp
fld
in
jmp
sub
(bad)
and
jp
in
(bad)
mov
xor
xor
es
je
arpl
sub
add
cwde
add
outs
es
loopne
out
int3
mov
sbb
mov
(bad)
out
xor
mul
or
(bad)
adc
xor
out
in
sub
nop
loope
sbb
(bad)
popa
stos
jg
pop
dec
dec
lea
dec
fucom
inc
xor
and
cmp
adc
and
pop
popf
push
pop
xchg
cmps
sub
(bad)
out
mov
jnp
sub
ss
(bad)
loop
xlat
cmp
mov
push
xchg
jmp
xor
mov
rol
adc
jle
fld
push
mov
pop
jecxz
jmp
fsubr
and
mov
mov
cs
jnp
lahf
or
cmp
cmp
dec
dec
push
push
push
mov
repz
mov
icebp
xchg
rcr
dec
jmp
pop
(bad)
push
xchg
sbb
jns
push
fwait
out
ja
pop
xlat
push
arpl
pop
imul
jg
xchg
push
pop
push
jo
int3
stos
and
fcomp
sahf
es
jo
xor
jmp
and
fisttp
jnp
pop
punpckldq
in
sub
fisttp
scas
mov
(bad)
and
jmp
inc
mov
cmp
cs
push
lods
je
retf
sti
or
sub
inc
pop
imul
loope
sti
test
mov
push
enter
mov
(bad)
mov
lahf
fsub
in
jle
mov
mov
jnp
in
jbe
dec
repnz
inc
jecxz
or
or
jecxz
mov
repz
fwait
test
mov
js
repz
fcomp
ror
cmp
jo
(bad)
dec
(bad)
inc
jmp
xor
xchg
xlat
xor
inc
fsubr
pop
test
gs
in
shl
sbb
je
adc
pop
jmp
repz
sbb
adc
pop
xchg
aaa
xchg
xchg
imul
repz
in
and
arpl
mov
ret
lods
push
sub
rol
and
pop
and
mov
out
fs
push
dec
cmc
aaa
pop
rol
aam
pop
(bad)
jp
fisubr
icebp
dec
repnz
imul
adc
sub
retf
mov
cli
sub
jecxz
and
pop
mov
movzx
(bad)
dec
cld
mov
js
dec
clc
ret
call
and
sub
push
test
jnp
pushf
jp
stos
xchg
add
pop
pop
sbb
and
sbb
xchg
xchg
pop
pop
gs
sar
dec
int
pop
push
push
inc
xchg
mov
mov
scas
setl
test
dec
daa
cmps
retf
jnp
and
pop
inc
ins
rol
aas
jnp
pop
fisttp
repz
imul
and
push
cmp
sar
adc
add
sub
into
sbb
push
mov
xchg
mov
fwait
and
test
inc
push
aaa
push
lock
xor
pop
je
ja
cmp
dec
clc
cwde
jmp
xchg
movs
mov
test
sub
xor
loop
les
das
pop
pop
stos
mov
sti
or
out
sub
out
mov
inc
jae
aad
pop
mov
ffreep
popa
int
int3
cmp
jle
dec
or
cmps
or
mov
aad
clc
les
sar
test
jno
bound
loope
mov
idiv
push
xchg
xchg
mov
ret
jge
pop
arpl
xchg
les
xchg
imul
jb
or
mov
or
inc
cld
jmp
leave
loope
add
add
mov
or
jge
and
and
js
es
jecxz
fistp
mov
mov
std
and
stc
jg
(bad)
cmc
and
mov
jmp
cmp
sbb
dec
mov
dec
in
fiadd
jecxz
xchg
out
push
stos
sahf
cmp
jae
nop
cld
cmp
imul
dec
add
mov
call
aad
sbb
imul
jmp
push
jnp
rcl
mov
cmp
jno
xor
add
outs
gs
mov
pop
out
xchg
fist
(bad)
not
imul
(bad)
cmp
mov
pop
push
xlat
push
psubsb
cs
mov
aad
add
xchg
and
sbb
test
jbe
test
sbb
mov
loope
cwde
push
jge
pop
add
sahf
shl
add
jg
inc
inc
retf
cmp
lock
push
ret
push
xor
jbe
push
rcr
mov
mov
in
popf
inc
xchg
mov
mov
pop
mov
out
imul
data16
stos
and
cmp
mov
push
inc
std
and
ret
push
int
jmp
arpl
cmps
movs
out
inc
fdiv
xchg
xor
xchg
lea
(bad)
test
sti
aam
aaa
push
or
add
in
aam
and
ret
cmp
xchg
loopne
adc
aas
lds
cmp
scas
xchg
in
clc
jmp
pop
or
lock
inc
adc
mov
mov
mov
lahf
mov
(bad)
push
out
mov
xchg
push
aaa
or
loopne
mov
aaa
jmp
push
sub
dec
pop
jecxz
bound
mov
rcr
xchg
popf
scas
mov
sbb
inc
lock
dec
jo
cdq
std
shl
test
fcmovnu
addr16
jecxz
sbb
stos
mov
sbb
ja
mov
ja
in
sbb
mov
inc
push
arpl
adc
jae
sbb
mov
dec
xor
mov
(bad)
mov
jb
fmul
jle
and
xchg
ds
retf
hlt
int3
mov
call
push
pop
out
(bad)
sti
xor
arpl
nop
push
iret
push
cmp
mov
add
xor
loop
dec
pop
sub
adc
leave
adc
add
std
enter
arpl
cmp
xchg
add
pusha
push
mov
(bad)
fdiv
jle
loopne
movs
push
xor
paddusw
and
loopne
and
ret
cmp
call
repnz
push
sub
mov
out
or
or
int3
add
inc
cdq
retf
xchg
xchg
dec
fsubr
add
(bad)
xchg
outs
cwde
and
mov
jmp
push
(bad)
xor
or
fisttp
adc
cmp
aam
test
idiv
cs
test
sub
xor
mov
movs
shl
in
xchg
push
add
test
cdq
cmp
aaa
push
sbb
fimul
adc
adc
fwait
adc
and
sub
add
or
repz
inc
dec
mov
retf
pop
gs
jne
leave
fdivr
pop
xor
jmp
popf
or
cmp
mov
data16
sub
fs
inc
mov
loop
fmul
mov
xchg
xchg
sub
mov
mov
mov
and
pop
mov
mov
scas
test
xchg
push
mov
and
rol
fs
mov
cmp
xchg
loope
dec
ins
xlat
pop
jl
ja
aam
cmp
retf
cli
repz
cmp
jno
sub
(bad)
inc
jg
add
rol
in
in
(bad)
int3
or
fwait
or
addr16
ss
ffreep
add
mov
ins
jg
push
loop
dec
cmovle
ror
data16
sub
call
js
adc
cmp
sub
push
leave
add
add
sub
gs
ret
inc
sub
into
call
imul
fadd
sbb
cmp
cmp
test
cmp
ins
mov
xor
daa
fiadd
jmp
leave
inc
lahf
lods
xchg
jle
or
leave
mov
push
dec
push
adc
or
jmp
sub
dec
jmp
test
cwde
loop
cmp
cli
mov
pop
ret
adc
push
pop
dec
cmp
sub
dec
out
outs
popf
dec
loope
fcmovu
sbb
(bad)
fild
mov
mov
cmp
or
cmp
xchg
sub
or
loop
jecxz
int3
lds
adc
ret
mov
in
retf
shl
push
or
nop
fbld
dec
imul
pop
xor
mov
rol
movs
jmp
scas
lds
psadbw
mov
repnz
sbb
repz
and
ret
push
inc
mov
sbb
aas
push
cld
btr
(bad)
in
leave
xchg
daa
fiadd
(bad)
or
cmp
cmp
sub
jmp
cli
push
test
and
fisubr
scas
pushf
(bad)
jge
(bad)
sbb
stos
xchg
idiv
inc
and
gs
ins
add
out
mov
cdq
push
add
(bad)
cwde
inc
jmp
rcr
jl
pop
push
mov
retf
mov
cmps
sub
or
jo
std
or
or
cwde
div
pop
dec
jecxz
retf
adc
xlat
dec
cmp
push
fisttp
dec
jne
mov
push
xchg
or
cmp
std
ror
shl
push
mov
loope
add
aaa
pushf
(bad)
sar
outs
push
dec
mov
jge
out
sub
pop
cmp
pusha
scas
(bad)
aaa
repz
xor
adc
xchg
loop
ret
gs
mov
(bad)
das
stc
stos
sbb
retf
pushw
adc
inc
cwde
call
mov
inc
out
test
dec
xchg
jno
fiadd
jb
jmp
or
movs
gs
or
fsub
adc
push
push
inc
imul
jne
or
sub
jmp
mov
push
jae
or
mov
and
xchg
mov
cmp
cld
mov
cmp
cwde
aam
or
jecxz
xor
or
inc
hlt
jne
or
mov
clc
pop
inc
lods
mov
and
out
mov
jo
sar
inc
daa
and
mov
call
cmp
loope
sbb
pop
mov
or
cmc
and
aad
cmp
shl
pop
xor
dec
mov
add
mov
ds
shl
xchg
in
nop
cmp
pop
add
adc
xchg
je
mov
call
mov
push
xor
add
fist
or
cld
sbb
ja
and
xchg
les
ins
es
cmps
mov
fisttp
jnp
mov
jbe
js
xchg
(bad)
ss
xor
sub
xor
jns
push
xor
mov
pop
ja
adc
push
out
setno
and
mov
je
cmp
arpl
dec
outs
lock
ret
cmps
jecxz
jmp
xor
push
imul
cld
inc
xchg
ins
mov
daa
and
xchg
aam
out
and
ret
pop
or
pop
sub
bound
aas
call
ficom
pusha
cmps
inc
jnp
fs
pop
dec
pop
ds
int3
sbb
mov
fucomp
xor
je
loop
inc
shl
dec
jne
dec
int
adc
mov
jle
test
popa
cmps
sbb
push
ficom
ds
lods
inc
ja
fsubr
mov
and
mov
ret
sub
or
adc
sbb
adc
enter
dec
jmp
loope
test
ds
lahf
sbb
or
adc
daa
test
mov
pop
xchg
jecxz
or
jmp
out
sub
pusha
imul
and
xchg
mov
sbb
aaa
pop
sbb
xchg
(bad)
loope
cmp
repnz
lods
loope
push
mov
push
sub
(bad)
or
imul
loopne
lock
mov
jp
loop
mov
mov
xchg
fsub
lahf
and
loopne
outs
cli
clc
push
lock
adc
test
dec
mov
test
jo
xchg
mov
retf
out
loopne
cmp
mov
pop
jae
push
addr16
mov
loopne
jle
push
xchg
test
retf
ror
sub
rcr
cli
mov
mov
cmp
dec
shl
jp
or
pop
mov
mov
pop
sbb
mov
sub
clc
mov
imul
cmp
mov
mov
ret
and
xor
in
aaa
cmp
mov
arpl
aam
inc
mov
icebp
xor
jecxz
scas
arpl
pop
cdq
out
sbb
(bad)
pop
or
push
scas
jne
out
cmps
mov
jg
cmp
cmp
int3
dec
fnstenv
inc
xchg
cdq
sub
and
in
jb
arpl
push
jmp
daa
mov
pop
or
stc
les
and
push
add
cmp
add
pop
in
fsub
mov
xchg
xchg
inc
or
movs
and
inc
iret
aam
mov
pop
pushf
popf
out
ds
mov
and
dec
sbb
int
mov
sub
ret
add
mov
cmp
in
pop
pusha
dec
nop
mov
ins
ins
sti
xor
mov
mov
or
and
adc
les
xchg
or
mov
pusha
retf
jmp
push
sub
nop
inc
iret
aas
mov
jno
out
xchg
movzx
into
mov
out
stc
push
jae
add
push
cmp
sbb
pop
popf
mov
xchg
je
cs
or
aam
fwait
(bad)
adc
cmp
jg
cmp
pop
push
sbb
push
inc
sbb
or
and
repnz
sbb
mov
(bad)
movs
inc
jae
mov
lds
mov
pop
sahf
repz
lods
and
in
jnp
pop
xor
adc
xchg
ins
retfw
fcmove
jmp
cmp
sub
je
or
or
mov
test
icebp
mov
and
rcl
xor
fisttp
movs
lahf
jns
dec
push
ja
mov
dec
or
xchg
stos
adc
idiv
call
mov
dec
xchg
arpl
test
xchg
cld
inc
mov
sub
(bad)
sbb
mov
and
mov
add
adc
bound
mov
rcl
and
push
jb
cdq
pop
push
jge
push
icebp
int
punpckldq
push
sar
and
or
sbb
xor
outs
out
xchg
xchg
mov
mov
inc
arpl
mov
push
push
ins
jmp
mov
pop
mov
xlat
xchg
mov
dec
(bad)
jmp
dec
add
outs
dec
frstor
into
dec
pop
push
pop
ins
inc
icebp
mov
push
pop
jg
xchg
jb
dec
mov
mov
in
push
xchg
retf
pop
je
xor
sub
rol
mul
repnz
dec
leave
pop
push
out
arpl
xor
mov
xor
or
fwait
jle
scas
add
xchg
pop
bound
lahf
out
cmovo
idiv
js
in
add
fnstcw
and
lods
pop
cli
aad
and
inc
sti
adc
xchg
je
pusha
bound
jmp
cmp
mov
inc
and
jns
sub
pop
add
out
pop
adc
cs
xor
popa
mov
rcl
movs
push
clc
cmp
stc
hlt
add
jmp
or
cmp
call
std
jns
or
xchg
jo
jle
xor
or
mov
push
retf
retf
pop
push
scas
(bad)
xchg
push
cmp
fsubr
fnsave
cli
mov
and
shl
cmps
mov
or
repnz
xchg
cdq
add
mov
add
xlat
jl
cs
inc
(bad)
sti
popf
and
mov
imul
test
fnstcw
pop
adc
add
ror
and
loopne
add
aas
mov
push
aaa
jl
cmp
mov
pop
sahf
scas
xor
aas
outs
mov
fcomp
(bad)
mov
cmp
pop
jecxz
xchg
lahf
bound
and
inc
jge
push
clc
xchg
jmp
xchg
pop
jb
push
fiadd
outs
dec
sbb
js
int
sbb
xchg
mov
xlat
movs
(bad)
cmp
fild
add
cld
xlat
xor
add
sti
fadd
push
adc
retf
ja
sub
repz
(bad)
xchg
shl
fcmovnbe
mov
dec
dec
nop
add
and
daa
adc
dec
pop
mov
shl
xchg
cmp
mov
mov
xor
push
pop
test
adc
ds
std
jne
dec
xlat
imul
fbstp
sbb
or
sub
push
shl
and
mov
sti
mov
sbb
inc
pop
int
fwait
popa
stos
out
cmp
xchg
movs
xchg
inc
inc
cs
inc
lds
jp
and
shr
in
pop
std
cmp
ret
jecxz
cmps
jecxz
hlt
jae
dec
jne
jb
jbe
js
push
push
adc
aaa
test
push
push
ret
mov
push
test
fsubrp
pop
out
sub
jecxz
xor
xchg
pop
out
js
xchg
cwde
cmp
in
or
call
sahf
out
jnp
imul
xchg
xor
xor
retf
cmp
gs
mov
aam
xchg
je
jg
inc
mov
inc
inc
fidivr
sub
jg
into
and
xor
sub
push
sbb
cmps
jnp
ins
mov
popa
repz
repz
mov
xchg
outs
enter
cmps
mov
aas
xchg
or
pop
mov
aas
sbb
cmp
and
gs
inc
and
out
pop
xchg
mov
cmc
push
(bad)
cli
(bad)
fsub
repnz
jmp
inc
int
lods
xor
shl
scas
psllq
(bad)
fcmovu
adc
mov
retf
pop
fs
lahf
jne
daa
popf
dec
ss
sbb
(bad)
pop
xor
mov
or
test
sub
cwde
push
adc
pop
inc
cmp
movs
inc
leave
shl
sbb
mov
test
mov
dec
mov
inc
cwde
or
pop
sbb
jns
mov
mov
nop
or
push
sub
stc
dec
int
pop
sar
cmp
aad
cmp
jl
call
jno
sub
or
pop
aas
mov
test
dec
iret
sbb
mov
xchg
mov
push
popa
or
imul
rol
shl
sbb
arpl
jecxz
stos
mov
dec
cmp
cld
sbb
bound
xchg
add
jl
imul
jne
add
call
cmp
repz
inc
stc
cmp
das
int3
bound
outs
xor
out
lahf
and
mov
pop
mov
(bad)
fstp
dec
add
xchg
adc
call
jae
jg
sti
xchg
and
jbe
push
mov
inc
push
pusha
xchg
lods
inc
out
xchg
dec
pop
loop
jle
shl
inc
xchg
cmp
ja
add
add
and
xor
xchg
aaa
xchg
data16
jge
pop
leave
adc
idiv
dec
jne
aam
pop
or
push
mov
adc
xor
push
sbb
out
push
out
pushf
shl
mov
cmp
jno
xor
(bad)
sbb
fidiv
jecxz
jnp
sub
addr16
inc
cs
clc
stc
mov
push
adc
sub
jns
ins
lods
jl
or
and
popf
pop
xchg
dec
jmp
adc
jo
mov
test
mov
call
sub
push
frndint
and
inc
sbb
push
in
cmps
js
fidiv
ja
cmps
aaa
sbb
retf
retf
add
pop
popa
fcomp
repz
or
or
aas
fbld
fcomp
and
in
jae
xor
mov
ss
xchg
icebp
jp
movs
test
ins
mov
mov
mov
add
ret
mov
xchg
rcl
xchg
pop
or
jne
mov
sahf
ror
adc
sbb
(bad)
fdiv
cmp
(bad)
add
pop
pop
movs
xor
xor
sub
add
dec
stos
add
xor
int
les
dec
sbb
pop
xor
imul
(bad)
mov
arpl
add
push
add
imul
xor
aam
mov
inc
retf
jecxz
repz
sbb
inc
jmp
pop
int
sbb
(bad)
dec
and
mov
dec
cmp
retf
mov
xchg
adc
stos
ins
add
jns
es
push
cli
out
jge
inc
jle
add
mov
and
jae
jbe
pop
rol
std
inc
je
aam
sub
jo
shr
movs
cwde
js
mov
pop
inc
jecxz
push
xchg
mov
ins
add
or
aam
mov
rcr
imul
(bad)
inc
in
pop
or
loope
test
(bad)
lock
dec
fcomp
aas
push
ds
into
xor
lahf
out
or
call
jmp
rcr
add
in
push
shl
push
in
push
mov
add
ins
push
adc
dec
loope
push
mov
ins
push
loope
mov
jmp
mov
xor
ins
push
adc
lods
sbb
mov
outs
pop
dec
mov
cmps
out
jb
fdiv
shl
cmp
retf
sub
(bad)
xchg
pop
mov
push
fwait
mov
test
(bad)
mov
xor
push
les
ret
movs
inc
ret
inc
loop
push
adc
mov
popf
push
push
lea
mov
leave
sbb
movs
pop
and
mov
sub
sub
jnp
xchg
cmps
es
jmp
cmp
sub
jnp
lock
test
pop
daa
add
xor
add
sub
int
add
cmps
fdivr
data16
mov
xchg
or
ret
sbb
je
cmovp
dec
shl
pop
(bad)
das
movs
push
or
mov
ret
std
(bad)
loope
push
aam
xlat
pusha
les
pushf
into
fwait
mov
push
xchg
cli
or
(bad)
jno
setl
add
ins
xchg
cmc
cmp
mov
inc
inc
js
fdiv
jl
mov
lods
or
xchg
retf
jecxz
xchg
cld
aam
shl
enter
jmp
jmp
or
ds
out
nop
cmps
xchg
imul
sti
adc
adc
adc
jmp
jp
xchg
cmc
xchg
int3
mov
je
mov
scas
cwde
sub
xchg
xchg
cmp
std
scas
lea
jno
(bad)
mov
jle
mov
push
cmp
lds
mov
mov
jecxz
push
dec
std
inc
lock
pop
mov
pop
push
mov
adc
js
shl
pop
stos
lods
repnz
sbb
jb
pop
mul
out
mov
xor
mov
retf
sar
sbb
cmc
mov
sub
xchg
xor
mov
sub
je
sub
push
cli
xor
xor
stos
out
inc
rol
jno
add
arpl
cmp
ds
lahf
mov
push
sbb
or
pop
(bad)
mov
xchg
cli
xor
lods
mov
cmc
or
inc
push
ins
push
pop
lods
cmp
adc
aas
outs
(bad)
cmp
out
or
push
movs
fmul
mov
sub
xlat
xchg
pop
leave
rol
adc
push
sub
rcl
sub
daa
dec
out
stos
jecxz
aas
inc
inc
call
jge
jl
jecxz
movs
(bad)
and
push
test
in
cld
les
mov
or
shl
int3
push
mov
fsubp
sub
test
pop
inc
mov
sbb
icebp
(bad)
icebp
pop
cmp
lea
outs
test
adc
add
test
push
xlat
xchg
fs
cmp
dec
xor
sbb
push
loopne
adc
mov
push
jno
mov
scas
cmp
pop
lock
dec
inc
mov
cmp
repz
xchg
xlat
and
fdivr
popa
test
mov
cdq
or
stos
mov
xor
pusha
iret
in
adc
pop
mov
js
mov
sahf
imul
adc
loop
loop
hlt
pop
sbb
clc
cld
jecxz
jo
rcr
rcr
scas
mov
jno
add
cmps
sti
or
push
xchg
mov
lods
dec
add
dec
cmp
stos
dec
out
adc
push
std
stos
out
jle
xchg
sbb
int
inc
mov
sub
(bad)
data16
jbe
lea
sahf
out
in
mov
test
out
jecxz
or
inc
xchg
pop
and
mov
and
inc
out
movs
in
jge
xor
mov
adc
xchg
fcomp
inc
stos
sub
popa
imul
jb
cmp
lahf
jg
inc
stc
mov
fstp
push
(bad)
pop
xor
je
int3
xor
retf
pop
fbstp
push
pop
scas
test
xor
es
adc
loope
rcl
shl
ins
outs
pop
shld
ret
call
adc
sub
stos
loopne
mov
iret
xchg
pop
paddusw
dec
icebp
rol
lods
jb
loop
ret
jno
adc
std
sahf
xor
mov
mov
mov
ja
mov
and
inc
push
push
jge
jae
push
pop
call
sub
(bad)
sbb
lea
push
add
scas
gs
add
ins
mov
test
xchg
inc
repz
mov
out
inc
fistp
mov
xor
call
imul
push
(bad)
scas
cmp
xchg
sub
rcr
test
cmp
mov
xor
jne
add
fld
push
xchg
iret
loop
bound
push
xor
(bad)
bnd
fwait
stc
not
ja
cmp
(bad)
das
out
xor
jle
outs
xchg
mov
mov
push
std
sub
cmp
jne
(bad)
lods
mov
loop
mov
clc
push
ret
push
iret
idiv
scas
sub
ret
mov
xchg
jns
add
mov
sub
mov
retf
mov
inc
push
daa
cmp
std
rol
mov
inc
in
pop
inc
mov
sbb
adc
cs
test
icebp
push
cli
push
xlat
ficom
in
inc
ins
cmp
push
sbb
in
lea
es
pusha
xchg
pop
xchg
or
cmp
out
mov
ja
and
push
adc
jle
cld
xchg
ret
push
cmc
push
adc
jl
int3
fld
(bad)
lahf
pop
jnp
pop
xor
push
jns
pop
and
pop
xlat
inc
test
loope
sahf
push
stos
add
mov
mov
mov
cdq
icebp
sub
cs
or
das
outs
pushf
rcr
(bad)
cmp
ret
imul
pusha
in
loopne
pop
rol
sub
test
mov
xchg
test
mov
pop
adc
or
shl
test
mov
add
fucomp
sbb
gs
add
mov
rcl
or
sbb
and
cs
push
push
das
push
mov
sti
adc
inc
cmp
xchg
mov
out
pushf
hlt
adc
clc
addr16
loopne
cmp
or
and
jbe
loope
xchg
fisttp
inc
inc
push
or
jge
(bad)
das
and
ins
(bad)
adc
xchg
pop
cwde
mov
es
add
push
mov
xchg
dec
mov
movs
mov
jmp
sahf
mov
jbe
retf
xchg
inc
pop
jmp
and
mov
ja
lea
repz
xchg
stos
sbb
ret
mov
pop
pop
xlat
mov
cmps
(bad)
sti
call
test
(bad)
fmul
xor
in
mov
sahf
hlt
inc
sti
and
cs
stos
adc
shl
jge
loopne
pusha
enter
xor
push
sbb
inc
cmp
mov
jl
adc
out
xrelease
jmp
int3
cwde
lods
test
inc
and
fisttp
out
aaa
mov
adc
dec
xchg
push
xchg
mov
pop
imul
jb
in
cwde
out
xchg
push
aaa
enter
add
pop
and
jbe
loop
cmp
pop
mov
mov
pop
push
jns
sub
sub
sub
ins
ja
add
sub
stos
jecxz
je
dec
ins
lahf
adc
sbb
sbb
pop
cli
xchg
gs
or
rcr
inc
or
stos
out
mov
xchg
repz
mov
mov
add
adc
cmps
sahf
fsub
cwde
xor
push
mov
adc
sbb
sub
loopne
retf
xor
popa
fmul
and
ins
mov
out
shl
(bad)
int3
xor
inc
inc
hlt
lods
mov
and
cmp
dec
aad
jne
sbb
cld
imul
movs
dec
cs
pop
or
push
mov
dec
adc
pop
xchg
pop
int3
int
mov
mov
call
inc
stc
(bad)
icebp
push
rol
jae
adc
mov
add
fcmovnu
sub
clc
mov
mov
rol
cmc
sbb
jbe
push
pop
es
jmp
sub
sub
scas
out
(bad)
push
sbb
mov
sbb
fistp
or
mov
mov
(bad)
(bad)
sahf
mov
cmp
and
push
cvttps2pi
and
push
int
jmp
and
cs
lds
pop
je
mov
inc
mov
mov
add
pop
mov
enter
in
xor
mov
and
repnz
dec
scas
mov
in
inc
iret
pop
jp
mov
or
and
ret
imul
loope
shl
iret
or
or
dec
icebp
pusha
mov
mov
stc
sbb
sti
(bad)
xor
sub
pop
mov
sub
dec
(bad)
mov
jne
in
push
cld
xchg
and
adc
jne
data16
inc
jo
xchg
test
and
add
leave
xor
cmp
faddp
dec
xor
in
sub
sbb
sub
ficom
lods
cmp
fimul
jle
dec
imul
dec
mov
jg
push
cmp
fs
adc
sub
bound
dec
in
push
push
rol
rcl
je
cmp
add
mov
out
clc
lock
mov
cwde
add
and
jle
xlat
mov
das
jnp
aaa
sbb
inc
sbb
mov
fild
adc
ins
scas
rcr
mov
icebp
xor
(bad)
in
frstor
dec
in
out
add
xchg
(bad)
js
into
test
jns
scas
rol
imul
daa
cmc
push
movs
loopne
fwait
arpl
call
inc
mov
leave
(bad)
push
sub
fild
idiv
gs
push
xor
mov
pop
add
dec
movs
xor
les
fldcw
and
pop
xchg
in
adc
jg
xchg
jns
inc
retf
dec
(bad)
pop
pop
inc
movs
push
rcl
push
mov
cmc
fisttp
int
or
aam
rcl
leave
dec
adc
mov
sub
xchg
pop
popa
aaa
ds
ins
aaa
(bad)
jno
xor
push
enter
add
out
iret
push
fist
pop
leave
loope
test
xor
or
sub
rcl
add
and
xchg
sub
adc
mov
jo
sar
retf
clc
sub
mov
push
popf
call
dec
sub
jb
jl
ror
fnstsw
mov
in
in
push
dec
lods
sbb
mov
cmp
mov
js
mov
cmp
nop
fisttp
sahf
enter
lahf
out
pop
mov
mov
adc
pop
aad
sbb
add
sbb
lahf
fldcw
pop
sbb
dec
sub
(bad)
cli
mov
jecxz
retf
mov
sbb
sub
jbe
xchg
mov
into
movs
add
and
sub
adc
imul
sub
xor
dec
cmc
sbb
sti
loope
or
fisttp
ins
push
lods
xchg
ss
and
pushf
mov
aam
or
jnp
mov
jl
jb
aas
(bad)
lock
jge
sbb
ss
sbb
in
jge
pop
ja
push
or
das
add
xchg
sub
jns
sbb
pop
push
xchg
iret
mov
cmp
sub
mov
fmul
(bad)
(bad)
clc
ss
mov
call
or
mov
dec
sbb
cdq
pop
or
adc
imul
icebp
push
nop
mov
cmp
and
jne
je
retf
sti
jle
pop
ins
pop
sti
and
rep
lahf
lods
push
cmp
in
and
enter
add
mov
cmp
adc
jecxz
and
mov
sbb
outs
jns
pop
adc
mov
mov
mov
xchg
std
imul
movs
pop
scas
mov
inc
dec
data16
pop
rol
shr
cmp
scas
aas
jnp
fucomp
xchg
mov
aad
xlat
(bad)
ins
add
sub
pop
outs
xor
inc
or
aam
pop
mov
std
cmp
mov
fwait
aad
cmps
ror
or
dec
jne
sbb
and
cmp
outs
(bad)
xchg
jp
shr
daa
push
xchg
inc
add
loope
and
xchg
fdivr
xchg
push
pop
mov
cdq
jecxz
fnstsw
push
xor
jmp
mov
cdq
mov
fyl2x
jg
ins
call
pop
pop
adc
jae
fcom
adc
or
sbb
int
push
loopne
xchg
loope
add
mov
std
daa
mov
push
pop
icebp
lods
gs
xchg
or
icebp
sub
retf
push
sbb
lock
xchg
(bad)
jmp
jae
(bad)
push
adc
out
sbb
mov
xor
adc
enter
or
lods
push
jns
jmp
mov
pop
mov
push
les
dec
mov
ffree
sbb
pop
scas
xor
out
cmp
fdivr
mov
ror
xor
add
fstp
test
push
push
fisttp
lods
mov
fnstenv
std
sub
ficom
jmp
aaa
stos
cmp
pushf
rcr
not
out
fst
test
sbb
sbb
adc
jmp
mov
xlat
jg
test
cmps
or
scas
push
dec
jno
pop
mov
jl
rcl
cld
inc
stos
sbb
mov
cmp
jae
fsub
xchg
mov
int3
dec
pop
push
call
sbb
(bad)
stos
hlt
jle
ins
xor
mov
sbb
and
inc
add
cmp
aam
ds
dec
idiv
test
mov
(bad)
pushf
add
cdq
jb
mov
in
mov
cmp
(bad)
cmp
xchg
xor
push
pushf
pop
and
enter
lds
(bad)
fdiv
jge
cmp
xor
shl
mov
mov
or
in
pop
aad
or
iret
pop
push
mov
add
mov
adc
ret
jle
or
cmp
stc
xor
push
jb
sbb
adc
add
mov
(bad)
xor
push
clc
cli
gs
ins
enter
stos
mov
leave
mov
pop
test
mov
repz
mov
inc
mov
mov
add
jge
das
scas
std
test
sti
or
ins
mov
outs
sub
fnsave
(bad)
not
push
cmp
cwde
ins
add
sti
out
gs
cld
int
(bad)
xchg
jp
jmp
les
daa
xchg
mov
mov
pop
daa
repz
xchg
aaa
adc
leave
mov
jno
cmp
(bad)
(bad)
addr16
(bad)
jns
mov
sar
and
aad
ret
and
sub
hlt
and
div
adc
lods
cmp
sub
sahf
cwde
dec
adc
jns
hlt
stos
pop
jle
xor
aam
jp
jb
sti
lock
int3
mov
lods
(bad)
out
or
mov
movsx
in
fild
jp
stos
mov
scas
or
jae
out
sub
jbe
push
jp
dec
dec
cmp
int3
xchg
aaa
mov
(bad)
addr16
and
out
fnop
out
xor
sbb
xchg
mov
cmps
sbb
je
add
sti
(bad)
push
jo
out
xor
out
in
cs
ins
xchg
pop
jmp
pop
pop
in
xchg
iret
mov
cmp
or
or
dec
inc
xor
xchg
xchg
jb
mov
sbb
sub
inc
cmp
xchg
add
mov
fild
mov
lods
mov
data16
aas
cdq
inc
mov
(bad)
loop
mov
jns
das
je
in
mov
mov
mov
sub
push
xor
jbe
inc
jae
adc
movs
pushf
popf
popa
out
xlat
mov
mov
lods
push
adc
pop
mov
mov
or
ds
adc
bound
xchg
(bad)
xchg
push
pop
jmp
ds
fst
cmp
out
add
sub
dec
or
loop
push
daa
push
inc
sub
adc
stc
inc
jb
pop
out
movs
mov
out
loopne
pusha
fist
cmp
mov
sub
or
pop
test
and
xchg
pusha
xchg
int
stos
outs
aaa
mov
jle
mov
cmp
in
push
int
scas
inc
dec
(bad)
rcr
dec
iret
push
ss
retf
ror
jno
add
or
loope
dec
cmp
push
push
lods
test
mov
shl
rcl
outs
stc
or
lods
sub
xchg
xlat
or
sub
inc
int3
out
aam
add
ret
mov
aam
mov
xor
jmp
pop
push
xor
jno
xchg
adc
jp
loopne
stc
out
mov
(bad)
test
aad
jae
movs
jle
mov
add
xchg
ds
sub
fimul
leave
fldenv
fs
sbb
ret
test
adc
jle
sub
stc
jmp
lods
(bad)
jnp
repnz
or
sahf
xor
test
cdq
lock
sub
add
cmp
movs
stos
fdivr
je
and
mov
push
imul
mov
sti
outs
and
retf
fs
dec
xor
lock
mov
or
pusha
mov
enter
into
xchg
ds
dec
sti
cmps
or
inc
dec
xor
dec
inc
xor
lds
and
shr
cld
push
hlt
arpl
daa
int3
mov
push
adc
or
dec
push
call
cmp
in
fcmovne
out
fcom
fimul
ss
xor
xchg
fst
cmp
or
pop
ja
jmp
pop
ret
loop
adc
sbb
fadd
push
je
pushf
pop
and
jg
and
les
mov
ror
scas
mov
rcl
leave
xor
loopne
cld
xor
repnz
fcmove
cmp
xor
xchg
cmp
sbb
ret
add
fld
jb
shr
fcom
cs
lds
add
popa
mov
mov
add
sbb
movs
lds
jae
stc
stos
and
cdq
retf
ret
xor
sub
xor
xor
mov
jo
sub
repz
dec
aaa
dec
ds
rcl
sub
clc
aas
mov
sub
fstp
imul
ins
test
movs
hlt
inc
cmps
pop
inc
(bad)
or
jle
push
and
cmp
cmps
fimul
sahf
mov
add
jge
loop
add
cli
rol
in
push
dec
repz
sahf
sti
aam
fwait
pop
pop
cmps
and
(bad)
pop
imul
push
pop
retf
data16
or
out
scas
mov
ret
in
inc
rol
lods
arpl
fbstp
sub
pop
scas
and
pxor
popa
inc
lds
int
inc
adc
jno
pop
movs
sub
cwde
mov
std
pop
loop
into
jbe
imul
mov
add
sbb
push
mov
shr
mov
dec
inc
inc
idiv
ins
mov
adc
mov
repz
retf
jle
dec
iret
mov
sub
repnz
(bad)
dec
sti
adc
std
pop
int
jmp
mov
leave
scas
test
dec
add
add
leave
pop
inc
pop
(bad)
mov
call
jmp
in
mov
bound
or
pop
je
adc
push
in
lods
dec
cld
adc
pop
or
fs
shl
movs
push
stc
cmp
imul
clc
and
dec
mov
(bad)
dec
arpl
push
mov
inc
ds
jp
pop
mov
or
call
jae
sub
sbb
fiadd
sub
push
call
pop
fist
pop
add
or
xchg
and
xor
xor
ins
iret
xor
ds
hlt
push
mov
(bad)
xlat
jmp
enter
mov
adc
pop
ror
or
pop
sbb
es
in
push
call
adc
gs
pop
and
fisttp
inc
mov
jb
sti
adc
movs
add
push
ds
loope
or
pop
jmp
xchg
sbb
xchg
pop
mov
mov
push
and
call
clc
fbstp
push
pop
pop
or
popa
fsub
sbb
(bad)
adc
push
adc
setnp
and
add
xor
ret
xchg
fbstp
xchg
es
out
or
loop
(bad)
mov
into
nop
mov
cmp
imul
mov
sbb
mov
test
ins
popa
inc
push
mov
popf
and
cmp
loope
mul
dec
int3
xor
jecxz
jnp
imul
xchg
mov
and
inc
mov
les
ret
outs
outs
arpl
test
fwait
mov
out
push
cld
pop
inc
sbb
inc
pop
mov
mul
in
outs
and
movs
test
pop
jl
jbe
(bad)
mov
test
scas
les
dec
and
(bad)
aad
push
repz
mov
out
add
stc
enter
test
push
xchg
in
ja
mov
pusha
cwde
div
movs
xor
mov
xchg
add
mov
push
imul
cmp
repz
pop
jb
fdivr
push
pop
out
xlat
repnz
cmp
stos
lods
mov
and
jno
repnz
xchg
xchg
inc
ret
sub
loope
rcr
push
pop
inc
mov
add
loope
mov
push
or
fwait
jge
and
push
pop
pop
xchg
popa
xor
iret
push
pushf
push
repnz
pop
mov
jmp
addr16
jg
sbb
stos
jmp
ds
icebp
inc
(bad)
cld
(bad)
or
add
xchg
(bad)
cmp
jno
lods
mov
cmp
pop
cmp
pop
jle
clc
dec
sub
pushf
add
sbb
hlt
repnz
in
push
and
mov
add
xchg
(bad)
jp
scas
xor
mov
repnz
mov
int
inc
add
jae
pop
cmps
out
(bad)
adc
es
lods
mov
jecxz
mov
inc
in
adc
or
add
mov
jmp
imul
test
cmp
pop
inc
repz
fisub
push
cmp
sbb
push
jecxz
and
neg
xchg
cmc
cmp
loopne
sar
ret
pop
sbb
imul
push
repz
xchg
js
repz
retf
out
mov
mov
cwde
retf
lea
mov
out
cmps
jo
sub
dec
adc
add
lock
cmp
jbe
adc
xchg
ins
sbb
scas
jmp
sub
xor
push
lahf
xor
rcr
pop
sub
xor
scas
lahf
pop
in
pop
ja
retf
imul
retf
pop
cs
cmp
retf
sahf
ds
imul
je
xchg
push
inc
call
les
cmp
out
popa
cmp
xchg
xor
scas
loope
pop
pop
jns
cli
jno
ins
inc
cld
(bad)
daa
(bad)
stos
lock
ds
dec
add
loopne
stos
mov
ds
call
je
repnz
push
mov
cmp
(bad)
aas
push
dec
or
jg
and
movs
mov
xchg
adc
push
scas
jecxz
or
pop
xlat
fstp
add
fild
jmp
lods
sbb
sub
and
or
add
sti
lock
nop
push
movs
push
in
fs
adc
mov
gs
fmul
dec
std
dec
sbb
pop
push
pop
push
(bad)
mov
loopne
mov
pop
aad
loope
pop
xor
or
test
pop
add
es
lock
adc
sub
mov
xchg
mov
outs
xchg
arpl
sbb
cs
imul
pop
sbb
mov
sub
mov
addr16
add
and
jne
lds
dec
in
sahf
pusha
repz
xor
jne
fisttp
sahf
mov
pop
xchg
sti
mov
pop
pop
mov
mov
jecxz
into
cld
jp
jmp
sar
in
inc
sar
(bad)
lea
or
sbb
xchg
cmps
and
aas
imul
cmp
adc
int3
mov
lahf
sar
test
lods
sbb
pusha
xor
jl
(bad)
in
mov
fisttp
nop
movs
pusha
aaa
loopne
xor
popa
(bad)
mov
in
in
mov
push
dec
stos
mov
mov
push
adc
jno
sbb
pop
sbb
movs
cmp
sahf
outs
jbe
ja
nop
dec
test
inc
(bad)
jg
dec
or
xchg
scas
pop
out
dec
ins
sti
xor
das
cmp
xor
cmps
out
stc
pusha
sbb
cmps
out
mov
lahf
cmp
mov
popf
cdq
test
or
jmp
arpl
pop
xchg
out
mov
add
cmp
ror
pop
shl
mov
cs
inc
mov
jp
and
iret
shr
cmc
xchg
retf
sub
xchg
js
push
adc
jne
adc
movs
shr
cwde
xchg
mov
dec
inc
inc
loop
adc
pop
iret
sbb
in
int
sub
fxch
(bad)
rcl
xor
jmp
movs
jmp
xchg
pusha
bound
into
xchg
push
test
mov
jae
mov
jmp
mov
test
mov
(bad)
shl
shr
ret
mov
jns
mov
popf
fisubr
adc
outs
dec
aas
jp
sub
es
out
ds
push
(bad)
(bad)
nop
fisubr
xor
pop
test
cmps
fucomp
outs
xchg
out
push
not
sbb
aad
jge
pushf
loop
and
cs
sub
es
mov
ds
bound
mov
aas
aam
fbstp
aam
dec
movs
aam
out
lock
push
sub
add
out
sub
out
retf
sbb
push
into
jo
pop
and
daa
xor
shl
and
jmp
jo
lock
(bad)
xor
aad
dec
scas
sahf
pop
push
retf
add
cmp
(bad)
repz
dec
imul
scas
gs
dec
xchg
ins
inc
fcmovne
lss
outs
loopne
push
cmp
arpl
xchg
or
dec
cmp
jae
fmul
hlt
cmp
xchg
xlat
push
add
adc
cmp
(bad)
dec
enter
push
lods
not
cmp
fmul
out
xchg
or
xchg
hlt
sub
and
in
test
(bad)
cmps
loopne
pop
cmp
mov
(bad)
out
dec
cmc
dec
cwde
addr16
repnz
or
mov
pop
inc
pop
xchg
sbb
mov
push
mov
mov
adc
test
xchg
push
fsubr
stos
jns
bound
pusha
mov
inc
es
jae
mov
pop
push
stos
out
inc
adc
in
adc
in
push
test
or
retf
jle
inc
aas
adc
icebp
push
ins
cmc
ins
repz
xchg
pop
sahf
repnz
mov
lock
sub
mov
shr
xchg
ss
add
movs
rcr
or
test
(bad)
sti
dec
cmps
jae
dec
stc
xor
lea
data16
mov
popa
(bad)
cld
(bad)
stos
dec
ds
mov
cmp
mov
shl
xor
xchg
call
shl
jno
xor
std
outs
lea
(bad)
ja
test
mov
adc
cli
push
mov
jno
inc
mov
and
sbb
cli
add
bound
dec
fst
adc
mov
clc
adc
cmp
jb
pop
and
mov
aad
rcl
xor
(bad)
jle
les
sub
in
push
sub
or
out
iret
ja
xor
inc
mov
xlat
cs
inc
inc
aad
daa
push
cmp
push
aas
mov
pop
shl
(bad)
cdq
popf
mov
fdiv
test
repz
mov
cmc
inc
mov
inc
popa
cld
or
cmp
stos
xor
dec
das
inc
jns
into
mov
sbb
adc
push
stc
test
add
sbb
lods
(bad)
sbb
dec
sub
out
sbb
pop
aad
xor
js
pop
hlt
jmp
pushf
sub
xor
sbb
inc
add
enter
mov
or
sbb
adc
in
jge
push
cld
mov
lea
sbb
cmc
(bad)
inc
fs
ins
ss
jecxz
mov
aaa
inc
clc
pop
inc
dec
pushf
mov
rcl
or
mov
add
dec
ins
ret
jl
cli
mov
mov
ret
adc
lods
sbb
add
dec
stos
fnstcw
movs
popf
cwde
into
repz
mov
jle
mov
jns
mov
adc
push
hlt
mov
out
adc
pushf
xor
fmul
sub
rcr
into
xchg
stc
bound
xchg
jp
and
ud1
(bad)
repz
daa
ins
cs
cmp
popa
fmulp
cs
es
sahf
sub
add
inc
push
dec
mov
push
cmps
mov
dec
cli
xor
out
inc
push
adc
in
and
mov
loope
idiv
mov
popf
cli
jmp
sub
inc
pop
das
neg
ds
cmc
pop
retf
pop
mov
sbb
sub
int3
test
arpl
adc
cmps
ss
call
int
inc
or
in
pushf
inc
lods
not
push
cmp
lods
ins
out
fucom
jbe
lods
xor
jp
ds
lock
cmp
jl
adc
mov
sar
out
jbe
and
hlt
icebp
out
adc
sub
xchg
push
add
out
js
das
gs
inc
jmp
xor
cmp
mov
pop
out
loopne
aad
add
xor
movs
pop
jge
jnp
aaa
or
dec
xchg
scas
xor
mov
push
mov
sti
adc
dec
mov
in
inc
imul
scas
add
not
aas
add
cdq
das
test
js
shl
movs
push
inc
add
cmc
mov
int
dec
ror
scas
xchg
aad
jae
int3
lahf
or
pop
or
inc
inc
sbb
outs
mov
out
fwait
and
push
add
mov
mov
aad
jp
cmp
push
loop
outs
popf
out
jns
mov
es
int3
dec
push
loop
jnp
(bad)
mov
clc
inc
pop
addr16
sti
sbb
retf
mov
mov
mov
enter
sub
dec
add
xchg
push
imul
icebp
iret
mov
retf
(bad)
mov
pop
or
cmps
sbb
jbe
xor
mov
jg
imul
cld
push
or
cmp
xor
icebp
lods
jg
neg
mov
jb
test
retf
movs
aam
stos
push
add
fs
jl
mov
stc
mov
ins
icebp
fcomi
fldenv
fdivr
addr16
bound
loopne
ins
xchg
fistp
mov
arpl
sub
jg
std
rcr
push
shr
loop
xor
add
rcr
dec
push
int3
pop
(bad)
mov
sbb
lods
sub
jns
mov
jae
mov
push
dec
dec
cmp
jno
pop
push
sub
adc
dec
add
enter
lods
retf
add
adc
jp
test
es
ds
je
jns
scas
fs
inc
fstp
cli
stos
cmp
cmp
ss
data16
inc
cmp
jb
pushf
cmp
mov
fisubr
rcr
mov
lds
scas
or
xor
hlt
mov
sar
mov
aam
shl
mov
js
pop
outs
or
sub
mov
pop
sub
out
mov
out
dec
or
in
xchg
pop
das
ds
inc
arpl
mov
ja
dec
or
bound
sbb
mov
inc
leave
(bad)
push
jge
dec
add
icebp
retf
lahf
mov
jnp
cli
rol
cld
jbe
(bad)
out
sub
jg
adc
imul
aad
cmp
or
xchg
cmc
ret
xor
or
sti
pop
inc
add
jl
in
into
dec
sub
(bad)
enter
(bad)
mov
js
stos
push
and
pop
dec
repz
inc
jne
rcl
mov
pop
add
pushf
sub
cli
sbb
mov
out
push
gs
adc
jmp
inc
mov
shl
push
jecxz
add
jb
int
push
mov
mov
popa
aad
inc
cmp
(bad)
xchg
mov
movsx
mov
push
cmp
sar
mov
and
outs
lea
mov
sub
mov
push
jmp
arpl
push
mov
sbb
(bad)
push
out
out
jecxz
daa
add
xor
dec
push
mov
push
pop
shl
and
mov
or
xchg
xor
or
fnstenv
std
push
cmp
dec
dec
aad
test
cwde
dec
inc
mov
mov
mov
pop
inc
push
pop
mov
cli
mov
pop
or
jg
fcom
push
xchg
mov
cmp
movs
nop
aaa
xchg
aad
pop
or
sar
mov
and
imul
cld
retf
or
test
or
push
in
mov
adc
cmps
iret
cmp
lahf
add
mov
scas
neg
dec
jno
cmps
ret
das
mov
aas
rcl
mov
data16
mov
movs
mov
jbe
mov
inc
mov
test
add
out
pop
fwait
push
fstp
or
mov
jp
sbb
cdq
jno
xor
jb
mov
(bad)
les
jp
jbe
fisubr
mov
fisub
adc
outs
aam
int
add
retf
xchg
adc
mov
les
arpl
nop
retf
inc
fsub
imul
adc
mov
cmp
sbb
int3
xchg
add
xchg
aad
fnstsw
xor
push
mov
sar
add
je
or
cmp
xchg
adc
popf
xchg
dec
cmps
dec
inc
into
xor
inc
mov
int
mov
imul
mov
imul
mov
jp
xchg
or
mov
jmp
mov
pop
and
cmc
dec
or
xchg
fimul
inc
jecxz
pop
popf
push
or
aas
mov
push
aad
mov
jns
loope
fimul
mov
sub
cmp
mov
xor
push
or
out
call
or
aaa
nop
mov
mov
mov
cs
mov
mov
sub
(bad)
ja
(bad)
fadd
gs
in
stc
push
sahf
arpl
enter
in
sbb
out
or
jge
dec
das
jno
movs
inc
rsm
leave
(bad)
imul
inc
jmp
xchg
or
test
mov
(bad)
push
movs
push
jbe
outs
call
shr
and
or
inc
push
cmps
mov
xchg
lods
sti
fs
inc
add
inc
cmp
add
and
add
inc
cli
adc
mov
mov
lds
gs
push
hlt
(bad)
cmp
jl
adc
push
add
mov
gs
loop
dec
push
and
mov
in
inc
dec
xchg
(bad)
ds
xchg
fs
mov
lock
(bad)
add
jae
clc
pop
and
retf
mov
sub
dec
cwde
stos
push
adc
cmp
inc
test
jle
mov
inc
xlat
xchg
rol
add
mov
xor
jno
and
mov
mov
jb
std
or
shl
pop
lock
aam
loop
pop
(bad)
dec
mov
add
mov
adc
pop
int
xor
sbb
and
loopne
mov
inc
pop
cmc
and
mov
(bad)
and
fistp
inc
int3
adc
jae
and
fdivr
add
jo
or
lods
or
stos
jae
out
mov
sbb
loopne
mov
jb
ds
pop
fwait
push
push
jg
cmc
push
jbe
dec
adc
lock
dec
jae
cld
cmp
out
xchg
sub
sti
mov
js
or
movs
hlt
mov
outs
repnz
frstor
mov
stc
push
out
pop
xor
aaa
inc
or
pop
inc
cmc
xchg
sbb
pusha
mov
cdq
dec
adc
mov
dec
das
push
and
imul
xchg
mov
or
or
jl
push
xchg
aaa
and
inc
test
push
inc
adc
mov
xchg
inc
adc
sbb
sub
sbb
fst
pop
mov
mov
(bad)
loope
dec
mov
clc
sub
inc
cmp
xor
pusha
fisubr
pusha
dec
mov
imul
xor
and
mov
out
jne
cmc
add
clc
ret
ret
sbb
fst
je
retf
adc
in
bound
xor
ret
aaa
sahf
dec
jge
iret
icebp
(bad)
cmp
xchg
adc
jg
test
ror
sbb
pushf
icebp
sar
in
leave
cli
fs
ja
fcomp
xlat
dec
or
inc
loop
inc
stos
pop
movs
out
fdivr
lods
pop
xor
sbb
or
je
jle
xchg
fwait
adc
dec
xor
ja
add
int3
jmp
sub
inc
cmc
out
xor
push
mov
dec
pop
(bad)
dec
push
daa
fldcw
xor
jnp
push
jno
fisub
mov
jb
pop
in
loopne
adc
mov
test
das
adc
inc
xchg
push
xchg
cli
mov
gs
int3
out
cmp
xchg
cmp
push
pop
jno
dec
add
les
dec
pop
fucomp
or
in
cmps
cmp
xlat
pusha
lock
dec
sub
addr16
xchg
mov
es
jns
xchg
gs
push
iret
inc
push
pop
rol
ds
push
sub
xchg
push
movs
imul
out
dec
lock
inc
shr
in
and
popf
ds
out
cmp
daa
mov
push
loopne
loop
push
jmp
push
and
xlat
xchg
push
fild
es
(bad)
loopne
jle
fisttp
cmp
lods
loop
lea
push
pusha
in
pop
cmp
lock
call
push
lods
cmp
or
cmps
je
jae
ror
(bad)
fisttp
mov
mov
dec
scas
ja
dec
pushf
pop
retf
stos
jmp
or
cmps
(bad)
fsub
and
jge
mov
cmp
adc
aam
adc
lods
fidiv
fucomi
arpl
dec
dec
mov
scas
add
imul
mov
cmp
pop
xor
(bad)
pop
loop
stos
ins
movs
fbld
jle
adc
add
or
(bad)
or
cmp
jmp
ds
in
jnp
shl
add
xchg
jb
cmps
adc
mov
and
jo
pop
loopne
jne
ins
mov
pushf
dec
cmps
mov
xor
xchg
jmp
out
push
fs
push
enter
inc
adc
loop
xor
cmp
or
sub
in
inc
mov
mov
stc
dec
cmp
xchg
mov
adc
jmp
cmp
mov
or
int
test
loopne
(bad)
fisub
mov
mov
ja
jmp
pop
inc
dec
and
jo
je
add
add
iret
out
movs
lods
xlat
enter
push
shl
sti
dec
in
push
push
outs
movs
lahf
dec
add
into
mov
cmp
xchg
lods
(bad)
xchg
ins
pop
stc
inc
jne
sar
inc
sar
cmp
jb
in
mov
jbe
jg
lods
dec
test
cmp
sub
clc
add
push
scas
movs
(bad)
(bad)
hlt
clc
imul
scas
mov
lea
stos
and
jecxz
add
mov
mov
xchg
mov
rcl
test
jmp
sbb
aad
pop
push
cmp
rcr
dec
dec
retf
arpl
add
mov
cs
pop
retf
add
xor
fstp
adc
and
xchg
retf
fwait
jecxz
inc
jge
shl
daa
cmp
js
pop
aaa
cmp
push
jnp
stc
outs
int
pop
xor
cld
stos
lds
jmp
push
dec
jne
xchg
pop
pushf
jmp
jp
data16
cmp
and
pop
add
sub
inc
(bad)
std
xchg
mov
xchg
sub
scas
pop
xchg
hlt
ror
movs
xchg
xor
push
nop
cmps
repz
sub
pop
push
aas
sahf
jp
jnp
and
cmp
adc
ins
push
push
ds
mov
inc
icebp
imul
sbb
mov
mov
int
cdq
sub
mov
neg
adc
or
ret
addr16
fcomp
jmp
(bad)
nop
imul
iret
mov
js
add
xor
test
xor
outs
push
mov
iret
movs
(bad)
fwait
sbb
ja
(bad)
mov
retf
mov
(bad)
fwait
xchg
test
xchg
and
ret
inc
pusha
js
lock
mov
cs
dec
cli
mov
gs
fsubr
test
or
dec
iret
popa
movs
push
cs
inc
push
stos
in
jmp
int3
xchg
scas
xchg
fwait
sar
mov
sbb
mov
mov
mov
movs
cmp
cli
cmp
test
push
push
xchg
ret
and
sub
mov
daa
and
shl
ss
cmps
mov
pop
pushf
test
into
js
js
and
leave
cld
xchg
cmps
fwait
adc
mov
scas
stos
cmp
in
js
push
and
and
call
jae
mov
test
loopne
xor
pusha
add
imul
sar
shl
pushf
mul
in
mov
mov
movsx
jle
imul
adc
call
mov
stos
jecxz
fidiv
xchg
xor
dec
popf
cld
dec
div
or
jmp
mov
fiadd
ss
mov
xchg
rol
jp
add
std
rcl
mov
inc
xor
ror
jle
jnp
adc
push
cmp
mov
loope
(bad)
in
dec
mov
mov
cmp
outs
sub
and
into
arpl
ret
adc
ror
fmul
rol
pop
xchg
xchg
pop
mov
retf
cmp
call
data16
into
sti
jne
js
ror
jnp
and
pop
test
inc
ds
les
repnz
sub
in
aaa
lods
dec
push
mov
pop
bndldx
lahf
(bad)
adc
cmps
pop
pop
dec
cwde
sub
sbb
sti
aad
lea
mov
ja
cmovle
adc
mov
push
sub
fcomp
dec
or
inc
dec
xchg
xchg
pusha
in
xor
lahf
jecxz
in
or
sub
dec
push
push
jb
push
mov
ja
add
enterw
or
fistp
mov
cmps
in
cwde
leave
dec
mov
push
dec
or
aam
out
sbb
js
add
ins
add
push
mov
sub
mov
ficomp
js
sub
inc
pop
push
mov
pop
lahf
xor
sub
aaa
cmps
stos
lods
dec
in
fdiv
mov
jnp
and
jmp
in
repz
inc
call
shr
sti
push
nop
mov
dec
movs
int3
and
lahf
iret
adc
mov
in
loop
es
das
cmp
loopne
jge
xor
xor
rol
das
or
xor
shl
sub
test
jae
fisttp
sbb
cmp
rcl
mov
push
xchg
stos
pop
cmp
daa
jle
stos
(bad)
adc
add
xor
mov
test
rdmsr
or
test
add
or
push
sar
in
out
bound
xchg
mov
stos
dec
test
stos
adc
retf
xchg
retf
sub
sbb
fbstp
test
adc
out
and
out
cwde
adc
xchg
(bad)
retf
outs
xchg
repz
(bad)
es
(bad)
fsubr
scas
fadd
je
into
(bad)
repz
fst
jmp
dec
out
jl
xchg
icebp
fwait
popa
cld
mov
js
je
aas
je
js
xor
xchg
ins
(bad)
push
(bad)
mov
pop
and
jbe
sti
ja
mov
xchg
int3
jmp
test
jmp
sbb
xchg
dec
cmp
popa
cmp
movs
test
xchg
push
xor
push
push
and
cmc
(bad)
sbb
add
lods
and
shr
(bad)
mov
cmp
fild
pop
std
xchg
push
leave
push
sub
adc
(bad)
sub
ret
int3
pop
sub
and
and
jmp
adc
cmc
add
add
aas
cmps
lods
inc
fld
cs
clc
stc
mov
adc
or
adc
xor
repnz
mov
ja
jg
and
out
cmp
scas
dec
or
cmp
js
js
into
jecxz
test
stos
jb
sbb
mov
add
aam
jbe
outs
shl
adc
test
les
pop
jbe
pusha
xlat
sbb
iret
rcr
jns
xchg
push
ss
pop
jp
push
icebp
cmp
cs
icebp
gs
dec
int3
xchg
(bad)
mov
fsub
not
add
push
mov
ss
inc
loopne
xchg
cmp
sub
lock
jle
cmp
adc
cli
xor
retf
outs
pop
sbb
cld
add
(bad)
(bad)
call
and
outs
mov
xchg
call
retf
rcr
mov
out
pop
ror
(bad)
fnstenv
(bad)
mov
sub
shl
adc
imul
bound
xchg
ret
mov
sbb
(bad)
(bad)
push
(bad)
nop
shr
cmps
xchg
cli
ja
push
adc
aad
push
iret
ret
and
xchg
pop
push
iret
int3
mov
dec
pop
test
out
pop
cs
sbb
adc
and
sahf
cmps
inc
mov
retf
sbb
adc
adc
dec
cmp
cmp
and
pop
fdivp
mov
aam
xchg
daa
cmp
arpl
out
outs
mov
ja
std
(bad)
rcl
lea
arpl
jb
int3
and
cmps
sub
xchg
stos
outs
mov
or
cmc
fdivrp
ds
sahf
sbb
rep
cs
mov
pop
fstp
mov
add
jl
pop
xchg
adc
ror
test
dec
loope
imul
outs
retf
xchg
xor
cld
adc
dec
mov
into
rcl
and
(bad)
sbb
test
sti
sub
dec
ret
sbb
loope
aas
sbb
cmps
ret
push
mov
div
call
cmp
pop
out
push
adc
pop
pop
pop
cmp
adc
jecxz
or
fsubr
mov
fwait
in
(bad)
sti
inc
test
imul
lahf
and
cdq
retf
test
cmc
leave
cmp
icebp
and
mov
cmps
add
ja
leave
outs
xlat
lahf
mov
push
push
sti
cmp
mov
and
loopne
push
dec
shl
cwde
push
in
jmp
(bad)
out
xor
mov
test
pop
nop
pushf
(bad)
and
(bad)
outs
mov
dec
cdq
fwait
cmp
arpl
call
xchg
mov
jnp
shl
push
jno
dec
in
push
mov
mov
loop
retf
dec
sbb
or
aaa
(bad)
push
xor
mov
and
loopne
jp
jp
xor
lods
dec
mov
sbb
and
sub
dec
int3
stos
push
dec
out
add
sahf
ins
ds
pop
mov
aad
jl
jl
pop
adc
or
shl
(bad)
call
cld
mov
rcr
push
xor
repnz
adc
inc
sahf
and
inc
leave
lock
pushf
add
adc
inc
add
sbb
pop
sub
fadd
lods
dec
mov
popa
pop
xchg
cmp
sbb
ins
or
add
xlat
loope
inc
popf
inc
pop
adc
pop
ds
addr16
mov
xlat
ret
fwait
jne
push
imul
arpl
movs
out
adc
rcr
addr16
or
call
scas
call
mov
loope
fninit
jmp
adc
or
adc
and
xor
mov
push
imul
mov
xchg
cmc
push
les
push
inc
dec
call
jno
loope
pop
stos
mov
jmp
iret
test
push
in
ret
push
cmovs
popf
push
test
sbb
std
cmp
ret
xchg
in
fcmovnbe
imul
cli
pushf
lods
cmps
(bad)
call
std
or
cmp
scas
push
or
jmp
cmp
imul
sbb
scas
or
mov
and
pop
and
aas
call
cmc
inc
mov
sbb
mov
xchg
mov
inc
sub
scas
dec
add
xor
cdq
lods
int
pop
sti
jle
aam
adc
inc
pop
jns
push
test
loopne
jecxz
sbb
loop
into
pop
mov
sbb
cwde
retf
int
add
xchg
in
ins
scas
xor
push
mov
sbb
mov
mov
or
(bad)
mov
sub
mov
dec
jb
mov
add
test
xchg
mov
cdq
mov
jmp
inc
sub
push
ret
or
pop
popf
fbld
rcl
pop
in
xor
repz
sbb
enter
sbb
call
jo
pop
aad
jb
(bad)
out
push
mov
or
mov
and
sbb
and
and
jge
sbb
sbb
dec
fs
pop
jmp
and
push
(bad)
lahf
dec
pop
xchg
xor
adc
call
std
push
jmp
in
mov
pop
mul
xchg
sbb
mov
fcom
fnsave
pop
shr
sub
aaa
adc
mov
loopne
sub
ja
int
push
pop
pop
call
aam
pop
popa
mov
xor
mov
mov
jnp
push
cmps
out
or
dec
test
pop
push
gs
xchg
mov
mov
fs
adc
pop
stc
ins
mov
xchg
pop
xchg
xor
or
clc
mov
dec
call
add
cmp
imul
dec
imul
lock
cmp
xchg
je
aam
dec
sbb
pop
add
sbb
pop
mov
xchg
test
adc
or
jle
sar
jge
xor
jl
or
fisub
push
icebp
mov
imul
imul
call
sahf
popf
(bad)
sbb
xor
push
std
or
int3
adc
les
mov
(bad)
nop
int
pop
mov
add
cmp
xchg
jecxz
mov
pop
fnstenv
ja
add
jns
js
fcmove
inc
dec
test
xor
jb
push
jo
aas
mov
push
dec
cs
or
pop
fdivr
and
mov
dec
(bad)
rcr
hlt
xchg
pop
ret
pop
jno
jb
push
add
pusha
fimul
xchg
adc
xor
in
addr16
jo
sbb
fistp
xchg
sub
mov
push
clc
inc
or
mov
test
(bad)
leave
in
inc
frstor
add
sub
sub
push
push
mov
pop
dec
push
mov
bound
loope
rcr
int
adc
iret
jecxz
dec
inc
or
ret
arpl
ror
ret
outs
fcomp
xchg
inc
xor
retf
cmp
fwait
sub
idiv
push
div
push
mov
sahf
push
shl
retf
and
aaa
adc
int3
ins
mov
outs
call
pop
mov
(bad)
xchg
xbegin
xor
fwait
sbb
inc
mov
cdq
mov
jnp
les
xchg
out
stc
movs
(bad)
pop
xchg
dec
rol
cmp
mov
pop
push
cmp
jae
adc
dec
shr
out
mov
idiv
enter
xor
fadd
dec
cmp
push
lock
dec
dec
daa
add
loopne
mov
ja
mov
mov
add
das
test
loope
jmp
pop
xchg
cdq
loope
inc
or
cld
add
xchg
test
pop
xor
fiadd
or
jmp
dec
xchg
xchg
stos
aas
test
sbb
fdiv
xor
sbb
jbe
retf
inc
cmp
xor
jp
enter
xor
adc
ficomp
pop
mov
jle
repnz
sub
mov
adc
cwde
pop
(bad)
out
ins
cmps
sub
das
cmps
jl
mov
cmp
push
(bad)
lods
and
fs
mov
pop
xchg
mov
outs
mov
pop
mov
fistp
scas
push
lahf
(bad)
in
mov
test
mov
xchg
inc
mov
retf
pop
adc
bound
ror
or
loopne
scas
stos
mov
adc
jbe
cmp
mov
ins
repz
inc
xor
mov
cmp
(bad)
mov
out
jns
dec
fld
xchg
popf
(bad)
(bad)
aam
add
sub
push
sbb
mov
mov
call
jb
xchg
adc
ja
retf
inc
test
pop
std
stc
push
jbe
lods
xchg
(bad)
fsub
and
pushf
test
jp
push
(bad)
fst
add
push
pop
stc
adc
pop
jle
xor
sbb
pop
cmp
aaa
mov
mov
ret
mov
mul
ret
(bad)
enter
out
arpl
sub
mov
inc
mov
ds
and
std
and
jge
fdiv
ror
push
ror
cli
addr16
in
xlat
(bad)
cld
dec
(bad)
pop
(bad)
push
outs
(bad)
xlat
and
and
(bad)
push
push
pop
mov
cli
mov
sub
inc
fcom
adc
imul
cmp
inc
out
cmps
dec
mov
pusha
cmp
add
(bad)
test
and
lahf
mov
xchg
ficom
in
pop
jno
push
sti
xor
enter
jno
pop
(bad)
and
push
loopne
(bad)
or
das
mov
leave
(bad)
call
add
cmp
push
mov
lea
shr
dec
leave
mov
fidiv
sub
push
loope
gs
sub
cmp
jo
call
mov
sub
pop
inc
es
jns
sahf
or
mov
xchg
(bad)
mov
out
cmp
ss
gs
inc
(bad)
adc
repnz
xchg
daa
scas
nop
(bad)
jmp
std
dec
cld
dec
mov
jmp
add
sub
inc
mov
scas
mov
sub
add
ins
add
std
mov
cmp
stos
push
test
add
sbb
out
es
stos
inc
jns
add
xor
dec
std
push
or
sti
add
in
mov
add
fs
daa
fs
dec
xor
push
mov
loopne
jl
mov
aaa
icebp
ins
movs
loopne
cmp
sbb
aaa
cmp
daa
lahf
cdq
fldcw
adc
jnp
retf
jns
fwait
xchg
xor
adc
adc
int
icebp
movs
aad
fs
mov
cmps
xchg
jg
ins
push
jle
arpl
xlat
xor
lods
(bad)
or
in
(bad)
push
call
stc
push
or
inc
mov
push
in
addr16
push
add
or
idiv
xor
mov
int
mov
int
xchg
sbb
out
(bad)
mov
and
xor
mov
sbb
outs
mov
lock
scas
pop
cmp
(bad)
popa
sub
dec
std
repnz
mov
add
dec
aad
sbb
repnz
inc
push
pusha
push
fidiv
or
xchg
mov
xor
mov
ins
pop
inc
mov
icebp
jae
mov
test
jo
repz
jno
xchg
fwait
pop
jl
ja
adc
gs
mov
or
imul
mov
inc
cmp
sub
out
aas
mov
cmp
cmps
test
cmp
daa
cmp
jns
test
jp
xchg
fiadd
mov
es
int
adc
loopne
xor
(bad)
test
es
jnp
jbe
out
ins
inc
sbb
popa
dec
inc
mov
mov
add
push
(bad)
cld
add
aaa
or
push
mov
dec
pop
cld
jne
inc
push
cli
or
addr16
stos
or
add
mov
(bad)
fadd
mov
jbe
das
mov
mov
push
jbe
pop
jmp
lock
(bad)
in
jmp
scas
xchg
mov
(bad)
cli
sub
push
jmp
loope
mov
fsubr
cmp
mul
gs
sbb
repnz
out
jne
mov
popf
(bad)
(bad)
dec
sub
fnstcw
jne
sbb
or
stc
outs
loopne
xchg
sub
jle
mov
inc
js
je
xchg
mov
jmp
add
xor
jecxz
retf
std
jno
push
push
call
(bad)
mov
sub
jbe
cmps
sbb
(bad)
dec
mov
stos
(bad)
retf
mov
dec
xor
cmp
inc
sub
jmp
ror
or
cmp
adc
jle
cmp
or
(bad)
push
xchg
loope
push
scas
pop
mov
and
inc
cmove
xchg
das
pop
aas
in
adc
dec
popf
jbe
repz
cmp
imul
jl
xor
adc
push
movs
mov
aam
icebp
es
popa
inc
in
xchg
out
pop
enter
ss
add
call
test
mov
sub
retf
pop
rcr
mov
in
stc
lock
push
bound
jmp
call
(bad)
mov
add
shl
das
push
dec
mov
and
adc
data16
jmp
inc
retf
cmc
sub
cmp
push
dec
(bad)
(bad)
jns
cmps
mov
rcr
das
aas
jno
xor
stos
sar
adc
add
push
(bad)
out
sub
mov
xchg
iret
fadd
test
cs
pop
dec
loope
imul
jnp
sbb
leave
inc
loopne
mul
inc
adc
jmp
inc
std
mov
sbb
aad
and
mov
and
retf
jmp
and
cmc
call
cmp
cwde
mov
mov
sbb
xor
das
bound
adc
xor
aad
daa
push
add
push
dec
lahf
(bad)
mov
pusha
sub
mov
or
(bad)
femms
test
mov
test
in
push
lock
sbb
push
push
les
xor
jmp
pop
shr
adc
cwde
cmps
xchg
mov
jno
and
movs
pop
fs
mov
inc
(bad)
xor
stc
add
mov
inc
inc
add
sahf
xor
jno
mov
pop
loopne
push
test
cmp
mov
xchg
mov
ja
mov
in
std
mov
dec
fcomp
adc
xchg
cmp
stc
push
mov
pop
ja
inc
enter
adc
std
(bad)
cmp
fwait
and
dec
inc
mov
mov
push
pop
call
and
mov
adc
aad
fsubr
sti
sub
jg
push
call
adc
mov
mov
mov
pushw
scas
(bad)
outs
out
in
int
fs
inc
add
pop
and
jnp
repnz
dec
mov
push
mov
mov
xcrypt-cbc
cmps
push
and
and
aad
fcmovb
jno
lahf
pop
sar
or
lods
test
rcl
mov
or
adc
out
cmp
and
out
xchg
ficomp
adc
and
call
ds
fcom
scas
push
dec
push
cmps
es
push
xchg
and
test
test
mov
into
cmps
xchg
out
mov
cmp
mov
popf
or
mov
outs
jo
popf
in
adc
in
push
inc
lods
(bad)
in
mov
pop
pop
pop
mov
xor
and
add
jge
lahf
xchg
ds
mov
movs
push
aam
(bad)
cld
in
outs
fisttp
jg
push
nop
hlt
mov
push
stc
fisttp
mov
ds
jmp
bound
xchg
or
scas
push
push
pop
ins
lds
jbe
mov
sub
xchg
or
xchg
jg
xchg
add
pop
push
in
jg
bound
or
and
iret
sub
div
inc
xchg
ret
cld
ds
mov
inc
sahf
mov
pop
test
sbb
sub
std
loopne
bound
dec
xor
repz
push
cmp
fwait
pusha
jg
scas
pop
repnz
test
xor
jbe
mov
fdivr
(bad)
bnd
adc
ret
ss
repnz
cmp
and
(bad)
aaa
jo
inc
pop
fstp
outs
mov
je
int3
ss
das
mov
pop
mov
xchg
rol
dec
jmp
xor
and
data16
daa
mov
iret
nop
jne
mov
fwait
test
mov
mov
pop
lods
inc
mov
sbb
pop
dec
dec
aad
mov
sahf
popa
push
fucomip
outs
adc
fist
loop
add
push
add
pop
mov
in
mov
call
test
leave
adc
pop
mov
in
mov
bnd
inc
jmp
jge
mov
fsubr
mov
mov
div
dec
jae
sbb
xor
aad
scas
(bad)
(bad)
pop
inc
mov
ret
cmp
jb
dec
jl
push
jns
mov
and
mov
std
mov
bound
clc
movs
xchg
sti
push
pop
test
test
pop
inc
pop
icebp
inc
push
sbb
xchg
ficom
dec
lods
or
mov
cwde
inc
imul
or
mov
mov
pop
fwait
sahf
mov
lock
les
movs
and
fstp
push
dec
jns
fcmovne
xor
cs
or
arpl
out
add
jne
sub
das
je
dec
dec
pusha
ins
mov
cs
ins
(bad)
pusha
dec
ja
add
ja
test
rcr
cmps
or
shl
cmp
dec
adc
sbb
push
popa
dec
add
inc
lods
cmp
mov
add
test
fdiv
inc
or
adc
popa
sbb
enter
pop
and
mov
dec
xchg
sub
jle
push
loope
or
dec
xor
leave
xor
sub
cmp
jl
xor
ret
push
mov
dec
pop
icebp
fs
or
scas
imul
aam
xchg
add
je
mov
ja
movs
ja
fistp
and
mov
xor
mov
or
push
repz
mov
inc
aam
jecxz
mov
pop
ja
mov
push
or
jmp
dec
leave
popa
jnp
xchg
adc
mov
mov
xor
jge
cmp
cmp
fwait
push
jo
mov
xchg
std
into
fwait
inc
fadd
loopne
ss
adc
jg
pop
imul
test
pop
xchg
fst
pop
jnp
fimul
xchg
mov
mov
jg
cmp
sub
leave
jg
scas
sbb
das
call
jl
dec
das
push
popa
out
add
push
jb
xlat
fbstp
pop
jge
mov
cdq
loopne
and
xchg
sbb
mov
jl
fcmovnb
cmp
dec
pop
xchg
xchg
idiv
mov
push
in
out
cmp
sar
inc
adc
imul
mov
jmp
call
add
jnp
sbb
mov
iret
sbb
fdivr
fwait
aas
(bad)
push
nop
add
mov
pop
or
mov
or
dec
aas
in
call
mov
icebp
daa
dec
cmp
stc
dec
cmp
cmp
loopne
xor
fisub
aas
push
xor
jbe
rcr
mov
jo
mov
ja
push
mov
sub
inc
rcr
sbb
push
fucomp
jns
call
in
es
dec
mov
mov
iret
pop
sub
stc
push
test
add
(bad)
cli
fmul
test
mov
cdq
pop
xor
lahf
mov
sub
and
dec
mov
sub
loope
or
sub
add
scas
xchg
jae
mov
pop
xchg
xchg
popf
sub
xchg
hlt
sub
out
sbb
add
inc
dec
fs
xor
jmp
push
ret
(bad)
pop
sbb
jns
xchg
pushf
inc
xlat
mov
ja
ret
mov
adc
test
icebp
arpl
dec
adc
out
scas
push
popf
stos
cmp
not
dec
ins
mov
lahf
push
and
sbb
xor
mov
(bad)
fs
dec
push
xor
in
in
lahf
adc
das
jo
jb
in
mov
cmp
retf
pop
sbb
inc
fadd
jl
arpl
xor
nop
mov
mov
cdq
mov
adc
sbb
or
mov
pushf
stos
pop
pop
xchg
int3
int
test
adc
mov
xor
push
and
adc
or
repnz
mov
fild
sub
les
dec
add
jne
retf
or
fdiv
jge
std
push
jmp
xchg
(bad)
sub
(bad)
mov
in
push
mov
das
cmp
lods
inc
loopne
stos
pushf
lahf
(bad)
fwait
cmps
frndint
cmps
push
shl
cmc
lahf
inc
ds
inc
cdq
sub
xchg
fdivr
cmps
jne
movs
jge
push
xor
xchg
(bad)
std
xchg
(bad)
and
outs
fdiv
jo
mov
xchg
or
sbb
cld
repz
xor
fcom
aam
mov
fldenv
sar
add
fnstenv
(bad)
arpl
jle
jo
pop
push
ins
xor
sahf
push
hlt
int
imul
jecxz
inc
rol
mov
jne
outs
mul
jmp
div
jbe
movs
div
fistp
scas
je
inc
int3
push
sbb
add
or
push
repz
cmp
shl
add
retf
shl
mov
jg
repnz
int3
and
sbb
mov
cmps
es
push
or
fist
pop
ins
jmp
in
inc
or
and
mov
retf
mov
mov
(bad)
fstp
pop
cmp
or
push
out
jb
aam
mov
pusha
cmps
stos
pop
fcom
lods
mov
cld
dec
dec
pushf
jns
ret
xor
cmps
xchg
loope
into
outs
push
cmp
pop
sub
loope
dec
in
inc
(bad)
(bad)
aad
pop
cmp
cmp
sub
arpl
jmp
adc
fwait
ret
fwait
xor
push
cwde
mov
fmul
add
mov
(bad)
cmp
inc
je
add
out
xchg
add
fs
fdivp
add
cmp
pop
jl
out
ins
xchg
xor
or
cmp
bound
stos
(bad)
not
push
add
popa
clc
sbb
inc
jnp
and
dec
adc
std
ja
mov
adc
popf
ret
sub
mov
xchg
push
hlt
mov
and
sub
or
and
mov
call
fist
pop
test
mov
pop
outs
mov
jecxz
jle
inc
mov
add
ss
add
mov
xchg
inc
std
jb
(bad)
jmp
mov
adc
lods
or
data16
push
inc
inc
sbb
sub
cs
or
outs
rcl
mov
lahf
outs
cmps
mov
or
pop
mov
out
aad
cmps
fnstsw
xor
xlat
outs
jo
shl
mov
cli
pop
sub
xchg
lods
pop
sbb
pusha
add
out
mov
adc
add
cmp
ficomp
sbb
pop
cmp
sub
xor
add
xchg
xchg
pushf
xlat
jmp
sub
test
add
retf
loopne
mov
sbb
not
ins
mov
and
jp
movs
jo
sub
add
adc
(bad)
mov
mov
(bad)
repnz
pushf
inc
cmp
and
and
mov
sbb
daa
aam
scas
aad
inc
xchg
mov
xchg
in
popa
(bad)
sbb
inc
dec
mov
cld
mov
std
scas
push
add
stc
jae
or
shr
pop
fbld
mov
push
jp
jp
jbe
and
mov
test
xor
dec
sti
pop
movs
or
push
and
stc
hlt
adc
mov
jl
dec
scas
mov
lea
mov
jle
mov
out
adc
mov
add
cmp
lds
dec
cwde
jle
sub
call
pop
dec
dec
xor
sbb
mov
(bad)
mov
push
sub
or
fwait
lods
neg
jmp
out
xchg
cmps
sahf
scas
repz
mov
xchg
cdq
xor
mov
(bad)
retf
test
ror
xor
jb
popf
mov
jmp
adc
iret
xchg
ds
mov
aaa
(bad)
ins
mov
and
xchg
imul
sub
push
setp
inc
fdiv
xor
jns
dec
arpl
mov
int3
lods
xchg
ins
in
fst
sbb
outs
cmps
sub
mov
cli
sar
jge
mov
out
cmp
and
cmps
mov
movs
(bad)
adc
popf
aad
inc
cmp
and
movs
pusha
fwait
scas
inc
sahf
and
int
or
icebp
out
mov
push
cmp
aas
(bad)
aam
mov
out
or
lods
aad
jo
jmp
jmp
int
and
ds
arpl
pop
pop
ja
loope
jmp
out
jecxz
cmc
test
inc
add
push
xchg
add
xor
test
jno
inc
in
push
inc
inc
and
imul
mov
pop
aad
inc
dec
sbb
icebp
dec
rcr
inc
fisttp
push
sub
sub
push
mov
mov
pop
push
adc
mov
fcomi
mov
(bad)
sub
out
mov
dec
pop
inc
mulps
cmp
jbe
fnsave
jmp
mov
add
cs
push
adc
outs
shr
adc
pushf
inc
test
fs
xor
add
and
scas
cwde
ret
sub
xchg
adc
stc
popf
std
(bad)
retf
inc
loopne
int3
cmp
push
push
test
mov
leave
out
(bad)
popa
aam
push
and
gs
cmp
jmp
or
out
sbb
arpl
fnop
lahf
je
and
mov
dec
mov
jmp
fbstp
add
add
or
mov
retf
movs
mov
retf
sub
jp
push
xlat
dec
popa
cmp
ds
into
fwait
pushf
xor
int
push
sub
rcl
adc
stc
out
xchg
(bad)
jge
leave
mov
or
das
pop
mov
add
push
cmp
in
jge
test
movs
pop
sbb
sti
and
dec
cmp
xchg
imul
sbb
sahf
les
pop
mov
inc
jmp
mov
xor
push
xchg
dec
and
rol
xor
add
pop
mov
es
sub
loopne
cmp
mov
mov
add
data16
xchg
cmp
or
add
inc
pop
mov
fld
adc
call
rcr
pop
sub
in
sbb
pop
das
fcom
adc
xchg
inc
retf
jmp
sub
dec
mov
leave
shr
mov
arpl
pop
pop
mov
jmp
clc
jnp
or
push
mov
push
dec
mov
dec
dec
fistp
test
data16
dec
sbb
add
loopne
out
xchg
sbb
idiv
xchg
add
adc
call
lods
xchg
inc
lods
int
loop
imul
xchg
mov
faddp
mov
xor
in
mov
or
int
and
mov
sub
imul
outs
push
jg
push
or
clc
ins
adc
sub
mov
jge
xchg
push
cdq
into
ja
les
jae
pop
sub
sub
mul
test
push
into
mov
add
fldenv
in
ss
out
mov
or
jg
movs
mov
int3
fild
and
jne
das
pop
push
rol
mov
in
sub
(bad)
mov
jns
sahf
stos
pusha
mov
jno
jno
xor
das
aas
ins
ret
sub
(bad)
cli
xor
(bad)
adc
rol
pushf
retf
cmp
inc
jmp
push
dec
in
jmp
push
mov
loope
pop
inc
fs
adc
inc
je
sar
adc
arpl
mov
je
mov
nop
sub
mov
xor
(bad)
ja
daa
dec
leave
fnsave
sti
mov
push
mov
nop
jge
add
fist
jmp
jle
lahf
mov
lods
mov
aas
sar
dec
sub
mov
mov
inc
inc
xchg
and
mov
inc
lds
pushf
pop
xor
xor
push
rcl
dec
stc
mov
outs
or
or
enter
cs
xchg
hlt
test
gs
mov
push
js
adc
js
or
push
cli
add
jno
outs
sub
retf
mov
pop
dec
sbb
scas
mov
aaa
sahf
jmp
fwait
xor
out
mov
sub
loopne
and
out
cdq
sbb
(bad)
inc
push
imul
ret
loop
icebp
pop
push
addr16
mov
pop
loopne
sbb
ins
in
clc
inc
mov
aam
cwde
inc
cwde
stos
push
adc
adc
push
mov
add
sub
mov
icebp
cmps
xor
fs
je
jae
xor
or
fld
add
mov
ret
pop
lock
and
inc
in
lea
mov
into
add
sub
(bad)
clc
mov
mov
cmp
add
int
mov
ss
xchg
sbb
and
popa
sbb
sti
rol
lods
ja
adc
sar
xchg
jns
mov
bound
iret
loopne
xchg
and
out
scas
push
fdiv
in
movs
adc
jb
leave
stos
pop
jl
sub
(bad)
rep
cld
int
jecxz
leave
jmp
imul
std
mov
fnstsw
jnp
retf
(bad)
sub
sub
ret
daa
push
pop
loope
cmp
jae
mov
push
or
push
mov
adc
in
(bad)
or
lods
push
inc
inc
adc
and
or
sbb
mul
cmc
(bad)
ins
mov
or
inc
push
pop
arpl
scas
jb
jg
addr16
xchg
sub
sub
(bad)
ja
arpl
mov
or
lahf
adc
leave
shr
pop
aaa
mov
fs
jmp
ret
xor
pop
push
add
and
mov
test
cli
mov
and
sahf
daa
stos
mov
test
aaa
pusha
jns
dec
out
xchg
cmc
add
leave
(bad)
in
popa
into
popa
fwait
cli
(bad)
mov
js
cli
add
je
in
jge
arpl
xchg
mov
lods
movs
call
inc
test
lahf
mov
call
shl
icebp
cmps
lods
popa
cmps
mov
fwait
pop
in
jne
cmp
cli
or
xchg
jge
mov
or
mov
dec
xor
sbb
inc
sahf
retf
pop
sti
jl
mov
sbb
cmp
enter
pop
mov
or
test
imul
int3
jmp
movs
js
push
xchg
mov
pushf
in
lds
pop
inc
cld
retf
out
cmp
cld
sbb
pop
adc
push
jb
xor
add
fsubr
mov
(bad)
mov
ins
mov
inc
mov
add
pop
js
ret
adc
cmp
nop
mov
arpl
adc
and
dec
stc
jl
xor
inc
js
pushf
xchg
mov
mov
test
addr16
aas
addr16
in
sbb
in
mov
mov
ror
sar
pop
dec
sbb
out
mov
adc
mov
mov
mov
xchg
movs
test
shl
adc
push
xor
iret
out
jge
xor
imul
mov
inc
push
jb
outs
mov
cli
out
jnp
aaa
inc
or
inc
jge
mov
shr
mov
jns
fcom
mov
scas
in
dec
and
les
aaa
adc
mov
xor
fs
inc
sbb
ins
push
lock
movs
xor
test
out
dec
std
sbb
(bad)
push
jb
pop
sbb
xchg
shl
fs
pop
dec
xchg
in
iret
jae
cld
mov
movups
daa
in
stc
jl
or
push
leave
cmp
in
jmp
dec
pop
xchg
cmp
cmps
adc
adc
(bad)
stc
(bad)
push
add
jg
push
retf
pop
sbb
cli
mov
jnp
jecxz
jecxz
(bad)
add
leave
shl
lahf
retf
pop
in
jp
fnstenv
mov
cmps
mov
sbb
dec
hlt
push
loop
ja
pop
mov
sub
push
pop
out
ds
dec
sti
lods
mov
les
clc
test
sub
out
and
popf
loope
jl
fild
sahf
dec
loop
add
push
jb
enter
shl
lods
imul
fiadd
dec
cld
ja
(bad)
outs
mov
jnp
shr
pop
inc
int
xchg
fidiv
loopne
jb
sub
sub
ja
push
movs
xchg
sbb
movaps
and
clc
xchg
pop
aaa
add
sbb
pop
mov
in
mov
daa
jp
sbb
sub
or
in
sahf
jbe
neg
mov
out
pushf
jno
daa
test
ds
shl
(bad)
call
mov
xor
inc
icebp
arpl
fs
icebp
mov
mov
sub
dec
arpl
ret
jp
aas
loop
push
pop
cs
add
sub
daa
push
or
xchg
dec
lock
cmp
out
idiv
pop
sub
into
data16
xchg
ins
test
mov
pop
movs
out
stos
jns
out
aad
dec
vpaddq
sbb
xchg
pop
add
inc
push
loop
enter
inc
jl
cmp
call
jns
fld
push
shl
xchg
pop
jmp
dec
outs
es
jg
lea
dec
pushf
dec
aaa
push
mov
pop
pop
inc
imul
push
cmp
mov
lods
add
mov
sbb
js
push
mov
outs
loop
(bad)
push
and
out
rcr
lea
scas
lock
jns
jmp
std
jae
jge
adc
adc
aaa
out
push
(bad)
enter
jecxz
pop
mov
sti
add
ffree
fstp
add
xchg
outs
movs
push
and
out
enter
xchg
lahf
dec
(bad)
adc
call
repnz
jg
stos
shl
cmc
add
retf
sar
cld
es
mov
stos
dec
movs
test
out
int
sbb
sub
(bad)
mov
sbb
push
xchg
aas
and
dec
jge
out
aas
leave
gs
pushf
sbb
repnz
inc
mov
pop
xor
push
test
or
inc
in
fiadd
add
aaa
scas
pop
pop
psllq
in
mov
bound
out
(bad)
out
pop
xchg
adc
pop
cld
aam
mov
pop
or
fadd
cmps
test
mov
cmp
adc
xchg
xchg
aaa
mov
int3
ror
or
add
xlat
ret
sbb
ja
lock
test
and
idiv
aaa
fidiv
aam
in
add
outs
push
scas
scas
xor
out
jmp
loop
ins
sub
mov
data16
add
jle
pop
mov
aam
inc
sub
inc
push
mov
rcl
pop
(bad)
int3
lahf
pop
test
pop
cs
push
les
push
adc
mov
sbb
pop
ins
pop
sub
arpl
call
fmul
jp
xchg
icebp
mov
ja
mov
mov
pop
ins
hlt
inc
enter
test
adc
adc
inc
sar
inc
dec
adc
mov
lahf
aad
(bad)
pop
dec
xor
out
sub
pop
(bad)
loop
mov
daa
ins
sbb
cmp
lds
mov
sbb
call
add
or
xor
mov
(bad)
(bad)
test
pop
mov
sbb
mov
sbb
popf
push
out
rcl
xlat
outs
repnz
pop
call
outs
mov
pop
int
cmp
jno
imul
fsubr
jle
or
pop
(bad)
out
shl
cwde
xor
mov
cmp
mov
lock
ss
shr
(bad)
in
out
fs
xchg
cli
fbstp
mov
imul
rcr
jmp
jmp
je
sub
mov
retf
mov
add
imul
repnz
out
imul
lock
rol
or
adc
js
pop
fs
or
mov
jg
fidiv
inc
xchg
shl
xor
leave
ret
leave
outs
retf
lods
test
pop
pusha
dec
jbe
call
std
and
xchg
adc
fld
or
fneni(8087
or
in
je
sbb
rcl
push
pop
xchg
pushf
mov
adc
fdivrp
rcr
jns
xchg
sbb
jb
jnp
sbb
std
hlt
popa
jle
inc
jne
stos
and
pop
ss
xor
and
ror
fwait
and
dec
sbb
dec
retf
sbb
call
inc
push
sub
dec
mov
out
inc
and
dec
mov
jp
inc
push
and
lock
fisttp
adc
rcr
xchg
xor
xchg
(bad)
dec
pop
cwde
out
test
mov
mov
(bad)
and
ret
fld
xchg
xchg
jae
or
pop
mov
cli
xchg
pusha
pop
or
cs
fisubr
test
mov
test
pop
loopne
ret
scas
scas
aad
pop
out
cmps
movs
jle
sbb
jnp
loope
mov
xchg
dec
into
loope
adc
mov
scas
dec
enter
mov
mov
out
or
arpl
gs
jbe
jg
xor
arpl
sbb
mov
arpl
sub
(bad)
mov
push
mov
xor
mov
cdq
jae
movs
fdivr
test
cmp
sahf
(bad)
iret
int
mov
inc
out
push
icebp
sbb
sub
lock
mov
shl
shl
pop
mov
xor
shr
fdivrp
pop
mov
mov
jl
stos
inc
sub
push
push
cwde
sar
bswap
mov
ss
inc
loop
popf
xchg
(bad)
xor
loop
pop
ss
xchg
mov
push
cmp
add
sti
jnp
icebp
xchg
scas
rcl
movs
jns
xchg
into
cmp
clc
int3
es
sub
jge
bnd
rol
push
fidiv
pop
sbb
xchg
sbb
into
xchg
popa
mov
hlt
js
jbe
test
dec
cmps
cmp
sub
and
sbb
in
les
adc
jmp
dec
fisub
jo
sub
lods
sbb
aas
movs
lahf
pop
sub
jmp
or
adc
in
cmp
int
jg
retf
push
add
dec
out
cmp
jg
mov
push
shl
xor
ja
clc
ret
ds
and
or
inc
pop
in
jo
sub
dec
stos
adc
pop
dec
sbb
mov
jl
cwde
cwde
or
pop
call
lds
gs
xlat
jmp
rcl
pop
mov
cmp
test
cmc
cmp
stc
sbb
stc
repz
je
loopne
jle
lods
inc
sub
fisub
adc
pop
lds
(bad)
push
xchg
fdivr
ja
xchg
daa
jge
into
pusha
mov
push
push
fisubr
in
cmp
lods
nop
rcl
or
ret
push
mov
inc
push
dec
leave
not
mov
fs
dec
sbb
pushf
mov
or
mov
(bad)
add
jp
aaa
js
push
adc
movs
push
out
push
pusha
xchg
call
(bad)
xlat
cld
mov
pop
add
(bad)
test
xor
xor
mov
xchg
push
mov
inc
out
loop
push
daa
xchg
mov
or
movs
pushf
(bad)
in
ins
lock
and
dec
jbe
dec
mov
cmp
fucomi
ss
call
jmp
or
int3
mov
mov
lods
jns
jge
retf
icebp
shr
sub
or
out
cmp
xor
aad
imul
mov
cmp
cmp
xor
mov
cmp
call
mov
jge
jmp
call
(bad)
rol
xchg
or
sub
leave
ficomp
ret
hlt
movs
retf
mov
shr
jl
gs
aas
and
xchg
test
cs
arpl
inc
shr
adc
cmp
jl
ror
inc
pop
pop
(bad)
sub
inc
ins
aaa
xchg
pop
sub
dec
cs
mov
dec
mov
lock
or
push
push
outs
popf
push
outs
shl
loope
sub
retf
into
mov
fadd
add
xor
aaa
add
cdq
mov
or
mov
movs
addr16
dec
out
and
stos
sub
lock
(bad)
pop
push
push
ret
repnz
mov
cld
(bad)
inc
lock
push
lahf
jns
pop
imul
outs
xor
in
mov
cmp
neg
jecxz
bound
iret
popf
xchg
test
or
rcl
push
jae
push
test
repz
lahf
in
in
push
loop
xchg
mov
dec
cmp
or
pop
fs
shr
add
dec
in
loope
outs
(bad)
aam
xor
and
mov
sbb
into
nop
push
pop
or
fsub
jnp
sub
pop
(bad)
cdq
xlat
out
or
sub
push
sbb
loopne
dec
(bad)
pop
rcr
lock
or
retf
push
aaa
rcr
adc
pop
and
fwait
push
or
cmp
lods
push
pop
jns
(bad)
cmp
xchg
call
into
mov
xchg
xchg
fimul
push
ja
xchg
stc
add
cmp
je
loopne
mov
adc
sbb
inc
sar
(bad)
xor
mov
(bad)
mov
xlat
push
xchg
mov
jecxz
add
inc
sub
mov
adc
mov
out
and
ins
cmps
out
int
xchg
dec
pand
jb
sub
and
mov
and
jecxz
xchg
cdq
ss
(bad)
out
push
sbb
mov
pop
xor
sub
mov
jne
les
mov
sub
xchg
and
xchg
dec
dec
jmp
xor
xchg
dec
ins
mov
out
inc
enter
pop
add
push
or
aas
mov
arpl
xor
sar
ret
ins
adc
fcom
daa
cmp
push
ret
dec
hlt
dec
loope
mov
jbe
push
sahf
push
mov
mov
int3
or
mov
movs
sub
and
sub
popf
movs
retf
jge
xlat
outs
and
pop
cld
adc
out
retf
test
push
cmp
jne
sbb
movs
in
sbb
mov
leave
sub
and
xor
sbb
push
in
std
out
test
add
push
push
nop
pop
pushf
movs
lea
mov
shl
cli
sub
loop
adc
in
nop
aaa
cmp
cmps
retf
pushf
cs
xchg
and
mov
es
jno
xor
aaa
rcr
sub
xchg
std
or
add
xchg
sbb
adc
add
sahf
add
or
rcl
cmp
(bad)
(bad)
in
or
adc
lock
inc
xchg
aam
outs
pushf
in
out
adc
dec
jo
or
pop
pop
repz
push
lods
dec
push
lods
js
aas
adc
or
or
inc
std
jmp
jg
stos
icebp
scas
lods
mov
or
call
imul
cld
cmp
fcomip
or
jg
mov
scas
in
ror
cmc
scas
xor
sti
cmp
into
mov
add
shl
in
cmp
popf
xchg
inc
aaa
aad
jae
xchg
jecxz
pop
pop
mov
adc
fidivr
popf
mov
bound
out
pop
(bad)
cli
aam
jmp
stos
cmp
sbb
test
push
push
xlat
add
loope
add
fs
sub
ftst
push
clc
and
fidiv
adc
cmps
mov
mov
loope
or
ret
into
inc
adc
sbb
rcl
outs
mov
cmc
pop
pop
out
test
movs
lods
sub
fsubr
sar
sub
pop
xchg
lahf
push
mov
test
gs
nop
xchg
mov
jmp
push
xchg
cs
mov
das
jnp
mov
(bad)
fiadd
dec
imul
or
jb
xchg
movs
call
inc
adc
fs
add
inc
cmp
add
test
xor
jecxz
ja
jb
outs
dec
lods
or
push
into
jp
sub
pop
dec
xor
sti
sbb
nop
pushf
in
and
xor
dec
hlt
and
ja
leave
int
test
js
jge
and
dec
fucomp
out
(bad)
cmp
outs
jl
mov
xor
jnp
mov
adc
mov
fcomip
xchg
mov
int
xor
test
xor
jle
mov
jecxz
cmps
add
pop
mov
xchg
or
adc
addr16
loope
xchg
or
mov
mov
xchg
pushf
fsub
inc
nop
mov
sbb
lock
sbb
shl
xor
ins
(bad)
mov
jg
sar
gs
fisttp
dec
stos
hlt
(bad)
cli
loopne
sbb
aaa
in
xor
inc
mov
dec
xor
test
push
in
mov
lods
iret
test
outs
xlat
pminsw
outs
mov
jle
pop
adc
inc
(bad)
cmp
or
outs
jns
ffreep
iret
add
mov
inc
xor
xlat
lea
mov
adc
mov
das
dec
cli
push
and
push
or
xchg
push
push
icebp
and
sbb
test
ins
stos
xchg
lock
sub
xor
popa
and
ja
jg
jb
into
daa
sub
stc
ins
addr16
popf
ja
fild
dec
les
mov
add
sar
dec
push
jge
or
or
xor
fadd
ja
jns
iret
add
mov
movs
sbb
in
xor
mov
jns
xlat
add
dec
mov
loop
push
jge
mov
bound
push
fisub
xchg
push
int3
xchg
cwde
sbb
ds
push
add
(bad)
mov
pop
enter
cwde
mov
mov
icebp
call
add
fldlg2
pusha
pop
mov
neg
dec
sbb
xor
pop
push
push
lea
int3
sbb
jp
lods
repz
in
dec
adc
inc
iret
(bad)
pop
and
lock
pop
mov
inc
cmc
mov
ret
rcl
jbe
lds
jae
cmp
push
iret
daa
in
mov
cwde
push
ss
sbb
pop
das
add
cmp
les
mov
imul
xor
arpl
out
and
sahf
repnz
xchg
pop
sbb
loope
xchg
shl
mov
ja
mov
loope
lods
addr16
shl
test
pop
jb
xchg
xor
jmp
inc
jae
sub
rcl
scas
ss
aad
add
pop
leave
in
pop
fdivr
(bad)
hlt
loop
sti
push
retf
or
mov
arpl
mov
dec
push
sub
push
mov
nop
cmp
inc
add
pop
iret
xchg
sbb
stc
out
xor
mov
pop
add
es
shr
jle
pop
rcl
fimul
push
mov
mov
mov
pushf
mov
(bad)
mov
add
bsf
sbb
aam
imul
iret
xchg
inc
lods
in
mov
jg
sub
push
fbstp
mov
bound
ja
mov
adc
sub
nop
inc
xchg
sahf
rol
xor
pop
sub
sub
clc
or
div
and
in
add
sbb
inc
push
mov
jnp
inc
repnz
fidiv
call
shl
sub
mov
mov
xor
fs
in
jmp
psllw
pop
mul
mov
xchg
test
push
or
mov
xor
out
push
cmc
inc
mov
ficomp
das
mov
mov
adc
cmp
leave
popf
int
fwait
cmp
std
jae
and
shr
xor
mov
pushf
icebp
in
rdpmc
les
sub
or
add
fstp
mov
(bad)
sar
push
mov
gs
xor
mov
add
repnz
fild
push
neg
fcom
or
pand
(bad)
movs
int3
xor
pop
add
add
aaa
(bad)
mov
mov
mov
and
loope
mov
or
pop
lds
sub
pop
cmp
ds
repz
pusha
cli
repnz
inc
jcxz
sbb
fs
retf
sbb
push
mov
pusha
ret
out
pop
mov
adc
gs
sbb
push
sub
ss
outs
(bad)
adc
mov
or
inc
push
into
fninit
dec
inc
scas
adc
dec
add
jns
dec
xor
pop
push
shl
fild
add
dec
mov
pop
pop
int3
adc
aaa
xor
and
stos
stos
(bad)
xor
ins
jno
jno
iret
mov
mov
mov
adc
inc
mov
loop
add
push
aad
jle
xchg
adc
call
xlat
inc
sbb
jb
mov
mov
enter
pop
shr
mov
retf
int3
mov
push
iret
pop
dec
aaa
arpl
mov
arpl
int3
dec
nop
cdq
in
inc
in
movs
les
inc
lods
dec
addr16
add
inc
jmp
mov
pop
add
and
cmp
stc
or
jecxz
xor
icebp
adc
call
jmp
inc
cmp
adc
cmp
adc
push
shl
adc
sbb
sbb
push
mov
rcl
jno
jle
jae
xor
push
mov
cmp
mov
(bad)
fstp
jns
(bad)
pop
mov
leave
(bad)
retf
jbe
fadd
xchg
cmp
mov
(bad)
(bad)
sub
push
adc
(bad)
jg
adc
mov
addr16
dec
test
(bad)
outs
sbb
dec
pop
pop
mov
mov
gs
push
lock
nop
cs
sar
mov
ret
add
lods
in
stos
mov
xor
push
mov
arpl
mov
stc
or
ss
jmp
sub
out
sar
inc
mov
sub
aad
inc
cmp
add
push
in
out
leave
dec
xor
adc
pop
ds
push
push
mov
mov
mov
dec
cmp
dec
sar
movs
mov
jne
adc
sub
imul
mov
and
lahf
pop
ins
div
mov
outs
outs
sar
fdiv
shr
aaa
ja
add
pop
in
push
jg
aad
cmp
push
add
or
or
sbb
pop
rol
std
jge
ret
out
pop
jns
out
loope
pop
push
ss
sub
adc
lods
pause
sub
ja
adc
cwde
out
jge
sub
icebp
and
or
stos
(bad)
xchg
or
outs
mov
sbb
fistp
(bad)
les
aad
or
sbb
ror
ds
(bad)
sbb
xor
add
pusha
fild
pop
int3
sbb
push
cmp
dec
add
sub
outs
push
sub
inc
add
and
aam
fild
icebp
and
pushf
pop
in
or
and
push
stos
movs
nop
sbb
mov
ins
ret
ficomp
out
ret
rol
retf
cmp
iret
pusha
(bad)
sbb
popf
idiv
lock
inc
sub
int3
pop
xchg
es
outs
mov
fiadd
loope
fistp
(bad)
ss
adc
cmp
repnz
adc
jno
dec
scas
inc
aad
xor
outs
ffree
xchg
sub
xchg
data16
pop
xchg
test
pop
mov
test
push
fisub
xor
pop
jg
fcom
test
fld
inc
add
in
shl
test
add
in
ror
lds
leave
ja
jb
ror
dec
xchg
dec
xchg
aas
inc
pop
jns
test
mov
xlat
sub
xor
daa
cs
xchg
and
pop
sbb
retf
xor
sbb
jle
sub
push
cmp
xchg
sti
inc
cmpxchg
xor
lock
enter
outs
std
imul
xchg
jb
std
jnp
call
mov
(bad)
loop
(bad)
push
cs
div
cld
adc
or
xchg
sub
aaa
outs
test
and
pop
(bad)
lahf
xchg
jmp
dec
xchg
fld
aas
sti
jle
popa
into
cs
popa
mov
sahf
mov
xchg
and
aas
repz
gs
repnz
jmp
push
mov
inc
mov
adc
inc
jle
pop
icebp
cmps
cli
pop
ja
(bad)
fldl2t
push
pop
gs
(bad)
pop
pop
test
faddp
cmc
sub
pop
mov
fsub
jl
jecxz
pop
cs
inc
pop
mov
frstor
mov
push
popa
stos
mov
scas
mov
pop
mov
fidivr
call
(bad)
daa
and
les
jmp
mov
mov
sbb
dec
add
inc
sub
inc
push
jo
mov
and
(bad)
loopne
pop
into
xor
xchg
hlt
or
clc
call
stos
xor
je
xchg
mov
and
test
icebp
hlt
cmps
stos
add
pushf
cmp
int3
ret
add
je
or
jns
hlt
outs
jbe
scas
xor
or
ds
fisub
movs
rol
fild
mov
bound
in
add
repnz
test
add
jb
xchg
(bad)
std
shr
movs
adc
(bad)
inc
call
mov
lds
mov
clc
xlat
and
test
mov
sub
inc
test
ds
xor
xor
xor
aam
mov
iret
int
cmp
mov
cli
ins
fs
adc
mov
pop
sar
test
or
xor
sbb
or
pop
inc
sar
shr
and
dec
sbb
jmp
push
cli
inc
loop
sbb
sub
pop
(bad)
sub
loopne
pusha
mov
sbb
adc
aam
or
mov
fcom
and
xchg
iret
xchg
mov
loopne
xor
cli
ror
rcr
neg
jns
and
mov
dec
(bad)
pop
xchg
into
sti
add
setnp
sbb
jne
mov
mov
adc
adc
dec
or
out
scas
xchg
push
icebp
mov
sub
aaa
cli
or
enter
cmp
js
sub
sbb
push
mov
sbb
and
in
cmp
xchg
cmp
jge
inc
inc
ss
and
xchg
ret
adc
test
(bad)
sar
xchg
pop
inc
or
xor
(bad)
fdiv
adc
repz
rcr
fiadd
or
test
and
add
popf
or
fadd
xchg
inc
data16
std
xchg
shr
dec
movs
or
or
fisubr
repnz
mov
dec
inc
and
pop
test
dec
jle
dec
mov
push
sub
in
ficomp
je
push
int
fcom
sbb
sahf
jle
sbb
xchg
ja
repnz
sahf
retf
adc
xor
mov
loope
add
and
mov
xchg
out
add
repnz
add
and
fisub
ret
repz
(bad)
pop
jmp
dec
in
test
sbb
mov
call
dec
xchg
les
std
sub
paddusb
jb
push
push
stc
in
fwait
popf
je
fisttp
int3
cdq
push
push
js
in
or
arpl
cwde
add
(bad)
lock
mov
dec
imul
in
inc
xchg
and
or
dec
and
mov
jnp
fwait
adc
and
(bad)
sub
lods
jno
jp
loopne
mov
add
aaa
xchg
push
xchg
jg
sahf
fstp
dec
hlt
nop
mov
addr16
sub
and
ds
sub
xor
into
mov
test
test
(bad)
out
rol
and
cld
mov
cmps
out
push
int
jns
fistp
xchg
in
test
xor
jmp
clc
rcr
js
and
or
es
sbb
mov
stos
rol
lock
cmp
sti
js
or
mov
jl
mov
js
(bad)
pop
sub
test
aas
jbe
xor
mov
retf
push
dec
fwait
xchg
mov
jg
jge
mov
in
xor
sub
leave
daa
mov
repz
popa
shr
ret
scas
adc
push
ins
pop
out
fbstp
jmp
ins
xor
xor
jne
dec
xchg
mov
sbb
jmp
shl
jp
add
cdq
in
shl
mov
jp
mov
add
call
dec
sub
fucomi
adc
jmp
in
mov
add
xor
jge
mov
repz
stos
and
cmp
test
mov
inc
xchg
sub
aad
sti
mov
inc
mov
les
push
inc
dec
or
ds
aad
jae
iret
loop
or
mov
loop
loope
xor
stc
lods
cli
scas
in
nop
xor
cmps
push
pop
dec
inc
sbb
imul
and
xor
sub
(bad)
call
mov
rol
les
sbb
rcl
mov
ret
mov
out
cdq
icebp
iret
movs
(bad)
not
sub
lds
xchg
inc
scas
lea
inc
repz
inc
pop
sbb
fidivr
sub
retf
sub
mov
mov
mov
retf
in
mov
push
pop
icebp
pop
dec
cs
fst
dec
push
out
xchg
(bad)
sbb
xchg
in
add
inc
mov
movs
mov
sahf
xchg
pop
sbb
in
sbb
popf
mov
mov
ja
xor
loopne
xor
and
test
ins
imul
pop
ficom
outs
xor
stc
push
and
cmp
xchg
test
sbb
sub
hlt
xchg
cdq
and
(bad)
loopne
lods
xchg
xor
dec
out
arpl
into
add
push
scas
xor
test
(bad)
fstp
push
inc
xchg
lea
push
cmps
mov
xor
dec
adc
out
cld
push
out
(bad)
sub
aad
int
int3
sbb
test
js
es
mov
jge
xchg
add
sar
push
mov
dec
out
test
sbb
arpl
div
inc
pop
out
jb
inc
enter
rcr
pushf
jmp
ror
mov
dec
inc
inc
mov
xchg
ret
ins
scas
mov
xchg
inc
sahf
mov
fcom
aas
or
mov
inc
outs
mov
lahf
repnz
loop
or
sar
mov
inc
sbb
mov
mov
movs
addr16
add
lds
push
adc
ficom
aam
iret
jb
pop
jb
mov
jecxz
clc
jno
jnp
dec
or
test
xor
sahf
mov
sbb
cdq
and
xlat
adc
inc
sub
mov
xchg
push
xor
adc
push
retf
pop
mov
sbb
lock
inc
dec
outs
adc
xor
mov
sub
test
popf
daa
pop
call
imul
(bad)
mov
jp
pop
out
aad
pop
push
or
ins
or
fdiv
js
adc
test
dec
mov
xchg
push
adc
fimul
cmps
mov
lea
addr16
repz
jp
test
out
cwde
mov
retf
push
xor
pop
and
cdq
push
adc
je
xor
outs
int3
and
mov
loop
dec
das
leave
dec
mov
imul
or
and
add
pop
xor
(bad)
dec
xchg
outs
add
mov
int
push
pop
jp
ret
stos
sbb
lods
lea
mov
in
hlt
daa
pop
jb
sbb
sbb
cmp
imul
outs
js
das
jae
bound
test
shl
leave
push
ror
(bad)
loop
and
xor
push
mov
cmps
cli
mov
inc
push
sbb
bsf
mov
cmovns
cld
addr16
retf
jge
out
shl
daa
or
in
retf
dec
in
pop
sub
jo
fsub
stos
cmc
(bad)
loopne
xchg
loope
mov
xchg
dec
push
fadd
aaa
mov
idiv
pushf
mov
jno
stc
push
inc
adc
or
lods
cmps
sbb
cmp
or
dec
dec
loop
sbb
xchg
test
and
cwde
xor
xchg
cmps
aam
sar
pushf
or
cmp
xor
xchg
push
push
fsubrp
mov
dec
cli
xchg
(bad)
les
jnp
movs
sbb
cwde
add
inc
jmp
ja
lea
jecxz
in
inc
pop
pop
add
dec
sbb
popa
sahf
pop
into
arpl
jmp
(bad)
inc
dec
xor
add
pop
out
dec
and
leave
sub
pop
dec
or
test
cli
jns
jp
mov
jne
and
add
push
ret
test
in
out
pop
fld
retf
test
and
aas
in
jo
mov
pop
and
cmp
mov
enter
cmp
das
loop
xchg
jbe
push
or
and
loope
xchg
cmc
in
bound
inc
mov
push
push
loop
outs
movlps
ds
add
pop
nop
mul
out
dec
ss
sub
cmp
test
out
js
mov
out
aaa
xor
jne
inc
mov
rcl
not
call
sbb
je
(bad)
push
mov
stc
(bad)
mov
imul
(bad)
fcmovu
call
cmp
stc
and
and
int
cmps
int3
loope
and
scas
daa
daa
ds
dec
leave
(bad)
pusha
xlat
xlat
push
in
jbe
inc
push
push
mov
out
loopne
and
lods
pop
ss
ss
dec
mul
push
or
push
cdq
add
mov
inc
xchg
fadd
shl
inc
push
mov
adc
sub
push
lods
adc
je
jl
(bad)
jbe
jl
push
xlat
clc
out
test
retf
add
jae
hlt
data16
iret
out
mov
outs
adc
aaa
or
or
mov
jns
test
lahf
jae
imul
mov
shl
and
loopne
inc
cmp
push
popf
cmp
adc
and
jmp
int3
push
sub
js
inc
js
mov
pop
cmp
inc
sar
adc
pushf
push
cmp
pop
mov
mov
in
mov
xor
push
mov
jbe
popf
into
xor
adc
mov
in
dec
jecxz
fsub
aad
jae
jl
and
mov
scas
push
sub
mov
push
jb
sar
or
mov
xor
xchg
je
aas
inc
xor
cmp
jge
or
icebp
jg
mov
sbb
mov
fmul
stc
in
push
dec
call
outs
pop
dec
movs
dec
xor
je
and
mov
mov
sub
je
sbb
data16
hlt
jns
xor
pop
fistp
inc
adc
inc
(bad)
mov
or
sub
sbb
aaa
mov
pushw
movs
loop
or
mov
jmp
add
pop
dec
sar
or
sub
test
sbb
data16
lods
repnz
add
adc
push
mov
xor
mov
sub
das
inc
xchg
(bad)
pop
inc
rol
pop
mov
aas
sub
mov
je
(bad)
hlt
mov
inc
cmps
or
cwde
in
into
ss
sbb
out
mov
add
cli
sbb
test
nop
fadd
lea
rcl
ins
and
pop
push
xchg
xor
fsubr
jbe
sub
std
mov
cmp
adc
mov
xchg
cmp
mov
xchg
cli
dec
mov
jno
js
cmps
cmp
gs
es
fs
(bad)
mov
mov
push
and
aam
cmp
dec
fs
sub
(bad)
fstp
repnz
xchg
addr16
rol
dec
mov
popa
sbb
mov
or
jmp
inc
cs
cdq
jno
add
data16
enter
ficom
mov
ds
sub
lds
pop
test
jne
adc
sub
jo
call
loop
shl
cmp
pop
jmp
sbb
int
(bad)
xchg
mov
stos
push
les
or
push
repnz
adc
ds
pop
ins
jb
xchg
ud2
jle
adc
mov
repz
dec
pusha
int3
jle
pop
mov
add
rcr
(bad)
das
rol
jbe
into
and
inc
bound
jg
scas
mov
dec
lds
xor
loopne
inc
push
push
mov
test
pop
lock
and
aam
imul
adc
jp
repnz
adc
mov
lahf
sub
test
aad
imul
fdivp
mov
test
(bad)
into
out
call
js
and
nop
pushf
pop
lea
inc
fcom
fs
push
xchg
or
push
pop
cld
and
mov
mov
ja
(bad)
(bad)
and
stc
xchg
das
dec
fcomp
mov
popa
lea
pop
(bad)
mov
sub
je
mov
jge
call
jo
fcom
aaa
xchg
out
pop
outs
sub
js
fwait
xor
pop
int3
mov
inc
gs
jo
cli
pop
sub
xchg
mov
jo
sbb
ror
ds
push
inc
gs
mov
aaa
call
shl
(bad)
mov
cwde
(bad)
movs
sub
pop
sbb
mov
(bad)
xchg
sbb
adc
int
jmp
xchg
cmps
out
or
dec
mov
js
retf
cdq
loope
add
inc
add
cld
push
jnp
mov
add
ds
sbb
pop
sahf
adc
mov
and
xchg
test
repz
outs
mov
cdq
fsub
pop
aas
test
add
cmp
adc
fs
jne
mov
and
mov
test
(bad)
ins
jbe
add
or
push
inc
enter
ret
daa
sahf
adc
shr
push
movs
or
sbb
mov
push
(bad)
pushf
fisttp
or
(bad)
syscall
stos
and
out
adc
push
pop
jecxz
aaa
mov
cmps
and
sbb
inc
or
addr16
mov
shr
pop
cmp
dec
jmp
je
fisub
pop
adc
inc
pop
dec
nop
out
cmp
mov
ja
(bad)
rcl
aad
ins
mov
fst
mov
jb
mov
dec
inc
fucomi
push
mov
sub
push
int
adc
mov
cmp
dec
jmp
aas
mov
and
std
mov
and
push
pop
clc
shl
xchg
jl
repz
mov
or
mov
mov
jno
iret
sbb
pop
pushf
jg
icebp
cmps
jle
jns
lds
rcl
movs
ins
scas
in
xchg
lock
leave
sub
fisubr
and
jg
xchg
and
sbb
loop
pop
call
xor
xor
outs
push
popa
push
lods
lock
xchg
mov
jne
sub
aam
(bad)
vxorps
out
gs
jae
sbb
or
ins
push
fsubr
sub
rcl
outs
adc
stos
pop
repz
xor
jbe
jmp
in
dec
or
push
dec
cli
push
jp
dec
sub
xor
in
gs
outs
jo
pop
in
rol
cmc
adc
leave
popf
dec
xor
sub
cmp
addr16
push
or
clc
add
dec
into
fwait
retf
iret
es
jmp
aas
and
pop
dec
inc
call
jnp
push
jecxz
in
push
add
leave
lock
jg
retf
leave
test
outs
jmp
sub
inc
adc
mov
jno
aas
dec
ins
out
stos
cmc
pop
inc
xor
div
and
xchg
add
inc
mov
push
icebp
daa
bound
mov
outs
shr
xchg
mov
ins
fwait
pop
mov
icebp
jmp
inc
cmps
(bad)
aad
int
jae
shr
jl
xlat
sbb
scas
jmp
das
cwde
rol
jmp
and
test
sub
add
int
scas
les
and
lea
test
dec
shl
fcom
ror
ja
jecxz
inc
faddp
push
pop
or
retf
xchg
cli
(bad)
mov
icebp
ret
nop
aaa
fidivr
fs
xor
idiv
and
nop
and
mov
sub
dec
push
scas
imul
pushf
icebp
mov
gs
outs
pop
xchg
daa
addr16
push
xchg
sbb
test
xchg
add
push
and
das
dec
mov
cli
adc
ins
in
inc
mov
addr16
fcmove
dec
iret
mov
lods
mov
inc
loopne
pop
mov
inc
lds
sbb
out
ss
sub
or
jle
sar
scas
push
jns
sti
mov
mov
cmp
rcl
adc
mov
das
cmp
pop
adc
sbb
das
shl
push
iret
add
pop
mov
add
lea
imul
push
adc
stos
jecxz
out
xor
jae
stos
std
pop
int
inc
and
sbb
jl
in
movs
pop
popf
sub
outs
xchg
mov
stos
mov
lock
call
lods
das
adc
inc
popf
clc
jns
mov
mov
test
mov
jmp
movs
push
adc
jmp
gs
jp
sub
out
jns
mov
(bad)
mov
mov
repnz
pcmpgtd
mov
int3
imul
hlt
lods
cmp
jle
and
mov
cmp
loop
(bad)
ret
inc
(bad)
out
cmp
jmp
js
es
ss
fcom
xchg
jb
pop
xor
ss
fstp
mov
push
adc
push
push
mov
movs
inc
ins
adc
enter
adc
int3
ja
jo
pop
jb
jbe
ret
pop
mov
sub
jb
adc
stc
xor
test
lods
lds
add
xor
fnsave
loopne
sub
xor
(bad)
movs
sub
retf
xchg
gs
fisub
inc
add
sti
lods
std
fisttp
adc
pop
int
jp
lods
mov
enter
mov
mov
pop
xchg
repnz
cmp
fs
dec
push
repnz
jnp
into
add
jg
pop
jmp
push
pop
loope
es
xchg
clc
adc
stc
push
push
dec
cmp
lds
int3
pop
enter
and
and
dec
loopne
push
mov
pop
pushf
sub
jmp
xor
test
sbb
or
out
retf
sub
mov
imul
in
or
fadd
mov
dec
(bad)
sub
inc
dec
jecxz
jnp
jnp
movs
push
xor
mov
pop
std
xchg
mov
in
shl
push
cmp
push
mov
adc
pop
cmp
retf
loop
dec
cmps
scas
dec
pusha
nop
fiadd
sbb
sti
inc
inc
test
or
and
hlt
cmp
stc
aaa
jge
sbb
pop
loope
sbb
cmp
mov
bnd
movs
(bad)
popf
push
sbb
jmp
push
and
imul
lahf
out
dec
dec
adc
mov
mov
retf
and
lock
cdq
push
arpl
cmp
retf
jg
and
adc
xchg
inc
cld
ret
imul
(bad)
cli
bound
leave
xchg
je
aaa
(bad)
mov
sbb
clc
sub
fnsave
xor
add
leave
pop
mov
std
or
fisttp
(bad)
fdivr
cmps
push
test
xor
ins
push
fldenv
mov
pop
jp
add
lods
mul
and
xchg
dec
inc
push
arpl
mov
test
pop
push
cmp
jmp
lods
xor
mov
scas
xor
xchg
test
dec
std
jb
cmp
test
test
mov
call
pusha
push
mov
mov
sub
xchg
and
adc
icebp
jge
xor
aas
lds
mov
mov
lds
pop
pop
int
arpl
ins
jge
jo
into
add
sbb
push
ins
rcl
loop
and
test
sbb
(bad)
jle
das
push
cmp
mov
pmaddwd
mov
jle
jb
xor
push
add
mov
and
rcpps
xchg
dec
(bad)
popf
adc
ins
mov
hlt
inc
call
xor
movs
fistp
add
aaa
jge
xchg
lock
lods
arpl
jno
je
inc
dec
pop
sub
loope
nop
push
mov
pop
or
push
retf
out
mov
sub
mov
mov
mov
out
je
neg
mov
ret
fnsave
retf
mov
xchg
xor
mov
stos
xchg
mov
aas
push
jnp
test
aam
adc
mov
ret
jle
dec
and
mov
push
(bad)
icebp
stc
add
push
inc
jp
and
cmp
not
rcr
fstp
dec
aam
int3
cmps
push
test
jl
sbb
neg
jle
ror
mov
dec
xchg
and
(bad)
ja
and
and
lods
movs
scas
jne
fs
mov
mov
pop
(bad)
lds
push
addr16
ffree
(bad)
cmp
pmullw
cmp
sar
push
cmp
loop
iret
popf
fwait
cmps
mov
xchg
pop
dec
sti
mov
sub
jne
dec
inc
sbb
pop
inc
and
leave
or
sub
mov
dec
in
fs
fwait
ins
dec
test
and
in
push
pusha
sbb
push
pop
jb
cli
(bad)
xchg
add
(bad)
gs
imul
das
in
inc
nop
mov
xor
pop
push
daa
mov
push
or
sbb
cmp
mov
xchg
xor
inc
sub
lds
test
push
sbb
adc
(bad)
cld
dec
retf
cli
outs
fadd
pushf
repnz
jbe
sub
cmp
add
add
pop
adc
xchg
pop
push
(bad)
out
xor
mov
fbstp
jmp
out
leave
pop
xchg
push
push
adc
jo
xor
dec
jl
jge
inc
lahf
cdq
push
punpcklwd
xor
jae
loopne
repz
popf
dec
js
mov
xor
popa
sbb
pop
arpl
std
mov
adc
mov
cmp
outs
jmp
add
push
scas
into
rcl
(bad)
sbb
cld
movs
mov
adc
jl
push
mov
stos
or
ja
pop
push
fcmovu
mov
mov
imul
mov
lea
enter
sub
jae
js
pushf
dec
aad
(bad)
out
mov
movs
pop
pop
dec
or
dec
out
lahf
push
xchg
test
dec
add
cmp
adc
outs
sbb
out
add
data16
outs
xlat
pop
(bad)
xchg
(bad)
sbb
and
sub
and
aas
out
mov
mov
sub
xor
dec
iret
cmovle
(bad)
lods
sbb
in
shl
ffreep
mov
sbb
and
mov
jns
call
scas
fisub
mov
adc
inc
and
cmc
sar
mov
ficom
inc
adc
sub
fidivr
outs
dec
lock
jbe
clc
int3
xor
inc
mov
ins
push
mov
mov
movs
cmp
mov
pop
mov
repz
xlat
loopne
(bad)
mov
dec
or
mov
fild
(bad)
jmp
push
addr16
adc
mov
daa
mov
mov
rcr
inc
pop
pop
mov
repnz
stos
and
push
add
adc
(bad)
adc
jae
leave
adc
outs
fwait
jp
xlat
pusha
hlt
dec
mov
inc
mov
or
(bad)
mov
popf
add
cs
(bad)
stos
ficom
push
cli
fldcw
(bad)
pop
inc
jle
mov
xchg
lahf
dec
mov
(bad)
xchg
add
int3
mov
aas
mov
int
jne
mov
leave
pop
test
test
loope
jle
cmp
mov
sub
add
jns
lea
push
push
jp
fisttp
inc
sbb
and
adc
ror
cmps
shl
mov
cld
xchg
xchg
arpl
stos
lods
repz
xchg
stc
sub
enter
pop
xchg
mov
out
jl
iret
test
test
pop
mov
loop
dec
push
ja
(bad)
fldenv
dec
mov
and
jecxz
mov
or
out
mov
and
retf
popf
adc
jae
movs
xor
mov
sar
push
add
mov
pop
scas
jb
ins
out
lods
es
xchg
out
ja
dec
out
mov
pop
sbb
mov
jg
or
out
adc
pop
stc
(bad)
fidivr
or
xor
add
pop
mov
movs
mov
jmp
mov
call
inc
cmp
push
pusha
cmc
mov
lock
sub
test
je
lds
lds
add
cli
jnp
push
int3
pop
xchg
jo
retf
and
adc
add
push
sbb
in
add
sub
adc
fsub
or
fwait
xchg
(bad)
in
mov
sbb
mov
cwde
sbb
inc
call
push
int3
push
ret
xor
adc
mov
stos
into
aad
loope
or
nop
xchg
stos
mov
mov
and
lods
loope
inc
add
fmul
jmp
mov
dec
mov
push
add
jecxz
push
stos
jne
inc
cmp
dec
in
je
or
aaa
push
rcr
sbb
dec
outs
mov
mov
jmp
fldcw
not
inc
data16
fdivr
cwde
xchg
xlat
xchg
movs
dec
js
adc
or
sub
jne
idiv
add
mul
or
dec
push
mov
sub
push
jae
add
pusha
fsub
xor
xor
xor
mov
mov
pop
pop
mov
jb
outs
jo
stos
xchg
hlt
call
scas
mov
fiadd
jns
call
mov
cmc
xchg
jno
mov
pop
sbb
jl
mov
sub
dec
xchg
rol
fcom
dec
bound
fcom
mov
std
inc
pop
fbld
inc
mov
pop
push
pusha
adc
push
sub
repz
pop
loop
stos
fwait
and
ds
push
fistp
jmp
dec
xor
cmps
mov
mov
ret
sahf
push
aam
repnz
(bad)
xor
mov
pop
pop
sbb
div
leave
pop
pop
je
jl
adc
jmp
sub
push
mov
movs
push
lods
sbb
push
fisub
fimul
aaa
jl
mov
es
mov
add
fwait
mov
pop
in
inc
jbe
add
adc
icebp
sbb
cmp
or
xor
and
xchg
test
cmp
xchg
arpl
mul
jle
xor
adc
cli
and
mov
dec
xchg
lea
out
cdq
cmp
xor
scas
add
xchg
add
in
rcr
outs
inc
mov
adc
push
nop
or
cld
imul
mov
imul
call
mov
xor
xchg
call
and
inc
xchg
repnz
sub
cmp
push
sbb
inc
xchg
out
mov
lds
dec
ret
rcl
xchg
mov
or
iret
scas
mov
addr16
cmp
retf
int
xor
inc
fst
data16
add
xor
dec
es
cld
or
jg
xor
fcom
loopne
fucomi
mov
pop
jle
ficom
nop
push
out
dec
das
dec
popa
test
push
rep
dec
pop
xchg
sbb
or
xor
cmp
loop
jmp
(bad)
call
pop
leave
retf
movs
sbb
pop
adc
adc
push
rcl
xor
nop
sbb
pop
cdq
mov
or
cmc
jmp
gs
sub
xchg
cdq
sbb
jne
stc
mov
xchg
adc
stos
xchg
xor
hlt
(bad)
sar
test
adc
in
and
mov
imul
adc
push
sahf
mov
hlt
int3
test
movs
std
lock
(bad)
iret
sbb
out
sbb
push
adc
adc
lds
pop
inc
add
and
retf
pop
mov
mov
aad
jge
ficom
aaa
outs
xchg
inc
outs
xor
and
not
sub
push
pusha
mov
mov
fwait
mov
repnz
xchg
sub
pop
hlt
out
mov
jnp
dec
or
(bad)
sbb
pop
(bad)
std
add
arpl
ds
jle
or
jae
mov
mov
xor
xchg
ret
jl
cmp
cmp
push
jae
cmp
and
loopne
stos
sub
mov
pop
cmps
(bad)
xor
fcmovb
and
je
(bad)
add
inc
cmp
add
stos
or
je
popf
lahf
mov
jp
xchg
mov
and
jg
scas
cmp
fcmovbe
cmp
rcr
mov
sbb
mov
jne
std
add
mov
popa
iret
bound
jle
(bad)
jnp
ja
call
movs
cmp
sub
(bad)
je
gs
cs
sub
je
pop
push
xor
(bad)
jl
cvtpi2ps
xlat
mov
mov
push
push
push
dec
mov
mov
and
sub
sbb
sbb
dec
inc
cmp
xchg
mov
jo
jl
ret
mov
nop
or
pop
scas
mov
or
dec
call
dec
push
mov
sahf
pop
ret
bound
jb
retf
cmps
ins
xchg
xor
das
ds
lea
xlat
call
pop
repz
sahf
mov
fiadd
jp
and
add
in
jo
leave
push
add
fsubr
test
fcomp
add
sbb
mov
rol
jb
mov
push
or
cmp
cmc
out
inc
mov
call
ins
push
in
mov
pop
sahf
loope
rcl
repnz
retf
ja
pop
repnz
mov
dec
popf
sub
das
pushf
add
jmp
dec
cmp
mov
push
adc
ret
sar
fist
pushf
mov
inc
jo
push
mov
adc
jle
clc
jbe
repz
into
dec
loope
dec
das
js
mov
mov
repz
push
ja
mov
aam
cli
cli
mov
popf
sub
jbe
mov
out
dec
xchg
in
sbb
pop
movs
xchg
std
rcl
or
xor
pushf
shl
aam
jmp
and
lods
out
test
rcr
xor
add
cmps
fnstcw
inc
repnz
mov
(bad)
in
ja
cld
adc
ret
cmp
mov
sbb
test
pusha
and
xor
aam
icebp
jae
dec
(bad)
cmp
jge
pop
data16
mov
jmp
(bad)
call
pop
cdq
lahf
je
imul
ret
(bad)
pop
ret
std
push
daa
out
push
or
mov
retf
jmp
fsub
leave
and
iret
rcl
mov
cmp
xor
sbb
das
(bad)
and
push
outs
fild
adc
jge
ja
inc
inc
iretw
sub
out
mov
scas
jg
sbb
mov
in
sub
mov
arpl
inc
js
and
mov
dec
js
sahf
ins
mov
fcom
adc
jle
inc
xchg
fild
idiv
fistp
push
in
jp
scas
scas
and
pop
lods
push
inc
(bad)
pushfw
cmp
xchg
test
mov
out
mov
mov
jo
(bad)
adc
dec
frstor
inc
int
mov
fld
addr16
pushf
fnstsw
pop
ret
mov
cmp
movs
sbb
dec
(bad)
repz
fxam
pop
mul
inc
mov
cmps
and
rol
and
fist
lea
mov
push
adc
loope
sar
and
push
das
ret
fcomp
aaa
jmp
clc
xchg
shr
pop
adc
push
mov
and
cmps
or
aas
add
mov
outs
xchg
rol
or
sbb
lock
arpl
or
daa
call
(bad)
int3
int
das
adc
jae
ret
xchg
dec
popa
xor
(bad)
cmp
lods
cmps
lods
mov
(bad)
repnz
cs
xor
cwde
or
(bad)
xchg
out
nop
fisubr
jnp
arpl
jnp
test
add
rcr
leave
mov
cmps
inc
xor
dec
(bad)
pop
jmp
pop
pusha
pushf
arpl
xor
jns
(bad)
fisttp
clc
into
jns
fistp
mov
add
ja
retf
or
shl
jnp
sbb
push
mov
pop
ret
push
or
or
push
fldenv
jmp
mov
enter
jmp
cs
mov
cmp
xchg
ja
into
aam
jl
fist
cwde
in
lea
iret
sub
xchg
ins
lods
mov
retf
sub
sub
xor
add
jl
cwde
dec
push
mov
or
stc
pop
dec
dec
adc
dec
xchg
adc
xor
xchg
mov
jbe
loopne
int
xor
retf
cdq
aam
frstor
inc
sub
stos
inc
mov
xor
jl
mov
xchg
mov
pushf
mov
sbb
inc
cmp
(bad)
(bad)
stc
xchg
push
loope
xchg
push
aaa
test
ds
pop
fcmovbe
in
jmp
in
shl
pop
test
and
les
nop
adc
nop
fcom
fcom
outs
test
dec
call
movs
ret
call
cmp
popa
mov
xor
pop
sar
mov
ds
xchg
mov
lock
icebp
and
fild
mov
jnp
int3
pop
push
fmul
xchg
cmc
int
sbb
pop
adc
shr
call
inc
push
mov
pop
iret
dec
jns
mov
push
(bad)
aad
xor
aad
mov
mov
shr
mov
fxtract
and
sbb
cmp
sbb
push
(bad)
shl
mov
push
imul
in
movs
xchg
sar
dec
adc
pop
cmp
fadd
dec
pop
push
sbb
mov
aaa
gs
or
sar
cwde
addr16
sbb
xchg
mov
jne
xchg
jmp
jecxz
nop
arpl
push
push
out
pushf
cmp
in
xchg
sbb
in
mov
les
sub
dec
imul
sbb
dec
(bad)
and
xchg
add
dec
push
test
jmp
add
xchg
ret
or
cmp
xor
mov
inc
add
cmps
xchg
int3
imul
cmp
push
pop
add
std
inc
cmc
xor
leave
mov
add
xor
bswap
ret
cmps
inc
mov
cmp
sub
stos
mov
xchg
and
sahf
movs
mov
nop
lods
push
(bad)
out
fisttp
shl
mov
sub
(bad)
popf
bound
mov
je
add
shl
int
rcl
cmc
outs
pop
cmp
shr
push
jge
sbb
lea
mov
jmp
dec
in
(bad)
loop
adc
adc
or
dec
test
jmp
sbb
mov
inc
mov
int3
(bad)
dec
adc
inc
out
scas
(bad)
jp
xlat
sahf
movs
mov
stos
(bad)
or
adc
mov
pop
shl
cmp
stos
imul
fnsave
cmp
jno
xchg
scas
call
fdiv
dec
loope
adc
inc
ja
call
or
icebp
addr16
shl
shl
stos
rcr
xor
jmp
pop
das
pop
inc
push
mov
push
rol
dec
ror
mov
mov
mov
es
mov
mov
cmps
loop
sub
xor
mov
test
mov
mov
out
mov
pop
shl
ds
mov
add
mov
pop
mov
test
mov
dec
cmp
(bad)
ror
cmp
mov
push
adc
not
retf
push
jg
sar
test
aaa
push
push
sti
cli
push
add
inc
test
pop
lea
cs
in
lds
mov
sti
sub
jmp
pop
fistp
repz
repnz
inc
or
mov
jecxz
jp
inc
push
sbb
jecxz
(bad)
xor
pop
cld
lea
xor
into
es
in
inc
sbb
mov
and
scas
rcl
ret
bound
lea
jmp
dec
in
mov
cmp
pop
push
fsub
loopne
or
pop
pop
sbb
cmps
scas
stos
xchg
add
lods
inc
sti
xor
pop
int
inc
mov
cmp
xor
adc
mov
mov
in
push
loopne
arpl
pop
cmp
lods
mov
mov
pushf
cmp
sub
loope
imul
retf
int
push
dec
sub
out
call
mov
icebp
push
aaa
cmp
pop
xor
mov
aaa
pop
test
mov
nop
mov
inc
pop
je
sbb
mov
jge
mov
jp
ds
push
jo
xor
push
add
sbb
sub
ss
test
xchg
mov
pop
jle
pop
arpl
jge
jl
mov
pop
mov
cmp
push
in
jb
dec
and
push
dec
fild
sahf
pusha
push
push
sub
mov
push
imul
lock
add
hlt
adc
adc
or
loop
aad
jbe
dec
pop
into
iret
div
(bad)
jmp
in
fiadd
xor
test
mov
mov
mov
sbb
fst
leave
sub
mov
in
xchg
and
out
bound
pop
stc
sbb
dec
inc
rol
loope
push
int
outs
sub
dec
loopne
and
movs
lock
sbb
xchg
xor
scas
imul
push
add
or
xchg
leave
ins
sar
push
push
ins
adc
mov
sub
pop
repz
clc
or
jnp
cmc
xor
mov
test
adc
es
arpl
test
jnp
leave
jno
je
sub
and
fcomp
mov
add
or
nop
stc
es
dec
xlat
dec
jmp
pop
mov
mov
fld
mov
ror
inc
mov
mov
ss
stc
adc
stos
dec
nop
dec
and
pop
push
fs
das
or
std
ror
neg
jle
add
aam
dec
or
and
test
outs
popf
ds
and
and
adc
iret
mov
imul
jnp
ret
jmp
sub
ja
pushf
pop
fbstp
jg
cmp
mov
jp
sub
mov
push
shl
mov
loop
pop
or
or
stc
mov
sbb
inc
and
adc
fs
xor
mov
or
clc
imul
ds
sub
xchg
(bad)
xchg
xor
lock
les
mov
(bad)
call
scas
mov
mov
js
(bad)
jle
repz
shl
xor
cmps
or
push
cmps
loop
fwait
sbb
enter
sbb
mov
not
ss
xor
pusha
repnz
mov
ss
int
add
xchg
stos
mov
movs
jmp
clc
add
jl
dec
mov
rol
clc
jp
adc
sbb
fmul
retf
mov
in
push
gs
and
mov
jbe
fnstsw
mov
(bad)
psrld
out
pop
lods
sbb
test
add
fsub
imul
sbb
es
add
push
add
xor
adc
in
shl
pop
loop
pop
fadd
cmp
rcl
xchg
adc
int
ins
and
push
cmps
or
xchg
ss
mov
push
inc
sahf
jne
pop
outs
add
or
jge
test
inc
pop
popf
fcom
pop
pop
or
push
cli
xor
cmp
add
push
mov
mov
scas
rcl
call
mov
push
fcom
inc
jbe
hlt
in
in
add
add
jo
iret
jnp
imul
inc
mov
pop
icebp
out
push
push
repz
out
push
sbb
and
xchg
jecxz
mov
movs
(bad)
repnz
and
aas
jmp
xor
pop
add
neg
sar
mov
stos
movs
dec
pushf
ficom
sbb
and
data16
cmp
xor
dec
dec
scas
sub
hlt
and
inc
pop
xchg
or
mov
nop
nop
adc
rcr
test
sub
shr
mov
and
push
(bad)
ror
dec
iret
mov
dec
fidiv
or
pop
sbb
adc
add
push
aad
mov
dec
inc
mov
mov
xchg
call
adc
and
test
mov
sar
push
push
enter
or
fdiv
mov
into
and
test
lock
outs
sbb
out
cld
xchg
pushf
lds
ins
xchg
enter
jno
cmps
push
jne
xchg
jb
hlt
cmp
mul
push
shr
mov
loopne
out
scas
dec
gs
xchg
or
add
pop
das
sbb
mov
aas
test
xchg
inc
imul
and
xor
call
sub
push
jns
adc
into
dec
fstp
(bad)
xchg
mov
jo
xchg
sbb
int3
and
mov
jecxz
xchg
call
aaa
mov
inc
dec
pop
add
aas
and
lods
jg
jge
mov
cld
nop
adc
add
jge
xor
scas
add
jnp
add
hlt
lock
mov
pusha
mov
test
pusha
push
or
mov
add
xchg
sub
and
or
xor
cli
or
out
lods
rcr
xlat
inc
not
dec
fcomp
les
lods
mov
jp
retf
mov
xchg
ss
or
sbb
push
xchg
sar
xor
scas
fsubr
retf
push
fidiv
xchg
sbb
lahf
cmp
jae
push
mov
mov
repz
pop
sbb
aam
lea
call
jg
pop
cmp
in
xchg
imul
push
arpl
repnz
std
adc
push
sub
mov
out
mov
dec
pop
pop
pop
stos
jmp
mov
sub
sub
dec
enter
lods
xlat
test
sahf
cmp
mov
fs
mov
cmps
add
cwde
sbb
daa
sbb
mov
retf
adc
std
test
pop
retf
movs
push
xor
hlt
mov
ret
adc
cwde
sub
cs
jns
loopne
aad
sub
std
cs
push
add
test
popf
cld
fs
sbb
sub
jg
xchg
fcomp
jnp
xchg
inc
mov
pop
imul
movs
cmp
arpl
out
les
cld
xchg
push
enter
lahf
jl
push
cmp
and
aaa
fs
fwait
cmp
mov
jmp
std
int3
cmp
enter
das
xor
sbb
int
inc
pop
mov
push
jns
adc
dec
popf
jl
or
ret
lock
fbld
or
es
loopne
fidivr
aam
mov
fisttp
aaa
js
mov
sub
lea
les
pop
add
stc
mov
test
js
data16
mov
push
dec
xchg
call
clc
stos
jne
arpl
mov
stc
or
sahf
popa
xchg
and
call
mov
repnz
sub
js
xchg
movs
mov
jge
cmps
jl
cmp
push
imul
pop
dec
imul
pop
iret
pop
mov
and
mov
sbb
sbb
repnz
arpl
ret
and
in
shl
pop
inc
mov
pushf
es
hlt
fiadd
jmp
mov
push
pop
sub
(bad)
pop
jecxz
jge
out
push
adc
pop
xchg
mov
push
ins
test
mov
hlt
scas
out
sbb
fcmovne
in
enter
pop
int
sub
jp
fild
and
cmps
retf
(bad)
jmp
dec
scas
xchg
and
or
popa
sbb
pop
aaa
cmc
jp
mov
cs
mov
aam
(bad)
pop
sub
sbb
mov
jge
pcmpeqb
repnz
push
in
sub
sub
hlt
mov
sbb
mov
sbb
jle
loope
pop
call
push
scas
jbe
loope
xchg
or
lods
dec
je
(bad)
jp
ret
int3
inc
push
pushfw
imul
push
sbb
mov
adc
retf
hlt
fcom
pop
daa
cmps
fimul
sub
push
sbb
jns
push
gs
xchg
push
mov
aas
lock
jg
test
cs
jo
push
mov
xchg
inc
jae
scas
into
retf
ins
(bad)
mov
loope
adc
xcrypt-cbc
cmps
push
cmp
shl
inc
jo
xchg
(bad)
jmp
(bad)
cmc
xchg
sub
mov
sub
add
add
xlat
adc
fisttp
fwait
lods
xor
jecxz
pop
retf
call
fild
sub
popa
sub
jecxz
cld
icebp
call
das
xchg
or
jns
mov
adc
stc
stos
repz
push
ret
sbb
loope
cli
out
push
cmp
fstp
add
add
sub
ss
or
retf
call
jmp
leave
jne
out
pop
cmp
mov
aas
pop
adc
js
sub
ss
aaa
sahf
(bad)
sub
cmp
pop
sti
xor
adc
xor
cs
lods
out
push
repnz
xor
add
stos
xchg
push
loop
jns
call
outs
lods
mov
outs
pusha
fld
lds
and
cmp
xchg
cmps
ds
ins
cmp
and
(bad)
cmp
ficom
mov
or
sub
imul
retf
enter
pusha
call
jle
aas
push
(bad)
pop
cmp
mov
fidiv
xchg
into
push
jecxz
outs
icebp
xor
xchg
(bad)
retf
mov
hlt
les
mov
push
mov
push
pop
in
les
push
fisub
mov
(bad)
or
dec
out
iret
rcl
fdiv
and
adc
pop
lods
jo
mov
out
jg
(bad)
jl
popf
jmp
enter
xchg
sub
sbb
pusha
in
mov
rcl
ret
pop
icebp
ror
or
sub
cmp
mov
out
aam
int
cmp
loop
outs
cmp
sahf
mov
or
sub
dec
or
rcr
mov
push
xchg
and
sub
rcl
jmp
cmps
sub
jmp
nop
test
sub
mov
test
sbb
xor
or
cmc
push
xor
loop
dec
push
loope
sbb
jl
and
cmps
aam
mov
jmp
inc
and
ficom
jg
push
push
loopne
pop
test
mov
inc
int
cmp
shl
ret
xchg
mov
jbe
in
test
pop
cmp
rcr
and
arpl
or
cmp
pushf
inc
pop
sub
push
fwait
xchg
and
(bad)
mov
add
lods
push
push
ss
sub
cmp
mov
out
idiv
add
xor
xchg
adc
mov
les
mov
ins
adc
addr16
scas
cmps
lea
sbb
mov
add
cs
test
pop
cwde
xchg
mov
sub
enter
fnsave
adc
inc
icebp
lods
cs
cmc
mov
mov
sub
je
(bad)
jmp
ret
test
out
arpl
adc
retf
push
imul
xchg
(bad)
cmc
mov
sbb
lahf
dec
pop
cli
shl
sub
call
xchg
sub
push
popf
arpl
loope
fsub
in
mov
inc
neg
jae
xchg
shl
add
mov
imul
arpl
mov
std
mov
cmp
mov
aaa
cwde
xor
ret
cmp
dec
cld
call
xchg
cmps
jge
imul
iret
movs
sbb
out
fldcw
fucomp
fdiv
jl
and
mov
sub
inc
dec
les
xchg
mov
rol
ffreep
sahf
leave
test
or
out
jne
push
into
jl
xor
les
jmp
iret
mov
out
popa
add
pop
inc
add
adc
sar
inc
pop
rcl
pop
enter
xor
jl
xor
push
and
push
jbe
xlat
push
pop
outs
add
fwait
shl
(bad)
leave
call
ret
stos
and
jo
dec
dec
pop
or
dec
mov
and
bound
(bad)
pop
mov
and
stos
shr
rol
movs
inc
cmp
cmp
cmc
mov
ins
in
sahf
iret
jno
jecxz
jne
or
loope
lahf
xor
jnp
ficom
push
inc
xor
sar
pop
stos
push
cmps
xchg
retf
and
cmp
pop
fdiv
test
sbb
mov
movs
and
and
jl
add
std
jns
mov
sbb
add
pop
movs
pop
xor
cld
mov
aas
outs
cs
mov
push
fisttp
fadd
lods
jnp
stc
fsubr
cld
popa
es
mov
dec
push
aaa
stos
push
retf
and
in
xlat
push
ins
std
mov
and
pop
scas
adc
lds
push
jge
test
mov
and
(bad)
mov
sbb
inc
stos
mov
inc
imul
imul
jecxz
test
xchg
xchg
mov
jno
adc
pop
cmps
adc
cwde
inc
aam
mov
fild
test
fld
sti
ins
hlt
jns
test
cdq
adc
fistp
xchg
add
or
stos
es
mov
loop
jbe
rcr
stos
sbb
repz
mov
arpl
inc
pop
cmp
jp
cmp
scas
ret
clc
sbb
pop
xor
push
mov
stos
pop
add
(bad)
ret
jnp
cmp
inc
and
les
lea
mov
in
fsub
dec
les
gs
hlt
jne
or
or
pop
push
cmp
fnsave
dec
repnz
cmp
push
rcl
push
mov
cmps
ins
push
sbb
adc
(bad)
push
pop
pop
cli
ins
mov
pop
retf
cmp
pop
push
(bad)
mov
lock
repnz
hlt
int
je
cmp
sbb
dec
div
sbb
add
sbb
bound
cmp
ffreep
adc
sbb
in
push
mov
mov
pop
scas
mov
inc
ss
pop
dec
(bad)
jb
push
int3
cld
cmp
xchg
test
sub
iret
cmps
test
aas
jno
and
xchg
fidiv
rcr
mov
hlt
push
pop
mov
pop
dec
jb
jbe
cmc
enter
popa
out
jge
test
mov
arpl
or
aam
adc
movs
lods
dec
outs
inc
lock
ds
sub
lods
in
mov
push
dec
sub
in
jae
jnp
push
jns
ja
lods
je
cs
sar
push
hlt
movs
ss
inc
(bad)
jge
xchg
sub
(bad)
rol
adc
mov
sar
jmp
out
ja
inc
jp
ins
push
adc
jb
jge
dec
pop
jnp
arpl
cmp
xor
and
pusha
fidiv
dec
ins
sbb
call
movs
enter
cmc
push
jnp
dec
jp
stos
pop
aas
jns
clc
mov
adc
js
stc
mov
pushw
mov
addr16
cmp
div
xchg
popf
jne
or
(bad)
movs
sub
pop
popf
jmp
cmp
aas
jns
test
mov
popa
or
sbb
popf
mov
mov
and
mov
in
popa
cli
movs
repz
jbe
mov
js
mov
xchg
bnd
(bad)
fdiv
aad
xchg
mov
pop
nop
sbb
dec
mov
mov
sbb
adc
bound
fld
adc
cmps
adc
cmp
lock
frstor
and
test
cmp
out
push
test
jl
sar
sahf
hlt
dec
pop
sbb
jo
sub
sub
sbb
pop
(bad)
imul
movs
pop
les
cmps
jbe
imul
ror
ret
mov
in
push
stos
and
sbb
inc
jno
pop
xor
sub
mov
mov
pop
cmp
repz
inc
jmp
sub
or
fidiv
push
fist
inc
lods
(bad)
data16
out
in
(bad)
fs
adc
(bad)
pop
test
cs
pushf
stos
in
int
add
lods
mov
inc
add
cmp
cmp
jmp
push
jmp
sub
jmp
cdq
add
mov
add
aaa
cdq
fild
and
imul
sbb
xor
mov
outs
jbe
test
or
and
inc
data16
xchg
retf
push
cld
and
ret
mov
hlt
mov
outs
retf
es
jno
(bad)
(bad)
jae
dec
and
movs
ins
dec
xchg
test
sub
mov
jle
push
loop
sar
je
data16
adc
sahf
mul
xchg
mov
test
mov
loope
sbb
sahf
pop
or
aaa
dec
dec
push
push
jnp
add
push
xor
outs
add
pop
loopne
hlt
in
out
lods
xchg
lods
(bad)
cmc
jp
mov
mov
mov
xchg
mov
std
xor
push
(bad)
or
mov
fs
pop
mov
sahf
sahf
into
js
scas
iret
in
sub
mov
int
icebp
pop
imul
push
pushf
aad
cmp
ftst
cli
xor
xor
sub
and
sub
out
lock
mov
dec
lea
xchg
add
jp
pop
pop
test
sbb
(bad)
jl
cmp
leave
xor
hlt
arpl
sub
pop
sti
xchg
retf
mov
call
sub
nop
arpl
repz
mov
push
xchg
movs
ficom
into
ret
xchg
cld
(bad)
xlat
popa
add
and
mov
inc
les
pop
push
vpmacssww
je
hlt
mov
jp
dec
jno
mul
mov
fcom
(bad)
ins
fdivr
mov
es
mov
cld
add
sbb
cmp
mov
fwait
xor
pop
pop
sbb
mov
cwde
(bad)
test
ins
out
cmps
mov
dec
(bad)
jnp
cs
inc
xchg
pop
adc
enter
mov
stos
xchg
fimul
jecxz
and
les
add
rcl
dec
ret
add
int
mov
mov
imul
in
mov
add
push
xchg
and
cmp
not
in
repz
out
pushf
mov
jb
mov
inc
iret
jns
mov
out
lock
popa
sub
sub
push
js
stos
out
inc
xchg
add
cld
inc
retf
sti
repnz
out
push
dec
mov
hlt
mov
pop
or
in
mov
cmp
ret
push
aaa
daa
or
in
icebp
adc
jecxz
scas
mov
call
cmps
mov
jb
cwde
pop
loopne
rcr
dec
sub
push
enter
mov
xchg
and
fild
stos
(bad)
ror
arpl
loopne
(bad)
not
gs
(bad)
repnz
adc
pop
push
add
dec
and
outs
and
scas
add
mov
pop
call
push
sub
jp
cmp
sub
xchg
imul
dec
pusha
clc
fwait
fwait
jae
ds
or
xchg
call
lea
imul
or
xlat
es
jg
jo
ret
cld
and
mov
lds
clc
(bad)
imul
hlt
adc
in
pop
nop
mov
jnp
enter
xor
pop
std
xor
fs
scas
push
pushf
mov
add
push
add
and
add
add
ret
sahf
shl
push
bound
popa
mov
push
fstp
mov
enter
mov
fadd
out
int3
inc
or
jb
loope
daa
add
mov
xor
call
mov
outs
sub
pop
sbb
jne
inc
dec
pop
mov
in
cmps
xor
fsub
into
mov
inc
mov
(bad)
mov
add
sbb
shrd
mov
and
xchg
mov
or
and
jge
mov
(bad)
mov
movs
xchg
int
sub
jmp
daa
adc
sar
jle
sbb
mov
push
retf
jne
loop
mov
cmp
dec
or
mov
call
jge
test
jns
inc
mov
cmp
icebp
fadd
aam
stos
jl
xchg
mov
sub
into
mov
or
mov
jg
mov
jp
and
std
jecxz
in
aas
rol
jg
lds
dec
out
ss
sbb
nop
add
sub
and
jbe
add
adc
shr
rcl
scas
out
pop
pop
mov
xchg
jmp
xor
(bad)
std
jbe
fstp
push
mov
or
inc
iret
mov
push
std
jnp
jb
aam
aad
cmps
loopne
aam
xor
outs
addr16
sub
mov
iret
sub
xchg
(bad)
jge
sbb
jmp
jbe
in
loope
lea
cli
sub
imul
ret
jp
xlat
into
(bad)
(bad)
pop
lods
mov
mov
inc
leave
sub
dec
mov
cmp
dec
and
movs
js
mov
ficom
mov
cmps
push
icebp
push
cdq
xor
xlat
or
or
mov
add
dec
shr
mov
xchg
out
test
push
(bad)
call
add
pushf
div
or
enter
pop
cld
pop
mov
ret
sub
ret
repnz
loope
(bad)
cs
push
pop
outs
aaa
scas
sub
xchg
out
mov
fs
lea
mov
sub
push
mov
(bad)
mov
add
clc
inc
cmps
mov
dec
sub
jns
retf
mov
sti
les
mov
mov
daa
jb
mov
pop
mov
out
jne
scas
add
popa
and
mov
adc
fcom
out
jbe
daa
inc
sub
push
mov
ret
push
popf
ins
cmps
movs
sti
inc
and
cs
pop
dec
xlat
mov
jo
cmp
mov
sub
cli
sbb
dec
mov
dec
ss
(bad)
aam
movs
and
hlt
lea
pop
sbb
inc
mov
stos
stos
imul
mov
cvttps2pi
scas
xchg
into
pusha
pop
mov
push
cmc
jne
inc
sub
sbb
and
inc
dec
jmp
(bad)
push
and
iret
dec
rol
sbb
loope
add
xchg
ret
xchg
dec
lods
stos
pop
cmp
lds
movs
add
ret
test
or
out
retf
mov
mov
popa
push
js
(bad)
es
sub
adc
retf
dec
stos
and
or
sar
cdq
rcl
addr16
fldcw
pop
xor
ret
pop
sub
xchg
xor
out
data16
aas
jne
out
outs
pop
inc
lahf
das
call
dec
lods
out
add
test
adc
out
and
mov
es
mov
pushf
jo
add
xor
push
add
sub
bound
les
push
nop
jl
outs
push
sbb
int3
and
movs
cli
add
mov
jmp
cmp
dec
test
mov
mov
inc
adc
xchg
jns
fisttp
inc
xchg
sub
mov
adc
test
movs
ins
mov
sub
pop
cmp
leave
sti
fadd
or
sbb
aad
sub
jp
adc
pop
jp
dec
retf
mov
mov
mov
xchg
(bad)
mov
test
xor
test
cs
jmp
pop
push
or
ds
mov
push
int3
jnp
mov
fldz
jg
adc
adc
popf
and
add
test
add
add
inc
mov
xchg
(bad)
not
js
out
push
inc
int3
mov
fcomp
sub
jmp
sbb
sbb
push
(bad)
sub
ins
xchg
ret
jnp
dec
sbb
add
push
push
and
mov
sti
loop
test
nop
jo
adc
cmp
ds
inc
pop
sbb
inc
sub
xchg
adc
repnz
pop
ret
aas
daa
mov
lahf
call
aad
sub
mov
jle
and
cmp
jge
push
mov
xor
std
mov
or
fwait
mov
xor
jnp
pop
mov
dec
test
data16
inc
push
fistp
xor
movs
mov
jne
cmp
repnz
inc
cld
in
scas
and
pop
push
dec
fwait
pop
xor
(bad)
scas
fucomp
int3
clc
xor
cld
mov
shl
pop
adc
mov
sub
pop
and
mov
call
mov
mov
or
stos
loopne
lods
jb
enter
push
sub
inc
ins
loope
mov
cmps
mov
inc
xchg
sbb
dec
inc
xchg
aam
add
rol
icebp
in
dec
cmp
mov
push
jp
(bad)
mov
and
imul
sbb
or
sbb
mov
inc
mov
push
gs
into
dec
les
or
sub
adc
das
add
xor
pop
or
dec
cmp
loopne
push
arpl
fisttp
push
lds
or
js
mov
mov
and
ja
xor
adc
loop
fiadd
lea
push
mov
call
fadd
and
lods
mov
fldcw
sar
repnz
fst
ins
sub
outs
pop
xor
retf
cld
idiv
and
es
jno
inc
pop
sub
jmp
bound
or
inc
ja
push
push
icebp
dec
mov
shl
mov
mov
mov
retf
sbb
mov
sub
sbb
retf
sbb
mov
cmp
inc
in
out
mov
aam
cmps
enter
hlt
mov
xor
adc
dec
adc
hlt
jmp
adc
pop
jge
sub
sub
clc
in
cmp
or
repnz
loope
inc
(bad)
xchg
retf
mov
pushf
movs
add
fpatan
sbb
pop
sbb
into
xchg
repz
push
xchg
adc
ret
ins
push
call
adc
std
bound
dec
jecxz
scas
push
clc
or
retf
daa
add
aam
mov
ds
push
mov
or
add
(bad)
into
enter
(bad)
push
test
sub
push
sar
jmp
fisub
dec
das
dec
push
mov
or
cs
std
aam
adc
and
outs
daa
lods
pushf
mov
movs
and
outs
cmp
adc
or
sahf
adc
xor
call
add
pop
shl
mov
xor
adc
push
repz
shl
enter
sbb
cmp
mov
pop
loop
mov
sbb
and
mov
neg
aas
lock
call
jnp
popa
cwde
mov
mov
xor
ja
mov
(bad)
xchg
push
(bad)
cmp
das
and
jmp
dec
push
mov
ret
add
dec
sbb
push
int3
(bad)
mul
jl
fucom
scas
rol
in
mov
imul
jnp
leave
sub
sub
in
inc
rcr
test
test
mov
out
outs
mov
sub
outs
dec
sbb
rol
nop
leave
add
push
jl
dec
bound
scas
add
call
jp
pop
ja
sbb
fcmovb
mul
in
call
push
pusha
fist
das
inc
mov
add
mov
jns
dec
xor
int3
cmp
popf
mov
iret
(bad)
popa
jnp
sbb
sbb
arpl
xchg
dec
out
cli
lds
adc
out
movs
loopne
test
mov
bound
(bad)
xchg
sub
dec
jbe
ins
hlt
dec
retf
jae
jmp
sub
push
pop
cmp
jns
int3
push
xchg
mov
repz
push
xlat
(bad)
push
xchg
or
mov
and
rol
repnz
je
fisttp
jns
daa
sbb
dec
cmps
fistp
mov
mov
fsubr
mov
push
jne
cdq
mov
cmp
out
adc
(bad)
or
arpl
(bad)
fmul
(bad)
daa
push
add
(bad)
add
pop
push
rcr
xchg
out
mov
shl
stc
adc
mov
ss
and
and
sbb
jg
mov
dec
push
outs
mov
dec
sbb
mov
cli
int3
inc
stos
sub
std
pop
xor
mov
lds
add
pop
iret
mov
aas
add
or
loop
(bad)
adc
adc
clc
pop
gs
or
mov
or
xlat
in
xor
ss
and
and
(bad)
jmp
push
jl
or
mov
cmp
jnp
cmp
stos
xor
je
arpl
mov
ficomp
adc
jle
scas
or
sbb
ds
xchg
loop
les
das
loop
mov
dec
mov
and
in
jbe
and
adc
jl
iret
fld
and
pop
mov
out
out
dec
test
cmp
cmp
mov
jnp
or
push
xchg
mov
cmp
push
adc
cmp
push
sub
mov
cld
lock
ds
push
and
sar
ret
shl
sbb
dec
add
push
idiv
mov
inc
ret
lods
shr
fld
mov
retf
and
or
xlat
(bad)
in
push
mov
(bad)
add
ret
scas
sar
out
or
jmp
push
push
addr16
mov
(bad)
aaa
push
stc
xor
icebp
inc
in
imul
inc
fs
jnp
rcr
dec
sahf
mov
xchg
inc
adc
sbb
fidiv
jge
jno
outs
jb
push
ret
test
and
xor
adc
mov
dec
jns
je
add
aad
cdq
mov
call
repz
xchg
loopne
cmps
loope
and
imul
mov
jo
out
add
pop
xchg
hlt
mov
stos
into
iret
add
into
jmp
mov
lods
addr16
int
enter
fs
or
inc
imul
fucom
add
adc
xchg
add
pop
push
jecxz
and
jge
sbb
jecxz
dec
xchg
and
(bad)
mov
test
or
jb
sub
aas
adc
cmp
adc
sub
xor
outs
cmc
push
jb
loop
mov
cli
push
and
pop
dec
ds
cmps
sbb
dec
scas
pop
jmp
jp
adc
inc
and
fst
jnp
sbb
push
jo
jno
mov
mov
imul
inc
xchg
sbb
stc
jmp
pop
ficomp
xchg
aas
mov
pop
fdiv
cs
pushf
sbb
jmp
je
dec
push
popa
cmp
aas
adc
jp
sub
xchg
xchg
or
cli
mov
mov
add
and
inc
sub
jno
dec
mov
mov
jmp
pop
stc
add
jne
leave
out
or
and
xchg
addr16
aaa
dec
dec
test
les
xlat
xor
retf
xchg
repnz
call
hlt
cmp
sbb
leave
es
scas
sahf
jno
movs
dec
mov
adc
ffreep
test
cmp
push
mov
repz
(bad)
sbb
ror
add
aaa
lock
and
inc
pop
mov
pop
xor
fsubr
inc
add
mov
out
mov
xor
repz
dec
or
mov
pop
jp
in
call
or
es
sti
sub
call
fdiv
popf
mov
push
or
adc
push
ficom
fimul
cmp
xchg
sbb
mov
scas
cmc
rcr
mov
or
and
repnz
adc
mov
mov
bound
ss
les
or
mov
(bad)
mov
stc
pop
sub
mov
ja
ds
les
push
or
sahf
xchg
inc
call
fistp
jne
dec
div
mov
es
shl
or
scas
cmp
fdiv
imul
aas
dec
jge
mov
adc
xchg
cmp
call
ins
cmp
aad
or
fsubrp
mov
or
fwait
out
stos
sub
pushf
ds
cdq
pusha
inc
stos
in
inc
jnp
shl
pop
cli
outs
out
out
jmp
(bad)
int3
(bad)
jecxz
cmps
xor
daa
jle
mov
fs
mov
test
and
and
test
sub
jle
shl
iret
test
pop
cmps
jp
lods
inc
sub
mov
mov
dec
or
jmp
sar
sbb
sar
ss
inc
imul
ja
nop
mov
rcr
xchg
and
pop
pop
ss
jne
cmp
mov
fcomp
and
fadd
das
dec
add
es
push
stc
shl
cwde
fcomp
pop
inc
pop
pop
mov
sub
out
stos
pop
outs
pop
shl
xchg
push
push
hlt
mov
add
or
push
xchg
adc
or
dec
stc
jne
imul
mov
clc
sub
xor
pusha
les
cmps
scas
add
inc
test
sbb
mul
(bad)
outs
sbb
mov
adc
(bad)
push
mov
mov
shr
mov
jmp
dec
jp
pop
dec
hlt
push
mov
fnstsw
fcomp
adc
dec
enter
shl
inc
adc
cmps
rcl
xchg
js
or
aaa
out
(bad)
mov
inc
mov
pop
sub
jg
stos
fwait
ror
cli
fadd
and
push
enter
mov
bound
jbe
(bad)
sub
cmps
and
xchg
cli
stos
test
icebp
es
imul
sahf
sti
idiv
inc
cwde
sahf
stc
mov
addr16
mov
xor
mov
retf
cmps
neg
mov
sbb
ret
dec
cli
mov
out
or
call
pushf
lock
fstp
jne
and
(bad)
and
hlt
xor
xor
in
in
bound
mov
add
retf
xor
jno
fsubr
int
addr16
xor
sbb
jmp
pusha
shl
adc
fsubp
movs
mov
arpl
xchg
icebp
cmp
imul
test
icebp
fiadd
call
push
adc
dec
lahf
enter
mov
imul
scas
das
in
retf
mov
jb
shr
(bad)
in
cmp
push
repz
loopne
mov
mov
push
in
nop
push
pop
addr16
(bad)
loop
scas
xchg
int
mov
rcl
ds
jle
or
xor
xor
push
aas
lds
mov
out
enter
ror
push
push
out
jo
jae
mov
in
dec
mov
js
(bad)
dec
ja
in
scas
fidiv
cmp
fldcw
aam
or
test
outs
cdq
cmps
enter
popw
mov
rol
pop
outs
xchg
leave
fcomp
movs
paddb
ficomp
mov
out
jge
push
inc
cmps
mov
jl
inc
stos
pusha
mov
sub
stos
cmp
retf
popa
dec
jb
(bad)
popf
rcr
into
leave
ds
mov
mov
mov
shl
(bad)
mov
dec
pop
add
mov
int
mov
inc
fsubp
hlt
ret
inc
stos
test
mov
lea
js
xchg
mov
add
cmps
rcl
add
add
or
adc
xor
ins
and
add
dec
test
sahf
fwait
cmp
popf
dec
mov
xchg
xor
repnz
pop
idiv
mov
loopne
pop
sar
push
mov
mov
mov
xor
arpl
or
cmp
and
and
cmps
and
sbb
jge
int
jge
sbb
hlt
in
dec
sub
sub
imul
aaa
stos
add
xor
mov
retf
popa
xor
cmp
repnz
lds
mov
sbb
sub
repz
movs
cmp
in
cmc
cwde
mov
adc
mov
lea
mov
in
rol
inc
or
jnp
xor
or
jbe
mov
les
popf
ss
push
(bad)
arpl
mov
ficom
pop
stos
lds
mov
dec
(bad)
popa
inc
cwde
jecxz
mov
jmp
or
lds
push
lods
xchg
pop
xor
out
js
push
push
fs
push
push
pop
push
inc
or
pusha
in
int
add
fnstsw
div
jmp
ss
repz
enter
cdq
les
push
sub
lea
lahf
mov
cs
xchg
(bad)
in
ins
and
cmp
test
cld
mov
jo
call
sar
pushf
adc
outs
jmp
ror
push
lahf
lock
xor
jge
(bad)
or
fisttp
lods
xchg
sar
jmp
fs
add
cmp
xlat
dec
popa
sahf
jns
out
cmps
push
mov
xchg
mov
outs
enter
cld
stos
sbb
sub
cmps
push
sahf
mov
addr16
(bad)
xchg
repz
push
jae
mov
std
mov
hlt
cmp
xor
outs
mov
push
stc
fsub
xchg
mov
dec
jg
cmp
dec
movs
inc
js
imul
ss
movs
push
inc
ins
or
iret
adc
bnd
cmp
xlat
ror
dec
jecxz
lahf
or
jmp
and
into
test
out
outs
xor
rcl
mov
nop
lds
push
mov
sets
jnp
dec
fisub
das
xlat
imul
ror
xchg
xchg
ror
leave
push
jle
cmp
(bad)
(bad)
sbb
pop
aaa
test
xor
(bad)
mov
mov
popa
dec
mov
test
(bad)
aad
rcl
lods
xchg
or
push
mov
imul
xchg
sbb
mov
push
shl
fst
pushf
cmp
xchg
push
or
sbb
and
xchg
inc
or
jmp
js
rcl
push
xchg
xchg
or
popfw
mov
fwait
dec
push
or
cmp
in
das
cmp
jl
and
frstpm(287
cmp
jg
test
cld
js
jns
cld
test
sbb
je
xor
xor
test
outs
je
or
dec
sahf
fiadd
jne
and
cmc
je
sub
pop
fs
adc
je
and
and
mov
sbb
call
cmp
fadd
mov
adc
mov
adc
mov
xor
xor
scas
imul
sbb
mov
jmp
jb
loop
push
pop
push
rep
dec
ror
scas
jae
(bad)
les
test
imul
inc
lds
dec
loop
inc
(bad)
arpl
sbb
jmp
add
xchg
in
cld
popa
cld
mov
ss
ror
mov
sbb
test
cmp
add
ja
mov
aaa
jp
push
inc
cmp
rcr
aam
inc
bound
jle
add
jns
push
or
push
push
mov
lods
fisttp
mov
sub
mov
cmp
cmp
addr16
ret
mov
or
scas
push
call
jg
and
mov
mov
sahf
sub
jle
inc
mov
sar
scas
cmp
ds
dec
inc
jmp
mov
or
arpl
push
lods
xor
push
shl
mov
retf
fstp
mov
loopne
jge
jmp
shr
lds
nop
add
outs
enter
push
adc
pop
ins
jae
sub
idiv
xchg
pop
(bad)
into
popa
in
lods
je
iret
jbe
loope
sbb
fld
fcmove
loopne
ret
mov
inc
push
movs
popf
(bad)
iret
cld
fisub
pop
scas
and
movs
jge
aad
mul
es
shr
ins
addr16
imul
outs
(bad)
mov
retf
sub
xor
mov
jno
adc
sbb
scas
clc
mov
mov
les
fwait
adc
cmps
mov
jns
add
xor
test
push
add
pop
clc
sbb
xchg
inc
pop
shl
jmp
xor
in
and
push
ret
cwde
js
inc
sub
push
pop
fwait
mov
jae
xor
sahf
ins
sbb
sub
popa
dec
adc
pop
sub
or
mov
in
jp
ja
bound
add
out
(bad)
retf
cwde
or
mov
sbb
ja
(bad)
mov
je
adc
clc
aad
frstor
sbb
inc
add
cmp
sbb
into
mov
aam
out
outs
cmps
mov
outs
jnp
leave
in
ins
sti
cld
pop
ror
jo
dec
sub
jns
fdivr
shr
xchg
imul
cmp
mov
mov
add
mov
sub
int
enter
push
inc
ins
cmp
pop
push
inc
pop
cmps
test
and
ins
xor
imul
push
inc
lods
lea
stc
and
cld
sar
push
dec
and
mov
rol
or
das
ins
push
les
jge
fsub
inc
xchg
push
in
and
and
dec
test
call
sub
dec
cwde
repnz
hlt
movs
xorps
cmp
xor
push
pushf
sbb
mov
cmp
loope
popa
inc
pop
push
xor
cs
fst
mov
jb
fsubr
inc
movs
test
pop
jnp
adc
inc
push
(bad)
adc
loope
(bad)
mov
xor
and
in
mov
mov
call
add
fidivr
add
dec
sbb
push
cdq
mov
pop
jbe
sub
scas
ins
imul
or
or
xor
aaa
inc
out
scas
cmp
leave
mov
xor
test
mov
push
ds
dec
ins
fldlg2
loope
adc
mov
sbb
inc
push
lods
popf
ss
cmp
push
add
clc
mov
sub
or
call
xchg
loop
clc
popf
shr
inc
xchg
jmp
(bad)
cwde
xor
sbb
inc
and
stos
adc
pusha
outs
outs
inc
test
pop
add
sbb
xchg
xor
xchg
movs
mov
mov
mov
neg
xlat
xchg
jne
shr
mov
sti
in
mov
sbb
mov
leave
add
test
cmp
mov
jo
sbb
pop
mov
sub
ror
push
push
jg
push
adc
and
jge
stos
inc
ins
mov
mov
pop
mov
pop
call
sbb
cld
jne
ret
xchg
cdq
fwait
inc
dec
adc
int
xchg
mov
add
cmp
outs
test
and
add
in
push
(bad)
sahf
sbb
xchg
sbb
sub
push
jne
mov
mov
xchg
clc
daa
cli
pop
push
icebp
push
jo
pop
dec
rcr
(bad)
fucomp
fwait
loope
int
dec
call
fs
mov
out
daa
add
xor
jp
mov
cmp
ins
dec
(bad)
cmp
jo
push
xor
in
loope
jns
enter
jecxz
jnp
sub
hlt
out
popa
sar
xchg
add
ret
xor
je
fnsave
cdq
lds
mov
sar
stc
push
fwait
in
dec
xchg
inc
hlt
int3
fistp
add
or
adc
sti
data16
mov
cmc
sti
adc
cli
pop
clc
popf
mov
mov
sbb
das
movs
dec
movs
xchg
mov
mov
lea
xchg
push
adc
push
cmps
add
mov
cld
xchg
push
dec
jg
dec
pop
ins
jmp
call
and
cmc
adc
pop
(bad)
xor
aas
cmc
xor
arpl
pop
dec
ret
mul
call
gs
leave
repnz
jns
or
jbe
mov
mov
or
jno
(bad)
les
rcl
rcr
xor
ins
dec
addr16
mov
sbb
fcomp
push
push
pop
cmp
xlat
fcmovu
pop
jae
scas
hlt
and
retf
jnp
push
lea
xor
shl
and
pusha
std
xor
std
cld
jmp
sub
(bad)
lods
inc
add
pop
in
jbe
mov
inc
or
dec
pop
mov
sub
jns
sbb
(bad)
add
push
xchg
xor
clc
mov
aaa
retf
pop
mov
mov
push
retf
push
int
push
out
mov
and
jo
int3
gs
xor
inc
adc
push
fwait
test
rcl
mov
(bad)
pop
mov
xchg
or
jno
jnp
jne
inc
add
call
add
cmp
mov
mov
cmps
add
arpl
aam
sbb
mov
mov
dec
mov
push
cli
jae
shl
jmp
loope
and
retf
xor
call
inc
dec
jmp
and
mov
cmp
ins
push
push
add
rol
cmc
js
addr16
fs
mov
ds
xor
outs
mov
and
cmp
mov
mov
ds
arpl
shl
sub
shufps
xor
call
pusha
mov
ins
or
xchg
popf
sbb
xor
ret
nop
jl
xchg
jg
sbb
cmps
mov
pop
inc
cmps
pop
lock
and
sub
push
stos
jle
mov
pop
jg
pop
call
test
adc
and
clc
pop
(bad)
inc
inc
xchg
or
inc
pop
add
and
or
pop
ss
pop
loope
add
adc
cmp
lock
or
add
imul
add
dec
jno
ss
dec
xchg
je
jmp
in
dec
rol
push
test
jmp
sub
loopne
bound
repnz
lahf
mul
test
int
fisub
pop
js
pop
jmp
ss
or
mov
adc
xor
lods
retf
xchg
inc
jbe
loop
mov
sbb
pusha
lock
imul
test
mov
or
pop
in
dec
sti
ret
dec
ret
mov
jne
xchg
outs
sar
push
out
jl
imul
adc
out
call
mov
cld
cmp
pusha
add
jae
in
mov
(bad)
adc
out
mov
ror
stos
das
cmps
lock
popa
dec
or
mov
int3
pop
outs
pop
gs
inc
adc
pop
in
pop
add
rcr
xchg
add
addr16
fbstp
(bad)
add
out
mul
rcl
inc
dec
sub
out
in
pop
(bad)
adc
pop
fcomp
retf
jne
dec
daa
dec
iret
push
inc
jb
out
mov
clc
fsubr
adc
xor
jle
inc
sar
and
fdiv
test
pop
jbe
in
mov
adc
sbb
jno
dec
je
pusha
dec
ret
push
shr
mov
mov
mov
jo
test
inc
lods
addr16
fcmovnu
push
pop
retf
aaa
sub
test
test
push
dec
jo
mov
retf
push
xor
xor
stc
pminub
inc
pop
in
ins
push
idiv
test
pop
popf
inc
and
enter
and
cmp
test
mov
fidiv
mov
rcl
aam
(bad)
mov
imul
jmp
int3
pavgb
pop
jmp
xchg
inc
mov
cmp
mov
jae
adc
mov
aam
cmp
inc
aas
ror
ja
jns
aaa
scas
ror
xchg
ja
dec
fdivrp
dec
mov
test
not
test
das
(bad)
cmp
outs
std
lods
rcl
inc
jg
jge
jp
rol
call
ja
outs
jle
enter
dec
jne
jl
test
mov
or
cmp
popf
jne
stos
push
fsub
cdq
lds
xor
or
sbb
retf
inc
sbb
popf
int
imul
sti
test
xlat
and
dec
jno
aad
and
mov
jns
arpl
aas
pop
adc
dec
add
mov
icebp
dec
ss
dec
lock
mov
pop
call
inc
xor
imul
imul
movd
jo
sldt
mov
push
push
cdq
cwde
push
jmp
arpl
movs
cmp
cmp
retf
sbb
cld
mov
std
repz
(bad)
in
xchg
push
jp
clc
dec
xchg
sub
adc
jno
jns
mov
pop
das
cmp
adc
fisttp
pop
pop
pop
out
jmp
retf
cmps
mov
inc
(bad)
js
mov
inc
pop
dec
jmp
out
sub
cmps
xchg
lods
loopne
loop
pop
pop
pop
mov
cli
pop
push
or
or
ins
(bad)
js
sti
and
xor
out
sub
cwde
inc
movs
mov
es
mov
push
push
addr16
and
stos
sub
jnp
pop
dec
ficomp
and
pop
pop
jno
or
mov
xor
cmp
push
push
enter
or
enter
push
inc
mov
and
xor
jmp
ror
mov
ins
out
in
jno
pop
inc
out
jbe
cmp
fcom
sub
xor
pop
xchg
xchg
ds
std
test
(bad)
pop
fs
gs
(bad)
outs
popa
sub
imul
mov
fistp
(bad)
push
int3
ss
data16
add
jp
and
sar
inc
cld
test
lds
push
(bad)
cmp
add
inc
vfrczsd
xor
repnz
sub
pop
push
fdiv
test
dec
dec
and
inc
push
out
sub
jp
add
sub
sub
sbb
or
adc
xchg
jae
xor
xlat
sbb
clc
push
fst
stos
aas
pop
jl
sbb
or
sahf
add
jnp
push
xor
inc
inc
in
cmp
out
and
mul
sahf
imul
lods
xor
adc
mov
jb
stos
fldenv
pop
jbe
sub
xchg
jecxz
sub
inc
mov
dec
lods
fsubr
xchg
cmps
pop
call
arpl
aam
push
lea
push
adc
retf
not
pop
add
xchg
mov
mov
xchg
jmp
or
and
jb
and
call
fisttp
bound
sbb
jmp
jmp
movs
or
setp
cmp
sbb
jnp
in
pop
lea
and
or
cdq
add
les
add
(bad)
les
xor
pop
cmps
and
mov
cs
jp
outs
mov
push
lods
sahf
mov
push
cmc
inc
add
(bad)
xchg
sbb
mov
sub
pop
cwde
jg
jg
and
jo
mov
push
inc
fs
test
arpl
rcr
lock
xor
arpl
mov
shl
bound
not
xor
jg
shl
sti
loope
cmp
jns
dec
mov
icebp
mov
repnz
arpl
(bad)
push
fisubr
iret
ret
ins
xchg
repz
fcomp
hlt
jnp
or
lods
mov
pop
imul
sub
out
mov
jle
mov
jg
jb
fild
int3
adc
ret
sbb
shl
adc
movs
jl
mov
pop
je
mov
outs
sbb
xor
addr16
and
call
(bad)
bound
popa
add
jo
aad
adc
fbld
js
inc
icebp
pop
dec
or
ret
xchg
add
sub
inc
fimul
jp
fld
pop
iret
pop
ss
inc
test
pop
push
out
(bad)
jmp
pushf
lods
in
lods
data16
inc
popf
and
sub
sub
cli
stc
iret
ret
mov
jno
cmps
mov
fimul
fcomp
pop
dec
and
int3
shr
jmp
cmp
mov
sub
sahf
pop
aas
mov
lea
cwde
test
inc
(bad)
dec
out
clc
(bad)
jg
jno
jge
mov
jecxz
dec
test
cwde
sub
inc
mov
fs
xor
enter
xchg
pop
mov
mov
aad
repz
pop
hlt
aad
mov
mov
or
int3
xlat
dec
mov
push
in
adc
add
ror
adc
cld
jb
aas
bound
out
adc
or
shr
push
lahf
(bad)
mov
mov
mov
(bad)
dec
test
push
lds
pop
mov
pop
xchg
sahf
mov
cmp
pop
mov
cmc
and
retf
jg
fild
pop
mov
xor
pop
dec
jmp
sbb
arpl
dec
dec
inc
inc
(bad)
daa
mov
mov
pusha
cmp
sti
test
hlt
mov
fsubrp
pop
push
jmp
fwait
rcl
push
outs
cdq
in
outs
scas
mov
push
mov
jg
cmp
xor
mov
cmps
in
or
in
movs
sbb
(bad)
aam
fldcw
popa
fistp
inc
pop
addr16
lods
xlat
out
push
gs
sub
mov
push
or
xchg
jg
ret
leave
pop
les
into
or
mov
in
jne
stos
(bad)
and
enter
mov
sub
es
cmp
add
adc
imul
les
sbb
es
inc
push
add
in
repnz
jle
jg
stc
add
pop
in
inc
mov
cmc
lods
(bad)
push
ret
sub
(bad)
ffree
ss
cmp
mov
test
fild
xchg
mov
test
int
rol
xlat
aad
test
sbb
fldcw
mov
xor
ins
rcr
jne
retf
aaa
cmp
dec
shl
jbe
mov
ss
ret
fstp
fld
mov
sar
jne
test
inc
mov
jmp
ret
aam
jp
or
jbe
ret
cmp
xor
pop
mul
pop
ins
jmp
add
sub
xchg
dec
jg
and
fcomp
(bad)
push
lods
pop
push
shl
lds
fbstp
je
rcr
pop
dec
mov
stos
sbb
sbb
jp
movs
loopne
jno
mov
ret
test
dec
clc
stos
dec
xlat
ja
sbb
xor
add
cmp
leave
bound
into
mov
dec
adc
mov
push
mov
pop
and
pop
retf
lods
pop
fnsave
sub
mov
inc
cmp
fisubr
jl
fisttp
inc
aam
sbb
pop
jmp
push
adc
jo
cmp
sub
and
push
aaa
cmc
fnstenv
and
test
stos
xor
in
mov
cmp
dec
mov
ret
outs
pop
xchg
jo
jne
(bad)
cli
out
xlat
jns
jg
repz
xchg
cwde
stos
cmc
in
xor
sub
jp
mov
jge
inc
aas
mov
push
push
pop
sub
cli
inc
dec
inc
call
out
ds
shl
inc
mov
lock
lahf
jmp
push
ret
inc
repnz
ins
mov
mov
mov
pop
push
sub
scas
jge
cwde
es
add
pop
fistp
or
push
inc
je
add
sbb
dec
push
lock
jne
cmp
push
clc
mov
push
daa
xor
scas
xchg
xchg
cli
dec
adc
mov
ret
pop
aaa
add
dec
fdiv
mov
pop
xchg
mov
jo
mov
mov
mov
or
push
xchg
or
cwde
mov
or
sbb
movs
mov
lods
add
sbb
xor
push
ret
loop
add
and
cmp
out
pop
jbe
ds
xchg
mov
fstp
lds
mov
xlat
outs
lods
lock
lods
dec
mov
pop
out
loopne
inc
jg
and
add
xor
neg
and
popa
sar
dec
mov
add
pop
icebp
into
pop
pusha
jmp
pop
inc
and
mov
cmps
xchg
add
pop
dec
(bad)
inc
mov
sub
sub
mov
mov
cmp
cmp
cmp
mov
ror
fstp
movs
xor
xor
cld
and
and
fs
or
sub
test
lds
pop
in
jmp
push
dec
inc
mov
fst
sbb
xchg
xrelease
xor
sbb
mov
push
push
jbe
push
test
pop
sahf
jmp
jo
out
jp
adc
sub
xor
xchg
dec
mov
adc
add
and
pop
push
mov
push
or
call
xchg
push
mov
and
inc
(bad)
inc
and
stc
dec
addr16
pop
out
cmps
icebp
imul
bound
jle
(bad)
jnp
xchg
mov
lods
add
jne
xor
push
icebp
or
xor
lods
pop
icebp
sub
in
sbb
dec
ficom
inc
aaa
inc
ficomp
pop
mov
jg
mov
dec
icebp
push
cmp
jb
hlt
popa
loop
in
hlt
push
cmp
pusha
mov
sbb
add
fwait
dec
and
sub
test
push
fimul
push
pop
sub
cli
hlt
pusha
push
popf
adc
or
xchg
xchg
jne
int3
push
push
cld
retf
mov
mov
xchg
les
cmps
push
bound
add
jne
ja
dec
xlat
or
xor
in
or
pop
xor
mov
mov
test
dec
scas
fwait
pop
sbb
mov
sti
stos
ret
out
and
mov
add
push
mov
mov
aad
imul
pop
int
mov
xor
and
cmp
mov
sub
outs
or
(bad)
push
lods
sbb
sbb
xchg
imul
stos
hlt
push
cdq
dec
jbe
loop
(bad)
aad
mov
adc
push
mov
pop
enter
sbb
push
inc
cmp
stos
pop
(bad)
call
ins
pop
jmp
xchg
fbld
mov
inc
cdq
mov
jbe
push
popa
stos
in
cmp
pop
mov
mov
xchg
cmps
cli
loop
ret
push
pop
imul
xor
mov
nop
int
ins
int
xchg
xlat
push
dec
lds
popf
add
add
xchg
mov
call
jl
inc
pop
jmp
aam
mov
pop
loope
xchg
ror
and
mov
mov
xchg
addr16
fdivr
pop
and
in
bound
fs
into
and
or
sub
out
popf
test
add
sub
outs
icebp
pusha
std
test
or
loope
fs
dec
mov
sub
ja
xchg
jb
and
shl
adc
and
imul
test
pop
fstp
sub
lahf
sbb
popa
aad
fsub
outs
add
or
aaa
sbb
movs
jbe
jb
(bad)
es
inc
test
push
xchg
lock
pushf
mov
into
dec
jmp
pop
xor
cmp
sbb
in
xchg
xchg
ret
add
mov
pop
mov
je
adc
shl
test
inc
or
jg
mov
retf
cmp
imul
xor
rcl
dec
push
lods
shl
fstp
test
aam
outs
cwde
inc
pop
retf
and
test
sbb
loopne
repz
out
jmp
and
ret
outs
mov
(bad)
push
add
xor
test
dec
rcr
add
test
cld
inc
push
test
imul
hlt
sbb
movs
fwait
and
movs
bound
iret
jae
sub
pop
mov
cmp
sbb
ret
cmp
mov
call
mov
push
hlt
cli
mov
sub
push
mov
lahf
stos
rcr
cmc
call
mov
jae
xchg
sbb
add
mov
or
push
stos
pop
xchg
aaa
cmps
mov
or
je
(bad)
int
lock
fisub
aad
aaa
pop
(bad)
repnz
inc
xlat
sub
sbb
sbb
stc
add
cmp
and
xchg
jnp
jp
dec
test
mov
dec
fs
pop
and
add
mov
mov
mov
or
mov
push
and
sub
mov
fdiv
loopne
mov
xor
das
call
lahf
mov
push
sub
and
movs
adc
test
popf
int3
loop
push
in
into
fidivr
icebp
(bad)
mov
cmp
lods
mov
in
shl
daa
sbb
gs
jne
stos
xor
inc
leave
popf
sar
aaa
mov
shl
push
scas
and
inc
mov
sbb
adc
cmp
mov
pusha
dec
es
es
pop
fs
mov
mov
xor
or
iret
stos
sahf
push
aas
aad
fcom
xchg
lods
scas
aaa
cwde
out
pop
sbb
rcr
and
ja
(bad)
push
fist
pushf
jbe
(bad)
cmc
dec
ret
jb
shr
into
pop
push
mov
sub
mov
adc
dec
mov
jne
or
jnp
mov
xlat
xchg
adc
xor
xor
inc
mov
jo
add
ins
dec
jecxz
out
mov
dec
mov
xchg
or
or
push
jno
fldz
jmp
out
out
icebp
jmp
dec
cmp
ds
and
push
repz
jge
or
or
cmc
jecxz
mov
call
movs
xor
mov
sub
outs
or
sub
dec
mov
and
mov
(bad)
mov
pop
test
push
pop
nop
jle
mov
push
jno
push
js
mov
push
mov
adc
push
aad
mov
push
mov
or
dec
(bad)
cmp
fcmove
int3
jle
fsub
cmps
pop
in
retf
lds
je
sbb
(bad)
xor
inc
xor
fimul
or
push
std
call
sbb
cmp
out
aas
push
dec
out
sbb
ins
fisttp
xor
in
adc
jmp
mov
out
pop
arpl
dec
popf
idiv
sti
jl
xor
in
out
daa
aaa
call
call
hlt
dec
inc
and
ss
test
adc
stos
nop
mov
push
sub
ss
movs
dec
inc
inc
stc
push
jmp
pop
xor
arpl
pop
inc
xchg
mov
ins
jne
push
ffree
fistp
sbb
jmp
xor
addr16
add
fnsave
call
in
xchg
dec
adc
fild
dec
leave
data16
lock
sub
ins
into
mov
mov
jmp
stos
sub
mov
mov
mov
call
or
icebp
jle
sub
or
ror
lods
mov
add
leave
sbb
xchg
rcl
dec
pusha
cmc
adc
pop
or
xchg
xor
or
cmovbe
pop
or
(bad)
adc
cmp
pop
imul
(bad)
rol
dec
add
sub
out
in
sub
cmp
jmp
or
pusha
retf
xchg
or
pop
mov
out
add
push
in
xchg
nop
icebp
xchg
and
dec
outs
mov
out
xchg
loopne
mov
cs
inc
repnz
fcmovu
adc
mov
mov
mov
xlat
sbb
ror
arpl
mov
inc
mov
fnsave
and
xchg
enter
add
test
imul
pop
lods
add
push
das
out
gs
retf
in
inc
xor
xchg
dec
mov
repz
dec
retf
idiv
add
push
ficom
mov
iret
aam
aas
cmps
mov
adc
rcl
stos
xor
push
cwde
jp
push
jnp
xlat
enter
mov
pushf
adc
jbe
mov
jle
ins
(bad)
and
imul
enter
test
mov
push
push
adc
or
inc
xchg
add
mov
les
imul
ds
jmp
int3
fs
cmp
(bad)
mov
shr
cmp
mov
pop
pop
mov
shl
into
ins
test
popa
cmps
loop
dec
vmovups
mov
or
sub
(bad)
aam
sub
cmp
inc
(bad)
mov
imul
sub
rol
jns
sbb
jo
in
jge
or
int
pop
sub
je
bound
add
enter
inc
cld
mov
daa
xchg
sar
rol
pop
mov
fisubr
mov
out
loope
mov
retf
imul
cmps
cmp
out
inc
mov
repz
jbe
push
lds
xchg
ret
icebp
scas
adc
iret
hlt
or
hlt
loope
mov
or
jb
jbe
mov
jmp
lods
jg
jl
adc
int
in
mov
and
jge
clc
(bad)
pop
popf
jmp
xchg
jb
in
add
add
jmp
mov
loop
push
shr
xchg
xchg
pusha
imul
fcomp
sbb
fucomi
aas
jns
dec
jecxz
push
outs
cli
push
xchg
cli
ret
bound
mov
je
imul
mov
sbb
test
ss
ss
pop
push
xor
push
add
inc
push
mov
in
(bad)
loop
sub
ds
xor
mov
sub
fdivr
test
pop
cmp
xor
scas
stos
sbb
dec
out
add
clc
nop
or
mov
adc
inc
fidivr
lods
mov
cmp
add
loope
xchg
cmp
sub
xchg
imul
mov
and
pop
rol
in
inc
or
jne
test
movs
ins
loop
pop
xchg
cmp
push
shl
mov
outs
sahf
add
dec
inc
sbb
push
mov
dec
sbb
mul
jg
mov
loope
mov
pushf
sub
pushf
in
inc
aam
pop
stc
test
xchg
mov
cmp
ds
inc
mov
ret
xor
mov
ror
shl
inc
mov
inc
and
not
lods
jg
xchg
or
dec
in
and
pop
shl
add
jge
mov
xor
xor
xor
pop
inc
lds
dec
mov
mov
mov
dec
test
sar
aas
pop
(bad)
cs
out
lahf
sub
dec
mov
retf
cmps
imul
push
int
test
sbb
mov
mov
mov
scas
stos
inc
mov
test
sti
adc
sar
imul
pop
jle
jp
inc
mov
inc
and
push
mov
cmp
xor
in
adc
dec
cs
mov
pop
imul
retf
xchg
jl
mov
ret
pop
fadd
fistp
not
cwde
aad
dec
shr
cdq
les
jb
shr
enter
repnz
inc
lea
aaa
sub
push
sub
cmp
xor
push
jnp
adc
aaa
sub
in
daa
imul
aad
retf
aaa
test
outs
inc
push
dec
int
cmps
dec
aaa
add
jecxz
adc
xor
xor
mov
sub
fwait
arpl
(bad)
out
push
xor
xchg
sub
rol
mov
adc
lods
out
mov
mov
jb
sub
jle
lds
push
(bad)
div
jno
push
jns
int
jmp
sub
into
(bad)
jns
cs
mov
push
xor
cmp
jge
fld
xor
test
data16
mov
jns
ds
xchg
and
or
xchg
aaa
cmp
or
pop
pop
adc
pop
mov
outs
mov
jecxz
mov
jbe
cmp
cs
cmps
jo
mov
mov
call
dec
dec
sbb
jne
call
sub
xchg
fcomp
sub
sbb
push
add
lds
mov
push
shl
sub
(bad)
lods
or
js
sub
dec
sub
ins
outs
push
ss
sahf
in
inc
jo
fs
sbb
mov
mov
or
xor
or
dec
or
call
(bad)
iret
sahf
hlt
sub
sar
popa
repz
add
push
in
inc
shr
fst
xor
sti
stc
test
test
jbe
jmp
jmp
movs
inc
scas
pusha
pusha
cmc
fsub
out
retf
inc
or
push
(bad)
outs
fidivr
shl
popf
push
dec
sbb
or
(bad)
jae
push
cmps
js
dec
mov
dec
popf
add
mov
das
xchg
dec
xchg
jmp
fild
das
lds
mov
mov
push
mov
cli
call
rcl
mov
out
jo
push
mov
call
pop
arpl
and
pop
sub
push
je
je
stos
in
in
ins
push
gs
rep
xor
pop
scas
outs
sbb
imul
pop
xchg
in
retf
fs
mov
aaa
dec
xor
inc
fidiv
and
retf
or
mov
inc
lock
fisub
jnp
ds
xor
lds
popf
das
pusha
xchg
mov
sub
(bad)
cli
cmps
ja
xor
pop
mov
(bad)
push
std
xchg
lods
jge
jno
rcl
ja
push
ja
out
mov
pop
or
xchg
or
cli
mov
push
je
(bad)
jne
xor
or
pop
pushf
fimul
xchg
pop
or
shr
inc
jne
test
call
push
add
test
or
sbb
sbb
inc
and
jbe
mov
sub
ja
mov
out
lds
div
sub
ins
inc
pop
mov
mov
push
adc
jbe
dec
cmp
into
stc
imul
js
xchg
mov
mov
dec
and
addr16
lods
cmp
fsub
jl
test
mov
jle
xchg
jl
mov
aaa
jnp
add
sbb
dec
test
or
pop
jle
mov
cmp
movs
pop
test
pop
jnp
mov
pop
outs
call
jmp
cmp
repnz
(bad)
xchg
(bad)
jp
fisub
cld
xor
push
(bad)
jmp
xlat
dec
fsub
addr16
sbb
ds
cwde
inc
mov
adc
jbe
mov
repz
loopne
add
jo
xor
jge
xchg
(bad)
or
and
adc
and
inc
(bad)
cli
movs
xor
mov
(bad)
(bad)
aam
aaa
pop
(bad)
movs
movs
in
jle
lds
shl
mov
jns
imul
jno
inc
test
and
retf
jecxz
mov
add
cmps
sub
out
push
jno
dec
bound
or
das
test
fldcw
sar
sub
add
pop
xchg
scas
push
std
pop
test
or
jge
into
in
ret
jmp
dec
dec
and
scas
xor
cmp
mov
std
xchg
and
mov
test
jns
mov
dec
cmp
adc
mov
neg
mov
cmp
inc
adc
fld
pop
inc
and
aaa
rcl
cld
cmp
imul
out
push
mov
xchg
xor
ror
repz
dec
in
xor
aas
aaa
pop
inc
dec
(bad)
mov
bound
repnz
(bad)
push
jne
jl
adc
sub
adc
or
repz
cmc
arpl
into
inc
dec
dec
fisub
add
jl
cwde
pop
sar
xor
sbb
sub
movs
cdq
shl
adc
pop
ret
mov
in
add
jbe
cmp
or
push
xchg
jb
(bad)
mov
fstp
lds
sbb
imul
push
and
sahf
pop
inc
(bad)
xchg
ror
dec
pop
xor
test
adc
cmp
mov
jbe
ror
jnp
outs
mov
push
jp
ss
mov
es
dec
dec
loope
fs
jg
fldenv
sbb
shr
cmp
retf
nop
xchg
ret
movs
shl
sbb
enter
add
sub
in
pop
xchg
lock
hlt
push
add
loop
adc
dec
mov
cmps
das
and
enter
aad
pop
xor
pop
pop
rcl
inc
xor
and
jmp
adc
(bad)
je
leave
pop
or
jo
sub
add
(bad)
or
cmp
imul
adc
mov
sub
dec
aam
repnz
stos
pop
push
xor
outs
cs
adc
xor
xchg
les
xor
rcr
pop
sti
jo
call
jns
dec
mov
ins
and
pop
and
pop
loopne
dec
mov
xchg
mov
push
pop
aas
adc
fmul
adc
jle
pop
cmp
dec
push
into
mov
(bad)
sbb
adc
daa
xchg
iret
imul
adc
imul
xchg
ret
aad
and
mov
adc
add
sahf
sbb
cmp
mov
std
jb
adc
sahf
dec
test
lahf
gs
sub
jecxz
daa
jo
lods
sub
fs
test
mov
add
aas
rcr
icebp
adc
sahf
sub
int3
adc
ret
loope
add
dec
and
std
cmc
dec
xor
pop
ss
ja
xor
pop
xor
mov
adc
sub
aas
fcmovu
scas
sbb
pop
and
adc
sub
rcr
pop
sub
and
rcl
icebp
and
cmp
dec
jns
fisubr
sub
out
cmps
or
dec
js
pop
stos
jmp
jnp
test
hlt
imul
lahf
(bad)
lock
out
jl
or
jb
lods
mov
inc
ficom
lahf
xor
jl
push
sbb
jmp
js
fimul
mov
shl
push
sub
push
cmp
mov
cmp
call
imul
xor
xchg
or
xchg
shr
data16
mov
jle
test
jg
jns
mov
xchg
retf
mov
xchg
push
sar
cmp
pop
(bad)
dec
jne
sbb
fbld
adc
cs
xor
dec
mov
mov
push
xchg
push
ins
xchg
mov
out
push
loop
cmp
cmp
int
mov
sbb
mov
dec
pop
imul
ret
sbb
mov
add
leave
stos
aad
cli
imul
out
jg
mov
pop
aam
add
addr16
cmp
(bad)
xor
mov
in
sbb
mov
mov
sbb
dec
fnstenv
xor
pop
sbb
loop
outs
sbb
test
xchg
aad
mov
cmps
xor
icebp
je
lods
and
cmc
xchg
cli
idiv
mov
and
xchg
adc
mov
cmps
outs
sbb
push
es
and
or
sbb
(bad)
pusha
cmc
xor
jmp
hlt
stos
jb
push
fs
mov
mov
xor
adc
and
xor
dec
sbb
fimul
aam
xchg
jae
or
cmp
mov
sub
adc
pushf
inc
es
mov
jmp
mov
mov
inc
movs
dec
icebp
xor
retf
pop
pushf
xchg
movs
iret
xchg
dec
jnp
inc
(bad)
ret
jmp
xchg
cwde
out
pop
add
out
sbb
arpl
hlt
jmp
int3
in
jg
push
fistp
rcr
sar
sti
hlt
stos
or
mov
outs
mov
sub
je
mov
pop
jns
inc
and
adc
ficom
js
dec
jecxz
in
or
push
clc
test
lods
stos
xchg
loopne
jl
aas
movs
cmc
xor
adc
pop
(bad)
mov
test
jmp
cmps
sbb
push
dec
push
add
in
out
pop
repnz
xor
add
pop
ror
es
inc
jp
pop
pop
lods
repnz
iret
mov
jmp
inc
test
sbb
sbb
or
fadd
add
adc
jg
pop
scas
jns
fild
mov
test
sub
push
imul
cmc
or
outs
test
loop
lods
xor
sub
dec
adc
sbb
cdq
mov
cmp
mov
inc
addr16
jecxz
inc
pop
fcmovnu
out
and
fdivr
ror
lods
jg
xchg
lods
mov
xor
cmp
mov
(bad)
aad
and
and
xlat
xor
push
xor
jns
dec
js
int
movs
inc
adc
scas
cmc
push
(bad)
daa
in
inc
mov
adc
call
shl
js
ins
out
in
jmp
test
sbb
dec
push
jmp
sahf
or
int3
fdivp
mov
stos
jmp
cwde
mov
dec
je
shr
xlat
(bad)
mov
int3
jmp
jne
loop
adc
and
cli
fsub
lahf
stos
adc
neg
scas
add
jle
pop
mov
sub
in
outs
js
stos
lods
pop
and
adc
pop
mov
mov
mov
inc
pop
mov
xor
xchg
inc
and
ins
add
xchg
sbb
dec
stos
fdiv
inc
enter
scas
(bad)
repz
jno
and
mov
(bad)
or
stc
mov
add
jl
sbb
gs
push
dec
cwde
lods
loop
push
idiv
movs
xchg
mov
call
cmp
(bad)
(bad)
dec
loop
fidivr
mov
xchg
cli
addr16
in
pop
aad
cmp
hlt
mov
pop
adc
nop
xchg
inc
(bad)
inc
aaa
sub
arpl
adc
cmc
mov
lods
push
daa
jb
mov
mov
lds
push
inc
inc
pop
jb
dec
lock
sbb
xor
inc
popa
jb
inc
(bad)
aam
dec
int3
fwait
retf
in
fiadd
pop
or
mov
call
jp
and
sub
jp
mov
test
fnstcw
sub
repnz
and
shl
pop
ins
pop
js
clc
inc
push
inc
xchg
test
rol
test
test
pop
int3
and
mov
and
ror
xlat
add
in
adc
push
or
or
xor
push
retf
pop
and
fwait
pop
lods
adc
dec
and
cld
jecxz
loopne
mov
lock
mov
add
pop
fldenv
test
and
jp
(bad)
lods
cmp
fwait
test
xor
jns
not
dec
inc
repz
xchg
add
pusha
pop
mov
test
jecxz
push
mov
xchg
cdq
ror
pop
and
js
fcom
push
pop
mov
popaw
xlat
and
in
nop
or
jb
pop
inc
lods
add
mov
cmp
cmp
add
sub
or
repz
push
xor
add
call
es
clc
movs
adc
push
stos
outs
sahf
in
sahf
daa
aaa
test
xchg
test
pop
imul
pushw
cdq
or
dec
adc
inc
xchg
pop
cld
push
fbstp
jb
cmp
jne
cmp
sub
cld
test
sbb
cmps
inc
out
stos
int3
add
add
inc
leave
fidivr
fs
leave
fistp
hlt
dec
movs
jne
mov
mov
cmp
pushf
mov
lea
xchg
cmp
call
sbb
sub
aas
mov
int3
jmp
out
ins
and
ret
cwde
and
add
sahf
mov
and
xchg
test
into
lea
bound
push
call
lahf
inc
or
mov
stos
jo
std
mov
out
ins
sbb
test
mov
(bad)
cli
outs
ror
loop
sbb
adc
data16
xchg
inc
jno
out
repnz
aaa
push
das
pop
lods
sub
sub
repz
sub
jl
mov
sar
mov
aas
not
adc
shr
mov
mov
xchg
adc
mov
ss
imul
in
inc
sar
in
call
arpl
stos
cmp
xchg
jp
daa
out
or
push
mov
out
mov
add
or
mov
sub
adc
mov
fisub
xchg
xchg
daa
sub
sub
push
dec
xor
push
je
xchg
repz
mov
adc
pop
mov
push
sub
cmp
cdq
out
push
push
mov
inc
adc
out
stos
and
fs
test
or
sbb
mov
stos
or
sbb
xor
push
mov
outs
js
out
rol
mul
gs
das
lods
push
add
jno
movs
jmp
add
cmp
push
cwde
xchg
push
xor
cmp
repnz
or
add
out
mov
aam
xor
adc
jle
sub
jl
dec
push
inc
and
or
jg
pop
jno
int3
mov
idiv
rcl
add
loop
ss
jb
call
test
out
data16
cmp
(bad)
pop
sbb
ficomp
std
(bad)
clc
mov
mov
pop
and
adc
push
add
mov
pop
dec
jle
sub
cmp
dec
ror
mov
and
mov
mov
fcom
add
xchg
add
adc
stos
imul
jl
xor
sub
retf
lock
pop
in
jno
lods
call
pop
cs
xchg
and
jg
das
dec
add
add
loop
xor
call
push
or
data16
push
inc
push
mov
and
push
xor
sahf
pop
inc
je
jle
cwde
and
mov
test
fisubr
dec
xor
je
lock
not
pop
pop
lods
sbb
and
mov
or
rcl
shl
test
shr
cli
pop
xchg
int
mov
addr16
push
xor
mov
cmps
in
sbb
into
fidiv
outs
loope
push
ret
xchg
lods
rcr
sub
sbb
(bad)
loope
fisttp
(bad)
push
sub
inc
ret
mov
pusha
cmps
fiadd
lds
mov
pop
mov
pop
fdiv
mov
adc
cmps
arpl
es
xor
arpl
dec
and
out
xor
sub
or
dec
fcmovbe
ret
push
xchg
inc
sub
arpl
fstp
(bad)
xchg
sbb
js
adc
ss
add
test
hlt
iret
adc
out
jns
cmp
xchg
ret
xchg
retf
add
pushf
add
jmp
xor
push
std
xor
sbb
loope
jg
push
sub
(bad)
ss
inc
sub
aad
xor
popf
lods
sub
cmp
fild
mov
and
add
iret
cmp
cmp
pop
adc
cmp
jecxz
or
jl
pushf
aaa
test
or
adc
xor
pop
add
jae
mov
or
pop
adc
cmc
movs
inc
out
dec
push
cwde
adc
ret
ficomp
mov
sbb
out
sbb
xor
aaa
inc
xor
clc
mov
cmp
cmps
call
mov
int
jmp
int3
cmps
add
mov
sti
push
icebp
imul
pop
test
outs
sbb
push
jo
sbb
popf
ins
sbb
js
std
jo
mov
inc
add
sub
pop
or
mov
test
or
adc
push
jp
loope
or
inc
pop
inc
enter
and
jmp
popf
push
test
fisub
das
retf
repnz
pop
gs
ret
stos
jecxz
fsub
test
cdq
pop
adc
cdq
xor
lds
pop
fs
leave
mov
mov
call
or
ins
es
or
or
push
xor
sub
mov
loopne
sbb
loope
adc
lea
add
sti
xchg
push
sbb
mov
call
and
ror
xchg
adc
jp
test
dec
ins
push
cli
push
adc
adc
inc
mov
inc
retf
or
je
cld
push
enter
add
clc
mov
mov
xchg
lods
test
sbb
(bad)
popa
jl
ret
mov
retf
sub
aaa
aas
xchg
mov
cmc
stos
nop
mov
in
ror
sbb
xchg
stos
imul
mov
adc
pop
push
adc
adc
loop
pop
ins
or
fild
jmp
adc
iret
mov
mov
xor
mov
or
sti
xor
cmp
xor
sar
cs
or
pop
(bad)
popf
cmp
mov
test
mov
dec
sbb
jne
fcomp
pop
inc
call
dec
mov
sub
fdivr
lock
sub
dec
mul
cmp
pop
mov
xor
sub
mov
call
fsubr
mov
jp
clc
retf
in
setp
popa
test
xlat
shl
xchg
into
sbb
ja
mov
xor
pop
clc
mov
xor
sti
ja
push
(bad)
in
push
pushf
ins
hlt
jge
xor
data16
rcr
inc
ret
inc
(bad)
and
rcl
mov
ret
mov
mov
mov
jb
fwait
pushf
jmp
push
sub
mov
ins
in
repnz
mov
cld
stos
adc
fcom
pop
ficom
movs
hlt
mov
test
mov
cdq
rol
(bad)
jnp
aas
push
in
xor
pusha
in
popf
cmp
icebp
mov
ins
fsub
pop
int3
aas
ss
lods
ret
(bad)
xor
sub
jno
push
xchg
cmps
sub
xchg
mov
fwait
mov
loop
lahf
aad
sbb
mov
and
xchg
pop
xlat
(bad)
jnp
cmp
mov
jne
adc
xor
dec
jns
and
stos
mov
ss
pop
fild
mov
mov
cmp
add
rcl
movs
xor
mov
xor
das
dec
gs
push
sbb
cmps
aam
sbb
jns
push
xchg
push
sar
dec
sub
pop
add
fiadd
cmp
outs
cmp
cmp
dec
call
mov
cld
push
adc
sub
fmul
addr16
shl
fs
out
jecxz
jnp
xor
fwait
daa
(bad)
loope
push
xchg
add
int
inc
aad
xchg
repnz
(bad)
push
test
lds
js
ds
mov
loopne
not
add
push
or
mov
ins
cmp
and
lahf
mov
sbb
adc
sbb
test
mov
(bad)
mov
pop
arpl
jno
and
in
fiadd
push
inc
fdivr
mov
leave
idiv
jl
loope
mov
sbb
xlat
mov
mov
push
or
pmullw
cmp
aad
daa
bound
or
mov
out
xchg
jle
jle
xor
nop
cmp
mov
pop
sti
adc
mov
fisubr
fadd
cdq
sti
popf
repnz
sbb
hlt
xor
sbb
mov
dec
rcl
inc
xchg
adc
cmp
adc
mul
lahf
sub
mov
push
loope
imul
loopne
jns
icebp
ror
push
repnz
push
jl
xchg
pop
inc
add
xchg
shl
mov
jp
push
leave
loope
adc
jp
(bad)
cmc
fwait
sbb
aaa
test
rol
xchg
enter
adc
enter
push
or
je
fsubr
jae
ret
mov
inc
fldenv
jle
xchg
fcomip
and
fs
mov
out
lahf
dec
inc
sub
jmp
inc
rcr
mov
js
mov
mov
adc
fdivr
shl
xchg
adc
cmp
iret
mov
shl
jne
ficom
lods
sub
add
push
in
call
push
mov
test
pushf
ins
pop
test
jmp
sbb
retf
xchg
and
dec
repnz
add
cmp
loope
cmp
mov
cmp
pop
and
stos
rcl
fcomp
jl
hlt
out
adc
adc
ret
shr
sub
sbb
mov
fs
mov
xchg
pop
mov
jecxz
aad
les
dec
and
inc
adc
mov
and
add
add
mov
push
mov
mov
cs
mov
sbb
movs
pop
pop
jge
jecxz
aam
inc
clc
je
aad
mov
jno
mov
int
lods
mul
test
and
mov
cwde
xor
jns
pop
repz
fsubr
mov
pop
ss
iret
das
mov
mov
sub
cmp
sahf
mov
and
int
popa
sti
enter
ds
add
xchg
xchg
fsub
in
xchg
out
jp
and
cmp
and
(bad)
loope
in
and
mov
xor
out
shl
jns
xlat
cmp
loop
js
sbb
mov
mov
lds
mov
mov
aaa
cmp
in
cmp
mov
ins
lods
push
xor
call
out
sub
inc
out
xchg
loopne
and
repnz
pop
repnz
cmp
in
sub
and
das
es
repnz
mov
mov
pop
das
add
cdq
xchg
jp
pop
out
jg
pop
jo
mov
push
pop
cdq
and
mov
movs
mov
jmp
jbe
rcl
in
jmp
icebp
pusha
cli
fcomp
inc
rcl
adc
inc
jmp
mov
cmp
and
enter
mov
cmps
daa
and
push
inc
clc
xor
imul
adc
and
ins
popa
mov
cmp
lock
retf
add
cmp
setnp
stc
pop
sar
or
ret
lea
cs
mov
xchg
enter
push
cwde
retf
jg
dec
imul
jmp
xchg
adc
push
adc
adc
or
ret
outs
ins
sub
add
add
and
cli
hlt
jg
and
je
repnz
js
add
xchg
movs
xor
rol
and
test
xchg
pop
push
add
adc
imul
hlt
inc
dec
pop
push
mov
icebp
push
dec
inc
and
push
and
xor
(bad)
outs
cmp
movs
add
in
jne
mov
mov
jb
test
ss
imul
and
mov
icebp
loope
loopne
(bad)
sti
jle
add
(bad)
pop
add
pop
leave
cmps
dec
jmp
push
xor
aad
fdiv
imul
pop
inc
lds
outs
clc
mov
add
push
xor
mov
mov
addr16
daa
jnp
jp
cmp
xor
test
push
inc
cld
adc
push
push
pop
inc
int
out
adc
or
sub
push
adc
pop
ds
mov
push
call
push
jg
shr
repnz
scas
js
inc
cmp
mov
dec
call
sbb
push
cmps
or
mov
add
xor
ds
push
cli
ror
mov
fld
ins
fidiv
pop
call
cdq
add
test
outs
fwait
xor
shl
jae
imul
sub
add
outs
push
mov
push
fistp
sub
or
in
repz
imul
aam
mul
mov
scas
dec
xchg
jno
outs
inc
jmp
cmp
pop
jns
xlat
vphadduwq
jbe
fabs
ds
cmc
and
adc
mov
xor
cmc
(bad)
fsub
loopne
inc
adc
lock
mov
shl
(bad)
mov
ret
inc
(bad)
in
sbb
clc
xchg
outs
out
mov
in
ja
es
loope
add
mov
imul
(bad)
and
dec
push
dec
out
jl
retf
cld
fisub
xor
cli
stos
mov
or
push
gs
mov
xchg
pop
dec
add
into
xchg
das
and
mov
mov
ss
out
dec
mov
push
(bad)
repnz
add
sbb
or
lods
adc
cmp
aam
jno
ret
lods
add
in
jl
inc
pop
or
aam
mov
and
cmp
scas
mov
push
adc
cmp
test
and
cmc
test
inc
popf
test
dec
inc
jno
js
jmp
ret
mov
mov
pop
inc
(bad)
(bad)
jl
scas
lds
or
mov
dec
jle
ds
cmp
cmp
in
add
cs
aas
call
mov
xor
daa
fistp
lods
std
mul
xchg
cmc
outs
pop
jo
jl
loop
test
shr
xor
jle
(bad)
sbb
or
fsub
jne
(bad)
xor
stos
scas
jb
add
loop
xor
xchg
aas
xor
xor
dec
out
sub
mov
in
cmps
sub
mov
sbb
xchg
sub
jns
inc
adc
xor
xchg
jecxz
sti
(bad)
xor
adc
fidiv
add
sbb
jae
in
popf
inc
push
icebp
jecxz
movs
ret
mov
(bad)
jge
test
fwait
mov
pop
cmc
push
jg
lahf
fld
scas
fmulp
push
leave
sub
cmp
dec
inc
sub
pop
rcl
repz
fwait
emms
lahf
movs
test
add
push
sub
loope
out
jmp
mov
fs
retf
and
shl
mov
retf
lahf
or
lss
popa
adc
jo
xchg
sub
repnz
xchg
push
adc
lahf
and
dec
and
es
arpl
jae
push
cwde
dec
mov
test
xchg
pop
das
dec
sub
jno
jmp
hlt
call
addr16
xchg
icebp
lea
pushf
aad
mov
es
mov
cld
sbb
fs
sub
adc
xchg
cmps
xlat
add
lock
xor
ss
and
push
xchg
push
aam
mov
inc
sub
push
pop
sub
aas
outs
push
push
addr16
in
xchg
shl
cmp
mov
test
shl
sar
repnz
add
mov
dec
dec
in
pop
push
sbb
or
push
scas
and
push
mov
or
mov
ret
mov
cmp
dec
mov
test
icebp
mov
cdq
hlt
xchg
rcl
data16
fcmovne
jo
mov
arpl
lods
repz
mov
push
aas
clc
sub
leave
adc
add
aaa
pusha
xchg
mov
pop
inc
cld
mov
and
mov
cmp
in
sahf
xor
ror
imul
or
pop
sub
lea
mov
das
in
mov
ja
adc
cwde
cmp
outs
or
ret
jle
imul
xor
mov
dec
mov
js
jmp
add
daa
mov
xchg
in
or
call
inc
outs
fdivr
pop
sar
mov
jl
cmps
adc
scas
push
lds
cmp
frstor
mov
retf
xor
lahf
aam
sahf
addr16
jne
push
mov
and
into
mov
adc
mov
adc
test
pop
or
sbb
(bad)
push
push
mov
xchg
lahf
repz
jne
push
aad
in
mov
add
inc
imul
jne
rcl
or
retf
aad
movs
push
push
cmc
xor
push
cmps
sbb
cmp
call
cmp
cmp
pop
stos
cmp
(bad)
xor
mov
aas
cli
shl
inc
add
lock
xor
mov
push
nop
xchg
mov
xchg
push
dec
pop
mov
pop
retf
scas
sub
pop
cmp
ret
sbb
loop
stos
adc
jmp
cli
add
push
(bad)
sbb
pop
pop
lahf
mov
sub
cmp
push
in
loop
sub
pop
gs
add
ret
mov
dec
sbb
mov
out
inc
movs
test
jmp
cmp
in
les
push
mov
iret
dec
je
push
mov
movs
sub
cmp
push
bswap
dec
mov
jo
mov
jecxz
jnp
lahf
test
dec
fwait
enter
cmp
mov
dec
dec
fistp
push
(bad)
cli
imul
inc
sbb
sbb
outs
inc
in
sti
aad
xlat
stos
push
jmp
retf
pushf
adc
ret
sti
outs
and
adc
adc
mov
retf
pop
push
jp
sub
out
fldcw
stos
es
movs
imul
jle
lea
lods
xchg
lahf
dec
adc
cmc
ret
(bad)
mov
xor
outs
mov
movs
or
rcr
fdivr
push
shr
push
dec
or
jne
push
mov
xor
jecxz
arpl
in
add
mov
out
mov
(bad)
xchg
sahf
inc
cmp
inc
test
out
sar
icebp
or
ret
cmp
and
add
out
pop
mov
xchg
jb
pop
ja
aas
cmps
or
or
mov
cmp
xor
scas
pop
jecxz
xchg
mov
adc
stc
adc
mov
sub
sar
sbb
and
loope
fisubr
xor
jb
inc
xchg
(bad)
fadd
test
out
add
aaa
lahf
fwait
icebp
scas
xor
nop
fadd
jge
dec
xchg
ins
mov
xor
mov
retf
je
push
sar
sub
imul
xor
pop
mov
dec
xchg
test
test
sub
es
and
jle
mov
imul
dec
mov
jmp
rol
xor
jno
inc
(bad)
gs
fcomp
dec
cmps
xor
outs
cmps
jno
mov
sub
xor
ret
ins
add
lock
jle
cwde
push
push
dec
push
ins
pop
icebp
and
inc
mov
xchg
out
(bad)
xchg
sahf
mov
bound
fwait
(bad)
xchg
dec
push
das
sahf
es
pop
lods
jmp
fild
aas
retf
gs
data16
and
adc
retf
int
push
jnp
mov
retf
jo
push
leave
bound
fcomi
fld
pop
lds
add
movs
adc
add
xor
aam
scas
xlat
add
sbb
or
add
es
imul
sbb
out
test
xchg
(bad)
pop
inc
je
push
outs
dec
jecxz
popa
xlat
fsubr
xor
xchg
rcr
sub
ror
pushf
movs
sub
or
and
cmp
fdiv
mov
inc
xlat
xor
fs
ins
push
or
dec
push
cdq
in
mov
in
test
(bad)
jle
ror
iret
mov
mov
add
xchg
jecxz
cmps
add
cmps
ins
fst
test
hlt
gs
mov
loope
aas
out
cmps
aad
push
gs
dec
iret
je
add
out
mov
push
xchg
dec
ret
out
adc
dec
in
mov
movs
dec
mov
scas
adc
nop
scas
xchg
(bad)
rcl
xor
push
aas
push
cld
out
adc
mov
out
jnp
xor
loope
cwde
dec
mov
lock
mov
arpl
adc
mov
(bad)
pushf
(bad)
iret
xor
dec
jge
jae
retf
rol
pop
pop
push
dec
sbb
add
jb
shl
aaa
imul
mov
(bad)
push
lahf
xor
mov
jns
inc
cdq
xor
fnsave
out
das
aaa
les
or
jmp
and
and
and
ffreep
mov
lods
jb
mov
and
shl
pop
xor
bound
enter
rol
stc
out
pushf
popa
call
aam
and
or
adc
popf
movs
jle
ror
(bad)
stos
mov
pop
jae
addr16
sbb
ror
das
pop
push
or
xor
sar
mov
mov
popf
stos
pop
iret
mov
mov
dec
rol
cld
add
cmc
shl
popf
jg
pop
push
mov
and
lock
call
mov
dec
pop
out
das
popa
div
sub
push
lds
sub
pop
lock
push
mov
das
xor
lahf
jmp
sub
add
xchg
loop
sbb
call
pop
je
mov
cmp
cmp
(bad)
xor
retf
cmp
mov
lods
inc
pop
pop
lods
es
hlt
inc
test
bound
shl
popa
sbb
push
jne
int3
xchg
push
cmp
cdq
fsubrp
add
jg
out
add
mov
ret
(bad)
push
mov
(bad)
in
test
mov
mov
call
push
ins
or
sub
(bad)
fdivrp
call
outs
cmp
xchg
mov
cmp
and
sbb
outs
rcl
sbb
push
adc
fwait
movs
std
pop
out
mov
sub
push
mov
xchg
or
sahf
jl
in
add
adc
dec
and
add
lea
cmps
popf
add
clc
shl
sub
sbb
mov
mov
cmp
cmp
sbb
or
imul
xor
out
adc
jle
(bad)
mov
pop
pop
(bad)
xchg
sbb
les
pushf
and
or
leave
dec
sub
popa
push
lock
sub
jo
pusha
dec
and
retf
dec
inc
and
jge
xchg
cmp
cmp
and
adc
xor
aaa
pop
add
aaa
into
sbb
movs
mov
mov
or
ins
mov
je
rol
mov
out
mov
push
lahf
sbb
hlt
clc
mov
push
dec
dec
daa
ins
aaa
sar
mov
mov
push
xchg
int
out
push
out
xor
pop
pop
or
pusha
inc
scas
push
pop
cdq
push
sbb
pop
mov
jl
inc
loop
jne
iret
mov
icebp
ja
lds
shr
stc
retf
fs
adc
cmp
pop
xor
or
sbb
mov
lock
jl
push
sbb
xchg
dec
sub
sbb
movs
jno
out
repz
xlat
sub
pop
(bad)
in
ja
add
int
inc
orps
ja
pop
ret
pop
in
push
pop
retf
xchg
push
stos
jp
sub
fucomi
sub
push
cmp
xchg
fdivr
in
dec
int3
outs
ret
jp
mov
xor
inc
fild
pop
out
push
cwde
dec
outs
stos
mov
mov
in
out
(bad)
push
or
push
mov
xor
sbb
popa
repz
stos
xor
fld
rcr
cmc
cwde
fsubr
sbb
rep
(bad)
jg
xchg
outs
mov
xchg
mov
fs
pop
dec
xor
mov
stc
push
ss
call
ja
in
and
xchg
mov
xchg
fistp
aaa
push
movaps
ja
sbb
fwait
lods
fidivr
sbb
sbb
stos
cld
adc
adc
fsub
inc
fsub
imul
mov
xchg
xor
imul
sub
jl
in
mov
mov
stos
icebp
pop
cmp
sub
in
mov
push
jnp
dec
fmul
(bad)
dec
fbstp
push
xor
jbe
loop
dec
pop
pusha
enter
mov
and
sbb
loope
out
inc
rcl
addr16
add
fstp
mov
(bad)
call
sbb
in
xchg
hlt
ja
push
out
sbb
clc
add
les
push
cld
fmulp
pusha
fwait
mov
pushf
cli
xor
int3
rcl
sub
adc
mov
es
push
sub
(bad)
(bad)
int3
sub
in
out
fisttp
mov
fadd
pop
jae
adc
mov
mov
mov
lea
mov
shr
lock
mov
repz
outs
cmp
imul
enter
(bad)
mov
mov
mov
mul
pop
in
mov
test
mov
loope
ins
xor
dec
shl
cmp
jmp
add
inc
(bad)
xor
movs
movs
xor
xchg
mov
pop
gs
sub
mov
pop
gs
fwait
push
sbb
ss
(bad)
or
sbb
cs
js
or
pop
mov
push
aaa
sub
pushf
js
js
mov
retf
add
push
jp
std
retf
aaa
adc
(bad)
out
push
ret
test
scas
out
jns
adc
sub
movs
push
jg
dec
jle
das
or
ret
je
je
clc
push
mov
dec
lea
(bad)
pop
sub
inc
mov
dec
enter
adc
mov
inc
sbb
mov
arpl
xor
mov
mov
test
jg
lods
lds
scas
(bad)
lods
mov
test
jle
jecxz
mov
fmul
mov
fs
pop
sbb
out
sahf
sar
test
push
add
push
and
fld
jecxz
or
add
pop
add
vmovaps
dec
jb
inc
in
jp
or
mov
lods
fwait
shl
dec
pusha
(bad)
cmp
add
xor
pusha
gs
xlat
fistp
adc
sbb
ret
sbb
dec
cdq
sar
push
add
loop
imul
adc
jge
outs
sti
jl
das
sub
xchg
cdq
iret
push
test
pop
cdq
in
retf
fistp
or
mov
and
retf
inc
mov
lds
sahf
int3
out
xor
cmp
add
test
push
mov
xor
sbb
mov
bound
cmp
mov
adc
rcr
std
inc
test
nop
cmp
mov
dec
push
popf
mov
cmp
or
push
and
je
adc
xlat
cmp
in
mov
imul
push
sbb
stc
adc
sub
jns
into
in
(bad)
loopne
sti
lahf
dec
fs
in
(bad)
cmp
int
das
xor
xchg
js
pop
xchg
int
cmp
pop
mov
pop
enter
xchg
inc
jnp
icebp
pop
adc
out
xor
push
push
cli
pop
xor
pushf
jl
mov
and
dec
adc
push
adc
es
imul
and
mov
jae
shl
push
les
gs
fbld
mov
in
xor
ret
mov
jbe
clc
inc
xchg
cli
nop
neg
mov
retf
hlt
jae
jp
mov
add
leave
mov
sbb
dec
cmps
xor
mov
sub
xor
in
push
mov
fwait
xchg
adc
mov
sbb
out
or
push
aas
push
jp
je
adc
xchg
mov
ds
enter
sbb
inc
dec
mov
push
xchg
rcl
gs
xor
add
(bad)
sbb
push
sbb
js
sbb
outs
jno
jbe
imul
(bad)
mov
mov
adc
sub
add
lds
sub
pop
dec
xchg
out
inc
dec
dec
lods
mov
jg
je
xor
sar
push
push
(bad)
fwait
stos
nop
movs
push
shl
pushf
fisttp
mov
pop
fcom
addr16
sub
daa
jmp
push
out
bsf
stos
or
in
sbb
cmp
jge
push
xor
pop
into
bound
aam
cmp
ins
ret
dec
neg
scas
dec
lock
test
cld
jmp
bound
mov
xor
jo
inc
into
sbb
(bad)
add
xlat
pop
bound
(bad)
into
jmp
cmp
push
adc
sub
int
cmp
fsub
out
enter
adc
stos
cmp
in
adc
xor
add
lea
mov
jns
mov
dec
dec
jecxz
fist
sub
and
push
scas
xor
sti
ret
xchg
je
int3
pop
popa
mov
test
mov
xchg
out
xchg
push
jmp
test
cmp
outs
jl
loope
je
dec
mov
jge
push
push
pop
sbb
popa
jae
repnz
bound
mov
in
dec
ins
jns
dec
push
jge
pop
imul
push
in
xor
lds
(bad)
jbe
push
mov
inc
push
in
fild
ror
ror
mov
js
xor
fcmovnbe
or
pusha
adc
dec
jo
lods
stos
(bad)
shl
push
cmp
inc
push
scas
and
or
adc
adc
imul
dec
imul
sbb
repnz
adc
push
outs
dec
sub
add
mov
movs
xlat
stos
jg
jle
xor
sbb
or
sahf
sbb
add
push
fwait
push
jp
aaa
mov
bound
loop
xchg
jg
pop
xlat
xor
adc
xchg
retf
call
test
dec
iret
(bad)
xor
jns
cld
or
sbb
sbb
dec
mov
sub
push
inc
and
add
xchg
add
mov
jg
and
lds
call
pop
sahf
data16
push
in
mov
in
cmp
inc
test
mov
stos
shl
int3
pop
imul
imul
clc
jecxz
das
xchg
push
sbb
inc
sbb
mov
test
push
or
icebp
mov
push
mov
popa
fs
icebp
fbld
jge
mov
int
cmp
and
inc
push
jns
inc
dec
pop
sbb
dec
mov
xchg
je
fs
mov
or
dec
pushf
mov
mov
sahf
imul
inc
fstp
mov
pop
in
pop
adc
push
sub
fisubr
(bad)
jp
mov
sbb
sar
pop
xor
pop
outs
shr
js
push
xchg
in
and
inc
movs
dec
fst
pop
movs
or
adc
outs
mov
ja
and
mov
mov
add
scas
and
in
loop
cld
mov
mov
mov
push
push
inc
aaa
pop
mov
xor
mov
pop
jbe
inc
jno
cmp
cmp
fstp
add
movs
stc
push
rol
or
jbe
xor
xchg
xchg
mov
out
loope
push
adc
imul
imul
call
cmps
retf
xchg
or
hlt
stos
mov
push
aas
push
out
mov
jne
repz
or
inc
jns
imul
jnp
cwde
xchg
push
hlt
pop
sbb
mov
xchg
aas
ret
cmps
sbb
or
push
aaa
pushf
pop
shl
jp
mov
adc
jb
je
sub
inc
fistp
mov
adc
in
mov
jg
push
inc
and
sbb
sub
(bad)
mov
sub
push
pop
movs
mov
or
iret
imul
push
test
hlt
push
pop
outs
ins
dec
xchg
jae
jnp
std
and
fbld
mov
cwde
adc
cmps
push
cmc
sub
popa
cmp
push
cmp
mov
popa
stos
mov
xchg
adc
add
out
mov
mov
or
es
adc
jg
ins
mov
xchg
fs
aas
mov
xlat
(bad)
and
inc
mov
fidivr
into
call
(bad)
push
test
out
pop
mov
push
ss
test
test
in
pop
xor
xor
mov
outs
push
and
and
jne
jnp
mov
pop
jl
jae
mov
daa
rep
aam
test
cmp
sub
jb
ins
jecxz
push
mov
pop
aad
call
ins
ds
mov
clc
lods
sub
pop
fnstsw
gs
ret
mov
jmp
out
mov
ds
xor
daa
jns
pusha
jno
repz
fild
inc
or
mov
lods
cmps
sahf
shr
stos
fcmove
inc
cli
mov
cwde
cdq
loop
xchg
pop
lds
push
sbb
out
mov
cmp
popf
mov
std
out
js
push
push
lahf
xchg
loope
sbb
adc
adc
xchg
pop
imul
ror
ins
cld
add
sbb
xchg
pop
xchg
or
popf
xchg
mov
sub
jmp
xchg
push
sub
mov
ins
inc
in
repnz
dec
xchg
movs
fmulp
clc
movs
or
fwait
mov
inc
es
imul
add
imul
jle
rcl
out
loope
movs
ins
push
xor
(bad)
aad
(bad)
adc
jg
ins
retf
loope
loopne
(bad)
sbb
ins
pshufw
inc
inc
pop
(bad)
jmp
popf
inc
sbb
ror
mov
test
inc
ror
in
or
(bad)
fsub
dec
xchg
int3
sahf
jg
fwait
std
sbb
stos
adc
sub
dec
jmp
cmps
in
push
cld
adc
movs
ret
mov
push
pop
push
ret
pop
add
enter
int
lods
lahf
test
and
movs
mov
scas
stos
test
cwde
cmp
imul
scas
lahf
mov
popa
dec
pop
sahf
mov
jbe
mov
pop
fwait
das
mov
push
shl
lods
daa
lea
fisub
int
icebp
dec
(bad)
pop
sub
(bad)
sub
sahf
lea
in
je
popf
adc
push
sar
mov
aam
sub
sbb
movs
addr16
push
mov
cs
or
pop
sbb
loopne
stc
lds
mov
add
jmp
loopne
or
push
inc
sub
ds
cmps
test
cs
das
popa
adc
mov
fcomip
invd
mov
leave
mov
adc
mov
nop
or
lahf
jmp
and
cmp
adc
je
xor
in
imul
(bad)
sti
mov
cmp
add
or
or
push
dec
mov
scas
and
jmp
retf
cmps
jp
mov
xchg
xchg
fsub
pop
xchg
shr
scas
das
adc
mov
imul
iret
add
or
or
mov
push
inc
mov
jge
and
jmp
push
out
sbb
xchg
sbb
push
or
ds
inc
pop
movd
push
dec
or
(bad)
mov
lea
nop
mov
(bad)
shl
sbb
clc
adc
xor
pop
xabort
sub
mul
aam
pushf
hlt
jne
jb
ror
repnz
sbb
mov
retf
push
sub
loop
adc
xor
inc
pop
mov
lds
(bad)
lock
(bad)
jae
sar
and
lahf
or
pop
xchg
mov
pop
test
pop
movs
mov
xchg
xchg
std
mov
pop
jg
les
sar
cld
scas
dec
mov
xor
or
dec
inc
popf
push
add
ss
gs
mov
xchg
in
mov
dec
sub
inc
mov
stos
pop
adc
mov
bnd
hlt
pop
xor
addr16
mov
loope
icebp
loope
add
mov
xor
(bad)
enter
or
sub
shr
test
in
rcl
xchg
jo
xchg
and
dec
mov
repnz
and
pop
mov
inc
fs
cdq
mov
push
sub
mov
inc
add
sub
jl
mov
push
imul
pop
call
fistp
pop
out
and
addr16
imul
ins
nop
(bad)
xlat
mov
xlat
repz
shl
aam
push
stc
push
mov
push
add
sub
adc
mov
fidivr
jns
cmc
mov
mov
xor
jl
fild
xor
movs
add
icebp
push
pusha
test
sbb
aam
jae
dec
jno
(bad)
std
jmp
stc
or
jle
sti
ds
adc
jp
les
sbb
aaa
sub
mov
cmp
fdivr
hlt
pusha
dec
call
js
jns
and
mov
add
pop
jae
lock
rcr
xchg
and
xor
jnp
sbb
push
sbb
fsubr
mov
pop
xchg
mov
test
rcl
cmp
movs
and
inc
sub
inc
pop
in
inc
cli
jp
jmp
add
pop
in
jb
lds
push
shr
and
pop
pop
scas
xor
repnz
jl
dec
(bad)
retf
fsub
inc
or
mov
ror
sub
clc
sbb
inc
push
bound
imul
push
shl
outs
dec
jo
inc
inc
clc
mov
sub
sti
lock
mov
push
jae
mov
bound
idiv
push
scas
jbe
xchg
push
ds
repnz
push
push
dec
fistp
and
mov
sahf
push
lds
cld
(bad)
adc
push
dec
mov
ins
inc
xchg
ss
or
(bad)
in
mov
or
sub
aas
mov
jge
and
jecxz
adc
inc
ja
add
adc
adc
pop
fld
outs
rol
enter
mov
pop
arpl
gs
fiadd
test
sbb
and
add
arpl
sbb
sub
ja
call
mov
xor
mov
xor
push
hlt
and
into
mov
add
clc
out
add
dec
sub
cs
or
adc
inc
and
adc
stc
inc
cli
fld
inc
addr16
test
lock
add
ja
ins
mov
push
mov
inc
jle
in
lods
in
mov
(bad)
mov
mov
or
mov
fcom
pop
adc
das
push
mov
push
aam
xchg
or
outs
int
sub
(bad)
mov
push
mov
inc
fcmovu
push
pop
daa
(bad)
loop
sti
jmp
xor
mov
cmp
add
or
fld
dec
pop
sbb
fst
out
repnz
aad
fwait
or
xlat
div
addr16
sbb
iret
dec
sub
pop
mov
mov
movsx
dec
cmp
in
and
xchg
add
add
inc
test
add
and
das
mov
and
iret
hlt
sbb
rcl
adc
mov
sub
data16
retf
jg
xchg
shl
xchg
push
in
iret
xor
cmp
and
cmp
mov
shrd
jg
fcmovne
cld
sub
mov
pop
(bad)
sub
jne
out
sub
add
jl
xchg
mov
or
mov
(bad)
add
pop
mov
inc
or
adc
daa
push
jmp
lds
(bad)
cmp
inc
in
xlat
jmp
movs
mov
add
int
sbb
jg
sbb
sub
xchg
je
ds
shl
push
loopne
sub
stos
scas
sub
fcom
mov
sbb
jo
das
movs
sbb
rol
jae
je
addr16
ss
in
fild
rcr
ja
add
je
mul
ds
ss
je
mov
nop
cmp
int
int
lods
bound
mov
test
push
mov
into
(bad)
jmp
(bad)
std
dec
jne
add
sahf
mov
mov
push
outs
dec
mov
xor
ins
xlat
cmp
stos
mov
int
rcl
shr
cld
fwait
(bad)
cmp
jge
retf
xlat
(bad)
mov
xor
rcl
gs
data16
dec
call
rcl
jae
jns
out
rcr
cmps
xor
ds
jmp
cmp
adc
push
pop
das
push
push
scas
inc
adc
(bad)
fwait
push
je
jne
xor
mov
sbb
or
mov
fisttp
adc
jne
cwde
lods
fmul
push
std
jae
xchg
mov
cmps
jl
mov
mov
mov
pusha
pop
inc
cdq
ret
cmp
xchg
sbb
xor
adc
sub
pop
test
push
xchg
xchg
push
bound
fstp
ja
mov
leave
mov
je
push
fprem
mov
aam
mov
pop
jecxz
pusha
(bad)
fwait
push
sbb
fild
bound
or
(bad)
int3
scas
or
inc
popa
fs
scas
xor
call
cmps
test
or
arpl
sub
(bad)
push
adc
jae
dec
jne
in
popa
jp
mov
adc
ds
leave
mov
js
push
push
or
xchg
add
icebp
cwde
xor
push
jecxz
adc
lahf
hlt
out
inc
je
call
adc
add
cs
scas
cmp
sbb
popf
mov
sahf
loop
shl
ret
fmul
mov
rcr
ins
mov
and
push
inc
sti
xchg
jmp
add
sahf
and
mov
mov
add
es
and
push
ret
outs
or
int3
test
pop
or
popf
(bad)
jmp
in
aad
dec
pop
or
and
jl
js
mov
jp
mov
imul
and
shl
add
mov
retf
and
call
xor
mov
or
pop
add
mov
fcomp
and
cmp
shl
xor
(bad)
dec
sbb
repnz
pop
sbb
rcl
int3
fs
out
adc
ss
adc
mov
stos
call
enter
in
dec
pop
scas
or
sbb
or
fimul
rep
xor
cli
mov
dec
or
out
jmp
adc
inc
mov
rcl
cmp
mov
pop
mov
lds
add
and
js
not
add
sbb
es
inc
mov
test
or
aam
pop
js
ror
dec
dec
(bad)
(bad)
lods
mov
push
clc
ins
ins
xor
xchg
xor
out
mov
push
das
(bad)
cli
fcom
jmp
inc
ins
add
pushf
aas
fs
call
js
sub
adc
(bad)
cmc
loope
int3
bound
and
jle
out
push
enter
repz
dec
test
xor
pop
ret
test
cmc
or
cs
dec
dec
inc
jp
push
scas
adc
inc
mov
pop
out
test
jb
jno
push
clc
cmps
pop
jb
dec
les
xchg
xchg
xor
jno
les
adc
call
(bad)
xchg
aad
mov
push
ins
dec
clc
stos
loop
jo
jg
out
sub
and
icebp
sub
out
(bad)
clc
lds
cwde
add
sahf
ss
xor
lahf
adc
add
jmp
(bad)
loope
push
repnz
imul
mov
scas
out
lds
call
(bad)
mov
mov
mov
mov
adc
not
mov
fisub
xchg
mov
or
mov
test
push
fbld
pop
not
mov
sbb
push
lea
hlt
outs
mov
or
sub
sbb
xchg
int3
(bad)
arpl
mov
(bad)
mov
icebp
ja
les
mov
imul
xor
int
in
aaa
sub
lahf
jo
mov
aad
shl
and
mov
push
cld
or
sub
dec
xchg
xchg
imul
xchg
cmp
pop
je
jne
loope
pushf
shl
cmp
jbe
into
xchg
mov
movs
sahf
das
cmps
std
dec
mov
iret
das
sub
movs
add
cmp
(bad)
loopne
popa
add
hlt
mov
pusha
jno
fild
xlat
in
stc
and
and
cld
daa
inc
faddp
mov
xlat
sub
inc
out
cmp
mov
sahf
test
or
xchg
mov
(bad)
pop
sbb
dec
mov
or
and
push
leave
inc
in
dec
enter
mov
stos
ret
xchg
ja
fstp
inc
mov
adc
add
inc
sbb
icebp
pop
push
mov
cld
(bad)
fucomp
adc
mov
jl
or
xor
test
cs
jl
lods
xchg
mov
mov
cmp
(bad)
gs
das
lods
inc
lahf
mov
leave
and
scas
push
jno
iret
imul
movs
fidivr
clc
movs
or
pop
je
sti
xor
out
sub
leave
or
das
mov
jp
lds
xor
and
push
mov
adc
mov
cwde
es
movs
add
jbe
and
aad
es
test
cmp
jmp
shl
call
scas
xchg
jno
add
outs
std
retf
movs
je
and
in
ror
(bad)
push
test
test
adc
js
ret
push
into
mov
dec
jno
pop
jnp
addr16
mul
cmp
int
dec
add
or
mov
adc
sub
gs
adc
aam
pop
(bad)
scas
addr16
lahf
sub
and
sbb
leave
dec
ret
pop
mov
pop
jb
(bad)
loop
add
loopne
(bad)
dec
popa
imul
or
ficom
dec
bound
mov
and
mov
jge
dec
leave
pop
jmp
not
pop
repnz
pop
cmps
pop
lds
xchg
mov
stos
adc
enter
jo
rcr
push
mov
into
inc
inc
sbb
mov
jae
iret
push
push
in
out
test
add
xor
or
mov
adc
add
inc
inc
hlt
dec
retf
push
adc
ds
fcom
dec
and
mov
(bad)
mov
jmp
mov
fcmovb
sbb
or
mov
movs
ret
pop
jle
pop
or
push
jecxz
ror
cmp
xchg
pushf
stos
imul
pushf
xchg
mov
sbb
mov
sub
rcr
mov
mov
dec
add
aaa
xchg
popa
push
or
ja
in
fs
cmp
sub
in
pop
je
pop
push
aaa
adc
cwde
cmp
cmp
inc
std
cdq
adc
cdq
out
pop
(bad)
inc
sar
fcom
in
out
(bad)
lods
mov
dec
sbb
mov
in
(bad)
mov
dec
jno
cmp
mov
mov
fistp
dec
jg
lods
add
ss
out
in
into
adc
inc
shl
nop
pushf
ror
ins
out
cmps
arpl
retf
cmp
jmp
xor
(bad)
jb
loopne
sbb
jle
pop
cmp
mov
cmp
jmp
mov
inc
lahf
in
data16
clc
cmp
out
jno
ja
inc
push
inc
clc
(bad)
mov
push
cmp
stos
sub
bound
and
push
xor
add
fbld
jo
xchg
mov
sbb
daa
pusha
sbb
test
dec
dec
not
shl
sub
stos
xchg
mov
pop
push
or
shl
xor
and
pop
xor
(bad)
cli
sub
test
mov
sub
jo
cmp
jg
inc
popa
jl
aaa
fbld
sbb
sbb
cmp
test
pusha
pushf
imul
adc
mov
fmul
cld
nop
and
fidiv
dec
enter
gs
add
xchg
cwde
mov
movs
pop
inc
pop
dec
inc
adc
and
mov
pop
js
movs
push
sbb
push
mov
adc
retf
stos
inc
push
inc
jg
rcl
mov
int
not
push
jmp
pop
(bad)
pop
mov
mov
inc
pop
into
mov
mov
mov
dec
(bad)
pusha
fdivr
jbe
popa
jo
je
lahf
fwait
imul
scas
push
cmps
mov
div
jns
shr
pop
or
in
mov
pop
fisubr
sub
imul
mov
or
dec
test
adc
fidivr
adc
hlt
imul
and
xchg
jb
or
aad
cmp
mov
jmp
(bad)
ins
scas
push
or
adc
mov
fimul
dec
xchg
mov
ret
xor
push
dec
call
mov
loopne
inc
sar
mov
dec
adc
xor
call
jmp
push
jl
add
mov
idiv
mov
pop
fst
pop
pushf
mov
ret
mov
call
je
scas
ss
jecxz
or
outs
mov
inc
fnsave
aaa
imul
xchg
push
bound
paddd
inc
test
push
fcmovne
ficomp
cmp
sub
push
data16
xchg
lods
icebp
loop
shr
fld
xchg
cmp
and
fcom
inc
adc
push
inc
mov
or
mov
test
ins
xchg
mov
push
sub
mov
add
sar
cmc
mov
punpcklbw
cmp
out
ins
xor
(bad)
in
and
xchg
adc
outs
dec
mov
sub
push
xchg
lds
retf
popf
test
and
adc
xchg
pop
stos
push
sub
cmp
imul
out
or
ror
sahf
adc
ss
sub
out
aaa
or
(bad)
adc
sbb
clc
(bad)
jmp
in
pop
and
xchg
sahf
stos
lds
jns
cmps
push
or
inc
push
inc
js
sub
repz
enter
stc
pop
hlt
and
or
jns
xchg
xchg
inc
dec
(bad)
xchg
dec
jecxz
jmp
cwde
test
scas
pushf
xchg
xchg
add
ret
jp
fnstsw
pusha
stos
call
push
xchg
imul
int
in
xchg
push
shl
xchg
add
repz
(bad)
out
inc
cld
push
cwde
mov
(bad)
mov
sub
lds
cli
test
std
pop
push
lds
rcr
sub
pop
fisttp
ret
dec
jp
pop
sahf
(bad)
into
cwde
pop
add
mov
sbb
cmp
inc
retf
cwde
cmp
dec
and
and
popf
sub
xchg
je
inc
les
hlt
fcomi
out
adc
jne
fisub
jmp
dec
mov
loopne
std
inc
scas
and
inc
addr16
(bad)
repz
jae
mov
mov
xor
or
ins
addr16
dec
sub
int
mov
sbb
fwait
daa
jg
cmp
cwde
dec
mov
mov
popa
jnp
dec
xor
jp
rcl
jp
jle
xor
adc
or
jo
fwait
jne
daa
push
arpl
pop
stos
int3
ja
push
(bad)
call
ffree
pop
xchg
sub
xor
pop
mov
ja
mov
mov
int3
mov
inc
sti
mov
dec
pop
mov
mov
repz
mov
ret
pop
jle
loopne
repz
and
push
ja
push
xor
pop
mov
jns
lea
push
lds
push
mov
ror
or
push
lahf
in
mov
jp
sbb
arpl
pop
mov
cli
out
pop
fnstcw
movs
sub
lds
mov
ins
mov
out
mov
cmp
je
sbb
pop
add
sahf
xlat
in
add
cdq
imul
cmp
push
stos
push
jmp
pop
mov
jo
aad
sahf
pusha
retf
inc
pop
pusha
cs
stc
add
bswap
and
cmc
mov
fwait
test
and
int3
push
bound
mov
jecxz
mov
jmp
(bad)
mov
stc
sbb
ins
sub
test
dec
add
mov
scas
sub
mov
add
pop
sub
stc
repnz
sbb
mov
add
popf
sub
jle
pop
xchg
and
aaa
or
outs
movs
std
add
outs
cmps
fidivr
sbb
pushf
jno
hlt
adc
data16
neg
aam
dec
pop
out
fs
adc
nop
pusha
jp
push
sbb
aas
mov
mov
ret
jbe
or
stc
in
mov
sub
add
leave
arpl
lea
int3
sub
adc
push
cld
push
dec
lock
(bad)
leave
cs
add
cmp
lds
jg
je
jl
lock
adc
aad
test
inc
mov
sar
test
sbb
or
pop
cwde
add
cmp
in
mov
add
sub
(bad)
dec
imul
push
xor
mov
(bad)
cmp
stos
hlt
and
nop
push
xchg
mov
xchg
test
sbb
out
pop
rol
dec
aad
xchg
scas
mov
push
jo
jo
out
mov
rol
add
cmp
mov
fdivr
mov
sub
(bad)
mov
sub
push
xor
mov
and
pop
inc
sbb
fnstcw
jge
xor
sar
jp
inc
ja
add
sub
sahf
push
cmp
movs
jne
call
xchg
std
xchg
outs
mov
dec
in
pcmpeqd
push
sbb
cdq
pop
out
inc
ja
xchg
ret
cld
not
mov
stos
popf
jno
ficomp
inc
js
leave
test
sbb
sub
mov
push
ror
mov
jmp
fist
into
jge
ins
inc
icebp
pop
and
aas
mov
(bad)
or
int
xchg
imul
ins
xor
add
sbb
retf
mov
xchg
and
push
or
retf
xchg
sub
adc
int3
and
xchg
inc
add
lods
cmp
pop
shl
fild
or
jb
xlat
ror
ja
push
hlt
lods
push
addr16
cs
cs
xor
and
(bad)
icebp
outs
das
aad
inc
pop
int3
or
jle
packsswb
int
jmp
mov
xchg
xor
pop
inc
mov
ins
neg
mov
xor
push
add
arpl
cmp
xor
mov
jp
clc
aad
das
dec
(bad)
ss
popf
idiv
mov
shl
fwait
xchg
mov
pop
jnp
into
mov
dec
imul
add
stc
cmps
add
fs
push
psubd
fld
push
xor
fucompp
pop
push
pop
push
out
pushf
and
bound
xchg
rol
ja
outs
outs
cmps
sbb
jnp
aam
sub
xchg
mov
mov
jnp
sti
mov
cmp
bound
dec
inc
bound
stos
inc
cmp
cmp
inc
mov
mov
in
inc
xor
fdivr
xchg
sub
jg
in
xchg
aas
xchg
mov
adc
fidivr
mov
std
sbb
outs
icebp
icebp
jge
sbb
movs
addr16
mov
imul
test
arpl
rcr
mov
pop
shl
xchg
aas
pusha
scas
shr
dec
repz
pop
mov
xchg
cmp
imul
mov
in
lods
adc
mov
iret
inc
mov
les
cdq
mov
lods
pop
int3
pop
mov
cmp
adc
mov
neg
loope
jns
pop
push
push
sub
out
mov
jbe
jmp
xor
imul
xchg
loopne
outs
aad
pop
and
pop
pop
cli
xchg
sub
xor
jl
sbb
push
sbb
sar
xlat
ret
cmp
stos
add
add
push
cmp
push
mov
je
adc
pop
sbb
jmp
or
ror
ror
in
retf
cmp
lds
or
mov
dec
add
icebp
adc
imul
or
push
jp
jbe
in
add
jae
dec
ss
push
push
enter
cmp
sti
cld
out
xchg
repnz
fadd
inc
pusha
sbb
daa
les
or
dec
dec
inc
or
sub
xor
icebp
cwde
mov
scas
(bad)
shl
sahf
(bad)
es
mov
xor
daa
les
jb
jp
jp
xchg
inc
(bad)
pop
add
scas
inc
and
jne
adc
jnp
in
add
or
lea
addr16
test
xchg
and
mov
(bad)
dec
outs
or
out
iret
mov
adc
sbb
pop
jmp
popf
add
and
jg
cmps
xor
cmp
scas
fld
sbb
jns
dec
mov
add
jmp
pop
mov
jmp
outs
pusha
gs
and
xchg
sub
cmp
imul
pop
fwait
retf
push
and
lock
aad
and
(bad)
pop
xor
lods
pop
test
xchg
adc
mov
ja
test
mov
call
jl
in
push
sahf
clc
loopne
xchg
(bad)
repnz
enter
xadd
dec
sub
xchg
dec
jo
not
jmp
dec
xor
sub
imul
inc
loopne
sub
cld
inc
inc
mov
jle
inc
inc
xchg
mov
ret
mov
out
xor
jmp
jno
jmp
dec
add
sub
xchg
inc
(bad)
jmp
icebp
js
fimul
or
stc
scas
sub
and
int
pop
xchg
mov
mov
test
dec
lahf
rol
lods
dec
adc
sahf
fwait
and
rol
dec
adc
loop
(bad)
jl
mov
pop
lock
cmps
ds
rol
cmps
aad
scas
xor
sub
jge
xor
addr16
push
sti
xchg
imul
out
xor
test
push
xor
or
mov
scas
xchg
in
test
scas
(bad)
xlat
daa
daa
or
mov
jmp
pop
xchg
mov
adc
push
cmp
and
mov
ds
inc
loope
dec
dec
popa
xchg
stos
xor
retf
sub
inc
scas
inc
int3
(bad)
outs
fwait
aas
dec
int3
icebp
inc
loop
sub
dec
push
jmp
sbb
ret
stc
or
mov
pop
xchg
dec
mov
pop
ds
loope
(bad)
(bad)
sbb
pusha
jmp
in
push
fidivr
cli
push
inc
dec
cmp
mov
inc
out
push
test
cmp
mov
add
je
stc
repnz
call
(bad)
cdq
mov
test
push
sub
stos
pop
lds
jne
push
mov
push
addr16
push
aaa
dec
movs
adc
push
mov
dec
jbe
ins
xlat
fimul
call
ficom
loope
push
pop
cmp
add
cmp
call
cmp
cmp
inc
push
fdiv
add
in
js
int
ret
cmps
mov
mov
aam
outs
or
rcl
ja
pop
pushf
shl
mov
leave
retf
push
xchg
scas
cmp
lea
stos
in
frstor
push
stos
sbb
jbe
mov
out
sbb
sti
aam
bound
push
lahf
mov
dec
mov
arpl
aad
push
adc
dec
push
cmp
pop
and
adc
fsubp
sbb
iret
xor
inc
sbb
ds
out
cdq
scas
and
ficomp
xchg
push
xchg
push
add
in
inc
hlt
(bad)
mov
nop
xchg
repz
retf
pop
lods
mul
bnd
cmps
adc
daa
stos
and
pop
adc
push
shl
in
jge
clc
xlat
not
and
in
lahf
jl
outs
dec
adc
gs
lods
push
out
adc
jne
aad
(bad)
sbb
(bad)
idiv
int3
lds
loope
mov
lods
jl
jb
adc
mov
sub
xchg
xor
pusha
and
dec
pop
int
jle
fnstenv
xor
add
shl
pop
(bad)
mov
lahf
dec
inc
mov
xchg
xchg
ss
clc
out
mov
adc
aad
dec
inc
add
adc
jecxz
mov
pop
dec
jae
or
ins
dec
and
cmp
(bad)
jns
mov
out
pusha
cld
add
mov
or
sti
pop
mov
test
sub
cmc
stos
in
jno
rol
jecxz
test
push
mov
loop
ins
ss
xor
push
sti
dec
imul
xor
ds
aam
pop
outs
fiadd
bound
repnz
xchg
fiadd
sbb
not
xlat
xchg
xchg
inc
fsincos
cmp
jb
push
dec
push
shl
jle
repnz
(bad)
jmp
sti
test
and
js
int3
bound
jle
mov
inc
js
pop
sub
mov
or
adc
push
ss
mov
rcr
test
mov
push
inc
out
mov
hlt
push
xchg
xchg
adc
push
test
xor
fxtract
into
and
test
lods
out
gs
dec
mov
fisubr
or
add
fs
add
ins
int
(bad)
jmp
adc
fs
in
pcmpeqd
lds
fucomp
or
(bad)
xchg
push
aas
pop
in
mov
xchg
jmp
movs
scas
iret
shl
adc
pop
push
cmp
xchg
in
mov
mov
adc
mov
jno
lahf
fwait
stc
repz
in
loope
mov
scas
xchg
mov
nop
movs
int3
fs
mov
jno
in
pushf
pop
pop
movs
mov
sbb
cld
xor
lods
jb
push
test
jae
jmp
imul
outs
cmp
(bad)
in
pop
dec
aas
icebp
int
jo
push
out
fmulp
loopne
shr
icebp
das
inc
inc
sahf
fs
cli
ror
lock
jmp
pop
cmp
stc
ror
pop
mov
cli
jne
stc
mov
stos
adc
bound
add
xor
int
lock
cmp
mov
shl
popf
mov
inc
mov
popa
cmp
lea
pop
(bad)
dec
rcl
mov
and
mov
pop
cld
adc
scas
test
xchg
add
pop
lahf
xor
and
rol
test
xor
jne
jns
push
or
or
cmp
adc
loope
jb
scas
jecxz
jno
sub
in
adc
ins
add
int3
xor
outs
add
push
scas
cmp
jne
push
das
repz
scas
mov
mov
lods
aaa
adc
cmc
pop
inc
push
out
pop
jae
push
cmp
sub
mov
ror
je
ins
jle
or
xchg
(bad)
shl
movs
and
cmps
xchg
mov
sub
stos
cli
std
add
int3
sub
imul
cmp
jnp
and
xchg
pop
and
push
cmp
add
int
jnp
xchg
jl
aad
push
sub
out
mov
push
xchg
test
out
adc
adc
retf
fisttp
jae
xchg
mov
loope
mov
cmp
xchg
jmp
or
in
icebp
bnd
sar
mov
mov
jecxz
daa
and
xor
pushf
ja
push
out
jnp
mov
lods
lods
ja
sub
lock
icebp
dec
cmp
movs
xchg
xchg
mov
jge
nop
inc
jmp
aas
jb
mov
lock
push
or
int
sar
call
mov
xchg
cmp
mov
icebp
inc
in
add
fst
mov
retf
mov
inc
adc
stos
pusha
std
add
push
test
cld
push
cmp
(bad)
mov
mov
in
test
or
ror
sbb
jb
ss
add
xchg
lahf
adc
pop
jb
(bad)
mov
cli
call
pop
mov
clc
jns
add
or
ins
mov
popa
sub
sbb
cmps
rcl
pop
cmp
inc
in
and
and
or
ja
shl
cs
jnp
(bad)
hlt
sbb
lea
and
retf
hlt
xor
aad
pusha
shr
mov
adc
iret
and
inc
and
xchg
loop
dec
(bad)
and
das
adc
pop
mov
je
jno
fldenv
loopne
cmp
in
test
cmc
fadd
mov
enter
fnstcw
mov
xor
(bad)
pop
jecxz
clc
push
xchg
(bad)
out
mov
or
inc
movs
rol
ss
int3
mov
xchg
inc
sti
and
adc
sub
jb
push
in
add
ds
mov
idiv
and
add
out
push
sub
mov
mov
fldlg2
or
sbb
out
push
jg
nop
aad
inc
(bad)
ss
add
call
push
out
jno
jns
es
push
or
sbb
jle
push
test
mov
sahf
(bad)
or
push
mov
mov
push
xor
dec
dec
jmp
and
mov
cwde
std
aas
fld
mov
adc
gs
iret
fld
mov
cmc
xchg
mov
(bad)
das
fcomp
cld
ins
or
ffree
enter
and
mov
mov
add
psllw
jmp
adc
and
daa
(bad)
push
and
cdq
mov
cmps
xor
mov
push
pop
jae
call
mov
jmp
outs
adc
ret
iret
or
mov
jno
fdivr
(bad)
push
scas
push
inc
loope
cwde
sahf
inc
mov
sbb
and
into
fwait
repnz
cli
pop
cmp
push
aaa
(bad)
and
fwait
cmp
out
push
dec
jb
push
pop
arpl
out
test
mov
outs
or
inc
scas
sahf
cmp
pop
push
inc
mov
lods
jns
jmp
(bad)
rcr
jb
mov
lahf
ins
bound
movs
xchg
xchg
push
pop
js
stos
xchg
mov
mov
dec
jg
scas
ror
dec
cmp
stos
jns
in
sub
cmp
stos
shr
sbb
dec
mov
(bad)
ror
jb
(bad)
std
fnsave
adc
dec
adc
sub
ins
sar
shl
sti
(bad)
push
and
out
aas
push
loopne
rcr
lock
add
mov
sub
lahf
(bad)
xor
or
daa
pop
jp
jmp
(bad)
lods
fst
add
and
pop
sbb
xchg
add
addr16
(bad)
add
lods
add
popf
sbb
and
outs
bound
mov
sub
aam
push
repz
hlt
mov
test
xor
stos
mov
jp
jb
bound
push
xor
adc
call
iret
clc
jl
sti
add
xor
inc
stos
sub
inc
loopne
mov
mov
dec
not
mov
sub
repz
or
outs
sbb
jecxz
out
jmp
or
lock
mov
mov
mov
aas
and
clc
adc
std
in
pop
popf
or
push
je
mov
retf
lods
sti
mov
outs
inc
xchg
or
in
xor
jl
adc
mov
cmps
push
pop
pusha
mov
jnp
cli
sahf
dec
in
stos
pushf
jae
loope
pop
adc
or
cld
fldenv
cli
dec
xor
outs
or
push
push
mov
imul
jle
add
rol
jl
sub
iret
and
or
in
popa
outs
fisttp
inc
bound
pop
fs
jb
pop
daa
retf
and
mov
(bad)
loope
ss
test
pop
xchg
inc
pusha
jg
jne
mov
sbb
jmp
int3
dec
cmp
jne
test
pop
cmps
sbb
test
mov
mov
imul
and
and
repnz
pop
jg
fadd
inc
adc
inc
mov
aaa
shr
add
xlat
sahf
inc
out
sbb
lds
iret
out
sub
leave
jnp
push
jnp
cmp
in
push
mov
or
xor
or
add
push
cmpxchg
pop
scas
out
ja
imul
out
inc
sahf
js
cmp
(bad)
sub
mov
test
and
aas
retf
ja
(bad)
gs
mov
adc
call
jmp
mov
loopne
adc
add
repz
and
sub
jb
repz
push
adc
lahf
mov
fld
call
js
cmp
mov
out
jmp
sbb
mov
and
push
sbb
mov
add
mov
inc
cmps
and
pop
sbb
jmp
aaa
pop
in
stc
push
enter
dec
xor
inc
pop
js
dec
xor
pop
xchg
out
cmps
enter
adc
outs
mov
dec
test
xchg
or
cmps
inc
stc
pop
sub
mov
and
lahf
imul
ins
outs
mov
(bad)
mov
push
lock
arpl
jns
inc
out
cwde
add
mov
fwait
test
jmp
pushf
xor
mov
pop
mov
mov
not
push
cmc
shl
jae
cmps
test
cmp
xchg
pusha
rcr
xchg
fnstsw
call
jmp
pop
dec
xor
int
pop
add
iret
dec
xchg
mov
or
ds
push
xor
push
retf
xchg
aad
pop
fist
jmp
enter
cs
call
xor
in
add
loope
adc
shl
sahf
or
out
and
imul
jnp
jg
adc
cmps
out
mov
jmp
jge
dec
sbb
sub
lea
aam
popa
pop
int3
pop
fbstp
scas
ficomp
stos
xlat
mov
xchg
repz
jns
xchg
call
dec
add
in
push
ja
mov
into
xor
xchg
mov
mov
push
mov
dec
stos
push
sub
jae
out
sbb
dec
dec
leave
pop
mov
icebp
pop
mov
dec
iret
xor
fisttp
cmps
and
inc
sub
xor
aas
cli
loope
jecxz
sub
(bad)
dec
pop
jp
jp
and
pop
jge
mov
jmp
fist
dec
cmp
and
(bad)
fsubrp
mov
mov
repnz
imul
sub
push
int
inc
push
in
fsubr
mov
push
rcl
nop
enter
fnstsw
mov
dec
stos
push
rcl
(bad)
in
ret
(bad)
loop
sbb
push
sub
cmc
pop
mov
xor
sbb
mov
mov
out
cwde
jnp
pop
cmp
push
shr
dec
pop
and
mov
dec
mov
jl
(bad)
sar
jg
inc
add
cmc
mov
mov
mov
outs
inc
test
mov
and
and
push
dec
ja
sub
pop
adc
mov
cmp
fcom
scas
jnp
fild
push
mov
test
inc
mov
dec
push
hlt
and
add
imul
mov
loop
xor
cwde
pusha
mov
cmp
sahf
xlat
push
ins
dec
ins
mov
jle
std
jns
pusha
and
and
jae
lea
ins
cmp
push
mov
jo
adc
mov
xchg
xchg
adc
(bad)
hlt
or
es
pop
mov
out
comiss
cmps
adc
pop
std
mov
ss
movs
cmp
imul
sbb
lahf
pusha
mov
pop
inc
lock
mov
push
xchg
xchg
popa
fild
or
jae
jle
shl
ror
(bad)
dec
or
add
add
add
xor
mov
shl
inc
repnz
push
(bad)
lahf
cmp
push
in
stos
xchg
add
in
inc
aam
fisub
(bad)
and
add
scas
pop
xor
push
push
repnz
loopne
adc
iret
pop
push
xchg
imul
shl
daa
or
movs
add
inc
adc
inc
mov
lods
das
push
es
jae
fs
or
push
ins
fist
jle
inc
ss
stc
inc
repnz
loop
dec
inc
mov
mov
adc
hlt
loopne
jle
pop
(bad)
outs
je
data16
inc
sar
jns
hlt
dec
cdq
in
call
scas
inc
or
and
lock
data16
daa
and
push
addr16
pop
fistp
mov
cli
fld
xchg
dec
pop
lea
(bad)
arpl
in
dec
xchg
div
cmps
lahf
scas
add
stc
loope
jns
(bad)
push
push
inc
and
cmp
pop
push
cmps
jge
repz
icebp
pop
dec
inc
fstp
scas
in
pop
shr
xchg
popa
das
push
dec
adc
outs
jmp
cmps
sbb
push
movs
div
add
pop
pop
push
sub
and
retf
rcr
mov
outs
mov
(bad)
retf
ds
jne
xchg
outs
(bad)
adc
enter
loope
call
or
xchg
mov
div
mov
test
cmps
test
jae
clc
add
es
(bad)
push
mov
jns
retf
iret
fwait
jge
sub
sub
xchg
sub
xchg
inc
xchg
mov
lahf
mov
jl
inc
popf
daa
add
sub
pop
loop
daa
mov
ss
cmp
fsub
daa
xchg
stos
dec
adc
xor
inc
pop
das
mov
sbb
mov
mov
push
push
xor
push
stos
cmp
call
or
fcmovnu
jge
cmp
mov
outs
xchg
ror
sahf
pop
rol
jmp
cmp
movs
sbb
adc
add
push
jbe
iret
xor
icebp
jge
idiv
xchg
es
pop
mov
es
mov
mov
shl
mov
enter
add
xor
jmp
mov
push
adc
pop
retf
push
add
(bad)
xchg
jae
dec
lea
xchg
les
pop
fs
cmc
jmp
fisttp
add
and
xchg
jno
pushf
icebp
call
mov
dec
inc
in
and
push
outs
in
push
mov
xchg
jmp
push
(bad)
jge
lods
nop
xchg
stc
jmp
dec
imul
in
push
jb
popf
cwde
adc
mov
mov
and
mov
push
push
movs
cmp
out
sti
push
(bad)
and
xchg
and
imul
adc
fs
xor
or
sub
cmp
ds
mov
and
fcomp
retf
xchg
mov
(bad)
mov
jmp
inc
scas
les
jl
sub
mov
sub
ret
push
mov
cmp
pushf
loop
add
mov
adc
fmul
in
loope
cmp
imul
mov
ins
push
dec
ins
pop
shl
mov
adc
cdq
xchg
xor
dec
add
inc
(bad)
enter
jg
sti
sub
mov
(bad)
(bad)
rcr
nop
cmp
xor
ds
adc
xchg
ins
push
(bad)
adc
jne
or
push
bound
mov
dec
sbb
sub
push
test
fisttp
call
add
iret
popf
inc
cli
sar
or
jmp
in
ret
ret
(bad)
cld
fadd
pop
les
sbb
clc
sub
scas
movs
mov
aad
(bad)
mov
push
rcl
inc
stos
(bad)
in
inc
ds
inc
out
imul
pop
xchg
outs
push
cmp
push
sbb
pop
arpl
in
push
ret
push
ret
sbb
mov
out
jbe
xor
fisub
sub
stc
repnz
xor
or
and
cwde
call
sti
xchg
cmps
xor
mov
sub
pop
add
sbb
jnp
jmp
sbb
xchg
or
sub
or
mov
pushf
xor
xor
pop
mov
mov
lds
adc
out
loopne
sahf
xchg
fnsave
cmp
push
cs
sbb
dec
jge
add
and
xchg
xor
jmp
jne
inc
retf
inc
xchg
lahf
xchg
in
fst
scas
mov
jp
pop
adc
das
pusha
test
xlat
out
jl
out
or
mov
lds
or
push
inc
ins
adc
sbb
aas
sub
add
fwait
movs
inc
xor
es
dec
push
dec
push
stc
mov
pop
hlt
adc
out
(bad)
fs
cmp
mov
mov
push
iret
stos
jae
(bad)
loopne
iret
fwait
test
xchg
sbb
aas
jge
push
(bad)
mov
(bad)
pop
mov
mov
and
jmp
inc
std
out
jge
pop
jl
lods
popa
add
xchg
inc
cmp
sbb
sub
repz
inc
fwait
in
and
in
into
adc
mov
mov
loope
push
sub
les
popa
xor
inc
pop
stc
mov
add
or
xchg
add
xor
mov
sub
and
jmp
fcom
dec
xchg
mov
gs
lea
mul
les
jnp
and
fcomi
mov
aad
cli
fldcw
pop
aam
mov
pop
xor
outs
(bad)
std
sahf
xor
loope
push
(bad)
xchg
jno
nop
pop
push
fisttp
or
mov
aaa
lods
pop
push
mov
out
jmp
cs
scas
pop
inc
pop
arpl
stos
bound
scas
and
inc
cmp
add
inc
ja
xchg
test
cmp
in
sti
test
mov
ficom
mov
mov
push
mov
mov
mov
cwde
mov
mov
(bad)
hlt
(bad)
adc
cli
dec
xor
cmp
sbb
mov
inc
stos
stos
xchg
js
add
pusha
es
in
jnp
std
xor
bound
call
fwait
imul
test
adc
xchg
jle
call
or
dec
aaa
mov
or
sub
into
lock
enter
add
scas
cmps
cdq
jp
xor
sub
test
stc
nop
dec
cdq
scas
ret
push
lea
jl
adc
daa
inc
daa
cmc
repnz
push
repz
test
ret
cmps
cmp
inc
mov
icebp
scas
in
pop
ret
xadd
repnz
pop
loop
test
inc
mov
sbb
call
inc
iret
and
sub
stos
imul
loope
in
scas
add
fs
or
fadd
mov
(bad)
daa
mov
stos
xchg
stos
cmps
mov
aas
xchg
sub
xchg
inc
add
and
jmp
xchg
mov
mov
movs
inc
lods
jo
retf
jecxz
sbb
add
mov
cmp
jp
dec
ficomp
aas
test
xor
adc
jnp
inc
repnz
add
xchg
int3
jmp
xchg
or
into
sbb
push
aam
test
fsubr
popf
repz
push
sub
push
in
test
(bad)
xchg
inc
popa
push
aaa
sbb
frstor
jb
dec
lock
scas
mov
add
les
mov
mov
mov
aam
jmp
stos
dec
xor
cmc
adc
pop
stos
jo
sbb
sbb
test
mov
(bad)
jne
cld
outs
rcr
inc
pop
jo
xor
sub
int3
inc
out
or
and
loop
mov
inc
idiv
ja
inc
repz
scas
daa
imul
retf
cld
dec
mov
sub
pop
(bad)
push
cwde
jb
pop
and
pop
lods
mov
jecxz
mov
cmp
sbb
sub
loope
out
ja
sub
jbe
cmp
push
inc
test
and
popf
bound
popf
outs
movs
xor
mov
in
push
in
push
imul
mov
test
imul
push
loop
das
lahf
(bad)
fucom
inc
fcom
rcr
(bad)
loopne
jecxz
or
add
inc
xchg
sbb
jmp
test
jae
push
xchg
mov
cmps
push
aam
xchg
add
icebp
mov
xchg
ins
lea
mov
adc
adc
in
jl
jbe
imul
das
push
cwde
xor
mov
jb
inc
sbb
sbb
inc
scas
into
and
jecxz
ja
(bad)
push
retf
sar
pop
icebp
cmp
push
push
pop
icebp
sub
push
sbb
fisttp
into
fisubr
pop
xchg
mov
pop
movs
sbb
adc
nop
cmp
loopne
jne
and
aad
cmps
imul
sbb
out
jns
es
xchg
dec
adc
cmp
outs
retf
(bad)
jle
mov
loope
xchg
js
retf
mov
retf
mov
pop
(bad)
(bad)
cmp
call
or
push
scas
add
cwde
lahf
cwde
add
call
jle
rol
dec
fsub
out
jmp
call
mov
das
fdiv
xlat
xchg
shr
imul
(bad)
jp
inc
in
mov
lds
or
mov
(bad)
int3
jne
push
stos
mov
xor
mov
jle
sub
push
push
(bad)
fidiv
outs
dec
das
sbb
sbb
cmc
(bad)
dec
mov
dec
or
pop
fwait
lock
inc
push
add
dec
stc
cmp
adc
mov
js
test
aad
enter
(bad)
jnp
or
out
jmp
cmp
lods
ret
push
sar
or
inc
movd
push
sub
pushf
mov
inc
fidivr
out
lods
adc
dec
jecxz
cld
add
fwait
cmp
inc
lock
add
jmp
pop
jmp
fdivr
pop
cmps
nop
sub
dec
ror
lock
ret
jg
(bad)
mov
jl
sub
xor
movs
inc
fst
pop
lods
xlat
test
sbb
dec
fmul
mov
sar
into
cdq
adc
pop
push
jmp
push
adc
pop
stc
pop
imul
leave
dec
arpl
aaa
or
sahf
xchg
mov
sbb
stos
ret
cdq
scas
fld
push
mov
add
jns
cmps
and
add
fs
jne
xchg
test
push
xor
sbb
mov
(bad)
ins
jne
cs
in
and
sti
sub
mov
ret
push
sub
sahf
stos
icebp
pop
jno
sti
test
pop
popf
xor
inc
aam
push
push
pop
jno
xlat
dec
pop
push
dec
lahf
(bad)
cli
xchg
(bad)
repz
nop
add
push
mov
mov
mov
sub
div
(bad)
int
mov
or
stos
and
sub
xchg
shl
sub
mov
sub
jl
xlat
mov
and
mov
fcmovne
in
lods
inc
cmp
inc
xchg
jl
popf
popa
aam
adc
lods
mov
(bad)
lock
bound
out
outs
or
arpl
loopne
pop
idiv
shl
jp
jbe
movups
xor
fs
sahf
icebp
sbb
in
aas
movs
ret
mov
rcl
stos
inc
(bad)
push
rcr
xor
jmp
inc
(bad)
xlat
jno
movs
clc
pushf
call
bound
cmps
mov
jle
(bad)
addr16
sub
mov
es
inc
out
xchg
cwde
retf
pop
sbb
mov
clc
mov
xlat
add
mov
enter
jae
add
push
std
mov
sbb
and
mov
push
bound
or
xlat
sbb
scas
retf
test
scas
add
xchg
or
scas
fistp
lock
fsub
push
jp
xchg
mov
out
(bad)
jle
push
(bad)
sub
outs
dec
sbb
xor
fisubr
cmp
ins
stc
jp
pop
ins
je
push
scas
sti
call
enter
test
mov
mov
clc
movs
sub
xor
cmp
add
int
popf
dec
call
arpl
adc
dec
xor
sbb
sahf
jne
sbb
test
jmp
dec
shr
push
xor
lods
mov
jecxz
cmp
les
or
cmp
sub
dec
mov
push
icebp
lahf
rcl
lods
fist
out
cli
or
mov
jno
xor
scas
loop
xchg
xor
enter
inc
jno
repnz
fcmovne
in
xchg
das
call
in
xchg
mov
scas
and
in
cvtps2pd
mul
pop
aas
rol
xchg
popf
mov
in
inc
push
sar
std
jmp
jo
ja
xor
and
cwde
les
adc
pop
aam
jp
cli
fiadd
adc
cmp
xor
aaa
ret
pop
dec
jl
movs
sbb
cmp
and
push
and
lods
and
enter
int
pop
mov
movs
out
dec
scas
push
mov
cmp
adc
mov
sbb
imul
inc
lods
dec
loope
cld
loope
mov
clc
scas
stc
ret
aam
and
test
clc
fstp
mov
(bad)
jle
dec
out
pop
jno
xor
mov
xchg
jmp
dec
dec
test
jns
push
rcr
or
pop
sahf
push
xor
dec
xor
jg
inc
movs
jp
inc
push
jmp
pop
sub
fiadd
xor
pop
adc
dec
ds
push
repz
iret
aaa
mov
ss
xlat
xchg
test
dec
dec
test
cmp
cmp
icebp
mul
out
xlat
xor
dec
mov
xchg
loope
leave
lods
sub
pop
retf
and
ficom
and
(bad)
cmp
xor
sub
lock
(bad)
cmp
or
xchg
add
push
mov
call
lods
aaa
shr
int
cmp
sar
and
movs
call
mov
mov
adc
and
out
mov
add
add
add
pop
jp
(bad)
and
movs
xchg
iret
sbb
push
ja
push
inc
retf
mov
push
jl
mov
adc
aam
fbld
es
pop
in
(bad)
jo
push
pop
dec
xor
mov
sub
sub
loop
jno
test
mov
xor
rol
fcmovb
cmp
mov
sbb
cs
mov
sub
push
aaa
sub
(bad)
cmps
dec
dec
fld
stos
mov
mov
push
fistp
dec
popa
hlt
lods
ss
jns
xchg
or
movs
cld
in
scas
sbb
stos
out
imul
mov
out
sbb
fisttp
ds
out
sub
xchg
pop
pop
or
inc
rcr
pop
icebp
xor
jb
sub
ficomp
stos
cmps
ds
aad
xchg
dec
aad
aaa
in
mov
adc
adc
jmp
call
es
mov
test
cmps
sahf
idiv
stc
push
movs
cmp
outs
sbb
sub
test
cmp
gs
(bad)
data16
cdq
xchg
and
addr16
push
(bad)
mov
cmp
scas
mov
pop
adc
add
lea
jl
adc
call
ja
outs
icebp
inc
cmps
add
rcl
xchg
lods
adc
vmovdqu
(bad)
pop
adc
xor
in
call
imul
and
js
pop
mov
pushf
int
and
jecxz
push
mov
loop
cmp
sub
(bad)
cdq
adc
in
cmp
jns
pop
fcomp
mov
mov
sub
mov
inc
mov
cmp
jecxz
sar
xor
or
jmp
sub
in
pop
dec
cmp
mov
sub
stos
ret
inc
jae
push
sti
mov
mov
mov
cmps
push
shr
loop
push
sub
scas
mov
loope
nop
addr16
mov
add
pop
adc
les
hlt
cmps
test
push
hlt
ds
push
add
mov
sub
inc
jge
sub
push
pop
test
ret
dec
xchg
add
xor
out
inc
sub
add
jae
enter
or
call
or
push
inc
cmp
std
push
sahf
ds
(bad)
add
aas
mov
sar
rcl
inc
push
in
add
mov
mov
pop
into
lods
jo
push
inc
push
add
xchg
jmp
loop
xchg
in
mov
arpl
sub
add
stos
cmp
pop
jbe
movs
stos
cld
dec
xor
sub
fsub
and
imul
loope
inc
sbb
adc
aaa
fist
pop
inc
cwde
mov
xchg
retf
out
mov
pop
mov
movs
adc
fdivrp
xor
mov
in
jb
ret
sub
inc
dec
or
in
mov
xor
stos
fnsave
out
repnz
sub
or
or
xchg
test
mov
add
popa
aaa
mov
inc
mov
cmp
xchg
ds
(bad)
pop
xor
(bad)
lods
jae
ja
xchg
rcl
lahf
ins
ins
xlat
dec
pop
jle
cmp
pop
icebp
pushf
outs
ins
js
sbb
retf
movs
in
mov
pop
mov
movs
add
add
xchg
push
dec
cs
sbb
dec
pop
call
push
das
sahf
adc
pop
idiv
mov
stc
add
(bad)
adc
imul
sbb
add
dec
mov
sub
jmp
add
cmp
mov
std
lock
cli
icebp
loop
xor
xchg
sub
call
xchg
(bad)
sbb
cmps
(bad)
jae
(bad)
je
out
push
jecxz
js
sbb
(bad)
cdq
shr
int
mov
test
dec
pop
xchg
or
test
lock
out
cmp
push
adc
loopne
mov
inc
mov
repnz
xor
mov
sub
jp
leave
and
out
cmp
rol
setb
fwait
adc
xchg
data16
push
(bad)
add
imul
ret
loop
test
ror
inc
xchg
jae
aas
add
and
out
int
and
popf
sbb
test
aas
jmp
pop
clc
xchg
jb
or
sub
rcr
repnz
pop
jae
push
outs
into
or
pop
mov
imul
mov
(bad)
xor
push
jb
push
sbb
mov
icebp
mov
imul
aas
movs
adc
push
pop
cmp
fwait
push
sbb
fstp
xchg
inc
rcl
stc
ins
rol
das
push
psubusb
jp
test
sub
add
scas
out
sahf
pop
sar
leave
gs
mov
mov
mov
into
xor
aaa
sub
and
jnp
inc
jns
jmp
sub
mov
pop
adc
fisttp
(bad)
xchg
mov
jns
and
xor
popa
mov
sbb
movs
sbb
mov
sbb
dec
push
mov
scas
jmp
popf
push
xor
in
fiadd
cs
mov
xchg
xor
sti
sub
jno
mov
inc
sti
sar
mov
cmp
push
push
mov
pop
das
(bad)
gs
push
mov
sub
jmp
and
pop
repz
sub
dec
adc
push
mov
mov
pusha
retf
mov
out
test
jb
clc
rol
sub
jmp
sbb
cwde
fcomp
add
mov
push
sub
mov
out
push
push
xor
bound
push
repz
sub
mov
add
xor
dec
mov
inc
mov
and
or
ret
xor
(bad)
or
test
ja
fisttp
add
jl
or
aad
imul
inc
cdq
xor
in
out
loop
loop
scas
mov
dec
jb
pop
outs
mov
cli
jmp
repnz
inc
jle
push
pop
test
mov
pop
stos
push
add
xor
in
idiv
xor
arpl
call
into
sahf
outs
rcl
pop
and
ret
jno
int3
push
dec
mov
int
mov
cmp
dec
call
xor
es
adc
in
xor
out
test
lods
push
mov
xor
repnz
pusha
and
push
jecxz
jmp
pusha
and
imul
jo
daa
xor
push
or
xchg
xchg
cld
xchg
xchg
jne
sbb
int
pop
daa
ror
mov
popa
and
fs
std
xchg
xchg
sub
popf
clc
mov
xor
jp
sbb
push
pop
or
(bad)
xor
dec
and
jmp
ds
xlat
jge
jo
sub
cld
cdq
sbb
jecxz
dec
fstcw
sbb
cmps
sbb
arpl
lock
cwde
call
jmp
ud0
mov
stos
mov
and
sbb
inc
push
jns
shl
imul
shr
xor
rcr
cs
repz
mov
cmp
mov
es
mov
pop
xchg
mov
xchg
repnz
aam
inc
sbb
out
inc
pop
imul
cmp
ss
cmps
xchg
mov
pushf
adc
icebp
daa
sbb
xchg
lods
xor
pop
int
pushf
int
sbb
pop
pop
add
push
pop
dec
pop
(bad)
in
xchg
jle
ins
fild
mov
mov
push
cwde
retf
popf
or
add
pop
inc
jbe
pusha
mov
into
shr
pop
int
pop
jns
out
sub
(bad)
xchg
movs
xchg
or
in
and
xor
dec
jmp
and
repnz
jbe
mov
or
neg
test
scas
or
jg
jbe
repz
ja
scas
dec
mov
mov
adc
xchg
int
retf
call
sub
jns
inc
xchg
cmp
(bad)
ret
jp
leave
cmc
add
pushf
ins
jmp
cmp
adc
mov
jo
sbb
fdivr
mov
loope
and
pop
pop
mov
and
sar
cmp
inc
(bad)
xor
addr16
adc
pop
loop
jg
and
addr16
les
ins
cwde
mov
mov
jae
mov
pop
ret
addr16
jl
xchg
pop
test
sub
and
out
int3
xchg
es
mov
adc
sar
sub
adc
mov
sub
inc
dec
pop
ds
cs
and
lods
mov
pop
out
imul
pop
xchg
cld
shl
xor
mov
or
mov
pusha
fld
xchg
mov
push
pushf
adc
pop
inc
fild
jl
pop
movs
jne
rol
mov
dec
inc
mov
xchg
xchg
xchg
sub
jne
jmp
in
mov
push
dec
cmp
xchg
aas
jb
adc
sbb
es
popf
js
jge
add
scas
sub
push
jge
push
les
push
cmc
mov
add
mov
gs
mov
pushf
mov
(bad)
and
sbb
enter
mov
into
cmp
scas
and
jle
out
xor
xor
shl
xchg
cmp
ret
leave
cmp
jae
clc
out
sub
and
dec
call
inc
xchg
cmps
daa
pop
pcmpeqb
sar
add
mov
dec
cmp
sar
adc
mov
sub
inc
mov
dec
inc
sahf
push
cwde
push
clc
push
hlt
add
add
mov
push
gs
xchg
jno
int3
shr
in
inc
in
pop
inc
mov
fisubr
push
scas
mov
add
mov
fst
int
sbb
and
xchg
pop
cli
pop
cmps
in
in
int
dec
jmp
call
or
mov
cwde
lea
fcomp
aad
(bad)
les
repz
or
inc
jp
out
mov
mov
jno
sahf
sbb
xor
cdq
add
xchg
sbb
dec
push
pop
(bad)
movs
or
lahf
xchg
or
adc
cs
std
shl
add
xchg
inc
add
xchg
ss
push
jecxz
mov
loope
mov
icebp
sbb
lods
mov
outs
fcmovu
fcomp
mov
cli
push
mov
out
lahf
dec
sub
push
sbb
aam
xor
rol
lahf
mov
push
mov
mov
retf
rcr
or
jo
cmps
xor
jne
sub
int3
pop
sub
cmovne
call
jbe
jne
loopne
(bad)
popf
mov
dec
fnstsw
xor
jns
loopne
add
xchg
mov
add
lock
jnp
imul
aam
or
push
mov
cmp
cli
pop
dec
scas
iret
jbe
sbb
jae
cli
pop
mov
push
pop
inc
fdivr
cmp
push
retf
xor
mov
add
or
loopne
retf
mov
jae
(bad)
movs
mov
xor
adc
push
in
or
inc
cli
inc
adc
out
cdq
xchg
jne
leave
jecxz
aas
(bad)
hlt
pushf
dec
dec
sbb
xchg
push
adc
movs
(bad)
es
mov
fsub
adc
scas
add
fnstenv
push
mov
jecxz
mov
std
cwde
mov
xchg
dec
stos
stc
in
mov
int3
mov
cmps
test
push
mov
dec
test
add
rcr
pop
jnp
fist
and
shr
sbb
push
ins
sar
mov
push
fstp
pop
push
ins
aam
scas
jle
js
shl
shr
mov
mov
test
mov
loope
ins
add
xchg
pop
pop
cmp
gs
sbb
jg
fwait
(bad)
jnp
fild
mov
imul
mov
dec
popf
push
xchg
(bad)
push
inc
and
imul
cli
ror
scas
mov
mov
push
sbb
cmp
xor
jne
pop
ret
(bad)
cmps
sub
jl
inc
aaa
sbb
or
loope
jo
test
push
dec
bound
ficomp
in
ror
sub
pop
shl
push
outs
fisttp
retf
xchg
hlt
pushf
jle
loopne
cmp
bound
sub
fistp
sbb
lods
sbb
call
cmp
cdq
or
das
dec
pop
sbb
test
inc
mov
dec
cmp
jle
xor
(bad)
push
in
mov
adc
push
cmc
sbb
out
jp
and
pmulhw
scas
or
mov
inc
sub
mov
aad
xor
dec
mov
out
loop
test
aam
mov
xchg
loope
mov
jl
(bad)
mov
dec
dec
sbb
imul
cmp
dec
fidivr
std
imul
push
push
test
add
scas
or
sub
test
mov
and
pusha
sbb
cmp
xor
jbe
inc
push
xor
test
inc
add
movs
aaa
pop
dec
inc
jns
enter
xor
mov
jns
xchg
ins
or
mov
stc
mov
dec
mov
ins
pop
adc
mov
test
sbb
cmps
inc
int3
mov
fwait
dec
mov
dec
mov
or
pushf
pop
icebp
xchg
or
mov
and
popa
sub
mov
scas
out
aas
movs
push
retf
push
mov
and
push
nop
inc
pusha
jb
mov
stos
xchg
mov
cmp
cmc
or
mov
add
das
jmp
pop
pop
jbe
cmc
or
sti
sub
test
out
jno
mov
jp
jmp
dec
push
pop
fimul
pop
(bad)
push
jp
fild
imul
xchg
fst
and
out
mov
sbb
xchg
or
push
sti
je
xchg
jecxz
xor
push
push
dec
das
cmp
std
push
xor
jno
dec
mov
dec
add
in
into
xchg
das
pop
jg
mov
das
imul
retf
inc
shl
ss
cdq
mov
addr16
cmp
pop
jp
cmps
mul
mov
clc
cmp
std
push
sub
or
jno
lds
stc
sbb
in
push
sti
int
outs
and
jl
test
jg
mov
addr16
clc
shl
cmc
adc
add
sub
cmps
dec
adc
or
shr
imul
movs
inc
push
repz
bound
enter
push
jmp
dec
mov
movs
jg
or
pop
sbb
cld
outs
mov
in
cmp
xchg
adc
repnz
or
cs
ja
mov
push
mov
int
mov
in
outs
inc
lahf
jmp
mov
or
cmps
aas
stos
pop
xchg
shl
add
pop
jne
or
inc
sub
gs
lahf
lods
sbb
in
cdq
sbb
jne
les
mov
add
jb
or
mov
push
and
jns
retf
cmp
fs
les
jmp
mov
call
rol
pop
jl
jge
iret
add
mov
and
pop
push
test
in
pop
mov
push
mov
sub
ins
cmp
fbld
push
movs
dec
dec
and
lea
sub
aaa
iret
and
movs
sub
popa
dec
mov
rcl
add
jge
dec
xchg
jo
ret
aam
in
mov
push
push
(bad)
and
gs
mov
push
sti
mov
loop
stos
(bad)
das
hlt
test
cmc
mov
xchg
jne
mov
stos
jns
(bad)
pop
into
mov
sbb
pop
mov
in
xchg
shl
cs
(bad)
mov
push
push
jmp
sub
jmp
or
test
fs
jp
test
arpl
les
xchg
dec
call
jle
mov
jo
(bad)
rol
popf
cmp
cli
cmp
xchg
std
fs
(bad)
adc
or
(bad)
hlt
push
push
add
pop
cdq
mov
inc
fisttp
sar
hlt
ror
scas
jbe
cmp
aad
sub
cld
dec
mov
(bad)
jl
jnp
les
lock
aas
loope
inc
sub
jmp
outs
pop
and
adc
push
out
sbb
test
or
inc
push
test
stc
push
mov
xor
cs
sbb
cmps
push
rcr
in
or
movs
fnstcw
mov
add
adc
adc
fidiv
sbb
add
mov
pop
mov
xor
jp
or
fucom
jae
mov
adc
(bad)
addr16
es
aas
sbb
sub
xchg
or
sub
jne
mov
xchg
jmp
xor
add
push
mov
jmp
inc
dec
inc
pop
(bad)
stc
sbb
retf
adc
push
dec
mov
jae
jae
into
and
into
inc
sub
cdq
lahf
sub
sbb
push
sub
pop
into
inc
jo
cmp
cs
pop
mov
or
and
mov
push
aam
pop
sahf
shr
dec
js
sti
(bad)
sbb
xor
fsub
movs
ja
pop
out
sbb
retf
aam
fmul
cmp
in
test
mov
mov
inc
dec
fs
mov
push
shl
fwait
cmp
push
jae
or
or
addr16
or
mov
bound
mov
push
push
inc
(bad)
in
xchg
xchg
out
and
or
in
xlat
adc
in
sbb
hlt
mov
push
sub
fdiv
jbe
sbb
fcom
les
fisub
sub
push
pusha
xchg
sbb
lds
inc
in
xchg
test
mov
push
or
push
xchg
inc
loope
sub
sar
add
pop
(bad)
mov
adc
xor
dec
push
popa
call
js
push
pop
dec
jmp
js
adc
test
addr16
(bad)
icebp
jp
sub
lods
push
jmp
outs
bnd
out
push
lods
xor
dec
sahf
shl
add
out
(bad)
cmp
push
fdivr
imul
movs
xchg
dec
mov
cmp
stos
loopne
(bad)
stos
xchg
adc
add
fwait
mov
fisttp
loope
jecxz
mov
xchg
add
mov
inc
mov
pop
in
mov
aaa
out
xor
imul
xchg
mov
sar
push
loopne
jnp
dec
dec
xchg
push
sbb
jae
push
outs
xor
jmp
syscall
or
test
xor
push
loopne
adc
in
mov
push
test
inc
xchg
lods
leave
loope
cmp
pop
and
xor
ret
fs
mov
into
int
add
stos
out
dec
out
call
jmp
cmp
jp
jo
mov
sar
jge
jecxz
pusha
div
icebp
cmp
test
in
push
les
ffreep
sub
gs
jno
or
sbb
(bad)
outs
in
push
sbb
sbb
push
pop
mov
in
xor
and
push
cmp
adc
sub
xchg
inc
mov
ds
fbld
push
sub
xchg
into
mov
or
in
pushf
aas
(bad)
add
int3
call
push
call
mov
mov
and
xchg
shl
mov
push
or
xchg
push
outs
popa
fdivr
push
pop
jmp
and
push
cmp
cmps
call
(bad)
jmp
retf
jp
stos
and
jbe
xor
mov
adc
mov
into
out
jg
nop
jp
(bad)
dec
xchg
mov
jno
in
sbb
div
sbb
pop
in
ds
add
jbe
inc
xchg
mov
jmp
or
cmp
or
cdq
xchg
pinsrw
sbb
cwde
or
ds
repnz
mov
add
(bad)
xor
std
test
ret
sub
add
jbe
ja
cmp
jle
fwait
cmc
nop
jae
div
mov
cmp
fisubr
or
rcr
adc
sub
mov
stos
or
mov
in
(bad)
jmp
cmps
sub
adc
xor
add
in
pop
push
sbb
mov
das
out
(bad)
xor
xchg
mov
(bad)
stc
inc
mov
js
xchg
loopne
push
es
push
sbb
xor
pop
scas
call
aas
popa
fcmovu
and
jl
(bad)
loopne
mov
xor
sub
push
fstp
aad
(bad)
into
ins
xor
push
adc
outs
lahf
cmc
retf
cmp
aad
xchg
retf
cwde
cs
sub
mov
mov
aas
ins
jnp
nop
into
repz
sbb
das
mov
cmp
fsub
cmp
sbb
mov
js
dec
gs
in
jae
rol
push
test
mov
arpl
mov
dec
xchg
cmp
lds
rol
or
dec
push
and
xchg
add
inc
pop
loop
mov
int
cmp
add
aas
cmp
loop
fsub
pusha
pushf
xchg
movs
mov
rol
add
push
imul
out
das
lods
or
(bad)
pop
dec
xchg
push
cdq
sbb
mov
(bad)
mov
cmp
and
xchg
dec
xchg
rol
mov
out
dec
push
imul
pop
pop
imul
popa
jns
xor
pop
dec
push
mov
mov
xchg
outs
fld
jbe
ret
push
stc
and
jmp
mov
sub
fnstenv
ja
(bad)
push
sub
xor
xchg
mov
mov
shl
lods
hlt
mov
(bad)
adc
ja
(bad)
stos
cwde
ins
mov
adc
mov
inc
(bad)
dec
dec
std
pop
jno
lods
sbb
pop
lahf
jo
add
stc
mov
neg
mov
(bad)
aam
lds
xchg
push
add
adc
outs
in
and
mov
hlt
xor
std
sub
adc
ds
inc
pop
popw
lahf
lock
(bad)
in
sub
xchg
stos
dec
cmp
xor
sti
aad
js
add
test
ins
(bad)
out
sub
sbb
outs
out
popf
sti
scas
call
pop
and
fld
loop
out
bound
test
sahf
call
popf
sbb
add
mov
xchg
push
add
ret
pop
popa
pop
xchg
mov
stc
inc
sti
mov
ds
push
jmp
xor
adc
je
inc
nop
out
sub
mov
mov
sahf
daa
fnstcw
and
add
idiv
add
in
rcr
loop
pop
sub
pop
adc
mul
fwait
iret
adc
sbb
or
mov
inc
add
wbinvd
call
adc
pop
loopne
inc
enter
xor
inc
cmp
mov
popa
xchg
sbb
ret
jecxz
bnd
push
sbb
add
clc
jb
mov
clc
mov
jnp
jnp
int
sub
scas
sbb
add
gs
cmp
inc
push
mov
fiadd
fldenv
pop
shl
jmp
sub
cmc
scas
push
add
fstp
xor
or
gs
jp
mov
out
dec
dec
icebp
push
or
mov
xor
xor
js
dec
pop
rol
ss
retf
sub
das
out
mov
leave
add
aam
xor
mov
mov
ja
pop
mov
mov
test
mov
mov
fnstenv
and
inc
ror
jl
jnp
push
inc
lahf
mov
add
cld
sub
jmp
sub
jbe
inc
pop
xchg
div
mov
loope
adc
js
xor
inc
sub
xchg
pusha
xchg
ret
mov
sbb
gs
fild
xchg
(bad)
jnp
pusha
in
je
pusha
push
gs
jbe
mov
sub
loope
call
mov
add
shl
mov
test
push
jl
cmp
cdq
popf
shl
pop
fst
sub
adc
ffreep
jno
mov
pop
and
or
mov
and
inc
inc
pop
cli
xor
test
cmp
cwde
push
pop
jno
cmp
add
jg
push
dec
(bad)
ss
add
adc
test
stos
push
les
cmp
clc
mov
scas
std
mov
sbb
ror
call
loopne
arpl
sub
jae
mov
add
xlat
xor
push
add
outs
mov
into
in
push
jle
pop
jo
xor
sub
mov
stc
pop
xchg
xchg
test
inc
and
in
(bad)
xor
stos
cmps
adc
push
xchg
(bad)
jbe
into
xchg
out
scas
pop
xor
ds
test
jbe
sbb
hlt
mov
mov
aad
or
call
popa
mov
jno
inc
dec
sub
adc
enter
inc
call
test
lods
push
fild
aam
pushf
fabs
fs
xchg
ret
in
mov
jno
aaa
in
loop
fidiv
lea
into
cli
cmp
int3
xchg
out
fisttp
mov
(bad)
(bad)
je
jmp
ret
mov
cmp
aam
jmp
cld
out
xchg
lods
mov
fwait
pop
cmp
jnp
mov
mov
fisub
mov
or
push
mov
or
cs
ror
popa
mov
and
xor
lods
jmp
or
data16
std
ins
(bad)
jmp
or
xor
adc
aas
push
test
or
lahf
adc
fs
ret
popf
inc
ss
sti
and
in
ret
xchg
imul
sbb
lea
xchg
jge
aaa
push
mov
cmp
pop
pop
inc
pop
mov
and
cmp
and
jno
out
or
mov
sub
xor
jbe
das
test
outs
cdq
sbb
stc
jbe
cmp
rol
cwde
out
ins
cwde
mov
xchg
outs
lahf
inc
das
add
repnz
inc
pop
xchg
and
sbb
mov
clc
sub
xor
or
mov
mov
adc
sub
cmp
jb
call
xor
inc
adc
mov
inc
aas
mov
sub
sbb
xchg
mov
enter
in
or
sbb
adc
jp
inc
xchg
retf
add
sub
mov
jb
mov
ja
pop
pop
and
sahf
(bad)
jp
je
xchg
outs
sbb
or
jl
pop
sbb
xchg
mov
and
cmps
sbb
lock
xchg
mov
sub
and
mov
xchg
mov
xor
and
cmps
sub
xor
test
out
mov
dec
mov
xor
jg
sub
cmp
movs
and
jge
xchg
mov
ins
(bad)
stos
ret
pop
in
inc
or
into
in
stc
dec
int3
ins
out
dec
inc
fs
nop
lods
mov
ret
xchg
pushf
xchg
shl
pop
in
xchg
int3
stc
lock
xor
out
rcl
add
push
(bad)
or
mov
sub
cmc
mov
hlt
into
cmp
mov
mov
cli
or
pop
js
popa
or
scas
in
ins
(bad)
lods
repnz
les
adc
pop
and
or
mov
add
jns
scas
cwde
ins
iret
jp
mov
and
scas
add
je
repz
addr16
xchg
inc
movs
push
jns
or
and
sbb
jle
dec
gs
and
fisub
mov
and
inc
xchg
adc
in
push
in
cmp
cmp
dec
cs
arpl
xor
xchg
test
push
xchg
cmp
ins
sbb
sbb
mov
mov
ret
jge
jae
in
ret
mov
inc
mov
push
mov
sbb
jmp
mov
das
shr
mov
sti
cld
xor
or
push
add
cmps
lock
fstp
outs
cld
inc
or
pop
or
pop
xor
leave
or
dec
nop
pop
shl
fnstcw
(bad)
repnz
sub
test
adc
fwait
dec
nop
jmp
jne
mov
pop
in
int3
retf
xor
fwait
lods
adc
cli
mov
fcom
div
and
and
xchg
int3
jl
mov
add
das
pop
fist
cmp
mov
push
fist
inc
mov
push
in
jmp
out
dec
(bad)
xor
cmp
or
idiv
xchg
aaa
dec
(bad)
sbb
mov
retf
pop
bound
push
or
xor
mov
sbb
xchg
retf
mov
push
pusha
cmc
sub
call
loopne
fucom
out
pop
sbb
or
pop
dec
pusha
push
inc
mov
scas
cwde
inc
outs
test
jo
mov
mov
pop
dec
xlat
shl
or
lahf
gs
int3
test
sub
add
lods
(bad)
(bad)
leave
xor
lods
jp
sub
xor
imul
nop
int
out
das
lock
repz
mov
xlat
mov
pop
or
mov
shl
icebp
mov
and
adc
xor
inc
pop
push
mov
dec
mov
rol
paddusb
jp
lds
mov
in
dec
movs
jae
fs
xchg
sbb
data16
in
pop
jae
push
fmulp
imul
stos
loop
es
push
or
mov
fild
lahf
into
fnstenv
sar
lea
pusha
ins
push
cmps
pop
bound
jns
cld
mov
outs
mov
sub
jmp
stc
aad
call
push
jne
jg
popf
push
mov
jo
movs
fwait
mov
dec
std
adc
xor
jecxz
cmps
xchg
pop
jmp
out
call
xor
jbe
test
ror
inc
mov
int
mov
fisubr
xchg
adc
pop
(bad)
mov
push
or
adc
inc
inc
xor
in
or
stc
jl
pop
pop
mov
je
jecxz
mov
ret
inc
fnstenv
and
add
jl
xor
inc
dec
sbb
bound
test
push
pop
pop
sub
aaa
movs
push
addr16
fsubr
or
push
sar
adc
fld
aas
lods
add
jl
neg
fistp
lock
mov
pop
dec
cmp
push
inc
repnz
aas
sbb
mov
jmp
xchg
ror
imul
js
aam
push
jae
ja
stos
out
mov
dec
mov
sbb
jle
mov
js
add
daa
mov
mov
jg
dec
mov
inc
mov
fwait
enter
cmc
dec
mov
popa
cld
popf
inc
aas
xchg
push
(bad)
jmp
pusha
xor
xor
test
xchg
jnp
xlat
popf
out
cmp
cmp
and
adc
int
mov
jg
cmp
inc
sbb
cmova
retf
stc
fstp
(bad)
cmp
aad
pushf
int
shr
or
pushf
jae
xor
imul
and
jge
pop
sub
cmp
jns
sbb
cmp
shl
fimul
xlat
ja
mov
sbb
pop
mov
dec
and
scas
pop
in
mov
retf
dec
cmp
les
cmc
std
(bad)
dec
sub
sub
mov
repnz
imul
jo
jo
jp
push
aam
add
cmp
fadd
(bad)
xchg
test
ret
or
test
jp
mov
into
mov
in
fbld
or
in
psllq
mov
ins
fwait
cmp
aad
cmp
pop
mov
sub
push
push
mov
cmp
xor
call
jecxz
push
stc
sti
imul
into
adc
imul
stc
loope
inc
add
cmp
jno
push
out
stos
mov
xor
and
ror
xchg
add
mov
xchg
ins
mov
and
ins
dec
(bad)
mov
jmp
sar
stos
sbb
bound
inc
into
and
jne
push
jo
dec
inc
mov
and
xor
dec
cmp
sub
cdq
mov
pop
(bad)
jnp
add
lods
mov
clc
fstp
lds
rcl
adc
jne
xchg
and
je
in
in
in
in
aas
mov
dec
popa
mov
fs
cdq
adc
sbb
xchg
int3
(bad)
stc
lock
jbe
or
or
mov
in
mov
mov
movs
lea
jno
add
or
mov
pop
cmps
adc
push
(bad)
sahf
adc
fild
xchg
xchg
repz
and
test
bound
imul
or
lods
movs
add
dec
(bad)
je
cmp
and
add
icebp
mov
dec
(bad)
loope
hlt
pop
and
loop
cmp
jecxz
test
adc
shr
jae
daa
imul
add
shr
ss
xchg
add
mov
retf
mov
mov
mov
pop
cmp
and
cmc
push
jb
ror
repnz
cmps
arpl
fyl2x
(bad)
icebp
fcom
mov
rol
daa
cmp
leave
inc
inc
adc
add
mov
(bad)
fstp
xchg
push
js
cmp
je
test
inc
pshufw
sub
cmc
jg
dec
jg
(bad)
int
fild
fwait
or
add
lds
jmp
or
and
cld
pop
push
inc
pop
out
inc
xchg
repnz
jb
sbb
inc
push
daa
and
mov
mov
add
cmp
xor
push
out
adc
pop
imul
push
pop
mov
inc
push
inc
sub
dec
inc
mov
(bad)
data16
dec
outs
inc
dec
push
pop
test
fnstcw
popa
or
xlat
mov
into
ds
imul
das
pop
dec
fst
mov
dec
into
adc
clc
mov
xchg
test
jmp
jp
ficomp
adc
call
dec
fisttp
mov
xchg
pop
mov
mov
loope
in
loop
mov
push
push
mov
jbe
mov
aam
fadd
inc
push
xchg
mov
hlt
push
lock
lahf
pop
sbb
pop
cmp
(bad)
test
fsub
shl
jg
mov
dec
jl
pop
sub
loope
mov
add
rol
jno
jl
in
aaa
ror
sub
cmc
out
or
dec
aas
out
out
movs
jmp
jb
inc
sub
repnz
cmps
pop
(bad)
jno
les
pop
xor
mov
addr16
sub
lock
mov
pop
cmc
ja
add
push
cmc
leave
xor
inc
rol
cmp
xchg
(bad)
(bad)
pusha
sbb
std
push
sbb
mov
jno
pop
pop
or
adc
cli
div
nop
push
pop
ds
add
sbb
daa
jns
mov
xor
movs
jmp
xchg
and
xor
inc
sahf
push
adc
je
jle
and
retf
add
gs
sub
sub
and
retf
adc
xchg
dec
xor
push
dec
in
pop
test
pop
rcl
fdivr
mov
mov
popf
dec
push
or
add
lock
(bad)
das
movs
mov
arpl
add
cmp
call
pop
ins
sbb
sub
xor
std
dec
repz
int
and
arpl
xor
inc
sbb
(bad)
rcl
or
xchg
jge
mov
xlat
call
mov
cmp
fnsave
lahf
ret
imul
dec
shl
mov
sub
cmps
or
xchg
xor
not
inc
cmp
xchg
es
cmp
add
jnp
jle
data16
add
mov
popa
add
sbb
pop
sti
scas
xor
gs
adc
in
mov
ins
(bad)
(bad)
aad
add
dec
push
dec
mov
pop
out
xchg
cli
sbb
out
pop
jmp
jecxz
pushf
and
sub
inc
(bad)
in
int3
bnd
bound
mov
repnz
jne
xchg
test
call
xchg
shr
sbb
inc
dec
pushf
fsub
fnsave
cmp
clc
in
sbb
loopne
imul
mov
xchg
popa
fist
addr16
cwde
sahf
daa
or
rol
int
test
cld
dec
aas
(bad)
ror
sti
das
ss
push
mov
mov
dec
mov
jno
test
ret
and
mov
in
mov
and
les
outs
add
xor
cmps
scas
adc
cmps
ins
cmp
ds
or
jb
popf
cli
ret
jae
(bad)
push
mov
or
shl
test
nop
jnp
shl
mov
(bad)
push
out
add
sbb
aam
ins
cs
push
call
hlt
inc
adc
push
outs
movs
xchg
loop
or
adc
cmp
and
retf
cmp
push
mov
push
or
jmp
mov
aam
pop
mov
pop
sbb
shr
arpl
cmp
cmp
fldenv
ret
or
fisttp
addr16
outs
push
sbb
clc
push
(bad)
xchg
test
out
mov
test
int
addr16
lea
pop
push
adc
loopne
cmp
cld
or
clc
push
cdq
mov
jns
push
aad
ins
sbb
cmps
jle
rcl
mov
or
xor
and
rdpmc
addr16
push
pop
add
inc
and
mov
ds
push
gs
inc
push
jmp
popa
mov
stos
and
ins
call
dec
clc
movs
mov
(bad)
sbb
scas
mov
cli
movs
js
fwait
dec
xchg
jbe
mov
push
xchg
mov
sub
xchg
ins
or
mov
pop
lock
sub
sbb
jecxz
sub
cmp
iret
cmc
enter
call
sti
test
mov
dec
sbb
shr
and
loop
mov
mov
sub
inc
aam
pop
adc
je
shl
pop
cmp
dec
sti
cmp
or
cmps
ret
lock
stc
add
pop
cmp
jb
aaa
sub
loope
cmps
js
(bad)
mov
aaa
cmp
ins
xchg
out
leave
cwde
inc
cmc
fs
repz
add
or
xlat
sbb
lahf
mov
sbb
add
jge
int3
sub
adc
(bad)
adc
sub
or
dec
sub
dec
inc
leave
push
imul
mov
mov
pop
adc
and
fidivr
pop
fdiv
inc
push
nop
pushf
repz
jae
fild
mov
cmps
out
out
adc
bound
dec
int3
xchg
pop
xor
jp
sbb
imul
xchg
rcl
pop
fadd
sahf
cmp
jge
scas
inc
cmps
mov
dec
movs
ds
xor
mov
pop
inc
inc
dec
xchg
leave
pop
mov
aas
scas
sbb
xchg
fadd
js
sub
push
push
or
jge
sub
cmc
imul
sar
ror
jne
hlt
sub
cmp
cli
in
ret
js
ret
jae
psubusw
adc
mov
push
inc
jne
xchg
add
mov
jne
mov
pop
push
cli
cmc
ins
cmps
(bad)
lahf
aam
retf
inc
push
adc
inc
loopne
std
imul
push
jae
retf
add
mov
pop
adc
pop
cmc
xchg
push
inc
ret
sbb
inc
cdq
out
es
out
cmp
ret
icebp
pop
mov
jmp
pop
ret
xor
push
inc
das
cmp
hlt
cmps
push
loopne
(bad)
mov
jae
push
scas
call
(bad)
sub
and
jp
lea
cmp
xchg
call
dec
outs
stos
mov
(bad)
adc
cmp
mov
stos
mov
xchg
pop
fisttp
jmp
inc
popf
xor
imul
and
ins
mov
sahf
dec
outs
xlat
xchg
rol
fst
add
outs
pop
ret
and
sub
or
sbb
push
push
bound
and
ret
xor
xchg
imul
dec
cmp
or
or
sub
rcr
cmp
imul
mov
mov
add
ins
adc
psubusw
push
shl
pop
test
fcomp
xor
lahf
ins
jmp
dec
jge
out
jge
adc
lock
out
sub
outs
sbb
movs
jg
jmp
jle
into
test
cmp
adc
sbb
aas
inc
(bad)
(bad)
ins
lea
ds
pop
mov
movs
or
sub
dec
psllw
ins
inc
and
xchg
loope
das
xchg
push
and
mov
inc
aad
inc
lods
stc
sti
and
cmc
sbb
push
int
ret
dec
sbb
imul
mov
mov
pop
sbb
jo
add
sbb
ds
jmp
xor
jnp
(bad)
loopne
cmp
les
jno
jge
sub
popa
retf
call
repz
sub
test
inc
push
pop
imul
jae
dec
(bad)
cmp
movs
inc
in
out
xchg
xor
adc
cmp
xor
les
xchg
adc
and
xor
lea
mov
xor
push
inc
into
xchg
aas
cmp
mov
int3
movs
and
inc
push
push
jns
push
push
out
mov
aaa
inc
inc
in
stos
dec
pop
or
retf
add
push
push
loopne
jecxz
xor
pop
sbb
push
das
enter
ficom
and
mov
jne
xchg
push
dec
cmps
icebp
scas
and
pushf
or
neg
gs
dec
pusha
lahf
retf
mov
leave
jo
jmp
das
inc
cmp
dec
xchg
add
fisttp
push
cmp
jmp
(bad)
iret
sbb
ret
inc
shl
aam
sbb
mov
inc
data16
test
in
inc
jne
ins
arpl
jno
cmp
iret
dec
cmp
adc
cmp
mov
lods
repz
mov
cmp
or
ret
scas
leave
pop
out
movs
jg
jecxz
test
femms
lods
retf
pop
les
inc
repz
add
inc
or
adc
loop
loop
sti
dec
out
in
mov
out
jb
scas
mov
(bad)
in
push
out
lahf
fisub
scas
xchg
cmps
imul
sahf
pop
inc
cmc
test
(bad)
dec
mov
es
cdq
ds
loope
mov
mov
mov
and
jmp
(bad)
test
cmc
or
or
js
out
cmp
inc
adc
pop
mov
dec
xor
int
outs
or
mov
out
in
sbb
or
leave
and
xchg
jmp
stos
or
adc
push
xchg
call
mov
rcr
mov
sbb
xchg
jmp
fs
aaa
jg
push
and
xlat
gs
retf
adc
push
mov
jno
cdq
arpl
inc
xchg
dec
mov
mov
shl
into
loope
adc
loope
and
imul
jns
lods
and
pop
ins
mov
xor
rcr
sub
xchg
cmp
cmp
cmp
sbb
das
fimul
mov
inc
jl
jg
repnz
xlat
xchg
test
inc
jb
push
call
gs
pop
in
fmul
int
xchg
fs
xor
cmp
sub
int
aaa
mov
adc
or
pop
and
movs
mov
xor
imul
add
inc
push
fldcw
loopne
int
daa
pop
pop
shl
sub
out
add
mov
stos
xor
scas
sub
cmp
dec
loope
push
cmc
jns
mov
mov
mov
adc
push
int
dec
imul
xchg
test
out
push
loopne
jnp
xchg
in
test
sbb
lock
adc
and
adc
(bad)
(bad)
enter
ror
std
xchg
repnz
xchg
and
gs
mov
aad
adc
pop
lds
xor
push
pop
xchg
xchg
fistp
inc
xchg
sub
call
mov
or
ret
and
popf
cmps
je
daa
cwde
push
mov
mov
nop
sub
xchg
push
lea
sbb
adc
inc
pusha
fcomp
test
fucomi
or
jmp
sbb
dec
int3
inc
icebp
nop
lahf
cdq
cmp
sub
lods
jbe
stc
into
push
pop
inc
jecxz
jne
add
mov
fndisi(8087
and
jo
mov
xor
push
shl
xor
pop
mov
imul
daa
xor
cmp
dec
inc
push
push
cmp
jmp
pop
ss
ins
dec
stos
icebp
push
add
pop
cld
cmps
mov
push
(bad)
mov
adc
loope
enter
pop
cmp
xchg
jo
test
sub
sbb
std
sub
fistp
je
add
test
fnstsw
mov
pushf
push
mov
ror
jge
inc
sub
cmc
push
out
stos
xchg
scas
stos
pop
hlt
jecxz
inc
test
xchg
jae
push
sahf
ret
call
xchg
jl
adc
fcom
sbb
out
div
jne
out
inc
ror
into
sub
das
dec
call
cmp
imul
test
pushf
inc
sbb
bound
sbb
fnstenv
in
lea
leave
fwait
mov
and
or
or
imul
data16
cs
cmc
xlat
push
pop
out
pop
fldcw
or
vmread
out
loop
fwait
mov
dec
in
cld
cld
push
retf
je
xchg
stc
add
push
push
mov
fwait
shr
or
xor
fstp
in
pop
imul
pusha
sub
daa
adc
dec
retf
rcr
cld
or
pop
dec
adc
or
xor
loope
mov
xchg
mov
and
(bad)
mov
jno
mov
sub
add
cmp
or
push
add
and
call
mov
retf
fs
mov
movs
ss
std
in
fs
test
mov
lds
cmps
mov
arpl
sbb
push
sahf
into
fsubrp
int3
daa
aas
pop
or
pop
xchg
dec
mov
jno
push
hlt
call
(bad)
leave
push
test
mov
js
add
(bad)
jle
ss
addr16
shl
cli
jno
pop
ds
test
sub
mov
stc
inc
or
ret
mov
add
xor
mov
std
mov
jmp
scas
push
mov
ins
and
and
inc
ret
cmp
into
movs
mov
imul
jecxz
jbe
jnp
(bad)
repnz
or
sub
mov
adc
stos
pop
dec
sbb
sub
jg
psadbw
xor
aaa
loopne
bswap
jge
(bad)
scas
xchg
(bad)
fstp
jmp
and
xchg
xor
sbb
mov
adc
inc
sysenter
inc
xor
sub
xchg
mov
inc
jg
iret
rol
movs
ret
lods
mov
imul
dec
jge
inc
sub
shr
mov
push
mov
(bad)
icebp
push
jl
out
mov
pop
test
in
in
cwde
out
push
call
push
cmp
(bad)
in
mov
movs
jbe
cmp
loop
cmp
xchg
adc
cli
fisub
xchg
inc
popa
xor
rcr
jle
jmp
or
rol
push
aad
mov
pusha
sti
xchg
mov
popf
dec
retf
mov
jge
les
shl
cmc
sub
(bad)
movs
lahf
pop
in
call
pop
pop
jmp
pop
xor
push
pop
inc
push
push
xchg
mov
les
or
fdivr
ja
inc
mov
dec
mov
mov
sbb
mov
outs
mov
and
addr16
jmp
xchg
inc
lods
mov
pop
aam
push
adc
sub
data16
sbb
dec
and
arpl
sahf
mov
xchg
push
fild
lock
dec
mov
adc
ret
outs
enter
cmps
outs
(bad)
xchg
out
push
call
jle
mov
(bad)
pusha
or
rcr
dec
fs
mov
cmp
imul
xchg
dec
cli
daa
xchg
mov
dec
jmp
inc
dec
int
or
jne
std
push
jmp
cmp
sbb
mov
pop
lahf
loope
push
pop
stos
das
jne
(bad)
frstor
mov
jmp
push
cmp
jecxz
jae
cmp
dec
pop
es
or
mov
sub
inc
lock
leave
retf
xchg
mov
push
sar
sbb
rcl
xor
shl
sub
add
icebp
dec
and
push
and
mov
ss
dec
mov
xor
lds
and
push
sub
inc
scas
iret
repz
je
jmp
fwait
push
lods
imul
jmp
jl
pop
jg
cld
mov
pop
movs
in
sub
stos
jno
aaa
leave
sub
ds
movs
clc
arpl
push
dec
inc
bound
mov
mov
or
or
imul
bound
bound
cwde
test
fwait
sub
cld
inc
mov
xchg
adc
adc
add
cmp
outs
mov
adc
push
fwait
sbb
xchg
and
mov
add
and
icebp
sar
xor
mov
movs
sbb
inc
jne
(bad)
mov
add
outs
sub
push
xchg
outs
je
sar
cmp
and
add
fiadd
out
ret
mov
pop
jns
mov
call
mov
or
ins
repz
sbb
sub
retf
enter
push
test
inc
xor
outs
dec
dec
adc
div
shl
and
xchg
push
xchg
add
fs
ret
fwait
loope
add
shl
xlat
in
and
cmp
stos
sbb
add
add
mov
inc
mov
out
sbb
call
test
int
(bad)
and
addr16
fst
stos
inc
icebp
cmc
sbb
int3
out
mov
jl
es
jle
push
sbb
call
test
sub
shl
xchg
stc
scas
das
jae
mov
lea
mov
mov
and
cmp
xchg
sbb
loopne
mov
pop
inc
jmp
push
daa
add
outs
adc
or
cmp
cmp
pop
popa
cld
mov
jbe
test
out
inc
push
shrd
pop
movs
test
push
push
add
jo
leave
outs
jno
sbb
xor
in
pop
scas
loop
inc
cli
clc
rol
(bad)
jmp
ds
repz
push
lods
or
lods
xchg
popa
ja
cwde
(bad)
call
mov
out
cmp
fcomp
jne
xchg
dec
lock
scas
daa
inc
call
inc
arpl
ins
and
pop
and
in
enter
gs
pop
test
imul
in
dec
ror
xor
imul
ins
sbb
jge
cmp
jmp
dec
cmc
or
xchg
sbb
out
das
fadd
out
or
stc
sub
or
pop
add
push
call
(bad)
movs
gs
push
pusha
imul
or
aaa
lock
adc
cmp
test
gs
cld
inc
out
sub
stos
in
rcr
aam
punpckhbw
in
pop
jno
nop
jl
cwde
iret
push
dec
inc
aam
out
ror
int
push
adc
loope
iret
les
xchg
inc
add
xchg
mov
xor
pop
(bad)
push
cli
test
jle
or
cld
mov
inc
shl
into
push
adc
js
mov
push
pop
les
aam
push
cmc
mov
fsubrp
lods
loope
or
mov
add
int
xchg
sbb
push
popa
in
popf
or
sbb
pop
cmp
mov
imul
or
or
or
and
jb
push
pop
xor
sbb
movs
sahf
in
out
mov
or
fsubp
loopne
pusha
repnz
cdq
push
push
and
mov
es
cmp
pop
xor
stos
or
aas
jg
sbb
sub
pop
pop
out
xor
call
pop
mov
jno
cmp
inc
push
jae
pop
sbb
dec
in
call
into
add
popf
movs
ds
ja
mov
sub
sub
mov
packssdw
loop
sbb
jg
push
movs
in
aad
das
sahf
xlat
mov
aam
ror
push
pop
dec
fwait
adc
pusha
aas
mov
cmps
adc
loopne
xor
jmp
dec
push
mov
(bad)
icebp
push
pop
sbb
das
and
mov
jnp
aad
jle
cs
ret
cwde
test
das
push
jo
lea
mov
jmp
std
mul
push
mov
dec
pop
mov
pop
aam
add
push
mov
arpl
push
loopne
push
js
dec
jne
imul
fistp
fs
popf
add
lods
into
and
inc
jno
jge
xor
into
dec
sbb
ret
mov
sub
es
sub
test
shr
mov
shl
sub
mov
push
std
call
mov
xor
mov
xchg
popf
loopne
mov
sar
out
jmp
(bad)
cmc
mov
push
retf
cmp
jns
mov
jbe
ins
or
in
mov
mov
arpl
fcmovne
pop
jp
test
hlt
imul
in
mov
jge
mov
xchg
push
adc
mov
jecxz
pushf
mov
sub
xchg
ins
(bad)
test
mov
jne
scas
and
pop
sar
and
xchg
(bad)
push
push
push
fbld
stos
xor
sar
mov
dec
jno
retf
and
mov
mov
fidiv
xor
rcl
sbb
jge
or
and
rcl
or
xor
loope
mov
lahf
dec
mov
cmp
dec
xor
jnp
cmps
test
test
and
inc
xchg
mov
dec
call
jnp
fadd
ja
ficomp
jbe
scas
out
test
shl
and
adc
cmp
mov
pop
(bad)
lock
jns
and
xchg
xchg
adc
pop
and
loope
fisttp
sbb
dec
dec
popf
int
fcom
ret
xor
or
repz
pop
enter
jle
jne
aad
push
imul
and
adc
add
xchg
mov
xchg
xor
xchg
push
adc
or
es
push
inc
pushf
fdiv
ja
test
iret
call
add
inc
and
stos
xchg
hlt
fsubr
lods
mov
pop
sub
jmp
pop
mov
inc
outs
fnsave
aaa
movs
fild
mov
mov
add
jmp
mov
(bad)
pusha
mov
nop
popf
pop
loope
add
push
leave
std
push
push
adc
daa
jmp
std
out
mov
stc
mov
mov
(bad)
leave
mov
outs
add
stos
mov
sub
mov
dec
add
ja
stos
pop
cmp
out
inc
retf
jle
adc
aaa
pop
imul
mov
ds
aaa
lds
jmp
push
mov
imul
imul
rcl
mov
xchg
add
or
jne
or
frstor
mov
mov
es
add
pop
test
xlat
jae
pop
outs
xchg
popa
and
mov
jb
sbb
int3
lea
and
pop
jmp
rcr
fst
ja
cmp
and
fldcw
imul
sbb
xchg
popf
sub
cmp
push
or
aad
pushf
mov
fwait
xor
stos
push
and
mov
jmp
ret
out
adc
ss
push
shr
popf
adc
cli
fdivr
push
jns
and
xor
xchg
movs
stos
mov
mov
inc
pop
fld
sbb
pop
bound
cmp
or
cmp
ret
aas
mov
ja
dec
out
fistp
lahf
jno
adc
cld
imul
scas
sbb
inc
arpl
or
or
cmovle
cmp
fist
push
mov
dec
mov
add
popa
mov
inc
repnz
sub
retf
jno
adc
adc
cmps
stc
outs
add
(bad)
xchg
xchg
cmps
add
mov
fist
inc
mov
fcmovb
mov
pop
pop
fiadd
mov
out
jl
cmp
movs
shl
out
add
bnd
mov
or
aaa
xor
dec
loopne
push
dec
sub
cmp
ret
dec
jae
neg
mov
(bad)
mov
hlt
or
jecxz
jno
ffree
push
pop
mov
dec
adc
inc
xor
add
fisttp
not
(bad)
test
xor
fild
mov
sub
pop
xchg
sub
mov
mov
addr16
retf
xchg
test
jle
dec
xchg
movs
not
push
test
test
push
fistp
(bad)
mov
cmc
imul
ror
nop
xor
pop
add
mov
add
int
repz
mov
xchg
pop
loope
sub
mov
loop
mov
arpl
std
jnp
repz
mov
ret
imul
es
test
jmp
jb
es
adc
dec
out
fnsave
leave
cs
mov
loopne
pusha
jnp
add
fwait
and
push
sti
fisub
fcom
test
xor
fld
arpl
sub
clc
sahf
cmp
fs
xlat
cli
sub
popf
mov
xchg
fisubr
popf
and
fisttp
shl
or
xchg
js
cmp
out
lock
pop
scas
inc
mov
inc
leave
xchg
js
jp
adc
push
jmp
sub
movs
iret
aad
xor
inc
adc
xchg
xchg
stos
dec
sbb
ret
gs
sbb
pop
push
stc
mov
scas
lds
(bad)
and
mov
adc
push
loope
adc
sub
jl
pop
inc
mov
jmp
stos
fwait
pop
dec
enter
call
scas
xor
fldenv
inc
dec
mov
(bad)
arpl
push
icebp
leave
data16
pop
cdq
test
test
daa
sbb
repz
rol
std
into
aad
mov
jmp
push
sub
not
inc
xchg
loope
and
xor
(bad)
mov
mov
cmps
inc
lds
jnp
mov
in
mov
mov
mov
jno
fisttp
into
in
jmp
js
sub
in
push
push
outs
dec
push
fldcw
or
mov
repnz
movs
test
jno
loop
inc
push
push
cwde
arpl
daa
std
repnz
mov
fsubr
pop
js
std
fisubr
stc
and
adc
cmps
mov
shl
icebp
push
xchg
arpl
scas
or
daa
pop
and
inc
jmp
je
out
rol
mov
xchg
gs
ss
ret
outs
xchg
je
stos
cli
push
lods
rol
jle
mov
sbb
(bad)
dec
sbb
sti
adc
mov
xor
mov
add
and
lods
retf
jmp
add
mov
sub
in
cmp
cmp
sub
bound
mov
sbb
outs
dec
rcl
push
data16
jns
(bad)
mov
into
xor
in
jb
cdq
cdq
nop
test
repz
cmp
mov
retf
mov
inc
int
xchg
js
je
push
mov
neg
cli
je
pop
sub
mov
push
cmp
push
mov
sbb
adc
adc
int
dec
sbb
mov
cmps
mov
or
mov
iret
xchg
(bad)
js
ret
scas
and
pop
push
stc
pop
and
or
push
call
jo
test
sti
ja
sti
mov
or
test
adc
push
jge
test
mov
push
scas
std
mov
push
mov
sti
xchg
push
sub
loopne
push
cmc
in
shl
jmp
jno
and
ja
sti
movs
mov
pop
jno
scas
jecxz
mov
jg
mov
xchg
adc
mov
call
sahf
cs
stc
cdq
imul
add
lds
xchg
xchg
xor
mov
shl
aaa
loope
sub
mov
inc
pminub
test
adc
adc
mov
scas
ins
and
mov
call
loop
popa
retf
aas
retf
push
rdmsr
and
mov
jl
adc
movs
adc
mov
rcr
pop
(bad)
mov
jl
sahf
lods
jg
xor
test
dec
add
push
push
xchg
push
inc
add
and
pop
adc
les
dec
cmp
xchg
rcl
push
sahf
dec
jecxz
mov
xchg
ds
pushf
les
mov
push
dec
dec
lds
mov
pop
pushf
into
fwait
bound
out
stos
or
xor
into
adc
(bad)
or
add
loop
sub
cmp
fsub
aad
shl
jmp
idiv
retf
mov
add
cmp
cmp
mov
xor
loop
mov
sbb
shl
push
sbb
enter
and
std
jbe
mov
or
xor
or
call
mov
arpl
cmp
test
mov
xchg
mov
int3
add
pop
fcmovnb
outs
outs
fidivr
mov
inc
(bad)
call
push
fisttp
mov
sti
mov
movntps
pop
lods
and
xor
dec
in
jbe
lock
cmc
add
xchg
cmps
aad
sbb
mov
jg
xor
inc
push
add
pop
neg
out
jle
mov
push
leave
mov
push
shl
jmp
mov
mov
xchg
div
retf
xchg
adc
fbstp
mov
sub
sbb
inc
pop
ror
int3
dec
mov
out
mov
push
loope
vsqrtps
fldenv
pop
pop
ins
retf
pop
scas
jp
mov
in
test
pop
and
das
inc
add
sbb
stc
adc
fmul
fistp
push
sbb
cld
clc
outs
cmp
add
daa
jne
lods
xchg
pop
fdivr
leave
mov
or
adc
cmp
cmp
movs
stc
cmps
xchg
retf
xchg
dec
lds
leave
inc
fcom
mov
daa
hlt
jp
xchg
jge
stc
sbb
mov
sbb
mov
push
and
daa
or
xor
retf
xlat
cmp
push
test
jne
in
adc
xor
mov
sbb
jae
movs
xor
sub
cdq
movs
fdivr
test
scas
or
aam
jb
cmp
mov
inc
xchg
int3
push
or
or
mov
xchg
add
inc
xor
(bad)
pop
test
je
adc
or
rcr
xor
aaa
pop
mov
in
xchg
push
popa
imul
repnz
cmp
(bad)
int
xor
inc
and
lahf
mov
int
clc
loop
gs
add
(bad)
cmp
iret
or
jp
ins
sbb
jp
push
aaa
fstp
stos
push
out
xor
nop
sub
xchg
dec
gs
sar
and
add
mov
pusha
test
cmp
sbb
sbb
push
mov
dec
icebp
jp
mov
dec
into
mov
repz
and
lods
xchg
int
cmp
(bad)
data16
iret
xlat
pop
cmp
aad
cmps
rol
fnstenv
push
stc
mov
jno
jl
retf
dec
ret
jmp
and
jnp
mov
addr16
imul
cwde
xlat
stos
pusha
sub
dec
std
jmp
adc
dec
in
add
gs
push
dec
mov
imul
mov
adc
int3
sahf
repz
pusha
inc
push
fstp
xchg
out
or
test
ret
jns
inc
add
aaa
mov
hlt
mov
icebp
xor
(bad)
add
inc
ret
inc
mov
jp
dec
ret
aad
inc
int
stos
dec
xor
mov
cmp
pushf
gs
pop
or
clc
inc
dec
pop
xchg
mov
nop
ror
clc
fidiv
add
push
mov
xchg
mov
ret
sbb
mov
mov
pop
sbb
mov
es
sub
xchg
dec
cs
mov
pop
ins
repnz
pop
xlat
and
retf
xchg
sub
xchg
inc
jl
loop
pop
ss
mul
pop
mov
aaa
(bad)
out
jp
mov
jg
jbe
mov
popf
add
sub
cmp
fstp
es
das
mov
movs
(bad)
bound
(bad)
adc
mov
sbb
outs
enter
jo
out
(bad)
cmp
out
fstp
in
xchg
addr16
dec
sahf
mov
add
cmps
repz
cs
in
je
shl
dec
es
push
jge
lock
out
mov
inc
movs
js
outs
(bad)
movs
add
cdq
loope
rcl
std
fldenv
xor
stos
mov
pop
cmc
ret
hlt
sbb
mov
dec
mov
in
mov
stc
fistp
adc
pop
add
lahf
ficom
pop
in
adc
(bad)
int
in
icebp
jle
cmc
xor
and
imul
inc
sub
retf
(bad)
icebp
push
cld
cmp
aam
mov
gs
cmp
mov
cmc
cmps
mov
ja
push
sbb
loope
add
push
xchg
xchg
leave
bound
mul
cmp
fsub
test
call
xor
cmp
(bad)
lods
pusha
jne
stos
push
push
jbe
add
shl
es
pop
sub
jnp
pop
loope
adc
and
sti
sbb
lea
xchg
not
dec
mov
cmp
push
xor
sti
test
and
push
pop
sahf
outs
mov
imul
(bad)
shl
sub
div
mov
pushf
lods
imul
(bad)
shr
fdivr
test
adc
and
mov
mov
test
aas
ds
add
nop
mov
push
pop
push
enter
sub
mov
rcl
and
dec
adc
out
mov
push
push
std
mov
xor
inc
icebp
retf
scas
sar
dec
ret
iret
repz
push
dec
mov
jle
scas
scas
inc
sub
xor
adc
mov
imul
dec
std
cmc
dec
cmp
pop
clc
cs
shl
jno
ds
fistp
in
retf
xor
call
push
dec
imul
push
pop
and
mov
cmp
sub
in
(bad)
in
jmp
xchg
daa
rcr
retf
ret
nop
cld
sbb
(bad)
xor
mov
dec
pop
jnp
push
push
add
(bad)
aam
mov
call
data16
rcr
dec
repnz
call
(bad)
loop
test
xchg
fcmovu
add
fwait
mov
test
stc
push
inc
jmp
add
mov
dec
retf
xchg
jno
add
loopne
nop
sub
pop
pop
cmp
sub
push
int3
cmp
lahf
jo
sub
(bad)
jns
fdiv
and
jb
jo
pop
lods
lods
cli
add
sbb
out
sbb
mov
jecxz
mov
out
dec
mov
mov
adc
frndint
pushf
or
mov
and
adc
mov
stos
shl
pop
jns
imul
out
jecxz
or
cmp
aad
xchg
sub
push
outs
or
je
movs
adc
stos
nop
and
push
dec
cmp
scas
push
and
pop
xor
mov
mov
test
out
stc
cmp
and
push
add
pop
inc
jo
inc
and
ror
xchg
popa
mov
jp
cmp
iret
retf
sub
xor
in
cmp
mov
loope
out
pop
pop
cmps
dec
stc
push
cmp
push
dec
sbb
call
out
test
mov
mov
and
test
inc
sub
adc
ins
cmp
mov
xchg
pop
push
repz
and
or
push
out
jmp
out
sbb
xchg
dec
fwait
sbb
xor
out
mov
sti
push
or
bound
out
dec
push
adc
dec
mov
or
jae
cmp
and
rcl
pop
sbb
mov
adc
rcr
pusha
and
icebp
and
arpl
jcxz
aas
dec
hlt
pop
jno
add
imul
mov
mov
jae
rol
push
out
jecxz
push
add
adc
push
aaa
add
xchg
(bad)
dec
aaa
push
push
fadd
(bad)
jmp
push
(bad)
jbe
mov
cmp
popa
jmp
not
inc
mov
inc
ret
jo
or
add
enter
pop
inc
fidiv
and
xchg
dec
jge
mov
lahf
dec
scas
test
dec
popf
in
aad
or
in
in
sbb
push
pop
fisttp
jmp
(bad)
push
or
cdq
scas
stc
add
pop
int
jmp
fcomi
and
inc
xchg
jmp
mov
pop
ja
ss
(bad)
scas
and
cmp
dec
xlat
stos
inc
and
mov
sti
cwde
push
dec
fdiv
pop
in
test
scas
push
rol
push
retf
fcomi
nop
je
dec
loopne
int3
dec
int3
cli
ror
or
scas
retf
sub
xor
push
int3
mov
addr16
(bad)
xlat
sbb
sub
jbe
cvtps2pi
(bad)
out
sbb
out
sbb
lea
cmp
pop
popf
daa
xchg
mov
popa
mov
cld
cmp
lock
jp
in
push
mov
xor
jb
rol
lods
sbb
in
shl
xor
cmp
mov
int
and
and
lea
mov
in
popa
pop
into
fbld
add
out
mov
(bad)
push
or
dec
mov
rol
leave
and
pop
sub
mov
vfmadd213pd
jp
xor
inc
leave
adc
pop
(bad)
(bad)
fcom
mov
dec
cmps
test
dec
pop
fwait
pop
retf
adc
cmps
jb
out
mov
cli
push
out
call
adc
xor
xchg
ja
cli
cdq
mov
jle
rcr
popa
repnz
das
popa
(bad)
ret
mov
arpl
xchg
add
ds
jmp
std
mov
pop
add
aam
call
dec
aas
and
pop
push
jne
fcomip
mov
dec
pop
rcr
sub
dec
sub
leave
lock
gs
dec
out
ret
push
push
cmp
fldenv
xchg
push
outs
loope
popa
sub
idiv
pop
cs
mov
scas
adc
rcr
lods
cmp
sahf
retf
xor
adc
cmps
dec
hlt
push
mov
std
jno
aas
and
add
or
mov
xchg
pop
xchg
and
inc
sbb
mov
inc
inc
sub
add
sbb
jbe
cmps
inc
sub
(bad)
jge
mov
push
in
add
dec
xchg
and
test
xor
adc
cmp
push
fidiv
push
pop
xor
and
sub
test
cld
dec
mov
sbb
movs
xchg
and
and
cld
mov
jae
fild
cmp
out
xor
arpl
cdq
loopne
(bad)
pop
ins
pop
loope
fs
mov
ins
sbb
and
adc
fcom
leave
popf
cmp
mov
xchg
jmp
into
mov
fmul
xor
xor
clc
xlat
loop
scas
movs
(bad)
xchg
push
push
aad
movs
sbb
lods
jb
dec
sub
in
add
jmp
cmc
jno
xchg
dec
icebp
and
sub
outs
mov
mov
repnz
and
js
xchg
addr16
and
pop
int3
dec
dec
mov
add
jo
push
fcmovbe
sbb
inc
mov
ret
cmp
(bad)
mov
adc
dec
and
push
cld
pop
jg
pop
je
pop
div
add
std
adc
retf
aas
or
mov
stos
jmp
xchg
xchg
or
ret
popf
dec
ins
cli
retf
sbb
ins
jno
cmc
stc
adc
fidiv
inc
lahf
sub
sub
loopne
(bad)
mov
adc
mov
push
pop
inc
mov
xor
stc
cmc
dec
xchg
loop
mov
nop
cmp
pop
shl
pop
out
add
xor
ss
push
lods
push
mov
mov
sar
in
inc
xchg
inc
inc
adc
sar
sub
jp
and
out
add
scas
lock
pop
retf
pop
mov
inc
loopne
or
or
loop
cmp
pop
in
add
cs
cmp
imul
or
daa
aam
stos
jp
inc
mov
sbb
mov
or
nop
push
xor
pop
pop
cs
mov
pop
out
push
mov
or
xor
fld
es
ins
dec
pop
xchg
sti
mov
in
push
not
cmps
ret
daa
inc
mov
out
in
or
popa
xchg
jns
push
fsubrp
adc
pop
ins
jecxz
adc
jmp
pushf
jg
mov
fistp
test
mov
adc
hlt
das
stos
in
dec
leave
loope
jmp
sbb
xor
call
inc
movs
mov
fwait
dec
not
pop
dec
pop
cmps
sbb
ins
mov
(bad)
repnz
out
jmp
push
xchg
lods
push
jne
loopne
push
jnp
loope
push
jl
pop
cmp
stos
loopne
arpl
jno
xor
jne
push
jge
mov
cmp
retf
fucom
fs
in
mov
mov
int
ret
xchg
les
repz
pop
and
scas
loop
xchg
mov
add
xor
arpl
or
mov
pop
jne
jmp
cmps
or
and
mov
xchg
jp
inc
add
in
outs
call
das
movs
pop
lahf
add
pop
jo
shl
mov
xor
ins
and
je
fisub
sar
(bad)
(bad)
in
stos
fwait
outs
jb
push
lahf
data16
sbb
fsubr
xor
mov
iret
xchg
jl
adc
mov
jge
aam
movs
daa
push
cmps
cmp
push
add
pusha
push
ja
inc
and
inc
sub
add
gs
dec
iret
xchg
fcmovb
mov
pop
mov
gs
mov
xchg
sub
xchg
rcl
sub
and
pop
jecxz
mov
imul
xchg
mov
fwait
repz
stos
xchg
ja
in
sbb
xchg
xchg
mov
retf
jb
inc
xchg
xor
dec
push
push
mov
cmp
dec
sbb
loopne
neg
ds
(bad)
mov
scas
popf
mov
push
mov
sti
(bad)
push
sbb
add
movs
push
loope
inc
xor
push
xchg
stc
jle
jbe
imul
out
jb
gs
in
mov
adc
cwde
and
mov
loopne
ja
adc
js
aas
xchg
and
rcl
jbe
addr16
mov
jle
sahf
and
sti
retf
scas
mov
inc
stos
out
fld
lods
push
cmp
int
push
sbb
scas
test
pop
and
les
mov
out
outs
dec
pop
in
push
inc
mov
or
mov
push
imul
inc
dec
out
(bad)
movs
out
push
mov
xor
mov
out
push
mov
gs
ins
pusha
add
mov
push
inc
fcmovbe
pop
out
je
jge
xlat
or
or
shl
lea
add
push
add
add
sub
and
mov
in
dec
inc
inc
je
retf
xchg
ret
rcr
test
cld
cmp
mov
aaa
sbb
bound
lea
bound
int3
fxch
cdq
addr16
xchg
jb
inc
mov
cld
pusha
jns
jbe
cdq
loope
sbb
sub
cs
arpl
scas
rcr
jmp
sar
out
and
popa
add
sub
aam
mov
sbb
arpl
lea
xor
hlt
leave
ret
mov
loopne
jb
add
fwait
mov
mov
mov
lds
mov
mov
scas
jmp
(bad)
pop
rep
je
dec
xor
mov
retf
mov
lock
push
popa
mov
sub
loop
int
daa
ins
jmp
lods
push
call
lock
mov
aas
pop
mov
sub
and
mov
nop
jmp
mov
mov
cld
adc
fdivr
mov
jge
push
cwde
dec
mov
xchg
les
xchg
push
sbb
out
adc
jecxz
icebp
mov
imul
sub
aam
(bad)
push
push
cdq
cdq
adc
out
and
mov
in
push
inc
fistp
call
push
mov
pop
(bad)
rcr
fadd
xor
fsubr
xchg
ss
(bad)
dec
mov
sub
test
sbb
add
mov
scas
xor
and
sti
mov
adc
sub
mov
aad
sub
xor
dec
push
adc
push
push
add
or
fwait
gs
jp
xor
pop
(bad)
xchg
cwde
xchg
fcom
push
xchg
test
hlt
lea
test
std
fld
sar
out
cmps
iret
sub
push
or
pop
sbb
push
sub
aad
sub
stos
push
rcr
test
pop
fwait
push
push
jb
call
dec
jecxz
jne
push
jg
cmps
(bad)
push
mov
pop
add
in
pop
pop
std
mov
add
pop
ja
stos
sub
mov
out
aam
pop
add
dec
xchg
inc
mov
popa
dec
sub
xor
aas
jbe
sbb
xor
push
outs
xchg
rcl
and
bnd
mov
push
pop
fild
cmp
gs
mov
das
add
jmp
add
sahf
shl
das
in
add
mov
fimul
push
out
fnstcw
jne
jne
mov
mov
push
imul
push
movs
hlt
ror
inc
mov
adc
fimul
stos
mov
jge
pop
push
dec
sar
push
pop
mov
fs
arpl
cmp
cs
enter
(bad)
mov
enter
jb
adc
data16
test
fild
jg
sub
jbe
dec
outs
push
dec
dec
movs
add
add
cwde
adc
xchg
mov
or
sbb
mov
aas
adc
push
push
pop
loopne
clc
js
repz
cwde
lods
imul
pop
shr
sbb
popf
sub
scas
add
mov
aas
jo
mov
out
clc
div
mul
jl
dec
inc
inc
and
mov
test
xchg
lods
test
cld
ja
test
adc
xchg
mov
push
ds
jmp
xchg
mov
shr
adc
fcmovne
ins
push
push
jl
into
inc
loope
jp
ret
mov
(bad)
mov
mov
dec
dec
enter
(bad)
push
arpl
aam
imul
aad
(bad)
add
(bad)
pop
lea
fisttp
movups
push
and
sub
lahf
add
jg
in
pmaxsw
mov
jl
sbb
sbb
xchg
push
pop
fucomp
(bad)
leave
jno
pop
pop
sbb
pop
dec
dec
mov
js
push
jo
scas
rcr
(bad)
mov
jne
out
call
data16
jl
jae
push
push
jmp
xor
dec
dec
xor
cli
cmp
or
mov
and
mov
push
pop
movs
push
jae
sar
call
aas
mov
pop
(bad)
js
mov
add
int3
out
das
stos
cmp
xor
in
(bad)
push
lahf
or
jge
inc
rcr
inc
add
enter
xor
sbb
dec
mov
fnstcw
shl
rol
sbb
iret
aaa
adc
call
xor
xchg
sub
jne
and
dec
into
nop
mov
xlat
test
or
sub
jle
lds
sti
aad
outs
sbb
fsub
(bad)
fst
cmps
inc
adc
mov
mul
inc
pop
and
loopne
sbb
push
addr16
aad
lods
fild
push
jle
(bad)
enter
test
not
cmp
dec
sbb
in
push
pop
loopne
dec
sub
fwait
sbb
and
cwde
adc
pop
or
in
add
(bad)
xchg
(bad)
es
popf
and
add
push
xor
(bad)
stc
pop
adc
xchg
(bad)
inc
xchg
ss
push
adc
jmp
dec
mov
imul
test
add
xor
div
and
push
outs
sbb
adc
fs
or
fs
add
lods
jp
mov
sub
adc
dec
cld
inc
mov
sar
(bad)
das
aaa
cmp
sbb
sbb
sub
retf
xlat
jb
mov
xchg
fcom
jg
fwait
add
or
sub
and
call
cmp
mov
clc
ins
rcl
cmp
mov
out
in
adc
mov
cwde
xlat
push
xchg
test
(bad)
clc
pop
pop
or
mov
xor
or
or
cmp
ins
push
xchg
(bad)
aad
dec
pop
and
jmp
push
cmc
sbb
call
xchg
cwde
mov
test
arpl
push
cld
jle
jo
cmp
mov
int3
pushf
dec
inc
int
mov
mov
push
out
add
add
sub
scas
shr
adc
cmps
add
dec
inc
push
or
bound
jg
sti
mov
cs
mov
push
aaa
mov
adc
lods
out
scas
sbb
push
mov
shl
push
bound
push
loopne
test
mov
mov
jge
out
xchg
fwait
mov
pop
and
pop
mov
sar
sbb
outs
(bad)
or
sbb
push
out
push
fistp
jmp
aaa
xchg
push
fdiv
dec
xor
adc
or
iret
cmp
test
dec
jge
add
pop
inc
sahf
dec
push
fistp
push
push
lods
inc
push
jb
scas
dec
popf
push
(bad)
and
leave
ja
or
aad
lods
xchg
aaa
repz
ss
fsubr
pop
and
xchg
pop
pop
jbe
pop
and
ds
repz
xor
and
mov
add
dec
mov
or
mov
in
aas
cmp
jbe
call
xchg
fsub
sub
jmp
das
je
xchg
adc
cmp
(bad)
je
sbb
push
movs
lods
cli
dec
retf
mov
mov
lea
cmc
arpl
nop
idiv
xchg
imul
add
(bad)
das
aad
add
sbb
shr
mov
stos
jl
or
mov
xabort
in
push
dec
pop
mov
add
cs
ret
in
imul
fs
sub
or
lods
push
pmaxub
xor
(bad)
xchg
sbb
lods
sbb
pop
push
outs
jnp
outs
pop
push
pop
jbe
shl
sahf
adc
add
mov
pop
xchg
mov
fistp
xchg
and
mov
in
mov
bound
mov
out
dec
pop
or
stc
mov
cwde
shr
outs
retf
ja
test
adc
pop
mov
cs
xor
fistp
pop
adc
mov
mov
arpl
xchg
xor
jae
sbb
lea
out
fs
pop
(bad)
jb
jmp
leave
ret
push
enter
xor
dec
cdq
sbb
sub
test
adc
fldenv
hlt
loope
cld
shl
jl
sar
push
or
or
jp
ins
test
les
mov
sub
mov
jae
daa
fwait
push
daa
hlt
loop
fwait
stos
loop
jmp
jmp
and
dec
cmp
hlt
xchg
(bad)
in
(bad)
mov
in
cmp
sbb
inc
test
sbb
popf
cmp
sub
mov
xchg
jecxz
mov
ret
jbe
daa
retf
cli
(bad)
pop
int3
adc
les
scas
out
outs
inc
mov
in
and
loopne
fistp
cdq
shl
jp
(bad)
fld
cdq
mov
paddw
sub
jns
fnsave
data16
imul
mov
sahf
leave
stos
mov
pop
inc
xchg
sub
pop
lea
inc
(bad)
xor
pop
test
ins
inc
fldcw
out
fsubr
(bad)
ss
(bad)
ret
jg
push
mov
repnz
leave
cmps
pop
xor
xchg
icebp
push
fsubp
out
inc
fsub
shl
shl
cwde
imul
inc
mov
sub
inc
sub
call
inc
add
dec
dec
cmp
int
clc
ins
cs
mov
push
fsubp
icebp
leave
sahf
and
(bad)
sbb
mov
mul
mov
inc
sub
movs
je
or
jl
fiadd
mov
push
jnp
mov
jp
jne
rol
dec
xor
(bad)
or
dec
dec
push
push
mov
out
cmp
mov
inc
les
mov
daa
or
jmp
enter
in
fiadd
inc
rcl
pop
push
jmp
(bad)
popa
test
rol
mov
jne
add
ret
cld
cmc
repnz
popf
sub
xchg
jnp
popf
(bad)
out
js
mov
sub
inc
mov
and
pushfw
mov
adc
popf
push
sbb
loope
xor
push
mov
and
imul
or
push
jno
std
pop
mov
mov
pushf
cwde
mov
imul
add
jl
jg
repz
xor
xor
adc
les
xchg
dec
(bad)
jecxz
sbb
xor
sbb
pop
and
cs
cld
push
push
out
in
aaa
movs
jns
pop
inc
pushf
rcl
push
cmc
loope
nop
mov
loop
xchg
int3
cmp
in
cli
mov
arpl
inc
cmp
pop
call
outs
pop
js
loopne
loopne
jne
jbe
das
leave
jle
pusha
jo
dec
xor
repnz
iret
adc
test
int3
push
and
cmp
imul
sub
mov
sub
loope
xor
mov
mov
jbe
nop
push
aam
into
leave
retfw
js
repnz
dec
xor
leave
sub
(bad)
aam
add
mov
adc
(bad)
mov
cmc
stos
add
mov
jns
add
popf
xchg
stc
jnp
add
dec
lahf
inc
movs
add
mov
aaa
in
jg
xor
bound
mov
add
(bad)
dec
jle
jmp
lods
cmp
jmp
inc
psadbw
inc
iret
jb
imul
jle
dec
cdq
mov
lods
gs
xchg
imul
mov
mov
and
or
dec
cmp
aam
fist
or
mov
xor
mov
push
cmp
shl
sub
(bad)
jmp
sbb
ds
dec
sbb
(bad)
jge
adc
push
gs
ds
ins
add
(bad)
outs
sub
or
icebp
add
mov
in
add
push
ror
push
dec
pushf
pop
jbe
mov
jg
int3
jbe
xor
pop
push
(bad)
neg
dec
inc
mov
pop
sub
lods
je
loope
dec
aam
and
adc
clc
push
int3
into
mov
sub
dec
(bad)
nop
push
sbb
mov
cmp
int
cmp
mov
jmp
pop
sub
add
mov
cmc
dec
gs
and
(bad)
and
inc
mov
loopne
hlt
xor
mov
cmp
cmps
fs
rsm
jne
push
stc
fucom
mov
inc
or
inc
mov
out
bound
ror
add
cmp
add
xor
iret
sub
test
hlt
sbb
cmps
cmp
adc
jne
(bad)
(bad)
outs
sbb
push
nop
movs
(bad)
push
add
adc
or
jmp
(bad)
jns
dec
push
adc
mov
cdq
sbb
les
in
daa
popw
mov
call
sbb
ret
inc
cmp
mov
xor
enter
rol
rol
pop
aaa
sub
mov
pop
gs
mov
daa
fdivrp
dec
popf
push
sahf
loope
idiv
push
jne
or
mov
mov
cmps
and
ret
cld
pusha
(bad)
push
and
dec
push
mov
pop
in
ss
inc
mov
movs
xchg
js
cmc
jecxz
ins
mov
add
je
neg
mov
sub
cmps
or
fistp
out
xchg
into
movs
pslld
jae
loopne
bound
dec
retf
movs
repz
add
xchg
inc
cmp
cli
enter
fmul
addr16
lea
fxch
mov
mov
or
fidivr
push
sti
nop
xchg
in
int3
std
inc
push
push
fst
mov
dec
cmc
in
mov
ficomp
xor
xor
dec
pop
ror
in
loop
call
fcmove
sbb
test
icebp
stos
fucom
loope
or
call
test
es
ins
xchg
fcomip
leave
jg
mov
push
xchg
loop
mov
rcr
fist
push
or
rcr
push
fisttp
jnp
call
rcl
das
push
or
xchg
sub
movs
loopne
rcr
jge
xor
jmp
gs
mov
loop
js
hlt
jns
pop
sub
mov
retf
popf
mov
test
push
mov
cmp
pushf
jmp
sar
sub
mov
outs
mov
add
out
retf
inc
ins
mov
ins
outs
retf
sub
mov
ja
jl
jb
push
mov
mov
xor
ins
in
cmp
jne
adc
xchg
cmp
repz
imul
loop
data16
xor
sbb
sub
sub
inc
add
mov
sub
cmp
mov
loop
push
imul
inc
pusha
(bad)
sub
push
jmp
in
mov
test
fsub
and
mov
pop
dec
adc
inc
inc
scas
sbb
dec
mov
fadd
shl
retf
or
jg
in
das
or
push
les
ins
les
mov
jle
mov
xchg
mov
cmp
icebp
mov
jae
cmp
retf
inc
js
xabort
shr
add
cmps
mov
push
addr16
test
sub
cmp
retf
loope
fsubr
mov
ins
sahf
mov
fs
push
movs
and
cs
call
out
push
sub
loopne
adc
inc
cmp
repz
mov
int3
xchg
scas
pop
mov
xchg
inc
dec
adc
frstor
std
xor
cmp
sbb
xlat
fdivr
test
xchg
xor
sub
inc
sbb
push
jne
and
adc
loopne
movs
(bad)
add
sbb
and
ror
sub
xor
sbb
sub
(bad)
aas
shl
and
push
dec
mov
dec
fsub
shl
adc
icebp
adc
out
ror
fcmovbe
das
inc
das
mov
cmps
cmp
and
mov
cmp
and
(bad)
out
jo
adc
enter
int3
mov
and
clc
or
(bad)
push
mov
movs
mov
and
xor
iret
xchg
cmps
call
xor
nop
aad
adc
or
xlat
pop
push
movs
push
fistp
rcl
test
push
and
fdivr
jnp
test
adc
xor
pushf
scas
sub
fwait
dec
push
retf
push
or
pop
jmp
in
(bad)
sbb
xchg
shr
pop
loope
mov
xor
or
adc
pop
dec
jge
sbb
pop
cbw
into
das
dec
mov
lds
mov
int3
add
adc
movs
mov
cmp
cmp
popa
xchg
mov
scas
xchg
sbb
add
push
into
pop
(bad)
data16
xchg
cmp
stos
inc
les
xchg
xor
cmps
dec
shl
push
iret
jmp
fist
call
aam
cmp
fisubr
stc
mov
jg
adc
imul
xchg
sar
mov
inc
outs
call
mov
cmp
movs
mov
jle
and
push
ss
mov
ret
sahf
jg
jbe
(bad)
dec
lods
cmp
ins
mov
iret
(bad)
nop
jmp
js
jecxz
dec
pop
mov
adc
jb
mov
sti
mov
popf
in
(bad)
and
daa
lahf
add
arpl
jecxz
xor
popa
or
dec
loope
popf
mov
ds
popa
mov
sar
cld
jmp
mov
push
jecxz
pop
mov
dec
push
fidiv
add
or
sbb
and
mov
cmp
scas
mov
fild
mov
or
jmp
mov
movs
mov
leave
xor
lahf
inc
mov
or
jo
cld
mov
imul
mov
lds
push
jno
test
pop
fstp
cmp
inc
fist
ret
or
add
scas
add
or
sub
pop
div
or
addr16
scas
mov
mov
ja
xchg
in
cmps
test
in
js
leave
test
cdq
pop
icebp
rol
cmp
adc
ins
push
mov
push
loopne
inc
push
daa
xchg
or
ret
pushf
stos
jns
pop
es
out
cmp
mov
inc
mov
pop
xchg
push
add
inc
test
test
inc
cmp
mov
jle
sbb
jbe
inc
cmc
and
aaa
add
scas
mov
fld
dec
push
ret
stos
pop
in
adc
adc
popf
loop
pop
pop
leave
cmp
jg
and
data16
bound
dec
pop
sbb
sahf
mov
pop
jno
in
je
mov
or
pop
mov
mov
loop
pop
call
push
xor
add
jns
jno
fsub
bswap
inc
shl
shl
out
out
xlat
adc
pop
or
scas
pop
xchg
or
xchg
adc
shr
pop
xchg
rol
pop
cmp
jne
or
add
pop
call
xchg
lock
bound
mov
mov
cli
inc
sub
sar
(bad)
cld
ror
xlat
mov
stc
mov
fs
cmp
dec
iret
xchg
xchg
movs
es
or
add
mov
push
das
mul
pop
test
lock
jge
push
sub
bound
jns
xchg
in
mov
or
fucomi
js
(bad)
js
into
jmp
ficomp
js
xor
pusha
rcr
inc
pop
shl
inc
sub
js
cmp
dec
push
lahf
jg
fs
pop
and
popf
xor
jnp
mov
call
push
mov
inc
pop
push
pushf
mov
in
int
pop
call
inc
ror
jecxz
ror
adc
sub
mov
outs
cmp
adc
xchg
xchg
jmp
mov
ret
ret
xor
les
inc
xor
ds
add
adc
mov
mov
retf
ja
cmp
jo
cmp
pop
cmp
mov
sbb
add
jmp
xor
push
popf
cmp
ins
pop
(bad)
and
in
ins
sub
fcom
daa
popf
loope
retf
add
mov
pop
pop
mov
add
mov
and
aam
sbb
jmp
push
xor
inc
lods
int3
inc
call
xor
and
and
shl
sbb
mov
cli
mov
out
xchg
push
jns
jge
and
jno
cmp
adc
sti
ins
mov
cmp
mov
mov
cs
je
ins
and
jo
enter
inc
rcl
cwde
into
into
xor
cld
add
xor
xor
cmp
sub
mov
add
mov
sub
and
xor
call
push
mov
outs
mov
loope
mov
jns
int3
cmp
clc
bswap
push
pusha
jl
pop
adc
xchg
adc
test
loopne
bound
aam
pusha
push
aas
rcl
ins
ss
sbb
out
inc
mov
xor
test
sbb
or
dec
ror
loop
stc
daa
adc
inc
pop
add
jl
sbb
retf
jbe
mov
mov
popf
or
out
and
push
cwde
loopne
out
push
lea
(bad)
jp
cmp
jge
sub
(bad)
ins
fiadd
mov
inc
xchg
lds
aam
jno
je
xor
mov
(bad)
add
sub
jno
retf
mov
mov
inc
push
sbb
cmp
lds
xor
mov
add
daa
mov
push
add
push
mov
xchg
sbb
jecxz
push
(bad)
pop
push
inc
jge
rcl
rol
enter
xchg
push
jo
test
dec
into
dec
call
into
xchg
mov
sub
addr16
iret
dec
inc
adc
(bad)
push
jp
fmul
data16
sbb
or
je
cmps
cmp
or
push
push
loop
daa
nop
popa
pusha
add
pop
loopne
repz
cmp
bnd
repnz
mov
add
repz
je
outs
and
cmc
test
leave
cmp
sbb
push
cdq
xor
and
in
jecxz
dec
mov
mov
fild
shr
fdivr
test
xchg
xor
or
jo
vunpckhpd
jno
pushf
test
clc
inc
movs
dec
mov
mov
mov
or
mov
or
xchg
xor
pusha
mov
cdq
cmp
out
jmp
mov
cdq
cmp
xor
loope
cwde
or
fs
mov
clc
dec
loopne
mov
jb
jnp
ss
retf
stc
push
mov
pop
std
jae
or
cli
xor
fnstcw
pop
fwait
xlat
jl
cdq
pop
int3
in
(bad)
xlat
bound
jbe
aas
inc
lods
sub
xor
cmps
lea
lods
fld
fisttp
mov
and
xchg
stc
movs
pop
mov
les
arpl
in
cdq
sbb
popf
mov
sub
outs
and
(bad)
mov
inc
(bad)
imul
test
stc
imul
frstor
mov
and
xchg
stc
mov
fdiv
enter
pop
xor
pop
jb
inc
lock
call
push
repnz
adc
mov
lods
dec
jne
(bad)
ins
popa
or
cmp
push
add
out
ror
cmp
cmp
leave
sub
test
cmp
and
ret
int3
jb
cmp
ffreep
hlt
mov
mov
lods
out
mov
std
call
xor
retf
addr16
fbld
or
add
xchg
cmp
xchg
test
push
sub
in
xor
int3
fwait
mov
lods
sub
test
rol
in
pop
mov
or
(bad)
mov
loopne
(bad)
lds
mov
jg
call
inc
xchg
mov
test
mov
xor
adc
stos
and
sahf
int3
cmps
sbb
adc
neg
lods
adc
fnstcw
cs
cwde
aaa
retf
dec
outs
mov
adc
nop
inc
or
in
mov
fidiv
mov
dec
retf
push
mov
push
push
inc
adc
xor
mov
(bad)
call
jnp
and
iret
cmps
jp
scas
and
pop
call
ds
inc
inc
mov
in
add
sti
test
add
sub
je
addr16
daa
(bad)
adc
jmp
out
or
adc
mov
cmovno
cli
sub
sbb
and
fdivp
mov
or
push
imul
mov
sub
sbb
xor
neg
aas
lods
fxch
xchg
jecxz
imul
(bad)
dec
xor
(bad)
mov
inc
sbb
push
and
jb
stos
cmp
aaa
ret
dec
imul
cdq
jmp
mov
mov
out
jl
aaa
push
pop
ret
jo
imul
and
add
dec
das
and
push
fild
or
or
jg
loope
(bad)
adc
cli
sub
movs
xchg
(bad)
adc
loopne
pop
xchg
sub
cmp
mov
and
outs
mov
out
cli
mov
fild
sar
out
push
fwait
dec
jae
xchg
mov
add
jnp
(bad)
jns
ja
test
leave
lods
fld
cld
adc
lods
mov
fs
cs
xchg
pop
test
or
lods
cmc
test
int
fadd
ss
jle
or
add
adc
je
xor
pop
jmp
xor
jg
addr16
hlt
int
and
mov
jo
pop
arpl
rol
add
pop
pop
adc
int3
jno
push
add
jmp
adc
mov
sbb
mov
sbb
call
in
pop
mov
and
or
sbb
sar
inc
test
cmp
outs
loope
push
out
retf
js
(bad)
dec
fnstcw
repz
outs
add
dec
pop
iret
outs
dec
neg
aas
inc
or
dec
popf
dec
aam
adc
das
push
loopne
stc
(bad)
enter
in
mov
imul
ins
xchg
popa
dec
mov
pop
cmps
cmp
add
jns
int3
mov
es
into
push
xchg
adc
adc
test
dec
pusha
imul
add
loop
dec
sub
fcom
pusha
aas
retf
sbb
and
and
xchg
inc
push
icebp
adc
pop
(bad)
outs
movs
mul
fsub
lock
inc
imul
inc
or
mov
xchg
cmp
inc
xor
jecxz
imul
push
jge
inc
cs
push
mov
movs
pop
mov
xchg
push
mov
dec
shl
inc
mov
fisttp
retf
shl
mov
xor
jecxz
int3
in
sahf
fcomp
jae
clc
or
xchg
fwait
loopne
jnp
mov
aas
or
xchg
dec
and
pop
jp
aad
mov
pusha
cli
xchg
loopne
(bad)
dec
les
mov
cmp
xchg
lock
cmp
fsub
scas
mov
jns
jns
cdq
outs
mov
in
sti
sbb
loopne
(bad)
aad
mov
pop
vpavgw
nop
out
xor
inc
jbe
pusha
or
mov
inc
mov
(bad)
ds
jb
xchg
ss
push
adc
push
cmp
neg
pop
ret
dec
mov
inc
shl
inc
inc
sahf
stos
sub
test
push
test
sti
pop
mov
jl
sar
mov
xor
call
ins
mov
imul
add
lds
cmp
adc
mov
adc
aas
jge
dec
out
fmul
jp
into
int3
loope
adc
jbe
push
ss
cs
mov
dec
sar
mov
jecxz
inc
cmova
lods
aaa
pusha
mov
push
pop
ret
cmp
add
add
sahf
sub
adc
cmp
and
add
gs
loope
repz
inc
mov
jmp
jmp
xor
sbb
and
dec
xor
int3
pushf
das
cmp
test
lea
sub
outs
cli
mov
sub
xor
dec
icebp
jo
sbb
imul
js
xchg
adc
lock
sbb
adc
cmp
xor
pop
cmps
push
sti
mov
(bad)
push
sti
leave
cmp
adc
sub
loopne
imul
sahf
cli
push
mov
jns
(bad)
adc
mov
cmp
lds
push
sahf
scas
push
add
xchg
cli
nop
sub
lods
cmp
sahf
out
dec
inc
mov
pop
popa
dec
jmp
cs
dec
adc
enter
cmp
xlat
mov
push
int3
xor
or
icebp
inc
add
shl
mov
aam
dec
loope
add
cmp
les
out
jno
pusha
cmc
idiv
cmp
and
clc
cmp
mov
adc
xor
push
jmp
daa
fst
shr
int3
cmp
cmp
cmp
mov
push
scas
fldenv
jge
cli
jo
mov
les
movs
jbe
mov
and
les
push
(bad)
out
(bad)
push
sbb
mov
stos
sbb
dec
orps
mov
inc
mov
clc
mov
int
lea
mov
and
jle
and
mov
jns
cmp
mov
into
scas
inc
imul
and
and
in
add
or
sub
sar
outs
movs
xor
mov
test
sti
out
gs
dec
dec
push
bound
sar
mov
xor
jle
or
cli
push
push
push
mov
xchg
mov
loop
hlt
fwait
mov
cmc
fistp
pushf
xchg
push
xchg
addr16
fprem
jnp
dec
(bad)
out
mov
and
or
pop
bound
mov
pusha
test
jl
cmps
bound
and
and
pusha
mov
std
(bad)
jnp
cdq
leave
sar
and
retf
adc
das
lods
inc
add
add
sbb
jecxz
mov
cmps
clc
mov
mov
jmp
jne
xchg
dec
jo
cmps
sar
popa
test
clc
jns
inc
dec
les
cwde
ror
loop
push
jp
imul
mov
retf
push
test
xor
jno
push
dec
dec
sbb
sub
inc
push
mov
cwde
adc
fcmovnbe
mov
inc
pop
push
push
mov
(bad)
sub
jle
xchg
js
std
xchg
push
bsr
mov
movs
pop
sti
xchg
out
xor
mov
adc
mov
sub
pop
lds
push
leave
sbb
push
iret
std
dec
dec
(bad)
mov
in
push
inc
adc
sbb
push
js
in
inc
mov
in
popa
jns
jnp
inc
jecxz
add
cld
mov
ds
fmul
daa
les
sbb
mov
push
stc
bound
mov
or
xchg
inc
cmc
mov
ret
xchg
dec
push
or
adc
jo
aam
fs
fwait
mov
das
outs
retf
or
int
or
adc
adc
cwde
inc
rcl
and
lds
invd
ins
das
retf
fiadd
imul
jecxz
dec
pop
or
inc
xlat
push
icebp
pop
xor
mov
arpl
pop
jne
mov
inc
mov
pop
loope
not
xlat
mov
lea
mov
test
ret
leave
aad
je
cmp
add
xchg
not
lods
mov
scas
in
imul
mov
test
out
hlt
jp
pop
mov
pop
(bad)
outs
xchg
pop
jae
inc
jmp
push
xor
add
int
pop
mov
push
add
mov
pop
and
imul
das
xor
inc
inc
cwde
ds
xchg
pop
scas
push
push
pop
xchg
repz
push
sbb
data16
ins
test
sub
add
push
imul
add
cmp
data16
inc
add
repz
ins
mov
cmp
mov
add
dec
retf
jae
out
aaa
fiadd
push
dec
xor
fadd
cmp
fmul
or
add
mov
add
jle
cdq
mov
in
xor
dec
push
add
cwde
or
popf
test
aaa
mov
std
repz
outs
push
mov
cwde
and
dec
and
lock
push
adc
mov
xchg
addr16
loope
sbb
(bad)
clc
adc
hlt
aaa
inc
sbb
jp
nop
add
mov
push
out
fadd
and
push
setnp
mov
pop
xchg
jl
sbb
dec
test
pop
les
lods
js
(bad)
pop
enter
push
sub
fdiv
jmp
push
lds
sub
adc
in
push
and
or
xchg
fld
or
sbb
adc
add
inc
push
xchg
test
mov
outs
jge
adc
add
mov
std
mov
cs
dec
iret
(bad)
repz
xchg
clc
imul
mov
jg
in
xor
aaa
lahf
data16
xchg
aad
add
bound
pshufw
leave
int
dec
mov
jbe
mov
in
lods
stc
xchg
inc
js
es
mov
mov
ret
cdq
xchg
push
add
neg
xor
mov
sbb
mov
mov
sbb
xor
pushf
movs
push
sbb
push
mov
scas
adc
jg
imul
ret
jae
neg
and
jecxz
stc
push
xor
jne
ds
xor
jae
xchg
int3
mov
call
and
push
push
inc
mov
aam
mov
gs
lds
test
pop
mov
out
fs
inc
cs
ins
test
cmp
xchg
mov
and
pop
iret
iret
xor
in
and
ud0
xchg
pop
lds
bound
or
mov
adc
xchg
jp
inc
sahf
js
cmp
jbe
mov
sub
pop
icebp
jae
jge
push
xor
xchg
movs
mov
gs
adc
or
mov
push
fistp
and
and
and
mov
es
stos
xchg
repz
adc
mov
(bad)
bound
adc
repz
push
pushf
xchg
sub
inc
fs
jns
outs
xchg
lods
add
pop
hlt
cmp
test
jmp
in
jns
dec
push
iret
js
and
cmps
pusha
mov
(bad)
repnz
inc
sub
jae
or
stc
mov
sub
and
scas
stc
push
clc
pusha
icebp
pop
dec
add
ss
loopne
jmp
test
iret
push
call
add
es
int
data16
sbb
mov
pop
adc
jmp
inc
rcr
mov
sub
cwde
leave
sbb
cmp
scas
add
cli
add
add
scas
cmp
mov
(bad)
idiv
xlat
and
or
lea
call
test
lods
mov
aam
outs
movs
es
out
lods
test
and
adc
es
lods
jp
cdq
outs
popf
sbb
movs
jge
pop
int
mov
aaa
fsub
pop
jp
push
ror
mov
inc
cli
jbe
test
aaa
std
ret
sbb
test
into
out
cs
push
push
xchg
jmp
xor
(bad)
scas
mov
div
es
jle
mov
repz
jno
imul
outs
clc
fst
div
and
inc
jge
rol
add
fistp
xchg
jae
adc
ja
(bad)
pop
ins
call
movs
cmps
(bad)
jl
repz
dec
subps
mov
or
call
loope
imul
pop
cs
pusha
les
in
rcl
adc
iret
jecxz
or
sbb
xchg
jbe
push
sti
test
inc
into
cmp
lahf
mov
iret
dec
mov
add
dec
push
(bad)
fnstenv
or
fwait
sub
movs
or
test
sbb
retf
js
les
lea
xchg
mov
lds
inc
cwde
bound
movs
ins
jg
(bad)
pop
arpl
(bad)
test
movs
test
int3
pop
sahf
sahf
and
(bad)
pushf
adc
test
aas
(bad)
xchg
dec
push
cmp
push
call
repnz
dec
retf
mov
das
mov
mov
fldcw
jge
fsub
js
(bad)
or
jp
adc
popa
mov
xchg
xchg
cmp
imul
mov
(bad)
xor
mov
sub
(bad)
xchg
mov
lea
mov
(bad)
push
pop
sub
mov
mov
cmp
iret
mov
imul
(bad)
jne
sub
mov
cld
dec
ds
ins
adc
jmp
xchg
imul
fadd
call
xchg
inc
add
cs
cmp
jo
mov
retf
or
lods
mov
pop
sbb
jmp
fimul
cmp
jmp
cmp
in
jl
push
xchg
hlt
lea
imul
push
out
pop
mov
pusha
lahf
repz
out
mov
das
xchg
adc
popa
sub
jno
jl
pop
and
or
cmps
sbb
cmc
dec
ds
jmp
cmp
popf
inc
stos
adc
mov
imul
fimul
sbb
mov
inc
data16
push
sbb
aas
inc
add
xchg
xchg
pushf
add
sti
xchg
mov
sbb
rcl
mov
xchg
call
int
popf
and
mov
retf
jge
std
int3
add
sahf
push
daa
pop
cmp
dec
xor
xchg
or
(bad)
mov
scas
adc
inc
addr16
sahf
push
in
repnz
pop
fist
add
cli
pop
test
mov
jge
cwde
push
jle
dec
jns
or
or
shl
loope
iret
and
adc
aam
retf
mov
sub
mov
mov
xchg
pop
or
inc
arpl
ins
sbb
das
and
lds
mov
jne
aad
call
sbb
test
out
outs
shl
bound
fnstenv
cmp
fcom
loop
loop
js
push
into
sub
and
push
imul
pop
xor
xor
jl
pop
xchg
mov
adc
stc
sub
pop
retf
mov
push
push
dec
mov
push
cmp
inc
fdivr
sbb
test
mov
add
dec
fst
daa
jle
(bad)
out
movs
into
retf
sub
inc
gs
out
fiadd
sqrtps
mov
pop
loope
mov
scas
inc
hlt
jle
xor
push
in
ins
pop
mov
cmp
mov
shl
stc
xor
add
xor
daa
jmp
lods
ins
cs
pop
lods
jg
shl
movs
loop
mov
push
fisubr
mov
leave
icebp
(bad)
xchg
and
lock
leave
jbe
je
fdivr
xchg
push
fsub
out
fbld
les
(bad)
fcom
movs
movs
inc
mov
cmps
cli
stc
dec
dec
aad
fwait
test
and
loope
xor
jae
dec
fsubr
push
cmc
out
lea
jns
dec
lds
loop
or
pop
data16
dec
pop
test
(bad)
ret
loop
jmp
pop
idiv
xchg
add
jne
jecxz
sbb
mov
jg
or
pushf
and
pop
mov
stc
mov
lds
test
pusha
fnstsw
mov
xlat
out
jle
gs
dec
enter
enter
movs
rol
leave
inc
jne
mov
into
jno
xor
popa
cmp
mov
xor
push
xchg
cmps
push
or
jnp
sbb
adc
or
scas
cmp
jp
pop
clc
xchg
in
enter
inc
push
test
xor
push
ret
loopne
stos
xor
dec
mov
test
ss
jb
xor
es
lods
xor
pusha
inc
pushf
xor
dec
shl
sbb
out
push
(bad)
adc
fist
cmp
sar
mov
(bad)
std
or
adc
dec
mov
mov
leave
rcl
retf
sbb
mov
add
cmp
sbb
int3
push
repnz
xchg
loope
pop
mov
stos
lds
cmp
(bad)
xchg
stos
aad
push
out
pushfw
pop
addr16
and
mul
outs
dec
adc
cmp
sbb
push
sahf
or
loop
jge
inc
xchg
push
jmp
and
xchg
inc
push
xlat
sahf
repz
xchg
sbb
add
adc
les
cmc
add
push
bound
pop
retf
push
cmp
push
clc
ins
hlt
cmps
cmps
popf
in
mov
push
push
jne
repnz
les
inc
and
jb
mov
inc
idiv
xor
jge
(bad)
int3
mov
mov
mov
iret
cdq
inc
mov
jmp
mov
imul
adc
cmc
lea
pop
mov
mov
scas
sub
ror
lea
sbb
fs
xlat
pop
rol
test
mov
imul
sbb
mov
mov
mov
stos
lds
inc
xchg
cmps
cli
push
ficomp
inc
pop
cmp
fistp
ficomp
aas
bound
xor
cmps
lea
shl
push
xchg
sbb
loope
or
pop
es
vunpcklps
jle
das
jg
retf
mov
cmp
popa
adc
dec
mov
je
push
sar
ja
pop
cmps
ss
je
push
cmp
ins
bound
sbb
test
xchg
xchg
imul
iret
call
ret
xchg
push
mov
mov
out
dec
cmp
xchg
(bad)
mov
test
dec
sbb
sub
mov
retf
or
loop
sub
mov
cmp
inc
cwde
mov
int
sbb
jmp
es
push
xlat
repz
dec
push
xlat
fsub
sub
mov
cmp
lahf
push
lods
jl
data16
leave
inc
out
(bad)
and
mov
add
jbe
enter
cdq
es
fbld
imul
dec
test
inc
xor
inc
es
pushf
mov
gs
adc
mov
gs
inc
or
(bad)
ficomp
aas
test
ja
xchg
sub
data16
in
push
jecxz
or
out
push
push
fcomp
sub
xchg
push
dec
addr16
sub
movs
pusha
cmps
xor
popa
push
jo
or
jne
mov
push
out
test
test
dec
bound
nop
iret
jae
and
lods
loopne
dec
fwait
push
push
sbb
idiv
push
div
(bad)
jecxz
not
push
mov
(bad)
pop
mov
leave
dec
es
dec
not
std
loope
fwait
inc
or
je
gs
gs
fadd
add
jmp
inc
pop
sub
mov
and
and
adc
dec
push
inc
add
inc
lock
les
pushf
lds
(bad)
das
popf
jmp
cmp
push
cmp
sbb
mov
add
sub
inc
pop
sub
call
push
rcl
sbb
out
shl
stos
fcmovnu
std
pop
pop
or
xchg
and
out
retf
jmp
lods
daa
ficom
in
sub
imul
rcr
gs
or
add
inc
mov
add
adc
loopne
mov
dec
pop
jmp
fsubr
int3
and
add
fild
loop
ins
fsub
fld
out
jl
xor
hlt
scas
mov
jb
and
js
push
sbb
cmp
mov
xchg
xor
mov
retf
cmp
(bad)
outs
pop
pop
loop
leave
loop
cmp
xchg
xor
dec
or
sahf
lods
mov
push
xchg
rcl
jae
retf
addr16
push
push
test
mov
or
push
cmps
mov
and
or
sbb
mov
repz
pop
jecxz
sbb
hlt
js
imul
sbb
mov
sub
fsub
outs
jle
mov
pop
push
inc
sbb
(bad)
push
clc
sbb
sahf
and
or
test
loop
jbe
jnp
neg
add
data16
aas
shl
mov
push
fs
sub
jb
xchg
or
xor
adc
or
jmp
arpl
xor
fiadd
(bad)
outs
div
arpl
pop
sub
add
adc
dec
addr16
loopne
jle
xchg
xchg
out
mov
test
adc
(bad)
mov
(bad)
and
mov
movs
rol
mov
adc
arpl
xor
push
pusha
call
push
repnz
jno
rcr
add
popf
jbe
call
jbe
test
dec
push
sub
cld
and
lods
xor
(bad)
arpl
(bad)
mov
jecxz
pop
push
mov
jns
arpl
mov
shl
movs
xchg
push
push
pop
pop
xor
add
repnz
cmps
xchg
test
cwde
add
cmp
pusha
ja
cs
fcom
mov
jnp
pop
outs
xchg
call
add
ins
fidiv
cs
and
jbe
push
jle
test
sbb
mov
scas
in
pop
mov
aas
stc
int
out
aaa
sbb
inc
test
sub
lahf
ffreep
mov
jne
int3
test
lds
ins
out
bound
ret
call
xchg
push
ins
call
mov
not
pop
stc
or
xor
adc
sahf
jns
push
rcr
cld
xor
inc
ss
aam
neg
push
inc
fs
push
stos
(bad)
sub
pop
gs
xor
cwde
sbb
inc
cmp
xchg
cmp
push
dec
loop
sahf
dec
and
push
mov
aas
and
xor
sbb
xor
pop
sbb
loop
test
inc
push
fdivr
and
sti
mov
dec
rcl
sbb
inc
xchg
imul
popa
push
mov
sub
push
mov
sub
ror
adc
fnstenv
jecxz
pop
cdq
xchg
ret
rcl
stos
add
popf
mov
movs
ins
loop
mov
das
jne
mov
dec
dec
jb
mov
adc
jg
(bad)
sbb
test
push
mov
loopne
and
pusha
test
out
push
xchg
mov
inc
mov
sti
ret
fadd
xchg
inc
imul
and
lea
cs
in
les
adc
inc
hlt
out
mov
mov
mul
jno
das
dec
xchg
fwait
(bad)
mov
adc
dec
inc
mov
ret
pusha
ret
add
aad
jns
dec
aaa
jno
mov
push
fldcw
int3
movs
cmp
enter
(bad)
dec
jbe
sbb
test
mov
adc
sub
push
sub
pop
or
test
fwait
add
js
sahf
ins
push
inc
(bad)
enter
push
ud2
gs
enter
icebp
ret
jge
aad
sbb
sub
mov
leave
(bad)
push
jae
sbb
outs
dec
adc
sbb
mov
scas
shr
mov
and
mov
in
push
hlt
push
fcomi
js
scas
mov
mov
fs
fstp
pop
xchg
scas
mov
mov
and
dec
inc
xchg
jg
xchg
inc
dec
add
cmp
push
retf
mov
xchg
pushf
es
adc
stos
mov
mov
fcomip
jnp
and
in
sbb
repz
call
push
mov
jns
aam
int
imul
iret
or
pop
push
cmc
jbe
cmps
ret
or
dec
seta
add
fbld
push
cmp
je
ins
gs
pushf
ins
mov
leave
or
fwait
rcr
or
ins
or
mov
mov
inc
out
les
dec
mov
cmp
push
push
push
adc
sub
imul
dec
retf
or
repnz
xchg
adc
mov
pop
lea
(bad)
stc
pop
ret
pop
mov
loopne
addr16
push
inc
aaa
fmul
ret
fsub
lods
or
add
loopne
mov
xlat
test
pop
ds
sub
mov
add
xchg
or
pop
nop
push
jnp
mov
loop
into
mov
movs
push
dec
test
pushf
ror
shl
add
sub
dec
cmp
pop
pop
adc
je
sbb
add
cmps
ror
push
les
jp
xlat
scas
add
movs
cmp
ds
inc
movs
add
jnp
add
(bad)
or
adc
push
div
push
aaa
ds
jae
fsubr
mov
add
sbb
nop
leave
dec
pop
jmp
jnp
cdq
inc
mov
scas
mov
test
cld
push
or
xor
(bad)
mov
pop
addr16
cmp
pop
ins
outs
dec
out
push
pop
push
mov
loopne
fmul
or
out
xor
push
adc
push
sti
mov
mov
fstp
cmps
push
jle
aas
xchg
xchg
dec
jmp
mov
ffreep
push
push
dec
push
cs
cmps
aaa
out
call
test
mov
cmp
mov
mov
sbb
(bad)
loop
scas
popa
fwait
xchg
jmp
sahf
popf
mov
les
xchg
dec
xor
out
adc
int3
push
int3
pushf
mov
dec
pushf
jnp
or
int3
add
mov
dec
fisttp
xchg
or
add
add
cmps
dec
repnz
inc
repnz
daa
adc
pop
fcomi
pop
scas
in
lock
pop
cld
and
or
mov
push
les
xchg
sbb
lods
das
xor
mov
sub
push
sub
arpl
stos
movs
jle
(bad)
out
ss
cdq
or
or
lahf
pop
jmp
repz
add
loope
pop
mov
sub
cld
int3
and
sar
sti
shr
sub
fucomip
or
(bad)
fimul
sbb
add
dec
xchg
mov
call
inc
dec
dec
arpl
(bad)
adc
popf
sbb
add
add
test
les
push
lea
mov
js
mov
sbb
cwde
jae
pop
xchg
cmp
ja
push
(bad)
js
pop
stc
push
jo
mov
pusha
sub
push
lea
mov
mov
xchg
pop
and
ficom
mov
stc
fild
add
test
addr16
repnz
jg
jns
push
add
jp
dec
sbb
push
push
imul
cmp
jecxz
daa
mov
shl
dec
xor
xchg
fist
xor
mov
mov
xchg
imul
xchg
(bad)
push
push
enter
ffreep
into
jns
test
rcl
mov
adc
lock
dec
sbb
push
mov
dec
neg
xor
cmp
push
sbb
and
push
inc
jb
cli
mov
in
jg
test
int
mov
cs
loopne
mov
cmp
(bad)
jns
repnz
aaa
sub
inc
cmc
cmp
das
aad
int
call
mov
loop
adc
lds
xchg
add
(bad)
pop
pushf
stos
jae
xor
out
inc
hlt
push
scas
ret
addr16
pop
push
inc
jb
inc
jg
inc
dec
inc
jbe
(bad)
mov
or
mov
xchg
mov
lahf
mov
sbb
jg
in
int3
test
add
add
push
jmp
out
xor
mov
mov
imul
aas
shl
jmp
inc
inc
lea
inc
dec
int3
sub
sub
daa
jns
dec
push
push
popa
push
mov
xor
inc
sbb
xchg
sbb
xchg
jp
add
push
ror
icebp
add
cmp
pop
push
xor
outs
add
dec
and
neg
ins
gs
ins
mov
pop
sbb
ret
mov
fistp
mov
jne
sbb
aad
mov
add
sub
(bad)
data16
lods
loopne
push
sbb
into
pop
adc
adc
pop
dec
add
pop
ds
mov
jns
xchg
push
mov
jecxz
mov
and
xor
imul
jnp
and
shl
cdq
int
icebp
sbb
jle
cmp
(bad)
ror
sub
stos
mov
jge
pop
int3
and
cmps
push
fs
or
test
std
sub
mov
mov
cmp
sbb
xor
enter
push
icebp
or
sub
xchg
sbb
(bad)
aaa
push
cmps
jo
push
inc
addr16
sbb
int
push
mov
jge
(bad)
call
mov
out
jno
add
xchg
in
push
mov
stc
call
push
xchg
inc
cmp
ins
repz
inc
push
cld
aas
jmp
es
mov
mov
mov
loopne
mov
jecxz
inc
imul
push
push
pushf
jg
rol
xor
jmp
ja
lds
les
xchg
mov
imul
mov
out
fs
jno
out
std
pop
jno
out
jl
test
inc
stc
and
sti
call
test
cmp
out
mov
push
add
sbb
sti
add
packsswb
push
(bad)
jbe
mov
jns
jno
mov
and
nop
out
pop
or
aaa
pop
repz
jmp
fidiv
es
mov
movs
mov
dec
mov
cmp
adc
pop
push
jl
loope
dec
dec
fsub
cli
add
sbb
push
out
and
outs
xchg
mov
(bad)
pop
call
and
ret
sbb
imul
ins
push
fmul
stos
mov
push
aas
stos
(bad)
not
push
jp
pop
loope
or
mov
push
or
inc
push
ficomp
pop
loopne
cli
adc
cld
push
icebp
leave
push
out
cmc
pop
xchg
adc
pop
cld
or
cs
in
test
mov
repnz
(bad)
icebp
xchg
jp
inc
sub
mov
in
xchg
adc
daa
rcr
inc
dec
outs
mov
mov
sub
mov
jl
icebp
rcr
or
in
push
out
test
lods
dec
loop
test
jp
sar
inc
cmp
mov
mov
lahf
mov
pop
cmp
xchg
enter
clc
movs
mov
sub
cmp
adc
retf
stos
jbe
mov
jns
je
adc
das
cmp
pop
aam
xchg
xchg
es
pushf
jg
push
jb
(bad)
xor
retf
repnz
pushf
sub
jmp
loope
sub
xor
add
ins
xchg
dec
into
fist
pop
sbb
out
push
fsubr
cmp
jmp
cmp
outs
or
and
jno
inc
mov
adc
push
movs
inc
in
mov
pop
leave
push
in
das
repz
fs
sub
and
mov
mov
push
add
iret
push
dec
aaa
add
in
adc
or
mov
jbe
sub
inc
(bad)
jbe
push
pop
loopne
mov
dec
jbe
mov
mov
ja
imul
xchg
adc
daa
out
push
cli
xor
in
jbe
pushf
sub
rcr
fldcw
lods
mov
imul
lea
movs
fst
add
pop
ja
lods
cmp
retf
in
xchg
dec
cmp
mov
adc
in
enter
call
inc
ret
cmp
adc
mov
std
(bad)
popa
movs
bnd
pop
movs
hlt
sbb
sbb
add
pop
out
inc
shr
or
xchg
sub
retf
dec
pusha
ins
and
stc
sar
xchg
cld
push
and
inc
sbb
scas
outs
add
xchg
(bad)
adc
add
enter
mov
xor
iret
adc
pusha
iret
pop
inc
adc
mov
pop
cmp
fidiv
call
rcl
into
sahf
jbe
in
aad
pop
std
jo
jno
dec
aaa
fild
lea
lods
(bad)
fs
cmp
lea
fld
retf
mov
stos
pop
aaa
xchg
(bad)
popf
ret
fnstsw
sbb
add
arpl
xchg
jbe
hlt
loopne
or
in
cs
fiadd
mov
sub
call
inc
mov
jg
cmp
or
ss
cmc
inc
rcr
cmp
xchg
cld
aad
sub
retf
push
pop
loope
sbb
scas
cmp
xlat
jbe
jmp
aaa
fidivr
lahf
mov
aas
sbb
xchg
push
loopne
mov
inc
xor
pop
mov
ins
xor
xor
(bad)
in
int3
pusha
jbe
ds
sahf
movs
adc
inc
mov
mov
test
(bad)
mov
fsubrp
pop
fist
cmp
sub
push
les
popf
mov
rcl
sub
jp
inc
mov
xor
pop
ds
mov
test
in
xchg
call
pop
(bad)
jmp
(bad)
int
fist
aam
or
cmc
fstp
cmp
mov
enter
mov
mov
in
pop
xlat
dec
js
rol
jle
mov
jmp
push
mov
push
das
pushw
(bad)
xchg
push
lea
cmc
xchg
xchg
and
pop
push
mov
add
(bad)
cmps
bound
(bad)
mov
cli
push
adc
push
jmp
div
sub
sbb
les
and
pop
mov
mov
js
or
ins
mov
mov
sub
fnstenv
xchg
(bad)
dec
dec
jns
sub
jmp
mov
sbb
shr
xor
push
pop
std
pop
je
cli
sbb
adc
mov
sar
mov
xor
dec
movs
js
inc
test
lods
xchg
ss
nop
push
mov
or
xor
push
push
push
loop
pop
jecxz
movs
lods
cmps
ret
sub
sbb
call
xor
mov
jbe
enter
sar
movs
mov
mov
ret
or
push
mov
les
jo
dec
adc
scas
pop
js
enter
mov
out
push
fwait
add
pop
pushf
outs
aaa
imul
xor
adc
rcr
push
pop
pop
adc
out
sar
xchg
jg
gs
icebp
add
dec
pop
cmp
or
test
lds
xchg
mov
mov
ins
imul
xchg
enter
jecxz
push
sub
xor
xchg
dec
jecxz
rcl
mov
or
or
dec
mov
xor
sub
and
or
sub
outs
jg
daa
and
push
push
jecxz
dec
loope
cmp
imul
icebp
sub
xor
jmp
imul
movs
ins
enter
jae
xchg
mov
emms
ins
xchg
xchg
push
adc
sub
div
dec
mov
cmps
out
bound
cmp
aad
stc
popf
aam
mov
shr
and
xor
lea
jle
dec
mov
loopne
adc
mov
push
test
sub
pusha
push
in
pop
sbb
mov
cmc
add
or
repz
stos
xor
mov
push
inc
lahf
add
push
adc
out
(bad)
iret
fwait
sbb
imul
jle
data16
adc
cmp
mov
int
icebp
cs
mov
lds
jae
rol
outs
xchg
or
mov
xor
or
(bad)
repz
and
inc
adc
and
in
dec
xchg
dec
arpl
xor
push
jbe
rol
mov
imul
gs
inc
jmp
sub
xlat
add
pop
sub
test
jmp
pop
lahf
xor
ret
arpl
xchg
imul
repnz
pop
xchg
mov
push
retf
pop
sbb
dec
inc
push
shl
iret
push
cmp
lds
push
int
ds
cmc
lods
pop
shl
mov
shl
(bad)
lods
pop
xchg
sbb
xor
das
pop
fistp
int3
shl
addr16
push
push
test
xor
push
sar
mov
cmp
pop
xchg
and
sub
adc
push
sbb
xor
xor
ret
pop
sub
not
out
mov
cmp
xchg
and
(bad)
and
or
pop
or
imul
add
xor
xchg
jp
xchg
in
aad
lahf
jns
pop
push
inc
dec
fistp
(bad)
mov
fsub
adc
push
sbb
mov
or
xor
(bad)
pusha
mov
(bad)
sbb
push
(bad)
pop
out
aad
ror
das
test
and
(bad)
and
mov
adc
ins
dec
sub
les
call
mov
adc
into
pusha
mov
psrad
sbb
loop
int3
xor
pop
jbe
loope
sbb
jecxz
hlt
cmc
and
sbb
xchg
adc
loope
in
cwde
aad
and
(bad)
cmps
adc
mov
mov
jmp
sbb
inc
and
dec
mov
push
or
adc
xor
movs
xchg
and
fnstenv
push
div
adc
adc
fst
jns
mov
xchg
lds
aad
push
dec
sbb
push
cli
in
pop
cmp
push
popa
ins
xchg
test
popf
loopne
outs
sahf
xchg
or
pop
cdq
push
aas
gs
ret
jae
xor
mov
sbb
ds
ret
adc
out
xor
sub
dec
test
rol
sub
cmps
sub
dec
outs
and
rcl
inc
mov
in
aam
and
bnd
push
dec
jg
test
xor
stos
(bad)
imul
xor
popa
pop
mov
inc
fld
es
xor
test
(bad)
ret
jnp
outs
jle
imul
xor
add
xchg
into
stos
dec
adc
jge
cdq
test
ror
mov
pop
sub
sub
pop
fild
push
dec
sub
mov
mov
sub
push
or
mov
aas
jle
dec
jno
sub
adc
scas
jl
je
mov
call
mov
ja
pop
int3
jno
cmp
adc
popf
inc
out
and
dec
ds
movs
pop
or
in
add
jno
lahf
mov
bound
or
sahf
test
xor
pop
dec
sbb
popa
fdivr
mov
inc
movs
push
jmp
lea
push
addr16
(bad)
or
fisttp
repz
inc
push
adc
in
sbb
aaa
les
pop
push
jg
mov
and
xchg
mov
repz
ret
pop
call
test
jne
popf
cmps
or
mov
or
cld
dec
int3
xor
fxch
paddsw
jo
into
cmc
mov
jns
(bad)
loop
popf
ins
jecxz
or
int3
das
and
movs
sbb
dec
mov
cmp
enter
int
int
dec
vpmulhw
adc
mov
movntq
out
jecxz
and
xor
fidivr
and
mov
icebp
repz
jb
push
stos
add
adc
push
sub
pop
mov
ret
and
mov
(bad)
nop
mov
mov
sbb
push
jle
pop
mov
inc
call
pop
jnp
or
js
loop
mov
mov
icebp
and
mov
lahf
stos
mov
push
in
jne
jmp
cmp
xor
scas
pusha
or
daa
daa
add
or
(bad)
stc
and
jno
pop
loope
dec
sbb
xor
scas
pushf
jmp
xchg
js
shr
ss
pop
mov
faddp
jp
jb
xor
and
xchg
mov
js
mov
pop
rcr
mov
sbb
xlat
lds
xchg
adc
addr16
add
rcl
cmp
pop
add
mov
dec
into
or
pop
jbe
pop
ret
xor
xchg
push
pop
sbb
inc
xor
test
sti
popa
pop
stos
aam
inc
dec
mov
aaa
mul
lds
sar
pop
pushf
jg
push
jmp
add
mov
cli
pop
sahf
fiadd
mov
hlt
sbb
je
cs
cld
adc
dec
(bad)
push
cmp
push
mov
cmps
add
and
jae
push
push
xor
je
adc
or
cmp
push
push
sti
mov
or
aaa
dec
gs
int
adc
xor
dec
ins
sbb
sbb
out
je
mov
pop
xchg
aad
loope
in
movs
add
in
inc
dec
outs
cmp
imul
add
and
scas
mov
jo
sbb
push
xchg
and
js
js
test
xchg
call
lock
xor
mov
cmp
and
lods
push
movs
mov
mov
ja
mov
or
sar
ja
inc
mov
cmps
lods
rcl
adc
hlt
mov
clc
inc
int
inc
aad
addr16
jmp
je
add
fwait
shr
icebp
mov
xor
idiv
test
test
fist
cmp
ins
js
fidivr
jmp
push
mov
or
call
repz
idiv
cli
in
(bad)
pushf
icebp
jge
es
daa
cdq
scas
arpl
and
sub
bound
jmp
jp
popf
jae
xchg
xor
jp
ret
loop
jecxz
in
in
call
and
jbe
mov
(bad)
mov
mov
imul
sbb
out
push
in
pop
cmc
fst
cmp
jbe
jo
push
lods
dec
pop
mov
push
or
push
lock
add
out
jecxz
and
cmp
add
ins
push
stc
pop
mov
repz
repnz
push
sbb
cmp
repz
xchg
push
sahf
jg
idiv
into
gs
in
xor
sub
jnp
jle
mov
ja
outs
mov
mov
push
aam
inc
xor
enter
(bad)
and
not
mov
aad
mov
lock
add
lods
data16
xchg
movs
ins
mov
test
xchg
in
fs
gs
frstor
mov
push
nop
and
les
dec
scas
mov
dec
xor
jbe
push
adc
adc
pop
add
cmps
fsub
sub
xchg
ror
mov
mov
std
add
or
add
mov
jp
xchg
(bad)
in
ins
lods
sbb
shr
push
(bad)
push
add
sbb
pop
out
inc
das
fidiv
mov
repz
push
cmp
ffree
stos
test
pop
dec
push
jg
adc
sti
aad
dec
and
js
mov
mov
stos
add
dec
cld
dec
or
add
out
lods
push
mov
fcom
xchg
iret
mov
cld
add
cs
sub
mov
and
xchg
jne
xor
adc
sqrtps
xchg
or
add
add
gs
jmp
add
xor
cmps
aam
out
neg
gs
xor
(bad)
jle
mov
movs
adc
repnz
sub
and
xor
mov
and
jns
in
test
fcomip
call
mov
sahf
inc
pop
sbb
sbb
xor
xchg
or
in
sub
pusha
inc
xor
cld
daa
imul
xor
push
rol
sbb
xor
fdivr
inc
out
jl
adc
add
adc
cdq
jns
mov
test
pop
stos
sbb
mov
adc
jb
dec
hlt
test
(bad)
xor
dec
in
and
xchg
xchg
xor
dec
retf
push
adc
in
push
sub
add
pop
(bad)
push
sbb
enter
aas
call
cdq
cmp
push
outs
add
dec
cmp
sbb
(bad)
push
mov
gs
je
les
dec
cmps
and
fsubr
jecxz
xchg
sbb
iret
repz
inc
add
loope
pusha
mov
pop
enter
(bad)
gs
dec
jo
push
mov
inc
dec
mov
mov
clc
mov
xchg
cmc
(bad)
ins
mov
inc
jb
push
mov
jns
mov
push
fwait
les
repnz
jmp
into
test
lar
xchg
mov
cld
push
or
xchg
dec
div
call
(bad)
cmp
add
(bad)
out
retf
mov
fistp
xor
xor
xchg
dec
fs
dec
inc
hlt
shl
adc
icebp
add
(bad)
sbb
jmp
adc
inc
mov
ins
or
fisttp
or
cmps
sbb
ret
cli
push
pop
sbb
hlt
(bad)
outs
add
add
popf
sub
imul
aad
(bad)
lods
fs
mov
dec
mov
adc
rcr
dec
out
mov
lods
jo
jle
and
pop
adc
sar
mov
loope
les
xchg
sahf
ds
cmc
mov
sub
or
jge
lea
push
stc
xor
out
test
sbb
out
jae
inc
test
mov
pop
sbb
fidiv
es
pusha
cld
push
push
jbe
xlat
sub
mov
and
aam
movs
sbb
fwait
push
mov
xchg
js
cld
jae
mov
xor
loop
cmps
rol
fmul
jl
mov
imul
pop
mov
retf
jb
iret
inc
(bad)
mov
ja
neg
lods
das
jo
sti
das
cmp
aad
and
mov
fmul
push
sti
sbb
dec
add
ins
cli
jmp
dec
mov
(bad)
outs
sahf
jg
or
xchg
sbb
call
mov
retf
clc
sahf
ins
out
add
xchg
jmp
adc
jb
mov
pusha
pop
cmp
push
es
popf
popf
enter
fistp
mov
mov
je
xor
les
push
push
call
gs
cwde
mov
xadd
(bad)
ds
fidiv
test
dec
in
jecxz
inc
das
sub
dec
push
inc
pop
stc
inc
ficom
push
shl
mov
dec
test
sbb
sbb
cmps
xlat
test
pop
jns
push
inc
mov
(bad)
push
(bad)
lock
ins
mov
stc
inc
inc
and
dec
fimul
cmps
sub
jecxz
repnz
push
outs
jbe
jg
xor
pop
scas
fnsave
or
xor
lods
aas
cmp
xor
shr
push
push
lods
pop
pop
add
call
mov
cmp
stos
popa
xchg
nop
cmc
pop
ins
jge
jb
lods
(bad)
cwde
inc
dec
add
cdq
mov
push
aaa
scas
mov
inc
xor
aaa
cld
fcmovb
mov
jae
leave
jmp
dec
fld
adc
stos
or
xchg
stc
rol
mov
xor
fwait
ror
leave
retf
mov
sub
jns
mov
jecxz
out
pop
shl
loop
fxam
cs
inc
xor
sbb
add
repz
cwde
ss
xchg
fdivr
ins
ror
ret
pop
outs
nop
pop
addr16
add
mov
mov
cmp
xchg
or
xor
xor
mov
jmp
sub
outs
xor
push
fimul
jne
movs
mov
add
test
xor
xchg
stos
push
ins
sbb
xor
into
jge
call
mov
bound
(bad)
retf
inc
sar
pop
pop
fidiv
test
(bad)
fsub
pop
(bad)
fs
addr16
adc
mov
lock
mov
add
aaa
xchg
xchg
repz
shl
dec
mov
mov
jge
adc
sub
ds
shl
lods
xor
or
pop
mov
dec
test
dec
loopne
into
je
mov
mov
std
cmp
out
mov
sti
ja
pop
in
dec
xor
ret
xor
or
and
rol
mov
or
dec
nop
pop
dec
jge
jge
xchg
test
scas
lods
jp
inc
mov
add
add
test
xchg
or
fsubr
sub
jne
sbb
pop
adc
stc
xor
leave
and
jo
xchg
aad
mov
push
sub
ret
dec
movs
in
sti
xlat
(bad)
xor
mov
push
mov
call
imul
andps
mov
aas
add
and
jecxz
cmp
scas
dec
add
pop
jae
cmp
jb
inc
ficomp
aas
sub
inc
cmc
inc
adc
add
cwde
shl
add
es
es
and
pushf
cli
popa
mov
clc
dec
jo
dec
inc
aam
lds
push
bound
adc
cmp
xchg
push
inc
xor
sbb
lods
cmps
mov
dec
pop
mov
push
cmps
rol
fs
cmp
aad
sub
into
ss
imul
arpl
sub
dec
sbb
loopne
icebp
aaa
xchg
mov
mov
mov
loopne
ins
je
jle
out
sub
cmovae
xchg
lahf
xor
aad
mov
add
inc
jnp
aas
daa
xlat
xchg
push
and
adc
out
lods
loope
mov
pop
mov
cmp
shr
cmp
ins
cs
push
pop
outs
jo
pop
adc
add
scas
sahf
ins
out
inc
retf
mov
je
(bad)
mov
xchg
push
or
into
pop
inc
retf
jge
pop
jne
dec
mov
push
add
xor
mov
jg
movs
mov
out
jnp
jmp
imul
add
test
xor
aaa
hlt
pop
xchg
mov
xchg
adc
bound
(bad)
pusha
sti
je
cmps
nop
test
sbb
mov
cmp
push
pop
mov
pusha
pop
loope
jmp
(bad)
int3
jge
and
mov
je
xchg
dec
mov
or
std
test
adc
add
mov
adc
jae
adc
lahf
psubd
out
shl
push
(bad)
enter
cmp
push
adc
mov
cmp
int
push
shl
pop
mov
cdq
repz
inc
test
rol
das
(bad)
loope
lods
adc
add
cmps
and
cdq
fisubr
ficom
mov
pop
das
sub
int
jg
adc
in
xlat
xor
leave
imul
or
push
jae
popf
mov
sbb
ret
cdq
in
lock
sti
fsubr
call
into
push
mov
mov
les
lods
xchg
daa
mov
inc
scas
and
mov
into
adc
mov
scas
cld
cld
sub
jne
rol
push
pop
(bad)
es
inc
fisubr
pop
lds
mov
inc
aam
aam
bound
stc
push
inc
sub
inc
xor
pop
mov
outs
mov
and
imul
retf
push
and
xor
(bad)
int
mov
dec
arpl
fnstsw
or
ds
pop
call
xchg
out
push
and
movs
aad
push
push
je
jbe
retf
dec
mov
cwde
int3
xor
adc
sbb
cld
stc
je
xchg
lds
sbb
jmp
in
cmps
mov
mov
imul
call
test
pop
daa
and
lea
dec
addr16
cli
inc
add
sbb
lahf
mov
mov
popf
sahf
push
ss
xchg
jmp
pop
push
xor
xchg
xchg
stos
ss
cmp
xor
cli
sub
mov
xor
pop
jl
(bad)
xchg
loop
or
test
fidivr
pop
mov
xor
or
xlat
(bad)
clc
sbb
xchg
fs
rcl
xor
add
in
inc
bound
cmp
mov
jae
ret
ror
fcmovbe
and
sbb
and
xchg
sub
jmp
in
in
mov
push
cmp
and
sbb
jno
mov
retf
inc
fs
cmp
loopne
add
push
scas
shr
xor
sbb
js
mov
ja
jle
call
bound
ins
sar
repz
mov
inc
mov
mov
jl
sahf
xchg
inc
sti
(bad)
inc
mov
jecxz
mov
int
jo
xchg
push
sbb
jbe
mov
mov
adc
pop
and
xchg
in
jbe
jl
iret
enter
jecxz
mov
fsub
mov
repz
sbb
cmp
push
or
or
cmp
je
xor
retf
lods
movs
aaa
jbe
int3
movs
inc
cli
iret
cmp
add
jbe
ds
call
es
repnz
adc
jp
sar
and
int3
xchg
mov
xchg
aas
pop
cli
div
idiv
adc
inc
les
adc
dec
sar
xor
das
mov
popf
ror
jp
out
jle
rol
add
mov
mov
gs
push
xor
test
sub
inc
js
sub
cld
jmp
jge
int3
pop
inc
repnz
(bad)
test
std
xor
adc
or
ss
add
fcomp
and
mov
mov
scas
hlt
stc
fistp
xchg
hlt
fisttp
imul
test
sub
mov
int
sbb
loop
xchg
neg
mov
push
pop
push
jge
pop
mov
leave
int3
inc
inc
xor
les
in
jbe
int
fcomp
test
cmp
mov
pop
dec
call
push
call
or
lds
fimul
jmp
je
shl
data16
les
mov
push
cmp
into
inc
(bad)
jbe
mov
push
cmp
out
popf
rol
pop
inc
out
cmp
imul
aad
push
mov
scas
lahf
ins
pop
es
xlat
retf
mov
sub
dec
jae
arpl
in
or
pop
xchg
jl
jns
out
scas
dec
hlt
cmp
adc
jecxz
aam
je
dec
les
repnz
sub
lahf
or
pop
or
jns
inc
mov
mov
or
or
and
pop
mov
jne
mov
cdq
and
inc
mov
mov
and
cld
mov
das
adc
aaa
or
fiadd
mov
jcxz
inc
mov
ret
ins
or
rol
rcl
int3
dec
cs
mov
mov
jmp
sub
inc
add
in
das
xchg
jle
sub
sub
jno
add
xor
je
and
jae
lea
in
icebp
leave
add
mov
psllw
sub
fst
sub
sti
sar
cmps
xor
stos
jnp
dec
mov
loop
pop
sub
call
ret
push
cld
push
and
xchg
mov
push
cmps
sbb
lock
push
dec
mov
(bad)
sub
ret
sub
lods
mov
in
or
adc
or
fiadd
jnp
repz
mov
ret
add
ja
repnz
sbb
fs
pop
loope
in
leave
pop
pusha
sti
cmp
pop
pop
xchg
jmp
mov
out
dec
push
nop
xchg
ja
sbb
loope
sbb
ss
ror
fistp
out
test
xchg
es
jl
shl
aas
or
ds
or
fwait
sbb
jle
xchg
and
mov
daa
test
rol
(bad)
or
idiv
sbb
rcr
push
dec
aad
jp
sbb
lea
in
fsubr
add
jg
add
mov
adc
fisub
in
mov
mov
mov
xchg
cdq
jge
or
cmc
push
cmc
out
rcl
(bad)
(bad)
sti
push
test
jmp
add
movs
mov
mov
inc
cwde
not
lea
mov
outs
stos
repz
jne
out
stos
iret
jmp
stos
das
mov
inc
daa
mov
jl
jecxz
add
xchg
mov
cs
scas
dec
xchg
test
out
pop
or
test
push
pop
or
mov
pop
lods
sbb
xor
mov
pop
mov
jmp
xchg
jecxz
dec
std
sub
imul
jg
inc
inc
pop
add
sub
jl
fidiv
inc
arpl
dec
pusha
adc
out
sub
xlat
in
lock
add
mov
sbb
push
push
pop
add
and
pop
cmp
rcl
inc
and
int3
test
pop
sub
mov
rol
mov
arpl
mov
enter
xchg
xor
out
and
(bad)
sub
and
dec
jecxz
dec
add
repnz
add
cmps
fist
dec
cdq
jl
inc
(bad)
out
call
shl
data16
push
sub
retf
mov
sub
add
sbb
retf
ficomp
jle
sar
outs
shl
mov
repnz
push
sub
xchg
mov
stos
cs
xchg
pop
jmp
jo
mov
push
imul
mov
call
retf
adc
je
lahf
push
repnz
jmp
mov
ret
and
pop
mov
pop
sub
sub
mov
test
aam
push
mov
sbb
fsub
cld
aaa
or
sbb
inc
xor
or
sub
inc
add
ins
neg
(bad)
sti
data16
movs
push
sub
fisubr
sahf
(bad)
cmp
retf
dec
fist
les
bound
jo
movs
pop
pop
push
iret
or
sub
enter
mov
inc
jecxz
dec
mov
shr
rcr
mov
cmps
cmp
dec
xchg
sub
jno
xchg
cdq
xor
inc
shl
sub
stos
push
repz
add
push
int3
mov
sahf
mov
cli
loop
leave
loope
push
sub
mov
dec
push
sub
es
cmovge
sub
mov
scas
mov
push
pop
inc
and
pop
ret
sahf
pop
pop
and
leave
aaa
push
call
or
mov
ja
sub
js
outs
fld
inc
cmps
jb
ret
in
int
nop
pop
movs
inc
imul
xchg
fimul
and
call
jno
into
sbb
aad
pop
push
mov
data16
scas
jne
bound
pop
mov
popf
in
popa
sbb
sbb
xchg
mov
jo
repz
out
sub
pop
inc
sub
iret
in
popf
cmp
sti
mov
or
les
aaa
mov
dec
inc
imul
aad
ret
les
xchg
mov
sti
nop
jmp
jne
(bad)
int
femms
imul
xchg
ret
sbb
push
mov
sar
adc
or
push
ficomp
shl
outs
fstp
xor
sub
lahf
int
stos
add
fnstsw
imul
dec
stos
and
movs
out
jg
ror
xchg
sub
mov
adc
push
ret
mov
mov
test
mov
xchg
xchg
mov
jae
adc
add
ds
and
je
jne
fnsave
call
adc
lock
pop
mov
out
(bad)
enter
sbb
int3
call
test
xor
(bad)
adc
push
es
retf
scas
and
fidiv
add
jg
mov
lods
imul
movs
neg
inc
aad
mov
shl
icebp
xor
inc
sahf
ret
pusha
(bad)
icebp
dec
mov
mov
fsubr
es
jge
push
jmp
or
hlt
push
adc
mov
aas
adc
ins
popa
inc
popa
imul
fstp
and
lea
mov
jne
jns
outs
fwait
cdq
sub
leave
xor
in
scas
cmp
fbld
sub
push
fbstp
jmp
push
add
test
dec
pushf
ins
gs
scas
aam
mov
add
dec
xor
sub
xchg
inc
mov
out
icebp
retf
movs
call
xchg
cwde
xchg
push
test
movs
jnp
out
pusha
out
or
shl
(bad)
push
stc
shr
lock
(bad)
lea
ret
and
ds
or
jl
and
jecxz
das
out
and
cmp
jmp
jp
mov
xor
add
shr
sub
data16
gs
xor
sbb
stos
mov
add
mov
ins
pop
sub
pushf
sbb
imul
loop
inc
adc
dec
push
xor
pop
stc
scas
or
sbb
cld
mov
push
enter
jecxz
push
pushf
cmp
fisub
cmp
fs
sahf
pusha
sbb
jmp
dec
adc
mov
lea
dec
jns
inc
stos
cmp
pop
dec
push
call
mov
ins
retf
push
das
mov
xor
not
xchg
cmps
ins
outs
repnz
ret
mov
daa
xlat
dec
addr16
arpl
add
pop
ja
call
inc
jge
mov
jmp
add
fadd
cmp
lahf
xor
enter
shr
loop
jo
arpl
and
inc
adc
stc
push
mov
pop
pop
jmp
lds
test
dec
and
push
xor
xchg
dec
ret
ins
adc
push
adc
fdivp
cmp
jge
sahf
mov
aam
pop
xor
cli
or
sub
lds
in
cdq
call
pusha
in
dec
test
cmc
or
jl
xchg
cwde
xor
xor
int
xchg
fwait
add
test
jnp
pop
cmp
pop
mov
add
lods
mov
push
mov
popa
les
test
pop
jae
xchg
call
leave
jmp
inc
(bad)
pop
push
mov
popf
xchg
cs
test
aas
adc
inc
sub
lock
ds
mov
and
test
inc
fcomp
dec
mov
sti
mov
pusha
xor
and
cdq
movs
mov
(bad)
out
ja
mov
push
sub
inc
fcmovb
xor
into
loop
xchg
mov
or
mov
ins
je
in
imul
sub
push
xchg
enter
inc
and
adc
ds
test
imul
xchg
idiv
push
mov
jmp
call
out
dec
jns
sahf
aaa
dec
inc
fucomi
sub
test
pop
addr16
push
pusha
mov
push
iret
xor
pop
add
adc
mov
data16
popa
fwait
loope
dec
rcl
xor
adc
(bad)
inc
inc
ss
push
mov
inc
les
mov
in
sbb
imul
push
jge
(bad)
push
xor
jno
shr
inc
lods
sub
in
inc
push
jl
pop
and
(bad)
call
std
ds
jbe
out
fdiv
dec
aas
xor
or
add
inc
retf
push
pop
xchg
push
inc
and
test
fucomi
or
ret
pop
mov
popa
add
in
movs
stc
shl
dec
add
jecxz
and
xchg
pop
xchg
mov
adc
lds
add
jo
inc
movs
mov
rcl
inc
loope
xchg
xor
aam
(bad)
repz
nop
(bad)
mov
out
test
pop
cmp
out
movs
cwde
mov
cdq
push
adc
fisttp
push
(bad)
out
or
mov
cmp
dec
cld
sub
sti
mov
stos
shr
push
nop
xchg
lea
cmp
lock
adc
test
stc
jb
inc
ret
shl
les
xchg
or
scas
cmp
rcr
sub
or
sbb
ds
mov
cmp
push
add
retf
popf
out
mov
xor
(bad)
repz
fbstp
xchg
xor
push
xchg
dec
or
outs
push
sub
mov
or
bound
(bad)
sbb
in
pop
jno
adc
cmp
jno
or
sub
jbe
jns
jg
jmp
and
ss
push
test
out
and
sbb
iret
int
mov
popa
mov
lods
dec
add
dec
lds
ficom
mov
sbb
imul
mov
xlat
inc
sqrtps
popf
jl
(bad)
ror
sbb
mov
mov
sub
sahf
(bad)
sbb
cwde
cvtpi2ps
bound
pop
ret
arpl
rol
fistp
push
sub
fisub
int
inc
ja
test
jle
pop
movs
mov
int
mov
dec
outs
ds
jmp
lods
cmp
adc
call
movs
inc
push
pop
add
sbb
xor
mov
jne
sub
or
xor
div
data16
pop
daa
sbb
sahf
cmp
mov
pop
jo
or
mov
mov
add
xchg
and
push
cmp
aas
or
lea
sbb
push
xchg
mov
enter
inc
(bad)
outs
add
inc
fld
cmp
into
dec
jns
dec
(bad)
out
add
push
pop
out
aas
push
fldenv
sub
xor
mov
sub
test
or
jmp
cmp
sar
mov
lods
outs
push
xchg
clc
(bad)
out
xchg
mov
mov
cmps
sbb
mov
sbb
mov
mov
sbb
or
mov
dec
sti
pusha
ins
les
mov
shl
test
inc
mov
in
mov
sub
shr
mov
add
mov
cld
and
and
sbb
mov
jge
xor
push
ret
mov
cmp
xor
out
movs
js
add
out
jl
fldcw
pop
jne
dec
std
cld
retf
push
mov
mov
sbb
and
out
sbb
xchg
mov
je
adc
or
pusha
sti
jl
inc
lea
lock
and
xor
push
xor
loopne
scas
xchg
fimul
cli
xor
shr
mov
pop
mov
or
dec
mov
enter
adc
sbb
lock
rcl
jp
fndisi(8087
stc
imul
fistp
aam
scas
ds
inc
je
and
mov
rcr
inc
out
ja
into
dec
imul
cmp
jle
in
scas
adc
cmps
js
adc
cs
sub
sbb
add
pop
xlat
outs
adc
pusha
ins
mov
(bad)
fwait
push
mov
jo
mov
inc
push
xchg
add
pop
mul
leave
and
push
jecxz
sbb
aas
cld
mov
and
in
shl
push
dec
into
pop
in
fxam
test
shr
ds
das
push
pop
push
sub
jge
call
inc
popf
sbb
or
pop
shl
or
nop
xchg
(bad)
fmul
push
std
dec
inc
mov
jl
(bad)
das
add
jmp
mov
cdq
cmc
push
test
push
mov
cmps
adc
pop
jmp
call
pop
lods
cmc
xor
mov
lock
mov
loope
mov
rcl
pop
jbe
(bad)
dec
in
cmp
fucomp
adc
and
dec
les
fcmovnb
cmp
cdq
pop
cmc
pop
ss
test
cs
shl
setnp
aam
push
inc
out
push
stc
mov
adc
cld
mov
dec
and
sahf
push
sbb
add
push
xchg
aam
leave
cmps
fstp
call
mov
jmp
xchg
push
mov
xchg
xor
loopne
or
lea
jmp
fs
and
nop
ret
mov
cmp
push
sar
adc
icebp
adc
call
movs
shl
lods
pop
dec
push
push
mov
sub
pop
fist
sub
mov
cmps
(bad)
in
adc
in
(bad)
test
jg
xor
cmp
cmps
stc
mov
(bad)
repz
mov
sahf
and
dec
cmp
xchg
sbb
fsub
ret
call
ffreep
lock
push
pop
int3
pop
or
xchg
arpl
scas
mov
pushf
into
xchg
rcr
popa
mov
push
fldcw
(bad)
jmp
ret
inc
or
ficomp
mov
dec
ficom
or
test
jle
fiadd
adc
sahf
pop
adc
sbb
nop
lahf
jno
push
push
sub
ror
cli
out
inc
addr16
mov
mov
in
movs
in
daa
mov
jns
pop
movs
(bad)
imul
sub
cmp
add
or
or
sbb
push
call
xchg
jl
test
mov
pop
pop
or
xchg
imul
mov
pslld
or
faddp
mov
lods
jle
sbb
mov
pushf
jle
iret
jb
cmp
enter
test
sub
fnstenv
or
mov
dec
jmp
xchg
sub
rcr
pop
pusha
stos
mov
out
mov
jbe
push
(bad)
adc
inc
outs
push
add
add
enter
xor
mov
test
add
sbb
imul
arpl
mov
xor
int3
or
cmp
dec
add
test
mov
xor
js
jmp
pop
std
dec
loop
pop
aad
sahf
leave
and
mov
sbb
pop
jae
sub
repnz
xchg
push
xchg
scas
push
jne
pop
mov
sbb
pushf
push
add
into
int
pop
jge
ins
xor
jns
adc
rol
mov
sub
dec
cmp
lds
mov
jne
sbb
push
mov
call
pop
into
scas
test
push
xchg
and
jp
in
push
(bad)
fistp
test
jge
stc
mov
(bad)
std
jne
dec
fwait
call
shr
movs
enter
div
cmps
xchg
cmc
mov
les
or
mov
mov
adc
add
jne
scas
ja
ja
or
push
mov
mul
mov
out
outs
sub
mov
lods
add
out
and
fistp
gs
out
std
and
jl
mov
or
sub
sbb
and
retf
call
mov
push
shl
xor
jl
and
pop
loope
dec
inc
xchg
out
mov
jmp
sub
aas
and
je
fwait
push
pop
out
inc
ins
push
xchg
or
adc
xor
push
imul
add
cmp
movs
lock
arpl
xchg
cmps
adc
xor
ret
xchg
sub
sbb
aad
es
bound
stc
dec
movs
sub
js
addr16
pop
and
jbe
jecxz
pop
sbb
cmp
test
addr16
inc
xor
mov
call
ret
test
scas
aam
mov
inc
out
pop
lods
jbe
loop
mov
popa
push
(bad)
call
sub
cs
mov
icebp
cli
jle
add
sub
xchg
and
adc
jmp
out
cli
test
mov
jle
inc
push
je
push
sti
in
add
jmp
push
bound
ins
(bad)
push
dec
je
in
enter
jb
in
xlat
xor
sbb
mov
add
jmp
mov
movd
je
adc
test
shr
enter
push
sub
aam
ins
and
and
gs
or
out
dec
ins
pusha
stos
js
add
inc
sub
int3
or
retf
daa
ds
and
ins
push
daa
mov
jb
mov
fidiv
and
dec
inc
rcl
lahf
in
mov
mov
or
sub
addr16
out
stc
pusha
cli
aam
out
into
xor
mov
pop
xchg
cmc
cwde
adc
or
mov
arpl
mov
or
and
js
or
adc
jb
cmp
mov
loop
or
(bad)
lahf
inc
pop
adc
pop
pop
xchg
(bad)
add
mov
mov
jmp
sbb
sub
aas
sbb
pop
sub
cld
inc
neg
push
cmp
loop
cld
lea
sbb
mov
jl
jmp
outs
es
addr16
retf
adc
jg
in
mov
fst
sbb
mov
mov
mov
mov
movs
fcomp
sub
iret
push
xchg
mov
xchg
inc
leave
xor
stos
sub
inc
dec
test
neg
jmp
add
xor
cmp
inc
sbb
dec
push
adc
jl
jg
add
mov
out
ins
xor
add
pop
sbb
inc
lds
loop
enter
bound
push
retf
into
in
mov
ret
mov
xor
jne
push
dec
and
fstp
movs
iret
and
jne
mov
cmps
test
retf
push
mov
arpl
pop
sti
test
clc
push
pop
xlat
pop
mov
mov
sub
pop
cmp
sar
test
data16
dec
call
in
adc
fcomp
add
sahf
and
leave
lods
fist
lods
xchg
jb
ret
or
das
jbe
or
popa
cdq
aam
cmps
test
cmovns
shr
(bad)
mov
and
pop
mov
or
cs
mov
or
call
jle
mov
push
mov
xor
or
mov
stc
in
arpl
jecxz
loop
mov
dec
push
mov
mov
std
faddp
fcomp
mov
mov
jns
jl
adc
aad
pop
inc
inc
adc
xchg
xor
or
push
ja
cmps
pop
mov
adc
icebp
sbb
cmp
jp
das
mov
fdivp
out
mov
inc
movs
add
enter
sub
movs
imul
push
cli
cmp
iret
jl
into
pop
pop
scas
int
frstor
pop
rcl
arpl
call
retf
jmp
shr
test
push
pop
mov
daa
ins
mov
push
in
mov
iret
and
mov
pop
mov
fmul
leave
jbe
iret
test
rcl
int
mov
stos
jmp
cwde
pop
shr
jae
out
stos
stos
dec
cmps
mov
out
or
addr16
pusha
and
add
int3
xchg
lock
mov
in
inc
loope
or
pop
pop
jmp
or
data16
sub
mov
xchg
mov
pop
mov
jne
loopne
or
xchg
adc
mov
fcom
aad
or
xchg
mov
mov
jns
test
mov
in
scas
inc
jnp
sar
dec
ins
cmc
arpl
xor
fstp
mov
xchg
dec
stos
pop
cli
jbe
call
xchg
mov
cmp
mov
inc
mov
dec
mov
inc
sub
lea
pushf
cmp
mov
test
mov
iret
adc
and
mov
fistp
xor
push
(bad)
(bad)
out
repz
push
(bad)
adc
jg
dec
mov
push
movs
inc
jmp
xchg
(bad)
sbb
fisub
ret
nop
mov
pop
imul
xchg
push
call
cmp
jne
xlat
cmp
lea
stc
or
sub
scas
mov
outs
jge
es
xor
mov
push
(bad)
in
push
jmp
mov
pop
jo
xchg
cmp
movs
mov
cmp
or
psubusw
in
fnsave
pop
loope
inc
pop
xor
cmp
push
test
and
push
out
jno
mov
ins
cmp
xchg
mov
scas
mov
stc
int3
push
pop
cmp
fstp
adc
cli
inc
cmp
mov
push
iret
fwait
mov
in
sub
ds
add
fwait
add
fistp
cmp
inc
(bad)
sti
in
je
sbb
cmp
test
pop
push
mov
sub
dec
jno
cmps
jns
ret
inc
pop
cmp
aam
add
adc
jp
lea
mov
in
mov
out
fist
xor
mov
(bad)
retw
jecxz
(bad)
in
fsubr
rcr
repnz
(bad)
lods
mov
pslld
cmp
and
jge
int3
xlat
mov
int3
arpl
fs
outs
cli
ins
jle
xchg
pop
jnp
in
dec
call
adc
pushf
imul
adc
cmp
inc
cli
aam
out
sub
mov
das
sbb
adc
adc
repnz
cmp
call
cmp
push
cld
clc
mov
and
add
xlat
lahf
dec
adc
inc
bound
adc
fiadd
imul
fwait
cmp
sahf
dec
jl
in
jae
clc
inc
mov
idiv
sub
dec
loopne
scas
or
sub
add
pusha
test
ret
add
push
dec
ds
lea
aas
fsubr
xor
inc
push
fidiv
jne
lods
inc
fild
fdivr
or
inc
ds
or
pop
aas
push
cmp
jmp
pushf
bswap
sahf
sahf
xor
jnp
clc
cs
repz
pushf
sbb
mov
xchg
jl
dec
rcl
jne
cmps
push
add
add
cmp
stos
mov
fdivrp
xor
inc
or
inc
mov
(bad)
and
stos
rol
int
cli
and
cmp
cmps
mov
lods
jnp
pop
shr
and
retf
pop
out
aas
jns
cmp
mov
in
call
aam
xor
xchg
ret
push
mov
inc
jae
iret
dec
outs
shr
daa
scas
sbb
mov
mov
jne
jmp
lea
jp
retf
addr16
(bad)
mov
xchg
test
or
or
adc
mov
sahf
lds
enter
int
js
pop
adc
mov
ret
loope
xor
or
mov
sbb
mov
cwde
mov
inc
jge
pop
mov
add
lods
movs
loop
mov
clc
(bad)
enter
leave
and
jns
sub
sub
cmp
cmps
pop
imul
(bad)
cwde
jp
sub
neg
and
cwde
pop
mov
inc
jl
xor
mov
ret
jns
dec
xchg
push
int
gs
enter
ret
aaa
xchg
mov
mov
push
push
push
movs
sbb
xor
mov
(bad)
cmp
in
sti
(bad)
jns
loope
adc
jmp
pusha
out
mov
pushf
add
or
test
xchg
push
xchg
xor
loop
jg
adc
pop
pop
push
sub
call
std
mov
fwait
scas
jmp
test
std
dec
add
xlat
sar
push
adc
das
int
sbb
ss
out
mov
test
test
sub
jge
stc
fcom
jmp
clc
mov
adc
mov
sbb
test
fldenv
xchg
jmp
jnp
or
xchg
retf
ss
arpl
and
adc
inc
loope
loope
and
sar
scas
inc
das
daa
pusha
sub
jecxz
jmp
mov
jg
fwait
rcl
scas
je
ret
xor
sub
shl
fistp
xor
es
fcomp
pop
mov
xlat
rcl
pop
test
mov
stc
sar
and
mov
or
sbb
cwde
adc
inc
jge
add
gs
popf
out
push
adc
inc
bound
xchg
mov
cwde
xor
rcr
dec
fwait
popf
outs
sub
test
sar
cmp
and
lods
mov
pop
rol
idiv
lds
and
(bad)
mov
aas
mov
outs
adc
ins
lahf
and
cmps
dec
jbe
lods
outs
mov
(bad)
or
(bad)
stc
xchg
inc
or
cmps
fwait
sbb
hlt
or
ins
bound
xor
fs
cmps
cwde
inc
loope
mov
call
aaa
ret
adc
scas
fistp
mov
gs
mov
aas
jnp
mov
and
loopne
sti
adc
mov
xchg
sub
pop
enter
pop
xchg
rol
and
push
rol
pusha
jo
mov
fnstcw
pop
scas
or
inc
pushf
push
push
lods
mov
mov
test
push
(bad)
sub
call
and
lea
arpl
dec
repz
lods
cmp
in
std
ficom
(bad)
fdivr
rol
xchg
or
cs
cmc
iret
push
popf
sbb
push
leave
popa
sbb
jp
mov
lea
cmp
das
xor
cmps
mov
sub
sub
mov
jmp
mov
mov
(bad)
(bad)
das
or
sub
inc
jnp
test
inc
add
mov
idiv
jbe
loop
int3
daa
(bad)
ja
push
push
inc
mov
or
icebp
sahf
test
xor
dec
adc
outs
pusha
mov
inc
imul
adc
cmp
popa
cmp
divps
xor
sbb
pop
mov
and
jg
add
xor
ffree
sbb
mov
sbb
mov
xlat
ficom
call
lods
ret
loopne
aad
mov
sbb
sti
and
adc
push
fwait
out
ret
or
cmp
es
mov
sbb
push
jge
enter
clc
and
pop
cdq
mov
and
cld
into
mov
aad
nop
(bad)
or
int
mov
sbb
push
lods
xor
fidivr
adc
out
cmp
add
pop
div
sub
add
iret
stc
push
in
push
dec
cmp
rcl
xor
mov
popf
rcr
rcl
hlt
push
push
jle
paddb
(bad)
ds
imul
scas
mov
mov
mul
test
lock
mov
mov
cmps
pop
into
xor
mov
lea
pop
out
fdivr
xchg
cs
scas
fstp
jge
aam
ss
cdq
das
mov
xchg
daa
xchg
pop
mov
mov
jne
and
ror
idiv
and
sar
mov
mov
cli
dec
inc
mov
rcl
pushf
and
sahf
jmp
fs
jmp
xchg
push
jb
inc
or
jmp
scas
or
push
xchg
jge
(bad)
jno
mov
dec
shl
jecxz
test
mov
clc
push
(bad)
test
ds
add
pop
aam
push
mov
sub
xchg
shl
call
mov
lds
inc
sbb
int3
cmp
repnz
mov
xchg
cmp
jnp
and
js
aad
enter
out
mov
cmp
ja
adc
shl
or
call
jmp
inc
cmp
and
fs
ins
shl
jle
jp
mov
mov
rdtsc
dec
dec
cmp
inc
sbb
fiadd
in
pop
sub
jae
and
lds
nop
mov
adc
pusha
lahf
mov
movs
or
(bad)
mov
adc
inc
ins
adc
push
das
or
add
arpl
xchg
lds
mov
jmp
dec
sar
mov
or
mov
ror
lahf
add
adc
adc
fwait
fwait
sbb
aaa
cmc
pop
adc
sub
sub
cmp
icebp
sbb
pop
je
test
mov
mov
pop
xlat
sbb
inc
inc
xchg
pop
inc
pop
sub
scas
jnp
pop
aas
mov
lahf
inc
inc
pushf
movs
sbb
jb
call
or
mov
jmp
sbb
ins
repnz
pop
loopne
jno
arpl
pop
dec
(bad)
ins
xor
push
xcrypt-cfb
cmps
retw
cmps
test
pop
out
test
dec
add
imul
mov
jl
scas
mov
loopne
xchg
ds
shl
jno
sbb
adc
outs
jns
or
in
xor
pop
pop
push
(bad)
out
(bad)
and
mov
mov
dec
mov
fwait
jae
shl
push
jmp
xchg
rcr
push
sbb
xchg
leave
mov
cmp
lahf
xchg
in
int
or
(bad)
xchg
and
ret
pop
mov
inc
push
add
xchg
xor
loope
and
push
lods
or
add
dec
es
inc
fwait
mov
lahf
and
or
imul
mov
outs
dec
push
enter
lahf
retf
xlat
sar
cmps
dec
ins
fdivr
sbb
pop
in
cs
out
add
shr
jbe
in
jno
lds
daa
(bad)
sbb
loop
pop
or
push
pusha
cld
push
cmc
add
mov
sbb
bound
ror
aas
retf
cmp
icebp
jg
xchg
cmp
xor
xchg
push
xchg
adc
mov
mov
add
pop
retf
mov
cmp
bnd
inc
inc
xlat
fwait
sub
leave
lahf
add
mov
sbb
stos
ror
xchg
icebp
push
cmp
retf
sbb
jns
out
jbe
dec
shl
jns
pop
mov
adc
popf
and
icebp
cmp
lahf
sub
(bad)
sar
std
mov
fiadd
cmp
push
or
push
push
fwait
clc
out
push
pop
pop
mov
dec
xchg
mov
cmps
arpl
mov
lock
push
in
fstp
jmp
shl
xchg
ret
xchg
call
xor
push
sub
xor
in
sbb
repz
ins
pop
repz
cmp
xchg
sub
push
add
lods
fidivr
cmc
xor
push
mov
jmp
push
jmp
and
mov
jo
dec
xchg
or
sti
in
push
(bad)
pop
cld
or
xor
adc
mov
pop
pop
xor
inc
fist
cmp
mov
js
lods
sbb
mov
push
test
add
pop
outs
ja
xchg
mov
sbb
shl
cmp
push
es
xor
ja
inc
mov
das
mov
ss
or
imul
test
cmps
jge
mov
sub
or
mov
jns
(bad)
adc
neg
in
push
cmp
jl
push
add
xor
inc
aaa
arpl
je
cmp
adc
pop
and
or
call
fcmovne
mov
pop
mov
inc
(bad)
lahf
xchg
js
(bad)
mul
cwde
call
push
xor
jg
mov
fadd
fs
inc
ds
push
mov
test
fsub
mov
stos
push
test
push
addr16
fst
(bad)
push
fdiv
inc
shl
lahf
dec
scas
imul
inc
sub
daa
imul
push
adc
aaa
fisubr
retf
fcomip
enter
clc
mov
jnp
(bad)
sbb
pop
jno
push
aas
jg
pop
dec
sbb
and
cdq
inc
pop
pop
mov
inc
mov
ja
xchg
or
stos
fistp
adc
dec
dec
cs
sub
into
movs
outs
inc
je
dec
xor
ss
fist
out
sub
sti
retf
mov
mov
fcom
scas
push
push
pop
sbb
cwde
aad
outs
lock
xchg
sbb
mov
add
pop
mov
cld
or
jmp
push
xchg
mov
xchg
call
fwait
sub
sub
mov
icebp
cld
push
mov
jns
retf
sbb
sub
jmp
mov
inc
push
push
sbb
lea
cmp
sbb
push
pop
jmp
pop
aam
mov
pop
lods
retf
xor
cli
add
cld
and
in
cdq
adc
or
sbb
pop
push
repz
dec
pop
dec
dec
out
mov
mov
mov
mov
js
dec
ds
ds
and
retf
shl
inc
fiadd
movs
or
mov
(bad)
dec
push
repnz
ss
jge
push
loopne
fld
sbb
js
hlt
push
xchg
jge
add
mov
test
and
out
xor
shl
(bad)
cmps
mov
cmp
dec
test
push
sbb
int3
jmp
add
and
out
jnp
xor
mov
push
mov
std
icebp
in
or
test
mov
loop
dec
sub
push
idiv
mov
fild
ficomp
call
popf
adc
mov
mov
cli
add
xchg
imul
pop
mov
adc
cmp
dec
dec
popa
ins
cmps
ja
push
nop
adc
leave
cmp
stos
push
cmp
retf
stos
in
leave
outs
(bad)
dec
loope
cwde
lods
shl
adc
cmp
mov
pop
ror
(bad)
adc
mov
xchg
push
imul
test
inc
(bad)
pushf
jle
lahf
inc
push
push
sub
adc
pop
movs
test
cmp
jge
repnz
stos
sti
xor
rol
test
pop
sbb
retf
out
and
arpl
xchg
popf
rcl
ja
adc
aaa
leave
popa
or
jne
push
shl
icebp
xchg
adc
stos
scas
lea
xor
addr16
mov
(bad)
frstor
out
add
dec
aas
(bad)
(bad)
inc
call
sbb
outs
sub
int
mov
sti
rcr
repz
stc
scas
js
ins
pop
ror
mov
scas
jecxz
ds
cmp
mov
sub
pop
mov
in
adc
test
clc
sti
or
sbb
jle
cmp
sub
xor
in
popa
adc
cmp
ret
movs
aad
scas
jae
and
test
test
mov
jae
je
dec
sbb
push
movs
imul
jo
xor
scas
mov
std
rcl
out
movs
and
fiadd
stos
es
test
xchg
push
test
push
push
and
cdq
jnp
jns
stos
and
sbb
int
jl
ror
xchg
mov
pop
xor
std
cmc
add
cmp
(bad)
in
add
aas
push
shr
sbb
or
xlat
xor
into
cdq
sbb
xchg
clc
dec
dec
sub
mov
loope
mov
lahf
cmps
fsubr
adc
cwde
mov
leave
mov
or
test
lock
shl
les
mov
icebp
cdq
sbb
mov
sahf
jmp
popf
xchg
mov
lds
push
mov
jp
sahf
in
xchg
das
in
mul
pop
adc
imul
push
sub
ins
lock
out
pop
rol
leave
imul
loope
and
inc
and
je
sub
sbb
adc
push
data16
fstp
cmp
(bad)
and
push
push
ret
lods
fwait
xchg
mov
inc
inc
fs
leave
rcl
test
add
adc
fisttp
rcr
xchg
retf
retf
leave
pavgb
inc
and
jge
fdiv
cmps
jns
sti
fbstp
lahf
or
cmp
and
aas
mov
cs
and
mov
shl
ror
(bad)
lock
cmps
int
adc
xchg
fstp
int3
adc
sub
enter
mov
lods
clc
sub
cmp
div
div
mov
std
mov
pusha
or
ret
pop
xchg
clc
shl
popf
mov
cmp
out
outs
jl
xor
dec
inc
cmp
es
and
pop
cdq
adc
fidiv
out
or
lds
cmps
daa
in
mov
sub
cs
xchg
xchg
enter
sub
sti
aaa
dec
push
and
out
ss
aaa
call
rol
mov
aaa
into
mov
pop
inc
icebp
xor
push
push
and
(bad)
mov
sub
(bad)
push
sub
popa
cli
sub
dec
js
push
fdiv
pop
push
daa
mov
sahf
mov
arpl
mov
cs
cli
inc
test
jecxz
mov
sbb
fs
pop
outs
or
retf
mov
push
bound
stc
sbb
mov
mov
add
(bad)
enter
iret
lea
and
mov
fmul
icebp
(bad)
or
lods
into
ficomp
not
inc
(bad)
ins
fisttp
pop
scas
or
and
lea
dec
pop
fisttp
jmp
popf
xchg
leave
std
fcmovnu
xchg
shl
push
mov
push
mov
pushf
in
ins
lea
es
retf
rep
and
lea
test
add
enter
dec
pop
aam
jp
push
fcmovnu
in
jne
shl
and
ss
push
test
pop
mov
jmp
add
mov
ds
push
mov
mov
pop
mov
jmp
sbb
adc
sub
call
cmovne
pop
fs
mov
xor
xchg
sub
int3
shl
arpl
push
push
call
retf
jmp
inc
ins
div
push
(bad)
cmp
push
int3
gs
enter
fs
popf
shl
retf
call
push
xlat
cdq
xchg
mov
lods
sbb
out
mov
jecxz
std
aad
push
aaa
sub
ss
mov
into
dec
mov
jle
enter
call
and
test
call
jecxz
pop
sub
es
push
fsub
jbe
pop
dec
cmps
mov
jmp
hlt
cmp
movs
cmc
mov
in
xor
xor
out
in
(bad)
sbb
leave
ret
inc
pop
add
(bad)
shl
and
shl
fwait
rcl
fdivr
in
add
jae
imul
mov
xchg
pop
sbb
rcr
adc
fidivr
pop
pop
ret
pop
mov
mov
(bad)
push
mov
push
call
fcomp
cmovbe
push
rcl
jg
out
aas
xchg
das
cwde
shl
cmps
mov
dec
imul
out
cmp
(bad)
mov
and
scas
dec
dec
movs
mov
ins
mov
cwde
ss
jnp
mov
sbb
cmp
daa
adc
(bad)
in
ins
mov
adc
iret
sbb
je
shl
mov
push
nop
lock
daa
outs
push
adc
push
in
inc
nop
xor
sub
cmp
mov
test
or
lods
outs
fsub
into
out
rol
lods
es
ss
repz
out
or
cmc
mov
or
in
pop
int
mov
pop
(bad)
pop
and
lds
loopne
mov
pop
fcom
or
jp
cmp
fwait
lods
or
int
aad
adc
jle
arpl
mov
in
sbb
pop
or
fidivr
fs
mov
aaa
(bad)
lea
sub
enter
or
inc
sbb
cmc
(bad)
out
in
dec
in
adc
loope
cmovo
sbb
gs
fmul
loopne
ja
ror
mov
lods
cli
xor
pop
bound
arpl
push
daa
sbb
adc
push
pushf
jne
pop
icebp
jge
leave
adc
jecxz
add
loop
and
(bad)
or
cmp
test
ins
sub
mov
sbb
inc
mov
fwait
cmp
xchg
adc
stos
ficom
xchg
dec
push
cwde
and
enter
out
enter
fnsave
out
jl
pop
cs
cmp
pop
cmp
sub
ret
movs
cld
dec
inc
and
shl
mov
push
test
push
xchg
call
adc
xor
jns
xchg
loopne
sahf
push
shl
js
imul
call
cmp
inc
(bad)
not
js
adc
cmp
xor
in
push
jns
xchg
pop
xchg
ja
mov
out
dec
jge
das
xor
mov
jne
(bad)
shr
int
pop
(bad)
lds
les
mov
ret
pxor
jge
stos
inc
inc
push
movs
inc
shl
or
out
in
mov
ins
movs
cld
shl
adc
jo
fadd
inc
pop
es
add
ret
ds
retf
cmp
xchg
aam
cmp
mov
push
fldenv
mov
rcl
inc
lods
adc
mov
mov
call
jl
xlat
xor
rcr
or
sbb
cmp
in
sub
hlt
cdq
rol
xor
mov
cmps
sub
xchg
lods
jbe
pop
jo
mov
or
push
enter
cmp
imul
mov
mov
mov
lods
call
icebp
jge
sbb
es
add
jns
cmp
retf
shl
jno
sub
(bad)
stos
xor
aaa
(bad)
xchg
cmp
cli
fwait
les
dec
jle
das
cmc
push
cwde
cli
sahf
shl
push
fwait
cmp
mov
fcmovne
mov
xchg
das
movs
jo
add
fucomip
push
popa
fistp
fimul
lahf
in
jecxz
mov
lock
and
ins
xor
cmp
adc
inc
sti
and
cmc
xor
lock
fwait
sub
cmp
or
imul
cmc
sub
push
sbb
lods
stc
lea
sub
dec
mov
js
js
add
movs
in
call
or
or
mov
dec
(bad)
pop
or
retf
dec
jecxz
fxch
in
mov
inc
cmp
call
rcr
scas
mov
in
sub
ss
gs
ret
sbb
mov
pop
test
or
ror
cmps
sub
repz
mov
cld
push
iret
jb
dec
jae
jb
jmp
push
std
shl
pop
ffree
mov
ret
add
jnp
mov
sbb
outs
fild
loopne
mov
pop
push
in
inc
pop
shr
pop
pop
rcr
adc
jno
(bad)
bnd
popf
ins
cmp
dec
mov
in
xor
jno
icebp
xor
hlt
dec
into
test
retf
sub
cdq
pop
cmps
add
pop
test
popf
xchg
inc
push
push
xor
mov
scas
cwde
test
mov
xchg
pop
out
test
and
jle
iret
imul
sub
fwait
xchg
jmp
shl
xor
mov
cld
push
push
adc
hlt
mov
add
outs
fstp
or
jp
repnz
mov
or
adc
je
lock
movs
mov
call
sub
inc
int
out
jno
imul
in
js
lahf
pavgw
loop
lea
aas
retf
test
mov
inc
or
ret
ficomp
add
lahf
adc
sbb
shr
das
(bad)
and
iret
mov
or
push
xor
test
push
scas
retf
jb
(bad)
jmp
push
jnp
adc
out
and
xor
cmp
bound
das
cli
fs
outs
test
jmp
daa
cmps
call
mov
repz
jae
mov
ror
fld
sub
aad
int3
mov
push
mov
fisub
gs
add
(bad)
in
xchg
mov
stc
stc
fchs
scas
inc
ins
in
popa
mov
mov
jp
push
push
and
pop
inc
(bad)
loopne
fcmovnb
push
lods
ficomp
ds
jnp
cmp
pop
push
in
push
sbb
push
jl
jmp
xchg
and
(bad)
cmp
add
rol
test
sbb
arpl
retf
movs
inc
mov
lds
(bad)
dec
mov
adc
cmps
adc
shr
add
adc
int3
push
add
mov
push
es
lods
jns
les
mov
cmp
mov
cmps
jns
sub
bound
popa
xchg
scas
movs
xchg
clc
ja
cmp
aas
shr
push
neg
ror
(bad)
call
add
out
and
mov
dec
jnp
push
movs
pop
mov
mov
sti
dec
repz
push
inc
into
popf
jns
mov
nop
daa
std
fdivr
icebp
jp
push
pop
mov
dec
imul
xchg
test
inc
fwait
aam
xor
push
jmp
pop
shr
push
inc
repz
cdq
pop
cmp
(bad)
ins
aam
mov
mov
lods
mov
leave
sub
scas
sbb
mov
addr16
aad
jg
push
add
jge
pop
imul
test
or
in
jns
test
hlt
scas
and
inc
sub
pop
push
xor
in
retf
fsubr
jb
jmp
sbb
retf
or
mov
mov
out
call
imul
jmp
pop
or
cld
pop
scas
fwait
xchg
sub
(bad)
ins
cmp
mov
mov
out
jle
lock
cld
xlat
(bad)
enter
mov
cmp
imul
and
inc
cmp
jmp
(bad)
mov
xor
pushf
jmp
sar
bnd
test
push
mov
nop
jo
lock
push
xor
call
inc
stos
popa
scas
or
lods
adc
cwde
in
sbb
arpl
xchg
std
cmps
mov
pop
or
out
rcl
cli
sbb
nop
shl
push
fwait
xor
mov
popf
push
repz
jb
pop
call
and
xchg
pop
push
push
pusha
jmp
or
add
mov
ss
hlt
out
push
ja
(bad)
sbb
mov
push
sbb
jno
cmp
xchg
fucom
jle
scas
gs
pop
data16
and
cmp
pop
mov
mov
xlat
xor
mov
adc
cwde
sub
adc
and
lahf
adc
xor
dec
in
dec
cmp
push
push
xor
cmp
mov
fldenv
shl
sar
lods
(bad)
cs
xchg
ja
dec
pop
add
mov
int3
into
movs
pop
scas
stc
xor
loop
dec
dec
stc
xlat
and
lea
sub
dec
push
xor
repz
cmp
mov
and
jns
cmps
push
jae
push
scas
push
into
out
js
mov
adc
outs
rcr
jp
loop
fcomp
(bad)
ds
mov
and
scas
bound
or
add
inc
(bad)
cmps
xor
mov
rcl
mov
loopne
dec
mov
inc
call
mov
sti
dec
inc
ds
jge
into
adc
mov
jg
dec
cmc
sete
pop
ret
mov
mov
out
outs
cmp
ins
sbb
inc
or
ins
mov
sub
mov
mov
bound
call
es
jbe
fs
pop
adc
fist
fnstsw
outs
(bad)
push
repz
(bad)
test
dec
mov
inc
cmp
mov
and
dec
and
paddusb
test
pop
pop
cwde
sub
jle
in
loopne
push
test
stos
inc
pop
mov
push
xchg
dec
sub
jne
pop
sbb
adc
cmc
sub
xor
cmp
cmps
mov
and
sub
mov
std
mov
fs
jbe
xor
push
adc
xor
lea
test
xchg
shl
daa
mov
leave
add
aad
leave
jmp
xor
dec
repnz
fs
mov
mov
js
and
cld
sub
pop
rcl
or
sub
retf
leave
adc
cmp
adc
push
add
cmp
cwde
fwait
adc
xor
add
neg
jbe
stos
sub
ins
fisub
adc
mov
mov
neg
lahf
xchg
out
sbb
xchg
jns
stos
sub
ja
int
movs
pop
pop
mov
sar
xchg
mov
push
clts
push
mov
arpl
sub
xchg
mov
push
leave
icebp
sbb
and
ins
test
test
mov
and
sub
pusha
inc
leave
push
dec
sub
dec
push
jne
push
inc
inc
test
or
adc
adc
add
out
adc
xchg
test
xor
inc
fadd
pop
cmp
dec
pop
sti
push
dec
ror
mov
test
add
cmp
mov
mov
jmp
mov
imul
xchg
sub
idiv
fcom
cli
js
ins
push
or
sub
dec
add
mov
xchg
jnp
push
cs
xor
rol
cmp
mov
popa
call
push
(bad)
in
xchg
fwait
lods
xchg
xchg
stc
dec
mov
cwde
and
mov
xchg
fwait
cmp
xchg
mov
adc
dec
int
(bad)
mov
mov
mov
or
pop
mov
movs
movs
inc
mov
jmp
ds
movs
xchg
inc
xlat
adc
jp
fcomp
sbb
cmp
sar
(bad)
cmp
call
retf
ficomp
inc
loopne
cli
out
pop
inc
and
or
lds
pusha
pop
clc
gs
aas
cwde
inc
inc
sbb
scas
stos
addr16
jae
xchg
rcl
imul
xchg
jnp
loop
mov
jae
push
out
ret
into
out
inc
mov
aad
aas
imul
add
jae
in
aam
ss
cmc
push
scas
xor
jge
repnz
cmps
std
popa
gs
(bad)
push
mov
lock
mov
adc
dec
dec
pop
inc
pushf
int
pop
jmp
jecxz
xchg
jno
mov
stos
push
mov
stos
in
retf
rol
dec
rcr
inc
mov
in
xchg
xchg
call
jne
jmp
sub
jbe
sub
js
jge
mov
out
in
dec
xchg
push
ins
sti
dec
or
hlt
xor
cmp
lahf
pop
mov
xchg
rcl
jmp
mov
pop
mov
xchg
(bad)
clc
add
icebp
in
test
fs
ja
adc
and
or
mov
stos
rcr
inc
ins
pusha
sahf
mov
mov
fcomp
fistp
or
in
or
inc
and
sub
cld
sub
and
mov
xor
push
aas
or
movs
fcom
or
test
pushf
daa
mov
loopne
sbb
dec
pop
or
xchg
stc
mov
push
jno
(bad)
sti
cwde
pop
cmps
cdq
push
mov
mov
add
pushf
mov
add
and
mov
cwde
(bad)
cdq
dec
xor
aam
daa
mov
sti
data16
movs
mov
movs
popf
scas
and
pop
call
in
xor
push
xor
dec
mov
(bad)
(bad)
dec
push
sbb
rcl
retf
jmp
adc
test
cwde
mov
add
pop
sub
je
call
add
enter
retf
ss
aad
ds
sbb
das
jl
dec
xchg
fdivr
sbb
mov
std
mov
push
fwait
daa
nop
mov
(bad)
icebp
sbb
rcr
outs
je
outs
hlt
pop
xchg
call
jmp
xchg
pop
(bad)
xor
jns
stos
fisubr
xchg
xor
and
push
daa
popf
sub
cs
push
pop
cmps
inc
add
adc
xor
in
sub
xchg
dec
leave
mov
into
pop
ja
not
jle
cwde
sub
sbb
enter
sub
push
mov
dec
mov
ds
pop
retf
cmp
(bad)
das
stc
sub
push
inc
mov
shr
add
add
inc
stc
add
mov
mov
inc
or
dec
pop
xchg
add
ja
ret
inc
sbb
pop
ja
mov
and
or
sub
(bad)
adc
gs
les
test
retf
lods
pop
(bad)
not
out
adc
fisub
mov
jmp
add
fmulp
test
pop
fidiv
(bad)
std
jecxz
das
scas
out
daa
inc
xor
push
sub
fwait
pop
repz
test
call
mov
cmp
bound
scas
ds
jl
sti
mov
dec
jo
cmps
pop
mov
movs
call
bound
out
jge
aaa
mov
fwait
aam
ins
sbb
cmps
jecxz
push
push
ins
scas
cmp
loop
pop
fldenv
sbb
adc
sub
popf
jmp
inc
sbb
iret
lock
cmc
mov
dec
test
loope
push
mov
call
mov
sub
stos
adc
test
pop
movs
retf
and
xchg
repz
jmp
push
ret
sahf
iret
dec
pop
shl
add
jp
sbb
arpl
std
cdq
ja
imul
push
jae
into
clc
loop
cmps
lods
gs
mov
data16
loopne
pop
push
inc
test
test
mov
jo
sbb
sahf
ja
add
leave
std
sbb
adc
cmp
movs
xor
sub
loop
inc
call
(bad)
adc
(bad)
mov
inc
out
sbb
xor
std
dec
test
adc
mov
and
sti
stos
and
inc
lods
fs
fimul
outs
and
jbe
shl
inc
xor
ffree
repz
and
cmp
inc
aam
lods
push
inc
out
mov
pop
xchg
dec
repnz
mov
ret
mov
xor
sti
dec
push
ds
sub
or
sub
xor
in
ftst
movs
ret
(bad)
or
lods
movs
cmp
dec
call
push
in
imul
adc
mov
aas
imul
sbb
xlat
xchg
and
sbb
mov
mov
cmp
loopne
jmp
cli
(bad)
out
call
push
test
mov
sbb
adc
mov
mov
fcmovu
pcmpeqw
out
pop
enter
outs
lods
cdq
inc
xchg
xchg
mov
adc
shr
fld
jns
mov
dec
mov
scas
sub
xlat
mov
inc
js
lds
mov
jl
nop
not
mul
les
fbstp
adc
dec
adc
sbb
fcomi
das
div
jmp
test
test
addr16
hlt
jl
push
ret
adc
mov
lea
fs
ja
mov
jg
jns
ret
loopne
fnsave
inc
jb
fwait
mov
and
das
adc
ds
mov
les
lods
or
out
sub
mov
aas
add
add
xchg
cmp
(bad)
and
repnz
mov
adc
jbe
jle
nop
adc
in
fstp
cli
or
loope
xchg
mov
pop
dec
cdq
mov
adc
or
les
mov
movs
mov
test
cli
mov
scas
jmp
mov
push
imul
pop
call
fcmovnbe
inc
pushf
mov
mov
dec
pop
fstp
sbb
push
call
rcl
es
add
add
fld
outs
imul
dec
int
mov
(bad)
out
gs
(bad)
ja
mov
js
lea
mov
mov
inc
ror
dec
mov
imul
jnp
data16
mov
xor
or
cwde
sub
and
cs
in
mov
arpl
hlt
repz
daa
adc
sbb
call
mov
(bad)
and
sub
nop
fld
out
inc
mov
fisttp
cmp
xchg
ss
xchg
outs
sbb
jno
cmp
data16
mov
and
scas
movs
jl
sub
cmps
push
cmp
inc
ficom
pop
pop
out
fadd
int
in
or
mov
aad
loop
pop
sbb
pop
cmps
rcr
popa
(bad)
dec
enter
pop
into
jne
imul
sti
jb
add
mov
xor
push
xchg
jne
inc
cmps
xor
jne
xor
scas
mov
sbb
arpl
test
mov
ret
mov
popf
sbb
sar
imul
scas
pop
stos
mov
mov
fs
int
test
xchg
leave
xor
js
cmps
aas
push
(bad)
xchg
dec
sbb
out
jge
add
out
mov
lods
hlt
adc
mov
dec
ret
cmps
(bad)
es
add
sub
sbb
repz
inc
stos
push
out
cld
lahf
test
adc
nop
jbe
inc
pop
mov
push
pop
fcomp
enter
jbe
sbb
fld
inc
leave
jb
or
cmc
push
call
dec
mov
xchg
xor
stc
gs
outs
xlat
int3
aam
pop
add
jns
dec
aad
pop
push
sub
test
adc
shl
jmp
fdiv
jg
xor
aaa
pusha
jge
jle
sub
jmp
call
jns
mov
gs
pop
xor
push
cwde
jbe
pop
es
popa
fild
mov
sar
mov
call
dec
(bad)
mov
les
cmp
add
push
add
in
(bad)
repz
nop
(bad)
(bad)
test
dec
cwde
and
and
ret
sub
arpl
outs
jle
sub
imul
dec
mov
fxam
xor
sahf
sub
mov
jg
in
shl
dec
adc
cld
hlt
dec
ss
rcr
movs
or
cmps
xor
jns
das
out
jb
or
fwait
out
stos
xor
int3
out
jl
push
scas
cmps
mov
sti
leave
cld
hlt
mov
mov
pop
xchg
out
cmps
mov
mov
jae
mov
cli
or
test
dec
mov
test
push
movs
stc
mov
jne
sar
jo
clc
xchg
cs
rol
ins
xchg
xor
rcr
xlat
mov
cmps
jnp
cmp
pushf
stc
int
jle
mov
(bad)
rcr
sbb
dec
scas
test
jbe
push
add
jb
shl
in
mov
out
addr16
jecxz
pop
clc
xchg
adc
mov
add
add
in
js
rcl
dec
sar
test
test
add
adc
cmp
sbb
lock
xor
push
fucomp
data16
in
push
pop
imul
sub
(bad)
outs
inc
jle
cmp
adc
jne
push
gs
adc
jmp
shl
cmp
ror
int
out
rcr
imul
(bad)
xchg
sub
scas
hlt
test
add
sbb
adc
lods
rol
inc
inc
(bad)
mov
sbb
in
pop
imul
leave
addr16
call
push
outs
hlt
out
enter
push
inc
and
les
cmps
mov
pop
lods
test
rol
out
(bad)
fdiv
mov
cli
dec
repz
push
or
popa
dec
fs
stos
mov
push
outs
mov
push
mov
cdq
movs
sub
cmp
jg
scas
mov
retf
mov
jns
jbe
ins
in
loope
scas
out
cmps
and
cmp
repz
loop
loopne
xchg
xlat
test
and
sbb
mov
arpl
retf
rcl
mov
movs
loop
inc
jmp
or
sti
sbb
xor
push
enter
sub
jo
cmp
ins
lods
in
and
push
loopne
jle
push
sub
xchg
or
cmp
add
inc
sbb
cdq
cmps
fxch
xchg
mov
pop
jno
das
clc
dec
sub
imul
pop
and
jle
popf
push
xchg
cwde
in
js
cmp
movs
popf
xchg
jns
rcl
cmp
jmp
scas
xor
js
loopne
mov
fnsetpm(287
mov
enter
stc
cmp
dec
dec
movs
shl
retf
js
lds
xchg
scas
inc
xor
shl
mov
(bad)
jmp
mov
int3
or
pop
sar
cmps
sbb
push
mov
movaps
rcl
das
cmp
jge
rcr
loope
or
push
ins
dec
scas
jo
scas
or
fstp
pop
data16
ss
mov
ret
xchg
fldenv
adc
xchg
xchg
add
jg
jmp
xchg
pop
aas
push
or
(bad)
sub
ja
inc
push
add
sbb
push
les
lahf
cdq
jle
dec
cld
loopne
cli
call
jge
cmc
push
loope
mov
push
xor
daa
mov
pop
mov
in
ins
cmps
sub
pop
imul
lods
adc
cmps
jg
pop
cs
push
inc
cmp
add
test
inc
frstor
xor
dec
aas
mov
mov
cwde
jmp
loop
repnz
xor
mov
or
fstp
leave
ror
pop
fucomp
sbb
int
in
mov
sbb
dec
enter
test
push
pop
jne
pop
xor
and
pop
test
xor
push
pushf
lock
fs
jmp
xchg
ret
sbb
mov
stc
push
(bad)
xor
data16
sahf
aam
fisttp
and
xchg
push
scas
push
movs
leave
adc
jmp
gs
shl
stos
mov
cmp
xchg
jbe
hlt
cdq
iret
sub
int
jmp
dec
cs
aaa
leave
xor
test
jg
push
xchg
cld
or
push
shr
imul
dec
out
shr
leave
int
sbb
fsubrp
stc
mov
aas
jnp
fsubp
out
(bad)
leave
pop
outs
add
leave
sbb
(bad)
dec
rol
jae
pusha
data16
js
ret
add
(bad)
out
and
fiadd
adc
fdivr
adc
shl
and
leave
add
or
xchg
in
push
xchg
data16
mov
xor
out
adc
inc
outs
xchg
adc
or
mov
imul
push
jo
add
stc
xchg
mov
mov
cmovne
mov
inc
cmc
adc
in
ror
hlt
push
mov
outs
pop
xchg
push
push
add
mov
fwait
repnz
in
shr
ins
cli
lahf
adc
ror
mov
cdq
xlat
mov
mov
ret
mov
jae
cmp
mov
sub
into
push
xor
mov
add
daa
sbb
movs
dec
adc
imul
mov
ds
sbb
shl
mov
retf
push
jo
in
retf
int3
cmp
push
outs
test
in
ds
sbb
clc
push
xor
pop
(bad)
xor
push
inc
sar
inc
js
test
scas
rol
pop
clc
pop
fsubr
inc
fstp
call
cmp
je
or
jp
xchg
xchg
push
lock
bound
mov
xor
into
cmp
repz
sub
int
retf
push
les
les
jmp
jmp
pushf
iret
popf
push
std
test
jp
adc
mov
jge
mov
and
push
xor
or
cdq
sub
add
xor
sar
ds
add
ss
and
jo
mov
dec
add
fbstp
jmp
push
arpl
xor
aas
popf
dec
aaa
fild
jmp
test
inc
dec
push
add
ja
mov
cmp
sbb
std
cld
mov
jl
int
(bad)
shr
(bad)
or
fs
hlt
sub
jbe
hlt
fisttp
sbb
pusha
retf
xchg
add
or
sub
pop
push
pop
sti
mov
adc
gs
ins
dec
xor
clc
stos
pop
and
retf
cwde
fwait
pop
or
push
in
push
or
push
and
mov
mov
arpl
jae
fnstcw
cwde
outs
sbb
xor
in
pop
daa
fsubr
push
call
call
mov
pushf
xchg
mov
shr
outs
xor
cwde
sbb
lock
lea
mov
scas
leave
xor
out
cli
fimul
mov
scas
dec
sub
xchg
jne
repz
lods
jnp
jnp
add
out
or
push
jmp
sbb
jle
movs
cmps
mov
enter
sub
int
sbb
push
cld
mov
rcl
xor
mov
xor
lock
and
cmps
adc
(bad)
loope
xchg
in
adc
mov
mov
inc
loope
cs
mov
rcl
test
xchg
int
xchg
ror
nop
or
in
stc
jecxz
das
mov
adc
enter
sub
push
adc
jb
jae
pusha
shr
lods
sbb
push
stos
int
pop
imul
adc
mov
xchg
repz
(bad)
outs
sbb
xchg
sbb
div
movs
pushf
(bad)
(bad)
fs
jp
aad
fcom
imul
pop
mov
xchg
sub
push
scas
(bad)
arpl
lahf
pop
aam
and
or
or
(bad)
mov
in
sbb
frstor
cmp
adc
cld
pop
jo
push
gs
mov
lods
jno
adc
test
lods
movs
mov
rcl
pop
mov
sbb
or
fcomp
addr16
out
inc
sub
pop
dec
test
ror
pop
aas
inc
call
fidiv
xor
shl
xor
pushfw
dec
or
cmp
ret
gs
cmps
repnz
idiv
lea
(bad)
mov
jnp
fild
movs
retf
add
adc
sar
retf
push
mov
sub
arpl
outs
xchg
xor
pop
dec
sbb
add
add
jmp
hlt
xchg
scas
jg
loopne
popf
mov
mov
shl
mov
cmp
into
mov
jp
cs
xor
not
fwait
or
add
pop
out
loopne
pop
and
out
fcomip
add
mov
push
xor
js
pop
shl
push
push
ins
jno
and
fs
les
jmp
(bad)
mov
jl
mov
add
adc
mov
jne
sbb
clc
dec
movs
icebp
push
retf
jmp
pop
fistp
add
mov
retf
jmp
test
cmps
clc
in
cwde
fwait
cmc
bswap
xchg
dec
or
mov
pushf
lods
movs
or
mov
test
popf
sbb
fisttp
xchg
pop
pop
adc
inc
xor
mov
sub
jb
outs
(bad)
sar
or
jmp
jae
push
pop
shr
sbb
add
and
push
jnp
xor
repnz
cmc
jns
inc
cmp
sbb
loope
inc
cmp
pop
fmul
mov
leave
xor
sbb
daa
xchg
mov
cld
adc
out
pop
neg
dec
add
gs
lods
or
jle
ins
jmp
sbb
retf
mov
dec
loope
sbb
fs
enter
out
das
jnp
push
add
test
xor
cmc
jle
mov
mov
cs
jnp
mov
dec
cmp
xchg
fnstenv
or
add
aam
je
and
jmp
mov
pop
adc
mov
test
xor
sub
clc
int
fs
das
cdq
out
inc
ss
mov
and
enter
sbb
cmps
int3
xchg
xor
sbb
mov
and
sbb
dec
fsub
cmp
in
xchg
dec
jecxz
mov
jns
mov
fnsave
cli
push
push
arpl
inc
inc
add
dec
fcomp
adc
or
je
jg
cmp
inc
repnz
jmp
dec
ficom
lods
cmp
ins
inc
mov
dec
sbb
jmp
add
xor
or
fsubr
and
iret
adc
fadd
mov
sub
inc
inc
and
pop
pusha
nop
mov
stos
retf
icebp
add
inc
mov
mov
sbb
push
xor
out
mov
ss
xor
xor
and
sub
push
fisubr
shl
adc
fs
jge
les
(bad)
test
out
sar
mov
push
mov
stc
and
xchg
dec
xor
pop
dec
push
and
shr
pop
fistp
mov
retf
or
jecxz
mov
aas
stos
hlt
ja
dec
out
std
loope
imul
js
add
or
stc
leave
loopne
hlt
jns
adc
aas
xchg
shl
leave
mov
ins
fdivr
into
ja
ret
outs
cs
out
sbb
pop
sbb
int
lds
mov
jb
jno
outs
cdq
cmp
in
dec
mov
adc
ja
or
outs
ret
pop
push
xor
sbb
inc
cdq
ror
stos
pop
or
or
shl
cmp
xor
pop
dec
jnp
fistp
imul
sbb
stos
std
into
mov
scas
cdq
mov
enter
push
fsub
mov
sahf
mov
(bad)
xlat
cmp
mov
shl
inc
es
enter
adc
fst
mov
cdq
out
ds
in
(bad)
push
xchg
push
inc
push
adc
or
add
arpl
fdivr
jmp
mov
inc
mov
and
and
push
xor
ffree
inc
adc
and
add
inc
stc
sbb
stos
inc
jmp
outs
jecxz
scas
mov
repnz
pop
mov
ss
mov
stos
sbb
dec
inc
icebp
aas
(bad)
das
pop
pop
mov
aad
fistp
dec
xor
cli
or
sub
jbe
leave
mov
hlt
inc
fisttp
repnz
inc
and
pop
or
adc
mov
int3
or
mov
and
nop
xchg
test
ja
sahf
test
cmp
lods
cld
imul
mov
jbe
mov
or
and
test
push
(bad)
js
pop
cli
jge
sbb
push
mov
out
dec
mov
mov
scas
jp
pop
and
jmp
dec
jmp
mov
or
dec
xor
outs
ds
sbb
and
push
xor
and
push
jmp
pop
or
mov
in
jbe
cmp
inc
and
repz
pop
out
xor
retf
push
mov
and
pop
push
in
pop
arpl
xor
sub
dec
cmp
or
pop
push
pop
std
mov
aam
imul
jmp
test
xor
mov
push
mov
call
jno
adc
adc
jle
fcomp
dec
push
(bad)
jns
or
call
scas
addr16
dec
cmp
fst
xor
(bad)
ficom
pop
xor
or
scas
dec
pop
add
ror
and
out
ins
sub
movs
out
xchg
or
add
fbstp
push
es
cmp
mov
loope
jmp
jecxz
addr16
mov
std
adc
mov
out
pop
enter
jge
jbe
dec
movs
aaa
add
xorps
pop
cmp
cdq
fdivr
fwait
dec
int
into
loop
cmp
mov
adc
inc
cmp
pusha
jp
cmp
xor
push
adc
adc
pcmpgtb
cmps
pusha
pop
sub
(bad)
mov
and
fld
jne
cmp
in
xchg
stc
and
xchg
test
ins
lahf
movzx
in
adc
dec
shr
outs
cs
stos
addr16
pop
inc
repnz
iret
mov
jle
push
sbb
push
or
sahf
xlat
sahf
call
mov
mov
enter
mov
jmp
mov
jo
rol
mov
jecxz
mov
xor
mov
bound
or
mov
inc
movs
and
in
add
xchg
lds
inc
mul
in
xchg
hlt
mov
mov
jecxz
lds
cmps
sbb
sbb
mov
sbb
push
mov
sub
push
lea
inc
cmp
in
cs
iret
mov
sbb
mov
cmp
jns
pop
aam
sti
push
sti
(bad)
push
cld
push
add
cmp
addr16
mov
push
pop
push
xchg
dec
pop
cmp
stos
test
mov
pop
outs
cmp
dec
jo
push
addr16
jb
cmp
sub
jae
pop
call
mov
retf
push
xchg
repz
mov
ret
jge
pusha
xor
popa
arpl
pop
push
loope
mov
and
pop
inc
mov
pop
and
push
cld
and
repz
xlat
lods
sub
mov
scas
or
rcl
(bad)
dec
cld
int
rol
cdq
xchg
xlat
sub
clc
mov
mov
ror
pop
and
mov
(bad)
add
pop
inc
jae
jle
push
lods
pop
out
jmp
or
movs
inc
and
pop
dec
lock
or
push
rol
mov
mov
fiadd
fbstp
pop
cmc
pushf
stos
inc
in
jge
pop
mov
jge
sbb
pop
mov
push
je
repnz
aad
fnsave
push
adc
add
lods
and
push
mov
or
sbb
xchg
cdq
mov
jno
and
jp
sbb
loop
mov
and
xchg
mov
dec
shr
jb
jb
fimul
retf
mov
mov
cmp
push
mov
xchg
out
popa
or
adc
nop
shl
(bad)
movs
cmps
pop
mov
push
mov
outs
or
push
(bad)
lods
or
int
std
lods
jb
mov
leave
cmp
lods
push
pop
out
inc
add
inc
jne
inc
sbb
mov
pop
clc
or
push
jne
xchg
ret
dec
sub
cdq
dec
xchg
pop
movs
(bad)
sub
popf
scas
repnz
lods
inc
iret
mov
fwait
into
lock
xor
jl
dec
xchg
cmp
js
and
imul
mov
outs
xchg
stc
and
pop
repnz
adc
mov
repz
cmp
mov
sub
sbb
push
enter
mov
inc
lods
push
xchg
(bad)
ins
xor
repnz
xchg
jl
push
fmul
test
daa
ja
out
stc
mov
call
xchg
in
(bad)
in
bound
mov
test
mov
mov
ret
pop
js
sbb
jmp
out
lods
in
jb
push
xchg
mov
pop
jbe
xchg
jl
out
xor
push
pop
mov
jg
push
lock
addr16
repz
popa
cmp
mov
pop
fbld
sbb
push
xchg
mov
rol
mov
btc
pop
(bad)
jno
inc
cli
arpl
int
sbb
shl
fst
into
cs
cmp
test
cmps
lahf
mov
sub
inc
push
imul
mov
jge
pop
mov
dec
inc
sub
inc
adc
dec
stos
rol
push
fld
push
mov
mov
jp
xchg
pop
xchg
sbb
clc
jne
mov
arpl
xchg
aaa
popf
sbb
lock
ins
jle
aad
in
es
(bad)
push
sbb
pop
mov
inc
stos
adc
ret
rcr
sub
sub
pusha
xchg
or
lea
push
aas
sar
mov
mov
pop
push
out
das
jmp
inc
(bad)
mov
js
add
mov
mov
mov
imul
aas
data16
call
(bad)
scas
arpl
inc
jae
sub
jb
(bad)
mov
lds
inc
out
test
xor
shl
cmp
push
pop
mov
mov
mov
inc
mov
or
inc
add
pop
(bad)
fnsave
mov
sbb
fisub
adc
not
dec
out
js
fldl2e
xchg
adc
inc
dec
or
ds
popf
mov
jmp
jb
jmp
jmp
lock
sbb
push
cwde
shl
ins
or
fld
out
stc
sahf
mul
mov
in
xchg
(bad)
jnp
mov
dec
add
and
cdq
pop
test
mov
outs
scas
pop
or
(bad)
xlat
test
or
ss
js
sub
sub
mov
dec
jb
inc
fisttp
xchg
cmp
repz
ror
cmp
dec
sar
mov
aaa
push
adc
repz
(bad)
xchg
jns
sti
out
sub
imul
push
xchg
stos
adc
mov
adc
add
xchg
jae
lds
cmp
clc
cld
je
mov
aaa
in
mov
mov
shl
pop
jp
js
cmp
pop
call
mov
addr16
mov
xchg
pop
push
dec
add
sub
std
inc
push
mov
fidivr
imul
sbb
int3
xor
add
jnp
call
jecxz
add
fdivr
shr
pop
jbe
in
cpuid
dec
shl
mov
aas
cmps
xor
rol
xor
adc
imul
in
lea
xor
das
mov
xchg
icebp
pop
xor
jp
ds
xlat
inc
addr16
xchg
pushf
sub
add
in
push
jns
addr16
out
mov
loopne
test
rcl
mov
nop
jge
push
hlt
call
xchg
add
add
out
sub
mov
push
ror
push
shr
sbb
sbb
pusha
repz
(bad)
sub
enter
jae
push
xchg
cmps
sbb
xor
xor
int3
push
and
(bad)
sub
outs
(bad)
clc
das
test
jnp
adc
aaa
cmp
xchg
jmp
fwait
ret
int
repnz
lock
fmul
push
(bad)
push
inc
ins
sbb
ins
pop
pop
jecxz
and
jmp
ret
stos
mov
mul
imul
jno
pop
imul
je
imul
add
retf
leave
jbe
add
test
push
addr16
bound
push
sbb
dec
push
out
je
sub
retf
dec
cwde
push
imul
cmp
cmc
pop
pop
adc
jne
dec
jmp
repz
sahf
add
stos
into
xchg
repnz
outs
xlat
ret
sub
retf
out
dec
cmc
stos
outs
jmp
xor
jp
int
dec
loope
fidivr
movs
sub
ret
add
popa
jg
xchg
xchg
xor
outs
push
(bad)
mul
push
and
and
dec
xchg
jle
pop
cmps
or
mov
mov
push
adc
or
xchg
push
jnp
jmp
(bad)
icebp
dec
sbb
ret
and
adc
or
lock
xor
loop
mov
data16
and
addr16
lods
call
pop
and
stos
push
cli
xchg
test
sub
test
inc
fist
stos
push
lods
nop
retf
out
fld
sbb
adc
jb
rcr
push
data16
outs
fadd
jge
xor
ins
addr16
push
loopne
inc
mov
inc
adc
cmps
js
sub
add
mov
rsqrtps
sub
imul
(bad)
in
mov
mov
mov
sbb
xor
inc
sub
sahf
shl
or
mov
ds
inc
cmp
stc
jp
add
xchg
jno
sbb
lock
or
dec
daa
in
aaa
inc
or
dec
jne
test
ror
pusha
std
inc
aad
sar
movs
and
data16
xchg
push
sub
dec
inc
and
jmp
mov
mov
je
cs
in
xor
cmp
fimul
pop
dec
sub
dec
mov
cwde
or
xlat
sbb
test
inc
jmp
or
and
xor
ss
adc
adc
test
scas
ret
ins
adc
ds
mov
das
add
jae
mov
push
xchg
lea
and
sub
stos
iret
imul
in
add
cmp
mov
lea
push
leave
adc
cli
push
int
sti
leave
cmp
mov
das
mov
pop
aaa
jmp
shl
jbe
push
xor
or
and
sti
and
mov
mul
nop
mov
and
inc
inc
mov
inc
fisub
add
imul
out
sbb
or
ss
add
(bad)
into
popa
pop
inc
push
into
sbb
repz
leave
sti
pop
sbb
ins
cmps
sahf
xor
ja
xchg
mov
mov
or
and
imul
cmp
xchg
mov
mov
pop
dec
pop
imul
push
xchg
sbb
outs
or
int
addr16
xor
in
gs
inc
stos
jp
aad
and
in
xor
std
mov
das
nop
jae
inc
add
outs
pop
adc
push
adc
or
xchg
ffreep
jg
cdq
fwait
int3
movs
stc
and
or
es
(bad)
pop
jnp
adc
cmp
adc
cmp
cmp
jne
inc
inc
out
retf
adc
and
int3
xor
xor
pop
jbe
xchg
pop
enter
dec
ja
inc
in
ss
push
je
fnstcw
mov
jmp
or
int3
test
movs
xchg
in
fstp
inc
push
pop
(bad)
mov
sbb
std
jg
push
pop
jmp
not
jge
cli
inc
mov
pop
out
xor
mov
ret
push
loope
sub
mov
cmp
adc
aad
sub
bound
add
xchg
jno
jmp
xchg
lea
ins
xchg
outs
xor
mov
push
dec
nop
xchg
and
daa
lods
cwde
xchg
sbb
push
out
mov
adc
mov
and
mov
in
push
xchg
bound
mov
iret
jnp
and
cli
not
stos
retf
aad
xchg
fdivr
loopne
in
fwait
sbb
gs
xor
scas
and
and
jge
scas
add
cmp
in
imul
and
jmp
test
sub
inc
mov
push
repnz
and
pusha
mov
fwait
ins
stc
js
retf
retf
repz
dec
push
(bad)
mov
cld
ret
(bad)
ss
pop
jp
push
dec
adc
outs
das
mov
out
out
and
pop
xchg
xor
dec
cmp
test
leave
sbb
sbb
add
pop
xchg
mov
dec
hlt
pop
mov
adc
repz
sti
jl
pop
sbb
dec
daa
aam
sub
(bad)
out
xor
gs
test
stc
retf
ja
(bad)
je
push
call
retf
cwde
sysenter
cdq
stc
pop
ja
cld
mov
fwait
(bad)
out
repnz
dec
mov
inc
xchg
cmps
(bad)
imul
(bad)
adc
mov
std
push
shl
shl
addr16
ret
xor
nop
inc
xor
sahf
popa
in
jnp
ret
repnz
sti
mov
jecxz
shl
or
mov
cmp
push
sbb
and
inc
add
sbb
xor
jg
outs
sub
(bad)
push
pusha
pop
jo
(bad)
lods
add
fs
dec
fucom
jle
inc
mov
movs
jno
popa
inc
sbb
adc
inc
sahf
and
push
xchg
push
(bad)
pop
mov
fstp
mov
shl
scas
xor
jl
or
iret
icebp
cmc
xor
in
(bad)
mov
ret
rol
cmp
pop
sbb
sub
loope
mulps
repz
pushf
or
lea
xor
int3
jge
shl
jcxz
enter
push
shl
imul
cmps
xlat
cdq
in
mov
push
mov
xor
inc
push
mov
and
jg
mul
pop
jbe
daa
cs
popa
xchg
(bad)
repz
and
and
aaa
cli
aam
and
jp
fistp
(bad)
call
popa
repz
xchg
push
dec
popf
movmskps
in
iret
push
outs
pop
mov
mov
xor
mov
shl
and
cmps
fwait
adc
aaa
imul
shl
xor
pop
or
ss
repnz
and
repnz
jno
and
arpl
xor
dec
lods
(bad)
mov
addr16
mov
sbb
sbb
loopne
jg
clc
or
xor
fninit
mov
inc
pop
fisubr
sbb
mov
std
in
pop
iret
mov
add
mov
daa
stc
xchg
or
cld
lock
xchg
movs
rcr
inc
and
adc
sti
mov
imul
cmps
jge
out
sbb
ficomp
pop
mov
mov
pop
sub
aaa
or
jno
shl
pusha
sti
icebp
xchg
sub
pop
and
xor
scas
xlat
pop
repz
aam
xor
mov
inc
mov
js
add
lea
cmp
push
or
sub
xchg
or
cmp
mov
out
hlt
call
sub
xor
sub
sub
int
jp
sub
sahf
(bad)
pop
push
fsubr
sbb
adc
cmp
out
push
ret
sbb
mov
sbb
repnz
push
fcomip
pop
cmp
or
dec
inc
test
bound
in
jg
rcr
pop
ins
sbb
mov
shl
lods
mov
mov
xchg
cld
or
add
cli
ds
je
or
loop
in
cdq
add
popf
dec
xor
cmps
mov
adc
mov
pop
(bad)
xor
push
cmp
loop
mov
lds
cs
jns
push
add
sbb
test
test
mov
push
push
dec
aaa
sub
xor
(bad)
shl
outs
ror
sub
jg
jecxz
push
jmp
sub
mov
mov
push
push
test
loope
inc
ins
or
cld
xchg
imul
fcomp
sub
adc
fld
and
dec
ja
and
mov
xor
push
call
mov
fwait
push
clc
in
lds
repz
shl
add
push
jne
jl
loope
push
les
mov
jnp
sbb
inc
out
mov
into
xor
sbb
out
mov
lods
call
mov
les
out
aas
or
std
sbb
cli
adc
sbb
enter
test
js
in
sub
stos
and
cdq
mov
push
jg
loopne
(bad)
dec
test
aam
dec
jns
mov
xchg
push
cmp
mov
adc
sub
out
stos
je
arpl
pop
jp
pushaw
imul
xor
popa
push
push
jns
int
inc
fadd
out
(bad)
icebp
not
retf
pop
xor
jno
jns
adc
call
mov
int
cmp
bound
push
ja
aam
push
mov
and
aas
adc
lea
retw
xor
pop
mov
push
mov
hlt
mov
retf
mov
out
push
add
ret
daa
arpl
rcr
addr16
out
pop
shl
popf
not
mov
scas
xor
mov
dec
ins
mov
sbb
push
enter
sub
cmp
adc
xchg
xlat
mov
push
push
and
mov
mov
repnz
loope
mov
cmc
sbb
pop
mov
sub
scas
add
in
ret
push
xlat
lods
adc
cli
(bad)
sub
hlt
enter
push
push
(bad)
or
mov
mov
ret
pop
lods
fstp
cli
test
clc
cmp
iret
mov
cmp
lea
adc
in
cwde
(bad)
fistp
stc
test
cmp
sbb
test
test
in
arpl
int
and
imul
cmp
inc
loop
mov
mov
xchg
adc
std
mov
add
mov
loopne
mov
mov
enter
repz
scas
and
lea
sub
enter
jmp
cmp
dec
xchg
repz
mov
movs
inc
mov
addr16
mov
outs
minps
jl
fstp
pop
ror
push
outs
sbb
xor
push
or
ret
push
imul
(bad)
cld
rcl
(bad)
idiv
es
cmp
xchg
or
shl
dec
ret
int3
hlt
jg
cmp
sub
push
mov
xchg
hlt
ss
ffree
std
gs
mov
pusha
arpl
add
cmp
inc
cmp
xor
test
bound
jb
mov
fwait
mov
inc
jp
or
int
out
xchg
or
xor
fs
push
mov
inc
cmp
ss
lds
mov
inc
inc
dec
push
lahf
loop
ror
fisttp
imul
or
sbb
pop
(bad)
sub
jno
fsubr
pop
inc
pop
idiv
mov
or
cmps
pop
pop
dec
arpl
xchg
pop
rcr
fmul
cmp
vmovaps
push
or
and
mov
rcr
mov
cmp
test
mov
xchg
ret
out
pop
(bad)
pop
mov
fld
mov
jmp
pushf
pop
xor
or
push
mov
(bad)
mov
push
inc
and
add
int3
cmp
add
into
jb
sar
(bad)
fsubr
mov
add
shl
fisttp
mov
add
mov
adc
inc
sub
sbb
bound
sbb
in
pop
enter
sar
ja
imul
sub
xchg
mov
cld
mov
mov
push
enter
cwde
sub
jg
xchg
mov
xchg
mov
test
fistp
enter
cmp
nop
inc
aad
jno
(bad)
and
jl
xlat
jp
je
leave
loop
int3
or
pop
mov
pop
push
std
pop
jmp
(bad)
into
xor
(bad)
or
movs
test
mov
aas
js
sbb
sbb
in
sbb
inc
test
inc
or
neg
dec
or
call
popf
(bad)
inc
xchg
dec
sahf
cwde
in
adc
je
add
jno
jge
stc
dec
and
jnp
push
push
mov
cmp
(bad)
icebp
pop
daa
pop
xor
retf
fst
push
mov
push
pop
jo
stc
fstp
lea
xchg
fnsetpm(287
xor
pop
into
pop
cli
dec
iret
sahf
adc
ret
fistp
push
dec
pop
arpl
jg
adc
pop
sahf
jae
nop
push
scas
fwait
popf
cwde
sub
adc
outs
ret
pop
jp
cdq
jl
pushf
popa
push
cdq
int
push
lahf
mov
push
mov
dec
out
enter
into
cmp
aad
arpl
mov
imul
arpl
shl
ss
out
dec
movs
pop
push
cli
sbb
or
loopne
test
arpl
pop
stos
or
sbb
imul
xchg
mov
sub
shl
shl
inc
jb
or
js
shl
xchg
jg
sbb
in
je
xchg
mov
dec
rol
das
push
push
mov
push
push
push
mov
and
scas
int3
imul
out
scas
mov
pushf
dec
shl
jl
sti
jle
jge
aad
mov
and
jns
loop
fstp
in
xor
cli
je
stc
out
les
add
pop
pop
ror
je
cli
ficom
int
jno
movs
mov
mov
stos
mov
(bad)
bswap
add
add
add
inc
mov
and
push
mov
sti
push
stos
ins
pop
aad
in
int3
mul
cmp
or
cdq
lods
out
sub
xchg
sbb
jnp
je
and
data16
in
mov
adc
pop
dec
mov
jae
daa
jmp
xchg
or
xchg
js
es
rol
and
repz
in
inc
or
or
repz
add
psrlw
jne
rol
pop
sbb
xchg
loop
pop
cwde
movs
jle
mov
in
adc
sbb
lock
adc
ins
icebp
das
lods
aaa
jne
sbb
cmp
repnz
push
repz
mov
imul
retf
push
dec
call
lods
in
xor
adc
stos
inc
inc
lahf
mov
cmp
pop
(bad)
pop
jle
iret
popa
mov
rol
out
loopne
mov
dec
sti
mov
mov
popf
iret
call
inc
mov
int3
xor
pop
sub
outs
sub
jge
add
jmp
into
push
sbb
dec
mov
in
aaa
xor
inc
fist
pop
sahf
xor
mov
data16
and
fwait
mov
je
adc
js
mov
mov
and
lahf
push
xchg
in
mov
sub
fdiv
push
ds
daa
dec
dec
pop
jb
shl
fstp
jge
sbb
xor
xchg
xchg
call
mov
inc
push
lods
mov
sub
std
sub
in
out
jno
dec
sbb
sti
xchg
jle
call
dec
push
add
ret
sub
xchg
adc
xchg
sar
rcl
cmp
(bad)
cmp
mov
mov
test
or
mov
add
jg
and
fdivr
jb
mov
lds
scas
mov
jecxz
test
inc
rol
inc
push
div
lea
jecxz
cdq
sub
scas
clc
add
imul
test
fistp
fisubr
ins
mov
push
mov
mov
adc
(bad)
mov
pop
movs
inc
adc
ja
loope
ficom
xchg
stos
iret
stos
inc
sub
das
stc
pop
push
sbb
adc
clc
dec
mov
adc
push
and
add
push
arpl
cs
cmps
jnp
pop
jmp
and
xor
out
jne
sar
cli
sub
or
div
stc
xor
and
data16
sub
pushfw
sub
mov
popf
cmp
(bad)
retf
shl
movs
aaa
pop
(bad)
xchg
or
movs
aad
aaa
mov
pop
cmp
fdivrp
(bad)
push
xchg
sub
test
and
cwde
mov
movs
and
mov
fucom
clc
add
iret
inc
jecxz
mov
or
jno
daa
cdq
movs
xchg
or
arpl
pop
mov
jae
imul
or
ror
fs
sub
test
jo
xor
sub
or
add
aas
pop
jae
dec
xor
mov
mov
sbb
mov
xor
pop
test
push
jno
test
jmp
push
ror
cmps
es
loope
retf
mov
jl
(bad)
(bad)
hlt
out
cld
jno
aas
les
cmp
jns
mul
in
cli
xchg
push
add
scas
fcmovne
ins
dec
adc
pop
mov
add
sub
ins
xchg
push
adc
arpl
scas
das
cmc
lds
jno
sbb
dec
cmps
imul
dec
pop
add
xchg
scas
add
stc
int3
pop
mov
inc
jmp
je
jns
dec
aaa
outs
ret
daa
jle
aas
jle
mov
ror
ja
xlat
sbb
(bad)
outs
jae
or
xor
inc
into
mov
and
cmp
cli
aad
sbb
or
iret
dec
js
jb
jle
sbb
retf
jbe
xchg
idiv
jns
push
retf
lock
pop
in
out
sub
cmp
xchg
mov
out
pop
rcl
out
add
imul
mov
mov
mov
push
push
or
push
dec
loopne
mov
in
loopne
in
ss
outs
hlt
pushf
fs
jmp
push
lods
arpl
int3
cmp
stc
mov
mov
aas
dec
or
clc
je
dec
mov
call
xchg
or
adc
sbb
adc
and
sub
and
stos
popf
pop
dec
cmps
(bad)
js
xor
cmps
adc
stos
xor
pop
dec
sar
lods
or
bound
stos
sub
and
cmp
je
or
xlat
mov
fild
jmp
lods
sub
arpl
fcomp
add
test
mov
nop
(bad)
mov
jg
mov
adc
xor
xchg
stc
(bad)
cli
inc
sub
adc
dec
(bad)
in
les
mov
shl
ins
and
mov
push
pop
daa
adc
xchg
aas
repnz
lahf
neg
cdq
pop
inc
adc
test
ss
mov
(bad)
daa
int
push
test
iret
add
clc
je
jae
push
pusha
jns
int3
jb
mov
(bad)
xchg
xchg
mov
cmps
inc
repz
mov
imul
adc
sbb
dec
mov
or
xchg
mov
test
ins
or
jmp
call
inc
repz
mov
les
rol
outs
aam
dec
int3
arpl
mov
pop
dec
adc
and
lods
js
call
js
cmps
sar
(bad)
ins
cmp
movs
push
mov
adc
xor
mov
(bad)
out
xor
pop
dec
js
sub
aad
jl
loopne
in
lds
pop
div
movs
call
int
adc
dec
fimul
pop
shl
mov
ret
loopne
fwait
retf
imul
out
sti
sbb
int
lods
xchg
jae
push
cmp
lock
mov
xor
cmp
dec
jae
adc
loop
ret
lock
add
or
mov
push
and
clc
adc
lods
sbb
cdq
cli
movs
imul
ds
xchg
dec
pusha
dec
mov
cmp
sbb
and
or
lahf
push
mov
cmps
adc
mov
stc
mov
mov
ds
push
outs
push
add
xlat
cmp
cmp
push
or
in
loopne
retf
mov
mov
enter
fimul
or
and
xor
mov
mov
and
and
lods
push
xchg
inc
and
adc
inc
mov
bound
xlat
add
jnp
mov
ss
shl
mov
fimul
dec
lahf
sbb
sti
mov
mov
mov
outs
int3
adc
ror
movs
sub
mov
ficom
movs
jb
jne
adc
jns
mov
cwde
mov
test
cmp
pop
leave
inc
ficomp
push
lock
repnz
pop
ss
and
fisttp
mov
retf
pop
mov
push
hlt
out
add
dec
sbb
cmp
shl
mov
and
fisttp
hlt
lds
sub
xchg
stc
movs
out
ss
jg
jmp
stos
fimul
cdq
add
push
(bad)
loopne
clc
sbb
in
pop
mov
outs
or
mov
dec
mov
retf
sbb
cli
das
dec
mov
cmps
fimul
mov
lahf
sub
cmp
mov
xchg
xlat
in
js
call
enter
pop
jne
test
sbb
mov
(bad)
inc
jp
stc
jl
xor
add
ds
cmp
(bad)
mov
pop
pop
rol
out
jecxz
jg
cld
add
dec
sub
jmp
stos
push
sbb
mov
fs
aam
or
mov
dec
test
xor
jb
cmps
adc
xor
popf
out
cmp
cmp
add
test
dec
fiadd
int3
jmp
retf
bound
rol
mov
ins
movs
out
xlat
outs
ret
out
clc
mov
add
push
(bad)
sahf
jae
shl
retf
push
scas
int
aad
mov
hlt
mov
add
push
loope
pop
sahf
std
shr
adc
into
jo
fidivr
mov
in
(bad)
fcmovnbe
jae
adc
shr
xor
pop
mov
retf
mov
mov
and
gs
hlt
xor
lods
push
pop
aam
sub
movs
mov
stos
ins
xor
cdq
mov
fdiv
(bad)
push
add
movs
nop
jle
cmp
lods
sub
mov
(bad)
ret
out
xchg
cmp
jae
pop
xchg
inc
inc
sbb
push
mov
fisttp
inc
mov
jp
out
mov
mov
iret
aad
iret
ret
popa
cdq
cmc
cmp
imul
sub
cs
ret
add
loop
pop
and
inc
push
push
out
(bad)
std
call
(bad)
or
pop
ins
xchg
or
arpl
mov
push
cwde
popf
stos
dec
mov
gs
or
fistp
ins
int3
lods
sub
lods
sbb
inc
stos
mov
gs
sahf
icebp
or
sar
and
daa
inc
xchg
es
in
out
fmul
pusha
mov
nop
test
arpl
adc
test
mov
pop
adc
mov
arpl
xchg
sar
stos
mov
aaa
(bad)
ss
add
inc
ins
ret
jle
sbb
int3
hlt
dec
call
ins
and
inc
mov
jbe
das
inc
lahf
int3
adc
lods
scas
mov
stos
cld
jbe
aaa
inc
(bad)
or
inc
pop
arpl
xor
xchg
es
push
cmps
fwait
test
rcl
pushf
popf
jg
nop
call
popf
add
jb
cmps
inc
xchg
aas
dec
cmps
bswap
fwait
jle
sub
and
outs
fist
mov
mov
jecxz
push
loop
cmp
imul
in
add
and
xchg
xchg
jno
mov
out
mov
pop
or
cmp
mul
inc
jnp
cmp
in
fsubr
inc
jno
mov
mov
lahf
adc
pusha
and
sbb
push
pop
and
push
hlt
sub
out
pusha
ins
lahf
cwde
cmp
sbb
or
js
pop
icebp
sti
je
mov
addr16
mov
fwait
mov
ficomp
push
cli
repz
sbb
jb
arpl
clc
pop
dec
sbb
dec
mov
and
lods
pop
out
ret
inc
inc
(bad)
xchg
in
retf
popa
test
test
adc
pop
jns
pop
fisttp
fcmovb
sbb
sub
xor
gs
add
gs
fmul
adc
mov
(bad)
test
popf
pop
out
cdq
dec
mov
outs
dec
aaa
dec
jg
xchg
cmp
(bad)
sub
mov
out
xor
mov
ins
adc
or
inc
jecxz
into
repz
fidiv
and
push
pop
mov
ins
idiv
jl
jecxz
iret
jne
mov
fisttp
dec
js
mov
mov
in
push
lea
dec
sub
mov
imul
lods
inc
adc
and
int3
jp
inc
stos
repnz
dec
pop
mov
mov
retf
(bad)
loope
aas
push
pop
sub
jno
xor
mov
outs
scas
xchg
push
dec
je
jae
sub
es
xor
retf
ins
cmp
xchg
(bad)
pushf
mov
xchg
dec
xor
gs
inc
repnz
add
sbb
jae
push
outs
or
push
pop
mov
call
push
ds
lahf
cmps
pop
jns
shl
pause
adc
or
(bad)
sub
lods
in
or
sbb
pop
aam
mov
mov
fdiv
scas
mov
popf
call
adc
fwait
jno
sbb
mov
cmp
sbb
mov
mov
mov
xor
push
sti
(bad)
mov
(bad)
fidivr
xor
pop
xchg
icebp
test
ins
sub
cdq
add
mov
xor
retf
test
add
pop
lods
loope
pcmpgtb
cmp
mov
dec
repnz
(bad)
test
repz
jo
ins
cld
xchg
sub
mov
in
ror
addr16
lods
iret
xchg
jge
mov
ins
push
lea
loop
mov
xor
nop
mul
mov
faddp
xchg
jno
push
dec
mov
inc
fs
js
or
push
and
pop
xor
(bad)
cwde
lds
ret
dec
add
mov
mov
call
je
pop
sub
in
mov
xchg
pop
mov
jle
outs
jecxz
retf
popa
xor
and
dec
ret
fnstcw
jmp
fstp
data16
lods
cmp
setno
mov
jae
in
jecxz
inc
xor
jnp
jae
sbb
fidiv
pop
outs
(bad)
cdq
rcr
or
sub
lods
and
inc
or
inc
jbe
ss
popa
jmp
das
push
sbb
rcr
or
fs
and
nop
test
pop
ja
jge
repz
cld
and
movs
jecxz
inc
jmp
jle
add
les
es
mov
sbb
and
dec
xchg
pop
sbb
inc
and
inc
add
jae
(bad)
loop
mov
add
les
cmps
pusha
and
cmps
cmps
ins
iret
and
mov
cmps
push
(bad)
data16
mov
sbb
sub
and
scas
add
repz
and
lahf
jbe
and
xchg
xchg
mov
ins
xor
mov
mov
out
adc
push
pop
jge
sub
push
sbb
cmp
loop
jmp
adc
fist
mov
pop
xor
jno
pushf
push
movs
cdq
(bad)
aam
push
push
push
enter
push
(bad)
adc
pop
test
sub
and
xchg
adc
inc
mov
push
dec
icebp
nop
lahf
ins
fnsave
cdq
loop
xor
mov
ds
rcr
pop
rol
pop
add
sub
test
inc
jg
fsubr
loope
ja
repnz
inc
dec
sub
scas
imul
pop
lock
add
push
push
imul
dec
adc
ret
cdq
fwait
add
pop
jne
inc
pop
cld
push
cwde
aam
in
fisttp
xchg
mov
mov
(bad)
mov
sub
add
lods
adc
inc
retf
mov
cs
jmp
dec
sbb
test
int3
xchg
push
std
js
enter
dec
arpl
out
sub
aas
jmp
add
pop
mov
push
dec
mov
jnp
repz
sbb
push
pop
fld
cmps
loop
dec
xor
lods
ldmxcsr
mov
xchg
sub
sbb
inc
les
jl
shl
mov
dec
dec
dec
aam
mov
cmp
mov
mov
xor
xor
stc
push
mov
fld
lods
dec
pop
rcl
dec
dec
cwde
push
or
push
inc
jns
hlt
xchg
(bad)
not
inc
bound
push
or
mov
stos
ficom
xchg
adc
dec
popa
pop
sahf
retf
fdivr
fiadd
je
cmp
call
push
xor
test
fdiv
out
jle
push
movs
push
stos
mov
pop
movs
xor
jbe
jnp
iret
movs
cwde
inc
push
fistp
push
or
xor
push
outs
daa
bound
shl
jle
(bad)
loope
arpl
cmp
dec
mov
sbb
retf
ret
mov
das
loope
call
sbb
popf
push
sbb
fcom
aad
and
inc
mov
jge
jg
sub
dec
pop
std
es
pop
jmp
jae
ret
mov
xor
push
outs
(bad)
lods
xchg
pop
outs
mov
enter
dec
int
jns
out
fwait
dec
dec
sub
dec
popa
sbb
sahf
xor
sar
sub
std
movs
int
(bad)
test
into
fdiv
popa
dec
(bad)
push
stos
outs
xlat
cwde
adc
mov
(bad)
fdivr
adc
sti
(bad)
leave
mov
int3
call
xor
mov
sub
mov
dec
stc
jmp
sahf
mov
add
inc
inc
lahf
ja
sahf
dec
dec
jge
shl
icebp
sbb
mov
les
jae
in
cmp
jno
add
mov
jno
mov
cmps
mov
in
cmp
pop
das
scas
jnp
cmp
mov
in
mov
jp
cwde
fadd
sub
jp
shl
mov
fwait
xchg
cld
arpl
add
stc
cmp
jp
inc
push
ret
jp
pop
clc
and
mov
sti
jne
and
fisubr
(bad)
in
mov
lods
or
dec
mov
xchg
movs
fcmovne
adc
les
scas
and
xchg
test
mov
shr
jne
fnstenv
dec
sbb
adc
or
cmp
retf
mov
cmp
test
dec
popa
loopne
xchg
or
ficomp
test
xor
lods
add
jbe
(bad)
into
pop
cmp
adc
inc
nop
mov
int
(bad)
xchg
xchg
stos
adc
and
outs
mov
xor
cmp
test
shl
cmp
mov
ret
dec
adc
mov
pop
stos
xchg
add
ror
lods
push
push
jne
imul
xchg
xor
xor
sbb
retf
jmp
xor
es
adc
lock
into
cmp
adc
and
sbb
dec
movs
mov
pop
xchg
sti
lock
mov
in
ds
dec
mov
or
and
mov
cmp
inc
xchg
add
and
push
es
es
push
dec
or
mov
jmp
jle
(bad)
ja
cmp
stos
sbb
jno
iret
je
sahf
xor
shl
jmp
ror
div
out
shl
out
add
mov
and
inc
push
cmp
and
jns
outs
mov
cmps
xchg
(bad)
retf
mov
sti
jb
in
imul
xor
cmc
xchg
psubw
(bad)
jo
jmp
xlat
push
idiv
cmc
xlat
or
imul
inc
icebp
daa
in
sub
sub
lahf
imul
test
mov
xor
fwait
mov
adc
test
sbb
dec
adc
cwde
jns
movs
repnz
daa
and
pop
jbe
pop
xchg
push
cmps
pop
xor
sub
sahf
rcr
inc
or
mov
(bad)
jne
mov
push
addr16
xor
into
data16
cmps
sub
test
daa
shl
dec
movs
addr16
fdivr
pop
sub
retf
xor
lock
and
scas
push
pop
outs
data16
push
stos
mov
leave
imul
nop
add
es
leave
or
rcr
sbb
xor
jecxz
push
dec
push
in
adc
mov
sub
sub
pop
add
stos
loopne
(bad)
ds
nop
stos
iret
bound
sbb
add
xchg
fsub
pop
mov
xchg
sub
or
imul
lahf
inc
cmps
xchg
scas
jae
nop
xchg
sbb
(bad)
mov
fsub
(bad)
push
jmp
sbb
cld
data16
pushf
inc
(bad)
shl
fstp
inc
scas
int3
cmps
add
ds
sbb
loopne
fbld
repnz
mov
xchg
cli
fbld
mov
and
mov
or
mov
inc
push
adc
mov
jno
movs
fist
outs
rcr
icebp
arpl
dec
xor
cli
cmps
int
fbld
(bad)
pcmpgtw
leave
neg
sti
jmp
push
icebp
add
aam
adc
mov
ds
scas
sub
mov
xchg
lea
xlat
ror
inc
inc
jl
retf
pushf
fdivr
aam
ins
les
lahf
cmps
inc
lock
shl
xlat
xchg
out
mov
call
or
(bad)
cmp
pusha
sbb
in
outs
jecxz
or
sbb
or
lods
dec
sub
(bad)
daa
add
sub
xor
fdivrp
sbb
dec
xchg
add
les
aaa
dec
cmp
int
lock
pop
add
repnz
add
loop
lds
dec
push
lock
inc
fild
sbb
push
cmp
cmp
dec
lods
div
outs
xor
sub
cmc
popf
mov
(bad)
cmp
sbb
sbb
movs
sbb
(bad)
int
adc
je
addr16
(bad)
jg
dec
and
cld
dec
xchg
xchg
sbb
cmps
scas
or
lods
sbb
sbb
cmp
mov
int3
inc
dec
fist
cmp
lock
inc
mov
xlat
std
adc
xchg
mov
repnz
cmp
popa
das
mov
rcr
(bad)
xchg
push
or
cmps
add
icebp
pop
mov
inc
fs
inc
sub
aas
lods
mov
jnp
cld
add
mov
pop
scas
nop
outs
mov
pop
or
shl
mov
ins
les
mov
leave
adc
push
and
add
mov
int3
fisub
or
std
cmc
xchg
add
rol
fmul
cmp
scas
lock
cmp
xchg
sub
and
mov
cmp
add
out
ret
sbb
jne
add
inc
push
mov
add
pusha
and
push
dec
mov
out
shr
dec
es
nop
inc
retf
cdq
inc
rcl
push
nop
lock
jb
jne
icebp
ror
add
or
mov
pop
xlat
lock
ret
xchg
ins
cmp
pop
in
push
fnstsw
sbb
dec
rcr
fist
add
adc
adc
pusha
xor
cmc
sub
cs
pop
add
adc
ins
stos
test
jle
push
lea
dec
and
fld
ins
stos
pop
(bad)
xchg
xchg
mov
repnz
add
lods
inc
or
cmps
cs
cmps
(bad)
xchg
jno
xor
imul
std
(bad)
xor
pop
push
jp
loope
stos
sub
push
dec
cld
call
test
inc
hlt
xor
fs
shl
ins
sub
sar
call
js
add
jp
rol
sub
sbb
push
sbb
mov
sub
jns
dec
(bad)
cmps
xchg
int3
or
mov
dec
or
push
jno
xor
push
in
adc
cmp
dec
rcr
mov
jmp
call
push
xchg
dec
and
mov
stos
sub
mov
and
pop
call
cwde
cwde
inc
enter
push
cs
xor
inc
cli
int
sar
add
add
cmp
and
pop
mov
mov
fsub
dec
movs
mov
inc
or
ret
jne
push
fsubr
sub
(bad)
mov
xchg
in
fdiv
xchg
in
jns
cwde
scas
push
loopne
sbb
xchg
aas
imul
cs
and
xor
fisttp
push
in
jge
pop
xor
jae
cmp
sbb
jecxz
ins
dec
pop
sbb
xchg
pop
xor
scas
int3
adc
mov
sbb
arpl
sbb
gs
pop
cmp
bound
and
add
push
xchg
js
lock
adc
mov
inc
icebp
call
jmp
sar
outs
xchg
cli
pop
xor
push
adc
mov
xchg
or
sbb
dec
push
test
sbb
sub
subps
fsub
jl
mov
aad
pop
dec
xchg
movs
cmp
fwait
aas
add
repnz
aad
addr16
jnp
call
jno
shl
push
(bad)
jb
xor
sub
sub
cmp
(bad)
fistp
xor
fs
or
ins
add
loope
loopne
push
pop
mov
imul
add
push
dec
dec
adc
mov
jmp
loop
sar
loop
shr
movs
jns
adc
dec
push
add
sahf
ss
xor
inc
sbb
enter
xor
cmps
inc
mov
mov
add
out
sub
pop
inc
dec
sub
(bad)
adc
or
pop
outs
out
add
and
pushf
or
repz
mov
dec
cmp
les
dec
sbb
popf
lock
fimul
push
mov
add
mov
loopne
loope
gs
imul
cmp
js
iret
pushf
push
retf
call
add
int3
jecxz
lods
in
fild
sbb
fist
ret
cmps
mov
inc
stos
cmc
push
imul
cmp
inc
outs
scas
(bad)
test
pop
xor
(bad)
addr16
jb
ins
enter
inc
jmp
ret
call
out
scas
xchg
imul
xor
mov
iret
shl
sub
lods
lock
inc
repz
fiadd
jecxz
jle
mov
out
mov
bound
sbb
enter
dec
add
ss
dec
in
pop
xchg
pop
in
movs
jmp
mov
std
pop
std
movs
sbb
pop
dec
scas
cmp
aas
mov
cmps
push
and
retf
sti
mov
mov
movs
mov
xchg
lock
add
int
cmp
xchg
popa
dec
pop
fnstenv
mov
ror
push
arpl
jne
outs
loop
xchg
fnsave
mov
push
mov
mov
add
inc
pop
add
das
xchg
loopne
mov
les
cwde
out
mov
cmp
call
sti
cmc
jnp
fsub
and
outs
dec
dec
iret
rcr
jmp
push
add
dec
xor
stc
out
call
push
aas
xor
dec
push
cs
fs
jbe
fimul
mov
(bad)
(bad)
sbb
cmps
inc
pop
and
mov
fwait
sub
jecxz
icebp
pop
pop
push
aas
popf
adc
mov
in
or
adc
ins
adc
mov
push
js
in
into
jmp
cmp
pop
repnz
ss
cmc
fcomp
(bad)
std
dec
fadd
mov
xchg
pop
push
push
inc
mov
je
pop
xor
xor
push
jno
fsub
in
pop
xchg
call
out
add
xchg
(bad)
and
test
xchg
xchg
sub
aas
test
es
mov
dec
scas
xchg
push
mov
mov
sbb
mov
(bad)
lock
push
mov
jmp
lahf
loope
push
loope
ins
test
mov
jge
loopne
xchg
inc
pop
pusha
fwait
push
xor
ins
push
mov
cmp
pop
sub
(bad)
jmp
pop
xchg
cmps
js
sar
inc
lahf
pop
adc
stos
addr16
mov
mov
adc
pop
sbb
aas
fs
fs
jmp
shl
cmp
jo
sub
mov
aas
mov
or
xor
mov
sbb
sti
xchg
aas
push
stc
arpl
or
xchg
mov
repnz
mov
jp
pop
das
sub
pop
xchg
pushf
pop
pop
imul
test
lods
cmp
adc
jecxz
ss
mov
lods
jl
cli
inc
(bad)
hlt
or
mov
sbb
dec
sahf
add
jnp
bound
outs
shl
je
jns
lahf
mov
into
pushf
(bad)
pop
cmp
cld
rcl
cmps
loopne
test
js
cmp
in
lock
fstp
aas
jmp
mov
mov
je
loopne
pusha
xor
pop
dec
aam
iret
dec
adc
ds
mov
mov
loope
push
movs
jmp
dec
push
cmp
sar
std
cmps
cmps
popf
mov
sti
mov
mov
fmul
out
pop
in
inc
mov
jnp
cs
push
cld
sbb
fsubr
rcr
test
das
lds
xchg
xor
xor
add
pusha
iret
and
stos
jmp
fild
mov
out
test
les
std
sbb
inc
xchg
fimul
adc
inc
xchg
fst
push
sub
sub
xor
fs
add
outs
bound
mov
mov
pop
std
(bad)
cld
ds
test
or
inc
lahf
test
mov
lock
pop
jp
push
ds
fnstsw
pop
mov
add
jecxz
push
dec
shld
push
and
in
mov
rcr
ins
cwde
dec
sub
jecxz
adc
mov
clc
and
xchg
pop
xor
fdivrp
add
cli
scas
(bad)
scas
loopne
jmp
push
les
mov
xlat
xor
mov
push
pop
in
or
adc
mov
fisubr
call
add
add
pusha
sbb
movs
into
xor
push
mov
pop
int
test
adc
lahf
xchg
add
mov
dec
xor
mov
pop
mov
ds
lods
hlt
sub
sub
pop
repz
aad
push
jne
or
mov
jmp
mov
arpl
imul
call
pop
pop
push
xchg
(bad)
ins
sbb
dec
ss
pushf
call
pop
outs
xor
das
test
adc
push
mov
push
(bad)
add
and
dec
add
add
icebp
sbb
and
or
shl
cld
xchg
aaa
shl
mov
(bad)
lods
inc
push
push
push
out
ror
scas
adc
ret
inc
xlat
mov
bound
repz
repnz
dec
fsub
out
call
imul
inc
(bad)
out
and
fcom
leave
jb
push
outs
mov
loop
loop
cmp
xchg
add
lods
sbb
mov
adc
mov
loopne
inc
fwait
jmp
xchg
mov
dec
jmp
nop
adc
pop
or
clc
rol
xor
jp
in
mul
and
and
mov
mov
into
add
hlt
std
rol
mov
clc
outs
or
mov
cmp
and
mov
test
sub
add
shl
adc
in
push
lahf
mov
mov
dec
data16
pop
and
mov
cwde
sub
or
push
in
test
add
and
jo
das
ja
je
mov
retf
dec
sbb
cdq
retf
jb
jb
xor
jno
(bad)
std
ja
daa
push
cwde
mov
aad
out
push
(bad)
pop
gs
and
ds
push
or
pop
lds
sub
repz
push
imul
lds
jb
mov
cdq
and
adc
out
aas
sub
sub
add
jge
stos
adc
inc
in
rsm
pop
test
imul
shl
aaa
or
(bad)
ss
icebp
(bad)
inc
lock
mov
das
inc
(bad)
popf
sub
xor
loopne
jne
retf
adc
jnp
xor
dec
cwde
fstp
inc
clc
xchg
dec
dec
and
frstor
fisubr
adc
adc
dec
out
jp
es
outs
dec
dec
dec
aaa
mov
mov
and
rcl
cwde
pusha
mov
dec
mov
fnstsw
out
xor
shl
xor
adc
and
pop
cmc
pop
mov
sub
pop
mov
aas
push
and
enter
fwait
add
ficom
pusha
outs
out
xchg
pop
cmps
mov
lea
jns
inc
ret
(bad)
icebp
cwde
inc
lods
and
xchg
push
mov
cmc
mov
sub
or
jge
adc
mov
and
mov
call
rol
push
(bad)
repz
mov
mov
mov
jno
fwait
jmp
lds
cmp
jge
outs
mov
jp
jo
adc
lods
pop
hlt
ins
mov
pushf
inc
pop
movs
mov
push
repz
push
and
cwde
jnp
sbb
cld
std
not
mov
hlt
cdq
ficomp
jmp
add
pop
out
movs
dec
sbb
pop
outs
ja
pop
clc
(bad)
cmp
push
(bad)
outs
rcr
jge
jl
inc
repnz
xor
mov
popa
lods
repz
xor
nop
inc
adc
dec
or
jmp
adc
push
icebp
shl
mov
cld
dec
jns
add
jns
dec
mov
sbb
sbb
movs
or
retf
pop
dec
inc
xor
mov
stc
jg
sbb
cdq
jg
mov
aad
lods
das
push
retf
jbe
xchg
mov
xor
or
sti
push
mov
add
xlat
je
cmp
push
icebp
sti
call
sbb
outs
mov
jle
pusha
jno
push
push
fisub
dec
daa
mov
sti
add
aad
ror
push
mov
xchg
jle
sbb
mov
std
jmp
jae
add
hlt
stos
mov
dec
sbb
rcr
iret
and
jecxz
pop
cmc
cmp
cmp
clc
gs
int
cs
or
dec
and
mov
mov
sub
or
mov
gs
pop
fldcw
add
pop
daa
add
(bad)
pop
xchg
sbb
add
cs
ret
add
(bad)
(bad)
repnz
outs
rol
inc
add
adc
inc
call
xchg
je
and
and
jae
or
cli
ss
xor
movs
jge
scas
mov
push
jnp
xor
int3
mov
or
add
inc
shl
pop
call
sub
push
ret
sbb
repz
ret
call
jle
push
or
pop
mov
or
mov
lahf
leave
movs
in
rcr
xor
fcom
add
cmp
fsub
and
in
mov
pop
fld
sbb
fisubr
ss
cmc
mov
loopne
pop
mov
neg
jmp
les
aas
push
stos
mov
xor
fdiv
pusha
cli
mov
add
xor
dec
pushf
xor
cmp
sub
push
inc
mov
retf
paddb
arpl
and
adc
mov
and
pop
sub
cmp
call
unpckhps
stc
pop
cmp
mov
sub
jmp
les
and
lods
adc
retf
les
jns
repnz
jae
inc
add
js
inc
into
push
mov
test
xor
adc
pop
retf
push
in
call
jmp
jge
nop
into
mov
mov
aad
ss
mov
rcl
push
idiv
pop
out
repnz
popf
mov
les
dec
add
test
test
adc
push
sahf
cwde
(bad)
hlt
pop
retf
lahf
xchg
jecxz
js
les
mov
or
ret
ret
scas
and
jb
loope
mov
mov
clc
sbb
scas
push
lock
xor
les
cmps
bound
movs
inc
outs
and
cmp
sbb
xor
inc
mov
cmp
jmp
arpl
jp
sbb
outs
push
pop
push
ja
fimul
add
movs
pop
mov
dec
jns
lock
xor
or
jecxz
jmp
ja
and
mov
scas
xchg
pop
add
xchg
aam
add
fisubr
gs
push
lea
popf
(bad)
pusha
add
das
cmps
cdq
ret
ret
cdq
inc
xchg
test
cwde
ins
pop
cwde
ins
inc
pop
frstor
int
mov
add
stos
add
ds
stc
jbe
push
lea
ins
in
int3
shr
je
stos
cmp
mov
dec
inc
push
jno
and
push
pop
jmp
mov
push
sbb
jb
push
jge
retf
adc
mov
and
cmc
(bad)
lods
add
sbb
push
jmp
stos
std
js
add
push
test
push
sti
test
cmp
and
aam
sub
push
dec
or
jnp
or
cmp
popa
adc
cmps
loope
fcom
mov
cwde
mov
xor
arpl
or
mov
iret
xor
inc
push
jmp
xor
xchg
cmp
movs
outs
jl
push
fbld
jmp
adc
cmps
inc
out
(bad)
inc
sbb
mov
dec
push
ins
popa
dec
dec
dec
jns
ja
push
pavgb
scas
aad
arpl
sub
jecxz
push
cmps
cmp
retf
aad
outs
inc
push
repnz
pop
inc
dec
ss
jb
cmc
sbb
rol
das
mov
dec
icebp
popa
aam
push
icebp
and
sub
push
dec
xor
sub
xchg
xchg
sub
jmp
xlat
int3
int3
pop
xchg
sahf
addr16
inc
add
inc
(bad)
ds
fild
leave
mov
mov
add
(bad)
lahf
in
aaa
ss
repz
jo
sbb
in
mov
xchg
push
cmp
out
cmps
aas
mov
daa
shl
sbb
das
cmp
push
out
and
or
mov
mov
xor
push
ss
pop
add
ds
ret
mov
clc
nop
clc
cwde
add
(bad)
adc
rol
push
sbb
jo
cmc
dec
fwait
rcr
aam
out
std
movs
je
sub
jmp
icebp
inc
das
jmp
xor
fcomp
lods
or
nop
or
pop
outs
pop
mov
repnz
gs
js
cmps
pop
xchg
mov
pop
jae
xor
mov
imul
mov
movs
push
movlps
inc
stos
retf
pop
mov
or
in
sbb
lea
lds
jns
imul
scas
std
repnz
pop
adc
jmp
ret
stos
inc
sar
mov
leave
mov
psubw
pusha
jno
jns
aaa
sbb
adc
cmps
mov
inc
stc
mov
or
cmp
or
push
jbe
pop
test
popa
daa
or
mov
mov
sbb
adc
rol
push
cmp
popa
xchg
adc
and
in
repz
into
adc
leave
mov
mov
mov
mov
test
es
push
out
jnp
and
frstor
(bad)
sub
sbb
fld
in
fcom
dec
push
pop
mov
aaa
rcl
xchg
inc
out
ror
fistp
sbb
cmp
and
arpl
hlt
imul
xor
or
sub
cmp
or
mov
cwde
inc
mov
pop
or
je
push
stc
xchg
sbb
lahf
call
mov
loop
scas
loope
fsub
(bad)
popa
inc
(bad)
out
and
fild
sub
mov
cmps
addr16
jle
je
(bad)
jno
out
push
sub
fxtract
lods
jmp
cmp
cdq
frstor
adc
sar
test
shl
push
cmp
rcr
js
mov
fucomi
(bad)
jae
dec
scas
cwde
push
cmp
pop
dec
cmp
and
jb
jge
sbb
outs
movs
test
ja
cmp
mov
ret
je
xchg
adc
add
cmp
lahf
cmp
inc
pop
shr
test
inc
mov
mov
pop
lds
je
pop
repz
das
dec
sbb
jecxz
popf
lahf
ret
adc
ins
cmps
add
mov
mov
sbb
push
jb
std
aaa
push
jl
scas
or
js
xchg
sub
xchg
mov
xor
in
shl
ja
test
or
je
cmp
icebp
sub
ret
push
and
daa
xor
xor
xlat
mov
push
test
adc
cmp
(bad)
in
adc
sub
push
enter
mov
pusha
lds
jne
cld
dec
sar
xor
sub
jg
fldcw
mov
jle
mov
imul
bound
xchg
pop
loop
sub
ds
ins
xor
sub
and
push
ins
xchg
(bad)
adc
std
lds
cmp
pop
shl
cmps
pop
dec
fwait
out
leave
fs
jne
cmp
outs
mov
jle
xchg
sbb
daa
nop
mov
cmp
and
sub
jmp
xchg
inc
jge
inc
(bad)
lea
nop
div
mov
sub
lock
sbb
movs
icebp
into
jns
sti
cdq
dec
xchg
xchg
outs
add
add
or
retf
xchg
pop
pop
loop
cmps
je
ficomp
mov
(bad)
daa
adc
addr16
movs
and
imul
add
rep
movs
scas
sti
mov
push
in
rcl
jmp
inc
pop
push
fsubr
add
(bad)
lea
dec
pop
jo
xor
iret
jmp
fucomip
in
mov
push
ss
sbb
imul
leave
or
cli
mov
aaa
mov
mov
inc
mov
je
push
add
inc
je
imul
ror
pop
inc
or
clc
xchg
cmp
xor
cmps
sbb
inc
sbb
outs
ja
jns
inc
mov
out
out
fsubr
test
mov
jmp
cmp
xlat
fs
xor
jne
mov
mov
pop
xchg
(bad)
pop
adc
pusha
mov
test
mov
mov
xchg
xchg
or
mov
call
(bad)
jno
xchg
fadd
cmp
not
jo
pop
mov
out
(bad)
mov
and
jne
jmp
shl
jg
cmp
sub
jge
enter
(bad)
aam
add
in
cmp
mov
inc
mov
pushf
cmp
jle
inc
mov
push
push
pop
and
in
push
sub
fdivr
add
pop
sbb
ret
out
ins
stos
dec
xchg
nop
repnz
aam
stos
pop
outs
sub
cmp
test
and
pop
dec
addr16
push
xchg
out
movs
loop
push
push
dec
xlat
sub
into
inc
add
and
jp
jge
sub
adc
test
(bad)
fadd
xor
ret
sub
rcr
ror
in
daa
pop
dec
push
dec
inc
aam
add
mov
cli
xchg
stos
and
pop
iret
or
and
test
rcl
sub
pop
das
xor
sub
cmps
pop
jb
fwait
adc
imul
jb
inc
movs
in
push
sub
loopne
(bad)
mov
ret
ja
mov
lds
cmp
pop
mov
scas
shl
inc
push
lds
into
xchg
mov
add
sbb
jp
pop
sbb
mov
repz
sar
push
leave
clc
movs
retf
imul
mov
add
pop
fwait
lods
push
imul
jmp
dec
gs
mov
mov
mov
inc
lock
(bad)
pop
mov
iret
dec
cmp
dec
dec
dec
mov
inc
and
lock
int
cmp
ss
cmps
shl
jle
mov
mov
dec
sti
adc
aad
mov
or
jbe
mov
lahf
mov
ja
(bad)
push
arpl
or
jbe
ja
int
cmp
mov
fmul
cwde
push
sbb
jb
jno
or
or
icebp
and
aam
sub
inc
mov
(bad)
xor
push
xor
cmp
push
cs
cmp
add
inc
jmp
and
test
or
(bad)
mov
sbb
xchg
(bad)
in
cli
xchg
lahf
pop
(bad)
jo
adc
mov
shl
cmp
scas
sbb
xchg
fisttp
jnp
(bad)
mov
ds
iret
(bad)
jnp
adc
cli
aas
or
call
push
(bad)
dec
or
ss
out
sbb
cdq
inc
je
popa
ins
pop
addr16
dec
dec
jo
ror
fcom
out
xor
jmp
cmp
mov
loope
mov
sub
shl
fnstenv
cwde
aam
mov
xor
call
pop
xchg
in
sbb
cmp
or
retf
push
or
scas
sbb
mov
ins
aam
dec
jmp
call
pushf
retf
dec
pusha
jo
add
std
pushf
loop
sahf
pop
mov
mov
cdq
aas
push
dec
jo
and
mov
or
mov
test
in
out
dec
cmp
pop
xchg
retf
xor
leave
cli
cmp
adc
lods
ret
jns
push
pushf
stos
outs
cmp
test
movs
sbb
enter
repnz
pop
inc
out
or
lods
inc
sbb
ja
sbb
dec
leave
mov
or
and
in
mov
inc
add
es
cmp
shl
adc
cs
mov
cmp
cmp
mov
mov
or
inc
sbb
mov
cdq
pusha
cmp
inc
pop
mov
mov
mov
push
retf
loopne
adc
cmp
xor
js
push
call
call
xor
cmps
cmp
scas
mov
test
lea
and
lock
xor
in
aaa
add
(bad)
mov
cmp
mov
pop
cmp
je
pop
jmp
xchg
xor
and
or
in
int3
jle
jg
xchg
xor
xchg
push
pop
ins
jo
and
cmp
mov
mov
and
ss
lea
clc
push
sub
sbb
mov
cwde
je
push
pop
retf
sub
das
xor
add
push
push
cs
aas
(bad)
fld
sbb
cmp
pop
outs
or
mov
sbb
cmp
ins
xchg
ds
es
or
outs
lahf
mov
inc
xchg
pop
not
jb
or
push
push
and
xlat
inc
fsubr
stos
jnp
push
(bad)
cmp
mov
loop
(bad)
mov
cdq
and
mov
loop
dec
int
and
pop
jg
enter
mov
mov
mov
fstp
xchg
add
sub
push
retf
mov
jmp
or
into
stos
jnp
or
adc
fst
lahf
(bad)
add
push
loopne
jb
es
aad
mov
dec
jne
push
mov
aaa
shl
mov
mov
pop
jb
(bad)
mov
je
(bad)
mov
push
mov
and
mov
outs
dec
mov
cmp
div
ds
jbe
mov
push
rcl
push
and
or
cmps
push
cmp
xor
sahf
outs
leave
adc
sbb
inc
jge
xlat
xor
or
bound
jmp
or
js
jae
jle
add
and
jns
popa
sti
jge
inc
and
pop
sti
pop
cmps
jo
das
mov
mov
std
push
(bad)
dec
mov
xchg
in
fdivrp
mov
xor
lea
pop
mov
xchg
push
xor
xchg
add
cmp
lahf
sub
push
dec
mov
jl
daa
inc
dec
icebp
cwde
push
addr16
push
lods
sbb
jae
jp
cmp
ret
test
rdpmc
mov
or
xorps
loope
mov
xchg
fidivr
pop
cmp
retf
pushf
loopne
cdq
je
test
(bad)
shl
iret
les
mov
and
aas
test
movs
scas
sahf
xchg
pop
sbb
or
add
fs
sti
inc
jns
jmp
jne
sub
int3
(bad)
adc
std
jg
xor
jg
out
loop
or
call
and
jae
xor
push
push
push
inc
add
or
mov
mov
cs
ins
sbb
or
cmps
mov
inc
mov
(bad)
out
fcomp
ds
mov
push
out
into
dec
xlat
shrd
scas
js
outs
sbb
mov
sub
or
mov
or
push
or
jle
pop
ss
pop
add
mov
jp
adc
sub
adc
movs
jbe
mov
call
ss
call
jae
inc
mov
jle
gs
push
imul
jo
fs
dec
mov
sbb
mov
nop
(bad)
adc
adc
push
mov
mov
in
dec
mov
lahf
fistp
popf
cwde
push
push
shl
call
fcomp
movs
sbb
mov
test
or
sbb
cdq
and
cmc
mov
shr
xchg
cmp
jle
int3
outs
gs
je
ds
cmp
mov
xchg
scas
jmp
mov
psubb
stos
or
xor
or
adc
sub
dec
loop
es
scas
cmp
sub
or
dec
mov
js
fnstcw
or
sub
add
mov
mov
aas
pop
inc
icebp
mov
jmp
xor
mov
fstp
in
jp
sub
mul
pop
js
rcr
ss
xchg
je
fild
jle
int
fistp
lods
mov
adc
out
outs
mov
out
sub
mov
stc
push
test
pop
in
inc
sbb
test
pop
jo
mov
mov
movs
mov
mov
test
sub
mov
nop
add
(bad)
mov
and
clc
jo
mov
mov
mov
dec
and
outs
mov
and
mov
xchg
xor
lea
(bad)
push
call
sbb
push
mov
ret
mov
movs
std
ins
xchg
(bad)
ss
or
dec
jbe
cmps
ret
or
sub
(bad)
bound
aaa
sti
push
jmp
adc
push
les
cmps
inc
xchg
pop
in
sbb
aam
inc
sub
movs
adc
daa
outs
imul
jb
(bad)
cld
pop
sbb
dec
pop
cmp
push
scas
or
cmp
aad
push
ret
sbb
jmp
div
mov
sub
scas
ret
and
xor
jge
mov
ins
fiadd
adc
(bad)
push
outs
adc
jo
imul
push
call
aam
call
and
xor
lock
cmps
dec
fs
pop
dec
cmp
add
adc
mov
pushf
cmp
ins
fbstp
popf
fstp
pop
shl
lds
mov
inc
(bad)
lods
or
mov
out
idiv
das
out
mov
adc
pop
ret
sbb
leave
daa
jo
test
add
test
fstp
repnz
mov
(bad)
out
xchg
sbb
into
mov
pusha
push
mov
enter
shl
xchg
mov
repnz
imul
retf
mov
and
inc
mov
dec
ja
mov
xchg
dec
and
shl
push
mov
add
sbb
or
sbb
fisubr
mov
jne
movs
pop
jae
dec
cmp
and
cmp
sar
pop
mov
inc
shl
cli
out
xor
lods
mov
mov
not
cmp
push
fist
adc
movs
enter
inc
pop
mov
add
(bad)
push
push
cmp
and
and
and
(bad)
int
inc
test
and
jno
(bad)
push
sbb
inc
pushw
mov
cmp
sub
inc
arpl
clc
add
mov
pop
scas
aaa
or
outs
push
push
sub
adc
es
aas
xchg
push
cs
add
(bad)
mov
push
mov
mov
fistp
mov
mov
test
xlat
movs
mov
and
sub
and
aaa
enter
dec
fisub
push
mov
cmp
movs
fsubr
pop
test
movs
cld
or
inc
call
sbb
and
push
xor
out
call
ror
hlt
cmps
ins
scas
popa
cmp
sti
mov
mov
movs
addps
sub
inc
movs
mov
popf
fist
daa
push
push
jne
cs
movs
fmulp
inc
cmp
xchg
jecxz
cmps
push
mov
fisubr
add
sub
sub
clc
loopne
pop
fcomi
(bad)
mov
add
mov
push
je
xchg
mov
or
icebp
push
pop
ret
sub
in
mov
jmp
inc
mov
mov
and
lds
or
ret
lods
push
icebp
mov
div
xor
jle
dec
outs
test
dec
mov
push
cli
ins
push
shl
sub
shr
cmp
int
or
pushf
inc
test
loop
jle
(bad)
stc
or
mov
es
xchg
pop
sbb
rcl
fbstp
retf
adc
push
xchg
adc
dec
dec
add
popa
or
movs
push
or
dec
mov
push
jp
sub
pop
push
cld
adc
(bad)
popf
or
loopne
cmc
or
mov
mov
cdq
inc
and
sbb
lock
repnz
pop
jbe
xchg
push
jmp
and
pop
pop
out
repz
add
js
mov
stos
cmp
sub
lods
lds
add
and
(bad)
icebp
cdq
jp
mov
punpckhwd
and
popa
dec
lods
call
fimul
xor
push
movs
push
int3
and
push
call
cmp
(bad)
lahf
and
(bad)
dec
sub
fs
mov
fnstsw
(bad)
xlat
inc
dec
push
add
mov
mov
dec
xor
or
retf
mov
fsubp
mov
jno
pop
cmp
test
test
call
arpl
imul
int3
aam
and
and
inc
scas
sbb
ja
add
lods
xchg
and
sub
inc
push
xchg
test
and
adc
aaa
mov
cld
adc
mov
jnp
push
or
mov
pop
ja
add
int3
enter
(bad)
pusha
sbb
into
jno
jb
and
mov
test
dec
or
rol
popf
cdq
xor
cmp
div
mov
push
clc
xchg
mov
enter
and
cmps
cmp
mov
pusha
inc
mov
iret
sub
call
ss
hlt
dec
(bad)
sub
xchg
fdiv
inc
xor
aad
enter
xchg
mov
and
pop
cmp
jmp
adc
dec
jmp
out
cli
int
fbld
add
gs
mov
addr16
sub
adc
dec
xchg
loop
jl
fsubr
inc
adc
mov
inc
jae
inc
jl
ret
pushf
xor
push
xor
cmps
pop
ds
icebp
xlat
dec
push
movs
ss
outs
dec
sub
into
test
adc
fstp
xor
dec
dec
(bad)
jmp
mov
imul
scas
fs
jnp
fistp
fistp
inc
mov
into
sbb
neg
popf
jl
xchg
imul
ror
cmp
sub
mov
lods
pop
in
add
sub
stos
pushf
retf
stos
out
xor
and
dec
push
pushf
adc
push
shl
fnstsw
and
sub
clc
mov
pop
imul
dec
ficom
repnz
xor
xchg
call
mov
stos
mov
push
xlat
in
daa
ds
daa
inc
mov
mov
imul
call
cmp
fsub
cmp
icebp
cmp
xchg
xor
mov
push
mov
cdq
or
cwde
xor
scas
xchg
mov
add
fiadd
mov
pop
mov
js
mov
and
pop
imul
mov
arpl
fist
hlt
loop
ret
or
call
popf
mov
and
scas
nop
xor
dec
sbb
jmp
js
retf
sub
sub
ja
xor
pop
jnp
mov
lods
cmp
pushf
dec
call
mov
mov
das
idiv
sbb
pop
scas
mov
cmp
lock
cld
dec
(bad)
popa
dec
push
pop
sub
or
mul
cwde
adc
mov
nop
mov
mov
or
loope
std
and
push
les
lds
add
cmps
mov
dec
jmp
dec
aam
xchg
imul
sbb
add
and
sti
test
add
push
cli
gs
jbe
jo
push
sub
or
and
lods
xor
and
dec
sbb
mov
loopne
mov
jne
mov
into
or
aas
pop
shl
mov
iret
test
mov
add
adc
or
dec
or
enter
cdq
(bad)
cmps
adc
push
sub
iret
out
and
or
adc
mov
inc
inc
ins
sbb
hlt
and
call
lock
inc
ror
sub
push
or
(bad)
fdivr
ins
or
sub
mov
inc
mov
dec
and
test
enter
cmp
fwait
adc
ret
jbe
shl
rcl
mov
es
loope
mov
(bad)
cli
shr
cmp
xchg
cs
mov
cmp
(bad)
and
jg
stos
jnp
pop
in
push
pop
mov
sbb
test
mov
cli
xor
stos
push
ja
fist
stc
in
es
idiv
dec
push
jns
inc
mov
sbb
in
cmps
and
mov
movs
mov
mov
jge
jo
mov
inc
jl
mov
add
and
mov
loope
sub
retf
mov
repnz
ins
sub
jbe
cs
push
ins
mov
ja
sar
sbb
mov
inc
pushf
push
or
out
add
push
push
call
jg
es
mov
popa
or
xor
(bad)
push
xor
ins
in
adc
jecxz
mov
movs
sbb
jno
pop
clc
push
sub
push
push
push
cmps
rcr
inc
adc
and
sub
rol
mov
rcl
add
jne
jb
mov
sbb
movs
sub
nop
add
out
sbb
cld
cmp
fldcw
loop
or
mov
sub
adc
dec
outs
movs
out
fbstp
test
pop
rcl
ss
in
mov
pop
shr
ja
jb
test
xor
sbb
out
dec
(bad)
movs
sbb
add
fiadd
mov
xchg
mov
dec
inc
mov
imul
and
sub
sub
jne
popf
pop
xchg
fs
out
data16
gs
or
push
fdivr
mov
mov
xchg
or
push
jmp
hlt
pop
inc
and
in
popa
stc
cmp
and
(bad)
fwait
(bad)
xor
rcl
push
lds
push
xor
(bad)
sub
cmp
lods
and
jb
popf
fmul
sub
sti
ds
loope
inc
test
add
out
ret
xlat
les
test
jg
data16
int
add
and
xor
mov
dec
fcomi
or
mov
xor
sahf
ror
es
xor
inc
(bad)
out
push
sub
jb
cmp
das
mov
push
mov
inc
outs
inc
shl
stc
pop
jp
sub
imul
push
pop
mov
sti
stos
push
not
lea
fist
jno
pop
out
fcmovnu
jb
fcomp
cs
mov
(bad)
sbb
or
mov
dec
pushf
or
cmp
movs
cmp
cmps
dec
movs
xor
mov
mov
sbb
call
sbb
sar
cmp
fisubr
imul
fst
jl
add
push
xor
mov
jmp
shr
jmp
pop
jp
loop
push
das
push
ds
or
adc
sub
jns
push
pushf
xchg
je
push
cli
dec
mov
pop
mov
or
popa
jns
scas
es
fcom
stos
fsubr
rcr
in
mov
std
gs
ret
aas
xor
pop
mov
mov
fst
fbstp
or
sub
(bad)
aad
or
aas
(bad)
es
bound
std
or
dec
lahf
sub
xor
push
gs
jl
xchg
inc
lods
xchg
pop
mov
pop
retf
xchg
pop
dec
sbb
xor
adc
gs
add
cdq
cmp
pop
and
dec
mov
movs
call
pop
(bad)
mov
aam
fild
out
loopne
ret
inc
xor
in
ins
ins
mov
cmp
cmp
dec
jmp
clc
lods
js
ret
ss
xor
add
xchg
lods
xchg
mov
sti
js
dec
and
mov
mov
cmp
lds
cmps
inc
popa
add
jg
das
adc
(bad)
mov
jle
push
push
mov
and
push
dec
inc
jecxz
popf
les
out
add
lahf
adc
(bad)
jnp
test
xor
gs
neg
xor
or
xor
retf
cld
dec
sar
stos
sti
popa
xchg
cmp
clc
aas
lock
and
mov
iret
push
pop
jge
sub
movs
mov
mov
sar
sbb
sub
outs
cld
pusha
pop
aaa
jecxz
jmp
jb
scas
ds
je
or
sub
push
xor
in
popf
paddsb
sbb
pushf
imul
dec
cmps
pop
scas
out
adc
sbb
or
cs
in
mov
add
pop
xchg
mov
cs
ss
xchg
(bad)
or
jae
fcmovnb
jmp
into
xchg
inc
inc
add
mov
dec
adc
adc
jne
jecxz
loop
jae
push
or
jmp
xor
jne
mov
add
inc
rcr
dec
mov
test
and
popa
cmp
fiadd
and
and
cmp
mov
sar
data16
fidiv
pop
add
push
stos
enter
mov
xor
nop
xchg
dec
add
fisttp
push
jmp
iret
mov
fcmovnbe
enter
xchg
or
xor
(bad)
fstp
vunpckhps
push
mov
out
cmp
mov
imul
sahf
fidiv
and
idiv
push
jno
test
shl
sub
lods
out
test
rcl
xchg
dec
cmp
and
in
inc
mov
or
dec
xor
add
cdq
out
fwait
jmp
out
or
inc
aaa
retf
je
and
lahf
(bad)
and
test
loope
mov
loopne
fsubr
jl
xor
push
call
into
cmp
ds
and
pop
stc
inc
pop
stos
adc
push
sti
shr
sti
frstor
mov
or
sbb
imul
mov
push
mov
add
xchg
and
lea
cli
xchg
inc
jno
or
daa
in
mov
idiv
mov
fimul
add
or
jno
push
xchg
sub
fist
mov
pop
inc
mov
bsr
sar
out
shl
cwde
mov
jmp
aad
jne
jns
sahf
sub
inc
mov
xor
adc
pop
adc
push
popa
int3
popf
xchg
push
ins
fbstp
imul
inc
sub
mov
jo
cs
push
jno
int3
call
mov
out
cdq
cli
dec
test
int3
mov
mov
sub
mov
cwde
mov
call
xchg
ret
mov
scas
pop
adc
aaa
out
or
ficomp
inc
mov
inc
mov
inc
sbb
mov
xor
pop
dec
stos
imul
sar
add
test
cmp
scas
sbb
out
sub
mov
ret
jo
retf
clc
mov
jns
or
mov
fisub
(bad)
pop
in
push
jmp
outs
(bad)
ficomp
sar
outs
cmp
and
cmp
fwait
xchg
inc
mov
fst
repnz
inc
stos
adc
jmp
jl
sti
fdiv
gs
mov
shr
aad
mov
loopne
jne
jge
ins
or
ret
mov
imul
push
pop
in
xchg
sbb
sbb
(bad)
adc
mov
pop
retf
aas
movs
cmc
aaa
push
rcr
dec
add
(bad)
iret
or
pop
repz
and
(bad)
push
aam
cmp
sti
cmp
ror
xor
pusha
and
push
xor
xchg
sub
imul
jno
mov
out
add
pop
mov
pop
retf
test
jo
mov
lea
or
int
add
outs
test
imul
mov
push
cmp
cdq
out
test
pop
cmp
xor
int
mov
(bad)
out
pusha
dec
ins
or
cs
repz
push
cmp
sar
fwait
inc
jmp
mov
popf
pop
repz
mov
mov
loop
push
call
out
aaa
cmps
lods
mov
inc
nop
push
fwait
xchg
lods
xor
adc
inc
loop
outs
add
cld
loope
scas
fnsave
jle
test
mov
int3
pop
lahf
cli
xor
inc
mov
into
adc
out
xchg
and
jno
mov
inc
scas
call
stc
repz
test
pop
xchg
jmp
mov
mov
and
adc
mov
popa
sub
in
aas
movs
xchg
mov
mov
pop
es
or
(bad)
inc
lock
mov
jmp
push
sub
out
pop
xchg
je
xor
fwait
dec
push
neg
fmulp
loope
ins
push
adc
mov
pop
cmps
test
mov
in
pop
mov
(bad)
mov
in
pop
(bad)
cld
xlat
mul
fsub
sub
stos
ud0
jl
mov
dec
jno
fwait
jo
rcl
dec
sub
repz
mov
xchg
popa
retf
retf
test
inc
rcr
lds
stos
jg
pop
pop
cmp
lock
pop
xchg
lock
mov
mov
out
push
pop
mov
(bad)
scas
(bad)
xchg
jp
popf
adc
repz
pop
(bad)
fidivr
jo
push
mov
xchg
gs
mov
and
mov
sbb
push
sti
adc
mov
mov
mov
and
ins
popa
mov
or
fsub
(bad)
cmp
sbb
fcmovb
(bad)
jo
dec
add
mov
bound
enter
mov
mov
mov
push
dec
mov
fwait
test
sbb
cwde
xor
loope
out
mov
fldenv
test
add
call
test
jp
loope
xchg
dec
lahf
(bad)
into
jecxz
mov
outs
push
push
sbb
xchg
xchg
and
sbb
push
push
xor
push
(bad)
dec
out
cmp
inc
pcmpeqw
xchg
push
test
mov
or
dec
iret
mov
stos
add
mov
inc
mov
rcr
adc
sub
mov
xlat
ret
mov
xor
(bad)
repz
out
jle
rcl
and
mov
inc
jl
jmp
mov
scas
jg
pop
add
mov
rcr
xchg
es
sbb
inc
mov
enter
jmp
popf
fcomp
in
add
push
push
push
jno
scas
push
fs
aam
pusha
push
add
out
cmc
rcl
into
test
in
sbb
mov
or
ss
mov
jnp
and
push
mov
faddp
mov
cmp
cmp
pop
mov
push
imul
jg
mov
cmp
ins
out
cmps
ret
int
imul
dec
js
aam
xor
and
push
dec
add
xchg
jo
in
push
aas
xchg
pop
psrld
gs
or
dec
mov
sbb
jecxz
stos
push
jae
das
mov
aas
movs
fcmovnb
cld
in
push
(bad)
loop
inc
xor
xor
xor
fsubr
arpl
push
add
or
mov
lods
mov
jl
ins
xor
sub
(bad)
pop
push
mov
not
xchg
(bad)
jl
or
jp
inc
dec
lahf
xchg
dec
(bad)
cmps
pop
cdq
inc
add
pop
xlat
loope
cld
outs
out
sbb
aam
icebp
mov
out
pushf
sbb
inc
jge
adc
push
xor
mov
icebp
jb
cmp
cld
lds
(bad)
mov
mov
mov
imul
js
addr16
xor
inc
shr
(bad)
retf
popf
retf
hlt
loopne
sar
scas
mov
pusha
sub
aam
sbb
in
out
jne
or
mov
jb
mov
sbb
pop
out
push
lock
and
mov
ret
jo
dec
xchg
imul
in
adc
and
dec
les
pop
push
sbb
mov
jo
xchg
arpl
aam
popf
and
test
mov
out
div
repz
lahf
sub
inc
(bad)
stc
sbb
and
or
adc
loopne
jno
in
cmp
les
mov
pop
dec
add
cld
mov
mov
imul
xlat
into
mov
mov
lea
test
int3
mov
sti
xor
sub
icebp
jmp
xchg
test
and
int
xchg
mov
dec
push
jmp
xchg
mov
mov
lock
mov
hlt
outs
daa
test
bound
jb
aaa
push
cmp
mov
mov
cmps
dec
fwait
test
pop
or
add
in
jmp
leave
lahf
mov
dec
fwait
adc
push
int3
push
or
pop
push
das
rcl
pop
imul
scas
pop
out
out
(bad)
retf
mov
rol
ins
icebp
lods
mov
daa
bound
(bad)
cmp
fidiv
push
xor
lock
add
jns
cmp
inc
push
dec
lds
inc
jno
fsub
jg
mov
icebp
ss
mov
fsub
icebp
ucomiss
inc
sub
jbe
and
out
or
out
retf
dec
daa
push
push
aad
fs
leave
scas
jmp
imul
adc
adc
jg
pop
push
jo
sbb
cwde
lds
sub
arpl
adc
push
cmp
pop
shl
popa
ror
sub
jb
xor
movs
addr16
rcr
movs
into
(bad)
daa
sahf
jo
sub
in
dec
pushf
inc
mov
mov
test
jo
jl
push
pop
xchg
mov
fwait
and
pop
lock
clc
add
dec
adc
test
icebp
or
cmp
mov
xor
rcr
movs
inc
or
mov
push
pop
xor
sbb
dec
in
stos
or
dec
out
lods
jl
mov
and
fadd
fs
daa
jno
jnp
jle
add
fsubr
jle
and
add
push
aam
push
out
jno
cwde
pop
mov
sub
aad
stos
push
push
jns
imul
push
push
mov
shl
hlt
int
or
cmp
push
aam
pop
int
jno
mov
or
xor
pop
adc
test
hlt
test
scas
fimul
jb
daa
xchg
jg
push
dec
and
into
lahf
add
adc
pop
out
xor
xor
fwait
(bad)
jg
adc
or
xchg
pop
xor
lds
sbb
inc
addr16
sbb
fcom
pop
sub
bound
push
pop
out
mov
sar
shl
mov
jno
push
fdiv
cdq
ror
mov
sub
in
sbb
cdq
or
lock
fidivr
test
mov
leave
sub
mov
or
mov
sbb
pop
sbb
repnz
pop
enter
or
push
push
clc
mov
aad
pop
add
cmp
stos
and
sub
leave
das
not
mov
jnp
fst
xor
pop
or
fs
out
fild
push
fs
arpl
pushf
enter
ret
mov
in
push
xacquire
sti
adc
mov
jns
jecxz
fcmovb
sub
and
add
stc
dec
imul
mov
and
mov
lea
add
test
std
mov
pop
in
xchg
xor
mov
fcmovne
movs
mov
sbb
sbb
in
dec
mov
sar
or
fidiv
push
sbb
mov
loop
movs
and
leave
repnz
push
lods
das
inc
in
jnp
arpl
in
push
out
push
and
fstp
cmp
and
xchg
aaa
jle
rol
sbb
scas
xchg
(bad)
out
sub
cwde
mov
enter
std
mov
push
push
test
xchg
and
jg
push
and
outs
inc
mov
iret
pushf
dec
call
cmp
pop
mov
(bad)
je
jl
sbb
es
or
xor
xor
and
mov
dec
enter
or
jns
jmp
retf
sub
mov
sub
add
inc
aaa
repnz
fcmovbe
lahf
ficomp
pop
adc
mov
test
repnz
cmp
(bad)
xchg
inc
add
int
fnstsw
push
push
test
and
sar
jnp
push
mov
fbld
sub
lds
ud1
xor
data16
jp
mov
in
(bad)
ret
or
adc
push
inc
jmp
xor
(bad)
test
cmc
mov
mov
xchg
mov
cs
cdq
add
jmp
cmp
xor
push
ins
xor
pop
test
scas
push
sti
and
jns
rcr
mov
jp
xor
xor
cld
add
mov
jbe
cs
mov
push
or
pop
int3
cli
mov
out
addr16
movs
shr
lds
rcr
test
mov
cmp
pop
dec
xor
outs
adc
xor
pop
retf
jbe
mov
add
das
data16
sbb
pusha
sti
fist
movs
imul
popa
pop
enter
mov
popf
add
out
mov
cmp
add
jae
dec
mov
popa
out
ins
repz
pushf
sbb
in
adc
mov
aam
inc
dec
mov
cmc
jecxz
jl
inc
das
movs
call
xchg
mov
je
dec
leave
push
int
dec
or
jl
pop
rcl
add
mov
sbb
lahf
dec
hlt
push
push
mov
test
xchg
adc
jnp
pushf
ins
dec
loopne
dec
jmp
into
pop
push
push
inc
outs
adc
xor
hlt
iret
jne
in
jmp
(bad)
scas
mov
and
jp
jl
jmp
mov
jmp
ret
fsubp
mov
into
mov
jg
pushf
xchg
adc
and
adc
inc
xchg
mov
sub
cmp
mov
jecxz
int
lds
sbb
in
push
pop
push
jo
int
push
xchg
jecxz
cwde
and
in
mov
fdiv
(bad)
cmc
inc
fsubr
cmp
mov
shl
daa
cwde
add
loopne
rol
add
leave
ds
ins
cmp
into
push
dec
push
inc
mov
in
js
cmc
scas
mov
jmp
adc
mov
push
push
pop
push
movs
aas
cmp
outs
in
fsubr
ror
push
adc
mov
nop
cmps
mov
xor
js
add
sbb
cmp
(bad)
repz
fdivr
test
dec
xor
jl
cmps
icebp
mov
jb
mov
icebp
mov
jp
jne
jbe
push
out
jmp
jmp
int3
bound
or
lea
add
ror
adc
adc
cmp
addr16
loope
cmc
sbb
cdq
xchg
enter
fwait
sbb
aam
pop
and
scas
fidiv
je
lock
mov
cmp
rcr
out
jb
hlt
and
inc
shr
shr
inc
add
rcl
push
jmp
and
out
xchg
call
imul
inc
(bad)
mov
shl
es
lea
dec
out
mov
scas
inc
pop
mov
aas
push
pop
add
xchg
sub
fincstp
and
and
inc
inc
mov
adc
pop
xor
push
xor
mov
(bad)
mov
test
repnz
(bad)
sbb
out
dec
mov
inc
xchg
xchg
add
push
xlat
jecxz
int
test
fild
repnz
xlat
ins
mov
mov
xor
adc
rol
xlat
cli
fdivr
sub
stos
ret
dec
mov
mov
retf
mov
adc
fsubr
xchg
mov
add
inc
jge
mov
jnp
mov
imul
inc
hlt
cmp
rol
inc
or
call
nop
call
cmp
arpl
dec
loop
mov
outs
xchg
and
loope
mov
fidiv
stos
sbb
scas
and
aas
in
cs
push
cmc
jne
xchg
xor
iret
nop
test
adc
xor
loop
mov
inc
lea
or
ret
push
mov
imul
stc
inc
jae
xchg
ret
mov
jae
hlt
pop
les
or
ins
and
scas
movs
jmp
push
mov
ins
sahf
dec
adc
out
inc
mov
jnp
mov
call
push
pop
cmps
mov
movs
addr16
adc
jo
dec
xor
loope
int
lods
outs
out
pusha
into
inc
fiadd
or
scas
stos
mov
push
imul
call
cmp
xchg
and
jno
push
mov
xor
sub
push
mov
jb
mov
push
or
sub
inc
and
or
jl
sub
mov
in
sbb
add
push
inc
mov
mov
xlat
nop
popf
addr16
jno
stos
fisub
out
fdivr
js
xchg
sbb
adc
pop
mov
mov
test
pusha
mov
mov
nop
call
pop
cmps
push
add
jecxz
sub
mov
cdq
sbb
pop
xor
sbb
push
test
jno
test
sbb
mov
cmp
ror
mov
clc
out
pop
sbb
dec
mov
neg
or
pop
xchg
icebp
lods
mov
xchg
nop
mov
call
push
ds
dec
(bad)
inc
mov
sbb
es
dec
into
push
cmp
mov
jge
dec
js
mov
out
cmp
mov
xor
aam
fiadd
ret
add
jecxz
jbe
add
inc
jl
and
pop
arpl
sub
shl
das
retf
test
test
jnp
sbb
inc
xor
jle
dec
mov
out
test
cwde
in
sbb
jns
icebp
test
dec
adc
sub
jno
push
adc
add
mov
push
jmp
fsubp
dec
out
pop
push
outs
pop
repz
inc
into
mov
ret
scas
movs
fistp
and
push
outs
lock
adc
stos
enter
out
inc
mov
daa
jecxz
test
jbe
test
fcom
mov
les
pop
imul
js
or
loopne
sbb
int3
push
outs
jnp
dec
xlat
adc
or
jle
xchg
cs
adc
sbb
mov
push
xor
mov
retf
jbe
outs
shl
test
sti
pop
pop
mov
jl
(bad)
pusha
cmp
stos
addr16
test
sub
jae
lea
in
ss
mov
sti
sbb
sub
aam
dec
xor
call
jmp
mov
cmp
rcl
adc
dec
ret
dec
mov
stos
pushf
cli
outs
cmp
pop
inc
adc
or
int3
adc
mov
dec
pop
icebp
cwde
pop
and
mov
jl
aas
ds
cld
and
mov
xchg
cmc
mov
test
push
in
(bad)
mov
xchg
sub
jle
fs
(bad)
aas
dec
lods
(bad)
push
add
adc
or
cdq
int3
jge
mov
cwde
outs
dec
in
ret
inc
sub
xchg
adc
shr
lods
scas
cmc
fwait
popa
mov
pusha
xchg
add
dec
or
mov
popa
mov
sub
pop
xchg
je
cmps
pop
dec
(bad)
mov
sbb
ja
fcomip
push
(bad)
fneni(8087
sar
fisub
and
(bad)
rol
ja
sar
daa
jmp
and
xor
pop
cmp
mov
add
punpckhdq
jbe
test
mov
push
push
mul
(bad)
pop
lods
mov
xchg
mov
mov
mov
ret
cmc
inc
sbb
inc
jmp
adc
mov
je
sbb
push
sub
in
pop
push
dec
(bad)
loop
sbb
push
mov
outs
jns
jae
inc
cmc
(bad)
aad
push
inc
(bad)
std
mov
xchg
adc
outs
ins
lods
push
stc
mov
sahf
push
mov
lods
jno
cdq
in
adc
aad
add
pop
mov
sbb
out
add
sub
test
clc
js
fwait
cmp
pop
cmp
sbb
jbe
mov
(bad)
fbstp
xchg
add
push
stos
jb
leave
sbb
cmp
and
loop
clc
mov
ror
mov
mov
fistp
cs
add
sahf
outs
xor
mov
xchg
popf
test
retf
and
ins
jle
stos
xchg
add
mov
inc
or
mov
jae
cmp
sub
lock
nop
xchg
pop
cmp
loop
mov
ud2
cmps
pop
adc
icebp
shr
mov
xchg
fwait
xchg
data16
and
test
rol
test
add
jp
in
lea
mov
xor
les
or
es
daa
sub
cmc
cmp
push
int3
arpl
int3
ret
gs
imul
pusha
movs
mov
out
fidivr
jb
(bad)
movs
push
(bad)
sahf
push
out
ret
ins
jbe
dec
sub
cld
inc
scas
mov
jmp
mov
sbb
jae
in
cmp
and
es
xchg
fnstsw
rcr
adc
addr16
or
push
pusha
fmul
das
mov
push
mov
sub
xchg
push
movs
lds
fild
out
cmps
cmp
fdiv
push
aas
mov
lods
hlt
(bad)
xchg
mov
add
jg
mov
aad
aad
rcr
jbe
fs
test
test
push
arpl
jg
xchg
sbb
xchg
fidiv
in
mov
pop
cmovb
xchg
mov
leave
scas
and
ret
dec
cmp
and
cli
shl
adc
pop
movs
push
push
(bad)
fmul
je
rcr
es
movs
sahf
mov
xchg
ss
jge
sbb
pop
adc
add
loopne
sub
icebp
popf
add
add
fild
or
pushf
in
or
lahf
ja
stos
xchg
and
gs
adc
fist
mov
mov
add
cli
add
xchg
inc
dec
mov
jae
ja
mov
mov
fstp
hlt
sti
jae
inc
lods
cli
jb
movs
sub
push
mov
test
imul
repnz
add
int3
addr16
jae
xlat
aam
inc
mov
dec
pushf
test
ins
cmc
outs
cli
mov
(bad)
xchg
cwde
inc
(bad)
cdq
inc
jmp
aad
pop
dec
(bad)
dec
xlat
int3
pop
shl
ret
dec
scas
pop
mov
mov
dec
and
(bad)
mov
div
jno
stos
cs
inc
jbe
add
lds
xchg
imul
leave
call
ror
setge
jne
ret
or
cmp
add
test
mov
push
repnz
inc
retf
mov
cmp
movs
icebp
adc
push
and
cwde
mov
call
mov
pop
xor
push
call
push
pop
dec
gs
sub
dec
pop
fild
cmp
mov
in
mov
loop
adc
test
mov
mov
xor
jno
jmp
lea
(bad)
sbb
(bad)
ss
add
sub
(bad)
out
xor
push
les
dec
ds
xor
xchg
dec
lods
mov
mov
lods
mov
mov
fidivr
movs
cmp
mov
xchg
pop
sbb
imul
popa
mov
mov
cmc
cld
jle
push
outs
mov
(bad)
call
nop
lock
fsubr
dec
sub
push
push
or
retf
or
and
add
lods
hlt
out
mov
xchg
out
push
jns
es
or
cdq
add
cmp
or
leave
adc
jle
cdq
mov
pop
pop
mov
and
inc
jns
push
xor
xor
mov
retf
mov
jmp
jg
xlat
push
popa
movs
jns
add
aas
ss
cwde
test
jecxz
pop
mov
jno
and
jecxz
ja
inc
mov
movs
dec
pop
and
(bad)
or
dec
or
out
sbb
iret
mov
inc
int3
clc
pop
enterw
adc
outs
jl
das
dec
test
imul
outs
sbb
sbb
mov
lahf
aaa
jle
mov
sub
stos
xchg
push
(bad)
sub
dec
sub
movs
xchg
jl
cs
cmp
or
out
xchg
fsubr
and
add
push
fadd
ins
in
test
push
lock
push
inc
mov
jns
xor
(bad)
paddb
sbb
and
mov
add
pop
xchg
shl
mov
mov
repnz
in
shr
add
mov
fwait
pop
mov
cdq
mov
call
retf
pop
pop
inc
out
mov
cmp
into
mov
cmps
dec
sbb
(bad)
icebp
imul
mov
shl
(bad)
mov
add
movs
mov
mov
adc
jmp
inc
fiadd
out
repnz
jno
inc
xor
xor
test
and
add
ins
jle
mov
shl
sub
popf
shr
jne
mov
mov
in
lods
cwde
into
sbb
inc
push
jmp
loope
dec
jnp
jnp
mov
movs
cmps
dec
adc
dec
rcr
cmp
je
dec
pop
fnstsw
icebp
aas
ficomp
sub
pop
sub
lock
sub
xchg
movs
mov
dec
inc
icebp
loope
adc
lods
out
pop
adc
shl
or
pop
lods
jae
jbe
loope
sahf
imul
aad
push
xor
inc
aad
cmp
and
shl
xchg
rol
dec
jbe
call
mov
sbb
and
add
sti
or
push
jl
out
popf
pusha
test
setns
add
cmp
jne
out
sub
sbb
jmp
rol
outs
cdq
loope
add
mov
add
test
jo
pushf
das
retf
or
(bad)
cld
xchg
outs
retf
mov
cmps
jmp
push
sub
jb
or
repnz
fsubr
lds
leave
pop
mov
pusha
xchg
jne
pusha
loop
ds
ret
fiadd
xor
mov
mov
loop
mov
loopne
shr
jno
cmp
jge
inc
movs
arpl
pop
lods
ret
sub
mov
mov
xchg
push
jp
mov
xor
rol
rcl
mov
rol
stos
in
dec
(bad)
stc
push
sub
cmp
icebp
call
cmps
(bad)
arpl
mov
adc
ins
mov
xchg
inc
pusha
push
mov
mov
mov
xlat
cdq
test
mov
mov
xor
pop
jb
ror
mov
or
sub
rcr
lods
jnp
mul
and
pushf
scas
ss
movs
mov
or
inc
sti
cmp
pushf
sbb
push
adc
cmp
or
and
ffree
cmps
add
ret
xchg
stos
pusha
outs
mov
outs
sbb
dec
push
pusha
out
dec
pop
aam
pop
scas
add
ins
rcl
lods
enter
or
xchg
pop
inc
push
sbb
inc
xchg
cmp
adc
sbb
neg
js
and
mov
and
enter
fstp
adc
(bad)
sahf
dec
sub
ret
dec
rol
xchg
call
jmp
jg
fidiv
rcr
mov
and
and
movs
adc
push
icebp
call
pusha
cmp
mov
push
js
ret
fist
mov
arpl
jge
retf
cmp
int
fldcw
outs
gs
jg
das
je
mov
xor
jne
aad
mov
repz
jecxz
lock
xchg
mov
xchg
leave
jp
scas
sub
adc
repz
inc
jg
sbb
sub
jne
jmp
mov
dec
adc
cdq
sti
imul
or
les
movs
in
fcmove
fwait
jle
mov
gs
mov
aad
mov
pop
out
(bad)
idiv
fsubr
cmps
mov
in
inc
popf
aaa
inc
cmp
loope
ret
push
scas
addr16
or
cdq
jne
or
aam
popa
inc
dec
call
gs
stc
stc
aas
mov
and
xor
xchg
arpl
js
adc
mov
sbb
xchg
inc
addr16
mov
cmp
int3
leave
jno
sub
adc
push
cmp
xchg
std
dec
mov
stos
retf
inc
jge
int
mov
mov
lock
jbe
push
mov
xchg
sub
movs
adc
add
loope
aas
lods
in
or
dec
jo
jl
rcr
push
mov
mov
cmp
fist
jae
or
adc
cmp
pop
sar
ret
mov
movs
mov
clc
cmp
call
push
fdiv
xor
imul
imul
retf
nop
push
push
pop
mov
movs
mov
xor
add
mov
cld
lods
stos
ja
lock
(bad)
dec
repz
ss
lods
imul
(bad)
cmp
and
clc
pop
cmp
add
mov
pop
or
push
fstp
addr16
jmp
sbb
pusha
or
xor
sbb
xor
jge
dec
shl
add
shl
push
sahf
sub
sbb
sub
sub
xchg
loop
pusha
ror
inc
jmp
icebp
shr
jg
inc
movs
push
xlat
add
add
out
mov
adc
or
ret
mov
jb
jne
jnp
ins
mov
jge
loop
sbb
or
jle
xor
jle
add
cmp
or
jge
jg
in
imul
xor
mov
(bad)
out
push
or
je
xchg
fidivr
sbb
rol
adc
call
xchg
movs
sub
(bad)
inc
sbb
dec
push
cmp
aaa
mov
(bad)
fild
push
push
inc
daa
sub
add
push
test
(bad)
sbb
in
aam
xchg
inc
fdiv
mov
push
push
mov
sar
sbb
int
sbb
loope
jno
xchg
cmp
or
cmp
push
into
stc
add
xor
sbb
inc
inc
lds
adc
cmps
inc
dec
aam
mov
cdq
sbb
mov
ret
push
mov
sbb
push
mov
mov
xor
xor
and
ds
shl
retf
fidiv
pusha
xor
arpl
cmp
push
int
and
div
lods
push
fdiv
mov
jo
xor
ds
pop
idiv
xchg
add
(bad)
fist
jbe
enter
xor
js
retf
or
mov
dec
cmp
cmp
push
loop
shl
xchg
push
jmp
mov
mov
push
push
push
sub
sahf
mov
push
mov
xchg
sahf
cmp
push
cmps
loopne
pop
xchg
jns
call
scas
enter
clc
inc
ss
mov
out
add
xchg
shl
lahf
mov
test
leave
xlat
(bad)
mov
mov
retf
ret
inc
push
dec
fstp
js
jge
aas
cs
ds
xor
cwde
cmp
pop
mov
fwait
push
mov
retf
push
inc
and
lods
xor
xor
out
dec
int
push
mov
mov
mov
fidiv
pop
mov
stos
cmp
lods
and
mov
ret
adc
repz
sbb
add
mov
imul
sti
xchg
sub
loope
jmp
test
cmp
or
sahf
cld
ss
xor
push
mov
xchg
push
test
adc
xor
add
pop
mov
dec
mov
aam
nop
jns
cmp
or
jmp
ret
jmp
cmp
ds
mov
push
jmp
xor
les
xor
mov
push
out
sbb
mov
sti
xchg
push
jb
push
add
ret
mov
pop
jno
(bad)
cwde
repz
push
shr
xchg
js
dec
jmp
jmp
lea
mov
jb
fbld
loop
or
sub
xchg
mov
hlt
loop
in
aas
pop
sti
into
xor
je
jmp
mov
mov
or
(bad)
pop
stos
sub
(bad)
out
movs
push
dec
popf
mov
jnp
mov
inc
out
popa
jmp
and
adc
ret
mov
inc
call
in
add
rcl
inc
xor
cmp
fcomip
jo
pop
pusha
pushf
pop
je
popf
or
push
pop
or
sahf
inc
or
inc
mov
jnp
sar
cmp
xchg
lods
pop
inc
cdq
xchg
jmp
mov
(bad)
stc
ins
stos
dec
pop
sbb
ret
out
ins
ds
test
js
fst
pop
je
dec
sti
scas
xchg
xchg
mov
pop
adc
sub
sbb
inc
fsubr
in
and
fwait
inc
arpl
push
xlat
pop
sub
fdivr
out
cmp
xor
mov
add
inc
jl
push
cdq
rcr
jne
xchg
mov
jg
add
sbb
inc
pop
repz
(bad)
outs
pop
xchg
loope
pusha
sbb
inc
sbb
cs
cld
xchg
fs
mov
jo
xor
dec
xchg
fst
inc
shr
ss
(bad)
pop
sbb
std
imul
pop
scas
test
idiv
(bad)
cmp
cmp
jmp
test
je
inc
mov
inc
inc
adc
jbe
adc
js
mov
adc
fwait
sub
jle
or
adc
(bad)
fst
stos
push
xor
stc
xchg
and
mov
xchg
mov
push
mov
pop
cmps
mov
mov
test
stos
xchg
pop
outs
fdivr
movs
adc
xchg
movs
fisub
fild
sub
(bad)
fwait
jnp
xchg
imul
test
sbb
aaa
push
xchg
mov
add
or
movs
or
jg
fisub
enter
cmc
inc
adc
mov
popa
xor
jnp
pop
pop
ja
or
call
mov
sbb
scas
cmp
push
adc
mov
pop
idiv
xor
dec
test
fstp
fst
daa
arpl
pop
pop
dec
mov
mov
mov
xchg
add
jecxz
ret
jae
xchg
adc
pushf
in
pushf
(bad)
sbb
jbe
bound
inc
cmps
or
lods
add
cmps
sub
imul
jae
outs
mov
cmp
ret
popa
inc
call
add
pextrw
jmpw
and
lods
or
(bad)
(bad)
fwait
cld
xlat
or
pop
jae
sahf
inc
test
mov
cmp
out
sub
pop
jg
sbb
or
mov
mov
mov
mov
push
sbb
or
sbb
jge
mov
xchg
jmp
hlt
sbb
nop
inc
mov
mov
out
daa
push
fcom
retf
rol
cmps
lock
out
jmp
fwait
nop
mov
mul
pop
or
jecxz
ret
sbb
aas
daa
out
aad
ret
fnstsw
test
stc
aaa
adc
imul
int3
cwde
xchg
out
dec
std
out
js
loop
push
cwde
push
call
xor
hlt
addr16
push
mov
mov
out
into
jg
mov
xor
xlat
add
mov
dec
rol
stc
mov
or
cmc
sbb
mov
inc
cmp
(bad)
loopne
xlat
out
sub
int
ror
data16
push
push
retf
mov
pop
ds
fild
cmps
adc
sub
or
es
loop
xchg
call
outs
fldcw
mov
dec
cmp
fstp
xor
mov
lea
dec
cmps
jo
jne
ss
and
jmp
lods
fnstenv
sbb
sbb
sub
mov
pop
fist
xchg
test
xchg
mov
add
add
pushf
or
clc
fwait
scas
jbe
cmp
adc
fadd
fild
or
fcomp
add
(bad)
aad
iret
and
jl
sti
pop
gs
nop
xor
rcr
call
and
imul
adc
jl
rcl
jnp
fadd
(bad)
jmp
mov
cli
aas
mov
fsub
out
lods
movs
adc
(bad)
int
adc
inc
popa
pop
add
aaa
xchg
xor
and
out
sbb
ss
xor
rcl
pop
cmc
(bad)
clc
push
js
fpatan
ss
jbe
sar
dec
mov
outs
call
push
mov
daa
adc
jb
popf
mov
jmp
push
or
sti
mov
test
scas
push
das
add
or
push
test
js
scas
fld
ds
outs
xor
adc
push
leave
lock
inc
int
inc
jbe
mov
xor
popa
jae
add
mov
xchg
in
pop
cmp
call
shl
out
or
ds
fmul
(bad)
rol
cmp
adc
adc
mov
xchg
xchg
cmp
push
jo
xchg
dec
stos
cmc
rcl
pusha
mov
jbe
sti
dec
fwait
sbb
sub
pop
mov
sbb
test
fcom
inc
or
push
movd
call
or
call
push
mov
adc
shl
xchg
cs
cdq
pop
test
rol
clc
ret
int3
outs
mov
dec
dec
cmc
push
(bad)
jae
and
fnstenv
inc
stos
xchg
es
(bad)
mov
ins
rcl
repz
dec
and
pop
mov
ficom
les
sbb
call
and
(bad)
mov
xlat
dec
mov
xor
shr
add
stos
sar
pushf
jnp
repz
xor
cmp
or
add
cdq
fxch
movs
and
mov
xchg
inc
lds
push
(bad)
aam
push
int
daa
in
add
dec
push
jbe
(bad)
out
adc
mov
aad
mov
push
or
cmp
sub
sub
mov
push
lock
int3
sbb
inc
inc
jae
shl
jmp
cmp
test
movs
popa
and
in
int
add
cli
call
mov
mov
mov
(bad)
or
add
push
mov
je
xchg
fcmovnb
ret
mov
push
iret
(bad)
imul
and
jg
xchg
sbb
xor
call
repnz
imul
cmp
sub
push
loopne
lods
push
pop
stc
xlat
aaa
call
mov
add
vsubpd
sbb
dec
ficomp
pop
sub
stc
stc
ins
fild
ja
loopne
fs
jmp
fucom
adc
js
out
inc
lea
ins
stc
add
leave
sub
loop
sub
ds
mov
adc
outs
lahf
adc
ins
xor
mov
addr16
inc
adc
xchg
imul
inc
sub
shl
es
jmp
inc
xor
push
mov
xor
mov
pop
push
add
sahf
jg
and
hlt
jp
mov
jmp
inc
popa
jo
aaa
mov
adc
mov
hlt
add
cdq
mov
adc
adc
scas
pop
lahf
xchg
stos
cmp
out
cmc
xlat
pop
jecxz
fld
hlt
retf
inc
fmul
lds
(bad)
aam
repnz
sbb
mov
hlt
test
cmc
dec
xor
inc
in
mov
or
out
aad
add
mov
retf
dec
(bad)
sti
scas
imul
add
push
test
lock
dec
cmp
(bad)
adc
js
mov
jmp
push
stc
out
lock
pop
ins
push
imul
add
mov
cdq
adc
sti
mov
pop
and
cmps
enter
cs
outs
jmp
iret
xchg
sub
push
lock
jne
add
mov
lahf
jmp
not
test
jo
es
xor
sub
xchg
pushf
jae
cmp
jp
xor
fst
std
xchg
psllw
mov
pop
mov
fmul
mov
idiv
sub
jns
mov
and
sbb
mov
sub
ins
mov
and
dec
push
or
add
call
mov
ror
add
imul
(bad)
cli
out
xor
pop
jb
ret
jns
sar
aaa
jb
adc
mov
push
stos
mov
cld
in
mov
dec
or
mov
mov
std
call
stos
sub
loopne
(bad)
fidivr
or
fisttp
cmps
gs
repnz
ficomp
inc
jl
mov
pop
sub
sti
les
call
cdq
out
push
sbb
scas
mov
lea
cdq
inc
mov
hlt
mov
xchg
dec
imul
push
jne
hlt
movs
cmp
stos
loop
stc
js
cmp
jne
sub
xlat
pop
pop
ja
push
shl
shl
jbe
inc
and
add
sub
xchg
fs
jmp
adc
and
mov
xchg
inc
add
inc
sbb
ins
cmc
retf
xchg
push
test
xor
ss
test
dec
xor
sbb
das
mov
mov
sahf
lahf
enter
xor
shl
(bad)
xchg
sub
mov
(bad)
mov
and
xchg
pop
adc
xchg
cmp
dec
mov
iret
in
sbb
outs
sub
mov
pop
rcr
or
movs
xchg
pushf
jae
(bad)
daa
inc
inc
out
xor
jmp
xlat
dec
inc
cmps
out
pop
inc
popa
push
and
xlat
xchg
int3
js
outs
jae
push
mov
fisub
neg
arpl
das
jne
cmp
clc
call
stos
sub
es
jge
add
push
and
sub
mov
sti
out
fsub
int
xchg
and
jae
pop
cmp
ret
into
dec
ffreep
push
je
jno
imul
neg
in
and
jno
outs
jo
mov
dec
mov
dec
jb
sbb
mov
xchg
mov
ins
dec
fstp
jae
pop
ficomp
in
arpl
mov
inc
push
rcpps
cmp
cld
das
adc
and
int3
jle
(bad)
mov
imul
sbb
push
or
call
jb
jmp
(bad)
fistp
mov
lea
imul
loope
or
outs
inc
and
fcomp
pushf
dec
xor
inc
mov
cli
imul
mov
stc
push
or
mov
adc
call
mov
ja
(bad)
cs
les
retf
mov
sub
adc
xchg
jmpw
pop
test
(bad)
jnp
jnp
sbb
cmps
add
imul
repz
loope
sbb
out
es
ins
mov
pop
inc
stos
call
int
js
mov
mov
fld
rol
sbb
jle
mov
stos
xchg
inc
fcom
and
popa
or
ret
jmp
and
stos
inc
cld
pop
mov
les
jecxz
cdq
pop
sub
push
je
outs
repz
fcmovnu
xor
ss
(bad)
hlt
jmp
mov
stos
push
mov
push
pop
push
lods
inc
xor
jmp
mov
mov
sub
pop
push
xor
xor
and
xlat
or
adc
xor
leave
mov
repz
repnz
add
and
dec
mov
loope
les
sbb
js
adc
mov
inc
inc
inc
cmp
out
sub
loope
dec
aaa
jmp
lds
cmp
jg
push
rcr
sub
icebp
pop
sub
mov
jb
jb
or
push
inc
push
jbe
imul
push
jo
jb
sbb
ja
xor
sbb
aaa
lods
arpl
jg
scas
fdiv
clc
adc
popa
jp
and
xchg
std
mov
jmp
xor
outs
push
sub
pop
dec
mov
push
je
jno
or
jae
aaa
mov
sbb
jp
(bad)
cli
push
mov
jmp
lock
or
adc
(bad)
outs
mov
(bad)
push
mov
(bad)
bnd
xchg
out
xchg
push
dec
push
lods
jg
xchg
cmp
sahf
gs
adc
pop
jns
push
daa
mov
ins
jae
add
push
push
(bad)
pop
adc
add
lods
pop
mov
cld
dec
jns
sub
push
int3
(bad)
jl
cmp
rol
imul
loope
out
mov
out
and
and
adc
ds
inc
adc
xchg
pop
pop
sbb
sbb
push
inc
int3
test
das
mov
adc
fs
loopne
mov
fdiv
push
aaa
std
jbe
and
cmp
in
xchg
jecxz
(bad)
cmp
mov
cwde
loop
aam
mov
clc
jg
daa
mov
pop
jne
pop
jmp
mov
bound
mov
mov
dec
(bad)
leave
movs
dec
add
clc
push
or
shl
out
push
add
xchg
mov
sbb
push
bound
shl
pop
cmps
dec
or
mov
call
and
jmp
adc
icebp
and
rol
aam
inc
fld
ret
dec
pop
cmp
scas
test
in
push
jp
rcr
adc
dec
jmp
add
xor
pop
xchg
xor
mov
call
sub
js
jp
jge
cmp
fwait
mov
push
mov
aaa
(bad)
jmp
fsubrp
push
cmp
mov
pop
das
xor
mov
sti
sar
pop
push
inc
outs
jb
adc
jo
xchg
jmp
mov
ret
dec
fistp
(bad)
(bad)
add
push
in
stos
mov
fs
out
fsub
test
(bad)
ins
and
pop
mov
inc
loopne
repnz
aaa
and
retf
data16
hlt
mov
pop
push
je
or
sbb
cmp
inc
test
xchg
pop
jbe
outs
mov
xchg
sbb
lods
mov
call
jno
pusha
cmc
jl
test
std
mov
test
mov
push
dec
cmp
jne
fistp
or
jmp
lds
and
jmp
xor
mov
cmp
sub
into
sbb
xchg
sbb
out
sub
(bad)
sub
aam
jb
mov
aaa
lock
add
mov
scas
adc
or
stos
pop
jecxz
mov
js
jo
fist
jae
bound
xor
dec
in
sub
repnz
mov
or
mov
pop
aas
cmp
and
adc
push
rcr
add
call
cmps
add
daa
in
fdiv
movs
xchg
adc
adc
ret
xchg
inc
sbb
ja
mov
and
pop
mov
imul
std
lock
outs
cmp
or
xor
xchg
xor
mov
push
mov
push
push
gs
mov
and
xchg
mov
and
enter
cwde
bound
lods
cmps
jmp
mov
(bad)
pop
add
imul
stos
(bad)
and
(bad)
lea
stos
ss
fstp
jp
fs
out
test
push
scas
jns
sbb
iret
out
aaa
pushf
shl
rcr
inc
mov
icebp
lods
mov
sub
dec
es
sar
adc
jmp
push
pop
mov
push
hlt
push
xor
bound
jg
repnz
jmp
(bad)
daa
jle
out
mov
and
fstp
neg
xchg
add
push
lods
pop
jbe
aaa
adc
add
cli
dec
pop
ror
or
sbb
adc
push
cmp
dec
shl
js
cwde
xchg
and
sbb
mov
and
xchg
add
(bad)
jle
ja
push
mov
fsub
add
scas
pop
stc
xor
ret
aad
pop
cmps
cmp
or
mov
je
xor
lahf
js
cld
(bad)
int3
or
adc
neg
sti
lods
movs
iret
adc
xchg
into
call
inc
or
dec
mov
aaa
sbb
push
int3
loopne
sbb
sar
inc
inc
or
push
add
inc
sahf
repnz
mov
pusha
adc
xlat
jns
les
daa
clc
mov
not
imul
lods
bound
mov
mov
out
xor
pop
out
cmps
ins
or
scas
sub
sub
or
popa
(bad)
imul
idiv
add
ins
fisttp
sub
pop
push
ret
call
mov
xor
inc
mov
xor
pop
jmp
in
lock
lods
fwait
cmp
add
int
cmc
or
out
push
ret
dec
fdivp
pop
popa
daa
in
test
push
nop
stos
xor
stos
push
mov
mov
push
cmp
push
jb
or
fiadd
sub
or
mov
icebp
mov
call
sbb
repz
ins
shr
std
fisubr
pusha
shr
outs
push
mov
and
mov
jle
mov
retf
and
lods
mov
jecxz
push
int3
push
movs
cmp
and
mov
push
push
repnz
xlat
xchg
jg
fcomp
pop
mov
push
cli
dec
fld
pop
xchg
rcr
mov
shr
ds
sbb
ins
(bad)
movs
inc
mov
xlat
clc
xchg
(bad)
adc
sahf
out
adc
inc
bnd
pusha
fstp
xor
clc
add
jmp
adc
fstp
jle
into
cmps
fisttp
(bad)
ffree
mov
daa
push
push
push
movs
retf
and
ds
pop
test
pop
push
inc
mov
inc
das
xchg
xchg
test
xchg
push
push
pop
adc
fdiv
jmp
ret
sar
inc
cmp
fsubr
loop
(bad)
cmp
sbb
xchg
mov
jp
mov
add
movs
daa
pmulhuw
fisubr
out
mov
idiv
inc
adc
mov
pop
in
add
jmp
sub
jb
inc
adc
mov
(bad)
jecxz
pop
(bad)
movs
int
cmp
xchg
mov
mov
mov
or
ins
push
push
xor
outs
push
lea
sub
jne
scas
dec
mov
jp
inc
sub
push
push
cmp
scas
jne
outs
sbb
dec
push
(bad)
fsubr
stos
pop
xor
pop
pusha
and
xor
jmp
in
ror
std
or
jl
push
pop
fcmovnbe
xor
neg
loop
mov
cmp
das
fs
dec
lahf
cs
fbstp
adc
or
leave
jle
inc
cwde
repnz
ins
(bad)
jge
les
sar
stos
adc
in
push
js
xor
lods
outs
je
mov
jg
push
retf
stos
jg
ins
rol
stc
les
int
adc
ds
xchg
aas
(bad)
(bad)
or
arpl
inc
ds
mov
cmp
pusha
jecxz
int
jne
(bad)
cs
pop
pop
inc
pop
stos
movs
dec
test
mov
xor
out
iret
mov
add
pop
add
ja
aam
cli
and
imul
cmp
cmp
imul
push
ret
push
(bad)
mov
cmps
cmp
cmp
stc
(bad)
jbe
test
and
lea
cs
mov
jecxz
jl
(bad)
mov
repnz
mov
sbb
jle
mov
xor
and
or
icebp
push
dec
aam
xor
das
(bad)
sub
add
lods
fsub
add
jg
cmps
or
cld
dec
in
shl
aam
retf
bound
call
fdiv
jns
and
sub
jns
adc
sbb
int3
cmc
sbb
pop
in
div
inc
pop
scas
mov
hlt
arpl
sahf
retf
in
or
push
cmps
scas
pushf
imul
push
pop
jne
movs
pop
imul
iret
mov
lock
inc
(bad)
out
mov
sbb
js
xor
push
fcom
mov
mov
jnp
out
xor
sbb
repz
clc
sub
and
mov
jmp
xchg
shl
push
pop
mov
mov
out
lds
in
push
xchg
pop
aam
xchg
fdivr
pushf
pop
jb
bound
cmp
pop
fdiv
test
les
ins
(bad)
stc
neg
push
and
push
mov
jl
outs
int3
call
or
jae
xchg
les
fadd
dec
mov
(bad)
(bad)
fisub
(bad)
pop
cmp
and
retf
and
jl
dec
add
in
adc
scas
and
cld
pop
sbb
or
sbb
mov
xchg
mov
jmp
inc
mov
jmp
sar
outs
dec
mov
or
xor
dec
xor
jl
adc
(bad)
fsub
cmps
xor
push
icebp
or
pop
pop
push
cwde
cmp
xchg
sbb
sub
test
cmp
jecxz
or
pop
arpl
push
iret
call
mov
retf
popf
int3
jno
add
out
xor
clc
cmp
js
aad
adc
fstp
mov
sub
movs
jmp
cmp
pop
(bad)
jmp
test
push
movs
imul
cwde
jmp
jno
mov
ror
into
rcr
shl
loope
clc
ficom
pop
out
fmul
inc
ss
push
jecxz
idiv
mov
in
mov
sub
pop
add
mov
push
aas
lods
fldcw
push
mov
push
mov
jmp
fcomip
test
daa
test
jmp
pushf
xor
rol
aad
adc
(bad)
das
dec
daa
pop
fdiv
dec
pop
and
xor
sbb
pop
push
mov
inc
(bad)
rcr
lock
or
loopne
xchg
and
sub
inc
xor
inc
enter
cdq
jbe
test
pop
leave
das
xor
jmp
stc
push
mov
dec
sub
dec
int3
push
aaa
adc
xor
retf
(bad)
xchg
jne
adc
aaa
nop
sub
outs
call
(bad)
sar
inc
push
(bad)
jbe
test
push
lds
jmp
sar
movs
or
loopne
jecxz
cmps
loopne
in
shrd
retf
hlt
mov
add
ja
retf
imul
xor
xchg
mov
mov
das
aas
sub
cmp
mov
dec
imul
adc
(bad)
adc
cmp
popf
and
dec
rcl
push
imul
je
fld
cmc
(bad)
dec
mov
movs
mov
movs
das
jbe
push
(bad)
aaa
push
sub
adc
cmps
fdiv
scas
xor
lea
rcl
lahf
(bad)
cmp
idiv
rep
pop
cmps
jecxz
mov
add
sbb
adc
jp
es
inc
iret
std
lods
test
int3
bound
push
out
loope
cwde
bound
jmp
je
movs
jmp
arpl
ss
push
cdq
mov
(bad)
mov
es
push
ins
stc
push
and
jne
fwait
ja
xchg
mov
and
mov
add
xchg
stos
or
inc
sbb
mov
inc
mov
mov
push
stos
enter
and
leave
xor
das
mov
sbb
mov
push
mov
jne
lahf
(bad)
shl
js
inc
ds
std
sbb
jmp
ficom
add
push
jp
cmp
inc
pop
cmp
dec
mov
movs
cmp
mov
jmp
xor
sub
or
addr16
xchg
sti
xchg
mov
std
mov
pusha
dec
stos
(bad)
mov
addr16
iret
xor
pop
repz
xchg
mov
mov
jo
and
mov
jecxz
popa
in
cmp
dec
push
cwde
bound
inc
mov
pop
mov
ins
pop
lds
ret
mov
icebp
add
jge
dec
and
jp
(bad)
fiadd
hlt
loopne
jae
and
adc
push
add
fldcw
mov
jnp
xchg
and
xchg
out
xchg
and
dec
das
mov
mov
pop
cmp
mov
es
shr
push
jno
sti
sbb
lock
in
inc
loopne
jg
or
daa
mov
pop
pop
sbb
test
mov
sahf
jecxz
sub
les
xchg
loop
dec
cli
imul
inc
cwde
test
push
repnz
push
inc
or
cld
shl
lods
shl
push
jmp
out
push
xchg
mov
ds
mov
dec
mov
sbb
jae
fcom
mov
cmp
in
push
outs
mov
mov
popf
mov
lahf
mov
inc
pop
pop
pusha
fwait
lea
scas
nop
pop
jecxz
into
aam
pop
mov
repnz
je
fisubr
jg
mov
pushf
imul
rcr
push
in
stc
cwde
lahf
loopne
(bad)
jg
(bad)
enter
sbb
pusha
shl
and
inc
mov
arpl
fcomp
or
mov
adc
jg
fstp
in
fwait
nop
xchg
sub
(bad)
(bad)
and
push
push
inc
bound
in
pushf
loop
lods
lea
stos
clc
(bad)
in
in
sahf
nop
pop
jnp
sub
add
xor
sahf
out
mov
jbe
div
adc
sbb
jae
jnp
xor
cdq
xchg
test
(bad)
sbb
outs
jmp
adc
ins
push
mov
(bad)
jae
xor
inc
mov
or
push
jbe
(bad)
fdivr
(bad)
and
jb
pusha
mov
icebp
push
pop
pop
adc
sub
xchg
ins
lods
sbb
lds
xor
add
jns
or
pop
add
imul
jb
sbb
(bad)
loop
and
jb
sub
fs
inc
pushf
inc
or
inc
clc
xchg
outs
xor
ret
ror
mov
loope
and
inc
mov
fimul
jo
sbb
repz
xor
fst
and
push
push
hlt
ja
mov
mov
(bad)
outs
outs
outs
adc
mov
fild
jbe
(bad)
jge
jne
pop
push
push
rcr
sti
mov
leave
mov
sti
fidiv
cmps
popa
popf
xlat
sub
mov
sub
pop
mov
in
(bad)
and
enter
add
rcr
enter
and
jg
inc
outs
pop
hlt
jne
inc
jl
test
je
aam
bound
(bad)
dec
push
aaa
sbb
fsubrp
mov
cmp
stos
cli
outs
mov
shr
xor
lahf
mov
adc
aam
jne
das
(bad)
pop
mov
sbb
inc
jmp
nop
imul
inc
je
xchg
or
and
inc
sbb
pop
test
aam
add
xchg
jno
mov
outs
inc
or
jnp
(bad)
in
js
test
sti
mov
hlt
jno
out
outs
iret
pop
das
fmul
and
and
or
loope
mov
mov
pop
mov
(bad)
loop
jno
fxch
popa
dec
retf
push
jae
sub
std
mov
or
rol
xchg
imul
loope
call
sbb
int3
test
add
jnp
xchg
pop
sub
cmp
stos
inc
imul
pop
pop
fsubr
test
in
and
or
pop
or
loope
scas
popf
(bad)
mov
push
cli
jae
push
and
cmc
xor
cmp
cmps
push
sbb
addr16
mov
cmp
fsub
mov
push
inc
mov
iret
(bad)
dec
xor
dec
jecxz
xor
and
popf
sbb
inc
(bad)
ds
dec
cmps
push
popa
adc
and
in
and
mov
or
ror
movs
enter
xchg
call
or
jae
in
iret
inc
in
jp
lea
mov
ins
test
jmp
mov
jg
shl
pop
call
jle
push
ins
push
ds
aad
test
loop
stc
clc
mov
push
and
mov
fwait
or
imul
cmp
cmp
pusha
inc
and
xchg
icebp
xor
add
fisub
xor
jmp
in
jns
mov
xchg
(bad)
mov
call
inc
cld
mov
loop
enter
jge
fs
mov
mov
pop
or
in
and
or
call
adc
dec
movs
push
cmp
sub
rol
pop
mov
jecxz
cmp
inc
ja
out
xchg
mov
es
and
adc
cmp
test
sub
cmp
cmp
mov
shl
jge
ins
and
rcr
test
in
pusha
fstp
mov
mov
jae
repnz
xor
scas
mov
cmps
cwde
cmp
sub
sbb
and
mov
cli
and
int
push
mov
lahf
cs
sti
test
jle
inc
aas
cmp
test
xchg
mov
cmp
popf
and
dec
mov
add
lods
adc
mov
push
mov
adc
dec
add
adc
jae
ss
fmul
or
add
and
fiadd
mov
addr16
cli
add
data16
or
icebp
fwait
movs
out
(bad)
dec
int
xchg
cs
mov
cli
add
mov
fwait
sbb
les
mov
xchg
(bad)
gs
mov
xor
jb
int
sbb
xchg
lods
and
jns
inc
xchg
shr
or
pop
and
jo
xchg
ja
adc
cmps
dec
cdq
sub
mov
pop
xor
mov
jmp
pop
jno
ret
je
mov
cmps
jg
xchg
ret
stos
test
retf
and
iret
cmc
imul
sub
mov
imul
sub
movs
add
sub
icebp
lea
cmp
(bad)
out
addr16
inc
pop
leave
mov
mov
and
push
push
stos
mov
lea
push
push
xor
cwde
sbb
scas
add
cmp
dec
sub
xor
pop
cwde
push
pop
das
lds
adc
mov
out
push
pop
fs
jge
cmp
push
std
fcomp
jae
push
mov
test
push
fwait
rcl
call
stos
push
rcr
jmp
movs
mov
inc
mov
(bad)
cwde
xor
or
xchg
inc
cmp
int
cld
shr
push
mov
popf
rcl
data16
or
popa
rcl
mov
dec
fs
je
shl
mov
push
push
mov
and
push
pop
scas
fiadd
fdivrp
xchg
sub
fmul
xchg
jle
fwait
stos
add
mov
jnp
fcom
lea
add
int3
pop
and
mov
xor
mov
add
cld
repz
mov
shl
mov
ret
aaa
out
push
fcomp
jmp
pop
xchg
ret
and
shl
pop
cmp
lea
nop
add
pop
jb
and
mov
popa
xchg
gs
rcl
pop
rcl
mov
mov
call
cmp
in
push
xchg
ins
push
adc
mov
and
mov
scas
icebp
add
or
aaa
imul
or
out
popf
inc
icebp
inc
or
add
aam
cmps
mov
out
mov
sub
xlat
enter
lods
sub
xor
cwde
pop
mov
das
xchg
cmp
stos
cmp
iret
mov
mov
mov
aas
(bad)
in
or
push
mov
dec
xchg
pop
fs
sbb
outs
inc
js
jmp
mov
cwde
adc
or
mov
mov
xchg
mov
mov
leave
mov
or
(bad)
in
stos
jne
push
call
clc
(bad)
push
es
sub
ds
cmp
xchg
mov
push
pop
add
int3
(bad)
test
cld
pop
cmc
jne
(bad)
jnp
adc
adc
jb
dec
inc
push
fistp
idiv
ss
outs
sar
stos
mov
aad
leave
fidiv
pop
cmp
sbb
push
mov
cmp
cmp
aam
adc
or
cmps
es
xchg
in
dec
popa
cmc
stc
sbb
cwde
js
int
enter
sbb
in
inc
or
(bad)
mov
push
arpl
in
fnsetpm(287
aad
cmps
cli
jbe
or
cmps
xchg
jmp
outs
shr
in
cdq
mov
icebp
push
xchg
mov
retf
xorps
mov
ja
pop
pop
inc
cld
jb
loope
int
xchg
xor
aas
fs
push
xlat
rcr
add
ins
mov
jne
mov
jae
je
cmps
add
mov
mov
in
xor
int3
mov
push
jmp
imul
arpl
lods
pop
adc
push
idiv
out
(bad)
pop
mov
pop
rcl
cmp
(bad)
cld
jb
add
add
js
adc
js
push
lods
xchg
shr
scas
stc
inc
inc
ret
cli
xchg
or
sbb
test
imul
addr16
(bad)
hlt
(bad)
jle
jecxz
and
mov
fs
adc
shr
sub
and
push
in
in
cmps
cmp
fidiv
push
int3
enter
lds
or
add
add
push
(bad)
pop
data16
call
(bad)
shl
add
add
xlat
es
in
add
mov
loop
ret
inc
xor
add
(bad)
(bad)
jmp
repnz
xchg
enter
adc
(bad)
sub
inc
adc
cmps
gs
out
cli
fidiv
push
pop
les
mov
pusha
fiadd
aaa
scas
xor
cmp
imul
in
(bad)
push
lods
jmp
adc
jle
movs
repnz
sbb
push
jae
shl
push
xlat
rol
movs
lea
dec
sbb
and
add
add
shl
jge
sub
cmp
arpl
xchg
stos
mov
mov
jmp
gs
retf
xchg
stc
dec
mov
arpl
mov
pop
sub
test
rol
xchg
adc
sub
adc
jmp
in
cmp
in
test
jg
test
inc
jb
pop
xchg
mov
add
pop
mov
xchg
and
lods
jno
fsubp
adc
or
div
mov
leave
test
ret
and
cmp
test
push
int
sti
aaa
test
fstp
and
jle
fisttp
mov
mov
push
mov
(bad)
js
xchg
call
cmp
pop
jno
jecxz
repz
push
jmp
ins
pop
fdivr
pop
xchg
lods
test
gs
jbe
and
inc
popf
add
xlat
fcmove
shr
inc
movs
mov
push
lea
xchg
cld
stos
out
adc
dec
ja
pop
inc
push
cmp
xlat
js
inc
cld
popa
xchg
inc
jae
xchg
ds
daa
jmp
in
lahf
jmp
sar
or
fwait
push
mov
jecxz
cmps
pop
cwde
in
push
dec
or
inc
mov
inc
fadd
ins
gs
mov
mov
or
std
out
inc
adc
shl
or
shl
add
or
std
stos
xlat
xor
je
lahf
mov
cmp
push
aaa
pop
mov
or
dec
mov
call
inc
jmp
dec
push
mov
ffree
mov
popf
dec
or
sar
loopne
sbb
movs
add
jae
les
mov
xor
adc
daa
gs
dec
fidiv
ins
loop
mov
or
fstp
rcr
adc
mov
add
pop
mov
out
jmp
fsub
and
adc
stc
pop
cmps
inc
mov
mov
jns
call
ins
fnsave
add
or
push
cld
adc
mov
push
pcmpgtd
xor
pop
repz
mov
outs
sbb
ins
mul
js
mov
dec
repz
lods
imul
retf
inc
dec
push
mov
mov
gs
inc
mov
lds
pop
fst
(bad)
dec
jmp
add
neg
push
mov
aad
inc
cmps
pop
mov
jmp
inc
pop
dec
sbb
into
bt
mov
dec
adc
xchg
mov
sar
xlat
bound
jne
xor
xchg
rcl
mov
xchg
aam
push
test
jp
inc
jge
mov
mov
ins
iret
sub
mov
loop
or
cmc
xchg
cmp
and
pusha
inc
ds
sub
test
xor
or
call
fst
call
inc
pop
in
cmp
inc
psllq
in
dec
push
mov
cmp
push
mov
mov
test
lahf
faddp
pop
mov
jnp
int
push
xchg
jge
movs
enter
fiadd
cmp
xchg
sbb
ret
jo
shr
push
shl
in
xor
sbb
retf
xchg
ret
aaa
cmp
cs
mov
mov
sbb
sub
push
and
lea
(bad)
aad
sbb
inc
xor
pop
(bad)
jl
mov
adc
loopne
dec
dec
cmp
and
xlat
mov
ja
pop
pop
jns
jns
jnp
pop
jmp
mov
mov
stos
into
test
jns
xchg
scas
(bad)
lahf
mov
cld
addr16
xchg
jecxz
jl
adc
mov
pushf
cmps
cmovl
daa
lods
rcr
or
ss
or
mov
jg
or
js
div
or
stos
push
jmp
inc
pop
aad
jle
data16
rcr
ss
jae
scas
dec
clc
call
xchg
scas
ja
arpl
push
adc
cld
test
jo
mov
dec
add
push
pop
movs
cmps
pop
jo
(bad)
inc
shl
cmp
sub
cmps
cli
data16
pop
sahf
mov
out
shr
ja
adc
sub
mov
jbe
mov
stc
adc
popf
movs
push
loop
add
xchg
lahf
push
sbb
jo
xchg
jb
mov
dec
inc
sub
jmp
push
xchg
sub
add
rcl
das
inc
jmp
jecxz
sub
dec
in
test
mov
mov
das
repnz
ins
cld
retf
cmp
add
test
lahf
push
or
pandn
mov
push
nop
cwde
in
mov
cld
inc
adc
call
sub
loope
push
das
das
xor
cs
jmp
clc
sbb
mov
or
sbb
addr16
sbb
xor
imul
push
mov
sub
xchg
(bad)
fiadd
in
or
(bad)
fnstsw
pop
outs
retf
movs
pusha
rcr
ins
in
cld
and
fldenv
cmp
pop
cdq
jle
add
mov
mov
nop
push
fmul
cmp
cs
mov
dec
mov
test
in
stos
sub
js
outs
cld
test
mov
and
dec
pop
and
dec
sub
and
ret
out
mov
clc
push
dec
jne
sub
out
lods
mov
pop
add
push
pop
xacquire
nop
movs
out
(bad)
and
push
ret
jmp
push
scas
fist
mul
cmps
pop
in
xor
aas
lods
dec
mov
xor
add
repz
popf
dec
stc
mov
and
xor
cmps
enter
pop
mov
xlat
bnd
cs
adc
daa
in
dec
mov
loop
xchg
les
mov
adc
aam
add
jecxz
das
push
xchg
sbb
jmp
dec
loop
xor
leave
push
cmp
je
ret
aas
movs
fst
mov
pop
inc
ins
pop
mov
xlat
sbb
push
sub
mov
mov
rcl
jae
push
sub
mov
mov
out
mov
and
adc
push
push
dec
push
push
cmps
les
inc
xor
pop
xchg
sahf
out
scas
fsub
cmps
xchg
andnps
or
loop
ja
sar
push
mov
inc
cmps
and
neg
test
rcl
mov
mov
fdivr
pop
out
mov
retf
sbb
fsub
cmps
into
retf
mov
and
mov
or
bound
clc
fdivr
sbb
inc
(bad)
icebp
sub
aad
sbb
pop
adc
hlt
pushf
test
cld
cdq
lds
sbb
pop
hlt
aaa
xor
xor
adc
das
out
xchg
shl
cmp
repz
sahf
inc
and
in
das
xchg
mov
pop
xor
out
adc
sbb
ss
jns
dec
cli
fnsave
push
and
leave
push
out
dec
or
call
adc
sub
mov
(bad)
dec
scas
in
push
push
push
xor
fsubr
push
push
pop
sbb
mov
mov
xchg
retf
scas
icebp
aas
add
iret
rol
jo
aam
jbe
jp
xor
mov
pop
xchg
in
push
ss
cmps
test
cmp
out
cmovle
les
cmc
add
jmp
cmps
or
cmps
popf
mov
bound
pop
fild
sub
jne
inc
jge
push
retf
jp
xchg
(bad)
in
int3
xchg
scas
ds
ror
push
sti
sub
push
jae
xor
push
mov
shl
pop
dec
mov
push
in
dec
fs
sub
pop
lods
adc
sbb
jmp
ins
lods
mov
and
test
test
or
sub
cmc
inc
push
and
add
test
mov
jbe
rcr
arpl
mov
mov
cmp
out
ss
clc
inc
jecxz
inc
add
pop
push
icebp
xor
(bad)
push
inc
sbb
outs
jae
(bad)
push
pushf
mov
jmp
(bad)
outs
xchg
jbe
mov
pop
leave
outs
cmps
cmp
dec
jge
adc
shl
out
mov
push
xchg
aas
jmp
cmc
out
jge
pop
fcmovnbe
dec
(bad)
pusha
sar
fsub
inc
cs
jg
xlat
mov
test
and
cmp
mov
outs
or
jne
ja
(bad)
mov
or
loop
imul
jno
and
jmp
add
dec
jmp
xchg
fcmove
add
pop
lods
ins
push
add
dec
repz
push
cmp
fisubr
jbe
adc
mov
xchg
xor
pop
loopne
pushf
fwait
mov
ficomp
fxch
fadd
js
mov
test
mov
or
aad
fwait
xlat
ret
jns
out
jecxz
push
dec
in
xchg
jp
mov
rol
ss
mov
mov
inc
aad
or
int
mov
mov
add
sbb
push
jge
arpl
jle
jo
cli
and
lahf
jg
jg
(bad)
lods
in
mov
fsubr
dec
cld
and
mov
mov
push
daa
adc
adc
mov
sub
inc
iret
adc
aaa
xor
mov
inc
mov
pop
and
ret
or
mov
inc
repz
daa
fadd
dec
(bad)
mov
sub
sub
push
fild
add
leave
xor
ret
(bad)
fld
add
jecxz
(bad)
shl
vminps
mov
push
dec
push
sbb
pop
fs
not
cld
loope
cld
adc
mov
fidiv
scas
test
jmp
fcom
or
jl
out
or
mov
pop
adc
add
mov
sbb
inc
jnp
movs
gs
jge
out
jne
push
stos
and
xchg
cli
inc
arpl
in
not
add
jmp
xor
sbb
inc
mov
loopne
add
xor
xchg
les
jge
and
test
movs
cmp
not
adc
dec
jge
cmps
fs
mov
call
mov
cmp
xchg
shl
sub
jp
jmp
pop
je
jl
cmp
adc
sbb
test
cmc
call
jmp
bound
jae
sub
fucomi
inc
mov
clc
call
in
mov
or
rcl
addr16
(bad)
mov
stos
hlt
(bad)
sub
std
pop
adc
int
mov
cmp
sub
test
pop
mov
sub
xor
cmps
stos
push
jmp
fidiv
test
dec
iret
mov
inc
add
mov
jmp
mov
dec
dec
dec
cwde
push
int
xor
or
xlat
and
in
ja
fcmovu
sbb
dec
cmp
and
mov
jl
hlt
mov
mov
mov
inc
mov
loopne
adc
adc
mov
ret
push
push
int3
adc
adc
dec
and
and
xchg
pop
inc
adc
xor
stc
add
outs
pusha
out
jbe
int
jns
adc
cmp
cld
movs
fistp
loopne
inc
es
sub
xchg
add
loope
or
dec
sub
xchg
jbe
or
cmps
aas
sar
les
pop
std
(bad)
not
jl
jne
iret
push
das
dec
xor
dec
mov
inc
jecxz
retf
sar
jp
cs
mov
pusha
sbb
addr16
cmc
push
cdq
ss
dec
cld
div
push
and
ret
sub
sahf
mov
(bad)
(bad)
in
dec
push
iret
xchg
pop
mov
push
cmp
jl
ja
add
movs
test
mov
stos
xor
loope
and
xlat
xchg
pop
adc
sub
pop
adc
cmp
push
mov
pushf
jae
mov
xlat
out
pop
cli
jae
sbb
dec
adc
ins
loop
stos
xlat
push
pop
cwde
out
cs
in
jae
xchg
jns
fneni(8087
dec
xchg
into
jae
out
cdq
cdq
adc
stc
cmps
adc
ins
jp
pop
imul
sub
jo
xchg
repnz
mov
dec
(bad)
sti
call
popf
sbb
ja
cdq
stc
popa
add
es
and
jmp
cmps
test
or
sbb
mov
in
push
test
inc
mov
aam
stos
cmp
push
imul
cmp
dec
sbb
mov
inc
clc
jae
mov
push
sub
cmc
out
jecxz
cld
rcl
in
bnd
test
pop
cmp
sti
mov
mov
add
cmps
pop
imul
arpl
imul
ds
mov
xor
idiv
push
add
jge
xchg
xchg
fnstenv
sbb
fwait
mov
mov
lds
out
sbb
jg
sar
xchg
out
aaa
push
cld
das
(bad)
and
outs
pop
inc
out
test
ins
add
sbb
icebp
out
fucom
mov
push
dec
ja
out
icebp
arpl
jg
cmp
gs
mov
jmp
bnd
pop
fsubp
pusha
xchg
cmp
fs
(bad)
repz
add
ins
dec
push
imul
aam
adc
int
xor
pusha
sub
xor
xor
push
std
or
scas
cli
js
cmc
fldlg2
shr
inc
add
cmp
xchg
mov
sbb
sbb
movs
je
pop
das
mov
not
jg
fwait
bound
add
or
test
ja
stc
push
jmp
pop
pop
in
imul
test
cld
pop
xchg
mov
test
sbb
pop
(bad)
fnsave
jecxz
pushf
mov
push
scas
sub
shl
jg
push
cmps
(bad)
xlat
dec
in
ins
adc
mov
stos
movs
aad
adc
ins
push
(bad)
iret
adc
mov
cmp
icebp
add
and
lock
cwde
call
xlat
inc
in
push
cmp
(bad)
fwait
call
adc
movs
xchg
je
mov
int3
and
cli
pop
mov
and
jbe
int3
inc
(bad)
mov
movs
imul
pop
sar
loope
cmp
push
xor
das
gs
dec
push
mov
int3
rcr
out
xor
xor
or
mov
xchg
mov
popf
lock
scas
xor
data16
inc
fild
add
outs
pop
adc
ret
mov
push
dec
out
add
rol
pop
stos
mov
xorps
adc
dec
cmp
scas
loop
mov
jae
pushf
out
jno
stos
push
ffreep
imul
mov
int
jno
jb
dec
mov
jb
sbb
ja
or
mov
inc
xlat
nop
cmc
add
mul
cmc
pop
pop
or
(bad)
pop
pop
jns
jnp
sub
ficomp
push
pop
daa
add
mov
movs
dec
mov
fwait
or
sub
mov
pop
jb
jmp
and
pop
lds
push
adc
dec
ret
ret
mov
cmps
cli
js
cmp
mov
js
jb
enter
scas
mov
bound
ret
sbb
dec
lea
and
cmp
mov
(bad)
inc
add
mov
lds
sbb
and
pusha
lods
inc
nop
and
and
xchg
lods
stos
dec
mov
jb
pop
dec
xchg
mov
je
adc
and
out
outs
mov
dec
gs
(bad)
hlt
addr16
xlat
mov
add
pop
push
(bad)
jp
push
fpatan
das
mov
cmp
addr16
shl
push
jp
jmp
sbb
mov
jecxz
out
popa
push
jbe
pop
push
scas
cmp
shl
jnp
push
movs
leave
and
stc
cli
jp
dec
test
push
pop
mov
test
dec
inc
int3
push
ins
push
push
into
jp
lea
adc
and
test
and
xchg
nop
sahf
cwde
push
cmp
loopne
imul
neg
xchg
addr16
shr
enter
pop
sbb
fincstp
shl
retf
retf
ja
jg
lock
imul
loopne
pop
aaa
push
mov
enter
fidiv
aad
push
fsubr
mov
retf
mov
push
enter
mov
std
aas
mov
shl
in
xchg
cwde
stos
nop
(bad)
int
jae
jmp
mov
xchg
mov
dec
xchg
pop
mul
sbb
lahf
dec
push
sti
out
sub
nop
test
adc
xchg
xor
xchg
mov
into
sbb
dec
fs
and
sahf
inc
aas
test
fwait
inc
aaa
in
(bad)
pop
mov
pop
and
adc
fdivp
lahf
aaa
int
es
push
push
scas
push
inc
shl
jmp
into
aaa
and
jo
jge
imul
(bad)
int3
mov
cmp
xchg
out
cmp
push
gs
push
out
fsub
dec
inc
les
cdq
push
jne
loope
mov
(bad)
mov
test
mov
in
xor
jge
les
push
inc
aam
push
ret
les
jbe
aaa
and
lods
xchg
jge
std
xchg
lods
jecxz
pop
and
ins
test
cmp
jbe
pop
sub
jmp
jle
dec
imul
retf
xchg
inc
stc
(bad)
test
xchg
push
sahf
ins
addr16
pop
gs
jmp
xchg
cli
fadd
cmp
pop
mov
in
and
arpl
cld
and
(bad)
cmps
jle
sbb
pop
dec
stos
inc
sbb
xor
xor
cmp
stos
sar
rcl
xor
imul
mov
xchg
(bad)
xchg
jle
xor
jle
ret
sub
popf
inc
neg
and
jae
push
xor
ins
sub
inc
or
pop
cli
das
mov
cmova
mov
out
sbb
movs
or
sbb
into
nop
mov
mov
pop
mov
ret
xchg
leave
cmovb
sub
popa
stos
jecxz
fisttp
lods
lds
ja
repnz
jp
pop
cmp
pop
xchg
jecxz
pop
movs
das
retf
fwait
aad
lock
ret
add
cmp
sub
fimul
popf
scas
(bad)
lds
ficom
add
mov
jmp
dec
push
mul
shl
neg
add
push
out
ffreep
push
add
push
adc
add
xor
fild
sbb
xchg
dec
pop
jns
lods
test
pop
dec
inc
mov
push
out
stos
imul
inc
ins
fwait
pop
mov
xchg
rcr
adc
les
pop
into
cwde
mov
sar
(bad)
push
jno
cmp
in
sahf
aaa
mov
sub
fcomp
and
jl
mov
xor
add
stc
mov
add
mov
sbb
in
sbb
outs
aam
call
xchg
cmp
stc
mov
cmp
ds
pushf
in
mov
lea
cmps
mov
mov
mov
xchg
fwait
std
inc
das
mov
cmc
xor
or
dec
xchg
or
cmp
int
pop
leave
hlt
ja
test
add
push
fstp
xor
mov
jmp
push
lods
sub
in
cmp
sti
fnstsw
cmp
test
or
or
cmp
lods
out
in
enter
xchg
leave
xchg
not
and
xor
(bad)
arpl
jle
or
(bad)
jmp
out
nop
xchg
lea
pushf
push
sbb
je
in
cli
ds
fmul
adc
gs
fwait
add
adc
les
mov
dec
imul
xor
dec
lea
sbb
xchg
dec
and
in
sub
lock
xlat
dec
dec
ja
jle
sbb
fild
mov
in
xor
jns
or
mov
pop
inc
dec
mov
aam
mov
adc
and
gs
pop
xchg
cmp
mov
dec
es
push
mov
push
xor
xchg
push
adc
add
xor
and
outs
ins
data16
mov
loopne
push
mov
sbb
or
lahf
dec
scas
xchg
es
call
lods
xchg
leave
fadd
push
jne
adc
fst
adc
sub
mov
clc
jns
fcomp
cmc
jle
ja
(bad)
cmps
jl
pop
jno
shr
cmp
push
mov
ss
push
xchg
cs
push
std
pop
test
arpl
mov
(bad)
cmp
call
ror
pop
sar
stos
test
cwde
lock
rcr
call
jb
jne
ss
ret
mov
cs
call
cmps
test
lods
loopne
xchg
mov
sub
mov
cmp
push
xchg
scas
mov
fsubrp
or
pop
scas
mov
nop
call
outs
dec
ror
xchg
xchg
sbb
mov
or
sub
std
int3
push
cld
mov
sub
mov
mov
clc
fld
jmp
xor
outs
lock
sub
push
test
in
pushf
int3
sub
repnz
jae
push
mov
mov
loopne
sti
not
push
dec
mov
sub
cld
(bad)
in
rcr
nop
pusha
push
addr16
cmp
(bad)
mov
retf
jbe
pop
fidiv
outs
add
std
dec
enter
cmp
pop
xchg
(bad)
outs
test
inc
mov
aas
inc
sub
mov
pop
fild
pop
movs
int3
arpl
cmps
out
xchg
mov
nop
lods
ds
mov
es
jmp
adc
xchg
shl
dec
inc
add
das
cmp
jnp
dec
push
pop
ret
push
pop
imul
mul
cmp
das
adc
bnd
jne
out
fcmovne
or
jbe
sbb
xor
dec
cs
push
xchg
repz
jae
aas
push
add
sbb
or
fsubp
pop
xchg
mov
and
and
dec
call
inc
fbld
mov
jmp
jmp
ja
sub
sub
pop
push
shr
cmp
scas
mov
shr
jle
mov
aam
cdq
dec
lods
outs
cwde
sub
mov
rol
sbb
into
daa
movs
in
mov
push
mov
mov
jge
jp
scas
in
popf
inc
inc
pop
push
jmp
es
pusha
and
push
icebp
in
mov
or
jnp
test
dec
outs
or
arpl
jl
pop
int
adc
sbb
pop
or
leave
ret
adc
and
sti
push
lods
cmp
jp
arpl
mov
add
xchg
outs
adc
movs
leave
jae
ins
(bad)
ins
pop
dec
loope
mov
repz
xchg
and
sub
fidiv
adc
mov
push
and
pop
dec
cs
das
cmps
push
mov
fucomip
call
and
push
fadd
bound
das
pushf
shl
and
movs
dec
cmp
pop
push
lahf
retf
arpl
mov
ds
ret
push
pop
jmp
sbb
loope
bound
fnstsw
sbb
pop
imul
sbb
shl
dec
mov
lds
and
sub
sbb
rcl
xchg
and
movs
fsub
pop
clc
push
xchg
sahf
adc
pop
jne
mov
stc
fnstsw
ficomp
int3
outs
adc
lahf
pop
inc
inc
out
push
repnz
inc
clc
pop
js
sub
scas
jle
jne
cmps
xor
popf
xchg
arpl
cmp
add
jp
pop
ins
cld
div
mov
mov
or
scas
sar
je
fnsave
pop
push
mov
mov
imul
xchg
sbb
icebp
cs
test
jle
(bad)
iret
leave
daa
inc
add
add
mov
aam
mov
dec
pop
das
sbb
pop
cmps
pop
out
push
xchg
cmc
repnz
pop
mov
mov
enter
mov
mov
and
push
jmp
inc
in
xor
ret
mov
jg
pop
sar
xor
into
lock
daa
or
jge
addr16
out
sbb
mov
xchg
jae
or
das
iret
xchg
or
out
ret
rcl
push
push
or
stos
popa
stc
iret
fisttp
xchg
imul
adc
scas
jg
cmp
ror
inc
out
sbb
data16
dec
mov
sar
mov
inc
xchg
gs
mov
retf
pop
sub
retf
shl
int
hlt
cmp
or
cmp
xchg
pop
and
nop
mov
inc
jecxz
adc
movs
aam
cmp
sbb
cwde
dec
mov
mov
pop
mov
jge
xchg
sbb
mov
enter
mov
pop
push
es
pop
fsubp
test
jo
xor
cmp
ror
or
cmp
mov
outs
aaa
pop
(bad)
leave
jne
push
fxtract
mov
xor
mov
xchg
fild
mov
ja
jmp
mov
rol
pop
pushf
leave
adc
ret
dec
xchg
xlat
leave
add
popa
jl
push
pop
xchg
stos
mov
mov
inc
fcom
(bad)
and
inc
mov
sbb
test
sbb
pop
dec
cdq
mov
rol
pop
idiv
(bad)
cld
mov
xchg
jg
outs
hlt
ss
or
jg
mov
pop
inc
ss
pop
cmp
jae
cmp
fldenv
push
adc
xchg
nop
sahf
add
sub
pop
jb
outs
xchg
loopne
xlat
popf
aas
and
repz
push
lods
pop
mov
cdq
adc
adc
movs
mov
movs
std
adc
dec
mov
(bad)
pusha
dec
inc
sbb
pop
mov
push
dec
cmc
aam
adc
xchg
sbb
fnstsw
pop
movs
pop
in
cmc
adc
out
or
dec
jne
loope
fdiv
dec
jl
mov
adc
mov
mov
dec
sbb
int3
inc
enter
sub
push
pop
mov
gs
lods
scas
arpl
ss
xchg
add
ret
mov
lods
push
rcr
ja
bound
mov
xchg
push
add
(bad)
jo
ret
mov
fst
sar
test
cmp
jno
push
icebp
sahf
inc
fwait
xor
sbb
in
cmp
ja
xor
fs
push
daa
fmul
jge
jmp
xchg
pop
mov
xchg
inc
and
ret
mov
lods
push
test
or
xchg
mov
mov
xor
sar
jo
jb
push
icebp
pusha
idiv
mov
add
push
mov
jg
movs
movs
adc
fs
mov
and
add
mov
mov
mov
fcom
retf
push
ins
inc
(bad)
rol
or
mov
and
out
push
out
(bad)
lods
push
mov
adc
les
addr16
out
in
sub
mov
out
adc
dec
jae
pop
jno
jge
add
mov
pushf
xor
xor
out
retf
xchg
pop
(bad)
ds
jnp
shl
in
or
mov
stos
xor
mov
ror
cld
add
pop
retf
adc
mov
loopne
pop
shl
popa
jg
cmp
jg
mov
cmc
jbe
and
lock
xor
add
daa
push
jne
aam
cmp
fwait
jns
sub
push
push
sub
jp
sbb
sahf
in
add
xchg
(bad)
sbb
mov
dec
(bad)
sub
lahf
in
mov
out
je
jp
xchg
popf
sub
add
xchg
test
dec
jae
jl
push
xchg
popf
xchg
pusha
push
sbb
pop
(bad)
jmp
into
mov
mov
xor
pop
(bad)
repnz
rcl
imul
xor
fistp
xor
daa
enter
out
add
(bad)
cmp
jge
aam
push
(bad)
out
movs
test
mov
or
xor
test
mov
jp
mov
sub
(bad)
(bad)
mov
ins
loope
ins
cmp
or
ins
lods
jmp
adc
sub
aas
daa
mov
rcl
in
dec
in
mov
push
ins
xchg
(bad)
(bad)
pop
jecxz
mov
push
lods
jmp
pop
xchg
sub
int3
(bad)
xchg
xor
mov
std
call
pop
movs
mov
cmp
mov
leave
cmp
ficom
sahf
outs
dec
pop
scas
repnz
in
cmps
push
and
jnp
repz
jge
repnz
xchg
add
setle
add
sub
and
add
loop
arpl
cdq
xchg
jo
add
lock
and
mov
xchg
adc
pop
lods
loop
sbb
pop
enter
and
push
mov
cdq
inc
(bad)
push
mov
nop
xchg
inc
push
mov
clc
loopne
in
call
inc
mov
mov
lock
or
mov
xor
cs
jne
loope
xchg
cmp
mov
cli
jnp
sub
ins
in
sub
arpl
pop
jle
gs
lahf
rcr
pop
clc
inc
and
imul
and
add
loop
cmp
or
sub
jl
sub
(bad)
pop
ret
jg
sbb
mov
(bad)
pop
cdq
fwait
and
enter
sub
inc
fiadd
xlat
std
icebp
add
std
arpl
pop
adc
jnp
pop
das
push
cdq
add
dec
push
loopne
arpl
mov
idiv
inc
inc
and
imul
test
test
repz
mov
push
fwait
push
mov
fdivp
scas
mov
aaa
in
or
into
pop
xor
retf
inc
mov
inc
data16
fadd
mov
jl
(bad)
pop
sti
jle
mov
dec
fs
push
sub
dec
cli
sti
ja
das
push
cmc
loopne
add
jl
daa
call
inc
(bad)
les
pop
daa
dec
lock
test
push
inc
out
xchg
mov
jo
dec
lock
and
int
pop
and
scas
ins
dec
and
popf
adc
mov
lea
pop
sub
outs
lock
pop
cmps
dec
push
sbb
cmp
add
jle
ja
push
and
data16
(bad)
jmp
stos
mov
inc
jg
or
pushf
sbb
xor
sub
retf
test
jmp
push
call
(bad)
mov
retf
and
or
or
fwait
sub
call
dec
(bad)
adc
jmp
mov
cmp
dec
fisubr
rol
jne
icebp
jmp
lods
test
dec
das
jg
popf
es
xor
jle
push
fidivr
(bad)
ret
aas
hlt
xlat
pusha
stos
dec
jo
cmp
mov
xchg
mov
shl
(bad)
aas
mov
dec
pop
nop
int
sbb
jnp
shl
xchg
aam
sbb
in
ja
jmp
ss
inc
mov
mov
xor
sbb
inc
cmps
sub
push
stc
pop
fisub
das
cli
cmp
or
push
and
popf
jle
pusha
ds
add
rcr
push
jmp
mov
adc
push
mov
xor
push
aam
cmp
and
stc
cmp
sub
jmp
inc
ret
ds
jmp
and
xlat
leave
pop
(bad)
cs
loop
jo
stos
and
dec
mov
lds
out
stos
inc
push
sbb
and
push
inc
aad
pop
loopne
out
and
mov
inc
fild
xchg
clc
lods
hlt
ficomp
adc
push
repnz
rol
jle
in
xor
cmp
fst
fidivr
inc
pushf
mov
int
call
fcom
xchg
ret
ins
inc
inc
fist
ins
sbb
xchg
in
aad
jl
sub
icebp
inc
(bad)
pop
mov
in
out
in
push
mov
cld
sub
sbb
xchg
dec
stos
cwde
cmp
push
clc
add
mov
cmp
mov
jnp
mov
stc
(bad)
push
ret
(bad)
popa
adc
dec
mov
or
cdq
sbb
sbb
call
pusha
xor
cmp
outs
ds
push
stos
mov
retf
or
icebp
pop
js
dec
push
lods
ins
xor
cmps
inc
inc
(bad)
cmp
xchg
jp
sub
aam
scas
mul
(bad)
xor
imul
sub
adc
dec
cmp
dec
jle
sbb
sub
out
outs
ret
in
loopne
ficomp
adc
test
retf
fwait
xchg
outs
push
or
jmp
mov
pop
cmc
pop
mov
sar
and
outs
js
inc
pop
gs
les
scas
sbb
push
sbb
fmulp
out
ret
je
xchg
push
in
imul
(bad)
and
cmc
pop
push
jle
mov
add
sbb
jp
cs
fxch
ret
jb
shl
out
ror
mov
inc
mov
jbe
push
fwait
iret
sbb
pop
mov
mov
or
fwait
add
xchg
sub
fldcw
xor
inc
fbld
pop
cmp
add
test
js
jecxz
stos
jae
push
mov
mov
xor
sub
mov
data16
clc
scas
loopne
(bad)
adc
lds
jl
mov
shr
rep
sub
cdq
shr
inc
lahf
cmp
xrelease
cmp
push
dec
pusha
push
(bad)
and
add
rcl
vmaxss
pushf
fwait
ins
sti
hlt
retf
and
add
leave
lds
xchg
repnz
add
adc
jl
mov
fwait
ror
push
aaa
fwait
mov
call
gs
jle
cld
rcl
dec
push
fsubrp
jl
or
fdiv
clc
xor
xchg
call
mov
in
adc
jle
cld
cmp
popf
(bad)
bound
push
pop
cs
cmp
out
outs
outs
sub
dec
or
and
dec
jg
push
in
mov
lea
push
cmp
leave
rcr
sbb
mov
add
and
add
clc
jmp
push
jnp
sub
les
jno
fidiv
(bad)
cdq
ss
dec
scas
int3
jnp
push
shr
adc
adc
nop
xor
and
ja
push
push
xor
cmp
mov
dec
call
mov
mov
inc
inc
retf
cmp
dec
cld
push
dec
and
mov
mov
icebp
nop
mov
cmp
adc
int3
cmp
jge
mov
scas
jno
xor
dec
sti
ins
gs
cwde
pop
cmc
mul
jb
sub
icebp
out
push
xchg
dec
xchg
jge
js
and
mov
pop
aam
adc
mov
inc
retf
xchg
adc
inc
mov
scas
xchg
ror
mov
in
pop
sub
psubq
dec
lods
pushf
or
out
rcl
mov
sbb
call
mov
gs
xor
jnp
test
jns
cs
das
pop
(bad)
in
fwait
sbb
xchg
mov
or
and
ins
aad
out
push
push
loop
lods
scas
xlat
sub
mov
dec
mov
jno
mov
repz
xchg
and
in
push
cwde
cli
and
jnp
dec
and
arpl
push
lods
stc
daa
pop
push
pop
jmp
or
iret
iret
adc
mov
push
pop
push
mov
push
pop
mov
out
add
dec
xor
stc
xchg
sar
push
(bad)
clc
not
daa
mov
ret
rcl
mov
and
or
xchg
retf
dec
test
cld
lea
(bad)
adc
fwait
gs
cmp
xchg
jne
fmulp
push
xchg
dec
xchg
test
dec
sbb
hlt
fmul
cmps
aaa
fcmovu
add
nop
ins
mov
add
pop
addr16
sub
pop
mov
mov
mov
sti
cs
sahf
lock
mov
xchg
cs
ins
sbb
pop
shl
adc
adc
xor
and
jge
jbe
fcomp
inc
push
fadd
or
xor
pushf
push
cmp
dec
mov
cmp
push
push
in
pop
sub
aam
stos
pop
fmul
mov
push
jecxz
xor
lahf
fsub
sub
call
shr
adc
sub
(bad)
lods
xchg
push
shl
dec
xchg
repnz
fnstenv
xchg
sbb
scas
push
cmps
jge
icebp
push
adc
xor
cmps
sbb
outs
dec
sub
imul
ss
push
dec
(bad)
pusha
ins
xlat
sbb
loopne
popf
inc
pop
clc
(bad)
cdq
call
inc
loopne
sub
lock
dec
test
adc
xchg
clc
and
daa
fadd
mov
in
cs
push
inc
push
ss
retf
mov
or
ret
pop
cmps
outs
ins
lods
dec
jnp
jecxz
push
cmp
leave
ds
add
push
ficom
aam
push
fwait
and
pop
inc
js
scas
retf
das
and
or
mov
jecxz
outs
mov
loopne
out
repz
loopne
cmp
popw
jge
scas
push
mov
push
scas
outs
xchg
scas
cs
jmp
imul
dec
pop
cli
js
fcomp
and
leave
call
lods
jecxz
mov
xor
sub
cmp
shl
mov
adc
ins
jmp
test
xlat
je
cmp
call
add
mov
xchg
mov
(bad)
ds
or
jl
cmp
test
outs
pop
jle
xchg
mov
test
addr16
pushf
add
sbb
sub
or
push
arpl
in
data16
mov
inc
pop
fdiv
dec
rcr
lods
retf
mov
or
shr
xchg
punpckhwd
and
stos
cmp
scas
sbb
push
repnz
lods
add
sub
enter
cwde
push
les
rol
xchg
inc
push
(bad)
pop
sub
lods
xor
lds
ja
ds
push
pop
push
scas
lds
xor
fadd
ss
mov
retf
and
push
push
cmps
jecxz
cmp
data16
xlat
dec
popf
xor
jge
(bad)
pop
hlt
push
out
aas
outs
xchg
xchg
mov
icebp
jo
push
jno
push
repz
push
(bad)
dec
nop
imul
mov
stos
test
rcl
sar
push
push
sub
add
(bad)
ins
test
in
mov
xchg
cwde
cld
xchg
xchg
xchg
jl
add
xchg
or
lds
dec
cmp
cmp
pop
push
cmps
cmps
or
repnz
(bad)
hlt
in
mov
sbb
(bad)
and
jmp
xchg
unpcklps
dec
retf
jno
sbb
sahf
mov
dec
imul
test
inc
stc
jg
xchg
nop
adc
js
test
add
(bad)
sti
mov
push
not
jo
push
std
mov
ror
or
sbb
das
test
dec
inc
fnsave
and
test
jb
dec
and
push
lock
push
lods
inc
or
popf
cmp
jae
mov
or
mov
imul
add
enter
push
mov
fwait
sar
xchg
lods
mov
mov
pop
adc
xchg
or
mov
pop
sbb
pop
nop
imul
cmp
add
xlat
xor
pop
push
dec
lods
loop
inc
fidiv
xchg
(bad)
iret
hlt
rcr
dec
lahf
inc
adc
mov
out
adc
mov
sbb
in
imul
retf
div
rcr
jp
fstp
xor
imul
push
cli
or
cli
inc
xlat
mov
inc
adc
fdiv
in
mov
jo
mov
pop
pop
sub
add
dec
push
xor
jg
fwait
xchg
sbb
shl
sahf
sub
adc
stos
push
imul
cmps
mov
adc
jno
pop
mov
pop
inc
(bad)
stos
xor
dec
in
aad
rcr
into
sub
push
rep
xor
(bad)
and
clc
scas
repnz
fidivr
je
dec
mov
out
lods
mov
mov
adc
jmp
aaa
inc
inc
cld
aas
jge
sub
xchg
cmp
jl
inc
mov
into
mov
add
sbb
cmp
mov
sbb
jbe
repz
imul
aas
mov
sub
div
pusha
add
pop
sub
xor
or
mov
aam
call
push
and
push
sub
xchg
mov
jle
jmp
cli
mov
mov
jg
clc
or
xchg
cmp
sub
push
push
xor
lds
ficomp
sbb
ret
aam
int3
adc
pop
or
and
loope
fstenv
jp
sub
cmp
and
loope
out
jp
mov
xor
cmp
pop
xor
jge
mov
cmp
out
dec
outs
push
mov
ins
dec
iret
popf
adc
movs
inc
jae
cdq
loop
push
or
aaa
fisttp
push
push
cmp
cdq
xlat
or
sbb
adc
push
rcr
or
dec
push
add
xor
sub
retf
fsub
scas
dec
neg
sbb
sbb
lea
fdivr
shl
or
pusha
cmp
pushf
fnstsw
and
frstor
adc
(bad)
adc
hlt
cdq
add
mov
fnsave
and
xor
mov
daa
xor
lods
push
loop
add
sahf
call
ficom
ror
cmps
stos
cmp
inc
cdq
(bad)
mov
sub
mov
or
inc
call
mov
mov
stc
mov
hlt
aaa
mov
pop
cmp
movs
sub
pop
enter
mov
jp
call
dec
jecxz
jecxz
xor
xor
or
data16
dec
adc
adc
(bad)
nop
sub
retf
fadd
xor
inc
dec
loope
out
mov
jbe
mov
add
loope
and
retf
pop
gs
fs
fist
fsub
and
sahf
loop
fcmovnu
mov
or
add
