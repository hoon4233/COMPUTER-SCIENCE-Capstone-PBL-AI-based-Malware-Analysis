mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
aas
fild
or
outs
jb
dec
outs
je
xlat
retw
mov
xor
jg
test
ins
(bad)
ins
jmp
fbld
cmp
mov
gs
int3
fdiv
mov
push
mov
dec
shr
push
int3
fs
call
rol
imul
cmp
adc
push
outs
xor
jae
fdiv
adc
add
add
test
aas
push
push
inc
mov
cmp
add
dec
popa
je
jbe
dec
jae
pop
jmp
or
push
nop
ss
adc
mov
push
pop
or
xor
gs
mov
inc
outs
jne
add
les
outs
(bad)
mov
jo
aas
aam
inc
jne
jb
arpl
out
(bad)
lock
daa
call
je
mov
sub
adc
push
xchg
xor
fist
das
push
imul
out
lock
out
and
sub
pop
pop
and
jae
pop
pop
test
arpl
xchg
mov
pop
gs
test
adc
sbb
mov
ins
lds
push
cdq
shl
mov
hlt
es
push
mov
(bad)
and
lock
dec
cwde
and
(bad)
es
push
inc
imul
(bad)
fisttp
xor
adc
push
inc
ins
popa
jae
mov
push
cld
inc
inc
dec
push
inc
push
push
dec
push
rcr
add
push
inc
jle
adc
add
mov
call
sbb
cdq
xor
mov
or
xor
pop
ja
add
int3
loopne
outs
jo
inc
jno
cld
ins
jo
imul
add
gs
sbb
push
imul
pushw
sti
or
nop
imul
loope
lahf
into
cmp
inc
test
xor
rcl
mov
jbe
sub
push
sti
pop
cmp
and
cmps
or
inc
pop
loopne
jge
nop
mov
add
mov
bound
or
repnz
pusha
adc
mov
popa
fucomip
lds
adc
popa
arpl
adc
mov
sub
les
andps
sbb
add
fbld
mov
(bad)
lock
push
push
push
popa
ja
xlat
dec
mov
pushf
out
and
dec
data16
neg
sbb
add
sbb
jo
push
ins
inc
and
sbb
xchg
xchg
push
or
ja
loopne
aaa
les
xchg
push
aad
stos
push
ds
or
jne
add
add
imul
frstor
cld
je
adc
add
or
xor
mov
cwde
jle
pushf
scas
jecxz
ret
test
pop
pop
lods
data16
fadd
stos
jne
push
inc
xlat
jb
jb
ins
sbb
push
dec
jb
sub
stos
jnp
jg
cmp
add
cs
jecxz
adc
push
rcr
pop
jecxz
ret
stos
movs
inc
das
xchg
sbb
sahf
out
xchg
adc
push
movs
sbb
les
fisubr
push
sbb
and
sahf
jbe
xor
cmp
inc
push
inc
call
mov
jle
cmps
das
fisttp
jb
xor
adc
aas
push
jb
or
inc
mov
mov
cmp
scas
add
cmp
cmp
ror
and
addr16
dec
add
mov
idiv
mov
(bad)
jmp
inc
push
stc
push
outs
std
ret
xchg
aas
psubq
loopne
call
xchg
std
dec
or
fimul
push
dec
dec
ins
popa
xlat
loope
call
arpl
pusha
inc
test
enter
fs
stc
outs
icebp
push
gs
data16
and
nop
dec
add
inc
push
jmp
cmps
sub
inc
or
jo
les
push
ds
mov
push
xchg
(bad)
hlt
push
jae
outs
pop
sub
mov
push
push
push
call
add
dec
jnp
movs
jge
daa
lods
jp
inc
call
int
fldcw
xor
add
push
sub
push
adc
cmp
ins
mov
add
js
mov
add
or
lea
add
inc
mov
jp
jno
popa
push
sbb
nop
je
jno
adc
fisub
or
in
jo
sub
add
sbb
push
imul
stos
push
cmp
test
push
adc
ins
jae
sbb
push
inc
add
or
adc
test
jp
pop
or
in
and
in
int3
test
or
test
jne
push
add
aas
repz
ins
lds
inc
gs
mov
out
popa
cmp
out
imul
inc
adc
cmp
xor
fimul
outs
ins
jns
add
loope
push
shr
int3
or
and
out
add
or
in
int
and
pushf
adc
loop
cmp
adc
rcl
xor
sbb
xor
jmp
cmp
adc
push
shl
fsub
arpl
pop
stos
pop
dec
addr16
or
shl
add
or
adc
push
test
js
or
inc
xlat
cwde
inc
pop
mov
mov
and
sbb
mov
pop
pop
mov
push
popa
gs
fiadd
push
jo
imul
jbe
mov
aaa
pop
je
in
or
sbb
push
pop
or
pop
pop
jnp
pop
jl
adc
add
jne
pusha
stos
sar
sbb
inc
gs
fadd
adc
popa
xchg
js
adc
arpl
fbld
aad
(bad)
xlat
mov
loope
popa
addr16
aas
jecxz
(bad)
mov
clc
mov
jne
scas
outs
fs
scas
mov
pop
or
(bad)
loop
gs
scas
sub
ret
adc
out
daa
not
ins
hlt
mov
dec
les
jl
add
pop
sbb
or
adc
jbe
and
test
sub
add
push
inc
jne
outs
ins
inc
je
sbb
pushf
mov
mov
sar
or
fcomp
das
(bad)
aas
enter
jo
aas
or
or
pop
and
or
xor
das
je
adc
aaa
ins
das
pop
push
das
adc
push
cli
adc
ins
aam
adc
mov
sub
test
pushf
and
das
xlat
adc
push
push
aas
mov
in
adc
push
(bad)
cmovs
inc
inc
dec
sub
inc
sub
(bad)
jns
call
dec
leave
pop
fisttp
xchg
int3
imul
mov
sbb
imul
rol
scas
or
add
pop
pop
jb
ror
pop
daa
inc
dec
mov
or
or
fdivr
stc
and
dec
inc
outs
jne
push
xchg
mov
adc
imul
jb
add
and
int
nop
cdq
std
bswap
add
jmp
jnp
repz
(bad)
int3
cmps
outs
push
jns
fnstsw
test
mov
mov
mov
nop
es
push
push
out
xlat
daa
xor
add
adc
xchg
mov
pushf
fiadd
test
mov
push
addr16
cmp
call
gs
sbb
xor
add
arpl
mov
psubd
lds
inc
imul
add
jmp
loopne
jno
pusha
lds
xor
popa
add
rol
lea
sub
cmp
inc
jge
(bad)
xor
daa
and
or
cmps
push
sbb
fadd
mov
cmps
(bad)
pop
adc
push
shl
addr16
sar
or
sub
dec
arpl
imul
fsub
xchg
sub
xor
push
push
push
inc
cmp
jmp
or
jle
imul
push
inc
dec
test
(bad)
inc
jb
jns
mov
push
xor
adc
mov
es
add
mov
daa
push
fidiv
xor
dec
cmp
shl
or
pushf
sub
xor
stc
shr
push
or
lock
jl
add
shl
or
push
imul
or
daa
add
mov
push
push
push
mov
scas
sub
jne
inc
cwde
push
inc
mov
ins
push
lea
test
adc
adc
sbb
pusha
xor
push
inc
adc
mov
push
xchg
das
(bad)
pop
jmp
jo
xchg
cmps
mov
hlt
fs
sbb
fdiv
add
adc
or
sub
or
imul
cmps
cmp
out
aam
push
fld
push
ja
fsubr
adc
or
jb
mov
pushf
jge
push
cmp
pop
and
out
repnz
rol
pop
push
sub
jmp
jbe
add
mov
xchg
jbe
push
add
sub
(bad)
sub
sbb
ret
mov
or
out
lods
adc
jbe
xchg
jge
pop
push
(bad)
xchg
nop
aaa
and
outs
rol
popf
and
js
sub
cmp
data16
adc
or
pop
lock
js
xor
mov
int
cwde
sar
sub
push
inc
cwde
and
mov
add
xor
stos
ins
sub
outs
fsub
push
lock
add
sub
rcl
add
pop
cmp
sub
aad
stos
add
and
add
and
and
mov
sbb
adc
sub
(bad)
adc
add
gs
mov
nop
sbb
mov
add
cwde
pushf
jae
add
add
and
mov
outs
and
and
loopne
in
setae
js
xchg
sub
mov
dec
loopne
repz
je
add
mov
stos
adc
push
adc
dec
add
lea
es
sbb
outs
add
adc
sub
sub
fnstenv
push
and
pushf
dec
push
adc
fld
or
dec
and
fwait
ror
or
jg
fsubrp
ret
cmp
or
inc
jns
dec
dec
jo
mov
inc
sub
add
fld
add
jmp
xlat
add
and
imul
jno
setp
test
daa
loopne
mov
jno
pop
push
add
cmp
jbe
das
and
jnp
push
pop
push
fwait
cmp
ins
inc
in
sbb
dec
inc
neg
call
or
pop
jmp
and
mov
dec
rol
mov
add
stos
popf
shl
stos
pop
mov
outs
push
push
add
adc
iret
xor
sub
out
sbb
or
mov
sub
pop
push
mov
add
or
push
hlt
jo
jp
xor
add
adc
out
add
jne
int3
lods
adc
or
jnp
adc
xchg
inc
xor
xlat
or
inc
or
inc
and
cs
stc
scas
mov
push
shr
or
sbb
or
jmp
dec
pop
mov
adc
cs
in
sub
or
pop
das
retf
add
bound
addr16
sub
push
stc
push
inc
push
xor
call
dec
dec
xor
enter
fild
mov
add
xor
(bad)
out
push
ss
pushf
mov
cmp
dec
dec
inc
popf
fbld
cmp
daa
daa
daa
test
cmp
leave
enter
loope
cmp
retf
push
pushf
jb
repnz
cs
jns
fcom
ds
mov
loop
aas
ins
stos
fs
pushf
out
cpuid
jns
repnz
dec
inc
mov
cmp
js
cli
pslld
leave
dec
inc
mov
inc
mov
cs
dec
ss
dec
sar
sar
ins
mov
adc
mov
mov
dec
fcom
adc
push
jecxz
xchg
adc
dec
jne
dec
mov
add
xchg
dec
cs
popa
push
test
dec
xchg
inc
mov
call
push
pop
inc
fnstsw
mov
add
inc
ins
ins
outs
arpl
shr
les
inc
adc
jge
sbb
add
in
mov
push
into
movs
gs
fsubr
outs
sbb
shr
dec
ins
ror
or
loop
xor
mov
fcomp
jmp
cld
pop
(bad)
cmp
mov
add
or
stos
inc
xchg
adc
xchg
adc
retf
inc
push
jb
sbb
add
adc
arpl
mov
xchg
dec
inc
mov
adc
clc
and
jae
or
mov
loopne
cmp
adc
xchg
or
sbb
xchg
or
rcl
xchg
ret
lods
xchg
in
xchg
mov
or
ss
rcl
lock
sbb
xchg
inc
cmp
out
and
adc
xchg
or
sbb
xchg
ror
push
sbb
xchg
call
ror
mov
ss
ret
push
or
retf
jmp
add
adc
mov
and
and
ss
in
test
mov
pop
or
pop
leave
pop
ss
xchg
test
add
cmp
jo
adc
sbb
push
mov
inc
mov
mov
pop
push
add
or
movs
sbb
pop
fldenv
xchg
or
add
mov
push
pop
movs
push
and
bound
or
add
pop
mov
mov
mov
aaa
mov
inc
mov
sub
mov
mov
add
dec
add
jns
ins
jmp
mov
inc
cld
pop
adc
push
iret
adc
rcr
add
xchg
dec
adc
inc
add
outs
xor
lock
inc
imul
sbb
add
ja
int
movs
and
jmp
jae
outs
add
and
cmp
sbb
(bad)
call
out
inc
sahf
pusha
cmp
or
sub
jno
sbb
imul
pusha
je
add
int3
xchg
in
jg
mov
add
push
jnp
push
or
loopne
pusha
es
add
add
in
lahf
adc
movs
aam
and
loopne
mov
pop
enter
shr
jp
ja
add
rol
xchg
inc
lock
push
je
cmp
sub
mov
jnp
jae
add
push
ss
xor
lds
fnstsw
sbb
inc
mov
lods
in
mov
movs
cwde
mov
pop
fstp
cmp
test
int
dec
int
movs
int
int
add
xor
adc
jge
sbb
jge
mov
outs
loope
ret
adc
adc
push
jo
outs
jns
aas
test
push
dec
popa
js
pop
add
pop
xor
mov
mov
pop
add
inc
mov
add
and
mov
add
mov
leave
pavgb
sbb
scas
bswap
mov
mov
outs
arpl
dec
retf
js
out
retf
mov
retf
sub
jne
push
add
dec
outs
int
or
mov
test
movs
in
add
fucom
inc
out
and
sub
out
bound
add
mov
inc
adc
or
xor
push
shl
add
jne
js
retf
mov
xor
adc
sub
or
pop
test
or
add
inc
fbstp
add
or
add
cld
(bad)
(bad)
jg
call
in
es
dec
add
adc
push
jbe
mov
jo
adc
arpl
xadd
cmp
push
adc
add
mov
jo
jge
add
cmp
daa
push
outs
cmp
fld
es
lock
mov
jno
dec
popa
ins
cs
or
adc
mov
jns
fild
pushf
jno
loopne
mov
aad
xor
sbb
add
loopne
pop
xchg
push
outs
adc
arpl
popa
dec
outs
adc
test
add
outs
pop
movs
xchg
xor
dec
out
ja
ja
ret
lea
retf
out
wbinvd
jl
jnp
ja
mov
jo
push
ja
sbb
in
jmp
jne
stos
fs
ret
and
xor
leave
out
xor
adc
mov
int
popa
sub
lds
jnp
inc
idiv
push
dec
imul
es
stc
add
push
push
adc
inc
jle
sbb
clc
push
push
pop
(bad)
fdivr
add
add
gs
jo
cmps
out
ds
push
clc
loope
mov
mov
icebp
and
inc
bound
mov
inc
bound
daa
add
call
pop
mov
or
sbb
xlat
jge
(bad)
inc
test
push
or
mov
and
(bad)
sti
adc
or
and
jnp
add
push
fild
or
adc
imul
push
adc
xchg
pop
mov
arpl
stos
mov
jmp
mov
pop
push
outs
pop
or
sti
jo
ror
or
mov
and
dec
mov
outs
jae
imul
nop
addr16
add
enter
sbb
dec
and
xlat
push
repnz
push
ja
lock
mov
imul
or
jle
pushf
add
popa
dec
addr16
or
outs
cwde
sbb
out
mov
sub
pop
arpl
out
ins
data16
xor
or
jae
popa
call
or
in
ffreep
fild
cs
jne
ins
fs
jo
xchg
and
push
imul
add
mov
push
std
and
lock
xor
imul
ins
imul
das
add
dec
dec
jae
inc
nop
cmp
push
xchg
loopne
inc
add
scas
add
push
jb
sub
bound
pop
ror
xchg
push
idiv
dec
xchg
ins
(bad)
in
add
or
xor
jbe
sub
mov
mov
push
mov
mov
adc
and
mov
ins
bound
mov
or
sbb
push
add
xor
call
add
repnz
jp
scas
aas
or
sub
push
xchg
neg
push
mov
cmp
ja
mov
push
cmp
xor
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
mov
leave
hlt
lock
call
in
fsubr
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
push
or
sub
loopne
pop
pop
xchg
ins
das
shl
push
push
jecxz
jbe
push
mov
push
pusha
outs
leave
leave
leave
in
pop
addps
mov
leave
leave
dec
dec
sub
add
sbb
push
neg
ret
add
mov
dec
inc
or
data16
outs
(bad)
(bad)
cmp
sub
je
movzx
mov
inc
inc
pop
ret
addr16
fwait
(bad)
in
js
je
add
mov
jne
sub
lock
dec
jns
ins
gs
imul
popa
jae
outs
arpl
jb
fdiv
out
and
gs
jae
dec
movs
dec
les
bound
pop
adc
ror
cmp
cs
je
popaw
dec
leave
imul
aam
bound
test
iret
and
imul
addr16
push
outs
imul
retf
sbb
add
daa
sbb
data16
int
jbe
adc
mov
lock
lods
jge
out
jnp
dec
add
inc
push
dec
add
inc
or
pop
imul
and
sub
or
adc
or
adc
or
adc
pop
imul
fild
add
mov
outs
lods
sbb
cs
jp
add
jp
cmp
dec
imul
and
cmps
mov
push
nop
inc
add
dec
xor
cmp
push
add
int
or
dec
cmp
arpl
pop
add
fs
inc
inc
jecxz
das
shr
jmp
retf
jns
(bad)
std
ins
mov
cs
push
cmp
add
js
and
data16
sub
cmp
dec
or
mov
add
nop
call
cmp
es
mov
mov
cld
pop
fistp
cli
pop
push
mov
shr
movzx
mov
and
js
sti
jle
mov
and
sub
shr
adc
es
and
add
ja
or
xchg
mov
cmp
mov
add
inc
les
(bad)
loop
cmp
or
sbb
push
ret
cmp
or
outs
mov
cld
add
or
or
xor
add
clc
cmp
mov
pop
mov
cld
sub
neg
inc
mov
inc
cmc
div
cmp
mov
fadd
sub
add
in
mov
jne
push
sti
aas
add
pusha
ins
in
aas
mov
mov
jno
mov
rcr
in
push
mov
sub
mov
ja
std
push
sub
mov
shl
sub
int3
fnsave
xor
mov
mov
mov
push
into
je
jmp
adc
pop
in
adc
adc
add
cwde
test
psubusb
xor
xchg
jle
in
push
push
mov
adc
pause
dec
add
and
and
sbb
(bad)
mov
or
ja
sub
fnsave
in
mov
pop
add
mov
sbb
add
retf
je
mov
(bad)
cld
or
adc
jae
(bad)
jg
mov
mov
mov
push
and
push
or
ret
sbb
shl
loop
in
jle
xor
jmp
fistp
or
mov
mov
and
push
push
lea
push
push
inc
ds
(bad)
ins
pop
sbb
add
and
cmp
jbe
inc
cmp
jmp
out
add
jmp
test
jne
mov
fimul
pop
add
fidiv
div
sub
dec
(bad)
loopne
repnz
sub
pusha
add
pushf
fiadd
std
mov
outs
add
sar
(bad)
jbe
jmp
out
mov
cmp
and
add
call
push
fimul
aas
cmp
jne
and
sar
adc
shl
mov
push
repnz
dec
and
add
ret
jae
fdiv
ins
push
push
in
js
adc
std
push
sub
mov
pop
push
xchg
jo
neg
pop
or
ins
or
lds
fcos
lds
ins
push
std
sub
add
jbe
ss
ja
add
xchg
xchg
dec
mov
lock
and
cmp
shr
cmp
jb
add
push
ja
jmp
dec
(bad)
and
popa
out
(bad)
mov
xor
and
lea
pop
add
pop
data16
rol
test
lds
cmp
push
xchg
inc
ss
fidivr
fisub
inc
adc
and
(bad)
fidiv
xor
jmp
cmp
dec
sbb
mov
add
sar
ja
mov
mov
adc
dec
aas
dec
clc
pop
pop
(bad)
mov
popa
mov
push
je
je
adc
sbb
cmp
jecxz
or
jnp
lods
push
xchg
inc
and
pop
enter
out
or
(bad)
movsx
xor
mov
loope
xor
inc
mov
inc
pop
cld
lea
lea
pop
fistp
cmp
xlat
jne
mov
push
jne
(bad)
push
loopne
btr
mov
js
jmp
loop
ins
mov
dec
jnp
sub
lea
in
jo
adc
dec
int3
jmp
and
iret
jb
mov
xchg
sar
add
enter
iret
sub
sub
lds
adc
jmp
ds
push
mov
jg
or
mov
fs
cld
test
xor
das
mov
mov
mov
sub
lea
imul
js
loop
jnp
addr16
out
xor
dec
mov
mov
mov
movs
or
sbb
and
jne
mov
clc
cmps
lea
or
xor
hlt
add
je
and
push
loope
xchg
or
shr
dec
inc
cmp
aad
setge
xor
dec
push
or
fisubr
enter
loopne
push
xor
cmp
and
fadd
sub
shr
jmp
mov
cwde
ret
jo
pop
or
push
sub
cmp
(bad)
enter
xchg
dec
xchg
adc
test
push
pop
xor
sub
push
jb
xchg
or
fimul
xchg
mov
fisttp
sbb
mov
cli
nop
and
push
or
test
rol
lds
mov
mov
jne
sub
fldenv
jmp
inc
inc
rol
data16
mov
nop
pop
mov
cmp
xchg
xchg
sub
adc
fisttp
inc
or
cmp
frstor
inc
jne
and
push
cld
push
dec
rcr
(bad)
xchg
scas
loopne
pop
icebp
jmp
outs
popa
aad
fsubr
xor
push
mov
sub
call
and
sbb
mov
push
jb
scas
test
inc
push
jne
or
adc
inc
cld
or
cmp
cli
je
lea
and
mov
rol
pop
jnp
sbb
add
cmp
arpl
mov
mov
into
sub
mov
cmp
sub
mov
or
adc
mov
out
test
sahf
addr16
mov
clc
inc
sub
inc
cld
cmp
add
rol
loopne
mov
fs
xchg
adc
xor
test
push
in
or
in
mov
dec
pop
or
sbb
push
sbb
lahf
les
retf
jb
jns
jb
outs
cmp
inc
mov
push
mov
mov
mov
jg
or
dec
cmp
and
xlat
loop
rol
loopne
xlat
mov
imul
ret
outs
outs
(bad)
clc
iret
mov
jl
push
sbb
clc
inc
sub
cs
sahf
push
add
add
jecxz
cmp
ret
add
setae
cmp
jb
fiadd
cli
sub
jae
push
int3
mov
jb
mov
lea
jmp
lds
add
sub
cmp
inc
cmp
jnp
xchg
(bad)
mov
inc
cs
mov
cld
or
mov
fcomp
mov
mov
add
or
adc
pop
ret
push
jmp
clc
mov
rol
xlat
sub
jnp
mov
cs
sahf
sub
je
lea
mov
lds
mov
jne
stc
dec
out
mov
cld
test
mov
xchg
loopne
cmp
rcl
ret
cmp
dec
fistp
iret
pop
mov
add
xor
ror
push
cmps
pop
dec
push
sar
(bad)
je
iret
ja
cmp
pop
es
pop
mov
call
jmp
rol
xlat
add
test
add
(bad)
shl
push
ret
and
push
add
push
ss
adc
jb
lea
jl
inc
sbb
mov
push
pop
add
outs
test
pop
or
sbb
rcl
dec
iret
or
fs
shl
sbb
inc
nop
aas
loopne
ret
push
loop
and
sbb
push
cli
dec
outs
ror
(bad)
lea
or
std
mov
jae
neg
fldz
fst
add
mov
push
jecxz
fincstp
ja
fsubr
pop
jecxz
stos
retf
xchg
clc
jle
xor
hlt
adc
and
sbb
mov
push
(bad)
cmp
dec
mov
inc
push
cmp
push
cmp
les
clc
push
sub
(bad)
aas
fidiv
mov
jmp
mov
or
(bad)
repz
sbb
mov
xlat
mov
sbb
jb
outs
cli
mov
int3
cmp
jae
rcl
lods
adc
and
jg
xor
mov
cmp
jne
pushw
mov
pop
adc
sbb
jmp
sbb
out
sbb
stos
fidivr
mov
cmp
dec
mov
adc
sahf
sbb
xor
mov
mov
lods
mov
cwde
push
add
push
(bad)
aas
jmp
sub
inc
mov
add
mov
adc
test
jne
mov
xor
mov
pop
mov
mov
icebp
mov
mov
xor
jbe
mov
mov
inc
inc
ds
lock
mov
mov
sbb
shl
nop
push
mov
ins
adc
out
fild
push
jne
mov
push
in
cmp
(bad)
fistp
ja
mov
add
js
jae
xor
leave
mov
push
jge
sbb
add
push
(bad)
mov
js
add
push
out
mov
js
or
adc
test
je
adc
std
xchg
jmp
mov
pop
pop
push
je
push
ja
out
sub
cli
and
(bad)
call
mov
js
test
repz
push
and
aam
aas
sbb
push
outs
out
fisub
test
daa
dec
loope
adc
popa
mov
add
stc
push
ret
sbb
pusha
cdq
cmp
(bad)
pushf
pextrw
pop
inc
in
sbb
mov
push
sbb
inc
out
(bad)
mov
dec
fistp
pop
mov
dec
sbb
call
(bad)
scas
jecxz
add
jne
cli
adc
gs
enter
scas
mov
add
punpcklbw
dec
ins
push
pop
movs
sub
dec
out
inc
mov
inc
sbb
mov
jns
dec
mov
cmp
sbb
lock
xor
jo
fwait
mov
jl
cmps
clc
fisttp
jl
inc
pop
mov
cmp
jne
add
add
adc
xchg
or
and
popa
sti
jbe
or
jne
mov
jo
fdivr
add
adc
call
mov
fs
mov
add
dec
ja
(bad)
loopne
in
dec
fs
je
sbb
data16
jne
dec
lock
adc
inc
or
cmp
je
ficomp
xor
clc
test
cmp
push
in
daa
add
lods
add
lea
jnp
cmps
jnp
les
adc
inc
add
mov
icebp
cmp
or
add
mov
mov
pushf
dec
dec
dec
mov
cmp
add
cdq
test
push
mov
out
inc
out
jae
dec
aas
ror
mov
mov
test
adc
fwait
shl
cmp
ss
fnstsw
or
and
dec
fdiv
cmp
push
sub
ret
inc
mov
mov
and
ret
xchg
call
sbb
xchg
and
cdq
fild
or
mov
scas
jle
scas
cmp
je
or
inc
cmp
pop
fdiv
mov
(bad)
inc
fisubr
in
xor
fmul
xchg
push
mov
ror
jge
push
mov
add
push
dec
jne
ret
adc
loopne
mov
push
gs
mov
jmp
fadd
sbb
je
or
push
push
dec
(bad)
xor
inc
push
das
aad
cmp
sbb
add
push
xor
(bad)
pop
jne
push
sar
push
sub
or
rcl
jmp
pop
jmp
aaa
and
add
mov
shl
mov
(bad)
(bad)
fld
mov
jmp
push
dec
icebp
jne
mov
mov
sahf
test
jb
mov
jmp
inc
sahf
mov
inc
jae
in
xchg
mov
ss
scas
pop
xchg
sti
bound
mov
sub
mov
mov
xchg
push
jl
pop
neg
sbb
mov
lea
dec
lock
adc
jle
mov
xchg
loop
mov
sub
test
imul
and
push
mov
ds
cmp
(bad)
retf
fadd
xchg
cmp
xchg
adc
sub
pop
adc
mov
mov
fdivr
pop
add
sbb
or
jnp
add
mov
inc
pop
in
fidiv
mov
sub
mov
add
xor
xor
stos
pop
add
add
or
pop
je
dec
je
jmp
ss
sub
jmp
mov
sbb
fbstp
sub
stos
sub
addr16
xor
sub
push
xchg
dec
mov
adc
sub
pop
(bad)
stos
icebp
inc
sbb
cmp
rcpps
add
pcmpeqw
pop
cmp
push
sub
xchg
into
icebp
xor
ja
pop
sbb
jg
shr
jae
pusha
imul
pop
test
pop
jb
inc
xor
adc
les
xor
(bad)
(bad)
icebp
dec
lock
jmp
aaa
add
jne
cmp
ficomp
ja
sbb
stos
push
stos
into
(bad)
repnz
repz
push
(bad)
mov
idiv
add
sbb
add
cmp
jbe
mov
jmp
add
cmp
jne
mov
jg
cmp
cli
xchg
cwde
push
mov
inc
in
inc
repnz
sbb
mov
psraw
shr
jg
out
mov
add
sub
call
test
sahf
mov
in
loop
push
in
loopne
add
cmps
call
pop
out
(bad)
cmp
loope
lea
sub
mov
cmps
jae
mov
les
mov
or
rcl
mov
shl
out
mov
push
pop
adc
adc
std
loope
mov
mov
sbb
add
int3
pop
adc
inc
cmp
mov
mov
ret
into
retf
sub
repz
inc
pop
adc
jle
out
adc
push
push
mov
dec
test
adc
inc
xchg
retf
std
cmp
jne
mov
push
jo
lods
mov
or
mov
stos
leave
push
adc
and
xor
xchg
mov
mov
and
repz
cmps
rcr
xchg
inc
ret
dec
rol
or
or
neg
sbb
repz
cmp
sbb
adc
sbb
mov
push
test
test
sub
je
lahf
ds
loope
and
pop
sbb
pop
mov
mov
dec
add
call
xchg
call
add
ret
mov
jmp
cmp
cmp
add
add
and
fldenv
lods
dec
adc
addr16
xor
adc
in
inc
cmps
sahf
pusha
aaa
jne
jmp
std
jg
or
shl
mov
inc
fs
or
shr
push
mov
xor
lods
jns
outs
jne
test
rcr
std
pusha
jo
arpl
outs
and
cmp
into
mov
mov
xchg
inc
or
aas
cmp
retf
retf
sbb
or
mov
ror
dec
je
jg
adc
bound
lahf
gs
mov
mov
movs
jecxz
out
jns
mov
jge
dec
mov
outs
cwde
scas
jmp
cmp
ja
movzx
(bad)
je
adc
pop
(bad)
(bad)
outs
ret
push
mov
push
add
and
pop
push
loope
mov
out
movs
lea
pop
pop
jne
cmp
push
loop
int3
inc
outs
jl
mov
int
sbb
loopne
rol
add
scas
cmp
je
cmp
ja
sub
jg
call
(bad)
in
ins
cwde
push
sub
dec
or
adc
adc
or
push
(bad)
push
or
mov
push
push
push
jns
out
imul
push
mov
dec
or
adc
fld
mov
jl
pushf
sbb
ret
jle
rol
pop
or
shr
retf
adc
jbe
adc
add
add
and
sub
pop
inc
cmc
pop
call
pop
fild
bound
cmp
jne
clc
fnstsw
mov
(bad)
and
add
pushf
cdq
ret
adc
pop
cmp
jo
fwait
imul
(bad)
stos
fmulp
sbb
add
pushf
adc
push
call
pop
test
jne
or
or
add
loopne
in
xlat
fisubr
mov
and
pop
jmp
inc
imul
cmp
clc
mov
loope
mov
cli
call
xor
jmp
sub
pop
es
test
adc
jmp
cmp
ins
call
add
and
fdiv
jne
push
jmp
jmp
aam
mov
jmp
and
in
pop
nop
js
je
mov
push
retf
add
jmp
scas
test
add
xchg
ds
or
jbe
loopne
or
cli
xchg
mov
adc
xor
into
and
pop
mov
sub
rcr
cmp
pop
push
mov
cs
push
stmxcsr
ja
push
lock
dec
xchg
push
mov
jb
mov
mov
mov
xchg
pop
sbb
into
add
pop
xlat
inc
hlt
xor
sbb
clc
inc
(bad)
mov
or
mov
test
add
add
add
push
div
inc
dec
mov
hlt
inc
or
mov
sar
loopne
dec
lock
(bad)
fadd
(bad)
enter
sbb
call
nop
les
xor
push
or
push
aaa
pusha
jo
sbb
sub
es
lock
bound
mov
loopne
jne
xchg
jb
aas
mov
and
adc
pop
data16
(bad)
push
call
adc
lock
sar
sub
mov
cmp
sub
arpl
xor
ins
sbb
add
xor
in
or
mov
fld
mov
cmp
dec
add
inc
or
lock
dec
out
add
xor
dec
call
adc
push
out
sbb
sar
(bad)
into
packssdw
push
add
xchg
fwait
and
popw
pushf
js
add
sbb
test
cli
sbb
or
je
call
int
out
inc
aaa
inc
push
jne
or
outs
adc
shl
dec
mov
add
call
pop
inc
inc
adc
arpl
aam
dec
cmps
pusha
dec
add
mov
aas
pop
icebp
cmps
push
cmp
jb
(bad)
(bad)
jg
mov
nop
data16
ja
sbb
xor
push
mov
jmp
xlat
adc
sti
stos
inc
or
leave
lds
idiv
outs
or
pop
sbb
dec
inc
mov
push
bts
add
cmp
cdq
cmps
jp
rcr
push
add
or
ficomp
call
push
push
loop
add
mov
cmc
xchg
inc
sub
dec
enter
lea
je
rcl
cdq
push
push
and
push
adc
push
or
pop
jg
fdiv
or
jae
int3
inc
sar
inc
jl
std
pop
and
movs
movs
movs
fldz
fld
fstp
xor
jne
and
nop
nop
jle
cld
adc
add
jne
push
mov
pop
mov
adc
call
fnstcw
in
pop
rol
add
fst
push
sbb
xor
frndint
fld1
pop
add
jmp
and
leave
data16
jmp
(bad)
lock
faddp
fscale
xor
aas
in
sbb
adc
cs
fwait
addr16
jmp
or
pop
cli
aas
test
add
pop
pop
push
outs
adc
cmp
in
ja
cmp
push
call
adc
shr
jne
pop
pop
mov
or
adc
inc
push
inc
adc
add
lea
push
adc
jne
add
or
jbe
inc
mov
fadd
pop
dec
fwait
add
mov
xchg
push
cmp
push
or
and
les
sbb
inc
aas
es
inc
adc
xor
inc
push
ja
(bad)
xor
femms
mov
push
push
adc
test
and
mov
test
ja
mov
sbb
sub
outs
inc
jge
cmp
out
and
retf
mov
mov
adc
dec
and
pop
cmc
test
jnp
sub
int3
rcl
or
cmp
dec
cmp
lock
push
mov
out
sub
add
cmp
mov
fdiv
not
mov
fisttp
in
add
xchg
mov
aad
jmp
sub
sbb
cmp
int3
test
add
push
stc
call
pop
arpl
adc
mov
in
xlat
push
ret
and
pop
cwde
cld
jo
fmul
pop
shl
fs
in
sub
loop
(bad)
jge
inc
add
cld
inc
je
loopne
jo
and
std
outs
ficom
push
add
mov
mov
mov
jo
inc
inc
sbb
loopne
outs
cmp
jne
push
push
(bad)
sub
inc
lods
in
test
or
cli
cwde
and
leave
mov
nop
sbb
inc
retf
jle
(bad)
lock
fisttp
jmp
out
mov
fiadd
pop
repnz
(bad)
pop
lahf
xlat
mov
sbb
leave
mov
loopne
push
push
cdq
movzx
enter
or
sub
xchg
ret
add
xchg
sub
cmp
out
jle
mov
mov
dec
mov
add
inc
div
nop
ret
es
jae
aam
mov
add
fidiv
(bad)
ror
fucomi
pop
cmp
mov
pop
cmp
pop
(bad)
loop
mov
cmps
sar
cdq
pop
mov
sbb
js
dec
push
test
shr
jb
add
sar
ret
je
cld
and
out
push
pop
mov
push
rcr
fwait
cdq
inc
shl
jae
cmp
add
dec
push
adc
add
sbb
lock
les
or
or
or
push
scas
lods
adc
pushf
pop
or
mov
cmp
dec
dec
gs
pop
xchg
push
cmp
(bad)
mov
loopne
fidiv
or
ja
and
test
leave
adc
mov
xor
cmps
ins
add
jmp
repnz
or
xor
sbb
mov
jl
cmp
dec
(bad)
inc
loopne
push
sub
fld
fst
fst
mov
and
scas
(bad)
loope
push
sub
add
add
neg
sub
mov
jl
or
or
push
mov
and
inc
lea
loop
repz
push
sbb
push
inc
xor
push
dec
xlat
push
jecxz
push
push
or
dec
inc
push
add
cmp
dec
or
(bad)
popa
adc
add
push
pop
add
pop
fs
call
pop
mov
mov
xor
mov
add
jmp
adc
add
xchg
loop
push
cmp
fcom
or
sub
mov
je
loope
adc
rcr
jo
jmp
jae
out
add
fsubr
je
mov
pop
inc
sub
je
fwait
sbb
stos
inc
fmul
pushf
push
(bad)
scas
or
shl
das
js
push
add
jmp
cmc
aas
int3
jmp
add
push
or
addr16
stc
out
shr
mov
push
mov
fcomip
push
sti
shl
mov
push
add
cmp
je
out
test
je
and
je
in
out
js
outs
pop
je
xor
arpl
push
jmp
dec
das
push
push
daa
push
or
outs
jmp
sub
ja
cmp
ja
pusha
add
add
push
and
gs
dec
call
jge
data16
push
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
imul
jb
mov
mov
jae
adc
add
or
mov
shl
ror
jne
mov
out
mov
cmc
add
mov
mov
mov
stos
sub
inc
mov
rol
shr
cmp
jae
or
pop
inc
mov
call
xor
push
cmp
cmp
jne
dec
jne
fcmovnu
mov
mov
mov
cmp
repz
sbb
cdq
std
outs
mov
sub
sub
leave
jne
push
jg
retf
(bad)
adc
in
mov
icebp
sub
movs
mov
sub
push
push
add
pop
adc
jbe
pop
lds
call
aaa
jne
add
mov
nop
pop
xor
loopne
push
mov
je
sub
in
lock
das
out
js
je
shl
push
jns
push
fcom
dec
dec
gs
xor
mov
jmp
fstp
fld
adc
jmp
add
pushf
pop
inc
loopne
lods
enter
add
adc
enter
std
or
imul
add
jo
fst
adc
xchg
shl
shl
sub
push
fninit
fwait
dec
das
aam
pop
push
push
stc
out
movs
mov
jmp
je
mov
mov
mov
and
stos
bound
iret
fs
(bad)
push
push
cmp
push
push
inc
push
mov
lea
outs
jno
cmp
mov
sbb
sub
jne
push
fcom
clc
daa
and
(bad)
mov
sbb
cld
pop
pop
xchg
push
or
inc
clc
mov
jmp
push
dec
sub
xor
xchg
dec
inc
cs
pop
add
aam
pop
test
or
cdq
(bad)
sahf
mov
adc
adc
push
mov
adc
or
sbb
sete
out
add
mov
pop
dec
add
dec
fxch
jmp
(bad)
sub
push
inc
shl
jp
js
fs
les
in
in
push
jp
ror
adc
sbb
pop
fsub
dec
add
dec
ins
xor
in
add
push
js
jl
mov
push
push
dec
movs
int3
daa
or
daa
ja
pop
fadd
pop
ja
push
outs
or
or
add
jbe
xchg
mov
or
jb
test
xchg
adc
int3
out
and
add
jle
jbe
in
add
sbb
add
hlt
out
loope
aas
js
stos
mov
mov
push
xor
dec
rep
pop
and
jb
ror
mov
push
mov
lods
add
pop
sub
sbb
in
cmp
je
pop
mov
rol
xor
push
sbb
pop
mov
push
cmp
imul
mov
ret
mov
js
cmp
std
ds
or
or
js
push
nop
xchg
test
(bad)
mov
or
adc
(bad)
jb
movsx
xor
ins
loope
repnz
rcl
adc
stos
test
cmp
push
cmp
inc
push
mov
sub
fisttp
rol
(bad)
add
push
lea
or
xor
add
mov
or
pop
mov
inc
add
add
jmp
lea
push
ds
mov
std
jo
ins
gs
adc
mov
in
enter
sub
jne
repz
ror
arpl
jmp
mov
dec
and
push
mov
ins
inc
sti
sub
mov
jne
jb
push
pop
popa
dec
jo
push
in
or
jb
sbb
dec
ror
or
inc
call
lds
pop
sub
aad
les
lock
pop
mov
dec
add
mov
add
lea
cmp
xchg
jle
inc
push
mov
mov
cmp
mov
and
mov
fwait
push
sahf
inc
xchg
cmp
jg
xchg
jmp
js
and
popf
jmp
push
xor
sbb
pusha
push
adc
add
xor
or
pusha
cmp
push
add
daa
inc
sbb
dec
inc
les
mov
mov
mov
mov
shr
rcl
add
scas
repnz
lea
(bad)
pop
jmp
popa
shr
adc
sbb
inc
cmps
pop
mov
pop
push
data16
stos
add
jp
or
stos
or
ja
xchg
cwde
(bad)
mov
mov
int3
or
add
repnz
je
pop
call
pop
mov
pop
ret
pop
add
sub
mov
mov
inc
cld
adc
push
xchg
cdq
test
adc
pop
xchg
add
out
jmp
nop
jns
aaa
sbb
sub
adc
ret
dec
or
jbe
loopne
jmp
mov
sbb
mov
jg
xor
mov
stos
add
dec
or
cmp
pop
or
push
or
add
add
scas
stos
pop
dec
pop
mov
push
ins
jno
cmp
inc
lea
pop
push
add
adc
cs
xor
cmp
inc
cld
lea
inc
fcom
outs
jmp
rcl
scas
add
push
aaa
mov
loope
jo
xor
cmps
outs
les
mov
xor
jmp
add
dec
jne
sbb
jmp
pop
jmp
push
lea
jmp
xor
je
jmp
mov
mov
stos
jmp
loope
sbb
psubusw
and
popa
push
sbb
inc
das
push
pop
cmp
xor
push
movs
call
or
sub
sbb
fcom
pop
jae
push
cmp
je
loop
push
(bad)
push
(bad)
add
ds
mov
mov
pop
add
jp
ins
xchg
pusha
or
out
sub
jbe
adc
inc
jo
movs
je
pop
jmp
in
pop
jmp
pop
xor
call
sub
fcmovne
push
pop
dec
adc
jne
mov
jmp
xor
lea
(bad)
jmp
mov
mov
mov
mov
inc
or
mov
sbb
inc
fnstsw
pop
ret
jmp
lock
push
or
xchg
or
sti
mov
mov
test
inc
dec
xor
push
push
adc
in
add
jmp
cwde
sbb
mov
popf
mov
js
je
push
adc
call
or
jo
sub
or
jg
sbb
stos
push
pop
xor
push
lahf
call
idiv
cmp
jne
xor
aas
adc
sub
cwde
out
cs
mov
out
sbb
dec
jmp
enter
push
or
test
cmp
jge
add
and
xchg
add
cwde
stos
mov
jno
xchg
nop
jg
push
sub
cmpxchg
cmp
je
mov
jg
jmp
rol
loop
xacquire
fdiv
(bad)
clc
add
pause
dec
push
jg
push
test
inc
clc
push
push
or
movs
inc
mov
cli
je
add
and
aaa
sbb
jp
jno
jle
jo
out
ret
cmp
in
jnp
mov
int3
adc
add
dec
jne
cmp
jne
mov
ja
add
sbb
push
fdiv
loope
fild
call
fsubr
or
jmp
mov
sbb
dec
outs
imul
call
outs
arpl
jae
jb
outs
data16
je
outs
outs
dec
imul
add
jbe
clc
data16
ins
add
add
push
adc
add
mov
add
div
mov
rcr
fisub
sub
jl
retf
xchg
ja
in
adc
sbb
jle
adc
popf
sbb
mov
gs
mov
or
jne
sbb
pop
jo
mov
mov
sbb
sub
loopne
mov
loope
push
in
inc
sub
(bad)
fdiv
xor
cmp
in
inc
mov
in
sbb
cmp
jge
daa
and
sub
sub
gs
push
(bad)
mov
into
and
or
loope
inc
adc
std
cmp
xchg
popa
adc
test
inc
adc
dec
dec
test
adc
int
mov
dec
push
test
xchg
out
push
outs
adc
jle
scas
push
xchg
aam
adc
test
aaa
aad
jo
enter
cmps
or
cmp
mov
mov
and
mov
jle
cmp
pop
outs
je
das
inc
add
clc
ja
(bad)
mov
jmp
jmp
cmp
daa
popa
xor
xchg
pop
andps
pushf
mov
inc
add
bound
jmp
je
dec
ss
dec
mov
movs
shr
mov
in
or
ror
pop
sub
into
push
dec
cs
cmp
stos
push
mov
jne
push
mov
(bad)
mov
dec
mov
adc
push
fimul
xchg
pop
leave
push
add
shl
or
out
stos
pop
mov
mov
sub
shl
ret
inc
xchg
lock
rol
sbb
out
in
fstp
ds
loopne
cmp
lea
imul
jo
mov
std
or
arpl
dec
cmp
sbb
(bad)
pop
mov
mov
icebp
test
mov
mov
shl
(bad)
mov
sbb
adc
loopne
jno
xor
call
in
jge
ins
push
ins
fucomip
push
shr
pop
push
or
(bad)
call
sub
push
jbe
fistp
lock
pop
inc
jmp
add
jmp
scas
daa
mov
rol
adc
shl
cmp
cdq
adc
sbb
test
mov
daa
data16
fisub
inc
es
mov
push
movs
sahf
sbb
je
lods
push
popa
push
xor
or
sub
int
cmc
adc
push
ret
xor
push
jl
aaa
add
dec
and
stos
mov
dec
call
xchg
cs
mov
sbb
adc
add
sub
jo
pop
pop
repnz
inc
push
cmp
aad
push
je
ret
adc
xor
xchg
pushaw
xchg
ss
es
je
stos
add
push
cmp
(bad)
data16
or
ins
dec
cld
cmp
jne
sbb
push
cmp
adc
push
adc
add
es
or
outs
sbb
xor
xchg
push
sbb
jg
mov
pop
lock
xchg
out
ret
pop
das
add
div
inc
add
dec
push
push
cmp
adc
sbb
into
or
sub
aas
or
js
call
xor
(bad)
adc
mov
stos
call
pop
fadd
hlt
lea
fist
in
mov
add
fstp
sti
xor
inc
sti
cmp
not
inc
shl
pop
push
hlt
mov
into
cmp
xchg
in
and
xor
lock
push
mov
jl
mov
push
test
sbb
fistp
xchg
dec
cmp
clc
adc
fild
inc
sar
cmp
iret
pop
push
xor
cmp
ins
icebp
aaa
jecxz
cmps
(bad)
in
push
call
sub
push
push
push
push
cmp
in
scas
adc
pop
pop
jg
add
ins
mov
or
jae
fmul
repz
jmp
push
push
jmp
pop
jecxz
nop
sbb
je
popa
mov
mov
movsx
inc
inc
jmp
add
add
mov
sbb
push
jecxz
sbb
dec
adc
jno
aaa
push
aas
loop
pop
mov
or
cmp
add
(bad)
test
cmps
out
mov
mov
push
mov
xor
ins
lods
adc
fs
adc
icebp
dec
call
ss
lods
sar
cmp
je
dec
mov
xor
js
push
jae
sub
xor
je
pop
jbe
add
dec
or
xor
sub
(bad)
adc
adc
adc
cli
and
add
je
or
ds
mov
push
cmp
sub
push
and
jl
scas
fstp
push
mov
mov
mov
jl
add
jg
jmp
jmp
jge
pop
mov
sbb
mov
inc
or
hlt
in
push
mov
push
xor
outs
je
dec
mov
push
ss
sbb
dec
mov
mov
or
dec
rcr
lea
mov
mov
mov
aam
out
push
aas
cli
clc
cmp
in
aaa
push
int3
cmp
jne
(bad)
enter
xor
mov
cmp
jne
inc
inc
mov
xchg
fs
jg
push
add
dec
jne
sbb
wrmsr
adc
xor
outs
inc
or
xchg
and
mov
test
es
daa
lahf
push
mov
jno
adc
daa
adc
sbb
add
das
push
psubusb
push
dec
aaa
pop
lods
fdivr
push
retf
add
jno
(bad)
in
push
sbb
(bad)
lods
mov
inc
xor
loopne
aaa
add
dec
(bad)
sbb
loop
adc
pop
mov
call
std
lods
adc
inc
pusha
mov
xchg
jmp
jmp
push
or
dec
(bad)
jmp
push
mov
mov
arpl
or
mov
pop
(bad)
in
(bad)
or
fadd
mov
push
push
push
push
mov
loopne
pop
mov
fisttp
and
cmp
jo
add
xchg
add
cdq
(bad)
add
xor
pusha
jp
mov
ins
sti
xchg
adc
clc
mov
push
jns
loope
pop
mov
cmps
xor
and
sbb
dec
xor
inc
(bad)
cs
adc
fwait
or
pusha
add
jl
fadd
or
or
int
jo
cs
adc
adc
add
aaa
clc
sar
mov
sahf
or
std
cmp
loop
clc
(bad)
jmp
xor
nop
cmp
xor
and
or
inc
mov
mov
cmp
je
cmp
push
(bad)
mov
jl
sub
dec
je
jmp
lods
sti
jg
add
call
xor
push
cmp
sub
stos
push
cs
adc
jmp
sub
je
das
dec
mov
jmp
mov
jmp
mov
jmp
(bad)
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
push
jno
lock
mov
mov
push
jo
or
daa
lods
xor
pop
subps
je
push
dec
and
sub
dec
dec
(bad)
xchg
pop
pop
inc
ins
jp
mov
adc
xor
mov
mov
out
push
inc
inc
inc
push
das
jo
mov
or
sbb
push
adc
adc
jmp
push
xchg
movs
inc
lock
or
pop
retf
mov
pop
mov
mul
add
sbb
inc
cmp
stos
clc
fbld
adc
cmp
je
cmp
jne
push
mov
and
and
in
push
mov
pop
ss
xor
or
mov
aaa
je
add
pop
cmp
imul
xor
iret
jmp
jmp
test
retf
ret
adc
mul
push
in
imul
inc
enter
sub
sti
jle
inc
xor
inc
(bad)
push
enter
jg
xlat
sbb
mov
or
mov
imul
sub
bound
sbb
mov
mov
and
shl
cwde
dec
sahf
adc
iret
les
adc
xchg
pushf
jecxz
inc
or
or
and
push
pop
sbb
cmps
push
arpl
or
adc
mov
popf
aam
inc
aad
dec
les
xor
fisttp
lock
lea
inc
add
sbb
(bad)
icebp
fimul
dec
je
add
int3
leave
mov
cmp
pop
mov
or
jne
pop
sbb
shl
test
inc
inc
or
inc
push
add
retf
stos
ret
lea
je
pop
inc
stc
jne
sahf
mov
jmp
mov
test
ret
ret
mov
sbb
fdiv
sbb
add
mov
dec
xchg
push
jp
or
adc
adc
shl
in
or
add
in
adc
ja
add
mov
mov
loop
rep
ss
adc
(bad)
neg
sbb
inc
leave
adc
outs
pop
outs
jmp
fcom
mov
jne
cmp
add
mov
or
adc
icebp
push
push
ret
jle
add
add
push
cmps
add
pop
ret
retf
pop
and
push
jmp
ins
ds
cmp
rol
(bad)
call
gs
nop
mov
adc
sti
jo
add
retf
dec
or
pop
mov
inc
cmp
dec
add
popf
je
mov
jle
out
adc
pop
pop
rcr
mov
in
mov
shl
jne
dec
add
mov
push
xchg
jl
shl
ja
mov
aaa
adc
jecxz
xor
dec
and
fistp
xor
and
inc
adc
mov
pushf
mov
push
adc
outs
add
or
ja
and
arpl
dec
jno
add
xchg
loopne
fcom
sar
fs
icebp
pusha
(bad)
jne
cmp
adc
ds
fdiv
dec
adc
je
mov
inc
inc
mov
mov
pushf
jnp
loope
rcr
pop
mov
inc
dec
outs
inc
hlt
mov
push
sar
adc
adc
data16
sub
sub
add
(bad)
jae
sbb
sbb
push
xor
push
in
mov
push
jmp
or
adc
pop
fcomp
call
xor
push
fiadd
in
jl
fisub
mov
mov
les
mov
repnz
sbb
shr
mov
mov
add
xor
ss
adc
retf
xor
aam
or
and
ret
jne
cmp
fs
push
repnz
addr16
enter
fs
dec
cmp
cmp
shl
mov
sub
adc
mov
cld
mov
data16
and
or
xor
adc
data16
jge
sbb
or
loop
jle
push
or
fbstp
and
push
adc
mov
ret
cdq
into
jge
in
ror
xchg
cs
add
mov
jmp
inc
sbb
call
movs
mov
(bad)
xchg
cs
clc
dec
jl
lock
hlt
and
inc
push
ficom
xchg
push
popf
ds
mov
pop
(bad)
mov
cmp
mov
push
or
jmp
inc
jbe
add
mov
call
clc
inc
jle
pop
mov
popw
ja
lock
mov
call
rol
inc
pop
call
aaa
dec
imul
xor
push
retf
sahf
mov
(bad)
shl
and
rcl
test
dec
and
or
adc
fsubrp
in
pop
imul
add
(bad)
mov
mov
pushf
mov
mov
inc
ret
dec
or
loope
pop
nop
mov
lea
daa
lock
popa
pop
pop
and
push
arpl
cmp
xor
outs
lods
cmps
fdivr
movzx
mov
mov
mov
lock
mov
mov
add
xchg
lea
lea
cmp
icebp
daa
ret
jge
xor
test
out
fmul
out
or
inc
mov
xor
mov
sub
jmp
lea
sbb
call
mov
or
add
popa
lock
mov
mov
leave
sub
loopne
ss
cwde
fs
add
inc
inc
nop
ins
or
pop
aaa
mov
push
push
add
cmp
push
loopne
jo
inc
ins
jmp
data16
pop
add
icebp
adc
push
ja
fld
xor
fldcw
xor
mov
pop
add
and
jle
dec
push
std
mov
pop
sub
cli
sbb
dec
add
dec
(bad)
lahf
mov
ds
add
jmp
mov
pop
push
dec
fdivr
std
lock
pop
pop
jmp
inc
clc
xchg
adc
cmp
ss
push
jae
mov
cmp
je
ficom
inc
test
dec
je
xor
mov
push
aaa
push
add
lods
push
xchg
cmp
add
push
ud0
or
add
cmp
add
in
iret
dec
add
daa
or
cmp
sub
retf
or
out
lahf
or
shl
inc
xor
retf
in
sbb
pop
adc
or
inc
popa
rol
ja
adc
xor
pop
nop
jmp
(bad)
cmp
arpl
mov
xor
xor
mov
clc
pop
cld
dec
shl
add
push
shr
mov
fnstenv
dec
inc
mov
out
pop
add
aaa
into
(bad)
mov
or
loop
push
adc
add
and
je
mov
cmp
jne
outs
call
add
dec
add
adc
add
jne
add
in
jg
shr
pop
cmp
cmp
jne
shr
shr
sbb
fnstsw
das
ret
pop
push
mov
shr
or
test
pop
loope
add
cwde
scas
add
loope
fcomp
out
mov
push
ss
push
loopne
dec
mov
adc
dec
dec
sbb
rcr
movzx
adc
or
inc
cmp
fs
push
fistp
sbb
retf
jbe
mov
inc
inc
sbb
xor
push
daa
or
or
loop
je
or
cmp
jg
inc
inc
test
jl
cmp
jg
test
mov
inc
rep
jmp
mov
outs
fwait
cs
mov
call
nop
push
sbb
aas
test
ret
push
mov
cmp
lock
and
je
jbe
adc
xchg
push
push
or
lods
shr
inc
rcr
add
mov
fimul
sub
and
pusha
pop
or
push
retf
fimul
cmp
jmp
or
add
fstp
(bad)
jg
or
dec
mov
lahf
push
push
in
lock
jbe
call
cs
pop
add
pop
pop
pop
jmp
icebp
mov
jmp
sbb
sub
push
xor
call
add
shr
addr16
int3
lahf
fnsetpm(287
xchg
inc
scas
pushf
cld
cmp
mov
cmp
mov
push
cld
add
jo
jne
adc
mov
fimul
clc
dec
xor
lea
xor
mov
mov
lods
jmp
cmp
push
call
push
sub
in
jne
push
lea
lea
idiv
push
mov
dec
cmp
or
jp
sbb
add
je
loopne
inc
pusha
mov
rcr
jne
cmp
ret
cmp
pop
mov
push
or
mov
mov
add
and
cmp
fisub
push
push
push
mov
int
dec
dec
sbb
sar
sub
data16
adc
js
hlt
inc
and
shl
cld
add
das
jmp
add
dec
mov
cmp
mov
cmp
(bad)
icebp
xor
add
test
addr16
hlt
sbb
inc
add
rep
mov
xchg
cmp
push
add
lods
mov
(bad)
je
or
jle
xlat
push
push
and
loop
rol
cmp
sbb
rol
rcl
push
mov
pop
ds
loopne
push
or
scas
pusha
(bad)
aad
push
dec
push
mov
push
cld
and
jb
addr16
xor
cmp
mov
pop
add
inc
and
xor
pushf
cmps
or
pop
scas
out
cvtps2pd
or
in
xor
and
(bad)
mov
sub
sbb
jmp
cli
add
xor
jmp
dec
cmp
cmp
sahf
sar
sbb
add
lock
sti
repz
cmp
and
mov
add
add
mov
xchg
jecxz
jl
push
or
call
lea
add
cmp
cs
or
add
shr
push
adc
lock
enter
fld
leave
mov
mov
(bad)
inc
push
cmp
add
test
jle
mov
pusha
push
in
push
mov
ds
cwde
stos
inc
lock
cmp
mov
out
inc
rol
hlt
jle
lea
add
cmp
inc
mov
sbb
mov
scas
loopne
in
pop
mov
cmps
test
or
sub
cmps
sub
ja
fsubr
lods
das
sub
(bad)
mov
xor
out
(bad)
dec
loopne
arpl
add
addr16
and
xor
in
out
push
cmps
and
jg
sub
outs
sub
addr16
mov
lds
lds
push
sbb
or
jmp
in
addr16
aaa
cld
add
jo
inc
push
jo
push
jmp
test
sub
add
loope
js
jp
mov
jae
jno
cmp
sbb
call
adc
pusha
jo
iret
push
(bad)
push
sbb
test
das
pusha
outs
shr
lods
retf
shl
ss
loope
js
mov
jg
xchg
mov
cmp
je
cmp
(bad)
mov
sbb
pop
pop
jmp
scas
jmp
cld
add
ror
ins
les
shr
mov
push
mov
jmp
mov
loop
pop
inc
or
add
dec
add
out
retf
fmul
mov
sbb
sub
rcl
fmul
mov
outs
(bad)
xchg
sbb
or
or
mov
mov
dec
jmp
test
dec
pusha
outs
sub
add
or
xor
scas
retf
pop
(bad)
in
push
lea
faddp
adc
jl
pop
adc
and
jge
out
aaa
dec
xor
cs
inc
pushf
sbb
repnz
or
dec
jne
mov
je
or
and
pop
adc
fcomp
pop
pop
lea
jmp
jmp
add
xor
ds
cli
call
and
leave
add
add
neg
push
mov
cmp
jne
rol
pusha
push
xchg
or
movs
sahf
(bad)
bound
push
or
fist
pusha
xchg
xchg
into
or
sub
xchg
pop
into
rol
or
xchg
inc
sar
into
xchg
std
cmp
jl
cmp
jl
nop
adc
dec
cwde
sub
sub
mov
fiadd
mov
push
lea
mov
mov
adc
dec
lock
push
pop
ficom
or
push
add
loop
call
mov
int3
xor
mov
fmul
or
sbb
dec
fcomp
sar
repz
push
inc
xchg
mov
sbb
push
pusha
pop
rol
mov
sbb
push
jle
inc
xor
mov
xor
fistp
data16
fisubr
jo
int
adc
rcr
adc
xor
or
jo
dec
jl
push
pop
icebp
lods
adc
xor
inc
inc
sub
sub
fidivr
jmp
xchg
cmp
add
(bad)
add
mov
add
mov
sbb
shl
mov
je
outs
sub
pop
cmp
adc
(bad)
mov
add
in
pop
sub
cmp
je
adc
mov
dec
inc
shl
cmp
das
inc
adc
inc
and
out
jbe
xlat
pop
xor
rcr
jge
push
pop
xor
and
cmp
loope
jne
or
fbstp
cmp
shl
sub
fs
mov
pop
cmp
inc
cmp
sub
inc
and
mov
add
jle
xlat
mov
and
jecxz
out
ja
cmovle
clc
or
sbb
mov
mov
pop
add
cmp
jnp
jle
sbb
jne
mov
ds
das
ja
test
cwde
pop
ret
sbb
or
mov
retf
fs
sbb
mov
or
push
jge
or
movs
add
mov
xor
pop
cmp
adc
sti
sti
inc
mov
cmp
or
jb
ss
js
jle
adc
fimul
add
add
add
movs
inc
pop
cmp
sub
and
test
dec
pop
cmp
sbb
push
push
test
or
pop
or
or
dec
pcmpeqd
sbb
mov
scas
sbb
mov
push
jmp
dec
or
pop
repz
mov
xlat
sbb
call
cmp
into
shr
adc
pop
dec
push
loop
adc
jnp
xlat
pop
loopne
push
jp
jmp
and
or
adc
dec
xor
cmp
aas
and
cld
mov
leave
push
mov
dec
ret
call
sbb
test
xchg
loopne
cmps
das
ret
out
push
xchg
inc
sub
ret
pop
loopne
mov
add
or
cmp
je
loope
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
test
add
jmp
push
mov
in
sub
adc
dec
or
adc
jmp
push
mov
cld
or
cs
fstp
and
pop
cmp
pop
jmp
cmp
mov
test
les
pop
jmp
xchg
pop
adc
outs
add
add
cmp
pop
inc
adc
mov
pop
sbb
cmp
add
push
jmp
sub
shl
jb
pop
xchg
es
push
mov
(bad)
mov
mov
stc
add
jg
out
sti
pop
fmul
mov
pop
fsubr
mov
dec
nop
jmp
test
lods
pop
dec
aam
ja
test
outs
es
add
pusha
xchg
repz
jnp
jb
shr
test
retf
cmp
and
rcr
js
pop
js
call
xchg
out
xlat
inc
sbb
icebp
mov
cmp
arpl
iret
mov
sbb
retf
mov
out
jns
rcr
retf
mov
sahf
outs
jp
cli
mov
jnp
clc
inc
(bad)
jae
cmp
cmp
dec
cmp
enter
and
push
push
push
popa
xchg
xlat
pusha
xorps
mov
test
mov
sub
mov
inc
xor
ror
pop
outs
xchg
mov
push
clc
push
cmp
sub
jle
add
add
jno
clc
js
aad
inc
mov
xor
mov
pusha
or
xor
push
push
or
cmp
and
and
jo
(bad)
pusha
or
jg
fsub
shr
pop
xor
jmp
mov
lds
push
mov
jnp
in
retf
xor
sub
jge
pushf
bound
ins
lea
shl
adc
rcl
push
pop
dec
std
mov
inc
cmps
add
jmp
aas
add
ror
mov
and
nop
loopne
cwde
ds
push
dec
jne
or
addr16
inc
test
idiv
mov
mov
sbb
dec
movs
push
test
xchg
loope
adc
xor
cld
pusha
mov
leave
mov
or
loope
mov
and
mov
jmp
hlt
nop
dec
outs
sub
xchg
imul
pop
leave
movs
mov
adc
sbb
(bad)
dec
sar
cmp
loopne
mov
ja
inc
add
add
inc
test
mov
jecxz
add
cmp
add
iret
lock
push
iret
adc
popa
cwde
pusha
xor
pop
sub
lea
add
shr
loopne
test
loop
sbb
add
fisttp
mov
loopne
cld
dec
jle
or
jbe
push
ret
push
daa
xchg
sbb
jmp
push
lea
rcl
clc
push
test
movs
jmp
nop
xchg
jae
mov
inc
pop
ret
aas
(bad)
xchg
aas
clc
pop
clc
mov
mov
push
push
sbb
mul
mov
lock
mul
add
inc
adc
pop
pop
pop
push
xor
cli
inc
push
outs
mov
pushf
shl
sar
xor
push
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
mov
(bad)
jbe
mov
pop
div
xchg
add
retf
sub
ss
fwait
adc
jl
mov
shr
rcr
ror
(bad)
mov
rcl
and
push
mov
imul
in
pop
cli
sub
(bad)
fimul
sbb
sbb
cwde
mov
or
shl
(bad)
sub
or
sbb
leave
mov
push
das
or
je
mov
mov
nop
add
push
not
loopne
rcl
(bad)
rcl
cmp
jb
in
or
loopne
cmp
jb
sub
sbb
inc
loop
adc
ins
repnz
add
push
jns
neg
neg
sar
iret
add
jns
neg
neg
sbb
int
cld
push
in
ins
iret
mov
mov
pop
test
sbb
(bad)
not
adc
aaa
mov
lea
sbb
(bad)
and
psrlw
xchg
add
push
movs
push
js
mov
cmp
ret
and
mov
push
cmp
jb
cmp
mov
sbb
jne
inc
xor
(bad)
(bad)
clc
mov
cmp
setg
jmp
xor
je
hlt
std
mov
jb
outs
push
pop
je
or
(bad)
and
push
or
dec
and
or
lock
imul
cli
inc
mov
add
es
or
adc
push
jb
out
jmp
(bad)
cmc
cdq
fiadd
sub
mov
inc
hlt
or
adc
or
sbb
inc
sub
inc
and
mov
add
xor
mov
cdq
(bad)
mov
mov
add
aam
adc
je
cdq
scas
push
adc
inc
xor
jmp
cmp
fisub
or
shl
ficom
add
jae
pop
sbb
and
or
dec
and
rep
xchg
inc
int3
add
sub
cmp
das
jg
retf
add
shl
test
dec
sub
jmp
daa
je
pop
jmp
jl
sbb
aaa
loope
adc
pusha
add
pushf
sar
je
dec
sbb
(bad)
in
repz
or
pop
mov
fisub
js
inc
or
adc
(bad)
and
mov
loope
icebp
jmp
jecxz
jmp
es
pusha
ss
cli
and
mov
ret
adc
add
sub
sbb
and
or
dec
push
sub
pop
xchg
adc
jp
mov
xchg
jb
nop
pop
push
jmp
pop
cmc
and
fld
(bad)
icebp
xorps
adc
xchg
mov
test
adc
xchg
lds
mov
sbb
adc
scas
pop
shl
and
mov
es
jno
loopne
mov
mov
mov
add
or
mov
lahf
mov
call
mov
pop
sbb
(bad)
aas
jae
dec
adc
adc
ret
sub
sar
add
test
clc
movzx
add
clc
adc
or
dec
icebp
adc
jmp
pop
or
mov
(bad)
div
imul
(bad)
cdq
idiv
cmp
ss
data16
mov
cmp
jne
cmps
jge
cmp
jo
cmp
jle
cs
aaa
imul
nop
ret
mov
sub
xor
add
fisttp
lea
test
out
adc
lock
test
inc
mul
xchg
dec
sar
int3
jnp
xor
add
xor
mov
(bad)
sub
push
dec
push
(bad)
lods
mov
inc
nop
sbb
ja
pop
ss
or
fld
sbb
sub
mov
sub
xor
out
sar
add
dec
or
out
leave
daa
jne
lock
stos
mov
add
inc
enter
lock
shl
pusha
dec
mov
ds
or
out
jecxz
ss
dec
clc
adc
imul
mov
inc
dec
jne
mov
mov
add
mov
int3
and
sbb
ja
adc
sbb
or
mov
push
sbb
aam
retf
retf
adc
das
ficomp
push
push
jne
and
shr
jbe
adc
fidiv
stc
jne
or
mov
push
jmp
es
xor
push
loop
(bad)
loop
call
mov
scas
test
fidivr
fcmovbe
or
mov
imul
push
mov
sahf
xchg
add
mov
xchg
imul
dec
push
xchg
mov
fsub
enter
xor
push
lock
push
xchg
(bad)
cmp
mov
movs
(bad)
xor
xor
rol
(bad)
inc
and
mov
sbb
int3
xor
cmp
mov
adc
jns
add
adc
(bad)
push
dec
jne
push
mov
pop
push
and
shr
push
or
js
hlt
push
fcomp
fld
loope
into
cmp
sub
adc
sahf
cmp
mov
mov
and
push
push
push
mov
inc
pop
pop
dec
cmp
or
push
or
lods
adc
bound
mov
pop
push
nop
or
enter
add
pusha
push
adc
inc
xchg
add
pop
jmp
fstp
sub
ret
pop
or
jb
jmp
add
push
fdivr
js
add
(bad)
mov
jne
push
sbb
pop
cmp
cmp
dec
jmp
push
mov
cmp
add
mov
and
and
pop
popf
jmp
push
push
add
movs
mov
in
pushf
(bad)
mov
or
cmp
leave
cmp
sbb
test
add
push
push
and
sahf
add
cmp
xchg
in
dec
int
loopne
in
inc
sbb
in
mov
sbb
loopne
push
enter
add
xlat
ds
xchg
mov
mov
(bad)
fidiv
inc
jge
adc
adc
lock
push
fbstp
push
(bad)
mov
adc
mov
mov
pop
mov
mov
adc
pusha
adc
lea
push
call
mov
adc
in
call
cmp
fisubr
xchg
xchg
add
push
scas
call
jne
xlat
stos
cmp
in
into
cmp
pop
mov
lock
ret
adc
pop
mov
aaa
lods
sub
add
lds
je
jge
adc
in
je
ins
add
jnp
loope
mul
jg
or
add
inc
cmp
jle
or
loope
mov
popa
test
cdq
test
jl
cmpps
push
dec
retf
lea
adc
push
ret
mov
inc
retf
mov
sbb
cmp
je
(bad)
ficomp
arpl
dec
scas
fcomp
repz
inc
hlt
dec
aam
movs
push
rol
add
shl
(bad)
dec
push
pop
mov
and
lock
call
add
dec
jne
mov
inc
dec
add
rcr
(bad)
out
xlat
shl
ins
sbb
xor
daa
add
scas
lock
inc
mov
or
mov
cmova
(bad)
scas
inc
dec
jne
pop
push
dec
fsubr
call
push
xor
test
push
mov
mov
jne
test
ja
pop
xchg
scas
out
cmp
xor
(bad)
hlt
std
shr
or
xor
aam
cmp
cli
(bad)
xor
dec
cmp
add
(bad)
jl
mov
cdq
imul
mov
add
inc
bound
loop
aas
adc
inc
inc
inc
and
jae
mov
ret
dec
ror
or
jne
fnstenv
pop
clc
(bad)
jne
mov
mov
pop
add
sub
dec
popa
outs
je
idiv
gs
inc
push
pop
je
popa
outs
ins
pop
outs
bound
(bad)
das
push
outs
dec
addr16
push
sub
ss
je
sub
push
ins
or
dec
sub
mov
ja
push
push
xchg
sbb
mov
ins
fild
push
push
push
jno
es
outs
arpl
dec
pop
popa
sub
popa
sub
push
out
add
jae
ins
push
outs
push
push
into
push
jae
pop
pop
das
mov
or
inc
sub
sub
push
push
push
sar
aaa
aaa
outs
outs
mov
ds
es
ins
sbb
jno
popa
jb
dec
inc
loopne
out
push
mul
(bad)
into
loopne
dec
jae
push
or
gs
fld
ins
dec
sbb
(bad)
int3
in
(bad)
and
adc
pop
mov
ret
xor
xchg
xor
mov
aaa
outs
aaa
cmps
aaa
or
pop
sbb
sub
push
data16
aaa
xchg
cmps
cs
in
or
das
pop
out
fsubrp
hlt
push
cmp
movs
push
jg
ds
push
cmp
setae
or
frstor
xor
test
or
retf
jle
lods
mov
xor
nop
test
gs
push
jb
sub
or
jb
push
dec
push
mov
jne
addr16
jb
enter
pusha
mov
ins
xor
xor
cs
sar
adc
test
push
ja
add
fbstp
jge
divps
jne
in
push
jmp
rcl
movzx
stos
jno
sbb
sbb
clc
add
jp
out
jg
dec
or
add
mov
sbb
mov
jecxz
mov
add
jns
inc
leave
sub
adc
or
jl
call
jge
(bad)
sub
jmp
in
jmp
fld
inc
je
xor
stos
repz
mov
pop
pop
push
add
add
rol
cmps
push
aad
retf
loopne
push
pusha
cdq
inc
mov
jg
ror
jmp
mov
rol
lea
adc
mov
inc
push
push
add
mov
out
pop
sub
mov
cli
adc
pushf
mov
xlat
mov
sbb
dec
mov
jne
fwait
sbb
movs
or
lea
inc
add
add
mov
xor
push
mov
add
inc
shl
leave
mov
lods
loopne
pushf
sub
mov
pusha
or
xor
sbb
mov
dec
adc
pop
lods
test
jb
mov
add
shr
(bad)
inc
mov
xor
push
jae
sti
dec
jmp
sbb
cli
dec
mov
cmp
ret
je
sti
dec
jl
stos
mov
jae
jmp
or
dec
loopne
add
cmp
or
loopne
push
sbb
dec
mov
pop
ss
inc
fdivrp
cmp
and
sbb
lea
popa
mov
push
or
cdq
add
cs
inc
pop
sub
sub
and
(bad)
imul
(bad)
call
adc
pop
sub
push
daa
aam
mov
es
cmp
jne
and
and
in
inc
sar
loope
rol
fiadd
push
mov
jb
cmp
adc
xchg
or
and
sbb
dec
cmp
loopne
adc
cmps
(bad)
pusha
inc
and
fdiv
pop
mov
hlt
mov
mov
aaa
es
cs
movzx
aad
pop
or
rol
jmp
inc
push
in
or
imul
add
ins
mov
fsubr
push
ins
push
frstor
inc
enter
outs
cmp
or
xchg
mov
mov
and
mov
in
mov
fcomp
mov
mov
shr
pushf
adc
cwde
dec
mov
mov
mov
push
xor
fwait
inc
push
out
test
push
xor
mov
inc
jns
dec
sbb
pop
jne
(bad)
mov
xor
inc
sub
sbb
outs
jb
ret
add
add
je
mov
mov
mov
sbb
mov
and
cmp
sbb
fwait
sbb
lea
or
inc
loopne
mov
sbb
mov
dec
mov
das
arpl
sbb
pop
rol
push
pop
inc
mov
test
jmp
ds
pop
push
and
pushf
xor
push
jb
pop
jne
je
sbb
jb
mov
ret
add
les
or
or
repnz
push
lods
mov
sub
outs
loopne
push
enter
mov
call
dec
push
lea
push
mov
dec
xlat
out
popa
ficomp
jmp
data16
or
fs
shr
outs
and
jg
jae
jmp
mov
mov
sub
sar
jns
adc
inc
aaa
mov
or
(bad)
in
daa
rcr
xor
aaa
inc
cwde
icebp
mov
fistp
in
(bad)
sar
outs
rol
add
inc
mov
imul
rcl
xlat
sub
sar
xor
js
dec
rol
inc
mov
lea
inc
inc
add
sar
adc
es
in
test
and
mov
scas
cmp
dec
push
movs
lea
nop
sar
or
pop
jno
int
fisttp
addr16
arpl
dec
sub
dec
shl
inc
shr
inc
add
idiv
test
add
popa
mov
pop
push
popa
out
scas
dec
pop
out
mov
je
dec
popa
ins
gs
daa
(bad)
mov
mov
fidivr
mov
or
mov
leave
sub
rcr
enter
test
rcr
pop
mov
mov
cmp
and
push
out
mov
push
inc
call
movs
inc
mov
sbb
je
cmp
jg
pop
cmp
or
and
mov
movs
ret
mov
test
mov
nop
inc
cmps
inc
pop
jg
cmp
push
test
xor
sub
or
pop
push
imul
cdq
jo
dec
mov
push
mov
sub
mov
pop
das
or
repnz
sbb
mov
cmp
push
test
xchg
lock
sti
xlat
adc
mov
outs
add
add
popa
(bad)
rcr
bound
mov
sbb
loop
inc
cs
xor
(bad)
and
ja
and
push
daa
data16
mov
imul
adc
mov
dec
fs
shl
fadd
inc
sub
jo
add
mov
xchg
es
je
pop
cmp
pop
inc
adc
jns
xor
shr
je
cmp
dec
push
lahf
je
mov
test
dec
jmp
pop
aad
add
(bad)
cmp
mov
mov
iret
sbb
pop
in
inc
movs
mov
mov
shl
pusha
cdq
jl
aas
sar
clc
dec
xchg
ret
test
je
pop
or
adc
adc
mov
jmp
das
hlt
pop
or
pop
hlt
dec
jmp
(bad)
jg
sub
aam
fwait
xchg
mov
repz
aad
dec
enter
cmp
jg
push
sbb
fstp
(bad)
(bad)
sub
call
mov
sub
jo
mov
jo
mov
mul
sbb
les
adc
jecxz
pusha
jnp
test
sar
xlat
test
and
push
mov
in
add
js
inc
ret
(bad)
cmp
shr
push
xor
hlt
movzx
pop
in
outs
and
hlt
mov
pop
or
dec
push
sbb
rcr
fcomp
add
sbb
in
and
mov
or
mov
mov
mov
mov
mov
dec
xor
jae
jmp
inc
test
lahf
clc
sub
sbb
aaa
cmp
jl
sbb
jne
and
icebp
xor
aam
jmp
dec
into
fcmovne
push
imul
xchg
(bad)
jnp
add
and
shr
or
dec
int
jp
cmp
cmp
push
add
jecxz
sbb
jb
test
sbb
aas
sbb
jb
shr
mov
test
sub
nop
ret
pushf
in
adc
pop
clc
sub
addr16
cmp
xor
repnz
or
in
scas
cmp
in
mov
inc
or
jl
pop
mov
(bad)
pop
mov
sbb
div
add
xchg
fld
ror
mov
xor
push
cs
or
mov
add
(bad)
pushf
push
call
dec
adc
cmp
(bad)
fidivr
pop
dec
mov
mov
fs
add
add
cmp
sbb
cmp
inc
add
lds
pop
je
sti
or
dec
mov
(bad)
and
cmp
cmp
add
adc
add
faddp
sbb
or
ror
es
sbb
ins
pop
outs
fst
sub
or
mov
sub
xor
jno
or
inc
mov
sbb
scas
push
or
mov
fidiv
mov
arpl
inc
pop
leave
xor
dec
loopne
fistp
cmp
int3
pop
push
aaa
jecxz
jmp
mov
cmp
push
hlt
sbb
sub
xchg
and
or
cmps
push
out
push
push
mov
and
sbb
sub
mov
jl
xor
push
and
mov
blcs
push
inc
mov
and
pop
sahf
pusha
sbb
push
outs
push
ds
sub
jae
mov
stos
mov
mov
lods
xchg
push
pop
sbb
xchg
add
mov
add
mov
mov
or
lock
add
ret
imul
sub
mov
fs
mov
fild
sub
cmp
adc
add
test
or
mov
dec
add
mov
add
xor
xchg
or
push
add
rol
dec
lods
push
add
adc
jnp
pop
xor
pop
dec
shl
mov
daa
inc
test
or
push
push
in
adc
or
jle
xor
arpl
inc
mov
and
mov
sbb
mov
xor
jbe
push
pop
jg
mov
pop
cmp
dec
and
jmp
fistp
jbe
daa
jg
pop
test
adc
mov
mov
mov
cmp
fild
sub
add
fisubr
(bad)
in
jb
sub
scas
das
and
rcr
inc
rol
cmp
jbe
inc
jg
int
js
jae
ss
cmp
jb
pop
fild
inc
(bad)
fs
and
clc
out
out
push
das
push
and
or
add
push
movs
loopne
push
mov
movs
add
sub
scas
dec
loopne
sub
cld
and
nop
popf
dec
sub
pop
jbe
lea
xchg
outs
pop
clc
loopne
lea
sub
mov
and
mov
inc
ds
cmp
add
js
mov
test
push
add
retf
and
mov
jmp
lds
shr
hlt
je
and
cs
bound
loopne
push
imul
(bad)
rcl
sbb
fidivr
ror
jns
lea
mov
push
sbb
cmp
mov
xlat
add
mov
push
pop
xor
and
stos
lea
rcl
call
fs
icebp
xchg
js
and
jo
icebp
sbb
pusha
add
inc
xchg
icebp
push
out
dec
pusha
bound
aam
pushf
mov
cmp
aas
mov
pop
sahf
sbb
and
or
retf
inc
mov
add
cmps
push
lock
sbb
pushf
adc
adc
imul
loop
ins
inc
xor
and
sub
shl
jb
add
push
repnz
pop
fbld
inc
add
dec
test
sbb
and
push
add
popa
enter
xchg
in
mov
fstp
dec
test
into
aam
or
leave
int
daa
cmp
les
cld
dec
sbb
mov
push
lea
loope
test
or
dec
mov
ror
xchg
mov
push
je
push
call
xchg
and
inc
cs
call
and
add
(bad)
xor
cld
cmp
mov
push
iret
jno
add
mov
dec
mov
ror
or
fstp
into
add
iret
repz
or
adc
push
push
mov
in
adc
rol
ror
or
mov
shr
or
and
ds
shl
jg
shr
cmp
jne
shl
adc
add
add
cmp
lods
ja
or
or
dec
add
ss
lock
jne
sbb
or
push
mov
inc
or
inc
or
dec
ret
mov
arpl
test
enter
(bad)
(bad)
jnp
dec
fld
movs
add
add
ins
movs
shl
adc
jmp
mov
fldenv
add
xor
or
push
sbb
sbb
push
pop
out
mov
cld
fstp
adc
sar
(bad)
sar
push
outs
lds
mov
mov
ret
or
leave
mov
push
in
push
ret
jo
and
or
mov
fs
xchg
add
xchg
rcr
xchg
push
add
push
or
cmp
push
jl
adc
lock
and
fs
push
mov
pop
xchg
cmp
fadd
jo
sbb
add
test
mov
lahf
sub
test
fwait
pusha
ja
jns
mov
sub
loope
pop
adc
les
pushf
ja
pop
or
jb
push
cmp
sbb
cmps
movs
fldl2e
daa
adc
loop
or
or
shl
cmp
out
inc
scas
lock
cli
jecxz
add
mov
mov
pop
sbb
in
aaa
sbb
mov
dec
jecxz
ror
jl
ret
push
dec
into
add
rol
(bad)
rcl
ja
mov
add
jnp
add
mov
sbb
jge
les
adc
in
jnp
es
dec
ror
rcr
or
jnp
and
sub
ret
jg
xchg
or
outs
mov
mov
nop
test
inc
shl
and
es
out
test
sub
add
adc
xchg
jnp
(bad)
ret
ror
jecxz
leave
mov
xchg
jmp
inc
test
push
shl
sub
stos
mul
xor
dec
mov
xchg
and
push
test
out
mov
leave
adc
mov
pop
imul
es
ss
jno
pusha
mov
jbe
pop
lods
mov
xlat
leave
mov
pop
xor
outs
and
push
pop
cmp
adc
stc
rcr
xor
xchg
ret
pop
popf
leave
shrd
pop
outs
xchg
popa
inc
or
movzx
pop
ret
pop
mov
adc
inc
pop
adc
lock
cli
inc
add
cmps
adc
xor
loope
add
icebp
cs
mov
mov
fwait
loopne
pop
pop
add
add
add
mov
xor
dec
inc
mov
dec
(bad)
fwait
inc
imul
cli
inc
cmp
cmp
dec
mov
pusha
arpl
add
xor
in
mov
pushf
adc
outs
(bad)
cs
cs
pop
add
and
(bad)
fistp
mov
les
(bad)
xchg
sub
pop
(bad)
and
fcomp
imul
mov
sbb
mov
push
sub
dec
lea
xstore-rng
cmps
les
pop
ins
push
push
mov
or
mov
daa
add
jle
push
inc
push
push
dec
jmp
sbb
dec
inc
dec
fild
adc
rcl
shl
or
cmp
push
stos
jnp
rcl
int3
jb
aas
lock
lds
mov
jg
jmp
cmp
test
push
or
fisttp
cli
out
mov
push
mov
(bad)
or
sbb
add
push
js
push
call
cmp
jbe
sbb
xchg
imul
sub
and
loopne
push
xor
push
push
jmp
pop
and
rol
rol
sbb
or
popa
jp
mov
push
imul
ret
pop
fcom
cmp
lahf
aas
or
cli
or
mov
jne
test
jge
not
pop
or
bswap
dec
mov
sbb
dec
jo
sbb
pop
out
ins
add
dec
pop
call
xor
les
dec
jmp
lahf
(bad)
sbb
mov
cmps
daa
and
mov
data16
mov
inc
das
fidiv
(bad)
into
arpl
inc
and
cmp
push
mov
stos
and
mov
(bad)
lock
adc
pop
imul
add
fidivr
add
mov
jo
and
fild
int
jp
cld
retf
ret
add
adc
inc
jp
jae
sub
sar
add
rcr
sbb
add
fld
rcl
jnp
(bad)
fimul
ds
test
xchg
jge
(bad)
jge
mov
inc
jbe
nop
test
sahf
push
fwait
push
cmp
dec
add
adc
or
daa
mov
or
mov
jo
jmp
add
ret
jecxz
scas
pop
xchg
and
arpl
lea
jge
push
or
jecxz
jg
pop
xor
daa
and
jg
xlat
and
jg
sub
mov
aas
xchg
xor
inc
jns
sti
xchg
inc
mov
push
jb
inc
push
adc
push
or
mov
ror
icebp
test
push
or
xchg
jmp
push
lods
cli
push
fs
pop
in
in
pop
push
push
dec
add
in
dec
inc
inc
call
cs
call
add
fld
sub
cli
push
ror
push
mov
lock
pushf
or
add
jge
or
mov
mov
std
aas
jnp
or
test
jne
mov
in
sub
cmp
faddp
lock
je
ret
mov
fcmovnb
push
add
popf
daa
leave
mov
popf
jnp
shl
inc
mov
sti
data16
or
or
sar
xchg
sbb
(bad)
lahf
test
pushf
pop
lea
inc
loopne
add
mov
pop
push
mov
jle
inc
and
push
pop
out
pop
sbb
or
shr
pop
out
sbb
mov
sbb
jge
jo
push
adc
sbb
dec
adc
xchg
(bad)
sub
sbb
dec
out
sar
pop
sbb
test
call
lock
(bad)
das
cld
ror
mov
sar
mov
fmul
outs
in
add
mov
inc
bound
sbb
push
ficom
adc
js
jmp
out
data16
sub
or
cmpxchg
sbb
add
clc
add
loop
shl
add
test
movd
jp
loopne
cs
pop
jo
test
push
mov
and
mov
dec
pop
cwde
adc
repnz
call
jl
mov
jne
arpl
push
add
jne
mov
mov
push
ror
bound
sbb
lock
ds
nop
pop
mov
dec
hlt
push
fstp
(bad)
jmp
and
cld
fidivr
and
fdiv
call
sbb
jle
mov
and
push
lock
dec
lock
ja
fcomp
fsub
push
jnp
xchg
lahf
cmp
test
and
pop
lods
adc
jmp
mov
ret
cmp
lds
or
mov
cmp
push
mov
cmp
movs
shr
call
cmps
into
or
or
push
int
popf
inc
std
or
ja
add
and
ss
cld
or
std
sbb
jge
inc
cmp
inc
jnp
aaa
xor
dec
enter
pusha
or
push
jg
mov
dec
mov
loopne
push
mov
and
outs
pop
or
out
pop
jmp
aad
xchg
fimul
shl
inc
push
add
sti
nop
push
lods
mov
je
xlat
shl
pop
xchg
add
add
push
mov
movs
repnz
(bad)
jmp
sub
cmp
js
adc
mov
inc
mov
add
ret
call
test
inc
xchg
addr16
mov
add
push
in
sbb
or
popa
jb
in
not
jo
jbe
retf
out
push
(bad)
jo
dec
inc
mov
fs
sub
add
and
mov
inc
repnz
add
les
add
lods
nop
sbb
jbe
loopne
or
sub
add
lock
cmp
pop
cmp
jne
push
add
out
cwde
rcr
jne
or
mov
cmp
xor
lea
cmp
push
push
xchg
and
mov
repnz
cs
pop
sbb
nop
shl
pusha
push
jnp
cld
pop
stos
call
shr
ret
inc
cs
sub
dec
jg
mov
dec
mov
or
pop
sub
inc
dec
je
mov
addr16
sbb
sbb
mov
mov
pop
sub
push
jmp
rol
push
add
push
jne
cmps
(bad)
inc
cwde
or
repnz
mov
mov
loop
imul
push
mov
aaa
cmp
or
cmp
jne
add
mov
outs
pop
shl
rol
inc
scas
sub
(bad)
jg
es
mul
adc
push
push
je
imul
jb
popa
jns
(bad)
inc
push
add
or
jns
je
ins
cs
jns
push
jae
add
cwde
outs
add
push
inc
jne
ins
imul
mov
lahf
add
outs
outs
jb
pusha
iretw
fist
inc
arpl
jo
or
es
sti
(bad)
je
arpl
xchg
or
arpl
outs
xchg
adc
jge
or
xor
gs
(bad)
sbb
xchg
clc
push
push
add
mov
gs
add
pushf
adc
push
add
push
sbb
sbb
or
bnd
test
push
lock
add
fdivr
outs
addr16
xchg
pop
cmp
pop
dec
mov
mov
or
outs
jo
inc
jno
popa
and
xor
fdivr
add
xchg
add
adc
sahf
pusha
je
dec
outs
gs
div
mov
fs
dec
fstp
popa
mov
punpcklwd
fiadd
jne
mov
clc
or
add
dec
add
add
bound
movs
or
popa
outs
iret
mul
fwait
movs
inc
mov
add
inc
dec
push
pop
xchg
inc
icebp
dec
jae
gs
lahf
sub
or
in
pop
jle
push
ins
push
ins
sub
push
iret
dec
add
out
mov
sub
xchg
dec
pushf
arpl
mov
xchg
push
xchg
cmp
das
adc
sbb
push
aaa
add
movs
adc
aaa
clc
pusha
aad
out
adc
(bad)
aad
popa
sub
aad
mov
fcomp
aad
add
push
icebp
cmp
mov
inc
aad
sbb
sub
aad
add
and
fimul
and
xchg
jmp
out
push
mov
ins
or
adc
xchg
int
sub
mov
push
xchg
or
es
inc
jg
xchg
and
sbb
and
mov
(bad)
jg
cmp
aas
popa
sar
ret
es
addr16
dec
ins
add
into
popa
cmc
add
in
or
js
js
in
loope
ja
or
jle
add
inc
imul
mov
jg
int3
gs
push
test
out
mov
push
popa
retf
in
aas
sub
and
mov
pop
call
mov
aam
or
je
outs
nop
icebp
ss
(bad)
fcom
int3
pop
cmp
or
dec
data16
xchg
fcmove
ret
inc
xchg
adc
push
push
lea
xor
inc
mov
sub
cmp
sbb
outs
lds
xchg
hlt
push
inc
inc
clc
(bad)
repnz
push
push
or
cwde
lock
sub
jle
mov
hlt
cmp
jae
dec
gs
or
imul
push
ror
push
(bad)
or
inc
outs
je
outs
ins
aas
pop
daa
push
adc
xchg
pop
adc
into
test
and
daa
in
sbb
pop
mov
add
add
in
scas
retf
add
sbb
outs
add
stc
and
jge
popf
add
mov
in
or
add
cmp
and
push
push
dec
or
inc
sub
inc
or
push
jnp
dec
lds
sbb
jnp
adc
adc
das
add
inc
scas
mov
xchg
and
nop
xor
int
dec
outs
jb
in
inc
xchg
sbb
push
scas
or
add
pushf
out
dec
imul
adc
adc
dec
gs
bound
sub
xor
mov
cmp
dec
jne
pop
xor
add
cmp
int
cmp
cli
cmp
pop
xor
or
bswap
je
cmp
fprem1
pop
aaa
cmp
cmps
int
pop
push
arpl
sub
inc
cmp
into
jae
add
inc
mov
inc
or
jae
fistp
loope
stos
add
fdiv
or
dec
int
dec
or
or
mov
adc
rcr
adc
push
add
lock
add
or
mov
dec
mov
adc
ret
xlat
rol
push
jecxz
ror
inc
inc
cmp
sbb
add
inc
mov
movaps
or
adc
loop
push
movs
sbb
data16
ins
sub
and
movs
sbb
ds
push
push
adc
adc
fs
and
cmc
nop
mov
or
xor
test
jnp
cmp
mov
lea
popf
call
adc
lock
add
pop
or
je
dec
idiv
add
or
(bad)
outs
push
outs
out
gs
imul
adc
popa
outs
jmp
imul
aas
push
push
shl
stos
les
xchg
mov
addr16
sbb
inc
jbe
ds
push
inc
mov
adc
nop
jnp
pop
das
je
inc
ins
ins
lahf
out
adc
push
sbb
jae
xchg
mov
push
nop
adc
and
pop
pop
cmp
fsub
cmp
jns
pop
js
cli
pop
or
fs
imul
dec
push
pop
addr16
data16
pop
push
daa
fwait
das
ds
sti
mov
pop
test
pop
movs
cmp
imul
jle
adc
cmps
ss
mov
ins
fs
and
inc
jo
adc
pusha
aam
push
inc
pop
and
push
pop
inc
push
fdiv
xor
in
into
sbb
inc
push
nop
sbb
cli
push
dec
add
xchg
test
xlat
cmp
sbb
fsubr
hlt
add
sbb
cmp
ins
or
pop
inc
inc
je
xor
and
dec
aaa
pop
fbstp
add
sub
mov
inc
xacquire
sbb
push
test
call
push
mov
cmp
dec
adc
or
adc
pop
pop
inc
das
xchg
push
mov
add
jae
pop
sub
pop
test
push
mov
push
push
loope
retf
or
inc
mov
inc
packssdw
pmulhw
jo
cmp
jle
or
loop
mov
add
mov
fst
push
inc
mov
add
inc
inc
dec
add
in
test
(bad)
sub
jae
sub
sbb
mov
sub
dec
or
push
cmp
sub
pop
sbb
xor
push
push
push
jg
sbb
add
cwde
or
pusha
push
jns
in
in
push
pop
stc
js
xchg
(bad)
fadd
sub
inc
aaa
pusha
out
xchg
pop
xchg
add
sbb
lods
inc
jmp
jbe
or
inc
jae
add
jns
arpl
enter
int3
dec
or
add
out
fcomp
push
jmp
call
sbb
inc
or
jne
add
fstp
fwait
mov
fst
cld
fwait
jmp
inc
jbe
inc
out
cmp
dec
or
fldpi
fsubr
ins
xor
pop
add
es
or
fisttp
leave
mov
mov
daa
jae
aas
mov
pop
mov
cmp
enter
cmp
pushf
jg
repnz
ret
daa
or
mov
add
mov
outs
fimul
inc
add
es
jo
dec
sub
push
nop
pop
add
mov
or
and
ret
push
sub
or
movs
movs
mov
mov
data16
pop
(bad)
lock
inc
jg
jle
adc
or
pop
jnp
movzx
mov
mov
add
or
xchg
inc
or
or
add
or
pop
ds
mov
retf
mov
adc
add
pop
aas
and
cld
imul
add
push
dec
mov
fild
dec
faddp
fist
fsubrp
fmul
fild
sbb
sbb
pop
push
call
fisttp
or
pop
pop
fist
sbb
push
mov
push
push
add
ror
or
movs
fist
xor
setae
xor
push
rol
mov
data16
rol
ror
and
mov
inc
shr
loop
scas
fisttp
pop
pop
xor
fwait
push
sub
and
sub
in
loopne
jns
adc
cli
hlt
fnstenv
adc
aaa
shl
jbe
loopne
and
js
adc
lock
adc
xor
repnz
sbb
call
mov
adc
mov
pusha
add
int3
push
shl
aaa
mov
push
inc
xor
into
clc
jp
(bad)
fsubr
and
ret
xchg
push
loopne
and
jmp
jbe
xchg
or
xchg
nop
dec
pop
and
mov
cwde
push
add
or
shl
or
jge
je
and
or
iret
icebp
mov
fsub
outs
lods
cdq
sub
call
test
push
add
pop
dec
pop
sbb
mov
sub
ret
sub
mov
mov
xor
or
or
cdq
dec
pusha
cmp
push
push
inc
or
mov
and
or
(bad)
movs
xor
xchg
jmp
data16
(bad)
in
test
cwde
(bad)
cmp
xor
add
and
imul
adc
adc
in
add
jecxz
xor
pop
push
cmp
jl
cmp
jge
sub
add
inc
push
inc
pop
sub
rol
push
jle
inc
jmp
or
pop
xchg
add
ins
add
pop
or
lods
jl
mov
sbb
mov
mov
cmp
mov
add
pop
shr
int3
test
or
cdq
fadd
xor
mov
sub
jg
loopne
lea
test
jle
or
or
cli
jg
cmp
sbb
jle
aad
mov
nop
inc
xor
shl
mov
mov
or
ror
or
sbb
or
or
dec
jne
lds
test
sbb
pop
rcl
mov
bound
and
lds
push
mov
adc
lahf
xchg
mov
adc
pop
pop
inc
mov
(bad)
inc
or
out
adc
enter
add
(bad)
ret
and
div
neg
xor
in
cmp
inc
dec
pop
or
jo
xor
pop
and
pusha
xchg
xor
add
mov
and
mov
loopne
pop
pop
jge
xor
jmp
dec
push
scas
fbstp
and
sub
sbb
cmps
push
add
sub
xchg
cmp
sub
or
sub
and
add
cmps
jmp
or
xor
mov
push
pop
jmp
std
nop
adc
inc
imul
fmul
mov
jmp
aaa
mov
ror
in
push
clc
cmp
add
jmp
cmp
mov
jmp
xor
sbb
div
test
xor
idiv
push
out
mov
cli
call
clc
adc
imul
sub
std
push
aad
ja
or
mov
sar
sbb
fmul
inc
add
add
push
cmp
call
xor
std
mov
shr
xlat
mov
aaa
xor
pop
sub
lea
stc
push
ror
int
and
pop
xchg
mov
sub
mov
ror
fwait
dec
inc
or
mov
mov
(bad)
pop
push
mov
and
data16
das
cld
or
call
pop
pop
cmp
enter
xor
or
add
add
inc
fsub
and
nop
push
pusha
das
mov
(bad)
jmp
pop
jo
jbe
ins
hlt
js
retf
inc
jne
push
push
mov
js
push
retf
shr
mov
cs
cmp
call
add
rcl
sub
rol
dec
add
sbb
pushf
pop
inc
bound
and
shl
sub
add
lods
add
mov
or
lock
jle
int
aas
xor
sbb
test
inc
cmp
dec
sub
inc
test
out
sbb
lahf
inc
push
dec
dec
daa
lods
inc
and
out
inc
mov
daa
add
pop
pop
sub
adc
sub
movzx
mov
adc
add
push
add
in
push
add
add
setb
(bad)
push
scas
sbb
pop
xor
inc
pop
add
rol
inc
sbb
push
outs
ret
nop
pushf
mov
inc
mov
aas
add
jl
sbb
test
(bad)
or
xor
mov
scas
sbb
mov
inc
mov
fistp
mov
neg
or
fild
sbb
dec
lods
xchg
mov
xlat
push
sbb
ss
jne
xor
retf
loope
push
je
xor
adc
imul
aaa
jo
loope
pop
nop
pop
or
gs
ret
xlat
or
mov
(bad)
call
jbe
std
cmp
or
sbb
jg
fcomp
(bad)
adc
mov
scas
les
mov
and
ret
outs
jl
clc
adc
jle
jbe
in
nop
cmp
mov
dec
sti
pusha
xor
lea
cmp
jge
dec
jge
mov
inc
jnp
sub
push
xor
inc
cli
cmp
jne
in
(bad)
xor
adc
or
test
popa
push
add
lock
int
inc
mov
loopne
add
ss
call
jl
mov
jmp
mov
mov
add
retf
sar
mov
(bad)
sub
jmp
and
pop
fucomp
out
push
xchg
js
inc
push
jl
or
jns
mov
neg
and
inc
out
mov
jl
movs
test
fsub
inc
pop
push
cdq
cdq
es
sbb
in
adc
xor
push
or
sbb
xor
mov
xchg
cs
pop
pop
and
push
loopne
(bad)
cld
xor
jge
dec
fs
dec
pop
int
add
mov
aas
call
jmp
lea
pop
jp
dec
adc
rcl
ret
jmp
call
jne
ins
xor
dec
fadd
nop
or
sub
sti
mov
push
or
cdq
push
cli
mov
ja
push
movs
sti
out
or
je
sbb
push
ins
mov
jl
add
icebp
repz
je
sar
cli
sti
sub
sar
cmp
jb
movs
xor
adc
loopne
jne
inc
mov
jo
cdq
icebp
bnd
ins
aas
fadd
inc
jnp
repnz
lock
je
mov
inc
or
pop
and
les
or
fbld
adc
jbe
jle
xor
imul
and
add
(bad)
jmp
jmp
mov
loope
repnz
int3
jecxz
push
push
push
je
jmp
cdq
xchg
push
icebp
movzx
pop
push
test
mov
pop
ret
inc
or
sbb
es
loope
jl
mov
imul
or
pop
sub
mov
push
hlt
inc
ret
(bad)
and
(bad)
(bad)
push
and
push
ss
out
mov
add
leave
sahf
sbb
adc
les
pop
clc
call
lock
test
jmp
jmp
dec
clc
out
sbb
scas
mov
jbe
mov
mov
test
sub
adc
ficom
push
loopne
js
cs
jmp
sub
cmp
ret
es
inc
pop
cmp
dec
jbe
adc
inc
mov
inc
push
addr16
add
call
xchg
mov
js
cmp
nop
ja
inc
outs
js
or
sub
mov
ret
int3
mov
outs
pop
sbb
pop
mov
call
aad
inc
sti
in
arpl
sub
loopne
lock
inc
test
adc
inc
xor
jp
pop
or
add
mov
or
sbb
lds
mov
cmp
sbb
cmp
jl
sub
push
out
aas
test
xchg
sub
test
lea
cwde
dec
jl
mov
dec
dec
test
sub
adc
push
nop
fs
cld
or
add
push
pop
out
jmp
pop
cli
mov
jbe
pop
and
div
xor
add
add
mov
inc
outs
jb
gs
arpl
lods
fbstp
or
imul
outs
dec
sbb
outs
imul
adc
gs
jo
ja
shr
and
neg
push
or
jae
test
dec
js
mov
mov
or
xor
ja
or
pusha
aaa
aaa
int3
adc
fs
jmp
fistp
pop
cmps
or
push
(bad)
or
or
test
push
loopne
inc
push
dec
add
test
pusha
outs
movs
push
inc
jl
add
sbb
inc
movs
je
not
out
or
push
in
arpl
push
add
out
jl
or
inc
gs
test
adc
shr
push
jp
popa
bound
adc
imul
int3
xchg
xlat
push
inc
fwait
outs
ss
fiadd
push
enter
adc
data16
out
(bad)
jb
outs
data16
int
jnp
push
fs
add
jne
out
cld
iret
adc
dec
add
and
and
xor
and
mov
data16
ins
or
push
arpl
jae
shl
outs
xchg
push
pusha
mov
xor
imul
je
xor
jo
(bad)
jge
scas
add
mov
or
and
sub
add
fsub
add
shl
inc
dec
popa
das
jl
lock
packuswb
xchg
inc
retf
(bad)
or
jg
or
and
arpl
mov
or
arpl
or
imul
or
sbb
pop
lahf
dec
outs
jne
pusha
sub
mov
lahf
aad
inc
jno
bound
or
imul
xor
xchg
fs
movs
inc
aam
push
push
das
jbe
push
sar
add
mov
mov
adc
fisub
or
jle
adc
mov
sub
and
pop
jne
scas
push
jmp
sub
retf
aaa
rcl
push
sbb
rcr
inc
call
pop
cmp
add
addr16
pop
or
je
or
mov
inc
mov
outs
adc
arpl
push
into
loope
inc
call
jbe
xor
mov
popa
jbe
pop
or
cdq
call
stc
sbb
das
in
cs
fs
in
dec
or
sub
jbe
pop
sub
jnp
sub
xor
popa
imul
pop
pop
and
or
fidivr
imul
stos
into
ds
cwde
mov
xchg
iret
push
arpl
ins
ins
fbstp
xchg
nop
xor
jae
add
adc
or
outs
es
jo
adc
or
out
adc
inc
jmp
pop
adc
mov
add
daa
ss
daa
or
jl
xor
inc
nop
int
sbb
push
sbb
xchg
push
sbb
or
dec
cmp
xchg
dec
mov
inc
adc
inc
inc
test
sub
cld
push
rcl
xor
jbe
adc
xlat
cmp
sbb
adc
pushf
push
popa
adc
lahf
rcl
fisttp
push
fs
pop
imul
or
mov
jae
adc
stos
cmp
hlt
pop
mov
push
ds
mov
mov
inc
add
data16
mov
and
icebp
pop
das
push
fadd
fs
jo
xchg
adc
aas
xchg
popa
cmp
mov
xor
call
mov
jno
ss
push
pop
add
stos
movs
dec
add
mov
push
or
dec
movs
fsub
inc
push
mov
loopne
in
and
mov
cmp
push
leave
mov
add
js
push
push
push
dec
dec
dec
inc
idiv
scas
jge
add
push
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
pop
mov
or
adc
pop
hlt
faddp
fcmovnu
call
out
daa
adc
dec
jbe
push
test
sbb
daa
mov
out
mov
jl
jns
push
das
adc
or
push
pop
inc
in
push
pop
push
cld
outs
pusha
xor
pop
add
lahf
mov
and
in
inc
and
mov
(bad)
mov
dec
inc
push
not
pop
dec
imul
lock
leave
lock
sbb
sbb
out
jne
adc
or
sbb
pop
inc
push
push
jg
mov
push
inc
inc
inc
pop
inc
inc
inc
push
inc
and
ret
jnp
adc
pop
push
int3
sbb
addr16
pop
xor
and
or
arpl
inc
clc
add
inc
jne
or
sbb
add
pushw
test
jbe
jle
ror
ss
mov
ja
cmp
outs
jle
test
fisttp
out
mov
fidiv
sbb
add
pusha
push
fcomip
mov
mov
jecxz
(bad)
ret
or
jbe
outs
ror
lock
imul
dec
mov
jo
or
sub
xor
and
addr16
push
mov
das
xchg
or
or
dec
inc
xor
std
and
fwait
or
pop
sar
cmp
add
push
dec
inc
imul
les
add
dec
xor
das
push
dec
inc
or
push
test
dec
xor
das
pop
dec
inc
hlt
dec
inc
add
out
mov
xor
pop
inc
push
push
push
dec
out
call
sahf
sub
daa
fs
imul
fs
out
das
xor
xor
cmps
xor
push
push
scas
push
das
and
push
xor
xor
shl
push
data16
mov
loopne
stos
cmp
int3
dec
dec
js
outs
and
loopne
push
mov
sub
inc
je
xchg
icebp
rcr
push
dec
jae
xor
push
adc
or
push
pop
inc
or
les
mov
adc
imul
push
out
cmp
ret
je
inc
cwde
add
adc
mov
inc
jae
imul
mov
daa
bound
xchg
cmp
mov
js
or
dec
out
(bad)
or
rcr
or
scas
ja
jle
push
imul
int
mov
in
jmp
dec
stos
(bad)
rol
dec
add
mov
dec
push
ja
jo
(bad)
push
movs
and
push
gs
lods
sub
jne
push
cmp
or
pop
sbb
les
mov
and
mov
inc
add
das
or
ja
sub
pop
imul
add
push
ds
pop
sub
lods
inc
add
dec
lea
out
add
inc
cmp
cmps
ret
or
sahf
mov
or
lock
enter
fisub
cmp
push
das
pop
push
outs
pop
das
enter
ins
mov
(bad)
cwde
das
(bad)
pop
xchg
or
mov
ret
scas
test
add
push
bound
test
mov
pop
movs
or
gs
daa
cdq
dec
inc
jns
out
sub
xchg
mov
push
push
ins
stos
xor
xor
pop
scas
inc
and
mov
jo
popa
or
loopne
stos
inc
push
push
inc
inc
sbb
adc
pop
jb
bound
jne
and
add
and
adc
sbb
je
mov
leave
sub
and
je
add
imul
mov
dec
inc
hlt
inc
push
sub
add
push
aaa
call
push
dec
push
push
pop
imul
pop
es
movs
mov
in
add
sar
sbb
pop
push
sub
and
jo
jae
mov
mov
mov
xor
inc
lods
cvttps2pi
lods
xor
bound
inc
xor
jb
cdq
jb
or
xor
push
mov
and
and
shl
cmp
sbb
sub
cs
push
fst
sbb
push
inc
add
xor
or
or
push
fidivr
je
js
pop
fsubr
popa
loop
mov
sub
push
cmp
jmp
sahf
jb
dec
std
sbb
add
xchg
add
aaa
lods
loop
add
or
js
mov
mov
inc
gs
arpl
push
mov
xor
mov
or
push
das
ins
fsubr
gs
cs
add
adc
add
add
push
dec
scas
cmp
ins
ins
push
shl
xor
jne
xchg
inc
punpcklbw
cld
jb
lods
sti
mov
mov
inc
mov
inc
js
dec
dec
xor
push
lods
nop
je
imul
pop
test
xchg
dec
mov
cmp
mov
sub
inc
outs
mov
xor
das
push
pop
ds
arpl
int
xchg
mov
daa
jno
or
push
loopne
sub
xor
pop
push
mov
sub
ins
pop
mov
and
cs
dec
daa
pusha
addr16
jmp
push
jne
bound
or
dec
jo
or
mov
add
inc
pop
aaa
adc
sub
pusha
add
dec
outs
jmp
shr
in
sbb
sbb
cmps
push
inc
sub
dec
pop
sub
das
mov
inc
dec
mov
shr
popa
jns
xor
adc
push
outs
arpl
cmp
push
sub
retf
es
les
popa
cdq
add
or
add
adc
test
arpl
jo
dec
cmp
in
js
arpl
aam
xor
and
sub
fdiv
jmp
in
xor
inc
dec
inc
(bad)
js
mov
fldenv
add
inc
ins
fs
add
movs
sbb
imul
movs
mov
adc
in
ds
adc
shr
sbb
mov
data16
add
pop
punpcklbw
push
dec
push
inc
cs
mov
mov
add
out
test
and
mov
test
aad
mov
loopne
aaa
ret
mov
push
ins
and
cmp
adc
adc
add
mov
js
daa
jle
add
cmp
sub
or
enter
cmp
or
push
adc
push
mov
jp
enter
inc
jb
imul
push
hlt
adc
adc
sbb
jbe
adc
je
fist
mov
cmps
fisttp
or
or
jg
pop
add
xor
xor
(bad)
outs
ins
bound
add
inc
outs
js
push
cwde
jge
add
imul
movs
int3
or
xor
das
add
add
mov
push
dec
inc
pop
shr
mov
inc
inc
push
push
push
push
in
call
sub
les
in
jo
pop
mov
ja
out
and
in
jp
xor
inc
xor
mov
jmp
pushf
pushf
pushf
xor
adc
add
inc
sahf
pushf
add
ret
dec
dec
dec
dec
lock
call
dec
loopne
shl
shl
fdivr
jg
mov
xchg
ret
push
push
push
push
jecxz
fsubr
ja
sbb
fmul
aam
pushf
pushf
pushf
ror
enter
pushf
pushf
sar
mov
test
mov
sbb
cwde
aas
xchg
seto
test
in
je
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
shr
and
hlt
lock
ror
es
mov
mov
adc
mov
push
jg
cld
ret
shr
jne
xchg
add
lods
mov
jmp
(bad)
loopne
shl
sar
push
ret
aam
xchg
or
inc
loopne
mov
pop
cmp
pop
jl
jle
stc
ret
pop
pop
pop
pop
ret
in
lods
xor
pop
pop
call
std
push
cmp
sub
jbe
in
sbb
jg
paddsb
in
(bad)
aam
mov
sub
mov
add
mov
in
bound
(bad)
sar
mov
in
in
test
mov
in
xchg
nop
mov
in
in
test
in
je
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
shl
xor
hlt
lock
jb
jb
call
sbb
jb
push
cs
aas
push
sbb
pushf
pushf
fsubr
enter
mov
mov
pushf
pushf
pushf
test
mov
pushf
cwde
xchg
nop
mov
cmp
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
cld
mov
clc
hlt
lock
or
sbb
in
dec
call
xchg
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
pop
push
push
test
inc
push
inc
cmps
cmp
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
mov
xchg
xchg
lock
call
xchg
loopne
fcomp
aam
in
in
ror
enter
in
sar
mov
test
dec
dec
dec
dec
mov
dec
dec
dec
nop
mov
dec
cmp
dec
dec
dec
jo
push
dec
pusha
pop
pop
push
dec
dec
dec
dec
push
dec
dec
inc
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
mov
daa
daa
lock
call
daa
loopne
fcom
jle
es
ror
int3
pop
push
push
fucomi
imul
enter
cmp
mov
cmp
xchg
xchg
movs
pushf
mov
xchg
xchg
nop
mov
test
xchg
xchg
je
ins
push
fs
pop
pop
mov
xchg
xchg
push
push
dec
dec
pop
in
in
inc
cmovo
in
in
xor
sub
in
in
and
sbb
pop
in
or
jbe
fild
push
adc
adc
or
sahf
pushf
fsubr
or
add
cld
mov
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
dec
dec
dec
dec
enter
dec
dec
dec
dec
mov
inc
dec
dec
test
mov
pushf
cwde
xchg
nop
js
cmp
mov
sbb
(bad)
add
retf
sbb
dec
sub
or
adc
sahf
push
adc
mov
jg
fcom
sub
or
pop
sbb
(bad)
add
push
mov
mov
mov
lock
hlt
push
mov
push
jns
out
push
or
adc
sbb
jle
out
and
cld
push
push
mov
mov
mov
jae
mov
pop
pop
and
outs
jg
adc
mov
js
inc
add
or
jmp
das
mov
xor
add
sbb
mov
push
add
(bad)
add
mov
sub
push
jge
cmp
or
jmp
inc
out
cmp
cmp
pop
or
movs
or
(bad)
inc
(bad)
mov
add
add
ins
add
outs
add
add
and
push
rcr
ja
pop
inc
add
inc
outs
add
jae
pusha
pusha
outs
add
cmp
add
inc
aas
cmp
push
dec
xor
inc
push
push
xor
dec
or
xor
or
mov
sbb
dec
jl
push
pusha
data16
push
mov
push
retf
leave
in
js
je
bswap
loope
xchg
adc
sbb
or
cdq
or
das
mov
das
or
sbb
add
xor
sbb
test
rol
shl
and
mov
adc
les
mov
cmp
ret
xchg
push
mov
in
and
pop
out
scas
ins
jg
sbb
je
push
jne
outs
js
jmp
jb
jp
mov
outs
push
sbb
fsubp
lock
icebp
repnz
dec
dec
dec
hlt
cmc
div
xor
stos
psubb
cli
jb
adc
paddb
int3
add
pusha
clc
(bad)
pavgb
loop
pmulhuw
in
in
out
in
in
call
in
in
in
out
push
daa
daa
daa
xor
rcl
rcl
daa
daa
daa
daa
aam
(bad)
xlat
daa
daa
daa
daa
fcomp
fcmovu
daa
daa
daa
daa
(bad)
(bad)
cmp
rol
cmp
cmp
(bad)
(bad)
cmp
cmp
enter
cdq
or
pop
bswap
int
cmp
cmp
iret
mov
cmp
cmp
mov
mov
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
cwde
leave
leave
leave
leave
cdq
call
popf
sahf
lahf
or
leave
leave
add
xchg
mov
leave
leave
lea
leave
leave
jno
jae
leave
leave
leave
leave
jne
ja
leave
leave
leave
leave
jns
jnp
leave
leave
leave
leave
jge
jg
leave
leave
leave
leave
popa
bound
leave
leave
leave
leave
gs
leave
leave
imul
leave
ins
outs
outs
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
push
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
xor
leave
leave
leave
xor
xor
leave
leave
leave
xor
leave
leave
leave
cmp
cmp
leave
leave
leave
cmp
leave
leave
leave
and
and
leave
leave
leave
and
leave
leave
leave
sub
sub
leave
leave
leave
sub
leave
leave
leave
adc
adc
leave
leave
leave
adc
leave
leave
leave
sbb
sbb
leave
leave
leave
sbb
sbb
iret
add
ret
dec
sbb
push
mov
sbb
(bad)
dec
fiadd
add
add
push
pop
or
or
or
push
movups
adc
adc
adc
(bad)
call
sbb
sbb
and
and
es
sub
sub
sub
adc
add
adc
out
xor
or
xor
cmp
add
cmp
cmp
inc
inc
mov
outs
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
mov
xchg
push
push
sbb
aad
sub
adc
xchg
not
pop
pop
and
pop
pop
pop
sbb
pop
add
adc
stos
movs
mov
test
add
test
popa
bound
add
aad
mov
pop
fisub
add
dec
loopne
dec
adc
add
xor
nop
add
std
div
add
add
add
xor
in
sti
adc
and
mov
inc
add
pop
add
mov
jg
jo
add
add
rol
loopne
lock
in
add
add
add
add
into
add
mov
not
add
jo
(bad)
jmp
add
outs
mov
rol
loopne
lock
add
add
add
inc
in
call
xor
inc
add
pusha
add
add
add
add
mov
bound
add
pop
add
or
fdivr
add
add
add
add
add
arpl
pusha
out
mov
add
add
add
add
add
add
sub
add
add
pop
(bad)
outs
(bad)
xor
retf
jo
add
add
mov
push
pop
add
add
adc
and
xor
inc
push
push
push
pusha
idiv
retf
pop
jo
add
push
mov
rcr
lahf
lahf
mov
sbb
mov
xor
inc
push
pop
rol
pop
push
add
pop
mov
neg
mov
mov
lock
or
cmp
out
dec
and
xor
inc
or
push
or
jo
or
mov
mov
or
or
or
aas
jnp
or
cld
inc
or
or
or
or
push
or
and
xor
or
nop
or
int3
or
or
add
xadd
ror
mov
adc
lock
add
adc
sbb
cld
mov
push
and
or
push
or
mov
cs
add
push
mov
or
iret
pop
fist
or
or
and
push
or
xchg
xchg
xor
inc
adc
push
or
jo
mov
push
sub
sahf
or
add
pop
ror
or
fwait
cmps
or
or
or
or
or
inc
or
or
icebp
mov
or
cmp
or
ss
jmp
mov
es
loopne
cmps
xlat
ficomp
add
cmp
adc
and
add
or
push
pusha
or
(bad)
or
ror
or
and
xor
inc
push
push
push
jecxz
mov
push
or
nop
push
mov
push
ror
loopne
lock
add
fcos
cs
lods
push
lar
wrmsr
cmovo
out
push
punpcklbw
jo
or
mov
cmp
nop
dec
mov
sbb
mov
push
xchg
xchg
ret
pop
adc
mov
jae
inc
cmovge
shl
mov
push
inc
fdivr
adc
adc
mov
adc
ficom
add
loopne
lock
add
push
adc
sub
and
outs
ja
sbb
repz
stos
mov
pop
aaa
push
adc
xor
push
fnstcw
add
add
(bad)
xor
rcl
lahf
(bad)
dec
aas
mov
sar
add
call
(bad)
adc
adc
adc
adc
add
inc
push
fisttp
scas
cmp
std
fs
test
mov
xor
adc
pop
aaa
xor
popa
outs
add
sub
xchg
jmp
sbb
jp
pusha
xchg
mov
shr
rcr
adc
adc
adc
adc
fiadd
inc
adc
adc
add
pop
div
adc
push
inc
add
(bad)
ror
cli
fnstsw
adc
(bad)
xchg
loopne
add
jbe
and
adc
adc
or
pusha
adc
add
add
fsubr
lods
sbb
nop
mov
xchg
dec
mov
add
xchg
sub
and
imul
push
or
rol
lock
adc
jbe
aaa
mov
cmp
pop
pop
fimul
inc
jnp
adc
inc
xor
adc
jo
or
adc
push
std
ja
(bad)
adc
retf
lock
mov
scas
jnp
xchg
in
stos
push
fwait
lock
push
daa
jmp
and
cmps
or
push
addr16
popa
popa
lahf
add
mov
popa
pop
sbb
pop
mov
cmc
push
fsubr
sbb
push
mov
add
outs
dec
mov
add
push
lock
pop
add
ss
js
inc
add
pop
jp
adc
pop
es
mov
aas
daa
inc
pop
pop
ins
rcr
push
pusha
aas
add
pop
or
nop
push
ret
or
or
xlat
pop
jecxz
add
push
add
add
and
fimul
sub
outs
add
adc
dec
add
or
adc
pop
mov
sbb
mov
rcl
shl
add
aas
arpl
loopne
(bad)
lds
cli
lock
test
adc
and
ds
sub
xor
inc
sbb
and
xor
jo
movs
cmp
sbb
es
push
addr16
outs
bound
sbb
sbb
sbb
sbb
out
xor
sbb
int3
sbb
sbb
pop
adc
cld
ss
inc
push
neg
xor
add
mov
inc
jmp
in
mov
sbb
sbb
push
add
adc
cmp
sbb
sub
jg
jnp
or
nop
iret
pop
out
push
call
mov
out
loopne
add
inc
(bad)
sar
mov
rol
arpl
xor
sbb
add
imul
push
adc
or
fadd
inc
lods
or
add
adc
std
pop
mov
push
sbb
fdivr
sbb
add
(bad)
jle
or
(bad)
pcmpgtd
adc
adc
mov
ss
ja
adc
add
push
xchg
adc
or
test
cdq
movs
sbb
scas
sti
movs
movs
pop
dec
adc
or
jnp
mov
push
add
lods
outs
shl
mov
jae
fst
add
inc
add
sbb
shl
and
push
cmp
or
imul
out
push
add
push
ficom
adc
scas
add
cmp
movs
lea
sub
dec
add
loopne
mov
pop
xchg
inc
cmp
aaa
sbb
or
inc
in
pusha
retf
ret
or
lds
cmp
add
out
add
sbb
adc
add
or
or
pop
add
in
dec
mov
add
dec
adc
mov
sub
and
jge
xor
mov
shl
add
and
mov
sub
add
paddsb
in
cdq
ret
ss
cld
retf
add
or
add
fs
fstp
cmp
fadd
xchg
pop
xor
ins
add
sbb
add
add
xchg
popf
jnp
test
pop
or
(bad)
dec
pop
or
add
ficomp
das
mov
xor
retf
shl
xor
movs
sub
mov
call
pop
sbb
mov
pop
sbb
dec
add
out
call
cmp
add
pop
push
jb
gs
fstp
ss
or
cmp
adc
das
int
jns
daa
add
gs
add
mov
xchg
add
bound
dec
add
out
ins
adc
dec
call
ret
dec
das
sbb
jg
or
adc
add
lsl
mov
aaa
pop
div
outs
fild
mov
pop
sbb
mov
test
lock
outs
mov
movs
dec
retf
out
add
fild
addr16
push
lea
fstp
ins
xor
xor
add
jg
cmps
or
cmp
dec
mov
loope
mov
pop
add
(bad)
cs
adc
out
ret
mov
sub
add
aaa
sbb
(bad)
int
mov
neg
and
icebp
pop
inc
xor
mov
add
(bad)
mov
jbe
jae
cs
mov
add
xor
push
dec
popa
jbe
add
add
adc
add
and
std
mov
cmp
xor
push
add
int
xchg
nop
push
cmp
jns
dec
dec
jns
(bad)
pop
or
add
in
(bad)
cmp
dec
or
fld
outs
pop
mov
adc
and
add
ret
mov
add
and
add
cdq
add
pop
fcmovb
sbb
sbb
fst
ror
jle
je
add
add
pop
sbb
inc
scas
pop
sbb
loop
in
add
jno
mov
int
xchg
add
outs
lock
add
add
sahf
mov
sbb
stos
lds
pop
mov
xchg
sbb
add
jo
loopne
and
pop
aaa
and
in
fcomip
enter
add
mov
jg
cdq
add
mov
pop
pop
sbb
movs
in
in
aaa
ret
jo
push
popa
sbb
push
add
cmps
(bad)
sti
lods
mov
fwait
xchg
or
aas
(bad)
fcomp
and
and
cmp
add
sbb
cmp
add
sbb
fstp
movs
mov
pop
add
dec
or
add
add
sub
les
lea
adc
push
and
add
lods
fist
add
add
jno
outs
fwait
or
sbb
jnp
sbb
mov
fidivr
popf
fistp
add
or
jbe
sbb
add
adc
push
adc
iret
add
sbb
mov
ins
mov
adc
or
clc
add
jbe
not
adc
packssdw
sbb
data16
push
pop
fcomi
jo
pop
add
xchg
add
nop
cli
add
imul
or
and
or
add
ror
add
sahf
and
add
loopne
sub
dec
test
js
fmul
dec
sbb
and
bound
mov
add
or
sub
or
xchg
call
add
sub
and
ins
xor
add
(bad)
pop
add
pop
fs
shl
pop
mov
add
mov
mov
xchg
add
mov
add
(bad)
fisubr
ret
adc
xchg
bound
pusha
test
cmp
push
dec
pop
and
arpl
sbb
push
add
fld
lods
add
fld
jmp
sbb
add
sbb
mov
add
pop
aaa
adc
popa
jnp
add
daa
and
jg
lods
(bad)
jbe
and
xor
or
mov
add
push
sub
or
add
cmc
jb
add
jmp
pop
adc
or
pusha
addr16
xor
adc
mov
sub
pop
xor
in
rcr
add
push
(bad)
lock
jbe
out
add
rol
inc
sbb
pop
sub
add
ret
pop
cmp
nop
test
add
daa
xchg
lea
dec
addr16
inc
mov
push
xchg
ret
mov
pop
pop
jecxz
push
mov
pushf
leave
or
sbb
mov
rcr
call
add
add
inc
pusha
nop
and
sbb
mov
ret
call
mov
mov
mov
(bad)
fbld
mov
sar
mov
add
int3
popf
pop
adc
fwait
arpl
loopne
push
jge
sub
add
or
into
inc
pop
add
nop
mov
aad
add
call
and
dec
inc
jne
sbb
xchg
mov
rol
mov
xchg
cmps
stos
or
adc
jns
aas
cmp
je
xchg
xor
dec
jns
adc
and
add
jmp
pop
mov
add
add
dec
dec
hlt
adc
add
pop
sbb
cmp
cmps
or
test
and
lea
mov
imul
inc
pop
add
push
ins
add
es
pop
rcl
pusha
add
mov
loope
add
push
jae
arpl
push
sbb
ins
mov
mov
mov
adc
inc
loope
sub
sub
xchg
in
sub
adc
xor
add
stos
mov
sub
cmp
popf
das
xor
add
jnp
add
xor
add
xchg
pop
and
lea
add
sti
std
inc
dec
dec
(bad)
xchg
daa
add
(bad)
fadd
add
mov
pop
cwde
mov
stc
gs
imul
inc
das
rol
jnp
inc
adc
add
mov
fisubr
push
add
dec
(bad)
shl
add
cmp
(bad)
test
scas
add
mov
fisub
pop
mov
xor
push
dec
dec
adc
add
add
enter
cdq
mov
push
add
jecxz
scas
add
add
add
or
out
add
imul
adc
xor
add
add
dec
mov
mov
sbb
or
lahf
sbb
sbb
add
imul
add
add
and
and
es
or
xor
add
add
adc
outs
sub
sub
add
add
add
sub
pop
add
adc
mov
and
mov
shl
adc
xchg
fisub
pop
mov
sbb
push
push
sbb
pusha
sbb
in
imul
rol
add
stos
xchg
div
add
pop
sub
sbb
rcl
rcl
pop
mov
add
xchg
lods
movs
mov
rcl
pop
pusha
add
inc
outs
push
ins
pusha
sub
loopne
lock
adc
in
arpl
mov
pusha
pop
ins
lds
xchg
push
add
jle
nop
add
shr
mov
loopne
pop
lock
or
add
adc
xchg
movs
lea
add
add
fisubr
pop
add
call
pop
xchg
stos
add
add
push
add
jo
add
fcmovbe
ficom
mov
and
inc
adc
add
rcr
pop
mov
loopne
add
ja
(bad)
add
inc
adc
cdq
(bad)
aas
xor
inc
add
pusha
add
add
cmp
xor
pop
aad
sar
add
add
mov
adc
lock
adc
or
adc
(bad)
in
sbb
and
ud0
ins
ror
mov
psubsb
add
mov
ror
pop
fsub
enter
push
xor
test
pop
(bad)
outs
pop
js
(bad)
(bad)
cmpxchg
inc
pop
add
inc
mov
jg
outs
aad
mov
dec
adc
or
add
and
inc
call
(bad)
pushf
pushf
fsubr
or
adc
sbb
test
pop
sbb
pop
movq
xor
ds
dec
dec
adc
cmp
mov
sbb
fcomp
pop
andnps
loopne
pop
xor
xor
or
ret
jg
mov
inc
(bad)
addps
popa
add
ud0
prefetcht2
sbb
ret
sar
aas
lds
aas
call
imul
push
aad
pop
idiv
std
push
dec
or
in
leave
psubusw
xor
jecxz
mov
(bad)
(bad)
jmp
and
lds
mov
stos
jmp
fmul
in
aas
test
sub
out
dec
xchg
(bad)
outs
movaps
ins
aaa
and
imul
pop
sbb
xchg
in
pop
push
add
fild
mov
sub
mov
xchg
xchg
sub
pop
adc
sub
mov
aas
jg
sub
mov
jl
(bad)
mov
inc
push
(bad)
scas
xchg
push
lahf
iret
inc
sub
jne
das
jl
das
(bad)
mov
push
outs
scas
cvtdq2ps
bound
dec
push
ucomiss
xor
mov
cmp
cmp
cmp
cmp
(bad)
aas
cmovo
add
ud0
daa
mov
ins
sldt
ud0
mov
jno
cmovne
sldt
ins
jnp
pop
sldt
str
push
das
cvtps2pd
(bad)
push
test
sub
je
popf
mov
ins
adc
movq
add
and
pop
jns
out
shr
or
test
mov
and
das
lahf
pshufw
mov
addps
xor
xchg
ror
ror
dec
fiadd
mov
pop
jecxz
jle
and
(bad)
pop
pop
icebp
aas
repz
cmc
inc
sub
push
inc
cmp
(bad)
adc
call
sub
dec
sub
ror
fld
pop
adc
(bad)
push
test
dec
pop
or
das
dec
cmovno
push
test
(bad)
and
sub
das
push
fadd
ins
push
scas
sub
add
sub
adc
pandn
sbb
mov
jecxz
(bad)
aas
cmovb
push
or
aad
outs
ud2
add
and
mov
inc
movq
add
mov
jg
movs
push
stos
lahf
lahf
sqrtps
mov
ins
mov
movq
iret
rol
dec
lahf
syscall
rol
sub
sbb
push
nop
and
adc
jg
xor
inc
outs
(bad)
and
shr
pop
sub
iret
(bad)
aas
test
push
dec
fild
inc
mov
les
movups
inc
mov
adc
or
fbld
and
outs
adc
and
ins
add
das
pop
pop
add
pop
adc
sub
push
pop
test
(bad)
aas
mov
adc
jmp
pop
fild
push
ins
add
inc
add
push
and
movq
jg
nop
push
mov
movs
mov
mov
adc
jge
or
dec
add
test
mov
rcr
adc
add
in
(bad)
sti
push
adc
adc
mov
push
push
mov
mov
mov
cmp
out
dec
sahf
rol
ror
jne
push
(bad)
(bad)
(bad)
stos
in
ret
shr
mov
add
loopne
mov
shr
and
add
pop
mov
addr16
nop
add
and
mov
jno
mov
sti
sub
jae
mov
jmp
xor
pop
call
fwait
arpl
mov
adc
jbe
dec
and
sbb
jnp
add
or
push
clc
popa
jb
or
add
add
ret
mov
inc
mov
aas
fidiv
jb
sub
jne
(bad)
jmp
fmul
or
add
push
push
jg
mov
push
pop
cmp
sete
in
or
xor
adc
pop
clc
imul
pop
jbe
push
mov
xor
jmp
jle
pop
cmp
sar
sub
pop
inc
cmp
jle
xor
mov
pop
pop
inc
xchg
jo
push
je
lahf
jg
dec
adc
aaa
add
mov
mov
mov
test
sti
or
in
je
and
dec
cmp
jle
mov
add
ret
or
fwait
ja
test
xor
mov
mov
mov
xlat
or
adc
add
je
adc
adc
push
push
mov
fisttp
jbe
call
cdq
js
add
rcl
cld
pop
push
adc
movs
jl
push
jl
or
jle
lea
stos
jmp
sahf
add
add
mov
lods
sbb
lea
sbb
lock
mov
cmp
ins
rcl
or
je
lods
cmp
ror
pop
add
aam
sbb
ret
jl
bnd
ret
or
shl
rol
mov
xchg
out
mov
fbld
dec
sbb
sbb
aas
push
ret
sbb
jle
stc
mov
mov
lock
inc
ds
test
pop
loopne
fsubr
mov
rol
ds
inc
and
jo
mov
cmp
mov
xor
test
ja
push
ins
xor
lods
cmp
test
dec
fiadd
js
inc
xchg
out
test
inc
pushf
cmp
lahf
pusha
cwde
cmp
push
lock
out
idiv
inc
dec
pop
pop
or
fsubrp
pop
aaa
cmp
cmp
xor
ins
adc
push
sub
int3
out
cmp
and
sbb
addr16
and
cwde
in
and
in
adc
jmp
fisttp
dec
mov
in
jge
mov
shl
add
ins
in
js
push
pop
(bad)
das
cld
jge
in
xchg
iret
leave
xor
adc
shl
jne
lahf
lock
pop
call
sbb
je
loopne
and
fstp
aam
push
mov
mov
cwde
push
push
push
mov
inc
cwde
push
jne
mov
fsubr
pop
pop
xor
push
repnz
enter
xchg
pop
add
or
ins
gs
popa
ins
gs
jmp
or
outs
addr16
arpl
and
adc
or
add
xlat
cli
add
cmp
jg
test
add
xor
dec
inc
dec
inc
outs
or
ins
jp
inc
js
pop
push
add
inc
outs
arpl
add
fstp
pop
in
mov
mov
(bad)
leave
push
jne
pop
test
pop
out
sahf
out
sbb
pushf
mov
fadd
sbb
pop
cmp
adc
cmp
popa
xchg
add
and
inc
push
jns
icebp
jae
loop
sbb
or
(bad)
cli
push
data16
int3
cld
dec
add
jmp
lds
push
pusha
push
mov
xchg
xchg
into
bound
shufps
daa
daa
lahf
fisub
jmp
or
lock
or
jne
addr16
stos
pop
push
inc
jb
popa
je
lock
loope
cld
dec
or
div
dec
push
gs
dec
daa
cmps
pop
inc
pop
je
mov
cdq
fsubr
dec
fidivr
sub
push
sbb
je
push
inc
pop
ins
mov
imul
xchg
sbb
sub
retf
fs
je
mul
dec
pop
pushf
add
test
das
test
aaa
and
and
fisttp
sbb
xor
xchg
pop
pop
sti
out
jo
imul
neg
rcr
cwde
mov
or
add
sub
xor
mov
xchg
inc
ins
ficom
jle
and
fwait
mov
shr
loop
dec
add
loop
xor
or
jns
clc
les
cmp
or
mov
pop
test
sub
or
add
cwde
add
scas
mov
mov
mov
or
in
inc
cmp
cmp
pop
inc
imul
pop
popa
punpckldq
and
mov
ins
cs
je
ret
jae
adc
add
ins
add
cmp
or
add
push
adc
cs
sub
je
inc
pusha
xchg
mov
xor
imul
or
or
scas
inc
add
cs
cs
add
push
add
add
int
add
outs
jne
je
leave
out
mov
hlt
into
push
cmp
shr
retf
add
fsubr
or
loopne
add
or
nop
add
scas
neg
push
inc
jbe
or
scas
jae
add
pop
or
dec
add
inc
inc
mov
lock
cmovbe
jb
popa
xchg
mov
gs
cmp
adc
sti
pop
adc
inc
push
je
arpl
outs
sub
add
push
inc
inc
arpl
imul
mov
ror
retf
daa
daa
daa
and
loopne
enter
int3
mov
ss
add
jp
push
jo
sbb
pop
maskmovq
lea
sub
cs
sub
or
adc
inc
fadd
in
enter
or
dec
jae
(bad)
mov
or
sbb
call
shr
lahf
lock
mov
push
add
jb
jno
in
in
cmp
xor
xchg
repz
xchg
add
or
xor
push
xor
shr
movs
test
or
jns
lods
mov
jb
sar
call
or
repz
pop
or
add
sub
adc
pop
data16
sahf
or
fwait
inc
inc
das
or
jge
inc
jns
mov
add
pop
cwde
or
dec
xchg
inc
ficomp
sub
call
adc
sub
stc
pop
add
fwait
mov
push
adc
sub
mov
or
adc
arpl
test
sbb
mov
push
daa
rcl
sbb
add
movups
inc
popa
jae
iret
pop
dec
aas
shl
push
outs
bound
add
imul
mov
xlat
les
adc
imul
sbb
add
ins
add
pop
push
push
add
rol
pop
dec
popa
mov
push
bound
mov
cdq
ret
gs
cmps
mov
jo
shl
int
or
arpl
inc
dec
push
mov
fwait
push
sbb
fmul
fwait
push
add
std
inc
push
shl
pop
inc
xor
(bad)
out
push
add
aad
jb
mov
push
or
push
mov
add
pop
nop
setbe
enter
pop
or
pusha
hlt
push
fs
mov
push
(bad)
int
xlat
pop
xor
test
mov
mov
shr
pop
dec
cmovle
mov
cmp
outs
jp
sub
cmp
data16
out
out
inc
add
xchg
outs
adc
and
ror
stos
loopne
movhps
and
idiv
xlat
pop
inc
add
jbe
mov
pop
int3
seto
ja
add
popa
je
in
outs
dec
sub
inc
and
push
outs
xlat
jbe
or
ret
sub
add
pop
mov
mov
lock
dec
outs
je
jne
jo
jb
fs
sar
inc
jo
shl
inc
aam
sub
mov
jo
dec
cmovle
pop
mov
arpl
pop
or
cmp
xor
pop
pop
inc
dec
xchg
jbe
or
aad
xor
adc
xchg
push
(bad)
shl
rcl
fbld
pusha
or
cmp
push
jge
jg
in
lods
add
push
push
shr
(bad)
jg
sbb
or
imul
(bad)
or
retf
addr16
or
(bad)
cwde
pop
test
movd
lods
loope
adc
outs
jbe
ins
imul
pop
add
sub
outs
push
pop
xor
test
push
shr
adc
jne
add
jb
cmp
push
add
lock
ds
adc
addr16
ins
popa
jae
arpl
cld
pushf
fucomi
inc
cmps
sbb
pop
add
or
jmp
adc
bound
(bad)
mov
pushf
neg
popa
or
add
fstp
movs
shr
and
out
iret
push
and
xor
ss
cmp
aas
cli
pop
and
sub
or
inc
ins
ins
outs
ja
shr
popf
in
aam
faddp
dec
add
out
fwait
mov
dec
inc
dec
gs
popa
sub
or
cmp
sbb
jp
outs
xor
(bad)
loopne
dec
pop
outs
push
pusha
mov
pop
xor
xchg
add
sub
inc
xchg
inc
inc
popa
dec
add
pusha
lahf
add
and
and
sbb
push
imul
sub
sbb
fst
fs
or
push
xor
mov
and
outs
pop
cs
mov
dec
push
adc
add
jnp
xor
cmp
xchg
sbb
dec
unpckhps
inc
fs
mov
inc
or
pop
sub
or
pop
inc
mov
sub
loopne
shr
pmaxub
adc
icebp
rol
mov
inc
push
retf
or
add
nop
setbe
sbb
inc
cwde
sub
cmp
pop
dec
loopne
sub
add
sbb
xor
inc
or
int3
add
nop
xchg
mov
pusha
pop
mov
inc
xor
dec
hlt
pop
fmul
loop
imul
jb
clc
(bad)
sbb
out
jo
pusha
nop
or
in
ss
jg
pushf
pop
test
add
push
mov
dec
jbe
data16
pusha
mov
sar
push
push
and
add
pop
sub
xor
sbb
test
or
push
outs
(bad)
out
and
mov
dec
in
pop
xor
fimul
loop
mov
push
dec
sbb
(bad)
dec
and
test
or
jo
mov
add
and
push
dec
sbb
mov
gs
ds
or
fsubr
jb
add
pop
and
sub
nop
stos
loopne
or
mov
sbb
std
inc
add
inc
and
enter
push
add
pusha
ins
xchg
gs
and
pop
push
push
pop
add
mov
paddusw
xchg
push
outs
imul
test
sub
or
add
jecxz
cmp
and
xor
js
(bad)
adc
inc
popa
or
or
arpl
aaa
and
mov
pop
enter
outs
bswap
dec
or
mov
pop
adc
push
fld
clc
add
nop
pop
je
(bad)
test
pushf
jp
adc
arpl
mov
add
imul
pusha
xor
sub
add
sbb
pop
cmp
and
push
stos
xor
nop
fiadd
pop
pusha
push
jb
ins
gs
(bad)
adc
mov
mov
les
dec
inc
jo
stos
not
bound
int3
das
ror
sub
pop
push
inc
pop
xchg
pusha
xor
adc
rcl
je
nop
stos
loopne
outs
pop
jl
sbb
xor
inc
mov
scas
sbb
stos
inc
(bad)
out
cmp
add
and
es
mov
popa
shl
(bad)
call
scas
jbe
or
int3
movhps
sub
push
pusha
add
hlt
gs
fs
jbe
(bad)
push
and
or
jne
jbe
fcomp
add
(bad)
push
jle
sbb
inc
add
xor
or
cmp
xor
push
sub
push
popa
and
mov
out
fwait
inc
pop
sub
cs
pusha
adc
jmp
out
fs
xor
add
sbb
and
hlt
pop
xor
sbb
pmaxub
test
bound
out
jecxz
ror
iret
mov
mov
pop
push
jmp
pop
mov
mov
add
loopne
ins
loopne
jo
pop
iret
pop
sub
pop
pop
xor
cmp
cmp
ds
movs
sub
cmps
daa
ja
push
les
(bad)
xlat
mov
or
rol
push
adc
push
in
add
test
sub
pop
push
into
push
mov
adc
mov
jge
inc
dec
push
sub
pop
sbb
fadd
inc
add
pop
mov
push
call
inc
push
popa
data16
pop
mov
add
in
outs
xor
ins
pop
pop
divps
inc
inc
stos
nop
dec
sbb
sbb
mov
or
out
push
pop
fsub
clc
das
(bad)
aas
clc
(bad)
sbb
adc
jo
adc
xlat
push
sbb
mov
loopne
or
lods
push
add
pop
mov
mov
push
sbb
inc
pop
cmp
add
lods
pop
pop
inc
inc
xchg
jbe
or
je
(bad)
cwde
pop
jl
rcl
inc
(bad)
and
test
ins
jo
push
test
push
cmp
sub
sbb
lock
in
adc
pop
sub
xor
js
or
bound
xor
add
jae
iret
pop
mov
sbb
mov
adc
push
inc
shl
cmp
outs
add
(bad)
push
dec
inc
in
adc
out
out
call
adc
mov
push
inc
mov
popa
je
gs
push
sub
js
popa
dec
outs
outs
fnstenv
add
sbb
pusha
xchg
add
dec
dec
popa
mov
add
dec
data16
sub
or
or
js
daa
and
push
es
adc
sub
dec
icebp
push
ja
mov
adc
xor
cmp
jmp
cmp
xor
xor
mov
xor
mov
xor
jae
test
(bad)
pop
jnp
loopne
out
repnz
(bad)
int3
and
jnp
or
pushf
fwait
je
imul
iret
femms
mov
or
xadd
and
cmp
repz
je
mov
cmp
pop
enter
sbb
es
mov
jne
push
arpl
push
mov
mov
xor
add
sbb
xor
ss
adc
ins
in
or
jo
int
enter
xor
or
xor
push
cmp
mov
lahf
or
adc
add
pop
add
xor
or
or
fmul
inc
dec
fwait
imul
push
mov
cmp
inc
pusha
xchg
scas
leave
xor
pusha
or
imul
pushf
adc
adc
adc
aas
xor
push
test
fld
stos
pop
push
shl
rcr
push
(bad)
fs
ret
mov
aaa
int3
les
push
ja
xor
xor
imul
push
fdiv
outs
ja
mov
shl
gs
arpl
out
add
and
inc
mov
push
retf
aad
add
sbb
mov
pushf
pop
cmp
mov
sbb
push
cwde
push
sti
(bad)
shr
xchg
sub
mov
jnp
or
test
add
or
or
dec
or
ins
ret
or
adc
xor
cwde
test
std
test
into
add
retf
test
push
jne
add
xchg
iret
test
daa
(bad)
in
xchg
pop
ss
or
loope
cmc
dec
inc
and
add
dec
dec
mov
pop
enter
and
push
mov
jnp
sbb
push
loopne
sbb
sahf
pop
fimul
or
std
fdivp
js
fs
or
or
xor
pusha
cmp
sub
je
add
gs
jecxz
or
pop
xchg
or
addr16
push
inc
arpl
jbe
dec
fisttp
mov
clc
jae
inc
adc
add
dec
inc
idiv
outs
iret
movs
pop
push
das
mov
in
repz
dec
sub
mov
movs
(bad)
sub
cwde
push
aas
mov
cld
aaa
js
mov
dec
popa
jae
push
popa
bound
and
ret
push
pop
rcr
loopne
hlt
push
cvtps2pi
cmovbe
jge
clc
fcom
daa
mov
xor
push
outs
jns
mov
adc
fs
xor
sbb
dec
mov
dec
add
jo
inc
dec
mov
xchg
push
lds
jnp
add
inc
shr
clc
stc
or
ins
ror
sbb
imul
cmp
mov
jg
inc
mov
int3
add
jmp
mov
movsx
(bad)
inc
and
lahf
inc
inc
ficom
add
(bad)
call
xor
shl
iret
jnp
retf
push
aad
test
into
mov
pop
jnp
fsubr
add
xchg
js
push
cld
es
xchg
mov
daa
cmp
jo
fisubr
and
fiadd
test
jno
jno
mov
sbb
lea
inc
or
sbb
mov
out
jo
cmp
inc
icebp
push
pusha
push
or
fimul
popa
test
pop
das
ds
cdq
mov
cs
clc
jns
repz
xor
pop
sub
add
push
cmp
shr
lock
out
pop
jb
lock
retf
sub
push
adc
imul
push
dec
dec
xchg
cli
call
jle
push
mov
out
rcr
pop
xchg
dec
jne
int3
lods
mov
lods
push
ins
jne
cwde
mov
adc
sbb
lock
cmp
mov
test
dec
cmp
cmp
das
sub
clc
shl
inc
gs
in
push
sahf
jo
js
and
in
or
jae
adc
xor
mov
shl
cmps
pop
xor
and
and
mov
xlat
nop
in
loopne
test
add
add
or
pop
add
mov
mov
dec
xor
jle
inc
aaa
pop
add
add
addr16
in
cmp
jnp
cmp
ja
push
imul
or
and
adc
outs
inc
(bad)
sub
popa
jo
arpl
jns
cmp
leave
leave
enter
or
aas
mov
or
push
add
ja
in
leave
lods
loope
add
in
in
mov
pop
add
jb
push
mov
jns
add
(bad)
pushf
mov
cld
inc
add
cli
dec
dec
inc
sahf
inc
add
daa
and
push
xchg
pop
xchg
xchg
xchg
xchg
pop
dec
(bad)
ror
leave
leave
enter
lahf
jecxz
dec
shl
inc
packssdw
dec
aaa
in
jnp
cmp
sbb
or
push
or
sahf
pushf
mov
push
or
jle
add
into
pop
or
ret
xor
push
mov
rol
xchg
mov
cmp
or
pop
out
add
popa
mov
mov
mov
lods
and
popa
inc
and
sbb
add
sbb
popa
mov
sub
mov
popf
sub
ins
mov
xchg
xchg
push
mov
mov
cwde
adc
mov
fs
add
sub
xlat
outs
shl
(bad)
inc
jo
cmp
pop
(bad)
push
outs
shl
cmp
inc
sbb
(bad)
sub
push
jnp
aad
push
rol
adc
imul
xchg
imul
mov
in
loopne
jecxz
adc
int3
and
imul
dec
adc
xor
rol
sub
sar
add
jae
neg
mov
push
sbb
ror
jnp
adc
shr
test
fmul
dec
rcl
fisubr
inc
xor
inc
popa
loopne
jb
sub
mov
push
clc
cmps
dec
xchg
daa
jbe
rol
and
and
rcl
sti
add
mov
test
fs
add
imul
movs
xchg
fbstp
dec
movs
pop
mov
pop
and
push
or
mov
xchg
mov
scas
cli
ret
(bad)
in
scas
dec
mov
pop
mov
xor
fisttp
jb
ins
and
xchg
or
adc
cmp
push
shl
loopne
inc
repnz
cmc
test
in
ret
push
outs
dec
xchg
sbb
or
mov
push
or
arpl
xor
stos
xchg
sub
test
stc
js
popa
dec
adc
xchg
inc
add
in
dec
je
inc
outs
jae
gs
push
sub
dec
add
add
pop
pop
xchg
jno
pop
pusha
add
fiadd
daa
jns
add
out
inc
or
cmp
jmp
loope
push
enter
xchg
test
fsubr
xchg
mov
test
dec
adc
push
xchg
xchg
xchg
inc
sbb
sbb
mov
mov
sbb
enter
xchg
inc
xor
jmp
cmps
jmp
or
jbe
sub
or
es
xchg
les
adc
sub
call
jbe
xchg
repnz
xor
das
mov
mov
push
add
pop
inc
ret
push
lock
sar
arpl
imul
movs
adc
ins
cmp
mov
cmp
jae
or
jg
es
aam
gs
outs
jbe
and
ret
pop
stos
jno
lea
jo
adc
dec
xor
add
lahf
or
jbe
popa
arpl
outs
outs
fisttp
push
and
dec
gs
add
adc
add
xchg
retf
or
sbb
test
ins
es
xchg
cdq
or
pusha
daa
mov
pop
xchg
outs
cwde
mov
dec
mov
xlat
ins
fild
or
inc
jo
movs
fmul
rcr
pop
sbb
pop
movs
push
and
fidiv
test
mov
mov
mov
or
aaa
add
push
sub
rcr
sbb
jle
(bad)
lods
ror
sub
out
add
rol
mov
adc
pop
loope
cmp
bnd
rol
loopne
js
prefetch
pop
add
cmp
cmp
sbb
and
adc
pop
mov
add
mov
scas
dec
movs
rol
inc
loopne
dec
xchg
es
inc
or
in
ss
movs
add
enter
(bad)
mov
push
inc
into
std
inc
xlat
inc
outs
shl
jb
outs
jb
scas
or
mov
jbe
pop
fmul
adc
call
(bad)
ds
push
es
jmp
add
fidiv
dec
enter
add
cld
add
jle
loopne
mov
cmp
clc
xor
das
xor
repz
sti
lods
inc
and
pop
data16
adc
inc
jle
dec
add
pusha
loope
add
or
(bad)
or
jp
inc
jns
sbb
sub
sub
call
fcmovnu
xor
xor
add
sbb
bswap
leave
enter
adc
shl
movs
sub
clc
ds
lods
hlt
(bad)
adc
dec
cmp
jns
mov
pop
dec
movs
pushf
mov
out
sbb
and
sahf
cmp
mov
xchg
daa
daa
repnz
enter
sbb
scas
lock
in
sbb
mov
stos
pmaxub
xor
and
por
pop
sbb
pop
fisttp
mov
es
jnp
push
hlt
js
adc
cmp
push
ror
add
cdq
ror
in
pop
inc
inc
jbe
add
fdiv
dec
or
jbe
test
adc
jecxz
retf
push
mov
sbb
mov
xchg
and
retf
retf
adc
add
retf
mov
jo
es
dec
push
sub
push
mul
pop
adc
add
fstp
sub
bound
push
test
stos
and
sub
call
(bad)
sbb
pop
adc
mov
fs
jns
inc
inc
push
inc
add
push
adc
inc
xor
loopne
data16
add
ins
cmp
adc
mov
pop
shr
bound
sub
and
popaw
push
call
xor
or
cwde
hlt
jo
push
lods
lods
inc
dec
test
adc
add
and
movs
push
and
cmps
and
add
push
cmp
lods
cld
add
pop
jo
xor
cmc
pop
sbb
nop
ins
shl
ins
icebp
add
xor
inc
sahf
sbb
rcl
mov
push
ins
pop
xchg
or
int3
adc
ins
ins
or
daa
jp
or
inc
stos
cmps
and
sub
jno
add
adc
mov
daa
sub
push
add
inc
nop
sbb
pop
push
pop
in
inc
sub
mov
or
in
sbb
push
imul
test
add
clc
mov
jg
je
pop
sbb
movs
or
call
inc
vpmaxsw
sbb
and
ins
imul
lds
adc
dec
ds
push
mov
and
add
jnp
sub
(bad)
push
sub
push
jno
daa
sub
rcr
fwait
jne
adc
jne
sbb
sbb
lods
pusha
hlt
dec
or
and
shl
add
add
aaa
dec
pop
or
adc
pop
mov
mov
adc
test
dec
test
aam
gs
xlat
dec
add
add
add
dec
shr
push
into
adc
and
lea
xchg
iret
xchg
push
iret
adc
lahf
jnp
out
into
iret
stos
iret
mov
clc
pop
out
fs
leave
ss
sbb
add
sbb
int
ret
ret
pop
cmp
push
xor
cld
outs
or
inc
outs
repz
mov
push
push
popa
addr16
test
sbb
out
mov
xor
dec
popa
ins
gs
inc
pcmpgtb
add
adc
jmp
mov
add
xor
cmp
and
cwde
push
and
ins
pop
sbb
fadd
push
jnp
jne
bound
or
shl
cmp
dec
sahf
pop
inc
test
xor
sbb
push
sbb
mov
fst
lods
or
aam
mov
push
jmp
add
mov
mov
jmp
test
repz
mov
dec
xchg
or
cmp
cmps
push
(bad)
dec
xchg
push
aaa
cmp
call
js
mov
das
xor
(bad)
js
daa
aam
or
xor
push
push
sahf
out
sahf
jo
movs
test
call
lock
clc
mov
adc
mov
inc
call
addr16
outs
or
inc
dec
inc
push
outs
push
aas
inc
ins
xor
ja
push
lea
pop
adc
cmps
aas
test
repnz
or
popf
pop
aam
imul
mov
cmovle
popa
fcomp
pop
scas
wbinvd
add
push
fld
call
inc
mov
inc
cmp
or
in
rcl
jbe
enter
dec
sbb
cmp
out
jecxz
fimul
cmp
or
and
addr16
pop
mov
add
test
jne
sub
or
xchg
add
xchg
mov
xchg
jg
mov
inc
pop
outs
lds
cmp
dec
push
inc
cmp
ins
jbe
add
into
push
pop
sub
unpcklps
push
out
push
nop
cwde
iret
inc
push
push
mov
pop
shr
push
dec
daa
cmovs
cs
sbb
push
cmp
inc
aaa
adc
inc
cmp
mov
out
stc
dec
push
adc
mov
xor
push
or
(bad)
rcl
or
jae
mov
icebp
(bad)
fucomi
test
jo
add
mov
sahf
push
(bad)
sbb
(bad)
sahf
out
or
shl
push
clc
cld
pushf
pop
fcom
pop
rol
(bad)
test
jb
push
(bad)
jnp
(bad)
cmp
sub
xchg
lahf
mov
jo
cmp
bound
mov
pop
lahf
sub
popa
mov
lahf
and
test
cdq
cmp
jnp
sbb
fadd
jg
xor
lds
icebp
inc
sub
add
loope
mov
scas
repz
mov
push
in
mov
and
mov
pop
push
pusha
push
jo
mov
jmp
adc
cli
paddd
add
paddd
xchg
enter
shr
(bad)
sbb
add
sbb
fmul
add
adc
mov
ret
popa
das
add
adc
add
cmp
add
pop
jo
sub
sub
in
mov
mov
add
mov
mov
lock
in
push
pop
pop
inc
adc
add
inc
imul
inc
test
xchg
mov
pop
arpl
and
xchg
pop
inc
cmc
pop
mov
mov
in
clc
xchg
push
add
ins
lock
push
inc
imul
std
jae
push
arpl
sbb
lock
es
outs
arpl
loop
xor
sbb
jb
mov
lds
add
cmp
js
xchg
add
ins
fistp
add
dec
bound
push
adc
iret
cmp
cmp
push
and
pop
xor
add
rcl
xchg
mov
movs
sub
add
jmp
cdq
ror
mov
ud0
inc
and
adc
sbb
repnz
scas
(bad)
push
int3
ins
(bad)
pushf
out
fidiv
adc
add
push
pop
cmp
jae
and
pop
(bad)
iret
jmp
repz
xor
push
pop
mov
cmp
and
outs
mov
es
mov
push
mov
loopne
sub
test
jnp
sub
xchg
imul
mov
sahf
jo
pop
inc
dec
outs
ins
pop
repnz
or
(bad)
rol
pushw
ja
(bad)
imul
sub
jb
lahf
pusha
mov
inc
cwde
push
dec
pop
push
loope
clc
push
(bad)
daa
sti
pop
sub
lds
add
xor
sbb
xchg
fcmovb
and
cs
or
rcr
sbb
je
xor
sub
inc
add
inc
jo
inc
lea
inc
xor
push
pop
test
xchg
inc
mov
dec
jne
mov
lea
and
or
inc
pop
int3
inc
movs
ins
daa
mov
inc
jae
outs
jae
lahf
adc
mov
cmp
ja
sub
sbb
mov
xchg
pop
sub
mov
data16
das
adc
and
div
mov
popa
ja
jg
sbb
cld
movs
inc
add
jbe
adc
daa
daa
ins
and
push
sub
dec
into
mov
int
imul
mov
xor
sbb
(bad)
sbb
push
dec
ins
fs
fmul
pop
dec
gs
movs
dec
call
cmp
popa
add
and
popa
gs
fnstenv
in
jecxz
movs
dec
adc
sbb
adc
inc
xchg
bound
out
fadd
inc
lds
add
bound
inc
adc
add
add
xor
jb
popa
jns
push
xchg
imul
mov
add
aam
xchg
add
pop
push
push
jno
sbb
ror
cmps
syscall
push
ins
(bad)
and
retf
jne
(bad)
jg
stos
(bad)
mov
inc
nop
push
mov
push
mov
mov
shr
div
mov
mov
add
pop
pop
ret
mov
int
(bad)
fmul
push
sub
cwde
test
fimul
pop
ret
push
push
push
mov
mov
in
mov
cmp
aas
cdq
js
pop
inc
sti
(bad)
dec
mov
mov
mov
mov
mov
lea
mov
jg
outs
xor
pop
and
pop
pop
pop
dec
mov
add
sub
jb
adc
das
int
stc
push
jb
out
jmp
sub
dec
sub
out
sub
popa
add
or
push
and
pop
xor
sbb
std
push
push
jg
movzx
sub
add
fdiv
add
ret
ret
adc
pop
push
jg
sub
mov
(bad)
mov
je
sub
mov
cmp
je
mov
jmp
sub
cmp
cmp
test
pop
push
ror
ficomp
lock
pushf
fadd
push
mov
rol
fcmovnu
(bad)
out
dec
jl
mov
inc
cmp
jne
inc
adc
sub
sbb
pop
push
lea
pop
pop
inc
data16
adc
jae
inc
repnz
sub
jne
inc
add
mov
fsub
inc
mov
cld
jg
pop
and
test
mov
cmp
mov
sbb
or
or
inc
or
add
adc
ret
(bad)
mov
nop
jbe
or
mov
pusha
bound
icebp
xchg
add
call
mov
into
mov
dec
pop
mov
adc
sub
xor
adc
cmp
ja
xor
bt
setb
pop
lds
pop
cli
add
mov
mov
(bad)
out
(bad)
mov
scas
call
prefetchnta
mov
xor
(bad)
lahf
jmp
push
bound
(bad)
loopne
rol
dec
test
jne
out
lahf
seto
mov
or
in
je
test
push
pop
or
or
push
add
enter
(bad)
inc
leave
sub
push
adc
and
sub
shl
cs
mov
mul
sbb
xor
test
add
repz
or
fcmovnb
jmp
add
cmp
test
jns
je
push
adc
sub
pop
pop
jmp
xor
cmps
jp
pop
inc
or
movs
inc
ret
pushf
push
fidiv
sar
add
add
xor
add
cld
add
or
inc
sahf
cmp
lahf
jge
lea
movs
and
sub
jg
sub
pop
add
or
xchg
pop
adc
pop
sub
inc
cmp
rol
aaa
sub
or
mov
push
jg
push
and
call
jecxz
pop
jg
movzx
cmp
jne
mov
adc
pop
inc
jne
and
neg
bound
hlt
pop
push
mov
mov
aaa
rol
leave
and
mov
add
fnstenv
aaa
(bad)
jbe
out
dec
cmp
je
data16
and
inc
and
xor
jp
add
scas
je
xor
cmp
sti
jmp
sub
jne
outs
clc
jae
and
shr
pop
add
fs
jno
cmp
clc
mov
cmp
jne
add
nop
or
and
mov
or
cmp
fidiv
mov
test
repnz
pop
pusha
(bad)
add
push
aas
outs
out
sete
mov
cmp
xor
fcomp
loop
je
inc
add
(bad)
test
sub
cs
fs
mov
nop
pop
push
fdivr
sbb
adc
shr
jle
aad
dec
jmp
pop
ja
jecxz
xor
sbb
clc
mov
sub
jbe
sbb
dec
cmp
ss
pop
jo
adc
mov
adc
in
add
jle
xor
add
add
sbb
addr16
nop
mov
push
test
push
adc
mov
out
(bad)
jo
push
mov
jg
pushf
add
xor
cmp
jle
outs
cli
mov
and
(bad)
and
xlat
ret
mov
sbb
sbb
pusha
stos
aaa
or
inc
cmp
jl
pop
mov
and
or
dec
jmp
in
add
lock
sub
inc
arpl
jno
lock
mov
sbb
pcmpgtd
xor
pop
xchg
icebp
sub
and
pop
test
call
mov
add
stc
sbb
pop
xor
inc
cld
sub
push
push
mov
xor
adc
mov
adc
(bad)
jno
popa
sub
lods
xor
add
jnp
push
add
and
test
jnp
cmp
cwde
sbb
cld
jmp
loopne
das
lea
jmp
in
push
scas
js
cli
cmp
cmp
and
xor
mov
lock
push
or
(bad)
sar
jns
rol
fiadd
pushf
enter
xlat
add
add
es
repz
fadd
mov
call
(bad)
sti
sub
ret
cdq
pusha
pop
pop
pop
or
xchg
push
adc
push
mov
lock
lea
push
jmp
ss
pop
and
push
dec
mov
loopne
dec
mov
and
les
test
fisttp
pusha
sbb
scas
inc
cmp
test
adc
add
int3
rol
sub
inc
mov
std
out
add
sbb
jne
adc
xchg
mov
push
inc
and
mov
loopne
jge
scas
sub
ret
ret
(bad)
shr
aad
push
in
sub
std
push
call
fcom
or
call
jno
cmp
enter
sbb
inc
dec
inc
mov
out
xchg
aad
and
imul
lock
dec
add
adc
std
mov
xchg
in
shr
and
div
pop
mov
call
add
outs
fnsave
add
(bad)
cmp
and
or
in
(bad)
data16
sub
loopne
mov
inc
sub
sub
cmp
stos
jnp
call
jbe
faddp
ret
ja
push
xor
xchg
imul
outs
pop
mov
nop
jmp
cmp
rcr
(bad)
mov
adc
sub
jb
push
push
ret
inc
push
aam
or
adc
sbb
and
sbb
pop
push
and
mov
push
mov
or
sub
pop
loopne
cwde
shl
push
mov
cmp
or
jl
pop
je
and
inc
jbe
xor
es
cmp
scas
clc
sub
addr16
add
mov
inc
jo
stos
repnz
dec
or
jle
or
mov
in
push
inc
dec
jne
jmp
lods
jl
movs
or
clc
cmp
or
mov
shl
(bad)
arpl
aaa
jmp
adc
xchg
jb
push
(bad)
stc
dec
jae
inc
ucomiss
loope
add
cmp
xchg
ror
cmp
jg
(bad)
or
dec
and
xchg
cwde
cwde
imul
jb
out
ret
std
add
fs
jmp
or
or
inc
movzx
int
rcl
sbb
cld
mov
sub
cmp
jle
add
mov
shl
sbb
sub
cmp
sub
add
fdivr
(bad)
add
add
mov
test
nop
cbw
xor
xchg
pushf
mov
xor
idiv
or
repnz
cmps
das
sub
jge
lods
pop
cmp
mov
jne
xchg
sub
outs
sub
ja
mov
cs
call
fsubp
lods
jmp
lods
or
out
in
(bad)
hlt
jb
repz
and
lock
adc
and
repnz
leave
xchg
add
outs
jb
and
daa
jg
cmps
jb
add
(bad)
mov
mov
mov
jmp
pavgb
js
arpl
aas
mov
xchg
ret
add
jmp
cs
cmp
das
add
por
push
in
fldcw
movs
aam
sbb
sbb
mov
push
cmc
push
cwde
es
pop
sub
dec
xor
in
push
into
sbb
call
or
or
pop
adc
pushf
push
cwde
rcl
jo
push
push
cwde
or
iret
push
push
push
fdivp
scas
mov
jne
push
xor
mov
ins
mov
or
sbb
popa
or
jne
cmp
jae
inc
xor
push
aas
hlt
ds
push
or
push
sub
mov
push
daa
or
pop
or
les
pop
pop
mov
clc
add
bound
sbb
inc
mov
add
test
and
push
in
and
dec
and
aas
clc
sub
cmps
test
jg
pop
xor
pop
push
loopne
mov
mov
mov
shl
fsubr
(bad)
enter
xchg
(bad)
sub
call
mov
shl
adc
ret
jae
add
push
cmps
jl
sub
sub
dec
call
das
fdiv
xchg
dec
fadd
dec
sti
mov
jae
pusha
ja
or
xor
repnz
mov
or
(bad)
mov
and
adc
inc
neg
mov
(bad)
cmp
push
loop
sbb
iret
cmps
daa
(bad)
sub
add
clc
jge
ins
clc
test
or
adc
neg
(bad)
mov
data16
jae
pusha
cs
ud0
add
cwde
dec
dec
adc
and
dec
lahf
scas
pop
loop
cwde
dec
jg
push
leave
mov
pushf
mov
lock
inc
mov
pop
pop
shrd
rol
cmps
jmp
sub
ja
(bad)
into
mov
fidivr
push
lea
mov
adc
or
add
(bad)
sub
dec
test
jl
inc
dec
in
sbb
add
push
dec
jne
mov
jmp
push
imul
test
add
fadd
push
add
js
pop
sbb
jae
or
mov
nop
adc
cmp
lea
xchg
cmp
push
sub
adc
sbb
imul
shr
es
fdiv
cwde
jmp
popf
push
mov
sbb
lahf
sbb
adc
test
jo
mov
sbb
xor
fs
out
pop
shl
les
inc
dec
jmp
jp
and
test
les
lds
iret
test
hlt
jb
push
std
sbb
and
and
je
mov
cmp
aad
xor
lea
mov
inc
xchg
or
pop
mov
outs
mov
sahf
test
shl
jae
ins
cmps
xor
cmps
ins
xchg
jo
sar
adc
lock
adc
in
test
adc
sbb
scas
jo
sub
inc
clc
jb
mov
mov
retf
shl
adc
mov
inc
or
pop
push
mov
xor
pop
stos
enter
cs
inc
xchg
push
(bad)
mov
add
mul
mov
xchg
sub
int
daa
jne
das
or
pop
mov
sbb
add
call
mov
xlat
mov
das
add
add
mov
in
add
test
lock
xor
add
call
sbb
mov
test
push
div
jl
inc
mov
js
add
movs
sbb
aam
in
xchg
in
add
push
sub
int3
mov
rcr
mov
(bad)
neg
aaa
std
pusha
sbb
adc
out
fld
fcompp
fstsw
sahf
setne
jmp
xor
ins
mov
xor
dec
and
mov
outs
add
popf
int3
xor
dec
add
sbb
or
xchg
push
xchg
mov
js
cmps
xchg
xchg
nop
icebp
(bad)
jo
cmps
xor
adc
fcomp
jmp
and
and
(bad)
out
adc
ins
xchg
in
pusha
and
test
inc
or
lock
inc
popa
je
nop
repz
or
pop
add
or
test
add
inc
lock
add
or
not
repz
push
push
add
add
retf
mov
adc
ret
jle
int
jne
and
cmp
mov
adc
add
jns
push
mov
dec
mov
or
dec
mov
enter
pusha
sbb
shr
cdq
push
xchg
dec
add
add
call
add
cmp
cli
xor
outs
fmul
mov
cli
inc
imul
ret
jo
push
adc
icebp
ret
shl
add
je
push
sbb
(bad)
cld
fs
imul
(bad)
outs
xchg
jg
xor
push
cwde
pushf
sbb
pusha
mov
push
shl
nop
loope
fist
repnz
enter
push
outs
xchg
add
pop
call
cwde
xor
pusha
mov
minps
add
(bad)
push
xchg
imul
add
outs
lea
ins
or
shl
lods
mov
imul
clc
jnp
mov
cmp
adc
daa
je
or
pop
movs
xchg
mov
mov
mov
std
xor
or
jnp
or
adc
push
jmp
jo
xor
add
daa
push
imul
jnp
mov
je
loopne
imul
add
jmp
dec
mov
or
mov
pop
out
sub
cmp
xlat
popf
cmp
pop
cs
daa
sub
dec
sti
mov
outs
scas
add
or
or
je
inc
or
push
push
sub
sar
push
push
mov
and
ret
pushf
sbb
in
hlt
pop
fs
mov
test
jne
and
sahf
or
pop
call
fwait
sub
cs
outs
pop
jge
js
pop
jmp
adc
mov
int
mov
mov
jmp
push
xor
sub
cmp
mov
or
pop
or
push
push
jp
bound
inc
nop
xor
push
add
ret
push
in
stos
cld
and
add
or
lock
cwde
inc
mov
mov
rol
inc
sbb
add
test
cmp
fsubp
cmp
jo
sub
dec
cmp
add
xor
pusha
sub
xchg
inc
aas
adc
or
fdivr
mov
lods
jge
ror
data16
dec
and
cmp
inc
rcl
loopne
shl
mov
(bad)
out
inc
add
(bad)
cs
and
add
(bad)
lds
jmp
neg
and
adc
fist
sub
arpl
push
pop
sub
jne
ja
and
js
rcr
push
dec
fwait
mov
cmp
or
fbstp
js
add
jb
prefetchwt1
jo
(bad)
add
mov
inc
cmp
mov
mov
dec
in
sbb
addr16
xor
mov
adc
jne
dec
jmp
test
(bad)
push
mov
mov
cmp
and
push
and
cld
add
xor
clc
les
je
rol
inc
adc
(bad)
jge
mov
scas
push
jmp
add
adc
(bad)
push
mov
(bad)
cvttps2pi
out
je
jl
xor
movs
cmp
mov
jle
xor
jp
xor
pop
pop
fmul
loop
je
cld
lods
loopne
mov
push
mov
test
push
sbb
out
sbb
add
push
inc
les
out
mov
add
rcl
push
sbb
pop
adc
call
and
test
retf
dec
inc
cmp
add
and
inc
pop
(bad)
lock
lea
xor
shl
ja
push
(bad)
sbb
fdiv
or
pop
xchg
clc
pop
ja
dec
add
addr16
push
clc
push
pop
push
push
sbb
cmp
add
js
xor
out
push
inc
xor
ins
push
(bad)
fs
daa
outs
push
push
imul
cmp
or
ret
jle
push
out
mov
inc
div
in
dec
dec
mov
test
clc
cld
push
std
daa
cmp
adc
jge
cld
imul
mov
sbb
(bad)
mov
scas
enter
xor
daa
adc
loop
adc
mov
repnz
add
adc
mov
or
je
jp
leave
jne
push
ret
orps
add
(bad)
pop
pop
lock
test
movzx
out
cs
je
push
or
fdivr
sbb
and
pop
ret
inc
or
push
add
outs
jmp
mov
xor
jge
retf
jle
jmp
add
xor
pushf
enter
pop
sbb
imul
scas
pop
jecxz
mov
mov
loopne
retf
and
aaa
ja
xchg
cmp
cmp
shl
pusha
dec
xor
cmp
jl
xor
add
sub
jmp
add
dec
lods
pop
ficomp
xlat
mov
mov
jg
shl
not
sbb
shl
cmps
je
mov
cmp
jb
cmp
ja
sub
mov
or
fwait
mov
sbb
or
sub
sub
je
pop
pop
outs
dec
jo
or
xor
cmp
jae
lods
sub
into
div
add
js
add
sub
dec
jmp
add
clc
inc
push
jb
jne
adc
cmp
adc
lock
cmp
jne
push
bound
sbb
push
mov
jmp
adc
add
jmp
das
adc
das
adc
call
lods
cmp
in
(bad)
jle
inc
pusha
fild
jb
in
out
ret
and
shr
popa
push
lock
arpl
push
adc
or
pusha
sub
sbb
neg
pop
cmp
dec
shr
sbb
icebp
fdiv
jne
pop
dec
or
dec
or
mov
or
data16
lods
dec
sti
(bad)
into
mov
and
icebp
jbe
push
lea
mov
lods
and
(bad)
push
mov
push
mov
repz
pop
mov
jne
lea
jmp
leave
inc
mov
add
mov
test
adc
push
test
jl
inc
xor
cmp
sbb
je
mov
add
stos
and
mov
cs
or
je
inc
dec
jne
or
push
loopne
in
test
push
cmps
retf
cdq
jo
into
fisub
test
and
fcomi
xchg
pop
in
pop
mov
sahf
inc
mov
(bad)
add
ins
or
call
sub
dec
xor
in
jo
add
fcom
xor
jo
(bad)
fld
jl
push
ja
and
xor
mov
adc
cmp
jbe
mov
loopne
test
stos
push
cmp
push
repnz
ins
and
inc
mov
les
and
or
mov
push
sahf
dec
push
(bad)
jns
push
outs
mov
push
or
push
push
mov
xchg
inc
jo
or
jne
rcr
lock
int3
xchg
jg
test
(bad)
sbb
pop
jbe
push
xchg
outs
pop
xor
sbb
aad
(bad)
clc
cmp
fist
and
loope
pop
jp
jmp
pop
inc
inc
adc
and
push
(bad)
fidiv
dec
mov
xlat
xor
xlat
adc
pusha
sub
in
js
pop
dec
loopne
jne
imul
jns
mov
cmp
iret
and
or
(bad)
adc
inc
mov
jle
mov
lock
aam
or
movs
int3
pop
push
mov
pop
lock
push
cmp
xor
fidiv
add
sbb
rcr
xor
adc
fadd
sbb
js
cmp
jg
jmp
pusha
and
dec
in
sbb
dec
xchg
lock
pop
mov
pop
test
mov
sub
jle
or
mov
inc
jle
lea
mov
sub
add
js
ret
pop
gs
cmp
clc
push
add
push
je
(bad)
mov
inc
mov
sbb
push
mov
lea
loopne
push
hlt
cmp
jle
pop
add
mov
cmp
sub
cmps
push
sub
jnp
add
sbb
cs
in
je
and
(bad)
cs
in
add
xlat
mov
cmp
imul
lods
mov
clc
je
rol
je
pop
pop
sbb
cmps
(bad)
jle
xchg
inc
and
push
cs
das
jne
and
sub
mov
pushw
sub
dec
mov
movs
jmp
invd
cmp
xor
arpl
jne
mov
sahf
fisttp
test
push
inc
scas
retf
sub
mov
jmp
out
mov
push
push
adc
sbb
pop
je
xchg
xor
jo
push
add
xchg
add
sub
jl
inc
xchg
idiv
mov
jge
xor
inc
fcomip
jl
popa
sub
jmp
mov
add
lods
sbb
jo
sar
mov
or
or
xchg
shl
fld
test
adc
xor
sub
nop
cmps
inc
(bad)
clc
movs
add
in
mov
je
mov
icebp
sbb
clc
ret
call
sub
or
pop
sbb
xchg
call
cld
popf
jbe
xchg
out
or
or
push
cs
or
adc
in
scas
popa
add
call
mov
es
jmp
shl
jge
jmp
jbe
or
push
or
fs
and
pop
fadd
sbb
jae
fs
xchg
rcr
adc
test
cmp
jbe
push
mov
cmp
ret
outs
sub
mov
cli
push
mov
es
inc
adc
adc
or
movzx
push
pop
cli
(bad)
lods
jo
ss
xor
movs
bound
add
inc
inc
add
push
fsubrp
mov
xor
fild
jbe
xor
je
mov
xchg
sub
sar
and
add
pusha
pop
mov
retf
sbb
pop
fisttp
daa
mov
mov
push
inc
and
mov
sar
(bad)
adc
jmp
dec
sub
out
sar
retf
adc
or
inc
jmp
xor
add
cmp
or
xor
je
mov
inc
ja
mov
jmp
add
fld
clc
xor
jg
pop
pop
or
imul
loopne
xchg
sub
adc
push
lods
add
adc
call
mov
aaa
or
(bad)
sbb
and
loopne
add
cmp
jl
stos
mov
mov
push
jl
add
add
xor
jbe
dec
push
cmp
and
outs
out
imul
xor
mov
neg
inc
jmp
mov
imul
enter
and
ficom
bound
call
mov
mov
dec
retf
cs
adc
xchg
jmp
pop
fnstcw
push
adc
pusha
out
or
aaa
cld
push
je
loopne
fwait
in
inc
push
bound
int3
push
pop
push
repz
add
fadd
rcl
jg
inc
or
rcl
scas
jmp
je
or
je
add
not
mov
xor
sbb
jle
loopne
dec
in
sbb
push
or
push
leave
aam
mov
es
and
out
jmp
mov
jne
cmp
jne
lea
mov
pop
xor
or
mov
push
adc
xchg
xchg
mov
and
cs
in
mov
mov
(bad)
aad
nop
or
mov
fcom
jbe
add
dec
push
sbb
sbb
inc
dec
ins
pop
mov
inc
add
adc
mov
and
ret
repz
push
int3
xor
pop
adc
outs
mov
mov
jo
add
mov
enter
jne
push
push
xor
cdq
jle
popf
cmc
test
sub
jbe
add
add
inc
pop
xor
es
ss
xor
pop
adc
and
outs
jbe
test
push
inc
cmp
les
add
ja
push
jne
and
loope
or
inc
cmp
stos
sbb
sbb
ror
cmp
dec
lea
in
and
push
pop
pop
popa
sbb
test
mov
out
pop
out
aam
jae
call
push
lock
pop
ret
loopne
jne
cld
outs
movs
sub
daa
int3
and
pop
imul
sub
sbb
and
xor
pop
mov
adc
sbb
mov
dec
mov
in
test
popa
push
or
add
sbb
call
cdq
(bad)
(bad)
and
mov
xor
inc
ret
xor
ja
mov
and
xor
jmp
pop
mov
fisubr
out
aam
data16
or
aas
xor
jmp
mov
into
jecxz
or
add
loopne
jmp
mov
paddsw
pushf
imul
cld
or
lods
jl
fs
push
in
sub
sar
pusha
mov
push
aam
dec
inc
or
pop
shl
cs
xor
fwait
mov
xchg
sbb
and
into
add
cmp
fsubr
mov
clc
lea
pmulhw
xchg
cmp
shr
adc
add
shr
(bad)
call
jmp
or
jge
mov
neg
jmp
or
(bad)
mov
inc
mov
push
push
mov
sub
push
dec
div
xor
cmp
or
jne
or
jg
or
add
cmp
hlt
shl
pop
fdivrp
xor
mov
sub
aam
loop
inc
xchg
ret
sbb
pop
int3
stos
jo
or
retf
repnz
pop
ret
xlat
mov
mov
fsubrp
adc
(bad)
sub
out
mov
lods
pop
pop
push
jge
jecxz
fisttp
adc
jle
jo
push
mov
or
jb
or
data16
pop
push
rcr
lock
sub
ret
(bad)
sti
add
mov
cs
ins
shl
lea
jne
mov
(bad)
movs
jmp
jne
test
idiv
add
add
or
mov
mov
or
ficomp
or
imul
mov
dec
jmp
xor
push
sub
dec
add
cmps
cdq
test
push
inc
lods
or
add
ret
dec
fcomp
sbb
into
dec
(bad)
add
in
loope
cmp
jg
cmp
jl
repnz
xor
rcl
push
adc
fldenv
push
stos
jmp
lds
je
sahf
pop
ja
ins
and
cmc
adc
push
stos
sbb
jbe
jmp
xor
shr
xor
mov
fisttp
bound
scas
add
and
div
jg
add
add
mov
mov
mov
cmp
lock
xchg
cmp
test
cli
adc
mov
div
mov
fbld
retf
or
enter
div
mov
inc
sbb
rcr
dec
je
dec
jne
nop
sbb
test
in
and
and
jecxz
lea
adc
outs
mov
jno
jne
ret
stos
adc
test
pop
dec
ja
pop
out
mov
pop
mov
retf
dec
mov
lea
pop
adc
bound
je
push
push
cmp
ja
aaa
sub
cmp
adc
push
imul
add
pop
mov
fld
push
mov
dec
push
mov
(bad)
sahf
out
fld
scas
and
inc
add
and
and
adc
and
addr16
(bad)
sub
xor
inc
es
cdq
cmp
sbb
xor
sbb
in
(bad)
popf
sbb
push
adc
fs
movs
push
in
xor
sub
add
mov
enter
movs
(bad)
mov
in
jnp
je
mov
shr
pop
mov
jmp
mov
or
and
jne
sti
inc
movzx
je
or
inc
dec
xor
repz
push
in
mov
pop
shl
push
cmp
mov
mov
dec
inc
jge
ins
sti
cli
aam
cmp
dec
je
into
jne
ror
jle
jno
nop
bswap
push
and
push
xor
in
mov
inc
xlat
push
cmp
cld
sar
jne
je
cli
or
jmp
jg
jne
jecxz
lods
cmps
push
je
or
lods
adc
push
adc
jp
jo
es
add
or
or
les
add
mov
mov
jbe
lods
mov
bound
pop
xor
bound
sbb
mov
xor
mov
add
(bad)
mov
add
and
xchg
ja
imul
inc
shl
add
add
mov
jmp
inc
jmp
cmp
pusha
mov
inc
mov
jmp
cmp
add
es
mov
jmp
push
add
add
rcr
test
mov
jmp
out
jns
clc
mov
repz
(bad)
clc
jmp
xor
nop
add
pop
idiv
or
pop
fcom
pop
les
sar
dec
jle
push
adc
aam
dec
pop
fsubr
jg
in
repnz
jb
test
ss
push
mov
pop
xlat
pop
fdiv
aam
jne
in
sbb
fdiv
xor
in
sbb
sahf
icebp
ss
mov
xor
cmp
jmp
lds
outs
jmp
inc
jmp
or
ins
cwde
jmp
push
fwait
inc
inc
cmp
jmp
je
pusha
push
mov
pop
push
xor
gs
ret
pop
cmp
push
pop
ret
sbb
cli
push
pop
mov
pop
mov
dec
mov
inc
fst
or
(bad)
call
dec
mov
fiadd
push
jp
push
or
dec
not
es
sbb
mov
jge
push
xor
xlat
nop
sbb
enter
fld
add
ds
fwait
mov
xchg
add
addr16
rol
ret
mov
nop
pop
sbb
shl
inc
push
pop
xor
add
inc
mov
or
and
mov
push
xor
push
aaa
rcl
push
push
adc
sbb
cmp
sbb
inc
push
inc
xor
int
fld
div
cs
rcl
or
clc
adc
and
jmp
dec
pop
fild
pop
frndint
xchg
fld
fstsw
sub
fcomi
fwait
mov
test
je
fidiv
jg
(bad)
fbstp
lea
mov
inc
sub
mov
shr
and
test
lds
sbb
in
clc
dec
ret
or
mov
ja
cmp
idiv
fwait
or
or
cmp
jb
mov
mov
or
ja
push
pusha
jo
cmp
cmp
inc
sbb
sub
mov
outs
fimul
ret
xor
or
push
call
or
scas
dec
dec
add
ror
cmpxchg
add
or
push
neg
neg
sbb
xchg
sbb
or
or
mov
pop
mov
push
inc
push
jl
sbb
jae
dec
dec
jle
mov
lods
fild
xchg
sbb
cli
mov
fisubr
shl
mov
and
setnp
leave
adc
std
pop
imul
mov
and
jne
dec
jne
dec
in
push
inc
cmp
aas
and
sar
fimul
jmp
mov
shl
cmp
jbe
pop
jmp
add
je
mov
iret
pop
cld
push
iret
sbb
push
(bad)
mov
mov
lds
xor
dec
push
fnstcw
fclex
fldcw
js
loop
jbe
cmps
cmps
push
and
push
fs
sub
jle
mov
xor
int3
cmp
add
and
pop
cmp
je
sub
inc
imul
test
pop
push
pop
add
lahf
(bad)
and
rcr
(bad)
mov
es
xor
sbb
pop
je
inc
add
aas
jmp
fstp
fstsw
test
loopne
je
mov
add
fdivr
mov
mov
and
aaa
pop
fcomp
sub
repnz
test
sub
repz
add
aad
jbe
jmp
inc
mov
mov
stc
popa
imul
imul
sub
add
push
jecxz
add
xchg
inc
sbb
pop
mov
(bad)
pop
pop
adc
pop
repnz
mov
pop
cmp
lock
push
lea
lea
mov
sar
mov
enter
mov
add
add
cmp
out
jo
outs
sbb
xchg
push
xor
or
adc
fbstp
cld
in
add
add
xchg
adc
(bad)
jecxz
loopne
jle
mov
pop
xlat
ja
ss
push
push
daa
test
cmp
push
jo
sbb
inc
popf
xchg
lods
into
mov
lock
jo
inc
pop
push
sbb
mul
push
adc
or
dec
xor
inc
sbb
adc
fld
bound
int3
add
sbb
jge
jg
add
sub
in
pop
sbb
adc
lahf
adc
neg
ins
lock
mov
nop
(bad)
mov
adc
xchg
aam
mov
test
je
sub
js
pop
ficomp
add
jae
xor
dec
push
sub
(bad)
mov
mov
or
jae
fstp
inc
cmp
or
add
and
(bad)
std
data16
leave
(bad)
jle
pop
xchg
sbb
sahf
push
outs
and
xchg
retf
or
adc
ror
pop
push
(bad)
fld
mov
outs
sub
fistp
fwait
pop
pop
fstp
ror
adc
mov
xor
push
adc
cmps
xchg
mov
mov
fist
mov
test
jl
cmp
or
adc
or
add
add
sbb
push
xor
ror
sbb
xchg
sbb
xchg
das
sub
ret
pop
test
or
jne
pop
dec
rcl
xchg
movs
sbb
sbb
inc
in
mov
iret
jae
das
nop
push
ss
or
and
pop
mov
add
dec
imul
pop
cmps
sub
xchg
jmp
add
pop
jl
rol
push
push
adc
mov
les
shl
sbb
iret
(bad)
pop
push
or
cmp
push
or
out
xchg
xchg
xor
fcmovne
imul
jecxz
push
xchg
inc
xchg
mov
fstp
push
or
cmp
push
cwde
or
add
call
imul
adc
stos
(bad)
shl
cmp
rcl
add
xor
(bad)
or
pop
xchg
push
jmp
fstp
fwait
mov
sbb
fsubr
pop
out
out
es
aad
fisttp
inc
and
iret
xor
fs
shr
fsub
add
jg
fwait
sbb
ss
push
push
push
icebp
add
add
pusha
jmp
mov
popf
dec
(bad)
and
mov
pusha
and
push
pop
enter
loopne
and
cmp
mov
mov
retf
outs
ret
mov
dec
jo
icebp
int3
std
mov
or
stos
or
mov
mov
les
movs
jg
add
lea
xchg
push
(bad)
sub
mov
ja
and
jb
or
pop
jae
or
jb
push
ins
je
cmp
ja
sti
push
jle
mov
pop
dec
inc
jne
sub
dec
mov
aas
cdq
idiv
imul
sbb
xchg
ret
cli
add
repnz
rcl
outs
pop
popa
ds
add
pusha
ret
or
sub
fsubr
rcl
mov
rcl
inc
cmp
add
pop
pop
pop
xchg
call
or
mov
lock
xchg
sub
dec
in
test
jg
pop
ror
cmp
or
xchg
inc
inc
loopne
lods
jmp
pop
lock
cmps
inc
mov
dec
mov
stc
mov
add
sub
and
jge
shl
lock
lods
mov
mov
dec
cmp
sub
imul
push
push
sub
repnz
mov
pop
sbb
add
add
mov
(bad)
mov
es
cmps
inc
je
lds
ins
(bad)
dec
ret
(bad)
cmp
jb
adc
sbb
fisttp
sbb
clc
mov
mov
xchg
rol
adc
ret
push
xor
(bad)
push
or
jbe
(bad)
push
adc
sub
mov
sub
cmp
pop
in
mov
push
fs
push
and
jp
mov
jl
sub
push
cmp
or
shr
ficomp
imul
pop
push
mov
clc
or
(bad)
cmps
pop
fwait
cdq
fcom
sbb
mov
and
mov
add
jbe
add
add
xor
jg
add
jns
je
ins
cs
je
clc
xchg
ret
fsubr
inc
mov
mov
push
loope
std
scas
mov
sub
wrmsr
pusha
add
lea
in
inc
test
lods
std
test
out
dec
add
add
stos
add
mov
mov
sahf
fnstsw
mov
xchg
lea
fmul
out
jmp
mov
adc
cmp
int
and
retf
inc
mov
cmp
sub
add
test
jle
dec
add
sahf
fmul
cwde
cmp
sahf
(bad)
lods
mov
jmp
cmp
push
lods
addr16
ret
rcr
shr
and
aam
sbb
out
shl
add
dec
mov
into
js
out
sar
(bad)
retf
push
push
xchg
fcom
cwde
int3
js
stos
bound
bound
je
or
ret
mov
add
rol
data16
ins
aaa
pop
push
push
xchg
loope
add
ret
jo
ds
push
out
mov
mov
loope
(bad)
mov
cwde
or
shr
inc
outs
add
dec
ss
in
cmp
fucomi
mov
mul
loop
sbb
or
inc
hlt
xor
mov
mov
lea
(bad)
fidivr
push
cmp
mov
add
mov
loop
out
adc
mov
push
xchg
jo
cld
lea
in
test
aas
inc
in
sbb
outs
sub
xor
cmovbe
mov
fbstp
les
test
jmp
or
mov
jmp
sbb
pushf
in
cmp
cwde
cmc
jne
mov
adc
out
ss
mov
js
push
loopne
jmp
out
and
rcl
inc
add
add
pop
cmp
cmp
cli
sbb
js
push
xor
inc
sbb
sbb
sar
mov
sub
jne
test
add
adc
shl
loopne
div
imul
xchg
mov
add
dec
mov
out
hlt
mov
or
and
je
or
outs
js
and
cmp
jne
mov
add
dec
mov
arpl
mov
or
xor
ret
pop
jns
add
ja
cwde
daa
inc
daa
das
add
push
loop
ror
mov
shl
dec
test
add
push
test
inc
fcomp
rol
hlt
data16
xor
xchg
push
retf
data16
and
jl
xchg
lock
inc
push
fild
jmp
test
add
jb
cmp
mov
jbe
mov
add
add
lods
mov
adc
enter
cmp
jl
mov
and
stos
add
pop
jmp
or
mov
cmps
sti
dec
sub
movs
sahf
jbe
dec
jne
mov
out
pop
loopne
inc
fidiv
cmp
xchg
ins
and
movzx
add
fistp
adc
add
hlt
(bad)
or
xchg
add
add
add
pusha
js
repz
or
push
inc
adc
imul
dec
cmp
xor
and
je
dec
push
push
mov
lods
adc
sbb
les
cmp
call
ret
cld
xor
push
or
mov
mov
ret
mov
add
and
pop
pop
xchg
(bad)
xchg
shr
and
pop
sub
in
aam
jb
sbb
jmp
push
jae
cld
jbe
dec
push
inc
sub
mov
and
fdivr
enter
jg
jbe
rcl
je
dec
je
dec
push
mov
fild
xor
cwde
or
cs
mov
sti
jle
push
dec
rcl
fdivr
cs
aad
adc
dec
pop
pushf
add
popf
fs
mov
xor
add
call
push
mov
pop
push
ficomp
push
xor
(bad)
(bad)
inc
outs
jp
fisub
or
mul
jle
mov
adc
aas
mov
arpl
add
push
jmp
or
je
hlt
div
jmp
cmp
dec
mov
aas
inc
mov
inc
cld
cld
sub
mov
cmp
adc
jl
cwde
sub
pushf
add
push
mov
pusha
ret
neg
xor
mov
add
cmp
test
(bad)
or
shl
push
or
imul
fmul
shr
call
or
lods
leave
adc
ins
jle
xor
mov
popa
xor
adc
popa
push
inc
es
popf
hlt
add
dec
ins
push
add
xlat
loop
or
ss
inc
dec
pusha
popf
shl
gs
popa
sbb
(bad)
out
loop
ins
xor
adc
enter
or
ret
stos
adc
dec
clc
hlt
xor
scas
push
or
outs
xchg
ror
or
jmp
mov
arpl
mov
sub
mov
jns
sbb
push
mov
pop
push
(bad)
in
in
and
sbb
dec
jl
in
pusha
pop
sub
lahf
cmps
jmp
lock
mov
lahf
popf
mov
stos
lahf
cmc
jmp
test
lea
test
jmp
or
rol
cmp
ds
sahf
adc
mov
rcr
mov
ret
arpl
lahf
sub
test
push
test
and
add
rol
mov
cdq
xchg
test
mov
add
xor
jmp
retf
fcomp
test
add
fsubr
jnp
outs
jne
(bad)
in
sub
aas
mov
or
dec
iret
pop
xchg
mov
test
push
cmc
neg
jo
xchg
les
push
jge
je
das
test
fdiv
fmul
jg
mov
mov
add
xor
out
das
add
pop
adc
and
mov
cdq
add
add
push
int3
pop
mov
in
(bad)
mov
mov
jecxz
cld
adc
mov
inc
(bad)
xchg
push
outs
mov
cvtdq2ps
(bad)
push
mov
or
mov
cld
mov
addr16
mov
hlt
movs
fs
mov
(bad)
rcl
sbb
inc
inc
fld
movs
nop
popa
out
daa
or
retf
enter
call
mov
test
pop
inc
lea
mov
xor
movs
mov
(bad)
fld
ror
jmp
fs
mul
loopne
jo
sub
sub
jae
outs
test
xchg
mov
call
xor
xchg
jne
push
inc
add
mov
cs
inc
and
sbb
cli
ror
cmp
and
sub
xchg
loopne
nop
(bad)
das
add
add
and
xor
out
seta
mov
mov
sti
xor
movs
arpl
sbb
add
fcomip
jge
jg
cmp
je
clc
push
imul
clc
mov
out
rol
xor
sbb
fs
jbe
cld
cs
push
ins
stos
xor
sub
add
lea
data16
mov
pop
(bad)
xchg
jmp
mov
adc
and
pop
adc
jae
add
sar
fisub
cmp
jle
lods
mov
and
adc
cld
pop
(bad)
mov
jle
js
mov
pop
hlt
enter
ss
jbe
fild
fisttp
ds
loopne
shl
adc
sbb
mov
push
dec
inc
add
sub
pusha
daa
xchg
loop
das
daa
nop
stos
cmp
add
mov
mov
or
add
push
and
ficomp
and
movs
in
mov
mov
cs
cmp
jo
imul
loopne
ins
inc
(bad)
jne
inc
scas
je
(bad)
shl
jmp
cmp
loopne
arpl
jo
push
dec
je
cld
test
or
push
jmp
mov
sbb
hlt
in
push
adc
push
add
inc
jns
jne
mov
mov
jle
jmp
mov
mov
add
push
int
in
(bad)
adc
pusha
mov
and
inc
popa
mov
adc
push
mov
sar
fs
out
mov
cmp
ror
jle
js
(bad)
push
xor
sub
add
sar
inc
mov
add
pop
loope
pop
push
adc
pop
cld
jmp
dec
dec
sub
repnz
(bad)
mov
enter
mov
sub
bndldx
mov
pop
lods
inc
or
adc
and
push
js
mov
push
shr
push
adc
jne
mov
(bad)
xor
dec
icebp
sub
and
push
lock
adc
xchg
je
adc
ja
jmp
mov
mov
sar
xchg
je
fcomp
or
mov
jl
xor
dec
jmp
cwde
aam
jbe
push
pop
inc
push
aam
adc
call
setnp
or
nop
cmps
popf
retf
and
shr
add
fnstsw
dec
enter
jbe
sub
jb
in
mov
cmp
push
jl
in
fst
test
dec
fsubr
call
cs
out
jmp
cmp
cmp
in
call
addr16
push
(bad)
ret
mov
mov
int3
pop
adc
cmp
push
jecxz
pusha
sti
inc
add
les
push
push
mov
inc
dec
retf
neg
(bad)
out
aaa
add
cmp
jle
and
fs
jne
sub
outs
mov
add
or
add
call
cmp
xchg
jo
es
inc
adc
inc
sbb
fbld
pop
jmp
cdq
xor
push
lock
and
int
out
adc
int3
rol
inc
pop
aad
mov
aad
fsubr
aad
mov
les
jle
int3
pop
js
addr16
and
inc
xor
jmp
int3
sbb
mov
xchg
adc
in
stos
push
pop
js
jge
push
pop
fidiv
and
test
imul
pop
aaa
ds
retf
add
into
dec
push
add
add
sti
or
or
mov
or
mov
sbb
scas
mov
in
sub
in
out
add
rol
jl
dec
adc
je
pop
icebp
sahf
clc
pop
retf
ja
js
cmp
test
test
cs
xor
xchg
mov
mul
or
ins
push
inc
fadd
fs
iret
mov
adc
sbb
pop
es
and
mov
je
sub
or
rol
sub
sbb
cwde
adc
cld
push
sbb
mul
mov
shr
popf
or
mov
xchg
xchg
cmp
test
aam
in
call
scas
push
mov
rcl
sub
push
or
pop
add
jns
enter
xor
mov
pop
mov
push
mov
xchg
xchg
add
outs
jbe
pushf
xor
push
jb
mov
add
(bad)
fiadd
sub
and
sub
sbb
aaa
je
and
dec
and
mov
pop
cmp
or
(bad)
fidivr
or
jg
pop
xor
mov
dec
push
or
fucomi
mov
adc
xlat
inc
mov
mov
jge
call
sbb
mov
fisttp
sahf
sbb
add
sbb
add
sar
fimul
mov
xchg
stos
push
test
into
sti
pop
test
jne
jmp
fistp
add
mov
or
mov
mov
test
je
sub
ins
xchg
rol
cmp
push
gs
or
push
or
shl
mov
adc
test
sbb
ins
xchg
and
add
(bad)
cwde
dec
fldz
fcomp
mov
ja
fisttp
mov
and
stc
ss
jmp
pop
fs
ret
sbb
push
mov
clc
adc
sbb
ret
cwde
push
xchg
test
sub
add
cmps
push
shl
xchg
ret
or
push
ins
push
lea
push
or
inc
es
mov
push
xor
jmp
data16
jp
dec
mov
scas
fistp
in
or
je
push
scas
or
or
sub
cdq
add
mov
sub
popf
adc
push
out
push
out
les
loopne
and
adc
jbe
sub
lea
push
push
push
ja
mov
test
cmps
enter
inc
mov
or
xchg
sub
xlat
push
rol
sbb
add
push
push
add
dec
push
pop
scas
out
xchg
sbb
xor
pop
mov
std
xchg
push
push
gs
(bad)
out
adc
pop
cmp
adc
or
xchg
adc
mov
rol
sub
mov
mov
lock
pop
adc
and
test
jg
add
cli
in
sbb
lock
push
mov
xor
mov
movs
or
sbb
cmp
test
add
sub
sub
cmp
and
add
cs
ror
sub
fadd
add
dec
imul
jno
je
push
push
sbb
imul
nop
mov
loopne
inc
aam
mov
inc
push
fcmovu
dec
inc
xor
out
(bad)
dec
fdivr
mov
cmp
sub
cwde
sar
mov
data16
inc
and
pop
and
push
fsub
dec
aam
and
adc
jns
push
cmp
mov
cdq
pusha
mov
daa
loop
and
adc
nop
add
cmc
add
xchg
inc
jg
and
out
movs
sbb
cwde
sub
(bad)
jge
inc
enter
daa
add
pop
in
ret
hlt
mov
sbb
push
cld
push
mov
sbb
add
pop
dec
push
and
lock
dec
ret
or
or
loop
xor
aaa
sub
push
aaa
ret
sbb
sub
std
mov
inc
movs
arpl
xor
pop
adc
cli
repnz
xor
pop
jmp
pusha
add
add
loopne
xor
scas
popa
inc
xchg
pop
enter
test
inc
push
and
ins
pushf
mov
add
xchg
das
or
or
sub
das
xor
mov
jb
xor
add
aad
pusha
mov
fnstsw
mov
xchg
cs
cmp
jl
jo
sbb
or
mov
ins
dec
add
cwde
inc
pop
shr
aaa
clc
out
mov
inc
sbb
mov
leave
fs
sub
mov
adc
dec
xor
lods
in
sub
cmp
push
aas
rol
pop
mov
xchg
(bad)
cmp
(bad)
mov
mov
cmps
fdiv
inc
push
ins
or
shl
or
inc
or
cld
dec
sbb
jns
(bad)
push
push
cdq
sbb
push
movs
adc
imul
sbb
pop
and
sbb
adc
cmp
jbe
(bad)
lock
adc
add
mov
add
jne
mov
lea
bound
pusha
ja
and
jbe
adc
ficom
xchg
inc
daa
sbb
popa
test
repz
(bad)
movs
push
pop
or
dec
push
mov
scas
fimul
mov
mov
(bad)
imul
push
call
add
add
jg
movs
movs
add
popa
xor
mov
cmp
add
jmp
jg
adc
pop
mov
sub
add
test
call
test
jne
sbb
and
add
mov
cmp
fwait
call
add
xor
mov
push
arpl
inc
into
dec
lea
loop
(bad)
cli
outs
nop
or
push
lea
inc
sub
mov
or
add
fst
jmp
mov
adc
mov
pop
daa
aas
inc
push
iret
ins
pop
mov
imul
mov
push
pop
push
mov
mov
cmp
cmp
push
cmp
jl
or
jne
dec
push
pushf
mov
out
xchg
(bad)
mov
cmp
je
jb
popa
ins
inc
jb
adc
outs
push
gs
jl
arpl
fs
sbb
lock
mov
push
ins
cs
je
ins
jae
mov
jge
push
push
lea
xlat
or
sub
inc
sbb
or
outs
jne
sub
pop
jge
jo
jg
push
pop
clc
jp
pop
sbb
xchg
out
js
popa
test
add
loopne
ja
pop
push
lea
shl
test
nop
out
sbb
inc
push
mov
sub
ret
push
mov
jae
and
jne
pop
push
xor
add
dec
xor
ret
xor
jo
mov
jbe
mov
sub
or
pop
nop
inc
dec
dec
mov
fld
mov
popf
rol
sahf
sbb
lahf
es
dec
cmp
je
inc
ficomp
add
jl
push
or
popf
or
cmp
and
lea
or
test
dec
pusha
rol
and
test
or
and
mov
das
fsub
sbb
jg
or
lahf
clc
sbb
test
jo
push
jl
or
jae
or
push
or
xor
and
mov
loopne
inc
adc
inc
jle
mov
out
push
clc
add
push
push
cdq
push
push
(bad)
loop
mov
add
cmp
scas
call
sbb
cmp
sub
call
jmp
add
cld
push
ret
mov
xor
mov
jae
sbb
ja
cmc
mov
pop
push
inc
sbb
(bad)
jle
mov
push
fadd
jle
test
mov
jnp
dec
clc
arpl
ins
fsub
dec
adc
fstp
fwait
ret
rol
mov
sbb
ror
lock
icebp
xor
sub
int
mov
in
sbb
ja
jmp
addr16
mov
adc
mov
push
fcomp
ret
ret
fnstenv
mov
test
push
test
xchg
jno
sbb
idiv
(bad)
sahf
repz
cmp
and
cmp
scas
xor
pop
xor
pushf
sub
pop
inc
rcr
cmp
in
inc
enter
and
cld
and
cmp
in
nop
xchg
sbb
in
iret
les
mov
mov
xor
mov
jmp
adc
jne
xor
dec
mov
inc
xchg
(bad)
push
or
cmp
jne
je
cmp
ret
add
adc
scas
mov
loope
inc
push
jge
push
mov
ror
pop
loopne
cli
sbb
push
push
sbb
push
mov
imul
ds
je
sub
push
pop
and
jb
cmp
sub
dec
je
dec
or
adc
loopne
je
pop
lock
fadd
in
cdq
xor
adc
cmp
aas
or
pop
add
or
add
inc
fcomp
mov
cmp
(bad)
cmp
inc
adc
sbb
clc
ins
sar
and
in
push
loopne
dec
sti
in
add
ret
pusha
jmp
push
dec
mov
push
repnz
dec
out
int3
push
jl
xor
mov
push
add
out
lea
push
adc
(bad)
add
lods
dec
push
jbe
lods
jmp
scas
inc
inc
dec
xor
loope
je
dec
dec
inc
je
xchg
sbb
jmp
push
das
pop
(bad)
and
shl
jne
jne
mov
cmp
(bad)
int
mov
aaa
test
out
sub
sbb
jmp
push
in
adc
jb
out
mov
mov
(bad)
add
in
sbb
ds
sub
daa
das
gs
add
add
scas
push
xchg
or
daa
dec
pop
and
sub
stos
test
cmp
and
mov
dec
jg
scas
or
sub
inc
cmp
rol
add
mov
loope
ret
mov
jnp
sti
lock
pop
je
inc
mov
xor
sti
sahf
xor
jne
push
clc
or
test
inc
scas
xlat
sub
aam
fistp
int3
popf
adc
aas
jmp
test
cmp
sub
and
fnstsw
sbb
add
xlat
(bad)
sti
cmp
daa
pushf
bound
adc
push
jmp
xchg
pusha
jmp
sub
int3
mov
mov
mov
stos
add
add
push
mov
jg
inc
les
lock
mov
(bad)
jb
mov
mov
cmp
mov
into
or
enter
push
sbb
inc
mov
and
sub
dec
xor
sub
xchg
pop
lods
ins
xor
add
out
pop
and
movs
adc
add
mov
or
mov
out
rcr
mov
or
aad
repnz
mov
xchg
push
cdq
or
pop
adc
lea
dec
mov
jo
retf
mov
fs
add
jmp
in
in
movs
add
add
fcom
add
aaa
cmp
add
push
mov
mov
dec
inc
loope
push
push
sbb
xor
out
js
gs
pop
xchg
fnstenv
xor
or
dec
cmp
ds
mov
mov
dec
addr16
sub
pop
xor
push
pop
gs
inc
(bad)
es
cwde
push
data16
int3
test
push
sub
test
jmp
push
fst
push
mov
sub
sub
sbb
push
push
push
jno
inc
mov
xchg
sub
out
add
test
ja
(bad)
jecxz
xor
(bad)
sbb
rol
dec
mov
loopne
jmp
je
cmp
lods
add
or
pop
xchg
push
aaa
cli
cs
or
mov
cwde
test
popa
adc
jmp
mov
adc
xchg
dec
xchg
lods
jecxz
icebp
and
icebp
ret
jp
pop
xor
adc
push
cdq
dec
cmc
shl
call
pop
pop
popa
inc
xor
inc
push
test
push
inc
or
ins
mov
inc
pusha
sbb
(bad)
pop
and
(bad)
sbb
lock
jbe
sub
inc
xchg
and
cmps
push
cmp
mov
xchg
mov
les
lock
or
imul
test
sbb
test
aam
pop
shr
cwde
jmp
js
inc
pop
xchg
mov
inc
add
fbld
call
shl
out
add
nop
sub
pop
or
mov
xor
js
inc
dec
push
xchg
xlat
xor
popf
call
adc
mov
inc
shr
mov
push
add
adc
(bad)
pop
add
mov
xor
dec
rcr
out
push
ins
scas
or
lahf
xchg
sbb
jg
lds
or
xchg
ror
mov
aaa
mov
test
or
mov
cmp
sub
inc
rol
fadd
lods
sbb
je
mov
call
cmps
add
cld
and
add
stos
cmp
adc
cs
add
push
or
test
add
mov
test
loope
int
test
test
mov
jmp
and
push
daa
cwde
(bad)
lahf
xchg
mov
std
popf
test
movs
adc
jbe
mov
xor
xchg
cmp
test
jle
test
fstp
test
or
scas
cmp
je
mov
push
clc
mov
in
cmp
cld
push
(bad)
mov
jecxz
mov
jne
fimul
or
js
mov
push
outs
and
xor
call
mov
int3
jmp
inc
cmp
jg
cmp
ins
les
sbb
sub
dec
and
xchg
fst
xor
inc
rcl
mov
and
out
sub
cld
js
jo
pop
pop
out
jp
dec
je
push
adc
adc
dec
sub
jb
jmp
cld
call
xchg
xor
mov
or
shr
mov
adc
inc
shr
cmp
add
xor
lock
icebp
imul
or
int3
mov
lahf
sahf
(bad)
fild
fisttp
in
shr
enter
scas
add
push
aam
fidivr
call
mov
or
jge
cld
push
pop
or
call
ins
adc
js
call
mov
jmp
(bad)
in
dec
or
jo
inc
add
mov
nop
fdivr
repnz
retf
aas
jno
jbe
cmp
cmp
adc
or
pop
mov
js
push
pop
test
add
je
cmp
mov
adc
retf
xchg
cmp
je
jmp
add
xor
inc
cmp
xchg
push
adc
xchg
sub
push
jmp
sub
jne
and
jmp
mov
and
call
pop
fdiv
call
sub
idiv
mov
rol
ds
(bad)
mov
pop
inc
add
xor
push
jp
adc
adc
adc
mov
inc
arpl
adc
add
add
add
or
je
jmp
clc
stos
xor
out
dec
inc
jmp
sbb
test
mov
xor
jle
pop
mov
xor
adc
fs
dec
or
aaa
dec
je
fmul
test
xor
(bad)
inc
(bad)
in
push
xor
cmp
xlat
ins
pusha
out
mov
lea
or
cli
cdq
sub
pop
xlat
jge
fdivr
mov
ror
mov
push
(bad)
enter
sbb
out
out
ror
lods
(bad)
scas
add
imul
in
clc
jno
xor
in
cmps
jl
push
bound
nop
mov
cwde
pop
pushf
or
mov
or
xor
push
jae
inc
mov
out
ret
jns
popf
mov
lds
inc
push
mov
cmps
xchg
or
jecxz
imul
lds
popa
add
push
lock
sbb
and
lods
jecxz
fbld
or
je
dec
push
or
loope
jns
rcl
xchg
mov
shr
add
push
mov
xor
mov
add
inc
clc
(bad)
mov
lock
xor
dec
pusha
add
mov
lock
adc
push
jns
sbb
pusha
js
div
or
lods
pop
pusha
add
push
xor
mov
push
nop
push
and
fnstenv
loope
lock
(bad)
ficom
add
or
cmp
mov
ins
sub
cmp
loop
out
rol
fs
movs
push
mov
xor
adc
(bad)
out
ins
or
cs
mov
inc
add
mov
mov
pop
mov
dec
loopne
add
sbb
mov
dec
cmp
sbb
mov
ret
add
adc
push
data16
dec
push
jbe
inc
adc
out
cmp
inc
dec
js
add
sbb
or
shl
adc
adc
adc
lock
adc
xor
mov
je
(bad)
fucomip
stos
push
arpl
or
adc
enter
push
fisttp
xchg
es
ror
cs
retf
push
idiv
shl
adc
idiv
fdivr
dec
pusha
movs
sub
ret
loop
cmp
inc
add
adc
pop
loop
jle
jmp
add
dec
jne
mov
psadbw
mov
push
pop
test
xchg
(bad)
mov
add
js
fbstp
mov
inc
cld
ret
jl
dec
jne
imul
inc
std
loope
inc
mov
and
mov
and
movs
cs
jae
or
leave
fdiv
jbe
mov
mov
mov
mov
pop
ror
jae
lea
ret
cmp
jmp
clc
jmp
cmp
dec
add
mov
cmp
inc
mov
mov
push
loope
adc
pushf
fidivr
xor
adc
xor
pop
fdivr
jne
push
or
push
inc
cmps
pop
repnz
fistp
enter
ret
fstp
fwait
adc
gs
fld
clc
ja
fcompp
fstsw
sahf
jb
(bad)
jo
js
add
fisttp
daa
jle
push
in
jne
inc
ret
or
lock
sti
push
xlat
(bad)
in
pop
xchg
cmp
sbb
cs
pop
mov
(bad)
les
adc
nop
or
mov
leave
mov
mov
adc
nop
mov
sub
jb
mov
(bad)
loopne
pop
dec
jbe
cmp
scas
sbb
xor
jmp
test
outs
add
add
add
add
jnp
inc
mov
movzx
mov
push
es
and
out
ret
jns
dec
mov
aas
xlat
mov
outs
sub
jbe
xchg
ret
(bad)
cmc
jnp
fimul
movs
fimul
sbb
jmp
ja
push
dec
xchg
xchg
pop
or
or
pop
xchg
xchg
xchg
popa
repz
rep
jae
add
jnp
aas
data16
repz
push
mov
shr
ds
ror
push
jne
or
je
mov
movs
sbb
(bad)
jg
inc
sbb
aaa
or
mov
adc
shl
jp
data16
pop
cmp
jne
gs
dec
push
fcmove
dec
push
pop
push
movs
xchg
clc
jle
shl
ss
icebp
mov
mov
push
push
jmp
mov
add
rcr
adc
jge
mov
cmp
lahf
adc
rcr
fstp
cmp
push
cmp
ret
mov
inc
jo
(bad)
jg
ret
es
mov
mov
or
xchg
jo
daa
loope
setb
mov
push
(bad)
inc
add
mov
je
jae
sub
shl
sub
lock
cs
imul
push
mov
data16
inc
or
inc
rol
fmul
jmp
jmp
in
jmp
mov
dec
inc
cmp
call
mov
push
pop
rol
inc
adc
mov
test
fsubrp
sbb
cmp
setge
jmp
jbe
adc
xor
dec
push
sahf
lods
jb
dec
stc
stc
leave
cmp
daa
add
cmp
rcl
add
ret
or
jle
jo
dec
ja
movs
cmp
or
mov
inc
arpl
retf
and
or
sar
faddp
sbb
inc
stos
mov
xchg
mov
push
ja
xchg
ror
adc
icebp
jg
pop
push
outs
cmp
setl
test
sub
cmp
jl
in
pop
cs
pop
or
pop
fsubr
jmp
ret
or
pop
dec
das
xchg
xchg
push
loopne
xor
(bad)
cmp
cmp
cmp
cs
das
out
inc
dec
push
retf
or
jge
dec
dec
(bad)
adc
(bad)
adc
cmp
jl
or
sbb
jno
cmp
or
dec
ss
movs
push
and
adc
rcl
or
xor
int3
sbb
sbb
fisttp
and
or
dec
out
add
aam
and
jle
call
ret
jg
cmp
jne
push
inc
cs
xor
adc
cmp
jmp
dec
push
ds
mov
pop
pop
sbb
and
jle
ret
and
ret
sbb
xchg
call
xchg
jno
out
popf
and
jle
stc
(bad)
sbb
add
jb
orps
add
mov
leave
enter
pop
sbb
and
leave
or
add
ret
and
add
xchg
inc
cmp
mov
shl
add
rcl
add
add
mov
mov
xor
jg
cld
push
add
and
nop
rcl
cli
(bad)
rcr
cld
xchg
fist
stos
sti
imul
pop
sete
ja
popf
xor
cs
stos
clc
sbb
mov
das
push
test
and
pop
push
jp
idiv
mov
data16
xor
add
div
sbb
in
mov
push
pop
push
pop
sbb
nop
xchg
sbb
mov
iret
sbb
or
nop
push
xor
jb
mov
daa
jl
cwde
xchg
push
cs
mov
add
shl
das
pop
add
fsubr
(bad)
push
add
cli
mov
outs
call
dec
jmp
mov
inc
jo
(bad)
xchg
(bad)
lds
mov
jno
sub
fcom
sti
(bad)
rol
inc
mov
sbb
sahf
jp
(bad)
mov
mov
pop
sbb
adc
sbb
scas
xor
scas
outs
push
shr
test
jge
add
push
arpl
cld
xor
jmp
fnstenv
lods
mov
aaa
pop
sub
inc
mov
sbb
mov
add
dec
jne
mov
jge
add
cmp
jge
pop
or
pop
jne
jmp
pop
pusha
adc
mov
(bad)
scas
xchg
mov
add
test
call
xor
add
cdq
cmps
or
mov
push
ror
mov
or
shr
mov
xor
xchg
mov
call
or
or
ret
mov
xor
je
es
cld
or
dec
jne
push
lock
inc
icebp
xchg
mov
mov
ds
adc
fimul
ret
movs
mov
test
mov
cmp
add
mov
int
xchg
push
pusha
add
popa
cs
mov
adc
pop
pop
or
ret
test
je
in
add
test
fsub
inc
in
adc
jmp
mov
or
inc
cs
rol
sub
pop
mov
jno
test
xor
mov
shr
sub
add
sbb
xor
jmp
add
mov
push
sahf
dec
mov
lock
loopne
ins
ret
dec
jmp
xor
popa
data16
cdq
xor
push
cmp
adc
jmp
fadd
js
scas
push
lock
jecxz
or
push
push
xchg
add
xor
fsub
into
dec
and
xchg
test
pushf
push
mov
add
in
test
jb
lock
adc
aas
arpl
ins
jne
jns
mov
clc
inc
dec
inc
in
jge
add
mov
mov
call
jge
jl
cld
lds
cmps
xor
and
mov
xor
hlt
xchg
push
daa
cs
jo
cld
ficomp
int3
add
(bad)
call
push
push
push
outs
imul
je
jns
es
sti
cmp
push
push
push
aaa
sbb
add
ja
(bad)
dec
inc
add
add
gs
fidivr
push
jb
jbe
dec
fsin
out
fdiv
add
dec
imul
gs
adc
ficomp
or
mov
popa
ins
es
mov
or
jae
ins
ins
outs
ja
data16
push
inc
je
pop
es
push
jl
xor
test
or
outs
and
pop
mov
xor
push
adc
push
popa
ins
imul
adc
or
popa
jns
fdivr
dec
inc
ret
es
and
xor
pop
xor
push
pop
jge
push
add
(bad)
clc
add
add
mov
push
(bad)
jmp
ret
pop
rol
add
add
mov
adc
xor
fiadd
add
fnsave
push
xor
dec
or
mov
ds
shr
or
mov
mov
push
xor
inc
daa
sub
dec
jne
mov
xchg
xchg
shl
or
or
mov
xor
push
rol
mov
test
jne
cmp
adc
jmp
or
or
add
inc
jmp
pop
pop
pop
ret
pop
push
arpl
shr
mov
sbb
pop
sbb
cwde
adc
lock
shr
retf
imul
bound
cmp
loope
push
add
xor
mov
dec
add
enter
repz
xchg
inc
jp
fadd
inc
cmp
retf
dec
cli
ins
add
cmp
or
inc
and
cld
call
adc
mov
bound
jbe
aas
and
jl
inc
xor
lea
inc
cmp
imul
pop
sub
add
sbb
jl
jmp
mov
std
xor
sub
cmp
mov
add
jo
cli
cmp
jne
fwait
data16
xchg
sub
dec
mov
fcmovnb
mov
and
push
add
dec
jne
push
mov
sbb
push
test
xor
mov
add
jmp
xor
mov
out
mov
dec
push
test
add
cmps
clc
dec
cmp
cmp
add
nop
inc
out
clc
popa
mov
scas
xor
xor
xchg
cmp
test
mov
es
mov
retf
out
xor
push
outs
inc
add
inc
add
dec
or
inc
add
dec
add
dec
daa
cmp
add
shl
clc
and
jecxz
loopne
adc
mov
inc
sti
push
rol
adc
icebp
pop
lds
je
mov
ds
sbb
dec
pop
adc
test
pcmpgtd
lock
jne
cmp
jne
push
pusha
adc
outs
ins
jne
out
or
test
mov
or
lock
push
rcr
jb
ds
enter
inc
inc
sbb
pushf
jmp
push
aaa
sbb
loopne
rol
sub
call
inc
pop
mov
pushf
adc
bound
and
add
enter
loop
sub
xchg
xchg
int3
adc
inc
jb
sub
dec
lock
mov
ja
push
fisubr
mov
cmp
sti
inc
jne
cld
mov
hlt
add
or
add
mov
je
adc
cmp
adc
into
adc
sahf
adc
adc
in
call
stos
popf
or
adc
pushf
mov
adc
call
or
cmp
xrelease
push
les
rcr
sar
outs
les
enter
clc
scas
sub
push
mov
call
xchg
and
dec
and
lock
adc
or
mov
xchg
dec
xor
mov
push
dec
sar
not
movs
and
mov
ror
push
jo
lds
add
dec
jne
mov
xor
shl
mov
pusha
aam
cmc
sub
dec
xor
push
jmp
adc
stos
jnp
mov
popf
leave
jno
pop
push
loopne
movs
sub
pusha
push
shl
mov
les
jbe
xor
adc
pushf
jl
js
inc
xor
sub
sbb
add
xlat
lock
sub
push
aam
adc
cwde
mov
or
mov
pop
mov
adc
fs
pop
or
push
pmuludq
xchg
rcr
push
xor
sbb
movs
pop
test
mov
and
pop
pushf
push
xlat
in
inc
lods
xor
fild
adc
pop
or
mov
(bad)
loop
cdq
js
test
add
data16
add
push
inc
dec
add
xor
sbb
imul
xchg
test
ror
sbb
push
in
rol
stos
adc
jbe
sbb
cwde
movs
adc
rol
adc
dec
push
dec
adc
cmp
inc
adc
pusha
push
jl
inc
dec
cmp
and
ret
ins
jp
adc
adc
jbe
loopne
mov
test
sbb
inc
and
cdq
ins
mov
sbb
pop
sbb
jmp
fcomip
pop
popa
xor
add
jo
ins
adc
clc
push
mov
mov
and
add
retf
call
scas
jg
and
mov
inc
into
add
xchg
jo
aas
xor
ins
push
daa
loopne
mov
mov
sbb
mov
dec
or
adc
lock
pusha
lock
inc
fisttp
in
(bad)
mov
sbb
mov
mov
jmp
(bad)
retf
inc
jmp
add
jp
add
bound
adc
loope
jg
sbb
xchg
jg
xchg
mov
cmp
mov
pop
call
lds
dec
fmul
dec
icebp
add
imul
add
jnp
xor
clc
push
inc
pop
or
xor
mov
xor
movs
or
pop
pusha
aam
jmp
daa
cli
repnz
and
xor
inc
dec
ret
pop
call
xchg
or
sbb
arpl
in
fcomp
loop
cmp
call
je
call
add
bound
push
and
add
call
xor
jecxz
fst
cdq
mov
xor
jmp
jmp
xor
mov
test
add
lods
rcl
loopne
loope
push
loope
sbb
or
mov
bsr
cmp
iret
push
push
mov
cs
in
in
popa
enter
in
xlat
(bad)
xor
inc
retf
add
vorps
mul
mov
mov
fnstcw
rol
sub
and
mov
ret
repnz
cdq
je
push
ret
pusha
ret
xchg
mov
mov
shl
mov
pusha
ret
mov
xor
call
push
jo
push
mov
test
ds
loopne
ja
xchg
ds
mov
bound
push
and
adc
test
push
xlat
mov
mov
leave
aaa
cmps
xor
mov
pop
or
mov
xor
fst
sbb
xor
xor
je
lahf
inc
sub
mov
dec
arpl
int3
sbb
dec
push
add
jo
shr
add
ja
push
sub
jge
jbe
mov
mov
cdq
xchg
inc
or
ud0
pop
in
inc
cmp
jne
punpckldq
push
mov
push
and
jecxz
jl
pop
dec
jno
fistp
sbb
mov
lds
(bad)
fdivr
xor
or
sti
shl
iret
out
jp
dec
cmp
rcr
(bad)
or
inc
xchg
enter
sbb
cmc
adc
or
mov
loope
mov
cmp
inc
or
mov
inc
add
scas
shl
add
mov
mov
daa
int3
jbe
cli
mov
or
xor
jno
int
lock
jb
adc
mov
lock
or
icebp
or
mov
bound
pop
xchg
test
je
push
or
cmp
inc
outs
pop
sub
xchg
in
mov
lahf
mov
adc
inc
push
ror
dec
sbb
(bad)
in
idiv
aam
repz
jb
pop
addps
fs
cwde
call
rol
das
mov
mov
and
imul
ret
adc
or
cmps
mov
sub
sub
mov
gs
push
sub
cmps
pop
clc
jae
inc
fcomp
aaa
jp
adc
iret
pop
aas
pop
retf
ror
retf
mov
xchg
jno
or
sub
add
loope
push
ins
mov
jge
test
adc
cwde
sub
dec
sbb
cs
rcl
mov
inc
stos
or
xchg
ret
in
ins
cli
lahf
xchg
cmps
cmps
inc
or
rol
sbb
or
or
fadd
pop
iret
int3
xchg
js
data16
xor
xchg
sbb
lds
mov
jae
lock
cmp
nop
stos
clc
xchg
ret
inc
xchg
push
push
push
mov
inc
dec
cmp
and
out
out
pop
js
js
or
adc
or
mov
inc
jnp
or
lods
(bad)
jnp
pop
inc
mov
shl
inc
leave
inc
pop
add
jg
aam
cmp
je
pop
jne
shl
jmp
mov
ja
ds
mov
stos
loopne
mov
cmps
cmp
push
mov
sub
jle
inc
frstor
jo
(bad)
jmp
sub
push
rcl
je
xchg
(bad)
cmp
imul
inc
sub
add
leave
jg
mov
add
stc
and
xor
(bad)
mov
mov
dec
lahf
push
clc
xchg
mov
inc
jl
push
(bad)
retf
push
push
mov
sbb
lock
mov
jo
cmp
cmp
enterw
and
mov
adc
cmp
(bad)
call
fst
stos
loope
pop
mov
rol
stc
ret
or
mov
sub
xor
in
and
push
add
cli
leave
repz
es
cmp
xlat
xor
pop
xor
shl
lahf
add
aad
rcr
retf
rcr
pop
or
push
push
mov
mov
sbb
mov
aam
sub
lock
mov
(bad)
add
dec
mov
jo
cmps
add
fadd
sbb
shl
and
and
cdq
jo
fwait
adc
test
in
or
mov
xchg
jns
fdivr
xor
repnz
push
(bad)
pop
jg
(bad)
adc
test
push
pop
or
xchg
sar
loopne
mov
outs
inc
push
lea
pop
jl
push
add
hlt
jae
pusha
aam
pop
test
popa
xor
dec
mov
add
imul
push
fidivr
ds
sub
lods
dec
lea
in
arpl
sbb
jmp
xor
call
mov
pop
repz
jb
fcomp
js
mov
mov
or
inc
int3
xor
push
les
mov
pusha
ret
inc
sar
imul
xor
push
arpl
(bad)
push
arpl
or
pop
test
inc
and
pop
dec
push
mov
jne
outs
sub
or
sbb
mov
cmp
and
cld
call
movs
xchg
mov
or
xor
add
pop
xlat
inc
or
xchg
lea
cli
and
fldenv
pop
push
daa
outs
xlat
pop
fstp
(bad)
mov
xchg
dec
es
out
sti
and
xchg
(bad)
and
cwde
sbb
popa
jl
sub
(bad)
mov
dec
call
inc
das
push
das
aas
adc
cmp
jno
mov
xor
test
and
outs
lds
push
and
retf
and
nop
cmp
or
add
loope
push
clc
xlat
nop
or
add
test
inc
pop
xor
dec
add
mov
scas
clc
push
mov
mov
pop
jb
push
stos
sub
mov
mov
mov
mov
jge
xlat
or
mov
xchg
or
lock
mov
pop
js
scas
stos
call
fild
and
aaa
out
sbb
push
(bad)
or
pop
pusha
mov
add
fld
adc
adc
sbb
or
pop
dec
loopne
(bad)
mov
xor
mov
add
mov
cmp
je
inc
dec
jne
or
push
or
cmp
out
pop
test
test
jl
inc
test
adc
cmp
cmp
in
dec
xchg
dec
jne
not
ja
dec
rcr
or
push
and
sub
pop
test
adc
aam
inc
iret
fstp
aas
enter
pop
add
mov
push
inc
sub
je
mov
shl
(bad)
jge
and
test
xchg
sub
out
sbb
push
cmp
fldcw
movs
jae
(bad)
mov
xor
mov
lock
xor
push
clc
imul
shl
dec
outs
(bad)
pop
or
jge
enter
add
daa
inc
push
cmp
and
jmp
mov
jmp
jle
jae
pushf
cwde
push
int
inc
xchg
inc
pop
test
inc
stos
cdq
xchg
sbb
mov
push
add
fsub
or
cmp
pop
int
sub
jnp
mov
mov
icebp
aas
pop
inc
retf
cmp
je
jp
cmp
push
mov
pop
jne
adc
pop
fld
scas
push
mov
and
test
jmp
or
push
jle
cmp
jmp
inc
std
jl
push
or
int
adc
ret
out
mov
lock
sub
cmp
inc
iret
add
sbb
fcomp
mov
xor
add
push
faddp
fcom
aad
mov
xor
inc
in
push
shl
pop
retf
or
push
cli
int
cwde
cmp
jge
mov
ror
mov
cmp
pop
xchg
ss
fucom
movs
dec
and
call
inc
fcmovb
adc
xor
repnz
out
add
xchg
mov
mov
(bad)
or
sti
bound
ja
test
xor
adc
cmps
out
dec
mov
inc
loopne
dec
dec
dec
push
xchg
shl
jmp
xchg
cmps
sahf
or
in
nop
add
shl
sbb
aad
xlat
add
adc
push
mov
inc
loope
mov
xchg
fild
mov
stos
pop
shr
push
stos
loope
pop
inc
mov
cwde
mov
test
mov
sub
mov
arpl
shr
ss
mov
dec
push
push
lahf
dec
mov
pop
pop
loop
add
cmps
fld
shl
mov
fcom
or
inc
push
xchg
dec
mov
lods
add
xchg
pop
mov
rol
or
xor
bound
sbb
mov
or
movs
or
xor
jmp
inc
xor
jg
mov
call
movs
jbe
pusha
js
mov
add
in
movsx
movs
sbb
test
inc
xchg
sub
movs
push
dec
dec
mov
lods
daa
inc
aad
jp
dec
movs
mov
add
in
scas
pop
mov
mov
mov
dec
jno
jle
mov
cwde
mov
dec
or
or
aam
dec
ja
addr16
into
push
mov
push
pop
clc
jg
fcomp
cmp
jb
mov
(bad)
fiadd
mov
and
rcl
xlat
push
fcom
cmp
jb
fstp
mov
add
jne
jae
mov
mov
pop
ror
outs
int
shl
inc
ja
aam
mov
add
or
add
loopne
in
fwait
cmp
cmps
inc
stos
add
and
fwait
adc
add
loopne
jo
xchg
lea
inc
push
in
mov
or
add
sub
inc
add
jne
xchg
das
int
add
jae
jge
data16
sub
dec
adc
lods
inc
xchg
xor
pop
sub
in
(bad)
(bad)
jg
jae
add
pushf
inc
mov
cmp
and
aaa
xor
cmp
sbb
cmps
inc
push
pusha
cmp
sbb
mov
aam
out
idiv
inc
add
(bad)
clc
int
test
mov
repz
cmc
xchg
or
es
add
sub
sbb
mov
push
jmp
pusha
aaa
cli
ret
jge
addr16
or
test
sbb
mov
pop
les
xchg
push
inc
inc
mov
neg
inc
pop
int
sub
dec
(bad)
cmp
jae
xor
cli
pop
sub
cmp
jle
shl
push
ins
sbb
aaa
mov
out
or
mov
sete
cmps
jl
sar
out
cmp
mov
xor
mov
call
or
or
and
dec
pushf
in
cs
lods
lock
scas
lock
adc
jns
mov
cld
jge
jae
aas
xchg
adc
aas
cmovnp
pop
std
ins
daa
mov
or
mov
adc
test
push
pop
push
movzx
cmc
mov
sub
hlt
or
xlat
adc
(bad)
mov
sar
jmp
test
or
test
int
mov
cmovl
mov
mov
iret
mov
xor
push
or
leave
icebp
add
and
cmp
add
sub
enter
ret
dec
push
sub
xor
xlat
test
(bad)
(bad)
ror
sub
sub
sbb
fisttp
xchg
or
test
je
sub
ins
test
retf
xchg
inc
mov
nop
inc
dec
(bad)
test
pop
xor
aad
add
lea
push
(bad)
mul
arpl
scas
fwait
jnp
adc
fild
cmp
inc
dec
adc
aas
cmp
in
stos
xlat
mov
xor
retf
enter
jno
sub
mov
outs
or
ror
jg
ret
or
bound
xor
jg
adc
in
out
mov
push
jo
or
adc
jo
mov
outs
movs
arpl
lds
ficom
push
movs
ret
mov
add
mov
dec
mov
mov
aam
nop
int
push
in
sub
xchg
xchg
scas
or
jmp
movsx
cmp
fild
pop
xchg
scas
push
loope
loopne
fwait
dec
pop
mov
mov
mov
pop
or
adc
dec
xchg
loop
js
dec
jne
adc
pop
(bad)
push
sub
pushf
pop
xor
jl
xchg
jmp
xor
cmp
sub
xchg
arpl
repnz
pop
pop
jecxz
push
adc
jne
add
push
or
xlat
lods
ins
mov
mov
aam
fcom
inc
or
fdivr
nop
sub
push
call
mov
ins
aam
or
sub
cmp
bound
add
push
adc
je
fstp
ficom
jne
sub
sbb
nop
inc
test
sbb
xor
outs
popa
add
sbb
test
sbb
mov
inc
arpl
adc
test
inc
rcl
ins
inc
add
stos
nop
sbb
mov
add
mov
mov
in
push
in
dec
outs
clc
jge
push
fldenv
jns
add
adc
icebp
add
clc
add
out
sub
clc
add
(bad)
shl
jle
loopne
pop
inc
ret
xchg
enter
pop
je
(bad)
cmp
add
dec
daa
mov
stos
add
ja
rcl
aam
lea
mov
push
cmp
mov
sbb
lds
leave
mov
push
cmp
loop
sub
out
sub
dec
or
pop
ret
push
add
mov
cmps
cmps
push
mov
clc
mov
sbb
imul
int3
cmc
inc
sahf
mov
cmp
pop
lock
imul
movs
jle
lds
xor
sbb
xor
adc
cmps
(bad)
adc
sti
mov
ds
in
xchg
jb
dec
cwde
ins
pop
sub
dec
sub
sbb
in
mov
(bad)
cmp
ja
movzx
cmp
jne
fadd
push
pop
sub
inc
mov
mov
lods
dec
jne
push
or
mov
sbb
(bad)
adc
and
jge
dec
aam
add
add
fchs
and
adc
bnd
add
xor
jbe
jp
pop
push
daa
or
xchg
data16
sub
cmc
cmc
sar
cmps
cwde
inc
test
push
sbb
mov
jne
pop
lock
adc
xor
mov
das
fadd
(bad)
jp
or
lock
jb
mov
pop
adc
loopne
push
push
pop
shl
xchg
or
jge
in
mov
adc
jae
jo
cmp
jb
fcom
sub
ror
add
jae
ja
ret
inc
(bad)
xchg
pop
or
in
cmc
out
inc
das
mov
cmp
jge
adc
cmp
dec
or
(bad)
call
dec
xor
inc
pop
es
or
or
push
sub
lahf
or
xchg
adc
and
ret
(bad)
adc
xlat
pop
push
mov
rcl
or
xchg
ss
jge
sub
jle
mov
push
pop
aad
push
add
pop
inc
pop
jbe
frstor
enter
mov
sub
mov
xor
ret
jg
aad
and
jecxz
std
call
fldenv
int
idiv
mov
sbb
mov
pop
push
add
(bad)
push
dec
ins
or
into
dec
inc
lods
xlat
fdiv
shl
add
and
cld
in
shld
in
add
aas
jae
cli
pop
inc
adc
fild
cmp
sub
in
inc
cmp
inc
xor
dec
sub
xor
or
sub
or
das
fiadd
add
push
add
pop
or
add
(bad)
mov
iret
clc
outs
loopne
mov
sub
jmp
dec
lock
lock
inc
adc
(bad)
loopne
adc
mov
adc
(bad)
and
mov
add
ret
and
(bad)
sbb
lock
jo
cmps
mov
jge
fld
sub
push
adc
and
adc
adc
dec
jge
pop
mov
push
add
test
or
jno
push
xor
inc
loop
pop
add
sbb
xor
push
movzx
fcomi
addr16
dec
xor
push
retf
lea
pop
mov
jecxz
aad
jae
enter
frstor
ins
fadd
jge
push
sbb
xlat
cmp
shl
sar
jbe
fld
std
in
and
pop
xor
hlt
jp
ret
adc
xlat
add
movs
mov
fstp
fcomi
(bad)
cmp
ja
and
bt
cs
jne
enter
cmps
mov
sbb
sti
or
mov
xor
add
ds
inc
or
pop
loope
mov
call
adc
sub
(bad)
xor
addr16
shl
add
repnz
pop
xchg
or
ret
cwde
push
test
fucomip
sub
xor
inc
or
push
les
inc
adc
shl
fdiv
loope
sbb
push
push
ret
xor
or
adc
mov
jle
mov
add
inc
push
int3
dec
outs
push
sbb
adc
push
cli
add
jmp
mov
adc
ret
jge
xor
add
pushf
add
pop
cs
lock
inc
dec
int3
aas
adc
mov
sahf
clc
xchg
lahf
sar
sub
add
icebp
push
or
rol
mov
jno
adc
push
inc
inc
mov
repz
call
pop
mov
pop
pop
cmp
cmp
cmova
in
icebp
inc
(bad)
repnz
test
mov
add
mov
(bad)
xchg
push
mov
push
lea
xor
adc
loope
gs
pop
gs
pop
aam
pop
xchg
pop
gs
jle
out
inc
xchg
xchg
inc
popf
mov
test
push
fisttp
clc
sub
or
mov
cmp
jbe
sbb
pop
add
test
jne
out
shl
add
fcom
pop
jecxz
pop
cmp
xchg
add
and
mov
imul
dec
and
je
imul
sti
(bad)
dec
ds
inc
xor
mov
rcr
xor
cmp
pop
mov
jmp
inc
dec
jne
add
mov
or
into
sub
xchg
fwait
js
pop
add
sbb
pop
inc
sbb
or
pop
ins
sbb
push
adc
mov
mov
lds
push
ficomp
xchg
xchg
ret
mov
iret
test
xchg
jmp
xor
mov
mov
rcl
stc
clc
cmp
sbb
outs
sub
inc
nop
sub
mov
jnp
movs
push
cmp
mov
push
dec
dec
push
fild
int
jne
shl
fstp
sbb
loopne
jecxz
lea
mov
retf
jp
and
xlat
pushf
in
das
dec
add
inc
xor
sti
mov
cli
inc
lock
inc
cmp
jle
das
push
(bad)
pop
and
pop
jo
ja
or
mov
ins
call
out
push
jge
or
jmp
dec
jno
and
sub
adc
push
add
and
sbb
push
or
cmp
inc
or
mov
fld
loopne
sbb
cmp
ror
jae
sub
add
xor
(bad)
or
call
sti
aas
mov
mov
push
lea
xor
jg
xchg
mov
mov
jb
mov
adc
sbb
movs
fadd
das
call
inc
cmp
mov
cmp
inc
jg
je
adc
mov
fwait
test
or
add
or
(bad)
adc
adc
cmp
ja
jmp
mov
jb
sub
ja
add
fs
and
scas
je
or
sbb
(bad)
sbb
sub
dec
cwde
punpcklbw
jmp
jle
mov
jo
popa
lock
leave
in
dec
push
jmp
sub
pop
jmp
mov
rol
adc
scas
or
jmp
je
jbe
mov
mov
(bad)
scas
jne
not
add
add
ret
out
sbb
jp
mov
sub
iret
add
adc
mov
inc
inc
aad
arpl
std
out
hlt
lahf
adc
adc
loop
push
rcl
lock
or
loopne
and
inc
clc
je
outs
mov
add
mov
or
rcl
inc
pop
data16
in
in
aas
ret
jle
cs
stos
add
rcr
ror
inc
dec
call
jae
outs
jo
or
mov
lods
jne
lea
inc
ror
pusha
lea
test
lock
or
xchg
ret
sub
add
mov
(bad)
sub
(bad)
pop
aad
rcr
sbb
arpl
jo
and
ja
dec
test
cwde
push
push
jo
or
push
dec
mov
add
or
std
and
mov
xor
mov
loopne
ret
test
jns
daa
aaa
mov
pop
pop
push
mov
and
sar
mov
enter
adc
push
xor
test
jbe
dec
scas
in
lea
fmul
sbb
dec
push
iret
add
dec
push
fidiv
adc
add
or
cmc
clc
iret
in
mov
and
mov
cdq
mov
and
and
and
fwait
int3
fmul
and
mov
or
ret
rcl
jp
enter
cmp
or
mov
movs
lock
mov
pop
jg
popa
scas
in
jle
push
sub
add
imul
pop
push
or
inc
(bad)
enter
cmps
std
dec
mov
add
sar
test
jle
mov
das
sar
sbb
sbb
jmp
inc
inc
dec
jne
inc
test
xchg
mov
jne
mov
push
mov
add
mov
add
cld
pop
push
ss
mov
ds
sub
stos
adc
std
inc
mov
test
add
sbb
inc
fcmove
dec
or
je
mov
adc
and
cmp
push
test
shr
push
jmp
ins
cmp
and
mov
lods
xor
adc
or
mov
scas
or
fdiv
in
or
xor
push
shr
dec
aam
aam
shr
lods
xor
lods
call
test
ins
fsubr
mov
inc
int3
or
mov
xchg
shr
cwde
adc
fadd
sar
sub
cdq
loop
push
int3
ret
nop
dec
inc
mov
jp
fcomp
inc
jo
mov
xchg
jbe
js
and
cmps
xchg
add
xlat
mov
std
add
or
outs
dec
loope
mov
popa
mov
pop
cwde
in
loop
or
push
pusha
jl
js
stc
mov
add
(bad)
sbb
xchg
mov
ret
popa
add
pop
cs
pop
add
femms
mov
test
stos
rcl
sub
sub
xchg
pop
sub
pop
lea
or
cmp
inc
test
dec
pop
test
cmp
inc
sub
cmp
dec
pop
mov
mov
xor
push
mov
mov
call
pop
(bad)
hlt
push
mov
inc
test
(bad)
dec
gs
gs
ins
inc
dec
dec
out
int
fwait
xchg
sub
cmp
pop
imul
xchg
push
fistp
add
lods
mov
xor
iret
inc
mov
scas
push
(bad)
push
daa
cmps
inc
jo
enter
add
add
push
dec
(bad)
stos
out
adc
movs
mov
rol
(bad)
mov
repnz
or
pop
adc
jb
movs
hlt
outs
std
jo
mov
push
inc
sub
push
mov
xchg
scas
jp
or
scas
test
mov
cld
int3
and
test
into
cmps
mov
imul
mov
lods
(bad)
ds
sub
and
fwait
pushf
inc
mov
mov
inc
xchg
lods
mov
cmp
hlt
pop
ret
jmp
mov
or
add
add
sub
cwde
test
dec
push
cmp
inc
lods
xor
xor
push
adc
jge
in
call
stc
dec
mov
add
es
mov
add
xlat
enter
mov
jbe
pushf
hlt
dec
push
mov
push
push
js
call
ret
les
loopne
push
faddp
jle
(bad)
add
popf
or
clc
push
pop
pop
je
aam
ficom
push
sbb
rcl
ins
push
xchg
and
fst
adc
and
dec
(bad)
lods
add
add
jecxz
jecxz
cmps
mov
hlt
ja
pusha
sbb
jecxz
cmp
push
clts
in
cmp
dec
fild
add
mov
and
add
pop
jg
dec
push
movs
cmp
xchg
sti
inc
jno
inc
and
inc
lahf
add
adc
loopne
pop
sub
lahf
pop
push
or
in
pop
add
mov
popa
add
or
push
or
(bad)
aaa
pop
adc
jns
movs
stos
mov
add
lock
rcr
jno
dec
and
sbb
or
push
jo
les
(bad)
jmp
in
mov
mov
lods
xor
jne
lea
add
mov
push
pop
jmp
xchg
xchg
pop
jb
push
fstp
loopne
mov
in
aaa
dec
inc
or
mov
cmp
ret
or
cmp
das
pusha
ret
sbb
push
xor
sub
and
loopne
inc
push
inc
fdiv
nop
cmps
add
aaa
add
sub
inc
mov
cmp
or
test
ret
inc
push
in
mov
ret
adc
mov
inc
imul
mov
inc
cmp
mov
xchg
pop
add
cmp
inc
cmp
inc
sahf
jo
adc
adc
push
jg
jmp
sbb
sbb
repnz
sar
sub
mov
setl
inc
push
loopne
adc
jmp
ins
rcl
jns
(bad)
lock
add
cmp
jge
push
loope
adc
dec
push
push
add
ret
test
fnstcw
sub
dec
je
adc
stc
mov
out
out
sub
xor
in
daa
or
outs
mov
ret
sbb
sbb
(bad)
fxch
retf
in
cwde
sahf
fbstp
sub
mov
nop
mov
sbb
add
sbb
and
push
cmp
or
ret
push
retf
sbb
jmp
sbb
lods
in
inc
mov
pushf
cld
shr
sub
mov
mov
add
or
nop
nop
sub
in
or
pop
push
adc
xor
cmp
or
adc
sbb
pusha
xor
sbb
loopne
cmp
cmp
or
dec
xor
bound
xchg
sbb
pushf
addr16
addr16
into
pop
data16
cmp
add
sub
mov
pop
cmp
je
push
es
add
mov
cmp
das
push
test
je
shl
add
jne
adc
or
mov
add
pop
push
mov
xchg
cmp
xlat
lea
fadd
mov
xchg
xchg
call
ret
adc
mov
mov
xchg
and
cmp
das
mov
jmp
mov
or
adc
sub
cs
adc
mov
push
inc
adc
inc
mov
and
in
pop
or
mov
or
(bad)
popf
scas
sub
inc
ret
adc
jbe
push
jl
call
inc
ins
shl
out
push
mov
inc
adc
(bad)
not
xchg
mov
cli
sbb
or
push
adc
xor
and
ds
push
sbb
daa
add
mov
adc
mov
test
cwde
or
and
push
and
imul
adc
in
push
mov
loop
pop
add
stos
xor
loope
(bad)
lock
adc
pop
sub
xchg
dec
jmp
sbb
cld
add
stos
cmps
sub
add
inc
add
out
popa
ins
or
or
(bad)
and
jae
int3
(bad)
clc
shr
sbb
or
pushf
xor
pop
cmp
(bad)
jmp
jle
scas
cmp
add
mov
out
or
mov
xchg
xor
mov
cmp
retf
mov
ret
pop
js
loopne
repz
in
rcr
sub
call
sbb
imul
call
mov
cs
mov
cld
(bad)
dec
add
mov
(bad)
movs
push
push
inc
jmp
shr
mov
mov
sysret
popa
inc
ror
js
jge
inc
adc
scas
leave
scas
or
or
xlat
add
xor
jg
pop
arpl
lds
jo
add
sahf
mov
push
sub
push
add
push
movs
(bad)
mov
add
xchg
push
xor
outs
pop
xchg
sbb
rcr
or
sar
jns
adc
dec
fdivr
enter
push
loope
mov
ds
or
ss
sub
out
push
xor
xor
xor
and
add
imul
or
sub
inc
mov
cmp
(bad)
in
jbe
test
add
xchg
mov
xchg
xchg
in
stos
fld
inc
or
cli
mov
outs
push
sub
dec
cs
mov
mov
shr
mov
inc
movzx
and
adc
out
jo
enter
pop
add
pop
add
mov
push
sub
mov
std
fistp
adc
shl
or
mov
ror
cld
rol
dec
jne
or
pusha
add
jle
fidiv
test
sbb
sub
and
dec
test
adc
sub
popa
push
nop
add
pop
and
out
ja
xor
out
stos
out
push
inc
push
into
outs
push
or
(bad)
mov
cld
sbb
js
sbb
lods
pop
adc
jg
or
push
add
push
push
cmp
iret
call
fidivr
dec
inc
push
push
add
data16
sgdtd
cmp
cmp
mov
mov
cmp
push
mov
mov
adc
pushf
mov
dec
inc
jle
or
or
fistp
or
in
mov
add
and
push
or
push
xchg
mov
cld
ret
arpl
aam
xor
clc
push
or
or
loop
fcom
inc
jge
mov
sbb
imul
fld
mov
cmp
out
mov
adc
lea
sbb
retf
in
daa
sahf
xchg
data16
xor
push
cmp
add
(bad)
pusha
(bad)
inc
mov
lea
movs
add
cmp
push
ds
sub
pop
(bad)
sub
add
pusha
shr
lods
mov
loope
cmps
retf
add
adc
inc
mov
int3
sub
dec
push
jle
pop
mov
adc
pop
mov
int3
and
jb
ficomp
ja
push
imul
data16
fiadd
cmp
ins
ds
scas
jnp
add
mov
stos
mov
sbb
js
das
in
adc
inc
xor
and
scas
push
jne
rcl
rol
shr
scas
cmp
add
rol
mov
sbb
outs
cmp
(bad)
aam
adc
or
mov
xor
stos
xor
jbe
cmp
fldcw
inc
cmps
push
fsub
shl
jmp
xchg
(bad)
sbb
lahf
sub
dec
fistp
sbb
(bad)
cmp
xor
push
cmp
cmp
sbb
retf
jbe
xor
jbe
in
pop
mov
fiadd
mov
push
cmps
pushfw
inc
pop
js
add
inc
mov
dec
sbb
mul
in
adc
sub
(bad)
inc
das
xadd
nop
sub
out
xchg
jo
xor
call
push
fist
adc
jbe
inc
xchg
imul
ja
mov
cmp
outs
out
mov
stos
lea
shl
sub
xchg
jl
and
dec
test
dec
nop
popa
je
xchg
xorps
icebp
mov
ja
int3
jbe
into
mov
push
rcr
mov
cmp
je
lock
sub
or
and
xchg
or
sbb
fwait
aaa
or
into
sbb
psubb
lea
mov
mov
clc
add
adc
shl
dec
fidiv
jmp
out
add
dec
push
test
iretw
add
sbb
ja
addr16
aas
push
das
lea
push
or
sub
inc
dec
nop
in
add
jmp
gs
int3
sar
and
aaa
ret
or
push
dec
pop
jbe
daa
call
sbb
pop
arpl
cmp
sbb
hlt
lods
lock
and
(bad)
outs
jl
fstp
jbe
cmps
inc
xchg
dec
dec
inc
iret
cwde
jbe
bound
mov
test
lods
loopne
and
ins
(bad)
out
push
call
inc
dec
jne
jmp
lods
jecxz
fsubr
jl
inc
cmp
jne
jle
fisttp
ror
pop
outs
sbb
mov
or
mov
ret
sub
add
xchg
add
pop
adc
push
add
sbb
or
lods
mov
scas
adc
sbb
or
hlt
int
inc
or
inc
or
div
add
ret
ja
sub
jl
mov
add
dec
adc
xchg
add
inc
sbb
adc
cmp
test
out
jb
or
shr
je
sti
add
mov
repnz
(bad)
addr16
addr16
jns
fs
adc
repz
adc
fisub
out
aam
and
jo
popa
jg
in
in
call
cmp
xchg
and
mov
in
(bad)
(bad)
cld
test
pushf
mov
clc
call
mov
push
push
mov
les
push
or
xchg
fdivrp
xor
sub
mov
sbb
inc
cld
mov
mov
into
jl
cpuid
cmp
imul
adc
jbe
jle
xchg
jbe
push
xor
sub
push
lock
pusha
pop
cwde
push
sahf
pop
pop
iret
enter
xor
popf
loopne
xor
pop
sub
out
test
cwde
push
inc
cmp
add
inc
ja
neg
scas
add
add
cld
data16
add
cmp
pop
js
int3
aas
je
jnp
mov
push
or
add
test
cwde
xor
mov
pusha
mov
pop
push
lock
sbb
push
and
push
ds
in
jl
push
push
loopne
dec
adc
pop
ja
inc
dec
hlt
out
inc
push
cwde
xchg
pop
out
idiv
cmp
ins
imul
jo
scas
add
das
aaa
xor
fdiv
imul
xor
inc
mov
sub
test
jo
pop
sbb
and
aaa
and
(bad)
xchg
pop
add
or
sbb
enter
pushf
mov
adc
jmp
push
add
push
mov
mov
out
add
dec
mov
shl
lods
mov
and
clc
push
push
aaa
cmp
xchg
das
pop
in
push
out
idiv
fdivr
or
aaa
mov
jo
push
popa
mov
into
inc
retf
add
aam
jne
not
scas
aaa
dec
mov
xchg
add
std
cmps
ror
jle
sub
add
iret
push
adc
adc
imul
fstp
sar
repnz
pop
mov
in
mov
push
mov
cld
mov
and
or
fadd
jne
rcr
pop
cld
xchg
setge
push
jo
dec
sbb
rol
jmp
pop
bound
push
fcomp
or
inc
push
cmps
mov
jmp
fs
imul
ret
(bad)
ja
push
inc
or
jae
popa
adc
or
push
in
inc
pop
add
dec
jae
pop
jo
sbb
dec
sti
pop
sbb
push
push
push
popa
jb
ins
and
xlat
outs
xchg
dec
or
mov
int3
mov
or
push
dec
inc
test
or
pop
or
das
or
jg
pop
test
daa
jg
sub
pop
das
or
jg
daa
data16
cld
(bad)
test
and
inc
push
push
push
dec
dec
gs
push
xor
sub
add
rol
loope
add
xor
fs
push
mov
sub
outs
jne
gs
adc
xor
or
mov
je
mov
and
pop
movs
shr
or
iret
cdq
enter
sbb
cmp
push
loopne
movs
inc
ins
test
mov
or
add
push
or
add
lods
push
jge
ja
or
mov
fistp
add
xor
add
outs
sbb
add
ror
adc
push
stc
mov
dec
lea
xchg
dec
pop
ret
call
mov
test
mov
push
push
fwait
cmc
ins
test
jo
ja
adc
fcomp
das
pop
je
call
xor
das
test
cli
fiadd
mov
sbb
fsubr
pusha
pushf
or
push
rol
(bad)
out
jle
loopne
add
std
imul
xor
adc
inc
inc
jb
not
in
push
inc
add
call
lods
jmp
gs
cmp
jns
push
(bad)
cmp
or
inc
jb
add
xchg
xor
rol
add
or
push
gs
int
ins
xchg
mov
mov
jnp
or
div
pop
leave
add
into
mov
or
jae
ins
cs
js
je
loop
test
jae
add
outs
test
pop
cmp
fimul
(bad)
push
cmp
or
fsubr
add
pop
int3
psrld
sbb
lahf
sbb
rcr
jne
fs
xlat
pop
enter
xor
pop
sub
mov
or
in
ss
mov
mov
sub
imul
add
xor
sub
pop
xchg
xchg
(bad)
add
push
iret
in
xchg
dec
pop
(bad)
prefetchnta
pop
fdiv
add
jmp
push
movzx
dec
mov
sbb
push
jmp
add
adc
jecxz
or
cmp
add
adc
call
cs
ins
gs
pop
rcl
mov
aaa
push
inc
icebp
mov
mov
adc
mov
xor
and
mov
in
movs
jp
mov
pop
in
jle
arpl
pop
xlat
inc
cmp
or
jbe
jb
es
mov
jecxz
add
fbstp
mov
sub
adc
fist
xchg
cmp
sub
sub
not
adc
adc
cs
cmp
mov
ss
push
pop
and
add
sbb
adc
in
out
mov
stc
sbb
push
arpl
sbb
add
in
inc
mov
mov
das
ficomp
push
add
push
xchg
mov
pop
shl
adc
inc
call
pop
int3
xchg
in
pop
mov
std
daa
nop
push
and
add
enter
sub
pusha
fstp
cmp
out
sti
or
lea
mov
in
push
fidivr
and
or
mov
mov
mov
pop
inc
(bad)
jb
jb
cmp
sub
shl
sub
xor
loopne
cmp
aam
pusha
inc
add
das
sbb
mov
sub
call
shl
sub
dec
cmp
iret
les
push
add
fsubr
cmc
not
jmp
jle
clc
int
xchg
fimul
sub
dec
(bad)
jo
sub
add
jo
imul
push
stos
push
push
jmp
xchg
mov
sub
push
add
cld
cmc
icebp
test
and
xchg
jne
loop
rcl
and
add
dec
mov
test
add
mov
mov
or
jl
add
add
inc
pusha
mov
inc
push
jl
and
xchg
je
pop
rcr
aam
sti
scas
push
rcl
les
add
add
jns
je
sub
lock
inc
cmp
lods
jg
jge
dec
jne
cmp
pop
push
push
push
push
push
push
mov
adc
add
adc
movs
sub
mov
push
cs
hlt
pusha
mov
and
cld
enter
xchg
add
dec
fmul
loopne
dec
es
or
adc
cdq
fs
retf
and
xchg
sbb
sbb
retf
and
js
and
sbb
or
mov
mov
sub
mov
mov
sub
or
xchg
movs
pop
xor
push
mov
push
cmps
mov
cli
mov
and
outs
add
inc
xor
loope
add
and
add
shr
push
outs
addr16
jns
gs
js
dec
gs
in
jbe
dec
outs
cmovno
push
jne
fnstsw
jl
inc
imul
mov
inc
outs
cmovg
pop
outs
xchg
(bad)
(bad)
adc
inc
ins
jo
xor
jb
ins
push
je
and
push
cmp
mov
and
add
inc
outs
outs
ins
inc
jae
pop
dec
pop
pusha
outs
fstp
pop
(bad)
pop
outs
add
inc
shl
inc
jb
adc
pop
mov
gs
test
pop
sub
mov
dec
xchg
push
mov
pop
adc
jno
popa
ins
or
xlat
and
jae
add
bound
je
and
jmp
push
lea
jmp
mov
inc
ds
test
in
dec
stos
add
or
sbb
enter
movs
push
sub
add
inc
sti
dec
outs
scas
push
loopne
cld
daa
push
xlat
sub
push
sbb
or
movs
push
xor
test
loop
ins
loope
imul
push
scas
mov
sub
test
push
pop
fs
mov
stos
xor
out
push
lock
add
jo
pop
or
test
loope
cmp
pavgw
add
es
cmp
ins
shl
push
add
add
jmp
jmp
add
add
push
or
test
imul
or
test
xchg
femms
add
add
push
adc
mov
add
es
fadd
mov
push
mov
call
lock
nop
nop
mov
dec
add
adc
jbe
or
cmp
adc
mov
leave
add
mov
inc
mov
jns
push
repz
jae
ins
shl
cmc
iret
mov
and
les
inc
popa
mov
add
fcmovnu
enter
jns
push
push
outs
jne
arpl
add
sysexit
push
jg
adc
adc
mov
xchg
loope
and
stos
dec
call
dec
inc
pop
add
mov
sbb
or
sbb
jo
xchg
add
or
imul
and
imul
jns
jo
or
push
out
cmps
scas
add
mov
cmp
out
dec
adc
aas
inc
pop
push
stos
aas
rol
ins
mov
or
pop
iret
fmul
ret
shl
arpl
imul
fcomp
pop
ja
scas
jmp
add
cmp
mov
ins
test
outs
outs
jae
imul
daa
pop
adc
(bad)
rcr
sbb
pop
xor
xor
push
inc
sbb
frstor
nop
jmp
push
jmp
js
push
pop
imul
pusha
mov
add
jno
out
not
test
push
dec
add
outs
imul
or
(bad)
call
add
mov
retf
mov
jg
push
mov
fadd
es
mov
shl
or
mov
xchg
inc
inc
xchg
ret
sbb
add
or
ins
stc
jne
hlt
jmp
int3
int3
adc
inc
and
sub
inc
out
push
mov
or
sub
mov
mov
xor
cmp
push
add
dec
pop
and
inc
inc
pop
push
iret
adc
cs
mov
push
push
test
iret
xor
pop
out
push
inc
dec
mov
add
dec
jb
movups
push
pop
outs
sbb
push
adc
push
dec
push
push
call
sub
test
outs
inc
jne
cdq
inc
stos
outs
sahf
or
xchg
add
mov
mov
lock
popa
ins
inc
fs
fadd
mov
(bad)
or
outs
mov
cmp
mov
lods
or
loopne
(bad)
popa
push
add
inc
gs
xor
sbb
lods
ja
pop
push
mov
leave
add
or
test
push
xor
add
add
xchg
retf
arpl
std
(bad)
arpl
mov
mov
mov
and
bound
dec
data16
or
int
push
lea
inc
push
push
cmc
or
xchg
xchg
dec
int
push
jbe
fimul
sbb
scas
sbb
out
xor
mov
into
push
inc
out
faddp
popf
mov
or
dec
jo
fild
sbb
push
cmp
mov
push
lea
pusha
dec
jg
fsubr
mov
push
cwde
stos
jg
inc
cmp
ds
xlat
add
xor
or
dec
ja
pop
add
cvtpi2ps
pop
out
js
jbe
data16
outs
ja
xlat
add
sub
push
fadd
and
xor
in
pop
sub
cmp
cmp
add
mov
and
jg
popa
push
loopne
sub
jg
jg
add
jae
dec
enter
pop
pusha
pcmpgtd
inc
stos
cmp
pop
sub
inc
mov
add
sub
inc
es
ja
out
fwait
inc
pop
sbb
and
or
push
sbb
mov
neg
pop
cmp
add
pop
fsubr
loop
shr
ror
or
push
cmp
or
xchg
pop
add
outs
cpuid
jg
or
adc
dec
ins
jo
ja
rol
outs
frstor
in
dec
push
js
push
and
mov
adc
dec
jne
dec
push
xor
sbb
aaa
stos
fucomip
cmp
cmp
push
jo
mov
cmp
adc
sbb
jecxz
push
jg
push
outs
sub
arpl
xchg
cs
cmp
add
jg
pop
or
pminub
sub
jno
inc
imul
push
and
inc
pop
push
add
loopne
outs
adc
push
adc
shl
out
sbb
adc
add
and
ins
ins
pusha
lds
inc
cmps
or
inc
enter
push
loop
std
inc
push
or
outs
addr16
les
loopne
test
add
rcr
and
jae
xchg
popa
xchg
sahf
jne
add
cmp
imul
cmp
mov
xchg
dec
cmp
dec
mov
add
ins
retf
pop
or
add
sbb
add
(bad)
push
add
loop
push
push
pushf
cmp
or
or
(bad)
adc
jecxz
idiv
push
push
xor
mov
add
pop
sbb
inc
jnp
lock
mov
push
mov
inc
ins
(bad)
pop
pusha
adc
clc
es
inc
lock
xor
push
xor
mov
fisttp
and
in
pushf
jae
push
scas
popf
lods
cmp
ins
jecxz
xchg
ret
pop
or
sub
cmp
out
or
adc
out
or
jae
cmps
push
cmps
mov
dec
xor
cmps
xor
xor
(bad)
retf
cmp
cmp
and
add
daa
xchg
push
rol
pusha
xor
pop
jb
pop
cmp
push
cmp
and
and
int3
shl
outs
pop
sar
or
jg
je
sbb
je
sub
sub
stos
mov
jmp
push
fdivr
dec
je
jmp
in
sbb
lahf
gs
mov
cmp
fs
dec
adc
jmp
out
(bad)
pop
jmp
inc
mov
adc
mov
in
pop
xor
jmp
mov
clc
retf
pop
xor
popf
outs
loopne
sub
sbb
or
or
cmps
sub
in
test
fcomp
or
cmp
in
jb
inc
dec
mov
mov
sahf
call
inc
(bad)
mov
dec
inc
or
sub
loopne
mov
loopne
mov
sub
rcl
arpl
cli
int3
adc
mov
les
pop
add
fcomp
fdiv
add
mov
or
shl
idiv
imul
push
fistp
loopne
jno
mov
js
fimul
int3
jbe
stos
pop
pusha
inc
and
push
sbb
sub
jno
push
je
jmp
mov
mov
sti
in
in
push
aad
jmp
adc
pop
jle
jg
es
in
pop
inc
mov
inc
mov
test
sar
xchg
in
xor
stos
dec
(bad)
loopne
inc
repnz
jmp
inc
push
or
inc
push
jo
push
ror
dec
sbb
jmp
pusha
inc
ins
daa
and
push
popa
inc
je
add
jb
out
xchg
data16
popf
cmp
ins
dec
adc
mov
pop
inc
lahf
fdivrp
jecxz
inc
js
rcl
inc
sub
sub
fcom
js
pop
mov
or
lock
(bad)
out
adc
mov
stos
push
push
mov
test
jne
mov
rol
fwait
js
mov
xchg
and
cmp
jne
clc
loopne
loope
les
mov
mov
jmp
mov
mov
arpl
(bad)
je
xor
scas
pusha
lds
sub
push
jmp
jl
inc
mov
iret
mov
xor
inc
dec
jne
add
or
jne
mov
test
jle
fist
(bad)
adc
push
push
es
push
push
loopne
(bad)
push
xor
sahf
xor
(bad)
adc
lock
or
xor
add
jne
ret
cmp
out
inc
aam
repz
out
ins
jmp
sub
dec
jmp
add
jo
or
dec
outs
jmp
test
mov
(bad)
sub
cmp
ror
push
and
xchg
or
popa
mov
pop
sub
jle
mov
jne
int3
mov
sub
adc
pop
not
mov
mov
call
xchg
inc
hlt
jmp
cs
mov
adc
xor
or
cmp
je
popa
shr
cmps
or
add
push
inc
sub
jb
push
sbb
cmp
fwait
test
push
push
sbb
push
add
dec
scas
and
adc
or
retf
mov
loopne
mov
push
inc
inc
fisub
or
inc
hlt
cmp
push
nop
jbe
add
adc
and
fisttp
dec
or
inc
or
mov
mul
adc
jb
push
fadd
xor
mov
in
lds
xchg
pop
adc
sbb
call
inc
cdq
inc
inc
loopne
out
addr16
cmps
and
mov
dec
hlt
mov
mov
adc
mov
lock
mov
add
outs
add
add
scas
and
data16
dec
mov
mov
inc
pop
lock
xor
sub
cmp
push
mov
pusha
call
adc
(bad)
(bad)
int
sub
je
lock
and
cmp
jne
pusha
mov
jle
dec
jne
add
or
lock
aaa
push
or
das
cmp
sbb
xor
push
popf
mov
cmps
push
jmp
mov
rol
adc
push
add
add
ret
add
daa
jmp
test
pop
jo
jecxz
cmp
sbb
sub
push
inc
push
or
jne
mov
jmp
mov
jmp
mov
sbb
cs
ret
or
mov
mov
jg
push
mov
push
add
cld
inc
xor
dec
minps
fild
pop
cmp
push
or
outs
call
and
add
or
or
add
movups
adc
pop
sti
mov
or
adc
adc
push
scas
out
sahf
imul
dec
repz
adc
sub
dec
pop
cmp
repz
js
mov
xor
fdivp
in
and
push
icebp
shl
mov
stc
or
fs
xchg
jmp
mov
push
test
push
(bad)
push
or
int3
and
cwde
and
addr16
mov
mov
push
mov
sub
xor
jmp
cmc
sbb
outs
and
sub
ss
push
call
dec
sbb
outs
inc
out
mov
aas
xor
sbb
aaa
mov
outs
adc
cmp
sbb
clc
sbb
mov
and
mov
push
inc
stos
ins
addr16
xchg
and
das
cmp
xor
jnp
inc
mov
data16
in
cmp
dec
add
mov
jecxz
mov
xchg
push
mov
and
xchg
or
add
add
xor
add
and
push
jb
pop
sbb
or
adc
add
mov
scas
jp
dec
test
sti
(bad)
inc
sar
outs
hlt
mov
mov
call
rol
lods
mov
add
idiv
xor
test
push
sbb
inc
pusha
or
hlt
dec
pop
add
cmp
jmp
aaa
jbe
outs
ret
jl
lock
and
mov
je
adc
pop
les
or
jo
and
or
pop
mov
inc
dec
jne
loop
pop
lock
shl
push
mov
add
push
rol
jg
call
mov
cmp
dec
test
je
fstp
icebp
add
ret
pop
push
mov
jg
lahf
sti
inc
ins
jnp
mov
add
xchg
adc
pushf
xchg
jg
js
add
shr
pop
ds
pop
mov
mov
adc
pop
ficomp
and
or
add
shl
(bad)
clc
adc
clc
push
test
mov
in
add
adc
cs
sub
in
data16
jne
mov
or
pushf
cmp
test
jl
inc
xor
lea
js
cld
into
push
or
inc
mov
dec
jle
test
and
jmp
inc
sub
aas
sub
pop
mov
inc
add
dec
jne
je
ins
(bad)
stc
push
push
jno
mov
mov
add
push
rcl
adc
(bad)
or
adc
cmp
and
inc
xchg
xlat
lea
add
mov
mov
(bad)
repz
dec
int
jo
and
out
dec
pop
call
dec
mov
in
push
xor
icebp
pop
cmp
inc
call
cmps
js
fs
xchg
jmp
push
hlt
jp
cmp
xchg
dec
jbe
call
push
xchg
push
repnz
dec
ret
jl
inc
and
push
outs
sahf
clc
cmp
adc
jmp
mov
adc
test
push
mov
mov
and
(bad)
and
or
clc
sti
mov
sub
ja
ds
inc
je
or
inc
jne
out
adc
push
mov
and
dec
add
inc
lock
inc
push
inc
inc
fisub
mov
dec
mov
inc
adc
popa
das
loope
push
popa
push
push
or
test
adc
aam
jno
jg
pop
mov
repz
jecxz
push
or
daa
cmp
xor
jmp
inc
mov
inc
ja
fmul
cwde
xor
jg
ficomp
sub
fnstsw
in
jnp
xchg
adc
dec
mov
popf
add
mov
inc
sbb
inc
fmul
scas
push
retf
retf
dec
cmp
(bad)
or
add
jp
ret
adc
mov
xchg
cmps
jmp
repz
ret
in
push
add
push
and
ss
pop
add
jno
idiv
jne
pop
pop
mov
sahf
push
scas
rol
repz
cmp
or
add
js
adc
jmp
or
sbb
sbb
ret
and
fstp
cmp
push
and
sub
out
call
and
fcomp
sbb
adc
loopne
mov
sysret
mov
dec
ficomp
rol
xor
push
add
daa
adc
daa
mov
jmp
jnp
pusha
ss
add
ins
jge
pop
pop
dec
add
es
repnz
cld
(bad)
out
jmp
and
cmp
adc
jmp
arpl
push
ins
xchg
test
and
sub
mov
sub
dec
enter
jmp
add
fcom
inc
add
add
rcr
addr16
outs
push
cmp
ret
inc
imul
pop
add
js
popa
pop
outs
jmp
push
cli
(bad)
lock
cmc
lock
cld
or
loope
fnstsw
rcl
adc
pop
test
das
jno
imul
sbb
and
mov
or
push
xchg
cmps
mov
arpl
jo
or
and
xchg
pusha
inc
dec
xor
popf
ins
xchg
loop
pop
jns
sahf
je
sbb
and
jmp
test
push
xor
xor
(bad)
sub
jp
fs
add
in
sub
aaa
ds
es
jb
clc
(bad)
sbb
push
loopne
add
push
mov
mov
xchg
shl
mov
cmp
inc
xchg
mov
jae
pop
push
push
push
clc
or
out
adc
shr
or
std
adc
out
push
neg
pushf
jmp
xor
jp
xchg
retf
mov
call
mov
push
aaa
mov
mov
push
mov
out
sbb
cmp
add
cmp
sub
mov
cmp
or
adc
in
push
mov
rol
mov
imul
jns
out
mov
jne
mov
push
mov
push
(bad)
pop
pop
jns
neg
adc
daa
push
cmp
pusha
inc
jp
ret
jbe
repnz
aas
fmul
shl
shl
call
popa
fwait
into
pop
push
jbe
mov
dec
push
sti
add
shl
imul
enter
sbb
push
jl
cmp
mov
sbb
fwait
xor
cld
sbb
arpl
jmp
nop
pop
stc
fistp
jmp
lahf
loope
shrd
jbe
pop
or
fmul
mov
sbb
test
in
add
mov
aas
(bad)
jmp
mov
call
mov
sbb
rcr
add
sub
jbe
push
stc
and
or
outs
xor
das
or
adc
rol
sahf
je
dec
je
add
jmp
dec
push
jmp
jmp
mov
adc
xor
loope
jo
sub
pusha
daa
cmp
leave
push
add
add
or
sub
ficom
push
cmp
jg
cmp
sub
jne
jmp
sbb
mov
call
push
xor
sbb
in
loopne
mov
xor
test
or
mov
imul
je
sub
mov
bound
add
sbb
movs
push
call
movs
mov
jecxz
push
pop
xor
dec
push
xchg
sbb
and
push
ret
mov
inc
aad
adc
nop
retf
iret
fdivr
pop
cmp
xchg
sbb
in
pop
out
mov
inc
outs
dec
shl
mov
test
pop
enter
inc
pusha
das
xchg
or
pusha
and
call
xor
dec
pop
outs
scas
adc
es
(bad)
add
in
adc
push
lea
and
call
adc
or
mov
xlat
push
jmp
cs
or
je
mul
push
xlat
jecxz
adc
repz
rol
pop
jo
sub
iret
repz
xchg
out
call
iret
repz
nop
test
jmp
xor
and
cmp
lahf
movsx
sbb
stos
jl
pushf
(bad)
clc
mov
push
sar
cmp
pop
and
repnz
inc
jnp
add
fild
fdiv
enter
(bad)
adc
pop
call
ins
repz
imul
sbb
mov
loopne
cmps
jge
test
jns
scas
sub
dec
mov
add
das
shl
and
push
pop
lods
dec
std
pop
sub
pop
je
dec
je
lea
fisttp
adc
xor
sub
sbb
pop
sbb
pop
lock
out
mov
(bad)
(bad)
or
movs
enter
retf
fisubr
pop
jb
add
mov
jnp
in
cmp
pop
xor
cmps
pop
pop
inc
push
push
out
lods
shr
mov
jg
and
nop
ror
fst
jb
mov
dec
inc
fnsave
call
sub
fsub
xchg
(bad)
dec
inc
ss
test
and
in
or
mov
sbb
and
jge
jae
or
fsubr
pop
adc
out
cmp
jae
sbb
cmp
daa
push
ins
jmp
pop
stos
shr
pop
pop
dec
jp
aaa
popf
add
add
jmp
jmp
mov
enter
rol
push
push
loopne
int3
or
loopne
add
add
inc
inc
shl
popa
sub
jb
sub
add
je
or
fucomi
jl
sub
xor
pop
jo
popa
jg
pop
or
pop
adc
(bad)
xor
popa
nop
sar
xor
and
or
dec
jle
and
jmp
dec
pusha
retf
ins
ret
imul
mov
pop
addr16
add
dec
sbb
jne
or
rcr
or
add
mov
push
adc
add
inc
mov
int
outs
es
push
add
fidiv
dec
xor
push
or
adc
rcl
sbb
(bad)
xchg
pusha
and
mov
mov
dec
gs
mov
mov
add
push
imul
in
cmp
inc
pusha
dec
hlt
out
adc
add
jo
out
loop
ret
mov
or
add
add
adc
sahf
jnp
fdiv
push
clc
inc
push
or
popa
nop
xchg
mov
adc
loopne
mov
inc
sub
add
leave
mov
leave
xor
retf
mov
adc
(bad)
mov
or
xlat
mov
js
mov
mov
repnz
stos
or
mov
stos
or
pusha
iret
push
dec
or
inc
out
adc
fbld
pop
pop
push
test
mov
and
sbb
xlat
or
sub
and
dec
sbb
push
hlt
adc
add
cdq
mov
out
pop
sub
push
adc
shl
cmp
aaa
cmp
jb
daa
xchg
test
loopne
xor
aaa
sbb
adc
inc
pop
sti
inc
test
sub
or
xor
dec
sbb
imul
ficom
fdiv
je
fadd
pop
leave
into
xor
jge
jp
xor
out
mov
jg
adc
ror
shr
sar
(bad)
cs
hlt
dec
dec
dec
mov
(bad)
loopne
cmp
adc
adc
inc
jmp
in
or
adc
(bad)
push
out
std
push
out
call
out
pop
fcom
pop
sbb
(bad)
dec
xor
hlt
or
jecxz
mov
clc
add
mov
outs
pop
sbb
sbb
cmp
xor
scas
call
arpl
mov
push
mov
xlat
mov
cwde
adc
sar
mov
sub
ss
jle
mov
int
and
push
mov
dec
jg
mov
das
jnp
push
call
call
stc
cmp
xor
or
push
loop
out
jne
pop
pop
ins
push
jg
xchg
cmps
popf
sub
repz
test
stos
pop
clc
cmps
pop
cmps
arpl
mov
ret
pop
enter
and
ins
xor
and
mov
sub
sbb
packsswb
mov
sbb
inc
adc
shl
mov
xor
daa
retf
arpl
test
sbb
push
mov
fstp
pop
jne
sbb
cmps
jnp
sub
out
call
or
sub
jmp
dec
mov
jne
test
inc
or
and
cdq
in
and
int3
mov
xchg
test
jmp
pop
adc
mov
push
sti
cmp
and
cs
dec
popa
mov
je
call
pop
mov
jns
neg
sahf
push
mov
fldlg2
xchg
add
cmp
pop
sbb
or
leave
lods
daa
inc
add
or
das
fdiv
jecxz
and
and
adc
mov
xchg
or
sbb
push
inc
in
imul
pusha
adc
repz
gs
add
inc
int
and
cmp
data16
jb
add
inc
and
and
jmp
and
jmp
push
cmp
sbb
dec
dec
lods
jb
cmp
adc
inc
icebp
mov
xchg
mov
ret
sbb
cld
lahf
sub
jae
ds
jne
fwait
ds
xor
pop
sti
ds
push
sub
cmp
adc
sti
popa
fbstp
shr
test
or
or
pop
ins
ror
or
push
cmps
pop
xchg
ja
and
add
adc
ins
xchg
daa
mov
fdivr
and
invd
icebp
add
pop
pusha
mov
and
sbb
and
xchg
add
adc
add
adc
push
cmp
(bad)
pop
scas
test
adc
pop
push
cmp
jge
add
rol
sti
inc
(bad)
push
mov
jle
rcr
cmps
aaa
jne
sub
add
fst
jmp
and
test
push
and
jl
push
test
ret
mov
scas
pop
pop
or
dec
cwde
dec
iret
dec
add
add
inc
test
outs
push
sbb
ror
cs
outs
out
and
test
mov
push
pusha
das
jb
pop
and
adc
sbb
jmp
inc
inc
push
or
add
xor
not
jbe
sub
sub
jns
or
cld
push
adc
sahf
out
jae
cdq
stos
mov
test
mov
out
scas
or
retf
push
in
add
icebp
sahf
call
(bad)
jb
test
jne
jne
imul
jnp
clc
xchg
sbb
idiv
sbb
retf
mov
or
std
in
retf
stos
fcomp
fldcw
and
pand
mov
out
sbb
in
jns
push
sub
sbb
mov
cmp
sub
pusha
fucomp
xchg
pop
or
jne
and
lds
pop
sbb
cli
inc
dec
repnz
push
in
jno
sbb
sub
or
or
mov
sbb
mov
add
scas
adc
adc
iret
in
lds
leave
test
add
cmp
ss
pusha
je
imul
pop
sub
pop
xchg
repz
repz
ror
or
adc
sub
cld
jge
inc
push
loope
xchg
adc
fs
(bad)
fild
lea
sub
sub
xchg
sub
dec
call
add
mov
(bad)
jge
jno
sbb
mov
clc
push
cmp
ret
jmp
daa
xor
dec
lds
jmp
movs
sbb
jb
dec
or
clc
fist
mov
pop
imul
fcomp
shl
adc
aas
fcom
pop
in
jbe
mov
xchg
outs
rol
mov
add
jmp
rol
dec
ds
add
pusha
and
pop
cld
mov
fstp
fwait
jmp
jp
cmp
or
mov
aaa
cmp
sub
iret
xor
sbb
cmp
(bad)
rol
nop
je
push
mov
adc
ins
fst
mov
shl
inc
mov
in
outs
add
bound
lock
or
pusha
clc
scas
inc
add
pop
add
not
stos
mov
mov
out
cmps
mov
retf
cmp
out
add
mov
mov
pop
and
out
cmps
push
jle
rol
cmps
dec
xor
movs
add
mov
shl
test
fild
jns
add
popa
push
shl
mov
loopne
daa
push
jl
into
pusha
aaa
test
xor
out
fcmovne
sbb
and
jbe
inc
mov
push
movsx
push
sub
mov
push
mov
cmp
xor
cli
movs
cli
fild
fbld
mov
pop
push
dec
mov
rol
jbe
call
add
or
out
inc
bound
and
or
loopne
mov
jp
pop
rol
enter
ja
lds
nop
sub
movs
xchg
mov
pop
aaa
sub
mov
pop
nop
push
sahf
push
lods
mov
into
loop
inc
push
push
jns
popa
fld
dec
jo
sahf
out
js
mov
dec
xchg
ds
adc
adc
sub
test
daa
sbb
add
out
dec
pop
mov
inc
out
std
(bad)
add
call
sub
cmps
add
mov
xchg
pusha
dec
add
inc
or
mov
jo
rol
push
adc
lds
movs
cmc
jmp
dec
adc
jmp
add
ja
mov
fstp
stos
pop
sub
(bad)
lods
mov
loopne
fdivp
rcl
adc
aas
jb
or
sub
mov
push
nop
mov
mov
in
into
jnp
fdiv
sahf
out
ja
or
push
push
xor
dec
mov
sub
or
ret
popa
add
push
and
int
sbb
out
mov
sbb
cmp
sbb
inc
push
cmp
add
or
sub
and
sub
lock
xor
mov
(bad)
push
cmp
or
pop
lods
inc
test
push
es
mov
push
add
and
adc
inc
retf
add
xchg
aaa
loopne
in
or
test
arpl
ins
pusha
mov
pop
and
adc
sbb
dec
sahf
aas
jo
ss
adc
mov
pusha
sub
or
or
mov
ret
sbb
add
sbb
imul
sub
loopne
push
mov
in
or
pop
or
inc
pop
mov
neg
js
jo
pushf
adc
ret
push
pop
ret
dec
cmp
pop
ret
int
jo
repnz
xchg
aam
xor
mov
jmp
and
dec
scas
in
ret
dec
inc
nop
(bad)
pushf
push
stos
jae
repz
(bad)
imul
xor
repnz
add
sahf
out
outs
pop
sub
ins
xchg
pop
push
or
pop
cwde
fs
inc
cmp
ss
cmp
outs
jae
ret
sub
or
test
popa
inc
jge
cld
nop
lds
sub
test
pop
(bad)
sub
jmp
jne
das
fadd
test
mov
push
out
add
pop
push
fwait
push
sbb
aas
loopne
pop
mov
jae
sbb
cmp
inc
mov
and
mov
pop
pop
in
add
sbb
cmc
ret
jg
int
lods
jle
loopne
adc
jae
xchg
mul
(bad)
out
xchg
pop
rcl
push
fsubr
jmp
aas
pop
adc
pop
out
sahf
outs
pop
daa
ds
ins
sub
xlat
and
rol
cmp
nop
dec
xor
sub
adc
add
test
mov
loop
fadd
test
pop
adc
fadd
cmp
jmp
push
pop
jo
jmp
jne
lds
add
add
jb
outs
and
outs
jg
outs
xor
mov
outs
add
in
in
mov
shr
test
push
or
xor
popa
pop
cmps
add
adc
popa
sub
inc
pop
xchg
inc
and
ror
xchg
mov
sub
sub
dec
(bad)
cld
fild
sub
cmp
and
mov
aas
mov
pop
xchg
aas
xchg
pop
loop
inc
aas
fistp
cs
inc
sbb
in
xchg
sti
loopne
add
hlt
bound
(bad)
cmp
and
or
repz
xchg
fs
(bad)
mov
adc
mov
pop
and
imul
cwde
pop
push
push
cmp
pop
pop
jbe
pop
pop
outs
mov
movs
mov
loopne
test
aas
mov
in
xchg
test
mov
je
mov
es
and
adc
pop
push
mov
pop
test
push
fdiv
cmp
xor
(bad)
xor
cmp
cmp
aas
enter
adc
cdq
sub
daa
mov
jne
add
mov
shr
inc
and
fdiv
mov
fmul
pop
mov
push
cmp
xchg
pop
pop
mov
or
cmp
data16
clc
or
cs
popa
out
dec
push
data16
out
or
jne
mov
pop
mov
cmp
and
imul
or
pop
fadd
retf
and
bound
inc
xor
movs
add
bound
scas
rol
cmp
mov
and
push
cmp
test
mov
daa
inc
or
daa
xor
mov
cmp
adc
test
xor
add
xor
xchg
xor
add
loopne
cmp
or
or
mov
or
pop
adc
rol
movq
lds
add
cmp
push
add
mov
mov
ret
repnz
fwait
popf
push
mov
es
xchg
add
push
add
jb
je
dec
je
jmp
adc
test
clc
lea
adc
cdq
lock
sub
stos
out
int3
xor
sub
test
aaa
sbb
fdiv
add
jecxz
and
shl
pop
pop
ret
jmp
pop
stos
in
jmp
iret
or
dec
in
mov
lahf
sahf
pushf
xchg
test
inc
mov
and
or
sbb
push
leave
lahf
ss
jo
mov
jp
or
in
jns
mov
fs
div
in
cmp
push
xchg
mov
adc
cmp
dec
add
sub
jge
inc
retf
lea
loopne
add
icebp
inc
sbb
xchg
adc
mov
(bad)
ins
cmps
shl
je
sbb
inc
inc
addr16
(bad)
in
movs
inc
pop
ds
push
sbb
push
xchg
retf
adc
les
add
mov
add
jo
pop
jb
dec
jne
cmps
or
in
movs
rcr
ret
rcl
add
shr
repz
arpl
mov
push
dec
push
mov
fdivr
pop
pop
xchg
es
sbb
cmp
es
push
mov
jmp
sub
inc
mov
cmps
jo
in
pushf
jmp
lods
pop
ret
mov
mov
jge
scas
aas
aam
and
sar
fwait
mov
and
adc
add
fnstcw
cmp
mov
call
scas
gs
fmul
movs
mov
add
fs
clc
or
cld
jae
and
mov
movs
xchg
xor
xchg
inc
mov
aaa
cmp
xchg
inc
pushf
push
xchg
in
mov
mov
mov
test
xchg
mov
ds
loope
retf
add
add
nop
retf
sbb
or
aas
call
mov
xor
adc
sub
add
inc
aad
sbb
test
adc
rcr
cmp
jle
cli
ins
mov
icebp
jmp
jl
mov
or
movs
loopne
imul
pop
mov
push
jp
movs
nop
out
call
js
inc
cdq
arpl
cmp
pop
loopne
xchg
xchg
inc
and
push
or
aaa
lock
jl
test
mov
out
jne
xchg
push
mov
sbb
out
push
je
inc
mov
inc
pop
imul
adc
fimul
test
jmp
inc
pop
test
adc
pushf
(bad)
mov
adc
or
add
jnp
mov
and
dec
jo
test
mov
dec
ja
dec
shl
fld
sbb
enter
or
sbb
test
imul
add
mov
mov
imul
or
lea
sbb
lea
and
push
push
adc
(bad)
mov
mov
sub
hlt
inc
sub
or
jnp
dec
pusha
xchg
pusha
jo
ins
inc
and
cmp
push
push
dec
pop
mov
mov
sub
dec
xchg
retf
rcr
dec
add
dec
pop
xor
cmp
shl
or
out
aad
adc
push
in
in
adc
retf
push
jmp
and
test
bound
(bad)
pop
test
dec
xchg
xor
scas
jbe
add
lea
push
and
add
dec
ins
cmp
test
or
push
pop
mov
jne
test
out
dec
push
xor
inc
cwde
mov
inc
test
adc
out
xchg
dec
push
push
enter
fild
in
movs
adc
in
inc
jl
call
and
dec
jmp
xchg
or
adc
test
bnd
adc
sub
(bad)
inc
(bad)
in
aaa
add
sbb
xchg
test
mov
jge
push
es
xchg
cmps
xchg
fs
mov
out
or
mov
pop
loopne
xchg
inc
pop
or
pop
(bad)
xor
outs
and
add
mov
mov
xor
fmul
sub
popa
xor
cdq
lea
mov
outs
cmp
ja
cmp
sub
inc
push
pop
inc
dec
jmp
arpl
sbb
scas
lods
ins
les
jnp
pusha
xchg
lods
sub
add
sbb
out
call
or
cwde
push
pop
push
pop
pop
jns
jns
mov
into
push
jmp
cmp
cs
mov
mov
outs
movs
lods
lods
fldcw
movups
xor
xor
sbb
mov
and
push
lea
pop
sbb
imul
cmp
imul
popa
jmp
inc
mov
pushf
inc
fisub
xor
(bad)
clc
xor
(bad)
clc
bndstx
sub
outs
xor
bound
adc
jp
sbb
inc
pop
xor
jne
xor
mov
adc
cmp
mov
enter
and
sbb
jmp
xchg
jo
sbb
pop
popf
addr16
pop
loopne
test
and
cmps
cld
inc
xchg
pop
jmp
xchg
gs
sbb
push
fwait
mov
je
mov
frstor
lods
test
stos
cld
lahf
lods
pop
adc
push
cmp
ds
(bad)
stos
in
outs
xor
outs
in
inc
push
(bad)
adc
sbb
fstp
shr
repnz
fmul
mov
inc
(bad)
and
adc
in
sbb
add
dec
fcom
fmul
adc
pop
or
adc
inc
fnstsw
xor
sbb
shl
(bad)
and
sbb
leave
pop
hlt
sbb
mov
cdq
adc
push
(bad)
mov
xor
fucomp
lahf
dec
or
push
(bad)
jmp
push
lock
jbe
dec
sbb
and
test
sbb
xchg
fst
sbb
test
mov
les
and
inc
and
adc
leave
jns
adc
sbb
xchg
and
inc
mov
(bad)
mov
inc
fs
test
scas
pop
dec
imul
je
cmp
popa
jb
xchg
jmp
std
jno
fs
jmp
and
jno
ins
mov
jmp
adc
xchg
sub
xor
cmp
shl
gs
push
dec
add
xor
cmp
adc
in
int
data16
test
inc
pushf
jae
lods
jo
test
in
(bad)
jmp
pushf
mov
sahf
je
or
adc
jmp
adc
scas
add
push
add
add
(bad)
in
sbb
sub
mov
jae
iret
sar
or
sahf
out
cmp
mov
(bad)
pop
repz
push
mov
push
je
sahf
neg
jmp
iret
push
jmp
push
stos
or
jno
dec
jmp
cmp
xor
test
fiadd
test
js
pop
out
adc
retf
movs
cs
xor
mov
aaa
or
retf
test
xor
and
inc
push
cmp
or
xor
test
fstp
or
xchg
xor
into
jnp
cmp
outs
jmp
jno
sub
test
xchg
or
(bad)
pop
cmp
(bad)
lock
pop
push
add
inc
mov
popa
adc
xchg
pop
xchg
pop
test
jns
push
cdq
loopne
inc
push
out
pusha
jae
sbb
inc
or
cmp
push
sub
sub
inc
aaa
or
test
hlt
test
mov
sahf
out
cmp
xchg
cmps
mov
icebp
dec
test
jbe
add
aaa
jne
xchg
xor
xchg
fsub
(bad)
or
jmp
fcom
adc
test
adc
and
adc
popf
dec
inc
or
add
lock
test
pop
div
aaa
pop
(bad)
scas
ret
add
cmp
popa
imul
dec
or
cmp
inc
add
mov
cmp
inc
cmp
nop
or
jne
mov
popa
ret
movs
leave
dec
pop
adc
or
mov
ret
dec
repnz
and
bound
imul
inc
cmp
add
icebp
test
sub
dec
icebp
dec
sbb
or
icebp
dec
xchg
fadd
jmp
or
inc
add
(bad)
int3
stos
and
inc
jge
rol
xor
mov
pop
imul
sbb
jno
nop
popa
loopne
add
cwde
nop
in
inc
mov
adc
and
and
add
not
pop
mov
loopne
fs
cmp
sbb
fcomp
ret
or
aas
repz
popa
xchg
mov
(bad)
out
int
loop
shl
xchg
or
dec
aam
jb
sbb
or
je
jmp
sub
xchg
sub
sub
ss
xor
shl
inc
sbb
xor
sbb
pop
add
ja
push
cmp
sbb
mov
dec
add
jmp
(bad)
and
ins
je
ja
enter
hlt
add
sbb
pop
adc
ja
inc
or
retf
ret
pop
pusha
ss
mov
or
movs
xchg
mov
lock
add
pusha
mov
ins
outs
jbe
pusha
leave
push
outs
dec
leave
jb
adc
and
inc
pop
shl
push
mov
fdivr
test
je
xchg
sub
mov
pop
dec
jl
and
push
mov
add
push
sbb
pop
jmp
mov
mov
pop
call
adc
lds
cwde
jo
and
out
xor
or
aaa
rol
pop
jg
rcl
add
mov
test
adc
push
or
or
mov
adc
fadd
ret
pop
pop
xlat
adc
add
inc
push
dec
dec
xor
shl
dec
or
fsubr
lahf
push
adc
or
push
pop
movs
loopne
shl
add
shl
push
in
aaa
dec
sub
fstp
fwait
pop
outs
pop
inc
(bad)
cmc
mov
fstp
fwait
push
or
and
add
aas
inc
and
inc
aas
pop
pop
fisttp
add
inc
pop
jg
call
je
mov
mov
out
add
fdivr
iret
mov
sahf
inc
sbb
mov
inc
add
mov
cmp
ins
cli
or
enter
clc
call
(bad)
push
repz
cwde
adc
mov
sbb
outs
add
mov
(bad)
sub
push
popa
push
mov
in
nop
cwde
cwde
push
pop
jecxz
add
xchg
pop
adc
push
adc
inc
fdivr
mov
mov
mov
add
dec
pop
xlat
loope
loopne
jl
es
pop
jle
clc
pop
call
clc
mov
mov
shl
cmp
jne
fld
mov
push
imul
pop
jg
lods
cmp
add
cmp
test
dec
xor
std
inc
lock
jb
je
dec
je
jmp
sub
dec
pop
rcl
mov
jmp
inc
add
pop
jo
test
fucomip
push
dec
test
je
xor
(bad)
call
adc
or
outs
jns
ja
jmp
jg
and
cmp
jb
and
psubusb
xchg
jno
xor
or
aaa
(bad)
iret
mov
jmp
out
shr
mov
mov
sub
pop
lea
loope
or
mov
push
cld
sub
push
clc
jmp
mov
and
cmp
jae
push
jmp
push
mov
inc
mov
(bad)
xchg
push
and
mov
mov
pop
sbb
ja
jmp
sub
xchg
popf
sbb
cli
cmp
mov
(bad)
popf
push
mov
jbe
mov
sti
adc
aaa
sub
and
or
jne
inc
mov
inc
mov
mov
pushf
xor
loope
in
xor
out
lds
mov
push
inc
mov
je
or
call
fild
out
pop
imul
sar
mov
sub
mov
std
pop
inc
inc
aad
sbb
mov
push
movs
movs
dec
and
pop
(bad)
fild
cmp
or
cli
or
call
outs
add
outs
ret
mov
cs
mov
mov
mov
sub
icebp
push
hlt
push
je
dec
adc
adc
adc
dec
dec
push
mov
sbb
sub
jb
in
sti
xor
dec
je
jmp
jmp
or
xchg
jmp
cwde
cmp
push
shl
and
cmp
adc
je
adc
ins
xchg
jmp
mov
pop
pop
cwde
inc
jns
or
aaa
sbb
inc
fiadd
sbb
xor
inc
pop
ja
dec
ds
sbb
xor
mov
mov
mov
popf
sbb
loopne
jle
cld
or
adc
enter
push
iret
lods
adc
cmp
jne
cmp
jae
mov
mov
xor
or
das
jbe
xchg
fstp
pop
ret
pop
inc
ss
dec
add
push
daa
jbe
imul
fcomp
fstsw
sahf
pop
adc
gs
push
fild
add
fcompp
cmp
xor
in
pop
adc
jle
sub
shl
ror
shl
add
cmp
jns
jbe
cmps
adc
add
pop
and
out
out
std
sahf
je
outs
cmp
push
jmp
add
aam
les
push
push
mov
mov
out
push
sub
sar
loopne
retf
add
adc
add
add
dec
push
xchg
dec
and
lds
lock
jmp
cmp
dec
pop
scas
clc
sbb
out
jns
imul
xchg
inc
push
call
add
sbb
mov
mov
cmp
scas
and
or
mov
and
clc
xlat
loopne
jmp
nop
push
pop
jbe
ds
loopne
and
push
xor
enter
adc
inc
jmp
nop
cmp
adc
jl
test
cld
sbb
cmp
and
mov
and
inc
fsubr
outs
dec
fsubr
pop
inc
xchg
ja
sbb
sbb
mov
cmp
xlat
dec
xchg
loopne
sti
mov
jmp
aas
jb
mov
inc
sbb
cmp
mov
cmovno
and
in
stos
fdivr
sbb
loop
out
inc
test
js
pop
jae
jne
add
jo
pushf
xor
cdq
mov
mov
mov
in
add
mov
add
mov
jle
jmp
dec
sar
push
or
xor
push
add
je
xchg
sbb
hlt
je
inc
fcomp
ins
xchg
(bad)
mov
hlt
addr16
push
into
cli
ss
jo
dec
gs
(bad)
ds
mov
cld
mov
mov
xor
mov
ret
add
inc
add
loopne
inc
xor
mov
(bad)
popf
test
add
mov
iret
or
dec
test
(bad)
mov
dec
sti
or
fs
sub
dec
cmp
adc
movs
sbb
pop
xchg
mov
push
fcom
push
add
add
sbb
add
add
push
and
stos
cmp
inc
cli
or
sbb
bnd
mov
rol
pop
sbb
mov
mov
ret
or
stc
cmp
lds
test
pop
mov
loopne
sbb
imul
sahf
push
or
add
nop
iret
fsubr
jo
loop
and
shl
mov
jl
or
adc
fisubr
lods
inc
mov
adc
fs
xchg
mov
mov
mov
mov
sbb
add
rcl
push
popa
sbb
dec
pop
inc
cmp
jmp
xor
xor
call
jl
dec
mov
xchg
xor
ficom
sbb
adc
or
ror
sbb
or
push
test
add
clc
inc
push
mov
call
int
mov
add
jo
fnstsw
in
je
jns
repnz
add
ins
add
cmp
pop
push
pop
popa
xor
faddp
out
imul
push
dec
sub
addr16
mov
push
jb
mov
addr16
cdq
cdq
xor
outs
aaa
inc
add
loope
jnp
bound
out
xor
int
xchg
add
jp
push
push
add
dec
jbe
out
cwde
sbb
jmp
xchg
pushw
jae
jae
add
das
jecxz
fnstenv
inc
add
jb
aaa
push
es
sbb
xor
push
es
ja
push
call
mov
nop
(bad)
in
nop
xor
inc
daa
pop
jae
int3
inc
pop
xor
fild
aas
shl
or
inc
inc
or
jne
pop
das
push
imul
or
mov
out
xchg
add
pop
retf
add
add
cmps
xor
jp
push
xchg
(bad)
push
sbb
fwait
retf
mov
scas
pop
inc
call
xlat
mov
jmp
shr
cs
jne
(bad)
mov
jl
cmp
sbb
dec
out
sub
push
push
adc
inc
inc
xchg
push
and
push
nop
(bad)
push
cmp
mov
inc
aas
pushf
in
and
inc
sub
add
in
clc
sbb
pop
rcl
jns
fwait
outs
fstp
hlt
je
(bad)
and
int
retf
and
inc
sub
mov
push
ret
enter
je
sub
popa
cs
mov
adc
repz
sub
mov
sub
xchg
cs
pop
(bad)
aas
inc
es
pusha
dec
popa
fs
and
aaa
aaa
push
mov
mov
or
add
xor
loopne
inc
dec
adc
or
mov
add
add
push
sbb
pusha
adc
add
xchg
jle
mov
and
es
cmp
je
or
or
cs
and
sbb
mov
pop
push
lea
push
sub
adc
adc
adc
lock
xchg
mov
or
jmp
stos
lock
inc
aam
mov
pusha
and
rol
mov
daa
add
sahf
inc
xor
into
sub
add
int3
and
out
scas
adc
or
rcr
sahf
je
or
push
inc
push
pop
mov
(bad)
pop
cdq
int3
test
lods
mov
jnp
sbb
sub
rol
movs
add
dec
cmp
imul
xchg
in
pushf
loopne
loop
outs
push
loopne
adc
adc
gs
and
mov
aaa
adc
sub
cmp
and
jmp
pop
mov
into
add
aam
cli
add
inc
cmp
and
xor
jle
adc
push
push
call
add
xor
push
pop
mov
jmp
icebp
adc
push
inc
nop
add
sub
aaa
dec
adc
or
jb
ror
call
inc
mov
push
cmps
(bad)
jmp
mov
mov
test
setne
or
sti
ret
test
je
adc
out
fstp
ret
or
or
std
inc
pop
add
jo
push
jle
dec
(bad)
adc
mov
push
rcl
jg
or
inc
sub
inc
sar
jns
adc
dec
cmp
jge
pop
clc
dec
test
jl
inc
(bad)
(bad)
mov
jmp
xor
sub
inc
mov
add
and
call
jne
lea
or
pmuludq
jl
js
rcl
cmp
fnstcw
data16
pop
mov
push
push
pop
mov
pop
pop
inc
add
push
ret
lock
and
retf
xchg
inc
loopne
out
mov
cmp
imul
lea
sbb
push
nop
or
lods
xchg
fisubr
dec
cmps
sbb
or
rcl
mov
outs
and
xchg
rol
fld
mov
scas
ss
adc
aas
neg
xchg
pop
test
cmp
or
sar
or
popa
and
ds
xor
fidivr
adc
sbb
retf
stos
fwait
hlt
jmp
inc
dec
and
ja
cmp
push
inc
adc
repz
pop
sbb
push
adc
jbe
sub
xor
ins
or
cmp
sub
in
lea
lea
inc
or
jle
pop
or
jp
cmp
je
cs
aam
or
sub
in
loop
inc
xchg
and
pop
nop
and
pop
mov
fild
push
adc
test
test
in
lods
pop
or
adc
dec
movs
and
mov
pop
in
in
xor
fidiv
add
sbb
pop
ret
xchg
clc
retf
push
mov
inc
jle
push
dec
jns
push
sahf
or
pop
lea
add
cmp
push
dec
out
mov
ss
daa
xor
inc
out
and
fs
rcl
out
adc
mov
int3
or
sub
repnz
sub
inc
jg
cmp
ss
fstp
cmp
call
jne
imul
mov
add
xor
ins
out
dec
inc
adc
pop
xchg
push
mov
daa
ins
fwait
(bad)
sti
and
add
adc
or
jne
push
push
or
clc
inc
push
mov
jbe
rep
out
add
mov
or
std
outs
fcomp
test
jl
mov
cli
cdq
dec
sbb
hlt
mov
in
xor
aam
adc
jo
(bad)
fild
je
outs
jne
fs
jb
popa
jns
add
mov
out
pushf
adc
je
ins
cs
jae
xor
sahf
inc
add
(bad)
mov
test
jmp
pop
xor
adc
cmp
pop
pop
pop
mov
(bad)
out
sar
xlat
call
stc
add
sbb
pop
clc
aaa
aaa
mov
jmp
mov
jle
pop
mov
das
out
push
pop
push
stos
inc
or
dec
daa
(bad)
cmps
ret
push
adc
push
push
mov
add
aaa
mov
scas
lock
aad
fadd
cmp
rol
add
jmp
or
add
jbe
xlat
add
cmp
jl
pop
mov
pop
addr16
mov
cmp
jne
push
push
cld
add
ror
jp
out
in
add
adc
out
add
or
je
(bad)
or
adc
shr
enter
dec
cli
(bad)
mov
push
mov
stc
push
xchg
test
mov
add
add
lods
mov
neg
(bad)
mov
push
adc
ret
int3
aam
aam
or
out
lods
sbb
clc
jne
mov
inc
push
repz
jle
jmp
inc
add
dec
dec
sub
ins
ret
mov
adc
test
sbb
fwait
xchg
jp
ss
or
data16
mov
inc
pop
inc
call
jo
ror
jl
inc
xchg
mov
loope
jne
or
inc
pusha
lock
sbb
fsubr
in
jae
jne
mov
mov
dec
adc
pop
(bad)
hlt
add
mov
jl
into
dec
call
jmp
or
add
inc
xchg
mov
cli
enter
imul
cwde
mov
fs
or
mov
clc
or
inc
sbb
pop
rol
fiadd
loopne
shl
nop
sahf
cwde
pop
iret
repz
imul
mov
jp
enter
call
xchg
sub
push
jmp
dec
jae
adc
mov
or
adc
pop
dec
adc
movups
scas
jge
mov
inc
adc
xor
jge
das
mov
movsx
mov
cmps
fsubr
repz
into
aas
and
and
xchg
xlat
(bad)
(bad)
sbb
bound
sbb
xlat
into
mov
cld
test
cs
ficomp
mov
stos
jo
iret
mov
(bad)
movs
ins
mov
sbb
push
sub
sbb
dec
in
cwde
mov
pop
(bad)
inc
jmp
(bad)
jmp
sbb
cmp
mov
sbb
sbb
in
sbb
sub
daa
rcl
sub
add
cmp
std
cmps
cwde
jmp
xlat
sar
rcr
adc
pusha
jmp
pop
sbb
or
pop
(bad)
sub
adc
inc
or
ss
and
nop
jne
inc
and
lock
mov
movs
cmp
mov
sub
sub
push
mov
movs
adc
mov
mov
idiv
or
inc
mov
add
xor
rol
repnz
adc
pop
jbe
in
ds
aas
cmp
push
mov
inc
and
pop
jge
data16
mov
shl
add
push
loop
xor
popa
(bad)
fcmovnbe
ret
fwait
ds
rol
jne
dec
bound
dec
add
inc
xor
lea
fs
neg
xor
inc
xor
adc
inc
dec
jne
adc
stos
or
retf
aam
add
into
add
adc
daa
int3
lods
inc
(bad)
push
push
pusha
das
and
shl
neg
sbb
xchg
shl
mov
daa
adc
test
test
mov
cli
xlat
and
loop
push
xchg
retf
pop
and
xor
call
fcmovu
ficomp
lods
mov
push
fmul
shr
int3
scas
sti
jne
pop
es
pop
cmps
adc
xlat
sbb
lods
xchg
pop
xchg
push
cmps
push
mov
cmp
out
test
das
ja
cmp
xchg
pop
jge
das
sub
pop
loope
and
in
jmp
xchg
or
pop
imul
xchg
pop
jbe
dec
rcr
daa
mov
push
or
pop
nop
mov
jmp
fstp
mul
in
fstp
fwait
jmp
enter
xchg
movs
mov
mov
or
sub
stos
cmp
cmp
jbe
stc
or
and
jnp
sbb
sub
pop
ror
cmp
mov
inc
pop
mov
scas
push
and
sbb
cmps
push
fidiv
cmp
sahf
je
inc
push
add
aad
aad
fstp
nop
push
mov
jmp
test
aad
cmc
jmp
ss
xchg
add
ror
sti
test
shl
sub
pop
xchg
retf
fistp
mov
jmp
xor
cmps
call
ins
push
mov
dec
std
cdq
or
cmp
jl
pop
push
sub
cmp
cs
sub
push
mov
sbb
and
mov
mov
push
mov
mov
cmp
adc
inc
adc
jnp
cli
inc
movq
push
mov
inc
sbb
jbe
fs
pop
ret
mov
pop
pop
xor
jl
mov
xor
call
mov
scas
aaa
sub
clc
mov
pop
cld
sbb
sub
rcl
outs
pop
int
dec
or
leave
dec
xor
(bad)
leave
mov
mov
or
push
sahf
clc
xchg
xchg
fistp
rol
movs
call
mov
mov
call
mov
pushf
aaa
lahf
iret
les
shl
sbb
xchg
scas
add
mov
mov
idiv
pusha
(bad)
jg
retf
mov
mov
shl
sub
fcomp
cmp
ret
jle
cli
mov
jnp
in
je
mov
sub
or
(bad)
sar
ja
daa
dec
sub
jl
mov
mov
inc
dec
jne
sub
(bad)
cmps
test
inc
leave
fsub
imul
add
les
test
jbe
adc
and
lods
sbb
cmps
add
les
aam
ficomp
mov
mov
lock
pop
push
jecxz
and
cmp
out
icebp
ins
xor
mov
mov
dec
cmp
inc
test
sub
add
xchg
pop
fidiv
push
xchg
cmp
sbb
call
leave
int
xor
cmp
loopne
push
inc
add
inc
movs
popf
in
sub
push
unpcklps
(bad)
dec
mov
sub
and
sub
xor
xchg
ret
and
lock
xor
jl
jle
imul
cmp
mov
push
xchg
or
sub
xchg
ret
push
adc
inc
inc
add
sbb
mov
rol
cmc
adc
rol
add
jbe
add
cmp
je
push
(bad)
adc
aaa
fadd
xchg
test
and
cmp
rcl
ss
test
(bad)
shl
cmp
push
or
sbb
lea
add
add
push
add
dec
cli
push
jns
mov
sub
push
add
xchg
pusha
mov
es
mov
dec
setb
jno
push
mov
mov
mov
cmps
mov
addr16
add
pop
inc
xchg
sahf
push
inc
mov
adc
dec
cmp
addr16
nop
jge
xor
scas
pusha
jno
mov
pushw
mov
adc
outs
sbb
fsubr
mov
jno
data16
loopne
xchg
adc
xchg
es
fcom
stos
sbb
test
mov
adc
add
es
inc
and
and
sbb
add
push
test
dec
or
loope
clc
inc
mov
rcr
jns
mov
jl
sahf
add
fdiv
push
dec
mov
mov
pop
xchg
iret
outs
div
mov
or
mov
outs
test
(bad)
adc
clc
add
out
or
sbb
adc
in
bound
adc
(bad)
jnp
add
mov
shl
xchg
push
hlt
mov
xchg
stos
shl
inc
push
xor
icebp
push
into
push
push
or
leave
and
js
(bad)
sub
sub
and
cmp
inc
mov
lock
push
push
aas
dec
jno
mov
dec
mov
fistp
enter
dec
je
push
je
ror
or
add
sahf
pop
repnz
cmp
sbb
(bad)
cmc
inc
cmp
call
or
pop
in
cmp
xor
imul
inc
hlt
or
xchg
sub
leave
sbb
jmp
push
mov
jne
mov
cld
push
mov
out
fstp
cmp
cmps
inc
imul
mov
xchg
xor
mov
sub
mov
push
pop
mov
cmps
sub
add
or
fiadd
inc
mov
add
sbb
jp
lods
jmp
stos
popf
sub
cmp
sub
in
push
test
xor
jnp
and
call
mov
xor
cmp
dec
daa
popa
push
xchg
pop
movs
rol
icebp
pop
cmps
add
loop
inc
popf
daa
dec
retf
or
lods
mov
int3
retf
cs
(bad)
sbb
adc
adc
mov
hlt
cmp
ins
and
pop
or
pop
jbe
mov
hlt
pop
into
mov
cmp
test
dec
pop
mov
and
mov
shl
jmp
sti
cmp
setg
nop
sub
mov
cmp
or
mov
retf
or
inc
push
cwde
or
sbb
call
lock
mov
sbb
test
inc
jo
inc
mov
xor
push
sub
jl
pushf
sub
ins
inc
mov
add
sbb
nop
mov
xor
inc
push
in
push
cmp
sbb
add
jo
push
fadd
lock
cmp
mov
mov
mov
mov
(bad)
fadd
xchg
sub
xor
pop
or
loopne
or
mov
lahf
rcl
and
sbb
dec
das
fisubr
dec
sar
jmp
pop
push
or
not
nop
jnp
jg
push
mov
jl
add
mov
cs
add
inc
inc
int3
pop
add
mov
cmp
pop
aad
mov
sub
clc
das
push
and
or
push
cli
cmp
push
inc
dec
test
or
adc
add
jg
retf
add
or
arpl
popa
ins
add
in
neg
dec
shl
push
fs
jns
and
mov
arpl
imul
out
popf
jbe
add
and
arpl
in
and
and
std
dec
loopne
push
and
addr16
dec
outs
fs
push
adc
imul
jo
outs
jb
gs
ss
lods
xor
pop
pop
add
in
dec
lock
push
mov
jae
inc
hlt
cmp
gs
jb
jns
add
jmp
in
adc
gs
outs
or
ins
ins
inc
mov
outs
or
enter
xor
jae
sbb
into
adc
ja
push
xchg
rol
call
outs
popa
jo
cs
add
mov
pop
jae
mov
xchg
mov
or
out
(bad)
fistp
adc
push
inc
js
gs
outs
outs
test
mov
cmp
adc
inc
gs
test
imul
ins
cmp
cmp
push
jg
jne
je
mov
push
or
inc
pop
inc
inc
push
sub
loope
dec
dec
inc
dec
mov
enter
ret
cmovne
aas
or
add
xor
test
fidivr
lahf
add
ja
push
adc
fadd
enter
jb
pop
loopne
fs
movntps
arpl
jo
loope
add
(bad)
adc
dec
gs
jo
fs
outs
xor
clc
sub
gs
pusha
(bad)
jecxz
jle
ret
jo
out
push
sub
cld
(bad)
test
adc
outs
sbb
jo
pop
sbb
jne
mov
outs
ins
nop
jmp
push
stos
pmulhuw
in
mov
in
jl
je
stos
in
in
fs
push
mov
rcr
xor
and
cwde
or
cdq
jno
push
mov
retf
jle
clc
pop
adc
imul
cmp
stos
cmp
cmps
jbe
stos
(bad)
dec
shl
jo
fnsave
outs
xchg
add
cmp
mov
cmps
inc
dec
cs
add
pop
ror
mov
mov
add
test
pushf
fwait
test
mov
aaa
mov
adc
mov
inc
(bad)
mov
add
add
dec
inc
clc
pop
and
add
mov
mov
fadd
sbb
add
and
div
and
test
push
sub
loope
jle
mov
or
adc
push
add
or
add
dec
jne
dec
add
or
mov
add
xor
mov
jno
adc
ss
scas
add
mov
sub
sar
pop
add
out
jne
sbb
fistp
add
mov
inc
pop
ins
adc
mov
mov
xor
or
fisub
(bad)
pop
xor
fidivr
dec
lods
lahf
shl
rol
rol
ret
mov
(bad)
jmp
popa
mov
add
out
push
call
outs
add
or
sub
sar
loop
add
repz
ret
mov
sbb
add
add
mov
int
jp
mov
sub
sar
dec
rcl
cmp
inc
popf
call
add
movs
shl
sahf
add
outs
daa
or
aaa
cmp
and
adc
dec
clc
dec
jmp
or
add
cmp
jg
js
ret
and
and
scas
and
jns
inc
in
aas
ds
je
test
dec
or
or
dec
jo
pop
cld
xor
sub
push
adc
and
sub
pop
lock
sub
mov
xor
jne
add
js
pop
ins
bsf
shr
outs
(bad)
add
fnstcw
xchg
add
adc
sub
pop
sub
rol
fdivr
pop
pusha
or
inc
cld
ret
sub
inc
les
jne
add
cmp
or
mov
add
add
nop
cmp
jns
loope
push
lea
in
mov
mov
add
fiadd
jne
xor
xor
xor
imul
jne
or
mov
into
cmp
dec
or
push
inc
pop
xor
es
out
cmp
out
sbb
div
cmps
mov
sub
sub
sbb
pusha
in
imul
jbe
sub
xor
jle
sub
fstp
adc
pop
dec
sub
or
fadd
or
pusha
push
mov
(bad)
push
(bad)
adc
xchg
shl
cmc
push
cld
push
icebp
and
ds
ins
adc
call
add
and
loopne
push
nop
ja
and
into
and
in
jns
mov
inc
sti
div
add
adc
cdq
sub
aaa
xchg
and
jns
pop
jb
push
or
fsubr
ds
mov
mov
enter
lock
clc
cmp
add
loop
jg
mov
jg
shl
add
pop
xor
and
add
add
xchg
dec
sub
inc
cs
xchg
pop
sub
and
pop
or
das
pop
mov
out
ja
repz
rep
popa
push
out
iret
repz
into
ret
mov
cmp
xor
and
(bad)
cmp
push
fist
hlt
pop
add
adc
pop
mov
or
loop
pop
adc
pop
fs
mov
cmp
jbe
pop
in
pop
push
jmp
push
pop
popf
bound
test
pop
cwde
pop
pop
lods
jge
pop
push
adc
out
out
sti
rcr
not
or
sub
adc
sub
and
push
adc
mov
adc
cmps
adc
sbb
pop
and
or
fwait
sbb
push
imul
je
mov
shr
fwait
loope
shr
mov
loopne
je
or
jg
aaa
fcmovb
sub
add
fld
adc
(bad)
xor
in
fnstsw
fwait
sahf
je
fldenv
fxch
fistp
fld1
fchs
push
fscale
inc
fstp
pop
fstp
fwait
mov
add
pop
mov
add
or
cmp
mov
mov
std
div
shl
adc
je
or
adc
aas
jmp
add
adc
(bad)
hlt
adc
cmps
pop
sub
popa
mov
aas
je
or
cmp
or
or
push
clc
fisttp
ret
inc
push
stc
dec
outs
loop
jmp
out
xor
jle
push
cmc
and
push
gs
fisttp
mov
nop
clc
push
jl
add
retf
push
sbb
pop
das
add
push
int
ins
(bad)
pop
sub
push
push
add
movs
sbb
les
icebp
imul
inc
outs
mov
ins
gs
outs
dec
ins
jo
ins
mov
neg
cmp
fwait
adc
mov
in
inc
xor
jb
arpl
in
ret
aam
jne
je
mov
in
mov
add
neg
enter
iret
mov
sti
push
xchg
adc
test
pop
jb
mov
sub
add
inc
es
sbb
adc
pop
je
outs
ins
popa
jb
daa
pop
push
inc
adc
mov
fs
ins
repnz
add
push
inc
gs
adc
fs
aaa
pop
jge
sub
test
mov
clc
pop
mov
ret
mov
mov
adc
rol
in
adc
push
jge
add
add
mov
mov
ret
and
xor
fs
sbb
scas
xor
test
push
ins
xchg
retf
add
push
mov
inc
mov
adc
xor
push
ror
outs
xchg
sbb
sbb
add
pushf
inc
or
adc
call
imul
sbb
sbb
test
push
inc
jno
mov
mov
or
push
adc
jne
shl
inc
and
ret
mov
or
mov
and
imul
mov
retf
fild
fisub
inc
cli
sbb
sti
mov
dec
cmps
clc
cmps
fdivr
rcr
add
ret
sbb
fiadd
jmp
xchg
inc
ficom
mov
push
imul
inc
aas
adc
sahf
out
jl
scas
outs
mov
je
out
(bad)
in
int
je
pop
lds
clc
cs
aam
add
push
in
cmps
neg
out
push
mov
lock
fsubr
les
retf
mov
aas
pop
sub
xchg
inc
push
push
inc
jne
push
sar
test
pusha
pop
sbb
dec
data16
fnsave
inc
nop
mov
mov
and
mov
push
pushf
rcl
add
scas
push
jl
pusha
mov
lock
test
out
sbb
cs
or
mov
inc
fmul
jbe
scas
mov
ret
retf
add
push
mov
(bad)
fistp
in
ret
movsx
cmp
push
mov
mov
inc
push
ds
fdiv
ret
push
jge
xor
add
xor
mov
int
mov
push
mov
nop
pop
fwait
data16
jae
mov
jmp
add
imul
and
(bad)
std
call
mov
ror
in
jmp
mov
out
or
mov
adc
clc
or
out
pusha
into
scas
iret
sub
jb
push
or
adc
adc
cmp
js
or
or
outs
adc
adc
jne
cmp
out
loopne
imul
mov
in
rol
jmp
xor
in
imul
les
sbb
jbe
xlat
xlat
push
xor
mov
dec
push
add
add
jp
or
test
scas
cmp
pop
jae
jmp
or
fiadd
iret
fld
fcomp
rcl
lds
sahf
out
and
sbb
adc
les
(bad)
hlt
fstp
fwait
inc
je
out
(bad)
lock
pop
push
adc
loope
jge
inc
cmp
nop
pop
or
enter
(bad)
mov
adc
je
dec
(bad)
fdiv
pusha
test
pop
add
dec
lds
sub
test
jle
ins
or
fcomp
aas
adc
cmp
fadd
push
inc
ror
jmp
jnp
imul
jne
add
dec
jbe
or
mov
fild
add
pusha
movd
jbe
pop
and
pop
xchg
pop
mov
pusha
inc
out
(bad)
iret
pop
xlat
test
add
ds
add
push
fcomp
out
mov
xchg
xchg
dec
ror
test
or
ins
mov
add
idiv
cmp
mov
sbb
add
mov
pop
shr
jle
mov
add
sub
dec
mov
or
inc
and
in
ds
jnp
aad
pop
xchg
xchg
shl
pop
pop
add
add
push
push
stos
mov
pop
ds
or
shl
adc
cmp
cmc
or
pop
pusha
push
sbb
in
cmp
lods
sbb
or
or
or
mov
xor
in
push
and
mov
ror
daa
mov
call
ja
fild
xchg
push
push
sub
xor
jmp
mov
adc
mov
outs
and
imul
repz
jge
add
pop
or
js
scas
(bad)
xchg
ja
jmp
add
pop
loopne
sti
cmp
je
or
ja
and
push
jns
adc
sub
inc
rol
adc
fild
test
add
das
xchg
sbb
std
call
mov
lea
cmp
cmp
jb
mov
mov
inc
inc
rep
mov
lea
inc
jae
sub
lea
xchg
loopne
stos
mov
xlat
push
and
pop
cmps
add
push
mov
mov
add
add
mov
pop
xchg
ja
and
pop
mov
add
sbb
jbe
or
sub
lods
xchg
(bad)
addr16
or
add
cs
gs
xchg
add
or
xchg
fs
in
cmps
and
jnp
(bad)
aaa
mov
movs
xchg
pop
aaa
inc
nop
pop
and
sbb
lea
mov
enter
test
push
mov
inc
fwait
outs
mov
fimul
jnp
push
lea
xor
shl
sub
aam
fidiv
or
or
mov
scas
sub
or
hlt
into
dec
jb
mov
and
cmp
icebp
aad
popf
dec
jnp
sub
popf
xor
addr16
fidiv
push
or
xlat
cmp
jl
mov
xchg
or
shr
in
cmp
(bad)
pop
and
pushf
lods
movs
pop
add
inc
daa
cmps
lock
jnp
or
adc
or
or
call
or
pcmpeqw
pushw
fmul
lock
sub
adc
loope
aam
loope
pop
(bad)
jne
loopne
dec
cs
add
or
ja
out
sub
out
and
test
cwde
adc
add
dec
inc
mov
push
mov
cmp
push
xchg
mov
dec
jo
pop
ss
or
bound
je
mov
adc
std
out
inc
lea
dec
xor
je
outs
adc
idiv
enter
xor
sub
or
outs
fdiv
jo
and
iret
xchg
mov
or
hlt
xchg
(bad)
mov
jp
jmp
adc
fmul
or
cwde
xchg
xor
sbb
ds
inc
sbb
sub
push
sbb
mov
adc
jmp
push
mov
sub
repnz
inc
mov
cmp
push
lock
movs
add
nop
add
rcl
movs
or
loope
jmp
popf
nop
imul
mov
push
push
loopne
and
call
rcl
or
xchg
push
in
cmc
adc
xchg
cld
inc
mov
add
loope
jae
sbb
and
sti
and
mov
jmp
sbb
and
sahf
pop
fst
adc
dec
xor
xor
sbb
xchg
adc
mov
out
jg
lock
xchg
test
je
sbb
push
lea
cld
or
add
js
and
add
push
je
mov
inc
in
mov
add
jb
es
in
cmp
daa
xor
or
xchg
sbb
repnz
jmp
adc
jo
in
xchg
push
push
mov
dec
je
add
adc
xchg
add
xchg
lods
aam
or
add
imul
lods
or
or
add
or
ss
inc
jne
add
push
mov
add
mov
mov
inc
test
inc
push
mov
lds
mov
mov
inc
mov
fs
pop
test
xor
inc
pop
adc
pop
mov
out
inc
xor
pop
push
(bad)
push
fs
mov
mov
jnp
rcr
repz
add
fdivr
cmp
pop
adc
push
or
retf
add
pop
xchg
nop
sbb
mov
jae
(bad)
int3
repnz
jae
sbb
imul
sbb
mov
push
sub
pop
inc
pop
es
mov
cmovle
aaa
push
test
mov
mov
jae
sub
aaa
loopne
cmps
add
rcl
lahf
pop
sub
sbb
add
adc
clc
add
adc
mov
cs
fld
loope
cmp
mov
mov
mov
or
pop
daa
push
test
and
pop
ret
cmp
outs
mov
adc
arpl
mov
pop
push
jns
xor
and
xchg
or
xor
rol
mov
test
ret
ja
iret
xchg
int3
retf
movs
out
js
dec
es
or
jl
cmp
jo
out
pop
and
push
add
stos
add
push
jl
ins
gs
dec
outs
add
aam
pop
in
cli
imul
push
or
pop
arpl
fs
or
mov
push
push
lods
outs
jbe
or
cli
popa
movs
test
(bad)
outs
add
or
push
dec
imul
scas
jo
cs
dec
outs
pusha
jb
jecxz
fidiv
mov
mov
dec
mov
inc
ja
sbb
out
cmp
push
mov
adc
jmp
sbb
jmp
xor
xlat
jne
add
add
xchg
push
jmp
dec
aaa
add
jmp
sub
int
out
fidiv
leave
add
or
sbb
loopne
jae
push
mov
retf
or
pusha
adc
wbinvd
inc
push
jns
or
xor
jno
pop
inc
push
cmp
loope
and
in
jb
pop
jo
ja
sub
cwde
out
int3
jb
sbb
xchg
add
push
dec
dec
inc
dec
inc
push
push
out
pop
pop
xor
lds
add
add
out
cmp
xor
or
or
ja
dec
gs
mov
adc
loopne
outs
push
jb
adc
adc
jo
adc
outs
dec
jae
imul
dec
jl
push
mov
jmp
or
jle
into
(bad)
cmp
jae
ins
fisubr
scas
dec
or
enter
adc
ret
mov
sub
add
inc
cmps
mov
data16
or
dec
cmp
jmp
test
(bad)
or
movs
cwde
mov
rcr
add
test
jl
mov
adc
or
add
sar
call
test
test
cmp
mov
mov
mov
ins
ror
cli
movzx
data16
mov
mov
hlt
lods
adc
add
mov
mov
jno
nop
fcos
push
pop
sbb
sbb
scas
movs
bound
fist
xor
xlat
outs
test
xlat
adc
mov
data16
test
sub
push
es
mov
fs
adc
cmp
xor
mov
sub
(bad)
cli
adc
and
sbb
rol
inc
std
jecxz
test
pop
call
add
mov
and
clc
xchg
sbb
push
sbb
push
fwait
sbb
mov
sbb
ins
dec
pushf
jg
add
retf
jmp
pop
loope
dec
mov
icebp
sbb
mov
xchg
test
sub
call
loop
lods
les
or
xor
xor
xor
mov
ror
mov
add
ror
inc
jle
(bad)
pop
mov
sbb
push
hlt
test
dec
inc
call
iret
pop
inc
fwait
sbb
add
dec
pop
ins
(bad)
fldenv
(bad)
pop
push
inc
sbb
sub
sub
push
lahf
xor
into
jmp
mov
dec
or
ins
push
jnp
xchg
inc
ret
outs
jge
dec
or
inc
inc
push
dec
fdivr
add
imul
(bad)
adc
scas
sub
add
retf
cmp
repz
fninit
and
lea
xor
fild
cmc
adc
mov
shl
sbb
imul
jo
sub
mov
in
jp
stos
or
pop
inc
retf
inc
dec
jnp
sbb
push
push
add
ss
add
dec
and
cmp
dec
js
jle
push
xchg
shl
ret
mov
ret
aaa
movs
mov
data16
mov
xor
scas
pop
ds
rcl
push
ds
ins
test
ret
sbb
jp
retf
sub
xor
outs
xor
xchg
xlat
nop
jno
jg
shl
sbb
je
or
arpl
aaa
popf
sbb
dec
push
rol
std
xor
repnz
jmp
mov
or
inc
mov
es
in
(bad)
pop
retf
add
ins
xor
sti
dec
loopne
int3
arpl
mov
lea
imul
loop
call
or
and
pop
pop
mov
pop
add
sbb
jne
pop
bound
ins
pusha
sbb
jne
xor
test
cmp
and
add
dec
and
or
scas
sub
mov
mov
das
leave
xchg
shl
imul
xor
sar
ret
sub
inc
dec
add
aam
rcr
shl
(bad)
popa
(bad)
mov
adc
mov
lods
and
xchg
mov
adc
jbe
scas
xchg
mov
cmps
inc
int3
xchg
retf
inc
xlat
push
fnstcw
adc
fldcw
stos
xor
cmp
push
in
mov
lahf
out
sbb
dec
(bad)
out
jo
loope
loope
pop
xchg
xchg
sub
jb
loope
jbe
cmp
shl
push
adc
sbb
cmp
inc
cmp
sub
fcom
pop
sub
sub
pushf
add
jecxz
addr16
push
(bad)
addr16
bound
lea
xchg
test
jge
data16
or
and
push
scas
add
sbb
add
and
push
cmp
add
dec
iret
adc
pop
push
ins
push
sub
jno
fdiv
fild
js
shr
sbb
dec
add
sbb
or
mov
mov
scas
in
aad
dec
pop
(bad)
es
adc
push
cs
movs
enter
out
sbb
or
ins
outs
xchg
xor
cmp
cs
jmp
gs
adc
mov
xor
je
add
pusha
mov
pop
les
pop
mov
clc
movs
push
adc
jge
shl
scas
dec
and
push
neg
xor
inc
xor
dec
adc
call
cmps
pop
jmp
inc
cwde
mov
dec
ror
or
sub
pop
addr16
pop
inc
in
es
mov
test
cwde
push
inc
mov
(bad)
pop
rol
push
push
mov
sbb
and
pop
into
mov
iret
pop
inc
jg
pop
outs
push
adc
push
adc
fadd
jmp
inc
dec
jne
ss
pop
xlat
xchg
xchg
stos
cwde
inc
add
rdmsr
mov
add
cmp
sbb
(bad)
(bad)
push
ret
add
cmp
rcr
adc
mov
retf
ret
sbb
cmp
scas
xor
lods
sbb
sbb
sti
add
into
shl
clc
or
push
cmp
call
and
jg
cdq
xor
cmp
or
(bad)
stos
push
sbb
rcr
push
stos
xchg
adc
and
es
sbb
adc
jbe
add
push
dec
je
sub
int3
js
mov
lods
out
jae
je
pop
ins
push
fiadd
(bad)
cmp
test
add
stos
lahf
mov
adc
sbb
add
cmp
add
lock
or
and
call
pushf
sbb
or
add
bound
inc
and
es
xor
inc
or
rol
xor
adc
adc
dec
and
or
or
addr16
daa
inc
add
jbe
push
pop
ret
pop
in
push
daa
adc
ret
(bad)
jne
and
push
test
inc
clc
in
sbb
inc
je
mov
or
inc
sbb
dec
sub
add
xchg
(bad)
dec
ins
push
in
push
or
lea
dec
stos
cmp
dec
adc
sar
or
lea
out
xor
daa
aam
pop
test
sbb
adc
push
imul
ins
xor
mov
(bad)
ds
adc
test
jno
xor
dec
lock
loopne
xrelease
ds
inc
adc
ins
arpl
xchg
mov
ret
retf
ret
pop
dec
imul
repnz
inc
pop
dec
cmp
push
add
push
out
sub
aaa
pop
sub
mov
xor
call
add
fstp
dec
push
mov
jmp
xchg
cmp
mov
add
inc
out
push
xchg
pusha
mul
or
jne
mov
mov
inc
adc
hlt
inc
adc
inc
mov
hlt
push
or
test
mov
xchg
mov
mov
xor
xchg
cs
out
call
push
mov
aam
js
xor
inc
clc
int
mov
inc
add
jmp
retf
inc
xor
xor
ss
cmp
dec
xor
sahf
cmp
adc
cwde
arpl
int3
or
cmp
mov
inc
rol
and
aaa
dec
enter
jns
push
imul
cmp
mov
inc
test
nop
jo
cmps
add
ins
sub
adc
cmp
add
daa
jmp
and
add
adc
int3
add
mov
pop
out
(bad)
hlt
sti
inc
add
sbb
das
test
test
leave
sub
sti
rcl
fidiv
cmp
jg
adc
push
rol
test
je
call
push
(bad)
loope
jl
das
adc
lock
cmp
sub
or
(bad)
xchg
sahf
ret
add
ja
adc
loop
or
hlt
lahf
dec
nop
fldenv
clc
xor
ret
jle
xor
scas
sbb
adc
sbb
aam
add
idiv
pop
mov
jo
jge
jb
inc
dec
jne
outs
or
sbb
rcl
push
iret
sub
push
pop
gs
add
inc
fbstp
push
add
push
mov
fistp
push
sahf
retf
push
fistp
push
enter
out
inc
sbb
shl
inc
(bad)
add
popa
sar
jmp
inc
out
pop
or
adc
xor
out
ret
loopne
aas
out
pop
mov
mov
mov
ret
or
dec
jp
sbb
pusha
nop
or
or
repnz
rol
push
enter
jae
loop
mov
xchg
rol
int3
pop
in
xor
push
sbb
ret
adc
cld
inc
shr
arpl
jo
dec
imul
(bad)
sar
loope
xlat
add
add
xor
repz
jbe
cmp
in
(bad)
mov
fnstsw
cs
and
adc
rcl
add
jp
jb
sbb
shr
adc
push
add
repz
test
mov
pop
jns
imul
or
add
addr16
das
imul
inc
scas
je
call
mov
lock
sbb
jge
pop
jmp
aaa
or
loop
jne
sbb
je
push
adc
mov
sbb
add
dec
cmp
pusha
lods
enter
imul
xchg
inc
adc
ror
add
test
push
arpl
mov
cmp
stc
sbb
push
add
mov
lods
in
test
add
daa
adc
add
ret
leave
add
mov
jno
mov
cmc
je
or
push
sub
inc
pop
outs
ret
imul
xor
cmp
adc
adc
es
jo
lea
inc
pop
adc
pusha
fsubr
(bad)
jne
repz
mov
(bad)
lea
bound
pop
adc
add
mov
pop
rol
in
pop
add
aas
enter
sub
xor
mov
retf
adc
pushf
mov
test
sbb
pushf
ficomp
in
and
into
sbb
sub
fcom
shl
sbb
out
fs
add
sub
int3
ficomp
adc
xchg
push
add
(bad)
jno
push
loope
inc
cmp
jo
jo
jb
mov
dec
dec
mov
(bad)
shl
push
out
mov
lea
sub
push
cwde
push
outs
retf
mov
lea
pop
push
adc
push
ror
nop
add
dec
mov
push
nop
inc
pop
xchg
mov
pop
or
mov
xor
mov
push
or
sbb
sbb
sar
int3
sbb
inc
cmp
call
mov
fwait
mov
push
and
mov
std
sbb
leave
hlt
push
ret
mov
jmp
imul
je
out
push
add
shr
add
or
adc
or
push
mov
push
add
or
inc
ret
cmc
push
jno
cwde
adc
loop
xchg
outs
xchg
rcpps
xchg
and
and
lds
jne
mov
inc
mov
das
xchg
xchg
push
or
pop
or
call
les
adc
clc
in
pop
mov
and
icebp
and
das
adc
add
cmp
movs
inc
call
mov
jbe
lea
daa
mov
sbb
jmp
dec
lds
inc
stos
cmp
push
rol
push
ins
or
dec
test
je
sub
or
shr
add
out
xchg
push
or
mov
cmovl
movs
mov
jge
out
mov
clc
pop
ret
push
jnp
cmp
and
or
push
push
pop
jle
add
xchg
bound
ret
data16
cmp
rol
adc
and
sbb
rcr
sub
sbb
xchg
adc
push
fimul
pop
mov
mov
cmc
sub
sub
call
stc
jb
shl
inc
cmp
sbb
sbb
daa
xchg
in
or
retf
mov
dec
enter
mov
push
mov
sub
enter
hlt
into
add
and
shl
stos
inc
or
push
mov
add
dec
pusha
or
mov
or
test
or
in
lahf
cmp
fidiv
clc
(bad)
push
add
lods
xchg
pushf
rol
mov
mov
retf
outs
ins
mov
sub
dec
nop
sbb
and
lds
and
pushf
push
fbld
push
jne
sub
jno
jl
lods
cmc
inc
dec
jae
ret
jne
and
push
jae
mov
xchg
not
jbe
or
shl
hlt
push
scas
sub
add
adc
jge
ret
data16
adc
pop
cmc
push
fadd
or
xchg
ret
xchg
or
xchg
jle
cdq
mov
cwde
ja
in
xchg
mov
and
add
push
ja
or
push
test
add
dec
mov
hlt
adc
xlat
cmps
dec
lea
jp
mov
sub
push
or
imul
pushf
mov
rcr
and
dec
jne
xlat
add
or
cdq
adc
dec
(bad)
push
jae
loope
pop
ret
(bad)
mov
lea
and
cmp
pop
and
inc
hlt
addr16
jo
hlt
mov
jb
xor
cmp
shr
in
xor
pop
mov
or
xor
call
mov
add
adc
xlat
sub
pop
or
pop
loopne
cs
je
and
retf
xchg
adc
xchg
push
es
shl
push
(bad)
aas
dec
push
scas
or
clc
aas
jmp
add
and
pop
add
aaa
mov
pop
aaa
pop
pop
test
mov
xor
add
and
jb
cmp
cmp
cmp
inc
inc
inc
movs
jb
or
and
inc
adc
es
popa
je
pop
or
or
pushf
outs
or
jo
(bad)
dec
and
cmp
xor
mov
mov
inc
mov
add
cmp
push
push
adc
pop
mov
pcmpeqd
mov
in
lods
xchg
dec
or
xchg
mov
aas
imul
xor
scas
mov
sub
push
imul
(bad)
pop
add
adc
jmp
push
sub
jne
add
popa
and
inc
sahf
push
push
scas
jae
ins
dec
add
(bad)
in
imul
call
retf
cmps
pop
scas
push
mov
mov
push
movs
jbe
xchg
addr16
cs
(bad)
aas
outs
cmps
movs
dec
arpl
or
sbb
movs
xchg
pop
sti
sbb
gs
add
lock
sub
(bad)
mov
xor
inc
push
fcmovu
adc
fst
icebp
sbb
test
arpl
dec
jp
test
mov
enter
js
and
(bad)
and
aas
mov
out
int3
sub
pop
jmp
lea
push
mov
push
iret
push
je
out
push
std
test
fld
push
ret
push
and
pop
push
sbb
sub
add
dec
pop
daa
cmp
sar
(bad)
std
kmovw
fucomi
add
add
or
cmp
xlat
fstp
mov
call
test
jne
inc
inc
xor
mov
pop
inc
pop
xor
mov
cwde
mov
cmp
sub
loop
out
(bad)
fstp
adc
stos
inc
retf
inc
and
daa
js
mov
sub
cmp
pop
xor
inc
and
fisttp
mov
jne
or
adc
adc
nop
jmp
mov
test
and
adc
stos
inc
inc
inc
pop
(bad)
in
adc
push
xlat
test
jp
pushf
xor
add
xor
or
pop
leave
aam
inc
maxps
sar
ror
add
sbb
mov
loop
inc
jae
jbe
adc
push
mov
fiadd
mov
push
jg
aaa
pop
(bad)
xchg
jp
test
cmp
sbb
jle
fst
cmps
dec
mov
sbb
fild
test
mov
xor
je
jp
or
dec
call
mov
jl
push
dec
mov
ins
out
mov
or
push
rol
mov
xchg
mov
mov
adc
or
and
inc
push
pop
dec
push
or
test
cs
push
add
push
and
into
mov
jno
jne
jb
sbb
push
mov
jge
ret
xchg
jo
movs
mov
cmp
jo
sbb
adc
mov
sahf
mov
rol
cmp
out
and
adc
and
inc
ret
dec
or
add
(bad)
stos
out
cmp
inc
gs
add
and
pop
jbe
adc
dec
pop
nop
es
sbb
push
xor
and
test
push
cmps
mov
scas
sbb
jo
cmp
and
loopne
iret
jae
sbb
enter
inc
repz
fsubr
push
mov
jge
iret
mov
lods
add
(bad)
jg
push
add
add
inc
dec
outs
jae
data16
je
je
imul
pop
sub
add
pop
out
or
sub
pop
add
in
pop
ror
(bad)
loope
pop
inc
pop
adc
jbe
arpl
in
sti
daa
stos
inc
jb
outs
jb
pop
sub
sbb
dec
push
or
in
ss
pop
jl
adc
loopne
push
inc
dec
sbb
bound
jns
xor
mov
sub
and
int3
ds
dec
push
popa
ins
jne
inc
mov
sbb
shl
xor
jne
mov
pop
add
(bad)
inc
push
or
call
enter
pop
xor
add
push
pusha
ins
dec
jg
or
mov
fld
mov
je
add
inc
jnp
jg
mov
mov
out
or
or
jae
inc
jns
es
imul
int3
push
in
fs
sbb
sbb
daa
int3
sti
imul
es
bound
arpl
adc
ins
popa
jae
es
jns
leave
and
int3
push
fwait
leave
pushf
daa
leave
mov
imul
outs
jmp
or
enter
test
frstor
shr
and
or
cmp
jne
and
mov
aaa
bound
sub
sub
dec
shr
enter
ins
xchg
cli
test
and
outs
xchg
loop
fisub
mov
sbb
cwde
sub
cmps
push
int3
jb
push
lods
or
rol
xor
and
dec
or
outs
jo
dec
xchg
imul
adc
mov
in
fs
mov
enter
mov
or
jb
and
mov
sub
imul
sub
pop
test
inc
mov
test
aam
stc
pusha
add
shl
mov
push
or
icebp
adc
int3
ins
imul
dec
lock
sub
xchg
dec
data16
lods
jmp
inc
loope
push
inc
inc
dec
cmps
jno
cmc
dec
push
fdiv
and
xor
xor
jl
xor
push
add
xor
xlat
test
icebp
sub
dec
pop
push
pop
mov
bound
inc
and
fcom
cmp
sub
and
inc
out
arpl
data16
int3
sub
jns
push
test
ins
xchg
fwait
mul
stos
pop
sub
and
push
dec
out
sub
aaa
ret
pop
pop
pushf
das
push
das
lods
std
jmp
or
jb
xor
or
inc
mov
adc
ret
aaa
lods
push
mov
lock
sub
mov
or
int3
inc
and
inc
loope
jmp
in
and
out
xchg
fadd
fcom
jnp
ins
mov
scas
pop
sbb
ins
xor
dec
addr16
das
int3
inc
outs
outs
ins
mov
push
mov
or
pusha
sbb
loope
in
stc
jno
add
fdiv
clc
sub
in
mov
mov
jns
push
jo
icebp
jb
popa
dec
aam
add
pusha
push
je
outs
addr16
pop
mov
sbb
sbb
push
sbb
fcomp
arpl
fnsave
adc
pushf
les
(bad)
fnsave
mov
mov
scas
in
pop
push
inc
gs
dec
nop
addr16
adc
std
test
inc
sbb
or
mov
adc
sbb
push
push
mov
mov
das
pop
rcl
adc
mov
(bad)
mov
cmp
imul
add
call
in
sbb
test
int3
adc
ss
movq
push
mov
add
ins
pop
or
js
push
cs
popa
ja
fisub
fs
mov
or
dec
outs
stc
arpl
ins
sar
and
scas
dec
sti
out
push
outs
leave
stc
jl
sbb
sub
pop
inc
xlat
sbb
sti
add
mov
pop
adc
pop
push
xchg
push
not
xlat
popf
sbb
sub
pop
daa
xchg
mov
pop
fidivr
aam
xchg
push
push
push
mov
add
xchg
adc
add
or
rol
dec
lock
cmp
test
pop
fisttp
xor
push
shl
sahf
sbb
and
jg
pusha
out
rol
mov
or
out
adc
cmps
mov
bound
gs
js
js
add
jbe
push
pushw
dec
pop
loopne
xor
push
stc
stc
daa
cmp
pop
inc
add
outs
jns
hlt
rol
inc
add
add
push
je
and
cmp
or
ret
(bad)
jae
shl
rcr
int3
add
outs
add
mov
cmp
pop
jecxz
fist
push
add
push
adc
stc
mov
xor
int
xor
inc
sbb
adc
scas
mov
inc
or
mov
fistp
add
pop
mov
rol
add
pop
fmul
loop
sbb
cmp
push
pop
pop
test
mov
gs
ror
mul
pop
sub
and
mov
popa
js
in
pop
xchg
inc
(bad)
mov
ds
sbb
add
pusha
pop
or
mov
das
jb
scas
js
scas
pusha
test
jo
mov
mov
iret
mov
sbb
mov
push
lods
mov
fldcw
jbe
mov
cdq
inc
ds
fcmovnbe
div
mov
mov
jns
xor
adc
sub
lock
jl
lods
idiv
scas
movsx
mov
wbinvd
add
pop
or
push
or
(bad)
jae
stos
pop
stos
(bad)
prefetch
pop
movd
(bad)
jle
adc
sub
adc
cmp
push
adc
jbe
rol
mov
sbb
cmp
jmp
cmovge
shr
jno
xor
ror
nop
test
mov
sti
ds
sub
xor
push
aaa
inc
cmp
sub
push
push
stos
bound
lods
add
push
jb
arpl
outs
out
ret
xor
sub
sti
adc
cmp
xchg
mov
jge
mov
sub
jno
ins
or
pushf
(bad)
data16
jmp
ret
das
add
xor
dec
or
aaa
pop
add
push
xchg
dec
sbb
or
mov
xchg
mov
jae
sub
push
xor
repnz
push
push
ja
add
(bad)
imul
in
sahf
jns
cmp
jo
jge
adc
inc
or
pop
push
call
std
and
test
adc
imul
or
fs
and
fs
in
fs
sbb
fs
mov
cmp
sbb
inc
cmp
jl
push
or
imul
push
retf
dec
out
jno
inc
add
dec
jae
jae
push
nop
sub
dec
in
mov
in
loop
and
adc
fstp
inc
sub
add
dec
outs
call
test
inc
popa
jae
xor
inc
cwde
mov
outs
test
inc
or
rcr
test
add
push
mov
mov
mov
shl
or
sub
xchg
add
push
fcom
add
jne
out
jg
dec
inc
inc
mov
sub
adc
cmp
xor
inc
outs
jne
out
sbb
dec
fs
add
or
jbe
punpckldq
mov
push
inc
xchg
add
pop
sbb
fs
xlat
lahf
and
push
arpl
xor
into
add
(bad)
mov
cwde
mov
sub
dec
repz
push
inc
push
imul
jns
out
fwait
nop
rcr
(bad)
stos
adc
inc
pop
js
lea
adc
jne
mov
loopne
je
pop
loope
pop
cmp
and
xor
rol
dec
data16
fsubr
add
push
sbb
add
push
je
xchg
push
push
adc
xor
(bad)
(bad)
std
loop
fisub
ins
add
xchg
mov
dec
or
sysret
add
lock
dec
add
xchg
xchg
ror
ja
pop
adc
sbb
xchg
push
sub
and
test
dec
mov
cmp
stos
out
(bad)
mov
fs
pop
xor
loop
stos
inc
xor
dec
or
xchg
out
mov
int
push
or
aaa
inc
gs
jne
or
fld
dec
data16
jbe
sub
in
iret
pop
pop
cmp
mov
(bad)
mov
xor
iret
add
out
loopne
test
jne
and
cs
pusha
call
inc
sbb
push
pop
add
retf
add
push
or
repnz
es
jns
lods
das
retf
hlt
fist
cmp
and
fild
es
and
(bad)
ins
and
fistp
xchg
adc
xchg
add
xchg
jb
fidivr
sahf
push
xchg
push
or
pop
test
inc
psraw
xlat
loope
cmp
xchg
cmp
aas
cmp
das
mov
jmp
cmp
xchg
adc
fldcw
sbb
lea
mov
out
(bad)
pop
pop
jl
mov
adc
push
lods
dec
imul
push
mov
ins
das
or
push
add
daa
idiv
pop
aad
mov
mov
call
wbinvd
push
loope
add
cmc
mov
or
loopne
inc
cmc
movs
imul
add
cmc
sub
mov
push
sub
dec
add
push
aas
pop
inc
fild
add
test
add
cdq
mov
push
sbb
ins
mov
adc
add
jecxz
popa
fs
bound
dec
sub
(bad)
push
ficom
push
out
fwait
rcr
(bad)
iret
stos
cmp
lock
hlt
shl
sub
mov
dec
test
ror
out
xor
iret
and
jns
cs
push
loopne
pop
aad
scas
dec
mov
into
or
adc
push
sbb
sbb
dec
mov
add
movs
xor
fld
outs
enter
sbb
aas
or
mov
add
mov
push
sub
or
and
mov
popa
outs
outs
sub
lock
rol
or
mov
jp
add
pop
int3
mov
fwait
sub
sbb
outs
fisttp
mov
out
cmps
pusha
push
adc
(bad)
mov
push
sahf
lahf
mov
dec
popa
add
pop
push
lods
push
sbb
adc
push
mov
lahf
repnz
sbb
les
in
inc
mov
inc
pushf
push
add
mov
clc
jae
or
hlt
scas
push
xchg
or
inc
add
inc
imul
add
idiv
or
or
fldln2
rcr
xor
adc
or
inc
jns
jp
imul
and
dec
gs
int3
or
or
inc
sub
test
cld
xchg
sbb
pop
aas
add
mov
ins
bound
loopne
sbb
push
imul
and
fistp
push
fldenv
adc
loopne
mov
push
add
add
xor
sub
push
jmp
or
sbb
test
in
mov
push
outs
jne
outs
xor
xchg
xor
add
add
lock
jno
sub
mov
ror
jo
inc
scas
or
gs
add
nop
lods
push
mov
jge
add
ja
xor
push
sbb
add
cdq
add
and
and
and
inc
xor
inc
pop
and
jns
cli
mov
or
or
bound
add
out
xor
iret
aas
mov
fs
outs
into
and
or
jbe
jb
sbb
xchg
sub
jb
ja
and
cmp
stos
or
sbb
loop
add
push
out
push
xor
xor
cmovge
sub
jbe
xchg
mov
cmp
out
add
ins
imul
es
and
fs
(bad)
or
mov
bt
into
je
sbb
loope
add
pop
imul
jae
push
neg
cmp
shl
or
daa
push
test
xor
xchg
outs
jg
jnp
jmp
dec
outs
arpl
aaa
xchg
je
jb
pop
adc
or
inc
jns
jae
xor
add
dec
or
loop
push
inc
clc
into
or
inc
add
lahf
sub
arpl
loopne
cmp
rcr
sbb
mov
or
test
in
ja
je
dec
stos
and
or
push
sbb
or
cmp
sbb
pusha
pop
add
jecxz
js
scas
pop
cwde
ja
mov
push
inc
mov
jle
jl
add
mov
mov
mov
loop
aaa
jl
scas
adc
pusha
or
push
outs
jo
inc
adc
shr
xor
jnp
jp
jmp
jae
or
cmps
or
or
inc
jne
sbb
retf
dec
xlat
adc
clc
xchg
cmps
hlt
cli
mov
mov
jge
mov
(bad)
sbb
imul
push
loop
and
ins
sub
sub
xor
push
sub
ss
jmp
test
jbe
ret
adc
dec
cmovbe
pop
ja
mov
shl
int
fdiv
dec
mov
xchg
xor
add
test
add
xor
inc
and
daa
icebp
pusha
mov
and
xor
outs
dec
or
adc
jp
mov
push
jo
inc
sub
add
add
pop
lea
icebp
or
push
ret
(bad)
adc
mov
mov
out
sbb
loopne
xchg
call
test
dec
test
jne
js
pop
dec
jle
rcr
jb
int3
das
loop
ret
push
inc
iret
push
sub
iret
sar
add
ret
sbb
ins
push
inc
fcomp
add
sub
sbb
jp
dec
retf
xor
mov
sbb
mov
push
jle
jbe
pusha
xchg
jp
es
and
mov
pop
ins
xchg
xchg
mov
pop
ret
aam
aad
js
out
or
sbb
hlt
int3
jb
cmp
xor
out
call
dec
inc
dec
inc
push
push
and
scas
cmp
xor
loope
popa
ja
imul
call
sbb
sub
gs
push
mov
jp
outs
scas
sbb
add
les
pushf
es
push
pop
pop
cmp
aam
push
aam
es
push
xor
nop
dec
cwde
jno
adc
push
and
fadd
push
cmp
mov
add
sub
sbb
daa
mov
jge
(bad)
or
gs
push
inc
ret
ror
xchg
push
test
add
icebp
into
movs
push
adc
push
lods
jecxz
or
or
add
push
es
dec
or
test
daa
mov
xchg
ins
pop
aas
mov
inc
lods
dec
adc
add
sub
xchg
and
mov
adc
daa
or
or
dec
movs
pop
pop
pop
and
jle
add
loopne
cdq
aaa
cmp
mov
sar
cmp
cmps
xor
xchg
mov
mov
inc
push
loope
mov
stos
push
pop
or
jge
enter
jno
fwait
shl
mov
pop
and
adc
into
xor
scas
jbe
and
mov
or
push
imul
or
push
ss
dec
mov
xchg
jmp
mov
dec
or
add
dec
push
mov
dec
or
push
push
imul
push
jmp
sub
or
jo
add
push
js
sbb
sar
lock
sbb
loopne
add
or
hlt
sti
imul
jg
add
neg
mov
xlat
and
pop
nop
jle
shr
jbe
jns
sbb
ret
shl
mov
pusha
and
dec
(bad)
test
adc
push
sub
xor
das
add
add
aaa
push
jo
mov
mov
sbb
push
add
add
rcl
cmp
xor
xor
les
cbw
movs
rol
pusha
stos
retf
lods
and
out
ret
lds
push
push
push
or
and
and
call
call
mov
and
inc
pusha
(bad)
add
loope
or
(bad)
jno
je
inc
or
mov
adc
pushf
dec
inc
adc
enter
test
cmp
sbb
cmps
aaa
int3
push
lods
mov
push
nop
sbb
repz
into
push
xor
xor
fisttp
mov
sbb
xor
div
pop
retf
dec
push
add
shr
cmp
sub
xor
add
fadd
xchg
inc
dec
push
push
pop
retf
and
and
pusha
or
push
and
div
xchg
arpl
pop
js
pop
push
xchg
mov
push
mov
pop
aaa
push
out
je
lods
xor
push
adc
loopne
mov
(bad)
pop
add
pop
movlps
cdq
adc
sub
or
push
movd
add
popa
stc
cmc
retf
add
movs
adc
jb
sub
cmp
xchg
dec
sub
cmp
or
jns
cs
adc
cmp
or
mov
add
push
add
xlat
test
sbb
sub
and
fadd
mov
mov
xchg
sbb
xchg
xchg
test
out
xor
mov
loope
out
cmps
mov
cmp
in
add
stc
bound
xchg
out
and
sbb
add
mov
mov
call
adc
mov
sbb
pop
in
sbb
dec
jb
popf
or
pusha
ds
cmp
mov
je
mov
push
stos
cmp
inc
xchg
lock
popf
out
push
mov
cdq
push
sub
pop
pop
loopne
add
loope
add
inc
pop
bound
push
sbb
icebp
and
nop
jns
add
and
cmps
or
gs
push
outs
sub
test
sbb
adc
mov
mov
inc
aad
pop
adc
pop
scas
(bad)
or
xchg
mov
mov
enter
or
cmp
add
inc
sti
sbb
and
add
push
dec
inc
or
aam
xchg
idiv
xchg
data16
aam
shl
sub
sub
jmp
mov
add
adc
push
pop
ja
shl
ja
aam
add
dec
inc
xlat
in
push
ja
lock
add
add
xor
fs
add
pop
xor
ret
out
pop
pop
pop
adc
in
xor
mov
lods
pop
stc
or
nop
rol
mov
pop
and
or
pop
pop
pop
and
sbb
fld
sbb
sbb
jo
(bad)
mov
pusha
call
aas
sahf
add
xor
add
or
arpl
out
push
rcl
inc
adc
ror
push
mov
mov
jmp
or
add
jne
push
mov
push
call
push
sub
add
sbb
adc
xchg
mov
inc
push
scas
pop
arpl
sub
retf
jno
loop
push
outs
and
mov
push
fst
loope
pop
add
aam
mov
imul
fimul
retf
nop
push
(bad)
inc
xor
test
push
cmp
mov
or
cmp
inc
push
add
adc
cmps
enter
(bad)
pushf
fs
xor
mov
inc
dec
clc
daa
out
lock
je
dec
lahf
xor
dec
dec
ins
cmp
xor
inc
jmp
mov
pop
(bad)
pop
test
mov
in
or
mov
sub
xor
push
sub
mov
sbb
sub
xor
jo
jle
push
outs
divps
sbb
loop
cmp
imul
or
sub
or
(bad)
cmc
jl
adc
movs
cmc
xchg
pop
nop
ret
and
inc
pop
or
push
mov
in
mov
sbb
pop
scas
push
jno
fs
jp
ja
mov
repnz
push
ja
add
mov
fimul
mov
cmp
inc
push
jne
xchg
cmp
inc
test
pop
jge
mov
jge
lahf
xor
sbb
scas
pop
in
cwde
fbld
and
(bad)
fmul
test
add
fsubr
sbb
push
jmp
loopne
test
scas
movs
sbb
add
xor
add
addr16
retf
or
fld
or
sub
outs
pop
inc
mov
lea
push
add
xchg
pushf
fld
scas
mov
and
xor
scas
shl
scas
dec
add
outs
lods
cli
scas
scas
push
fmul
mov
xor
(bad)
pop
push
inc
outs
jne
gs
test
inc
arpl
cld
adc
aaa
mov
aaa
sub
adc
sub
neg
sbb
dec
pushf
and
repz
jmp
push
xchg
add
les
jns
fwait
je
out
mov
enter
pop
sbb
inc
push
test
pop
cs
lar
mov
sbb
pusha
mov
pop
pop
and
add
mov
or
inc
cs
add
lods
mov
pop
cmp
push
cmp
or
outs
jb
cmp
sbb
push
imul
sub
mov
or
and
xchg
add
xchg
pop
push
orps
leave
or
add
xor
xor
push
sub
sub
sub
mov
mov
or
hlt
push
add
sbb
imul
jbe
xchg
pop
je
jp
popa
add
movs
call
sbb
dec
outs
pop
mov
shr
sbb
push
or
sbb
sbb
dec
or
jge
push
popa
outs
dec
cwde
push
mov
pop
mov
add
popa
inc
es
in
add
push
sbb
outs
shl
addr16
pop
jo
mov
call
fsub
cmp
or
jbe
inc
and
push
daa
nop
add
call
or
and
jl
push
mov
jb
popa
add
cmc
out
idiv
add
mov
push
or
loopne
add
sbb
retf
jo
call
ins
xor
out
popf
pop
or
cmp
(bad)
cli
jne
and
or
and
sti
inc
shl
add
adc
pop
sbb
sub
adc
sbb
ror
icebp
popf
dec
fwait
pushf
fld
scas
mov
and
add
es
test
aas
adc
popa
ins
xor
outs
pop
xor
lds
cdq
mov
sub
or
push
pop
pop
mov
nop
add
inc
mov
sbb
pusha
ror
adc
ror
inc
jne
outs
push
popa
jb
push
sub
mov
movs
popf
jg
or
push
sub
es
jg
inc
inc
and
mov
aaa
xchg
push
outs
pushf
adc
xor
loope
add
sbb
mov
pop
push
out
popf
sbb
in
cli
out
shl
add
sbb
test
cmps
popf
sbb
loopne
(bad)
sahf
iret
mov
scas
push
mov
aam
repnz
fisubr
dec
ret
js
iret
movs
cmps
iret
cmc
mov
xchg
xchg
(bad)
xchg
fisttp
push
emms
loopne
aam
outs
mov
dec
outs
arpl
adc
data16
mov
add
out
inc
dec
bound
popa
dec
clc
and
into
ror
inc
popa
jae
sbb
mov
das
mov
ds
xchg
daa
(bad)
push
sbb
retf
pop
syscall
add
inc
js
add
push
popa
mov
je
fsub
shl
outs
jns
xchg
(bad)
jo
js
pushf
pop
sti
or
xchg
loop
mov
pusha
sub
aam
dec
dec
inc
sub
adc
out
gs
ins
or
inc
cmp
mov
lock
dec
jae
inc
push
jne
imul
cld
int
out
sub
mov
sub
ja
push
sbb
(bad)
pusha
ficomp
aaa
js
xchg
sti
inc
jo
fdivr
or
jns
bound
jnp
inc
or
dec
lods
popf
data16
sti
dec
ja
dec
jo
inc
cmp
into
or
or
mov
push
(bad)
sbb
cmp
or
mov
xor
inc
ret
mov
xor
sub
mov
pop
iret
lods
add
push
pusha
test
dec
and
loopne
mov
xor
pop
or
lds
xor
les
pop
js
pusha
nop
out
fimul
inc
and
outs
movs
lds
or
xor
dec
loop
inc
jp
push
inc
in
inc
dec
jmp
pushf
ret
jno
test
ja
sub
loopne
xchg
or
mov
stos
pop
jns
pop
add
lock
cmp
cs
or
adc
push
xchg
jne
push
inc
in
les
ins
dec
dec
pop
push
inc
jne
outs
ins
stos
sbb
pushf
lds
cmp
rcl
je
adc
sub
es
outs
arpl
in
pop
test
add
pop
or
cmp
jae
fdivr
sub
or
rol
rcl
xchg
lods
test
and
xchg
repnz
jae
scas
jns
and
call
sub
inc
inc
mov
mov
mov
jnp
and
xchg
and
dec
ret
xchg
push
push
adc
adc
and
pop
add
sar
fstp
jae
ins
fadd
xlat
add
pop
ins
add
add
pop
pushf
add
mov
jno
or
out
ret
xchg
push
push
cdq
test
mov
outs
jb
sub
or
mov
jbe
dec
or
cmp
in
dec
mov
and
jg
int
ss
cmp
sbb
add
stos
movs
outs
mov
jae
add
add
mov
pop
movs
or
into
popa
xchg
add
data16
fcmove
sbb
pop
out
cmp
in
add
pop
ret
mov
and
dec
mov
push
cmp
jmp
push
fisttp
or
daa
sbb
dec
js
ja
jge
adc
xor
sub
icebp
jo
or
aaa
pop
xor
mov
pop
push
outs
cdq
dec
les
dec
inc
sub
pop
scas
lea
test
sti
scas
in
dec
pop
and
cmps
(bad)
cmp
push
hlt
sbb
scas
or
mov
ss
xor
pop
test
or
sbb
push
loopne
inc
xchg
jne
je
sbb
dec
rol
dec
outs
or
inc
mov
or
gs
or
out
xchg
imul
jno
push
lock
push
shl
js
pop
cmp
push
enter
arpl
add
xor
mov
inc
jecxz
push
add
sbb
push
cmp
enter
cld
stos
jnp
loop
xchg
mov
popa
adc
es
add
jnp
(bad)
cmc
sub
lahf
sbb
das
jo
sahf
ja
push
adc
lahf
scas
jmp
cmp
push
loope
add
mov
push
js
push
into
and
rol
inc
mov
(bad)
lock
aad
das
push
xchg
sbb
sub
je
sub
jns
inc
adc
and
int3
inc
or
or
inc
add
push
mov
(bad)
pusha
test
pusha
mov
mov
add
notrack
or
pop
aam
cmp
lods
pop
or
sbb
ror
push
lea
jecxz
add
add
push
test
cmp
test
hlt
test
test
stos
shr
fwait
sub
cli
js
fidivr
movs
push
and
add
push
inc
sub
sbb
dec
out
pop
push
in
sbb
push
sbb
or
not
jmp
sub
mov
scas
pop
cmp
ja
jae
jne
adc
jecxz
pop
test
push
scas
push
inc
cs
push
repnz
(bad)
stos
mov
sar
mov
jns
xor
mov
cmp
cmp
xchg
sahf
pushf
mov
adc
push
and
dec
popf
in
mov
daa
daa
daa
daa
imul
sub
add
(bad)
adc
adc
xor
push
je
xor
cwde
mov
mov
cmps
push
cmp
mov
pusha
stos
aam
push
dec
or
pop
inc
cmc
add
add
popa
rcr
in
in
ret
cmps
pop
jae
pop
mov
shr
xor
xchg
icebp
dec
dec
retf
cmovns
add
shl
cmp
lock
cmp
push
popa
jg
stos
dec
dec
jp
bound
add
add
daa
mov
xor
leave
xchg
dec
shl
push
bound
push
popa
outs
sub
sub
push
inc
jbe
aad
cmp
xchg
clc
fisubr
dec
pop
or
jbe
fsubr
mov
ja
jbe
or
jae
inc
and
and
or
and
in
or
scas
ins
xor
or
push
push
or
dec
add
sub
mov
xchg
and
das
leave
call
repnz
xchg
push
push
add
cmp
mov
pop
mov
push
pop
addr16
aas
imul
or
adc
push
or
push
shl
jno
test
or
mov
ror
(bad)
in
push
ret
inc
add
int3
push
inc
mov
shr
jmp
xchg
pop
dec
xchg
inc
js
jo
ret
and
cdq
ins
jle
lea
inc
xor
fistp
movs
inc
add
mov
scas
cmps
add
bound
cmp
daa
fiadd
arpl
js
sub
mov
cdq
jge
xor
(bad)
loopne
inc
or
or
ja
xor
mov
xor
shl
cmps
das
add
push
push
je
and
mov
push
adc
es
pop
xor
jo
dec
cmp
adc
jne
and
pop
rcl
cdq
mov
imul
cmp
push
ss
ins
cmp
inc
xor
dec
popw
dec
add
jo
rcr
imul
inc
add
into
cwd
addr16
daa
add
jns
retf
shl
or
xor
mov
fild
adc
inc
pop
adc
pop
dec
pop
xor
inc
loop
jns
rcl
xchg
or
adc
and
mov
pop
rcl
inc
xchg
dec
test
or
add
ins
mov
les
add
or
rol
xchg
mov
fld
movs
mov
(bad)
and
mov
cmp
dec
jo
sbb
or
adc
into
xchg
adc
push
adc
add
pop
mov
xchg
push
pusha
dec
mov
fsub
xor
mov
sub
sbb
cmp
test
add
push
push
jnp
popa
(bad)
test
imul
and
push
jo
stos
ja
add
xor
aaa
inc
ret
sbb
adc
pop
rol
out
jb
add
mov
mov
sbb
mov
add
sahf
and
xchg
gs
xchg
in
xchg
xchg
push
xchg
push
test
mov
dec
inc
movs
adc
repnz
movs
jecxz
sbb
fbld
(bad)
and
add
addr16
pusha
cmp
push
inc
jnp
mov
add
outs
shl
adc
lock
pop
and
out
ss
ffree
add
adc
in
fiadd
mov
adc
mov
mov
cmp
or
rcr
add
add
or
nop
loopne
pop
mov
sub
add
ja
popf
xor
push
pop
fmul
loopne
dec
lea
test
int3
push
ret
pop
jo
pop
stc
push
mov
xor
sbb
adc
jmp
add
push
sbb
and
loopne
push
mov
ret
jno
jge
clc
xchg
push
rcr
ror
push
loope
ja
movs
add
mov
fbstp
imul
push
cmp
xor
or
dec
mov
push
pusha
cmp
mov
pop
loopne
or
fmul
jae
fsub
jns
cmps
push
daa
(bad)
scas
xor
(bad)
(bad)
mov
cmp
shl
test
sti
adc
jmp
mov
inc
jno
lds
mov
jns
sti
and
rol
pop
add
shl
iret
popa
or
xlat
ror
inc
popf
add
add
jg
inc
ins
cmp
sbb
rcl
lock
mov
pop
jno
ins
and
das
rol
jno
pop
sti
cmps
or
sbb
sub
add
pop
inc
sar
add
jo
adc
out
add
inc
sbb
pop
mov
pusha
pop
or
push
(bad)
fadd
adc
ror
sbb
or
pop
imul
pop
xchg
add
add
enter
xchg
mov
in
jo
add
jmp
fcmovnb
push
clc
pop
xor
push
test
call
pop
mov
out
push
inc
jo
jmp
ret
loope
and
inc
loope
pop
hlt
xor
cwde
dec
xchg
mov
pop
xor
xchg
pop
pop
loopne
ins
retf
inc
or
pop
das
or
das
or
inc
add
pushf
ret
fbstp
xlat
dec
cwde
les
movs
es
jmp
or
push
(bad)
out
mov
in
push
add
lea
pop
loop
(bad)
repz
ror
(bad)
sub
jmp
sahf
add
or
push
add
jae
shl
push
sbb
or
aad
add
inc
inc
rol
pop
(bad)
cmp
xchg
xchg
retf
sub
push
lds
sub
mov
test
push
xchg
es
adc
into
aam
fild
push
fsubr
pop
fs
mov
push
ins
or
cmp
mov
push
xlat
mov
clc
iret
pop
push
iret
xchg
mov
sbb
sub
cmp
ins
mov
mov
xchg
push
xchg
jmp
push
out
xchg
aad
dec
xchg
and
jns
xchg
retf
xchg
push
inc
xor
add
hlt
mov
pop
adc
mov
pop
jmp
inc
push
adc
loopne
mov
pop
enter
or
pop
adc
push
(bad)
out
movs
and
jne
cmp
push
arpl
aad
pop
aaa
mov
sbb
and
lods
add
adc
inc
add
sbb
ja
popf
sbb
retf
das
pop
push
xor
push
or
cld
mov
or
jg
fs
push
(bad)
ror
std
or
adc
push
and
shl
cwde
and
cdq
cmps
aad
inc
out
cwde
jmp
cdq
pop
rcl
sbb
sub
aaa
pop
or
adc
dec
cmp
test
icebp
das
pop
push
adc
(bad)
lock
sbb
jo
adc
les
rol
sub
adc
add
call
inc
loopne
add
aaa
push
jl
pop
cmps
inc
add
retf
xor
push
shl
add
pop
push
movs
mov
xor
xor
cmp
out
pop
mov
(bad)
(bad)
out
lods
pop
add
fstp
loopne
push
mov
(bad)
sti
push
push
or
out
es
test
lods
inc
out
jno
outs
add
xlat
jnp
inc
inc
stos
imul
push
inc
mov
hlt
sub
push
test
mov
retf
pop
test
loope
push
sbb
test
push
test
loope
out
push
mov
retf
mov
ret
into
dec
in
test
loope
push
dec
aam
scas
sbb
iret
push
fsub
or
jp
and
aaa
pop
ss
mov
and
(bad)
mov
call
pop
mov
add
and
sbb
lods
scas
jmp
xor
je
push
push
push
cmp
or
push
stos
or
inc
push
push
sbb
fisttp
sbb
clc
xor
fcom
aam
aam
out
push
mov
mov
dec
ror
xor
hlt
fistp
ins
xchg
loop
xchg
push
sbb
xor
push
fwait
daa
sub
sub
lods
imul
push
add
ret
mov
cmp
mov
fmul
and
fstp
outs
ja
push
fst
or
inc
dec
outs
les
add
mov
bound
xor
xchg
xor
xor
adc
sbb
adc
pmaddwd
ins
add
enter
and
out
push
xchg
cs
popa
dec
dec
dec
dec
movs
leave
repz
cmp
daa
and
push
pcmpeqd
jo
push
popa
push
sub
xor
cmps
shl
aaa
sbb
out
in
(bad)
popf
inc
inc
xchg
out
fadd
mov
lods
popa
mov
jno
mov
jecxz
adc
cmp
enter
jno
and
cmp
jmp
or
loop
xchg
fwait
add
aas
push
aas
pop
dec
add
add
adc
pop
sub
test
or
jmp
push
push
mov
fadd
pop
add
add
or
mov
xchg
jns
or
push
repz
clc
add
push
adc
sbb
fiadd
inc
add
sub
cwde
jns
pop
cmp
stos
cmp
mov
sti
xchg
pop
dec
adc
cmp
inc
mov
mov
cmps
xchg
xchg
out
xor
loopne
test
test
dec
rcl
and
mov
add
add
xchg
add
pop
out
sbb
imul
push
sti
sub
fsub
push
fdiv
jp
mov
pop
mov
and
mov
fsubr
mov
xchg
add
push
or
pop
or
add
cmp
out
fld
add
add
xor
(bad)
in
fst
add
rol
inc
movs
and
lock
mov
sbb
mov
push
mov
mov
inc
inc
aaa
adc
or
adc
xor
dec
or
sub
sbb
jle
or
pusha
jnp
or
pop
and
jb
out
or
imul
pushf
lahf
adc
call
mov
adc
das
inc
push
inc
fdiv
xchg
jg
xchg
inc
or
or
outs
fs
sub
mov
dec
mov
test
fidivr
repnz
jo
add
dec
cmp
add
pop
push
loop
xor
cmp
test
rcl
cmp
push
push
mov
sbb
pop
dec
mov
cmp
popa
xor
lods
inc
jo
lds
lods
push
gs
xor
fstp
enter
dec
data16
rcr
movs
addr16
pop
clc
and
aas
or
adc
imul
or
cmps
or
ja
jne
mov
mov
add
int3
mov
mov
fdivrp
xor
lock
push
sbb
ret
outs
mov
sub
test
je
add
and
push
movups
fs
mov
push
push
push
and
clc
mov
in
(bad)
ja
test
je
push
and
sub
add
test
add
push
sar
mov
and
mov
scas
jl
jle
adc
dec
pop
pop
ret
lea
mov
mov
push
push
mov
sub
test
inc
mov
cmp
sbb
cmp
pop
imul
in
mov
lahf
push
push
push
mov
and
dec
lock
test
xor
in
popa
push
push
push
mov
xor
push
nop
cmp
aas
and
push
cmp
jne
mov
push
add
add
mov
xchg
rcr
rol
sbb
fdivr
int3
aaa
or
or
imul
adc
mov
xchg
jle
jmp
fs
inc
and
adc
sti
call
test
popa
inc
icebp
sahf
fstp
fadd
ins
cs
or
dec
fstp
pop
mov
push
or
mov
dec
push
sbb
and
mov
fcmove
push
pop
mov
push
pop
loopne
inc
push
jmp
jmp
push
aaa
ret
call
aaa
dec
push
mov
jle
adc
push
lea
leave
lds
ins
lds
fcomp
and
jae
xchg
sbb
jo
mov
dec
popa
lods
inc
es
pop
sar
push
push
daa
lock
inc
push
in
movzx
outs
adc
inc
push
jg
adc
test
jno
dec
jne
fist
adc
mov
or
add
ins
and
je
sub
push
pusha
call
outs
cli
sbb
xchg
mov
fadd
and
pop
sbb
adc
mov
mov
inc
call
mov
inc
pop
(bad)
mov
ds
add
xchg
or
jg
mov
mov
or
adc
inc
add
mov
sub
das
push
push
iret
pop
pop
inc
mov
add
push
dec
xchg
mov
xchg
call
ds
and
or
jmp
pop
inc
outs
push
mov
or
pop
ret
xchg
retf
push
mov
and
add
(bad)
adc
movzx
sbb
jbe
clc
push
or
adc
pushf
mov
ret
jne
loop
hlt
add
add
mov
retf
mov
jmp
ror
jnp
cmp
mov
sti
setg
jmp
pop
mov
mov
or
fucom
cli
pop
iret
je
dec
enter
adc
sti
push
jg
out
clc
adc
loop
loopne
in
sbb
dec
loope
pushw
pop
xchg
or
cmp
fstp
call
es
inc
xor
sub
std
aaa
out
push
sbb
and
xor
jb
push
or
jo
adc
movs
sbb
or
or
popa
iret
jnp
pop
inc
add
ds
pushf
rol
iret
push
mov
cmp
(bad)
fstp
or
or
xchg
pop
pop
or
adc
add
fadd
mov
sbb
or
or
shl
je
mov
mov
xchg
push
xchg
mov
push
ror
add
das
fadd
jmp
mov
pushf
and
ins
bound
or
je
add
xor
push
pop
sub
push
push
inc
cs
ror
aas
push
push
sub
je
sub
je
dec
mov
in
push
dec
neg
mov
mov
adc
icebp
in
add
push
add
test
ja
inc
sub
sub
dec
inc
sbb
adc
xchg
sbb
in
idiv
daa
sbb
push
mov
stc
push
xchg
fwait
or
mov
push
push
and
in
push
mov
adc
aas
shl
lea
pushf
fwait
jl
push
(bad)
aam
cmp
sub
mov
std
ins
test
adc
je
lea
pop
sti
test
xor
adc
loop
popf
xlat
sar
xlat
js
test
je
mov
or
fstp
cmp
lods
loopne
fcomp
rol
nop
add
shr
adc
cmp
sub
jnp
and
arpl
adc
and
push
(bad)
pop
pop
pop
repnz
cmp
inc
cmp
add
jmp
scas
sti
(bad)
jmp
cmp
out
call
ins
mov
jmp
aam
or
ror
mov
not
and
call
xchg
cli
add
cld
ret
dec
dec
mov
comiss
out
ret
inc
cmp
push
ds
adc
test
pop
cdq
test
cmp
gs
jne
lock
xchg
pushf
inc
add
mov
out
dec
push
jl
add
push
das
jns
pop
xchg
inc
jge
in
or
call
outs
ja
dec
outs
outs
sub
xor
pop
add
popa
out
shl
jae
sti
(bad)
shr
out
jns
jge
lock
mov
outs
mov
mov
movs
dec
ins
jo
pop
add
call
add
pop
add
ss
inc
inc
jne
lods
jo
cmps
or
movs
mov
jg
jnp
dec
add
mov
inc
aam
scas
jnp
bound
mov
repz
gs
adc
je
push
or
fcomp
pop
jo
gs
mov
pop
sbb
add
add
xchg
ins
and
push
arpl
gs
aas
xor
popf
adc
popa
ja
jns
inc
dec
and
jmp
dec
outs
icebp
inc
sub
or
pop
jo
clc
out
push
gs
outs
arpl
outs
adc
push
jno
out
pop
pop
dec
jno
imul
push
jbe
lods
mov
cld
cmp
stc
mov
sbb
push
mov
xor
sub
jb
fcom
call
cli
adc
mov
into
mov
cmps
inc
jmp
into
pop
and
pop
sbb
and
cmp
adc
retf
add
pop
enter
adc
lea
icebp
test
mov
push
lea
std
adc
xchg
popf
test
fstp
add
outs
ss
xchg
icebp
jge
mov
mov
adc
xor
es
add
arpl
xchg
lock
adc
push
dec
inc
pop
cmps
pop
xlat
(bad)
outs
xor
push
xlat
adc
sbb
clc
push
mov
rcr
or
aas
xor
cmps
jo
jo
adc
mov
sbb
(bad)
ds
pusha
adc
dec
dec
in
call
dec
jmp
std
les
adc
jo
xchg
fsub
adc
jnp
call
add
retw
iret
mov
(bad)
adc
rol
leave
add
pop
js
clc
mov
and
(bad)
and
mov
fsubr
sub
sete
jmp
je
(bad)
cmp
sbb
adc
or
xor
or
outs
pop
or
xor
test
jne
xchg
pop
(bad)
int3
push
scas
add
sbb
or
test
invd
xor
xchg
mov
fisttp
jne
out
or
adc
rcl
or
clc
adc
xchg
pop
gs
jmp
or
jle
dec
add
add
add
push
or
clc
repz
jnp
inc
push
jbe
aad
xchg
add
mov
fwait
sbb
sbb
fdiv
(bad)
pop
xor
mov
repz
mov
es
(bad)
loope
rcr
mov
pop
icebp
dec
mov
ins
test
adc
ins
jecxz
mov
pminub
repz
jo
mov
test
out
out
cs
mov
and
cmp
mov
outs
sbb
shl
sub
movs
jo
sbb
dec
(bad)
add
and
jae
inc
push
mov
retf
aaa
(bad)
retf
push
fsubr
(bad)
aas
adc
or
add
xor
pushf
iret
test
and
adc
enter
mov
scas
ficom
xor
jb
jo
jo
cmp
clc
aam
mov
adc
xor
add
mov
and
adc
pop
popa
stos
mov
enter
ror
adc
or
ds
sub
(bad)
fiadd
xor
jecxz
aad
sub
add
xchg
popa
stos
pop
mov
xchg
or
xor
xchg
lods
or
lock
or
je
push
xchg
push
inc
into
mov
sub
inc
stos
mov
(bad)
stc
or
into
repz
les
sub
pop
addr16
add
daa
mov
jp
or
mov
add
push
adc
jmp
cmc
das
push
test
jmp
mov
xor
or
jp
jg
push
push
pushw
rol
sbb
(bad)
es
jmp
mov
xchg
cdq
xchg
inc
sahf
push
mov
loope
sbb
jl
inc
ds
push
sub
and
stc
in
jmp
leave
and
out
cld
mov
add
fsub
jmp
scas
xor
push
test
pop
sbb
mov
xchg
fsubr
xor
jnp
adc
jmp
sbb
sbb
push
and
jbe
rol
push
sub
xor
cmp
ror
clc
loopne
sbb
xor
push
pushf
pushf
fmul
dec
inc
xor
add
arpl
or
mov
lahf
xor
sbb
pop
pop
cmps
xor
push
add
in
icebp
mov
adc
jne
je
jbe
jo
call
cmp
scas
push
inc
push
or
out
cmp
ss
push
popa
push
ret
fdivr
out
lea
ss
push
sub
xchg
mov
pop
mov
sbb
push
pop
inc
adc
xor
lock
(bad)
jnp
push
shl
gs
pop
pusha
sbb
pop
and
add
hlt
mov
mov
xor
jle
into
adc
xor
int
xchg
xor
call
jecxz
push
adc
repnz
dec
mov
jmp
std
enter
adc
pop
ret
cmps
sub
adc
push
add
push
mov
ret
add
xrelease
inc
mov
mov
mov
nop
div
dec
ja
dec
pusha
cmp
or
ins
add
jb
ins
adc
xor
add
pop
loope
jge
push
int3
push
ret
add
jb
jl
lock
and
pop
ins
je
das
sbb
adc
mov
sbb
bound
pushf
std
jns
add
and
les
movq
mov
pop
xchg
or
mov
xchg
push
or
aas
(bad)
aam
xor
jo
pop
sbb
mov
sbb
mov
mov
cld
inc
adc
clc
cmps
lock
fwait
cdq
mov
mov
sbb
cmp
push
push
add
pop
lea
mov
aad
fcom
loopne
outs
cs
cmc
lods
in
fadd
and
(bad)
fnstenv
test
jl
inc
adc
cmp
or
test
in
mov
mov
fadd
clc
add
dec
jne
adc
sbb
popa
adc
add
or
popa
lea
xchg
push
mov
or
fdiv
inc
cs
pop
stos
xor
pushf
inc
add
or
xchg
fadd
dec
cmc
lahf
sub
mov
xchg
cmps
mov
jo
sar
fsub
fs
mov
shl
rcr
in
je
pop
inc
or
cmp
xor
loopne
sub
adc
cmc
imul
pop
mov
sti
out
repz
les
xor
mov
int3
inc
sub
xor
fadd
xor
xchg
sbb
inc
fstp
or
scas
and
in
mov
jbe
mov
loopne
lods
sbb
push
mov
sub
sbb
xchg
not
sub
cmp
and
jne
push
jle
clc
pop
js
cmps
push
inc
or
xlat
mov
out
xor
xchg
cmp
popf
and
pusha
sbb
stos
ror
in
cmps
fiadd
mov
scas
jns
push
push
jo
clc
sti
movzx
outs
add
outs
ja
xchg
or
mov
jle
es
mov
adc
ret
or
push
ret
aam
out
fimul
push
and
pop
mov
sub
pop
fistp
shl
out
add
pop
into
push
dec
popf
and
mov
stos
sbb
sti
adc
push
je
sbb
jmp
rol
add
xlat
mov
inc
mul
push
imul
call
mov
pop
mov
jmp
fs
fdiv
xchg
push
rcr
cmp
mov
sbb
cli
das
fsubr
or
adc
ss
call
or
clc
mov
mov
or
mov
add
inc
rcr
add
pop
mov
nop
enter
out
fs
addr16
dec
lahf
xor
or
gs
adc
xor
xor
loope
add
cmp
add
(bad)
pop
loopne
xor
push
pop
loop
js
adc
adc
inc
movs
or
mov
mov
or
xbegin
add
add
push
cli
push
clc
ret
push
test
push
je
pop
addr16
call
add
push
data16
adc
xchg
loopne
jmp
inc
push
pop
mov
or
adc
sub
fstp
fwait
jmp
inc
mov
mov
adc
mov
pop
mov
test
xlat
sbb
xor
add
xchg
jb
rcr
xor
sub
call
push
push
out
cs
adc
fist
ret
adc
rol
loop
jne
mov
bound
xor
xlat
jne
loop
cld
in
dec
push
push
add
scas
xchg
jmp
inc
mov
ror
rcl
cdq
loopne
mov
and
xchg
fsubr
in
push
(bad)
jg
cld
int
xor
shl
mov
ins
nop
and
pop
sub
sub
enter
rcr
fidivr
jle
sti
jbe
fisttp
in
pop
pop
mov
adc
and
sti
ss
mov
fst
pop
inc
daa
pop
dec
cs
aaa
mov
push
pusha
jecxz
mov
jmp
add
bound
adc
jo
push
cld
sbb
cwde
xchg
and
mov
std
sbb
sbb
dec
dec
xchg
jle
out
sub
js
add
adc
jns
jb
pushf
adc
std
sbb
xchg
and
ds
pop
xor
retf
add
xor
or
(bad)
call
push
sbb
jle
mov
lahf
mov
pusha
test
adc
jmp
dec
cmp
or
mov
pop
outs
aam
sub
adc
inc
add
into
jp
push
stos
lea
cmp
out
mov
mov
push
outs
cmp
in
add
cmp
or
fsubr
ret
pop
cmps
xor
rcl
jnp
sub
fisttp
cmp
jl
mov
sub
shl
data16
inc
add
push
(bad)
sbb
arpl
out
adc
adc
or
scas
push
mov
rcl
push
mov
pop
(bad)
iret
add
mov
hlt
rcr
inc
addr16
in
sbb
mov
jnp
mov
fimul
mov
ja
xchg
sbb
and
mov
push
sub
(bad)
shr
and
sbb
or
dec
repnz
scas
call
sbb
inc
pop
add
in
jne
push
jle
or
bound
inc
mov
xor
retf
pop
mov
(bad)
jge
add
inc
pop
jne
cmp
inc
xor
pushf
ret
sbb
ffree
lock
out
cld
pop
fs
cmps
mov
and
dec
cs
lds
loopne
push
push
sti
add
addr16
call
push
xrelease
or
add
retf
inc
adc
fwait
inc
or
and
push
push
sub
sbb
cld
iret
xchg
and
mov
fld
xchg
rcl
inc
jne
mov
pop
fwait
lock
xor
neg
rcl
inc
push
pushf
std
dec
jecxz
or
adc
sub
loopne
push
lea
or
or
fisttp
mov
das
rol
out
mov
add
mov
dec
daa
addr16
pop
pop
es
add
in
cdq
idiv
and
cmps
adc
add
sub
arpl
(bad)
test
push
xor
dec
pop
daa
inc
add
jg
les
fmul
dec
sub
xor
mov
cmps
sub
add
lock
aad
mov
popa
pop
inc
jmp
jecxz
add
adc
mov
jg
xchg
sub
xlat
ret
mov
(bad)
int
sbb
outs
add
push
repz
iret
xlat
xor
dec
pop
add
adc
mov
rol
aam
not
xchg
out
jne
int
fisttp
das
push
pop
cli
lea
ror
xor
inc
dec
add
xlat
jge
xlat
xlat
clc
hlt
adc
or
add
xor
ds
push
cdq
jmp
out
add
loopne
adc
aas
xor
xor
jmp
mov
push
ja
fistp
into
mov
in
jl
jmp
loopne
add
dec
jmp
adc
(bad)
push
ret
aad
call
fwait
movzx
push
push
add
test
cli
pop
mov
or
add
pop
or
sub
inc
ret
jo
sub
push
sbb
add
jbe
mov
outs
inc
push
rol
sbb
sahf
fs
push
dec
hlt
mov
js
mov
cmp
xor
stos
push
test
rcr
shl
jge
mov
pop
in
repnz
fld
pop
test
nop
in
jns
jecxz
pop
inc
cwde
je
xchg
add
fiadd
imul
add
imul
pop
xchg
mov
mov
jle
sub
dec
in
pop
sbb
lea
add
adc
or
inc
and
shl
push
iret
imul
fmul
jle
sub
sar
or
test
sahf
jno
jl
add
test
retf
xchg
xor
add
pop
xlat
push
retf
jmp
jg
cmp
push
push
in
or
les
jmp
push
pop
push
sbb
dec
and
cmp
fsub
and
ins
fisubr
addr16
sbb
mov
inc
jmp
add
fst
and
outs
dec
dec
retf
movs
pop
pop
pusha
enter
sahf
outs
or
mov
fiadd
fisttp
cmp
or
add
pop
pop
jae
jmp
adc
push
mov
jge
xlat
sbb
jb
add
nop
arpl
inc
test
jno
sbb
add
inc
push
add
adc
lds
sub
out
sar
cmp
jmp
lods
pop
fistp
test
push
lea
hlt
(bad)
pop
adc
in
shl
sbb
rcr
fcom
call
ds
test
or
jbe
sub
scas
adc
dec
imul
cmc
cmps
data16
and
add
ror
cs
adc
imul
mov
jle
inc
arpl
and
in
mov
sbb
push
and
mov
jb
imul
in
add
cmp
int3
ins
mov
rol
push
retf
cdq
cdq
cdq
mov
cmp
sub
into
pop
xchg
pop
sbb
ins
xor
pop
adc
imul
mov
retf
adc
data16
pop
rdpmc
cwde
or
and
jb
or
xor
scas
adc
cmp
scas
ds
xor
repz
add
aas
add
rol
(bad)
out
mov
in
cmp
aas
mov
dec
scas
lock
js
add
pop
fadd
cld
add
inc
xor
sub
push
fld
add
mov
sar
aad
inc
add
dec
jne
inc
mul
ror
das
sbb
push
adc
add
jmp
or
pop
lock
popf
pop
das
jmp
cmp
adc
mov
mov
mov
push
pop
fistp
pop
(bad)
(bad)
fild
push
inc
jb
popa
jns
push
jns
je
ins
cs
push
fadd
jns
popa
jb
arpl
pop
add
mov
and
sub
push
aas
adc
test
dec
icebp
dec
add
sbb
icebp
inc
ss
xor
mov
rdmsr
aas
scas
(bad)
outs
fmul
push
dec
mov
mov
jmp
mov
jae
sysenter
cwde
adc
add
mov
loopne
or
vunpcklps
sub
mov
rcl
sub
or
test
adc
sbb
sub
and
into
mov
xor
pop
and
or
pop
cmp
inc
sbb
jl
sbb
and
jecxz
shl
push
pop
or
aas
iret
rol
ins
fild
fstp
fwait
mov
adc
rcl
mov
test
fstp
imul
mov
mov
data16
jmp
dec
sahf
pop
rcl
dec
pushf
push
pushf
push
sub
adc
loopne
pop
dec
push
imul
sbb
fistp
adc
cmp
add
test
pop
loope
jp
sub
das
imul
(bad)
sub
xchg
shl
bound
(bad)
dec
mov
(bad)
ret
sub
sbb
pop
mov
cmps
mov
jno
cmp
scas
or
jo
cmp
aad
mov
push
push
push
adc
cdq
std
cmp
idiv
and
push
or
neg
add
add
or
jns
out
and
(bad)
mov
ror
and
out
enter
pinsrw
pop
cmp
fldcw
(bad)
call
push
push
add
mov
cmp
xchg
or
dec
enter
sbb
adc
xchg
fsubr
pop
call
dec
mov
jne
inc
fmul
dec
ja
mov
add
xchg
jge
int3
in
or
cwde
rcr
push
sub
sub
add
fsub
outs
aad
sub
push
mov
xor
cdq
in
push
adc
shl
push
adc
repz
enter
leave
std
loop
cmp
xor
mov
loop
dec
scas
loop
call
inc
cwde
dec
and
mov
mov
enter
pop
sub
imul
or
adc
mov
test
sbb
mov
push
mov
sub
out
nop
cdq
xor
call
xchg
addr16
adc
mov
or
pop
stos
js
std
adc
or
cmp
pop
test
aaa
mov
jecxz
loopne
jp
ins
popa
xchg
shl
xchg
pop
add
add
cmp
mov
(bad)
addr16
test
add
cmp
mov
xor
mov
jmp
xor
jmp
mov
ret
dec
lock
xchg
adc
rcl
jle
add
xor
es
push
sub
adc
or
inc
movs
mov
test
jne
test
je
cmp
jne
fbld
fdivp
cmp
sub
mov
and
or
cld
pop
fadd
sbb
mov
aaa
sbb
sete
mov
sub
in
js
push
add
pusha
xchg
pop
outs
bound
push
int
add
shl
cmp
fimul
cld
mov
mov
cmps
call
(bad)
jae
adc
add
pop
add
(bad)
(bad)
add
or
cli
clc
pusha
or
retf
into
punpckhwd
inc
pusha
inc
add
mov
daa
(bad)
add
int
jnp
(bad)
fimul
pop
cmp
mov
cmp
sbb
or
pop
cmp
xlat
loopne
mov
push
sbb
out
aam
repz
(bad)
xlat
adc
jmp
loopne
cld
adc
xor
pop
jo
cmp
lea
bound
mov
push
adc
xchg
jbe
sub
cli
fstp
int3
iret
inc
cs
add
loope
fwait
or
pop
dec
int3
int3
dec
in
lahf
or
das
jl
test
ret
mov
or
mov
sub
shl
pop
cli
ror
push
out
fiadd
ins
call
fstp
or
adc
repz
xor
ret
popf
mov
mov
push
test
pop
sbb
adc
aam
pop
ret
test
cs
fcomp
adc
xor
or
jmp
jb
imul
bound
pop
and
push
push
mov
push
clc
icebp
cmp
pop
cwde
mov
cmp
push
mov
ret
adc
and
pushf
fst
or
sbb
call
(bad)
into
push
adc
inc
adc
mov
pop
pop
xchg
out
pop
int3
adc
mov
mov
mov
jb
mov
(bad)
jo
cmp
sbb
and
dec
dec
dec
iret
repz
repz
sbb
jno
rcr
loop
mov
test
pop
adc
cs
cs
push
adc
ins
ret
stos
sub
adc
mov
addr16
pop
int3
sbb
push
mov
or
imul
push
mov
sbb
jl
movs
xor
std
aaa
fimul
mov
pushf
inc
jbe
inc
loopne
inc
adc
addr16
addr16
cmp
enter
fild
sbb
out
pop
adc
jae
ins
cwde
dec
inc
adc
pop
jno
mov
xchg
inc
xchg
mov
cmp
sub
lods
sbb
mov
shr
or
les
sub
mov
aam
mov
add
xchg
jo
call
test
push
cmps
or
cwde
mov
inc
cmp
aaa
and
and
lock
push
loopne
add
and
popa
fs
cmp
imul
mov
fwait
or
push
pop
fistp
aas
sub
push
add
and
mov
sahf
cmps
jge
sbb
lods
icebp
dec
rcl
dec
xchg
pushf
mov
mov
add
ss
adc
ss
lock
add
cmp
popa
add
fnstsw
sbb
sbb
std
inc
fld
pushf
sbb
jmp
stos
or
leave
out
cs
or
or
push
lahf
in
xchg
movs
mov
xor
mov
in
sub
push
xchg
pushf
cmp
cmp
or
ins
adc
push
xor
pusha
or
hlt
jge
sbb
test
or
pop
xchg
js
mov
bound
mov
imul
call
call
outs
fdiv
loopne
bound
movs
arpl
push
int3
nop
icebp
sbb
jge
adc
jl
sbb
mov
sbb
adc
in
shr
test
add
mov
jbe
lock
cmp
fstp
mov
adc
cmp
push
xchg
fidivr
add
xlat
(bad)
pushf
or
cmp
cwde
pop
scas
test
sub
in
(bad)
mov
fbstp
lea
lea
movs
add
adc
fdivr
add
ja
fiadd
and
push
in
sub
adc
sbb
jo
jmp
sbb
push
xor
lods
push
out
lahf
sti
cmp
mov
pop
lock
arpl
pop
jae
inc
add
mov
aaa
lock
int
push
shl
push
fs
add
test
or
jae
dec
fs
adc
sbb
cmp
jg
sbb
sbb
sub
or
push
clc
mov
jno
fimul
cmp
xchg
movsx
bound
aaa
push
push
mov
ins
fdivr
dec
jge
mov
fsubr
mov
mov
in
sti
cli
sti
pop
ja
pop
adc
jle
out
pop
retf
lock
and
repz
push
sub
clc
or
push
sti
mov
push
lock
xor
push
int3
jno
call
jmp
(bad)
fsubr
lods
pop
add
xchg
jmp
(bad)
cmp
vorps
jnp
fwait
adc
or
sub
mov
jne
add
push
rcl
mov
repnz
dec
in
jno
fwait
inc
inc
mov
cmp
jmp
mov
xchg
and
mov
jbe
mov
inc
mov
mov
push
add
sub
call
adc
in
push
movs
loop
and
sub
xchg
not
aaa
xor
fcmove
pop
jl
ret
rcl
and
push
ins
push
in
cmp
mov
push
int3
fild
fadd
push
loopne
pop
les
les
lea
sub
jg
test
sub
pop
movs
test
and
inc
pusha
cwde
test
mov
sub
mov
jg
in
inc
jo
jge
pop
xchg
mov
dec
lahf
adc
and
or
pop
int3
cmp
and
sbb
cmp
mov
push
and
and
push
xor
ficom
imul
inc
iret
cmp
push
xor
sbb
pop
jnp
int3
add
pusha
sub
(bad)
enter
adc
ins
inc
daa
adc
es
adc
pop
sub
inc
jg
pop
das
lods
shl
fisttp
mov
cmc
popa
add
push
mov
push
push
scas
dec
dec
xor
adc
loope
adc
dec
add
(bad)
ins
mov
add
inc
lahf
inc
lea
(bad)
loopne
or
cli
and
sbb
add
movs
pushf
pop
pop
jl
sub
inc
inc
std
fisttp
jne
push
enter
cmp
jle
xchg
neg
dec
xor
cmp
jne
cmp
pop
jmp
jg
and
xor
jae
or
ror
jns
mov
or
cdq
gs
adc
fcomp
and
cwde
mov
cmp
push
or
inc
or
mov
dec
cmp
jne
or
add
push
jl
inc
jne
retf
inc
add
mov
xor
pushf
les
push
in
jae
sub
(bad)
sub
inc
shr
adc
es
or
or
add
xor
inc
es
xlat
es
sbb
popa
not
ds
int3
sbb
add
lock
push
je
sub
sbb
add
or
cmp
and
lahf
add
ret
movzx
or
inc
rcl
push
adc
or
cmp
pop
pop
push
sub
jns
addr16
push
das
aas
push
gs
jns
js
mov
mov
test
sub
adc
add
push
sbb
fidiv
sub
sbb
sub
jne
imul
sub
xor
push
(bad)
ror
add
adc
dec
sbb
out
dec
or
rol
fst
jmp
imul
mov
jmp
aaa
and
fidivr
cmp
clc
lods
jl
imul
push
cld
jge
leave
shl
cmc
add
scas
and
mov
jg
add
fsub
jmp
jbe
out
test
xchg
pop
mov
or
or
fsub
mov
cmps
mov
sbb
sbb
push
add
fwait
and
adc
dec
xor
push
cmp
sub
sub
sub
adc
jns
sbb
sbb
xchg
lea
inc
adc
jno
dec
mov
outs
int3
lea
data16
test
mov
push
add
imul
push
pop
push
dec
mov
or
das
aam
push
and
or
ficom
popf
ret
popf
pop
(bad)
out
cmp
inc
das
sub
inc
cmp
arpl
mov
(bad)
pop
ja
das
dec
push
bswap
daa
das
out
addr16
pop
(bad)
out
aaa
retf
mov
test
shr
push
add
mov
(bad)
call
cli
xor
mov
jns
movs
fdivr
jb
mov
jmp
push
test
mov
out
pop
fld
int
imul
stc
js
jmp
repnz
sbb
mov
not
fmul
cwde
xchg
push
loopne
xchg
or
add
test
xchg
aas
sbb
popf
xchg
xor
jl
leave
cmps
cwde
jmp
out
jmp
and
out
dec
and
mov
lock
add
inc
sbb
fs
daa
test
cmp
xor
and
adc
push
xchg
sub
cmp
inc
mov
add
inc
xor
push
retf
pop
loopne
out
mov
push
push
add
lahf
xor
stos
les
cmp
ret
cmp
push
xor
pop
pop
ror
pop
cwde
pop
lock
mov
pop
jp
test
jge
push
mov
neg
mov
mov
fcom
test
test
and
add
loopne
push
loopne
and
mov
loop
cmp
and
leave
test
and
cmc
ja
dec
imul
pop
lods
sub
sbb
pusha
jne
mov
out
mov
js
retf
jbe
jno
jno
ror
fisttp
adc
or
jbe
cmp
or
rcl
shl
jae
shl
sbb
xchg
jp
data16
dec
arpl
jl
pop
nop
ret
jo
icebp
lds
in
add
mov
aam
and
mov
arpl
xchg
out
leave
daa
xlat
mov
es
sub
push
outs
daa
mov
cwde
sub
add
xor
xor
push
jne
adc
mov
or
jae
gs
sub
je
pop
cwde
push
cmps
mov
or
ins
cmps
jns
cs
sbb
lea
push
push
lock
push
cld
fldcw
js
loopne
les
test
inc
lds
push
dec
lods
mov
movs
cmp
call
sbb
xor
mov
iret
mov
les
push
mov
pusha
loope
jmp
movs
movs
mov
stos
mov
les
into
add
pop
mov
or
dec
or
retf
jle
(bad)
outs
lock
shl
dec
and
jg
adc
mov
cmps
cwde
inc
adc
mov
add
push
sub
jae
mov
mov
sbb
pop
jns
cmps
stc
push
movs
sbb
out
push
inc
add
fs
ins
fcmovne
xchg
jbe
pushw
int3
addr16
hlt
push
in
add
mov
inc
xor
inc
push
and
or
jns
gs
outs
outs
xchg
mov
push
outs
dec
popa
out
dec
fild
sub
gs
sub
xor
icebp
mov
jl
test
push
dec
add
syscall
add
sar
dec
or
push
gs
ins
push
popa
arpl
addr16
daa
pop
inc
sar
in
jb
jns
or
add
cmp
mov
push
gs
data16
add
call
gs
jae
sbb
jmp
inc
sub
fdiv
adc
outs
fs
ret
mov
push
jne
xchg
loopne
imul
fbld
or
pop
push
and
push
shl
imul
fsubr
(bad)
loopne
adc
jg
pop
xchg
xchg
mov
xchg
push
pop
mov
push
outs
mul
fmulp
push
test
test
or
xor
pop
and
ucomiss
xchg
push
push
dec
jb
push
add
dec
add
inc
jb
jle
fmul
fbstp
sbb
(bad)
fld
fcmove
rol
sbb
dec
adc
xor
jae
ds
sub
and
mov
xor
test
and
mov
pop
sub
inc
pop
cmp
in
mov
push
jbe
int
or
push
adc
pop
data16
ret
ins
add
jp
xchg
pop
ret
push
jbe
add
and
inc
dec
in
pusha
das
adc
push
dec
imul
pop
test
(bad)
xor
dec
ja
cli
or
mov
push
gs
(bad)
mov
add
xchg
fstp
ret
bound
inc
push
pushf
psrlq
(bad)
mov
call
xor
out
call
cmp
cmp
lds
jo
xchg
dec
imul
push
(bad)
xchg
or
call
jae
adc
clc
sub
inc
inc
ins
popa
jae
fisttp
inc
and
fld
jno
into
mov
shl
push
enter
imul
push
jb
xchg
inc
add
sbb
inc
mov
ins
(bad)
in
pop
push
cmp
or
push
sub
cmp
out
sub
popa
fcomp
push
outs
sub
es
cmp
sub
ds
pop
mov
out
ds
xchg
pusha
ins
dec
lahf
add
dec
gs
aaa
outs
pop
add
inc
jne
or
cmps
outs
xlat
fidivr
outs
add
addr16
pop
test
xor
data16
jb
popa
jns
and
add
adc
int3
cli
dec
push
aas
xchg
add
lgdtd
pop
or
sbb
add
out
xchg
outs
jne
push
add
pop
sahf
je
jg
hlt
aas
inc
shr
test
dec
outs
jbe
dec
gs
jmp
je
mov
lods
ror
push
cdq
sbb
mov
outs
stos
imul
arpl
push
push
aaa
jecxz
or
mov
jp
add
pop
push
pop
inc
jne
xor
mov
cmp
nop
das
scas
push
sbb
add
inc
push
sbb
push
jo
sub
xchg
or
dec
push
dec
push
daa
pop
shl
cwde
bound
add
in
cmc
add
jno
and
call
outs
pop
push
aas
mov
outs
add
div
pop
dec
inc
sub
push
ret
fbld
das
fbld
ret
adc
cmp
xor
lea
jb
rol
push
loope
loopne
imul
or
scas
push
jnp
popa
jae
in
fs
daa
mov
mov
add
mov
jo
add
clc
cmps
jno
fild
pop
push
push
movntps
fistp
dec
inc
jno
je
inc
ins
jo
pop
sti
rcr
rcl
mov
ficomp
shr
adc
adc
or
push
add
xlat
in
dec
outs
or
inc
and
nop
movs
or
inc
mov
dec
bound
add
push
pusha
add
dec
and
push
push
and
or
xchg
(bad)
lock
or
pop
or
into
pop
sub
mov
or
and
add
cmps
cs
ins
adc
mov
les
add
adc
mov
xchg
shl
sub
mov
push
push
sub
add
rcl
int
inc
add
add
movs
inc
mov
sbb
pop
add
mov
aam
pop
add
and
test
push
push
jnp
jno
mov
push
pop
adc
loopne
out
rcr
mov
movs
rol
cmp
fmul
out
add
and
rcr
dec
inc
sub
aaa
pop
sub
add
mov
add
ds
in
inc
jo
mov
push
or
adc
pop
jbe
lea
add
arpl
dec
daa
pushf
movs
or
add
sbb
sub
iret
push
inc
jle
ror
jo
sub
push
or
xor
pop
ficom
add
dec
test
add
jo
push
add
sbb
mov
imul
in
lock
jns
pop
lods
sub
jg
pop
das
sbb
xchg
call
icebp
test
icebp
xlat
dec
adc
je
fbld
ds
movs
das
ret
push
out
movs
test
adc
fisttp
in
ins
fild
sbb
fbstp
push
or
add
push
iret
inc
push
iret
outs
push
inc
shl
mov
sbb
fisub
mov
push
mov
push
or
test
mov
aad
out
retf
and
jns
xchg
outs
inc
sbb
cmp
adc
push
sub
xchg
inc
out
jne
imul
push
daa
mov
(bad)
pop
and
inc
daa
mov
inc
sub
jne
push
or
push
daa
inc
xchg
and
sub
cmp
add
and
retf
mov
mov
jns
jg
fsub
add
xor
add
push
popa
jmp
arpl
cwde
in
sub
jbe
xchg
pop
add
inc
push
xchg
es
fstp
mov
cmp
or
pop
ins
lock
cs
das
and
in
push
xlat
xlat
pop
push
xlat
mov
das
sbb
xor
mov
mov
mov
jne
xor
xor
shr
icebp
xor
add
retf
repz
sets
jo
adc
out
mov
jmp
arpl
imul
cmp
push
cmp
add
in
das
add
jo
xlat
push
aaa
lods
sub
sahf
jp
aaa
test
and
add
int3
jne
aaa
inc
or
xchg
cmp
ja
dec
lods
enter
inc
mov
push
cmp
jns
or
mov
lods
xor
fnstsw
enter
cmp
es
push
add
mov
mov
dec
das
das
dec
adc
mov
fist
mov
adc
adc
push
pop
sar
pop
xlat
ret
jb
cld
push
jecxz
or
add
xor
inc
jmp
imul
or
repz
add
mov
inc
jb
ja
push
jmp
adc
sbb
or
dec
outs
dec
fist
sbb
and
lods
xor
cmps
xor
xor
outs
mov
adc
add
pmullw
dec
xlat
fld
push
sbb
test
rcr
dec
arpl
xlat
jbe
jo
dec
cmp
pop
ss
push
jne
mov
sub
dec
push
aaa
sbb
out
or
inc
inc
popa
adc
mov
or
jae
push
cmp
xchg
dec
test
aam
inc
rol
jecxz
push
shl
ret
add
or
sub
enter
pusha
mov
mov
jae
je
adc
cmp
mov
or
add
fs
loope
adc
test
sbb
or
xor
in
jl
push
pop
adc
js
fld
add
mov
or
retf
mov
iret
outs
sbb
adc
push
repz
mov
xchg
and
inc
add
ins
dec
inc
add
sub
and
or
mov
inc
(bad)
push
or
stos
cmp
hlt
mov
sti
and
xchg
pusha
mov
int3
ds
xchg
dec
jb
xchg
out
rcl
push
fneni(8087
push
cmp
or
dec
cmp
adc
xchg
ins
adc
add
out
popa
push
sbb
jnp
add
sub
popa
test
push
(bad)
mov
mov
ret
push
add
sbb
loope
in
dec
xor
sbb
add
mov
sbb
pusha
test
dec
daa
ret
test
add
sbb
mov
adc
adc
adc
int
outs
and
retf
call
and
add
push
cmp
aas
add
jae
pop
pop
in
cs
cmp
dec
int3
dec
or
pop
inc
or
mov
pop
dec
push
mov
es
test
inc
push
pushaw
xor
cmps
or
sbb
add
or
pusha
xchg
iret
ja
mov
sbb
pop
pop
ss
or
outs
cmps
sbb
imul
cmp
loopne
fcomp
(bad)
adc
mov
in
pusha
movd
or
xor
test
add
cmps
mov
sub
mov
add
cmps
in
les
fsub
xor
ins
popa
push
cmp
ja
add
fcomp
push
fsubr
aam
pop
in
add
pop
je
add
mov
loop
dec
dec
xchg
pop
lods
pusha
push
scas
popf
push
cmps
push
loope
xor
adc
jno
rcr
bound
loopne
int
pop
cmp
sbb
xor
pushf
mov
mov
sub
loopne
push
sub
lds
xchg
sub
test
add
pusha
push
ins
shr
cmps
shr
add
shl
data16
cmp
push
fcom
cmps
xor
sbb
ud2
adc
into
add
xchg
movs
jne
in
mov
push
mov
loope
test
cwde
pop
add
inc
add
pop
fs
gs
jge
jo
or
push
xor
mov
dec
fsub
and
xor
leave
loopne
dec
in
je
pusha
stos
add
test
jg
pop
push
mov
pop
das
adc
pushf
sbb
push
ja
lods
sub
shl
enter
cmp
enter
stos
cwde
jne
leave
das
out
pop
add
int3
cmc
stc
fbstp
sub
iret
bound
scas
lds
iret
xchg
push
inc
imul
cmp
push
adc
(bad)
(bad)
scas
add
je
sub
add
fldl2t
gs
add
jmp
call
add
inc
pusha
xchg
inc
or
xchg
or
sub
inc
pop
inc
loope
sbb
pusha
rol
pop
fstp
mov
mov
cmc
das
or
adc
daa
outs
adc
in
and
in
sub
add
in
push
ja
call
dec
xor
sbb
push
out
xor
test
out
call
rcl
sub
sub
add
cmp
pop
mov
or
sub
or
xor
jo
clc
inc
ficom
in
sub
in
aam
push
pop
add
pop
and
mov
push
mov
sbb
inc
xor
jo
cs
pop
comiss
xlat
loop
xlat
jg
xlat
lods
push
add
mov
inc
mov
add
loopne
out
call
scas
xor
popf
rol
xor
lea
dec
test
and
pop
out
push
push
sub
adc
mov
sbb
pushf
in
push
mov
push
add
pop
push
loopne
adc
add
push
add
adc
shl
sub
in
clc
aaa
mov
call
stos
popa
jne
jmp
in
sbb
jmp
add
inc
mov
fsubr
mov
xor
xor
inc
inc
sub
stos
js
popf
fisttp
inc
xlat
add
push
add
push
fcomp
repnz
mov
fnstenv
inc
test
fbstp
out
adc
push
cwde
push
fadd
arpl
xor
in
inc
xor
test
pop
dec
rol
xor
push
ins
inc
es
test
stos
inc
xor
push
add
dec
xchg
ror
popf
fild
cmp
(bad)
xlat
bswap
retf
ss
xchg
xor
xchg
daa
daa
daa
xor
test
idiv
pushf
xchg
xchg
xchg
xchg
pop
jbe
jo
pop
popa
push
dec
shl
cmp
cmp
xchg
shr
sbb
out
inc
call
sbb
mov
or
and
jno
jecxz
and
test
mov
add
pop
(bad)
rcl
add
daa
adc
xor
test
fwait
js
rol
dec
inc
inc
and
pop
and
repz
lds
cwde
add
rcl
(bad)
inc
repz
push
cmp
test
inc
mov
inc
mov
add
or
inc
sbb
add
push
pop
dec
add
mov
xchg
push
push
inc
inc
test
sub
pusha
add
dec
shl
add
les
jae
xor
add
pusha
mov
imul
test
mov
loopne
xor
movs
mov
arpl
mov
add
add
pop
push
add
mov
test
inc
fadd
imul
and
mov
or
pusha
add
aaa
and
mov
add
add
aaa
push
inc
cmp
aaa
stc
nop
or
rcl
lea
push
mov
mov
mov
sti
call
mov
call
pop
pop
ret
mov
es
je
add
and
jne
mov
jmp
fimul
push
push
sbb
test
je
cmp
into
lock
fs
push
add
sub
jbe
std
pop
ja
push
push
xor
mov
mov
call
add
add
jl
inc
xor
xor
dec
jne
ins
popf
std
imul
mov
and
xchg
adc
jg
ja
adc
pop
mov
movlps
jo
mov
and
xor
and
je
enter
rol
xlat
add
or
lods
lds
adc
mov
push
imul
mov
arpl
mov
gs
sahf
add
gs
gs
jne
je
mov
push
xchg
push
xchg
ret
(bad)
pop
jle
(bad)
ret
int3
add
push
mov
xchg
fcos
or
and
hlt
jmp
adc
jb
out
loopne
sbb
fst
jecxz
in
int
push
mov
adc
pop
jge
arpl
test
push
add
mov
pop
mov
cmps
push
adc
and
or
ficomp
pop
jo
loop
ja
push
push
fnsave
pop
dec
retf
hlt
(bad)
cld
ss
mov
xor
and
add
sub
inc
cli
daa
call
xor
sub
mov
mov
jge
js
jne
addr16
in
or
pop
test
inc
push
sub
xor
push
pop
inc
nop
push
jnp
add
lahf
sahf
adc
dec
ds
adc
sti
add
addr16
or
or
loope
cmps
pop
fisttp
and
sub
xchg
das
jmp
cmp
aad
adc
adc
sti
es
div
push
add
jno
add
daa
int3
outs
sbb
ficomp
mov
(bad)
jne
sahf
push
daa
add
inc
inc
push
gs
pop
push
push
pop
pusha
xor
out
loopne
xchg
or
adc
pop
mov
clc
xor
mov
inc
pusha
(bad)
add
cld
dec
test
jl
inc
xor
sbb
stos
add
dec
cmp
add
or
jns
out
mov
cmp
je
jne
cmp
adc
sub
sbb
xchg
mov
(bad)
lahf
push
dec
cmps
and
xlat
add
out
pop
mov
and
ror
lock
cmp
jne
mov
fld
lea
push
xor
clc
mov
mov
or
adc
and
lock
rol
ret
nop
push
mov
mov
cmp
jbe
pop
fcomp
enter
adc
mov
imul
rcr
jmp
out
mov
xor
sbb
push
mov
in
into
pop
or
add
push
(bad)
push
lock
mov
sub
sub
and
js
mov
push
fldlg2
sti
jl
or
push
jns
mov
adc
mov
and
mov
mov
in
xor
sti
or
js
jne
adc
xor
push
sbb
mov
or
fbld
test
jmp
test
je
cmp
outs
aas
js
adc
xor
inc
add
inc
add
mov
add
cmp
ins
data16
inc
jne
xchg
inc
pushf
mov
mov
lock
pop
xchg
daa
lock
clc
add
fldenv
in
in
push
in
in
fmul
mov
inc
xor
inc
nop
mov
scas
dec
adc
dec
jne
adc
cmps
xor
ror
adc
stos
(bad)
loope
dec
call
sar
mov
pop
js
xor
xor
mov
push
fst
or
xor
pop
fsub
push
mov
jmp
push
fsubr
out
cmp
in
sub
or
cmovs
cmp
inc
add
loopne
stos
pop
sub
add
or
dec
add
data16
aas
xchg
(bad)
mov
bound
ins
and
xchg
mov
call
add
sbb
or
push
mov
inc
or
sbb
mov
loope
nop
add
pop
dec
rcl
pusha
lahf
add
pop
pop
and
pop
inc
or
adc
jbe
push
or
pop
aam
repnz
or
add
pop
mov
repnz
jg
mov
retf
lea
sar
jns
ins
rcr
rcr
dec
sbb
mov
fidiv
ret
fisttp
mov
sub
dec
jg
addr16
jle
pop
cld
sbb
mov
aas
pop
or
or
jp
push
push
mov
mov
mov
mov
sub
cli
adc
push
ins
fidiv
dec
push
in
pop
aam
fsub
aad
xlat
push
addps
add
lods
pusha
sbb
push
dec
sub
jge
pusha
cmp
data16
add
(bad)
hlt
add
int3
push
pop
lahf
pusha
mov
xchg
jbe
inc
test
je
shr
add
xchg
fxsave
inc
adc
in
sub
push
push
or
mov
sub
push
and
add
and
adc
mov
bound
clc
lea
popf
push
enter
mov
in
sbb
mov
sub
ds
out
adc
shl
jo
loope
and
xchg
ss
push
lds
push
stos
fimul
into
push
adc
jbe
cmc
dec
pop
mov
rol
aas
jg
ror
jp
loop
call
mov
xor
popa
xchg
outs
mov
adc
jne
inc
jo
cli
aas
add
lods
fdivr
fdivr
xor
inc
mov
cmp
clc
inc
mov
mov
call
add
adc
add
jbe
inc
aas
outs
adc
or
les
std
push
inc
jo
jmp
ds
idiv
shl
dec
and
jns
mov
and
ret
imul
xchg
int
lods
repz
lods
sub
mov
outs
outs
ins
push
outs
imul
add
outs
mov
sahf
add
sbb
xor
cdq
shl
dec
dec
outs
mov
mov
jge
scas
out
cwde
jo
jl
push
sti
cld
adc
cmp
int
xor
adc
inc
sbb
xor
js
loope
daa
mov
mov
scas
pop
push
sbb
jge
add
cs
jno
das
loope
mov
push
adc
or
or
adc
push
int3
outs
mov
imul
sbb
loop
xor
sbb
fld
inc
push
sbb
movd
pushf
jne
ror
jbe
aad
xchg
retf
stos
(bad)
pop
inc
push
rol
sbb
pop
cs
inc
idiv
dec
cld
lock
sbb
inc
clc
jne
inc
ins
ja
test
ins
or
and
pop
dec
lock
jo
inc
add
je
data16
mov
push
ins
fcomip
xor
add
add
push
std
mov
add
or
(bad)
cdq
jmp
add
adc
pop
clc
push
jp
pop
push
shl
jl
add
or
push
add
pop
nop
and
outs
add
js
add
adc
sub
clc
push
mov
jne
xchg
test
add
jge
ficom
loopne
mov
cmp
nop
sbb
into
sbb
fsub
jmp
jp
dec
or
sub
add
lock
add
jl
pop
cld
(bad)
sahf
mov
call
mov
dec
and
enter
jle
cmp
ja
jl
retf
inc
idiv
and
mov
clc
add
cmp
add
add
jns
movs
cs
js
shl
sub
push
jge
or
test
jnp
pop
jmp
lea
fcomp
or
ror
scas
loopne
jmp
adc
xchg
jbe
jne
sub
je
ds
push
adc
ret
sub
call
jmp
gs
add
popa
adc
ins
clc
add
bound
mov
xor
adc
sub
fstp
or
push
loopne
(bad)
pushf
and
jae
add
pop
mov
or
xchg
ret
pop
push
nop
in
push
imul
enter
dec
loop
mov
mov
mov
add
xchg
push
mov
mov
shl
shr
xchg
sbb
(bad)
jo
pop
mov
ss
fcomp
adc
cmp
fcom
mov
dec
stos
or
xor
sbb
push
mov
imul
push
inc
dec
xadd
aam
pop
mov
xor
ins
xor
imul
ins
adc
aaa
mov
mov
js
and
loopne
sbb
pop
cmps
xchg
scas
mov
push
pop
cmp
retf
lock
test
and
jb
mov
in
push
jg
sub
inc
lock
(bad)
jmp
bound
arpl
cmp
lock
mov
add
xchg
in
je
sub
sti
xchg
sti
xlat
test
sti
(bad)
sbb
adc
add
xor
int3
add
mov
inc
pop
fwait
jl
sbb
je
iret
cmps
shl
or
add
dec
mov
not
push
movzx
add
mov
push
add
sub
movs
shr
scas
mov
inc
shl
ins
inc
jmp
cmp
enter
jo
ins
in
cdq
mov
data16
(bad)
and
mov
fmul
aam
aam
je
fidivr
add
adc
ins
call
inc
dec
sub
inc
xchg
sbb
sbb
inc
mov
add
fsub
dec
stos
je
push
ins
adc
push
leave
sahf
ja
lock
shl
shl
rcl
shl
shl
clc
ret
popf
jmp
mov
add
dec
test
lock
push
jge
cmp
jbe
ins
inc
jbe
loopne
imul
scas
aas
inc
je
mov
mov
add
addr16
mov
out
mov
mov
(bad)
cmp
pop
sahf
pop
jmp
call
xchg
imul
gs
ins
outs
jae
jb
add
xor
cmp
add
add
daa
pop
or
adc
lahf
mov
adc
jo
pop
mov
xchg
add
sbb
inc
jne
outs
ins
inc
es
push
or
fisub
and
sar
sbb
pusha
daa
mov
pusha
add
pop
movs
retf
mov
xor
stc
xchg
test
cmp
or
inc
add
xor
sbb
jg
sbb
sbb
ss
das
bound
jg
inc
pop
rcr
cld
ja
or
pop
jecxz
jbe
xchg
scas
push
(bad)
xlat
lock
(bad)
xchg
daa
mov
daa
adc
push
xor
sub
rcl
out
xor
arpl
imul
add
pusha
dec
inc
sub
adc
ret
aaa
pop
gs
jo
stos
pop
(bad)
in
fild
ins
scas
adc
push
dec
imul
cs
push
outs
push
and
mov
inc
loopne
ror
mov
push
adc
mov
mov
es
inc
inc
idiv
inc
les
iret
shl
add
push
or
adc
add
js
pop
ret
sub
rcl
push
leave
bound
ror
adc
adc
ins
into
out
dec
add
xor
mov
jnp
movs
inc
lds
scas
sbb
push
or
adc
cmp
out
xor
xchg
sub
push
or
jne
arpl
ja
adc
fnstsw
sbb
and
add
push
mov
movs
push
xlat
mov
inc
out
(bad)
and
push
fadd
cmp
nop
sbb
inc
add
and
inc
shl
js
push
fsubr
cmp
push
dec
sub
jmp
xor
sub
push
cmp
mov
mov
add
cld
xchg
or
add
ret
mov
pop
aaa
pop
cs
sbb
dec
inc
pop
add
adc
sub
shr
shl
into
mov
push
sub
xor
inc
push
fsub
mul
shl
pusha
into
push
out
mov
push
fwait
sub
or
push
or
ret
sub
pushf
push
or
call
add
pop
mov
pop
mov
or
sub
stos
xor
ftst
(bad)
arpl
add
std
sbb
xchg
pop
push
dec
sbb
push
sbb
pop
adc
cmovs
call
xchg
jmp
leave
leave
(bad)
stc
inc
mov
(bad)
jl
jb
mov
jb
sbb
shld
cmp
sbb
mov
popa
stos
cmp
(bad)
xor
(bad)
lds
mov
fimul
push
or
inc
push
push
imul
out
dec
mov
dec
int
cmp
dec
mov
push
or
or
inc
int
xor
add
add
test
ror
jae
xor
push
pop
xor
or
ds
dec
fisub
cmovns
dec
jae
push
lock
enter
add
push
popa
jg
dec
mov
jg
test
lahf
xor
dec
rol
inc
fs
or
push
popa
ins
jne
cmps
push
inc
add
sub
push
popa
xchg
fst
ret
outs
sub
jmp
add
jo
or
or
ret
cdq
jbe
mov
dec
jl
ja
jl
popa
div
dec
pop
inc
mov
jae
dec
add
ror
or
out
out
ficom
or
cmp
dec
push
xor
out
xchg
and
das
leave
call
gs
lock
mov
lds
mov
inc
aaa
pop
xchg
pop
dec
jae
iret
int3
or
imul
add
or
dec
add
adc
sbb
jl
inc
mov
add
mul
or
add
imul
test
stos
sbb
lea
xor
dec
add
push
xor
pop
fisttp
mov
outs
push
dec
add
shl
ficom
je
add
inc
xor
cdq
adc
jns
ss
cwde
pop
xchg
shl
aam
dec
add
dec
rol
fimul
iret
in
xor
daa
push
adc
or
jl
ret
gs
and
inc
mov
adc
(bad)
shr
popa
inc
nop
fadd
sub
add
add
push
adc
push
cli
jo
ror
dec
aaa
add
aad
ins
lock
adc
call
and
ins
loopne
adc
dec
mov
mov
jbe
rcl
cmp
add
inc
jno
sahf
jns
sahf
mov
movs
xor
adc
mov
rol
aam
sti
xor
dec
or
cli
(bad)
int
adc
cmp
or
loop
jns
sbb
or
adc
mov
fld
stos
popa
pop
add
or
add
mov
xchg
dec
test
jg
sub
jl
or
ins
test
cmp
inc
ret
add
xor
adc
dec
test
ins
lea
mov
fcom
pop
pop
lea
push
adc
push
or
imul
xchg
adc
xchg
pop
pop
movs
xor
xlat
push
mov
mov
xor
stos
or
sbb
adc
add
sbb
aaa
rcr
mov
pop
popa
dec
arpl
jns
add
dec
ins
pusha
and
inc
cmp
push
adc
add
aam
inc
ret
(bad)
mov
add
loopne
add
jmp
imul
int3
adc
(bad)
adc
sbb
or
sub
in
sbb
pusha
inc
rcr
push
jne
fcmove
add
cmp
push
fiadd
add
add
xor
js
sbb
pop
or
daa
cmp
mov
jnp
add
xor
data16
imul
dec
add
cmp
mov
cwde
adc
add
ja
xchg
dec
mov
pusha
rcr
arpl
jg
cmp
mov
pop
jp
xchg
mov
shl
add
pop
pusha
jne
fadd
popf
adc
sbb
sub
adc
jb
pop
rcl
xor
test
cmp
jne
lea
mov
rcr
add
mov
outs
pop
jmp
cmp
and
and
push
hlt
cmps
xchg
lods
jae
inc
stos
or
aaa
xchg
mov
add
add
push
add
data16
xlat
mov
or
jecxz
test
adc
ret
not
in
(bad)
arpl
push
(bad)
cli
cmp
dec
sub
cmp
sbb
xor
pop
out
cmp
sbb
icebp
or
mov
or
inc
rol
and
adc
adc
add
xchg
and
and
jg
jo
outs
xchg
scas
(bad)
in
dec
call
repnz
movzx
add
sbb
or
cmp
pop
inc
mov
pop
inc
add
mov
inc
sub
fisubr
xadd
or
lock
pop
push
mov
pushf
and
jbe
jl
shl
or
sar
cmp
sbb
nop
cmps
bound
cmp
or
sub
dec
into
push
fcom
add
popa
xchg
push
push
popa
and
mov
push
je
rcl
mov
mov
adc
lock
ret
or
dec
shl
mov
jle
imul
push
test
int
mov
(bad)
dec
and
mov
add
repnz
pop
or
inc
dec
lock
mov
push
xor
ror
shr
mov
popa
sbb
mov
test
je
icebp
fwait
out
iret
jle
or
add
dec
cmp
hlt
fnsave
add
mov
mov
mov
jb
call
outs
jb
and
dec
mov
je
out
cmp
fadd
jge
mov
aas
mov
fmul
add
xchg
mov
lea
jecxz
into
icebp
ret
jl
xlat
push
test
jecxz
mov
jne
mov
inc
inc
std
int
mov
push
push
or
dec
or
leave
je
cmp
xor
sbb
mov
test
dec
push
add
ins
push
pop
int
inc
ret
scas
or
jo
popf
es
dec
mov
imul
sub
jnp
jnp
ins
aaa
leave
popf
xchg
in
ja
add
mov
jbe
jo
call
push
mov
ret
or
mov
and
xor
jl
sti
add
sub
jg
pop
imul
fadd
shl
mov
inc
test
js
sub
das
(bad)
aam
and
xchg
clc
addr16
push
cmps
adc
cwde
pop
outs
sub
push
pop
or
sahf
std
xchg
dec
cmp
jne
adc
stos
into
ss
or
cwde
out
xor
ja
out
mov
out
push
xchg
pop
cmps
adc
retf
(bad)
daa
shl
xchg
pushf
xchg
mov
push
js
out
scas
in
mov
iret
lods
cdq
inc
sbb
xchg
mov
push
pop
adc
je
push
adc
push
ret
outs
dec
out
out
outs
loopne
in
cmp
jne
mov
jmp
push
add
neg
add
rol
jmp
(bad)
xchg
call
mov
cmp
(bad)
repz
icebp
jbe
mov
mov
jmp
inc
popa
and
mov
jo
(bad)
rol
and
in
dec
movs
shr
js
stc
loop
pop
(bad)
mov
or
push
inc
mov
inc
adc
push
scas
mov
data16
scas
lock
adc
cmp
pop
sub
rcr
adc
lea
mov
or
cld
fs
popf
pusha
jp
ror
push
(bad)
mov
mov
add
sbb
xor
outs
sbb
cmp
scas
pop
fwait
test
pop
xor
shl
enter
scas
push
pop
xor
and
enter
xor
push
pop
cmp
mov
dec
test
test
jne
test
pop
mov
mov
push
xchg
mov
jg
jg
pop
stos
shl
daa
xor
adc
ret
nop
pop
(bad)
jns
add
mov
or
fs
and
nop
ins
sbb
dec
mov
sub
ins
cmps
or
inc
add
dec
lock
push
das
sbb
aaa
lahf
(bad)
mov
les
or
rcr
jmp
sub
cmp
add
push
clc
repz
cmp
dec
je
xor
out
(bad)
ficomp
cdq
xor
repz
repz
pusha
mov
xor
mov
mov
test
cdq
cmp
jne
rol
xor
jmp
data16
daa
aaa
or
scas
daa
gs
sub
sbb
gs
cvttps2pi
int3
add
out
je
inc
adc
nop
inc
cmp
nop
cmp
push
pop
jno
popa
ds
loop
mov
loopne
push
iret
mov
movs
mov
jp
repz
lock
push
sbb
push
rcl
inc
pop
mov
sbb
repz
test
adc
mov
or
jp
xor
xor
add
sub
jb
inc
jb
dec
in
or
cmp
leave
push
or
inc
push
test
jo
add
fld
mov
nop
jne
loopne
arpl
cmp
push
outs
test
fdivr
sub
xlat
daa
outs
imul
das
or
ret
nop
inc
daa
movzx
ds
mov
xchg
xchg
stc
pusha
mov
hlt
jno
shl
leave
hlt
mov
(bad)
mov
mov
call
cmp
xor
sbb
mov
push
pushf
cld
adc
push
cli
cmp
inc
sbb
jno
loopne
inc
add
ins
js
fdivr
test
push
xor
lock
fs
imul
cmps
push
popa
adc
dec
xor
pop
lods
int
add
cld
add
loope
out
setne
inc
stos
push
push
in
stos
cli
fstp
retf
jne
add
sub
fimul
sbb
(bad)
push
es
inc
imul
xchg
mov
and
add
push
push
push
and
add
lods
lahf
aaa
mov
jb
jmp
pop
jae
mov
and
and
adc
fwait
mov
mov
movs
shr
and
add
nop
xor
sbb
ins
and
mov
inc
push
cld
push
push
pop
idiv
xchg
das
mov
pop
pop
out
mov
mov
int3
mov
aam
ds
fild
mov
outs
enter
push
pushf
push
push
nop
push
fistp
mov
ds
nop
dec
and
mov
push
mov
mov
pop
fild
iret
call
sbb
out
cmp
add
dec
add
add
ins
sbb
ins
and
or
mov
ret
xchg
in
sub
pop
inc
push
popa
ds
sbb
cwde
dec
mov
ltr
test
add
pop
inc
popa
jae
imul
add
rcl
pop
sub
ins
adc
push
daa
sub
add
mov
sbb
shl
inc
cmps
sub
mov
test
inc
call
cmp
ja
add
add
or
adc
or
pop
outs
fsub
or
pusha
xchg
ins
jno
add
mov
das
es
push
and
into
mov
add
outs
lods
add
(bad)
push
mov
and
sbb
pushf
push
push
inc
inc
cmp
bound
sub
xchg
or
inc
add
xchg
int3
inc
xchg
or
outs
arpl
out
and
rol
push
ss
adc
cmp
sub
add
ins
stc
jmp
in
or
movs
cmp
add
loopne
loopne
and
out
pop
sub
push
cwde
cmc
out
pop
xchg
dec
sahf
in
lahf
or
mov
add
(bad)
(bad)
sub
mov
cmp
je
mov
cld
outs
pop
jecxz
inc
add
push
mov
inc
sbb
mov
or
inc
and
pushf
push
sub
add
xlat
loope
mov
cmp
adc
fucomip
inc
sub
add
clc
dec
test
jl
sub
clc
xor
inc
hlt
fwait
or
je
adc
sub
mov
in
nop
js
das
clc
jb
mov
dec
hlt
mov
call
jne
xchg
in
ins
arpl
in
xchg
adc
sub
cld
xor
sub
aas
and
out
das
mov
inc
je
inc
in
cmp
inc
lock
push
ins
mov
or
test
loopne
jle
lock
lahf
imul
jmp
mov
cs
nop
xor
mov
mov
and
dec
jno
pop
rcl
mov
xor
cmp
add
jg
outs
pop
mov
lea
push
mov
pop
mov
test
mov
mov
xchg
mov
loop
enter
mov
cwde
(bad)
xor
inc
int3
sbb
sbb
fs
or
jl
sub
mov
clc
mov
inc
stc
cmp
je
mov
dec
mov
fnstenv
or
ds
mov
int3
mov
and
push
jne
loopne
rcl
and
ja
inc
imul
fidivr
ins
jne
xor
and
adc
cmp
or
inc
(bad)
mov
add
fisttp
call
sbb
call
std
out
je
adc
push
mov
jmp
sbb
mov
mov
imul
out
mov
mov
cmovo
or
(bad)
test
test
jl
inc
xor
popf
aaa
pmaxsw
or
ja
mov
inc
cmc
addr16
pusha
lds
ret
sbb
push
pop
push
mov
je
(bad)
loopne
or
sahf
leave
ins
and
loopne
lods
mov
push
inc
or
retf
push
sub
mov
cs
sub
xor
(bad)
sar
jbe
stc
in
dec
jne
sbb
icebp
movsx
mov
xor
mov
imul
sbb
sbb
imul
xor
add
(bad)
scas
inc
or
mov
outs
lock
cmp
jmp
xor
sar
adc
add
jne
sub
inc
sub
add
fwait
xor
js
js
push
loope
push
gs
ja
adc
push
loope
les
add
mov
lea
sub
aaa
icebp
out
lock
fisub
sbb
mov
jbe
sbb
iret
lahf
adc
and
fdivr
sbb
and
add
jmp
pushf
lahf
out
mov
and
inc
sbb
mov
xor
push
and
add
cli
cwde
lods
mov
cwde
mov
aam
imul
or
pop
es
clc
outs
cmp
mov
push
js
cwde
and
repz
push
inc
push
ins
push
pop
lock
mov
mov
and
add
popa
push
loop
inc
(bad)
outs
push
mov
(bad)
pop
lldt
pop
inc
js
test
jno
pushf
leave
xchg
jp
outs
popf
or
jne
sbb
addr16
xor
inc
mov
sub
xchg
sub
sub
and
push
sbb
loope
bound
push
add
pop
ja
inc
mov
mov
pop
inc
mov
sar
or
push
mov
stc
ror
lds
xchg
xor
pop
adc
adc
test
sub
jle
jb
mov
sbb
sub
mov
movzx
mov
aad
icebp
add
(bad)
mov
pop
test
das
sbb
dec
call
add
je
push
push
jmp
mov
jmp
mov
jmp
(bad)
mov
jmp
ja
je
pop
cmc
cwde
adc
add
sbb
inc
inc
pusha
push
add
add
add
sub
adc
sub
sub
add
ja
inc
jne
aas
pop
and
push
and
push
inc
out
into
sub
jnp
cs
adc
adc
sbb
sub
cmc
test
add
xchg
ja
subps
push
pop
mov
sub
sub
clc
(bad)
cmp
sub
stc
xchg
jmp
mov
sbb
pusha
(bad)
shl
inc
mov
ror
sbb
fisubr
lea
out
not
(bad)
mov
jg
sti
pusha
mov
jne
test
out
lea
call
push
cmp
jmp
gs
xchg
mov
or
xchg
rcl
xchg
or
mov
add
pop
bound
je
cdq
xor
jo
cmp
or
and
and
shl
test
sti
fstp
fidiv
inc
adc
mov
sub
out
mov
out
dec
imul
adc
and
inc
or
mov
sub
(bad)
jo
and
push
add
inc
adc
add
sub
sbb
adc
inc
fwait
int
add
cmp
add
xchg
ins
jmp
movs
xor
pushf
arpl
jne
fsubp
clc
xlat
popa
arpl
sub
in
jmp
clc
les
loop
or
dec
stc
mov
add
int
je
sbb
sti
std
jmp
and
and
aas
sti
loope
imul
cmps
inc
mov
xor
mov
dec
mov
(bad)
cmp
frstor
stos
push
sub
mov
rsm
push
(bad)
std
sub
mov
sbb
aam
popa
mov
jb
and
sbb
stc
(bad)
fiadd
(bad)
mov
(bad)
and
(bad)
fiadd
xor
sbb
pop
or
mov
aam
mov
ror
fbstp
out
stos
inc
cmp
test
loope
test
and
hlt
sbb
icebp
mov
push
and
je
lock
sub
dec
idiv
mov
push
cmp
adc
out
ins
pop
inc
cmovp
add
hlt
fmul
out
hlt
rcl
out
aas
sbb
push
mov
fidivr
int
push
or
xchg
push
xor
iret
(bad)
(bad)
fisubr
lods
push
loopne
pop
add
sbb
rcr
add
(bad)
fsub
mov
test
dec
add
in
xor
mov
mov
sbb
in
pop
punpckldq
inc
or
mov
das
mov
inc
add
pop
jmp
inc
js
pop
cmp
or
mov
clc
and
rcr
fld
pop
jl
pop
divps
cmp
hlt
gs
push
aas
std
add
pop
nop
push
cmps
call
push
dec
adc
cmp
push
cld
push
shl
jb
mov
mov
iret
fisttp
pop
cmp
ins
push
xchg
ja
mov
or
sbb
xor
or
add
mov
test
lock
mov
pusha
mov
push
xchg
jns
xlat
loope
dec
clc
push
dec
pop
push
xor
dec
or
adc
pop
pop
xor
push
cmp
ja
cmp
das
jne
inc
add
add
sub
clc
sub
xchg
pop
add
sahf
je
or
test
je
inc
sub
shl
dec
and
xor
into
movs
jl
cli
imul
push
add
push
jge
(bad)
adc
sub
or
inc
movs
outs
pop
sbb
outs
push
clc
dec
cmp
jnp
adc
push
mov
sbb
cwde
(bad)
mov
inc
inc
mov
fmul
fstp
xor
jno
mov
adc
rol
or
adc
daa
loopne
hlt
lock
mov
mov
jo
sub
inc
dec
jne
nop
pop
jg
or
mov
mov
movs
pop
shl
or
mov
inc
jmp
in
iret
mov
jo
lea
cld
add
mov
mov
or
scas
cwde
pop
adc
and
(bad)
fist
cmp
jmp
inc
dec
jne
xor
or
dec
xor
mov
clc
sbb
fistp
mov
adc
or
div
mov
cmp
inc
stos
outs
push
into
rcl
cld
les
inc
cmp
jmp
pop
outs
add
repz
pop
loop
and
and
cmps
hlt
add
add
pusha
jb
sbb
adc
mov
aam
out
or
add
(bad)
shl
inc
sub
jmp
das
jo
mov
jg
jmp
adc
xor
pop
mov
das
dec
in
xor
mov
jne
mov
hlt
inc
jno
xchg
iret
adc
xchg
rol
mov
push
pushf
fmul
es
add
jecxz
fiadd
xchg
xchg
push
lea
jle
jmp
push
xchg
call
adc
cmp
xor
push
adc
push
in
shl
inc
imul
out
ficomp
inc
or
adc
add
loope
cmp
scas
fsubr
call
ss
ins
and
inc
sub
jl
sbb
push
cmps
inc
jnp
into
mov
push
pop
xchg
iret
rol
mov
sub
adc
idiv
inc
push
add
sub
(bad)
add
das
into
popa
mov
movs
movs
les
aad
dec
sub
mov
mov
or
repz
pop
fs
adc
push
push
jmp
dec
sbb
jecxz
sbb
pop
mov
outs
rcl
stc
xchg
js
jo
aam
call
add
test
jno
adc
sub
adc
mov
push
inc
adc
add
outs
xor
sub
cmp
pusha
rcl
or
cdq
or
mov
outs
adc
add
xchg
cmp
cmp
repnz
enter
loopne
cmp
movs
sub
mov
sbb
fild
shl
mov
xor
push
xor
ja
add
(bad)
push
push
movs
dec
fs
push
pop
popa
adc
mov
push
adc
call
jge
in
cmps
mov
and
ret
xchg
mov
jae
sbb
xor
mov
mov
mov
lock
xchg
cmps
sbb
sub
mov
xchg
sti
mov
mov
jne
cmc
push
and
pop
lock
out
mov
icebp
les
jp
clc
fnstsw
enter
mov
mov
add
add
ret
add
jmp
push
loopne
cmp
adc
dec
sub
mov
add
sub
loopne
pop
shl
bound
inc
inc
mov
add
xor
inc
or
fild
add
and
jge
adc
pop
sub
call
mov
add
rcr
pop
xchg
or
cld
repz
ret
mov
(bad)
rcl
int
imul
mov
popa
or
mov
test
xor
pop
or
mov
or
imul
xchg
sub
xchg
iret
xor
sbb
sti
or
inc
mov
xchg
or
add
sbb
adc
push
inc
adc
(bad)
clc
jp
loop
addr16
(bad)
dec
in
les
mov
add
hlt
pop
(bad)
das
and
js
xor
sbb
add
jmp
jmp
push
out
mov
popa
pop
clc
mov
and
int
push
add
and
imul
cmp
aas
cmp
xchg
or
arpl
cmp
jmp
test
(bad)
cwde
in
test
push
jecxz
adc
lahf
mul
jo
not
add
push
dec
mov
in
cmp
or
clc
xchg
mov
out
test
imul
rol
imul
ror
pop
add
xor
call
add
push
jp
mov
or
fdivrp
push
sbb
and
ds
lea
push
lock
sti
add
xlat
das
mov
jmp
cdq
test
test
bound
repnz
iret
jmp
and
pushaw
test
data16
pop
mov
push
in
cmps
daa
sub
xchg
adc
pusha
jecxz
das
cmp
xchg
fcomp
or
mov
xchg
add
adc
shl
fldz
(bad)
cmp
adc
add
(bad)
add
push
leave
ja
fmul
(bad)
push
enter
add
cmps
pop
(bad)
out
adc
repnz
(bad)
jne
add
mov
mov
lea
(bad)
jne
push
mov
sbb
pop
fld
test
push
fdivr
add
inc
sub
adc
test
sbb
push
sub
ret
test
ja
add
ret
stos
sub
or
gs
pusha
outs
jbe
cmp
int
and
mov
popa
ret
and
outs
xlat
mov
push
jg
fdiv
jmp
sub
sbb
adc
rol
add
cdq
(bad)
and
inc
jno
lock
dec
push
pop
jnp
and
mov
mov
add
shrd
ret
sbb
cmp
fcmovb
xchg
mov
scas
das
add
xchg
adc
or
adc
xchg
pop
mov
lock
mov
mov
lea
xlat
inc
or
gs
adc
pop
mov
rol
xor
cmp
mov
inc
rol
cmp
(bad)
not
xchg
call
mov
cmp
adc
idiv
push
cwde
and
iret
mov
(bad)
mov
inc
data16
mov
fisttp
sbb
mov
mov
jo
jb
outs
or
je
jns
and
aas
sbb
or
and
adc
jne
out
pop
aad
push
dec
xchg
inc
lods
das
inc
ret
jno
mov
cmp
or
and
sub
arpl
scas
aad
js
ins
adc
ret
lods
rol
shr
add
loope
mul
clc
lea
cmp
or
retf
scas
mov
rcl
sbb
push
push
ret
bound
(bad)
loopne
cmps
sbb
movzx
sbb
nop
aas
xchg
or
ror
cmp
or
dec
ror
mov
add
fistp
mov
call
pop
les
test
cmps
jbe
pop
leave
test
adc
inc
add
sti
or
add
fisttp
pusha
out
mov
and
or
or
cdq
loopne
and
nop
adc
pop
scas
data16
les
dec
cld
dec
xchg
pop
adc
sbb
rcr
fild
xchg
movs
or
mov
(bad)
scas
lods
mov
in
xchg
add
inc
sti
add
add
push
push
pushf
push
mov
and
sar
mov
pop
xlat
mov
int3
or
or
pop
mov
out
sti
addr16
int
push
addps
rol
push
cmp
mov
inc
loopne
and
fs
mov
sbb
push
pusha
into
pop
mov
jnp
loope
xchg
pop
fdiv
enter
sub
inc
pop
mov
and
ror
add
repnz
std
sbb
cmp
cld
jmp
sbb
add
or
mov
pop
out
lahf
dec
pop
data16
xchg
sub
mov
pop
pop
adc
cmp
jge
mov
call
arpl
mov
add
or
mov
add
push
or
push
push
dec
jge
jg
inc
or
ds
ja
pop
shl
and
(bad)
loopne
ja
dec
adc
pop
adc
jg
test
and
daa
jl
xchg
hlt
cmps
adc
jmp
push
inc
outs
jne
gs
je
jb
sti
cs
cmp
or
inc
in
dec
outs
jbe
dec
gs
jb
cmp
or
data16
jle
(bad)
pop
daa
sbb
outs
xor
jne
outs
push
inc
outs
ins
ins
arpl
outs
jae
in
sub
add
or
xor
mov
jne
popf
sbb
push
add
xchg
fist
ja
pop
push
shr
jg
push
add
lods
xchg
aam
xchg
add
dec
push
cmps
bound
stc
daa
movs
pop
inc
gs
and
outs
loopne
jns
js
xor
jge
pop
pop
movs
sub
call
pop
out
pop
mov
cmp
adc
outs
inc
fimul
adc
sub
xchg
lahf
aaa
pop
ret
nop
gs
mov
mov
xchg
shr
push
imul
loope
mov
add
mov
leave
clc
(bad)
cmp
test
dec
xor
jo
fucomi
bound
pop
enter
sbb
or
scas
or
popaw
jne
je
inc
mov
ds
pop
(bad)
xor
outs
or
inc
(bad)
mov
dec
adc
fld
adc
fsubr
sbb
dec
bound
or
out
cmp
push
inc
cmps
pop
mov
adc
push
fist
or
push
in
scas
cmp
or
ret
sub
inc
mov
inc
push
scas
sbb
fnstsw
es
or
sbb
mov
fnsave
cmp
pop
push
push
cmp
push
push
inc
jne
arpl
lods
mov
aaa
push
popf
shl
xchg
push
sub
push
xchg
add
mov
les
call
inc
push
push
add
add
push
cmps
and
add
call
int3
iret
push
jne
pop
dec
jne
stos
arpl
mov
sbb
cs
fwait
rcl
das
or
or
inc
sbb
add
add
add
xchg
ins
ds
pop
add
mov
lds
repz
xchg
inc
or
inc
jne
xchg
pusha
shl
fcomp
mul
or
push
loopne
popa
sub
fild
mov
push
xor
xchg
outs
pop
push
fldenv
in
fucomp
into
push
and
fcom
xlat
ins
push
cmp
push
fwait
sub
mul
sub
js
or
movs
push
mov
sub
out
pusha
pop
push
pusha
pop
mov
lock
jae
inc
lea
loop
sub
sub
mov
cmp
adc
getsec
mov
jno
cwde
push
dec
int
mov
inc
cs
arpl
cmp
mov
ds
sahf
pushf
mov
dec
dec
dec
dec
jge
(bad)
xor
xchg
daa
daa
and
add
xchg
xchg
xchg
xchg
dec
xchg
mov
leave
leave
enter
call
in
fistp
jmp
in
in
in
jmp
xor
xchg
and
pop
dec
or
mov
jnp
xlat
in
or
or
cmps
aam
(bad)
dec
or
or
inc
rol
cmp
sub
inc
shl
jmp
xor
xchg
xor
inc
inc
jbe
aaa
fsubr
cmovns
dec
jae
mov
(bad)
not
sbb
inc
push
popa
jg
dec
mov
jg
pusha
jg
xor
in
inc
fs
jle
or
push
popa
ins
jne
ret
lahf
cmps
call
or
outs
sub
adc
ins
push
nop
push
pushf
push
add
fild
adc
xor
or
or
ja
and
cmp
clc
jbe
dec
pushaw
inc
shl
mov
cmc
enter
movs
stos
out
out
and
or
or
or
sbb
dec
xchg
and
das
leave
call
mov
push
loopne
add
popa
arpl
pop
and
mov
mov
dec
jae
and
loope
push
test
not
sbb
dec
add
add
mov
outs
hlt
lds
loopne
ror
imul
add
fimul
mov
dec
add
push
pop
js
inc
sub
jmp
outs
pop
dec
add
xchg
inc
js
and
push
jo
cdq
ins
xchg
aad
and
cdq
ss
loop
xchg
popf
lods
or
out
dec
add
or
xchg
pop
or
xchg
xor
xor
pop
js
xacquire
sbb
xor
gs
add
lahf
jmp
jae
jbe
mov
(bad)
sub
inc
nop
je
dec
popa
iret
inc
or
add
add
add
cmp
aaa
add
jl
imul
cli
inc
test
dec
data16
test
mov
out
pop
adc
add
cwde
mov
daa
sahf
test
jp
pop
int3
sahf
adc
xor
mov
mov
adc
lods
jl
inc
sti
(bad)
jl
dec
mov
(bad)
dec
add
xchg
pop
xor
and
or
adc
rcl
fwait
and
sahf
stos
sbb
popa
pop
add
xchg
sbb
fs
dec
out
les
xor
ret
jb
ret
add
jae
ret
or
sbb
pop
ror
dec
sbb
sub
test
bound
stos
mov
pop
test
adc
data16
ss
ja
bound
jno
lea
scas
pop
pop
and
test
mov
mov
or
push
aaa
mov
sub
sub
test
sbb
pop
xchg
ins
inc
aad
ret
pop
popa
dec
arpl
loopne
in
mov
add
mov
push
adc
sbb
push
ret
inc
push
int
mov
cmp
or
pop
test
mov
sub
pop
jne
jecxz
fild
push
call
pop
add
add
pop
add
add
pusha
sbb
push
pop
movs
mov
xchg
ror
xor
arpl
sti
popa
sbb
or
add
jbe
fnstcw
mov
push
push
ds
or
and
call
sar
xchg
push
push
and
(bad)
jg
(bad)
stc
pop
add
xor
sbb
js
jae
push
test
stos
xor
shl
or
cmp
fs
enter
inc
sub
aaa
sbb
add
cli
dec
add
pop
sub
out
ficom
push
int
daa
(bad)
mov
repz
shl
jnp
aas
shl
and
push
xor
(bad)
jmp
sub
mov
das
daa
out
add
shl
imul
or
call
xchg
lds
add
push
lods
push
test
lahf
fld
add
xchg
jg
aad
push
xchg
xlat
dec
push
lea
icebp
pop
push
mov
das
(bad)
(bad)
dec
bound
adc
call
add
lods
(bad)
xlat
sar
cmp
mov
sub
cmp
stos
je
xor
xchg
int3
xor
stos
pop
or
rcr
rcr
call
pop
pop
mov
cmp
add
mov
out
rol
cmp
addr16
push
mov
outs
push
leave
das
add
jge
pop
cmc
iret
mov
addr16
inc
cmp
aam
mov
in
call
sub
jecxz
fwait
sub
fsubr
push
iret
pop
pop
popa
arpl
jae
int
or
cmp
fs
stc
lods
mov
into
mul
mov
ja
push
pop
mov
call
xchg
mul
out
leave
leave
leave
enter
scas
jecxz
in
in
stc
fs
in
jb
repnz
scas
idiv
cmp
jns
sti
inc
mov
inc
cld
jg
sahf
pushf
pushf
cmps
retf
dec
pushf
jo
dec
cmps
rol
ins
ja
cmp
fimul
push
dec
adc
push
push
imul
int3
out
pushf
inc
mov
push
add
cmp
out
mov
push
or
retf
hlt
rcr
or
push
loope
dec
jae
xor
add
xor
shr
dec
and
jg
shl
cwde
jle
mov
lods
sub
xchg
mov
jecxz
push
aad
inc
retf
mov
js
test
and
shl
adc
lods
sub
or
jbe
popa
jno
mov
mov
pop
out
in
ror
sbb
fwait
retf
xor
and
retf
add
xchg
push
mov
add
sbb
add
mov
arpl
pop
mov
or
and
in
jae
sbb
ins
iret
dec
shr
sub
inc
lods
add
xor
add
inc
shr
inc
mov
ins
jae
or
mov
adc
rcl
popfw
nop
cwde
retf
xchg
popf
push
fst
xchg
push
lods
add
xchg
xchg
mov
ror
mov
xchg
clc
sbb
retf
xchg
push
sub
or
retf
inc
lds
retf
xor
jl
dec
add
pop
out
mov
sub
or
test
ins
xor
ins
retf
imul
jmp
mov
add
rol
int3
jb
retf
cdq
sub
dec
and
jns
sub
ror
xor
cwde
movs
retf
jge
cwde
movs
les
push
retf
sti
mov
retf
bound
mov
addr16
ror
mov
xchg
retf
int
dec
dec
retf
enter
(bad)
mov
or
dec
xor
xor
mov
push
mov
push
sub
pop
mov
fsub
retf
or
rol
pop
jl
retf
imul
add
adc
pop
pop
and
mov
mov
fsubr
or
and
pop
pop
or
and
pop
inc
mov
inc
movs
(bad)
mov
mov
cwde
xchg
sbb
cmps
retf
xchg
adc
xor
push
sbb
ins
push
jb
xor
jns
gs
xor
mov
xchg
popa
mov
inc
cs
popf
fld
pop
fs
mov
xchg
fisub
rcr
sub
je
icebp
mov
shl
push
pop
movs
leave
mov
pop
jne
sbb
add
pop
aad
pop
addr16
push
add
frstor
ins
add
mov
mov
lock
pushf
push
loope
je
outs
loop
jl
mov
loopne
xlat
xchg
push
outs
icebp
fiadd
inc
imul
inc
aaa
adc
mov
dec
or
fistp
aaa
out
pusha
xchg
jmp
sub
dec
mov
mov
add
es
sub
daa
mov
or
imul
and
mov
cmp
sub
inc
mov
in
mov
mov
addr16
sub
add
arpl
pop
push
mov
mov
mov
stos
cmc
mov
add
mov
push
mov
add
gs
mov
sub
add
sbb
pop
jmp
scas
push
dec
es
lea
data16
out
push
push
loop
scas
ins
iret
pusha
cli
pop
push
adc
lods
adc
adc
mov
rol
push
cmp
push
xor
outs
pop
xor
movs
push
sbb
xor
cmps
rcl
or
gs
stos
or
pop
ins
add
pop
pop
mov
das
jo
adc
sbb
addr16
in
mov
add
push
pusha
gs
push
jns
add
or
inc
push
mov
pop
in
fnstcw
clc
mov
div
push
cmp
pop
scas
push
scas
push
fwait
sub
call
xor
push
fsubr
mov
mov
in
leave
addr16
xor
dec
imul
into
xchg
lods
push
pop
ins
mov
mov
or
(bad)
ror
xchg
ror
cmp
push
and
dec
popf
jmp
or
xchg
daa
daa
daa
xchg
(bad)
adc
dec
xchg
loopne
push
leave
leave
leave
leave
pop
cmps
retf
out
in
fs
(bad)
cmps
jb
repnz
adc
xor
jbe
mov
aas
adc
jg
out
jbe
lock
fimul
dec
sub
pop
sbb
cmp
mov
pop
mov
enter
cmp
nop
dec
mov
cwde
sub
jnp
aad
inc
mov
test
jae
push
cmp
and
and
jl
dec
push
sub
fstp
fwait
test
test
pop
in
and
mov
lods
mov
pusha
test
test
or
outs
push
call
jbe
push
add
push
ror
pop
or
(bad)
adc
inc
xor
sub
pop
ud2
pop
dec
xchg
loope
sub
and
ror
call
enter
(bad)
pusha
mov
inc
mov
test
pop
push
rcl
push
pop
jno
push
add
xlat
or
inc
pop
rol
jae
sbb
xor
xchg
(bad)
stos
or
clc
mov
xor
popf
dec
add
nop
stos
jne
pop
xchg
dec
push
jmp
xchg
pop
cmp
pop
xchg
mov
mov
inc
inc
add
scas
in
pop
inc
nop
je
and
int
pop
out
add
pop
push
pop
aaa
add
adc
ins
int
mov
imul
jmp
es
push
jae
add
sbb
inc
mov
xchg
cmp
jb
xor
adc
pop
push
inc
sti
mov
adc
pop
cwde
mov
xor
push
xor
aam
pop
sub
xchg
pop
xchg
jno
jmp
dec
pop
adc
add
mov
arpl
xchg
cmp
xchg
sub
mov
mov
fsubr
pop
sub
inc
add
imul
aam
or
arpl
(bad)
pop
pop
and
imul
(bad)
call
adc
lods
cmp
cdq
xor
mov
scas
pop
mov
inc
lods
aam
movs
pop
popw
ss
mov
add
out
das
loop
sbb
pop
je
adc
pop
jg
push
es
xchg
pop
xchg
cmp
adc
jmp
out
mov
cmovbe
std
ja
dec
add
test
push
push
jb
arpl
adc
lods
push
jge
pop
dec
in
data16
imul
or
add
sbb
cli
push
sahf
popa
call
imul
call
or
mov
je
jb
call
mov
shl
sub
sbb
shr
dec
fs
xchg
mov
ret
or
or
cmc
sar
mov
fist
mov
or
cwde
sub
inc
sbb
push
push
push
mov
mov
add
cmps
xchg
xchg
ins
aas
enter
les
aas
cwde
sbb
loopne
add
or
pop
jmp
pop
and
(bad)
pushf
loopne
mov
stos
movs
jb
mov
stos
mov
push
mov
add
push
push
push
test
je
(bad)
call
ins
adc
call
dec
clc
mov
mov
mov
mov
push
push
mov
out
outs
outs
push
xor
mov
ss
push
ins
test
jne
adc
sbb
xor
add
pop
sbb
mov
push
test
jle
mov
sbb
jo
xor
movzx
ins
ficomp
add
in
inc
cmp
pavgb
fs
mov
mov
fiadd
dec
pop
pop
pop
pop
pop
pop
ret
sti
sar
out
fmul
dec
xchg
rcr
xor
push
add
es
mov
mov
and
lods
pop
sub
add
xor
pop
clc
cmp
push
lea
enter
push
cld
inc
or
jne
ins
sti
fist
test
je
sub
mov
adc
inc
mov
in
jbe
xchg
sub
inc
shl
xor
jbe
out
(bad)
mov
add
mov
mov
call
mov
lods
fwait
sbb
jle
mov
jge
mov
dec
jne
pop
sub
repnz
add
out
aaa
mov
cwde
lahf
ja
add
je
push
push
dec
rol
in
add
push
je
inc
inc
ja
jne
ficomp
into
(bad)
shl
adc
dec
inc
in
mov
cld
jg
add
mov
ret
jmp
jmp
add
mov
pop
ret
inc
mov
push
xchg
pop
fmul
or
test
jns
sub
mov
inc
add
das
int
sub
add
dec
mov
sub
pop
jnp
adc
push
dec
sbb
mov
xor
repz
scas
lock
int3
out
xchg
sbb
inc
fidivr
pusha
jl
inc
xor
push
mov
data16
iret
retf
xchg
mov
repnz
sbb
xor
inc
mov
inc
(bad)
pop
pop
and
and
mov
nop
fbstp
fisttp
arpl
or
jecxz
lahf
cld
push
neg
idiv
or
push
(bad)
xlat
movs
dec
inc
(bad)
test
mov
and
adc
adc
inc
xchg
rol
mov
jns
out
sub
in
mov
mov
mov
into
sbb
or
out
enter
xor
retf
prefetch
or
pop
mov
dec
or
outs
xor
(bad)
shl
add
cmp
das
inc
dec
or
or
movups
ret
js
inc
xor
mov
cwde
setle
and
gs
push
or
(bad)
cmp
lods
push
int3
in
push
push
jnp
rcr
push
gs
outs
jb
mov
pop
sub
dec
add
into
sbb
add
loopne
jae
js
jno
add
jne
push
test
mov
dec
movs
ja
lahf
sbb
mov
mov
nop
push
fsubr
test
fisubr
data16
dec
out
mov
arpl
mov
fsubr
and
in
les
ror
into
hlt
jns
adc
test
dec
mov
mov
mov
push
out
sub
cmp
push
push
pop
pop
repz
outs
push
jo
mov
sub
add
pop
pop
imul
add
push
or
add
dec
xchg
lldt
cmp
cmp
test
jb
sbb
bound
sbb
stos
or
test
xor
cmp
pop
(bad)
fld
aam
add
es
loop
popa
dec
fisttp
mov
jo
clc
fild
add
stc
add
mov
push
in
xor
pusha
pop
sub
pop
adc
pop
mov
sbb
or
dec
rol
sbb
jne
lock
ja
adc
mov
and
sub
jns
push
mov
aaa
dec
out
call
add
sub
jb
xchg
jbe
rol
je
mov
aaa
sub
lock
setb
xor
mov
jmp
dec
jb
jge
push
mov
(bad)
and
movs
pop
mov
pop
jge
and
fild
or
mov
inc
mov
js
js
push
mov
mov
js
fist
add
nop
cmp
jne
pop
movs
add
mov
mov
push
inc
xchg
xchg
cs
pcmpgtd
push
movq
jo
sbb
adc
sar
fbld
jmp
inc
mov
in
sti
std
stos
inc
cs
mov
add
popa
das
pop
jl
icebp
inc
nop
enter
arpl
adc
test
scas
or
ret
jnp
xchg
xor
jecxz
mov
inc
push
xchg
mov
add
adc
cmp
jne
xor
lea
sbb
or
call
jnp
xor
test
jl
inc
mov
popa
mov
ja
imul
or
add
shl
outs
enter
add
ret
sbb
rcl
jne
mov
int3
push
dec
sbb
xor
not
sbb
push
push
inc
or
cli
pushf
std
loope
movaps
jmp
add
sub
inc
retf
and
jp
xor
add
xor
ja
ret
ins
jae
or
leave
push
sbb
loope
loopne
xchg
(bad)
icebp
sub
aas
add
add
sbb
je
ret
mov
and
enter
jmp
push
or
jmp
(bad)
dec
out
std
mov
jmp
mov
adc
push
or
dec
xor
add
sbb
jecxz
(bad)
lock
outs
cmc
mov
cmp
push
in
enter
xlat
mov
popa
xchg
cmp
add
ror
or
jle
sbb
pop
addr16
xor
mov
inc
lock
mov
clc
inc
jg
mov
push
hlt
mov
mov
test
(bad)
call
lock
mov
xchg
jge
jmp
outs
lods
cli
add
ret
mov
ret
sti
adc
sub
rol
int3
jo
add
jl
and
mov
pusha
cs
inc
dec
test
jl
inc
xor
xlat
rol
push
or
jl
and
(bad)
call
fst
mov
dec
jne
dec
out
lock
push
sub
popa
inc
sbb
pusha
sub
inc
retf
jns
add
and
add
loope
aam
mov
fcmovnb
aaa
jbe
xchg
push
test
rol
movs
outs
jmp
mov
sbb
scas
rcr
ss
jne
ds
test
aas
cmp
cmps
inc
jbe
cmp
add
hlt
shr
jne
out
lock
xlat
pop
ret
jno
fs
cs
clc
js
jns
sbb
sbb
xor
adc
out
adc
aad
jne
inc
popa
ss
outs
loop
mov
sub
jp
shl
addr16
cmp
inc
psadbw
mov
bound
mov
cld
xchg
mov
fimul
and
ds
mov
pop
xchg
mov
and
xchg
adc
int3
stc
int
es
jo
lds
ins
mov
adc
and
push
or
aaa
sub
mov
aad
push
mov
pop
inc
or
jbe
dec
or
es
cmp
xchg
mov
adc
add
push
sub
mov
add
xor
nop
push
add
out
int3
inc
mov
and
arpl
aam
outs
xchg
imul
in
and
dec
add
daa
dec
cmp
ins
push
jg
mov
jns
sqrtps
ja
add
in
pop
sbb
and
jne
retf
imul
dec
repnz
xor
cmp
call
repnz
cli
sbb
dec
cdq
push
xchg
js
push
mov
cmp
(bad)
and
(bad)
cwde
pusha
ret
addr16
test
cmp
and
mov
sub
push
js
pop
lods
js
or
jp
in
retf
or
pop
hlt
test
jne
xchg
test
push
mov
adc
xor
and
loope
and
fnstenv
lods
xor
jmp
ja
xor
add
mov
add
gs
fst
push
add
data16
dec
je
imul
cmc
xor
hlt
add
or
cmp
cmps
sbb
lods
or
popa
add
sub
xchg
add
loop
mov
out
sbb
in
popa
inc
xor
bound
add
cmp
mov
adc
inc
push
iret
popa
xchg
ret
lods
jp
sbb
push
sti
push
inc
cmc
aas
bound
stc
jecxz
cdq
out
push
dec
imul
aad
adc
into
lods
mov
mov
sbb
xchg
sub
or
mov
pop
jle
iret
push
test
lea
cs
lods
ja
add
dec
adc
mov
xor
inc
push
sbb
mov
ret
fwait
pushf
mov
dec
fsub
test
sbb
and
cwde
sub
pushf
out
sbb
push
mov
push
sti
mov
test
mov
or
bound
push
nop
scas
(bad)
mov
mov
or
inc
xchg
sbb
add
(bad)
nop
cmp
sub
adc
stos
mov
aas
out
leavew
addr16
pop
aam
jecxz
sbb
or
or
push
es
inc
xor
fstp
sub
daa
mov
outs
iret
sub
xor
or
fdiv
adc
mov
je
xor
shr
push
scas
sti
gs
retf
jo
ret
pop
or
xchg
imul
adc
bound
adc
mov
xchg
xchg
pop
enter
dec
js
or
or
or
inc
aam
pop
pop
movs
sub
pusha
push
dec
test
repz
cmp
sbb
push
es
jne
xchg
xchg
mov
and
jl
xchg
add
mov
or
push
mov
aam
mov
or
push
fwait
adc
(bad)
fmul
mov
xor
inc
or
inc
pop
fisub
pop
jne
mov
adc
lahf
xor
dec
mov
jbe
mov
rcl
mov
(bad)
ss
or
add
cmp
shl
jg
(bad)
stos
cmp
cmp
lea
ds
fiadd
in
je
movs
jmp
mov
add
adc
andnps
inc
dec
jne
cwde
xor
hlt
nop
cmps
inc
xlat
inc
pop
ins
xor
push
add
xchg
test
add
and
bound
call
lahf
add
mov
(bad)
and
add
pusha
inc
and
or
(bad)
aas
push
add
js
loop
jmp
adc
push
aas
adc
loope
adc
sbb
aas
xor
adc
dec
int
rcl
dec
jbe
ficomp
dec
sub
je
push
or
and
push
out
test
add
inc
push
or
inc
xor
stos
rol
stos
pop
popa
sbb
dec
dec
jmp
mov
clc
out
or
add
cmp
push
or
push
ror
jg
xor
add
das
loope
inc
dec
ror
retf
jne
cmp
or
jmp
js
mov
and
test
jbe
js
jmp
push
push
jl
dec
or
adc
or
or
sbb
call
mov
mov
push
xchg
pop
sbb
int3
mov
ins
sbb
pop
xchg
xadd
into
mov
add
xor
push
mov
aaa
cmp
jae
adc
add
xchg
cwde
push
loopne
inc
outs
jne
gs
je
jb
loope
pop
sbb
outs
popa
or
mov
hlt
dec
outs
jbe
dec
gs
mov
clc
xor
pusha
add
pop
mov
mov
pop
aaa
sbb
outs
jb
arpl
inc
mov
jo
outs
ins
ins
arpl
outs
jae
pop
xor
test
add
or
add
add
pop
inc
jne
jb
je
fld
add
ror
jo
xchg
and
test
pusha
xlat
(bad)
push
push
add
sub
push
pop
push
push
cmps
jge
dec
push
mov
shl
add
add
inc
gs
jb
jns
sbb
sbb
inc
mov
popa
mov
mov
dec
dec
(bad)
mov
push
jae
pop
call
inc
xchg
xlat
lock
push
outs
inc
sbb
jl
and
dec
inc
sub
aas
outs
ins
pop
add
xchg
mov
sub
adc
mov
mov
imul
mov
sar
call
movaps
ins
jo
dec
xlat
in
bound
das
enter
sbb
add
scas
or
popaw
jne
je
pop
mov
jle
mov
push
std
dec
outs
or
inc
(bad)
mov
loope
fist
cld
outs
fs
dec
bound
or
in
adc
add
inc
sub
jge
pop
iret
and
shl
in
or
push
je
xor
add
xor
sub
inc
(bad)
fdivr
sbb
loope
mov
cld
pop
call
addr16
cld
cmps
das
scas
jo
mov
jns
jne
xor
mov
ror
(bad)
cwde
cmp
neg
mov
out
das
add
invd
inc
jne
(bad)
pop
adc
push
test
cmp
xor
sbb
call
inc
dec
retf
add
or
push
lds
and
bt
sbb
push
inc
jb
gs
jo
push
adc
or
add
js
sub
loopne
cmp
and
xor
pop
daa
or
add
rol
sub
or
inc
js
pop
rcl
mov
in
cmp
cmps
push
add
das
push
cmp
xor
or
mov
jo
pop
aam
mov
in
push
mov
movups
push
inc
not
into
js
add
adc
ret
(bad)
int3
test
ja
pop
xchg
ror
jae
jae
inc
lds
cmp
sub
or
dec
pop
cmp
sub
and
test
adc
(bad)
mov
jl
inc
cs
in
out
(bad)
bound
loop
aas
jp
cmp
jns
in
and
mov
xlat
and
movs
dec
inc
sahf
pushf
in
xor
dec
dec
dec
mov
jb
xor
cmp
or
in
sahf
lock
add
bound
(bad)
and
sub
add
repnz
jb
sbb
cmp
inc
cwde
add
xlat
fisttp
inc
rol
jno
daa
or
jae
aam
push
cmp
rol
daa
cmp
sbb
xor
imul
push
xchg
dec
setnp
jle
push
add
addr16
adc
or
inc
push
xor
jg
dec
mov
push
jle
inc
fs
repnz
add
mov
jle
mov
ins
jne
arpl
test
pusha
push
sub
sub
shr
push
cmps
cwde
stos
popf
cwde
add
outs
test
cwde
add
frstor
and
enter
sub
ins
ja
aam
push
dec
repnz
pusha
jae
sbb
mov
sti
inc
cmc
enter
adc
out
inc
in
(bad)
out
in
or
or
jne
xchg
out
sbb
popa
or
dec
push
and
jne
inc
mov
inc
enter
test
fild
or
gs
add
call
popa
arpl
pop
jbe
lea
loop
test
add
or
pop
dec
jae
imul
push
mov
mov
ins
iret
add
shr
and
in
xor
add
mov
or
mov
mov
sbb
lds
stos
mov
adc
add
je
or
ja
jae
inc
inc
sub
pop
mov
outs
ins
sbb
sub
xchg
inc
js
jo
adc
push
or
cmps
sub
cdq
ss
cwde
pop
cmp
xchg
fwait
ja
xchg
or
iret
fiadd
dec
xchg
push
arpl
rol
xor
pop
xor
xchg
fadd
xchg
xchg
xor
clc
and
dec
gs
sbb
mul
inc
mov
xchg
js
xchg
and
fmul
sub
nop
sub
inc
fs
push
push
dec
popa
add
and
js
add
cli
jo
and
or
lods
dec
jns
or
ror
ss
ins
push
clc
cmp
popa
imul
xor
sub
mov
inc
in
jns
imul
push
cmp
sar
pop
test
rcr
add
push
inc
dec
in
jns
sahf
lds
mov
jp
adc
xor
dec
sbb
xchg
xor
int3
inc
aas
jge
adc
inc
jle
inc
sti
jp
test
cli
(bad)
dec
aam
data16
ins
or
loop
jns
or
lock
sbb
adc
jns
jb
mov
repnz
pop
add
jmp
in
pusha
add
dec
jecxz
in
sahf
sub
enter
imul
cmps
sar
jnp
xor
dec
ins
daa
sbb
(bad)
fcomp
mov
mov
movs
fsub
pop
ret
jmp
lea
or
jl
lock
data16
mov
in
push
imul
adc
pop
popw
sub
add
mov
add
(bad)
or
and
sbb
or
test
cmp
or
and
ror
mov
imul
add
push
adc
retf
push
aas
retf
aam
scas
mov
aad
(bad)
fst
mov
push
push
mov
mov
rcr
clc
inc
jmp
mov
jmp
mov
dec
xor
or
sub
mov
loop
mov
mov
add
or
push
cld
mov
mov
mov
fist
mov
sbb
or
jmp
outs
lahf
in
or
fld
fistp
inc
and
in
daa
cmp
dec
xchg
sub
add
pop
pop
pop
ret
addr16
mov
mov
pop
mov
push
and
mov
pop
lock
inc
xor
lea
mov
push
les
sti
or
push
push
leave
adc
fadd
inc
jmp
dec
mov
clc
inc
sbb
or
dec
jne
sbb
add
lock
out
pushf
ror
(bad)
mov
dec
sub
jb
cmp
cmp
out
add
cmp
add
pop
int
push
cmp
cmp
or
mov
add
inc
lea
pop
push
stc
ficomp
clc
jmp
sbb
push
aas
adc
js
rcl
sub
add
and
and
pop
push
mov
xor
es
mov
sub
mov
jl
out
adc
int3
fmul
sar
push
xor
ror
lock
fistp
push
adc
ret
dec
sti
pop
sbb
sbb
enter
dec
push
shr
jo
hlt
into
push
mov
cmp
sub
clc
(bad)
(bad)
or
test
test
jne
mov
shl
inc
xor
cmp
jne
test
je
pop
and
xlat
ds
int3
push
mov
adc
inc
fdivr
sbb
and
or
adc
je
dec
mov
sub
je
add
sub
jae
not
inc
inc
jl
and
lods
and
sbb
std
pop
adc
in
pop
xchg
push
jmp
(bad)
mov
xor
pop
add
clc
mov
imul
push
ins
mov
or
cmp
pusha
cmp
rcr
cmp
inc
aas
jmp
cwde
dec
shl
outs
xor
or
or
xchg
sahf
push
mov
jmp
or
inc
jo
adc
sub
lock
add
pop
ror
or
js
mov
stos
push
jmp
in
iret
and
sub
enter
xchg
sub
or
mov
pop
dec
dec
jne
sahf
test
sbb
inc
mov
add
lock
cmp
lea
retf
add
sbb
xor
xor
jnp
lahf
test
nop
repnz
mov
jg
rcr
outs
mov
outs
push
xrstors
jle
adc
daa
mov
cmp
or
xor
into
sbb
js
push
adc
or
addr16
nop
pop
ror
hlt
or
shl
mov
dec
lds
mov
shr
mov
add
hlt
add
push
adc
mov
jmp
pushf
out
ror
(bad)
not
sub
adc
loopne
adc
ins
pop
sbb
sbb
add
mov
mov
loopne
xor
or
push
cmp
jmp
cwde
add
inc
adc
mov
and
out
(bad)
bound
pusha
std
jne
sbb
pusha
sbb
cmp
jne
gs
cmp
shl
cs
loop
push
or
sub
mov
adc
inc
(bad)
test
faddp
inc
jmp
lods
fdivr
fdiv
push
or
mov
xlat
mov
push
adc
cmp
xlat
mul
retf
cmpxchg
jne
xlat
adc
loopne
clc
jmp
sub
aas
jmp
jmp
shl
or
xchg
(bad)
adc
or
and
inc
push
je
ret
push
mov
add
push
cwde
je
lds
add
in
sub
test
int
inc
or
je
sub
es
add
mov
add
mov
inc
fadd
jp
not
cwde
fmul
out
cdq
add
pop
adc
loopne
push
mov
(bad)
xor
nop
es
xor
ret
das
out
nop
and
imul
ror
in
(bad)
out
inc
mov
jo
push
call
inc
or
fcmovnu
rep
pop
mov
xchg
lock
callw
mov
inc
add
jmp
popa
jge
mov
jmp
pop
add
mov
outs
add
je
mov
jo
imul
mov
add
ds
push
push
inc
mov
pushf
push
inc
idiv
push
push
dec
jne
push
mov
fwait
dec
push
push
shr
mov
push
lock
jne
data16
sbb
inc
js
adc
mov
je
xchg
sub
int3
pop
push
jmp
mov
ins
cmp
inc
cs
mov
push
push
out
mov
mov
xchg
adc
retf
repz
and
jnp
pop
cwde
hlt
arpl
adc
push
gs
or
add
mov
push
arpl
pop
xor
xchg
aad
sete
mov
lods
fstp
imul
xor
mov
mov
jle
and
xlat
enter
xor
(bad)
jl
inc
xor
test
dec
xor
fild
sub
mov
(bad)
mov
xlat
cs
dec
jne
xor
dec
ins
xchg
adc
and
jno
ror
mov
test
xchg
xor
mov
mov
(bad)
adc
bound
popa
add
js
cmp
xchg
sub
push
addr16
push
cmp
fs
retf
les
or
xor
int3
enter
jle
push
adc
cwde
(bad)
push
mov
sub
pop
sbb
das
pusha
xchg
call
mov
cmp
call
cmp
loope
in
scas
cmp
sub
cmp
lds
jmp
test
je
loop
cs
(bad)
jo
mov
add
mov
xor
jmp
inc
pop
sub
cmp
aad
mov
mov
and
and
ret
pop
(bad)
push
cwde
fistp
mov
mov
js
mov
fild
outs
mov
or
xchg
dec
addr16
loop
mov
jnp
shl
(bad)
in
rcr
push
call
add
fwait
inc
push
sub
rcr
loop
or
jl
inc
cwde
aas
jnp
mov
push
mov
sbb
jae
adc
add
push
push
mov
inc
add
cmp
data16
loope
xor
hlt
sub
loopne
mov
jmp
cmp
pusha
lock
into
movaps
pop
ins
shl
rcr
(bad)
(bad)
mov
lods
nop
movzx
test
pop
ret
push
and
add
out
adc
inc
adc
mov
pop
mov
or
sbb
and
mov
xchg
adc
mov
into
sar
adc
(bad)
push
mov
jno
ror
mov
cmp
pop
pop
push
sub
adc
dec
sub
mov
stos
outs
and
push
mov
shl
iret
mov
lea
in
mov
mov
add
out
adc
add
in
loope
popa
lock
mov
mov
push
add
push
add
xor
inc
add
in
cld
push
or
xor
xor
inc
int
push
cmp
push
hlt
push
addr16
es
in
in
mov
xchg
stos
pusha
add
cmps
int
xor
cmp
and
sbb
push
inc
inc
ret
out
(bad)
and
adc
rol
fnstsw
outs
je
push
test
cmps
push
jle
addr16
pop
mov
mov
pop
xor
cmp
inc
sbb
jo
adc
sbb
(bad)
adc
push
inc
lock
push
popa
xchg
mov
lahf
pop
inc
xchg
sbb
inc
add
popf
add
into
pop
jnp
adc
mov
xor
test
push
mov
push
push
stos
mov
call
pop
cmp
sbb
pop
rcr
mov
ins
sub
sbb
ret
jo
add
(bad)
lock
or
hlt
aaa
fs
or
cmp
nop
outs
pop
fstp
outs
test
xchg
cmp
rol
outs
test
in
sbb
pusha
add
scas
adc
mov
add
xor
xor
test
or
in
sbb
push
mov
push
pop
pop
pop
cmc
jbe
outs
rcl
pop
push
pusha
ficomp
or
push
rol
push
xor
and
enter
test
sahf
xlat
inc
push
dec
push
mov
push
mov
and
clc
or
add
enter
push
and
imul
inc
inc
ins
popa
test
push
pushf
mov
popa
jb
push
jns
dec
addr16
add
je
dec
gs
cmp
fs
pop
aaa
add
outs
cmps
add
popa
aaa
jae
xchg
popf
test
popf
xlat
mov
push
cli
push
pop
add
xchg
shl
push
in
hlt
jns
cmp
inc
xchg
es
pop
push
das
repz
adc
popa
push
adc
push
in
in
add
mov
push
add
dec
jo
sub
or
cmps
retf
mov
pusha
jg
xlat
add
xor
jle
popa
and
mov
imul
rol
in
pusha
dec
or
lods
sub
and
jb
mov
pusha
sti
push
retf
or
cs
ins
add
fstp
dec
test
xchg
popf
add
outs
dec
adc
xchg
repz
push
fild
test
popa
adc
xchg
pop
cdq
fisttp
cmp
sar
icebp
pop
add
adc
add
mov
push
inc
add
or
nop
dec
mov
xor
inc
or
dec
push
imul
cmp
sahf
mov
xchg
push
call
xlat
sbb
add
idiv
(bad)
sub
mov
lea
dec
cld
mov
fwait
sbb
cmp
into
ret
cmc
ja
sbb
mov
inc
std
sti
adc
test
jo
mov
add
loope
push
xchg
adc
mov
push
adc
add
mov
push
dec
dec
adc
mov
inc
inc
dec
jne
lods
inc
fs
iret
leave
or
sahf
bound
xchg
pop
cmc
push
cmp
jnp
paddsb
shl
adc
in
add
dec
push
dec
xor
lahf
pop
dec
sbb
add
mov
sub
cmps
cmp
xor
test
outs
mov
es
sub
sub
pop
pop
jo
xor
add
sahf
jno
mov
add
mov
addr16
ret
push
add
in
mov
ret
mov
inc
dec
jbe
fmul
lea
movs
add
ja
into
mov
enter
mov
sub
out
test
and
and
ja
push
push
mov
sbb
shl
sbb
lock
ror
add
hlt
lds
xor
jecxz
or
mov
mov
inc
cmps
and
jle
pop
cld
push
add
or
push
movs
pop
jo
mov
mov
mov
add
(bad)
inc
add
mov
cmp
repz
mov
cmp
test
xor
inc
fs
jl
hlt
xchg
push
xor
xor
retf
adc
push
mov
iret
mov
mov
push
push
aad
cmp
jne
pop
or
and
add
adc
je
add
inc
(bad)
lds
push
test
or
ret
inc
add
inc
pop
push
sbb
sub
dec
inc
outs
in
inc
add
add
sbb
adc
(bad)
cmp
mov
sub
mov
inc
inc
add
mov
addr16
add
pop
repnz
or
xor
push
mov
mov
fdivr
loopne
aam
sub
arpl
cmp
fwait
lea
cmp
je
mov
xor
add
jns
cwde
test
dec
ja
or
add
and
jge
int3
loop
jmp
add
pop
aad
push
push
je
and
shl
inc
add
in
sub
sub
aam
sbb
stos
mov
aam
push
fs
imul
imul
push
test
je
retf
outs
dec
add
fiadd
add
clc
push
add
sub
fisubr
sub
mov
sbb
sti
je
push
xchg
dec
shr
adc
sub
and
ror
cmp
jmp
jo
or
and
int3
mov
mov
cli
xchg
daa
das
mov
push
inc
lahf
inc
cmp
xor
pop
faddp
lods
mov
imul
pop
xchg
sbb
or
inc
or
adc
inc
push
add
sub
adc
cmp
ror
je
push
ror
push
mul
or
sub
(bad)
mov
push
mov
dec
mov
or
das
in
push
ret
add
add
dec
adc
arpl
imul
adc
push
jbe
push
inc
call
(bad)
and
outs
xor
xor
push
push
push
pop
sar
mov
mov
gs
lods
shl
xor
daa
mov
call
add
mov
and
icebp
lods
inc
inc
in
and
cli
mov
mov
inc
jle
add
loopne
and
push
push
(bad)
rol
pop
or
add
or
dec
mov
sub
test
pop
lahf
test
dec
cli
pop
push
pop
cmp
sub
push
add
jecxz
mov
xor
bound
xor
pop
cdq
les
sbb
js
shr
stc
into
sbb
jl
or
jns
push
add
test
jl
adc
outs
or
enter
pop
or
rcr
xchg
fmul
cld
jmp
add
jl
xor
(bad)
sub
add
jmp
lods
loop
jae
sbb
(bad)
bound
pop
clc
add
popa
test
add
adc
(bad)
pop
inc
cmp
popf
movs
mov
adc
fs
lock
push
jle
push
add
pop
sbb
cmp
aaa
pop
inc
add
cmp
and
xor
sbb
and
add
int3
push
jl
add
add
adc
pop
push
ds
xor
xor
call
enter
fimul
push
pop
mov
lds
mov
test
and
inc
sub
mov
mov
jle
or
push
jge
hlt
push
(bad)
mov
wrmsr
jecxz
nop
inc
inc
or
push
loope
mov
or
pushf
aaa
les
mov
lea
mov
add
jp
inc
dec
jne
pop
cwde
out
test
cmc
xchg
sub
add
mov
daa
inc
jo
loopne
adc
retf
push
mov
in
test
clc
bound
xchg
arpl
pop
cmp
push
mov
mov
jmp
pop
pop
ficom
push
clc
pop
aad
ins
xor
pop
inc
jecxz
lods
imul
in
sub
dec
dec
sahf
inc
fsub
adc
mov
inc
mov
sbb
sub
test
add
or
(bad)
jmp
pop
and
push
push
hlt
push
aam
mov
add
or
or
or
jl
test
mov
(bad)
cmp
adc
mov
dec
jnp
ins
and
dec
daa
popa
sar
(bad)
sub
test
jne
push
inc
xor
adc
lods
pop
imul
ds
sahf
jns
out
add
cmp
push
jmp
(bad)
das
or
push
inc
xor
sub
pop
and
pop
pushf
cmps
jg
jmp
xor
mov
sub
push
fmul
push
jae
ret
and
mov
mov
add
sbb
pushf
adc
loopne
loop
out
lea
aaa
add
sub
aaa
out
mov
les
push
mov
and
lea
push
arpl
adc
xchg
cli
sbb
adc
xchg
adc
lahf
fadd
jo
dec
dec
hlt
retf
cdq
or
pusha
mov
mov
mov
push
pop
jmp
sbb
test
sbb
jp
xor
cmp
sbb
scas
loop
add
call
and
sbb
arpl
(bad)
imul
dec
mov
ror
mov
scas
dec
mov
rol
add
lock
or
fisttp
inc
(bad)
inc
add
inc
and
fstp
je
sub
pusha
lock
pusha
and
adc
or
sub
xor
and
push
lea
out
add
sbb
popf
sbb
rcl
pop
mov
push
pushf
add
movs
icebp
push
pushf
or
or
sar
fdiv
push
scas
aaa
and
sbb
scas
ins
push
adc
xchg
jmp
outs
push
outs
push
fstp
adc
lock
(bad)
das
jnp
cmps
mov
dec
daa
imul
push
xlat
mov
and
aad
mov
inc
mov
jb
push
or
mov
or
add
or
popa
cmp
jns
loopne
ja
xor
xchg
leave
push
rcl
or
jbe
fsubp
imul
or
mov
fmul
inc
pop
daa
add
je
sub
mov
cmps
pop
add
adc
adc
jecxz
add
sbb
nop
jmp
fcomp
pusha
mul
cmp
mov
push
pop
aam
add
mov
pop
mov
add
(bad)
pop
jae
neg
das
faddp
fsubrp
add
cmp
sub
xchg
loope
fnsave
sub
sub
add
jno
js
add
into
xor
jg
mov
aam
pusha
es
je
add
add
or
ins
jmp
(bad)
or
xor
sub
add
pop
push
sub
or
pusha
adc
outs
push
bound
ins
mov
mov
sub
xchg
inc
inc
and
jo
or
add
hlt
jge
and
rcl
(bad)
iret
mov
xor
clc
cmp
or
mov
jmp
sub
xor
and
jnp
cmps
ja
push
mov
push
enter
out
inc
sbb
inc
pop
xor
push
mov
adc
sub
popa
fdiv
push
enter
jae
cmp
jl
push
or
pop
and
push
test
sbb
inc
cwde
jbe
fadd
xlat
ja
push
and
mov
xchg
imul
mov
add
in
add
mov
call
daa
movs
fcom
mov
xor
je
fdivr
fs
jmp
adc
adc
(bad)
lock
jmp
rcl
cmp
pop
movs
aad
xchg
jecxz
push
mov
cmp
cmps
add
ins
add
pushf
outs
push
and
push
imul
push
mov
fsubr
dec
fcomp
and
mov
add
js
ins
cmp
outs
or
pop
js
or
mov
test
pop
in
and
mov
mov
push
sub
add
adc
rcr
push
jl
out
add
test
jnp
pop
mov
xchg
(bad)
xor
popf
mov
and
sahf
adc
push
jmp
lds
sub
sete
cmp
add
lahf
nop
adc
inc
scas
add
cmp
add
ret
push
xchg
xor
out
add
mul
rcl
push
aaa
push
mov
imul
dec
es
sub
in
xor
add
jl
not
aam
push
fsubr
xor
add
push
into
mov
shr
jl
test
cmp
jmp
push
add
push
jne
mov
adc
or
test
jae
push
mov
mov
cmp
or
or
test
xchg
(bad)
mov
ins
xlat
test
and
inc
stos
sar
test
push
or
or
sbb
fisub
jmp
addr16
sub
push
mov
mov
fld
dec
je
add
jne
adc
rol
clc
or
lods
jge
adc
push
or
mov
mov
mov
out
adc
call
test
je
imul
add
jmp
push
sub
lods
shl
mov
pushf
mov
xchg
and
push
pop
push
push
push
sub
loop
push
push
cmp
loope
in
pop
pop
mov
les
(bad)
push
leave
test
jl
les
mov
dec
inc
jne
nop
jmp
adc
add
fild
retf
in
or
add
sub
push
adc
fisttp
ret
push
jne
add
jbe
shl
pop
pusha
es
popf
push
cmp
rol
and
push
mov
scas
sub
xchg
pushw
sbb
push
inc
add
add
adc
lock
adc
outs
fmul
imul
shr
ss
jmp
(bad)
rcr
push
and
push
dec
bound
arpl
push
imul
mov
push
outs
imul
inc
(bad)
sub
in
lahf
loopne
dec
push
gs
ds
(bad)
add
or
mov
add
pop
sar
sub
cmp
inc
inc
popa
jo
arpl
jns
inc
ror
movs
mov
pushf
cwde
outs
ins
call
or
mov
xor
xor
add
pusha
(bad)
xor
inc
inc
jnp
ins
and
jae
shr
sahf
jae
enter
fcmovnu
push
mov
fiadd
cld
scas
retf
movs
ret
mov
mov
call
mov
(bad)
ins
or
mov
cmp
add
into
sbb
fmul
jmp
sub
pop
or
pop
pop
mov
sahf
or
mov
add
cmp
or
sbb
inc
mov
inc
adc
pop
lea
sub
push
xor
inc
jle
mov
jp
mov
dec
addr16
mov
pushf
adc
xor
push
mov
pop
and
fistp
aam
retf
bound
movs
add
test
out
pusha
push
ficom
(bad)
jmp
fcom
leave
push
cld
mov
mov
dec
adc
mov
pop
fiadd
out
pop
adc
je
pop
pop
cmp
fbstp
cmp
sbb
div
int
adc
xor
sbb
add
call
push
dec
jl
mov
mov
mov
mov
fistp
fs
adc
mov
stos
adc
je
fsub
pusha
adc
pop
push
clc
pop
adc
inc
pop
(bad)
jnp
ins
ret
imul
hlt
daa
lock
(bad)
pop
inc
popf
mov
fld
push
pop
sar
or
test
rol
push
mov
adc
jg
fs
shl
cmp
mov
sbb
nop
and
rol
inc
shr
push
cmp
inc
scas
sar
pop
not
cmp
je
aas
add
mov
adc
inc
inc
xchg
sti
pop
jecxz
lods
fdivr
fdivr
mov
jle
popa
add
or
cld
sti
inc
or
loope
xchg
inc
sbb
adc
leave
and
and
in
je
not
or
sbb
xor
inc
sbb
or
dec
repnz
sbb
aas
sub
test
setne
pop
iret
sub
call
je
jmp
pop
icebp
xchg
push
test
push
jl
aad
inc
pop
ins
add
lds
add
inc
jmp
mov
test
je
inc
push
movs
xchg
xor
es
sub
pop
in
add
mov
mov
retf
loope
(bad)
push
ja
mov
mov
pop
inc
lods
jo
test
push
sbb
add
push
loope
add
cmp
xchg
je
dec
lds
adc
or
sub
mov
sbb
mov
movnti
add
cli
sub
nop
jo
mov
in
sbb
mov
pop
mov
mov
add
push
mov
push
cmps
push
mov
test
cmp
mov
repnz
add
pusha
mov
add
enter
inc
inc
lds
push
stc
jne
lods
and
pop
hlt
lea
add
dec
loope
jo
loopne
bound
jecxz
and
add
shr
add
mov
test
fist
inc
aam
pushf
cli
bound
xchg
shl
sar
mov
pop
or
aaa
or
cmps
adc
iret
aad
lock
mov
adc
test
sub
pop
daa
loope
add
out
hlt
push
or
call
mov
inc
mov
repz
mov
add
adc
sub
lock
and
sbb
scas
imul
arpl
outs
popa
jo
stos
gs
mov
loop
jmp
or
mov
shl
sub
mov
fs
and
ins
push
sub
add
jmp
arpl
arpl
and
inc
fadd
add
or
ja
inc
fdivr
cmc
xor
(bad)
mov
pop
or
fdivr
or
je
jns
and
push
imul
push
pop
pop
scas
xchg
inc
pop
pop
aas
mov
jecxz
push
cmp
xchg
and
adc
inc
mov
in
nop
mov
aam
mov
and
sbb
mov
cmp
cwde
mov
cmp
cmp
or
fild
ss
fmul
add
mov
scas
or
sbb
cld
xchg
adc
les
in
xchg
shr
add
outs
dec
jb
loope
push
je
push
add
sub
xor
arpl
je
popf
arpl
xchg
lods
or
lods
pop
sub
push
(bad)
sub
dec
add
mov
push
add
push
je
and
pop
fbld
inc
(bad)
cmp
jge
sub
jb
push
lea
dec
pop
and
xor
mov
in
cmp
ja
and
sbb
push
sub
mov
setg
push
(bad)
inc
dec
into
inc
dec
or
push
mov
in
mov
cmp
retf
cmp
test
push
xor
test
jb
das
call
dec
xchg
ss
shr
cmp
or
pop
push
inc
sub
push
sub
inc
mov
stc
imul
or
loop
je
push
test
clc
mov
popa
sub
xchg
ret
(bad)
call
mov
add
push
jno
jae
(bad)
icebp
icebp
hlt
pusha
rol
cmc
aam
cmps
sub
adc
inc
adc
push
adc
clc
push
iret
sbb
mov
lea
mov
pushf
inc
idiv
mov
ss
add
mov
add
mov
sub
adc
inc
aas
mov
jge
jbe
push
xor
gs
mov
in
or
inc
mov
xor
test
test
dec
test
sbb
cmps
lock
js
jle
adc
push
inc
lock
stos
ffreep
ret
push
es
pushf
sbb
sbb
or
and
mov
outs
in
push
adc
jnp
ins
add
dec
aam
and
push
mov
iret
les
ret
cdq
dec
and
mov
and
pop
jmp
add
sbb
pop
mov
out
aas
daa
loop
and
push
mov
cmps
shl
data16
dec
pop
aam
cmps
xchg
push
idiv
pop
add
clc
dec
or
or
cdq
mov
aaa
xor
mov
(bad)
out
add
xchg
mov
add
xchg
dec
jo
jmp
mov
cmp
add
adc
mov
fadd
fist
cmp
jecxz
shl
or
movs
or
(bad)
loopne
loopne
add
jl
dec
xchg
outs
xor
push
call
std
jmp
xchg
sti
jo
add
cld
xchg
jnp
or
sbb
fdiv
aaa
arpl
jmp
jbe
leave
call
mov
rcl
test
fdivr
mov
sbb
and
sbb
outs
sub
ins
or
xlat
movs
xchg
or
push
seta
int3
or
psllw
sbb
cwde
scas
adc
repnz
daa
add
sbb
sbb
inc
sbb
pushf
or
ds
outs
sbb
mov
outs
cmp
jb
int3
add
cmp
mov
mov
vmread
(bad)
mov
mov
sbb
add
adc
sar
or
sub
lods
jno
fild
push
pop
(bad)
hlt
xor
aas
push
jl
push
push
fld
int3
dec
dec
dec
jo
xor
xor
sbb
or
or
sbb
xor
test
pop
cmp
test
cmps
or
push
inc
and
xor
ins
add
push
mov
add
int3
mov
int3
mov
pop
sbb
or
test
push
dec
cmp
cmp
xchg
into
jo
jb
mov
dec
cmp
add
stos
and
xchg
lods
or
ret
inc
lea
xchg
fidivr
mov
pop
ja
adc
setge
das
inc
fisub
test
inc
sbb
xchg
or
dec
adc
mov
sub
or
mov
xchg
rcr
mov
push
jo
repz
xor
test
push
jmp
lock
dec
sahf
push
pop
cmps
push
ficom
cmp
add
je
mov
ret
push
sub
push
je
add
xchg
mov
mov
fiadd
imul
clc
jns
call
je
add
mov
mov
fs
les
xchg
aam
jnp
cmp
sbb
pop
mov
or
fdivr
xchg
jnp
daa
aad
das
push
sub
mov
cmp
fimul
mov
retf
jo
jg
call
lahf
ret
adc
dec
fimul
lock
scas
lea
push
loope
dec
push
push
clc
mov
and
or
pusha
cs
scas
out
inc
rcl
xor
mov
jmp
fadd
xchg
jle
sbb
fldcw
cs
fnsave
fdiv
add
sub
and
or
repz
sbb
mov
inc
push
psubsw
xor
and
test
std
in
adc
inc
xor
das
add
lea
mov
outs
daa
imul
lds
dec
idiv
dec
test
jge
mov
ror
add
into
push
xchg
push
adc
cmp
jle
add
or
xor
sub
sub
sub
fwait
sub
add
(bad)
cmc
push
add
mov
imul
mov
test
xchg
push
cmp
ret
mov
mov
push
and
and
sub
imul
adc
mov
sub
mov
push
jb
out
add
cmp
pop
xchg
dec
ror
add
movs
cs
cmp
pop
mov
je
ds
and
cli
add
and
or
add
lahf
sub
ins
jp
cmc
add
inc
movs
add
rol
pop
gs
imul
mov
add
rcr
shl
add
cmp
pop
pop
pop
mov
push
call
and
mov
pop
cs
pop
sbb
in
add
shr
inc
cmp
inc
jne
xor
pop
daa
push
nop
add
js
call
repnz
push
ins
clc
not
lods
out
inc
aas
cmp
jg
inc
jmp
ret
adc
pop
ds
push
and
xor
js
adc
or
stc
test
add
ficom
xor
rol
jb
or
mov
mov
clc
sub
xor
mov
jbe
lea
jp
call
push
cmp
mov
xor
cmp
not
lea
dec
test
add
adc
xchg
or
dec
cld
lods
dec
add
test
ins
out
jne
dec
or
out
pusha
mov
cmp
adc
push
imul
pop
int3
adc
daa
adc
and
lods
js
call
int
push
add
xchg
rcr
xchg
pusha
or
sub
cmp
or
jmp
xor
mov
xchg
leave
mov
mov
ss
sub
push
xor
in
in
push
sar
pusha
adc
and
inc
in
add
leave
jae
mov
mov
stos
or
imul
jnp
or
sub
jae
jae
adc
and
xlat
fwait
pop
adc
cmp
add
or
cmp
jle
rol
adc
add
jmp
les
sbb
jne
cmps
lea
fdivr
or
adc
mov
push
mov
add
mov
sbb
loopne
inc
inc
adc
mov
imul
mov
neg
loopne
xor
jle
dec
icebp
mov
dec
or
mov
add
aad
and
xchg
fidiv
xchg
and
pop
mov
mov
mov
dec
xlat
add
test
ror
and
cs
movs
pop
push
jne
jo
dec
stos
or
loopne
push
ins
je
shr
sub
or
sub
and
jge
mov
nop
adc
lock
(bad)
ja
xor
mov
outs
sbb
cmps
(bad)
jg
(bad)
stc
and
dec
mov
cmps
outs
mov
jmp
imul
ret
or
dec
xchg
retf
xor
pushf
cmps
add
xor
xchg
adc
mov
ja
ret
lods
fimul
ins
outs
mov
std
pop
jmp
push
mov
adc
and
shl
xchg
add
arpl
test
xchg
jmp
push
pop
xchg
mov
and
mov
enter
jge
das
inc
sub
movs
adc
adc
aas
add
cwde
or
iret
xor
xor
push
data16
enter
sub
inc
or
ficomp
mov
xchg
in
jmp
or
mov
lahf
data16
jmp
push
cmp
cwde
xor
jno
arpl
mov
dec
or
mov
cs
mov
es
push
inc
es
mov
pop
xor
test
dec
add
jb
push
ja
cmp
inc
add
add
shl
jl
and
adc
or
dec
jne
out
(bad)
test
jmp
aad
mov
dec
cmp
addr16
mov
nop
sbb
push
and
(bad)
adc
in
or
sub
jl
scas
xlat
pop
sbb
call
push
sbb
push
inc
call
push
fist
mov
xlat
dec
sbb
push
xor
inc
iret
rcl
cdq
adc
xor
mov
push
inc
sahf
push
add
adc
add
lahf
adc
mov
jmp
repnz
hlt
jne
inc
je
lock
ret
xor
into
add
test
lahf
stos
pop
fld
cmp
retf
add
mov
jl
mov
aas
sub
int3
(bad)
lock
je
shr
cmps
es
sbb
jle
(bad)
cmp
ds
fs
pusha
loopne
outs
ins
rol
lock
inc
xor
or
(bad)
jne
call
inc
or
outs
mov
inc
or
enter
jb
out
ins
fs
xchg
retf
sbb
add
(bad)
push
rol
inc
cmp
push
or
pop
push
jl
pop
add
jp
add
pop
jno
and
or
mov
add
nop
jno
(bad)
or
inc
pop
pop
dec
daa
push
mov
inc
pop
jae
(bad)
push
or
pop
dec
mov
fcomip
mov
add
or
aam
dec
jnp
mov
movs
push
int
sbb
mov
dec
add
inc
ret
(bad)
ret
andps
outs
stos
je
mov
aaa
test
repz
or
mov
dec
mov
lods
or
punpcklwd
add
lock
call
imul
push
cmps
adc
or
dec
and
(bad)
ins
jg
add
add
dec
cmp
(bad)
dec
adc
addps
mov
dec
lea
ja
cmps
(bad)
fdiv
fs
or
cmp
ins
scas
shl
ror
inc
rcr
in
xchg
push
das
setnp
jae
scas
data16
cmps
mov
dec
sar
xorps
enter
sub
cmp
(bad)
push
jb
jns
js
ins
or
mov
(bad)
inc
adc
mov
fimul
or
not
ins
and
or
add
mov
(bad)
jl
inc
sbb
ret
ret
mov
add
mov
mov
push
mov
pop
adc
pushf
adc
sub
sbb
adc
push
loopne
sbb
push
mov
pop
pop
push
mov
pop
push
or
int3
dec
pushf
dec
dec
lea
adc
mov
push
dec
scas
nop
outs
add
xor
pop
push
inc
adc
pop
dec
imul
sbb
sub
out
fbld
mov
push
xor
sbb
xchg
xchg
inc
shl
inc
jb
in
addr16
pop
mov
in
adc
outs
adc
outs
adc
fld
sbb
lock
sbb
pop
mov
inc
push
push
or
adc
and
jb
pop
enter
inc
retf
lea
xor
xchg
sub
sub
dec
ja
icebp
and
enter
ja
adc
in
pop
aaa
sbb
or
outs
lds
lahf
inc
dec
jno
dec
sbb
fild
sbb
mov
xlat
sbb
loopne
movq
mov
mov
cld
aad
and
xchg
push
mov
xchg
dec
push
call
shr
dec
adc
test
in
push
fidivr
enter
lods
inc
cs
add
xadd
adc
mov
pop
push
pop
mov
lea
fisttp
test
push
xchg
dec
sbb
add
mov
pop
inc
in
outs
add
lods
xor
(bad)
mov
or
cmps
jns
sar
xor
add
shl
and
xchg
sub
or
lock
mov
xchg
ror
into
mov
push
push
in
push
dec
sti
sub
or
inc
xor
add
daa
popa
les
sbb
cmps
out
rol
cmp
and
mul
in
fwait
into
das
jmp
adc
gs
popf
and
add
cs
stc
fild
mov
dec
mov
ja
mov
std
sub
xor
cmp
or
shl
outs
dec
push
inc
jmp
out
or
sub
or
sub
xchg
test
dec
out
test
imul
add
xchg
mov
inc
push
add
fadd
fsub
aad
and
add
sub
or
call
adc
(bad)
adc
lea
add
and
sub
and
(bad)
xchg
(bad)
out
fisttp
pop
out
in
stos
and
or
sar
lea
mov
mov
inc
mov
add
repnz
adc
and
push
out
cmp
mov
icebp
cmps
xor
and
test
jo
movs
dec
mov
add
loopne
adc
mov
fsub
xor
out
or
imul
xor
jo
shl
or
xchg
out
inc
imul
loopne
push
cmp
fadd
push
jle
mov
push
push
cmp
movs
dec
and
cmp
mov
cmp
jne
add
int3
mov
call
adc
and
pop
call
mov
hlt
xchg
loopne
mov
aad
repnz
mov
sub
jae
jae
add
loopne
scas
pop
xchg
cmp
push
dec
lods
sbb
or
and
pop
adc
or
fiadd
js
add
in
dec
pop
add
int3
or
or
popa
rcl
push
clc
cmp
push
pusha
fisttp
nop
cmp
sbb
sub
cwde
adc
cwde
mov
xor
(bad)
adc
cwde
add
dec
pop
lock
rcl
mov
adc
adc
scas
pop
jge
lods
enter
mov
add
add
mov
mov
dec
jno
test
adc
dec
inc
scas
or
adc
sbb
jno
jp
cwde
sub
add
cmp
mov
push
leave
call
and
or
js
loope
(bad)
xor
cmps
push
add
lea
mov
or
fild
jg
arpl
test
add
test
sbb
push
xchg
pop
mov
dec
xor
repz
cmp
adc
adc
pusha
push
js
mov
not
leave
add
(bad)
pusha
xor
sub
fld
dec
fild
aas
mov
cmp
xchg
in
ret
add
cdq
pushf
xor
and
inc
ret
in
push
pusha
shl
xor
cmp
add
cmp
adc
mov
xchg
mov
fs
xchg
mov
ss
mov
xchg
inc
jo
imul
cli
or
ret
inc
add
sbb
xor
sbb
pushf
push
das
(bad)
mov
xor
nop
mov
sbb
sbb
pusha
mov
fld
dec
xor
dec
xchg
es
adc
fst
das
adc
scas
inc
cmp
push
mov
shl
add
imul
rcr
jae
popf
inc
jmp
adc
push
mov
sub
push
xchg
cmp
pusha
inc
aaa
call
pushf
xor
imul
dec
mov
push
xor
aam
jecxz
test
pop
ja
sub
mov
fidivr
inc
or
loop
or
inc
cmp
fsubr
xor
aas
mov
xor
inc
sub
xor
push
and
popa
test
imul
dec
adc
sbb
cmps
xchg
add
and
(bad)
adc
aam
scas
mov
cvtpi2ps
adc
inc
cld
jno
add
call
add
pop
js
mov
xor
jae
cli
pushf
or
push
fdiv
ja
ja
shr
mov
sub
xchg
add
pop
mov
mov
push
sub
shld
cwde
dec
or
cmp
call
mov
pusha
push
lock
test
pop
cmp
or
inc
inc
not
shr
mov
inc
dec
das
mov
jo
xchg
jp
add
push
mov
mov
adc
push
add
pop
and
inc
imul
cmp
or
or
push
add
addr16
sbb
enter
sti
pop
adc
pop
mov
push
jo
add
pop
add
mov
add
fwait
mov
jmp
pop
mov
xor
loope
std
pop
fild
cmc
add
scas
inc
mov
call
sbb
shl
or
pop
add
dec
ret
pop
test
rcl
mov
push
call
test
push
arpl
pop
mov
icebp
adc
add
sbb
jae
inc
mov
mov
xor
in
mov
mov
fcomp
cmp
or
jb
mov
dec
(bad)
(bad)
and
call
cmp
lods
or
mov
arpl
add
daa
pop
arpl
mov
pop
scas
pop
out
popa
fsub
aad
xchg
popa
add
push
out
pop
inc
sub
xchg
test
(bad)
loope
imul
aam
test
pop
and
test
mov
and
mov
inc
xor
mov
imul
(bad)
neg
pop
iret
not
push
mov
into
outs
lods
repz
and
(bad)
jmp
lods
dec
push
das
or
or
sbb
pop
push
outs
imul
add
or
sub
push
outs
inc
xchg
mov
adc
xor
fsubr
and
lods
inc
add
jmp
jecxz
sbb
mov
add
(bad)
sbb
adc
in
cwde
cmc
iret
xor
push
in
pop
in
imul
xchg
push
jge
(bad)
data16
cwde
or
sub
jae
jae
add
jmp
(bad)
lock
int3
sub
dec
inc
or
in
xor
(bad)
dec
lods
add
dec
mov
mov
(bad)
pop
into
xor
(bad)
scas
jmp
ds
aad
xchg
je
pop
push
add
sbb
mov
mov
outs
mov
mov
iret
jno
mov
cmps
cwde
iret
scas
ret
bound
and
or
adc
popa
xor
lods
adc
inc
push
fisttp
push
pop
ror
pushf
ret
push
imul
iret
sub
arpl
adc
xor
xor
into
xor
repz
adc
mov
dec
in
inc
repz
pop
iret
xlat
call
iret
add
inc
rcr
dec
fstp
adc
fcmovnb
into
outs
sub
popf
inc
push
mov
add
and
lods
sbb
in
jns
mov
xor
scas
pushf
push
or
popa
pop
push
rcl
add
fs
jge
out
ret
xlat
pop
lea
or
sbb
xor
ins
ins
push
cmp
and
aas
fistp
adc
inc
jge
test
and
imul
rol
inc
pop
call
pop
inc
jo
fist
addr16
test
or
jo
setge
in
shl
inc
or
ret
inc
adc
xlat
mov
dec
scas
in
es
rcl
mov
xlat
sbb
push
mov
mov
adc
cmps
arpl
sbb
jo
pop
retf
cmps
stos
xor
push
les
cmps
inc
push
jno
cli
popf
and
mov
aas
mov
les
push
sbb
mov
adc
push
out
sub
rcr
jle
lds
pop
mov
add
imul
mov
mov
and
push
adc
push
pop
shl
push
cli
push
mov
clc
daa
mov
or
mov
addr16
mov
jge
cs
cmp
push
ret
pop
and
cmp
js
pop
dec
test
jmp
lahf
inc
add
and
sti
mov
imul
jmp
aam
shl
add
or
add
push
push
sbb
(bad)
or
mov
cmc
inc
push
inc
nop
add
mov
mov
jecxz
fcmovu
dec
jne
not
fstp
fdivr
cwde
or
sub
cmp
push
fs
test
jp
or
jl
inc
cld
outs
mov
cmp
mov
ins
add
inc
dec
jne
cmp
mov
data16
dec
test
add
into
(bad)
in
mov
mov
mov
sbb
and
jl
out
adc
pop
xchg
lea
mov
cwde
loopne
jne
leave
retf
shl
push
xchg
or
jmp
enter
jl
lods
int
cmp
inc
jl
pop
push
ror
mov
loopne
and
pop
ja
adc
ja
xor
test
pop
jno
add
jnp
pop
push
test
out
mov
mov
push
mov
cmp
jge
adc
mov
and
xor
test
cmp
ja
xchg
out
push
cwde
scas
jmp
mov
ss
mov
retf
je
and
lock
outs
push
add
call
and
cwde
das
sahf
sub
ds
ret
inc
pop
mov
fsubr
or
and
dec
retf
dec
sbb
xor
les
test
push
les
sahf
inc
fadd
cmc
shr
arpl
inc
into
adc
jge
sbb
lea
outs
cwde
popa
add
nop
pop
aaa
sbb
adc
ins
cmp
add
mov
ror
and
sar
jo
lock
mov
jge
ret
xor
push
push
stc
ret
loop
jb
test
add
lea
pop
jp
inc
push
mov
push
pop
icebp
repnz
sbb
rcl
(bad)
jb
lock
jbe
test
das
xchg
mov
cmp
daa
and
push
jbe
jnp
inc
rcl
sub
rol
iret
or
sub
in
and
or
mov
push
cmps
push
in
stc
out
daa
ss
xor
sbb
inc
sub
xchg
movs
int
add
fld
inc
int3
ja
and
fsubr
hlt
push
jle
fmul
inc
mov
outs
jo
cs
daa
(bad)
push
sbb
or
lods
jmp
xor
icebp
xchg
jmp
xor
sbb
sub
adc
scas
or
pop
retf
adc
or
inc
fld
int
call
int
xor
push
cmp
pusha
xor
add
pop
sbb
repnz
aaa
add
mov
hlt
add
mov
inc
(bad)
scas
je
shl
(bad)
cmc
hlt
xchg
sbb
and
ret
xor
loope
movs
add
daa
mov
shr
mov
dec
cmps
ins
lock
js
data16
pop
adc
movs
jl
pushf
xchg
adc
xor
cli
or
and
adc
add
(bad)
adc
xchg
sbb
add
sbb
adc
pop
lock
shl
out
aam
mov
fwait
(bad)
aaa
test
jne
aas
jge
cmp
push
mov
push
and
shl
push
sbb
hlt
(bad)
into
call
inc
or
ins
mov
jnp
adc
inc
ja
sub
xlat
or
pop
mov
xchg
push
xor
sub
adc
add
test
mov
dec
pop
addr16
add
sbb
push
pop
mov
pop
mov
ret
ret
rcl
scas
adc
call
adc
mov
mov
iret
aas
sbb
inc
iret
xchg
cmp
cmp
sub
dec
stc
add
or
dec
loop
call
push
jo
push
lods
lock
cmp
jo
pushf
pop
rcl
sti
cmps
pusha
je
push
bound
and
nop
or
pushw
jne
cs
pushf
push
or
add
rcr
xor
jne
call
add
mov
jp
push
or
cmp
xor
(bad)
aam
pop
mov
inc
mov
sbb
xlat
inc
test
push
adc
push
nop
sbb
push
mov
or
push
inc
nop
inc
dec
jg
or
inc
mov
setg
(bad)
mov
pop
push
imul
mov
dec
test
jl
inc
js
sahf
or
cwde
out
das
cli
je
and
xchg
sahf
test
sbb
mov
das
xor
fs
scas
push
inc
jo
das
pop
loopne
lea
lea
rol
adc
xor
loope
pusha
fidivr
dec
ror
and
and
add
test
lahf
or
lods
ret
inc
inc
xor
(bad)
mov
inc
or
imul
inc
adc
das
test
test
pop
clc
adc
adc
inc
fistp
push
push
das
sbb
cmp
mov
or
dec
and
enter
or
inc
mov
pop
dec
das
jecxz
test
mov
daa
jns
pushf
nop
fisttp
test
das
ins
fsubr
lea
or
fs
das
int3
mov
in
or
pop
mov
sub
das
sbb
cmc
push
iret
fcomp
sub
lock
iret
call
push
mov
or
pop
or
stos
and
inc
pop
(bad)
mov
add
add
int3
push
int
cwde
inc
leave
popa
mov
push
dec
adc
das
add
sbb
add
ins
adc
sbb
mov
xchg
fimul
arpl
lods
and
mov
dec
mov
dec
jb
inc
das
iret
sub
add
call
lods
jmp
sbb
(bad)
call
pop
ret
das
push
sbb
shl
aas
loopne
test
stos
das
inc
das
lock
sbb
mov
mov
das
enter
mov
sbb
iret
movs
adc
rcl
pop
adc
test
aam
jo
push
sub
pop
scas
jecxz
in
sbb
adc
jo
nop
pop
dec
pop
push
jns
test
mov
and
push
push
sbb
ins
das
test
or
into
cmpxchg
mov
pusha
pop
push
das
inc
imul
scas
mov
mov
packuswb
lock
add
repnz
(bad)
enter
and
clc
in
not
inc
sub
fadd
shr
addr16
bnd
xchg
(bad)
add
bound
mov
lods
icebp
mov
sbb
addr16
dec
addr16
push
loope
xchg
xchg
or
ficomp
inc
or
packuswb
out
adc
add
dec
jo
arpl
xlat
inc
dec
daa
push
sbb
lods
mov
sbb
mov
loope
dec
dec
nop
out
adc
mov
xchg
pop
rcl
pop
stos
dec
adc
jp
pop
adc
aas
mov
fiadd
inc
leave
sub
stos
lods
sbb
adc
adc
(bad)
loopne
in
arpl
mov
dec
xchg
sbb
xchg
lods
and
mov
test
lds
loopne
inc
or
cwde
in
pop
fisub
mov
pop
jae
popa
shr
call
sub
inc
push
adc
jo
inc
addr16
je
mov
jmp
inc
fsubr
jl
loope
inc
adc
les
jno
addr16
movs
dec
stos
cmps
adc
js
mov
in
adc
xor
sbb
or
adc
adc
sub
dec
call
push
lahf
addr16
leave
mov
loop
les
icebp
sbb
and
fisub
adc
fbld
push
add
sub
sbb
adc
test
pop
sbb
xchg
pushf
push
mov
and
inc
cmp
loopne
(bad)
pop
sub
das
xchg
and
jmp
sbb
push
mov
xchg
jmp
xchg
jecxz
outs
add
mov
xchg
loope
sbb
scas
inc
add
xchg
cs
push
jmp
xor
push
or
sbb
aaa
loop
adc
mov
ret
jecxz
sbb
cmc
add
mov
fcomp
int3
jo
sbb
push
or
pop
xchg
push
or
mov
test
xor
add
aas
xchg
or
or
call
arpl
call
or
add
push
(bad)
ds
pop
sub
dec
xchg
(bad)
jo
int3
xchg
dec
lods
and
push
dec
add
daa
add
in
data16
mov
popa
dec
lds
icebp
push
or
addr16
les
clc
adc
push
add
or
daa
push
int
je
call
xor
xchg
enter
xor
mov
sub
sbb
jns
data16
pop
adc
push
not
pusha
sbb
mov
scas
sbb
rcr
data16
push
mov
push
lahf
cmp
ja
sbb
inc
seta
in
add
adc
(bad)
jmp
bound
test
packuswb
clc
jo
and
dec
in
xchg
or
xchg
sti
or
(bad)
pop
sub
or
addr16
(bad)
in
cmc
sub
and
or
loope
addr16
jmp
mov
xchg
pop
addr16
dec
sub
jmp
or
hlt
push
loope
or
std
add
mov
xchg
addr16
add
loop
xchg
pop
xchg
mov
jno
in
mov
cmc
pop
loope
add
nop
cld
lahf
adc
lea
jb
pop
pop
xchg
sub
xor
test
mov
cmp
xchg
inc
xor
(bad)
add
mov
mov
add
jmp
sbb
arpl
addr16
dec
cmps
mov
or
mov
lods
and
mov
and
or
(bad)
out
jge
les
fisub
add
push
mov
addr16
or
lds
addr16
inc
ss
sbb
xor
adc
push
les
xor
addr16
les
fcomp
xor
movs
sbb
push
popf
dec
stos
xchg
adc
or
adc
pop
outs
and
adc
cdq
or
add
jmp
xchg
mov
mov
addr16
mov
push
push
push
bound
cmp
cmc
mov
push
mov
xchg
jl
addr16
bound
loopne
loopne
inc
in
xlat
retf
push
(bad)
call
push
mov
push
(bad)
lock
sub
mov
xor
adc
loopne
pop
pop
scas
jmp
or
dec
in
and
push
xor
mov
loopne
mov
adc
and
sar
cmps
fld
mov
jno
std
dec
pop
sub
jne
test
je
les
int3
test
pushf
mov
cmp
dec
sbb
and
ficom
mov
xor
inc
or
movzx
les
ret
test
lods
fsubr
xchg
push
call
fimul
icebp
xchg
inc
dec
and
les
cmp
je
mov
mov
loop
xchg
ss
cwde
test
test
push
add
push
push
push
push
mov
xor
pop
dec
or
fidivr
or
hlt
jae
fimul
sti
mov
(bad)
jmp
std
retf
mov
les
fcom
fcomip
xlat
dec
sbb
daa
fist
push
rol
cwde
hlt
test
xchg
add
dec
mov
adc
in
add
xchg
push
call
dec
cmps
dec
jne
inc
cmp
jle
sar
inc
mov
jg
lea
dec
cmp
jg
dec
pop
push
inc
pop
ds
jge
add
call
jg
inc
jle
push
add
dec
cwde
clc
sahf
mov
sti
inc
(bad)
add
mov
push
mov
jae
push
dec
cmp
adc
add
jg
inc
jne
adc
add
inc
test
(bad)
push
jg
mov
cmp
jg
mov
sub
shr
add
lea
outs
push
mov
ficom
test
push
or
idiv
in
add
lea
jmp
addr16
in
jnp
add
ret
sbb
pop
adc
nop
jg
rol
jne
nop
js
xchg
pusha
lea
call
mov
mov
mov
push
lock
movs
pop
dec
push
add
xchg
or
ds
jo
pop
in
popf
(bad)
push
inc
cmc
jle
shl
repnz
inc
xchg
inc
sub
push
sub
jecxz
xchg
push
jge
mov
rcr
push
push
ja
leave
mov
lds
jmp
adc
pop
push
aas
pop
or
add
cmps
or
shl
idiv
in
adc
movs
and
and
mov
push
add
inc
nop
mov
inc
mov
jo
(bad)
fcom
les
lahf
inc
jmp
push
cmp
lahf
jge
cmps
cmp
popf
ds
fmul
dec
xchg
lahf
je
jo
inc
lods
and
mov
in
cmp
inc
push
outs
les
sbb
das
pop
cmp
mov
pop
fsubr
push
push
cmps
lds
or
inc
pop
push
scas
das
or
call
test
and
xchg
mov
and
hlt
jle
and
sbb
leave
sub
mov
sbb
or
pop
jmp
ret
int3
ror
in
(bad)
jmp
sbb
lods
add
adc
in
jge
cmp
jle
cld
aam
shl
call
add
cmp
fsubr
ror
mov
mov
pandn
dec
paddsw
or
mov
adc
shr
add
xchg
inc
mov
add
scas
sbb
push
dec
cs
inc
daa
push
pop
push
sub
pusha
shr
ror
or
pop
iret
out
loope
pop
jg
lds
sub
sbb
jnp
add
dec
jmp
pop
xchg
mov
nop
push
push
add
xchg
dec
dec
or
std
mov
add
ds
aam
and
sbb
mov
je
adc
add
jecxz
xor
adc
cmp
xlat
in
mov
dec
inc
push
mov
pusha
sbb
inc
clc
jb
jne
or
sbb
test
push
movs
inc
jp
das
adc
daa
inc
ja
fisub
inc
sbb
xor
pop
cmp
lahf
dec
sbb
div
pop
cmps
aad
js
jl
fisub
or
fs
adc
jl
das
jl
loop
je
or
(bad)
dec
jns
fnstcw
mov
jge
jne
jns
mov
int3
add
ins
jns
push
and
iret
outs
je
jne
sub
add
das
adc
out
pop
loop
add
lods
pop
push
jo
dec
das
jge
sub
mov
adc
arpl
mov
pushf
aas
and
push
mov
movs
lock
adc
aas
pop
or
or
aas
rcl
lock
push
jo
loopne
add
pop
add
adc
xor
adc
inc
mov
aas
xor
ror
idiv
cmp
mov
movs
and
jbe
adc
jl
and
inc
inc
pop
sbb
fimul
pop
or
mov
or
lahf
add
cmp
add
daa
lahf
mov
leave
sub
ds
sub
mov
xor
lahf
sti
jp
popf
jo
adc
or
adc
movs
mov
pushf
pop
fisubr
sbb
aas
sbb
dec
adc
push
xchg
inc
and
aas
mov
adc
xchg
aas
call
xchg
jns
xchg
cmp
mov
les
cmp
les
movs
dec
test
test
or
xchg
pop
or
adc
add
dec
xchg
mov
js
adc
lods
xlat
sub
add
add
jo
push
lahf
push
and
and
pop
dec
or
enter
or
iret
or
mov
push
push
add
bound
push
ror
add
dec
dec
lods
pop
add
and
cmp
test
jp
in
xor
fadd
rdtsc
inc
push
dec
aam
push
and
jae
jmp
daa
inc
mov
xchg
lods
push
mov
adc
inc
or
repnz
sbb
sbb
adc
cmps
or
and
sub
aas
not
pushf
in
fcom
push
popf
mov
xchg
jb
mov
mov
(bad)
or
add
test
and
mov
push
jp
and
xor
jg
adc
or
pop
push
sub
aad
(bad)
and
test
cwde
jo
pop
mov
(bad)
fsub
je
mov
inc
mov
loope
and
xor
test
movs
fchs
inc
and
(bad)
outs
mul
and
dec
and
sub
fadd
sbb
and
pop
js
adc
sbb
mov
mov
popa
js
mov
leave
pop
cmp
adc
or
lock
shl
loopne
mov
ins
cmc
stos
or
in
call
inc
frstor
jnp
sbb
sbb
pop
add
lods
in
pushf
adc
xchg
adc
push
add
and
sbb
loopne
jl
inc
pop
jp
and
packssdw
mov
sbb
dec
adc
pushf
or
enter
mov
lods
and
sub
pop
nop
pop
daa
pop
and
add
movs
jns
dec
and
pop
sub
repnz
push
stos
sub
and
sub
xor
or
nop
pusha
das
add
push
scas
loopne
add
xor
mov
enter
cmp
xor
push
jb
add
pushf
and
daa
push
sub
sub
mov
cmp
pop
pop
nop
daa
jo
and
fwait
neg
cmps
or
or
or
or
sub
in
pop
fadd
dec
cmp
pop
adc
push
xor
xor
in
sub
loopne
sbb
xchg
pop
jnp
adc
add
cdq
dec
cmps
clc
shl
dec
inc
jae
pop
das
loopne
jns
jl
xor
or
mov
or
sbb
pop
stos
add
push
or
dec
dec
inc
rcr
pop
pop
add
inc
push
sub
iret
push
fld
jb
push
sub
lock
cmp
jmp
(bad)
mov
adc
dec
fdivr
inc
jae
mov
leave
push
out
or
push
add
dec
es
ss
inc
dec
test
jge
inc
cmc
daa
sub
sbb
cmp
je
jl
(bad)
dec
inc
sub
push
sub
or
test
cmp
cmps
push
xchg
push
push
push
push
aaa
pop
xor
pop
pop
push
xor
sbb
push
and
arpl
mov
sbb
imul
dec
test
lock
mov
mov
adc
pop
mul
and
shr
inc
or
test
xor
add
add
mul
rcl
push
mov
(bad)
mul
imul
not
sbb
ds
imul
xor
arpl
lods
and
push
mov
popa
and
jg
sbb
xchg
push
adc
and
sbb
scas
push
retf
mul
jle
adc
in
inc
xchg
pop
das
enter
inc
adc
mov
daa
shr
xor
cmc
shr
and
push
dec
sbb
sbb
push
dec
fild
out
stc
inc
sbb
sar
add
fsub
push
jmp
loop
jg
mov
push
sbb
xor
add
cmps
jo
push
hlt
das
je
jmp
cmp
lock
cwde
and
xchg
adc
push
std
pop
add
xchg
fdivr
aam
cmp
dec
pop
add
jae
daa
jmp
jmp
(bad)
mov
inc
movs
cmp
pop
ins
pop
add
lea
push
(bad)
nop
inc
jo
mov
cmp
add
movs
(bad)
sbb
xchg
pushf
pop
inc
sbb
pop
sub
dec
and
mov
ja
wrmsr
inc
movs
inc
call
and
iret
es
loopne
loope
jl
sub
adc
push
enter
add
and
push
cmp
cmp
adc
repnz
aad
push
es
mov
jne
xor
jo
nop
cmp
mov
in
in
jb
(bad)
sbb
fcom
inc
push
pop
xlat
or
push
lock
pop
xor
or
cmps
rcl
push
sbb
mov
add
or
pop
or
push
sub
call
or
jmp
sbb
xor
pop
pop
lods
arpl
push
test
lods
aam
aas
adc
or
push
retf
inc
sbb
movs
push
mov
lahf
(bad)
pop
add
inc
pop
pop
push
jnp
mov
pusha
add
test
test
fs
adc
jno
iret
out
jl
push
je
or
add
inc
push
push
jns
xor
adc
clc
xchg
jl
xor
sbb
mov
jns
clc
ins
jns
push
es
je
dec
retf
sub
adc
sub
push
cmp
pop
or
retf
mov
ficomp
pop
jb
retf
rcr
adc
pushf
ret
xor
gs
inc
mov
or
push
add
ret
sahf
mov
dec
sbb
rol
add
sti
mov
ret
adc
and
add
into
add
sub
and
mov
mov
test
pop
jo
mov
icebp
sub
xchg
pop
push
sbb
arpl
addps
arpl
pop
mov
add
sbb
xchg
adc
xchg
sbb
adc
repnz
push
dec
inc
enter
jb
xchg
or
cmp
mov
mov
xor
(bad)
sub
add
push
cmps
and
xchg
sbb
mov
push
push
xchg
mov
sahf
lods
and
jo
mov
(bad)
and
sub
inc
fisubr
push
(bad)
hlt
add
popa
cmps
loop
stos
mov
call
push
int
pop
pusha
in
or
jns
or
add
sbb
cmp
mov
aas
loope
bound
int3
shl
jo
jnp
jl
adc
push
adc
add
sub
adc
push
adc
jo
enter
cs
daa
xor
test
mov
call
daa
push
lahf
xchg
cmp
sbb
and
push
mov
test
aam
daa
xor
mov
xor
outs
push
pop
dec
lods
sbb
push
aaa
and
xor
div
cmp
xor
dec
fidivr
ja
push
or
fbstp
mov
movs
xor
xchg
sub
arpl
jecxz
mov
lahf
xchg
jo
sub
cmp
mov
call
mov
popa
add
xor
add
cwde
arpl
test
push
and
js
jno
sbb
mov
adc
outs
stos
inc
pop
pop
mov
jno
dec
leave
pop
adc
pop
add
and
xchg
pop
pop
cmp
or
dec
pop
sub
scas
inc
and
pop
sbb
push
stos
test
jle
gs
sub
ds
adc
fdiv
fadd
push
lods
and
mov
cmp
adc
and
add
mov
dec
aaa
aaa
xor
pop
imul
mov
(bad)
adc
scas
dec
and
add
cli
(bad)
icebp
sub
add
xchg
sub
and
ins
jecxz
repnz
cs
push
mov
mov
adc
push
enter
jno
add
(bad)
mov
pop
pop
das
scas
inc
in
xor
jns
and
nop
push
lds
clc
jge
fmul
push
mov
jmp
aas
loopne
adc
adc
loop
loopne
shr
cmp
push
adc
cmp
fbld
in
loop
dec
retf
push
inc
add
mov
mov
rol
inc
jo
and
repz
dec
fistp
push
adc
xchg
outs
push
mov
(bad)
sbb
and
push
lods
pandn
and
mov
mov
or
shl
retf
shl
enter
or
adc
add
(bad)
hlt
gs
add
push
leave
jbe
dec
loope
pop
inc
xor
and
sbb
test
or
cmp
sbb
pushf
or
xchg
das
js
mov
mov
xor
rol
rol
pop
pop
pop
inc
adc
jo
sti
dec
hlt
inc
xchg
xor
mov
mov
mov
xor
rcr
retf
scas
stos
ret
icebp
and
xchg
add
pushf
xchg
sbb
xlat
scas
xchg
ds
aaa
bound
jl
and
cmp
je
loopne
mov
popa
js
push
jecxz
bound
adc
mov
add
add
cmp
test
jbe
test
adc
jb
dec
xor
and
jmp
add
inc
call
cmp
sbb
in
das
test
ds
test
sbb
add
lock
adc
pop
rcl
push
jmp
cmp
outs
mov
gs
add
idiv
xor
pop
inc
gs
out
add
cs
cmp
and
(bad)
dec
inc
sub
sbb
rcl
addr16
mov
cld
dec
adc
or
bound
aas
and
sub
imul
pop
ror
imul
cwde
and
cmc
pop
push
out
xor
into
pop
pop
adc
sbb
dec
ror
xchg
mov
xor
pop
xor
nop
or
ss
aas
mov
xor
inc
fs
cmp
mov
icebp
inc
data16
sub
add
xchg
adc
xchg
ret
sbb
push
dec
xor
mov
xchg
fidiv
jecxz
popa
in
and
addr16
xor
fild
dec
cmp
jecxz
sbb
push
inc
movs
xor
loop
not
adc
add
push
mov
xor
inc
xor
mov
mov
push
lea
out
fstp
push
lock
dec
cmp
pop
fs
out
or
adc
mov
mov
shl
cmp
into
aas
and
push
(bad)
push
jb
pop
cmp
pusha
cmp
adc
mov
mul
lods
jno
ins
jmp
ficom
add
mov
push
lods
xor
aam
inc
sub
outs
jo
or
xor
outs
and
loopne
add
jecxz
xchg
sbb
mov
arpl
sbb
ja
loopne
cmp
pop
jge
xchg
dec
xor
leave
push
movs
ja
push
mov
or
sub
ror
ss
sbb
xchg
cmp
sub
ins
inc
and
jo
sar
jg
call
inc
and
jg
xor
data16
push
pop
jle
shl
mov
mov
bound
cwde
xor
mov
test
push
mov
jne
fsub
pop
enter
scas
inc
js
js
in
in
aaa
or
inc
adc
scas
cmp
dec
shr
or
pop
xor
mov
xorps
in
dec
mov
and
or
xchg
bound
or
sbb
adc
xchg
add
sub
add
scas
sbb
xor
xorps
scas
push
and
daa
inc
jnp
or
add
cmp
adc
pop
lahf
pop
arpl
push
out
xor
cmps
js
jl
ds
test
fs
adc
jl
push
je
or
pop
lds
js
add
and
loop
clc
xchg
mov
sbb
jne
jns
fs
jns
push
xor
pop
mov
ins
in
lock
and
(bad)
or
repnz
pop
add
fld
enter
push
fimul
pop
cmp
in
cmps
dec
jl
pop
test
lock
inc
or
pop
inc
inc
test
mov
or
mov
stos
jne
daa
shr
add
pop
loope
ss
add
cwde
pop
add
adc
cmp
cmp
push
jg
xchg
imul
jmp
repz
data16
push
je
sub
mov
cmps
stos
pop
enter
(bad)
mov
dec
cmp
xchg
lods
cmp
push
inc
dec
or
mov
xor
pop
pushf
add
test
pop
scas
pop
lea
or
fs
dec
aas
fs
(bad)
inc
dec
iret
daa
loopne
aaa
adc
mov
jl
mov
inc
ins
add
sbb
aaa
fcomp
sub
push
cmp
adc
dec
sahf
loop
sbb
lods
fimul
push
sub
add
ja
sub
nop
push
push
gs
aaa
or
int3
lea
pop
push
fidivr
pusha
lock
fisttp
sti
mov
push
add
mov
ret
adc
cmp
push
cmp
or
dec
(bad)
mov
push
jbe
scas
xor
or
loop
mov
cmps
rcr
push
push
push
push
pop
(bad)
mov
addr16
jg
ret
jg
lea
dec
cmp
jg
push
jl
mov
hlt
test
jge
out
ja
adc
lds
test
test
inc
jle
push
add
dec
jno
pop
mov
dec
cmps
div
retf
or
lea
retf
add
jmp
mov
mov
jmp
or
call
mov
cmp
jg
mov
sub
shr
add
mov
test
idiv
in
add
lea
jmp
popa
sbb
in
jnp
add
push
lods
sbb
mov
mov
adc
push
sahf
pusha
or
inc
push
js
shl
sbb
mov
out
inc
cmp
lock
adc
ins
into
xchg
sub
data16
pushaw
pop
jns
xchg
pushf
sar
addr16
leave
and
addr16
mov
test
inc
and
sub
push
push
adc
pushf
adc
inc
out
push
pop
push
loope
lods
ja
stos
adc
sub
outs
fdiv
jo
or
sbb
pop
pushf
aaa
lea
scas
xor
fisttp
js
mov
dec
in
or
scas
xchg
rcr
or
pop
out
jbe
ror
pop
push
jne
lea
ins
or
xor
and
mov
mov
cmp
or
ins
fmul
jbe
in
jo
mov
fimul
lea
jecxz
dec
dec
push
push
mov
pop
pushf
pop
adc
cmp
shl
(bad)
jns
jmp
jnp
jae
data16
js
sbb
cmps
inc
xchg
mov
pusha
inc
xchg
mov
jecxz
adc
stos
add
mov
mov
test
mov
loop
pop
pop
pop
ins
mov
push
enter
adc
inc
sbb
(bad)
fcom
sbb
stos
nop
mov
mov
addr16
pop
mov
fcmovnbe
pusha
ror
movs
sbb
xor
(bad)
jmp
das
jnp
and
dec
jg
add
sbb
dec
mov
mov
ins
xchg
add
sbb
call
addr16
adc
add
fist
xor
pop
add
adc
add
enter
aas
loope
(bad)
push
push
clc
pushf
pop
pop
mov
mov
jb
or
cmc
mov
xchg
popf
out
jno
jmp
mov
pop
add
mov
dec
outs
loope
xchg
xlat
push
ins
xlat
fsub
push
adc
outs
adc
test
test
repnz
cmp
in
pusha
rol
and
loop
outs
lods
pop
dec
inc
stos
push
fistp
mov
and
jo
mov
fcomp
adc
stos
mov
pop
pop
sub
jno
enter
xlat
aas
jae
test
sbb
xlat
mov
inc
jl
ror
mov
cdq
fsub
stos
and
mov
jl
cmps
and
jb
dec
aad
inc
mov
cmps
fbstp
mov
and
push
and
jb
gs
add
and
pushaw
test
je
push
add
push
sbb
enter
das
lds
or
adc
xor
outs
push
jo
lea
lea
sbb
cmp
cmp
ja
cld
in
push
fmul
pop
dec
push
mov
mov
repnz
and
in
jp
mov
adc
xchg
xor
popa
cmp
test
add
xchg
daa
adc
push
cmp
jmp
js
inc
in
and
in
push
(bad)
ds
push
rcl
pop
call
in
(bad)
xchg
push
sub
in
dec
pusha
sbb
mov
ror
out
loope
mov
push
aaa
sbb
sbb
cmp
(bad)
das
cdq
inc
aas
and
loopne
call
xor
and
sub
daa
mov
xchg
sbb
push
pusha
or
out
or
mov
adc
cmp
arpl
adc
xor
mov
aaa
pop
xor
in
outs
lods
daa
jnp
shl
dec
xor
aam
adc
movs
ss
hlt
in
and
das
iret
xor
inc
push
scas
xchg
push
loope
mov
das
adc
xchg
jo
cmp
pop
sbb
mov
mov
das
jnp
call
sar
call
call
enter
jbe
sbb
or
mov
jo
push
call
cmp
fdiv
pop
adc
xor
retf
es
shl
scas
inc
inc
daa
sbb
imul
imul
daa
(bad)
in
sub
daa
daa
cwde
inc
pop
jno
fs
jo
mov
daa
mov
add
push
inc
outs
ins
jo
jb
jae
outs
cmp
idiv
call
jae
gs
cs
je
imul
push
ins
and
outs
je
mov
inc
sub
popa
ins
dec
outs
arpl
enter
outs
pop
xor
add
add
movs
outs
and
jmp
cs
gs
jne
je
add
inc
sbb
add
js
jle
push
mov
add
sub
jmp
fs
jecxz
int3
std
adc
jnp
pop
test
adc
push
mov
mov
mov
sbb
or
movs
cmps
inc
add
mov
test
lods
daa
retf
fiadd
jbe
add
movs
xor
cmps
rcr
push
mov
push
test
cmp
xlat
add
xchg
hlt
fimul
jnp
xor
rol
(bad)
ret
mov
or
dec
cmp
or
ror
fild
add
gs
data16
les
add
ins
in
(bad)
fiadd
mov
or
outs
retf
arpl
push
icebp
loope
or
or
(bad)
or
adc
js
setg
imul
les
add
hlt
jae
add
ds
fcom
push
imul
in
clc
call
sbb
iret
pop
add
ret
lock
jge
add
xor
inc
js
mov
in
pusha
xor
xchg
and
xor
and
and
mov
in
push
jo
xor
sbb
inc
addr16
mov
xchg
mov
lock
adc
xchg
imul
xor
sar
mov
outs
or
fsubr
je
xor
push
xlat
push
in
push
add
push
daa
add
mov
jmp
xchg
sbb
sub
add
mov
sbb
push
mov
inc
sbb
and
out
out
mov
push
pop
xchg
in
add
jb
and
add
das
xor
push
jb
xor
lock
push
adc
push
aaa
shl
int
hlt
cs
aaa
sbb
dec
push
or
imul
add
daa
mov
ins
lock
call
pop
test
xor
and
pop
dec
jae
popa
sbb
push
je
pop
retf
pop
inc
ret
xchg
xchg
xor
neg
adc
shl
imul
in
ja
pop
sub
or
push
ds
jns
push
lahf
add
sub
pop
adc
fs
lock
inc
dec
mov
pcmpgtw
les
adc
xchg
dec
push
xor
lock
outs
or
inc
jbe
sbb
cmp
fs
pop
push
icebp
and
sahf
daa
adc
push
sub
mov
pop
aas
xchg
ins
pop
shr
add
adc
dec
loopne
inc
or
inc
pop
add
inc
push
cmp
jnp
scas
sbb
inc
outs
jne
jno
adc
sbb
pop
fucomip
test
outs
lock
push
js
add
sbb
outs
arpl
(bad)
neg
outs
sbb
add
mov
aam
jmp
pop
xchg
pop
mov
out
mov
or
jmp
xchg
in
adc
mov
jl
cmp
test
out
jo
ret
xor
out
jbe
loope
js
push
(bad)
(bad)
hlt
call
inc
cmp
dec
inc
data16
lahf
test
loop
push
inc
ret
and
rcr
xor
and
scas
inc
hlt
adc
push
xor
push
dec
dec
les
cmp
imul
jle
pop
mov
and
pop
cmp
mov
xchg
inc
add
push
lea
imul
cmp
popf
add
pop
inc
jne
mov
sbb
pop
add
push
mov
out
push
dec
nop
das
lahf
xchg
xchg
loopne
out
lock
sub
mov
add
jb
push
xlat
add
cmps
sub
(bad)
maskmovq
neg
and
adc
(bad)
bound
or
dec
call
pop
ds
jae
outs
add
or
sub
cmp
jo
sub
fnstenv
jo
xchg
push
xchg
(bad)
jecxz
cmp
mov
(bad)
xor
and
dec
outs
jp
xchg
daa
daa
daa
nop
fisubr
push
test
leave
leave
cmp
in
fs
fisttp
cwde
jb
jb
xor
(bad)
cmp
sbb
cdq
dec
je
out
cmp
aas
setle
jo
(bad)
pop
std
push
xchg
push
ds
inc
popa
dec
sbb
push
cmp
add
sti
imul
mov
lea
cmps
dec
in
cmp
xchg
dec
inc
dec
or
fdivr
add
test
ins
movs
mov
jne
xor
loopne
jnp
daa
mov
push
sbb
jns
xchg
push
add
retf
dec
sar
push
jnp
mov
dec
jae
or
adc
xchg
int3
or
or
inc
push
popa
jg
iret
push
lods
sub
dec
jg
add
add
fs
mov
mov
ins
jne
arpl
data16
lock
or
outs
sub
push
add
push
inc
and
add
shr
adc
ja
sub
ja
inc
or
shl
cmp
add
enter
cmp
pop
out
enter
cmp
or
or
or
push
in
imul
add
and
das
leave
call
and
test
retf
or
jno
pop
xor
bound
adc
imul
enter
iret
dec
add
imul
test
xchg
adc
enter
mov
aad
jns
add
aam
or
push
inc
jmp
add
xchg
jne
xchg
pop
sub
inc
js
jo
cdq
sbb
add
push
inc
inc
out
test
xor
inc
add
adc
fld
scas
cmps
cmp
pop
add
out
or
sar
rcr
(bad)
pop
add
ficom
sahf
xchg
pop
sbb
daa
push
dec
or
ja
xor
add
pop
jmp
push
dec
jg
das
cwde
sub
dec
out
dec
popa
pop
and
movs
mov
ret
xor
push
es
add
and
cmp
(bad)
adc
xor
popa
imul
cmp
add
cmp
dec
popw
jp
jnp
dec
add
imul
cs
cmp
addr16
inc
mov
shr
xor
dec
sbb
imul
or
inc
jl
inc
lods
adc
in
mov
cmp
mov
call
dec
or
or
push
in
xor
xlat
mov
rol
and
and
dec
sub
add
dec
push
ins
mov
jae
ret
mov
xor
sbb
push
into
dec
clc
add
jl
xchg
sub
and
xchg
mov
cmp
je
pop
lods
sbb
mov
cmp
dec
mov
fwait
push
or
pop
js
push
and
add
pushf
fs
inc
outs
inc
or
mov
sub
out
mov
enter
shr
stos
push
mov
movs
arpl
jns
add
call
enter
aas
fcomp
or
(bad)
(bad)
pop
ret
mov
jle
adc
inc
xchg
(bad)
test
inc
pusha
dec
mov
jp
les
popa
mov
pop
mov
sbb
sbb
stos
pop
sub
dec
pushf
xchg
fbstp
cli
inc
adc
inc
add
xlat
dec
sbb
push
pop
sub
push
xor
test
pop
cli
mov
clts
mov
outs
mov
stos
ds
test
mov
inc
cmp
push
adc
and
mov
(bad)
shl
jb
xor
sbb
mov
push
push
mov
pusha
or
in
nop
sub
lea
jbe
pop
dec
pop
je
fld
shl
pop
pop
in
jbe
lock
mov
test
add
mov
in
adc
inc
pop
dec
adc
je
not
push
push
test
hlt
mov
repnz
ss
sbb
adc
add
jp
push
loope
jmp
pop
mov
sti
sar
mov
pushf
fsub
clc
push
and
(bad)
dec
dec
inc
sahf
add
and
movs
push
xchg
pop
cmps
cmp
leave
leave
enter
cmps
push
call
or
in
fwait
call
jb
dec
ins
movs
in
aas
mul
jae
movs
pop
rcl
xchg
out
ror
inc
or
sub
adc
aam
cmp
pop
xor
dec
xchg
dec
or
mov
xchg
push
jno
test
fwait
daa
pop
sub
xor
push
xor
ins
dec
add
mov
add
sbb
pusha
or
add
sub
jmp
stos
or
outs
sub
push
or
add
adc
call
jbe
jae
nop
or
xchg
shl
rcr
add
movs
add
xchg
add
push
and
nop
ins
call
xor
hlt
mov
sbb
rol
inc
adc
cwde
add
loopne
mov
mov
mov
dec
add
push
add
or
adc
dec
sbb
and
inc
ins
shl
jae
adc
add
dec
add
xchg
xor
shl
and
nop
cwde
aam
lea
xchg
popf
inc
stos
sar
aad
inc
movs
add
aad
mov
mov
stos
adc
and
inc
adc
fcmovnb
scas
in
and
sub
enter
out
dec
es
test
cmp
adc
xor
mov
and
fisubr
mov
push
jae
pop
sbb
daa
cmp
jo
or
dec
push
inc
dec
mov
sub
bound
cwde
dec
test
jge
inc
push
cmp
je
(bad)
test
in
ins
pop
adc
movs
adc
shr
pop
test
hlt
xchg
rol
mov
xchg
dec
add
mov
xchg
mov
mov
add
ins
les
inc
sub
push
leave
sub
push
sub
mov
inc
add
and
mov
imul
pop
pop
add
sub
movs
stos
mov
(bad)
lods
push
inc
ret
addr16
mov
and
sub
add
ss
movs
imul
inc
hlt
inc
dec
lea
lea
sub
mov
dec
cmp
daa
xchg
push
inc
push
pop
push
mov
mov
mov
pop
inc
movs
rol
popa
or
mov
pop
mov
jno
xchg
sub
je
sub
ficomp
push
sbb
inc
das
pop
or
mov
(bad)
aas
retf
scas
mov
outs
cmp
add
rcr
jmp
fadd
imul
push
pop
jno
movs
push
xchg
inc
loop
cmp
mov
fld
or
test
and
or
mov
sub
pop
enter
scas
ret
xchg
dec
test
jno
dec
push
imul
push
xor
lahf
mov
push
fsubr
cmps
fdiv
addr16
and
mov
mov
cmps
stos
shl
cmps
dec
push
push
xchg
out
inc
test
cmps
pop
xchg
ret
cmps
jae
sbb
mov
sub
mov
sbb
rcr
jle
cmps
mov
ja
dec
pop
xor
xchg
xchg
movs
loopne
mov
in
in
mov
xor
in
cwde
in
mov
sbb
jb
out
mov
cmp
cmp
pushf
shl
mov
inc
js
dec
inc
sahf
es
cmp
dec
es
pop
jmp
xchg
in
adc
add
jecxz
test
inc
je
mov
mov
push
add
dec
mov
cwde
imul
adc
or
push
daa
xor
xor
inc
xchg
inc
pop
cmp
ss
mov
outs
mov
cmp
or
popf
jmp
xchg
sub
and
outs
or
or
in
xlat
inc
mov
ja
lock
les
mov
rol
mov
mov
mov
inc
or
or
and
je
push
fwait
sub
retf
dec
add
or
dec
test
or
jns
jmp
inc
inc
inc
bound
dec
push
inc
or
push
inc
mov
xchg
mov
dec
mov
push
or
or
mov
or
ss
or
mov
fld
add
push
push
cmp
adc
xchg
adc
and
dec
mov
rcl
pop
mov
mov
nop
bound
dec
jae
sar
add
cmp
xchg
into
push
aaa
add
sbb
and
test
imul
xor
jae
fadd
sbb
cmp
in
cdq
mov
cdq
dec
or
test
adc
xor
adc
mov
jge
inc
sti
inc
xchg
dec
or
mov
je
daa
adc
push
sub
mov
pusha
xchg
mov
nop
dec
mov
inc
movs
mov
mov
adc
jo
adc
inc
and
ins
mov
mov
xchg
test
mov
add
hlt
adc
mov
xor
js
lea
pop
xchg
push
fnsave
cmps
pushf
jl
enter
or
sbb
leave
sub
rol
leave
jo
sub
leave
test
sbb
cmps
leave
pop
add
adc
push
aaa
cmp
jb
and
and
in
(bad)
mov
sub
adc
pop
pop
xor
ds
lods
xor
jo
sub
or
popa
hlt
pusha
or
aas
add
inc
push
adc
(bad)
jnp
add
rcl
xor
sub
ret
push
int
cli
adc
jb
xchg
adc
pop
cmp
or
xchg
pop
cmps
call
xchg
addr16
(bad)
ror
inc
mov
frstpm(287
fiadd
add
adc
push
xor
jnp
scas
sbb
cmovbe
add
sbb
fisttp
push
aad
push
jecxz
mov
push
add
push
mov
mov
and
push
fisubr
inc
ja
cmp
aad
pop
fld
add
cmp
fild
cld
mov
push
jb
stos
ror
sub
and
xor
pop
outs
je
mov
aam
xchg
and
push
pop
ins
jle
pop
xchg
mov
repnz
movs
adc
retf
add
cmc
sub
adc
jnp
outs
mov
cmp
mov
ret
cmp
aaa
out
mov
add
push
clc
int3
push
add
test
sub
fsubr
push
addr16
push
popa
mov
push
and
arpl
adc
das
cmc
sub
xchg
mov
pop
jmp
lds
in
in
ds
cli
jns
xor
inc
(bad)
xchg
loopne
(bad)
cmp
cmp
cmp
out
repnz
cmp
rcr
leave
jb
jb
arpl
sbb
retf
(bad)
pushf
pushf
mov
retf
sub
int3
xchg
push
jbe
mov
mov
push
repnz
push
push
lds
mov
add
jb
xchg
jp
stos
fild
mov
cmp
das
dec
xchg
repnz
stos
loope
sbb
cmp
or
shl
sbb
push
sub
mov
push
stos
cmp
inc
test
jle
or
mov
or
and
dec
ins
push
stos
inc
js
push
outs
or
mov
movs
inc
movs
xor
add
ja
inc
movs
dec
stos
jbe
jae
add
push
jmp
xchg
stos
xchg
or
and
or
leave
call
and
test
push
xor
push
ds
stos
mov
mov
movs
out
pushf
push
(bad)
mov
dec
add
add
push
dec
sub
add
stos
mov
stos
clc
push
stos
jae
ficom
stos
add
xchg
out
and
xor
mov
jmp
xor
and
and
sbb
sar
lock
xchg
push
add
xor
cld
mov
pop
test
aaa
jmp
add
stos
dec
mov
in
pop
and
ins
je
pop
add
add
dec
push
cmps
dec
test
dec
add
sub
repz
sbb
add
shr
cmp
mov
inc
mov
or
jns
dec
pop
xlat
bound
sub
and
add
or
push
ja
retf
xor
or
jno
jno
imul
and
inc
push
and
jmp
inc
add
xor
jno
scas
add
sbb
inc
sub
int3
test
aam
add
push
inc
je
cmp
cmp
xor
or
adc
push
sbb
pop
sbb
pop
js
push
and
add
xlat
pop
aad
repnz
or
jno
and
adc
push
ja
sub
pop
pop
inc
xchg
sbb
outs
sub
pop
fwait
ret
xor
adc
inc
cmp
cld
sub
shr
add
ins
dec
pop
sbb
sar
push
pop
(bad)
jmp
mov
adc
sbb
sub
xor
inc
push
add
xchg
add
rol
pop
das
jne
adc
push
cmp
pop
jnp
push
or
outs
adc
add
mov
fst
fcomp
fiadd
mov
sub
mov
sbb
cmp
cmps
pop
or
sbb
pusha
push
adc
and
aaa
pop
pop
mov
push
push
gs
mov
xor
pop
lock
jae
mov
xor
lock
dec
dec
mov
rol
add
test
cmp
movs
movs
jnp
movs
cmp
repnz
push
in
fst
jp
mov
cs
pop
pop
test
cmp
push
xchg
add
iret
fild
or
aam
cmp
je
into
fwait
push
into
fisttp
daa
mov
jle
sbb
pop
dec
jne
daa
std
inc
(bad)
mov
leave
enter
xlat
dec
and
in
mov
fdiv
xor
(bad)
jns
jb
fld
fisubr
cmp
cmp
pop
xchg
loop
fistp
addr16
out
jmp
(bad)
into
lahf
je
movs
mov
add
cmp
mov
and
pop
pop
call
imul
cmp
cmp
dec
mov
pop
or
lea
dec
mov
jno
cmp
dec
inc
xor
pop
and
mov
add
mov
nop
jle
and
pop
lea
xchg
out
jmp
xchg
cmp
mov
rcl
add
outs
or
pop
call
ror
add
ja
int3
or
mov
cs
lea
jmp
movs
xchg
mov
les
call
call
gs
pop
mov
lea
lods
push
loop
and
test
ins
xor
inc
mov
out
mov
xor
or
mov
jno
pop
push
or
add
mov
mov
jo
push
lds
xchg
sbb
and
ins
xchg
rcr
nop
cwde
or
popf
sbb
movs
cs
fsubr
xchg
adc
xchg
popa
in
xchg
mov
movs
jnp
dec
popa
and
je
fsub
fld
add
dec
inc
lds
xchg
scas
nop
and
dec
out
movs
repz
popf
scas
aaa
add
dec
dec
xor
pop
ins
inc
mov
es
push
jae
jge
adc
cmp
enter
or
cdq
adc
jns
xchg
xchg
mov
xor
cmp
push
jge
or
movs
cmp
ins
dec
and
sti
rol
adc
xor
dec
cs
movs
xor
pop
or
or
adc
xor
pop
jb
inc
sub
mov
mov
fcomp
xor
sub
fdiv
imul
sbb
mov
pop
je
cmp
out
pop
fisub
pop
xchg
or
adc
add
stos
je
xchg
fisttp
movs
rol
mov
(bad)
fld
push
cmp
sbb
pop
ror
push
dec
(bad)
movnti
pop
aas
mov
test
movzx
adc
cmp
retf
add
push
pusha
mov
das
mov
pop
mov
or
out
push
xor
outs
dec
aad
pop
fld
add
inc
ja
fsubr
test
stos
add
inc
pusha
test
dec
push
into
mov
leave
sbb
sti
inc
pusha
test
inc
ins
push
inc
xchg
es
pop
pop
inc
and
inc
push
jecxz
mov
mov
outs
shl
push
or
push
nop
nop
and
mov
push
add
loop
mov
mov
inc
es
mov
je
das
dec
or
fcmove
inc
cli
inc
das
fcomp
jae
jo
push
das
sbb
(bad)
xor
push
jecxz
mul
test
jecxz
out
dec
cs
jns
jb
xor
xchg
into
or
cmp
cmp
dec
cwde
out
out
pushf
pushf
mov
ret
dec
dec
dec
inc
inc
mov
daa
call
outs
mov
push
xchg
xchg
xchg
xchg
jmp
leave
enter
jmp
mov
xsha1
cmps
mov
cmp
fcomp
add
ror
inc
push
adc
shl
sbb
mov
cmp
int3
dec
leave
loop
cmps
xchg
dec
or
sbb
fsubr
push
daa
sbb
sbb
push
inc
xchg
mov
dec
mov
jg
push
jb
sbb
inc
inc
cmps
arpl
sti
and
mov
ins
push
aad
es
sbb
or
jl
xor
cli
mov
dec
pop
adc
xchg
scas
imul
lds
mov
inc
out
test
jmp
movs
xchg
sbb
or
das
push
and
call
mov
mov
call
push
test
in
lods
je
sbb
das
sbb
movs
jo
add
call
iret
add
popf
push
add
adc
push
mov
es
add
fst
pop
push
sbb
xor
push
xor
ins
dec
popa
loope
and
xchg
outs
cmps
mov
das
aaa
adc
and
shl
mov
dec
pop
add
outs
add
inc
dec
xor
rol
adc
loope
push
dec
jg
push
jnp
cmp
and
and
pop
call
movs
repz
cmp
add
add
push
ins
jno
sbb
jmp
jno
and
add
mov
xchg
or
adc
mov
inc
xor
or
clc
push
or
inc
(bad)
push
xchg
adc
jno
mov
fist
cmp
xchg
dec
mov
push
and
cmp
mov
pusha
jno
xor
jno
cmovb
je
and
inc
sub
bound
mov
pop
cmp
pop
jno
inc
xchg
imul
mov
adc
dec
xchg
pop
xchg
and
fstp
adc
jo
enter
mov
pop
push
cs
cwde
mov
jno
inc
xchg
push
jecxz
jno
jno
dec
lea
pop
pop
mov
adc
push
je
and
outs
xor
push
push
bound
adc
mov
pop
sbb
and
cmp
nop
pcmpgtw
repnz
out
(bad)
and
dec
inc
inc
xchg
nop
and
(bad)
or
xor
adc
push
fimul
mov
cli
loopne
js
bound
adc
or
scas
inc
sub
add
pop
aas
xchg
pop
push
push
scas
push
mov
out
or
rcr
inc
add
xlat
add
xor
jbe
mov
sub
inc
inc
push
scas
pusha
push
std
ficomp
mov
inc
dec
pop
(bad)
enter
push
jmp
xchg
or
cld
fisttp
sbb
jbe
xlat
fdiv
inc
add
icebp
push
loopne
or
mov
and
adc
push
out
data16
or
or
xor
add
rcr
fdivr
mov
loop
mov
dec
push
and
dec
add
int3
fstp
sub
push
movs
ins
jle
pop
shl
add
cmp
mov
mov
push
repnz
fld
lds
enter
ret
outs
mov
rcr
jmp
cli
push
push
repz
stos
hlt
in
adc
pop
scas
test
pop
push
pushw
out
mov
push
pop
clc
jo
test
scas
pop
xchg
xor
test
dec
or
test
pop
add
scas
mov
mov
in
adc
cdq
in
xchg
adc
cmovnp
scas
lods
push
scas
in
push
cmp
mul
pop
setbe
pushf
pushf
mov
not
jmp
pop
xchg
(bad)
daa
daa
and
stc
inc
xchg
jmp
jae
leave
leave
enter
sti
aas
gs
leave
pushf
rcr
cld
pop
mul
in
and
popf
fisttp
stos
scas
fcomp
or
dec
or
dec
push
inc
cmc
push
or
mov
pop
sub
in
cmp
fisttp
inc
or
jbe
retf
adc
sbb
mov
sbb
xchg
xchg
push
push
mov
or
sbb
rol
push
push
inc
scas
sbb
mov
aam
mov
cmp
outs
xchg
adc
push
or
dec
or
adc
inc
xchg
jbe
inc
mov
inc
jae
ffree
test
xchg
lea
push
xchg
fwait
cmp
adc
pop
les
and
sbb
sub
add
gs
push
mov
lea
mov
or
adc
aam
inc
push
mov
iret
dec
add
sub
add
adc
add
pop
inc
ins
shr
jae
inc
cmps
add
test
xchg
cmps
pop
ins
loopne
out
and
lea
cmps
pop
cld
scas
pop
push
das
rcl
cmps
dec
pop
mov
pop
dec
sbb
pop
dec
pushf
mov
xchg
aam
add
mov
push
pop
popf
dec
enter
jg
sbb
cmps
into
push
sub
pop
imul
mov
pop
int
push
pop
cmp
xchg
test
mul
push
add
mov
jmp
test
jae
mov
add
push
mov
pop
cdq
popf
xor
inc
cmps
je
pop
pop
xlat
bound
xor
xor
dec
pop
jge
inc
pop
and
push
stos
aam
popf
pop
aam
jne
test
push
jl
push
adc
aad
xchg
aam
popf
cmp
push
mov
lds
loopne
or
inc
je
xor
(bad)
sub
inc
sub
jo
stos
mov
mov
cmp
cmp
add
stos
dec
inc
xor
cmp
add
call
outs
add
pop
push
pop
adc
or
mov
mov
enter
outs
push
or
sub
cmp
outs
int3
push
pop
cld
mov
pop
stos
in
adc
gs
dec
xor
add
push
add
push
and
ds
push
push
or
sub
ja
fcmovu
or
ja
push
jbe
hlt
es
pop
pop
cmc
ins
push
jp
and
or
ret
bound
fimul
mov
dec
push
sub
push
sbb
sbb
fs
or
inc
cmp
push
push
call
add
cmc
cli
jae
pop
add
and
mov
dec
push
dec
gs
or
addr16
aad
pop
pop
popa
and
push
test
mov
add
and
cmp
outs
lods
shr
xchg
ins
(bad)
lods
and
push
sub
sub
jne
adc
lea
add
(bad)
int3
add
push
mov
add
inc
and
sbb
call
adc
and
repz
push
xlat
push
loope
rcr
ret
xor
push
cld
movs
add
add
jl
add
push
pop
loop
jbe
test
xlat
fisttp
jle
out
getsec
adc
retf
and
adc
mov
xchg
cwde
popa
js
cmp
sub
mov
xchg
inc
jbe
jne
addr16
or
push
cmps
outs
pusha
cmp
rcl
(bad)
push
push
sti
test
push
cmp
fsincos
sbb
jmp
pop
lods
or
cmps
pop
fst
lock
inc
sbb
outs
sub
ud0
cmps
rdtsc
xchg
dec
xor
and
or
or
adc
mov
lock
xchg
repz
aas
int3
push
add
pop
push
gs
ret
jne
inc
pop
jo
repz
mov
pop
mov
push
add
push
add
fst
add
push
(bad)
inc
push
mov
add
or
test
cmp
shl
pop
push
xor
jns
pop
dec
popa
nop
mov
lods
pop
pusha
adc
and
push
(bad)
xor
push
sbb
pop
push
xchg
aam
mov
cmp
loopne
(bad)
push
cs
push
inc
and
mov
cs
ja
pusha
mov
fcomp
pop
push
add
inc
pop
mov
into
imul
push
add
lds
inc
or
mov
jmp
mov
adc
push
push
dec
jae
out
sub
es
test
outs
jb
xchg
mov
pushf
cmp
shl
jae
push
jnp
adc
int3
adc
push
push
pop
push
sub
iret
imul
aaa
xor
jmp
fneni(8087
rcr
xchg
inc
push
add
or
les
loop
scas
call
sahf
clc
sar
(bad)
and
dec
stc
cmps
push
jmp
xchg
add
pop
xchg
gs
mov
push
add
pop
addr16
sub
jo
add
enter
ret
rcl
ins
pop
pop
fmul
(bad)
sbb
mov
xchg
scas
pop
in
add
and
xchg
or
xor
stos
sub
add
jmp
pop
stos
mov
and
loopne
ins
mov
int3
mov
cs
push
mov
pop
mov
mov
sub
dec
or
sar
add
push
push
mov
add
xor
lahf
xor
xchg
xor
adc
pop
jne
add
or
lds
add
cmp
push
inc
into
stos
ja
cmp
pop
adc
sub
jno
xchg
jns
mov
adc
or
sub
push
mov
add
popf
out
pop
cwde
push
ds
add
mov
nop
frstor
cmps
lds
push
sbb
xchg
push
sub
add
(bad)
mov
dec
gs
outs
fs
push
add
jno
aaa
pop
jl
fld
mov
imul
push
jge
iret
sbb
ret
or
out
loopne
getsec
cmp
push
mov
add
pop
sbb
scas
call
push
cmps
pop
sar
mov
sar
shl
add
shl
popa
mov
sub
mov
mov
push
pop
push
retf
call
sbb
mov
and
rol
arpl
jb
lahf
cmps
aaa
loopne
lds
fst
fwait
pusha
adc
cs
jg
sub
jno
or
adc
push
sar
dec
(bad)
or
leave
ret
repz
inc
push
in
test
jo
mov
retf
add
xlat
mov
inc
cwde
push
sbb
add
push
daa
add
push
xlat
push
pop
push
add
lods
(bad)
xchg
adc
inc
daa
loope
sub
dec
jno
mov
ins
xchg
mov
(bad)
adc
(bad)
mov
adc
jns
dec
stc
(bad)
mov
cmp
or
int3
leave
rol
ffree
mov
mov
mov
ja
sbb
je
push
clc
push
add
loopne
jmp
repz
xchg
enter
(bad)
shl
pop
sbb
dec
and
jae
movs
or
out
test
test
aad
push
je
jns
adc
pop
loop
push
mov
pop
push
pop
inc
xor
(bad)
adc
add
int3
mov
pushf
out
push
mov
adc
cs
add
adc
mov
add
pusha
cs
call
push
(bad)
mov
jle
ror
sbb
(bad)
and
stos
xor
popa
lea
loopne
pop
lea
lea
pop
pop
out
and
lea
lock
lea
push
mov
dec
popa
cmova
lea
mov
lea
(bad)
rol
add
shr
pop
(bad)
cmps
pop
jo
and
adc
pop
add
cmps
wrmsr
xlat
pop
adc
inc
adc
ror
scas
fdiv
scas
dec
xlat
(bad)
ret
ret
stos
adc
loopne
mov
aas
push
dec
sub
pop
push
xlat
sbb
mov
push
fs
add
sub
push
xlat
add
pop
adc
xor
and
or
das
pop
ins
adc
push
mov
push
fcomp
add
iret
mov
cmp
in
lds
ror
add
add
scas
xchg
mov
push
cmp
add
and
test
fsubr
push
in
jmp
scas
sub
pop
xchg
inc
fsub
and
inc
adc
push
xlat
imul
test
add
je
cvtpi2ps
popa
outs
loop
push
xor
fs
push
loop
cmp
jg
mov
lock
shl
loopne
icebp
push
sti
push
add
or
inc
(bad)
adc
jecxz
ss
imul
push
and
add
rcr
mov
fnstsw
jle
sbb
sbb
sub
ins
xor
bound
ins
lea
pop
pop
out
cmp
lock
and
aaa
cmp
inc
pop
push
pop
lea
popa
mov
sbb
sti
push
(bad)
mov
xor
inc
adc
sbb
or
lahf
or
loope
lea
push
inc
idiv
mov
or
mov
xchg
or
popf
sub
xlat
test
xlat
pop
ja
add
add
lss
pop
test
scas
test
sbb
push
cmp
aas
pop
jge
push
jno
loopne
add
pop
xlat
and
(bad)
xlat
xchg
and
ret
imul
(bad)
adc
jne
ss
mov
adc
ins
xlat
xchg
fdiv
xchg
and
push
movs
add
nop
push
xor
push
push
pop
add
xlat
iret
clc
aaa
jno
sub
and
mov
mov
or
mov
add
imul
push
pop
and
jo
xlat
push
pushw
sub
push
pop
push
test
pusha
cmovb
jnp
mov
sbb
and
inc
jo
pusha
add
add
call
or
aas
push
adc
addr16
nop
xlat
inc
mov
dec
pop
dec
xor
ins
sar
push
sbb
push
mov
ins
dec
outs
arpl
cmp
addr16
mov
test
loopne
loopne
fimul
push
shr
or
sbb
or
sub
pop
sbb
push
or
sbb
xchg
pop
adc
cs
test
xchg
imul
imul
mov
xchg
dec
bound
ds
inc
add
add
jno
stos
(bad)
adc
mov
inc
ror
jo
shl
sbb
cld
mov
push
add
pop
cmp
and
push
mov
arpl
xchg
paddusw
test
mov
mov
movs
xor
mov
movs
test
mul
bound
addr16
lock
mov
(bad)
mul
cdq
sub
enter
cdq
fs
xor
dec
out
adc
push
or
rcpps
and
adc
add
and
lds
lock
aas
test
ror
int3
cmp
push
xor
xlat
pop
cs
sbb
into
call
pusha
daa
mov
std
sub
pop
retf
push
add
push
(bad)
cmp
fs
add
test
inc
addr16
jmp
jmp
shl
sub
loopne
xlat
call
sbb
or
jg
jo
in
cmp
adc
loopne
jne
jge
outs
xchg
xchg
jne
outs
and
pushf
cs
mov
sub
push
lods
add
mov
jne
jns
cmp
pop
push
jg
push
and
in
mov
pop
xchg
add
bound
xchg
sbb
bound
jecxz
xchg
jne
mov
ret
push
cmps
cmp
sbb
sbb
push
shl
push
test
fld
add
jl
adc
popf
push
cmps
push
mov
or
mov
push
sbb
push
dec
sub
int3
add
scas
mov
dec
add
xchg
in
or
test
mov
je
adc
(bad)
xchg
sbb
or
addr16
dec
inc
jo
push
fsubr
push
bound
addr16
mov
sub
call
inc
pusha
ins
jnp
dec
sub
add
inc
sbb
add
pushf
jo
inc
aas
xchg
pop
int
adc
cmc
jmp
pushf
xchg
movaps
inc
(bad)
and
(bad)
div
and
mov
jns
ror
int3
or
add
ja
dec
retf
add
cs
push
xchg
cwde
jle
push
cmp
add
jo
mov
daa
int3
ror
pop
adc
add
add
xchg
sbb
pop
push
sub
loope
pop
popa
pop
imul
or
jae
loop
stos
mov
inc
pop
add
jg
cmp
ret
push
(bad)
imul
adc
int3
leave
sub
repz
push
rol
ffree
jg
xchg
push
call
je
mov
push
add
aam
xchg
add
cmp
xchg
cwde
push
loop
pop
loopne
and
dec
jecxz
test
xchg
inc
cmps
add
les
cmps
nop
sub
pushf
xor
and
push
adc
fwait
lahf
adc
cdq
idiv
jbe
dec
sub
jno
ja
int3
cdq
push
mov
or
inc
lahf
mov
sbb
inc
xor
loopne
fwait
pop
dec
add
neg
cs
mov
mov
mov
sub
shr
pop
or
or
or
pop
sbb
(bad)
or
sub
or
push
rol
push
or
cmp
lock
pop
sbb
nop
jmp
sbb
fnsave
pop
sub
sbb
mov
inc
inc
stos
jg
iret
xlat
scas
adc
cmps
jae
mov
ret
adc
je
push
lock
sbb
xor
pop
cmp
mov
mov
push
dec
push
add
daa
loopne
shl
out
cmps
add
sub
daa
xor
mov
jns
bound
not
sbb
pop
sbb
adc
sub
mov
xor
mov
cmp
movs
mov
mov
cmp
add
mov
mov
mov
inc
movs
jnp
out
push
sub
add
adc
push
mov
shl
add
mov
xchg
nop
(bad)
pop
push
lods
and
jae
lea
pop
pusha
aam
test
jae
cmp
into
sbb
jo
outs
push
add
jnp
adc
jmp
movs
loop
cmp
iret
iret
mov
lock
xor
rol
push
or
adc
aaa
ror
sub
stos
and
cmp
mov
call
push
iret
adc
mov
inc
jge
pop
movs
xor
xor
or
test
movs
adc
mov
inc
sub
push
bound
and
adc
aaa
mov
jo
adc
add
aam
adc
outs
cmova
or
pop
sbb
jb
ret
pop
out
pop
push
mov
cmp
cmp
adc
fistp
shl
or
jmp
add
shl
mov
add
test
daa
adc
bswap
add
sbb
fmul
out
inc
cwde
push
sbb
xor
in
push
add
cmp
mov
push
inc
push
mov
xor
adc
add
adc
xor
ja
or
pop
aad
and
mov
adc
push
jg
add
es
femms
jb
mov
xor
cmp
adc
int3
sub
push
outs
aaa
push
inc
and
aaa
dec
cs
into
fcomp
out
popf
mov
fs
and
jne
or
jg
and
mov
es
sbb
repz
sub
mov
or
xchg
in
mov
and
dec
jo
out
cmp
ins
pushf
loopne
fmul
mov
popf
int3
push
ds
scas
push
pop
push
imul
je
imul
aas
push
test
add
inc
pop
add
scas
push
push
cmps
inc
ret
loope
xchg
js
shl
and
outs
gs
sub
bound
adc
pop
adc
outs
gs
loopne
push
gs
loope
ret
or
mov
lods
xchg
repnz
sbb
pushf
lock
pop
cmps
pop
add
add
rcr
movs
mov
adc
lds
sbb
or
adc
push
nop
cs
xor
adc
jmp
adc
call
fldcw
jecxz
in
ror
clc
cs
pusha
out
xchg
push
or
fcom
daa
add
push
push
test
add
xlat
sub
test
or
aaa
pop
jne
jo
lods
lahf
lods
and
cmp
inc
mov
sub
sbb
and
adc
shl
int3
mov
mov
fadd
lds
jnp
fild
fs
xlat
jnp
push
pop
jno
jns
rol
jbe
add
push
mov
or
and
pop
sbb
adc
pop
push
push
push
sub
add
cmp
inc
xchg
or
mov
mov
sub
push
imul
int3
xchg
(bad)
lahf
add
jns
test
fcmovb
jo
rol
inc
push
inc
push
les
scas
mov
inc
pop
inc
add
add
pop
jg
jle
pop
into
in
outs
lods
pmaddwd
stos
mov
xor
dec
loop
sbb
dec
imul
bound
imul
push
cmp
cmp
imul
cmp
mov
dec
in
sbb
or
js
addr16
add
cmp
pop
add
inc
(bad)
loop
rol
lahf
dec
sub
lds
int3
mov
cmp
inc
push
adc
push
iret
mov
xchg
ret
out
push
sub
add
push
daa
ror
je
(bad)
push
xchg
stos
cmps
push
cmp
mov
inc
daa
jmp
shl
or
es
pop
pop
jno
adc
loopne
push
dec
ja
sub
pop
pop
ja
nop
mov
xchg
adc
shl
int3
mov
mov
fadd
lds
cs
fild
fisttp
dec
inc
mov
into
repz
jbe
add
inc
cmp
ficomp
or
inc
mov
mov
inc
lahf
pop
push
push
sbb
lahf
and
add
dec
dec
shl
mov
inc
(bad)
sub
and
push
sbb
daa
sbb
out
loopne
dec
int3
test
popf
sbb
loop
enter
sbb
jo
out
lock
dec
(bad)
add
or
pop
add
add
pop
daa
mov
in
push
in
sysexit
mov
ret
movs
xor
xchg
jb
outs
je
pusha
movs
jg
jne
mov
jg
bound
pop
pop
mov
jg
sbb
jg
je
jo
xchg
jg
stos
xchg
jmp
or
jg
daa
xchg
aam
out
dec
and
mov
cmp
mov
sub
fld
mov
add
jns
and
repz
ds
adc
xchg
outs
lahf
push
test
(bad)
xlat
mov
sbb
ret
adc
sahf
es
fnsave
pop
push
add
add
add
nop
(bad)
das
icebp
bound
or
mov
ja
or
pop
aad
and
inc
and
inc
dec
jg
adc
mov
and
mov
jl
sbb
int3
aad
fisttp
jmp
test
adc
out
neg
into
add
or
push
xchg
push
lods
daa
mov
(bad)
jg
clc
out
xor
sub
and
mov
mov
adc
lahf
cmps
loope
stos
movs
mov
sbb
cmps
dec
inc
lods
data16
dec
sbb
mov
iret
and
sbb
pusha
call
in
movs
loop
xlat
pusha
add
adc
or
sbb
pop
jmp
xchg
push
dec
push
sub
adc
mov
nop
fs
push
inc
jne
add
inc
inc
mov
cmp
xor
mov
pop
mov
or
xchg
xlat
repz
ss
inc
out
mov
add
add
add
or
call
fadd
fld
xor
push
mov
inc
mov
aam
inc
push
or
and
pop
adc
add
inc
cmp
inc
sub
adc
push
jb
inc
jb
dec
sbb
fcom
out
dec
sbb
dec
pop
adc
jno
ins
dec
dec
pop
or
sbb
ja
and
inc
pop
popa
std
ror
mov
mov
ja
in
fwait
cmp
sub
push
dec
push
push
or
inc
enter
push
ins
ja
ins
and
cld
or
mov
ficom
push
lahf
lds
gs
outs
fs
popa
jo
fdiv
jmp
movs
loope
push
pop
mov
dec
adc
push
push
add
nop
or
dec
lahf
pop
push
push
mov
dec
fmul
out
mov
push
rcl
repnz
push
add
inc
mov
and
inc
add
cmp
cmp
inc
adc
scas
lds
inc
dec
fiadd
push
jbe
sub
sub
inc
imul
inc
call
test
xchg
shl
inc
adc
push
pop
inc
jno
or
mov
sbb
outs
pop
pop
out
sub
inc
mov
push
inc
cmp
mov
mov
jl
push
xchg
push
mov
enter
jno
inc
inc
sbb
sbb
inc
mov
inc
xor
pop
and
xor
dec
popa
outs
popa
test
mov
pop
not
pop
sbb
js
jecxz
push
mov
popa
xor
jno
pop
mov
sbb
push
add
adc
imul
xor
jnp
outs
sub
push
dec
pop
pop
push
data16
inc
enter
push
movs
and
in
jp
and
mov
mov
addr16
add
push
lock
push
dec
std
ins
inc
sti
xor
outs
push
jb
cs
xor
dec
bound
ds
ins
adc
lahf
dec
fsubr
aaa
lahf
lahf
lds
dec
adc
mov
pop
sbb
adc
jge
and
xlat
and
or
mov
fld
ss
push
das
push
aaa
and
inc
loopne
cmp
or
adc
and
dec
jno
out
mov
xlat
ret
push
xlat
and
dec
xor
push
inc
(bad)
or
pop
loope
dec
add
push
xor
adc
popa
push
rcr
dec
iret
dec
sub
push
mov
mov
push
test
dec
out
cld
push
nop
adc
pop
daa
in
xor
jl
or
daa
and
sub
daa
pusha
push
lds
cmp
jmp
adc
push
pushf
pop
stos
cmp
pop
pop
cmp
mov
cmp
rol
neg
push
fdiv
push
xor
pop
inc
out
neg
aaa
pop
push
jo
push
outs
push
mov
mov
sub
jle
fadd
je
and
push
inc
or
std
pop
sbb
pop
mov
push
(bad)
mov
popa
xor
or
mov
mov
lods
xor
xchg
add
sbb
add
push
push
ins
xor
cmp
test
ss
xlat
dec
push
cmp
push
mov
das
mov
xlat
test
nop
add
movs
jg
cmp
and
mov
pop
xlat
icebp
push
xlat
sub
mov
xchg
push
test
cmp
inc
test
setbe
pusha
ins
sub
inc
loope
pop
sbb
rol
sti
or
popw
das
mov
add
scas
cmp
push
fsub
push
and
cmp
mov
call
and
mov
sbb
and
jno
out
pop
ficom
push
push
and
dec
adc
aaa
inc
jl
pop
inc
(bad)
fadd
fild
inc
cmp
inc
jno
and
cmp
or
test
pop
push
sub
pop
fsubr
mov
push
call
cld
push
inc
loope
jl
sbb
sub
inc
clc
daa
fadd
and
sbb
push
xor
pop
daa
push
push
push
leave
mov
jno
loopne
xor
pop
cwde
fdivr
push
test
test
lahf
jg
sbb
bound
adc
pop
lock
inc
xlat
mov
xchg
aaa
add
stc
lock
and
in
aaa
pop
cmps
jmp
mov
push
cmp
sbb
mov
lea
push
lahf
push
cmc
or
xchg
mov
cs
inc
add
push
pop
push
add
cdq
popf
sbb
(bad)
lahf
out
sbb
lahf
mov
xor
push
push
out
jns
ins
cmp
push
ins
loope
sbb
jge
jo
push
test
push
jnp
jns
inc
pop
fs
mov
push
lock
test
push
ds
pop
out
fs
mov
mov
sbb
sub
stos
jo
pop
test
adc
adc
(bad)
ins
imul
push
popa
outs
je
push
ret
xlat
loope
ja
mov
clc
js
push
or
or
mov
movups
sub
loopne
push
sbb
push
movs
movd
ins
stos
push
adc
sbb
pushw
xchg
or
xor
push
dec
ins
jne
fild
test
ins
adc
ror
push
movs
mov
pop
inc
jle
mov
das
scas
push
dec
jb
popa
jecxz
push
cmp
xchg
fild
push
inc
jns
push
push
push
push
outs
push
cmp
cli
out
rcpps
pop
jns
mov
inc
ins
outs
cli
mov
add
cwde
xor
push
clc
add
adc
or
inc
js
fnstsw
pop
shr
push
push
adc
or
mov
clc
mov
push
dec
sub
nop
sahf
shl
hlt
imul
sbb
shl
or
shr
hlt
or
dec
scas
mov
push
call
ins
sub
loopne
out
pop
imul
fs
push
push
xor
arpl
mov
push
inc
jne
xchg
(bad)
add
div
repz
sbb
popa
jae
ins
fidiv
ins
cmp
and
pop
cmp
mov
jo
cmp
dec
jbe
mov
mov
data16
retf
mov
rcr
add
das
lock
ins
(bad)
out
cmp
mov
push
xor
add
loop
fadd
or
push
inc
add
or
int3
aad
in
fs
shl
pop
fstp
dec
jne
or
jae
arpl
movs
push
mov
or
rcr
jae
leave
xor
pop
or
(bad)
loopne
add
imul
inc
jne
mov
or
loopne
pop
sar
(bad)
(bad)
scas
jmp
aam
xor
push
sahf
fwait
enter
push
aaa
inc
add
ds
mov
leave
jb
mov
push
push
push
gs
adc
xchg
imul
clc
in
push
and
arpl
ret
push
mov
js
inc
inc
es
and
mov
jge
cdq
pop
popf
jbe
and
ja
mov
hlt
inc
and
inc
jno
jmp
stos
jne
ins
inc
push
add
push
repnz
fild
mov
in
or
sbb
push
cwde
cmp
jne
jae
sub
dec
push
pop
sub
dec
pop
mov
je
sub
xor
jae
ins
aas
in
aas
pop
push
add
mov
cwde
jle
push
xor
rol
popa
sahf
ror
ins
pop
inc
pop
loope
aad
ins
xor
fs
add
inc
je
ins
or
mov
push
fidiv
push
or
call
adc
adc
popa
or
xchg
push
mov
push
jge
mov
fsubr
adc
ins
je
inc
mov
jb
xor
push
scas
repnz
scas
inc
int3
je
nop
fxch
into
loop
(bad)
scas
push
jbe
das
xchg
xchg
fld
or
nop
jp
or
sbb
add
fcmovb
(bad)
sub
mov
es
add
add
sar
add
and
cmp
call
lods
enter
sub
xor
sub
call
ror
inc
fs
fucomip
dec
daa
jecxz
call
sbb
add
cmp
xor
outs
outs
or
pop
jg
js
xor
aaa
cmp
push
adc
aaa
or
and
imul
jnp
cmp
dec
clc
add
cli
subps
inc
pop
add
dec
data16
pop
add
pusha
dec
retf
or
retf
and
loopne
and
sub
xchg
shl
xchg
xor
addr16
pop
xor
pusha
out
xor
imul
mov
push
imul
and
add
sbb
test
inc
sub
cmps
add
adc
sbb
dec
js
and
add
and
cmp
in
adc
bound
sub
pushf
adc
push
aas
lds
push
and
adc
cmps
add
ret
fisttp
add
pop
shr
(bad)
fwait
jmp
pop
add
or
or
out
push
(bad)
aaa
cmp
jnp
loop
jnp
or
or
sub
mov
and
(bad)
lock
outs
dec
sub
clc
jecxz
pop
push
gs
dec
jbe
jb
ret
xchg
mov
cmp
nop
ret
mov
xchg
popf
sub
sahf
mov
or
xchg
or
sbb
aas
pop
iret
mov
neg
cmp
cmp
aas
aas
dec
jo
outs
lahf
add
icebp
adc
xchg
test
cdq
loopne
pusha
cwde
xor
jb
push
adc
push
sahf
ror
pop
xchg
xchg
add
loope
xor
mov
outs
push
jne
or
dec
xor
xchg
sub
shr
push
mov
push
jb
je
cmp
add
loopne
xchg
clc
mov
pop
jb
jns
loope
mov
aas
dec
pop
retf
hlt
cwde
scas
and
sbb
cmps
call
xchg
jbe
mul
test
shr
(bad)
iret
mov
xor
pusha
xor
mov
sbb
add
fimul
pop
cmp
push
nop
cmp
in
dec
push
pop
inc
jae
adc
addr16
stos
adc
jo
mov
cwde
fidivr
jno
add
imul
xchg
call
dec
adc
nop
ins
gs
mov
mov
mov
fmul
scas
int
xor
or
rcl
aaa
push
sahf
xlat
cmc
dec
push
pop
dec
cmp
jo
mov
cmp
out
prefetch
mov
sbb
sub
clc
add
mov
loope
smsw
loopne
inc
es
push
jne
cmp
jo
(bad)
or
popf
and
jp
adc
mov
repnz
push
popa
mov
and
or
jne
ja
or
add
fwait
cmp
mov
arpl
pushf
inc
cmp
sub
aaa
mov
fsubr
pop
push
add
aaa
add
sbb
test
add
cwde
push
lods
or
pusha
dec
or
arpl
push
scas
fidivr
and
and
comiss
in
ins
mov
inc
or
xchg
dec
mov
and
push
cmp
popa
js
or
nop
stos
xor
aaa
scas
xchg
mov
pop
in
mov
jo
mov
(bad)
mov
inc
sub
adc
sub
das
out
loope
push
movs
fnstenv
cmp
inc
ret
sub
fmul
and
ret
fild
cli
push
outs
imul
cmps
or
std
test
dec
pop
lods
es
add
in
in
xor
shl
and
cmps
popa
stc
or
sub
inc
mov
fucomi
add
xchg
xchg
aam
sub
adc
sub
adc
daa
or
icebp
sub
xor
xor
xor
xor
adc
shl
xchg
inc
xchg
sbb
jb
dec
xor
xchg
xchg
dec
xor
shl
jns
int
pop
push
bound
cs
dec
cvtdq2ps
jl
xor
pop
pop
or
sbb
mov
cmp
mov
not
inc
sar
call
sub
push
aam
(bad)
or
cmp
pop
out
in
xor
add
ret
jae
push
sub
sbb
or
cmp
or
or
push
xchg
xor
pop
fwait
cmp
outs
and
xor
call
push
in
shl
add
push
or
push
(bad)
fld
cmp
inc
dec
xchg
inc
pop
mov
xlat
aaa
mov
xchg
ins
pop
es
dec
add
sub
mov
hlt
or
clc
(bad)
das
sbb
aaa
or
xlat
jp
inc
fdivr
mov
arpl
xor
mov
mov
xor
xchg
inc
mov
or
jmp
adc
jmp
inc
into
scas
cmp
sbb
pop
mov
rcl
sub
add
adc
mov
fdivr
push
add
neg
mov
pop
(bad)
mov
push
cmps
das
mul
add
add
inc
hlt
out
cmps
mov
ins
pop
add
pop
test
scas
sbb
mov
inc
xchg
fsubr
and
and
add
mov
shl
jno
inc
les
out
or
es
pop
sub
pop
lock
into
jne
ror
cmps
sub
mov
divps
pop
aaa
aam
xor
push
aas
add
sub
inc
mov
or
add
inc
add
dec
movs
xor
xlat
mov
dec
push
add
jne
das
(bad)
call
mov
push
mov
ret
nop
push
push
push
add
mov
mov
mov
(bad)
(bad)
cmp
movzx
mov
push
jne
adc
mov
mov
call
test
jne
fcomi
inc
shr
mov
pop
pop
pop
pop
pop
outs
mov
cmp
ret
mov
jle
xor
cli
mov
mov
sub
test
je
or
push
mov
je
add
pop
out
neg
mov
mov
dec
mov
mov
pop
adc
call
lea
mov
mov
mov
mov
ins
in
fidivr
xchg
aam
(bad)
mov
push
clc
sahf
fisub
adc
fdiv
sub
or
pop
inc
inc
mov
and
nop
cdq
shr
mov
add
ins
mov
mov
mov
mov
fild
retf
data16
or
mov
or
adc
rol
ret
sahf
jle
lea
adc
jl
jg
cmp
add
cmp
dec
out
and
adc
pop
or
or
add
outs
add
setnp
add
(bad)
push
dec
mov
pop
fisttp
popa
adc
add
movs
ja
cmp
adc
cmp
adc
xor
push
push
add
dec
clc
or
mov
mov
dec
imul
cdq
js
test
cmps
jmp
xchg
dec
sbb
xor
test
inc
aaa
mov
scas
call
xchg
lods
clc
adc
jb
mov
ret
(bad)
iret
ficom
mov
jmp
xchg
inc
outs
xor
sbb
mov
mov
mov
push
pop
int
not
add
push
push
mov
jne
push
xchg
pop
add
push
fidivr
or
loopne
mov
test
and
add
scas
inc
mov
clc
adc
xchg
aam
and
sbb
ja
fadd
es
push
push
into
jmp
fucomi
daa
cmp
daa
jno
movs
pushf
out
out
pop
mov
mov
push
mov
(bad)
mov
in
cmps
fsubr
jge
clc
mov
inc
je
lea
inc
mov
lahf
sar
jmp
jnp
add
ret
inc
or
cmp
rcl
jmp
rdmsr
es
lea
push
xor
rol
rcl
movs
hlt
add
pop
ret
ja
repnz
aam
lea
dec
adc
xchg
mov
xor
xchg
push
push
xor
in
xchg
nop
push
push
mov
addr16
imul
jmp
mov
paddsb
outs
sub
adc
out
add
mov
jmp
daa
rcl
mov
cmp
movs
mov
inc
cwde
inc
fadd
inc
cmp
adc
push
popf
adc
addr16
out
mov
pop
pop
pop
adc
movs
sbb
pop
push
in
(bad)
dec
in
nop
in
mov
or
(bad)
jmp
jmp
add
mov
ja
movs
push
ret
cli
lea
loope
push
iret
adc
(bad)
rcl
test
movzx
sub
jae
mov
cmp
arpl
cmp
jmp
das
push
and
outs
mov
sahf
cmp
jb
add
ss
outs
daa
or
jbe
jle
inc
clc
dec
and
lock
jbe
es
cld
xchg
and
cld
and
sbb
je
clc
xor
push
add
ror
call
sbb
test
je
jp
fcmovnu
or
sbb
add
xor
mov
pop
push
hlt
jmp
adc
lods
fadd
test
fiadd
sub
inc
push
xchg
xchg
jmp
(bad)
jmp
xchg
xchg
clc
popa
mov
or
push
jmp
sub
rol
daa
lds
imul
repz
or
jne
fcom
add
dec
mov
or
add
jg
daa
add
push
fistp
ror
sbb
mov
test
jbe
jnp
jae
aaa
pop
aaa
daa
xchg
push
retf
xor
pop
pop
ss
imul
xor
cdq
mov
jne
pop
mov
push
scas
enter
pop
jmp
cmp
movs
inc
call
dec
(bad)
mov
mov
cmp
and
pop
add
rcl
clc
not
cmp
xor
mov
(bad)
jo
sub
sar
pop
fadd
pusha
shl
jmp
add
cmps
pop
loopne
xor
jo
cdq
lea
adc
pop
repz
in
dec
dec
pavgb
cmp
fwait
cmp
(bad)
or
out
es
cmp
jle
add
mov
inc
cmps
popa
push
clc
pop
sub
jnp
xor
and
scas
mov
mov
cwde
mov
je
push
push
or
or
sbb
(bad)
cmp
stc
inc
cs
ins
cwde
mov
add
sti
mov
movs
inc
jns
loopne
push
xchg
cmp
pusha
or
das
and
sbb
mov
lock
xlat
mov
jbe
push
push
mov
add
sbb
cmp
loopne
push
push
mov
lock
dec
sti
sub
sub
cmp
ret
push
inc
xor
shl
adc
xlat
imul
fdivr
inc
cs
xchg
std
jg
or
xor
mov
lea
ret
(bad)
fwait
test
xchg
inc
sub
add
push
mov
or
pop
nop
shl
mov
add
xlat
or
sbb
inc
inc
push
(bad)
and
sbb
popa
push
and
sbb
xchg
mov
adc
pop
cld
cmp
sbb
ror
add
mov
adc
clc
mov
or
ficomp
or
or
aas
add
jg
stos
pop
sub
fadd
xor
sub
inc
cld
adc
sbb
js
jge
loop
jmp
mov
and
mov
xchg
sub
jae
pop
cmp
jmp
xchg
mov
outs
or
xchg
fsubr
push
push
mov
mov
rol
and
mov
or
pop
lods
jmp
lea
fidiv
sbb
pop
call
mov
ins
cmp
ret
loope
push
retf
add
push
imul
add
xchg
xor
outs
add
scas
inc
ins
mov
ins
imul
push
and
int3
dec
dec
sbb
add
leave
add
test
test
cdq
jae
test
mov
push
adc
pusha
xor
add
inc
add
jns
cmp
mov
xor
and
cmp
or
out
push
jnp
fldcw
jmp
scas
xor
clts
pop
adc
xchg
and
mov
imul
in
xchg
or
adc
iret
pushf
mov
xchg
aaa
(bad)
push
mov
shr
mov
and
xor
inc
cmp
jne
mov
push
fwait
shl
call
loop
mov
push
jle
pusha
imul
inc
hlt
mov
cld
cmp
sub
je
cmp
xor
cmp
mov
lock
lea
test
and
aas
adc
jg
loopne
fdivr
lock
xchg
gs
jne
cmp
mov
leave
and
xchg
adc
inc
push
lea
repz
movs
test
sub
addr16
pusha
aam
add
retf
lahf
sbb
mov
jmp
movs
(bad)
mov
push
dec
sbb
push
xlat
mov
adc
mov
mov
in
shl
xchg
adc
cli
hlt
int
loopne
dec
cmp
sbb
cmp
pop
and
lock
or
sbb
cmp
inc
mov
or
or
jne
or
add
sub
or
xor
inc
test
push
dec
jl
psubq
push
lea
data16
mov
or
push
jae
add
cmp
icebp
lods
adc
in
out
mov
je
xor
mov
idiv
add
adc
jl
pop
xor
push
cmp
jne
idiv
call
and
ret
xor
sbb
jno
or
jne
dec
jne
jmp
mov
pop
pop
pushf
or
mov
add
add
clc
jle
mov
sysret
mov
pop
loope
sub
and
pop
rol
jbe
lahf
mov
inc
cmp
fwait
mov
ins
std
add
jp
jge
lahf
push
pop
or
jmp
sar
add
mov
xor
jmp
cmp
jnp
cmc
jne
sbb
fbld
or
iret
cmp
ins
adc
repz
xor
cmp
cmp
addr16
adc
push
clc
pushf
or
in
clc
inc
add
xlat
lods
clc
pusha
pop
push
push
test
and
aaa
in
mov
xor
mov
sbb
mov
movzx
(bad)
mov
stos
push
or
pop
sbb
(bad)
scas
stos
mov
push
push
test
dec
sbb
test
(bad)
cmp
je
mov
dec
push
sbb
jne
inc
push
dec
vpcmpeqd
jmp
movs
and
cmps
sbb
loop
mov
fwait
mov
ins
sbb
dec
xor
ins
bnd
jmp
dec
call
popf
pop
and
ja
ret
xchg
fst
add
xchg
test
test
and
push
mov
gs
hlt
lods
out
cmps
push
adc
pop
cmp
mov
push
or
stos
mov
push
in
or
cmps
dec
inc
push
movs
sbb
pop
aaa
fcmovnbe
cmc
sbb
sbb
mov
bndstx
jp
mov
jbe
test
cmp
(bad)
rcr
dec
or
shl
pop
cmp
mov
jb
or
or
mov
adc
call
ret
js
sub
ins
xchg
jecxz
mov
ja
mov
xchg
add
pop
pop
cmp
jnp
xchg
xchg
and
push
adc
jns
sti
jmp
loop
out
inc
cmp
mov
loopne
jmp
pop
and
sbb
pop
lock
jle
add
push
jbe
lea
mov
mov
and
dec
xor
int
call
test
inc
cs
sub
mov
das
xor
push
sub
out
adc
sbb
xor
cmp
jnp
mov
push
push
push
push
inc
cs
out
test
int3
pop
mov
cmp
jne
jmp
add
mov
xor
je
jmp
push
sub
std
add
or
jp
cli
sub
sbb
pop
cwde
call
and
hlt
addr16
mov
mov
pop
or
jmp
out
test
cli
xor
dec
cld
enter
addr16
xchg
shr
daa
or
cmp
rcl
and
inc
jl
xor
jmp
or
mov
push
inc
jl
add
sbb
inc
push
in
bound
push
add
fsub
int
es
aam
or
and
pushf
rol
popw
push
adc
adc
add
iret
cmp
add
aas
inc
mov
test
pop
add
jmp
out
sbb
lods
jecxz
es
clc
mov
(bad)
adc
clc
cmp
mov
cld
das
add
loope
cmp
inc
and
xor
mov
loopne
xor
(bad)
movs
mov
jbe
or
inc
ror
scas
cmp
jae
mov
inc
dec
cmp
lea
push
cmp
xor
in
jmp
add
dec
push
add
xchg
jl
pushf
lods
jne
hlt
jmp
jl
dec
aaa
add
test
mov
jb
or
and
outs
shl
cld
(bad)
(bad)
mov
subps
lods
movs
xchg
mov
nop
inc
add
xchg
and
xchg
jo
pop
bound
imul
int
pop
pushf
outs
add
scas
(bad)
mov
cmp
shr
adc
retf
xchg
inc
xchg
loopne
and
cmp
fidiv
mov
call
pushf
mov
adc
xchg
jno
test
cmp
or
ds
inc
mov
mov
xchg
xchg
scas
in
mov
push
pushf
cdq
jnp
add
xchg
cdq
pusha
mov
cld
or
lods
adc
jmp
in
movs
movs
out
retf
pop
pop
cmp
movs
fwait
neg
jmp
lahf
push
test
adc
pop
xor
pop
mov
and
or
call
pop
push
sbb
xchg
pop
ret
cwde
mov
push
cs
fisttp
xor
push
sbb
add
enter
dec
mov
call
xor
push
sahf
inc
mov
cwde
lods
cmp
shl
inc
or
cmp
mov
sbb
jmp
dec
push
xor
nop
enter
je
dec
mov
inc
test
push
sbb
movs
test
push
push
xchg
xor
popa
test
(bad)
sub
mov
js
sbb
jno
fs
int
into
xchg
add
dec
and
or
inc
fcom
ror
add
sbb
je
xchg
sbb
es
ret
push
cmp
aas
pop
push
sub
add
and
and
jp
and
ja
jmp
call
jmp
mov
dec
add
mov
cmp
jb
mov
add
bound
jae
es
or
adc
imul
(bad)
jle
sbb
push
ficomp
xlat
mov
mov
in
fisttp
cmp
cmp
mov
mov
cmp
ja
xchg
out
(bad)
xor
xor
push
add
out
mov
cmp
mov
add
les
outs
fbstp
test
pop
add
enter
adc
or
or
lock
jge
es
mov
je
mov
iret
daa
jl
lods
popf
lds
xchg
mul
(bad)
mov
pop
and
mov
and
pushf
pop
iret
adc
dec
add
(bad)
std
add
(bad)
xor
bound
fsubrp
loopne
pop
push
fbstp
jmp
or
push
das
pushf
mov
push
sub
cmp
pop
call
xor
idiv
mov
add
adc
xchg
call
jmp
mov
test
jge
mov
loope
ss
mov
or
popa
loopne
jecxz
ds
cmc
in
add
dec
aas
mov
push
aas
or
nop
push
xchg
pop
(bad)
jne
in
out
lea
mov
sub
das
ror
hlt
mov
push
pop
xor
popf
loope
push
mov
mov
addr16
outs
xor
mov
push
cmp
ja
ins
push
inc
bt
jae
cmp
or
mov
push
sub
add
sahf
add
cmp
jne
outs
xchg
call
into
push
push
xor
jo
pop
fwait
mov
push
fst
retf
ds
or
imul
cmc
lods
addr16
xchg
pop
rol
xor
jg
jle
outs
data16
add
pop
pushw
cld
add
inc
adc
and
dec
ret
jne
mov
mov
in
retf
push
cmps
push
dec
repz
popa
mov
ret
je
or
rol
inc
dec
inc
je
repnz
lock
jnp
jb
pop
xchg
dec
test
and
adc
or
add
cmps
sbb
je
hlt
adc
(bad)
leave
or
pop
jp
push
popa
xchg
xchg
(bad)
pop
enter
pusha
call
dec
outs
sbb
sbb
lock
lock
push
stos
ficom
mov
(bad)
fnstsw
dec
out
repz
je
loope
loope
out
enter
mov
dec
pop
mov
inc
call
mov
mov
data16
sub
in
adc
repnz
in
aam
jne
xchg
xchg
js
add
pop
jle
adc
(bad)
cmp
cmp
pop
push
ret
call
or
dec
push
xor
into
dec
cmp
sbb
mov
stos
mov
rep
dec
jle
shl
push
and
lea
cmovl
push
fs
js
push
imul
jl
mov
fbld
les
loopne
adc
xchg
adc
add
mov
gs
icebp
sub
outs
(bad)
lock
sbb
mov
repz
les
inc
cwde
pop
inc
out
clc
inc
jge
loope
push
and
adc
push
sbb
mov
xor
jmp
ss
fcom
nop
div
sub
dec
mov
lock
jb
push
jo
xchg
pop
push
retf
lods
pop
rcl
pop
leave
in
addr16
pop
xchg
pushf
mov
mov
cdq
loopne
out
fmul
cwde
lods
inc
push
lods
or
movs
addr16
adc
inc
cmp
int
out
add
push
xor
inc
popf
or
lds
jmp
and
and
inc
retf
shl
shr
pop
(bad)
jb
sub
dec
lock
adc
adc
pop
js
imul
push
mov
adc
in
add
cmp
xor
mov
mov
cmp
fadd
xchg
cld
cmp
test
mov
inc
data16
inc
add
aas
mov
jno
add
add
cmp
stos
add
push
lock
aas
shl
push
xor
or
jmp
jg
lock
jns
adc
mov
cmp
xchg
adc
sbb
cmps
inc
cmc
loopne
rcr
pushf
push
ret
fst
xor
mov
cld
and
fwait
inc
or
popf
adc
cmp
mov
jle
pop
call
pop
lea
lea
and
sbb
cmp
call
push
pop
lds
jnp
call
jmp
pusha
sub
push
mov
sub
adc
shl
xchg
fs
out
mov
jo
push
xor
lods
or
jmp
adc
adc
leave
je
adc
jmp
push
and
and
dec
push
fst
nop
pusha
loopne
xchg
mov
jecxz
fiadd
mov
mov
xchg
sbb
sub
adc
retf
je
adc
cmp
nop
sub
or
ret
mov
out
movs
mov
cmps
add
mov
unpcklps
add
fcomp
sbb
stos
dec
stos
add
nop
xchg
jo
arpl
out
adc
in
fs
dec
inc
add
cmps
dec
aas
fild
in
lea
daa
stos
das
sub
arpl
je
mov
or
pop
xchg
imul
loopne
cmp
or
scas
daa
push
popa
add
test
jno
add
add
leave
xchg
fld
icebp
add
fistp
sub
adc
jmp
daa
xor
lods
jb
stc
int3
push
mov
in
repnz
mov
dec
(bad)
scas
push
xor
movs
adc
mov
aaa
add
add
sub
int3
clc
cli
inc
add
cmp
sbb
xlat
addr16
loop
iret
jnp
test
bnd
(bad)
hlt
(bad)
fld
fnstcw
fwait
push
out
add
jae
fstp
clc
jmp
shl
stos
pushf
jmp
and
mov
cs
sahf
mov
mov
jge
inc
xor
push
cmp
or
lahf
sbb
inc
ins
jecxz
shr
add
push
ror
jp
jl
mov
cwde
cmp
data16
dec
add
add
push
pop
sub
dec
push
sahf
cmps
stc
mov
push
pop
movs
sbb
les
mov
dec
push
jbe
add
sbb
outs
(bad)
lods
(bad)
pop
push
push
jb
jo
gs
mov
mov
or
outs
addr16
add
mov
arpl
sbb
mov
xchg
add
ins
pushfw
or
dec
add
mov
push
outs
arpl
add
jp
imul
push
or
pop
add
pop
add
mov
sbb
stos
fsubr
sub
and
add
jns
add
xchg
mov
mov
add
add
fdiv
das
mov
out
shl
jmp
jbe
sub
clc
mov
gs
test
or
jae
mov
ror
imul
not
movs
das
sbb
mov
and
pop
das
ss
jne
and
dec
out
cdq
inc
push
mov
out
push
dec
ins
gs
add
sbb
or
mov
xlat
pop
mov
loopne
xchg
or
or
add
xlat
test
xlat
mov
or
into
add
das
aaa
inc
ret
or
jbe
pusha
mov
xlat
inc
outs
jne
push
xor
and
mov
sbb
or
xlat
aaa
push
or
xlat
test
or
mov
xor
mov
aam
pop
das
push
push
xlat
ins
jmp
inc
sub
jae
sbb
push
add
outs
push
adc
xor
xchg
xchg
pusha
or
rol
ins
jecxz
int3
test
ret
or
das
jle
fbstp
jbe
fisttp
jl
push
shl
adc
jo
pop
mov
shl
xchg
mov
cmp
pop
test
sbb
cmp
shr
add
lods
ret
or
mov
scas
mov
jb
arpl
and
mov
push
xchg
xlat
or
sbb
aas
scas
shl
xor
pop
pushf
js
push
scas
pop
add
jle
sub
add
call
jle
ror
and
scas
fdiv
pop
add
adc
and
cmp
nop
push
fcomp
add
xor
ins
imul
cmp
mov
pusha
mov
mov
add
ss
dec
add
ja
jb
sti
or
add
pusha
rcr
enter
jae
adc
mov
ret
pop
add
jne
pop
pop
loope
(bad)
xor
mov
(bad)
dec
add
ret
in
dec
call
into
mov
mov
cmp
pop
mov
mov
push
mov
mov
xchg
add
push
xor
push
push
xor
mov
lock
add
hlt
mov
xchg
dec
mov
mov
cmp
in
mov
push
dec
mov
fimul
sub
push
out
or
mov
rol
sub
jle
inc
rol
ja
sti
lods
add
(bad)
mov
add
js
pop
jl
cmps
inc
jmp
push
out
dec
(bad)
call
mov
lahf
adc
repz
mov
test
cmp
(bad)
and
push
push
adc
lods
xor
sbb
rcr
xchg
pop
pushf
xor
addr16
(bad)
popf
inc
jne
mov
sti
rcr
mov
mov
jge
push
dec
mov
cmp
mov
pusha
pop
loope
pop
cmp
(bad)
clc
repnz
sbb
jl
add
stos
push
aaa
inc
aad
xchg
jbe
xchg
mov
dec
mov
mov
mov
add
xor
push
mov
and
stos
inc
or
dec
jae
or
mov
stos
or
xchg
push
out
in
and
ins
add
xchg
or
popa
ins
imul
scas
sbb
movs
add
push
mov
jp
adc
out
and
mov
xchg
sub
pop
das
bound
outs
jno
outs
mov
jbe
sbb
outs
pop
leave
pop
cs
pusha
mov
je
inc
sub
dec
bound
arpl
push
popf
sub
pop
add
dec
mov
dec
dec
inc
dec
test
inc
jae
sbb
adc
mov
add
call
jb
push
sbb
mov
push
add
add
ret
inc
pop
test
les
bound
lock
pop
mov
fimul
inc
push
sub
cli
loopne
rol
jl
add
and
add
aad
mov
adc
pop
or
cld
call
add
lods
mov
retf
xchg
mov
push
fcomp
pop
push
push
fld
sti
neg
sbb
xor
or
xor
or
or
sub
and
add
add
popa
xor
or
loopne
pop
mov
adc
into
pop
iret
cmps
bound
add
pushf
push
inc
add
pop
or
jno
(bad)
push
lock
push
jmp
jmp
push
add
lods
inc
xor
and
push
mov
stc
push
push
fstp
lea
outs
outs
jae
fldenv
aaa
jno
sub
mov
jmp
or
add
xor
nop
push
add
push
push
test
push
pop
icebp
adc
pusha
push
push
lock
pusha
xor
or
test
(bad)
ror
adc
es
add
pusha
invd
or
and
sbb
push
test
add
sbb
xor
jle
in
fild
jb
and
or
add
repz
add
sbb
push
or
pop
dec
jne
add
sub
xor
sub
xor
sub
pop
pop
xor
mov
fisub
push
pop
or
adc
mov
xchg
rol
dec
add
mov
retf
add
or
xor
sbb
push
call
pop
and
lods
pusha
adc
daa
add
sbb
jecxz
xor
nop
test
add
push
xchg
mov
call
imul
imul
mov
outs
inc
sub
or
sub
dec
and
outs
fs
outs
jnp
inc
popa
jae
gs
hlt
xchg
or
mov
dec
jnp
jg
xchg
lock
data16
jne
imul
ret
pop
push
dec
push
gs
neg
cmps
jne
cmps
or
pop
(bad)
pop
or
inc
imul
ret
or
div
push
outs
xchg
sbb
sbb
adc
mul
rcr
outs
mov
sub
sbb
fs
dec
outs
ins
jl
lock
adc
out
adc
sahf
arpl
pop
mov
inc
or
xor
fistp
outs
ins
adc
jae
jnp
out
add
cmp
lahf
or
dec
and
cs
pop
ss
push
je
or
je
ins
or
ss
fadd
jo
push
dec
imul
pusha
or
add
push
push
arpl
mov
push
jp
test
add
in
call
inc
cmp
or
sar
xor
or
or
dec
gs
jo
jp
je
ja
cmp
dec
cmp
or
daa
aas
pop
xchg
ret
daa
or
or
dec
gs
out
adc
fcmove
in
or
not
jne
in
jne
push
imul
(bad)
fimul
jnp
push
push
or
adc
and
imul
fwait
add
sbb
sub
outs
and
iret
jae
pop
or
adc
enter
in
outs
fsubr
or
test
inc
jmp
inc
mov
mov
push
or
into
ret
pop
mov
pop
jge
lods
dec
pop
jo
mov
das
ret
push
and
sbb
dec
xor
loopne
xor
xchg
adc
imul
dec
add
dec
push
and
and
mov
and
jae
cli
push
push
jb
adc
and
adc
sub
or
xor
int
and
and
(bad)
out
pushf
fld
add
pop
mov
loope
andps
add
xor
sub
pop
and
stc
fild
push
pop
enter
cmps
sub
mov
punpckhdq
jge
call
mov
and
or
jbe
dec
and
or
add
scas
dec
push
outs
rol
jb
(bad)
dec
adc
in
outs
mov
sar
int3
pop
mov
mov
dec
in
sti
push
sub
or
dec
mov
pop
pop
and
dec
jbe
or
test
je
pop
jbe
dec
js
mov
cmps
push
rcl
movs
and
ss
dec
and
pop
add
or
out
push
add
pusha
mov
mov
outs
fs
pop
sub
pop
pop
push
das
sbb
fadd
int3
pop
mov
mov
add
dec
outs
jbe
ins
imul
or
out
and
sub
int3
dec
je
pop
or
in
pop
punpckldq
arpl
pusha
push
enter
sbb
(bad)
sahf
and
pop
lahf
cld
dec
sbb
jo
mov
pop
add
or
sub
js
es
pusha
xor
(bad)
sahf
and
push
dec
cmps
pop
and
pop
lods
lss
popa
test
adc
bound
loopne
or
iret
adc
arpl
es
js
pop
punpckldq
xor
rcr
(bad)
les
and
in
iret
sub
or
fild
fmulp
pop
sub
and
cmp
or
adc
inc
fstp
imul
scas
ss
cmp
pop
outs
shr
pop
dec
jne
dec
inc
cmp
call
and
jo
pop
sub
mov
rcr
fcom
mov
ret
adc
adc
xchg
jb
je
pusha
nop
pop
movs
iret
pop
sub
rol
adc
sahf
or
push
outs
add
jo
mov
lods
fisttp
std
fiadd
jo
outs
adc
mov
popa
push
hlt
scas
popa
jb
pusha
sub
pushf
out
add
(bad)
popa
cwde
sbb
push
mov
adc
rcl
sbb
arpl
add
test
or
fs
scas
or
add
adc
push
enter
in
ss
pop
scas
jo
add
or
adc
pop
fimul
or
push
outs
imul
lods
push
inc
sahf
je
retf
push
lods
mov
lds
daa
scas
das
adc
jo
int
adc
loopne
outs
add
push
in
inc
jl
jl
jbe
gs
rcr
adc
sbb
mov
add
(bad)
hlt
adc
es
cld
or
cmp
psllw
outs
jne
in
xor
add
ss
adc
mov
jae
xchg
or
inc
rol
xchg
xchg
rcl
push
mov
cs
add
std
daa
push
or
jbe
dec
and
pop
ins
jo
jle
dec
add
jno
inc
xor
aas
sbb
mov
fs
mul
add
push
call
add
sub
rcr
faddp
aam
ds
jle
dec
aam
adc
fbld
mov
in
test
fcmovbe
loopne
pusha
test
fwait
or
xchg
ret
aaa
ja
mov
sbb
xchg
jno
cwde
enter
nop
and
ror
imul
mov
cmp
dec
xchg
lea
call
push
dec
mov
out
sbb
pslld
cmp
jns
(bad)
jae
lds
xlat
mov
cmc
sub
je
rcr
mov
es
and
ret
emms
pop
xchg
jb
jns
lds
cmp
iret
sub
cli
adc
aas
dec
add
fs
pop
xor
sbb
push
repz
sub
call
dec
cwde
jb
cdq
mov
dec
push
clc
dec
cwde
dec
sub
jecxz
fnsave
add
add
mov
add
sar
xor
dec
jae
adc
ds
add
mov
cwde
inc
mov
fistp
cld
aas
adc
ror
inc
js
push
pop
sub
enter
int
in
add
retf
int3
popa
fiadd
mov
mov
aad
ja
adc
and
inc
cmp
lds
stc
dec
xchg
push
fwait
sub
jne
mov
jno
test
adc
push
xchg
nop
jl
sbb
sbb
inc
mov
sub
or
mov
gs
mov
jo
lock
data16
pusha
cmp
push
movs
adc
imul
jno
test
inc
xchg
adc
jb
jno
jbe
(bad)
in
stos
adc
push
or
ins
(bad)
dec
popa
sub
loopne
sbb
ror
loopne
or
call
or
ja
xor
iret
push
mov
pop
push
repnz
pop
xchg
push
add
mov
inc
or
add
inc
inc
or
xchg
imul
movs
jl
inc
push
inc
mov
inc
out
pop
xchg
cmps
jmp
or
cwde
add
jno
test
add
jae
or
loop
pop
ins
sbb
inc
inc
sbb
jo
stos
mov
mov
in
fadd
lods
xor
test
inc
xor
add
les
daa
xchg
cmp
sbb
add
mov
mov
pop
adc
ret
and
push
fcmovb
inc
or
jmp
loopne
cmp
push
sub
(bad)
pusha
stc
ret
mov
repz
xor
in
push
inc
mov
dec
fdiv
add
fcomp
daa
sbb
das
pop
push
cdq
call
add
add
xor
and
xchg
add
adc
inc
inc
jne
ins
scas
pop
inc
and
clc
mov
xchg
push
inc
mov
inc
hlt
jmp
les
jb
mov
push
push
push
cli
mul
mov
sub
loopne
icebp
mov
test
daa
mov
add
jge
cmp
inc
mov
jg
test
or
into
pusha
jge
loope
mov
sub
fmul
xor
mov
add
sbb
sub
outs
sub
xchg
push
outs
ins
push
xchg
sub
adc
or
in
mov
jbe
sbb
sub
pop
add
or
femms
dec
sbb
data16
inc
mov
mov
pop
sub
rcl
stos
cmps
mov
dec
mov
pop
adc
sar
adc
(bad)
(bad)
fistp
sub
jo
mov
mov
ss
test
int
add
(bad)
add
push
and
fnstsw
daa
dec
das
push
daa
sub
push
and
je
push
fwait
push
sbb
ror
ins
pop
cmps
add
push
leave
in
push
and
inc
xor
xchg
or
(bad)
aad
jmp
add
pop
pop
test
sbb
inc
mov
mov
jae
inc
rol
pusha
mov
mov
popa
rcr
or
mov
add
add
jmp
aas
es
in
fs
das
jg
(bad)
sub
sub
das
xchg
mov
in
jecxz
imul
pop
sub
outs
mov
rcr
scas
stos
outs
scas
cmove
lahf
inc
inc
ficom
test
fxch
sbb
mov
push
sub
sahf
out
sahf
mov
leave
jns
out
rcr
loope
icebp
mov
add
push
adc
jb
jmp
mov
in
movs
aaa
add
sub
push
mov
add
out
xlat
cmp
add
push
sbb
mov
shl
test
fsubr
xchg
mov
lahf
sub
mov
aam
pop
and
fsubr
adc
out
test
adc
dec
cmp
jmp
pushf
pushf
mov
jecxz
push
pushf
in
in
mov
cli
and
shl
ror
dec
adc
cvttps2pi
es
aad
sub
jmp
push
test
pop
dec
outs
dec
mov
stos
cmp
dec
and
inc
and
or
pop
or
sbb
mov
clc
sbb
or
loope
mov
jns
push
xlat
pusha
dec
jns
push
pop
fdivr
(bad)
mov
cmp
sti
dec
bound
outs
pushf
shr
jno
pop
mov
xchg
mov
xchg
pop
or
cmp
fwait
or
mov
add
test
inc
xor
or
ins
add
pop
in
retw
mov
rol
add
enter
cmp
inc
push
mov
pop
inc
cmp
(bad)
dec
pop
cmp
loope
fild
js
jecxz
gs
or
cld
cmc
inc
test
mov
inc
or
pop
jecxz
lock
inc
test
push
imul
mov
mov
push
es
or
sti
push
(bad)
ret
fwait
lock
add
sti
es
out
add
ins
mov
ja
es
or
aas
sbb
mov
aam
add
xchg
inc
or
mov
shl
jo
sub
push
retf
loopne
xor
xor
in
push
cvtps2pd
add
mov
fmul
loope
stos
iret
dec
dec
or
je
dec
dec
push
cli
ret
xor
dec
(bad)
ins
push
or
or
add
xor
imul
add
test
loope
hlt
push
popa
ins
jne
add
test
jo
test
clc
inc
pop
call
test
sbb
imul
add
adc
dec
mov
xor
ins
jmp
mov
mov
ds
mov
les
(bad)
in
push
sahf
aam
test
push
sub
into
imul
hlt
push
add
inc
dec
enter
push
hlt
or
jae
xchg
push
cmps
or
inc
or
jmp
cmp
gs
inc
push
jmp
shl
test
popa
push
push
push
jmp
jne
gs
aas
push
dec
popf
ror
mov
adc
inc
leave
xchg
adc
push
clc
mov
mov
fbld
fist
stc
int3
mov
push
mov
or
inc
fsubr
push
add
jge
or
cli
push
je
push
jmp
xchg
test
push
add
and
cmps
fs
cmps
fcomp
(bad)
jmp
mov
lods
jns
and
cmovbe
outs
int
add
out
xchg
and
aad
pusha
mov
sbb
add
(bad)
iret
ror
int
sbb
aas
or
test
adc
out
mov
adc
or
dec
inc
sbb
cvtps2pd
bound
xor
fadd
test
shl
lds
cmps
add
sbb
mov
cmps
mov
in
dec
in
adc
jns
scas
push
data16
adc
and
sub
cmps
stc
mov
push
lock
sbb
clc
test
fld
add
jo
pop
or
sahf
mov
jo
ins
movs
cmp
and
pop
xor
dec
sub
fnstenv
inc
arpl
into
imul
cs
jmp
stos
add
(bad)
pop
pop
or
push
andps
aam
or
xor
or
test
rol
(bad)
sbb
dec
xor
push
or
mov
dec
mov
sub
cmp
mov
popa
xchg
or
mov
bound
xchg
fs
or
xor
fs
fidiv
std
add
int
adc
pop
add
or
pop
add
push
(bad)
push
aas
dec
or
or
pop
inc
and
inc
out
push
adc
xchg
sbb
add
push
daa
leave
das
out
addr16
add
xor
cmp
inc
or
inc
imul
or
(bad)
loopne
xchg
cmps
and
cmp
mov
mov
(bad)
mov
sub
ret
and
je
and
int3
stos
jge
movs
push
xor
mov
or
mov
adc
iret
jo
addr16
nop
test
xor
in
adc
and
sbb
lock
je
xchg
out
push
not
icebp
push
mov
iret
in
fwait
in
or
js
pop
sbb
pop
or
or
xor
add
or
add
ret
mov
into
fisttp
iret
ffree
cs
sbb
loopne
pop
sub
pop
leave
ret
and
or
push
jo
js
(bad)
sbb
ret
push
loopne
inc
(bad)
or
inc
xor
push
ltr
jmp
ror
imul
pop
ficom
into
ins
pop
repnz
js
sar
enter
pushf
pop
dec
sub
repz
jns
jmp
pop
hlt
push
sbb
cmp
push
retf
sar
cld
(bad)
sti
cmp
imul
or
sbb
push
inc
mov
add
ret
push
stc
cmp
call
imul
imul
pop
fistp
ins
xor
sbb
jae
or
push
jl
es
call
mov
inc
mov
mov
push
bound
gs
mov
lds
test
push
rol
xchg
iret
dec
xor
add
int3
dec
ins
add
sbb
or
fs
pop
int3
push
sub
aad
rol
scas
sbb
mov
imul
lds
(bad)
sbb
add
push
into
add
stc
in
mov
inc
mov
in
xor
dec
dec
aam
pop
cdq
imul
ds
add
sbb
add
xchg
imul
imul
adc
xlat
add
xchg
int
stos
xchg
pusha
or
xchg
add
pop
outs
out
pop
cmc
iret
mov
or
or
cmp
mov
inc
add
jne
xchg
daa
inc
call
jbe
add
lods
rol
fiadd
mov
out
hlt
ret
lods
sub
icebp
mov
rcr
dec
add
test
mov
inc
enter
cmp
rcl
mov
pop
or
and
push
or
xlat
lods
stos
push
xchg
imul
(bad)
xchg
cmp
pop
mov
inc
inc
test
ss
(bad)
cmovns
cmps
addr16
mov
pusha
mov
das
pushf
jae
push
dec
sub
not
adc
sbb
xchg
subps
jnp
mov
xor
pop
mov
mov
add
loop
push
xchg
jne
loopne
jne
xor
ins
adc
stos
sub
xchg
or
in
pop
adc
inc
push
imul
inc
sbb
sbb
pop
jo
add
test
push
data16
add
sbb
add
cmps
pusha
es
das
in
push
bts
sbb
pop
test
add
xchg
call
mov
or
sti
aaa
add
ins
(bad)
adc
daa
sbb
sbb
cmp
cmp
or
int
inc
in
xor
add
add
pop
push
and
push
sub
push
shl
pop
pop
inc
mov
lahf
or
addr16
jne
lds
cmp
sub
cmps
loop
stc
pop
in
cwde
(bad)
dec
sbb
(bad)
sti
das
addr16
push
xor
fnstenv
xchg
jl
push
cmp
jl
fnstenv
and
sub
add
sub
ret
shr
test
fisubr
xor
dec
sbb
push
fs
addr16
adc
data16
dec
sub
in
rol
aam
sub
fmul
or
dec
cmps
mov
aam
sub
sbb
mov
mov
sbb
data16
add
ret
jno
or
(bad)
loope
outs
fsub
fs
pop
sub
ror
push
lock
cwde
or
popa
jne
mov
dec
jbe
scas
rcr
out
ins
dec
push
sub
push
iret
ins
push
test
dec
sub
adc
sbb
cmps
pop
push
ss
pop
ss
pusha
jno
add
and
leave
(bad)
inc
sbb
push
mov
dec
dec
sub
loop
sub
xchg
push
loopne
loop
and
push
dec
push
jmp
int
int
mov
std
xchg
popa
push
push
adc
pop
(bad)
(bad)
fcmovnbe
mov
gs
push
pop
test
retf
test
das
pop
(bad)
mov
ds
cmp
lock
add
movlhps
sub
pop
(bad)
pop
or
sbb
pop
out
ss
add
sbb
pop
push
jle
imul
nop
out
add
add
add
lock
and
add
sbb
mov
xchg
dec
(bad)
data16
(bad)
loopne
ud0
aaa
add
push
outs
jg
sahf
js
dec
add
das
cmp
movq
sbb
add
push
pop
test
push
fwait
es
mov
cs
xchg
test
fsub
sahf
adc
rcr
std
push
pop
mov
or
dec
scas
and
cs
mov
inc
popa
mov
fmul
sub
jmp
mov
or
add
rcr
sub
pop
leave
lds
and
sbb
add
cvtps2pd
cmp
push
jne
jmp
lock
shr
add
rol
and
add
cmp
push
ror
nop
xor
or
ror
(bad)
rol
aam
shl
mov
aaa
add
push
push
inc
jno
out
pop
loopne
push
cdq
sbb
adc
adc
test
inc
sub
call
sub
cmps
push
jo
sub
cmp
mov
jl
mov
push
adc
dec
xor
mov
and
and
ret
inc
rol
add
mov
inc
jnp
add
sub
xchg
mov
imul
movs
push
cwde
mov
or
inc
cmp
mov
push
test
js
push
sbb
sbb
or
mov
jmp
cld
or
outs
popa
fs
or
imul
add
push
lods
xor
jnp
loope
mov
or
or
test
push
fmul
lahf
push
pop
xor
xor
or
jo
push
test
sbb
ds
pop
add
pop
jnp
adc
add
sub
adc
push
jmp
dec
gs
xchg
or
add
or
mov
and
add
stos
ja
adc
xchg
adc
fwait
mov
adc
ja
add
push
popf
mov
into
mov
or
cmp
cli
fsubrp
add
aaa
add
mov
test
push
jne
pop
mov
pop
in
outs
pop
cmp
outs
push
outs
rol
jae
outs
inc
add
pusha
adc
in
pop
dec
(bad)
fcmovnb
sbb
fsub
fcomi
and
add
iret
iret
adc
arpl
jp
pop
mov
cmc
push
movs
sub
adc
add
and
add
pop
inc
call
shl
mov
push
sbb
pop
lock
mov
cmp
jl
shl
adc
or
xor
xor
fs
or
xor
js
mov
sti
jo
test
lahf
pop
pop
arpl
push
push
inc
push
inc
cmpxchg
pop
pop
add
inc
cs
add
inc
inc
inc
inc
cwde
mov
in
loop
xor
ror
sbb
stos
jmp
inc
cmc
add
add
mov
mov
add
mov
outs
not
inc
or
fs
add
inc
sbb
test
and
stos
je
mov
or
mov
pushf
aad
popa
out
lea
lea
je
sbb
aas
nop
mov
xor
push
popa
rcl
push
or
and
and
and
inc
sub
xchg
retf
xchg
lods
xchg
repnz
mov
or
not
test
inc
inc
jl
push
call
adc
mov
mov
movs
add
sbb
cmp
xor
ret
scas
cld
xor
frstor
xor
aaa
xchg
ror
inc
dec
sub
shr
push
ja
outs
(bad)
lea
sbb
adc
pop
cmp
mov
pop
repnz
addr16
and
in
arpl
add
pop
and
cmp
add
push
and
nop
ss
adc
lahf
loop
cmps
mov
or
add
shl
ja
or
adc
lods
enter
je
ret
ss
push
mov
and
sbb
ror
xor
xor
icebp
add
imul
or
and
xchg
push
pop
or
(bad)
repz
fisttp
pop
clc
push
dec
test
sub
test
iret
or
cmp
pop
jmp
and
cmps
mov
andps
enter
int
cmp
cmp
cmp
movs
jle
movs
out
pop
pavgb
lock
wbinvd
out
mov
push
inc
not
or
push
push
pop
lock
xor
or
add
xor
pop
ja
shl
pop
and
mov
sub
or
(bad)
imul
and
or
jne
outs
add
push
push
(bad)
lds
(bad)
pop
outs
jae
imul
in
(bad)
ins
add
fdivr
or
mov
(bad)
sub
loope
ds
int3
out
cmps
or
aam
jmp
xchg
mov
loop
sbb
movlps
cmp
retf
add
mov
retf
xchg
jg
push
add
nop
push
add
popa
jb
repnz
in
(bad)
imul
loope
jae
add
shr
dec
mov
add
aad
adc
test
iret
sbb
jmp
ret
adc
cs
bound
arpl
push
inc
or
or
shl
pop
xchg
push
or
cmp
xchg
inc
es
jmp
xor
push
daa
pop
gs
or
pop
push
mul
shl
add
mov
das
add
mov
xchg
cmp
adc
or
imul
and
push
sub
mov
mov
lea
mov
scas
int
cmps
nop
call
clc
push
test
rcl
sbb
push
pop
or
pop
and
pusha
xchg
fidiv
pop
jl
ins
mov
or
xor
pop
or
or
inc
or
les
das
xchg
push
dec
pop
stos
pop
rol
cmp
pusha
bound
mov
popf
inc
sbb
mov
data16
inc
or
scas
(bad)
fadd
daa
mov
retf
xor
ucomiss
add
int3
retf
out
lock
push
and
adc
sahf
mov
es
out
js
mov
ror
(bad)
add
push
add
ds
push
in
fs
pop
xorps
repnz
cmp
sbb
sbb
loope
pushf
mov
sbb
fisttp
inc
sahf
pop
sbb
frstor
daa
and
sbb
xchg
fist
sbb
enter
push
pop
nop
in
in
xlat
nop
jb
repnz
pop
and
cmp
jns
call
pushf
mov
jmp
sahf
pushf
in
and
and
out
daa
and
test
xchg
daa
daa
lock
xchg
stos
repnz
jae
in
leave
lods
hlt
sub
ficomp
rdmsr
std
das
inc
sub
pushf
int3
jp
and
dec
mov
inc
sub
int
sub
enter
jecxz
sub
fs
leave
lods
stc
aaa
sub
in
ucomiss
cmp
jns
fsub
mov
out
cmp
jns
dec
dec
inc
sahf
add
push
fwait
in
daa
and
xor
xchg
xchg
xor
jmp
cmp
mov
pop
sub
ret
add
iret
add
adc
add
ins
int3
rcr
data16
test
aaa
jle
dec
dec
add
or
xchg
or
clc
int
ins
test
test
push
inc
test
dec
cmps
fldenv
sbb
gs
lock
push
rol
rol
sub
enter
add
test
sbb
fiadd
inc
popa
je
lea
adc
enter
in
mov
add
sub
bound
fs
(bad)
std
xor
sub
std
outs
add
je
mov
call
add
outs
std
xchg
pusha
push
les
ins
dec
aam
std
aad
ins
mov
std
adc
lea
xor
mov
leave
rol
in
fs
std
adc
or
std
outs
or
(bad)
std
add
and
lods
mov
push
rcl
xor
std
sub
mov
std
adc
std
add
lds
push
(bad)
shl
outs
aad
or
mov
std
adc
sar
std
fcom
push
or
hlt
lea
xor
dec
mov
push
std
or
shr
add
std
add
je
pusha
push
xor
mov
leave
rol
in
test
std
pushf
push
pop
or
std
outs
or
(bad)
std
sbb
lock
mov
outs
std
xor
sub
dec
add
dec
jo
(bad)
rol
pop
jno
xor
je
add
lds
pusha
(bad)
pop
add
adc
jno
les
add
mov
pop
pusha
add
movs
jno
test
add
or
lods
pusha
add
pop
push
adc
jno
or
pusha
or
add
pop
cmovb
or
inc
pop
adc
xchg
(bad)
sbb
adc
pop
inc
add
je
adc
test
mov
test
jno
call
or
pop
add
or
add
test
pusha
add
add
mov
or
or
add
clc
pop
rcl
and
or
jno
or
mov
(bad)
adc
sbb
mov
rol
add
mov
xor
sar
mov
add
ret
ficom
dec
(bad)
or
or
inc
mov
add
jno
pop
sub
add
inc
push
in
jo
add
inc
mov
add
adc
jno
popa
adc
in
ror
and
add
jno
sub
or
jno
cmp
(bad)
or
cwde
add
pop
cmp
or
jno
pop
add
ror
inc
push
test
or
pop
imul
iret
mov
hlt
pop
add
xchg
ret
adc
xor
mov
movs
ret
push
and
in
lds
sbb
mov
adc
(bad)
fbstp
xchg
dec
push
sub
sbb
sub
mov
mov
cmps
push
sub
mov
xchg
jbe
add
xor
and
jns
adc
ins
add
push
jnp
sbb
test
cdq
adc
test
and
adc
adc
cdq
adc
mov
adc
push
adc
sub
xor
add
rcl
mov
bound
and
or
cdq
or
test
jnp
bound
call
nop
adc
adc
jnp
sub
and
adc
cdq
dec
test
les
test
push
jnp
mov
adc
adc
pop
test
adc
add
adc
jnp
shl
jnp
mov
adc
xor
test
sub
pop
adc
push
cdq
adc
jno
aam
inc
movs
inc
inc
adc
adc
cdq
adc
mov
jnp
adc
pusha
les
sub
sub
add
mov
nop
bound
and
or
or
or
adc
lds
inc
adc
mov
mov
mov
mov
jns
inc
in
xlat
scas
pop
jnp
jne
test
int3
adc
scas
cwde
or
xchg
ins
ror
and
adc
nop
pop
xchg
les
jns
xchg
pop
add
inc
sub
push
and
mov
test
sub
inc
add
call
jo
inc
jb
ins
daa
or
mov
jb
mov
mov
ror
or
outs
sbb
gs
ins
mov
sbb
outs
scas
loopne
sub
ins
outs
fwait
add
lock
push
bnd
sbb
or
pop
rcr
push
sub
adc
jg
xor
pop
or
adc
push
(bad)
mov
dec
popa
ins
add
mov
or
push
or
push
inc
push
sub
sub
push
cmps
jbe
movs
inc
sbb
outs
outs
add
movs
sbb
dec
mov
dec
and
and
int
rcr
int
imul
cmp
mul
sbb
and
or
js
jo
add
out
outs
lods
inc
add
sbb
lods
mov
in
push
xlat
mov
frstor
cwde
add
outs
mov
dec
mov
adc
mov
push
jns
imul
fsub
cs
ins
popa
jae
jae
pop
lods
mov
inc
ficom
dec
iret
mov
mov
push
popf
add
push
outs
jae
out
or
add
sbb
pop
and
mov
gs
call
dec
call
ins
out
enter
(bad)
jg
mov
es
sbb
ror
frstor
call
mov
mov
jbe
cmp
lods
es
das
std
push
lock
push
sub
jl
out
mov
jle
and
test
addr16
push
cmp
sar
in
hlt
pusha
inc
jbe
pop
adc
add
out
retf
pop
inc
dec
ins
fs
ret
(bad)
fistp
mov
inc
dec
es
imul
cmovle
syscall
add
push
pop
inc
lds
jo
cmp
ins
push
jg
xlat
or
aaa
ins
fadd
inc
push
(bad)
cmc
jo
lock
mov
pop
push
or
inc
icebp
add
sub
pop
add
cdq
imul
mov
inc
or
sbb
xor
adc
ja
pusha
adc
and
sub
cmp
xchg
sub
movs
and
jno
ins
mov
ja
fld
je
out
pusha
test
retf
jo
jae
fwait
add
scas
dec
je
push
popf
push
push
mov
fsubr
mov
push
sahf
push
mov
add
loopne
cmp
or
add
ret
sub
add
in
clc
cli
dec
mov
add
jp
inc
sub
jae
sbb
push
push
cmp
js
mov
fdiv
in
mov
inc
inc
shr
shr
jmp
out
test
ret
and
jb
repnz
jnp
clc
test
je
add
inc
push
sub
loopne
sbb
jns
lds
pop
mov
sub
pop
jno
sbb
xchg
dec
or
cmp
imul
push
mov
leave
das
add
mov
sbb
xor
je
and
push
mov
cmp
push
add
sbb
or
mov
sahf
outs
jb
or
jle
and
add
pop
ins
and
sbb
add
shl
or
js
mov
dec
nop
ret
call
dec
or
adc
or
(bad)
fwait
nop
loop
add
inc
xchg
pusha
add
fsub
add
mov
or
popa
movs
clc
aas
dec
jne
cmp
or
popa
jbe
push
outs
or
or
mov
sub
dec
ja
or
cmp
pop
jae
(bad)
cmp
mov
lock
fndisi(8087
add
dec
adc
ins
adc
pop
mov
push
sbb
ja
fstp
nop
inc
push
dec
es
stos
push
sbb
in
lock
ja
imul
xor
inc
dec
ja
ins
cmp
add
sbb
inc
ss
popa
jo
pop
and
popa
arpl
sbb
inc
xlat
add
loopne
pop
add
popf
xchg
inc
add
adc
icebp
pslld
loope
or
push
cmps
add
mov
sbb
scas
imul
sub
popa
das
dec
add
dec
outs
ins
out
inc
xchg
cmp
or
jp
sbb
sahf
ins
or
sar
cmp
inc
cmp
stos
inc
je
jno
in
inc
mov
pop
dec
gs
inc
dec
int3
ret
outs
loope
xor
outs
sahf
or
or
(bad)
xlat
and
movs
stos
pop
add
mov
loopne
add
push
and
push
shr
mov
mov
mov
add
inc
cmp
inc
push
enter
cmp
jle
sbb
mov
mov
push
outs
jbe
add
jmp
cmp
add
push
inc
inc
jns
fsubr
mov
movs
or
sub
xlat
ss
jo
les
push
mov
popf
outs
out
xchg
mov
sbb
pop
mov
shl
fwait
adc
inc
mov
add
das
std
push
loope
pop
push
mov
out
call
pop
bound
call
neg
scas
or
cmp
sti
daa
mov
outs
bound
movs
out
inc
push
add
pextrw
sbb
mov
mov
mov
andps
ins
pop
cmps
fwait
or
cld
outs
rol
add
stos
add
push
fbld
push
jns
jmp
add
or
dec
inc
mov
rol
mov
mov
xchg
adc
retf
cmc
push
stos
mov
cmc
push
stos
sub
inc
cmc
xchg
cmps
pop
test
or
xchg
mov
add
xchg
dec
ja
xlat
adc
and
add
or
push
dec
fidivr
adc
fs
add
mov
mov
in
cmp
sbb
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
sbb
xchg
(bad)
jmp
adc
sahf
inc
cmp
repz
test
mov
nop
add
adc
das
cmp
iret
pop
addr16
add
lods
jnp
add
or
popa
xlat
mov
jmp
add
dec
push
pushf
es
add
inc
out
imul
push
test
aad
aad
mov
dec
add
mov
fs
pusha
push
repz
mov
or
and
add
pushf
mov
and
ss
pop
inc
jmp
sbb
mov
sub
push
jmp
push
jmp
push
jp
loopne
fiadd
pop
ldmxcsr
sbb
je
cmc
mov
jp
(bad)
paddb
push
lock
or
mov
jbe
cs
fs
jo
xor
sbb
mov
mov
pop
xor
pushf
adc
adc
push
sub
add
dec
xchg
push
ret
lahf
loope
xlat
add
mov
or
mov
add
push
in
mov
div
arpl
adc
fadd
jo
jnp
push
pop
popf
cdq
push
sub
pop
or
in
push
inc
pusha
ret
je
lahf
outs
inc
test
pop
lahf
cmps
sahf
or
push
dec
outs
jbe
stos
xchg
and
xchg
rcl
and
adc
ins
add
loop
test
add
in
test
pop
jnp
lds
(bad)
fsub
jge
or
sub
outs
add
push
dec
dec
xor
retf
jae
hlt
jae
pop
sub
daa
push
jl
dec
xor
(bad)
(bad)
push
jne
adc
pop
mov
stc
ds
fnstenv
ret
es
movs
in
int
adc
fld
push
addr16
dec
cmps
push
sub
inc
sbb
mov
xor
jb
dec
std
in
aas
mov
jnp
pop
pop
or
imul
xor
pop
sub
or
or
sbb
and
xor
jle
out
mov
scas
(bad)
push
outs
ins
mov
jle
xor
call
push
lods
xor
call
pop
push
or
push
addr16
mov
pop
(bad)
push
out
ins
pop
xchg
xor
push
adc
rol
pop
or
and
adc
sub
or
dec
and
pop
pusha
push
mov
inc
inc
imul
mov
or
out
inc
adc
loopne
push
inc
lods
fld
jmp
or
ss
and
sub
jmp
aaa
add
daa
push
das
jnp
xor
lock
pop
outs
fadd
das
sub
cmps
add
js
sti
ret
cmp
cmp
inc
sbb
push
inc
or
inc
mov
push
fmul
fild
adc
aas
(bad)
stos
scas
add
push
pop
inc
shl
rol
cmps
in
jnp
lea
ja
pop
xor
sbb
int
adc
dec
outs
arpl
shl
mov
cmp
mov
jae
ret
mov
fmul
cmp
test
stos
lahf
mov
inc
mov
or
adc
shl
mov
push
jl
xor
test
sbb
arpl
das
add
or
ror
or
pop
cmc
fcomi
lock
retf
scas
or
or
(bad)
fsubp
aam
gs
push
adc
jbe
dec
jne
ret
cmp
dec
mov
pop
or
xor
rdpmc
xor
inc
js
mov
ins
fs
mov
rcr
push
inc
mov
je
jb
ds
mov
jb
add
pop
inc
adc
(bad)
push
dec
imul
icebp
mov
stos
dec
xchg
xor
mov
outs
loopne
xor
ins
outs
push
pop
div
xor
push
push
inc
cmp
jb
das
push
ret
bound
add
loopne
movs
or
jb
xor
xor
xor
xor
xor
jmp
cwde
or
pop
xchg
dec
dec
xlat
lahf
or
xchg
xor
or
push
loopne
popa
xor
mov
add
xor
and
mov
and
js
gs
lea
fld
sbb
xchg
dec
push
xchg
sub
mov
jnp
popf
inc
mov
mov
add
(bad)
push
sbb
shl
(bad)
mov
(bad)
out
xor
mov
xchg
pop
inc
(bad)
int
dec
add
pop
fdivr
xchg
xor
mov
mov
inc
push
push
ret
push
das
mov
sub
push
loop
out
loopne
movs
int
ins
or
test
sahf
pop
loopne
add
inc
or
inc
add
ret
inc
mov
or
jo
add
xchg
or
icebp
push
sub
and
mov
inc
or
test
xor
add
into
and
pop
rcr
push
out
dec
and
loopne
out
sub
inc
mov
push
and
cmovbe
xor
fsub
and
pop
(bad)
xor
add
dec
push
and
xchg
cmovbe
mov
pop
jbe
push
mov
push
and
inc
cmp
cmp
daa
(bad)
jne
out
pop
mov
sub
out
inc
pusha
mov
(bad)
cmps
(bad)
push
fld
sbb
push
and
dec
pop
xor
pushf
jb
pop
and
pop
dec
add
push
inc
or
or
les
xor
je
cmp
ret
cmp
inc
retf
and
js
loop
and
mov
and
sub
and
jne
push
push
and
mov
push
jno
xchg
fldenv
and
fdiv
adc
jecxz
inc
cmp
adc
and
dec
cdq
adc
pop
pop
inc
inc
push
sub
movs
sti
lea
mov
idiv
jae
js
xor
adc
push
push
retf
clc
pop
push
ret
or
jno
fdiv
dec
and
inc
jbe
fs
push
cmp
add
cmp
push
push
repnz
pop
inc
fs
add
xchg
pop
cld
sbb
add
inc
push
loopne
inc
mov
outs
xor
or
mov
rcr
pusha
mov
in
xchg
ret
sbb
sbb
push
outs
or
add
imul
or
add
add
pop
add
mov
pop
pop
test
cwde
inc
in
imul
popa
sub
pop
adc
push
xchg
sub
sub
jmp
(bad)
movs
xchg
fcomi
test
cmp
cmp
push
or
sbb
xchg
inc
xor
sbb
mov
lahf
stc
sbb
pop
push
jno
pop
add
mov
in
xchg
inc
es
xchg
sub
shl
arpl
aaa
xor
cmp
or
lea
pop
add
hlt
inc
dec
shl
sar
mov
push
test
js
lock
les
sbb
rol
nop
push
ret
push
cmp
add
dec
inc
adc
xor
pop
push
mov
loope
inc
add
or
or
popa
mov
fiadd
jo
push
imul
inc
lea
xlat
sbb
mov
adc
or
pop
pop
rcl
daa
inc
sbb
or
sub
cmps
adc
mov
mov
imul
or
jg
dec
inc
inc
and
repz
data16
pop
ret
add
pop
(bad)
adc
jecxz
scas
or
jo
popf
jge
sbb
je
push
mov
das
pop
pop
ror
fisub
push
dec
mov
pop
adc
push
dec
cwde
mov
xchg
push
mov
push
jo
pop
and
scas
jg
int3
dec
xor
add
xor
adc
int
and
lock
cmp
daa
xor
and
outs
loopne
or
dec
add
mov
and
xchg
outs
lea
sti
ret
sub
adc
sbb
pushf
fcomp
xor
xlat
outs
dec
sub
dec
sub
into
repz
mov
cmp
push
or
jo
shl
or
mov
cmps
inc
add
add
inc
faddp
pop
push
jne
call
ret
mov
sar
mov
or
xchg
push
outs
and
jnp
test
jns
and
inc
js
jne
or
test
mov
js
jo
jge
add
in
dec
test
into
cmc
les
orps
into
leave
ins
ja
das
or
xor
add
(bad)
pop
mov
xor
xor
xchg
xlat
sbb
bound
out
(bad)
enter
rol
dec
dec
dec
cmovge
daa
daa
and
mov
daa
es
movnti
push
addr16
xchg
xchg
xchg
xchg
ins
xchg
enter
leave
enter
in
mov
dec
sub
pop
popf
pushf
pushf
pushf
xchg
int3
cmc
sub
pcmpgtb
test
xor
daa
iret
lahf
push
das
int3
dec
cmovb
movs
cli
iret
jne
pop
cmp
or
arpl
adc
rcl
push
out
jne
push
sub
inc
jno
nop
xchg
add
lahf
add
and
add
lahf
adc
rcl
out
lahf
mov
in
adc
add
or
fsubr
sub
pop
push
or
push
dec
or
add
jg
sub
push
pop
fs
dec
gs
jne
mov
pusha
cmp
inc
push
sti
cdq
add
lea
inc
ret
pop
aaa
xor
or
rol
bound
out
jg
inc
mov
inc
xchg
sub
cmps
dec
pop
mov
test
movs
fwait
push
or
pusha
jo
add
xchg
dec
mov
xor
aam
in
jb
sub
pop
mov
stos
in
mov
int3
int3
mov
popf
imul
out
mov
push
leave
inc
fcom
mov
mov
mov
mov
mov
stos
in
cdq
mov
sahf
dec
mov
dec
inc
jns
dec
sub
loopne
push
add
push
xlat
xchg
inc
scas
sub
mov
jecxz
jl
sub
sub
ins
or
lds
push
inc
test
js
rcl
cmps
psubb
test
xchg
push
or
dec
add
push
sub
cmp
xor
adc
pop
add
xor
add
sub
(bad)
jmp
jecxz
xor
fnstsw
clc
xor
sub
stos
loopne
out
sbb
mov
jnp
js
dec
cvtpi2ps
mov
xchg
sbb
push
pop
add
cwde
push
jo
call
push
add
push
push
clc
push
setnp
mov
push
shl
dec
test
cmps
js
dec
xor
lods
int3
adc
cmp
xchg
push
rol
or
test
scas
xor
addr16
or
popa
pop
mov
mov
enter
sub
or
jmp
sub
ins
pop
add
mov
push
js
dec
and
jmp
and
add
xchg
mov
xor
cmp
call
in
mov
mov
add
cmp
lods
lds
outs
sub
mov
add
mov
add
(bad)
cmp
jecxz
ins
jmp
pop
pop
xchg
sbb
mov
rol
sbb
jns
add
push
lar
stos
imul
pusha
mov
les
les
fisttp
bound
push
push
jle
push
repnz
das
dec
shl
imul
add
pop
sahf
adc
ins
push
adc
fs
ins
add
or
in
fs
inc
inc
ds
xchg
xchg
(bad)
aam
in
pop
mov
add
mov
aas
push
mov
dec
inc
dec
dec
mov
sbb
sub
adc
jae
leave
add
mov
and
movs
mov
dec
xor
aaa
xchg
ja
pop
dec
adc
mov
inc
xchg
ret
pop
or
aaa
inc
inc
psrlw
inc
push
int
shl
test
dec
int3
pop
pop
adc
pop
inc
stos
aaa
xchg
push
mov
and
pop
sbb
lods
pop
inc
inc
fimul
adc
or
mov
push
or
add
cmp
lds
aad
pop
or
xor
lods
cmp
mov
ja
pop
or
inc
add
push
and
call
push
std
clc
fisub
pop
repz
retf
movs
add
jmp
fist
dec
cmp
add
or
jno
inc
add
jno
and
pop
addr16
cmps
jge
fdivr
push
les
inc
lods
shl
inc
jno
pop
dec
imul
into
push
call
jne
jge
mov
push
push
xlat
xchg
dec
les
jge
jne
mov
outs
enter
popf
sub
call
test
xor
jecxz
(bad)
scas
hlt
or
mov
dec
pop
xlat
sbb
(bad)
jmp
scas
mov
in
jmp
jno
clc
adc
jae
push
jne
push
ja
sti
ins
imul
add
mov
jno
es
cs
mov
pop
jb
xchg
inc
retf
inc
fimul
push
jae
test
dec
aaa
jbe
jle
cmp
sbb
jne
call
jbe
mov
dec
dec
inc
sahf
inc
ja
mov
dec
ss
ret
xchg
xchg
daa
xor
leave
enter
jp
xchg
fs
leave
shr
jnp
fucomp
in
fwait
ror
pop
daa
daa
test
(bad)
fbstp
cmc
xor
out
(bad)
jmp
sub
neg
cmp
adc
out
test
sub
stos
mov
in
sub
push
fdivr
add
xor
cmp
push
add
push
pop
sub
inc
test
mov
mov
cs
cmps
jns
dec
pop
xchg
xchg
mov
jo
xchg
mov
push
xchg
pop
movs
mov
sub
cmps
mov
add
test
mov
stos
mov
mov
mov
add
sub
rcr
sub
xchg
mov
aam
mov
lea
push
bound
inc
pop
push
mov
inc
xor
lea
ficom
xchg
push
inc
sbb
lea
and
cld
fcom
pop
ficom
push
test
mov
cmp
test
push
lea
xchg
add
clc
adc
cmp
rcl
xchg
jne
jnp
dec
dec
test
pop
fadd
jnp
jns
cmp
test
jb
in
push
pop
pop
mov
stos
icebp
cmp
call
sbb
je
and
pop
arpl
(bad)
enter
not
out
mov
shl
lea
xor
(bad)
lahf
add
sbb
jnp
jbe
sbb
cmp
pop
jo
mov
retf
or
add
jae
jae
in
aam
jl
add
adc
nop
jae
jno
push
sbb
jb
pop
dec
sti
push
xor
(bad)
pop
fdiv
out
movs
jge
stos
outs
inc
or
or
push
jb
sub
cmps
sub
in
jne
push
cmps
add
and
lock
test
shl
jne
add
test
in
mov
push
pop
shr
jb
shl
pop
mov
xor
add
and
cli
and
or
(bad)
out
rol
push
int3
add
dec
mov
test
shl
mov
jle
pop
add
push
fstp
add
int3
push
or
cmp
(bad)
pop
inc
mov
add
imul
add
ins
and
inc
cmp
fldcw
pop
loope
mov
je
add
in
jae
lods
or
mov
sub
sar
dec
push
and
movs
sbb
pop
aam
lahf
push
pop
jne
cwde
pop
push
loopne
add
xor
mov
jb
sub
xchg
cmp
pushf
push
xchg
rcr
sub
push
movs
push
sub
add
pop
adc
sub
adc
rol
movs
push
jle
adc
js
adc
xor
adc
jae
pop
cmp
inc
sbb
enter
mov
inc
loopne
pop
or
inc
and
add
inc
push
push
jl
mov
mov
ins
lock
mov
imul
jo
mov
pop
fsubr
loop
sub
aas
fdivr
aas
sbb
inc
js
in
push
inc
in
mov
jmp
add
or
inc
repz
inc
jle
or
mov
pop
cmp
inc
adc
bound
out
and
fmul
add
inc
mov
mov
mov
sar
push
push
mov
inc
je
dec
fs
or
outs
ja
pop
adc
jp
mul
dec
pop
ins
mov
and
adc
adc
inc
cwde
imul
xor
fsubrp
cs
inc
push
adc
imul
arpl
adc
add
sbb
cdq
or
pop
inc
jno
inc
and
pcmpgtw
or
and
ja
sub
sbb
sbb
add
adc
xchg
jae
fcomp
push
idiv
add
pushf
add
cmp
imul
jb
imul
pushw
push
dec
cmp
movs
xlat
mov
addr16
push
test
push
cmps
push
xchg
jge
(bad)
sub
or
sub
test
or
dec
addr16
cmp
add
push
adc
jae
inc
cmps
push
shl
fisubr
xchg
sub
mov
jo
pop
jo
jo
les
pop
aaa
mov
dec
or
or
out
sbb
test
popa
inc
cld
add
push
jne
jo
aaa
out
xor
scas
push
ins
inc
gs
push
push
pop
imul
inc
gs
gs
rcr
adc
jo
jae
loop
out
popa
cmps
mov
inc
and
outs
jnp
jae
mov
mov
test
in
cs
pop
(bad)
stos
ja
xchg
(bad)
push
out
cmp
xchg
ret
adc
add
jmp
stc
xlat
add
fs
inc
push
lahf
push
dec
add
call
sbb
aam
test
test
fnstsw
cmp
outs
mov
loop
daa
and
xchg
fistp
aas
shld
dec
inc
sahf
push
mov
fdiv
cmp
sbb
mov
xchg
sbb
test
push
shl
jo
lds
push
adc
dec
jmp
or
imul
mov
retf
pop
jno
int3
cmp
inc
outs
pop
jns
outs
loopne
sub
mov
pop
push
adc
pop
bound
shl
xor
inc
data16
inc
jo
jne
rol
add
xor
mov
add
into
jae
push
in
test
inc
dec
add
or
nop
dec
pop
jecxz
adc
loop
jg
pop
sbb
pop
push
popa
imul
ret
inc
je
hlt
in
je
mov
sbb
loopne
imul
mov
adc
jmp
fisub
lock
inc
cmp
je
(bad)
push
sbb
jmp
jmp
test
or
add
sub
cmp
mov
loopne
cmp
imul
les
or
cmp
movs
ins
test
gs
pop
les
add
sti
xor
mov
push
adc
movs
sub
or
cld
or
add
and
bound
mov
mov
call
sbb
hlt
into
mov
push
in
push
jnp
xchg
push
mov
cmp
add
add
in
ss
push
fisttp
or
arpl
jl
aaa
add
push
lahf
dec
test
add
or
jl
js
push
dec
dec
(bad)
jmp
add
ins
gs
mov
rcl
stos
or
pop
add
int
sahf
jle
sub
inc
cmp
push
xchg
cs
ds
xor
dec
push
sbb
or
push
push
push
jae
addr16
cs
in
adc
lods
gs
push
sub
test
out
ds
jmp
cmp
xor
hlt
mov
add
mov
mov
sub
sbb
mov
mov
sbb
retf
popa
or
sbb
adc
push
pop
push
adc
es
or
push
jge
xchg
cs
icebp
mov
pop
xor
mov
mov
push
xchg
or
pop
imul
cld
call
inc
push
and
mov
or
aad
or
add
(bad)
fdivr
pop
inc
or
mov
cmp
loopne
add
mov
daa
loop
jmp
adc
add
push
out
pop
xor
mov
cmp
(bad)
xor
(bad)
adc
test
clc
add
inc
dec
je
and
and
cli
and
inc
das
nop
xchg
(bad)
push
or
dec
ins
divps
inc
outs
enter
add
or
push
pop
xchg
aam
push
add
inc
test
sub
inc
jb
sbb
retf
popa
pop
lock
add
les
cwde
push
or
xchg
xchg
loopne
dec
js
inc
dec
xor
clc
xor
dec
mov
jns
add
lea
push
and
add
loop
dec
cmp
add
push
dec
mov
loope
or
xor
outs
jo
out
push
ins
mov
call
add
xor
jno
(bad)
xor
and
arpl
outs
fs
jo
cmp
ficom
xor
mov
aad
out
repnz
mov
or
fild
xchg
adc
jo
and
or
cmps
sti
es
js
jo
adc
ret
sub
cmp
test
pop
ss
ins
push
sub
cmp
xor
push
fimul
inc
sbb
data16
mov
repz
and
add
dec
neg
jbe
imul
pop
arpl
imul
std
(bad)
(bad)
jns
dec
sub
test
iret
dec
push
adc
sbb
mov
sbb
mov
and
xchg
bnd
or
mov
je
iret
jle
lock
xchg
or
push
pop
push
and
jo
inc
xor
je
fdiv
push
dec
ja
ret
mov
jae
test
jo
sahf
push
fcom
test
dec
bound
dec
mov
inc
mov
push
in
imul
or
(bad)
call
sahf
xor
sub
push
add
in
jne
xchg
pop
loopne
adc
or
jl
ret
clc
(bad)
ucomiss
mov
jns
lds
jno
cmps
jecxz
adc
outs
mov
push
mov
ror
pop
es
pusha
lock
clc
enter
push
adc
retf
and
out
inc
lock
mov
mov
mov
push
sbb
(bad)
arpl
stos
inc
inc
je
bound
add
pop
cmp
jnp
adc
dec
(bad)
(bad)
loopne
int
rol
pop
mov
sar
and
pop
jl
das
pop
cld
pop
pop
loop
out
test
or
shl
jb
pop
pusha
jb
fcom
mov
cs
and
dec
mov
jecxz
fwait
xchg
in
rcl
add
imul
ja
dec
ja
ss
(bad)
mov
add
pop
cmp
stos
push
adc
sub
add
adc
mov
xchg
dec
inc
sar
sub
fidiv
imul
pop
jl
dec
fwait
or
inc
or
ins
aam
sbb
or
sahf
sbb
fld
xchg
xchg
push
adc
cwde
or
popf
push
xchg
neg
aaa
inc
push
pop
push
in
xchg
push
jbe
lds
pusha
ret
and
xchg
push
xchg
scas
(bad)
sub
push
xor
add
mov
xchg
push
out
dec
sbb
add
pop
mov
xor
mov
pop
or
sub
(bad)
cmp
daa
ror
push
jne
push
nop
xor
mov
mov
mov
sbb
paddsw
pmuludq
jbe
js
cmps
or
push
push
add
push
shl
add
or
inc
fisubr
call
rol
mov
into
sbb
push
lock
mov
lds
push
push
sub
mov
or
xor
sub
add
test
xor
clc
les
push
test
push
mov
xor
push
add
lea
sbb
les
adc
pop
push
xchg
enter
cmp
xor
dec
jae
iret
add
dec
ret
lods
iret
test
mov
sbb
xchg
jae
push
jb
jae
pusha
or
jae
xchg
or
ret
adc
add
sahf
pop
lahf
sar
fst
add
fdivr
ins
je
xchg
inc
fisttp
int3
or
daa
mov
xchg
das
adc
xchg
lea
sub
scas
mov
fwait
ins
push
mov
or
outs
add
ret
dec
maskmovq
imul
mov
add
pop
fmul
fsubrp
push
xchg
shl
inc
jmp
jmp
pop
xor
daa
gs
cwde
push
sbb
inc
cs
jae
mov
cs
sbb
ret
inc
push
int3
add
jmp
daa
popf
push
movsx
pop
inc
nop
xchg
mov
adc
idiv
arpl
iret
repz
jge
xchg
xchg
pop
gs
cmp
xchg
jne
add
and
mov
push
mov
or
les
add
pop
or
add
(bad)
pushf
fiadd
test
mov
push
(bad)
sub
clc
inc
adc
dec
rol
cdq
jecxz
punpckhdq
dec
jbe
mov
clc
pop
cs
cmp
hlt
and
imul
inc
push
xor
ins
fcom
jnp
arpl
arpl
fadd
mov
sub
outs
pop
mov
pop
or
jo
adc
test
loopne
add
test
and
jnp
push
mov
xor
mov
push
int3
retf
loop
dec
cwde
or
ret
sub
push
inc
lods
xchg
inc
sub
loopne
lock
mov
or
jo
mov
pop
arpl
or
mov
loopne
stos
ja
pop
in
mov
lock
jg
dec
je
and
data16
xor
push
lods
fcmove
rcr
pop
movs
xchg
or
scas
out
ja
out
pop
je
push
and
aaa
jne
xor
ins
jne
sub
in
add
mov
push
xchg
mov
int
jp
int3
fnstsw
sub
fnsave
outs
imul
shl
inc
jb
popa
jns
add
scas
or
pusha
ins
jae
add
mov
into
adc
or
loopne
retf
pop
or
or
add
sbb
mov
adc
dec
inc
push
sub
mov
mov
sbb
xchg
rep
scas
sbb
es
adc
fs
pusha
jne
xchg
add
mov
adc
mov
loop
adc
(bad)
cmp
add
pop
push
inc
dec
cdq
or
in
mov
in
sbb
add
push
sbb
push
ror
in
das
mov
push
xor
out
push
adc
and
call
mov
and
test
sbb
push
lds
ja
jo
or
xlat
mov
push
(bad)
push
stc
das
dec
xor
sbb
or
(bad)
xor
and
lahf
(bad)
mov
and
xor
outs
pop
pop
or
mov
mov
mov
das
mov
fadd
push
xchg
daa
lock
sub
hlt
or
js
fmul
add
and
pop
adc
pop
mov
ror
dec
pop
pop
iret
adc
fsub
xlat
fnstsw
stos
sbb
add
push
pop
rol
aaa
pusha
repnz
sbb
jb
loopne
add
jl
fs
inc
je
push
inc
stc
mov
shl
sub
push
add
ja
arpl
mov
hlt
into
repz
pusha
push
adc
add
push
jg
js
mov
ja
jg
loop
or
jae
and
sbb
rol
add
(bad)
dec
lock
add
cmp
push
pop
fild
pop
movs
outs
push
sub
mov
xchg
cmp
sbb
jmp
jmp
push
push
pop
add
outs
inc
add
pop
pop
push
mov
add
iret
add
movs
inc
cmp
mov
int3
dec
pop
fdiv
imul
fidiv
test
push
adc
sub
iret
leave
sbb
or
psubd
xor
nop
inc
ret
mov
call
enter
add
pusha
cmp
jmp
popa
das
jmp
(bad)
jmp
xchg
jmp
lds
push
fnsave
out
mov
push
in
(bad)
jg
sbb
inc
(bad)
int
dec
add
or
cs
push
cmps
hlt
add
or
inc
fmul
daa
add
dec
push
push
les
sub
add
cmps
push
jo
sbb
inc
test
cld
sahf
not
push
sahf
inc
ss
dec
(bad)
popa
(bad)
movs
js
popa
ds
dec
push
jmp
xchg
inc
(bad)
out
es
push
stos
nop
push
push
or
push
ds
(bad)
inc
push
push
and
dec
pusha
dec
push
dec
pop
mov
pop
inc
xchg
xor
sub
cmp
mov
cld
pop
pmulhuw
or
fcomp
inc
sub
ja
add
add
and
cld
pusha
add
jbe
pop
pop
add
int3
mov
inc
push
mov
addr16
or
dec
add
adc
sub
and
dec
xor
xchg
cmp
push
adc
out
outs
sub
je
popa
or
fisttp
sub
inc
dec
cmp
test
sbb
call
and
jmp
inc
bound
inc
imul
sahf
jo
into
movs
into
pop
iret
neg
add
gs
adc
popa
adc
outs
cmp
sub
push
jmp
push
stos
cmp
aaa
push
mov
sbb
dec
stos
mov
dec
inc
sahf
sbb
and
lods
push
push
add
dec
mov
prefetch
mov
jmp
paddd
sbb
xchg
pop
ja
test
enter
(bad)
pop
lds
jbe
push
das
loopne
(bad)
xor
push
adc
std
(bad)
cld
(bad)
sti
or
or
dec
stc
jmp
push
pop
jmp
repz
cmp
rol
mov
pop
out
mov
sbb
repnz
iret
jnp
jnp
hlt
push
clc
add
in
cld
rol
jnp
adc
es
mov
and
adc
cmp
call
push
imul
ins
adc
adc
and
scas
sub
pop
jne
popa
lea
dec
adc
or
inc
es
xor
xlat
hlt
add
or
lods
add
test
add
inc
dec
sbb
xor
out
lods
mov
or
add
or
(bad)
lods
retf
push
add
dec
lods
add
pop
pop
pop
in
mov
or
call
stos
add
int3
sbb
int
es
add
cmps
int
nop
sub
pop
fcom
mov
inc
sub
in
push
fs
daa
ds
int
cs
inc
pop
add
fs
inc
xchg
inc
mov
adc
ins
jp
jae
fwait
jo
mov
mov
in
test
mov
dec
mov
or
sub
(bad)
add
or
push
cmp
clc
or
pop
inc
mov
pop
dec
add
mov
xchg
pop
fwait
add
movs
pop
js
ss
fadd
mov
add
add
push
xchg
lock
adc
dec
xor
inc
hlt
sar
sbb
xchg
dec
sub
adc
test
or
adc
mov
movs
jae
addr16
sub
(bad)
(bad)
or
add
call
jmp
mov
inc
adc
shl
mov
push
arpl
jo
jo
popf
or
push
rol
je
jnp
sub
cmps
dec
sub
or
iret
mov
inc
lock
out
push
dec
adc
dec
(bad)
sbb
mov
inc
sub
pop
test
cmp
retf
mov
cmp
mov
inc
retf
je
jne
test
add
push
dec
jae
lea
dec
loopne
fst
push
popa
data16
ins
add
ss
cs
or
or
rcl
inc
repz
mov
add
sub
adc
mov
or
xor
cmp
ss
jae
cmp
push
push
ins
xchg
dec
data16
mov
dec
jae
jo
or
add
pop
mov
mov
test
popaw
jns
popa
ins
adc
push
inc
aas
call
popa
je
stos
xchg
icebp
adc
mov
bound
ja
gs
fiadd
xor
sbb
push
push
inc
(bad)
shl
scas
or
(bad)
movs
add
add
retf
cmp
push
daa
iret
fadd
in
or
mov
add
xchg
fadd
mov
inc
retf
sbb
or
inc
and
sbb
call
push
in
jecxz
push
pop
add
or
call
pop
inc
push
push
(bad)
(bad)
xchg
adc
push
call
mov
xor
int
inc
xor
mov
mov
inc
push
pop
movs
mov
add
rcr
xor
inc
aas
or
mov
(bad)
and
sbb
inc
push
in
or
inc
mov
mov
(bad)
jmp
dec
push
add
sub
jo
mov
repz
arpl
cwde
mov
call
push
add
lds
outs
inc
inc
push
sub
xchg
jmp
fsubr
adc
jge
xchg
push
mov
dec
cld
add
jp
mov
scas
push
pop
mov
dec
imul
aaa
std
cmps
cmp
lds
mov
lds
fsubr
sub
inc
mov
ret
fsubr
cmp
movs
adc
xor
mov
es
push
bound
add
dec
shr
test
jnp
jg
cs
push
dec
lods
add
push
xchg
(bad)
daa
jmp
cmc
or
sbb
mov
adc
or
outs
loopne
pop
test
scas
sbb
lock
add
adc
xchg
add
add
add
cmp
or
dec
loopne
sahf
mov
call
inc
xor
rcr
push
push
push
(bad)
popf
mov
sub
ficom
push
shl
clc
push
add
rcr
or
sub
mov
fidiv
mov
inc
fs
xchg
cmp
shl
cld
cs
aad
addr16
ss
cmp
gs
les
push
and
dec
mov
xor
cs
inc
clc
sbb
daa
sbb
out
mov
push
rcl
xchg
not
cwde
cmps
icebp
add
test
pop
sub
int3
mov
pop
push
imul
es
jl
pop
stos
daa
mov
retf
unpcklps
dec
rcl
sbb
push
add
push
add
jmp
xor
add
jmp
jmp
and
(bad)
mov
stos
mov
inc
aaa
adc
ins
adc
mov
inc
fs
sbb
pop
cmp
push
popa
jb
and
pop
not
outs
push
dec
jns
rcr
stos
jns
and
lock
mov
lods
out
scas
sub
add
clc
fimul
dec
inc
imul
popa
retf
or
loopne
add
jl
pop
repz
jne
movs
clc
jp
push
and
cmps
pop
sub
aaa
pop
dec
popa
xor
imul
or
pop
outs
mov
fs
cmp
mov
loop
maxps
rol
adc
dec
jns
cmp
aaa
inc
jg
loopne
adc
add
imul
es
sbb
iret
fs
out
push
fsubr
xchg
adc
xlat
mov
iret
jbe
jne
xor
out
jo
add
sar
cmc
cmc
jb
fist
imul
imul
sub
es
jmp
sub
push
jns
invlpg
or
sub
dec
jb
push
repz
cmps
lods
(bad)
push
mov
mov
bound
xlat
out
sub
cli
(bad)
mov
aad
fild
ror
push
or
popa
dec
outs
fs
sbb
mov
add
dec
shl
push
(bad)
in
pop
pop
add
imul
jno
retf
cmps
test
push
dec
adc
inc
jne
ins
mov
dec
pop
icebp
mov
loopne
mov
xchg
shr
retf
or
jecxz
iret
pop
xor
add
pop
fs
mov
cmps
mov
add
push
test
rcl
shr
add
fild
add
sub
pusha
sbb
lods
pop
or
clc
mov
ret
mov
or
mov
inc
sbb
bound
xchg
cwde
ficom
sbb
or
rcl
jno
inc
add
or
sbb
mov
mov
(bad)
or
jno
ja
enter
push
test
pop
jo
or
ficomp
push
arpl
adc
bound
mov
pop
js
add
xor
les
mov
mov
gs
jae
outs
ins
je
add
add
push
aam
jae
mov
add
sbb
lock
inc
jne
je
shl
fwait
popf
sub
pop
fs
or
jl
loopne
cld
call
add
addr16
enter
ret
push
ja
push
dec
push
pop
add
sub
cmps
sub
dec
lds
add
rol
iret
pop
xor
jmp
lds
dec
jbe
sbb
xchg
sub
push
(bad)
adc
add
aas
lods
call
and
fwait
test
cmp
push
fistp
push
mov
mov
sbb
add
push
jl
mov
add
mov
push
ror
push
adc
in
adc
mov
ret
hlt
push
fadd
in
jns
mov
ss
daa
sbb
ins
jb
pop
or
inc
shr
inc
xchg
or
pop
test
out
movs
pop
or
inc
inc
cmp
fadd
mov
jns
cdq
ja
movs
ss
sub
and
push
jbe
sbb
cld
sbb
div
ret
mov
pop
sbb
sbb
(bad)
je
cs
popf
ins
pop
cmp
add
inc
push
mov
push
add
xor
add
test
ja
cmps
or
mov
push
pop
mov
inc
jne
xor
push
add
sub
fmul
cmp
jmp
and
mov
mov
loopne
mov
add
add
jo
or
ins
cs
xchg
dec
mov
fwait
and
lock
repz
pextrw
nop
pop
add
push
pop
fnstenv
xchg
pushf
push
sub
das
loop
and
addr16
push
push
add
add
or
(bad)
pop
and
scas
pop
ins
clc
cld
push
xor
daa
or
pop
xor
push
fadd
and
add
js
jno
xchg
dec
dec
push
push
pop
sahf
lock
in
or
and
adc
es
fldcw
fdivr
imul
repz
pandn
enter
pop
mov
dec
test
push
inc
and
out
ror
cvtsi2sd
xchg
daa
daa
daa
mov
xchg
xchg
xchg
jle
lock
leave
pop
cmps
(bad)
int3
jg
xchg
daa
mov
mov
xchg
xchg
xchg
jg
sar
leave
leave
leave
enter
mov
in
fs
iret
cmp
jbe
xor
adc
ds
jo
(bad)
sti
adc
popf
push
inc
fimul
xor
mov
add
push
sbb
dec
arpl
pop
xchg
push
dec
inc
or
jo
mov
sbb
jno
or
push
daa
and
shl
push
add
dec
fimul
dec
cmp
adc
add
addr16
je
add
jg
xor
dec
jg
cs
xor
loopne
enter
add
cmp
cmp
pop
or
push
sub
ins
push
push
je
add
outs
sbb
cmp
cdq
push
add
add
shr
lock
inc
bound
mov
rcr
out
push
cmp
jbe
or
add
jno
xor
dec
add
and
das
leave
call
pop
push
xchg
push
mov
scas
imul
xor
or
or
aam
dec
jae
sahf
cdq
adc
scas
test
mov
push
and
mov
push
mul
or
ret
data16
mov
add
fimul
inc
add
push
inc
mov
push
pop
cmp
pop
push
xchg
inc
js
cmp
xor
je
ins
jle
pop
mov
inc
xor
inc
add
clc
scas
outs
mov
nop
cmps
cmp
jae
push
or
pop
outs
shl
sar
adc
test
add
xchg
push
adc
loopne
sbb
mov
push
mov
scas
add
jg
das
sahf
movs
out
dec
or
mov
pop
and
push
adc
cwde
pushf
pop
lds
xor
shl
pop
dec
push
es
scas
out
adc
dec
aaa
add
rcr
je
imul
push
shr
bound
test
add
xchg
push
imul
cdq
loopne
or
or
into
or
and
shr
mov
nop
dec
sbb
or
inc
jl
lods
adc
inc
sti
push
clc
fisub
in
or
or
mov
loop
jns
or
es
and
mov
cmp
mov
mov
push
xchg
and
adc
dec
scas
test
sub
mov
push
jb
ins
test
or
xor
xchg
dec
sar
add
mov
mov
adc
pop
in
lods
sbb
sub
scas
cmp
inc
mov
sbb
mov
sub
jecxz
iret
add
cdq
nop
inc
fs
add
add
mov
rcr
sbb
push
jp
aad
adc
push
arpl
jns
push
inc
inc
adc
add
sbb
push
sub
xchg
mov
inc
ret
sbb
sbb
mov
cwde
aam
daa
jo
mov
push
adc
mov
movs
push
sbb
fs
jle
movs
and
imul
shl
ins
xor
fadd
push
imul
push
daa
daa
mov
xadd
sbb
jmp
push
push
push
sub
ror
dec
ss
mov
pushf
das
xor
cld
push
inc
dec
push
sbb
pop
pop
fiadd
hlt
fild
jp
dec
or
inc
add
mov
dec
enter
xor
je
fwait
adc
mov
jl
test
sub
add
xchg
push
outs
ins
xor
mov
push
xchg
push
or
(bad)
xor
sbb
xlat
and
enter
pushf
mov
jno
and
(bad)
add
or
xchg
es
push
shl
or
sbb
push
sub
sbb
dec
(bad)
add
adc
jecxz
xchg
add
(bad)
pop
mov
mov
push
mov
pop
adc
cmp
add
jno
and
pop
addr16
push
sbb
mov
cmp
retf
add
inc
add
add
xchg
xor
cvtpi2ps
je
(bad)
mov
aas
or
xchg
jge
ret
adc
cmps
stos
push
dec
add
add
jne
push
and
(bad)
jo
mov
aam
pop
int
xor
call
cli
cmp
sbb
xlat
adc
fwait
loopne
cmps
or
xlat
stos
and
and
test
shr
je
add
add
push
mov
add
ror
test
movaps
xlat
sbb
lock
fld
push
adc
call
scas
loope
mov
push
or
adc
shr
div
cmp
jp
and
add
outs
adc
rol
pop
or
rol
aam
movntps
and
push
inc
icebp
sub
cmps
xor
test
adc
jnp
shr
in
fiadd
enter
es
push
mov
xor
clc
adc
iret
data16
xchg
popf
add
call
inc
adc
jmp
das
retf
int
pop
jae
push
or
rcl
les
mov
retf
xlat
sub
push
call
daa
or
add
fmul
in
fiadd
pop
add
sti
fidiv
mov
(bad)
push
xor
das
xchg
adc
or
lods
clc
jg
or
loopne
stos
cs
and
add
imul
test
cmp
dec
rcr
arpl
ret
aas
xor
add
aas
or
es
aas
lods
xor
jp
ror
or
inc
mov
ins
push
lods
push
mov
out
or
in
push
jae
loopne
push
xchg
daa
daa
daa
xchg
iret
adc
enter
pop
stos
stc
sbb
leave
push
xchg
or
repnz
fs
mov
jb
xor
scas
aam
sbb
cli
xor
addr16
mov
out
adc
inc
sahf
pushf
mov
rcr
mov
sahf
push
cs
adc
(bad)
and
sub
(bad)
hlt
sbb
outs
or
nop
add
(bad)
dec
xor
xor
pop
inc
retf
test
adc
or
inc
pop
or
jae
aas
mov
jne
xor
fld
mov
sbb
adc
pop
inc
ror
xlat
sub
clc
bound
push
add
ins
adc
rol
or
outs
add
rol
pop
and
imul
ja
and
popa
pop
call
and
test
int
push
xchg
and
xor
jl
pusha
adc
pop
xchg
jp
loopne
or
es
xchg
and
rcl
imul
fcom
stc
inc
adc
pop
dec
adc
pop
in
fadd
sar
rol
movs
inc
das
ins
scas
ror
pop
call
ins
iret
pusha
mov
loopne
pop
jno
or
adc
add
aad
sar
inc
add
loopne
aam
push
jl
outs
pop
rol
dec
add
xchg
pop
add
xchg
mov
jno
in
scas
mov
add
inc
push
xchg
fwait
aam
xchg
es
sbb
movs
ins
cmp
sub
es
push
mov
dec
mov
sub
adc
sbb
and
movs
or
nop
js
mov
aad
pop
cwde
xor
add
lock
add
add
mov
adc
nop
outs
sbb
dec
shl
push
add
stc
jae
daa
fld
and
and
sbb
jb
jl
or
imul
les
dec
dec
add
jb
in
sbb
inc
sti
cdq
push
add
add
pushf
ins
outs
adc
nop
or
(bad)
fdivr
rcr
inc
jbe
and
xchg
xlat
and
add
add
add
adc
les
int3
add
jecxz
mov
and
lea
sub
mov
sub
or
mov
mov
bound
out
push
fistp
sub
adc
sahf
xchg
jmp
add
inc
imul
or
add
add
jno
pop
xor
fnstsw
aam
adc
or
ror
add
retf
fsubr
shl
mov
xchg
je
adc
dec
shr
inc
or
or
or
cmc
pusha
sub
adc
pop
dec
sbb
jo
dec
aas
adc
pop
ja
sbb
das
into
push
mov
(bad)
jmp
loopne
dec
xor
call
and
or
pop
xchg
push
stos
popa
ins
mov
aaa
ret
frstor
add
or
push
shl
xor
fcomp
dec
add
rcr
idiv
push
sub
addr16
mov
xor
jo
jecxz
mov
stos
(bad)
jne
cld
mov
pop
je
sub
mov
or
jne
das
or
das
xor
fsub
xchg
or
mov
mov
and
pop
scas
nop
inc
mov
mov
lods
cmps
mov
es
test
inc
fadd
aam
add
add
mov
pop
mov
in
add
bndstx
push
mov
or
sbb
fwait
push
or
mov
mov
dec
dec
scas
push
out
fbld
out
push
pop
lea
push
iret
push
mov
inc
xor
aaa
enter
gs
scas
rol
add
push
sti
(bad)
xor
add
out
push
ja
fmul
sub
idiv
test
and
or
mov
sbb
scas
sbb
adc
sahf
or
pop
xchg
cmp
add
add
mov
lods
inc
sbb
into
push
ficomp
hlt
sbb
pop
lahf
mov
ja
push
push
jns
add
icebp
(bad)
mov
push
inc
jno
aas
push
mov
pusha
mov
mov
push
cmp
cs
fidiv
pop
(bad)
or
(bad)
push
sub
out
mov
repnz
fnsave
mov
push
mov
in
(bad)
and
(bad)
retf
jb
xor
pop
hlt
dec
xchg
jecxz
cmp
jns
cmc
push
mov
or
inc
mov
dec
dec
inc
sahf
push
not
ret
daa
and
out
clc
xor
daa
daa
daa
lahf
in
es
mov
xchg
xchg
dec
jno
icebp
aas
mov
pushf
fsqrt
emms
pop
test
sahf
jne
jle
ror
pop
es
aam
dec
mov
ror
add
dec
xchg
dec
inc
mov
cmps
xchg
xchg
outs
test
inc
sbb
call
pop
scas
dec
add
lods
inc
mov
outs
mov
jg
xchg
or
jb
mov
popf
jmp
bound
ins
push
pop
mov
pop
outs
jo
or
push
sub
xor
jbe
inc
mov
adc
sub
jmp
jmp
fcomp
arpl
mov
sub
aas
or
dec
int3
jp
outs
mov
push
xchg
and
mov
call
gs
mov
outs
lea
inc
mov
outs
or
outs
shr
xchg
pop
push
pusha
(bad)
mov
in
push
dec
sub
inc
shr
inc
mov
ins
jae
or
mov
xor
outs
ins
imul
ss
ss
nop
cwde
outs
xchg
popf
test
add
add
xchg
outs
and
mov
push
add
fsubr
scas
push
inc
bound
outs
cwde
jne
pop
dec
es
outs
int3
cli
aad
cmp
add
mov
add
push
ss
(bad)
jne
push
push
jae
pop
sbb
daa
cmp
test
outs
cdq
mov
mov
pop
or
adc
outs
jge
inc
int
and
dec
sbb
(bad)
fld
mov
or
fstp
imul
sub
outs
xchg
dec
add
mov
outs
dec
(bad)
mov
and
pusha
mov
es
bound
(bad)
push
bound
cwde
and
jb
adc
imul
inc
or
sub
les
pop
adc
dec
imul
ja
sbb
(bad)
mov
jmp
add
rcr
mov
dec
or
lods
les
les
mov
and
jmp
and
pop
add
sbb
mov
pop
and
and
push
mov
sub
lea
push
std
pop
jno
mov
add
push
pop
jno
mov
pop
and
pushf
jl
leave
and
mov
push
cmp
add
mov
lods
call
loope
sbb
cwde
jne
fldcw
pop
xchg
add
pop
inc
xor
ins
xor
push
push
xchg
scas
or
push
or
jns
inc
mov
and
push
(bad)
stc
inc
pusha
adc
or
stos
jno
cmc
cmps
movs
test
dec
in
or
stos
cmp
pop
stos
cmp
stos
dec
pop
in
dec
js
xchg
cmp
stos
aaa
sbb
add
mov
mov
es
sub
call
(bad)
div
add
(bad)
call
imul
xor
imul
out
fld
mov
pop
push
add
push
fimul
inc
or
addr16
mov
or
push
push
lods
or
push
mov
add
push
stos
mov
popa
sbb
push
mov
xor
in
into
add
add
hlt
mov
pop
push
add
or
nop
jg
sub
and
push
add
nop
out
mov
(bad)
fadd
pop
fsub
sub
cmps
cmp
out
and
ja
retf
loopne
adc
push
jecxz
ds
adc
aaa
pop
pop
or
mov
ror
daa
add
or
and
jne
rcr
test
push
adc
into
push
sub
jg
push
pop
aam
sbb
mov
(bad)
xlat
jbe
in
lds
int3
push
add
pop
mov
pop
stos
pop
cli
inc
push
pop
inc
lods
mov
pop
pop
rol
ret
inc
(bad)
loopne
xchg
push
pop
mov
leave
lods
(bad)
ud0
push
imul
out
sbb
pop
mov
idiv
pop
cmovp
ret
push
sahf
daa
and
in
adc
inc
jp
daa
daa
daa
(bad)
sti
inc
or
enter
leave
adc
pop
leave
leave
leave
leave
jle
(bad)
in
in
fs
or
cmps
loope
jb
repnz
ret
or
xor
fs
mov
pop
ja
push
dec
(bad)
(bad)
stos
push
push
test
loop
add
jmp
or
xchg
(bad)
(bad)
dec
or
sub
jecxz
jne
shl
je
jl
cmp
and
push
cmp
mov
inc
(bad)
cmc
ins
mov
jg
inc
mov
jne
jle
adc
jne
cmp
push
enter
bound
pop
dec
int
ins
push
mov
aam
or
rol
ja
inc
mov
adc
in
sbb
jmp
jne
add
jge
xor
cld
xchg
inc
mov
add
sbb
xchg
and
das
leave
call
sub
imul
sbb
jne
inc
push
inc
or
xor
push
repnz
ins
iret
add
push
mov
mov
aam
or
xor
adc
push
jne
inc
sub
xchg
jne
pusha
xor
ins
xchg
cdq
lea
sbb
nop
cwde
jne
cmp
dec
add
push
add
jne
xchg
and
inc
lods
jne
les
jne
sbb
jne
fstp
and
jne
test
mov
nop
inc
jne
cmp
xchg
dec
es
dec
into
push
jae
jne
dec
aaa
add
push
mov
mov
test
push
and
jne
es
xor
add
jne
xchg
adc
dec
add
sub
ret
test
xor
push
jmp
jne
dec
or
(bad)
call
jecxz
sub
nop
adc
xchg
pusha
xlat
sbb
jne
sub
cmp
mov
es
leave
push
xor
push
sub
aad
pop
xchg
mov
mov
jne
in
sub
inc
add
jne
dec
mov
or
pop
pop
cmp
push
and
sbb
fnstsw
mov
mov
or
rol
and
cmp
cs
rol
inc
test
test
test
adc
dec
push
xor
or
xchg
ds
pop
or
ffree
push
shr
add
fisubr
sbb
xor
gs
xchg
push
aaa
add
ficomp
xchg
pushf
mov
outs
ins
imul
outs
add
or
inc
popa
add
inc
adc
test
nop
mov
adc
lock
in
rcr
add
adc
test
pusha
adc
jnp
add
loop
inc
loopne
mov
push
dec
jns
add
lods
pop
fdivr
cmps
or
test
scas
dec
stos
fcom
loopne
hlt
add
frstor
lds
adc
adc
sbb
add
adc
push
daa
xchg
(bad)
rcr
push
mov
lods
lods
push
aaa
fimul
push
cmps
(bad)
jo
dec
test
dec
daa
neg
stos
inc
sub
cmp
pop
mov
pop
push
xor
pop
sbb
xchg
dec
inc
sub
xchg
ret
add
push
xor
adc
or
jle
push
aas
push
inc
ds
into
fstp
add
inc
pushf
or
cmp
adc
pop
or
(bad)
push
add
or
push
add
aas
pop
clc
fisubr
adc
sub
daa
or
nop
mov
ror
and
aas
(bad)
movs
test
dec
inc
jno
and
gs
adc
mov
add
popa
add
mov
dec
adc
or
or
mov
add
fst
jnp
mov
loopne
pop
or
outs
(bad)
mov
mov
xor
test
or
mov
jge
adc
pop
push
dec
mov
or
mov
add
imul
sbb
shr
fimul
lds
stos
ror
cli
xchg
cmovne
das
inc
cmp
and
das
inc
test
add
retf
add
stos
xchg
or
ins
jbe
add
sbb
cld
das
sbb
jnp
inc
xor
(bad)
(bad)
in
mov
ss
pop
push
and
push
(bad)
loope
adc
add
mov
add
dec
pop
sbb
int
mov
inc
shl
push
rcr
push
inc
sub
dec
sbb
cmp
fbld
ins
es
das
mov
push
pop
ror
jo
fistp
inc
and
sub
scas
xor
rcr
add
cs
or
mov
cmps
sub
jl
ja
sti
cld
call
sbb
test
push
and
adc
or
pusha
shl
inc
mov
sbb
push
or
inc
push
stos
jmp
je
inc
xchg
pusha
jns
xchg
arpl
cmps
cmp
mov
dec
xor
adc
rcr
neg
mov
pusha
sbb
cwde
sbb
das
push
fcom
out
scas
push
jp
cli
imul
mov
cld
push
add
mov
and
pop
cmp
cwde
clc
fsub
xor
out
push
sub
dec
div
sub
xchg
shl
push
jne
mov
push
jnp
test
stos
dec
sbb
mul
xchg
adc
cmp
xchg
push
inc
mov
mov
call
push
adc
and
fistp
or
push
mov
loopne
mov
dec
pop
pop
loopne
out
push
pop
adc
push
(bad)
pop
sbb
sub
imul
fimul
push
jne
inc
inc
ret
addr16
mov
sub
and
adc
pop
add
frstor
xchg
xchg
add
pop
sub
dec
dec
cmp
push
xchg
js
pop
jnp
mov
movs
push
xor
push
sbb
xchg
pop
inc
jmp
dec
js
jge
push
push
rcr
inc
call
cdq
cmps
leave
inc
sar
jno
xchg
or
sar
inc
stos
and
and
test
add
fadd
and
es
sbb
outs
das
add
sahf
sub
daa
test
shl
push
add
cmps
fadd
adc
sub
dec
call
mov
push
sub
xor
mov
inc
cs
mov
je
mov
stos
fimul
aad
jns
sub
inc
ror
adc
cmp
test
or
pop
or
pop
sub
pop
add
and
mov
in
add
cmps
int3
test
test
or
add
dec
fsubr
push
out
mov
or
jg
or
stos
movs
cs
call
stos
stos
pop
and
loopne
(bad)
jns
test
or
inc
fcos
fld
popa
inc
aad
repz
sub
nop
stos
shl
sbb
and
stos
xchg
jno
sti
cvttps2pi
sbb
add
es
mov
and
add
push
addr16
adc
lods
addr16
mov
or
mov
sub
sbb
sbb
in
scas
jmp
je
fs
je
call
add
and
sbb
push
push
cmp
cmc
push
add
fiadd
hlt
push
add
push
sub
rol
cmp
sub
xor
clc
test
push
(bad)
aad
sar
push
rol
fwait
sub
shl
mov
add
xor
inc
pop
xchg
xor
cmp
and
dec
aas
push
inc
inc
jb
ja
push
clc
jnp
sub
pop
sbb
or
dec
outs
inc
add
lods
stos
mov
cs
xor
xor
pop
mov
call
add
adc
test
(bad)
pop
loop
sbb
addr16
mov
cwde
adc
pushf
pushf
fmul
xchg
out
sbb
dec
dec
inc
pusha
test
jne
add
push
and
push
xor
mov
dec
mov
dec
or
and
aad
repz
xor
inc
arpl
jo
mov
xchg
jno
(bad)
ror
push
fisubr
xchg
sub
jmp
mov
mov
fwait
inc
push
jae
and
inc
jae
ins
je
jmp
test
sbb
aas
push
ror
add
cdq
xchg
inc
loope
cmovo
into
imul
(bad)
push
push
sub
xor
add
outs
add
or
das
repz
gs
dec
xor
push
inc
adc
rol
loopne
mov
add
aam
das
xchg
mov
cmp
jmp
push
push
mov
and
pop
sub
mov
sbb
in
test
jno
cmp
dec
test
call
outs
jae
pop
mov
daa
rol
or
xchg
add
add
xor
sbb
jp
add
sub
sbb
push
lds
fcmovne
and
mov
lock
sub
sub
pop
inc
data16
out
xor
pop
jge
dec
or
or
pop
pop
sub
mov
in
add
mov
sbb
stc
adc
adc
sbb
dec
daa
out
js
sub
rcl
inc
aas
add
jae
ret
add
dec
cld
cmp
adc
and
bound
movs
inc
inc
inc
dec
sub
sbb
rcr
jmp
test
pop
sub
jb
imul
sub
adc
mov
mov
adc
jmp
xor
clc
das
push
push
pop
mov
xor
stos
lea
dec
fisubr
inc
cld
sub
sub
ins
fucomp
xor
mov
addr16
mov
je
pop
xor
lds
add
data16
xchg
inc
xor
xor
(bad)
pushw
lahf
mov
xchg
mov
das
pop
xchg
xchg
arpl
push
lds
loope
or
mov
jo
adc
sbb
mov
aam
dec
aad
pusha
and
push
xchg
dec
xor
popa
or
popa
mov
inc
sub
add
movs
loop
jg
adc
sub
jg
int
idiv
cmp
cs
add
push
outs
cld
outs
or
sub
mov
and
shl
inc
cdq
pusha
fadd
ret
pop
cwde
dec
xor
inc
pop
aaa
loope
and
xor
inc
and
sbb
or
out
inc
and
lds
add
cmp
mov
or
push
jl
sub
out
pop
fwait
popa
add
fwait
aaa
push
mov
push
jns
jne
arpl
mov
fcmovnu
xor
xlat
or
outs
es
das
push
mov
inc
cwde
(bad)
imul
adc
out
test
ror
mov
shl
dec
add
and
aaa
out
test
fcmovu
push
fisttp
pop
mov
pusha
push
or
mov
or
mov
inc
sbb
push
push
ins
inc
jo
inc
rol
das
xlat
add
xor
sbb
scas
jne
arpl
fcmovnb
add
arpl
inc
add
out
sbb
mov
push
jne
add
cmp
fsub
pop
call
add
adc
jbe
sbb
push
dec
scas
arpl
push
pop
jl
loop
jnp
push
in
and
add
test
or
dec
data16
xchg
ret
pop
inc
jae
or
or
sub
fldcw
add
cmp
sbb
sqrtps
mov
push
xchg
fistp
inc
xor
jnp
setl
leave
enter
cmp
in
in
lock
xchg
jb
repnz
sbb
jns
in
arpl
shl
sbb
aas
sahf
pushf
pushf
pushf
jbe
stc
xor
push
dec
inc
pop
lgs
inc
je
cmp
sbb
and
mov
jnp
ret
cmp
xchg
mov
jmp
cmp
lods
dec
bound
and
dec
or
xor
loope
cmp
jno
fisttp
mov
adc
inc
out
hlt
or
add
ror
cmovns
(bad)
pop
jecxz
adc
dec
jae
fcom
cdq
adc
push
popa
jg
aam
pop
push
xchg
dec
jg
and
push
nop
add
xlat
and
sbb
repz
push
popa
outs
sub
in
and
lock
outs
or
mov
rcl
jbe
loopne
sbb
adc
cmp
push
dec
repnz
push
push
adc
enter
rol
mov
dec
xchg
add
mov
add
add
inc
das
leave
call
adc
ins
add
ins
loop
add
popa
arpl
and
inc
lods
lock
dec
jae
loopne
mov
test
and
and
push
xchg
daa
jno
jno
ss
pop
add
test
add
sbb
xor
aad
jns
add
fsubr
mov
push
inc
dec
pop
jmp
in
call
xchg
and
rcl
fld
xchg
popf
shr
push
dec
push
xchg
xchg
xor
pop
xor
mov
mov
clc
and
dec
gs
and
inc
mov
inc
mov
and
lds
dec
popa
inc
nop
nop
or
add
and
js
push
cli
jo
rcl
pop
int
dec
aaa
add
inc
inc
or
loope
mov
push
sub
in
mov
mov
sbb
ja
sbb
pop
adc
cdq
push
jp
mov
or
sbb
adc
xor
outs
lods
popa
mov
xchg
mov
adc
sti
(bad)
cli
loope
sbb
mov
or
inc
fs
loop
dec
or
dec
xor
sub
and
xchg
pop
sub
dec
push
pusha
jno
xlat
aam
or
adc
aad
(bad)
mov
mov
dec
cmp
add
not
fmul
pop
add
int
xchg
mov
add
imul
dec
mov
outs
pop
xor
xchg
out
fbstp
mov
lods
rol
or
and
sub
sub
fadd
fdivr
mov
adc
outs
fld
push
add
mov
clc
rcl
adc
js
xchg
shl
(bad)
mov
pop
ret
jmp
aas
ss
call
jg
add
popa
pop
cmp
outs
jmp
add
outs
imul
shl
outs
mov
add
add
outs
adc
inc
scas
fs
ins
outs
bound
jp
push
and
ins
mov
iret
icebp
aaa
mov
xchg
inc
jle
scas
push
dec
jmp
adc
popa
or
add
xor
cmp
cwde
mov
pop
add
dec
sub
add
pop
mov
mov
sbb
enter
lods
inc
mov
lods
add
add
data16
outs
addr16
sbb
pop
xor
sub
jmp
inc
mov
adc
shl
or
inc
inc
add
pop
das
xor
pop
cmps
ret
in
and
aad
xchg
jbe
inc
push
outs
push
or
and
or
dec
and
ja
and
loope
add
add
dec
add
push
dec
fs
inc
outs
pop
call
pop
retf
call
out
in
and
sbb
pop
pushf
mov
sub
pop
out
leave
shr
call
(bad)
shr
daa
jmp
inc
sub
cwde
ss
pusha
mov
imul
jne
xor
or
mov
inc
xor
jecxz
aad
inc
xor
adc
cdq
(bad)
jo
xchg
push
add
out
(bad)
daa
mov
cdq
push
adc
cmp
add
dec
pop
adc
rcr
addr16
push
xor
and
(bad)
ja
loop
sar
les
adc
push
ror
jbe
icebp
push
aaa
les
mov
idiv
pop
out
mov
stos
add
add
pusha
dec
push
into
push
in
das
cli
push
movs
inc
xor
js
loopne
cwde
xor
shl
and
inc
jae
ror
shl
shl
in
call
jns
push
xchg
ss
and
mov
fild
sbb
mov
iret
pop
int
dec
inc
das
sbb
dec
test
or
push
xchg
jnp
inc
daa
pop
add
inc
cs
enter
psadbw
dec
xchg
add
(bad)
(bad)
shr
adc
cmp
(bad)
push
pushf
jb
jecxz
add
and
lea
cmp
push
cwde
fstp
loope
xchg
dec
add
jl
push
push
outs
retf
sar
add
jge
and
adc
ja
add
and
xor
pop
mov
jle
adc
and
or
pop
jecxz
test
adc
jg
mov
add
xor
xor
mov
or
sub
mov
pop
and
xchg
loopne
or
push
and
sbb
int3
dec
jp
and
ret
in
sbb
vmovdqa
pop
xor
mov
mov
mov
ret
push
push
mov
push
mov
aas
mov
dec
mov
mov
mov
pop
pop
ret
push
push
mov
mov
pop
pusha
out
repnz
xor
es
mov
mov
call
pop
pop
sti
cmp
outs
dec
cmp
jne
cmp
inc
xor
ret
mov
ret
(bad)
hlt
(bad)
in
push
test
test
je
cmp
je
add
mov
movzx
fld
outs
add
cmp
ja
mov
jbe
push
add
out
jnp
shl
add
scas
inc
cmp
je
ret
pop
ret
aaa
adc
sahf
sub
xchg
jge
movs
fcom
push
(bad)
call
(bad)
scas
push
cmp
(bad)
fcomp
outs
and
jno
jb
add
sub
mov
sub
das
xor
jo
xchg
mov
movs
sub
push
mov
push
mov
push
test
inc
jne
push
cmps
pmulhuw
loop
push
push
mov
fucom
in
sbb
addps
push
mov
add
xchg
or
sub
adc
jmp
call
pop
adc
ins
add
and
and
inc
dec
fst
stos
mov
push
ins
cwde
inc
inc
mov
ficomp
hlt
test
ss
pushf
(bad)
cmp
cwde
adc
add
sub
or
outs
cmp
adc
pop
sub
dec
loopne
mov
sbb
outs
or
push
jbe
cmps
inc
das
push
push
pop
jmp
dec
out
inc
adc
cs
jnp
add
outs
pusha
xlat
push
mov
mov
add
inc
or
or
push
add
js
push
and
push
jne
scas
inc
movs
add
or
xor
pushf
clc
mov
inc
(bad)
aas
add
pavgw
mov
inc
and
inc
pop
or
sti
sar
outs
fs
gs
add
push
jo
mov
sub
(bad)
inc
in
adc
jecxz
xlat
pop
xchg
fcom
imul
and
bound
fidivr
cmp
out
add
push
daa
sub
push
pop
loop
adc
pop
mov
cmps
add
xchg
iret
inc
scas
inc
xchg
jno
imul
pop
add
and
stos
jmp
mov
pop
push
in
enter
pmullw
push
dec
ins
fmul
leave
call
leave
leave
leave
xchg
out
fdivr
add
es
mov
cmps
cmp
test
iret
xchg
shl
in
fs
aam
sbb
rol
scas
xlat
nop
cmp
mov
inc
sub
adc
add
pop
loop
inc
xchg
adc
call
inc
jne
jo
pop
cmp
int3
mov
and
je
out
test
dec
add
je
ins
inc
nop
sub
jnp
dec
jg
inc
jno
and
add
movs
test
sub
fdiv
inc
fldpi
mov
xlat
cmc
fxch
js
cmp
mov
or
push
je
test
fadd
sbb
jb
into
ins
dec
add
add
les
push
pusha
rcl
cwde
add
add
cmps
pop
mov
out
cmps
or
fistp
outs
lods
add
cmp
pop
mov
xchg
and
inc
in
(bad)
jmp
xor
push
popa
imul
fsubr
sbb
sub
imul
dec
add
mov
loopne
add
add
pop
or
arpl
add
fdiv
inc
add
or
adc
je
inc
adc
rol
sbb
and
sbb
jne
lock
push
cmp
adc
je
mov
add
pop
inc
cmovle
fldcw
pop
outs
or
push
mov
push
push
clc
add
mov
mov
sbb
dec
cmp
or
jg
mov
and
scas
pop
std
inc
inc
and
and
cmc
or
les
rcl
fwait
sbb
pop
pop
fsubr
test
loope
adc
call
sbb
adc
dec
and
cmps
xor
push
aas
fwait
push
pusha
shl
mov
xchg
dec
js
daa
stc
sub
inc
lds
lods
dec
sub
sbb
cmps
imul
sub
pusha
pop
retf
dec
inc
sub
sbb
(bad)
pshufw
mov
mov
push
inc
push
inc
adc
into
cmp
mov
sbb
add
and
sbb
adc
daa
icebp
stos
lods
xor
or
push
ret
inc
dec
pop
outs
add
in
adc
pop
mov
inc
xor
push
pushf
jecxz
and
aas
jmp
aaa
push
xor
sub
sub
stc
dec
and
push
and
in
xor
mov
sbb
mov
adc
inc
sbb
pop
cmp
mov
scas
sbb
mov
mov
pop
push
nop
shr
jmp
imul
sahf
fdiv
aam
push
add
sub
dec
or
inc
inc
(bad)
loopne
push
and
or
int3
out
and
jp
mov
mov
rol
fwait
stos
inc
mov
mov
aam
and
push
pop
add
add
add
idiv
add
sbb
arpl
and
push
pop
imul
fcom
mov
imul
pop
add
das
add
jne
ror
cmp
js
or
pop
add
idiv
or
aam
mov
imul
test
loopne
pop
pop
push
out
push
mov
xchg
dec
not
dec
push
mov
into
xor
sub
sar
add
sar
sar
pop
cmp
mov
adc
mul
pop
jo
xchg
mov
imul
mov
popa
das
pushf
inc
addr16
and
pusha
push
adc
shl
push
xlat
and
xor
js
xchg
popa
adc
pushf
fld
pop
or
push
pop
out
mov
xchg
ror
push
nop
push
mov
fdiv
ins
in
shr
aaa
retf
addr16
mov
add
inc
jmp
push
sub
bound
push
sub
loop
call
lahf
or
fwait
popf
xor
das
jbe
lahf
call
ficom
jne
inc
mov
xor
inc
or
or
mov
daa
mov
sub
xor
rcr
mov
pusha
pop
int
pop
pop
loop
inc
shl
pop
push
jecxz
and
ror
mov
add
jo
jg
inc
add
xchg
jg
ret
push
jl
in
add
gs
out
mov
add
push
adc
(bad)
lock
sub
jo
adc
aam
push
add
or
sbb
add
call
dec
pusha
mov
jmp
push
jl
ret
sbb
pusha
in
ret
sub
in
jns
or
mov
adc
lods
bound
sub
aaa
inc
mov
sub
mov
and
es
mov
hlt
inc
sub
inc
(bad)
out
loop
pusha
mov
push
jne
out
out
jns
xor
cmp
sbb
call
stos
push
push
fidiv
cmps
fistp
out
stc
or
cmp
fisttp
xchg
(bad)
outs
jb
movs
pusha
fcmovnb
ret
mov
mov
outs
mov
sbb
lods
in
outs
in
loop
sahf
retf
adc
imul
ja
es
das
imul
loopne
adc
outs
sub
mov
add
xlat
cmc
mov
push
outs
dec
mov
push
adc
sbb
ins
lock
inc
sbb
das
lds
ins
jns
and
retf
add
dec
rcr
hlt
or
je
sub
es
xor
inc
push
test
mov
cmps
push
xor
mov
mov
push
dec
push
fdiv
test
push
ins
push
push
fwait
sub
in
add
adc
add
popa
pop
xor
mov
popa
add
cmp
ret
aaa
in
and
and
lods
pop
add
pop
ja
fisub
mov
sub
es
push
adc
or
dec
outs
data16
xor
push
mov
(bad)
sahf
iret
xor
or
jo
(bad)
xor
aaa
pop
push
pop
sub
adc
test
mov
push
push
sbb
push
mov
fisub
outs
mov
push
enter
mov
xadd
outs
leave
leave
leave
leave
sub
loop
pop
addr16
jo
xrelease
mov
es
jo
and
jmp
sub
inc
in
call
push
std
or
inc
inc
popa
and
je
addr16
mov
mov
imul
xchg
add
jno
outs
aam
fiadd
jecxz
ret
push
shl
add
out
and
pusha
mov
mov
je
or
add
dec
mov
inc
loope
mov
add
push
and
dec
add
repnz
pushf
xor
add
and
or
les
fild
repz
daa
pusha
push
cmp
mov
test
sbb
sub
fs
or
or
pusha
push
push
sub
inc
inc
add
jns
push
lock
mov
or
xchg
shl
and
dec
add
in
(bad)
(bad)
pop
xchg
out
push
loopne
sbb
shr
call
cmp
push
outs
or
xchg
jae
add
int3
out
out
outs
add
movs
cs
xor
mov
lds
js
mov
or
push
scas
and
push
mov
or
add
scas
pop
adc
ret
dec
jns
in
pop
cmp
jmp
enter
adc
adc
add
nop
add
ror
cmp
xor
pusha
push
hlt
sub
add
jae
add
xor
cdq
push
add
out
ret
inc
inc
or
inc
dec
adc
sub
pop
pusha
and
les
dec
jl
popa
cmp
mov
das
push
dec
mov
aas
or
cs
outs
push
shl
inc
lea
popf
and
in
cvtpi2ps
test
add
cmp
push
sbb
inc
gs
jne
je
ret
fild
enter
sub
das
sub
jecxz
xor
pushf
xor
push
int
loop
inc
mov
arpl
pop
push
push
pusha
je
fisubr
das
add
push
push
dec
cmp
test
jl
std
int3
add
aam
add
xchg
add
inc
mov
jnp
mov
rcl
or
sbb
and
jg
mov
ja
cmp
or
ds
dec
mov
and
sbb
push
adc
inc
pop
das
aaa
add
les
sbb
fistp
jno
(bad)
jbe
xor
cwde
jp
fstp
mov
push
test
mov
adc
and
cli
push
sbb
hlt
ins
push
movs
push
vmread
jnp
cmp
sub
pop
sub
adc
or
adc
xchg
jo
pop
pusha
inc
fcomp
xchg
sub
mov
xor
xor
leave
ins
dec
jne
xchg
fsubp
push
dec
jbe
jns
inc
outs
enter
jnp
(bad)
or
in
leave
leave
dec
mov
and
repnz
fs
retf
add
jb
dec
or
cmp
dec
xchg
fild
pushf
pushf
pushf
mov
dec
jae
dec
inc
sahf
pushf
loopne
jg
mov
dec
dec
mov
xor
mov
pop
pop
adc
ja
fimul
push
es
sub
not
and
and
xor
dec
fimul
mov
enter
imul
bound
fild
xor
dec
add
mov
stos
dec
pmaddwd
pop
cmovge
fcom
add
mov
xor
push
popa
jg
ret
data16
jg
add
das
xor
adc
mov
cmp
or
outs
addr16
movs
inc
ss
ins
inc
outs
cmp
je
sbb
xchg
or
adc
imul
ja
mov
dec
stc
push
push
or
push
pop
or
enter
xor
mov
mov
push
adc
jnp
or
dec
test
rol
and
das
leave
call
gs
(bad)
adc
push
popa
arpl
pop
dec
int3
cmp
cld
bound
dec
jae
and
xor
jnp
mov
lock
int3
fwait
jno
jno
fimul
add
idiv
imul
add
or
sbb
inc
push
add
lea
and
sub
pop
sub
or
lock
mov
and
jmp
jb
dec
push
pop
xor
cdq
ss
push
pop
(bad)
xchg
sbb
add
add
xchg
xor
pop
xor
push
cwde
push
lock
lahf
or
ja
and
inc
xor
inc
push
mov
xchg
rcl
push
and
(bad)
nop
loopne
pop
bound
in
or
cli
jo
rol
pop
int
dec
aaa
add
inc
inc
or
loope
mov
call
loopne
dec
pop
pop
or
bound
jbe
sar
sar
mov
push
or
ret
int3
sahf
adc
xor
ret
push
inc
jl
rcl
popa
pop
adc
(bad)
cli
(bad)
dec
cmp
xchg
or
test
loop
dec
or
repz
sbb
popa
add
xor
popa
pop
add
or
xchg
loop
ror
int
shr
retf
and
mov
xor
mov
dec
mov
sub
and
push
pop
stos
mov
mov
and
shl
xor
(bad)
or
inc
imul
add
xor
lea
movs
lods
aaa
mov
add
pop
adc
enter
sub
sub
xor
les
or
fld
dec
xchg
add
add
or
test
(bad)
or
test
(bad)
bound
(bad)
inc
ret
xchg
adc
push
ret
adc
add
lea
gs
mov
bound
adc
add
jbe
cmovle
movs
adc
xor
mov
xchg
dec
retf
xor
les
xor
pop
movs
shl
int
cmp
push
iret
adc
dec
add
movs
add
jg
test
xchg
sahf
push
jg
jne
imul
cs
aam
xchg
push
push
xlat
(bad)
sbb
outs
lahf
icebp
mov
test
cmp
mov
xchg
jne
add
out
sub
pop
repz
push
add
cmp
push
add
movs
add
int
lea
adc
daa
stos
push
retf
leave
push
cmps
into
adc
or
fisub
cwde
xor
inc
xchg
idiv
add
xor
out
dec
lds
retf
xor
inc
fs
sbb
xor
fwait
or
inc
sti
xchg
(bad)
popf
pop
mov
jl
xchg
push
retf
lds
inc
add
fcomp
ins
sbb
lahf
mov
mov
sbb
push
push
scas
mov
sub
mov
mov
mov
push
sar
xchg
daa
stos
inc
push
test
mov
mov
es
jge
cmps
loopne
and
in
int3
fdiv
xor
push
xchg
dec
fst
cmps
test
(bad)
fimul
pop
sub
xchg
into
jo
push
xor
test
inc
or
push
retf
adc
pusha
test
loopne
mov
add
cs
adc
ins
cmp
pop
outs
mov
adc
cmp
add
jecxz
sub
les
xor
clc
outs
mov
in
rcl
push
ins
add
mov
sub
xchg
and
pop
fidivr
or
sar
mov
repnz
push
xchg
xlat
or
xchg
inc
lods
mov
xchg
jmp
mov
sub
jecxz
or
mov
inc
pop
test
out
xchg
push
xchg
lea
nop
jb
leave
add
cmp
xchg
loope
(bad)
push
inc
sahf
pushf
pushf
mov
dec
dec
dec
mov
or
push
daa
daa
daa
daa
pushf
shl
xchg
xchg
xchg
xchg
xchg
xor
leave
leave
enter
xchg
dec
outs
into
ins
fmul
cmps
out
aas
xchg
pcmpeqw
mov
pop
aam
jbe
mov
xchg
imul
clc
es
call
in
add
dec
mov
push
mov
sar
rcr
inc
adc
cmp
xor
mov
outs
xor
shr
test
push
jns
jg
lods
fwait
test
mov
jns
pop
and
test
add
xchg
mov
push
jns
adc
jle
and
mov
ja
lock
push
or
jns
ins
push
mov
adc
jns
aam
add
dec
mov
add
xchg
or
xor
sbb
and
das
leave
call
inc
sub
or
jns
cmp
test
push
or
or
push
mov
psignd
mov
dec
push
adc
jno
inc
adc
test
or
add
mov
nop
push
pusha
jae
pushf
data16
xchg
dec
add
mov
push
jmp
jns
popf
dec
aad
xchg
cld
push
test
xor
xchg
xchg
jns
sub
daa
or
xchg
push
mov
adc
jns
mov
and
mov
xlat
jb
jns
nop
lds
mov
inc
jns
out
lods
repz
cmp
push
scas
aaa
add
xor
and
push
jns
bound
jns
push
retf
jge
daa
cmp
in
cdq
jns
test
cdq
dec
or
mov
jb
xor
adc
jns
inc
cmp
jge
inc
sti
ja
jmp
(bad)
jns
ins
inc
or
pop
out
jbe
add
sub
pop
or
mov
jns
mov
sbb
aam
or
pusha
mov
dec
xor
mov
lea
ja
mov
fdivr
mov
xchg
push
add
test
adc
rol
pop
pop
and
outs
or
ja
fnstcw
mov
or
push
xchg
adc
int3
mov
push
movs
pop
mov
inc
adc
imul
loopne
lods
cmp
cwde
push
mov
out
das
cli
push
cmp
mov
xchg
pusha
add
stos
xor
inc
or
and
push
xor
and
adc
and
or
dec
shr
cld
sbb
shl
sub
test
jne
sar
dec
and
ja
xor
adc
ja
leave
inc
pop
xchg
mov
push
add
push
and
lahf
pusha
adc
and
pop
or
movs
adc
mov
stos
mov
sub
adc
mov
push
mov
mov
mov
add
call
ret
nop
push
push
mov
(bad)
call
add
mov
mov
xor
mov
dec
mov
(bad)
out
out
inc
xor
and
lea
mov
add
mov
mov
mov
(bad)
fucomip
(bad)
mov
add
test
je
test
je
mov
mov
out
in
(bad)
aas
add
les
pop
pop
pop
ret
not
in
push
(bad)
mov
cld
mov
mov
mov
or
xchg
mov
jg
(bad)
jmp
xor
cmp
je
sub
sub
fild
mov
jne
xor
jmp
xor
sbb
outs
jmp
push
cmp
(bad)
frstor
add
aam
pop
ret
mov
rcr
fisubr
adc
loopne
mov
push
jne
mov
mov
scas
xor
mov
push
outs
pop
mov
mov
inc
cs
or
or
jae
(bad)
stos
mov
cld
mov
lea
inc
dec
cmp
subps
xchg
jbe
pop
sar
scas
ret
mov
jle
cld
and
or
daa
outs
jl
aaa
outs
jle
test
test
jle
inc
jbe
aas
sbb
fsubr
jbe
repnz
repnz
cld
and
mov
mov
jecxz
cmp
addr16
jnp
je
sub
xchg
pop
xchg
cs
je
lahf
js
jae
cld
out
outs
outs
div
or
adc
call
xchg
sub
push
es
jmp
cmps
dec
icebp
ret
mov
push
pop
mov
and
add
ret
mov
pop
cwde
dec
adc
call
or
inc
mov
call
ret
jmp
xchg
loope
jmp
mov
pop
sbb
mov
es
lds
push
adc
out
ds
loopne
jne
sub
imul
mov
data16
or
xchg
movs
hlt
mov
leave
and
push
cmp
and
loop
pusha
mov
sub
xor
adc
ins
clc
jb
mov
push
jne
cmp
fsub
inc
test
je
sub
mov
mov
mov
arpl
push
loope
sub
lock
ins
mov
xor
adc
jl
cmp
(bad)
iret
outs
lods
enter
js
test
and
int3
or
push
or
(bad)
mov
(bad)
div
mov
not
pusha
popa
loopne
pop
cmp
mov
shl
mov
and
mov
stc
xchg
dec
sub
and
in
je
xchg
in
pop
in
mov
dec
add
rol
call
push
xchg
push
test
xchg
popf
xlat
inc
push
adc
mov
jno
(bad)
xor
aas
xlat
pushf
pop
and
in
stc
push
mov
inc
lock
lahf
loop
nop
imul
mov
xchg
fiadd
xchg
in
in
push
test
or
jb
mov
call
and
add
sbb
or
call
add
mov
test
loope
push
and
cwde
imul
push
fisub
xchg
mov
add
sub
mov
adc
mov
xor
inc
inc
add
ja
or
adc
jo
add
and
jge
push
cmp
sub
clc
sbb
fidivr
in
je
inc
push
arpl
add
xor
jbe
inc
gs
mov
cmp
jb
or
jb
xchg
fld
enter
or
cmp
fadd
data16
mov
not
jne
mov
out
mov
ret
daa
shl
jo
xchg
addr16
jb
sbb
pop
xor
imul
cmp
jne
mov
mov
inc
icebp
and
lods
pop
jns
add
jb
jno
js
in
hlt
xor
loope
rol
add
add
pop
stos
push
(bad)
adc
cli
outs
cmp
xor
push
ss
and
cmc
loopne
sbb
pop
add
mov
sahf
pushf
loopne
repz
aam
xchg
sbb
adc
aam
jmp
sub
pop
js
or
sbb
out
add
xchg
test
call
repnz
ss
add
cld
xor
cmp
adc
jle
daa
add
jne
or
les
adc
mov
or
outs
je
popa
inc
inc
mov
or
adc
(bad)
aad
mov
adc
mov
dec
push
shr
inc
mov
std
int3
xor
sub
jge
nop
dec
sub
mov
sub
jo
adc
(bad)
sbb
add
ror
jle
(bad)
jmp
pandn
xor
pop
xlat
cmp
push
mov
inc
(bad)
adc
call
(bad)
sar
push
pop
mov
add
adc
pop
xor
mov
sahf
cdq
mov
jl
inc
fdivr
mov
or
lds
inc
add
or
push
inc
sbb
cmps
xchg
arpl
pop
int
xor
mov
js
ret
mov
clc
mov
jp
dec
sub
cmp
mov
fsub
ror
les
lock
xchg
mov
xor
mov
sbb
test
cmp
push
loope
aaa
rcl
ins
sbb
add
jmp
movs
ja
add
lods
nop
aam
add
div
push
sbb
jo
xor
xor
fadd
(bad)
inc
imul
stos
sbb
test
pop
loopne
je
stos
mov
push
outs
push
push
test
mov
scas
retf
mov
fist
jo
call
sub
push
sbb
cwde
pusha
inc
sbb
inc
(bad)
aam
inc
pop
mov
xor
loope
sbb
xchg
loopne
fwait
jmp
cmp
movs
out
cmp
fcomp
add
imul
add
lds
cmp
out
jbe
ror
xchg
jl
adc
rcr
fadd
sbb
dec
fmul
test
(bad)
scas
shl
sahf
cmps
inc
nop
mov
retf
jns
lahf
cmps
sbb
shl
sub
jo
lods
push
out
or
mov
xor
popa
retf
(bad)
or
aas
fisttp
cld
aas
cmps
lock
popa
or
gs
mov
lea
movs
adc
(bad)
shl
(bad)
push
es
push
mov
push
xchg
push
icebp
and
loopne
mov
jnp
and
add
fistp
nop
and
jmp
loopne
mov
mov
jp
or
sti
add
push
loopne
mov
xchg
or
adc
call
mov
jecxz
xor
push
ja
mov
fsubr
mov
(bad)
mov
pop
mov
aaa
push
ror
aad
jg
call
mov
add
fsub
sub
scas
jg
xor
and
hlt
mov
inc
into
popf
and
pop
jl
jmp
nop
and
cli
shl
shl
mov
pop
es
mov
lods
cmp
mov
popf
int3
dec
adc
das
out
aaa
cmp
adc
cmp
jns
test
into
out
dec
repnz
cmp
popf
ja
inc
push
popf
or
cs
test
cmps
ja
ret
inc
push
add
arpl
mov
bound
lds
inc
sub
and
jl
pop
js
adc
cwde
push
and
clc
push
add
into
lds
jb
mov
jmp
inc
xor
and
out
loopne
lods
arpl
or
sbb
test
shr
dec
or
out
add
xchg
sub
cmp
mov
or
add
iret
pop
enter
inc
leave
fs
or
sbb
ins
xchg
aas
std
hlt
js
retf
add
std
imul
sub
clc
lock
arpl
sbb
jecxz
add
add
outs
nop
fdiv
adc
in
jae
rol
test
jae
inc
mov
adc
sbb
and
ret
add
addr16
icebp
xchg
lods
cmp
(bad)
push
fisubr
pop
ds
adc
add
add
push
sub
push
pop
push
out
nop
arpl
mov
mov
and
clc
dec
xchg
xchg
dec
movs
inc
stos
mov
xchg
hlt
dec
inc
test
loope
aam
loopne
sbb
xor
test
bound
add
jmp
pusha
add
das
add
ja
push
adc
pop
push
jle
das
pusha
mov
add
add
sbb
jae
mul
add
je
or
cld
addr16
jns
mov
fcmovnu
mov
or
xor
sub
pop
daa
xor
pusha
and
aam
or
popf
shl
jae
lock
sub
add
add
mov
cmp
std
sti
add
sbb
or
in
add
xor
not
cmp
cmc
daa
pop
out
add
sbb
mov
popa
or
inc
adc
push
mov
add
and
ret
sub
xchg
addr16
lods
push
push
adc
jo
fucomi
or
pop
lods
das
mov
xchg
test
lock
test
mov
sbb
dec
ror
dec
gs
pop
lock
sbb
or
sbb
add
add
movs
int
sbb
push
stos
and
add
or
test
ret
ss
sbb
sbb
pop
add
pop
in
das
or
jg
jne
sbb
adc
ja
push
mov
jo
scas
xor
pop
int3
lahf
bound
daa
mov
jb
inc
pop
daa
push
je
popf
mov
ret
popf
sub
sub
cmp
jecxz
sbb
pop
sub
aaa
pop
gs
ret
pop
(bad)
loopne
retf
adc
sbb
shl
cs
pop
outs
push
xor
push
js
sub
and
(bad)
in
pop
or
and
add
mov
push
popaw
jne
je
cmp
add
pop
sbb
or
push
out
movs
cwde
cdq
push
xor
mov
je
retf
pushf
inc
xchg
lock
xor
dec
xchg
mov
inc
popf
pop
mov
dec
and
or
or
mov
add
or
cmp
pop
push
rol
scas
pop
xor
lds
dec
scas
cld
sbb
and
cmp
pop
sbb
mov
in
sub
sub
jns
jne
arpl
lods
mov
shl
mov
test
shr
jmp
and
mov
(bad)
test
xor
and
inc
cmps
and
repnz
sub
mov
test
jno
test
xor
or
jmp
arpl
rcl
dec
rcl
push
hlt
inc
or
add
add
ins
cmp
aaa
pop
pop
or
mov
mov
jecxz
mov
or
jae
push
mov
(bad)
rcr
push
fldcw
das
mov
push
(bad)
push
xor
hlt
addr16
mov
sbb
push
inc
repnz
pop
push
push
fwait
jbe
stos
push
daa
adc
mov
mov
add
das
pop
mov
stos
dec
push
jo
pop
test
adc
jmp
or
ret
fwait
aam
and
push
cmp
dec
or
cmp
mov
lfence
or
out
mov
dec
sub
inc
cs
push
and
cmp
xor
daa
daa
mov
dec
mov
fwait
mov
leave
leave
leave
jne
cmc
inc
mov
js
or
push
jbe
sar
cmp
jns
mov
mov
fist
mov
loopne
loope
adc
pop
stos
fsubr
test
(bad)
push
pop
xor
add
jae
xchg
xchg
imul
jno
push
push
mov
xchg
pusha
shl
add
ret
push
dec
adc
ins
ret
dec
add
push
shr
shl
add
xrstors
in
mov
mov
dec
jae
retf
sub
push
adc
add
push
popa
jg
xor
dec
jg
pusha
outs
ins
xor
jle
inc
fs
jl
or
push
popa
ins
jne
lahf
imul
add
add
bound
push
popa
outs
sub
xchg
fst
push
ins
push
push
mov
add
or
pusha
outs
cdq
jbe
call
inc
cmp
bound
dec
jae
sbb
in
cmc
enter
adc
out
or
out
xchg
popa
shr
xchg
add
sbb
or
dec
add
sbb
das
leave
mov
hlt
gs
mov
add
je
call
inc
sti
sub
pop
xor
mov
add
jae
jmp
add
cmp
and
dec
add
sub
jmp
test
sub
and
sub
or
dec
add
push
inc
push
push
sub
pop
mul
jne
mov
sbb
xchg
inc
js
jo
cdq
add
push
mov
aad
ss
sbb
mov
push
push
arpl
push
lods
or
js
pop
pop
xor
test
rol
sti
sbb
or
ja
and
inc
push
jae
(bad)
jl
dec
popa
inc
nop
cwde
push
dec
popa
add
mov
movs
push
cli
jo
cmp
sar
dec
aaa
add
inc
jl
jmp
imul
hlt
mov
and
mov
mov
sbb
mov
sar
inc
cdq
jno
add
jb
int3
sahf
adc
xor
ss
mov
outs
xchg
push
inc
sti
mov
(bad)
dec
sbb
pop
xor
inc
loop
jns
or
rcl
repz
and
sub
rcl
jbe
dec
test
cmp
lahf
mov
jb
ins
test
cmp
or
adc
mov
xor
ja
lods
mov
mov
mov
lea
sub
cmp
and
adc
or
rcr
and
and
dec
imul
ins
mov
je
add
cmp
rol
or
jnp
adc
add
inc
add
outs
sbb
or
mov
mov
je
loope
call
cmp
mov
ds
ret
test
pop
ret
call
shl
inc
mov
push
xchg
add
hlt
push
fnstsw
nop
lds
and
push
xchg
push
and
imul
shr
add
or
jne
ins
pop
mov
pop
push
mov
(bad)
fistp
ficom
ret
jb
scas
inc
punpckhbw
jo
mov
xchg
pusha
mov
es
fs
cmp
push
mov
mov
fldenv
bound
add
add
inc
call
loop
adc
mov
mov
xor
in
add
add
add
xor
add
jno
pop
lods
scas
scas
pusha
adc
push
outs
ins
push
(bad)
sbb
xlat
adc
inc
sub
stos
gs
and
inc
add
and
mov
sbb
or
or
or
xor
jl
pushf
add
outs
or
push
retf
xchg
mov
inc
rol
shl
add
inc
mov
dec
clc
xchg
cld
mov
or
pushf
(bad)
or
mov
jne
js
jne
rcr
test
jmp
add
inc
pop
fcomp
xor
cs
push
into
jmp
add
pop
and
add
nop
vucomiss
xchg
pop
ror
mov
or
mov
pop
cmp
jne
fucomip
inc
add
push
test
je
test
push
mov
adc
mov
dec
and
sar
lods
sbb
dec
mov
dec
cld
mov
jmp
add
dec
mov
rcr
mul
push
daa
clc
iret
inc
mov
mov
idiv
mov
cmp
inc
mov
mov
(bad)
mov
xchg
sub
ret
or
out
add
mov
push
inc
loopne
adc
mov
call
or
outs
fs
retf
ins
scas
test
mov
mov
rcr
mov
clc
sub
fsubr
mov
call
retf
test
rol
add
stos
push
push
nop
sbb
aas
jae
push
lods
inc
outs
pop
mov
sub
xor
frstor
jbe
add
enter
add
xor
push
scas
clc
test
and
mov
xchg
pop
push
mov
lods
loope
iret
(bad)
mov
mov
mov
div
pop
pop
call
push
dec
fdiv
jae
je
dec
inc
sub
adc
or
add
add
leave
add
xor
xchg
(bad)
mov
sub
cmps
inc
rcl
lea
das
fild
fist
inc
clc
into
or
or
adc
pusha
jmp
les
test
mov
in
or
adc
inc
rol
add
fild
and
push
pop
xor
push
mov
retf
scas
xor
push
lea
or
pop
arpl
int3
int3
push
add
mov
push
add
push
or
jne
mov
pop
retf
dec
test
(bad)
call
sar
(bad)
jo
sbb
cmp
cli
jno
push
add
lods
xor
push
sub
daa
movs
rol
js
mov
(bad)
pop
dec
pop
aaa
push
jl
jo
mov
push
or
adc
mov
addr16
sbb
push
sub
fimul
cmp
das
(bad)
iret
mov
add
shl
pop
in
sbb
sar
and
mov
mov
mov
stos
mov
and
hlt
or
inc
loopne
mov
fidivr
loopne
sbb
push
mov
jp
mov
out
adc
ror
fs
daa
daa
daa
mov
enter
mov
leave
leave
leave
pop
xchg
loopne
aam
in
fs
lods
jecxz
aad
jb
xor
mov
jns
(bad)
ds
pushf
mov
sti
and
inc
jge
inc
sahf
pushf
(bad)
and
dec
pop
fisttp
push
scas
loope
inc
push
ins
(bad)
push
push
add
push
jmp
sbb
xor
sbb
dec
out
dec
or
ror
pop
jmp
je
movs
cmp
dec
sbb
jmp
shl
xor
mov
and
push
aad
adc
ins
and
not
lds
cmp
jl
mov
adc
mov
adc
nop
outs
or
push
sbb
adc
nop
pushf
adc
or
test
aad
adc
jae
into
test
js
mov
sub
rcl
shl
xchg
and
das
leave
call
gs
mov
adc
add
adc
aad
sbb
pop
and
nop
aad
push
aad
iret
pusha
add
xchg
aad
push
adc
xchg
aad
push
add
aad
ror
inc
sbb
aad
xchg
jo
add
cdq
ss
cwde
push
ret
dec
and
xchg
popf
and
mov
aad
rol
xchg
xchg
aad
and
ror
xchg
sbb
adc
add
loopne
sub
nop
cld
mov
and
sub
aad
dec
(bad)
ror
aaa
mov
push
ins
adc
add
imul
add
bound
jae
add
movs
cdq
inc
or
add
cdq
and
test
jns
push
mov
inc
xor
and
add
jge
mov
aaa
dec
sbb
rol
and
adc
mov
sbb
pop
xchg
aam
jo
adc
inc
pushf
mov
xchg
xor
xchg
xor
test
fsubr
jno
push
sub
and
push
pop
mov
rcl
aad
and
push
sub
aad
outs
rol
mov
scas
xor
aad
jbe
cmp
jns
shl
and
or
bound
sub
loopne
mov
xor
bound
in
inc
nop
sbb
lea
loopne
adc
push
add
mov
cmp
fst
ficom
add
(bad)
out
sbb
mov
mov
mov
mov
das
int3
(bad)
pop
or
fadd
pop
and
lea
xor
adc
mov
loopne
add
sar
mov
adc
test
push
push
lock
pop
aaa
mov
adc
call
inc
and
call
inc
rol
mov
adc
(bad)
call
add
arpl
sbb
mov
mov
test
jle
sbb
inc
imul
or
add
mov
pop
xchg
mov
dec
stos
dec
cmps
and
cmps
pop
pop
xor
add
out
push
fild
adc
add
xor
push
aaa
es
test
dec
sub
adc
jg
add
(bad)
mov
std
add
div
mov
cmc
add
mov
pop
or
inc
pop
mov
cmovbe
mov
fcom
outs
mov
add
pop
push
adc
pop
mov
sbb
cs
in
stos
push
mov
add
xchg
xor
fsubr
(bad)
jne
pop
xchg
aad
outs
cmp
push
int3
dec
mov
xor
popa
xor
adc
out
frstor
jbe
add
ficomp
fsubr
neg
xor
pop
pop
cmp
loopne
xlat
mov
out
jo
into
add
push
out
xchg
aad
xor
or
sar
mov
sub
pushf
loop
mov
mov
mov
inc
aam
dec
inc
sub
add
cmp
xchg
or
mov
stos
add
in
cmp
sbb
dec
ins
pop
push
add
push
lgdtd
cmp
add
vmwrite
cmp
cmp
nop
loopne
push
jg
push
and
push
imul
jae
add
sub
push
in
fs
sbb
add
(bad)
dec
dec
rcl
fisubr
out
adc
sbb
inc
add
inc
jo
push
jl
add
cmps
das
mov
adc
cmps
inc
mov
dec
xor
push
add
cld
out
lods
mov
cld
shl
idiv
dec
adc
adc
mov
adc
push
inc
or
pop
dec
pusha
test
sbb
rol
pop
test
mov
inc
idiv
or
mov
add
jne
icebp
jo
test
add
dec
out
js
test
or
fsubr
loop
sub
mov
in
push
and
ja
and
sub
push
mov
inc
fsubr
and
jae
push
add
push
xor
ja
pop
pop
pop
inc
sar
out
dec
push
jbe
jnp
adc
jbe
push
jmp
call
(bad)
jne
cmc
daa
daa
and
jmp
xchg
xchg
daa
xor
imul
mov
jb
dec
ins
xchg
and
dec
mov
adc
dec
daa
daa
daa
daa
xchg
shl
sbb
push
fwait
imul
out
or
push
pop
or
(bad)
inc
mov
stos
mov
lea
xor
sbb
dec
dec
dec
or
sub
cmp
test
fiadd
jno
push
mov
jmp
xor
add
inc
shr
test
mov
sub
or
cmc
jne
div
(bad)
or
adc
sub
add
jbe
sub
ja
pusha
mov
test
rcr
inc
test
fimul
sbb
cmp
test
adc
dec
(bad)
leave
call
and
sub
pusha
mov
test
and
xchg
cmp
sub
mov
iret
dec
add
adc
dec
inc
sbb
mov
test
inc
test
push
add
add
test
sbb
and
cdq
inc
rcr
lock
dec
add
add
dec
adc
pop
xchg
test
ror
sub
and
jo
and
inc
inc
adc
nop
pusha
test
dec
add
jae
test
ret
sub
sbb
test
inc
and
test
add
or
jae
mov
ins
das
test
cdq
dec
and
mov
loopne
test
bound
xor
push
inc
sti
push
add
adc
test
test
sbb
add
pop
add
in
or
or
test
dec
adc
inc
test
xchg
xor
fsubr
xchg
xor
daa
sbb
xor
sbb
add
rcr
cwde
adc
sub
inc
or
test
xchg
arpl
stos
cmps
pop
imul
pop
mov
inc
rcr
out
mov
and
(bad)
pop
add
loopne
fld
push
pop
inc
inc
and
add
push
inc
inc
fnstcw
add
and
fsincos
or
jg
push
call
sub
call
test
cmp
in
adc
out
in
sbb
mov
cmp
dec
xor
mov
and
aam
inc
(bad)
pusha
dec
add
and
push
push
push
cmp
fwait
outs
mov
mov
test
jl
inc
xor
lea
(bad)
dec
mov
mov
call
inc
dec
jne
push
rcr
(bad)
sti
jle
dec
mov
dec
cli
mov
jg
(bad)
mov
xor
out
retf
xor
lea
mov
xchg
ds
ret
cmp
adc
xor
mov
cdq
push
movs
add
adc
call
or
push
push
cmp
pop
test
or
jo
je
push
push
mov
jl
ror
pop
mov
sub
in
push
cld
and
data16
ins
xor
cmp
mov
mov
pop
lea
push
retf
and
fdiv
fidiv
pop
mov
lea
cmp
ror
ret
jmp
adc
or
or
mov
rol
add
jbe
ja
xor
jmp
and
movzx
and
mov
adc
xchg
inc
test
loope
push
pop
push
adc
ffree
pusha
fiadd
push
test
outs
test
js
mov
push
iret
lahf
in
aas
jle
scas
mov
inc
sbb
out
movzx
xchg
or
dec
iret
mov
mov
push
jnp
aas
push
outs
xchg
into
push
mov
mov
call
or
pop
sbb
das
mov
movs
(bad)
retf
xor
or
mov
call
jle
sub
adc
inc
dec
mov
clc
lock
mov
mov
inc
test
add
push
adc
mov
push
pop
das
shr
sub
les
or
add
clc
adc
jmp
push
hlt
in
dec
mul
xchg
ss
hlt
bound
adc
in
dec
jg
and
cmp
jne
cmp
cmp
call
push
add
inc
or
dec
test
jne
stos
jmp
mov
dec
(bad)
in
sub
mov
in
inc
sahf
repnz
push
aas
cmp
xchg
mov
adc
add
lock
add
dec
jne
out
dec
add
mov
mov
mov
sbb
scas
lods
call
test
sbb
push
stos
add
cmp
lahf
ret
(bad)
jle
ret
mov
mov
sahf
mov
not
jle
aaa
jbe
mov
cli
rcr
jmp
inc
add
cmp
(bad)
jl
je
gs
ja
cmp
or
leave
mov
inc
sbb
push
mov
or
push
mov
xor
xor
out
idiv
hlt
mov
mov
jl
mov
mov
inc
out
ret
or
cmp
jge
sub
enter
div
adc
or
add
sbb
add
call
inc
cmps
call
jmp
hlt
stos
lock
jg
call
inc
jo
inc
add
daa
lds
sbb
nop
outs
in
push
scas
push
fs
in
mov
jnp
add
xchg
mov
jne
mov
lods
in
out
sub
and
lds
(bad)
in
push
cmps
daa
pushf
std
icebp
adc
rol
and
and
xor
adc
mov
cmp
push
ss
push
mov
add
jle
inc
jg
das
mov
aaa
fsubrp
loopne
mov
xchg
adc
jnp
xchg
ret
adc
or
cli
inc
jle
mov
test
add
add
add
adc
js
mov
clc
add
jmp
mov
shl
fucomip
dec
dec
test
jl
inc
xor
cmp
je
jo
loopne
ss
inc
dec
jne
or
(bad)
pop
push
test
jne
dec
jmp
mov
sbb
lea
fwait
or
mov
mov
hlt
jmp
loop
cmp
repz
inc
outs
push
inc
sub
jle
sti
add
cwde
cmp
test
inc
pop
movs
mov
sti
cmps
test
jle
stos
inc
xchg
cld
adc
jo
sbb
inc
inc
call
adc
js
test
inc
lods
jo
test
pop
mov
clc
cli
adc
and
or
adc
rcr
sub
pop
mul
movs
sar
jne
clc
je
pop
cmp
mov
jl
cmp
stos
adc
ror
xor
push
add
mov
cmc
sbb
lahf
push
mov
pushf
aaa
js
or
adc
lock
or
cs
aaa
ret
adc
or
pusha
xor
xlat
mov
add
pop
or
inc
add
cmp
sub
sbb
mov
cs
cmp
mov
dec
icebp
dec
cmp
jge
sbb
pusha
sub
mov
and
or
mov
lea
test
outs
or
jns
rol
cmps
pop
jge
hlt
cmp
add
je
push
(bad)
hlt
mov
call
inc
les
xor
outs
int3
sti
inc
jbe
jno
mov
xchg
and
sar
pop
jle
push
je
cmp
enter
add
data16
jmp
scas
and
in
xor
sub
jg
dec
mov
jno
add
and
mov
in
call
dec
inc
add
or
scas
jb
xor
stos
pop
or
add
popa
add
out
sti
jge
nop
or
inc
jne
or
push
bound
add
and
inc
adc
or
jo
jae
in
test
dec
push
das
adc
add
cmp
jl
push
je
cmp
cmp
dec
cld
push
cdq
push
test
mov
dec
cmp
cmp
jle
cld
add
xor
jmp
mov
loope
add
pop
hlt
jl
xor
test
add
adc
jg
fdivr
xchg
inc
cld
or
add
sub
pop
push
adc
xor
xor
and
outs
sbb
pushf
shl
(bad)
adc
or
jmp
cs
adc
mov
push
gs
ja
int3
cmp
add
into
jnp
add
sbb
ret
add
std
daa
pop
push
add
and
mov
push
pushf
fiadd
test
mov
push
cmp
add
inc
dec
or
and
inc
pop
add
xor
arpl
pop
sbb
shl
lock
push
std
add
push
popf
lods
push
ret
loope
daa
push
int3
or
xchg
in
into
pop
rcr
mov
outs
pop
outs
adc
rcl
shl
jmp
and
jnp
inc
or
test
sub
inc
movs
inc
xchg
push
cmp
mov
sub
repnz
pop
idiv
fwait
idiv
jle
or
dec
nop
div
sbb
ins
daa
out
out
adc
add
dec
jo
test
pop
rcl
or
sub
mul
push
mov
mov
add
add
jge
or
push
call
loopne
ret
push
and
sub
mov
or
jge
cld
cmp
or
mov
in
jg
inc
ret
mov
push
(bad)
nop
lods
out
mov
cmp
addr16
mov
scas
inc
(bad)
sub
xchg
adc
adc
fistp
jo
ja
add
pushf
inc
inc
add
mov
mov
mov
sbb
inc
push
gs
nop
or
call
enter
popa
(bad)
pop
jmpw
leave
out
leave
add
mov
mov
sbb
shr
scas
outs
cmp
out
sbb
mov
xchg
or
loopne
mov
fwait
(bad)
iret
adc
imul
bound
(bad)
es
cs
je
popf
(bad)
or
cmp
loopne
jns
fadd
mov
add
arpl
cmp
mov
add
mov
sbb
xchg
dec
pop
pop
or
(bad)
shl
jo
sbb
mov
jb
jg
imul
ret
or
cmp
jl
xchg
sub
inc
mov
dec
jg
xor
stos
inc
mov
imul
in
jbe
mov
sti
add
add
cmp
inc
fmul
and
outs
jl
xor
cmp
pop
pushf
xchg
cdq
xor
loope
cmp
imul
pop
lods
jmp
out
nop
fucompp
push
fnstcw
js
add
test
in
ret
sub
nop
pop
dec
add
mov
pusha
mov
retf
ds
(bad)
mov
push
or
nop
pmulhuw
or
int3
retf
jecxz
fstp
push
push
icebp
stc
out
add
adc
js
mov
jl
or
add
mov
jns
inc
add
out
push
add
repz
push
ins
xchg
call
cmp
pop
(bad)
dec
rol
(bad)
iret
push
and
mov
cmps
pop
js
test
push
aam
sub
mov
or
aam
pop
lock
push
aad
imul
dec
cmp
shl
addr16
inc
mov
cmp
mov
push
mov
sub
repz
and
into
hlt
push
add
adc
sbb
movs
mov
jp
mov
and
sbb
xchg
loope
add
dec
or
rol
xchg
test
jl
jmp
loopne
xor
hlt
and
jne
(bad)
out
cmp
lods
inc
xchg
sbb
push
fwait
shr
push
mov
jmp
test
mov
add
cmp
mov
loopne
and
in
test
mov
inc
mov
lea
pop
shl
int
leave
int3
mov
push
stos
pop
xor
add
call
ret
pop
push
test
inc
adc
cmp
leave
in
add
repz
mov
ins
daa
pop
pop
test
inc
lds
fiadd
shl
icebp
loopne
push
pop
xor
sbb
scas
jmp
lock
ss
add
push
sbb
ins
jle
call
cmp
jo
jb
lea
popa
or
xor
nop
push
das
fild
xor
dec
loop
ret
pop
dec
push
sub
mov
xor
xchg
pop
bound
mov
dec
or
outs
aaa
rcr
jmp
pop
test
enter
sti
mov
add
lock
jne
loop
or
sti
stos
push
add
pusha
jmp
sbb
shl
nop
sub
iret
pop
cmps
push
dec
xor
repz
and
mov
inc
mov
(bad)
popf
add
(bad)
ins
and
add
not
aad
dec
jbe
or
inc
push
or
les
adc
adc
sbb
add
pop
adc
add
mov
std
retf
arpl
out
mov
or
mov
or
gs
jo
inc
add
or
mov
mov
sbb
(bad)
out
inc
in
cmps
push
rcl
add
or
sbb
stc
call
(bad)
(bad)
cmp
adc
aam
add
and
jle
dec
push
cwde
add
and
jo
push
mov
xor
stos
mov
outs
dec
and
mov
movs
out
test
pop
loopne
jns
add
jl
xlat
loope
in
mov
(bad)
xor
out
in
dec
or
add
push
stos
mov
cmp
test
dec
enter
cmp
rcl
mov
jns
fcom
xor
add
cmps
push
add
cld
ror
cld
and
or
(bad)
out
mov
int3
cli
out
clc
outs
xchg
cwde
test
test
jb
cmp
jge
mov
mov
add
test
add
test
sub
jle
fdivrp
icebp
add
ror
pop
sar
(bad)
fisttp
sub
add
inc
add
dec
test
retf
jns
ret
add
rol
inc
fcmove
cmps
pop
sub
sub
enter
and
(bad)
xor
rcr
add
add
out
je
cmp
and
push
popa
pop
jg
mov
sbb
mov
clc
std
je
cmp
xlat
mov
das
sbb
clc
sub
adc
adc
push
fcom
arpl
jp
fidivr
mov
adc
btr
cmp
jecxz
push
(bad)
jmp
push
push
inc
sbb
jmp
ret
mov
mov
cs
bt
sbb
and
and
fild
inc
mov
pop
dec
inc
push
xchg
in
mov
mov
mov
xor
cmp
loope
outs
adc
push
and
call
mov
movs
jg
push
push
add
ret
arpl
mov
cmp
jne
inc
push
daa
push
push
imul
bound
adc
nop
test
xchg
sbb
loope
fmul
daa
out
mov
add
or
popf
cwde
push
push
and
movs
cmp
mov
outs
xchg
jmp
xor
sbb
mov
sbb
jo
jmp
xor
jl
(bad)
and
inc
call
mov
clc
lock
pop
fwait
xor
push
or
jecxz
sbb
adc
mov
out
lahf
cwde
push
call
jp
xlat
pop
pop
pop
(bad)
mov
add
(bad)
outs
add
inc
cwde
dec
clc
add
pop
sbb
or
rol
sbb
fisub
in
ret
mov
jae
add
mov
jge
dec
mov
cld
push
add
mov
gs
fmul
push
in
(bad)
adc
push
dec
sbb
mov
mov
pop
and
push
push
retf
mov
ret
add
rol
mov
or
js
mov
aam
push
mov
sub
fcmovb
dec
cmp
enter
aas
mov
fcomp
cwde
cmp
pop
lods
pop
aas
add
dec
dec
int
xchg
dec
(bad)
push
push
popf
add
loopne
xor
push
pop
or
push
adc
cmp
adc
(bad)
out
fiadd
xor
inc
test
or
in
adc
push
push
pop
test
pop
and
jmp
pop
push
mov
adc
xchg
addr16
pop
call
rcl
stos
mov
dec
mov
mov
ds
js
mov
xor
bound
test
lds
adc
jmp
fiadd
enter
xor
sbb
mov
push
in
mov
inc
sbb
fbstp
adc
fs
push
inc
cmp
retf
push
dec
lods
pop
test
mov
js
bound
icebp
aad
sub
mov
mov
and
or
lock
sub
shr
test
adc
adc
cld
sub
sar
sbb
add
loope
sbb
lea
mov
add
aam
or
adc
outs
fsub
or
jbe
es
sar
pop
inc
cmp
xchg
sti
rcl
cmp
push
mov
push
ss
xor
in
jne
xor
or
sbb
outs
sub
inc
pusha
jmp
jg
mov
cmp
data16
call
fistp
push
mov
add
or
adc
xlat
push
outs
and
lock
mov
adc
js
cmp
mov
sbb
fcomp
popa
or
push
outs
sbb
das
aam
pop
add
into
data16
xchg
daa
sbb
stos
iret
ja
push
push
push
mov
ss
sub
push
fmul
mov
stos
cdq
sbb
cwde
add
xor
jne
iret
mov
or
xchg
or
mov
lea
sub
add
inc
xchg
loopne
sbb
cs
call
mov
mov
and
dec
mov
ss
jbe
hlt
out
call
adc
xor
fld
shl
mov
je
pop
or
shr
sbb
xchg
or
add
xor
sbb
loopne
lahf
or
and
js
xor
add
jo
add
sub
xor
inc
xor
cmp
add
add
popa
add
jle
std
call
jp
inc
int3
cmp
jecxz
xor
cwde
movs
outs
in
and
push
cdq
jb
or
pushf
scas
pop
je
stos
dec
and
pop
push
push
mov
xchg
rcr
dec
pop
adc
or
inc
pop
jne
pusha
outs
fadd
fadd
lock
in
push
or
push
je
inc
dec
jne
retf
add
mov
and
xchg
scas
inc
out
sub
add
rol
movs
mov
out
cmp
or
dec
pop
arpl
xor
test
dec
push
xlat
stos
jecxz
shr
sbb
push
clc
sar
pop
call
daa
xor
ds
sbb
cmp
pop
push
xor
push
movs
adc
pop
and
cmp
jmp
or
les
cli
pop
add
mov
xchg
es
xchg
jae
sbb
ins
ret
jp
adc
xchg
sub
xor
pop
out
cmp
aaa
test
outs
cli
push
mov
jmp
mov
add
rcr
cmc
and
xchg
mov
and
pushf
or
mov
sub
dec
test
jno
rcl
fstp
(bad)
mov
sti
ret
loope
adc
add
ret
movs
(bad)
push
test
retf
neg
or
add
sbb
add
mov
dec
jne
inc
and
and
jl
pop
mov
adc
call
push
cmps
or
add
fnstcw
jo
or
mov
push
outs
scas
push
inc
test
lea
dec
adc
ds
jbe
adc
das
push
pop
ror
loopne
jp
mov
mov
xchg
fdivr
mov
xor
push
mov
inc
adc
or
or
loope
clc
mov
xchg
shr
(bad)
mov
mov
dec
jns
add
aad
test
(bad)
into
push
es
mov
inc
ret
repnz
and
or
and
xchg
mov
scas
out
nop
jmp
cdq
retf
cmp
mov
add
into
jmp
(bad)
fidiv
xor
xchg
push
out
sub
cwde
mov
add
cmp
ficomp
inc
sbb
cli
in
loopne
jo
jecxz
mov
cs
int
inc
frstor
push
jb
pop
or
xchg
out
outs
push
or
pop
ret
cmps
pop
sub
ret
(bad)
jmp
leave
je
jmp
push
das
data16
inc
xor
adc
dec
sbb
lea
mov
jno
rcl
push
or
test
ffreep
adc
lods
loopne
mov
stos
ret
ins
call
xchg
push
mov
in
(bad)
fisub
nop
pop
div
ja
hlt
push
in
div
add
mov
push
push
sub
stc
jecxz
int3
add
inc
push
inc
sbb
pop
jae
fild
dec
push
or
mov
xor
or
test
xchg
adc
imul
cwde
xlat
or
mul
int
sbb
fs
xchg
xchg
jecxz
scas
inc
cmp
sub
iret
pop
mov
call
ret
cmps
test
or
mov
push
xlat
and
jns
dec
hlt
or
inc
jl
loopne
sbb
lock
sub
lea
push
pop
gs
xchg
push
sbb
(bad)
mov
inc
ds
in
mov
pushf
mov
or
cmp
shr
jns
sbb
add
lods
pop
and
adc
ret
inc
add
xchg
fcomp
adc
gs
push
out
fcom
xor
fnstcw
fldcw
jne
xlat
pop
ret
nop
adc
inc
mov
jmp
mov
je
mov
mov
test
or
push
pop
sbb
cmps
xor
jae
pop
sbb
sbb
je
mov
sub
adc
cmps
adc
pop
mov
sti
adc
mov
icebp
mov
mov
inc
and
push
cld
div
or
mov
push
inc
jae
movzx
sub
mul
inc
sbb
adc
leave
mov
or
fsubp
jge
(bad)
mov
or
cwde
inc
movs
add
cmp
sub
test
repz
fcom
jmp
and
push
xor
mov
jmp
daa
mov
stc
lods
out
dec
pop
je
jmp
(bad)
in
xor
jmp
and
adc
xchg
dec
outs
jge
inc
mov
add
aas
adc
test
mov
les
les
pop
ficomp
pop
pop
ror
add
outs
add
sar
loop
dec
and
jno
and
mov
or
sbb
mov
jmp
inc
icebp
cmp
jne
pusha
ins
xor
arpl
daa
js
aas
aam
in
jo
lods
jne
xchg
shl
arpl
test
ins
ret
cmp
stos
jb
dec
mov
daa
loopne
daa
call
pop
xchg
sbb
push
and
xor
dec
repnz
add
sbb
or
inc
or
mov
add
mov
dec
call
xchg
mov
cmp
stos
mov
sahf
push
push
sub
jmp
and
mov
ret
and
(bad)
mov
sub
sub
ret
retf
dec
sbb
cmp
push
inc
pusha
mov
ss
fdiv
mov
xchg
sub
mov
rcl
div
sbb
inc
ja
add
shr
sub
pop
jno
test
sbb
cmp
push
cmp
jns
out
popa
add
sbb
add
mov
sub
int3
jle
es
ror
sbb
shl
add
addr16
shr
call
xor
outs
mov
add
cdq
add
inc
or
inc
sti
adc
adc
jg
mov
and
sbb
and
cmp
(bad)
mov
push
push
jge
pushf
adc
in
push
or
or
fmul
xchg
fwait
jmp
enter
es
add
les
enter
xor
gs
loop
cmp
jne
in
adc
andnps
and
and
xchg
clc
jo
ins
jne
jae
jmp
jb
xor
cld
(bad)
pop
ret
test
les
push
push
jmp
xchg
pop
cld
mov
je
push
mov
mov
sti
mov
lea
and
add
sub
add
cmp
div
lea
jl
and
cs
cwde
mov
jnp
add
std
(bad)
pop
sahf
adc
xor
mov
mov
sub
(bad)
adc
cmps
adc
add
adc
sbb
jmp
aas
xchg
xor
test
cmp
scas
inc
add
inc
ja
adc
hlt
and
cmp
and
out
and
xchg
sbb
lea
add
add
add
adc
int
fldl2e
and
push
jmp
jmp
test
adc
mov
pop
add
loop
dec
mov
dec
jmp
ret
mov
test
mov
ins
pop
scas
ret
ror
fld
xchg
push
mov
sub
shr
cmp
inc
mov
sub
aaa
ret
gs
test
push
add
sub
inc
mov
outs
pushf
sub
repnz
jo
movs
adc
and
mov
cs
jno
or
movs
jo
mov
mov
xchg
js
mov
scas
fs
outs
fdivr
fcom
dec
lods
lock
in
add
push
ds
mov
in
call
mov
test
jne
ss
add
xor
fdiv
(bad)
or
inc
fadd
clc
add
add
push
in
dec
jne
xor
call
push
shl
ins
jb
(bad)
dec
pushf
sbb
js
mov
add
retf
add
inc
ins
int
fdivr
sbb
mov
adc
dec
adc
sbb
pushf
popa
mov
pusha
fdivr
adc
js
jp
ret
inc
push
in
outs
out
xchg
loopne
pop
pop
cmp
outs
popa
xlat
sbb
and
pop
std
jl
sbb
ss
(bad)
aas
mov
xchg
lea
mov
cmp
in
call
inc
mov
inc
and
loope
inc
pop
movs
loopne
lods
(bad)
int3
dec
rcl
jo
push
fcom
mov
and
sbb
sbb
outs
or
dec
clc
fcom
push
scas
mov
or
or
and
cmps
jl
add
in
push
and
test
lock
inc
dec
inc
pop
loopne
sbb
fsubr
add
mov
pop
cs
in
not
test
mov
mov
mov
test
lock
jo
fdiv
les
jno
fcmovb
sbb
pop
nop
imul
add
mov
outs
in
pop
jbe
(bad)
add
and
cmp
je
test
jo
fsubrp
or
(bad)
push
or
add
push
sub
push
mov
sbb
push
outs
push
retf
cmp
les
aaa
mov
push
sub
sbb
add
fcom
xchg
pop
cmp
inc
dec
ret
shr
shl
scas
scas
sbb
js
adc
sub
mov
or
cmp
punpckhbw
imul
jne
cmp
jge
mov
jg
sub
movs
sub
out
test
cmp
test
fcom
mov
push
ret
add
mov
inc
or
pop
sbb
adc
dec
dec
int3
push
ja
push
add
inc
jle
test
in
pop
push
into
out
adc
loop
repz
es
cmp
xchg
or
mov
loopne
jmp
and
(bad)
or
mov
addr16
(bad)
imul
or
push
push
loop
inc
sbb
fnstsw
repz
les
sbb
adc
xchg
inc
xchg
add
or
dec
and
enter
ja
xchg
mov
jmp
call
out
mov
jnp
and
rol
mov
mov
imul
xor
cmp
xor
js
icebp
sahf
mov
out
push
cmp
mov
(bad)
lahf
push
lods
int3
fwait
or
je
movs
and
mov
cmp
out
pop
jl
(bad)
aam
and
int
dec
jg
or
iret
lds
jp
or
test
xchg
pusha
sbb
dec
test
sub
hlt
jnp
xchg
mov
idiv
inc
mov
mov
mov
inc
or
jae
jmp
xor
sbb
aaa
test
push
(bad)
fsubr
in
jne
mov
cmp
push
popa
sti
daa
(bad)
lock
add
push
cmp
xor
cmps
mov
adc
sub
ret
jle
sbb
cld
scas
dec
adc
cmp
test
xor
jo
ud1
js
dec
movs
push
loope
(bad)
iret
(bad)
jo
outs
xlat
jp
in
and
aaa
xlat
and
xor
call
cmp
(bad)
lods
fst
out
cmp
or
inc
dec
add
lea
shl
mov
das
or
and
and
aad
repz
jmp
je
cmp
sub
add
jecxz
pop
push
push
dec
dec
xchg
xor
dec
pop
dec
mov
arpl
daa
sbb
ds
sbb
and
cmp
mov
sub
jne
jmp
mov
jmp
add
out
mov
imul
je
or
sbb
mov
jne
mov
sub
sar
jns
rol
lea
dec
and
lds
repnz
push
cli
or
add
sbb
push
ret
mov
leave
push
pusha
pop
jmp
loopne
pusha
outs
lods
hlt
cmp
into
scas
jnp
loopne
mov
mov
mov
sbb
pop
test
sti
jne
or
adc
xlat
or
fdivr
mov
ins
sbb
inc
or
popa
iret
nop
lods
jo
mov
aad
sub
push
jecxz
scas
push
fcomp
push
or
xlat
xchg
or
sub
call
rol
inc
js
shrd
add
sahf
mov
outs
pop
cdq
xor
jne
sub
sbb
ret
and
or
add
or
test
lock
jecxz
adc
add
pop
retf
aad
inc
cmp
cli
fstp
adc
outs
and
xrelease
fcom
cdq
ror
ror
pop
add
sbb
fwait
mov
repnz
sub
cmp
push
mov
and
jne
mov
sbb
add
push
jg
mov
dec
js
jb
jmp
or
inc
xor
cmp
jne
sbb
push
mov
add
sti
sub
jmp
push
pop
add
xor
(bad)
hlt
es
cmps
cmp
cmp
ja
pop
jae
shl
and
jns
mov
xor
pop
mov
imul
fnstenv
adc
pusha
cmp
pop
movs
xchg
mov
cmp
(bad)
xchg
sbb
ins
mov
in
sbb
pop
mov
add
cmp
test
jne
fdivr
ret
add
cld
and
in
sbb
adc
aad
or
mov
loopne
aas
enter
sub
or
scas
(bad)
scas
nop
outs
cld
push
add
hlt
scas
sbb
sbb
(bad)
sbb
loope
movzx
sbb
inc
mov
xor
loop
or
inc
mov
jnp
movs
les
rcr
dec
push
jmp
out
adc
ret
push
pop
mov
or
jb
(bad)
popa
int3
or
xchg
bound
into
iret
add
or
xor
push
add
adc
fist
dec
or
sub
mov
sbb
xor
div
add
aas
mov
xchg
pop
sbb
inc
ss
or
sbb
arpl
or
nop
ja
out
xchg
cmp
bnd
push
sbb
dec
mov
inc
data16
rol
fldcw
pop
aaa
xor
inc
test
xchg
jl
pop
arpl
or
mov
mov
sub
push
mov
mov
mov
mul
aam
add
enter
and
and
rol
fisttp
lds
nop
and
add
mov
or
sar
outs
push
sbb
lods
add
and
sbb
fcomi
jp
add
dec
hlt
sbb
jne
fild
mov
cmp
(bad)
push
push
xchg
or
enter
inc
cdq
xchg
add
xor
ret
add
push
neg
cmp
movs
inc
xchg
(bad)
(bad)
fstp
xchg
lock
push
pop
clc
(bad)
jmp
sbb
xor
xor
mov
fsubr
stos
jg
jl
cmps
push
mov
push
inc
push
sub
push
add
add
or
call
add
cmp
je
mov
push
lock
push
mov
adc
sub
inc
fsub
js
dec
or
icebp
out
dec
and
out
and
or
sbb
cmp
adc
(bad)
or
dec
outs
xchg
xor
outs
loopne
adc
sub
pop
jo
pop
push
sub
sti
add
je
(bad)
inc
inc
cmps
sub
and
cmp
fisub
jl
xor
jmp
mov
jns
aas
rcl
call
mov
sub
jb
call
enter
psubusb
xor
adc
into
cmp
xchg
pushf
mov
inc
out
mov
or
or
sar
mov
cmp
cmp
jnp
fwait
jbe
mov
out
xor
bound
ins
dec
repz
les
and
push
ja
ror
dec
mov
sub
pop
cmp
jnp
add
test
pop
xchg
cwde
adc
sub
lock
dec
inc
mov
inc
cmp
gs
enter
dec
mov
sub
(bad)
clc
mov
or
rol
mov
icebp
adc
adc
daa
mov
retf
int
mov
(bad)
jecxz
(bad)
test
add
sbb
and
xor
sbb
xlat
adc
jmp
xor
adc
lds
mov
dec
fcom
cmp
jge
sub
leave
add
pushf
jmp
sub
mov
xor
fadd
add
fwait
sbb
sbb
push
and
rcl
out
fst
push
cmp
(bad)
lea
sub
mov
push
mov
les
outs
sub
enter
mov
mov
aam
add
pop
or
ins
add
add
mov
push
mov
mov
retf
int3
add
sahf
adc
cmp
in
mov
push
jg
mov
add
jmp
adc
outs
or
inc
sub
push
cmp
jnp
pop
add
lea
jmp
cld
imul
and
add
repz
fimul
ss
xor
adc
mov
pop
(bad)
jb
xchg
inc
aam
jmp
test
inc
xor
call
add
cli
inc
jle
mov
push
scas
les
sar
adc
mov
mov
add
add
mov
push
and
shr
or
jo
sbb
test
jne
(bad)
sub
push
addr16
lock
sub
into
mov
cmp
lds
push
loope
icebp
inc
or
arpl
mov
test
sbb
push
xor
push
sub
sbb
addr16
loopne
cmp
push
or
sysret
shr
out
jmp
add
popa
xchg
mov
or
adc
mov
adc
aad
ins
ja
dec
ins
xor
jns
adc
inc
outs
push
cmp
es
mov
add
sar
test
sub
jmp
inc
sbb
mov
sbb
dec
dec
hlt
out
and
jg
cmp
test
in
push
push
or
(bad)
add
div
mov
or
or
aam
dec
sub
jge
sbb
xchg
pop
xor
xchg
pop
call
sbb
cmp
in
jge
hlt
cmp
xor
sbb
inc
scas
sbb
cwde
mov
out
out
xchg
jne
mov
(bad)
aaa
cmp
push
loopne
test
nop
push
xchg
movs
pop
mov
or
and
rol
sbb
(bad)
(bad)
fmul
or
and
pop
mov
inc
push
rcl
mov
test
and
pusha
or
cmp
add
out
js
or
sbb
cmps
xor
lods
push
push
inc
push
and
leave
mov
jbe
mov
inc
mov
out
ror
cs
pop
jge
pushf
les
xor
pop
(bad)
aad
push
or
jge
fiadd
out
cwde
cmp
je
ins
mov
adc
xor
or
xlat
push
mov
mov
shl
stos
sub
pushf
daa
jl
in
stos
mov
or
sbb
or
xchg
add
sub
cwde
xor
pusha
mov
add
(bad)
enter
ror
mov
push
or
es
jge
or
or
jb
jmp
jl
and
sbb
std
in
idiv
sbb
pop
mov
and
dec
jl
inc
cwde
test
retf
inc
test
xor
jecxz
cmps
pop
push
popa
sub
stc
sbb
add
pop
inc
in
ins
xor
stos
xchg
push
out
nop
(bad)
movs
adc
add
jo
lods
or
inc
test
adc
cdq
js
sub
mov
mov
aas
cmp
pusha
cmp
cs
aad
push
or
lea
in
inc
dec
mov
lods
inc
inc
out
cmps
in
dec
cli
adc
add
adc
dec
ins
cli
mov
add
add
call
mov
jp
xor
aam
sbb
or
cmp
cdq
push
push
pushf
out
rcr
mov
or
xor
pop
or
jp
xchg
xchg
out
mov
test
add
cmp
arpl
sub
cdq
ins
arpl
dec
out
push
clc
arpl
add
mov
lea
lods
cmp
inc
fs
cld
sti
jl
dec
and
mov
adc
and
jne
xchg
pop
sahf
jnp
add
cmp
inc
push
add
adc
pop
cmp
ss
add
fstp
push
push
jae
xchg
cs
add
pop
scas
(bad)
sahf
push
cmp
out
dec
adc
add
jmp
es
push
ins
pop
pop
lahf
add
(bad)
cmps
cmp
cdq
ficomp
jb
pop
inc
add
mov
add
fidiv
cmp
dec
enter
or
sub
inc
xor
outs
test
cmp
je
test
push
ins
fcom
int3
sub
pop
or
movs
mov
pop
ins
lods
sub
je
ins
dec
pusha
daa
pushw
inc
outs
push
or
ins
outs
mov
adc
inc
sbb
js
es
cwde
rcr
push
add
xor
and
mov
add
sbb
inc
xor
mov
mov
loopne
or
pop
adc
fnsetpm(287
or
push
das
pop
cmp
fwait
adc
push
mov
test
hlt
or
inc
test
loope
out
scas
aaa
jne
push
jne
add
sbb
add
sub
mov
jg
ins
imul
jno
mov
lods
mov
pop
ja
push
sbb
push
mov
scas
xor
mov
rcl
retf
pop
cwde
cmp
xor
xchg
das
(bad)
mov
xor
aaa
mov
iret
jg
mov
or
sub
mov
dec
mov
add
jbe
jmp
test
mov
xchg
inc
xor
sbb
xchg
push
inc
shl
mov
loopne
out
sbb
push
mov
icebp
ror
and
leave
repz
or
push
ret
outs
add
aas
out
ins
jns
xor
push
mov
test
jg
jae
add
fidivr
ret
pusha
xchg
inc
mov
stc
cs
sbb
sbb
sbb
ret
mov
inc
sti
jle
push
sub
fs
jle
pusha
add
fs
jg
pop
stos
adc
test
xchg
hlt
dec
rcl
lahf
xor
dec
je
pop
shl
inc
cld
mov
call
je
sti
push
jp
sar
inc
adc
adc
mov
xchg
fcom
stc
push
(bad)
(bad)
sbb
loopne
fsub
add
sub
add
in
es
adc
and
rcl
inc
enter
push
xor
fisttp
jecxz
inc
mov
les
add
loope
jo
clc
add
jp
or
and
fld
sub
or
cmp
rcr
inc
ja
mov
fmul
jecxz
or
pusha
mov
push
mov
sbb
outs
rol
fcom
fcmovbe
mov
mov
jecxz
add
jb
mov
push
mov
das
dec
adc
push
mov
ds
mov
or
adc
ins
mov
fs
mov
and
rcl
add
dec
add
shl
lea
mov
xlat
or
mov
and
arpl
mov
shl
out
cmp
cs
mov
in
inc
add
rcl
mov
nop
push
pusha
popa
fwait
and
in
mov
int
mov
and
mov
retf
or
mov
cmp
es
mov
in
cmp
cmps
loope
lock
lods
xlat
cmp
or
out
mov
xchg
mov
pcmpeqd
(bad)
xlat
mov
and
cli
push
add
ror
out
mov
push
mov
outs
jg
xlat
rol
fcmovu
mov
outs
loope
cmp
sbb
mov
call
push
jo
adc
aaa
mov
inc
xor
fadd
out
mov
es
fsubr
adc
mov
and
mov
ins
mov
fadd
mov
mov
inc
mov
pop
gs
dec
mov
inc
dec
sub
and
or
sbb
mov
and
outs
inc
mov
and
jmp
mov
cmp
jle
mov
sub
add
cli
mov
sub
pop
push
add
pop
mov
push
daa
jo
or
adc
adc
shr
hlt
jg
fld
mov
lods
or
adc
xor
bound
add
jecxz
add
or
popa
outs
xor
jbe
pusha
pop
mov
in
jmp
mov
cmp
popf
adc
fild
cdq
cmp
jae
rcl
jge
fidivr
mov
push
cmps
(bad)
ds
push
iret
fiadd
sub
sbb
out
mov
shl
mov
jno
add
xor
pop
xchg
cmp
inc
adc
add
hlt
pusha
jecxz
clc
aas
cwde
push
addr16
push
mov
push
aaa
cld
and
dec
sbb
pusha
js
jl
lods
test
push
inc
cmps
fistp
fld
push
inc
fld
int3
stos
xor
(bad)
arpl
xor
nop
sbb
sbb
(bad)
outs
fsub
into
aad
retf
mov
push
jmp
retf
je
inc
xchg
inc
and
mov
aaa
dec
sub
xor
inc
lahf
rcr
inc
aas
add
or
cmp
out
imul
adc
in
jnp
and
in
push
adc
xlat
icebp
add
test
push
push
adc
test
je
fild
xor
test
adc
adc
ror
(bad)
in
dec
mov
call
ss
sar
jns
adc
xchg
mov
mov
lock
inc
add
idiv
ret
data16
cs
mov
aas
add
or
xor
ja
mov
add
ror
sub
mov
invd
jle
dec
outs
clc
dec
xor
pop
push
sbb
cmp
nop
ins
in
xor
clc
jae
adc
pop
push
dec
and
pop
xchg
inc
xchg
ins
sub
sbb
ins
xchg
sub
(bad)
cli
push
or
or
push
adc
hlt
add
add
fs
fcom
add
jno
adc
pop
xor
mov
cmp
add
sbb
lock
sbb
adc
add
test
std
lea
and
std
and
js
scas
xor
adc
shl
test
jge
sub
sub
cwde
cdq
test
fadd
sub
(bad)
sub
and
neg
aas
xor
into
ret
sub
push
jl
and
rcl
sbb
rcr
add
push
inc
jmp
(bad)
xchg
out
sub
add
ds
cmp
outs
xor
push
aaa
push
(bad)
div
ins
adc
pop
push
shr
add
dec
inc
fldenv
std
and
xor
push
mov
sahf
cmp
cmp
jge
push
movzx
xor
dec
add
sar
pop
jb
ja
add
loopne
cmp
adc
adc
cmp
add
adc
mov
sub
xor
bnd
sbb
add
or
(bad)
mul
fs
idiv
sub
mov
sub
dec
push
out
test
xor
pusha
jmp
jle
loopne
scas
push
xchg
pusha
and
test
sbb
shl
call
xchg
push
cmp
jmp
push
je
dec
fild
sub
sbb
(bad)
or
push
sbb
pop
add
fidiv
int
(bad)
push
or
sub
cmp
sar
out
push
vmread
or
adc
jne
(bad)
dec
xchg
out
inc
jb
add
inc
enter
xor
(bad)
lds
mov
rol
cmc
jmp
lds
inc
xor
mov
inc
cmps
rdtsc
lock
sbb
(bad)
xor
and
cld
inc
test
je
outs
mov
stos
pusha
cmp
add
(bad)
mov
(bad)
mov
scas
adc
or
or
ja
inc
js
out
retf
xchg
loopne
xor
xchg
int3
into
mov
je
or
mov
mov
push
fstp
adc
adc
sub
out
dec
sub
mov
inc
jg
cmp
pop
inc
data16
pop
mov
push
dec
xchg
cdq
or
mov
inc
xchg
push
or
add
add
loop
inc
cmp
jae
loopne
or
(bad)
xlat
jp
rol
mov
pusha
and
push
or
fsub
loope
jg
jge
or
xchg
add
call
dec
cmp
push
inc
push
fwait
xchg
lock
jnp
and
jns
push
mov
add
imul
fisttp
call
in
mov
loopne
or
mov
imul
(bad)
cmp
jle
and
mov
or
pusha
add
mov
xor
jge
cmp
push
inc
push
lea
sub
test
adc
dec
ss
ret
in
mov
shl
lea
xchg
add
(bad)
in
xor
adc
mov
test
or
(bad)
into
cmp
inc
cmp
xchg
xor
jne
int3
loopne
xchg
mov
enter
xor
enter
cmp
add
xchg
adc
push
fistp
data16
xchg
sbb
push
sub
jmp
cmp
mov
adc
mov
imul
lds
sub
cld
and
and
pop
adc
jbe
dec
mov
mov
xchg
(bad)
cmp
das
and
or
(bad)
jl
test
jl
jae
sub
test
jle
cmp
aas
ror
pop
add
or
nop
add
fwait
lods
call
test
iret
mov
lods
stos
mov
sub
mov
sub
mov
jle
cmp
mov
mov
jp
ror
int
mov
xchg
iret
adc
add
dec
add
push
jmp
retf
jmp
mov
inc
call
or
dec
test
or
lea
mov
je
pop
add
xchg
sub
adc
shl
sbb
ds
retf
cmp
sub
add
jecxz
mov
iret
and
jmp
cld
inc
jae
ja
jbe
adc
leave
pop
sbb
dec
push
mov
and
mov
test
(bad)
in
lock
sbb
adc
shl
pop
movs
push
add
aas
sbb
inc
rol
pop
cmps
push
mov
mov
jmp
mov
mov
addr16
lock
sub
shl
lods
add
xor
push
cmp
inc
sub
adc
not
mov
adc
or
cwde
pop
cmp
xor
test
cmp
outs
mov
cmp
adc
fimul
ret
pop
and
adc
fidivr
or
adc
ss
push
jne
add
jl
cmp
js
jge
ss
jne
add
pop
pop
push
les
hlt
cmp
mov
ror
lds
sub
and
es
int3
jl
mov
or
sub
mov
or
jle
rol
cmps
mov
in
sbb
sub
out
and
shr
iret
pusha
mov
cmp
lds
ret
sub
cmps
imul
xchg
xlat
xchg
pop
and
adc
or
and
adc
push
jmp
sub
jl
retf
cmp
mov
(bad)
(bad)
jne
xchg
sub
push
inc
ins
or
imul
call
je
cs
lea
imul
iret
sub
sbb
inc
rol
gs
pop
popa
loop
inc
or
cdq
aam
xor
shr
pop
pop
push
test
push
adc
nop
or
ret
add
mov
mov
push
lahf
and
pop
call
cmp
cmp
fiadd
dec
push
add
mov
push
push
xchg
(bad)
lods
das
cdq
jo
adc
or
pushf
cmp
lock
fst
xchg
mov
out
fisubr
mov
xchg
lea
pcmpgtw
push
mov
and
call
jge
xor
jle
add
sbb
add
mov
dec
and
pop
sbb
pop
push
movs
bnd
xlat
add
push
adc
sub
sbb
popa
scas
sub
jl
daa
mov
inc
pop
mov
dec
add
dec
es
sbb
dec
fimul
shr
or
inc
jg
xchg
je
cmp
stc
pop
jns
pop
adc
mov
add
and
loope
push
pusha
or
pusha
inc
push
push
mov
aas
mov
ret
fs
add
sbb
mov
xlat
push
or
das
adc
sbb
pop
xchg
imul
pop
movs
sbb
les
test
jg
mov
cmp
adc
cmp
sub
jb
pop
ret
push
inc
dec
outs
jae
popa
outs
arpl
in
inc
fistp
mov
add
je
test
fdivr
or
jb
jo
outs
sub
fcomp
dec
popa
ins
test
add
inc
and
add
pushf
(bad)
repz
inc
iret
dec
xor
or
(bad)
mov
jo
sbb
push
inc
jb
popa
je
mov
(bad)
push
dec
add
sbb
adc
add
cmps
loopne
fisubr
or
or
adc
fimul
add
cs
cmp
add
add
add
push
ret
dec
popa
imul
outs
bound
push
gs
sbb
push
add
imul
mov
push
jae
ins
jbe
pop
ins
xchg
nop
jbe
pop
add
in
dec
test
inc
pop
(bad)
fisub
comiss
mov
rcl
gs
cs
ins
popa
jae
(bad)
test
test
je
movs
das
adc
cmc
mov
xchg
ja
xlat
bound
int3
pushf
sub
pusha
ret
ror
xchg
push
scas
or
lds
add
jecxz
pop
lods
adc
push
sbb
fild
adc
push
inc
jb
popa
jns
dec
cs
rcr
dec
cmps
add
movs
push
popa
sbb
fmul
fs
fld
loopne
out
push
push
push
(bad)
jae
arpl
cmps
leave
fisub
push
inc
outs
jne
pop
mov
outs
jb
sub
dec
in
shl
outs
mov
fild
pop
sbb
fild
pop
pop
lods
fistp
or
(bad)
sbb
mov
push
arpl
js
arpl
and
add
rcr
add
mov
xchg
pop
inc
jne
xor
mov
pop
and
inc
sbb
lds
nop
xor
data16
jmp
jg
push
popa
imul
xchg
mov
inc
xor
inc
aam
out
daa
movs
pop
inc
sub
cmp
movs
lock
movs
sub
dec
inc
ret
or
out
mov
xor
push
outs
add
dec
cmp
in
inc
loope
mov
sub
add
push
pop
gs
je
add
and
adc
push
sub
push
stos
cs
pop
or
das
leave
data16
gs
add
ins
jo
dec
mov
mov
jae
or
and
jne
je
inc
imul
js
xor
sbb
fisttp
or
inc
adc
fld
call
fs
add
mov
je
add
push
mov
test
push
out
inc
mov
push
xcrypt-ecb
push
aad
or
inc
add
or
mov
mov
mov
push
scas
sbb
or
push
cld
push
cld
cmp
pop
and
xor
cwde
lds
mov
jne
arpl
lods
lods
pop
jbe
inc
rcr
into
add
push
in
push
add
call
sub
cmp
cmp
mov
cld
xchg
add
or
or
scas
lock
add
dec
push
fdiv
stos
xchg
mov
pop
pop
dec
jo
pop
xor
pop
lods
add
mov
daa
mov
fwait
ror
or
inc
lar
mov
adc
push
ret
pusha
ds
pop
pop
sub
loopne
mov
pop
add
pop
jnp
imul
ins
jne
add
add
sbb
lds
xor
cli
outs
fdivr
cmp
call
clc
dec
push
sbb
mov
dec
ja
cli
faddp
or
fidiv
movs
push
inc
or
jo
shl
pop
mov
das
pop
xchg
inc
test
adc
pop
aad
add
dec
(bad)
sub
nop
js
jmp
adc
pxor
jle
or
add
push
inc
dec
data16
out
ror
arpl
cmp
dec
dec
dec
mov
inc
or
add
xchg
push
jmp
and
cmp
in
outs
xchg
mov
jb
xor
adc
dec
xchg
sar
sbb
clc
sbb
push
pushf
sahf
xor
cmp
and
mov
retf
fimul
mov
test
push
and
add
dec
dec
cmps
lds
pop
or
cmp
fmul
dec
sub
aad
or
add
mov
mov
jno
or
sbb
imul
fild
mov
repnz
add
dec
inc
outs
dec
cmovns
sbb
dec
int3
dec
add
addr16
pop
shl
push
and
inc
push
popa
jg
xor
dec
jg
mov
cmp
inc
fs
sub
mov
jg
(bad)
icebp
push
popa
ins
jne
cmp
cmp
or
outs
addr16
inc
or
push
ins
push
cmps
push
in
jbe
add
push
outs
or
mov
adc
pop
sbb
and
adc
popa
shr
mov
cmp
add
add
in
(bad)
rcr
dec
js
or
mov
xchg
or
div
add
and
leave
ss
add
cwde
call
pop
aad
adc
xor
rcl
sbb
aam
cdq
pop
loope
dec
jae
imul
iret
dec
add
push
mov
mov
jno
loopne
rcl
jne
inc
imul
inc
movs
sbb
lea
add
jbe
imul
jmp
lods
pop
mov
sbb
and
cdq
ins
xchg
in
push
and
not
fcom
push
push
add
xchg
xchg
xor
das
add
add
push
lock
lahf
sbb
or
ja
and
push
lock
fist
push
xor
mov
xor
inc
dec
popa
add
jl
dec
es
push
cli
jo
call
aaa
add
cdq
push
sub
ins
push
imul
or
mov
mov
jmp
rol
mov
add
or
daa
sahf
jns
xchg
adc
adc
mov
mov
xchg
sbb
inc
jl
inc
mov
and
add
(bad)
dec
mov
and
dec
or
es
and
cdq
and
push
cmp
or
in
push
or
xchg
iret
add
dec
test
mov
cmp
clc
hlt
push
jb
ins
test
cmp
es
push
or
push
xchg
out
sub
xchg
xor
fmul
(bad)
pop
push
add
xlat
pop
lea
inc
add
imul
ja
xor
inc
jno
inc
test
xlat
pop
pop
and
mov
inc
out
fiadd
jns
mov
or
sbb
add
sbb
aaa
js
nop
push
mov
pop
popa
dec
arpl
jns
xor
inc
inc
cmp
test
pop
adc
add
cmps
sbb
pop
ret
jbe
shl
add
mov
fisttp
js
hlt
or
sbb
out
xchg
xor
out
outs
mov
outs
arpl
sbb
add
xchg
or
fsubr
test
mov
mov
ficom
pushf
pushf
fcomp
rol
js
push
xchg
push
push
push
(bad)
fs
mov
mov
push
jl
push
xor
shl
pop
ins
dec
xor
jbe
inc
call
loop
xor
mov
loopne
or
or
cdq
out
xor
test
retf
sub
aaa
fwait
pushf
dec
mov
xchg
add
outs
scas
add
cmp
push
xchg
push
test
inc
xlat
push
inc
push
retf
push
jbe
pop
mov
lods
shl
pop
add
aad
or
inc
mov
dec
pop
mov
mov
mov
or
or
dec
xchg
sub
xor
adc
jne
lods
(bad)
stos
aas
adc
ds
xor
mov
pop
and
inc
adc
shl
out
jmp
add
movzx
push
or
sub
jne
or
out
clc
mov
jo
sub
sti
scas
adc
mov
lea
(bad)
aas
sub
inc
sbb
jg
popf
sub
xchg
jo
loope
mov
pop
nop
mov
ret
jo
mov
xchg
or
jo
or
inc
(bad)
outs
pusha
repnz
retf
div
xchg
adc
inc
pusha
adc
add
push
aaa
cli
(bad)
pop
or
lds
shl
stos
test
rcr
inc
push
inc
xor
mov
addr16
ret
jmp
loopne
femms
pop
pop
mov
xor
sub
nop
adc
jg
ret
fisttp
test
sahf
mov
ret
test
sti
xchg
cmp
fdivr
in
push
sub
sar
xor
in
mov
in
jbe
xor
hlt
adc
dec
mov
or
shl
mov
fsub
lods
cld
or
daa
push
sub
jmp
mov
fmul
mov
sete
cmp
mov
sahf
and
cld
or
push
add
test
or
add
xchg
and
stos
jne
add
add
dec
add
out
add
sar
fdivr
dec
dec
add
outs
add
jb
pop
fmul
inc
and
cmps
mov
loope
fimul
or
pop
clc
mov
jge
aas
clc
push
cmp
lock
pop
imul
jl
jnp
loopne
loopne
dec
ficom
sbb
pop
adc
add
jb
sti
stos
add
arpl
in
in
xor
cmp
cs
clc
or
fimul
mov
sub
or
nop
ja
xor
cmp
mov
mov
sbb
dec
dec
das
pop
fcom
ins
sub
(bad)
dec
cmp
fcom
jmp
sar
add
inc
and
xor
mov
dec
sub
je
hlt
push
jnp
dec
imul
jbe
loopne
sub
test
jne
cmp
aas
push
ret
jl
loop
sti
cmp
fild
mov
call
jmp
mov
pop
inc
jmp
sbb
loope
jl
fsubr
jo
xlat
out
and
mov
or
pop
or
mov
push
(bad)
icebp
or
bound
mov
ins
fwait
add
jo
dec
add
inc
js
mov
cmc
fwait
adc
inc
nop
cmp
mov
call
and
pusha
xchg
and
jne
mov
addr16
out
and
xchg
adc
add
or
sbb
mov
inc
out
mov
push
sub
mov
xchg
(bad)
imul
lods
mov
adc
or
outs
test
mov
dec
cmp
jl
push
push
mov
lahf
push
and
movs
pop
shl
sbb
ss
test
mov
call
cs
and
fdivr
push
jmp
test
add
cmp
sub
sbb
mov
jmp
sbb
jne
mov
pop
shl
push
mov
and
mov
enter
ficomp
lods
fld
inc
jl
mov
mov
and
add
(bad)
ds
in
leave
dec
push
add
pop
ret
mov
mov
mov
and
dec
mov
mov
in
mov
push
push
or
cdq
js
xlat
rcr
pop
outs
push
out
lods
pop
or
jbe
mov
sub
inc
jbe
fld1
aas
sub
adc
push
push
add
push
out
and
mov
pusha
fadd
test
pop
ret
adc
add
lods
loopne
mov
pop
ja
push
mov
xchg
outs
pushf
out
jae
mov
movnti
or
sbb
in
hlt
mov
xor
enter
addr16
or
aas
xor
cmp
or
fdiv
dec
add
mov
mov
adc
sbb
pop
scas
rcr
sbb
enter
jns
mov
jle
or
loope
jge
push
adc
mov
call
test
push
adc
or
iret
call
mov
pop
xlat
adc
push
stos
cmp
loopne
or
dec
mov
aad
xor
or
cmp
lock
pop
repz
mov
inc
mov
aas
add
sahf
push
cmp
aaa
scas
or
fcom
sbb
xor
rol
(bad)
jmp
push
adc
push
add
stos
lds
or
mov
xchg
popa
xor
repnz
outs
test
in
pop
sahf
dec
inc
adc
inc
adc
lock
data16
loopne
std
mov
fisttp
sub
call
push
(bad)
in
mov
mov
adc
scas
lock
fcmovnu
sbb
leave
mov
jno
and
call
inc
pop
add
les
clc
das
and
jno
je
or
sub
xor
or
mov
jg
out
(bad)
push
mov
js
inc
jnp
rol
push
enter
jo
pusha
movzx
xor
add
mov
ss
idiv
mov
or
inc
fisttp
mov
jle
push
mov
mov
add
ins
jp
mov
inc
not
push
aam
ret
sahf
inc
jmp
retf
fcmovu
add
and
cmp
adc
sub
jp
(bad)
push
ja
daa
into
repz
mov
(bad)
sub
sub
daa
ins
mov
mov
jbe
das
push
cli
cmp
push
lea
or
into
mov
in
(bad)
ret
cmp
cmp
pop
push
and
sub
jg
enter
fcom
add
add
ret
sar
fdiv
adc
adc
sbb
jno
jne
add
add
xor
ret
loope
mov
xorps
das
(bad)
cld
jmp
sbb
sahf
jecxz
pop
icebp
cli
xchg
pop
lods
inc
xor
(bad)
adc
fnsave
dec
adc
mov
mov
inc
inc
xchg
sub
sahf
pop
jo
ins
xor
and
adc
and
popa
and
dec
sbb
loop
or
(bad)
arpl
clc
popa
or
outs
adc
cwde
jge
pusha
fnstsw
mov
jp
jl
push
js
js
mov
add
cmc
add
pop
retf
and
popa
cmp
in
nop
lods
mov
jmp
dec
je
or
lock
sub
mov
pushf
repnz
jne
add
mov
jp
outs
mov
push
mov
pop
sub
inc
xor
or
(bad)
jl
inc
ins
jne
mov
adc
jne
add
out
dec
mov
or
lods
in
stos
ret
lods
or
daa
cs
repz
pop
je
push
inc
ja
popf
std
jo
ins
push
fld
iret
out
pop
mov
(bad)
mov
mov
enter
ror
ja
mov
jmp
jg
cwde
cmp
xor
sbb
mov
test
jl
inc
(bad)
in
(bad)
fimul
neg
push
push
xchg
mov
mov
ins
fsubr
mov
xor
loopne
add
nop
cmp
cmps
pop
xor
sub
or
addr16
or
add
xchg
(bad)
out
(bad)
imul
(bad)
jmp
(bad)
sub
sub
sbb
cmp
das
mov
xor
adc
sub
or
das
push
mov
mov
pop
in
call
jle
les
or
push
jno
sub
je
inc
rcr
sbb
and
aad
add
add
pop
add
sub
je
lds
aaa
loopne
aas
iret
push
pop
mov
adc
pop
call
dec
test
fiadd
pop
je
inc
retf
fimul
mov
shr
pop
clc
in
mov
out
outs
mov
sub
in
fidivr
add
pop
in
(bad)
data16
pop
cmp
loopne
frstor
aaa
mov
arpl
push
cld
pop
fisttp
(bad)
mov
cmp
jp
inc
jle
loope
jmp
pop
dec
sbb
mov
mov
aas
pop
shl
jle
mov
out
adc
pop
fadd
data16
call
cmps
cld
adc
cmp
push
leave
and
add
and
sbb
lods
pushf
stc
retf
cmp
mov
xchg
idiv
add
sub
mov
jg
inc
(bad)
and
xor
push
mov
adc
sbb
push
or
(bad)
pusha
arpl
mov
call
js
and
into
dec
or
add
shl
adc
ins
in
or
inc
pop
test
lds
pop
addr16
sbb
inc
dec
cmp
sbb
jle
and
mov
add
inc
xchg
cmps
xor
xchg
test
test
std
pop
xor
loop
or
add
cdq
imul
push
dec
pop
loopne
leave
lahf
mov
add
inc
cwde
lock
daa
jle
add
sbb
rol
mov
add
xor
push
add
movs
ret
movs
pop
xchg
leave
xor
or
or
enter
xor
mov
add
add
inc
ins
jo
add
jbe
add
add
shr
mov
cwde
outs
pop
add
jb
adc
ins
push
push
jle
push
dec
xchg
sub
push
pop
jle
sahf
fisttp
pop
or
pop
push
or
jmp
mov
mov
call
test
outs
sar
add
sbb
das
adc
push
test
mov
(bad)
mov
add
test
cmp
jne
add
outs
xchg
mov
lea
xor
or
into
or
jns
ror
add
adc
sar
test
(bad)
das
call
sbb
add
sub
jae
cmp
or
and
jo
es
jbe
or
ror
pop
mov
cli
pop
lods
int3
sti
dec
jle
outs
and
movzx
lea
mov
retf
lock
add
xchg
or
js
adc
test
fwait
add
adc
mov
popa
inc
xor
xor
daa
clc
fucomip
inc
sub
add
jecxz
loop
push
mov
lock
sub
je
cmp
and
outs
sbb
pop
jmp
movs
loopne
outs
adc
or
adc
cmp
gs
cmp
cmps
or
add
mov
add
or
add
mov
mov
xor
inc
xor
cmp
js
xor
mov
jle
and
dec
jne
xor
lds
or
dec
repnz
adc
fistp
test
je
repz
pop
in
jge
test
repnz
aas
inc
inc
sub
pusha
es
mov
movs
imul
ss
cld
nop
push
loopne
enter
lods
adc
daa
fiadd
xchg
in
rol
add
jb
popf
cmp
outs
push
(bad)
or
call
jb
imul
shl
outs
cs
push
inc
jmp
sub
mov
in
xor
add
test
pop
cmp
pop
inc
jmp
jmp
cmp
push
and
test
(bad)
jmp
push
xor
cmp
cmp
cmc
or
inc
movs
mov
cmp
enter
mov
pop
and
add
or
jge
push
in
cmp
jb
push
xor
mov
mov
add
sbb
call
push
call
xor
add
jno
call
dec
inc
ja
mov
fsubr
adc
add
push
add
jb
mov
retf
cmp
jmp
jmp
lods
jmp
xor
mov
popf
push
add
xor
test
adc
sub
scas
sti
sahf
mov
idiv
fs
sbb
jmp
inc
pop
clc
sub
pop
add
pop
or
or
jne
mov
(bad)
pusha
shl
cmps
jmp
aas
ins
cmps
pop
inc
add
xchg
pop
sub
jmp
add
mov
jbe
pop
scas
pusha
jnp
inc
sbb
inc
sub
pop
sbb
retf
or
inc
in
hlt
xchg
or
stos
sub
jl
fsubr
sbb
out
push
pusha
add
ja
adc
fcmovnu
dec
aaa
adc
inc
sub
imul
sbb
inc
test
test
inc
scas
xor
dec
aas
loopne
test
or
outs
xchg
lock
jmp
ins
inc
fstp
adc
test
addr16
not
test
or
push
mov
ds
shl
lea
sbb
out
pop
pusha
pusha
sub
sbb
pusha
enter
sbb
add
popf
loope
pop
xor
inc
pusha
in
add
loop
std
push
xchg
inc
loop
cmp
mov
out
cmp
dec
clc
sbb
(bad)
cmp
xor
lea
aam
rcl
xor
or
mov
mov
push
push
int3
dec
int3
xor
jmp
inc
enter
cld
sub
and
or
adc
test
sbb
push
rcl
jl
fcomp
fsubr
ret
jmp
jle
jmp
dec
jecxz
inc
in
es
bound
jmp
xchg
add
(bad)
add
out
inc
jge
test
push
push
mov
int3
xor
dec
cwde
push
lods
sub
loopne
stos
inc
add
inc
pop
or
sbb
dec
gs
dec
sub
aam
and
in
pop
das
test
out
or
dec
push
enter
sub
cwde
sbb
cs
daa
or
sti
jecxz
lods
in
mov
cmp
push
idiv
(bad)
js
test
jne
jl
pop
lahf
adc
pusha
sub
mov
call
int
add
sbb
fcom
sub
sub
add
xchg
aaa
inc
pusha
add
es
aam
adc
add
mov
test
push
loope
jmp
fstp
fld
dec
xor
add
adc
cmp
sahf
lods
shl
mov
fild
sbb
fld
repz
add
sysret
int3
or
in
add
in
cmp
add
(bad)
and
adc
lea
fnsave
adc
push
add
ss
and
adc
or
sbb
pop
ffreep
fistp
mov
push
sbb
sbb
mov
lods
mov
sbb
or
pop
add
dec
imul
jno
cmp
fisubr
add
cmp
ja
sub
xchg
jo
cmp
and
stc
or
add
add
repz
jge
add
jo
push
jns
xchg
shl
into
mov
loopne
add
sub
retf
xor
test
lods
add
fld
jmp
mov
push
xchg
(bad)
outs
sbb
cwde
(bad)
test
mov
mov
push
mov
xchg
jl
scas
and
shl
xchg
jmp
dec
or
sbb
arpl
mov
sub
pop
loop
add
xchg
push
jmp
ins
frstor
in
ss
add
das
jg
add
inc
fidiv
sub
push
outs
add
xor
mov
dec
push
sub
idiv
sub
je
dec
je
push
mov
jmp
jmp
add
sahf
loop
push
mov
popa
xor
xchg
inc
pusha
aas
outs
xlat
cmps
in
jns
pop
in
lea
or
call
cdq
mov
pusha
ja
test
lods
ret
loope
jecxz
mov
popf
stc
mov
mov
mov
mov
jne
ret
loope
test
and
test
mov
pop
sub
ret
cmp
push
mov
test
push
pop
mov
loop
test
arpl
add
out
push
in
xchg
jo
xchg
pop
push
add
or
inc
fadd
inc
loopne
mov
fnsave
inc
cli
in
call
shl
inc
hlt
adc
or
loopne
stos
fcom
add
mov
push
div
inc
sbb
cmp
push
and
or
lea
sbb
dec
mov
loopne
add
out
sti
inc
nop
or
inc
sbb
hlt
ret
stos
jl
sar
lods
adc
sbb
outs
dec
aad
nop
outs
adc
add
jo
add
jle
or
repz
in
pop
(bad)
cs
rol
push
mov
sub
dec
sti
add
fcomi
add
mov
loopne
add
cmps
push
jl
pushf
popa
fsub
int
cmp
add
mov
sub
add
jne
jno
les
xchg
cmp
adc
call
lds
xor
psubsw
retf
dec
loope
pop
retf
cmp
jne
mov
cmps
mov
mov
add
fdivr
popa
mov
cli
dec
xor
inc
jmp
inc
adc
jge
(bad)
iret
inc
lock
xor
outs
movs
pop
jmp
jnp
ret
jmp
jmp
push
aaa
pop
cmp
sub
lahf
inc
pop
mov
fiadd
jmp
loopne
mov
push
repz
rol
shl
mov
popf
data16
or
xchg
loopne
call
pusha
(bad)
dec
shl
push
ds
or
xor
sbb
fsubr
inc
add
mov
in
jae
jg
fs
cmp
pop
xor
int3
test
adc
push
push
out
(bad)
sahf
clc
movs
stos
jo
jno
jnp
and
aam
inc
xlat
xor
lahf
or
sti
out
sbb
mov
inc
outs
fsubr
mov
xchg
mov
or
call
push
add
xchg
dec
test
outs
pop
xlat
mov
push
mov
mov
add
ds
or
cdq
and
inc
mov
dec
ss
fsubr
dec
(bad)
and
in
js
rcl
pushf
test
sbb
pusha
shl
inc
dec
jae
nop
dec
or
sbb
jo
nop
rcr
jnp
sub
push
mov
stc
push
xchg
xor
push
movs
mov
xchg
fs
xor
add
gs
rol
int3
pop
sub
ins
pop
jnp
pop
cmp
loop
or
pop
sbb
aas
sbb
mov
cmp
ja
imul
fidivr
sar
cmc
dec
mov
fnstenv
out
daa
adc
xor
lds
out
idiv
pop
xor
jae
sbb
or
sbb
adc
or
xor
pop
enter
fdiv
push
cmp
sti
xchg
or
mov
shl
adc
or
mov
adc
icebp
cwde
push
stos
fwait
xor
xor
dec
cli
pop
xchg
pusha
jmp
pop
into
push
inc
cmps
dec
cmp
add
dec
pop
cmp
cmp
pop
push
imul
adc
or
inc
jo
xor
icebp
(bad)
xor
call
or
push
movs
sbb
inc
push
sub
mov
imul
cli
sar
or
jmp
and
or
push
loop
pop
jmp
in
imul
jbe
mov
loopne
movs
mov
push
nop
mov
popa
jb
xchg
adc
js
test
cmp
aaa
xchg
fnstcw
pusha
pusha
imul
mov
outs
dec
mov
mov
xor
jae
xchg
pop
dec
jle
rcl
mov
sub
test
mov
mov
dec
lock
outs
in
aaa
mov
es
xlat
dec
jnp
dec
sub
and
jge
(bad)
cwde
adc
jbe
inc
cld
clc
lock
mov
adc
inc
pusha
mov
adc
add
rol
push
and
xlat
and
into
pop
or
dec
shr
add
enter
aad
rcl
and
mov
mov
add
mov
ret
adc
mov
aad
sbb
push
(bad)
daa
lea
jmp
test
aam
les
out
(bad)
jo
mov
sti
cmp
pop
hlt
pop
call
jne
pop
or
shl
xor
or
cmps
mov
lar
shl
les
push
inc
fisub
add
scas
lds
push
retf
ret
cmc
rcl
dec
mov
xchg
push
pop
xor
jp
adc
xor
mov
daa
test
rcl
cmp
xor
adc
mov
inc
mov
push
push
sbb
icebp
push
in
in
add
push
inc
xor
sub
dec
xlat
mov
add
fsubr
xchg
dec
outs
xchg
lods
xor
inc
add
inc
sbb
pusha
pop
add
or
or
sub
call
xor
lods
into
add
inc
(bad)
loop
jmp
dec
dec
jne
sbb
pop
movs
fwait
sti
cli
xchg
rol
xor
cmp
sub
rcr
fistp
dec
or
inc
lods
jmp
cmp
cmp
jo
sub
push
ins
mov
lods
mov
jmp
ins
daa
jmp
test
mov
in
add
push
sub
mov
stos
into
mov
cmp
push
ja
popf
mov
jge
xlat
movs
jmp
xchg
sub
sub
iret
cli
cwde
cmp
lds
mov
outs
adc
add
in
and
and
mov
add
sbb
mov
cwde
xor
ret
dec
sub
movs
adc
in
xor
push
popa
inc
inc
imul
pusha
pop
imul
sbb
cs
rcr
mov
adc
push
jnp
in
je
inc
div
xor
jecxz
add
dec
push
je
and
mov
(bad)
(bad)
xor
loopne
stos
ret
jmp
jl
pusha
adc
nop
movs
cmp
inc
ja
lahf
jmp
call
loopne
mov
push
not
jmp
cmp
shl
cmp
lods
test
sar
push
pop
sbb
dec
loopne
(bad)
je
mov
or
lea
test
addr16
fdiv
cmp
outs
daa
add
inc
sbb
jmp
movs
aaa
out
sub
je
push
jo
lock
je
jl
push
jmp
mov
pop
inc
sub
mov
add
(bad)
loopne
call
adc
cmp
mov
rol
mov
fwait
rcr
mov
leave
hlt
out
rcl
call
stos
add
push
lock
push
add
push
ins
imul
adc
cmp
ror
adc
mov
lock
mov
rcl
xor
ds
ret
adc
ss
or
lods
int3
xchg
das
adc
xor
mov
retf
cdq
ret
(bad)
outs
inc
add
xor
popf
inc
js
addr16
addr16
push
cmp
mov
dec
add
mov
dec
inc
cld
in
jle
pop
or
cmps
movs
in
add
adc
inc
ror
jbe
retf
and
popf
inc
push
ins
and
scas
adc
adc
mov
pop
cmp
sbb
and
mov
xor
xchg
sub
sub
push
xor
add
in
ret
daa
add
xor
fdivr
rol
fmul
call
mov
push
xor
pop
inc
cmp
idiv
pop
pop
imul
iret
pause
lahf
lods
mov
loopne
sti
sahf
xlat
test
out
push
shr
rcl
jmp
sbb
stc
and
in
int3
or
and
push
aaa
cmps
sbb
ficomp
mov
jae
mov
xchg
imul
in
cmp
jl
jmp
sbb
adc
or
(bad)
pop
jmp
mov
sbb
test
xchg
sub
sbb
pusha
adc
ror
loope
sbb
add
loope
outs
dec
popf
xchg
or
push
xor
popf
push
adc
adc
iret
aas
xor
call
adc
movs
dec
js
mov
cmp
xor
or
adc
in
jmp
mov
daa
mov
icebp
sbb
sbb
dec
add
in
lahf
out
les
jo
push
push
and
jle
lea
sbb
imul
sar
sbb
int3
cwde
dec
fcom
jle
imul
jmp
ret
sbb
(bad)
into
lods
test
sub
pop
outs
iret
loopne
dec
aad
lds
xor
imul
sbb
add
push
adc
mov
push
or
(bad)
std
jmp
inc
add
lds
sahf
out
out
jo
xchg
scas
retf
cmps
fstp
pop
in
mov
jns
or
neg
pop
aas
ins
pusha
xchg
push
loop
jecxz
xlat
aam
mov
jmp
push
pop
push
lea
gs
sub
js
inc
ins
adc
jmp
mov
aad
inc
jecxz
xrelease
lock
repz
xor
push
mov
xor
mov
or
cmps
xlat
repnz
lods
and
jg
xor
(bad)
shl
adc
mov
sbb
imul
pop
repz
jmp
xor
les
fist
shl
pushf
jmp
mov
push
xor
aam
sub
xor
cmp
mov
movs
adc
pusha
ret
xor
js
int3
jmp
push
cmp
xchg
lods
xlat
es
icebp
lea
imul
ficomp
ret
mov
sbb
mov
popa
cmp
scas
nop
(bad)
mov
lea
rol
adc
mov
cld
mov
into
or
loope
pop
pushf
dec
or
mov
cwde
mov
cmp
adc
pop
inc
jns
retf
dec
iret
add
call
ss
mov
ror
xor
inc
enter
mov
xchg
js
or
test
je
fmul
mov
mov
pop
add
push
jl
mov
pop
mov
loope
pop
sbb
mov
add
hlt
ss
cmp
loop
push
rcpps
js
or
mov
pop
jge
inc
push
rcl
pop
repz
add
sbb
scas
cmp
cmp
fadd
sub
push
adc
bound
inc
cmp
scas
mov
cmp
sbb
cmps
add
inc
sbb
inc
sbb
out
add
je
push
sub
ins
js
sub
scas
push
add
fisub
into
sbb
or
push
arpl
pop
dec
or
xchg
leave
mov
add
dec
jle
dec
cmc
sbb
cmp
push
xor
or
sbb
mov
ss
jl
jmp
dec
daa
mov
jo
mov
jg
mov
call
dec
pop
ds
push
mov
retf
addr16
mov
lods
cmp
das
push
test
dec
outs
pop
bound
add
and
cmp
add
test
(bad)
mov
stos
pop
sbb
ret
fild
fisttp
inc
sbb
or
sbb
js
xchg
fcmovbe
dec
sub
add
mov
dec
sbb
dec
jae
ret
pop
ret
add
xor
ins
ret
jo
cmps
das
jmp
xlat
xor
ja
pusha
jo
stos
enter
js
sbb
or
add
mov
cwde
test
inc
movzx
mov
add
into
js
jo
or
push
lea
call
sub
or
popa
jo
test
push
sub
pop
faddp
dec
pop
cld
dec
add
mov
sub
aas
sbb
xor
test
shr
jbe
ja
xchg
add
sbb
push
jo
es
call
stos
loop
int3
push
cmp
iret
jnp
cmp
push
ins
shr
dec
or
adc
pop
das
xor
out
push
test
mov
xchg
sbb
xor
je
fcomp
adc
cmp
ss
aaa
inc
movsx
sub
push
add
not
dec
mov
jp
aaa
cs
cs
loope
fwait
xor
test
fs
dec
push
shr
dec
xchg
sbb
inc
jmp
jmp
aas
ret
popa
inc
adc
stos
sbb
ins
test
sub
(bad)
std
loopne
test
xchg
ret
fsubr
inc
push
test
popf
sar
retf
pushf
pop
sbb
push
mov
ret
mov
mov
inc
add
int3
or
xchg
mov
stos
int
lds
pop
mov
jbe
out
dec
mov
jbe
add
pusha
fadd
mov
push
adc
mov
mov
int
sub
mov
test
(bad)
mov
or
push
adc
retf
cmp
inc
cwde
inc
(bad)
js
aas
or
inc
bnd
push
mov
ret
dec
ins
jnp
sbb
adc
cmp
pop
xchg
add
and
inc
adc
sub
push
cmp
lea
movs
movs
adc
shl
ss
push
ret
push
lea
loopne
jle
fadd
inc
sbb
inc
push
sahf
dec
jne
pop
pop
repnz
cmp
in
clc
int
lds
(bad)
jg
mov
jle
xor
xor
imul
jbe
lock
xchg
popa
add
sbb
inc
push
(bad)
mov
test
in
test
jle
mov
sub
test
jne
(bad)
fild
sti
jg
mov
mov
add
fcmovnu
pop
out
ds
mov
inc
pop
nop
add
jmp
sti
ins
jg
xchg
rcr
ja
adc
push
add
mov
cmp
int
enter
pop
stos
cmc
and
adc
pop
cmp
std
xor
(bad)
and
call
mov
adc
and
pop
adc
sub
inc
sbb
add
rcr
jp
cmp
icebp
or
add
mov
inc
imul
mov
adc
inc
cmp
jle
push
cmp
sub
test
sub
mov
fadd
add
es
add
jb
and
lahf
jb
adc
jne
sub
adc
idiv
imul
imul
pop
loopne
pop
loopne
add
(bad)
jge
test
cmp
cmps
and
add
pop
or
add
mov
jp
add
mov
cmps
scas
mov
ins
fmul
fsubr
fsub
pusha
inc
out
fadd
cdq
sub
or
pop
rcl
pop
cmp
sar
jne
jle
push
enter
popa
adc
sbb
mov
adc
rcl
jne
ds
in
adc
dec
jg
popa
in
jb
mov
inc
pushf
pop
mov
and
add
xchg
inc
scas
sub
inc
ja
jb
sub
or
sub
fcmovnu
test
jb
mov
loope
or
sbb
cmp
jle
inc
into
dec
(bad)
fisttp
jmp
add
lahf
ja
pop
adc
loopne
icebp
jbe
jge
mov
mov
and
mov
sub
(bad)
fsubrp
cs
sub
add
add
add
push
add
lods
sbb
das
and
les
jg
and
mov
ret
or
pop
outs
adc
bound
pop
and
aaa
lahf
and
add
dec
pop
int
sbb
add
push
add
push
adc
adc
sbb
cs
dec
push
or
loopne
pusha
push
add
and
adc
add
mov
inc
add
ror
shr
xor
or
or
sbb
in
sub
adc
ror
xor
mov
sbb
leave
or
xchg
fstp
add
jle
cs
push
sti
ss
cmp
adc
in
dec
push
pop
jle
sbb
not
pop
pop
or
and
and
loopne
daa
xchg
pop
push
or
lea
fs
mov
push
add
xor
sar
aaa
aaa
aaa
cmp
xor
add
add
and
sub
aas
enter
and
in
inc
cmp
scas
les
dec
sub
aas
lahf
movs
aas
push
(bad)
dec
xchg
push
aas
(bad)
cmp
sar
(bad)
jo
fiadd
adc
xor
stc
aaa
sub
jo
aas
pop
aaa
jge
cmp
mov
arpl
movzx
push
leave
push
test
aaa
cmps
bound
into
outs
leave
sub
sbb
pop
mov
outs
(bad)
movs
add
fcmovnbe
inc
or
mov
dec
mov
xor
xor
sar
lahf
mov
cmp
mov
lahf
mov
push
mov
mul
cmp
push
mul
mov
cmps
dec
xor
xchg
out
bound
or
adc
or
lods
sub
fimul
mov
mov
add
sub
lods
ret
mov
(bad)
rol
sub
xor
fcmovnu
inc
pushf
pop
loope
fstp
or
dec
and
sbb
(bad)
dec
mov
(bad)
gs
sub
xor
cld
mov
and
loopne
inc
or
lods
and
repnz
sbb
mov
jmp
jle
test
je
bound
dec
test
jl
inc
xor
xor
inc
push
pusha
push
push
sbb
pushf
cmovl
jne
pop
pushf
cmp
fiadd
ss
out
sahf
adc
or
pop
mov
push
add
rol
dec
ret
test
jl
inc
ds
stos
pusha
cli
sub
xchg
jg
cmp
mov
mov
lahf
inc
cmp
jne
mov
jmp
mov
test
sbb
test
push
imul
adc
mov
mov
inc
add
jo
cld
push
jp
jne
inc
dec
jne
push
jne
push
mov
scas
pop
add
loopne
and
stos
lods
adc
sub
dec
mov
add
or
or
fidiv
dec
call
(bad)
and
mov
pop
popa
inc
dec
jne
cmps
cmp
je
lds
add
aam
mov
mov
fadd
dec
pop
mov
adc
push
cmp
loop
mov
pop
into
adc
dec
mov
cmp
pop
in
jb
shr
sti
jne
inc
inc
call
push
sbb
push
in
call
add
bound
or
movs
je
ja
stos
push
mov
loope
shr
mov
mov
test
cmps
les
add
int3
cmp
aam
dec
loope
and
adc
sub
ins
inc
aam
adc
cdq
jle
push
or
push
sbb
or
sub
add
jge
movs
or
add
das
jle
mov
add
stos
ret
add
add
or
mov
and
fsubr
or
adc
add
or
outs
add
mov
push
inc
pop
idiv
sbb
push
or
adc
jp
loope
mov
mov
xor
ss
sub
adc
mov
cmp
push
mov
xchg
add
cmp
push
and
mov
loope
repnz
cmp
inc
icebp
mov
call
adc
int3
test
jne
push
rcl
and
sub
enter
add
pop
adc
sbb
jmp
push
cli
jge
xor
rol
sub
inc
pop
or
clc
push
fadd
adc
inc
add
add
dec
out
sub
jns
adc
pop
loopne
jb
scas
and
sbb
in
cmp
je
stos
scas
xor
into
out
loopne
jmp
out
pusha
into
cmpxchg8b
retf
add
test
mov
retf
xchg
xor
add
inc
loopne
mov
fmul
cmp
mov
es
cmc
push
push
(bad)
fidivr
or
mov
dec
pop
or
xchg
out
popa
add
pop
pop
fdiv
arpl
jge
pop
mov
xchg
cs
stos
leave
mov
aas
cmc
sbb
dec
rcl
xor
call
adc
jge
pop
loopne
adc
xchg
cmp
cmp
je
mov
daa
inc
mov
cmp
mov
sbb
push
add
add
cmp
mov
fdivr
inc
(bad)
lds
cmp
ja
not
sub
mov
add
loopne
or
push
emms
or
xchg
cmps
push
cmps
fs
lods
popf
xor
inc
xchg
mov
mov
jnp
jnp
jae
jae
pavgb
repnz
add
push
data16
jae
movs
mov
mov
imul
mov
js
add
sti
sub
in
test
and
mov
add
and
sub
mov
(bad)
loopne
mov
or
sbb
fnstenv
cmps
xor
leave
inc
inc
inc
jecxz
sbb
push
inc
pop
mov
(bad)
mov
sbb
adc
push
add
mov
js
inc
xchg
and
and
xor
cmp
pop
pop
cmp
cmp
add
adc
or
sub
imul
mov
nop
test
inc
mov
sbb
xor
push
mov
jnp
mov
jle
cwde
sbb
sbb
into
mov
dec
js
xor
out
sbb
or
cmp
or
add
mov
jg
inc
add
ret
add
gs
das
test
pop
inc
call
std
add
pop
add
shr
imul
push
or
ds
pop
icebp
out
cmp
jg
mov
inc
mov
or
inc
pop
mov
outs
fist
cmp
adc
jg
jg
mov
push
movs
mov
jmp
mov
xor
mov
in
mov
or
and
and
in
add
pop
and
and
fucomi
push
sub
aam
jmp
mov
stos
aaa
mov
add
ret
adc
js
mov
mov
mov
in
and
or
mov
lea
ins
and
xor
and
pop
fsub
cmp
dec
call
or
movsx
mov
mov
add
pop
sbb
lea
fstp
dec
out
mov
push
push
mov
js
les
xor
mov
(bad)
push
sub
sahf
adc
fistp
sbb
push
inc
or
cmp
ds
(bad)
cmc
daa
push
in
sub
jne
pop
push
mov
xor
xor
rol
gs
fadd
xor
fst
lods
jmp
es
sub
cmp
or
sar
add
inc
jl
push
mov
jbe
mov
or
add
sahf
jmp
inc
adc
out
ficomp
sbb
adc
lods
rcl
add
or
aam
mov
push
mov
push
sub
mov
sub
push
sbb
pop
or
movzx
xlat
cmc
xchg
jbe
mov
(bad)
sbb
cmp
cmp
xor
xor
mov
sti
sahf
pop
xor
push
ja
imul
inc
add
sbb
pop
or
inc
mov
fs
lea
add
jmp
loopne
test
cmp
add
add
xchg
rcr
and
pop
cmp
jns
rol
xor
push
add
sbb
or
punpcklwd
jmp
mov
push
call
inc
jne
cwde
clc
dec
xor
or
and
outs
mov
mov
call
push
add
or
add
clc
jmp
fs
fdivr
fdivr
jp
and
in
mov
dec
aaa
pushf
pushf
jp
pop
cmp
mov
into
call
cmp
js
or
stos
jmp
out
mov
jne
mov
adc
or
push
push
mov
aam
add
or
add
push
jmp
xor
fcmovu
movs
fdivr
into
test
adc
add
movs
je
fidiv
test
sar
push
fsub
cmp
adc
push
leave
lea
movsx
sbb
cwde
mov
aas
retf
aaa
int3
dec
mov
sub
or
mov
nop
push
inc
cmova
(bad)
(bad)
leave
into
cs
or
bswap
adc
ins
push
inc
mov
hlt
lea
ret
xor
fist
test
jmp
cmp
mov
fmul
in
mov
xchg
in
in
jne
(bad)
ffreep
push
loopne
and
ror
inc
pusha
outs
dec
lds
cmp
int
mov
(bad)
and
dec
pop
lods
pop
pop
pop
push
push
les
mov
pop
in
pop
(bad)
out
test
js
outs
add
dec
jae
aaa
lds
sar
jmp
sub
sbb
das
and
push
mov
push
loopne
adc
or
popa
push
mov
jl
push
cdq
loope
mov
mov
mov
mov
lods
push
xor
ret
cmp
sub
adc
mov
ds
cmp
ss
push
add
retf
fldpi
or
mov
jge
fwait
iret
pop
cs
mov
fcompp
fstsw
sahf
fadd
jmp
mov
sub
pop
push
jo
fdiv
sbb
push
rcl
cmp
or
xchg
es
rol
mov
ror
add
loopne
xchg
int
mov
mov
fmul
call
mov
xlat
int
jb
or
mov
nop
or
fistp
add
mov
cmp
cmp
imul
mov
xor
pop
pop
push
dec
sbb
enter
sub
dec
adc
stc
inc
inc
fcom
out
rcr
enter
out
cmps
inc
jo
adc
lea
or
adc
jle
hlt
push
cmp
xchg
pushf
lods
and
and
push
leave
push
aam
cs
neg
adc
push
or
add
ror
fdiv
or
cld
lea
or
aaa
pusha
movs
repnz
or
push
sbb
movs
add
pop
or
dec
aam
sbb
xchg
inc
(bad)
cmp
jne
sahf
in
lods
enter
sbb
and
push
or
mov
mov
jo
gs
pop
arpl
scas
or
xchg
aam
cmc
lods
xor
xchg
adc
or
pop
daa
dec
cli
pop
jae
pop
and
idiv
jne
shl
cmp
dec
push
inc
mov
adc
xor
and
and
sub
dec
or
sbb
push
fist
loope
pop
push
mov
or
jecxz
mov
jmp
sbb
scas
outs
lods
ret
test
jne
out
outs
mov
or
enter
mov
xchg
cmp
shl
cwde
add
inc
cmp
out
or
inc
movs
ret
push
sub
popa
sub
push
call
push
and
xchg
pop
inc
(bad)
int
dec
add
add
and
fwait
cdq
lock
xor
inc
rcr
push
test
fwait
inc
test
out
aas
jp
shl
cmps
and
ret
mov
hlt
xchg
mov
fisttp
clc
fst
sbb
(bad)
test
sbb
mov
sahf
mov
hlt
addr16
lock
movs
movs
jb
imul
adc
fimul
adc
or
cld
push
shl
mov
cmp
adc
jae
adc
adc
sbb
les
dec
jmp
pop
push
addr16
ds
mov
or
int3
lock
test
scas
imul
pop
sahf
lea
sub
or
mov
sar
sub
fsub
mov
mov
push
jo
repnz
or
cwde
enter
add
or
mov
cmp
pusha
fdivr
xchg
xchg
adc
mov
and
bt
inc
in
push
pop
jo
mov
mov
and
or
mov
adc
push
push
xor
adc
mov
xchg
pop
loopne
mov
mov
aad
and
ror
loopne
(bad)
jge
cmps
sub
push
mov
pushf
cli
or
adc
push
adc
pop
mov
mov
popf
fimul
cli
in
jne
jge
arpl
add
jne
jge
imul
ins
xor
cmp
and
clc
adc
xchg
pop
jo
pusha
repz
jmp
add
add
add
add
jns
sti
mov
outs
or
add
in
sub
push
mov
out
ret
into
ftst
xchg
out
xlat
dec
jae
adc
jmp
adc
sub
(bad)
xor
repnz
xchg
sub
retf
lods
mov
fnsetpm(287
or
xor
pop
pop
jbe
or
mov
push
int3
shr
and
lock
jae
popa
add
data16
sub
sbb
pop
jp
or
pop
cs
jmp
pop
push
fdivr
push
ds
mov
mov
sar
pop
ja
bt
jae
mov
sar
inc
or
pop
pop
or
cmc
adc
sti
and
lock
dec
les
icebp
adc
in
jmp
lahf
mov
ror
cmp
cmc
dec
fisttp
and
ror
push
pop
or
add
sar
pop
shr
mov
and
lea
shr
cwde
dec
dec
fistp
fcmovnbe
lahf
inc
not
jle
mov
and
pop
adc
mov
sub
xchg
jo
fld
dec
jno
ficomp
aaa
jbe
mov
je
xor
loopne
dec
rcl
xor
dec
retf
inc
jo
out
std
inc
xor
lods
or
xchg
out
div
adc
(bad)
add
sub
test
mov
mov
jnp
pop
pop
lods
pop
popf
push
cli
pop
dec
iret
xchg
mov
in
pop
jmp
retf
dec
hlt
xchg
push
retf
cmp
cmp
sbb
imul
clc
mov
mov
or
add
xor
test
pushf
sub
pushf
pop
arpl
into
lock
xchg
dec
fnsave
shr
mov
and
mov
cmps
xor
pop
xor
imul
aam
jg
add
sbb
in
idiv
sbb
mov
mov
cmovae
ss
dec
sar
(bad)
mov
pop
cmp
repnz
shl
adc
mov
mov
push
adc
clc
aad
sbb
inc
pop
and
mov
(bad)
mov
xchg
jmp
mov
jne
sub
ret
mov
push
jg
pop
cmp
xchg
or
sbb
out
addr16
push
dec
mov
lea
clts
add
adc
dec
jae
mov
cmp
mov
or
push
mov
add
je
imul
(bad)
xor
and
inc
and
add
dec
call
dec
add
gs
mov
add
shr
push
push
pop
in
rol
push
cwde
mov
sti
ins
cmp
mov
xchg
mov
sbb
arpl
call
sub
sub
xchg
hlt
hlt
xchg
xor
xchg
mov
(bad)
rcr
lahf
shr
pop
fstp
cmp
and
or
lock
jl
dec
sbb
movs
jo
xchg
ins
cs
or
hlt
fdivp
push
mov
adc
push
ror
cld
xchg
in
or
(bad)
shl
ret
hlt
cdq
repz
mov
add
(bad)
aad
xchg
push
xor
xor
push
jecxz
adc
inc
hlt
out
std
inc
out
fmul
push
jecxz
add
adc
add
or
pop
cmp
dec
xor
or
clc
pop
loopne
jo
mov
push
add
sbb
mov
movs
in
xchg
or
call
(bad)
xlat
adc
loope
fwait
sbb
shr
jne
std
dec
fnstsw
sub
mov
mov
add
sub
retf
xor
arpl
sbb
push
pop
pushf
loope
jle
sub
and
adc
cmp
mov
or
sub
pusha
leave
adc
add
mov
ins
xchg
xchg
inc
scas
dec
ss
xlat
sbb
std
rcr
add
mov
gs
jl
ja
mov
int
mov
mov
sub
sahf
out
cmp
push
jo
sbb
adc
imul
cmp
add
adc
mov
imul
add
add
cmps
and
mov
nop
js
mov
add
rcr
inc
mov
out
or
push
jecxz
lds
push
(bad)
sub
cmp
mov
ficomp
and
jp
xor
cmp
out
pop
popa
push
int
rcl
dec
pop
jmp
adc
xor
lods
xor
out
sub
sub
sti
call
adc
adc
or
dec
pop
jmp
sub
ret
adc
cmps
mov
add
loopne
(bad)
dec
rol
iret
hlt
mov
xchg
ret
pop
add
ret
xchg
lock
jge
add
or
sbb
cmp
add
cwde
test
test
lock
add
and
clc
pop
jg
add
adc
or
cld
cld
mov
push
pop
mov
mov
jge
sub
fisttp
rcr
dec
or
jl
jmp
clc
fidivr
or
jb
lods
je
jmp
jo
call
les
sbb
mov
jns
je
jns
xchg
push
repz
call
xor
loopne
push
push
inc
sub
in
jmp
push
int3
fwait
push
aaa
rcl
lahf
adc
inc
fstp
xchg
aaa
xor
js
jmp
fbstp
outs
in
jge
pushf
jmp
les
aam
or
mov
jbe
repnz
and
push
push
or
outs
sbb
fadd
fmul
and
stos
inc
movs
inc
or
gs
or
data16
mov
xor
movs
sar
nop
xchg
mov
cmp
shr
ds
xor
cmp
adc
imul
icebp
jo
pop
stc
push
outs
dec
in
sub
outs
or
(bad)
mov
xchg
sub
xor
dec
xor
adc
adc
cmp
cdq
ins
xor
sbb
add
add
mov
sahf
bound
test
and
out
mov
sbb
xchg
xchg
add
cs
mov
mov
retf
sub
cmp
sti
cdq
dec
mov
and
je
and
or
lahf
pop
hlt
outs
xor
xor
mov
adc
pop
(bad)
shr
jge
in
fmulp
nop
ror
fwait
cmp
mov
xor
sub
aas
sbb
xor
jmp
pop
sbb
into
mov
fwait
lods
popa
and
lds
mov
imul
cld
lahf
test
ret
mov
dec
and
xlat
pandn
or
xchg
cmps
cwde
add
shl
add
test
pop
adc
add
sahf
loop
mov
lods
sub
cmp
(bad)
push
or
pushf
adc
jno
dec
or
fadd
xor
jo
inc
inc
push
dec
stos
(bad)
loope
loop
addr16
pop
pusha
push
pop
push
push
push
adc
add
imul
adc
aas
sub
adc
adc
sar
ret
pushf
sbb
add
inc
dec
adc
jbe
(bad)
ins
je
aam
jne
cmp
jbe
bnd
inc
mov
dec
jne
loope
inc
mov
test
hlt
fimul
xor
fucomi
lahf
lods
dec
fdiv
cmp
and
popa
inc
xchg
xchg
rol
mov
mov
imul
clc
jns
adc
xchg
dec
loop
push
mov
mov
adc
or
jmp
or
xor
and
mov
loope
sahf
push
push
mov
mov
lahf
pop
xchg
pop
and
mov
enter
mov
mov
pop
pop
ret
push
push
call
ins
dec
or
leave
jl
inc
xor
lea
movzx
shr
or
in
fwait
jmp
mov
add
add
mov
add
pop
sti
idiv
pop
mov
inc
and
or
dec
lea
rcr
pop
add
dec
jne
retf
fdivr
add
fxtract
fild
xchg
in
push
(bad)
push
push
push
hlt
repnz
leave
add
sahf
or
jle
dec
add
sub
jb
adc
push
jb
out
bound
pop
jae
dec
dec
or
dec
inc
xchg
inc
icebp
jmp
loope
pop
sar
(bad)
inc
fisub
pop
sbb
or
fsubp
add
mov
fiadd
push
jne
push
pop
je
(bad)
jmp
pop
adc
and
jb
jns
push
jns
je
ins
cs
ins
popa
jae
(bad)
(bad)
jae
jae
push
push
gs
imul
add
sti
imul
jmp
adc
sbb
mov
add
pop
mov
ffree
push
fadd
sub
loopne
add
iret
repz
movs
sbb
imul
jg
jae
icebp
lods
inc
jbe
out
xchg
dec
loopne
add
outs
jne
cmp
outs
jb
adc
cld
ds
out
dec
outs
jbe
dec
gs
pop
adc
pop
pop
pusha
xchg
or
or
cmp
call
sbb
sbb
mov
inc
sub
outs
cmp
imul
arpl
outs
jae
add
mov
jae
ret
push
add
or
add
sbb
sbb
add
or
or
jo
cld
das
sbb
xchg
jg
push
add
inc
js
scas
fld
xchg
xchg
push
dec
add
cmps
bound
add
cmps
pop
inc
sub
jb
xchg
enter
shl
ds
xor
pop
int
pop
out
pop
xor
pop
push
les
mov
pop
add
push
fadd
push
test
or
aaa
pop
gs
mov
add
in
jle
xchg
sub
sub
stos
cs
je
popa
pop
outs
push
aaa
leave
ins
mov
(bad)
(bad)
dec
xor
data16
cdq
mov
enter
cld
mov
cs
push
popaw
jne
je
imul
xor
data16
fisttp
or
inc
adc
sbb
and
dec
push
lods
mov
or
pop
or
inc
cmps
adc
retf
std
push
pmovmskb
or
inc
add
add
jae
add
inc
mov
inc
push
scas
pop
lods
ins
(bad)
dec
add
push
mov
popa
add
cld
lahf
sub
or
cmps
mov
jne
arpl
adc
mov
mov
rol
mov
push
les
out
das
add
sahf
cmps
invd
inc
(bad)
push
or
inc
div
add
loopne
cmp
inc
femms
lock
and
imul
les
push
xor
mov
pop
jo
aam
push
jge
(bad)
cmp
call
push
inc
dec
sbb
ss
adc
loopne
or
add
add
repz
pop
sbb
pop
shl
mov
push
sbb
clc
mov
sti
lock
ja
cmps
mov
outs
test
cmps
sahf
push
stc
das
dec
adc
xor
adc
pushf
clc
outs
cwde
inc
out
sar
aas
push
int3
imul
sub
cmp
and
mov
add
push
mov
cwde
push
ret
dec
pop
jo
pop
mov
out
jae
jae
inc
xchg
stos
dec
jno
sub
add
dec
out
pop
pop
fstp
sub
jno
adc
xchg
ror
adc
xor
dec
jmp
out
jne
jno
inc
cs
arpl
(bad)
cmp
jns
adc
xlat
pushf
pushf
mov
adc
loope
dec
inc
sahf
push
adc
xchg
int3
daa
daa
and
adc
xchg
xchg
daa
sub
dec
jae
xchg
xchg
xchg
cwde
mov
leave
leave
leave
js
fscale
jecxz
fs
sbb
add
cmp
mov
(bad)
and
cwde
push
mov
and
jnp
scas
leave
leave
or
or
dec
pop
sbb
xor
dec
or
stos
fst
or
inc
rol
cmp
in
jno
dec
ja
mov
jae
push
test
cwde
adc
inc
cwde
xchg
sub
cmovns
mov
addr16
push
adc
add
inc
push
popa
jg
inc
repz
pop
inc
dec
jg
add
add
fs
mov
mov
add
arpl
add
or
outs
sub
fisttp
push
xchg
add
mov
push
cmp
or
and
shl
adc
loopne
sbb
int3
jbe
dec
data16
sbb
add
or
cmc
enter
inc
pusha
rcr
dec
(bad)
scas
and
xchg
add
in
popa
or
dec
add
xchg
push
mov
and
call
gs
call
popa
arpl
pop
xor
or
mov
clc
add
jne
test
imul
iret
mov
and
push
jno
mov
loopne
add
or
mov
pusha
inc
and
(bad)
repnz
mov
add
ins
push
and
lock
pop
jmp
int
mov
inc
js
jo
adc
adc
sahf
imul
pop
or
fsubr
cmp
adc
xchg
xor
int3
mov
(bad)
in
push
popa
mov
lock
jl
and
dec
gs
and
sbb
add
fistp
outs
shl
add
fmul
nop
test
adc
inc
dec
popa
add
add
cli
jo
repz
add
cmp
add
or
popa
imul
jl
or
dec
mov
jmp
rol
mov
add
cdq
push
or
daa
sahf
jns
xchg
adc
adc
mov
lock
outs
xchg
mov
inc
jl
or
adc
pusha
inc
sti
(bad)
loope
pusha
cmp
dec
add
inc
xor
jns
or
cwde
inc
or
not
popa
pop
add
mov
fs
dec
test
or
add
mov
push
jb
ins
test
xchg
(bad)
jae
ret
or
fsubr
xor
(bad)
sbb
(bad)
ficomp
mov
xchg
mov
fcomp
pop
pop
jnp
add
je
mov
imul
test
inc
xchg
mov
push
mov
add
mov
fsubr
or
or
sub
test
or
mov
pop
push
xor
push
arpl
jns
sbb
mov
add
dec
inc
inc
push
inc
push
sbb
xchg
xor
retf
push
arpl
aaa
inc
ret
xlat
add
ins
call
pop
dec
(bad)
adc
push
inc
xor
enter
ss
pop
cmp
int
fidivr
push
adc
sbb
enter
dec
add
push
fdivr
lds
adc
sbb
mov
add
inc
imul
pop
jne
movs
pop
mov
add
jg
outs
fcomp
lds
lods
rcr
jns
cmp
popa
push
adc
je
fdiv
dec
ja
xor
sbb
and
xchg
jg
inc
push
jb
arpl
or
jbe
adc
je
ins
xchg
jae
inc
xor
sahf
inc
test
cs
pop
pop
frstor
jl
cmps
cmps
pop
xchg
or
nop
push
push
call
add
add
mov
mov
mov
sbb
add
leave
cmp
sub
sub
out
mov
cmovb
pop
pop
pop
ret
dec
add
adc
mov
mov
mov
div
lea
xchg
retf
add
cwde
and
ins
adc
adc
push
or
jo
pop
or
push
adc
ffreep
add
leave
xlat
xchg
sbb
adc
icebp
sbb
inc
test
and
push
xor
out
dec
test
loop
xlat
push
xchg
pusha
lds
mov
and
add
dec
fild
and
add
and
leave
addr16
retf
mov
aaa
(bad)
pop
pop
fsubr
bound
and
pusha
das
jle
aas
add
push
dec
(bad)
jl
fld
jo
(bad)
mov
jne
leave
push
xchg
push
(bad)
pusha
push
imul
loopne
sar
sub
test
sub
ret
and
fistp
push
inc
cmp
in
or
rcr
in
inc
sub
dec
pop
inc
add
xchg
cs
scas
adc
aas
inc
add
mov
add
mov
jno
scas
(bad)
in
jo
push
cmps
inc
and
mov
add
jmp
rol
pop
mov
push
and
pop
add
ret
add
add
inc
xchg
clc
ins
mov
mov
add
add
jg
jne
mov
push
dec
aam
or
xor
dec
push
xchg
data16
inc
push
dec
(bad)
push
xlat
push
jo
add
sbb
je
outs
adc
jae
cmp
fdivr
fadd
push
sub
push
xchg
add
xchg
add
push
shl
mov
push
add
pop
or
lods
daa
or
jo
push
stos
xor
dec
addr16
adc
or
(bad)
pop
neg
push
sbb
fimul
xor
pop
jo
es
pop
pop
push
fidivr
add
dec
out
push
sub
lods
scas
add
push
inc
dec
ja
shl
test
lea
or
ja
rol
jae
cmp
xor
add
jns
add
invd
daa
inc
fadd
jo
mov
fstp
test
sbb
bswap
xchg
xchg
xchg
push
(bad)
retf
movaps
leave
leave
leave
pop
cmps
cmc
sbb
repnz
fs
or
sub
jb
dec
pushf
rcr
sub
cmp
sbb
stos
rcr
sub
sahf
pushf
jmp
dec
dec
mov
das
cmp
loopne
inc
call
pushw
mov
mov
(bad)
sbb
pop
sub
test
sub
std
cmp
cwde
dec
add
data16
or
sub
jecxz
outs
dec
mov
daa
cmp
xor
and
push
cmp
aas
xor
pusha
xor
lock
out
dec
je
sub
jg
in
or
pop
jo
outs
mov
lods
sar
add
bound
xchg
sub
rol
outs
adc
push
add
imul
and
mov
sub
shl
outs
jae
inc
sub
ret
inc
cmp
inc
add
jno
add
push
xchg
and
das
leave
call
test
pusha
add
pop
push
outs
mov
add
inc
add
or
or
bound
jns
outs
jo
ins
add
inc
inc
iret
mov
inc
or
jno
movs
and
lods
add
inc
add
movd
push
fdiv
adc
add
aam
outs
add
mov
xchg
cdq
ss
pop
dec
nop
push
mov
jo
xor
add
or
push
pop
outs
xchg
aaa
rol
xchg
outs
inc
mov
sub
add
sbb
add
mov
xchg
mov
rcl
jno
dec
pop
nop
jl
add
pop
sub
add
outs
cmp
add
add
add
dec
inc
and
mov
dec
mov
popa
imul
add
add
add
push
cmp
cmp
xor
inc
jb
xor
adc
test
and
je
sbb
(bad)
outs
dec
adc
fld
add
and
sub
sbb
pusha
movd
add
mov
outs
or
fsubr
xor
mov
push
cwde
xor
sub
pop
arpl
cmp
mov
shr
xchg
inc
add
imul
pop
lock
xor
and
lea
lods
les
fnstcw
call
xchg
aad
adc
ja
jno
cmp
and
xor
adc
addr16
or
and
inc
pop
nop
movs
addr16
fnstsw
cmp
mov
xchg
xor
daa
mov
idiv
adc
fmul
mov
push
iret
and
push
dec
and
aad
outs
arpl
cld
mov
outs
inc
jne
ins
(bad)
mov
mov
xor
inc
push
(bad)
push
push
cmps
cdq
movsx
movs
dec
aaa
cmp
js
xor
ret
mov
shl
jecxz
mov
xlat
mov
lods
shl
push
std
dec
xor
push
adc
std
inc
xchg
inc
and
nop
test
ficom
stos
pop
ins
stos
and
add
(bad)
stc
xor
enter
push
pop
adc
dec
xor
cdq
mov
sub
adc
inc
and
rcr
push
xchg
test
mov
aad
mov
ficom
jb
cmps
mov
outs
inc
repz
mov
mov
mov
mov
int
fld
push
inc
and
es
add
out
or
jne
and
mov
lock
jne
arpl
push
mov
push
sti
(bad)
jle
jle
shl
add
cld
cmp
je
mov
inc
cmp
push
push
mov
mov
(bad)
stos
or
xor
lea
mov
dec
add
fmul
cwde
(bad)
outs
(bad)
mov
call
aad
nop
mov
mov
mov
ret
jmp
in
mov
call
mov
ret
nop
and
fadd
push
mov
push
add
arpl
sub
and
push
pop
pushf
mov
dec
clc
ret
outs
add
jb
cmps
xchg
pop
xlat
or
inc
jb
adc
mov
add
adc
add
(bad)
outs
add
add
or
icebp
sar
jge
push
cdq
js
fldz
jg
test
test
jle
mov
jmp
jmp
sahf
fisttp
ret
xlat
outs
hlt
ss
lea
retf
jns
inc
push
fldenv
cmp
xor
sar
nop
xor
jbe
xor
sbb
or
jl
mov
add
jmp
mov
mov
push
test
fmul
or
inc
fsub
or
add
mov
and
stos
int3
sbb
sub
outs
pop
clc
mov
cmp
xor
or
push
or
adc
or
dec
adc
dec
icebp
inc
popa
mov
jmp
jmp
cmp
push
cmp
push
pop
test
fdivr
mov
jmp
nop
cmp
adc
add
push
loopne
mov
rol
bound
imul
pop
fcomp
push
daa
xor
sbb
adc
mov
push
push
pop
mov
arpl
jecxz
or
sub
mov
into
xor
dec
pop
cmp
pop
sbb
or
out
movzx
loopne
in
aaa
pop
in
out
fmul
sub
shl
call
lahf
add
dec
sar
cld
mov
or
push
xor
cmp
jae
sti
and
mov
sbb
cmp
or
ds
ror
pop
sahf
adc
and
jle
and
lock
add
lds
rol
pushaw
push
addr16
rcr
lock
mov
xchg
mov
rol
mov
cmp
cmp
mov
push
inc
cmp
push
inc
dec
mov
cmp
frstor
jb
jnp
or
xor
mov
mov
stos
fwait
xor
lock
div
(bad)
fsub
jmp
dec
nop
enter
repnz
hlt
jo
jnp
push
push
jmp
outs
and
inc
inc
push
ss
xchg
sub
mov
push
jne
dec
cmp
pushf
add
xchg
repz
mov
enter
sub
or
lods
loopne
jbe
cmp
cmp
or
mov
push
movs
cs
aaa
and
or
call
and
jl
push
icebp
int
pop
je
dec
dec
or
pop
lock
loopne
je
add
mov
and
or
outs
jl
and
add
(bad)
add
leave
jmp
sbb
outs
adc
sub
pop
or
push
out
dec
lock
js
pop
xchg
sub
push
ret
push
or
ins
cmps
add
gs
ror
jb
test
pop
stos
adc
push
sbb
in
jle
test
stos
xchg
inc
push
ret
sbb
jo
dec
in
add
sbb
or
enter
mov
pop
in
(bad)
sbb
popa
in
lock
adc
movs
jo
or
imul
or
bound
dec
iret
mov
shr
dec
pop
xor
xchg
pop
adc
xlat
ror
clc
sub
push
ds
loopne
(bad)
or
mov
sub
call
or
jle
fdiv
test
(bad)
push
or
fs
jg
and
sbb
inc
or
push
or
push
push
sub
adc
add
adc
add
or
imul
sbb
in
cmps
mov
inc
push
adc
add
add
out
mov
sbb
sbb
or
(bad)
in
adc
or
jbe
push
pop
out
lods
or
sbb
cmps
(bad)
sti
scas
push
repz
lock
mov
lea
xchg
sbb
mov
movs
pop
add
xor
loope
add
inc
pushf
loop
mov
mov
sahf
mov
or
rcl
cmps
sub
xchg
call
lock
mov
mov
mov
cmps
mov
adc
fldenv
inc
bound
repnz
jnp
pop
or
je
cmp
or
test
cwde
call
push
call
dec
loopne
clc
add
mov
call
jo
iret
les
je
and
shr
clc
mov
mov
stc
cli
dec
clc
mov
cli
xor
jmp
mov
adc
aam
into
cmp
jo
sbb
sub
jg
mov
imul
add
cmp
jmp
add
inc
add
cmp
jne
scas
jbe
outs
adc
test
cmc
inc
das
test
lods
sbb
push
fs
xchg
inc
fcomp
dec
jns
xchg
inc
or
dec
push
leave
xor
mov
inc
test
je
mov
sub
pop
lock
jne
ror
sbb
mov
add
adc
inc
jp
shl
scas
inc
sbb
adc
push
xchg
lods
xor
or
xor
add
mov
jg
daa
sbb
mov
test
pop
pop
mov
cmps
scas
fldcw
mov
ds
mov
je
push
hlt
mov
push
or
or
test
and
mov
mov
lds
sub
mov
stos
xor
lods
mov
cmps
xor
push
call
mov
xchg
and
push
mov
push
mov
and
adc
jno
inc
adc
shr
test
popa
sub
mov
mov
or
dec
sti
sbb
outs
hlt
stos
or
mov
ds
stos
push
fild
sti
adc
jne
add
or
sbb
sbb
jle
add
xchg
rcr
inc
loopne
mov
movd
fistp
jns
sbb
lods
movs
shr
daa
iret
add
xor
ins
sahf
js
fistp
cmp
pop
mov
pop
rol
outs
pop
enter
inc
test
adc
cmp
cmp
sbb
inc
add
jge
inc
or
adc
movs
adc
cwde
(bad)
jno
hlt
sub
loope
pop
and
push
mov
push
add
add
out
jmp
inc
stc
test
jmp
adc
or
push
and
inc
das
jo
sbb
mov
mov
adc
xor
sahf
mov
(bad)
into
push
cmp
fs
adc
push
sbb
jo
imul
inc
push
cmp
cmp
lds
jmp
jb
push
or
pop
sti
xor
xor
adc
or
shl
mov
jmp
(bad)
test
hlt
mov
adc
inc
outs
test
cmp
sti
in
xor
adc
repnz
ror
fwait
inc
push
sbb
ror
ss
sub
dec
xor
or
xchg
test
mov
leave
push
adc
imul
imul
jne
mov
jge
call
sahf
adc
xchg
inc
push
push
fcom
outs
div
inc
mov
jo
outs
xor
loope
mov
sub
sub
inc
xchg
mov
adc
push
ss
mov
and
mov
test
inc
push
fwait
add
push
(bad)
or
xchg
pop
cdq
jb
out
or
jb
(bad)
dec
jo
jecxz
aaa
ja
inc
mov
mov
nop
mov
add
call
call
or
in
lock
ss
ss
in
hlt
or
xchg
adc
mov
push
inc
lock
cmps
aam
sbb
lock
adc
movs
jmp
pop
or
mov
inc
add
js
dec
rcr
push
loopne
int
mov
xor
xlat
jo
mov
push
push
adc
xlat
(bad)
loopne
pushf
sbb
push
mov
jo
jecxz
lock
add
sub
mov
or
cmp
push
xor
sbb
mov
hlt
adc
mov
loop
push
xor
or
test
cmp
xchg
sub
rcl
rol
aaa
ficom
fadd
jg
aaa
clc
inc
and
adc
adc
push
call
mov
adc
clc
add
pause
ficom
clc
push
call
and
mov
pop
jbe
daa
sub
ret
inc
inc
js
outs
dec
fisubr
(bad)
sub
adc
(bad)
jnp
xchg
xor
mov
loopne
jmp
jmp
outs
pop
enter
test
int3
sar
sub
das
loope
pusha
lock
(bad)
test
xor
sub
add
and
or
push
pushf
add
in
push
push
jl
lock
pop
dec
cmp
mov
(bad)
adc
enter
fild
adc
sti
push
adc
add
push
popf
pop
sbb
xor
push
push
mov
push
sub
(bad)
sti
inc
in
adc
fistp
add
and
and
jmp
push
fld
mov
dec
dec
xor
sbb
jb
push
dec
icebp
test
mov
adc
mov
cwde
imul
(bad)
mov
js
add
cmp
dec
inc
lea
lahf
sbb
jp
dec
call
lea
leave
sub
adc
(bad)
cs
loope
aaa
dec
in
cld
inc
mov
test
pop
mov
cmp
and
pusha
sub
aad
xchg
dec
pop
in
pop
inc
xchg
movs
jl
inc
in
xchg
loope
mov
adc
xchg
in
push
or
aaa
lea
push
mov
ds
mov
inc
and
mov
div
push
inc
or
lea
jmp
push
or
scas
call
jge
fdiv
ror
(bad)
(bad)
fimul
and
ins
and
dec
cmp
setg
bound
call
mov
sub
mov
les
test
push
test
ds
inc
cmp
sub
xchg
arpl
or
test
add
out
push
and
jmp
xlat
inc
fst
sbb
test
loope
xor
pop
iret
stos
std
(bad)
sbb
cmc
push
push
das
jo
push
sub
sbb
or
mov
and
out
add
into
adc
jl
pushf
mov
push
cwde
adc
xchg
mov
popa
movs
mov
dec
xor
pop
fistp
dec
adc
movs
mov
ror
imul
dec
or
je
and
mov
and
ins
addr16
push
in
sub
xchg
add
pusha
inc
mov
or
es
stos
dec
mov
lea
adc
push
popa
inc
xchg
mov
aam
jo
pop
pop
xor
push
sbb
cmp
cmp
out
add
lea
or
push
push
add
loopne
mov
pop
pop
pop
(bad)
hlt
sub
pusha
mov
or
jne
mov
dec
add
loopne
nop
inc
add
mov
fadd
call
aam
or
fadd
ins
outs
jge
cmp
push
inc
sub
xchg
sar
or
adc
in
push
aad
cmp
jne
(bad)
cwde
cmp
int3
dec
or
in
push
mov
add
sbb
sub
addr16
pop
pop
mov
adc
dec
cmps
cmps
push
mov
cmp
cmp
xor
inc
sbb
js
add
and
sbb
pop
jo
push
xor
mov
rol
cmps
aam
dec
xor
or
cmp
add
(bad)
push
fdivr
jmp
or
outs
ds
jle
mov
pop
dec
jle
or
nop
jge
(bad)
dec
mov
cmp
jne
or
inc
xor
mov
ret
mov
adc
nop
cmp
movs
cmp
inc
push
cmp
mov
jnp
shl
xor
shl
int3
xchg
mov
cmp
push
xor
dec
cmp
pop
adc
push
push
sub
push
xor
ror
jo
mov
mov
add
or
adc
xor
xor
or
mov
lock
(bad)
sbb
adc
inc
enter
test
or
lock
add
and
pop
sbb
push
adc
les
das
enter
popa
mov
inc
fsub
or
gs
mov
xor
adc
cmp
add
xchg
inc
pop
mov
dec
add
test
jmp
jne
xchg
mov
jmp
add
aaa
cmp
inc
sbb
adc
dec
cmp
adc
ror
sbb
loope
out
imul
retf
mov
adc
inc
push
pop
or
jne
cmp
push
daa
mov
test
jl
inc
inc
add
adc
adc
test
nop
inc
dec
jne
jg
inc
lds
fsubr
xor
fwait
retf
add
jmp
mov
adc
jae
dec
out
xchg
cmp
out
dec
int3
(bad)
sar
es
lods
dec
repnz
dec
push
and
rol
xor
into
retf
retf
cmps
jae
adc
cmp
ds
jecxz
mov
shl
data16
inc
aas
add
add
into
adc
fisttp
xchg
mov
add
into
sbb
lock
push
hlt
and
mov
pop
or
lock
hlt
dec
test
jl
jle
xchg
pop
test
popa
sbb
data16
jl
push
addr16
mov
push
or
jle
mov
repz
and
ror
sbb
aam
cld
int3
clc
dec
sub
les
lds
push
sub
add
call
xor
inc
inc
(bad)
in
test
inc
mov
push
mov
mov
push
call
gs
das
inc
jo
ds
push
push
add
sbb
rcr
aaa
aas
pop
out
adc
nop
daa
cs
loop
push
or
xchg
test
into
(bad)
ret
push
addr16
inc
inc
out
pop
arpl
(bad)
xor
add
daa
push
or
xchg
and
mov
les
cmp
jne
add
sbb
inc
or
pop
mov
mov
xchg
adc
scas
dec
xchg
shl
sub
jnp
in
mov
and
xor
dec
mov
aam
jne
ret
or
xchg
not
push
cmp
call
pop
and
mov
lock
xor
mov
mov
pusha
xchg
repz
test
sbb
jo
outs
outs
je
inc
sbb
fistp
cmp
and
dec
and
and
add
cmp
lds
add
add
movs
push
dec
lahf
es
jb
jae
add
push
stos
jg
ds
pop
push
ret
inc
gs
jne
jmp
retf
add
and
xor
jmp
adc
repz
mov
mov
pusha
test
cs
repz
add
inc
int3
pop
jb
add
ins
cs
shl
add
jb
add
dec
push
imul
test
scas
inc
fistp
mov
jle
jg
jae
jl
push
rcl
cmp
ss
mov
xor
and
pop
pop
xor
jmp
xor
fadd
adc
mov
add
dec
sub
add
adc
add
bound
test
jb
arpl
scas
cmp
push
inc
call
or
inc
pusha
pop
jo
cld
push
pop
inc
jp
adc
popa
setg
mov
add
fbstp
sbb
sbb
je
ror
xor
call
sub
lock
or
pop
pop
sti
cmps
loop
push
ja
push
and
ds
pop
mov
push
jbe
stos
jg
xlat
jo
pusha
push
mov
or
cld
add
and
or
or
sbb
jnp
xchg
(bad)
push
dec
push
sub
pop
push
idiv
xchg
and
jae
out
push
daa
arpl
or
jae
or
or
(bad)
repz
pop
pop
dec
push
and
jno
add
adc
ja
popa
push
xchg
ret
std
and
dec
jne
xchg
jmp
cmp
jae
pop
adc
test
pop
cdq
outs
sub
jge
movs
cs
test
add
xor
mov
xlat
cmp
add
add
add
push
add
popa
pop
ja
add
arpl
pop
inc
add
sbb
loopne
mov
mov
aam
inc
jl
jbe
mov
or
jmp
inc
stos
(bad)
das
in
outs
adc
dec
out
inc
clc
mov
mov
(bad)
adc
jae
call
mov
(bad)
jl
inc
(bad)
mov
pop
xor
mov
pop
pop
xchg
mov
or
and
std
out
js
cmp
je
dec
jne
mov
popf
inc
push
shl
repz
sbb
scas
test
sub
pushf
inc
cmp
add
(bad)
jl
lea
xor
in
aaa
shr
and
clc
loopne
inc
fisub
call
jae
push
rol
xchg
fcomip
inc
lods
mov
jmp
test
pop
xor
lea
mov
add
push
lds
arpl
jno
scas
dec
(bad)
lock
lea
pop
bound
out
xor
sbb
add
je
fs
aas
push
das
add
lods
test
jne
sbb
pop
jmp
push
push
les
pop
mov
dec
je
push
mov
ins
test
ss
adc
or
and
push
jecxz
test
(bad)
and
xchg
or
inc
lds
xor
cmps
dec
mov
push
scas
rcr
shr
daa
mov
and
pop
(bad)
je
xor
xchg
add
or
or
(bad)
and
iret
lahf
push
adc
cmp
push
or
xchg
mov
mov
inc
mov
outs
adc
fcom
mov
ret
cmps
dec
fwait
popa
in
cdq
pop
dec
adc
mov
fs
jbe
push
ja
xchg
jge
jl
(bad)
jg
jbe
cmp
xchg
pop
pusha
(bad)
je
cld
sub
cmp
(bad)
xchg
mov
fidiv
inc
cld
lea
pop
fisub
dec
(bad)
shl
add
popf
mov
stos
and
shr
test
xor
mov
outs
push
lock
add
sbb
adc
shr
ins
dec
cmp
or
adc
cmp
out
out
mov
push
movs
push
push
add
jns
mov
retf
scas
and
dec
in
add
fsubr
stos
mov
call
xchg
lock
loopne
xchg
pop
push
clc
push
add
adc
lods
push
add
jo
(bad)
retf
adc
xor
add
mov
dec
pop
pop
push
pop
test
add
push
mov
cs
test
push
xor
aad
cmps
and
addr16
jle
xor
pop
dec
cmp
sbb
idiv
nop
xor
xchg
cmp
add
add
lods
cmp
ins
pop
xor
loopne
lea
sub
jo
fadd
push
inc
and
sub
int
and
push
sub
or
cld
inc
lahf
(bad)
movs
inc
inc
xor
ret
xchg
add
jecxz
push
push
mov
mov
add
push
cmp
or
jmp
or
sbb
or
shl
dec
pop
cmp
push
mov
ficomp
inc
xor
pop
dec
and
loopne
xchg
xchg
adc
inc
dec
jne
pop
je
sbb
jge
sbb
out
jge
loop
jne
push
or
add
xor
add
out
xor
into
dec
or
ret
pop
jmp
test
jbe
cmp
(bad)
es
daa
push
pusha
icebp
movs
shr
add
push
dec
in
pop
or
push
or
cli
fcmovnu
dec
psraw
add
movs
bound
inc
and
sub
push
push
push
dec
xor
and
push
add
mov
and
in
pusha
adc
jo
imul
dec
cmp
cmp
xor
or
ret
push
sub
xchg
add
clc
lock
pop
jno
mov
push
push
sbb
call
or
jl
sub
jmp
xchg
add
rcr
ror
jo
sbb
jnp
dec
cwde
or
shr
and
cmp
adc
jbe
pop
or
jae
pop
jl
xchg
push
mov
scas
jmp
push
add
sub
dec
cmp
fmul
add
call
add
xchg
and
aas
or
and
or
and
lgs
into
es
enter
dec
and
push
add
call
lock
inc
add
inc
cdq
sub
push
xor
mov
push
loop
in
pop
inc
(bad)
int
dec
add
fbld
push
mov
mov
dec
add
jo
scas
mov
ds
mov
les
add
adc
in
sbb
and
or
and
iret
pop
xor
mov
adc
addr16
mov
ret
mov
mov
pop
(bad)
pop
pop
mov
xor
add
sub
or
add
push
or
xchg
call
adc
sbb
mov
das
in
cmps
push
adc
lock
int
adc
jae
mov
aaa
push
fcom
daa
mov
cmp
outs
enter
mov
aad
push
test
pusha
js
adc
mov
cwde
ss
xor
shl
(bad)
ja
pop
pop
sahf
sbb
or
jno
or
inc
imul
xor
je
jmp
jo
sbb
movs
enter
(bad)
pop
inc
es
xchg
sbb
jg
inc
inc
pop
jg
lea
daa
add
xor
xchg
adc
sub
scas
outs
shl
bound
and
cli
inc
inc
ret
mov
pop
add
add
mov
push
movs
cmp
ja
mov
adc
mov
lds
sbb
sub
mov
xchg
movs
and
mov
mov
dec
rcr
(bad)
mov
cdq
stos
icebp
or
inc
push
xchg
jle
or
jno
loopne
inc
or
sub
add
add
mov
movs
addr16
sub
inc
dec
jne
mov
fcomp
xor
fdivp
inc
sar
inc
jbe
cmovl
test
add
inc
add
inc
iret
adc
addr16
pop
ss
push
aas
dec
pusha
call
or
add
add
add
out
sbb
or
adc
clc
or
or
add
dec
jne
sldt
repnz
test
sub
sbb
jo
ja
mov
add
ja
movs
fmul
test
sbb
cmp
mov
jle
cs
test
inc
adc
jg
sub
mov
dec
addr16
call
dec
jne
mov
and
aas
xor
sbb
jge
add
xor
mov
pusha
inc
psubsw
sub
ror
dec
cmp
test
dec
add
mov
mov
or
add
cs
aaa
mov
rol
xor
push
sbb
cmp
jbe
inc
fisttp
rcl
dec
ret
mov
or
or
test
sbb
mov
jl
or
clc
push
retf
adc
sub
sub
sbb
cli
jle
mov
pop
and
jmp
adc
sbb
in
mov
test
nop
pop
fisttp
daa
xor
adc
adc
cs
cmps
clc
jbe
pop
cmp
jae
jmp
jge
sub
adc
xchg
daa
in
push
in
push
pusha
cmovle
cs
push
jo
pop
push
cmovbe
fs
je
retf
out
jnp
adc
je
sub
inc
call
pop
pop
pusha
xor
test
fcom
hlt
adc
push
ja
sub
mov
cmp
lods
scas
ins
jmp
xor
jmp
cli
mov
out
mov
jle
add
test
lock
mov
arpl
aaa
add
(bad)
ret
movs
cmc
loopne
add
fcomp
in
sub
fmul
add
js
cmp
mov
mov
mov
pop
loopne
(bad)
test
fcom
push
cld
scas
ffreep
and
js
test
int3
sbb
jnp
js
(bad)
push
jp
add
shl
pop
push
xchg
push
pop
push
or
sub
cmp
ss
loopne
in
icebp
jecxz
sbb
sub
ret
jmp
push
or
inc
stos
adc
mov
and
scas
pop
or
mov
out
mov
cs
outs
inc
push
xor
cmp
ja
into
jmp
push
mov
dec
sbb
xchg
enter
sub
jg
retf
sub
push
stos
add
mov
push
hlt
mov
imul
push
in
adc
es
sub
push
push
and
sub
popa
jno
loope
mov
lock
add
dec
lods
adc
pop
mov
mov
mov
int
test
sbb
add
mov
pop
out
or
mov
ins
xchg
adc
jnp
loopne
dec
or
jmp
pop
test
aam
pop
sub
call
call
sbb
adc
inc
xor
ins
mov
movs
sbb
sbb
sub
mov
ret
adc
ins
dec
jo
sar
add
push
std
cmp
sbb
popa
mov
and
lea
imul
adc
cmp
mov
call
pop
retf
jno
ret
mov
cmp
ret
dec
lods
call
and
xor
adc
es
rcl
mov
call
test
in
repnz
mov
outs
inc
cs
push
fmulp
jbe
jne
fnstsw
or
das
std
cmp
sub
fdivr
adc
jnp
mov
pop
or
imul
lock
or
xor
loope
xor
jo
cs
sub
jge
in
das
push
icebp
or
popa
nop
jnp
jb
xor
idiv
add
movzx
adc
push
rol
jo
xchg
ret
add
xchg
jnp
add
js
ds
adc
out
inc
(bad)
fldenv
out
mul
setns
jmp
and
add
call
mov
jbe
mov
pop
and
ficomp
cmp
push
push
or
push
int3
jp
jmp
aam
inc
and
inc
sahf
test
xlat
setne
dec
(bad)
dec
pop
mov
nop
inc
dec
dec
sub
inc
mov
and
dec
lods
push
addr16
push
pop
shl
mov
adc
inc
or
clc
pop
pop
cmp
push
push
imul
and
pop
scas
fdiv
xor
push
je
inc
xchg
jl
or
sub
or
and
sub
push
jge
sub
ror
or
addr16
cmp
xchg
add
add
jnp
(bad)
sbb
outs
cmps
cmp
imul
fild
popa
add
repnz
mov
out
push
sub
or
arpl
push
xor
test
push
lock
push
xor
aas
out
mov
fidiv
adc
jp
dec
test
xchg
popf
mov
mov
or
mov
sbb
xor
outs
and
pop
test
call
lea
and
xor
push
lods
xor
fistp
fild
cs
icebp
add
sbb
fdivr
addr16
or
mov
sub
pop
daa
pusha
movs
pop
leave
dec
inc
(bad)
scas
(bad)
out
and
or
js
xchg
pop
dec
lock
nop
dec
inc
ds
push
add
aas
shr
adc
mov
mov
call
scas
mov
movs
ds
sub
aas
outs
push
mov
nop
ins
push
(bad)
jmp
or
add
pop
mov
mov
hlt
cmp
push
lea
push
test
(bad)
jo
outs
pop
nop
mov
sbb
pushf
mov
pop
or
add
dec
leave
and
test
xor
mov
add
es
cmp
mov
xor
mov
fcom
aam
push
jmp
inc
sbb
fs
sar
push
mov
fucomi
sub
mov
jmp
cmp
jb
mov
test
xchg
push
ins
mov
xor
mov
dec
jne
test
mov
(bad)
imul
lea
cmp
jne
push
sbb
add
push
dec
cmp
repnz
add
pusha
retf
xchg
pop
fmul
cli
data16
je
mov
push
mov
jmp
mov
cmp
sub
cmp
jno
jae
adc
ror
mov
mov
mov
and
das
mov
push
add
xchg
leave
dec
je
out
mov
mov
push
add
mov
mov
jl
or
(bad)
cmp
push
shr
cmp
sbb
inc
lock
(bad)
ds
add
push
fdiv
adc
push
xor
push
pop
adc
xor
add
push
mov
push
push
mov
addr16
xchg
or
imul
xor
mov
test
mov
cld
mov
xchg
push
lock
ss
cmp
and
out
aaa
xor
or
outs
stos
or
bound
daa
or
dec
mov
sub
adc
test
ins
data16
loope
xor
mov
fst
push
xlat
sbb
mov
stc
pop
or
or
mov
adc
inc
push
sbb
adc
jmp
jmp
scas
test
dec
vcmpps
or
sub
xor
icebp
inc
jl
hlt
retf
jmp
sbb
inc
adc
dec
rcr
sub
mov
xor
inc
out
ss
add
xchg
cld
dec
and
fmul
or
test
sbb
lahf
sbb
test
sub
push
cli
push
dec
cmps
outs
add
jo
(bad)
push
loopne
jno
adc
sbb
cmp
jbe
dec
jmp
xlat
pop
mov
inc
xor
push
xor
jge
mov
sbb
loope
add
ror
pusha
push
jne
jo
adc
xor
or
add
xchg
mov
enter
iret
in
pop
jp
bound
inc
xor
sbb
rcr
xchg
jge
inc
out
add
mov
push
lea
or
adc
not
inc
test
add
(bad)
xlat
lds
push
dec
mov
ins
xchg
adc
pop
cmp
ror
ret
(bad)
ja
cmp
jg
jg
das
mov
mov
xchg
mov
adc
cwde
test
test
add
mov
shr
or
and
cs
(bad)
adc
push
cs
je
add
sub
(bad)
jbe
dec
xchg
bound
call
add
xlat
lea
add
(bad)
iret
pop
add
mov
adc
adc
cdq
push
psubsb
jne
arpl
rol
xor
jp
test
sbb
add
inc
daa
je
call
shl
xor
ss
in
add
(bad)
mov
sbb
mov
in
mov
pusha
cmp
mov
scas
or
push
or
dec
add
pop
aam
adc
scas
inc
cmp
imul
fcom
shl
lea
das
fmul
sti
add
adc
jnp
cs
push
or
cmovo
dec
inc
add
or
and
(bad)
push
or
mov
lods
sbb
dec
jp
bound
mov
push
addr16
jge
add
pop
fs
clc
adc
lock
jl
imul
or
imul
call
(bad)
push
inc
daa
inc
xlat
test
push
push
jmp
jo
ds
adc
cld
mov
lock
xchg
shl
aas
mov
mov
inc
mov
inc
xor
xchg
aas
call
push
ror
pop
jmp
fcom
ror
mov
into
test
mov
push
shl
dec
popf
and
cmp
fst
mov
loope
mov
cmp
jl
rcl
push
cld
daa
mov
xchg
movs
sub
shl
lock
les
mov
jmp
push
or
sbb
mov
sub
outs
jne
(bad)
and
or
test
jo
outs
mov
(bad)
mov
push
xor
(bad)
idiv
lock
dec
hlt
jp
fstp
or
rcl
mov
and
retf
dec
cld
or
(bad)
add
jns
adc
nop
retf
shl
sbb
in
rcr
ins
mov
or
add
pop
mov
aaa
mov
into
in
test
inc
adc
or
dec
or
add
push
sbb
or
mov
daa
rol
adc
dec
adc
call
out
pop
arpl
fadd
push
cmp
nop
test
add
repnz
mov
(bad)
(bad)
cmp
mov
mov
sbb
and
dec
iret
in
pop
push
(bad)
jmp
test
sbb
sub
int
inc
mov
sub
jb
icebp
outs
(bad)
fst
fsub
mov
jb
push
shl
test
imul
pop
xor
sahf
fld
jecxz
xor
lea
rol
aaa
adc
daa
mov
sbb
dec
mov
sub
(bad)
(bad)
fild
in
ss
push
dec
outs
imul
outs
je
popa
ins
push
gs
imul
in
inc
gs
jae
xor
xor
dec
sbb
enter
std
jmp
data16
push
push
jns
je
ins
cs
ins
popa
jae
gs
jne
inc
and
fmulp
add
push
and
dec
lock
bnd
jmp
push
lock
xchg
arpl
mov
jo
ins
push
sub
mov
mov
js
sbb
call
mov
iret
jmp
add
mov
imul
or
scas
jno
and
pop
jnp
dec
rep
sbb
cli
fidivr
jle
jg
mov
scas
lods
mov
adc
or
fdivr
adc
add
xchg
inc
outs
ins
popa
pusha
loop
or
test
sub
push
sub
dec
fbstp
jb
popa
ins
gs
add
lods
sar
inc
arpl
arpl
jg
bound
mov
add
mov
push
arpl
js
push
stc
dec
test
adc
sub
adc
sbb
unpcklps
mov
loop
xlat
adc
into
cld
lock
and
add
lods
jp
pop
mov
or
push
in
or
ror
mov
cmp
mov
jnp
dec
outs
(bad)
mov
fstp
or
lahf
dec
pop
adc
fnstenv
stc
or
mov
stc
cmp
aas
or
sbb
inc
add
push
or
(bad)
movs
push
les
push
inc
outs
sbb
mov
pop
jnp
push
in
popf
lock
leave
or
inc
jl
mov
adc
fwait
add
ror
and
sbb
and
lahf
loope
cmp
add
mov
push
add
jne
pop
fldenv
xchg
cmp
jno
xor
or
das
sbb
mov
js
pop
xor
xchg
dec
inc
out
mov
mov
jge
mov
cs
adc
test
les
xchg
cmp
outs
and
les
pusha
je
ds
xor
lds
push
pop
xlat
sub
pop
pop
or
sub
mov
push
test
mov
push
xchg
(bad)
clc
or
pop
jne
nop
adc
aad
inc
xchg
mov
inc
lock
and
adc
cmp
push
ins
or
mov
in
mov
add
movs
outs
push
repnz
in
cmp
call
in
stos
jmp
inc
jmp
and
loopne
imul
jmp
ret
adc
sub
cs
cmp
sbb
hlt
in
inc
xor
ins
push
add
in
push
jae
outs
mov
xchg
in
ret
jae
inc
adc
jmp
fcomp
add
push
xor
mov
jecxz
fwait
xchg
in
(bad)
(bad)
(bad)
call
pop
pop
cmp
stos
push
adc
sub
add
call
fwait
add
mov
push
mov
lea
(bad)
aaa
or
leave
das
arpl
loopne
inc
jo
repnz
xor
push
xchg
xchg
sbb
(bad)
mov
imul
xchg
inc
cli
mov
jl
inc
xor
mov
jg
test
fdivr
inc
jg
adc
sbb
inc
cwde
push
xlat
imul
pop
push
sub
dec
jne
sbb
or
xor
loopne
push
mov
sbb
mov
cdq
scas
adc
(bad)
imul
push
call
movs
pushf
push
lds
aas
mov
call
bound
mov
dec
push
mov
shl
add
inc
mov
jns
fild
pop
xchg
adc
fwait
ja
mov
xor
or
xor
xrelease
cmp
out
call
adc
or
or
mov
push
cdq
xor
inc
fdiv
and
(bad)
arpl
and
addr16
mov
jmp
retf
jge
sbb
adc
test
jmp
jp
iret
push
aaa
nop
cmp
xor
(bad)
into
mov
add
fucomip
jmp
and
fcom
mov
xor
loop
mov
je
sub
inc
cmp
or
cdq
mov
ret
lds
imul
mov
push
adc
nop
fistp
inc
or
add
cmps
adc
xchg
xchg
fsub
fmul
lods
sahf
sti
add
dec
ss
scas
shl
in
outs
inc
loopne
mov
mov
and
mov
push
jno
aam
mov
sbb
or
adc
add
adc
jge
mov
jno
lods
or
cld
dec
test
jl
inc
pop
jne
mov
sbb
inc
or
or
dec
inc
sub
int3
ror
fmul
adc
jne
xor
adc
push
test
inc
mov
arpl
cmp
add
adc
outs
pop
ret
in
lea
mov
inc
pop
mov
push
hlt
cmp
sbb
call
xchg
cmp
push
test
mov
shl
lock
nop
push
daa
pusha
int3
dec
enter
ret
mov
jbe
jnp
cmp
ja
xchg
fadd
sbb
xchg
jp
or
and
mov
(bad)
lock
sub
and
inc
cdq
loope
mov
lahf
xchg
es
test
fisttp
das
mov
or
cld
sub
xchg
mov
push
(bad)
inc
xchg
mov
ds
mov
xchg
xor
addr16
xor
cmp
cmp
mov
or
inc
xchg
repz
cmp
ja
inc
mov
sub
int
mov
cwde
out
push
or
add
test
or
add
dec
inc
cli
fucomi
sahf
dec
mov
loopne
leave
inc
pop
imul
inc
movs
mov
sbb
aad
jo
sbb
adc
cdq
adc
out
sbb
or
mov
inc
add
cmps
or
test
rcr
push
mov
inc
fsub
adc
outs
add
(bad)
ins
mov
fadd
outs
push
mov
dec
retf
and
mov
jns
push
mov
shl
xlat
jno
jns
shl
sbb
and
call
xchg
cli
add
lahf
push
(bad)
mov
mov
(bad)
add
xchg
das
fdivr
cmp
scas
add
push
fadd
push
dec
movs
lods
je
add
adc
inc
stos
je
push
cmps
mov
pop
dec
movs
push
push
int3
xchg
div
ja
push
fadd
sub
fdivp
mov
mov
push
out
add
rcl
sete
and
dec
loope
pop
cmp
push
adc
inc
push
je
je
inc
pop
int
sti
or
popa
imul
jbe
inc
jmp
mov
push
dec
push
or
jne
je
mov
inc
jbe
dec
ins
jo
add
sub
mov
or
jnp
in
pop
jmp
xchg
add
sub
jae
call
test
scas
dec
add
add
popw
push
imul
add
loopne
xchg
in
fnstenv
mov
add
mov
cs
inc
jb
popa
jns
dec
push
jns
inc
or
mov
adc
ds
mov
add
dec
push
outs
dec
mov
mov
or
mov
pusha
call
mov
sar
dec
mov
and
mov
lock
cmp
jne
div
jae
push
lea
adc
pusha
dec
xor
stos
shl
lock
ret
ret
mov
mov
adc
add
jle
fsubr
test
adc
mov
sub
add
cli
int3
dec
xchg
xchg
js
lock
or
cmp
or
push
jns
das
and
push
jnp
das
adc
test
mov
in
pop
push
add
pop
loope
mov
inc
add
dec
iret
loop
push
pushf
mov
jl
jbe
adc
fwait
adc
mov
inc
cdq
xor
lock
push
add
retf
inc
mov
mov
mov
sahf
pop
sub
out
push
and
pop
jg
loopne
sar
fistp
add
mov
add
in
push
sti
xlat
cmp
or
add
jg
push
xchg
mov
movs
sbb
sbb
or
rol
test
sbb
outs
and
push
xor
push
movs
(bad)
sbb
clc
(bad)
push
cs
cld
dec
rcl
ins
(bad)
iret
inc
adc
(bad)
dec
adc
popf
sbb
lds
add
pop
mov
sub
xchg
into
jnp
dec
add
inc
sbb
test
cmc
(bad)
xor
je
mov
mov
jne
mov
and
daa
mov
mov
sub
cmp
jnp
add
jne
mov
mov
pop
ret
mov
lock
sbb
xchg
lahf
push
adc
iret
lock
sub
cli
adc
test
jne
adc
cmp
mov
jmp
lea
mov
cmp
xchg
adc
pushf
out
cmc
xchg
loope
outs
cmp
not
push
lock
sub
or
or
push
push
push
repz
ret
sbb
stos
push
neg
and
fdiv
nop
adc
xchg
shl
or
cmc
add
setne
xchg
mov
add
mov
ret
cmps
xor
jle
cmp
pop
or
ficom
js
lahf
jbe
daa
adc
jo
push
push
add
mov
adc
pop
fidivr
xlat
and
or
clc
aas
mov
data16
cmp
jne
pop
pop
pop
mov
sub
sub
jne
cmc
cmp
jp
nop
push
xchg
sub
add
ds
xchg
push
xlat
sub
mov
push
ror
cwde
rcl
jne
lahf
icebp
mov
call
pusha
fbld
or
loopne
fcomp
movq
out
mov
cwde
jb
cmp
add
cmp
fsub
and
mov
(bad)
fstp
or
sub
lods
mov
sbb
arpl
arpl
jmp
test
or
clc
pop
push
and
shl
sub
push
mov
in
jle
xor
xchg
or
pusha
and
mov
or
sub
hlt
inc
push
aas
mov
push
pop
add
mov
loop
add
or
dec
adc
and
popa
pushf
sbb
out
jmp
cmps
inc
pusha
add
call
jmp
cmp
cmp
dec
add
loopne
leave
out
add
inc
jmp
cwde
pusha
adc
mov
xor
jo
xor
cmp
or
mov
add
xchg
rol
add
pusha
inc
mov
aas
loop
pop
in
in
mov
ins
retf
mov
cmp
rcr
retf
enter
inc
call
fisttp
pop
loopne
pop
push
fild
pop
cs
loopne
jo
sbb
rol
mov
mov
cmp
cmp
push
xor
push
push
js
and
dec
push
add
inc
call
pusha
sbb
fwait
dec
mov
cmp
inc
aad
clc
fwait
lahf
push
push
dec
mov
(bad)
rcr
lahf
pop
xor
loopne
js
and
rol
out
pop
xor
cs
mov
lds
add
nop
movs
int
clc
jmp
sar
(bad)
sbb
mov
inc
(bad)
cvttps2pi
inc
add
push
and
sbb
test
ret
add
(bad)
dec
xor
in
xchg
(bad)
sbb
not
mov
jmp
adc
mov
or
fadd
adc
js
movs
cdq
jne
sbb
aam
sbb
push
cld
mov
mul
ds
push
inc
xor
sbb
loop
sbb
xor
push
push
push
and
pop
and
jae
jge
xacquire
loop
mov
pop
push
lea
xlat
jl
or
sbb
or
mov
and
fnstcw
ja
jmp
add
(bad)
mov
adc
adc
out
mov
push
mov
int3
xchg
punpcklbw
push
add
stos
add
jbe
outs
push
or
stos
sub
and
nop
loop
movs
jns
jmp
adc
add
loope
add
adc
adc
ror
sbb
or
mov
jg
(bad)
fdivr
cmp
ins
retf
mov
add
add
xor
loope
push
pop
je
push
mov
fimul
mov
mov
outs
push
sub
cmc
adc
add
push
and
pop
sahf
mov
aas
inc
gs
mov
sub
loop
sbb
inc
inc
sti
sbb
lods
cmp
sbb
xor
adc
cmp
dec
rcr
or
and
pop
adc
aas
mov
and
pushf
into
jge
nop
stos
push
leave
int3
shr
gs
xchg
inc
mov
jae
or
loope
adc
pop
dec
pop
pop
xchg
and
test
(bad)
adc
jne
dec
push
pushw
and
fsub
lock
add
jmp
push
xlat
outs
fs
(bad)
sub
aam
and
push
or
cs
cli
in
lods
dec
rcl
cmp
rcl
lahf
sub
xor
lahf
aam
sti
lea
cmp
push
mov
je
stos
push
dec
rol
sbb
out
pop
pop
hlt
das
int3
push
cmp
mov
ret
cmp
inc
pushf
push
in
enter
sbb
lock
scas
je
add
pop
inc
loope
mov
xchg
sub
movs
test
pop
mov
sbb
add
hlt
cmp
push
pop
stos
out
lock
in
inc
push
inc
cmp
iret
test
xchg
test
loopne
xor
jo
loopne
jmp
sub
and
fsub
das
jmp
cmp
add
mov
ror
add
sub
cmp
ret
sar
mov
test
sub
pusha
popa
dec
cwde
(bad)
gs
pop
inc
pop
retf
pop
and
adc
adc
popa
xor
dec
mov
clc
arpl
jae
jmp
jnp
sub
mov
mov
nop
inc
or
push
ret
sbb
jmp
movs
ja
add
xchg
xchg
pmulhuw
mov
mov
add
sub
or
rcl
nop
sbb
mov
inc
je
(bad)
adc
dec
in
pop
test
jne
aas
sbb
lods
sar
pop
mov
sub
xchg
pushf
push
test
and
loope
and
shr
mov
daa
push
setl
(bad)
popa
push
rcl
loopne
(bad)
xchg
or
cmp
xor
jbe
mov
add
cmps
fs
push
aad
mov
or
sub
mov
out
jmp
lods
loopne
jle
jg
or
push
and
mov
xor
scas
(bad)
inc
or
ror
adc
push
mov
cmp
out
inc
cmps
fst
sti
dec
data16
fucomip
push
bnd
mov
cmp
pop
mov
dec
stc
shl
sti
add
mov
sbb
push
jge
xchg
test
mov
out
jbe
(bad)
pop
mov
cmp
jne
ret
adc
bound
mov
test
(bad)
in
add
je
popf
ror
or
mov
mov
adc
icebp
cmp
cmp
xchg
or
push
sub
pop
or
xor
mov
mov
xor
xor
test
push
jmp
mov
push
rcr
sahf
inc
push
jnp
je
sbb
or
gs
and
cmp
imul
jne
inc
ds
dec
and
call
mov
jns
je
call
loop
sbb
fild
je
cmp
cmp
ror
arpl
jne
enter
pop
cmps
jbe
out
(bad)
(bad)
sbb
jae
pop
fidiv
ja
sbb
ja
in
cmp
adc
or
je
dec
std
push
dec
loopne
test
mov
into
fst
cmp
clc
bnd
fsub
or
inc
and
lahf
push
add
inc
pop
out
pop
scas
add
pop
out
push
push
fdiv
popf
or
cdq
sbb
dec
test
arpl
sbb
aam
mov
fwait
loop
or
adc
fwait
in
cwde
push
and
mov
cmp
cmp
and
inc
pop
jmp
mov
ja
cli
push
ja
sub
fucomip
sti
dec
push
lds
mov
enter
xor
inc
int
sub
ret
adc
add
sbb
jo
sbb
inc
jno
xor
jo
xor
sub
fimul
cdq
nop
dec
loope
mov
ja
adc
sub
jge
bound
loopne
scas
in
dec
jo
loope
mov
sbb
pop
(bad)
mov
pop
or
sub
cmps
or
xor
pop
adc
setl
and
movs
rcl
call
lar
adc
mov
jo
xor
stos
dec
dec
jno
mov
cmovbe
(bad)
sbb
mov
cmps
push
sbb
dec
out
not
xchg
cmp
je
mov
neg
pushf
dec
pop
outs
arpl
pop
jbe
ja
hlt
push
jle
or
push
fild
dec
pop
out
jmp
cmc
daa
popa
dec
popa
aad
jmp
fnsave
jge
mov
lea
and
retf
sub
(bad)
int
dec
lds
out
inc
push
jl
pop
addr16
aam
dec
mov
or
ss
inc
jae
sbb
aaa
(bad)
hlt
add
or
xchg
(bad)
(bad)
dec
je
mov
in
dec
mov
jo
mov
and
jo
jecxz
adc
movs
xor
add
pop
scas
aam
and
sbb
sbb
int3
in
or
adc
push
jecxz
dec
fs
daa
pop
push
sbb
hlt
(bad)
addr16
adc
fsubr
mov
fcmove
cmp
ja
push
pushf
test
pop
mov
inc
stc
push
xor
js
inc
enter
adc
xor
jecxz
xor
lds
jg
ja
ss
push
add
fdivr
cmp
adc
loopne
sub
cwde
mov
dec
scas
jo
nop
jo
lahf
and
xor
rcr
sbb
js
adc
ficomp
mov
mov
inc
xlat
inc
add
je
inc
outs
lfs
adc
mov
push
(bad)
jmp
clc
loopne
out
stos
mov
adc
dec
test
outs
dec
popf
sbb
cmps
dec
daa
outs
inc
pop
mov
ret
or
(bad)
stos
sbb
pop
mov
jnp
pop
je
dec
(bad)
mov
jb
jmp
cwde
das
imul
mov
mov
cmp
mov
mov
mov
and
push
icebp
mov
fist
(bad)
es
test
inc
loope
pop
loop
addr16
adc
cmp
pop
in
(bad)
(bad)
mov
add
cs
add
nop
mov
out
or
daa
(bad)
cmps
xor
xor
or
fucomp
test
mov
inc
add
jno
sub
xchg
(bad)
pop
sub
dec
xchg
sbb
push
pushf
(bad)
loop
and
mov
out
daa
xchg
pushf
call
cmps
adc
mov
pop
fcmovb
jne
dec
(bad)
mov
mov
call
adc
mov
cmps
(bad)
fdiv
add
scas
je
adc
xchg
pop
popa
daa
cmp
xor
bound
mov
cmp
jno
aaa
movs
test
daa
push
adc
mov
add
(bad)
in
pusha
and
sbb
add
pop
in
push
daa
(bad)
dec
add
lahf
dec
add
add
(bad)
js
daa
sub
(bad)
cld
in
sbb
les
stos
test
sbb
pop
outs
push
lods
sbb
push
xchg
dec
lods
(bad)
dec
add
push
lods
loopne
adc
imul
aas
(bad)
call
nop
xchg
inc
mov
lods
sbb
retw
mov
aas
(bad)
push
ja
shl
out
idiv
loope
adc
pop
dec
(bad)
and
leave
or
dec
or
jnp
jo
mov
sbb
cmp
pop
dec
mov
mov
aam
sbb
mov
xchg
pop
dec
xchg
addr16
or
mov
(bad)
xor
add
mov
fisttp
xchg
mov
aas
(bad)
mov
jb
out
or
mov
xchg
shr
mov
or
add
add
(bad)
lods
cmp
or
cmp
ds
movs
ror
pop
sub
jno
jo
and
inc
cmc
adc
(bad)
daa
scas
popf
in
clc
mov
pop
cwde
mov
shl
xchg
(bad)
xchg
call
push
int
adc
jl
ss
pop
test
mov
adc
call
fwait
loop
(bad)
xchg
loope
and
jo
lds
(bad)
fwait
movs
test
xchg
rcl
(bad)
and
inc
or
adc
(bad)
test
sub
nop
add
pop
pop
push
popf
sbb
dec
scas
jo
nop
dec
push
lahf
and
daa
(bad)
dec
test
mov
xchg
js
xchg
add
cmp
mov
ret
jb
mov
pop
adc
inc
add
stos
adc
sub
adc
std
js
loopne
daa
je
hlt
push
icebp
adc
jnp
lea
mov
xor
retw
pop
mov
pop
cmp
jbe
xor
sbb
add
lock
jmp
lea
lock
aam
inc
adc
or
shl
rcl
push
stos
jge
repz
add
add
out
lds
sub
ror
inc
out
inc
pusha
xchg
in
dec
or
or
(bad)
cmp
into
jecxz
xor
xchg
je
mov
ja
in
das
pop
or
xchg
and
jle
pop
xor
push
jo
xor
scas
gs
in
or
outs
gs
leave
retf
out
or
jge
push
mov
lea
outs
add
sbb
mov
or
shl
jle
jmp
push
jge
xor
outs
das
sbb
aas
ja
sub
fwait
cwde
test
test
sub
div
fwait
test
cmp
jle
add
or
mov
sub
(bad)
push
xor
les
mov
cmc
and
cmp
push
inc
add
pop
lods
add
cld
std
cmp
je
jge
and
into
sub
and
ins
(bad)
loopne
imul
xor
test
cmp
dec
test
jl
inc
sbb
mov
enter
addr16
dec
jne
out
push
add
cwde
xchg
jl
mov
add
(bad)
(bad)
mov
and
adc
nop
sbb
cmp
je
int3
sbb
mov
or
ret
jnp
lods
pop
cli
mov
sub
jnp
fsub
aad
add
test
out
js
leave
in
nop
popa
inc
cs
jp
lea
add
rol
add
mov
pop
adc
jb
push
inc
and
push
pop
add
out
adc
mov
cmp
in
push
cmp
jnp
sbb
cmp
fimul
stos
not
jmp
push
dec
inc
jne
outs
or
push
mov
call
mov
sbb
push
mov
lods
out
inc
aas
cmp
jg
inc
jmp
out
retf
add
or
adc
push
test
(bad)
jo
and
aas
push
mov
inc
rcr
cmps
push
push
push
mov
retf
inc
push
call
scas
pop
xchg
lahf
add
adc
mov
pop
sbb
adc
adc
out
or
xchg
in
int3
rol
lea
push
mov
adc
lea
adc
sbb
call
(bad)
test
push
jle
push
clc
mov
or
adc
and
sbb
popa
nop
rcl
cmp
std
ins
jnp
cmps
dec
ss
adc
mov
or
push
sahf
lods
mov
imul
mov
pop
ss
sbb
and
dec
inc
inc
nop
adc
cmp
inc
cmp
inc
in
lds
loopne
loop
loope
sbb
les
fadd
js
cdq
lock
or
push
and
jae
xchg
dec
push
fidivr
and
das
sti
jne
std
int
mov
call
je
push
adc
cmp
and
pop
call
jns
loopne
push
jge
jmp
adc
scas
mov
jae
pop
in
loopne
loopne
adc
sbb
xchg
cmp
pop
push
xor
jo
or
and
cmps
pop
mov
adc
add
jmp
mov
test
test
jg
adc
dec
adc
push
nop
adc
out
add
ins
jmp
xor
sbb
mov
adc
shr
cwde
(bad)
adc
cwde
add
dec
or
mov
stos
xchg
popa
(bad)
js
mov
sbb
mov
jl
lahf
mov
mov
sbb
sbb
and
and
pop
push
and
into
movs
pop
mov
mov
mov
sub
ret
ins
sbb
(bad)
adc
iret
or
and
cmp
enter
cmps
cmc
cmp
adc
or
xor
rcr
mov
inc
mov
push
ret
repz
daa
aas
jg
inc
pop
push
aas
(bad)
les
adc
xchg
or
sub
mov
dec
jmp
jg
pop
clc
in
pop
arpl
xchg
test
cmp
jo
sub
test
dec
retf
xor
arpl
mov
jge
jp
or
pusha
cs
and
std
or
fld
and
cmp
enter
fistp
inc
ror
inc
(bad)
fsubr
mov
push
cmc
xchg
icebp
ret
pusha
push
sub
mov
sub
cmp
and
or
inc
and
fcom
jl
xlat
sub
mov
iret
cmp
pusha
sub
je
xor
push
shl
cld
std
mov
not
mov
pop
mov
je
scas
adc
mov
jo
push
pop
mov
adc
int3
pop
(bad)
stos
hlt
add
dec
add
fist
cmps
inc
mov
shr
sbb
jge
lock
cmp
mov
jmp
push
cli
adc
sbb
add
mov
aam
ja
add
and
xor
mov
mov
popa
pop
fld
lds
inc
push
inc
and
sub
adc
fcomi
popa
mov
lock
adc
cmp
jmp
cmp
push
and
xchg
add
test
jae
in
shl
shl
push
call
xchg
dec
inc
call
call
es
adc
aaa
adc
outs
mov
push
hlt
xchg
jae
popf
inc
jmp
add
adc
jmp
mov
fadd
aaa
dec
jno
loope
fisub
movs
(bad)
jmp
mov
push
dec
adc
dec
push
add
mov
xchg
xor
or
jg
pop
lea
inc
scas
test
dec
ds
shl
jo
hlt
dec
cmp
ret
cmp
js
or
loop
xor
jne
pusha
das
or
jbe
mov
sub
ret
inc
xchg
add
mov
mov
cmp
adc
sub
sbb
or
pop
mov
inc
sub
retf
inc
pop
and
mov
popf
add
aaa
nop
and
add
les
fsubr
sbb
add
fidivr
loopne
dec
scas
test
fmul
inc
sbb
(bad)
inc
xor
or
test
add
cmp
cmp
loope
adc
ja
fs
mov
xor
mov
xor
cmps
xchg
push
fimul
pop
inc
inc
and
xlat
mov
sub
daa
xor
add
or
pop
js
jae
loopne
adc
imul
dec
push
pop
mov
cmp
sar
(bad)
pop
xchg
sub
fwait
push
or
lock
pop
imul
mov
in
dec
add
or
pop
jmp
sbb
mov
lods
stc
sub
jae
xchg
sbb
repz
nop
sub
or
adc
vmread
push
nop
push
mov
jg
(bad)
lock
dec
daa
adc
and
inc
add
add
sub
fmul
inc
jg
bound
cs
adc
inc
mov
loopne
push
in
cmp
xchg
arpl
dec
in
cwde
ret
dec
popa
movs
cs
shr
pushf
popa
in
push
xchg
xor
sahf
sub
ror
mov
pushf
sub
sub
jbe
fnstcw
dec
jb
mov
cmp
jg
jecxz
(bad)
(bad)
sti
mov
jle
ja
pusha
out
movs
mov
les
lea
loope
cmp
mov
shl
gs
scas
aad
mov
mov
push
out
mov
test
pop
push
sub
fwait
xchg
test
and
push
xchg
sub
out
(bad)
mov
sbb
add
retf
pop
and
inc
enter
sbb
idiv
pop
rol
dec
inc
aas
cmp
mov
adc
pop
das
out
xchg
dec
out
inc
imul
push
jle
addr16
push
jb
xchg
mov
jb
lahf
daa
add
or
xor
xor
int3
lods
xor
cmps
inc
add
ror
or
push
fcom
push
out
mov
or
cmp
mov
out
cmps
(bad)
dec
and
cmp
cmps
push
cld
dec
fbld
mov
addr16
cmp
jge
pop
and
adc
lea
jl
or
test
cmp
ja
pop
lock
mov
cmp
or
lock
je
into
rcr
(bad)
pop
loop
imul
popf
dec
das
shr
xchg
mov
sub
jo
jno
outs
imul
adc
fidivr
(bad)
sub
sub
les
jo
into
test
(bad)
jmp
adc
inc
mov
out
inc
pop
inc
mov
xor
aas
clc
push
dec
jo
scas
aas
add
mov
jmp
(bad)
and
or
cmp
push
pop
pop
ds
pushf
lock
shl
stos
pop
loop
loopne
add
pop
shl
push
inc
call
test
adc
cmp
adc
jmp
or
jmp
mov
lock
push
sbb
push
or
vpsubusw
in
jnp
sub
loopne
imul
ror
les
cs
mov
xchg
dec
and
mov
into
aam
sbb
aam
sbb
pop
fisub
and
shl
test
ds
xor
xlat
sbb
push
ins
pusha
addr16
inc
int3
ja
hlt
push
jle
mov
jo
ss
or
xor
adc
or
hlt
(bad)
jmp
popa
sbb
add
xchg
xlat
cmp
sbb
das
push
or
test
(bad)
int
call
mov
ret
add
mov
outs
inc
pusha
icebp
(bad)
sbb
pop
sbb
adc
cdq
out
and
aaa
(bad)
hlt
add
cwde
add
fld
sbb
(bad)
bound
inc
ja
int3
mov
dec
xlat
xchg
lock
(bad)
pop
in
adc
dec
mov
mov
adc
sub
movs
adc
inc
add
adc
adc
mov
loopne
lea
adc
xor
sbb
add
mov
push
and
push
xor
jnp
and
adc
mov
adc
push
fs
push
mov
push
fsubr
inc
ret
scas
push
sbb
hlt
(bad)
out
pushf
shl
or
(bad)
(bad)
jnp
or
das
mul
push
adc
inc
ja
push
mov
outs
dec
xlat
or
shl
pop
pop
push
xor
es
sub
sub
push
adc
jae
dec
pop
mov
fimul
sbb
xor
push
mov
ret
dec
pop
mov
adc
push
xor
adc
or
aas
loope
xchg
push
inc
das
js
mov
xchg
cmp
add
dec
or
adc
popa
pop
dec
loop
bound
xchg
call
stos
add
xor
push
outs
push
or
into
fst
pusha
je
int3
fcmovb
push
and
sbb
pusha
pop
push
jne
and
pop
cld
cs
mov
jl
mov
jns
fs
ins
jns
pavgb
push
pop
xchg
pushf
pusha
cli
mov
mov
push
mov
addr16
inc
jmp
sub
pop
mov
ins
outs
shr
outs
cmpxchg
push
and
inc
stos
iret
std
xchg
jo
add
ds
fmul
scas
pop
loopne
dec
jg
or
inc
and
cmp
setg
(bad)
xchg
sbb
jp
cld
xchg
sub
cwde
outs
aaa
hlt
push
pusha
test
jecxz
ret
daa
fsub
dec
shl
jo
sar
mov
sub
mov
jmp
enter
add
jb
xor
or
pop
cmc
ror
or
cmp
jne
sbb
fnstsw
and
pushf
arpl
pop
dec
cmps
mov
jmp
mov
daa
push
pop
or
std
call
push
xor
or
xor
fcomp
cmp
cmp
(bad)
or
das
lock
and
rol
adc
icebp
shl
jne
stc
or
dec
adc
jns
mov
pop
sub
dec
dec
aaa
xor
jmp
aad
inc
jmp
add
adc
cmp
ret
mov
in
sar
add
or
mov
sub
imul
jmp
or
std
jne
cmp
jg
pop
cmp
je
jge
sub
loopne
push
call
pop
imul
sbb
(bad)
cmc
in
inc
cmp
test
jl
inc
daa
clc
aad
or
pop
xor
je
add
add
(bad)
(bad)
mov
jg
nop
pop
xchg
sbb
cmp
je
ficom
pop
add
push
add
fiadd
fsub
(bad)
aad
sbb
loopne
fsub
aad
add
cmp
push
out
js
test
xor
jb
ins
nop
jp
xchg
inc
femms
pop
push
add
rol
sub
inc
aas
push
shr
mov
xchg
xchg
pusha
jo
jb
lock
outs
and
push
pop
adc
mov
mov
call
and
jno
ret
mov
shr
adc
out
inc
push
push
inc
jne
inc
add
sub
into
inc
enter
jl
jne
xor
push
ret
mov
add
lods
out
inc
aas
cmp
jg
inc
xchg
push
sub
xchg
iret
adc
fs
(bad)
pusha
sub
(bad)
jg
or
lock
inc
aam
(bad)
out
fisubr
or
dec
shl
mov
add
(bad)
or
mov
test
lock
or
and
je
sub
mov
pop
push
push
test
nop
test
(bad)
xchg
mov
or
mov
jo
imul
add
adc
push
neg
or
add
sbb
jne
cs
adc
mov
pop
cmps
pop
adc
or
pop
lock
mov
sbb
or
sub
push
in
cmp
dec
fist
xlat
and
pop
in
stos
inc
and
imul
push
dec
and
fsubr
and
jae
jae
adc
add
push
dec
lock
dec
push
sub
stos
dec
mov
dec
push
popa
add
nop
adc
cmp
inc
push
dec
xor
addr16
stos
add
ror
lods
scas
add
lock
jmp
je
xor
add
shr
fisub
rol
outs
sbb
inc
jmp
push
inc
movs
inc
mov
dec
or
(bad)
mov
push
adc
(bad)
or
pop
mov
xor
movs
mov
inc
and
or
jo
lea
mov
dec
dec
ret
popa
jnp
lods
fcom
or
adc
mov
mov
inc
test
and
mov
or
fstp
jo
adc
push
in
fucomi
mov
mov
fild
stos
dec
push
loop
xlat
jecxz
or
loope
xor
jne
ret
sub
jo
sbb
cli
rcr
hlt
add
adc
jge
test
mov
sbb
or
mov
sbb
in
(bad)
push
cmp
xor
test
les
push
repz
test
inc
mov
or
xor
dec
fwait
addr16
xor
rcl
sbb
loop
retf
aam
fld
and
scas
adc
outs
pop
call
rcr
in
rcl
inc
xor
xchg
loope
das
xlat
mov
das
fadd
mov
push
fild
sbb
xlat
dec
stos
cmp
and
leave
hlt
dec
adc
aad
mov
ror
pop
sahf
das
xor
out
mov
ins
das
das
xor
mov
sub
jno
in
das
shl
mov
out
das
inc
or
out
les
jmp
inc
jmp
loopne
les
pop
daa
lock
test
inc
dec
das
loope
mov
pop
jle
cs
adc
xchg
mov
and
out
aas
mov
daa
nop
ret
fmul
jl
dec
dec
or
xor
or
and
(bad)
add
fadd
loopne
mov
fs
cmp
xor
(bad)
adc
int3
jne
jmp
shl
add
rcr
test
ffreep
rol
in
dec
jmp
pushf
fild
xor
fwait
jae
ja
mov
xlat
sub
push
adc
fistp
inc
lds
icebp
adc
mov
js
fs
arpl
ins
dec
sbb
repz
adc
mov
mov
daa
psubsb
mov
sbb
cmps
and
in
xchg
jmp
inc
lahf
pop
imul
jb
xchg
and
pop
xchg
lahf
sub
sbb
lds
lock
xchg
dec
or
jp
lahf
jmp
fist
pop
jo
jns
cwde
or
test
aas
xchg
cmc
shl
into
or
push
adc
rcr
lahf
mov
add
xor
add
nop
cld
aas
mov
push
jb
out
cmp
cmp
jne
mov
sbb
add
out
fnstsw
sbb
lahf
xor
outs
pusha
lahf
inc
std
dec
mov
pop
sub
ret
pusha
fsubrp
and
and
fcomp
leave
mov
in
cwde
in
mov
add
pusha
dec
ficomp
sub
popa
lahf
loopne
fcom
call
ret
lahf
ror
or
adc
lahf
add
lahf
mov
jns
lds
xor
loope
or
pop
mov
or
lahf
cmp
add
repz
adc
cs
outs
and
in
pusha
and
sbb
add
aaa
pop
push
ffree
lahf
jnp
jo
nop
and
and
loop
lahf
jnp
outs
loopne
push
js
lahf
inc
cmp
(bad)
push
js
or
lods
mov
push
repz
daa
outs
add
rcr
xchg
adc
add
imul
repz
xchg
add
add
jne
div
fnstsw
(bad)
push
outs
or
cld
sub
aaa
fdiv
test
daa
push
(bad)
hlt
ins
out
adc
test
std
add
xor
adc
cmp
mov
rcr
jl
mov
cmc
add
adc
lea
xchg
sbb
mov
mov
push
addr16
dec
cmp
jne
(bad)
repnz
add
fistp
mov
or
daa
push
xbegin
or
popf
mov
xchg
mov
pushf
or
add
cmp
cmp
ds
test
dec
xchg
jo
pushf
pop
(bad)
jp
cmc
cmp
and
in
daa
inc
daa
(bad)
idiv
add
scas
popf
clc
sbb
pushf
(bad)
jmp
mov
call
mov
adc
jl
wbinvd
aaa
mov
(bad)
push
test
cmp
(bad)
sbb
mov
cwde
loope
push
push
adc
dec
mov
loopne
mov
lahf
movs
test
cmp
adc
inc
or
and
push
test
sbb
or
jne
(bad)
jl
mov
lahf
mov
push
pushf
(bad)
jge
icebp
and
js
fadd
sbb
cmp
std
adc
and
mov
les
(bad)
xor
push
push
call
sti
add
cmp
or
sti
add
xlat
and
das
aaa
mov
retf
or
ins
cld
or
pop
xor
cmp
push
or
outs
inc
pop
movzx
mov
mov
sub
xchg
nop
inc
test
lock
mov
sub
mov
leave
mov
mov
bound
jo
add
pop
mov
mov
add
mov
xor
mov
int
add
lods
push
punpckhdq
add
pop
fbstp
sbb
test
mov
js
mov
add
sub
push
in
sti
add
push
into
push
clc
imul
mul
push
dec
jbe
js
in
mul
popa
adc
daa
(bad)
add
rcl
xor
or
aam
add
push
sub
(bad)
xchg
sbb
push
mov
ror
inc
lock
cmp
sbb
cmp
lock
inc
push
loopne
inc
in
loopne
xor
mov
xchg
inc
cmp
or
dec
ss
arpl
adc
lock
scas
popf
push
(bad)
cmp
mov
jecxz
inc
inc
push
into
mov
gs
cmp
nop
lahf
mov
or
or
(bad)
sbb
stos
js
loopne
jl
or
jns
fadd
aad
add
out
xlat
adc
mov
nop
pop
rcl
xchg
loope
mov
fcom
cmp
adc
push
fs
pop
jp
add
add
pop
push
or
xorps
out
inc
adc
cmp
or
in
mov
das
adc
shl
sbb
push
xor
dec
push
pop
xchg
rcl
push
jnp
push
or
cmp
(bad)
push
out
mov
mov
mov
add
jg
cmps
adc
add
loope
add
adc
adc
sar
inc
add
loopne
add
mov
pushf
mov
pop
cmps
nop
adc
mov
and
mov
mov
xchg
shl
loop
rcl
sbb
jnp
aas
test
mov
cmc
or
mov
adc
frstor
inc
cmps
inc
mov
retf
call
inc
enter
inc
mov
or
adc
icebp
push
cmp
cmps
push
stos
inc
mov
cmps
push
xchg
cmp
adc
mov
jge
cmps
cld
adc
dec
xchg
cmps
sbb
lods
and
push
cmps
mov
jge
cmps
imul
ret
test
cmps
sbb
add
pop
lock
jecxz
xchg
xor
popa
cmps
add
jmp
and
and
pop
adc
jno
add
push
(bad)
cmps
les
cmp
rcl
or
push
mov
movs
mov
sbb
sar
cmps
jnp
test
push
jo
jno
sub
lods
jp
aas
pop
push
sbb
jo
nop
inc
push
out
and
xchg
inc
xchg
js
dec
mov
and
imul
cmps
inc
call
outs
paddq
add
push
cmps
add
sub
xor
or
or
imul
sbb
movs
jo
bound
enter
aam
data16
cmc
sub
xor
and
cmp
movs
pop
rcl
repnz
dec
pop
or
dec
and
popf
cmp
dec
inc
(bad)
hlt
sbb
mov
pop
mov
jno
js
sti
cmp
xor
push
icebp
xor
adc
mov
mov
fwait
sub
into
addr16
nop
loopne
ret
mov
daa
push
pop
(bad)
stos
mov
pop
test
inc
dec
adc
pushf
pop
adc
(bad)
adc
mov
push
fnstenv
adc
inc
mov
mov
mov
xchg
sbb
pusha
and
mov
vcmpsd
addr16
jno
mov
(bad)
jb
cmp
mov
adc
popa
dec
fcmovb
push
daa
(bad)
hlt
inc
and
xor
adc
loopne
int
add
popf
(bad)
ss
mov
inc
(bad)
into
je
or
(bad)
pusha
inc
dec
mov
loope
sbb
mov
adc
(bad)
push
movs
mov
push
mov
or
cmp
fist
sub
(bad)
out
inc
push
or
inc
mov
and
rcl
mov
dec
pop
mov
xor
(bad)
sbb
icebp
and
(bad)
inc
daa
(bad)
adc
cmp
ror
push
cmp
(bad)
sbb
stos
sbb
adc
cmp
pop
xor
imul
push
jl
or
add
jb
(bad)
sbb
pop
cmp
js
cmp
(bad)
pop
ins
push
mov
sbb
and
aaa
adc
jno
pop
(bad)
imul
dec
push
lds
jo
leave
sub
and
call
adc
das
daa
or
xchg
sbb
pop
push
je
adc
mov
addr16
jnp
(bad)
addr16
mov
test
pop
push
jo
daa
(bad)
push
mov
mov
fistp
pop
test
bound
mov
sbb
push
enter
jne
adc
adc
push
pop
and
mov
test
adc
mov
adc
push
daa
out
sbb
retf
mov
arpl
call
sbb
loopne
mov
sbb
mov
add
push
fcom
call
ret
ss
ret
adc
cmp
adc
mov
out
xor
data16
pushf
enter
loope
inc
mov
jo
xor
(bad)
mov
and
jae
(bad)
movs
nop
push
lock
sub
outs
and
dec
scas
sbb
in
cs
add
cs
and
(bad)
mov
das
loop
movs
js
sbb
inc
popf
fcom
sbb
pop
(bad)
and
je
sub
setl
push
ror
inc
and
ror
push
jo
pop
sbb
sbb
test
scas
sar
and
or
push
mov
xlat
push
js
jbe
mov
mov
mov
pop
or
push
sbb
mov
and
fstp
pop
jns
sbb
dec
sbb
xchg
lods
popa
ins
in
jge
add
jns
add
imul
mul
push
xor
leave
out
add
test
mov
call
push
mov
js
add
add
push
sub
(bad)
mov
ss
rcr
cdq
adc
inc
sete
test
push
inc
cmp
ss
mov
inc
mov
jne
add
cmp
sub
inc
in
lock
ret
in
pop
cmp
xor
sub
test
inc
add
ss
lock
cmp
ret
js
mov
loope
and
mov
jae
sbb
lods
lahf
cmp
lahf
xchg
jmp
sbb
or
aam
push
lock
jl
or
jns
add
rcr
pop
out
jne
mov
dec
cmps
mov
enter
mov
mov
lds
push
fs
out
or
jp
mov
std
and
xchg
(bad)
and
cmp
pop
packuswb
sub
data16
arpl
and
add
sub
and
mov
data16
sbb
jmp
lock
fld
addr16
dec
xchg
mov
mov
xor
std
lods
stos
add
les
shl
add
jmp
xchg
out
add
inc
add
loopne
add
mov
pop
add
js
mov
sbb
push
lods
ss
lock
lahf
mov
push
call
inc
add
arpl
inc
mov
cld
outs
nop
ret
jnp
push
or
mov
pusha
mov
mov
push
jo
push
pop
les
adc
inc
enter
arpl
inc
mov
xor
mov
sbb
push
mov
push
and
mov
rol
mov
push
cmp
mov
cmp
xchg
lods
and
mov
sbb
sub
lahf
sub
pop
pop
shl
fidiv
cmps
cmp
nop
shr
pop
int
sbb
push
shr
or
xchg
mov
je
je
mov
mov
pop
popa
(bad)
adc
loope
cmp
inc
xor
mov
or
pop
adc
lahf
adc
adc
cmp
cmps
sbb
aam
cs
mov
in
push
xor
mov
mov
movs
dec
push
adc
adc
bound
mov
mov
mov
mov
clc
mov
push
mov
push
shl
add
dec
stos
das
rcr
test
lock
das
pop
(bad)
or
cs
iret
data16
cmc
sub
pop
push
push
pop
and
cmp
enter
repnz
dec
pop
das
dec
adc
or
pop
jno
xor
(bad)
sbb
test
inc
mov
and
test
(bad)
xor
push
add
sbb
push
icebp
rcpps
mov
cmc
mov
or
mov
(bad)
xor
add
mov
push
fisttp
jb
or
push
add
(bad)
xor
(bad)
or
jns
push
mov
dec
mov
daa
inc
add
add
(bad)
sbb
lds
test
les
dec
xchg
(bad)
mov
xchg
mov
xor
daa
mov
xor
add
ret
(bad)
aad
xor
(bad)
or
lds
dec
int
add
ss
popf
sbb
adc
test
inc
(bad)
bnd
ret
(bad)
cmp
(bad)
adc
loope
(bad)
add
inc
xchg
mov
shl
mov
adc
pop
jo
mov
adc
js
(bad)
and
dec
or
les
cs
and
mov
dec
pop
loope
push
lahf
(bad)
sub
repnz
daa
(bad)
fs
pop
sbb
les
sbb
aaa
in
outs
push
lods
sbb
mov
dec
(bad)
ins
xchg
adc
push
rol
cmp
fldpi
cmp
dec
push
add
pop
jns
dec
sbb
cmp
mov
adc
jg
dec
out
pop
nop
pusha
adc
mov
inc
add
das
ss
lock
ret
dec
cmp
push
sar
and
add
jg
xchg
shr
mov
lahf
xchg
jg
sbb
pop
cmp
pop
ss
and
and
jg
jb
out
cmp
movs
push
sbb
mov
call
test
jo
cld
(bad)
mov
addr16
call
fld
data16
or
addr16
mov
sub
add
xchg
pushf
mov
adc
and
inc
out
adc
cmp
stc
lea
je
movhps
arpl
pop
test
loopne
test
lahf
mov
push
bound
push
fsub
dec
cmc
push
mov
outs
push
enter
inc
sub
mov
xchg
sub
pop
add
inc
mov
retf
pop
or
arpl
inc
mov
xor
and
pop
inc
push
mov
mov
mov
mov
cmp
adc
jo
mov
dec
dec
xchg
or
lds
push
pop
out
mov
inc
ja
dec
xor
mov
xor
xor
fiadd
pop
aam
test
lods
jmp
fs
outs
into
call
sub
mov
adc
inc
push
xchg
xchg
mov
je
shl
das
(bad)
mov
mov
loope
in
pusha
ror
adc
mov
movs
cdq
push
loopne
add
pop
push
or
and
cmp
sbb
cmp
dec
in
push
xor
add
movs
dec
push
lds
bound
mov
fisubr
je
inc
dec
outs
add
fs
pop
mov
and
pop
cmps
mov
dec
add
and
add
mov
fst
xchg
in
retf
mov
push
inc
xor
push
add
(bad)
dec
add
push
and
pusha
inc
nop
or
(bad)
pop
inc
dec
daa
pop
enter
lea
bound
fmul
or
pop
jp
int3
lock
mov
mov
mov
lock
shl
inc
cmp
cmp
fsubr
push
or
jne
push
jl
stos
jle
call
adc
fidivr
push
jl
test
jge
mov
loopne
test
push
call
lock
fdivr
or
clc
xchg
xchg
add
push
or
pop
xchg
(bad)
(bad)
retf
and
leave
(bad)
push
dec
cmp
adc
sar
sbb
or
mov
jmp
or
in
pop
popf
shr
js
cmp
jg
mov
sub
shr
add
outs
mov
daa
xor
mov
adc
popf
sti
pop
pusha
lock
add
lea
jmp
popa
sbb
mov
jle
push
lods
sbb
mov
jns
push
pop
dec
ret
pop
inc
in
dec
add
jb
js
mov
fsub
xor
sub
pop
mov
mov
pop
add
adc
in
mov
or
enter
addr16
xchg
push
lock
mov
mul
clc
les
mov
in
es
fldcw
sbb
ja
movs
adc
jns
add
not
jae
inc
pop
inc
jge
out
adc
cs
cmp
sub
or
call
pop
mov
das
mov
jmp
push
mov
jecxz
lods
imul
das
cmp
daa
daa
cwde
iret
clc
pop
or
mov
mov
pop
or
push
das
inc
mov
je
xor
pop
and
pop
out
inc
jo
mov
push
adc
in
movs
push
jb
inc
jmp
push
repnz
or
or
nop
jno
jo
cmp
dec
clc
pop
sub
dec
cmc
bound
sbb
mov
pushf
mov
jo
not
jle
rol
retf
sub
push
aas
pop
jp
jb
enter
xor
push
mov
xor
mov
rol
scas
outs
mov
pop
shr
dec
in
pusha
mov
fs
sbb
mov
add
push
(bad)
clc
inc
or
pop
jb
addr16
mov
mov
shl
cmp
push
xor
loop
jg
sbb
push
xor
retf
ss
cmps
das
jmp
add
jo
pop
adc
add
or
mov
fcom
imul
sbb
push
push
xor
dec
shr
adc
xchg
daa
nop
inc
pop
pop
jp
push
jmp
cmp
jmp
push
and
pop
dec
push
push
mov
xor
sub
push
add
jmp
add
sbb
cs
and
popf
push
sbb
test
cmove
sbb
ins
test
es
cmp
xchg
sub
sbb
out
test
add
and
adc
or
mov
repnz
xchg
movnti
fs
jne
xor
add
mov
mov
addr16
jb
jmp
mov
(bad)
xlat
or
mov
xor
sub
push
jo
dec
fisttp
mov
mov
sub
jb
sub
push
mov
dec
(bad)
jmp
pop
adc
jno
ret
mov
pop
in
xor
xchg
movntps
push
test
lods
aam
movs
mov
retf
inc
inc
mov
inc
sbb
adc
lahf
cmp
out
cmp
addr16
add
mov
push
mov
cmps
js
jl
out
ficomp
into
test
fs
adc
jl
push
jno
iret
push
je
or
push
js
add
ror
mov
out
add
jl
xor
jns
int
mov
clc
ins
jns
sub
es
xchg
mov
and
in
push
shl
cmp
ffreep
test
add
or
retf
push
(bad)
or
mov
lods
rcl
icebp
sbb
ins
push
sub
adc
cmps
push
and
fnsave
fcom
adc
mov
push
mov
inc
fisttp
add
leave
and
je
das
adc
sar
push
lds
mov
lds
add
pop
inc
push
lea
call
stos
mov
inc
pop
fwait
sub
inc
mov
or
push
movs
and
pop
call
shr
push
xor
mov
mov
shl
adc
adc
add
inc
mov
inc
lea
jmp
(bad)
aad
dec
xchg
push
and
mov
xor
dec
daa
and
push
jecxz
aaa
das
pop
dec
test
push
rcr
cwde
dec
fcom
call
int
pop
add
outs
das
jl
aaa
adc
adc
push
or
xchg
data16
mov
and
mov
call
mov
cwde
sbb
ret
fst
adc
movs
jl
lea
dec
ret
adc
adc
sub
das
ja
adc
add
loopne
sbb
and
and
popa
cs
mov
das
xchg
adc
mov
push
sub
or
repnz
loopne
das
(bad)
fdiv
xchg
fsub
mov
ret
pop
popa
dec
ja
rcl
ja
xor
mul
add
cmp
cmp
ja
or
sbb
mov
push
sbb
arpl
icebp
and
pop
lahf
dec
mov
xor
pop
or
repnz
pop
add
xchg
fdivr
pop
pop
arpl
adc
dec
or
test
fwait
test
retf
cmc
mov
mov
adc
sub
pop
mov
rcl
pop
pop
repnz
jbe
les
sbb
test
jge
push
sub
dec
dec
mov
pop
push
pop
push
test
sub
cmp
cmp
mov
lods
inc
mov
xchg
vpmacsdqh
nop
sbb
xor
aaa
gs
scas
sbb
pop
test
mov
int3
(bad)
adc
or
bound
adc
cli
pop
add
push
icebp
pushf
jbe
sub
bound
jecxz
jb
add
adc
movs
push
add
and
(bad)
(bad)
call
push
pop
loop
test
mov
push
mov
pop
jns
daa
jge
push
ja
ror
xchg
xor
jmp
outs
push
jo
aas
adc
add
mov
loopne
cmps
hlt
sbb
fwait
and
neg
rol
inc
cld
xor
pop
retf
ja
shl
push
xchg
and
adc
pusha
add
dec
fistp
outs
scas
sbb
inc
xchg
(bad)
adc
push
(bad)
sbb
lods
mov
fild
and
push
add
pop
add
or
pop
int3
and
jle
mov
jmp
sub
loopne
(bad)
hlt
pop
push
fnstenv
jbe
jns
push
cmp
clc
cmps
aad
mov
mov
loope
add
cmp
popa
push
cmps
sub
xchg
add
mov
das
js
dec
push
and
mov
xor
lds
retf
or
push
loopne
cdq
inc
push
adc
mov
jb
jp
(bad)
ss
mov
add
lods
pop
shl
stos
add
gs
push
sub
leave
sbb
xchg
sbb
cmp
fcom
scas
push
sbb
adc
lahf
outs
les
aas
jae
mov
cmp
icebp
sbb
in
rcl
sub
repnz
xor
pushf
mov
cmps
sub
inc
mov
jb
jl
cmp
xor
push
and
ja
cmps
jecxz
mov
dec
sbb
sbb
inc
jmp
test
adc
dec
popf
or
push
fiadd
in
adc
lahf
cmp
dec
add
shl
ds
retf
xor
popa
clc
add
adc
nop
call
add
cmovp
(bad)
push
mov
jb
div
ss
mov
mov
cmp
mov
xchg
inc
rcl
jb
and
push
jl
inc
jle
mov
dec
ds
lea
dec
cmp
jg
push
jl
test
jge
push
jl
mov
add
call
xchg
xor
add
push
add
dec
clc
adc
mov
or
cmps
in
cmp
or
dec
cmp
adc
neg
lea
or
test
pop
je
shr
add
cmp
jg
mov
sub
fild
cmc
shr
add
jl
mov
adc
mov
call
std
das
mov
lock
add
lea
jmp
popa
sbb
jne
test
je
lds
sbb
mov
(bad)
and
mov
xchg
add
loope
hlt
add
xchg
add
cmp
ja
push
add
xor
or
or
push
pop
mov
sbb
or
jnp
jno
inc
test
sbb
cs
mov
cmp
shl
lock
push
sub
xchg
jg
dec
mov
fwait
out
fs
xchg
jl
fwait
inc
pop
xchg
mov
push
mov
inc
adc
pop
call
pop
adc
mov
and
xchg
loopne
add
adc
sbb
push
pop
and
pushf
cmp
mov
jae
push
inc
lea
in
adc
sub
sub
leave
xlat
in
xchg
push
cmp
dec
or
cwde
and
xchg
in
icebp
or
push
mov
inc
or
pushf
or
jb
jb
add
scas
cmp
sahf
lds
adc
jo
add
popa
xor
hlt
mov
cmp
pop
or
cdq
sbb
sbb
fs
or
enter
push
ror
or
inc
xchg
jno
sub
mov
sbb
jg
cmp
sar
mov
repnz
scas
into
inc
inc
shr
sti
ins
jmp
fidiv
and
adc
(bad)
push
aam
add
cmp
jnp
add
cmp
dec
out
sbb
add
call
push
or
out
xchg
(bad)
(bad)
adc
inc
pushf
and
xor
adc
pop
jge
or
sbb
test
cld
imul
sbb
pop
adc
sbb
push
push
ret
inc
sbb
rcr
es
addr16
scas
push
and
adc
rol
cmp
cmp
or
mov
inc
pop
xor
repnz
cdq
lock
hlt
xor
dec
scas
mov
in
in
cmps
jecxz
dec
fdivr
pusha
leave
mov
or
sub
cmp
out
sbb
test
xchg
or
pop
adc
sub
push
sub
adc
mul
pusha
mov
pusha
mov
xor
add
xor
mov
push
pop
nop
or
(bad)
push
mov
call
movs
jge
les
add
push
sbb
fimul
pop
lahf
add
inc
jg
and
lds
cs
(bad)
pusha
add
mov
jl
xchg
in
fs
adc
jl
push
je
or
(bad)
push
jns
xor
test
fimul
jns
clc
and
je
test
jb
jg
add
out
data16
std
rol
pop
or
retf
push
ficomp
dec
push
add
sub
xor
add
push
or
(bad)
fcomp
enter
mov
hlt
ret
jl
mov
inc
dec
sbb
test
loope
adc
movs
add
push
pop
xor
push
pop
add
and
mov
xchg
fs
and
xchg
lods
inc
cmp
adc
and
cmove
mov
xchg
inc
add
aam
pushf
dec
mov
je
mov
cdq
call
push
and
stc
pop
call
add
pushf
nop
ja
fwait
enter
jns
adc
stos
pop
lea
fbstp
mov
dec
or
add
mov
mov
in
mov
fld
adc
inc
lock
dec
test
ret
or
dec
jle
push
fdiv
push
or
jmp
stos
out
pop
adc
add
xchg
fimul
cwde
pop
adc
fild
movs
cmp
push
das
add
std
jg
cmp
jl
push
je
cmp
and
fcom
adc
lahf
test
test
arpl
jbe
pop
cld
in
addr16
inc
dec
fs
cmp
jle
jl
cld
pusha
add
push
mov
cmp
aaa
adc
or
or
mov
ins
movs
rcl
mov
or
nop
xchg
mov
cli
repnz
jmp
shl
rol
test
hlt
jl
js
push
fld
stos
mov
xchg
daa
shr
add
cmp
cmc
pop
pusha
add
loop
add
jo
and
or
mov
sahf
cmp
push
sbb
test
movsx
out
adc
push
mov
ja
ja
adc
stos
jl
or
xor
ins
daa
push
or
or
mov
xchg
mov
adc
adc
mov
dec
adc
xor
fistp
es
xor
jnp
in
movs
aaa
pushf
inc
push
std
cmp
sub
shr
mov
pop
rol
xor
jae
ds
add
imul
xor
sbb
daa
out
in
pop
and
stos
and
scas
test
popa
push
leave
mov
xchg
aas
loope
pop
sbb
adc
jg
jnp
fild
and
and
inc
fstp
and
xchg
lahf
inc
xor
inc
sbb
jo
push
hlt
sub
js
mov
jo
inc
jmp
jmp
ror
jl
sbb
fimul
dec
out
ins
xlat
adc
cmps
push
and
cmp
shr
mov
add
cwde
xchg
lods
add
push
add
test
cmps
add
mov
adc
or
inc
inc
sub
and
in
xor
in
adc
mov
mov
imul
(bad)
jnp
add
adc
mov
js
mov
inc
in
and
xor
shl
inc
aas
and
in
movs
xchg
popa
add
sub
lods
mov
daa
out
loope
dec
xor
xor
imul
or
pop
jmp
jno
out
cdq
jo
add
ret
in
(bad)
mov
and
add
mov
in
mov
pop
add
add
push
push
sub
xlat
and
jb
mov
pop
add
mov
mov
jo
cdq
aaa
xchg
pop
mov
enter
daa
aaa
xchg
cmp
sbb
adc
xchg
jmp
aaa
add
nop
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
dec
outs
or
in
or
jb
popa
arpl
mov
add
in
fistp
dec
inc
outs
dec
imul
jne
je
add
dec
int3
add
push
mov
ret
add
push
cdq
std
hlt
jmp
adc
cmc
int3
std
call
push
adc
push
add
sti
fistp
fadd
dec
add
frstor
add
push
adc
sar
and
add
movs
sbb
les
mov
jle
mov
jg
jae
add
out
inc
add
call
inc
sar
xor
sbb
loopne
and
xor
ins
push
sbb
ret
cwde
pop
mov
fwait
imul
add
add
gs
data16
nop
add
in
(bad)
fisub
sbb
mov
cmps
outs
xchg
jb
arpl
loope
ins
push
or
add
fist
(bad)
or
inc
je
pusha
or
inc
pop
aaa
jp
sub
push
mov
mov
mov
ds
or
push
imul
add
sti
mov
mov
pop
aad
lock
ror
test
sub
push
dec
je
pusha
xor
push
cmp
jnp
imul
xor
and
mov
adc
sbb
ds
ins
gs
(bad)
mov
lock
xchg
arpl
mov
adc
faddp
out
int3
jno
jnp
test
fiadd
(bad)
out
adc
out
xchg
push
sbb
push
mov
daa
loop
scas
mov
push
sbb
movs
js
test
add
sahf
push
pop
add
inc
imul
push
jmp
pop
or
adc
push
jno
and
pop
(bad)
xor
cmp
lahf
mov
jnp
cli
cmp
cmps
adc
push
aaa
inc
jno
dec
xor
xor
enter
push
mov
pop
dec
mov
add
xor
lds
(bad)
push
jnp
xchg
bound
xchg
add
and
dec
ret
mov
jae
mov
adc
dec
mov
adc
sub
or
jbe
cmps
inc
ins
popa
jae
gs
inc
pop
or
jo
mov
aaa
test
push
and
adc
int3
sbb
and
sub
or
cmp
(bad)
xchg
dec
push
add
mov
loopne
call
sahf
cld
sar
aaa
sub
xor
cld
pop
or
adc
loopne
sub
pop
pop
sbb
push
addr16
movs
sbb
mov
mov
rcr
pop
in
mov
fmul
inc
in
ficom
jmp
sbb
push
mov
jmp
push
push
dec
mov
in
xchg
add
cmp
push
cmp
add
aad
adc
aas
or
(bad)
pushf
test
cmp
push
leave
xlat
or
aam
test
push
pusha
mov
pop
xlat
pop
ja
daa
js
add
div
lss
add
sbb
sub
lods
mov
call
imul
and
pop
jge
or
add
mov
sbb
xlat
fild
push
repnz
retf
out
loopne
ins
cmp
dec
int3
movs
ds
push
mov
popf
ffreep
fdiv
push
push
mov
scas
cmp
jmp
rol
jge
or
add
sub
xlat
and
jno
sub
and
mov
mov
or
or
addr16
xchg
xchg
jnp
pop
mov
cmp
add
std
mov
push
dec
bound
int
add
scas
cdq
out
mov
lock
gs
mov
mov
push
mov
mov
push
in
loopne
sbb
push
mov
pop
cmp
push
je
mov
je
fdivr
jo
(bad)
cmps
pmaxsw
pop
stc
pusha
sbb
add
ror
mov
loopne
(bad)
lods
(bad)
(bad)
add
pop
pop
(bad)
sub
jo
jo
(bad)
push
(bad)
xor
jo
pusha
inc
cmp
mov
mov
sbb
inc
pop
in
(bad)
outs
mov
pop
int
add
shl
or
mov
lea
fist
scas
sbb
stc
mov
cmp
add
mov
icebp
push
xlat
mov
cmps
mov
dec
ja
out
push
sub
add
push
daa
mov
ret
add
push
sti
movaps
ret
adc
imul
pop
pop
jae
mov
aas
dec
ret
jg
adc
add
ss
jns
xchg
or
imul
sahf
ja
cmp
int3
mov
mov
aaa
inc
jno
fsubr
jg
(bad)
(bad)
dec
push
les
call
pop
jno
jns
les
jbe
add
push
jg
pushf
in
mov
popa
or
daa
pop
adc
adc
push
popa
xchg
inc
cmps
pop
or
adc
cmps
test
leave
jae
lds
daa
int3
add
inc
mov
pop
and
mov
mov
cmp
pop
int3
mov
mov
push
test
mov
sbb
inc
(bad)
jmp
fsubr
push
daa
pop
push
push
mov
push
mov
lds
add
dec
aaa
xor
aad
call
xor
jne
sub
or
sub
loop
pop
stos
mov
push
mov
push
sub
repz
mov
xchg
add
xchg
cs
repz
add
mov
xor
mov
push
mov
ja
rol
mov
ja
shr
sbb
(bad)
out
mov
hlt
pop
adc
sbb
imul
inc
mov
clc
mov
cs
jb
popa
jns
push
sub
mov
loop
dec
sbb
sbb
pop
dec
jg
xor
jo
test
mov
jo
push
or
inc
dec
outs
or
inc
and
add
jbe
sub
shl
rol
outs
fs
adc
mov
xor
jo
and
scas
jl
and
pop
ror
add
loopne
and
mov
push
xor
push
pop
pop
movaps
inc
or
fstp
sbb
cs
dec
inc
outs
jne
push
popa
bound
shl
cld
xor
imul
sub
clc
push
adc
jne
arpl
js
neg
outs
sbb
add
push
and
das
retf
mov
out
ror
and
pushf
xchg
mov
shr
cmps
scas
mov
add
loopne
pop
aam
ficomp
add
add
rol
aaa
inc
inc
scas
fs
xor
pop
cld
push
hlt
dec
and
push
cmp
outs
jb
add
cmp
inc
sub
mov
into
or
je
outs
sbb
cmp
inc
popa
add
jb
xchg
dec
outs
push
add
push
test
ins
add
add
pop
or
pop
and
adc
jl
add
mov
push
jnp
adc
out
xlat
add
pop
inc
jne
out
pop
add
nop
loopne
cmp
dec
imul
pop
ror
mov
fimul
mov
mov
pop
es
pusha
mul
push
pop
add
sub
jo
add
dec
and
add
jo
inc
push
push
dec
cmp
lods
sbb
sbb
sbb
or
or
sub
push
sub
xor
add
xor
sar
add
push
dec
loopne
push
shl
push
leave
leave
ins
mov
dec
mov
fs
(bad)
or
push
mov
icebp
adc
sbb
retf
add
dec
mov
in
(bad)
je
inc
sahf
pushf
pushf
sar
push
xlat
push
and
dec
mov
adc
cmp
daa
daa
pop
xchg
fnstsw
(bad)
mov
arpl
pop
xchg
pop
loope
sbb
ret
push
add
mov
ret
add
cmp
xor
cmps
dec
in
imul
dec
jmp
daa
or
inc
and
cmp
outs
add
add
jno
adc
test
xchg
dec
mov
jae
add
outs
jns
cmps
lea
mov
inc
xchg
adc
jne
cmp
call
push
push
adc
add
push
popa
jg
ins
mov
xor
add
fs
out
aaa
daa
sub
jp
push
popa
ins
jne
arpl
xor
push
popa
outs
inc
cmps
gs
sub
ins
push
loop
js
outs
add
sub
or
rol
and
int
add
ja
push
(bad)
stos
push
inc
jbe
outs
jl
jo
nop
out
lock
cmc
add
popf
out
mov
xchg
jnp
mov
add
pusha
sar
xchg
inc
mov
xor
fstp
cmp
jge
add
call
sub
and
push
jecxz
test
mov
mov
mov
mov
and
iret
dec
add
arpl
or
inc
lods
add
pop
sbb
or
adc
xchg
push
sbb
mov
xor
stos
xchg
adc
or
push
inc
sbb
jmp
pop
xchg
pop
add
shl
push
jo
cdq
ins
loope
and
jle
cdq
push
inc
xchg
ja
pusha
xor
add
cmps
cmp
add
fs
sub
and
mov
sub
pop
xor
inc
sbb
arpl
les
dec
gs
xor
adc
mov
dec
pop
add
jg
das
add
add
out
dec
popa
pop
and
mov
popa
pop
shl
int3
push
lds
dec
push
es
call
aaa
add
pushf
es
imul
inc
cmp
and
dec
popw
jp
push
add
push
imul
cs
cmp
cwde
addr16
daa
inc
jb
mov
push
and
ds
scas
imul
(bad)
xor
sbb
inc
jl
inc
pop
and
push
cli
ret
test
ins
or
loop
adc
or
xor
and
in
test
add
xchg
inc
add
ss
test
pop
push
lahf
mov
imul
jp
sbb
or
rol
outs
inc
aaa
inc
aam
push
dec
mov
inc
sub
daa
sbb
sub
shr
imul
pop
mov
pop
in
pop
pop
and
mov
push
push
or
push
inc
hlt
push
loopne
add
jl
fild
out
repnz
fisttp
and
sub
sub
push
mov
fdivr
or
(bad)
popa
sbb
cdq
pop
mov
imul
inc
outs
sub
mov
lds
out
(bad)
je
inc
ret
pusha
js
outs
fild
js
adc
push
movs
jno
ret
sub
out
adc
sbb
mov
pop
add
scas
nop
je
mov
movs
inc
mov
sbb
mov
scas
push
and
fwait
data16
sbb
push
add
push
and
dec
and
push
inc
jo
aaa
scas
cmp
jno
mov
pop
adc
sbb
inc
xchg
mov
mov
dec
xchg
inc
add
fist
rol
in
push
std
(bad)
push
fild
sbb
pop
pop
lea
dec
test
inc
fimul
enterw
inc
js
out
xor
add
push
and
in
cmp
das
xchg
loopne
pushf
cs
or
jbe
out
or
push
pop
push
sti
shr
mov
int3
push
sub
ja
shl
loopne
xchg
loopne
adc
in
lds
loope
fst
push
jbe
push
int3
idiv
xor
loop
push
inc
sahf
pushf
pushf
xchg
iret
adc
pop
and
dec
stos
stc
sbb
daa
daa
xchg
or
enter
push
mov
leave
leave
leave
mov
leave
cli
xor
addr16
xor
in
adc
sbb
mov
dec
ja
fidiv
sahf
push
data16
dec
add
cmps
shl
das
test
push
dec
xchg
(bad)
xchg
dec
or
punpckhdq
sbb
ret
movs
aam
push
(bad)
xchg
push
shr
xor
xchg
add
dec
(bad)
minps
mov
jg
mov
pop
ins
inc
jnp
nop
or
lods
cmp
adc
jb
push
movs
daa
ins
push
stos
ss
movaps
stos
in
or
xor
nop
xor
ja
cs
shr
inc
jbe
pop
mov
xor
dec
mov
xchg
and
pop
sbb
xchg
cwde
and
or
ss
js
adc
dec
(bad)
leave
call
mov
mov
nop
clc
inc
or
in
movs
js
mov
ror
inc
add
push
xchg
or
jbe
bts
sbb
loopne
sub
push
pop
(bad)
xchg
pop
dec
jno
pop
in
xchg
(bad)
and
add
dec
scas
outs
mov
xchg
xchg
into
xor
popf
dec
mov
or
xchg
push
mov
mov
push
movs
add
jecxz
lods
sar
jecxz
and
and
dec
imul
xchg
cmp
push
mov
add
mov
dec
aaa
add
push
mov
rol
mov
xchg
push
jo
mov
xchg
mov
test
ds
cmp
cmp
mov
inc
mov
jb
xchg
mov
inc
mov
dec
mov
inc
push
push
fst
adc
mov
ins
or
movs
sub
push
and
pusha
sub
sub
mov
inc
and
mov
add
fcom
inc
sub
shl
bound
fmul
mov
mov
add
xor
mov
imul
add
adc
lods
ficom
rcl
mov
mov
or
sbb
jbe
push
xchg
inc
fwait
test
rol
sub
stos
xchg
sbb
add
sub
mov
inc
fisttp
add
aas
sub
jmp
movaps
and
push
jge
test
sub
mov
add
in
cmps
das
push
xchg
push
xor
mov
clc
(bad)
add
in
push
push
sub
xchg
sahf
add
mov
push
ja
pop
imul
movs
pop
fld
add
out
inc
ja
fdiv
xor
(bad)
dec
xchg
aad
out
retf
or
loopne
shl
pop
xchg
aad
jge
xchg
pusha
mov
fisub
inc
pop
daa
retf
inc
pop
push
stos
xchg
stos
popf
hlt
cmp
jae
ss
add
jbe
add
push
dec
addr16
pusha
mov
push
cmp
in
adc
test
data16
fnstsw
jb
clc
mov
call
xor
adc
xchg
jl
push
or
neg
cmp
ins
jae
lods
push
lods
(bad)
loopne
mov
out
dec
addr16
icebp
push
idiv
mov
mov
pushf
pushf
int3
div
(bad)
sahf
fimul
inc
sahf
push
repz
daa
daa
and
pop
xchg
ficom
cmc
pop
mov
leave
enter
test
out
div
push
sahf
jmp
clc
dec
sbb
jb
cmps
lock
stc
pmaxsw
xor
test
aad
mov
push
jecxz
and
cmp
and
call
outs
sbb
cmp
dec
(bad)
dec
sbb
fst
stos
jno
and
cmp
and
mov
ror
sub
dec
je
adc
shl
mov
daa
ja
(bad)
bound
jb
push
sub
ss
les
loopne
xor
inc
mov
adc
fcomp
sub
jmp
cmp
or
adc
clc
xchg
dec
jno
adc
adc
xchg
and
das
leave
call
mov
movs
add
lea
call
push
or
mov
js
ins
iret
or
dec
xor
add
add
xchg
or
movs
inc
ret
inc
adc
push
adc
cs
xor
pop
adc
mov
cdq
dec
inc
xor
mov
mov
jns
das
rcl
or
mov
inc
sar
mov
and
call
mov
pop
mov
ds
pop
sub
add
out
dec
sbb
dec
ins
je
call
sub
nop
mov
rcr
enter
add
push
ret
mov
jg
or
cmp
cdq
je
mov
cmps
xor
je
mov
mov
rcl
inc
dec
sub
mov
fisttp
(bad)
aam
and
xchg
dec
jo
mov
sbb
bound
or
ja
add
cs
cmp
mov
sub
(bad)
aad
pop
pop
ins
cli
mov
cmp
cmp
add
cmps
inc
xor
cmp
mov
pop
mov
(bad)
pop
loope
add
sbb
pushf
enter
(bad)
aas
aam
and
es
cwde
popf
cmp
icebp
movs
rol
cmp
mov
sub
cvttps2pi
add
push
push
movs
in
mov
retf
stos
outs
imul
xlat
(bad)
jg
xchg
add
push
mov
add
inc
and
hlt
jmp
pop
lahf
inc
into
adc
fistp
int3
fldenv
jecxz
add
int
add
into
dec
ja
cs
in
rol
fiadd
add
or
out
cmps
push
adc
and
or
out
xchg
sbb
jae
mov
sar
add
cmp
sub
inc
ret
push
jmp
or
push
(bad)
aaa
call
jo
inc
mov
in
jne
sub
sub
bound
mov
mov
pop
fs
jbe
(bad)
or
push
cmps
imul
push
mov
push
cwde
dec
mov
loopne
xor
lock
out
sbb
imul
pushf
loop
adc
pop
mov
in
xchg
push
sub
lock
dec
fild
adc
psubb
outs
xchg
and
xor
and
and
xor
push
sub
cmp
mov
jmp
mov
sbb
adc
and
scas
loopne
nop
imul
(bad)
ds
mov
call
imul
movs
out
add
sahf
and
push
movs
es
fnsave
cmp
add
mov
inc
out
sbb
add
pushf
adc
add
rcr
stc
xchg
lock
cmp
push
or
out
mov
pop
push
sbb
sbb
icebp
inc
push
in
add
push
jno
out
ss
cmp
jge
fcmovbe
ja
adc
hlt
cmp
push
sbb
out
cs
cmp
sahf
adc
push
cwde
fnstsw
out
pop
mov
es
add
or
push
out
mov
fs
add
and
add
mov
rcl
js
pop
or
xor
cmc
pop
clc
push
push
clc
pusha
adc
push
clc
imul
mov
pop
out
or
ds
lods
xor
or
dec
popa
inc
fiadd
nop
add
aas
push
test
push
cmovle
or
pop
pop
adc
push
or
push
adc
pop
fiadd
pusha
add
inc
jbe
sub
lea
adc
je
jb
push
dec
bound
adc
cmc
les
mov
fwait
adc
push
cmp
dec
pop
popa
ffreep
jo
mov
pop
add
adc
cmp
push
mov
or
dec
or
push
adc
adc
push
add
sbb
cs
adc
inc
fst
xchg
out
push
aaa
test
pusha
add
inc
xchg
add
push
mov
es
das
lds
das
scas
adc
push
xchg
sti
mov
popa
or
inc
push
add
push
adc
pop
sbb
fiadd
cmp
ret
push
and
test
and
pop
push
xchg
pusha
xor
cmp
jl
adc
out
lahf
or
push
ins
push
xchg
ins
pop
pop
mov
or
addr16
mov
sub
xor
and
add
lock
mov
cwde
push
pop
cld
mov
js
fcomp
or
push
sahf
js
or
pop
pusha
and
jnp
ss
je
lods
push
lahf
loopne
push
loopne
pop
ds
adc
push
lahf
pop
and
lahf
jae
mov
sub
rcl
cmp
enter
sahf
outs
push
pop
jecxz
sbb
push
or
or
pop
xchg
jb
repnz
adc
pop
lods
cmp
jns
cli
push
or
cmp
aam
push
push
lods
dec
inc
sahf
pushf
in
xor
and
fadd
adc
pop
xchg
daa
daa
daa
xchg
loope
adc
popfw
out
mov
pushf
fst
(bad)
xchg
sahf
pop
retf
rcl
jo
mov
cmp
inc
xchg
mov
adc
jmp
push
jbe
mov
adc
dec
adc
cmp
add
mov
pop
inc
loopne
jmp
adc
test
sub
in
pusha
and
or
pop
adc
cmc
test
xor
test
pusha
ins
push
jmp
lock
or
fadd
jbe
stos
inc
mov
adc
cwde
add
add
mov
out
add
jmp
xchg
jmp
jmp
xchg
jecxz
push
xor
mov
fwait
sub
inc
gs
sub
jmp
pop
xor
jle
inc
rol
adc
nop
sbb
test
inc
test
not
xor
dec
add
inc
or
jmp
mov
add
inc
adc
ja
jmp
sbb
add
loopne
lods
xchg
jmp
jo
or
les
push
inc
xor
sub
shr
xchg
jmp
adc
xchg
dec
test
movs
jmp
jmp
jo
and
mov
add
mov
test
or
add
movs
mov
popf
and
sub
jmp
push
push
and
rcl
jo
pop
inc
loopne
sub
jl
pop
cmp
add
or
inc
jmp
loopne
icebp
adc
or
mov
(bad)
sub
or
fcom
push
inc
jg
pop
cdq
adc
inc
shl
cmps
js
jmp
imul
xor
inc
and
jge
adc
(bad)
push
cmp
ins
and
nop
or
sbb
add
jmp
xchg
and
xchg
dec
adc
mov
rcr
inc
or
ret
sbb
inc
jmp
pop
adc
cmp
sub
je
jnp
adc
jmp
mov
cmp
cmp
inc
xor
loopne
inc
mov
add
push
or
adc
loop
es
jmp
sbb
(bad)
out
xchg
sub
cmp
hlt
or
and
push
adc
ds
imul
add
mov
xor
add
adc
xor
cs
pusha
add
jecxz
xlat
cmp
add
adc
pop
test
aaa
add
inc
and
mov
add
lds
jmp
xor
int3
cmc
inc
or
ror
add
mov
adc
mov
adc
pop
movs
daa
ret
mov
jle
pop
scas
mov
addr16
push
stos
or
push
push
arpl
jno
add
mov
inc
ror
or
xor
int3
bound
jo
gs
xor
adc
aaa
push
or
adc
lods
pusha
push
aad
shl
mov
test
jecxz
sbb
xor
aaa
neg
inc
shl
or
aaa
mov
pop
push
dec
inc
or
add
aad
push
or
pusha
or
mov
cmp
popa
cmp
cmp
int3
xchg
ds
push
movs
mov
mov
dec
mov
push
cmp
push
ror
cwde
push
daa
cwde
sub
push
push
add
dec
add
fs
add
xchg
and
mov
pop
jge
adc
mov
and
mov
aaa
test
mov
(bad)
sbb
cmp
iret
cmp
sbb
int3
test
pop
cdq
jge
sbb
out
ja
sbb
xor
push
mov
add
movs
mov
into
repz
inc
pop
add
out
mov
aaa
cwde
jae
add
and
push
pop
sbb
js
pusha
add
sbb
mov
cmc
pop
adc
and
pop
in
addr16
jb
jne
out
push
mov
adc
arpl
sbb
int3
jge
xchg
xchg
lds
pushf
or
xchg
sub
lods
add
xlat
fucomp
cmp
dec
push
test
(bad)
mov
out
mov
inc
xlat
xor
or
sub
arpl
or
jo
add
mov
adc
add
or
add
jecxz
xchg
mov
dec
and
cmp
jmp
pop
fld
icebp
and
fwait
mov
sub
jno
or
sub
(bad)
sub
jne
test
lock
add
or
adc
push
imul
mov
outs
mov
push
xor
add
daa
add
(bad)
retf
cmps
push
cmp
add
push
xchg
fbstp
test
adc
mov
pop
jne
les
lahf
mov
adc
push
(bad)
mov
push
sbb
adc
repz
cs
cmc
fnstcw
sar
out
pop
push
add
clc
push
sahf
mov
ja
push
mov
mov
xchg
adc
lods
and
xor
pop
or
sub
call
pusha
and
div
dec
imul
mov
sbb
rol
fnstsw
iret
call
cmp
push
sbb
je
mov
add
aaa
js
add
loopne
mov
xor
mov
aam
xchg
xor
pop
pop
or
lea
sbb
ins
sbb
addr16
ret
lds
sbb
fcom
js
xchg
aas
mov
lods
jo
lods
add
inc
cmp
push
cmps
xchg
add
and
sbb
cmps
xlat
adc
push
xchg
or
jo
mov
xlat
(bad)
imul
mov
xchg
adc
int3
dec
and
push
push
popa
inc
sbb
xlat
aam
xchg
cmp
add
daa
adc
add
push
xlat
inc
sbb
mov
aaa
xchg
aaa
scas
adc
scas
nop
sub
mov
test
xchg
mov
pop
push
adc
loopne
(bad)
es
push
inc
and
mov
ja
pusha
mov
fcomp
pop
push
add
inc
daa
mov
into
imul
push
add
enter
xchg
loopne
adc
push
popa
mov
jmp
dec
mov
xlat
out
sbb
push
lods
into
wrmsr
xchg
inc
popa
nop
mov
inc
ins
outs
bound
dec
inc
push
ror
ror
mov
aas
(bad)
out
fwait
mov
sub
sub
adc
jns
xor
xchg
add
out
idiv
push
add
sub
data16
push
shl
out
push
pop
js
pop
scas
sbb
cmp
dec
add
pusha
mov
mov
hlt
pop
jns
add
cmp
sub
jl
fnstcw
jo
lds
add
lds
sbb
push
(bad)
loopne
ja
(bad)
mov
fadd
mov
sbb
dec
and
xlat
add
call
add
fld
ss
push
(bad)
push
mov
jo
jo
xchg
fs
stc
scas
lock
and
mov
sub
leave
inc
je
ja
rol
ffree
dec
clc
xchg
aaa
call
je
jne
in
sbb
push
add
push
daa
mov
or
push
add
push
add
sub
idiv
cdq
adc
inc
pop
test
xor
xor
(bad)
sub
push
adc
out
in
inc
dec
sti
bound
aaa
adc
inc
rol
ffree
or
cs
fucom
sbb
je
dec
add
loop
repz
add
mov
push
adc
adc
aaa
test
xor
mov
xor
xor
js
les
pusha
cs
addr16
mov
dec
outs
jge
and
rol
inc
mov
add
inc
jecxz
mov
aad
xor
add
loopne
in
pop
test
int
mov
xchg
add
arpl
push
pop
cwde
push
sbb
add
xor
pushf
push
adc
outs
daa
mov
fcomp
sahf
aaa
(bad)
sbb
push
xchg
inc
mov
or
ss
leave
loopne
adc
leave
sub
push
repnz
or
and
pop
inc
leave
pop
xchg
rcl
or
fadd
push
test
enter
fcomp
je
jg
test
jecxz
(bad)
out
pop
or
and
test
stc
inc
xor
push
not
and
adc
test
mov
loopne
test
add
repz
push
icebp
aad
fisttp
daa
inc
push
mov
xor
in
inc
inc
add
daa
mov
cmps
push
daa
add
xor
out
daa
push
mov
adc
jno
pop
stos
and
sbb
int
push
les
jle
mov
add
push
pusha
mov
test
and
pop
xchg
sbb
cdq
cmps
xor
leave
int3
sub
xor
cmp
and
out
sbb
push
pop
push
add
jecxz
jae
fs
add
push
repnz
adc
push
adc
adc
mov
add
pop
stos
and
inc
jmp
add
sbb
lock
push
cmp
(bad)
inc
xchg
push
loopne
push
jb
jo
imul
sbb
dec
cmp
xchg
cmp
loopne
cdq
int3
pop
ss
arpl
ins
dec
adc
jecxz
js
xlat
fdivr
push
aaa
(bad)
add
pop
or
add
push
jnp
pop
rcl
dec
jle
jge
ins
clc
test
xlat
and
clc
xor
push
jns
xor
jl
call
loope
or
mov
das
xor
or
push
or
xchg
cmp
loope
inc
mov
repz
xchg
lea
and
loopne
cmp
es
or
push
or
scas
rdpmc
mov
push
int
and
adc
out
sbb
adc
sahf
pop
ja
mov
arpl
adc
into
repz
cs
push
stc
fst
mul
ja
inc
nop
push
daa
fisttp
call
add
jo
ja
mov
xchg
cvttps2pi
test
fwait
pusha
xor
mov
rcl
inc
or
jg
enter
mov
mov
sbb
faddp
int3
lds
iret
push
fnstcw
add
cs
sahf
xlat
mov
add
fadd
sbb
mov
dec
test
jns
add
mov
mov
aaa
jae
sub
mov
push
loop
pop
out
pop
inc
popa
mov
out
cmp
add
jae
mov
iret
pop
push
imul
fld
das
adc
out
jl
mov
mov
ret
or
xrelease
dec
xchg
push
loopne
add
sbb
pusha
add
scas
mov
fcom
nop
push
ds
scas
cmp
xor
push
leave
ins
xor
push
jmp
xchg
mov
ja
jo
mov
mov
bound
nop
lods
add
js
inc
inc
mov
add
push
in
mov
mov
push
sbb
mov
mov
push
push
clc
mov
jmp
pop
in
add
mov
call
sysenter
out
push
and
daa
mov
cmp
fwait
jecxz
adc
ror
int3
inc
aas
ss
push
push
cmp
add
pop
pusha
idiv
in
faddp
les
add
shl
add
icebp
and
add
sbb
adc
pop
push
movs
popa
les
aaa
pop
loopne
sbb
jne
rol
test
(bad)
push
add
mov
or
mov
adc
into
repz
and
cmp
mov
push
xchg
rcr
push
push
add
cmp
push
or
daa
add
(bad)
sub
jecxz
mov
pop
sbb
mov
loop
test
dec
xchg
sub
stos
pop
out
jae
test
fucomi
add
(bad)
or
jne
mov
dec
xor
sbb
jns
add
mov
cld
sbb
int3
or
and
ret
int
sub
fdivr
and
mov
push
fsubr
enter
daa
fimul
mov
pop
out
mov
jle
mov
aas
jo
pcmpeqd
mov
gs
xchg
inc
pop
or
scas
pop
scas
pop
out
cmp
sub
jno
pop
scas
mov
push
push
mov
or
scas
mov
into
ret
push
cmp
retf
outs
sbb
or
pop
fst
cmps
sbb
out
xor
jno
je
cmps
sub
sub
int
cmp
mov
push
push
xor
mov
adc
xchg
cs
push
movs
mov
pop
mov
popa
xlat
mov
cmp
push
ror
scas
jmp
mov
push
add
xlat
add
sbb
pop
inc
xlat
aam
xor
sub
rol
or
adc
cmp
scas
(bad)
in
push
test
push
sbb
xchg
fwait
ja
mov
cmp
loopne
imul
pusha
sub
scas
mov
scas
lock
mov
push
cwde
add
jl
es
lds
inc
add
scas
and
inc
and
test
xchg
or
adc
push
xlat
imul
sub
xlat
xor
out
mov
and
push
dec
push
data16
jl
bound
pusha
xchg
push
mov
aas
mov
pusha
pop
push
mov
add
jnp
sub
and
inc
and
jo
pusha
pop
push
mov
pop
loopne
mov
and
popa
sbb
ja
sbb
sbb
arpl
cmp
sub
push
inc
add
ror
and
push
out
or
xor
loopne
(bad)
dec
(bad)
or
dec
ins
jno
mov
inc
mov
xor
jbe
mov
in
rol
clc
popw
or
aam
int3
dec
pop
pop
ja
test
add
push
aaa
ins
mov
aam
movs
mov
and
dec
rcl
fidiv
or
xor
shl
mov
sbb
ja
cs
cwde
clc
push
enter
sbb
cmps
add
push
mov
loope
mov
sbb
jg
imul
fdivr
fidiv
adc
dec
push
call
out
int3
push
addr16
push
lds
jp
mov
out
fisub
pusha
mov
or
std
mov
bound
inc
lods
fadd
movs
loope
ins
xchg
loope
adc
inc
jno
add
cdq
sbb
pop
pop
dec
aaa
add
push
iret
cmp
daa
les
cmovg
push
popa
imul
addr16
sub
mov
or
sbb
(bad)
(bad)
mov
pop
xchg
jae
mov
add
lock
pop
dec
inc
ins
cmp
js
push
add
fdivrp
jl
push
add
(bad)
xlat
fucomp
mov
inc
push
pop
or
add
push
mov
jle
sbb
test
push
xor
xor
mov
mov
sub
lods
(bad)
int3
enter
addr16
pop
int3
js
rcr
push
inc
xchg
out
xor
lea
mov
mov
adc
dec
int3
js
jecxz
out
outs
and
push
inc
xor
lds
test
sub
dec
pop
xchg
inc
cwde
push
adc
or
push
loop
sub
dec
popa
mov
jg
sbb
push
xchg
jne
add
cs
or
push
(bad)
out
mov
mov
daa
and
add
push
out
add
sbb
add
fs
pop
mov
mov
pop
xor
pusha
adc
lds
loope
sub
lea
(bad)
and
mov
mov
les
mov
add
mov
mov
pushf
out
shl
or
cs
push
push
out
push
add
cld
push
jp
add
mov
mov
jb
sub
and
cmps
sbb
outs
mov
sti
movs
push
adc
jo
add
ret
jnp
push
adc
sbb
fistp
ret
test
aad
or
add
pop
cwde
imul
bswap
add
sub
or
jnp
(bad)
push
mov
push
add
mov
test
aam
scas
jo
mov
dec
daa
sbb
or
add
push
xor
popf
mov
push
es
mov
push
mov
mov
push
mov
loope
mov
sub
or
mov
xor
xchg
pop
int
pusha
add
in
dec
or
lahf
push
push
xor
pop
(bad)
aaa
mov
mov
(bad)
jns
adc
push
ins
push
xlat
sbb
fadd
js
aaa
call
jle
pop
(bad)
add
add
sbb
add
push
aaa
or
mov
add
sbb
and
sub
xor
imul
push
and
adc
push
fsubr
and
inc
aas
mov
sbb
out
add
adc
inc
jno
cmp
jg
jle
pop
fstp
add
and
push
(bad)
push
icebp
and
frstor
test
jno
fsub
pusha
push
sub
mov
sbb
or
sub
cmps
pop
stos
add
xor
pop
push
movs
stos
sub
add
movs
pop
nop
stos
add
jle
lock
(bad)
push
test
int
dec
retf
add
cmp
jmp
push
sbb
sub
push
add
jo
push
loopne
jmp
jle
pushf
out
cs
adc
add
xor
add
(bad)
lea
sbb
push
fnstsw
addr16
jo
sbb
mov
xchg
push
sbb
mov
sbb
cmp
push
test
add
in
lea
pop
mov
or
xchg
push
in
xor
loopne
cmp
je
push
aaa
mov
ins
aad
pop
and
xor
aaa
call
xlat
cmp
jns
shl
int3
test
pop
cdq
jge
fld
shr
movs
xlat
fnsave
xor
mov
add
daa
dec
push
add
xlat
jmp
cli
push
mov
mov
mov
push
or
aas
pop
jge
mov
jno
push
fadd
clc
pop
xlat
xchg
sub
mov
cmp
push
aas
push
jp
outs
adc
ror
int3
jno
ss
test
fadd
(bad)
xlat
cmp
shl
sbb
push
mov
mov
into
repz
cs
add
xlat
enter
scas
xor
pop
sbb
dec
and
adc
mov
popa
mov
jnp
push
bound
push
push
dec
arpl
bound
cmp
in
push
jle
xchg
push
pop
sub
repnz
pop
push
(bad)
sti
mov
(bad)
mov
fimul
add
xchg
push
inc
push
mov
cmp
in
mov
rol
add
mov
pushf
fsubr
mov
loopne
and
sbb
mov
imul
and
push
push
inc
inc
push
add
mov
xor
mov
and
adc
cmc
and
popf
sbb
lahf
arpl
xor
inc
stos
repz
push
push
xor
add
mov
mov
push
add
popw
lock
mov
cmps
pop
jle
pushf
fist
xchg
(bad)
(bad)
cmps
rcl
(bad)
xor
xor
mov
repz
and
addr16
js
pop
repz
repz
sbb
sbb
mov
and
mov
int3
push
and
add
sbb
nop
jmp
pop
xor
(bad)
cmp
dec
pop
pop
inc
rol
sub
push
loope
mov
lock
arpl
shl
adc
mov
push
pop
inc
xadd
arpl
hlt
push
js
add
or
lods
and
jne
adc
scas
inc
fs
add
push
adc
xchg
push
adc
pop
or
rol
and
pop
lds
pop
push
xor
push
imul
mov
mov
stos
aaa
adc
out
jl
test
mov
mov
popf
cmp
test
pop
in
(bad)
jne
jns
add
mov
pop
nop
add
test
outs
adc
sub
repz
push
rcl
retf
aad
cmp
out
mov
shr
push
push
add
sub
mov
adc
mov
movs
jo
mov
and
sete
push
mov
jns
cmp
loope
test
cli
bswap
movs
inc
and
xadd
or
popa
jno
pop
call
popa
add
pop
test
rcr
mov
mov
push
ja
in
sub
push
mov
push
in
enter
movs
adc
and
and
mov
addr16
push
xor
outs
jne
fcom
pop
pop
push
in
pop
jl
pusha
push
mov
jo
test
mov
mov
ret
and
sti
loop
inc
mov
sbb
mov
clc
cmps
push
cmp
sub
dec
push
data16
jl
test
push
sbb
movs
cmps
ret
inc
pop
and
pop
mov
push
loope
or
push
push
push
add
push
jo
sbb
push
test
pop
push
jno
jo
loop
lods
push
sbb
add
adc
mov
and
xlat
mov
add
push
loopne
push
test
push
xlat
popf
adc
sub
push
je
and
in
mov
mov
ins
and
ficom
lds
aaa
cmc
das
cmp
inc
imul
popa
ins
inc
or
ins
jl
ins
fcom
sti
or
stos
xor
jae
jno
fisubr
ds
inc
ins
sbb
sub
adc
adc
and
sub
jb
pop
sti
cmps
ja
push
mov
into
das
in
adc
das
int3
test
test
pusha
iret
cs
pop
fadd
xor
stos
nop
bound
xor
ds
dec
push
or
shl
lds
ja
loop
cmp
xchg
sub
movs
test
daa
or
pop
sbb
adc
sbb
or
enter
jge
icebp
add
mov
cmps
push
ret
loop
das
fmul
out
ss
test
push
test
out
cli
out
sbb
sub
adc
push
jb
jo
js
sub
test
movs
out
mov
xor
pop
mul
push
mov
mov
sbb
dec
inc
popa
std
adc
pop
test
cmp
push
inc
push
xor
push
mov
das
test
push
add
nop
add
hlt
stos
inc
cmp
inc
adc
inc
nop
loop
push
jmp
push
mov
mov
pop
mov
lock
xor
xchg
stc
pop
popa
dec
dec
sub
pop
jno
lds
or
mov
pop
ja
lds
mov
popa
jmp
fwait
or
add
sub
mov
add
(bad)
jno
jns
fdivr
dec
sbb
xor
inc
dec
test
inc
or
inc
and
pop
mov
push
push
sub
push
push
sbb
leave
int3
stos
fcom
mov
jo
test
and
sbb
pop
loop
adc
les
pushf
add
pop
add
in
lods
jp
mov
push
inc
dec
inc
icebp
test
push
jb
dec
and
pop
mov
push
inc
push
pop
xchg
push
add
ret
jp
inc
loop
push
leave
sahf
loop
mov
loopne
lahf
test
pusha
push
sbb
test
adc
adc
sbb
mov
ins
lahf
cmp
test
jl
push
mov
sbb
push
xlat
push
neg
inc
push
enter
push
and
pop
inc
div
(bad)
sub
dec
xor
mul
inc
push
jno
ins
sbb
(bad)
push
mov
(bad)
loope
pusha
test
jno
lea
out
add
and
or
lds
iret
pushf
push
daa
sbb
fstp
and
sbb
xor
dec
das
mov
push
inc
and
sub
and
int3
scas
fsub
and
dec
jno
out
xchg
fisub
into
push
daa
xor
and
shl
adc
xor
pop
sub
inc
cmp
jno
fld
sbb
inc
sub
or
lods
pop
gs
out
outs
jbe
add
push
lock
out
add
mov
push
addr16
dec
push
call
mov
sbb
and
sub
jo
addr16
adc
push
std
leave
mov
fisttp
cld
mov
push
sbb
in
in
inc
dec
push
sbb
adc
sub
mov
mov
pop
mov
lds
cmp
dec
outs
je
data16
arpl
inc
daa
clc
fistp
popa
push
cwde
sub
inc
ret
mov
dec
adc
dec
push
dec
inc
pop
dec
inc
dec
dec
inc
inc
push
inc
push
mov
cdq
push
push
in
add
push
arpl
imul
test
inc
clc
and
push
outs
fs
or
or
cs
mov
neg
inc
data16
xchg
adc
adc
popa
ins
ins
bound
dec
mov
lahf
ss
dec
sub
add
xor
and
jae
push
imul
sbb
push
and
pushf
push
and
dec
imul
fwait
jne
sub
outs
push
and
push
or
bnd
ins
outs
jne
daa
jmp
cmp
jmp
in
int
sub
movs
sub
loopne
lahf
pop
adc
and
fs
cmp
daa
or
inc
(bad)
fimul
popf
push
add
pusha
sub
loopne
fidiv
data16
sub
sar
mov
(bad)
jmp
inc
inc
add
adc
push
call
test
je
mov
iret
push
add
mov
or
adc
mov
cmp
ret
lea
jl
mov
ja
mov
add
jae
or
ficomp
mov
jl
fsubr
push
into
sar
idiv
or
mov
add
add
aas
or
inc
jb
outs
jb
pop
and
or
into
ret
add
push
and
inc
loope
ins
jno
or
cmp
xchg
and
mov
mov
push
(bad)
jbe
ret
and
push
gs
ret
mov
or
adc
push
inc
int3
je
cmp
jbe
push
jmp
adc
or
jmp
adc
arpl
cld
push
ja
dec
je
push
jae
mov
shr
mov
test
test
or
mov
push
bound
mov
cmp
push
push
out
sahf
int
pop
adc
cmp
ss
dec
and
ds
clc
jl
int
test
enter
mov
sbb
jle
cmp
adc
mov
scas
sub
movs
jle
sub
test
loopne
lock
cmps
stc
push
or
pusha
mov
imul
mov
das
daa
mov
ins
push
inc
not
rcl
adc
into
in
hlt
dec
mov
or
shl
add
push
inc
scas
je
push
push
add
adc
push
push
fs
push
shl
mov
dec
lds
test
xor
lock
cmp
xor
addr16
jle
or
gs
jae
sar
ret
cmps
jp
xlat
imul
pop
lods
sbb
adc
adc
rol
pop
mov
add
dec
jecxz
ins
xchg
sbb
int3
mov
mov
jnp
inc
pop
movs
mov
in
in
popa
dec
test
jg
lods
imul
push
sbb
in
or
push
int
mov
cld
fs
cs
pusha
push
push
push
dec
pop
mov
jnp
test
inc
xchg
xor
sub
cmp
cli
mov
push
mov
cld
pop
push
int3
gs
pusha
and
pop
jbe
push
int3
push
out
call
and
fadd
in
dec
lods
sub
(bad)
mov
mov
push
lock
imul
pop
cmp
jl
addr16
jnp
daa
mov
(bad)
jl
dec
add
out
xor
or
jnp
sbb
push
xchg
das
mov
sub
inc
int
xchg
sti
xlat
mov
adc
popa
jbe
outs
popa
bound
out
retf
add
imul
push
in
fidiv
dec
data16
popa
mov
push
mov
inc
outs
inc
out
stos
adc
js
aas
xchg
popa
mov
pop
push
jo
dec
(bad)
fist
jmp
jge
adc
pop
je
dec
scas
je
cmp
(bad)
js
or
dec
int3
jo
mov
js
jmp
gs
fmul
cmp
sub
das
push
jns
cdq
add
sub
or
add
imul
es
mov
and
fcom
or
sbb
fs
mov
popa
shl
ins
inc
loopne
jne
imul
sub
inc
das
adc
cwde
xor
inc
dec
outs
out
sbb
imul
stc
div
push
dec
sbb
push
push
add
(bad)
cli
lock
outs
shl
push
idiv
dec
add
jecxz
jmp
bound
xor
in
add
out
jecxz
repnz
push
adc
xor
sti
ss
sbb
jno
cmc
enter
clc
mov
nop
push
inc
dec
ja
inc
aam
lods
mov
jne
mov
adc
ins
add
xor
icebp
cmc
inc
shr
adc
movs
pop
or
push
mov
cmp
pop
int
arpl
pop
or
jae
push
retf
arpl
push
movs
adc
add
loope
mov
inc
call
xlat
aaa
jne
inc
jno
mov
cli
ss
mov
out
mov
mov
pop
in
add
fcom
stc
sub
gs
call
into
add
or
data16
jo
into
add
or
inc
sbb
inc
inc
mov
inc
inc
inc
cs
push
js
sub
inc
enter
add
js
loopne
test
sub
push
or
mov
cs
stos
pop
push
nop
push
add
xchg
ret
pop
push
fwait
int3
inc
movs
scas
out
mov
ds
xor
retf
pop
call
pusha
add
and
add
jbe
add
daa
xor
and
push
loopne
pusha
inc
inc
cmp
pusha
xor
or
pop
push
add
mov
mov
or
add
xchg
push
mov
lods
jmp
rol
mov
iret
lds
mov
inc
add
test
push
test
add
jmp
adc
sbb
ins
rol
push
popf
in
inc
pushf
push
add
bound
cmp
adc
mov
add
pop
imul
cmp
push
jmp
push
push
sbb
xor
inc
or
mov
sbb
xor
pop
adc
scas
jno
bndldx
mov
add
add
arpl
imul
repz
push
iret
repz
(bad)
push
xor
mov
cmp
repz
pushf
lods
mov
repz
cld
add
add
jns
out
or
adc
popf
out
sahf
sbb
and
sub
or
add
inc
cdq
les
fsub
push
iret
pop
xor
test
add
sub
push
push
std
mov
popa
jae
jb
ins
or
fidiv
rcl
adc
daa
mov
and
outs
in
daa
push
das
addr16
adc
pop
push
and
or
pop
jl
push
fstp
adc
inc
dec
xor
es
daa
mov
aad
jge
adc
mov
jmp
add
add
lds
int
rol
addr16
int
or
out
sub
sub
loopne
cld
dec
outs
jbe
dec
imul
xor
pop
sti
cmp
adc
add
xchg
fdivr
add
clc
aam
add
or
jb
into
icebp
faddp
sbb
cs
add
cmp
or
and
push
add
nop
pop
inc
outs
outs
movs
popa
test
pusha
stos
retf
mov
int
js
sbb
inc
ror
out
data16
inc
jae
cmp
rol
jl
pop
xchg
outs
cmp
jnp
dec
fisub
xchg
adc
fsub
mov
loope
jmp
lea
mov
xlat
add
pop
aam
pop
push
xlat
cld
fcomp
xchg
jbe
or
shl
push
sub
cld
test
mov
aas
out
retf
push
sub
inc
js
arpl
icebp
lods
jae
sub
push
jo
neg
mov
scas
jnp
or
push
dec
daa
lods
sti
les
sahf
add
fistp
xchg
adc
inc
std
jnp
(bad)
into
dec
cmc
pop
je
xor
xchg
bswap
push
add
mov
push
adc
clc
(bad)
jle
test
in
aam
cmp
push
pop
test
sbb
xor
idiv
popa
xchg
cmp
jg
scas
or
test
ss
adc
loopne
add
clc
push
imul
iret
cld
add
or
sub
add
arpl
add
(bad)
cmps
sub
ds
or
jecxz
mov
popa
cmp
or
das
and
pop
push
mov
enter
in
inc
jns
jnp
stos
or
fs
mov
lea
adc
jecxz
fild
pushf
add
dec
outs
arpl
gs
jne
aaa
in
fld
ror
mov
cmp
rol
sbb
adc
cmp
rol
sbb
sbb
test
or
pop
jo
push
mov
(bad)
or
jb
mov
int3
in
dec
cmp
jmp
int
pop
imul
cmps
outs
jle
or
aaa
or
or
jo
les
pop
or
jne
xchg
call
stos
scas
es
test
and
sbb
jge
aad
sbb
xchg
adc
push
inc
jb
jns
pop
ins
add
jo
or
cs
mov
cdq
add
mov
xchg
add
pop
les
ror
das
mov
test
int
cmp
inc
nop
leave
add
jnp
xor
test
pop
enter
shufps
pop
mov
daa
sbb
mov
jo
and
into
or
cmp
outs
xlat
(bad)
mov
loop
jp
xlat
outs
mov
loope
cdq
lahf
in
pop
adc
xor
lds
dec
out
xlat
pusha
mov
xchg
js
push
pop
xchg
out
add
push
sub
push
xor
sbb
sti
adc
sub
fcom
mov
sub
dec
repz
pop
inc
aas
cwde
fs
push
outs
cmp
cmps
cli
push
dec
je
pop
loopne
dec
inc
sub
scas
add
jne
add
stos
dec
pop
jns
call
ror
outs
push
outs
lock
mov
cvtpi2ps
les
xor
and
inc
cmp
add
xchg
adc
sbb
pop
loop
or
inc
shr
push
pop
push
jb
dec
bound
or
and
stc
and
jo
inc
push
mov
aaa
jo
jmp
adc
and
aaa
mov
mov
pop
mov
out
cmp
inc
push
shl
lds
push
cld
sbb
and
pop
fwait
aaa
sbb
sub
xor
cmps
xor
fadd
inc
jne
arpl
fnstsw
clc
out
sbb
popf
push
push
sub
add
push
scas
fs
or
add
jbe
rol
jno
push
add
mov
add
sbb
ins
ja
jnp
loope
je
mov
push
sbb
lock
xor
sub
mov
xchg
or
cmp
aam
jg
pop
sbb
inc
sbb
nop
xor
shr
lods
and
lock
inc
pop
das
or
add
sahf
and
arpl
cmp
xor
xchg
mov
push
push
mov
xchg
and
je
rol
push
adc
xchg
fdivr
push
dec
dec
and
mov
sub
ret
xchg
adc
mov
cmp
ret
pop
fcomp
add
lods
jae
mov
sub
jge
jno
push
and
fldcw
add
sbb
inc
push
mov
dec
fadd
loopne
test
push
call
jnp
xor
daa
daa
and
mov
xchg
xchg
xchg
movs
arpl
in
movs
fs
fs
out
cmps
ja
xor
in
shl
cmps
inc
jns
jb
js
jmp
test
cmp
sbb
retf
mov
cwde
sbb
push
push
(bad)
sbb
(bad)
es
push
add
pop
not
and
and
xor
ins
leave
dec
fimul
fcom
pop
loope
or
add
add
ret
int3
jno
dec
or
mov
daa
inc
adc
mov
and
add
inc
dec
jecxz
dec
jae
loopne
push
scas
push
adc
add
push
popa
jg
call
push
ror
xor
and
and
fistp
sbb
iret
cmp
shl
pop
or
cmp
push
sub
cs
ins
push
pushf
pop
in
jbe
aad
or
ret
mov
dec
pop
jbe
adc
or
jbe
dec
jp
and
movs
popa
add
and
sub
adc
mov
inc
add
shl
xchg
adc
push
leave
loop
add
mov
fwait
mov
sub
add
popa
arpl
pop
push
adc
inc
xor
popa
and
cmp
push
pop
pushf
pop
imul
into
add
nop
or
cmp
ins
or
sub
bound
loopne
ror
aaa
ror
imul
dec
nop
sbb
(bad)
iret
fisub
inc
add
push
and
sub
push
dec
add
je
mov
xchg
cdq
call
pop
(bad)
add
retf
xchg
add
sub
push
mov
rcl
xor
loop
(bad)
adc
or
or
and
dec
gs
sub
mov
add
mov
and
dec
popa
add
push
inc
pop
sub
dec
add
adc
push
cli
jo
dec
add
aaa
add
(bad)
jae
loope
ins
and
loopne
dec
jmp
es
mov
jbe
sar
clc
cdq
lds
push
push
or
aam
add
sahf
adc
xor
mov
inc
test
pop
ret
jl
inc
sti
ds
pusha
daa
(bad)
cli
(bad)
dec
add
pusha
clc
ins
or
loop
mov
sbb
adc
and
jnp
add
test
clc
hlt
out
or
lock
push
jb
ins
test
jecxz
cmp
cmp
or
or
sbb
inc
mov
mov
mov
fmul
sub
lea
nop
test
ja
cwde
nop
mov
mov
xor
push
push
out
call
fiadd
scas
lods
rcl
repnz
inc
adc
sub
sysenter
xchg
dec
push
test
sbb
fist
int
and
arpl
jns
adc
sub
sbb
xlat
push
add
aam
mov
pop
call
(bad)
push
push
mov
mov
mov
mov
mov
call
pop
pop
push
shl
push
push
mov
mov
mov
pushf
mov
mov
call
mov
dec
test
jl
inc
xor
mov
and
data16
cld
(bad)
cmp
jne
mov
jmp
inc
dec
jne
mov
pop
test
push
mov
add
push
xor
mov
mov
mov
mov
add
sti
add
rcl
lods
cs
mov
sub
call
cmps
mov
jne
or
xchg
sub
and
(bad)
ins
dec
lea
push
mov
mov
push
out
outs
mov
cmps
rcl
and
call
adc
(bad)
jg
mov
lea
icebp
(bad)
jmp
pop
ds
ret
and
cmp
lahf
pop
pusha
loopne
loopne
inc
mov
add
sbb
imul
mov
add
add
push
fwait
mov
add
lock
dec
xor
cmp
push
dec
rcr
mov
(bad)
lock
adc
cmps
pushf
lods
in
cs
push
pop
hlt
shr
push
in
sub
in
sbb
dec
jle
out
loopne
jnp
jle
movs
mov
mov
dec
test
je
lods
mov
jne
clc
xor
mov
(bad)
sbb
lock
mov
rol
xchg
test
jnp
or
jbe
pop
mov
push
xor
or
loope
mov
or
inc
lea
lds
mov
and
mov
loopne
or
mov
push
xor
jle
mov
dec
pop
lahf
fcomip
mov
ret
inc
mov
hlt
aaa
xchg
xor
clc
ja
(bad)
rol
adc
pop
jb
test
je
mov
les
mov
xchg
push
sbb
outs
ins
sub
adc
int3
addr16
add
js
adc
mov
lods
push
xchg
or
fld
inc
sbb
int3
or
xchg
mov
rol
jae
adc
cwde
sbb
mov
adc
dec
jmp
xor
shr
xchg
retf
xchg
scas
std
mov
inc
or
inc
or
jbe
add
sub
mov
xchg
cmps
push
pop
pop
or
sbb
inc
dec
or
or
mov
jne
dec
mov
dec
push
hlt
loope
out
lock
iret
les
js
ds
(bad)
add
jmp
sub
(bad)
mov
in
mov
retf
xchg
cmps
sbb
lds
and
aas
jl
add
lods
dec
sbb
loopne
test
and
jg
aad
jp
je
mov
inc
lea
mov
sti
outs
mov
aam
or
pop
ret
or
or
cmp
push
sbb
je
or
push
mov
push
or
add
idiv
mov
(bad)
in
(bad)
jg
inc
dec
cmp
je
mov
add
mov
xchg
mov
mov
mov
int3
add
xor
hlt
pop
clc
imul
mov
push
in
ret
je
inc
test
jne
rol
add
mov
je
sti
or
or
daa
push
mov
cmp
cs
lock
pop
dec
js
mov
mov
lea
add
and
mov
in
mov
popf
xlat
jp
push
sub
ja
cmp
je
adc
mov
push
ins
test
pusha
add
jmp
push
je
lea
test
mov
push
sar
jp
cmp
je
mov
fnstcw
mov
dec
test
jl
inc
pop
cmp
int3
arpl
mov
das
cmp
jmp
push
inc
dec
jne
mov
fisttp
daa
mov
adc
ins
mov
dec
ffree
and
lds
aad
push
cwde
and
mov
xor
xchg
ret
xchg
cli
lods
jb
pop
xor
aas
iret
jne
mov
mov
push
je
sbb
xchg
jmp
hlt
adc
popf
dec
push
xor
mov
ret
jo
rcr
pop
push
shr
mov
mov
mov
jmp
test
arpl
test
jmp
mov
mov
fs
cmp
test
adc
sbb
xor
xchg
jecxz
and
xchg
or
jle
ffree
jmp
add
and
adc
fdiv
and
out
sub
adc
pop
or
dec
cld
cmp
pushf
add
add
cmp
aas
fisttp
addr16
inc
push
loopne
adc
popa
pop
xchg
dec
jns
fist
pusha
cmp
add
adc
jne
or
add
das
lods
fs
fdivr
imul
shr
jo
add
in
setg
and
xlat
xor
je
cmp
mov
loope
icebp
daa
or
ret
sar
jg
(bad)
push
jmp
(bad)
or
sub
data16
xchg
inc
and
mov
inc
pusha
scas
mov
and
mov
aas
movs
adc
mov
fs
mov
js
iret
jl
sbb
(bad)
xor
pop
popf
out
je
in
js
adc
jo
add
mov
push
loopne
xchg
or
fist
popa
dec
outs
lahf
and
inc
ror
and
pop
xlat
lahf
ja
or
push
jne
fadd
cli
(bad)
mov
stos
adc
dec
mov
js
mov
ret
les
cmp
fisttp
lahf
dec
fdivr
aam
lods
push
push
je
push
cs
fimul
pop
adc
jg
fdivr
mov
fdivr
mov
cmp
inc
adc
into
call
dec
cmp
add
shl
xchg
out
add
cmp
jb
jl
je
scas
xor
dec
enter
rol
sub
mov
mov
ret
mov
(bad)
fcmovne
dec
(bad)
aaa
icebp
div
adc
xchg
xor
dec
sub
push
add
mov
dec
mov
imul
stos
popf
ficomp
adc
fldcw
jnp
xlat
or
inc
add
imul
repz
add
inc
sbb
push
out
sbb
fcom
mov
dec
cmp
out
sbb
test
adc
aaa
std
(bad)
je
cmp
lock
mov
fcom
cld
xor
add
and
mov
or
jg
inc
je
jmp
mov
mov
dec
adc
mov
das
pop
mov
sbb
fcom
mov
inc
test
lods
sbb
scas
cmp
jg
lea
jo
call
jnp
adc
and
sub
cmp
fwait
pop
pusha
mov
aam
xchg
aaa
add
dec
pop
xchg
in
adc
add
sub
mov
fwait
mov
cld
cmp
lds
mov
mov
clc
hlt
xor
xor
push
jnp
int3
ins
in
in
xchg
or
mov
cld
adc
add
mov
mov
sbb
sahf
scas
mov
sbb
bound
mov
pop
jecxz
jbe
cs
push
aaa
(bad)
ret
xor
inc
jmp
jnp
inc
inc
call
call
mov
push
adc
inc
pop
out
movs
push
inc
dec
jne
rcr
dec
clc
mov
cmp
pop
int3
std
fdiv
push
mov
cmp
jmp
jle
jmp
test
sbb
inc
inc
xchg
inc
sete
or
inc
mov
push
jge
ret
jmp
jo
inc
gs
sbb
dec
or
mov
scas
lock
mov
xor
fcom
push
nop
mov
jo
jl
xchg
push
mov
push
jle
pop
lock
lock
cld
inc
jns
aam
outs
jb
and
xor
test
mul
and
dec
data16
scas
adc
cmps
add
or
cmp
cdq
std
jmp
adc
mov
arpl
ins
push
aad
in
sbb
sbb
lock
mov
mov
push
push
daa
sbb
inc
mov
push
data16
imul
pushf
fiadd
test
fcomp
mov
and
mov
xchg
adc
loope
(bad)
adc
push
jb
arpl
loopne
cmp
arpl
pop
lds
inc
test
and
test
sti
or
or
pop
addr16
mov
push
or
cs
cmp
ror
lods
dec
sbb
and
sti
add
push
inc
retf
or
inc
(bad)
and
adc
xor
adc
sbb
inc
imul
call
test
pop
cmc
mov
retf
out
aam
jp
push
pop
ret
xor
xor
loopne
pop
hlt
or
cmp
call
je
add
xchg
sbb
mov
cmp
test
jmp
pop
push
or
add
or
fild
push
adc
loop
stos
push
add
in
in
cmp
inc
loopne
ds
loopne
mov
sub
xor
sbb
sub
inc
cld
rol
and
inc
sti
(bad)
shl
call
movs
xchg
sbb
xor
pop
mov
data16
aam
mov
rcl
jb
jae
(bad)
cwde
call
(bad)
fist
or
shl
dec
pushf
inc
sub
outs
mov
jmp
adc
push
cmp
popf
xor
nop
add
dec
push
pop
xor
mov
sub
xor
mov
mov
or
(bad)
cli
inc
push
pusha
ja
add
mov
pusha
jae
mov
stos
shl
outs
mov
rol
push
sub
pop
pop
nop
sub
add
mov
test
retf
add
clc
test
mov
sahf
jb
jg
mov
loope
push
outs
les
lahf
sbb
addr16
sbb
ror
sub
cmc
mov
bound
jnp
test
or
cmp
add
inc
outs
sbb
or
(bad)
or
ins
psubsb
sbb
cmp
sbb
or
cmps
and
fwait
mov
add
neg
inc
scas
ins
loopne
enter
hlt
call
xchg
sub
or
fstp
xor
and
cmp
dec
sar
inc
or
jne
cmp
loopne
adc
mov
mov
ret
sub
inc
aaa
pusha
not
or
jb
add
lock
enter
clc
out
mov
(bad)
out
arpl
retf
rol
cmp
add
cmc
push
mov
add
xor
test
sbb
rol
and
ror
add
adc
jbe
pop
jo
mov
adc
jle
inc
in
das
mov
push
cmp
adc
adc
mov
or
xchg
adc
call
in
loope
(bad)
cmp
je
popa
jmp
pop
cmp
sub
inc
pusha
mov
sbb
cld
mov
push
pop
icebp
and
add
ret
push
pushf
lahf
mov
pop
(bad)
mov
inc
jl
sub
jb
dec
je
jmp
dec
and
enter
add
sbb
add
fucomip
pop
xor
mov
push
pop
inc
dec
cmps
inc
in
das
sub
or
xchg
pop
xchg
stos
pusha
fiadd
inc
ins
stos
je
cmp
jno
inc
int
loop
or
dec
out
leave
jecxz
(bad)
aam
cmp
adc
jg
sub
mov
add
retf
mov
sub
inc
data16
fmul
pop
addr16
mov
add
adc
jo
sub
cmp
dec
mov
in
xor
push
pushf
jmp
(bad)
and
add
in
and
popf
or
das
clc
mov
adc
fwait
sbb
dec
mov
mov
inc
add
sub
jmp
hlt
fadd
add
das
retf
mov
into
mov
push
(bad)
ja
in
pop
daa
mov
sub
pop
dec
lock
hlt
shr
xor
add
mov
sar
aaa
cmp
jge
add
sbb
mov
and
lock
lock
shl
ficom
inc
mov
mov
ss
mov
push
mov
mov
imul
loop
and
sbb
ficom
lock
sub
sbb
retf
jmp
sub
stos
stc
mov
mov
sub
lods
add
xor
dec
xor
dec
push
and
(bad)
fld
pusha
ror
push
aam
add
sub
jg
mov
add
iret
sbb
mov
fcomi
or
ficomp
xor
and
lock
adc
pop
sbb
cmp
jb
inc
pop
(bad)
xor
mov
test
mov
or
or
push
test
push
jb
enter
dec
xor
add
pop
add
inc
push
add
xor
inc
xchg
fdivr
push
out
jne
repnz
inc
test
and
cmp
cmp
inc
xchg
and
lds
into
pushf
push
ds
enter
add
dec
mov
adc
xchg
rcr
pushf
imul
jo
fdiv
and
imul
jb
add
xor
test
fimul
cs
mov
pop
test
into
sbb
pop
jbe
sbb
cdq
(bad)
inc
test
xor
dec
mov
xchg
out
inc
or
inc
pop
or
lock
sbb
adc
sbb
pop
sbb
clc
lea
mov
add
sbb
fld
int
call
(bad)
das
cmp
or
shl
xchg
add
dec
sbb
sbb
aaa
sbb
cdq
sbb
ss
inc
lods
add
fld
out
adc
loopne
and
clc
inc
mov
mov
(bad)
call
enter
pop
movs
xchg
ds
mov
jo
xlat
mov
or
jecxz
mov
jmp
lock
sub
data16
pop
sbb
out
mov
stos
movs
jl
adc
jo
jo
lds
adc
(bad)
adc
into
cmps
push
enter
lea
inc
adc
fcom
push
hlt
sbb
cmp
js
loop
xor
popa
adc
dec
mov
jne
aas
in
cmp
sbb
adc
push
mov
sti
call
fdiv
push
sbb
hlt
(bad)
cmp
cmp
adc
(bad)
retf
cmp
push
adc
inc
ja
test
or
xor
push
pop
push
xor
dec
test
loope
or
(bad)
jae
dec
loopne
and
ja
pusha
inc
jnp
xor
cmp
pop
or
and
inc
lea
je
cmp
rol
(bad)
xor
lock
cmp
rcl
bound
iret
aas
push
ins
ret
arpl
adc
xchg
or
lock
mov
(bad)
dec
pop
pop
fchs
test
dec
loop
xchg
ret
pop
inc
pop
push
jo
push
test
push
js
jns
jmp
jo
xor
fbld
pusha
je
and
sbb
pusha
pop
cmp
int3
push
jne
leave
jbe
into
sub
add
imul
pop
push
cmp
int
jns
mov
daa
sbb
jle
mov
out
loope
or
cmp
sub
pop
int
xchg
in
test
inc
ror
inc
cmp
mov
cmc
xor
push
cmp
mov
xchg
add
ficom
dec
jg
int3
ds
inc
and
ficom
push
mov
mov
mov
mov
sti
mov
and
xchg
in
retf
cwde
retf
mov
fcmovb
cmp
iret
hlt
dec
or
iret
(bad)
push
jo
or
call
mov
add
int3
sub
add
popa
cmp
dec
scas
push
sbb
jle
idiv
lea
dec
cmp
jg
rol
adc
call
test
jge
mov
call
dec
mov
test
push
add
push
add
dec
clc
jmp
ret
xor
ficom
add
retf
inc
call
retf
cs
and
push
or
add
mov
jmp
or
call
pop
lock
jg
mov
sub
shr
add
adc
mov
call
adc
or
into
std
xlat
(bad)
jge
lea
jmp
popa
sbb
cwde
xor
jle
push
lods
sbb
mov
adc
aaa
aad
inc
xor
dec
sbb
push
mov
dec
xchg
je
sub
jle
aas
daa
shr
add
rcr
mov
mov
add
xchg
test
mov
cs
fldcw
jg
cmp
jl
push
clc
lods
fild
je
cmp
mov
repnz
pop
loopne
cs
push
outs
mov
dec
cmp
cmp
inc
add
fimul
ins
loopne
dec
dec
mov
shl
or
mov
pop
shl
or
pop
aam
sub
cld
aaa
add
ins
jo
jb
jae
outs
cmp
dec
rol
cmp
add
gs
jo
jg
mov
inc
gs
jne
je
lock
push
mov
ret
in
or
pop
mov
jmp
pop
faddp
addr16
push
sub
leave
rol
fstp
sar
call
cs
mov
je
clc
mov
add
xchg
mov
fistp
jae
add
sar
hlt
push
(bad)
mov
retf
sub
add
xor
push
mov
in
test
or
das
add
add
gs
data16
lods
mov
sti
ins
add
adc
add
bound
nop
mov
jne
(bad)
pcmpgtd
push
or
cwde
fst
or
inc
pusha
pop
jo
cwde
pusha
pop
push
jp
adc
popa
setg
fbstp
add
ds
or
push
imul
sbb
nop
jmp
pop
mov
and
sub
imul
xchg
ud0
(bad)
xchg
pusha
xor
push
popa
arpl
fisub
and
xor
adc
sbb
push
ins
gs
imul
retf
lock
sbb
adc
pop
add
adc
out
popf
clc
int3
gs
push
jns
xor
inc
aaa
test
xor
imul
add
sahf
adc
push
xchg
es
jne
(bad)
sub
add
push
mov
add
sub
sbb
mov
adc
mov
pop
jge
adc
sub
push
add
xor
xor
inc
imul
repz
dec
arpl
ins
push
mov
js
out
push
test
mov
add
mov
push
push
xor
aaa
push
push
push
jnp
xor
add
loop
cmc
pop
dec
jae
xor
push
mov
ret
js
pusha
add
sbb
mov
cmc
pop
cmp
dec
mov
push
cmp
push
push
push
outs
das
test
sbb
outs
loop
xor
jl
pop
ja
add
and
or
push
loopne
sbb
lock
and
out
push
dec
push
xor
mov
inc
xchg
fs
cmp
jo
or
ins
jae
shl
or
add
arpl
or
inc
jmp
nop
fsubr
cmp
imul
add
cmp
dec
movups
dec
inc
inc
imul
aas
ins
cmc
jne
arpl
add
mov
test
dec
mov
inc
sti
push
icebp
fucomi
xchg
xorps
inc
imul
cld
add
adc
cwde
push
add
jnp
ja
inc
and
nop
push
loope
scas
loopne
pop
pop
mov
cmp
and
out
ss
mov
fdivr
jmp
add
or
ret
add
or
ins
gs
push
into
adc
xor
adc
jae
xchg
lea
and
and
dec
or
add
add
pop
dec
jb
mov
xor
sbb
jg
jg
jb
out
add
add
popa
cld
inc
jb
fistp
inc
fst
sbb
cmps
push
push
(bad)
mov
inc
fs
fnstsw
ds
xchg
add
or
push
push
aaa
loopne
retf
push
test
mov
mov
popf
jbe
mov
cmc
and
or
cmp
jge
xchg
push
push
jne
je
jmp
inc
hlt
inc
inc
jb
jae
add
repnz
dec
or
inc
or
fimul
jbe
dec
adc
sub
dec
and
add
nop
mov
lock
fwait
pop
ja
shl
push
push
movs
cmp
push
dec
jnp
fucomp
inc
ret
cmp
add
js
inc
add
cmps
fisub
adc
and
xchg
out
or
outs
xchg
add
stc
mov
add
jb
aas
dec
outs
aas
xor
(bad)
loop
jmp
outs
jo
xchg
scas
mov
add
pop
popf
or
addr16
jnp
sbb
push
fsubr
pusha
sub
xor
sub
and
mov
push
test
shl
adc
cmp
jns
aad
jbe
xor
outs
imul
inc
inc
cmp
push
add
push
dec
push
in
loopne
jb
jnp
div
fisttp
mov
loopne
popa
or
nop
adc
test
push
shr
xor
jne
outs
or
out
lds
adc
pop
cwde
in
fmul
push
sbb
sbb
fsub
ficom
dec
pushf
loopne
mov
xchg
js
add
adc
sbb
sbb
addr16
push
inc
andps
cmovne
jb
pop
pop
lock
aad
push
push
jo
dec
mov
or
xor
jge
or
data16
outs
ja
adc
gs
pop
scas
xlat
rol
pmovmskb
mov
sbb
push
test
pushf
pop
shl
pop
push
outs
std
and
add
inc
fsubr
scas
push
fcomp
outs
je
cmp
dec
dec
aaa
inc
xor
mov
js
mov
add
jo
cs
fmul
outs
sub
push
mov
or
cmp
cmps
retf
popa
in
movs
inc
sbb
add
rcr
(bad)
pusha
push
jbe
test
dec
popa
js
and
loopne
ud0
out
mov
inc
ins
add
shr
jmp
push
imul
push
dec
lods
cs
dec
add
stc
add
adc
(bad)
in
cmp
setge
jmp
xor
loopne
aam
cmps
mov
mov
dec
inc
dec
add
and
idiv
inc
(bad)
adc
cmp
jl
sub
inc
push
call
cli
sbb
ret
cmps
add
or
scas
sbb
out
push
(bad)
pop
mov
push
adc
push
sub
mov
inc
es
fild
dec
cmp
stos
xor
or
ja
inc
dec
jne
out
sbb
dec
xor
push
add
pop
outs
or
push
xor
mov
ror
xor
(bad)
lahf
out
fmul
dec
hlt
push
sub
lea
mov
and
sub
cmp
xor
je
jmp
nop
iret
and
lock
ficomp
mov
mov
nop
fcomp
mov
sbb
or
iret
sub
lea
(bad)
jmp
sbb
es
fisubr
push
and
fsub
shl
jb
add
jp
loope
loope
cmp
(bad)
adc
movq
sbb
mov
sub
fucomi
(bad)
jmp
xchg
or
inc
add
out
(bad)
push
add
mov
ror
sub
cmp
add
mov
cmp
jge
ins
mov
mov
test
add
jo
or
(bad)
or
mov
aas
test
dec
pusha
scas
cmp
sub
xchg
sbb
(bad)
jmp
xchg
adc
cmp
jge
xor
pop
das
push
push
je
lock
push
nop
clc
pushf
or
cmp
xchg
sti
push
movsx
enter
add
adc
add
stos
fsubp
add
add
popa
add
test
lods
push
push
sbb
mov
push
(bad)
aaa
mov
mul
mov
pop
das
out
(bad)
movs
call
test
mov
jmp
add
push
push
and
sbb
test
xor
mov
xor
je
mov
jmp
fcomp
push
jnp
or
add
fcomp
add
ret
and
arpl
les
mov
pop
sbb
xor
das
push
and
shrd
cs
and
mov
mov
xchg
cwde
stos
mov
les
mov
je
retf
push
mov
inc
push
stos
or
adc
daa
inc
rol
add
sahf
call
ja
adc
cmp
bound
data16
lock
add
push
je
adc
arpl
ds
mov
or
dec
mov
idiv
push
test
and
pop
dec
sub
mul
jge
jnp
mov
ins
and
je
sub
adc
push
or
and
add
adc
adc
jle
push
dec
mov
push
test
sbb
push
test
lahf
adc
sbb
and
adc
cmp
call
jle
adc
leave
test
leave
(bad)
mov
test
or
je
pop
inc
pusha
push
or
in
icebp
dec
popa
push
movs
pop
jp
mov
push
or
mov
mov
std
rcl
cld
in
sub
inc
add
dec
fistp
mov
or
pop
retf
(bad)
popa
add
fldcw
or
in
adc
inc
popa
dec
icebp
aad
push
push
pop
inc
cmps
lahf
fs
rcr
xor
jmp
cmp
jecxz
mov
cmp
push
cmp
(bad)
loope
mov
push
pop
imul
push
lock
lea
jp
sbb
mov
or
outs
adc
adc
ins
mov
lods
movs
sub
rol
mul
jle
jno
pcmpeqw
or
jbe
scas
jle
mov
jmp
add
rol
sub
add
sub
adc
mov
mov
test
btc
in
adc
sbb
cmps
mov
add
cs
push
sub
add
aaa
lock
or
mov
sahf
add
push
xor
fistp
ss
adc
mov
scas
push
push
and
or
or
push
les
test
xchg
movq
cmp
fiadd
in
xchg
mov
adc
or
imul
xchg
into
cld
popa
fadd
adc
jnp
jb
dec
add
pop
pop
sar
pop
lea
or
jmp
mov
or
push
push
(bad)
shl
clc
dec
sub
and
ror
fisttp
push
and
add
mov
test
call
scas
add
and
fstp
sub
xor
inc
adc
and
das
xchg
lea
mov
outs
stos
lock
adc
mov
ja
ret
cmp
out
nop
push
sub
mov
ja
mov
or
out
addr16
mov
sub
xchg
sbb
mov
xor
push
shl
push
push
test
loope
push
enter
push
sbb
mov
push
add
push
sahf
jmp
inc
add
call
pop
jnp
int
cmp
pop
jne
cmp
xchg
cmp
jo
push
sbb
inc
adc
mov
push
fisubr
mov
pop
push
mov
mov
xor
in
iret
mov
sub
push
inc
fdivr
lock
scas
mov
add
test
shl
punpckldq
loopne
push
cmps
loopne
or
jecxz
mov
add
pop
imul
(bad)
ins
fadd
faddp
cmp
popa
pop
sar
cmp
fld
rcl
sti
mov
(bad)
iret
fdivrp
int
loope
inc
inc
and
clc
jle
sbb
sub
add
push
leave
cmp
cmp
repnz
xchg
test
addr16
push
pop
add
pop
cmp
sbb
loopne
bound
mov
xor
push
jae
push
xchg
and
imul
loope
dec
out
adc
cmp
jne
cmp
sete
aas
ins
test
call
jge
add
mov
mov
cmp
xchg
sbb
pop
aas
sub
jp
push
mov
push
jb
pusha
jmp
pop
test
add
nop
sbb
sub
dec
aas
cmp
mov
push
mov
cwde
sub
les
xor
sbb
fild
fmul
fstp
fld
or
sahf
jae
dec
sub
inc
dec
enter
push
sbb
ret
fisttp
sub
sbb
pop
ret
cmps
inc
sbb
pop
pop
mov
xor
ins
fcomp
rcl
mov
push
neg
leave
jecxz
icebp
mov
adc
loope
push
fsub
cdq
sub
or
xchg
popf
mov
ficom
mov
in
add
sbb
in
inc
push
in
ret
dec
xor
xlat
out
(bad)
or
out
(bad)
std
mov
pop
or
ja
pop
fadd
jbe
inc
mov
lods
adc
fisub
push
jb
sbb
jbe
xchg
(bad)
gs
test
rcr
retf
lds
cmps
retf
je
cld
cmp
(bad)
cs
jne
push
sbb
inc
gs
xchg
pushf
out
jne
sub
xchg
aaa
sahf
aaa
jbe
pop
je
les
mov
xor
ja
retf
jge
std
mov
mov
in
push
pusha
jmp
movs
outs
inc
test
mov
or
aaa
outs
sub
aam
push
dec
dec
movs
loopne
ja
sub
and
jno
cmp
push
or
mov
nop
adc
xor
loopne
inc
xchg
test
push
pop
sbb
pop
adc
push
test
je
jo
dec
std
jmp
add
mov
inc
shr
cmp
sbb
adc
mov
jbe
push
add
mov
dec
mov
cmps
inc
adc
push
lock
xor
pop
inc
mov
inc
mov
adc
movs
mov
addr16
fwait
sub
fadd
sbb
mov
mov
mov
or
mov
jae
rcr
ins
(bad)
les
inc
rcl
(bad)
ins
cmps
cmp
push
mov
mov
adc
ins
xor
mov
or
push
in
add
inc
aaa
mov
or
mov
enter
sbb
mov
inc
pusha
idiv
jg
ret
sub
mov
imul
ret
mov
jmp
add
and
add
add
or
in
or
push
sbb
sbb
ja
out
add
xor
xor
cmp
pop
push
push
xor
jmp
iret
call
push
push
lock
int3
(bad)
(bad)
clc
scas
fisttp
(bad)
sbb
test
jne
pushf
pop
lock
es
in
(bad)
mov
push
mov
mov
jmp
add
mov
movaps
js
shl
es
jmp
lock
xor
push
into
adc
sbb
jae
add
cmpxchg
and
and
std
mov
xor
fsubp
mov
nop
or
jmp
push
mov
loope
adc
test
mov
fwait
int3
pop
mov
mov
neg
add
push
fsubr
push
call
les
ja
jge
lods
add
add
add
add
adc
outs
arpl
mov
jbe
dec
lods
jmp
fs
pop
sub
add
aam
add
add
push
je
ins
sar
pop
cld
test
fs
stos
xor
adc
ja
jl
aaa
inc
js
gs
xlat
push
pusha
mov
pop
xor
loopne
rol
push
out
jns
jmp
mov
je
je
outs
fs
push
or
popa
jb
pop
loopne
fdiv
push
inc
ins
bound
sbb
mov
ss
aad
js
aaa
or
sahf
sbb
dec
je
xchg
cmp
pop
out
movs
push
sar
push
xor
cmp
pop
fldenv
ret
fld
or
in
push
int3
inc
dec
leave
enter
fdivr
jmp
out
add
movd
hlt
add
es
xor
(bad)
aad
mov
or
gs
add
test
dec
data16
cmp
and
movd
add
sbb
data16
push
or
sahf
pushf
or
pusha
add
inc
dec
mov
or
shr
scas
outs
jae
sub
or
add
int3
mov
mov
mov
push
outs
push
outs
imul
int
(bad)
fwait
mov
mov
rol
mov
je
mov
(bad)
scas
xchg
popa
test
inc
add
or
inc
imul
and
repz
jg
repz
repz
bound
gs
sbb
sub
cmp
(bad)
rcr
lds
pop
add
cmp
inc
cwde
ds
jae
xchg
stc
out
inc
adc
or
sub
bndstx
mov
mov
mov
adc
mov
pop
imul
pop
push
ja
inc
xchg
inc
mov
loop
and
push
popf
dec
(bad)
adc
add
js
fld
dec
inc
cmp
sub
inc
xchg
mov
or
mov
push
add
cmc
push
jae
lods
sub
or
dec
cld
pop
sbb
cmp
jne
dec
call
nop
retf
add
lea
aaa
aaa
lock
mov
movzx
iret
sbb
or
xchg
test
mul
data16
adc
inc
movs
cwde
and
ins
inc
sub
dec
mov
add
mov
lock
cdq
pop
cs
shr
or
mov
lods
ret
jno
out
repnz
mov
mov
mov
test
jge
pop
mov
movs
cmp
test
test
int
pop
add
test
popf
cwde
repz
and
loopne
sbb
inc
imul
les
mov
push
(bad)
out
call
add
push
xor
int
inc
in
add
cmp
pop
push
mov
mov
test
sbb
mov
dec
in
adc
push
adc
sbb
and
dec
fsub
inc
loop
dec
test
add
pop
push
data16
dec
or
push
sbb
mov
test
js
fidivr
inc
xchg
dec
mov
push
sub
imul
not
sub
sub
fld
fmul
mov
sub
adc
xor
cmc
inc
jnp
cvtps2pd
hlt
jmp
and
je
rcl
ins
adc
mov
add
dec
fiadd
cmps
or
aaa
sti
cld
scas
cdq
push
cmps
cmp
mov
mov
outs
mov
add
mov
xor
push
add
xchg
or
stos
cmp
not
cmp
cmp
fwait
and
loope
jge
jae
mov
call
loopne
fcompp
xchg
nop
xchg
and
push
sahf
pusha
xchg
cmp
and
push
lea
push
lock
cmp
mov
adc
enter
xor
jecxz
mov
xor
sbb
fadd
aaa
jmp
stos
xchg
test
sbb
push
cmp
je
loopne
loope
sti
rcl
inc
out
call
xor
rol
mov
push
arpl
inc
cwde
push
aas
jnp
test
(bad)
call
xchg
mov
cmp
nop
jmp
pop
inc
jne
(bad)
mov
sbb
sbb
push
dec
out
sub
mov
push
xor
ja
or
mov
and
jne
push
xchg
cmp
xchg
xor
or
repnz
dec
hlt
cs
shl
jae
xor
sbb
mov
dec
test
sbb
mov
int
sub
xor
dec
fmul
push
loopne
nop
dec
sbb
lahf
mov
aam
mov
cli
scas
fsubp
inc
shr
xor
int3
cs
in
pop
call
or
repz
les
neg
ins
movs
and
push
cmps
shr
xlat
xchg
sbb
push
into
push
xchg
ret
xor
push
pop
(bad)
fst
shl
mov
jo
dec
mov
repnz
or
sbb
sbb
mov
call
mov
test
cs
push
sub
pop
lea
sbb
mov
aaa
and
cs
popa
imul
add
mov
rol
adc
pusha
adc
inc
int
das
cmp
mov
cvttps2pi
add
pop
out
dec
add
inc
push
je
inc
push
push
pusha
sub
pop
add
inc
inc
outs
sub
loopne
hlt
or
imul
xlat
jg
and
je
push
fist
in
mov
test
in
or
daa
das
xor
jge
sbb
lods
ret
jg
pop
or
push
jae
pop
inc
adc
pop
sbb
neg
mov
jnp
or
es
das
lds
dec
push
and
adc
add
mov
push
push
mov
or
adc
es
or
idiv
inc
jb
popa
jns
lock
cwde
jmp
popa
arpl
test
xchg
pushf
rol
clc
add
pop
gs
aam
inc
dec
mov
stos
(bad)
cli
push
dec
pop
mov
sbb
add
push
inc
jb
ficomp
sub
in
mov
or
jnp
pop
(bad)
pop
add
dec
pop
inc
push
je
outs
jns
mov
adc
daa
pop
(bad)
mov
sbb
outs
mov
outs
pusha
outs
push
inc
push
push
popa
imul
fs
pusha
mov
ds
sbb
pop
pop
add
mov
or
add
pusha
lea
push
or
std
jbe
scas
mov
add
or
inc
pop
fmul
(bad)
popa
jmp
push
mov
adc
jg
push
and
sub
adc
xchg
out
cmp
repnz
(bad)
sar
inc
adc
add
imul
loopne
push
outs
jne
(bad)
sub
xor
sar
mov
outs
jbe
dec
gs
cmp
jp
les
mov
outs
outs
jae
mov
gs
jb
arpl
call
outs
ins
ins
arpl
inc
je
sub
maxps
sub
pop
inc
jne
fwait
sbb
nop
push
add
rcl
ja
push
addr16
ins
pop
scas
inc
mov
jle
push
cmps
adc
pop
sar
push
les
cwde
or
sbb
pop
inc
jno
pushf
retf
test
push
push
or
loopne
push
iret
pop
xor
imul
stos
add
cmp
loopne
ret
mov
xor
or
popa
xchg
aas
cmps
pop
out
out
adc
inc
ds
xchg
popa
out
mov
ins
stc
push
dec
pop
or
or
jo
iret
sbb
or
jae
add
lock
add
daa
out
cmp
pusha
add
push
or
push
or
ja
(bad)
dec
mov
pop
pop
adc
jne
mov
cmps
es
outs
ins
jo
pop
and
pop
add
enter
sbb
add
jne
je
fld
lea
mov
or
push
jecxz
outs
or
test
rcr
mov
lock
sahf
outs
jbe
fmul
push
sub
add
add
hlt
jns
push
push
ficom
xchg
loopne
dec
sbb
adc
adc
cs
fwait
mov
xor
jae
lods
inc
push
scas
es
or
dec
adc
xchg
or
add
inc
cmc
(bad)
mov
(bad)
(bad)
outs
or
cmp
jo
push
(bad)
nop
push
add
pop
cwde
xsha256
cmps
adc
adc
jmp
lock
xchg
dec
sbb
js
shr
sub
je
add
push
in
fstp
mov
aas
pop
lea
or
cmp
dec
adc
dec
sbb
pop
push
lds
shr
push
dec
sub
jo
out
pop
dec
pop
push
imul
add
loope
dec
push
mov
dec
push
nop
push
mov
dec
loope
loopne
sar
mov
or
push
loopne
rcl
rcl
cs
add
rol
inc
adc
nop
dec
inc
sub
or
jo
pop
das
dec
or
adc
mov
ret
pop
cmp
xlat
xor
push
sub
add
in
es
das
jae
jb
jle
mov
pushf
(bad)
inc
xchg
frstor
jmp
inc
bound
jbe
sbb
jl
and
mov
sbb
push
dec
sbb
sbb
lods
inc
jmp
(bad)
jo
cli
xor
sti
or
sub
ins
or
inc
outs
add
inc
jns
lds
cmp
loop
outs
push
movs
(bad)
ror
cmp
sbb
sbb
mov
ins
das
mov
into
pusha
dec
and
push
fisubr
jge
mov
jo
clc
das
sar
pop
pusha
mov
cmp
loop
pop
sbb
pusha
dec
jne
pop
stos
add
push
adc
das
cld
pusha
je
lock
sub
cmp
std
or
rcl
add
xchg
jmp
enter
icebp
xchg
sbb
cmp
push
push
lahf
xor
adc
add
mov
xor
jge
cdq
jg
mov
mov
add
sbb
das
cli
push
mov
cmps
cmps
movs
es
or
adc
jne
sbb
gs
xchg
push
sbb
lds
jmp
mov
out
add
in
(bad)
xlat
cmp
pop
pop
das
jbe
test
pop
das
loopne
jo
mov
(bad)
sbb
jmp
push
(bad)
aad
push
sbb
add
and
cmp
stos
lock
jne
adc
arpl
jbe
dec
ja
push
mov
pop
jbe
push
jge
xchg
ja
shl
push
mov
ja
mov
and
inc
popa
add
loop
pop
pop
adc
inc
cmp
test
mov
in
adc
pop
aaa
and
inc
lods
or
add
xchg
mov
call
xchg
jecxz
test
inc
and
shl
or
scas
push
or
jns
mov
adc
add
loope
pop
xor
lahf
adc
xchg
mov
aaa
fs
in
mov
push
and
dec
das
imul
cmp
aaa
(bad)
movs
test
fld
xabort
add
(bad)
fsub
dec
daa
and
mov
xor
dec
or
shl
pusha
repnz
js
scas
jmp
call
sub
or
test
dec
adc
sub
pop
cmps
add
and
repz
add
inc
cmps
repz
xchg
pushf
lods
retf
xlat
dec
sbb
ins
and
es
jmp
xlat
test
pop
and
lahf
xlat
fcom
lock
adc
scas
add
xlat
push
stos
xor
xor
jne
add
popf
sbb
aam
pop
jns
adc
cmps
pop
cmp
add
and
or
push
mov
xchg
push
push
into
mov
push
jno
das
(bad)
adc
mov
out
mov
in
in
push
and
push
push
sub
inc
push
ret
lods
mov
adc
aad
push
repnz
shl
out
xor
push
cmp
loopne
mov
mov
jmp
imul
ret
imul
push
inc
inc
jb
ja
push
xor
test
dec
outs
xchg
add
arpl
call
cs
xor
mov
(bad)
mov
xor
xor
test
push
mov
adc
test
lea
push
xchg
nop
bswap
adc
and
add
xor
push
out
sysexit
js
jns
jb
(bad)
push
sub
sar
(bad)
retf
push
std
pop
or
mov
pop
mov
inc
and
add
sbb
or
pop
or
inc
inc
popa
cmp
dec
call
inc
sbb
mov
jno
add
lods
and
clc
add
mov
ret
jmp
outs
or
push
popa
xor
or
lea
sbb
sub
fwait
add
cmp
and
inc
fs
mov
push
or
push
push
rcl
jmp
or
xor
jl
xor
push
ds
sbb
inc
lods
or
add
add
fadd
retf
outs
jge
push
ds
daa
pop
loope
and
cmp
adc
add
mov
lods
add
jmp
push
and
jb
(bad)
arpl
bound
add
or
xchg
mov
and
sub
dec
fld
pop
sub
sbb
dec
jb
sbb
in
lea
inc
icebp
cmp
je
or
ins
cmp
dec
pop
mov
ret
cmp
cwde
add
call
out
or
pusha
xor
mov
shr
(bad)
sti
pop
rcl
xor
xor
dec
mov
pop
in
std
mov
push
nop
addr16
sbb
pop
add
in
into
out
xor
push
inc
mov
aaa
sbb
test
add
mov
inc
inc
scas
aad
adc
dec
test
or
inc
sbb
fs
push
push
out
add
jae
loope
jge
jo
push
and
mov
inc
or
aaa
adc
inc
dec
jge
and
xchg
pop
sub
fild
hlt
cs
push
sub
call
ins
cmps
fnstenv
movs
push
add
lock
add
adc
inc
dec
ja
jae
imul
jb
aam
daa
fucom
jmp
dec
sahf
add
add
call
inc
lock
sbb
inc
ins
adc
lds
add
xchg
pop
loope
inc
jnp
add
mov
xor
scas
and
mov
lahf
and
push
jns
mov
dec
movs
lea
push
test
je
add
call
mov
idiv
(bad)
fimul
(bad)
sbb
push
movzx
add
cmp
dec
ror
outs
out
(bad)
inc
add
leave
mov
mov
push
push
add
nop
fisubr
(bad)
jbe
fs
jo
mov
(bad)
pop
pop
ret
in
push
add
push
(bad)
jbe
addr16
aam
cmp
cmp
add
shl
fiadd
das
sub
movs
push
xor
mov
xchg
mov
mov
sahf
mov
or
mov
mov
add
jnp
add
hlt
cmp
fisttp
and
inc
lock
jg
mov
outs
aad
and
outs
mov
and
add
mov
cmp
adc
repnz
xchg
dec
ins
and
cmp
jle
iret
cdq
les
cs
mov
lock
jle
or
out
push
repnz
(bad)
(bad)
(bad)
jb
mov
add
add
xchg
shl
push
fistp
inc
(bad)
mov
pushf
xchg
sub
or
sub
ret
add
pusha
pop
pop
ret
mov
mov
icebp
not
scas
adc
outs
and
inc
sbb
mov
mov
add
xor
sbb
inc
add
fstp
retf
imul
add
loope
or
fimul
pop
es
or
or
jns
shl
xor
jb
loopne
mov
xchg
rcl
xor
push
mov
callw
mov
or
or
movzx
dec
cmp
adc
imul
idiv
lock
jne
test
(bad)
clc
jmp
lea
sti
sub
cs
pop
push
inc
enter
mov
dec
inc
pop
inc
sbb
adc
(bad)
adc
adc
jg
or
push
mov
ret
jmp
sti
pusha
icebp
(bad)
jmp
push
clc
loop
in
ret
(bad)
aad
in
pop
mov
sbb
leave
cmp
mul
ins
jne
cwde
enter
xchg
outs
add
xchg
sbb
jbe
mov
(bad)
inc
fs
fstp
fwait
imul
sbb
jo
enter
jae
and
sar
ret
add
ret
hlt
fld
rol
add
cdq
push
inc
push
repz
and
mul
xchg
hlt
shr
xor
jbe
retf
xor
faddp
out
imul
mov
adc
pop
jne
out
imul
in
and
fcom
outs
push
push
fcomp
pusha
in
fdiv
jb
ffree
ret
sbb
xor
inc
or
adc
aad
stos
scas
ja
sub
xlat
ror
dec
mov
ds
mov
mov
push
jbe
cmp
xchg
mov
cmp
arpl
fdivr
adc
mov
and
ja
pop
nop
adc
nop
cmp
jmp
mov
pusha
scas
mov
adc
pushf
jg
(bad)
nop
test
clc
add
rol
sub
mov
push
inc
jnp
pop
(bad)
xor
je
jbe
icebp
mov
jo
dec
push
mov
dec
push
push
push
dec
sbb
hlt
mov
rol
clc
fstp
fwait
cs
inc
fucomp
mov
fstp
and
sahf
js
(bad)
movs
adc
jbe
mov
xchg
mov
(bad)
pushf
fbstp
inc
call
add
imul
cmc
rol
mov
cmp
test
and
cli
fwait
and
add
push
sub
push
pushf
movs
pop
mov
add
idiv
sahf
jo
scas
or
xlat
jo
fcomi
xor
setge
popa
lods
or
and
xor
push
outs
push
push
xor
add
movs
sub
data16
mov
mov
dec
sbb
pushf
mov
xor
mov
mov
xor
mov
sub
push
dec
xchg
imul
add
pop
ins
push
push
mov
or
mov
jle
push
push
jbe
or
cs
scas
sub
push
and
sub
mov
mov
jmp
jbe
imul
shr
nop
cmps
mov
rol
fadd
jg
dec
jae
fnstenv
imul
ja
inc
pop
not
aad
stos
xor
inc
mov
int3
jmp
jle
mov
mov
(bad)
xchg
fbld
sbb
cmp
out
jne
add
cmp
add
test
push
shl
sub
push
lea
lea
dec
mov
call
sub
mov
pop
fisubr
push
ds
sbb
popf
mov
movzx
fsub
sub
push
mov
call
mov
out
or
add
shr
xor
sub
pusha
bound
push
inc
hlt
inc
xlat
mov
frstor
movs
mov
mov
inc
sub
(bad)
in
or
outs
mov
nop
test
fsub
ffree
jmp
out
sub
fdiv
push
imul
add
(bad)
(bad)
adc
ss
pop
inc
test
adc
pop
cld
mov
sub
adc
dec
shr
dec
(bad)
(bad)
mov
call
cmp
jne
aaa
clc
dec
or
cld
mov
jbe
add
fadd
sbb
fs
scas
cmp
mov
push
sti
dec
inc
cdq
js
adc
les
push
adc
push
into
mov
hlt
or
push
mov
push
or
jmp
sbb
pop
mov
mov
sbb
cwde
push
in
xchg
sbb
clc
mov
adc
loopne
push
lds
lock
sub
ror
test
jge
inc
mov
js
cli
mov
push
inc
push
das
ins
das
fldcw
jbe
sub
jae
sti
jle
ja
jge
mov
jmp
or
add
push
mov
call
mov
push
aam
mov
or
out
sub
or
xchg
push
enter
aas
js
mov
pusha
jmp
jae
inc
mov
imul
jb
or
fs
mov
mov
add
shl
test
fidiv
and
cwde
pop
pop
push
cmp
rcr
add
test
inc
jnp
cmp
cmc
jb
int3
add
fdiv
and
sub
xor
sub
aam
adc
or
mov
or
mov
cmp
jmp
fist
shl
cmp
and
push
enter
aam
icebp
arpl
out
or
test
iret
add
inc
loopne
push
inc
imul
or
push
dec
pop
sub
sub
or
push
inc
mov
jb
pop
pop
ins
adc
ins
loop
not
pusha
xor
out
shl
stos
fistp
pop
jmp
mov
jmp
inc
dec
xor
fdivr
cmp
pop
test
jb
stos
fstp
or
jb
loopne
fdivr
ins
push
add
jae
outs
call
loopne
and
mov
fild
pop
and
inc
sbb
mov
xlat
pop
lea
icebp
mov
or
mov
add
and
scas
fdiv
pop
mov
and
xor
push
in
ret
mov
mov
jp
cld
xchg
mov
pop
(bad)
lahf
or
aas
hlt
hlt
mov
into
ins
add
xor
pop
loope
xor
jns
jmp
call
fild
movzx
sbb
xor
sbb
add
mov
cmp
lods
cwde
andnps
and
add
into
cmp
or
sti
ja
(bad)
pusha
pop
dec
sub
pop
add
jno
or
push
adc
xor
sub
jecxz
aaa
mov
cmp
aas
rol
jb
ret
rsqrtps
push
add
std
into
cmp
ds
push
push
add
pusha
sub
rcr
lds
dec
lds
inc
out
mov
add
add
stc
push
push
je
mov
inc
dec
cdq
fmul
cld
jmp
dec
adc
or
push
loope
add
hlt
push
adc
enter
mov
add
sbb
hlt
dec
pusha
jge
ins
jnp
push
pop
lock
push
clc
inc
(bad)
rcr
add
or
out
cmps
mov
push
add
gs
gs
inc
xchg
or
imul
adc
or
xchg
das
adc
add
loopne
das
xor
fdivr
ja
dec
pusha
cmp
push
push
add
jmp
or
bound
mov
(bad)
in
arpl
test
(bad)
imul
cmps
retf
inc
data16
stc
es
pop
es
pmaxsw
and
je
sbb
cmp
xchg
into
adc
pop
pop
mov
jmp
xor
pop
cs
jo
pop
fsub
adc
clc
add
mov
call
mov
cmc
dec
or
push
iret
les
adc
sub
sbb
rol
pop
call
pop
push
out
gs
and
push
call
or
imul
cld
dec
shl
inc
loopne
imul
pop
sar
adc
fadd
add
jmp
loop
(bad)
gs
xchg
lock
fs
and
dec
aam
iret
mov
jbe
shl
sub
sbb
mov
mov
fimul
push
into
push
cmp
cmp
sbb
cmp
ds
int3
mov
out
gs
stc
add
gs
scas
sub
fstp
test
add
mov
pop
fwait
or
mov
test
jb
hlt
cmp
fwait
cld
dec
xchg
fcomp
jmp
call
xchg
fmul
pushf
push
clc
out
arpl
or
bound
sub
rol
loopne
mov
dec
or
mov
aam
sub
sbb
js
pop
and
push
sub
push
prefetchnta
and
call
add
inc
fistp
cmp
fidiv
or
dec
(bad)
loope
push
(bad)
retf
arpl
or
loopne
mov
adc
push
jmp
sbb
popa
lods
stos
fs
push
lods
pop
cmovle
xor
out
or
inc
(bad)
and
mov
jae
jo
mov
ret
in
ror
xchg
cmps
add
pop
outs
mov
inc
movs
mov
stos
(bad)
or
inc
add
cld
int3
and
add
add
add
arpl
xchg
mov
aad
dec
add
test
je
test
jne
test
push
xor
mov
clc
cdq
xor
sub
or
jbe
pop
jecxz
hlt
pop
imul
add
push
jle
mov
hlt
hlt
gs
std
(bad)
adc
out
mov
popa
les
out
push
push
(bad)
fild
dec
mov
xor
push
jno
dec
or
shl
fisubr
push
in
pmulhuw
lds
arpl
add
mov
cdq
add
adc
add
add
aam
jl
adc
mov
push
mov
mov
test
cmp
enter
push
or
or
or
rol
jmp
int
or
pop
jl
push
jecxz
jae
mov
ja
lea
mov
data16
or
push
cmps
scas
add
adc
movs
add
pusha
or
add
add
jl
sti
shl
retf
mov
call
pop
sub
lea
stos
xchg
xor
push
dec
adc
or
(bad)
cmp
cmps
xchg
mov
jb
fcomp
and
(bad)
push
inc
xor
cmp
or
dec
sub
loopne
rdtsc
fmul
sbb
mov
loopne
xchg
ret
mov
loope
fdivr
into
sub
iret
or
repnz
jo
repnz
adc
sahf
or
or
push
push
in
out
hlt
fs
jmp
sub
mov
or
add
and
jne
fcomp
sub
ror
test
pop
retf
dec
cmp
das
mov
inc
and
in
cmp
ret
mov
xor
or
xchg
lock
clc
mov
pushf
sbb
dec
dec
movs
in
or
add
jmp
pop
sbb
cmp
xor
pop
loope
repnz
into
jmp
repz
sbb
mov
fdivr
dec
dec
pop
sub
shl
dec
clc
(bad)
mov
push
adc
xor
dec
ret
ffreep
mov
lea
push
fadd
adc
or
neg
fwait
or
js
adc
jecxz
jmp
mov
aam
call
je
mov
add
cmps
adc
push
add
push
fadd
fldcw
lds
sbb
jbe
mov
pusha
inc
lock
or
add
call
sub
rol
adc
inc
ficomp
test
ins
movs
lea
add
fisubr
dec
push
inc
popa
les
int3
dec
pop
jle
add
xchg
jg
das
jmp
mov
ss
adc
push
test
xor
stos
push
cs
sbb
dec
push
ja
dec
pop
mov
sub
pop
dec
lock
ror
xchg
pmaxsw
pop
mov
rol
add
ds
xor
sar
jle
add
mov
leave
or
mov
sub
mov
ss
jmp
dec
adc
inc
xor
or
in
lock
bt
sbb
in
push
sbb
pop
sbb
adc
sub
daa
sub
clc
adc
jl
inc
push
lea
push
clc
(bad)
cdq
jge
rol
inc
dec
jne
out
add
es
test
add
(bad)
mov
(bad)
movs
outs
sbb
inc
sbb
cmp
je
je
dec
adc
push
push
mov
add
pop
ror
enter
fisub
add
fimul
repnz
in
js
fwait
addr16
mov
mov
call
rol
pushf
jmp
mov
push
pushf
fs
xor
push
inc
mov
popa
adc
mov
daa
enter
xlat
and
and
push
shl
iret
sub
or
not
jmp
outs
inc
in
clc
cmp
sbb
addr16
js
fadd
cmp
push
or
sbb
adc
adc
outs
adc
mov
xchg
aas
cmp
jg
xor
adc
jmp
movs
inc
sbb
pop
rol
js
adc
arpl
cmp
add
or
adc
cmp
pop
add
fisttp
add
mov
inc
or
retf
push
ins
lock
mov
or
icebp
fwait
loopne
mov
cmp
xor
mov
push
inc
clc
add
or
shl
or
pop
and
repnz
cwde
cdq
test
xchg
pop
repz
call
div
ror
jne
xor
adc
jne
adc
mov
push
mov
movs
pop
leave
inc
jo
dec
jmp
fsubr
or
cmp
adc
or
push
rol
sbb
add
lds
sahf
pop
xchg
icebp
test
push
(bad)
jbe
inc
mov
mov
mov
pop
sub
enter
(bad)
mov
push
or
push
adc
cmps
lahf
jo
pop
hlt
jmp
or
int
xchg
cmp
jae
xor
sub
lods
push
push
and
in
and
jmp
inc
or
cmp
jne
aad
mov
mov
jge
into
xchg
pop
jmp
jge
loopne
loopne
fdiv
mov
jae
adc
and
in
fwait
mov
in
sbb
jle
sbb
stos
test
and
and
cs
(bad)
cmps
lea
lock
fdivr
or
adc
mov
push
mov
xchg
jae
ret
push
sub
sbb
dec
inc
adc
mov
xor
pop
jmp
xor
cmp
jp
dec
or
xor
and
popf
lock
lea
js
js
mov
cmp
inc
sub
or
sbb
sbb
movs
push
or
das
and
movs
pop
imul
les
jne
add
xlat
add
les
rdmsr
ret
clc
jbe
pop
xor
mov
ins
jbe
rcl
pop
inc
cld
jnp
lea
mov
push
push
or
gs
test
cmp
xor
sub
mov
adc
and
jg
nop
adc
cmp
sbb
xor
hlt
(bad)
mov
aaa
pop
(bad)
std
adc
or
retf
jmp
popa
xchg
adc
cmp
cmp
jl
fisub
leave
fs
std
and
fwait
loopne
mov
push
adc
sub
push
movd
test
pop
popa
jmp
add
add
je
push
pop
cli
push
arpl
shl
add
inc
int3
jmp
adc
inc
shr
and
inc
sub
outs
mov
sub
(bad)
lock
rol
pop
and
retf
pop
xor
adc
push
test
add
inc
push
ror
push
out
xchg
clc
stos
push
cmp
not
lods
pop
ds
pop
movs
les
cmp
jecxz
les
fist
sbb
in
jmp
dec
movs
pop
and
cmp
sub
movs
sbb
sbb
jl
pop
push
not
inc
add
push
dec
sbb
adc
inc
xchg
dec
or
inc
es
push
aas
mov
xchg
movs
add
int3
sti
shr
aas
inc
xor
cmp
je
inc
add
fs
std
mov
inc
test
push
repnz
mov
and
and
clc
jne
out
sub
sahf
ins
pop
movs
icebp
jmp
jmp
inc
dec
ror
adc
cmp
or
popf
ret
push
jle
dec
loopne
inc
or
and
data16
mov
das
xlat
push
mov
mov
pop
shl
or
mov
push
adc
sub
sbb
push
(bad)
mov
(bad)
adc
cld
inc
out
stc
inc
mov
dec
or
fs
dec
js
inc
adc
add
push
sbb
add
sbb
lock
push
jne
pusha
cmc
sub
in
loopne
fwait
add
clc
xor
outs
pusha
sar
mov
jnp
out
lea
lods
retf
add
sbb
and
add
add
aas
sub
dec
repz
and
sub
gs
retf
sbb
adc
dec
hlt
test
int3
mov
cmp
pop
or
and
add
jecxz
cld
add
lea
sbb
aaa
jo
es
cmp
or
mov
hlt
push
pop
mov
mov
add
ret
jno
pusha
jb
hlt
mov
add
dec
in
js
jno
hlt
enter
data16
cmp
push
frstor
aaa
addr16
pop
mul
call
lock
pop
test
add
not
pop
fwait
nop
call
and
mov
int
dec
add
xchg
push
cld
int3
push
push
xchg
or
pushf
dec
cmp
xchg
sbb
repz
nop
sub
test
in
jns
inc
lock
(bad)
lock
jmp
xor
and
inc
add
dec
(bad)
int3
add
lods
fmul
inc
jg
cmp
outs
rol
dec
adc
xor
aaa
cmovbe
mov
dec
aam
cmps
pop
popf
mov
(bad)
sbb
dec
nop
call
shl
cmp
mov
adc
adc
add
enter
jno
pusha
das
inc
in
xor
mov
ror
packuswb
(bad)
je
cmp
pop
(bad)
cmp
jb
setg
dec
in
test
push
push
add
push
mov
(bad)
adc
dec
and
or
mov
dec
or
dec
je
dec
xor
rcpps
aam
mov
pop
push
dec
mov
or
imul
add
dec
lods
mov
leave
dec
cmp
mov
in
pop
dec
xor
xchg
cwde
inc
and
sti
add
dec
or
xor
je
mov
inc
adc
pop
pop
mov
jb
inc
push
add
push
or
mov
jge
xchg
and
jno
test
mov
(bad)
inc
xchg
push
mov
add
dec
aaa
jl
xor
mov
test
and
or
cmp
je
daa
push
or
loop
adc
pop
push
add
mov
or
test
dec
or
add
inc
and
cwde
mov
lahf
ret
lock
xchg
cmp
jge
mov
mov
rol
mov
aaa
call
cmp
jo
pop
push
mov
pop
fsub
loopne
lock
add
push
add
jno
cmp
clc
outs
ret
in
xchg
add
repnz
cmp
aam
mov
aas
dec
cmp
push
xchg
adc
push
pusha
rcr
cs
cmp
or
cmp
sub
cs
loop
xor
xlat
add
mov
push
sbb
imul
push
repnz
push
cmp
repz
out
leave
add
add
jecxz
fwait
data16
popf
jg
jmp
sbb
mov
lea
not
inc
sub
pop
in
ficom
jmp
dec
test
sahf
mov
jge
push
mov
out
xchg
mov
cdq
xor
and
pop
xor
mov
jle
pop
and
add
and
and
cs
(bad)
dec
cld
push
call
lock
sbb
lahf
inc
cmps
mov
ds
xor
movs
mov
aad
in
nop
jnp
mov
test
arpl
pop
mov
and
and
cmps
mov
das
add
das
ds
mov
shr
daa
and
jo
out
je
mov
sbb
pop
out
leave
inc
out
mov
test
xchg
and
dec
or
jo
add
aaa
das
or
or
sbb
sub
inc
push
sub
xchg
test
bound
and
push
rcl
jmp
push
hlt
mov
adc
dec
and
out
mov
push
and
test
mov
mov
push
test
jmp
ret
ret
xor
(bad)
xchg
push
sbb
cwde
mov
dec
adc
push
and
or
stos
jmp
std
data16
out
mov
mov
mov
adc
fcmovbe
fwait
loopne
sub
cmp
pushf
jmp
jge
sbb
inc
inc
and
in
xor
les
mov
xor
lods
sub
cmp
add
bt
std
or
rcl
adc
xchg
adc
sub
adc
inc
ror
inc
shl
xor
sbb
loopne
xor
cli
fs
dec
xor
clc
adc
(bad)
aam
mov
jne
or
js
sbb
ret
push
mov
add
pop
pop
pushf
cs
adc
jg
lds
inc
dec
loopne
sub
loopne
jg
push
dec
jmp
pop
xchg
das
and
ret
push
add
xchg
dec
dec
mov
das
pusha
ja
std
mov
dec
mov
pop
adc
push
into
pop
and
or
pop
xor
nop
or
pop
dec
test
pop
xchg
and
fcmovbe
mov
push
mov
inc
add
iret
mov
pop
push
jae
dec
mov
cs
jb
jne
jno
add
jne
mov
add
neg
test
mov
mov
ret
lock
pop
lods
ret
adc
ret
pop
test
adc
test
push
in
xlat
inc
ja
mov
adc
js
pop
cmp
lahf
and
popf
rol
inc
sbb
push
dec
mov
xchg
dec
ins
adc
outs
add
imul
mov
dec
inc
jmp
out
loopne
pop
cmps
aad
js
pop
jnp
inc
jl
je
test
fs
adc
jl
(bad)
loopne
loop
je
(bad)
retf
mov
jns
fnstenv
push
jl
fs
jns
xor
sub
xor
sbb
mov
and
dec
xchg
push
enter
push
arpl
les
daa
adc
ds
test
pop
in
mov
or
pop
loopne
mov
inc
xor
setg
xabort
lods
scas
mov
pop
add
mov
and
xchg
dec
repnz
pop
mov
xchg
xor
(bad)
int3
mov
jl
mov
aaa
push
test
ror
dec
cmps
add
adc
lahf
push
add
out
lock
sti
lock
xchg
clc
popa
cmps
inc
ror
pusha
sub
sub
xchg
js
add
mov
rol
daa
mov
pop
test
les
or
sub
aaa
push
or
add
mov
shl
cmps
ds
inc
inc
test
pop
loop
or
sub
cmps
pop
add
les
inc
jmp
push
cmp
cmp
cmp
(bad)
jo
and
lods
and
sbb
cmp
cmps
xor
cmp
push
paddq
mov
mov
pop
lock
in
cmps
mov
add
jno
sub
js
cmps
fnstenv
adc
cmps
and
cmp
cmps
sbb
sbb
int3
pop
clc
lea
inc
sbb
jbe
ror
adc
jp
fidivr
out
or
fucomip
pushf
add
es
(bad)
push
out
add
loope
and
jecxz
jns
ins
test
sbb
idiv
hlt
add
sbb
xor
sahf
push
lods
cmp
pop
(bad)
imul
mov
loop
and
pop
stos
vphsubbw
ins
ret
mov
and
or
push
cmp
adc
outs
adc
or
jo
lahf
sbb
sub
js
test
pop
mov
into
test
adc
inc
and
aas
sbb
inc
inc
in
mov
xchg
and
movs
neg
(bad)
mov
sub
or
ins
jmp
and
push
daa
hlt
ja
test
out
fwait
dec
mov
lods
loopne
push
fisttp
rcl
dec
sbb
xor
dec
jnp
les
add
inc
loop
and
js
pop
sbb
setg
xchg
mov
mov
or
inc
push
jnp
xchg
aas
sbb
add
xchg
cmp
cmp
movs
mov
inc
jae
aas
cmps
pusha
neg
mov
pusha
pop
push
jne
jo
cwde
outs
dec
jbe
pop
and
call
pop
ins
jns
xchg
jo
imul
sbb
ja
pushf
adc
repz
rcr
cmps
mov
cmps
cmp
adc
pop
nop
xchg
pusha
cmps
cmp
ja
ret
sbb
add
fnstsw
xor
ja
enter
and
pop
sub
push
das
pop
pop
or
mov
outs
ror
cmp
push
loop
loopne
cmp
and
mov
arpl
(bad)
cmc
mov
mov
adc
add
cwde
into
pop
pusha
pop
leave
inc
pop
adc
pop
jb
xchg
pop
adc
pop
sub
push
jns
push
adc
pop
adc
add
pop
dec
mov
mov
pop
test
ret
sbb
mov
mov
sbb
jg
mov
pop
es
xchg
adc
gs
mov
adc
push
jb
jns
dec
imul
or
or
or
hlt
fld
adc
call
movs
or
or
jns
adc
mov
prefetch
sub
dec
les
jmp
dec
adc
jno
ja
fmul
inc
jo
mov
pop
adc
cmp
jno
icebp
mov
cmovb
mov
js
clc
retf
sub
add
and
ret
cs
lea
mov
or
sbb
fst
fcomp
sbb
inc
movs
les
popf
fsubr
cwde
fmul
pop
sub
and
xor
xlat
or
push
mov
pop
mov
xor
call
xor
xor
adc
push
aas
iret
xor
mov
aas
sbb
fsub
add
xchg
mov
imul
pop
ror
cwde
bound
ror
das
xor
and
or
xlat
inc
adc
lds
outs
push
pop
pop
and
push
test
fidivr
dec
mov
pop
pop
in
retf
dec
gs
jp
cmp
hlt
inc
xor
(bad)
dec
iret
aas
and
ds
push
cmp
call
mov
push
inc
mov
sub
jl
std
outs
add
adc
fidivr
gs
mov
jl
test
jge
add
and
mov
inc
jle
push
add
dec
mov
popa
test
retf
cwde
dec
pop
in
mul
in
cwde
or
push
dec
cmp
adc
mov
nop
rol
or
adc
cmp
inc
mov
jmp
or
cmp
neg
jg
mov
sub
shr
add
mov
cwde
add
adc
lock
fstp
add
push
popa
sbb
je
lds
call
imul
and
ret
pop
push
repnz
jno
dec
jno
add
movzx
inc
xor
add
sub
cs
popa
sub
and
xor
rcl
push
and
lds
cli
int
mov
push
or
hlt
add
outs
stos
hlt
jg
mov
and
int3
mov
jo
in
push
lock
mov
and
inc
scas
xor
add
out
dec
and
(bad)
iret
jb
mov
dec
push
and
bound
inc
jb
cmps
cmps
das
push
into
adc
push
inc
imul
mov
inc
sahf
dec
xor
inc
mov
push
out
inc
push
(bad)
pop
add
cmp
pop
hlt
mov
mov
jg
inc
clc
inc
sub
cmp
jmp
and
pop
mov
shr
in
fild
mov
jb
mov
or
jo
inc
ret
or
lea
mov
fdivr
shl
jg
cmp
jl
push
je
cmp
cld
in
push
fmul
repnz
iret
fimul
and
sub
in
mov
mov
dec
jb
xchg
cmp
jle
ror
push
mov
je
test
mov
jl
add
outs
and
jb
pop
test
lods
test
pop
sahf
adc
into
push
xchg
inc
repnz
inc
pop
stos
enter
popa
call
fidiv
jg
fs
(bad)
out
sub
adc
cli
enter
xor
or
jb
movs
sbb
add
and
bound
aaa
mov
xchg
mov
inc
inc
xchg
inc
xor
cwde
outs
dec
mov
cmp
cmp
or
adc
es
push
pop
or
shl
mov
and
add
add
xor
bound
jae
cmp
jns
gs
cs
popa
or
imul
cs
push
popa
imul
sub
dec
(bad)
push
jmp
popa
ins
push
imul
sbb
gs
jb
jns
push
jae
ds
fisubr
jb
jns
push
fld
(bad)
fild
xchg
xchg
inc
gs
imul
gs
adc
cmps
mov
ds
test
cmovo
fistp
xor
mov
add
and
add
aaa
cmp
cld
cmove
popa
jne
je
add
div
ds
arpl
or
inc
jbe
push
add
or
push
mov
push
jnp
das
sbb
push
dec
bound
adc
add
or
jl
push
inc
adc
dec
jmp
sbb
add
sub
pop
scas
sub
daa
inc
push
cmp
xchg
jne
add
pusha
sbb
cld
loop
add
cmp
addr16
fs
add
inc
dec
je
inc
jne
arpl
sbb
inc
add
rcl
add
lahf
ja
shr
jmp
push
cmp
repz
pushf
mov
xchg
push
les
mov
loope
jg
addr16
les
add
loope
jl
mov
inc
pop
and
inc
push
inc
dec
mov
xor
push
dec
cld
xchg
hlt
inc
fisub
gs
dec
cmc
loopne
je
xor
inc
in
add
add
lods
or
add
or
jbe
ins
data16
test
and
in
push
pop
inc
aad
outs
or
je
movs
add
mov
ins
add
mov
xor
add
add
jb
xchg
je
xchg
aaa
add
jne
and
popa
xlat
pop
ret
pop
add
push
movs
lahf
jbe
cmp
mov
mov
(bad)
in
adc
dec
mov
push
rcr
int3
loopne
out
test
add
push
fwait
sub
ja
xlat
sbb
push
pop
repnz
add
jp
jle
push
xchg
dec
push
arpl
enter
sahf
adc
jae
jae
inc
popf
add
jo
dec
(bad)
xchg
xchg
sub
std
xor
mov
(bad)
jae
pop
xchg
dec
pop
mov
xor
push
dec
push
inc
cs
xchg
fld
cmps
jecxz
mov
leave
leave
leave
arpl
in
fs
mov
jb
xor
sti
cmp
cmp
cmp
test
cld
sub
push
jbe
jecxz
dec
inc
sahf
xor
ins
dec
dec
in
xor
fcmovbe
in
jecxz
pop
in
pop
sbb
push
pop
adc
push
dec
push
pop
jecxz
mov
icebp
es
pop
pop
in
lods
jecxz
lods
aas
in
cmp
pop
dec
cmp
cmps
sbb
imul
or
inc
inc
add
dec
xor
or
or
ds
inc
dec
je
dec
adc
push
pop
cwde
shl
add
bt
fsubr
mov
dec
jae
ds
in
mov
or
inc
popa
jg
cmp
call
lods
adc
add
fs
mov
mov
add
arpl
push
bound
push
pop
aad
mov
push
add
mov
add
outs
or
xor
stos
inc
mov
adc
in
or
add
jbe
dec
(bad)
movs
xor
xor
nop
add
mov
mov
pop
mov
enter
xchg
sar
dec
add
mov
sub
inc
call
and
arpl
mov
lea
pop
pop
inc
inc
push
pop
pushf
sbb
pop
dec
jae
imul
dec
push
mov
iret
mov
and
dec
add
mov
mov
not
or
push
add
fimul
inc
add
cwde
push
and
or
jne
sub
cmp
js
jo
ret
and
cdq
ins
jle
fld
inc
xor
scas
inc
sub
es
add
pop
cmps
cmp
cmps
or
mov
and
mul
rcr
(bad)
adc
addr16
inc
or
or
mov
sub
popf
ror
lds
nop
es
cmp
dec
popa
pop
and
movs
mov
lock
push
lds
pop
dec
push
call
sub
dec
sub
mov
rcl
cdq
push
ret
(bad)
call
ss
ins
cmp
dec
pop
jge
cmps
popw
dec
add
iretw
cmps
mov
cmp
sti
and
pop
addr16
sub
aad
and
ds
mov
je
sbb
or
inc
jl
lods
mov
push
jge
sar
dec
add
ins
or
sbb
loop
jns
or
int3
mov
and
ins
stos
jb
mov
mov
xchg
and
and
test
icebp
jmp
or
ins
mov
jae
aaa
(bad)
shl
or
loope
push
outs
add
inc
dec
dec
add
adc
and
inc
sub
or
inc
and
outs
mov
cmp
mov
pop
pop
in
rcl
xchg
pusha
xor
inc
add
lods
or
mov
inc
les
adc
test
or
push
xchg
xor
jns
cdq
ror
add
mov
or
test
xor
out
sbb
cdq
pop
aam
imul
outs
add
push
jecxz
inc
bound
pusha
sbb
inc
ret
pop
and
push
cmp
sbb
mov
dec
mov
add
mov
out
adc
pushf
pop
mov
xor
cmps
movhps
scas
and
sbb
mov
cmp
jg
(bad)
repz
test
mov
cdq
sub
cmps
das
mov
test
cmp
xchg
pop
jnp
cmps
nop
jno
cwde
push
add
mov
movs
cmps
(bad)
inc
cmp
xchg
adc
and
out
jno
test
sbb
mov
or
mov
in
sbb
jae
add
xchg
xor
sub
and
mov
je
adc
xchg
adc
fwait
and
jo
cmp
xchg
das
jmp
dec
inc
icebp
xchg
(bad)
pusha
adc
neg
adc
mov
sbb
push
push
jl
je
(bad)
fcomp
pop
jp
(bad)
pop
pop
or
xchg
(bad)
jae
xor
inc
push
lods
adc
adc
cdq
ins
(bad)
minps
mov
cmp
popf
sub
test
pushf
pushf
mov
sahf
fs
cld
dec
dec
inc
sahf
dec
lahf
outs
mov
dec
and
pop
movs
icebp
xchg
xchg
xchg
daa
daa
mov
enter
mov
leave
leave
cmp
in
data16
or
seto
mov
mov
rcl
push
es
into
adc
daa
aad
sub
mov
pop
mov
or
dec
jns
jno
push
add
leave
sub
add
inc
xor
mov
mov
mov
and
add
xlat
or
sbb
push
jmp
stos
or
outs
mov
or
jbe
adc
movs
imul
inc
jbe
and
bound
jo
out
push
xchg
dec
mov
es
mov
push
hlt
pop
stos
inc
and
add
loop
sbb
inc
or
sbb
pop
add
xchg
iret
dec
add
add
out
sub
pop
or
inc
add
or
in
loop
add
lock
mov
mov
jmp
adc
mov
xor
popf
dec
adc
push
xchg
or
xchg
aad
adc
xchg
push
sub
and
pop
movs
aad
fucomi
dec
scas
push
inc
mov
mov
pop
dec
add
cmp
add
inc
and
xor
or
pop
inc
mov
sbb
adc
sub
shl
pop
cdq
sub
test
jns
xor
ss
test
jge
inc
aaa
test
test
ins
pop
adc
push
sub
test
out
xchg
test
je
adc
xchg
mov
or
push
test
test
je
or
shl
je
mov
mov
push
leave
aam
sub
inc
push
sbb
push
xchg
imul
int3
pop
pop
or
lods
xchg
xchg
movs
imul
mov
test
in
push
cmps
cmp
pop
pop
jo
mov
or
shl
mov
dec
test
sub
or
jg
cmp
xor
push
fcmovne
add
stos
hlt
jne
aas
xlat
fsubr
(bad)
dec
mov
xchg
push
jmp
out
xchg
push
movs
adc
fst
mov
and
neg
imul
es
jo
xchg
mov
out
mov
call
test
je
pop
cli
aam
mov
adc
aam
call
jmp
ins
sbb
xchg
or
pop
xchg
or
(bad)
cmp
mov
xchg
stos
mov
inc
pop
dec
jne
or
in
sbb
jne
push
lock
inc
inc
or
stos
mov
js
in
into
xchg
push
in
das
inc
lods
adc
dec
scas
clc
clc
mov
cwde
je
movs
jb
int3
imul
jmp
push
sub
scas
pop
shl
push
add
push
adc
arpl
movs
daa
mov
psubusb
lods
scas
cmp
out
dec
mul
mov
cmp
scas
pop
fwait
xchg
xchg
daa
daa
fild
scas
ja
enter
jmp
in
leave
lahf
aam
mov
xor
in
mov
jb
jb
jnp
(bad)
std
cmp
sbb
mov
mov
cmp
mov
test
ja
jp
or
scas
cmp
fst
icebp
fimul
push
xor
fwait
es
adc
fwait
adc
inc
pop
jne
sar
cmp
cmp
dec
push
dec
ins
shl
cmc
retf
fsubr
jno
cmp
dec
inc
mov
adc
mov
lods
push
mov
shl
jne
shl
cmc
mov
rol
jmp
mov
and
mov
shl
outs
repnz
xchg
or
jge
shr
inc
out
adc
movs
stos
sbb
int3
jbe
pusha
les
mov
out
loopne
shl
fadd
(bad)
mov
hlt
mov
or
sbb
and
xchg
adc
out
dec
pop
add
inc
gs
cld
call
nop
mov
test
inc
mov
jmp
xor
je
jns
js
jmp
jmp
add
push
or
pop
jno
or
adc
add
xchg
pop
pop
cmc
(bad)
jmp
hlt
ins
push
cmc
jae
mov
js
cmc
and
data16
icebp
cdq
jecxz
cdq
push
ss
cwde
cmc
xor
push
fs
fwait
icebp
pop
xchg
mov
fsubr
push
inc
inc
xchg
ins
jno
xchg
fld
cmc
in
cmc
xchg
push
shl
fst
mov
xchg
or
and
icebp
(bad)
xchg
and
dec
pop
or
mov
and
dec
inc
test
dec
add
in
dec
ins
aaa
add
jmp
jmp
ins
cmc
jne
nop
outs
imul
cwde
enter
push
jb
add
daa
out
enter
leave
cdq
cmc
cdq
push
leave
loopne
or
jns
mov
je
imul
push
cmc
inc
lods
jno
mov
jmp
sar
(bad)
test
inc
ins
arpl
loopne
adc
vmwrite
rol
add
pop
mov
cmc
shl
mov
or
mov
cmc
xor
adc
(bad)
sub
movs
cmp
cmc
loopne
cmc
xchg
in
(bad)
loop
cmc
adc
or
fcomp
cmc
pop
adc
cmc
cmp
pop
cmp
imul
or
dec
rcr
or
pop
rcr
sub
inc
sub
cmp
and
add
pop
mov
mov
shl
or
cmp
jno
cmp
cmp
sub
mov
maxps
stos
inc
pusha
xchg
cmp
movs
ss
or
sub
dec
pop
sbb
fwait
ret
mov
sti
sbb
push
mov
add
inc
and
hlt
jmp
push
ds
adc
dec
int3
test
into
repz
mov
popf
cdq
out
enter
pop
test
jbe
mov
push
fsub
add
cdq
or
adc
and
shr
or
pushf
fiadd
test
push
jmp
xchg
test
fnstenv
mov
test
scas
pminub
dec
dec
retf
pop
loope
sbb
xchg
xor
mov
adc
ror
lock
push
xlat
shl
mov
push
cmp
dec
mul
jle
sub
call
xor
loope
jmp
mov
clc
sbb
pop
(bad)
mov
cmp
sub
mov
sub
jnp
mov
pop
or
dec
ds
iret
add
imul
in
shr
mov
lds
mov
add
adc
sbb
div
push
ins
movs
mov
xor
inc
mov
call
xor
je
cmp
jno
mov
dec
xor
nop
xchg
imul
adc
sahf
ja
hlt
adc
outs
loope
jmp
cmc
fld
cmp
je
add
jne
sub
mov
push
add
cwde
into
cmp
sbb
push
mov
push
mov
add
mov
call
cmp
in
adc
or
adc
add
and
pop
xor
mov
adc
mov
ins
mov
and
cs
jne
fiadd
push
pushf
add
mov
push
sub
dec
push
pop
ins
jo
add
add
imul
(bad)
(bad)
push
add
fs
and
pop
iret
xchg
push
aas
jecxz
ret
and
pop
mov
jmp
or
xchg
fcomp
jne
or
or
adc
repz
cmp
mov
lods
test
push
cmp
or
push
rol
call
daa
mov
rol
adc
adc
outs
pop
mov
movhps
pop
push
leave
dec
xor
jge
popa
adc
xchg
ret
pop
sub
fs
xchg
addr16
pop
loopne
adc
test
loopne
xchg
pop
cmp
fs
loopne
xchg
loope
lods
lock
mov
pop
adc
out
sub
ja
mov
(bad)
out
(bad)
bound
shl
mov
add
sbb
push
test
mov
sbb
push
and
cmp
repz
sub
rcl
cs
lods
jbe
push
dec
ja
cmp
push
add
daa
fsub
push
inc
push
mov
xchg
sub
push
outs
and
dec
mov
add
popa
pop
pop
push
mov
adc
push
stos
outs
push
outs
adc
jns
(bad)
mov
clc
or
movhps
and
rcl
fild
sbb
outs
lock
sbb
les
pop
out
idiv
mov
add
sub
rol
pusha
push
sub
mov
mov
push
add
and
lds
pop
rol
xor
add
adc
clc
sbb
int3
mov
lods
xchg
mov
jmp
add
adc
adc
adc
mov
jmp
add
mov
fild
repnz
xchg
adc
cmp
xchg
lods
add
xor
jle
cmp
mov
pop
inc
jo
loopne
jnp
in
mov
fnstcw
inc
addr16
add
inc
pusha
jo
rol
jle
div
inc
mov
push
jmp
pop
pop
test
and
mov
fisttp
cmp
dec
pusha
mov
mov
sbb
test
adc
mov
cmp
add
cmp
ins
cmp
sub
int3
test
pop
pop
cdq
jge
sbb
xchg
movs
cs
outs
fdiv
push
mov
add
daa
dec
push
add
adc
enter
adc
rol
sbb
pop
sub
cmp
add
sbb
aas
sub
or
adc
mov
clc
sbb
mov
sub
adc
movs
loopne
iret
cmp
push
mov
mov
les
aas
adc
push
retf
push
aam
repz
add
rol
bound
or
inc
cmp
and
or
and
retf
dec
shr
addr16
test
sub
fwait
cmps
push
mov
ror
push
mov
push
ja
push
shr
call
sbb
nop
sbb
sub
dec
dec
outs
and
inc
jae
push
clc
mov
inc
ret
dec
push
push
xor
loopne
sbb
mul
push
sbb
add
mov
mov
and
push
daa
inc
ror
test
sbb
rcr
jno
pop
inc
rol
add
outs
cmp
mov
movs
iret
mov
out
das
add
aaa
or
sbb
ret
push
aaa
enter
arpl
(bad)
pop
sbb
and
aaa
pop
push
adc
xchg
aaa
pop
cmp
scas
ret
mov
test
xchg
mov
push
sbb
jno
sbb
pop
inc
lds
sbb
cmps
loop
dec
rcl
dec
push
push
rol
ret
pop
pop
push
jp
nop
push
pop
inc
push
inc
loope
pop
in
mov
jno
jbe
and
loop
mov
rcr
pop
or
inc
aad
test
inc
aaa
pop
test
or
fcom
push
(bad)
mov
pop
mov
test
bound
pop
lods
sub
lahf
pop
mov
mov
nop
mov
or
popa
out
fidivr
add
pop
add
push
add
sbb
xor
test
push
add
(bad)
call
push
movs
ja
ret
nop
push
mov
push
push
mov
xor
push
push
std
jg
push
mov
xor
mov
sbb
aam
sar
jg
dec
test
jne
lea
sbb
in
mov
push
iret
inc
sub
mov
push
mov
inc
add
test
imul
push
xor
pushf
pop
pop
pop
nop
adc
cmps
lea
fdivr
aaa
or
jmp
jmp
pop
pop
pop
ret
out
ret
mov
lar
push
cmp
(bad)
neg
cmp
mov
mov
mov
test
mov
mov
adc
rol
aas
sbb
add
or
jge
add
inc
stc
or
loopne
rcl
push
xchg
or
test
inc
test
je
sub
int3
push
add
scas
data16
mov
mov
xor
sti
xchg
pop
je
test
je
test
xchg
mov
add
(bad)
dec
adc
cmp
ins
(bad)
jl
daa
cdq
js
jae
inc
push
inc
add
arpl
outs
pusha
add
add
js
addr16
mov
mov
or
cmp
push
push
push
push
in
pop
ss
pop
test
rol
xor
push
mov
cmp
push
je
pop
and
fistp
mov
loopne
add
xor
dec
add
in
fstp
pop
xchg
repnz
je
int3
pop
jp
xchg
arpl
pop
xor
cmp
add
aad
or
mov
cmp
daa
je
jle
das
cmp
je
mov
mov
or
je
add
repz
sti
add
xchg
jp
and
mov
inc
push
div
mov
pop
mov
icebp
mov
test
jg
mov
call
push
fdivr
inc
xlat
mov
outs
mov
add
push
test
and
adc
ja
(bad)
je
mov
pop
or
jl
clc
mov
xchg
mov
ss
sbb
xchg
pop
(bad)
mov
xor
mov
mov
sbb
or
clc
cmp
push
and
sbb
fdivr
inc
outs
and
lock
sub
push
push
mov
sub
pop
cmp
or
add
mul
adc
mov
pusha
mov
push
pop
jbe
ins
das
pop
fisttp
or
imul
in
and
push
xor
je
inc
sbb
dec
or
push
and
pop
adc
dec
push
mov
add
cmp
addr16
mov
arpl
mov
dec
mov
test
ret
inc
cmp
add
jae
add
pop
pop
cmp
mov
hlt
dec
(bad)
hlt
cmps
adc
adc
retf
pop
jle
add
push
hlt
aaa
mov
or
ins
sbb
adc
lea
jno
push
fcom
in
test
retf
mov
cmp
out
retf
or
icebp
push
add
(bad)
adc
and
push
into
jbe
(bad)
or
push
dec
push
jge
push
sbb
adc
inc
pop
dec
mov
in
fbld
aas
mov
clc
mov
jecxz
enter
inc
jmp
jne
cdq
push
jg
mov
shr
jmp
mov
mov
mov
je
iret
xchg
inc
out
push
rol
sbb
xchg
je
pop
jmp
fsubr
pop
or
inc
(bad)
data16
mov
outs
daa
sti
ror
ins
and
clc
and
pop
pop
fs
xor
jne
jle
pop
fld
fwait
cld
jmp
retf
sbb
sbb
out
sub
scas
dec
pop
mov
xchg
bound
stc
push
jb
xchg
add
hlt
fld
xchg
inc
or
call
adc
in
pop
push
jbe
lods
xchg
jo
in
xor
shl
and
imul
sbb
jmp
add
repz
lods
pusha
xor
in
or
sbb
fild
push
sbb
jle
lds
repz
add
or
inc
add
(bad)
jle
daa
(bad)
mov
mov
mov
pop
in
dec
jmp
mov
sahf
js
push
jp
add
jnp
aas
clc
inc
cmp
movzx
fistp
imul
inc
jle
adc
outs
pushf
jmp
cmp
jge
neg
fwait
xor
pop
pop
jne
ss
pop
pop
ret
jge
cmps
mov
cmp
adc
inc
ret
mov
and
fcom
pop
iret
add
jge
fwait
sbb
push
idiv
sti
jne
bound
cmps
movs
retf
mov
lock
test
or
pushf
pop
(bad)
lods
js
cmp
mov
mov
or
push
inc
lods
sbb
jecxz
lahf
lock
add
pop
sbb
inc
dec
repz
adc
sti
add
or
mov
fild
add
repz
adc
fild
push
add
clc
pop
pop
faddp
rol
ins
lock
lock
(bad)
cmp
mov
mov
jmp
jns
out
lods
out
lock
cmps
cmp
stos
jo
cmp
jle
sub
sar
clc
mov
cmps
ror
fisub
aad
je
mov
inc
mov
retf
sbb
ror
(bad)
inc
sub
dec
dec
pop
mov
int3
xor
je
and
or
aaa
push
and
jae
and
add
clc
push
mov
mov
in
and
je
shr
cmc
mov
mov
hlt
mov
data16
rcr
stos
adc
mov
cmc
out
xchg
loopne
call
pop
movs
test
or
push
cmp
aam
mov
pushf
loopne
add
dec
add
pop
and
nop
(bad)
mov
push
push
push
jne
mov
mov
fcomp
cmp
dec
jl
inc
loop
xor
rol
je
adc
scas
xor
mov
fcomp
add
inc
add
inc
push
mov
add
dec
pop
pop
lods
cmps
push
xor
adc
loope
dec
pop
shr
mov
and
rcl
enter
cmp
(bad)
lahf
sub
jae
sbb
loop
je
sbb
inc
jb
jmp
pop
ja
sub
inc
shr
pop
add
(bad)
rcr
(bad)
js
add
add
je
dec
je
jmp
mov
lahf
dec
mov
sub
pop
ret
push
popa
and
push
mov
movs
inc
push
cmp
pop
inc
ds
rcl
dec
xor
aad
mov
cmp
add
sub
pop
retf
inc
sbb
adc
cmp
out
test
inc
lods
push
cmp
arpl
add
leave
xor
pop
xchg
nop
dec
mov
test
and
out
je
jmp
add
sub
ds
add
loopne
inc
sub
and
mov
sbb
inc
xchg
jo
push
jmp
push
jo
cmp
and
dec
add
jp
popa
fadd
mov
dec
mov
aas
test
push
add
jb
or
xor
sub
sar
jns
cld
std
fcomi
xlat
add
stc
clc
sub
sub
jbe
mov
dec
jmp
adc
lea
shl
out
nop
add
adc
icebp
jge
xor
pusha
sbb
pop
cmp
loopne
sahf
inc
jl
clc
sbb
jmp
jmp
ret
int
xor
push
ror
mov
or
inc
ja
cmp
bt
pop
retf
push
inc
add
lock
hlt
fadd
out
aam
push
lods
js
mov
sub
mov
jmp
in
mov
sub
lods
sub
test
mov
adc
loop
je
sbb
cmps
add
pusha
xlat
rcl
xor
jne
or
aam
push
push
mov
and
retf
sub
sbb
cmp
pop
jmp
cmp
call
pop
jo
mov
loopne
outs
adc
xor
sub
or
xchg
shl
into
ins
ret
in
sub
pop
fwait
adc
or
push
push
and
ret
push
(bad)
mov
push
inc
jne
mov
mov
inc
pop
xchg
nop
sbb
fnstenv
mov
scas
clc
inc
cmp
jmp
add
in
cld
in
push
inc
push
pop
rcr
push
add
pop
out
pop
out
mov
int3
mov
sbb
push
mov
out
iret
pop
cmp
push
adc
push
ins
fnstcw
cld
cwde
push
adc
xor
xor
int
lock
mov
in
out
mov
in
jg
sbb
pop
(bad)
pop
aaa
sub
mov
xchg
lods
pusha
and
add
and
inc
inc
imul
add
repz
inc
ret
sub
imul
jae
inc
or
cld
fimul
xchg
das
ja
cmp
syscall
add
lahf
loopne
in
dec
call
lods
(bad)
ss
adc
add
sub
prefetch
arpl
(bad)
lldt
jmp
out
jbe
adc
ins
out
adc
mov
das
jg
jae
adc
inc
in
unpcklps
cmps
cs
add
out
rcl
inc
push
pop
int3
prefetchnta
stos
aaa
clc
fild
sbb
sbb
je
ins
dec
outs
imul
mov
icebp
clc
pop
outs
cmp
fisubr
add
outs
or
inc
movs
inc
js
jae
(bad)
adc
std
jge
pop
push
mov
pop
out
inc
or
fs
je
imul
je
into
add
adc
outs
js
dec
mov
xor
and
inc
and
add
pop
add
or
shl
mov
int
add
sti
sbb
push
jg
test
mov
cmc
mov
adc
add
pop
(bad)
imul
mov
sbb
ins
inc
outs
outs
ins
pop
lods
add
push
retf
addr16
or
addr16
xlat
adc
add
mov
jl
jb
mov
lahf
call
add
or
dec
pop
das
shl
ret
sbb
les
xchg
sbb
imul
cmp
scas
inc
xor
jbe
mov
and
mov
ins
outs
mov
push
loope
imul
inc
xchg
mov
xchg
inc
push
mov
dec
xchg
ret
and
mov
outs
sub
inc
lods
or
or
inc
xor
jbe
mov
xor
enter
adc
adc
loopne
and
add
daa
nop
gs
push
gs
int3
adc
mov
or
scas
scas
add
jae
cmp
shl
dec
push
les
fwait
jns
mov
lods
leave
jns
bound
setnp
mov
sub
sub
jae
xchg
rol
push
fcom
pop
test
push
jle
inc
jb
les
xor
fwait
(bad)
sbb
add
inc
in
or
dec
gs
inc
cli
or
sbb
sub
nop
jp
jo
inc
xchg
add
pop
sbb
or
les
add
dec
test
out
pop
jg
mov
pop
push
add
out
mov
out
aam
add
sub
lahf
shl
and
out
jge
add
daa
mov
clc
jmp
fsubrp
inc
(bad)
xor
daa
daa
daa
sub
sbb
bound
fmul
adc
shl
or
mov
add
xor
add
mov
sbb
cmps
push
ins
(bad)
xchg
cmps
add
add
test
cmp
cmp
test
or
mov
daa
js
out
jnp
fwait
cmp
add
push
mov
mov
push
outs
enter
mov
push
cmps
in
inc
icebp
ret
add
cmps
and
inc
jne
imul
leave
aam
pop
add
fsub
add
push
mov
or
mov
jl
int
mov
push
add
(bad)
or
xchg
add
lock
sbb
mov
daa
mov
mov
es
jb
jmp
ins
xor
push
imul
sar
xor
mov
inc
pop
pop
ds
jge
push
and
inc
cld
popa
adc
push
pop
(bad)
xor
pop
test
out
sbb
outs
jbe
call
pusha
or
push
mov
imul
popa
adc
data16
(bad)
pop
(bad)
push
jnp
dec
data16
push
cwde
cmp
ret
pop
repz
shr
mov
test
frstor
int3
repz
pushf
repnz
add
push
add
add
fbstp
je
push
mov
adc
out
cmp
cmp
fnstcw
int3
ds
clc
test
dec
mov
inc
enter
fs
xor
push
sub
shl
and
push
loopne
lock
or
(bad)
cmp
pusha
mov
sub
sar
and
dec
jo
sahf
inc
not
add
mov
pop
adc
inc
icebp
ds
sbb
movs
or
mov
mov
or
push
sbb
das
adc
xor
xor
je
sbb
push
in
stos
ror
lea
pop
add
bound
cli
icebp
gs
leave
ror
or
aaa
push
jl
mov
mov
gs
adc
sbb
dec
push
or
paddusw
push
arpl
test
arpl
jb
shr
xor
add
lea
adc
shr
hlt
mov
dec
sbb
pop
stc
push
les
imul
je
cmp
mov
push
adc
xlat
not
inc
cmp
es
sub
jnp
mov
dec
sub
mov
xchg
and
and
daa
fcom
inc
cmp
xor
cmp
pop
mov
push
fild
inc
and
xor
inc
outs
arpl
sbb
push
repnz
bswap
sbb
nop/reserved
test
mov
pop
dec
push
add
mov
das
or
pop
adc
pop
(bad)
(bad)
adc
xchg
adc
clc
dec
fidivr
iret
sbb
stc
psadbw
ret
and
adc
mov
push
and
lods
and
loopne
mov
xchg
outs
and
mov
mov
movs
push
fwait
xchg
push
loopne
nop
es
daa
popa
popa
pop
ins
dec
cld
das
mov
sub
push
inc
cmp
mov
mov
adc
inc
push
fnsave
shl
or
add
outs
add
sub
fstp
out
add
data16
or
cmp
sub
pop
push
loopne
aad
adc
adc
inc
sbb
dec
dec
add
sub
add
xor
scas
test
and
mov
pushf
sub
add
pop
and
mov
pop
and
add
add
fstp
adc
xchg
pop
rol
or
test
ror
mov
or
imul
mov
push
dec
ss
cmp
sub
jns
sbb
vucomisd
jb
sbb
pop
push
ins
adc
mov
sti
pop
nop
das
sahf
push
add
mov
jmp
jb
push
mov
mov
je
jb
sub
fsubr
dec
ja
push
test
gs
test
ret
(bad)
cld
inc
adc
add
vdivss
popa
pop
jge
popa
push
fldcw
aam
sub
inc
outs
ins
outs
(bad)
scas
and
fstp
sub
push
pop
inc
jne
fldenv
jle
add
xchg
add
cld
pop
push
lds
in
das
or
mov
sub
(bad)
in
into
cmp
test
fs
(bad)
xchg
push
and
inc
push
bound
add
mov
rol
aad
and
ret
ror
pop
int
pop
xor
push
outs
gs
mov
mov
loopne
in
dec
inc
push
mov
out
and
sbb
add
(bad)
push
add
std
xchg
xor
xor
loopne
popa
mov
push
cmps
loope
jnp
add
add
xor
or
dec
out
and
mov
gs
or
jge
mov
(bad)
shr
adc
int3
cmp
or
inc
mov
sub
and
icebp
into
fist
sar
push
adc
push
push
jb
mov
iret
pop
out
ds
sbb
xor
lods
cmp
xchg
xor
sub
div
ja
inc
iret
inc
push
scas
sbb
push
cmp
das
cld
cmp
sbb
or
push
aaa
pop
inc
mov
jns
jne
arpl
and
jmp
add
add
push
or
aaa
das
scas
adc
(bad)
push
xor
xor
cmp
push
add
jmp
scas
or
inc
sahf
jno
shl
push
xchg
jo
mov
pop
loopne
pop
cmp
xor
pop
sbb
or
inc
in
aad
pop
test
adc
push
shr
mov
pop
aaa
add
ds
ja
enter
fist
inc
cmp
or
mov
movs
fisttp
fidiv
add
push
test
inc
dec
cmp
push
pop
add
scas
add
xor
or
lahf
mov
scas
das
push
neg
push
fcomp
sahf
not
loopne
sub
pushf
and
lds
imul
add
push
test
dec
jb
mov
in
mov
call
inc
sub
fcmovnbe
sub
sub
fldcw
add
dec
sbb
mov
(bad)
jne
lock
pushf
push
dec
sub
in
(bad)
test
xchg
dec
jbe
ret
push
mov
sbb
fisubr
pop
dec
or
mov
leave
leave
sbb
or
repnz
stos
fisttp
or
jns
jb
push
mov
ud2
cmp
cmp
dec
jo
retf
or
mov
adc
aas
setp
fsubr
sbb
pop
stc
push
xchg
push
cmp
add
push
fmul
push
sub
imul
stos
pop
pop
xchg
xchg
cmp
cmp
ret
push
jbe
lds
or
inc
jmp
jno
fisttp
test
inc
inc
mov
dec
mov
inc
xor
jnp
inc
pop
pop
dec
cmovp
add
add
loopne
push
mov
addr16
enter
xor
rcl
sahf
dec
jg
mov
add
cmp
idiv
mov
mul
push
popa
sbb
push
ins
push
cmps
jbe
xchg
fsubr
add
dec
pop
or
jbe
scas
push
mov
ja
les
gs
adc
mov
ja
shl
jae
enter
xor
lods
and
xchg
sbb
shl
or
pusha
rol
fld
inc
das
leave
call
or
push
out
xor
push
popa
arpl
adc
and
in
push
or
ins
xchg
dec
jae
jmp
jo
arpl
jno
(bad)
iret
dec
add
push
shl
mov
ds
mov
or
mov
xchg
push
or
shl
mov
push
inc
sbb
inc
fmulp
push
mov
pop
jmp
aad
jle
inc
js
and
je
ins
test
push
inc
xor
pop
out
lea
enter
bound
mov
pop
retf
mov
push
lock
push
sar
sti
pop
xor
mov
test
ffreep
lock
ja
xor
ror
pop
mov
popf
dec
jg
jmp
inc
das
das
dec
aaa
out
dec
popa
pop
inc
lods
repz
add
shl
ins
mov
add
jmp
es
sub
dec
mov
jno
aaa
add
cmp
(bad)
xchg
stos
add
or
imul
push
imul
cmp
test
inc
or
and
inc
and
retf
xor
dec
sbb
fisttp
lods
popa
mov
jl
inc
sti
sub
pop
sbb
push
dec
cmp
or
loop
or
and
or
mov
xchg
pusha
adc
xlat
xchg
pusha
dec
push
mov
push
adc
and
mov
test
mov
push
jb
or
mov
jae
or
and
adc
adc
loop
(bad)
iret
sbb
cmp
cmp
pop
lods
sbb
mov
cmp
pop
or
lea
pop
jns
mov
lods
out
stos
push
mov
pop
cdq
xor
or
pop
sub
dec
or
sub
add
xor
push
ret
push
in
cld
push
pushf
mov
popa
jl
imul
add
sub
inc
and
push
jo
call
aas
aas
mov
fwait
sbb
pop
ret
(bad)
(bad)
mov
push
push
test
push
add
call
icebp
mov
idiv
fimul
mov
push
xchg
sub
unpcklps
pop
call
ret
jbe
mov
sbb
or
mov
mov
mov
loopne
inc
clc
xor
push
xor
mov
(bad)
mov
(bad)
outs
fbld
call
mov
mov
call
test
setg
dec
pop
pop
pop
sti
(bad)
mov
sub
xor
outs
mov
jmp
jmp
movzx
fcomp
sar
pop
xlat
push
add
mov
loop
fnstenv
lea
push
rol
push
(bad)
je
sub
push
clc
add
inc
mov
mov
out
mov
in
jnp
hlt
sub
pop
or
std
sbb
mov
mov
fs
cs
push
loopne
dec
hlt
inc
lea
cmp
dec
sub
(bad)
(bad)
mov
jp
in
ret
add
add
sbb
mov
daa
and
mov
mov
cmps
clc
pusha
or
lea
pusha
lock
xor
out
or
pop
add
retf
sub
add
into
sbb
nop
mov
pop
mov
sbb
add
rcl
mov
lds
pusha
lds
je
shr
(bad)
lock
cmp
je
arpl
mov
cmp
pop
call
fwait
push
call
and
push
add
xor
xlat
add
push
jmp
mov
js
int3
out
pushf
cmp
xor
xlat
sbb
add
icebp
pusha
out
and
or
dec
inc
xchg
loope
mov
mov
cld
push
jo
add
and
or
xchg
pop
and
fadd
arpl
pop
pop
mov
jle
rcr
and
enter
jg
xor
pop
test
in
lds
add
ins
arpl
inc
xor
lea
push
xchg
mov
mov
jg
loope
dec
add
test
and
or
aad
and
movs
pop
cmps
fst
push
sub
add
loope
cs
sub
jnp
add
push
fimul
fsub
and
fstp
fwait
iret
pop
pushf
inc
leave
or
sub
inc
add
jb
push
loopne
jbe
xor
pop
xor
daa
clc
pop
loopne
push
hlt
pop
or
jbe
mov
sub
pop
out
inc
adc
push
adc
add
xchg
xor
test
cs
call
inc
mov
adc
ja
push
icebp
pop
xor
std
push
out
sti
add
xchg
sub
pop
pop
sbb
clc
imul
mov
pop
and
cmp
je
test
sub
les
mov
pop
in
jmp
jle
outs
pop
inc
repz
add
xor
mov
sbb
sar
jns
adc
mov
cmp
mov
inc
jae
lock
cld
loope
inc
cld
in
or
test
jg
inc
call
enter
push
add
cmp
retf
push
mov
call
pop
xor
adc
ins
lods
push
cmp
sub
inc
mov
ret
push
inc
xchg
cwde
loopne
push
call
call
sub
push
xor
push
fild
nop
cmp
loopne
int3
push
je
dec
push
push
sbb
sbb
sbb
les
aam
add
mov
push
push
lock
or
rol
xor
push
ror
add
sbb
pop
pop
mov
cmps
(bad)
movs
and
adc
cwde
mov
cmp
ins
sbb
and
and
mov
add
je
not
ret
call
cmp
inc
add
ins
aas
push
sub
dec
push
cmps
popa
dec
clc
pusha
mov
mov
sbb
xor
inc
inc
add
cmc
in
shl
sub
call
pop
pushf
ror
pop
jp
xor
movs
inc
loope
push
sub
jnp
adc
adc
mov
inc
mov
aas
aam
fcom
cld
fs
inc
sbb
lea
stos
pop
in
adc
sbb
fist
jo
dec
push
pushf
jle
sub
test
pop
rol
dec
shr
jnp
jp
adc
sbb
jnp
jno
ds
movs
mov
nop
inc
push
xor
adc
mov
hlt
out
inc
xor
push
or
lock
add
adc
push
jge
add
fidivr
into
fcomp
bound
arpl
lock
jge
sbb
(bad)
dec
and
mov
ss
std
mov
js
pop
mov
push
xor
and
in
hlt
xchg
sub
xor
and
jg
shr
dec
and
rcr
retf
jns
sbb
pop
push
sahf
hlt
imul
or
clc
mov
or
enter
test
outs
cmp
dec
loopne
test
(bad)
jmp
ret
movs
(bad)
xor
ja
push
(bad)
cmp
push
mov
bound
dec
into
dec
mov
mov
dec
sbb
(bad)
cmp
(bad)
xchg
mov
add
adc
ret
push
pop
mov
and
add
sub
cdq
(bad)
not
push
and
mov
jecxz
mov
sbb
inc
jnp
cs
stos
mov
push
dec
test
shr
fcomp
add
or
repnz
mov
sbb
adc
dec
sbb
mov
clc
add
add
sbb
sbb
fbld
or
mov
push
push
pop
inc
aam
test
dec
cld
fcmovnu
ja
jl
inc
xor
ss
rol
out
pop
aam
cwde
push
test
mov
pop
test
sahf
dec
mov
fsub
push
pushf
and
shr
mov
sbb
jl
rcr
mov
mov
xor
loopne
cmc
jne
test
and
mov
pusha
and
jl
adc
sbb
test
dec
sbb
test
das
mov
mov
mov
inc
cld
sti
out
dec
jne
mov
and
jnp
jl
fstp
adc
popa
add
addr16
shl
call
daa
or
push
jl
test
(bad)
rcr
xchg
or
xchg
loopne
call
cmp
mov
sbb
or
push
sub
lods
pop
mov
fcomp
pop
mov
add
lea
xchg
ficomp
add
inc
movs
mov
add
lods
jne
jl
xchg
add
push
lock
xchg
fdiv
ins
gs
xchg
call
div
jmp
inc
popf
cmp
cmp
loopne
push
ret
test
jbe
jmp
shl
retf
pop
xchg
push
sub
pop
and
test
mov
xchg
jl
inc
xor
dec
add
add
call
jle
or
adc
inc
dec
jne
pop
pop
xor
ins
je
pop
add
xlat
jb
or
jl
mov
leave
cs
inc
and
cmp
(bad)
sbb
aas
pushf
imul
mov
dec
push
add
je
mov
loope
(bad)
ror
in
stos
retf
repz
out
push
sub
and
pop
push
and
sub
jmp
inc
mov
xchg
pop
test
bound
mov
add
push
and
aaa
adc
push
nop
jg
push
ror
mov
jmp
aad
loop
or
outs
aad
jb
cmp
sbb
pop
dec
mov
out
add
inc
pusha
add
popa
add
jmp
xor
mov
cvtps2pi
pop
sub
stos
sub
cmps
or
and
imul
lock
jle
add
xlat
mov
cdq
cmp
inc
mov
adc
arpl
mov
jge
mov
or
or
push
jno
enter
jno
fist
adc
ins
sbb
cwde
xchg
pop
(bad)
mov
jno
push
add
jne
add
fisubr
test
jo
adc
jne
mov
sbb
or
mov
jo
jno
mov
sub
movs
bound
or
sbb
(bad)
pop
inc
pusha
sub
mov
or
cdq
xor
or
and
ror
push
sub
dec
cmp
fcmovu
or
adc
dec
popa
cmp
in
push
in
(bad)
dec
push
sub
pushfw
aaa
cmp
int
mov
shl
mov
popa
sub
sahf
jo
(bad)
addr16
stc
ror
cwde
and
mov
or
inc
and
lods
pop
aas
cmp
push
pop
cld
xor
jecxz
adc
dec
dec
adc
mov
hlt
sub
mov
in
rcl
popf
mov
push
dec
jl
pop
sbb
and
inc
mov
pusha
or
mov
fmul
push
push
sar
dec
cmp
cmp
inc
push
movs
xor
or
scas
push
mov
repnz
sub
ins
xor
pushf
cmp
jne
retf
loope
(bad)
repnz
icebp
and
xor
dec
xchg
push
cmp
je
sub
and
mov
push
popa
(bad)
popa
imul
push
ret
and
adc
sbb
or
pop
add
and
jns
cmp
jmp
lock
and
xlat
or
inc
inc
pushf
xchg
call
and
loope
retf
dec
fiadd
pop
xor
pop
push
dec
push
(bad)
dec
cmp
mov
and
pop
sbb
fwait
push
push
out
sbb
or
jns
arpl
leave
lds
fstp
dec
xlat
mov
movzx
cmps
loopne
(bad)
pop
xor
mov
ror
mov
aaa
mov
sbb
xchg
mov
cmp
pop
dec
xchg
nop
iret
xchg
push
in
lods
call
sub
cs
mov
lea
loope
test
enter
xlat
shl
push
data16
jns
add
dec
mov
lock
sub
ret
mov
sbb
test
sbb
fdiv
cli
jne
xchg
repnz
mov
pusha
xor
cmp
sub
in
push
inc
test
mov
rol
pop
push
lahf
pop
lock
jmp
rol
retf
sub
out
mov
call
ret
push
and
cmp
push
test
mov
cmp
mov
inc
or
loopne
push
sbb
lock
push
dec
inc
sbb
loope
xor
pop
add
(bad)
(bad)
jmp
test
jae
(bad)
ss
jmp
sar
call
jl
push
enter
sub
push
dec
push
dec
js
adc
xchg
adc
or
pop
mov
aam
icebp
jo
jg
mov
test
push
mov
in
ins
cmp
or
cmp
call
loop
and
push
adc
scas
rol
mov
push
hlt
adc
jmp
dec
dec
jecxz
sbb
movs
(bad)
fdivr
pop
loopne
or
dec
inc
loope
jno
rcr
ins
adc
(bad)
cmp
cmp
jmp
sbb
ds
sti
or
adc
and
jne
sub
mov
or
or
pop
xchg
and
add
mov
adc
mov
adc
pop
or
loopne
imul
jb
add
loopne
sub
add
xchg
xchg
pop
loopne
rol
or
aaa
and
pop
or
jp
cmp
sub
or
push
out
add
dec
ret
inc
and
cld
jmp
sbb
out
or
ss
sub
mul
dec
popa
xor
mov
loopne
push
fnstcw
pusha
mov
pop
in
ds
xchg
lahf
push
mov
xor
fld
sbb
cmp
push
je
adc
inc
pop
push
jo
mov
rol
arpl
imul
xchg
retf
das
stos
push
mov
push
test
dec
jne
hlt
mul
loopne
mov
iret
outs
sub
stos
or
jmp
sbb
rol
clc
pop
std
retf
jl
adc
loopne
mov
in
add
test
mov
shl
cmp
sbb
fild
jmp
xor
test
sub
pop
jmp
inc
mov
adc
ja
sub
les
into
inc
sub
loopne
inc
sbb
pusha
mov
or
xchg
call
cmp
jge
mov
sbb
xchg
adc
loope
sar
gs
mov
pop
ss
pop
mov
add
shl
lods
fsubr
icebp
pusha
sbb
cmp
imul
fimul
test
push
bound
retf
jbe
inc
rol
(bad)
jnp
in
mov
add
pop
cmp
push
xlat
sub
out
mov
cli
adc
push
mov
cmp
adc
xchg
test
in
pop
mov
mov
aas
xor
sbb
xor
pop
ret
in
add
mov
push
jo
push
ret
loop
fsubr
ins
js
popa
call
and
js
jmp
jg
pop
test
imul
xor
sbb
and
aad
cmp
in
push
iret
adc
jmp
repz
stos
add
sbb
outs
nop
cs
inc
xor
mov
add
pop
adc
xor
fmul
jne
xor
mov
in
or
gs
cld
fsub
ins
mov
mov
sub
sub
pop
xchg
adc
xchg
pop
inc
jmp
fwait
add
push
mov
inc
aas
lea
jae
jge
test
mov
inc
and
adc
jg
add
(bad)
fistp
lock
add
imul
aas
ins
das
jge
out
push
mov
ins
or
das
jae
ds
add
ror
call
add
or
jne
ins
jle
jbe
retf
loope
dec
inc
sub
push
sub
push
nop
pop
mov
xor
mov
inc
pushf
pusha
aas
mov
out
add
and
adc
and
sbb
retf
arpl
adc
inc
or
inc
lods
shl
outs
jmp
fisttp
adc
cmp
data16
sbb
mov
clc
and
lea
push
retf
and
mov
pop
sbb
cmp
ret
(bad)
adc
push
add
pop
adc
dec
xor
mov
inc
pop
cmps
shl
xchg
xchg
push
jo
push
ins
mov
shl
jns
pop
xor
loop
or
add
push
add
push
mov
fsub
inc
or
jo
cld
pop
(bad)
or
lock
or
mov
sbb
jo
inc
imul
mov
add
push
xor
jnp
js
inc
movs
aad
xchg
fidivr
cwde
pop
aas
ror
les
stos
cmp
xor
and
sbb
lds
inc
lods
mov
clc
dec
imul
dec
and
push
sub
dec
cmps
scas
mov
pushf
int3
xor
mov
mov
loopne
in
dec
bound
inc
mov
aaa
das
enter
cmp
dec
jo
shr
mov
pusha
mov
xor
and
inc
cmp
xlat
pop
fs
adc
sbb
cmp
lds
mov
adc
sar
add
cmps
sar
pushf
push
add
sahf
pop
and
xlat
mov
popf
jg
adc
push
loopne
ins
dec
xor
push
pop
shl
xor
dec
add
jo
mov
rcr
jle
cmp
inc
dec
add
jmp
dec
add
cdq
into
mov
ja
dec
stc
fstp
or
sub
add
shr
leave
adc
pop
ror
pop
add
add
int3
push
(bad)
mov
sub
ror
cwde
rcr
push
add
ins
pop
imul
push
js
adc
jne
dec
dec
xor
cli
adc
lods
inc
push
enter
into
xlat
adc
mov
push
rcr
sbb
test
cs
fild
mov
ror
pop
cwde
add
test
jne
iret
mov
dec
xor
rcl
aad
es
xor
and
sbb
dec
cmp
lea
adc
sbb
jno
or
int
cwde
add
daa
js
push
jo
test
hlt
cs
dec
xor
dec
scas
call
adc
jb
pop
xchg
dec
push
sbb
jle
shr
add
pop
xor
mov
aas
aaa
loopne
shr
imul
ja
xor
sub
sub
mov
add
jae
dec
pop
adc
mov
push
xor
pop
or
(bad)
nop
add
hlt
mov
popa
fdivr
fimul
cmp
jne
loopne
pop
mov
xchg
pop
sub
mov
mov
(bad)
aas
adc
popf
shl
in
mov
push
xchg
adc
lahf
rcr
push
cmp
adc
jo
call
pushf
pop
or
mov
xchg
dec
xor
pushf
sub
nop
mov
mov
add
dec
push
inc
outs
mov
rcr
add
xlat
fidiv
je
test
fs
adc
jl
push
mov
dec
or
push
js
cmp
adc
or
dec
clc
mov
cdq
mov
jge
jne
jns
cdq
add
add
stos
nop
mov
movs
(bad)
fs
mov
dec
lods
call
adc
push
fist
sub
int3
mov
or
pop
or
retf
push
and
pop
jb
mov
pop
cld
mov
sub
inc
xchg
(bad)
aas
mov
ffree
ja
mov
xchg
sbb
mov
cmp
jbe
pop
or
ret
(bad)
(bad)
and
lahf
push
xor
jbe
cmps
mov
pusha
lock
sti
mov
adc
xchg
in
retf
jp
cs
inc
arpl
xchg
or
ret
dec
dec
cs
arpl
inc
fsubr
adc
push
sbb
leave
sbb
xchg
rcl
jl
les
and
cmc
daa
out
mov
sbb
loope
lods
xchg
pop
leave
(bad)
pop
push
xor
popa
jbe
jne
inc
pop
jl
pop
dec
jg
lea
dec
cmp
jg
adc
push
test
jge
push
add
ja
mov
rol
xchg
inc
jle
(bad)
and
or
bound
sbb
push
out
pop
jg
adc
dec
retf
or
dec
cmp
ins
test
adc
inc
jne
out
mov
add
inc
test
mov
push
cld
call
pop
lock
mov
sub
shr
add
push
or
sahf
adc
and
jge
lea
mov
call
sbb
je
out
fnstcw
push
lods
mov
pop
fdivr
jge
adc
push
inc
pop
pop
xor
ins
push
push
pop
in
push
push
rcl
xor
stos
xor
aaa
cli
icebp
and
inc
xchg
pop
mov
push
jns
mov
sbb
test
sti
pushw
xor
push
or
jmp
mov
add
jb
popf
mov
adc
dec
pop
jb
psubd
cs
lock
in
sti
jmp
fmul
sbb
mov
add
sub
jb
inc
dec
mov
cmp
ret
or
adc
push
sub
sbb
ror
sub
pop
aaa
dec
lods
push
dec
mov
(bad)
pop
mov
call
mov
js
push
mov
cmps
push
in
movs
add
dec
xor
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
outs
imul
push
(bad)
jne
fist
xor
dec
popa
jae
push
or
ds
imul
ja
outs
data16
pusha
aam
inc
gs
jne
je
add
sbb
fadd
xchg
ret
sub
out
cdq
loopne
mov
and
shl
sub
stos
ror
or
add
test
or
pushf
mov
out
push
push
mov
fadd
mov
daa
fimul
adc
and
add
test
sbb
les
mov
jle
cmp
jnp
jmp
add
or
cmp
push
rol
jge
add
in
pop
aas
pop
sub
mov
push
push
addr16
imul
add
gs
data16
mov
arpl
or
outs
mov
ins
icebp
ficomp
or
or
mov
adc
inc
xor
pop
mov
mov
mov
aam
mov
jno
fnsave
ds
or
push
imul
add
jmp
(bad)
ins
xor
lock
sbb
stos
cmps
das
push
inc
inc
aas
jl
pushf
je
xor
push
mov
call
arpl
xor
xor
and
je
in
ror
mov
sti
mov
push
imul
mov
jmp
adc
cmp
inc
mov
shl
or
push
pop
ja
or
push
add
inc
je
add
or
inc
inc
push
jo
xchg
inc
loop
jmp
pop
lea
add
adc
inc
inc
pop
nop
push
nop
or
mov
lahf
arpl
add
int3
rcr
pop
inc
retf
push
aad
pop
jp
jno
loopne
pop
cmp
ins
repz
sub
push
add
in
jle
mov
into
cdq
add
push
outs
push
jnp
cmp
dec
and
pop
dec
jae
push
sub
mov
mov
xor
and
adc
das
jge
pushf
cwde
lods
loopne
mov
mov
retf
loope
scas
push
ret
das
hlt
push
jg
pop
bound
jg
cmp
rol
push
loopne
and
inc
repz
cs
inc
xor
dec
push
cmp
add
nop
fs
adc
inc
cmp
clc
cmp
push
inc
bound
cmp
retf
inc
or
fisttp
inc
or
or
shl
push
add
or
xchg
pop
pop
jns
andnps
add
mov
xchg
mov
add
repnz
cld
cmp
enter
fsubr
out
mov
jle
neg
push
xchg
lods
add
add
aas
sub
enter
xor
inc
js
gs
mov
ja
mov
xlat
pop
xor
daa
lock
fiadd
adc
mov
cs
mov
or
addr16
dec
gs
outs
push
add
fistp
sbb
test
ins
push
jne
inc
jae
aas
add
sub
add
test
mov
dec
push
or
push
popa
ins
jne
sub
or
arpl
pop
sub
mov
and
mov
sub
ret
push
mov
imul
rol
push
jns
gs
push
xor
jb
push
outs
imul
outs
or
push
sbb
push
adc
out
push
cwde
add
mov
xor
and
jns
fist
push
arpl
sub
into
aad
cmp
arpl
fnsave
imul
inc
ret
loopne
inc
pop
cmps
popf
jge
jl
push
cmps
push
dec
dec
das
mov
(bad)
push
inc
sub
sub
adc
rol
xor
sub
pusha
and
lods
(bad)
jne
hlt
clc
dec
mov
or
sub
outs
daa
and
ret
or
popa
jp
push
pop
sub
xchg
adc
fcomp
or
gs
in
rcr
loopne
pop
pop
inc
inc
arpl
jae
xor
movs
mov
inc
(bad)
imul
outs
jb
cs
loopne
out
cpuid
sub
es
dec
pop
dec
push
in
jb
imul
bts
sbb
cmp
sbb
push
dec
inc
sahf
pushf
pushf
pushf
jge
mul
dec
dec
dec
dec
inc
push
popf
idiv
xor
vmwrite
cmp
inc
jl
in
pushf
pushf
mov
push
imul
(bad)
sbb
daa
daa
daa
and
aad
enter
push
jns
or
leave
leave
leave
push
cdq
loope
rcr
sbb
mov
jnp
ror
push
inc
test
aaa
add
dec
ret
mov
dec
in
pop
inc
loope
aaa
mov
daa
das
xor
outs
jns
jecxz
les
or
jp
ss
dec
or
push
in
add
mov
adc
pop
jle
pop
loopne
imul
mov
inc
cmp
cmp
imul
mov
popa
inc
popa
test
xlat
push
push
mov
jae
js
add
in
scas
add
jo
adc
rol
xlat
or
imul
dec
and
leave
inc
jmp
jl
xor
push
pusha
and
add
call
add
cdq
ds
pop
and
je
clc
push
jp
and
cmp
(bad)
aam
inc
jo
or
(bad)
jns
rol
xor
cmp
mov
in
jo
jae
inc
sub
das
or
and
fs
inc
or
push
jo
sub
imul
jo
add
(bad)
push
push
test
jmp
sbb
push
xor
pop
rcr
pusha
dec
outs
popa
fs
or
xchg
mov
std
ds
dec
mov
add
mov
jbe
and
dec
ins
outs
aam
hlt
fst
adc
push
push
icebp
mov
add
pop
dec
into
outs
push
sub
popaw
outs
cmp
jle
pop
inc
lea
fmul
ins
das
sar
or
add
imul
push
adc
rcl
xor
into
test
pop
add
enter
fstp
cld
out
sub
inc
jne
data16
dec
and
pop
push
mov
fcom
or
xor
inc
and
sti
xor
imul
js
imul
add
jbe
jae
cmp
push
mov
or
ins
(bad)
lock
push
adc
ins
or
sub
outs
dec
jno
cmp
inc
add
pop
fadd
outs
fisttp
shl
pop
and
inc
ins
ret
mov
leave
shr
pop
test
inc
jg
add
jo
rcr
dec
and
adc
jae
test
and
ins
popa
arpl
cmp
jmp
sbb
add
inc
push
push
jo
or
test
dec
adc
pop
inc
gs
outs
and
rol
push
loopne
jno
and
pop
test
nop
mov
push
outs
(bad)
mov
fs
cmp
sbb
cmp
push
and
jbe
or
scas
xlat
sti
adc
jo
setae
inc
loope
add
dec
or
inc
stc
mov
jb
mov
jo
inc
inc
add
ins
mov
mov
push
test
add
imul
cmp
rcl
xchg
sub
(bad)
sub
lods
lea
ror
push
add
or
ret
out
sbb
dec
add
dec
rcl
ja
push
call
add
xor
jl
pop
jnp
mov
dec
xor
cmps
in
js
pop
or
mov
enter
imul
add
lea
nop
dec
add
mov
loope
es
sub
xchg
or
sub
sbb
aas
xchg
inc
out
retf
mov
(bad)
rol
xchg
dec
jae
mov
jo
call
adc
daa
mov
ins
dec
and
ins
inc
or
int3
pop
pop
retf
push
mov
clc
dec
stos
mov
mov
(bad)
jbe
push
mov
or
xor
cdq
js
call
pop
pop
mov
test
je
cmp
jne
jnp
pusha
(bad)
shl
add
(bad)
dec
je
push
push
mov
adc
sbb
test
dec
popa
or
or
mov
dec
add
jbe
push
add
sar
mov
adc
jmp
add
add
add
or
call
push
jbe
call
mov
mov
mov
cli
xchg
jne
xchg
xor
test
inc
mov
push
xchg
sub
add
or
push
hlt
inc
test
lock
add
dec
dec
call
outs
loopne
or
push
lock
push
jg
call
mov
movzx
mov
jge
xor
jmp
jnp
outs
mov
adc
ja
ja
data16
data16
sbb
jle
pusha
add
lods
mov
sbb
dec
jne
cmp
jl
lea
test
ret
jmp
sub
shr
mov
pop
fimul
push
adc
stos
adc
inc
inc
sbb
add
add
inc
or
and
push
or
loope
push
cmps
adc
sbb
xor
adc
sbb
jne
mov
icebp
out
sbb
and
adc
mov
push
ret
mov
test
in
xchg
mov
shl
cmp
push
push
dec
mov
and
dec
xchg
nop
inc
cmp
ja
into
sbb
aaa
or
lock
fs
mov
inc
adc
fcom
mov
xor
mov
sub
iret
push
fcomp
cmp
mov
pusha
test
clc
leave
je
shl
inc
or
outs
cmp
arpl
addr16
mov
xor
lock
mov
jo
dec
and
lahf
push
fcom
jo
dec
xor
fidiv
test
hlt
xor
pop
add
popf
sub
jle
and
or
iret
sub
(bad)
out
push
adc
jg
push
mov
sti
inc
rcr
mov
sbb
shl
fucomip
daa
adc
fidiv
push
adc
loopne
push
test
push
dec
outs
xor
fcomip
inc
mov
xchg
and
inc
loope
sbb
xlat
rcl
xor
mov
cmp
xor
mov
rol
retf
xor
mov
jmp
inc
imul
add
jb
cli
push
lock
jle
setne
test
je
push
clc
loopne
sbb
cld
dec
mov
mov
test
cwde
inc
dec
cmp
dec
xor
jle
inc
push
add
pop
pop
test
and
pop
push
or
hlt
inc
arpl
enter
push
cld
mov
(bad)
or
jecxz
add
fnstcw
sahf
mov
add
and
or
sub
or
pushf
mov
ins
fadd
(bad)
iret
in
enter
or
fist
(bad)
push
retf
lds
cmp
sti
adc
call
push
retf
les
dec
movs
pop
sub
mov
xor
pusha
out
out
scas
aad
adc
fisttp
stos
add
fcom
pop
sub
in
out
push
xor
in
test
sti
pop
ror
push
enter
test
je
or
sub
inc
mov
add
dec
add
inc
int3
retf
leave
xor
into
xchg
ret
pop
mov
int3
shr
stos
xor
fld
push
les
loopne
mov
xor
test
ss
and
mov
test
add
cmp
sbb
and
lods
vandnps
jns
mov
add
pop
inc
mov
inc
adc
jo
and
imul
sbb
add
pop
or
mov
jb
jecxz
and
xlat
iret
daa
hlt
or
lods
inc
xor
or
loopne
loopne
call
mov
jl
jae
or
inc
or
jbe
jp
sub
enter
xchg
fcomp
sbb
adc
jp
or
push
cmp
cmp
jne
mov
add
or
xlat
enter
mov
xchg
aad
test
mov
inc
jo
pop
adc
push
mov
jo
sar
cld
xchg
mov
jg
dec
test
jl
inc
xor
pop
fdivr
hlt
push
adc
inc
scas
lds
(bad)
adc
ja
(bad)
ror
call
inc
dec
jne
mov
call
inc
mov
loope
xor
fmul
mov
pusha
push
clc
add
loopne
std
ret
xor
adc
inc
dec
mov
fsubr
inc
add
push
or
push
add
push
inc
pop
push
addr16
nop
fld
sbb
sbb
or
call
push
dec
push
push
ss
add
out
jbe
add
inc
push
popaw
cmps
or
out
cmp
xor
mov
sub
and
inc
push
add
jg
cwde
cdq
test
adc
es
cdq
fld
addr16
lahf
push
xor
jb
mov
inc
xor
mov
shr
add
add
push
out
inc
cmp
in
cmp
xlat
xor
in
or
sbb
mov
sbb
push
push
lods
push
mov
push
push
sbb
inc
and
stos
push
lods
dec
cmc
aad
sbb
fbstp
ins
add
adc
mov
and
cmp
nop
xchg
inc
(bad)
mov
push
js
inc
lods
jmp
or
pop
ret
add
mov
dec
bound
in
dec
fist
stc
mov
ins
aad
cli
sahf
fucomip
add
inc
pusha
add
cmc
xchg
add
add
pop
add
adc
add
cwde
xchg
imul
ficomp
int3
jle
retf
sar
jns
rcl
bound
push
push
outs
push
xor
mov
xchg
sub
or
js
cmp
add
mov
xchg
sub
xlat
xchg
push
call
xchg
pop
adc
test
and
sbb
cmp
sbb
in
rol
ins
mov
dec
in
xchg
sub
rcl
popf
push
xchg
in
clc
in
rcl
push
jmp
sub
dec
(bad)
xlat
out
mov
adc
cmp
jle
div
jb
jb
je
dec
inc
sbb
out
mov
xchg
or
cmp
adc
fwait
adc
std
(bad)
jmp
lods
and
adc
push
fwait
sub
mov
iret
(bad)
(bad)
pop
fwait
je
jnp
test
mov
sbb
adc
lock
pusha
sbb
ja
mov
add
mov
dec
mov
jmp
cmp
or
xchg
ret
es
xchg
loop
jno
jmp
mov
sahf
imul
or
out
xchg
add
outs
add
cmp
daa
jmp
push
das
push
mov
push
push
lea
mov
fidiv
pop
jle
fimul
lea
xor
mov
jl
add
mov
sbb
stos
lock
aas
movs
ds
mov
rol
push
je
inc
mul
hlt
or
or
add
sub
xor
(bad)
push
pop
nop
push
fild
dec
(bad)
add
jne
add
pop
hlt
sbb
mov
pop
or
sbb
fwait
push
dec
push
inc
mov
xchg
leave
loop
mov
pop
scas
dec
add
mov
cmp
aaa
into
hlt
imul
add
hlt
jne
cmp
jg
pop
push
(bad)
adc
sti
sub
inc
das
nop
loopne
fidiv
(bad)
push
mov
inc
or
push
adc
sbb
sbb
je
add
xchg
inc
clc
call
xchg
cmp
sar
out
outs
sbb
retf
mov
fcom
inc
or
into
or
dec
lock
repz
fnstcw
ret
push
or
fsub
mov
mov
pop
cld
cmp
sbb
aam
cmp
adc
mov
cmp
add
xor
icebp
ror
or
and
pop
mov
fcom
fadd
pop
clc
rcr
jno
call
cmp
repz
lock
xchg
cmp
push
sbb
cmp
cmp
cld
in
pop
sbb
push
mov
pop
ins
mov
and
adc
pusha
test
sbb
add
mov
push
lock
sub
(bad)
or
push
rol
cdq
xchg
cdq
test
xor
pop
sbb
push
adc
push
sbb
fcom
mov
scas
xchg
or
or
pop
sub
or
ss
(bad)
ds
clc
cmp
je
xor
mov
cmp
out
jecxz
jmp
jg
dec
out
xor
out
int3
dec
inc
mov
push
out
mov
pusha
add
ds
sbb
sub
dec
ret
sbb
das
or
adc
cmp
add
aaa
xchg
imul
aam
adc
bound
nop
xlat
aaa
xchg
and
mov
inc
pushf
and
sbb
popa
or
rcl
add
mov
sbb
or
pop
push
push
fcomp
setne
icebp
adc
mov
mov
sti
mov
sbb
mov
pop
loopne
xchg
pop
sbb
jne
and
clc
dec
cmp
push
lock
jle
fstp
cmps
rcl
mov
and
pop
ds
and
push
fistp
push
push
cmp
push
xor
fdivr
jl
sbb
and
out
push
lea
or
ror
xchg
adc
sbb
jmp
iret
jno
xor
add
js
mov
out
jno
loopne
(bad)
jmp
pop
push
jo
sbb
pop
fidiv
ins
jbe
jo
data16
add
xor
mov
dec
shr
xchg
push
jge
sub
push
adc
cwde
and
inc
push
and
mov
add
cmp
jg
ret
rcr
or
icebp
aas
shr
pusha
rol
add
and
movs
cmp
cmps
jb
into
cmp
mov
lock
pop
je
push
rcr
mov
mul
mov
call
and
xor
mov
adc
mov
adc
add
dec
loop
cld
call
inc
dec
jne
adc
pop
pop
loopne
clc
loope
pop
dec
and
f2xm1
xchg
das
and
loope
sub
outs
mov
mov
jo
push
call
xor
ja
xchg
pop
mov
or
mov
nop
rcr
sbb
mov
jmp
rol
push
fmul
inc
shr
adc
lods
ficomp
sahf
adc
fcom
push
mov
shr
add
or
js
inc
dec
cmp
lds
adc
pop
rcr
enter
cmp
push
fsub
popa
fsub
arpl
pop
xchg
iret
fs
cwde
add
add
push
jne
mov
and
outs
in
cmp
push
shl
cmp
jb
dec
fmul
test
sbb
cdq
call
out
sbb
cmps
jecxz
jns
test
lds
rcr
or
cmp
add
movs
push
pop
imul
enter
test
pusha
retf
push
lahf
sub
(bad)
mov
jbe
loop
and
pcmpeqw
lods
je
push
xor
jo
add
inc
call
jge
mov
xor
push
fisttp
mov
call
sbb
ficom
loope
pop
cmp
cmp
pusha
xor
push
test
push
es
(bad)
data16
ja
in
in
jne
ins
fsub
aas
pop
inc
push
(bad)
adc
add
aaa
inc
xor
mov
dec
add
scas
ins
aaa
(bad)
jge
(bad)
es
push
add
jp
dec
dec
mov
sub
mov
lods
les
xchg
mov
sub
mov
inc
add
add
int
mov
or
dec
cs
inc
sub
or
ss
iret
pop
xor
push
ss
push
jle
or
data16
aas
mov
add
dec
repz
push
push
or
add
dec
imul
mov
mov
daa
test
test
or
or
(bad)
int3
int3
jp
jb
push
adc
(bad)
mov
test
outs
loop
pusha
data16
call
add
aas
add
mov
fld
or
loope
sbb
iret
call
data16
scas
cs
xor
outs
cmps
add
xor
out
ja
cmp
add
mov
dec
push
sub
push
dec
add
sub
xchg
and
scas
xor
out
add
fmul
aaa
push
or
pop
ss
inc
inc
pusha
pushaw
or
inc
aas
push
jmp
mov
cmps
inc
mov
ss
xor
mov
pop
and
bound
xchg
ja
call
cs
xor
push
pusha
mov
inc
mov
aaa
mov
fcmovnb
pusha
outs
dec
mov
aaa
test
sub
pop
xor
cmp
aam
call
loop
mov
(bad)
sub
adc
addr16
ja
fs
sbb
fstp
push
jae
xor
jbe
fcmovnu
ret
jo
mov
dec
popa
mov
sahf
repnz
pushf
shr
scas
xlat
cli
mov
jp
jae
sub
stos
xor
adc
and
stos
sub
xor
xchg
rol
jmp
iret
push
cs
add
call
sub
mov
mov
mov
pop
pop
aas
cmp
nop
bound
or
rol
ja
test
fmul
aas
jg
add
jnp
add
push
mov
cmp
inc
pop
lods
ins
test
mov
adc
jbe
inc
inc
aaa
sbb
add
out
dec
add
ja
cmps
jo
(bad)
outs
xchg
inc
push
test
aas
push
loope
xor
int3
popa
dec
sbb
pop
ret
pop
aaa
daa
sar
push
inc
pop
sbb
aas
fist
xchg
or
push
pop
pusha
push
cmp
push
pop
aaa
lea
inc
out
cmp
push
jo
outs
pop
ja
push
sbb
mov
pop
sub
scas
dec
jecxz
ret
aas
scas
push
or
daa
mov
sbb
add
test
imul
push
mov
(bad)
aas
rcl
in
sbb
mov
pusha
mov
fnstsw
clc
ret
xlat
xlat
add
sbb
cs
add
dec
cmp
adc
sub
pop
aaa
cwde
add
adc
xor
mov
mov
aas
push
aas
mov
jae
jg
push
stos
mov
adc
pop
aas
push
cmp
cmp
or
adc
rcl
adc
outs
out
dec
adc
pop
loopne
shl
jg
xor
add
rcl
and
(bad)
loopne
sub
cwde
xchg
push
fimul
iret
retf
or
das
dec
cmp
popa
jecxz
iret
dec
pop
add
adc
pusha
push
ja
jmp
and
add
pop
pop
pop
sbb
cmps
aas
mov
mov
inc
and
pop
mov
push
addr16
sub
pop
inc
mov
inc
pusha
test
aaa
inc
test
int3
ret
(bad)
cmps
mov
cmp
ins
add
xlat
inc
cwde
add
dec
sub
cmps
sbb
and
scas
out
sbb
pop
inc
mov
add
xchg
add
cwde
test
out
xchg
leave
sub
dec
bound
retf
das
and
test
je
add
movs
xor
jnp
cdq
push
mov
rol
sub
mov
xchg
sbb
xchg
dec
mov
inc
push
(bad)
es
addr16
iret
push
adc
pop
jmp
movs
dec
rcr
and
js
push
aas
out
rcl
inc
loopne
adc
scas
pop
xor
inc
inc
fiadd
maxps
add
push
test
jg
loopne
jo
jnp
lock
out
xchg
pop
pusha
sub
xlat
xchg
and
or
jae
adc
cmp
inc
sub
outs
and
inc
inc
push
xchg
pushf
rcr
dec
mov
or
push
out
push
retf
push
dec
jo
test
xlat
aaa
adc
adc
daa
xor
adc
rcl
aas
aas
jle
adc
adc
iret
pop
ds
cmp
ret
pop
or
call
scas
aaa
(bad)
or
or
fld
dec
mov
rol
out
ds
fs
pop
aas
daa
aas
push
adc
dec
scas
lahf
dec
jge
sbb
add
mov
test
inc
add
xchg
mov
mov
mov
call
verr
inc
mov
rcr
nop
repz
mov
sub
mov
ret
sub
pop
dec
mov
js
cs
sub
or
rol
push
mov
mov
add
bound
inc
add
dec
pop
and
call
ficom
push
sub
push
adc
pop
mov
sub
pop
fsubr
push
mov
add
pop
jo
xchg
test
pop
push
add
mov
pop
das
or
test
and
push
mov
push
inc
dec
cmps
aas
adc
and
add
dec
xlat
and
xlat
xchg
popa
or
mov
xchg
mov
movs
and
fadd
lods
add
cmp
push
test
push
jmp
sub
and
sbb
adc
push
dec
push
pop
push
pop
into
xlat
ins
push
mov
sbb
(bad)
rcr
ret
mov
mov
or
and
das
jns
je
push
inc
mov
les
add
inc
add
pop
aaa
mov
xchg
out
add
mov
push
cmp
rcl
push
push
dec
shr
les
adc
lea
jecxz
mov
pop
add
dec
imul
aas
or
loopne
xchg
jnp
dec
inc
or
cmp
test
aas
aaa
add
bound
lds
xchg
xchg
push
fcomp
sub
dec
je
xchg
pop
out
add
out
pop
stos
rcl
jno
cmps
push
sub
pop
retf
add
jp
out
add
dec
fisubr
aaa
mov
ins
adc
xlat
or
add
inc
and
or
xchg
or
push
aas
inc
ds
push
and
mov
aam
jbe
dec
rcl
add
push
stos
dec
ret
enter
push
push
(bad)
retf
cs
outs
push
cs
aas
ret
adc
cmp
push
pop
stos
xchg
mov
fcomi
add
or
movlps
mov
mov
adc
add
push
sar
(bad)
mov
xor
lea
add
dec
(bad)
bound
dec
adc
adc
stos
xchg
push
sbb
mov
test
mov
push
push
xchg
popa
adc
add
movs
xchg
pop
jb
test
cmovbe
or
inc
pop
or
inc
pop
dec
push
push
aas
pusha
jo
inc
pop
cli
push
add
nop
xchg
mov
add
cmp
sbb
inc
or
mov
or
aas
aas
add
add
dec
mov
mov
xor
push
add
fdiv
rcl
cwde
(bad)
(bad)
mov
mov
lea
mov
call
mov
mov
mov
jne
xor
inc
cmp
(bad)
call
ror
mov
push
cmp
jne
mov
jmp
adc
ins
mov
test
je
dec
hlt
imul
push
out
mov
lods
popf
int
pusha
mov
push
jo
jbe
or
adc
mov
jl
sbb
mov
sbb
pushf
(bad)
jmp
mov
lock
or
pop
pop
pop
pusha
adc
jl
mov
fcmove
adc
(bad)
cmovs
jmp
jmp
mov
xor
ret
pop
mov
pop
ret
pop
sbb
test
outs
and
xor
inc
es
xor
xor
add
xchg
xchg
aam
push
mov
mov
ja
push
xchg
cmp
hlt
lods
or
xadd
add
(bad)
retf
lock
add
in
call
in
mov
pusha
cmp
inc
cli
sub
ret
pop
pop
pop
pop
jg
dec
mov
or
adc
fld
add
add
jle
inc
mov
push
inc
jmp
or
inc
or
retf
xchg
mov
adc
push
or
xor
lea
retf
aaa
into
clc
adc
loope
push
(bad)
mov
out
sbb
outs
add
or
push
jno
fsubr
jne
push
stc
push
rol
jmp
out
sbb
xchg
js
inc
fdivr
mov
nop
cmp
ins
rcl
add
push
lsl
cmp
cmp
cmp
cmp
or
or
cmp
cmp
pushf
pushf
pushf
mov
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
pushf
pushf
pushf
pushf
std
(bad)
jmp
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
rcr
rcl
pushf
pushf
pushf
pushf
aad
xlat
fcomp
fcmovnu
pushf
pushf
pushf
pushf
fstp
ffreep
pushf
pushf
pushf
pushf
rol
les
(bad)
enter
pushf
leave
retf
pushf
pushf
pushf
pushf
int
iret
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movs
cmps
cmps
test
pushf
pushf
pushf
test
pushf
pushf
pushf
lods
scas
scas
nop
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
cwde
cli
pushf
pushf
pushf
cdq
call
cmps
mov
cmovle
jge
out
enter
add
push
fsubr
stc
cmp
imul
push
rol
push
cmps
test
lods
add
add
cmovne
jbe
ins
imul
iret
int
or
sub
add
mov
not
ins
sub
add
push
and
jnp
lahf
pop
hlt
das
cli
push
fidivr
dec
jo
adc
outs
add
cmp
jnp
add
push
or
jae
bound
dec
lock
adc
jbe
inc
push
dec
popa
outs
fs
bound
or
jnp
retf
mov
add
xor
(bad)
pushf
sbb
mov
push
and
or
imul
mov
jl
je
add
push
mov
push
je
xchg
pop
inc
sar
pop
inc
push
xchg
aam
lock
dec
popa
ins
inc
enter
dec
ror
and
inc
mov
loopne
fcom
cmp
ja
cmp
push
outs
jp
push
sahf
jae
add
in
outs
je
sbb
or
push
inc
popa
imul
out
gs
mov
out
or
push
sbb
mov
inc
ins
je
pusha
sub
outs
lods
gs
mov
push
in
fimul
dec
outs
js
pop
xor
or
inc
ins
popa
arpl
shl
mov
pop
js
ins
dec
outs
jo
je
ss
ins
ins
inc
push
jns
sbb
(bad)
ins
dec
add
addr16
and
imul
adc
xor
pop
mov
or
ficomp
pop
outs
jb
pop
adc
(bad)
mov
cmc
push
mov
daa
loop
rcr
push
inc
cmc
add
scas
ret
add
cmps
adc
lds
mov
push
inc
jb
jmp
call
push
push
mov
dec
mov
jp
loopne
outs
pop
xchg
arpl
inc
inc
imul
cs
inc
outs
jb
jae
shr
jo
into
mov
pop
rol
dec
adc
rol
inc
and
xor
ja
out
shl
add
mov
dec
mov
lock
adc
push
outs
jne
arpl
sti
in
gs
sbb
or
imul
fdivr
mov
pop
add
add
or
gs
sub
pop
adc
test
and
dec
das
or
jo
enter
sub
in
ret
inc
pusha
jecxz
xor
mov
in
mov
and
test
push
test
pop
add
sbb
jnp
pusha
ror
sub
push
sub
jo
jle
add
push
stc
push
cmp
dec
movs
cs
ror
in
pusha
fwait
and
push
add
add
nop
or
pop
outs
(bad)
inc
dec
outs
bound
push
or
sub
loop
es
or
dec
pop
sbb
lock
inc
std
ret
mov
add
dec
bound
arpl
sub
adc
(bad)
jge
push
push
out
fs
lock
gs
data16
fild
add
push
mov
dec
mov
mov
movs
jmp
xor
inc
dec
call
pop
mov
inc
cwde
mov
call
push
cmps
dec
mov
xor
pop
mov
cmovns
dec
mov
loop
imul
pop
cmps
inc
rcl
sahf
inc
ss
xchg
add
scas
cmp
jmp
add
pop
cmps
iret
jmp
cmp
cmps
push
push
add
sub
ret
and
inc
outs
cmps
inc
pop
scas
or
sbb
cmps
xchg
push
js
in
sar
and
add
cmps
scas
rcr
neg
adc
inc
div
mov
mov
push
imul
cmp
sub
mov
test
inc
enter
sbb
ror
push
dec
loopne
add
retf
and
add
mov
fadd
xor
ret
ret
daa
mov
mov
jno
inc
stos
je
jns
fcomp
sbb
cmps
push
inc
jmp
xor
dec
or
or
or
push
sar
dec
cmp
adc
pop
sbb
mov
in
sbb
and
loope
or
aaa
fs
push
call
or
nop
add
or
scas
ss
aas
(bad)
jns
in
imul
fsubr
shr
jo
(bad)
jg
cli
mov
adc
add
add
call
add
mov
jl
add
fdivr
clc
ret
push
cmp
jp
test
pushf
xor
jge
cmp
pushf
add
add
popa
adc
imul
add
daa
fadd
mov
inc
fsubp
gs
inc
inc
inc
inc
and
inc
pop
outs
daa
mov
mov
inc
aaa
clc
or
adc
jne
fs
xor
bound
clc
dec
or
cmp
cs
popf
cmp
mov
or
(bad)
mov
inc
stos
push
jl
xchg
das
mov
sbb
imul
adc
push
xchg
imul
cdq
jg
enter
jg
xor
mov
push
fst
in
jl
jge
dec
dec
dec
outs
xor
jge
xor
cwde
push
jl
jge
push
ins
dec
jge
ror
mov
fmul
push
xchg
cmp
cmp
imul
imul
adc
push
xchg
sub
cmp
or
sub
pop
jnp
cld
aas
jbe
sbb
add
stos
popf
pop
push
xchg
in
jg
mov
or
fadd
rcr
sbb
add
pop
jno
jo
nop
das
scas
push
cmp
cmp
add
adc
daa
mov
add
fisttp
cmc
loop
push
pop
add
cmc
push
jns
pop
push
mov
mov
push
dec
adc
pusha
mov
stc
dec
add
inc
sbb
aaa
sti
sub
ret
mov
adc
push
stos
xchg
loop
or
or
and
adc
rol
mov
neg
loopne
add
sub
pop
jnp
and
mov
idiv
jno
stc
lods
fdivr
rol
xor
or
jle
push
inc
imul
adc
data16
call
adc
or
xor
add
fnstsw
push
inc
sahf
jbe
pop
push
loop
idiv
cmp
cdq
inc
ss
add
xchg
or
adc
call
or
fdivr
aaa
enter
jle
les
outs
fnstcw
data16
outs
push
out
nop
in
pop
int3
sub
sbb
inc
inc
and
popf
pop
push
outs
test
pushw
je
outs
ins
or
out
arpl
ret
cmp
in
ss
xchg
or
mov
mov
sbb
lock
scas
imul
std
ret
aaa
lods
cwde
push
jo
push
popa
bound
fisttp
pop
enter
and
outs
addr16
pop
js
and
ja
adc
call
outs
inc
cmp
pusha
outs
push
push
add
js
adc
mov
push
je
sbb
sbb
call
ins
or
sbb
jo
or
pop
or
push
mov
imul
hlt
mov
das
rol
mov
inc
shr
jns
cmps
jo
outs
pusha
add
scas
inc
lea
cld
ins
jo
adc
pop
ret
lds
or
cmp
and
out
push
in
add
mov
cmp
pop
push
lea
inc
mov
ss
push
das
adc
inc
lds
add
outs
mov
cmps
sub
mov
in
clc
ret
daa
push
or
ins
popa
lods
lock
in
pop
test
cld
add
(bad)
dec
xor
push
add
add
nop
retf
prefetch
xor
push
add
lock
rcpps
adc
fst
add
mov
or
cmp
retf
mov
mov
adc
mov
movhps
xchg
push
into
rsqrtps
ja
(bad)
mov
cs
push
sbb
push
sbb
bndstx
and
jbe
nop
xchg
fucomp
xchg
das
push
add
pop
add
mov
jnp
mov
mov
cli
das
dec
mov
bsf
(bad)
das
push
mov
(bad)
(bad)
lock
pushf
mov
inc
iret
leave
imul
push
sbb
adc
pop
int3
scas
add
mov
add
or
sbb
ins
ja
test
push
add
pop
push
pop
pop
mov
mov
xor
out
pop
ficom
xor
sbb
add
push
add
pop
push
jbe
mov
inc
mov
or
sbb
add
add
movs
jnp
or
push
push
mov
mov
mov
add
mov
mov
(bad)
es
gs
data16
sub
cmp
or
in
inc
in
mov
add
add
daa
test
out
cmp
or
gs
or
aam
add
ficomp
ror
or
sbb
test
ja
dec
add
lds
and
mov
add
cmp
fst
ins
xor
popa
xchg
sar
int
xchg
add
arpl
add
cmp
fdiv
fs
sub
leave
jp
out
adc
inc
jne
add
adc
sbb
or
shl
popf
inc
sbb
add
mov
call
test
add
sbb
jne
call
inc
loopne
sub
mov
cwde
std
shl
clc
adc
das
sub
mov
pop
inc
add
fadd
movzx
and
cwde
jl
pop
jae
shl
dec
outs
jbe
addr16
or
imul
mov
sbb
or
lock
pusha
or
sar
or
or
add
push
ins
ror
sub
outs
mov
cmp
cmp
sub
inc
gs
repnz
jae
xor
cmp
dec
(bad)
ret
add
or
cdq
pushf
jno
fld
xor
adc
test
push
shl
daa
daa
add
pop
lock
div
jae
imul
push
fs
shl
pop
ins
sbb
test
ins
sbb
popf
inc
cmp
add
and
and
sub
test
hlt
inc
mov
add
or
loopne
xor
add
sar
mov
aad
imul
ins
cmps
js
or
(bad)
clc
rcl
push
mov
inc
(bad)
add
cmp
mov
jp
xchg
xchg
jl
pop
stos
rcl
xchg
push
test
pushf
test
into
xchg
jo
pushf
or
adc
push
adc
data16
mov
inc
jno
imul
and
or
mov
imul
sbb
sub
inc
ins
data16
out
mov
mov
push
adc
push
rcl
shr
lock
add
xor
lds
out
dec
add
inc
and
push
(bad)
push
(bad)
jne
sub
cwde
rol
pop
or
rol
jo
adc
and
call
push
add
js
xchg
and
loop
push
ja
outs
add
or
scas
add
sub
or
test
pop
adc
mov
adc
(bad)
push
imul
outs
jae
inc
test
xor
or
push
push
inc
or
(bad)
aam
adc
add
leave
leave
enter
jmp
leave
leave
leave
leave
fcmovnbe
retf
ret
leave
leave
leave
leave
mov
leave
leave
leave
fwait
xchg
mov
jnp
imul
leave
leave
pop
push
dec
inc
lods
push
into
leave
cmp
lock
add
imul
icebp
mov
add
ror
mov
(bad)
lods
pop
push
fisttp
xchg
fmulp
and
repz
push
lock
(bad)
sar
call
cwde
loopne
repz
cmp
hlt
sub
adc
cmp
jo
cld
inc
and
lock
push
push
movs
cld
cmp
mov
fdivp
cmp
mov
xor
cmp
mov
fdivp
push
push
and
pushf
and
add
push
and
and
cmp
inc
imul
xabort
and
das
sub
inc
pop
add
pusha
inc
and
in
cmp
and
and
inc
daa
(bad)
sbb
ja
dec
lods
jge
adc
lock
xchg
jo
ret
in
jo
pop
add
(bad)
int3
and
sub
sahf
fimul
dec
jo
prefetch
push
ret
push
sub
sbb
xor
bound
lds
adc
repnz
adc
jmp
inc
(bad)
(bad)
cs
adc
fst
add
in
leave
outs
aas
push
push
scas
jnp
sbb
mov
mov
stc
sbb
cmp
sbb
jno
test
repnz
leave
movd
xlat
cs
and
lahf
and
pop
clc
mov
bsf
(bad)
add
les
movs
pop
add
es
cmp
add
mov
dec
or
xchg
inc
or
jne
add
mov
cmp
cmps
mov
inc
mov
add
mov
or
mov
test
rol
or
sub
inc
mov
scas
sub
push
or
add
mov
xchg
push
out
cmp
push
or
mov
jno
in
in
mov
xchg
push
inc
gs
sub
jmp
and
movs
adc
sbb
pop
pop
sub
add
movs
dec
or
in
and
pop
pop
cwde
in
xor
sub
jge
aam
(bad)
ss
and
add
mov
sbb
adc
lea
or
sbb
jbe
mov
or
daa
inc
sahf
(bad)
xor
ret
add
jmp
jb
loope
je
add
ja
cdq
mov
add
add
add
pop
cdq
jno
popa
add
adc
rol
cdq
or
cmp
jmp
xchg
pop
int
jae
and
into
cmp
pop
sub
mov
leave
test
add
fld
mov
sub
sub
dec
sub
and
dec
jae
mov
adc
inc
adc
jno
lea
sbb
test
or
xchg
sbb
mov
adc
sbb
daa
pop
push
add
pusha
mov
mov
pop
call
mov
sbb
scas
xor
cld
inc
aas
pop
(bad)
sbb
int3
push
test
mov
bound
inc
jecxz
jmp
nop
cmp
fadd
scas
add
in
mov
add
pop
or
add
fisub
rcr
cld
adc
adc
push
push
jb
sub
dec
retf
jnp
stos
adc
sti
cmp
jo
adc
xchg
aam
push
outs
and
adc
add
shr
bound
or
dec
push
mov
push
es
or
dec
bound
fst
or
add
xor
inc
add
inc
jns
or
cli
dec
push
dec
outs
ja
inc
outs
cwde
data16
push
add
push
cmps
add
addr16
ds
cmp
hlt
js
or
jno
sub
add
dec
adc
ja
fsubr
pop
nop/reserved
ret
xchg
jbe
imul
mov
int3
add
push
mov
mov
xchg
ret
outs
not
and
fmul
or
cmp
mov
cli
call
retf
int3
add
xchg
cmp
inc
cmc
push
dec
(bad)
add
adc
mov
sbb
ror
fisttp
cs
sbb
hlt
lock
push
add
imul
push
sub
cs
dec
loopne
clc
pop
xchg
pop
inc
push
popf
fs
xchg
jnp
mov
scas
push
hlt
dec
loope
and
sar
nop
mov
push
(bad)
adc
push
sbb
pop
mov
mov
inc
push
sub
jle
aas
inc
pop
push
and
mov
push
pop
xchg
and
fadd
lock
push
push
daa
addr16
adc
pushf
push
xchg
adc
imul
or
push
bound
outs
or
jae
xchg
das
and
cmp
or
call
push
dec
pop
push
rcl
inc
pop
ret
adc
mov
sub
ror
sbb
sahf
sbb
call
sbb
std
push
add
int3
xor
es
and
aad
add
xor
push
inc
jno
cmp
push
cmp
dec
pop
dec
dec
xchg
aam
jae
add
movs
add
dec
outs
popa
fs
sub
jno
les
mov
cmp
sbb
jnp
mov
adc
push
ja
and
push
repz
pop
xor
dec
retf
fisubr
mov
repz
jp
repz
idiv
add
repz
scas
bound
jb
sub
mov
cmp
adc
pop
mov
pop
inc
jns
jo
fwait
add
inc
sbb
jl
clc
or
jne
sbb
rcl
dec
int
add
lods
fs
add
push
fadd
xor
pop
outs
push
imul
add
push
inc
mov
pop
in
mov
pop
test
jmp
push
jmp
retf
fnstcw
push
push
xchg
xchg
xchg
xchg
daa
dec
jae
ja
xchg
xchg
mov
out
add
add
shl
je
dec
pop
(bad)
ficom
jne
push
dec
in
lock
inc
or
bound
xchg
jle
xchg
pop
mov
pop
(bad)
mov
pop
inc
add
dec
(bad)
push
pop
pop
sbb
or
or
pusha
imul
lock
mov
mov
push
and
out
or
stos
add
int3
xor
add
mov
jne
jo
je
jle
add
arpl
xchg
pop
add
jmp
pop
ret
popf
push
jle
cmp
or
mov
fwait
pop
test
jmp
pop
jle
push
mov
fdivr
cs
cmp
mov
sub
push
popf
mov
sahf
jne
pop
aaa
inc
js
mov
cmp
push
mov
loopne
push
pop
push
mov
adc
push
sbb
sub
aaa
iret
jl
das
mov
pop
dec
dec
mov
test
add
add
push
(bad)
dec
push
popw
fsub
ret
and
add
sub
rol
add
sar
ret
sub
inc
dec
outs
loopne
ficomp
rol
mov
pop
sahf
xor
pop
fistp
jg
stos
mov
psubw
leave
inc
jne
push
clc
adc
inc
xchg
pop
mov
nop
maxps
pop
shr
(bad)
cld
call
cmps
push
add
jne
add
push
fsubr
sbb
jb
mov
add
ds
push
jnp
cmp
adc
sbb
ja
push
loopne
imul
inc
add
pop
push
loopne
xchg
stos
ja
add
addr16
movs
xor
lea
movs
push
add
ror
stos
aas
cmp
or
or
call
int3
jnp
inc
adc
addr16
add
jb
ret
jns
push
icebp
mov
inc
xor
aam
call
ror
arpl
cmp
sub
jp
or
sub
pop
in
pop
xor
cs
xor
mov
std
cmp
add
push
outs
into
rol
arpl
das
mov
adc
add
push
and
ret
xor
ret
dec
inc
aas
dec
pop
movs
ret
outs
adc
fild
adc
fisub
(bad)
cdq
imul
pop
(bad)
pop
adc
add
and
add
pushf
scas
push
lea
in
or
mov
inc
pop
sbb
pop
jo
pop
dec
push
test
push
mov
or
sbb
test
jnp
loopne
mov
je
pushaw
ret
inc
add
arpl
loop
lds
cmp
dec
cwde
xor
(bad)
(bad)
fmul
sub
add
ja
in
inc
fcomp
fsub
stc
das
pop
push
ror
mov
jo
or
pop
add
pushf
jp
popa
fwait
retf
pop
mov
adc
xor
push
or
jbe
or
push
push
loopne
sub
daa
xor
inc
ja
pop
dec
push
pop
jae
aaa
or
fwait
cmp
in
mov
enter
out
pop
cmp
pop
push
add
inc
jo
jle
xchg
fisttp
push
mov
inc
push
add
pop
push
sbb
cmp
mov
lods
jge
dec
add
sbb
pop
popa
adc
gs
(bad)
sub
outs
pop
mov
inc
push
gs
jo
push
sub
enter
push
sbb
jno
push
mov
dec
or
loope
fadd
xor
fmulp
mov
mov
fild
xchg
aam
out
inc
inc
daa
je
imul
imul
fldcw
daa
int3
pop
push
pop
clc
dec
lahf
clc
pushf
pop
daa
sub
pop
stos
int
ins
push
dec
pusha
ds
(bad)
jge
int3
bound
dec
mov
rcr
push
mov
xchg
fidivr
clc
add
xor
xchg
push
in
stos
inc
outs
loop
test
shl
enter
xlat
loope
mov
icebp
mov
mov
mov
loopne
push
loopne
sub
daa
stos
pop
shufps
les
bndldx
data16
pushf
push
mov
pop
mov
mov
ret
or
bound
push
xchg
add
dec
mov
dec
mov
cmp
in
inc
dec
jp
fcomp
stos
dec
push
movs
rol
push
pusha
(bad)
lds
ror
movs
inc
and
jbe
mov
ins
push
mov
xchg
sbb
mov
inc
and
push
push
bound
mov
or
jge
fdivr
or
push
cmp
jae
jecxz
dec
sub
mov
or
dec
xchg
test
push
dec
xchg
jns
test
(bad)
xchg
adc
xchg
cs
aad
inc
push
push
xchg
xchg
fst
jecxz
jno
xchg
and
push
call
sub
rcl
xor
xor
jmp
dec
into
add
push
sbb
or
sub
and
pop
aam
mov
or
add
xor
inc
pop
add
inc
ins
clc
test
or
jnp
dec
pop
pop
inc
rol
pop
cmp
mov
jb
mov
or
out
enter
ins
xchg
push
add
pop
lock
out
lods
jecxz
mov
dec
xchg
inc
sbb
push
dec
outs
push
cli
or
dec
inc
push
aam
jae
mov
sub
add
push
mov
push
dec
scas
push
ins
mov
mov
or
shl
dec
push
xor
inc
lahf
fadd
cmp
and
mov
aad
add
xor
cwde
jl
lds
add
add
jmp
and
push
jns
mov
shr
bound
or
add
in
pop
sub
jle
push
imul
pop
jne
sub
data16
fisttp
push
push
gs
adc
(bad)
enter
(bad)
xor
pop
sub
lock
iret
cmp
inc
jne
xor
inc
adc
jmp
out
inc
stos
xlat
lods
mov
and
out
aaa
mov
dec
fs
dec
mov
shr
movlps
ins
jne
inc
out
push
push
test
jmp
or
ss
push
dec
inc
jne
pop
inc
dec
ins
ror
loop
add
push
mov
or
push
aam
les
addr16
adc
push
mov
dec
push
call
mov
clc
test
push
mov
ins
pop
outs
mov
fcom
mov
push
mov
push
push
jbe
push
cli
fidivr
add
mov
push
cdq
xchg
or
imul
add
jo
sbb
mov
inc
add
dec
add
xor
out
jae
ss
mov
or
xor
or
push
and
cmp
mov
test
sbb
pop
add
fs
cmp
cmp
or
aas
inc
sbb
(bad)
adc
jne
cwde
push
sar
jae
jnp
cwde
sbb
cmovne
ja
clc
fisttp
pop
add
jmp
in
mov
popf
mov
jmp
inc
xchg
sbb
into
call
vmread
push
pop
pop
int3
movs
adc
test
add
xchg
xchg
sbb
dec
ss
mov
call
loopne
(bad)
pusha
movs
mov
pop
mov
sub
(bad)
iret
adc
mov
loop
cmp
in
daa
adc
sbb
add
xor
test
ins
mov
ds
mov
or
or
in
mov
adc
je
js
les
xor
popa
inc
and
adc
scas
pop
jo
adc
cwde
cmp
adc
fsub
sbb
pop
pop
pop
gs
mov
(bad)
imul
sbb
dec
leave
add
or
sbb
or
xchg
jns
loop
mov
mov
test
inc
out
xor
test
add
xor
imul
add
xor
inc
test
push
add
xor
adc
cmp
mov
adc
jmp
push
in
add
test
add
pop
xchg
or
mov
mov
fist
je
jb
xor
shl
out
xor
xchg
add
shl
sbb
test
adc
cs
mov
shl
and
fmul
cmp
(bad)
push
pusha
adc
and
bound
mov
mov
cs
or
hlt
dec
shl
add
or
dec
outs
cwde
repnz
stos
gs
dec
pop
xchg
pop
movs
adc
in
in
xor
call
dec
dec
test
xchg
or
dec
add
mov
xchg
(bad)
cmp
push
mov
out
aad
fstp
add
das
pop
push
jo
xor
mov
lea
push
pusha
cmp
or
ins
in
jns
jp
jg
sar
add
pop
fnstenv
js
arpl
mov
push
(bad)
mov
mov
mov
dec
lahf
pop
sub
lods
ins
fild
adc
pop
sub
push
loop
in
es
push
pop
or
mov
popf
xchg
(bad)
je
(bad)
rcl
popa
(bad)
rcr
adc
push
push
adc
push
adc
push
and
jne
push
pop
push
inc
push
(bad)
hlt
pushf
idiv
scas
ss
push
mov
mov
cmp
movs
pop
out
add
push
in
or
jne
gs
add
or
(bad)
push
push
out
loop
cmp
push
(bad)
scas
verr
push
out
and
push
adc
mov
movhps
mov
das
call
xchg
stc
sbb
sar
sub
shl
jae
lds
or
mov
xchg
dec
push
or
jo
mov
inc
or
push
push
adc
lods
or
outs
outs
add
or
sub
jno
mov
lea
aas
ins
or
xor
and
test
ds
sub
cmps
add
test
push
pop
add
lds
or
fwait
pusha
bound
pop
jo
add
inc
add
dec
sub
pop
mov
fsubr
test
inc
pop
pop
mov
fst
mov
lods
dec
popa
jno
loop
mov
xchg
mov
inc
add
push
push
dec
jnp
mov
push
push
sar
fstp
imul
outs
addr16
dec
jo
addr16
addr16
push
add
or
push
dec
push
push
adc
push
gs
xchg
cmc
neg
jbe
popa
add
push
in
clc
push
push
push
rol
or
adc
adc
push
push
inc
adc
adc
inc
add
and
sbb
loopne
sar
push
ds
lods
push
jo
fisttp
sahf
dec
push
sub
outs
stos
(bad)
stos
jle
push
repz
fmul
add
pop
xor
or
and
dec
cs
and
daa
sub
adc
cs
and
and
outs
fsubr
sti
mov
nop
arpl
or
arpl
inc
or
in
jno
loope
pop
adc
cmp
xchg
mov
fs
inc
mov
jb
sbb
mov
push
inc
and
jmp
repnz
pop
out
xor
xor
xor
xchg
mov
fistp
adc
adc
bndldx
or
outs
fisttp
cmp
scas
daa
arpl
mov
js
or
mov
or
loopne
ds
aas
jnp
inc
mov
nop
outs
inc
add
ja
push
pop
cmps
imul
mov
lods
out
cmp
das
add
lahf
or
loopne
or
fs
ss
sub
fisttp
popf
sbb
test
add
fwait
call
ror
jmp
mov
push
fst
mov
add
push
push
adc
sub
xchg
scas
cli
test
es
das
jo
push
ja
push
jno
pop
xor
push
mov
and
adc
outs
xchg
mov
arpl
xchg
adc
icebp
inc
inc
inc
pop
or
bound
or
sti
popf
dec
sbb
cmp
shl
jbe
mov
mov
daa
cwde
mov
mov
mov
and
inc
and
mov
cmp
(bad)
and
cwde
sti
pop
adc
pushf
ins
inc
push
int
sar
dec
retf
fs
dec
jo
and
inc
add
out
ret
push
add
push
xchg
retf
mov
add
shl
dec
bound
arpl
add
xchg
or
pop
adc
lods
or
rcr
stos
pop
(bad)
lock
and
call
push
pop
cwde
xor
push
outs
sahf
push
icebp
sub
dec
jg
fild
bound
dec
add
mov
fsubr
sbb
and
mov
mov
inc
outs
adc
push
ret
adc
jae
xor
and
dec
mov
xor
pop
adc
ror
rol
xor
inc
dec
jne
ret
call
mov
out
push
test
je
add
mov
fimul
and
out
fucomip
lea
loope
pop
mov
test
je
ss
pop
xor
pop
ja
mov
ins
jnp
je
jle
ds
dec
dec
out
shl
int
test
sub
mov
call
mov
jp
inc
cld
mov
mov
and
jo
cmps
aas
(bad)
ficomp
sub
or
jge
rcl
cld
inc
fnstsw
std
push
mov
and
sub
mov
dec
mov
push
clc
jmp
push
sbb
jp
adc
sbb
js
jne
push
cmp
jne
ret
dec
shl
in
or
(bad)
test
add
dec
test
test
sti
cmp
xor
pop
push
xchg
add
mov
push
adc
mov
adc
or
or
lods
xor
dec
push
adc
push
nop
or
inc
jmp
rcr
dec
adc
stos
xchg
test
jmp
jmp
pop
sti
shl
pop
inc
mov
pop
xchg
pop
call
aaa
mov
daa
je
int
cwde
mov
sbb
stos
in
mov
xor
and
or
mov
inc
test
fstp
test
cmp
add
xor
mov
cmp
jne
mov
mov
pop
mov
or
pop
xor
and
test
out
out
shl
xchg
or
adc
js
push
sbb
mov
test
icebp
stos
lds
dec
mov
cli
xor
cwde
xchg
scas
xchg
add
cmp
dec
div
mov
mov
(bad)
xor
or
pusha
je
sbb
mov
nop
or
jno
mov
xlat
icebp
mov
adc
ret
adc
fistp
repz
mov
inc
xchg
inc
shl
inc
ja
(bad)
adc
ds
lea
xlat
sbb
add
fcomip
add
ss
cmp
pop
lea
mov
lods
fsubr
add
mov
adc
lods
mov
xchg
pop
jne
xor
fwait
jmp
add
push
adc
mov
(bad)
jle
push
jle
add
push
inc
pop
mov
adc
mov
ds
dec
popf
js
dec
push
adc
xchg
pop
fwait
or
cdq
clc
adc
dec
or
rol
sbb
inc
push
push
loopne
mov
or
inc
(bad)
(bad)
adc
lods
sti
data16
adc
mov
adc
sbb
mov
rcr
mov
push
jl
inc
xor
out
sbb
pop
pushf
inc
dec
jne
or
loopne
mov
jecxz
int
jl
pop
and
sub
and
cmps
outs
fwait
xor
ret
push
data16
enter
or
or
push
or
push
add
push
push
lea
xlat
xchg
jbe
das
push
adc
test
add
ret
mov
ret
add
jmp
inc
add
dec
add
inc
enter
je
push
inc
fninit
mov
movhps
ds
sub
push
xlat
test
cmp
es
hlt
dec
push
int3
outs
pop
push
push
or
dec
ss
or
inc
dec
inc
pop
xor
inc
cli
cs
push
mov
pop
push
aaa
xchg
call
pop
push
add
mov
or
pop
outs
xchg
bound
call
data16
or
cdq
inc
loopne
adc
cmp
shr
aas
outs
push
jp
imul
int
add
sub
dec
dec
int3
add
mov
push
cmps
xor
push
int3
sbb
dec
push
bound
xor
scas
push
push
push
add
pop
xor
scas
sbb
popa
xchg
pop
push
dec
or
pusha
push
mov
mov
sub
ret
daa
pop
push
inc
xchg
xor
pop
cwde
cdq
fst
push
es
mov
inc
jle
adc
aas
xor
(bad)
dec
push
mov
imul
add
sbb
add
in
cmc
cmp
lea
(bad)
outs
sti
adc
mov
and
rep
pop
test
je
call
pop
lods
add
call
or
mov
mov
out
(bad)
jl
or
cmp
jne
add
push
jge
adc
movzx
mov
lea
mov
dec
bound
movs
or
cli
idiv
in
int
adc
jl
xchg
loopne
mov
repz
jne
(bad)
add
or
add
add
inc
push
lock
popa
or
gs
int
lea
push
mov
or
sbb
outs
pop
test
pop
in
or
mov
mov
int3
jmp
push
xchg
push
adc
and
iret
or
mov
sbb
pusha
xor
add
mov
scas
sbb
add
mov
xchg
movs
push
js
pop
test
fsub
adc
popf
dec
or
jnp
inc
add
test
mov
push
call
into
cmp
cmp
je
jne
pop
ja
aas
add
mov
int
pop
mov
mov
jb
nop
cmp
cmp
add
loopne
cmps
call
adc
cli
adc
inc
mov
dec
or
push
push
xor
lods
pusha
xchg
(bad)
mov
int3
jmp
aam
cmp
jnp
xchg
cwde
mov
cdq
out
into
test
jne
mov
(bad)
in
lea
or
fs
jbe
xor
add
test
push
test
or
(bad)
adc
js
jne
add
sti
sbb
or
pop
mov
sbb
sbb
push
sbb
nop
add
push
test
je
jg
fucomi
mov
nop
xor
setne
dec
xchg
retf
in
mov
sbb
jmp
and
adc
lods
sbb
xchg
or
out
cmp
inc
aad
lods
test
imul
call
pop
push
fisubr
fsubrp
cmp
fucomip
inc
into
aam
mov
xor
ss
inc
sub
and
shl
dec
clc
cmp
dec
inc
dec
mov
adc
and
cmp
sbb
lahf
fdivr
inc
xchg
iret
out
ins
test
fcomp
mov
sbb
push
fwait
push
das
sub
cmp
mov
mov
or
push
mov
push
push
or
aad
jmp
inc
mov
loope
iret
adc
mov
push
mov
je
mov
out
daa
push
cmps
adc
in
in
cmp
lods
loope
in
pop
and
or
shr
push
clc
mov
jne
test
or
loopne
and
and
data16
scas
hlt
stos
stos
out
sub
add
test
int
fcmovnb
ins
adc
or
test
jl
nop
inc
rol
pop
jmp
xor
pop
mov
fiadd
and
ja
adc
dec
cmp
sar
scas
daa
clc
xor
cli
es
sub
add
cdq
shr
das
xchg
lock
pop
ds
test
je
jle
in
inc
pop
lea
loop
jge
push
cmps
rol
pop
xchg
push
pop
dec
ins
outs
xchg
add
jo
iret
mov
push
push
sar
pop
cwde
neg
pop
int3
mov
inc
(bad)
inc
cli
in
mov
div
fiadd
stos
pop
or
ret
mov
data16
(bad)
inc
xor
cmp
jo
cld
sbb
je
lea
pop
es
and
sbb
and
mov
and
add
push
pop
test
pshufw
mov
adc
or
dec
sub
sub
push
dec
repnz
popa
add
mov
xchg
push
push
and
sbb
cwde
cmp
arpl
lods
cmp
lea
sbb
jg
rol
jo
jne
xchg
(bad)
mov
pop
test
je
jnp
push
push
repz
cmp
jne
clc
inc
push
shl
jle
and
pop
xor
mov
rol
hlt
mov
jg
push
sub
jmp
mov
ins
je
(bad)
mov
cmp
cld
jno
push
add
push
xor
push
push
mov
push
mov
loop
xchg
push
push
push
mov
and
mov
imul
inc
xchg
test
sbb
cdq
cmp
loopne
dec
aam
enter
xchg
xor
pop
aaa
mov
mov
sub
inc
sbb
adc
sub
or
xchg
push
xlat
adc
test
inc
test
test
and
xlat
fisubr
xlat
stc
lock
add
adc
test
add
mov
or
es
cmp
test
stos
nop
and
or
cwde
xchg
cmp
test
bound
test
push
add
ja
lods
sbb
scas
in
adc
sub
popf
(bad)
loopne
lea
inc
pop
jne
(bad)
mov
mov
inc
rcl
loopne
jmp
je
rcr
div
in
ja
mov
jo
mov
sub
mov
mov
pop
mov
inc
mov
jmp
inc
and
mov
cmps
je
in
retf
int3
mov
xchg
xchg
pop
shl
idiv
adc
dec
dec
sbb
pop
or
push
(bad)
clc
(bad)
cmc
jbe
jns
je
push
push
arpl
jle
(bad)
je
add
call
or
jmp
ret
lods
icebp
sbb
aaa
xchg
xor
(bad)
(bad)
adc
xlat
adc
call
add
in
in
and
aam
or
inc
push
add
mov
adc
add
mov
pop
popf
(bad)
je
push
push
or
lods
outs
addr16
adc
addr16
jp
sub
adc
ss
pop
cmps
das
pop
icebp
aad
xchg
jns
inc
inc
dec
out
inc
dec
cmp
pop
je
stos
aaa
arpl
inc
push
stos
repnz
cmovg
adc
cmp
jne
dec
inc
inc
icebp
jmp
cmps
cmp
jmp
cs
mov
push
in
xchg
add
push
mov
cmp
sbb
add
sub
jmp
cmp
and
jl
pop
cwde
ret
mov
add
iret
es
dec
push
pop
rol
xor
pop
push
mov
adc
inc
cmc
sbb
jne
or
leave
cs
inc
hlt
push
jo
mov
pop
mov
mov
sub
add
or
jle
sub
pop
jmp
ja
scas
in
hlt
cdq
push
adc
jg
arpl
in
call
shl
addr16
push
ret
adc
imul
pop
xchg
mov
cmp
add
adc
js
mov
inc
xchg
repnz
and
jp
or
repnz
retf
or
lods
mov
mov
dec
xor
push
out
adc
mov
imul
or
mov
mov
push
push
jg
pop
pop
pop
dec
push
inc
xor
mov
inc
inc
call
pushf
or
sar
idiv
mov
or
cmp
adc
pop
jo
fisttp
xchg
dec
xchg
mov
pop
ret
ret
inc
or
movhps
inc
add
mov
pop
pop
pushf
aas
imul
rcl
das
mov
inc
adc
push
xchg
mov
and
mov
push
out
add
lods
jle
xlat
pusha
or
cmp
dec
dec
or
sub
aas
ret
pop
lea
pop
dec
adc
loopne
mov
mov
mov
mov
inc
adc
std
and
iret
icebp
adc
mov
cmp
and
mov
inc
dec
pop
lock
mov
mov
mov
mov
mov
mov
arpl
rcl
xsavec
add
mov
(bad)
outs
pusha
fild
cmps
repz
inc
mov
push
inc
dec
lea
dec
push
pusha
je
pop
push
mov
or
add
lea
xor
sbb
hlt
inc
inc
push
push
adc
cmp
mov
mov
arpl
outs
and
outs
sbb
xor
push
(bad)
scas
xchg
xor
and
scas
fmul
dec
(bad)
cli
add
stos
fdiv
xchg
or
add
inc
inc
(bad)
fdivr
or
pop
or
xchg
xor
sbb
xchg
pop
clc
mov
pushf
sub
inc
dec
loopne
xchg
sbb
outs
int3
arpl
fcom
push
popf
lods
sbb
jecxz
or
mov
xor
push
ins
mov
jne
and
sbb
push
je
fsubr
sub
adc
or
xor
xchg
sub
sbb
jmp
inc
push
je
ins
ret
xchg
push
xchg
or
ucomiss
dec
mov
daa
add
adc
fsub
mov
imul
retf
out
inc
mov
in
push
pop
call
add
call
rcr
mov
push
cmp
lods
cmp
psubb
push
pop
inc
mov
push
xchg
mov
pusha
push
call
imul
and
xor
je
mov
shl
push
loop
sbb
mov
test
cmps
aam
jp
icebp
sub
jno
dec
push
inc
fcom
sar
cmp
fmul
push
adc
mov
jbe
(bad)
arpl
data16
sub
cmp
jmp
aas
sub
mov
push
loopne
xor
fadd
clc
ja
mov
cwde
(bad)
sub
jmp
dec
adc
sub
enter
sbb
(bad)
sbb
push
push
push
mov
push
add
sbb
pop
or
or
cmp
push
xor
and
sub
push
push
mov
adc
ds
add
mov
pop
inc
call
add
or
mov
arpl
or
and
cmp
repz
xchg
jo
dec
dec
cmps
mov
fbld
push
add
test
enter
or
add
lea
mov
xor
push
mov
and
test
sub
push
dec
in
xchg
jne
sub
and
jns
xchg
shl
cmps
ja
enter
das
and
lds
inc
xchg
xor
mov
ins
jae
js
rcl
out
stc
cmc
or
inc
sti
out
test
es
adc
or
pop
clc
add
leave
inc
pop
hlt
cld
sbb
test
pop
daa
in
cmp
mov
js
xor
mov
ss
jns
in
je
jmp
ret
nop
in
sbb
outs
pusha
mov
repnz
or
lods
pusha
pop
jmp
jmp
xor
inc
jnp
jnp
add
jo
or
je
add
ja
aaa
sbb
ja
jb
popa
(bad)
xor
xchg
mov
xchg
push
cli
xor
lods
xchg
movs
das
scas
mov
scas
push
mov
(bad)
and
daa
mov
sub
pop
arpl
pop
inc
lock
test
je
push
mov
push
inc
sub
cmp
push
rcr
je
mov
popaw
ja
adc
into
js
mov
xor
rcr
ror
and
mov
aas
call
sub
mov
mov
rol
js
mov
loopne
loop
jmp
clc
push
push
dec
les
ror
and
and
cwde
fs
nop
(bad)
ss
in
add
pushf
hlt
repnz
fcomp
and
and
or
and
test
mov
enter
retf
xor
sbb
xchg
mov
add
loopne
or
addr16
mov
ss
push
pop
and
cmp
out
in
mov
scas
ror
mov
(bad)
push
mov
rcl
jbe
or
loop
ja
add
iret
dec
inc
add
sti
sub
or
fist
(bad)
push
std
cmc
push
mov
xchg
xor
inc
test
je
loop
lock
or
call
es
in
mov
outs
daa
cmp
sub
mov
and
lock
jnp
adc
add
push
lock
push
push
fild
fadd
mov
sub
movs
jno
push
dec
sbb
add
xchg
sahf
dec
pop
sbb
or
inc
pop
mov
pop
push
in
scas
adc
int3
loope
or
and
adc
(bad)
in
mov
inc
add
fs
pusha
loopne
jg
sbb
xchg
add
out
das
jo
jbe
out
pusha
imul
mov
adc
mov
xchg
pop
fimul
pusha
inc
or
int
xchg
jmp
cmp
mov
or
dec
not
and
jg
call
shl
jo
ret
sub
adc
js
push
int3
mov
and
mov
pusha
stos
xchg
iret
xlat
push
mov
aas
bnd
lods
nop
rcl
mov
loopne
lea
daa
push
mov
and
lahf
sub
or
cmp
int
cwde
dec
jg
ins
in
push
std
out
cmp
shl
sbb
neg
cmp
je
test
jmp
and
mov
cmp
jne
mov
nop
inc
repnz
cwde
test
dec
mov
adc
fcom
add
arpl
xor
cmp
shl
jo
lahf
inc
pusha
adc
add
inc
mov
xchg
outs
test
add
push
retf
push
inc
mov
movs
clc
mov
mov
sub
sbb
xchg
adc
test
inc
push
add
cmc
push
pusha
(bad)
inc
in
lods
cmp
xor
pusha
and
adc
ins
push
cmp
std
mov
popa
mov
popf
inc
aas
sti
sub
jp
sbb
outs
aas
not
mov
test
add
cmc
test
xor
call
repnz
sub
mov
pop
or
sahf
xor
mov
sub
movs
xor
iret
xor
test
lods
into
out
je
push
test
sub
imul
inc
cmps
add
cmp
ret
adc
pop
sub
pusha
ret
daa
je
sbb
adc
aam
push
(bad)
push
push
cli
dec
js
cmp
cld
dec
es
shl
aam
cmp
pop
mov
xor
nop
shr
mov
arpl
xor
retf
push
add
cwde
or
mov
loope
push
pop
push
fnstenv
adc
add
in
(bad)
sub
inc
int3
push
push
push
sub
adc
pop
add
sub
arpl
add
jmp
test
sar
ret
cdq
(bad)
cmc
fwait
xor
xchg
push
sub
lock
inc
mov
bound
xor
mov
addr16
je
sub
in
xchg
sahf
daa
pusha
out
pop
sbb
add
test
sub
sahf
fs
out
pop
push
scas
xor
(bad)
or
call
(bad)
adc
xchg
mov
ror
add
adc
not
add
std
jg
shl
retf
sub
je
or
scas
clc
jbe
retf
ret
pushf
ret
dec
div
shl
and
jmp
dec
icebp
pop
sar
daa
fsubr
push
jmp
sbb
inc
test
dec
cmp
jne
sub
popf
jne
popa
mov
jb
lock
mov
pop
or
pop
add
aam
aaa
dec
cld
and
add
imul
push
sub
adc
inc
add
dec
xchg
push
ret
sub
or
jp
or
mov
rol
cwde
loopne
mov
push
fwait
bound
fisub
stos
mov
mov
pop
cmps
fst
inc
xor
push
adc
call
jbe
xchg
sub
jmp
jns
xor
sbb
cmp
inc
sbb
inc
call
in
add
das
pushf
jb
pop
cmovne
sub
test
add
xor
push
stos
push
out
pusha
dec
rcl
repnz
inc
mov
leave
jmp
fwait
pop
add
sbb
or
packuswb
jmp
jne
fs
fiadd
test
mov
adc
xchg
lea
add
dec
pop
add
push
dec
add
or
add
shl
mov
adc
mov
in
cmp
aas
dec
test
jle
mov
jmp
mov
xchg
into
in
ss
mov
pushf
or
push
inc
fiadd
js
dec
jne
add
cmp
mov
adc
adc
mov
add
xor
mov
rol
push
dec
sbb
mov
sub
les
dec
js
sbb
add
(bad)
in
out
dec
mov
enter
mov
dec
jns
jmp
push
xor
and
(bad)
mov
movs
jp
fisubr
adc
jecxz
sub
sbb
jmp
or
clc
sti
mov
loopne
js
sbb
sbb
nop
jmp
aad
xor
ss
push
imul
fadd
mov
inc
add
or
sbb
es
cdq
mov
rol
jne
ds
ds
jle
add
std
lea
jg
pop
sub
fdivr
push
mov
(bad)
pop
cs
jmp
addr16
and
shl
gs
fdivr
or
sub
xchg
add
jle
icebp
addr16
mov
loope
inc
inc
and
cmp
pusha
add
add
add
inc
push
or
add
fldenv
cmp
jl
lea
call
das
pop
inc
inc
add
dec
sahf
fsubr
or
cmp
loope
arpl
lock
sub
(bad)
and
push
add
cmp
push
push
adc
clc
loopne
sbb
fidivr
jnp
ss
sub
mov
aas
or
jmp
cmp
sbb
outs
fimul
mov
add
add
imul
sub
sub
adc
mov
push
xchg
pop
and
ss
dec
mov
xor
retf
add
pop
sub
xor
sar
push
push
das
jge
pop
or
mov
cmp
inc
push
lahf
sbb
retf
fsubr
xor
or
jo
popa
push
in
push
inc
cld
and
push
sbb
adc
in
sbb
push
idiv
add
inc
idiv
and
inc
push
das
aam
mov
bound
or
jge
add
(bad)
add
adc
ret
ja
adc
out
popf
xor
fdivp
dec
xor
stos
ret
test
and
scas
ret
popf
xor
je
add
cmp
lds
in
mov
out
jno
mov
lock
data16
mov
pop
sbb
add
jb
push
data16
lds
push
add
push
and
scas
sbb
push
pop
cld
xor
nop
stos
loopne
popa
call
push
popa
cmp
pop
mov
les
jb
arpl
aas
cmp
fs
add
aas
in
add
sbb
stos
or
jne
jbe
dec
or
xor
pop
sub
jmp
xor
sub
sub
add
(bad)
and
or
pop
pop
add
pop
push
inc
out
scas
and
rcl
rcl
xchg
mov
dec
shl
mov
adc
push
call
mov
dec
cwde
inc
and
dec
jo
or
test
fist
and
sbb
sub
ds
call
je
cmp
jg
test
jle
cmp
jg
mov
cmp
push
cmp
jg
mov
pop
cld
jle
cmp
jge
cld
jmp
mov
enter
dec
inc
das
and
loopne
sbb
cmp
das
in
and
mov
jmp
cmp
dec
mov
je
add
nop
jne
push
mov
or
mov
sub
push
pop
test
je
adc
adc
cs
mov
in
loopne
ror
push
and
dec
cli
cwde
sub
imul
popa
clc
clc
stos
mov
or
mov
jo
sub
jns
out
xchg
ins
mov
imul
idiv
test
jge
cmp
mov
xchg
push
rol
inc
ret
mov
pop
in
sub
loopne
es
pusha
repz
jo
adc
pushf
adc
add
ficom
cli
mov
pop
int3
je
test
mov
dec
jne
add
aad
cmp
add
add
rcl
es
loope
daa
addr16
and
cmp
fld
adc
cmp
cmp
cmp
or
cmp
aam
add
mov
push
ins
in
add
sub
enterw
gs
out
xor
mov
sub
outs
movs
fbld
lea
lea
stos
and
inc
nop
jl
jp
mov
sbb
mov
jmp
xor
ins
mov
push
mov
and
sbb
inc
les
xor
add
inc
xor
aaa
jge
push
push
das
mov
add
push
mov
outs
add
mov
mov
cmp
cmp
dec
clc
cmps
push
inc
loopne
or
push
mov
aad
sbb
xor
pop
push
push
out
cmp
sub
pop
and
fdiv
dec
pop
int
cmp
aas
or
mov
sub
jmp
mov
xor
lods
mov
xor
rol
sahf
out
test
push
or
or
mov
adc
push
or
das
lods
xor
add
ficom
push
push
retf
rol
mov
mov
inc
jl
jbe
sub
push
sti
lea
mov
inc
sub
movs
pop
jmp
ret
xor
mov
xchg
push
or
inc
or
inc
stos
mov
or
icebp
jg
push
jle
lock
jmp
mov
and
rcl
xchg
sbb
cmps
data16
imul
sub
or
mov
and
inc
and
add
and
jnp
int3
and
push
sub
lods
sar
int3
mov
mov
mov
lock
fiadd
sbb
bound
scas
ds
pop
sub
out
adc
mov
mul
sub
call
xchg
add
lea
jmp
ret
mov
mov
xchg
mov
sub
add
es
pusha
rcl
popf
add
jno
cmp
dec
mov
xor
into
dec
mov
mov
pop
cs
push
mov
sbb
ja
je
xchg
inc
mov
sub
sti
push
pusha
lea
(bad)
(bad)
retf
mov
jge
fdivr
pop
or
retf
ret
pop
or
pop
pop
or
aaa
lods
scas
mov
enter
sbb
(bad)
test
or
sub
adc
lods
mov
mov
test
stc
sahf
mov
loopne
add
pushf
or
(bad)
addr16
lock
or
push
cmp
sbb
jmp
call
inc
cmp
dec
and
sahf
dec
stos
shl
clc
pushf
in
adc
pushf
xor
shl
addr16
cmp
mov
stos
mov
cmp
push
cmp
mov
js
sar
div
cdq
out
inc
sbb
inc
fsubr
data16
(bad)
mov
(bad)
cmp
mov
or
lods
ret
and
out
adc
mov
mov
iret
popa
mov
push
jb
lods
mov
pop
pop
int
push
mov
or
xchg
dec
es
adc
push
jl
sbb
pushf
inc
adc
outs
sbb
adc
push
sbb
pop
pop
cmp
adc
pop
adc
in
inc
cmp
in
push
(bad)
push
int3
or
dec
cmps
add
sbb
dec
mov
ror
xchg
mov
scas
add
or
unpcklps
fs
nop
sub
les
stos
popa
shl
add
js
mov
push
sbb
inc
adc
das
push
pop
add
and
xchg
(bad)
pop
iret
pop
mov
rcl
mov
push
pop
jle
push
ss
ret
jle
push
add
inc
and
inc
jl
pop
inc
clc
push
push
or
sbb
scas
cli
loop
adc
dec
push
push
(bad)
sub
pop
mov
test
jmp
or
add
mov
ret
mov
fild
and
pop
out
push
add
adc
popf
jb
ins
movsx
movups
or
cmp
sete
add
cwde
mov
ror
div
das
and
cmp
push
mov
test
adc
push
xchg
shl
jno
int
retf
push
mov
mov
mov
sbb
sbb
sub
out
loop
push
sub
cmp
add
fsubrp
outs
fs
pop
jne
cmp
cmp
inc
cmp
dec
inc
arpl
cmps
xlat
outs
mov
push
cmp
aam
cmp
jmp
(bad)
mov
leave
pop
mov
mov
icebp
int3
pop
jmp
pop
cmp
or
and
ret
push
ror
retf
cmp
add
je
sub
xchg
mov
mov
and
mov
out
sahf
push
pop
xor
mov
inc
sbb
sbb
pop
adc
or
adc
add
or
lods
add
inc
lds
sbb
jle
or
punpckhbw
or
lods
test
enter
ja
xor
bound
sbb
(bad)
lock
add
popa
(bad)
hlt
dec
(bad)
cmp
mov
mov
js
in
inc
retf
push
inc
imul
outs
jb
popa
je
les
xor
rcpps
pop
aam
(bad)
fild
push
add
or
jb
jo
imul
pop
pop
fbld
lar
inc
js
outs
jae
outs
outs
sub
or
jmp
repz
arpl
jo
sub
sub
out
ins
dec
inc
sub
add
inc
push
add
jns
fstp
pop
inc
das
jle
adc
ror
push
cmp
imul
mov
out
mov
push
inc
data16
mov
mov
push
loopne
pusha
test
mov
(bad)
xchg
xchg
push
push
dec
dec
data16
cmp
outs
scas
in
xor
pop
jae
imul
test
and
cmp
add
add
push
jnp
push
gs
mov
loopne
daa
adc
outs
jns
push
xchg
std
stc
pop
add
inc
sbb
inc
fcmovnb
cmp
int
jo
or
xchg
test
rcr
pop
mov
dec
pop
xor
add
or
and
mov
inc
add
jno
repnz
cli
add
or
sbb
jae
or
loope
stc
dec
outs
jg
add
cmp
mov
outs
jbe
in
sbb
xor
adc
(bad)
fs
sbb
sbb
mov
push
outs
add
jae
add
enter
or
xor
inc
or
cmp
adc
ins
xor
jp
pop
mov
rcr
fs
jae
loopne
arpl
jae
inc
js
gs
xor
push
add
adc
inc
sbb
fcomp
pop
push
daa
out
and
nop
je
mov
add
mov
pushf
inc
clc
mov
push
in
clc
mov
hlt
mov
icebp
hlt
mov
cmc
lock
add
and
enter
cmp
out
in
imul
dec
inc
mov
mov
cmp
lea
jle
dec
jmp
bound
cs
add
(bad)
enter
ret
push
xor
add
daa
cwde
mov
or
sub
push
dec
nop
pop
xchg
das
daa
inc
cmps
test
and
cld
scas
pop
adc
mov
dec
test
jl
inc
xor
xor
mov
mov
cs
or
shr
cmps
xor
jne
mov
and
xor
jl
jle
adc
js
sbb
jmp
hlt
xor
and
loope
mov
sbb
cmps
sbb
fiadd
push
sar
mov
clc
add
xor
sbb
pop
or
inc
or
or
sub
adc
mov
pop
and
test
leave
push
mov
and
pop
or
clc
jnp
jo
pop
or
sti
add
ror
add
mov
inc
ins
cmp
lods
jne
push
jmp
push
and
mov
and
popa
loopne
das
push
ins
dec
ret
inc
inc
es
scas
das
ins
sbb
pop
ss
push
repz
sbb
out
repz
ins
xor
pop
hlt
jmp
out
cwde
loop
data16
cmp
cmps
mov
cmc
mov
add
call
mov
outs
jae
shl
ficom
in
dec
in
(bad)
pop
fcom
in
aad
dec
rol
sar
mov
in
mov
mov
cmp
cld
inc
cmp
adc
in
sbb
xor
jg
int3
ret
jg
sbb
jo
dec
cmp
jl
push
(bad)
adc
fmul
nop
dec
ins
je
and
or
adc
jl
shr
nop
stos
repnz
push
push
cmp
dec
dec
jne
or
push
mov
in
ret
pushf
mov
hlt
mov
dec
das
sar
scas
lahf
je
pushw
adc
adc
or
push
dec
push
int
js
outs
and
push
(bad)
enter
(bad)
scas
int3
mov
std
push
aas
adc
jmp
cs
rsqrtps
jle
je
fidivr
mov
inc
sahf
stc
sub
inc
inc
adc
call
or
nop
nop
inc
in
adc
xchg
push
mov
in
adc
cmp
add
push
aaa
xchg
das
push
test
nop
cli
dec
mov
pop
mov
lahf
inc
inc
xchg
retf
dec
(bad)
cmc
jo
aam
jno
(bad)
pop
add
or
push
fnsave
shl
add
pop
sub
xor
cmp
add
jae
pop
jns
das
or
pop
in
pusha
xchg
daa
shr
les
ja
push
pop
sub
outs
and
xchg
daa
ins
jo
rcl
inc
std
in
mov
gs
or
loop
and
scas
and
cmp
push
dec
mov
jb
mov
adc
jo
ror
jb
and
xor
loope
add
fdivr
fs
add
dec
test
inc
ficomp
jno
loope
add
inc
sbb
int3
stos
sbb
ins
fwait
inc
cwde
pop
int
push
aaa
and
and
dec
pop
or
aaa
lea
xchg
dec
sub
loop
sub
or
sub
cmps
and
lea
add
mov
inc
add
shl
push
push
jb
mov
inc
retf
cmp
and
ret
dec
xor
shl
out
add
xchg
jnp
add
jle
mov
jo
xor
shld
movs
adc
mov
js
adc
mov
push
adc
or
in
xor
mov
cdq
movs
fmul
cmp
sbb
jne
ds
test
int3
pop
imul
pop
sbb
lock
and
cmp
add
mov
shl
pusha
adc
push
ins
and
ffree
mov
lea
das
push
sub
pop
out
mov
int3
xchg
adc
cld
aas
xor
ret
ror
lock
jne
or
loope
imul
daa
mov
cmp
loopne
mov
aaa
mov
cmp
or
js
jo
test
mov
aas
push
daa
and
stos
das
or
mov
and
mov
(bad)
leave
test
or
or
xchg
adc
or
(bad)
mov
xor
ins
jae
gs
pop
sub
add
mov
inc
or
mov
call
push
or
ret
mov
mov
and
and
sbb
sbb
sub
dec
(bad)
es
add
mul
push
mov
mov
aas
sbb
mov
jmp
scas
into
inc
mov
mov
jo
pop
shr
sub
push
shl
xchg
test
pusha
jmp
xchg
das
inc
or
push
std
push
ret
adc
pop
jmp
pop
jmp
inc
not
lods
test
(bad)
in
add
fmul
add
imul
push
jmp
mov
ins
sub
add
hlt
loop
(bad)
out
lea
shl
ss
xor
inc
mov
pop
inc
lock
pop
sbb
xchg
outs
xor
xor
popf
scas
ss
jo
xchg
mov
or
push
repz
sub
mov
add
imul
xchg
push
ret
cmp
add
adc
adc
xor
pop
push
sbb
pop
test
imul
rol
fs
mov
sub
dec
or
leave
je
rcl
dec
jp
in
jge
xlat
fild
push
dec
cli
jne
mov
sbb
add
js
loope
and
ret
jmp
loope
dec
and
mov
sub
mov
pop
dec
adc
sub
jle
add
in
jo
push
inc
inc
push
fimul
cmp
xor
pop
pop
loopne
shr
aas
lock
or
or
add
jmp
mov
pop
or
jmp
(bad)
inc
test
test
cmps
push
stos
xchg
sti
mov
cmp
shl
add
in
aaa
xchg
cmp
add
out
sbb
xchg
pop
mov
adc
into
arpl
mov
adc
mov
aaa
fdivr
pusha
push
cmp
pop
sub
inc
shl
aaa
inc
mul
fist
sub
nop
pop
fsub
jnp
or
(bad)
dec
add
inc
mov
jmp
movs
xchg
lods
test
and
cdq
push
std
xlat
call
sub
sbb
inc
push
adc
call
push
dec
test
in
push
js
push
clc
sub
scas
lock
add
add
dec
jmp
push
sub
or
add
out
jp
add
cmp
ss
je
inc
dec
call
add
sub
or
clc
add
or
push
in
push
fsubr
inc
test
inc
scas
mov
(bad)
mov
mov
cmp
adc
xor
outs
dec
adc
jge
cmp
pop
add
or
dec
xchg
stos
lds
(bad)
loope
pop
and
mov
loope
aad
cmp
cmp
movs
xor
jle
push
push
dec
and
fild
push
mov
pop
or
(bad)
mov
xor
or
mov
add
inc
mov
add
mov
push
clc
push
test
or
and
pusha
sub
sbb
loopne
loopne
mov
bnd
dec
inc
gs
js
and
jo
inc
dec
mov
addr16
cwde
ror
ficom
fdiv
sbb
sbb
inc
shl
adc
pop
test
push
shr
push
adc
sbb
pop
(bad)
or
inc
push
adc
ret
mov
int3
mov
add
and
adc
dec
push
fcmovb
outs
push
inc
nop
mov
loopne
and
xchg
xor
inc
fcomp
sbb
adc
mov
mov
adc
push
push
jo
jg
sub
mov
push
and
and
cmps
pusha
lds
addr16
bound
adc
lock
mov
inc
sub
outs
or
sub
clc
mov
jmp
mov
inc
or
(bad)
es
or
loopne
push
cld
pusha
cmp
cmp
jbe
push
push
add
pop
cmp
push
push
shl
daa
ror
jo
loopne
dec
fmul
push
push
push
mov
ret
ins
push
es
(bad)
xor
adc
and
pop
aas
adc
mov
stos
shl
call
clc
ins
mov
and
movs
add
adc
loop
mov
fwait
jo
out
sub
je
test
sub
int3
call
xchg
es
inc
ror
or
xchg
xchg
(bad)
jle
cdq
fldcw
cmp
rcl
sub
xchg
push
ret
ret
or
sub
pushf
jl
dec
(bad)
pusha
inc
outs
xchg
mov
pop
xchg
sub
xchg
sub
imul
add
scas
enter
push
test
pop
inc
or
xchg
stos
aam
or
pop
push
cmp
and
add
das
pop
sahf
ret
mov
hlt
lods
add
pop
sbb
sub
popa
ret
pop
mov
push
push
and
imul
fs
frstor
loopne
xchg
inc
adc
sub
or
mov
sub
das
xlat
repnz
add
mov
les
pushf
int3
ss
sub
cmps
ss
test
and
rcr
mov
jp
imul
push
test
sbb
and
pushf
retf
data16
pushf
add
mov
scas
movs
ret
hlt
mov
(bad)
sub
cmp
xor
mov
add
mov
and
sbb
cmp
push
mov
pop
inc
test
sub
addr16
push
popf
adc
ins
sbb
sbb
push
les
test
enter
aas
cmp
daa
cmps
push
xchg
(bad)
and
sbb
mov
loope
add
aam
xchg
fdivr
call
cmp
outs
mov
jg
mov
push
loopne
cmc
jnp
and
sub
xor
dec
(bad)
retf
sub
cwde
lea
mov
std
(bad)
js
aas
sbb
dec
inc
je
cmp
pop
cmp
jae
mov
add
mov
pop
pop
fidivr
pop
cld
lea
not
nop
data16
ret
or
fs
jp
sar
(bad)
out
sub
jo
mov
cmp
mov
popa
and
add
fnsave
pop
mov
call
call
push
mov
mov
pusha
adc
add
and
(bad)
push
or
clc
or
(bad)
int
call
xor
inc
repnz
xlat
js
jecxz
clc
push
push
aad
sub
xchg
hlt
mov
hlt
mov
xchg
dec
jo
push
in
add
and
jne
cwde
neg
lods
jmp
in
pusha
sbb
mov
ss
sub
in
cmp
popf
aad
jns
adc
add
sbb
or
fmul
inc
cmp
add
sub
or
dec
add
or
pop
adc
nop
cmps
sbb
xchg
push
call
adc
jno
dec
jbe
push
or
pop
hlt
cmp
in
mov
jne
pop
jae
mov
fld
inc
sti
das
push
les
leave
enter
mov
mov
jl
mov
hlt
mov
fadd
bnd
js
xchg
shl
das
movs
or
mov
mov
sti
mov
cs
cs
cmp
adc
test
loop
pop
(bad)
cs
xor
je
cmp
pop
loop
dec
jmp
push
fdiv
or
enter
adc
jo
out
je
adc
scas
push
jno
push
inc
sar
sub
push
adc
jo
nop
out
mov
mov
push
and
sub
sbb
or
push
addr16
stos
ror
add
out
xor
pusha
fwait
or
inc
ror
sar
fisub
jmp
add
sub
pop
push
inc
xchg
jo
fcom
fs
jg
and
add
in
jno
hlt
in
xor
pop
in
inc
aaa
in
sub
jo
je
add
push
sub
push
add
jae
lea
pop
jne
test
inc
mov
test
ja
nop
mov
sbb
push
inc
cdq
dec
push
pop
sbb
ss
sub
sub
add
jge
ins
jle
jmp
xor
or
sbb
inc
enter
(bad)
cmp
add
cmp
sub
mov
lock
cli
or
add
loopne
jle
in
inc
mov
je
inc
mov
and
xor
cmc
add
rcl
adc
outs
xchg
pushf
and
inc
adc
or
and
xchg
push
imul
int3
add
mov
mov
iret
xchg
xor
jnp
xchg
adc
scas
(bad)
mov
test
jecxz
push
push
pop
fisub
sub
xor
add
mov
mov
adc
sbb
add
clc
lock
sub
add
adc
imul
jge
out
js
sbb
sbb
pop
das
or
add
adc
rcr
pop
je
adc
fidiv
leave
mov
mov
or
adc
inc
xor
pop
mov
add
push
and
add
inc
push
pop
push
and
jbe
push
sbb
sub
lock
xchg
push
bnd
sub
fs
gs
mov
or
dec
pop
test
pusha
cwde
adc
pop
ret
pop
adc
ret
mov
cmp
and
cmp
jo
add
push
(bad)
sahf
out
cmp
mov
cs
aas
ins
xor
push
cmp
imul
xchg
sub
(bad)
xchg
ret
stos
mov
imul
ds
call
push
aad
jae
test
inc
xchg
adc
arpl
mov
mov
sbb
adc
into
mov
add
mov
or
arpl
inc
sub
js
push
jo
jne
sbb
retf
out
pop
call
push
leave
pop
test
push
inc
adc
dec
xchg
ret
sbb
rcr
add
mov
jmp
adc
or
add
imul
mov
xlat
mov
push
in
cli
push
mov
js
retf
mov
or
mov
cs
in
or
enter
push
test
lock
ret
sbb
pop
push
mov
fs
or
push
fnstcw
inc
sbb
sbb
cmp
hlt
sub
jo
xor
push
jb
sahf
cmps
stc
mov
je
in
fistp
jnp
out
push
mov
fdivp
push
push
and
ss
aam
add
or
mov
adc
inc
inc
imul
jo
lock
and
inc
dec
ins
fs
push
cdq
(bad)
sub
add
sub
push
gs
gs
or
and
add
inc
test
push
ins
inc
popa
outs
jbe
jae
add
cmp
sbb
add
or
or
xchg
(bad)
pop
inc
fisttp
xchg
xor
add
inc
mov
(bad)
in
pushf
retf
mov
push
iret
out
hlt
mov
mov
or
fcom
xor
dec
cmp
pop
jno
pop
jns
rcr
rcl
cmp
mov
adc
inc
push
movs
sub
ins
adc
pop
sub
aad
mov
sbb
cmp
xlat
lock
stos
dec
inc
fdivr
rcr
mov
push
jmp
inc
xchg
add
enter
(bad)
mov
pop
add
enter
dec
scas
mov
mov
push
or
xchg
dec
leave
mov
xchg
(bad)
ret
and
adc
adc
test
pop
les
cmps
stos
push
jmp
adc
push
sbb
inc
xlat
add
cmp
into
mov
movs
mov
push
xchg
fisub
sub
rol
push
shl
fs
dec
inc
pop
add
mov
cmp
pop
pusha
sub
push
or
inc
push
pop
cmp
jo
cld
fwait
pop
or
mov
popa
adc
xchg
fldenv
mov
popa
sub
push
sbb
adc
pop
adc
dec
shl
sbb
imul
xor
mov
pop
add
and
aaa
inc
sbb
hlt
das
sub
push
sub
cwde
pushf
dec
jo
or
push
dec
push
add
test
inc
pop
jmp
and
dec
popf
cmp
(bad)
push
and
pusha
pusha
aaa
mov
sbb
mov
call
mov
fnstenv
and
popa
adc
out
push
cmp
inc
mov
cmp
cmp
jecxz
into
cmps
mov
push
or
push
mov
pop
cmp
pop
push
mov
daa
int3
mov
fs
cld
fstp
ins
cs
js
pop
inc
adc
les
movs
inc
jl
sbb
xor
outs
fild
lds
cmp
cmp
cwde
xor
lods
shl
in
and
imul
dec
pop
movs
test
and
test
(bad)
fcomp
sahf
cmp
ja
sti
adc
xchg
aas
mov
or
rcl
mov
shl
outs
cli
hlt
div
add
ins
ja
fld
test
in
sbb
dec
jo
mov
cmp
mov
idiv
inc
mov
inc
inc
bound
movzx
mov
fsubr
data16
adc
mov
loopne
sub
jo
sbb
and
add
rcr
xchg
cmp
cmp
out
push
push
(bad)
clc
mov
cld
or
lahf
mov
adc
and
in
sbb
sbb
fisub
int
inc
cmp
add
sbb
shr
xor
xlat
dec
or
js
push
ss
dec
cld
push
shr
cmp
jge
inc
mov
mov
outs
push
sbb
inc
call
and
frstor
in
push
je
sub
add
mov
or
or
cmp
adc
clc
add
push
add
xor
stc
mov
xchg
sbb
jmp
pop
pop
aas
fist
xor
inc
cmp
xor
retf
sbb
ret
cwde
add
adc
sbb
fisub
adc
sub
push
daa
pop
lahf
fs
sub
add
rcr
in
cmc
imul
dec
mov
out
push
fmul
retf
or
xchg
push
cmps
aam
fadd
pushw
in
fdiv
lods
ss
fistp
int3
sub
(bad)
cmps
push
or
fwait
retf
sub
push
add
rol
dec
sub
test
hlt
dec
mov
push
lea
cmps
jmp
idiv
mov
sub
lea
xor
into
jbe
je
scas
push
push
addr16
dec
sub
inc
cmp
mov
and
sub
xor
lea
out
xor
mov
cmp
jmp
push
outs
cmp
push
je
adc
mov
push
adc
pop
js
sbb
inc
inc
mov
mov
nop
push
lea
or
adc
mov
scas
popa
sub
push
iret
inc
push
daa
clc
lock
daa
sbb
test
dec
inc
cmp
ret
xor
or
xchg
test
(bad)
fimul
or
push
mov
lea
jl
sbb
dec
dec
or
shl
pop
mov
pop
inc
gs
jae
pop
fcom
fdiv
(bad)
or
jg
xor
sbb
sbb
imul
int3
rcr
add
xor
leave
iret
sbb
dec
les
dec
add
jb
add
mov
mov
add
aaa
adc
pop
sar
inc
or
aam
push
jg
popa
inc
add
je
mov
lods
movs
(bad)
push
pusha
cmp
sub
bound
rol
pop
or
es
shr
xchg
adc
movs
xchg
mov
and
sbb
cmp
push
push
adc
add
and
cmp
js
inc
outs
lock
add
int3
dec
mov
je
pusha
and
les
mov
add
call
bound
and
xchg
jno
xor
sahf
sbb
cmp
xor
dec
fcom
pop
jmp
xchg
jecxz
(bad)
aas
dec
movs
lods
loope
jno
jmp
jmp
cmp
sub
xlat
cwde
scas
and
sub
test
fadd
and
and
lock
push
jns
add
adc
and
nop
dec
add
or
cmp
adc
push
push
call
xor
call
xlat
add
and
mov
loopne
cmp
pop
xchg
jmp
add
adc
cmp
stos
or
xor
das
pusha
mov
jmp
xor
out
push
ss
sar
sub
sub
jbe
pshufw
push
iret
and
xor
cwde
mov
cmp
sub
ret
pop
mov
or
push
addr16
or
aaa
jno
jmp
inc
inc
and
call
mov
cmp
test
les
je
dec
add
jp
or
cmp
xchg
dec
xor
xor
sbb
aas
xchg
sbb
adc
dec
cmp
inc
lods
sti
imul
stos
push
xchg
cmp
cmp
lods
mov
je
adc
fneni(8087
dec
cwde
inc
mov
test
rol
in
popa
in
(bad)
cmp
popa
xchg
ror
jmp
mov
xor
lea
aaa
pushf
push
in
ret
pop
jmp
push
lods
mov
(bad)
loope
les
sub
mov
cmp
or
pusha
mov
push
sti
(bad)
jmp
jmp
js
mov
push
add
xor
xor
xchg
or
pop
sub
imul
fsubrp
inc
adc
call
movs
fadd
scas
push
dec
push
loop
test
js
xor
outs
fsub
jmp
ret
mov
inc
and
mov
xchg
out
or
and
std
mov
addr16
or
push
xor
adc
and
test
push
cmc
sbb
push
out
sbb
push
inc
sub
lds
push
pop
arpl
and
sub
xor
shr
or
outs
xor
jne
(bad)
repnz
mov
adc
inc
cli
cmp
adc
test
add
ja
push
cmp
dec
popa
adc
mov
fs
jo
adc
xor
jmp
cmp
into
push
sub
cld
adc
sar
shr
loopne
dec
pop
push
dec
xchg
add
mov
push
mov
ins
out
push
push
dec
jae
dec
fsubr
mov
xor
add
shr
mov
mov
sub
das
push
nop
(bad)
in
xchg
cmp
test
gs
mov
mov
mov
ret
and
push
pop
sub
and
push
pop
add
pusha
(bad)
jmp
cmc
push
lahf
out
retf
test
loopne
not
inc
dec
mov
nop
jl
add
js
adc
inc
nop
or
or
(bad)
cmp
or
xor
cmp
sub
hlt
inc
(bad)
mov
sbb
cmp
jg
movzx
push
dec
movs
jb
fucomip
scas
sar
ret
cmp
outs
mov
sub
push
xchg
int
in
ret
mov
lock
sub
jo
test
push
or
fbstp
push
mov
jg
mov
mov
clc
add
jne
mov
sub
stos
repnz
in
mov
call
rcl
add
nop
inc
or
idiv
mov
sub
and
sub
sub
retf
gs
mov
and
inc
sti
push
dec
das
inc
ror
movs
dec
sbb
push
or
fistp
fwait
mov
cmp
add
xchg
jmp
jo
ins
(bad)
mov
push
loope
dec
fidivr
jne
loope
loope
fsubr
adc
cwde
icebp
xor
mov
rcl
cmp
lahf
or
ins
fwait
xchg
pop
bound
pop
add
xchg
jnp
pop
out
clts
push
sbb
dec
jg
mov
hlt
nop
sub
push
or
jle
es
xchg
add
push
rcl
jle
and
xchg
call
inc
or
jbe
dec
mov
add
inc
ja
and
lods
push
loope
cli
lock
enter
or
sti
das
and
or
inc
adc
enter
cmp
and
pop
popf
sbb
scas
adc
js
ins
cwde
xchg
mov
mov
mov
cs
xor
jne
or
mov
mov
push
fisub
jecxz
sbb
add
loope
mov
add
std
mov
inc
sub
pop
push
and
or
mov
ja
or
fs
adc
lock
or
mov
jo
or
xor
jp
call
cld
lahf
shl
je
cmp
jne
inc
push
gs
or
add
jmp
or
ret
(bad)
or
mov
xchg
das
(bad)
out
or
xchg
push
sub
rcr
adc
jne
or
movs
test
adc
aad
adc
xchg
loopne
sbb
lock
fsub
mov
dec
cmp
in
fucomi
addr16
pop
push
std
lea
lea
cmps
dec
sbb
adc
daa
in
test
dec
je
sub
je
jmp
inc
or
je
or
int
das
clc
je
jmp
mov
xor
add
xor
sbb
imul
add
or
shr
sbb
cmp
xchg
mov
jmp
mov
or
sbb
inc
or
rcr
adc
push
loope
call
xor
jl
mov
sti
or
loopne
add
arpl
jle
sub
movs
clc
or
(bad)
(bad)
push
mov
inc
sbb
imul
add
pop
js
js
mov
or
fcomi
push
call
jb
(bad)
fst
add
nop
inc
jne
ret
sbb
and
lea
cwde
dec
adc
push
aam
or
dec
add
push
push
add
mov
add
push
add
add
and
mov
sub
(bad)
jg
ret
ins
mov
push
sub
inc
inc
cmp
ja
jg
test
mov
cmp
adc
add
sbb
and
addr16
cmp
or
dec
jns
sub
outs
(bad)
push
cmp
jg
test
adc
outs
ins
sub
jg
sbb
aaa
xchg
inc
cmp
je
imul
inc
sub
out
push
cmp
or
mov
shr
or
mov
sbb
fst
adc
xchg
inc
xor
sbb
jb
pop
mov
dec
and
xor
cmps
xor
pop
mov
jmp
pop
or
sbb
inc
or
cs
cmps
mov
adc
cmp
and
in
repnz
push
fiadd
js
sbb
rcl
add
dec
add
dec
add
dec
or
or
imul
aas
sbb
in
dec
adc
push
ja
and
fimul
into
jp
lods
mov
sbb
push
inc
push
hlt
adc
enter
sub
add
in
jle
pop
adc
test
cmp
(bad)
push
js
imul
jae
or
inc
push
xor
xchg
adc
in
and
jmp
inc
imul
xchg
dec
ins
adc
pop
jno
pop
sub
push
or
pop
ret
jmp
rcr
add
mov
sbb
dec
jo
push
add
test
mov
fimul
fcom
je
mov
call
xchg
inc
daa
rcr
mov
ror
in
xor
xchg
mov
jl
test
stc
test
dec
pop
mov
jnp
sahf
or
hlt
dec
movs
adc
inc
fstp
pop
add
js
repnz
push
add
xlat
pop
fdiv
mov
inc
xor
call
cmps
outs
sub
jno
repnz
jge
adc
data16
loopne
mov
inc
or
sbb
rol
shl
mov
test
sbb
or
mov
mov
jo
sub
cmp
daa
push
cmp
sub
mov
inc
jmp
imul
cmp
(bad)
fucomi
add
scas
pop
jo
or
sbb
push
jmp
jge
mov
fwait
imul
shl
mov
push
pop
inc
add
js
mov
shl
les
retf
push
pop
adc
(bad)
jno
jbe
adc
inc
xchg
cmp
and
loope
push
cld
shr
cwde
mov
and
or
pop
xor
test
and
xchg
adc
shr
sub
jns
or
dec
popf
inc
push
mov
or
shr
fild
in
push
mov
mov
inc
shr
dec
(bad)
dec
fild
and
int3
test
mov
test
fisttp
psubb
jne
shr
imul
pop
adc
or
clc
mov
or
dec
out
adc
mov
lock
push
test
or
push
jno
(bad)
sub
mov
bound
outs
dec
mov
push
push
inc
jo
adc
or
rcl
pop
pop
nop
rol
mov
sub
dec
sbb
jbe
inc
pop
mov
mov
fsub
mov
inc
ret
mov
push
sbb
sub
push
xchg
(bad)
mov
call
or
cdq
cmp
mov
dec
pop
pop
out
push
add
push
sbb
nop
std
add
ror
jns
lea
xchg
pop
jne
call
or
xchg
inc
fistp
mov
pop
mov
or
pusha
int3
rol
or
mov
shr
dec
mov
or
add
inc
mov
push
data16
push
add
mov
int3
or
pushw
push
es
outs
push
ret
sub
mov
add
call
adc
xor
out
mov
sar
mov
imul
xchg
aam
jns
mov
test
cld
push
data16
mov
inc
int3
mov
mov
jae
sub
or
mov
imul
inc
sub
sub
in
sub
fnop
and
hlt
sub
fisub
add
mov
in
mov
retf
inc
in
jnp
mov
loope
add
sub
mov
inc
push
push
sbb
pop
sti
packuswb
or
sbb
or
cmp
aam
cdq
call
aam
inc
hlt
add
push
add
xchg
and
jbe
loopne
xor
pop
xor
ss
inc
xchg
div
shr
scas
push
sub
jno
push
jecxz
ret
mov
or
xor
and
cmp
fmul
mov
inc
or
add
dec
bound
cmp
jbe
add
out
in
push
xchg
sbb
jecxz
mov
mov
movs
jg
add
or
ror
in
jno
adc
in
movs
imul
or
lods
and
and
fcom
cmp
test
dec
jmp
shl
outs
and
xor
lods
rcr
push
loopne
je
popa
std
jle
loopne
add
add
push
push
mov
dec
mov
fdiv
mov
daa
je
pop
mov
jmp
dec
int3
and
mov
pop
jo
pop
movs
cwde
push
test
stos
outs
jns
jbe
shl
and
loope
push
fdiv
inc
cmp
in
inc
sbb
push
retf
or
stc
sbb
bound
fadd
add
sti
inc
dec
jo
add
in
ins
in
inc
push
loope
cs
in
add
ins
push
movs
(bad)
or
mov
mov
or
jbe
rcl
xor
mov
push
push
inc
mov
and
ret
add
mov
sbb
mov
adc
push
ja
add
push
push
inc
mov
call
movs
sub
out
push
inc
adc
jl
cwde
cs
test
xchg
lock
dec
jne
sbb
test
add
vprotb
loopne
js
(bad)
push
je
inc
and
es
adc
push
rcl
pop
mov
nop
pop
dec
and
aam
loopne
data16
adc
cmp
xchg
or
push
je
pop
mov
and
push
lahf
jp
jle
pop
inc
out
lock
mov
je
pop
push
push
jmp
cmp
or
jecxz
push
jmp
sbb
pop
or
into
or
or
(bad)
jae
mov
adc
add
jecxz
popa
mov
jle
sbb
adc
inc
inc
xor
inc
rol
mov
sub
out
xchg
sub
sbb
sti
fadd
(bad)
pop
or
jmp
lock
frstor
or
out
or
imul
cmp
fimul
cmp
jae
inc
aaa
out
rcl
in
clc
cmps
sub
outs
sub
adc
push
jno
mov
adc
stos
push
into
inc
mov
mov
pop
sub
add
cmc
push
fcmovnbe
adc
jne
pusha
inc
(bad)
leave
xchg
lea
push
rol
pop
scas
or
jmp
xchg
ret
dec
add
pop
enter
movs
mov
push
jecxz
loopne
test
adc
add
mov
and
aas
repnz
mov
mov
ds
ins
ret
xchg
aaa
or
or
or
adc
add
inc
sbb
mov
lea
fimul
rol
jmp
add
xor
fnsave
(bad)
lahf
pop
or
xchg
inc
out
or
adc
jo
or
push
or
es
pop
and
mov
adc
lock
and
inc
cs
pop
paddb
sbb
inc
and
sbb
call
cli
sbb
inc
push
pop
rol
pop
or
cli
sbb
push
std
out
push
adc
inc
lea
sub
xlat
bound
inc
and
mov
cmps
mov
xchg
pop
jo
jg
add
inc
sub
jb
sub
je
jmp
ss
test
mov
xor
or
adc
loop
dec
or
push
sbb
mov
push
fsin
push
push
mov
inc
mov
stos
push
movs
sbb
test
shl
mov
push
les
rol
and
push
sbb
in
clc
and
dec
add
xor
dec
movs
and
cli
clc
jmp
jecxz
sahf
adc
repz
jp
daa
outs
cmp
enter
clc
in
lods
outs
add
or
test
or
movs
xchg
mov
cmp
pusha
movs
pop
sbb
adc
add
mov
jo
dec
xor
jecxz
lea
sub
ss
cmp
jo
mov
cmp
je
xor
and
sbb
add
mov
mov
xor
popf
hlt
jmp
sbb
mov
push
cmp
shl
mov
jmp
add
xchg
mov
es
(bad)
scas
shl
adc
test
(bad)
ja
add
fstp
les
inc
sbb
call
test
je
mov
inc
or
(bad)
xchg
retf
adc
pop
lock
pop
ins
xchg
mov
jmp
fwait
and
popf
adc
add
ror
outs
inc
out
dec
adc
sub
push
lea
lea
inc
sub
push
call
or
or
cwde
ja
enter
xchg
inc
lea
cmp
add
cdq
ins
jge
ss
ret
cmc
jno
cwde
add
cld
and
adc
xchg
movs
arpl
xchg
sub
push
adc
mov
sbb
or
jmp
fld
push
int3
or
adc
add
or
mov
push
and
sub
sub
jo
inc
imul
in
jae
dec
jbe
adc
rol
sub
or
leave
adc
test
cmp
lock
mov
mov
js
je
ror
push
test
add
loopne
push
lods
or
xchg
jge
push
shl
and
push
jns
pusha
push
sbb
inc
and
or
add
dec
loopne
(bad)
xor
sub
or
and
in
in
sbb
jmp
inc
push
xor
pop
sbb
inc
add
test
lods
ss
jns
jno
mov
popa
and
mov
push
adc
sbb
(bad)
movnti
inc
int
pop
inc
cmp
add
or
xor
or
shl
mov
push
leave
mov
jle
cwde
retf
mov
ret
into
pushf
lahf
adc
sahf
push
inc
or
fmul
and
fwait
cld
ja
sub
lods
dec
popf
sbb
push
test
stos
jne
scas
xchg
jle
iret
push
add
mov
int3
fcomp
cdq
sub
jae
lods
ret
push
or
sbb
add
inc
in
dec
test
shr
lods
test
and
xor
cmp
je
mov
sub
adc
jmp
out
dec
and
sbb
push
cwde
dec
popa
add
cmp
push
cmp
xchg
shr
jbe
aaa
ficom
aas
jmp
fs
and
imul
lahf
add
jnp
rol
cs
sbb
outs
cmp
(bad)
push
push
mov
test
jl
inc
add
dec
test
jl
inc
test
mov
dec
sub
add
jne
dec
jne
jle
xor
adc
(bad)
mov
mov
stos
add
mov
sub
rol
hlt
retf
fild
wrmsr
ins
inc
hlt
pop
mov
or
dec
lock
mov
adc
adc
(bad)
adc
(bad)
dec
repz
fsub
push
adc
jg
xchg
repz
cdq
pop
stos
addr16
aas
push
push
adc
fdiv
fisttp
pop
or
das
and
inc
mov
or
mov
mov
adc
cmp
and
imul
fyl2x
add
aam
int3
xor
jb
pushf
cmp
retf
inc
mul
push
ror
push
and
call
pusha
sbb
push
sti
sub
adc
lock
cmp
cld
pop
pusha
mov
mov
pop
dec
repz
loopne
or
xor
mov
ss
(bad)
xor
cmp
mov
and
adc
cmp
hlt
cmp
mov
out
mov
sbb
cmp
retf
push
inc
pop
add
and
dec
ficom
dec
xor
or
ffreep
xchg
shl
test
or
dec
test
ret
jmp
dec
cs
jb
cmp
jmp
addr16
jnp
(bad)
mov
imul
shl
xor
push
dec
jne
call
fadd
adc
mov
shr
adc
test
sahf
inc
adc
push
(bad)
fisub
push
or
outs
lods
jb
out
xor
sbb
or
hlt
inc
adc
sub
mov
(bad)
jnp
xor
hlt
sti
mov
cmp
mov
adc
or
push
dec
lods
rcl
cmp
enter
es
mov
in
adc
mov
cmp
inc
inc
icebp
inc
test
adc
cmps
scas
or
cmp
shl
xchg
jb
mov
mov
js
sub
inc
inc
hlt
jne
cmp
push
add
ins
outs
popw
push
add
popa
add
mov
enter
push
or
ficom
mov
add
pushf
ror
mov
aam
test
out
sub
aas
fadd
adc
das
jp
je
jmp
mov
cmp
push
lea
or
inc
dec
and
cli
add
and
sbb
(bad)
push
adc
sub
dec
push
pshufw
fcomip
mov
test
test
and
or
mov
outs
shl
mov
push
in
add
imul
pop
in
neg
adc
xchg
adc
or
push
cld
xor
xchg
cmp
pushf
es
lock
inc
shl
or
or
jno
(bad)
xorps
call
push
pop
add
or
scas
or
dec
ret
mov
sbb
cmp
or
jb
sub
sbb
out
test
fcomp
and
pop
inc
ret
sbb
mov
test
adc
xchg
or
pop
bound
jb
ss
xlat
and
loop
shr
test
or
adc
xchg
fcom
inc
scas
mov
push
or
cmp
jnp
jne
cmp
sub
aaa
(bad)
mov
push
ins
or
mov
and
xchg
hlt
popa
(bad)
and
mov
mov
es
shr
push
push
xor
in
fild
xor
or
push
and
sbb
cmp
inc
into
dec
mov
xor
bound
add
or
adc
pop
sbb
ins
int
push
icebp
int3
add
mov
jns
dec
outs
inc
int3
add
xor
mov
not
pop
cmps
movs
xor
sub
sub
dec
xor
jb
lahf
ja
push
xchg
and
cmp
mov
inc
ins
iret
popa
or
mov
retf
pop
daa
outs
or
cmp
and
push
shl
shl
cmp
jge
add
xor
not
fidivr
push
or
mov
call
inc
xor
push
imul
xor
adc
push
inc
push
push
xchg
in
push
mov
xchg
dec
mov
jmp
jo
rcl
bound
clc
xchg
or
bound
add
cmp
sub
or
loope
push
mov
jo
xor
pop
or
sbb
xchg
out
xor
stc
xlat
dec
ret
jnp
hlt
cwde
dec
dec
jmp
and
lods
loope
inc
je
or
xor
sub
sbb
int3
or
pop
or
cmc
push
daa
adc
pusha
mov
mov
sahf
or
mov
inc
outs
daa
lock
cmp
mov
movs
push
push
push
jl
fcom
loopne
jle
add
mov
pop
jnp
add
pop
xor
push
lea
nop
mov
cmp
jae
and
loope
or
stos
(bad)
sub
ror
std
mov
leave
push
pop
push
inc
mov
dec
test
nop
adc
lds
movs
loopne
cmp
sbb
(bad)
jne
inc
mov
sbb
jecxz
lods
adc
inc
dec
ins
popa
gs
outs
clc
mov
push
mov
les
arpl
mov
popa
jo
imul
imul
adc
nop
or
cmps
inc
ror
push
dec
add
xor
dec
cmp
and
inc
jmp
dec
lea
pop
dec
push
adc
pop
cld
adc
dec
je
mov
adc
es
pop
push
mov
cld
mov
mov
nop
jl
scas
les
idiv
mov
and
(bad)
sbb
mov
ret
int
xor
inc
enter
or
mov
mov
sar
dec
ins
push
cmp
neg
stos
mov
lea
gs
push
rcr
dec
(bad)
xor
in
sbb
dec
lds
push
unpcklps
mov
cmp
mov
sub
sbb
sbb
push
jmp
lods
jmp
jnp
jae
out
mov
jo
popf
xor
hlt
xchg
mov
mov
call
add
mul
movs
add
sbb
icebp
xchg
xor
mov
and
or
dec
cld
call
popf
xchg
xchg
je
test
push
dec
jne
lea
gs
ss
cmp
pop
loopne
push
jp
ret
mov
sbb
xor
sub
push
xor
(bad)
gs
mov
cmc
push
pusha
dec
pop
inc
test
pop
xchg
rol
xor
sbb
xor
sar
je
rcr
add
add
add
push
fbld
xor
sub
xchg
mov
pop
mov
loopne
fwait
movs
ss
popa
inc
test
push
test
push
mov
xchg
cmp
(bad)
xor
sub
fsub
push
clc
xchg
(bad)
or
xchg
mov
add
mov
jmp
pop
cmp
fdiv
mov
stos
cmp
test
mov
fwait
cmp
jo
inc
sar
mov
add
xchg
cmp
fsubr
sbb
inc
or
adc
push
and
rol
shr
push
ret
xchg
call
fild
sbb
mov
inc
fsub
adc
shr
mov
cmp
sbb
dec
aaa
int
mov
sbb
jnp
test
je
adc
adc
ret
and
mov
repz
fisttp
ret
aam
xor
push
adc
arpl
mov
mov
icebp
test
in
ret
mov
stos
leave
inc
or
adc
rcr
test
ret
sbb
adc
cmp
add
cs
xor
ss
add
add
mov
aam
add
mov
pop
lahf
rcl
mov
xchg
std
push
add
mov
xchg
and
mov
test
inc
je
mov
aaa
sbb
jmp
jl
sub
jmp
mov
or
add
inc
mov
in
add
xor
sbb
shl
push
push
push
data16
and
dec
inc
mov
and
cmp
ja
xchg
out
pop
ret
sub
sahf
fucomp
mov
in
mov
jmp
and
xor
and
xor
xor
dec
and
fwait
and
(bad)
or
pcmpgtw
dec
pop
popa
xchg
pop
push
scas
cmp
test
iret
mov
not
sbb
icebp
out
mov
jl
es
add
adc
leave
shl
add
call
adc
scas
lahf
hlt
mov
push
data16
test
mov
xchg
jo
test
aad
mov
loopne
stos
push
pop
pop
xchg
test
sub
jmp
scas
and
fisubr
and
jle
stos
mov
push
int
clc
add
test
add
xchg
sbb
fs
inc
cmp
mov
inc
pop
sahf
xor
sub
push
rcl
les
shl
inc
pop
scas
scas
adc
hlt
mov
and
cmp
ret
mov
cmp
or
add
or
addr16
test
lds
cmp
and
cmp
scas
mov
loope
ins
add
arpl
or
jae
xor
and
adc
mov
int3
rcl
rcr
loope
sub
shl
mov
push
mov
add
cmps
in
mov
pop
js
ud1
pop
mov
push
cs
les
call
sub
jle
fisttp
pop
adc
nop
jae
mov
and
push
pop
mov
jbe
jle
xor
clc
(bad)
(bad)
call
dec
and
dec
mov
and
jl
cwde
mov
fs
es
ret
aas
clc
cmp
jne
sbb
or
rcl
test
dec
adc
add
stc
push
xchg
mov
add
pop
sbb
imul
je
lea
loopne
push
test
fnsave
fcom
inc
out
sub
(bad)
loop
cmp
and
add
xchg
mov
int
sbb
pop
pop
mov
and
movlhps
sbb
mov
push
data16
add
add
int3
frstor
mov
add
add
cmp
fdivrp
(bad)
sti
push
add
inc
inc
push
add
push
add
pop
add
imul
jae
int
lock
pushw
cmp
outs
in
fist
sub
dec
bound
inc
add
scas
pop
mov
ss
push
push
push
cmp
int3
int3
push
dec
push
cmp
xor
adc
push
push
push
dec
sahf
inc
and
sbb
sbb
dec
scas
push
dec
cmp
clc
mov
addr16
xor
mov
adc
push
push
fnstsw
(bad)
popa
je
gs
adc
jbe
or
or
idiv
or
add
gs
push
adc
in
mov
add
inc
imul
and
dec
or
or
inc
outs
ins
outs
jb
gs
mov
nop
sub
sub
cmp
rol
fsubr
in
repz
add
and
pop
mov
stc
mov
push
pop
movs
sbb
les
js
jae
xchg
leave
cwde
dec
add
imul
add
daa
sub
inc
dec
outs
arpl
xor
mov
inc
add
call
xor
mov
das
adc
(bad)
push
inc
dec
popa
outs
jp
js
mov
dec
ret
or
ins
mov
cld
shr
aam
or
push
gs
out
mov
add
inc
and
fcom
or
cmp
add
movs
(bad)
xchg
gs
add
and
inc
gs
jb
jns
pop
aas
bound
add
mov
inc
cwde
gs
popa
les
xor
shl
and
xor
xchg
(bad)
out
add
push
push
outs
dec
mov
push
mov
pop
loope
adc
mov
das
or
pop
or
mov
push
loopne
xor
inc
out
xor
cmps
enter
int3
mov
add
test
pop
outs
inc
inc
pop
sub
jo
outs
jno
xchg
movs
mov
cmp
ficom
inc
adc
adc
xor
mov
cmp
jne
js
ja
pshufw
jg
pop
and
int3
or
pop
and
and
fdivrp
cmp
mov
pop
or
fadd
mov
pop
push
loopne
paddb
fst
xchg
addr16
pusha
dec
cwde
xchg
ficomp
test
sub
push
lock
in
xor
and
mov
or
adc
and
loope
rcr
inc
in
rcl
daa
and
or
pop
sahf
push
xor
xor
loop
jg
std
mov
dec
or
inc
xchg
retf
cmp
rol
or
jo
idiv
call
inc
cmp
jne
inc
cmp
shl
pop
pop
loopne
test
pop
jmp
push
popa
(bad)
or
adc
pop
pop
mov
pusha
mov
mov
pushf
sbb
or
cmp
popa
ret
push
fmul
add
mov
dec
retf
pop
pop
fcom
call
xchg
out
push
adc
xchg
cmp
popa
adc
sar
adc
xor
movs
jb
push
cmovle
dec
push
jmp
mov
stc
pop
ja
and
bt
jae
jnp
lock
xor
cmp
jne
mov
xchg
jg
dec
cmp
inc
mov
pop
pop
ret
test
adc
push
push
push
cld
mov
hlt
push
sbb
ret
cmp
add
out
add
cmp
mov
sbb
je
imul
fmul
jl
or
and
popf
add
ds
aas
into
mov
std
or
push
or
repz
popf
cmp
les
inc
or
out
out
daa
push
xor
or
jnp
push
ss
or
push
ja
popf
xlat
mov
mov
addr16
or
jb
push
sbb
xor
and
inc
sti
sbb
push
aaa
add
loopne
jnp
push
jmp
cmps
or
iret
into
xor
push
daa
retf
in
fstp
shl
or
pop
mov
popf
inc
mov
ss
pop
nop
fnstenv
and
jecxz
retf
xchg
jbe
or
daa
push
mov
pop
ss
sbb
imul
inc
xchg
or
jnp
sbb
fdiv
cwde
mov
mov
dec
or
in
mov
add
sub
push
ret
pop
shl
out
clc
scas
sbb
push
add
push
mov
leave
sub
push
push
(bad)
cmps
ret
mov
push
lock
and
rcr
dec
inc
jo
adc
add
ret
scas
jbe
push
jbe
push
jo
jb
push
xchg
mov
sub
add
dec
jb
gs
fs
es
es
mov
cmc
cmp
shl
cmc
aaa
cmc
(bad)
xor
and
outs
jne
je
rcr
dec
pushf
cmp
push
cmp
dec
in
xchg
dec
add
repnz
inc
xchg
ins
xor
or
out
lahf
sub
push
jne
push
mov
inc
dec
xchg
ins
and
and
push
fild
fsubr
arpl
and
sbb
gs
adc
mov
mov
push
mov
or
sti
mov
inc
shr
push
push
jns
fsubr
dec
dec
outs
jb
cmp
xchg
in
(bad)
mov
(bad)
aas
dec
xchg
loopne
cmp
pop
ja
inc
push
push
push
je
arpl
mov
jo
pop
jle
or
xor
push
or
sahf
rcr
or
add
or
sbb
(bad)
push
add
(bad)
jo
sub
addr16
mov
rcl
test
clc
pop
mov
test
mov
dec
and
inc
fild
add
dec
or
ret
mov
xor
sti
or
sbb
mov
in
mov
xchg
pushf
push
clc
mov
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
xchg
dec
lahf
xchg
jnp
add
mov
clc
outs
inc
jne
je
dec
inc
sub
adc
out
mov
jo
jp
push
or
mov
push
push
test
imul
outs
addr16
hlt
fadd
jmp
mov
cli
mov
push
out
scas
mov
das
je
push
sbb
daa
mov
enter
aam
xor
or
nop
inc
pop
hlt
xor
cs
add
push
fs
dec
es
inc
inc
add
pop
push
push
mov
retf
js
mov
or
into
scas
jo
jo
into
sbb
push
or
adc
sbb
add
rcl
dec
ficom
xor
sub
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
cmp
dec
mov
cld
ret
clc
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
loop
mov
mov
adc
retf
test
add
xchg
mov
sbb
ins
push
push
push
mov
stc
push
xor
aad
add
mov
or
push
inc
adc
mov
jno
mul
push
fsubr
adc
(bad)
dec
out
push
jb
add
fisubr
scas
shl
ret
es
push
hlt
pop
mov
jns
xchg
add
out
gs
(bad)
popa
dec
test
ds
int
out
add
push
dec
add
push
push
in
or
cmps
fnstenv
and
dec
pusha
push
mov
pop
add
xor
xor
sub
cmp
adc
not
mov
push
cld
pop
scas
pop
cmp
leave
sub
add
icebp
sub
sar
inc
push
jo
(bad)
fldenv
ror
or
loopne
cmps
mov
outs
imul
mov
sar
call
outs
addr16
xor
mov
inc
dec
add
(bad)
cmp
adc
(bad)
enter
push
fmul
adc
cmc
jmp
push
inc
push
pop
pop
lock
gs
xor
push
mov
outs
jb
lods
jne
je
jle
add
mov
test
es
gs
push
sti
dec
sub
dec
or
mul
and
add
or
fs
sub
pop
adc
mov
(bad)
mov
jnp
add
(bad)
mov
clc
adc
(bad)
call
jo
ficomp
jno
pushf
les
js
cli
das
aam
or
push
fs
scas
rcr
add
mov
pop
inc
pop
jae
add
lgs
mov
push
pusha
jg
mov
sbb
dec
xor
repz
mov
outs
pop
das
push
adc
outs
sub
jnp
out
sbb
pushf
add
jp
cld
loopne
inc
pusha
jo
push
add
push
xor
ss
int3
imul
and
sbb
sbb
pusha
cwde
sti
addr16
push
sub
pop
or
mov
add
pop
jb
lds
jo
xor
enter
push
sub
movs
loop
inc
or
std
jmp
adc
dec
or
mov
inc
dec
or
xor
ja
inc
dec
or
test
adc
push
inc
jb
popa
jns
sti
pushf
(bad)
xor
cs
pop
jo
xchg
adc
sti
inc
(bad)
cmps
mov
dec
cmovo
pop
(bad)
adc
xor
jne
retf
fisubr
push
mov
gs
mov
(bad)
imul
nop
fstp
outs
std
lock
outs
jbe
test
jb
cmp
jp
lods
das
sub
adc
pop
lods
(bad)
push
imul
dec
inc
outs
outs
(bad)
movs
les
scas
in
ins
ins
gs
scas
inc
loope
fimul
mov
add
inc
jne
sub
pop
add
pop
xchg
das
mov
sbb
loopne
imul
xchg
aaa
push
fild
pop
add
or
bound
push
and
iret
jne
lods
sub
je
sbb
or
push
cmp
shl
pop
push
outs
sbb
rcr
sub
add
cmps
aas
outs
sub
add
neg
add
mov
sub
sbb
stos
cs
popa
outs
push
inc
jnp
mov
leave
or
call
ins
jo
dec
iret
enter
in
sbb
sbb
jnp
clc
adc
ins
je
dec
ret
mov
or
push
icebp
dec
outs
or
inc
push
in
push
int
fldcw
les
and
push
or
shr
and
or
jmp
js
push
aad
or
inc
add
retf
xor
mov
push
inc
mov
ret
add
movaps
cld
inc
pop
add
pop
cwde
ret
call
lds
mov
jne
arpl
lods
mov
fidiv
retf
xchg
test
push
pusha
mov
mov
hlt
movs
in
movs
xchg
mov
mov
ror
mov
pop
mov
mov
imul
fadd
adc
aad
jae
call
stos
dec
xor
pusha
xor
or
inc
adc
push
je
xor
pop
daa
inc
lds
inc
sub
test
inc
or
ja
push
test
js
in
out
into
push
xor
mov
xchg
inc
fiadd
hlt
inc
out
add
push
js
mov
ror
jne
and
cli
dec
sub
add
push
inc
xchg
dec
pop
jo
pop
fcom
add
in
call
jne
inc
popf
sub
outs
neg
sub
adc
loopne
fsub
sbb
(bad)
stos
xlat
jbe
jge
ror
dec
pop
adc
push
inc
cmp
imul
cmp
sar
adc
dec
dec
dec
inc
pop
xor
cmp
ins
mov
xchg
aam
or
leave
enter
aad
pop
fs
leave
xchg
int3
sbb
push
mul
in
jp
aad
xlat
aas
mov
pushf
fisttp
movs
dec
(bad)
pop
add
jbe
iret
fimul
push
and
or
push
es
jne
dec
mov
push
dec
dec
push
dec
into
dec
or
aad
(bad)
pusha
aad
test
mov
cmp
ja
or
jae
cmp
xor
cwde
adc
mov
dec
mov
sbb
jae
rcl
test
push
popa
jg
stos
push
jg
mov
ja
inc
fs
mov
push
popa
ins
jne
dec
aad
inc
add
inc
bound
push
inc
cs
sub
push
push
in
jbe
xchg
add
dec
outs
or
pushf
outs
cdq
jbe
push
add
add
add
jbe
dec
data16
nop
nop
out
add
add
sub
add
sub
add
xchg
or
add
mov
or
dec
add
and
je
call
rcl
or
add
lea
adc
sbb
inc
or
pop
dec
jae
imul
iret
pop
and
push
dec
add
push
fsub
or
xor
aad
ror
imul
add
sbb
lea
add
and
mov
mov
mov
pop
jmp
push
xchg
inc
js
nop
mov
cdq
ins
xchg
dec
add
mov
ins
repnz
pop
xchg
popf
or
push
arpl
xchg
xchg
xor
pop
xor
push
cwde
push
lock
lahf
or
ja
and
inc
mov
inc
mov
xchg
and
adc
dec
int
movs
sub
inc
dec
stc
push
dec
es
aaa
and
sar
add
aaa
add
inc
or
popa
imul
adc
mov
data16
and
test
cmp
pop
cdq
loop
add
push
or
sbb
movs
xor
add
dec
sbb
xchg
pop
push
sti
sti
pusha
sbb
fsubr
call
dec
or
or
push
in
mov
stos
popa
pop
add
xchg
or
xchg
sahf
or
pusha
dec
test
push
add
push
jb
ins
test
cmp
xchg
xor
cwde
xor
push
push
jmp
bound
call
jo
pop
pop
lea
inc
inc
add
cmp
adc
jno
adc
adc
pop
pop
mov
(bad)
leave
out
fiadd
xchg
jmp
add
sbb
sbb
into
and
push
aas
cwde
cli
mov
mov
inc
popa
push
arpl
jns
xor
adc
add
loopne
push
and
push
aas
mov
mov
sbb
adc
inc
push
pop
enter
mov
dec
cmp
jl
mov
lea
mov
add
fcomip
test
mov
add
xor
inc
int3
pop
push
mov
cmp
ror
imul
sbb
cmps
add
mov
xchg
inc
xor
jne
sbb
jle
push
mov
add
mov
add
mov
mov
mov
imul
or
adc
popf
rol
and
lea
(bad)
popf
push
dec
sbb
(bad)
clc
lds
or
je
mov
adc
xchg
push
push
or
push
arpl
pop
into
outs
fild
aaa
push
je
je
inc
or
sub
ret
add
mov
mov
in
pop
add
push
popf
and
daa
push
push
mov
test
jl
dec
cmp
jl
mov
mov
and
inc
clc
sbb
add
add
ss
out
pop
sti
cld
iret
les
inc
sbb
xchg
mov
test
jbe
inc
inc
sbb
in
outs
outs
rcr
retf
cs
in
dec
lea
jmp
add
mov
pusha
mov
pop
pop
(bad)
mov
(bad)
fadd
inc
dec
add
mov
sbb
and
push
jne
imul
cmp
inc
inc
add
or
data16
int3
mov
inc
cli
jnp
je
dec
dec
or
cmp
mov
cmps
push
mov
push
scas
mov
and
stos
mov
jae
inc
pop
add
xor
dec
inc
ret
adc
ds
pop
das
test
add
push
or
sbb
or
inc
mov
push
mov
cmp
push
dec
xor
pop
and
cmp
je
(bad)
fmul
or
ja
adc
add
out
sub
jbe
fdiv
inc
fiadd
call
pop
das
(bad)
push
add
mov
push
(bad)
cmp
xchg
std
hlt
push
mov
mov
inc
sbb
lods
jp
test
rcr
pop
jmp
ss
add
or
push
cmp
and
int
ds
rcr
out
arpl
jge
je
shl
neg
mov
push
cld
push
(bad)
ja
pop
mov
cmp
pop
mov
push
dec
mov
lock
xchg
push
mov
cld
push
cmc
and
push
add
loope
cmp
sahf
cmp
jge
(bad)
or
xlat
jmp
fcom
inc
and
xchg
loopne
cmc
test
pushf
les
sub
xor
loopne
xor
pop
xchg
loope
mov
idiv
mov
xchg
ss
fadd
jbe
or
or
js
inc
and
or
popf
jo
push
inc
rol
inc
ffree
imul
sub
sub
push
jo
popa
adc
mov
push
gs
jmp
test
cld
cmp
push
push
jne
or
jle
or
jnp
cwde
popa
mov
or
jl
jmp
icebp
icebp
hlt
in
dec
das
xor
cmc
aam
sti
pop
mov
mov
jbe
adc
sub
mov
loopne
lea
push
div
and
mov
pop
sbb
cmp
sub
pop
int3
mov
adc
nop
mov
sub
adc
pop
add
aas
mov
jge
dec
rcr
mov
and
xor
cli
cmp
or
mov
lea
inc
xor
dec
mov
inc
scas
fmul
jne
push
int3
add
xor
(bad)
jae
sbb
popa
ds
fnstcw
jae
outs
in
push
xor
mov
jnp
lods
xchg
shl
pusha
push
or
pop
rcr
and
mov
aad
loope
mov
ss
cmps
dec
push
pop
add
inc
sub
dec
(bad)
(bad)
mov
fwait
(bad)
fcmovbe
ins
and
clc
sbb
data16
scas
test
sub
sub
jle
mov
ss
cdq
test
xor
dec
mov
int
xor
sbb
bound
or
mov
gs
mov
pop
sbb
and
pop
clc
lea
loop
mov
scas
retf
adc
rcl
test
int
and
or
int
les
adc
jnp
add
sha256msg1
add
add
jle
cmp
fld
out
xchg
clc
repz
inc
je
test
xchg
and
(bad)
sar
bound
xchg
cdq
xor
pop
or
loope
pusha
cli
js
or
mov
mov
add
adc
add
fcmovnb
hlt
dec
xchg
loopne
pusha
pusha
sub
data16
ret
ret
fnsave
test
or
adc
add
pusha
pop
psubd
xchg
xor
out
lea
xlat
rol
and
sahf
nop
scas
inc
cmp
xchg
xor
mov
cmp
leave
jne
aas
fwait
cmp
xchg
push
mov
ins
not
jge
and
sbb
hlt
(bad)
ja
call
(bad)
jnp
or
jnp
mov
adc
inc
ja
or
outs
dec
xlat
or
and
pusha
not
mov
mov
inc
sbb
mov
dec
pop
cmp
sbb
xor
push
or
ret
daa
xor
in
ret
adc
pop
pop
nop
sbb
push
(bad)
in
sbb
cmp
iret
sub
aas
sbb
inc
iret
xchg
ror
fidivr
xchg
mov
popa
das
dec
pop
pop
sub
adc
pop
or
loop
xchg
xor
mov
xlat
mov
push
jo
cmp
mov
push
jmp
lea
arpl
pusha
je
and
cs
mov
pusha
pop
push
jne
sbb
jbe
add
or
mov
dec
xor
jns
adc
add
ret
div
and
ds
lock
mov
add
jo
lods
sub
jo
xlat
adc
outs
(bad)
pop
popa
ret
push
cmp
jmp
ror
add
mov
inc
dec
jg
fdivrp
inc
jmp
lahf
(bad)
stos
fidivr
push
mov
sti
mov
mov
xchg
retf
je
retf
mov
fsub
cwde
iret
hlt
(bad)
dec
iret
les
adc
call
cld
jo
rcl
and
sub
cmps
rcl
jne
push
jl
mov
idiv
jle
idiv
lea
dec
cmp
jg
push
jl
test
ret
fstp
mov
push
call
add
test
inc
jle
push
add
dec
clc
jne
mov
xor
call
inc
retf
movs
cmp
add
dec
cmp
adc
dec
and
push
adc
add
inc
test
daa
jo
shr
pop
lock
jg
mov
icebp
or
sub
shr
add
adc
mov
adc
fdivr
add
mov
call
lock
add
lea
jmp
popa
jbe
out
in
sbb
je
lds
sbb
mov
pop
mov
add
ret
lea
xchg
mov
sahf
aaa
aad
shl
xchg
inc
dec
mov
loopne
pop
push
add
jne
mov
inc
or
sbb
pop
imul
add
mov
out
ret
mov
add
cwde
lock
test
mov
imul
das
jg
cmp
jl
push
je
cmp
push
cs
add
rcl
mov
dec
cmp
cmp
mov
lea
or
ins
cmp
enter
ds
push
sub
mov
mov
mov
into
test
mov
sbb
dec
mov
jnp
xor
xchg
adc
loope
inc
gs
jne
je
add
push
cwde
add
lahf
inc
data16
jp
jmp
adc
cmp
adc
xor
cmp
adc
add
or
xor
pop
push
add
loopne
outs
out
adc
push
fsub
test
mov
rcr
xor
fiadd
test
mov
push
adc
sbb
push
xor
dec
seta
xor
ins
sub
es
ins
bswap
inc
cmp
cld
out
das
in
scas
mov
push
or
adc
sti
dec
add
or
pop
(bad)
test
jne
addr16
mov
cmp
jge
pusha
rol
inc
pop
pop
pop
dec
lods
mov
or
or
int3
out
ds
pop
shr
imul
xchg
jo
xor
in
sbb
pop
daa
lock
cmp
pop
inc
pop
push
jg
fcomp
jp
pusha
xor
and
xor
shl
outs
je
int
scas
push
lock
mov
or
or
out
loopne
dec
daa
cmp
mov
outs
sub
mov
fsubr
test
cmp
fs
mov
push
daa
jl
add
and
pop
add
dec
pop
pusha
add
add
cld
cmp
xor
mov
out
xor
pop
jne
lds
add
xor
jecxz
fmul
xor
clc
and
mov
aas
adc
mov
mov
iret
shr
in
sbb
out
push
ror
add
into
repz
mov
jg
push
outs
or
add
or
and
xchg
stos
ret
sub
jo
(bad)
jnp
or
or
add
and
push
scas
das
les
pop
outs
sbb
fcomp
loopne
push
sbb
loopne
addr16
mov
xchg
jae
or
inc
call
dec
push
das
push
mov
push
jo
add
cmp
call
je
dec
fs
add
inc
cs
jo
sub
sub
ret
mov
cs
adc
lea
sub
imul
cmp
out
fild
je
fild
fmul
cmp
inc
xlat
mov
push
jo
neg
cld
fsubr
push
loope
push
std
(bad)
or
cmps
lock
push
mov
loope
adc
xor
mov
ins
mov
je
icebp
ins
add
adc
inc
adc
aam
je
or
sub
jmp
jmp
sub
fld
jno
cmp
adc
fucomp
out
fmul
jae
mov
(bad)
loopne
fst
fld1
fstp
loope
addr16
add
sub
cmps
aaa
pop
jecxz
mov
dec
(bad)
mov
in
enter
sub
dec
xor
jmp
jne
mov
add
mov
inc
or
ss
mov
movs
jge
or
sub
outs
mov
mov
hlt
pop
enter
mov
sub
fistp
sar
pushf
daa
shl
add
push
mov
repnz
mov
and
push
jmp
dec
cvtpi2ps
arpl
bound
push
jle
arpl
outs
dec
bound
adc
xchg
test
data16
sbb
(bad)
mov
push
mov
and
mov
sub
pop
push
popa
in
jmp
inc
fsubr
mov
and
push
imul
cmps
jne
outs
mov
mov
ret
inc
pop
movs
ss
pop
mov
add
cmp
adc
push
dec
test
jo
ins
jle
cs
out
jle
div
xor
out
daa
or
dec
cs
es
push
test
lahf
and
cmp
sbb
or
sbb
jo
cmp
pop
inc
add
mov
inc
and
inc
push
mov
pop
outs
and
push
sub
sbb
pop
icebp
or
dec
inc
dec
dec
lahf
pop
sar
js
push
bound
dec
mov
jne
das
lods
push
cs
pop
inc
or
push
sbb
pusha
add
mov
or
jne
jne
or
(bad)
call
sbb
mov
movs
outs
cmovge
imul
jg
push
(bad)
hlt
int3
or
data16
mov
mov
cmps
lea
shr
inc
ins
ins
sbb
add
or
outs
or
mov
fs
shl
dec
gs
cmp
ret
sysret
pop
lea
or
add
fwait
add
and
fcomp
mov
iret
sbb
adc
fld
cmc
sub
aaa
cmp
xor
shr
outs
das
pop
push
aaa
xor
(bad)
sbb
xor
mov
in
(bad)
into
(bad)
dec
jle
push
push
inc
jbe
or
jl
cdq
adc
push
sub
push
or
sbb
sub
je
imul
cmp
adc
mov
and
add
mov
inc
addr16
or
outs
adc
sub
sub
loope
cmp
mov
mov
mov
cwde
cmp
or
cmp
pusha
push
jb
xor
or
mov
mov
sub
inc
dec
or
pop
pop
mov
dec
movs
mov
std
pop
cmp
add
cli
mov
sti
xlat
jns
aaa
pop
es
push
and
pushf
ja
adc
lds
mov
lock
and
test
out
or
and
imul
les
fbld
jp
enter
movd
dec
outs
sub
packsswb
sbb
push
adc
arpl
mov
into
xor
push
or
dec
movs
inc
adc
xchg
movs
dec
mov
push
add
dec
pop
ins
adc
rcl
stos
fdivr
dec
or
inc
xor
inc
ins
jbe
sbb
dec
and
push
pop
add
and
dec
xchg
jno
mov
dec
jae
or
sbb
cmp
cmp
lods
jno
xlat
push
and
sub
push
ss
stos
add
ror
cld
or
daa
sbb
mov
arpl
adc
push
or
push
jo
push
loopne
sbb
xor
jp
fist
into
retf
daa
xchg
pop
inc
ins
jae
mov
div
lods
shl
outs
cmp
sysexit
std
test
stos
push
(bad)
aad
mov
test
ret
add
ja
or
scas
pushf
or
xor
rcr
add
dec
push
dec
mov
xlat
scas
pop
rol
dec
adc
add
cmp
adc
dec
std
add
call
arpl
mov
pop
mov
sbb
push
jl
push
jo
mov
pop
dec
cmp
setno
add
pop
neg
enter
mov
mov
push
lods
or
mov
sahf
fisub
dec
add
call
xor
(bad)
nop
loope
clc
out
unpckhps
test
xchg
inc
outs
outs
and
cmps
pusha
inc
pop
xchg
jae
xchg
ins
nop
and
inc
dec
das
pop
loopne
cmp
mov
xchg
adc
test
mov
jl
push
sbb
add
mov
jl
mov
add
jmp
xor
xor
clc
in
push
xchg
out
lea
add
retf
popf
adc
(bad)
dec
sbb
daa
sub
clc
jne
aaa
rol
add
or
gs
outs
jae
popa
add
outs
or
add
sbb
js
in
ficomp
or
sbb
inc
add
loopne
jne
mov
dec
rol
ds
cmp
adc
jge
repnz
push
push
ins
push
add
sub
push
ret
push
cmp
jne
push
(bad)
aad
push
das
jl
lea
sub
cmp
int
icebp
outs
outs
sbb
loopne
cs
jmp
xchg
shl
sub
out
fcomp
rcl
outs
into
mov
add
add
in
retf
push
sbb
sub
shl
jb
(bad)
out
pop
add
or
push
sbb
jmp
bound
and
outs
push
xchg
(bad)
inc
push
push
outs
outs
xchg
and
or
or
add
adc
cmp
cwde
fabs
xor
cs
add
jbe
jo
push
push
mov
int
shl
jo
dec
add
ins
(bad)
popa
dec
mov
aad
mov
lock
or
push
pop
add
not
call
retf
sahf
test
bound
outs
pop
out
pop
inc
pusha
mov
lahf
xchg
xor
mov
cdq
inc
loopne
or
(bad)
pop
jecxz
sbb
pop
mov
mov
jne
outs
xchg
or
adc
mov
(bad)
int3
or
and
xor
and
loop
push
in
fcmovb
inc
hlt
adc
pop
lods
jo
push
mov
inc
cmp
or
add
cdq
js
test
shl
xor
add
ins
or
in
inc
lea
jmp
adc
call
xor
movs
(bad)
add
loopne
(bad)
jp
pop
mov
adc
sbb
inc
(bad)
pushf
arpl
fnsave
inc
add
div
mov
and
cmp
dec
jp
in
push
pop
push
push
cmp
inc
lea
scas
add
in
adc
(bad)
jbe
(bad)
jo
popf
adc
loope
(bad)
jg
or
(bad)
dec
add
push
mov
jmp
mov
cmp
or
inc
sbb
push
push
mov
inc
mov
push
je
sub
or
jmp
mov
adc
add
jno
pop
mov
xor
mov
cmp
ret
rcr
ins
ficom
daa
jl
hlt
xchg
xor
xchg
retf
cld
sub
pop
retf
(bad)
jle
mov
xchg
pusha
fisubr
sar
cli
jge
(bad)
jno
mov
(bad)
jmp
xor
(bad)
push
pop
cld
and
js
lock
int
mov
test
outs
inc
or
mov
mov
or
mov
add
cmp
pop
mov
bound
push
lea
or
hlt
jo
adc
adc
sti
jb
or
and
out
or
jb
sti
rol
mov
or
sub
add
push
adc
inc
adc
scas
and
fld
add
sbb
push
enter
mov
outs
icebp
rol
sub
xor
inc
jb
sub
dec
icebp
jmp
add
adc
je
or
mov
xor
adc
jo
cmp
add
mov
add
adc
stos
aaa
dec
adc
xor
sub
clc
xchg
mov
test
call
jmp
jg
jae
je
mov
adc
mov
pop
lock
push
inc
dec
xchg
add
sbb
xor
jmp
movs
cdq
into
lock
push
mov
push
cwde
or
adc
pop
mov
ret
outs
pusha
push
loope
ret
repnz
lock
in
jne
lahf
retf
jmp
cmc
js
bound
into
aad
not
mov
sub
pop
fsubr
mov
fs
fcom
inc
in
popa
pop
ret
out
retf
mov
jno
pop
cdq
pop
adc
xchg
mov
pop
dec
leave
mov
test
daa
sub
inc
xor
pop
ret
clc
add
adc
cmp
dec
cmps
sub
jbe
jge
push
xor
inc
cli
dec
and
sbb
pop
push
pop
pop
push
mov
adc
stc
xor
cmp
ss
push
mov
pop
mov
pop
lea
add
aaa
shl
cmp
sub
rol
add
in
hlt
add
push
fstp
cmp
adc
push
pop
adc
ret
sbb
lock
setg
(bad)
stos
push
out
mov
jmp
dec
lock
cmp
je
add
cmp
and
and
stos
pushf
pause
dec
jmp
lods
xchg
shl
sbb
push
cmp
fs
enter
or
jne
add
jl
ss
mov
jmp
pop
add
not
sbb
adc
inc
pushf
mov
push
gs
mov
iret
push
sbb
je
or
or
mov
xor
fisub
cmps
cmp
jne
adc
int
ds
shr
jne
or
cs
add
or
dec
fcom
or
sub
daa
sub
adc
add
adc
lock
daa
call
scas
clts
mov
cmp
aam
(bad)
fist
or
in
cmps
sub
out
add
inc
inc
and
or
jle
cdq
bound
repnz
nop
adc
xor
mov
psubq
neg
(bad)
enter
adc
add
jne
pop
push
lock
out
add
jb
sub
test
fstp
adc
jbe
sub
mov
add
jl
imul
xlat
ret
push
mov
ror
iret
fadd
cmp
out
fwait
or
enter
ret
and
push
push
or
push
pop
push
fs
dec
inc
push
jle
mov
dec
mov
je
jmp
jge
and
xor
sub
sub
xor
or
push
retf
add
mov
dec
les
cmp
shl
jmp
mov
popf
xor
jg
inc
pop
sbb
je
ret
mov
(bad)
jmp
clc
mov
sti
add
pop
aaa
jb
or
sub
(bad)
mov
addr16
mov
inc
mov
aaa
pop
or
je
sub
stc
outs
mov
or
das
push
sbb
jmp
mov
mov
xor
xchg
mov
push
sub
push
clc
add
cld
push
pop
add
addr16
adc
mov
pop
nop
or
in
cmps
jge
dec
(bad)
sub
and
mov
or
stos
rol
repz
cmp
mov
jl
cmp
mov
adc
and
sbb
push
jle
or
or
nop
and
sbb
ror
add
pop
xchg
dec
add
scas
inc
and
xchg
in
sub
outs
out
es
pop
mov
(bad)
and
std
test
xchg
cld
sub
sti
xor
cmp
pusha
in
rol
into
or
lods
push
add
push
jl
aam
test
cli
push
jns
icebp
mov
mov
mov
cmp
jnp
pop
sbb
mov
push
bound
and
jmp
daa
sbb
not
and
or
lea
ret
cdq
or
lock
lock
fdiv
and
rcr
fs
shl
add
cld
clc
ret
test
rol
popa
sbb
aad
or
jle
xor
xor
jecxz
xor
dec
dec
jl
inc
popa
(bad)
mov
jmp
sbb
mov
pop
call
cli
xor
jge
sbb
ja
mov
adc
mov
inc
sbb
cmp
jne
cmp
or
nop
and
mov
js
aad
aad
sub
add
mov
loopne
loopne
lock
inc
pop
movs
mov
inc
adc
adc
inc
jo
in
adc
jne
jecxz
add
push
mov
jb
push
std
add
arpl
jbe
xor
jne
adc
xchg
vmread
mov
out
in
dec
out
in
mov
and
push
in
push
xor
jge
jne
jbe
nop
mov
add
push
pushf
adc
out
sahf
out
lods
aam
cmp
mov
call
mov
mov
push
out
push
push
jecxz
adc
cmps
push
or
or
dec
ins
jge
inc
cmc
and
push
outs
aad
push
mov
adc
fidiv
add
push
cmp
jg
jns
ja
ins
jo
es
aad
loopne
mov
xchg
ror
pop
fisttp
xchg
in
fld
pop
lds
nop
mov
and
inc
aam
cwde
test
and
ror
inc
ret
test
jne
cdq
lock
in
sbb
adc
add
ret
mov
xchg
movs
add
rcr
cwde
mov
add
inc
pop
push
xchg
cmp
push
or
mov
pop
mov
adc
inc
lea
ds
adc
icebp
pop
dec
sub
inc
add
pop
sbb
(bad)
push
dec
popa
mov
retf
and
ss
test
cmps
inc
out
or
ficom
push
cld
cmp
imul
mov
enter
imul
mov
das
imul
retf
sub
mov
adc
test
mov
xchg
mov
push
cmps
dec
inc
lock
mov
inc
adc
xor
ins
cmp
in
hlt
push
mov
pop
fisubr
push
push
aam
push
test
imul
push
stos
sub
ins
repz
scas
sub
popa
and
jp
pop
mov
push
push
fisubr
pop
push
xor
jbe
add
add
out
pop
scas
push
lock
arpl
push
adc
int3
push
lods
add
inc
pop
add
add
or
out
adc
or
inc
push
inc
dec
dec
push
add
mov
pushf
jmp
or
dec
gs
imul
mov
sub
adc
cmp
jg
sbb
outs
jo
dec
std
test
sub
inc
outs
je
outs
ins
pop
cmp
xor
push
loopne
fistp
mov
xchg
push
jecxz
fucomp
xchg
jmp
pop
retf
movs
xor
sbb
pop
mov
sub
pop
sbb
push
fwait
pop
movs
xor
das
push
sbb
inc
sub
das
dec
imul
xor
movs
xor
sbb
inc
xor
sub
sbb
inc
sub
pop
movs
and
das
cmp
hlt
sub
sbb
dec
mov
mov
push
inc
pop
cdq
cmp
les
or
test
jne
dec
mov
jne
sahf
jmp
xor
or
inc
inc
inc
inc
add
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
inc
inc
inc
inc
fs
inc
inc
je
jl
inc
inc
inc
inc
test
inc
inc
xchg
cwde
pushf
mov
movs
test
mov
pop
inc
inc
mov
sar
sub
dec
jmp
cmp
aaa
push
push
mov
test
aas
inc
mov
dec
scas
mov
repnz
hlt
lahf
cmp
sub
push
mov
jbe
add
cmp
fcom
scas
push
push
or
mov
adc
push
leave
arpl
push
inc
and
out
xor
and
push
sbb
out
adc
add
and
mov
and
in
adc
sub
and
push
fcomp
stc
push
or
sub
push
cwde
retf
and
add
addr16
pusha
sbb
movs
and
pusha
sbb
mov
aam
and
push
shl
repnz
add
je
pop
push
pusha
and
push
pusha
cmp
in
pop
push
xor
outs
lock
adc
sub
adc
fwait
push
add
sub
pushf
and
cmp
popa
adc
or
and
push
sub
xor
push
test
stos
rol
shl
ja
fs
push
lods
xchg
test
inc
movs
sub
stos
mov
jmp
adc
sbb
add
add
test
xor
mov
ror
push
push
cs
outs
pop
sbb
lock
or
cmp
arpl
in
stos
(bad)
xor
outs
dec
xor
push
pop
add
inc
mov
add
xor
dec
or
push
inc
ja
outs
or
jae
addr16
pop
and
inc
adc
test
aaa
sub
xchg
dec
dec
das
test
add
xor
adc
push
cdq
xor
add
mov
test
add
dec
int
dec
pop
xor
aaa
dec
dec
or
adc
sbb
data16
dec
test
int3
fdiv
pop
out
ss
test
cmp
aaa
jae
aam
ret
and
int
xchg
pop
cmps
outs
cmp
adc
aaa
xor
(bad)
neg
jb
cwde
cmp
into
jb
pushf
add
cmp
add
xor
mov
xchg
push
mov
inc
inc
push
retf
test
aas
outs
add
jns
dec
ds
aas
sub
sub
scas
pop
push
or
jae
mov
data16
vmaxsd
outs
push
xor
add
mov
xor
inc
cmps
mov
and
into
sbb
dec
ss
mov
and
push
jnp
mov
push
imul
dec
sbb
xchg
aas
jnp
rcl
add
pop
mov
fcmovb
inc
jg
jbe
aaa
and
data16
inc
jae
add
xlat
(bad)
mov
cmps
mov
dec
and
rcl
xorps
pop
sbb
and
enter
inc
push
scas
cwde
push
sub
dec
xor
jecxz
push
hlt
inc
out
xchg
addr16
inc
sub
fwait
add
jae
inc
xchg
pusha
or
aaa
cmc
jbe
lds
adc
lock
adc
adc
pusha
adc
jmp
mov
inc
or
or
mov
repnz
push
enter
mov
pop
cli
pop
test
push
pushf
add
dec
dec
dec
dec
dec
push
dec
push
and
(bad)
out
data16
push
les
shl
call
inc
cmp
and
sbb
out
nop
jnp
pop
sbb
js
nop
xor
xchg
sbb
je
xor
xchg
sbb
jo
xor
xchg
sbb
ins
nop
xor
xchg
sbb
push
xchg
sbb
fs
imul
sbb
in
and
cmp
and
add
jb
scas
xchg
push
jl
xchg
ds
in
mov
js
popa
scas
inc
mov
je
scas
push
dec
add
push
xlat
mov
ins
ss
or
push
push
ins
sub
and
scas
fnstcw
pusha
push
push
dec
pop
add
xor
xor
fidivr
sub
cmp
sbb
rcr
sub
enter
call
sbb
jp
inc
ins
popa
addr16
push
imul
ss
xchg
add
cmp
add
(bad)
dec
jmp
add
adc
call
adc
jae
xlat
in
ja
inc
arpl
outs
mov
ss
xchg
push
test
fs
fist
or
or
inc
dec
ja
gs
fidivr
clc
xchg
daa
in
inc
loop
jb
jns
(bad)
fld
sbb
cmp
ror
push
push
fidiv
hlt
je
jno
inc
jmp
jmp
sahf
jae
sub
test
das
pop
pop
test
xchg
inc
inc
or
arpl
push
test
jns
ins
mov
or
(bad)
adc
add
push
push
push
hlt
mov
imul
pop
js
jle
loop
cmp
cmp
sbb
xor
sub
fs
repz
les
push
shl
jns
sti
push
xor
sahf
dec
push
pop
ins
jl
out
sahf
mov
int
jns
cld
add
add
repz
repz
adc
sbb
repz
and
sub
and
dec
loopne
ret
or
mov
and
mov
adc
aas
ret
fnstsw
rcl
pop
xadd
into
push
enter
ss
cmp
cmp
imul
cmp
out
dec
and
ds
call
or
push
inc
enter
jp
cs
push
fs
mov
cmp
adc
outs
movs
jle
sub
test
sahf
cmps
stc
pop
loopne
lock
or
pusha
mov
jge
sub
cs
jnp
cmc
mov
push
inc
not
adc
dec
call
sub
or
call
add
fs
add
inc
std
mov
ds
add
jg
test
mov
test
add
imul
cwde
out
dec
ds
push
sub
sahf
pop
test
mov
inc
sub
push
add
mov
add
mov
push
or
jmp
jnp
xor
enter
int3
push
pusha
cs
mov
and
fadd
in
mov
mov
mov
mov
push
clc
sahf
out
mov
xor
cmp
in
push
add
add
push
clc
out
add
dec
popa
jae
xor
push
std
xor
add
push
mov
xlat
clc
push
add
mov
pop
push
ins
pop
push
mov
sbb
sbb
adc
xchg
out
sbb
mov
out
push
dec
add
xchg
out
loope
inc
js
arpl
mov
fimul
pop
mov
push
jo
pop
dec
add
jbe
xor
enter
ja
mov
jo
ja
or
jle
push
inc
add
aam
sbb
sbb
push
inc
or
or
push
mov
call
stos
fadd
ror
cmp
adc
jae
mov
out
(bad)
jle
jb
xor
mov
mov
pop
add
push
add
popa
push
ja
adc
clc
ss
and
lods
lock
mov
mov
inc
adc
dec
and
mov
pop
scas
push
aaa
dec
mov
inc
jb
mov
and
leave
mov
stc
and
adc
addr16
test
es
outs
cmp
jne
push
pushf
ror
inc
daa
mov
add
and
mov
mov
sbb
adc
into
movzx
sub
xlat
push
call
ss
push
addr16
xor
mov
daa
mov
xchg
push
or
xor
mov
push
sbb
cmps
cwde
fcomp
adc
mov
or
inc
inc
je
push
mov
loopne
jl
jmp
inc
dec
jne
movzx
pop
jecxz
push
or
mov
mov
xor
fs
mov
cmp
jne
cmp
or
hlt
dec
push
scas
cmp
je
or
inc
inc
mov
sbb
ret
xchg
adc
and
daa
adc
mov
add
sub
js
enter
jo
ss
push
into
(bad)
mov
das
jmp
fmul
imul
inc
mov
mov
xchg
xchg
jbe
in
adc
adc
dec
adc
or
outs
je
push
push
xor
cmp
mov
fistp
push
cld
push
pop
lahf
nop
sbb
adc
into
pusha
call
or
jg
push
out
jo
repnz
in
loope
call
mov
push
inc
jp
adc
jo
mov
mov
xor
cwde
push
(bad)
xchg
or
shl
mov
cmp
sbb
mov
pop
js
je
xor
add
jecxz
cdq
mov
adc
ret
test
ins
popa
mov
(bad)
mov
in
pusha
mov
ins
lods
sbb
mov
jmp
in
in
sub
inc
jbe
inc
cwde
in
out
sbb
mov
xchg
cmp
ss
jp
push
sbb
cmps
(bad)
xor
xlat
sub
out
(bad)
fwait
pop
sbb
push
mov
push
jl
or
push
xchg
je
cmp
jnp
pusha
add
fcmovbe
dec
nop
add
jg
fcomp
mov
pop
call
adc
fisttp
gs
fstcw
fwait
data16
pop
add
fldcw
fistp
mov
fclex
sbb
mov
hlt
mov
hlt
xor
xor
cmp
scas
cli
push
retf
or
push
ret
pop
add
fld
push
mov
push
out
adc
mov
sbb
rcl
mov
inc
push
jge
mov
(bad)
push
cmp
fcom
push
cmp
shl
je
mov
cmp
jne
(bad)
out
je
fisubr
mov
cmp
or
and
in
rcr
add
dec
sub
add
and
or
inc
or
mov
fdivr
shl
jl
jae
jmp
out
adc
add
or
jge
or
inc
or
fwait
mov
mov
jl
or
or
sbb
add
rcl
sbb
jp
fs
push
rol
push
stos
mov
push
loopne
mov
inc
sub
push
and
fadd
out
push
push
cmp
or
push
sbb
icebp
mov
cmp
shl
es
push
xor
inc
repnz
push
dec
push
mov
adc
rcr
mov
div
ss
push
jbe
cwde
loope
dec
sub
loope
cmp
push
mov
push
and
push
pop
cmp
push
and
inc
cld
enter
xor
sbb
shl
mov
imul
sub
add
add
jnp
xor
or
ret
aaa
ins
sbb
loop
mov
jmp
cmp
mov
mov
xor
icebp
jmp
cmp
jmp
push
mov
add
sbb
xchg
adc
and
test
or
icebp
ss
or
cmp
pop
fst
add
cmp
push
add
jae
ins
bound
jle
or
sbb
(bad)
dec
cmp
mov
fisub
and
rol
clc
add
add
jo
aas
mov
aam
push
cmp
popf
lds
aaa
adc
push
or
xor
loopne
mov
inc
xor
sbb
jnp
xchg
out
sub
inc
inc
mov
dec
mov
pop
lock
js
push
int3
sub
push
push
pop
rol
sbb
inc
sub
mov
pop
mov
push
mov
mov
in
push
or
fmul
bound
and
pop
dec
ins
inc
imul
sub
cs
pop
les
dec
icebp
outs
js
dec
add
ud0
shl
repnz
dec
fisubr
data16
dec
dec
sbb
dec
or
and
cmp
mov
outs
stos
adc
sub
dec
jne
push
and
pop
ins
adc
jmp
outs
cdq
xchg
mov
add
fdivr
lods
add
fs
inc
or
sbb
in
sar
and
push
hlt
mov
adc
sbb
mov
jne
int
mov
icebp
cmps
icebp
cld
lock
rol
cld
jmp
jmp
int3
mov
push
adc
mov
adc
ins
loope
push
sub
and
shr
push
je
aam
add
sti
mov
pop
mov
mov
push
pop
idiv
sub
jne
test
mov
jmp
pop
inc
pop
sub
in
pop
push
inc
mov
add
sbb
jno
jo
add
dec
xor
push
cwde
add
cs
js
outs
or
jnp
mov
cmp
dec
adc
and
push
int3
dec
sbb
or
jle
jne
mov
pop
out
push
stos
jle
pop
repnz
loop
pop
clc
sbb
nop
mov
rcl
jmp
js
add
jae
adc
dec
sti
je
add
inc
jbe
sti
dec
mov
imul
sub
xchg
mul
mov
test
pop
add
xor
inc
adc
add
cmp
int3
loopne
pop
sub
cmps
rcr
(bad)
cld
jne
xchg
rcl
sbb
fdiv
test
rol
adc
mov
pusha
mov
jl
sbb
jg
nop
jl
push
aaa
or
loop
cwde
push
mov
adc
or
and
mov
cmp
test
sub
cmp
stos
stos
je
js
je
push
sbb
xchg
sub
pop
or
sti
add
pop
add
sahf
xchg
je
mov
lea
movs
cmp
test
movs
mov
sbb
or
leave
mov
ret
test
fist
stc
mov
imul
ds
mov
pop
lods
mov
and
adc
jl
outs
inc
clc
call
push
push
or
shr
shr
add
add
add
(bad)
jge
mov
mov
adc
ja
mov
or
mov
jb
je
dec
loop
popa
sub
je
push
mov
inc
ins
(bad)
mov
loope
test
adc
sbb
inc
std
or
adc
mov
shr
sub
inc
inc
cmp
inc
and
or
cwde
nop
add
int
jbe
dec
ret
les
pcmpeqb
jp
jmp
mov
add
add
push
shr
add
adc
retf
rol
mov
sbb
inc
loopne
stos
inc
pop
mov
push
mov
mov
mov
xchg
inc
or
and
cmc
jo
push
jl
ja
iret
int
fistp
mov
fdiv
loop
cmps
inc
adc
push
(bad)
add
or
cmp
dec
rol
add
add
add
sub
pop
pop
fcom
sub
mov
das
in
cmps
xchg
push
in
int
fdiv
add
jmp
fdiv
or
je
cmp
adc
lock
jle
jne
cmp
push
pusha
inc
inc
mov
fbstp
in
data16
adc
mov
retf
xor
push
sub
mov
sub
repnz
int
or
xor
dec
repnz
call
mov
je
dec
adc
push
dec
push
mov
jnp
or
inc
sub
movs
cmp
test
icebp
jmp
or
add
call
addr16
add
xor
sub
adc
push
inc
jnp
or
jmp
cmp
or
bound
add
mov
pushf
es
frstor
lock
and
sahf
cwde
int3
inc
mov
std
cmps
je
adc
push
or
cmp
add
add
xor
fs
inc
and
nop
or
or
pop
test
cmp
xchg
lock
adc
or
jle
shr
outs
loopne
push
pop
mov
and
lods
pusha
pusha
inc
push
not
or
ffree
push
pop
push
cmp
cmp
call
push
jns
mul
into
inc
mov
inc
xor
or
loope
cmp
push
dec
out
out
add
and
push
jge
mov
jmp
push
dec
push
popf
xor
cmps
mov
clc
shl
or
xchg
je
or
push
mov
pop
sub
div
pop
mov
enter
sbb
add
daa
inc
scas
pop
mov
xchg
cmps
push
sub
and
push
test
inc
xlat
call
je
jmp
mov
cmp
jne
cmp
int
jbe
xor
push
clc
push
xor
dec
clc
aas
mov
push
mov
inc
push
mov
sub
dec
adc
mov
ins
adc
xor
adc
cmp
ja
xlat
push
jo
adc
jae
jne
pop
adc
dec
aad
xor
xchg
xchg
aad
test
ficomp
or
jne
xor
shr
in
sub
mov
pop
add
push
mov
hlt
jg
mov
inc
mov
dec
sbb
mov
adc
push
mov
loop
jge
xchg
xchg
or
and
loope
rol
inc
rol
hlt
addr16
in
mov
loopne
mov
mov
push
aaa
in
jnp
fild
jb
in
in
in
shl
or
mov
xchg
inc
and
adc
popa
and
xchg
push
into
lahf
loope
in
out
or
adc
loopne
push
jbe
divps
add
pop
inc
mov
sbb
or
dec
mov
xchg
mov
scas
and
mov
adc
nop
sub
(bad)
fcom
out
aam
mov
neg
pop
xor
jb
mov
xchg
inc
jl
mov
inc
mov
add
sub
add
ror
pop
rol
xchg
cld
sub
cmp
test
adc
cmovae
sbb
push
jmp
test
inc
fistp
adc
sbb
arpl
pop
cmp
push
mov
jmp
sub
inc
icebp
jmp
bound
ins
push
mov
xchg
mov
loop
inc
call
xor
in
in
je
rcr
in
adc
sbb
xor
fiadd
jo
jns
jl
jnp
or
pop
jmp
jbe
xor
push
adc
in
push
push
cmp
dec
shl
lahf
or
mov
push
add
ficomp
mov
sti
movs
ret
or
movs
jmp
mov
xor
sub
fsub
call
(bad)
or
adc
pop
in
push
cdq
es
outs
mov
es
sbb
stos
push
add
sbb
add
xor
push
pop
or
and
sbb
mov
jg
ret
test
pop
jb
cmp
je
or
and
je
pop
cwde
(bad)
addr16
and
je
cmp
xchg
push
iret
call
data16
(bad)
retf
and
out
inc
sub
cmp
pop
pop
sub
and
sbb
mov
cli
std
in
test
push
cmp
sub
push
push
add
jmp
sub
cmp
setle
push
inc
sbb
mov
outs
xchg
not
push
mov
lea
cmove
mov
push
inc
mov
inc
cld
clc
outs
push
push
push
add
pop
mov
sub
scas
dec
cmp
fcomp
sub
mov
inc
or
sub
or
hlt
data16
mov
dec
mov
sub
push
or
mov
fcomp
iret
repz
cmp
shl
add
ror
lahf
pusha
cmp
jle
in
jl
pop
and
xchg
sbb
and
and
xor
lea
ucomiss
adc
add
add
jmp
sub
(bad)
push
push
push
inc
dec
shr
aad
sbb
push
jmp
in
adc
push
ins
mov
ret
add
pop
or
shr
xchg
cmps
lods
mov
pusha
cmp
adc
xchg
ret
mov
inc
sbb
xchg
mov
repz
(bad)
repnz
test
jmp
or
sbb
xor
mov
fcmove
pop
mov
ficom
fs
add
ror
add
jg
or
mov
sub
loopne
cmp
ins
push
int
add
clc
xchg
sub
out
stos
cmp
jae
cli
dec
imul
ins
sub
fisttp
dec
imul
push
lock
jge
push
cmp
dec
ins
add
sbb
xor
xor
out
cmps
mov
mov
cld
cs
cmp
jbe
sub
jo
jo
or
sbb
cmp
jne
popf
dec
mov
sbb
popa
mov
cmp
or
inc
adc
data16
jb
mov
inc
inc
sbb
cmp
jne
sysexit
sub
and
clc
cmp
push
call
sub
push
mov
aad
adc
xchg
cmp
jge
pop
and
add
mov
cmp
xchg
fsub
sbb
(bad)
cld
cmp
push
and
das
jl
cmp
jbe
in
xor
mov
mov
cmp
into
mov
inc
or
icebp
pop
fdivp
ret
rol
pusha
jae
sub
inc
je
push
(bad)
rol
xchg
dec
test
fidivr
or
add
popa
xchg
sar
add
outs
shr
fcomip
add
cmp
ja
push
xor
mov
jae
add
sub
dec
and
int3
mov
(bad)
inc
or
or
pop
std
or
sub
mov
mov
dec
jne
xor
iret
push
dec
inc
loopne
mov
cmp
lds
es
sbb
add
add
cmps
je
xor
jae
push
and
add
add
add
lods
sti
mov
mov
loop
shr
add
movs
fbstp
mov
or
sub
push
aad
mov
cmps
and
stos
mov
or
inc
out
cmp
jbe
push
xchg
jae
fnstsw
jbe
cli
sub
cmp
or
push
adc
and
jmp
lea
push
sub
mov
add
dec
or
add
loope
cs
call
cmp
js
push
add
loopne
pushf
push
ins
jl
pop
lock
mov
jbe
and
(bad)
retf
out
test
push
xchg
aam
dec
add
loopne
rol
cmp
ja
and
enter
adc
pop
xor
pop
add
sbb
push
mov
mov
inc
xor
jecxz
push
mov
push
out
scas
pop
pusha
xor
xchg
test
mov
and
lods
sub
mov
ret
lods
or
sar
enter
ror
pop
pop
or
jnp
add
dec
sbb
xchg
dec
mov
lock
xchg
rol
js
mov
cmp
push
jmp
sbb
(bad)
jge
or
sbb
bound
add
cdq
cmps
lds
add
cmp
loop
cmp
push
mov
pop
inc
inc
push
xor
xchg
sub
shr
mov
rcl
and
sub
retf
and
sbb
mov
int
xor
or
call
cs
push
adc
enter
cmp
xor
inc
pusha
aam
cli
daa
sub
adc
cmp
mov
add
mov
scas
jno
jmp
pop
dec
inc
adc
mov
loop
xor
fcmove
jbe
(bad)
das
add
mov
mov
inc
clc
movs
jge
adc
jmp
adc
pop
pusha
inc
sar
mov
mov
push
add
push
mov
mov
cmp
add
in
fiadd
adc
xchg
pusha
sub
ja
and
and
lods
push
stos
push
inc
stc
xor
ret
stos
xor
sub
sub
jae
dec
sub
add
test
in
sbb
sar
mov
xchg
loope
xor
arpl
ins
ins
push
sahf
popa
xbeginw
inc
sbb
loope
cmp
sbb
or
(bad)
xlat
inc
mov
sbb
sbb
aad
dec
shl
jle
xchg
jp
mov
retf
push
inc
add
call
popa
add
push
pop
mov
pop
mov
imul
add
ror
cmps
outs
imul
or
jne
adc
imul
cmps
lods
es
mov
lea
js
xchg
sbb
jmp
ja
ja
push
or
sub
jne
jo
sub
mov
lods
mov
clc
cld
pop
nop
xor
pusha
adc
sbb
xor
into
daa
out
push
pop
pop
and
sub
cmc
stos
adc
sub
ins
stos
xor
sbb
lock
xchg
mov
push
outs
sbb
dec
rol
rcr
jmp
adc
push
pop
add
jg
push
inc
adc
gs
pop
adc
lahf
ret
xor
push
repnz
jp
add
adc
sbb
xchg
loopne
inc
push
xchg
add
fnsave
mov
or
xchg
nop
cmps
dec
xlat
or
ja
and
cmc
sbb
movs
icebp
sub
jno
scas
xchg
inc
push
(bad)
xchg
xchg
jle
inc
lahf
mov
xchg
(bad)
imul
or
shl
adc
push
scas
and
ins
dec
outs
pop
xor
fdiv
cmp
jne
sysenter
sub
dec
dec
dec
and
adc
sbb
dec
add
mov
sub
sub
sub
push
jb
jmp
sub
lods
push
mov
adc
mov
dec
test
add
and
ins
dec
or
adc
mov
or
sub
dec
xchg
in
add
fdiv
cmps
retf
pop
push
push
or
or
daa
or
lods
sbb
rcl
shr
pop
jne
add
add
pusha
mov
dec
(bad)
in
and
pop
push
stos
(bad)
jnp
cmp
mov
inc
push
or
pop
fadd
inc
add
push
sbb
fild
ficomp
inc
sbb
mov
add
adc
sbb
int3
cmp
sbb
jo
push
retf
inc
adc
dec
fild
and
dec
cmp
push
cmp
jae
fild
adc
add
mov
adc
into
fs
sbb
dec
sub
inc
jmp
cwde
lods
mov
pop
js
je
mov
fadd
fstp
mov
adc
inc
cmp
fist
adc
pusha
(bad)
or
add
in
mov
pop
dec
ret
pop
mov
cmp
je
dec
or
add
dec
xor
cld
mov
push
cli
inc
or
sbb
mov
add
xchg
pop
jg
mov
cmp
jge
cmp
stos
stos
add
cli
mov
int3
retf
pop
pop
pusha
je
(bad)
adc
inc
and
shl
inc
and
push
jbe
dec
mov
or
dec
dec
and
and
pop
push
add
add
lock
push
jmp
mov
mov
dec
or
push
xchg
pop
loope
data16
or
push
pusha
adc
add
cli
pop
dec
into
sbb
(bad)
pop
fsub
push
or
push
jo
rol
add
cmc
push
imul
popa
cmp
jmp
mov
sar
cld
(bad)
cmp
cli
adc
pop
cld
div
cmp
retf
and
sbb
out
loopne
out
dec
and
cmp
jecxz
pop
cmp
push
cmp
iret
pop
dec
pushf
es
push
ror
pushf
mov
arpl
pop
add
sbb
movs
pop
sbb
xor
sub
and
inc
rol
loopne
push
je
adc
add
sbb
sub
push
or
and
pop
loop
sub
and
jge
pop
add
dec
push
fild
and
js
jnp
jb
pop
or
dec
ds
mov
ret
jnp
cmp
ds
test
sub
mov
call
sub
retf
pop
popa
data16
into
cs
int3
in
xor
mov
add
fcmovnbe
jne
mov
add
cwde
push
in
pusha
add
fs
shl
cmp
ss
push
mov
out
je
and
or
ins
adc
sub
cmp
dec
or
adc
mov
mov
cmp
rol
add
adc
add
push
clc
push
push
add
and
stos
pop
mov
mov
inc
lock
jge
add
sbb
cmp
sbb
pop
std
stc
pop
ja
lea
push
scas
pop
cmps
stc
jbe
pusha
mov
pop
out
jl
int
pop
xor
bound
sar
sub
hlt
ja
jge
ss
iret
call
adc
ds
repz
dec
imul
dec
repz
repz
jmp
test
jmp
jae
add
pop
icebp
add
cld
jp
dec
mov
mov
clc
jmp
sbb
(bad)
cmp
fdivp
inc
or
je
cmp
add
sbb
mov
mov
test
loopne
inc
shr
lods
or
inc
xor
test
mov
add
push
adc
add
push
jno
xor
call
add
or
clc
mov
cmp
iret
shr
shl
add
ds
dec
fisub
add
mov
and
sbb
and
out
aas
pop
scas
idiv
iret
jo
ins
lock
out
add
and
ret
adc
xor
sbb
push
mov
jp
fdiv
dec
pop
sbb
jp
xor
arpl
push
add
jo
adc
inc
icebp
dec
pop
mov
retf
add
or
ret
sbb
out
jmp
adc
popa
adc
xor
es
lock
pop
mov
xchg
push
adc
xor
mov
or
xchg
inc
and
and
lods
or
xor
(bad)
lea
pop
sub
adc
cmp
bound
mov
sti
push
leave
pusha
inc
ror
cmp
inc
push
and
adc
xor
shl
out
push
mov
jecxz
loop
mov
fnstcw
scas
lods
test
mov
lea
adc
shr
sbb
mov
std
shl
shr
cld
xor
ja
mov
std
pusha
std
sbb
mov
push
out
dec
push
jne
cwde
stos
inc
push
jbe
pop
add
sti
and
std
shr
add
outs
or
fxrstor
or
adc
out
adc
aas
jmp
sub
adc
js
add
adc
in
and
and
fiadd
shr
jp
mov
pusha
je
inc
mov
aas
stc
repnz
shr
jmp
dec
sbb
int3
mov
sub
jmp
xor
sub
js
and
inc
fcom
push
test
iret
gs
ss
sbb
sub
xor
inc
add
in
jl
mov
test
adc
pop
push
push
int
xor
sbb
add
sbb
es
es
sub
push
sbb
cmp
jl
inc
and
fmul
pop
ins
jge
cmp
add
arpl
adc
adc
test
inc
xchg
inc
or
cmp
adc
rcr
test
xor
mov
push
sub
sar
sub
cmp
cmp
shl
sub
fwait
nop
or
cmp
adc
adc
and
or
push
xlat
xor
cmp
or
(bad)
jmp
or
je
xchg
aad
or
mov
or
dec
sub
add
push
fwait
add
push
xchg
xchg
mov
sbb
ins
jns
cmp
mov
(bad)
loopne
rol
out
or
push
mov
loopne
sub
mov
sbb
enter
fidiv
inc
enter
cmp
call
les
clc
jbe
movs
inc
clc
pop
add
xchg
mov
and
icebp
push
dec
cmp
push
pop
sub
add
cdq
imul
mov
adc
push
iret
loopne
stos
push
jnp
sbb
ins
xor
mov
jb
sub
pop
sbb
retf
add
test
(bad)
dec
add
mov
enter
inc
sub
jb
je
dec
je
add
jmp
cmps
cmp
fcomp
dec
add
sbb
fild
ret
jne
sub
sub
jmp
add
xlat
ret
test
(bad)
movs
dec
test
adc
jo
adc
rol
enter
cmp
and
add
pop
jae
shr
call
fdiv
enter
dec
mov
mov
xor
sbb
jno
inc
push
cwde
pop
inc
sbb
les
and
add
push
and
ret
mov
arpl
int
bound
aam
shl
loop
ror
push
aaa
xchg
pop
aaa
out
jmp
mov
or
add
mov
iret
sbb
es
adc
add
cvtpi2ps
push
add
popa
or
and
sbb
sub
ja
fmul
cs
es
add
push
mov
xor
or
push
jno
add
inc
xor
xchg
and
add
movs
or
xchg
xlat
mov
push
jg
mov
mov
repnz
out
add
push
scas
jmp
jae
callw
mov
adc
lea
mov
ins
and
or
mov
mov
push
push
lea
adc
addr16
inc
sbb
aam
aam
fwait
and
popa
cmc
lock
sbb
fxtract
push
push
shl
pop
push
dec
mov
test
xchg
rol
jle
loope
lock
xlat
call
jmp
rol
mov
xchg
jmp
mov
mov
xlat
dec
repnz
mov
call
outs
(bad)
dec
or
fstp
push
cmp
jne
jmp
stos
inc
mov
call
rol
icebp
jb
or
add
and
icebp
sub
add
inc
mov
push
xchg
outs
cld
fsubr
enter
in
in
xchg
add
adc
leave
inc
shl
add
(bad)
adc
je
fmulp
pop
xor
jmp
cmps
outs
fiadd
xchg
pop
jg
or
push
retf
cmps
mov
mov
mov
add
ret
lahf
pop
cwde
and
(bad)
in
jmp
jmp
jns
sbb
or
into
push
loopne
pop
inc
leave
jne
xor
mov
sbb
fld
sbb
es
add
ja
xor
jecxz
in
sbb
mov
jmp
sub
imul
nop
mov
nop
pop
rol
ins
aam
test
push
rol
add
push
push
movs
add
mov
dec
mov
sub
lods
cli
bound
adc
lock
ins
sbb
adc
jge
es
rol
cmp
fimul
mov
adc
jmp
std
push
adc
push
adc
call
cmps
push
js
push
loopne
pop
std
fs
cmp
div
shl
rcr
addr16
ja
and
ret
cwde
ins
adc
lods
ret
sbb
retw
cmp
outs
ret
loopne
jle
inc
loopne
jo
mov
xor
push
cmp
jl
add
not
ja
mov
mov
add
enter
dec
int
push
xlat
int3
jne
test
(bad)
xor
xlat
add
adc
mov
cmps
dec
add
push
push
lea
xchg
fnstsw
add
test
das
xchg
adc
xchg
das
mov
pop
inc
rcr
cld
shl
pop
and
xchg
add
dec
into
adc
outs
sub
inc
or
jmp
or
dec
mov
imul
pop
sbb
jae
xor
push
loop
mov
bound
mov
sbb
adc
outs
xor
ds
enter
adc
repnz
xor
and
or
mov
add
aaa
test
retf
sub
ficom
inc
rol
out
out
add
inc
shl
and
pop
lods
dec
add
dec
sbb
lods
or
mov
fwait
pop
pop
push
push
adc
movs
mov
mov
(bad)
push
in
inc
cmp
js
add
sub
add
lock
(bad)
loopne
popa
sahf
jno
mov
(bad)
fistp
inc
xor
push
jae
sub
jb
mov
jmp
rsm
cmp
pop
ds
jmp
push
sub
ins
mov
cmp
or
stc
push
push
retf
nop
(bad)
rcl
cld
mov
mov
out
add
mov
jmp
jo
sbb
mov
pop
hlt
inc
push
mov
inc
call
xor
inc
shl
call
push
fst
add
rol
sbb
xor
xor
fs
and
or
adc
xor
and
jmp
dec
lea
je
jmp
xor
add
adc
and
pop
cmc
and
loope
sub
mov
cmp
push
or
in
inc
or
push
out
je
shl
inc
cmps
bound
push
pop
sub
cmps
dec
adc
xor
test
and
inc
aam
inc
test
retf
jmp
adc
add
data16
sbb
(bad)
outs
lahf
clc
mov
je
and
daa
jp
pusha
add
push
repnz
ret
inc
add
je
add
sbb
hlt
fidiv
dec
inc
stos
jnp
and
dec
sub
add
(bad)
push
ss
sub
fcom
dec
add
pop
sub
or
pop
in
add
mov
xchg
add
(bad)
push
lock
add
push
dec
mov
sbb
mov
dec
xchg
test
jmp
aaa
add
mov
test
dec
xchg
add
or
or
jne
mov
mov
clc
adc
push
add
add
dec
shl
jo
or
push
sub
clts
dec
inc
in
mov
add
or
aam
ins
add
mov
aam
mov
sti
or
xchg
adc
je
out
xor
jo
jp
add
or
push
add
stos
mov
push
xor
or
push
cmp
mov
pop
pusha
add
add
adc
push
jge
fcmovnbe
add
inc
xor
inc
sub
stos
add
das
sbb
jle
xor
loopne
dec
push
dec
lods
jmp
inc
xor
xor
repnz
int
sub
cmp
mov
jle
mov
add
movs
fsub
shl
sub
jne
fwait
jle
jnp
add
sbb
push
cdq
pop
sbb
xor
leave
jo
or
or
add
pusha
add
push
arpl
popa
jne
test
test
pop
rcl
add
cmp
dec
and
mov
jmp
movzx
scas
lock
add
xor
add
jne
inc
jmp
cmp
(bad)
arpl
and
mov
(bad)
scas
test
inc
cmp
jbe
add
retf
jno
or
rcr
clc
xor
imul
add
push
test
popa
lods
push
jbe
or
sub
sub
push
adc
mov
dec
je
call
test
pop
aad
loopne
mov
inc
shr
imul
aam
out
punpckhbw
inc
clc
jle
mov
mov
mov
push
add
push
add
push
outs
loope
mov
inc
adc
test
add
in
mov
cmp
das
cld
pop
mov
mov
or
cmp
adc
js
inc
shr
rcr
mov
ret
sub
(bad)
pop
push
je
push
adc
nop
ss
ret
add
aaa
sbb
cs
mov
push
mov
pop
inc
aaa
clc
icebp
adc
inc
or
and
push
arpl
loop
adc
push
gs
dec
jb
push
jg
mov
mov
loop
push
pusha
inc
(bad)
clc
popf
adc
aad
jg
pop
cmp
ja
lea
ja
sub
adc
aas
push
jns
sar
shl
inc
add
imul
cmp
or
leave
cmp
adc
add
adc
adc
xchg
push
(bad)
test
xor
or
or
adc
or
inc
mov
add
(bad)
ret
aad
mov
bound
pop
cwde
ja
mov
sub
pcmpeqw
fild
in
out
sbb
mov
test
push
imul
ds
push
cwde
sbb
add
rol
jmp
loopne
dec
mov
cwde
inc
or
mov
retf
jmp
retf
sub
sub
pop
lock
sahf
or
jl
dec
sub
je
xchg
xor
xor
outs
jge
or
cmp
out
aam
rcl
dec
pop
mov
sub
pop
mov
and
push
(bad)
push
cmc
int3
test
shr
jle
ficom
movs
test
cwde
fadd
outs
fwait
pop
add
and
sub
or
rol
fisttp
pop
ror
pop
aam
rcr
mov
loope
cld
push
ret
jmp
adc
test
stos
jno
add
mov
div
cmp
adc
and
push
push
add
cmp
sub
push
xor
rdpmc
mov
sub
add
and
and
pop
adc
mov
push
jg
repnz
jae
ror
and
or
repz
clc
test
aam
xor
mov
mov
dec
(bad)
retf
outs
mov
sub
shl
jb
mov
jne
in
dec
mov
sub
jmp
sub
jbe
inc
test
mov
in
push
dec
xchg
mov
jge
xor
jne
xor
adc
push
mov
add
inc
xchg
or
or
sub
call
mov
inc
out
jo
push
add
xchg
adc
or
(bad)
sti
xchg
mov
cdq
mov
daa
pop
jno
jne
xor
inc
ret
mov
jmp
xor
push
(bad)
jmp
jge
data16
sbb
daa
cmc
add
or
jmp
out
outs
cwde
pusha
cmp
jg
sub
cmp
jb
mov
jmp
mov
push
sub
test
es
out
in
sahf
cmp
idiv
mov
lea
mov
mov
add
jmp
and
xchg
add
mov
pop
scas
adc
int3
jae
in
sub
add
inc
jmp
sub
mov
and
test
cmp
mov
push
push
and
sbb
test
shl
lea
lock
inc
movs
data16
mov
rol
pcmpeqd
xor
cmps
out
sbb
jae
fild
sbb
(bad)
sub
inc
and
mov
dec
add
ins
ret
hlt
add
cmp
or
mov
(bad)
pop
add
test
add
jne
(bad)
mov
mov
xor
push
aad
(bad)
inc
(bad)
add
mov
data16
sbb
adc
sbb
ds
jbe
pop
clc
sbb
fidivr
sahf
push
sbb
cmp
cmp
sub
hlt
jb
cmp
jae
lock
clc
push
imul
add
mov
retf
jbe
test
loope
sbb
arpl
fadd
add
inc
sti
cmp
(bad)
jle
push
xchg
out
mov
ret
out
jp
lea
jmp
pop
pop
sub
js
call
enter
test
sbb
ins
call
push
ja
dec
inc
jl
stc
sub
jb
je
jmp
add
sbb
cmp
(bad)
loopne
fisttp
jmp
adc
int3
mov
xchg
fist
sbb
or
enter
mov
dec
sub
mov
xchg
xor
scas
pop
sbb
out
div
mov
fadd
push
or
pop
jbe
call
jne
cmp
ins
xor
push
sbb
jne
mov
aas
jbe
std
jmp
lea
mov
lock
sub
mov
(bad)
sbb
pop
xor
jge
(bad)
retf
clc
mov
jle
add
mov
mov
pop
cmp
shl
xor
dec
pusha
or
mov
mov
mov
jae
aam
loopne
clc
cli
adc
jne
shr
add
cmp
mov
fistp
dec
jae
add
jmp
pop
in
stc
push
ror
outs
retf
dec
and
int3
ret
sbb
sbb
add
jo
sub
dec
retf
shl
cmp
and
into
adc
push
in
or
cmp
sbb
jmp
and
sbb
je
sbb
dec
adc
cwde
shl
cmps
xor
and
enter
push
xchg
pop
pop
movs
sub
mov
out
test
inc
lock
add
or
enter
sar
cmp
leave
outs
sahf
adc
test
jl
mov
jmp
fmul
sti
cdq
push
pop
mov
adc
push
mov
pop
mov
sbb
sub
xor
outs
test
jbe
add
push
fsub
xor
aaa
retf
add
pop
clc
dec
push
push
shr
sub
push
icebp
and
cmp
inc
shl
(bad)
daa
xchg
add
rol
in
repnz
push
cmp
call
lea
adc
sub
hlt
mov
clc
retf
xchg
and
push
sub
sub
sti
or
push
mov
adc
and
push
and
(bad)
pop
jo
or
push
mov
add
ins
pop
pop
outs
fs
sbb
(bad)
nop
xchg
rcl
and
inc
push
jg
mov
cmp
jl
sub
sub
sbb
dec
push
outs
sbb
cdq
lods
aam
into
movs
or
or
adc
je
adc
pop
pop
bound
enter
adc
ror
mov
mov
jmp
push
sub
dec
mov
pusha
bound
cmp
jb
das
iret
es
jne
mov
or
or
das
pushf
clc
gs
mov
inc
push
or
mov
fisubr
adc
mov
imul
shl
mov
jge
inc
jle
sbb
dec
ret
or
cmps
rcl
aam
repnz
or
out
push
push
loopne
(bad)
clc
fdivrp
dec
inc
dec
or
les
mov
cld
jl
mov
sar
sub
mov
loope
rol
jle
jg
push
fsubr
push
aas
js
test
sub
xor
js
dec
adc
inc
shl
cmp
sbb
or
mov
or
sar
mov
(bad)
jmp
sbb
jg
fs
xchg
jb
mov
jne
fs
push
icebp
sub
ins
mov
mov
out
out
mov
xchg
inc
call
mov
fwait
jmp
ss
mov
and
add
imul
dec
scas
push
repz
dec
(bad)
sbb
cmp
push
mov
push
xor
or
or
std
jmp
dec
idiv
cmp
neg
sub
ds
je
inc
sub
xchg
push
push
inc
mov
mov
mov
add
loopne
div
fdiv
jne
js
xchg
mov
jo
push
adc
cmp
mov
mov
xor
dec
je
adc
je
adc
clc
sub
xor
test
xor
mov
(bad)
push
xor
ret
ds
lds
fdivr
shl
fst
push
lock
cli
lea
loope
sub
lods
loopne
pop
xor
icebp
add
lods
js
inc
cmp
mov
push
add
or
sub
xor
add
test
jne
dec
int
pop
xor
inc
xchg
jbe
inc
(bad)
jecxz
sar
or
jle
mov
fcomip
aam
mov
jp
cmp
jmp
clc
xchg
jnp
dec
or
enter
dec
out
add
mov
xchg
imul
cmp
inc
cld
inc
mov
dec
and
or
(bad)
(bad)
mov
pop
(bad)
push
jmp
in
or
inc
fs
inc
xchg
outs
jl
jmp
push
sbb
call
sbb
jae
mov
xor
add
mov
push
mov
out
idiv
(bad)
pop
mov
cmp
jnp
or
and
mov
scas
add
push
(bad)
push
add
mov
mov
dec
dec
es
mov
mov
cmc
or
in
pusha
int3
add
pushf
lea
sub
add
test
pop
and
loopne
test
sbb
sbb
ja
add
mov
mov
out
retf
pop
mov
xor
mov
push
(bad)
xor
xchg
fisttp
adc
cmpxchg
mov
cmp
cmc
adc
mov
or
pop
fwait
mov
gs
push
ret
sub
push
(bad)
leave
push
push
mov
mov
mov
icebp
adc
sbb
inc
mov
sub
mov
mov
test
jne
adc
add
test
mov
push
fdiv
pusha
and
lods
mov
je
mov
mov
mov
fnstcw
mov
jmp
paddb
lock
push
add
(bad)
jmp
push
sbb
clc
jbe
iret
or
ins
sub
mov
stc
or
and
jae
mov
les
sbb
jmp
fsub
push
push
ffreep
aam
jne
add
adc
mov
sbb
hlt
pop
xor
je
leave
mov
movs
or
xchg
jb
test
mov
xlat
lods
ret
xchg
shl
or
mov
dec
fisttp
je
cmp
jle
cmp
jne
jmp
or
scas
inc
mov
mov
jp
mov
sbb
sub
cmp
cs
xor
pop
loope
and
shl
or
scas
push
mov
cmp
mov
jge
loope
mov
xor
pop
xor
div
ret
(bad)
mov
xlat
jle
and
add
jmp
fdivr
loope
inc
dec
jne
xchg
jmp
test
inc
ror
mov
mov
dec
leave
call
and
call
call
mov
loopne
ja
(bad)
in
rol
fadd
gs
int3
inc
jae
and
mov
or
add
call
not
std
gs
dec
adc
mov
fcmovnbe
cwde
mov
test
add
std
cmp
je
addr16
fimul
fadd
jp
mov
and
pop
int3
rol
or
imul
sub
enter
shl
sbb
jge
(bad)
sbb
and
dec
es
leave
pop
int3
cwde
in
sbb
int3
jbe
jb
jo
(bad)
int3
push
xchg
ds
mov
or
mov
les
aad
mov
mov
in
fistp
pusha
sbb
ror
sbb
pop
shr
jns
or
or
ror
aam
add
mov
mov
and
add
add
test
stc
(bad)
dec
shr
jl
mov
xchg
std
ret
mov
dec
aam
sub
dec
lock
lea
mov
js
aam
xchg
ret
inc
jo
or
ret
jo
das
clc
mov
cmp
jg
dec
cmp
jge
lea
adc
xchg
jbe
add
and
jo
mov
cmp
mov
call
pop
ds
jmp
mov
ret
sub
xor
in
mov
or
mov
in
add
cli
in
xchg
cmp
shl
adc
pop
push
xor
cmp
(bad)
inc
push
pop
add
push
sbb
add
aas
inc
adc
(bad)
sbb
or
cld
cmp
and
idiv
adc
lea
add
jns
gs
test
mov
push
inc
mov
xor
or
retf
mov
int
in
aas
push
jmp
movzx
ror
mov
loopne
inc
inc
inc
jno
inc
out
in
lahf
inc
test
jae
or
inc
sub
mov
out
cmp
in
mov
mov
inc
xchg
xlat
mov
push
mov
push
cmps
das
lods
shl
xor
sub
and
shr
fild
xchg
lods
lock
mov
adc
sbb
fwait
aam
mov
mov
(bad)
adc
sti
or
and
inc
je
fst
push
sar
mov
adc
test
add
ret
pop
inc
pop
adc
mov
add
mov
cmp
jne
lods
xchg
inc
sub
jl
in
ret
outs
adc
imul
or
jns
pop
into
and
xchg
adc
inc
cmp
shr
call
cmc
mov
or
push
mov
jb
cmp
jp
loopne
je
adc
mov
jle
or
jmp
push
add
loop
js
or
mov
mov
jbe
push
push
add
cmp
push
xlat
adc
aad
int
data16
add
iret
push
cli
loop
adc
test
test
add
sub
add
inc
push
push
inc
push
or
jns
dec
icebp
add
loop
out
loopne
in
cmps
adc
lea
cmp
pop
adc
pop
pop
lods
dec
inc
inc
and
cwde
movs
shl
out
push
adc
or
cwde
xchg
out
add
or
jl
jne
(bad)
inc
mov
mov
jmp
inc
adc
mov
or
add
lock
jl
cwde
mov
in
jg
jae
mov
or
push
out
sub
ror
mov
cli
fnstsw
nop
lds
xchg
rol
test
retf
adc
mov
mov
pop
inc
ret
mov
or
sub
or
test
fcomi
stos
pop
xor
pop
jmp
adc
jo
dec
lock
or
rcr
push
push
mov
sahf
mov
mov
xchg
and
push
cmps
xchg
push
adc
outs
repnz
add
lock
jnp
int
adc
aaa
cmp
out
loope
adc
mov
cmp
movs
sub
push
in
adc
or
sub
rol
mov
adc
test
shl
dec
cmp
inc
xchg
jmp
dec
xchg
and
leave
pop
pop
pop
xchg
add
xchg
addr16
mov
(bad)
dec
and
xchg
(bad)
sbb
add
cmp
xchg
lahf
sbb
add
mov
or
lods
push
pop
sbb
push
loope
xor
jno
mov
mov
sub
inc
test
sbb
(bad)
fbld
loop
rcr
jg
call
out
fmul
loope
mov
rol
or
mov
inc
shr
cmp
jle
sub
fadd
jne
mov
sub
adc
push
mov
and
xchg
adc
lea
arpl
add
loopne
out
push
jb
and
shr
or
add
inc
mov
loopne
jmp
call
mov
or
mov
adc
dec
int3
mov
adc
or
sub
sar
mov
icebp
popf
shl
and
out
xor
adc
test
pop
test
jle
inc
and
imul
adc
add
mov
and
add
imul
adc
push
mov
mov
ds
mov
cld
out
sub
push
inc
or
sar
pop
mov
pop
not
pop
and
push
add
addr16
mov
not
push
leave
mov
mov
cwde
(bad)
xor
add
sub
dec
xor
call
aaa
add
sti
shr
and
pusha
push
out
or
adc
jne
js
sti
jmp
mov
add
hlt
icebp
and
sub
call
fwait
mov
shl
or
jmp
add
jbe
pop
fcomp
adc
jmp
mov
add
inc
jo
mov
inc
adc
jne
cmps
mov
xchg
push
div
mov
mov
mov
scas
shl
sub
enter
scas
dec
add
fst
and
add
add
sahf
and
push
sbb
or
or
fs
inc
or
push
sbb
push
push
jae
test
xor
adc
jo
inc
xchg
xor
cmp
rcl
stos
adc
adc
scas
fmul
outs
adc
xor
ins
or
scas
xor
pusha
adc
ins
or
scas
xor
fwait
pusha
scas
xor
ds
and
pop
mov
mov
xchg
arpl
fist
pop
cmps
inc
jmp
or
in
fucom
lds
(bad)
jmp
ja
sbb
ins
fbstp
or
mov
mov
shl
sub
scas
mov
daa
fmulp
(bad)
adc
or
call
xor
jmp
cld
imul
rcl
dec
add
add
stc
cmp
(bad)
ins
mov
(bad)
bndldx
out
paddsb
mov
dec
mov
mov
inc
arpl
jne
xor
aaa
mov
jg
jo
sub
stos
test
js
pop
enter
inc
cld
imul
cmp
je
push
retf
xchg
in
scas
xor
add
nop
adc
icebp
jne
add
inc
(bad)
in
xchg
test
fisttp
pusha
sbb
or
cdq
sbb
cmp
push
ret
xchg
mov
dec
inc
inc
dec
jne
push
add
idiv
loope
or
not
call
lock
and
sbb
jl
(bad)
ret
loopne
sti
and
ret
pop
or
xor
outs
push
fs
dec
pop
or
mov
mov
add
mov
add
sbb
cmp
fwait
sbb
cld
xor
mov
inc
or
mov
hlt
std
es
add
dec
mov
jbe
add
mov
inc
and
mov
add
jne
pop
and
dec
xchg
fnstenv
mov
out
sbb
add
dec
and
test
add
shl
push
sbb
cwde
mov
call
xor
cs
adc
xor
out
sub
add
or
rcl
cmps
(bad)
jo
mov
add
push
ins
sar
xchg
sub
(bad)
dec
popa
test
mov
arpl
rol
mov
enter
rcl
push
enter
leave
add
in
cmps
int3
sub
or
rol
pop
ret
or
daa
or
leave
test
out
inc
je
test
je
xor
shr
jecxz
jne
mov
out
xchg
mov
pop
fmul
test
mov
mov
inc
add
ret
add
and
add
in
add
out
or
(bad)
ja
jmp
jg
fs
jg
push
clc
and
mov
mov
add
test
in
inc
add
stc
repz
cmp
add
sub
push
push
sub
lods
and
sti
aaa
and
cli
add
cmp
retf
inc
cmp
lock
jns
dec
shrd
sar
add
and
sar
lea
out
test
push
xor
xchg
mov
add
sbb
xchg
cld
aaa
sbb
cmp
shr
aas
xor
mov
ja
jmp
je
jmp
jmp
inc
in
mov
rol
dec
rol
inc
jmp
dec
jae
inc
jmp
or
arpl
(bad)
dec
in
and
xchg
pop
mov
jmp
xor
or
cmp
add
pop
rol
mov
adc
mov
pusha
fbld
sbb
jp
push
sub
xor
xchg
jecxz
scas
shr
shr
addr16
pop
xor
cmp
and
shl
ret
repnz
and
in
fdivr
adc
rcl
mov
or
sti
cmps
(bad)
ins
rol
loop
pushw
(bad)
(bad)
nop
retf
loopne
fisub
inc
loop
pusha
mov
in
sub
rol
adc
pop
mov
ror
inc
out
outs
repnz
stos
add
push
push
hlt
adc
daa
cmp
cwde
ss
fcom
add
hlt
jo
inc
ror
add
sub
cmp
push
mov
das
jge
add
in
ret
inc
popf
ins
pop
dec
push
jl
pushf
(bad)
jl
popf
sahf
fwait
jbe
daa
lahf
lods
cmps
push
mov
pop
out
mov
mov
out
idiv
inc
add
lods
inc
cmps
or
push
shr
jl
les
lods
ds
mov
add
inc
dec
ins
gs
jb
outs
jb
mov
jmp
pop
sbb
add
push
jns
rcl
cs
imul
bound
add
inc
mov
push
pop
push
jbe
test
or
(bad)
and
add
xchg
jo
adc
or
sbb
push
add
inc
cmp
gs
mov
ret
call
or
inc
lock
fist
add
gs
je
mov
add
lock
add
mov
ins
pushaw
add
dec
gs
popa
addr16
or
ror
or
lds
(bad)
fimul
dec
bound
outs
xchg
js
jo
pop
ret
inc
xchg
loope
les
pop
loopne
add
add
repz
xchg
inc
jg
jge
mov
repz
lods
pusha
add
in
mov
mov
mov
(bad)
das
or
sub
pop
shl
push
clc
mov
mov
into
ret
shl
xchg
cvtdq2ps
xor
pop
inc
push
outs
jne
arpl
popa
fsub
xor
inc
and
cmps
sbb
sbb
or
sbb
jo
imul
mov
push
or
js
inc
test
adc
test
pop
push
or
push
dec
add
adc
sub
push
in
mov
pop
push
(bad)
loope
or
xchg
pop
test
(bad)
xor
or
pop
inc
inc
push
and
and
ds
fiadd
add
outs
ret
push
sub
in
mov
mov
or
cmp
adc
sub
lea
std
sar
jns
adc
and
loopne
inc
xchg
or
sar
test
movzx
xor
test
jne
xor
adc
les
fimul
push
sbb
hlt
or
imul
cld
test
je
and
stos
jne
mov
mov
cld
mov
mov
jne
mov
push
xor
dec
(bad)
add
jo
shl
xor
lea
xor
mov
lock
and
or
sbb
push
hlt
mov
iret
les
jle
jne
mov
dec
in
jp
inc
mov
adc
add
iret
cmp
rcl
push
(bad)
data16
test
(bad)
mov
jmp
jmp
pop
cmp
pusha
lock
sub
push
pop
loopne
les
xor
rcl
out
or
adc
adc
pop
movs
aaa
add
fwait
and
dec
push
mov
inc
test
adc
push
or
pop
mov
adc
sub
cmp
mov
push
push
pushf
push
loop
push
pop
xor
leave
mov
mov
or
pop
lock
nop
test
ret
add
inc
mov
push
mov
push
clc
add
fild
sub
mov
cwd
jo
add
push
fsub
mov
enter
out
sub
mov
mov
call
xchg
js
mov
popf
les
movs
ins
cs
nop
push
not
sbb
dec
inc
xor
cmp
nop
popf
call
sbb
jb
mov
sbb
pop
add
enter
jle
retf
push
sub
push
jo
sub
sbb
sub
popa
aam
(bad)
push
and
in
xor
addr16
lock
test
or
push
sbb
inc
clc
test
add
call
pusha
mov
mov
stos
stos
inc
push
in
cmc
popf
cmps
sub
hlt
and
mov
sbb
mov
aaa
or
adc
push
lock
sub
cvtpi2ps
and
fistp
out
inc
mov
push
neg
pop
pop
nop/reserved
pusha
inc
add
push
sub
push
and
pop
push
push
push
(bad)
cmp
int3
shr
sbb
mov
int3
pop
je
or
xor
xlat
dec
xchg
popa
and
ret
lock
xlat
ins
mov
pop
jmp
shl
fisttp
call
fsubr
in
mov
push
rcr
mov
ja
leave
call
cmp
mov
add
inc
sub
call
jb
outs
add
and
or
or
push
daa
movs
cmp
(bad)
push
stos
and
retf
imul
dec
gs
mov
mov
cdq
in
add
push
mov
gs
add
add
xor
add
or
push
dec
or
add
outs
inc
fadd
scas
cdq
adc
push
arpl
inc
add
dec
lods
cdq
fldl2t
aaa
imul
aas
into
call
sub
or
in
or
fwait
(bad)
repz
push
dec
sbb
or
or
pop
sbb
ins
push
int3
add
out
call
call
loopne
pop
push
pop
loopne
mov
add
stc
push
inc
mov
xor
jno
mov
js
data16
add
fcom
push
inc
fist
pop
dec
mov
push
adc
and
ror
sbb
rol
sti
add
mov
cmp
and
(bad)
and
and
inc
scas
sub
xor
and
aas
push
(bad)
into
fnstenv
pop
loopne
mov
loope
movs
mov
fcom
cmp
jbe
pushf
js
fwait
sub
scas
push
(bad)
xor
inc
mov
int
stos
addr16
into
add
(bad)
inc
iret
ja
js
fimul
ret
xor
test
sbb
outs
add
jg
dec
cld
mov
mov
fmul
scas
lock
sbb
mov
test
popa
fs
push
test
jle
sbb
jp
jae
retf
sbb
xor
push
lea
call
xor
jb
mov
jg
push
xor
movzx
shr
scas
shr
int3
sbb
arpl
je
push
gs
mov
inc
xchg
enter
sbb
push
js
sar
push
sbb
jne
cwde
jns
and
out
add
push
or
add
push
jle
adc
jns
xor
jbe
frstor
jne
add
or
shr
push
cmp
jne
or
into
mov
je
das
fs
mov
sti
fmul
ja
inc
mov
push
xor
xchg
loope
pop
lods
ins
push
fdivr
cmps
aam
add
mov
data16
(bad)
ror
push
in
mov
inc
clc
mov
test
mov
test
je
outs
jae
mov
adc
push
jnp
sub
(bad)
jle
sub
movs
add
dec
jne
ret
test
movs
cmp
stos
mov
js
mov
inc
mov
mov
push
test
pop
inc
sub
xchg
nop
adc
cmp
xor
lds
mov
xor
pandn
xor
daa
rcr
in
and
loopne
in
add
adc
push
jb
pushf
aam
movzx
mov
call
cmp
neg
in
add
lock
pop
in
mov
dec
aam
ins
inc
xor
mov
rcl
adc
jbe
pop
add
mov
lea
pop
jge
mov
xchg
pushf
jmp
pop
push
in
lock
loopne
push
call
and
mov
and
inc
mov
dec
jne
mov
sub
aad
mov
mov
lock
push
aam
jne
scas
push
imul
fdivr
mov
xchg
clc
fisttp
arpl
cdq
js
test
jmp
sbb
mov
addr16
cmp
cmp
(bad)
fdiv
sbb
bound
retf
or
adc
ror
les
cwde
(bad)
retf
in
out
inc
xchg
ins
jmp
jne
cmp
jbe
bound
(bad)
cli
or
inc
or
out
mov
jo
sbb
or
cmps
outs
aad
and
hlt
test
clc
in
dec
add
inc
add
movs
ror
or
fimul
xchg
push
out
aas
pop
dec
pop
loope
inc
adc
add
scas
add
jb
cmp
cmp
pop
clc
inc
std
cmp
push
inc
clc
sahf
sar
hlt
cmp
vmread
mov
shr
adc
sbb
pop
add
popa
mov
cmc
jns
xor
loope
(bad)
mov
dec
outs
iret
loopne
adc
push
or
or
jnp
push
sbb
mov
sbb
mov
lahf
ds
adc
dec
ss
pop
jne
jae
sbb
and
sbb
lock
adc
test
mul
add
adc
jmp
jns
mov
and
pop
idiv
out
jle
test
inc
scas
or
outs
sahf
push
sub
pop
stos
es
sahf
out
push
ror
out
mov
aaa
mov
push
jmp
(bad)
das
adc
iret
adc
jmp
or
xchg
ss
imul
push
mov
jge
mov
sbb
(bad)
push
pop
je
mov
call
dec
ret
mov
jmp
add
sub
jo
out
sar
pop
cwde
pop
nop
jmp
sbb
mov
push
scas
push
mov
jns
int3
rcl
sub
xor
or
pop
pop
pop
out
icebp
push
cld
mov
push
adc
push
movsx
adc
sub
cmp
jmp
fst
jmp
jmp
fbstp
or
adc
jmp
cmovl
dec
ja
mov
pop
fwait
sbb
sub
jne
add
xchg
pop
adc
jmp
jo
xor
cmp
mov
cmp
add
adc
ss
sbb
push
bound
inc
mov
jbe
and
cdq
sar
in
mov
cmp
jne
test
dec
in
jg
add
jmp
mov
push
inc
pop
movs
inc
mov
repz
jg
cmp
add
jne
jle
push
xlat
and
push
inc
fmul
outs
mov
add
adc
inc
jle
sbb
inc
addr16
mov
scas
and
(bad)
(bad)
dec
jb
arpl
gs
gs
jne
gs
ins
popa
retf
fcos
jnp
pop
sbb
pop
addr16
imul
cdq
pop
pop
push
popa
add
or
arpl
jmp
aaa
xor
jae
je
push
sbb
jae
cdq
dec
pushf
not
dec
jg
test
imul
pop
mov
outs
or
popa
outs
or
push
outs
je
push
adc
fstp
outs
inc
sbb
jbe
popa
jo
cmp
jae
neg
daa
push
sbb
iret
out
adc
sub
add
mov
and
sbb
sbb
outs
push
push
clc
ins
test
add
jp
popa
ins
sbb
sbb
xchg
arpl
xor
jbe
sbb
je
adc
fiadd
or
addr16
xor
(bad)
sbb
jle
inc
call
push
mov
fisttp
jns
out
test
cmp
adc
int
je
outs
ja
mov
fcomi
push
or
outs
enter
je
je
add
push
inc
sbb
add
or
mov
je
add
mov
sar
mov
mul
rol
xor
add
outs
scas
mov
popa
js
fs
ins
or
inc
adc
or
sbb
add
inc
add
and
hlt
stos
jne
xor
mov
sub
dec
jae
add
gs
pop
xor
pusha
in
add
mov
push
add
xor
and
(bad)
push
inc
movs
or
lds
outs
push
lds
ds
push
inc
ins
push
sbb
push
inc
mov
push
scas
dec
or
or
outs
jo
in
lahf
test
or
je
sub
je
or
mov
push
mov
test
inc
mov
xchg
add
push
add
mov
inc
lock
shr
push
inc
sub
add
loopne
lahf
movs
jbe
or
jle
or
es
jl
push
loopne
lahf
cmp
mov
jge
test
push
push
enter
push
mov
ret
int
lods
add
push
dec
mov
inc
into
ja
jns
xchg
push
or
addr16
ins
lock
xchg
loopne
lahf
xchg
or
jb
gs
cmps
mov
sub
sub
sub
dec
ret
ret
xor
in
loop
loop
pop
or
stos
int3
lds
jb
adc
fistp
leave
push
sub
sar
fs
test
mov
or
dec
mov
inc
adc
push
pop
pop
das
jmp
pop
xchg
loop
mov
adc
adc
imul
loope
add
hlt
push
icebp
or
sahf
cmpps
(bad)
std
movsx
pop
mov
and
psubw
xchg
xchg
cmp
or
jo
push
sub
mov
fcom
lock
fwait
fs
mov
das
dec
rcr
add
pop
inc
es
dec
popa
cs
sub
ins
out
push
add
arpl
jnp
xchg
cmp
pop
sbb
add
dec
int
inc
xor
mov
dec
adc
ins
mov
test
or
sbb
shl
inc
ret
mov
jne
mov
ss
adc
adc
ins
mov
popa
jbe
or
inc
mov
push
xchg
add
jne
add
mov
shr
adc
jle
xchg
and
and
jmp
and
adc
pop
mov
retf
lock
add
(bad)
call
sbb
inc
pop
push
aas
sub
inc
dec
int3
fst
pop
dec
mov
movs
dec
pop
adc
sub
sbb
inc
lea
push
xor
(bad)
out
jb
test
shl
cmp
fwait
(bad)
push
(bad)
or
loope
es
call
pop
add
pop
add
fild
cmp
jnp
in
push
xor
dec
das
bound
push
movs
fcom
mov
push
addps
invd
sub
test
sbb
add
add
(bad)
fsub
not
scas
jecxz
pop
xor
jns
out
mov
in
xor
mov
push
inc
popa
fcmovb
push
or
inc
mov
jge
sar
push
and
or
lds
nop
scas
outs
je
cmp
or
adc
scas
lds
and
clc
sub
jmp
mov
ret
push
pop
arpl
add
pop
shr
out
lds
cmps
aas
jno
lds
in
push
or
adc
push
nop
mov
cmp
aas
push
stc
into
mov
(bad)
xor
add
scas
adc
cmps
pop
pop
or
jge
push
jne
shl
movhps
out
pop
in
lds
test
mov
sbb
add
pop
add
enter
push
jg
or
pop
dec
mov
inc
ret
push
mov
into
not
sub
inc
js
shl
inc
sbb
(bad)
and
enter
and
add
xchg
test
pop
ja
cmp
push
mov
push
jl
sbb
cmps
enter
js
stos
outs
stos
out
es
ja
mov
mov
sub
inc
push
fs
fdivr
mov
sar
lods
push
add
inc
inc
test
les
jae
sub
sbb
mov
jbe
daa
or
jp
pop
sub
push
push
sbb
sahf
pushf
sub
loope
lods
inc
dec
daa
mov
test
add
cmc
inc
ins
outs
jbe
lock
ror
adc
sub
dec
xchg
loopne
retf
add
add
cmc
xor
cmc
stos
cmc
jo
loop
mov
cmc
mov
ds
jae
in
jns
pop
add
jno
cdq
and
sub
pop
pop
mov
push
stc
mov
jbe
retf
or
sbb
xchg
adc
push
mov
loop
and
pop
mov
nop
cwde
aas
xor
lds
pop
movs
rol
stos
lods
sbb
inc
out
pop
test
jecxz
inc
dec
enter
(bad)
stc
mov
inc
xorps
outs
add
jecxz
outs
jbe
dec
inc
and
cmps
mov
out
cdq
dec
cwde
ins
dec
push
fild
and
adc
inc
stos
mov
retf
mov
stos
pop
ins
pop
pop
add
not
push
inc
xchg
retf
push
rol
repz
adc
jae
pop
xchg
add
in
add
or
inc
iret
push
inc
sbb
pop
lods
push
mov
js
out
inc
mov
mov
jp
push
dec
cs
fdivr
or
es
test
lahf
idiv
push
pop
push
push
ins
fs
iret
shr
sbb
cwde
loopne
repz
cmp
hlt
sub
cmps
stc
cmp
jo
cld
inc
and
sar
cld
cmp
je
in
out
cmp
cmp
mov
fdivp
push
push
push
fchs
mov
push
pushf
and
add
rcr
pop
and
inc
xchg
call
gs
sbb
add
xor
mov
sbb
rol
icebp
or
add
das
xchg
mov
inc
imul
fs
xchg
movaps
jne
and
push
jno
add
pop
cmp
in
xchg
imul
gs
push
sbb
push
das
mov
jo
int3
pop
add
push
push
sub
add
inc
mov
test
retf
mov
nop
jecxz
xchg
jbe
int
call
mov
add
repz
lock
enter
push
stos
push
mov
and
and
inc
lahf
xor
dec
lea
push
lods
(bad)
cwde
fs
call
xor
xor
dec
pop
mov
push
in
mov
nop
dec
and
jnp
mov
test
in
push
cld
push
aam
add
jnp
out
push
clc
or
xchg
in
and
out
mov
es
inc
push
sub
shr
jnp
push
push
push
ss
pop
dec
push
and
call
pop
sahf
cmp
jecxz
xor
fild
dec
inc
xor
mov
das
test
mov
imul
outs
add
xor
add
arpl
cs
jae
inc
lock
add
or
sub
gs
js
sbb
push
and
adc
popa
adc
inc
or
adc
ins
dec
dec
(bad)
mov
add
and
jne
inc
adc
xchg
jnp
iret
adc
xor
jmp
popf
xlat
and
call
mov
(bad)
fstp
cmp
js
or
or
mov
pop
or
inc
mov
not
push
jb
mov
test
ror
xchg
sbb
lahf
add
ds
sar
and
arpl
mov
jo
adc
retf
push
fdiv
add
sbb
pop
push
fwait
jne
inc
adc
jae
ds
cmps
shl
js
shl
sub
popa
jno
mov
pusha
mov
dec
inc
imul
out
nop
sbb
cmp
dec
outs
(bad)
mov
or
outs
fs
pop
inc
stos
fs
test
fwait
cmp
dec
cmp
mov
push
pop
pop
sub
push
dec
outs
jb
(bad)
pop
fist
or
jne
test
sub
push
jb
add
pop
add
into
bound
cmp
test
and
dec
fadd
pop
xor
sbb
pop
add
pop
inc
push
enter
lock
outs
imul
jb
push
icebp
lods
ror
jns
dec
outs
into
loop
in
rcl
cmp
pop
retf
pusha
mov
lods
and
push
jbe
mov
inc
in
jae
or
cmp
or
or
pop
mov
mov
or
daa
test
or
push
imul
xchg
pop
push
jl
out
or
xor
(bad)
scas
test
cmc
mov
jg
out
mov
cmp
add
aad
in
imul
outs
sub
jns
mov
inc
adc
and
mov
push
add
ret
push
cmps
add
inc
pop
lock
inc
(bad)
sbb
sub
mov
add
dec
add
cwde
loopne
mov
xor
lds
or
jnp
les
rol
shr
dec
push
xchg
aas
sbb
push
sub
sbb
sub
jne
mov
pop
lahf
inc
add
push
ret
push
jo
mov
jecxz
mov
sbb
or
sub
and
inc
adc
or
lods
fdiv
pop
adc
stos
(bad)
ins
test
addr16
mov
sbb
or
pop
mov
jg
pop
sbb
pop
add
push
test
xlat
sbb
fstp
pusha
xlat
das
std
push
out
sbb
push
cwde
push
cmps
push
pop
sbb
mov
add
shl
stos
cmp
inc
adc
jp
stos
cmp
pop
jecxz
fsub
add
and
pop
inc
and
and
(bad)
mov
fcom
hlt
cmp
(bad)
or
sysret
test
push
(bad)
not
js
xchg
push
idiv
adc
ins
adc
or
or
nop
adc
push
sub
inc
sub
add
or
xchg
out
push
inc
sbb
add
inc
iret
mov
mov
retf
call
aam
mov
add
adc
movs
dec
out
enter
sbb
adc
sub
xchg
jb
pop
sub
gs
sbb
jo
adc
add
mov
or
loop
inc
dec
cmp
sbb
loope
sub
pop
cmp
(bad)
push
add
jnp
jno
pushf
sbb
cmp
add
fist
push
fldenv
(bad)
movs
or
leave
lock
aas
adc
add
jns
mov
xchg
ret
add
call
retf
dec
jbe
inc
adc
and
inc
push
dec
cdq
mov
xchg
cs
or
int3
sub
or
js
imul
sbb
aaa
add
fnstcw
dec
or
stos
inc
dec
push
cmp
xor
cmp
pop
push
orps
in
push
ffreep
mov
mov
popa
sbb
inc
out
sbb
cmp
aaa
and
add
and
sub
iret
add
mov
shl
add
les
popf
sub
scas
or
ror
push
jg
inc
sub
test
add
ficomp
adc
and
mov
push
lea
inc
add
or
and
add
dec
outs
pusha
mov
mov
pop
jo
add
add
mov
xchg
lock
xchg
inc
in
jmp
or
popa
push
jnp
xor
and
std
retf
lods
mov
popa
jo
sbb
xor
call
add
scas
ror
aam
push
not
or
push
add
pop
fs
nop
push
lods
add
inc
xlat
into
inc
jno
push
bound
jae
ins
mov
inc
mov
mov
pusha
fwait
push
jecxz
nop
loopne
and
outs
and
mov
cmps
mov
xor
inc
test
je
shr
pop
ret
jnp
pushf
mov
pop
jae
mov
dec
xor
(bad)
add
call
adc
inc
mov
mov
push
imul
pushf
js
adc
test
and
adc
or
dec
push
xchg
inc
push
push
ins
add
push
sti
fstp
mov
xor
(bad)
(bad)
cmp
jg
ffreep
loopne
jo
push
xchg
jns
pop
xchg
push
add
push
jns
gs
jne
xor
addr16
adc
jnp
adc
addr16
xor
test
push
dec
mov
imul
cdq
jecxz
outs
mov
cmp
outs
push
outs
imul
mov
gs
jmp
mov
outs
inc
fidiv
mov
adc
(bad)
push
pop
int3
add
sahf
pavgw
les
ins
adc
inc
in
popa
jns
pop
pusha
mov
loope
fwait
and
je
iret
movs
outs
adc
jns
inc
cwde
(bad)
inc
pusha
neg
and
xchg
cmp
xchg
setp
adc
movs
adc
repz
shr
jnp
sbb
push
test
push
pop
jl
xchg
or
rcr
cmps
jo
push
cmc
mov
and
sbb
ins
xchg
pop
inc
and
sti
inc
in
xor
mov
fcom
mov
loop
push
or
and
jmp
xchg
jecxz
cwde
leave
arpl
mov
dec
sbb
jmp
inc
sub
js
xchg
sub
inc
js
jmp
sbb
(bad)
push
dec
xor
sar
xlat
xor
call
int3
sbb
(bad)
dec
dec
nop
movs
pop
cdq
jne
xchg
or
pushf
or
adc
xlat
xorps
adc
and
add
push
dec
in
adc
in
dec
mov
inc
jbe
xchg
mov
pop
(bad)
jno
jbe
in
sahf
js
cmps
nop
jnp
push
sbb
or
dec
xlat
test
(bad)
popa
push
xlat
add
xlat
sbb
in
jmp
push
xlat
push
push
adc
test
and
mov
pusha
push
push
dec
pop
movs
pop
push
mov
out
mov
sub
cmp
mov
push
cld
pop
pop
sub
pop
add
call
retf
unpckhps
cmp
mov
add
push
punpckldq
in
fst
out
sbb
push
sbb
mov
pop
scas
cld
sbb
cmp
sbb
retf
pop
stc
pop
aad
xchg
call
imul
add
adc
(bad)
shr
mov
inc
pusha
or
(bad)
mov
icebp
aas
sysret
repnz
push
loope
inc
jae
push
shl
sub
inc
call
push
jge
mov
inc
sub
or
push
outs
fnstsw
lods
ds
rol
or
add
shl
jbe
and
les
not
cmp
inc
inc
pusha
pop
cmp
bound
add
cdq
push
outs
mov
mov
enter
push
ins
push
mov
gs
lea
daa
sbb
inc
add
xchg
sbb
dec
lea
xor
pop
fadd
inc
jge
lods
sbb
dec
cmp
dec
movs
not
or
adc
mov
push
inc
inc
cvtpi2ps
mov
and
retf
jmp
data16
dec
cmp
int
cmps
inc
dec
mov
ja
push
add
push
mov
cwde
adc
push
dec
push
dec
jns
lahf
pusha
add
push
out
lahf
adc
add
mov
cmp
or
(bad)
dec
dec
xor
cmp
xor
adc
(bad)
arpl
retf
or
leave
dec
neg
in
dec
pop
pmulhuw
pop
dec
in
out
xlat
iret
out
in
(bad)
mov
mov
push
jmp
loope
outs
xor
rcr
adc
or
or
gs
cdq
xor
aaa
sbb
sbb
in
mov
add
push
sub
jbe
div
shr
in
jle
fsub
or
sub
sub
lock
cmps
jg
jg
imul
mov
jmp
aas
cmps
int3
push
ja
push
push
ror
push
add
lods
inc
sbb
mov
mov
shl
in
sub
jo
mov
add
or
outs
je
data16
cwde
or
cmp
inc
mov
out
pop
dec
cwde
aad
pop
(bad)
jns
pop
or
jo
outs
jb
and
ret
jae
inc
shl
xchg
jne
popf
pop
enter
jb
mov
pop
lds
(bad)
fdivr
lock
call
(bad)
div
push
xor
mov
mov
lock
fsub
loope
das
js
add
ins
mov
sub
xor
test
mov
add
xor
cmp
push
inc
mov
(bad)
dec
sahf
xlat
xlat
enter
ds
lock
cmps
sbb
inc
movs
xchg
jns
(bad)
sbb
add
scas
mov
or
push
sbb
adc
imul
mov
jl
push
cmp
add
inc
fcom
push
mov
push
xor
test
out
and
jb
test
xchg
xchg
fild
mov
call
mov
lea
loope
daa
popa
jge
push
add
dec
xchg
pusha
cmp
stos
popa
aad
daa
movs
xor
and
pop
lea
jns
adc
rol
cmp
retf
dec
add
jb
loope
test
jge
inc
add
push
and
jo
mov
push
xor
pusha
or
add
mov
sub
add
sbb
fsubr
enter
add
or
loopne
enter
repnz
call
pop
xor
adc
je
add
les
pop
sub
xlat
and
fwait
dec
inc
call
adc
jae
pop
jmp
inc
fcomp
fidiv
dec
sub
jne
or
and
je
jno
jnp
sub
sbb
or
add
pop
pushf
cpuid
push
push
pusha
jno
js
jg
sbb
push
iret
ror
and
add
jnp
arpl
adc
dec
arpl
ret
arpl
arpl
sbb
popa
mov
jl
pop
les
(bad)
add
iret
lock
xchg
cmc
sahf
push
add
cmp
and
sahf
fsubp
jbe
retf
inc
ins
imul
les
hlt
retf
pop
xchg
push
pusha
jns
inc
add
sahf
stos
test
add
push
ret
out
add
pop
pusha
pop
mov
mov
shl
or
sbb
imul
jb
push
js
pop
bound
pop
mov
add
not
inc
add
les
pop
pusha
add
pop
shr
in
(bad)
push
pop
mov
cdq
mov
jne
adc
adc
or
jle
xor
or
add
imul
adc
add
lods
push
cmp
sbb
adc
ret
dec
es
aas
pop
(bad)
xchg
sbb
push
pop
dec
push
push
and
or
sbb
and
mov
fisttp
adc
mov
das
in
clc
jge
shl
or
or
xor
add
ss
mov
pusha
sub
int3
rcl
adc
movs
jae
add
mov
(bad)
push
addr16
or
cmp
push
aas
xchg
cwde
lods
mov
pop
fstp
imul
inc
mov
dec
mov
mov
push
push
xor
int
mov
or
xchg
test
xor
pop
pop
mov
dec
rol
xor
pop
cli
pop
lds
ins
xchg
xchg
inc
out
xchg
aad
cmp
jmp
push
outs
jo
or
dec
std
mov
jnp
imul
push
adc
das
pop
adc
(bad)
jb
cmp
mov
xor
mov
and
ds
mov
int
aas
jg
cwde
out
or
push
fsubr
sbb
push
mov
or
cwde
mov
pusha
enter
add
cli
or
in
dec
outs
arpl
imul
inc
mov
mov
add
add
xchg
enter
inc
loope
pop
sar
push
adc
or
enter
sti
xchg
dec
sub
or
push
outs
sub
dec
icebp
push
popa
push
mov
or
ja
test
fild
dec
push
imul
ins
outs
ja
outs
sub
push
cli
out
mov
adc
es
sbb
sub
ins
mov
mov
sbb
mov
xor
pusha
mov
ror
enter
je
imul
jb
jno
jbe
jo
int3
data16
jne
(bad)
and
out
add
je
push
or
or
push
outs
jae
inc
add
inc
pop
push
or
pop
push
sbb
and
and
call
jae
pusha
sub
xchg
daa
add
stc
retf
fucom
pop
fdiv
mov
ret
mov
test
xchg
add
push
pop
or
sbb
rol
ja
gs
jno
imul
cmp
sbb
out
inc
(bad)
cmp
ss
add
pop
lds
push
stos
rol
mov
popa
sub
jg
mov
dec
inc
jg
sub
(bad)
jg
popa
js
xchg
pop
sbb
popa
or
dec
mov
ins
ins
sub
mov
inc
repz
mov
lods
js
or
bound
pop
lahf
push
push
sbb
popa
inc
add
adc
or
dec
lods
lods
les
push
or
and
lods
lea
sub
adc
out
pop
mov
push
inc
mov
adc
ja
adc
retf
mov
fwait
into
lds
adc
adc
gs
inc
jo
iret
or
cmp
cs
outs
mov
mov
or
je
dec
jns
sbb
aaa
ja
jg
and
outs
dec
outs
cmp
mul
adc
popa
ins
cs
les
or
adc
add
add
dec
mov
add
dec
add
push
mov
xlat
ins
mov
push
in
or
or
pop
adc
xor
movs
(bad)
push
cmp
xchg
shr
cwde
xchg
push
in
addr16
inc
cmp
xchg
sti
fisub
shl
in
mov
mov
fcmovne
push
lods
scas
mov
xchg
and
mov
adc
mov
in
jge
jge
in
push
nop
scas
test
sbb
out
movs
push
adc
lock
test
cmps
pusha
mov
xchg
cmp
stos
lods
push
cdq
pop
push
cmovg
push
adc
(bad)
nop
xrstor
mov
enter
addr16
movs
inc
pop
or
dec
jb
or
imul
stos
fdiv
mov
sbb
pop
push
sub
inc
dec
lea
inc
push
stos
pop
push
xor
fdivp
jne
push
and
sub
shl
or
sub
inc
shl
fs
lock
pop
xlat
push
xchg
ins
add
das
imul
or
imul
repz
inc
outs
scas
fldenv
imul
adc
pushf
ret
jge
lods
sub
jmp
ins
outs
and
or
mov
add
and
push
ret
or
mov
aam
push
jo
or
jg
fild
ret
call
ins
out
xchg
imul
and
xor
mov
mov
arpl
fmul
mov
cmps
hlt
rcl
ror
stos
adc
push
pop
xchg
in
push
and
lahf
(bad)
aad
adc
inc
jl
aaa
je
js
cs
dec
mov
sub
cmp
mov
pop
inc
jne
arpl
scas
jnp
and
cld
adc
loope
mov
mov
adc
dec
dec
retf
cmc
mov
ins
stos
mov
or
neg
sbb
addr16
cdq
out
shl
mov
jo
sub
sbb
pop
cmp
jno
sti
xor
jl
ins
sub
loopne
lea
frstor
adc
sbb
adc
mov
adc
cmp
jne
xor
sub
fstp
test
enter
push
and
jmp
nop
mov
xor
test
das
ret
stos
(bad)
xor
add
xor
push
adc
push
or
aaa
xor
or
mov
mov
jne
xor
inc
icebp
ret
rcl
outs
dec
mov
test
or
enter
add
fidivr
inc
(bad)
outs
stos
aam
rcl
add
fsubr
jno
cmps
add
test
push
jmp
(bad)
xor
sub
sub
mov
ret
push
pop
shl
jl
push
pop
sub
les
add
push
data16
popf
cs
cdq
cmp
loope
sub
pop
mov
jmp
sub
and
retf
pushf
out
cmp
and
aaa
mov
sub
pop
cwde
lock
pop
pop
xor
push
jecxz
and
xor
cmc
fwait
loop
push
pop
fwait
inc
ss
adc
popa
pop
xor
js
inc
sub
adc
jecxz
push
in
add
pop
pop
xor
xor
cmp
cmp
cld
add
add
xor
sbb
mov
(bad)
jo
(bad)
popa
add
jo
jns
sub
out
movs
pushf
jp
sbb
cs
xor
test
mov
inc
shl
imul
add
mov
and
xchg
add
adc
test
lock
or
jb
and
inc
sbb
xor
lock
mov
clc
ret
mov
sub
inc
adc
das
xchg
mov
push
cdq
jb
mov
xor
add
mov
popa
sub
sub
js
fsubr
out
test
xor
sub
dec
jno
or
dec
xchg
loope
xchg
mov
jo
mov
test
add
or
lods
or
dec
pusha
cli
push
push
outs
ffreep
sbb
or
outs
xor
not
pusha
retf
call
push
pop
ror
push
adc
(bad)
(bad)
leave
xchg
(bad)
ds
(bad)
sti
psllw
sub
push
lock
jp
dec
inc
(bad)
std
xor
add
aas
enter
inc
inc
sahf
pushf
fmul
stos
call
outs
add
pop
push
adc
push
aaa
jo
dec
scas
fnstcw
mov
mov
idiv
mov
in
ds
mov
jmp
out
push
das
jbe
lods
ds
(bad)
in
dec
dec
outs
pop
aaa
pop
punpcklwd
and
add
mov
pusha
add
add
add
add
xor
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
or
sbb
cmp
cmp
mov
loopne
cmp
pop
lock
in
out
(bad)
jmp
jmp
out
in
pop
lock
(bad)
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
fcmove
(bad)
fdivr
xlat
call
(bad)
call
call
call
call
call
call
call
dec
dec
dec
dec
jmp
add
push
add
mov
(bad)
repnz
mov
push
aam
imul
mov
ins
cmp
out
push
int3
ror
push
leave
jo
ja
out
call
retf
push
push
imul
sahf
and
retf
xchg
ins
push
repz
and
loopne
fs
push
shl
fsubrp
les
mov
test
int3
push
inc
push
(bad)
fsub
ficom
aad
cmp
iret
into
jb
mov
mov
push
enter
loop
out
mov
push
loopne
pop
mov
push
(bad)
dec
sbb
(bad)
jmp
push
ja
aaa
inc
and
push
mov
push
push
and
js
push
ror
add
mov
adc
or
jae
push
clc
pop
dec
les
cmp
js
push
ret
adc
es
mov
ss
sbb
push
mov
fnstsw
and
mov
imul
xchg
daa
out
inc
js
fs
ins
mov
add
dec
fiadd
inc
dec
ja
shr
jl
push
lods
or
push
scas
or
loopne
(bad)
inc
gs
push
add
test
ror
ins
repnz
imul
xchg
dec
push
push
fs
ins
in
add
inc
or
add
mov
adc
addr16
inc
repnz
(bad)
cmc
dec
int3
clc
push
enter
inc
pop
push
arpl
mov
sub
test
mov
sbb
sbb
adc
hlt
out
push
or
jl
sub
mov
sub
sbb
(bad)
shl
push
pop
mov
pop
inc
imul
add
sub
jg
or
push
fist
mov
inc
sub
(bad)
jb
sbb
push
xchg
lds
test
mov
out
xchg
test
out
cmp
jecxz
out
rcr
mov
call
call
dec
fbstp
js
cmp
add
xchg
mov
sbb
call
ret
xor
mov
jbe
mov
sub
ds
add
mov
add
push
push
ins
daa
jo
lock
xor
adc
jb
jo
dec
push
jae
arpl
arpl
jmp
or
jae
sub
add
enter
dec
imul
mov
pop
push
dec
outs
add
in
das
pop
sub
push
jbe
fs
push
inc
sub
jmp
xchg
jb
sbb
repz
xor
dec
jb
add
inc
sub
shl
test
and
imul
call
add
in
inc
or
(bad)
and
fiadd
mov
or
push
int3
add
mov
(bad)
cmp
in
jp
add
daa
mov
cmc
out
cmp
clc
call
push
outs
jb
jb
jg
or
add
stos
add
add
mov
jo
cmp
sub
(bad)
popa
ins
push
fadd
dec
pop
or
je
pop
jo
pop
test
fwait
not
enter
in
mov
out
pop
xchg
jmp
push
inc
inc
push
mov
gs
test
movs
sbb
or
push
shl
(bad)
dec
lock
jae
mov
mov
or
jmp
mov
popf
aad
or
inc
dec
dec
sbb
lods
ror
mov
inc
sbb
add
or
inc
push
movs
add
inc
and
mov
aas
cmc
xor
cmp
adc
push
adc
add
mov
mov
push
xor
pusha
mov
jl
sub
xchg
xchg
sub
adc
es
aaa
lods
retf
adc
push
jge
xchg
push
mov
xor
and
ins
adc
movs
(bad)
(bad)
enter
mov
push
ins
outs
clc
xchg
and
aam
shl
jne
jb
push
xor
add
dec
dec
scas
dec
jmp
loopne
jne
test
popw
jno
cmp
inc
add
outs
push
sub
push
inc
push
and
xchg
jp
xchg
je
mov
xor
sbb
or
mov
sbb
(bad)
mov
xor
pop
add
mov
or
cmp
and
pop
xlat
add
or
gs
addr16
cmp
shr
jmp
enter
jo
mov
fwait
push
jo
add
push
cmp
xchg
jmp
sbb
mov
fdivr
add
retf
ins
(bad)
aas
xor
and
push
aas
push
xlat
test
scas
push
sub
pop
mov
mov
movs
or
xor
in
out
xchg
fdiv
pop
jg
in
xchg
jne
or
mov
xlat
mov
loopne
or
or
jmp
mov
mov
push
or
add
sub
popf
pusha
outs
jl
sub
bound
push
and
or
pop
dec
dec
xor
mov
aaa
push
sub
sbb
or
sbb
push
mov
fadd
sbb
sbb
mov
sbb
sbb
cmp
sbb
sbb
sbb
sbb
jp
sbb
mov
inc
imul
xchg
mov
xchg
xchg
retf
xchg
repz
xor
xchg
ja
ret
in
sahf
dec
retf
pusha
adc
call
jmp
inc
mov
out
adc
inc
icebp
xchg
or
xchg
gs
push
call
icebp
call
cwde
daa
xchg
pusha
mov
out
push
cmp
add
xchg
mov
les
cwde
or
dec
sar
push
ins
mov
dec
add
imul
add
stos
pop
outs
fstp
clc
push
add
pop
and
adc
bound
xchg
dec
adc
out
pop
pop
in
dec
aaa
in
mov
dec
in
fadd
push
jbe
mov
cwde
inc
mov
xchg
pop
add
inc
sbb
and
mov
adc
adc
pop
dec
bound
inc
pop
fwait
inc
dec
movs
or
(bad)
mov
xchg
inc
xor
lods
pop
in
dec
out
retf
movs
pop
push
or
dec
sbb
and
dec
push
dec
push
xchg
adc
inc
inc
ss
mov
add
adc
aad
sub
call
or
mov
or
and
or
aas
adc
cmp
adc
add
xchg
js
and
arpl
push
push
jge
pop
jo
nop
jne
push
adc
add
lea
adc
ins
or
push
and
jmp
bound
add
lock
out
push
jb
popf
inc
(bad)
or
or
and
jo
push
push
xchg
mov
pop
or
data16
pop
test
es
xchg
or
(bad)
cli
(bad)
jmp
add
add
repz
cmp
cwde
inc
mov
push
test
adc
dec
rol
mov
cmp
arpl
ficomp
pop
lahf
sbb
lods
(bad)
cli
push
fs
scas
idiv
mov
rol
xor
dec
pop
mov
out
mov
jl
xchg
dec
and
mov
int3
push
test
in
push
cld
push
aam
add
jmp
iret
ror
clc
or
pop
in
fidivr
xor
and
inc
push
sub
rcr
imul
push
push
ss
pop
xchg
add
and
loopne
or
stos
lds
adc
mul
scas
aas
pop
aaa
xchg
sbb
push
xchg
push
inc
mov
popf
test
push
out
lds
mov
(bad)
and
pop
sbb
sub
imul
push
mov
adc
fs
push
dec
jo
or
out
jle
js
inc
repnz
inc
ins
jo
popa
inc
pminsw
shl
sbb
dec
(bad)
shl
and
or
fstp
push
nop
addr16
ins
sub
inc
lds
add
push
and
imul
popa
push
push
cmp
xor
jo
xor
or
jo
pop
adc
or
aas
(bad)
bound
cmp
push
scas
jae
or
outs
outs
adc
or
popf
test
test
or
js
popf
xchg
mov
fs
cmp
xchg
pop
add
js
outs
jbe
xor
and
loopne
adc
out
(bad)
outs
xchg
jnp
mov
sub
test
mov
ds
inc
jne
fist
scas
imul
push
bound
ins
aaa
push
stos
cmp
or
or
gs
push
popa
inc
movs
dec
adc
adc
push
jo
aas
sub
(bad)
lahf
inc
fs
pop
xchg
mov
pop
cld
data16
or
xchg
test
cmp
call
xchg
jae
mov
enter
(bad)
(bad)
test
les
adc
jo
imul
test
loop
push
je
mov
and
mov
jle
xor
dec
ins
std
out
(bad)
sbb
std
sbb
stos
pusha
cwde
push
mov
je
mov
jbe
pop
iret
or
nop
push
(bad)
je
jo
mov
cmp
push
pushf
sub
test
lahf
arpl
add
mov
sbb
pop
cmp
gs
inc
ret
aas
div
cmp
ror
in
cmps
xor
ins
cmps
ss
int
adc
test
and
push
retf
dec
push
les
sub
xor
add
pop
rol
pop
fadd
and
div
and
and
or
ret
scas
call
adc
and
rcr
pop
add
and
lods
rcr
adc
and
ja
fcom
ins
sbb
mov
ja
loopne
sub
sti
addr16
or
mov
cmp
push
je
push
mov
sbb
pop
sub
dec
test
ja
pusha
clc
data16
fsub
dec
push
cmp
or
push
inc
lea
mov
pusha
mov
push
dec
pop
cmps
mov
ret
push
push
sub
test
imul
push
cld
pop
push
sbb
outs
xor
mov
xor
push
xor
es
push
cmp
adc
retf
jmp
push
in
nop
scas
test
fisubr
push
loop
aam
pop
adc
mov
pusha
and
add
imul
add
push
xor
nop
push
xlat
or
adc
pop
jmp
xor
out
pop
add
cld
push
cli
scas
mov
mov
pop
fdivr
jle
push
call
xor
ret
jnp
push
pop
fidiv
push
inc
ss
mov
out
loop
test
out
fcom
or
push
inc
sar
das
bswap
mov
xor
inc
inc
or
js
mov
sub
and
dec
xlat
sti
jp
lods
jb
sub
test
dec
ds
jno
ror
mov
shr
cmp
xor
pop
int3
cmp
in
retf
sar
dec
lock
push
dec
or
xor
cmp
stos
es
push
jb
jae
(bad)
aam
or
js
inc
dec
or
das
jae
lock
jo
sahf
fsubr
jo
and
sbb
sub
es
and
popa
bound
mov
ins
xchg
add
daa
xor
dec
lock
sub
hlt
sub
cmp
clc
pop
test
or
add
dec
push
lahf
dec
rcl
jp
mov
dec
push
mov
xchg
xchg
cs
add
sub
ins
xor
loope
ja
dec
and
daa
adc
cmovbe
daa
mov
mov
xor
sub
(bad)
jb
jo
push
or
add
das
fs
and
xchg
inc
cmp
mov
dec
dec
inc
push
mov
fmul
popf
and
sbb
inc
xor
xor
push
sahf
sub
sar
sub
pop
daa
js
out
mov
data16
cld
jp
push
push
and
xlat
pop
add
xchg
sub
push
inc
xor
inc
and
les
push
pushf
imul
inc
push
fld
push
pop
addr16
sbb
push
loope
push
iret
fld
push
push
loopne
push
call
mov
or
cld
ds
push
adc
sbb
fmul
xlat
es
jg
int3
adc
push
pop
jb
cmp
sbb
pop
movs
dec
xor
sbb
sar
push
mov
popa
je
mov
sbb
in
add
sbb
push
add
or
push
pusha
and
xor
and
pop
sub
xor
xchg
mov
mov
imul
stc
enter
push
push
sub
mov
out
ror
ret
and
add
push
inc
or
shr
inc
xor
inc
dec
dec
in
xchg
outs
jb
inc
push
lods
push
out
call
pop
mov
iret
in
adc
setno
call
pop
cld
into
ins
div
dec
mov
dec
xor
jne
mov
cs
stc
cmpxchg
and
cdq
in
into
xchg
cmps
scas
jmp
pop
adc
fstp
jge
sub
cmps
pop
lock
cmp
(bad)
jnp
iret
psraw
mov
inc
sub
pop
inc
jge
pop
sub
push
outs
(bad)
push
cmp
xor
jne
clc
cvtps2pi
inc
outs
clc
ins
cmp
(bad)
jns
push
add
push
adc
dec
aaa
mov
add
xchg
adc
inc
pop
enter
inc
ret
add
cmc
out
jmp
add
adc
das
cmps
cs
add
sbb
adc
sbb
sbb
ficom
or
push
add
add
add
add
mov
mov
(bad)
push
push
or
or
shl
push
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
and
mov
mov
mov
add
push
mov
cmp
dec
mov
(bad)
(bad)
(bad)
push
pop
mov
mov
mov
mov
mov
mov
(bad)
out
(bad)
in
inc
inc
inc
inc
inc
clc
aaa
cld
(bad)
inc
(bad)
mov
(bad)
mov
push
(bad)
mov
push
jbe
mov
clc
dec
(bad)
mov
sub
sub
adc
mov
sbb
xor
lahf
cmps
adc
in
cmp
lahf
out
sahf
or
jl
(bad)
call
clc
xor
lods
sbb
lods
or
repz
cwde
aam
push
and
imul
ret
je
fistp
shl
mov
or
dec
push
dec
sub
jl
fiadd
dec
dec
add
push
sahf
test
sub
cs
mov
ret
call
push
jo
push
jns
sub
sub
sbb
jns
out
inc
pushf
in
sub
out
fucom
jns
dec
enter
push
je
and
cmp
push
aam
je
cmp
mov
push
test
test
in
shr
mov
and
inc
push
shl
jb
fild
outs
jo
and
push
push
push
mov
cmp
adc
push
and
pop
mov
rol
js
dec
ins
retf
(bad)
push
mov
jo
push
pop
push
adc
xchg
clc
fiadd
in
jb
out
mov
mov
clc
outs
inc
push
lods
xabort
sub
pfrcpit2
dec
cmps
test
fdivr
sahf
sub
loope
xor
jbe
in
jnp
not
xchg
sar
and
imul
mov
aaa
push
inc
mov
lds
sbb
loope
icebp
cmc
and
pop
or
pushw
pop
jmp
or
push
jnp
sub
or
dec
lea
adc
xchg
pushf
sub
movs
xchg
mov
daa
inc
pop
test
sbb
js
(bad)
ins
xor
adc
inc
popa
sub
in
arpl
popa
loop
(bad)
idiv
test
inc
popa
outs
inc
outs
arpl
test
dec
ins
cmp
cmp
mov
mov
jae
rcl
test
add
ret
ficomp
inc
je
js
fadd
dec
jp
sahf
xchg
xor
inc
inc
sbb
or
inc
ins
ins
and
mov
out
adc
sub
lea
fbld
jb
sbb
cmp
and
sbb
shl
inc
test
enter
data16
jo
inc
loope
adc
sbb
jb
add
dec
loope
adc
mov
retf
push
push
outs
jne
lods
jo
cmp
in
aad
pop
push
adc
fwait
sub
repnz
pop
add
inc
test
jecxz
xchg
jo
inc
je
ins
sbb
push
jmp
push
and
pop
add
in
mov
push
mov
inc
scas
shl
sbb
adc
pop
cmp
xchg
imul
ja
mov
cmps
cmp
leave
ror
add
mov
add
outs
outs
loopne
inc
push
pop
cmp
lock
sbb
ret
or
pop
add
mov
push
cmp
jns
jecxz
or
add
retf
fs
dec
jecxz
in
mov
or
dec
gs
pop
xor
cmps
push
lods
pop
lock
mov
pop
imul
sub
iret
or
and
sub
jl
popa
mov
push
sbb
cwde
fcom
pop
add
push
pop
in
push
outs
dec
sbb
mov
sub
add
sub
adc
or
sub
cdq
ds
adc
jmp
adc
bound
ret
mov
adc
loope
xor
and
icebp
movs
bound
std
push
gs
outs
sub
cmp
jl
xlat
loopne
sub
jo
cmp
in
ret
dec
push
adc
mov
ss
cmp
adc
push
dec
sbb
push
add
adc
jo
dec
cmp
aam
ins
jnp
and
push
push
mov
popa
xchg
inc
sbb
and
or
inc
add
aam
movs
ficom
add
ss
push
inc
cmp
pop
inc
jge
add
mov
push
ja
sbb
idiv
xchg
xchg
jne
add
sub
or
mov
push
jo
enter
xor
loopne
mov
lods
mov
adc
sbb
add
xchg
add
dec
add
push
push
sbb
jmp
jno
xchg
ins
enter
in
mov
neg
and
and
and
or
and
cmp
pop
and
and
jnp
int3
repz
xchg
and
or
and
aaa
and
cdq
adc
or
cmp
mov
mov
dec
outs
pop
pop
repnz
inc
push
movaps
pop
jb
(bad)
popf
dec
dec
int3
int
(bad)
inc
cdq
push
mov
xchg
mov
pushf
sub
inc
clc
hlt
dec
push
dec
je
inc
rcl
scas
and
adc
popf
mov
or
mov
mov
mov
xchg
or
imul
retf
test
add
frstor
loop
inc
lea
jmp
push
cmp
push
mov
push
sbb
mov
xchg
mov
xchg
push
mov
(bad)
xchg
inc
adc
jae
mov
aam
xor
adc
movs
add
add
out
neg
and
inc
ins
ret
or
or
out
push
retf
mov
dec
inc
or
dec
inc
sar
sub
aam
dec
clc
inc
push
cmc
add
ins
hlt
add
je
inc
ds
dec
stos
sahf
cmp
lock
xor
mov
pop
punpcklbw
loopne
ss
push
or
ror
add
rcr
push
test
rcr
push
in
mov
es
mov
inc
inc
cmp
lahf
push
mov
fdiv
lods
mov
push
cwde
loopne
adc
out
push
pusha
mov
sbb
pop
stos
lods
push
cdq
mov
push
nop
push
mov
imul
jp
stos
push
jo
sbb
loope
jnp
loope
jl
push
pop
das
push
pop
std
pop
mov
cld
push
popa
jo
imul
pop
xchg
mov
jo
xor
add
mov
or
or
adc
out
and
rol
xor
add
xor
mov
push
pushf
push
pop
mov
fbstp
hlt
push
rol
pop
inc
pop
sar
imul
cmp
add
dec
sbb
nop
cwde
jg
(bad)
fbld
push
jg
and
push
push
sbb
inc
add
jge
mov
and
sub
jge
jge
dec
sbb
arpl
daa
mov
jg
inc
idiv
data16
mov
cmp
mov
add
pop
data16
pusha
jge
jne
sub
xchg
data16
pop
out
arpl
and
sub
fisttp
cwde
jecxz
loopne
jo
je
mov
xor
in
ja
dec
fadd
js
mov
jecxz
add
cmp
neg
in
inc
loop
sar
fmul
inc
add
add
add
pop
inc
add
stos
push
dec
shl
or
add
adc
lea
push
fidivr
xor
or
adc
pop
lods
mov
sub
mov
add
xchg
inc
cwde
nop
popa
ja
adc
movs
out
jae
mov
or
inc
arpl
and
dec
jae
ret
xor
push
or
dec
clc
mov
fs
add
cdq
pop
jne
jne
sub
pop
pop
bound
pop
lods
add
mov
pop
pop
adc
mov
(bad)
push
popa
pop
in
into
int3
or
les
jae
jle
mov
pop
or
ins
arpl
push
sbb
cdq
scas
adc
cmp
popa
js
mov
xchg
add
push
mov
mov
ja
add
add
loope
int
lea
add
inc
xchg
xchg
fnstenv
xor
je
movs
je
test
push
xchg
cld
test
fisubr
or
inc
imul
rcl
enter
and
mov
lds
push
and
and
or
rol
inc
dec
dec
(bad)
enter
cmps
fnstsw
cld
cmps
inc
je
loopne
in
push
inc
add
jmp
add
mov
in
xchg
jecxz
xor
mov
test
add
adc
(bad)
fst
sbb
(bad)
mov
mov
js
in
xor
push
push
mov
dec
test
pop
add
push
and
sbb
call
mov
(bad)
mov
jo
push
cmp
cmps
push
loopne
scas
ins
jnp
test
push
pop
mov
push
add
or
inc
cmp
cwde
adc
jb
addr16
jne
ud2
ret
jb
xor
and
or
mov
addr16
bound
js
push
push
ja
loope
shl
jae
mul
test
or
loope
sub
pop
pop
shl
fisttp
outs
pop
mov
(bad)
pavgw
dec
dec
fsubr
popf
jb
sbb
cmps
pop
aam
xor
xor
ds
(bad)
lahf
adc
dec
or
or
movs
jb
mov
ja
pusha
clc
add
push
test
add
mov
cwde
sbb
xchg
dec
inc
fwait
jp
pop
rol
mov
inc
popa
xchg
dec
enter
push
bound
test
mov
mov
and
and
pusha
(bad)
retf
jp
push
outs
jbe
pusha
pop
addr16
add
jg
and
call
dec
lds
push
xor
rol
push
push
leave
push
push
jb
add
push
mov
xchg
pop
add
sub
jge
xor
pop
add
and
or
inc
mov
dec
or
retf
icebp
or
sub
xor
and
rol
push
adc
dec
or
data16
arpl
dec
xchg
push
push
test
add
cmps
mov
or
dec
inc
pop
mov
jbe
xor
cmps
pop
inc
dec
or
std
xor
inc
pop
sbb
lea
mov
xor
in
pop
aam
fiadd
cwde
xchg
inc
lea
push
or
jg
ret
pop
and
add
push
cmp
cmp
lods
or
pusha
shr
movs
ficomp
push
dec
out
loope
fild
inc
imul
pop
test
or
out
inc
cmp
sub
jo
add
nop
mov
xchg
fimul
add
push
in
cmp
shl
adc
push
push
push
je
push
loope
adc
dec
pop
movs
add
jns
sar
popa
arpl
dec
or
mov
je
je
inc
sbb
xor
(bad)
rcr
pop
xchg
or
jns
jns
and
jne
clc
outs
add
mov
jae
gs
add
pop
jae
mov
inc
push
loopne
xchg
rcr
test
fnstenv
shl
test
or
nop
popf
pop
add
dec
inc
add
mov
lahf
(bad)
mov
lock
out
mov
mov
shl
sbb
daa
inc
dec
das
xor
push
sub
pop
dec
pop
mov
push
pop
rol
cmp
nop
fld
inc
mov
or
cwde
out
add
shl
sbb
pop
js
pusha
xor
sub
add
and
pop
mov
sub
dec
jb
dec
lea
adc
int
jmp
and
add
lea
push
loop
sbb
aas
cs
and
test
or
ins
ins
imul
loope
or
jp
mov
pop
xchg
sbb
push
dec
dec
data16
push
or
cmp
xchg
cmp
out
and
jne
sub
xor
ins
xchg
sbb
sbb
inc
xor
push
add
push
and
fiadd
jo
or
or
icebp
out
mov
popa
or
add
adc
in
jmp
imul
test
mov
movs
pusha
or
test
mov
mov
push
adc
lods
outs
leave
jae
scas
mov
out
das
in
mov
sbb
pop
out
aad
push
and
lea
dec
push
and
fisubr
adc
ins
fisubr
add
mov
push
inc
mov
rol
mov
adc
jo
add
inc
sub
sub
hlt
ins
pop
add
push
add
pop
jnp
aad
inc
add
mov
cmp
cmp
int
dec
sub
sub
or
and
adc
mov
test
test
pop
push
and
pusha
fnstsw
inc
adc
inc
rol
cmps
pop
mov
inc
popa
aas
int3
jno
push
sti
(bad)
arpl
pop
jg
add
jmp
das
dec
cmp
mov
push
mov
mov
xchg
ret
add
nop
popa
sbb
dec
nop
add
nop
and
cmp
cld
cmp
adc
mov
dec
(bad)
int3
int3
nop
push
idiv
repz
sbb
iret
repz
popa
outs
push
cmp
jnp
xlat
jns
sbb
stos
pusha
add
loope
ror
call
xchg
cwde
(bad)
sub
xlat
daa
ret
hlt
add
mov
jl
or
call
loop
fistp
loope
out
mov
into
xchg
push
in
aad
xor
cdq
adc
and
jle
call
out
push
dec
adc
sbb
test
rol
push
fmul
out
ror
es
test
nop
dec
adc
cmp
inc
outs
and
rcl
fnstsw
push
cs
or
push
add
cmp
jl
add
pop
inc
paddusb
fsub
jle
cs
sbb
loopne
push
das
jae
sbb
xor
in
add
clc
xchg
dec
or
loopne
mov
outs
fs
mov
cmp
arpl
pop
sub
xchg
adc
and
es
dec
fimul
adc
rcl
push
dec
popa
cmp
mov
popa
ror
xor
jmp
inc
test
sbb
int3
mov
or
sub
adc
stos
ins
loopne
adc
out
pushf
jo
loop
sti
adc
es
pop
and
test
fdivr
push
or
das
loope
xchg
test
or
gs
movs
add
jo
add
xor
imul
add
cmps
mov
pop
ror
add
cmps
adc
sbb
test
sbb
pop
sti
sbb
and
mov
sbb
ud2
(bad)
loop
lds
repnz
or
test
push
ds
mov
jb
leave
sbb
add
inc
aam
popf
or
jne
and
fdivr
add
pop
adc
push
enter
xchg
or
jae
pop
mov
out
aad
adc
rcl
mov
push
cmovle
cs
add
add
sub
cmp
ret
or
adc
and
call
and
das
fidiv
arpl
jmp
add
inc
xchg
sub
xchg
int
shl
cmp
movs
sub
std
pop
dec
add
push
inc
xchg
int3
nop
and
test
push
hlt
mov
jecxz
sub
inc
lea
test
repz
out
test
or
cmp
mov
or
jmp
rcpps
shr
mov
xchg
sbb
jne
es
add
push
xor
push
mov
pmuludq
loop
add
sbb
(bad)
ins
push
imul
mov
push
push
dec
jae
push
sbb
or
add
or
lds
mov
push
jne
jo
sbb
pusha
js
aaa
iret
push
arpl
ins
dec
cmp
call
call
cmp
test
inc
lahf
dec
ja
js
pop
or
or
in
add
xor
or
lock
xlat
and
das
jno
sub
mov
sub
jns
push
inc
push
inc
xor
mov
xor
inc
ja
cmp
push
push
jle
cli
rol
push
pop
es
popf
sbb
mov
or
shl
dec
aas
es
inc
shl
jecxz
xor
pop
add
loopne
jge
adc
xor
adc
mov
cmp
xor
mov
xchg
(bad)
mov
add
and
xchg
or
sub
and
and
popf
retf
and
hlt
sbb
adc
rcl
(bad)
and
mov
xchg
mov
out
mov
inc
je
leave
popa
out
and
inc
fwait
push
push
jae
inc
or
test
dec
aaa
lea
and
cwde
push
inc
dec
mov
pop
add
or
jne
mov
ss
push
inc
or
adc
adc
lahf
mov
pop
ins
rcr
scas
mov
xor
fisttp
pop
sub
sub
adc
cmc
adc
mov
(bad)
pop
xor
dec
or
jae
jnp
add
or
pop
mov
xor
stc
dec
in
push
add
push
jecxz
pop
es
push
push
pusha
mov
shl
scas
dec
test
popa
push
push
in
push
pop
lock
das
pusha
stos
add
push
ret
rcr
loopne
and
adc
sbb
add
cmp
ds
and
inc
movs
mov
sub
inc
sbb
bound
mov
stos
jns
push
mov
je
xor
iret
sbb
jo
pop
imul
add
retf
test
fild
loopne
mov
pop
sub
dec
sbb
in
sub
pushf
pushf
int3
(bad)
mov
cmp
pop
xchg
ins
stos
pop
push
inc
rcl
or
addr16
adc
sbb
cwde
xor
xor
inc
jne
push
sbb
rol
rol
cmp
rcl
add
mov
rcl
add
int
add
add
inc
aaa
loop
outs
adc
and
inc
cmps
aam
imul
inc
or
sar
movs
fcomp
cmp
pop
sbb
or
inc
cmp
jae
adc
add
sbb
xchg
cmp
pop
mov
add
jnp
in
adc
xor
sbb
or
xor
mov
mov
cmp
adc
pop
and
loopne
dec
cmp
adc
jnp
push
jne
dec
and
mov
dec
bound
pop
out
sub
mov
xor
rcr
popf
mov
mov
jge
sub
xchg
ds
jae
jns
ins
das
jl
lea
stc
push
xor
popa
je
mov
push
and
rcr
js
dec
call
or
push
enter
or
push
popa
fs
(bad)
dec
xchg
add
sbb
and
sub
or
ror
and
mov
cmp
or
push
add
sub
cmc
push
push
sub
inc
js
pop
push
ret
stos
pop
ins
dec
mov
hlt
mov
das
pop
pop
cld
pop
xor
pop
movs
mov
sahf
push
add
int3
mov
add
loopne
sbb
push
addr16
je
sbb
je
sub
jo
pop
inc
xchg
shr
js
push
dec
add
push
xchg
mov
js
adc
cmp
stos
jg
jle
fs
xor
push
or
push
cld
ins
pop
fcmove
enter
xor
or
add
inc
scas
xor
add
call
and
sub
and
sbb
sbb
mov
dec
and
aam
add
xchg
movs
mov
ret
mov
push
pop
inc
test
hlt
xchg
xchg
push
add
fsub
pop
test
mov
inc
data16
jno
jmp
cwde
dec
mov
mov
aam
cs
xchg
or
add
popf
out
adc
push
popa
fisttp
inc
add
cdq
(bad)
jb
sar
fnsave
add
adc
call
or
jo
xor
shl
xor
and
ss
mov
fist
inc
mov
lods
adc
or
add
lods
xchg
push
jl
imul
cdq
call
jnp
or
pusha
cmps
aas
sbb
dec
ror
mov
cmp
pop
sbb
add
sbb
dec
sub
mov
dec
inc
jge
(bad)
cmp
xchg
ret
mov
and
or
add
or
inc
add
or
fnstenv
push
push
sub
add
add
jmp
push
imul
jne
xchg
loopne
fcom
inc
inc
cmovs
push
and
add
hlt
adc
xor
pop
aas
pusha
cmovbe
cwde
rcr
leave
push
jb
or
xor
add
sub
daa
or
push
enter
sti
push
or
add
bound
and
shl
mov
ja
test
pop
xlat
mov
mov
call
and
mov
or
lahf
cmps
sti
loopne
add
sbb
fiadd
outs
fild
movzx
sub
int
sti
add
je
inc
(bad)
xor
push
inc
push
mov
push
push
lea
mov
sbb
jbe
mov
mov
push
shl
mov
outs
mov
jl
push
push
xor
adc
and
hlt
and
pop
xchg
jae
and
push
lock
push
jb
fwait
jge
cli
movs
ja
sub
rcr
push
sub
adc
ins
mov
mov
add
nop
adc
lods
fild
pop
pop
pop
ret
push
push
push
mov
jo
sbb
fdivr
push
adc
push
push
push
cmp
jne
push
mov
mov
shr
add
rcr
ret
nop
fdiv
test
push
push
push
gs
add
xor
add
cmp
sbb
cdq
and
jne
adc
js
test
jmp
mov
int3
sub
mov
pop
mov
ficom
daa
(bad)
jge
fucomi
cmps
setne
test
cmp
mov
mov
add
call
mov
loopne
jl
sbb
div
push
arpl
or
adc
mov
mov
mov
in
(bad)
mov
scas
jno
das
mov
repnz
es
lahf
shr
jle
inc
retf
dec
mov
in
cmp
mov
cmp
sub
nop
ror
add
jg
pop
xchg
mov
icebp
aaa
test
push
mov
push
imul
dec
mov
dec
je
jnp
stos
xor
inc
pop
inc
sub
mov
fld
xor
sub
pop
hlt
hlt
xor
push
push
xor
lea
cld
ficomp
inc
clc
xor
adc
fwait
cmp
push
ss
push
add
mov
dec
outs
aas
push
ins
in
add
pop
adc
mov
psubq
jmp
or
jmp
jmp
aas
dec
aas
(bad)
ja
xchg
nop
inc
out
jmp
in
mov
mov
add
dec
push
out
fisubr
adc
inc
jne
mov
jmp
dec
ja
stos
mov
outs
mov
outs
dec
pop
or
jb
jo
or
push
mov
scas
jo
ret
ja
sub
out
inc
fidiv
cmps
cmp
pop
and
inc
or
(bad)
ror
pop
sti
add
xor
push
test
mov
test
dec
outs
xchg
bswap
test
or
aas
sub
popf
jo
imul
fs
jo
xchg
sbb
pop
sbb
mov
xchg
inc
or
pop
add
add
inc
fmul
or
push
sar
push
push
cmps
lea
test
lea
fs
or
push
sbb
add
xchg
add
cmp
inc
ins
gs
inc
dec
and
push
inc
cmps
(bad)
arpl
fnstcw
out
je
mov
ja
push
cwde
adc
jmp
mov
ins
or
adc
add
xchg
ret
test
pop
cmp
jl
movs
pop
jg
push
dec
cdq
mov
mov
cld
retf
mov
sub
scas
scas
repz
sub
xchg
pop
fs
clc
sar
(bad)
or
ss
mov
add
popa
sbb
jae
outs
je
add
dec
sub
jmp
dec
movs
mov
cmps
or
mov
into
and
lahf
mov
scas
xor
push
jmp
push
call
push
retf
in
pop
pop
pop
adc
xlat
pop
fadd
or
jl
inc
xor
pop
pusha
sbb
js
adc
inc
dec
jne
pop
in
mov
pop
call
dec
dec
jne
push
inc
stos
or
jmp
jo
je
(bad)
adc
push
lock
mov
sahf
mov
imul
add
fistp
inc
cmc
push
or
cmp
mov
test
jne
test
jne
(bad)
pop
retf
cmp
mov
or
shl
or
mov
dec
ror
sbb
sub
dec
shl
xor
jo
pop
pop
inc
inc
mov
dec
cmp
or
or
ficomp
retf
add
jle
sbb
xor
ins
xor
mov
fimul
mov
call
or
push
test
xor
icebp
pop
fbstp
mov
cmp
je
sub
call
add
add
mov
loopne
mov
test
jmp
sahf
das
int
and
inc
adc
inc
add
add
add
adc
and
sub
clc
lea
mov
jo
sbb
push
jmp
(bad)
adc
sbb
in
jmp
mov
pop
inc
cmp
or
dec
inc
cmp
jne
mov
or
fcom
adc
or
sbb
cmp
mov
inc
inc
jmp
jmp
cld
or
ret
aam
cmp
pop
mov
sub
test
je
mov
mov
lods
jmp
or
(bad)
jmp
cmps
mov
mov
push
mov
ficom
push
or
sbb
cdq
sbb
or
(bad)
sbb
or
xchg
popa
cmp
pop
mov
sbb
or
jmp
test
xabort
mov
ja
or
pop
adc
push
pop
cmp
out
(bad)
and
push
xor
(bad)
mov
or
rol
mov
dec
xor
test
lea
std
stos
mov
mov
mov
call
and
mov
cmp
jmp
or
or
ror
push
je
cmp
push
cwde
inc
loopne
xor
je
test
call
xor
or
dec
ret
loopne
inc
inc
inc
movzx
test
data16
mov
call
dec
xor
sbb
pop
pop
and
inc
or
add
pop
lea
mov
gs
inc
cmp
mov
mov
jo
mov
cli
mov
xlat
jmp
sar
adc
pusha
rcr
(bad)
sub
ret
popf
(bad)
pop
xor
shr
mov
mov
cld
and
jl
jle
adc
jbe
aaa
jo
gs
shr
lods
mov
mov
pop
mov
mov
pusha
mov
sbb
lea
lea
movs
add
rcl
dec
inc
add
sbb
cli
or
into
xchg
sbb
test
push
mov
mov
push
lea
data16
(bad)
pop
jl
mov
cdq
xor
sub
pop
ret
adc
lock
es
loopne
shl
jl
push
or
cmp
stc
or
and
ret
cmp
adc
pop
dec
push
sub
mov
test
fist
dec
or
adc
or
add
push
neg
cmp
fimul
test
adc
daa
add
(bad)
cmp
jne
sbb
enter
(bad)
cwde
cmps
mov
stos
xchg
stos
jg
sbb
fcos
shl
mov
cmp
in
jmp
cmp
out
ficomp
dec
movs
(bad)
cmp
call
and
or
push
sub
ja
adc
jmp
cmp
jne
or
mov
or
clc
push
clc
mov
mov
mov
lock
loop
clc
inc
imul
ret
fmul
jmp
icebp
das
xor
cmp
sti
or
aam
test
xor
idiv
sti
sub
in
cmp
and
imul
cmp
ret
inc
mov
xor
sahf
in
sub
pop
lods
adc
add
dec
mov
pushf
or
clc
cmps
push
sti
xchg
cld
or
inc
in
push
cmps
pop
mov
das
mov
nop
sbb
push
add
mov
adc
or
push
lea
and
jo
mov
test
jno
adc
daa
test
pop
jne
sbb
mov
xchg
(bad)
push
mov
fadd
je
cli
inc
or
cmp
neg
and
cmp
or
add
rol
mov
inc
or
(bad)
retf
push
lock
call
jmp
push
je
push
test
ins
lock
iret
xor
or
sbb
outs
mov
or
ds
jl
xlat
sub
shr
shl
xchg
clc
pop
sub
cmp
test
jo
imul
fs
nop
mov
bound
pop
ds
xor
test
(bad)
adc
inc
prefetchwt1
mov
inc
fwait
leave
dec
add
popa
lods
push
std
or
inc
dec
jne
js
jle
mov
bound
or
clc
pushw
pop
adc
adc
dec
test
sbb
sahf
push
loop
jnp
ficom
jne
or
out
pop
mov
xor
adc
jne
test
mov
and
call
and
and
ret
add
xor
sbb
imul
cld
pop
add
sbb
cld
mul
hlt
or
lock
ror
fimul
push
and
push
push
lods
sbb
xor
mov
pop
and
fld
std
dec
ja
fld
cmp
es
ja
fsub
sar
add
push
inc
xor
jmp
xor
push
and
push
jecxz
(bad)
push
push
push
inc
xor
add
push
jecxz
(bad)
ins
test
or
loope
in
jmp
mov
dec
ret
jmp
jb
dec
mov
ja
lock
mov
push
or
test
jno
adc
sub
and
sbb
inc
pop
mov
and
(bad)
and
out
and
jnp
cs
cmp
push
pop
cs
sub
cld
loop
fmulp
push
jo
jg
mov
mov
pop
push
je
out
adc
bound
dec
jne
push
xchg
and
xchg
dec
pop
add
std
pop
aad
mov
fidivr
xchg
pop
rcl
nop
push
push
dec
xlat
xchg
jle
shl
sbb
jmp
push
les
repz
ret
push
push
aad
clc
or
adc
mov
mov
sti
sti
mov
sbb
sub
mov
inc
es
mov
ret
sahf
mov
inc
xor
or
xor
test
mov
xchg
add
adc
shl
or
pop
movs
(bad)
mov
lea
add
jae
mov
mov
push
sbb
add
into
clc
sysret
cmp
je
push
ins
test
mov
loopne
and
cmp
xlat
addr16
movs
adc
mov
mov
sti
ins
(bad)
jo
ror
jp
sar
mov
lea
inc
inc
adc
and
in
push
mov
or
push
sbb
dec
push
mov
mov
sbb
xor
push
sub
or
jmp
or
test
jne
cmp
popa
pop
cdq
push
jl
dec
adc
dec
mov
adc
sti
xor
pop
jmp
mov
pop
and
xchg
(bad)
jmp
pop
pop
cmp
mov
sbb
or
movs
jg
or
iret
mov
pushf
out
test
fadd
add
inc
cs
call
sbb
popa
adc
pusha
pop
and
(bad)
(bad)
xor
imul
ss
adc
dec
lods
sbb
dec
pcmpeqb
sbb
pop
mov
adc
cld
and
cmp
cmp
xor
dec
sbb
mov
adc
sub
js
sub
cmp
dec
xchg
push
push
out
loopne
iret
and
les
mov
push
ret
test
fwait
xchg
adc
hlt
inc
fcomp
sbb
lock
add
mov
dec
das
mov
loopne
push
sbb
lea
mov
call
sub
test
jle
mov
sub
mov
fild
pushf
fwait
hlt
call
(bad)
sub
mov
sub
(bad)
fbld
retf
jle
mov
mov
sub
popa
mov
popa
pop
xor
push
sub
jp
(bad)
add
sbb
or
pop
sub
push
jns
or
push
adc
mov
stos
adc
test
pop
jae
xor
xlat
push
mov
xor
mov
sub
add
xor
or
push
sub
xchg
cmp
mov
ss
push
sbb
loop
call
(bad)
div
sbb
add
cmp
inc
outs
xchg
in
jne
in
cmps
or
test
sbb
jo
mov
cmp
dec
push
mov
cs
sar
and
jecxz
push
jmp
push
sub
sbb
lds
add
leave
jns
mov
push
hlt
or
es
mov
dec
fsubr
or
jg
pop
fcomp
push
pop
retf
jno
fwait
xor
mov
int3
in
or
in
mov
sti
hlt
sbb
or
loop
jno
or
or
jmp
movs
and
test
out
add
pushf
xchg
pop
adc
push
js
push
pop
push
jp
loopne
dec
pop
xchg
push
lods
jecxz
icebp
sbb
jne
mov
sub
cmps
sbb
shl
in
in
stos
jo
and
add
dec
add
or
sub
push
sub
xor
lahf
jle
ja
add
add
dec
cmp
das
xchg
xchg
popf
loop
mov
adc
mov
dec
mov
and
test
push
or
and
xor
jg
xor
ror
(bad)
and
fimul
cld
add
adc
cs
push
adc
(bad)
jno
je
div
xor
push
cmp
adc
adc
inc
xor
add
mul
inc
add
sbb
pop
outs
je
jp
(bad)
loope
fsub
in
adc
push
inc
jne
pop
jno
pop
inc
push
aaa
js
test
cmp
jp
dec
jle
mov
mov
sbb
aas
or
pop
cmp
cmp
mov
pop
cmp
jne
mov
add
pop
sbb
adc
jb
adc
dec
jo
into
or
iret
xchg
adc
adc
ret
retf
mov
cmp
test
jbe
cld
push
and
lock
cmp
jmp
movs
pop
repnz
xor
ins
je
mov
sbb
push
dec
in
test
sbb
adc
mov
mov
mov
or
inc
mov
imul
xchg
jbe
loope
push
ficomp
or
dec
push
adc
fwait
sub
aad
add
jne
push
(bad)
or
mov
jmp
inc
outs
add
xor
xchg
dec
out
loope
sbb
ret
outs
mov
imul
sub
dec
test
mov
jp
imul
cld
cmps
ret
retf
sbb
clc
enter
sub
add
mov
loopne
cmp
inc
(bad)
sar
xchg
push
arpl
add
push
xor
jle
out
dec
mov
(bad)
rcl
xor
into
sbb
hlt
pop
add
sbb
mov
adc
cmp
mov
(bad)
shr
push
ss
push
sub
jns
mov
lock
sub
or
fmul
pop
pop
mov
xchg
jl
inc
mov
jo
mov
inc
cld
mov
add
call
aas
jnp
mov
sbb
xchg
xor
jnp
dec
test
or
inc
pop
in
jne
mov
lahf
adc
(bad)
mov
lahf
dec
jge
add
adc
mov
add
nop
sbb
cmp
cld
cmp
jl
inc
jno
add
add
(bad)
jno
pusha
dec
aaa
xor
xor
out
or
setno
pop
popf
or
cmp
stos
dec
cmp
sar
popa
aad
xchg
mov
in
adc
mov
push
icebp
or
fisub
fist
dec
pop
or
pusha
adc
pop
test
pop
pusha
xchg
inc
pop
adc
or
xor
sub
(bad)
rol
push
push
mov
add
lods
in
outs
loopne
jns
lea
cmps
cmp
cld
shr
push
addr16
jo
xor
movs
jl
pusha
add
js
jbe
mov
movlps
rol
adc
fcomp
je
add
ds
pop
xor
mov
shl
pushf
inc
pop
add
pusha
shl
nop
cli
and
inc
movs
sbb
cmp
push
(bad)
jo
push
jge
mov
inc
(bad)
fcom
xchg
jmp
xchg
repnz
jmp
and
jb
(bad)
aaa
bound
adc
inc
aaa
pusha
and
cdq
sbb
adc
and
push
adc
or
mov
adc
or
xor
jo
daa
cmp
pop
(bad)
mov
jb
outs
dec
pop
or
(bad)
push
jmp
cmp
je
cld
test
jbe
mov
or
push
adc
cld
jae
sbb
dec
cdq
xor
and
adc
int3
std
out
xor
je
dec
loopne
shl
cmp
aaa
test
and
aaa
adc
push
add
mov
es
sbb
xchg
xor
(bad)
sar
adc
sbb
dec
mov
push
inc
sbb
in
lods
sub
leave
int3
xchg
or
cmp
pop
dec
adc
add
mov
daa
add
jge
cmps
cmp
add
aas
cmp
sbb
aas
or
mov
rcl
outs
movs
in
adc
call
dec
ss
add
jno
jg
add
outs
or
inc
push
xchg
aam
sub
mov
shr
lea
rsqrtps
add
ret
sar
adc
inc
inc
shl
jbe
and
push
movaps
(bad)
neg
repnz
in
std
push
mov
or
pop
sbb
xor
push
push
push
ins
add
pushf
lods
je
ja
rol
add
leave
not
add
cmps
xchg
cmp
xchg
adc
shr
jle
or
xchg
inc
jno
inc
lods
fdiv
sbb
or
fidiv
in
fld
test
rcr
xchg
or
fbstp
adc
mov
xchg
push
push
mov
and
fs
mov
das
(bad)
fcom
stos
dec
jnp
rol
sub
dec
xor
idiv
rcl
and
xchg
xor
out
push
push
cmp
jp
push
pop
call
push
dec
(bad)
jmp
(bad)
jp
mov
xchg
sub
or
and
inc
xchg
out
mov
xchg
adc
xchg
add
add
dec
jg
into
sub
xchg
xchg
ficom
xchg
ds
jne
enter
ret
fwait
push
arpl
adc
cwde
push
add
in
cmp
js
inc
js
fadd
jmp
push
xor
xor
pop
xchg
sbb
xchg
pop
cdq
bound
pop
(bad)
in
aas
aas
fmul
mov
or
gs
dec
jg
lds
and
rol
cwde
add
or
mov
pop
dec
mov
jne
pop
sbb
xchg
ret
push
mov
movs
xor
mul
fild
sti
jg
mov
mov
add
ret
sti
add
jae
retf
dec
xchg
adc
mov
cmp
outs
call
aas
in
(bad)
sbb
mov
jno
adc
mov
imul
sahf
push
ins
xor
fucomip
fbstp
jo
mov
pop
jp
call
inc
or
lods
add
mov
sub
pop
jo
nop
mov
pop
adc
push
push
adc
adc
inc
sbb
call
adc
push
push
mov
aad
adc
outs
test
mov
pop
add
dec
fsub
bound
mov
fld
mov
inc
mov
nop
xchg
inc
mov
cmp
mov
mov
adc
mov
inc
pop
test
loop
or
ret
call
cmp
mov
mov
mov
rol
test
mov
lea
sub
cmp
cmp
cmps
test
xor
rol
and
in
aam
dec
push
dec
lock
out
push
push
pop
jmp
iret
dec
bound
dec
xor
dec
adc
call
add
jbe
pop
cmp
jge
or
in
dec
push
sbb
fist
cmp
jl
inc
mov
pop
push
inc
je
cmp
adc
xor
loopne
mov
test
add
xor
ins
fmul
lock
pop
ror
lock
mov
xor
neg
sbb
push
push
cmp
pop
xchg
cdq
push
lahf
dec
prefetcht1
cmps
jno
ins
fild
push
push
sbb
loope
popf
leave
xor
inc
push
push
js
shl
mov
(bad)
cmp
jle
lods
cmp
and
jne
sub
js
stos
cmp
je
adc
push
push
mov
push
jne
adc
push
jne
jae
jecxz
lods
pop
dec
xchg
test
xchg
sub
and
mov
xchg
jg
sbb
xchg
pop
ror
mov
sar
ret
sbb
pop
or
jmp
arpl
lock
jmp
or
sbb
add
mov
push
mov
cmp
loopne
fwait
loop
sbb
mov
inc
or
mov
inc
mov
rcr
xor
out
add
cmps
jo
push
fsubr
fiadd
ins
sbb
jbe
test
pop
cli
std
lea
mov
dec
je
push
cmp
inc
jnp
ret
mov
xchg
test
adc
mov
sti
iret
sub
push
mov
je
or
jno
outs
or
cmp
rol
add
rcl
jbe
mov
call
test
mov
xchg
push
inc
mov
in
scas
sub
cld
dec
mov
mov
in
sbb
scas
loope
sbb
(bad)
push
jle
cmps
inc
je
inc
lea
xchg
inc
sbb
or
out
push
push
mov
push
or
dec
pop
or
jb
pop
jb
cmp
pop
pop
cmp
outs
mov
cmp
push
mov
bound
mov
dec
cld
lock
xchg
pushf
jmp
jle
jmp
sub
pop
sbb
push
inc
jne
movs
xchg
gs
not
and
adc
rcr
sar
js
sbb
add
dec
inc
or
push
outs
(bad)
or
ins
cmp
dec
mov
push
fs
add
imul
mov
cmp
cmps
inc
cmp
lds
mov
cmp
xchg
push
pusha
xor
lods
mov
adc
out
call
add
xchg
rcr
ret
adc
cli
test
ret
jne
xor
sub
mov
sbb
push
dec
push
mov
sbb
test
je
cmp
cwde
jne
xchg
(bad)
xchg
pop
pop
cdq
xor
sbb
mov
push
js
ss
sub
lea
test
mov
pop
cli
adc
gs
and
or
adc
jecxz
fs
push
imul
mov
inc
mov
sub
fild
ds
js
and
mov
inc
adc
add
mov
inc
or
push
or
iret
inc
xor
outs
push
inc
ret
dec
(bad)
xlat
fnstsw
xchg
pop
sbb
mov
cmp
add
test
sbb
in
aaa
mov
retf
call
clc
mov
mov
sar
jns
adc
xor
push
(bad)
(bad)
fcom
mov
pusha
add
lds
xlat
into
popa
xchg
add
xor
jle
pushf
and
add
jmp
add
xor
add
or
mov
inc
popa
cdq
xchg
mov
dec
jbe
mov
pop
mov
add
fcomp
nop
dec
fld
test
or
xchg
fmul
icebp
xor
mov
lea
pop
bound
or
fisttp
xchg
inc
xor
xchg
push
inc
or
add
xor
jge
es
push
iret
mov
outs
add
add
fs
or
imul
dec
xchg
xchg
mov
fist
leave
or
shr
clc
imul
icebp
lea
add
aad
sub
fstp
xchg
js
pop
gs
sbb
lock
adc
scas
mov
xor
push
test
je
fwait
push
xchg
pop
cmp
ror
and
fs
jne
sub
adc
push
retf
in
jmp
stos
sti
mov
mov
xor
mov
das
push
sti
adc
sbb
gs
cmp
pushf
and
nop
rcl
jo
mov
dec
cmp
pushf
or
sub
cwde
push
ja
inc
pusha
es
shl
add
cmc
in
(bad)
jmp
pusha
xlat
dec
loopne
mov
xor
leave
pop
sub
jg
cdq
loope
sub
repnz
(bad)
push
and
sbb
mov
mov
inc
lods
pop
(bad)
xor
or
jno
push
mov
add
jge
sub
adc
mov
inc
pop
aam
mov
mov
push
xor
inc
or
aad
mov
dec
dec
or
loop
add
mov
mov
add
dec
or
sub
sub
fidiv
inc
sub
and
sub
js
sub
dec
pop
js
inc
adc
add
push
test
and
mov
or
cli
mov
rol
mov
jmp
push
xchg
dec
repnz
cmp
pushf
mov
shr
je
pop
pmulhw
gs
ins
hlt
pop
and
rol
sbb
xor
xchg
retf
mov
mov
mov
jbe
leave
iret
les
inc
xor
pop
add
xchg
(bad)
mov
push
push
add
or
add
sbb
test
nop
sub
jge
sub
mov
stos
mov
pusha
or
mov
add
add
adc
movs
dec
aam
cwde
add
jbe
push
push
out
inc
add
cwde
mov
movs
fnstsw
cmp
mov
or
cmp
xor
add
out
cmp
pop
iret
sub
adc
xor
pop
jne
adc
add
add
and
cmp
pop
pop
sbb
mov
nop
xchg
or
or
xchg
dec
retf
loope
push
cmp
addr16
adc
mov
dec
push
cmp
pop
inc
or
scas
fcmovu
pop
push
ret
or
push
(bad)
mov
movs
jg
mov
cmp
mov
mov
fist
add
mov
cmp
jne
mov
add
cld
inc
lock
jle
retf
mov
sub
push
sbb
or
sub
ret
mov
test
test
mov
mov
jmp
test
clc
add
or
jne
xor
sbb
cmp
adc
push
mov
jbe
jmp
hlt
push
sbb
add
xor
popf
add
mov
adc
fwait
mov
xchg
pop
add
pop
mov
aad
int
daa
and
idiv
add
fst
pop
pop
and
pusha
xchg
mov
ds
xchg
adc
repz
dec
inc
xchg
daa
test
pop
outs
fadd
adc
add
mov
in
ins
xchg
pop
push
ret
leave
mov
out
pop
cmp
test
mov
mov
jb
je
mov
inc
mov
inc
je
sti
test
mov
xchg
aaa
mov
sahf
jo
(bad)
lock
je
mov
pop
daa
mov
cwde
sbb
push
jbe
rol
rcr
clc
mov
jg
mov
das
inc
movs
sbb
inc
pusha
and
or
sbb
jne
push
add
pushf
adc
xor
mov
add
loopne
loopne
movs
or
xor
pop
add
jmp
mov
stc
into
dec
pop
pop
xchg
add
or
add
dec
loop
rol
adc
out
inc
xchg
cmp
mov
and
pop
add
lock
jo
in
mov
js
mov
pop
dec
xor
inc
xor
jg
out
cmp
mov
jns
(bad)
cwde
test
in
xor
je
sar
loope
mov
push
adc
test
mov
jle
xchg
test
cmp
push
stos
int
push
call
into
or
aaa
aam
lds
xor
xchg
cmps
cmp
add
aam
or
nop
pop
push
push
pop
pop
inc
mov
sbb
mov
cli
sar
mov
sbb
xchg
arpl
daa
pop
mov
mov
dec
sahf
nop
add
loope
add
mov
mov
lods
mov
jb
and
(bad)
es
adc
add
add
mov
dec
jno
sti
sub
pop
adc
pop
ror
cmp
push
xor
fmul
shr
inc
add
mov
jno
sbb
iret
push
mov
push
jo
and
add
out
mov
mov
jo
or
lahf
aaa
rol
jno
mov
adc
iret
neg
or
sbb
push
push
pop
out
fs
cmp
or
cwde
das
mov
xor
ss
in
ds
xor
cli
or
cmp
push
push
fwait
or
mov
xor
or
push
js
nop
imul
scas
add
loop
inc
push
mov
jl
dec
jmp
mov
fsubr
jge
(bad)
mov
and
dec
mov
and
fwait
pop
or
push
seto
push
sar
addr16
maskmovq
idiv
push
jl
inc
mov
mov
test
sbb
and
js
or
es
push
je
lock
or
or
and
xchg
out
adc
scas
push
jb
jb
mov
cmp
xor
movq
pop
dec
cmp
and
aas
sub
lods
or
pop
jo
pop
adc
loop
mov
cmp
fld
sub
or
ins
fsubr
lock
jmp
push
cmc
or
call
xchg
push
mov
jmp
xor
cmp
jg
repnz
cmp
je
mov
in
or
jno
outs
mov
call
push
addr16
xor
icebp
sbb
sti
add
add
or
les
adc
je
addr16
sbb
push
or
out
xor
shr
inc
mov
push
enter
ret
cmp
test
mov
or
inc
dec
out
pushf
fsubr
bound
and
imul
sbb
pop
shl
pop
popa
scas
lock
dec
sub
lock
dec
cs
sub
(bad)
sbb
jnp
out
sbb
call
jnp
and
or
inc
faddp
push
mov
mov
shl
movs
inc
mov
jo
xor
jle
dec
jo
jle
cmp
or
cmp
inc
pusha
inc
sub
inc
fcomp
pusha
mov
in
lea
out
adc
sbb
fmul
jg
fdiv
xor
psubsb
dec
jmp
dec
xor
sbb
cmps
clc
imul
ins
jb
or
adc
xor
sbb
rol
inc
and
sub
and
or
rol
retf
sbb
push
cmp
pop
aas
push
les
mov
dec
sbb
or
imul
loope
mov
(bad)
out
js
arpl
dec
push
imul
lahf
push
push
outs
dec
inc
std
add
pop
daa
movzx
imul
mov
adc
or
push
or
push
std
or
cmp
call
ror
std
jo
or
add
fidiv
lods
les
ror
in
sbb
lock
imul
or
xor
cmp
jne
mov
cmp
mov
mov
jne
pop
test
dec
add
inc
jne
inc
faddp
inc
mov
inc
shr
xor
or
les
xchg
dec
pushf
jo
test
push
mov
sub
sbb
cmps
dec
cmp
mov
adc
test
inc
sbb
xor
aaa
mov
push
inc
test
jne
xchg
out
xchg
xor
add
xchg
stos
ins
mov
xor
clc
xchg
cld
add
fsub
je
add
jb
inc
xor
not
xchg
sub
push
call
adc
fdivr
jbe
dec
fstp
fxtract
xor
xor
xchg
stc
adc
stos
dec
(bad)
mov
jp
mov
cmps
inc
idiv
jno
das
mov
popa
add
xchg
das
lods
add
(bad)
jb
cdq
fs
mov
stos
in
sub
cmp
add
popf
cld
outs
loopne
and
stos
popa
pop
js
mov
jle
xor
jmp
cmp
mov
mov
mov
popf
mov
cmp
out
or
add
sub
sbb
or
fadd
clc
les
stos
popf
xor
nop
xchg
cs
sbb
iret
shl
or
fiadd
sub
mov
(bad)
mov
mov
into
popa
test
add
adc
inc
(bad)
js
cmp
neg
or
cmp
mov
mov
int3
pop
mov
pop
in
mov
arpl
lock
add
scas
sbb
popa
(bad)
call
mov
jmp
inc
cmps
fidivr
jbe
imul
or
or
mov
push
adc
adc
adc
or
(bad)
or
push
cwde
loopne
loopne
stos
dec
adc
push
outs
(bad)
out
xchg
outs
xlat
sbb
sbb
xchg
sbb
pop
fiadd
sar
add
cmp
dec
jge
mov
adc
pop
(bad)
(bad)
call
jl
adc
sbb
sub
jmp
es
mov
ins
fwait
lea
fld
mov
(bad)
and
arpl
fst
das
xor
mov
add
mov
lea
icebp
sub
add
jmp
lea
js
ja
loope
jo
adc
sbb
fdivr
push
inc
pop
push
outs
push
mov
adc
ficomp
call
(bad)
call
mov
pop
sub
or
and
push
jle
pop
add
adc
and
xchg
in
in
lea
mov
cmp
call
pop
jg
add
call
or
add
aad
loopne
mov
pop
out
push
(bad)
std
scas
lea
push
icebp
mov
loop
rol
neg
push
bnd
xor
call
idiv
jge
jne
add
dec
pushf
fs
jg
inc
repnz
sub
mov
cmp
je
call
fincstp
fdivr
lea
stos
in
jb
retf
mov
adc
in
sbb
js
(bad)
adc
loope
inc
repz
lahf
(bad)
sbb
mov
(bad)
or
dec
or
pop
jmp
test
mov
dec
mov
fidiv
inc
xchg
addr16
bound
xchg
pusha
jp
psllw
mov
mov
int3
prefetch
ss
and
out
and
(bad)
fcomp
jmp
sbb
and
adc
pusha
push
fst
inc
mov
mov
push
fdivr
mov
xor
add
or
inc
sub
adc
push
inc
in
sub
(bad)
sub
cmp
(bad)
mov
dec
mov
loopne
sbb
sub
cmp
(bad)
aaa
in
int3
or
adc
pusha
sub
jg
xor
inc
or
and
add
jns
sub
jbe
repnz
or
jge
scas
nop
pushf
or
xchg
push
inc
push
jmp
or
adc
xor
ds
test
dec
mov
or
mov
xor
jb
je
jmp
jbe
add
dec
and
cmp
sub
dec
or
mov
mov
ret
inc
in
imul
lock
or
xor
xchg
mov
in
fs
xor
retf
cmp
xchg
addr16
jmp
or
or
aaa
xor
jnp
sub
push
or
cmps
outs
xor
push
adc
add
test
(bad)
imul
or
sub
push
pop
inc
push
push
mov
pop
sbb
scas
loop
into
cmp
(bad)
lods
jp
aas
pop
(bad)
jo
inc
xchg
xchg
xchg
dec
ds
pop
pusha
jp
(bad)
fcomp
add
cdq
mov
or
xchg
sti
jmp
inc
adc
inc
or
fsubr
mov
sbb
push
test
cmps
es
fcmove
adc
popa
repnz
inc
call
push
mov
or
or
shr
ficom
pop
sbb
adc
adc
mov
fiadd
cmp
cld
mov
rol
movs
jp
push
lea
add
stos
scas
or
add
sbb
push
sbb
xchg
xchg
sub
std
in
cmp
pop
cmp
sbb
idiv
shr
movsx
imul
xchg
fisub
dec
inc
repnz
and
xor
cli
sub
pop
std
fcomi
push
sti
add
repnz
clc
mov
pop
jmp
lahf
xor
inc
call
jl
xchg
ins
ds
retf
mov
sbb
xchg
sbb
sbb
dec
add
push
add
mov
daa
and
mov
nop
jge
daa
xchg
dec
mov
and
pusha
dec
mov
cmp
fs
imul
jno
or
mov
push
es
push
test
jo
sub
test
loope
xor
sbb
jg
jge
mov
(bad)
loop
sbb
sbb
cmp
mov
jmp
add
and
or
pop
add
xlat
dec
fadd
push
dec
add
outs
shr
mov
xor
add
or
nop
iret
ja
shl
xor
push
push
(bad)
xor
mov
sbb
mov
pop
push
sbb
retf
lock
shr
es
shr
pop
sub
add
or
add
lock
je
pop
mov
add
adc
push
(bad)
fild
push
ins
cmps
test
je
add
sub
mov
mov
mov
sub
jae
icebp
repnz
dec
test
mov
adc
arpl
push
mov
or
or
add
cdq
inc
xor
inc
jnp
or
and
stos
and
cmp
lahf
retf
cs
adc
ins
cdq
int3
enter
loop
cmps
sbb
in
dec
data16
adc
das
adc
or
xor
push
fiadd
mov
icebp
stos
or
add
xchg
xor
call
add
dec
push
cmps
or
or
loopne
outs
cwde
push
(bad)
pop
mov
mov
dec
xchg
rol
mov
outs
pop
jo
adc
jb
jmp
leave
leave
int
cs
xor
dec
dec
outs
xchg
add
fidiv
inc
sub
push
fdivr
jmp
cmp
dec
out
pop
jmp
or
mov
or
jecxz
adc
inc
jnp
or
adc
dec
ja
mov
jmp
xor
div
add
pop
xor
sbb
cmps
nop
pushf
cmp
enter
rcr
movs
add
fdiv
adc
pop
jmp
aam
mov
cli
sub
daa
mov
push
sbb
ror
and
xchg
jo
inc
push
pop
int
retf
adc
es
pop
mov
mov
lahf
add
mov
pushf
push
add
nop
add
ins
and
mov
or
jmp
inc
pushf
(bad)
sbb
std
inc
call
xchg
and
out
dec
mov
in
mov
or
sub
pop
push
or
and
ret
mov
xchg
(bad)
call
mov
into
adc
dec
add
adc
mov
and
adc
sbb
push
jmp
push
sub
test
add
hlt
jb
cmp
cs
add
inc
dec
mov
jmp
jae
jb
inc
dec
jns
sub
daa
add
add
cmp
dec
cs
mov
adc
sub
call
add
les
add
clc
pop
push
push
jmp
push
jne
xchg
cs
pop
outs
or
add
inc
mov
mov
neg
scas
loopne
or
adc
inc
mov
pop
sar
inc
mov
add
ja
sbb
inc
jmp
mov
cmp
sahf
or
ins
adc
inc
jge
pusha
push
(bad)
push
clc
ins
mov
jmp
pusha
les
sub
pop
pop
xor
pop
out
sub
jo
lahf
cmp
inc
jbe
jl
jl
ror
mov
adc
mov
sbb
jmp
mov
add
mov
(bad)
mov
sub
adc
fs
jmp
cmp
adc
(bad)
into
jb
sbb
sbb
(bad)
inc
sbb
pop
lea
pusha
xor
or
xchg
in
and
push
pop
movzx
inc
ds
clc
aas
pop
add
clc
add
push
push
or
dec
adc
sbb
cmp
mov
cmp
xor
cmp
add
xchg
loopne
or
mov
dec
push
add
jmp
push
test
add
fidivr
cmc
mov
xlat
cs
les
rol
xor
popa
add
adc
jne
and
popf
push
inc
sub
inc
mov
test
sbb
mov
or
call
or
pop
cmp
jo
add
add
retf
push
add
inc
mov
and
aaa
mov
dec
jo
xchg
rcl
clc
das
adc
xor
dec
sub
jb
call
enter
and
adc
(bad)
sbb
mov
movs
and
jne
xchg
lods
push
cmp
pushf
jne
mov
mov
push
dec
shl
add
cmp
aad
or
ror
scas
mov
cdq
inc
push
pop
fiadd
mov
pop
dec
in
test
adc
mov
in
sub
clc
pop
dec
cdq
inc
push
in
out
jmp
pop
jne
pusha
cs
in
xor
pop
cdq
inc
pop
popa
jnp
add
push
es
out
pusha
xor
retf
test
dec
cmp
xchg
lods
outs
ror
rcl
lods
xchg
or
push
in
stos
pop
mov
or
iret
call
push
call
pop
scas
lock
mov
mov
(bad)
daa
adc
pop
cmp
fimul
(bad)
test
lds
(bad)
add
mov
mov
enter
dec
outs
imul
mov
pop
jb
pop
add
and
shr
outs
add
cmp
pop
cwde
cld
add
call
adc
or
fcomip
push
dec
rol
inc
add
outs
jle
jb
out
imul
fisubr
push
inc
add
jo
imul
ja
inc
dec
add
pushw
add
and
fstp
xchg
push
inc
imul
ins
or
or
dec
jbe
sbb
je
dec
out
adc
sub
fmul
jmp
aad
ja
push
call
mov
push
cmp
inc
test
add
add
ror
(bad)
sub
adc
inc
call
shl
jne
cmp
cmp
add
cmp
lods
sbb
sbb
xor
sub
adc
jno
jmp
clc
cmp
or
fsub
cmp
pop
je
cmp
aam
inc
pop
mov
ror
data16
xor
xchg
pop
adc
dec
test
mov
pop
xor
pop
add
jg
adc
pop
cwde
cmp
add
mov
jle
jl
jecxz
or
xor
pop
pop
adc
je
push
(bad)
mov
nop
cwde
aam
movsx
ficomp
or
arpl
xchg
daa
aas
addr16
or
adc
sbb
inc
dec
inc
pusha
add
mov
add
dec
fs
add
jbe
addr16
(bad)
fidivr
mov
add
push
or
fdiv
je
xlat
ror
mov
rcl
inc
(bad)
adc
movs
xlat
loop
js
push
clc
sbb
fadd
xor
mov
in
xor
or
rcr
pop
dec
gs
mov
cmp
xchg
push
icebp
je
sbb
sub
adc
mov
je
dec
stos
jecxz
adc
imul
cbw
and
add
imul
and
daa
adc
xor
xor
lea
cmp
dec
cmps
not
add
xchg
push
scas
(bad)
push
inc
xchg
leave
push
fidivr
scas
push
outs
punpcklbw
mov
sbb
js
call
mov
xchg
xchg
inc
lds
adc
ret
push
mov
pop
js
push
shl
daa
stos
push
xor
fsub
or
rcl
aas
loop
aas
movs
pusha
movs
add
and
shl
or
sub
dec
sti
add
mov
mov
shr
js
data16
inc
and
lea
call
add
mov
pop
jge
test
push
imul
retf
and
jmp
sbb
rcr
mov
(bad)
push
jne
mov
cmp
inc
imul
neg
xlat
ror
sbb
mov
mov
push
scas
xor
jo
sahf
add
mov
(bad)
(bad)
call
in
push
xchg
and
jb
sbb
dec
sub
cwde
inc
and
dec
(bad)
cmps
gs
push
and
adc
fcom
push
sbb
loopne
push
or
shl
cmp
sub
mov
outs
xchg
ins
jmp
es
jbe
es
adc
lods
xor
or
pop
and
dec
adc
cmps
mov
mov
je
call
xchg
cdq
pop
push
gs
sbb
inc
sbb
jne
cmp
add
mov
and
cmp
add
pop
or
push
jl
jo
sar
jo
movs
adc
daa
xchg
sub
test
test
pop
jno
jle
cld
cmp
je
adc
mov
push
ins
outs
cmp
das
pop
pop
pushf
or
setns
das
pop
cmc
mov
ror
sub
sub
fldcw
mov
push
cmp
out
mov
rol
and
add
loope
test
add
clc
(bad)
jno
xchg
xchg
sub
inc
jb
sbb
xor
outs
hlt
jge
xchg
and
mov
mov
add
adc
jecxz
push
call
jmp
mov
into
lea
cld
push
sar
adc
mov
sub
push
push
test
push
adc
ins
dec
mov
js
add
leave
(bad)
outs
loop
push
dec
add
cmp
xor
je
xor
mov
inc
and
xchg
dec
sbb
pop
ret
push
icebp
ret
int3
adc
retf
push
mov
fstp
mov
in
mov
inc
push
mov
outs
inc
mov
ins
cmp
(bad)
inc
adc
cmp
movs
call
mov
pop
test
fiadd
into
imul
sar
inc
xchg
fsubr
or
or
imul
xor
pop
push
dec
xor
nop
push
dec
lock
(bad)
jl
cmps
add
or
cmp
inc
xchg
and
or
mov
xchg
ret
xchg
add
mov
adc
pop
and
leave
mov
adc
inc
daa
pusha
inc
sub
cmp
pop
and
mov
sub
shl
js
xchg
mov
mov
push
pusha
lods
movs
inc
mov
rol
pusha
mov
(bad)
lock
lock
sar
xchg
je
ds
sbb
call
cmp
je
sbb
mov
cmp
imul
sub
mov
sub
mov
fisttp
sub
mov
lock
push
mov
das
inc
cmc
fst
jns
repnz
push
aaa
cmps
loopne
leave
scas
inc
pop
iret
inc
out
add
jns
ja
lock
lea
cmp
mov
jg
loope
dec
push
(bad)
cwde
jmp
movs
dec
xor
dec
inc
add
sub
push
lea
xchg
rol
ds
xchg
xor
cmps
fucomi
cmp
iret
mov
sub
push
add
and
inc
push
add
sub
jge
popf
xchg
rcl
or
or
fadd
lods
in
mov
cld
(bad)
push
dec
mov
bound
call
scas
add
xor
push
jmp
sbb
sub
lods
sub
and
add
rol
clc
aas
or
call
add
cmps
xchg
pop
ror
xchg
ret
jle
fsub
pop
or
pop
iret
dec
and
mov
test
das
or
push
rcl
dec
cli
add
ret
inc
rcl
mov
jb
aas
les
(bad)
ins
daa
(bad)
xor
xchg
les
sbb
and
xor
gs
inc
add
retf
sub
loopne
xchg
aas
ins
cmp
lods
fsubr
mov
pop
jno
sbb
mov
mov
jne
lea
or
jle
in
out
imul
imul
ins
push
push
inc
push
mov
add
xchg
ja
mov
dec
pushf
mov
je
and
lea
xchg
lea
pop
cmp
jne
mov
out
in
inc
mov
adc
jae
sbb
inc
xor
inc
pusha
and
dec
rol
pop
cwde
mov
cdq
cwde
adc
aas
sub
xchg
mov
cmp
sub
push
sbb
pop
dec
or
or
add
mov
mov
cli
out
(bad)
push
imul
mov
dec
xchg
xor
mov
and
scas
inc
je
cdq
shl
sub
ror
cmp
fistp
sub
ins
mov
imul
push
ins
pusha
sub
jmp
jae
or
mov
mov
or
or
or
loopne
inc
es
not
ss
retf
jle
mov
mov
(bad)
fcomip
cld
fld
fcomp
fstsw
sahf
jae
mov
inc
es
jne
mov
shl
add
xor
js
add
lock
aaa
push
jg
mov
jmp
add
add
jns
fistp
push
add
ins
cmp
push
add
gs
sub
mov
sub
fisttp
fstp
mov
cmp
int
sbb
ins
and
xor
jecxz
fdivr
xor
fwait
jbe
in
dec
inc
sbb
ret
and
call
or
je
add
pop
fnstcw
jmp
bnd
in
aam
int3
push
jo
adc
cmp
sbb
test
pop
and
cmp
sub
xchg
cmp
out
mov
mov
fwait
test
inc
pop
fadd
push
dec
push
jo
or
add
mov
jl
(bad)
push
mov
xchg
and
clc
add
and
jmp
mov
loopne
dec
add
mov
xor
cmp
xchg
and
add
jp
and
daa
mov
sbb
ins
sbb
in
push
sbb
je
pusha
jnp
inc
and
aaa
push
jne
lea
das
xchg
pop
mov
dec
push
fs
adc
jne
fcomp
mov
mov
push
pop
je
or
adc
adc
adc
mov
push
mov
clc
adc
les
cmp
hlt
and
jmp
pushf
sbb
outs
fs
(bad)
nop
in
shr
retf
out
icebp
(bad)
popa
movs
sub
dec
out
push
push
mov
je
xchg
pop
mov
dec
and
or
adc
pushf
out
xor
add
outs
jae
ds
xor
std
push
jo
inc
cmp
push
inc
mov
dec
jnp
cmp
push
lock
mov
mov
and
dec
popa
ret
fmulp
push
add
sbb
arpl
sub
jg
fstp
jne
push
xor
adc
cmp
adc
or
mov
jae
in
adc
mov
pop
jnp
or
icebp
in
or
xlat
dec
pop
and
jne
push
jo
pushf
mov
push
jne
ja
xlat
mov
xor
inc
hlt
adc
push
shl
pop
pop
hlt
in
mov
iret
ss
in
pop
inc
mov
es
adc
adc
push
inc
mov
add
push
add
sbb
adc
or
push
push
sbb
sub
add
jne
repnz
mov
xchg
sbb
out
fiadd
retf
popf
xchg
mov
xchg
add
outs
add
pop
movs
fcom
xchg
xchg
sub
sub
jl
dec
add
pushf
pop
retf
sub
cmp
and
imul
addr16
js
mov
gs
pop
mov
mov
push
mov
fsubr
or
and
sbb
push
or
jmp
call
out
test
sbb
into
cmps
enter
pop
sub
or
mov
pushaw
(bad)
(bad)
out
fild
or
gs
jne
mov
cwde
mov
shl
pop
not
adc
push
pop
rol
adc
mov
das
xchg
aam
pop
xor
mov
adc
inc
cs
push
or
out
cmp
adc
fmul
dec
das
fldcw
daa
add
add
das
mov
inc
pop
arpl
jge
dec
or
and
(bad)
cmp
inc
or
scas
mov
sbb
mov
test
cmp
pusha
add
fs
push
movs
mov
jl
mov
adc
mov
lock
mov
inc
adc
(bad)
imul
or
inc
pop
mov
adc
lods
mov
lea
sbb
and
add
sbb
push
mov
fsub
fisub
xchg
sub
mov
add
xor
es
mov
les
push
add
pop
and
mov
sbb
inc
sbb
pop
lods
dec
or
ja
outs
in
mov
rol
mov
add
mov
cmp
movaps
fs
arpl
push
mov
add
sbb
fmul
sbb
mov
fild
and
inc
xor
mov
add
cmps
iret
ret
call
jp
ret
mov
mov
test
pop
clc
aaa
clc
fnstsw
nop
or
test
mov
aaa
fnsave
test
or
imul
test
inc
cmp
adc
inc
mov
int3
push
fmul
mov
sub
std
(bad)
retf
into
hlt
das
xchg
fisubr
add
ds
mov
cmc
jecxz
lds
xor
dec
sbb
sub
popw
adc
adc
sbb
jp
mov
shl
ror
pop
ror
xchg
xor
in
rol
push
iret
adc
fst
push
add
in
idiv
jg
xchg
rcl
int
xchg
add
sbb
mov
inc
cmp
and
jecxz
enter
pop
adc
imul
hlt
xchg
or
mov
repnz
test
loopne
adc
int3
(bad)
ror
mov
mov
(bad)
xchg
mov
xor
mov
dec
sbb
cwde
inc
add
out
push
outs
fidivr
push
dec
test
jl
inc
xor
dec
(bad)
xor
imul
or
(bad)
pop
jge
enter
add
jmp
dec
outs
sbb
pusha
pusha
iret
add
(bad)
cli
push
rcl
push
inc
out
(bad)
adc
movs
sub
neg
cmp
dec
push
psadbw
sub
fdiv
(bad)
jle
dec
(bad)
das
xchg
lahf
fbstp
xchg
neg
sahf
dec
pop
int
cmp
adc
mov
cdq
hlt
xor
lods
dec
lock
movd
add
or
dec
lods
pop
adc
dec
ins
adc
ds
inc
adc
or
fsubr
jne
lea
test
add
test
xor
push
icebp
jg
sbb
add
inc
jae
enter
or
jno
dec
mov
mov
mov
xchg
jns
pusha
outs
clc
mov
pcmpgtd
and
jecxz
(bad)
add
xor
mov
loope
push
ja
xchg
mov
ret
inc
sub
jmp
pop
dec
and
and
adc
jno
loopne
in
add
cwde
inc
lock
jns
mov
rcr
or
add
movs
sbb
xchg
mov
sub
jmp
arpl
mov
mov
inc
(bad)
cmp
in
hlt
mov
jne
inc
jecxz
add
out
xchg
jp
adc
xchg
pop
inc
push
xchg
jb
adc
push
cmc
cwde
push
jne
shl
lock
in
push
push
dec
sbb
(bad)
push
dec
ss
pop
xchg
pop
stc
jb
inc
or
pop
call
add
add
sub
jb
sub
mov
inc
cmp
pop
or
inc
add
stos
xor
ss
in
or
sbb
test
mov
clc
push
ja
jmp
loop
idiv
push
jmp
ror
push
push
out
mul
add
jmp
or
push
pop
inc
inc
xchg
fsubr
loopne
inc
enter
(bad)
or
push
call
ret
mov
xor
sbb
xchg
and
rol
cmp
mov
arpl
push
cdq
add
mov
mov
cmp
sahf
out
aad
or
mov
pusha
add
sub
jge
add
jmp
jnp
and
popw
jmp
xor
outs
add
xor
leave
ja
add
sbb
cs
mov
add
push
push
adc
cmp
push
imul
outs
ins
cmp
add
xchg
pushf
adc
or
arpl
lods
daa
lods
(bad)
stos
out
push
sahf
or
push
call
mov
jo
mov
pop
je
dec
test
and
mov
or
add
xor
or
cmps
adc
es
sbb
mov
add
push
mov
das
adc
jb
ds
cmp
loopne
test
dec
sbb
mov
push
xor
popa
push
mov
adc
jo
and
ja
jnp
pop
xor
pushf
shr
inc
push
mov
movs
add
xor
pusha
sub
out
pop
push
lock
setge
xor
add
bound
in
add
out
pop
out
es
add
adc
dec
add
adc
jne
sub
inc
out
pop
(bad)
ds
mov
lea
or
cli
add
add
rol
xor
popf
cmps
sbb
into
mov
sub
cmp
inc
sahf
dec
adc
inc
movs
cs
xor
(bad)
jl
arpl
sub
popa
add
sbb
pop
ins
sub
fnsave
adc
clc
adc
in
adc
test
mov
mov
(bad)
lock
pushf
pop
mov
inc
cld
(bad)
fucomip
jle
pop
ins
jne
jg
push
mov
mov
pusha
mov
or
gs
ret
neg
adc
pop
lock
add
cmp
jmp
and
rol
sbb
or
ja
cmp
retf
imul
in
pop
jl
cmp
cmp
call
xor
add
push
xor
inc
mov
xor
push
inc
retf
or
in
mov
int
iret
adc
or
adc
call
leave
or
add
push
adc
inc
add
(bad)
cld
mov
pop
gs
loope
jle
cmp
jl
sbb
inc
adc
rcr
and
sbb
mov
jae
or
jne
loopne
adc
outs
lods
(bad)
mov
(bad)
xchg
movs
fucomi
add
mov
es
pop
or
mov
cmp
add
mov
pusha
ret
and
sbb
in
push
test
add
xor
inc
sub
and
in
push
repnz
call
dec
push
adc
sbb
cmp
or
lea
loopne
cmp
cwde
test
aas
mov
fst
ret
and
outs
cmp
push
mov
sbb
mov
stos
push
loop
lea
enter
nop
adc
push
pushf
icebp
sbb
mov
cmp
je
mov
push
push
adc
scas
push
add
sbb
cmp
sbb
push
ret
or
sub
jl
adc
and
stos
adc
or
ins
mov
cmp
xor
test
add
xchg
add
call
mov
(bad)
test
jo
repz
jmp
leave
jle
fld
in
add
or
mov
jnp
mov
lea
fnstsw
cli
scas
outs
dec
sbb
cmps
jl
loop
inc
adc
dec
jmp
or
add
push
shr
cmps
cmp
jp
xor
add
lahf
mov
xor
test
inc
sbb
push
cmc
cmp
inc
dec
sub
adc
les
jb
cmp
jne
inc
mov
mov
mov
xor
sub
clc
je
push
pop
imul
mov
fild
js
pop
jmp
push
xor
(bad)
lea
mov
mov
out
mov
xchg
sbb
das
xchg
mov
shr
mov
js
push
pop
fild
xlat
sbb
push
dec
mov
sbb
jo
ja
arpl
inc
sbb
jo
pop
push
and
xchg
jb
stos
push
adc
sbb
cmp
dec
or
js
out
hlt
sahf
push
mov
repz
push
mov
and
mov
add
and
enter
xor
data16
movups
or
jecxz
push
or
jp
cmps
push
add
pop
daa
ftst
pop
inc
popa
popf
arpl
cmc
jle
xlat
ins
pop
mov
inc
sbb
pop
adc
xchg
loope
into
mov
adc
and
mov
(bad)
js
mov
out
mov
(bad)
and
and
and
sahf
push
or
adc
adc
push
and
pop
sbb
es
xor
fs
adc
mov
cmp
outs
and
lea
out
mov
push
pop
jmp
ffreep
cdq
loopne
movs
push
mov
jne
and
xchg
fadd
sub
fimul
push
push
dec
lock
xchg
xchg
push
xchg
push
mov
pop
loope
rcr
pushf
adc
int3
fsub
and
inc
pop
xor
(bad)
jo
ret
add
sub
rcl
dec
scas
sub
xchg
pusha
mov
add
sub
shl
pop
or
adc
das
adc
push
arpl
iret
stos
xor
adc
sub
nop
push
imul
xchg
add
retf
shr
jb
pop
push
mov
push
mov
mov
mov
std
cmp
iret
lock
mov
cmp
sti
clc
dec
test
jl
inc
jge
sub
ins
dec
inc
fiadd
mov
inc
dec
jne
pop
inc
mov
fnstcw
mov
push
sub
in
mov
jnp
add
jmp
mov
or
mov
pop
push
or
xor
jg
sub
dec
jle
icebp
xor
out
mov
sub
or
and
inc
fisub
inc
call
adc
xchg
add
js
rol
call
xadd
ret
push
movs
add
cli
mov
sbb
retf
add
cmp
cli
pusha
outs
push
mov
lea
jne
loop
test
call
dec
rcr
mov
jg
dec
pop
in
xchg
(bad)
jne
test
ror
test
jl
loope
cmp
ror
aam
loopne
push
push
mov
push
fs
add
sub
test
pushf
jbe
mov
mov
sub
adc
shr
dec
pop
iret
sub
dec
lea
inc
jno
pop
nop
or
inc
xchg
or
lea
sbb
and
sub
out
fsubr
mov
enter
arpl
xor
cwde
xchg
ss
shr
fstp
xor
add
mov
enter
lock
mov
lds
cdq
sti
mov
rcr
jmp
pop
call
or
or
inc
pusha
ja
loopne
les
(bad)
and
fwait
lods
push
test
adc
and
cmp
xor
mov
cmp
jmp
jp
idiv
sbb
rcl
ds
unpcklps
cwde
adc
(bad)
test
leave
je
add
pop
mov
into
sbb
or
cmp
call
pusha
and
push
retf
add
push
dec
cmp
add
cmp
aaa
scas
pop
cmps
(bad)
pop
mov
lock
mov
xor
sti
add
or
retf
or
sbb
ror
mov
or
aam
ins
inc
adc
adc
je
jb
mov
pop
mov
lea
push
push
mov
das
in
add
daa
call
xor
jb
movs
pop
push
jmp
inc
xor
mov
(bad)
inc
shl
ja
and
xchg
xchg
or
dec
ret
les
jbe
dec
popf
and
sub
loope
cs
jmp
sub
sub
inc
add
mov
mov
int3
jle
push
cmc
or
add
inc
push
inc
lea
mov
clc
push
pop
jecxz
test
or
add
xchg
and
push
ins
adc
mov
sti
in
jl
or
pop
dec
sbb
gs
inc
(bad)
mov
imul
pop
or
pop
mov
sub
je
ins
sub
and
or
rcr
xchg
pop
std
push
add
xchg
jg
fidivr
sub
mov
pushf
js
jmp
test
or
inc
cdq
add
loopne
rcr
ds
sub
ds
inc
sahf
adc
xor
cld
mov
or
jo
add
or
movs
loopne
pop
jbe
xchg
imul
xor
mov
loopne
loop
les
cmp
cld
div
test
adc
ins
mov
call
push
cmp
jo
push
call
xchg
(bad)
test
test
add
lea
sub
rol
sub
je
or
test
je
pop
mov
adc
adc
fistp
mov
lods
imul
inc
add
neg
cs
add
lods
lock
fwait
lods
pop
sar
test
xchg
loopne
(bad)
hlt
xor
xchg
sahf
add
test
or
outs
pop
enter
int
jge
mov
ss
mov
xor
and
hlt
sahf
ret
outs
pop
out
adc
sub
inc
cmp
inc
div
pop
fwait
mov
adc
adc
pop
in
enter
jge
jg
fsubr
and
adc
adc
inc
bound
loopne
sbb
dec
or
inc
call
test
ins
je
and
rcr
adc
(bad)
push
xor
loopne
push
add
mov
rcl
mov
add
movs
xor
ret
mov
mov
dec
mov
add
sbb
fwait
cmp
cmp
popf
lds
fwait
loop
mov
add
or
imul
lock
push
inc
mov
push
int
sbb
addr16
sbb
adc
dec
xor
jecxz
ret
and
bound
pusha
push
mov
adc
add
push
shl
test
inc
or
lds
cwde
(bad)
mov
mov
push
push
pop
add
or
imul
push
mov
adc
fldenv
sub
aam
sbb
mov
aaa
sbb
add
sub
cmp
les
sub
je
push
mov
ja
xchg
jecxz
in
mov
jg
mov
clc
jo
ins
push
lea
push
call
scas
jne
add
sbb
jno
ror
add
or
jl
test
jae
dec
cmp
push
sbb
and
lods
dec
mov
je
or
clc
call
(bad)
push
add
clc
add
mov
fwait
jp
stos
(bad)
add
jl
mov
adc
call
movs
out
add
add
mov
add
cmp
inc
add
cli
cmps
gs
imul
push
jp
shr
mov
mov
mov
xchg
xor
sti
add
mov
test
pop
adc
xor
and
sbb
push
movs
xchg
mov
rcr
or
xchg
test
pop
pop
xchg
jp
adc
pop
sbb
jmp
pop
sub
sahf
jecxz
cld
or
pmaxub
add
cmp
add
push
jns
pop
std
shl
cwde
dec
out
and
add
mov
mov
or
inc
js
adc
sub
loop
adc
jmp
push
push
adc
inc
xor
pop
mov
dec
push
mov
cli
movs
cmp
xchg
inc
sub
mov
jo
test
cmps
and
mov
rcl
jmp
out
mov
pop
pop
sbb
mul
inc
dec
jne
sub
sbb
adc
(bad)
std
add
pop
or
rol
mov
(bad)
lock
mov
ins
mov
jmp
jmp
inc
inc
inc
push
inc
pusha
lods
in
adc
inc
mov
add
fdivr
ret
push
adc
cmp
sub
je
pop
inc
or
pop
in
cli
push
rcr
mov
mov
call
add
dec
mov
xor
enter
or
mov
cld
movs
je
(bad)
cmp
mov
das
(bad)
cmp
lods
adc
out
ins
push
inc
jecxz
dec
cld
and
xchg
ret
loop
push
cmps
and
das
setns
int3
js
(bad)
push
xlat
js
push
cs
xor
nop
adc
pop
mov
or
setne
and
test
push
std
dec
lea
inc
fucomi
mov
push
dec
mov
sub
or
sbb
pop
pop
jge
outs
ja
outs
xchg
xchg
shl
push
inc
add
or
adc
aam
or
and
pop
jl
push
ss
xor
add
pop
adc
jmp
mov
sahf
or
and
lock
and
adc
adc
adc
fsubr
jl
(bad)
je
enter
cmp
push
out
xor
push
sti
mov
jge
mov
sub
cs
ret
inc
das
xchg
sbb
mov
ret
and
sbb
push
cmp
cmp
jmp
jmp
sti
xor
push
cld
mov
out
js
int3
les
loopne
fbld
pop
cld
jmp
fstp
cmp
jp
add
je
pop
shl
daa
mov
fisub
adc
outs
jae
and
ret
xchg
jno
repz
mov
or
pop
inc
mov
stos
pop
lods
adc
push
push
js
inc
push
repz
addr16
push
out
cmp
jns
jb
adc
add
nop
and
dec
xchg
mov
dec
out
push
call
add
cwde
mov
pop
adc
pop
pop
icebp
dec
mov
pop
inc
not
ins
cmp
mov
jl
mov
adc
add
pop
and
cwde
call
add
ss
fld
xchg
rcr
xchg
xchg
or
push
(bad)
xchg
(bad)
add
sbb
leave
ja
push
pop
call
sbb
or
adc
mov
jecxz
sbb
arpl
mov
xchg
lahf
scas
push
or
iret
loopne
cmp
sub
outs
pop
rol
adc
add
push
push
daa
and
push
cmp
ficom
or
lea
cmp
add
pop
add
jmp
mov
lods
adc
lods
scas
push
push
mov
pop
je
mov
retf
mov
stos
or
es
add
mov
lock
add
shl
or
push
sbb
daa
jmp
sbb
inc
loopne
repz
mov
sbb
mov
xchg
jmp
call
movs
pop
jl
in
add
or
pusha
cmp
sbb
dec
sar
push
sub
jle
add
push
adc
call
inc
lock
cmp
inc
lahf
rol
sub
into
mov
jne
fist
pop
daa
rol
int3
mov
loop
add
jo
xor
outs
xchg
imul
and
inc
sar
jne
cmp
sbb
inc
mov
bound
(bad)
xor
lea
push
or
enter
mov
add
adc
js
cld
push
lea
sahf
xchg
stos
ret
sahf
or
ss
inc
outs
call
push
adc
in
add
fidivr
jo
adc
add
sbb
popf
mov
das
mov
push
and
mov
enter
cmps
mov
(bad)
fdiv
and
fiadd
add
push
mov
aaa
cmp
mov
adc
and
mov
mov
jbe
sub
gs
push
sub
out
js
repz
pop
or
or
pop
test
mov
xor
inc
sbb
jl
outs
imul
mov
movs
jmp
pop
adc
sub
and
cmp
call
jge
add
add
dec
or
jmp
add
sbb
mov
dec
or
push
mov
jmp
sbb
or
lea
add
retf
xor
aam
xor
and
pop
pop
or
mov
cmp
inc
mov
lds
add
adc
aad
loopne
fisttp
in
idiv
jl
pusha
add
cmp
gs
mov
bound
ja
cwde
call
mov
movs
jle
mov
jne
aas
(bad)
push
add
clc
and
pop
sub
push
sbb
clc
pop
adc
jo
imul
test
push
pop
adc
jmp
xchg
imul
xor
or
sub
xchg
sub
cmp
cmp
mov
xor
(bad)
mov
sub
out
imul
arpl
jbe
jmp
(bad)
(bad)
(bad)
push
dec
xor
push
or
sbb
fwait
loopne
leave
adc
mov
ins
nop
jmp
fs
mov
test
push
mov
ret
push
les
ja
jl
push
adc
pop
sbb
jmp
or
xor
dec
sbb
outs
ret
cmp
test
or
or
mov
scas
imul
es
and
add
ja
jnp
add
ds
cmp
pop
dec
movs
imul
mov
pop
and
and
mov
pop
lock
adc
sbb
movs
push
into
aad
or
xlat
inc
bound
rol
mov
dec
les
adc
xor
xchg
ins
lock
xor
shr
mov
(bad)
mov
imul
adc
daa
arpl
popf
xor
outs
pop
pop
jmp
dec
jae
retf
aad
shl
add
add
cdq
inc
xor
or
cmp
mov
js
push
push
mov
or
es
fadd
loopne
lock
ja
outs
fmul
(bad)
lods
or
mov
push
or
inc
push
jo
jae
cs
fsubr
push
adc
cmp
add
xor
sbb
sbb
adc
sar
add
shl
add
sub
adc
pop
pusha
enter
and
lds
add
jle
or
mov
add
imul
sbb
or
inc
fcomp
adc
sbb
dec
xchg
jecxz
cmp
jne
push
imul
and
test
aam
fdivr
push
mov
inc
int3
test
int3
ret
data16
mov
mov
enter
sti
mov
mov
mov
jns
in
fisttp
dec
(bad)
retf
addr16
mov
fsub
(bad)
ja
mov
xchg
pop
enter
pop
mov
shl
rcr
mov
rcr
(bad)
lahf
ret
enter
fisub
or
pop
fsub
das
push
adc
rol
add
jmp
cmp
shr
xchg
imul
sub
and
test
mov
xor
enter
jmp
and
add
push
test
push
mov
cmps
ss
and
inc
adc
adc
les
popf
cmc
add
push
pop
rdpmc
(bad)
pop
inc
and
sti
cmp
cmp
push
push
pop
push
jmp
call
inc
ret
mov
test
pop
rcl
mov
or
pop
inc
adc
pop
mov
mov
sbb
add
xor
dec
shl
add
jp
je
sbb
aam
add
sub
mov
inc
mov
in
mov
cmp
mov
cmp
sbb
dec
jne
mov
xchg
pop
retf
inc
cli
push
in
add
cmp
jae
or
shl
mov
add
or
pusha
das
xor
sar
xchg
dec
in
adc
push
or
fistp
pop
mov
xor
es
in
mov
dec
loop
in
mov
mov
add
je
sbb
imul
fsub
cdq
shr
mov
lock
and
push
adc
xor
push
jbe
sar
or
popa
and
adc
push
shl
push
jmp
popa
movs
sub
out
pusha
jo
mov
push
jne
popfw
aam
test
sbb
xlat
dec
xchg
adc
aaa
xchg
(bad)
daa
sub
and
dec
pop
push
mov
add
data16
adc
push
push
loope
enter
je
or
dec
loopne
adc
je
push
cmc
adc
ret
jmp
out
test
aam
scas
ficom
call
pop
in
movs
sbb
pop
das
jo
mov
fst
push
add
xchg
rol
sub
and
loope
mov
or
inc
fdivr
xor
xchg
sub
sbb
pop
or
pop
mov
pop
aaa
pop
bound
rcl
hlt
sbb
lds
hlt
add
jle
push
lods
test
sub
jge
sub
inc
add
call
out
call
mov
and
repz
rcl
push
adc
sbb
mov
jp
mov
jp
add
mov
fcomp
push
pushf
data16
or
and
clc
mov
add
aas
sub
jmp
mov
dec
fild
in
jae
xchg
or
or
add
sti
cmp
call
adc
cmp
clc
dec
clc
mov
arpl
fcom
mov
or
lea
sbb
jnp
ret
adc
jb
cmps
neg
cmps
xor
cmp
inc
(bad)
push
or
fwait
add
mov
cmp
(bad)
test
adc
scas
xchg
or
neg
pop
jb
sbb
xchg
adc
and
sub
adc
movs
lock
es
inc
xlat
dec
push
add
push
push
dec
fnstsw
dec
iret
das
mov
addr16
mov
add
xchg
add
and
xor
dec
fwait
sub
jp
daa
xchg
adc
xchg
and
sub
xor
mov
into
push
add
or
pushf
add
cmp
ret
call
ds
inc
mov
(bad)
mov
enter
repnz
popa
test
adc
ror
xor
sahf
or
retf
fidivr
xchg
sbb
aam
ret
push
and
xlat
jb
push
lds
and
cmp
cwde
adc
iret
or
add
inc
test
in
inc
ds
adc
dec
or
mov
enter
lods
or
call
div
fld
push
or
lahf
test
ss
les
je
mov
xor
dec
(bad)
ds
or
mov
adc
xor
or
jmp
and
adc
fild
das
pslld
test
sub
js
or
xor
mov
or
test
sbb
and
or
xor
not
and
add
aaa
xor
pop
add
in
or
addr16
pusha
add
fstp
or
or
adc
add
mov
sub
fs
or
gs
jnp
and
xor
sub
adc
cmp
push
push
loope
mov
cmp
mov
cmp
xchg
pop
stos
adc
xor
push
push
or
enter
seta
cmp
xchg
cmp
adc
xor
dec
add
cs
push
loop
push
add
daa
cmp
bound
jmp
add
mov
cld
cmp
sbb
adc
cld
lods
jmp
push
nop
lea
gs
adc
push
jmp
je
push
ds
ja
sbb
fcomp
popa
js
xchg
pop
inc
jne
sahf
jle
mul
sbb
adc
(bad)
adc
sbb
mov
or
push
imul
push
in
aas
mov
pusha
jge
ret
data16
xor
xlat
cmp
sbb
cwde
(bad)
aaa
inc
dec
push
popf
pop
pushf
(bad)
fsub
test
mov
fiadd
cmp
js
mov
scas
jb
sub
add
xchg
or
or
sub
int3
rcr
rcl
push
push
inc
or
pusha
retf
enter
rcl
arpl
addr16
cli
inc
push
inc
sub
hlt
(bad)
jl
inc
jo
outs
mov
mov
adc
scas
add
mov
retf
or
xchg
inc
(bad)
cmp
xchg
jl
mov
mov
sbb
mov
pop
xchg
icebp
mov
sbb
or
mov
inc
outs
es
and
pop
daa
daa
add
aam
fs
push
jae
mov
rol
int
jo
repnz
jo
inc
ds
es
in
pusha
sub
fsubr
dec
dec
clc
jle
add
pop
adc
mov
and
test
test
mov
add
test
sbb
add
mov
in
sbb
jmp
(bad)
sbb
xchg
xchg
mov
pop
nop
std
(bad)
sbb
(bad)
jmp
cmp
inc
or
pusha
sbb
jne
mov
fsubr
xchg
inc
test
test
mov
add
mov
inc
lds
fsubr
pop
jne
cmp
cs
pusha
adc
cmp
shl
push
test
fistp
push
add
sbb
pop
xor
add
xor
sbb
cmp
outs
add
movzx
push
je
(bad)
cli
int3
sub
(bad)
rcr
sub
mov
add
push
mov
and
cdq
add
push
mov
popa
pop
and
push
dec
mov
fcom
sbb
adc
cld
cmp
aas
push
mov
lock
lea
push
stos
sub
mov
push
or
push
sub
xchg
add
loope
dec
add
sbb
leave
js
push
out
shr
inc
inc
rcl
mov
je
jmp
xor
aaa
sahf
icebp
pop
jo
sbb
jbe
jne
pop
in
into
(bad)
cmps
fadd
fcomp
or
mov
add
jns
or
sbb
pusha
cmp
(bad)
arpl
mov
dec
mov
rcl
test
mov
sbb
in
sub
je
inc
adc
cs
aam
pop
push
push
test
jne
push
icebp
xchg
lea
jmp
adc
mov
push
inc
adc
xlat
jnp
push
mov
pop
jl
fadd
push
cmp
popf
shl
je
movsx
fnstcw
jnp
mov
xor
ret
jmp
cmp
inc
dec
mov
jae
addr16
mov
xor
xor
cmp
xor
outs
jae
cmp
les
or
sbb
add
sub
or
and
xchg
mov
pop
mov
xchg
mov
and
stos
test
push
mov
push
push
movs
inc
or
shl
adc
cmp
loopne
outs
call
jle
push
loope
ret
push
mov
jmp
sbb
sbb
push
inc
adc
(bad)
mov
adc
sbb
cdq
fdiv
adc
xor
sub
inc
pop
ficomp
dec
jbe
in
xchg
arpl
sub
pusha
enter
neg
test
or
or
adc
(bad)
fcmovb
int
xor
nop
jb
cmp
jns
jo
aam
adc
dec
mov
add
mov
mov
dec
xchg
test
xor
jl
cmp
xor
outs
add
cs
xlat
mov
les
xchg
push
nop
add
ret
rol
or
mov
pop
fbstp
fisub
sub
loopne
je
cmp
or
in
adc
movs
js
shl
dec
and
cmp
popa
in
cmp
adc
and
xor
loopne
in
je
xchg
rcl
push
push
out
cmp
add
jp
hlt
and
call
and
das
sub
or
rcl
stos
stc
push
dec
mov
cmp
mov
fs
ins
jl
xchg
mov
into
mov
jge
fiadd
je
(bad)
mov
xor
(bad)
adc
or
add
or
retf
pusha
push
or
or
inc
mov
dec
push
mov
fcom
ficom
push
jnp
test
test
in
pop
cmp
lea
shl
mov
mov
add
jge
push
loope
push
cdq
iret
pop
push
out
push
nop
add
or
xchg
into
cmp
adc
push
aaa
popa
jo
cli
cwde
pop
or
mov
mov
xchg
mov
or
lods
test
test
push
test
ret
mov
mov
push
add
xlat
daa
mov
xchg
fimul
xchg
imul
or
mov
jge
movs
movs
mov
addr16
cmp
test
and
push
mov
mov
xor
or
xor
dec
push
inc
cmp
or
jle
mov
dec
sub
push
add
mov
fnsave
dec
adc
cld
xor
jne
les
pop
or
in
jne
cmp
in
mov
daa
adc
push
mov
and
sub
call
ror
add
loope
retf
test
xchg
jne
sti
test
pop
jne
cmp
jp
add
adc
adc
fist
jo
ja
jg
shl
stos
das
js
shl
shl
dec
add
arpl
add
inc
test
jl
add
loopne
aas
fidivr
jo
and
lahf
push
je
mov
test
or
out
imul
fcmovnbe
js
sub
xchg
add
fs
std
adc
sbb
aaa
cmp
mov
ror
pop
dec
push
call
jno
push
and
aaa
adc
call
jo
cmp
sub
or
push
push
aas
ret
sub
call
add
(bad)
shl
out
push
sbb
jo
jo
lea
repnz
cmp
ror
mov
shl
cwde
or
add
sub
mov
inc
push
pusha
push
ss
pop
push
inc
adc
sbb
push
sbb
sub
push
cld
rol
fnstsw
in
dec
and
push
enter
cmp
push
add
daa
push
ins
fadd
dec
or
pop
icebp
push
and
cmp
mov
iret
mov
xor
xor
jp
xor
or
cmp
inc
imul
or
inc
or
cmp
dec
pop
jo
loopne
pop
inc
jbe
outs
daa
scas
fucomip
jmp
loopne
push
loopne
data16
cmp
xchg
popf
push
movzx
clc
mov
scas
jmp
or
push
cdq
xchg
pop
pop
mov
jo
mov
repz
xor
mov
jle
adc
outs
adc
out
add
lock
xor
test
je
cmp
pushf
cmp
lds
jl
mov
call
inc
popa
les
and
(bad)
jmp
inc
inc
lock
push
push
mov
iret
into
adc
fbstp
sub
xor
rol
addr16
call
push
rcr
in
fbstp
adc
inc
push
sub
xchg
nop
inc
and
dec
dec
adc
sbb
push
call
xchg
jle
sub
or
add
and
or
mov
sbb
lock
or
push
fs
sub
pop
or
adc
out
movs
mov
or
cmp
into
je
add
and
cld
or
test
jl
inc
xor
xor
xchg
or
adc
pop
movs
and
push
mov
xor
mov
cmp
add
adc
adc
popa
or
jne
adc
in
sti
ror
pop
jb
out
dec
hlt
pop
push
call
in
add
dec
jne
pusha
sti
mov
into
fild
pop
add
mov
add
mov
sbb
inc
xor
or
sub
lea
mov
adc
xor
dec
(bad)
dec
ret
cmp
je
shl
push
add
loopne
mov
pop
add
or
add
jnp
fisttp
or
jne
xchg
scas
mov
adc
aam
int
sbb
sub
je
outs
push
or
mov
(bad)
aas
pop
adc
or
jl
mov
out
xor
pop
jle
rol
jge
mov
add
add
mov
jmp
lea
push
movs
mov
stos
and
push
or
(bad)
jne
mov
ds
ret
stos
and
js
xchg
into
mov
js
out
(bad)
pop
push
fdiv
push
std
mov
fmulp
push
add
xchg
repz
addr16
push
mov
loopne
and
or
adc
enter
push
clc
dec
add
mov
test
jne
or
pop
and
ror
fadd
fld
push
jg
dec
test
add
test
loopne
push
scas
add
inc
mov
cmps
pop
xlat
(bad)
mov
xor
fcomp
adc
scas
out
mov
cmp
sti
adc
fsubr
pushf
in
cmps
test
push
xor
adc
cmp
xor
pop
jge
fwait
mov
lahf
and
dec
xchg
ds
ret
adc
addr16
and
mov
mov
(bad)
push
mov
push
repnz
pop
sbb
adc
call
out
daa
loopne
pop
adc
inc
sub
jge
daa
jne
mov
sbb
push
jno
inc
nop
sub
loopne
xor
add
mov
lds
or
(bad)
sbb
fcomp
shl
das
pusha
iret
push
push
push
jno
pop
js
or
outs
dec
jne
or
sub
ins
stc
adc
imul
xor
js
mov
cmp
call
sub
mov
pop
aam
(bad)
inc
pop
cmp
jne
push
mov
mov
(bad)
pop
iret
sbb
idiv
loope
push
xor
popf
ss
ins
ds
retf
sbb
sub
and
pop
adc
shr
cmc
and
or
xor
add
add
inc
xchg
popa
sub
jmp
push
mov
mov
pop
and
mov
sbb
ror
cmp
cmp
push
es
adc
sbb
sbb
push
jmp
xor
in
add
push
aad
jnp
les
ror
add
add
push
dec
je
cmp
jg
ss
test
movs
cmp
sub
test
cld
je
add
or
icebp
mov
imul
dec
jae
or
out
pop
cmps
add
cmps
mov
ins
adc
jmp
and
je
dec
int
jne
(bad)
jne
cmp
sub
nop
jmp
push
sbb
repnz
xor
in
mov
jno
push
sub
movs
shl
mov
mov
lea
in
js
add
repz
mov
movs
(bad)
pusha
(bad)
push
mov
add
fcmovnu
dec
mov
cmps
adc
dec
add
or
mov
inc
clc
pop
add
add
clc
sbb
je
scas
xor
xchg
or
push
je
fcomp
jmp
add
or
rcr
jb
push
je
jmp
mov
and
jmp
mov
xchg
push
dec
cmp
je
xor
inc
daa
clc
jne
jge
inc
xor
add
mov
add
test
add
dec
push
sbb
cmp
and
and
iret
adc
in
lahf
movs
aas
jns
sbb
add
add
popa
jnp
cmps
lahf
xchg
not
pop
or
out
and
pop
shl
data16
mov
mov
addr16
les
lock
aam
stc
scas
cmp
jne
cmp
repnz
fwait
adc
or
inc
pop
jne
inc
push
pop
je
add
add
adc
push
hlt
or
push
push
pusha
pop
mov
jmp
mov
in
fidiv
in
dec
or
mov
call
lea
push
mov
popf
fcom
les
dec
xor
ror
inc
mov
jbe
test
pop
imul
fs
xlat
push
add
mov
ret
ret
pusha
and
pusha
mov
xchg
mov
cli
dec
pop
pushf
in
mov
dec
jne
jae
push
inc
jl
mov
lock
pop
pop
imul
jbe
push
push
push
add
cwde
mov
sti
gs
add
xchg
enter
push
xor
pop
dec
mov
in
shr
cmp
and
cmp
pop
mov
xchg
and
not
pop
lods
jge
fdiv
dec
push
test
test
and
push
out
ss
ins
add
sbb
in
sbb
mov
cmps
sub
and
(bad)
stc
movs
ins
push
inc
push
cmps
jo
pop
in
mov
jl
add
adc
aas
stos
xor
jo
mov
push
add
test
push
cmp
xchg
test
mov
ds
pop
sub
mov
(bad)
sti
mov
test
push
movs
ret
add
inc
cmp
pop
hlt
addr16
fstp
adc
xor
push
push
inc
and
cmp
pushw
lods
sbb
xor
or
xor
dec
xchg
ins
inc
xor
das
push
sbb
or
mov
inc
cdq
fisttp
pop
add
push
jmp
retf
jne
les
pop
push
repnz
shl
push
push
sbb
pusha
les
dec
jne
sub
push
mov
xchg
call
out
or
popa
inc
mov
outs
pop
(bad)
cmp
nop
lock
lea
cmc
or
jb
hlt
out
data16
sar
out
inc
pop
cld
aaa
jge
inc
adc
jge
xor
cmp
jg
les
(bad)
je
iret
sub
mov
test
hlt
dec
ja
or
inc
and
inc
mov
fld
jmp
dec
test
mov
ja
dec
cmp
mov
mov
lea
add
dec
push
lods
dec
jmp
outs
iret
mov
sub
and
adc
push
and
clc
(bad)
cmp
and
test
push
lock
loopne
ktestb
test
push
or
fadd
lahf
cli
test
and
ins
sbb
arpl
sahf
mov
xor
add
xlat
je
push
xor
cld
push
fwait
xor
pop
or
pop
mov
loopne
ja
or
or
aas
inc
mov
aas
pop
xor
pop
push
push
nop
or
push
mov
sbb
not
ds
or
add
xor
cmp
retf
push
pop
cdq
inc
aas
adc
add
add
add
add
mov
(bad)
stos
jo
outs
and
jle
xor
inc
imul
add
aas
adc
bound
sbb
lds
jne
fcom
push
das
push
int3
mov
inc
arpl
mov
data16
cmp
lock
jl
les
push
sbb
jae
adc
lods
or
sbb
or
push
rcl
or
(bad)
pop
inc
cs
mov
arpl
loopne
lahf
jp
test
pop
and
xor
add
in
je
movs
iret
xchg
or
pop
sbb
or
push
call
ret
gs
aaa
cmp
or
and
movs
or
pop
add
xchg
or
pslld
mov
popa
out
inc
jg
or
es
dec
cmp
sub
mov
push
inc
(bad)
push
ficomp
jo
jb
aas
fild
jnp
jne
sub
je
sbb
inc
js
das
je
cmp
jge
and
imul
inc
add
adc
mov
pusha
cmp
inc
add
cmp
jle
xor
mov
dec
add
mov
dec
sub
pop
in
or
daa
push
(bad)
lahf
or
mov
dec
fsubr
(bad)
ins
sbb
out
dec
loop
push
popf
bound
ret
inc
add
xchg
mov
loopne
aas
mov
loop
sbb
add
cmc
imul
push
inc
pop
loope
repz
inc
or
pop
je
mov
stc
cmc
cmovnp
inc
cmp
or
shufps
dec
adc
rcr
push
push
pop
xchg
xor
jbe
jge
mov
jne
adc
iret
mov
jae
sbb
ins
xor
xchg
adc
pop
pop
out
cmp
call
movsx
mov
stos
sbb
or
xor
cmp
add
jo
ins
repnz
adc
cmp
js
xchg
lock
xlat
push
pop
retf
jno
test
je
pop
movs
adc
adc
inc
ret
fndisi(8087
cdq
aas
cmp
bswap
fsub
dec
dec
sub
lock
and
xchg
call
dec
sti
push
xchg
and
push
sub
xor
jmp
mov
inc
or
xchg
shl
loopne
js
cmovno
shl
add
dec
mov
jo
xor
push
and
fwait
push
cmp
jns
call
arpl
fidiv
sbb
push
std
or
jbe
jo
xor
pusha
ss
sti
pop
jmp
cmp
cmp
or
inc
lods
sbb
xchg
out
sbb
clc
or
push
push
and
ret
adc
or
push
adc
mov
and
xlat
out
add
pop
xor
call
dec
test
icebp
cmp
or
jmp
xchg
inc
push
sub
pop
ins
adc
pop
sub
mov
ror
and
inc
lock
and
jb
or
mov
in
xchg
mov
loopne
mov
inc
mov
push
fs
mov
(bad)
loope
sbb
outs
xchg
pop
jbe
adc
jne
dec
jg
and
(bad)
cmp
dec
sti
mov
add
xchg
sbb
inc
hlt
or
in
lahf
push
aas
jnp
ss
push
in
test
mov
sbb
mov
fist
fldcw
jge
push
mov
cmp
inc
or
jmp
mov
mov
xor
jne
xor
pop
mov
fucomi
or
jne
push
ds
or
jp
call
pop
xchg
or
or
mov
ins
xchg
loopne
mov
cmp
jge
and
mov
add
mov
gs
inc
js
add
aad
dec
pop
cmp
hlt
or
jg
mov
push
xor
push
(bad)
xchg
xchg
add
adc
ficomp
loop
and
adc
add
lods
cwde
or
inc
adc
cmp
ds
or
mov
popa
xor
mov
js
pop
jecxz
cmp
xor
sar
xor
out
cmp
test
(bad)
out
push
mov
inc
and
movs
inc
pop
hlt
lahf
push
push
adc
shl
pop
jmp
pop
and
or
xchg
or
push
mov
or
enter
outs
sub
cld
iret
scas
dec
push
adc
or
adc
inc
bound
je
std
fild
add
repz
or
inc
adc
add
cmp
jg
or
add
or
out
ret
data16
cmp
and
add
sahf
cmp
cmp
test
or
push
out
stc
jno
mov
cmp
mov
add
cmps
mov
pusha
test
int
sbb
push
hlt
jl
fxch
das
or
(bad)
ins
sbb
mov
push
adc
scas
or
add
imul
inc
xchg
test
ins
mov
pop
sub
int3
xor
xor
aad
mov
imul
mov
cmp
cdq
dec
mov
mov
hlt
sub
pop
push
dec
mov
pop
or
leave
mov
mov
or
add
dec
loopne
ror
movs
push
fmul
mov
push
sub
add
or
cs
in
adc
mov
mov
cmp
inc
(bad)
jno
aas
cmp
push
loopne
xchg
dec
mov
and
inc
ins
ins
sub
jb
sub
jb
push
mov
(bad)
out
div
add
ins
cmp
add
sub
out
or
inc
hlt
rcr
aas
jnp
or
and
add
mov
lock
out
dec
inc
mov
jo
add
add
(bad)
sbb
inc
adc
xchg
ror
and
pop
adc
int3
mov
inc
mov
inc
adc
cs
dec
mov
mov
push
movd
dec
or
jl
and
pusha
and
scas
add
sar
mov
mov
loopne
add
jecxz
jmp
iret
mov
fdivr
adc
jmp
sub
cld
and
int3
adc
lock
cwde
mov
popf
xchg
fcomp
cmp
sbb
adc
cs
cmp
push
and
adc
ficomp
inc
lock
sub
enter
aam
(bad)
call
repnz
std
(bad)
call
imul
fisub
call
add
fsub
call
xor
jge
xchg
mov
fadd
fwait
and
push
clc
cmp
cmp
xchg
jmp
imul
dec
sbb
test
and
mov
and
and
rcr
jmp
dec
xor
jns
add
add
or
push
loopne
mov
jne
repnz
add
lds
xlat
sbb
adc
fdivr
adc
shl
(bad)
idiv
sar
xlat
adc
push
inc
push
jl
or
jns
pop
inc
gs
shl
imul
add
mov
adc
aaa
sub
aaa
test
test
jmp
lock
jnp
(bad)
mov
loope
push
mov
(bad)
push
push
mov
and
mov
fcomp
lock
sub
add
lock
add
dec
adc
xor
test
and
mov
sbb
pop
cld
jmp
or
lds
pop
pop
test
pop
out
xchg
adc
ss
iret
ret
sub
(bad)
test
leave
cmps
jmp
es
or
add
cmp
test
pop
and
rcl
fild
add
loopne
jne
lock
or
mov
ret
jno
sub
call
cdq
loop
fwait
shl
cvtps2pi
or
cli
inc
sbb
mov
aas
scas
sbb
cmp
sub
test
in
mov
add
sbb
adc
fsub
mov
mov
mov
pusha
jp
outs
cdq
pop
enter
jo
mov
pop
ret
enter
xor
out
cwde
loop
(bad)
jp
jnp
mov
or
in
jp
dec
inc
jb
icebp
add
je
dec
push
and
das
clc
pop
add
jae
add
arpl
dec
add
add
add
loopne
cs
aad
cmp
inc
mov
hlt
(bad)
mov
pop
icebp
sti
dec
mov
js
jne
mov
dec
(bad)
fadd
push
ret
mov
jne
mul
pop
je
adc
jge
jl
mul
adc
aas
(bad)
jo
mov
repz
fwait
cmps
add
xchg
mov
sbb
add
or
jbe
mov
xor
aam
mov
das
mov
sbb
or
das
ins
adc
jns
ror
xor
jp
into
push
popa
sub
mov
pop
loope
cmp
pop
jne
aam
push
pusha
repnz
or
or
ja
lahf
ds
ins
mov
xor
add
sub
jae
add
sub
cmps
call
(bad)
jge
sub
es
fsubr
inc
enter
outs
and
pop
dec
push
sub
mov
repnz
push
(bad)
call
jp
(bad)
clc
dec
jne
out
push
dec
inc
cmp
sbb
bswap
or
ret
sbb
sub
xor
aam
jle
outs
in
or
pop
or
(bad)
les
ror
jb
mov
push
and
daa
push
mov
pop
out
loopne
jg
dec
rol
inc
imul
inc
cmp
jle
repz
sub
ficomp
jmp
cmp
div
psrlw
sar
pushf
test
push
push
mov
fsubr
and
sbb
(bad)
fimul
inc
mov
nop
rcr
(bad)
cmp
aas
mov
jns
nop
inc
mov
mov
fsubr
jne
(bad)
jecxz
cmp
xchg
push
cmp
int
jbe
cmps
xchg
stos
add
and
jl
div
arpl
je
add
adc
enter
add
dec
add
rcl
imul
das
ins
icebp
mov
out
dec
cmp
add
xchg
sbb
shr
xor
adc
add
inc
das
loopne
bswap
sbb
imul
add
ret
xor
or
lods
loopne
xchg
es
fcmovbe
out
test
mov
in
push
call
enter
lea
call
sub
jae
outs
pusha
cmp
aam
sbb
(bad)
pop
fdiv
bound
hlt
es
and
les
push
sub
pop
add
movs
cdq
dec
sahf
push
adc
adc
pop
sbb
or
jbe
cmp
movs
jo
pop
sub
and
test
popa
or
sbb
sbb
in
cld
sbb
cmp
jb
pop
ja
cli
add
into
xor
xchg
pop
or
push
mov
or
aam
sbb
push
arpl
jbe
mov
sti
dec
jne
mov
dec
cwde
nop
or
std
cmp
sbb
pusha
jmp
in
xchg
stos
fnstenv
test
fadd
fadd
sub
jnp
test
jl
mov
add
pop
aam
test
inc
pusha
in
mov
push
gs
sbb
jo
call
or
xchg
dec
enter
inc
int3
xchg
and
mov
fistp
popa
lock
sbb
je
add
enter
pop
lea
push
jl
jmp
arpl
xor
or
in
mov
add
pusha
add
imul
xchg
adc
push
inc
inc
loopne
sub
push
sbb
sub
pop
sbb
retf
or
mov
jne
xlat
push
push
sar
push
dec
mov
adc
sub
push
cmc
push
out
(bad)
sub
adc
jo
fdiv
adc
jle
add
iret
mov
mov
sbb
mov
or
test
lods
fwait
mov
add
mov
outs
dec
fadd
adc
add
outs
and
in
adc
js
xor
into
dec
or
test
adc
sbb
loopne
ja
push
ret
push
xchg
sbb
loop
or
push
loop
push
outs
stos
xor
adc
ror
sbb
sub
(bad)
rol
sub
je
sub
jg
sbb
ret
in
adc
add
sar
ret
daa
adc
sahf
fsub
and
xlat
call
add
mov
sbb
and
push
xor
push
jl
cmp
and
pop
add
in
mov
pop
cmp
loope
sub
inc
out
and
sbb
lock
cmp
addr16
mov
cmp
sbb
loopne
sub
jns
pusha
pop
inc
cld
cmp
push
pusha
retf
ss
into
js
inc
nop
sahf
bound
cs
mov
inc
scas
xor
out
cmc
shl
cli
jb
or
add
xor
dec
fdiv
jo
push
sub
arpl
ss
mov
fcomp
lock
xor
lea
jo
jl
jge
mov
cwde
add
jnp
mov
mov
add
pushf
icebp
mov
test
adc
pop
mov
or
sbb
cwde
popa
jmp
div
neg
imul
test
je
mov
loopne
push
ins
jmp
mov
xor
ja
mov
shl
dec
inc
mov
push
push
mov
inc
sbb
movs
push
inc
movs
sbb
outs
and
popf
add
lea
lock
mov
ror
or
fld
mov
add
jl
jne
sbb
mov
add
pop
or
jmp
out
cmp
sbb
add
jmp
std
(bad)
sbb
(bad)
dec
sbb
and
and
sub
sahf
xlat
stos
outs
push
cmp
push
ret
sub
bound
pusha
fcomp
add
rol
clc
adc
call
or
jmp
(bad)
adc
lea
aam
inc
loope
push
rol
jns
inc
add
or
hlt
xchg
dec
movs
mov
shr
and
int3
faddp
inc
sbb
int3
sbb
push
rol
pop
or
retf
mov
aas
push
push
pop
jg
pop
mov
test
fisttp
fdiv
mov
fisttp
add
leave
push
or
fstp
push
je
ret
or
push
push
mov
and
inc
dec
or
jo
dec
je
movs
jbe
push
mov
cmps
jmp
push
sbb
or
jmp
push
fs
push
push
jne
push
xor
dec
add
cmp
jg
ret
mov
test
leave
add
add
add
call
cmp
ficom
(bad)
push
imul
outs
ins
cmp
xor
ja
int3
xor
add
cmp
cmp
enter
sub
cld
les
lods
add
pop
add
pop
cs
cmp
and
cmps
in
jno
mov
pop
or
jo
jg
int3
push
sar
jno
adc
jmp
or
adc
or
sbb
add
mov
or
sbb
sbb
cwde
cld
push
ins
fadd
inc
and
ss
clc
inc
repz
and
jmp
xchg
add
fisub
pop
add
ret
adc
pop
pusha
in
dec
out
js
call
jmp
(bad)
movs
imul
inc
out
add
push
sbb
push
xchg
not
and
cmp
in
jmp
sub
or
pop
add
jnp
sub
fwait
inc
jne
pusha
xor
cmp
jne
sub
cmp
or
imul
jo
nop
cmp
daa
imul
add
add
add
jg
js
and
nop
push
bound
and
sbb
or
mov
add
xor
mov
dec
mov
ins
lds
retf
daa
mov
imul
ins
jbe
mov
add
shl
sub
(bad)
inc
mov
push
mov
sbb
jae
(bad)
mov
sbb
and
push
jae
popa
(bad)
jae
jbe
and
cmps
inc
test
push
in
inc
xor
jae
adc
loope
mov
xor
sub
lods
sbb
sub
xor
adc
jno
or
mov
mov
add
sub
mov
pop
imul
inc
outs
push
or
test
and
or
xor
lea
pushf
fmul
and
fisttp
jne
mov
mov
mov
sbb
mov
in
emms
cld
(bad)
(bad)
mov
bt
jae
mov
not
and
inc
add
cmp
jne
and
dec
adc
sbb
mov
mov
pushf
sub
push
call
mov
mov
sbb
mov
adc
pop
mov
(bad)
and
sbb
adc
mov
shl
dec
xor
fistp
dec
inc
jmp
ret
mov
mov
jne
movs
adc
dec
ja
clc
push
sahf
(bad)
mov
sahf
add
test
adc
add
cmp
(bad)
gs
inc
fdivr
sahf
fnstenv
xchg
cli
or
adc
add
pop
fbld
adc
xchg
adc
pop
test
or
test
mov
mov
sbb
dec
fs
aam
loope
retf
fs
fistp
jns
pop
cld
and
jl
inc
outs
lock
shr
loopne
dec
jne
add
sbb
sbb
mov
or
mov
adc
jp
test
add
push
pop
ret
cmc
test
cmp
call
mov
gs
repz
inc
mov
push
int
and
fbstp
jmp
or
and
pop
lock
xchg
in
or
mov
pop
push
adc
adc
inc
xchg
inc
cmp
jne
repnz
test
jmp
mov
ins
jne
add
mov
add
push
inc
fdiv
add
inc
loopne
not
jne
int3
or
push
mov
jmp
xchg
sahf
mov
aam
sbb
xchg
mov
mov
inc
pop
sbb
sbb
popa
dec
mov
or
push
adc
push
sbb
push
adc
push
add
adc
je
sub
outs
xor
jmp
es
inc
sti
push
or
shl
push
pop
pop
fild
test
xchg
xchg
push
mov
stc
rcr
inc
xchg
mov
cmp
xor
mov
pop
xchg
adc
sahf
test
mov
fs
dec
int
adc
data16
retf
mov
fwait
or
adc
jg
push
je
dec
outs
jbe
fs
mov
mov
ret
mov
push
xor
ss
iret
std
cmp
jo
xchg
cld
and
mov
(bad)
jle
adc
pop
add
push
sbb
ss
add
out
stos
jnp
je
ret
xor
mov
xchg
adc
xchg
xor
sbb
movs
pop
push
pop
cmp
pop
sub
cmp
js
jle
cmp
cmp
(bad)
xor
dec
stos
sub
pushf
inc
sub
pavgb
sbb
push
pop
in
pop
xchg
mov
xchg
ins
jo
jmp
aam
mov
mov
mov
sahf
adc
dec
ins
shl
xor
(bad)
pop
xor
adc
lods
rol
das
mov
ja
fadd
inc
push
add
arpl
add
add
xlat
mov
cmp
imul
adc
loop
test
mov
fbld
jp
inc
mov
mov
pusha
mov
xor
dec
sub
push
and
xor
inc
xchg
icebp
icebp
lock
arpl
push
xor
rcr
in
cmpxchg
and
push
inc
cmps
mov
mov
bound
push
loopne
popa
lock
pushf
js
add
daa
cli
fist
sub
loopne
jge
test
mov
aas
cli
add
jle
cmp
setge
fist
xor
sbb
aaa
pop
dec
sbb
or
mov
mov
sub
mov
xchg
hlt
inc
jp
ror
push
jp
jbe
(bad)
jae
dec
jmp
pop
mov
retf
cwde
shl
jg
inc
sbb
mov
cmp
mov
jmp
in
jecxz
mov
adc
int3
pop
xchg
arpl
(bad)
or
hlt
jmp
sbb
jb
imul
adc
rcr
loopne
add
in
cmp
inc
mov
adc
int3
adc
int3
mov
out
xor
xchg
lds
(bad)
cld
jge
bound
jb
pop
push
ret
dec
mov
sub
(bad)
call
aad
add
sub
mov
xor
or
push
je
add
ud0
inc
mov
pop
cmp
mov
cmp
mov
add
cmp
sar
ficom
adc
out
jb
dec
push
imul
push
or
sar
pop
in
inc
mov
test
sub
jnp
xor
scas
nop
mov
(bad)
jnp
inc
xchg
cmp
push
push
out
out
fnstcw
xchg
pop
dec
rol
sbb
inc
adc
in
pop
addr16
clc
xor
fsub
aam
clc
xchg
mov
mov
sbb
lock
xor
mov
scas
aaa
mov
xrelease
adc
mov
lods
clc
push
(bad)
stos
adc
dec
call
xor
loopne
lock
xchg
sub
xor
cmp
mov
pop
jl
push
adc
cmps
cmp
jge
sbb
sbb
xchg
out
ds
sbb
pushf
jmp
xor
clc
cmp
in
cmp
jge
cmp
dec
loopne
sub
nop
xor
mov
ins
sti
pop
cmps
jb
add
pop
fwait
mov
movs
and
sub
push
inc
push
pop
and
mov
or
out
shr
dec
cmp
loop
jb
pop
loopne
outs
inc
xor
test
sub
hlt
sub
lea
es
dec
add
test
pushf
sub
jns
cmp
and
idiv
adc
xor
pop
mov
add
add
sbb
mov
adc
cli
mov
fmul
inc
data16
loop
test
mov
xor
or
call
in
mov
repnz
ret
or
add
pop
push
popf
mov
arpl
sub
loopne
adc
push
pusha
and
cmp
xchg
mov
or
mov
dec
stc
retf
push
adc
add
jmp
in
and
mov
push
fdiv
dec
xchg
add
add
xchg
(bad)
xchg
or
mov
daa
push
push
pop
xor
clc
or
adc
(bad)
and
add
cmp
les
push
mov
mov
mov
jo
xor
adc
jo
inc
movs
(bad)
cmp
push
adc
push
cmp
retf
int3
ss
leave
popf
adc
in
push
sbb
xor
add
jne
bound
ret
shr
push
sbb
push
jb
fsubr
sub
xchg
mov
stos
jg
in
or
inc
sbb
fadd
dec
idiv
icebp
sbb
inc
mov
rol
int
mov
movs
adc
arpl
cmp
add
and
scas
movs
js
mov
xor
mov
ror
jg
cmp
leave
fsubr
mov
and
add
push
adc
shl
not
dec
out
sbb
int3
add
dec
mov
jo
push
call
mov
cli
pop
sahf
lea
fist
pop
cmp
or
jnp
xchg
clc
faddp
popf
dec
adc
hlt
xchg
je
pop
pop
pop
mov
in
jns
jo
shl
pop
and
jnp
xor
ret
hlt
or
or
or
or
mov
imul
ret
fimul
pop
pusha
adc
pushf
clc
loopne
and
xchg
mov
inc
rcl
add
jg
outs
mov
cmps
add
cdq
or
adc
or
sbb
mov
das
daa
push
mov
test
jmp
push
jecxz
test
icebp
rol
or
pop
pop
mov
pop
rol
test
int3
xor
xor
mov
xor
push
jne
inc
pop
je
or
hlt
dec
ror
mov
aaa
shl
and
cmc
dec
or
cmps
mov
out
outs
retf
fdiv
ret
jns
fmul
clts
add
stos
or
xchg
gs
xor
cwde
ss
inc
aaa
inc
add
loop
and
xchg
pop
aaa
dec
pop
mov
cmp
jl
or
(bad)
in
enter
push
dec
jnp
daa
sbb
or
inc
inc
jnp
push
setp
cwde
jmp
mov
test
or
mov
adc
imul
cmp
adc
sbb
inc
fs
arpl
mov
and
xchg
xlat
add
xchg
pop
jg
ret
(bad)
outs
pop
mov
(bad)
cmp
stos
sbb
sbb
inc
or
add
call
or
add
cs
and
bound
inc
or
xor
inc
add
mov
imul
pop
popf
mov
lahf
cs
or
xor
div
(bad)
or
cmp
mov
fiadd
in
jp
adc
fs
pop
ins
push
stc
add
std
icebp
xchg
adc
jmp
xor
mov
adc
push
add
add
lock
mov
in
mov
mul
imul
adc
cmp
or
push
outs
(bad)
popa
enter
mov
mov
pop
fnstenv
int3
int3
cs
data16
or
xchg
(bad)
retf
ins
mov
enter
aam
sbb
mov
push
add
add
sub
sahf
pop
(bad)
js
dec
and
rol
mov
cmp
jne
push
lahf
loope
push
je
cmps
or
loope
mov
and
repz
cmp
std
outs
mov
and
sub
add
push
adc
sub
dec
mov
into
dec
jae
dec
mov
dec
icebp
mov
stos
mov
lods
fsubr
call
cmp
in
cli
jmp
sbb
sbb
push
lds
and
shl
nop
add
or
call
xchg
loope
ss
adc
push
push
adc
and
aaa
and
jmp
inc
xchg
add
mov
push
pop
pop
mov
cdq
idiv
test
aaa
and
sbb
call
pop
scas
add
es
sbb
pop
pop
leave
push
dec
sbb
je
or
sub
and
sub
mov
dec
xchg
sub
or
pushf
push
or
xchg
mov
xlat
xchg
sbb
mov
in
jno
jle
and
(bad)
mov
add
lock
xchg
inc
jmp
inc
cmp
js
enter
mov
and
cwde
push
out
mov
popa
adc
cmp
int3
sbb
jl
or
ja
stos
imul
push
jo
ficom
shl
mov
jmp
nop
out
adc
int3
jecxz
outs
mov
mov
clc
push
pop
or
pop
mov
push
adc
or
sbb
jp
into
ds
and
or
push
adc
push
pop
sbb
inc
fadd
clc
pop
sbb
pop
bound
pusha
add
data16
mov
sbb
pop
or
adc
mov
push
jne
push
cmc
xchg
not
inc
adc
add
mov
adc
push
push
pushf
inc
je
xlat
aaa
into
movs
shl
mov
loopne
add
add
and
adc
push
lea
push
mov
sbb
jle
out
ins
mov
pop
mov
pushf
into
adc
bound
lds
xchg
sbb
adc
mov
movs
rcl
scas
popf
fs
adc
adc
js
dec
jne
inc
and
lods
and
or
jo
shl
rol
ror
(bad)
adc
ins
je
repz
rol
cmp
bound
pop
xor
add
fcom
xor
ins
dec
push
and
jge
or
adc
adc
in
and
sar
mov
jle
adc
sbb
push
xlat
not
jo
sbb
ret
mov
ds
sahf
pop
push
es
lock
sbb
cmps
inc
or
adc
mov
mov
xor
adc
adc
adc
fs
and
jo
pop
repz
ins
xchg
add
add
adc
clc
sbb
sahf
sbb
jle
push
xor
sbb
sub
push
mov
dec
jge
add
mov
cmc
sbb
inc
rcl
cmps
sub
or
jae
adc
frstor
push
fsub
jae
dec
adc
dec
stos
das
fdivr
fmul
jl
inc
xor
test
mov
mov
pop
popa
adc
or
jne
sbb
repz
scas
in
jo
stos
fist
pop
jle
dec
and
mov
mov
enter
out
dec
dec
mov
dec
dec
or
ins
mov
jge
dec
jmp
rol
xchg
fsubr
cmp
pop
pusha
mov
les
push
xor
push
xor
das
mov
cmp
inc
mov
ret
adc
loope
adc
xlat
ins
call
idiv
dec
sub
jae
add
ret
add
cmps
inc
ret
dec
cmp
add
jg
mov
cld
add
out
inc
cmp
or
jb
clc
sbb
add
or
js
repnz
mov
(bad)
xor
fcmovb
pop
aaa
shl
add
je
push
and
cmp
fs
es
xor
mov
pusha
mov
inc
mov
rol
inc
add
push
aam
or
in
mov
rol
cdq
pop
mov
mov
(bad)
or
sbb
xor
mov
and
and
loope
push
mov
xchg
jbe
aad
inc
mov
pop
lock
scas
mov
xlat
xchg
and
push
sbb
dec
(bad)
pop
les
iret
cmp
push
xchg
clc
pop
mov
or
cli
mov
rol
sub
dec
or
popa
adc
jmp
pop
or
dec
jp
test
or
push
imul
jge
fsubr
inc
aam
add
mov
cmp
sbb
sub
jmp
xchg
pusha
pop
in
ds
inc
out
sbb
fiadd
test
mov
test
sbb
jge
and
movs
jmp
fnsave
pop
mov
in
inc
cmp
sbb
popa
lock
int3
push
xchg
shr
scas
(bad)
adc
sub
add
ret
loop
adc
sbb
and
js
sub
gs
xor
mov
imul
fimul
jne
xor
mov
adc
dec
or
xor
pusha
mov
mov
aaa
or
xchg
jl
push
call
jo
jo
xchg
jbe
pop
movs
push
sub
popa
cdq
test
lds
adc
mov
cmp
sahf
test
mov
cmp
xchg
not
mov
push
adc
fcmovnbe
jmp
xor
push
cmp
dec
sub
dec
popa
adc
mov
loopne
push
adc
xor
mov
les
in
and
push
dec
and
dec
repnz
mov
inc
mov
inc
xor
add
test
pop
push
ret
xchg
add
ss
mov
mov
int3
in
rcr
dec
xor
cmp
gs
or
clc
jns
adc
dec
inc
test
sbb
movs
nop
adc
mov
inc
mov
and
cld
jge
bound
scas
fiadd
push
in
xlat
inc
repnz
sbb
xchg
inc
mov
sbb
add
push
inc
or
popa
push
repz
sbb
test
jo
dec
dec
adc
dec
pop
push
add
pusha
cmp
push
mov
sub
sub
jmp
leave
cmp
cmp
adc
dec
(bad)
or
pop
pushf
mov
es
cs
and
pop
outs
mov
or
ds
or
mov
inc
add
xchg
and
adc
xor
ror
xchg
in
sbb
test
xchg
das
or
sbb
add
popa
lahf
add
push
js
repnz
sti
add
shl
popa
cmp
sbb
push
fstp
or
cmp
jg
sahf
add
or
in
sbb
(bad)
and
xchg
adc
fld
cmp
sub
push
loopne
adc
add
push
push
add
sub
cmp
(bad)
pop
mov
or
add
jmp
adc
pusha
mov
or
sbb
push
xchg
jg
pop
aaa
mov
stos
add
and
sub
sbb
push
push
add
ret
adc
es
mov
cwde
imul
cli
dec
xchg
aam
cmp
lock
cmp
jl
add
loope
cmp
add
adc
jb
ret
jge
pop
mov
mov
sub
icebp
inc
call
push
add
push
push
mov
push
and
enter
dec
es
mov
icebp
xor
fs
or
push
retf
daa
adc
aad
sub
xchg
jo
inc
inc
mov
hlt
popf
push
lods
loopne
inc
fisubr
and
sub
xor
mov
loopne
fcom
dec
push
lock
xchg
add
adc
jne
add
inc
cmp
add
cmc
add
xor
scas
jae
sbb
inc
sub
lock
call
sbb
inc
cdq
add
es
mov
dec
enter
es
adc
mov
dec
daa
js
jle
aaa
xor
add
scas
sub
mov
adc
loopne
ret
mov
jl
or
rcl
je
mov
repz
(bad)
jmp
push
mov
shr
or
(bad)
daa
push
lock
pop
cmp
pop
(bad)
cld
les
dec
retf
ins
jle
push
lea
fisttp
(bad)
cld
aas
and
aas
sbb
xchg
mov
mov
jg
add
stos
pop
scas
daa
pop
cdq
xchg
cmp
stos
jno
pusha
or
or
push
lods
push
fiadd
clc
push
mov
add
add
retf
sbb
sahf
jp
xchg
mov
out
or
jmp
mov
inc
add
scas
mov
fsub
aam
mov
(bad)
xor
xor
xor
je
inc
fbld
jno
sahf
pusha
in
test
sub
push
mov
jge
sbb
jne
scas
ins
and
clc
(bad)
xchg
cmp
jne
pusha
ins
retf
lock
lea
sbb
neg
imul
ds
xor
jl
sub
adc
adc
call
aad
and
shl
les
mov
inc
sub
bound
test
lahf
nop
dec
int3
pop
cs
jl
inc
mov
(bad)
cwde
pop
outs
adc
or
mov
jno
lea
call
clc
iret
ins
sbb
rol
xchg
loopne
fadd
sub
call
push
mov
and
jb
adc
mov
sub
cli
pop
cli
cli
mov
push
les
cmp
pop
push
js
ss
mov
push
adc
dec
or
push
and
sbb
xor
push
std
dec
test
jl
pop
xchg
jbe
or
dec
fwait
push
popa
inc
xor
test
xor
pop
fs
cmp
jne
cmp
fild
rcr
jne
jbe
fsub
xlat
sti
test
pop
or
jae
inc
out
dec
pop
jge
mov
rcr
add
sbb
jle
pop
loopne
push
test
jle
clc
call
repnz
lods
jo
sbb
movs
out
and
test
out
or
cmp
loopne
jmp
pushf
jecxz
pusha
adc
retf
scas
adc
or
pusha
stos
popa
hlt
inc
mov
test
(bad)
cmp
cs
push
movs
fiadd
jns
in
imul
add
mov
ret
jle
add
add
sub
pop
(bad)
sbb
mov
sub
jo
or
jmp
sbb
mov
repnz
mov
pop
das
test
mov
push
aas
pop
ss
shl
adc
inc
mov
cmp
and
push
mov
sbb
mov
pusha
jae
add
(bad)
and
fld
inc
retf
dec
and
mov
push
pusha
adc
push
mov
mov
jne
push
mov
call
pop
or
sar
mov
(bad)
jo
push
int3
pop
into
dec
out
out
and
adc
inc
push
add
mov
inc
retf
mov
in
dec
push
sub
add
div
mov
sub
or
ror
sub
(bad)
(bad)
mov
ins
jb
pop
jmp
dec
mov
jb
inc
push
sbb
ror
inc
in
push
pop
inc
or
jmp
fmul
adc
pop
sub
inc
cmp
sub
mov
cmps
shl
mov
or
mov
adc
mov
aaa
clc
into
xchg
aaa
ret
add
inc
cmp
cli
add
dec
cmp
or
movs
sbb
xor
dec
and
add
call
push
popa
push
sbb
sar
push
movups
inc
push
das
adc
das
inc
rcl
sar
(bad)
hlt
push
add
or
xor
adc
lods
cmp
push
or
xor
icebp
fmul
cdq
es
adc
jno
aad
scas
loopne
push
fnsave
hlt
jne
fistp
lods
and
sbb
into
out
cmp
loopne
cwde
js
out
shr
add
cmp
jl
mov
pop
fst
call
call
mov
lea
or
pushf
mov
jmp
lea
clc
rol
mov
in
outs
pop
enter
cli
xchg
sti
jns
sbb
aam
xor
sar
jae
lea
jmp
sub
and
mov
jmp
dec
push
or
jmp
jnp
sub
add
jle
push
inc
jl
jbe
inc
push
and
pop
cmp
inc
rcl
(bad)
or
ret
xor
sbb
mov
es
jns
adc
jmp
cmp
pop
push
sub
xor
push
push
jne
add
jmp
loopne
inc
fdiv
add
js
test
call
inc
js
mov
sub
in
or
outs
ins
pop
mov
dec
repz
aam
fwait
call
inc
int3
cs
scas
xor
pop
mov
push
jp
cmps
push
nop
jb
cmp
jmp
adc
pop
sbb
test
sbb
push
cmp
jne
mov
mov
inc
mov
cmps
daa
push
xchg
pop
jl
cmp
adc
faddp
lea
xor
push
add
cmps
dec
fwait
stc
cdq
mov
jno
mov
fsub
js
or
and
mov
push
loopne
sbb
fwait
push
(bad)
sbb
rol
call
in
call
xchg
or
call
cld
mov
and
or
mov
jmp
push
sub
or
xor
movs
add
lea
gs
movs
das
fst
shl
cmp
mov
mov
ret
pop
and
sub
jmp
cmp
pusha
dec
lods
mov
xor
idiv
sbb
(bad)
jmp
js
pusha
xchg
(bad)
fsubr
xchg
xchg
jbe
adc
loopne
outs
out
add
scas
inc
mov
daa
inc
and
push
aad
mov
sbb
sbb
mov
dec
push
add
daa
push
adc
fcom
jp
(bad)
jnp
and
sbb
push
jmp
xor
and
outs
movs
sub
add
pop
iret
jmp
sub
adc
or
je
sub
ret
or
jo
mov
cmp
rcl
faddp
inc
mov
add
jne
fsub
jae
int3
sbb
jg
adc
add
dec
(bad)
jmp
pop
or
mov
mov
inc
sbb
(bad)
retw
call
adc
sub
leave
adc
pusha
rcr
jo
xor
pop
cmp
adc
push
and
add
test
(bad)
je
je
and
pop
hlt
cmps
(bad)
fwait
mov
enter
cmp
int
(bad)
call
mov
jle
xchg
in
(bad)
movs
sub
inc
push
sub
popf
inc
and
pusha
test
(bad)
ds
cmp
push
lock
loope
push
xchg
adc
pop
je
or
and
(bad)
sub
or
cli
(bad)
pusha
icebp
out
jb
imul
sbb
arpl
inc
dec
jne
mov
out
fiadd
fmul
add
mov
mov
pop
pop
mov
fbstp
inc
outs
arpl
jb
gs
mov
idiv
or
adc
or
arpl
outs
outs
je
outs
ins
jae
cmp
and
xor
xlat
cmc
push
fsub
mov
imul
dec
rcl
add
push
or
jle
sub
cli
clc
mov
or
adc
xchg
jmp
cmp
addr16
sub
loope
lds
cmp
or
cmp
test
mov
xor
into
rcl
loope
or
jne
jmp
(bad)
cld
cs
sbb
jb
adc
cdq
xor
sub
inc
(bad)
and
xchg
inc
shl
or
push
cli
fiadd
cs
and
xchg
test
das
push
inc
inc
pop
ds
pushf
cmp
jl
dec
push
push
push
jo
xchg
adc
and
or
(bad)
mov
mov
loopne
or
aas
daa
leave
xchg
in
cs
and
push
jo
in
jae
sbb
jp
jl
mov
call
mov
or
addr16
test
cmp
or
xchg
or
loopne
add
sub
or
push
stos
hlt
xlat
xor
fisttp
sahf
jp
xor
jo
mov
jb
cmp
add
or
push
mov
mov
push
call
dec
jne
xchg
sub
sbb
in
jae
je
dec
cmp
scas
es
mov
ret
adc
mul
xor
mov
mov
pop
mov
pop
mov
or
xchg
add
stc
daa
jecxz
push
cmp
adc
adc
xchg
dec
xchg
cmp
inc
mov
mov
dec
push
popa
dec
test
sbb
pusha
daa
mov
or
loop
shl
sbb
sub
hlt
push
aaa
(bad)
xchg
not
jl
push
dec
stc
lods
xor
sti
inc
sub
sub
jnp
cmp
jne
(bad)
sbb
out
add
nop
add
sar
jmp
mov
xor
jmp
clc
mov
int
jmp
cmp
and
in
sub
bound
push
pop
mov
xor
or
ins
mov
fstp
rol
push
cmp
pusha
cmp
push
or
into
je
aad
add
in
add
mov
mov
cmp
inc
in
and
movs
mov
push
pusha
pop
sub
mov
mov
adc
daa
je
jo
lock
push
test
xor
push
sbb
push
add
mov
or
lock
or
das
inc
mov
in
(bad)
rcl
and
xchg
pop
cmp
adc
push
adc
jp
sbb
leave
add
jo
cmp
das
push
inc
ficom
(bad)
fidiv
sbb
and
adc
xlat
loopne
add
adc
adc
arpl
pop
mov
ret
jge
inc
js
pop
or
push
in
shr
(bad)
xchg
pop
cmps
mov
add
test
je
lods
add
inc
xchg
xchg
retf
or
lods
das
mov
shl
and
popa
daa
sbb
add
or
outs
add
jmp
or
pushf
and
lods
xlat
push
fcomp
popa
in
sbb
cdq
sti
test
loope
rcr
adc
mov
sar
adc
push
out
add
sahf
lock
dec
adc
sub
push
push
dec
sub
enter
add
(bad)
scas
mov
cmp
je
stos
and
psrlq
adc
inc
adc
sar
cmp
jle
add
push
add
das
sub
sub
addr16
js
jmp
add
les
in
inc
outs
cmp
shl
test
popa
lea
adc
adc
popa
aad
push
sub
js
movs
jne
ins
jnp
rcr
push
mov
loopne
mov
loopne
in
mov
pop
inc
push
shl
sub
sub
in
jge
jl
rcr
jl
mov
jmp
into
mov
loopne
daa
aaa
inc
or
in
push
fistp
fimul
sub
test
loopne
mov
pop
or
hlt
xchg
mov
adc
and
cwde
push
cmp
xchg
inc
retf
cmp
add
imul
rol
add
hlt
ret
push
push
pop
pop
cdq
fadd
push
imul
push
call
jmp
les
dec
cmp
mov
xor
std
test
fcom
push
je
cmp
add
shl
add
cld
push
outs
mov
add
add
or
add
cmp
cld
dec
jno
inc
lods
leave
fcomp
sub
push
dec
mov
popf
ret
or
fiadd
inc
test
imul
data16
adc
mov
sub
xchg
mov
inc
jmp
sbb
ins
cmp
or
shl
div
cli
xchg
fcmovnu
add
mov
loopne
pusha
push
adc
adc
hlt
jp
inc
js
shl
or
and
mov
add
jmp
inc
cmp
pop
or
js
lea
out
inc
inc
bound
pop
add
dec
add
jmp
into
ret
jp
adc
sub
int
or
ret
lea
push
loopne
jbe
or
add
jg
scas
jmp
xchg
cmp
out
out
sti
sti
(bad)
and
mov
sub
jmp
or
fcom
les
and
mov
aaa
pusha
jb
sub
jnp
mov
jne
cmp
mov
add
sbb
dec
jnp
cmp
fisub
movsx
push
in
movzx
cmps
les
jo
shr
call
mov
fcom
ja
ret
or
adc
xchg
and
imul
pop
dec
lahf
sbb
fbld
jbe
dec
lahf
dec
add
cs
ss
in
sbb
aas
jne
aam
nop
shl
jo
shl
data16
retf
mov
stc
cmp
ret
call
retf
loope
xchg
inc
fist
into
push
jl
adc
pushf
outs
les
inc
add
mov
sub
or
inc
or
dec
push
pop
scas
add
daa
rol
xchg
dec
div
push
xor
push
cmp
in
add
push
lods
ins
xor
or
or
jle
mov
imul
push
lds
and
cwde
fdiv
shr
mov
fmulp
and
inc
sbb
inc
pushf
push
daa
not
mov
mov
inc
mov
stc
fmul
jae
rcl
rcr
outs
cmp
jne
mov
mov
sbb
and
fiadd
add
inc
push
add
sub
inc
add
push
adc
ins
jbe
adc
sub
pop
pop
sub
or
pop
loopne
mov
sub
pop
cmp
pusha
and
xchg
pop
lock
les
mov
mov
test
sbb
retf
mov
je
push
ins
or
test
shl
pop
push
lock
ficomp
jp
xchg
adc
outs
pop
pop
movs
cs
js
mov
jo
cmp
xor
ss
in
scas
and
cwde
push
popf
(bad)
push
dec
xor
sbb
outs
and
jne
push
push
mov
push
imul
cmp
or
ds
std
inc
pusha
add
sbb
fwait
lock
adc
or
mov
inc
inc
popa
popf
add
pop
aas
jo
(bad)
push
addr16
add
add
pop
jl
or
and
test
lock
ins
add
pop
inc
jle
mov
or
push
pop
xor
jle
xor
xor
test
sub
sbb
push
jg
mov
add
pmuludq
mov
adc
cmp
das
jmp
sar
or
pop
enter
push
sbb
aam
fcom
mov
pop
scas
pop
dec
mov
ja
push
dec
popa
cmp
dec
pop
add
cdq
xor
call
outs
pusha
push
push
xor
cld
or
xor
adc
sub
js
leave
inc
push
outs
jne
dec
push
push
pusha
jmp
(bad)
push
add
add
loope
or
outs
fcom
push
dec
fdiv
popa
xchg
add
jge
mov
dec
push
pop
enter
add
xor
inc
sub
jmp
cwde
jo
jge
xor
adc
sbb
cmp
sub
push
sub
xchg
push
xor
push
scas
sub
mov
in
inc
push
inc
sub
push
inc
pop
and
cmp
and
push
inc
and
add
popf
xchg
pop
adc
mov
add
and
xor
or
test
jg
cld
fdiv
jmp
add
cs
or
xchg
movs
inc
push
cld
or
add
movs
sbb
(bad)
pop
cmc
shl
mov
inc
mov
ja
mov
adc
fdivr
xchg
jg
adc
cmp
fdiv
mov
mov
mov
(bad)
mov
mov
mov
jbe
fs
mov
cld
sub
pop
enter
jnp
jae
pop
and
and
push
fwait
(bad)
sar
mov
call
mov
adc
dec
xchg
lods
jo
cld
and
jl
jle
mov
jbe
pop
jmp
xchg
push
or
sub
pop
clc
cli
or
cli
mov
std
add
test
cmps
nop
mov
jno
pop
sub
push
pop
bound
into
jp
(bad)
or
push
pusha
cmp
add
rol
xchg
xchg
mov
push
dec
push
xor
inc
mov
or
sub
cs
lea
ret
outs
mov
imul
(bad)
ds
mov
sub
dec
adc
add
push
and
sbb
xor
adc
xchg
test
and
stos
loopne
cmp
mov
lock
xor
ds
sub
mov
push
mov
cmps
cmp
mov
enter
loop
pushf
and
push
adc
test
add
push
aaa
adc
mov
or
hlt
(bad)
jmp
and
popa
jb
cld
stc
mov
cmp
bound
and
cmp
hlt
pop
ins
sub
and
or
and
pop
fsubr
adc
sub
sbb
push
sbb
aas
push
mov
lock
push
cmp
jo
test
mov
sti
cmp
and
jo
and
js
iret
and
mov
out
(bad)
mov
add
xor
xor
cs
add
or
push
pusha
icebp
in
loopne
popa
fld
test
xchg
ret
push
push
test
mov
jmp
pop
mov
int3
imul
cmp
cmc
mov
pop
retf
lods
rcl
and
add
push
mov
je
call
inc
mov
push
or
shl
imul
jo
cmp
adc
movs
jo
xchg
jmp
add
das
mov
xor
adc
je
test
push
adc
push
sub
pop
push
push
mov
sahf
lds
daa
pop
aaa
push
adc
outs
xor
loopne
adc
nop
rol
aam
ret
jnp
push
mov
jo
repz
xchg
test
pop
adc
adc
cmps
inc
xchg
cmp
mov
ret
push
mov
cmp
pop
cs
lahf
sub
sub
(bad)
ds
arpl
xchg
add
sbb
fstp
add
clc
mov
dec
sahf
imul
cld
xchg
sub
mov
xchg
mov
push
jo
aaa
pop
and
inc
movs
pop
cmp
stc
mov
sbb
(bad)
fwait
sbb
or
pop
mov
jo
dec
inc
pusha
xchg
mov
xchg
sub
call
mov
add
adc
and
call
mov
and
mov
or
adc
aaa
mov
mov
xchg
loope
fimul
or
xor
inc
inc
adc
lock
ret
call
inc
inc
push
jb
mov
ret
mov
xchg
jb
aas
adc
mov
addr16
ret
pop
xor
mov
mov
cld
add
cmps
push
dec
sbb
movs
push
and
jbe
mov
int3
adc
movs
ins
push
mov
adc
lock
out
stos
inc
sbb
mov
adc
xchg
dec
cs
in
add
in
setle
pusha
mov
or
pop
sbb
push
dec
push
inc
add
jo
mov
and
add
adc
inc
pop
add
pusha
inc
mov
push
dec
add
jae
int
pop
pop
xchg
push
add
pop
add
outs
bound
neg
add
jp
pop
rcr
add
add
das
adc
scas
retf
add
ss
jae
xor
push
push
push
div
dec
js
add
aam
outs
push
sbb
dec
ss
mov
rcl
push
pop
clc
(bad)
pop
(bad)
aaa
add
loopne
das
call
addr16
cmp
iret
push
push
xor
xor
aad
pusha
and
mov
aas
push
cmp
or
out
in
int
sbb
push
sbb
inc
or
fmul
rcl
idiv
je
dec
je
add
mov
dec
or
or
ret
sbb
and
sbb
push
cwde
loopne
xor
push
sbb
sbb
xchg
mov
cli
imul
ss
retf
aam
jge
inc
xchg
test
or
into
dec
mul
call
inc
bound
call
fadd
add
sbb
inc
inc
xor
add
dec
or
and
add
jmp
loope
push
adc
ret
xchg
or
dec
aam
fcom
in
or
aad
or
pop
xor
and
xor
sbb
add
je
pop
add
sub
repnz
in
fidivr
dec
cmp
fcom
pop
test
fmul
and
sub
push
push
or
add
ffreep
loop
push
in
into
mov
retf
adc
lods
mov
cmp
jne
movs
xchg
push
cmp
jne
cmp
adc
mov
mov
xchg
fs
add
sub
inc
ret
outs
mov
ja
push
lock
and
test
(bad)
cmp
repz
enter
test
inc
sbb
ret
mov
mov
sub
jmp
shl
mov
or
fild
ret
sub
inc
pop
add
add
jmp
clc
test
pop
pop
fs
jmp
into
push
sbb
icebp
arpl
xlat
loopne
mov
jmp
push
imul
adc
(bad)
lods
inc
xchg
push
cmp
jl
push
pusha
cmp
or
mov
pop
xchg
jg
add
lods
and
loope
or
sub
(bad)
jbe
adc
xchg
adc
je
enter
out
xchg
xchg
jo
cmp
test
xchg
adc
adc
or
js
adc
inc
(bad)
adc
adc
in
mov
loopne
in
adc
fadd
inc
mov
arpl
mov
in
push
jno
hlt
or
jmp
pop
loope
or
push
movs
and
push
xchg
xor
push
mov
jb
dec
push
mov
sbb
test
xor
xlat
push
inc
cmps
aam
scas
xlat
fsub
push
mov
into
pop
arpl
mov
call
pop
and
push
mov
data16
int3
mov
jo
idiv
pop
mov
inc
pop
int
dec
mov
jle
cmp
mov
add
add
inc
ins
xor
jne
pop
xchg
pop
aaa
inc
push
setl
mov
push
adc
mov
push
pop
mov
jb
ret
mov
and
repnz
inc
sbb
mov
pushf
jl
push
adc
neg
xor
add
push
pusha
cmp
and
adc
sub
lahf
out
loopne
das
push
mov
xchg
push
mov
stos
rcr
sbb
jb
ja
sbb
rol
dec
jo
cs
jnp
cmp
lock
mov
pop
retf
mov
shl
cli
adc
pop
push
push
or
sub
popf
pop
xchg
push
adc
cld
xchg
push
cmp
or
xor
mov
xchg
cmp
or
push
push
pop
mov
inc
and
or
mov
push
push
cmp
push
cmp
mov
or
sbb
lds
adc
fild
out
movs
mov
dec
sub
sub
xchg
xchg
pop
cmps
das
sub
dec
mov
shl
push
loopne
out
lea
loop
pop
and
ror
loopne
iret
jge
xor
add
add
xchg
dec
add
dec
xchg
inc
cmp
push
mov
sahf
popa
xor
cmp
jle
in
or
out
adc
fs
test
push
fidiv
or
push
dec
or
mov
inc
les
push
add
dec
retfw
dec
test
imul
clc
scas
ror
sbb
rcr
jg
addr16
mov
inc
pusha
pop
mov
fild
dec
push
pop
hlt
xchg
push
pop
xchg
inc
push
outs
int3
inc
xor
jle
jnp
sub
jp
fidivr
lods
sbb
test
push
lods
rcr
emms
mov
mov
push
test
fs
pop
mov
nop
mov
push
adc
retf
or
loopne
rol
or
cmp
jne
out
popf
pop
js
mov
movs
sahf
push
push
push
mov
das
push
int3
ds
push
fs
mov
pop
mov
pusha
add
das
cmp
fadd
xor
lock
popa
adc
inc
and
lahf
popf
push
add
push
mov
cmp
mov
leave
(bad)
fst
mov
cdq
mov
arpl
push
sub
adc
sar
cld
cmp
sub
push
dec
aam
mov
ja
inc
cmps
loopne
or
aam
push
jbe
pop
dec
mov
inc
xor
les
adc
ins
xor
mov
mov
sbb
mov
pop
movs
sub
aam
add
inc
jb
lods
jne
mov
popf
mov
cmp
jne
pusha
(bad)
sbb
cmp
test
xchg
mov
je
cwde
pushf
mov
xlat
and
mov
mov
aam
loope
push
add
cmps
in
inc
cmps
ins
cmp
add
mov
sbb
mov
pop
pusha
or
mov
test
test
adc
shr
clc
pop
xchg
push
inc
add
call
lods
sbb
sbb
cmp
cmp
addr16
jmp
adc
popf
push
mov
push
add
pushf
pop
jo
mov
sub
iret
dec
imul
jmp
(bad)
sub
mov
and
ret
inc
daa
das
clc
jmp
fld
sbb
pop
shl
push
ror
js
sbb
cli
mov
xor
test
xor
jmp
or
jl
nop
inc
call
imul
pop
lods
int
mov
cmp
push
dec
sbb
or
xchg
cmp
dec
mov
add
fstp
and
push
mov
shl
jl
lock
jnp
xor
push
bswap
xor
pushf
cmc
aas
mul
nop
push
mov
or
pop
mov
dec
pop
pop
push
push
scas
add
mov
xchg
mov
mov
sub
shl
push
pop
xchg
push
xor
cmc
repnz
push
movs
add
jg
jae
mov
(bad)
jmp
add
xor
dec
test
push
inc
sub
push
inc
jne
jge
fcomp
mov
add
pop
pop
ja
fiadd
clc
sti
xor
aam
outs
or
mov
sar
popa
or
pop
jne
xor
cmp
or
or
loope
or
pop
or
fstp
xchg
jecxz
out
and
sub
out
sub
push
sub
cmp
mov
ins
fidiv
mov
adc
hlt
adc
add
pop
xor
dec
push
mov
movs
push
loope
das
push
dec
loopne
in
cld
ds
shr
push
cmp
mov
and
rcl
add
inc
push
lds
movs
cmp
dec
cmp
jne
sbb
mov
sar
lock
in
and
adc
add
fnstenv
fmulp
xchg
loopne
inc
pop
pop
and
test
push
xor
jge
xor
movs
loope
xchg
loope
jne
push
sbb
fst
pusha
mov
test
fisubr
jmp
out
add
jle
sahf
movs
inc
pop
dec
add
jo
adc
sub
inc
fadd
ja
or
xchg
push
sub
mov
sub
and
mul
int3
mov
pop
dec
ss
cmp
mov
cmc
mov
in
sub
cld
out
jge
shr
and
loopne
data16
or
push
ret
adc
clc
mov
mov
out
xchg
pop
jp
xor
or
mov
xor
out
sbb
fdiv
fmul
push
arpl
pop
jecxz
ss
add
scas
mov
sbb
xor
ret
mov
into
popa
fnstenv
arpl
inc
add
sbb
lock
(bad)
jb
add
movs
jg
cmps
inc
ret
mov
sbb
pop
mov
inc
add
mov
test
mov
or
pop
loope
cs
fadd
mov
inc
shr
in
adc
ss
cld
repz
cmps
inc
mov
ja
pop
js
mov
jmp
dec
adc
or
movs
(bad)
push
neg
into
sub
xchg
xor
inc
pusha
jbe
dec
jo
xor
push
mov
cmp
xchg
xor
mov
lock
inc
jae
adc
jge
(bad)
fadd
test
lea
sub
jne
xchg
xor
push
lahf
loopne
inc
les
cmps
or
adc
adc
je
cld
xchg
arpl
test
push
jmp
cdq
jbe
bound
push
in
jg
push
mov
xchg
push
jmp
ror
mov
in
lock
jne
lods
cmp
iret
mov
idiv
mov
dec
mov
sti
les
inc
push
jg
mov
retf
cs
push
or
mov
pop
pop
inc
pop
add
push
rol
jae
or
mov
ror
loopne
mov
pop
sub
pusha
cld
iret
jg
mov
fcom
cmp
fisttp
inc
adc
loope
stc
add
or
loope
pop
dec
push
loope
lods
js
rol
mov
repnz
inc
cwde
push
cli
dec
sub
or
or
movzx
mov
sbb
or
add
imul
adc
push
adc
out
push
jo
neg
inc
sbb
inc
push
data16
jmp
adc
add
jp
adc
pushf
loope
outs
pop
retf
ffree
mov
or
rsm
rcl
push
inc
add
push
enter
jo
pop
aas
pusha
mov
push
sub
jnp
shl
in
xor
jbe
pop
inc
cmc
push
sbb
neg
(bad)
cli
pop
jae
adc
ret
and
inc
pop
push
dec
pop
and
inc
xchg
add
ins
mov
lock
inc
pop
(bad)
push
ja
mov
add
mov
ror
out
jae
pop
daa
call
ret
add
mov
inc
pop
adc
adc
jmp
loope
div
je
fdiv
jae
je
nop
inc
pop
es
mov
sub
dec
jnp
rcl
pop
xor
dec
mov
into
and
cmp
lds
sub
sbb
cmps
popa
clc
sbb
scas
push
ins
je
mov
dec
push
add
js
adc
movs
in
mov
dec
mov
fisttp
mov
jl
inc
xor
jo
push
pusha
xchg
mov
clc
mov
(bad)
sbb
in
cmp
je
mov
add
ja
mov
cmp
push
test
jne
outs
in
lds
in
ret
pop
ss
lea
mov
test
xchg
mov
imul
jo
ficom
dec
aam
popa
mov
lahf
push
sub
jne
xor
adc
or
sbb
inc
sbb
cmp
push
shl
dec
es
popa
mov
lock
xchg
xchg
jl
mov
push
mov
inc
mov
adc
mov
out
or
add
or
mov
sahf
add
push
push
sbb
or
jp
call
js
dec
popa
jns
jne
ins
jnp
aaa
ret
mov
ins
push
outs
mov
je
jb
inc
in
jle
jmp
je
ins
or
arpl
fs
je
ins
jae
add
adc
ins
imul
or
outs
fwait
jnp
dec
xchg
cwde
ds
gs
and
push
or
popa
je
push
test
or
sbb
push
outs
jb
das
push
mov
dec
inc
jb
pop
cwde
shl
and
inc
add
add
push
jae
imul
arpl
or
fild
or
inc
ins
popa
addr16
popa
rol
and
mov
add
push
in
arpl
fwait
sar
mov
add
jae
out
push
adc
pop
outs
mov
shr
jnp
mov
xor
push
mov
rol
sar
ins
rol
pop
push
movs
or
inc
sti
xor
dec
push
test
xor
jge
rol
rcr
cmp
push
in
or
dec
push
ror
sub
push
add
dec
pusha
data16
(bad)
mov
lods
mov
push
push
aad
jge
sub
hlt
ds
cld
pop
push
in
mov
mov
into
push
lods
scas
mov
xchg
pop
mov
ins
and
or
adc
xlat
mov
imul
mov
test
fldcw
sbb
push
cwde
movs
adc
mov
dec
ss
rcr
stos
lods
es
mov
mov
push
pop
push
xor
aas
push
add
sub
sub
add
jne
inc
sub
outs
ins
jbe
ret
xor
inc
add
mov
outs
ins
jmp
lds
or
outs
push
imul
jnp
enter
xchg
pushf
sbb
jns
rol
outs
ja
aam
mov
inc
retf
stos
aad
loope
jg
lods
push
mov
(bad)
push
inc
push
push
gs
fcomp
xlat
cmovbe
add
sub
push
gs
mov
push
adc
outs
xor
fwait
int3
shl
cld
push
mov
mov
lock
or
(bad)
inc
fcomp
mov
dec
stos
nop
inc
push
or
inc
push
push
jo
xor
pusha
bound
adc
add
lahf
add
add
xor
hlt
mov
ins
mov
jl
inc
dec
ja
shl
fsub
pop
xchg
cmp
xchg
inc
mov
add
mov
dec
add
jo
or
jle
aam
push
fsubr
sbb
adc
ja
sub
push
or
inc
cwde
jo
and
push
cmps
aam
aaa
pop
pusha
push
xchg
(bad)
push
fsub
push
sub
mov
or
ret
outs
jmp
les
hlt
das
cli
push
mov
movs
sub
mov
push
das
pop
mov
or
fwait
sar
jl
add
ins
mov
dec
adc
mov
dec
cmps
mov
call
and
pop
dec
and
inc
inc
fadd
shr
stc
adc
inc
outs
arpl
push
push
pop
jb
xor
dec
rol
push
je
jno
lods
imul
mov
xchg
(bad)
in
adc
inc
imul
adc
adc
adc
push
scas
mov
adc
iret
out
jl
(bad)
aad
and
mov
fild
push
add
mov
jae
add
dec
pop
dec
hlt
inc
or
pop
loopne
addr16
mov
xchg
in
and
inc
pop
xor
pop
outs
jmp
pop
dec
dec
nop
fs
inc
mov
outs
add
movs
or
ret
mov
sbb
loope
mov
inc
mov
xor
gs
in
or
bound
(bad)
ins
gs
call
cdq
mov
sbb
cmp
push
push
je
loopne
in
push
dec
adc
dec
inc
add
sub
push
push
adc
sbb
push
push
das
or
add
arpl
in
xor
rcl
push
and
push
cs
sub
adc
dec
addr16
sbb
dec
sub
adc
and
adc
push
out
das
jl
loope
add
fisub
jmp
jo
push
jne
pop
mov
add
add
cdq
and
icebp
mov
dec
cdq
xchg
cmp
or
loope
lahf
and
mov
call
cmp
sbb
cli
test
xchg
and
push
jo
aam
repz
daa
jae
sbb
inc
or
sahf
add
imul
rcl
mov
push
inc
imul
inc
push
mov
adc
jo
push
jae
hlt
push
pop
outs
or
push
pop
or
in
je
mov
mov
test
gs
jae
lds
and
ja
pop
fld
sub
dec
outs
inc
or
mov
adc
out
cmp
jmp
push
xlat
adc
shl
cmp
pop
push
cli
or
inc
ins
fwait
test
or
or
dec
das
inc
fucomi
mov
push
xchg
movs
test
cwde
dec
in
dec
jbe
jb
pop
mov
xchg
stc
(bad)
inc
dec
dec
popf
xor
xor
dec
jle
push
imul
fdiv
sbb
pop
inc
xor
fdiv
inc
push
xlat
retf
gs
push
mov
cmp
ja
pop
inc
xor
jne
fisub
jo
pusha
outs
lock
adc
ins
pop
push
fiadd
push
cs
add
fdiv
fs
out
inc
pop
dec
or
xchg
loopne
pop
dec
push
pop
xor
dec
push
jmp
push
out
inc
cmp
inc
out
push
inc
int3
dec
dec
inc
inc
pop
dec
cwde
in
inc
push
cmp
loop
cld
or
es
jb
cmp
jno
adc
outs
jle
stos
sbb
push
out
sub
dec
cmp
add
sub
or
and
and
ins
(bad)
mov
and
lds
and
and
pop
xchg
and
and
and
xchg
mov
and
shl
push
enter
and
pusha
mov
and
sbb
inc
and
and
mov
and
push
or
push
int3
(bad)
fcmovbe
cmp
pusha
int
rol
jb
ss
push
lods
les
jl
ror
push
(bad)
adc
and
enter
mov
popf
call
dec
outs
cmp
mov
ror
cli
repnz
push
fiadd
aam
jmp
call
or
into
mov
cmp
or
push
push
cmp
ss
adc
(bad)
adc
loopne
mov
fcomp
(bad)
fadd
pop
mov
ss
call
jnp
div
adc
es
ds
xchg
ins
les
xor
mov
aam
jle
pop
and
pop
es
pop
pop
fdivr
(bad)
sbb
test
cs
push
loop
pop
pop
fisub
ds
ss
dec
out
push
test
out
and
push
lods
push
fs
sar
push
push
sti
iret
pop
push
cs
cmp
add
or
cmp
dec
jg
stos
xchg
sub
js
outs
addr16
sbb
pop
push
cmovbe
and
add
push
dec
fmul
or
inc
push
popa
jae
ja
mov
push
sub
fs
jns
popf
fwait
mov
sahf
push
or
gs
fstp
and
sub
dec
imul
sub
add
pusha
dec
inc
dec
test
jge
pop
inc
add
mov
mov
push
popa
mov
imul
sti
jg
ins
push
inc
dec
outs
inc
jne
data16
push
nop
inc
and
add
push
or
mov
pushf
cdq
jb
xchg
rcr
jne
sbb
add
fs
arpl
mov
mov
xor
sar
das
dec
jne
(bad)
retf
cmp
mov
adc
push
clc
mov
pop
call
or
cmp
stc
mov
add
inc
add
call
cs
push
ror
repnz
jmp
das
push
daa
daa
mov
bsr
pop
dec
cmps
lods
fldl2t
cmovs
xchg
pop
(bad)
sub
out
mov
mov
loop
out
mov
or
(bad)
mov
fcomp
int
jns
mov
cmp
jnp
lods
ss
push
stos
push
movs
call
test
push
pop
push
or
inc
adc
ss
sub
aam
sub
push
fild
add
rcl
add
and
push
sbb
jno
pop
das
push
pop
mov
mov
add
outs
enter
xor
aam
inc
or
pop
aas
mov
popa
jne
adc
cmp
xchg
fs
aaa
and
fild
pop
dec
gs
push
dec
mov
ins
adc
gs
jne
sbb
dec
jae
pusha
push
mov
mov
lods
popa
jne
adc
inc
fs
dec
test
or
mov
push
ret
repz
cmp
sub
sub
cmps
add
inc
fimul
mov
movs
or
arpl
popa
ins
jne
jno
cmp
ret
pusha
lock
int3
ins
ret
dec
fisttp
sub
xchg
pop
stos
dec
xchg
nop
add
leave
push
retf
or
pop
push
dec
or
push
and
add
sub
gs
adc
pop
lods
inc
movs
add
mov
js
mov
cld
push
enter
push
mov
pop
push
popa
bound
cmp
cld
or
or
mov
clc
sbb
aas
sbb
(bad)
sbb
adc
adc
stos
loope
add
adc
test
fs
adc
pusha
and
inc
popf
inc
inc
lods
cmp
outs
leave
inc
hlt
sbb
mov
sub
or
inc
sub
inc
adc
or
test
xchg
add
push
mov
(bad)
sbb
mov
(bad)
out
mov
ds
into
or
push
pop
jae
les
pop
inc
push
in
jmp
lds
push
shr
inc
ins
jbe
pop
nop
add
(bad)
pop
sub
push
jmp
(bad)
push
adc
sbb
add
push
popf
inc
dec
popa
gs
adc
les
add
add
pop
adc
stos
push
pop
adc
test
mov
adc
aaa
inc
or
cdq
dec
push
xor
cmps
adc
and
stc
aad
mov
add
mov
adc
mov
addr16
dec
mov
or
outs
in
jns
push
les
jl
or
xchg
jp
pop
scas
dec
fcom
cld
xchg
pop
sbb
adc
nop
or
dec
sahf
pushf
xchg
pop
stos
outs
fisttp
sbb
imul
sbb
mov
ror
sbb
or
jns
sbb
sbb
fwait
gs
test
pop
mov
ror
div
in
sahf
cs
push
dec
pop
mov
inc
aas
adc
inc
and
clc
aas
and
popf
adc
jne
aaa
int
push
not
test
or
mov
lods
push
and
xor
or
mov
test
dec
loope
ror
mov
and
inc
loopne
pop
pop
jae
jle
sub
popa
push
jg
outs
mov
mov
add
jmp
test
or
cs
dec
into
(bad)
xchg
sub
inc
or
(bad)
mov
sub
ret
or
add
outs
cmp
es
dec
or
sbb
jmp
aam
xchg
dec
pop
ins
inc
mov
or
fs
mov
push
call
or
fdiv
sar
or
push
scas
outs
mov
xor
sbb
xchg
sbb
mov
push
scas
cmp
pushf
push
dec
(bad)
mov
xor
inc
mov
xchg
sub
loopne
mov
inc
xor
dec
leave
add
add
adc
pop
sar
or
pusha
xchg
xor
inc
xchg
inc
mov
in
sub
adc
jl
nop
sub
out
lock
inc
js
xchg
add
loope
pusha
inc
inc
add
js
pushf
add
inc
(bad)
not
out
add
inc
dec
gs
sbb
out
inc
ds
mov
mov
inc
cld
out
inc
push
mov
pop
outs
xchg
dec
inc
pop
dec
dec
add
dec
push
jo
or
adc
dec
dec
add
add
dec
inc
add
dec
sub
add
dec
add
lea
jbe
fs
and
pop
pop
fs
and
or
jb
jecxz
xlat
sub
fs
mov
jb
fsubr
dec
jo
fs
mov
fs
inc
lea
fs
shl
sbb
fs
imul
xor
fs
ret
out
fs
or
daa
dec
push
fs
jb
fld
xchg
jb
fs
sti
sbb
fs
mov
aad
and
dec
mov
outs
xchg
mov
in
and
pop
in
sahf
cmps
ins
push
dec
jecxz
mov
jecxz
or
lock
and
dec
or
nop
data16
ror
das
sbb
mov
fs
das
mov
es
(bad)
xchg
push
das
mov
test
add
adc
xor
xchg
push
(bad)
enter
dec
dec
mov
shr
adc
cmp
inc
push
arpl
inc
ss
push
int
or
pusha
push
jnp
sub
push
or
popa
clc
push
gs
xor
add
cmps
sub
test
or
push
add
xchg
add
jnp
lods
(bad)
and
sub
addr16
or
sbb
clc
sbb
dec
gs
outs
ss
popa
aam
aad
push
mov
shl
cmp
sub
nop
jns
ins
ret
sbb
ud0
fs
push
dec
call
add
dec
inc
jl
sar
sub
jmp
adc
js
adc
test
inc
(bad)
cli
push
es
aaa
popf
into
ins
jbe
out
punpckhdq
mov
loope
add
cmp
pcmpeqd
inc
jae
sub
ja
jb
inc
out
out
pop
and
xchg
jbe
jns
in
mov
xchg
mov
stos
dec
cs
mov
cmp
xchg
push
pop
and
and
and
adc
popf
and
aad
rcl
jb
movs
frstor
pop
and
sub
xchg
enter
sub
push
leave
inc
sub
imul
xor
dec
mov
or
dec
scas
sub
mov
cmp
or
xor
inc
add
pop
(bad)
adc
test
and
scas
push
inc
jmp
mov
dec
das
or
xchg
pop
pcmpgtb
add
or
xchg
cmp
dec
cs
cmp
sub
mov
loope
push
xchg
sbb
loope
movs
pop
and
inc
dec
cdq
dec
mov
mov
add
xchg
loope
add
xor
push
xor
jb
dec
xchg
dec
xor
inc
and
xchg
les
sbb
or
inc
inc
inc
cs
push
inc
inc
(bad)
stc
sbb
sub
loopne
add
xchg
sub
jge
pop
test
mov
jnp
retf
cdq
add
mov
xor
enter
pop
jle
ror
in
in
jmp
jle
sar
enter
pop
jmp
addr16
enter
iret
out
adc
enter
aaa
pop
jge
enter
enter
cmp
enter
and
in
or
enter
pushf
(bad)
in
enter
adc
cmp
inc
fist
retf
stos
retf
icebp
popf
out
or
nop
sbb
xor
and
pop
mov
mov
push
mov
mov
inc
daa
rcl
mov
lods
(bad)
jbe
(bad)
neg
bound
push
xor
cli
clc
fidiv
push
push
jl
je
out
mov
and
push
int3
push
test
in
(bad)
fidivr
cld
push
aam
xchg
pop
clc
push
or
push
jl
out
repz
in
xchg
outs
es
inc
xor
sub
shr
push
jbe
push
sbb
inc
pop
add
add
shr
pop
inc
out
sbb
jmp
xor
and
push
inc
jne
je
outs
add
and
imul
das
nop
dec
dec
je
push
adc
popa
mov
add
sar
ins
hlt
push
movs
mov
mov
push
pop
es
loopne
in
lds
or
shl
push
push
push
pop
jo
jo
mov
mov
scas
add
push
inc
js
imul
push
in
mov
mov
push
push
mov
mov
xor
add
cmps
mov
inc
imul
xor
mov
sbb
fild
rol
dec
dec
add
mov
(bad)
pop
rol
mov
or
fidiv
or
mov
loop
test
mov
sub
inc
cdq
inc
sub
mov
dec
jo
add
push
dec
ins
popa
rol
shl
or
scas
clc
call
lods
gs
or
cmp
fdivp
jbe
je
push
push
outs
jo
or
int3
ins
adc
rol
push
or
mov
pushf
jbe
add
not
push
imul
and
call
jnp
rcr
push
push
les
aaa
sbb
dec
fiadd
add
mov
gs
inc
dec
mov
sbb
push
and
hlt
add
xchg
adc
lds
xchg
and
lea
xchg
dec
popa
jb
pop
popa
mov
adc
jae
pop
push
jno
push
ror
push
out
aaa
cmp
test
push
push
outs
jne
arpl
sbb
push
pop
pusha
add
xchg
sbb
inc
aam
add
test
mov
das
cmp
syscall
add
sbb
push
dec
aas
mov
or
ins
mov
xchg
mul
aaa
clc
pop
data16
sbb
or
pop
stos
ja
pop
adc
mov
rol
cdq
in
xchg
cmp
dec
clc
das
pop
mov
xor
pop
into
mov
mov
loopne
das
cs
loopne
cld
das
hlt
(bad)
push
jo
data16
sub
adc
push
rol
pop
xor
pop
int3
gs
jo
adc
jle
sbb
sub
add
adc
push
or
jae
or
pop
inc
ins
(bad)
outs
rcr
push
jo
push
push
push
(bad)
je
cdq
add
jl
fcmovb
popa
add
cli
inc
inc
test
cld
push
loopne
sahf
and
in
push
add
adc
pop
jo
call
sub
mov
push
xlat
adc
cmp
nop
imul
test
mov
adc
push
sbb
add
outs
fld
mov
add
push
fiadd
mov
and
mov
push
pop
inc
cmps
into
ins
adc
ins
movs
push
fcom
and
pop
fnsave
inc
inc
xchg
ins
or
mov
movs
push
adc
shr
nop
mov
dec
jo
js
cmp
lock
add
dec
add
aam
lods
push
adc
dec
and
gs
imul
inc
dec
mov
mov
inc
add
mov
adc
push
je
xor
cmc
xor
adc
sub
fadd
call
cmp
xchg
xchg
les
xor
rol
and
bound
es
js
popa
ins
xor
dec
cmp
or
jo
rcl
xor
jae
shr
pop
or
adc
push
xor
xchg
cmp
add
push
push
cmp
popa
push
push
adc
xor
mov
jns
ret
jmp
stos
cmps
ja
mov
push
loope
mov
push
add
(bad)
stc
(bad)
inc
in
clc
mov
push
mov
mov
push
shl
sub
jnp
or
push
sub
test
add
inc
clc
jo
sbb
xchg
cmps
or
jmp
aaa
xor
ror
inc
aaa
daa
fidiv
push
sbb
jmp
add
pop
dec
fmul
xchg
jge
outs
add
and
cmp
lahf
ins
add
sbb
ficom
movs
test
ja
push
pop
ins
add
or
and
mov
and
push
add
or
sbb
sbb
mov
sbb
add
pop
jp
dec
gs
fwait
inc
scas
or
xor
int3
clc
mov
mov
and
jge
punpckhbw
jmp
stos
stos
lds
cmc
out
call
test
adc
xlat
dec
in
pop
or
int3
popf
pusha
or
cmp
mov
jmp
mov
inc
jmp
(bad)
ficom
cmps
or
jb
mov
movs
sbb
mov
call
mov
cmps
daa
fadd
mov
ficom
mov
pop
mov
pop
xchg
push
mov
or
lea
jae
adc
xchg
call
mov
mov
scas
scas
dec
mov
loopne
cdq
add
sbb
in
ins
add
pop
push
mov
push
and
sahf
fisttp
mov
xchg
pop
sbb
popa
lock
data16
or
outs
adc
shl
nop
add
and
jecxz
add
dec
mov
jl
add
push
and
inc
mov
mov
or
popa
ins
adc
pop
fadd
adc
xor
adc
loope
loopne
out
ror
enter
pop
data16
add
mov
push
sbb
jo
sub
add
push
test
push
ja
cmp
adc
ja
add
lods
scas
xchg
or
or
dec
sbb
stos
add
pop
test
loop
(bad)
lahf
push
mov
pop
ret
xchg
and
and
and
inc
add
add
sahf
fild
xor
sahf
fbld
pop
add
cmp
inc
pop
and
push
cmp
push
and
scas
outs
pusha
fldcw
add
or
and
sub
sub
mov
pusha
xor
test
push
aaa
sti
and
jo
sti
das
xor
test
stos
sti
xchg
pop
adc
xchg
xor
inc
push
fisubr
call
aaa
lock
xchg
mov
dec
leave
push
xor
jg
aaa
and
cmp
inc
add
into
sar
inc
sub
xchg
ds
or
add
aaa
loopne
mov
add
adc
inc
inc
add
add
inc
inc
push
leave
add
inc
inc
popa
aad
or
inc
mov
and
adc
dec
xchg
loop
or
inc
mov
cmc
pop
add
inc
inc
cs
mov
inc
inc
fild
inc
inc
jno
mov
inc
push
push
das
push
jnp
inc
inc
inc
pushf
ret
pop
inc
inc
inc
cs
push
inc
inc
in
or
push
inc
inc
inc
inc
jns
mov
inc
or
sub
inc
inc
inc
inc
popf
(bad)
jmp
or
inc
xor
fwait
cs
inc
inc
mov
inc
inc
inc
inc
pop
and
adc
push
push
inc
push
mov
je
mov
lahf
xchg
or
push
sbb
sub
inc
sar
fdivr
jmp
push
jg
adc
les
pmaxub
scas
shr
mul
jl
enter
inc
jle
jg
jp
sbb
pushf
mov
repnz
or
sbb
iret
fs
push
jmp
aam
mov
inc
sbb
adc
or
ins
loop
scas
lds
push
test
inc
jae
ficom
lock
pop
mov
(bad)
mov
and
mov
mov
push
call
push
inc
push
push
sahf
inc
push
push
fdiv
adc
lods
xor
cmc
push
andnps
cmc
repz
pop
les
clc
aaa
(bad)
xchg
adc
gs
cmp
lock
push
cmp
sbb
pop
or
mov
and
and
movs
scas
adc
mov
pop
adc
cmove
in
scas
add
add
or
pop
movs
jne
xlat
pop
sbb
pop
inc
xor
mov
sub
and
mov
rcl
inc
and
cmp
test
or
and
xor
mov
inc
cs
jne
sbb
loop
adc
push
mov
and
push
push
add
int3
cwde
(bad)
in
sbb
shl
and
xchg
jb
shl
ins
xor
sbb
sbb
push
jb
sbb
pusha
daa
mov
sbb
jge
(bad)
in
xor
xchg
jo
nop
push
rcl
add
ret
fadd
out
dec
xchg
sbb
pop
sbb
add
es
in
nop
dec
cdq
mov
xor
call
or
mov
leave
add
nop
sbb
sub
xchg
mov
dec
es
mov
sub
sub
xor
xchg
mov
sub
and
add
add
add
aas
mov
adc
add
outs
cwde
xchg
inc
inc
jmp
adc
push
inc
inc
inc
inc
je
mov
inc
add
dec
outs
inc
inc
inc
inc
nop
scas
fdivr
inc
inc
cs
and
push
js
cs
inc
inc
(bad)
push
sub
inc
inc
dec
outs
xchg
mov
fadd
inc
inc
inc
jae
mov
inc
(bad)
and
inc
outs
inc
inc
inc
inc
xchg
mov
pop
inc
cs
pmulhuw
sbb
sbb
inc
mov
idiv
aam
adc
aam
inc
push
test
cmovo
test
sbb
(bad)
pusha
mov
nop
les
pop
fld
mov
ret
xchg
inc
add
inc
dec
mov
xor
push
or
push
popa
imul
mov
and
lea
add
lods
mov
bound
repnz
mov
pushf
inc
or
mov
fstp
mov
leave
push
jb
xchg
adc
push
jecxz
inc
pop
addr16
xchg
stos
sbb
mov
push
push
xchg
pop
mov
addr16
xchg
pusha
inc
xchg
rcr
jb
ret
daa
xchg
sbb
push
pop
and
and
and
and
cs
mov
or
dec
es
ror
sub
dec
xchg
bound
xchg
mov
pop
push
sbb
mov
pop
ins
fwait
sbb
add
bound
xchg
fwait
jecxz
nop
and
xchg
inc
xor
fwait
xor
and
aaa
xor
xchg
cmp
arpl
xor
cmp
push
mov
jmp
xor
cmp
add
ret
adc
add
cli
jo
fs
mov
stc
fs
sbb
cmp
fs
fs
pop
js
in
fs
in
sbb
inc
fs
mov
fs
neg
and
arpl
test
in
sbb
jb
fs
icebp
adc
fs
arpl
xlat
sti
and
icebp
inc
cmp
test
or
push
arpl
inc
add
adc
call
push
push
or
pusha
(bad)
mov
mov
push
les
pop
lock
add
jl
pop
dec
int3
addr16
add
cmp
pop
mov
xchg
push
es
add
mov
sub
and
arpl
mov
shl
push
sub
ret
ins
mov
mov
enter
scas
mov
mov
int3
jo
mov
pop
jnp
fadd
aam
mov
adc
outs
mov
add
add
arpl
scas
lds
inc
adc
xchg
push
or
imul
cli
add
dec
dec
pop
pushf
popa
js
push
or
mov
jp
jg
jnp
sub
or
push
dec
inc
popa
jecxz
(bad)
fs
push
or
push
ins
popa
test
push
stos
dec
clc
loope
rcr
mov
or
je
sub
(bad)
(bad)
retf
outs
sbb
shr
in
out
lock
add
inc
pop
add
adc
sub
(bad)
lods
jmp
mov
je
pushf
int3
sbb
icebp
pusha
lock
push
xchg
inc
xchg
adc
fist
push
mov
outs
mov
pop
movs
mov
bound
inc
popa
ins
jae
or
js
int3
pusha
jno
call
xchg
or
inc
mov
ficomp
mov
fsubr
aas
aas
sub
scas
mov
push
sub
adc
adc
adc
add
inc
and
add
push
xchg
dec
inc
or
push
jb
pop
sbb
and
js
mov
adc
(bad)
(bad)
(bad)
inc
adc
bndldx
aaa
in
icebp
cmps
jg
cmp
dec
or
inc
test
repnz
jmp
cmp
sbb
(bad)
xlat
add
(bad)
clc
mov
and
ret
or
jb
arpl
xor
and
adc
sbb
test
and
aaa
adc
add
je
pop
push
dec
add
jnp
mov
and
inc
or
sbb
and
mov
mov
outs
je
outs
pop
(bad)
pop
in
sbb
or
sub
dec
cs
sub
adc
pop
push
sbb
in
sbb
addr16
dec
scas
xchg
stos
sub
cdq
das
xor
inc
adc
jns
pusha
xchg
add
add
fwait
or
pop
dec
aaa
sbb
mov
(bad)
mov
inc
add
cmp
mov
int3
mov
add
and
mov
clc
cdq
or
and
xchg
sub
and
mov
and
xchg
sub
and
and
cld
and
and
ins
(bad)
mov
and
sub
and
nop
mov
dec
popa
or
mov
lahf
mov
pop
inc
ficomp
xor
fiadd
push
and
addr16
xchg
iret
jne
mov
mov
inc
pushf
adc
push
call
or
nop
mov
add
lock
out
(bad)
clc
loopne
pop
icebp
push
cmps
adc
in
call
mov
add
es
dec
outs
outs
imul
xor
daa
push
push
or
shl
popa
mov
and
pop
int
ja
inc
pushf
test
adc
inc
cmp
xor
jns
inc
and
xchg
dec
test
cs
push
pop
inc
fcom
pop
mov
in
jmp
sub
add
pop
mov
xchg
push
mov
push
sti
add
xor
pop
cdq
std
loope
or
andps
pop
scas
(bad)
inc
dec
pusha
(bad)
out
xchg
pop
inc
or
jae
mov
arpl
pop
inc
or
xchg
and
jnp
jnp
inc
es
in
cmp
pop
iret
pushf
push
iret
xchg
sbb
push
iret
mov
dec
lock
ss
mov
mov
add
pushf
cs
cmp
aam
xchg
mov
jge
jne
scas
push
push
mov
push
dec
stos
dec
enter
mov
add
xchg
loope
sub
cmps
rcl
or
mov
or
push
push
ins
imul
mov
jo
cs
and
das
inc
cs
repnz
dec
mov
dec
pop
xchg
add
push
dec
sar
push
lds
in
adc
adc
in
in
inc
int3
add
pop
add
add
sbb
dec
pop
fadd
adc
cmps
and
jl
mov
push
fs
inc
movs
push
push
mov
in
dec
cmps
mov
in
pop
scas
stc
cmp
xor
xor
or
hlt
data16
jns
ins
adc
jb
aas
mov
mov
sub
sahf
shl
or
ja
(bad)
das
sbb
daa
xchg
inc
gs
outs
jns
add
jno
jnp
add
(bad)
adc
pop
pop
cmc
and
sub
cld
jmp
outs
or
add
out
jno
fwait
popf
sbb
pop
mov
jle
les
out
push
outs
shr
in
out
mov
and
(bad)
sbb
movs
pop
push
mov
lods
push
out
push
(bad)
aas
inc
push
pop
lahf
mov
adc
push
push
inc
mov
imul
sbb
lods
add
sbb
imul
popf
pop
push
xchg
lods
ds
add
clc
mov
add
or
push
push
loopne
pop
cmp
xor
pop
cmp
loope
fwait
scas
es
push
enter
sub
jbe
push
mov
push
push
fisttp
call
nop
push
ja
scas
mov
adc
retf
ins
outs
jo
mov
shl
jo
ja
adc
xor
jbe
aaa
(bad)
out
xchg
bound
push
add
jns
or
cmps
cmp
xchg
iret
cmp
aad
iret
dec
mov
and
cwde
scas
xchg
mov
scas
ja
shl
push
add
cmp
call
adc
ins
fs
dec
repz
(bad)
mov
outs
and
jecxz
inc
push
(bad)
daa
mov
add
sub
mov
add
outs
call
loopne
sub
scas
fadd
dec
mov
add
sbb
adc
adc
and
je
cmp
push
test
ret
push
les
clc
lods
jo
adc
adc
push
adc
mov
sbb
add
or
mov
cmp
or
push
push
cmp
adc
loop
pop
ret
adc
retf
cmp
push
shr
fadd
(bad)
mov
enter
push
ror
das
dec
ss
push
ficom
cmp
sbb
icebp
push
into
add
mov
push
add
push
adc
push
ror
imul
or
mov
add
pop
dec
pop
mov
loope
sbb
mov
jo
punpckhdq
push
mov
ret
mov
push
lock
(bad)
cmp
inc
xor
cmps
cmp
lods
dec
cwde
cmps
adc
xor
xchg
popa
mov
lds
pop
movs
or
xlat
dec
or
push
cmp
loopne
shl
mov
das
push
push
xor
clc
clc
dec
addr16
imul
sbb
push
push
jl
cmp
push
ins
(bad)
fdiv
push
in
sub
push
and
mov
and
shr
in
cs
test
jge
shl
ss
adc
push
shl
adc
push
sub
dec
sub
aam
iret
or
sub
pusha
mov
or
push
pusha
cmps
mov
fsubr
cmps
sub
repz
mov
in
push
push
sub
lahf
mov
sbb
and
dec
mov
test
add
fmul
mov
add
jb
outs
addr16
and
fisubr
out
mov
add
arpl
inc
sbb
(bad)
dec
add
add
sar
xor
add
je
add
rol
mov
xlat
imul
pop
ja
pop
mov
mov
jl
push
test
je
cmp
mov
or
mov
mov
xor
mov
sbb
pop
mov
fiadd
cs
pusha
mov
mov
mov
jbe
mov
mov
fucomi
push
and
adc
mov
call
test
je
mov
and
or
mov
cmp
or
(bad)
jbe
fs
call
sub
ret
loopne
mov
jbe
add
mov
aam
jb
xchg
pop
retf
mov
outs
(bad)
adc
mov
inc
daa
lock
jge
xchg
les
in
xchg
int3
xor
mov
cmp
adc
inc
mov
xor
mov
inc
xor
mov
mov
dec
cmp
sbb
cdq
mov
js
push
push
or
push
lea
loopne
sti
cmp
in
jbe
ss
jg
lea
pop
mov
call
lock
adc
aam
mov
pop
ret
push
ja
and
xor
icebp
mov
mov
test
fnstsw
pop
inc
sbb
push
xor
add
das
cmp
outs
nop
lahf
or
in
(bad)
ins
xor
mov
add
icebp
scas
fisttp
shr
inc
jmp
out
add
or
xchg
mov
cld
adc
cmp
add
add
cmp
and
cld
cmp
jne
adc
pop
cdq
call
jmp
mov
jo
cmp
je
adc
sbb
je
test
jae
in
loopne
js
ins
mov
xor
or
sub
inc
pusha
mov
aaa
sbb
lock
loope
dec
lods
xchg
jo
out
add
jg
in
nop
push
aad
in
xor
jae
shl
push
hlt
into
lock
movs
add
test
test
cmp
pop
and
inc
in
mov
push
mov
in
(bad)
xchg
xor
mov
pop
lds
int3
cmp
or
call
jae
fdivr
clc
jle
in
adc
js
setg
(bad)
jbe
cwde
or
test
outs
and
and
xlat
and
iret
pusha
cmp
clc
cmp
jne
dec
outs
test
lea
pop
pop
pop
push
dec
in
mov
fwait
ret
fwait
je
jle
sub
shr
or
clc
and
pusha
xor
xchg
clc
cli
pop
sub
add
inc
lock
add
js
mov
clc
int3
xchg
inc
or
retf
sbb
pop
adc
or
sbb
push
mov
ror
jmp
jmp
lods
cmp
stos
dec
and
add
in
mov
pop
jmp
shl
mov
or
push
call
stos
test
push
stc
push
push
push
call
pop
xor
test
pop
push
fldenv
dec
pop
inc
xor
and
dec
cmc
cmp
cwde
push
ins
xlat
cwde
push
in
mov
fidiv
and
xchg
and
je
jmp
or
or
stos
mov
push
loopne
jl
loope
mov
aam
push
fs
loopne
jmp
xor
mov
js
or
add
pop
(bad)
mov
loope
push
jmp
adc
adc
dec
jne
dec
cmps
sbb
movzx
iret
pop
js
inc
and
or
jg
xchg
je
lea
lea
jmp
adc
pop
mov
and
sbb
jmp
lds
dec
pop
add
pop
sub
(bad)
in
or
mov
sub
jmp
and
stc
jns
adc
sbb
xor
adc
and
imul
popf
add
aas
lds
outs
aad
mov
test
loope
fbld
repnz
sbb
js
xchg
out
push
in
imul
mov
pusha
cs
mov
pop
or
addr16
loopne
push
xor
pusha
sti
or
push
outs
lds
stos
cld
mov
je
mov
xor
js
mov
lds
std
inc
(bad)
push
push
or
ficomp
cmp
loopne
push
in
jle
inc
pop
sub
jl
cmp
lock
dec
push
cmp
sbb
ret
shr
push
mov
xchg
mov
adc
xchg
pop
addr16
stc
rcr
btc
aas
push
not
nop
daa
je
shufps
stc
(bad)
fsub
cld
sti
mov
add
mov
je
xchg
or
sbb
and
mov
sbb
and
loopne
mov
aas
out
inc
stos
lock
xchg
les
fdiv
or
push
jo
ret
fist
fist
add
mov
shl
ficom
movhps
add
sar
xchg
lds
sbb
out
je
mov
mov
retf
adc
or
or
mov
or
xor
inc
xchg
ss
cmp
mov
adc
jne
lds
adc
leave
mov
xor
ror
cmp
xor
push
xor
mov
nop
push
out
dec
adc
jmp
push
mov
popa
push
cmp
out
push
mov
inc
lea
push
dec
cmp
xor
je
test
je
mov
jp
pop
cdq
mov
sbb
cmp
sub
mov
popf
add
pop
mov
xor
jmp
js
push
or
mov
mov
adc
inc
sbb
and
sbb
adc
cmp
jo
mov
out
or
sar
das
mov
inc
and
adc
mov
mov
je
mov
(bad)
repz
mov
ret
es
sbb
mov
mov
adc
shr
sub
pop
add
sbb
popf
sbb
add
mov
adc
inc
adc
fadd
cmp
inc
and
nop
in
in
ror
or
push
add
call
add
push
mov
fmul
push
add
clc
(bad)
push
mov
iret
or
pop
xor
lds
push
enter
xor
out
stc
(bad)
mov
in
imul
pop
pop
jno
xchg
jecxz
mov
(bad)
frstor
add
mov
bswap
mov
mov
cmovb
push
into
cmp
fadd
sub
movhps
popa
mov
mov
outs
mul
jecxz
cmc
xchg
mov
outs
seta
imul
xor
sbb
mov
inc
sbb
mov
sbb
sahf
sbb
out
lahf
cmp
xor
js
rcl
push
jge
and
test
addr16
ja
mov
(bad)
jne
mov
pop
push
out
daa
loope
ror
mov
xchg
push
pushf
data16
(bad)
add
mov
pushf
ret
push
push
jnp
(bad)
push
xor
push
lock
jbe
pop
(bad)
sbb
rcl
lea
push
cdq
and
push
es
pop
sub
es
and
out
jle
xor
fisub
xchg
call
xchg
not
icebp
cmp
mov
cmp
ror
bswap
sbb
out
out
pop
dec
sub
or
loopne
jnp
push
jecxz
inc
and
pop
mov
mov
pop
ror
not
cmp
sub
inc
imul
cmp
das
sub
cwde
pop
call
movs
add
mov
jae
mov
pop
push
or
std
mov
xchg
sub
sub
or
rcl
cmps
add
imul
rol
xor
iret
and
scas
inc
pop
and
add
aaa
add
mov
aaa
inc
shl
ss
scas
je
hlt
(bad)
stc
aas
(bad)
shr
adc
add
pushf
add
adc
movs
jecxz
daa
test
add
dec
and
hlt
xor
inc
cmp
jg
dec
push
call
call
cld
pop
inc
adc
inc
into
fwait
xrelease
(bad)
jbe
ja
ret
jmp
(bad)
push
ret
adc
adc
push
push
mov
aas
icebp
inc
or
(bad)
mov
call
and
rol
cld
mov
test
adc
sbb
jl
clc
(bad)
(bad)
into
add
mov
pusha
mov
nop
mov
stos
lock
and
jge
ds
lock
push
dec
(bad)
loopne
addr16
push
(bad)
movzx
and
sar
jns
fistp
rcl
cmp
je
or
inc
je
cmp
mov
dec
ror
mov
or
movs
xchg
sub
inc
push
push
inc
fdiv
es
clc
mov
pop
lds
sub
shl
and
lahf
inc
lea
add
or
sbb
pop
push
into
mov
fimul
dec
jne
push
and
jg
add
inc
adc
lds
cs
inc
les
jb
cmp
jo
ret
add
push
push
xor
jg
adc
push
mov
push
cmp
jg
je
sub
je
or
adc
je
jmp
and
sar
loopne
imul
push
mov
in
fldenv
adc
mov
adc
enter
xor
add
shr
adc
cmp
data16
xor
imul
sti
and
hlt
ficomp
xor
sub
nop
xor
movs
call
popf
adc
inc
test
inc
cwde
mov
nop
jle
cmp
jnp
adc
sub
push
jns
loope
jne
jle
in
aaa
fisttp
aam
jg
rcl
jl
push
add
pop
mov
jg
push
cmp
mov
retf
rcl
push
adc
out
cmp
cli
add
mov
ret
push
add
add
(bad)
lahf
inc
(bad)
jbe
and
jae
outs
ins
jg
add
stos
cs
(bad)
jmp
fs
ins
or
xor
outs
je
enter
add
add
xchg
clc
pop
pop
icebp
mov
lock
ins
push
adc
or
fwait
cmp
std
sbb
int3
inc
push
test
cmp
jnp
fs
cmp
faddp
call
push
add
push
daa
shl
aaa
or
add
push
sbb
add
fiadd
test
jo
add
push
inc
add
test
cmp
aam
push
lods
sbb
push
loopne
int
inc
or
inc
arpl
arpl
pop
push
and
ins
adc
and
adc
mov
mov
or
or
out
xchg
push
ja
inc
cli
enter
mov
mov
mov
pop
or
xchg
into
add
jae
hlt
pop
and
dec
jne
daa
retf
movs
(bad)
jno
(bad)
nop
push
xor
xor
fs
push
mov
xchg
push
imul
jo
mov
mov
(bad)
call
aad
pop
es
cmp
je
(bad)
jmp
idiv
or
sub
cmp
jmp
test
jne
movzx
fdiv
xor
aaa
sub
xchg
cmp
add
jl
dec
fwait
add
aad
inc
pop
push
push
lea
aam
ins
lahf
lock
mov
fdivr
shr
sbb
mov
scas
lea
add
inc
test
sti
mov
mov
mov
or
sub
or
mov
in
or
and
sub
repnz
mov
(bad)
enter
sbb
and
sbb
sbb
mov
mov
cmp
xchg
pop
adc
add
push
jg
or
cmps
ds
add
test
adc
rol
add
pusha
(bad)
mov
js
je
mov
add
inc
add
mov
mov
add
inc
lods
jl
out
mov
mov
fisub
add
pop
jmp
in
add
int3
sub
daa
push
push
in
popa
lock
mov
cmp
in
mov
lds
cmp
pop
dec
mov
adc
push
addr16
nop
xor
mov
je
rcl
cmps
or
jo
adc
pusha
mov
sbb
(bad)
aam
fwait
leave
mov
cmp
je
inc
cmp
xor
and
add
jae
mov
dec
fs
enter
dec
push
retf
aaa
pop
adc
(bad)
aas
pop
adc
test
loope
mov
(bad)
sub
(bad)
jmp
ds
paddusb
sbb
adc
outs
mov
dec
mov
rdpmc
clc
and
dec
outs
adc
outs
sub
jnp
cmp
sub
dec
mov
je
stc
or
xchg
jge
sub
adc
cmp
call
icebp
cmp
inc
fbld
cmp
jnp
push
loop
mov
xor
imul
mov
xchg
and
cmp
jle
pop
das
lock
test
cld
ret
add
sti
add
inc
cmp
push
add
sar
fist
xchg
mov
stos
jle
add
into
data16
adc
xchg
test
pushf
cmp
or
xor
inc
sub
je
sub
sub
cmps
sbb
test
mov
fwait
pop
mov
mov
pop
push
sbb
push
push
dec
cmp
dec
movs
mov
jne
mov
sti
add
xchg
je
fld
inc
pop
dec
pop
nop
jge
pop
ja
imul
adc
xor
pop
lock
jno
jl
dec
adc
add
mov
iret
and
inc
sub
push
push
xor
push
pop
push
push
and
mov
mov
mov
(bad)
sbb
es
jbe
adc
push
inc
cli
and
pop
sub
jne
push
test
js
or
adc
and
push
imul
ja
movs
mov
jp
add
cmp
(bad)
(bad)
mov
mov
ds
inc
pop
nop
out
adc
or
xchg
aas
inc
xchg
outs
test
sbb
adc
hlt
mov
adc
ret
jbe
mov
(bad)
sub
add
shr
iret
xor
sbb
push
cdq
jle
adc
rcr
xor
add
loopne
addr16
pop
and
out
test
int3
cmc
mov
in
add
push
cmp
aaa
jns
iret
add
xor
dec
xor
jecxz
adc
dec
inc
cs
add
cs
ds
push
ror
pop
cmp
add
jbe
mov
inc
and
in
or
popf
xor
or
adc
mov
dec
cmc
push
mov
adc
add
les
hlt
stos
int3
jne
lea
xor
stos
int3
ficom
sub
push
ds
or
jo
cs
sbb
movzx
fnsave
les
jl
jne
push
mov
fmul
test
repnz
retf
xchg
mov
mov
or
cmps
xor
bound
add
or
aas
(bad)
stos
pop
fdiv
test
loop
mov
iret
je
retf
mov
jge
pop
lock
(bad)
dec
push
push
add
xlat
pusha
daa
pushf
add
push
outs
lods
psrad
add
shl
test
sbb
add
stc
dec
les
sbb
or
jbe
push
dec
jo
rcr
ficom
mov
xor
test
cmp
or
cmps
add
sar
sub
sahf
sbb
xor
ja
adc
or
push
pop
test
jl
dec
fdiv
nop
inc
and
jl
stos
imul
mov
je
pop
pop
dec
pop
dec
and
adc
aaa
sbb
push
cs
add
and
adc
cmp
sbb
and
pusha
sbb
mov
dec
or
stos
sub
sti
loop
xor
inc
and
or
js
adc
(bad)
out
push
lods
dec
adc
cmp
ins
adc
sub
add
push
dec
or
retf
add
xchg
mov
rol
or
pop
fucomip
cmp
mov
aas
xor
fcom
add
push
jecxz
xor
daa
loopne
call
or
loopne
xor
pushf
ins
pop
jg
inc
loopne
(bad)
add
or
(bad)
loope
cvtpi2ps
arpl
dec
cld
or
sub
cwde
mov
add
hlt
je
sub
sbb
je
or
sbb
add
(bad)
pushf
lods
push
mov
or
pop
mov
or
iret
adc
or
sub
iret
dec
sbb
xchg
sbb
mov
loopne
push
add
inc
mov
rcl
dec
xchg
adc
(bad)
repz
cmp
jecxz
add
pop
mov
inc
xor
mov
jno
adc
cld
ds
mov
inc
and
int
inc
imul
hlt
cmp
mov
or
mov
push
add
lock
out
or
mov
adc
adc
jge
and
add
jle
inc
es
push
inc
add
dec
aaa
mov
fld
sbb
mov
cld
and
push
jle
adc
dec
cmp
mov
lahf
lods
test
je
and
jb
aaa
xchg
push
add
sub
push
neg
and
bound
push
outs
push
add
icebp
adc
sbb
mov
and
or
xchg
sbb
dec
mov
leave
mov
and
pop
test
add
cmp
mov
adc
cs
repz
mov
and
(bad)
push
mov
dec
push
or
xor
out
mov
sti
push
inc
loopne
(bad)
cmp
and
mov
jno
ret
in
std
xchg
jnp
and
stc
scas
push
adc
popa
pusha
arpl
mov
pushf
shl
lods
xor
push
dec
aas
xchg
and
and
jmp
add
add
sbb
sub
dec
dec
cmp
fsubr
sub
adc
icebp
adc
test
mov
adc
cmp
cmp
push
jno
add
pop
enter
arpl
into
cmp
xor
mov
out
(bad)
syscall
clc
jbe
icebp
cmp
dec
or
sub
rcr
std
and
fs
and
mov
adc
adc
lock
movs
jp
scas
adc
pop
aaa
pop
push
mov
in
add
jp
sbb
inc
pushf
retf
cmp
push
mov
ins
fisttp
cwde
data16
adc
inc
jo
mov
dec
xchg
push
dec
mov
xlat
and
mov
neg
push
inc
pop
inc
sub
movs
add
push
fldenv
jmp
adc
or
fsub
mov
mov
lock
iret
icebp
sbb
adc
mov
pop
int
retf
and
ins
loope
push
jnp
mov
and
cmp
push
push
and
js
loope
mov
in
and
mov
or
mov
add
push
cmps
mov
fbld
shl
sbb
aaa
test
js
adc
jo
ret
les
xor
or
std
push
or
pop
pop
sub
call
bound
sub
jmp
mov
test
push
xor
add
cli
cmp
pusha
push
je
jmp
sbb
jne
movzx
pushf
(bad)
dec
out
sub
loopne
popa
mov
loopne
mov
adc
loope
push
pop
sub
jb
inc
jmp
xor
mov
test
lock
add
or
inc
mov
into
xchg
dec
popa
pop
inc
in
das
or
dec
mov
out
sbb
inc
add
jecxz
xchg
cmps
out
sti
add
enter
xchg
jae
sub
inc
das
mov
and
dec
adc
mov
mov
xchg
pop
pusha
or
or
or
dec
pop
pop
rcl
or
call
or
mov
bnd
(bad)
in
ja
sub
push
dec
je
add
jmp
cmp
je
mov
int3
fisub
jg
sbb
sbb
and
sbb
sbb
imul
aad
mov
add
or
cmp
push
shufps
inc
popa
dec
stos
lock
popa
enter
sub
sbb
mov
xchg
lock
mov
loope
cld
adc
adc
(bad)
in
sbb
lods
jp
sbb
scas
clc
sub
mov
cmp
sbb
cmp
inc
mov
sbb
xor
fisttp
dec
(bad)
push
and
sbb
add
jnp
and
cmp
aam
mov
fsub
stos
jae
cld
mov
lahf
mov
js
sub
adc
push
add
sbb
cmp
jne
mov
xor
adc
or
add
mov
daa
mov
icebp
hlt
mov
cmps
push
jmp
push
jp
mov
sub
mov
repz
xchg
and
clc
pop
les
adc
xor
cmp
sbb
lds
aaa
xchg
leave
and
dec
push
popa
inc
dec
int3
mov
in
mov
sub
add
cmp
ret
outs
dec
sbb
dec
daa
inc
popa
mov
sbb
sti
sbb
push
mov
call
push
popf
mov
test
clc
or
aas
sub
jmp
mov
or
push
aaa
mov
adc
scas
hlt
ja
pop
addr16
nop
pop
test
(bad)
hlt
mov
push
pop
push
sti
call
and
jp
lds
fcomp
pop
pop
push
bound
or
or
sbb
cmc
sub
clc
mov
enter
ins
dec
stos
cwde
shl
cmp
ins
aas
ins
mov
data16
ins
aaa
lods
(bad)
adc
sub
je
in
ss
mov
nop
xchg
push
inc
xor
push
jmp
and
test
dec
addr16
pop
mov
dec
mov
loopne
cmp
xor
xor
push
push
push
push
pop
pop
daa
cmp
inc
stos
mov
sub
push
or
out
xchg
sub
je
cmp
nop
data16
fisttp
push
cmp
cwde
sbb
adc
xor
push
dec
pop
addr16
mov
cmp
jae
push
dec
sbb
mov
add
adc
nop
push
ss
and
push
xchg
xor
add
jg
xchg
fwait
shr
push
pop
pop
sbb
push
sbb
mov
add
lock
adc
rcl
push
(bad)
out
add
ins
add
jmp
jnp
jo
cmp
nop
sub
xchg
or
cwde
ret
push
sbb
and
dec
sahf
popa
mov
fld
xor
outs
xlat
cmp
lods
cmp
je
ss
mov
mov
(bad)
inc
jne
add
add
into
ret
rcr
iret
push
enter
xor
xchg
adc
cmp
pop
lea
xor
inc
mov
ret
sub
call
xor
aam
ret
mov
adc
lock
or
adc
loope
jmp
and
sbb
repnz
jns
inc
inc
aam
push
(bad)
adc
and
xchg
nop
xchg
enter
dec
outs
and
cmp
mov
js
movs
inc
lods
mov
shr
or
js
adc
xor
sub
xchg
push
daa
add
int
fistp
fmul
test
push
push
cld
test
je
mov
or
cwde
xor
xor
xchg
dec
jne
hlt
nop
cmps
add
sub
pushf
arpl
or
mov
fwait
adc
hlt
sub
fldl2t
mov
inc
mov
inc
sti
cmp
sbb
fdiv
fs
add
dec
sub
adc
pop
dec
mov
add
xchg
rcl
aam
jmp
cmp
jle
cmp
adc
mov
push
cmp
scas
cmp
or
xor
or
hlt
sub
cmp
ret
pop
sub
shl
sub
jmp
mov
sub
mov
pop
mov
arpl
addr16
aaa
(bad)
ins
adc
jne
sbb
mov
jl
dec
add
test
jmp
and
popf
rol
in
or
imul
daa
sbb
add
push
sbb
dec
cs
loopne
and
add
pop
add
and
mov
nop
and
das
xor
cmc
lea
adc
sub
xor
xchg
and
inc
or
add
cmp
cwde
xor
push
or
fldcw
cmp
loopne
cwde
retf
cmp
mov
aas
mov
push
pusha
jg
push
xor
add
pop
iret
pusha
(bad)
fwait
push
mov
outs
cdq
and
jne
int3
or
pop
and
xchg
icebp
add
nop
or
sub
mov
xchg
(bad)
sbb
mov
push
push
fcos
loope
add
das
adc
lods
cmp
sub
mov
jae
sbb
jne
ror
leave
or
adc
pop
das
push
push
sbb
scas
lahf
sahf
add
xor
xor
add
out
rcr
or
(bad)
setp
inc
cdq
out
aaa
mov
fcomip
das
es
adc
cmp
jne
mov
mov
scas
mov
(bad)
fwait
adc
pop
inc
jns
cmps
std
es
call
push
rol
imul
loopne
push
mov
jne
add
movs
mov
sbb
cwde
sbb
sbb
cmp
adc
or
sbb
jmp
inc
ret
popf
in
addr16
push
adc
jmp
jg
add
xchg
xlat
pop
jmp
pop
int3
popa
popa
inc
enter
dec
xor
xchg
cmps
adc
inc
adc
cmps
mov
clc
inc
cmp
jne
mul
mov
mul
adc
xchg
loopne
sub
ret
lea
push
adc
xor
sub
mov
sbb
es
lea
sub
mov
dec
mov
jmp
push
loopne
and
in
mov
pop
fnstsw
adc
movs
out
movs
fucom
sub
mov
adc
cs
pusha
mov
inc
adc
pop
push
cmp
or
jge
stos
inc
mov
push
mov
mov
push
push
jp
(bad)
jmp
and
sbb
mul
add
call
in
or
and
mov
or
ins
in
adc
inc
shr
cmp
test
pop
fadd
sub
cdq
idiv
or
sbb
imul
push
inc
imul
fwait
and
push
in
aas
in
sbb
sub
push
inc
lods
imul
xor
inc
pusha
lods
xor
xchg
ss
std
mov
cwde
shl
inc
xor
sahf
pop
pop
mov
js
mov
inc
jle
sbb
xchg
jo
xchg
jmp
outs
stos
rol
add
fadd
mov
mov
inc
inc
loopne
int3
(bad)
cmp
lds
jb
push
push
add
jp
sti
(bad)
(bad)
mov
push
inc
jne
je
ins
inc
push
outs
js
dec
bound
jb
add
(bad)
in
jg
fs
cmp
and
dec
outs
je
enter
rol
aas
xor
or
arpl
je
inc
je
ins
jae
loope
mov
shl
inc
pop
adc
int
adc
jmp
stc
fsubp
std
int3
cmc
(bad)
inc
or
push
fstp
rcr
add
adc
xchg
mov
mov
in
push
daa
mov
mov
push
push
add
test
sbb
les
mov
jle
cmp
add
inc
add
test
gs
pop
xor
add
arpl
cmp
pop
pop
jae
shr
and
xchg
in
adc
xchg
push
inc
or
outs
rcl
inc
pop
mov
jno
or
mov
leave
mov
cmps
aam
adc
push
(bad)
xchg
ror
add
jae
and
adc
jmp
sbb
mov
or
add
test
inc
add
inc
call
xchg
popf
pusha
jmp
jg
leave
je
ins
mov
mov
cmp
out
(bad)
call
not
(bad)
cmp
mov
sete
out
cwde
mov
pusha
in
std
adc
jmp
mov
pop
jl
dec
fwait
add
cdq
jmp
test
repnz
out
add
fild
sbb
jae
xor
mov
mov
mov
jmp
fisub
jb
sub
xor
sub
(bad)
pop
or
add
stos
jno
jmp
test
int3
and
das
add
and
sbb
wbinvd
push
adc
adc
and
mov
repnz
inc
(bad)
cs
add
push
cmp
add
cmovb
pusha
cmp
bound
sub
nop
cdq
nop
orps
xchg
outs
je
mov
sbb
syscall
sub
inc
pop
inc
daa
push
push
dec
pop
cmp
mov
or
sbb
adc
pop
cwde
or
pushf
jmp
or
sub
pop
loop
jo
repz
push
or
fcomp
test
mov
addr16
sar
cmp
stos
pusha
push
xor
adc
push
jb
test
sbb
sbb
loopne
mov
fnsave
mov
rol
dec
in
jg
ss
pop
lea
jg
hlt
daa
add
xor
adc
dec
pop
sbb
ins
xchg
in
push
mov
push
fcmovu
adc
or
leave
jle
imul
or
sbb
and
loopne
scas
mov
sbb
pop
jno
scas
sbb
outs
sbb
adc
js
cmp
jno
mov
mov
push
push
jne
fs
and
sar
sbb
add
jg
inc
sub
and
or
fadd
mov
add
sbb
ret
fistp
adc
dec
test
jl
inc
mov
clc
outs
cmp
je
sbb
push
lods
sbb
call
push
pop
mov
adc
xchg
sub
and
ret
jo
pop
(bad)
in
dec
and
loope
jne
aaa
xchg
jns
mov
adc
mov
cdq
xchg
sub
movups
icebp
aas
and
sub
mov
mov
push
cmps
je
pop
xor
or
xchg
jnp
adc
mov
jge
jb
jns
xchg
xchg
pop
jne
inc
add
dec
xor
xor
aad
aas
clc
adc
add
sbb
and
pop
jl
neg
pusha
inc
inc
or
push
pop
fist
mov
pop
test
aaa
pop
das
cmp
aaa
inc
push
dec
cmps
sub
ds
push
or
adc
mov
rol
jmp
jle
jns
xchg
call
add
xor
or
repnz
in
push
mov
popa
cli
xchg
and
xchg
xor
mov
rol
adc
aas
jno
xchg
stos
jnp
rol
jbe
test
ret
enter
mov
(bad)
sbb
inc
mov
mov
push
adc
or
stos
stos
and
sbb
int
dec
add
jmp
or
xlat
jns
test
inc
or
cmp
xchg
or
add
cmp
add
push
and
jbe
xchg
push
nop
std
jo
mov
mov
ret
and
mov
push
or
push
push
xchg
sbb
ja
xor
add
sub
je
ins
xchg
or
(bad)
retf
(bad)
add
popaw
pop
or
(bad)
mov
xor
sub
mov
sub
pop
popf
jl
test
and
rcl
sub
xchg
sbb
pop
test
sbb
and
jo
leave
cdq
jb
fbld
push
js
into
arpl
xor
in
cmp
lahf
ss
cld
jl
mov
jge
pushf
mov
mov
loop
fsubrp
push
pop
iret
dec
sbb
xchg
je
test
cld
jge
mov
cmp
jge
(bad)
fwait
cmp
test
fnstenv
mov
mov
pop
cmp
jmp
xor
aaa
ret
neg
sbb
push
scas
push
push
inc
pop
test
inc
xor
mov
not
jge
loop
xor
(bad)
call
xchg
adc
adc
sub
add
stc
adc
test
adc
push
jp
add
lock
iret
add
iret
lds
pop
adc
ror
mov
push
mov
pushf
cmp
push
xchg
pop
hlt
out
dec
jg
mov
xchg
call
je
dec
adc
jg
mov
and
or
add
retf
dec
jo
rcl
mov
in
add
dec
data16
sbb
add
xchg
fld
cmp
and
xor
outs
retf
sbb
sar
div
jle
cmp
leave
mov
mov
cmp
(bad)
jge
pop
ja
test
mov
hlt
or
das
outs
jbe
mov
ds
imul
add
pcmpeqd
lock
and
xchg
fsub
jmp
and
not
jo
or
push
or
outs
jg
inc
shl
je
leave
jne
sbb
(bad)
mov
imul
push
push
xchg
lock
jb
dec
retf
dec
push
jle
pop
xchg
push
fld
lods
fstp
jnp
push
(bad)
(bad)
dec
cmp
adc
add
jmp
sub
push
inc
sub
mov
adc
add
mov
push
adc
fiadd
or
mov
out
jge
je
daa
jbe
mov
xor
pusha
test
inc
add
and
mov
pop
inc
adc
mov
pusha
pop
inc
cmp
rcl
push
inc
add
and
or
add
mov
dec
or
mov
mov
push
adc
push
movs
les
movs
ret
pop
loopne
mov
lock
pusha
and
aaa
mov
pop
push
cmps
jbe
xor
adc
jns
xchg
(bad)
in
sub
sti
test
out
mov
ins
jmp
and
xchg
pusha
not
fisubr
add
xor
scas
xor
lods
xchg
enter
hlt
aad
push
js
push
adc
les
leave
pop
inc
mov
cld
adc
lock
dec
adc
hlt
mov
dec
mov
add
fild
sbb
cmp
pop
inc
ret
or
dec
movs
sbb
push
mov
pop
cmp
and
and
pop
loopne
pop
psubsb
pop
add
jnp
pop
das
jo
nop
inc
imul
(bad)
mov
sbb
pop
mov
mov
push
sub
push
mov
das
push
xor
xor
and
addr16
sub
cmp
pop
lea
fwait
adc
xor
lods
ins
loopne
lock
xchg
test
js
ds
pop
fisttp
add
or
cmp
mov
loopne
ja
(bad)
ret
inc
ret
and
sbb
mov
mov
pusha
lds
pusha
dec
in
jl
adc
jae
add
jle
je
jae
sub
cmp
adc
adc
mov
(bad)
outs
xor
mov
adc
ret
mov
lods
scas
pusha
bound
xor
jp
and
adc
cmp
jo
mov
jb
add
add
xchg
fcmovbe
cmps
outs
addr16
inc
dec
ins
aaa
scas
das
hlt
imul
shl
mov
add
xor
adc
in
push
push
sahf
and
cmp
add
push
test
mov
xor
ins
data16
cwde
or
out
push
nop
adc
dec
cmp
fld
xor
xor
pop
or
jnp
pop
and
cmp
inc
test
push
mov
cmps
push
cmps
jle
(bad)
in
and
in
out
jle
lds
push
jne
and
inc
iret
jae
inc
dec
push
mov
inc
mov
or
inc
repnz
push
add
sbb
dec
outs
mov
pop
adc
pop
add
in
ins
pop
jmp
cmp
daa
lods
add
pop
push
mov
push
sub
cmp
jne
(bad)
fdiv
rcr
fs
mov
je
pop
mov
fcomp
dec
add
test
outs
sahf
ins
pop
xchg
and
mov
sbb
sbb
push
lods
or
xlat
push
loop
sub
add
fld
jl
adc
mov
sub
enter
mov
daa
std
out
pop
movs
test
mov
add
mov
add
add
mov
add
int3
dec
or
sub
inc
dec
mov
mov
cmp
mov
jecxz
cmp
dec
ror
in
fild
lds
mov
fisubr
push
adc
adc
jo
add
jmp
cmp
adc
inc
mov
add
xchg
sub
and
daa
aaa
push
fsub
out
dec
xchg
and
cli
in
mov
mov
cmp
jge
mov
push
add
loopne
nop
or
retf
or
call
jb
push
add
inc
test
xchg
sub
xchg
fwait
mov
inc
push
movs
sti
pop
cmps
inc
lds
test
mov
scas
mov
pop
ret
jle
mov
cmp
or
inc
loopne
add
jg
inc
push
ret
jns
adc
xor
bound
mov
push
bnd
das
dec
jb
pop
jmp
sbb
sub
xor
xchg
xor
xchg
cmp
mov
sbb
pop
add
test
das
out
and
movs
and
add
inc
daa
enter
shr
enter
mov
jo
daa
sbb
daa
jmp
and
inc
xor
xchg
mov
fdiv
add
les
jmp
lock
xor
jmp
nop
inc
push
and
sar
and
pop
jo
add
or
add
test
pop
and
sbb
adc
ins
mov
add
aaa
sbb
aaa
sbb
add
(bad)
std
lea
or
daa
dec
jmp
mov
xor
add
add
xor
pop
div
pop
adc
out
jno
xor
push
xchg
xchg
retf
and
adc
add
xchg
mov
pop
xchg
add
mov
add
pusha
sbb
jno
sbb
jle
sub
out
dec
jb
loopne
pop
xchg
adc
adc
xchg
add
fidiv
sub
dec
mov
push
lock
sub
les
js
push
xchg
int3
clc
adc
cld
xor
adc
sar
sbb
inc
pusha
cmp
mov
mov
xor
adc
xor
lods
inc
add
lods
jne
ret
call
pop
mov
push
jecxz
test
out
cbw
jbe
shr
int
mov
cmp
mov
adc
mov
sahf
ins
stc
cmp
cdq
je
adc
inc
dec
pop
add
fnstsw
xchg
adc
pop
xor
adc
jne
ja
dec
jo
fsub
push
dec
mov
and
sub
mov
call
das
jle
sub
sub
mov
out
pop
cmp
ret
mov
dec
dec
sbb
dec
fbstp
sub
push
sub
sar
(bad)
popf
sub
movzx
ins
mov
call
ret
call
sub
fist
or
xchg
iret
daa
mov
add
add
or
and
pop
mov
and
int3
bound
popa
call
push
pop
ja
mov
push
jae
or
pop
ins
inc
mov
shl
jmp
out
ror
mov
mov
shl
cmps
mov
adc
out
pop
mov
inc
test
test
add
ret
inc
mov
pop
pop
push
(bad)
out
in
movs
push
enter
inc
mov
mov
fisttp
movs
sub
and
pusha
in
loope
inc
loope
adc
or
jae
fwait
xchg
cmp
add
mov
jg
enter
out
fdiv
push
out
loope
ret
xor
mov
ins
fcmovnu
cmp
shr
jnp
xor
das
stos
rol
and
add
adc
jmp
sub
or
xchg
dec
mov
xor
push
sbb
xor
sbb
mov
sub
xchg
(bad)
push
xor
js
inc
std
call
jg
neg
add
fmul
mov
test
push
or
cwd
xchg
or
push
mov
and
mov
in
inc
sbb
mov
lock
mov
enter
cmc
call
push
and
or
jb
sahf
or
sahf
adc
sbb
ds
sub
(bad)
jne
pop
cmc
inc
sbb
push
adc
in
cwde
adc
or
lock
popa
adc
in
aam
adc
xor
cmp
repz
and
adc
or
dec
or
dec
dec
loopne
sbb
inc
jo
jne
repz
jnp
into
arpl
pop
xlat
jo
arpl
mov
jmp
or
xor
(bad)
jmp
imul
xchg
jnp
xor
in
add
rcr
push
jmp
out
fwait
jae
pop
push
sub
lods
cs
xchg
aam
sub
mov
mov
or
fs
pop
das
push
jmp
fs
imul
leave
xor
or
or
pop
sbb
loope
add
pcmpgtd
inc
cmps
jb
in
mov
and
(bad)
dec
cmps
push
or
outs
adc
inc
rol
push
sbb
ret
or
outs
cld
add
and
xchg
ja
dec
cs
sub
ret
or
cmp
or
inc
add
xor
out
jne
pop
jne
dec
push
movs
jbe
ret
and
loopne
mov
out
sbb
add
dec
retf
inc
sbb
cmp
retf
pop
retf
mov
xor
mov
lahf
jle
push
push
popa
xlat
rcl
and
dec
cmp
jmp
sahf
ja
xor
or
out
xchg
jae
cmp
lahf
inc
repz
scas
mov
mov
ret
data16
and
jo
push
mov
ins
xor
out
enter
mov
sub
dec
retf
inc
cmp
jp
retf
pop
retf
or
pusha
push
bound
sti
retf
out
lds
push
cmp
push
retf
dec
add
pushf
mov
dec
xchg
call
retf
adc
adc
sbb
pusha
out
add
push
out
xchg
push
aad
cmps
in
sub
pop
mov
jmp
push
loope
and
mov
(bad)
xchg
cmp
or
lock
out
aaa
add
lock
pop
hlt
rcl
jnp
adc
pop
mov
inc
push
inc
mov
(bad)
outs
push
clc
push
jno
adc
pusha
push
sub
push
pushf
adc
retf
or
test
shr
or
popf
add
cmp
jns
in
fbstp
sbb
push
push
add
adc
lds
fmul
push
or
call
cmp
aas
xchg
rcl
adc
adc
push
push
pop
ret
inc
sub
maxps
mov
mov
mov
inc
clc
inc
or
mov
enter
mov
xchg
pop
mov
call
and
inc
xchg
xchg
add
nop
popa
and
sbb
in
lods
dec
mov
mov
push
push
mov
sbb
or
jp
xor
pop
adc
sub
xchg
and
(bad)
fcom
xchg
push
ins
dec
mov
ins
sub
call
fsub
xor
jg
mov
sbb
xor
out
jbe
xchg
sbb
xor
xchg
iret
clc
mov
pop
push
mov
mov
jmp
mov
mov
adc
iret
or
imul
or
sahf
inc
add
call
pop
pop
inc
ins
adc
push
dec
imul
shl
enter
pop
jo
les
push
js
or
jmp
mov
sub
aam
(bad)
loop
mov
loopne
je
je
add
sbb
lods
jge
sbb
sub
outs
mov
aad
ret
inc
and
mov
scas
lock
jl
inc
xor
and
out
sbb
dec
jmp
inc
mov
jne
jg
sub
push
or
sub
inc
cmp
adc
cmp
and
xor
lods
add
mov
in
data16
test
sbb
stos
jo
int3
call
xor
je
mov
sub
push
scas
xor
sbb
mov
sub
sahf
loopne
inc
and
and
sub
out
mov
fmul
sbb
or
adc
push
push
leave
adc
add
pop
add
sub
push
imul
imul
sbb
int3
cmc
dec
and
icebp
lods
fidiv
xor
rol
call
ins
sub
mov
xor
inc
push
out
add
hlt
pop
sub
xor
(bad)
ja
test
or
push
sbb
or
and
neg
push
dec
pop
pop
or
and
cmps
push
adc
in
(bad)
xchg
jle
mov
(bad)
push
pop
js
xchg
push
pop
test
jle
sbb
mov
addr16
js
pop
les
xlat
mov
push
or
pop
mov
shr
mov
ss
je
and
inc
jno
mov
int
js
push
jns
test
mov
mov
inc
pop
rcl
std
add
cs
pop
mov
mov
repz
int
xchg
in
dec
retf
push
sub
sti
and
or
adc
lock
inc
push
fld
push
cmp
repz
inc
movs
inc
and
fmul
lock
push
jne
inc
fsubr
inc
ror
mov
(bad)
adc
mov
jecxz
mov
call
(bad)
adc
mov
sub
xchg
test
loopne
or
loopne
outs
jmp
test
cmp
das
mov
mov
pushf
(bad)
fadd
mov
or
add
add
dec
xchg
pop
mov
data16
fs
aad
inc
xor
jo
jmp
cmp
mov
call
or
lea
inc
aad
push
sub
push
ds
fsubr
and
dec
and
add
push
or
pusha
sahf
pushf
jmp
mov
add
mov
mov
xor
mov
sbb
mov
jo
cmps
push
mov
imul
jmp
add
ss
mov
push
loopne
pop
test
mov
mov
dec
es
push
call
mov
dec
in
enter
(bad)
pop
mov
dec
imul
push
cmp
jo
cdq
jmp
and
mov
add
aam
loopne
push
or
mov
push
sbb
inc
push
add
dec
add
pop
jg
mov
and
inc
sti
inc
xchg
push
retf
ret
stos
and
cmp
in
mov
jne
data16
scas
je
test
add
les
fadd
add
or
mov
push
pop
sbb
push
mov
and
in
jo
ss
mov
xchg
add
scas
mov
sub
sar
movs
xlat
add
jge
bound
mov
out
ret
mov
stc
cmps
mov
outs
cli
outs
ins
and
mov
mov
loopne
cmp
jne
cmp
add
int
sub
movs
psubsw
mov
xchg
sbb
aas
push
cli
add
add
pusha
mov
sub
sub
sub
out
and
mov
ret
pop
pop
sbb
or
test
out
push
cdq
jbe
push
pop
jmp
test
mov
movs
sub
jmp
xchg
pop
xchg
mov
mov
mov
jbe
sahf
push
hlt
out
ja
test
loope
or
jl
mov
mov
fsub
sbb
test
dec
sti
sbb
mov
and
adc
js
dec
outs
push
sbb
sub
add
loope
scas
or
jbe
jmp
pop
sbb
cli
test
pop
call
stos
add
jecxz
mov
(bad)
cmp
fadd
sub
gs
xor
jae
dec
xor
push
lock
mov
push
cmps
or
inc
movs
push
pop
rcl
or
std
push
arpl
mov
ror
mov
push
lahf
jbe
adc
push
cwde
femms
loopne
adc
scas
leave
cmp
bound
inc
lods
adc
or
repnz
cmp
mov
sbb
lea
fiadd
mov
les
je
pushf
adc
test
jne
adc
test
push
cmp
ret
sahf
xchg
(bad)
xchg
das
test
mov
rol
and
or
jbe
dec
xor
sbb
push
mov
sub
clc
int3
sti
xor
lock
or
add
in
inc
lea
inc
call
in
ret
sub
add
dec
repz
shl
sbb
imul
or
push
push
pop
pop
mov
and
jb
inc
movs
inc
ror
mov
shl
xchg
mov
test
mov
add
lock
stc
xchg
xor
xor
add
xor
or
pop
and
push
xor
xor
mov
mov
cs
inc
or
lock
pusha
mov
or
mov
sub
xor
inc
jne
sub
pushf
sysexit
ins
daa
mov
test
mov
add
mov
add
mov
rol
test
inc
mov
dec
enter
jge
in
or
mov
push
pop
jge
inc
push
popa
or
ud2
add
or
sub
inc
add
add
push
loop
dec
and
mov
pop
pop
xor
inc
enter
dec
cld
sub
fcom
imul
sbb
mov
(bad)
in
jmp
cmp
int3
sub
add
xor
push
jb
add
inc
xor
ds
sbb
push
jbe
mov
pop
out
jo
push
int3
add
and
(bad)
jg
stc
mov
sub
mov
sub
gs
push
mov
and
pusha
dec
cmp
jne
jmp
out
sbb
leave
dec
ret
mov
adc
mov
(bad)
stos
pop
cmp
inc
or
lea
mov
rcr
test
repz
loopne
sahf
je
jge
sub
pop
pop
cmc
push
repnz
sbb
sbb
adc
pop
jne
and
or
jne
push
mov
mov
cmps
test
mov
(bad)
jns
ds
cmp
push
fisttp
mov
and
inc
sbb
push
add
aas
sbb
adc
je
jecxz
mov
data16
sbb
dec
pusha
data16
imul
cmps
sub
sub
imul
jne
jge
jge
movs
dec
or
or
sub
xchg
mov
inc
test
jmp
add
lds
jle
es
sub
iret
add
shl
mov
mov
pop
jae
xor
inc
or
sub
sti
(bad)
sbb
push
je
jmp
ins
rcr
scas
sub
imul
popf
add
nop
push
dec
sti
xor
xor
jae
je
jno
jo
in
je
imul
(bad)
(bad)
jg
jg
add
and
push
xchg
enter
adc
(bad)
jp
and
mov
and
cmp
pop
push
in
aas
aaa
sti
(bad)
in
fucomi
aam
hlt
inc
ja
pop
adc
cmp
and
pop
aam
mov
std
fmul
xchg
ror
mov
inc
or
cli
dec
pop
or
add
add
mov
jmp
add
mov
jp
inc
or
xchg
psrlw
add
push
aam
std
sub
mov
mov
dec
jb
stos
jne
inc
push
add
sbb
ret
jne
sub
sbb
cmp
xchg
or
pop
cmps
fs
xchg
xor
pusha
inc
pusha
and
sub
add
sub
dec
mov
iret
pop
je
push
push
push
add
sub
retf
push
jl
jbe
pop
retf
lods
movs
out
pop
add
mov
aas
xchg
sbb
mov
mov
call
xor
das
les
repnz
pop
(bad)
mov
icebp
dec
dec
add
(bad)
add
mov
sbb
mov
push
pop
push
pop
sub
sar
xor
mov
lods
inc
out
(bad)
movs
dec
xchg
sbb
mov
xchg
mov
lods
gs
stc
lahf
pop
sysenter
sub
pop
mov
mov
jp
fadd
mov
lea
add
and
xchg
push
mov
pop
add
adc
or
and
add
pop
dec
push
jmp
mov
jmp
mov
jmp
mov
fistp
fidiv
fdivr
cmovge
dec
dec
mov
jmp
mov
jmp
mov
jmp
inc
pop
in
dec
es
jmp
mov
jmp
mov
jmp
aaa
or
icebp
jmp
mov
js
dec
pop
or
xchg
pop
daa
test
leave
mov
xor
push
(bad)
cmps
sbb
dec
adc
mov
pop
or
daa
lock
loope
xlat
movs
ret
neg
mov
aam
sti
loop
inc
add
or
popa
lea
and
sub
mov
(bad)
rcr
lock
jmp
and
loopne
sub
add
or
pop
cmp
adc
push
lea
dec
add
call
lea
pop
jmp
icebp
mov
push
dec
push
pop
in
inc
movs
sub
arpl
ds
mov
in
sbb
and
retf
mov
lock
mov
cmp
ins
and
mov
mov
stos
mov
jg
ficom
inc
dec
jp
les
mov
enter
pop
bound
aaa
lock
jge
test
mov
adc
enter
sub
jle
pop
shr
aaa
xchg
adc
aaa
ins
sbb
loopne
jne
jp
cmps
sbb
add
mov
pop
clc
aaa
mov
mov
mov
adc
(bad)
xor
nop
popa
xchg
es
inc
dec
inc
fs
mov
and
rol
mov
mov
jle
fcomp
je
popa
rol
mov
sar
xor
sub
hlt
pop
addr16
js
aaa
ss
popa
add
sbb
push
adc
mov
mov
xchg
and
sub
push
mov
mov
lds
mov
add
ret
inc
pop
cmp
jge
js
pushf
bound
psraw
loop
js
sbb
fld
xlat
xor
pop
mov
lea
jmp
test
xor
pop
adc
xor
movsx
pop
sub
push
push
je
sub
mov
xchg
pop
pop
cmp
test
loope
and
fild
lods
push
and
cmps
xor
or
mov
mov
pop
add
push
jmp
mov
mov
push
mov
jmp
pop
sbb
jg
inc
jmp
mov
jmp
xor
mov
jmp
xor
mov
adc
push
mov
out
clc
xchg
push
out
mov
out
inc
frstor
or
movs
aam
mov
pusha
mov
into
ds
dec
aaa
jnp
and
fsub
pop
mov
jg
leave
(bad)
in
add
aas
pusha
push
cmp
xor
mov
call
inc
mov
xor
inc
enter
and
pushf
and
movs
adc
inc
dec
push
out
pop
jecxz
sbb
pop
and
mov
adc
imul
sub
pop
jecxz
test
sub
add
test
fisub
in
in
js
jo
loop
in
push
popa
clc
(bad)
mov
inc
dec
dec
inc
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
inc
jmp
stos
adc
pop
pop
push
xor
dec
popa
ins
sub
jmp
push
add
sahf
(bad)
dec
push
push
(bad)
ins
dec
je
ins
enter
push
ins
add
out
inc
mov
ret
jnp
or
inc
icebp
mul
imul
push
jmp
cmovno
popa
jns
ins
cmps
ds
pop
in
mov
outs
inc
mov
cli
test
add
mov
outs
fs
ins
inc
outs
ja
push
push
(bad)
jo
dec
mov
outs
retf
pop
pop
sbb
in
jns
outs
(bad)
out
hlt
ja
dec
inc
imul
inc
jbe
outs
je
or
adc
inc
mov
test
sub
push
sti
xor
push
add
push
push
inc
outs
ins
fs
mov
sub
or
test
jae
sbb
je
(bad)
inc
mov
push
inc
jle
pushf
inc
test
in
pop
adc
fcomp
jae
xrelease
icebp
sti
mov
loopne
pop
pop
xchg
push
push
push
push
push
mov
jecxz
into
(bad)
sbb
jbe
nop
test
hlt
add
pop
xlat
(bad)
repz
bound
enter
cmp
cli
fsubr
add
in
sar
test
lods
add
push
adc
add
inc
push
jb
dec
outs
mov
sti
mov
into
mov
or
arpl
gs
sub
add
aas
fisubr
pop
js
push
push
into
cs
das
jl
xor
or
jge
pop
out
aas
movs
push
aad
sbb
push
jnp
hlt
jae
test
mov
pushf
retf
push
adc
fld
inc
inc
popa
outs
jbe
jae
xchg
push
dec
xchg
fdiv
clc
push
inc
inc
outs
push
and
inc
addr16
jne
bound
arpl
pop
push
or
push
jbe
xchg
pop
gs
cmc
pushf
and
je
in
jg
mov
fnstsw
sub
or
inc
inc
(bad)
imul
outs
jb
fs
imul
fstp
and
pop
std
xor
std
add
and
sub
add
adc
and
push
pop
dec
mov
jbe
mov
das
scas
repz
in
inc
gs
and
loop
shl
arpl
cmp
test
inc
cmps
mov
stos
push
dec
xor
push
(bad)
push
xchg
xchg
xchg
mov
nop
inc
ins
cmp
xchg
xchg
add
pop
sbb
(bad)
jbe
push
inc
jb
ins
in
push
fcomp
sbb
or
add
inc
scas
scas
push
dec
data16
jns
lods
jmp
jb
jns
and
pop
xor
pop
dec
fcomp
fsub
pusha
les
js
inc
add
arpl
push
dec
push
inc
dec
dec
sub
icebp
push
xor
dec
pop
dec
gs
dec
inc
ins
ror
jmp
jae
dec
jo
or
and
inc
gs
push
fs
aaa
jbe
movs
pop
mov
inc
inc
and
outs
mov
push
imul
xor
push
sbb
cmps
loopne
popa
dec
xchg
bound
movs
not
or
pop
(bad)
push
stc
mov
(bad)
mov
mov
ds
add
data16
mov
mov
arpl
lods
rcl
fmul
xor
add
mov
das
push
push
dec
mov
test
sbb
mov
(bad)
outs
xor
inc
test
add
stc
lahf
lock
push
xchg
sbb
div
dec
loop
or
call
nop
inc
adc
(bad)
inc
add
or
imul
lods
or
imul
cmp
or
nop
and
xor
add
std
xchg
or
and
adc
cmp
mov
data16
inc
add
iret
push
mov
cmp
std
mov
adc
add
cmp
je
mov
sbb
mov
test
je
jl
fstp
out
xor
or
inc
mov
lock
bound
mov
mov
stos
mov
sub
xchg
je
test
pop
sbb
dec
mov
sub
test
paddb
sbb
sbb
pop
ret
aam
popf
xlat
jbe
add
cmp
push
out
and
ret
add
push
push
lahf
lods
mov
cmp
imul
ins
or
bt
jbe
push
add
push
gs
inc
gs
push
and
mov
pop
dec
retf
pop
ja
sub
xchg
mov
aaa
int3
xor
icebp
fistp
and
outs
pop
lea
mov
adc
aaa
or
sbb
in
adc
xchg
(bad)
mov
sar
movs
loop
aas
(bad)
leave
ins
push
imul
sub
stos
lods
jne
cmp
sbb
scas
adc
adc
ret
push
inc
out
jae
mov
test
add
jmp
pop
adc
add
pusha
jmp
ret
add
or
inc
add
jno
cmc
jns
add
push
fs
movs
fistp
add
sbb
push
dec
cs
in
or
enter
es
test
lock
(bad)
sbb
pop
push
push
sub
fs
push
call
inc
sbb
cwde
loopne
sbb
sbb
cmp
hlt
sub
jo
cmp
repz
inc
and
cld
jnp
cmps
stc
cmp
je
in
xor
ins
fistp
cmp
mov
fdivp
push
push
and
pushf
and
pop
dec
xlat
or
(bad)
fnstenv
fimul
sub
sub
test
or
pusha
add
movq
inc
push
sbb
adc
or
fs
sbb
inc
icebp
scas
fild
out
mov
call
sahf
les
add
or
imul
sbb
and
clc
pushf
mov
int3
inc
mov
pop
mov
or
xor
or
inc
add
adc
pop
jnp
adc
xchg
jns
mov
stos
push
and
aaa
add
cwde
mov
xchg
movs
mov
mov
mov
ja
lea
pusha
mov
scas
enter
pop
movs
pop
test
inc
mov
imul
push
and
adc
or
inc
xor
sbb
push
push
neg
push
ins
pushf
ins
sub
jae
sti
sub
inc
cmp
je
cmp
cld
pop
mov
cmp
hlt
inc
mov
jp
cmp
xlat
or
mov
sub
sbb
mov
jne
mov
test
or
or
retf
mov
fadd
jne
jge
lock
cmp
sub
sub
adc
(bad)
ja
inc
sub
sbb
or
adc
adc
and
adc
fimul
movs
pop
jo
pop
clc
add
and
adc
lahf
add
mov
pop
cmp
je
rol
add
cmp
push
cmp
sahf
loopne
sbb
pop
mov
mov
dec
sub
cmp
jle
adc
cmp
jmp
pop
out
out
out
pop
and
inc
test
je
scas
rol
sidtd
add
aam
clc
neg
mov
inc
sub
pop
(bad)
mov
push
pop
sub
cmp
add
adc
clc
mov
iret
(bad)
loopne
ds
mov
mov
rol
fmul
mov
pop
add
pop
pop
sbb
stc
mov
mov
(bad)
xchg
push
inc
or
dec
fnsave
add
cmp
and
push
push
xor
pop
or
fisub
stc
loopne
cmp
jmp
xor
scas
add
dec
enter
jmp
in
pop
das
inc
add
and
enter
mov
push
adc
or
add
xor
jbe
jnp
xchg
push
jb
or
mov
inc
or
mov
mov
adc
mov
shr
mov
inc
and
push
cwde
pop
and
sub
mov
jg
xchg
lods
and
jp
inc
popa
in
mov
jnp
jne
sub
cwde
loopne
or
push
mov
mov
adc
xchg
cmps
or
jne
pusha
inc
pop
ds
nop
jecxz
js
inc
test
into
in
mov
mov
inc
call
push
punpckhwd
mov
fs
loope
mov
add
push
test
dec
push
sar
mov
push
retf
cmp
fstp
inc
add
fsubr
cmp
push
fisttp
repnz
jne
mov
fs
sbb
sti
(bad)
repnz
lock
jp
stos
sbb
sub
jae
add
adc
mov
adc
dec
jnp
jl
fucomp
jp
push
pop
outs
and
sbb
mov
cmp
push
rcl
xchg
xchg
dec
push
jl
inc
xor
push
js
add
loop
xchg
(bad)
lods
dec
je
stos
pop
vmovhps
xor
adc
add
add
cmp
dec
jne
cmp
fs
mov
lock
cmp
xchg
push
add
call
call
lock
mov
scas
adc
pop
mov
in
inc
fsub
es
sub
mov
rol
push
push
rcr
lods
adc
lea
pop
aad
call
fsub
add
jne
sti
inc
adc
sar
cmp
sub
mov
ds
push
push
pop
push
test
push
int3
jge
sti
or
movs
push
shl
ss
inc
adc
iret
mov
jmp
aad
mov
xchg
rol
mov
inc
inc
sbb
add
pop
push
or
enter
xchg
mov
call
inc
mov
dec
push
or
adc
push
xchg
outs
pushf
inc
js
add
das
and
push
add
loopne
add
mov
pop
adc
das
push
mov
ja
adc
aam
xor
es
sti
shl
cmp
xor
shr
pop
push
push
test
sti
jmp
jo
imul
jmp
rcl
push
mov
or
or
sub
outs
mov
test
cdq
out
pop
add
and
pop
test
push
xchg
dec
out
sub
push
pop
loope
cld
mov
push
jge
movsx
inc
or
or
int3
mov
rcr
ds
mov
or
fbld
arpl
retf
lock
in
shr
fst
adc
or
xchg
mov
call
jo
add
mov
cli
add
inc
mov
ror
cmps
(bad)
sub
mov
sbb
loopne
test
mov
movzx
test
enter
add
mov
sub
adc
aaa
pop
in
xlat
aad
adc
pop
aas
(bad)
cmp
adc
xchg
stc
movs
sbb
mul
scas
mov
add
inc
add
loopne
loopne
clc
inc
es
(bad)
cmp
jl
lea
push
fadd
jecxz
fisttp
jg
jae
je
test
(bad)
push
call
lea
add
mov
(bad)
sahf
jge
in
xchg
cld
std
cdq
int
xor
adc
or
jl
mov
add
cmp
pop
ds
xchg
sti
scas
in
cmp
add
aaa
into
(bad)
(bad)
shr
jo
xor
aaa
imul
cs
jno
add
jne
aad
(bad)
xor
pop
adc
sub
aas
idiv
xor
add
mov
jg
mov
jmp
mov
or
hlt
or
sbb
cwde
mov
dec
jge
push
or
adc
icebp
call
or
or
add
call
fild
push
mov
mov
mov
ins
cmp
jl
loopne
clc
add
mov
div
mov
xor
pop
add
call
call
inc
adc
mov
inc
fld
add
in
push
pusha
ret
mov
(bad)
jmp
mov
push
push
(bad)
fcom
aam
push
rol
push
enter
int3
push
dec
mov
or
mov
mov
push
imul
popf
push
test
je
int3
dec
loopne
aas
dec
mov
loope
aad
xor
dec
pop
rol
pop
(bad)
adc
aas
jmp
jmp
inc
add
jo
into
jmp
rcr
or
ds
mov
mov
dec
(bad)
retf
shl
retf
push
xchg
xchg
adc
mov
sbb
xchg
call
adc
(bad)
or
ret
xchg
and
xor
scas
add
add
out
inc
fistp
clc
jp
sub
jnp
sbb
xor
adc
call
mov
sub
jmp
fisub
out
shl
fnstcw
fucomi
lock
aas
ds
(bad)
ds
jmp
(bad)
cmps
pop
xchg
(bad)
push
enter
shl
js
mov
sub
imul
into
shr
sbb
test
adc
lock
out
or
dec
test
out
adc
mov
xchg
mov
jnp
subps
ja
fsub
test
mov
nop
mov
mov
xchg
ror
jne
add
push
fcmovnbe
xchg
adc
rol
add
xchg
pop
adc
mov
jmp
push
dec
jne
(bad)
ds
xchg
in
popa
fnsave
pop
sub
inc
jmp
jge
pushf
arpl
cs
lds
sub
sub
fs
mov
and
fisttp
fdiv
loope
push
adc
adc
je
sbb
adc
jl
push
ret
xchg
xlat
cmp
add
fwait
js
mov
inc
in
lea
mov
mov
data16
adc
sub
push
dec
or
adc
cmp
and
daa
xchg
add
sbb
xor
mov
cmps
fidiv
inc
stos
popa
popf
lock
pop
push
push
fadd
sbb
add
cli
sub
jp
das
sub
es
mov
adc
loopne
mov
push
inc
add
adc
mov
xchg
dec
dec
mov
or
mov
bound
pop
movzx
fimul
(bad)
fidiv
mov
sbb
rcl
cmp
push
push
pop
or
push
rcl
int
aaa
push
nop
jg
je
or
ss
jmp
jmp
inc
lods
lahf
out
lods
inc
sub
mov
repnz
dec
test
cmps
ja
sti
fiadd
push
jl
sbb
cmps
push
inc
jl
aaa
fist
push
push
cld
fs
dec
add
push
push
dec
pop
out
in
pop
fisttp
xor
les
push
jge
mov
data16
pop
push
int3
gs
pusha
and
inc
enter
int3
push
pusha
cs
mov
neg
les
and
pop
mov
mov
out
xor
lock
mov
xor
add
xchg
mov
cwde
shl
jbe
data16
pminub
push
dec
(bad)
inc
arpl
sti
add
mul
push
dec
jmp
lods
das
es
inc
dec
ja
mov
sbb
add
je
outs
ins
add
test
push
(bad)
test
int
mov
jnp
sahf
jne
test
xchg
dec
jle
jg
test
mov
xor
pushf
push
(bad)
lock
pop
(bad)
outs
and
popa
jb
mov
or
push
xchg
in
adc
dec
outs
ss
popa
shrd
ins
or
push
test
arpl
cld
outs
ins
inc
je
ins
add
push
cmps
adc
add
push
fidivr
je
sahf
ins
or
dec
dec
jno
gs
mov
rcr
sti
div
or
jb
mov
and
gs
ins
pop
daa
dec
lock
sahf
jp
mov
es
(bad)
lock
nop
push
pop
fcom
dec
push
cmp
cdq
ins
mov
(bad)
mov
push
inc
shl
xchg
cmp
(bad)
lods
mov
fcomi
mov
sbb
outs
xor
into
dec
lods
scas
int
fidiv
push
int3
xchg
data16
push
push
cmp
or
cmps
jge
adc
push
inc
pusha
sbb
in
push
(bad)
or
push
test
sbb
fcomp
adc
push
and
sahf
add
rcr
mov
in
jge
lods
aaa
push
xor
nop
push
adc
es
or
sti
xor
div
push
cld
mov
ins
fistp
mov
push
cli
push
or
es
pop
pop
fdiv
jle
push
call
lock
pop
xchg
inc
jbe
fidiv
push
inc
add
lds
push
xchg
nop
nop
or
xor
mov
ja
xchg
push
in
dec
hlt
add
dec
mov
cwde
popa
js
aaa
lock
pushf
push
or
outs
jae
fadd
adc
outs
sub
popa
jbe
xor
push
add
push
test
mov
inc
lea
sbb
push
pop
push
ins
outs
outs
je
and
gs
out
add
pusha
stos
lods
push
adc
push
sub
dec
(bad)
jbe
pop
mov
mov
push
loop
sub
fisub
push
fs
shr
mov
fld
arpl
outs
jne
fs
mov
mov
mov
shr
out
iret
jmp
or
clts
aam
mov
add
dec
adc
add
add
add
cmp
add
call
sbb
dec
inc
jns
or
inc
xor
inc
ror
imul
cmp
mov
pusha
das
cwde
mov
add
cwde
cmp
sbb
inc
ins
imul
(bad)
fadd
cmp
ds
dec
retf
push
sub
je
test
test
or
shl
pop
pop
or
rol
(bad)
dec
adc
inc
push
mov
jnp
bound
jne
push
mov
cwde
mov
test
mov
inc
jb
addr16
jne
stos
in
and
inc
pop
sahf
inc
adc
dec
sub
push
inc
mov
push
or
inc
add
daa
ins
cmp
mov
cs
outs
popa
es
sub
(bad)
fst
or
lahf
popa
or
(bad)
aad
push
dec
add
adc
ret
popa
lds
sub
add
adc
shr
cmp
rcl
push
mov
jne
or
fld
ja
ret
or
dec
hlt
xlat
bndstx
push
je
loope
test
call
cmps
nop
pop
mov
scas
ja
movs
loope
add
add
rol
jnp
jne
dec
push
jne
jle
mov
push
dec
aaa
fistp
dec
int3
jne
xchg
inc
pop
scas
call
(bad)
inc
inc
and
xlat
xchg
or
or
and
jo
push
in
push
xchg
and
sbb
retf
imul
and
cmp
or
inc
sub
push
pop
ror
(bad)
clc
cmp
ja
outs
(bad)
lea
mov
adc
pop
aas
and
pop
shl
xor
push
push
mov
lods
sub
jbe
popf
sbb
retf
or
inc
or
push
mov
sub
adc
shl
lock
adc
push
out
sub
movs
(bad)
cmp
push
push
bound
dec
sub
push
imul
sub
sub
dec
inc
add
jae
ret
jae
add
pop
rol
ror
out
xor
(bad)
je
test
mov
int
dec
xor
push
dec
movs
add
lock
dec
out
fimul
or
push
cdq
push
dec
call
mov
sbb
pop
inc
jo
or
push
xor
mov
pop
inc
xor
inc
cmp
scas
sub
inc
js
cld
(bad)
push
out
inc
xor
inc
gs
out
fiadd
inc
cmp
pop
inc
adc
cwde
push
cmovge
push
sub
mov
pop
push
ss
xor
ja
sub
pop
mov
ror
or
inc
cmp
pusha
out
inc
pop
dec
cmp
mov
cmp
fiadd
dec
xor
out
dec
xor
lahf
rol
inc
pop
dec
cmp
dec
push
pop
adc
inc
push
mul
cmp
push
cmp
cli
jb
xor
out
jno
inc
pop
dec
cmp
sub
dec
xor
add
push
xor
inc
inc
cs
add
and
inc
inc
lea
inc
push
repnz
mov
inc
fs
in
adc
ds
mov
fs
repnz
in
pop
jp
in
fs
in
adc
aaa
fs
jg
ret
jb
out
div
pop
gs
outs
mov
add
clc
(bad)
cli
mov
pop
shr
out
push
or
pop
xor
call
push
push
pop
les
rol
xor
fimul
mov
sbb
adc
xor
jne
outs
lea
jge
mov
repnz
aas
or
bound
popf
ins
je
push
fs
bound
inc
cmp
popa
jb
pop
into
mov
jo
dec
loop
dec
out
add
adc
cmps
les
push
push
imul
and
ret
push
jb
gs
dec
push
lahf
add
sub
std
sbb
pop
or
out
pop
(bad)
sbb
cmp
adc
ins
popa
jae
call
xlat
cmp
ss
adc
je
and
(bad)
int3
push
sti
outs
sbb
setne
dec
loopne
add
add
mov
outs
xor
in
add
and
shl
fidiv
push
cmp
mov
imul
lods
pop
cs
push
in
and
cwde
fcomi
sbb
in
pop
out
mov
push
push
pushf
add
push
and
push
push
ds
cs
and
cmps
les
push
add
xchg
mov
dec
outs
outs
imul
or
mov
xor
push
out
lea
xchg
mov
movs
sbb
pusha
pop
push
push
add
pop
in
mov
add
and
push
or
add
dec
mov
dec
mov
clc
add
fild
(bad)
sbb
mov
pop
pop
push
shl
pusha
in
imul
add
or
xchg
add
lock
xor
sbb
push
mov
jns
cmp
enter
add
inc
or
ret
push
and
and
mov
aas
hlt
jmp
mov
lods
jg
dec
push
retf
xchg
xor
mov
push
pop
jo
popa
dec
mov
xchg
mov
jp
test
loop
mov
and
add
adc
gs
out
or
je
enter
lods
stos
push
mov
fsub
iret
aaa
inc
xchg
clc
loopne
clc
in
mov
(bad)
push
jl
stos
dec
adc
mov
xor
push
adc
fdivr
es
add
inc
popa
movs
mov
add
add
cmp
xor
mov
lods
cmc
test
or
mov
jnp
cmps
test
inc
sbb
out
fadd
test
addr16
inc
adc
cmp
or
push
retf
popa
shl
out
(bad)
pop
test
add
outs
add
gs
jo
jbe
add
mov
in
loopne
push
rcl
cmp
pop
xchg
push
push
pop
ja
adc
les
sbb
lods
mov
popa
or
add
shl
or
push
push
and
and
pop
lods
das
data16
xchg
mov
fcmovu
icebp
test
cdq
test
pop
xchg
sbb
ins
xchg
sbb
icebp
mov
mov
jge
cs
cmps
in
arpl
lds
(bad)
and
adc
test
mov
sete
loopne
jp
adc
push
mov
push
pop
push
sbb
shr
(bad)
mov
xchg
mov
sub
aaa
aas
sbb
mov
push
push
in
test
mov
sbb
dec
outs
fwait
xchg
or
call
sbb
lahf
adc
and
rcr
pop
hlt
add
stc
pop
add
(bad)
adc
add
push
hlt
mov
cmp
shl
mov
sbb
mov
xor
mov
jp
lods
dec
lock
pop
iret
dec
repz
jmp
cmps
stos
mov
sub
cmp
arpl
test
jl
adc
mov
cmp
mov
rdmsr
add
push
repz
push
or
ret
xlat
shl
sti
sbb
sbb
inc
mov
jge
xchg
push
js
mov
inc
or
mov
cs
or
pop
xchg
dec
cmc
out
(bad)
ret
jge
ror
retf
mov
idiv
xchg
enter
cmps
(bad)
jne
jo
movs
mov
and
mov
mov
push
movs
xchg
dec
add
xor
pop
xlat
cmp
out
je
mov
jns
sbb
adc
mov
test
aas
pop
xor
dec
jmp
cmp
(bad)
out
add
out
in
fadd
es
(bad)
xor
push
or
(bad)
(bad)
jo
sub
je
mov
sbb
push
ins
mov
fimul
dec
enter
sbb
add
or
out
or
inc
add
or
(bad)
adc
fstp
and
mov
scas
out
dec
adc
push
arpl
push
sbb
mov
push
or
popa
fcmovb
adc
add
adc
cs
cmp
add
add
mov
adc
xorps
dec
and
add
xor
push
xor
dec
and
or
out
stos
add
(bad)
inc
jp
cmp
ss
mov
jl
push
pushf
ret
int3
adc
out
xchg
test
xor
and
shl
pop
in
ret
pop
cmp
dec
mov
push
clc
xor
mov
pop
or
pushf
mov
clc
or
mov
cmp
idiv
(bad)
jae
in
sub
xor
inc
dec
jne
inc
xchg
shr
pop
pop
mov
rdtsc
and
lahf
sbb
ret
es
or
jmp
clc
push
shr
test
sub
fdivr
stos
test
(bad)
cmp
jg
mov
sub
je
sub
fild
cmp
sti
mov
adc
fdivrp
fstp
fwait
jmp
pop
fst
push
addr16
inc
inc
add
mov
(bad)
out
cmp
or
(bad)
sbb
shl
fmul
adc
add
aaa
or
add
or
inc
adc
push
test
jnp
stos
movs
and
aad
xor
aam
div
cdq
test
jmp
adc
inc
lea
mov
jp
rcr
mov
add
jge
rcl
push
mov
xchg
sbb
adc
dec
aam
xchg
dec
pop
push
bound
ret
js
push
or
lea
adc
jo
xor
push
adc
xor
adc
jmp
sbb
jmp
nop
sub
div
je
fimul
movs
add
xchg
sbb
xor
pop
loop
and
push
and
or
mov
retf
xor
cwde
adc
push
(bad)
push
or
pop
sbb
xchg
aam
sbb
and
(bad)
rcr
test
ret
pop
out
xor
xor
add
les
ret
xlat
pop
aaa
mov
adc
mov
mov
push
inc
and
add
add
in
addr16
pop
scas
add
pusha
xchg
push
es
sti
xor
mov
pusha
mov
cmp
aam
mov
daa
loopne
push
sub
clc
jmp
mov
cld
(bad)
mov
rol
movzx
test
je
test
ja
data16
into
rcl
ficom
adc
add
dec
add
stc
cmp
cli
nop
pop
or
or
jo
call
adc
ins
pop
xchg
cld
mov
pop
rcl
mov
inc
ror
cmp
push
jns
je
ins
cs
stos
je
fsub
pushf
jg
or
fisttp
out
and
jg
xor
(bad)
jmp
lds
jno
inc
mov
movs
leave
aam
push
pop
in
addr16
sbb
jg
fsubr
gs
call
out
call
xlat
popf
rol
jg
pop
cdq
or
jg
adc
jne
outs
ins
cmp
imul
outs
aas
add
pop
dec
popa
outs
popa
addr16
fcmovnb
xchg
cld
dec
or
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
pop
outs
rcl
xor
jbe
pop
pop
cmp
movs
repz
inc
sbb
mov
leave
ja
fsubr
or
out
inc
and
add
adc
dec
inc
js
xor
gs
xlat
pop
xor
sub
into
loop
adc
mov
out
mov
add
add
mov
push
adc
js
test
dec
pop
mov
js
in
and
inc
push
add
push
inc
or
addr16
cli
inc
sub
and
inc
loop
mov
dec
enter
dec
test
push
jmp
or
(bad)
int
mov
pop
cdq
icebp
inc
call
sub
out
add
retf
or
int
add
push
fldenv
out
and
(bad)
bound
adc
into
inc
xchg
in
ins
dec
mov
xor
(bad)
mov
xor
int3
leave
push
loope
sbb
rdtsc
es
or
fwait
add
pop
test
dec
int
jmp
mov
rcr
or
jb
enter
sub
jne
mov
sub
inc
jbe
paddusw
in
fnstenv
pop
psrld
iret
int3
mov
adc
inc
aam
neg
dec
adc
sahf
out
jl
jne
jg
mov
xor
repz
pop
push
ret
iret
repz
push
retf
push
rcr
jecxz
mov
xchg
fwait
mov
mov
push
sub
push
fnstcw
test
push
ss
add
aaa
mov
push
add
loop
mov
push
add
jo
adc
out
cwde
movd
pop
les
mov
daa
fisttp
xor
and
jmp
dec
mov
push
dec
mov
dec
cmps
pop
pop
loopne
ror
pop
jne
sbb
mov
push
xor
lock
retf
fs
fwait
call
ds
xor
fs
xor
dec
inc
pop
cwde
iret
fsubr
cmp
jo
inc
add
dec
pop
sub
les
sar
imul
aam
dec
ins
scas
sub
adc
dec
add
push
inc
push
leave
enter
(bad)
adc
in
leave
mov
pop
adc
pop
adc
mov
jo
in
dec
test
lahf
ja
or
xor
and
fistp
pop
xor
pop
bound
add
sti
pop
inc
outs
jb
jns
sbb
shr
gs
sub
xor
adc
pop
add
es
add
inc
jecxz
push
or
pop
loope
mov
cs
stc
loope
popa
add
add
mov
inc
dec
gs
shl
rol
or
dec
popa
ins
loope
ror
xchg
or
mov
bound
ins
add
push
(bad)
scas
adc
xor
xor
adc
retf
imul
jle
push
push
add
xor
jo
arpl
adc
adc
in
dec
adc
adc
jae
imul
mov
or
rol
rcr
mov
mov
pop
add
inc
inc
int3
in
sbb
inc
dec
loopne
inc
int3
cmp
push
and
and
add
cmps
sub
fidiv
push
push
aam
lods
js
jb
inc
jae
in
and
inc
dec
or
cmp
scas
dec
sar
xlat
fiadd
cmp
fwait
outs
popa
jb
adc
adc
cmp
stos
ss
adc
push
inc
outs
push
push
pop
or
sub
cld
inc
gs
pop
adc
lods
add
xchg
xchg
mov
cmp
mov
push
dec
popa
cmp
je
fstp
jo
fst
cmp
ss
aaa
add
add
mov
inc
ins
scas
pop
cwde
pop
popa
jae
mov
dec
dec
jno
or
add
pop
iret
inc
mov
or
and
add
pop
and
dec
lds
pop
imul
push
loopne
pop
inc
mov
sbb
dec
pushf
adc
push
inc
mov
popa
jns
out
cs
bound
les
out
inc
mov
push
arpl
loope
mov
pop
pop
pop
hlt
das
add
inc
imul
push
dec
test
pop
icebp
in
cmp
fsubr
test
outs
xor
add
sub
inc
cli
dec
outs
jbe
pop
jno
adc
xchg
adc
and
or
mov
(bad)
in
fistp
push
mov
mov
push
les
pusha
loope
jp
js
sar
mov
add
adc
cs
add
ficomp
lahf
xchg
pop
inc
das
bound
lahf
mov
aas
xchg
or
adc
xchg
mov
or
in
idiv
pop
or
mov
loopne
ret
addr16
jmp
ror
ret
jo
or
pop
pop
xor
pop
ret
dec
rcl
dec
mov
or
and
jne
adc
add
jg
jle
mov
xor
or
popa
jns
push
ja
sub
inc
fldenv
mov
movntps
jo
inc
xlat
push
add
iret
push
add
inc
popaw
jne
je
add
jmp
cmp
or
inc
in
stos
cdq
push
retf
jle
sbb
or
jb
dec
bound
or
jae
jno
sub
mov
pop
shl
or
aaa
mov
hlt
pop
icebp
or
inc
add
and
int
xchg
mov
jnp
sub
ret
inc
push
scas
sbb
mov
ret
sbb
pop
sub
or
pusha
arpl
ja
scas
xor
shr
test
pop
je
inc
jne
arpl
mov
jecxz
sbb
jns
xlat
dec
adc
push
cmp
addr16
jge
adc
add
call
xlat
mov
dec
push
add
xchg
outs
ins
hlt
mov
add
inc
in
mov
push
mov
cmp
fdivr
out
cmc
xor
push
movs
pusha
pop
retf
xor
cmp
rcl
or
and
inc
sbb
add
add
je
sbb
pop
das
lds
sbb
fld
xor
jle
inc
or
jo
inc
add
push
push
ins
mov
mov
jge
add
pop
mov
or
fcomp
clc
push
in
sbb
(bad)
pop
call
in
mov
inc
retf
sahf
jb
push
inc
add
popa
pop
(bad)
jmp
or
sub
popf
mov
enter
fnstenv
(bad)
sub
sti
sub
and
pop
xor
mov
mov
inc
cmp
jnp
shld
sbb
xchg
xchg
stos
stc
inc
and
in
leave
mov
xor
in
mov
jns
jb
mov
std
and
cmp
cmp
dec
jg
add
pushf
pushf
pushf
mov
xchg
pop
sub
jge
mov
pop
in
push
xchg
fsubp
pop
adc
push
push
daa
jnp
cmps
shl
ja
push
add
faddp
data16
dec
or
or
inc
fild
inc
dec
add
push
into
jno
shr
jae
je
test
inc
pop
jmp
push
add
nop
dec
cmc
cmovns
add
fidivr
call
jg
mov
xor
enter
cli
add
sahf
loope
inc
push
mov
popa
ins
jne
lahf
ja
imul
push
popa
outs
sub
adc
ins
push
sahf
jae
push
mov
outs
or
outs
add
inc
xor
push
add
jl
movs
loopne
and
push
sbb
ror
out
and
adc
or
push
in
or
(bad)
lock
dec
add
xchg
jo
adc
dec
(bad)
leave
call
fdiv
mov
lea
sub
xor
ins
loop
or
imul
inc
shl
jmp
adc
dec
add
or
pop
ins
adc
neg
sub
imul
add
pop
or
inc
add
mov
or
fsubr
dec
pop
cld
mov
jne
xchg
dec
add
fs
je
ins
xor
shr
ss
es
nop
cwde
pop
xchg
popf
push
or
xchg
adc
sub
pusha
push
xchg
xchg
xor
pop
xor
mov
mov
clc
and
fcomp
or
int
and
sbb
xchg
imul
(bad)
nop
pop
push
push
mov
dec
xchg
or
push
cli
jo
sbb
call
xchg
inc
jl
jmp
cmps
call
and
push
mov
mov
lods
scas
shr
imul
cmp
sub
cwde
push
or
daa
sahf
jb
xor
inc
mov
sbb
scas
bound
sub
xchg
jl
inc
adc
or
fild
adc
dec
add
inc
loop
inc
test
and
adc
and
jnp
add
mov
adc
test
clc
jnp
add
mov
push
jb
or
bound
push
or
or
xchg
out
or
packsswb
add
adc
pop
pop
lea
inc
add
push
ja
pop
and
test
outs
pop
pop
arpl
and
sbb
in
in
test
ror
or
add
sub
xor
add
test
sbb
outs
mov
jp
popa
pop
arpl
jns
add
test
mov
imul
sub
mov
int3
dec
(bad)
leave
inc
ret
clc
in
fcmovnbe
jmp
rol
jne
mov
mov
add
sub
sbb
mov
test
test
out
int
and
retf
push
push
mov
push
mov
test
je
xor
mov
push
mov
jo
ret
mov
push
push
cmp
setne
inc
xor
ret
mov
push
push
test
out
add
push
jne
mov
mov
mov
xor
mov
sbb
pop
lea
mov
sbb
imul
and
fs
pusha
imul
lock
les
pop
pop
pop
ret
nop
xchg
xor
and
cs
mov
sbb
dec
or
dec
mov
das
mov
ror
xor
fmul
mov
dec
test
jl
inc
pop
lock
pushf
or
fiadd
add
mov
jp
call
mov
mov
aad
jnp
push
lea
in
ja
xor
or
mov
sbb
ret
loop
jle
jl
cmp
jle
sbb
sbb
jbe
pop
pop
rcr
rol
lock
sbb
fisttp
fdivr
sbb
mov
push
xor
iret
add
xchg
jo
cwde
xor
adc
add
add
xor
mov
lea
ret
jbe
hlt
add
inc
sbb
push
sbb
or
push
and
inc
jg
jnp
cld
pop
enter
test
je
ss
rol
inc
push
call
inc
out
pop
clc
mov
jno
(bad)
add
pop
pop
clc
adc
and
pmaxub
jbe
in
test
pop
ja
mov
or
out
ss
pop
jl
dec
jne
sahf
push
push
clc
lock
jg
push
movs
cmp
cmp
cmp
loop
scas
sub
xchg
movs
xchg
shl
jl
mov
loop
xor
ja
jg
sub
js
(bad)
jl
inc
aas
movs
lds
(bad)
rol
mov
loop
das
sub
jne
or
test
pop
lock
push
pop
or
or
inc
out
or
sbb
pusha
jl
push
lahf
rcl
inc
jecxz
pop
jnp
push
and
sbb
adc
mov
sbb
mov
or
lods
cdq
mov
push
push
repnz
hlt
adc
(bad)
cmp
mov
jmp
inc
scas
adc
pushf
mov
(bad)
jmp
add
jnp
scas
push
adc
(bad)
cmp
cmp
jns
clc
div
mov
int3
mov
ret
xor
add
add
push
shr
adc
pop
sahf
pop
call
jp
xor
adc
inc
or
jl
inc
ds
imul
xor
inc
frstor
inc
jno
sbb
pop
push
add
loopne
xchg
test
sub
mov
mov
jge
cmp
fdiv
and
inc
jne
adc
xor
aam
adc
loope
sbb
push
or
fsubr
mov
or
mov
adc
and
ja
push
data16
data16
cmc
and
arpl
ror
in
out
or
xor
mov
stc
pusha
lock
scas
jl
jo
mov
mov
shl
inc
in
in
shl
in
call
idiv
movs
in
lea
jo
cmp
sahf
enter
push
pusha
push
sbb
sbb
(bad)
sbb
in
dec
jne
adc
fabs
sbb
int3
adc
bound
add
push
xchg
js
ror
jo
cwde
jle
add
mov
dec
stos
and
push
mov
jl
mov
fwait
sub
cmp
sbb
push
cmp
push
push
push
fsubr
dec
jmp
pop
dec
sbb
dec
xor
pop
dec
cmp
adc
es
push
cmp
cmp
sub
push
lods
int3
cmp
mul
xor
sahf
jmp
nop
mov
pushf
xchg
(bad)
addr16
jo
repz
fimul
mov
adc
mov
data16
je
aam
pop
add
cli
xlat
scas
cmp
xchg
leave
arpl
retf
icebp
in
and
dec
arpl
bound
out
les
in
push
dec
repz
pop
mov
call
outs
in
mov
popa
inc
add
mov
jmp
dec
push
pusha
adc
pushf
pop
sbb
fld
pop
fdiv
test
fsubr
push
xlat
fwait
xlat
cmp
js
lea
and
push
lock
mov
add
es
into
cmp
push
mov
mov
popf
xor
test
push
jb
sub
jle
push
shr
adc
das
jnp
or
pusha
and
jmp
and
mov
xchg
xor
or
or
ficom
or
test
scas
push
aad
mov
clc
and
ret
daa
push
frstor
xchg
xor
ins
mov
imul
repz
sar
sbb
sub
pop
pop
cdq
out
inc
sbb
cwde
cmp
ins
mov
sahf
fadd
shl
mov
cmp
jl
inc
xchg
push
arpl
in
xchg
iret
mov
or
mov
dec
pop
xor
bound
pushf
pushf
out
enter
push
jge
xchg
sbb
pop
fmul
pop
seta
lahf
pop
enter
enter
push
idiv
retf
stos
sar
ret
sbb
popa
movs
adc
cmp
and
and
push
gs
div
inc
rol
xor
cmp
sbb
bound
pusha
and
or
add
lock
pop
push
add
sbb
push
mov
pop
out
jne
push
lea
xchg
mov
jmp
push
shl
lea
cmp
adc
xchg
call
dec
outs
pop
scas
or
mov
pusha
dec
push
loop
inc
scas
jns
add
fs
jne
xor
mov
and
mov
pop
mov
in
pop
push
dec
add
loopne
and
xor
sbb
sbb
add
out
es
bound
rcl
xor
jo
pop
mov
sub
repnz
sub
lods
jno
pushw
push
fiadd
sbb
or
inc
dec
inc
in
(bad)
dec
je
adc
pop
jmp
sub
je
jmp
mov
cmp
cdq
and
xor
test
repnz
and
sbb
mov
adc
dec
dec
test
dec
lds
xchg
loopne
and
cmp
push
out
xor
mov
fchs
mov
push
sub
or
or
test
out
cwde
sub
mov
icebp
cli
jecxz
sbb
mov
out
xor
pop
dec
xchg
and
je
icebp
ja
add
cld
jmp
pop
pop
mov
test
xchg
clc
or
mov
out
(bad)
lock
xor
jne
test
pextrw
adc
mov
or
jmp
pop
cdq
dec
sahf
adc
xchg
in
adc
cmp
sbb
jae
xchg
dec
and
cmp
jae
dec
test
adc
and
shr
inc
adc
adc
cld
lock
jmp
adc
xchg
adc
jb
shl
pop
das
in
jne
loope
pop
push
jo
lea
jbe
mov
jnp
push
push
shl
push
jge
je
dec
hlt
push
in
rcl
jo
hlt
push
mov
mov
xchg
jns
pop
xor
inc
call
lods
cmps
xor
push
cmp
and
pusha
sbb
push
sbb
imul
or
cmp
pop
mov
(bad)
(bad)
push
pop
or
or
pop
mov
mov
sbb
sub
add
test
jbe
inc
jbe
scas
jmp
push
push
retf
adc
mov
ret
adc
jb
add
add
sbb
mov
jne
cmp
or
dec
push
rol
push
ret
shl
das
sbb
pop
sbb
test
pusha
cmp
or
call
aaa
adc
inc
push
xchg
or
cmp
pusha
call
(bad)
jmp
cmps
int3
push
ret
sbb
retf
dec
xchg
test
xchg
xchg
test
pop
leave
add
shl
into
aaa
push
ds
ret
push
cmp
cmp
adc
shr
xor
add
je
or
test
pushf
out
pop
sub
mov
retf
pop
test
test
mov
push
iret
icebp
jmp
aam
jmp
sti
add
jle
(bad)
pop
call
adc
or
sti
std
and
push
sub
jne
rcr
shl
neg
pop
sbb
adc
pop
jmp
jmp
mov
dec
aas
inc
cmp
or
dec
jo
test
push
jmp
xchg
ds
shl
cmp
fcmovnu
adc
call
rcl
pop
fcomip
push
dec
rol
sub
(bad)
cmps
out
cld
ret
push
pop
shr
pushf
lds
inc
add
jmp
jecxz
jmp
pop
add
les
scas
in
pop
mov
data16
add
hlt
repnz
mov
ins
daa
sbb
into
mov
(bad)
ja
add
sub
pop
pushf
sbb
push
push
fsub
ret
and
and
(bad)
cli
aaa
loopne
add
add
mov
or
or
cmp
adc
add
idiv
cmp
lock
(bad)
jp
and
cmp
ja
add
mov
push
mov
(bad)
int3
xchg
ss
call
(bad)
mov
push
or
into
add
test
sahf
popf
adc
push
and
pop
inc
retf
mov
sub
enter
mov
pop
fdiv
lea
mov
mov
fnsave
jl
(bad)
push
push
or
loope
stc
xlat
push
dec
aad
fisub
sbb
push
adc
hlt
push
mov
mov
cmp
sbb
int3
mov
inc
add
xor
in
cmp
js
add
cmp
push
inc
sub
or
pop
or
adc
stos
sahf
pop
aas
cmp
jge
xor
push
mov
inc
leave
add
test
or
test
add
add
sub
sub
xor
push
mov
jb
lock
fcomp
bound
inc
int3
pushf
push
jg
xchg
mov
mov
xlat
push
pop
imul
jnp
mov
push
sbb
stos
ror
xor
lods
data16
mov
and
pusha
sbb
imul
ins
jb
add
pop
aam
scas
sub
push
and
adc
dec
out
ins
clc
sbb
mov
fadd
into
dec
test
sub
push
jle
call
dec
or
push
xor
dec
ja
add
add
clc
iret
mov
pop
stos
fstp
mov
lock
adc
xor
test
aam
adc
(bad)
lods
push
push
scas
retf
adc
adc
fld
int
call
dec
int
xor
pop
les
rol
aaa
dec
(bad)
jae
mov
or
adc
pushf
int3
dec
sub
aaa
fdivr
add
(bad)
add
or
inc
(bad)
sbb
mov
inc
sub
adc
pop
test
jecxz
jmp
loope
ror
and
mov
outs
xor
dec
sub
call
dec
mov
pop
adc
or
jnp
adc
leave
or
adc
inc
jo
or
push
pop
push
loopne
daa
xchg
sbb
test
scas
jno
jb
sbb
jecxz
jecxz
jmp
or
cmp
div
test
jne
aas
cmp
and
popw
fnsave
jbe
push
sbb
hlt
out
ds
(bad)
(bad)
jnp
jnp
pop
jnp
fsubr
mov
adc
inc
ja
mov
inc
outs
dec
xlat
or
sub
xor
push
xor
or
inc
or
jae
and
push
fmul
das
dec
inc
pop
sbb
cwde
rcr
lock
cmp
jne
ret
adc
pop
jmp
(bad)
adc
inc
mov
cmp
iret
or
sbb
inc
iret
jns
sbb
mov
dec
or
test
mov
adc
or
sub
clc
aam
xchg
xchg
cmp
xchg
cdq
cmps
push
jo
push
test
push
jp
add
push
mov
dec
jo
lds
sti
cmps
pusha
je
and
mov
mov
mov
pusha
pop
push
jne
sub
add
ja
imul
and
add
fs
ins
jns
loopne
cmp
jle
out
loope
daa
mov
push
cmp
push
aas
enter
int
push
dec
push
scas
xchg
mov
push
pop
stos
xor
stos
or
sete
push
push
stos
xchg
cmp
(bad)
loop
sbb
mov
pop
loopne
push
cwde
push
inc
dec
jg
or
int3
scas
or
inc
and
lahf
push
cdq
loopne
jp
fidivr
or
inc
mov
test
mov
retf
sub
xchg
in
retf
mov
push
xor
dec
ret
(bad)
es
sbb
dec
movhps
adc
rcl
inc
int3
sub
inc
inc
cmps
ss
not
sbb
mov
lea
dec
cmp
jg
or
push
test
lods
in
(bad)
fstp
add
call
iret
or
jle
push
add
dec
clc
add
mov
cmp
push
cmps
div
dec
jae
pop
or
dec
cmp
adc
inc
or
inc
test
daa
jo
shr
loop
pop
lock
lock
shr
add
adc
mov
inc
and
push
sar
pop
adc
jge
lea
jmp
xor
sbb
je
lds
sbb
and
cmp
lea
aaa
aad
push
push
sub
pop
dec
das
(bad)
pop
pop
mov
inc
clc
inc
and
pop
ja
sub
pop
test
cs
call
xor
add
cwde
adc
push
jmp
imul
jmp
mul
jo
sub
mov
adc
push
outs
mov
dec
cmp
cmp
sbb
push
ins
cmp
dec
adc
xchg
test
sbb
mov
ins
and
pusha
dec
lock
(bad)
inc
ins
jo
jb
jae
outs
cmp
jns
je
ins
cs
gs
jo
outs
je
jae
push
adc
push
imul
fs
add
mov
mov
outs
dec
imul
jne
je
push
ret
add
loopne
je
push
(bad)
jne
mov
add
div
(bad)
jmp
mov
mov
push
in
(bad)
in
or
cs
in
jae
call
pop
add
jo
mov
push
call
pop
movs
sbb
les
mov
jle
cmp
xor
cs
add
inc
add
(bad)
cld
ss
mov
xor
sub
dec
xor
mov
xor
or
xlat
(bad)
cmp
add
pop
data16
scas
add
fsubr
add
bound
les
jb
arpl
ret
sbb
or
or
(bad)
or
inc
add
add
jp
adc
push
or
mov
add
mov
mov
ds
or
push
imul
and
cmp
pop
in
cmp
or
lock
dec
jp
sbb
inc
sub
cmp
xor
push
popa
arpl
xor
xor
and
mov
cmp
and
gs
imul
push
nop
retf
adc
out
popf
clc
int3
ins
je
push
and
mov
fiadd
jbe
aad
in
sahf
sbb
fisub
add
push
daa
xor
add
pop
sub
push
aaa
add
jo
and
push
cmp
inc
rcl
inc
in
in
mov
jo
jp
pop
test
nop
ret
in
mov
call
dec
cmps
xor
cmp
fstp
(bad)
int3
jno
push
lea
outs
push
jns
xor
inc
out
test
out
in
out
stos
jo
adc
test
and
adc
add
ins
cmp
and
pop
dec
jae
sbb
stos
cmp
mov
or
push
xchg
scas
dec
push
sub
pop
xor
jmp
push
push
dec
mov
pop
sti
push
dec
push
push
pop
push
jp
and
xchg
cmp
or
ja
add
jnp
pop
and
or
adc
push
(bad)
loop
push
or
jnp
dec
push
xor
push
addr16
jo
add
xchg
fs
cmp
mov
mov
push
inc
pop
outs
jnp
add
inc
mov
rol
fmul
inc
add
nop
fsubr
ret
or
pop
ds
xor
mov
jns
add
fcmovbe
jbe
ja
movs
push
push
pusha
es
push
push
jae
(bad)
xchg
jl
ins
cmps
dec
ja
ins
popa
lds
push
push
test
dec
(bad)
in
mov
mov
mov
(bad)
push
mov
scas
ins
ss
or
push
test
repz
pusha
push
push
dec
pop
add
in
jnp
mov
sub
cmp
inc
jle
pop
push
rol
and
and
nop
push
in
mov
add
push
mov
push
fcom
pop
mov
inc
movs
call
or
sbb
or
js
jo
test
xor
cs
outs
fs
ds
and
cmp
and
inc
sub
jge
or
stos
outs
jb
jo
mov
loope
ret
inc
push
je
ins
test
std
mov
arpl
test
loopne
outs
inc
ins
outs
jae
lock
push
mov
mov
push
ficom
outs
arpl
mov
dec
bound
jp
push
arpl
adc
xor
or
pop
add
xchg
xlat
push
dec
(bad)
not
pop
(bad)
push
movs
adc
add
add
ud0
outs
push
cld
call
push
bound
add
(bad)
fcomp
out
js
or
in
push
add
jo
ins
sbb
imul
mov
pushf
inc
or
jp
sub
or
inc
dec
ja
sub
mov
inc
pop
mov
mov
jns
mov
or
add
pop
inc
js
jnp
add
dec
cmp
movs
in
mov
mov
test
fld
xchg
jae
(bad)
cdq
pusha
inc
xor
lahf
jb
pop
pop
mov
in
or
dec
push
jo
or
mov
push
xor
push
push
arpl
jae
mov
inc
test
ds
outs
or
in
test
test
sbb
pop
jae
lods
add
pop
dec
or
mov
mov
pop
inc
pop
in
or
inc
fisub
pop
out
add
jp
jmp
mov
xor
iret
rcl
cwde
xchg
jp
push
mov
jmp
add
das
add
sub
gs
out
or
push
sbb
enter
rol
lods
inc
outs
test
push
outs
mul
lods
add
jnp
and
add
inc
push
mov
dec
mov
jb
test
fild
cmp
cmp
aaa
fcom
ins
inc
add
jecxz
int
test
dec
outs
jmp
outs
(bad)
jge
push
outs
dec
jbe
push
jb
adc
jmp
test
xlat
jno
add
push
jns
ss
and
outs
inc
push
inc
inc
xchg
jb
push
imul
ror
sbb
popa
adc
sub
das
test
cmps
adc
data16
jge
mov
sub
lea
imul
inc
jbe
dec
imul
adc
(bad)
pushf
push
inc
sar
and
movs
cmp
pop
cmps
add
enter
ja
cmps
ret
in
pop
pusha
popa
fs
jns
je
jb
daa
add
out
jb
xchg
ja
dec
or
push
jo
lods
push
push
mov
lock
adc
daa
add
dec
mov
bound
mul
cmp
inc
outs
inc
fs
ror
push
add
mov
xchg
fisttp
dec
outs
imul
mov
sub
adc
rcl
dec
jnp
jl
adc
pop
clc
adc
fbstp
inc
inc
add
add
and
push
gs
lds
adc
or
arpl
pop
pop
ror
stos
gs
mov
xchg
jge
push
cld
or
rol
leave
in
jae
rcl
add
loop
or
push
imul
inc
mov
ds
adc
pop
cld
sbb
adc
pop
inc
outs
cmc
pop
movs
adc
js
mov
inc
div
dec
mov
scas
sub
add
ins
ja
pop
jae
xchg
je
dec
js
push
ja
bound
stc
or
in
sti
int3
push
je
fidiv
clc
call
addr16
adc
cmc
or
ins
jno
test
sbb
cwde
dec
adc
dec
adc
loope
pop
(bad)
and
xor
and
sub
je
add
fnstsw
cmp
push
sbb
cs
clc
jns
and
pop
or
enter
mov
les
(bad)
dec
xchg
push
ins
push
and
inc
mov
fcom
push
jo
shl
or
fsubp
cmovp
or
mov
xor
hlt
push
loopne
dec
popa
ins
cmp
adc
push
xor
xlat
fcomp
loope
inc
gs
popa
jae
popa
fimul
sub
cmp
dec
add
add
inc
sbb
push
movs
or
(bad)
or
cmp
(bad)
inc
xor
xor
ins
sbb
test
pop
out
pop
cmp
jne
out
fcom
sub
nop
test
daa
inc
lods
inc
test
pop
jae
or
pop
dec
dec
or
mov
pusha
or
aaa
clc
or
icebp
sub
imul
add
sbb
pop
and
je
add
cmp
push
in
rol
sbb
pop
or
adc
scas
jo
mov
or
xchg
fistp
pop
sbb
int
jns
pop
pusha
add
inc
adc
cmp
pusha
popf
xor
mov
ror
pop
mul
and
mov
or
test
cli
test
mov
jno
test
paddusb
fld
push
outs
arpl
jb
pop
xor
push
push
cmp
inc
sub
cwde
sti
mov
test
xlat
rcr
mov
arpl
add
mov
add
imul
xor
dec
dec
sbb
mov
add
inc
fld
pop
test
popf
leave
call
push
xor
fnstsw
and
out
add
or
jp
les
jg
ss
pusha
loopne
cwde
sar
mov
jg
dec
fcom
and
dec
outs
arpl
add
dec
fistp
add
or
pop
loopne
jbe
pushf
mov
xchg
inc
push
addr16
das
mov
cwde
sub
cwde
pushf
or
in
sub
add
fldenv
outs
(bad)
aam
add
fs
shl
add
cwde
add
ret
test
sub
xchg
sub
ja
inc
pop
loope
pop
out
mov
or
sbb
fcom
push
stc
pop
or
adc
jae
outs
jno
inc
stos
jne
mov
xor
or
rol
pop
jmp
hlt
hlt
sbb
add
sub
pusha
jp
inc
jne
into
jl
out
ss
sar
mov
sub
jl
or
test
dec
outs
jbe
dec
inc
dec
dec
push
shl
push
add
shl
mov
add
bound
add
adc
adc
sbb
add
add
pop
add
int3
inc
cmp
push
addr16
(bad)
dec
sbb
cmovne
mov
push
aad
pcmpgtd
sbb
test
add
mov
in
div
add
inc
or
or
or
push
adc
add
fldenv
fcom
lock
aaa
shr
mov
sub
inc
xchg
pop
lds
test
pop
addr16
jmp
test
push
push
test
push
int3
ss
jmp
scas
push
dec
sub
cmps
adc
push
push
mov
sub
jne
fisttp
out
mov
fbstp
cmps
ss
jle
inc
ret
adc
adc
(bad)
(bad)
cmp
ds
fucomp
test
das
jl
ror
sbb
push
pop
std
dec
push
ins
imul
js
cwde
cmps
fist
fs
inc
pusha
cmp
push
and
sbb
loopne
adc
or
cmp
xchg
add
pop
jge
and
and
mov
inc
dec
mov
pop
sub
ds
popa
bound
xchg
push
xor
push
popf
adc
xor
adc
push
add
xchg
pop
movs
pop
addr16
shl
imul
(bad)
outs
fnsave
pop
add
sub
es
lods
push
or
jns
push
(bad)
adc
aaa
data16
pop
in
push
dec
push
pop
push
call
cs
sub
cwde
mov
add
jno
adc
arpl
xor
push
cdq
pop
inc
xor
sbb
je
xor
xor
mov
hlt
mov
add
lahf
test
adc
ins
pusha
movs
sti
scas
movs
sbb
fdivr
jne
cmp
imul
cwde
jne
pop
sbb
movs
mov
dec
push
mov
push
dec
fsubrp
(bad)
mov
add
aas
(bad)
(bad)
(bad)
(bad)
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
js
iret
repz
enter
in
inc
xor
push
jo
mov
jge
js
ds
dec
mov
outs
mov
cmps
mov
adc
or
mov
and
stc
movs
aam
mov
xor
ss
popa
in
ins
ins
jno
retf
xchg
dec
add
pop
sbb
loopne
fcomp
add
add
scas
rol
jb
or
sbb
mov
icebp
(bad)
or
fs
dec
out
in
enter
mov
and
and
mov
(bad)
and
xor
sbb
ins
or
cmp
out
sbb
pop
and
das
sub
cld
xchg
push
and
inc
add
add
dec
adc
clc
call
xor
push
add
add
or
add
and
xchg
fwait
inc
cs
add
sub
push
add
add
aaa
push
sub
imul
and
or
push
fwait
or
fwait
(bad)
inc
push
test
jne
call
lock
pop
xor
mov
mov
xor
jnp
dec
push
rcl
popf
xchg
and
pop
aad
lea
aad
mov
or
adc
pop
and
add
jmp
inc
sub
adc
out
pop
inc
inc
lods
jae
pusha
adc
dec
add
adc
cwde
fwait
aas
inc
push
adc
fcom
pop
inc
push
fwait
add
inc
or
cdq
adc
pop
stc
int3
dec
add
stos
mov
dec
or
and
cmp
test
push
xchg
adc
add
push
inc
cmp
je
inc
outs
clc
adc
fdiv
fs
jb
or
and
jae
or
ror
and
sbb
lods
dec
push
sbb
and
jle
stos
xor
lahf
push
inc
loopne
and
movs
pop
jbe
sti
push
xchg
in
js
movs
aad
push
pusha
inc
mov
inc
jns
sahf
lods
add
sahf
imul
or
mov
imul
loopne
mov
inc
adc
or
jb
jne
inc
pusha
xchg
xor
mov
pusha
daa
call
push
outs
shl
rcl
fs
xor
add
mov
cli
sbb
mov
aas
sbb
push
clc
or
sbb
inc
gs
ins
imul
jno
jno
loope
push
inc
adc
jae
(bad)
sub
jp
fdivr
add
jg
inc
test
dec
add
daa
js
xchg
or
sbb
sub
mov
jecxz
adc
mov
fdiv
adc
fmul
jbe
inc
jb
sbb
jae
rol
nop
inc
aas
mov
aas
scas
add
sahf
(bad)
jg
loopne
add
jae
es
fistp
call
sbb
out
pop
(bad)
call
add
xchg
rol
add
push
movs
push
or
mov
jmp
bound
dec
adc
sahf
jle
adc
pop
call
(bad)
in
inc
clc
mov
cmp
out
dec
adc
retf
push
cmp
lock
push
pop
xchg
inc
and
add
data16
unpckhps
xchg
dec
or
pop
inc
sbb
adc
bound
lods
push
or
pop
sub
xchg
jmp
into
inc
fstp
bound
loope
inc
push
stos
jae
inc
pusha
jo
imul
mov
clc
dec
in
sbb
test
mov
adc
mov
aaa
test
mov
loopne
bound
fldenv
lahf
jne
dec
add
aaa
add
sub
mov
push
jne
aaa
sti
fidiv
mov
add
push
call
lock
and
sbb
mov
adc
mov
(bad)
loop
inc
inc
pop
cs
pushf
add
jge
scas
scas
lahf
mov
mov
xor
ror
pop
popa
inc
js
push
fs
or
mov
mov
and
or
outs
mov
int3
cs
js
pushf
mov
and
mov
or
imul
push
sub
push
push
ror
cmp
icebp
ror
add
gs
and
jb
rcr
cmp
imul
imul
cwde
sbb
push
lea
jne
and
or
enter
das
fwait
push
xadd
out
test
inc
(bad)
sub
inc
adc
jmp
pop
dec
pop
in
mov
mov
movs
or
popa
jmp
rsm
sub
shl
(bad)
ds
in
or
add
pop
jnp
fs
int
iret
inc
fst
adc
icebp
jmp
and
dec
test
or
clc
cmps
daa
pushf
push
mov
push
lock
dec
out
(bad)
push
push
sub
cld
mov
pop
shl
int3
add
scas
mov
push
cli
add
mov
loop
adc
jmp
push
adc
push
adc
nop
pop
cmp
and
jp
xchg
push
push
stos
adc
xor
mov
and
ror
jg
loopne
shl
iret
pop
rol
inc
or
loope
push
push
inc
popf
fidiv
sub
push
or
push
loopne
inc
cmp
loop
xchg
sbb
mov
bound
in
sbb
jp
add
sbb
das
out
push
inc
jecxz
adc
sbb
(bad)
or
push
in
scas
jg
push
pop
pop
or
(bad)
sbb
jo
ror
loop
test
inc
ja
push
push
in
sar
jno
or
fimul
jae
fcomp
loope
and
dec
push
mov
aas
aaa
pop
sbb
mov
add
es
das
imul
rol
ror
xchg
ret
push
je
lar
or
loopne
add
std
sbb
jmp
adc
pop
iret
jge
jne
test
add
adc
xor
outs
or
rol
cmp
in
outs
mov
add
push
pop
sar
int3
push
push
imul
inc
jl
sub
pshufw
sub
add
cmp
and
ds
daa
imul
cmp
dec
mov
shr
push
mov
mov
pop
push
push
add
ror
idiv
icebp
push
daa
adc
call
test
add
call
loopne
adc
mov
inc
cwde
dec
sub
sub
daa
out
out
stos
lock
and
xchg
dec
(bad)
cmp
dec
inc
or
push
ficom
mov
je
or
mov
mov
mov
cmp
inc
pop
add
or
test
int
xor
adc
adc
or
mov
pusha
xchg
nop
and
xor
and
mov
mov
xchg
and
mov
xchg
jns
mov
inc
iret
cmp
mul
bound
fs
push
push
or
fwait
and
jge
mov
stos
daa
ficomp
or
ins
addr16
inc
pop
add
outs
push
jb
mov
cli
pop
push
dec
bound
(bad)
or
xchg
inc
xor
add
imul
adc
sar
add
stos
xor
shr
loopne
outs
jo
inc
dec
and
cmp
int3
jne
test
les
add
mov
xor
je
int3
xor
ins
inc
xor
div
int
pushf
push
mov
push
mov
hlt
not
(bad)
sub
mov
xor
push
and
(bad)
and
dec
das
int3
aam
inc
outs
or
(bad)
lmsw
adc
inc
pusha
rcr
popa
ret
setl
and
pop
or
pop
fs
jno
xor
add
in
add
in
sbb
jmp
pop
or
hlt
push
aam
pusha
sahf
sahf
xor
in
fadd
test
lods
in
xchg
(bad)
fdiv
cmp
or
inc
pop
xor
add
test
aas
mov
or
sbb
sbb
mov
sbb
mov
and
pop
sbb
popf
sub
add
dec
sbb
pop
mov
gs
inc
xchg
and
jo
mov
pushf
push
jo
mov
xor
cmp
or
mov
fiadd
arpl
out
cs
call
shr
mov
lds
add
and
shl
sbb
add
push
retf
stos
xchg
ret
cmc
jge
mov
adc
mov
ins
push
xor
or
push
inc
ins
out
or
ja
cmps
or
xor
test
retf
cmp
ret
sbb
clc
sar
lods
sub
and
xlat
(bad)
sbb
xlat
fsubr
adc
pop
jno
data16
or
inc
mov
pop
add
jns
imul
push
daa
shr
leave
and
pop
loope
jbe
push
call
loopne
(bad)
dec
pavgb
adc
ja
xchg
inc
add
push
sub
jge
out
shl
mov
jns
xchg
enter
outs
mov
sbb
xchg
push
mov
(bad)
ss
add
xor
stos
push
imul
sbb
ins
dec
icebp
mov
cmp
ror
aaa
dec
or
pusha
inc
or
test
stos
add
mov
cmp
add
out
adc
cmp
mov
pop
mov
mov
fisttp
es
jb
mov
mov
jns
pop
mov
inc
jo
mov
mov
sbb
pop
pushf
add
or
in
dec
int3
fst
imul
jae
loopne
mov
or
or
or
adc
dec
push
sub
call
pop
and
push
inc
pusha
bound
cmp
pop
dec
adc
jb
jne
push
push
test
push
or
jae
mov
inc
mov
cmp
mov
mov
rcr
mov
in
sbb
(bad)
jmp
add
addr16
(bad)
inc
adc
mov
mov
cmp
mov
and
ret
add
popf
push
movs
or
jne
push
inc
and
or
jo
movs
add
mov
mov
or
inc
ret
(bad)
fmul
pop
test
or
ret
call
cmp
mov
pop
sub
dec
js
add
sti
lds
adc
pop
pop
enter
(bad)
xor
test
test
adc
jbe
pop
jno
adc
push
lea
inc
push
or
mov
mov
lds
inc
bound
loope
fmul
inc
dec
retw
adc
idiv
and
pop
sbb
(bad)
inc
adc
xor
push
dec
outs
jo
adc
fistp
jecxz
jne
jns
jne
arpl
and
jne
ins
movs
xchg
add
mov
inc
mov
mov
mov
loopne
je
pop
cmp
or
std
aas
clc
in
in
ret
mov
push
test
je
add
lock
mov
mov
mov
xor
mov
sbb
mov
inc
inc
add
test
mov
movs
mov
test
je
push
fidiv
pop
mov
pop
ret
nop
jge
pop
xlat
mov
mov
shl
cmp
add
test
nop
nop
adc
or
add
mov
adc
xor
mov
push
mov
ins
outs
fwait
jmp
ret
adc
push
mov
mov
sub
jle
je
fwait
mov
outs
jne
sub
mov
mov
mov
call
jb
imul
inc
dec
ret
les
cmps
bound
sbb
in
mov
adc
inc
xchg
xchg
mov
mov
or
jle
push
mov
(bad)
mov
test
jp
or
in
mov
push
add
push
sub
push
xor
xchg
cmp
sar
mov
out
std
ud0
push
mov
push
jbe
inc
cld
xor
push
push
xor
mov
fld
sub
pop
push
adc
sbb
lds
jmp
push
cld
hlt
lods
xchg
xchg
test
pop
pop
or
outs
sahf
adc
icebp
xchg
mov
frstor
in
fbstp
fisub
mov
inc
aaa
mov
sub
xchg
shr
inc
clc
outs
imul
sbb
inc
add
sbb
xchg
add
in
dec
test
nop
xor
and
jge
cmps
xchg
and
clc
mov
call
pop
hlt
mov
cwde
sbb
lock
loop
ins
inc
jmp
repz
push
cmps
call
loopne
(bad)
in
clc
cmp
mov
inc
in
jno
cwde
adc
in
mov
popa
inc
stos
lds
hlt
mov
data16
mov
int3
les
call
pusha
dec
mov
daa
bound
pusha
es
push
push
ja
rcr
nop
xchg
(bad)
and
add
mov
fisttp
lea
xlat
repnz
stc
xor
loopne
cmp
(bad)
jge
dec
inc
lea
cmp
xor
icebp
adc
xchg
add
inc
adc
in
mov
clc
xor
xor
or
inc
enter
imul
jl
sub
call
pop
movs
div
shr
sub
xchg
mov
push
adc
(bad)
pop
fcomip
mov
jnp
push
and
push
inc
add
sub
(bad)
add
cmps
and
xor
cmps
adc
(bad)
sbb
pop
jbe
push
dec
push
fld
sbb
jmp
stos
add
mov
mov
push
ror
clc
push
add
js
dec
cld
pop
or
jl
inc
xor
mov
test
add
cwde
dec
loopne
daa
sbb
cli
aas
es
fiadd
dec
jne
pop
sbb
jnp
mov
imul
fdiv
jo
push
mov
icebp
aam
js
cld
stos
dec
(bad)
sbb
pop
mov
sbb
mov
iret
inc
and
add
or
out
mov
cmp
setg
mov
ret
xchg
lahf
inc
mov
fiadd
scas
sahf
add
sub
shr
sbb
or
xor
dec
mov
and
xor
ja
call
mov
add
xchg
sbb
jnp
loopne
push
push
stc
xchg
lock
or
iret
pop
and
xor
jg
adc
inc
mov
test
sub
push
pusha
xor
outs
mov
add
mov
mov
les
shl
mov
mov
lods
rcr
test
pushf
fiadd
test
test
pop
push
mov
mov
sar
imul
repnz
or
xor
dec
inc
push
gs
imul
add
xchg
jmp
inc
js
xchg
orps
daa
sub
pcmpgtw
push
frstor
jae
add
xchg
outs
sub
cmp
adc
sbb
push
outs
mov
add
xor
dec
outs
sub
dec
imul
inc
adc
mov
jo
mov
add
std
push
add
push
inc
push
pop
inc
data16
add
jns
cmp
mov
jns
jle
rol
sahf
push
mov
ds
mov
fsub
mov
jnp
pop
add
xchg
push
push
sub
inc
dec
jns
push
add
and
lock
(bad)
jo
lea
xor
cmp
push
or
dec
or
pop
add
cmps
pop
dec
mov
jb
and
add
outs
adc
and
pusha
sub
add
xchg
mov
inc
adc
adc
xchg
inc
mov
inc
js
or
cmp
mov
stos
jmp
mov
ret
pop
sub
int
das
inc
call
and
push
sahf
pop
lahf
or
mov
gs
test
and
cmps
adc
cmp
sahf
fwait
dec
inc
mov
xchg
add
sbb
loope
cmps
or
inc
mov
enter
fistp
shr
add
or
xor
mov
xbegin
pusha
or
mov
pop
ficom
clc
or
mov
mov
jmp
inc
pop
bound
inc
pop
xchg
idiv
lea
ret
push
js
cmp
cs
cwde
mov
rcr
push
fs
in
push
mov
movs
sub
ss
mov
cli
add
mov
xchg
jecxz
adc
(bad)
scas
push
mov
dec
fadd
enter
mov
dec
dec
sti
add
movzx
push
dec
pusha
or
lods
xchg
hlt
dec
xchg
and
xchg
add
dec
retf
xchg
fsubr
xchg
lea
js
retf
movs
push
es
xchg
jecxz
aas
xlat
lods
cmp
jg
jg
and
jg
jecxz
xor
cmp
jg
stc
adc
mov
shl
js
xchg
sbb
pop
xchg
pop
inc
xor
mov
pop
push
mov
xchg
sub
push
test
cli
dec
shl
int3
sar
clc
das
(bad)
pop
jecxz
push
lock
xor
pusha
div
push
jge
lea
cmp
add
sti
mov
int
inc
aam
inc
fcom
lea
push
dec
cmp
(bad)
mov
stc
test
inc
or
hlt
push
fsubr
loope
xchg
ds
mov
mov
mov
lahf
aaa
daa
test
ret
pop
sub
push
push
push
xor
mov
inc
inc
ret
dec
mov
outs
add
push
pusha
inc
xor
mov
cmp
sub
cmp
cmp
adc
enter
jl
nop
nop
inc
jl
cmp
shl
sbb
popa
add
add
xor
fnsave
dec
mov
(bad)
ins
cmp
sete
test
add
popf
xor
test
pop
fs
inc
ss
aam
inc
jnp
xor
push
and
fidiv
mov
mov
(bad)
pop
pusha
xchg
mul
push
jo
add
mov
stc
pop
ja
and
bt
in
sbb
sub
ss
cmp
jne
xor
xchg
push
or
nop
cmp
mov
adc
cmp
mov
and
(bad)
test
retf
wbinvd
iret
push
aaa
or
outs
mov
jge
in
out
call
int3
inc
mov
cld
ret
jmp
jmp
inc
ret
sahf
mov
inc
and
shl
xchg
ds
push
lods
add
enter
loopne
push
add
call
test
je
jmp
adc
cmp
lods
in
mov
sbb
mov
fwait
dec
movs
and
cwde
leave
mov
inc
xor
mov
jge
rcr
add
adc
push
dec
xor
add
xchg
loopne
and
test
sub
inc
xlat
and
pop
push
fisttp
cmps
in
jmp
ds
push
(bad)
in
cmp
mov
mov
sbb
push
push
rcr
ins
cmc
lea
pop
mov
pop
add
retf
ins
adc
cli
loopne
mov
mov
jnp
xor
add
add
xor
add
sub
adc
dec
mov
xor
sbb
inc
add
add
inc
dec
pop
push
es
push
cmp
scas
ss
and
out
push
xchg
cmp
in
gs
test
retf
pop
test
and
sub
icebp
inc
cmps
xchg
pushf
inc
je
inc
cmp
nop
clc
test
clc
push
je
movs
cmp
mov
fwait
aas
or
in
mov
pop
mov
sbb
xchg
sub
xchg
ror
adc
(bad)
fiadd
xchg
pop
jae
fisttp
push
nop
mov
and
icebp
adc
xchg
test
cmps
aaa
pop
icebp
cmp
pop
add
pop
lock
add
aam
fwait
test
dec
jne
outs
call
je
imul
das
inc
je
adc
and
add
inc
ret
lods
xor
jmp
push
js
ffreep
je
inc
push
adc
add
mov
loop
mov
dec
mov
rol
mov
mov
sub
push
sbb
mov
mov
xchg
hlt
push
pop
ins
pusha
int
push
and
bswap
out
or
ret
xor
xchg
cs
xor
lock
push
push
adc
outs
inc
add
sbb
push
scas
int
sub
mov
mov
mov
mov
push
movs
(bad)
call
mov
mov
push
stos
test
dec
add
cdq
gs
adc
pop
xor
xor
hlt
or
mov
add
inc
xchg
sub
pop
sbb
xor
movs
cdq
daa
xchg
xchg
add
mov
add
ds
sbb
pusha
inc
sub
std
js
pop
inc
fst
sub
fdiv
or
lea
pop
jno
mov
jl
inc
pushf
jo
or
mov
dec
pop
lods
adc
sub
jno
sub
cmp
pop
dec
jne
ds
mov
dec
inc
sti
bound
call
push
xchg
jno
mov
jecxz
push
sbb
test
push
inc
fdiv
shl
push
add
adc
push
inc
(bad)
or
ret
nop
dec
je
scas
(bad)
out
push
xor
cmp
fldenv
xor
mov
ror
push
adc
stos
adc
scas
test
xchg
adc
mov
cmp
xchg
retf
inc
dec
jmp
add
lahf
ror
jl
add
add
cmp
or
mov
loopne
dec
and
add
pop
inc
test
movs
or
es
push
or
mov
jmp
jbe
dec
pop
xor
loopne
xchg
adc
loop
cdq
cmp
ficom
jo
and
fsub
in
adc
(bad)
call
inc
push
jo
adc
dec
ror
ds
in
adc
add
loop
adc
mov
adc
jmp
cmps
arpl
cmp
shl
push
imul
push
idiv
jmp
sbb
inc
add
outs
mov
(bad)
popa
adc
push
enter
cmp
mov
fldl2e
xor
enter
in
stos
add
mov
call
je
mov
push
js
inc
jge
push
fmul
adc
inc
pcmpgtb
pushf
int3
das
pusha
or
mov
or
sbb
call
adc
dec
neg
mov
cmp
aaa
and
aam
aaa
add
outs
sub
aaa
add
je
ret
daa
sbb
cmp
sbb
call
push
jmp
add
inc
or
push
test
inc
xchg
xor
or
mov
sbb
pop
inc
push
push
cld
and
nop
add
fwait
jle
pusha
mov
push
or
jbe
adc
push
cs
call
mov
sbb
mov
and
xor
cmps
jp
mov
iret
les
add
iret
or
xchg
mov
test
mov
or
cmp
sub
inc
imul
push
jae
rol
shl
or
push
nop
push
xor
inc
push
add
test
addr16
aaa
(bad)
xor
sahf
lea
add
xchg
scas
xchg
cdq
sub
adc
adc
sbb
dec
sbb
in
movs
cmp
je
mov
mov
clc
jl
cmp
test
(bad)
ja
fild
add
or
sbb
movs
dec
push
push
mov
enter
add
xchg
jae
adc
fild
test
bound
push
push
push
sub
and
out
push
daa
mov
mov
pusha
push
js
lods
ret
mov
or
mov
retf
rcr
es
je
mov
std
div
or
jmp
mov
pop
jp
je
dec
setne
neg
sbb
push
lahf
sbb
push
je
xchg
jge
jmp
pop
mov
adc
mov
push
mov
call
sub
add
mov
cmp
xlat
xchg
mov
fwait
or
lea
or
dec
mov
cdq
adc
call
inc
and
cwde
test
rcr
ja
adc
sbb
or
or
mov
aaa
adc
cmps
loopne
xchg
jl
outs
nop
dec
and
sub
pop
mov
fs
loope
or
aas
cmps
clc
rcl
push
in
in
mov
adc
pop
or
sub
mov
fimul
jmp
dec
fimul
inc
jl
call
add
ret
(bad)
sbb
(bad)
and
enter
in
cwde
test
mov
shl
jbe
or
mov
cmps
push
mov
push
dec
aad
ret
xchg
push
mov
mov
inc
sub
js
call
les
in
push
scas
xor
push
pushf
mov
or
mov
xchg
pop
aas
or
inc
and
and
aaa
sub
fnsave
inc
and
and
jmp
movs
clc
and
xor
lahf
push
movs
inc
loopne
(bad)
jae
add
mov
cmp
inc
jmp
shr
sbb
and
fimul
in
hlt
push
and
fnstsw
sbb
add
das
xchg
xchg
add
push
jle
and
pop
pop
jl
lahf
js
pop
pop
sahf
mov
adc
xor
enter
mov
adc
lahf
enter
xchg
test
xchg
xchg
and
cmps
inc
fild
pop
and
(bad)
and
and
jge
inc
jb
nop
jg
and
loopne
jg
or
jmp
adc
out
sbb
cmp
sbb
test
and
or
push
adc
sbb
das
int3
and
bound
mov
inc
repnz
dec
jne
jmp
inc
mov
and
pop
mov
jmp
loopne
add
inc
cmp
jne
cs
mov
jmp
xor
fistp
jns
cmp
mov
shl
imul
mov
imul
and
adc
mov
inc
xchg
xchg
outs
add
das
das
push
push
inc
cld
or
push
push
or
ins
inc
xor
push
loopne
ins
and
jecxz
push
jo
adc
cld
lock
xor
inc
shr
loope
out
pop
mov
add
mov
mov
js
outs
mov
add
sbb
mov
fsub
std
scas
mov
movzx
pop
add
pop
ins
or
jl
aas
cld
lods
fwait
mov
jb
cdq
ins
mov
hlt
mov
es
jmp
rol
xor
dec
outs
push
sahf
shl
push
int
scas
adc
mov
jp
cli
pop
pop
dec
ins
sbb
mov
sub
daa
sahf
in
cmp
ja
jg
jmp
push
pop
inc
lahf
push
inc
jnp
neg
jl
ficom
ins
push
jmp
into
and
aam
add
cmp
test
cdq
add
(bad)
mov
mov
jmp
cmps
ror
jmp
je
inc
inc
es
mov
xor
(bad)
cdq
add
icebp
jle
jo
fbstp
retf
jmp
add
rol
pushf
sbb
or
jmp
sbb
add
loopne
mov
add
adc
inc
mov
jmp
mov
and
sub
out
out
add
sete
inc
ret
xor
iret
ds
fs
pop
(bad)
xor
pusha
adc
dec
adc
xchg
call
test
push
inc
sbb
ss
add
jo
(bad)
leave
mov
test
or
lahf
push
mov
xor
or
les
mov
lea
xor
setnp
int3
mov
mov
cmps
mov
add
mov
cli
emms
mul
jg
idiv
jmp
mov
mov
or
inc
add
cmp
jne
push
(bad)
inc
mov
ja
clc
dec
dec
pop
adc
push
adc
jne
cmp
lods
push
mov
jp
sub
mov
adc
inc
stos
add
or
and
inc
test
in
mov
and
outs
in
sbb
sbb
jmp
dec
aad
pop
sub
pushf
sub
rcr
loopne
jo
sub
xor
sub
jo
xchg
out
jo
add
pushf
test
popf
or
sub
dec
adc
or
inc
add
fdivr
and
fadd
and
pop
add
ins
push
mov
test
jbe
pop
push
retf
push
mov
inc
shl
add
mov
add
xor
imul
cmp
js
movhps
jg
mov
mov
pop
add
loope
adc
call
movs
add
in
sub
in
inc
cmp
xchg
adc
lods
jmp
jne
mov
xor
inc
add
and
into
test
fist
and
add
dec
or
dec
push
push
arpl
(bad)
sbb
ja
cmp
ficom
dec
cld
imul
sub
fidiv
inc
loopne
dec
sbb
dec
push
aas
or
sti
jmp
push
stc
sub
ret
cld
aas
push
inc
cmp
mov
jo
popa
sbb
inc
sbb
pop
xchg
aas
pop
pop
jne
sub
ret
inc
clc
aas
adc
pushf
pusha
arpl
inc
push
call
inc
js
dec
sbb
push
(bad)
push
sbb
test
adc
mov
ret
add
jmp
dec
xchg
fstp
sub
js
or
or
or
loopne
pop
xor
adc
lea
cmps
mov
int3
and
addr16
loopne
cmps
aam
neg
popa
or
shl
mov
stos
fsubr
jnp
sub
data16
loop
adc
and
cmp
loopne
cmps
cmp
sahf
mov
outs
or
js
sbb
xchg
push
push
aam
xor
mov
je
adc
lds
add
adc
les
and
sub
push
loopne
cmps
adc
inc
xchg
(bad)
stos
test
inc
cmp
in
enter
sti
nop
push
push
push
enter
mov
shl
ss
(bad)
cli
int
dec
(bad)
fcom
scas
adc
inc
mov
push
orps
mov
scas
hlt
jmp
cmp
je
test
test
and
cld
(bad)
mov
cmp
jne
push
jmp
mov
jge
fiadd
cmp
adc
loopne
push
push
dec
movs
inc
test
or
lds
cmp
mov
push
or
adc
adc
hlt
push
push
and
sbb
outs
jo
imul
and
jl
mov
inc
pop
pop
pushf
call
hlt
daa
cmp
xor
mov
sub
das
pop
cmps
and
cmp
cwde
xor
jg
inc
inc
or
test
add
add
mov
sbb
cmp
mov
cmps
jecxz
xchg
xchg
or
sbb
int3
popa
inc
xor
xchg
add
cmp
sbb
sti
add
cmp
jmp
jmp
sar
rcl
push
mov
push
cmp
jbe
push
mov
cmps
cdq
cmc
fwait
sbb
jbe
mov
or
inc
ins
aam
ins
adc
int
sbb
jle
clc
sbb
fwait
dec
jmp
inc
pop
ds
jmp
push
mov
xchg
aam
inc
ins
or
add
fidivr
jne
and
push
and
sub
invd
int3
mov
and
sub
cld
inc
adc
add
mov
dec
lock
idiv
mov
sahf
sbb
push
add
cmp
push
aam
sub
imul
js
mov
cwde
pop
add
pop
push
mov
or
push
or
push
les
sbb
jle
(bad)
push
add
sub
out
mov
push
in
or
push
or
nop
push
fcom
ds
jbe
push
dec
pop
lods
mov
push
ins
(bad)
sub
cmp
or
cld
pop
push
sbb
ins
(bad)
cwde
inc
push
in
into
dec
cld
add
jo
push
int3
sti
fidiv
es
push
cmp
push
or
and
push
div
push
in
jno
mov
push
mov
movs
inc
sbb
cmps
push
inc
into
aam
out
jnp
sahf
add
rcr
jle
aaa
push
xor
nop
push
ins
(bad)
lock
sbb
ss
push
hlt
pop
fcomi
call
inc
push
mov
fidiv
pop
fdivr
push
or
push
test
es
sub
push
pop
pop
outs
push
ins
ins
add
mov
fiadd
push
pusha
push
xchg
and
lock
not
sbb
cld
and
rcr
dec
ror
or
inc
dec
push
inc
ins
xchg
pop
in
inc
add
add
cwde
mov
pop
popa
shr
popa
addr16
mov
push
jb
dec
xchg
or
outs
dec
push
popa
je
dec
gs
add
add
shl
add
gs
data16
mov
cld
push
inc
dec
ja
into
(bad)
adc
pushf
adc
add
jns
(bad)
mov
pop
pop
mov
or
jae
inc
call
pop
cmps
push
mov
sbb
int
(bad)
cld
or
nop
out
inc
je
(bad)
cmps
push
xchg
mov
js
add
adc
jmp
pop
test
bswap
in
pop
xchg
or
sbb
out
jne
imul
push
inc
jne
push
call
inc
ror
out
mov
adc
pop
shl
pop
ror
adc
bound
cmps
push
push
int3
sub
mov
sbb
retf
xor
das
fadd
test
pusha
xor
ret
push
sub
add
push
push
add
mov
mov
fcom
dec
xor
xor
sbb
aas
pop
ret
mov
add
add
xchg
ret
add
les
or
sub
mov
test
por
jmp
bnd
aaa
push
mov
scas
mov
int3
ss
inc
repz
xchg
or
popa
and
push
addr16
std
mov
dec
nop
add
call
push
add
mov
push
pop
hlt
mov
les
jle
inc
shl
mov
sub
loope
les
sbb
xchg
(bad)
rcl
movs
mov
jp
and
sbb
add
jb
es
aaa
ret
adc
xor
les
packssdw
in
shl
shr
ret
fisub
call
push
movs
int3
lods
and
xchg
mov
lods
leave
mov
pop
loopne
mov
push
in
in
sub
fmul
inc
hlt
push
scas
xchg
mov
(bad)
nop
mov
retf
inc
pushf
mov
imul
jb
movs
test
push
lods
adc
(bad)
ss
push
rcr
inc
mov
mov
sbb
enter
mov
dec
inc
int3
adc
aas
aam
fdivr
ret
inc
jge
fcom
loopne
xchg
mov
push
inc
loope
dec
cmp
mov
pop
mov
sahf
sbb
cmp
cmp
jnp
outs
adc
add
ret
or
and
adc
rcr
adc
and
inc
cwde
or
outs
xor
sub
fadd
rol
add
daa
out
jg
jb
add
push
inc
add
outs
add
ins
sub
shl
test
mov
in
div
je
push
pop
es
ror
das
dec
add
ds
xchg
xor
daa
pop
push
push
push
push
aaa
rol
dec
lock
cmp
or
mov
jo
add
adc
aaa
sahf
sub
add
sub
jb
aaa
ins
fcmovu
popf
adc
test
push
dec
add
sti
jecxz
int3
test
push
sbb
mov
push
add
mov
ins
dec
or
nop
adc
mov
ror
call
push
sbb
or
and
push
sbb
adc
into
lods
xchg
es
and
pop
and
pushf
mov
cmp
ins
clc
mov
scas
pop
push
sbb
add
push
sub
cmp
fs
pop
call
xor
cmp
loopne
shl
push
(bad)
fsub
ss
ins
int3
ret
cmp
loopne
test
inc
jae
je
cmp
jne
jmp
inc
xor
sbb
ffree
mov
and
adc
push
cmp
push
shl
mov
aam
xchg
or
das
in
pop
mov
pop
xchg
sub
shr
movs
mov
ret
(bad)
add
add
sti
or
jo
loop
test
jnp
popa
fcomp
cli
push
sub
aam
jg
add
or
jne
sar
jns
adc
xor
inc
and
sub
ins
inc
or
lock
cld
jmp
xor
pop
mov
mov
fcmovbe
mov
xchg
inc
push
push
dec
dec
xor
dec
bound
test
adc
cld
dec
mov
or
enter
in
and
loope
add
jge
and
xchg
or
xor
mov
mov
fcomp
call
sbb
loop
fmul
scas
ror
nop
add
sbb
xchg
xchg
int3
adc
jle
push
jmp
cmc
rcl
adc
add
xor
fwait
mov
add
add
enter
jnp
shl
add
rcr
sub
mov
sub
and
test
dec
pop
pusha
into
cvtpi2ps
add
pop
call
jmp
cmps
and
xchg
sbb
sbb
pop
ss
lds
ror
iret
push
sbb
pop
push
pop
mov
cmp
mov
adc
pushf
push
aas
xor
sti
ret
cs
dec
aas
cmp
aad
fdivp
xchg
mov
and
sbb
push
cmps
mov
adc
jb
mov
shl
add
aaa
test
cmp
aaa
xchg
mov
adc
push
sub
add
add
scas
cdq
mov
shr
(bad)
movs
and
pop
dec
push
adc
mov
div
xchg
sbb
shl
mov
je
mov
jmp
adc
add
or
pop
or
add
lods
and
popa
clc
test
or
int3
das
jae
std
or
mov
pushf
movs
push
stc
adc
lea
rcl
xchg
pop
std
inc
in
loope
or
pushf
cwde
mov
lahf
ret
jg
cmp
jne
pop
cmp
xor
xor
sbb
adc
in
push
inc
adc
jmp
pop
fcomp
call
sub
loop
jne
xor
add
mov
pop
sub
add
push
nop
leave
call
mov
rcr
sbb
add
unpcklps
xlat
dec
add
push
pop
mov
dec
or
aaa
push
or
repz
rol
add
or
add
add
cs
mov
sbb
mov
dec
or
dec
adc
sahf
sbb
addr16
mov
(bad)
sbb
scas
push
push
scas
adc
adc
add
add
mov
mov
cmp
bound
add
xchg
(bad)
pusha
jge
ds
mov
cmp
sub
adc
xchg
cmp
add
or
int3
dec
and
xor
lds
cdq
ret
sub
cs
mov
push
scas
setge
or
inc
(bad)
loopne
fst
(bad)
std
sbb
cmp
mov
or
fcom
mov
and
xchg
rcr
mov
or
adc
sbb
mov
inc
pop
or
or
jo
repnz
stos
pop
nop
ret
in
lock
les
adc
rol
out
push
mov
adc
aaa
test
arpl
call
cli
mov
out
or
or
push
adc
pop
ret
es
push
pop
inc
sub
ss
js
cmp
xlat
push
mov
add
iret
push
in
push
adc
jns
sub
call
or
mov
int3
test
mov
data16
pushf
mov
imul
adc
push
push
and
push
mov
movs
pop
push
mov
dec
imul
push
and
(bad)
loopne
push
sub
mov
add
aas
ins
add
gs
jo
imul
sub
and
inc
push
popa
jb
outs
je
out
jg
fild
sub
sti
push
clc
push
outs
jae
je
outs
outs
sub
movq
stos
lods
mov
add
call
push
out
(bad)
in
jmp
jae
fwait
cmp
je
push
inc
cli
int
rcl
push
push
popa
jae
xchg
movs
sar
imul
pop
inc
js
arpl
gs
xchg
ds
add
push
xchg
dec
sbb
les
movaps
push
pop
mov
aaa
cwde
cmp
sbb
cmp
pop
xor
arpl
pushf
add
pop
test
loope
pop
inc
sub
push
inc
push
mov
data16
adc
stos
pop
sub
enter
loope
push
popa
mov
mov
ja
adc
mov
call
pusha
bound
inc
lods
inc
fst
sub
rcr
aam
scas
jle
xor
sbb
push
and
mov
sub
sar
jle
add
outs
pop
sti
mov
sub
sub
or
push
add
clc
sar
cmp
loope
fist
pusha
add
push
cmp
sub
adc
cmps
xor
cmp
pusha
push
imul
pop
popf
adc
popf
hlt
cmp
mov
stos
adc
lods
cmc
jne
dec
and
scas
pop
or
adc
stos
pop
jp
pop
xchg
inc
and
pop
jmp
test
push
rcl
dec
adc
js
rol
pop
clc
cdq
adc
rcr
mov
pusha
and
hlt
dec
inc
movs
mov
sbb
cmc
adc
or
shr
loope
pop
xor
mov
pop
fadd
mov
mov
mov
sbb
sbb
rol
leave
push
jl
mov
sbb
push
stc
rcl
or
sbb
cmp
add
jb
jmp
or
lea
mov
inc
fidiv
xchg
adc
push
sahf
dec
and
fistp
mov
ss
and
push
add
jne
xor
dec
fsub
je
in
lea
outs
test
stos
fcomp
push
add
push
mov
adc
adc
int
inc
add
cmp
push
push
inc
sbb
addr16
ds
neg
mov
adc
jecxz
xchg
cmc
adc
cld
dec
push
lods
inc
add
xor
xchg
loope
push
outs
loopne
call
adc
adc
fst
xor
lods
sub
or
add
mov
jg
(bad)
rcl
add
adc
mul
cs
jmp
push
and
fsub
inc
jmp
dec
add
xor
test
xor
mov
jne
not
add
add
or
sbb
pop
and
pop
push
inc
adc
nop
push
or
push
push
sbb
push
fs
ret
jbe
sahf
in
mov
hlt
mov
push
loopne
repz
add
(bad)
sub
lahf
data16
stos
add
(bad)
lahf
retf
sub
(bad)
pmuludq
push
mov
jg
add
cmovbe
outs
jae
push
jne
jb
inc
jne
arpl
loop
lds
dec
mov
andps
jo
je
push
add
sub
or
mov
inc
xchg
add
mov
dec
xchg
(bad)
pop
pop
and
add
popa
movs
nop
sbb
out
push
cmp
adc
rcr
inc
mov
pop
add
pop
ret
mov
adc
add
cs
movs
xor
test
int3
sbb
into
loopne
adc
fs
call
push
add
test
add
out
dec
mov
imul
into
xor
ds
mov
lea
stos
mov
test
inc
push
nop
adc
and
outs
push
push
sub
mov
mov
fcomp
clc
jo
ins
adc
cmp
xor
data16
cwde
ds
pop
je
push
unpckhps
data16
dec
and
cmp
and
and
je
enter
add
pop
sub
mov
addr16
add
test
jmp
adc
or
out
in
out
push
stc
fnsave
xchg
cmp
call
inc
nop
push
adc
add
or
push
mov
fucomi
daa
icebp
push
shl
push
addr16
pop
fisubr
ja
push
cmp
imul
je
enter
add
jecxz
push
cmp
add
dec
rol
push
outs
ins
jo
inc
outs
sub
jbe
div
push
sub
pop
sbb
inc
arpl
arpl
or
mov
aad
rcr
pop
icebp
aas
dec
inc
push
dec
jle
cmp
setb
xor
stos
sub
mov
pop
jbe
mov
dec
cmp
xor
scas
lock
adc
pop
cli
jg
fidivr
leave
or
jne
lea
mov
ds
sar
loopne
push
inc
or
adc
vcvtss2si
inc
sbb
add
leave
jl
retf
xor
fadd
inc
cmp
cmp
test
aaa
sbb
out
hlt
aam
ret
add
jne
xor
enter
jp
xchg
clc
mov
add
jecxz
fist
jae
xchg
jae
pusha
mov
jmp
or
add
pop
push
jl
div
add
adc
mov
test
inc
aaa
leave
mov
lock
(bad)
adc
or
loope
add
adc
(bad)
jb
sub
shl
mov
aam
mov
adc
fst
dec
hlt
lea
mov
mov
xor
movs
add
push
mov
and
mov
dec
mov
sub
hlt
mov
add
inc
and
add
adc
aas
mov
cmp
mul
into
lods
out
mov
mov
repnz
js
les
shl
enter
cmps
mov
addr16
js
sbb
loopne
xor
or
cmp
pop
lsl
mov
lock
add
xchg
xor
mov
add
inc
cmp
jle
mov
lahf
fmul
fmul
dec
jle
inc
cld
mov
adc
inc
push
cmp
inc
jmp
cwde
push
inc
in
rol
cmp
and
mov
inc
(bad)
fld
and
bnd
add
cmp
je
pusha
in
add
push
shl
mov
xor
and
bound
rcl
js
pop
sbb
lods
icebp
push
loopne
mov
mov
sbb
hlt
xchg
jp
jne
sbb
sub
fdivr
adc
add
mov
mov
nop
mov
sti
xchg
push
or
dec
mov
dec
es
clc
mov
pop
dec
lahf
push
int3
mov
in
adc
fisttp
sbb
inc
retf
xor
mov
adc
mov
jo
loopne
scas
and
mov
movs
ss
addr16
cmp
jmp
enter
retf
mov
pop
clc
push
push
adc
int3
push
jg
xor
lock
push
(bad)
cld
pop
in
ins
movs
shr
sub
rcl
push
adc
inc
push
pop
sub
pop
out
cmp
add
imul
mov
xchg
fs
fdivr
leave
adc
cmp
shr
js
sar
rcr
imul
rol
add
dec
lods
mov
aam
test
fcomp
paddusb
pop
sbb
jmp
and
inc
mov
imul
mov
enter
fs
fs
adc
rcl
lods
outs
(bad)
pusha
pusha
push
pop
iret
push
test
or
add
add
ror
add
add
mov
jmp
xor
repnz
cs
sti
clc
lds
adc
not
inc
add
mov
(bad)
or
adc
xor
(bad)
test
push
xchg
shr
add
push
jno
or
sbb
fcmovb
inc
rol
fdivr
mov
outs
adc
lds
sub
bound
sub
xor
add
push
into
mov
in
aas
call
xor
adc
sub
add
cld
pop
or
xchg
shr
in
sbb
jmp
add
pop
ud2
pop
pop
cmps
out
push
mov
push
pop
mov
push
fimul
das
jbe
call
imul
dec
popaw
jne
je
outs
addr16
outs
inc
jb
fs
out
jae
add
lahf
jno
xor
inc
jbe
and
sahf
sbb
pop
lahf
add
mov
ret
push
sbb
jb
pusha
inc
dec
or
inc
xchg
arpl
cmp
cmc
dec
jl
pop
push
jne
arpl
fsubr
cmps
sub
bound
fs
mov
ja
and
mov
fwait
scas
aad
adc
js
loop
cs
outs
or
dec
and
cmp
and
pop
mov
aaa
(bad)
push
sbb
jne
clc
add
lahf
inc
adc
int3
xchg
push
fwait
stos
sbb
jns
movs
mov
ffreep
mov
push
cmp
push
ror
xlat
fnsave
push
add
mov
out
and
add
and
sbb
and
sbb
xchg
xor
sbb
imul
es
movs
mov
push
push
or
or
pavgb
mov
cmps
je
adc
push
adc
mov
pop
pop
ret
nop
(bad)
mov
(bad)
out
jne
push
xchg
pop
mov
mov
sbb
inc
in
in
mov
pop
icebp
pop
push
ror
fadd
or
push
cld
or
adc
add
cmovb
fisub
jg
hlt
mov
mov
pop
add
lods
push
mov
push
xor
in
or
inc
cld
test
mov
outs
addr16
mov
je
push
dec
mov
inc
imul
mov
fadd
call
mov
js
pop
pop
dec
rcr
jne
sbb
bound
inc
jae
adc
lods
rol
jo
int
(bad)
scas
shl
int
push
ins
mov
pop
push
(bad)
out
xor
jg
mov
ret
push
shl
hlt
imul
adc
int3
rcr
fild
in
jg
xchg
push
lock
push
jl
dec
ja
ja
pop
add
push
daa
stos
xchg
xor
mov
jg
ret
and
pop
dec
push
stos
cwde
mov
leave
xchg
and
dec
push
nop
(bad)
mov
mov
jns
imul
call
and
movs
lea
jb
jb
call
dec
inc
loopne
loopne
in
cwde
dec
daa
cmps
sbb
push
(bad)
shl
dec
aaa
xor
push
icebp
dec
xor
or
pop
mov
cwde
mov
add
inc
xor
rcr
push
pop
mov
ins
push
jl
mov
jne
js
daa
sub
dec
push
and
jg
push
ins
(bad)
add
xor
call
shl
arpl
mov
es
add
add
jo
aaa
xor
add
outs
sbb
inc
es
pop
jnp
ret
push
sub
jb
jbe
lock
cmp
pop
unpckhps
aaa
add
bnd
inc
add
enter
cmp
fstp
inc
adc
pushf
xchg
scas
adc
js
(bad)
jne
in
je
cld
add
test
push
xor
add
add
pop
clc
sub
mov
add
xlat
dec
push
fs
shr
sti
add
push
cmp
xchg
imul
jmp
mov
push
rcl
mov
ins
pop
in
and
cld
sub
pop
cld
cdq
xchg
and
cmp
mov
or
add
aam
aas
into
jb
xor
outs
mov
sbb
(bad)
sahf
mov
clc
pop
loop
or
sbb
(bad)
jne
push
push
mov
and
jg
adc
bound
dec
cs
cmovle
add
sub
xor
clc
call
add
sbb
fcomp
cmp
mov
add
aas
fcomi
dec
fdiv
mov
pop
js
push
push
add
pusha
cmp
dec
cs
add
out
push
push
cwde
xchg
push
in
mov
das
and
pop
cmp
shr
in
mov
mov
inc
lods
scas
push
mov
shr
lahf
inc
sahf
push
xchg
test
cs
jnp
add
lods
mov
add
add
test
pusha
mov
mov
stos
lods
sub
cdq
pop
push
push
and
add
jg
lock
(bad)
push
sar
inc
push
imul
fiadd
or
int3
es
outs
sub
addr16
mov
jle
push
je
je
push
inc
aas
popf
add
rcl
inc
dec
out
(bad)
fisubr
dec
ins
cs
ins
inc
imul
shr
cmp
inc
push
jb
outs
sub
jnp
mov
outs
addr16
aad
cmp
loopne
or
outs
jb
xchg
xor
pop
push
pmaxub
ret
fild
mov
inc
call
push
test
push
cmp
push
push
dec
ins
dec
ss
psraw
pop
popa
loope
mul
pushf
add
jl
call
dec
scas
push
inc
dec
ja
xchg
add
add
inc
cld
fisubr
and
add
lahf
mov
rcl
inc
ds
xor
aam
js
inc
jbe
jae
sbb
fcomp
sbb
pop
cmp
jmp
imul
loop
sbb
fsubr
xchg
pop
ds
shl
inc
mov
cmp
inc
inc
ins
inc
adc
inc
jne
outs
push
imul
js
pop
and
inc
adc
adc
add
cmp
dec
test
adc
inc
mov
popa
popa
out
or
lock
cmp
push
mov
dec
shl
loop
hlt
fcom
or
addr16
dec
jae
int3
pop
pop
push
in
and
inc
pop
xlat
adc
sbb
dec
nop
fs
inc
mov
jbe
arpl
inc
dec
outs
arpl
cmps
push
mov
mov
ja
ret
aam
ins
gs
(bad)
cmp
jae
mov
stos
mov
pop
call
and
nop
push
(bad)
push
xchg
ja
dec
or
sbb
in
push
sbb
movs
loope
add
jmp
mov
inc
cs
call
mov
dec
jo
pop
scas
cdq
xchg
cmp
add
xchg
sbb
push
pop
inc
mov
xor
je
xchg
push
out
fnstenv
bnd
mov
mov
cmp
outs
jne
sub
lds
imul
in
lods
fbld
xor
and
push
test
push
jmp
and
inc
adc
imul
sub
cmp
adc
into
xor
enter
int3
pop
mul
jmp
clc
pop
imul
or
(bad)
fwait
test
xor
aaa
sub
and
dec
push
xchg
movs
test
clc
dec
es
pusha
out
fisub
dec
or
pop
dec
addr16
push
mov
dec
call
or
pop
sbb
pop
inc
sub
pop
sti
xchg
cld
fld
ds
inc
sub
icebp
stos
inc
sbb
mov
and
int3
pop
inc
sub
jbe
jne
gs
imul
dec
xor
aaa
ins
pop
push
sub
push
ja
pop
sub
push
dec
xchg
pop
or
xor
xchg
dec
cmp
dec
inc
inc
pop
dec
push
dec
ret
mov
mov
pop
dec
cs
pop
add
inc
pop
dec
sbb
sbb
iret
dec
push
jo
add
fdivr
pop
inc
xor
xor
popa
out
aaa
push
pop
dec
push
sbb
jl
je
cmp
inc
pop
dec
lock
xor
in
add
repz
inc
sahf
add
stos
add
inc
inc
cs
push
out
daa
dec
jb
inc
inc
inc
xchg
mov
inc
inc
xor
popf
cs
inc
inc
shl
lock
inc
inc
dec
ins
xchg
mov
fild
popa
or
sbb
shl
sbb
pop
jge
push
popa
sbb
pop
and
and
inc
inc
cmovb
dec
hlt
scas
je
jo
push
add
adc
pushf
sbb
push
xchg
or
xchg
inc
ror
lock
inc
push
or
or
ss
push
inc
adc
push
neg
push
fild
push
xchg
jle
js
stos
int
add
in
repnz
mov
outs
jl
pop
scas
mov
scas
push
dec
popf
stos
rol
mov
ja
cmp
push
imul
adc
and
shr
adc
cld
loope
(bad)
adc
jmp
xchg
sbb
jne
sbb
jo
or
out
rol
push
out
add
out
jg
or
jbe
push
mov
sets
cmp
inc
inc
call
mov
or
call
add
mov
mov
push
xor
mov
fisub
mov
sub
add
inc
ins
stc
jns
lods
dec
out
push
lods
clc
ret
xchg
out
mov
je
inc
fwait
rcr
lock
push
in
push
cmp
or
sbb
mov
push
div
lds
fiadd
inc
ins
pop
push
test
jecxz
xor
cwde
inc
push
div
es
xor
push
cmp
mul
push
xor
inc
or
fcomp
div
ins
jnp
add
test
cmps
not
fld
push
pop
xor
fcmovnu
sbb
xchg
sub
(bad)
test
aam
add
add
fld
pop
pop
fdivr
push
inc
imul
push
test
data16
mov
push
pop
fidiv
push
inc
ss
sub
ds
sub
(bad)
lock
cwde
or
xor
and
and
sub
fcmovb
cmp
rcl
movs
call
repnz
or
dec
dec
outs
sub
jnp
dec
jbe
je
lock
cmp
sub
jb
das
or
pop
xchg
imul
xor
leave
and
inc
ins
ins
push
gs
das
cmps
push
pop
inc
icebp
mov
iret
and
push
adc
stos
test
test
jne
fidiv
xchg
pop
adc
xchg
nop
lock
loopne
in
ret
inc
aam
xlat
adc
out
arpl
push
sti
out
jnp
(bad)
mov
push
push
add
inc
add
mov
mov
mov
mov
add
mov
mov
out
cs
push
fmul
sub
add
(bad)
cs
push
or
inc
jne
outs
ins
sub
sbb
into
mov
ja
mov
xor
adc
test
inc
or
mov
inc
xchg
or
jno
pop
std
add
xchg
rol
push
xor
pop
jno
test
ret
push
loopne
pop
cmp
scas
xor
(bad)
adc
outs
adc
pop
popf
fucomi
inc
sti
pop
xor
sbb
sub
addr16
sbb
bound
push
test
(bad)
sahf
sub
cmp
push
push
mov
inc
xchg
jecxz
mov
call
xchg
or
lea
inc
xchg
lods
ds
mov
inc
or
hlt
xor
addr16
sub
push
lock
fidiv
dec
rcl
mov
pusha
mov
enter
mov
add
(bad)
cmc
add
dec
sub
sub
mov
or
sbb
imul
add
call
add
dec
clc
add
sbb
aam
sbb
clc
test
enter
cmp
sbb
push
push
push
sbb
adc
jl
cwde
sbb
and
scas
mov
and
dec
pop
sbb
arpl
enter
dec
or
mov
inc
aas
push
sub
push
lods
icebp
nop
push
push
cld
repnz
clc
je
jb
js
push
pop
mov
mov
imul
or
inc
cli
inc
inc
clc
xlat
in
pop
push
jne
inc
jne
xchg
gs
jb
movs
mov
sbb
inc
leave
and
in
pop
add
adc
es
pop
cld
pop
add
pop
in
add
dec
pop
daa
mov
and
mov
inc
adc
mov
int3
test
pop
inc
cwde
fmul
inc
jo
xor
pop
mov
fs
retf
adc
cvtpi2ps
push
rol
mov
pop
sti
or
out
sub
sbb
not
nop
add
pop
fidiv
dec
sub
hlt
inc
cmps
mov
dec
(bad)
and
jmp
pop
imul
(bad)
or
bound
(bad)
pop
ins
mov
xor
push
dec
enter
inc
mov
xor
js
add
xor
lods
xor
mov
cmp
add
push
fs
pop
mov
cld
pushf
enter
push
popf
mov
es
inc
sbb
ss
call
aas
jae
pop
or
add
das
fistp
cmp
pop
mov
imul
pop
or
add
mov
add
jae
adc
jmp
cmp
adc
fisttp
jae
jbe
cld
inc
gs
pop
pusha
push
pop
pop
sbb
dec
add
xchg
pop
clc
jae
mov
cld
stos
sar
inc
inc
pop
push
in
dec
add
es
mov
jg
xor
sbb
(bad)
sub
pop
pop
or
ds
lods
mov
lahf
fstp
jae
xchg
pop
sub
mov
dec
sbb
lods
inc
inc
pusha
out
fisub
inc
pop
dec
test
dec
nop
leave
push
jb
outs
inc
inc
test
outs
cmovns
sbb
out
scas
pop
inc
inc
repz
movs
jge
cmp
inc
loopne
loop
sub
inc
js
cmc
pop
mov
fidiv
adc
dec
or
pushf
sub
ret
add
mov
add
inc
inc
dec
dec
jb
xor
dec
dec
xor
jb
dec
push
push
out
dec
loope
ds
inc
push
adc
sub
push
sub
sub
fisubr
xchg
inc
sti
dec
push
hlt
aam
or
pop
dec
out
push
push
jb
jno
loopne
test
loop
gs
inc
sahf
adc
cs
inc
out
adc
cmp
inc
inc
and
aaa
push
jge
inc
inc
inc
popf
(bad)
jmp
cdq
gs
or
sbb
sbb
in
jmp
sbb
sbb
push
jnp
(bad)
popf
inc
sbb
neg
jbe
fs
stos
or
jb
fs
push
add
fs
jb
add
and
fs
repnz
and
and
test
(bad)
jmp
add
and
and
arpl
and
sti
push
add
cvttps2pi
nop
jbe
xor
dec
in
call
scas
mov
push
inc
popa
ins
ins
outs
outs
outs
inc
ins
sub
jg
js
or
ss
bound
cs
cmp
lea
or
hlt
outs
js
test
pop
pop
adc
test
sub
push
or
jle
ror
mov
push
sahf
or
int3
push
mov
nop
push
jo
adc
cmp
scas
mov
loop
ret
pop
je
add
push
ss
and
data16
lods
xchg
xchg
fcomp
(bad)
add
push
sub
inc
inc
add
ins
xor
push
fsubr
das
adc
push
(bad)
mov
fbld
and
in
adc
sub
mov
or
out
hlt
mov
fidivr
cmc
ds
arpl
or
add
push
pop
and
add
dec
xchg
pop
loope
mov
dec
imul
pop
pop
inc
mov
pushf
sub
sub
or
ror
lahf
pushf
cmp
xlat
loopne
mov
js
addr16
add
and
sub
add
add
js
punpckhdq
pop
shr
xor
inc
pusha
daa
push
mov
fwait
sub
cs
jmp
add
sub
mov
and
ss
mov
cmp
cmp
inc
add
call
dec
push
xor
cs
inc
mov
ins
jns
xor
jmp
xor
pop
(bad)
imul
push
gs
or
cs
sbb
scas
jo
mov
js
les
daa
pop
das
int
(bad)
fmul
pusha
adc
jmp
dec
cmps
lods
adc
sti
in
or
xor
xor
push
jge
jb
xor
mov
sub
xor
dec
jno
sbb
cdq
adc
push
setns
mov
loopne
or
xchg
cmc
mov
int3
cmp
inc
mov
add
int
call
jo
jo
add
jmp
mov
scas
mov
cld
dec
or
mov
xor
sub
and
nop
out
dec
push
sub
jae
pop
lahf
nop
or
cmc
xchg
adc
test
inc
mov
xchg
sub
or
mov
movs
sar
ret
or
scas
push
repz
pop
xchg
xlat
mov
dec
mov
popa
mov
mov
and
not
pop
mov
jae
push
push
mov
mov
pop
push
stos
xchg
cwde
inc
inc
jne
xor
sub
inc
mov
pop
xor
jo
push
arpl
xchg
inc
clc
mov
inc
jae
dec
xchg
loope
icebp
pop
mov
add
push
push
jns
dec
imul
imul
sub
push
jae
push
push
dec
add
ret
xlat
ins
inc
or
rol
add
push
xchg
xor
mov
dec
bound
arpl
mov
push
mul
jmp
pop
in
shl
sub
movs
add
out
mov
popf
popa
jne
stos
sar
pop
ja
dec
popa
bound
xchg
fld
or
add
popa
xchg
adc
jl
push
mov
cmp
push
adc
cs
or
pop
es
pop
fmul
add
repnz
cmp
mov
stos
cmp
push
inc
inc
aam
pop
pusha
das
cmp
adc
fild
les
cli
test
lods
es
or
(bad)
push
add
add
pusha
nop
cwde
pushf
sar
inc
xchg
push
or
pop
fild
inc
dec
cmp
test
pusha
mov
adc
es
push
pop
stos
xchg
aas
pop
into
sub
inc
fimul
mov
fdivr
pop
pop
mov
test
push
adc
dec
js
ss
js
shl
lds
add
popf
mov
sub
daa
and
leave
and
in
or
cmp
push
add
push
pop
xor
cwde
add
or
jmp
lods
loope
in
xchg
scas
inc
and
inc
popf
mov
inc
xor
add
adc
les
retf
or
sti
cmp
push
xchg
lds
iret
pop
and
mov
adc
jno
scas
and
xor
sub
mov
and
pop
aaa
leave
add
mov
sbb
imul
pop
jo
in
inc
leave
push
jb
sbb
cs
outs
push
add
movlps
stos
sbb
rcl
and
dec
and
add
mov
mov
add
and
xor
daa
jo
xor
adc
sub
adc
cmp
adc
sub
pop
sbb
leave
push
pop
mov
pop
and
add
das
lods
add
pop
sub
push
add
pop
pop
add
add
xor
leave
add
xor
or
aaa
cs
nop
cmp
jo
test
dec
jns
add
adc
mov
mov
inc
inc
scas
aam
sbb
cs
pop
test
int
adc
xor
inc
inc
push
jl
leave
cdq
gs
inc
in
nop/reserved
push
sbb
sbb
jp
mov
sbb
push
jp
fs
ret
sbb
in
pusha
xchg
shl
scas
test
frstor
inc
fistp
sbb
adc
add
jne
mov
push
cmps
call
cs
push
in
and
cwde
push
out
pushf
mov
loopne
jno
std
fsub
push
push
cli
(bad)
sbb
cs
dec
push
or
adc
lds
push
dec
outs
outs
imul
jne
bound
xor
jne
sub
xchg
clc
ins
leave
or
pop
movs
stc
js
adc
sub
dec
push
mov
add
push
push
mov
mov
mov
mov
or
lods
mov
push
add
lock
or
mov
push
pop
xor
inc
cmp
call
lock
lods
jge
ror
hlt
fcom
imul
clc
or
ja
fnsave
in
lea
addr16
cmp
and
push
jo
or
dec
int3
imul
sbb
call
enter
sbb
push
jo
pop
mov
pop
ret
nop
push
jbe
ja
dec
push
xor
or
mov
in
jg
js
or
test
jle
dec
push
sub
or
jle
jbe
leave
inc
add
inc
inc
push
inc
or
xchg
mov
je
int3
loope
push
clc
mov
mov
xor
mov
sbb
pop
mov
out
mov
mov
mov
sbb
std
pop
xchg
add
adc
and
adc
mov
rol
mov
mov
mov
pop
scas
or
jge
je
dec
add
clc
jbe
pop
fsub
adc
ficomp
or
push
cmp
mov
xchg
mov
(bad)
pusha
int
ins
sub
dec
dec
outs
(bad)
(bad)
out
rol
dec
mov
test
je
mov
mov
call
mov
sbb
mov
ror
mov
ret
cmps
push
push
rcr
jmp
cmps
adc
rcr
mov
aaa
xor
add
adc
mov
jbe
and
cmp
aad
test
mov
stos
in
add
xor
jg
cmp
mov
xchg
aaa
je
test
jle
test
jle
mov
fstp
(bad)
jg
adc
fdivrp
fstp
fwait
cmp
jge
mov
mov
lods
ret
or
jle
mov
pop
in
popa
mov
xor
jmp
sub
cdq
loope
mov
xchg
and
pop
xchg
pop
loopne
add
bound
das
add
xor
and
shr
outs
clc
stc
jns
adc
adc
sub
sar
push
rol
cmps
getsec
hlt
inc
test
sbb
pushf
mov
outs
mov
ret
push
sub
sub
popa
sti
mov
mov
push
push
push
push
call
fidivr
adc
mov
adc
clc
add
push
std
sbb
mov
mov
or
push
fild
sbb
sbb
xchg
lea
fcom
iret
sbb
add
outs
mov
pop
pop
call
das
or
dec
setle
jmp
jmp
inc
push
call
lods
cmps
add
inc
sbb
je
adc
inc
shl
rcl
add
call
xor
sar
xlat
fistp
mov
aam
mov
sbb
pop
add
test
adc
mov
and
adc
or
xchg
add
push
fidiv
test
clc
add
sub
clc
loope
sar
mov
xor
daa
adc
jo
dec
cld
inc
cmp
mov
sbb
loop
jmp
inc
pop
dec
adc
call
mov
jge
je
in
mov
jnp
inc
sbb
jne
and
jle
push
imul
ficomp
mov
pop
and
pop
push
ins
cmc
sbb
je
cmp
mov
retf
xchg
mov
shl
adc
push
mov
push
fistp
adc
mov
std
lds
les
add
push
mov
mov
xchg
stos
js
shl
push
mov
cli
fsubr
adc
jg
adc
jnp
xor
out
xchg
bnd
pop
mov
cmp
adc
pop
iret
pop
sub
inc
or
or
xchg
xlat
xor
add
xchg
enter
ret
sbb
clc
fcomip
push
movs
mov
cld
jne
push
xor
jne
jp
and
out
cwde
jg
std
add
in
and
into
or
push
inc
mov
pop
cmp
clc
jp
sbb
sub
jle
pop
xchg
jo
inc
aas
outs
clc
pop
pop
cmps
and
adc
out
or
fbstp
jmp
or
mov
iret
les
dec
hlt
cmp
iret
dec
sbb
xchg
je
test
retf
fnstcw
dec
hlt
sub
sbb
std
jno
adc
or
loopne
inc
adc
sahf
sbb
push
push
add
inc
fwait
aaa
imul
ror
into
sbb
xor
mov
nop
aam
sub
dec
aam
fcomp
loopne
loope
xchg
es
in
lds
sbb
adc
cmp
inc
es
fs
or
cwde
cmp
adc
inc
sbb
lahf
cmp
adc
sub
jnp
sbb
sbb
push
xchg
cmp
push
sbb
sub
push
jb
xchg
outs
cmp
pop
inc
je
loope
not
pop
and
shl
leave
mov
cmp
pop
cwde
inc
cmp
test
mov
inc
cmp
jg
or
sbb
in
cmp
jl
aam
pop
jl
mov
sbb
cwde
int3
adc
shl
cwde
jmp
nop
movs
ins
jp
and
jne
lods
and
add
and
fld
and
sbb
hlt
aam
inc
adc
outs
mov
mov
ror
out
shr
adc
sbb
add
or
js
gs
in
or
and
add
jmp
mov
push
and
push
ins
inc
inc
sbb
inc
xor
add
sub
jae
push
and
sub
jae
arpl
and
push
or
lock
push
dec
xchg
mov
mov
cmp
lds
repz
pop
pop
inc
and
push
or
pop
lea
rcl
push
pop
cmp
add
mov
push
add
inc
inc
sub
push
xchg
cmp
fs
inc
inc
mov
(bad)
xchg
add
jle
push
pop
jae
js
sbb
je
ret
push
and
inc
mov
mov
sahf
xlat
xchg
hlt
loopne
(bad)
adc
jne
shr
mov
mov
pop
or
push
mov
not
add
push
lods
xchg
inc
test
jmp
ins
xor
adc
inc
add
push
inc
inc
inc
adc
clc
or
mov
xchg
sbb
aad
call
pop
inc
push
xor
mov
mov
(bad)
ficom
and
cmp
xor
cld
add
cmp
push
fadd
inc
ds
lods
into
cs
test
sub
cmp
pop
cmp
and
or
mov
ret
push
cmp
push
mov
pop
scas
imul
or
sub
mov
sub
mov
pop
cmp
dec
call
xchg
adc
xchg
mov
pusha
sbb
adc
cmp
and
mov
(bad)
pop
(bad)
frstor
or
or
shl
ror
ret
push
jecxz
jecxz
cmps
mov
mov
loopne
mov
add
mov
les
loopne
imul
(bad)
paddd
mov
xchg
and
sbb
sub
adc
test
and
out
ss
fcom
(bad)
dec
or
sbb
push
pop
mov
(bad)
or
fcomp
test
jbe
sub
pop
push
mov
je
xchg
je
inc
add
je
adc
mov
and
or
scas
lock
mov
sbb
cmp
pop
out
das
and
sub
adc
rcr
in
sub
sti
sbb
mov
lds
mov
sahf
sbb
enter
sub
dec
out
push
(bad)
sbb
daa
ret
dec
jo
(bad)
ja
xchg
les
outs
add
mov
dec
pop
scas
jmp
pop
call
fwait
jmp
inc
pop
sub
pop
leave
inc
dec
adc
hlt
push
popf
mov
je
xchg
cmp
sub
dec
ret
cmp
inc
lock
adc
adc
xor
adc
fild
repnz
loop
hlt
xlat
sbb
push
loop
and
sub
jmp
pop
push
jo
scas
mov
dec
mov
add
push
pop
pop
ds
mov
inc
lock
and
lahf
mov
xchg
mov
das
sbb
or
and
jl
xor
jmp
adc
ja
je
mov
xchg
lea
dec
(bad)
int
cmp
xchg
push
xchg
ds
push
mov
stos
(bad)
bound
sbb
jo
mov
ss
cdq
push
les
add
and
inc
cld
inc
add
sbb
test
sub
loopne
sar
push
leave
dec
or
sahf
cmp
sub
mov
test
jne
pop
lock
int3
pop
pop
call
fs
push
or
push
push
and
lods
loope
(bad)
push
jp
div
stos
test
fist
dec
fcom
mov
js
inc
mov
hlt
add
lea
cmp
adc
and
push
cs
shl
inc
fld
lock
push
je
add
fistp
adc
or
outs
add
xchg
inc
or
jne
adc
mov
cmp
aas
jnp
add
dec
push
mov
add
or
stos
sbb
add
stos
mov
dec
sub
push
jle
sub
fsub
push
jb
dec
push
mov
jg
sbb
sub
xchg
xor
pop
adc
mov
sbb
cmps
mov
cdq
or
add
xor
jnp
dec
mov
push
arpl
jl
add
mov
sub
dec
rol
dec
fst
aaa
jns
pusha
push
jecxz
mov
mov
fwait
aaa
cmp
pop
je
mov
cmp
fcomp
xchg
pop
add
mov
je
fimul
inc
add
or
data16
fmul
or
shl
add
out
xchg
fbstp
and
fimul
sar
call
jbe
enter
mov
or
and
dec
dec
shl
pop
or
jle
inc
mov
call
inc
ins
out
jle
idiv
enter
jne
and
cwde
div
adc
mov
lock
adc
outs
fwait
scas
jmp
cmp
mov
jne
cmp
dec
push
or
sub
fild
je
mov
jge
sub
xchg
in
mov
jmp
das
sub
xchg
daa
xchg
xor
mov
xchg
sub
cdq
xchg
pop
in
dec
mov
retf
sub
fnop
ss
(bad)
fcmovb
sub
push
popa
mov
push
aaa
popa
push
push
mov
sub
call
jnp
mov
push
movs
push
jmp
mov
adc
jbe
(bad)
or
dec
xor
ficomp
loope
pusha
jmp
pop
or
mov
int
add
in
add
inc
sub
xadd
aad
xchg
dec
jg
mov
pop
jmp
sub
fs
pop
ror
mov
dec
add
pop
sub
mov
mov
inc
pop
sbb
xchg
and
repz
loope
pushf
jmp
inc
ins
xchg
dec
and
push
push
push
shl
sbb
push
mov
hlt
(bad)
fstp
popf
mov
sbb
inc
dec
loopne
icebp
test
adc
inc
outs
das
jo
and
or
jb
stos
fwait
popa
ret
mov
jge
sahf
test
and
clc
vmovq
mov
inc
sbb
loop
retf
xchg
mov
mov
mov
push
xor
add
stos
add
pop
dec
mov
inc
or
hlt
test
and
(bad)
mov
std
call
mov
xchg
push
pushf
sub
inc
jns
pop
loope
outs
mov
sbb
test
mov
sbb
adc
fbld
pop
mov
pop
jl
push
and
lea
fdivr
sub
cmc
sub
fisub
jo
adc
lods
add
je
or
fadd
push
and
cmp
add
fcomp
call
ds
sub
jne
sub
mov
xor
jge
or
(bad)
(bad)
xor
or
pop
fwait
inc
adc
push
pop
je
sahf
mov
fdiv
(bad)
pop
dec
int3
cld
mov
or
neg
or
xor
mov
pop
cmp
sbb
inc
push
inc
lea
sub
push
iret
and
xchg
aaa
add
mov
loope
pop
outs
loope
idiv
pusha
or
mov
lock
test
fs
jnp
inc
jg
pop
jp
xchg
loope
je
stos
mov
pop
imul
int
sbb
adc
add
imul
scas
mov
mov
(bad)
test
add
sbb
cmp
adc
mov
or
push
pop
add
adc
xor
jo
pushf
lods
cs
adc
mov
je
or
lods
icebp
(bad)
lock
jmp
psubsw
jne
mov
adc
sti
sub
in
jmp
cdq
cmp
jg
mov
inc
or
mov
clc
add
in
rcr
cmp
push
je
je
cmps
stc
fdivr
sbb
jae
cmp
sub
dec
fistp
mov
jmp
call
aas
dec
push
inc
shl
or
jmp
popa
sbb
xor
cli
mov
add
pop
inc
and
into
(bad)
jl
cmps
sbb
jno
lock
xchg
je
imul
ja
xor
mov
jnp
sbb
xchg
test
jp
or
add
hlt
outs
ja
or
jnp
je
mov
adc
add
test
ficom
iret
movs
pop
imul
out
mov
dec
pop
and
add
mov
mov
rcr
push
jmp
jae
pop
cli
jnp
adc
jmp
or
shl
mov
sbb
pop
pusha
mov
sahf
je
pop
ror
mov
out
jle
push
jmp
xchg
pop
lds
pop
fs
lds
mov
add
jbe
push
and
outs
xchg
addr16
daa
push
nop
mov
or
out
jmp
push
jp
and
inc
jl
adc
fidiv
sbb
cmp
push
loope
adc
pop
pop
pushf
cmp
cmp
push
and
and
and
adc
or
jne
sbb
jne
out
in
cmp
jb
adc
add
add
rol
ins
movs
fiadd
push
or
mov
and
xchg
iret
shl
jb
pop
imul
mov
jae
div
inc
or
cmp
jle
and
sar
test
daa
mov
xlat
mov
fmul
adc
outs
sub
push
outs
add
xor
ins
push
add
test
mov
sub
iret
jmp
rcl
mov
fwait
sub
mov
pop
pop
and
inc
aad
add
cmp
(bad)
mov
movs
cmp
jne
cmp
jne
pop
pop
shl
inc
pusha
sbb
pop
jp
loop
js
push
add
adc
mov
dec
loopne
xchg
movs
lds
xor
pop
pop
xor
sbb
dec
push
fbld
mov
jo
inc
fbstp
sub
cwde
xchg
or
out
jnp
pop
xchg
sbb
out
xchg
hlt
push
mov
popf
jb
mov
fsubrp
mov
fdiv
mov
adc
mov
clc
(bad)
adc
xor
stos
dec
cmps
popf
jl
lods
xor
sub
dec
aas
iret
inc
dec
dec
add
mov
mov
push
inc
sub
push
rol
aas
adc
or
pop
loopne
loopne
pop
clc
(bad)
and
hlt
stos
out
xchg
inc
std
hlt
adc
jne
sbb
mov
jo
push
jo
push
sbb
or
mov
xor
sbb
dec
rcr
int3
xor
call
sub
push
mov
fdivr
in
pop
jg
and
out
or
or
rol
push
sbb
mov
popa
or
sub
jp
lods
movs
push
xor
inc
sahf
xor
pusha
and
xchg
pushf
and
xchg
dec
ins
or
lds
aas
jge
les
shr
push
mov
cld
ss
sbb
mov
shr
cmp
int3
daa
adc
xchg
fdivr
jns
sbb
jne
ds
icebp
or
mov
pop
mov
cmp
xor
sbb
in
lea
cmc
xor
bound
cmp
cmp
stos
dec
jmp
cmp
test
cmp
jo
test
cmp
ins
cmp
pop
out
mov
and
and
lea
out
and
mov
add
adc
scas
sub
sub
adc
inc
add
addr16
push
into
add
ss
mov
dec
add
add
imul
push
add
dec
mov
paddusb
inc
sbb
stos
in
add
push
mov
daa
adc
mov
es
sbb
mov
inc
add
mov
cmp
repz
popf
dec
mov
adc
inc
inc
popa
fcom
mov
in
inc
mov
jmp
push
jmp
jo
lea
jle
movs
cmp
imul
into
dec
jb
(bad)
les
mov
mov
cmp
and
cmp
outs
and
and
jnp
jle
loopne
xor
repz
pop
scas
push
out
cmp
call
out
push
mov
test
push
pop
retf
sar
dec
push
or
sbb
aaa
sub
(bad)
ror
punpckhwd
inc
arpl
aad
je
aas
rcl
jbe
jo
in
jmp
pop
and
in
or
imul
mov
push
enter
(bad)
pop
enter
(bad)
lods
idiv
jg
les
mov
pop
dec
add
cwde
call
mov
sti
dec
jne
dec
outs
adc
mov
dec
daa
xchg
mov
pop
push
(bad)
jmp
push
lock
add
xor
scas
js
out
or
pop
or
add
push
out
cmp
ins
ja
adc
bt
setb
cmp
lods
pusha
fcomp
jg
and
jle
jecxz
test
(bad)
sub
addps
ja
jl
inc
mov
cmp
in
gs
add
out
xor
push
inc
sub
dec
pop
call
sub
jne
sub
add
jmp
pop
test
jmp
fwait
ja
or
mov
jl
jl
inc
jmp
loopne
lods
dec
lods
push
das
jne
sub
test
add
clc
fidivr
and
add
mov
jmp
movs
ins
xchg
push
je
test
scas
add
sete
inc
(bad)
push
je
pop
sbb
or
dec
pop
mov
shl
jmp
in
dec
pop
out
inc
ins
sub
jo
xchg
sub
add
dec
or
dec
into
adc
sbb
add
sbb
scas
mov
daa
idiv
in
fcom
seta
cs
shl
sbb
jg
clc
cmp
jg
cmp
cld
mov
push
mov
pop
fdivp
jl
les
xchg
add
inc
mov
push
sbb
mov
dec
stos
add
ret
mov
jg
adc
pop
sbb
out
adc
cmp
sbb
adc
inc
test
mov
mov
scas
sbb
sbb
add
ds
mov
fisttp
fs
and
push
push
push
push
ins
or
mov
out
ins
aad
sub
pusha
cmp
je
inc
jne
je
outs
pop
adc
outs
ins
(bad)
out
arpl
push
outs
ins
bound
outs
js
adc
popa
push
push
imul
(bad)
adc
imul
and
jb
mov
ins
jns
adc
gs
fs
dec
imul
or
je
imul
and
push
je
inc
popa
ins
les
jbe
addr16
(bad)
lods
int3
imul
gs
jb
addr16
ja
(bad)
sub
(bad)
into
or
push
arpl
ins
ins
out
ja
neg
push
jo
jb
je
je
outs
gs
cld
sbb
jae
adc
or
imul
adc
jb
adc
mov
je
mov
shr
es
outs
mov
adc
sbb
jo
jb
out
outs
adc
dec
outs
dec
and
sub
gs
loope
or
outs
ja
bound
cmp
cmp
xchg
jae
and
pop
je
jo
sub
das
sbb
or
mov
push
fndisi(8087
ret
adc
popa
adc
enter
fld
fs
mov
pop
and
mov
dec
sbb
push
sbb
inc
and
push
arpl
clc
jmp
jae
push
out
inc
ss
add
adc
push
mov
sub
mov
xor
push
sbb
push
scas
pusha
or
or
jl
and
dec
inc
adc
je
mov
add
out
rcr
adc
adc
jne
js
fadd
ins
fs
sub
imul
lock
loope
cmp
mov
aas
push
outs
arpl
add
mov
adc
sbb
rol
cmp
ins
jecxz
xor
ficomp
das
fild
aaa
xlat
test
outs
mov
loopne
mov
ins
mov
or
iret
jo
sub
retf
push
das
lods
pusha
sbb
(bad)
sbb
ret
pop
fadd
push
mov
mov
mov
jl
mov
jnp
fcomp
and
add
sub
adc
sub
mov
xor
or
mov
sub
mov
jp
nop
jge
pop
fcomp
(bad)
xor
sub
xor
ss
cmp
sysenter
xor
push
inc
repnz
mov
lods
adc
xor
daa
adc
add
or
xchg
sub
pop
sub
xor
aas
inc
ins
jns
push
xchg
xor
sub
sub
xchg
xor
outs
xor
add
cmp
test
out
push
xor
arpl
mov
shr
sub
in
cmps
dec
mov
push
adc
sbb
iret
sbb
push
test
push
fs
jle
adc
sbb
leave
pop
adc
outs
sub
ror
sub
adc
push
retf
pop
xor
ret
push
pusha
dec
push
sbb
mov
adc
pop
dec
sbb
inc
push
arpl
add
imul
add
pop
or
rol
xchg
xchg
mov
jne
ins
sub
lods
in
pop
lea
rol
mov
dec
fadd
fld
fdiv
aad
popf
sbb
retf
push
pop
and
ja
bound
xor
fldcw
in
icebp
or
icebp
loopne
or
icebp
xchg
adc
imul
out
jl
and
ror
daa
fisubr
sbb
cmp
dec
push
ins
sub
fldenv
sbb
cwde
sub
in
inc
adc
xor
adc
inc
sbb
ja
adc
mov
mov
inc
push
cdq
sub
xor
inc
je
push
jecxz
push
test
ror
jno
fisttp
mov
test
pushf
xor
mov
outs
mov
leave
or
mov
push
push
imul
inc
loope
pop
adc
add
ja
adc
in
ins
neg
push
push
or
adc
das
jmp
dec
lock
and
in
adc
lock
outs
das
in
add
daa
sub
mov
xchg
stos
arpl
into
sub
jo
movs
or
push
adc
fisttp
test
sar
pop
xor
retf
push
aas
inc
mov
in
push
xor
cmp
aam
dec
shl
sbb
sub
arpl
xchg
add
dec
outs
ins
movs
push
and
test
adc
fisub
push
xor
cli
lds
push
imul
jne
aaa
mov
xor
adc
fistp
add
in
xchg
cmp
add
inc
pop
push
push
aaa
xlat
add
jne
push
mov
mov
aad
arpl
mov
push
cmc
add
call
(bad)
cmp
mov
in
cmps
push
push
outs
sub
mov
imul
nop
push
mov
fild
xor
jnp
daa
mov
xor
shr
ret
aaa
ins
ins
ss
and
push
push
and
dec
fs
sbb
mov
inc
scas
inc
shl
adc
and
cmp
or
or
ret
and
dec
xor
daa
mov
jo
cmp
sbb
fisttp
movs
(bad)
and
arpl
and
ja
ins
dec
and
cwde
mov
inc
(bad)
into
ror
iret
mov
or
mov
jbe
pop
fldcw
rol
fcomi
push
sti
shr
popa
adc
jo
pop
xor
cmp
push
sbb
and
sbb
sbb
xor
or
pusha
sar
in
std
rol
mov
xor
nop
fisub
aaa
adc
shl
push
xor
add
sar
sub
or
iret
test
iret
test
mov
iret
xor
adc
inc
fdiv
add
add
mov
xchg
lock
xor
fsub
in
push
les
pusha
bound
jmp
xor
sbb
xor
mov
or
lods
xor
and
fld
push
imul
and
mov
pop
ins
sbb
jo
adc
adc
or
pop
or
cmp
pop
or
or
ins
sbb
lds
sahf
xchg
pop
cmps
xor
xor
popa
jo
pop
(bad)
idiv
(bad)
jo
mov
add
cmp
adc
je
xor
out
out
push
push
imul
xor
xor
or
pop
mov
xor
mov
cwde
cmp
push
data16
shl
adc
mov
dec
cmps
mov
xor
jo
jno
add
xchg
aaa
fsub
wbinvd
popa
ret
xchg
std
adc
or
jne
sbb
ss
sar
test
popa
jae
jp
sub
adc
sub
call
sub
mov
inc
adc
mov
clc
and
pusha
mov
and
imul
fwait
jecxz
inc
sbb
popa
test
mov
xor
nop
cs
das
in
fiadd
push
fs
addr16
outs
pop
jo
das
sbb
mov
mov
dec
sbb
adc
sbb
dec
lock
nop
and
sbb
rcl
lods
jmp
ss
ror
ror
mov
mov
adc
cmps
dec
outs
ret
mov
mov
sbb
sub
mov
imul
inc
cmp
mov
cdq
mov
xor
ror
mov
arpl
ret
daa
cmc
fidiv
pop
add
sub
add
mov
jno
lahf
int3
cmp
adc
cld
sub
mov
and
mov
daa
xor
shl
mov
imul
ins
sub
shl
popa
and
and
dec
mov
add
ss
sub
adc
rcr
sbb
and
dec
adc
imul
xor
mov
sti
xchg
push
repz
fdiv
pop
or
mov
mov
inc
dec
sti
neg
dec
add
pusha
push
and
or
pop
sti
daa
jnp
sub
bound
test
mov
hlt
das
mov
mov
cmps
push
sub
push
ficom
je
adc
push
jo
xor
or
fnstsw
test
sub
bound
shl
inc
daa
inc
xor
cmp
pusha
sbb
inc
jo
das
dec
shl
mov
pop
or
sub
add
in
test
add
loopne
fadd
sbb
into
jl
neg
not
adc
movs
push
pcmpgtd
arpl
sbb
shl
(bad)
xor
inc
retf
jno
mov
das
jne
mov
addr16
test
fisub
sahf
pop
or
and
sbb
xchg
push
popf
add
enter
sub
ficomp
or
pop
inc
gs
loopne
daa
(bad)
ret
push
lock
ins
jo
pop
push
cmp
add
and
sub
test
xchg
push
es
xchg
pop
dec
and
mov
push
mov
mov
and
icebp
inc
or
pusha
lea
and
xchg
sub
adc
and
fidiv
add
cwde
and
adc
dec
movs
mov
inc
mov
xor
xor
or
mov
adc
inc
jo
mov
sbb
mov
and
test
pusha
mov
mov
mov
adc
lea
mov
adc
cmp
or
add
mov
jno
push
fucomp
push
dec
adc
push
clc
(bad)
fcmovb
std
sub
push
push
mov
dec
sub
push
not
jnp
call
sbb
jne
outs
loopne
mov
(bad)
push
fisttp
(bad)
xor
add
adc
(bad)
fistp
fist
lods
mov
mov
jge
sub
xor
mov
mov
adc
xor
int3
ror
and
lahf
cdq
xchg
int
sbb
test
inc
pop
mov
cwde
int
jmp
cmp
cmp
pop
ret
loop
xchg
les
xor
outs
adc
cmps
xlat
push
fild
sbb
inc
mov
dec
aas
cwde
daa
cmp
sub
adc
test
xor
ret
neg
and
mov
addr16
cmova
xor
jne
loope
cmp
xor
jge
retf
adc
mov
sbb
cmp
in
add
jbe
adc
shr
xchg
jb
dec
inc
or
mov
mov
dec
ins
int3
sbb
daa
push
or
js
sub
cmp
jne
mov
jns
jo
pop
ret
xor
jae
(bad)
(bad)
(bad)
(bad)
xor
sti
sub
js
inc
cmps
shr
push
pop
mov
add
sub
mov
push
rol
pop
pop
sub
adc
es
int3
ins
maskmovq
neg
jb
repnz
or
in
push
shl
xor
clc
pop
push
imul
push
bound
ja
jo
inc
or
sub
shl
and
jae
pop
ficomp
pop
sub
inc
fst
dec
adc
xor
lahf
(bad)
cwde
inc
or
and
sub
sub
and
xchg
and
js
or
fs
adc
enter
xor
cmps
daa
nop
add
cmps
lock
cmp
sub
arpl
push
imul
xchg
pusha
cwde
rcpps
jo
and
imul
pop
in
mov
addr16
cmp
test
jnp
and
xlat
daa
in
cwde
xor
sbb
bound
push
outs
fs
jns
xor
and
data16
push
lea
daa
addr16
xchg
ja
push
out
xchg
add
test
xor
add
js
fdiv
sub
gs
ins
out
or
inc
cmps
ja
dec
xor
inc
shl
mov
inc
push
aaa
xor
cmp
test
ins
and
in
mov
sti
xchg
xchg
movs
mov
and
jmp
jno
adc
push
ins
adc
cmp
cmp
push
xor
cmp
bound
icebp
es
jbe
pop
jmp
ins
xor
inc
popa
add
pop
or
sbb
fiadd
test
not
idiv
sbb
pop
ja
ja
lods
loope
in
loope
xor
fstp
adc
aad
rcl
lods
and
int
or
add
addr16
ja
mov
xor
jmp
cmp
and
sub
pop
pop
mov
cmp
and
push
js
js
pop
pop
pop
or
jnp
and
jae
aam
cmp
addr16
imul
ds
sbb
cmp
mov
add
add
(bad)
add
movs
pop
and
jae
pop
dec
adc
xchg
inc
xor
sbb
ret
lds
or
and
push
mov
inc
movs
and
pop
and
xchg
cmp
aad
je
inc
cs
arpl
fwait
sub
push
in
data16
bound
cs
push
cld
or
jb
lds
lds
(bad)
adc
and
cmp
pop
sub
sub
das
mov
sbb
vmovhpd
lds
lds
ja
jnp
js
popa
jne
sbb
pop
pop
ja
ja
mov
loopne
adc
ins
fld
lea
jle
sbb
xchg
and
xchg
mov
xchg
xchg
enter
xchg
xchg
or
rol
pop
or
pop
xchg
fsub
js
ja
outs
call
ja
ja
mov
outs
arpl
adc
and
pop
pop
push
or
xchg
inc
idiv
mov
and
fidiv
(bad)
fisub
(bad)
div
push
jo
dec
jae
push
sub
mov
pop
push
ficomp
das
mov
ins
or
xor
mov
outs
cmp
dec
rsm
mov
sub
aad
(bad)
push
popa
adc
push
js
cmc
(bad)
and
cmp
(bad)
sbb
or
das
pop
adc
adc
push
sti
cmps
push
ins
jbe
test
sbb
pop
or
out
mov
mov
aam
or
das
sbb
push
sbb
push
pop
push
pop
sub
lds
jno
cmp
jl
xchg
jns
or
cmp
or
stos
push
or
cmp
xor
sub
out
push
pop
pop
push
ficom
mov
xor
mov
and
xor
mov
or
data16
dec
or
pop
pusha
jecxz
fcomp
adc
cmp
pop
sub
das
push
imul
sub
cmp
movs
fninit
xchg
jp
add
push
in
loope
test
nop
cmp
pusha
repz
pop
and
icebp
add
cmp
xor
push
inc
push
xor
pusha
frstor
push
push
mov
or
and
mov
jbe
or
jmp
mov
inc
and
mov
out
lods
fdivrp
xor
xchg
add
shr
scas
sbb
ins
pop
mov
jne
les
pop
bound
jmp
arpl
sub
mov
dec
inc
jb
or
xor
in
adc
xor
add
cmp
cwde
daa
js
mov
pop
xchg
aam
push
adc
add
mov
sbb
ror
push
and
xor
ret
or
xchg
add
(bad)
sahf
test
out
push
lods
lea
daa
adc
mov
out
and
or
add
sahf
jge
push
arpl
fdiv
inc
push
or
jae
and
inc
movs
fldenv
aad
jo
loopne
mov
mov
movs
pop
inc
and
xor
daa
adc
sub
xor
sahf
xor
aad
adc
push
sub
aaa
cmps
or
(bad)
ret
cmps
sub
adc
add
jg
adc
scas
xor
jno
jne
nop
pop
cmp
jns
or
add
imul
in
push
cmp
ffree
sub
and
popa
imul
sub
sbb
out
push
mov
cmps
sub
sub
je
add
push
and
jl
into
sub
scas
jb
mov
das
adc
sub
mov
loop
jecxz
movs
and
jecxz
push
mov
adc
xchg
popa
ja
jnp
xchg
(bad)
jg
sub
mov
mov
(bad)
jecxz
test
dec
xor
(bad)
lods
fnsave
sahf
sub
push
cmp
pop
nop
xchg
and
sub
lds
lds
or
outs
js
inc
ins
or
outs
xchg
mov
jecxz
mov
dec
mov
sub
or
or
ins
fdiv
cmp
cmp
sbb
mov
adc
stos
fs
xor
les
daa
out
mov
neg
test
fmul
cmps
or
xchg
xor
pop
sbb
or
popa
out
mov
pop
or
fdiv
sbb
sbb
push
mov
pop
lea
fld
push
ror
xchg
xchg
movs
push
xchg
test
es
and
push
sbb
xchg
jbe
ds
jns
loopne
fsubr
ja
jo
xor
sbb
and
outs
or
ins
jae
pop
ins
xchg
rol
mov
xor
sahf
sbb
mov
and
(bad)
das
dec
lods
stc
pop
jbe
adc
fbstp
imul
stos
ins
push
pop
sub
push
arpl
xor
inc
(bad)
xchg
dec
cdq
adc
xchg
pop
scas
les
or
sti
imul
pop
out
imul
push
mov
inc
cmps
adc
mov
or
mov
sub
xor
mov
adc
inc
mov
cdq
jbe
repnz
push
outs
fs
loop
test
ins
pop
pop
fimul
pop
sub
sbb
add
push
aaa
sbb
mov
mov
and
and
shl
int
and
arpl
sbb
sbb
push
sbb
add
mov
imul
cmc
sbb
dec
adc
pop
or
cmp
cwde
push
push
aad
xchg
or
inc
jecxz
push
test
dec
fabs
sub
mov
mov
test
(bad)
ja
jp
cwde
je
aad
hlt
xlat
or
in
fdivp
push
shr
lock
pushf
ins
retf
xchg
lds
or
pop
imul
movs
add
and
call
and
fs
test
ret
or
sub
xor
cdq
ret
xor
cmps
xor
movs
xor
loopne
fcmovbe
push
cmps
rcl
loope
loope
adc
mov
xor
icebp
sub
test
popa
test
xchg
ins
push
xor
clc
aaa
jmp
scas
and
lods
lea
sub
xor
imul
sub
and
mov
lods
jmp
int
mov
icebp
adc
add
cmp
aaa
push
jae
adc
cmp
push
adc
xor
and
inc
cmp
push
xor
inc
vcvtsd2si
xchg
out
pusha
mov
cmp
add
sbb
mov
fidiv
inc
cmp
imul
pop
push
sbb
daa
sahf
cmp
mov
je
sbb
mov
bound
jmp
mov
jo
add
add
push
sbb
dec
mov
dec
jae
pushf
add
ja
cmp
test
bound
cmc
daa
ins
add
sti
push
out
jo
add
cmps
aam
call
add
fcmovb
shl
dec
in
inc
lock
adc
das
or
cs
fimul
in
iret
xor
sbb
push
add
add
daa
pop
lods
sbb
(bad)
and
mov
(bad)
sbb
cwde
and
jo
out
mov
pop
or
lock
imul
xor
lds
push
in
ds
mov
aad
add
in
imul
push
push
dec
popa
lock
scas
add
je
jne
sbb
into
hlt
das
dec
sub
les
lds
mov
add
mov
rcr
mov
pop
jbe
test
movs
ret
mov
lea
xchg
adc
cmp
add
push
or
push
jb
and
mov
cdq
shr
inc
jno
jo
fistp
jnp
sub
mov
adc
xchg
pop
cmp
pop
rol
push
bound
mov
add
arpl
imul
cmp
lods
or
add
in
cmps
inc
sbb
push
xor
pushf
cmp
cmps
push
pop
lahf
adc
fsubr
dec
push
cmp
push
push
or
fsub
repnz
jg
fsubr
cmp
fcom
dec
add
inc
cmp
test
push
ins
xor
repz
test
(bad)
ret
retf
mov
adc
jns
dec
jae
out
push
push
(bad)
(bad)
(bad)
xor
inc
je
pop
sub
jae
inc
mov
repnz
ins
or
imul
xchg
jp
scas
jae
jns
jne
lahf
sub
fmul
sub
jnp
daa
icebp
loope
nop
cwde
push
das
push
je
jo
xchg
or
cmp
fcom
jg
sub
mov
inc
not
sti
nop
sbb
or
imul
pusha
push
ss
and
adc
cwde
push
xor
jecxz
rol
push
jecxz
and
add
imul
adc
(bad)
dec
mov
push
dec
jb
es
mov
xor
fsub
push
das
pop
into
sub
retf
aam
mov
gs
pusha
or
sub
pop
xor
and
xchg
test
inc
adc
ins
adc
test
sub
sub
sbb
inc
sub
ins
mov
or
or
in
call
cmp
push
(bad)
add
cmp
or
inc
mov
xlat
and
add
add
arpl
dec
mov
sar
and
inc
mov
or
pop
in
(bad)
cmps
popa
pop
or
xchg
daa
mov
or
xchg
mov
sbb
int3
test
sub
shr
addr16
inc
add
arpl
(bad)
adc
mov
call
inc
ins
jns
push
cdq
test
cmp
leave
xor
cmp
mov
cmp
mov
cmp
cmp
inc
add
stos
cmp
push
push
imul
lock
adc
push
loope
inc
pop
and
sbb
in
cmp
jnp
xor
and
push
pop
test
inc
sbb
xor
ja
xor
and
adc
cmp
pusha
sub
inc
sub
fild
dec
or
sub
push
jg
daa
push
rol
inc
sub
nop
sbb
push
bound
inc
iret
adc
and
shr
and
inc
aam
mov
fsubrp
xor
cwde
add
shl
xor
ins
xor
sbb
enter
pop
jae
xchg
xor
push
push
push
mov
fwait
or
int3
mov
or
sbb
sar
ficom
and
mov
sub
or
js
push
push
lods
adc
scas
gs
mov
pop
nop
pop
sub
outs
test
jno
je
sbb
inc
enter
scas
pop
ins
pop
jnp
and
sbb
sub
adc
test
data16
shr
pusha
and
add
(bad)
mov
ins
pop
arpl
push
fstp
cmp
jae
mov
cmp
daa
mov
sbb
push
ins
jnp
mul
ret
lds
in
lea
(bad)
sub
out
and
mov
sbb
jg
pushf
mov
bnd
je
data16
mov
ds
cmp
pop
sub
outs
jns
inc
outs
imul
idiv
ja
sub
adc
or
hlt
cmp
ret
das
and
cmp
nop
xchg
push
sbb
mov
popa
adc
sub
add
fneni(8087
mov
sbb
rol
xchg
sbb
mov
or
(bad)
out
lock
fs
fisub
or
in
in
popf
out
cmp
dec
lahf
push
imul
mov
push
call
fild
mov
shl
ja
jo
mov
or
push
pop
test
outs
int3
and
int3
xor
ret
ja
ss
jno
sub
sub
jo
dec
push
sub
pop
cmps
ret
fiadd
pop
adc
adc
arpl
sub
push
sbb
sub
ror
cs
inc
lock
test
daa
dec
sbb
aad
pop
and
or
push
push
sub
xor
daa
inc
stc
xor
out
adc
mov
pusha
mov
pop
xchg
and
and
push
jns
xchg
mov
(bad)
gs
and
or
sar
not
push
dec
inc
dec
xchg
sbb
fsubr
sbb
xor
push
shl
mov
add
or
and
sbb
ins
and
xchg
push
or
xor
or
movs
jnp
ret
lods
xor
xor
add
lea
jmp
jbe
daa
xchg
dec
cdq
test
ins
in
mov
test
cmps
pop
xor
mov
pop
lds
sar
mov
inc
pop
test
jae
ins
xor
sub
push
scas
pop
sub
pop
ret
sub
mov
adc
shl
sub
xor
inc
imul
ins
jo
(bad)
and
lods
inc
mov
lods
and
retf
or
sbb
add
lea
sub
mov
xchg
jp
arpl
inc
inc
and
movs
pusha
inc
and
sbb
sbb
inc
(bad)
adc
sbb
and
or
push
shl
add
pop
and
and
and
xor
scas
add
lea
xor
push
sbb
popa
or
push
cmps
call
jo
popa
je
sbb
cmp
add
jg
lock
mov
push
ins
cmp
sub
loopne
aad
sbb
aaa
rol
and
pop
jns
lock
test
mov
add
inc
dec
popa
lods
sub
sbb
(bad)
jo
inc
add
pusha
inc
cmp
inc
push
inc
inc
jno
sbb
inc
push
fucomi
jne
jmp
arpl
jb
(bad)
or
xor
ins
pop
add
pop
add
pop
adc
repnz
dec
mov
adc
sbb
enter
push
push
cmp
and
inc
imul
iret
inc
push
loop
adc
das
add
fadd
imul
shl
xor
sub
or
xor
ror
add
mov
rcr
fidiv
popf
or
xchg
shl
shl
mov
int3
cmp
xchg
mov
inc
arpl
sbb
pop
and
pop
ins
(bad)
cmp
scas
xor
xor
or
outs
pop
das
mov
test
or
or
push
in
es
xchg
loope
and
mov
loopne
outs
outs
cmp
push
jne
imul
(bad)
add
aaa
dec
cmp
sbb
jmp
or
je
adc
inc
adc
dec
(bad)
sbb
js
fadd
pop
(bad)
add
xchg
xchg
xor
ins
inc
imul
jne
pop
add
and
pop
or
mul
or
or
fwait
rol
pop
pop
out
push
out
test
push
ret
les
mov
jns
sub
sbb
dec
aas
sti
add
dec
imul
push
inc
fs
add
(bad)
shr
popa
test
call
mov
addr16
aaa
mov
aas
dec
mul
jbe
jmp
retf
in
sbb
ins
mov
add
mov
inc
mov
inc
xchg
adc
jae
mov
ins
fisub
adc
clc
adc
fdiv
add
xchg
cs
sub
push
pop
xchg
js
or
inc
pop
push
or
scas
jmp
or
mov
in
addr16
cmp
push
jge
or
adc
aaa
in
push
sysret
fidivr
pushw
cmp
jmp
or
pop
jae
inc
add
loopne
xchg
jo
mov
push
test
inc
mov
or
or
mov
outs
sub
movs
add
push
mov
push
xchg
pop
adc
sub
sti
pop
adc
or
mov
or
sbb
or
es
add
jle
adc
inc
push
(bad)
fs
xor
in
or
dec
movs
adc
bsf
add
cmp
add
out
and
dec
icebp
rol
movs
pop
sbb
loopne
leave
add
sub
call
pushf
ffree
or
and
call
pop
loop
add
fwait
add
sti
inc
sbb
jae
adc
ins
mov
mov
inc
dec
daa
add
push
pop
pop
cmp
cmps
adc
hlt
add
fcmovu
sub
jb
das
jae
and
fidivr
push
inc
popa
pusha
sbb
aaa
sub
in
mov
cmp
rcl
lods
mov
outs
jbe
adc
jne
and
imul
sub
adc
sub
jg
mov
add
daa
sub
fsub
fsub
imul
inc
fsub
jmp
adc
je
push
int3
pop
adc
mov
cmp
add
sub
xor
mov
dec
fucomp
push
mov
jl
mov
scas
push
or
push
push
push
mov
jo
xor
(bad)
or
adc
xor
add
daa
push
pop
add
and
ins
xchg
retf
add
xlat
and
sbb
pusha
loope
sub
ret
or
push
mov
and
jge
inc
addr16
popf
pop
aas
and
popa
mov
cmp
fisubr
out
pop
sub
sbb
lea
xor
inc
pusha
pop
cli
cmps
adc
stos
push
sub
mov
push
or
fstp
ss
sbb
pop
sub
imul
and
cmps
fistp
call
mov
sub
cmps
pusha
ins
jno
sub
fsub
jp
lods
lea
adc
mov
imul
and
dec
sub
mov
(bad)
hlt
sub
(bad)
sub
mov
sub
js
dec
dec
and
aaa
ins
mov
pusha
pop
cs
ficomp
xor
or
vcvtss2si
add
xchg
sub
and
or
jb
aad
sub
sub
sub
or
ins
sub
jbe
mov
int3
lock
outs
jo
push
sbb
inc
nop
sbb
ins
add
xchg
int
xor
fidiv
sub
imul
test
mov
or
sub
or
cld
pop
bound
ja
xor
add
jnp
push
inc
pop
xchg
sbb
das
outs
adc
and
bound
add
and
sub
ror
push
mov
inc
test
xor
cmp
sbb
mov
sbb
sbb
out
fimul
and
shl
rcl
and
sub
push
cmp
shr
jge
and
jbe
scas
outs
push
clc
sbb
je
adc
jnp
cmp
xor
ins
or
test
adc
add
fs
sbb
imul
lock
mov
add
and
cmp
jns
sub
mov
pop
mov
jae
pop
and
jg
nop
enter
(bad)
in
jae
mov
call
push
pop
jns
cmps
stc
movs
sbb
out
push
test
ret
sub
add
cmps
das
pop
out
dec
add
add
mov
sbb
mov
add
jb
xchg
std
sbb
dec
mov
add
xchg
das
push
jle
add
and
lds
jl
jb
add
mov
add
xchg
sub
add
mov
ror
add
add
in
xchg
shr
sub
in
repnz
ror
test
add
repnz
loopne
push
ret
rdpmc
add
add
xor
add
add
imul
cmp
jge
add
retf
xchg
sub
cmp
lods
iret
fld
cmps
inc
(bad)
cmovno
xchg
retf
outs
and
test
inc
adc
aad
call
add
push
push
inc
bound
jb
cmp
scas
jp
int3
jb
imul
adc
je
inc
pop
test
add
ds
mov
sub
fs
std
mov
add
dec
push
push
imul
repnz
dec
in
enter
dec
leave
adc
pop
and
lock
push
and
inc
push
clc
or
pusha
and
or
sub
inc
in
mov
je
adc
pop
and
sbb
push
and
inc
push
and
push
test
mov
dec
xor
sbb
lock
xchg
pop
and
cmp
cmovb
inc
fsub
push
test
loopne
nop
cmp
sbb
push
pop
inc
arpl
and
imul
adc
xchg
pop
and
cmovb
mov
dec
push
test
cmp
nop
jp
and
sar
inc
repnz
jge
nop
and
and
leave
sbb
inc
push
xchg
pop
test
push
lock
cmp
mov
inc
enter
fadd
(bad)
loopne
inc
push
xchg
in
call
or
lock
jb
clc
or
add
mov
repnz
mov
inc
adc
xchg
adc
inc
push
and
popf
or
add
push
dec
outs
popa
fs
jb
ins
fstp
gs
mov
ins
nop
inc
fdiv
xchg
ds
repnz
dec
dec
jnp
add
or
add
scas
adc
inc
shl
fiadd
or
mov
je
sbb
add
inc
or
push
or
mov
cmp
and
lahf
cmp
popa
jbe
push
outs
sbb
rol
outs
push
movs
add
ja
jo
test
ja
add
or
dec
popf
hlt
mov
xchg
pushf
je
cmp
cs
psrlq
pushf
pushf
pushf
pushf
ret
mov
pushf
pushf
mov
pushf
pushf
pushf
cmp
pushf
pushf
pushf
pushf
arpl
dec
pushf
pushf
pushf
pushf
inc
cmp
sub
adc
dec
inc
sahf
pushf
add
test
dec
dec
jecxz
ror
dec
dec
dec
dec
ret
mov
dec
dec
mov
dec
dec
dec
cmp
lock
arpl
pop
mov
pop
push
inc
mov
and
test
push
mov
jne
dec
pop
push
dec
popa
outs
xor
xor
and
or
fmul
push
and
xor
lahf
sub
retf
cdq
add
mov
in
dec
int3
push
outs
add
cmp
imul
xor
push
pop
cdq
jge
lock
push
push
xor
add
push
lds
add
inc
dec
outs
mov
or
add
adc
add
push
inc
add
call
into
popa
in
enter
iret
xchg
sbb
xor
in
jg
push
shl
pushf
mov
jae
add
jge
and
sahf
jno
out
push
aad
enter
dec
(bad)
lods
pop
xlat
in
in
test
fdivr
in
xor
lds
sbb
add
(bad)
popf
fld
add
fstp
dec
(bad)
mov
push
mov
xchg
stos
add
or
sbb
lock
in
gs
sbb
inc
jo
ins
jns
mov
sub
pop
or
pop
sbb
jmp
push
outs
push
inc
inc
push
in
mov
bound
loop
push
and
mov
sbb
cdq
xchg
dec
adc
adc
scas
xchg
or
adc
mov
pop
call
add
xlat
lods
mov
adc
add
jne
jo
cmp
push
pop
call
push
add
inc
jb
ja
fld
ret
inc
fs
pusha
sbb
adc
fld
fmul
jo
stos
sbb
test
stos
loopne
and
add
ret
fiadd
shl
push
add
sbb
sbb
add
jnp
add
adc
imul
push
cdq
clc
loope
mov
outs
add
arpl
ret
xor
ret
and
std
add
ret
jo
fld
dec
ins
push
push
pushf
popf
add
fst
lods
cmp
push
popa
sub
popa
and
loope
imul
cmc
or
push
sbb
ins
or
push
jl
test
add
outs
mov
dec
loop
jae
aad
(bad)
xor
push
mov
xchg
and
and
adc
and
test
sub
adc
add
out
imul
aad
out
push
sbb
xor
jns
repz
scas
push
repz
inc
mov
jnp
fdiv
lock
pop
inc
adc
stos
ins
pop
dec
lods
loop
xchg
mov
hlt
adc
push
lahf
add
neg
xor
cmps
mov
inc
ficomp
mov
xor
and
aad
pop
pusha
fucomp
stos
lock
test
sbb
mov
adc
repnz
mov
push
or
xchg
mov
mov
pop
and
test
mov
pop
jmp
add
dec
inc
nop
ins
pop
pop
add
adc
int3
xchg
xor
int
stos
mov
mov
out
mov
inc
pop
xchg
dec
les
cld
mov
outs
add
pop
and
call
ror
lea
bound
sbb
jl
fild
sbb
mul
mov
cmp
add
fisub
cmps
add
sub
sar
add
pop
and
cli
cmp
add
jge
add
mov
dec
ins
ja
add
add
sbb
add
xor
(bad)
mov
scas
inc
jg
or
push
xchg
add
cmc
test
add
mov
add
call
inc
add
dec
popa
jae
inc
imul
imul
sbb
add
mov
mov
inc
je
stos
xchg
pusha
xchg
sbb
push
jg
and
xlat
push
adc
js
inc
dec
popa
adc
inc
popf
ins
jnp
leave
jg
mov
sbb
jg
arpl
sbb
mov
cmc
push
das
add
mov
fisub
sbb
inc
fiadd
les
outs
push
movs
(bad)
scas
pusha
mov
cs
pop
or
jae
popa
ins
imul
inc
xlat
bound
int
scas
dec
add
ja
adc
mov
out
pop
xor
or
addr16
outs
outs
popf
cmp
enter
xor
test
add
xor
inc
ins
pusha
mov
fld
jno
xchg
or
jmp
or
push
ins
scas
data16
idiv
or
mov
fadd
add
inc
pop
xor
fadd
inc
cdq
loopne
rcr
add
or
inc
test
adc
int
xor
inc
dec
ins
aad
stc
add
xor
push
shl
shr
(bad)
pop
add
sub
inc
lea
add
xchg
add
sbb
jae
and
ficomp
xor
push
push
dec
fistp
push
in
enter
add
in
repz
out
xor
xor
out
ss
or
cwde
adc
dec
test
cmp
inc
test
cmp
jns
inc
hlt
clc
dec
arpl
(bad)
cmp
push
je
mov
sbb
dec
cmps
pop
sti
fcompp
push
cmp
push
cwde
push
jo
push
add
dec
fistp
push
outs
push
je
dec
push
push
hlt
push
fcmovnbe
pop
ja
dec
inc
push
pop
push
ins
push
push
inc
push
pusha
inc
fistp
push
lods
int3
dec
cmps
mov
sbb
fcmovnu
sar
xchg
pop
push
pop
scas
pop
push
mov
out
pusha
les
fs
neg
push
and
les
adc
push
xchg
shl
movs
pop
push
mov
scas
std
les
dec
jbe
in
and
jmp
or
adc
cmovbe
(bad)
call
cmp
inc
sub
(bad)
shl
ja
pop
push
or
cmp
jo
sub
sti
out
dec
aam
sub
push
icebp
sahf
mov
xor
inc
enter
dec
push
jle
not
mov
dec
add
add
sbb
es
add
imul
nop
jecxz
sbb
push
adc
add
add
scas
pop
mov
xchg
add
and
movd
repnz
add
add
jle
repnz
add
add
add
out
xchg
das
push
sub
jle
add
sub
push
call
sub
scas
das
add
mov
inc
jmp
xor
fidiv
xchg
stc
in
pop
jmp
ret
push
jmp
xlat
mov
aaa
add
cmps
(bad)
pop
out
ss
in
(bad)
add
movs
(bad)
(bad)
mov
outs
mov
(bad)
add
inc
add
mov
nop
pop
inc
and
inc
es
mov
cmp
mov
shr
or
jns
or
sub
pop
sub
ins
lds
(bad)
sub
dec
and
pop
dec
and
pusha
pop
seta
add
pushf
push
add
xchg
xor
cmp
mov
add
add
je
or
ficom
add
in
push
(bad)
xchg
pop
add
sub
mov
pop
xchg
jb
ss
es
mov
adc
test
xchg
fmul
and
adc
leave
sub
(bad)
fiadd
push
mov
fs
and
pusha
sub
shr
rcl
xchg
inc
arpl
xchg
sbb
nop
pushf
xor
xchg
inc
and
add
or
sahf
xchg
sbb
in
in
mov
xchg
cwde
jae
fcom
cmp
xchg
dec
add
push
mov
cmps
pusha
xchg
nop
jp
dec
rcr
cmp
add
xchg
jbe
and
hlt
sbb
mov
or
and
test
ds
lock
pusha
imul
sbb
xchg
jnp
nop
dec
test
xchg
push
and
add
or
jle
in
leave
sub
inc
push
xchg
inc
nop
push
mov
add
sbb
xchg
sub
xchg
mov
xchg
mov
and
add
cdq
jb
not
xchg
js
adc
movs
inc
outs
xchg
mov
push
leave
hlt
(bad)
xchg
xchg
cmps
nop
push
call
cmps
jbe
push
add
mov
xchg
loopne
cmp
daa
popf
sub
or
ja
pusha
sub
add
rcr
push
sub
or
jo
adc
shl
pop
xchg
inc
lods
imul
ss
imul
jl
sub
imul
sub
dec
add
jns
inc
imul
imul
jne
out
or
jae
ins
dec
gs
sahf
sti
xor
addr16
sub
mov
imul
lock
add
push
mov
es
push
jno
adc
sub
inc
xor
push
mov
psubusw
add
cmps
push
mov
add
adc
and
test
xor
and
xchg
(bad)
xchg
pop
add
mov
add
push
or
push
inc
jmp
mov
inc
jmp
fs
pop
movs
pcmpgtd
ja
das
dec
jle
push
sbb
rol
ret
shr
push
cmps
add
sbb
adc
daa
repz
inc
sbb
scas
mov
add
outs
mov
dec
sub
test
xor
push
loope
pop
or
xchg
sub
add
inc
outs
mov
mov
inc
ins
push
outs
mov
fidivr
addr16
mov
sub
and
cmp
cmc
push
fadd
adc
push
or
sub
and
jno
sub
adc
jbe
push
arpl
or
arpl
mov
mov
push
enter
enter
or
enter
outs
(bad)
mov
in
enter
adc
outs
or
and
mov
and
cmc
xor
jns
or
xchg
adc
dec
pusha
push
add
inc
add
pushf
mov
push
pop
(bad)
scas
in
inc
or
pusha
fwait
jb
sbb
cmps
sti
add
inc
es
(bad)
imul
inc
not
mov
mov
ror
mov
aas
pop
inc
js
push
xchg
pop
pop
rol
outs
je
aas
push
xor
test
push
pop
out
cmp
jo
aam
cmp
or
inc
dec
rcl
add
add
(bad)
mov
imul
jp
xchg
inc
ficomp
xor
dec
aam
or
je
test
outs
ja
xlat
in
arpl
in
sbb
cdq
inc
fs
jecxz
fwait
cs
jo
xor
sub
in
mov
and
push
in
push
push
arpl
sbb
sbb
inc
iret
lock
pop
inc
fist
rol
shl
pop
jp
shl
push
cmp
imul
push
lods
cli
push
pushw
adc
push
push
imul
(bad)
add
pushf
ret
out
leave
push
loopne
push
retf
add
push
push
push
int
mov
inc
rol
mov
ss
pop
ds
pop
add
sbb
adc
adc
fsubp
pop
outs
and
or
jae
lock
repnz
cmp
sub
push
outs
ret
in
lock
jb
fistp
sbb
sub
push
jb
gs
test
imul
adc
add
(bad)
xor
fmul
mov
dec
jo
bound
pop
or
aaa
xchg
loop
ss
xor
or
inc
inc
adc
outs
and
inc
jne
inc
mov
sbb
test
cdq
xchg
pushf
lock
add
cmp
inc
mov
out
div
jae
mov
or
cmp
adc
cmp
hlt
push
loop
inc
add
mov
fld
scas
push
push
loope
adc
and
adc
push
mov
or
sbb
dec
inc
add
scas
mov
movs
stc
movntps
or
loope
mov
(bad)
lock
js
mov
push
in
iret
(bad)
push
ins
or
push
clc
sub
retf
loope
sub
test
push
xor
push
(bad)
fstp
push
sbb
sub
or
call
sbb
push
or
ins
or
mov
rcl
push
clc
push
or
pushw
dec
lods
lock
adc
nop
pop
pmaxub
sbb
ins
mov
and
pop
push
or
adc
pushf
retf
and
les
movs
pop
pop
push
out
sahf
inc
loopne
adc
loopne
push
js
adc
js
cld
add
in
neg
test
(bad)
aaa
jb
int3
(bad)
xor
inc
push
and
(bad)
fisubr
xor
inc
out
sbb
int
int
call
clc
add
push
mov
cwde
sbb
sub
mov
jo
and
aam
rol
adc
sub
jmp
mov
sti
sub
xor
sahf
shl
cld
xor
xor
pop
mov
fadd
std
and
xor
xor
scas
aam
shl
int
jae
pop
push
add
test
or
sub
add
scas
rcr
inc
enter
shr
test
or
xor
pop
dec
or
arpl
and
push
rol
mov
mov
dec
push
mov
push
shl
pop
and
mov
inc
dec
push
in
sti
push
enter
(bad)
out
jmp
rol
stos
and
xchg
ficomp
pusha
add
xor
pop
inc
iret
cmp
push
xor
add
push
nop
arpl
adc
xchg
inc
cmp
pop
add
dec
pop
es
pop
or
pop
jmp
or
inc
dec
adc
xchg
mov
imul
(bad)
push
adc
pop
mov
outs
outs
popf
xchg
add
push
add
sbb
and
mov
hlt
fdivr
push
fst
test
add
jo
daa
rol
dec
push
(bad)
gs
sbb
je
imul
aaa
xor
outs
inc
cmp
or
and
push
outs
dec
xor
adc
jle
gs
add
inc
add
add
or
test
das
xchg
push
ins
addr16
jnp
cmp
jae
mov
push
mov
xchg
retf
adc
sbb
mov
setp
test
inc
popa
mov
and
adc
mov
in
dec
ret
(bad)
or
mov
addr16
adc
loop
pop
fadd
movs
sub
push
int3
pop
fwait
add
xor
clc
xor
rol
or
dec
mov
daa
push
add
xchg
les
add
and
packuswb
ret
jo
dec
scas
ins
add
inc
push
popa
cdq
inc
mov
xchg
adc
daa
sbb
les
push
xor
lods
xlat
sub
nop
or
les
scas
popa
mov
adc
push
cmps
adc
pop
ret
out
adc
push
xor
pxor
ja
imul
push
mov
mov
cmp
xchg
rcr
mov
in
mov
adc
(bad)
fwait
dec
idiv
call
repz
cmp
fst
shr
enter
push
aad
push
jmp
push
outs
dec
pop
arpl
jo
jb
pushf
add
btc
sub
lidtd
add
or
mov
mov
jecxz
xlat
pop
cwde
sub
fwait
sub
loope
mov
arpl
jns
cs
add
aaa
popf
add
or
cmp
add
and
adc
jbe
mov
jnp
test
jnp
cmp
sbb
out
or
cmp
push
add
add
dec
xor
imul
mov
inc
ret
add
add
ret
mov
pop
das
stos
add
aaa
jp
mov
add
es
std
dec
dec
inc
fimul
pusha
add
xchg
daa
daa
and
sbb
xchg
push
sub
scas
in
in
in
or
jb
xor
or
fmul
push
push
dec
adc
inc
bound
mov
(bad)
adc
arpl
push
cmp
jb
ss
and
and
mov
xor
jmp
sub
sub
sub
mov
je
adc
rol
mov
outs
sub
adc
xlat
or
mov
inc
xchg
sub
add
jmp
jnp
sbb
imul
adc
add
add
out
nop
fwait
sbb
dec
js
sbb
adc
adc
sbb
cmp
or
sbb
sub
scas
pop
adc
adc
sub
mov
lahf
mov
xor
pop
add
inc
cwde
or
or
add
lock
ja
inc
add
in
mov
xchg
adc
pop
add
(bad)
sbb
pusha
js
push
sub
pusha
je
dec
xchg
inc
add
call
js
stc
pop
ss
xor
sar
repz
mov
cmp
test
repz
and
push
or
jb
dec
mov
inc
mov
push
dec
push
nop
jmp
add
add
loopne
and
mov
ja
xchg
push
pusha
rcr
rcpps
ja
jb
jb
bound
cmp
add
nop
mov
or
add
(bad)
xor
cli
pop
xor
xor
mov
in
xchg
in
jnp
fidivr
push
iret
test
movs
sub
push
mov
(bad)
dec
xchg
inc
bound
sbb
xor
inc
mov
fwait
xchg
sub
or
or
push
cmp
xchg
add
int
adc
adc
inc
dec
sub
(bad)
lds
mov
arpl
ins
push
xor
sub
add
into
inc
xchg
pop
and
aad
cmp
mov
xor
sbb
sti
ss
loope
or
cld
adc
push
out
(bad)
push
lahf
push
xchg
out
sahf
add
push
push
jns
cwde
mov
enter
outs
add
into
cs
mov
or
or
jb
or
(bad)
add
outs
xor
clts
add
pop
add
icebp
(bad)
scas
push
in
wbinvd
add
push
sub
ins
adc
inc
inc
les
retf
or
jb
pop
arpl
pusha
or
movs
sbb
mov
xor
sbb
mov
xchg
cdq
dec
adc
test
sahf
js
or
stos
(bad)
add
call
cmp
or
jne
jns
cmp
or
inc
ret
and
or
push
inc
and
pop
xor
jo
mov
and
jo
cmp
mov
pusha
add
jge
sbb
pop
stc
adc
loopne
sbb
imul
dec
mov
(bad)
inc
cmp
jns
loop
adc
out
adc
(bad)
dec
lds
les
cld
stos
movs
pop
dec
push
(bad)
pop
sbb
jmp
popf
adc
sub
jnp
inc
mov
es
add
aaa
test
dec
add
das
in
sbb
add
or
lock
imul
sbb
xor
jb
add
cs
cmp
jge
mov
in
sti
and
in
mov
adc
rcr
adc
push
add
sub
(bad)
mov
arpl
and
ins
add
or
test
call
and
jecxz
pop
or
dec
and
test
xor
xor
or
loope
xor
pop
cmps
repz
sar
int
or
lods
add
ror
jp
mov
pop
iret
pop
ins
adc
stos
adc
xor
mov
xchg
inc
sub
arpl
xlat
test
mov
mov
adc
pop
pop
ins
pop
ret
test
add
lahf
nop
adc
push
les
lahf
es
inc
pop
sub
pop
repnz
or
into
popa
and
jb
jne
loopne
outs
or
push
push
push
js
inc
fsub
dec
or
jns
jne
into
outs
jae
add
and
xor
mov
call
adc
idiv
jg
sub
popf
nop
push
rcr
pop
push
das
jp
jb
adc
cmp
cmp
push
aaa
push
mov
push
xor
into
daa
sbb
sbb
push
addr16
inc
sub
inc
and
je
mov
test
jo
and
sbb
push
xchg
xchg
aad
sub
inc
xor
pop
sub
jb
dec
jp
or
pop
jne
xlat
pop
lods
inc
in
test
xchg
sbb
test
fistp
mov
xchg
pop
cmps
inc
lock
push
into
lahf
sbb
rol
add
dec
mov
dec
push
xchg
pop
jo
adc
aas
pop
inc
mov
jecxz
mov
loope
popw
or
push
ffreep
dec
and
fistp
fld
jo
xor
test
adc
pop
inc
ins
sub
xchg
fsubr
adc
xchg
push
in
jo
xor
in
push
fbld
xchg
lea
pop
mov
sbb
adc
mov
sub
or
mov
sbb
inc
push
lds
enter
jg
rcr
aam
add
mov
femms
btc
stos
out
push
and
cmp
mov
dec
imul
jns
das
inc
and
mov
adc
mov
xchg
jbe
mov
adc
fs
mov
adc
into
mov
push
or
adc
cwde
pushf
sub
fwait
rcl
nop
mov
sub
or
outs
pop
lds
(bad)
cmp
xor
dec
test
mov
inc
stos
inc
lds
push
mov
test
popa
bound
ret
jge
inc
mov
popa
inc
loopne
cmp
mov
add
fldcw
pop
enter
iret
or
aam
int3
fwait
push
dec
push
outs
ror
es
and
hlt
data16
sahf
nop
and
lea
sar
enter
rol
shl
out
pop
add
mov
sub
out
arpl
pop
adc
mov
clc
xchg
add
daa
push
jl
push
cmp
sub
xchg
sub
int
sub
mov
adc
ja
lods
jbe
scas
cmps
push
xor
push
push
loope
jns
pushf
mov
pop
out
popf
push
in
scas
neg
inc
push
push
add
xor
cli
cs
add
cmp
inc
inc
inc
jb
jae
push
cmp
or
push
push
test
popf
mov
fisttp
popa
ins
ins
inc
gs
jne
je
arpl
or
inc
inc
mov
data16
fs
not
or
xchg
jecxz
or
push
jo
ja
mov
mov
ja
or
inc
adc
adc
and
popa
mov
add
aaa
cmp
or
inc
dec
jbe
pushf
ja
fwait
imul
hlt
inc
imul
pop
or
and
or
(bad)
xlat
aaa
sbb
daa
sbb
sbb
dec
outs
cmps
test
cmp
mov
mov
mov
scas
inc
js
dec
mov
push
inc
add
jmp
sahf
mov
ror
and
or
or
mov
mov
test
sub
and
and
lods
pop
out
cwde
cmp
fmul
push
adc
adc
push
ins
or
lock
dec
outs
outs
imul
push
inc
cli
mov
mov
jo
js
adc
and
mov
test
ins
add
stos
pop
in
fst
xor
and
add
jne
fdiv
pusha
cmp
dec
bswap
jns
jo
fsubr
add
pushf
retf
mov
mov
outs
jbe
lods
cmp
inc
loopne
xchg
or
inc
imul
xchg
xlat
popa
add
ja
aam
lea
stos
push
and
adc
dec
inc
jae
mov
mov
clc
xor
pop
jno
push
mov
jnp
pop
or
ins
je
lods
inc
mov
cmps
dec
sti
push
or
lock
pusha
mov
push
pop
out
iret
jne
push
adc
adc
lods
push
addr16
retf
jmp
je
add
pop
cdq
push
sub
mov
mov
push
push
jmp
loopne
jecxz
add
sbb
hlt
mov
sub
xor
in
clc
and
add
mov
add
pushf
adc
jnp
je
test
das
mov
imul
push
xchg
jmp
xor
xchg
dec
pop
jns
imul
push
jmp
aaa
aam
and
add
(bad)
hlt
enter
imul
inc
fnsave
in
sub
shl
fnsave
ret
and
inc
add
nop
sub
fild
jle
and
jns
inc
or
and
xor
outs
fiadd
add
cld
add
out
dec
push
push
jns
cld
pushf
or
adc
add
pop
dec
orps
rol
lea
xchg
xchg
pop
cmp
inc
outs
jne
test
jb
xchg
inc
sub
adc
test
rcr
sub
popa
adc
cdq
sbb
sub
cs
outs
ins
imul
in
arpl
mov
neg
jne
mov
test
pop
mov
outs
mov
pop
mov
stos
push
xchg
jne
sbb
aam
jg
push
aas
jmp
lea
push
xchg
es
dec
dec
add
push
cmps
inc
xchg
adc
xor
pop
pop
movs
sub
jo
dec
test
int
pop
xor
pop
push
outs
sysret
jae
mov
mov
ret
jo
push
add
arpl
jo
adc
pop
gs
aaa
add
mov
sub
jbe
(bad)
stos
cs
pop
add
push
aaa
leave
adc
in
xor
xor
(bad)
dec
xor
js
jno
fcmovne
and
out
push
jae
fist
sbb
sar
push
repz
outs
or
inc
adc
fldenv
aad
inc
or
dec
pop
sbb
push
add
ror
push
adc
scas
add
pop
lds
fnstsw
loope
rcl
(bad)
or
inc
add
ins
into
xor
xor
ins
out
sahf
pop
xchg
inc
ret
inc
push
scas
cwde
and
pop
inc
ins
(bad)
dec
(bad)
cld
or
dec
daa
cmp
fst
inc
jae
push
sub
jne
arpl
lods
aad
add
push
xor
sub
push
pop
sub
push
adc
xchg
call
clc
sbb
fiadd
push
add
fmul
mov
add
fsubr
(bad)
int3
dec
push
inc
dec
les
sbb
fdiv
jl
push
test
test
xor
push
or
or
or
inc
adc
sub
mov
fimul
dec
sbb
add
mov
pop
mov
xchg
add
add
jno
mov
sbb
fstp
js
js
xor
lea
jecxz
push
xor
inc
icebp
jp
movs
outs
in
xlat
int
mov
out
push
and
(bad)
inc
fdiv
push
inc
fild
mov
fs
lods
push
pusha
sbb
add
pop
sub
push
mov
and
adc
xor
mov
jae
mov
jb
sbb
sub
test
push
jne
dec
neg
sub
loopne
fsub
adc
pcmpgtb
xor
push
enter
inc
cs
jb
jmp
push
arpl
scas
jmp
cmp
jns
cmp
add
pushf
pushf
pushf
mov
stos
fisttp
inc
sahf
sub
pusha
stos
clc
daa
daa
and
cmp
jecxz
xchg
xchg
daa
pop
cmp
push
leave
enter
mov
leave
leave
leave
ins
xchg
enter
outs
dec
cmp
pop
test
fcompp
push
push
or
push
push
and
inc
in
in
pop
dec
jnp
pop
xchg
call
mov
dec
or
or
add
mov
cmp
ret
ret
or
mov
daa
aaa
adc
test
add
aaa
sbb
xchg
cmovns
dec
jae
mov
(bad)
addr16
push
adc
jmp
mov
lahf
cmps
pop
dec
jg
add
add
fs
push
inc
add
scas
xchg
or
ins
jne
cmp
inc
aas
dec
xor
push
popa
outs
sbb
inc
retf
enter
push
pop
dec
mov
xchg
cmp
fldcw
cmp
inc
fisub
outs
cdq
jbe
push
mov
add
xchg
adc
jl
push
dec
data16
pop
jo
fsub
inc
jae
add
push
pusha
enter
xchg
push
xor
out
xor
add
or
xlat
pusha
or
dec
add
js
adc
and
gs
add
ret
adc
or
lea
add
pop
or
mov
pop
dec
jne
test
imul
adc
pop
iret
dec
add
push
mov
mov
jno
loopne
rcl
jne
inc
imul
inc
movs
sbb
lea
shr
mov
inc
sub
sub
jne
push
mov
add
xchg
mov
xor
fld
ins
fdiv
popa
xchg
popf
dec
add
or
adc
xchg
xor
int3
mov
(bad)
cmp
popa
mov
lock
jl
and
dec
gs
and
mov
fisttp
pop
(bad)
push
push
push
ficom
add
sahf
(bad)
push
dec
add
call
aaa
add
inc
into
shl
sub
pop
loope
and
and
mov
jne
es
push
imul
xchg
inc
cmp
sbb
cwde
push
or
daa
sahf
jb
int3
adc
and
dec
sbb
xchg
jl
inc
adc
test
aaa
(bad)
cli
(bad)
(bad)
or
pop
dec
add
and
xor
adc
mov
dec
mov
popa
pop
add
xchg
or
xchg
inc
pusha
pop
sub
dec
(bad)
jmp
adc
or
ins
test
xor
movs
rol
dec
mov
shl
add
lahf
shl
fsubr
pop
pop
(bad)
fadd
add
imul
push
and
pop
jecxz
dec
or
popw
rcr
mov
pop
(bad)
rol
sbb
mov
xor
outs
sbb
add
and
aas
pop
mov
retf
and
mov
imul
jnp
jmp
push
sbb
adc
loopne
retf
(bad)
js
push
jae
ret
xlat
add
add
cmp
push
push
push
jb
mov
pop
in
sub
inc
inc
cdq
and
addr16
cli
jne
adc
add
dec
xchg
adc
sbb
sbb
pop
sub
arpl
in
outs
add
imul
xor
mul
lea
add
xchg
xchg
dec
xchg
js
pop
adc
push
inc
xor
rcl
outs
pop
sbb
es
out
and
push
lahf
xchg
xchg
outs
mov
movs
fisubr
mov
adc
loopne
push
push
test
mov
sbb
add
pop
xor
out
push
stos
dec
stos
test
inc
neg
pop
(bad)
push
loopne
lods
add
pop
jno
fld
in
add
jge
push
inc
xchg
js
scas
movs
sahf
je
ror
ins
xchg
add
loop
cmps
ror
xchg
xor
cwde
or
sub
sbb
loope
sub
cmp
pop
mov
pop
push
xor
push
xor
pusha
or
shl
mov
push
mov
or
mov
add
cwde
inc
push
rcr
ss
push
inc
inc
xor
pusha
and
and
add
outs
and
add
adc
(bad)
add
inc
push
cmp
pop
daa
ja
rol
mov
inc
xchg
sub
ret
add
mov
sbb
xchg
aas
ds
add
aas
ss
inc
jno
push
mov
inc
adc
xchg
inc
xor
mov
fadd
cmp
add
and
test
add
add
test
in
repz
or
lods
push
arpl
and
adc
push
call
push
push
mov
sbb
sub
or
sbb
jmp
inc
add
xchg
lods
dec
in
inc
jl
add
adc
push
daa
mov
loopne
loope
fwait
outs
mov
push
pusha
jae
jo
dec
pop
int3
pop
adc
sbb
ja
popa
mov
xchg
ror
sub
add
in
pop
enter
lods
or
inc
pop
xchg
add
shl
and
popa
pop
and
pop
adc
ja
pop
add
fwait
sbb
das
mov
loope
movs
in
ja
push
ret
sbb
xchg
mov
sbb
adc
rcr
lea
call
cmp
fmul
dec
xlat
mov
pop
xor
pop
push
rcl
inc
sub
sbb
add
pop
das
sub
inc
dec
jg
xor
(bad)
sahf
adc
sub
es
das
push
sbb
xchg
ror
adc
fistp
inc
and
adc
mov
push
add
(bad)
cmp
or
adc
lea
sub
out
or
inc
cli
push
inc
les
or
or
sbb
cmp
and
mov
rol
mov
sub
and
or
push
rcr
cli
push
add
rol
mov
sar
cld
(bad)
adc
push
jnp
inc
fld
mov
cwde
dec
push
dec
es
cmp
mov
push
outs
jle
dec
and
xchg
inc
call
cmp
cdq
xor
imul
getsec
mov
aam
xor
add
neg
pop
xor
pop
mov
push
mov
pop
outs
pushf
jo
or
mov
jmp
fdiv
mov
and
les
arpl
inc
mov
fbld
add
dec
xor
shr
enter
or
add
pop
push
test
xor
aas
ror
xor
xchg
sub
pop
adc
push
fild
pop
xchg
cmp
inc
mov
xor
inc
jg
int
add
sub
lds
push
jnp
sbb
test
lods
add
iret
or
fwait
popf
pop
push
pop
js
xchg
push
iret
jmp
loope
sub
scas
pop
push
sbb
rol
and
arpl
jne
or
mov
and
retf
xor
push
in
pop
jg
inc
test
stos
mov
mov
retf
call
cmps
mov
mov
xchg
sub
inc
nop
(bad)
std
clc
cs
scas
sub
test
push
push
es
das
adc
das
fsubr
cs
pop
fst
adc
pushf
mov
add
mov
mov
adc
add
sbb
inc
dec
das
xor
ret
cmp
and
or
jbe
loopne
push
dec
jns
sbb
jb
movs
mov
cmp
cmp
and
adc
mov
neg
mov
pop
push
ja
push
push
fs
mov
pop
out
stos
push
sbb
ja
scas
push
or
sbb
jo
jno
jo
aaa
adc
jmp
push
push
addr16
sub
sbb
imul
mov
je
push
test
mov
je
sbb
ret
and
sbb
lock
mov
push
mov
xor
xchg
sub
mov
or
out
xor
mov
imul
mov
in
pop
push
aam
aad
xlat
fld
push
mov
push
mov
fs
add
jmp
pop
test
out
mov
dec
push
push
loopne
push
ins
push
mov
mov
(bad)
rcl
xchg
fidivr
mov
inc
rol
ret
repnz
or
mov
loop
or
jge
adc
or
pop
ja
neg
ficomp
push
cmp
xor
cmc
das
xchg
pop
push
shl
xor
out
mov
call
mov
mov
push
out
push
push
fwait
sub
add
mov
push
imul
(bad)
xor
mov
xor
mov
mov
and
mov
mov
mov
push
inc
inc
jb
ja
sub
sub
icebp
push
lods
cmp
xor
dec
outs
dec
data16
imul
loopne
arpl
bound
inc
xor
int3
rcl
mov
xor
inc
cmps
rol
shl
adc
push
(bad)
in
mov
pop
divps
icebp
xor
pop
push
das
xchg
(bad)
sbb
retf
xor
cmp
mov
cmp
mov
xor
repz
lds
add
mov
jbe
push
cmp
inc
adc
outs
pop
push
inc
leave
data16
jo
out
aad
cmps
dec
js
loope
dec
aaa
push
mov
xchg
sar
add
xchg
outs
or
adc
jl
out
inc
adc
jae
ss
fcomp
mov
fs
xchg
mov
loope
or
add
mov
add
jl
push
nop
rcl
add
mov
add
sbb
or
mov
cdq
add
outs
movs
repz
and
shl
add
inc
pop
aad
mov
dec
jmp
adc
(bad)
arpl
push
inc
sbb
jns
mov
inc
rcl
inc
and
pop
pop
sahf
add
dec
mov
mov
pop
xchg
out
test
call
inc
add
bound
adc
dec
xor
ret
or
mov
out
mov
or
rol
pusha
cmp
movs
or
sbb
lds
int3
loop
pop
je
out
push
dec
std
mov
jnp
jecxz
xchg
add
and
pop
pop
mov
and
push
retf
jo
cmp
lods
adc
bound
inc
push
jp
adc
dec
test
or
dec
lods
dec
sbb
aas
cmps
loopne
push
enter
sbb
jo
pop
js
mov
(bad)
fadd
jae
inc
inc
fwait
or
ret
cmps
inc
or
dec
or
loope
test
push
xor
ins
xor
clc
adc
xchg
fsubr
mov
adc
popa
pop
fistp
lds
scas
hlt
std
push
in
mov
fs
pop
pop
sub
(bad)
in
jb
outs
add
test
inc
popa
dec
arpl
movs
movs
pop
(bad)
inc
arpl
movs
fdivr
fcomp
psubw
mov
xchg
pop
or
sbb
pop
inc
test
ret
xchg
dec
xchg
mov
sub
sbb
dec
nop
jae
sbb
fwait
add
ret
or
mov
adc
sub
add
pop
add
outs
mov
mov
cwde
das
mov
in
sbb
aas
adc
mov
inc
fadd
cmps
hlt
sub
daa
push
push
arpl
push
adc
mov
pop
inc
adc
mov
test
sub
mov
xor
jmp
and
inc
sub
jg
lods
pop
add
sub
out
sub
cmps
xchg
ds
cmp
push
mov
es
push
mov
test
add
dec
push
push
mul
pop
lock
add
push
pop
add
adc
xor
scas
imul
cwde
stos
(bad)
or
lahf
or
(bad)
sbb
fs
aaa
jns
cmp
rol
test
loop
bound
add
push
or
fs
ror
out
dec
jo
js
in
sti
add
rol
sbb
ror
push
xor
mov
and
pusha
xor
imul
(bad)
popw
jbe
in
add
in
and
(bad)
cli
push
cmps
loope
ja
mov
sbb
and
enter
pop
xor
cld
add
inc
pusha
mov
sbb
pop
inc
or
sbb
add
test
stos
xchg
xchg
lds
(bad)
fld
js
imul
sbb
add
ss
or
call
dec
xor
jns
xchg
pop
xchg
js
movs
push
call
stos
test
xor
lea
outs
sbb
rcl
mov
add
arpl
dec
xchg
rcr
push
nop
or
dec
jg
inc
add
das
aas
sub
or
sub
ret
loop
mov
das
iret
push
adc
add
mov
test
gs
add
addr16
push
adc
inc
push
push
test
inc
pop
adc
xor
sub
fnstenv
cmp
or
cwde
pop
aad
sbb
jns
push
push
cmp
pop
arpl
adc
inc
cmp
mov
pushf
pusha
fidiv
cwde
sti
sar
sahf
adc
push
out
mov
or
test
das
(bad)
push
mov
scas
push
or
jmp
imul
loop
fadd
aaa
psubb
dec
push
mov
ja
and
inc
out
xor
test
outs
lods
shr
mov
aad
mov
stos
rol
and
neg
test
xchg
inc
mov
pop
jo
or
cs
and
call
push
push
adc
pop
and
mov
sub
unpckhps
lock
pusha
jno
cmp
pop
dec
pop
pop
xor
xor
loope
rol
sub
cmp
pop
mov
sub
out
jo
fstp
shl
cwde
push
cmp
xchg
sbb
xchg
bound
xchg
cmp
fadd
vpmacssdql
xor
push
cmps
(bad)
sbb
loope
xor
mov
xor
dec
ja
popa
mov
aam
cmps
rcl
sar
xchg
sub
pop
jae
dec
push
enter
adc
sar
outs
test
and
outs
or
int3
(bad)
jnp
loopne
add
je
es
mov
cwde
sub
mov
add
pop
jbe
add
cmps
rcl
ret
cwde
call
mov
xlat
add
movs
(bad)
fwait
pop
pop
inc
add
sub
enter
mov
je
sbb
jns
xchg
arpl
dec
push
movs
mov
mov
cmp
adc
add
pop
add
shl
stc
sub
adc
das
pop
jbe
in
test
mov
popa
fsubr
pushf
push
out
push
imul
mov
push
xor
cld
aam
stos
push
push
mov
or
add
iret
std
iret
dec
xchg
sbb
mul
movs
pusha
push
shl
stos
addr16
push
push
xchg
mov
push
add
pop
neg
mov
sldt
push
adc
cwde
pop
mov
or
pop
push
add
cmc
mov
retf
push
push
inc
dec
shl
dec
mov
push
sbb
sub
call
pop
push
pop
pop
xlat
push
ins
je
jns
or
or
xchg
arpl
(bad)
in
cli
push
nop
inc
ja
ret
into
mov
push
mov
add
jnp
mov
push
loope
add
or
(bad)
not
ins
jg
mov
pop
add
fdivr
push
push
movs
mov
ins
push
xlat
pushf
clc
push
xchg
jo
or
stc
inc
xlat
mov
adc
xor
imul
sub
les
cmp
and
cmp
leave
lea
push
inc
xlat
mov
daa
and
sub
std
ins
mov
jge
arpl
in
leave
leave
xchg
fsin
sub
in
outs
mov
pop
ja
lahf
pop
push
pop
mov
inc
push
ret
jbe
mov
inc
rol
cmp
mov
sbb
or
mov
rcl
cmp
mov
cmp
test
pop
or
push
or
or
inc
add
shl
sbb
xchg
xor
mov
xchg
inc
mov
lds
mov
mov
fs
push
repz
out
and
adc
cwde
test
shl
xchg
mov
bound
and
add
push
push
inc
ret
add
push
sbb
dec
add
mov
nop
test
and
xchg
lea
xchg
mov
cmp
or
xchg
jae
add
sbb
and
fsubr
lods
imul
xor
push
js
inc
jae
adc
cmp
push
mov
adc
inc
add
pusha
pop
pop
adc
adc
dec
mov
imul
shl
ror
add
inc
adc
ins
icebp
es
sub
push
pop
jl
push
xor
cmp
push
or
adc
inc
push
daa
rol
and
add
in
xor
push
mov
push
push
mov
pop
add
test
test
clc
ret
fistp
push
dec
adc
adc
inc
dec
ja
jae
imul
mov
adc
lahf
fmul
into
add
xlat
mov
mov
arpl
inc
inc
push
xor
add
sbb
out
in
sub
pop
mov
push
mov
pusha
les
or
xor
outs
pop
aam
inc
lahf
pop
jg
xor
repnz
inc
arpl
or
pop
pop
test
push
xor
push
in
in
mov
mov
outs
ja
dec
push
dec
inc
fstp
jo
(bad)
pop
dec
or
sub
test
or
adc
in
mov
add
inc
or
inc
push
lods
mov
mov
test
pop
data16
and
scas
dec
dec
aas
xchg
and
xchg
bound
bndldx
or
data16
push
and
add
push
add
sub
int3
or
nop
jne
push
and
sub
stos
pop
cmp
xchg
dec
mov
sbb
nop
push
add
pop
cwde
das
mov
pop
add
in
movups
ja
imul
daa
imul
push
push
cmp
push
cmp
out
loop
call
mov
sub
mov
xor
push
inc
dec
xchg
dec
xchg
pop
inc
sub
pop
push
nop
or
lods
ja
mov
or
(bad)
test
fnsave
add
add
movs
add
dec
mov
push
add
daa
pop
dec
dec
push
je
pop
add
adc
repz
clc
stos
adc
ins
(bad)
adc
or
es
inc
jno
and
push
and
stc
add
enter
pusha
or
add
lds
popaw
jne
je
push
push
je
das
movs
std
mov
jno
xor
leave
push
push
add
jb
push
shl
add
sbb
pop
mov
ins
call
sahf
add
hlt
sar
out
and
xor
mov
scas
sbb
lds
mov
adc
or
or
jnp
sub
push
or
push
add
and
lahf
sub
aas
mov
sbb
mov
cmp
adc
add
jbe
fcomp
or
mov
out
xchg
clc
and
jl
pop
sub
lock
xchg
or
pop
xchg
dec
pop
shl
popf
mov
or
xor
xchg
cmp
mov
popw
jbe
add
popa
xor
push
outs
adc
pop
mov
push
popa
test
dec
push
aas
add
icebp
push
mov
mov
dec
mov
xor
jmp
xlat
pop
xor
or
loopne
cld
push
and
cmps
adc
sbb
dec
pop
inc
add
xchg
mov
sub
dec
or
ja
es
jnp
adc
mov
adc
cmp
add
movs
mov
and
call
add
pop
push
adc
ret
jl
or
add
or
sub
out
or
pop
sbb
lahf
push
add
jns
xchg
arpl
arpl
xchg
stos
lock
ins
push
cmp
(bad)
out
sub
cmp
push
xor
pop
das
ja
or
js
pop
mov
jne
add
push
idiv
idiv
rcr
pop
pop
mov
sti
push
out
sbb
xchg
dec
mov
or
push
adc
je
push
repz
icebp
add
mov
popa
push
or
adc
inc
sbb
lock
pop
mov
add
test
xchg
shr
adc
dec
mov
add
pop
add
fadd
movs
das
mov
cwde
mov
add
inc
xor
mov
cmp
pop
arpl
add
cmp
push
pop
movs
int
mov
pusha
stos
imul
add
fucomi
mov
pop
add
xchg
add
jg
sbb
push
not
push
adc
inc
stos
jmp
push
(bad)
jl
adc
sbb
stc
and
mov
dec
xlat
xor
popf
cmps
mov
jae
out
cmps
rol
xor
cmp
popf
pusha
xor
sub
aaa
pop
gs
ret
pop
cmp
sbb
add
push
fstp
es
das
mov
outs
inc
or
and
(bad)
mov
push
add
ja
dec
jo
(bad)
outs
dec
xor
shr
cmp
add
adc
iret
mov
sbb
jnp
push
or
rcr
jmp
lods
and
push
cmp
dec
aaa
mov
call
hlt
and
adc
or
adc
pushf
daa
fsubr
popf
cwde
es
das
mov
jbe
test
imul
fdiv
ja
scas
(bad)
fsubr
or
pushw
test
test
push
xlat
jnp
call
mov
ror
je
jnp
sub
rol
shl
dec
inc
stos
push
rcr
mov
scas
addr16
adc
ror
jnp
pop
add
fstp
jmp
call
addr16
push
stos
lods
(bad)
and
addr16
mov
ja
push
addr16
xlat
push
sub
xchg
clc
gs
or
aam
push
enter
sbb
adc
jns
xchg
arpl
add
and
push
pop
sbb
add
into
ds
add
(bad)
xor
in
sbb
mov
out
clts
push
out
mov
push
and
push
fwait
sub
aad
lods
xchg
inc
or
xchg
adc
data16
xor
shl
rcl
sbb
imul
or
inc
jb
fsubr
or
sub
sub
pop
xor
int
sub
xor
bound
sbb
mov
cmp
push
(bad)
xor
stos
scas
aad
iret
sub
adc
mov
xchg
test
pop
xchg
bswap
pushf
xchg
xchg
daa
pop
sahf
push
sahf
int3
ss
scas
add
getsec
sahf
pushf
pushf
pushf
jp
leave
adc
pop
xchg
int
sbb
pop
sub
push
pusha
jl
push
ret
mov
cmp
shr
je
xor
cwde
add
sti
or
sub
xchg
ss
or
jno
dec
enter
push
inc
xchg
jecxz
mov
js
sar
add
and
or
inc
fwait
sahf
adc
add
adc
jae
ror
jmp
imul
add
adc
dec
add
fs
xor
push
or
mov
add
jl
imul
cli
jl
push
mov
fld
out
mov
mov
and
outs
gs
cwde
push
sbb
fadd
pop
cmp
mov
stos
adc
push
bound
arpl
push
inc
add
or
mov
xchg
sub
int3
ds
mov
xchg
rcl
push
or
cmp
pop
adc
call
outs
jae
pop
mov
inc
nop
idiv
jl
or
mov
out
out
sbb
pop
ins
in
imul
or
test
bound
sbb
xor
or
pop
(bad)
push
std
mov
inc
jl
xchg
addr16
add
ror
or
dec
in
mov
add
imul
sbb
xor
loope
add
or
pusha
push
in
iret
push
inc
sub
aas
in
add
push
add
jae
push
cmp
push
add
call
inc
or
test
pop
dec
or
dec
add
adc
aam
call
ja
xchg
push
add
cmp
sub
sbb
addr16
test
push
add
adc
adc
adc
dec
ja
jae
imul
ret
stos
and
outs
mov
imul
dec
add
pop
rol
out
and
xor
sub
pop
cwde
mov
sbb
push
nop
push
xor
adc
jbe
in
outs
lahf
in
stos
loope
jg
mov
arpl
or
aaa
dec
imul
fs
inc
jl
outs
outs
ds
add
sahf
pop
adc
cmp
in
sbb
std
gs
pop
sub
inc
adc
mov
jnp
call
push
nop
stos
(bad)
arpl
sbb
popf
cwde
jle
adc
inc
cmps
mov
fwait
pop
mov
ret
mov
cmps
rol
jns
add
mov
dec
add
rol
lea
scas
xchg
inc
sub
pop
std
jns
or
mov
nop
adc
add
mov
inc
jno
test
test
mov
inc
jno
daa
movs
sbb
out
ror
mov
jmp
(bad)
xchg
xor
dec
mov
imul
loope
mov
add
dec
pop
int
push
mov
cmp
sbb
jns
cmps
cs
inc
sub
dec
test
xchg
mov
adc
or
mov
les
push
inc
aaa
sub
push
cmp
sar
add
dec
popa
jae
pop
fs
(bad)
loopne
add
scas
fisttp
aaa
add
sub
add
out
inc
scas
adc
rol
shr
jo
xchg
jmp
das
out
inc
sbb
cwde
cwde
sar
cmps
nop
dec
aam
pop
cmp
push
jge
add
adc
neg
xor
out
and
push
jg
pushf
pop
push
cld
or
inc
add
sub
ret
mov
mov
scas
pop
lock
add
lods
push
clc
pop
loopne
jnp
sub
add
push
push
adc
test
(bad)
mov
dec
jge
push
add
mov
scas
pop
fsub
out
mov
inc
(bad)
push
stc
aam
push
lds
mov
mov
stos
xor
add
pop
test
cld
je
inc
xchg
pusha
jns
pop
imul
add
ror
pushf
adc
sub
jge
shr
hlt
pop
add
scas
push
cld
es
fwait
das
inc
push
xchg
loopne
jno
sub
jl
cld
pop
jne
adc
pop
nop
fadd
xlat
loop
aaa
push
idiv
push
shl
push
xor
inc
cmp
xor
mov
sub
xor
adc
sub
add
dec
lahf
add
cmp
ja
add
inc
stos
add
mov
or
mov
adc
sbb
xchg
and
mov
loopne
ret
pop
jl
mov
cs
sub
mov
or
mov
loopne
pop
xor
rcr
loop
(bad)
pop
pop
lods
push
dec
xor
repz
mov
add
push
mov
sbb
jbe
mov
les
loop
(bad)
jne
mov
sub
add
push
test
mov
movs
mov
icebp
mov
stos
arpl
cmp
stos
xchg
pop
lods
xchg
je
into
cld
dec
iret
not
into
inc
iret
pop
jae
dec
aam
iret
dec
inc
adc
iret
aas
outs
test
test
ins
mov
add
iret
adc
mov
push
mov
test
cmp
outs
das
fwait
push
mov
movs
add
scas
pusha
shl
pop
jbe
add
scas
sbb
ret
jmp
and
xlat
add
sub
mov
push
ss
fisub
loopne
loope
jae
gs
add
pop
ja
test
mov
fcmovu
cld
mov
cmp
xor
jno
push
mov
nop
mov
pop
es
js
(bad)
mov
sbb
or
jae
rol
mov
or
pop
push
popa
add
sbb
mov
test
fimul
repnz
jns
test
push
push
add
push
dec
dec
repz
shl
ja
test
xchg
inc
(bad)
xlat
ja
loopne
lock
sbb
and
nop
pop
fstp
mov
xchg
mov
das
fnstsw
push
test
pushf
ja
imul
xor
in
inc
push
add
or
mov
out
push
mov
je
aam
inc
(bad)
xor
nop
fdiv
mov
je
jns
mov
pop
imul
add
sbb
dec
je
push
pop
add
sbb
repnz
pop
mov
(bad)
call
ins
(bad)
out
and
mov
push
setno
sbb
push
sub
xor
dec
adc
test
push
adc
jbe
pop
or
call
push
outs
xchg
(bad)
xor
in
sbb
mov
leave
push
mov
xchg
xchg
xchg
cmp
int
leave
leave
enter
xchg
ror
add
xor
ret
cmps
add
cpuid
cmp
push
cmp
pop
lds
add
shl
adc
pop
or
pusha
pop
jecxz
rol
adc
pop
test
shr
push
mov
and
mov
jae
sbb
js
daa
daa
sub
push
pusha
dec
or
cmp
inc
sbb
mov
or
pop
and
adc
or
cmp
loope
sbb
pop
sub
mov
push
sbb
stc
inc
add
pop
sbb
cmps
or
xor
dec
pop
jo
cmps
pop
mov
xchg
cwde
mov
shl
cmp
pop
and
mov
push
sbb
add
pop
jae
cmp
add
lea
push
or
sub
jne
vmovupd
int3
cld
and
std
sub
call
push
and
xor
pop
jge
add
rol
pop
xor
sbb
and
adc
and
shl
enter
or
cmp
add
nop
(bad)
add
dec
aas
add
add
cmp
xchg
fstp
int
add
ret
mov
test
push
daa
push
adc
adc
je
and
in
aam
cmp
xchg
jb
adc
dec
add
xor
inc
or
dec
call
stc
sbb
das
je
inc
repnz
inc
leave
pusha
mov
cs
popa
lds
cmps
jns
and
call
and
cmp
push
imul
pop
mov
addr16
into
or
adc
dec
popa
adc
xchg
sbb
mov
fistp
inc
fdivr
sar
and
adc
mul
(bad)
loope
dec
xor
push
dec
outs
dec
imul
and
jae
jnp
lock
cli
mov
add
iret
in
adc
xor
outs
mov
pop
fsubr
out
daa
jno
mov
mov
cmps
pop
jo
sub
and
(bad)
add
cmp
pusha
xchg
pop
in
or
scas
pop
std
jge
add
add
jo
pop
lds
add
mov
inc
push
pop
push
inc
jno
jo
mov
das
xor
nop
push
leave
loopne
mov
mov
xor
test
xchg
push
jmp
push
daa
sti
inc
jno
je
push
jno
adc
dec
pop
cs
int
pop
xor
cmp
push
add
sub
sbb
add
add
pop
rol
loopne
sbb
push
push
inc
ja
test
push
or
ins
aaa
inc
ret
jae
pop
add
add
xlat
mov
dec
repz
sub
lock
sti
bndstx
pop
adc
popa
push
or
xor
sbb
movs
push
ja
sbb
adc
sbb
cmp
push
arpl
mov
sbb
lods
(bad)
rcl
or
pushf
test
inc
retf
test
jne
and
push
ja
push
pop
mov
imul
mov
clc
inc
or
out
or
adc
cmp
(bad)
jne
shl
adc
adc
mov
mov
test
sub
fimul
add
retf
arpl
je
lds
mov
sbb
addr16
jb
movs
pop
inc
push
imul
adc
sbb
fsub
add
inc
int3
jo
jne
mov
push
push
test
mov
in
in
shl
adc
add
push
ja
fdivr
sbb
or
rcl
je
mov
jl
packsswb
push
sub
push
sbb
ret
or
sub
push
pop
sbb
sub
shrd
mov
sub
sub
xchg
jns
(bad)
push
(bad)
fsubr
add
add
jl
add
sub
adc
mov
adc
mov
add
pop
fld
rcr
mov
out
iret
out
mov
call
cmps
mov
and
sbb
nop
pop
add
inc
push
test
outs
pop
mov
std
outs
dec
loop
push
fsubr
sbb
push
jg
shr
ja
pop
xor
dec
push
scas
xlat
jmp
push
jne
xchg
out
adc
push
mov
arpl
adc
xchg
js
or
daa
mov
sbb
outs
int
mov
test
push
dec
adc
dec
xchg
sub
pop
push
jge
adc
sub
(bad)
adc
(bad)
sub
pop
mov
rcl
adc
add
add
push
push
js
aas
out
test
or
lods
pop
rol
push
or
cs
push
pop
push
add
push
sub
stos
pusha
mov
test
cmp
int3
in
sub
shl
ins
jns
push
pop
jae
mov
add
dec
push
vxorps
push
sbb
sbb
and
fcomp
aad
es
aam
and
push
sar
(bad)
jmp
adc
and
js
fadd
sbb
je
push
xlat
jecxz
pop
scas
push
pop
fmul
test
mov
jecxz
pop
adc
pop
call
push
xchg
and
ud2
cmovge
mov
pop
xchg
and
ror
cmp
xchg
adc
loop
adc
sbb
push
movs
scas
mov
das
arpl
xchg
jmp
jl
mov
push
add
mov
(bad)
out
push
xchg
dec
add
fwait
lahf
cmp
push
sbb
sbb
xchg
fadd
xchg
xchg
pop
test
mov
or
dec
and
xchg
lock
jecxz
sbb
cvttps2pi
inc
dec
mov
push
or
das
cmps
push
xchg
jo
push
adc
js
loope
mov
loop
cmp
cld
aas
inc
push
pop
push
cmp
mov
in
and
sar
inc
add
xor
push
inc
inc
punpckhwd
daa
and
nop/reserved
or
sbb
adc
sbb
unpcklps
leave
ins
mov
and
mulps
loop
leave
movs
fild
add
in
call
lds
fdiv
jb
sub
rcr
pop
fstp
lea
mov
or
push
(bad)
stc
movhps
aam
aas
adc
add
in
call
cs
adc
or
jbe
jno
jecxz
adc
cmp
cmp
cli
cmp
add
or
dec
mov
add
adc
mov
mov
inc
mov
push
bound
or
ret
or
sbb
inc
adc
stos
inc
adc
pusha
mov
adc
adc
mov
mov
mov
pop
sub
and
push
inc
add
adc
xor
dec
add
or
mov
xchg
add
movs
test
inc
ret
lea
and
adc
aaa
fadd
sbb
mov
js
pusha
mov
dec
imul
movs
pop
sub
sbb
int3
clc
xor
dec
adc
sub
inc
inc
fs
adc
jl
pop
sub
adc
jl
xor
into
pop
xor
xor
js
xchg
xor
daa
adc
in
pop
(bad)
out
dec
add
enter
adc
add
push
adc
jge
dec
or
pop
xor
inc
ret
adc
dec
dec
cmp
ins
push
and
push
adc
xchg
outs
aam
pop
mov
ss
sbb
add
popa
add
arpl
sub
jo
adc
add
inc
jo
in
jecxz
mov
dec
loopne
add
pop
dec
push
jno
fmul
pop
aaa
lea
mov
or
xor
add
inc
dec
es
rol
pop
xchg
push
jb
aam
sub
es
aaa
inc
test
mov
fsubr
pusha
add
push
jnp
inc
xor
adc
cmovo
out
adc
adc
cs
out
push
gs
nop
sub
xchg
and
push
test
daa
iret
retf
cwde
xor
ret
cmc
push
cmp
adc
push
aas
pop
xor
sbb
nop
retf
ror
dec
inc
sub
pop
scas
lea
sub
add
xor
out
ds
dec
imul
repnz
push
stos
inc
or
icebp
sub
lock
neg
and
sbb
ret
outs
mov
jne
je
mov
jnp
clc
out
inc
loope
pusha
push
or
add
xor
inc
(bad)
inc
or
fisub
jns
lock
push
sahf
scas
in
xor
mov
neg
add
loopne
mul
ins
(bad)
and
dec
(bad)
cld
ret
mov
lahf
dec
in
inc
push
mov
je
ret
cmp
js
jne
arpl
mov
sti
push
out
call
out
and
dec
das
gs
adc
mov
das
scas
mov
add
mov
movs
xor
inc
mov
out
inc
aaa
rol
fmul
push
adc
inc
aaa
outs
or
(bad)
mov
push
adc
shl
add
jg
cmp
ds
cmp
or
push
mov
stos
mov
inc
add
mov
aas
imul
pop
setae
add
ins
(bad)
xchg
sbb
fild
cmp
or
push
mov
es
sub
sub
fcom
xlat
jmp
in
adc
in
dec
out
pop
xchg
mov
(bad)
lock
test
dec
mov
jp
mov
push
and
add
sub
adc
movs
xchg
jo
pop
mov
jae
jbe
xchg
outs
hlt
sub
sub
xchg
fistp
fldcw
add
ins
and
push
dec
loopne
push
neg
or
dec
push
mov
movzx
das
in
jae
leave
enter
in
pop
jge
in
leave
mov
xor
push
mov
out
dec
xchg
cmp
jns
fmul
cmp
cmp
cmp
pushf
pushf
pushf
mov
(bad)
jae
sahf
inc
repnz
bswap
es
call
sub
push
imul
mov
push
xor
cmp
pop
scas
push
movs
div
dec
push
dec
mov
pop
or
and
cmp
dec
das
and
daa
pop
sub
xor
adc
or
mov
dec
jae
not
add
push
popa
(bad)
adc
data16
mov
jg
dec
out
xor
in
sbb
cmp
mov
push
inc
cmp
bound
push
mov
xor
push
ins
jmp
jb
out
cmp
dec
outs
push
adc
push
or
cli
outs
cdq
inc
add
push
xor
jbe
dec
in
inc
and
sbb
sbb
cmc
enter
mov
cmp
and
xchg
add
push
or
dec
jno
add
test
leave
call
sub
fild
clc
mov
popa
arpl
bound
loop
inc
ret
mov
pop
dec
jae
test
sar
and
or
iret
dec
add
push
xchg
loope
mov
test
(bad)
pop
add
test
adc
add
dec
sbb
xor
aad
jns
add
sub
or
push
inc
mov
pop
lock
jge
pop
cmp
fistp
call
inc
fwait
mov
inc
add
mov
lods
shl
dec
mov
lock
push
shl
sar
rcr
(bad)
and
rol
inc
addr16
lock
dec
gs
xor
mov
inc
fidiv
dec
mov
out
add
es
pop
and
mov
inc
pop
add
fs
into
add
push
es
sub
sub
stc
push
aaa
add
mov
cmp
add
popw
mov
aad
dec
xor
imul
add
cdq
adc
or
and
shl
mov
dec
sbb
rol
sub
jl
mov
(bad)
mov
cli
pop
dec
add
or
inc
pushw
loop
dec
or
add
sbb
adc
jb
(bad)
and
mov
pusha
and
adc
dec
jmp
fadd
in
out
mov
push
cs
pop
test
ret
sub
xchg
cmp
retf
rcr
mov
mov
ds
add
and
sbb
test
add
loope
xor
ins
pop
add
inc
hlt
jmp
gs
xor
test
inc
mov
push
and
sahf
lods
adc
sub
add
mov
and
or
aaa
push
add
xor
inc
ret
pop
dec
or
adc
outs
inc
jne
lds
enter
sbb
sub
test
(bad)
mov
mov
add
push
add
pop
and
fstp
xchg
pop
or
push
mov
inc
add
mov
repnz
adc
cmp
and
mov
mov
pop
ja
dec
test
shl
jne
cmp
push
add
ss
das
jmp
and
lahf
dec
push
xchg
sar
inc
push
mov
lock
daa
or
sbb
cmps
or
daa
cmp
mov
imul
pop
arpl
xchg
adc
mov
pop
inc
pusha
xor
xor
enter
sbb
dec
inc
sub
push
loope
inc
jg
add
or
jg
ror
xor
clc
jbe
cmps
add
push
mov
adc
fldenv
add
cvtps2pi
adc
or
ffreep
sub
jge
fmul
or
mov
mov
add
jmp
cs
add
dec
add
imul
xchg
or
in
jp
ds
retf
add
ror
add
and
mov
das
xchg
add
inc
mov
jg
sub
stos
or
scas
xor
jbe
adc
add
(bad)
mov
push
fsub
add
add
push
loopne
sbb
pop
pop
rol
test
push
xor
nop
add
jge
push
or
fsub
test
mov
add
pop
repz
lds
mov
test
fwait
ins
lods
sub
fadd
inc
neg
jo
adc
add
sbb
cmp
add
pop
aaa
cwde
pop
sti
push
fidiv
mov
push
sbb
add
jae
aaa
ins
and
add
add
adc
push
call
pop
sbb
push
xor
inc
fmul
aaa
jae
pop
add
aaa
popf
cmp
cmc
sbb
push
fmul
rcr
ss
push
mov
sbb
or
xchg
xchg
xchg
into
adc
inc
cmp
add
jmp
or
jb
repnz
inc
add
jns
add
jnp
mov
cmp
jmp
pushf
movs
fiadd
dec
dec
pusha
test
outs
dec
cmp
popa
pop
mov
mov
mov
les
push
sub
es
cld
pop
sub
jg
cmp
xor
out
or
add
out
lock
aam
test
loope
daa
inc
aaa
mov
inc
mov
xchg
jne
daa
or
inc
add
inc
add
xchg
jle
inc
mov
sub
sahf
pop
dec
fnstsw
bound
ins
push
ins
and
and
mov
push
or
sub
mov
shl
shl
pop
jae
sbb
pop
loopne
shr
loopne
rcl
shl
xchg
and
das
leave
call
mov
sbb
pop
pop
sbb
mov
and
rol
dec
sub
das
sbb
or
add
pop
mov
add
add
adc
inc
push
ins
inc
add
jo
pop
jae
and
add
dec
add
add
xchg
pop
ins
imul
ss
nop
cwde
or
popf
dec
add
push
(bad)
rol
fwait
loopne
call
or
shr
hlt
mov
xchg
lods
inc
mov
fnstsw
nop
and
(bad)
outs
popf
das
mov
add
(bad)
jmp
xor
add
mov
and
ins
(bad)
imul
pop
inc
es
push
jge
adc
daa
cmp
int3
inc
or
cdq
(bad)
cdq
mov
call
lds
xor
push
mov
jge
rcl
xchg
sbb
inc
cmp
dec
ins
and
sti
(bad)
sbb
test
(bad)
xchg
fst
lods
or
mov
or
outs
(bad)
or
mov
and
sar
add
bound
mov
fcomp
not
xor
xchg
inc
add
sbb
scas
jno
or
jbe
pop
arpl
sbb
mov
enter
hlt
mov
lahf
or
and
fstp
push
inc
lahf
pop
jo
xor
lods
aam
lahf
sbb
or
adc
lahf
mov
push
mov
sub
push
outs
xchg
mov
add
outs
mov
sub
pop
les
ror
pop
mov
adc
xchg
call
popf
jno
(bad)
sub
movs
inc
and
hlt
pop
xor
xor
pusha
adc
pop
mov
je
pop
adc
lds
add
sbb
lahf
in
pop
adc
adc
mov
adc
ja
jne
or
xchg
arpl
(bad)
push
(bad)
inc
mov
or
mov
or
sub
push
cmp
test
dec
pop
pop
xor
add
mov
dec
into
cmc
xor
dec
or
inc
adc
sub
adc
inc
jg
add
pop
dec
pop
sub
dec
or
das
ja
mov
push
mov
outs
or
repz
cli
into
cvtpi2ps
jp
adc
mov
aam
ja
sub
jno
xor
outs
sbb
imul
mov
sub
add
loopne
fwait
or
in
and
jmp
sub
or
xlat
cmps
jmp
push
in
fiadd
fmul
movs
push
das
inc
fistp
push
fs
add
test
jle
mov
xlat
mov
shl
sbb
sar
js
add
js
ja
popf
loopne
add
push
xchg
neg
movs
xchg
shr
push
pop
ins
inc
ret
sub
xlat
adc
mov
xchg
sub
xchg
aaa
in
sub
pop
add
push
out
into
mov
push
inc
adc
fwait
adc
push
mov
or
test
fcomp
xor
adc
dec
push
out
pop
scas
jecxz
dec
push
out
mov
lods
mov
mov
pop
add
dec
adc
push
mov
mov
and
sub
mov
pop
jmp
jne
nop
or
ret
mov
jle
add
xor
ins
test
xchg
daa
daa
in
adc
xchg
ror
xor
in
leave
pushf
call
repnz
mov
xor
jnp
jb
jb
(bad)
jmp
cmp
inc
jl
add
popf
pushf
pushf
mov
dec
test
cmp
sbb
push
mov
mov
jmp
add
jnp
add
imul
dec
ja
xor
mov
call
jno
loope
push
pop
lea
loope
jno
push
jecxz
sub
add
xor
mov
stos
leave
dec
adc
or
inc
xor
push
and
popa
enter
popa
ins
push
scas
fcmovb
lods
dec
sbb
or
rol
dec
ret
sub
int
add
ja
shr
dec
jae
and
push
popa
jo
pop
sbb
xor
sbb
xchg
shl
xor
and
nop
mov
in
mov
bound
jnp
pusha
(bad)
fsubr
inc
mov
sbb
or
dec
and
xchg
pop
jl
ins
loopne
cmp
cwde
push
push
jno
mov
inc
add
dec
fnsave
aam
adc
jae
in
mov
adc
mov
dec
add
nop
fs
ins
test
or
and
push
xchg
fwait
loopne
rcl
les
inc
fisttp
mov
lea
ins
fiadd
inc
nop
mov
dec
fcom
dec
es
cmp
mov
mov
dec
mov
and
and
stos
jne
cmp
add
gs
jae
cmp
or
cmp
dec
cdq
mov
adc
jb
mov
bound
xor
inc
cmp
adc
inc
je
test
sti
(bad)
dec
or
pop
ja
ins
mov
lods
add
or
dec
call
pop
pop
sub
or
mov
into
dec
sub
jecxz
or
and
dec
or
cmps
sub
sbb
fadd
or
dec
sub
push
xchg
inc
add
imul
add
les
cwde
push
imul
mov
pop
mov
inc
mov
shl
rcl
not
loop
inc
ins
xchg
test
pop
mov
mov
inc
mov
clc
(bad)
push
arpl
lods
inc
(bad)
mov
adc
add
iret
in
ss
sbb
enter
xchg
fsubr
rcr
add
add
adc
lock
dec
mov
xlat
pop
xor
sub
int
add
cmp
jbe
or
pop
dec
rsqrtps
add
mov
xor
sub
mov
and
pop
clts
addr16
adc
sub
sbb
jne
ins
sbb
mov
pop
or
cmp
mov
pop
add
jne
je
outs
add
mov
imul
ins
inc
imul
scas
mov
pop
js
add
add
imul
jb
push
xor
pushf
cmp
aaa
repnz
push
ds
ss
into
fucomp
int3
jp
dec
data16
jecxz
xor
xor
xchg
sub
pop
dec
dec
jbe
data16
ja
push
adc
jp
or
add
mov
add
data16
xor
add
or
mov
outs
push
iret
sub
xor
push
xchg
(bad)
out
ror
sbb
aaa
pop
data16
sub
outs
and
fs
imul
data16
sub
stos
es
das
cdq
mov
cmps
sbb
pusha
add
or
ret
pop
stos
xchg
cmp
or
dec
mov
add
xchg
cmp
or
xor
pop
fbld
sub
ret
sub
pop
inc
daa
dec
loope
sub
(bad)
push
dec
ss
push
sbb
ret
add
or
adc
mov
mov
outs
and
rol
movs
sub
jmp
test
rol
add
fild
or
out
ret
inc
outs
call
scas
repz
xchg
cmps
adc
or
mov
cdq
movs
or
pop
sbb
jb
into
ret
das
inc
xchg
mov
inc
or
loope
call
fdiv
rol
sbb
je
cmp
push
sti
pop
mov
and
mov
cli
mov
xor
stos
xor
rcr
inc
sbb
sbb
mov
push
inc
adc
pop
or
fdivr
and
jmp
jno
ret
mov
push
push
jmp
lods
jne
das
mov
call
jmp
test
je
mov
jmp
cmp
sub
lock
into
(bad)
out
dec
inc
or
inc
inc
sub
nop
xor
push
outs
imul
mov
pop
adc
add
ret
dec
(bad)
std
mov
mov
adc
les
push
div
mov
mov
mov
pop
call
mov
neg
outs
ja
sbb
add
pop
pop
pop
inc
adc
pop
xor
push
dec
ret
jmp
jmp
call
sti
pop
ret
nop
out
int3
xor
mov
add
mov
push
mov
and
push
or
hlt
adc
or
hlt
sahf
adc
in
mov
lock
adc
push
call
sti
(bad)
inc
inc
jmp
sub
sbb
inc
or
je
adc
mov
or
mov
push
test
or
loopne
push
cs
outs
daa
mov
sbb
add
imul
inc
push
jb
inc
ins
rcl
add
ins
and
sbb
push
jne
mov
pop
call
add
pop
jo
mov
jl
retf
dec
inc
sbb
push
jo
add
add
cmp
in
mov
adc
add
or
add
push
xor
mov
sub
or
cmp
push
jb
mov
rol
and
mov
xchg
pop
in
in
mov
jno
add
fimul
adc
xor
sub
in
int
aaa
mov
pop
ret
push
mov
fimul
push
xchg
and
lea
mov
xchg
dec
out
jge
movs
add
add
xchg
mov
inc
mov
lds
fdiv
inc
or
or
sbb
outs
xor
or
or
xchg
inc
js
cmp
cmp
hlt
dec
cmp
mov
sbb
xchg
into
es
ins
sbb
loope
lahf
mov
imul
movs
cmps
fld
add
scas
xor
(bad)
loop
mov
cld
add
sub
dec
pop
pushf
and
sbb
add
fdivr
push
mov
and
adc
setne
in
push
fdiv
adc
inc
push
or
ret
ds
outs
add
and
or
inc
cmp
jns
adc
adc
loopne
int3
rcr
in
push
aam
lock
or
xor
add
inc
jae
and
mov
lock
dec
aam
sbb
and
jo
ret
add
icebp
xlat
enter
hlt
push
lock
out
scas
(bad)
and
add
bswap
add
cmp
popf
sub
shr
push
adc
aam
pop
sbb
pslld
scas
cmp
or
add
clc
mov
std
call
add
fwait
push
dec
push
sub
pop
enter
or
mov
or
mov
pop
xor
rol
enter
sub
(bad)
fidivr
inc
outs
pop
or
mov
adc
lods
xor
(bad)
pop
add
xchg
and
es
xchg
adc
fcmove
in
(bad)
adc
aaa
cli
adc
icebp
jmp
pusha
hlt
mov
lea
and
int3
xchg
add
test
mov
in
hlt
inc
cmp
hlt
dec
or
push
or
dec
hlt
xchg
sti
dec
sbb
dec
inc
or
stos
push
loopne
xchg
mov
or
or
arpl
jns
mov
adc
push
adc
nop
or
scas
sti
mov
or
sbb
push
mov
push
aas
sbb
or
or
adc
inc
xor
sub
loopne
xchg
jg
dec
leave
rcl
movs
or
and
iret
adc
pop
fist
outs
rcl
push
pop
or
or
repnz
pop
xchg
cwde
cmp
sub
in
adc
and
add
mov
in
adc
push
pop
pop
mov
jo
dec
shl
int
cli
inc
out
sti
addr16
cwde
cld
push
mov
imul
ret
outs
jb
sbb
dec
cld
cli
xchg
shr
mov
sti
stos
inc
mov
jmp
sbb
fnsave
shl
cs
sti
add
loopne
mov
or
add
adc
push
mov
in
popaw
or
xchg
fnstsw
outs
aas
repnz
cmc
or
je
sbb
jno
or
pop
push
out
sub
pop
arpl
or
and
or
lods
inc
arpl
dec
gs
inc
and
dec
data16
dec
aaa
inc
enter
and
mov
enter
aaa
(bad)
divps
fdiv
mov
pop
daa
fucomp
call
data16
xor
xor
scas
outs
push
mov
stos
or
cld
lock
sub
cs
loopne
ret
xchg
add
dec
add
sub
inc
cs
retf
cmp
mov
ror
and
dec
mov
rcr
ins
hlt
dec
loop
call
loopne
jecxz
(bad)
int3
adc
fcomp
cld
pop
scas
lahf
int
outs
xor
mov
(bad)
adc
in
push
out
ss
les
je
fldl2t
inc
fsub
xor
test
fdiv
fidiv
shl
fld
inc
push
or
enter
enter
mov
mov
out
push
mov
and
fnstenv
xchg
push
mov
add
mov
jne
mov
mov
xchg
adc
jl
sub
mov
iret
inc
hlt
sub
call
arpl
cmp
mov
lock
lds
bound
lock
add
clc
push
call
cwde
adc
fnstcw
sub
push
loopne
fadd
sbb
sub
mov
mov
test
popa
mov
cmp
or
dec
pop
dec
outs
mov
xor
int3
xchg
arpl
stos
pop
push
sbb
xchg
xchg
loop
scas
mov
adc
sbb
jle
jb
jbe
mov
sbb
and
call
lock
pavgb
stc
out
xor
call
or
sub
xor
xlat
cli
fnstcw
in
mov
inc
adc
mov
sub
sbb
hlt
sbb
jl
jns
test
pop
sub
xor
loop
xor
adc
dec
mov
pop
cmp
jg
jg
mov
stos
or
mov
xchg
ror
cmp
(bad)
icebp
pusha
jne
out
mov
jl
inc
xor
cs
or
mov
dec
jp
add
and
lock
retf
add
leave
and
dec
jp
std
jg
out
push
stc
pop
imul
push
mov
jmp
and
fidivr
pop
out
push
push
push
mov
adc
xchg
or
js
lock
scas
lock
fisttp
mov
ret
add
sub
jae
pop
add
push
cs
test
push
inc
xchg
adc
jbe
jo
dec
aaa
hlt
cdq
fs
pop
idiv
dec
or
mov
cld
push
mov
jo
sbb
push
pusha
test
xchg
rcl
add
ins
shr
sub
cmc
or
(bad)
xor
push
mov
jmp
test
or
scas
sahf
mov
mov
bound
mov
scas
pop
inc
and
loop
jmp
mov
call
cwde
push
mov
pusha
sbb
jo
ja
xchg
scas
cmp
movs
sbb
xlat
jp
rol
test
push
in
or
repz
push
lock
or
cli
or
loopne
mov
jmp
mov
sub
xor
cmp
setge
ds
mov
mov
adc
sub
sbb
pop
in
mov
(bad)
inc
pop
ja
and
lods
enter
jae
mov
or
inc
add
cmp
jbe
in
push
jne
mov
mov
inc
add
xchg
aam
test
rol
(bad)
sub
rcl
xor
or
fcomi
mov
pop
adc
add
rcl
xor
adc
icebp
bound
push
inc
push
dec
push
xchg
loope
cdq
mov
jmp
shr
mov
loopne
push
sbb
inc
xor
sar
hlt
jecxz
xor
(bad)
pop
lds
xor
mov
push
pop
(bad)
jb
mov
ret
jmp
cmp
adc
adc
dec
test
aas
iret
les
lea
aam
out
mov
sub
cwde
mov
add
jo
push
popf
cmp
aam
(bad)
pusha
jmp
sub
ja
cmp
fmul
in
daa
sub
and
adc
sbb
cmp
add
add
push
sahf
or
stos
mov
push
cmp
xor
sbb
push
adc
pushf
cmp
mov
sbb
add
pop
call
outs
pop
add
pop
jle
cmp
imul
test
push
sub
xor
aas
inc
dec
sahf
out
sahf
push
push
pop
arpl
jns
out
jne
or
movs
stos
sahf
out
sahf
mov
mov
pop
jmp
mov
or
add
add
les
repz
or
sbb
or
push
and
or
xor
or
movs
pop
(bad)
aam
or
imul
add
cld
sbb
adc
add
dec
popa
xor
jmp
adc
cmp
jnp
adc
cmp
lock
cmps
stc
adc
push
jp
out
sahf
out
cwde
mov
jl
shl
cmp
iret
repz
lods
shl
daa
out
fidivr
sub
jns
dec
ins
lea
fidivr
aas
ds
mov
shl
sbb
popa
imul
repz
cdq
mov
sahf
out
es
push
sahf
out
repnz
push
inc
sub
ror
pop
jb
jl
idiv
out
call
sahf
out
push
dec
outs
nop
mov
mov
movs
out
push
stos
mov
add
popa
mov
sub
adc
cmp
loopne
jmp
in
xor
adc
cmc
pop
push
nop
or
add
pop
nop
add
ss
jae
xchg
add
inc
adc
sub
in
sub
mov
push
nop
inc
push
cmp
cmp
or
in
and
ret
outs
cs
enter
jecxz
inc
ret
add
rol
mov
and
push
scas
test
mov
inc
push
(bad)
cmp
xor
push
or
inc
lock
fiadd
mov
vmovlps
fs
movs
call
or
pop
enter
and
xchg
das
xor
pop
mov
test
inc
adc
mov
pop
inc
enter
adc
mov
mov
test
inc
pop
scas
fiadd
adc
sub
add
shld
add
or
(bad)
int3
inc
nop
inc
xchg
mov
jno
test
jp
jo
add
ret
cmps
fdiv
sub
jecxz
dec
and
loopne
push
in
hlt
inc
or
sub
mov
nop
mov
or
ror
jb
cmp
ins
mov
cmps
rol
popa
and
popa
inc
cs
jae
mov
repz
jmp
jo
outs
aam
mov
push
mov
loopne
push
mov
and
mov
mov
imul
sbb
lock
daa
jo
sub
daa
inc
fild
jp
mov
daa
inc
fbld
adc
push
mov
mov
pop
into
pop
pushf
push
push
ficom
jbe
pop
ins
adc
push
pop
popa
test
ins
inc
xor
adc
or
jmp
or
int
fwait
dec
ret
inc
push
jo
mov
add
sub
jae
pop
jo
or
xlat
clc
pop
and
mov
xchg
call
jmp
push
add
jecxz
mov
jmp
add
call
push
jmp
jmp
mov
sbb
inc
and
dec
push
jecxz
idiv
fsubr
jmp
sub
clc
fnstcw
cmp
sbb
cmp
imul
shl
mov
test
mov
sub
mov
xchg
sub
dec
inc
cmp
mov
add
js
mov
fild
push
add
outs
adc
pop
pop
outs
add
jae
mov
mov
out
int
xor
xchg
sbb
sub
push
add
data16
add
inc
pop
or
iret
repz
mov
int3
je
push
jmp
pop
repz
jnp
adc
dec
not
in
loopne
jmp
emms
and
adc
add
inc
mov
fsubr
imul
pop
sbb
jmp
sbb
sbb
dec
xchg
ss
jmp
sbb
mov
jmp
sub
and
mov
mov
inc
lods
int3
mov
or
rol
push
or
ss
std
adc
sub
jae
push
push
push
repz
pop
(bad)
adc
sbb
movs
inc
mov
push
pusha
fiadd
mov
(bad)
dec
inc
xor
cmp
push
push
push
adc
jbe
out
and
ds
sbb
loope
jmp
cmp
cmp
xor
sbb
loope
or
pusha
loope
fsub
add
xor
add
mov
push
scas
cmp
jbe
pop
dec
cmp
and
pop
and
inc
push
and
iret
repz
cdq
pop
enter
mov
cmp
jmp
pop
not
pop
and
aas
dec
or
pusha
cwde
outs
jmp
js
push
jmp
jmp
enter
jmp
xor
lea
jmp
ins
mov
and
pop
jmp
mov
cmps
sub
stc
jmp
popf
in
mov
xchg
sbb
mov
pop
cmp
int3
data16
sbb
mov
and
sbb
sbb
sbb
cmp
mov
sbb
sbb
inc
jmp
cs
idiv
push
jb
push
adc
sbb
and
push
pop
jnp
or
cmps
imul
inc
leave
ds
jmp
pop
movs
jmp
scas
pop
popf
add
idiv
sub
pop
cmp
repz
je
nop
sahf
xor
rep
cmp
aas
xlat
mov
out
xlat
mov
lock
(bad)
jne
mov
cs
sbb
mov
das
push
mov
test
sbb
sbb
push
inc
nop
ds
jle
jb
push
adc
jmp
push
shl
dec
int
pop
mov
test
fimul
xchg
inc
shl
dec
sahf
mul
push
dec
pop
jb
add
movs
jns
out
mov
iret
fucomp
xchg
cdq
add
stc
xor
adc
and
and
scas
shr
dec
inc
mov
mov
push
femms
shl
pop
lgs
rol
shl
fcmovnbe
mov
cmp
shr
jecxz
sbb
cmp
out
out
aaa
iret
push
push
sbb
sub
cmp
sbb
ret
xlat
ret
ror
sbb
ret
mov
push
push
cmps
jmp
push
and
adc
sar
call
mov
or
and
adc
xor
imul
cmp
aaa
dec
or
lods
(bad)
adc
or
jno
add
sbb
mov
sbb
popa
pop
loope
add
sub
add
add
scas
scas
jecxz
cmps
ror
dec
lods
or
jl
or
lods
push
mov
xchg
cdq
jnp
neg
inc
dec
inc
ror
in
cli
or
push
sar
push
and
stos
add
stos
and
retf
push
push
pop
push
(bad)
stos
daa
mov
scas
mov
xor
(bad)
(bad)
and
rcl
jnp
or
sub
add
dec
jecxz
inc
dec
in
push
loope
and
cmps
loope
jo
ret
adc
sbb
xor
mov
out
ss
inc
pop
iret
repz
imul
into
repz
retf
fstp
add
pop
xchg
cmp
xchg
mov
jecxz
mov
fcom
and
xor
test
xchg
and
add
cmp
inc
mov
xor
inc
adc
shl
cmp
adc
push
lods
or
push
bound
out
push
jo
mov
out
(bad)
rcl
pop
cmp
movs
mov
push
xchg
pop
xor
icebp
inc
nop
push
and
lock
icebp
inc
sub
lock
lock
or
push
inc
icebp
inc
jns
mov
push
scas
mov
sahf
pop
rol
pop
dec
pop
out
inc
dec
data16
dec
aaa
jns
nop
sahf
lods
out
repz
imul
adc
repz
stos
psllq
arpl
les
push
add
scas
adc
adc
call
sub
inc
push
in
out
bound
mov
or
mov
sub
adc
mov
in
cmp
pop
push
mov
add
pop
mov
mov
inc
(bad)
cs
shr
fsubr
or
lds
(bad)
jne
gs
adc
push
test
sahf
out
sahf
cmp
bound
or
jns
call
jecxz
movs
ret
jecxz
mov
sbb
dec
sbb
xor
xchg
sbb
sbb
in
popf
sbb
mov
and
sbb
in
sbb
ds
pop
int3
dec
push
fnstenv
pusha
jne
push
icebp
or
jmp
or
xchg
push
jns
out
push
push
daa
xor
sahf
out
ins
jnp
cld
sbb
pusha
push
ins
(bad)
cwde
jo
push
lods
stc
jne
stos
fadd
jns
push
js
or
jne
aaa
loopne
dec
mov
cs
sbb
pop
mov
and
jnp
out
cmp
inc
retf
lock
and
in
retf
or
push
inc
sbb
int
jle
imul
jno
cs
fisttp
test
ja
xor
sbb
or
add
cmp
cmp
rol
adc
adc
adc
repz
adc
sbb
push
cmp
sbb
push
pop
and
and
and
es
jns
inc
inc
nop
push
add
stos
out
sahf
out
int3
fucomp
dec
repz
adc
xor
gs
repz
xchg
iret
repz
fsubr
dec
(bad)
cmp
repz
push
fs
cmp
repz
cmp
(bad)
aam
jmp
and
jmp
and
jecxz
stos
jmp
arpl
cmp
sbb
pop
dec
(bad)
jmp
(bad)
shl
sti
loopne
fist
fldcw
jmp
xchg
fldl2t
fldenv
movs
jmp
and
stos
dec
jmp
jmp
cmps
scas
loope
in
adc
jmp
pcmpgtw
pop
jmp
and
inc
ja
push
and
mov
jmp
and
pop
cmovne
xor
inc
xchg
dec
scas
xchg
cmp
or
fnstcw
or
push
mov
das
xchg
dec
outs
mov
mov
jb
or
jb
nop
dec
or
dec
outs
xchg
mov
sub
or
jo
and
aaa
mov
shr
mov
std
mov
or
mov
xchg
xchg
outs
mov
xchg
jnp
ins
mov
sti
add
mov
sbb
adc
sbb
mov
xchg
aas
mov
xchg
push
retf
mov
sub
xor
pop
and
sub
in
daa
and
inc
cs
and
push
mov
mov
mov
mov
cmps
push
xor
(bad)
jae
or
je
dec
or
dec
push
push
or
add
outs
(bad)
add
lods
je
dec
sbb
inc
test
xor
or
push
mov
or
sub
rcr
out
sahf
fwait
push
pop
adc
sahf
mov
push
movs
loop
scas
mov
loopne
adc
loope
ret
pop
scas
out
inc
cmp
jg
(bad)
mov
jle
pop
retf
jns
jns
mov
mov
in
out
or
sbb
sub
xchg
out
outs
jl
xchg
out
scas
cwde
cmps
mov
xor
stos
xor
test
jae
jns
push
js
xchg
idiv
sub
dec
test
mul
add
and
jge
not
sub
cmp
test
add
ja
jno
add
dec
xlat
xlat
imul
gs
aam
mov
xlat
and
pop
aaa
jb
lds
pop
adc
cmp
adc
aas
cmps
mov
lahf
sub
mov
adc
push
or
arpl
fsubr
push
pop
sbb
or
(bad)
jmp
sub
and
jnp
scas
pop
dec
(bad)
mov
jb
adc
mov
adc
mov
arpl
and
loope
adc
jne
mov
inc
dec
push
sbb
les
xchg
push
out
sbb
push
aaa
sbb
jmp
adc
out
je
scas
push
mov
adc
(bad)
popf
jmp
popf
mov
cmp
test
cmp
cmp
ror
ins
jle
iret
repz
mov
cmc
jns
fdivr
and
jns
out
ds
pop
push
jbe
inc
push
movs
inc
stos
pop
inc
pop
push
and
stos
dec
or
dec
add
aad
lea
xor
cdq
adc
dec
stos
stos
inc
jne
dec
pop
dec
jo
pop
add
inc
test
adc
adc
arpl
icebp
jno
popa
xor
mov
jno
in
adc
rcl
je
mov
loop
adc
dec
sbb
lds
add
int
adc
test
jmp
or
movs
int3
dec
aas
mov
out
mov
pusha
adc
and
iret
repz
push
pop
ins
jp
cmp
xrelease
add
out
daa
pusha
mov
lds
jo
pop
test
and
cmps
popf
iret
rcl
pop
xchg
and
pop
xchg
outs
pop
or
outs
pop
mov
pop
test
cs
sub
pop
jg
push
push
in
mov
jl
push
cmps
dec
fimul
repz
pop
push
and
inc
dec
repnz
repnz
push
xchg
pop
stc
pop
test
cmp
adc
stc
daa
ret
and
adc
loopne
jmp
sub
xchg
or
arpl
sti
pop
sub
xchg
xor
and
sbb
ret
sub
jae
cmp
je
retf
jmp
sar
sbb
sti
and
mov
adc
xchg
push
mov
mov
cmp
cmp
adc
cmp
fidiv
jl
or
add
mov
ret
idiv
in
inc
mov
arpl
mov
lea
mov
es
daa
adc
les
sbb
xor
xchg
je
test
pop
pop
pop
pop
push
adc
rcr
clc
lea
(bad)
jmp
jmp
test
pop
pop
scas
lods
push
fs
mov
mov
cmps
pop
loopne
nop
loopne
xor
repz
test
je
push
mov
out
nop
icebp
and
cmp
jne
repz
cmp
and
adc
push
pop
sahf
and
adc
xor
cmp
push
sbb
in
jae
fisubr
(bad)
mov
out
and
add
(bad)
xchg
jg
fmul
add
add
adc
sbb
shl
pushf
lods
jne
fmul
mov
and
rol
aaa
add
add
(bad)
jg
push
add
pop
adc
push
inc
jb
popa
jns
push
jns
je
ins
cs
jns
gs
call
outs
imul
sar
mov
retf
sub
dec
adc
jbe
out
add
pop
or
call
pop
push
add
movs
sbb
push
les
push
test
clc
fcmovnu
add
hlt
(bad)
fisub
push
inc
outs
jne
gs
or
cs
je
jb
out
shl
outs
jbe
outs
loopne
outs
jbe
dec
gs
cmps
adc
or
add
gs
data16
pop
sbb
popf
mov
hlt
mov
outs
pop
imul
arpl
outs
cmp
adc
add
(bad)
push
mov
mov
add
or
int
inc
out
add
into
xor
jnp
mov
add
mov
outs
call
inc
pop
addr16
add
test
jg
push
dec
or
pusha
push
(bad)
bound
push
daa
cdq
pop
inc
and
jns
(bad)
loope
add
or
add
(bad)
or
sbb
push
jae
pop
in
xor
push
dec
jnp
(bad)
outs
(bad)
dec
add
add
inc
sub
push
icebp
lock
das
dec
pop
add
test
into
add
push
dec
imul
cs
inc
outs
push
idiv
and
call
xor
xor
mov
enter
dec
in
inc
add
mov
data16
call
sbb
mov
scas
or
push
cwde
mov
loope
outs
or
inc
into
mov
or
or
cwde
push
idiv
loop
bound
adc
dec
push
aas
mov
push
movs
hlt
mov
mov
xchg
add
imul
sub
inc
jle
out
mov
push
scas
pop
inc
ins
mov
add
cld
sbb
mov
mov
jo
cmp
je
inc
jne
arpl
popf
ins
ret
imul
adc
adc
push
dec
es
xchg
mov
push
mov
mov
add
test
(bad)
js
add
mov
in
push
add
mov
cmp
xor
retf
lahf
and
in
dec
movs
js
push
mov
rcl
fs
cmc
div
or
add
push
inc
neg
outs
(bad)
data16
adc
(bad)
or
or
dec
sub
add
and
clc
sbb
push
adc
pop
cmps
add
out
add
jno
jnp
popa
jbe
rol
mov
outs
cld
push
mov
adc
daa
mov
xchg
push
pop
sub
mov
adc
mov
sbb
nop
push
enter
jno
enter
mov
(bad)
sub
or
mov
dec
jns
fwait
mov
adc
pop
jmp
cmp
in
jae
jae
inc
not
jns
xor
mov
(bad)
add
cmp
into
leave
ins
or
inc
jnp
clc
pop
add
shl
inc
and
pushf
fsub
dec
push
jl
dec
dec
inc
dec
xchg
loopne
jno
daa
daa
and
mov
xchg
jb
mov
dec
data16
and
cmpxchg
daa
daa
and
je
pop
xchg
xchg
xchg
daa
daa
enter
fist
rcr
jbe
fisttp
mov
pop
xor
sbb
setnp
inc
iret
inc
sbb
mov
add
and
hlt
inc
cmc
cmp
shr
sahf
imul
jno
leave
or
inc
lds
dec
dec
xor
add
aam
jmp
sub
xor
add
inc
push
add
outs
mov
mov
dec
mov
dec
jae
and
pop
rcl
inc
push
pop
and
pop
mov
add
repz
jp
jg
add
fs
and
xchg
mov
inc
jp
push
popa
ins
jne
arpl
lock
fst
ret
lahf
or
outs
sub
lods
popf
xchg
push
test
cmp
outs
mov
sbb
or
outs
cdq
adc
imul
xor
push
dec
push
or
push
push
movs
cmp
and
xchg
xor
out
out
enter
jns
or
div
add
xchg
adc
mov
call
gs
mov
(bad)
call
pop
xor
pop
ins
inc
or
pop
dec
jae
imul
add
js
iret
or
push
ins
adc
jno
push
ja
add
mul
or
mov
push
dec
rol
sbb
(bad)
push
lea
dec
add
or
fsubr
add
mov
je
inc
xchg
pop
dec
xchg
inc
js
nop
mov
cdq
ins
ret
sar
cdq
push
inc
leave
push
jne
xor
inc
mov
pop
sub
cmp
in
or
arpl
js
sub
mov
cdq
jge
xor
(bad)
loopne
inc
or
or
ja
xor
lock
xor
div
(bad)
(bad)
das
dec
outs
out
dec
popa
pop
adc
movs
pop
add
adc
add
add
es
sub
stos
cmp
dec
aaa
jl
inc
addr16
popa
imul
inc
inc
stos
ss
ins
cmp
dec
popw
dec
adc
outs
jne
into
imul
cmp
push
jo
addr16
daa
ds
and
xor
test
shl
mov
sbb
fist
jl
inc
adc
push
cli
pop
(bad)
or
pop
dec
add
and
xor
adc
mov
dec
mov
mov
and
xchg
dec
idiv
(bad)
fadd
mov
or
ins
xor
js
mov
jae
ret
or
mov
arpl
dec
test
ficomp
mov
sar
cmp
cmp
pop
mov
xor
in
xor
ds
add
and
adc
adc
jns
mov
inc
mov
mov
fiadd
mov
inc
out
xchg
stos
and
inc
popa
cwde
jo
sbb
sub
sub
fadd
pop
mov
lock
sbb
popa
pop
arpl
jns
jo
ss
jmp
into
inc
dec
xor
aaa
push
jp
push
aas
int
sub
sbb
int3
pop
ret
sub
lods
or
(bad)
lock
inc
lock
pop
rcr
hlt
mov
mov
mov
pop
jmp
or
lea
push
dec
shr
in
fisttp
jo
dec
adc
mov
mov
mov
jge
test
jne
cmp
push
adc
mov
call
outs
or
inc
mov
repz
jmp
add
or
pop
ret
mov
das
out
add
call
imul
add
inc
fld
loopne
out
add
inc
add
enter
dec
sbb
and
inc
mov
jmp
out
int3
adc
mov
cmp
push
push
outs
rcr
clc
dec
or
cld
xchg
cmp
jo
cld
mov
pop
rol
mov
mov
ins
sbb
dec
jo
ror
dec
push
add
fisub
movzx
in
jg
add
cmps
in
xor
mov
add
inc
nop
(bad)
std
jp
or
mov
or
loopne
cld
cmp
pop
rcl
mov
xor
sbb
add
(bad)
(bad)
enter
adc
jle
loopne
inc
pusha
xor
add
in
sub
adc
in
(bad)
pusha
mov
cdq
js
fbld
js
or
inc
jge
sar
sub
pusha
out
and
call
push
cmp
ror
dec
mov
enter
cmp
add
paddusw
inc
in
sub
xor
outs
aaa
loopne
loope
jg
jne
lea
movs
add
fsubr
mov
sub
mov
fidiv
(bad)
nop
into
push
and
pop
pop
sub
sub
or
gs
or
sbb
jp
mov
mov
loopne
lea
push
fwait
sub
mov
les
push
pop
stos
inc
lods
jmp
pop
add
in
fiadd
data16
push
jae
jge
add
dec
sbb
mov
adc
int
cmp
jp
call
pusha
sbb
pop
xor
fcmovnu
pop
sbb
shl
in
mov
cmp
daa
pop
push
shl
aad
pop
repz
sub
retf
mov
xor
(bad)
(bad)
movs
and
adc
loope
cmp
or
loope
inc
jmp
jmp
retf
out
mov
int3
(bad)
or
inc
pusha
sbb
daa
(bad)
and
scas
(bad)
xchg
loope
lea
not
(bad)
cs
and
es
mov
or
(bad)
xor
mov
jbe
cmp
dec
push
lsl
stos
jne
jmp
(bad)
sub
jb
je
lock
das
push
mov
jmp
mov
cmp
adc
in
js
mov
les
or
sbb
clc
pop
ror
fimul
test
je
push
movs
or
jmp
test
add
mov
add
retf
clc
adc
add
cmp
xor
test
jbe
jl
and
lods
(bad)
inc
aam
cdq
push
jae
daa
cmps
or
inc
dec
inc
add
int3
push
sbb
push
jl
xor
adc
loope
jmp
or
adc
dec
jo
adc
test
imul
push
mov
sar
pusha
add
stos
push
mov
fadd
xchg
pop
sahf
pop
fcom
mov
xchg
mov
push
rcl
xchg
fwait
jmp
mov
aam
push
lock
jne
lock
loope
mov
adc
test
pushf
retf
or
xor
cs
sbb
xor
push
pop
dec
fdiv
xchg
xchg
retf
xlat
fcomp
push
mov
int3
cmps
ror
mov
jg
stos
repz
add
icebp
hlt
pop
adc
mov
mov
fs
test
push
dec
jmp
dec
aas
or
or
mov
fucom
movs
push
xor
xchg
pushf
call
push
push
loop
add
or
(bad)
adc
cli
jno
or
push
mov
into
ret
pusha
adc
call
gs
shr
test
loop
maxps
push
les
test
je
mov
or
nop
or
add
enter
mov
mov
ror
sub
push
add
push
mov
inc
jne
out
test
or
fmul
sbb
mov
test
aad
adc
in
jns
adc
push
jno
repnz
sbb
push
lea
sub
pop
ret
out
mov
xchg
outs
push
mov
mov
jno
pusha
cmc
jae
ss
mov
cmp
xchg
cdq
inc
sar
or
add
add
inc
or
xlat
jo
and
cli
mov
jne
add
mov
dec
ret
call
mov
cwde
bound
sub
sets
movzx
(bad)
scas
movs
mov
add
movs
aad
ret
rcl
xor
dec
xlat
inc
mov
imul
jo
sub
jge
adc
out
aaa
adc
daa
xor
xor
adc
dec
sub
jb
out
out
inc
cld
addr16
les
adc
and
pop
jle
pop
inc
popa
pop
loope
(bad)
mov
test
mov
test
sbb
mov
in
ret
mov
retf
test
xchg
mov
push
rcl
cmp
pop
pop
cmps
je
ror
xor
(bad)
pop
xchg
or
sub
adc
xchg
lods
or
mov
add
jne
lea
lea
(bad)
mov
jb
mov
push
jge
imul
cmp
dec
and
sbb
jo
ja
ss
lods
loopne
dec
mov
sub
mov
xchg
and
xor
not
xor
mov
adc
ins
adc
xchg
retf
or
jmp
dec
and
dec
push
or
ins
inc
outs
xchg
in
inc
lds
es
aam
jbe
lds
adc
adc
xchg
popf
pop
add
sub
daa
pop
push
or
add
out
hlt
mov
(bad)
loopne
inc
pop
scas
ins
push
xchg
mov
mov
rcl
outs
add
push
xor
call
out
out
dec
rcr
dec
push
push
pop
adc
pop
mov
fisub
bound
das
sbb
pop
mov
cld
or
push
inc
(bad)
pop
sub
adc
inc
cmp
mov
or
mov
bound
and
aas
xor
xchg
mov
xchg
sub
lods
inc
fdivr
mov
jecxz
push
sbb
leave
and
inc
lds
jmp
(bad)
scas
mov
(bad)
fs
mov
test
mov
test
je
sub
mov
cmp
icebp
scas
rol
or
cmp
sete
leave
mov
mov
(bad)
sar
shr
pusha
int
adc
pusha
in
mov
clc
data16
pushf
out
mov
loopne
add
xor
ds
pop
sub
adc
cdq
sbb
adc
mov
add
repnz
dec
or
adc
ds
jmp
addr16
punpckhdq
jmp
sub
xlat
int3
bound
or
mov
mov
xchg
call
sar
or
sub
data16
das
mov
and
add
mov
jecxz
push
das
or
inc
rcl
fist
xor
daa
xchg
(bad)
(bad)
jne
mov
jne
ss
mov
xchg
dec
add
xor
lds
add
push
or
jne
or
cli
rcr
or
or
int3
fs
hlt
inc
pusha
pusha
mov
dec
mov
jl
mov
je
xlat
cmp
jmp
rcr
jne
mov
mov
mov
je
dec
push
dec
or
xor
add
fcom
add
pushf
push
shl
in
and
hlt
call
push
add
jmp
jmp
fnstsw
inc
and
adc
rcl
mov
fadd
adc
shl
sub
add
ins
mov
adc
mov
loopne
jmp
mov
sbb
add
fistp
cmp
je
pop
jge
shl
cmps
mov
push
int
fsubr
cmp
mov
sbb
lods
lock
and
int3
mov
mov
aam
hlt
iret
adc
aas
push
rcl
pop
js
and
fidivr
mov
mov
mov
dec
test
jne
and
fsubr
je
jp
and
xor
inc
and
aam
dec
fcomp
ror
icebp
je
or
or
xchg
inc
ficom
(bad)
sbb
icebp
mov
mov
jbe
mov
dec
dec
jl
mov
cli
push
sub
test
sub
push
out
push
test
and
push
pop
int3
jle
xor
and
jo
aam
inc
dec
jne
add
push
nop
pop
cmp
scas
mov
jle
outs
cmp
clc
adc
add
in
push
push
pop
jg
(bad)
mov
xchg
pop
lea
push
lea
ins
inc
jbe
inc
xor
mov
rol
cmp
jne
lea
or
sbb
xor
cld
jmp
dec
mov
leave
xchg
and
loopne
mov
or
xor
icebp
push
jno
fxch
add
sbb
or
xchg
jo
sbb
or
inc
inc
fwait
mov
push
loopne
push
retf
xor
add
and
xor
sbb
adc
add
jmp
jmp
shl
pop
add
pushf
out
pushf
sub
outs
sub
pop
outs
loop
add
lock
les
mov
add
adc
add
cmc
push
nop
ins
sbb
adc
adc
or
out
jns
(bad)
mov
cmp
enter
or
and
mov
loopne
mov
or
cmp
pop
mov
dec
retf
(bad)
daa
add
call
pop
inc
push
sbb
push
sbb
test
jne
sbb
xor
cmp
jl
jne
xor
pop
xchg
mov
xor
jmp
mov
and
movs
dec
xchg
xchg
iret
ficomp
push
or
into
or
mov
xor
xchg
setp
pop
cs
pusha
mov
mov
add
movzx
push
mov
rcr
add
sar
cmc
(bad)
outs
cmc
add
int
mov
enter
push
lods
and
pop
cmp
je
mov
jo
fwait
jge
pop
xchg
sub
jne
imul
cmp
add
sbb
rol
sbb
jmp
dec
adc
clc
loope
cmp
imul
ds
push
sbb
int
xchg
inc
movzx
out
push
xor
cmps
shl
xchg
stos
inc
or
hlt
clc
cmp
scas
jmp
mov
pushf
mov
jmp
inc
fld
and
test
add
and
adc
retf
mov
and
add
leave
in
xchg
adc
xchg
push
test
cmp
mov
xchg
mov
call
daa
add
loopne
fmul
mov
push
sub
mov
push
repnz
outs
in
add
mov
jge
sti
mov
push
mov
xor
or
call
add
or
xchg
pop
fwait
cmp
pushf
test
ret
xor
add
mov
sub
std
icebp
add
rcr
fsub
add
fwait
cmp
shl
and
xchg
and
call
xchg
and
lods
ret
jbe
js
popf
mov
sbb
std
xchg
mov
add
xchg
mov
lea
test
outs
lahf
cmp
xor
push
je
push
lock
jb
cs
aad
stos
rol
jg
xor
pop
ret
scas
add
call
and
mov
dec
mov
arpl
dec
push
pop
out
cs
pop
ret
and
adc
xor
xchg
loopne
mov
out
movs
pop
ds
ja
push
das
(bad)
or
out
jle
adc
inc
adc
add
sub
jb
mov
push
outs
or
jb
push
inc
jg
jge
jle
popf
adc
in
sbb
add
retf
ins
clc
mov
jmp
inc
or
sar
add
sbb
sbb
dec
shr
dec
add
adc
mov
(bad)
sbb
inc
shr
cdq
push
and
jmp
lea
mov
dec
xor
xchg
movs
aas
loop
sbb
or
sbb
add
cmp
push
and
mov
push
scas
push
mov
pop
xchg
xchg
dec
sahf
inc
sbb
add
mov
mov
scas
repnz
setge
mov
mov
or
add
mov
sbb
in
mov
push
sub
ss
push
jo
sub
sbb
or
or
lds
push
mov
jmp
adc
xchg
loopne
(bad)
fwait
sbb
ins
inc
dec
sbb
jmp
cmps
in
or
add
icebp
and
dec
xlat
outs
popa
mov
(bad)
pop
retf
mov
sbb
sub
jb
add
sub
jb
or
xchg
lds
add
lods
adc
adc
xlat
pop
xor
call
push
pop
pop
sbb
loope
jge
daa
ins
fcomip
push
mov
mov
sbb
stos
jle
xchg
test
jmp
fwait
pop
sbb
xchg
iret
test
lds
int
inc
sahf
ins
scas
repz
call
cmp
js
cwde
test
repz
push
jmp
adc
inc
icebp
ret
cmps
(bad)
mov
mov
sbb
jmp
jecxz
cmps
hlt
loope
outs
xor
sbb
jmp
popa
arpl
pop
jmp
ss
jmp
sahf
jne
sub
add
push
ins
and
rcl
retf
(bad)
mov
jl
sbb
arpl
push
out
inc
jge
sbb
jno
cmp
repnz
xor
iret
inc
dec
adc
push
jmp
cmp
popf
sub
sbb
inc
add
mov
cmp
in
test
or
mov
dec
fwait
cmp
jne
sbb
pop
jb
jg
js
fadd
push
push
jne
sbb
add
pop
add
mov
sti
ss
loop
cmp
or
faddp
mov
sbb
pop
imul
adc
fdiv
aas
mov
leave
mov
adc
mov
adc
add
das
xor
dec
add
push
or
or
sbb
sbb
xor
inc
mov
mov
lea
loopne
sbb
xchg
test
push
inc
jbe
and
lock
dec
jmp
loop
adc
test
lea
loope
or
inc
push
ins
call
or
add
or
mov
loope
and
call
jg
push
adc
adc
cmp
inc
sub
mov
mov
stos
adc
mov
cmp
mov
cmp
adc
mov
rcr
nop
adc
inc
mov
mov
inc
not
add
lea
add
sbb
push
mov
bndldx
ins
sbb
stos
js
or
sub
push
ins
mov
pop
enter
add
aas
dec
and
mov
pop
mov
cmps
mov
adc
fistp
and
sub
dec
loope
cli
push
int3
call
test
xchg
mov
jl
(bad)
mov
push
sub
and
xor
cmp
(bad)
pusha
push
adc
loope
mov
jbe
jb
push
push
ficomp
fistp
push
js
jbe
(bad)
imul
sub
dec
(bad)
mov
(bad)
frstor
(bad)
pusha
mov
dec
loop
dec
mov
dec
hlt
cmp
mov
mov
sbb
mov
mov
pop
js
xor
xor
jmp
jmp
dec
ret
outs
sbb
je
jmp
and
mov
jmp
pusha
cmps
sub
inc
and
data16
push
pop
es
dec
cwde
adc
cmp
addr16
or
aaa
jmp
mov
(bad)
jg
out
repnz
aad
and
mul
sahf
mov
jmp
and
cmps
les
test
(bad)
ss
push
cmp
sti
lea
ret
retf
loope
loopne
loopne
mov
mov
loop
sbb
push
call
and
sbb
mov
lahf
cmp
adc
ret
mov
fmul
pop
or
add
pop
repnz
loopne
cwde
call
and
test
es
and
sahf
adc
and
jge
jmp
xor
or
daa
loopne
mov
and
jno
sahf
fmul
and
sub
dec
jmp
fdivrp
or
xchg
pop
clc
mov
push
xor
push
inc
mov
mov
js
jns
sbb
ja
cwde
xchg
inc
(bad)
mov
xor
adc
sbb
cmp
add
or
shr
mov
inc
sbb
cmp
inc
jbe
mov
dec
pusha
ret
dec
adc
dec
inc
nop
pop
xor
in
in
jmp
pop
es
dec
fwait
push
aaa
adc
push
sbb
mov
aas
adc
movs
jbe
mov
sub
xchg
push
push
loope
cmps
clc
mov
clc
adc
cmps
and
inc
jno
pop
call
sub
add
add
push
pop
mov
mov
fidivr
push
xor
push
jnp
mov
and
sbb
push
inc
push
jbe
jmp
cs
or
or
inc
adc
jno
add
add
adc
xor
dec
and
ror
adc
mov
scas
jle
sbb
sub
jmp
int3
mov
imul
and
retf
or
arpl
xlat
loop
fdiv
add
xor
ror
aam
retf
push
add
aas
jmp
adc
into
(bad)
movs
mov
or
push
or
shr
call
fld
adc
leave
mov
sub
mov
push
call
mov
retf
sti
or
push
cdq
stos
push
or
mov
pop
js
test
nop
xchg
pop
and
(bad)
mov
fwait
xor
out
lock
jmp
sti
loopne
in
or
and
or
sbb
repz
adc
jmp
push
jmp
pop
mov
out
mov
cmp
das
nop
pop
aaa
push
outs
ins
sti
or
adc
and
cmp
arpl
sbb
mov
adc
adc
adc
dec
sahf
dec
arpl
out
or
dec
adc
jno
jb
pop
rol
jmp
pop
add
mov
fs
ins
add
mov
inc
cmps
jmp
inc
pusha
ror
addr16
ret
(bad)
adc
cmp
ja
outs
jnp
sub
push
or
imul
ja
jge
test
loopne
adc
mov
mov
cmp
add
pop
jmp
sahf
mov
das
push
push
aaa
push
rcr
mov
imul
push
outs
lock
pop
add
pop
mov
or
jbe
shr
sub
mul
push
xchg
xor
cmp
or
pop
mov
call
inc
add
cmp
jne
sbb
popa
adc
push
and
inc
push
mov
mov
add
movs
outs
or
or
add
pop
retf
inc
in
pop
or
mov
pop
pop
mov
add
inc
mov
push
or
push
and
pop
adc
and
add
fs
or
aad
mov
or
push
pop
sub
and
in
pop
aad
pop
ja
mov
adc
adc
xchg
mov
mov
iret
add
push
mov
sbb
push
pusha
mov
leave
jmp
push
nop
sbb
push
adc
push
sbb
sbb
sbb
or
push
or
setbe
adc
cmp
mov
mov
mov
movs
and
mov
in
sub
sbb
iret
xor
and
fcomp
or
sub
js
into
es
daa
or
sub
mov
cmp
daa
or
xor
outs
cmp
push
xchg
xor
jecxz
test
adc
or
push
div
cmp
xor
out
or
cmp
sub
inc
pop
dec
test
cmp
mov
pop
push
nop
imul
xchg
jnp
pop
add
mov
in
neg
test
push
ret
push
cli
pop
push
in
jns
out
push
fld
in
in
jmp
jne
mov
sub
push
enter
jle
lock
fisttp
ins
ds
sbb
xchg
dec
fwait
inc
pcmpgtb
sub
dec
jno
sub
inc
add
pop
mov
scas
mov
push
and
jl
or
daa
xor
mov
dec
or
inc
ss
pop
retf
sahf
cmps
push
sbb
jo
pusha
cmp
sub
stos
scas
adc
mov
inc
loop
jno
lock
nop
and
add
xor
sar
mov
cwde
paddsb
add
jbe
fs
and
cmp
dec
ret
es
jge
mov
and
sti
ins
sbb
outs
jl
jle
adc
(bad)
lods
pusha
cmp
jbe
or
sub
inc
or
mov
(bad)
sbb
(bad)
adc
in
inc
mov
sub
dec
push
je
adc
cwde
or
sar
add
adc
imul
sbb
dec
and
push
jl
fucomp
(bad)
fs
push
ins
push
jmp
je
push
inc
pop
(bad)
cld
add
clc
int3
imul
out
(bad)
jl
fwait
xor
mov
fist
mov
pop
leave
ss
lea
dec
jmp
sub
mov
(bad)
jnp
or
inc
adc
lahf
sbb
or
adc
add
jnp
outs
sub
jae
rcl
pop
call
cmp
je
sub
je
or
idiv
call
adc
or
add
pop
out
cli
enter
outs
les
adc
pop
cmp
shr
xor
dec
jne
mov
cmp
je
mov
mov
movs
sbb
jmp
add
inc
test
inc
call
stos
dec
adc
push
sbb
js
push
fcomp
sub
xor
stc
pusha
push
push
mov
cmp
inc
push
mov
sti
dec
pushf
lods
jne
daa
or
xchg
adc
mov
or
call
outs
or
iret
sub
inc
out
out
inc
or
add
cmp
pop
in
jbe
jg
inc
add
jo
add
add
out
adc
add
mov
sub
aam
lds
out
popf
sub
mov
outs
lock
mov
jmp
mov
mov
cwde
lea
push
fcom
push
xor
out
xchg
mov
lods
cmc
loope
gs
stos
adc
xchg
inc
push
push
push
je
add
push
inc
xchg
xor
or
lock
xor
dec
dec
mov
iretw
nop
push
sbb
inc
ss
aas
arpl
jno
and
mov
push
cmp
in
pop
cmp
test
xor
cmp
mov
test
add
inc
dec
test
xchg
call
cld
add
or
movs
jo
je
add
xor
pop
push
adc
rol
xchg
mov
add
push
pop
mov
jmp
int
fist
outs
cmps
add
div
add
mov
test
pop
pop
fcom
or
out
jge
cmp
jge
sub
or
or
pop
or
pop
jne
mov
xchg
cwde
sti
retf
jo
jp
nop
xor
cmp
scas
sbb
sub
out
inc
add
cbw
push
pop
je
jo
dec
pop
mov
jmp
ins
push
pop
outs
int3
ret
dec
pop
lahf
and
push
push
pop
or
and
sub
into
jp
push
leave
cmp
fadd
or
inc
clc
push
ret
imul
rcl
xor
jo
adc
scas
xchg
adc
loope
arpl
loopne
stc
shr
inc
adc
test
ja
jae
push
mov
imul
mov
cmc
rcr
mov
cmp
sbb
sub
sbb
mov
xchg
ins
push
sbb
jno
dec
lods
add
in
or
jo
and
push
pop
dec
push
leave
sbb
test
test
mov
mov
or
xchg
push
push
dec
inc
outs
xor
sub
or
in
cdq
out
ds
js
adc
jns
int3
jmp
test
fdecstp
and
jge
mov
and
mov
fimul
add
push
test
pop
jg
lods
popa
add
in
sub
inc
xchg
add
pushf
xor
mov
fstp
sbb
addr16
sbb
jo
or
es
add
mov
and
inc
xor
sbb
sub
sar
mov
adc
add
push
mov
fsubr
sbb
or
(bad)
in
pop
mov
sub
shl
push
sub
sbb
sub
mov
mov
push
and
lock
cmp
mov
jp
clc
add
xlat
sti
dec
dec
xor
es
outs
clc
push
pop
pop
jo
sahf
sbb
aaa
cmp
sbb
lock
mov
pop
mov
inc
gs
sar
sbb
pop
jl
pop
pop
pushf
push
fs
rcl
sbb
jnp
push
sbb
sbb
jae
adc
xchg
or
test
(bad)
push
cli
sub
inc
mov
mov
add
sbb
cmps
adc
add
jo
je
or
ret
adc
fimul
icebp
cmp
jnp
mov
sbb
enter
add
ss
retf
cmps
mov
xor
xor
je
out
xchg
iret
cmp
adc
scas
sub
stos
add
add
add
call
adc
fdiv
ins
mov
jmp
mov
sbb
sbb
push
pop
lods
shl
inc
mov
push
daa
jae
cmp
iret
stos
adc
cld
xor
or
ins
js
ror
lock
cli
call
data16
enter
in
push
add
mov
stc
pop
sub
pop
xchg
retf
and
push
fcomip
lock
pop
aaa
iret
jecxz
(bad)
xor
and
add
aas
inc
add
lea
xor
sub
and
adc
sbb
sbb
aaa
or
pop
sbb
in
and
jg
jo
fld
adc
xor
shr
xchg
mov
loopne
lea
sbb
cmp
aaa
push
das
and
sti
sub
in
mov
sbb
sti
add
fisttp
pop
ret
test
jg
push
and
std
jmp
pop
(bad)
mov
jo
mov
inc
xor
rcl
jge
inc
add
mov
(bad)
dec
add
inc
retf
pop
fcom
jmp
ror
push
clc
push
loop
in
pop
sbb
add
adc
inc
jne
sub
(bad)
ins
addr16
test
inc
sbb
jnp
xor
mov
inc
loopne
inc
in
es
add
out
mov
es
xchg
jecxz
jbe
push
or
sbb
ret
cwde
add
fadd
enter
cli
cmp
nop
jb
xlat
and
add
les
inc
inc
jbe
push
jne
dec
shr
sub
(bad)
and
aad
xor
neg
or
and
test
or
sbb
clc
mov
inc
test
fimul
dec
jmp
in
call
or
sub
mov
into
je
sub
pop
jo
in
outs
xor
push
lea
sbb
call
iret
les
stos
enter
xor
addr16
rcl
pop
add
iret
lods
cmp
pusha
push
loopne
ror
or
sub
xchg
inc
jg
add
ins
sbb
popa
add
add
imul
es
jns
add
add
das
add
push
jbe
in
push
mov
test
js
jo
(bad)
test
cmps
pop
add
ret
ins
cmp
xor
test
shl
sub
add
inc
pop
xchg
add
add
hlt
add
loopne
mov
jae
push
jg
std
jmp
std
jmp
jns
je
or
or
fmul
lods
loopne
and
out
mov
jbe
mov
mov
cmp
add
add
and
inc
or
shl
test
pusha
movs
jmp
cmp
mov
and
popa
sub
push
xor
xchg
(bad)
or
add
mov
mov
pusha
sbb
mov
fild
rol
addr16
adc
adc
mov
mov
xchg
mov
and
fs
pusha
popa
push
adc
shl
call
push
sbb
neg
pusha
and
dec
outs
inc
imul
int
nop
pushf
sbb
pusha
xor
scas
test
dec
and
je
lea
mov
push
xor
call
aam
call
mov
xchg
(bad)
cwde
pusha
or
jae
aaa
repnz
add
aas
ds
lds
(bad)
(bad)
call
cmp
adc
out
push
retf
lods
sbb
add
adc
and
add
push
outs
pop
sbb
push
pop
jg
pusha
les
mov
mov
imul
sbb
xor
ja
cld
nop
loopne
sub
in
adc
loopne
and
pop
jne
push
push
push
push
sub
push
fcom
xor
mov
jo
cld
std
into
and
mov
sti
jo
jge
hlt
sti
sub
lock
inc
and
ds
pusha
adc
call
cmp
sbb
jns
inc
(bad)
ins
(bad)
mov
cs
cmp
std
leave
in
nop
mov
je
sbb
add
push
jne
mov
shr
loop
mov
addr16
or
mov
(bad)
lea
rcl
or
pushf
cmp
popa
add
mov
imul
bt
mov
loopne
jno
adc
shl
nop
outs
xchg
xor
push
out
(bad)
popa
outs
cmp
sub
push
cmp
jecxz
lock
push
shl
mov
mov
popf
inc
scas
mov
mov
and
dec
scas
sbb
cs
mov
(bad)
(bad)
sbb
push
and
ja
xor
mov
push
inc
addr16
icebp
mov
fcomp
inc
jbe
xor
push
cwde
cmp
pushf
or
daa
popf
pop
das
pop
sbb
enter
mov
nop
outs
lods
inc
fiadd
call
sub
or
mov
pop
add
out
sbb
bound
inc
add
mov
xlat
adc
and
jecxz
pop
mov
imul
inc
aad
pop
xchg
clc
dec
movs
pop
add
or
pop
into
mov
hlt
paddusb
xor
cmp
cmps
shr
out
pop
mov
enter
sub
sbb
and
sbb
push
or
sub
cmp
mov
xor
inc
cwde
ins
aas
sub
dec
out
dec
or
dec
add
adc
call
add
adc
loop
mov
out
cmp
fisub
mov
sbb
jle
or
cmp
mov
push
call
inc
add
jne
jge
sbb
mov
loop
mov
lock
popa
enter
lock
sbb
jne
mov
or
mov
mov
aas
push
adc
adc
adc
test
xchg
sbb
in
inc
dec
jno
and
pop
mov
xchg
rcr
push
in
or
mov
std
adc
ins
in
(bad)
pop
ret
scas
cwde
xchg
jp
ror
fs
sbb
stos
test
push
ins
push
add
pop
push
push
dec
xchg
dec
shl
mov
fimul
loopne
jnp
push
cmp
aad
int3
cmp
cmp
daa
(bad)
cwde
seto
fst
cmp
movs
jge
add
cmp
add
add
test
mov
mov
mov
push
sbb
ret
jmp
(bad)
loopne
fdiv
in
in
xchg
je
xchg
pop
xor
push
ss
hlt
fidiv
outs
bound
cdq
xor
and
jo
or
adc
loope
push
cdq
jne
xor
out
xor
jnp
pop
mov
jb
int
mov
fcomp
or
loope
push
dec
and
lds
das
xor
xchg
popa
adc
mov
retf
adc
sub
mov
fistp
ret
out
not
xchg
mov
repnz
leave
xor
xor
adc
or
xor
dec
rcl
push
aam
pop
mov
push
dec
adc
add
pop
or
int3
pusha
lock
into
mov
ss
les
fcom
pop
in
test
cmp
jle
sub
sar
jns
adc
outs
pushf
(bad)
sub
dec
add
push
jne
stos
or
adc
into
(bad)
push
sti
pushf
sbb
sub
mov
stos
(bad)
inc
pop
cmps
push
loop
add
jmp
retf
in
pusha
loopne
cmp
sti
leave
ret
mov
mov
fidiv
icebp
jmp
sub
cmp
retf
dec
and
cmps
leave
jnp
test
je
shl
mov
lea
mov
shl
scas
lock
push
je
mov
jmp
dec
and
fwait
mov
adc
push
sbb
xchg
shl
test
add
adc
shl
js
or
sub
dec
sub
rcr
and
push
sbb
stos
mov
adc
(bad)
rol
push
add
add
push
mov
inc
sub
cmp
or
or
enter
mov
in
add
cli
xchg
ss
pop
push
adc
pop
push
mov
popa
lods
sbb
ss
or
pop
jbe
and
sbb
add
ret
push
fistp
rcl
jo
fbld
test
pop
jnp
sbb
mov
loopne
mov
xchg
sbb
je
pop
adc
sbb
movq
cmps
aaa
mov
in
pop
pushf
sub
xchg
aaa
mov
(bad)
push
dec
xor
push
add
add
xchg
shr
fnstenv
sbb
sbb
xchg
rol
addr16
addr16
mov
inc
fild
and
xlat
add
add
loopne
fild
les
test
xor
aaa
std
pop
inc
cmp
js
neg
xor
add
dec
pop
cmp
or
add
int
fcom
loopne
mov
mov
idiv
ins
imul
loopne
adc
les
lahf
pop
push
scas
je
add
out
xor
ud0
xor
scas
sbb
daa
fld
das
adc
pop
push
jne
mov
add
or
(bad)
mov
add
jmp
dec
pop
mov
mov
sub
pop
dec
push
pop
xchg
adc
clc
push
call
or
jb
(bad)
pop
sub
test
xchg
or
dec
sub
mov
lea
sbb
lea
xchg
cmps
push
popa
daa
push
xchg
test
cmp
int3
cmp
lods
xor
sbb
popa
xchg
stc
push
or
fsubr
out
es
mov
xor
mov
adc
call
cmp
sbb
loopne
mov
lock
or
jo
dec
mov
sbb
jmp
or
in
add
push
cmps
jb
dec
hlt
adc
inc
adc
sbb
jmp
fisttp
sub
or
mov
cli
mov
loopne
pop
push
mov
or
loope
rcr
mov
xor
pop
xchg
pop
pop
pop
cmp
and
scas
dec
pusha
adc
cmp
and
nop
jmp
or
adc
in
ss
ret
mov
les
xchg
push
and
shl
or
or
loop
inc
sub
mov
push
cmp
and
adc
or
mov
cmp
out
(bad)
rcr
cmps
sbb
cld
xchg
sbb
and
jns
jmp
sub
mov
fst
(bad)
xor
ins
adc
loopne
and
inc
ins
xor
scas
push
dec
ret
sub
test
mov
arpl
aad
and
loopne
mov
sbb
and
adc
shr
push
sub
loopne
jb
das
int
test
cmp
sbb
mov
js
mov
or
call
or
imul
adc
dec
shl
into
cld
mov
hlt
pop
fsubr
and
popa
mov
jns
lock
mov
xlat
rol
inc
mov
aas
es
xor
mov
xor
adc
sub
movs
test
out
mov
aas
enter
cmp
int
jge
inc
dec
xchg
or
jbe
ds
daa
shl
lock
out
ror
mov
add
dec
sti
call
pop
popa
test
add
cmp
ds
js
add
(bad)
test
and
xchg
jno
pop
lea
mov
sbb
and
push
mov
jmp
nop
jne
daa
aam
xchg
(bad)
mov
ins
xlat
jge
sub
cmp
jne
xchg
ja
loopne
adc
dec
dec
clc
add
xor
lock
or
mov
push
sub
daa
or
pop
mov
and
js
jp
adc
test
shl
aam
movs
add
out
gs
jle
jbe
in
fs
les
mov
and
mov
lods
rcl
cmp
mov
sbb
sahf
lock
es
cmp
or
int
out
push
fcmovu
jmp
or
add
add
jmp
loope
sar
xor
cmp
rol
mov
jo
(bad)
adc
ret
add
or
call
fadd
jae
cli
mov
xor
jno
inc
js
test
jne
cwde
xchg
pop
mov
mov
shl
jl
add
or
jl
jmp
dec
add
and
push
cmp
add
cmp
aaa
xchg
mov
mov
lods
sbb
inc
scas
hlt
rcr
rcl
ret
mov
stos
(bad)
sbb
les
mov
js
adc
adc
js
aad
jmp
sbb
dec
mov
mov
and
in
not
xchg
sbb
stos
mov
lock
push
cmp
push
test
sub
push
cmp
adc
jge
inc
pop
jne
sbb
pushf
push
fdivr
push
jo
das
mov
pop
push
jne
test
xchg
cmp
ja
jb
add
mov
mov
mov
push
mov
xchg
sbb
mov
fdivr
xchg
fnstenv
push
push
or
pusha
or
and
test
add
(bad)
cmp
add
call
inc
sub
sub
pop
add
adc
push
add
mov
je
sbb
cmps
pop
stc
popa
dec
cld
bound
(bad)
mov
push
cs
test
ds
or
mov
mov
fdiv
(bad)
xchg
test
repz
leave
hlt
or
sbb
cmc
aam
mov
mov
mov
cmp
dec
adc
lea
push
sbb
div
xor
pop
jo
lock
sar
cmp
mov
pop
or
(bad)
nop
mov
mov
add
aas
mov
jge
in
sbb
leave
int3
push
int
mov
out
xchg
and
push
stos
dec
and
or
inc
enter
xchg
lock
dec
mov
aam
xchg
mov
scas
sbb
loope
lock
sbb
aad
test
add
pop
in
jbe
push
test
in
jnp
fcomp
push
ret
xchg
or
ror
les
pushf
dec
and
mov
push
xor
mov
dec
inc
test
xchg
sbb
mov
dec
push
push
and
shr
mov
and
clc
sbb
jbe
jb
scas
test
sub
push
ins
add
adc
inc
test
and
push
xor
dec
mov
movzx
sbb
cli
arpl
mov
ret
push
adc
sbb
pop
sbb
push
popa
xchg
xchg
pop
clc
xchg
sbb
out
retf
adc
or
inc
fld
int
call
mov
xor
addr16
dec
nop
jo
jae
adc
sbb
sbb
not
dec
jae
(bad)
hlt
adc
add
nop
fld
ret
jbe
inc
je
xor
sbb
call
int
hlt
pop
and
loope
popf
mov
add
mov
dec
je
cs
adc
lock
or
mov
(bad)
push
scas
sub
push
add
sub
data16
mov
movs
pop
or
xor
add
pop
adc
add
jo
xchg
cli
nop
push
xor
mov
adc
and
pop
adc
sbb
inc
pop
scas
sbb
shl
js
jmp
adc
pop
div
mov
cmp
push
cs
push
mov
push
and
inc
add
sbb
hlt
vpcomuq
or
fsubr
test
outs
pop
jo
mov
xlat
or
pop
push
adc
sub
xor
sub
loope
out
and
mov
outs
lock
pop
shl
inc
test
lock
cmp
jne
hlt
mov
or
inc
lea
xchg
pop
sub
cmp
add
daa
pop
(bad)
adc
xchg
cmp
popf
sar
sbb
jnp
aas
sbb
inc
iret
repnz
xchg
cmp
dec
jo
or
or
sub
pop
or
and
mov
ins
js
retf
dec
imul
push
mov
and
or
popf
cmp
cli
cmps
mov
sub
and
sbb
pusha
pop
inc
es
cs
jo
and
add
dec
jae
jns
fs
ins
aaa
rcl
push
mov
cmp
add
mov
cmp
wbinvd
push
cmp
dec
in
ret
clc
xor
into
ins
inc
pop
je
ret
jo
xlat
inc
inc
sbb
pop
push
test
lods
cmp
(bad)
loop
inc
test
call
ds
ficom
dec
jg
xchg
push
add
inc
jmp
popa
mov
mov
inc
add
inc
push
pop
call
in
test
cld
iret
xor
mov
iret
jbe
xor
fisttp
push
xor
pop
and
push
add
push
fadd
das
sbb
pop
push
cld
mov
pop
outs
jbe
jge
dec
or
add
shl
mov
adc
sub
adc
scas
push
loopne
xchg
cmps
xchg
in
das
sub
push
xor
(bad)
mov
hlt
add
xor
(bad)
mov
pop
das
data16
loopne
sbb
and
fwait
mov
pop
push
adc
pop
xlat
dec
lock
jmp
cmp
mov
mov
pop
push
call
push
push
rcl
adc
mov
inc
cmp
jle
add
or
mov
sub
fbstp
test
(bad)
loope
mov
xor
inc
clc
std
jno
cmp
je
jge
add
mov
add
add
inc
add
ins
cmp
sub
add
dec
test
jl
inc
push
out
lea
push
clc
mov
out
out
xchg
es
cdq
ds
stos
mov
push
jb
out
add
(bad)
(bad)
mov
mov
sbb
cmp
je
mov
int3
sub
ret
jnp
shl
fcmovnbe
fcomp
push
mov
sbb
pop
mov
ret
nop
jp
add
rol
add
add
pop
xor
call
and
cmp
push
int3
rol
sti
inc
fisttp
pop
adc
inc
(bad)
popf
and
pusha
mov
sar
cs
push
push
sub
and
ficom
leave
cmps
mov
jne
push
add
sub
iret
hlt
push
ds
sbb
push
ret
mov
add
lods
out
inc
aas
cmp
jg
inc
xchg
push
sub
in
ja
inc
dec
sub
or
or
xchg
xchg
add
shl
xchg
adc
push
stc
test
jge
push
and
stc
sub
sub
ins
or
jecxz
outs
sub
in
push
mov
or
and
je
push
inc
test
push
or
mov
add
adc
push
or
mov
push
ficomp
in
mov
or
ror
jne
ins
jnp
shl
adc
xchg
or
dec
or
nop
push
pop
das
push
inc
ror
ret
xchg
call
jge
cmp
adc
push
imul
addr16
xchg
daa
adc
mov
or
call
or
fld
popa
add
sub
jbe
xchg
fmul
or
cdq
xchg
cmp
xchg
or
jmp
jl
js
scas
add
sub
mov
xchg
ss
pop
int
out
jle
add
in
in
test
bound
and
(bad)
push
dec
loopne
in
dec
leave
jae
lods
stos
scas
mov
and
jge
push
jmp
loopne
loopne
fsubr
fdiv
jae
mov
dec
and
in
cmp
add
js
mov
or
cmp
jle
sbb
and
rcl
cmps
jmp
les
dec
sub
add
cmps
lea
jnp
or
adc
gs
pop
ror
pop
mov
jo
mov
rcl
imul
jo
sbb
xor
jo
jle
lds
or
sti
dec
or
mov
xor
or
xchg
ret
adc
pop
je
scas
je
fsubr
sbb
jns
mov
push
sbb
pop
call
js
push
mov
sub
rep
push
ins
xor
int
xchg
jno
sub
mov
out
or
loopne
pop
jge
xchg
or
pop
or
adc
sbb
adc
lea
shl
sbb
and
(bad)
out
pop
sbb
sub
add
sti
pusha
lea
cmp
std
or
push
cmp
out
lods
jae
hlt
test
pusha
call
xchg
xor
ins
lods
test
ins
adc
and
fisub
push
or
adc
cmp
call
cmp
add
imul
or
pop
fldcw
cs
inc
sub
mov
iret
je
test
add
jl
push
rcl
das
add
adc
jl
je
xor
pop
push
dec
push
data16
enter
lock
pop
(bad)
pop
shl
aam
pop
xchg
loopne
popa
in
jmp
lock
sbb
std
cmps
sbb
into
shr
sbb
cmp
xchg
pop
dec
aas
nop
sub
xor
xor
test
call
and
shr
xchg
sti
adc
push
cs
mov
stos
cmp
je
ret
push
test
or
add
mov
and
push
and
enter
sbb
add
(bad)
xchg
lahf
inc
inc
adc
xor
dec
addr16
mov
gs
inc
or
push
shl
inc
or
bound
ret
or
movs
xlat
mov
pop
or
aam
out
cmp
inc
push
adc
push
sbb
inc
xchg
fcmovnbe
mov
dec
rol
adc
popf
jmp
adc
add
xor
into
aad
sbb
in
or
or
ret
jg
je
mov
jmp
repnz
jne
pusha
imul
cmps
add
rcr
pop
rol
xchg
add
or
ja
fdiv
aad
push
lods
retf
scas
dec
cmp
mov
inc
sub
sub
int
inc
add
loopne
sub
jmp
inc
pop
cmps
cmps
je
sub
cmp
(bad)
sbb
xor
or
test
repz
xchg
in
rcl
mov
out
mov
lods
fld
fst
loope
lods
xchg
cmps
add
fisttp
push
addr16
push
jp
cmp
outs
movs
inc
js
or
jno
pop
xor
pop
das
sbb
retf
jno
jae
push
add
xlat
movs
je
std
into
cmp
pop
jg
add
sbb
dec
addr16
adc
add
addr16
dec
test
ins
and
movs
push
int
dec
add
test
dec
mov
push
sub
adc
fcom
out
sbb
ss
and
neg
xchg
pop
adc
add
xlat
add
(bad)
lock
(bad)
jle
adc
inc
paddd
sbb
int3
add
dec
cmp
jb
fiadd
(bad)
and
outs
bsr
xchg
pushf
pop
push
fisttp
out
out
inc
dec
adc
adc
movs
in
or
js
inc
add
syscall
(bad)
or
jno
fdiv
sub
adc
sbb
jae
fbstp
nop
inc
ror
dec
mov
call
(bad)
dec
xor
pop
push
sub
bswap
push
fild
pmaxub
pavgb
mov
push
nop
stos
jne
or
dec
rcr
mov
cld
add
mov
mov
pusha
lock
(bad)
loope
mov
push
xchg
ins
jg
lods
daa
sbb
sbb
cmp
xchg
sub
rcr
rcl
mov
aas
std
retf
retf
mov
scas
push
mov
cmove
gs
lods
(bad)
jecxz
(bad)
mov
xor
arpl
and
adc
fsub
or
push
mov
rcr
fs
push
mov
rol
dec
pop
mov
mov
inc
jmp
cmp
sub
cmps
scas
ins
scas
clc
sbb
fidivr
add
mov
jo
add
xor
adc
cmp
fild
push
lea
jne
mov
out
dec
cmp
test
sub
fcmovnb
mov
cmp
dec
stos
xor
inc
jmp
push
in
dec
push
jmp
sub
jne
das
mov
pushf
ins
sbb
pop
sub
or
and
stos
xchg
jnp
fsub
aad
sbb
ret
mov
out
push
cmp
stos
gs
out
sub
push
in
(bad)
and
pop
push
(bad)
pop
push
mov
pop
into
adc
(bad)
lea
push
mov
xor
lds
xchg
cld
adc
push
mov
jne
imul
retf
push
pusha
imul
imul
addr16
lods
movhps
test
imul
mov
jecxz
lea
in
(bad)
outs
add
mov
sbb
stos
push
sub
imul
and
sbb
(bad)
jmp
jae
lods
xchg
mov
pop
loopne
imul
mov
adc
pop
jp
push
aad
(bad)
push
sti
pop
xchg
test
and
jmp
mov
sub
add
int3
push
adc
lea
dec
adc
cld
or
out
add
push
cmp
mov
es
and
and
dec
test
cwde
je
dec
push
inc
push
rcl
xchg
sahf
retf
dec
loopne
hlt
xor
retf
call
xor
pusha
aam
push
addr16
mov
inc
mov
adc
cmp
mov
xor
add
cmp
in
xor
and
or
cwde
push
or
push
jmp
mov
and
(bad)
add
sub
sti
lea
xchg
push
xchg
je
push
loope
sub
das
push
test
stos
mov
fsub
push
jo
adc
(bad)
ficom
int
jne
mov
jmp
or
hlt
daa
xlat
in
(bad)
cwde
lock
cld
lods
movups
fnsetpm(287
push
jo
inc
jo
in
xchg
mov
dec
fcmovne
inc
pop
fisttp
adc
dec
sbb
in
and
pop
das
popf
in
fdivr
push
out
add
out
pop
enter
push
out
and
loope
sub
push
xor
cmp
push
push
(bad)
jge
push
or
mov
popa
and
mov
lods
sbb
push
out
call
daa
mov
scas
push
push
mov
and
addr16
adc
push
cmps
pop
test
rol
and
push
fist
mov
xlat
dec
sub
je
push
leave
dec
and
sbb
rcl
mov
xchg
push
loop
mov
push
and
shr
push
jo
aas
clc
cmp
push
mov
xor
hlt
fidiv
pop
(bad)
xchg
pop
in
aad
pop
addr16
cmovb
mov
sub
adc
jmp
ds
push
and
mov
adc
mov
push
repnz
fstp
in
jnp
loopne
or
inc
add
dec
or
jbe
arpl
pop
mov
out
and
push
inc
jmp
ja
add
loopne
enter
mov
out
push
add
push
imul
loopne
hlt
sbb
aaa
sbb
rcr
shr
pusha
lock
xchg
bsr
pop
cmp
sub
ss
sub
mov
and
and
mov
pop
push
jo
jne
pop
sub
push
ins
out
pop
lock
out
xchg
js
inc
sbb
stos
push
movs
cmp
aas
sub
xchg
pop
adc
repz
aas
lods
shl
push
add
jo
mov
push
add
jl
and
(bad)
icebp
into
add
pop
mov
js
hlt
mov
pop
loopne
pop
pop
(bad)
adc
or
pop
ins
scas
lea
add
push
sbb
mov
cmp
sub
pop
push
jae
jmp
jbe
and
lahf
mov
xchg
cwde
pop
jo
fidivr
mov
jge
dec
push
jno
add
or
cmp
(bad)
add
jns
pop
repz
dec
loopne
invd
pop
cmc
xor
cmc
pushf
dec
adc
test
(bad)
sbb
push
sub
mov
xor
shl
imul
jmp
retf
(bad)
inc
push
cmp
jne
test
je
mov
les
mov
inc
xor
add
rol
or
jmp
popa
jg
call
or
(bad)
shl
cwde
stos
dec
add
ins
lds
(bad)
jbe
xchg
mov
xchg
jmp
or
sar
cmp
je
or
fs
loop
add
hlt
std
push
push
push
mov
or
sbb
or
or
jb
scas
pop
adc
inc
(bad)
shr
xchg
inc
add
inc
test
pop
inc
mov
ror
sbb
or
push
movs
js
test
test
push
loopne
fadd
stc
enter
test
fidiv
push
mov
xor
xchg
dec
ror
adc
or
pop
adc
inc
mov
jne
xchg
das
xchg
mov
jo
mov
jo
nop
inc
mov
pop
add
fwait
data16
mov
lahf
mov
add
jbe
add
jg
adc
rol
xor
add
js
mov
jg
test
mov
jg
inc
add
sbb
sbb
add
xchg
pusha
sbb
jg
fs
inc
add
or
sbb
sti
push
add
add
sar
xchg
sub
not
lea
jne
mov
inc
shl
adc
xchg
or
dec
or
add
push
pop
nop
push
ins
cld
add
shr
ret
or
fcomp
adc
dec
or
cmp
add
shl
push
imul
outs
xchg
ins
add
shl
or
push
outs
cwde
cmps
add
pusha
outs
imul
shl
js
mov
out
dec
mov
xchg
ss
sub
int3
rol
adc
push
pop
rcl
or
cmp
ror
add
and
xchg
jae
pop
loopne
imul
outs
adc
adc
and
in
cmp
or
xor
sbb
lock
push
and
jmp
les
imul
xor
jnp
or
or
adc
mov
push
mov
push
push
or
pop
mov
sub
leave
lods
adc
adc
mov
imul
xor
ins
mov
xor
jo
or
push
mov
sti
dec
pop
(bad)
adc
xor
pop
adc
xchg
fiadd
add
pop
rcl
push
add
xchg
add
ins
outs
adc
add
scas
sub
pusha
imul
enter
add
sub
outs
sbb
daa
or
shl
inc
js
jno
(bad)
jecxz
cmp
add
jecxz
call
push
sti
push
(bad)
pop
xor
sbb
arpl
in
jmp
jmp
xor
sbb
mov
lods
push
dec
repnz
lods
loopne
add
dec
lods
jo
jge
and
lahf
pusha
or
mov
jb
arpl
inc
dec
add
repnz
jg
add
sub
clc
loopne
es
pop
mov
push
rol
std
sub
sub
sar
lods
pop
nop
ins
add
out
enter
mov
clc
cmp
sbb
or
lds
jg
adc
cs
test
add
fiadd
jg
sbb
mov
sbb
jo
movs
out
jmp
inc
adc
cwde
xor
jg
test
mov
jg
js
mov
fild
add
or
dec
add
adc
enter
add
add
adc
lds
sub
fwait
push
jle
rol
cmp
inc
mov
add
fsub
ror
jg
shr
or
aas
or
inc
cdq
sub
push
arpl
loopne
inc
sbb
(bad)
jne
or
push
dec
mov
pop
in
addr16
jp
jmp
call
xchg
dec
mov
add
dec
inc
outs
mov
push
movs
cmp
pop
pushf
cmp
ret
jae
imul
add
pop
jmp
fdiv
call
inc
cmps
mov
loopne
push
addr16
push
jecxz
sbb
fisubr
dec
mov
or
test
adc
pop
mov
push
mov
mov
lldt
or
inc
ja
cmps
or
bswap
or
popf
jp
mov
stos
call
jno
push
das
setnp
jae
dec
data16
cmps
mov
dec
rcr
btc
enter
enter
mov
xchg
add
out
adc
or
aam
add
ja
lock
pop
(bad)
minps
rol
dec
mov
shl
ds
add
mov
or
mov
mov
mov
push
test
fld
mov
or
adc
cmps
outs
(bad)
dec
pop
jecxz
xchg
pop
jmp
sbb
push
fisttp
jno
mov
add
test
sub
adc
add
pop
jo
add
test
mov
in
mov
adc
xchg
jb
push
xchg
push
or
rol
push
sbb
mov
adc
in
jg
jp
mov
sbb
sbb
popf
adc
js
das
push
add
lea
movs
add
mov
add
ror
pop
add
loope
xchg
jne
adc
pop
in
in
ror
push
mov
je
jl
push
xor
or
xchg
pop
adc
xor
add
jg
cld
sbb
jnp
pop
add
push
je
push
fcom
add
cmp
dec
jg
or
sub
jg
pop
cmc
mov
shl
push
stos
add
jg
jg
test
ss
add
xchg
bound
nop
je
adc
retf
retf
lea
push
lock
sbb
in
rcr
(bad)
loopne
rcr
sbb
mov
cmp
mov
loopne
xchg
xchg
xchg
ror
xchg
inc
jbe
adc
dec
adc
cmps
(bad)
jp
std
add
ror
or
outs
mov
or
dec
sbb
or
out
or
sbb
cld
leave
mov
stos
inc
data16
je
je
add
cmp
mov
sub
int3
mov
xor
(bad)
pop
mov
nop
es
nop
and
push
nop
adc
cmp
add
push
aad
adc
add
addr16
add
xor
rol
sbb
mov
add
daa
out
pushf
jmp
icebp
fild
add
or
in
or
sub
add
imul
pop
add
sbb
sub
add
mov
dec
or
push
add
xor
push
xchg
sub
or
cld
sbb
mov
(bad)
push
repnz
and
pop
push
or
mov
xor
pusha
cmp
add
mov
add
add
jmp
shl
or
pop
or
or
cmp
jle
lock
(bad)
fiadd
in
sub
call
add
jae
adc
mov
ficom
mov
in
loopne
mov
imul
loopne
dec
and
lock
loopne
jne
mov
lahf
xor
data16
sbb
xchg
or
add
js
lds
inc
js
fcom
pop
lea
sbb
fisttp
sahf
or
and
gs
dec
popa
and
and
add
js
mov
mov
push
mov
add
xchg
add
fimul
mov
mov
sbb
and
or
mov
fs
add
jle
or
cs
cmp
inc
inc
and
and
jge
adc
sub
push
sub
cmp
add
mov
and
outs
test
add
sbb
nop
push
daa
cmp
fstp
xor
ror
push
or
outs
dec
add
push
in
nop
inc
test
std
or
inc
ror
push
inc
push
fisttp
push
sbb
add
ins
in
add
loopne
push
add
or
xchg
mov
stc
and
enter
cs
push
mov
push
sbb
mov
or
push
adc
adc
sbb
cmp
call
lea
out
or
out
pop
test
or
push
or
fiadd
sub
int3
ss
sti
sbb
sbb
mov
push
loopne
cmp
or
adc
jge
ins
or
sbb
push
and
inc
and
or
sub
rcl
inc
add
ret
push
push
shl
call
inc
pushf
sbb
push
or
sar
adc
outs
inc
sub
out
test
adc
jbe
popf
ret
popw
inc
push
loope
or
jmp
pop
loope
push
mov
or
sbb
inc
(bad)
pop
sbb
add
add
repnz
mov
inc
aaa
cmps
push
pop
adc
adc
xchg
jno
add
aaa
movs
sub
push
test
aaa
lods
add
or
ret
aaa
inc
jns
mov
push
aaa
lock
inc
sbb
lods
pop
fisttp
or
sub
cld
mov
sbb
aam
cmp
rcr
aas
sbb
sub
sub
mov
lods
push
jmp
jns
dec
sbb
psubb
mov
push
pop
rol
inc
mov
int3
ds
sbb
sub
scas
xchg
push
sub
mov
sub
sbb
dec
pop
loop
inc
xchg
ins
dec
jle
pushf
dec
dec
inc
dec
mov
mov
sahf
iret
aaa
ror
gs
data16
inc
add
das
xchg
dec
mul
dec
and
add
xchg
jno
mov
mov
jno
mov
and
adc
mov
arpl
sbb
jae
aaa
push
add
(bad)
pop
pop
mov
jb
movs
addr16
addr16
(bad)
sub
dec
push
adc
in
mov
imul
in
js
xor
in
stos
jne
mov
sub
or
pop
push
mov
or
xlat
adc
cmp
add
and
xchg
pusha
jno
(bad)
fwait
jmp
popf
and
jo
addr16
hlt
push
push
mov
loopne
inc
mov
sbb
out
repnz
adc
xor
sub
jo
adc
xor
mov
ror
xchg
mov
lods
adc
retf
xchg
out
dec
lock
mov
xchg
sub
fs
mov
mov
cld
jne
jb
cs
add
imul
add
leave
xchg
lock
and
in
popa
xor
and
mov
popa
sub
les
push
sub
sub
aam
jl
test
pop
and
in
cmp
push
in
adc
arpl
repz
dec
pop
popa
dec
or
sub
dec
inc
movs
push
adc
les
push
xor
adc
inc
leave
sub
push
or
cmp
inc
pop
ds
cs
adc
mov
dec
retf
and
out
pushf
lods
je
push
repnz
ins
loopne
repz
pop
dec
cmp
jbe
mov
pop
sub
mov
dec
ror
call
cmp
inc
jmp
add
sbb
sub
xor
adc
or
cmps
add
pop
add
adc
pop
and
daa
mul
inc
add
pop
add
cmp
out
ins
add
sub
lock
movs
mov
add
xor
cli
ret
loopne
add
or
push
(bad)
lock
es
cld
in
xor
sti
(bad)
jo
jo
xor
sti
nop
add
dec
and
div
in
cmp
xor
xor
adc
stos
cmps
add
adc
add
pushf
and
push
shl
inc
sub
test
sbb
hlt
ret
inc
out
sahf
stos
jns
ret
and
movs
mov
fisub
add
or
rol
fistp
add
shr
or
xchg
push
add
mov
mov
test
add
sbb
add
sub
lea
rcr
ror
mov
push
mov
clc
nop
or
jo
int
test
add
(bad)
and
push
ins
mov
iret
xor
add
shl
into
mov
(bad)
rol
in
add
rol
add
add
lock
mov
add
lldt
movs
add
loopne
cmp
fadd
aad
add
or
arpl
push
icebp
bound
mov
or
jns
sti
out
add
rol
loopne
mov
and
pop
push
mov
mov
jns
or
add
mov
dec
aaa
mov
cs
loopne
add
push
cmp
pop
sti
cmp
pusha
add
jmp
jmp
mov
add
test
arpl
xor
mov
jp
add
adc
mov
add
pop
ins
inc
mov
add
sub
mov
(bad)
adc
cmp
out
and
xor
mov
stos
pop
stos
retf
cwde
cmp
cmp
push
ins
mov
mov
inc
add
div
or
xchg
outs
mov
jno
or
cmp
mov
das
push
sub
push
add
push
(bad)
mov
push
loopne
add
cmp
fnstsw
fwait
mov
cmp
mov
or
call
push
out
push
adc
cmp
out
sub
add
jg
ja
aas
sbb
int3
sbb
cwde
(bad)
jo
rol
inc
jo
inc
cmp
sbb
pop
ja
loope
int
inc
jmp
lods
out
int
pop
mov
mov
dec
cmp
sbb
fadd
pop
fld
dec
inc
sahf
sub
fist
stos
in
sbb
adc
push
dec
fcmovnu
inc
fstp
add
add
and
(bad)
lods
jo
es
and
add
cmps
push
loopne
enter
ret
sahf
and
daa
rcr
xor
lock
cmps
pop
fcom
lods
add
add
push
cmps
inc
add
popa
and
jb
ins
int
cmp
add
lahf
and
add
lea
or
add
test
cmp
push
fmul
inc
ins
popa
mov
jno
movs
lds
ins
sub
sbb
movs
cmc
rcl
mov
adc
adc
xchg
adc
add
add
inc
sub
jno
jmp
pop
adc
xor
push
and
imul
shr
daa
sbb
aam
add
test
es
and
add
or
dec
repnz
cmp
lock
inc
mov
or
add
xchg
test
xchg
retf
mov
xor
prefetchnta
aas
xor
loopne
pusha
add
xchg
test
pop
push
xchg
lods
dec
(bad)
xor
in
test
xor
aaa
sbb
inc
dec
or
das
inc
mov
mov
xchg
rcr
xchg
sub
loop
and
imul
push
mov
pop
jmp
add
or
cmp
hlt
pop
xchg
sahf
dec
sub
mov
add
je
sbb
sbb
add
jp
loopne
inc
outs
pop
mov
jl
push
fadd
loopne
push
int3
out
xor
fcompp
dec
sbb
cmp
jae
jecxz
sbb
push
pop
sub
pop
pop
lea
add
dec
dec
stos
out
aad
mov
inc
nop
cmps
push
mov
sub
add
inc
cmp
cmps
outs
adc
bound
push
loopne
repnz
push
or
cmp
loopne
cmps
and
mov
or
ror
jo
push
mov
outs
test
add
or
push
je
add
(bad)
fdiv
pop
addr16
aaa
cmps
inc
adc
or
sti
nop
dec
mov
or
pusha
dec
or
lahf
xor
aaa
stos
add
or
iret
in
push
aaa
mov
out
jb
pop
add
and
adc
inc
xchg
clc
movs
mov
xchg
out
adc
push
cmp
xor
inc
dec
sub
jge
aaa
imul
push
xchg
jo
pop
ss
jmp
push
in
xchg
popf
fsub
dec
dec
loopne
fcomp
rol
pop
or
out
leave
mov
and
xor
adc
dec
xor
test
xchg
adc
add
lods
pop
ja
mov
test
mov
jae
jge
rol
push
lea
jno
fisttp
add
add
lock
popa
or
jp
loop
pusha
add
fsub
jp
test
sub
and
loopne
stos
xchg
pop
call
add
mul
dec
sbb
dec
fld
pop
add
fs
or
sub
push
sub
sbb
pop
push
fcom
inc
jg
mov
jmp
fadd
mov
iret
jae
add
add
dec
push
and
data16
stc
jmp
dec
cmc
in
jg
js
ins
mov
adc
pusha
adc
call
ja
mov
lea
test
and
push
pop
sbb
fiadd
mov
pop
or
and
pop
(bad)
loopne
add
jge
cmp
enter
push
int
dec
mov
dec
scas
in
and
or
jle
pop
xor
and
aam
adc
pop
add
or
inc
hlt
mov
cmp
sbb
lock
xchg
mov
mov
mov
mov
jnp
fmul
or
add
add
ror
les
xor
fisttp
push
retf
and
pop
ds
xor
mov
add
and
loop
fldl2t
aam
cli
mov
data16
xor
mov
pop
hlt
mov
lds
adc
sub
xor
inc
mov
aaa
das
enter
push
jne
sahf
push
popa
or
mov
or
sub
js
add
and
xchg
enter
pop
shl
stos
adc
cld
enter
stc
jno
xchg
or
idiv
rol
out
sbb
add
cmps
inc
sub
dec
and
pop
fwait
xchg
adc
add
cmp
add
mov
or
xor
jo
sbb
or
mov
inc
add
mov
ins
push
dec
mov
daa
add
out
or
cmps
repz
dec
sub
inc
lock
lods
add
or
jnp
mov
dec
data16
gs
fst
cld
and
push
add
ins
pop
aaa
movs
or
ret
ret
jl
(bad)
test
movs
cmps
psubd
add
lea
adc
sbb
xchg
jb
cs
add
lea
sbb
pop
add
cmps
retf
sbb
jl
push
mov
aas
test
jne
dec
or
inc
sbb
mov
sbb
call
clc
adc
shr
xchg
push
sub
add
xchg
sbb
ret
out
add
and
and
and
cwde
(bad)
mov
cmps
daa
cli
daa
adc
xchg
dec
mov
jne
cmp
dec
scas
mov
in
in
jb
ret
cwde
pusha
inc
pop
xchg
adc
xchg
inc
(bad)
nop
mov
lock
or
pop
xor
ds
lahf
sub
shr
jne
push
mov
mov
sub
leave
add
repz
out
aad
daa
sbb
ds
dec
arpl
dec
ja
adc
jmp
fsubr
nop
(bad)
cmp
aas
mov
sbb
push
pop
sub
pop
lock
or
inc
jge
mov
lea
xchg
pop
sub
inc
je
enter
adc
out
inc
fisub
test
inc
sbb
aaa
loop
cmp
xor
out
add
inc
dec
movs
pop
or
mov
xchg
movs
call
(bad)
push
jo
mov
pop
cmp
cdq
loopne
test
dec
push
push
pop
xor
cmps
mov
lods
add
pushf
rol
ss
addr16
loop
je
or
adc
sub
dec
jns
sahf
mov
clc
and
clc
call
ins
jns
ret
je
nop
xchg
or
es
mov
loope
sbb
xchg
pop
(bad)
in
sbb
and
cmp
iret
xchg
push
pop
shr
xor
rcr
xchg
jl
inc
adc
adc
lahf
in
xor
inc
pop
pop
dec
push
test
and
adc
sub
jg
sub
inc
mov
add
and
lahf
push
pop
pop
xchg
int3
push
hlt
in
or
ror
inc
cld
inc
(bad)
fcomip
push
outs
repnz
pusha
cdq
inc
mov
adc
sub
push
loop
addr16
inc
mov
pop
cld
(bad)
data16
mov
pop
jle
pop
inc
sbb
dec
sbb
pop
sti
fbstp
sub
cmp
sub
add
outs
(bad)
movs
inc
imul
cdq
call
add
je
push
mov
rol
pop
push
loop
or
loopne
add
cmp
(bad)
pop
or
jno
sub
es
pop
sbb
sub
sub
loopne
test
xchg
inc
cmp
and
and
dec
pop
daa
push
dec
retf
cmc
dec
cwde
adc
or
pop
pop
inc
retf
and
pop
(bad)
cmps
or
jbe
add
adc
adc
jl
jge
push
mov
in
cmp
rol
pop
add
pop
inc
sbb
xor
icebp
ds
stos
test
push
pop
mov
xchg
sbb
inc
pop
call
vpmacsdqh
xor
sbb
push
inc
fadd
pop
mov
fs
ficom
ja
cmp
xor
hlt
push
jle
cs
push
jb
xchg
stos
fstp
outs
push
popa
xchg
xor
push
call
clc
test
popf
popa
xchg
inc
and
lds
fld
int
shr
cmp
mov
mov
or
add
vmwrite
aaa
inc
pusha
data16
hlt
add
fbstp
(bad)
div
sti
add
cmp
je
cmp
jecxz
adc
and
je
js
loope
aam
mov
test
(bad)
push
lea
sbb
jno
mov
adc
jl
adc
add
add
sbb
cdq
or
pop
and
pop
adc
inc
xchg
test
aaa
fdivr
sbb
fs
xchg
in
int
and
(bad)
hlt
(bad)
out
pushf
shl
or
(bad)
(bad)
jnp
or
das
mul
push
adc
inc
ja
push
mov
outs
dec
xlat
or
sub
in
pop
push
xor
add
add
or
mov
fsubr
mov
pop
adc
nop
ja
lds
or
xor
fcom
xchg
push
aas
add
inc
iret
xchg
xor
das
js
xchg
mov
inc
loope
push
out
test
lahf
pop
cmps
pusha
pop
xor
mov
xchg
imul
jne
jg
scas
adc
add
inc
and
xor
fs
ins
jns
nop
and
outs
mov
icebp
js
sbb
outs
push
cmp
pop
mov
ins
xlat
inc
dec
cmp
jo
lock
push
pop
mov
sub
pop
pop
imul
daa
(bad)
xor
mov
pop
(bad)
dec
fdiv
data16
div
adc
push
xor
call
iret
dec
mov
mov
or
adc
add
inc
das
sahf
es
mov
add
(bad)
dec
mov
dec
xchg
cmps
xor
inc
daa
sbb
(bad)
das
pop
cmc
pop
dec
xchg
or
push
dec
cmp
(bad)
(bad)
jne
add
sub
aaa
ss
adc
fidiv
and
cmp
push
loopne
loope
mov
mov
sub
pushf
or
dec
and
(bad)
in
pusha
pushf
pop
sub
jno
jo
lods
and
mov
inc
cmc
cmp
cmp
daa
(bad)
scas
popf
in
push
inc
push
pop
pop
loopne
push
add
(bad)
shl
loop
jmp
push
cmps
icebp
push
xor
mov
adc
test
adc
inc
cmp
or
pop
je
loopne
inc
cmp
xor
fsub
jo
add
and
jecxz
or
push
mov
pop
pushf
(bad)
imul
pop
adc
test
jb
in
jo
sbb
adc
cs
(bad)
daa
sbb
push
loop
mov
lahf
push
and
loop
jecxz
mov
jno
js
movs
push
lds
add
push
outs
push
adc
xchg
push
xchg
add
jne
mov
imul
mov
jno
adc
pop
push
adc
aaa
ror
(bad)
cmp
lock
adc
jo
sbb
iret
lahf
dec
js
mov
iret
cmp
sbb
iret
daa
ret
addr16
lock
xlat
and
jns
pop
sbb
addr16
or
sbb
xor
aas
sub
mov
mov
adc
imul
or
loopne
mov
enter
(bad)
test
sub
sub
cmp
clc
add
sub
push
sub
rol
xchg
mov
push
or
xor
ret
pop
sbb
add
adc
inc
neg
pushf
cmc
xchg
push
es
js
mov
pushf
neg
and
mov
jl
cmps
or
or
push
or
and
fcom
sbb
neg
pop
mov
mov
sub
or
mov
and
jb
adc
jno
jo
adc
push
or
cmp
mov
dec
fsubr
idiv
xor
jg
shr
dec
jb
(bad)
call
pop
daa
or
dec
out
loop
or
out
sub
jle
or
das
or
arpl
xor
call
and
sbb
sbb
out
sbb
xor
push
adc
cmp
or
jmp
cmp
retf
adc
sbb
dec
mov
jmp
xor
dec
bound
adc
add
aam
stos
je
in
jecxz
push
dec
std
ret
mov
jmp
mov
das
mov
or
mov
packssdw
ret
and
rcl
pushf
or
nop
jb
dec
cli
xor
or
sbb
cmps
or
shl
test
pop
jno
inc
sbb
mov
loope
mov
pop
jg
xor
out
xchg
sub
sti
mov
add
dec
jmp
pop
xchg
adc
clc
sti
nop
push
push
fld
dec
dec
dec
or
std
mov
xor
fimul
ds
sub
and
or
or
xor
xchg
xchg
adc
push
xchg
push
mov
mov
jnp
js
mov
add
clc
jb
jne
pushf
sbb
je
inc
das
neg
test
or
sbb
scas
mov
test
sbb
cmp
pop
cmp
lahf
(bad)
push
xchg
add
in
push
pop
push
or
loope
aad
sar
les
add
aad
or
sub
push
je
xchg
out
jb
in
fnstcw
sub
jl
fs
jns
sbb
ins
jns
iret
daa
push
inc
mov
call
xchg
cs
dec
das
pcmpeqb
cmp
adc
mov
daa
das
jge
rcl
rcr
mov
aas
mov
inc
mov
sti
mov
xlat
sbb
push
in
retf
loop
gs
mov
cmp
hlt
sub
daa
out
dec
(bad)
push
out
xchg
pop
popa
repnz
leave
mov
push
mov
lahf
(bad)
sub
xor
fadd
dec
mov
jge
pop
js
and
push
jl
cli
jle
fsin
pop
(bad)
jg
lea
dec
cmp
jg
push
jl
test
jge
mov
add
ja
jmp
lds
cmp
xor
add
push
add
dec
clc
test
xor
mov
lock
mov
or
dec
jle
retf
or
dec
cmp
adc
mov
jne
sbb
add
inc
imul
inc
add
push
or
call
pop
lock
mov
data16
cld
sub
shr
add
and
mov
add
sbb
cmp
(bad)
mov
add
test
in
data16
je
lds
sbb
mov
xor
ret
pop
arpl
stos
popa
or
pop
mov
ja
ins
fsubr
pop
jecxz
xchg
pushf
lods
je
adc
loope
pop
fs
xor
pop
jecxz
mov
jne
sbb
test
lock
jmp
adc
adc
pop
pop
xor
mov
test
test
and
pop
push
jo
jo
sbb
mov
and
dec
and
mov
pop
and
pop
sbb
je
in
xor
ja
sbb
or
and
mov
nop
test
add
inc
addr16
or
pop
xor
sbb
js
adc
or
dec
lea
adc
dec
inc
lea
rcr
sbb
xchg
sbb
call
dec
inc
lea
jb
adc
loopne
(bad)
sbb
dec
push
ret
call
inc
or
adc
jo
invd
mov
sbb
xor
mov
push
mov
pop
out
mov
mov
jecxz
cmp
sub
ins
inc
pop
out
xor
adc
inc
mov
mov
loopne
test
jge
in
test
fsubr
sub
arpl
mov
pop
aas
ror
mov
outs
sub
cmp
or
imul
ret
cmps
int3
movs
lock
add
cmp
adc
lahf
push
loop
das
jne
pop
outs
lock
cmp
mov
out
inc
sub
sub
or
pop
lahf
cld
jle
scas
xchg
sbb
call
xchg
aam
push
(bad)
adc
stos
xor
mov
adc
das
add
dec
inc
sbb
dec
mov
jl
dec
and
or
push
or
adc
lahf
loopne
inc
sbb
pop
mov
sbb
lahf
mov
mov
lahf
xchg
ret
mov
lahf
fsub
adc
push
or
mov
outs
mov
adc
aam
sbb
xchg
jno
jno
xchg
test
cmp
hlt
push
jle
pusha
enter
dec
out
mov
adc
cmp
dec
(bad)
adc
daa
dec
sbb
clc
lea
sub
inc
xor
(bad)
int
call
adc
push
pop
hlt
dec
dec
or
cmp
jl
(bad)
iret
(bad)
shl
adc
or
add
(bad)
out
fdivr
(bad)
(bad)
(bad)
je
jge
ret
in
je
pop
dec
xchg
dec
mov
xchg
aaa
inc
mov
pop
movs
cwde
call
ja
and
clc
sbb
xchg
push
inc
cs
shr
mov
dec
inc
call
mov
fs
jg
cmp
push
sbb
hlt
(bad)
into
jns
cmp
adc
jnp
div
test
adc
inc
ja
popa
mov
hlt
dec
push
mov
pusha
push
ret
daa
pop
add
sbb
ja
add
push
addr16
sub
xor
fsub
aas
arpl
rcl
iret
aas
sbb
push
ins
ret
adc
xchg
cmp
cmp
enter
lahf
sub
sbb
cmps
pusha
(bad)
mov
xor
pop
mov
pusha
pop
push
jne
lea
jmp
ret
syscall
jl
pop
adc
int
jns
fs
ins
fadd
inc
mov
stos
jb
dec
iret
hlt
cmp
sub
or
mov
outs
push
ja
push
bound
push
ror
add
dec
inc
dec
cmp
(bad)
bound
jp
fcomp
push
jmp
add
cwde
xor
dec
aam
push
and
out
in
and
mov
(bad)
neg
dec
lea
cs
dec
add
pusha
adc
push
pop
rol
popa
les
push
mov
push
or
ror
adc
bound
jb
sub
xor
in
ds
mov
lods
and
mov
mov
idiv
inc
test
mov
nop
push
xor
pop
or
data16
pop
pop
inc
xor
stos
neg
dec
dec
cld
sbb
or
and
mov
fadd
and
mov
and
mov
(bad)
push
adc
sub
mul
adc
push
imul
add
dec
add
xchg
add
jmp
imul
mov
les
dec
js
or
sbb
push
cmp
outs
shrd
mov
mov
and
inc
enter
lock
in
mov
and
bound
push
or
cmp
or
mov
xchg
mov
cwde
cs
loope
ret
in
es
ins
mov
(bad)
adc
sub
andnps
adc
push
dec
pop
add
mov
arpl
mov
mov
je
test
mov
add
or
and
leave
inc
pop
adc
pop
bound
aas
pop
sub
push
imul
mov
shr
pop
sub
pop
loop
sbb
test
pop
je
arpl
sbb
scas
in
and
xchg
mov
(bad)
and
aad
inc
mov
sbb
adc
popa
mov
or
xchg
test
pop
loop
xor
sub
jg
inc
or
mov
mov
mov
mov
sbb
test
rcl
sar
push
in
push
mov
adc
std
and
jae
add
inc
scas
retf
cmp
and
inc
xchg
repz
(bad)
pop
or
sub
test
sub
test
scas
sub
sub
(bad)
sbb
call
js
inc
nop
inc
loope
jmp
out
int3
sub
inc
in
fcmovne
adc
ins
pop
shl
cwde
xchg
mov
pop
xchg
adc
sub
push
and
or
sti
or
mov
push
or
sub
or
inc
clc
out
outs
call
ret
out
and
push
adc
and
adc
or
cmp
inc
daa
repnz
xchg
movnti
hlt
xor
add
mov
mov
addr16
jb
je
xor
xchg
sub
cmp
or
xor
add
out
xor
cdq
cmps
push
pusha
jmp
mov
mov
inc
jp
and
div
xchg
stc
mov
push
add
add
pop
push
(bad)
xchg
unpckhps
mov
movs
jg
xchg
mov
lahf
or
mov
cmp
add
sbb
xor
push
aas
jg
mov
push
in
hlt
js
xor
jg
mov
adc
dec
ffreep
add
pushf
add
fld
in
arpl
push
ficom
mov
add
mov
pusha
adc
mov
or
test
arpl
xlat
hlt
std
push
lea
pusha
sbb
or
fist
sub
fucomip
popf
mov
sub
push
fs
lods
mov
mov
push
adc
aas
cmc
test
xchg
sahf
cmc
pop
ret
sti
mov
adc
xchg
xor
nop
adc
dec
pop
adc
dec
inc
lahf
aas
and
aam
mov
leave
sub
repz
push
and
lods
mov
mov
xchg
mov
pushf
mov
xchg
sbb
mov
mov
mov
add
fist
stos
mov
les
fidiv
cmp
sbb
call
icebp
int
cmp
pop
pop
fcomip
cld
xor
adc
push
hlt
mov
out
push
sbb
ret
mov
mov
(bad)
mov
out
cmp
sbb
jl
cwde
mov
xor
jecxz
adc
test
rcl
call
and
sbb
ficom
jo
cs
ja
sub
out
and
pop
add
push
lahf
leave
mov
test
cmp
dec
pushf
sbb
ins
daa
xchg
sub
pusha
mov
lock
xchg
sub
add
push
adc
loope
mov
not
and
jl
adc
shl
jg
lock
mov
add
push
add
add
xchg
xlat
add
push
mul
lahf
mov
add
je
dec
in
test
add
cmp
cmp
xchg
push
jnp
dec
push
mov
mov
pop
and
mov
cmps
lock
lods
pop
pop
ror
pop
sub
dec
add
pusha
adc
push
pop
into
shl
loopne
mov
pop
jmp
and
and
push
clc
loopne
ds
sub
loopne
dec
fdiv
fadd
and
mov
sbb
lahf
sbb
add
popf
in
cmp
pop
pop
loopne
adc
(bad)
xlat
sub
inc
retf
aad
daa
or
jno
or
push
add
lahf
add
ror
cld
popa
push
stos
and
inc
std
pusha
stc
enter
add
popa
xchg
xor
shl
add
fsub
and
sbb
sub
das
fs
inc
and
jecxz
adc
push
jo
adc
imul
cmp
push
ror
jb
sbb
mov
das
not
jp
adc
mov
enter
das
out
ret
pop
pop
inc
pop
pushf
rol
xchg
xor
jne
pop
adc
test
push
dec
jmp
pop
xchg
ror
dec
aas
push
push
fld
daa
dec
dec
or
std
mov
cdq
stos
adc
or
inc
dec
adc
out
jo
ffreep
or
pop
xor
xchg
adc
xchg
ret
pop
and
mov
mov
inc
lock
jbe
adc
(bad)
fcomp
ins
test
jne
jne
xor
pushf
inc
dec
neg
test
sub
iret
(bad)
adc
xchg
mov
mov
inc
sbb
out
ret
pop
cmp
lahf
add
push
mov
out
aam
jmp
xchg
push
pop
cmps
pcmpgtw
xchg
push
lock
pushf
dec
movs
mov
push
mov
mov
adc
les
push
add
sbb
and
adc
repnz
inc
aas
cli
pushf
dec
cmp
mov
hlt
mov
imul
test
mov
inc
mov
push
in
fdiv
loopne
lahf
mov
mov
arpl
lahf
loop
sub
mov
xor
cmp
lock
aas
inc
adc
adc
pop
lahf
push
loop
fdivr
pop
mov
dec
test
cmp
cmps
loopne
pusha
movs
push
and
cmp
popf
adc
lahf
add
lahf
sbb
or
leave
sub
ds
xor
fbstp
mov
neg
mov
cmps
adc
mov
or
mov
mov
aad
daa
(bad)
mov
rcl
icebp
adc
mov
and
mov
cwde
pop
adc
adc
mov
in
mov
stos
jne
sahf
je
nop
fstp
and
jae
ds
pop
je
cdq
daa
movs
adc
adc
cmp
add
test
sbb
cmp
icebp
add
mov
jo
push
lahf
mov
and
icebp
les
sbb
mov
nop
sub
inc
dec
iret
test
movs
dec
ret
mov
cwde
es
pop
outs
push
stos
or
push
xor
dec
lods
ja
leave
and
imul
jo
and
mov
mov
xor
jl
stos
pusha
xor
add
inc
push
and
xlat
not
bound
cmc
xchg
test
cmp
mov
mov
push
nop
pusha
neg
mov
push
neg
cmp
loop
pop
call
loopne
loopne
imul
mov
and
div
xchg
ret
mov
test
or
test
jbe
and
(bad)
adc
mov
jnp
push
and
scas
xor
scas
sbb
or
mov
mov
les
or
adc
adc
sbb
dec
pushf
loope
sbb
and
and
jecxz
sbb
fldcw
ror
imul
jle
bound
add
test
scas
sbb
add
bnd
fadd
inc
not
sub
repnz
js
jns
and
fcomp
jno
mov
outs
je
pop
push
test
push
scas
inc
adc
(bad)
pushf
sar
rcl
xor
movs
add
dec
ror
imul
mov
loope
inc
out
scas
dec
lds
fdivr
mov
sbb
hlt
and
mov
in
push
xchg
cmp
pop
into
pop
dec
adc
inc
jnp
mov
ret
(bad)
into
mov
adc
push
pop
pop
les
mov
pop
lods
int
push
adc
rcr
bound
or
loopne
loopne
pop
mov
sub
pop
push
pop
and
pop
or
pop
inc
ds
dec
repnz
(bad)
jmp
mov
out
retf
mov
sbb
das
pop
sbb
dec
jb
xchg
mov
pop
mov
scas
sub
jg
push
xchg
sbb
or
nop
call
push
popa
xchg
daa
scas
call
imul
ret
mov
mov
push
or
cli
retf
push
sbb
aaa
push
jmp
cmp
push
popa
cmp
or
mov
push
mov
clc
add
sbb
xor
scas
xor
sbb
cmps
adc
and
adc
cmp
repz
das
or
adc
jl
push
mov
inc
das
sbb
and
add
inc
aad
push
aaa
inc
sbb
shr
aaa
sub
shr
inc
and
call
scas
fmul
cmp
mov
cwde
adc
and
mov
adc
lea
adc
rcl
test
cmps
pop
adc
lahf
push
sub
inc
add
or
mov
xor
addr16
or
or
pop
jne
sbb
inc
mov
cwde
push
pop
adc
stos
jg
sbb
pop
js
cmp
daa
sub
adc
xchg
and
cmc
or
mov
xor
mov
mov
enter
mov
jmp
and
or
or
inc
mov
adc
jbe
(bad)
loop
or
mov
je
fadd
lea
lea
pop
jno
mov
mov
dec
add
popf
xor
push
rol
xchg
adc
jo
xchg
fcom
das
cmp
iret
mov
out
or
xchg
mov
daa
push
add
sub
ss
cmc
aaa
test
jo
loope
xchg
adc
sub
xchg
test
jb
inc
and
inc
inc
pop
jb
ret
mov
pushf
cmp
test
mov
mov
sbb
xchg
xchg
add
cmp
xor
daa
xchg
sbb
cmc
leave
sub
ds
test
fdiv
fadd
sahf
lods
and
dec
xchg
mov
inc
fimul
cld
pop
loop
and
xchg
(bad)
xchg
ret
sbb
sar
xchg
es
cmp
mov
xchg
and
scas
rcl
xchg
sbb
(bad)
adc
xchg
ror
mov
fdivr
adc
cmp
push
adc
dec
fadd
nop
push
jo
xchg
paddq
xor
outs
and
xchg
push
scas
push
add
ror
adc
clc
lods
push
in
add
or
inc
or
add
call
outs
lods
dec
lahf
jb
lods
inc
mov
add
push
int3
lods
in
out
adc
mov
mov
es
or
sbb
mov
mov
arpl
dec
cmp
cmp
mov
into
adc
popf
inc
mov
out
ret
and
push
pop
in
pushf
mov
and
mov
ret
bnd
push
adc
mov
mov
inc
std
(bad)
adc
iret
enter
nop
xchg
and
cmp
xchg
lea
into
pusha
neg
dec
and
xchg
mov
movs
mov
adc
iret
push
add
sub
rcl
cs
sbb
mov
pop
push
push
das
test
pushf
test
push
(bad)
mov
leave
or
in
fdivr
adc
mov
cmp
add
mov
and
fidivr
adc
sub
int
push
and
cmp
sbb
xor
push
daa
add
xor
or
dec
lea
iret
fadd
leave
sub
(bad)
lods
cmp
fdiv
and
mov
cmp
sbb
dec
xor
loop
test
adc
enter
or
mov
out
fsubr
xor
loop
popa
es
sbb
je
add
add
pushf
mov
inc
sub
lock
pop
sar
test
xor
das
fwait
inc
and
mov
fiadd
push
push
(bad)
cld
xor
sbb
test
xor
add
sbb
pop
loop
mov
dec
lds
daa
nop
inc
imul
sub
or
popf
jae
pop
ja
cwde
sub
and
mov
in
jo
xchg
adc
xchg
ficom
inc
mov
pop
hlt
dec
pushf
test
es
sub
sbb
add
pop
adc
push
in
inc
adc
cwde
lea
daa
cli
shl
adc
sbb
fs
xchg
cmp
lock
dec
scas
mov
in
in
push
xchg
popa
inc
pop
xchg
and
and
xlat
mov
div
or
pop
xor
adc
loope
mov
loopne
or
adc
scas
je
out
sbb
stos
jns
stc
cmp
arpl
add
jns
mov
mov
in
mov
pop
sbb
rcl
aas
pop
lahf
inc
dec
push
arpl
clc
mov
mov
aas
pop
mov
push
stc
adc
gs
test
leave
sub
(bad)
mov
and
pop
or
retf
outs
or
cmps
xchg
xor
xchg
adc
and
in
add
mov
or
inc
mov
daa
xor
inc
(bad)
jb
icebp
mov
xchg
test
add
mov
mov
mov
mov
jne
pop
xor
(bad)
popf
stos
(bad)
dec
out
mov
mov
sbb
pop
stc
adc
ja
xchg
aad
mov
push
inc
xor
lods
cmps
out
int3
or
out
xchg
in
loope
dec
lock
adc
pop
out
enter
mov
push
add
sub
push
aas
out
enter
loopne
aad
lods
lea
push
and
out
sub
ds
out
sbb
xor
lods
and
mov
inc
xor
and
sbb
adc
inc
lea
iret
fcomp
loopne
jecxz
sub
sub
sbb
sub
sbb
sbb
retf
jb
add
sbb
data16
retf
popa
jo
out
fsub
add
add
outs
ud0
push
mov
or
sbb
add
xor
std
hlt
je
cmp
xor
jno
add
inc
jno
jo
test
cld
mov
jmp
les
fcom
pop
push
das
pavgw
dec
paddsw
imul
mov
add
dec
and
cmps
sbb
mov
and
or
aam
inc
xor
in
das
mov
cs
pop
jg
enter
mov
push
xchg
pusha
sbb
arpl
mov
dec
dec
or
std
sbb
out
mov
inc
add
clc
sbb
or
pop
xor
and
push
inc
xchg
je
or
cmps
cdq
loopne
pop
sbb
inc
pop
xchg
jb
mov
adc
jne
sbb
mov
inc
jbe
sbb
pop
sbb
push
push
cmps
inc
sbb
adc
mov
pop
cli
ret
sub
pop
rcl
cmps
pop
cli
lds
pop
(bad)
jmp
in
sbb
xor
add
push
pop
das
out
add
jg
mov
lods
pop
push
jo
dec
das
jge
jl
pushf
jg
mov
or
add
inc
jg
mov
push
je
retf
loop
fs
cmp
ret
hlt
out
dec
or
jo
out
xor
push
add
add
cwde
je
faddp
pop
add
xor
lea
lock
loopne
pop
ret
cwde
xchg
shl
mov
jae
movs
add
cmp
jae
nop
mov
(bad)
in
pop
xchg
cwde
mov
aam
cmps
xchg
inc
dec
sbb
ss
lea
dec
cmp
jg
jl
jmp
pop
test
jge
mov
jbe
sar
adc
test
test
push
add
dec
adc
movs
int3
pop
jp
icebp
adc
or
es
or
or
dec
cmp
mov
rol
or
dec
loopne
add
inc
test
call
jge
pop
lock
mov
sub
shr
add
mov
in
aaa
shl
adc
jmp
in
add
lea
jmp
imul
jl
rcl
movzx
cmp
xor
retf
mov
enter
add
std
xor
push
xor
mov
sbb
pop
adc
inc
jg
daa
push
test
dec
xor
into
adc
jns
mov
fcom
bnd
test
dec
xor
xchg
inc
(bad)
nop
pop
adc
sti
push
cmp
and
xchg
push
pop
fcom
loope
fld
or
addr16
inc
xchg
mov
inc
mov
push
push
mov
pop
mov
adc
lea
inc
mov
push
ja
push
xchg
es
inc
dec
pop
out
js
xchg
(bad)
hlt
mov
inc
clc
inc
dec
test
sbb
sub
pop
test
or
jae
daa
shr
add
or
adc
mov
jecxz
cwde
mov
rol
test
test
mov
sub
jmp
sbb
ds
add
mov
clc
mov
push
mov
mov
dec
cmp
cmp
jle
sbb
jl
xor
js
ror
push
sub
jl
rcl
js
fsubr
inc
add
sbb
xchg
mov
loopne
sbb
sub
or
pop
je
or
add
pop
pop
push
mov
adc
int
push
jne
pop
pop
stc
loop
shl
pushf
outs
pop
add
add
and
add
mov
movs
bound
push
test
bnd
add
dec
or
xchg
dec
push
push
mov
pop
mov
sub
ror
lea
dec
in
cmps
inc
pop
and
jmp
mov
pop
or
xchg
and
in
xlat
mov
arpl
inc
add
add
cmp
mov
(bad)
fs
add
inc
lahf
push
and
pop
lahf
mov
leave
inc
sbb
pop
or
in
movs
out
or
les
push
lock
repnz
or
ja
cmps
add
pop
fdivr
push
xor
lds
cwde
jg
cli
mov
das
or
cld
dec
push
adc
or
add
add
pop
inc
movs
loope
icebp
mov
or
adc
pusha
inc
pop
inc
push
add
add
ficomp
add
and
and
push
and
or
bound
sbb
or
adc
and
push
or
add
add
mov
push
push
jnp
pusha
pop
sub
jnp
ja
adc
push
pop
jl
nop
lea
jne
test
lods
inc
int3
jne
cmp
pusha
ret
out
sub
add
ja
dec
ja
pop
jecxz
push
inc
test
jmp
retf
and
pop
dec
sbb
sahf
push
rcr
stos
xor
xchg
or
outs
cmp
icebp
mov
push
out
cmps
and
fild
adc
jns
icebp
xor
xchg
or
inc
add
push
cwde
add
inc
test
addr16
stos
mov
push
out
or
inc
pop
fiadd
aam
aam
outs
mov
sbb
ret
mov
movs
sbb
dec
daa
or
xor
dec
out
ja
jo
add
sbb
mov
dec
xchg
push
sub
or
jmp
lock
movs
mov
ret
cs
aam
add
(bad)
push
out
pop
lock
out
mov
push
dec
push
dec
cmp
add
inc
cli
scas
lods
out
mov
and
in
xor
xchg
add
cmp
jge
data16
jecxz
jle
sub
jecxz
inc
test
hlt
adc
mov
in
inc
lds
mov
pop
addr16
sub
and
jl
push
and
mov
nop
mov
sbb
in
lds
or
jb
mov
or
push
xor
push
and
ret
pusha
add
xchg
cmp
scas
push
in
push
fmul
push
call
or
repnz
sub
push
jl
in
pop
call
jne
nop
adc
xchg
jmp
add
dec
add
xchg
inc
mov
ret
sub
pop
add
mov
js
inc
in
or
ret
out
jo
das
mov
out
adc
stc
adc
xchg
or
sbb
out
mov
out
or
cld
cdq
jecxz
sbb
or
and
sahf
packssdw
aas
dec
adc
popa
sub
push
sub
stc
nop
pushaw
daa
out
ret
pop
or
push
sbb
aaa
jmp
xor
mov
inc
pop
pop
(bad)
adc
push
inc
aaa
pop
pusha
adc
add
pop
push
lock
les
or
test
sbb
or
and
in
xchg
(bad)
std
cmp
add
lea
movs
cmp
loope
pop
aas
test
sbb
pop
inc
call
aaa
test
jnp
inc
jns
aam
inc
mov
push
xor
lea
xor
pop
push
lea
lahf
bswap
or
cmps
or
or
xor
fmul
and
xor
jmp
or
adc
add
jp
or
add
jle
jne
popa
or
cmp
xor
push
jne
and
pop
scas
fsub
adc
and
jge
(bad)
inc
(bad)
mov
cmp
or
cwde
fcomp
loopne
or
jbe
or
(bad)
enter
or
pop
pusha
inc
inc
mov
inc
push
cmp
xor
add
nop
xchg
addr16
loopne
mov
loop
(bad)
fcom
lahf
cmp
xchg
outs
add
or
mov
sub
pop
push
and
or
je
ss
mov
test
js
or
lea
xor
push
sub
pop
sub
adc
adc
push
and
retf
outs
adc
or
xchg
inc
or
jg
in
push
test
ret
add
inc
outs
ins
jo
jb
jae
outs
cmp
cld
push
push
push
or
je
ins
gs
outs
outs
imul
jae
ds
data16
add
sbb
jae
pop
cs
test
and
gs
jne
je
add
into
add
fbld
int3
add
push
mov
add
ret
add
jmp
mov
aas
int3
and
push
sub
xor
data16
inc
cs
idiv
jbe
sbb
cs
push
push
push
add
jns
fchs
and
shl
out
push
adc
and
pop
js
add
movs
sbb
les
mov
jle
cmp
xor
add
inc
add
inc
fcom
iret
mov
xor
and
and
ins
xor
clc
jno
add
das
cmp
addr16
add
gs
data16
mov
arpl
mov
inc
jb
or
arpl
push
pcmpgtd
or
or
xor
push
jnp
or
inc
add
push
jl
ins
rol
jp
adc
ds
sub
push
add
ds
sar
or
push
imul
pushf
loop
iret
push
xor
pop
in
ret
push
or
je
adc
pop
cmp
(bad)
inc
dec
xor
push
popa
arpl
xor
xor
and
push
mov
in
outs
je
int
sbb
adc
pusha
ins
push
inc
je
daa
lock
push
imul
popf
out
jl
mov
mov
ret
pop
shr
(bad)
adc
jmp
xor
pop
and
loopne
add
daa
je
add
sbb
cmp
adc
pop
add
je
pushf
lods
jo
les
add
jo
add
inc
mov
inc
inc
or
bound
xor
sbb
mov
sbb
mov
int3
xchg
mov
lahf
push
test
mov
mov
(bad)
sbb
inc
and
cmp
add
lods
push
push
ins
outs
or
push
jnp
sub
push
add
sub
sysret
dec
jae
add
nop
stos
xor
popa
pop
out
jae
sub
or
out
adc
pop
adc
aad
jnp
test
(bad)
mov
mov
add
and
add
es
adc
popa
jns
push
push
add
sub
pop
int3
(bad)
js
dec
aas
or
rol
mov
mov
push
adc
cmps
or
pusha
xor
push
xor
and
jne
xlat
mov
fimul
dec
outs
or
inc
jbe
mov
pushw
fsubr
js
push
push
rcr
dec
bound
adc
mov
sub
push
push
push
pop
rcl
pop
add
adc
sub
cmove
dec
mov
adc
inc
push
xchg
mov
push
outs
jne
lds
pop
(bad)
(bad)
jns
(bad)
test
sar
outs
cdq
sbb
dec
push
and
inc
jne
arpl
cmp
mov
add
neg
pop
sub
inc
outs
das
test
push
outs
sub
idiv
cmp
push
add
sub
mov
add
sub
add
add
mov
xchg
inc
dec
enter
jo
xor
hlt
jmp
or
push
adc
push
add
out
xor
mov
xlat
push
inc
jb
int3
add
and
push
and
add
xor
sub
mov
stos
jle
or
jle
xchg
mov
or
mov
inc
inc
xchg
sub
and
or
xor
hlt
mov
inc
mov
lea
pop
ins
pop
inc
jne
cmp
push
fidiv
jl
jg
push
xor
push
add
xor
inc
jg
fidiv
sub
call
clc
inc
push
add
xchg
sub
push
mov
sub
mov
inc
xsaves
jb
or
dec
shl
loop
jne
into
lock
xchg
jae
jae
inc
inc
sub
popf
inc
sbb
inc
xchg
pop
fldcw
dec
and
sahf
xchg
mov
bndstx
push
dec
test
stos
icebp
push
dec
cwde
mov
fs
push
jae
xor
data16
fisub
xor
cmp
jns
xor
xchg
pushf
mov
loop
xor
dec
inc
sahf
pushf
sti
inc
xor
mov
jmp
daa
daa
mov
xchg
xchg
xchg
push
je
hlt
aas
fnstsw
sahf
fnstenv
(bad)
dec
pop
lods
pop
fld
xchg
push
sbb
push
sub
sti
sub
shl
in
stos
mov
sbb
sbb
cmp
cmps
dec
(bad)
dec
or
push
fmul
inc
pop
add
or
jno
sbb
push
hlt
inc
and
jae
daa
mov
sbb
jns
dec
gs
dec
sub
add
cmp
adc
add
dec
jae
push
push
adc
or
inc
push
popa
push
adc
push
dec
jg
mov
sub
inc
ja
add
fs
and
sar
jmp
add
arpl
add
push
popa
outs
addr16
xchg
sub
ins
push
js
push
popa
sbb
add
movs
add
cdq
int
add
jbe
adc
jecxz
sbb
sahf
movs
nop
nop
outs
add
add
adc
cmc
enter
xor
add
xchg
add
pusha
ud2
or
dec
add
and
call
sbb
push
mov
dec
call
lea
dec
jns
mov
sub
or
sub
mov
imul
test
and
dec
add
push
rol
adc
ror
addr16
or
add
sbb
push
sbb
lea
add
adc
fadd
push
push
inc
rcr
pop
jle
jmp
or
inc
js
jo
cdq
sub
add
stos
cmps
push
outs
push
inc
xor
push
nop
dec
sahf
pushf
scas
pop
cmps
cmp
cmps
sbb
stos
pusha
repz
push
movs
loopne
rcr
(bad)
xchg
or
in
mov
xchg
(bad)
loope
and
xor
lds
or
fidiv
dec
jno
push
push
jg
das
mov
fmul
dec
out
dec
popa
pop
and
mov
popa
pop
xor
lds
es
dec
push
es
out
xor
cmp
jmp
dec
pushf
es
imul
call
fcmovb
je
cmp
dec
popw
cmps
mov
xchg
nop
push
imul
cmp
cmp
rcr
adc
sahf
jns
or
shl
mov
dec
sbb
fisttp
mov
inc
jl
jmp
pop
lock
sar
dec
add
or
sbb
loop
jns
or
int3
mov
and
stos
jb
mov
nop
pusha
and
add
dec
test
(bad)
dec
push
ins
mov
jae
ret
mov
xor
pop
push
outs
inc
sbb
inc
push
dec
xor
adc
cmp
sub
xchg
outs
out
jbe
idiv
mov
pop
stos
inc
inc
mov
sub
mov
shl
pop
push
or
ror
adc
test
adc
cmp
inc
or
sbb
adc
ror
mov
fidiv
or
arpl
add
jp
xor
mov
dec
mov
inc
ret
push
mov
pop
dec
sbb
or
or
cmp
add
push
cmp
stos
push
bndldx
mov
pop
adc
mov
out
pop
and
sbb
or
xchg
fbstp
or
scas
popf
add
cmp
push
es
xchg
add
ds
sub
push
lock
clc
push
add
dec
dec
pop
mov
xlat
inc
mul
shl
jg
xchg
inc
xor
inc
sub
sti
jg
push
jg
es
pop
pop
mov
das
and
fild
icebp
pop
outs
mov
inc
mov
and
fucomip
pop
add
jbe
cmp
push
cmp
ds
inc
icebp
xchg
fild
aas
jl
dec
neg
call
clc
nop
push
enter
popf
mov
test
jle
jmp
or
rcl
sar
inc
(bad)
or
ins
mov
add
(bad)
jne
das
fst
fmul
leave
ins
mov
sbb
xor
xchg
leave
ret
inc
mov
repnz
sub
cmp
add
sbb
dec
xchg
inc
sahf
pushf
pushf
mov
dec
dec
dec
dec
pusha
xchg
jecxz
inc
daa
daa
daa
and
call
aas
inc
movd
mov
pop
int
into
add
mov
mov
es
pushf
inc
xchg
push
sar
das
sbb
xchg
jg
xchg
sub
xchg
dec
or
inc
shl
dec
fld
mov
dec
mov
xor
adc
push
mov
pop
mov
jg
je
xor
dec
xlat
or
sbb
push
jmp
stos
or
outs
sub
push
or
jbe
shr
and
ja
pop
mov
aas
jae
adc
push
(bad)
je
xchg
aas
rol
ds
or
ins
loop
aas
fcom
and
xchg
ins
call
push
mov
call
shr
cwde
sub
aas
or
cmp
push
aas
mov
xchg
loopne
aad
loopne
aas
jno
add
and
push
xchg
aas
movs
sti
push
mov
xchg
add
jae
shl
xchg
aas
and
ins
xchg
cdq
lea
sbb
nop
cwde
sub
cmp
dec
add
adc
movs
adc
mov
xchg
sbb
and
xchg
mov
(bad)
call
scas
std
inc
nop
add
jmp
dec
add
out
mov
aaa
add
or
ins
push
jmp
out
push
jmp
push
add
pop
or
add
and
enter
xchg
xor
mov
cld
adc
push
les
out
pusha
sub
nop
stos
push
adc
sbb
out
xchg
nop
sub
stos
je
out
mov
mov
inc
out
xor
repnz
jmp
fmul
mov
sub
les
(bad)
pop
push
out
mov
fdivr
out
sub
sub
push
stos
in
shr
arpl
mov
inc
pop
rcr
dec
or
movs
dec
mov
mov
cld
sbb
sub
aaa
jns
das
call
loopne
xchg
cmp
xor
(bad)
xchg
inc
das
mov
push
femms
stos
das
inc
cmp
cmp
aam
mov
sbb
aas
in
hlt
adc
mov
sbb
addr16
movs
xlat
xor
cmp
les
jmp
mov
mov
ds
and
or
and
inc
fld
dec
dec
push
push
es
das
test
jecxz
inc
jo
es
nop
jne
retf
scas
div
sar
rcr
fsub
push
or
test
aas
or
ret
das
gs
sbb
leave
sbb
cmp
xor
shr
ins
test
call
inc
xchg
push
pop
pop
or
call
repz
push
ret
dec
lds
movs
cmp
mov
dec
outs
out
loopne
mov
das
pop
dec
or
push
mov
mov
jnp
call
inc
mov
inc
inc
ds
jecxz
fsubr
or
jp
es
sbb
stos
pop
jle
pushf
in
or
pop
(bad)
sti
ror
sahf
mov
stos
mov
xchg
cmc
xor
mov
fs
sti
dec
push
xchg
mov
lock
cdq
push
icebp
mov
je
leave
enter
push
sub
leave
leave
leave
jb
iret
add
fs
mov
repnz
push
push
mov
mov
movups
cmp
test
(bad)
xor
inc
shr
xchg
es
cmp
cmps
sub
lods
dec
pop
mov
cwde
push
dec
or
fucomp
inc
jnp
dec
out
pop
push
mov
daa
pop
fld
inc
xor
test
call
fst
movs
push
fwait
jl
fld
dec
aaa
lock
mov
aad
cmp
sub
movs
mov
ins
push
stos
or
outs
test
mov
or
push
gs
ja
dec
push
xor
inc
(bad)
les
shl
xchg
out
loopne
fnstsw
lods
or
dec
pop
jp
fstp
push
xchg
and
inc
lea
movs
add
pop
mov
mov
fisttp
adc
sub
ins
movs
jnp
dec
iret
dec
add
rcr
sbb
rcr
add
rol
mov
leave
or
xchg
sbb
and
ins
xchg
xchg
call
(bad)
and
popf
dec
adc
xchg
adc
xchg
fld
mov
xchg
outs
test
fst
frstor
(bad)
pop
mov
mov
nop
bound
dec
jae
sar
add
ret
push
aaa
add
ret
mov
fadd
push
mov
imul
mov
(bad)
and
jae
cmp
sub
fstp
dec
inc
jb
mov
adc
fst
fcmovbe
nop
jge
inc
sti
mov
frstor
pop
mov
das
or
rcr
loopne
fcom
dec
frstor
inc
or
fisttp
jno
sbb
xor
rcr
adc
loop
sbb
fnsave
(bad)
fidivr
leave
or
push
sub
inc
add
imul
push
mov
imul
lods
mov
call
dec
pop
fs
sbb
imul
inc
cmp
out
scas
jl
sbb
push
xor
pop
adc
push
sbb
push
or
mov
or
addr16
and
xor
fcom
inc
pop
movs
(bad)
clc
inc
pand
add
add
adc
add
pop
imul
or
cmp
xlat
inc
mov
je
pop
push
push
cmp
in
aad
mov
adc
inc
test
cmp
push
and
dec
and
and
clc
fxrstor
inc
add
imul
add
or
test
scas
sbb
push
pusha
inc
ja
mov
add
cdq
pop
pop
out
ja
cmp
shr
mov
cmp
es
das
jne
outs
das
test
mov
arpl
xor
pushf
nop
dec
push
stos
inc
jbe
add
imul
fdivr
or
and
cmp
dec
fst
push
or
sbb
sub
movs
fst
xchg
ins
xchg
pusha
mov
addr16
nop
fs
xchg
sbb
clc
mov
push
adc
lods
fwait
stc
rcr
dec
lock
movs
(bad)
pushw
shr
popa
(bad)
cmp
fisttp
dec
push
mov
pushf
add
aam
call
or
jo
sahf
pop
add
lea
stos
pop
(bad)
jmp
sub
arpl
call
or
push
out
mov
jp
movs
out
pop
push
(bad)
pushf
push
repz
dec
dec
inc
fimul
push
arpl
ret
and
fs
test
xchg
xchg
xchg
daa
add
or
xchg
mov
data16
fwait
jecxz
daa
and
addr16
mov
aad
push
xchg
(bad)
imul
xchg
lock
mov
push
pop
jns
out
mov
(bad)
inc
mov
add
leave
out
popf
cmp
sub
dec
dec
jns
dec
push
dec
or
mov
jno
mov
sbb
xchg
xchg
push
daa
cmp
xchg
cmp
and
jle
inc
aad
ret
or
cmp
pop
dec
xchg
cmp
ins
push
push
cmps
and
test
mov
in
test
jbe
adc
aam
lea
jbe
nop
cwde
xor
adc
out
aam
add
test
pusha
adc
xchg
jecxz
push
xor
mov
popf
jmp
and
mov
fadd
les
or
mov
mov
ins
cmps
out
mov
mov
dec
or
or
add
inc
and
add
jo
push
lds
dec
push
adc
rcl
inc
xor
fiadd
inc
add
cwde
aaa
aaa
sbb
inc
xor
dec
test
mov
dec
ror
xchg
add
popf
mov
dec
jbe
push
push
jg
das
repnz
ret
arpl
add
sbb
jns
pop
cmp
js
dec
jns
loopne
(bad)
aaa
js
jns
sub
adc
sahf
xor
(bad)
aam
jns
dec
ss
or
sbb
rol
pushf
jb
jns
dec
sbb
cmps
mov
xor
sbb
cmps
jns
aam
gs
inc
sti
pop
movs
pushf
cmp
jns
sbb
dec
test
push
adc
adc
push
add
xchg
inc
add
out
call
jns
xchg
or
mov
mov
cmp
dec
mov
jns
(bad)
in
(bad)
lds
mov
pop
cmp
cmp
push
sbb
jb
pop
and
add
shr
add
fcmovne
push
mov
lea
imul
les
dec
or
loopne
dec
pop
mov
clc
push
mov
stos
push
xchg
push
mov
sub
xchg
mov
call
adc
dec
adc
adc
outs
hlt
pop
mov
sub
adc
into
movaps
mov
clc
(bad)
sub
mov
mov
pop
adc
das
aas
call
or
mov
add
push
adc
aas
das
push
push
adc
sahf
cwde
jo
mov
js
sahf
fsub
out
stos
push
rsm
cmp
xchg
or
popf
xchg
push
call
pop
push
xchg
fucomp
out
xchg
in
adc
pusha
add
sbb
pop
add
cmps
ins
sbb
popa
inc
aas
pop
daa
inc
movs
stos
jbe
pop
jno
push
or
outs
jne
pop
test
inc
test
int3
pop
add
sbb
mov
push
push
jo
cmps
jno
inc
jno
pop
in
jg
lahf
mov
je
push
clc
jl
mov
jge
je
pop
sub
mov
aam
pop
pop
and
pop
jae
sub
pop
in
(bad)
pusha
int3
and
movntps
fld
push
ins
mov
or
jae
pmulhuw
leave
leave
jbe
out
xor
in
jl
sbb
jns
jb
jno
repnz
jbe
cmp
sbb
cmc
cmp
mov
dec
inc
sahf
sbb
xchg
daa
daa
and
jns
pop
(bad)
cmp
jp
pop
sbb
nop
pop
mov
inc
push
mov
push
and
add
fild
lods
jmp
sbb
xchg
sub
data16
dec
or
fisttp
popf
push
mov
inc
xchg
mov
dec
mov
xor
je
fucomip
daa
mov
pusha
mov
inc
mov
jmp
not
push
fistp
push
test
hlt
or
dec
or
jbe
scas
push
mov
ja
pushf
jbe
rol
jae
movs
add
out
das
lea
(bad)
adc
or
mov
xchg
and
das
leave
call
gs
dec
push
(bad)
int3
call
jb
mov
mov
dec
sub
cs
(bad)
push
mov
mov
jno
scas
and
lds
xor
inc
inc
faddp
push
pop
mov
jb
jno
fisttp
dec
xchg
inc
xor
pop
fild
je
add
cdq
ss
cwde
inc
or
popf
dec
adc
mov
adc
xchg
mov
add
xchg
and
je
fdiv
dec
scas
and
fstp
rcl
mov
cld
xchg
add
dec
aaa
add
xchg
push
and
mov
dec
ins
jne
(bad)
xchg
push
push
jae
fadd
sbb
cmp
cwde
cdq
xchg
mov
cdq
dec
mov
mov
xor
adc
dec
xchg
call
daa
test
xchg
push
dec
mov
cmc
xor
push
mov
cmc
jnp
sar
je
and
dec
ja
mov
or
sbb
xor
xchg
shl
rcl
adc
loop
sbb
xchg
(bad)
mov
lea
loopne
sub
inc
add
sbb
loop
imul
pop
sub
xor
cs
and
jl
test
imul
mov
pop
in
push
das
sbb
xchg
sbb
push
mov
cmp
das
inc
cmp
dec
movsx
cmp
jg
cli
jo
cs
outs
ja
mov
sub
dec
inc
mov
push
and
push
movs
or
jmp
pop
add
push
cmovns
pop
js
sub
push
jge
push
push
push
xlat
or
cmp
call
ds
xor
jb
dec
bound
adc
pop
sub
adc
push
mov
mov
inc
add
jle
daa
enter
push
xor
mov
inc
outs
push
adc
scas
pop
pop
ins
cmovnp
push
sub
inc
aam
shl
push
pop
scas
das
push
movs
dec
add
xor
mov
push
mov
push
and
test
movs
cmp
push
dec
lock
mov
dec
movs
mov
dec
cld
sbb
inc
ja
test
retf
push
sub
or
mov
mov
sub
or
push
push
xchg
ins
add
adc
movs
inc
adc
inc
rol
pop
pusha
cmp
cs
push
push
add
mov
xor
pop
add
push
jl
fimul
cmp
das
pop
cmc
mov
out
push
nop
test
inc
test
iret
inc
or
test
pop
sub
iret
push
movs
push
sbb
aad
outs
cmp
sysenter
test
jne
cmp
xchg
push
into
aad
cmp
push
into
adc
jg
daa
daa
daa
mov
enter
shl
xchg
leave
leave
leave
jp
sti
xor
jnp
adc
pop
sbb
jb
aam
mov
cmp
cmp
dec
test
pushf
mov
(bad)
les
mov
setae
movs
out
jbe
lds
repnz
mov
mov
inc
cmps
push
mov
test
adc
call
dec
sub
or
pop
mov
rcl
dec
or
xchg
push
xchg
stos
daa
jg
pop
add
adc
loopne
or
ins
mov
or
fld
adc
popa
adc
jae
mov
stos
sub
dec
inc
push
push
adc
or
cdq
and
rol
and
ja
sub
xor
rcl
jae
ja
jmp
push
mov
es
cmp
inc
test
rcl
(bad)
leave
call
and
fs
adc
push
add
bound
pusha
sub
adc
push
addr16
(bad)
iret
dec
dec
push
adc
dec
sub
lahf
or
inc
adc
or
push
nop
loop
adc
xchg
and
shr
ins
test
push
inc
xor
inc
add
nop
aaa
inc
sub
cmps
push
push
add
mov
add
mov
xchg
or
mov
cmp
xchg
mov
jge
out
push
pop
and
movs
mov
imul
test
dec
aaa
pushf
scas
push
mov
mov
test
imul
sub
cmp
ins
jae
add
mov
mov
xlat
bound
popf
imul
jge
je
jbe
inc
(bad)
dec
sbb
pop
push
imul
push
xlat
adc
test
inc
xchg
rol
and
and
test
imul
sbb
shl
adc
imul
bound
je
idiv
cmp
push
cmps
jno
ins
imul
mov
test
arpl
or
add
(bad)
je
jbe
push
jg
sbb
lods
cmp
ffree
lds
rcl
push
push
mov
cwde
inc
loopne
outs
jl
mov
mov
shr
pusha
movs
cmp
and
fmul
aam
inc
add
sub
pop
push
pop
jp
aas
inc
add
or
jmp
fst
add
mov
xlat
dec
xor
pop
nop
imul
es
jns
mov
mov
inc
xlat
icebp
push
and
mov
or
gs
push
sar
fadd
sbb
lock
and
sub
or
icebp
sbb
cmp
mov
xor
das
pop
pop
and
fcomp
push
mov
cs
popa
mov
out
loopne
adc
ins
pushf
cs
mov
fist
lahf
pop
mov
mov
jnp
ins
in
mov
js
pop
push
nop
push
fst
cli
ds
push
dec
popa
stos
cs
pop
pop
test
mov
lahf
cli
dec
pop
or
sti
and
mov
sahf
cli
outs
jae
ror
sahf
cmp
daa
and
loopne
xchg
pusha
stos
xchg
xchg
daa
daa
clc
inc
xchg
push
enter
aam
cwde
push
fs
leave
mov
repnz
in
fdivr
and
inc
jle
add
cmp
mov
push
pushf
aas
jl
sahf
mov
and
xor
movs
sahf
sbb
push
call
dec
inc
push
push
xchg
cmc
cmp
call
jno
dec
or
dec
sbb
test
cwde
mov
or
daa
sub
and
and
jbe
dec
je
push
leave
dec
enter
test
dec
cmp
pop
and
push
jmp
add
pop
mov
ins
push
dec
cmp
stos
or
pop
add
xlat
xor
inc
adc
js
les
dec
dec
jae
rol
iret
out
xchg
inc
xchg
out
mov
or
or
and
das
leave
call
gs
movs
sub
test
dec
sbb
shl
and
dec
pop
adc
pushf
or
mov
dec
mov
push
cmp
iret
dec
add
push
dec
jno
sub
shr
mov
add
sbb
jae
push
pop
or
mov
adc
xchg
dec
add
mov
jno
cwde
xor
xchg
test
mov
xchg
sbb
nop
mov
add
in
ror
and
fld
inc
push
dec
imul
cmp
dec
es
icebp
dec
in
push
cmp
sub
icebp
mov
test
test
mov
inc
push
pop
sbb
ss
cmp
cdq
icebp
cdq
dec
push
inc
or
jns
pop
or
icebp
xor
xchg
jge
daa
test
push
mov
ins
pop
test
bound
pop
dec
mov
or
dec
rcl
xchg
rcr
ins
mov
lds
mov
jns
xor
icebp
loopne
dec
fst
sbb
bound
sub
icebp
jp
test
inc
(bad)
fadd
icebp
or
and
sub
adc
imul
mov
ror
adc
push
pop
sbb
mov
in
scas
dec
mov
xchg
test
sahf
or
fs
or
mov
enter
shr
clc
inc
mov
movs
aam
mov
adc
push
jmp
push
sub
push
out
sbb
aas
push
ror
and
test
add
lahf
push
ror
sbb
js
sub
hlt
test
test
popf
inc
add
push
cmp
addr16
jge
xchg
push
mov
xchg
pop
in
cmp
mov
ret
push
cmp
add
push
xchg
mov
test
or
sub
push
sub
pop
rol
xchg
or
ror
ror
shr
adc
aaa
pop
pop
push
sub
mov
rol
pop
sbb
mov
mov
in
xor
add
outs
push
dec
mov
mov
mov
mov
push
shl
ret
push
or
(bad)
je
cmp
jp
les
sub
(bad)
sbb
and
push
xchg
adc
(bad)
jecxz
cmp
mov
or
movs
cmovb
je
(bad)
mov
daa
mov
pop
(bad)
and
leave
xchg
xchg
xchg
daa
add
leave
enter
cmps
push
mov
fs
mov
jb
repnz
or
push
pushf
sbb
jb
in
stos
xor
cmp
addr16
jmp
dec
outs
cmps
out
pop
jmp
pcmpeqw
cmps
je
movs
mov
or
mov
mov
add
call
rcl
xor
mov
dec
push
pop
or
rol
mov
jno
xchg
imul
cmps
daa
xor
sbb
mov
xor
pusha
inc
xchg
add
ror
jg
and
push
mov
out
jmp
push
lods
xor
add
(bad)
enter
jmp
inc
movs
rcr
outs
or
test
add
jbe
mov
ja
push
jmp
jae
dec
test
vorps
mov
xchg
rcl
push
shl
xchg
and
das
leave
adc
gs
movs
add
shl
lods
inc
sub
adc
dec
sub
(bad)
shr
jnp
iret
dec
add
rol
add
jno
push
xchg
xchg
add
sar
rcl
shl
leave
or
rol
fisub
xchg
cdq
push
movs
xor
movs
ss
xchg
popf
dec
xor
rol
movs
fwait
mov
push
or
inc
test
inc
sbb
inc
(bad)
(bad)
sub
xchg
xchg
pusha
test
rol
xchg
ror
int
dec
daa
out
dec
sar
dec
mov
add
or
cmp
ins
push
shr
rol
jmp
out
add
cdq
and
adc
dec
popa
push
leave
mov
shr
adc
dec
rcl
fcmovbe
nop
jge
inc
sti
mov
shl
push
mov
sub
rcl
test
rcl
dec
shr
lds
mov
je
xor
xor
xor
add
fisubr
test
(bad)
push
ror
ins
rcr
mov
xchg
adc
shr
in
test
xchg
inc
and
adc
loop
or
pop
push
and
outs
mov
ja
int3
sahf
and
jnp
out
or
jo
leave
adc
sub
inc
push
sbb
dec
fnstenv
xchg
sbb
mov
sub
fst
xor
pop
push
sbb
pop
(bad)
leave
sub
pusha
call
imul
cs
outs
xor
or
add
inc
movs
adc
loopne
or
sbb
in
cmovge
adc
mov
inc
xchg
mov
pop
call
inc
movs
mov
adc
add
push
push
aad
jmp
lods
dec
bound
adc
test
dec
adc
pop
gs
cli
pcmpgtd
push
add
adc
mov
pushf
and
pop
add
xor
ins
outs
xchg
imul
inc
mov
mov
aam
pop
sub
push
xchg
dec
push
outs
add
test
push
aas
pop
inc
sbb
bound
imul
adc
add
and
push
cmps
out
gs
cmc
push
push
dec
int
pusha
push
add
scas
sub
aam
mov
not
pop
sub
pusha
sub
pusha
call
jmp
movs
or
adc
lods
or
stos
ins
and
mov
outs
aam
add
cmp
or
or
or
adc
sti
xchg
or
aaa
dec
test
mov
adc
in
add
mov
call
mov
dec
(bad)
out
les
in
int3
push
push
sbb
mov
inc
push
xchg
mov
dec
sbb
push
add
jmp
in
(bad)
stos
dec
ins
movs
out
push
out
dec
push
(bad)
fcomp
fucom
or
jg
mov
inc
sahf
pushf
repz
mov
and
mov
xchg
daa
daa
out
mov
xchg
mov
mov
in
fmul
cmp
in
in
mov
jb
xor
(bad)
into
ins
jnp
mov
cwde
mov
(bad)
pop
sub
push
imul
and
add
push
call
lods
xor
pop
cmp
lock
dec
cmp
daa
push
mov
test
cmp
in
daa
and
popf
cmp
and
aam
shr
sar
pushf
call
or
sbb
push
xlat
mov
xor
pushf
mov
ins
push
push
mov
stos
or
rol
movs
test
jbe
push
xor
push
test
pusha
mov
aam
bound
push
cmps
inc
movs
out
cwde
xchg
push
pushf
jp
mov
or
rol
lea
cmp
sti
sub
and
mov
test
cmps
ds
leave
push
or
adc
pop
call
pushf
cmp
ror
dec
push
push
add
movs
dec
sub
push
jne
or
or
nop
loop
inc
cmp
pusha
and
rcl
mov
push
inc
xor
inc
add
aaa
push
call
adc
dec
add
add
aaa
mov
daa
cmp
mov
inc
sbb
xchg
push
jg
das
add
out
dec
jge
jge
pop
and
out
push
or
call
add
nop
cmp
imul
aam
sub
xchg
ins
stos
aam
fisubr
push
sbb
jae
pushf
jb
pop
cmps
in
stos
sbb
rol
cdq
cmps
add
mov
xor
mov
dec
stos
scas
ror
(bad)
mov
stos
bound
mov
dec
or
push
mov
and
or
sbb
pushf
mov
mov
mov
cmp
push
mov
pushf
push
jecxz
sbb
lods
scas
aad
mov
jno
add
inc
xor
adc
je
or
inc
xchg
outs
rcl
add
pop
jns
mov
pop
push
loopne
adc
sbb
call
push
mov
enter
(bad)
jns
cdq
mov
arpl
test
mov
(bad)
ffree
push
adc
inc
push
outs
sbb
adc
pop
mov
aam
pusha
mov
sub
adc
lea
test
adc
push
sub
test
aas
and
xchg
daa
xor
iret
stos
imul
jae
test
sub
retf
add
int3
mov
add
cmps
js
hlt
test
lods
mov
popf
rol
ret
push
les
out
das
add
push
mov
mov
out
cmp
push
aam
je
sub
inc
jge
sbb
mov
fsub
sbb
pop
loop
push
mov
or
imul
sbb
je
xchg
xchg
mov
cmp
sbb
fcomp
or
inc
ins
inc
push
mov
daa
leave
mov
and
sbb
scas
(bad)
mov
add
xchg
and
ja
test
mov
and
push
(bad)
jbe
mov
pop
fs
cwde
shl
aam
daa
aam
into
push
repnz
push
in
call
fsubr
inc
adc
pop
pop
and
pop
jae
sub
pop
leave
lods
(bad)
pusha
ja
sbb
push
jmp
ja
(bad)
cmp
push
push
mov
imul
leave
leave
leave
enter
cdq
fucom
in
in
leave
jne
out
jb
repnz
push
popf
ror
leave
ins
jnp
retf
jg
mov
in
fs
int3
jbe
retf
repnz
daa
int
stos
cmp
jns
in
into
das
jmp
or
xor
push
addr16
xchg
push
push
aad
(bad)
push
push
lds
jae
sub
dec
or
shl
sar
adc
dec
into
je
loop
dec
or
shr
jno
mov
pusha
je
push
mov
mov
cmp
movs
inc
rcr
jg
shl
sbb
inc
adc
mov
cmp
push
jmp
push
mov
mov
or
or
les
mov
adc
inc
xchg
scas
push
shl
jae
test
mov
push
jmp
in
mov
rcl
movs
rol
rcl
and
and
call
aam
rcl
shr
nop
inc
xchg
xchg
or
xchg
pop
and
ins
xchg
dec
je
iret
dec
mov
ror
mov
jno
pop
push
or
add
mov
sar
jo
push
shl
and
movs
test
xor
int
shr
xor
adc
cld
adc
daa
mov
or
xchg
add
xchg
shr
push
adc
rcr
dec
jg
mov
out
rcr
jno
cmp
rcr
je
sbb
mov
sar
xlat
aad
cmp
and
adc
dec
pop
shl
adc
mov
dec
mov
xchg
into
add
shl
ret
jg
pop
cdq
adc
je
loopne
cmps
js
shl
and
rcl
inc
imul
rcr
ins
inc
add
stos
cmp
movs
rcl
xchg
and
inc
push
and
jmp
sbb
inc
adc
xor
rcl
scas
dec
je
and
je
stos
lods
mov
shl
mov
cmp
cmp
add
stos
dec
inc
xor
cmp
lock
rol
call
arpl
dec
xor
movs
inc
aaa
test
or
jno
sbb
mov
or
push
outs
jl
mov
dec
mov
mov
add
ror
test
inc
adc
fist
add
cmp
dec
sbb
adc
push
and
sbb
gs
pop
adc
fbld
push
ficom
shl
(bad)
aas
sbb
cmp
add
pop
das
mov
jno
inc
sar
inc
adc
pop
xor
int3
lock
mov
inc
jb
scas
fimul
dec
bound
adc
sub
cmps
adc
pop
fs
mov
adc
shr
add
imul
jnp
mov
ins
sqrtps
jae
push
mov
push
stos
push
and
repz
imul
add
loopne
mov
aad
jecxz
les
add
xchg
loop
movs
mov
ret
and
fimul
and
dec
sub
dec
int3
cmp
adc
mov
or
dec
adc
je
sbb
mov
adc
pusha
lds
sahf
dec
(bad)
aam
or
xchg
and
fidiv
push
add
push
cwde
lahf
cmp
push
cli
repnz
dec
xlat
das
mov
add
add
and
jecxz
mov
push
dec
push
lahf
aam
retf
bound
mov
cmp
lahf
pusha
loopne
fdiv
cmp
pop
popf
sbb
lahf
out
sub
int3
idiv
mov
scas
push
sahf
out
push
pushf
fsub
cli
sahf
das
fimul
popa
setns
dec
dec
inc
sahf
adc
push
lahf
in
daa
daa
and
fcomp
leave
xchg
xchg
xchg
daa
adc
leave
enter
fidiv
in
in
out
sbb
repnz
lahf
aad
loopne
jnp
jb
and
cmps
into
ins
shrd
mov
or
push
dec
push
dec
aam
sub
ret
add
pop
xchg
push
call
cmps
add
in
mov
push
or
out
push
push
xchg
push
mov
jno
(bad)
mov
add
push
inc
mov
xor
gs
fdivr
add
adc
test
cmp
inc
stos
jmp
fsub
pop
or
ins
push
mov
and
push
imul
adc
adc
call
jbe
jae
mov
xor
dec
pop
push
or
sahf
dec
xchg
out
xchg
add
push
and
sbb
push
test
out
dec
mov
push
fsubrp
jne
push
test
rol
out
in
out
mov
arpl
fist
or
jno
adc
xor
test
inc
fadd
push
dec
add
sbb
out
ins
enter
add
push
inc
xor
cmps
outs
dec
out
mov
pop
mov
inc
adc
sub
ror
pusha
mov
loop
mov
xchg
inc
mov
push
push
inc
sbb
cmps
out
shr
je
pusha
stos
pop
and
lahf
sbb
push
dec
repz
cmp
cmp
add
test
ins
out
jo
cmp
imul
out
lods
mov
jae
add
and
(bad)
adc
cmps
sbb
jmp
or
out
xor
xchg
test
test
popf
mov
ins
pop
cmp
dec
mov
or
or
mov
mov
mov
(bad)
mov
lds
or
out
cmp
mov
out
adc
mov
push
cmps
out
xchg
mov
cmp
inc
and
xor
ldmxcsr
mov
add
pop
clc
(bad)
loopne
out
es
js
add
inc
add
pop
ds
xchg
pop
or
or
imul
mov
loopne
push
aas
pushf
mov
aas
fxam
mov
mov
enter
pop
dec
lea
push
and
jle
or
xor
rol
aaa
dec
aas
out
in
push
pushf
jmp
je
mov
bound
inc
(bad)
fistp
mov
mov
addr16
(bad)
in
imul
push
int3
imul
inc
movs
mov
not
or
out
fst
sbb
cmp
inc
fadd
push
mov
repnz
and
pop
iret
aad
add
movs
mov
push
inc
sbb
sub
push
sbb
inc
adc
xor
pop
aaa
push
test
iret
test
out
add
mov
mov
(bad)
nop
push
add
out
loopne
mov
push
adc
lods
es
push
jmp
jmp
in
nop
repnz
inc
out
test
adc
xor
pop
adc
adc
ins
test
or
or
add
xor
test
pmaddwd
jmp
(bad)
sbb
push
mov
jmp
in
in
inc
jge
std
jns
xor
inc
in
xchg
jecxz
in
cmp
cmp
cmp
mov
cmp
(bad)
push
out
jb
jb
xchg
(bad)
cmp
jns
lock
jge
pushf
pushf
mov
icebp
sub
jmp
andnps
mov
mov
jle
(bad)
add
and
sub
inc
je
dec
xchg
pop
xchg
xor
out
or
xor
jmp
ror
jno
rcl
push
dec
xchg
add
adc
shl
test
js
dec
add
in
jle
inc
pop
xor
pop
or
xor
ins
push
push
mov
or
mov
mov
rol
stos
inc
push
sub
dec
pop
mov
sub
aad
sub
inc
xchg
xchg
dec
test
or
xchg
adc
mov
call
in
jmp
dec
(bad)
loop
push
adc
in
inc
or
adc
aam
jl
into
mov
dec
push
dec
jno
add
adc
mov
add
and
sbb
dec
mov
dec
push
adc
ja
rol
push
inc
xchg
pushf
push
or
dec
sbb
test
push
nop
or
dec
push
or
pusha
inc
sar
pop
mov
mov
push
test
dec
retf
push
jg
pushf
out
pushf
bound
movs
mov
dec
pop
int
push
ja
in
dec
cmp
test
pop
aaa
pushf
in
dec
cmp
test
test
imul
test
sub
mov
mov
dec
cdq
test
cmp
test
dec
pop
xlat
bound
xor
xor
inc
dec
jge
inc
pop
and
push
dec
dec
sbb
dec
or
xchg
inc
or
mov
test
dec
inc
xchg
and
inc
push
and
jmp
inc
or
and
adc
test
mov
adc
dec
movs
test
aam
dec
adc
cmp
inc
add
cmps
adc
xor
rcl
int3
or
adc
dec
out
mov
push
inc
pop
mov
les
hlt
es
(bad)
ss
test
mov
inc
retf
lea
pop
sub
push
test
dec
sbb
dec
adc
push
cmp
cmp
shl
mov
xchg
sub
jmp
xchg
add
jae
arpl
in
inc
jo
dec
mov
(bad)
mov
shl
mov
add
(bad)
jg
add
ret
add
jmp
adc
out
jns
lahf
and
rol
push
in
dec
ja
add
pop
out
or
add
sub
add
ins
mul
push
adc
and
mov
push
xlat
pushf
fiadd
test
mov
push
outs
sub
cld
fdivr
adc
rcr
or
cmp
rcl
add
mov
dec
push
(bad)
pop
out
mov
pop
lds
add
dec
push
retf
mov
in
addr16
or
(bad)
retf
add
add
add
mov
sbb
sti
pop
add
cld
jmp
push
imul
jl
shr
jge
pop
xlat
pop
or
jne
and
into
pusha
xor
lea
fmul
mov
xchg
jecxz
xor
sbb
xor
xor
and
je
cmc
adc
sbb
cdq
out
mov
std
inc
lahf
lock
adc
dec
adc
push
int3
popf
sub
out
pop
cmps
push
mov
xchg
cli
mov
cmps
add
dec
clc
jne
in
pushf
out
add
jnp
push
add
sbb
xchg
mov
sub
repz
add
test
or
push
lock
pop
pop
popf
repz
or
xchg
xor
aas
xor
cmp
cmc
add
cmp
and
xor
push
aaa
shl
mov
fsubr
out
fidiv
sbb
sub
push
add
popf
out
pop
call
fwait
push
jo
add
jb
add
add
and
add
inc
or
ror
xchg
rcl
addr16
add
fs
mov
dec
cmp
inc
jne
xor
inc
outs
imul
or
jmp
adc
pushf
out
jl
fldcw
jecxz
in
int
lds
push
jo
xchg
cld
jl
add
popw
mov
cmps
push
paddusw
inc
scas
cmovle
or
in
and
mov
lods
div
and
adc
sub
fsub
loope
inc
mov
mul
outs
adc
push
not
and
not
ficomp
push
mov
xor
sbb
pcmpeqd
pop
cmc
inc
rcl
mov
add
ss
and
lahf
(bad)
call
daa
add
xor
fcom
loopne
fdiv
adc
jns
ror
inc
mov
xchg
jns
sbb
fadd
mov
ret
scas
jge
sub
push
mov
add
pop
inc
push
add
xchg
add
pop
(bad)
and
cmp
sub
pusha
rcl
inc
pop
test
add
ret
das
or
not
pop
adc
pop
cmps
lock
(bad)
arpl
jne
jge
xchg
xchg
outs
and
jne
pushf
cs
clc
cmps
sub
push
lods
add
jns
pop
pushf
push
cmp
pop
adc
inc
lds
idiv
test
jg
pusha
push
sub
jecxz
mov
or
aam
cmp
fld
cmp
or
pop
cvttps2pi
ins
push
stos
dec
in
jbe
sub
jmp
and
xor
mov
arpl
jne
xchg
adc
jns
xchg
jno
mov
loop
sbb
(bad)
mov
add
pop
sub
add
push
adc
push
inc
jne
push
loope
mov
cmps
pxor
aas
xchg
push
jne
add
sbb
adc
lea
inc
ins
bound
inc
mov
inc
addr16
outs
adc
loope
dec
inc
push
and
or
and
ret
push
mov
scas
or
adc
inc
nop
jmp
outs
outs
aas
mov
in
add
sub
aaa
cmp
shl
(bad)
aas
sub
sub
cmp
pop
push
mov
in
sbb
sbb
aaa
test
out
cld
sbb
int3
sbb
ror
fdivr
sahf
les
dec
push
add
out
fs
push
daa
fsub
push
aaa
ret
inc
add
xor
mov
mov
mov
pop
or
mov
mov
add
mov
daa
out
adc
jns
jmp
rcl
rcl
iret
sub
cmp
int3
or
and
out
cs
fnstsw
sbb
add
mov
pop
push
in
jmp
out
and
pop
xor
jmp
add
and
call
fwait
ret
loopne
mov
js
sbb
and
pop
pushf
fimul
and
loope
sti
mov
push
jns
leave
push
outs
imul
in
in
push
pushf
and
rcl
fist
sahf
push
lock
int3
add
push
or
adc
or
out
add
sbb
xor
lods
push
xor
add
or
mov
into
push
pop
ja
mov
pop
scas
sqrtps
adc
pop
push
sbb
xor
repz
pop
or
out
pop
out
pop
out
cmp
sub
cld
(bad)
out
jo
and
out
cwde
add
cmp
xor
push
(bad)
out
lods
dec
out
mov
sub
mov
sar
loop
pop
fsubr
sbb
not
add
pop
aad
add
sub
xlat
or
loope
call
xlat
push
icebp
nop
pop
push
mov
lahf
arpl
jne
iret
ret
adc
jns
out
pop
add
jno
jge
jne
cwde
xlat
add
and
pop
ja
scas
push
test
add
cmp
mov
pop
xlat
add
xlat
add
mov
sub
test
inc
and
and
pop
test
fsub
add
dec
pop
cmp
mov
lahf
pop
out
int
iret
mov
mov
or
pop
push
push
pop
inc
lahf
faddp
push
fsubr
lahf
aam
hlt
push
js
shl
push
add
pop
push
push
push
and
mov
add
push
lahf
or
jecxz
test
shr
add
repz
pusha
xor
ret
imul
adc
xlat
fsubr
mov
sbb
or
push
sub
inc
das
pop
push
rol
pop
enter
shl
in
mov
mov
and
or
sbb
outs
fcmove
hlt
inc
push
sub
or
dec
push
mov
ins
addr16
or
data16
fs
in
sti
test
inc
dec
outs
outs
imul
mov
push
inc
dec
xor
add
bound
add
or
sar
or
xor
sbb
mov
mov
jecxz
lea
sub
cmps
clc
mov
mov
push
cmp
popa
(bad)
fsub
call
(bad)
ins
mov
pop
jo
cmp
lea
sub
add
mov
add
dec
fwait
ja
aam
das
test
lea
sbb
inc
sub
or
xlat
jo
mov
push
dec
push
add
adc
enter
in
pop
pop
shr
dec
adc
or
leave
das
push
sbb
xor
mov
mov
sbb
shl
fs
addr16
push
add
cmps
cmps
ret
jno
adc
push
leave
ret
js
mov
leave
lods
in
sbb
lea
pusha
rcl
ret
aaa
pop
ins
add
cmp
xor
loope
arpl
and
xor
push
add
popa
or
cmps
adc
loop
in
es
outs
adc
int3
jno
mov
push
test
add
shr
ret
scas
jge
sbb
push
mov
daa
mov
xlat
pop
xor
add
push
dec
inc
loopne
mov
add
adc
ret
out
ja
inc
adc
xor
adc
std
dec
inc
add
push
add
add
sub
mov
movs
ret
inc
ret
adc
adc
sbb
xor
or
cmp
push
out
cmp
push
dec
push
add
inc
ja
ins
js
push
fimul
cmc
daa
sti
push
push
add
and
and
cmps
test
cmp
sbb
out
or
jle
jmp
jg
sbb
or
mov
pop
lds
iret
iret
mov
jo
sar
pushf
out
cmp
(bad)
or
lds
int
mov
mov
add
pop
xor
mov
dec
push
iret
jo
pop
mov
psraw
dec
mov
shl
xor
push
clc
das
dec
mov
outs
je
sub
jo
mov
loope
das
addr16
or
pop
and
das
popa
jo
jo
das
sub
fwait
icebp
jo
das
xor
cmp
shr
repz
adc
jnp
xchg
pop
int
push
jo
repz
dec
mov
fild
mov
mov
mov
(bad)
(bad)
arpl
mov
mov
shr
repz
std
loope
ficom
add
sbb
jl
xchg
movs
mov
push
add
push
daa
lods
or
jno
mov
push
iret
add
dec
dec
out
daa
inc
call
popa
and
and
pop
pop
push
mov
cmp
ja
or
(bad)
ja
loop
cmps
adc
sbb
push
ds
adc
movs
push
scas
push
mov
popf
ja
cs
pop
sti
xchg
push
push
push
push
aam
add
loop
repz
add
mov
pop
and
or
and
inc
dec
adc
inc
lahf
or
lahf
and
repz
cmp
push
test
mov
ret
cmp
scas
shr
push
repz
ds
adc
mov
xchg
push
popf
loope
sub
jge
test
mov
mov
fdiv
(bad)
jmp
jbe
add
pop
cmp
add
rcr
jle
mov
mov
or
jno
xor
push
push
data16
dec
mov
add
cmp
dec
add
inc
ss
cli
addr16
outs
jo
loope
addr16
push
push
or
add
jp
mov
mov
lds
lock
dec
data16
lock
push
inc
iret
pop
add
imul
pop
inc
mov
adc
or
xlat
(bad)
mov
xor
and
add
push
pop
inc
xchg
aaa
inc
jg
cs
mov
mov
push
js
add
daa
inc
add
adc
inc
jmp
pop
mov
inc
shl
xchg
pop
pop
add
sub
popf
out
popf
dec
sbb
div
arpl
add
test
and
adc
outs
or
jns
aaa
test
push
or
cs
fdiv
jns
cmp
add
nop
push
and
add
aaa
test
dec
and
sub
jg
xor
retf
pop
jmp
inc
sbb
or
pop
push
es
inc
fiadd
outs
addr16
or
inc
mov
jmp
inc
and
mov
jo
mov
inc
adc
mov
mov
push
lods
lea
mov
sbb
in
mov
imul
pop
mov
add
pop
out
out
mov
sub
pop
dec
sbb
cmps
bound
inc
jo
or
lods
inc
sub
nop
bound
adc
mov
jo
inc
adc
pushf
inc
js
fcomp
sub
movs
bound
or
pusha
call
mov
add
test
add
push
add
outs
add
adc
pop
xlat
daa
shr
push
mov
inc
dec
adc
int3
xchg
sub
push
movs
mov
aaa
inc
je
mov
ret
scas
cmp
cmp
push
shl
mov
push
daa
push
push
add
mov
add
imul
xor
xor
icebp
rol
mov
add
sub
iret
pop
jb
mov
rcr
jbe
push
in
add
adc
int3
fnsave
push
icebp
aad
sbb
rcl
mov
ror
add
sbb
mov
mov
or
xor
sub
out
inc
or
add
test
mov
mov
rcl
or
push
pop
mov
push
sub
iret
mov
jo
lods
fcmovne
adc
int3
(bad)
jns
rcl
push
sbb
and
fadd
xor
adc
js
push
inc
push
add
das
pop
shl
mov
out
pop
sahf
or
test
cmp
out
sub
ins
xor
xor
mov
scas
ins
arpl
scas
test
shl
lds
scas
mov
es
jl
cmp
add
std
cwde
loopne
and
call
mov
in
or
pop
mov
outs
adc
jo
xor
push
aaa
xlat
inc
test
xor
add
push
add
push
int
stos
cmp
int3
test
mov
das
enter
aaa
add
sub
push
xor
fmul
add
jne
mov
daa
ins
push
add
push
add
xchg
add
cmp
pop
push
adc
aaa
mov
sbb
inc
jno
adc
mov
sub
out
sbb
xlat
inc
push
and
cmp
retf
sub
cmp
dec
adc
xchg
ss
push
aaa
inc
jno
test
out
fidiv
adc
sbb
inc
xor
les
add
popf
out
pop
mov
push
ins
add
inc
test
adc
adc
rol
pop
test
ret
dec
jnp
jo
sbb
std
inc
in
push
imul
outs
ja
and
mov
inc
stc
movs
adc
xchg
jmp
add
add
or
mov
xor
inc
int3
lods
add
shl
int3
cs
enter
xor
sbb
ss
pop
add
push
adc
push
aaa
les
ret
test
mov
add
dec
mov
sub
xor
jo
or
jns
lods
or
bound
inc
js
mov
mov
and
sahf
mov
mov
sub
ret
shr
cmp
shl
mov
cmp
mov
add
fbstp
adc
stos
ud0
inc
test
mov
or
adc
test
mov
test
or
cmp
push
scas
mov
push
daa
ins
push
add
sub
add
adc
sub
js
call
bound
adc
or
jg
mov
xor
adc
lahf
jg
cmp
pop
lahf
mov
cmp
mov
out
jnp
or
int3
stc
jle
cmp
or
add
ins
out
mov
sub
add
xor
push
mov
sbb
daa
xlat
push
lahf
xchg
nop
mov
or
repz
popa
mov
(bad)
mov
imul
stos
lock
rcl
and
xor
shl
or
aas
(bad)
outs
ret
fstp
cmp
out
add
sbb
inc
jno
inc
cs
mov
jbe
mov
add
cmp
mov
fdiv
push
out
adc
fiadd
mov
add
rcr
pop
xor
adc
sbb
xor
sub
adc
sbb
inc
cdq
mov
bound
sbb
sbb
fdiv
adc
sbb
jmp
push
add
pop
clc
js
adc
ds
sub
lahf
aas
mov
icebp
scas
mov
jmp
test
jo
inc
and
cmp
loopne
push
int3
popf
cmps
push
mov
add
jecxz
mov
test
int3
push
add
push
daa
pusha
push
add
inc
test
pop
add
push
push
out
popa
sub
pusha
or
pop
gs
adc
xchg
add
pusha
lahf
push
adc
aas
(bad)
lahf
or
rcl
jae
or
adc
ja
and
lahf
mov
mov
clc
push
inc
push
pushf
add
xlat
pop
add
inc
add
push
pop
add
pushf
(bad)
loop
pop
inc
and
or
inc
lds
adc
pusha
push
iret
or
iret
inc
mov
(bad)
pop
mov
xor
dec
jne
cmp
iret
movs
int3
dec
inc
push
push
push
popa
inc
xor
add
mov
jbe
loope
sahf
sar
push
jl
add
inc
inc
sbb
daa
sbb
cmp
ds
mov
dec
and
mov
mov
xor
cmp
pop
sub
cmp
pop
mov
mov
jo
jo
pop
push
pop
cld
div
pusha
push
pop
add
mov
cli
ins
sbb
xlat
pop
jmp
pop
pop
sub
adc
sbb
xlat
aaa
add
xor
lahf
or
add
jp
idiv
setbe
iret
cmp
or
int3
shr
fild
in
scas
sbb
cmp
lock
fstp
loope
pop
push
jl
cmps
pop
add
shl
fst
daa
xchg
call
add
push
lods
and
call
adc
aaa
pop
les
mov
mov
add
mov
add
adc
adc
sahf
ja
int3
mov
mov
adc
inc
mov
push
out
out
ficomp
loopne
add
enter
adc
(bad)
push
mov
xchg
push
mov
adc
lea
push
pop
out
jae
or
or
add
clc
add
imul
xor
push
outs
xchg
pop
xchg
inc
pop
mov
sbb
std
xchg
fistp
xchg
adc
cmp
or
int3
lds
push
fnstcw
daa
in
inc
popa
xlat
push
sbb
scas
cmp
push
hlt
add
scas
mov
je
add
ja
loopne
ficom
scas
or
shr
pop
out
dec
adc
add
ror
push
sub
inc
mov
inc
jo
inc
sub
bound
addr16
sbb
sub
inc
push
or
cmps
(bad)
mov
mov
adc
fdiv
aaa
sbb
add
and
xor
lds
dec
pop
fisttp
add
sbb
adc
add
dec
add
test
aaa
cmc
mov
adc
ja
int3
int
xlat
push
loope
mov
in
cs
sub
mov
dec
push
cld
push
add
push
daa
nop
push
or
out
push
add
lss
add
push
sbb
mov
and
xchg
lds
sbb
mov
and
mov
pop
push
adc
pop
jecxz
das
jmp
aas
mov
xor
sbb
jns
cmp
pop
ret
jno
mov
out
push
pop
push
out
pop
fstp
push
out
push
add
add
mov
test
and
mov
add
and
jo
jnp
clc
push
nop/reserved
test
(bad)
mov
jns
scas
ret
das
pop
mov
jnp
add
int3
gs
push
outs
push
jns
add
pop
ja
cs
mov
inc
ror
mov
push
pop
adc
add
push
or
adc
adc
paddq
daa
loope
sbb
or
add
xor
imul
mov
in
bound
test
addr16
dec
pop
pop
hlt
jle
push
or
sbb
test
repz
loopne
dec
xchg
sbb
add
pushf
jo
and
scas
pop
in
add
adc
mov
jl
(bad)
out
mov
and
mov
icebp
xchg
sbb
mov
xchg
jmp
std
int3
cmc
inc
sbb
mov
push
pop
adc
fnstsw
adc
push
mov
cld
push
daa
mov
add
rol
test
mov
cmp
jge
sbb
push
add
add
xlat
mov
xlat
xlat
arpl
loope
ret
call
adc
(bad)
loope
jmp
cmc
fnstcw
add
inc
mov
out
pop
push
add
cld
push
sahf
mov
ja
push
xlat
add
push
inc
outs
clc
call
outs
xor
xor
(bad)
inc
inc
popa
nop
cmp
sub
lock
push
fcomip
add
and
(bad)
out
imul
fstp
popa
outs
popa
addr16
cmp
jne
arpl
xor
icebp
das
lahf
arpl
loope
sbb
adc
int3
std
sbb
mov
outs
pop
push
push
adc
push
aaa
mov
add
push
mov
dec
ins
jbe
mov
add
pop
pop
lods
daa
out
mov
fmul
push
das
sbb
push
dec
sete
pop
or
sub
pop
push
pop
jg
mov
sub
test
jg
mov
fs
and
jg
mov
jg
xchg
pop
xchg
jg
ret
jae
xor
jg
sbb
pop
test
jo
add
iret
fs
neg
mov
or
iret
or
adc
or
retf
lods
jae
push
cmp
xor
adc
sbb
lock
add
std
sahf
fld
ss
pusha
cdq
sbb
push
xor
add
daa
enter
cmp
push
inc
add
xchg
loop
pop
add
mov
sbb
ret
int
jo
adc
mov
enter
add
push
repnz
pop
jle
jae
cmp
imul
push
jge
(bad)
jnp
sbb
mov
mov
repz
add
lods
push
es
adc
push
mov
rcl
and
cmp
adc
add
xchg
sti
dec
sbb
out
retf
loop
dec
add
out
or
cmp
inc
pop
xor
iret
xchg
inc
push
or
xchg
outs
or
jl
sub
cmp
out
cs
sub
lds
in
pusha
pop
fucomp
mov
push
in
add
fs
or
mov
adc
in
sub
outs
bound
adc
das
cmp
push
sub
xor
das
or
sar
mov
loope
das
hlt
bound
or
pop
adc
push
jo
das
push
das
jo
jo
popa
push
js
or
stos
das
xor
sbb
xor
mov
inc
sub
pop
or
fdivr
les
dec
out
fld
xor
out
test
jns
add
adc
add
jno
dec
js
add
jl
out
cmps
or
aaa
in
fdivr
add
and
or
push
add
push
out
adc
add
cmp
scas
add
icebp
loope
ror
lea
inc
iret
aas
adc
or
jmp
loop
movntq
sub
cmp
adc
push
jo
pop
stos
sub
push
pop
push
or
or
cmps
or
scas
jae
add
add
test
push
call
add
push
pop
push
jmp
out
add
mov
inc
or
scas
push
and
dec
sbb
mov
pop
das
xor
imul
jg
push
pop
pushw
bound
jle
xor
jbe
xchg
push
jg
cmc
call
add
or
dec
hlt
jo
test
and
or
imul
jmp
push
xlat
fiadd
cmp
and
or
inc
push
call
xchg
in
mov
inc
or
popa
jae
push
arpl
adc
cmp
cmp
sbb
cmp
mov
je
iret
inc
or
sub
fbld
or
inc
xor
add
les
lds
pop
add
jo
lds
lds
pop
mov
test
or
sbb
pop
sti
cmps
mov
push
and
ss
push
adc
push
cmps
sub
pop
enter
or
out
mov
cmps
xlat
pop
xor
jno
cmps
ss
or
cs
int3
push
xor
add
sbb
(bad)
adc
(bad)
icebp
add
xor
(bad)
sbb
xchg
xchg
jno
mov
std
ja
mov
add
push
fsubr
repnz
push
ret
out
add
ja
add
fadd
push
or
and
and
lds
nop
push
ja
adc
add
sub
test
or
cli
jno
push
sbb
bound
jno
dec
adc
sbb
add
imul
add
imul
sub
push
ret
enter
push
addr16
or
in
sets
and
add
cmp
lds
addr16
std
cmps
mov
push
jns
add
pop
je
pusha
imul
shr
add
rcl
sar
sub
add
addr16
xor
mov
in
adc
loope
or
sub
ja
in
fwait
xor
push
pop
das
je
in
enter
adc
adc
ins
and
push
mov
aaa
push
or
or
jp
push
movs
or
or
scas
sbb
mov
outs
imul
retf
retf
push
test
retf
jg
xor
adc
adc
pop
jno
js
sbb
or
mov
arpl
push
test
nop
outs
fs
scas
jge
dec
outs
push
jbe
xchg
das
test
sbb
adc
ins
jo
and
and
hlt
mov
add
shl
pop
popa
pop
leave
mov
rcl
and
mov
cli
pusha
test
add
inc
mov
(bad)
pop
mov
stos
mov
sbb
hlt
add
clc
pop
jmp
lods
lods
jno
or
push
add
jo
mov
fcomp
and
or
cwde
das
jp
push
ja
ins
and
jge
daa
mov
cmps
mov
fst
inc
fs
cmp
push
hlt
gs
mov
dec
sbb
daa
xchg
sub
dec
adc
push
sub
adc
dec
push
popa
test
enter
mov
mov
push
fimul
cli
das
adc
inc
dec
test
es
mov
and
(bad)
fisub
lods
inc
ret
push
sbb
ins
xor
enter
mov
in
popa
xor
push
ds
cmps
push
jl
push
leave
jno
movs
(bad)
idiv
and
mov
leave
mov
or
sub
jmp
push
mov
je
ror
out
das
add
out
cs
adc
rcl
mov
and
ss
adc
loop
out
push
out
cmp
jmp
(bad)
mov
cmps
or
cmps
adc
and
shl
push
mov
sub
shr
fidiv
leave
or
je
mov
xchg
mov
add
in
sbb
pop
inc
fsub
addr16
mov
inc
push
addr16
std
sti
mov
xchg
popa
jo
cs
outs
ja
push
push
dec
inc
mov
test
fcom
cmp
mov
add
stos
sbb
popa
push
fsub
push
inc
sar
push
jno
mov
jmp
loop
scas
jge
push
js
jp
xchg
das
lods
push
sbb
sbb
sub
out
adc
aam
out
or
push
ret
mov
cs
xchg
jmp
xor
adc
push
aas
pop
jno
test
inc
cmp
add
or
cmps
cmp
add
fdivr
cmp
add
mov
push
push
xor
dec
push
aaa
add
mov
inc
adc
cwde
loop
fdiv
aaa
lods
push
aaa
sub
adc
sub
sub
sbb
xchg
rol
xchg
pusha
push
mov
je
test
test
adc
fdivr
inc
add
ja
popa
sti
icebp
xchg
and
push
dec
jp
cs
push
mov
int3
jnp
push
fisubr
inc
enter
push
push
sbb
and
in
sbb
and
dec
cli
push
sub
lds
push
push
cmc
cmp
int
push
je
outs
ins
push
or
mov
stos
or
ret
ja
out
cmp
adc
stos
jno
imul
adc
sbb
mov
sub
test
sti
pop
sti
cmps
loop
jl
lods
push
movs
jge
mov
vcomisd
push
idiv
cmp
sub
and
neg
xor
jno
div
inc
push
pop
lds
sti
stos
pop
hlt
stos
adc
mov
stos
xor
gs
jno
fisubr
push
sbb
and
mov
pop
imul
pop
jle
sbb
addr16
push
fiadd
jb
mov
(bad)
outs
das
movs
push
addr16
push
sub
sbb
push
test
addr16
fisub
rcl
or
std
sbb
lea
leave
mov
or
enter
lds
repnz
push
test
test
mov
mov
adc
arpl
inc
shl
mov
pop
mov
stos
loopne
pop
sub
dec
jb
and
(bad)
adc
in
push
xchg
das
test
pop
or
les
cmp
push
jb
pop
and
mov
mov
or
adc
mov
sbb
js
(bad)
pusha
test
dec
lds
push
test
jne
jno
mov
add
sbb
sbb
popa
pop
jns
inc
and
xchg
push
mov
lea
add
out
sub
cmp
ret
push
xchg
mov
mov
mov
mov
xchg
fcom
mov
sub
dec
adc
in
js
or
bound
es
ins
ret
sti
(bad)
leave
add
ins
icebp
push
add
pop
ins
popa
cwde
les
or
int
mov
xor
dec
xchg
adc
(bad)
xchg
add
inc
mov
sbb
(bad)
test
(bad)
jb
ja
(bad)
scas
sar
adc
out
jae
outs
arpl
ret
stos
xchg
jae
or
adc
outs
jb
popa
ins
or
jae
imul
pusha
outs
je
mul
sub
add
cs
test
mov
je
push
jb
imul
sbb
push
mov
sbb
inc
push
pop
inc
lds
jae
push
adc
outs
outs
xchg
pop
mov
(bad)
ins
popa
jns
add
xchg
xchg
scas
pop
out
mov
popa
fs
arpl
push
ror
jb
mov
(bad)
sbb
ret
push
imul
mov
inc
imul
inc
dec
or
sbb
jae
sbb
sub
mov
sub
cmp
fidivr
cmp
add
ss
add
sbb
je
xor
push
push
adc
cld
xor
arpl
adc
lods
pop
fdiv
dec
xchg
loop
and
jae
int
or
pop
xor
rdmsr
sub
out
xor
test
loope
sti
cwde
dec
bound
popa
mov
adc
push
push
loopne
out
or
inc
xchg
ins
and
out
test
cs
mov
les
push
dec
imul
push
and
dec
pusha
push
out
mov
add
xor
xor
sub
cmp
int
jge
call
push
sbb
jo
jp
mov
jge
or
mov
scas
xchg
or
add
push
adc
lock
xchg
jmp
dec
gs
push
push
inc
push
imul
les
mov
mov
jo
mov
je
mov
or
and
addr16
aaa
xchg
or
bound
inc
push
cs
sar
cs
arpl
or
loopne
mov
and
cs
mov
sbb
xor
add
inc
mov
or
(bad)
gs
popa
jmp
aaa
mov
aam
psllq
hlt
mov
sub
js
aaa
jne
nop
jmp
jl
movs
popf
add
inc
cmp
sbb
sbb
sbb
cs
out
enter
inc
dec
outs
pop
jae
nop
out
jecxz
inc
push
scas
sub
jb
js
inc
cmp
push
push
adc
push
dec
add
mov
jbe
sbb
inc
cs
daa
and
shufps
(bad)
xchg
daa
daa
daa
mov
leave
enter
mov
in
jne
push
mov
sbb
dec
push
pushf
mov
(bad)
cs
dec
inc
sahf
pushf
fisubr
sti
sub
jl
and
imul
adc
jmp
pop
jge
ror
add
and
loope
push
or
retf
dec
ja
fst
ret
imul
add
or
gs
mov
ins
mov
daa
mov
sub
pushf
outs
jns
scas
or
pusha
(bad)
dec
out
jecxz
inc
fist
dec
push
sub
or
pusha
fs
cli
inc
fs
inc
mov
fs
push
ins
or
pop
jmp
lahf
cmp
jnp
jle
xchg
jl
pop
sub
inc
scas
scas
jae
out
mov
and
adc
mov
push
mov
rcr
js
cmp
adc
or
jae
lea
retf
xchg
ins
aaa
sub
outs
stos
std
scas
jge
xor
or
addr16
add
add
nop
or
and
push
aas
add
movs
and
push
aas
bound
add
and
test
or
push
stos
ficomp
xor
adc
xchg
pushf
retf
inc
shl
jl
imul
adc
sbb
pop
adc
outs
popa
cmp
add
xchg
(bad)
sub
mov
rcr
rol
ror
nop
sub
inc
std
pop
add
or
or
jns
sub
adc
nop
cmc
aaa
aam
aaa
sub
and
jmp
inc
pushf
adc
mov
or
pusha
dec
inc
loopne
or
inc
or
pop
or
adc
mov
fs
add
ja
adc
dec
dec
sub
jbe
mov
xchg
adc
mov
xor
jg
jg
adc
jp
add
dec
call
adc
movs
in
lahf
dec
popa
ins
or
push
mov
sub
sar
adc
mov
add
adc
test
pop
push
jne
repz
repz
mov
sbb
adc
or
mov
addr16
(bad)
cld
pushf
pop
fild
cmp
add
add
mov
mov
sbb
sub
data16
inc
adc
add
mov
push
mov
push
jecxz
push
mov
xchg
xor
or
xlat
cmp
cli
or
pusha
adc
ror
push
sub
mov
pop
add
lea
and
and
inc
cdq
retf
push
lock
(bad)
aad
sbb
out
in
cmp
push
sbb
mov
dec
xchg
and
push
and
mov
stos
dec
dec
jo
rol
mov
outs
jbe
or
cmp
ja
scas
and
dec
ins
add
out
aad
dec
mov
retf
xchg
dec
pop
sub
mov
paddb
les
pop
test
or
or
pop
push
xor
cli
or
add
inc
add
mov
adc
fld
pop
mov
sub
push
add
fs
rol
adc
sub
sub
dec
add
mov
int
pop
popa
add
inc
rol
sub
les
jo
push
dec
and
push
push
dec
sahf
adc
mov
add
pop
cmc
mov
mov
inc
mov
addr16
mov
pushf
icebp
dec
je
add
mov
sbb
stos
rcr
sbb
mov
sbb
sbb
or
pop
div
xor
add
ficom
pushf
dec
sbb
test
add
pop
mov
aaa
int3
jne
push
fdivr
pop
inc
add
pop
jl
pusha
inc
jp
sub
inc
inc
cmp
pop
add
xchg
(bad)
movs
or
adc
pop
and
mov
xor
popf
cld
sbb
popf
pop
add
push
fbstp
inc
cwde
xchg
inc
xchg
inc
or
ror
loopne
lods
mov
mov
jo
jmp
retf
or
ins
je
int3
xor
js
cdq
inc
jbe
call
or
pop
mov
int3
dec
pop
mov
xor
sbb
push
mov
call
push
push
mov
sub
je
jmp
or
ret
mov
jbe
ds
add
mov
jmp
and
test
je
add
nop
ss
mov
mov
xor
xchg
data16
mov
inc
push
sbb
outs
fild
mov
call
or
(bad)
jbe
fs
pop
sti
ins
in
test
jbe
sub
xchg
push
mov
pushf
push
lahf
mov
idiv
icebp
mov
(bad)
mov
inc
or
inc
fs
popf
mov
fcomp
mov
mov
xchg
imul
jo
outs
mov
mov
je
or
sbb
cld
and
(bad)
cld
ret
jbe
and
mov
cmps
dec
push
call
fisttp
test
push
mov
mov
cmp
jl
(bad)
mov
jg
cmp
jge
lea
mov
jp
(bad)
fist
mov
jb
sub
add
mov
pop
xrelease
mov
mov
push
mov
popa
sbb
stos
into
or
not
and
mov
movs
dec
cld
jle
ins
cmp
add
adc
mov
mov
adc
pop
pop
or
push
cld
mov
or
dec
stc
jecxz
jmp
pop
pop
pop
ret
cmp
ror
xor
loopne
add
pop
loopne
mov
sbb
sbb
(bad)
mov
js
cmps
inc
mov
(bad)
fbld
push
in
push
clc
push
pop
sub
mov
stc
adc
or
adc
adc
and
and
adc
gs
fstp
enter
add
sub
pop
mov
call
jns
lock
sbb
clc
in
lock
fdiv
adc
push
hlt
and
movs
pop
xor
adc
sub
rcpps
xor
in
inc
push
je
ret
ss
mov
inc
mov
(bad)
push
lea
push
push
add
ror
mov
pop
icebp
xchg
pop
pop
retf
push
bound
or
mov
cmp
je
mov
mov
inc
pop
test
xchg
ret
ror
or
xchg
xor
pop
mov
mov
xchg
dec
pop
jg
mov
xchg
push
retf
lods
push
jg
outs
xor
xacquire
push
test
mov
sti
div
(bad)
sbb
nop
test
fimul
and
ret
inc
popf
cmps
mov
fst
adc
mov
addr16
lods
jecxz
cld
adc
movzx
bnd
or
jo
sbb
mov
call
pusha
xchg
arpl
adc
and
push
jg
sbb
push
inc
push
mov
loopne
pop
cmp
add
xor
test
jl
fdiv
pop
mov
shr
out
sbb
sub
mov
jae
lds
add
mov
lock
adc
push
popa
or
cli
adc
outs
mov
in
in
outs
test
out
xor
pop
ins
outs
fs
jo
adc
add
sub
shr
sbb
int3
out
cmc
ja
(bad)
jle
mov
add
push
je
cld
es
lds
sti
in
add
mov
pop
leave
sbb
pop
imul
push
cmp
gs
mov
push
sub
pop
sbb
cmp
aam
dec
push
cmp
in
arpl
xor
mov
pop
cvtps2pd
inc
dec
js
fisttp
jmp
adc
cmc
cmp
(bad)
push
cmp
test
xchg
mov
pop
or
js
pop
jno
adc
(bad)
cwde
test
cmp
js
jmp
clc
push
adc
and
in
adc
and
cmp
mov
push
adc
bound
jnp
cmp
xor
cld
repz
loop
setge
mov
sbb
xchg
dec
mov
xchg
add
mov
int3
(bad)
lahf
adc
push
fisttp
retf
fs
xchg
push
mov
hlt
xlat
or
cdq
aad
xchg
(bad)
sbb
and
lahf
sbb
cmp
inc
sub
sar
fmul
das
mov
(bad)
xchg
cmp
mov
mov
out
in
add
push
sbb
or
push
add
sbb
xchg
pop
cmc
inc
mov
pop
pusha
or
xor
push
pop
loop
shl
fdivp
jb
push
inc
or
aam
or
adc
fsubr
mov
xchg
mov
ins
test
or
adc
sub
cld
(bad)
iret
xor
mov
fld
es
jp
cmps
call
cmp
xchg
or
(bad)
adc
ror
jb
xchg
dec
mov
scas
push
das
mov
mov
lock
and
lock
sbb
jae
icebp
fisttp
cmp
movs
lods
dec
xor
loopne
scas
je
inc
jl
push
jne
dec
loope
xchg
ret
pop
cmps
call
dec
xchg
or
int
fldenv
mov
adc
sbb
cmp
in
loope
dec
jbe
fwait
xchg
ror
mov
sbb
sbb
aad
xlat
inc
stos
ret
outs
in
sub
add
loopne
push
push
scas
dec
pusha
mov
push
sub
mov
dec
lahf
dec
add
scas
outs
adc
in
in
dec
pop
(bad)
xchg
scas
loop
mov
js
stc
lds
stos
jne
lahf
mov
cmp
in
ret
dec
push
movs
hlt
call
pop
xchg
nop
inc
mov
jl
lea
mov
or
push
xchg
ret
add
push
scas
mov
sbb
sbb
loopne
jmp
outs
pop
or
inc
sub
inc
stos
ret
cmp
fcom
pop
jge
adc
cmp
adc
and
sub
iret
int
lock
and
jo
ss
test
rcl
push
mov
sub
lds
sub
or
and
xchg
cmps
mov
fistp
mov
je
adc
push
jmp
mov
add
fs
outs
push
inc
mov
push
cmp
xor
dec
mov
sub
jnp
and
push
ja
or
ror
outs
ret
push
jecxz
dec
dec
push
jne
fdiv
adc
adc
pop
adc
push
rol
inc
shl
cmps
(bad)
hlt
and
push
add
mov
cmp
xor
je
(bad)
fmul
adc
jl
adc
jo
xor
gs
mov
mov
add
sub
leave
and
int
das
sub
shl
and
clc
mov
ins
xor
xor
je
test
add
add
pushf
dec
dec
jne
lods
mov
xor
mov
xchg
cdq
std
aas
into
push
fist
outs
adc
xchg
(bad)
mov
aam
jmp
xchg
(bad)
fcomp
xor
pop
xor
cmp
mov
or
push
inc
sbb
xchg
or
cmp
adc
sub
imul
mov
out
jl
mov
cmp
cmc
or
pop
aam
add
arpl
call
jmp
xor
xor
ja
sbb
adc
inc
rcr
movs
xor
pop
jae
inc
jl
icebp
push
jl
pop
ror
xor
jp
cmp
mov
hlt
mov
and
imul
shl
sub
push
inc
add
or
sbb
dec
bound
mov
ret
xchg
inc
xchg
or
add
and
mov
adc
inc
inc
push
(bad)
(bad)
aad
mov
jo
dec
sub
aaa
je
push
sbb
cmp
cmp
inc
pop
mov
cmp
sbb
xchg
dec
ret
dec
push
lahf
and
pop
and
nop
and
mov
add
cwde
in
mov
adc
push
mov
sub
sub
inc
dec
cmp
xchg
sub
ds
clc
outs
or
sub
push
dec
and
or
xchg
nop
adc
mov
int
push
dec
mov
ins
cmps
push
ret
ficomp
mov
adc
push
xchg
clc
push
call
ret
jne
add
cmp
push
pushf
sbb
adc
daa
push
or
dec
or
add
mov
xchg
lea
push
dec
xchg
ss
adc
(bad)
cwde
pusha
mov
retf
add
call
xlat
jle
pop
enter
inc
jge
inc
shl
call
ins
mov
sbb
(bad)
stc
sbb
sbb
test
gs
clc
ret
mov
pop
ret
dec
aam
or
fs
xor
inc
mov
push
or
mov
mov
and
sbb
adc
inc
jl
xlat
lods
mov
das
mov
outs
sub
pop
lods
std
dec
ror
cmp
inc
pop
pop
stos
popf
int
in
xor
jne
add
in
sbb
clc
dec
js
xor
sub
fcos
jge
push
pop
hlt
jne
stc
sar
push
fmul
xchg
out
popa
mov
mov
and
mov
push
dec
cli
push
and
jg
loop
lea
dec
jne
in
enter
movs
adc
loop
sar
ins
cmp
fld
sbb
jb
outs
clc
rol
sub
pusha
retf
jne
or
fisubr
sub
adc
(bad)
dec
cmp
jle
clc
clc
bound
mov
sub
sub
or
(bad)
jg
sub
sub
mov
sub
jg
dec
mov
push
lea
jle
retf
repz
fimul
loopne
retf
les
retf
push
sbb
cmp
jp
cmp
scas
mov
cmp
pop
rol
mov
fidivr
cmc
and
out
sub
in
rcr
out
cli
mov
adc
mov
rol
push
addr16
aas
push
mov
int3
cmp
(bad)
inc
nop
aaa
dec
fisttp
cmp
jmp
dec
movs
mov
cli
call
jecxz
lock
test
jl
inc
xor
and
sbb
(bad)
jno
ins
mov
inc
inc
dec
jne
fldln2
aas
ins
or
neg
mov
dec
sub
jl
inc
jno
loopne
add
sbb
or
mov
int3
into
loopne
push
in
jo
or
cmp
call
mov
sub
jae
dec
cmc
dec
sub
jl
add
fwait
push
int3
enter
inc
ss
inc
outs
outs
mov
pop
jle
lea
jg
dec
lods
xchg
call
shl
aam
jns
jmp
stos
rcr
int
lahf
js
call
iret
dec
cs
adc
leave
ds
inc
aaa
add
ds
inc
add
loopne
sbb
mov
je
adc
cmp
xor
pop
stc
cmp
or
pop
add
xchg
or
dec
or
lods
sub
ja
lock
mov
pop
enter
lahf
aas
or
call
jno
add
xor
fldenv
xor
loopne
add
inc
lea
push
sahf
cmps
cmp
jl
test
xor
inc
ja
add
fdivr
push
add
cmp
je
mov
jmp
aad
dec
pop
enter
or
adc
nop
pop
int3
enter
jbe
add
pop
wbinvd
scas
sbb
mov
rcr
xor
cmps
add
mov
retf
hlt
inc
add
cmp
fs
inc
pop
cmc
push
push
jp
or
test
je
xchg
mov
test
or
test
je
sub
sub
or
push
xor
sti
mov
xor
inc
pop
in
xchg
lock
xchg
loopne
je
pop
shl
pusha
and
add
je
add
movs
ret
inc
rcr
loope
pop
test
adc
retf
into
mov
ins
or
and
adc
arpl
cld
push
sbb
or
or
add
mov
mov
add
add
js
push
jne
adc
adc
rcr
add
in
lahf
add
imul
dec
xor
mov
push
mov
outs
test
jne
es
inc
ins
test
ins
sub
addr16
push
cwde
push
add
scas
neg
add
adc
not
loope
and
add
push
adc
je
inc
xchg
jp
add
aam
mov
and
in
imul
mov
and
dec
pop
push
faddp
leave
aam
pop
out
shl
push
cmp
add
jl
add
pop
jne
xor
mov
add
and
lods
push
pushf
mov
movs
add
push
(bad)
mov
clc
je
mov
jmp
xchg
fidivr
mov
adc
cmp
in
je
gs
adc
dec
fstp
hlt
mul
mov
sbb
push
mov
pop
ja
dec
bound
(bad)
or
popa
xchg
inc
out
scas
cmp
pop
test
cmp
je
add
push
lods
sbb
pop
adc
popa
fcomp
cwde
and
jmp
push
push
popf
add
das
std
sub
push
stos
sub
xor
sbb
jo
inc
dec
dec
mov
inc
rcl
pop
push
push
movs
movs
mov
cmp
adc
jmp
clc
dec
mov
add
sbb
cli
pushf
inc
add
add
sub
dec
ds
(bad)
jmp
cwde
mov
add
or
sbb
mov
mov
(bad)
jnp
mov
mov
pop
push
pop
fld
add
cdq
mov
lods
jge
scas
jge
pop
in
add
push
jno
cmp
add
js
in
jno
add
mov
cwde
xchg
pop
xchg
sbb
lods
out
rcr
out
mov
movs
pusha
xchg
xor
icebp
pop
add
cdq
idiv
inc
mov
sub
int3
mov
xor
cmp
fmul
pop
jecxz
stos
ficom
cmp
ss
push
movs
les
es
add
mov
in
cmc
fidivr
bound
add
push
call
jge
lods
sub
pop
adc
mov
sbb
xor
or
cmps
sbb
inc
dec
jne
push
pop
inc
push
loopne
push
adc
jmp
fstp
icebp
sbb
jae
xchg
ficomp
mov
jmp
jp
cmps
sar
cmps
pop
cmp
sbb
xor
inc
test
pop
sbb
xchg
sub
push
inc
cmp
cmp
jp
sub
fstp
out
fdiv
(bad)
inc
pop
cmps
mov
fst
push
loop
add
dec
sbb
mov
jne
iret
fild
pop
das
or
(bad)
mov
fcomp
sub
pop
sub
idiv
sbb
out
mov
call
dec
jne
cmp
jne
dec
jne
ret
push
repnz
out
daa
(bad)
sub
(bad)
sahf
out
or
xchg
xchg
adc
xchg
ret
nop
and
or
xchg
loopne
cwde
aaa
pop
fcom
or
pop
pop
mov
iret
fcom
cmp
sbb
push
mov
sar
or
push
leave
add
cwde
test
test
cdq
pop
xchg
push
dec
add
xor
jb
cmp
mov
mov
jae
or
retf
sbb
push
jnp
movzx
shr
mov
sbb
xor
repz
jge
cmp
pop
cmp
jne
cmp
or
test
mov
in
fsubr
or
jno
nop
sbb
push
icebp
dec
pop
sbb
and
sbb
push
and
jecxz
adc
(bad)
add
cmp
jne
mov
(bad)
std
mov
stos
or
and
jb
push
jo
stos
and
pop
fsub
mov
xor
dec
into
mov
inc
inc
lahf
push
dec
inc
adc
fcomp
dec
add
or
jp
jmp
mov
mov
shl
aaa
cld
push
popa
imul
xor
lahf
or
ret
nop
cmp
mov
or
shl
mov
rcl
adc
dec
aaa
pop
in
shl
push
je
ins
dec
add
pushf
popf
loopne
add
jbe
add
aaa
cmp
add
dec
adc
xlat
bnd
pop
ss
fwait
es
add
inc
jbe
pop
mov
dec
dec
or
inc
or
cmp
ja
inc
or
push
jno
pushf
pop
jne
fisub
test
or
push
sbb
fist
ds
fs
aas
dec
or
je
mov
lock
add
adc
pop
(bad)
cwde
mov
mov
(bad)
sbb
mov
inc
add
pop
push
fsubr
push
mov
iret
repz
lods
inc
ja
add
add
inc
dec
outs
jne
jb
imul
jb
loop
pop
and
f2xm1
into
mov
ins
cs
inc
outs
jns
imul
in
add
push
daa
inc
jb
popa
imul
mov
repz
push
ins
bound
outs
gs
or
or
popa
fcomip
movs
mov
sub
inc
mov
popa
outs
addr16
jbe
in
add
push
push
push
fs
push
dec
jmp
int
bound
arpl
or
mov
fs
push
bound
ins
fs
inc
outs
outs
ins
scas
outs
mov
pop
mov
push
sub
add
pop
fdivr
pop
xchg
sbb
adc
leave
inc
jb
ja
and
mov
inc
call
movups
xor
cs
sub
and
gs
pop
dec
jmp
and
nop
mov
sbb
gs
popa
mov
sbb
pop
jge
add
push
je
shl
js
pop
ja
jb
pop
add
loope
retf
fdiv
sbb
shl
mov
push
es
jg
sti
pop
add
push
je
add
dec
imul
je
arpl
scas
cwde
fisub
pop
call
sbb
adc
adc
(bad)
adc
je
inc
ins
popa
addr16
fdivr
or
(bad)
mov
je
arpl
dec
lods
jne
ins
adc
xor
add
jae
mov
sahf
or
imul
add
xor
xlat
iret
jmp
dec
add
and
and
pop
sbb
arpl
cmps
rol
or
ror
aam
cwde
neg
ds
pop
bound
jl
rol
neg
dec
xchg
inc
mov
mov
dec
fmul
out
jns
mov
pop
push
add
in
daa
imul
push
cmp
or
es
jns
jnp
adc
push
cwde
push
mov
inc
jbe
sub
sub
popf
loop
scas
sbb
inc
inc
ins
imul
adc
dec
sbb
dec
imul
sub
pop
das
push
mov
add
hlt
xlat
fldenv
pop
add
ret
push
daa
and
push
loopne
jne
inc
push
xchg
es
pop
sbb
cmp
shr
js
enter
inc
sbb
mov
mov
adc
fs
leave
repz
clc
dec
adc
fidiv
inc
or
dec
cwde
outs
jb
xor
loopne
add
push
inc
xchg
cs
rcl
fwait
test
or
outs
add
data16
or
add
sbb
inc
cmps
jg
or
je
retf
sub
dec
and
jns
cmp
test
push
or
or
dec
jecxz
mov
pop
inc
adc
idiv
add
les
in
cmc
xor
enter
fst
mov
dec
pop
add
data16
fdivp
push
cmp
lds
(bad)
(bad)
mov
loopne
mov
ins
cmps
dec
inc
or
xchg
fild
inc
test
inc
cmp
fisttp
sub
or
dec
div
imul
push
push
dec
pusha
push
push
dec
pop
js
mov
xchg
xor
sub
cmp
mov
mov
pop
push
sbb
cli
xchg
push
les
rol
push
jo
mov
push
pop
ret
out
jne
mov
adc
add
push
or
or
loopne
pop
pop
ret
push
shr
es
push
xchg
inc
inc
gs
jne
mov
inc
inc
es
jnp
in
mov
jns
das
dec
adc
sahf
fisub
jne
xchg
pop
and
data16
add
inc
push
popa
fs
sub
fnstsw
jae
call
shr
push
in
inc
jb
jne
popf
mov
adc
dec
lods
addr16
push
sub
dec
test
lahf
and
inc
imul
and
shl
or
sub
int3
and
es
mov
dec
in
jo
mov
fistp
add
fst
sbb
xchg
add
lea
ret
push
leave
ret
dec
icebp
lods
in
sub
fsub
jb
dec
cmp
xchg
jmp
in
mov
sbb
int3
and
fsubr
ret
sbb
pop
outs
pop
mov
lods
adc
je
(bad)
fs
icebp
lock
or
sbb
inc
rcr
mov
ss
outs
jne
add
test
inc
push
jo
das
sub
cwde
sub
sub
jnp
imul
es
adc
sub
mov
sub
icebp
cmp
xchg
cmp
jo
mov
sub
scas
loop
sub
mov
mov
add
add
repnz
out
mov
dec
inc
ins
adc
sbb
in
adc
dec
outs
fstp
aas
push
add
push
pop
ins
cpuid
enter
jg
add
dec
retf
pop
cmp
push
jbe
call
lock
(bad)
jb
xor
retf
cmp
jns
int
nop
mov
sahf
idiv
std
push
and
pop
into
add
(bad)
out
(bad)
clc
mov
xor
(bad)
jmp
and
pop
ins
ds
and
and
push
add
mov
ss
pop
push
mov
mov
mov
dec
fimul
inc
stos
cmp
sbb
xchg
jae
outs
jns
xchg
nop
popa
ins
add
cs
push
rol
mov
mov
push
pop
push
jae
nop
nop
outs
add
add
mov
rcr
mov
xchg
push
fcomp
test
and
lea
sbb
jb
les
or
test
shl
dec
add
push
fs
stc
stc
clc
or
and
xchg
pop
sub
or
push
dec
data16
test
jno
jo
add
dec
jo
push
aam
jae
loop
js
and
inc
js
sahf
lock
mov
push
cmp
es
scas
ror
bound
pushf
arpl
fcom
outs
cwde
jo
fcmovne
add
or
fcom
lock
pushf
pop
or
mov
push
imul
push
add
adc
js
xor
ret
retf
pusha
adc
bound
xor
xor
loope
(bad)
jae
dec
xor
lods
sbb
or
ja
outs
jo
cmp
push
int3
cmp
int
ret
inc
ss
pop
mov
rcr
fs
inc
adc
xchg
gs
add
inc
int
mov
adc
jbe
pop
inc
data16
sub
mov
add
(bad)
adc
mov
add
sbb
mov
push
sbb
add
add
add
mov
sbb
push
int3
or
imul
mov
scas
xor
jle
data16
outs
imul
and
cmp
cmp
push
push
imul
fs
adc
daa
dec
adc
mov
loopne
ins
jne
mov
ins
inc
push
add
add
pop
dec
je
mov
daa
in
imul
enter
push
jns
add
pop
mov
es
inc
inc
fmul
loope
or
mov
cmp
add
ror
addr16
sbb
adc
icebp
ror
adc
mov
push
jmp
or
sub
popa
add
sahf
sub
in
cmp
xor
inc
ds
sub
aas
ret
sbb
shl
dec
mov
push
adc
inc
or
pop
dec
adc
(bad)
add
call
pop
repz
add
and
test
dec
mov
push
out
bound
inc
and
inc
xchg
ret
inc
enter
test
aam
inc
jno
fwait
popf
inc
test
nop
xchg
sbb
adc
sub
adc
jno
sar
popa
ret
inc
xor
call
jb
adc
daa
inc
or
daa
aam
xor
out
adc
jo
popa
movs
dec
lea
add
in
dec
inc
sub
and
sub
sub
mov
add
or
and
inc
shl
rcl
push
out
les
pop
pop
pop
fwait
push
dec
sbb
xchg
sbb
(bad)
inc
retf
addr16
jmp
int3
or
sahf
cs
inc
inc
(bad)
lock
xor
inc
inc
push
jne
mov
loope
shr
inc
inc
inc
inc
jo
mov
pop
cs
inc
sti
and
dec
cs
call
xchg
jb
add
daa
sbb
(bad)
shl
push
dec
arpl
pop
stos
inc
push
test
leave
loopne
inc
out
mov
jne
aas
pop
fdiv
(bad)
rol
aas
or
mov
ins
or
cmovno
hlt
mov
xlat
mov
dec
push
push
pop
add
shr
or
xor
or
in
daa
adc
shl
mov
push
leave
aam
aaa
aad
mov
imul
push
pusha
sbb
idiv
fld
inc
fisub
adc
div
dec
xlat
mov
cmp
enter
int
push
add
and
pushf
ret
dec
pusha
js
mov
dec
outs
mov
leave
popa
mov
ror
(bad)
movs
js
sub
inc
push
pusha
xchg
jecxz
outs
ja
sub
out
push
add
or
sub
nop
rol
xchg
ss
inc
aaa
rol
push
add
ror
add
mov
cmp
in
push
push
dec
mov
push
hlt
loop
xchg
and
sbb
popa
cmps
movs
in
mov
cdq
mov
push
out
jmp
sub
jbe
out
loope
cdq
mov
shr
adc
inc
cs
mov
adc
jp
ror
push
jecxz
es
jnp
pop
push
sub
or
mov
pop
ror
jae
stos
arpl
mov
daa
xchg
out
mov
(bad)
imul
or
push
outs
jo
jo
iret
inc
sub
inc
inc
add
ins
or
hlt
jp
loope
add
test
pop
jo
leave
xor
adc
bound
push
mov
test
mov
or
push
mov
xor
and
xchg
loop
push
pop
inc
jns
sub
add
or
push
outs
dec
gs
mov
or
and
cdq
xchg
sbb
inc
(bad)
mov
outs
call
dec
je
cdq
sbb
ja
data16
outs
test
imul
lea
dec
jl
and
xchg
(bad)
xchg
or
add
pop
ret
dec
das
sub
xchg
pop
loope
pusha
mov
in
outs
add
jmp
fs
and
out
add
fcom
add
cmp
fld
xor
sbb
dec
push
outs
popf
js
inc
jle
dec
mov
inc
jo
fldenv
pop
pushf
add
inc
pop
jo
inc
sbb
and
and
mov
aaa
sub
ret
call
xor
or
fbstp
inc
cmovbe
std
cmp
dec
or
mov
jo
lods
add
jp
in
lods
fcomp
shl
das
and
pop
scas
mov
mov
dec
inc
mov
add
loopne
xchg
repnz
fdivr
pop
pop
dec
sub
pop
sbb
setae
mov
(bad)
fidiv
xor
xor
add
mov
test
sbb
loopne
jno
fs
push
outs
imul
mov
push
push
adc
ins
push
popf
nop
cwde
add
hlt
jnp
push
scas
sbb
or
repnz
jo
mov
ror
pusha
push
xchg
outs
mov
mov
pop
adc
mov
push
push
xor
add
jl
pop
dec
enter
in
jbe
and
std
fdivr
xchg
push
mov
push
push
enter
shl
pop
ins
pop
mov
add
adc
pop
cmp
repz
gs
add
movs
push
pop
cmp
xchg
arpl
sbb
and
scas
adc
inc
ror
cmps
mov
add
pop
fisttp
pushf
add
int
enter
inc
repz
dec
retf
enter
aam
test
fimul
ins
imul
add
inc
cmp
push
jo
pop
adc
pop
or
pusha
xchg
pop
or
inc
inc
xchg
xchg
loopne
test
arpl
mov
movs
outs
mov
xor
mov
(bad)
movs
sbb
dec
pop
pop
inc
outs
imul
enter
test
jns
outs
mov
xor
sbb
rcr
sbb
sahf
adc
sub
sbb
bound
add
ret
pop
jbe
outs
add
push
add
ins
push
add
xor
add
push
mov
sub
jo
aam
das
outs
fadd
jle
or
fld
imul
sar
loopne
add
adc
inc
scas
or
pusha
or
sbb
gs
push
mov
sub
sub
cmp
popa
sub
cs
and
xor
pop
or
(bad)
pop
jns
push
popf
push
xor
jae
rcr
jle
pop
scas
add
add
ds
pop
addr16
mov
push
xor
jecxz
adc
add
daa
loope
rol
ins
pop
jecxz
push
in
add
or
outs
jae
fwait
icebp
loope
push
cmp
add
jl
add
add
dec
or
fnstsw
lock
inc
pop
movs
mov
xchg
adc
loop
rol
push
inc
lahf
push
add
lahf
mov
inc
push
pavgb
add
clc
inc
addr16
pop
xor
inc
mov
mov
xor
in
sub
(bad)
in
lea
xchg
inc
jo
and
(bad)
repnz
pusha
fstp
or
add
cs
inc
cdq
and
jb
adc
inc
inc
fcomp
les
shl
add
or
inc
or
out
sbb
mov
xchg
sbb
lods
into
neg
jecxz
sbb
mov
cmp
stos
daa
scas
mov
xor
push
ins
and
cmps
add
xlat
push
fsub
repz
or
sbb
(bad)
ror
mov
pushf
push
rcl
jo
das
xor
mov
fld
push
test
(bad)
cdq
(bad)
cmp
pushf
in
int
sbb
test
scas
push
adc
push
inc
lfs
mov
or
mov
jl
pop
xchg
nop
push
jno
arpl
add
push
xor
pop
mov
or
cs
aas
inc
mov
scas
xchg
scas
push
mov
adc
adc
sbb
mov
nop
pop
mov
cmovb
or
push
call
mov
mov
pop
jp
fmul
dec
push
je
in
sbb
cmp
mov
call
sbb
sbb
jge
bound
popf
lahf
pop
adc
mov
loopne
add
mov
or
and
xor
and
add
adc
cmp
push
inc
mov
mov
aad
adc
cwde
ss
out
jg
pop
mov
sbb
push
add
aaa
not
add
pop
add
es
push
mov
xor
mov
call
(bad)
js
mov
test
je
push
add
ret
sub
clc
mov
test
jne
(bad)
inc
(bad)
pop
pop
pop
ret
lea
mov
push
mov
push
mov
mov
mov
inc
mov
cwde
test
cmps
lods
jecxz
pop
pop
inc
(bad)
(bad)
(bad)
jg
mov
xor
movzx
shr
test
jne
mov
test
je
add
cld
enter
add
add
xor
adc
add
repnz
loopne
pop
rcr
add
ret
push
adc
jmp
push
inc
sub
and
xor
iret
mov
shl
aam
das
push
(bad)
jmp
jge
jo
mov
outs
loopne
int3
shl
push
div
push
mov
mov
enter
jge
add
sub
jb
or
jo
add
je
mov
jge
push
or
or
jge
sub
xlat
mov
fcom
ret
or
pop
in
popa
mov
cmp
pop
cli
sbb
data16
adc
adc
jbe
xchg
push
cmp
in
jo
mov
mov
in
in
xchg
inc
xchg
add
jg
icebp
xor
nop
xchg
out
jmp
sub
data16
add
dec
xor
push
and
xchg
inc
cmp
push
clc
pop
lds
int3
xor
clc
inc
pusha
dec
js
fwait
je
or
sub
xlat
mov
je
cmc
test
or
xor
daa
inc
or
inc
icebp
in
sbb
pop
dec
or
mov
adc
repnz
mov
ja
test
jmp
jmp
inc
loopne
cmps
jae
sub
jno
jno
daa
lods
addr16
hlt
mov
jl
mov
jb
inc
sti
rcr
adc
rcl
adc
shr
dec
fsub
sbb
xchg
or
adc
xchg
(bad)
in
js
pop
xchg
add
push
add
jl
enter
push
popf
sub
ds
call
mov
mov
or
neg
cs
push
int
sbb
clc
test
pop
cmp
mov
out
fadd
das
inc
jmp
popa
cdq
xchg
popa
cmp
mov
xor
shr
sub
dec
sub
mov
pusha
mov
jb
adc
sti
sbb
mov
out
or
jmp
inc
bound
push
add
neg
mul
sub
shl
or
push
mov
or
inc
or
push
jp
shl
mov
aaa
hlt
mov
inc
adc
cld
xchg
clc
inc
jmp
mov
repz
fsubr
rol
or
inc
cld
jg
sbb
mov
ins
adc
add
inc
cmp
or
mov
add
cli
mul
in
xchg
fisttp
popf
enter
enter
sahf
cld
rcr
scas
mov
lock
xor
out
push
lods
imul
hlt
or
hlt
push
stos
or
lock
push
stos
nop
mov
cmp
jle
add
in
(bad)
imul
cmp
jle
sub
mul
ss
jmp
cmp
sbb
loope
adc
jb
retf
fist
xor
jmp
cmp
xor
jb
jmp
call
pop
dec
xlat
jge
jle
cmp
fist
aaa
push
and
inc
mov
in
push
adc
ds
mov
adc
mov
jb
mov
mov
xor
cmp
push
xchg
shr
(bad)
pop
js
mov
add
cmp
loop
pop
mov
addr16
sti
jecxz
mov
mov
push
adc
loopne
jnp
mov
xor
sub
pop
pop
sbb
push
pop
stos
inc
xor
add
sti
adc
inc
jo
dec
cmps
push
xchg
inc
jno
push
jmp
movs
jne
pusha
dec
dec
js
inc
test
loopne
jns
mov
cmp
js
push
cmp
adc
je
ret
push
imul
pop
out
mov
dec
adc
sub
enter
mov
dec
adc
xor
cmps
xor
sbb
fcom
cmc
dec
test
push
shl
xchg
inc
sbb
or
repnz
js
sbb
in
loopne
sbb
mov
test
call
and
cld
(bad)
cwde
jbe
inc
cmp
mov
push
sub
sar
add
xchg
mov
adc
push
xor
push
mov
pop
adc
add
(bad)
cs
and
mov
aas
push
jbe
push
inc
xchg
inc
pusha
xor
aas
inc
aas
adc
sar
aas
or
xchg
mov
pushf
je
ret
aas
pop
pop
ret
xchg
push
test
je
sahf
lock
xlat
push
sbb
mov
rol
fld
mov
inc
add
mov
and
ins
sub
pop
dec
push
sbb
add
or
clc
mov
fmul
inc
add
lahf
xchg
pusha
not
cmps
mov
fucomp
mov
jnp
push
call
jmp
mov
inc
dec
add
inc
push
jnp
ds
add
jns
xchg
and
inc
dec
lea
push
dec
dec
(bad)
sbb
int3
xor
pop
shl
mov
pusha
push
pusha
sub
mov
ret
mov
pop
(bad)
cmp
mov
loopne
mov
pushf
test
add
neg
sbb
jmp
inc
xchg
or
imul
pop
dec
jg
cmp
adc
xchg
mov
fmul
dec
or
add
mov
je
mov
jg
mov
mov
mov
xor
popw
shl
xchg
sbb
mov
pop
paddd
lods
adc
sub
inc
pop
aas
mov
and
or
rcr
dec
out
ret
rcl
push
fisttp
mov
pop
test
mov
push
cmp
daa
cwde
lock
test
push
mov
xor
enter
cmp
rol
out
inc
aam
dec
cmp
shl
loope
mov
cmp
jnp
add
out
adc
(bad)
shl
jne
push
lods
mov
push
mov
es
out
mov
fwait
inc
add
enter
jns
mov
div
cmp
jne
mov
jle
mov
adc
bswap
jbe
les
xor
sar
je
adc
add
lods
je
cmp
sub
adc
cmp
push
cmp
xchg
stc
xor
jl
add
adc
inc
mov
pop
je
mov
push
sub
test
sbb
mov
xchg
lods
sar
sub
adc
pop
les
(bad)
inc
mov
lods
sete
and
mov
mov
test
pusha
ficom
fistp
jmp
jbe
adc
lea
test
repz
fcom
mov
bnd
inc
xor
div
inc
int3
movs
pop
or
out
xor
pop
aam
cmps
or
popa
pop
bound
and
cmp
cld
inc
in
rcl
add
add
push
fld
out
sbb
cwde
out
push
adc
outs
or
test
fadd
dec
pusha
js
icebp
and
or
and
adc
pusha
jmp
and
push
aaa
xor
not
shl
mov
nop
or
sahf
ss
bound
or
sub
mov
sti
or
stos
add
inc
sub
and
sbb
mov
sbb
loopne
pop
mov
pusha
and
jmp
adc
dec
push
loopne
(bad)
pop
mov
cld
fabs
adc
je
and
jns
add
mov
xchg
jmp
or
inc
jge
inc
cmps
sti
in
or
inc
sbb
js
shl
test
push
adc
push
ret
or
push
test
jne
fcmovnbe
sbb
je
shl
or
mov
sbb
mov
ror
sbb
pusha
test
cld
cmps
imul
inc
mov
push
jp
outs
adc
adc
mov
pop
popf
cmc
jae
cmp
pop
mov
lock
test
mov
adc
adc
xchg
jmp
jae
dec
js
arpl
lahf
and
jecxz
xor
and
test
pusha
(bad)
mov
jle
push
inc
in
pop
idiv
test
jne
xor
dec
data16
sbb
dec
cmp
int3
jl
arpl
or
push
sub
stos
inc
pop
sbb
das
lock
sbb
inc
mov
pop
lods
ror
mov
lock
(bad)
mov
dec
retf
inc
xor
cmp
jge
cld
iret
mov
dec
jae
mov
fisubr
xor
sti
cbw
lods
sbb
pop
shl
jp
cmp
adc
adc
inc
sub
cmp
inc
or
cwde
sub
movs
xor
pop
jl
aas
cld
mov
(bad)
not
cmps
inc
adc
push
jp
push
sbb
shl
add
add
pop
mov
pop
lahf
scas
push
push
outs
cli
ins
add
pop
inc
mov
cmp
xor
xchg
call
or
outs
cli
in
nop
cmp
add
out
fisub
aam
or
adc
(bad)
and
add
es
js
test
add
pop
ficomp
mov
(bad)
push
adc
cmp
jne
adc
jne
jns
fnstsw
mov
push
mov
pushf
push
je
adc
jb
cmp
out
add
inc
lea
movs
add
out
add
add
jo
lock
push
adc
mov
or
jnp
das
add
adc
inc
movs
xor
cs
jmp
arpl
dec
and
enter
in
or
xor
movs
inc
add
mov
call
mov
icebp
mov
pop
mov
sahf
in
(bad)
clc
mov
mov
and
jo
push
daa
push
xor
or
ja
or
shl
xchg
bnd
add
pop
cmp
xchg
or
data16
shr
clc
and
pop
sbb
loope
pop
sub
cwde
div
add
pusha
xlat
and
(bad)
movzx
test
test
lock
outs
call
dec
or
aas
jne
and
fiadd
lahf
push
mov
in
fisub
xchg
push
cld
xor
inc
mov
je
ss
test
pushf
mov
out
in
add
sbb
adc
inc
add
not
and
adc
xor
or
(bad)
ror
adc
adc
add
sbb
js
es
sti
mov
and
ds
xchg
nop
push
add
or
sub
loope
dec
fcomp
xor
inc
push
xchg
in
inc
in
in
mov
push
xchg
pop
in
mov
jne
inc
or
dec
pop
or
adc
or
sbb
addr16
jo
inc
add
mov
inc
adc
aaa
xor
pop
mov
xor
inc
or
clc
mov
inc
or
add
inc
sub
shr
cmc
pusha
sbb
nop
test
xchg
lea
mov
(bad)
sbb
push
mov
(bad)
call
pop
dec
shl
pop
mov
lods
and
push
sbb
xchg
ret
jg
adc
les
test
add
mov
xchg
(bad)
aas
sbb
out
dec
jg
pop
ror
push
pop
adc
and
in
or
adc
call
and
dec
outs
mov
movs
mov
mov
jne
cmp
and
adc
mov
or
xchg
push
fsubr
jmp
aas
mov
and
enter
add
mov
xor
adc
cmp
push
loopne
in
add
push
test
js
ja
sbb
iret
add
add
and
rcl
sti
daa
add
and
xor
das
fdivr
xor
add
mov
fild
push
lea
lea
fistp
pop
jg
fisttp
fs
pop
aam
(bad)
in
cmp
jle
ss
jmp
fisubr
push
sbb
jbe
mov
retf
xor
leave
je
inc
call
(bad)
jnp
inc
loopne
in
sub
sar
jns
adc
or
js
sbb
push
mov
cli
push
rcl
out
cs
add
mov
mov
shl
(bad)
shl
adc
mov
cmp
add
xchg
xlat
ins
inc
cmp
cmp
ss
fmul
dec
addr16
fucomip
mov
sub
adc
or
inc
push
fidiv
xchg
mov
sub
mov
mov
push
(bad)
sub
shr
pop
das
adc
push
and
retf
es
out
into
jle
(bad)
fwait
push
sti
jmp
pop
mov
stos
jb
adc
retf
jb
imul
mov
cmp
out
fcom
and
cmp
jl
fcomp
inc
push
push
pop
sub
mov
pop
push
push
mov
xor
sbb
fs
xor
pop
test
lock
cs
jne
adc
inc
lock
fcom
jle
or
cmc
jge
lds
jb
pushf
cmp
adc
sub
jb
call
retf
jg
sub
xor
retf
push
ins
test
mov
fstp
enter
push
clc
out
pop
and
loopne
call
and
cmc
test
bound
add
adc
cwde
push
mov
dec
xor
mov
pop
or
or
sub
daa
cmps
test
sub
jno
adc
lods
ja
xor
ficomp
je
jge
and
int
loop
jp
add
aas
in
pusha
push
dec
neg
mov
xchg
mov
and
movs
mov
aas
mov
daa
dec
pop
(bad)
int
das
add
in
push
push
fstp
test
push
push
jae
ret
or
mov
not
es
sub
pusha
jo
sbb
push
inc
or
add
fild
or
lock
xor
ds
adc
gs
lds
push
out
adc
jle
test
(bad)
inc
cwde
ins
add
push
jo
push
mov
inc
scas
push
push
push
outs
mov
dec
xchg
sbb
imul
and
stos
mov
push
sbb
cmp
lea
(bad)
iret
pop
jle
add
pop
ja
xor
std
mov
xchg
cmp
rol
leave
add
bts
js
adc
pusha
or
cmp
mov
nop
test
je
adc
xchg
adc
sbb
mov
int3
outs
loope
push
mov
iret
cmp
scas
mov
sbb
inc
jmp
push
setbe
pop
les
test
dec
adc
into
fisttp
test
jbe
cmc
clc
and
adc
test
xor
push
push
dec
add
push
push
js
inc
lods
add
mov
dec
adc
add
adc
xor
addr16
adc
sbb
es
add
inc
fld
popa
mov
clc
mov
pop
add
or
imul
push
pop
std
call
or
out
out
sar
jmp
test
mov
test
jo
shr
adc
sub
in
pop
and
sub
arpl
inc
mov
repz
inc
adc
adc
sub
push
push
aam
mov
outs
adc
add
shr
dec
mov
xor
cmp
cmp
je
aas
adc
outs
es
int3
(bad)
sub
push
adc
xor
mov
jmp
sbb
mov
inc
xlat
ins
push
pop
cs
xor
cmps
ins
mov
sbb
mov
fwait
mov
fwait
jne
jne
sbb
sub
rcl
(bad)
test
sbb
lds
jle
jmp
stc
inc
cdq
pop
dec
cmp
retf
inc
fdivr
xchg
imul
rcl
mov
cwde
inc
push
pusha
test
mov
inc
sbb
les
pop
mov
sbb
lock
pop
ficomp
sbb
push
aam
dec
jo
mov
sub
add
sub
ficom
adc
inc
pop
pusha
dec
sbb
cmp
pop
lds
in
sbb
js
push
adc
xchg
add
mov
cmps
inc
cmp
fwait
arpl
std
mov
pushf
lds
push
popa
dec
das
sahf
or
push
or
push
sub
mov
jnp
das
dec
jo
scas
or
xchg
mov
daa
inc
dec
or
or
lds
jp
ret
jge
sbb
into
dec
inc
dec
jnp
dec
repz
jl
pop
jns
add
aam
pop
push
add
cmp
push
sahf
adc
fldcw
xor
or
add
push
add
push
mov
nop
or
pushf
into
push
adc
mov
je
adc
ret
push
les
or
sub
arpl
(bad)
inc
push
dec
cld
sbb
sub
dec
pop
loopne
rcl
pop
mov
rol
pop
jmp
or
jp
loopne
push
test
jae
add
mov
xchg
and
and
mov
fucomp
sub
cmp
jge
js
pop
ins
cmp
inc
add
dec
mov
mov
sbb
out
ret
or
sbb
in
(bad)
mov
cmp
mov
daa
(bad)
adc
rcr
push
sub
mov
daa
cmp
dec
jmp
or
add
pop
push
ins
push
nop
sub
xchg
ins
jg
nop
add
xor
js
leave
jecxz
xchg
xor
rol
or
(bad)
in
jge
pop
or
adc
or
mov
adc
cmp
mov
add
repnz
add
and
sub
(bad)
retf
or
ja
scas
adc
lods
rcl
mov
cmp
sub
test
movs
sub
fidivr
bound
mov
jmp
test
dec
add
add
inc
ret
add
sub
pop
shl
push
mov
sti
fmul
repz
inc
push
mov
clc
fcmove
pusha
push
(bad)
enter
push
dec
lahf
call
mov
popf
cmp
inc
test
inc
push
mov
ret
mov
loope
ret
mov
stc
call
pop
and
push
stos
loope
add
sti
add
ds
jno
leave
or
lods
jne
push
add
add
(bad)
push
or
and
jl
lods
sub
sete
out
sub
sbb
mov
cmps
les
xchg
and
adc
stc
ja
movs
add
add
sbb
imul
out
sbb
adc
xlat
clc
push
push
inc
and
xor
xor
lea
shl
xlat
enter
movs
cmp
test
ret
xchg
loope
inc
and
loope
xchg
enter
pop
push
loopne
cmp
xor
test
jae
inc
ins
(bad)
ret
dec
loope
mov
add
xchg
adc
and
mov
(bad)
push
jns
and
inc
adc
enter
dec
cmp
inc
movs
imul
sub
mov
inc
movs
push
xchg
arpl
mov
jno
add
dec
inc
adc
int3
in
push
inc
iret
sbb
add
loopne
sub
and
iret
ret
add
add
iret
or
and
add
sub
xchg
in
sbb
add
sub
mov
or
inc
call
(bad)
in
pop
xchg
sbb
lock
pop
scas
xchg
rol
(bad)
adc
or
add
push
push
or
mov
mov
add
push
mov
fsave
adc
and
mov
mov
mov
cmp
jg
adc
mov
sub
cmp
mov
cmp
add
fnstcw
add
and
pop
outs
les
dec
push
sbb
sub
mov
mov
jle
cmp
sbb
inc
pop
mov
inc
mov
or
pusha
add
fimul
sbb
cmp
mov
push
and
fdiv
add
push
mov
leave
add
jle
dec
add
loopne
push
push
add
inc
aam
pop
mov
and
sub
aam
mov
jo
imul
or
test
xor
js
cmp
(bad)
popf
ficomp
in
inc
pop
jmp
aas
dec
aas
or
xchg
jl
neg
adc
sbb
inc
repnz
pop
sub
ret
nop
push
xor
push
jo
xlat
or
std
add
stos
cmp
cs
sub
push
pop
or
mov
pop
ret
mov
(bad)
sbb
shl
mov
addr16
movd
add
fdivr
(bad)
mov
in
mov
(bad)
sbb
cld
fcomp
shr
stc
test
xchg
mov
(bad)
call
fst
add
jg
adc
fcomp
lock
mov
sbb
mov
adc
dec
out
adc
mov
jae
push
push
test
jmp
out
sbb
imul
shl
mov
ja
cmp
jle
sbb
ror
es
push
lock
dec
push
and
retf
push
xor
les
jo
test
mov
jo
sbb
imul
inc
add
xchg
popa
jns
mov
xchg
push
hlt
xor
mov
lahf
push
or
add
call
es
or
add
sbb
in
sbb
or
dec
int3
mov
push
adc
imul
outs
jbe
and
les
and
fsub
sbb
xchg
rcl
ins
mov
sbb
call
push
dec
cld
mov
shl
test
xor
pop
cld
ss
ss
lea
lea
es
push
fild
or
sub
inc
int
pop
adc
or
cwde
(bad)
push
mov
sub
adc
push
test
dec
xchg
push
add
shl
inc
push
inc
mov
xchg
jo
sbb
loope
mov
pushf
dec
or
mov
add
inc
xor
mov
imul
inc
inc
pushf
mov
cmp
(bad)
push
dec
dec
xchg
jb
push
xchg
inc
jecxz
xor
xchg
jbe
inc
pop
xor
mov
xor
xor
inc
int3
mov
mov
add
mov
mov
xor
ret
ja
repnz
and
jae
nop
cld
sbb
inc
jecxz
pusha
or
pop
add
push
mov
push
pop
out
cli
push
or
bswap
adc
mov
add
imul
out
or
jo
jmp
and
and
cld
ret
les
add
inc
push
adc
push
call
jno
jge
test
pop
and
jnp
jg
cmp
mov
xor
jnp
sbb
push
and
adc
cmc
push
(bad)
ja
into
loopne
jbe
jne
imul
xor
in
adc
mov
add
pop
and
das
fs
xchg
loope
mov
or
and
shl
and
call
push
test
stc
mov
in
inc
(bad)
jo
sub
sbb
or
inc
pop
lock
int
inc
jmp
adc
in
out
(bad)
mov
jl
mov
inc
push
and
or
jnp
add
rcl
out
adc
xchg
stos
xchg
test
adc
fadd
clc
retf
mov
imul
mov
inc
je
fadd
xchg
repnz
xor
mov
mov
or
test
xor
and
aad
adc
stos
cmps
push
lock
sbb
lock
cld
mov
inc
fsub
push
pop
sahf
pop
xor
mov
mov
xor
inc
ret
je
aas
loop
mov
pop
xchg
sub
ret
push
fmul
test
(bad)
cmp
sbb
ja
out
jl
sub
dec
daa
in
cmp
je
cmp
jecxz
sub
cmp
jne
or
lock
inc
dec
jne
and
cmps
xchg
call
sti
pop
inc
je
mov
mov
push
inc
sbb
mov
call
jl
mov
jle
inc
pop
mov
cs
aam
cmp
push
adc
inc
je
adc
pop
test
or
rcl
cmp
add
jmp
add
rcl
outs
icebp
mov
out
dec
je
(bad)
adc
(bad)
popa
sbb
and
pop
and
arpl
nop
push
ja
lds
mov
mov
ret
aam
mov
in
inc
pusha
push
cs
or
mov
cmp
inc
fisttp
cmp
push
jl
inc
push
ja
out
call
mov
nop
retf
sar
dec
dec
xor
cs
dec
das
loopne
inc
lds
leave
adc
pop
inc
push
mov
popf
ret
push
jl
fidivr
mov
jge
xor
cmp
jg
cmp
ja
xchg
dec
jg
adc
pop
mov
nop
ret
sbb
xor
jl
and
xchg
ds
jbe
mov
dec
add
fucomip
in
jl
inc
xchg
push
daa
in
loop
or
xor
mov
jmp
push
icebp
loopne
adc
pop
pop
fdivr
cmp
jo
mov
inc
je
push
lds
sub
xor
not
inc
aas
retf
inc
jl
inc
xor
mov
daa
int
lods
call
push
pop
mov
mov
inc
and
sub
dec
js
jge
jno
mov
mov
fisub
enter
push
es
daa
call
jo
jb
ror
outs
pop
mov
out
dec
loope
sti
dec
test
jl
int3
push
sub
outs
adc
fwait
push
push
push
inc
dec
jbe
and
jp
adc
dec
shl
loope
bound
cli
mov
mov
nop
or
sub
cmp
add
sbb
test
or
push
sete
pop
(bad)
dec
in
pop
int3
shl
mov
enter
add
pop
pusha
out
sub
inc
jo
xchg
or
sbb
add
repz
rol
add
jmp
shl
and
rcl
jb
mov
inc
xor
sub
sahf
cmp
push
and
frstor
adc
adc
add
out
mov
pop
jmp
test
jne
out
mov
push
int
ss
mov
popf
rcl
pusha
mov
arpl
pushf
mov
xor
scas
movs
xor
enter
inc
scas
enter
push
into
adc
loopne
iret
sbb
cs
stos
jmp
aas
xor
cmp
add
pop
dec
inc
sbb
and
push
adc
push
ss
js
push
cwde
sbb
jecxz
xchg
sti
xchg
sub
mov
retf
mov
cmp
jnp
and
gs
and
push
cwde
loope
and
sbb
sbb
loopne
or
lods
xor
ds
cwde
pop
loope
or
mov
inc
pop
sbb
pop
cmp
or
push
fisttp
pushw
sahf
adc
mov
push
(bad)
in
inc
adc
dec
(bad)
cmp
mov
js
lds
ja
push
adc
outs
add
cs
aaa
push
mov
mov
inc
sbb
cli
xlat
in
sar
out
xchg
or
sbb
outs
xor
or
push
xor
pop
mov
mov
mov
adc
jge
stos
push
aam
xlat
mov
or
jl
rcl
jo
adc
mov
push
inc
mov
cmp
add
test
ret
cmp
ss
inc
cmp
mov
push
movs
push
fcomp
dec
je
mov
popa
clc
pop
nop
or
std
mov
(bad)
sub
push
xor
(bad)
clc
mov
or
out
jbe
push
xchg
sub
jle
es
fsubr
mov
lods
inc
daa
(bad)
dec
push
jo
fwait
jmp
mov
pop
xor
inc
js
sbb
adc
push
lea
xchg
addr16
nop
xchg
sub
test
je
jne
fwait
test
test
jl
pop
sar
xchg
dec
xor
test
xchg
mov
adc
or
add
(bad)
aaa
pusha
xor
inc
jle
sub
pop
xchg
adc
imul
cmp
pop
xor
scas
push
(bad)
ret
std
scas
push
cmc
cs
add
add
jl
mov
or
not
mov
push
call
int
aas
inc
cwde
and
sahf
mov
mov
inc
(bad)
sub
pop
and
(bad)
clc
and
popa
sub
adc
data16
xchg
pop
push
dec
sbb
lahf
fsincos
pop
pop
inc
ins
je
das
mov
mov
jbe
add
mov
sub
fadd
cmps
jmp
dec
or
mov
jge
xlat
add
cwde
loop
clc
or
movs
cmp
clc
mov
jae
sub
sbb
stc
and
push
cmp
push
cmp
jne
pop
sbb
or
out
lods
adc
mov
jg
movs
jl
mov
adc
(bad)
test
cmp
pusha
sti
and
mov
pusha
in
jnp
mov
pop
das
add
or
sub
jbe
sahf
cmps
stc
mov
push
pop
movs
sbb
les
cmp
add
pcmpeqd
scas
(bad)
dec
or
dec
outs
jne
jo
popa
je
jb
add
jbe
jne
sbb
xor
add
sldt
gs
data16
xor
and
mov
imul
sbb
pusha
push
push
pop
pop
mov
jae
pop
add
push
arpl
mov
pop
dec
jo
fstp
mov
rcl
(bad)
push
ret
popa
push
mov
add
pop
add
iret
pop
push
cwde
push
je
pushf
mov
shl
scas
imul
jl
std
aas
push
add
ret
add
jne
add
mov
in
cmp
inc
mov
mov
mov
pop
das
and
ins
push
cld
mov
and
ret
je
xor
sub
add
mov
pop
es
xchg
into
pop
dec
or
nop
loopne
fs
adc
sbb
lock
dec
xor
sub
scas
and
sbb
mov
push
inc
inc
daa
lock
dec
mov
add
xchg
jo
add
aaa
or
cmp
add
mov
mov
pop
fsubr
stc
cmp
xor
cld
mov
sub
shr
lock
test
jle
mov
jo
mov
lea
ins
scas
inc
cmp
je
outs
clc
inc
pcmpeqw
add
add
dec
jne
add
test
es
sbb
sub
icebp
int3
rcr
rol
mov
imul
lock
dec
imul
jmp
in
xchg
push
push
pusha
or
clc
push
es
ror
sub
fwait
cld
xor
mov
movs
dec
dec
dec
push
add
mov
jge
mov
pop
mov
cmp
hlt
lahf
rol
and
mov
ret
jmp
sbb
or
das
stos
add
xor
sbb
sub
jns
push
aaa
mov
call
in
fadd
test
test
or
aas
aaa
aam
jne
xchg
fisub
test
imul
je
and
adc
je
xor
mov
imul
or
cs
jae
and
or
or
clc
xor
adc
pusha
sbb
mov
scas
mov
jl
enter
(bad)
sbb
and
xor
movs
cmp
lahf
sbb
add
pop
sar
pop
cmp
cmp
cmp
push
les
push
stos
push
add
cmp
adc
cmps
mov
dec
push
loopne
cmps
push
popa
dec
inc
push
sbb
add
fimul
outs
das
adc
lahf
push
pushf
outs
scas
rcr
pop
or
sbb
sbb
dec
sti
shl
es
dec
jb
pop
mov
(bad)
test
aaa
push
dec
inc
neg
sub
xor
cmp
fistp
imul
dec
aas
push
pop
and
xchg
retf
xchg
pop
push
shl
js
inc
dec
cmp
mov
mov
lea
fmul
(bad)
jg
cmp
inc
loopne
mov
pop
(bad)
cmp
jb
dec
enter
(bad)
fbstp
fadd
in
jne
in
inc
jmp
fidivr
sbb
lahf
daa
test
jmp
pusha
push
jp
adc
inc
outs
repnz
dec
cmp
jmp
push
mov
add
enter
or
retf
aas
sti
xor
adc
xchg
or
fmul
inc
and
pop
dec
ror
pop
pop
sub
or
adc
cld
xor
push
cmp
mov
adc
mov
and
aas
push
test
sub
into
das
pop
call
aad
mov
setg
sbb
ret
mov
xchg
push
pop
test
out
and
jne
shr
push
add
cmp
or
rcr
pop
xlat
popa
push
mov
add
and
data16
xor
rol
icebp
pusha
enter
inc
xor
push
mov
test
outs
mov
lock
inc
fmul
shr
pshufw
fsubr
ins
hlt
mov
inc
lea
inc
or
pop
ins
(bad)
outs
test
add
push
mov
push
push
mov
inc
jo
add
cmp
sub
push
in
cwde
and
dec
jge
cmp
inc
scas
dec
xlat
push
add
fsub
cmp
pop
out
pop
inc
sub
pop
mov
ss
sub
xchg
cmp
add
test
cmp
cmp
loopne
f2xm1
leave
sub
or
push
fcomi
inc
inc
cmp
cmp
cmp
sahf
add
push
daa
nop
in
movs
pop
xor
pop
sbb
push
pop
out
sahf
cld
(bad)
nop
pop
jecxz
lods
mov
add
inc
test
push
hlt
(bad)
cmp
dec
inc
adc
jl
das
or
mov
daa
xor
dec
cmp
push
jmp
ins
arpl
push
sbb
fild
lods
(bad)
pop
adc
jl
jns
cwde
test
cmps
cwde
jnp
dec
mov
(bad)
pop
ins
inc
out
mov
mov
jmp
dec
inc
cmc
add
nop
mov
sar
fcomp
sub
inc
test
aam
xor
fs
addr16
jmp
icebp
adc
or
cmp
lahf
xchg
lds
mov
ja
ja
mov
or
loopne
dec
mov
and
sub
(bad)
pop
push
add
inc
and
cld
lds
jmp
pop
or
aas
inc
sbb
je
fldenv
movs
xor
inc
inc
mov
(bad)
std
rol
jmp
mov
pop
mov
popa
dec
sbb
in
cmp
icebp
mov
or
inc
test
call
mov
add
pop
jne
mov
loope
hlt
aad
dec
mov
(bad)
data16
jg
mov
aas
or
jne
jmp
in
lds
shr
dec
push
enter
sub
add
inc
cmp
jne
test
add
push
inc
xor
das
or
not
cs
dec
jg
or
test
jl
lock
jne
stc
xchg
sub
jmp
sub
push
stos
xchg
mov
pop
mov
mov
add
fstp
dec
int3
sbb
dec
push
es
inc
adc
dec
sbb
popa
cmp
inc
dec
sahf
iret
leave
or
test
ret
lods
dec
inc
sub
test
cmp
or
clc
push
mov
jbe
fs
mov
pusha
adc
cmp
stos
jb
and
add
jo
sbb
mov
clc
mov
out
mov
cld
and
int3
sub
push
push
cld
push
jle
push
test
adc
push
mov
pop
inc
mov
scas
jmp
cwde
add
and
push
scas
int
clc
inc
(bad)
call
je
adc
dec
xchg
xchg
nop
push
pop
or
ins
lods
mov
sbb
or
push
lds
mov
pop
cmp
je
push
mov
(bad)
sub
sub
cmp
int3
mov
pusha
sbb
pop
shr
hlt
pushf
and
xchg
loopne
mov
ss
ret
lods
push
cmc
or
pusha
retf
add
ss
mov
mov
mov
sub
xchg
jmp
cmp
hlt
mov
pop
xchg
pusha
or
add
mov
sub
(bad)
push
mov
inc
push
mov
mov
aaa
add
fisttp
sahf
jmp
test
call
mov
outs
clc
jmp
ret
cs
pop
sti
mov
pop
inc
push
cmp
repz
dec
fwait
and
mov
inc
xchg
jmp
mov
clc
dec
cli
add
dec
scas
mov
dec
gs
mov
and
adc
out
icebp
push
(bad)
sbb
pop
out
imul
and
adc
adc
cli
mov
add
call
cmp
and
mov
cmp
push
or
hlt
fild
push
movs
sbb
fcom
out
sub
loope
cmp
stc
sub
sub
sbb
adc
sub
push
sbb
push
lods
inc
mov
push
or
add
push
std
test
aas
aam
inc
push
add
movs
fst
(bad)
cld
sbb
mov
add
sbb
push
xor
add
add
loopne
mov
push
mul
sub
add
outs
pushf
pop
test
or
add
scas
adc
add
fcom
fadd
xchg
inc
das
add
call
inc
loopne
loopne
xor
cli
add
mov
test
gs
in
stc
adc
fsub
mov
les
push
(bad)
mov
fcom
push
dec
clc
les
(bad)
add
dec
cld
mov
jbe
scas
das
push
test
aas
clc
hlt
retf
inc
clc
cmp
out
loop
mov
clc
push
sub
inc
inc
les
in
(bad)
lock
lods
aam
test
das
rol
add
mov
jg
and
cwde
and
ret
jmp
cmp
out
cmp
into
loopne
inc
jb
cmp
mov
sub
rcl
movs
push
jecxz
adc
icebp
jnp
push
add
mov
push
inc
dec
sbb
mov
add
je
data16
cmps
or
dec
dec
sub
xor
inc
sub
dec
cs
bound
adc
cmps
and
cmps
adc
daa
dec
popa
pushw
xchg
dec
test
push
fcomp
inc
add
(bad)
int3
int3
int3
add
xchg
push
add
mov
rcr
add
push
popa
mov
es
std
lock
dec
into
cmp
(bad)
xor
mov
mov
mov
or
sahf
lea
fdiv
movs
add
mov
push
popf
add
cmp
lahf
fsubr
and
inc
and
and
jb
test
adc
out
mov
sar
nop
hlt
fisttp
add
and
fs
jno
add
sub
adc
lea
cs
sbb
in
call
in
xchg
add
push
add
out
xchg
push
pop
jbe
xor
imul
adc
ins
or
inc
cli
je
and
in
fistp
push
cli
xor
mov
mul
ds
or
test
add
jb
mov
mov
std
push
or
mov
cmp
nop
add
add
jne
xchg
shl
es
je
add
shl
inc
cmps
add
jl
dec
add
add
cld
mov
mov
dec
add
and
popa
dec
sbb
push
hlt
jecxz
xchg
mov
test
mov
push
dec
scas
cmps
xor
cmc
or
repnz
fisttp
cmp
xor
xor
hlt
bound
pop
sub
jbe
lods
sub
adc
repz
cli
vlddqu
push
mov
jl
push
call
(bad)
mov
jmp
adc
cmps
add
aas
dec
out
pushf
in
push
or
sbb
adc
or
mov
add
dec
(bad)
dec
popf
jno
shl
add
loopne
adc
jnp
adc
sbb
xlat
lods
mov
adc
or
or
cmp
cmp
call
adc
or
xor
iret
sti
xor
pop
adc
or
add
xor
push
push
and
dec
scas
mov
mov
mov
cmp
fadd
sub
rol
ret
cld
jmp
dec
cli
dec
fs
mov
loopne
lea
or
cli
push
call
inc
clc
jae
scas
xor
or
popa
jo
push
cmp
inc
repnz
inc
jmp
sbb
inc
add
xchg
mov
add
cld
imul
and
push
sbb
push
xchg
ret
sar
jns
ficomp
imul
push
push
cld
sti
push
into
clc
shl
add
lock
xchg
inc
les
test
bound
mov
push
(bad)
in
mov
daa
or
es
repnz
(bad)
ins
jp
popa
sbb
cs
cmp
sub
xor
shr
loope
pop
push
mov
(bad)
mov
hlt
push
dec
and
ret
js
mov
cmp
and
cmp
mov
push
xchg
jg
inc
cmps
sbb
arpl
push
shl
inc
and
push
dec
je
mov
or
or
(bad)
sbb
iret
je
and
leave
je
adc
sti
adc
mov
xor
cmp
or
cmps
cmp
jmp
in
mov
pop
inc
pop
mov
adc
xor
or
iret
iret
mov
fadd
and
or
hlt
push
cmp
jl
es
inc
jle
movs
mov
pop
push
push
cmp
popf
xchg
pusha
fmul
icebp
test
inc
or
leave
ficomp
mov
add
les
and
adc
enter
or
ss
push
stos
pop
jo
clc
dec
rol
movs
add
push
push
fiadd
pop
fcom
mov
jb
fcomp
cwde
jl
adc
and
inc
or
jo
mov
fcompp
jl
and
dec
cmp
push
cwde
dec
cld
les
cld
cmp
aam
add
adc
mov
push
mov
push
or
sbb
dec
or
(bad)
adc
add
jmp
xor
mov
clc
jmp
push
cmp
test
test
sub
push
pop
fist
and
push
(bad)
xchg
test
aam
inc
mov
pop
push
mov
in
mov
pop
and
test
push
fsubr
sub
loopne
push
adc
cmp
jge
sub
outs
imul
dec
xchg
scas
inc
sub
or
xor
push
mov
jne
and
and
inc
jmp
sbb
adc
pushf
add
add
pusha
jo
outs
push
out
xchg
pop
add
add
ds
pushf
dec
fsubr
retf
cmp
loop
aam
call
inc
add
js
push
hlt
push
or
aad
xchg
lock
fimul
out
lds
and
ret
push
call
(bad)
jae
jb
call
inc
add
and
xlat
inc
cmp
jae
push
inc
mov
jle
push
loopne
cmp
cs
ret
(bad)
lock
test
pop
add
inc
or
jl
adc
inc
dec
jne
data16
jl
sbb
dec
enter
mov
inc
and
das
jb
ds
or
inc
or
lock
xchg
test
ret
or
loopne
or
xchg
sbb
add
mov
push
bound
jo
push
jl
aaa
in
add
repz
xor
sahf
push
sbb
neg
push
ss
rcl
sar
sar
jne
xor
dec
mov
sbb
mov
xchg
adc
jle
and
dec
adc
js
ja
inc
sub
add
xor
push
or
icebp
cwde
push
ret
jnp
cs
cmp
or
push
or
sub
sbb
jle
and
pop
inc
sbb
adc
cwde
push
jno
pop
adc
and
out
imul
or
outs
push
sbb
cld
add
scas
push
fstp
inc
inc
aam
sbb
inc
sub
and
in
or
sub
xor
inc
gs
lods
test
add
mov
ins
add
shr
lea
(bad)
movs
pop
shl
fmul
and
jg
push
adc
ins
inc
div
arpl
adc
sbb
jo
inc
mov
pop
jl
fcom
or
ja
loopne
retf
out
push
pushf
out
ret
stos
xor
add
shr
adc
cmp
jne
xor
xlat
call
ret
loope
push
dec
scas
movs
adc
setg
ret
rol
(bad)
xor
xor
out
ins
data16
cmp
adc
add
mov
or
adc
rcl
add
xchg
aam
push
(bad)
int
and
mov
mov
sbb
xchg
sbb
jmp
or
inc
clc
pop
retf
pop
mov
xchg
xlat
inc
jp
aam
call
cmp
(bad)
push
ds
inc
dec
jne
sub
jl
mov
mov
or
int
add
cmp
sub
sbb
arpl
push
sub
add
or
sub
jne
ins
lock
hlt
test
sbb
(bad)
inc
adc
xchg
adc
mov
scas
fisubr
mov
dec
lock
(bad)
pop
enter
and
pusha
pop
clc
call
sub
into
pop
fmul
pop
imul
and
sbb
mov
cmp
ror
scas
pusha
data16
push
push
cld
jmp
mov
cmp
sbb
sub
xchg
outs
dec
repz
xor
(bad)
and
ret
add
jne
setg
add
ret
data16
push
add
push
les
repz
dec
jne
jae
jbe
int3
mov
inc
xor
jno
dec
lahf
lea
add
pop
nop
adc
sbb
rcl
sbb
aad
jecxz
out
sub
and
iret
enter
jo
xabort
add
cmp
clc
cmp
je
xor
xlat
call
cmp
int
out
imul
je
sub
je
inc
jno
jmp
arpl
sub
js
mov
push
and
add
cs
leave
(bad)
(bad)
mov
jmp
dec
xchg
or
ins
loop
hlt
pop
fucomp
dec
adc
test
and
add
test
add
xor
out
retf
push
aaa
push
sub
dec
js
add
jmp
cmp
pushf
inc
jno
inc
mov
fs
fisttp
inc
add
hlt
xor
push
xor
test
adc
sbb
mov
and
mov
mov
out
or
pop
mov
sub
xlat
push
fdivr
inc
or
ins
in
or
sbb
inc
inc
xor
push
mov
xor
mov
sbb
test
inc
or
mov
jge
sbb
jno
jmp
je
cld
or
sub
mov
mov
in
not
or
mov
mov
jmp
pop
pop
xor
add
mov
movs
jmp
mov
sbb
popf
sub
adc
mov
jb
jmp
and
sbb
dec
aaa
or
int
jb
(bad)
dec
sbb
jecxz
inc
sbb
sub
push
push
sbb
rcr
push
adc
or
lds
nop
xor
sub
test
xchg
adc
aam
dec
sbb
test
dec
push
jb
xor
pop
jecxz
int
(bad)
jmp
push
out
ret
jmp
cmc
fsubr
ficomp
push
test
jmp
cmp
adc
loope
call
ja
sub
out
sbb
pop
repnz
xor
fstp
fisttp
mov
jb
dec
sbb
cmp
push
jle
sub
push
or
inc
or
es
mov
jo
je
mov
out
sbb
inc
mov
dec
xor
push
loopne
cmp
fadd
inc
sar
nop
adc
loope
test
push
xchg
iret
cmp
jbe
sub
mov
pop
xor
xchg
stos
call
dec
or
ret
arpl
int3
scas
adc
mov
add
shr
dec
sub
(bad)
and
ins
jno
pop
(bad)
sbb
cwde
jmp
jbe
dec
aam
jle
mov
cs
push
push
enter
sub
push
and
dec
aas
ret
jae
push
sub
push
push
push
mov
inc
mov
or
pushf
push
into
jle
js
(bad)
jmp
inc
push
ror
xor
sub
add
inc
fdivrp
or
(bad)
pop
mov
mov
mov
loopne
jmp
mov
dec
in
sahf
mov
loop
mov
adc
adc
add
(bad)
or
sub
xor
xor
fbstp
push
mov
and
adc
shl
pop
xlat
aam
mov
or
les
xor
mov
and
pop
jmp
or
in
out
js
push
sub
cdq
jns
movs
cwde
or
repnz
pop
mov
aas
add
pop
pop
shl
pop
repnz
loopne
push
ret
fbstp
psubw
and
mov
adc
jmp
jl
aaa
and
jmp
push
sti
add
and
sub
daa
add
les
loop
aaa
movs
gs
loope
cmp
inc
es
shl
hlt
sub
(bad)
push
inc
js
or
sbb
shl
or
push
jnp
and
push
push
push
movs
dec
and
mov
inc
add
bnd
push
in
adc
push
push
mov
sbb
jbe
sub
inc
jmp
xor
jle
and
fistp
add
and
int3
sar
xor
scas
inc
hlt
dec
clc
inc
dec
jne
dec
push
cs
add
or
adc
mov
loope
sub
enter
lahf
lock
out
lea
or
cli
adc
inc
jg
adc
xchg
jbe
outs
aam
adc
jg
loopne
or
push
dec
icebp
adc
pop
dec
mov
test
je
bound
push
add
fdiv
and
mov
loop
sbb
sbb
adc
int3
pop
mov
fsubr
inc
inc
dec
push
je
xor
ss
dec
adc
aaa
pop
or
dec
dec
js
push
shr
and
mov
out
inc
dec
(bad)
sub
add
jae
sub
std
outs
jl
push
add
jb
or
fbstp
jmp
inc
jo
sub
sahf
pop
dec
es
sbb
outs
mov
cmp
jle
cmp
dec
icebp
jle
or
push
push
or
sbb
popf
cli
jmp
(bad)
xor
cmp
popf
cld
cmp
imul
stos
xor
mov
add
push
push
add
pop
pop
mov
adc
jno
inc
mov
jmp
sbb
mov
or
cs
inc
or
or
call
push
cmp
fdivr
pop
push
mov
cmc
std
add
mov
mov
jg
add
jl
push
je
push
aas
nop
xchg
(bad)
inc
inc
jmp
cmp
cmps
fwait
sar
es
push
inc
pop
lahf
xor
je
adc
cdq
xor
jge
out
push
and
jbe
clc
add
or
jecxz
fimul
hlt
cmp
pop
cld
sbb
ins
sbb
inc
aaa
lods
pop
jne
or
inc
pop
and
jg
push
aaa
add
dec
mov
jmp
sub
cmp
adc
add
xor
dec
and
test
jo
xor
inc
ds
push
and
int
das
pusha
push
sub
pop
add
repnz
mov
push
mov
outs
in
push
in
xor
dec
test
inc
rcl
pop
inc
das
pop
cmp
cli
pop
fcomp
xor
out
rol
pop
inc
cmp
jne
jg
ja
cs
and
inc
mov
mov
mov
loope
dec
mov
adc
iret
inc
ret
xor
imul
add
pop
pop
pop
lgs
ins
cmps
dec
push
sub
movs
or
add
mov
fidivr
push
es
push
push
in
or
push
push
adc
test
and
dec
pusha
push
out
xor
pop
add
xor
xor
sub
cmp
mov
push
cld
pop
pop
jae
pop
jmp
xchg
test
push
push
jg
scas
mov
pmuludq
movlps
sub
push
adc
unpckhps
xchg
add
pop
or
jae
bound
dec
popa
outs
fs
gs
(bad)
ss
inc
outs
push
imul
gs
gs
xchg
pusha
cli
gs
gs
adc
add
or
cmp
push
cld
add
gs
data16
adc
push
push
add
ins
xchg
loopne
int3
adc
push
inc
pop
dec
imul
fld
or
das
push
fs
in
sahf
jo
inc
xor
adc
je
outs
outs
aas
inc
xchg
dec
outs
je
data16
add
dec
je
(bad)
jg
out
ins
dec
inc
test
call
arpl
jo
ins
jns
and
aas
shr
jp
or
imul
gs
sub
mov
push
outs
push
imul
nop
lods
bound
fld
sub
and
inc
arpl
lds
pop
push
sysret
dec
outs
mov
mov
inc
push
push
jns
js
clc
fsubr
pop
cs
inc
outs
or
in
sub
jnp
shr
adc
pop
jmp
mov
pop
cmps
or
cmp
push
lock
jo
daa
movs
mov
test
push
jnp
push
sub
pop
js
xchg
inc
push
and
ins
push
ins
aam
retf
push
xor
(bad)
and
or
mov
cmp
inc
sbb
ja
jb
inc
push
in
sbb
arpl
aam
nop
sub
push
sbb
pusha
cmp
push
inc
push
mov
pop
sbb
inc
pusha
sbb
loopne
push
sbb
sub
scas
dec
mov
or
rcl
xor
xor
cs
adc
add
dec
and
xor
popa
and
scas
dec
push
adc
es
pop
stos
sub
push
dec
pop
pop
or
push
pop
add
pop
idiv
int3
push
sti
cmp
push
adc
or
mov
adc
adc
bound
movs
data16
pop
adc
inc
push
push
aad
fst
cmp
addr16
add
xlat
and
xor
mov
dec
mov
sub
not
push
or
inc
inc
aad
(bad)
in
add
push
push
arpl
ins
ins
inc
mov
mov
loopne
or
cli
or
bound
cmp
je
pop
scas
push
inc
or
push
cmp
arpl
push
arpl
pop
fld
inc
xor
adc
sub
push
add
sub
push
dec
out
cwde
jmp
add
aas
push
je
rcl
mov
jg
cmp
jae
push
mov
outs
lods
mov
adc
je
jae
je
jb
arpl
pop
cmp
nop
addr16
clc
shl
repz
fisttp
dec
cmp
dec
xchg
or
test
pushf
push
xchg
rol
rol
daa
ins
sbb
push
xor
mov
sbb
pusha
adc
or
add
std
loopne
out
add
fadd
int3
jb
ins
gs
neg
push
inc
push
popa
xor
add
cli
inc
les
adc
push
pusha
outs
jae
nop
sub
jle
push
inc
push
dec
and
xor
sbb
add
mov
and
sbb
pop
inc
dec
add
addr16
push
xchg
mov
shl
sbb
mov
push
ja
(bad)
gs
xchg
into
popf
and
mov
and
inc
gs
adc
mov
and
inc
xor
adc
push
and
ins
shl
adc
fwait
sub
or
inc
jne
add
das
xor
sub
jne
inc
fwait
adc
cld
pop
dec
mov
cmp
stos
inc
imul
xor
dec
lods
daa
push
loope
loope
or
dec
gs
add
icebp
and
mov
cmps
(bad)
daa
push
xor
call
xor
push
jl
inc
sub
inc
loope
or
imul
shl
jno
push
outs
jne
js
shl
add
add
adc
rol
ror
addr16
fadd
jae
mov
popa
lds
arpl
pop
arpl
and
pusha
cmc
adc
xor
pop
xchg
mov
jg
nop
mov
(bad)
(bad)
dec
add
add
mov
sub
icebp
sbb
mov
add
ror
in
sbb
rsm
or
leave
pusha
sbb
les
push
rol
add
daa
bound
inc
inc
jae
cmp
xchg
inc
test
push
mov
shl
in
inc
fs
jnp
sbb
mov
inc
inc
(bad)
fdivr
call
or
inc
inc
xchg
or
inc
pop
or
ret
loopne
sub
pop
cli
pop
pop
fadd
in
cmp
add
enter
add
mov
and
or
mov
pushf
and
cmps
add
or
add
addr16
add
rol
in
enter
pusha
mov
pop
ds
push
or
push
add
ins
hlt
jnp
inc
rol
nop
mov
pop
es
inc
add
push
daa
hlt
add
les
pop
push
push
cmp
mov
mov
in
rcl
mov
push
cwde
fiadd
push
and
scas
cmp
mov
mov
inc
push
in
into
dec
cld
add
jo
push
int3
xchg
data16
call
or
adc
push
inc
pusha
ss
mov
push
in
push
nop
scas
test
push
sbb
fcomp
mov
(bad)
adc
fadd
aam
add
shr
imul
pop
nop
jle
aaa
push
xor
nop
push
dec
or
mov
push
sbb
fimul
(bad)
test
push
mov
aam
push
fwait
in
ins
movzx
fdivr
jle
push
call
jnp
ins
es
pop
fidiv
push
inc
les
push
sub
cmp
or
add
(bad)
hlt
push
cmc
ret
nop
test
inc
inc
movs
outs
pop
jnp
cmp
xchg
jne
leave
xchg
push
or
dec
sbb
cwde
push
push
inc
ret
sub
sti
push
cwde
or
push
inc
mov
out
mov
fsubr
test
adc
sub
ins
movs
loop
xchg
fisttp
dec
test
call
jmp
add
(bad)
mov
loopne
call
add
sub
in
or
cmp
(bad)
test
test
es
mov
lock
sub
cld
add
outs
pop
icebp
daa
or
inc
mov
sbb
ins
add
xchg
out
inc
xor
rcr
jle
and
mov
cmovne
cmp
adc
pop
or
dec
outs
cmp
adc
add
add
or
push
add
inc
adc
ins
xor
sub
sub
pop
shl
adc
pop
add
daa
add
push
dec
adc
inc
and
jae
inc
gs
mov
cld
pop
pusha
push
pop
pop
lods
shl
adc
sub
jbe
cwde
push
in
sbb
or
dec
add
xchg
in
add
or
push
retf
push
ret
xor
add
jno
pop
adc
fs
or
scas
and
cmp
bound
cmp
pop
xor
pusha
or
cmp
or
jp
lds
cmps
popa
ins
outs
addr16
not
adc
and
fild
fimul
xlat
cld
push
out
or
pop
cmp
prefetchw
or
pop
push
outs
imul
xor
(bad)
mov
inc
push
jmp
inc
std
das
mov
imul
inc
add
dec
dec
mov
enter
jmp
mov
add
ficom
adc
cmp
clc
sbb
pushw
or
jne
push
sbb
mov
cmc
jns
pop
add
sub
fwait
loope
je
or
fwait
in
xchg
push
inc
jb
popa
jns
ins
cs
mov
movs
ds
sbb
jo
xor
cmp
or
sbb
ret
push
pop
sbb
or
xor
xor
fidivr
inc
dec
inc
push
adc
ret
or
outs
je
xchg
ret
shl
xor
jo
lahf
xchg
outs
aaa
idiv
adc
je
adc
ins
jns
xchg
sub
and
loope
jmp
push
jge
imul
pop
or
sar
or
add
xchg
retf
dec
sbb
push
xor
adc
ret
outs
sti
cmp
fs
lds
push
jb
or
jns
adc
xchg
mov
int
adc
(bad)
xor
bound
out
js
addr16
push
int3
ins
pusha
and
popf
mov
cmp
sbb
inc
or
pop
xchg
inc
inc
addr16
adc
push
loopne
mov
inc
mov
pushf
ror
adc
rcr
xchg
bound
sub
sbb
es
mov
clc
adc
mov
call
je
sbb
pop
dec
or
inc
pop
xor
not
inc
or
push
loopne
xchg
(bad)
jmp
gs
dec
mov
add
pop
fimul
pop
push
xor
test
sbb
jge
xlat
ins
scas
sub
aas
jns
(bad)
xlat
inc
jecxz
(bad)
jle
push
jne
jns
or
jae
push
popf
ds
pop
mov
data16
add
fndisi(8087
scas
sbb
jae
xor
add
cmp
ret
loopne
or
and
pushf
push
xor
add
leave
ret
jmp
es
sub
xor
dec
mov
cmps
dec
(bad)
in
xor
push
idiv
rcl
xor
jmp
mov
fist
add
addr16
push
push
dec
dec
gs
pop
mov
rcr
inc
repnz
mov
retf
imul
(bad)
test
jo
add
pop
sahf
ins
enter
push
pop
je
cmp
inc
and
dec
loopne
mov
ds
ins
ins
pop
in
or
adc
adc
add
cs
xor
sbb
pop
xchg
lods
lods
jo
mov
sub
dec
imul
and
ins
inc
js
ins
sub
jne
pop
jnp
xchg
ja
push
imul
sbb
xchg
gs
pusha
fldcw
mov
pop
ss
add
sbb
jle
nop
or
pop
call
sub
xor
cld
shr
lahf
je
inc
jl
dec
das
ins
pop
jo
pusha
das
mov
mov
lock
enter
and
lds
xchg
inc
pop
test
inc
dec
pop
dec
(bad)
fcomip
dec
or
dec
inc
ins
popa
jae
jno
lock
sub
inc
inc
pop
mov
jp
push
pusha
ret
call
jle
pop
inc
jb
ins
gs
push
inc
and
xchg
push
xchg
sbb
add
call
jo
sub
sub
out
icebp
jo
cmps
xchg
fcomp
fs
mov
jns
push
pop
pop
adc
bound
mov
test
pop
in
leave
loopne
or
pop
xlat
push
push
and
sub
and
cmps
jne
inc
(bad)
sub
xchg
push
add
pop
popa
rcl
add
lods
cmp
or
into
leave
push
loopne
(bad)
cmp
mov
jmp
aas
fwait
loopne
cmp
push
pop
xlat
dec
and
sub
js
add
out
or
sbb
sbb
ins
mov
pusha
adc
mov
or
movs
lods
add
clc
ror
call
adc
xchg
lods
push
add
cmps
add
jno
mov
jb
push
or
push
sbb
mov
es
fs
dec
inc
pop
cmp
nop
push
fcom
mov
inc
add
mov
inc
fisttp
inc
cmp
jl
inc
fs
nop
cmp
and
push
loop
inc
aas
inc
in
jno
inc
je
mov
call
sbb
das
cmp
es
lods
or
inc
inc
mov
mov
or
mov
inc
ins
ins
ss
pusha
mov
xchg
and
aam
pushw
cdq
push
pop
iret
cld
and
data16
pop
sub
dec
push
inc
ins
xchg
pushw
sub
test
mov
cmp
loopne
jo
call
jl
add
ins
daa
pusha
js
je
xor
in
push
jp
add
fimul
sti
(bad)
je
inc
iret
cdq
xor
shr
jne
fs
xor
adc
push
or
ret
fidiv
or
xor
mov
das
(bad)
imul
(bad)
pop
mov
mov
jo
nop
loopne
or
loope
std
shr
std
sub
adc
xor
jl
push
or
or
mov
add
push
mov
dec
add
in
popf
mov
xor
sbb
pop
push
sbb
(bad)
push
dec
or
sub
mov
add
cmp
inc
icebp
sbb
iret
push
add
push
ds
mov
xor
jbe
adc
stos
jae
out
or
inc
mov
jl
push
ror
jmp
loope
inc
addr16
aam
sbb
lock
inc
inc
inc
dec
retf
sub
inc
sub
fcomp
ret
xlat
mov
jne
xor
mov
xchg
mov
fs
push
adc
scas
jne
into
jp
push
data16
or
call
mov
imul
arpl
popa
mov
push
push
in
mov
and
loopne
pop
mov
xor
xchg
hlt
push
xchg
inc
clc
sbb
push
das
test
fdivrp
push
or
add
and
sub
jp
outs
and
lea
pop
add
adc
dec
shr
or
adc
cmp
xor
cmc
fst
aam
inc
mov
pop
mov
sub
sar
shl
pop
daa
or
sub
xor
scas
adc
mov
xor
jmp
push
cmp
push
add
mov
or
fisubr
add
jnp
and
pop
sbb
sub
and
(bad)
jae
sub
pop
dec
sbb
jbe
add
mov
imul
push
mov
(bad)
adc
rcr
nop
mov
(bad)
push
xchg
add
ret
out
sbb
push
sub
xchg
push
sub
js
push
lods
or
dec
xchg
and
push
add
xchg
push
aas
xchg
sub
repnz
xchg
cwde
inc
cmp
add
ds
sbb
inc
scas
jnp
mov
push
dec
jmp
mov
data16
nop
inc
mov
pop
jo
ret
dec
ficom
mov
fimul
inc
js
mov
pushf
in
fisubr
mul
sub
sub
jo
inc
fld
push
xor
ja
stc
xor
popa
cmp
inc
test
xor
je
ds
add
lock
sbb
sbb
mov
aad
mov
repnz
jno
iret
push
push
cmp
push
dec
and
paddb
in
test
lods
retf
(bad)
cld
rcr
(bad)
jle
pop
mov
cs
mov
mov
dec
dec
dec
outs
fist
xchg
popf
mov
or
add
ret
xlat
das
outs
pop
dec
fimul
push
jbe
fstp
aaa
das
and
stc
call
cli
call
lea
xor
aaa
add
pop
push
rcl
pop
add
add
add
push
sti
or
add
add
add
adc
add
test
cli
inc
add
and
(bad)
(bad)
jg
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
dec
inc
mov
mov
mov
mov
jmp
stos
jmp
jmp
dec
cld
and
clc
pop
dec
dec
sub
sbb
add
and
idiv
jl
sbb
push
dec
pop
push
fsubr
xor
retf
and
jmp
repz
je
or
iret
mov
pop
and
lock
fsub
out
mov
push
sbb
fdiv
pop
clc
pop
clc
sbb
cli
jbe
daa
inc
fucom
ret
fs
mov
mov
inc
aaa
push
outs
ror
xlat
push
pop
dec
pushw
push
cwde
repz
cmp
inc
sub
xor
push
rol
lock
dec
sahf
mov
sub
dec
or
push
push
adc
repz
je
xchg
push
mov
sub
lea
loop
sub
sub
jmp
inc
outs
and
out
push
pushf
and
je
mov
cwde
jne
ins
inc
or
adc
pusha
aam
xor
sbb
push
test
sub
imul
scas
add
or
add
push
jl
sub
pop
call
and
mov
and
inc
int3
add
dec
sub
fnstsw
ror
imul
and
addr16
daa
push
pop
lea
adc
or
dec
inc
jae
fldenv
addr16
pop
dec
jge
js
shl
aas
jge
rcr
inc
push
daa
sbb
add
cs
ins
outs
jbe
mov
pop
ins
fwait
inc
add
pushf
imul
aam
push
imul
add
inc
loopne
add
or
sub
mov
cmp
pop
inc
or
je
ja
lds
push
adc
mov
push
sub
mov
sub
cmp
push
mov
sub
in
or
adc
push
add
stos
adc
mov
lock
and
push
dec
mov
add
pop
cmp
adc
popa
imul
or
jns
aad
(bad)
cld
push
push
fsub
pop
daa
pop
sbb
hlt
cmp
push
mov
adc
xor
sbb
cmp
inc
pusha
dec
mov
pushf
lock
jae
leave
ds
popa
sub
or
imul
pop
mov
push
dec
data16
xor
es
imul
stos
xlat
push
or
sub
test
or
mov
enter
adc
inc
adc
jno
dec
sub
add
sub
or
in
imul
ins
mov
loopne
mov
adc
lods
jo
add
(bad)
dec
movs
add
movs
adc
xchg
inc
(bad)
je
sbb
sbb
push
xor
adc
pushf
fimul
sbb
sub
in
adc
adc
mov
popa
xor
sbb
dec
inc
(bad)
loopne
mov
ror
dec
push
mov
adc
scas
mov
fdivr
shr
lods
push
mov
xchg
int3
or
hlt
adc
xor
xor
xor
adc
xor
xor
xor
jb
push
je
pop
cmp
xor
stos
mov
retf
movs
sub
xchg
lea
in
add
jbe
sub
jl
sbb
cmp
xor
inc
mov
inc
pop
dec
mov
(bad)
jl
xor
inc
repz
dec
jno
push
dec
dec
cmp
jnp
sub
out
imul
pushf
retf
push
add
cmp
inc
or
add
sbb
jne
or
ret
daa
sub
(bad)
aam
and
test
mov
loopne
dec
mov
les
test
cmp
loopne
imul
je
loopne
call
add
mov
pop
or
inc
push
and
jg
dec
or
sar
pop
dec
loop
push
sub
inc
sbb
vmovmskps
push
leave
dec
xor
add
mov
inc
pop
cld
inc
mov
pushf
das
ds
push
aas
mov
cmp
inc
or
movs
jmp
add
mov
nop
inc
cmp
scas
add
pop
push
or
shl
push
sbb
pushf
push
mov
push
xchg
dec
dec
or
or
adc
or
mov
pop
pop
lods
mov
xor
rcl
jmp
add
loopne
in
adc
push
(bad)
iret
adc
xor
dec
mov
call
push
(bad)
cmp
mov
pop
sub
and
add
inc
sub
jnp
ss
add
cmp
or
addr16
jb
mov
jo
cmp
popa
sbb
jmp
lds
add
stos
daa
rcl
outs
inc
or
outs
dec
xchg
xor
inc
cmp
loopne
push
mov
mov
test
jae
das
dec
aad
sub
inc
mov
je
sbb
dec
pop
adc
mov
sub
lods
adc
adc
add
cli
add
rcr
mov
sbb
pop
or
push
inc
les
mov
mov
add
sbb
jmp
cs
(bad)
gs
mov
jae
fadd
add
cmp
icebp
je
dec
mov
fcom
shl
inc
or
loopne
adc
ins
dec
xor
and
sbb
aaa
or
dec
mov
add
xchg
add
inc
js
dec
sbb
add
or
ds
fwait
pop
or
arpl
inc
fadd
mov
shl
lock
enter
mov
inc
fadd
push
dec
test
mov
jnp
mov
cmp
or
and
or
mov
inc
sub
xchg
pop
shl
data16
xor
cdq
mov
mov
test
mov
adc
xor
std
add
inc
dec
add
arpl
nop
jae
lock
enter
inc
pop
loope
std
mov
xor
sub
out
push
jae
pushf
dec
fwait
or
div
movs
repnz
xchg
or
dec
mov
dec
push
arpl
sub
sub
ret
and
add
pop
xlat
or
xchg
sub
mov
gs
mov
push
pushf
adc
pop
push
inc
mov
sub
rol
mov
mov
mov
sub
inc
imul
test
or
popa
or
mov
sbb
das
pop
sbb
push
adc
jo
cmp
xor
xor
or
pop
push
arpl
xlat
ror
pop
repnz
adc
imul
xor
popf
mov
cwde
cmp
xor
loopne
add
inc
inc
xor
mov
inc
adc
dec
xor
xor
cmp
pusha
fcom
int3
or
and
fsubr
xor
and
retf
xor
push
add
inc
xor
sbb
loopne
enterw
cmp
enter
mov
pusha
fnstsw
sub
cmp
stos
test
push
and
mov
jmp
add
mov
loop
mov
lock
inc
fisubr
mov
push
inc
cmp
cwde
lock
jb
fwait
sbb
retf
inc
inc
popa
push
inc
pop
mov
mov
je
ror
sub
aas
out
cmp
popa
pop
movs
cmp
adc
cmp
rol
mov
fcmovb
mov
or
adc
repnz
mov
xor
push
and
add
or
or
in
mov
aas
lea
jbe
jmp
mov
stos
test
pop
inc
pop
loopne
stos
adc
scas
shl
imul
add
push
xchg
pop
int
pop
inc
fcomp
mov
dec
push
in
rcr
ins
dec
fadd
in
(bad)
adc
sub
hlt
in
mov
lock
dec
push
add
ror
xor
cdq
dec
loopne
cmp
mov
pop
ror
rol
fiadd
test
adc
cld
pop
pusha
xor
out
push
pop
pop
adc
(bad)
xchg
dec
rcr
stc
ins
push
add
dec
fisubr
or
je
inc
and
ret
rcr
pop
dec
dec
scas
mov
imul
add
clc
bound
dec
add
or
mov
pusha
xor
mov
jo
inc
mov
inc
pusha
outs
push
shl
sub
pop
cmps
or
pop
jo
je
lds
adc
rcl
jns
sub
add
mov
inc
push
push
inc
in
push
sbb
iret
mov
mov
or
cmp
or
sub
mov
adc
ja
fucomip
pop
leave
test
int3
dec
sbb
inc
push
out
dec
push
dec
jbe
push
out
ins
test
dec
call
pop
fistp
movs
test
int3
pop
dec
sbb
xchg
sbb
or
pop
fstp
mov
xor
cld
fld
ds
lock
sbb
jne
mov
cld
inc
xor
mov
test
xchg
and
pusha
push
push
es
push
mov
inc
dec
(bad)
nop
inc
jo
fadd
xchg
sub
les
sar
retf
push
and
bound
out
inc
mov
inc
pop
pop
not
or
lahf
jae
xchg
dec
inc
std
sbb
or
mov
rcl
pop
inc
popa
stos
push
mov
sbb
rol
fsub
hlt
ror
pop
push
bound
push
sub
lock
add
jne
shl
dec
inc
inc
pop
ret
ror
cmps
push
out
mov
fiadd
out
mov
dec
xor
inc
pop
shl
dec
pop
dec
into
xor
ja
je
inc
push
fadd
loope
or
sbb
pushf
inc
add
and
pop
dec
push
ror
pusha
dec
pop
sub
push
push
imul
push
xlat
aam
cmp
push
push
mov
clc
js
stos
cmp
imul
mov
frstor
push
shl
inc
pop
(bad)
ins
mov
adc
test
pop
mov
lahf
or
sbb
sbb
push
inc
push
add
or
mov
xchg
cmp
inc
or
mov
xchg
mov
in
xchg
sub
mov
in
mov
xchg
sub
mov
mov
mov
mov
aas
mov
enter
mov
adc
mov
mov
xchg
cmp
mov
adc
aaa
pop
jg
pop
mov
sub
sahf
ret
mov
icebp
sbb
mov
mov
xchg
pop
mov
sub
call
add
mov
mov
mov
popf
das
push
or
test
push
movs
push
add
add
adc
pushf
inc
mov
je
inc
mov
inc
popf
sahf
xor
push
and
cwde
pop
adc
or
dec
pop
and
or
ror
xor
fild
cmps
adc
fsubr
pop
dec
dec
cmp
add
jmp
and
pop
movs
pop
int3
mov
mov
test
jge
jl
xchg
adc
jmp
push
or
or
mov
mov
mov
xchg
ret
(bad)
cmp
mov
lods
jg
push
fsubrp
inc
xchg
push
cld
push
jl
js
test
xor
push
movups
ds
leave
jg
ss
out
(bad)
icebp
add
pop
icebp
loopne
dec
enter
push
inc
dec
ja
push
inc
inc
into
sti
das
pop
xchg
outs
pop
enter
adc
pop
jo
nop
fist
out
fiadd
repnz
add
loopne
sbb
pusha
push
jmp
mov
lea
mov
imul
add
stos
jae
iret
mov
xchg
inc
fcomp
daa
(bad)
es
das
int3
push
adc
pop
sub
popf
into
repz
pushf
push
mov
mov
je
pop
cmp
dec
ret
mov
adc
inc
imul
or
push
stos
cmp
jne
cmc
add
mov
fst
pop
and
mov
jo
icebp
push
mov
enter
bound
enter
add
add
mov
mov
or
inc
or
aam
dec
xor
in
cmp
std
leave
add
cmp
add
xor
aas
addr16
mov
and
mov
mov
add
push
sbb
popa
dec
pop
dec
pop
jle
mov
or
jns
js
or
xchg
ss
jo
mov
in
hlt
push
push
or
or
add
add
add
cdq
cdq
sahf
loope
sbb
push
add
adc
sub
add
inc
cmp
add
pcmpeqb
xchg
and
aas
loopne
stos
cmp
jle
push
adc
imul
pop
ins
and
shl
inc
ds
enter
or
fldenv
das
and
sbb
sub
cli
push
ins
cmps
sbb
add
fild
lock
fistp
push
dec
add
push
not
adc
imul
test
push
and
test
push
div
idiv
adc
push
dec
xor
add
adc
add
add
cmc
push
inc
and
rcr
inc
dec
ins
jmp
stos
inc
cs
xchg
sbb
movs
aam
sub
and
popa
jns
cld
call
push
inc
or
add
cmp
test
sub
xchg
mov
mov
pop
mov
and
fld
rcr
jmp
(bad)
and
ret
cmp
inc
popa
je
pushf
out
inc
mov
push
sub
sub
or
mov
pusha
jmp
cmps
add
xor
cmp
mov
mov
sub
fwait
js
adc
pop
mov
fiadd
adc
xchg
or
jb
arpl
or
add
hlt
and
push
inc
aaa
dec
imul
lods
xor
mov
sub
add
mov
sub
cmps
or
shl
xor
jae
and
cwde
loopne
outs
or
das
int3
cmp
cs
loop
mov
test
add
mov
or
pop
fucomp
inc
lods
shl
test
push
shl
inc
or
inc
push
jb
mov
jecxz
sbb
jmp
cdq
mov
nop
pop
in
test
ret
sub
fild
mov
push
dec
mov
loope
push
mov
mov
xchg
daa
aaa
lods
mov
daa
int
enter
mov
push
daa
daa
cmc
xor
fdivr
adc
icebp
ss
cs
adc
jno
daa
mov
sub
add
sub
loope
xchg
jl
adc
pop
cli
xorps
add
fisub
lock
push
pop
(bad)
call
add
outs
movs
cdq
rcr
movs
pop
fsub
add
push
test
adc
sti
and
loopne
cmp
jnp
repnz
(bad)
js
les
imul
fcomp
add
test
arpl
add
fucomp
mov
clc
pop
pop
(bad)
popa
lods
add
or
dec
or
loope
dec
push
gs
pop
int
xchg
push
cmp
popa
sub
or
test
and
sar
cmp
int3
jns
or
jno
movs
fldln2
mov
mov
jno
call
jno
pop
scas
arpl
and
cmp
add
cdq
xchg
cmp
or
test
mov
or
not
jp
popw
jo
dec
dec
mov
and
pop
and
mov
lea
pop
mov
add
or
push
mov
cmp
mov
push
jp
xor
xor
xor
xor
popa
mov
fdivr
es
xor
xor
ins
(bad)
mov
xor
xor
pop
mov
arpl
xor
xor
aaa
adc
popa
mov
dec
pop
pusha
ret
js
jp
sbb
shl
ds
mov
add
neg
adc
imul
add
ret
or
loope
dec
es
pop
adc
pop
push
or
dec
in
sar
xor
xchg
push
retf
add
or
cs
(bad)
pop
xor
dec
push
(bad)
shl
add
pop
mov
inc
loope
sub
mov
push
bswap
repz
cmp
add
or
in
push
add
ds
xchg
inc
pushf
push
ja
stos
mov
jo
cdq
les
jno
xor
test
fnsave
es
in
mov
or
int3
dec
or
xor
lods
dec
and
in
shl
add
jb
xchg
test
dec
or
or
xchg
cmp
mov
dec
mov
adc
dec
inc
sub
fadd
adc
in
cmp
sub
inc
or
(bad)
(bad)
cld
dec
js
push
and
popa
adc
push
sbb
xor
xor
jbe
sti
xchg
mov
movs
cmps
outs
mov
outs
mov
das
loopne
mov
lea
push
and
and
movs
push
aaa
push
int
xchg
rcr
xor
sbb
push
mov
mov
shl
rcl
arpl
inc
aas
adc
or
inc
pop
push
loopne
(bad)
adc
add
add
push
and
popa
jo
loopne
or
je
aam
fld
xor
(bad)
cmp
sbb
es
jns
(bad)
xchg
xor
dec
aas
add
push
jb
shl
inc
pop
jno
popf
je
dec
jb
jle
push
or
cmp
push
popa
pusha
mov
push
xchg
mov
adc
scas
cld
jb
mov
add
lock
mov
dec
or
shl
les
xor
add
addr16
dec
push
inc
dec
xchg
ret
mul
outs
push
cmps
outs
imul
xor
jne
add
sub
cmp
jmp
imul
ss
js
gs
xchg
jge
ror
push
push
push
popw
push
dec
bound
mov
add
inc
in
mov
xor
or
test
mov
inc
inc
icebp
mov
cmp
dec
push
dec
inc
sbb
cmp
or
lahf
cmp
mov
jo
ss
jge
pop
arpl
clc
add
xor
adc
fmul
jnp
sbb
mov
push
push
xor
xrelease
lods
mov
adc
cmp
xor
dec
lods
adc
inc
lods
or
into
sar
out
mov
mov
pushf
xor
sbb
outs
int3
pop
lahf
push
push
pop
(bad)
mov
adc
sbb
sbb
add
loope
clc
xor
in
ret
jecxz
pop
and
add
pop
sub
enter
sahf
pop
fld
ficom
sbb
pop
sbb
leave
push
add
add
cmp
pop
mov
push
sahf
(bad)
sbb
cmp
mov
or
ret
jmp
daa
mov
fucom
push
es
push
sbb
test
std
jo
ins
imul
imul
add
fs
dec
out
jnp
fisttp
sub
sub
or
push
mov
gs
dec
cmovle
dec
test
xor
lds
cmovs
xor
push
jo
nop/reserved
arpl
add
push
or
call
xchg
pop
jl
ja
movs
popf
adc
xor
fidivr
inc
movs
pop
or
cmp
shl
dec
mov
sub
pop
pop
push
loopne
sahf
adc
add
lock
add
adc
jne
sbb
xor
iret
mov
push
sbb
mov
cmp
(bad)
out
loopne
(bad)
ja
push
dec
loop
cwde
mov
cmp
sub
xchg
and
movs
or
jbe
out
clc
in
fcomp
lock
add
and
jnp
sub
inc
inc
inc
push
loopne
xchg
je
dec
add
mov
mov
sub
les
fnsave
or
xor
xor
fadd
sub
or
out
inc
sbb
mov
pop
scas
xchg
inc
gs
jo
jns
gs
mov
or
add
xor
mov
cmp
js
mov
ins
or
inc
push
jo
pop
pop
loopne
fsub
lahf
mov
jb
or
inc
clc
pop
arpl
inc
jo
outs
or
out
mov
push
test
xor
xor
mov
data16
fnstenv
comiss
xchg
adc
xor
imul
xor
lds
test
and
pop
jb
rcr
jo
retf
(bad)
loop
xor
inc
or
cs
mov
xchg
out
adc
or
in
cmp
sub
into
mov
mov
ffreep
push
jnp
mov
cli
xor
push
in
outs
jo
mov
scas
lods
cs
das
lds
mov
popa
dec
pusha
jmp
xchg
pop
imul
pop
jl
fadd
lea
jo
and
bound
ins
mov
scas
cmp
aas
sub
fst
and
ins
sbb
pop
ja
push
int3
xor
shl
sbb
imul
jecxz
mov
lds
jne
pusha
add
xor
xchg
mov
mov
or
loopne
ins
enter
shr
inc
inc
xchg
adc
mov
push
add
aam
inc
pop
inc
jb
xlat
and
outs
(bad)
pop
fdiv
cmps
inc
add
sub
loop
(bad)
bound
or
sub
cld
and
sbb
cmc
test
mov
std
aaa
je
call
out
xchg
aaa
or
jmp
rol
sbb
cmp
scas
jmp
ins
ret
fisttp
rcl
sub
jnp
push
popa
jae
inc
or
into
pushf
std
xor
dec
and
movs
xchg
inc
jge
add
fs
stos
scas
jge
xor
mov
push
add
xor
xor
pop
enter
clc
stos
sbb
js
inc
aaa
enter
in
aaa
mov
loop
xor
loop
lods
xor
mov
dec
movs
cs
adc
xor
xchg
test
xchg
inc
sbb
mov
mov
lea
ret
ds
rol
je
sub
sub
inc
gs
push
pushf
fwait
jo
xor
mov
mov
push
cmp
and
jbe
sub
push
inc
and
loope
push
dec
and
(bad)
jbe
rol
sub
outs
sub
jbe
stos
add
jp
push
mov
cwde
sub
push
and
xchg
in
shr
dec
pop
pop
and
aad
mov
mov
lds
and
fwait
ret
repz
ss
inc
push
jl
nop
xchg
popa
std
inc
jo
jge
ins
call
dec
gs
ds
add
xchg
int3
push
clc
jne
xchg
stos
dec
jae
jle
or
je
push
push
dec
xor
pop
sbb
(bad)
push
in
xor
add
cmp
(bad)
sbb
jb
in
sbb
pop
mov
cmp
pushf
pushf
pushf
jb
fisubr
leave
dec
dec
dec
inc
fs
fmul
retf
daa
and
mov
cli
xchg
xchg
xchg
daa
and
push
jns
enter
rol
int3
aaa
leave
leave
leave
leave
test
in
fs
int
add
xor
in
xor
imul
push
enter
les
jl
repz
pop
mov
or
loopne
out
adc
push
aas
scas
iret
out
cs
and
adc
sub
jge
lock
retf
inc
mov
mov
cmp
and
and
jb
inc
add
pop
retf
call
pop
or
jg
dec
mov
mov
or
fdiv
or
xlat
pushf
and
jo
xchg
sbb
add
aas
or
fidivr
add
inc
pop
in
call
push
ins
inc
ins
mov
aad
add
pop
(bad)
test
mov
or
icebp
inc
ins
popa
jae
je
or
pop
adc
gs
into
or
dec
mov
out
inc
outs
out
jle
push
pop
push
popa
cmp
cmp
jle
push
movaps
outs
pop
adc
ror
test
and
pusha
dec
daa
mov
aaa
push
mov
div
ins
mov
clc
adc
dec
add
adc
ins
ins
dec
or
jg
xor
mov
xor
dec
sub
xchg
cmp
xchg
inc
pusha
shl
pop
cmp
add
les
dec
ja
sub
jbe
dec
jne
jo
xchg
setne
inc
inc
loopne
call
xor
rol
pop
dec
ja
fidivr
stos
ss
lahf
rol
mov
sub
push
popa
sub
sbb
xor
xor
or
dec
aas
push
add
lds
test
inc
(bad)
fisttp
cmp
shl
nop
scas
push
js
push
or
pusha
repz
pushf
sbb
inc
cmp
pop
add
xor
mov
jns
pop
test
popa
imul
stos
sbb
test
ins
jmp
adc
in
push
ror
cmps
dec
jae
push
jo
mov
add
xor
adc
test
inc
test
and
hlt
mov
pusha
(bad)
int3
mov
rcl
mov
push
sbb
ds
adc
mov
sbb
lahf
addr16
mov
adc
pop
fcom
enter
rcl
mov
pop
mov
mov
pop
mov
push
add
out
(bad)
and
add
cwde
and
xchg
adc
(bad)
cwde
inc
int
and
add
lea
mov
mov
mov
add
or
mov
add
mov
enter
push
outs
ret
push
jbe
shl
imul
lock
push
dec
inc
add
in
and
sbb
ins
mov
enter
ins
adc
bound
sbb
hlt
mov
mov
inc
int3
ins
or
cmps
ins
mov
push
mov
push
add
mov
js
sbb
push
sub
call
test
enter
sbb
sbb
mov
xchg
cmp
jbe
mov
mov
loope
in
rcl
add
or
push
and
mul
rol
retf
xchg
xchg
xchg
movs
(bad)
jmp
xchg
xchg
sub
js
xchg
retf
xchg
xchg
leave
call
xchg
xchg
xchg
pop
mov
xchg
cli
and
dec
outs
retf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cmp
xchg
mov
xlat
std
sub
sbb
jl
mov
sbb
fsubr
push
ja
sbb
sbb
push
mov
jb
add
sbb
xchg
push
inc
inc
movs
push
cdq
sbb
adc
and
sbb
cwde
xchg
cdq
sbb
les
push
or
or
jb
inc
dec
movlps
lods
stos
and
rcl
mov
pop
sbb
popf
push
jecxz
and
sar
mov
scas
inc
or
js
test
leave
les
mov
dec
push
outs
pop
mov
inc
loopne
call
sub
push
inc
or
xchg
cwde
inc
jmp
or
push
inc
mov
add
cmps
push
into
sbb
outs
and
out
and
add
or
gs
ja
adc
xchg
inc
call
xchg
or
mov
xchg
inc
es
and
dec
push
push
lock
xor
inc
and
(bad)
add
sub
push
jae
or
fcomi
jnp
jo
fsub
mov
inc
sub
push
daa
adc
shl
out
or
aas
inc
dec
inc
mov
popa
push
mov
push
mov
sbb
jp
push
add
inc
or
and
idiv
dec
cmp
add
mov
sbb
inc
cdq
cwde
imul
inc
inc
or
rol
pop
add
popf
jo
sbb
xor
jle
xor
sbb
stos
or
pusha
scas
or
sbb
pop
pop
mov
pop
xor
test
inc
pop
bswap
in
add
xchg
lds
outs
dec
push
out
jmp
pop
jmp
push
sbb
nop
add
fwait
jns
add
es
add
add
and
mov
add
xor
inc
pop
adc
xor
mov
cmc
inc
pop
add
add
push
pop
and
fdivr
pop
inc
outs
and
pop
inc
(bad)
fmul
sahf
xchg
inc
inc
add
or
or
outs
inc
inc
lods
jae
sbb
clc
inc
dec
inc
add
lods
sbb
pop
add
pop
xchg
xor
sub
(bad)
sub
sub
sbb
int
pop
inc
xchg
jae
add
xchg
inc
dec
add
add
test
call
add
cmps
mov
inc
adc
dec
sbb
mov
test
out
fidiv
fistp
cwde
fiadd
retf
fldln2
shl
fadd
push
inc
sbb
mov
and
mov
add
cmp
inc
mov
push
pusha
(bad)
inc
shl
push
rcr
lods
mov
das
das
hlt
fistp
outs
xor
scas
mov
lods
scas
xchg
int3
xchg
data16
push
push
cmp
dec
sti
call
inc
pusha
sbb
in
(bad)
fcmovnbe
push
nop
scas
test
push
sbb
fcomp
adc
ins
and
sahf
add
rcr
jle
in
imul
aaa
push
xor
nop
push
adc
es
mov
fcom
test
aam
push
push
push
cli
scas
mov
pop
pop
fdivr
jle
div
fisttp
call
push
pop
fidiv
xor
inc
add
mov
sub
push
or
je
inc
in
cwde
loope
imul
or
gs
shl
or
push
or
inc
mov
ffreep
rcr
and
fsub
jae
cdq
cs
mov
ss
push
pusha
or
dec
lods
and
push
lods
lds
xor
sub
fsubr
stc
pop
in
pop
xchg
fsub
pop
out
inc
mov
or
pop
inc
or
mov
dec
loopne
mov
mov
fld
repz
push
shr
pop
dec
or
call
rol
outs
js
xchg
xor
inc
shr
cmps
fld
and
cwde
cmp
es
push
enter
inc
mov
(bad)
in
in
scas
cs
sti
sahf
out
mov
js
test
out
cwde
pop
jnp
in
nop
push
add
js
inc
xchg
cmp
xchg
sbb
mov
or
stos
push
xchg
and
cmp
xor
(bad)
adc
out
imul
scas
inc
fsub
sub
push
jo
ja
or
adc
mov
xor
mov
xor
or
add
gs
(bad)
xlat
mov
stc
push
ss
xor
jb
pop
cmp
in
add
pop
adc
inc
xor
xor
lea
mov
lea
adc
jnp
add
lock
mov
imul
mov
jle
int
mov
mov
add
mov
mov
dec
or
adc
push
add
mov
mov
std
ins
fild
add
fs
fdiv
fiadd
pop
mov
lock
push
rcr
mov
data16
ds
mov
sahf
mul
push
pop
adc
inc
mov
xlat
icebp
add
sub
pop
or
test
shl
daa
add
jno
xlat
pop
(bad)
clc
xor
repz
retf
xor
sbb
cmp
ret
add
push
mov
jne
sub
dec
jno
lods
inc
test
jnp
push
pop
test
pop
add
add
xor
adc
and
into
pop
sub
xchg
out
call
inc
lock
sub
sub
inc
or
cmp
adc
push
jo
int
mov
(bad)
push
bound
dec
jecxz
mov
push
lods
sub
and
xor
add
push
jnp
test
push
cdq
aad
sub
and
add
xchg
in
aaa
xchg
outs
jne
sbb
adc
add
mov
data16
mov
int
cmp
out
mov
call
sub
call
add
sub
scas
loopne
jb
and
mov
fadd
dec
jl
retf
jp
mov
add
jmp
cmp
jmp
ja
inc
(bad)
(bad)
xor
scas
(bad)
int3
retf
add
arpl
mov
mul
push
sub
inc
imul
or
inc
inc
test
inc
push
mov
push
jb
out
add
outs
dec
xchg
xor
out
dec
sub
fwait
dec
sub
jae
lea
sub
mov
sbb
xor
ja
add
test
(bad)
or
sub
mov
dec
cmp
inc
sub
inc
loop
adc
sbb
or
sbb
(bad)
cwde
xor
or
xor
add
sbb
jo
jmp
movs
inc
sti
icebp
jmp
jo
pop
mov
(bad)
hlt
sub
sub
xchg
scas
or
or
xor
or
cmp
inc
mov
in
leave
in
inc
mov
movsx
fs
call
daa
fucomp
in
adc
or
aad
(bad)
and
push
sahf
sub
jae
add
mov
fwait
or
sbb
fwait
pusha
or
push
inc
pop
adc
imul
add
inc
mov
mov
add
sub
stos
push
jb
mov
xchg
cmp
or
adc
add
test
dec
sub
sbb
fidivr
js
xchg
or
mov
xchg
imul
push
int3
ins
add
or
lahf
add
adc
imul
cmp
xor
add
add
push
in
inc
xor
jge
sub
sub
les
jge
cwde
sub
sub
pop
adc
push
mov
add
push
xor
mov
fwait
std
pushf
retf
xor
push
mov
pop
shr
mov
add
gs
add
daa
xchg
mov
or
test
ins
cwde
mov
add
adc
ret
retf
ins
pop
adc
out
xchg
xchg
xchg
pop
push
(bad)
mov
call
call
add
jae
add
or
and
push
cmps
sub
cmp
dec
jmp
and
cmp
push
mov
stos
and
pop
mov
add
je
pop
push
adc
cwde
dec
sbb
imul
pop
add
in
inc
fsubr
rol
adc
pop
rcl
add
(bad)
jl
pop
push
and
push
and
inc
test
inc
sub
jmp
xor
cmp
js
out
sub
or
iret
or
add
xor
push
push
pop
fs
fld
pop
cs
into
sub
push
iret
mov
mov
js
into
add
push
xor
out
xlat
push
push
int3
pop
push
add
daa
lock
ja
or
(bad)
test
cs
aad
jnp
dec
inc
ins
das
or
test
sub
mov
cmp
jae
rol
mov
adc
pop
push
ret
ins
outs
pop
test
mov
bound
or
pop
pop
sub
ja
cmp
ins
jo
inc
mov
or
or
sub
adc
js
push
js
popa
push
and
mov
and
lea
rcr
push
cmp
sbb
pop
mov
cmp
or
lea
jne
jne
add
jne
enter
jne
in
sbb
sbb
jne
cli
mov
cmp
jo
lea
jns
cdq
mov
cmp
xchg
inc
mov
inc
sbb
adc
adc
cmc
mov
jno
xchg
or
dec
shl
pop
dec
gs
jae
mov
cmp
xchg
xor
xor
(bad)
lods
inc
jno
ror
inc
rcl
or
enter
ss
sbb
jns
pusha
les
in
fadd
lods
int3
cmp
adc
xor
push
mov
or
loopne
inc
dec
pop
sti
push
loope
loopne
inc
mov
clc
dec
cmps
add
inc
ins
jne
fist
(bad)
xchg
in
push
movs
loop
cld
adc
(bad)
aad
inc
or
rcr
push
sub
jp
adc
(bad)
mov
add
dec
and
push
inc
or
or
repnz
mov
mov
add
xchg
xchg
mov
test
inc
and
or
or
sub
inc
add
mov
mov
push
movs
pop
dec
mov
dec
(bad)
sti
cmc
fcmovbe
mov
pusha
push
adc
hlt
dec
or
jge
in
imul
ins
addr16
sub
mov
push
call
fs
add
js
imul
inc
push
in
push
mov
loope
sbb
fistp
jle
or
add
gs
cmp
push
fwait
jno
pop
adc
lea
mov
pop
cmp
xchg
push
push
lods
add
add
sahf
mov
push
rcr
add
pop
mov
cmp
(bad)
out
jne
mov
add
sbb
ret
push
call
ret
mov
mov
(bad)
jmp
push
mov
fimul
aas
push
mov
push
dec
ss
mov
je
test
jne
or
je
and
dec
sub
push
add
xor
pop
pop
aas
mov
mov
cmps
lock
and
sbb
add
sbb
jne
fisttp
sbb
(bad)
cmp
jl
jo
inc
cmp
pop
inc
mov
pop
ror
fiadd
or
cwde
out
jl
mov
adc
jmp
and
dec
sti
jmp
ins
add
and
pop
cmp
xor
push
xchg
call
pop
test
in
imul
lea
xor
pop
inc
push
xchg
sub
inc
adc
nop
add
nop
push
mov
push
mov
pop
cld
lock
sbb
push
xchg
mov
mov
and
shl
or
jg
mov
mov
mov
pusha
or
jbe
or
dec
push
sahf
add
stos
hlt
fnsave
cld
pusha
lods
adc
jae
hlt
mov
out
adc
sbb
push
push
push
out
mov
mov
mov
cmp
cmp
sub
daa
sub
das
mov
fidivr
pop
cmp
jmp
jmp
sub
in
push
jmp
push
test
int3
inc
push
push
inc
push
push
push
clc
pop
ret
jmp
mov
jp
loope
cld
pushf
mov
pop
es
fbld
jp
test
je
mov
mov
adc
push
or
sbb
ret
and
dec
jne
(bad)
(bad)
dec
xor
cwde
and
push
je
mov
fmul
test
adc
pop
mov
jae
and
adc
push
jns
or
mov
xor
(bad)
jge
or
mov
mov
fnstsw
add
pop
xor
bound
sete
loopne
jg
inc
xchg
or
enter
out
std
or
inc
add
mov
(bad)
ds
push
jne
rol
push
jle
sar
dec
cmp
jne
add
and
inc
inc
loope
js
(bad)
sahf
pop
outs
and
adc
rol
fdiv
mov
or
xchg
cld
adc
mov
push
push
adc
dec
not
xchg
mov
out
add
dec
cld
call
jbe
lds
inc
dec
idiv
(bad)
mov
sub
ja
arpl
fdiv
inc
sbb
or
test
inc
dec
jne
inc
jnp
ror
cdq
jae
jnp
addr16
push
(bad)
loopne
fcmovne
pop
mov
(bad)
out
add
outs
bound
es
cmp
aaa
fs
in
loopne
lock
mov
xor
xor
test
je
or
adc
add
mov
dec
adc
ror
dec
adc
adc
xor
push
out
rcr
add
cmp
inc
aas
cmps
sbb
idiv
fmul
adc
add
(bad)
pop
and
retf
test
daa
push
jle
fs
fcomp
sub
adc
inc
adc
add
inc
inc
add
or
inc
inc
push
adc
and
(bad)
cmps
lods
repnz
stos
scas
test
lea
(bad)
sub
add
or
or
cld
hlt
outs
cdq
xor
mov
pop
fisub
mov
xchg
jnp
outs
push
mov
lods
cli
push
test
test
outs
sahf
jmp
adc
add
cdq
sbb
jl
mov
sbb
pop
test
inc
dec
popa
pop
das
je
pop
int3
lahf
test
cmove
in
xchg
mov
sub
mov
mov
mov
inc
test
cmp
test
xor
inc
or
clc
(bad)
pushf
adc
mov
js
in
(bad)
hlt
mov
iret
les
adc
out
pop
iret
dec
sbb
xchg
mov
or
xchg
mov
call
jmp
adc
fisub
inc
jne
icebp
ror
dec
add
outs
pop
mov
sbb
cmp
or
push
add
dec
or
push
jae
ins
div
push
inc
or
inc
sbb
mov
shl
add
or
adc
lods
fisub
ds
push
inc
xor
xchg
retf
test
push
pop
lock
xchg
je
ss
inc
pop
xor
mov
inc
in
(bad)
mov
pop
ins
dec
sub
add
mov
int3
cmps
push
adc
adc
mov
mov
and
jmp
mov
and
add
fadd
dec
call
lock
and
or
jg
or
stos
push
ins
add
imul
jnp
mov
imul
or
push
dec
je
jmp
sbb
je
add
inc
jae
adc
cmp
shl
shr
inc
sti
xchg
pop
adc
push
add
test
mov
mov
cs
or
mov
adc
cmp
(bad)
push
push
pop
add
fstp
mov
packsswb
jb
push
and
add
mov
nop
mov
add
or
add
pop
jno
stos
adc
or
xor
xchg
adc
xchg
or
outs
cmp
or
loopne
enter
dec
cmp
adc
cs
adc
cmps
cmp
in
cwde
sbb
adc
out
pop
inc
dec
push
pushf
push
cld
add
cmp
inc
sbb
mov
loop
rcl
ss
in
pop
je
dec
test
adc
sbb
add
pop
adc
icebp
das
lock
push
ret
test
setne
lods
jmp
adc
mov
xchg
and
int3
addr16
push
dec
cli
fist
sti
cld
jmp
fsub
pushf
pop
sub
lods
js
inc
mov
lahf
xchg
xor
in
jg
sub
neg
jmp
pop
jne
pop
pushf
or
jns
adc
dec
mov
js
sti
mov
vmovaps
or
inc
test
lock
loopne
add
mov
iret
fmul
vmulps
add
ret
jmp
cmps
pop
in
push
mov
pushf
js
fs
mov
cdq
adc
bound
ret
test
mov
inc
cmp
setl
dec
in
mov
push
ds
call
cmps
mov
pusha
jo
in
push
out
pusha
sbb
faddp
loop
sbb
call
push
mov
stos
sahf
push
mov
call
pop
cmps
shl
xor
and
inc
ja
pusha
in
sub
push
inc
dec
inc
cdq
clc
std
scas
ret
idiv
push
ret
andnps
mov
jmp
inc
inc
or
jnp
gs
nop
hlt
cmp
out
call
cs
jmp
xor
retf
or
loopne
add
in
test
jle
pop
push
sub
add
sub
mov
jo
jae
jp
xchg
movs
and
(bad)
scas
add
adc
je
jmp
ja
cmp
dec
push
enter
cmp
xor
and
mov
and
inc
mov
aad
(bad)
pop
pusha
cmp
mov
inc
or
jb
fldenv
jnp
or
mov
(bad)
shl
retf
push
cdq
fild
jb
xor
mov
fiadd
ja
test
cld
inc
push
lahf
out
sahf
data16
mov
or
fcmovne
xor
movs
loope
aaa
sub
aaa
lds
dec
rol
and
push
dec
inc
frstor
and
xor
jnp
inc
cmp
adc
push
add
aam
in
dec
test
fs
cmps
mov
and
mov
sub
(bad)
data16
pop
gs
adc
call
mov
push
and
xor
sbb
push
adc
sbb
mov
cdq
pushf
ins
ror
icebp
call
cmc
sub
inc
inc
and
jnp
sysret
cmp
je
mov
mov
push
dec
push
cmp
push
sub
mov
cmp
stos
or
or
xor
mov
sahf
jle
push
aaa
xchg
sub
cmp
jle
and
out
mov
sar
iret
add
call
mov
dec
aas
xor
fistp
adc
ret
sub
adc
fadd
mov
sbb
mov
adc
cmp
or
adc
xor
sar
adc
mov
mov
mov
fiadd
into
je
dec
or
xor
dec
lods
xor
outs
pop
xor
pop
jb
xor
mov
es
sysenter
xor
mov
mov
add
mov
dec
adc
cmp
nop
mov
mov
add
in
call
in
test
jbe
sbb
inc
jne
rol
jne
add
sti
inc
cmps
sbb
loop
mov
dec
xor
xchg
sbb
or
sbb
jge
ror
and
sub
xor
xchg
or
nop
cmp
nop
add
xor
push
jbe
push
sub
adc
push
pop
jl
push
add
and
ret
add
push
mov
loopne
pop
inc
es
push
data16
push
push
push
xchg
mov
mov
jp
clc
sbb
pop
ja
add
fdivr
loopne
add
inc
in
jmp
cmp
mov
(bad)
lahf
inc
add
je
fadd
imul
mov
dec
mov
mov
lea
push
dec
ret
xchg
mov
push
mov
cwde
loope
and
mov
add
adc
pop
fadd
mov
stos
je
mov
retf
or
stos
icebp
popa
es
push
ins
xor
jg
and
fcomp
adc
and
inc
pusha
hlt
or
push
fmul
xor
cmps
cwde
mov
sub
mov
scas
call
sbb
adc
adc
cmp
test
jo
inc
fadd
adc
test
inc
loope
pop
fs
mov
lea
aaa
or
mov
mov
cmc
mov
mov
dec
cmp
adc
pop
test
pop
jecxz
mov
adc
dec
pop
pop
cmps
pop
jecxz
nop
lods
movs
adc
fadd
ss
jmp
cmc
in
mov
and
mov
mov
push
sub
or
xchg
imul
lea
sbb
jmp
sar
mov
cmp
inc
je
mov
ret
xchg
out
mov
mov
rcl
inc
xchg
jl
push
push
inc
sub
cmps
call
mov
push
lea
jg
shr
rcr
imul
dec
and
mov
int3
jo
cmps
aaa
inc
or
fsubp
rcr
in
push
cld
cmp
in
into
sub
add
sar
dec
lods
adc
int3
mov
sbb
bound
push
outs
pop
out
add
pop
and
stos
xor
or
add
push
out
mov
repz
(bad)
jmp
ret
push
test
cmp
mov
inc
popa
mov
test
je
mov
out
push
outs
xchg
or
test
mov
out
popf
mov
mov
sub
fxch
cdq
out
sub
xor
pop
xor
sub
ins
lds
lahf
lods
not
mov
ss
fstp
mov
not
and
test
xchg
ss
stos
jg
pop
out
lea
cmp
nop
jg
outs
out
lock
adc
jae
fistp
in
addr16
mov
call
sbb
les
sub
add
cmp
sub
ins
or
sbb
shr
aam
lock
mov
scas
lock
add
and
(bad)
add
jmp
mov
dec
outs
sbb
int
inc
outs
add
xchg
dec
push
inc
xchg
outs
pusha
cmp
rcr
adc
cmp
xor
test
pop
xchg
push
test
inc
dec
push
jo
jp
movs
call
test
pop
test
adc
or
icebp
out
or
into
div
ret
inc
push
mov
sub
mov
sbb
das
jmp
cmp
cmp
xchg
nop
imul
jnp
inc
and
pop
aad
or
xchg
jmp
enter
or
cmp
fcom
and
push
or
call
and
or
mov
push
pop
or
jmp
cmps
int3
fs
mov
pop
add
aaa
sbb
inc
dec
inc
or
dec
and
push
or
lods
lea
mov
adc
sti
mov
mov
lea
push
add
aaa
or
es
add
mov
add
mov
mov
cmp
jge
sbb
out
inc
mov
pop
mov
xor
push
jle
test
stos
xchg
push
lea
push
imul
mov
fistp
mov
cld
fdiv
sbb
xchg
mov
pop
mov
ds
cmp
dec
cmp
je
test
jo
(bad)
xchg
mov
retf
std
adc
sar
call
stos
(bad)
mov
cld
adc
in
inc
adc
dec
add
mov
cwde
pop
adc
mov
cmps
stos
cmp
inc
pop
in
add
into
xor
add
test
xchg
mov
cmps
fcmovu
jne
retf
push
stos
or
pop
jge
dec
and
mov
sub
push
ja
sbb
mov
mov
push
mov
inc
add
jecxz
adc
les
cmps
mov
and
test
in
test
iret
jmp
in
sbb
(bad)
cli
call
pop
jmp
rcl
pxor
in
nop
es
add
mov
inc
test
fiadd
mov
cmp
lds
fucomip
dec
aaa
pop
cmp
mov
inc
jne
je
in
pop
mov
pop
xchg
dec
xchg
dec
test
bound
ret
sbb
or
cmps
retf
jno
xor
jmp
je
mov
shl
out
int3
fsub
mov
push
mov
call
or
lea
idiv
push
adc
into
or
mov
movs
(bad)
std
movs
add
dec
push
push
adc
mov
dec
les
add
cmp
push
adc
std
jno
push
(bad)
pop
out
sub
mov
xor
push
jb
mov
jmp
push
lods
push
add
fiadd
sbb
je
adc
jl
jp
sbb
call
inc
jae
xor
loop
call
(bad)
xchg
cmp
or
std
icebp
push
mov
in
adc
xor
or
and
rol
sbb
adc
lods
das
lahf
je
out
addr16
add
in
mov
gs
std
sar
add
cmp
in
jne
lods
mov
mov
ds
adc
mov
lahf
loopne
push
sahf
sub
xor
lock
mov
push
jns
mov
cld
retf
movs
mov
(bad)
jmp
inc
(bad)
cmps
xchg
adc
fmulp
sbb
aaa
xor
outs
in
xchg
xchg
dec
and
pusha
pop
push
pop
add
push
push
sub
push
add
xor
imul
xchg
jne
or
enter
mov
sbb
add
shr
ins
pusha
add
add
imul
and
fbstp
fmul
fst
add
push
push
mov
push
dec
mov
(bad)
pop
mov
xchg
mov
mov
mov
mov
jle
push
jns
inc
push
jmp
mov
pop
cmp
adc
inc
ins
pop
mov
mov
push
or
sub
pop
dec
pushf
enter
xchg
clc
in
jnp
push
cld
mov
xor
pusha
mov
or
cmp
scas
aam
mov
push
mov
jle
in
je
leave
out
jg
add
stos
pushf
jmp
mov
cmc
es
xor
(bad)
pop
add
fnsave
or
enter
adc
xchg
call
adc
hlt
push
add
out
mov
jge
mov
mov
cld
pop
push
(bad)
xor
adc
ret
add
cmps
ror
push
cmp
push
daa
shl
stos
or
add
pushf
addr16
sbb
or
push
sahf
adc
sbb
ret
adc
jo
js
jne
in
push
lahf
pusha
xor
sub
mov
pop
xchg
push
xchg
or
popa
pop
xchg
call
adc
add
push
cmp
cmp
fcomp
popa
mov
cs
data16
add
hlt
push
aaa
in
inc
pop
shl
xchg
cmp
ins
adc
mov
call
inc
pusha
mov
aaa
test
add
in
fnstsw
dec
sbb
int3
adc
ss
adc
test
test
cli
cmp
out
and
sbb
adc
sbb
mov
add
hlt
sub
pop
jae
ss
rol
(bad)
aaa
pop
or
lods
pop
cmp
or
shr
pop
jmp
mov
mov
mov
and
retf
js
out
dec
add
mov
je
in
inc
push
loope
loopne
push
mul
xchg
push
cs
in
fs
pop
jmp
dec
retf
xchg
out
iret
jbe
sub
push
ret
mov
cmp
push
pushf
aad
and
mov
sbb
popf
aaa
mov
mov
pop
push
aaa
js
jnp
bound
(bad)
mov
mov
adc
xor
add
mov
push
retf
mov
adc
in
xchg
xchg
test
retf
xor
loop
inc
loope
scas
push
mov
je
jmp
ret
jne
inc
or
xlat
sbb
or
jle
adc
das
fsubr
ficomp
je
mov
(bad)
jmp
jne
sub
add
in
in
int3
arpl
and
or
inc
(bad)
cmp
and
js
xchg
std
or
add
and
out
pop
jmp
push
loopne
int3
sbb
mov
inc
mov
scas
xlat
adc
push
sub
inc
call
push
add
add
pop
packsswb
sbb
push
adc
pop
call
(bad)
stc
push
push
fimul
int3
fcom
sbb
pop
clc
or
adc
push
lods
repnz
jl
xor
test
fucomp
mov
xchg
pop
mov
mov
ror
xchg
jno
xor
jo
inc
xchg
rcl
sbb
lea
cmps
rcl
fcomp
je
inc
push
test
adc
sbb
cmp
(bad)
sti
jo
mov
mov
dec
int
js
(bad)
xor
adc
fdivr
popa
jbe
inc
dec
and
push
push
push
add
sub
or
mov
int
test
sbb
ins
and
ins
test
adc
sbb
cwde
dec
sbb
xor
push
and
mov
cld
adc
sub
(bad)
xor
lods
mov
or
jne
mov
xchg
dec
int3
and
outs
mov
xor
in
xchg
jg
xchg
sub
xor
jmp
sub
jbe
cmc
xchg
push
movs
mov
jmp
inc
sti
push
push
dec
jo
icebp
add
rcr
cmp
push
add
ins
or
in
push
cmp
and
and
loopne
mov
aam
cld
mov
out
add
js
add
mov
jb
dec
call
jbe
sti
inc
sbb
je
dec
push
bound
test
mov
inc
fnstenvw
jbe
xchg
push
push
mov
cmps
sbb
jo
sbb
or
push
bound
mov
xchg
sbb
out
aas
outs
add
aas
sahf
inc
mov
ja
loop
or
cmp
add
pusha
addr16
and
add
and
es
inc
inc
call
test
mov
aas
adc
dec
pusha
xor
and
cmp
scas
add
push
and
sbb
xchg
add
xchg
fsub
imul
push
mov
jbe
aad
mov
xor
dec
call
sbb
pushf
mov
or
cs
pop
push
adc
cmp
pusha
xlat
ror
add
jecxz
and
mov
dec
lock
jbe
cmp
adc
in
xor
inc
cmp
push
ds
push
push
mov
loopne
push
pop
rol
mov
mov
test
and
test
ss
mov
loopne
pop
or
daa
cmp
sbb
cmp
xor
jmp
hlt
test
mov
test
cmp
daa
sub
sub
xor
and
push
cmp
fmul
data16
rol
jle
jbe
push
sbb
call
bound
cmp
in
and
pop
ds
push
push
daa
cld
and
mov
test
je
mov
mul
stc
push
or
rol
jmp
inc
out
mov
mul
test
lea
jmp
pop
fs
dec
fwait
or
mov
and
rcr
in
push
cmp
es
int3
cmp
sub
xchg
ins
add
pop
sub
add
js
pop
adc
add
mov
out
cmps
jmp
cmps
sub
mov
dec
sub
sbb
jne
add
es
nop
cmp
jne
adc
jl
add
xor
loopne
sbb
xor
inc
int
ret
iret
jl
ror
dec
jne
inc
(bad)
xor
add
or
nop
ds
push
(bad)
loop
push
sbb
sbb
ret
mov
adc
pop
add
fild
fst
mov
push
je
push
mov
fs
retf
sete
bound
and
pop
ror
mov
push
mov
mov
push
daa
ins
xor
pusha
sub
shl
fsubr
pop
adc
sub
mov
add
sar
test
jl
inc
xor
jbe
and
sbb
jo
add
popf
cdq
add
(bad)
dec
fs
inc
dec
jne
adc
push
xchg
mov
inc
xor
cwde
or
jne
in
inc
adc
test
lods
mov
pop
in
cmp
or
(bad)
out
imul
enter
mov
dec
das
add
push
xor
aaa
(bad)
or
xchg
or
cmp
std
jmp
cmp
pop
add
and
mov
push
rol
je
test
dec
and
push
jmp
or
pop
(bad)
outs
mov
stos
leave
inc
shl
sbb
fild
imul
inc
test
adc
xor
push
inc
std
ss
iret
daa
add
cmp
ret
jmp
hlt
jne
ja
add
shr
inc
cmp
je
cld
adc
xchg
inc
sti
mov
adc
loopne
lea
jb
pop
mov
push
xor
adc
mov
sbb
push
adc
fdiv
add
jmp
jmp
call
jmp
or
cmp
adc
das
sub
popf
mov
cmp
adc
mov
cli
push
cwde
jge
cmp
jg
cli
fcomp
add
fcmovb
(bad)
sub
jb
sub
jmp
dec
mov
inc
cmp
test
test
jmp
sub
xor
push
lods
push
pop
push
add
add
std
fcom
lods
fadd
jmp
sbb
adc
fdivr
and
icebp
mov
sbb
xor
push
xor
es
pop
sbb
bound
inc
test
mov
sub
inc
fld
pop
sub
mov
inc
mov
add
hlt
fsub
out
pop
adc
or
jmp
inc
xchg
ss
test
cmp
int3
loope
rol
aam
xor
sbb
add
out
mov
mov
sub
jns
fwait
pop
neg
sub
or
push
xor
fmul
xchg
jae
loopne
push
in
mov
xor
scas
(bad)
scas
test
je
push
fs
dec
cmp
dec
test
mov
shr
mov
in
js
inc
xor
sti
push
cmp
xor
int
gs
gs
pop
adc
clc
ss
push
xchg
cmp
or
loopne
xor
cmp
fs
mov
jbe
add
cmps
and
les
inc
mov
and
adc
lock
push
test
mov
mov
dec
or
adc
cmp
or
pop
ficomp
add
xor
out
xchg
rol
jge
inc
out
and
add
jmp
xchg
mov
sbb
in
test
pop
cmp
(bad)
xchg
push
pop
sub
add
cmp
not
jmp
mov
cmp
sub
pmulhuw
sbb
fdiv
or
mov
sbb
nop
nop
lock
add
js
adc
mov
dec
or
and
sub
pop
ret
loope
dec
push
jno
pop
jno
xchg
push
scas
pop
xchg
icebp
jo
pop
ja
add
or
and
push
out
ret
loop
clc
xor
xor
and
jbe
cmp
jbe
xor
and
ins
js
inc
sbb
cmp
daa
adc
lock
test
or
shl
push
sub
jmp
je
xor
dec
ret
out
aam
daa
ret
shr
das
cmp
(bad)
and
xor
sbb
add
mov
jle
test
pushf
mov
sbb
add
pminsw
jg
pop
xchg
and
fisub
xor
sbb
stc
push
or
and
sbb
pushf
or
pop
je
popa
add
and
mov
mov
pop
mov
add
jle
in
dec
ins
push
sub
enter
ror
adc
adc
pop
bswap
add
push
clc
mov
sbb
or
les
dec
int3
ja
inc
mov
jno
push
pop
sbb
dec
cld
dec
call
ins
pop
xor
mov
inc
dec
rol
je
adc
sub
mov
adc
cmps
sahf
jle
shr
push
adc
pop
push
cmp
call
or
jmp
mov
stos
call
fcom
push
ins
sbb
and
lea
mov
mov
sub
cmc
cmp
movs
fneni(8087
shr
add
movs
lods
adc
les
mov
sbb
push
mov
or
mov
pop
pop
push
dec
cmovne
pop
retf
and
add
jmp
jge
add
adc
loop
daa
adc
movs
xor
shr
inc
pop
inc
xor
cmp
pop
or
inc
mov
xor
hlt
inc
or
neg
xchg
movs
mov
dec
or
mov
call
cld
cmp
jmp
mov
adc
das
jo
dec
ins
dec
loopne
sbb
in
ss
and
test
icebp
fcmove
add
mov
mov
inc
push
dec
sti
das
inc
jle
sub
push
adc
sub
push
push
push
push
lods
mov
js
sub
push
int
dec
xchg
popa
or
call
daa
add
loope
xor
inc
xor
add
int
call
jg
or
mov
mov
pusha
aas
sbb
dec
lock
clc
fild
and
push
xchg
dec
push
push
imul
loopne
mov
mov
sbb
xor
cmp
and
sub
clc
or
mov
(bad)
loope
jo
hlt
lods
pop
mov
and
jl
je
shr
adc
adc
je
das
cld
daa
xor
cmp
inc
dec
jne
pop
sub
outs
dec
shl
cmc
mov
inc
jne
mov
loopne
int3
sub
inc
js
popa
mov
cmp
inc
inc
jp
push
xchg
out
sbb
inc
and
jp
jmp
and
cmp
sti
shr
sar
pop
push
out
arpl
push
add
cmp
inc
add
pop
in
push
or
ret
mov
lock
aaa
data16
cwde
add
cmps
dec
xchg
rcr
clc
lea
lea
mov
call
lock
ror
xor
adc
loopne
lock
adc
jge
inc
dec
adc
adc
sub
mov
mov
inc
aaa
inc
sbb
inc
mov
add
xchg
fbld
mov
mov
and
cmp
and
xchg
mov
fld
sub
adc
push
push
adc
add
shr
or
test
and
dec
or
jmp
sbb
mov
loopne
adc
pop
adc
ret
jmp
adc
test
neg
add
add
mov
or
xor
mov
xor
int
jl
je
or
fcmovb
loope
add
push
mov
xchg
mov
mov
fdivr
or
xor
loopne
adc
popf
xor
fidiv
push
lahf
popf
sbb
ins
pop
adc
in
test
mov
std
lds
adc
je
and
lea
xor
mov
aam
sbb
sbb
push
shr
sub
aaa
jb
push
cmc
into
aas
xor
fstp
call
in
fmul
pop
loope
adc
xchg
pop
and
cmp
pop
movs
adc
inc
or
mov
xor
out
push
jmp
sub
add
add
pop
lds
sbb
jl
in
fst
cmp
xchg
mov
push
mov
sub
cmovl
mov
mov
pinsrw
es
je
aaa
cmps
mov
or
or
sbb
mov
mov
adc
sub
jb
xchg
dec
rcl
outs
movs
jbe
or
retf
and
mov
mov
jae
lods
xlat
inc
push
out
pop
push
cmp
xor
hlt
sbb
scas
cmp
stos
add
je
or
mov
mov
loopne
pop
hlt
ins
or
out
add
dec
jb
sub
mov
cmp
push
je
stos
jne
scas
and
hlt
and
adc
xor
jbe
xor
sub
jae
and
jge
daa
add
cmp
rcl
cmp
lods
add
xor
fsubr
push
in
push
mov
daa
cmps
sbb
inc
imul
xor
jecxz
inc
inc
bound
inc
push
lock
cmp
movs
add
mov
add
mov
mov
mov
adc
clc
jne
cmp
loop
loope
daa
adc
add
movs
or
sbb
push
jo
daa
sbb
xor
das
add
stc
add
cmp
pop
loopne
and
sub
lea
rol
test
and
lods
shl
fsubr
sub
and
loop
pop
ret
inc
xor
xor
fidivr
shl
lahf
xor
bound
sbb
xchg
jne
sub
inc
icebp
mov
cmp
out
xchg
mov
test
sbb
dec
rcl
dec
rcr
fiadd
or
pop
stos
mov
add
jne
push
or
shl
dec
jp
add
jmp
in
push
jmp
adc
call
sub
jle
sbb
sar
js
add
call
jne
and
fadd
ror
sbb
add
rol
ret
or
daa
cmps
add
jo
inc
mov
fdiv
outs
outs
jo
sbb
cmp
inc
and
and
xchg
push
xor
add
and
push
js
aam
mov
jne
or
mov
push
push
mov
lahf
pop
and
mov
test
push
popa
imul
aad
fdivr
fsub
adc
stos
push
jo
rcl
movs
push
mov
or
in
movs
imul
sbb
outs
mov
cwde
(bad)
repnz
rcl
adc
(bad)
mov
arpl
(bad)
loopne
in
xchg
xchg
adc
test
inc
sub
mov
pop
hlt
fistp
pop
push
inc
popa
cmps
fistp
jl
fisttp
pcmpeqb
mov
(bad)
test
cmp
dec
inc
adc
pop
movs
test
mov
lock
dec
sub
out
or
rol
jae
sub
jo
lock
push
push
push
mov
inc
or
pop
js
xor
sub
mov
sti
or
ins
mov
adc
xchg
pop
add
cmove
pop
scas
adc
mov
mov
and
es
xor
xor
or
add
cdq
jo
add
pop
fs
cld
lods
pop
fneni(8087
and
cld
cmp
fcomp
hlt
sub
je
mov
hlt
mov
(bad)
sar
ja
lea
mov
lock
mov
or
dec
cld
jne
repnz
or
and
add
or
js
add
cmp
addr16
mov
clc
jne
cld
dec
adc
jns
and
jnp
cmp
and
sub
cld
or
push
sbb
icebp
movs
push
scas
pop
or
sbb
push
mov
adc
jb
adc
stos
rol
jmp
jae
ret
dec
xor
lock
cwde
jmp
ror
stc
je
inc
imul
sbb
(bad)
shr
add
mov
push
cmp
or
pushf
icebp
inc
mov
test
icebp
adc
je
or
inc
and
test
sub
(bad)
adc
(bad)
sub
aaa
inc
jle
inc
jge
pop
into
adc
dec
xor
ds
loope
pop
sbb
or
jg
retf
not
pop
and
sbb
(bad)
shr
sub
inc
pop
and
or
js
xor
sub
scas
lds
je
out
xchg
cmp
jl
push
push
mov
jbe
rcl
mov
pop
cmp
add
nop
imul
cmp
push
cmp
adc
sub
in
xor
scas
adc
jge
sub
or
inc
pop
add
dec
pop
xor
popf
loope
mov
xor
mov
mov
test
cmp
jns
jmp
xlat
es
(bad)
sbb
clc
add
sti
push
clc
in
inc
mov
and
mov
loopne
sbb
sbb
push
in
push
jl
sbb
xchg
cs
add
xchg
cmp
hlt
sbb
adc
cli
arpl
cmp
jne
mov
xchg
xchg
or
ja
jnp
pop
sub
loopne
dec
pop
xor
pop
dec
mov
fdivr
cmp
mov
call
cmp
jle
xlat
js
ins
jne
cmp
inc
pop
and
xchg
int
enter
xlat
mov
sbb
mov
cld
movs
adc
mov
add
rcl
adc
jg
pop
cwde
call
inc
jns
add
jo
jo
je
xor
push
adc
inc
test
fdivr
popa
sbb
inc
into
jns
out
fld
sti
mov
cs
(bad)
or
fnstcw
jb
test
push
xor
int3
and
adc
pop
(bad)
imul
scas
sub
popa
xchg
shl
jbe
mov
and
dec
sbb
pop
sar
lock
mov
adc
mov
add
dec
and
sub
std
mov
sar
jns
adc
add
mov
sub
and
push
pop
cmp
addr16
cli
sub
sbb
xchg
(bad)
fiadd
mov
jnp
and
call
int3
and
jo
dec
sar
cwde
rcr
or
rol
cmp
jno
sbb
adc
cli
popa
lds
inc
mov
push
mov
pop
adc
sbb
cmp
fmul
movs
out
imul
ror
popa
pop
bts
or
fdivr
and
aad
jmp
sub
pusha
sub
mov
fcomip
and
xchg
pop
mov
sub
cmps
pop
rcr
js
shl
mov
in
mov
pop
aad
inc
dec
ror
jne
aad
loope
and
je
or
repnz
scas
xchg
jo
mov
xor
and
(bad)
cmp
jne
pop
js
scas
mov
test
push
jmp
rcl
jnp
inc
daa
mov
imul
lock
mov
cmp
adc
or
test
jp
inc
scas
out
mov
mul
xchg
lock
add
add
sub
add
add
adc
fadd
jnp
sub
pop
add
sahf
scas
push
fadd
sub
outs
test
fiadd
jbe
mov
xor
(bad)
neg
dec
ds
push
loope
je
cmp
stos
cmp
in
or
cmp
adc
popa
out
cs
sbb
or
push
pop
scas
pop
cmp
retf
fs
loope
in
ins
mov
daa
cmp
add
icebp
cwde
push
iret
mov
push
and
pop
movs
or
call
in
daa
sub
xchg
inc
int3
jmp
mov
scas
sbb
lds
lds
jg
push
and
pop
jo
sub
push
push
lods
push
idiv
or
sbb
jg
xor
pop
fsubr
mov
fimul
mov
cli
or
jg
sub
in
jne
(bad)
(bad)
push
jne
mov
sub
sub
pop
mov
pop
mov
cmp
sbb
adc
pop
jo
jmp
pop
mov
cmp
jnp
adc
xor
je
cmp
or
xor
(bad)
out
in
pop
cmp
push
xor
or
jbe
fldcw
daa
xor
and
xor
shl
mov
or
nop
pop
jg
push
cwde
xor
leave
xchg
xchg
les
pop
test
loopne
xchg
test
jmp
bound
outs
js
sbb
mov
cmp
cmp
mov
fadd
jo
or
cmc
aaa
push
xor
push
push
pop
fldenv
and
push
add
mov
adc
push
das
jmp
ficom
outs
jg
sbb
fcmovb
and
inc
out
cmc
retf
icebp
adc
jne
or
iret
push
mov
rol
sbb
sub
push
ins
stos
mov
lock
lea
lea
sub
in
cmps
adc
pop
mov
jmp
sbb
(bad)
pop
push
xchg
xor
add
adc
adc
outs
sbb
or
cmp
mov
out
outs
cwde
push
je
out
sub
or
inc
add
test
lock
test
sbb
pop
(bad)
mov
sbb
sbb
and
jmp
mov
lods
adc
js
mov
loope
xor
dec
pop
xor
ins
shr
cmp
and
push
pushf
add
cmps
jne
mov
loopne
or
mov
pop
in
adc
adc
sar
rol
push
cmp
sub
rol
push
or
shl
arpl
or
jo
sub
ficomp
push
adc
sub
pop
add
sub
pusha
sub
sbb
jb
push
sub
sub
ffree
inc
popa
push
xchg
xlat
xor
fistp
or
jmp
loop
test
inc
enter
mov
or
(bad)
jae
pop
call
pusha
push
push
sar
sbb
fcom
xor
dec
clc
push
frstor
push
mov
mov
sub
add
nop
pop
mov
add
adc
sub
jecxz
cdq
(bad)
(bad)
imul
retf
mov
and
xchg
aas
push
or
sbb
rcr
add
cmc
pop
or
or
push
pop
sub
xor
pop
out
fdiv
jmp
and
and
add
mov
(bad)
aad
mov
add
push
fldcw
adc
dec
jle
into
rol
fiadd
daa
mov
dec
je
ds
pop
fiadd
inc
stos
hlt
mov
adc
sbb
fnstsw
or
mov
add
add
dec
or
dec
add
inc
mov
cli
lea
mov
sub
adc
shr
xor
add
mov
lea
jo
imul
mov
outs
xchg
inc
pop
lea
mov
mov
or
mov
push
in
inc
or
call
adc
xor
sub
cli
clc
or
test
(bad)
push
in
jmp
dec
jmp
and
not
mov
adc
jmp
mov
lea
dec
mov
pop
xor
movs
and
inc
test
mov
mov
jno
cli
lea
mov
out
pop
add
scas
push
mov
or
push
je
cdq
jg
jg
fdiv
push
shl
sbb
push
jne
adc
cs
call
jo
cmps
or
test
or
and
push
add
or
xor
sbb
or
ror
addr16
mov
and
pop
ins
test
adc
jo
out
repnz
mov
xlat
cli
inc
push
push
clc
push
adc
and
push
scas
pop
lods
rol
dec
adc
lock
hlt
mov
lahf
inc
jne
fild
xchg
(bad)
adc
ds
(bad)
dec
pop
fs
push
into
cmc
push
(bad)
or
pop
inc
fmul
push
hlt
push
daa
sub
das
mov
dec
sbb
mov
fs
scas
mov
adc
cmp
mul
push
mov
fisub
sbb
pop
dec
mov
push
push
aaa
aam
adc
sub
movntq
add
cmc
ds
pusha
push
cs
cmp
xchg
inc
test
xchg
add
sar
das
inc
mov
(bad)
cmp
rol
retf
sub
adc
lock
inc
je
lea
fbstp
push
aas
xor
jne
jne
push
sbb
or
jne
lea
cld
mov
xlat
mov
ins
(bad)
div
push
cmp
lods
xchg
lods
xor
call
out
sti
dec
pop
cmp
cmp
pop
into
je
wrmsr
jo
js
push
xchg
rcr
mov
or
sub
test
mov
mov
xor
loopne
fisttp
sbb
loopne
pop
xor
pop
lock
aaa
js
push
cmp
ds
mov
pop
mov
cmp
xor
add
mov
shl
mov
and
xlat
jp
lods
or
lea
adc
enter
dec
clc
loop
clc
mov
inc
ins
in
cmp
(bad)
dec
pusha
add
or
mov
mov
push
ins
adc
clc
add
shl
mul
shl
jmp
push
mov
inc
sbb
xor
xchg
push
pop
jb
jns
push
pop
jne
jp
pop
and
or
int
je
fs
pop
test
dec
jo
rcl
xchg
test
and
xchg
push
push
pop
push
sub
int3
not
add
cmp
push
jp
push
jmp
xor
mov
xchg
adc
push
dec
pop
das
mov
push
mov
mov
cmp
test
sub
xor
or
sbb
jmp
cmp
sbb
pop
mov
mov
jmp
js
inc
mov
mov
cmp
push
test
dec
sbb
call
jo
scas
xchg
mov
and
mov
fcmovnb
mov
es
xchg
or
jbe
or
and
ret
test
add
sbb
loop
fidiv
cmps
lea
dec
not
and
mov
cmp
lds
xor
add
xlat
fadd
in
inc
push
pop
xor
iret
inc
cmp
int3
or
or
add
lock
dec
and
jnp
aam
mov
sbb
ret
and
loop
pushw
dec
push
xor
and
retf
xchg
repnz
outs
sub
das
jb
dec
or
aad
sahf
or
jo
mov
lds
dec
sbb
lahf
add
call
mov
add
retf
or
(bad)
xchg
adc
lock
out
clc
xchg
test
test
je
je
out
pusha
or
and
sbb
inc
add
jo
lock
and
push
sbb
push
cwde
inc
push
adc
xlat
xlat
pushf
mov
pop
xchg
pop
loopne
jp
or
add
mov
pop
mov
cmp
scas
and
inc
pop
je
scas
cli
sbb
cmp
cmp
cmp
or
push
jns
mov
or
clc
mov
fcomp
push
or
sbb
push
mov
adc
sbb
mov
out
inc
frstor
clc
push
je
scas
adc
fist
sti
sub
push
fsub
out
fcom
cmp
iret
fs
mov
sbb
or
xchg
xchg
adc
inc
ror
adc
cdq
out
jae
pop
sbb
push
fwait
pop
es
ss
(bad)
adc
ret
cmp
inc
test
dec
cmp
xor
or
pop
add
fimul
or
xchg
ins
push
in
add
test
dec
or
fistp
mov
dec
xor
cld
dec
jno
jne
(bad)
sbb
adc
stos
push
lock
cmp
jnp
mov
lds
and
sub
add
cmp
sub
out
ins
pop
xchg
or
inc
adc
or
lahf
mov
push
sub
jmp
pop
mov
or
ret
sub
push
lea
fcmovb
out
sub
push
mov
cwde
jmp
mov
or
sub
sub
clc
and
cs
adc
push
xchg
sub
pop
pop
imul
push
loop
sahf
pop
sub
pop
add
push
fdivr
pop
add
and
mov
loope
or
nop
arpl
fiadd
dec
jae
shl
int
pushf
mov
jp
daa
mov
and
fstp
pop
pop
or
jl
mov
push
adc
cmp
or
ret
sbb
jl
xor
push
jne
out
pop
pop
enter
clc
cmp
add
xchg
fcom
jne
gs
dec
cmp
cs
sub
sbb
ins
ret
jne
inc
cmp
test
adc
xor
not
and
sbb
ucomiss
stos
xchg
sahf
inc
push
in
inc
and
mov
jp
aaa
or
cmp
or
or
ret
or
dec
test
call
inc
adc
push
das
int
lods
popf
fsubr
sbb
mov
or
add
rcr
cwde
xor
imul
jmp
sbb
or
inc
mov
inc
int
and
inc
sbb
(bad)
loope
movs
inc
cmps
xchg
dec
adc
retf
mov
test
sub
mov
js
push
xor
mov
fwait
add
inc
push
shr
call
add
mov
and
mov
xor
ret
test
jne
in
outs
das
mov
mov
shl
mov
pop
inc
mov
(bad)
inc
out
seto
lock
sbb
ins
pop
push
sbb
pop
mov
nop
and
in
imul
fs
jle
or
pop
sub
adc
imul
jo
dec
push
inc
inc
add
fnsave
xor
cli
pop
fdivr
sbb
adc
leave
das
popf
cld
nop
jae
mov
iret
outs
dec
push
push
inc
loopne
cmp
je
js
inc
xor
xchg
jmp
test
jl
inc
mov
out
pop
hlt
push
xor
sbb
or
cmp
cmpxchg
mov
xor
pushf
inc
dec
jne
fcomp
inc
adc
or
int
xlat
jno
lea
aas
xor
mov
pop
mov
or
cmp
ret
push
push
adc
adc
rol
daa
imul
cmp
xchg
lock
sbb
sbb
dec
jmp
nop
adc
mov
dec
fisubr
adc
rcr
add
inc
clc
pop
mov
and
mov
sbb
mov
sub
pop
and
add
or
les
or
cmp
jne
movzx
mov
arpl
sub
jg
in
fwait
std
or
jne
cmp
cs
xchg
call
pop
push
movs
pop
aad
adc
jle
test
push
push
lods
adc
fcom
fild
cmp
dec
add
mov
loope
xor
out
clc
push
xorps
adc
xor
js
push
(bad)
inc
(bad)
stos
fwait
xor
jp
je
jl
xor
inc
push
ss
mov
ret
lock
retf
xor
mov
adc
je
or
fs
clc
ins
outs
mov
int3
movs
or
sbb
cmp
fst
inc
sbb
mov
lock
(bad)
test
or
dec
jo
add
push
pop
or
rol
and
push
xchg
mov
movs
js
ins
push
mov
rol
cdq
jmp
cmc
sub
daa
adc
mov
xchg
xor
loopne
stos
ror
mov
fisubr
cwde
sbb
das
mov
aas
adc
or
mov
inc
sbb
push
or
jb
add
pop
ins
pop
js
pop
mov
add
mov
or
add
lock
cmp
mov
pop
jne
mov
mov
add
cmp
or
add
nop
mov
movs
ins
sbb
cmps
call
push
and
repnz
shl
maskmovq
imul
adc
ja
sub
je
jmp
sub
ins
or
and
mov
mov
lods
cmp
jmp
ja
mov
mov
dec
aam
xor
jo
or
mov
jp
push
mov
xchg
sub
xchg
sbb
jg
daa
or
sbb
or
cmp
cmp
mov
push
stos
je
push
ins
and
pop
xchg
add
test
cmps
xchg
jmp
loop
xlat
pop
cmp
dec
add
stc
add
leave
neg
and
nop
(bad)
adc
fs
add
inc
push
pop
out
sbb
test
cs
fisubr
push
or
pop
call
and
leave
xor
sub
lods
jo
nop
sub
xchg
js
je
xor
xor
sub
sbb
sub
js
jbe
adc
add
xlat
or
mov
adc
xlat
xchg
imul
sub
adc
popa
cmp
shl
push
enter
dec
clc
cs
pop
ret
and
test
pop
popa
dec
jo
pop
mov
or
fisub
mov
in
push
add
pop
jbe
mov
out
sbb
test
jmp
push
mov
push
dec
adc
add
loopne
(bad)
jl
or
lods
jmp
mov
adc
dec
lock
jbe
loopne
enter
int3
adc
mov
jnp
mov
(bad)
test
xchg
push
sti
or
jge
jne
aam
fistp
add
dec
rol
inc
(bad)
adc
enter
popf
ss
imul
mov
out
or
mov
mov
jmp
(bad)
or
or
dec
add
sti
pusha
fsubr
xor
sqrtps
ret
adc
dec
and
pop
cwde
adc
clc
mov
(bad)
mov
dec
adc
leave
jbe
mov
dec
adc
add
xor
sub
inc
and
neg
js
call
inc
adc
cmps
repnz
add
shr
cdq
xor
sub
mov
loop
cld
cmp
sub
mov
rcr
add
clc
pop
repnz
pop
dec
inc
sbb
das
test
jne
xchg
popa
xchg
outs
sub
push
dec
mov
loop
mov
leave
ret
or
les
scas
test
push
pop
adc
adc
pop
adc
push
xchg
pop
cwde
ins
int3
push
jno
push
jmp
push
hlt
sbb
sbb
(bad)
adc
sbb
and
cmp
and
and
lock
adc
test
mov
cmp
push
not
adc
add
sub
sub
lds
xchg
add
retf
adc
add
mov
and
sub
mov
push
adc
push
pop
fiadd
cmp
loope
or
je
aam
inc
sbb
adc
sub
mov
mov
xchg
ficom
mov
adc
ins
jle
ja
and
sub
loopne
add
scas
jmp
add
fbld
cmp
inc
push
sub
cmp
jle
inc
stos
push
imul
cli
(bad)
shr
scas
pop
(bad)
addr16
fsub
loopne
lock
in
test
mov
push
inc
mov
fcom
scas
cmp
inc
add
xor
je
inc
movs
push
jl
pushf
inc
push
pop
bound
xor
inc
inc
push
adc
xor
lahf
add
in
es
movs
or
inc
add
xchg
inc
dec
pop
jbe
jo
dec
rep
and
jmp
sbb
outs
mov
cmp
mov
or
jo
xor
xchg
dec
sbb
or
(bad)
js
and
add
dec
stos
and
cmp
jmp
xchg
fild
push
clc
ins
rol
data16
fiadd
sub
sbb
add
adc
xor
addr16
inc
pop
cmp
jb
setge
inc
icebp
xchg
inc
das
mov
adc
out
outs
mov
movs
cli
daa
je
or
je
push
jmp
and
add
push
inc
imul
loopne
sbb
and
(bad)
jp
mov
ja
pop
lock
or
je
ror
lock
mov
call
add
out
or
sbb
cmp
out
jnp
mov
mov
sbb
mov
pusha
mov
dec
or
inc
lahf
jmp
jmp
or
xlat
popf
lods
xchg
repz
xchg
ret
dec
outs
and
push
int3
jmp
test
pop
jne
outs
(bad)
adc
pushf
xor
sub
rol
jns
adc
aaa
fcomp
js
sar
jns
cmp
fdiv
mov
push
cmps
cmp
jnp
jge
jge
imul
pop
jne
cmp
jge
sbb
ds
pop
mov
clc
xor
xor
iret
pop
dec
sbb
pop
mov
shl
daa
mov
jmp
or
or
cli
sub
jae
call
sbb
mov
push
sub
add
adc
cmp
je
push
pop
push
add
sub
clc
cmps
adc
push
jmp
push
inc
clc
es
and
xor
and
sbb
sub
dec
sti
xor
and
and
pop
and
ins
leave
sbb
push
inc
mov
add
nop
repz
xchg
sbb
xchg
sub
sub
xor
cmp
sbb
mov
jle
or
push
and
mov
cmp
cmp
or
xor
test
ret
xchg
adc
ret
cmps
cmp
ds
xchg
xor
adc
(bad)
fsubr
pop
scas
jnp
push
lods
in
cmp
repnz
push
fs
gs
xchg
scas
lock
jl
icebp
outs
or
inc
xchg
add
lods
jno
sub
or
xchg
and
aaa
ins
inc
fld
js
sahf
cmp
sahf
rol
movs
sub
into
jne
and
in
and
mov
pop
and
push
mov
inc
cld
adc
add
loop
dec
sbb
jo
xor
dec
daa
mov
mov
loop
mov
out
cmp
lods
jo
sti
fcmovb
cmp
pusha
sbb
loop
or
je
outs
mov
dec
sbb
rol
scas
cmp
dec
pop
xor
cmp
sbb
xor
adc
imul
jne
shl
cmp
jmp
inc
or
popf
ja
push
and
or
jge
xchg
push
data16
jb
jmp
cwde
sbb
or
add
test
outs
out
or
clc
sbb
mov
test
dec
xchg
jmp
xchg
test
pop
loopne
std
jnp
je
mov
jmp
or
add
mov
jl
and
shr
je
lock
std
ja
jmp
jmp
ss
mov
dec
jmp
add
sbb
jne
movs
lock
cmp
fcom
pop
and
fs
push
nop
pop
cdq
loop
fistp
or
int3
lock
xor
xlat
and
ror
dec
jne
das
and
dec
pop
pop
add
frstor
pusha
fiadd
and
and
mov
or
pop
jo
int
push
dec
(bad)
sahf
scas
adc
push
sti
sub
movs
xchg
sbb
movs
jb
dec
mov
call
mov
jmp
push
sbb
call
push
xchg
jbe
cdq
mov
retf
pop
mov
xchg
cmp
push
cmp
cwde
dec
push
pop
cmp
sbb
xchg
cmp
push
adc
xchg
add
fcomp
jo
add
in
in
sbb
add
loope
or
(bad)
cmp
enter
outs
mov
mov
or
add
imul
jnp
cmp
jno
mov
into
pop
add
scas
jb
add
nop
dec
sub
aad
clc
sub
lds
es
jecxz
js
dec
stos
out
sub
push
dec
fmul
ss
adc
movs
adc
dec
cmp
pop
add
rcl
xor
sbb
dec
cmc
(bad)
dec
jnp
adc
sbb
lea
push
inc
or
mov
mov
dec
fstp
xor
pop
push
stc
or
xor
shl
mov
pop
sub
jb
jo
mov
inc
pop
cmp
adc
repnz
icebp
pop
dec
mov
nop
fisttp
add
push
sbb
jg
sub
push
mov
push
xchg
cs
call
inc
push
call
mov
xchg
ror
ins
and
mov
adc
push
and
jmp
loop
ins
adc
in
mov
push
and
int3
imul
leave
cs
push
push
xchg
inc
mov
adc
sbb
or
fst
push
je
cmp
push
xor
push
lock
aas
stc
ret
xor
aaa
aas
xor
jo
jne
ss
push
cs
and
mov
inc
sti
or
test
in
sub
pop
and
jp
xchg
addr16
arpl
or
add
repnz
jmp
div
pop
loopne
cld
jne
cmp
sub
ins
or
sbb
call
jne
dec
outs
sub
cld
jo
lock
cmp
sbb
mov
pop
lock
cmp
sbb
and
out
add
ins
adc
adc
shr
fadd
les
push
daa
xor
xlat
cmps
addr16
dec
loopne
rcl
test
adc
lea
cmp
pop
jmp
test
ror
je
push
xor
jecxz
sbb
or
cwde
inc
retf
loopne
test
aaa
out
das
shr
xlat
add
ror
mov
mov
inc
leave
adc
push
jb
scas
and
mov
daa
adc
push
push
sbb
cli
sub
outs
pop
adc
imul
(bad)
mov
push
push
clc
inc
mov
test
or
ret
push
loope
sub
sbb
(bad)
cmps
adc
mov
daa
or
inc
and
aas
xor
movzx
data16
out
sub
ror
xor
and
addr16
loopne
movs
mov
in
cmc
and
pop
push
or
sub
aaa
add
ret
mov
push
jge
sub
push
xchg
out
push
clc
xchg
mov
jae
xor
pop
push
jl
pop
out
clc
fld
ret
das
sbb
cmp
je
adc
sbb
mov
pop
sbb
push
or
ret
jne
xchg
ss
out
xor
fadd
arpl
dec
sbb
push
rol
mov
mov
pop
adc
sub
xchg
xchg
stos
push
jmp
sbb
iret
pop
or
jmp
mov
cmp
jmp
loop
idiv
movs
adc
test
and
add
sar
scas
ja
adc
inc
mov
xchg
mov
sub
inc
jne
call
clc
movs
scas
push
stos
add
mov
jne
mov
loop
xor
(bad)
cdq
sahf
mov
(bad)
cmp
cmc
dec
and
je
mov
mov
adc
mov
into
mov
inc
pop
add
jnp
cwde
pop
jmp
push
pop
mov
cmp
xor
ss
arpl
lods
out
adc
stos
sahf
and
push
sub
jl
inc
(bad)
pop
push
xor
inc
outs
cmp
or
adc
in
mov
jne
(bad)
(bad)
pop
push
dec
fcmovbe
mov
out
sub
xor
add
out
cmp
sub
stc
xor
mov
sbb
dec
je
jmp
mov
jmp
adc
ret
add
fdiv
adc
cdq
fcomp
mov
ret
lods
test
or
out
jmp
add
jnp
das
jne
pop
inc
sub
outs
cs
add
outs
add
mov
add
scas
js
add
jmp
mov
or
jo
test
mov
scas
daa
jb
push
icebp
mov
sub
sub
fsubr
leave
pop
bound
test
cld
jmp
sub
pop
and
shl
cmp
out
or
in
fisttp
inc
pop
pop
(bad)
lods
aad
and
out
adc
call
daa
cmp
nop
add
add
add
arpl
or
xchg
test
sbb
rcl
rcl
pop
dec
lea
scas
xchg
pop
movs
loop
push
push
ret
stos
mov
cmps
adc
or
rcl
mov
xchg
sbb
fs
pop
mov
cmp
push
jecxz
or
jb
outs
mul
sbb
adc
dec
sbb
xchg
dec
push
mov
mov
xchg
dec
jmp
out
pop
je
loopne
(bad)
sbb
add
pop
lods
jge
stos
stos
mov
mov
pop
rcl
push
inc
adc
push
outs
pop
and
or
cmp
or
or
ret
sub
mov
add
pop
dec
add
inc
cmps
call
ror
stos
xor
jmp
push
add
or
jo
jb
sti
lds
jne
or
cmp
and
cmp
sbb
sub
jp
call
push
in
or
nop
pop
pop
idiv
add
mov
push
push
or
lods
push
arpl
dec
popa
test
in
sbb
imul
xchg
aam
pop
jo
(bad)
cmp
test
repnz
aam
xor
(bad)
call
cld
ins
outs
lods
out
push
jmp
outs
ret
fdivr
mov
fild
addr16
in
mov
(bad)
push
fldcw
cmp
daa
xor
and
pop
inc
je
mov
leave
fadd
adc
(bad)
sbb
cmp
je
ss
lock
xchg
pusha
shl
test
or
add
or
xchg
pop
push
bound
into
sbb
mov
jp
cwde
stos
adc
jg
pop
retf
adc
call
jno
pop
add
push
addr16
outs
dec
add
pop
cmp
jge
inc
inc
add
dec
into
mov
sub
inc
ins
cmp
in
ss
fwait
push
add
call
sub
pop
inc
std
call
pop
inc
ror
adc
in
xor
xor
int
cmc
push
mov
cs
js
inc
sub
sbb
pop
push
mov
cmp
jb
idiv
cld
xchg
add
adc
in
xor
sbb
and
push
mov
stos
xchg
jb
and
push
(bad)
inc
push
sbb
xor
push
cld
mov
dec
mov
dec
fmul
gs
(bad)
push
or
pop
add
and
push
adc
ror
inc
and
pop
ins
imul
scas
pop
inc
sbb
into
jmp
in
and
or
pop
neg
fucomip
sbb
not
and
mov
xor
mov
add
dec
je
push
xchg
sbb
inc
jo
cmp
fcom
test
jmp
xchg
jns
push
ret
aam
pop
ret
push
sar
jecxz
iret
loopne
cdq
add
jl
ja
mov
adc
scas
jle
push
clc
xchg
or
scas
cmp
loopne
adc
sti
dec
adc
dec
push
ins
ds
cld
daa
xlat
add
(bad)
nop
cmp
in
aas
mov
aas
cmp
mov
mov
aas
sub
(bad)
add
jle
sub
inc
or
lock
movs
cdq
pop
lods
sbb
jg
sbb
or
or
hlt
jge
xor
push
inc
push
not
sahf
xor
loopne
fiadd
xchg
addr16
je
push
and
sub
movs
xchg
sub
dec
jne
ja
sbb
clc
mov
jns
ins
and
mov
test
jl
mov
add
mov
enter
xor
or
sbb
dec
cs
add
(bad)
fisttp
cmc
and
mov
lds
movzx
mov
sbb
sbb
push
adc
mov
push
dec
sub
add
inc
add
test
je
rcl
dec
(bad)
mov
jmp
cmp
push
or
icebp
xor
xchg
xor
push
ss
jmp
hlt
aam
add
adc
or
out
test
or
jge
je
aam
push
xor
jbe
fs
into
adc
scas
out
mov
mov
mov
cmp
jb
jge
adc
dec
mov
aam
sub
xchg
xor
xchg
mov
inc
add
add
jecxz
add
mov
retf
cdq
cmps
ret
inc
es
ds
js
inc
mov
fld
push
push
pop
(bad)
data16
mov
es
clc
fild
cmp
leave
bt
setb
pusha
sti
cdq
jle
or
call
or
pop
xor
xchg
sbb
daa
xchg
test
dec
push
ins
xor
stos
fist
mov
repnz
jo
fimul
push
and
(bad)
sbb
aaa
inc
push
push
add
fadd
push
scas
sub
xor
aas
xlat
cmp
push
xor
cmp
loopne
clc
dec
test
jl
inc
xor
pusha
out
scas
lods
add
aad
rcr
mov
xchg
inc
dec
jne
pop
repnz
and
jge
mov
movs
imul
fmul
sbb
xor
pop
or
or
push
jg
ficom
nop
test
add
psraw
adc
retf
push
or
xor
jl
mov
jle
add
ins
mov
rcl
pop
xlat
jle
push
lds
ret
inc
xor
bound
push
popf
push
scas
(bad)
xchg
xor
push
popf
je
push
sub
adc
sbb
leave
call
out
popf
cld
or
adc
push
movs
push
ret
adc
gs
pop
inc
stos
add
mov
push
xlat
sbb
jo
lahf
mov
ret
jne
sahf
inc
mov
or
or
xchg
jl
popa
hlt
loope
jg
mov
mov
dec
sbb
dec
add
add
cld
and
mov
pop
sub
or
sub
scas
scas
add
push
imul
(bad)
daa
mov
sti
jne
imul
xchg
fist
fs
push
mov
pop
sti
or
inc
aas
je
pop
push
sub
into
out
xchg
call
lock
inc
dec
rcr
adc
fcmove
in
adc
fs
adc
cmps
jbe
lds
out
pop
xchg
jecxz
inc
inc
or
xchg
or
xchg
mov
sub
adc
jo
loopne
push
push
fnsave
jmp
mov
add
xor
push
pop
add
cmps
inc
sub
cmp
das
xor
mov
or
lahf
jg
fcmovb
xchg
add
test
xor
ins
data16
add
je
outs
add
push
adc
cmp
or
and
setne
pop
and
lods
dec
mov
enter
adc
dec
shr
sbb
and
(bad)
clc
test
test
adc
and
loopne
dec
sub
xor
scas
mov
nop
loop
xchg
lds
pop
cmp
or
retf
mov
sub
cli
out
adc
jmp
nop
jecxz
popf
adc
mov
fwait
cmps
sbb
mov
lods
xor
add
sub
lock
sbb
mov
sub
dec
dec
jmp
push
out
sbb
sbb
fs
sbb
scas
retf
pop
pusha
sub
retf
add
and
enter
add
clc
push
push
shl
daa
lock
rol
mul
cmp
popf
mov
xchg
and
popa
and
mov
push
cmp
jge
test
cli
or
inc
or
pop
pusha
pop
mov
jae
pop
cdq
pop
fnstenv
add
mov
in
call
cmp
sbb
xor
cmp
xor
add
je
data16
ss
iret
jmp
cmp
cmp
cmp
xor
cmp
cmp
daa
xor
and
enter
jbe
dec
cmp
adc
sbb
dec
xchg
out
xor
xor
je
xor
xor
pushf
dec
cmp
pop
xor
inc
adc
pushf
adc
pop
xor
and
sub
cmp
jmp
push
or
push
sbb
add
aad
mov
in
mov
jl
push
inc
lea
jmp
cmp
mov
mov
stc
pop
mov
test
inc
cld
test
jle
adc
add
dec
ja
and
xor
ret
pop
cmovge
dec
dec
rcr
inc
mov
fisttp
jg
push
pusha
push
or
dec
dec
mov
dec
ror
inc
pop
in
and
pusha
call
jo
inc
jl
sbb
out
in
push
hlt
shl
inc
ins
js
gs
cmps
js
lods
rol
iret
in
imul
dec
out
push
(bad)
lea
xor
ss
dec
jno
mov
mov
add
sbb
mov
jne
and
cmp
add
sbb
xor
mov
cdq
(bad)
add
(bad)
call
xor
test
aaa
ins
pop
(bad)
loopne
cmp
jl
or
jg
cmp
sub
call
shl
mov
repnz
mov
pop
fmul
iret
lds
pop
mov
jae
(bad)
nop
add
ret
fsubr
je
jmp
jae
mov
mov
dec
repnz
mov
cmp
je
push
push
mov
mov
mov
mov
push
fcmovnu
sti
cmp
jne
adc
mov
jne
mov
mov
cmp
push
shr
xchg
stc
clc
nop
jne
enter
and
and
and
mov
push
sahf
sub
ins
push
xchg
or
sti
cmp
jne
das
clc
xchg
push
mov
mov
inc
pushf
fsub
aaa
push
aaa
sub
pop
(bad)
or
pop
ins
shl
xlat
(bad)
stc
jecxz
or
jle
test
xor
mov
mov
shr
mov
scas
add
pusha
cld
cs
adc
dec
cmp
inc
push
inc
call
ja
push
or
test
xor
dec
inc
inc
cmp
dec
cmp
pop
lock
sbb
dec
xor
inc
jl
xlat
retfw
xor
ret
add
xchg
call
add
mov
scas
jge
loope
jnp
pop
fs
test
sbb
fimul
cmp
sbb
adc
fsubr
or
(bad)
les
fsub
aas
push
test
rol
test
jo
imul
xchg
jo
mov
jae
jne
cmp
sbb
ss
add
or
cmp
sbb
pusha
mov
adc
jmp
repnz
jno
pop
jle
pusha
inc
adc
jl
jmp
mov
add
lock
neg
mov
scas
ret
loope
inc
cmp
inc
sub
loopne
mov
ud1
sub
aam
push
add
jae
push
std
stos
cmp
add
pop
add
or
xlat
in
mov
sbb
sbb
push
push
ins
push
xlat
add
sub
inc
sub
dec
cs
out
fild
bound
popa
es
add
push
fscale
int
xchg
dec
mov
and
add
add
int3
pop
call
shr
ror
bound
retf
cmp
push
sbb
ret
cmc
dec
cmp
mov
shl
mov
das
cmp
aam
outs
pushf
shl
push
mov
add
fldenv
fbld
(bad)
jmp
aaa
add
push
fisubr
jne
mov
jmp
mov
or
aad
rcr
loop
fild
and
shr
popf
pop
div
clc
xchg
fiadd
sbb
clc
add
ret
loopne
adc
daa
sub
call
and
xor
lods
mov
mov
or
jle
ret
clc
push
movzx
or
sbb
loopne
and
shr
adc
mov
jecxz
movs
xor
inc
iret
mov
pusha
push
lahf
sub
add
jle
sbb
mov
movs
and
and
add
mov
xchg
ja
rcl
pop
or
outs
adc
or
xchg
dec
push
push
pop
pop
or
and
cdq
jg
dec
ins
pop
and
pop
test
inc
mov
cmp
lds
xchg
add
lods
sbb
mov
jecxz
push
cmp
loopne
xchg
inc
mov
jne
xor
sub
dec
pop
inc
inc
std
sub
inc
jmp
push
pop
cmc
push
repnz
and
pop
lock
and
sub
data16
mov
sahf
ja
xor
xor
xor
arpl
out
xor
mov
loopne
cmp
out
fmul
jbe
cld
js
scas
daa
fcmovnu
fcmovu
movs
daa
fwait
xchg
mov
dec
test
hlt
push
clc
int3
test
int3
mov
enter
jo
ror
adc
call
jl
fst
jmp
push
call
push
mov
cld
dec
out
addr16
test
jle
ret
and
pop
iret
imul
cli
repnz
sahf
push
push
and
sub
push
aas
dec
jmp
jge
mov
ficom
cmp
or
sbb
pop
lahf
sbb
fwait
cdq
out
xor
mov
add
sbb
scas
or
add
sbb
mov
push
jo
mov
jp
xor
or
inc
mov
dec
mov
mov
push
js
mov
inc
lock
jl
dec
dec
dec
push
ret
mov
xor
jne
cmp
jne
cld
bound
fcomp
xor
pop
xor
mov
add
lds
inc
(bad)
fcmovne
rol
sbb
xor
inc
inc
push
lock
jmp
adc
(bad)
sbb
push
sub
jbe
out
add
jmp
adc
jo
or
mov
loop
les
test
call
je
or
jne
hlt
sub
pop
push
bnd
lock
push
jecxz
(bad)
int
(bad)
je
jae
jmp
mov
push
loop
repz
add
adc
sbb
mov
jmp
jg
or
jmp
sub
cmp
test
inc
daa
pop
add
jmp
sbb
pusha
jno
sbb
jg
add
pop
(bad)
mov
cmp
push
daa
hlt
repz
ror
cs
(bad)
das
pop
sahf
inc
ins
cmp
jne
xor
cmp
es
adc
jmp
jbe
retf
jl
ja
mov
sbb
fisubr
jnp
arpl
xchg
inc
push
mov
(bad)
pusha
mov
jmp
pop
hlt
je
cmp
inc
sar
test
jge
adc
daa
mov
(bad)
imul
(bad)
cmp
aas
call
sub
js
cld
sub
push
addr16
popf
xor
call
jg
push
shl
mov
mov
gs
lahf
(bad)
lock
cmp
xor
fnop
lock
scas
mov
ins
inc
or
dec
jmp
fiadd
dec
add
push
ret
(bad)
in
scas
or
pop
pop
loop
clc
push
bound
push
cmp
adc
add
scas
int3
js
cmps
adc
enter
jle
clc
in
(bad)
add
sub
outs
or
les
inc
and
push
aas
mov
or
jle
xor
in
outs
std
aad
push
xor
enter
nop
movs
sub
in
out
xchg
mov
out
xchg
aam
cmp
out
or
imul
xor
push
xchg
jne
xor
nop
push
imul
jmp
and
rol
sub
pop
call
loop
mov
dec
push
push
mov
jb
cld
clc
ror
xor
push
out
inc
daa
pusha
(bad)
(bad)
popa
enter
pop
das
loopne
add
mov
pusha
add
and
jne
xor
add
mov
sbb
inc
test
outs
push
jmp
movs
xchg
mov
xor
adc
lock
lahf
sahf
mov
xor
not
stos
cdq
ins
je
sbb
cwde
fabs
and
xor
ins
xchg
inc
lock
fadd
sti
test
adc
lods
cmp
xchg
xchg
cmc
lahf
mov
adc
sub
pusha
ret
pop
fdiv
add
lods
clc
cmp
clc
adc
js
out
aaa
repnz
das
mov
movs
bound
sub
ret
inc
add
loopne
push
neg
jne
pop
or
in
sbb
or
push
mov
push
fstp
xor
jne
mov
ret
push
push
jae
mov
(bad)
arpl
adc
cli
lds
push
jp
cmp
jbe
push
out
or
cmp
loop
push
es
mov
sub
sbb
das
mov
adc
dec
or
dec
ins
mov
mov
or
call
scas
mov
(bad)
popf
sbb
cmp
pop
inc
sbb
jo
pop
sub
add
popf
je
jmp
mov
xor
bound
jp
les
loope
fdiv
and
and
sbb
clc
mov
test
xor
das
sbb
cmp
jo
cwde
inc
nop
sub
pop
xor
popa
cmp
cmc
sbb
jp
movs
out
jge
ins
dec
push
jne
pop
lods
cmp
test
sbb
sbb
push
push
push
xor
and
and
das
jne
push
sbb
enter
ud2
jne
(bad)
call
adc
mov
out
ss
push
mov
mov
push
ror
ror
inc
xchg
ror
clc
movzx
loopne
fcomp
push
push
(bad)
or
ret
xor
js
cmps
out
inc
push
cli
dec
pop
dec
std
cmps
add
mov
dec
scas
and
xor
sbb
inc
jne
mov
xor
aam
jmp
clc
push
xor
nop
enter
rol
cmp
push
scas
xchg
mov
outs
ret
cmc
and
push
add
xor
add
imul
xchg
int3
add
fiadd
mov
jge
jmp
jmp
or
(bad)
jne
or
sbb
add
int3
ins
sbb
push
sbb
and
sub
(bad)
std
hlt
add
cdq
gs
js
cmp
pusha
clc
ds
enter
retf
add
mov
or
add
stos
mov
mov
xchg
push
push
hlt
daa
es
mov
adc
(bad)
jo
mov
or
out
mov
ret
rol
jmp
or
xchg
fdivr
or
je
and
hlt
ret
pusha
fld
add
or
xchg
add
stc
mov
add
cs
and
fistp
lock
test
adc
mov
cmp
cmp
pop
rcl
add
xor
xor
(bad)
pop
xor
scas
shr
mov
mov
loopne
cmp
adc
push
bound
enter
xchg
hlt
push
dec
mov
push
cmp
mov
add
out
sub
xor
jle
or
dec
jae
or
mov
push
sbb
out
adc
mov
jp
xchg
push
push
ss
jmp
cmps
sbb
in
adc
pop
cmp
adc
inc
adc
(bad)
pop
inc
pop
jmp
(bad)
push
popa
neg
xchg
pushf
daa
data16
std
adc
lea
sub
dec
xchg
cdq
add
cmp
(bad)
or
je
data16
ins
dec
pushf
push
mov
and
jle
push
jecxz
rol
sbb
mov
pop
ins
int
lock
cld
inc
outs
push
outs
or
sbb
(bad)
jmp
fimul
hlt
or
sti
fnsave
jge
xor
adc
jnp
dec
jo
sti
std
dec
dec
push
inc
add
add
xchg
loopne
mov
fadd
(bad)
lods
mov
packssdw
or
cs
ds
push
push
dec
jg
inc
sbb
xor
dec
sbb
xchg
scas
sub
add
iret
pop
pushf
jb
adc
jae
test
jl
pop
pop
dec
iret
imul
shl
sahf
dec
test
test
sbb
out
mov
push
fld
sbb
cmp
enter
xchg
fsub
add
or
shl
out
add
mov
xchg
mov
dec
push
xchg
sbb
in
push
addr16
add
cld
mov
inc
adc
jno
loopne
jle
add
lea
lock
add
add
movs
mov
fs
sub
fimul
adc
test
stos
xor
shr
retf
add
adc
or
(bad)
xlat
or
add
ins
xor
mov
addr16
imul
ds
sbb
movs
test
push
and
or
pop
mov
fsubr
js
inc
inc
mov
loope
pop
add
pop
xor
or
cmp
fcmovnu
jo
xor
(bad)
hlt
or
out
retf
xor
les
into
add
pop
or
test
sar
jns
fsub
and
adc
cmp
retf
out
inc
and
cmp
add
mov
outs
popa
or
mov
stos
js
cmp
sbb
mov
cmp
rol
sbb
out
push
aas
inc
mov
push
push
sub
add
xor
mov
push
sahf
or
and
repnz
cmp
ss
mov
xor
sbb
lock
enter
sbb
rcr
leave
loope
nop
ja
sub
stc
add
adc
aam
test
sbb
repnz
cmc
imul
sbb
push
pop
jne
xor
mov
adc
rcr
mov
cmp
adc
xor
mov
sbb
mov
jo
je
xchg
cdq
cmps
mov
mov
xor
sbb
or
cmps
jbe
pop
jmp
ret
out
aaa
pop
or
dec
sti
sti
add
sbb
cmp
adc
lods
cs
inc
pop
int3
sub
jmp
and
stos
loope
mov
jae
push
ja
(bad)
fidivr
push
push
and
fidiv
test
adc
addr16
pop
test
aam
push
cmp
mov
rcr
dec
inc
mov
push
jmp
stc
or
sbb
aaa
or
push
js
es
js
ins
or
pusha
cmp
mov
mov
push
push
jo
cs
nop
push
cmps
ret
jle
je
push
test
sbb
adc
xor
js
jns
cmp
add
stos
cmps
ficomp
jg
and
and
push
xchg
fsub
jp
push
and
int
xor
cmp
jmp
pop
pop
aaa
jmp
fsubr
mov
or
add
shl
ins
and
push
pusha
sub
call
and
and
push
xor
lods
in
xor
cmps
xchg
cmp
(bad)
in
mov
xchg
jg
mov
mov
sub
sbb
bound
inc
cmp
in
xchg
ja
cmp
jne
mov
dec
cmp
sub
lock
dec
jne
rcl
mov
fsubr
or
mov
xor
or
fld
sub
pusha
pop
push
dec
adc
push
das
test
push
test
xor
jmp
ins
das
mov
cwde
adc
movs
jle
adc
repz
jmp
shl
nop
inc
aad
jne
jg
inc
(bad)
cmp
sub
cmp
sar
lods
je
leave
jne
cmp
je
add
rol
mov
popa
pop
pop
les
out
add
push
aaa
add
punpcklwd
mov
mov
int
lods
mov
call
sub
dec
xor
inc
xchg
jmp
adc
or
pop
cmp
add
fs
or
je
mov
pop
pop
inc
cli
cmp
mov
(bad)
in
loopne
movs
cmp
jge
jp
aad
xor
xchg
jns
sub
add
jmp
scas
test
pop
in
cmp
sub
jmp
std
int3
dec
and
hlt
enter
stos
shr
mov
sub
mov
inc
and
or
iret
dec
rcl
inc
sub
inc
(bad)
push
add
repz
sbb
arpl
pop
aas
repz
or
aad
jle
sbb
or
and
je
outs
int
pop
inc
inc
jb
nop
mov
mov
jecxz
cmps
lods
jg
js
cmp
sbb
cmp
pop
cli
fsubr
fs
adc
jne
mov
mov
sub
or
outs
xchg
loopne
xor
jne
daa
arpl
cmp
xchg
jbe
jne
fist
sbb
sbb
mov
(bad)
orps
sbb
inc
mov
and
mov
mov
cld
mov
jo
adc
mov
mov
pushf
test
push
add
mov
pop
lock
adc
push
cwde
jg
inc
retf
inc
jmp
inc
add
inc
ins
inc
call
adc
sbb
cs
add
mov
(bad)
dec
cmp
mov
mov
pusha
test
xchg
sbb
or
imul
mov
lahf
adc
mov
mov
rcl
ss
add
mov
jle
xchg
sahf
mov
push
jecxz
add
popa
sub
jg
mov
call
stos
or
(bad)
jmp
cmp
pop
scas
popf
stc
xchg
adc
xchg
cmp
pop
adc
(bad)
stos
test
dec
push
push
jmp
adc
adc
xchg
push
mov
push
test
lods
dec
cmp
stos
(bad)
stos
daa
in
pop
(bad)
xchg
jmp
lods
sar
pop
xchg
inc
in
sbb
or
push
adc
in
imul
jo
adc
ss
push
pop
call
xlat
adc
cmp
and
xor
xchg
cmp
add
dec
mov
jb
mov
pop
sti
xchg
imul
sub
jge
push
out
adc
idiv
cmp
mov
sub
adc
out
rcr
jmp
dec
fldcw
sbb
or
adc
push
and
fwait
push
stos
pop
fcom
sub
out
sti
adc
mov
sbb
push
std
push
and
add
addr16
mov
jmp
pop
xor
dec
sbb
pusha
rol
ds
mov
fimul
rcr
enter
mov
jge
push
add
jmp
mov
mov
fisttp
ins
int
pop
fnsave
add
sti
lock
movs
add
rol
or
inc
sbb
adc
sub
pushaw
ret
xchg
mov
cdq
sub
jnp
fucomp
gs
dec
dec
add
dec
xchg
or
int3
les
cmp
rol
leave
ins
xor
add
je
mov
loope
and
inc
lock
xchg
mov
cmp
xchg
cdq
xchg
test
xor
jle
stos
jbe
ret
or
mov
push
rol
mov
das
sub
arpl
push
add
je
rcr
test
dec
add
mov
inc
mov
or
fwait
or
lods
xor
mov
xor
add
into
adc
cli
xchg
mov
sub
loopne
clts
cmp
mov
sub
cmps
add
xchg
bnd
outs
cmp
in
in
(bad)
sbb
xchg
and
sbb
sbb
les
mov
xor
ds
mov
xor
jo
add
stos
xor
sbb
push
mov
adc
dec
pop
pop
fwait
inc
adc
adc
ds
sbb
xchg
pop
or
pop
jb
xchg
or
jmp
lock
(bad)
test
sub
out
and
jmp
mov
sbb
sub
sub
mov
in
mov
push
jg
xchg
ins
loopne
sbb
or
jo
cmp
pop
xchg
sbb
jmp
push
push
add
pop
xlat
lds
mov
mov
jo
push
inc
test
rcl
das
in
jmp
xchg
jne
aas
shl
pop
fdivr
pushf
aam
pop
push
jp
mov
hlt
inc
fidivr
xchg
pusha
aam
xchg
mov
into
mov
loope
arpl
test
sbb
push
sbb
and
inc
or
push
ret
in
es
je
lock
imul
mov
or
push
(bad)
sub
lea
push
loop
int3
call
into
stos
imul
or
push
mov
mov
pop
adc
(bad)
rcl
adc
outs
pop
outs
xchg
mov
and
adc
xor
jg
xor
ret
push
aas
lahf
mov
jp
mov
fldenv
mov
cmc
xchg
fld
sub
inc
or
daa
jl
(bad)
jmp
icebp
or
jnp
cwde
or
pop
(bad)
pop
adc
mov
(bad)
sub
mov
mov
add
js
pop
push
sti
das
cs
sub
ins
and
sub
out
push
or
adc
pusha
or
mov
test
sbb
jmp
jae
adc
imul
xchg
adc
pop
push
adc
rcl
popa
jo
or
and
add
sbb
or
ret
push
jne
or
xor
pop
sbb
jle
push
test
and
cmp
cdq
sbb
shl
adc
push
and
or
mov
and
jmp
daa
adc
xchg
push
dec
jge
retf
and
imul
lock
adc
sub
or
push
arpl
mov
cmp
(bad)
int
sysexit
lock
aas
add
mov
sub
inc
btr
mov
mov
call
or
das
sbb
into
dec
(bad)
call
or
cmp
je
push
addr16
mov
test
fmul
dec
ret
enter
mov
mov
nop
loop
sbb
in
dec
sbb
sbb
jge
xor
mov
rol
mov
or
xchg
pop
sub
movlhps
cmp
out
pop
inc
(bad)
fisttp
push
repz
les
mov
fcom
mov
mov
mov
push
xor
enter
push
push
mov
pushf
lods
je
dec
std
and
(bad)
sub
adc
cmp
(bad)
push
(bad)
rcl
sub
mov
call
inc
fstp
mov
push
mov
test
sub
mov
(bad)
out
push
ror
mov
test
xor
fmul
cwde
cmp
jmp
sub
pop
push
nop
clc
(bad)
xchg
mov
bound
jne
mov
pop
cmp
pop
adc
mov
cmp
adc
movs
fisubr
fcomp
jle
mov
cmp
je
adc
cmp
add
fcomp
jmp
jg
mov
sbb
test
jne
imul
fld1
jmp
add
lock
ret
jmp
push
add
fstp
sbb
inc
mov
add
mov
xchg
fidiv
add
popa
mov
jmp
cmp
pop
daa
gs
xchg
push
fbld
mov
add
inc
add
sbb
xor
add
pop
pop
pop
icebp
push
je
call
call
sbb
mov
adc
addr16
shl
add
xchg
mov
cli
(bad)
fadd
push
pop
stos
fidivr
mov
push
sar
push
jo
cmp
loopne
mov
push
loopne
fdiv
mov
rol
or
jae
add
mov
xlat
push
outs
cmp
or
test
sub
lea
in
lds
ficomp
jno
sbb
push
mov
fst
mov
cmp
mov
cmp
cmp
pop
dec
sbb
(bad)
jg
jl
call
mov
push
or
ror
repnz
hlt
fsubr
lea
sbb
push
inc
dec
jne
jmp
mov
fiadd
retf
and
or
inc
or
fwait
add
push
outs
fdiv
and
ret
jnp
loope
cmp
mov
das
dec
je
inc
and
xor
sahf
add
push
ss
push
cmp
dec
xlat
ins
dec
inc
adc
inc
adc
inc
(bad)
or
sbb
jg
adc
adc
and
mov
mov
or
sub
pop
jmp
(bad)
mov
mul
cmp
and
outs
xchg
sbb
in
fld
mov
loopne
or
cs
(bad)
jmp
mov
pop
sub
(bad)
jmp
aam
test
xor
sbb
inc
mov
sbb
adc
mov
arpl
lea
push
xchg
cmp
mov
fsubr
sub
pusha
push
int
xchg
dec
mov
loopne
ins
push
push
or
ds
in
dec
nop
retf
aad
iret
ret
pop
add
pop
sub
inc
jg
fidivr
add
mov
cmps
jmp
fs
jmp
dec
call
std
fadd
lock
mov
add
dec
jne
not
in
cmp
and
sub
mov
call
xchg
dec
sbb
ret
xchg
xchg
xor
loopne
lea
sahf
jl
or
int3
mov
fcomip
xor
push
push
mov
pop
call
stos
sub
cmps
fcom
adc
ds
outs
cmp
dec
mov
dec
xor
call
mov
cmp
aad
bound
js
mov
sbb
sbb
pop
fild
pop
mov
pop
and
or
mov
pop
or
jbe
(bad)
sub
mov
in
fwait
xor
inc
pop
mov
sub
jmp
dec
push
dec
sub
sub
mov
fist
inc
xor
adc
adc
or
cwde
data16
jmp
push
sbb
(bad)
jmp
sbb
inc
lds
and
mov
xchg
mov
and
mov
xchg
inc
adc
or
ret
or
add
push
sbb
add
add
loop
outs
test
dec
fs
jl
repnz
pop
frstor
xchg
jae
mov
xchg
mov
sbb
ins
mov
leave
sub
push
sbb
push
mov
adc
mov
idiv
(bad)
out
js
adc
or
lock
push
and
xor
or
push
xchg
fcom
xlat
add
inc
ror
and
or
in
add
and
ins
xor
push
sbb
jbe
cmp
lock
cmps
stos
inc
pusha
and
scas
xchg
xor
ja
or
mov
xor
mov
sub
(bad)
jmp
nop
add
push
push
lock
stos
es
je
jmp
cmp
xchg
xlat
pop
inc
call
adc
cmp
movs
xlat
jne
cmp
mov
mov
xor
xchg
or
jmp
je
add
ror
scas
cwde
jmp
lahf
fs
pushf
lock
jo
xchg
add
das
test
ret
push
daa
cli
test
ffreep
mov
lock
or
jbe
xchg
cmp
add
push
push
lock
mov
adc
dec
mov
daa
call
jbe
inc
mov
mov
inc
cmps
dec
cmps
xor
popa
xor
std
es
shr
ins
xor
sub
sar
fild
sti
add
add
retf
push
mov
push
xor
cmp
pop
add
loopne
or
inc
into
clc
in
xchg
cld
jb
push
push
or
xchg
push
push
push
and
sbb
or
add
and
call
sbb
cmps
inc
mov
and
mov
stos
aad
pushf
mov
add
xchg
adc
test
xor
repnz
in
mov
adc
push
mov
fiadd
jmp
loope
pop
data16
xchg
xchg
(bad)
cmp
cs
(bad)
cs
push
mov
sbb
push
fwait
sbb
adc
pcmpgtd
loope
jno
cmp
pop
xor
sbb
pop
dec
retf
jo
(bad)
sar
nop
add
ror
add
push
pop
fmul
ret
jmp
js
add
dec
mov
cli
pop
mov
mov
(bad)
push
js
mov
or
inc
sbb
js
add
add
sub
clc
inc
cmp
cmp
add
adc
mov
sub
lock
dec
int3
or
mov
mov
ret
or
stos
repnz
lea
mov
pusha
push
fdiv
loop
fs
lods
jne
test
or
fisttp
cmp
add
push
movzx
push
push
fisub
xor
stos
dec
enter
aas
or
mov
hlt
mov
mov
or
xchg
push
into
push
xchg
test
add
lock
in
cli
and
xor
je
aam
sub
xor
cli
xor
cmp
lds
les
sub
sti
sub
jns
mov
mov
mov
push
add
mul
sub
xchg
cmp
push
push
inc
je
stos
xchg
jp
sbb
scas
push
mov
arpl
cmp
out
ret
cs
call
scas
add
cmp
(bad)
arpl
lods
mov
xor
lock
xchg
mov
inc
mov
xor
push
or
add
inc
shl
push
out
cmc
mov
cmp
js
xor
add
iret
inc
and
pop
push
add
ror
mov
dec
rcr
mov
and
mov
pop
adc
push
les
sbb
adc
xor
pop
adc
xchg
or
push
jbe
inc
or
adc
and
fld
sbb
add
jo
int3
rol
add
out
jnp
movs
out
xchg
pushf
mov
adc
daa
loopne
mov
cmp
retf
mov
mov
pop
es
mov
add
jo
adc
or
iret
and
xchg
sbb
jo
retf
push
nop
aas
add
cwde
rcl
or
mov
mov
push
ret
and
js
inc
call
in
pop
jb
inc
(bad)
sub
xchg
call
into
inc
adc
hlt
mov
push
adc
mov
sub
inc
dec
jne
int3
dec
push
inc
das
push
les
adc
cmp
loope
neg
mov
pop
pop
aaa
push
add
dec
cli
push
and
cmp
icebp
lds
mov
add
mov
add
xlat
mov
jmp
jmp
xor
jg
adc
cs
out
sbb
pop
hlt
add
sub
jge
std
push
inc
lods
jbe
mov
mov
xor
rcl
cmp
sub
jae
stos
dec
mov
test
sbb
test
int3
or
adc
mov
inc
sahf
add
pop
lock
dec
adc
dec
mov
adc
sti
xor
adc
adc
fnstcw
or
aas
sbb
out
add
not
rcl
mov
mov
mov
ret
adc
jns
les
dec
leave
xlat
add
rcl
add
lds
and
outs
cld
add
xchg
inc
outs
add
xor
stc
xor
xabort
push
sbb
inc
in
retf
push
nop
cmp
fbstp
(bad)
push
and
or
adc
aam
cmp
lock
pshufw
cmps
sar
imul
movs
adc
dec
jne
mov
push
ins
loope
arpl
fsub
push
push
and
or
and
push
mov
inc
repnz
cmp
pop
inc
push
lods
push
mov
call
xor
cmps
ja
jo
sbb
pop
imul
mov
mov
xchg
sub
inc
neg
add
inc
(bad)
out
push
test
jo
and
push
ficom
mov
sbb
xchg
cmps
mov
jmp
out
or
(bad)
(bad)
cmp
sbb
retf
jne
hlt
das
or
cmc
jne
ret
xchg
hlt
inc
div
scas
call
shr
add
jl
sbb
push
je
dec
iret
aaa
cmp
sub
push
mov
in
movzx
and
mov
jbe
adc
sub
pop
xor
jmp
out
add
stc
dec
add
jg
add
dec
test
jl
inc
xor
mov
xor
aaa
add
clc
sbb
push
lods
add
ins
and
call
or
mov
mov
pop
or
inc
dec
jne
push
mov
lock
cmp
or
ins
pusha
call
fdivrp
pop
add
dec
mov
mov
call
adc
mov
sbb
cmc
push
fs
add
into
inc
sub
jne
mul
mov
and
data16
mul
mov
movs
inc
sub
pop
push
movsx
mov
adc
lea
lea
lock
adc
adc
loopne
push
clc
dec
or
adc
pop
mov
cmp
mov
adc
cmp
push
push
mov
xchg
int
sbb
ret
and
ret
ret
mov
inc
mov
fs
ficomp
popa
lds
pop
ins
bound
mov
fdivr
mov
cmp
mov
push
jmp
pop
push
and
mov
cmp
dec
sbb
clc
mov
mov
or
mov
push
mov
push
dec
cmp
cmp
jo
pop
mov
adc
mov
out
sub
jb
lods
sbb
daa
in
daa
mov
jp
add
test
dec
and
adc
loope
scas
leave
inc
outs
or
nop
sub
lock
pop
sbb
mov
adc
xchg
loopne
mov
mov
imul
not
lods
je
pop
lock
jo
fbld
in
pop
push
mov
pusha
rol
mov
ror
dec
inc
pop
repz
mov
mov
outs
fmul
cld
and
inc
stos
js
lea
sbb
pop
cmp
(bad)
sbb
dec
mov
inc
inc
jl
lea
bound
adc
mov
fcom
cld
add
pop
mov
and
retf
int
add
push
jle
pop
dec
jne
mov
movs
arpl
jo
jns
pop
add
rol
call
mov
(bad)
dec
push
imul
add
and
test
(bad)
clc
ja
ret
cli
add
jge
mov
sub
inc
push
or
fadd
mov
add
cmp
jl
sub
mov
inc
test
or
idiv
sbb
sub
int
dec
div
push
sahf
add
jo
pop
add
inc
(bad)
sbb
mov
ins
in
sub
sub
sbb
adc
push
adc
shl
push
loopne
pop
loopne
push
mov
xor
xor
scas
sbb
cmp
or
cli
xor
xlat
push
dec
cld
(bad)
adc
pusha
mov
and
loopne
neg
shr
enter
mov
cs
and
jo
jno
imul
repnz
sbb
push
cli
cmps
and
out
retf
sub
adc
repnz
cmp
inc
pop
gs
das
adc
adc
xor
cmp
jle
or
fist
ins
ret
add
or
xor
xchg
push
xor
mov
inc
add
push
mov
sti
adc
add
and
and
mov
mov
cmp
or
loop
scas
add
or
pop
or
inc
out
loopne
test
jl
push
xor
push
clc
mov
inc
pop
test
mov
xor
loop
nop
loop
inc
xor
mov
adc
inc
je
test
dec
lock
pop
ss
int3
add
(bad)
or
or
mov
add
aam
ss
test
int3
push
jo
rol
or
sahf
aam
or
lods
mov
jmp
imul
test
jo
xchg
or
movs
cdq
mov
add
jo
add
mov
push
add
mov
adc
and
and
push
mov
loope
ret
sub
ss
sbb
push
fldenv
push
test
jg
in
in
jl
call
mov
test
sub
gs
sahf
fs
cmps
adc
mov
xor
faddp
push
ror
mov
icebp
test
xor
mov
jp
pop
stos
mov
hlt
mov
mov
xchg
js
push
adc
pop
mov
mov
inc
ins
sar
es
xor
jns
or
adc
clc
xor
ds
repz
cmp
scas
(bad)
xchg
add
jo
nop
xor
sub
push
xor
xor
jnp
lods
test
pop
inc
mov
mov
adc
lock
or
jmp
jl
add
sahf
nop
add
lods
aam
xchg
or
adc
pop
mov
jl
fcom
xchg
push
nop
test
aas
mov
sub
rcl
xchg
outs
mov
add
jmpw
sub
rol
call
push
in
ror
inc
jmp
push
scas
sbb
inc
pop
adc
xchg
xchg
(bad)
shl
(bad)
jmp
mov
(bad)
mov
int
adc
daa
mov
xor
mov
jg
pusha
or
sub
adc
ins
mov
aas
mul
jmp
cmp
call
inc
sbb
lods
fdivr
fdivr
loopne
test
fs
push
call
cmp
out
sbb
cmp
jg
xor
fs
xor
lds
jmp
rol
inc
add
add
sahf
std
fld
and
or
pop
mov
in
pop
jmp
xchg
ror
dec
or
jg
lock
pop
lock
cmp
jmp
mov
add
idiv
pop
jae
loop
cmp
ds
fiadd
push
sbb
or
dec
out
mov
xor
cmps
not
pop
jmp
mov
push
daa
mul
outs
or
adc
je
les
adc
adc
loope
dec
or
icebp
sbb
xor
sub
xlat
xchg
sbb
xchg
inc
push
adc
adc
xor
test
fld
pop
bound
sub
pop
test
pop
cmp
je
out
and
or
aaa
jp
push
shl
or
rcl
shl
adc
lea
jnp
add
jne
test
popa
add
jnp
pop
ret
mov
jp
and
scas
adc
loopne
adc
mov
jmp
jbe
int3
mov
add
dec
add
loopne
idiv
add
dec
push
xor
movs
add
loopne
xor
mov
cmp
inc
push
lock
gs
add
add
mov
cmp
pusha
add
add
or
pop
scas
dec
add
jns
push
ss
add
outs
push
outs
add
cmp
and
jb
jbe
adc
mov
pop
(bad)
cwde
mov
push
sub
inc
bound
jo
jle
inc
add
add
test
ret
pop
mov
std
ror
das
add
add
or
test
(bad)
jne
sbb
ss
stc
pop
in
shl
in
push
or
xor
je
loopne
shl
mul
scas
push
or
aaa
jo
mov
inc
out
cwde
jae
cmps
mov
push
sbb
mov
aad
or
aas
push
mov
jo
fist
xchg
sub
or
call
cmp
mul
ins
cmp
and
(bad)
call
cmp
add
sahf
or
test
loopne
(bad)
mov
mov
jmp
mov
sbb
and
inc
pushf
out
sbb
sbb
mov
daa
inc
mov
jns
push
(bad)
out
ds
mov
xchg
shr
pusha
add
cmp
sete
pop
and
sbb
mov
loopne
push
int
sbb
es
popa
rol
mov
mul
push
inc
push
xor
mov
fcmove
add
sbb
jns
add
pop
or
test
adc
adc
ss
icebp
jg
or
in
sub
outs
pop
mov
adc
push
push
inc
or
inc
inc
adc
sbb
mov
jo
dec
jbe
pop
(bad)
mov
or
cmps
xlat
mov
or
sub
(bad)
mov
mov
mov
mov
push
dec
shl
adc
push
call
sbb
and
sbb
out
shl
or
call
inc
dec
mov
add
add
cmp
mov
test
movs
pop
inc
and
pop
jg
mov
sbb
cmp
popa
and
mov
sub
fiadd
add
cld
mul
loopne
adc
pop
stos
xor
mov
jnp
loop
sbb
cmp
loopne
lods
cmps
imul
adc
int3
adc
aam
sbb
retf
add
enter
mov
push
fisubr
popf
mov
sub
stos
rol
add
mov
pop
cmp
jo
and
dec
popf
rcl
cmp
(bad)
or
or
adc
test
enter
inc
inc
or
rol
sbb
inc
adc
pop
ret
lahf
into
and
dec
add
add
and
mov
js
ror
jmp
mov
pusha
cmc
add
mov
jle
add
mov
cld
lock
mov
je
xchg
addr16
repnz
mov
or
push
data16
outs
pop
push
lods
(bad)
pusha
sub
jb
je
dec
adc
add
jmp
cmp
je
mov
inc
jne
(bad)
loopne
xchg
cmps
sbb
jmp
and
fsub
adc
and
shl
adc
sbb
mov
mov
sbb
push
adc
push
cmp
or
cmps
ins
ror
or
je
or
int3
popa
call
scas
inc
movs
cs
push
call
retf
cmp
pop
add
inc
ins
xchg
(bad)
mov
repnz
aad
add
xor
aas
xchg
adc
and
inc
or
dec
add
and
stos
or
stos
pop
sbb
push
pop
(bad)
mov
sub
shl
add
or
inc
or
mov
inc
aas
cwde
dec
push
ja
hlt
push
push
jnp
push
adc
pop
rcr
and
scas
mov
shl
jp
ret
sbb
dec
imul
xor
adc
inc
mov
xchg
in
or
xchg
fnsave
lea
mov
(bad)
pusha
pop
(bad)
(bad)
nop
sti
or
jns
mov
xchg
fimul
xor
mov
dec
fsubrp
dec
pushf
imul
pop
mov
vxorps
sub
nop
ret
jmp
cmp
arpl
daa
das
jo
loop
add
lahf
shl
adc
jo
in
cli
add
add
sbb
sbb
sub
dec
repz
add
ds
xor
xchg
jo
pop
and
lea
inc
nop
leave
mov
pop
mov
cdq
dec
adc
sub
(bad)
xchg
pop
dec
pop
ja
and
push
push
mov
adc
adc
adc
cdq
sbb
scas
(bad)
and
jle
popf
movs
mov
fnstsw
cmp
sete
xchg
bts
fs
inc
and
adc
xor
or
movs
dec
enter
lock
retf
dec
mov
jns
push
mov
dec
push
jno
ins
add
jne
dec
sub
add
pop
in
cmp
je
test
sub
or
cmp
data16
das
inc
jmp
pop
pop
addr16
push
ror
push
inc
or
inc
add
outs
adc
sub
cmps
adc
clc
push
add
inc
push
add
push
add
jne
add
mov
sbb
lock
add
fidiv
pop
(bad)
je
dec
mov
adc
and
(bad)
imul
xor
(bad)
sub
xor
pop
(bad)
das
imul
aam
inc
test
xchg
adc
mov
gs
pop
sbb
sahf
push
sub
mov
(bad)
(bad)
sbb
sub
dec
sbb
pop
xor
sub
add
inc
push
mov
or
or
movlps
shl
jl
push
lea
movs
adc
cmp
cld
aaa
pusha
call
push
inc
cmp
pop
loope
mov
into
cdq
fxch
outs
inc
push
rcl
inc
out
(bad)
push
cwde
cdq
cdq
push
mov
movs
mov
fadd
loop
test
jle
mov
rcr
push
or
mov
push
shl
mov
push
in
repz
je
sti
inc
dec
mov
add
jmp
or
cmp
test
ins
and
js
mov
movs
adc
call
aaa
jno
mov
add
cmp
test
mov
add
iret
nop
mov
rcl
xor
xchg
sub
les
cwde
adc
sbb
add
jno
das
test
push
push
adc
rcr
or
mov
or
pop
push
lea
icebp
inc
sub
test
dec
xor
xor
pop
loope
pop
push
adc
sbb
or
or
fs
mov
fmul
ss
mov
(bad)
aaa
cmp
mov
lea
fcomp
push
sub
xchg
or
push
mov
xor
mov
jnp
cwde
mov
loopne
mov
mov
adc
cwde
cmp
jo
ret
test
inc
pop
and
mov
out
jle
mov
sub
xchg
cmp
sbb
pop
push
dec
lods
fstp
pop
adc
dec
mov
add
pop
jb
arpl
outs
fadd
mov
dec
jp
push
jae
add
jecxz
ret
iret
arpl
out
add
sbb
je
ret
dec
jmp
scas
int3
nop
call
or
add
pop
int3
xor
cwde
bound
jmp
sbb
mov
dec
rol
dec
push
push
push
pusha
cmp
(bad)
sahf
je
data16
xor
push
or
jo
adc
xor
ret
daa
loope
add
dec
stos
push
adc
dec
test
pop
mov
pop
jecxz
xor
pop
pop
pop
dec
pop
data16
test
dec
ins
pop
ror
push
mov
sub
loopne
dec
sbb
loopne
inc
loopne
jl
nop
mov
and
cwde
pop
lods
push
xor
mov
daa
pop
aas
je
outs
push
pop
arpl
jle
dec
and
sub
or
or
jmp
imul
dec
mov
add
sbb
fcom
push
adc
pop
pop
dec
add
ins
pop
repnz
add
pop
shl
gs
in
loope
jnp
jmp
push
mov
or
mov
ins
pop
and
mov
jbe
shr
add
ja
mov
mov
fidivr
push
in
(bad)
xlat
cmp
xchg
cmps
add
enter
adc
je
jle
jmp
cmp
or
xchg
adc
push
ins
inc
jge
hlt
xor
add
jbe
add
imul
sbb
sub
mov
or
das
and
mov
add
cmp
sub
inc
(bad)
fild
add
xor
add
jb
mov
add
sahf
lods
popa
sub
sti
in
(bad)
not
add
adc
cmp
jp
inc
out
add
adc
xchg
movs
jbe
es
ret
movs
lods
xor
push
test
adc
cli
and
mov
adc
pop
daa
shl
xor
adc
jmp
adc
iret
out
mov
hlt
pop
addr16
out
add
adc
sub
in
or
out
lods
mov
stos
xchg
jne
add
jns
ret
add
and
add
xchg
add
call
inc
(bad)
cmp
fcomp
sbb
fs
lods
pop
loopne
jbe
jle
and
call
loope
xchg
inc
adc
or
jnp
xor
jne
out
cmp
or
dec
shl
inc
adc
xor
push
dec
cmp
sub
sbb
out
scas
adc
test
lock
push
push
or
icebp
loope
ror
jp
sbb
loope
jp
mov
sub
out
adc
(bad)
mov
pop
add
push
adc
mov
out
fisttp
pop
cmp
mov
sub
mov
call
adc
push
push
adc
int
jp
mov
fneni(8087
sti
mov
enter
fwait
(bad)
fwait
lea
and
(bad)
data16
mov
or
push
dec
sbb
push
or
clc
cs
xchg
cmp
cld
fcom
and
add
or
shr
icebp
add
test
ficom
cwde
mov
pop
jae
add
fcomp
call
adc
xor
shr
add
ja
jbe
mov
jno
lea
enter
ja
ds
jno
into
fnstcw
sbb
mov
xchg
inc
xlat
inc
fmul
add
sbb
mov
out
xor
enter
push
loope
pop
sub
and
rcl
or
push
push
adc
xor
adc
adc
xchg
sbb
sbb
xor
(bad)
imul
xor
sbb
push
inc
ins
pop
inc
cmp
lods
cwde
inc
inc
pop
and
pop
jge
cmp
aad
adc
xor
inc
xor
inc
das
dec
cmp
mov
add
cmp
rol
pop
fidiv
inc
movs
retf
xchg
ja
mov
adc
dec
cmp
ja
psrad
add
shl
sub
out
loop
push
xor
scas
xchg
jb
or
inc
nop
nop
scas
sbb
or
cmp
mov
and
pop
xchg
shl
xlat
sar
test
sub
sbb
pop
or
sbb
lds
sub
xchg
mov
lds
clc
push
cmp
or
jge
xchg
fmul
dec
jne
sbb
pop
cmps
sbb
cdq
in
adc
or
cwde
fxch
and
int3
(bad)
das
adc
int3
retf
mov
lds
mov
fstp
add
mov
movs
pop
movs
sbb
movs
xor
test
(bad)
or
and
mov
cmp
sub
pop
sbb
stos
loop
loop
adc
mov
lea
cmp
es
shr
out
pushf
out
adc
sbb
rcr
or
pop
scas
out
out
movs
rcr
and
mov
stos
out
loopne
xchg
sbb
cld
out
adc
test
out
lock
sbb
stos
iret
dec
add
out
out
add
popa
add
out
sbb
adc
cdq
add
jne
out
push
out
sub
pop
sbb
dec
inc
pusha
out
data16
data16
(bad)
rcr
adc
or
xor
mov
jae
pop
pop
std
frstor
(bad)
fld
xchg
mov
not
inc
fcom
adc
inc
aam
push
iret
das
shl
pop
or
push
jmp
ret
jge
push
cmp
mov
daa
xchg
mov
(bad)
out
xor
or
inc
bound
icebp
test
sbb
pop
icebp
or
adc
icebp
jmp
int
xor
pop
mov
sbb
mov
leave
dec
adc
(bad)
add
mov
xor
or
js
jne
cld
enter
rol
push
loopne
or
mov
add
xchg
push
dec
ja
cdq
cmp
aaa
pop
or
retf
je
int3
push
mov
out
fstp
dec
xchg
sub
and
fcomi
push
inc
jbe
jp
jge
(bad)
xchg
mov
push
ins
inc
fdivp
mov
les
leave
fdivr
mov
cmp
mov
fnstsw
sahf
jbe
push
and
add
test
je
outs
call
mov
imul
adc
add
jge
pop
add
mov
mov
xor
and
adc
dec
or
cld
adc
gs
dec
retf
jb
(bad)
and
sti
dec
push
or
and
sti
test
xor
std
push
or
jmp
movzx
aad
mov
(bad)
pop
adc
sub
pop
retf
cmp
sbb
xor
or
xor
pop
mov
cmp
setge
inc
mov
add
sub
cmp
cs
cmp
or
and
push
stos
push
push
push
push
pop
push
jp
mov
pop
add
mov
inc
cmp
fadd
cs
das
mov
xor
mov
je
cmp
sbb
or
or
fs
jae
sbb
cmc
inc
loopne
push
push
pop
cmc
(bad)
pop
loope
movs
adc
nop
cmp
or
xlat
cmps
jle
sbb
pushf
icebp
mov
adc
jecxz
jae
sbb
xchg
fstp
adc
fdiv
movs
sub
imul
sbb
pusha
int
pusha
mov
shl
jo
pop
add
inc
ret
push
mov
retf
xchg
jp
push
add
sbb
jo
or
push
shl
push
fist
pusha
repnz
movs
add
neg
mov
shr
test
fcom
out
dec
add
jmp
enter
add
inc
sub
push
sar
add
push
push
les
jecxz
mov
rol
jne
je
add
sbb
lea
push
mov
push
lea
lea
sbb
sub
xchg
mov
mov
in
inc
xchg
out
mov
cmps
push
mov
add
(bad)
or
cwde
cmp
rcr
sti
inc
inc
mov
cmps
arpl
movs
scas
xor
ficom
out
adc
or
mov
mov
inc
pusha
push
lss
fs
rol
push
dec
jo
shl
jmp
inc
addr16
cmp
mov
lea
fadd
jb
mov
call
and
jae
mov
pop
dec
adc
js
clc
mov
push
lahf
or
ret
les
pop
(bad)
frstor
push
repz
sbb
jmp
sbb
pop
xor
cwde
stos
mov
xor
push
(bad)
clc
fild
jg
in
xor
fcomp
lock
sub
nop
das
cmps
cmp
push
fdiv
lods
sub
mov
jo
(bad)
jbe
and
rcr
fiadd
pop
and
mov
push
sbb
or
btc
inc
je
push
pop
iret
(bad)
push
push
clc
push
jne
push
sbb
adc
test
xor
pop
sbb
aam
clc
xor
lock
cmp
pop
or
data16
mov
add
fild
cmp
test
daa
and
nop
and
mov
test
ins
fild
xor
mov
inc
cmp
dec
push
push
test
(bad)
in
add
push
pusha
cmp
cvtps2pd
cdq
jecxz
inc
mov
push
ins
adc
jp
inc
dec
lods
(bad)
imul
idiv
aaa
lods
mov
dec
sub
test
jl
inc
xor
mov
add
add
shl
sub
mov
mov
jo
shr
add
dec
jne
xlat
add
sbb
or
aam
call
rcr
pushf
loopne
bound
or
ret
fld
add
cmp
mov
scas
mov
test
or
fmulp
mov
in
shr
out
jg
push
pop
movntps
pushaw
sbb
mov
cmp
pop
ret
cmc
int3
daa
cs
scas
call
bound
retf
inc
adc
dec
fdiv
aam
cmp
pop
mov
loopne
mov
call
jne
scas
jg
call
(bad)
movs
inc
je
adc
jae
mov
popa
jmp
(bad)
jae
lahf
push
pushf
outs
rcr
iret
movzx
adc
mov
mov
jmp
pop
(bad)
(bad)
outs
cmp
jne
mov
inc
rol
rol
dec
push
test
std
loopne
jne
aas
arpl
out
add
add
repnz
sub
pop
inc
test
mov
sbb
fcom
inc
lock
test
jmp
mov
pop
sbb
push
jecxz
aas
loopne
movs
adc
mov
test
sbb
add
push
push
pop
or
add
lock
xor
push
ror
jo
fidivr
clc
pop
jg
imul
sub
call
adc
sub
mov
mov
sahf
jmp
jbe
mov
push
push
in
sbb
adc
jg
iret
push
jmp
jge
add
sti
sti
xor
mov
add
ds
arpl
add
or
xchg
std
hlt
xlat
mov
adc
fisubr
jmp
(bad)
push
cmp
out
adc
add
rol
(bad)
jmp
iret
pop
jmp
ret
dec
rcl
test
ret
mov
xchg
xchg
outs
sub
clc
cmp
je
jle
sub
outs
cwd
push
popf
pop
mov
out
out
or
test
movs
push
sbb
and
jmp
lods
push
jl
jg
je
fmul
xor
sbb
int
daa
pop
dec
je
jmp
mov
jmp
inc
dec
jno
add
cs
lahf
sti
mov
(bad)
cli
adc
fmul
ret
lock
mov
mov
inc
cmp
fild
cmc
leave
fbstp
sbb
jmp
push
pop
ret
jg
push
addr16
push
and
cs
inc
inc
imul
je
push
jmp
fstp
adc
add
pop
mov
ins
inc
or
or
jne
fsub
dec
dec
and
std
stos
ds
int
jo
dec
test
jl
inc
add
add
add
sbb
jl
pop
jg
fcomp
or
cli
ror
mov
popf
push
mov
inc
cwde
icebp
jmp
inc
dec
jne
mov
pop
(bad)
mov
jg
dec
iret
pushf
pop
sub
cmp
jl
mov
add
add
retf
ret
shr
(bad)
je
or
jle
rcl
xchg
push
fsubr
add
call
mov
dec
push
lea
cmps
xor
clc
aas
movd
inc
push
ret
int
pusha
js
cld
dec
jl
push
sub
daa
push
push
rcr
adc
dec
jp
mov
loopne
or
jne
ret
sbb
and
mov
clc
and
inc
inc
jp
dec
sub
inc
cmp
(bad)
inc
(bad)
mov
inc
jp
cmp
or
adc
inc
jae
ja
add
dec
jne
xor
mov
repz
scas
stos
push
jne
mov
sbb
movs
xor
lods
add
jbe
fistp
call
mov
inc
jne
std
add
mov
inc
sti
jmp
mov
cmps
sub
imul
dec
outs
and
inc
(bad)
js
adc
pop
popf
push
xor
pop
sbb
arpl
loopne
pop
ror
xor
aaa
mov
xor
jmp
cmp
mov
shrd
adc
mov
xchg
mov
rcr
push
inc
icebp
shl
js
jmp
cmps
or
mov
pop
cld
add
and
stc
push
or
out
lds
ins
or
jmp
cmps
xlat
jne
das
ja
stos
inc
xchg
xor
jne
and
mov
fxtract
jbe
xor
pop
jo
add
sbb
clc
and
pop
pop
xor
jae
add
and
pop
jge
pop
and
or
je
fcomp
bound
jge
sbb
data16
and
mov
mov
test
push
enter
jnp
push
mov
pop
mov
loope
and
add
sub
and
js
mov
adc
add
pop
add
and
mul
inc
aad
jae
xchg
add
push
and
mov
mov
and
shl
leave
mov
in
jns
mov
pop
cmp
je
test
je
cmp
push
mov
fs
xor
jmp
cdq
aas
add
sub
dec
mov
arpl
cmp
add
(bad)
sub
push
sbb
mov
and
mov
mov
and
push
push
adc
call
xchg
inc
cmp
call
cmps
rol
mov
int3
push
fwait
mov
retf
sub
pusha
dec
popf
je
push
leave
push
xchg
or
sbb
xor
hlt
pop
cmp
add
push
push
pop
pusha
push
fadd
out
ja
icebp
sbb
push
and
js
loopne
pop
lock
jmp
xor
jmp
stc
call
pop
icebp
or
fs
or
(bad)
cmp
(bad)
scas
repnz
inc
cmp
jne
push
js
ins
and
les
out
in
mov
jle
dec
test
jl
inc
jmp
mov
dec
test
adc
mov
ja
imul
or
add
cmp
mov
je
mov
in
call
push
sub
call
test
ret
xor
push
inc
call
je
push
outs
mov
inc
mov
dec
cmp
jne
out
sbb
sbb
cld
cld
outs
add
sub
lea
sub
jg
dec
mov
pop
sub
add
jne
jbe
scas
sbb
outs
push
jbe
push
pop
pop
cwde
mov
dec
inc
jmp
scas
sbb
sub
mov
mov
mov
call
inc
mov
jl
inc
repnz
dec
or
ja
adc
movzx
cmp
sub
(bad)
int3
call
cmps
sbb
retf
push
push
test
sbb
jmp
and
push
pop
inc
int
out
sti
cmp
fcom
mov
fbld
push
add
fidivr
inc
shl
fwait
inc
sbb
cmp
mov
xor
add
and
jmp
les
mov
sub
add
pop
lock
inc
lock
popf
jge
lds
push
hlt
lea
mov
hlt
xlat
sti
pop
ret
xlat
mov
inc
dec
ja
xor
sub
dec
lock
push
hlt
(bad)
push
adc
mov
xor
scas
in
enter
and
add
pop
ins
jne
push
xor
push
rol
das
xor
mov
sub
clc
pop
dec
cmc
inc
adc
push
xor
push
pusha
sub
loop
or
pop
push
sti
pusha
dec
mov
lea
dec
mov
jmp
or
pop
cmps
(bad)
push
adc
add
or
xor
ins
int
in
dec
adc
cmp
xor
mov
popf
xchg
test
sbb
test
sbb
inc
cmp
or
mov
mov
pop
inc
mov
jmp
cbw
out
rcl
out
adc
add
mov
jecxz
add
retf
mov
xchg
cmp
add
dec
jbe
mov
sub
or
add
ret
mov
mov
sbb
(bad)
ins
ss
pop
lods
arpl
out
add
in
cmp
jle
ss
(bad)
or
mov
mov
pop
pop
sbb
push
pop
pop
adc
outs
test
ins
test
cmp
cmp
jge
adc
add
push
push
add
sahf
jle
ja
add
add
inc
lock
jo
and
dec
pop
xor
inc
xor
push
add
movs
sub
loope
lods
and
inc
out
mov
add
push
int
xor
xor
or
(bad)
icebp
mov
nop
cld
mov
sbb
cmp
call
cmp
jl
push
inc
push
pop
mov
add
cmp
jle
mov
imul
push
(bad)
mov
or
mov
repnz
add
adc
dec
dec
mov
cmp
movs
hlt
and
push
xor
adc
comiss
pop
aaa
mov
int3
jne
popf
dec
mov
ror
jmp
and
frstor
cmp
jmp
jae
mov
sbb
or
sbb
shr
mov
sbb
xchg
cmp
out
dec
into
sub
cmp
enter
(bad)
pop
pop
outs
and
mov
cmp
mov
pop
pop
lahf
adc
cmp
push
jl
lea
add
cmp
add
sub
ins
mov
into
pop
add
and
sbb
mov
sbb
jmp
aam
je
int3
call
popf
mov
jmp
loopne
popa
(bad)
ins
push
pop
mov
mov
or
sar
lock
add
jne
sub
mov
sar
and
add
lock
push
pop
ss
push
jno
ss
or
push
pop
push
cmp
adc
rcl
hlt
into
movs
add
cld
adc
push
cld
push
or
jmp
add
out
jmp
fisubr
sbb
data16
cmps
clc
les
adc
pop
mov
adc
mov
jge
inc
jo
popa
movs
add
call
inc
daa
mov
les
push
popf
add
pop
rcl
jmp
mov
push
test
pusha
(bad)
sbb
jb
or
cmp
imul
rcr
pusha
or
jmp
lahf
mov
pop
movzx
loop
xor
or
inc
out
add
xor
xchg
out
addps
lahf
iret
pop
add
cwde
and
dec
push
loopne
and
shl
scas
shl
add
jle
push
mov
pop
and
pop
jbe
push
psrlq
mov
pop
sub
popf
and
adc
jb
mov
sub
cmp
loope
jae
or
or
cmp
xchg
inc
xor
xor
add
add
hlt
je
int3
lahf
mul
lahf
push
xor
sub
loopne
pop
push
scas
xchg
xchg
inc
ret
div
and
sbb
and
xor
lahf
shl
les
xchg
test
add
ret
loope
idiv
ret
mov
dec
or
add
mov
fucomi
add
mov
pop
aas
icebp
fdiv
sub
mov
add
inc
mov
or
and
push
ins
cmp
xlat
push
shl
rcr
in
sbb
ror
out
fmul
cld
aaa
out
int3
jmp
das
push
cmp
jne
arpl
xor
cmp
push
rol
push
arpl
cmc
dec
add
pushf
push
repz
or
push
jbe
sub
sbb
pop
mov
and
inc
jmp
xchg
hlt
loopne
sub
xor
push
push
lea
lea
rcr
jne
jmp
push
or
add
or
mov
and
scas
pop
loop
movs
pop
cmp
and
shr
mov
ss
sub
inc
push
loopne
xchg
cmps
add
pop
mov
arpl
sub
icebp
repz
ds
frstor
inc
xor
pop
push
pop
pop
adc
lahf
jmp
cmp
mov
push
sub
sub
pop
dec
in
adc
imul
adc
pop
adc
pop
sbb
jne
ret
and
push
into
adc
or
xlat
mov
mul
push
loope
pop
inc
pop
or
jp
sbb
mov
mov
mov
sbb
jecxz
imul
fisub
push
inc
pusha
inc
adc
lahf
xchg
xor
inc
pop
lds
int3
sub
dec
mov
xor
lea
sbb
mov
add
or
mov
sbb
rol
xchg
and
or
imul
mov
mov
mov
in
inc
mov
ret
sub
lea
or
loopne
and
sub
jb
je
rcr
jmp
cmp
test
add
call
mov
inc
ds
daa
cmp
in
imul
scas
mov
fidivr
jmp
test
inc
jmp
sbb
push
jg
jmp
push
jmp
sbb
in
fmul
cmps
or
cmp
adc
fld
cmp
jecxz
dec
mov
mov
lock
pop
push
movzx
out
push
cwde
xor
mov
call
sbb
or
and
xor
scas
inc
aas
jo
js
dec
call
pusha
sub
cmp
je
shl
popf
jecxz
jo
mov
push
mov
jge
xor
in
scas
adc
or
adc
mov
push
add
push
xor
mov
sbb
or
mov
push
mov
je
sbb
add
mov
shl
scas
adc
pop
or
add
add
push
cmp
xlat
add
aam
in
ds
sub
push
push
mov
and
sti
xor
or
sub
lgs
push
rol
inc
ret
jne
add
rcr
popa
test
cwde
retf
loopne
fsub
inc
and
and
hlt
imul
sub
or
and
push
or
inc
add
xor
push
(bad)
sbb
outs
pop
sub
les
inc
push
and
add
rcr
jmp
aad
and
movzx
jge
sahf
xlat
mov
push
push
push
push
ret
push
push
jmp
or
(bad)
scas
inc
retf
xchg
pop
dec
push
mov
call
call
daa
pusha
add
inc
mov
adc
mov
mov
sbb
sbb
fsubr
push
and
cmp
mov
mov
and
adc
push
mov
std
cmp
jne
(bad)
push
and
push
popf
out
sbb
push
mov
cli
popa
div
ja
mov
adc
dec
int3
out
sub
dec
ja
adc
sub
clc
enter
mov
sbb
adc
and
push
mov
mov
das
jl
cs
or
(bad)
movs
mov
arpl
fnsave
xor
shl
loope
adc
sbb
pusha
inc
jo
js
push
pop
mov
adc
mov
and
adc
jo
nop
out
call
xchg
xor
and
daa
push
ins
mov
in
xchg
jne
fcmovne
pop
inc
pop
ins
(bad)
test
and
je
pop
enter
xchg
sbb
and
adc
dec
loopne
loop
pop
js
jbe
enter
pop
sbb
jne
fst
xor
outs
adc
fstp
push
fld
pusha
cmp
pop
mov
dec
mov
jg
adc
fmul
add
pop
js
in
or
mov
ret
xlat
push
mov
push
lock
dec
sbb
shr
in
or
imul
inc
int
cld
sub
pop
dec
cs
mov
fisubr
mov
xor
dec
cmp
and
icebp
adc
xchg
ret
cmp
jae
xor
dec
je
and
dec
xchg
dec
sti
xor
sub
adc
add
lods
aad
mov
adc
sti
add
mov
and
push
loopne
fiadd
jmp
cli
and
mov
lods
inc
push
shl
and
mov
pop
jnp
je
and
ins
movhps
dec
inc
push
(bad)
add
(bad)
hlt
clc
mov
fadd
or
lea
jnp
call
stos
push
jbe
and
or
iret
or
jae
out
(bad)
in
add
sbb
and
jae
ja
or
aad
mov
data16
adc
mov
push
or
pop
push
xchg
into
outs
shl
inc
mov
(bad)
and
test
sub
movs
cmp
loopne
dec
sbb
iret
test
mov
cmp
aam
mov
mov
idiv
cmp
xchg
mov
mov
popa
loopne
xor
cmps
xadd
jo
adc
sbb
test
fs
cmp
mov
jecxz
jmp
imul
or
out
or
int3
push
push
inc
cmps
cmp
addr16
adc
sub
xchg
mov
mov
adc
xchg
sub
mov
fldcw
sub
call
xor
dec
cld
(bad)
nop
mov
pop
or
push
pop
jns
fsub
inc
xor
cmps
and
inc
ret
adc
or
popf
jae
adc
mov
or
je
jl
out
mov
xor
xor
inc
xor
out
push
sbb
loopne
or
add
fiadd
xchg
mov
je
daa
push
inc
cdq
dec
mov
loope
or
add
mov
pusha
adc
jno
(bad)
fnstenv
fisttp
add
adc
mov
in
xlat
inc
lea
mov
dec
movs
icebp
std
and
mov
push
aas
stos
fcmovu
ret
test
fs
or
inc
xchg
push
xor
xchg
xlat
sbb
mov
jmp
adc
sbb
or
sahf
(bad)
sbb
add
ret
mov
das
hlt
dec
mov
adc
jmp
sbb
and
push
rcl
adc
mov
pop
jg
out
imul
mov
into
fdivr
cmc
adc
xchg
shl
jne
ror
sbb
fisubr
push
sbb
loop
lahf
mov
test
jbe
inc
push
adc
and
mov
rcr
je
xchg
cvtps2pi
jne
or
retf
packuswb
add
cmp
(bad)
daa
mov
xor
inc
cwde
mov
push
push
cmp
inc
out
mov
inc
push
push
jecxz
push
or
pop
pop
loopne
movs
jnp
lods
retf
mov
cmp
xchg
outs
sub
xchg
retf
in
in
jge
xchg
adc
fs
mov
mov
mov
sbb
cmp
cmp
xchg
mov
cmp
adc
mov
sbb
sbb
and
add
out
push
inc
sub
adc
je
sbb
lods
xor
pop
mov
lods
xchg
in
lods
mov
mov
pop
push
dec
or
out
retf
xlat
dec
adc
je
or
dec
adc
add
dec
pushf
pop
dec
adc
xchg
jle
cld
and
icebp
dec
push
jle
adc
call
sbb
and
pusha
lock
sbb
or
xchg
mov
add
or
ins
jo
mov
dec
mov
add
adc
add
push
enter
jae
outs
xchg
push
lock
sub
jl
pop
sbb
jp
loopne
mov
or
mov
sub
sub
cli
mov
leave
iret
fadd
mov
jmp
shl
mov
add
mov
adc
xor
inc
cs
fsub
fsub
test
pop
scas
pusha
scas
jmp
aad
int3
pop
jne
cmp
jne
mov
in
xchg
into
sub
push
adc
cld
imul
and
xlat
add
inc
mov
(bad)
fcom
inc
xchg
out
fwait
fwait
cwde
push
cwde
xchg
xor
jnp
add
pusha
push
add
add
jo
mov
xor
fild
cwde
sbb
mov
loop
or
add
adc
fdiv
outs
add
xchg
inc
sbb
mov
repnz
lds
and
sbb
rol
fidivr
add
xchg
aas
ins
imul
inc
jmp
loope
mov
jns
pop
std
inc
sub
jg
or
cmp
push
hlt
and
dec
mov
stc
mov
mov
xor
aaa
mov
inc
out
iret
imul
add
inc
cmp
mov
adc
and
je
hlt
push
movs
pop
bound
cmp
inc
jmp
mov
neg
loopne
pushf
loop
inc
pop
jne
add
fxam
(bad)
test
fnstsw
sbb
or
daa
test
jo
or
adc
test
mov
and
sbb
test
mov
cmp
adc
repnz
stos
jl
push
sbb
or
mov
xor
jp
mov
sbb
fwait
push
neg
pop
sub
mov
sti
mov
popa
mov
pop
ret
not
xchg
pusha
pop
pop
jne
push
mov
or
sbb
aad
cmp
jecxz
inc
loope
or
loopne
xor
and
adc
daa
and
xor
add
add
xor
sbb
lea
pop
adc
outs
pop
pusha
pop
in
sub
js
lds
pop
adc
out
and
movs
and
jle
mov
inc
pop
jg
and
mov
ja
adc
pop
sub
pop
test
or
rcr
jle
jbe
sbb
and
jle
sbb
out
cmp
(bad)
pop
(bad)
ja
push
rcr
add
pop
shl
cmp
jnp
jmp
cmp
ror
mov
xchg
or
push
sub
xchg
in
(bad)
outs
enter
xchg
stos
or
ds
pop
pop
adc
pop
push
pop
pusha
bndldx
mov
add
mov
pop
adc
fmul
push
adc
push
pop
lds
pop
sbb
adc
or
xor
shl
xchg
push
pusha
xchg
das
adc
jne
mov
xchg
mov
xor
(bad)
ja
adc
add
mov
and
es
ss
sub
je
mov
mov
push
or
mov
call
push
add
aas
mov
add
rcr
xor
ins
push
imul
push
test
retf
in
sbb
scas
je
fiadd
mov
and
xor
sti
or
cmp
and
test
icebp
jmp
pop
fs
inc
jmp
push
add
movs
jmp
sub
xchg
jne
jmp
int3
sub
out
bound
mov
push
call
mov
cdq
push
add
or
dec
cmp
pop
dec
dec
adc
sub
inc
xchg
cmp
sbb
cmps
pop
xchg
(bad)
pop
scas
sar
xchg
pop
sub
rol
fwait
xor
or
sub
push
xor
sbb
cmp
or
cmp
dec
sbb
adc
ror
push
add
add
ins
dec
mov
dec
ins
cs
jo
sbb
or
jmp
mov
jmp
jg
push
ror
xor
daa
dec
lods
inc
inc
jae
cmp
xor
je
adc
xchg
aaa
xchg
js
push
pop
sub
inc
xor
and
adc
dec
sub
cmp
adc
add
aad
jge
sbb
mov
push
cdq
inc
pop
add
mov
jno
or
push
mov
neg
mov
sub
je
or
mov
outs
je
add
dec
jne
or
mov
push
out
inc
add
or
imul
add
gs
xor
mov
add
data16
bound
pop
call
adc
push
jb
jbe
or
jge
mov
pop
cdq
sbb
jae
push
inc
add
add
pushf
cmp
loopne
test
pop
bound
mov
mov
mov
into
sbb
in
lods
add
pusha
ret
dec
(bad)
in
and
inc
inc
xor
jo
xor
fdivr
sub
in
push
outs
(bad)
sub
iret
mov
fstp
cli
pusha
push
push
xor
jnp
icebp
cli
shr
mov
dec
sub
and
data16
jmp
jo
int
add
add
add
ficomp
call
mov
sbb
(bad)
iret
xchg
adc
adc
and
add
inc
add
call
add
inc
popf
adc
test
and
push
and
push
adc
inc
bound
ss
enter
add
cmp
movs
movs
mov
(bad)
jnp
cmp
add
mov
jmp
cmp
xchg
ror
mov
xchg
add
inc
mov
pop
test
or
jp
jo
push
push
sbb
or
push
fistp
push
pop
push
and
mov
sbb
adc
sar
iret
pop
mov
push
gs
jne
jno
xor
test
cdq
add
rcl
in
jmp
mov
inc
add
push
idiv
cmp
sub
push
or
rol
xor
add
xchg
(bad)
push
push
jmp
inc
loopne
les
mov
mov
xor
aam
lock
pmuludq
adc
add
adc
or
sub
mov
cmp
push
adc
add
int3
push
lea
lea
loopne
dec
je
cdq
add
xchg
vucomiss
sbb
aaa
adc
test
daa
xchg
imul
add
mov
or
test
mov
inc
gs
jo
rol
mov
mov
fninit
jg
sbb
in
add
jmp
mov
gs
cmp
adc
sbb
cmps
add
add
mov
cs
adc
int3
lods
mov
add
stos
xchg
mov
pop
imul
jo
pusha
jnp
test
or
sub
mov
or
jl
push
add
push
ins
inc
int
or
test
sub
mov
add
jp
(bad)
mov
inc
jnp
add
cmp
push
push
add
or
jmp
fsub
mov
shl
rcr
mov
out
popf
xor
sub
or
sub
mov
in
jge
iret
inc
cmp
jnp
sahf
aam
fsubr
repnz
xlat
out
fimul
mov
cmp
pop
enter
lds
mov
stc
pop
xor
xor
popa
idiv
es
sub
adc
or
mov
sub
sub
sub
dec
xor
cmp
push
sub
pop
sub
cdq
sbb
(bad)
lods
mov
scas
nop
xor
je
call
add
adc
les
mov
je
pop
add
shr
sbb
push
pushf
je
cmc
cmp
or
mov
jle
pavgb
cmp
xchg
fadd
mov
cmp
mov
xor
dec
fmul
jp
inc
dec
dec
push
xchg
bound
js
pop
sub
mov
test
mov
sbb
cld
cmp
je
aas
ret
jmp
push
inc
pop
aaa
stos
push
je
lahf
jne
loopne
add
mov
pop
adc
pop
push
retf
cs
pushf
inc
retf
mov
pop
pop
sbb
call
mov
test
into
or
jno
cmp
repz
daa
push
jne
push
mov
mov
sbb
out
push
sbb
(bad)
cld
out
shl
cli
xchg
test
jne
cmp
sbb
push
sbb
aas
sbb
xlat
jnp
mov
sub
sub
sub
pop
mov
mov
adc
out
cdq
add
jnp
mov
or
outs
xchg
jmp
adc
bound
pop
push
stc
shr
scas
sbb
xchg
push
test
inc
rcl
stos
and
cmp
pop
sub
and
sbb
adc
sbb
call
clc
test
mov
jo
add
shl
and
jb
jmp
dec
jg
addr16
or
jecxz
jnp
test
sub
push
or
(bad)
fld
xor
loop
rcl
rol
shl
ror
push
rol
jmp
shl
or
jmp
add
je
inc
ins
xor
mov
add
mov
(bad)
(bad)
sub
pop
push
mov
adc
pop
test
lock
sub
jmp
cmp
pop
xchg
inc
jns
(bad)
or
adc
adc
dec
ins
push
dec
popa
add
rcr
add
test
sbb
xor
inc
mov
push
sub
sub
and
pop
add
add
enter
lock
adc
sbb
shl
mov
push
mov
xor
sbb
add
adc
add
add
add
jae
addr16
xchg
sub
popa
or
push
arpl
enter
rol
and
test
add
pop
pop
pop
scas
imul
jge
push
mov
push
out
sbb
ret
out
cmps
sar
fadd
jg
mov
mov
pop
sbb
sub
xor
add
dec
cmp
loopne
or
les
leave
mov
mov
pushf
(bad)
pop
inc
push
inc
and
dec
add
push
arpl
mov
data16
or
push
sbb
ins
stos
bound
dec
das
fidivr
add
inc
sub
xor
mov
push
mov
iret
xor
sbb
adc
scas
sub
sbb
push
ror
sbb
or
(bad)
(bad)
adc
adc
adc
add
push
lods
sbb
ficom
or
cmp
mov
je
mov
sbb
pop
sar
jns
adc
add
mov
pusha
mov
dec
aam
loopne
jle
pop
cld
lea
jecxz
jbe
ja
call
jg
bound
out
add
adc
sub
add
fistp
mov
pop
scas
inc
cwde
xchg
pop
out
adc
and
test
xor
(bad)
nop
lods
jle
hlt
jge
setbe
adc
pop
cmp
pop
fistp
je
xor
cmp
jle
sub
push
add
cdq
add
xchg
pop
jmp
js
std
adc
enter
and
cmp
push
aaa
inc
es
pusha
push
call
add
mov
cmp
sbb
add
jge
or
mov
std
cmp
jle
mov
and
jg
mov
or
dec
dec
inc
pusha
pop
inc
mov
mov
les
pop
mov
sbb
jne
(bad)
cmp
(bad)
mov
shl
cmps
pop
lods
cmp
std
push
mov
or
lock
add
adc
xchg
jae
mov
cmp
add
jmp
inc
aam
xchg
sub
mov
push
sub
sub
pop
retf
inc
les
cdq
ret
lock
mov
in
mov
lea
mov
push
dec
into
inc
sbb
pop
addr16
add
mov
jnp
sub
test
or
xchg
shr
mov
xor
fsubr
mov
iret
cmp
jo
sbb
je
xchg
cwde
xchg
clc
cmp
xchg
add
adc
or
hlt
push
dec
cmps
jo
loop
cmp
jo
sub
ret
movs
cmp
ss
pop
sub
inc
bound
(bad)
loopne
sub
or
mov
jg
sbb
sar
rcl
jne
jbe
xchg
int
mov
ss
cmps
or
(bad)
int3
push
pop
or
les
lea
je
nop
pop
mov
sahf
pop
fsub
sbb
enter
clc
enter
cmp
mov
outs
test
mov
js
cmp
inc
in
mov
push
sbb
cmp
jmp
pop
xchg
leave
movs
(bad)
int
sbb
sub
popf
push
cmps
sbb
sbb
mov
push
jb
sti
mov
jmp
or
jmp
daa
add
sbb
cmp
cbw
mov
xchg
pop
(bad)
in
(bad)
mov
call
stc
cmp
rcl
xor
loopne
pop
or
mov
retf
sbb
push
jno
gs
add
sbb
ror
xor
arpl
movs
or
mov
outs
scas
mul
lahf
add
add
leave
mov
ret
shl
add
inc
or
push
sti
cwde
mov
mov
cmp
and
sbb
pop
adc
or
or
lea
out
sti
into
push
push
pop
push
mov
push
xor
sub
pop
add
xor
sub
mov
jle
xchg
dec
add
adc
hlt
stos
mov
xchg
jecxz
pop
in
bound
inc
xor
jmp
retf
sub
sbb
fild
rcr
das
and
rol
add
xchg
call
fadd
aaa
shl
xchg
stos
cmp
ret
cmp
imul
ss
push
dec
push
push
mov
js
jmp
jmp
jmp
ret
aas
or
jmp
jne
jmp
sub
mov
ret
cmp
push
xor
ret
adc
or
ja
lahf
cmp
add
add
inc
test
scas
xor
adc
retf
test
mov
sub
jmp
test
sbb
xchg
jnp
inc
inc
icebp
jb
sbb
inc
icebp
inc
inc
mov
adc
xor
sbb
add
xor
mov
add
jo
jmp
icebp
fimul
ss
loope
imul
fld
imul
sub
aad
mov
cmp
test
xchg
sbb
inc
mov
mov
test
push
retf
mov
int
fist
adc
mov
dec
xchg
dec
dec
push
ret
and
js
mov
and
js
movlps
or
les
sbb
sub
sbb
or
mov
xchg
pop
je
ja
xchg
mov
lock
test
push
lods
pop
lds
or
xchg
in
neg
xchg
sub
sbb
popa
test
sub
or
loop
or
int
lods
and
xlat
push
scas
adc
fwait
adc
outs
mov
jns
adc
pop
dec
loopne
in
mov
call
aam
or
loop
sbb
inc
mov
out
push
and
sbb
sbb
call
push
push
sbb
enter
js
pop
loopne
or
adc
mov
sub
fwait
and
inc
ja
jecxz
outs
nop
pop
pop
pop
mov
push
outs
cld
(bad)
cmp
dec
ret
jmp
jmp
addr16
shl
ins
seta
mov
repnz
fs
mov
(bad)
fistp
adc
add
push
adc
cmp
jl
enter
es
aam
adc
lods
shl
dec
jle
adc
cmp
dec
cmp
inc
sbb
jne
pop
bound
adc
push
cmp
pop
push
mov
jae
mov
push
rcr
add
mov
or
dec
icebp
inc
sub
icebp
or
mov
dec
xor
and
icebp
(bad)
aaa
add
mov
xchg
add
or
cmp
push
lods
and
and
sbb
scas
inc
sbb
cmp
pop
cmp
sub
mov
and
add
mov
sbb
and
jae
adc
add
xor
ins
lock
xchg
sar
push
rol
add
push
int
mov
test
les
cmps
fidiv
adc
add
aad
gs
pop
xor
cmp
xor
or
pop
push
inc
sub
in
retf
add
sub
add
sbb
(bad)
out
ja
into
and
scas
icebp
jle
mov
sub
jge
mov
sub
sbb
push
inc
inc
and
inc
adc
in
inc
inc
sbb
jnp
jae
xchg
xchg
sub
in
cmp
int
inc
int
out
popaw
inc
int3
inc
mov
add
lods
cmp
jle
dec
clc
and
pop
in
push
pusha
int
and
pop
dec
inc
fsubrp
xchg
pushf
inc
inc
jmp
mov
jns
fnstsw
adc
and
shl
mov
mov
in
or
outs
pop
mov
sub
sub
mov
jmp
inc
dec
dec
ins
out
daa
dec
jmp
rol
xor
jle
retf
out
sbb
mov
cdq
jle
sbb
test
jne
jge
add
mov
push
push
clc
fst
clc
adc
sub
push
in
pop
pop
cmps
inc
xchg
sub
inc
cmp
jl
pop
call
loop
push
add
sbb
and
mov
inc
mov
push
aam
pop
add
ins
cli
aam
repnz
inc
cdq
fwait
add
dec
cmp
les
neg
add
ret
adc
cs
sbb
nop
jmp
cmps
sub
sbb
mov
inc
sbb
inc
sbb
mov
popa
cmp
add
jmp
stos
add
icebp
fist
pusha
or
fidiv
cdq
inc
or
add
sub
adc
jecxz
pop
lods
or
mov
cld
mov
add
ror
clc
xor
dec
dec
test
cmp
sbb
outs
loopne
push
loope
push
push
adc
jne
shl
je
out
inc
or
pop
mov
sbb
imul
add
cdq
jo
cmp
je
or
js
mov
aaa
adc
inc
ret
fdiv
dec
inc
inc
jo
sub
push
add
clc
cmps
jg
pusha
cmp
jmp
mov
add
je
pop
cmp
or
sbb
mul
adc
jb
ror
sub
sbb
push
aas
lock
mov
and
scas
or
sbb
cmp
push
out
mov
shr
sub
xchg
or
cmp
adc
dec
jp
mov
push
retf
shl
ret
adc
cmp
push
js
rol
xchg
(bad)
(bad)
aas
call
cwde
ret
mov
test
add
cmp
lds
test
xlat
cmp
(bad)
rcl
or
or
add
xor
pop
lock
test
test
lea
test
jne
push
adc
adc
sar
or
popf
inc
mov
inc
sbb
jp
pop
push
ret
mov
adc
jo
pusha
test
add
les
fst
push
aam
and
jo
xor
sbb
jbe
or
test
sbb
inc
in
cmps
jbe
outs
sbb
cmps
inc
jne
aad
jae
in
xor
mov
hlt
test
xor
adc
dec
push
js
sub
dec
lock
js
ja
and
mov
inc
adc
cmp
cmp
out
pop
xchg
in
ret
pop
dec
inc
sub
inc
jo
or
movs
mov
(bad)
rol
add
mov
adc
adc
or
and
dec
push
adc
sbb
add
int
rcr
adc
fisttp
retf
adc
aad
sbb
or
or
mov
push
fmul
adc
sbb
push
mov
neg
pusha
add
or
stos
adc
popa
int3
pop
push
xchg
pop
inc
out
sbb
adc
mov
jbe
add
lock
mov
adc
mov
std
inc
and
inc
mov
sbb
je
jmp
retf
arpl
push
sbb
add
sbb
jecxz
mov
in
(bad)
sbb
jb
cmp
add
cmc
int3
fnstcw
inc
pop
pop
push
pop
cmp
sbb
or
sbb
xchg
test
and
pop
xor
std
inc
mov
movzx
mov
adc
add
shl
or
rol
push
mov
adc
inc
nop
add
jo
jmp
ret
loopne
jmp
rol
xchg
clc
cmp
push
sbb
add
into
jle
jnp
xchg
mov
in
mov
rcl
pop
mov
sbb
add
adc
sub
outs
test
or
mov
adc
out
xor
add
or
xor
retf
adc
add
test
jge
loopne
jne
jmp
mov
arpl
sbb
jnp
push
mov
dec
jmp
ins
icebp
out
adc
pop
outs
mov
outs
xchg
xchg
retf
in
outs
sbb
idiv
add
test
pop
cmp
into
or
or
jne
(bad)
daa
xchg
jmp
call
xor
je
xor
cmc
lock
outs
and
je
adc
mov
and
je
stos
pop
loope
mov
sub
cmp
out
in
lea
imul
or
gs
addr16
sbb
adc
mov
dec
mov
aas
outs
les
dec
pusha
and
mov
pop
sub
xor
push
dec
gs
and
aaa
in
add
fcom
test
enter
in
cmp
xchg
jmp
xor
or
pop
pop
(bad)
push
sbb
mov
pusha
inc
ja
sti
lock
out
fadd
not
adc
inc
rcr
cmp
inc
mov
mov
sub
inc
rcl
enter
rol
outs
mov
sub
mov
jle
push
sbb
(bad)
ja
jmp
jmp
push
xor
imul
cmp
xchg
ds
sbb
or
add
bnd
or
mov
jmp
and
adc
xor
and
ficomp
inc
gs
add
das
outs
sub
cld
mov
data16
jae
pop
ins
pop
into
pusha
lock
jbe
push
dec
outs
je
xor
push
in
push
xchg
enter
outs
push
call
fld
outs
das
inc
push
or
pop
data16
jns
dec
pop
movs
sbb
les
jg
fcmovnbe
mov
outs
test
push
nop
test
pop
or
int
adc
and
std
inc
dec
ja
gs
pop
add
inc
add
push
add
fidivr
sahf
movs
push
retf
movzx
cmp
push
dec
inc
ds
push
push
push
mov
push
outs
or
or
dec
inc
outs
arpl
je
jb
mov
push
inc
data16
jb
popa
je
into
(bad)
push
cwde
pop
into
push
gs
data16
xor
add
aas
inc
add
dec
mov
fisubr
pop
add
pop
xor
sbb
fld
adc
imul
push
imul
sbb
pusha
pop
push
outs
push
jae
jnp
ret
dec
add
lds
movs
xor
fwait
mov
push
dec
data16
je
xchg
add
xchg
mov
dec
xchg
lds
ins
outs
scas
pop
dec
mov
lods
add
add
loope
(bad)
std
inc
test
pop
mov
jbe
pop
pop
add
push
jns
gs
cmp
add
pop
or
inc
stos
add
fiadd
add
adc
dec
jne
dec
cmp
add
add
lock
in
shl
jmp
or
inc
mov
fidiv
ins
les
pushf
push
clc
jb
mov
dec
jno
inc
adc
jg
mov
mov
push
js
push
into
enter
popf
push
imul
adc
add
xor
dec
(bad)
aad
mov
fisub
outs
addr16
pop
jbe
jnp
adc
jae
push
inc
cmp
or
je
xchg
aaa
in
data16
sub
outs
mov
sbb
ins
gs
push
outs
popf
push
cli
(bad)
jecxz
inc
cmp
fisubr
dec
ret
inc
cdq
movhps
push
call
pextrw
adc
cmps
inc
dec
push
data16
js
shl
adc
hlt
pusha
add
dec
inc
jae
jae
or
adc
push
adc
ins
add
fsub
and
les
ret
push
jns
sub
xor
or
jae
ins
gs
into
mov
sub
iret
add
or
gs
add
inc
ins
jo
jns
dec
xor
dec
pop
dec
popa
jae
ds
mov
dec
dec
dec
dec
jnp
inc
ret
and
imul
mov
jae
cmps
jae
lods
xchg
add
push
fidivr
add
mov
pop
mov
mov
inc
jnp
jl
aas
fsubr
lock
and
out
int
mov
and
inc
dec
inc
js
dec
imul
cmp
sbb
pop
or
pop
sbb
or
inc
jb
fs
imul
mov
popa
movs
add
movs
or
lock
push
sub
das
add
scas
sbb
es
das
cmp
jbe
push
call
hlt
xlat
push
mov
add
je
jnp
loope
lahf
xchg
push
mov
mov
add
mov
lahf
push
xor
adc
jae
push
je
imul
inc
js
or
or
and
(bad)
int
xchg
lods
out
xor
stos
jp
scas
movs
pop
push
inc
mov
push
into
psrlw
idiv
add
push
aam
or
adc
adc
in
int3
out
push
lods
call
pop
js
(bad)
xor
add
gs
popfw
or
mov
mov
mov
xchg
jnp
dec
or
bound
mov
mov
sbb
loopne
sbb
and
xor
sub
addr16
bound
popa
inc
mov
addr16
addr16
pop
adc
mov
mov
sub
sub
imul
and
imul
pop
jecxz
loope
inc
in
arpl
push
pop
jns
arpl
mov
push
sub
push
imul
gs
lock
ror
add
mov
jbe
rdmsr
out
je
aad
div
fnstsw
push
add
add
and
pop
pop
and
inc
xor
in
inc
xor
xchg
pop
lock
xchg
xor
push
jns
lods
jl
mov
jne
adc
xchg
loopne
out
int
les
push
je
mov
push
xchg
mov
pop
nop
add
es
xchg
loopne
loope
jb
sahf
mov
lahf
xchg
lahf
xor
sub
lahf
dec
or
push
lahf
neg
mov
(bad)
(bad)
mov
adc
inc
call
dec
call
lea
cmps
popa
sub
scas
add
adc
mov
das
push
jnp
adc
in
popf
dec
push
test
lock
fadd
cmp
popf
mov
iret
cmp
pushw
adc
sub
push
iret
dec
push
iret
xor
loopne
jbe
add
mov
out
inc
ret
xchg
inc
or
inc
jne
gs
xchg
pop
or
and
cs
clc
cmps
pand
add
xor
jne
punpckldq
pusha
cmp
mov
cmovg
inc
pop
and
call
js
pop
call
inc
call
es
stos
jne
pop
adc
xor
sub
dec
add
popa
and
push
mov
push
or
fdivr
inc
push
jle
es
adc
gs
xchg
add
(bad)
cld
adc
push
inc
sbb
rol
sbb
dec
fs
shl
leave
cmp
test
push
call
cmp
sub
mov
inc
mov
pop
leave
scas
cwde
mov
rcl
mov
jge
add
pop
in
xor
xchg
addpd
jge
adc
test
out
push
in
lods
sar
ds
mov
setnp
leave
leave
cdq
into
add
xor
lock
ret
ret
dec
lahf
mov
ret
dec
jne
bound
jp
fs
bound
jp
loope
jno
or
in
dec
mov
push
jnp
xor
imul
mov
adc
sub
call
lahf
call
dec
fwait
sbb
(bad)
fwait
test
lds
fwait
int
xchg
xchg
lds
adc
inc
xchg
adc
adc
movs
pop
lahf
movs
popa
out
fst
inc
push
push
or
xchg
cmp
gs
sbb
sbb
jle
inc
jae
outs
jne
ins
not
or
inc
push
lods
test
daa
loopne
xchg
jge
add
aas
ss
add
inc
add
fnstsw
das
das
dec
push
xchg
nop
sub
fdivr
pusha
xchg
dec
call
and
test
mov
pusha
pusha
sbb
push
popa
int3
mov
push
sub
(bad)
adc
jle
(bad)
ds
outs
push
jb
inc
sub
lock
xchg
sbb
adc
int
push
stos
push
inc
leave
add
push
add
arpl
jne
jb
jo
inc
loope
push
xor
sub
dec
lock
push
push
or
jbe
dec
bound
mov
pop
push
pop
and
out
sbb
ret
stc
and
add
inc
mov
add
es
retf
add
fbstp
mov
call
push
jl
sbb
lock
cmp
iret
ss
rol
add
arpl
inc
dec
xchg
or
and
(bad)
(bad)
in
fs
add
mov
mov
fist
into
lods
xchg
bswap
xor
pop
xchg
xchg
xchg
fldenv
call
and
scas
push
syscall
add
daa
out
aas
cld
cmovnp
loopne
mov
(bad)
or
cmp
mov
shl
scas
jg
cmp
das
dec
bound
arpl
pop
xchg
or
inc
push
adc
add
inc
adc
mov
scas
shl
push
sub
gs
dec
pop
clc
mov
mov
add
mov
adc
dec
fwait
or
fwait
push
push
push
and
in
sub
cmps
addr16
push
cmp
mov
fiadd
mov
inc
pop
fiadd
nop
push
mov
pusha
stos
aam
adc
dec
jae
retf
jmp
cmps
aad
test
test
or
cmps
xchg
je
hlt
shl
xchg
pop
ins
adc
inc
pop
lds
mov
ins
push
loop
daa
pop
fstp
sbb
jmp
data16
dec
cmp
test
mov
push
imul
ins
and
icebp
fiadd
leave
test
mov
mov
icebp
push
or
sbb
nop
sbb
mov
or
xor
xchg
fmul
sbb
inc
inc
loopne
or
sub
int
mov
adc
sub
dec
sub
sub
lea
inc
outs
jne
imul
sahf
xor
jo
jns
add
sbb
js
mov
xor
pop
adc
mov
add
hlt
xor
mov
add
pop
jno
aad
mov
arpl
push
add
xor
mov
xchg
jns
push
inc
xor
cmp
test
mov
inc
in
int3
mov
cmp
adc
ins
add
lock
fbld
push
push
xchg
pop
jo
mov
add
aam
mov
or
mov
out
and
aad
rcr
test
xor
pop
clc
das
mov
je
ror
mov
pop
fisubr
je
xchg
inc
inc
clc
pop
mov
into
repz
push
mov
mov
dec
wrmsr
(bad)
ss
cmovno
repnz
push
cmps
maskmovq
fnstenv
es
(bad)
test
pop
into
dec
mov
scas
ja
cmovne
pop
cmps
add
int
mov
or
test
pop
std
push
mov
adc
push
cmp
cmps
add
lea
mov
push
or
scas
add
pop
loopne
dec
adc
iret
sub
pop
or
xchg
les
cmp
neg
push
push
push
iret
mov
mov
sbb
iret
dec
shr
bswap
ret
cmp
sub
repnz
xchg
inc
adc
out
shl
add
xchg
sar
sub
dec
adc
push
sbb
mov
and
inc
pop
rol
or
rcr
dec
scas
sbb
(bad)
shl
cmp
int3
das
jmp
aaa
aam
sub
clc
into
jne
inc
jb
popa
jns
sahf
dec
in
sbb
outs
xor
loop
or
fst
fsubr
mov
or
nop
or
dec
int
lods
sbb
mov
mov
add
inc
cmp
dec
ret
and
pop
pop
inc
mov
(bad)
push
loopne
daa
add
dec
adc
sbb
fsubr
in
mov
aas
xchg
inc
ins
add
inc
lods
cld
inc
movs
std
fldenv
inc
fs
enter
pushf
add
mov
jae
inc
inc
ins
sahf
cmp
bound
add
nop
in
test
push
jb
jno
test
xchg
cmp
cmp
inc
jbe
fimul
jae
adc
xlat
jmp
pop
xor
and
aas
inc
punpckhbw
jmp
outs
pushf
add
scas
jnp
ret
push
js
sar
push
dec
mov
cwde
and
dec
neg
je
jno
adc
jb
fadd
jno
or
rcl
shr
outs
cdq
xor
or
pop
pop
retf
mov
pop
add
repz
mov
dec
jge
mov
add
push
jecxz
or
push
adc
or
dec
jne
cs
push
push
addr16
mov
enter
addr16
fsubp
addr16
sub
iret
dec
mov
sub
rcl
scas
es
xor
retf
adc
mov
mov
xchg
pop
stos
cmc
(bad)
add
shr
and
loope
pop
push
sbb
or
dec
das
jmp
sub
loope
sub
add
pop
and
add
or
mov
pusha
mov
cmc
aaa
mov
pop
mov
add
nop
or
scas
ja
cmps
push
mov
push
xchg
mov
adc
movs
rcl
pop
arpl
cmp
adc
cs
sub
pop
add
add
dec
xor
sar
cmp
pop
push
mov
scas
shl
outs
outs
or
pop
fisub
push
lea
adc
add
sbb
shl
add
sbb
pop
cmp
sbb
out
arpl
mov
mov
ret
sahf
inc
jbe
setno
daa
test
or
jae
dec
loopne
adc
xor
and
clc
outs
inc
push
mov
push
xchg
jl
movs
shl
xchg
out
add
icebp
daa
popf
cmps
and
cmp
fistp
xor
jge
dec
cmp
dec
js
xchg
cmp
shr
sbb
add
dec
pop
lahf
mov
xlat
cmp
mul
popa
push
outs
push
pop
shl
cwde
mov
ins
jo
js
int3
mov
and
pop
adc
mov
sbb
ins
je
adc
xchg
call
shr
mov
in
dec
outs
or
inc
jmp
and
dec
xchg
mov
add
jo
repnz
or
push
or
xchg
pop
scas
add
xchg
add
int
pusha
jae
add
out
ins
out
sahf
mov
push
scas
sbb
lds
dec
xchg
cld
sub
or
clc
xchg
daa
jo
arpl
push
mov
sbb
aam
int
lea
addr16
pushf
mov
jecxz
stc
push
adc
pusha
inc
and
or
xor
jno
call
or
push
cmp
imul
mov
clc
and
aaa
adc
push
cwde
fisub
xchg
xchg
dec
out
sub
mov
and
cmp
das
pop
pop
mov
pop
add
jne
mov
loopne
add
in
hlt
push
mov
and
pop
jo
fidivr
mov
in
cmp
sbb
nop
push
jbe
fisubr
add
les
push
fcomp
push
fwait
jnp
mov
and
xchg
and
add
push
xor
aam
mov
pop
sbb
lock
inc
popf
loope
jo
sub
cli
sub
sub
push
add
mov
mov
out
push
mov
push
dec
lock
push
inc
cs
sbb
jno
push
retf
mov
cmp
or
pushf
movs
enter
dec
dec
dec
inc
jle
dec
xchg
daa
daa
and
xchg
xchg
xchg
ss
jg
leave
leave
enter
cmps
pop
cdq
fs
leave
shl
cmps
fs
out
shr
sbb
jbe
fst
pop
dec
ret
fimul
push
or
inc
push
sbb
es
inc
dec
mov
xor
add
inc
push
pop
or
push
jnp
sub
leave
out
jno
out
test
xor
daa
sub
add
jp
add
xor
es
cmovns
(bad)
aas
and
les
pop
and
push
dec
jle
dec
mov
adc
es
jg
push
je
xor
mov
sbb
and
xchg
cmp
add
lock
popa
outs
sub
dec
and
lods
outs
bound
pop
pop
or
add
fidiv
adc
jl
mov
push
dec
pop
mov
add
add
pop
push
or
inc
aam
or
ins
movs
adc
push
mov
or
out
xchg
and
das
leave
call
test
call
jle
pop
xor
or
add
jae
imul
add
iret
jb
test
rol
add
push
inc
cmp
inc
cmp
add
fidiv
inc
add
add
mov
mov
adc
fild
in
push
dec
add
inc
js
jo
add
sbb
ins
xchg
cdq
cwde
cmp
add
nop
cwde
pop
pop
mov
add
mov
fdivr
xchg
cdq
jge
js
xor
ret
loope
loop
or
les
gs
test
pop
out
and
jmp
fsubr
cld
(bad)
cmp
iret
gs
loopne
rol
add
xchg
dec
push
xor
jo
sar
dec
je
loopne
aaa
add
je
imul
rcl
je
loopne
dec
push
xlat
adc
jbe
pop
push
hlt
imul
add
cdq
sub
and
or
xor
jns
sahf
cmp
add
ins
or
sbb
xchg
rcl
adc
(bad)
pusha
(bad)
(bad)
or
add
cmp
or
loop
jns
xor
adc
mov
dec
mov
popa
pop
add
pusha
pop
sub
fcom
test
push
jb
ins
test
(bad)
rcl
test
sbb
jno
xchg
sub
cmp
push
loopne
(bad)
out
mov
add
add
pop
jbe
ja
inc
mov
or
xor
pop
sbb
push
outs
add
fs
call
sbb
sub
sub
test
sbb
dec
cld
add
xchg
push
popa
inc
arpl
jns
lea
test
inc
inc
xchg
and
cmp
sahf
fwait
inc
push
mov
push
cmp
push
pop
dec
rcr
pop
sbb
ret
test
fld
add
pop
push
pushf
sbb
inc
pop
call
add
jns
mov
les
xor
movs
push
lods
sub
sar
sub
and
jbe
aam
pushf
push
add
adc
frstor
movs
das
ret
xchg
cmp
movs
xlat
mov
out
dec
or
jne
cmp
pop
icebp
aaa
inc
adc
daa
lahf
ret
rcl
ins
push
xchg
test
dec
loope
pop
stos
cmp
pop
sahf
aaa
cwde
aad
mov
dec
jo
xchg
cmp
lahf
das
sbb
add
dec
pop
mov
dec
and
scas
pop
fld
mov
and
xor
sub
push
sub
and
mov
mov
pop
push
nop
add
pop
add
in
mov
add
mov
jmp
scas
or
and
and
adc
cmc
outs
mov
popa
cmps
fcom
mov
add
cmc
test
dec
scas
push
sbb
push
push
call
jnp
xchg
push
or
and
pop
loopne
adc
(bad)
push
add
mov
fldcw
pop
fsub
lock
xor
sub
xor
test
pop
sbb
jmp
movs
push
fadd
mov
pusha
sub
pop
pop
mov
cmp
add
add
mov
push
adc
push
sub
mov
sahf
and
jge
add
mov
sub
das
inc
fs
(bad)
out
fdivp
adc
clts
sub
push
inc
adc
pop
scas
stos
das
les
stos
(bad)
xor
pop
mov
jae
push
push
mov
sub
icebp
cmp
mov
add
mov
push
mov
scas
jne
loopne
push
cs
push
daa
mov
pop
xor
xchg
xchg
xchg
daa
adc
enter
mov
xchg
in
in
retf
pop
mov
xchg
jb
repnz
sbb
jb
iret
repz
cmp
clc
xor
pop
jge
std
sbb
mov
jne
lods
mov
sbb
sub
mov
pop
jb
aad
in
dec
dec
in
sub
cmp
cwde
dec
mov
inc
mov
push
or
xor
popa
rcr
mov
push
xchg
cmps
xor
das
add
shr
pop
mov
fwait
test
js
sbb
xor
jle
adc
lods
xchg
pop
push
jge
add
bound
sbb
xor
adc
jo
outs
or
mov
jbe
adc
xor
ja
sub
shl
xor
inc
sub
ret
inc
cmp
add
mov
or
mov
push
ins
push
xchg
and
das
leave
call
enter
(bad)
pop
adc
lea
loopne
or
xor
adc
je
xchg
ins
iret
dec
add
xor
inc
adc
mov
xor
push
mov
enter
stos
adc
data16
xchg
dec
add
mov
or
push
lods
jnp
popf
dec
add
xor
add
outs
xor
mov
or
xor
lods
(bad)
mov
xchg
jbe
push
xor
pusha
fnstenv
inc
push
dec
imul
cmp
dec
add
cmp
add
aad
mov
(bad)
adc
xlat
xchg
push
jo
fiadd
push
sbb
push
push
xor
mov
push
adc
xor
test
dec
xor
test
fidiv
(bad)
int
mov
lahf
cwde
adc
dec
mov
or
dec
rcl
xchg
dec
pop
dec
sbb
xor
sbb
inc
xor
xor
ins
xor
adc
dec
xchg
sub
sbb
mov
xchg
push
mov
sub
cmp
add
imul
sub
jno
pop
adc
add
dec
imul
(bad)
aad
je
imul
ja
mov
or
pop
mov
adc
pusha
xchg
xchg
cwde
jne
jne
(bad)
mov
mov
or
mov
mov
test
movs
cmp
ret
(bad)
(bad)
call
mov
fld
add
fstp
fwait
mov
mov
call
pop
pop
ret
add
push
ss
inc
mov
mov
ret
xor
fstp
fld
pop
pop
pop
ret
xchg
call
ror
rcl
mov
call
mov
mov
mov
or
cld
push
mov
cmp
jne
out
mov
cmp
jb
jmp
jl
daa
adc
jbe
sbb
pop
lock
lea
push
push
cmps
mov
ss
jg
iret
les
mov
xchg
mov
test
fdivrp
xlat
out
jbe
pop
pop
rcl
push
sub
aam
dec
lock
mov
xchg
sbb
(bad)
jg
ret
mov
dec
jne
push
xchg
push
push
push
mov
mov
or
push
adc
mov
std
jg
les
cmp
ja
sub
out
mov
stos
fdivr
and
mov
add
lods
add
jo
loop
sub
xor
rcl
pop
movs
xchg
rol
rol
sbb
popf
cmps
mov
mov
mov
add
mov
nop
hlt
pop
or
push
ror
xchg
xor
clc
repz
dec
push
push
fs
adc
jg
in
xor
cdq
push
push
adc
lea
xor
fistp
add
adc
movs
mov
mov
sti
xchg
jg
and
int3
sbb
popf
mov
push
cmp
pusha
adc
xchg
pop
mov
ficomp
fistp
sub
adc
jb
mov
mov
xchg
xchg
bound
sbb
pop
mov
lea
cli
inc
mov
movs
mov
or
xchg
jmp
adc
aas
jne
cmp
xor
jmp
leave
es
add
push
cmp
push
pop
int3
or
and
mov
add
sub
outs
cmove
cld
cmp
pop
fldz
push
jge
add
and
adc
sbb
and
rol
and
jne
and
add
sub
and
pop
add
add
sbb
fucomi
imul
imul
ret
in
out
jmp
pushf
in
sub
jmp
out
inc
in
cli
mov
rcr
fld
clc
cmp
xor
sub
rol
addr16
sub
adc
xchg
and
nop
retf
lds
js
cmp
jae
adc
cdq
and
mov
pop
push
je
or
xor
lds
adc
or
clc
fild
in
(bad)
popf
cwde
xor
jo
ins
add
add
test
cmp
dec
push
clc
(bad)
in
mov
mov
inc
cdq
jl
jbe
(bad)
in
mov
lea
mov
es
and
dec
shl
sbb
das
xchg
jbe
scas
shl
clc
cmp
lea
aaa
mov
aaa
mov
ds
mov
xchg
popf
into
mov
ret
fist
add
dec
pop
push
bound
add
mov
add
outs
push
aaa
inc
fstp
jl
add
or
sbb
je
push
je
mov
outs
adc
cs
push
outs
imul
mov
dec
or
inc
sbb
adc
gs
popa
ins
gs
xchg
add
inc
jl
dec
inc
inc
or
ins
mov
add
loopne
lods
jmp
imul
push
push
add
or
not
js
mov
jle
into
pop
lods
movs
or
pop
inc
mov
sar
add
inc
ret
fimul
or
in
or
and
xor
cs
nop
(bad)
outs
gs
rol
xor
(bad)
pusha
dec
inc
pop
ror
aaa
adc
sub
mov
cmp
rcl
mov
push
adc
int3
(bad)
push
mov
sub
fcomp
xor
jns
shl
into
sub
push
retf
sbb
ror
outs
xchg
repnz
inc
push
adc
pop
jmp
cmp
mov
or
xor
lock
cmps
dec
ins
mov
push
push
or
add
clc
les
cmp
mov
shl
nop
jne
adc
mov
mov
lods
inc
push
sub
xchg
jmp
jle
mov
push
sbb
dec
cld
inc
add
or
(bad)
scas
xchg
outs
lea
or
(bad)
mov
sbb
or
mov
dec
call
jg
or
loop
mov
push
fs
fadd
es
jp
sbb
add
adc
mov
test
jmp
sahf
ins
rcr
xchg
fimul
inc
call
test
dec
mov
cld
xchg
cmp
js
ins
mov
mov
inc
sbb
mov
mov
add
loopne
out
push
cmp
jg
push
mov
aaa
fist
add
cmp
ret
xor
sbb
mov
call
dec
mov
push
mov
bound
bound
dec
mov
fsubp
je
mov
out
push
ret
adc
cmp
jne
mov
inc
cmp
pop
fistp
outs
clc
clc
add
rcl
(bad)
jle
xchg
sub
lock
imul
lock
push
xchg
shl
inc
xor
cmp
jmp
lods
pop
adc
and
test
pop
test
push
cld
cmps
jmp
test
dec
out
xor
and
inc
test
or
mov
imul
inc
mov
cmps
mov
iret
lea
pop
sub
adc
xor
push
add
jne
retf
loop
mov
rcr
mov
pop
movs
and
cmp
hlt
or
retf
enter
test
je
jb
fild
xor
outs
xor
ret
pop
stos
jne
push
js
jo
jmp
adc
dec
je
push
adc
add
sbb
movlps
sub
sbb
lea
mov
data16
xor
jbe
and
sbb
jl
inc
rol
adc
cmc
(bad)
in
shr
clc
mov
xchg
add
and
int3
clc
aaa
dec
cmp
cmps
mov
mov
cmp
push
xor
je
jmp
adc
dec
adc
addr16
ret
ds
dec
mov
jg
pop
inc
pop
fcom
jne
cmp
xchg
in
sahf
scas
push
cmp
mov
(bad)
js
or
dec
in
push
mov
jns
jnp
daa
mov
or
ret
pop
fs
pop
mov
ins
cmc
aaa
(bad)
jns
daa
je
jne
mov
jmp
aaa
mov
or
mov
pop
(bad)
add
add
(bad)
in
mov
or
cli
lock
jnp
xor
jne
pop
mov
(bad)
sub
(bad)
jbe
(bad)
idiv
sub
hlt
push
pop
push
mov
push
mov
mov
xchg
xor
jg
retf
call
mov
mov
jle
sub
push
add
lea
push
xor
fdiv
mov
cmp
scas
lock
retf
call
inc
xchg
cmps
add
ss
xchg
cmps
push
push
hlt
push
jne
and
push
or
ds
loopne
mov
test
ss
xor
xchg
loope
ss
fld
rcl
sbb
dec
outs
jo
sbb
jb
jb
shl
or
pop
sbb
sub
inc
cmps
pusha
mov
add
mov
xchg
push
leave
stc
mov
pusha
fwait
mov
lea
(bad)
adc
mov
les
(bad)
aam
sbb
faddp
cmp
jecxz
movd
xchg
(bad)
ret
out
aaa
jnp
push
jge
mov
sbb
sbb
add
pushf
std
jl
add
mov
enter
or
sub
push
jge
loopne
lock
inc
into
lods
pop
ret
jnp
loopne
add
call
lds
xchg
and
jo
loopne
mov
and
mov
aad
push
pop
lock
jnp
repnz
sub
sbb
inc
outs
ds
jle
push
es
and
adc
call
sub
arpl
push
jge
add
stc
jle
sub
fsubr
jbe
or
xor
and
xchg
test
push
cmp
jae
test
call
sar
cmp
test
repz
xchg
add
fsub
adc
call
fsub
loopne
cli
push
lea
xchg
(bad)
mov
mov
or
jne
inc
and
jb
in
mov
fldenv
or
shr
cmp
jae
std
jbe
shl
movs
add
push
xor
and
or
imul
cmp
cs
jle
dec
pop
xor
mov
dec
outs
lock
test
xor
push
mov
jae
add
aam
xlat
sbb
or
jae
jae
ins
inc
cs
fwait
add
dec
lahf
bound
jb
int3
sbb
adc
xor
lds
sar
add
sub
clc
mov
add
and
push
icebp
shr
cli
lock
nop
or
xchg
ficomp
add
sub
enter
and
daa
les
les
imul
scas
nop
rol
add
nop
or
dec
outs
or
ds
inc
imul
clc
mov
sub
or
aas
sub
sbb
shld
shl
or
cmp
push
and
adc
pop
cwde
and
adc
pop
jle
in
outs
jl
cmp
daa
(bad)
in
icebp
mov
lods
ror
dec
or
call
and
ror
lea
lea
(bad)
dec
or
push
(bad)
xchg
or
xchg
push
sub
inc
mov
adc
xor
jb
daa
(bad)
or
jl
and
mov
sub
call
add
mov
mov
mov
cmc
sbb
shl
push
fst
cmp
out
dec
fcom
sbb
loope
mov
inc
mov
lods
dec
push
or
jl
mov
add
mov
das
inc
or
dec
scas
jge
jnp
retf
or
and
inc
sub
mov
loop
bound
mov
dec
pop
add
mov
icebp
lea
bound
jbe
xchg
cmovne
pop
jp
retf
mov
dec
xor
mov
int3
outs
cmps
dec
or
adc
dec
lock
cmp
je
lea
mov
mov
xor
mov
inc
outs
mov
je
sbb
sbb
sbb
mov
pop
adc
mov
push
sbb
cld
and
fucomi
fcomip
xchg
jl
jle
adc
out
ret
cmp
add
inc
movs
mov
popa
(bad)
pusha
sbb
sbb
and
lea
out
pop
retf
adc
call
adc
adc
aas
es
push
mov
mov
dec
iret
inc
push
cmp
fcos
mov
(bad)
in
pop
mov
mov
out
js
fdiv
in
out
inc
ret
sar
cmp
jnp
test
je
cmp
add
loop
cs
jbe
fdiv
push
push
and
push
das
fwait
cld
jmp
arpl
jns
adc
pop
mov
int3
jo
xor
xchg
sbb
je
ins
sbb
cmp
cwde
inc
jno
inc
xlat
sbb
jns
xchg
scas
inc
je
mov
add
ss
ins
rcr
or
or
and
add
adc
aad
add
fcomp
add
add
pop
adc
or
adc
inc
je
inc
mov
mov
nop
and
or
push
mov
pop
or
mov
sbb
pop
ficomp
(bad)
sti
xchg
jp
test
add
add
jnp
jnp
inc
add
sbb
sub
int3
xor
push
sbb
fisttp
mov
jb
inc
xchg
mov
scas
sahf
fsubr
dec
rol
pushf
pusha
aad
fsubr
push
fmul
popa
popa
cmps
mov
fcomp
aas
push
out
xor
ror
cmps
lods
enter
add
fsub
sub
mov
addr16
sub
mov
in
xor
popa
mov
mov
sbb
pop
add
jb
gs
pusha
push
jp
pop
push
aam
sahf
adc
dec
push
pop
daa
ror
or
and
fld
xchg
ins
jo
aaa
ror
dec
mov
inc
mov
xor
inc
cli
mov
add
aas
push
ret
mov
add
nop
xor
jg
lock
xor
add
add
fadd
adc
inc
push
inc
add
pusha
inc
mov
aas
add
inc
sub
cmp
add
add
mov
jecxz
mov
xor
add
jo
lea
jne
or
mov
scas
add
je
pop
xchg
rcl
loope
into
pop
pop
xchg
xchg
inc
sbb
mov
pop
clc
frstor
ret
loope
sti
fmul
add
sub
lock
pop
out
or
je
sub
jne
lds
sar
pop
je
sbb
mov
pop
je
call
or
inc
mov
xchg
popa
nop
push
and
mov
dec
ja
stos
jl
and
fdivr
icebp
xchg
push
jle
(bad)
push
push
xor
retf
dec
mov
xor
outs
dec
push
adc
and
das
push
jo
dec
cmp
cmp
mov
idiv
es
mov
xor
fabs
pop
inc
mov
add
push
or
sahf
mov
cli
ja
or
or
aaa
test
jmp
clc
or
or
je
jmp
(bad)
stc
mov
xor
pop
jmp
ret
and
push
jmpw
rcl
xor
jg
bound
jb
int
je
mov
cmp
sbb
fcomp
jb
or
xchg
mov
loopne
push
and
ja
push
in
mov
cmp
mov
cmp
(bad)
jb
aam
xlat
xor
push
add
jmp
adc
pop
mov
aam
and
mov
sub
add
inc
push
add
mov
sar
mov
cmp
xor
fsubrp
rcl
mov
test
jb
dec
fsub
sbb
xor
add
and
das
and
pop
arpl
cmp
rcl
fcom
sub
out
mov
adc
adc
xchg
sbb
jo
pop
aam
jb
dec
push
mov
shl
outs
mov
xor
add
jo
mov
push
dec
mov
push
adc
push
loope
or
or
and
sbb
inc
mov
(bad)
retf
sub
mov
push
cdq
adc
test
xchg
pop
leave
adc
or
add
loopne
rcr
adc
and
mov
outs
cld
test
test
push
cmc
mov
adc
pop
mov
mov
inc
inc
push
add
jmp
stos
pop
js
cmp
or
mov
ror
mov
jg
cmp
adc
pop
pop
neg
mov
les
xor
inc
fmul
add
inc
or
xor
jecxz
dec
loopne
int
pushf
dec
jle
xchg
hlt
or
xor
fdivr
in
or
ss
pop
sub
mov
pop
aam
mov
pop
xchg
cwde
cmp
pop
(bad)
cmp
fwait
jl
call
loopne
lea
ds
add
out
sbb
inc
ja
fist
comiss
scas
sahf
jecxz
stos
push
add
(bad)
in
(bad)
and
adc
arpl
pop
(bad)
xor
dec
shr
inc
hlt
push
ins
leave
ins
mov
and
pop
mov
mov
sti
fstp
fwait
stos
mov
stos
cmps
fld
lahf
push
shl
mov
adc
mov
in
pushf
ins
popf
or
push
push
cld
lods
push
cmp
mov
mov
mov
cmp
fistp
fbstp
or
or
call
ret
adc
add
xor
xchg
aas
mov
sub
ss
mov
xor
sbb
xor
lock
add
jmp
daa
fld
out
push
mov
cmp
jo
fsub
fs
inc
xor
cmp
jg
add
adc
jne
or
popa
mov
jne
adc
jmp
xor
jno
adc
shl
pop
xor
inc
fsubr
or
rol
data16
in
mov
sbb
(bad)
sbb
cmps
mov
mov
adc
pop
jb
pop
fst
push
shl
test
shr
jns
jmp
lods
inc
push
popf
sbb
pop
hlt
mov
sbb
iret
mov
cld
in
adc
inc
shl
mov
std
inc
mov
das
cmp
mov
cmp
push
(bad)
xchg
xlat
rcr
clc
lock
arpl
aaa
jg
fstp
xor
cmp
jge
mov
into
xor
mov
inc
inc
add
xchg
add
out
or
shl
hlt
hlt
gs
push
dec
mov
xchg
dec
test
jl
inc
adc
cwde
pop
ror
aam
test
pop
pushf
lods
jne
ror
(bad)
fsubrp
push
inc
dec
jne
xchg
mov
lods
sbb
movs
stos
popa
retf
scas
sbb
adc
push
test
shl
pop
icebp
jmp
(bad)
mov
mov
scas
mov
test
jl
dec
lods
add
push
outs
cmp
lods
mov
dec
jne
inc
sub
rcr
pop
mov
test
xor
sbb
xchg
cli
jl
cmp
add
inc
sbb
sub
ficom
pop
retf
loopne
xchg
cmp
in
sbb
sbb
jmp
fxch
gs
mov
adc
xor
pushf
xor
push
jbe
sahf
dec
sbb
push
push
or
dec
jge
seta
les
sub
pusha
xchg
xchg
sbb
popf
inc
sbb
jp
inc
lahf
out
push
pop
mov
push
fs
and
and
into
imul
loope
inc
(bad)
fiadd
mov
push
pushf
(bad)
div
lock
rol
jnp
cli
adc
cmp
sahf
sbb
into
dec
inc
lahf
pop
pop
jnp
jle
sub
sar
sub
int
sbb
pop
xlat
iret
jnp
pusha
push
fisttp
and
gs
in
and
xchg
xor
push
ficomp
fsubr
inc
call
or
(bad)
jno
and
or
adc
es
scas
add
pop
jne
mov
cli
push
rol
dec
or
inc
xor
cmp
stos
mov
or
mov
lds
jne
adc
fisubr
repz
(bad)
clc
mov
jl
neg
inc
push
das
rol
rcl
sbb
add
icebp
jg
(bad)
and
jnp
cld
ss
push
push
xor
mov
adc
mov
(bad)
adc
ds
fst
sbb
(bad)
loop
mov
pop
out
xchg
cmp
sbb
test
adc
pop
out
fisttp
dec
test
jnp
fsub
clc
jnp
movs
sub
lea
in
mov
jae
dec
mov
mov
jmp
xor
push
(bad)
ja
ins
pusha
mov
ror
jne
in
pusha
psadbw
jnp
test
jne
dec
in
lock
jne
cmovs
mov
adc
cmp
jb
or
xchg
rcl
or
fidivr
jmp
mov
inc
push
or
add
jns
xchg
jo
add
inc
jo
mov
push
xchg
js
add
enter
rcr
sub
push
in
fimul
inc
jge
or
fcmovnb
xor
mov
push
mov
jmp
fistp
(bad)
lods
bound
in
push
jno
mov
std
loop
inc
or
mov
sti
pop
mov
shr
add
ret
jmp
aad
adc
or
adc
sub
push
loopne
lea
or
icebp
cli
sub
sbb
pop
jno
xchg
dec
inc
bound
(bad)
jae
inc
xchg
mov
mov
hlt
add
cld
ss
test
jg
je
outs
xchg
bound
or
je
add
push
or
or
je
sti
imul
jmp
inc
adc
je
or
je
jmp
jmp
imul
fnsave
xor
jl
sbb
jae
int
sbb
add
jne
mov
or
pop
shl
pop
gs
add
ja
jle
leave
sti
popa
rol
mov
out
xchg
mov
icebp
and
fadd
jne
pop
ins
adc
add
in
push
and
cmp
std
add
out
push
imul
add
(bad)
in
in
je
cmp
fidivr
push
js
rol
pop
rcr
mov
repnz
add
rcl
inc
or
or
and
and
mov
retf
mov
clc
or
push
xchg
mov
cmps
ret
and
add
imul
or
je
call
add
or
dec
test
sub
mov
push
call
rol
mov
and
enter
mov
scas
inc
or
pop
fstp
inc
cld
and
(bad)
repnz
cmovl
add
jne
mov
adc
data16
dec
int3
adc
cmp
jmp
test
xor
xor
std
sub
xchg
lahf
jae
shr
jae
sbb
aad
xchg
stos
fidivr
aas
sub
pop
mov
push
stos
cmp
cld
adc
(bad)
dec
pop
add
sbb
test
cmp
jne
inc
cmp
mov
(bad)
cwde
inc
adc
mov
sub
push
inc
jne
mov
mov
adc
fmul
in
add
retf
stc
xchg
in
aaa
or
jo
and
add
inc
jmp
mov
dec
aam
dec
cmp
sbb
mov
outs
jle
add
or
test
or
aas
and
and
mov
inc
push
mov
inc
sbb
stos
popf
and
adc
(bad)
in
ret
ss
cmp
fsub
add
add
ret
jbe
jae
pop
arpl
jmp
(bad)
lock
leave
dec
retf
mov
inc
add
sbb
pop
jl
movs
aad
vpackuswb
sub
jecxz
test
mov
fwait
and
or
sbb
je
dec
sub
cmp
and
jmp
shl
dec
je
or
inc
mov
je
dec
je
jmp
add
(bad)
pop
call
mov
xor
out
stos
or
or
or
and
sub
ja
ret
cs
dec
hlt
aad
shl
xor
mul
stos
into
(bad)
sbb
and
ret
jbe
jmp
mov
push
inc
or
stc
nop
mov
mul
mov
test
arpl
jmp
in
in
add
ss
add
jle
push
xchg
es
or
(bad)
sbb
sbb
jnp
push
dec
pusha
nop
and
dec
cmp
inc
lea
mov
in
sbb
int
mov
nop
out
push
mov
sub
lock
sar
xchg
cmp
(bad)
adc
dec
shl
mov
pop
push
fcomp
mov
call
xchg
lea
ins
pushf
nop
add
inc
or
inc
or
mov
xchg
dec
xchg
xor
das
and
sub
je
add
sub
jb
sub
xor
push
retfw
inc
test
and
push
xchg
cmc
mov
test
mov
cdq
adc
add
dec
adc
push
sbb
xchg
xor
push
mov
js
inc
dec
jne
xchg
cmp
cli
push
jp
(bad)
push
sbb
or
cmp
add
jnp
fild
add
or
popf
sub
push
pusha
jge
push
cmp
sbb
cmp
test
dec
pop
fwait
xchg
arpl
pusha
cs
pop
mov
int3
shr
mov
cmps
sub
mov
jno
and
pop
cwde
in
test
cwde
ss
daa
adc
sub
cmp
gs
add
aaa
daa
lods
or
jnp
mov
sbb
inc
fcomp
nop
mov
mov
adc
jo
or
sbb
call
rol
pop
cmps
in
loopne
popa
inc
aaa
mov
sbb
push
outs
out
js
add
in
push
into
pop
imul
jo
inc
or
or
xlat
aas
es
adc
add
add
jmp
inc
pop
adc
add
inc
and
mov
push
sub
jge
mov
adc
pop
push
lods
mov
sbb
outs
sbb
ror
jg
or
mov
lods
push
loope
in
idiv
data16
jmp
lds
mov
movs
jae
mov
div
add
push
(bad)
push
jl
xlat
and
daa
inc
mov
aaa
in
shr
pop
lds
ror
mov
dec
cmp
out
pusha
pop
inc
jae
jmp
loopne
pop
mov
adc
or
or
pop
mov
ficom
push
xor
cmps
ja
test
adc
adc
in
or
pop
or
(bad)
adc
cmp
mov
add
add
ds
dec
mov
mov
and
out
xchg
mov
fild
or
push
es
fadd
stos
inc
or
inc
out
inc
in
popa
jo
or
pop
add
inc
cld
mov
pop
inc
pop
stos
and
sbb
cmc
cmp
mov
jp
dec
lahf
mov
mov
repnz
ror
adc
pop
pop
mov
cwde
mov
pop
add
pop
out
pop
ret
mov
pop
pop
out
inc
fdiv
or
push
add
lahf
ret
pop
add
inc
ret
sbb
add
jo
add
add
sub
out
out
test
add
adc
adc
jecxz
cmp
lods
pop
sub
lock
mov
nop
clc
idiv
push
add
and
popf
add
push
adc
xchg
test
add
xor
inc
popa
sti
inc
jg
loopne
pop
and
xor
mov
das
jmp
jg
jecxz
pusha
add
adc
test
dec
(bad)
or
mov
cmp
je
shl
cld
push
dec
cmp
rcr
add
dec
lock
hlt
or
cs
mov
mov
mov
xchg
pop
pop
(bad)
fidivr
jae
aas
and
or
pop
hlt
inc
push
fdiv
pop
pusha
and
mov
lock
lock
sub
loop
mov
ss
or
add
push
int3
inc
add
je
mov
lock
loop
fidivr
dec
push
loop
and
or
lock
ror
js
in
or
pop
inc
retf
sub
sbb
xchg
and
adc
fucom
mov
and
jl
fiadd
xor
push
inc
f2xm1
cmp
retf
pop
mov
inc
or
sahf
out
sbb
add
mov
mov
adc
add
loope
sbb
lea
add
sbb
nop
sbb
sar
sbb
cmp
and
imul
push
dec
mov
add
mov
in
clc
jo
or
or
mov
mov
push
push
xor
cld
cmp
jle
pop
add
mov
and
adc
lock
adc
push
cmp
adc
(bad)
pusha
(bad)
lock
jb
lock
pushf
sbb
jnp
or
std
ds
clc
xor
xor
mov
mov
in
loopne
dec
jl
popf
xchg
ins
add
and
in
cmp
or
push
les
push
daa
rol
and
fidivr
mov
shl
clc
sbb
pop
cdq
pushf
int3
nop
ficom
scas
test
mov
popf
ja
hlt
push
jle
je
(bad)
rcr
xor
dec
lahf
sbb
mov
push
mov
inc
fnstcw
arpl
popa
or
and
sbb
mov
shr
pop
clc
lea
aam
push
jmp
inc
xor
add
(bad)
int
call
mov
ret
les
sub
sbb
jge
in
add
adc
imul
hlt
add
rol
(bad)
fld
sub
jle
out
jmp
mov
mov
pop
and
or
jo
mov
or
push
loop
mov
jmp
dec
adc
sub
and
ja
lock
pop
adc
jl
cmp
or
adc
adc
arpl
adc
push
dec
add
sti
xor
push
nop
xor
xlat
adc
mov
and
sub
xor
jns
aam
in
icebp
jnp
mov
test
jne
jns
mov
aas
sbb
fs
mov
out
fist
add
and
sbb
hlt
jae
lahf
arpl
jnp
mov
fsubr
mov
adc
inc
pop
fsub
ja
dec
xlat
pop
xchg
outs
ror
pop
push
xor
mov
dec
add
sub
jle
xor
sbb
in
lock
cmp
dec
pop
mov
lea
xchg
pop
sub
outs
add
xchg
push
push
pop
je
popf
sar
fmul
iret
aas
sbb
inc
pop
mov
cmp
xchg
mov
fiadd
pop
adc
or
sbb
or
fisttp
dec
push
jo
push
test
push
mov
and
jmp
jo
mov
push
sti
cmps
pusha
je
div
mov
pusha
pop
push
jne
nop
cmp
pop
and
call
pop
ins
jns
or
jle
add
cli
mov
fcomp
pandn
cmp
fwait
or
std
adc
pop
jl
inc
(bad)
xlat
inc
cld
in
push
or
mov
xchg
test
cmp
(bad)
loop
cmp
mov
xchg
push
push
inc
push
sub
dec
jg
dec
and
mov
xor
test
pop
mov
dec
push
imul
cwde
(bad)
and
adc
ss
mov
push
sub
js
mov
(bad)
and
(bad)
adc
sbb
(bad)
fild
(bad)
and
repnz
movs
les
cmp
(bad)
cmp
mov
inc
daa
or
call
jnp
icebp
mov
test
adc
mov
sub
addr16
pushf
jo
das
lock
jmp
or
mov
test
daa
push
add
aas
(bad)
push
enter
add
push
aad
or
push
add
(bad)
std
je
loope
daa
push
ds
loopne
mov
stos
test
(bad)
daa
out
sbb
lods
and
mov
call
and
xor
jo
mov
dec
popa
(bad)
into
or
pusha
or
cmp
(bad)
ss
or
aaa
(bad)
mov
(bad)
dec
je
and
popf
(bad)
loopne
xchg
pop
mov
(bad)
shl
jo
ror
test
sbb
ror
test
(bad)
pop
adc
cmp
(bad)
jb
mov
enter
jno
cs
enter
(bad)
or
adc
add
lahf
inc
cmp
xchg
adc
vmptrst
mov
scas
dec
inc
pop
je
and
je
inc
dec
outs
add
mov
sub
sbb
add
mov
pop
xchg
in
retf
mov
popf
fisttp
adc
iret
hlt
loopne
cmp
(bad)
dec
iret
fisttp
cwde
call
jnp
mov
je
adc
inc
cmp
ss
and
push
jl
mov
or
pop
outs
idiv
lea
dec
cmp
jg
mov
sar
fstp
mov
push
call
pop
imul
lock
inc
jle
push
add
dec
clc
cdq
add
xor
ror
(bad)
push
dec
cmp
adc
dec
mov
inc
jne
xchg
adc
add
inc
test
dec
loopne
shr
pop
lock
jg
mov
jecxz
(bad)
lock
shr
add
adc
mov
adc
mov
call
lock
add
lea
jmp
popa
in
data16
sbb
je
lds
sbb
mov
mov
adc
loopne
neg
xor
sub
sub
pop
stos
push
test
push
pop
cmps
fadd
lea
push
cmc
imul
js
xchg
hlt
movs
ret
sub
and
sbb
jle
aas
daa
shr
add
ds
adc
add
mov
xlat
inc
rcr
mov
cs
fldcw
jg
add
jmp
sbb
adc
mov
dec
cdq
push
mov
inc
sub
call
lods
cmp
jle
or
ins
or
or
cmp
ds
mov
ins
js
xor
dec
mov
push
or
daa
outs
shl
mov
call
add
mov
inc
outs
ins
jo
jb
jae
outs
cmp
jns
je
int3
lock
ins
cs
push
dec
dec
cs
or
imul
push
fcmovnb
add
push
inc
outs
gs
jae
inc
gs
jne
ss
ins
je
add
retf
movs
hlt
push
ror
jle
jle
xchg
ret
xor
call
push
repz
xchg
lea
xchg
push
mov
or
add
cmp
push
mov
popa
add
pop
cmp
add
adc
imul
push
add
movs
sbb
call
mov
outs
sti
push
test
cmp
rol
add
inc
sub
jmp
and
jmp
sub
pop
fisubr
sbb
push
gs
data16
(bad)
fisub
cwde
add
adc
add
bound
scas
outs
sahf
loope
ins
in
jb
arpl
or
xor
push
icebp
cmp
popa
(bad)
or
inc
ins
or
add
or
aas
jp
adc
in
loope
cwde
mov
inc
cmp
push
je
or
push
imul
sbb
push
jmp
sub
pop
fst
lock
and
xchg
and
add
das
jl
jl
pusha
xor
pop
mov
outs
and
xor
xor
and
outs
je
lds
inc
cmp
add
fisttp
ins
jle
xchg
pop
lock
int
adc
adc
xor
int3
or
pushf
out
and
shr
adc
cwde
xchg
pushf
ja
cmp
daa
rcl
push
sbb
inc
jno
add
les
cs
add
inc
inc
push
jo
jno
loop
jmp
pop
ins
mov
movs
leave
sub
add
and
test
xchg
call
adc
and
jmp
cmc
fldenv
add
cmps
scas
jae
fisubr
pop
push
add
hlt
push
sahf
or
push
cmps
sub
push
outs
push
jnp
hlt
call
and
pop
dec
jae
retf
rol
adc
mov
imul
adc
leave
iret
pop
and
rol
ins
jne
mov
mov
cmp
add
mov
faddp
out
pop
adc
int3
rcl
push
aad
add
jns
mov
loope
(bad)
jmp
jbe
add
jo
add
and
sti
push
loop
sub
movs
sbb
push
sbb
jno
lea
imul
jo
loope
cmp
push
or
add
dec
imul
loopne
sub
dec
cmps
pop
loopne
inc
stos
fst
shl
inc
xor
or
mov
repz
cmp
mov
fwait
adc
int3
inc
fmul
pop
cmp
pop
fs
push
mov
lock
je
add
jne
int
or
add
push
(bad)
cmp
and
add
pusha
mov
call
xor
pop
ins
dec
shl
mov
(bad)
outs
cmp
scas
mov
movs
cli
sbb
mov
int3
sbb
js
push
xor
add
scas
movs
mov
mov
dec
push
add
xor
fiadd
sub
test
daa
sti
push
scas
add
and
xor
imul
or
add
retf
xlat
fisttp
push
sub
jns
aas
add
(bad)
sub
dec
sbb
xor
aas
push
les
inc
loopne
aas
cmp
adc
movs
rcr
sub
popa
das
and
or
ja
scas
sbb
push
pop
(bad)
hlt
call
mov
out
addr16
mov
mov
ja
add
sbb
push
inc
inc
pop
fldcw
cmp
or
xchg
push
or
shl
mov
jmp
push
aad
ins
xor
jno
inc
rol
push
add
pop
add
cmp
sti
or
mov
add
push
sub
push
mov
add
add
nop
sbb
inc
mov
inc
(bad)
fimul
cmps
sbb
in
mov
dec
adc
push
adc
test
jl
xor
sub
dec
sbb
mov
sbb
adc
pop
out
icebp
push
lds
fisttp
xor
inc
add
pop
cmp
push
pop
mov
inc
fsubr
adc
push
rol
call
add
les
aam
or
dec
push
xchg
xchg
adc
loope
mov
inc
js
shr
and
mov
ret
aaa
or
inc
dec
jae
das
xor
add
inc
bound
outs
jae
arpl
arpl
arpl
mov
ror
lock
mov
in
mov
cmp
adc
popa
retf
xor
or
lahf
jo
jg
pop
push
sbb
cmp
loopne
sub
jg
adc
fdiv
push
je
fild
and
jnp
test
sub
fld
pop
xor
cmp
xor
pop
cmp
push
sbb
test
test
inc
jb
les
or
data16
jns
pop
cmp
inc
cwde
mov
(bad)
jg
ret
add
(bad)
xor
out
sbb
cmp
outs
arpl
je
popa
outs
fs
sbb
jb
pop
xor
ins
rcl
add
pop
jo
into
in
lods
lss
mov
dec
dec
push
outs
hlt
popa
addr16
iret
mov
jp
dec
outs
inc
mov
shr
adc
outs
adc
outs
pop
xor
fmul
push
stos
imul
cdq
dec
outs
je
push
inc
jns
jae
xchg
cmp
iret
xor
das
imul
mov
outs
cmp
sbb
and
adc
adc
sbb
and
xchg
xor
pop
xor
adc
push
ja
add
(bad)
pop
fmul
fidiv
inc
fs
inc
test
das
mov
push
push
cmp
pop
cmp
inc
test
jg
pop
cwde
setle
pusha
add
jg
inc
and
and
ins
imul
push
add
add
ins
add
outs
ret
mov
scas
add
sbb
and
and
outs
xchg
cmps
push
push
gs
adc
jecxz
rcl
mov
in
xor
out
dec
inc
push
outs
add
fimul
jbe
pop
add
and
jo
dec
(bad)
sbb
dec
mov
mov
call
mov
iret
add
push
jl
add
jb
push
xchg
jb
mov
jb
mov
jb
jb
je
jb
jb
jbe
js
jb
jb
jp
jl
jb
jb
jle
pusha
popa
jb
jb
bound
gs
jb
addr16
jb
jb
imul
jb
outs
outs
push
push
jb
jb
push
push
push
push
jb
jb
push
push
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
dec
dec
(bad)
aaa
scas
cld
cmp
hlt
adc
nop
sub
sub
xor
cmps
scas
sti
les
jbe
cmp
setg
adc
cmc
aaa
jge
mov
dec
gs
jo
push
inc
dec
imul
cmp
push
es
das
mov
add
add
jo
dec
pop
lods
ins
daa
jl
inc
jge
xor
jne
mov
imul
xchg
loop
outs
push
clc
test
in
mov
jae
in
or
push
jb
scas
int
add
cdq
add
adc
push
mov
jbe
pop
adc
or
fld
jae
mov
mov
push
imul
imul
fsub
test
pop
not
aaa
sub
xlat
outs
loopne
sub
(bad)
jge
xor
mov
cmp
or
or
loope
mov
sbb
cwde
retf
call
retf
aas
or
xor
mov
test
je
sub
in
jg
add
push
adc
cmp
jge
lea
push
cmp
mov
cmp
push
xor
cmp
(bad)
cmp
fstp
xor
mov
mov
mov
jbe
add
ret
nop
and
jle
add
adc
adc
lock
add
sahf
jnp
dec
push
pop
pusha
outs
dec
push
add
movzx
xchg
or
push
and
cmps
adc
scas
hlt
jo
or
cmp
and
outs
sub
xchg
mov
mov
pop
(bad)
fild
inc
ins
outs
bound
sbb
fs
or
mov
aas
push
imul
add
mov
enter
sbb
cwde
push
lds
(bad)
cmovns
push
gs
inc
outs
arpl
push
dec
lock
aas
pushf
add
cli
xchg
jecxz
xor
retf
xchg
mov
pop
mov
jmp
cvtps2pd
push
cmp
cmp
add
inc
push
repz
data16
push
aam
in
cmp
clc
inc
adc
div
or
or
sbb
adc
pop
add
sub
jae
jbe
mov
xor
inc
inc
out
shl
sbb
imul
scas
call
das
inc
cmp
pop
dec
rsqrtps
lods
stc
push
das
cwde
push
or
ds
push
add
push
in
add
fsubr
rol
mov
imul
xchg
mov
(bad)
xor
addr16
nop
add
sbb
pop
femms
add
pop
push
or
push
and
shl
xor
mov
pop
adc
add
aaa
adc
outs
mov
int3
pop
lods
lss
loop
adc
icebp
dec
lods
loope
cld
push
jbe
inc
fs
fistp
and
adc
xor
loopne
pop
outs
nop
pop
punpckhdq
adc
outs
pop
cmp
inc
push
mov
and
push
imul
outs
not
sbb
lods
loopne
pop
shl
js
addr16
push
int3
mov
jnp
clc
dec
add
dec
popa
js
mov
scas
jnp
add
hlt
cmp
sbb
rol
push
push
jo
je
shr
(bad)
cmp
xchg
gs
xor
xor
pop
mov
ss
dec
movs
adc
dec
mov
adc
imul
mov
jne
sar
not
sbb
gs
icebp
shr
add
inc
mov
dec
inc
pop
dec
das
push
and
adc
jnp
push
js
fistp
scas
sub
jle
scas
jge
inc
push
les
push
mov
fild
pop
add
pop
in
jnp
retf
js
dec
push
mov
cmp
add
add
inc
popa
fidiv
inc
stos
add
jnp
push
sbb
inc
jns
lahf
ror
data16
rol
popa
mov
ret
xchg
or
in
inc
xchg
add
xchg
jp
movs
and
nop
cs
out
mov
sub
adc
push
inc
push
mov
cs
xor
out
out
add
push
add
add
in
ins
lods
pminub
fwait
xchg
call
push
outs
pushf
out
sub
aam
add
push
test
push
mov
nop
add
xor
pop
cmp
add
and
push
pop
icebp
fild
jo
push
push
xor
lods
adc
enter
ret
lea
and
mov
loop
outs
push
lods
add
and
pop
pop
pop
inc
adc
push
lea
les
mov
or
jmp
jmp
mov
sbb
fimul
scas
fistp
xchg
adc
xlat
aaa
xchg
xchg
xchg
mov
rdpmc
es
sbb
fcom
inc
add
sbb
inc
sahf
fdivr
cmp
out
sub
mov
or
xchg
movhps
jns
stc
xor
dec
cmp
or
sub
adc
and
push
in
sbb
push
add
int
psubsw
in
sbb
out
xchg
xchg
cmc
or
xchg
call
dec
push
push
(bad)
fnstenv
shl
ins
xor
iret
repz
adc
inc
cmp
repz
push
pop
bound
cmp
repz
xchg
iret
movs
lods
mov
ret
jecxz
retf
daa
fiadd
or
cs
add
or
push
nop
es
push
push
sub
popa
aaa
nop
imul
xchg
pusha
adc
cmp
dec
push
addr16
or
dec
jae
outs
ins
adc
push
je
pop
add
lods
push
push
cmps
xor
gs
add
inc
jnp
pop
daa
sub
xor
inc
sahf
fdivr
cmp
cmp
and
dec
xor
xchg
mov
add
dec
pop
mov
fcom
dec
pop
push
jl
xchg
mov
push
pop
mov
dec
ror
enter
pop
add
pop
lahf
aas
inc
in
dec
add
syscall
add
js
push
add
aas
add
add
adc
jnp
loope
div
cmp
push
arpl
ror
add
xor
je
pusha
retf
mov
add
ja
adc
in
imul
or
dec
mov
ss
daa
pop
push
cwde
push
(bad)
sbb
sbb
sti
(bad)
adc
out
inc
lahf
push
inc
and
add
fbstp
lods
add
push
jae
xchg
or
lods
adc
jae
jae
push
adc
cld
xchg
ret
in
xor
sub
test
test
and
dec
or
sbb
adc
aad
add
popa
dec
mov
jne
push
aad
aad
push
xchg
sti
or
mov
pop
outs
stos
sbb
fstp
jb
jo
rcl
inc
mov
lea
fsubr
(bad)
es
fsub
(bad)
push
imul
shl
(bad)
int
add
add
xchg
leave
add
ins
xor
mov
xor
rol
inc
add
scas
xor
pusha
mov
lahf
aas
lahf
inc
lds
xor
or
add
xor
push
mov
aaa
or
push
(bad)
(bad)
lahf
or
data16
sbb
lahf
loop
xchg
add
movs
pop
inc
dec
test
adc
cmp
(bad)
adc
xor
xchg
cmp
aad
in
inc
inc
aad
inc
add
pop
or
sub
adc
push
mov
sbb
mov
sub
(bad)
fisub
test
add
fild
int
pop
sbb
fbstp
mov
shr
fiadd
sub
pop
add
adc
mov
sub
pop
mov
fst
adc
test
mov
push
sbb
jmp
ss
or
sbb
push
or
mov
sbb
or
fsub
inc
aam
popa
in
pop
test
xchg
sub
ins
add
push
and
xlat
sub
pop
push
xlat
outs
add
mov
lea
pop
or
and
add
push
and
jmp
jb
jb
es
ja
pop
mov
les
jl
int
mov
push
mov
push
add
and
mov
movntq
mov
shl
push
cli
mov
push
adc
outs
push
mov
mov
sbb
outs
fsub
adc
inc
adc
push
popa
addr16
sbb
(bad)
sub
cmovbe
push
outs
push
or
sub
jns
fcomp
ret
xor
cmp
movs
add
mov
js
fwait
push
ror
xor
dec
ins
scas
loop
sbb
pcmpgtd
in
loope
pop
(bad)
add
add
ins
mov
dec
mov
push
cmovp
es
(bad)
cmp
pusha
or
mov
not
push
jo
out
add
outs
inc
int
or
outs
push
lea
gs
sub
or
pushf
push
xor
movs
sbb
adc
jmp
mov
xor
jle
popf
mov
dec
sub
sti
xchg
sub
jg
stos
xchg
push
mov
mov
add
jo
lods
movs
in
or
adc
add
and
sub
adc
ins
jnp
add
das
mov
in
aaa
add
(bad)
call
pushw
sbb
test
in
fsubp
cmp
add
adc
and
push
mov
push
xlat
and
jmp
pop
jbe
xor
aaa
xlat
sub
add
pop
sbb
pop
movups
leave
out
push
push
inc
aaa
mov
mov
test
dec
push
cmp
push
push
inc
stos
cmps
sub
imul
hlt
adc
push
sub
sub
inc
rcl
sbb
in
sub
xchg
shr
pop
and
and
sbb
cmps
dec
mov
add
pop
pop
push
das
jbe
dec
jns
xor
jo
js
xor
out
xor
scas
shl
xchg
dec
lods
push
pmaxsw
sbb
push
dec
push
xor
and
imul
pop
xor
call
pop
adc
rol
sbb
pusha
and
jecxz
push
mov
cmp
pop
mov
adc
in
pop
lods
cmp
jb
(bad)
lock
jo
xchg
fcomp
adc
push
bound
mov
push
adc
inc
dec
mov
jo
pop
lods
cs
jae
jg
pop
add
iret
jmp
inc
shr
(bad)
pmaxsw
es
sub
mov
movhlps
add
mov
ss
imul
outs
fisub
(bad)
inc
jno
push
(bad)
ret
(bad)
add
mov
sub
push
popa
mov
pusha
loopne
in
stc
xchg
test
shr
bound
add
vmovntdq
push
ins
adc
repnz
stc
xor
fldln2
sub
push
test
and
out
and
adc
dec
dec
fst
add
mov
scas
push
pop
xor
loopne
pop
mov
bound
neg
or
and
and
les
xlat
xor
(bad)
movs
xcrypt-cbc
cmps
xchg
or
sbb
inc
imul
xor
mov
jno
mov
adc
fsubr
adc
cmp
inc
or
in
sub
or
outs
pop
ins
int
pop
sbb
pusha
pop
add
popf
adc
nop
das
into
push
iret
cmp
jo
mov
cmp
or
push
(bad)
sub
icebp
add
mov
fbstp
adc
push
(bad)
lds
mov
adc
add
enter
aas
js
adc
inc
push
inc
dec
dec
xlat
cmp
sbb
test
rol
push
push
sub
xlat
push
mov
xor
pop
inc
lds
add
mov
add
cmp
push
sub
jg
xchg
(bad)
rol
ins
les
inc
push
loope
add
ss
fld
sbb
pop
test
sbb
cwde
scas
add
popw
mov
repz
push
push
xchg
cwde
cmp
dec
iret
rcl
dec
or
dec
push
fs
and
dec
jl
scas
jmp
sahf
gs
lods
or
out
cmovg
cmp
xor
push
cdq
pop
xor
lods
dec
sub
js
mov
mov
push
ins
xor
xchg
inc
or
sub
xchg
test
jg
dec
test
lds
jns
dec
in
es
aad
sub
dec
inc
nop
pusha
sub
mov
add
push
push
add
mov
call
fimul
add
adc
sar
mov
mov
(bad)
mov
mov
mov
mov
call
or
or
loopne
(bad)
fld
bnd
call
add
rcr
dec
lock
pop
pop
ret
aaa
xor
jns
repz
cmp
aas
cmp
fstp
cmp
test
leave
jle
add
add
sti
arpl
mov
push
mov
fsub
(bad)
inc
sti
jmp
pop
clc
mov
lea
push
loope
or
add
outs
test
ret
mov
fxch
cmp
(bad)
fistp
add
dec
fisttp
mov
cld
adc
inc
cmp
repnz
mov
mov
push
lea
and
dec
lock
mov
mov
push
jmp
add
cmp
dec
clc
mov
mov
mov
and
in
mov
mov
inc
call
test
in
mov
fimul
mov
in
aas
cmp
mov
or
je
retf
mov
dec
xor
popa
imul
mov
dec
jl
fstp
(bad)
call
sub
(bad)
rol
mov
mov
cmp
adc
jmp
or
mov
out
push
icebp
lock
dec
pusha
pop
movs
push
add
mov
adc
mov
or
and
mov
cwde
or
adc
lock
add
xor
lea
retf
adc
(bad)
pop
push
add
push
xor
cmps
push
fisttp
retf
adc
add
mov
es
jae
fcmovb
mov
sbb
ins
test
add
inc
add
dec
xchg
inc
aaa
add
rol
sub
inc
and
sbb
cwde
mov
inc
dec
(bad)
lock
(bad)
int3
in
loope
mov
sbb
push
lods
js
cmp
cmps
jns
and
ror
xor
add
or
jb
dec
dec
xor
test
je
mov
push
jo
inc
or
mov
adc
push
push
sbb
popa
fwait
mov
loop
in
std
push
mov
mov
movs
add
addr16
rol
nop
mov
jbe
add
je
std
test
sub
adc
call
jns
ss
cmp
jl
sbb
jns
mov
aas
jp
loopne
popf
call
cmp
sar
sub
ret
ret
(bad)
mov
cmp
xchg
cs
bound
addr16
sbb
push
push
xchg
and
lods
call
call
add
push
daa
push
cld
mov
add
out
xor
and
sub
cmc
dec
daa
push
aad
xchg
mov
pop
push
daa
enter
ds
or
mov
dec
(bad)
iret
push
or
sbb
test
lods
imul
push
inc
aas
and
add
and
dec
push
pop
hlt
jge
mov
jmp
repz
ins
rcr
setl
test
xor
xchg
(bad)
sbb
pop
push
mov
cli
sar
mov
dec
clc
ret
mov
or
enter
push
mov
dec
push
test
jecxz
retf
mov
inc
or
push
xchg
shl
mov
sbb
dec
xlat
pop
shr
pop
jmp
push
(bad)
mov
cmp
inc
mov
push
out
ds
popa
je
pop
cwde
mov
das
and
mov
rcl
adc
test
bound
mov
lock
xor
xor
fwait
push
clc
push
mov
inc
mov
pop
fadd
pop
cmp
cmp
test
mov
or
ret
cmp
xchg
or
das
loopne
ud0
cmp
outs
pop
mov
mov
inc
sbb
inc
and
push
std
(bad)
pop
mov
add
xchg
add
shl
(bad)
aas
cmp
adc
mov
push
push
dec
inc
or
sbb
mov
loopne
loopne
jno
jecxz
cmp
fsubr
mov
call
xchg
ror
ja
fist
add
or
retf
xor
jg
in
in
mov
lahf
mov
dec
cmps
xor
outs
xor
addr16
imul
ret
lock
mov
sub
dec
je
sub
adc
inc
jb
add
inc
add
add
jbe
out
or
mov
push
push
sbb
dec
xor
inc
mov
je
push
sub
mov
pushf
mov
clc
dec
pusha
push
in
inc
popa
nop
ja
pop
or
or
push
jmp
mov
aas
loopne
pusha
clc
daa
lea
add
ss
scas
pusha
xchg
loope
jmp
sbb
cwde
pop
lea
pop
sub
dec
cmps
jl
(bad)
cld
inc
fldcw
in
mov
mov
push
sti
rol
pmaxub
add
hlt
fld
fistp
loope
push
or
sar
jns
adc
fdivr
sar
push
shr
int
ins
adc
outs
movs
sub
inc
inc
mov
aas
jo
jno
outs
or
dec
idiv
(bad)
inc
movzx
shr
mov
inc
movzx
and
adc
je
loopne
jne
jg
outs
ret
xchg
mov
sub
inc
cmp
test
jl
dec
sti
mov
mov
or
(bad)
adc
pop
(bad)
mov
or
fbld
push
add
nop
add
dec
jne
mov
pusha
fwait
push
ret
stos
sbb
idiv
adc
cmp
sbb
jb
scas
and
mov
mov
adc
cmp
jbe
mov
jmp
jbe
or
jg
mov
add
inc
dec
jne
cmp
mov
adc
pop
xchg
push
inc
adc
push
int3
xchg
and
xchg
cwde
mov
cmp
pop
mov
jmp
sbb
int3
pusha
pop
or
mov
or
or
and
arpl
push
and
shr
inc
mov
xchg
(bad)
mov
xor
jbe
js
repz
inc
sbb
pop
pop
ja
jmp
inc
call
adc
out
sahf
and
in
fidiv
push
inc
sahf
or
push
call
imul
sub
push
fcom
push
je
add
xor
jmp
sub
sub
cmp
xlat
jmp
popa
ret
mov
jbe
ret
daa
call
xor
push
inc
(bad)
dec
push
in
adc
jmp
retf
push
cmp
test
jbe
stos
sti
jle
push
jne
mov
mov
pop
data16
push
ins
xor
inc
fdiv
mov
js
mov
outs
xchg
push
mov
cmp
push
addr16
sub
scas
out
ds
inc
ins
xor
jo
xchg
int
sahf
xor
enter
ret
(bad)
push
push
ret
jmp
scas
xchg
inc
xor
dec
pop
push
jns
inc
add
xchg
add
sbb
aas
dec
add
int3
das
adc
mov
add
gs
or
aas
das
inc
push
and
mov
sbb
and
adc
and
xchg
enter
das
push
and
add
aas
das
test
loope
push
xchg
les
das
push
das
enter
aas
das
in
dec
and
dec
jbe
add
repnz
enter
movs
or
aas
das
in
jo
jge
das
mov
push
xor
and
jl
rcr
or
push
add
sub
aas
das
adc
int3
das
sbb
jge
cmp
add
mov
lock
jp
xchg
pop
sahf
jg
sbb
push
pop
push
in
push
jle
call
cld
outs
add
jo
push
(bad)
or
sbb
in
xor
pop
cmp
push
add
call
test
test
or
lock
dec
jne
lahf
das
mov
aas
ret
xor
push
je
dec
inc
icebp
test
jl
inc
xor
out
inc
cmp
js
div
adc
(bad)
jg
imul
dec
lahf
and
shl
add
dec
jne
jmp
iret
pop
mov
cmps
scas
mov
add
pusha
loop
enter
shl
ret
ret
mov
movzx
aaa
xor
(bad)
sysenter
cmp
push
add
jg
adc
jge
nop
mov
add
dec
js
mov
add
into
sti
dec
test
jl
inc
xor
stos
ret
outs
aaa
lea
jb
add
in
add
and
rol
push
add
xor
pop
jmp
pop
fadd
pop
inc
hlt
pop
movs
paddsb
xor
pop
inc
dec
jne
cs
dec
dec
lea
push
hlt
enter
loopne
push
hlt
mov
inc
mov
inc
imul
or
ret
xchg
pop
xchg
(bad)
icebp
pop
mov
(bad)
mov
xor
setae
mov
nop
into
nop
mov
mov
pop
sbb
ret
rol
adc
fiadd
dec
div
dec
jne
pop
pop
je
ja
call
adc
add
shl
and
add
add
sbb
pop
nop
(bad)
cmp
cld
arpl
add
int3
dec
push
or
push
mov
pop
push
or
add
adc
idiv
mov
or
jecxz
mov
(bad)
js
aas
lods
jle
jge
fdivr
jl
adc
jno
sahf
jne
xchg
inc
jmp
pushf
(bad)
call
dec
lahf
mov
xchg
sub
ror
repz
push
mov
inc
xor
iret
dec
sbb
sti
cmps
shl
push
lea
cmp
clc
jle
mov
jmp
addr16
jp
xor
and
mov
pushf
jnp
scas
add
cdq
add
mov
call
jge
and
jp
xor
lock
mov
add
and
rcl
loopne
data16
ss
pop
shl
enter
sar
add
js
into
rcr
sub
jb
shl
sbb
(bad)
xor
fisttp
push
call
cmp
shr
fild
adc
push
xchg
mov
mov
fs
push
sub
inc
daa
movs
(bad)
mov
mov
jne
mov
inc
add
or
or
push
add
arpl
imul
neg
rol
outs
and
add
dec
add
push
add
dec
add
add
cld
mov
fbld
jo
mov
imul
xor
call
jno
loope
cmp
inc
mov
sbb
add
ds
sub
jne
aam
sbb
push
data16
out
in
or
jmp
mov
ret
test
ins
add
sbb
fs
push
mov
adc
bound
int3
rcr
ins
push
pop
stos
pop
or
mov
or
jmp
adc
cmp
xlat
aam
push
je
and
mov
popf
add
mov
dec
dec
rcr
push
mov
aam
mov
sub
adc
push
xor
add
add
fucomip
jmp
movs
cmps
aam
test
add
test
push
push
jbe
jmp
fnstsw
int
push
mov
cmp
in
cli
xor
lea
les
jb
cwde
or
into
aam
jb
add
fdiv
(bad)
addr16
cmp
jb
or
jbe
into
ret
mov
jecxz
xor
mov
mov
fisub
dec
hlt
xchg
add
std
test
add
add
mov
movs
in
(bad)
jae
stos
mov
dec
jl
xchg
jo
mov
mov
push
sub
jne
js
jp
mov
sub
aam
ror
mov
mov
mov
mov
cmps
es
and
fwait
add
cmc
xchg
cmp
outs
sub
sub
sbb
call
popa
add
leave
mov
shl
jmp
dec
in
rcl
mov
dec
test
cmp
jle
xor
push
ret
mov
cmp
mov
or
and
pusha
mov
mov
lds
and
jmp
xchg
out
push
mov
inc
ret
mov
out
mov
or
data16
push
add
out
fdiv
or
mov
push
mov
inc
sti
add
jo
mov
repnz
jb
call
inc
rcr
dec
sub
rol
rol
adc
pop
jno
push
mov
jmp
and
clc
inc
lock
inc
icebp
je
xor
lods
pop
xor
test
sub
or
inc
dec
inc
lods
jne
je
dec
rcr
jb
pop
(bad)
aaa
jle
mov
add
aaa
leave
je
inc
dec
jne
mov
leave
push
mov
loopne
test
xchg
jo
dec
loopne
jae
jae
inc
adc
mov
add
outs
enter
rcl
xchg
jmp
fst
xchg
(bad)
(bad)
sub
sbb
ror
push
mov
mov
fadd
mov
cmp
mov
pushf
out
pusha
inc
xchg
add
add
inc
je
addps
iret
lahf
cmp
shl
xchg
cmps
jne
ret
jmp
test
jle
xchg
sbb
retf
mov
push
test
aaa
push
or
xor
call
(bad)
push
pop
mov
outs
fwait
push
dec
jne
cmps
retf
mov
push
fs
mov
sbb
rol
xchg
aas
loopne
cmp
int
jne
outs
mov
sbb
or
je
aad
adc
mov
sahf
gs
jmp
pop
mov
popf
pusha
ins
mov
fdivr
sbb
jne
push
xor
dec
sbb
cmc
test
daa
push
mov
cmps
sbb
jg
je
sub
je
add
jmp
mov
mov
out
jmp
scas
sti
xchg
stos
sbb
(bad)
rcr
mov
jmp
add
or
outs
sub
jmp
ins
jg
in
jne
aaa
pop
scas
mov
adc
add
test
mov
ret
in
call
jnp
xor
test
cmp
je
push
jmp
inc
add
scas
sbb
dec
and
mov
outs
int3
mov
xchg
scas
or
out
mov
adc
dec
lock
mov
jb
pop
mov
adc
mov
adc
add
mov
mov
mov
fwait
ds
dec
inc
push
add
xchg
cmp
jne
cmps
inc
les
icebp
lea
jmp
mov
or
lock
push
repz
mov
fimul
outs
pop
lods
sub
or
xlat
inc
mov
xor
mov
cs
mov
loopne
ins
or
jle
cmp
add
test
xor
out
movs
add
inc
imul
jae
mov
sub
push
aam
add
adc
or
or
sbb
fmul
xlat
rcr
retf
or
mov
int
fild
fisttp
dec
xchg
pop
jnp
add
mov
cmp
xchg
sbb
cmps
pop
stos
nop
repnz
scas
mov
mov
(bad)
inc
xor
push
in
nop
mov
sub
out
movs
or
bound
lea
hlt
sub
mov
outs
mov
adc
neg
arpl
dec
sbb
ffreep
pop
lea
test
sub
ins
sub
pop
loopne
mov
mov
mov
pusha
pop
and
mov
sub
arpl
add
cmp
dec
inc
jl
sub
rcr
mov
sbb
lock
sbb
ja
iret
int3
js
inc
lock
cmp
test
movs
xor
test
mov
add
add
or
pop
out
or
nop
or
pop
fstp
loop
loopne
xchg
add
je
imul
loop
mov
push
adc
mov
popf
mov
inc
mov
inc
int3
xor
jae
mov
or
or
push
or
sub
test
dec
clc
mov
in
sub
ret
mov
pop
dec
xor
pop
cmp
push
add
bound
add
adc
in
or
(bad)
push
jge
cld
mov
adc
pop
jbe
jmp
jle
loope
mov
xor
sbb
push
jp
call
cmc
call
push
or
shl
inc
xchg
cmp
je
inc
dec
jne
push
xchg
sbb
mov
jg
test
(bad)
(bad)
sub
jb
inc
xchg
outs
and
pop
jle
mov
push
dec
sbb
jne
lods
mov
out
ja
push
(bad)
jmp
dec
xor
push
xor
lds
mov
shl
in
je
dec
(bad)
loopne
std
cmp
cli
ja
bound
push
stos
mov
mov
mov
into
pop
push
xor
sti
and
(bad)
push
or
aaa
sub
mov
sbb
xor
out
lods
neg
test
jmp
inc
jmp
es
lock
imul
sahf
hlt
into
sahf
scas
shl
xchg
jle
data16
sub
mov
nop
mov
cmp
lea
mov
js
jne
sub
ror
call
push
jl
add
gs
push
rol
scas
xor
sub
inc
rcl
in
inc
and
cmp
push
jne
imul
mov
imul
or
jbe
in
sbb
(bad)
jns
mov
adc
xor
inc
jmp
cmp
fisubr
dec
fcom
or
push
cmp
add
imul
call
sar
mov
xchg
cmp
jl
sub
aam
pop
push
aam
pcmpeqd
fdiv
mov
int3
rcl
adc
out
adc
jmp
mov
call
repz
sub
adc
mov
sbb
lahf
sar
ror
(bad)
and
jae
dec
inc
enter
jl
dec
fidiv
jnp
push
cmps
mov
push
imul
mov
push
iret
and
add
push
jbe
or
sbb
mov
popa
mov
jbe
xchg
pushf
jl
or
adc
movs
cmp
ins
scas
aaa
call
cmp
push
stc
fsubr
fld
adc
(bad)
jge
clc
sbb
sar
pop
mov
dec
mov
pop
fcomp
sub
test
xchg
mov
sub
sbb
pop
in
jno
pop
jg
in
add
xchg
shl
test
mov
daa
push
or
test
inc
mov
mov
adc
push
mov
test
mov
add
xchg
mov
add
cmc
fsubr
ja
pop
mov
ja
or
leave
iret
cmp
mov
mul
dec
mov
xor
sub
push
dec
gs
bound
ja
and
push
daa
mov
pushf
jp
add
daa
out
popa
push
daa
dec
out
es
lods
pop
jbe
bound
ds
aaa
xchg
daa
data16
dec
dec
add
(bad)
fbld
pop
dec
sbb
(bad)
les
push
retf
add
dec
jle
mov
inc
jbe
loopne
pusha
out
test
sti
jnp
pop
lock
cmp
out
jle
rcr
stos
mov
and
dec
into
and
cwde
mov
and
arpl
jge
ficom
add
test
cmp
add
sub
outs
xor
bound
adc
je
jo
fnsave
test
sbb
gs
retf
rol
mov
in
repnz
popf
add
fstp
pushf
pushf
pop
dec
adc
cmp
retf
leave
in
and
xchg
xchg
sub
cdq
xor
add
rcr
les
movs
push
enter
push
es
and
dec
sub
xchg
retf
loopne
call
call
es
data16
and
gs
retf
lock
fdiv
in
clc
loopne
in
dec
xor
and
add
lock
in
or
sub
cwde
xchg
retf
adc
sbb
mov
dec
gs
and
fwait
es
push
imul
sub
les
mov
shl
inc
add
push
das
xor
adc
cmps
ret
mov
jmp
clc
cli
(bad)
jmp
inc
lods
xchg
dec
add
inc
fnsave
xchg
mov
adc
pop
jbe
cdq
add
add
sbb
or
inc
(bad)
daa
push
mov
(bad)
mov
ins
add
jae
or
fld
call
rol
rol
cmp
(bad)
mov
add
movs
movs
cmp
add
add
(bad)
das
inc
push
cmps
cs
mov
sub
pop
mov
jle
and
das
push
out
sbb
rol
cs
outs
or
xor
push
outs
aaa
fadd
jae
or
aas
jg
adc
xor
(bad)
mov
inc
bound
ret
aaa
lahf
aaa
rcl
push
daa
scas
call
mov
cmp
daa
adc
cmp
push
cmp
add
ficom
out
aaa
ja
mov
(bad)
jnp
mov
push
dec
sbb
and
cld
std
call
fcos
jne
jne
lea
fist
push
lea
sahf
data16
pop
cs
jg
dec
ds
mov
jbe
push
xor
hlt
add
xor
mov
mov
inc
(bad)
enter
jb
adc
add
cmp
les
mov
je
loopne
fwait
pop
mul
adc
adc
lock
jg
ins
cld
les
and
call
aaa
mul
push
pushf
mov
out
ror
ja
add
cs
xor
xchg
cdq
mov
adc
inc
mov
daa
push
call
jnp
cs
into
pusha
cmp
call
xor
pop
mov
lahf
cmps
mov
push
xchg
ret
lock
gs
lods
not
or
add
add
ds
pusha
nop
leave
xor
outs
push
mov
cmp
adc
mov
or
pushf
ret
jne
std
adc
jmp
sbb
test
jmp
push
(bad)
mov
and
ret
or
sbb
out
inc
call
mov
mov
ins
or
pop
clc
fwait
clc
movs
adc
pop
cld
fcom
mov
mov
dec
out
int
or
enter
mov
sub
cmp
dec
ja
mov
mov
lahf
arpl
dec
sub
je
popf
mov
xor
push
lea
cdq
(bad)
jne
jp
sahf
add
ret
addr16
sub
or
sbb
or
jle
jge
ins
add
jmp
and
nop
and
test
pop
test
sti
ret
push
ret
mov
mov
mov
(bad)
push
adc
(bad)
inc
sar
push
pop
test
hlt
add
fnstenv
cmp
imul
fsub
sbb
imul
mov
clc
call
(bad)
mov
loopne
xor
scas
dec
retf
adc
add
lds
adc
sbb
std
adc
pop
mov
push
sub
movs
(bad)
fistp
xchg
jle
jo
xchg
mov
hlt
add
add
pop
rcl
enter
add
cdq
mov
nop
sbb
shrd
iret
jmp
movzx
add
push
sbb
(bad)
fbld
sti
adc
push
xchg
pop
push
mov
movs
jnp
push
add
in
lods
fwait
aad
pop
test
test
add
cmps
pushf
cmps
mov
jnp
pop
xor
aas
daa
popf
xor
mov
mov
push
test
movs
and
push
or
adc
pusha
pop
sub
jbe
xor
sbb
addr16
retf
outs
movs
repnz
test
jne
push
in
cs
lds
mov
inc
push
dec
mov
enter
xchg
retf
sbb
sub
lods
xchg
aaa
retf
mov
or
or
pop
inc
dec
mov
(bad)
and
ror
popa
cs
sub
inc
test
arpl
js
and
jmp
loop
pop
cmp
adc
out
cmp
data16
mov
mov
xor
push
sbb
adc
jmp
add
fistp
xor
push
arpl
outs
in
jle
push
jnp
push
adc
pop
add
push
(bad)
ja
add
mov
xchg
xor
mov
lods
adc
inc
ja
sub
shl
add
jg
clc
mov
mov
in
fnstenv
pop
xor
adc
test
test
aas
jb
bound
add
and
loopne
in
add
mov
loopne
xor
fimul
adc
xor
mov
dec
inc
xor
adc
add
adc
dec
fadd
adc
push
mov
dec
out
inc
pop
push
adc
xchg
test
jne
test
repz
inc
stos
jns
fwait
and
mov
mov
push
add
out
(bad)
mov
ds
nop
popf
iret
add
test
pop
movs
xor
(bad)
imul
ffreep
mov
adc
mov
mov
mov
or
xor
inc
xor
pop
pop
out
aaa
xor
(bad)
pmaxub
xor
push
ins
aaa
dec
cmps
add
mov
inc
fsubr
cld
jle
mov
xchg
test
inc
xor
sub
hlt
add
cmp
hlt
lock
sbb
mov
(bad)
mov
and
inc
lock
push
add
rcr
in
(bad)
jmp
lock
and
cs
add
add
xchg
or
inc
add
addr16
mov
addr16
mov
mov
cdq
aad
add
sbb
daa
mov
test
and
pop
outs
cmps
push
jb
sbb
pop
scas
adc
out
jmp
adc
inc
jbe
xor
loopne
fstp
pop
inc
mov
pop
inc
add
or
xor
mov
test
enter
push
cs
mov
add
sbb
arpl
and
pop
or
scas
lds
pop
inc
jl
ins
aaa
jo
add
jno
aas
fcmovbe
mov
sub
mov
push
mov
fwait
ss
push
mov
and
and
fsub
add
fst
mov
fistp
jp
test
push
or
push
or
push
mov
mov
or
or
test
int3
pop
bound
cdq
fs
popa
inc
cmps
loopne
popa
int3
jmp
jbe
addr16
push
sub
push
jne
inc
push
stos
jg
add
data16
(bad)
cmp
shl
jo
xor
inc
xor
and
fistp
and
push
retf
or
imul
(bad)
xchg
lea
xchg
xor
pop
mov
pop
mov
push
or
sub
mov
xor
cmp
adc
jle
inc
jne
sbb
adc
xor
adc
icebp
jmp
sub
jno
stos
sub
lock
mov
daa
adc
pop
int3
and
retf
or
or
dec
mov
rol
or
inc
add
cmp
rep
mov
rcl
pop
push
jo
div
cs
add
(bad)
scas
mov
adc
or
mov
push
adc
inc
adc
daa
adc
dec
mov
push
or
shl
test
push
jle
jmp
retf
jmp
idiv
jbe
bound
or
mov
or
es
int
adc
push
mov
adc
xchg
push
rcl
cmp
sbb
fs
sub
add
pushf
rol
sbb
sub
dec
adc
clc
xchg
adc
(bad)
scas
ja
ja
rcl
add
adc
adc
xchg
aaa
cmp
mov
cld
rol
jae
xchg
es
popa
add
jnp
jp
push
pop
add
arpl
test
jno
cld
jno
jecxz
inc
std
mov
clc
lea
call
ins
cmps
mov
pop
lea
aam
or
(bad)
jl
cs
mov
mov
(bad)
mov
pop
mov
pop
xchg
adc
lahf
adc
retf
pop
dec
sub
jns
dec
push
rcl
or
dec
push
stc
push
push
mov
sbb
adc
je
inc
add
dec
cmps
ret
cmp
mov
jno
xchg
sbb
inc
dec
dec
outs
add
test
mov
jmp
sub
cmp
inc
cmp
or
pop
sub
loope
xlat
out
push
cmp
outs
(bad)
mov
sub
dec
sub
jl
inc
xchg
lea
xchg
movzx
fdivr
pop
inc
dec
jne
adc
sub
dec
pop
lds
add
stc
ds
popf
sub
dec
loop
daa
shr
xchg
rol
(bad)
loopne
push
out
mov
rdmsr
popf
rol
add
push
mov
push
jbe
add
rcr
retf
es
clc
add
jmp
mov
mov
lds
call
shl
mov
retf
retf
mov
out
adc
not
lock
out
and
inc
mov
fsubr
mov
and
and
(bad)
jl
sbb
mov
push
jo
push
pop
mov
test
jle
mov
inc
(bad)
jne
clc
jmp
inc
dec
jne
cmp
xchg
out
setg
xor
dec
cli
jbe
pop
add
add
mov
mov
add
rol
in
ret
sti
sub
inc
aas
or
jl
(bad)
test
jle
push
(bad)
mov
mov
push
jmp
(bad)
jg
sub
jl
inc
mov
cmp
jne
mov
mov
dec
jne
inc
sbb
dec
(bad)
nop
add
mov
ud0
sbb
(bad)
mov
enter
ret
inc
pop
push
pop
pop
aaa
aaa
and
add
xchg
mov
loopne
xor
mov
out
mov
or
push
add
into
sbb
mov
add
and
add
call
mov
xor
sub
adc
in
sahf
fisubr
mov
jnp
or
cmps
xchg
cld
(bad)
jbe
mov
mov
mov
jo
mov
mov
enter
loopne
sub
scas
cli
loopne
out
std
or
xor
jmp
inc
sbb
sub
je
loop
jo
or
je
jmp
ins
mov
add
or
cmp
fadd
add
cmp
(bad)
xlat
sub
retw
or
push
js
data16
jl
pop
aaa
push
jp
cmp
sbb
lock
lgs
add
and
mov
mov
jle
sti
dec
loopne
in
adc
adc
fsub
fadd
in
adc
fild
ins
and
push
pop
in
jmp
and
retf
dec
movs
push
ret
ret
and
jbe
imul
or
adc
mov
xor
mov
push
out
enter
daa
shr
sbb
inc
inc
pusha
(bad)
push
hlt
sbb
mov
cmp
nop
push
sbb
ficomp
sbb
add
gs
bnd
jge
dec
adc
mov
sub
cmp
dec
sub
adc
mov
ret
pop
mov
daa
pop
add
ret
mov
adc
sahf
enter
outs
push
mov
in
or
je
adc
jne
add
out
aaa
(bad)
js
lods
lea
inc
sbb
xchg
sub
fsub
push
cmps
push
fwait
hlt
mov
add
add
out
movs
js
jmp
call
sti
lea
out
arpl
ds
pop
add
cmp
jne
test
sti
stos
call
(bad)
hlt
lea
mov
aad
jb
sub
test
jl
inc
xchg
cmp
add
adc
xchg
or
mov
pushf
lods
jne
fcomp
das
cmp
sahf
pop
cmp
xor
aam
push
add
dec
jne
xchg
or
sub
mov
xchg
inc
cmp
mov
leave
fistp
out
cmc
adc
imul
in
ss
sub
cmp
ror
cmps
cmps
mov
idiv
repz
push
jne
cmp
jle
enter
mov
or
add
pop
mov
pop
add
adc
mov
mov
add
mov
and
mov
mov
icebp
loop
(bad)
dec
fsubr
shr
cmp
sbb
adc
pop
cmp
fild
cmps
dec
add
imul
dec
add
fistp
jle
push
add
mov
push
push
pop
mov
int
or
push
test
and
dec
pusha
mov
push
dec
pop
add
xor
xor
sub
cmp
in
mov
mov
and
mov
dec
fmul
sub
(bad)
(bad)
jg
add
add
push
dec
fs
outs
imul
jb
outs
ins
jo
outs
outs
je
add
push
inc
jb
popa
je
xor
xlat
in
pop
fsub
add
adc
call
adc
dec
add
ins
mov
fwait
shl
ja
jb
aaa
pop
cmc
outs
xor
inc
inc
popa
jae
push
xor
mov
frstor
add
lock
(bad)
test
shl
push
xlat
in
xlat
jo
add
nop
xchg
push
ins
loope
push
dec
mov
in
ror
pusha
jo
sbb
popa
add
push
ins
cmp
xor
or
push
add
sub
(bad)
jae
push
test
je
sbb
or
mov
xor
lock
mov
push
shl
inc
or
cmovo
fs
cmp
or
adc
das
jg
rcr
lahf
test
setne
push
(bad)
and
push
cmp
test
ror
push
ret
mov
sub
mov
push
xor
in
fiadd
add
push
xor
fld
cs
xor
or
popa
jbe
jns
add
mov
sbb
cmps
fsubr
mov
(bad)
cmc
cmps
rol
loopne
or
push
les
mov
sbb
and
add
(bad)
aas
or
in
and
or
imul
outs
push
pop
adc
popa
lds
(bad)
mov
inc
push
sahf
ins
and
xchg
pusha
add
imul
jmp
arpl
je
bound
add
imul
adc
or
fld
jl
or
inc
adc
mov
aaa
add
adc
rcl
sub
nop
inc
inc
jb
jae
outs
pop
jecxz
mov
sub
inc
pop
sbb
out
aaa
mov
xor
(bad)
cmp
adc
(bad)
dec
ficom
push
pop
push
(bad)
dec
push
add
mov
push
inc
inc
add
adc
or
pop
arpl
mov
push
ins
mov
loopne
popa
retf
dec
add
inc
xlat
add
pop
mov
gs
ret
cmp
and
xchg
push
mov
lods
jmp
and
out
pop
jne
push
nop
mov
cmp
mov
imul
dec
sub
fs
push
hlt
ins
adc
lds
hlt
and
loopne
test
cmp
sti
std
int
mov
fsub
lea
add
ret
sti
call
je
jmp
div
mov
jmp
sbb
je
aad
stos
ss
loope
fdivr
sub
mov
ret
sbb
mov
push
pushf
mov
push
retf
cwde
lock
stos
cld
movs
adc
scas
nop
push
jo
outs
sub
sub
jne
xor
add
mov
stos
scas
push
pop
inc
pop
or
inc
fs
mov
js
xchg
xchg
adc
sbb
mov
or
loopne
and
(bad)
mov
test
js
mov
dec
push
jns
mov
movs
push
cmp
fstp
xor
xchg
push
ret
clc
adc
popa
(bad)
mov
and
mov
cmp
sub
outs
add
jmp
lock
add
add
add
push
sbb
ja
push
push
dec
inc
sbb
mov
in
mov
mov
jns
push
dec
push
push
ds
fmulp
rol
sub
loope
mov
fsub
inc
inc
ror
call
(bad)
xor
leave
and
bound
imul
add
loop
out
hlt
aam
or
adc
mov
ins
fbld
jmp
push
ins
enter
sbb
rcr
pushf
sub
call
mov
push
mov
or
xchg
je
xor
enter
sbb
aaa
aam
adc
push
not
mov
xchg
sbb
stos
das
mov
shl
cmp
push
add
or
outs
mov
sub
adc
add
push
adc
lock
cdq
or
daa
mov
movs
add
nop
lock
movzx
retf
jecxz
xchg
push
(bad)
ror
mov
repnz
shl
aaa
dec
test
inc
push
movs
loop
movs
je
or
jo
out
sub
xor
cmp
jo
sbb
dec
aaa
adc
sub
test
inc
js
dec
dec
or
adc
cmps
ins
inc
and
pop
pop
ret
rol
dec
xor
inc
lods
jle
mov
mov
and
pusha
nop
add
jno
aaa
into
iret
pop
push
push
popa
xor
loopne
and
sub
sub
shr
les
sbb
dec
das
adc
sub
or
js
adc
or
sub
sahf
(bad)
bound
and
lds
daa
dec
daa
sbb
movs
daa
ror
pop
pop
adc
test
xchg
push
ret
adc
int
es
pusha
xchg
ds
out
add
dec
push
push
sbb
push
mov
popf
mov
fcom
dec
das
push
pop
shl
das
movs
aaa
cmp
sbb
les
cmps
xchg
aas
mov
or
inc
sbb
pop
aas
sub
cmp
add
adc
or
xchg
mov
das
push
xor
or
xchg
mov
and
ret
loopne
sbb
outs
out
stos
loope
aad
aas
hlt
dec
pusha
jo
sbb
dec
aas
adc
sub
or
fcom
aas
push
retf
aas
fidivr
jo
add
popa
add
js
cmp
aas
cmc
leave
adc
mov
aas
dec
xchg
push
xor
movs
aas
xchg
xchg
or
and
in
xor
leave
mov
aas
xor
push
repnz
pop
shl
dec
aas
movs
pop
sbb
aam
lock
cmp
xor
aam
ror
mov
adc
mov
push
rcl
xchg
xor
sbb
dec
dec
fiadd
push
pop
dec
dec
movs
ret
xor
nop
dec
fsubr
sbb
sahf
adc
cmp
das
push
or
pushf
repnz
outs
shl
xor
fcom
adc
int
dec
shl
xor
dec
pop
sbb
movs
pop
fcomp
pop
outs
sbb
das
adc
out
dec
sbb
lds
add
repnz
dec
into
ins
dec
shl
xor
dec
pop
sbb
movs
pop
loopne
sbb
cmp
adc
pushf
sbb
sti
jmp
mov
add
jb
pusha
iret
rol
dec
xor
loopne
aas
dec
in
push
and
in
jo
and
ret
cmovnp
or
push
dec
xchg
pop
or
sub
jne
pop
and
xchg
dec
pop
dec
nop
fiadd
push
pop
movs
sbb
xor
pop
call
imul
or
pop
jb
ret
ror
sub
(bad)
pop
rcr
push
and
add
leave
stos
daa
test
movs
dec
add
daa
call
mov
adc
mov
pop
mov
xchg
ret
xchg
xchg
lahf
loope
sbb
rcl
mov
add
pop
adc
pop
xor
nop
fisub
xor
add
loopne
jo
sbb
popa
dec
pop
lahf
or
aad
test
pop
push
xor
or
das
xor
inc
mov
sub
mov
sub
jmp
arpl
xchg
pushf
pusha
sbb
das
leave
aam
add
call
aam
xor
movs
das
and
sbb
push
jo
lock
cmp
shr
aas
pop
mov
xchg
sar
cmp
shl
jle
dec
in
aad
push
lock
test
or
sub
or
movs
dec
cld
dec
ret
or
inc
xor
pop
jb
sbb
push
or
lahf
out
shl
cmp
lods
pop
fwait
aas
xchg
sub
or
pop
add
rol
movs
aas
add
aaa
sub
dec
cmps
xchg
mov
add
das
sbb
stos
loope
fsubr
dec
dec
das
sub
das
sub
das
add
ret
or
mov
cmps
push
ret
test
(bad)
mov
sbb
aas
cmp
mov
push
or
dec
inc
or
loope
sbb
test
mov
enter
push
aas
stos
xchg
jo
fimul
add
dec
dec
xor
lock
or
sbb
aam
shl
ins
mov
ret
pop
sub
xor
jp
mov
out
fild
ret
pop
xor
mov
or
dec
das
movs
mov
and
adc
cmps
loope
and
mov
aaa
cmps
mov
xor
test
push
cdq
fdivr
pop
add
leave
add
push
das
adc
dec
ret
sbb
das
mov
nop
push
mov
jo
imul
push
bound
push
shl
inc
pop
add
dec
inc
push
sbb
inc
js
retf
add
aaa
adc
mov
aaa
jb
pusha
or
pop
pop
aaa
or
aad
aaa
or
jo
hlt
dec
aaa
dec
dec
ins
add
call
sbb
aas
fmul
add
jno
mov
aas
aaa
icebp
fbstp
test
aaa
ins
add
add
or
aaa
clc
js
rcl
inc
dec
ss
call
xchg
cwde
ja
add
aas
shl
adc
xor
ins
add
add
push
imul
mov
mov
or
aad
sub
aas
push
xor
or
out
xchg
xor
aaa
xor
cmps
cli
mov
pusha
les
sub
adc
in
loopne
inc
push
jecxz
add
inc
dec
xor
shl
xchg
inc
pop
and
aam
add
xchg
nop
push
cmp
in
adc
pusha
mov
xor
(bad)
loopne
dec
xor
cmp
in
jo
cmp
or
das
pmaxsw
push
add
xchg
sbb
cmp
inc
dec
jo
or
dec
cmps
test
add
aad
mov
xor
xchg
xchg
xor
sub
jo
loope
mov
mov
lods
addr16
das
inc
ja
sbb
popf
out
dec
xor
das
or
jo
loopne
cmp
das
movs
js
add
aam
mov
das
dec
push
inc
data16
mov
daa
mov
int3
dec
xor
daa
or
jo
loopne
cmp
daa
mov
aam
jbe
adc
push
or
sbb
aaa
dec
das
inc
xor
push
repnz
clc
dec
inc
pop
shl
dec
inc
movs
mov
inc
rcr
outs
sbb
adc
or
or
nop
(bad)
enter
lock
dec
std
jmp
xchg
dec
dec
or
sub
imul
inc
xchg
or
jno
mov
test
xor
add
loope
dec
aaa
and
daa
or
cmp
inc
pop
or
jo
inc
dec
inc
pusha
dec
ins
add
cwde
dec
xchg
pop
aam
shl
cmp
test
add
lods
jecxz
cmps
mov
xor
add
mov
push
ffreep
mov
outs
xchg
sub
xchg
jg
dec
jg
sbb
jg
add
push
jg
jo
lock
cmp
test
mov
cmps
push
xor
das
mov
jg
add
pop
aam
jg
and
add
ja
mov
mov
pop
jb
movs
xlat
push
cmp
xor
out
pusha
dec
sbb
jg
out
inc
sub
adc
fnstcw
xor
or
or
loope
xor
nop
push
or
xor
adc
scas
loope
sbb
cmp
xchg
add
pop
add
fisub
mov
adc
out
mov
jg
sub
icebp
ja
add
out
pushf
dec
ja
or
sub
push
sbb
adc
pop
mov
xchg
xchg
add
out
repnz
xchg
dec
xchg
or
xchg
xchg
aaa
or
mov
push
mov
lahf
cmc
cmps
popa
inc
pop
outs
push
push
jno
sbb
pop
or
loope
adc
pop
and
or
rcl
and
movs
push
cmps
loope
mov
sub
sub
xor
lahf
arpl
sbb
ret
stos
xchg
add
add
pusha
push
dec
push
dec
xor
lock
sbb
mov
aam
mov
sahf
fcom
adc
fcomip
shl
dec
inc
add
scas
xchg
pop
or
xor
push
push
pop
and
aas
dec
aas
rcl
and
xor
cmps
xchg
push
neg
or
lahf
push
add
inc
jle
retf
ja
mov
fs
xor
inc
or
shl
inc
cmp
dec
adc
aam
and
fwait
aaa
adc
or
(bad)
clc
add
jle
inc
cmp
adc
jns
add
out
sub
pusha
jo
aaa
movs
and
or
xor
imul
sub
jo
scas
call
addr16
lock
pop
(bad)
stc
add
aad
test
pop
aam
xor
xchg
xchg
sbb
aam
xlat
loopne
daa
xchg
js
shr
cmp
or
push
popa
in
inc
loop
das
mov
add
dec
das
movs
mov
ror
jo
dec
xor
mov
das
and
nop
inc
sbb
cmp
cwde
outs
das
movs
ret
adc
fisubr
mov
outs
pop
sub
pusha
arpl
(bad)
ds
push
lock
sti
add
mov
pop
dec
pop
adc
sub
or
and
push
jb
sbb
nop/reserved
pop
adc
cs
pop
xor
dec
and
loope
sbb
enter
pop
sbb
sub
inc
(bad)
pusha
dec
pusha
jo
sbb
pop
adc
sub
or
dec
nop
adc
or
add
mov
add
mov
jb
cmps
add
out
sub
shl
xchg
dec
pusha
jo
sbb
adc
test
aaa
or
jl
sbb
or
jae
dec
and
mov
push
out
jg
mov
push
ror
add
dec
xor
xor
xchg
and
nop
adc
xchg
pop
int
push
in
dec
sbb
push
dec
push
add
push
movs
push
dec
ret
sbb
mov
nop
push
ret
nop
push
pop
xchg
mov
add
add
push
dec
push
sbb
movs
push
mov
sbb
dec
and
nop
and
xchg
push
xor
inc
das
out
stos
loope
sub
dec
dec
pusha
jo
sbb
dec
adc
sub
lods
push
pop
xor
test
mov
or
pusha
out
shl
inc
dec
imul
push
in
add
fs
ret
cmp
xor
jg
add
or
xchg
push
xor
jg
lea
(bad)
test
nop
outs
(bad)
(bad)
iret
mov
push
push
xor
aaa
mov
and
sbb
dec
dec
fiadd
push
pop
dec
dec
movs
inc
xor
nop
dec
aam
jo
lock
nop
dec
ret
push
and
sahf
mov
dec
or
pop
push
push
repnz
aaa
cmps
pop
loopne
xor
les
dec
sbb
shl
aaa
outs
or
fmul
mov
and
cmp
mov
inc
aaa
mov
(bad)
aaa
clc
dec
sbb
aaa
dec
aaa
add
push
movs
aaa
pop
mov
sub
push
mov
push
gs
jo
in
gs
mov
xor
popa
push
dec
sti
outs
pop
xor
or
or
add
dec
addr16
and
add
xchg
pop
dec
jb
mov
pop
push
mov
sbb
mov
scas
test
dec
xchg
dec
dec
xor
or
sbb
addr16
addr16
push
movs
or
xor
or
aas
and
nop
aas
inc
aas
dec
pop
push
pushf
inc
or
fs
aaa
add
aaa
and
movs
aaa
adc
sub
aas
and
mov
xchg
inc
xor
aaa
aas
xchg
aaa
nop
dec
aaa
or
pop
add
retf
add
push
aaa
adc
lock
inc
push
js
in
jo
push
mov
bound
add
pop
push
xor
cmp
add
xchg
movs
dec
dec
or
pop
add
retf
add
push
dec
sbb
or
daa
mov
daa
mov
xor
outs
daa
add
push
sbb
scas
xchg
xor
sldt
pop
and
add
movs
test
and
aaa
or
xchg
rol
sbb
sbb
jg
inc
and
ins
outs
loope
rcl
pop
add
leave
outs
mov
or
dec
outs
movs
xchg
and
das
xchg
xor
adc
call
and
pusha
lea
and
mov
adc
xor
xor
aaa
dec
sbb
shl
aaa
pop
call
inc
cmps
xchg
adc
stos
add
stos
in
ror
sub
rol
dec
xor
lock
sub
sbb
xor
daa
(bad)
jg
sbb
inc
daa
push
or
adc
mov
dec
dec
dec
pusha
dec
ins
add
cdq
xor
jo
lock
xchg
inc
or
loopne
jle
xchg
xor
jo
leave
add
or
addr16
addr16
pusha
dec
ins
movs
addr16
or
daa
mov
daa
cmps
jge
add
sub
push
lods
push
das
int3
dec
pusha
jo
sbb
dec
das
adc
sub
or
jg
push
xchg
push
ret
dec
mov
push
jp
(bad)
and
sbb
ret
mov
mov
clc
dec
push
mov
rol
xor
outs
cmp
test
add
dec
dec
jnp
repnz
add
fsub
push
dec
sbb
rcl
xchg
dec
es
cmp
cmps
xchg
jp
stos
in
sub
rol
xor
das
shl
or
cli
js
and
pop
imul
jb
inc
inc
pop
jb
dec
push
and
push
or
sbb
xchg
xchg
sbb
movs
jo
add
xchg
fwait
xchg
pusha
xchg
xchg
or
cmps
xchg
lea
add
dec
mov
sub
adc
jo
inc
cdq
bound
mul
mov
test
rol
xor
or
mov
test
or
cmp
mov
and
add
leave
outs
push
sbb
movs
inc
enter
js
push
shl
xor
nop
outs
xchg
pop
test
and
cmp
dec
nop
fiadd
push
outs
movs
adc
shr
outs
aam
shl
xor
mov
in
je
add
(bad)
dec
sbb
stos
loope
and
dec
outs
sub
outs
and
or
movs
outs
push
ret
dec
ret
sbb
outs
pop
mov
push
(bad)
jb
mov
and
dec
add
pusha
outs
dec
outs
dec
xor
or
nop
mov
outs
sahf
jno
jo
leave
mov
ins
add
pop
cwde
pusha
dec
outs
lock
pop
and
rcl
jo
dec
or
dec
ret
sbb
jo
jo
rol
jp
adc
push
jno
rol
add
and
add
xchg
pusha
outs
dec
outs
xor
nop
fisub
lock
and
adc
pushf
sbb
outs
stos
loope
xor
sub
out
dec
dec
outs
dec
or
sub
or
and
dec
or
(bad)
ins
jo
leave
mov
test
or
outs
dec
outs
fwait
pusha
dec
ins
movs
outs
add
mov
ja
cmp
ret
dec
xor
dec
adc
push
js
lahf
popf
pusha
mov
mov
rol
xor
outs
sub
cwde
outs
add
inc
dec
mov
aad
sub
sub
dec
xor
outs
or
cmps
loope
nop
or
outs
fadd
test
push
out
sub
sub
dec
outs
sub
outs
add
or
movs
outs
cld
aaa
or
adc
sbb
or
mov
cmp
add
pop
loope
sbb
sub
dec
add
pop
or
xor
nop
fisub
adc
mov
fdiv
dec
mov
inc
inc
and
stos
or
dec
mov
xor
addr16
sub
add
dec
inc
push
sbb
addr16
sbb
add
mov
das
mov
dec
sub
data16
xor
push
xor
mov
add
inc
and
xchg
sbb
stos
loope
sub
sub
pop
and
or
movs
pop
in
fdiv
adc
sbb
add
call
mov
shl
xor
pop
sbb
movs
pop
call
adc
sbb
push
push
in
das
and
dec
or
mov
pop
dec
pop
fadd
push
pop
and
pop
adc
jo
test
sahf
test
das
push
ins
dec
or
sub
dec
pop
ja
cmp
push
and
mov
push
or
mov
mov
sub
xor
cwde
outs
add
cmp
pop
lahf
iret
inc
inc
and
mov
add
xor
or
aad
or
push
xor
nop
or
cmps
loope
ja
cwde
ja
sub
(bad)
pusha
inc
or
aad
popf
xor
dec
ja
xor
or
loope
loope
sub
cwde
jns
enter
pop
shl
sbb
sub
dec
ja
sub
movs
xor
or
movs
addr16
fmul
inc
cmp
or
ret
add
dec
dec
je
push
mov
iret
jo
jae
prefetch
cmp
repnz
repz
add
fcom
dec
ja
pop
shl
ja
fiadd
sbb
sbb
mov
pop
adc
out
stos
loope
aaa
ja
dec
ja
pusha
jo
dec
ja
adc
movs
ja
or
ja
mov
or
ficomp
cmp
shl
dec
ja
dec
ins
add
cdq
pusha
ja
xlat
or
jg
nop
jg
pop
dec
dec
sahf
pop
mov
mov
xor
aad
mov
mov
mov
dec
xchg
dec
xchg
push
xor
xchg
or
and
fcom
and
xchg
add
fcom
dec
xchg
push
pop
shl
xchg
movs
fimul
sbb
outs
sbb
pop
scas
xchg
push
xchg
ins
cmp
push
pop
and
xchg
dec
xchg
rcl
dec
or
cmp
push
ret
dec
je
xchg
mov
xchg
mov
jg
cmp
pop
mov
dec
dec
and
loope
or
leave
test
nop
dec
xchg
push
ret
and
dec
add
fcom
dec
dec
push
pop
shl
dec
movs
fimul
sbb
and
nop
dec
push
scas
xchg
pop
and
pusha
or
fiadd
push
dec
movs
lock
xor
dec
pusha
and
or
mov
test
add
jbe
sbb
mov
addr16
push
fsubr
xor
mov
mov
test
mov
scas
pushf
mov
push
sbb
(bad)
mov
sbb
jae
stos
xor
dec
ficom
or
and
rcl
push
or
cwde
mov
je
inc
push
push
cmps
or
dec
or
popa
mov
cmp
mov
push
inc
push
cs
ret
pop
imul
mov
ficom
outs
enter
pop
test
leave
push
add
cmps
mov
pop
mov
shr
shl
add
fsub
fldenv
loope
cmp
mov
je
enter
inc
fadd
mov
adc
sbb
movs
in
cwde
and
and
rcr
mov
enter
stos
cwde
mov
mov
push
aam
test
test
daa
and
or
mov
mov
jg
inc
dec
add
add
cdq
adc
inc
or
or
xchg
mov
and
or
scas
xor
mov
mov
cs
(bad)
pop
add
test
mov
js
scas
and
movs
(bad)
aaa
sahf
xchg
call
mov
nop
add
jl
call
(bad)
ffree
dec
or
or
aas
mov
push
into
mov
xchg
cmp
mov
enter
(bad)
pushf
dec
add
and
xlat
mov
enter
arpl
adc
loop
in
dec
add
inc
add
mov
sbb
pusha
dec
pop
scas
jb
call
add
add
repnz
mov
les
lahf
retf
mov
enter
cmps
repnz
or
aam
sub
push
retf
fsub
retf
test
or
jl
lahf
call
shl
lahf
retf
mov
hlt
mov
lds
aam
call
mov
xlat
or
sub
fst
cwde
ficom
repnz
aam
sbb
sub
or
and
loopne
cmps
repnz
jo
push
cmp
lahf
push
ins
inc
mov
adc
icebp
ds
cmps
pop
inc
adc
cmp
imul
xchg
sbb
adc
ja
jl
pop
pusha
adc
icebp
pop
test
pop
lahf
retf
dec
out
push
(bad)
in
push
add
scas
stos
jl
dec
inc
jmp
sub
sbb
lahf
retf
adc
sbb
and
mov
ds
mov
pusha
rcl
es
test
ja
adc
cmps
repnz
cli
nop
sub
dec
lods
arpl
sub
adc
dec
out
movs
sbb
xor
mov
xchg
pop
std
dec
cwde
adc
pushf
mov
mov
mov
add
in
mov
xchg
scas
sti
adc
add
mov
xchg
or
mov
nop
adc
dec
add
adc
dec
adc
sub
arpl
adc
cmp
lea
xor
lock
push
adc
jl
xor
cmp
in
in
adc
daa
lock
and
push
stc
push
hlt
or
clc
inc
and
je
add
and
adc
out
and
adc
es
xchg
jo
mov
mov
test
and
inc
or
jae
push
icebp
ror
adc
pop
sub
shl
daa
bound
or
sbb
or
add
sbb
mov
call
ret
lea
sbb
scas
xchg
repnz
mov
or
adc
mov
out
xor
xchg
out
jge
mov
jecxz
call
(bad)
adc
lods
push
outs
mov
aam
(bad)
dec
in
stc
adc
dec
adc
mov
inc
push
sub
jnp
retf
adc
pop
cwde
and
out
aam
dec
pop
es
ret
nop
push
push
mov
mov
push
(bad)
in
inc
add
rol
cs
mov
ret
lea
call
mov
dec
add
not
and
pop
pop
fimul
adc
div
std
dec
cmp
jb
mov
jmp
xor
ins
push
aaa
mov
inc
add
mov
add
cmp
jbe
xor
or
dec
sbb
(bad)
pop
push
lock
xor
mov
push
pushf
push
inc
or
(bad)
jmp
test
ja
mov
cmp
ja
xchg
xchg
dec
push
adc
push
retf
push
rcr
loopne
iret
repz
out
cmc
cld
add
or
xor
jmp
mov
inc
mov
in
cmp
sti
sbb
push
jmp
mov
cld
sub
mov
jge
adc
xor
sbb
add
out
or
femms
mov
and
dec
mov
int
into
mov
shl
and
and
movs
test
mov
and
and
and
(bad)
enter
adc
jle
push
xor
cld
mov
ror
outs
(bad)
leave
stos
jmp
jmp
pop
inc
jmp
mov
int3
inc
pop
xor
sub
dec
rcr
mov
jne
cld
jg
sub
js
mov
add
cwde
cmp
lods
push
cmp
icebp
mov
les
enter
mov
ror
cld
adc
jmp
data16
cs
inc
adc
movzx
test
jne
mov
sti
out
cmp
je
pop
xor
or
out
test
push
xchg
or
ret
shl
push
mov
push
and
push
ja
lock
push
or
or
push
enter
jno
cmp
inc
lock
inc
and
and
dec
mov
or
sahf
or
adc
push
mov
inc
push
or
push
cld
push
adc
add
inc
xlat
ds
or
and
cmp
inc
sbb
push
test
mov
fs
daa
pop
sbb
adc
mov
dec
push
sub
clc
nop
fprem
sar
aaa
xor
and
aam
pop
jle
add
(bad)
pop
cld
jne
movsx
cli
add
cmp
mov
inc
push
fild
outs
cmp
mov
enter
or
push
mov
clc
stos
sar
add
cmp
retf
push
ret
jge
cdq
inc
(bad)
hlt
js
pop
or
in
xchg
push
dec
adc
cld
jmp
mov
daa
fimul
jmp
add
sbb
and
xchg
dec
mov
adc
xchg
add
pop
sbb
fs
jecxz
push
lea
cld
push
ins
inc
dec
xchg
add
push
add
clc
mov
xchg
lea
add
fld
jl
and
out
xchg
inc
pop
jae
pop
clc
xor
mov
mov
dec
xor
sub
jno
clc
lock
lock
cmp
push
cmp
mov
cmp
addr16
mov
mov
jo
inc
dec
and
pop
pushf
stos
jmp
and
cmp
jge
xor
mov
adc
in
adc
jmp
scas
pop
dec
shl
mov
add
mov
test
cmp
mov
or
pop
jge
pop
or
je
mov
bound
mov
inc
pop
push
shl
cs
sbb
inc
add
(bad)
pop
sbb
scas
add
mov
cmc
add
sbb
mul
mov
ins
lock
retf
xlat
cmp
fisub
iret
les
mov
rcl
cmps
sub
test
pop
aam
fcomp
loopne
dec
push
and
inc
or
add
stos
sbb
and
test
push
jne
clc
fadd
sbb
or
push
out
in
adc
push
sbb
mov
or
loopne
add
mov
js
shl
adc
dec
mov
or
jne
or
dec
aad
mov
in
sbb
fimul
add
mov
push
out
add
pop
mov
pmaxsw
sub
jmp
inc
sbb
sbb
or
add
push
sti
idiv
fucompp
arpl
jmp
adc
test
add
rol
push
jo
loopne
cs
jl
xor
clc
cmp
lock
dec
stos
ds
pop
pusha
aaa
pop
dec
push
mov
add
and
push
in
jne
aas
or
xchg
inc
dec
mov
clc
retf
mov
fild
pushf
pop
mov
add
ins
jnp
adc
add
xchg
mov
inc
xlat
out
jge
jne
dec
xchg
sar
mov
ja
mov
pop
div
push
ins
push
or
test
push
pushf
jecxz
or
jmp
dec
neg
sbb
inc
sub
shl
scas
cmp
bound
das
inc
and
cmps
pushf
jg
enter
mov
in
mov
das
mov
clc
push
push
xlat
ficom
add
add
cmp
add
xor
je
xor
jg
outs
js
or
ins
idiv
xor
adc
push
aam
xchg
rcr
movaps
push
adc
pop
adc
cmp
cmp
mov
pusha
xor
pop
mov
push
mov
or
sbb
call
adc
jl
sub
sbb
adc
lods
pusha
jo
or
nop
jge
jnp
mov
fsubr
sub
aas
dec
fucomi
aam
mov
aam
fs
arpl
stos
mov
in
and
fiadd
arpl
mov
jecxz
fiadd
mov
rcr
pushf
je
jae
mov
cld
mov
aas
outs
sub
and
add
ja
push
push
fld
popf
jle
ja
add
cmp
test
or
(bad)
push
add
pop
fcmovnbe
xchg
adc
push
repnz
or
mov
mov
rcr
pop
cdq
rol
adc
mov
push
sub
jno
adc
test
sbb
aas
add
fidiv
hlt
ret
and
sub
ret
je
call
std
ss
repnz
outs
mov
jmp
in
in
mov
xchg
sub
sbb
shl
xchg
(bad)
adc
xor
loope
or
xor
cld
aaa
shr
inc
xchg
jbe
or
sub
and
addr16
add
invd
push
mov
in
outs
jmp
push
xor
push
sahf
popa
adc
push
xor
das
mov
push
js
jno
mov
and
mov
inc
add
inc
mov
jmp
add
mov
dec
je
add
jmp
iret
mov
clc
mov
push
imul
sub
inc
add
sub
repz
adc
(bad)
adc
stc
fstp
push
jmp
jne
sbb
les
ja
add
add
push
iret
mov
cmc
lods
cmp
xor
pop
out
push
adc
push
ja
add
sub
push
mov
or
cmp
sub
js
cwde
xor
xor
jl
nop
nop
mov
pop
mov
mov
push
rcl
push
mov
sub
aaa
adc
lock
push
ficomp
(bad)
xor
fsubr
(bad)
lock
jae
jo
sub
fsubr
test
hlt
sub
mov
mov
push
sub
js
je
mul
inc
mov
push
cmp
push
movs
mov
(bad)
mov
add
add
or
pop
aad
data16
out
mov
jae
imul
test
outs
shr
inc
mov
pop
push
pop
jae
push
xor
sbb
shl
sbb
mov
fsub
nop
(bad)
imul
or
adc
inc
add
lods
xchg
jmp
mov
stos
iret
pop
shl
inc
fcmovnu
mov
scas
push
add
cmps
movs
loope
out
sbb
pusha
inc
loopne
push
ss
jnp
dec
nop
movs
ja
sbb
mov
push
cmp
fist
and
add
xor
icebp
add
ins
mov
pop
cmps
add
and
fistp
ret
retf
add
add
ss
int3
lock
or
xor
pop
rcr
sahf
pop
mov
ret
jl
push
push
add
push
movs
sbb
les
fadd
test
push
pop
mov
sbb
inc
mov
push
in
in
mov
imul
ja
jmp
idiv
ins
push
push
sbb
outs
push
pop
or
sub
lock
sub
pop
pusha
jo
test
add
add
push
stc
adc
cld
retf
add
nop
int3
(bad)
jno
and
push
add
outs
push
pop
xchg
mov
jb
cmp
push
push
sbb
dec
pusha
das
mov
repnz
iret
push
inc
add
push
popa
mov
stc
ja
jbe
dec
xor
sub
xor
xchg
xor
and
pop
mov
xor
xor
dec
aaa
add
gs
mov
and
add
add
(bad)
int3
push
dec
fs
je
arpl
push
inc
inc
popa
jae
es
push
inc
jb
jg
cli
jno
add
or
or
add
std
jne
jmp
add
cmp
adc
fdivrp
mov
gs
imul
outs
jb
push
mov
aas
pusha
nop
add
inc
pop
fistp
pop
push
mov
jbe
pushf
jne
fisubr
je
inc
push
outs
fldcw
fcmovnu
gs
add
cmp
jne
cbw
data16
xchg
xchg
xor
pusha
outs
mov
in
mov
inc
push
imul
outs
in
dec
push
adc
frstor
jo
sbb
gs
jge
fldcw
clc
ror
pop
inc
jb
ins
(bad)
push
lock
mov
fldenv
mov
ins
dec
add
sbb
repz
pop
jae
sbb
out
or
push
and
loopne
cwde
lds
lds
or
lods
ror
out
leave
sbb
add
or
add
sbb
inc
dec
adc
mov
ins
in
sbb
dec
jo
xor
push
adc
inc
fistp
fimul
inc
dec
mov
adc
mov
ins
and
or
mov
popa
inc
add
pusha
test
pop
push
adc
sub
in
shr
push
add
mov
inc
ror
and
dec
add
sub
in
ss
add
sbb
in
push
push
jb
hlt
pop
cs
jae
inc
jle
inc
fs
adc
outs
sbb
or
adc
sbb
enter
xchg
inc
adc
fiadd
iret
push
imul
or
mov
push
jnp
push
xor
imul
jg
(bad)
sbb
stos
push
push
popf
sub
inc
jns
pusha
fs
sbb
test
imul
inc
addr16
add
pushf
mov
test
lods
dec
jne
bound
pop
add
push
sbb
pop
pop
loopne
imul
add
(bad)
adc
sbb
gs
jae
fwait
pop
jb
add
jbe
xor
test
scas
jge
addr16
and
loopne
jle
inc
inc
dec
addr16
add
ins
xor
inc
mov
xor
lea
or
rol
(bad)
shl
inc
mov
and
adc
push
iret
inc
inc
and
ins
jns
mov
je
arpl
aad
dec
or
or
je
outs
push
push
popa
ja
and
or
jnp
out
pop
ds
gs
jl
or
inc
ins
out
je
cmps
scas
add
mov
jmp
mov
push
ins
fs
call
test
ficom
lahf
push
fwait
cmp
dec
gs
dec
sbb
pushf
push
sbb
ins
cmp
pusha
call
ret
or
jmp
adc
sub
int
fs
add
in
and
fst
loopne
sbb
sti
loop
add
sbb
mov
add
jne
mov
and
fisttp
jo
retf
xor
mov
xchg
pop
inc
jnp
inc
push
(bad)
jo
dec
gs
jae
imul
xchg
xlat
outs
and
mov
jns
xlat
add
aad
ins
movs
ins
and
mov
arpl
call
push
std
adc
mov
pop
test
out
xor
clc
cmp
jmp
in
in
out
pop
xorps
in
in
aas
aaa
das
daa
dec
cmp
pop
mov
push
pop
lock
test
fsubr
repnz
mov
lods
inc
loopne
jnp
loopne
add
les
add
adc
jbe
imul
cs
push
xor
mov
push
add
pop
lods
lss
or
ja
mov
cmp
dec
push
ja
inc
add
loopne
dec
imul
add
scas
lods
sub
pop
xor
push
dec
add
inc
xchg
add
pushf
add
movd
pop
push
push
rol
inc
mov
sub
or
or
xchg
add
inc
aas
cmp
loopne
popa
repz
jmp
fld
jno
clc
movzx
lea
clc
push
shl
push
push
or
sub
sub
jae
jo
in
jne
rcr
call
mov
sbb
cld
jmp
mov
dec
mov
pop
pop
clc
push
movzx
mov
call
dec
or
add
in
jg
out
js
push
add
clc
dec
jne
mov
or
cmp
dec
cmps
das
add
mul
int3
mul
cmp
movs
sar
mov
jge
xor
jmp
outs
and
sbb
sbb
pop
cmp
dec
sti
ror
dec
fisttp
in
mov
(bad)
lock
cmp
popf
test
fdiv
xchg
or
test
and
pusha
cmp
add
(bad)
adc
push
mov
mov
sti
pop
shr
push
and
in
je
cmps
in
add
loopne
repnz
fsub
iret
add
jmp
pop
ret
ffreep
pop
sbb
jl
into
int3
sbb
push
xchg
dec
lea
mov
movs
add
pop
xchg
sbb
mov
add
or
fs
adc
xchg
jecxz
and
push
push
dec
clc
add
cli
into
popa
cld
push
xor
or
add
call
fdiv
retf
xchg
cli
xchg
aam
mov
clc
xchg
clc
into
aam
(bad)
jmp
fwait
fwait
nop
jle
shl
repnz
mov
mov
rol
mov
(bad)
sub
jbe
fs
ret
jbe
adc
call
mov
mov
call
jmp
sbb
mov
mov
rcr
hlt
sbb
xchg
test
shl
aaa
mov
mov
(bad)
jp
icebp
loop
inc
mov
jbe
sahf
stos
inc
and
and
jle
push
or
sbb
jmp
int
sti
popa
pop
add
mov
or
push
ds
xchg
xor
add
daa
inc
repnz
inc
int3
push
xchg
add
ret
lahf
dec
sbb
add
inc
or
es
add
iret
and
scas
in
shr
add
and
inc
and
jno
adc
andnps
aaa
out
mov
mov
lea
and
mov
daa
test
and
in
inc
mov
ror
fimul
arpl
and
ret
xlat
inc
xor
inc
and
xchg
dec
or
loopne
es
cmps
loopne
outs
jb
inc
xlat
or
inc
int
jg
mov
sar
mov
or
pop
jne
jge
je
jmp
xor
mov
inc
jmp
mov
in
shl
call
lods
into
xor
push
push
not
aas
ins
shl
out
icebp
loopne
pop
je
jmp
jo
dec
sbb
cmp
adc
and
sbb
ins
int
inc
adc
or
xor
sub
ins
jno
sub
inc
xchg
aaa
test
xchg
hlt
jae
or
inc
dec
push
mov
inc
stos
jg
and
or
mov
push
mov
mov
stos
inc
clc
sbb
xor
push
mov
mov
sub
int3
and
int3
xchg
enter
cmp
jmp
jmp
or
loope
mov
inc
and
cld
xchg
hlt
add
rcr
clc
cmp
and
sbb
xchg
mov
pop
je
adc
sbb
sub
in
ss
xor
cwde
add
rcl
xchg
test
jno
test
retf
adc
sbb
jl
into
test
sar
call
fs
ss
jno
out
sub
push
inc
sub
mov
add
jbe
lock
cmp
mov
jle
xchg
aas
pop
enter
je
push
imul
mov
xchg
mov
jb
adc
hlt
inc
sbb
mov
clc
mov
test
or
dec
shl
std
je
push
out
inc
sub
adc
cs
adc
sub
and
mov
sub
adc
add
push
scas
fs
inc
add
xchg
inc
out
mov
sbb
sub
ss
inc
or
into
xchg
cmps
das
dec
ret
push
adc
xor
mov
addr16
push
dec
je
aad
xor
push
or
or
or
in
mov
jbe
ins
sbb
fwait
and
aaa
cmps
push
inc
or
cmp
nop
jbe
aaa
scas
mov
and
push
inc
call
add
sbb
mov
push
xlat
add
arpl
inc
inc
mov
xchg
ds
je
dec
es
push
sub
fmul
or
or
mov
or
inc
ficom
fs
push
cld
inc
mov
js
sub
push
add
push
adc
mov
pop
xlat
sub
lahf
push
js
test
ja
mov
xchg
adc
in
sahf
xor
lahf
adc
push
not
sub
add
jnp
icebp
push
inc
inc
inc
sub
or
mov
pop
stc
xlat
mov
jmp
jbe
add
dec
mov
push
add
pop
add
not
cmp
not
scas
push
ds
jmp
movs
adc
pop
ror
movs
pop
call
outs
outs
ja
xor
add
ret
aaa
icebp
add
inc
sub
clc
push
inc
and
mov
push
gs
outs
xchg
fcom
xchg
ins
and
std
add
mov
cmp
dec
and
cmc
dec
bound
ret
(bad)
dec
outs
outs
(bad)
clc
mov
push
aas
icebp
push
(bad)
popa
fsubr
movs
pop
and
(bad)
or
or
cmp
adc
mov
xchg
push
jg
or
push
and
imul
mov
or
loopne
arpl
push
stos
int3
fwait
lds
or
and
je
daa
sbb
inc
rcl
mov
ins
gs
out
jo
mov
cmps
xor
aad
cs
pop
and
pusha
inc
mov
or
cmc
test
(bad)
test
mov
lods
imul
push
aas
iret
aam
add
loope
in
cwde
xchg
mov
psrld
push
inc
movs
aam
adc
add
fdivr
movs
pop
mov
push
stos
sub
or
fld
xchg
cmps
mov
jns
xchg
mov
mov
cmps
cmps
jge
or
push
and
pusha
adc
jnp
(bad)
cmp
push
push
mov
in
mov
dec
test
mov
or
mov
pop
neg
imul
(bad)
inc
nop
cs
push
scas
(bad)
and
scas
cmp
neg
xchg
pop
(bad)
mov
xor
dec
inc
xor
mov
jl
jne
or
loop
jecxz
jnp
or
xchg
pop
ret
packuswb
(bad)
(bad)
unpckhps
unpckhps
movhps
jge
repnz
jg
scas
jmp
cmp
xor
sub
jle
add
pop
add
outs
add
sysexit
add
adc
jecxz
adc
inc
ret
mov
sbb
mov
addr16
xor
str
or
jl
(bad)
jne
(bad)
test
das
or
pop
push
jle
jae
mov
(bad)
sub
add
inc
push
sbb
and
pop
ja
frstor
push
inc
arpl
cmp
shl
inc
call
sar
arpl
add
dec
xchg
add
push
push
dec
shl
fcomp
xor
mov
das
js
jns
out
enter
mov
mov
iret
jns
mov
jns
jecxz
js
push
pop
outs
gs
sbb
ja
shl
adc
dec
outs
mov
ins
popf
add
inc
or
and
sbb
add
jns
sub
dec
adc
stos
xchg
or
sub
or
xchg
fwait
sub
or
jno
lea
cmp
lea
jnp
add
fist
mov
mov
stos
add
ss
mov
lea
and
call
or
push
add
add
push
or
and
or
dec
in
imul
add
xor
sub
mov
add
in
add
imul
sub
out
mov
ffree
and
sbb
add
and
test
push
jne
mov
(bad)
in
sbb
mov
inc
jb
and
push
ror
mov
cmc
aam
(bad)
push
(bad)
cmc
mov
js
dec
mov
adc
(bad)
(bad)
leave
lods
mov
pop
add
fisub
dec
jmp
nop
cmp
push
sub
mov
inc
or
popa
push
lahf
pop
inc
outs
icebp
lds
or
iret
test
dec
es
inc
inc
push
(bad)
rcl
xchg
pop
daa
les
jbe
pop
inc
mov
outs
jns
adc
sbb
inc
push
neg
inc
ret
or
aas
mov
xchg
out
or
dec
add
push
cmp
out
test
inc
ja
ja
dec
sbb
das
or
inc
mov
test
cvtpi2ps
add
fild
ffreep
mov
fiadd
pop
pop
ror
aaa
popf
or
or
and
and
mov
cmp
add
adc
and
(bad)
cwde
or
dec
sub
dec
dec
push
movs
jmp
rol
test
jge
(bad)
(bad)
arpl
add
sbb
add
jne
ins
js
mov
ss
inc
fstp
inc
shr
push
and
jae
dec
pusha
adc
push
mov
mov
cmps
and
adc
jae
test
adc
or
or
lea
fisub
add
jae
mov
add
mov
rcl
(bad)
rcl
shr
push
call
adc
cmps
(bad)
adc
dec
jmp
adc
js
inc
movs
cmp
(bad)
enter
in
mov
jle
dec
push
and
or
in
sahf
cmp
push
pop
lea
add
add
out
add
adc
dec
push
rol
push
mov
xor
ins
mul
mov
test
jne
mov
es
jnp
adc
adc
jecxz
ja
mov
jbe
push
xor
xor
mov
bound
inc
xor
(bad)
pop
or
mov
sysret
sbb
adc
mov
not
mov
inc
push
mul
(bad)
mov
es
aaa
rol
mov
es
pop
jns
shl
mov
dec
gs
xor
and
cmp
push
and
or
xchg
rcl
repz
inc
js
mov
cs
fcom
xor
pusha
and
adc
sbb
add
aas
push
jnp
outs
(bad)
ja
jge
and
mov
pop
in
lock
push
mov
adc
mov
sub
inc
outs
add
push
sar
jne
ins
inc
push
mov
movs
out
add
ss
cli
or
jb
inc
imul
xor
mov
bndstx
aas
push
cmp
mov
adc
call
pop
mov
adc
sbb
sub
adc
pop
test
pop
jae
or
sbb
adc
add
add
ret
sub
ja
loopne
and
cmp
shl
lods
adc
(bad)
in
add
inc
inc
inc
test
popa
mov
jo
adc
fild
push
in
mov
push
add
mov
push
rol
add
jo
rol
xor
or
add
mov
sar
shl
xor
cmp
sahf
add
fisttp
push
call
mov
mov
mov
pop
cmp
fs
push
lea
js
push
push
mov
mov
sti
mov
test
sub
je
or
jae
jmp
jne
push
add
loopne
inc
inc
and
mov
pop
not
add
fs
mov
icebp
or
mov
retf
pop
inc
dec
xor
in
xchg
or
popf
std
pop
add
adc
mov
retf
ins
cmp
mov
mov
inc
pop
movs
lea
inc
ret
jmp
mov
adc
mov
outs
sbb
iret
mov
push
sar
jmp
xor
not
adc
lea
add
dec
mov
imul
lea
mov
mov
jno
add
jno
or
es
xchg
jmp
xor
ins
push
push
xor
or
adc
sahf
cmps
fcomp
les
mov
ret
sub
jb
xchg
sbb
push
mov
and
mov
cmp
or
xor
or
xchg
mov
or
push
add
push
outs
push
mov
jl
je
je
cmp
and
aad
call
icebp
inc
add
mov
pushf
push
inc
clc
push
mov
push
mov
add
test
or
mov
cmp
push
pop
cdq
jo
dec
mov
shr
fadd
add
popa
ret
jmp
inc
test
or
mov
(bad)
cmp
sbb
xchg
and
adc
cs
xor
jo
mov
imul
inc
mov
or
in
lock
adc
test
add
pop
sub
jo
clc
or
xchg
cmp
or
mov
push
test
in
jmp
sub
mov
mov
aad
adc
cmp
push
jne
int
sub
mov
dec
push
cmp
mov
add
inc
xchg
popa
adc
add
inc
adc
(bad)
xlat
sbb
xchg
push
loope
mov
ja
lock
in
cli
xchg
jns
pop
jo
jns
inc
jmp
cmp
js
imul
push
out
test
adc
scas
mov
push
(bad)
mov
test
jge
jge
jbe
pop
jge
jno
ja
ret
push
movnti
and
mov
or
jne
push
mov
call
cmp
pusha
inc
cld
sub
mov
iret
les
pusha
and
out
inc
movs
jmp
(bad)
jmp
cmp
je
push
aaa
push
in
mov
imul
add
inc
sbb
mov
xchg
sub
sbb
dec
inc
push
cmp
shl
jbe
inc
mov
mov
cmp
adc
cmp
pop
lds
sub
xlat
out
cmps
or
in
mov
mov
sbb
mov
aam
mov
mov
xor
xchg
enter
jle
jb
add
(bad)
jae
jmp
(bad)
fidiv
loopne
nop
push
xchg
pop
inc
jmp
jecxz
add
push
dec
mov
mov
adc
lock
lea
mov
inc
push
lea
mov
push
ss
xchg
mov
or
jo
and
push
in
or
in
enter
xchg
xchg
rol
test
and
xor
test
cmp
dec
stos
aas
pop
xchg
stos
lock
jne
pop
imul
int3
or
add
or
div
mov
lock
xchg
push
es
pop
pop
cmp
jbe
jmp
ss
mov
adc
adc
inc
mov
test
jecxz
or
mov
pop
xchg
mov
daa
jns
cmp
mov
sub
push
add
push
cwde
and
into
push
sbb
adc
and
loope
pusha
inc
lock
sub
jb
int3
cmp
fistp
adc
fcomp
dec
or
scas
and
lahf
pusha
popa
pop
pop
jecxz
sbb
push
push
dec
hlt
sahf
push
test
jno
push
cmp
cwde
add
ins
add
retf
push
inc
xor
fwait
ds
add
sbb
adc
psubsb
test
shl
mov
push
jo
cmps
or
int
pop
hlt
dec
cs
xor
lock
mov
retw
sub
or
xor
je
adc
call
jge
ds
cld
jmp
loop
adc
hlt
std
pop
xor
cli
sub
ins
sbb
cmps
test
jne
lock
jbe
add
pop
add
sbb
push
scas
dec
movs
jb
inc
push
shl
es
push
push
lea
sahf
data16
call
jno
mov
lahf
add
or
jne
popa
push
and
fmul
push
mov
ja
mov
mov
fwait
mov
jmp
loope
in
(bad)
mov
loope
loopne
scas
in
outs
in
stos
ret
test
cdq
stos
js
add
ss
out
dec
fwait
inc
div
cwde
dec
mov
cmp
or
push
ret
push
and
retf
clc
outs
jg
je
fprem
sti
xchg
inc
sub
sub
aas
(bad)
je
jmp
out
mov
cmp
retf
ret
or
sbb
cmps
cmp
or
xor
jae
or
adc
cmp
cmp
inc
cmp
pop
xchg
movs
xor
sbb
test
sbb
ja
sti
test
test
mov
call
mov
sub
jnp
push
imul
lods
or
mov
xchg
idiv
shl
sub
shl
fwait
loopne
sti
clc
movzx
ds
sbb
lock
add
or
push
or
loopne
dec
out
pushf
(bad)
pushw
sbb
fwait
or
pop
lea
sbb
pop
mov
popa
test
clc
outs
pushf
cmp
mov
jmp
add
xor
add
cmp
mov
push
and
test
imul
inc
cwde
xchg
jo
mov
pop
and
cmp
in
jb
cli
in
aas
into
aaa
sbb
outs
mov
pusha
icebp
jmp
es
push
cmp
xchg
dec
and
add
sbb
mov
jbe
inc
neg
(bad)
dec
test
push
ret
sub
stos
inc
nop
or
xchg
dec
xchg
aad
iret
mov
iret
adc
sbb
adc
pop
fisttp
sub
mov
mov
inc
gs
stos
test
cmp
jb
and
ins
fmul
jb
inc
cmc
(bad)
add
andps
add
jne
adc
pop
ret
test
stc
dec
das
mov
call
iret
enter
mov
adc
leave
clc
das
xor
(bad)
sbb
push
das
mov
ds
ja
pop
sbb
adc
cmp
je
loopne
je
or
pop
nop
popa
adc
aaa
mov
jmp
sbb
mov
(bad)
adc
and
shl
cmp
fwait
pop
adc
in
sub
lea
or
push
dec
cld
adc
lea
push
add
pushf
clc
shl
cld
push
call
div
out
pushf
lods
je
mov
lea
mov
inc
je
sbb
sub
xor
neg
pop
pop
push
pop
lock
mov
xor
dec
fstp
pop
mov
idiv
mov
cmp
(bad)
adc
in
and
mov
sbb
cmp
and
loop
adc
test
pop
sub
sub
pop
xchg
pop
ins
test
mov
xchg
or
adc
inc
in
daa
pop
enter
jb
mov
das
and
fistp
mov
xchg
dec
(bad)
lods
popf
(bad)
cld
adc
jb
fild
mov
imul
out
dec
jmp
dec
out
and
stc
popa
data16
jae
and
sub
test
add
dec
mov
test
or
sub
mov
xchg
retf
cmc
cmc
sbb
push
mov
or
shl
cmp
leave
cmp
inc
jno
inc
jb
push
mov
inc
mov
rcl
(bad)
fidiv
test
addr16
or
mov
sbb
(bad)
jbe
pusha
aas
dec
sahf
mov
add
hlt
outs
push
mov
pop
(bad)
push
pusha
mov
aaa
scas
fst
ror
rol
sar
push
sub
mov
in
cdq
add
and
sti
mov
sub
mov
add
dec
nop
fwait
and
es
fwait
push
mov
out
xchg
hlt
ret
cs
loopne
add
sahf
enter
cmp
fs
jl
aad
ret
jbe
pop
mov
test
xor
loopne
jb
inc
cmp
adc
or
lea
add
inc
ror
xchg
jno
jp
xor
inc
into
dec
test
jl
inc
scas
in
icebp
jecxz
adc
cmp
jne
pop
dec
mov
adc
or
push
xchg
jle
push
cld
jbe
data16
mov
sub
add
dec
jne
jecxz
fcom
and
gs
cmp
shr
call
and
fs
mov
mov
lea
mov
mov
clc
jnp
sub
sub
in
xor
mov
inc
sub
mov
jmp
mov
adc
dec
fcom
mov
xchg
fdivr
retf
out
lock
punpcklbw
inc
or
je
jl
scas
rcr
sub
jmp
pop
into
lea
push
and
add
xchg
jl
cmp
add
xchg
rcl
and
or
fwait
push
jl
pop
or
shr
jno
mov
cmp
inc
ret
mov
sbb
imul
inc
mov
ficom
mov
and
jo
sub
lea
push
inc
setg
inc
push
xlat
or
retf
dec
fwait
sub
push
ret
data16
movs
or
mov
add
enter
xor
push
add
push
out
int3
stc
test
push
xor
push
push
jo
adc
pop
loopne
mov
mov
loope
mov
lea
ins
add
xchg
inc
push
lock
add
dec
add
in
imul
sub
cmp
ret
pop
mov
pop
or
push
(bad)
and
mov
add
in
out
sbb
dec
mov
aas
repz
mov
cmp
retf
push
inc
jno
out
jmp
jmp
ror
stos
shr
ja
icebp
add
dec
std
jg
mov
push
push
push
mov
mov
repz
mov
cld
push
movs
je
je
xor
push
push
push
movs
adc
lock
inc
sub
cwde
fs
dec
inc
(bad)
pop
cmps
aas
in
mov
sbb
pop
in
and
aas
jo
data16
dec
push
sub
xor
test
and
xchg
cli
mov
scas
add
pusha
push
sar
retf
cld
jg
adc
(bad)
test
movs
inc
or
clc
sbb
and
pop
pusha
les
add
and
inc
(bad)
cmc
pusha
hlt
jmp
push
adc
rcl
cwde
adc
(bad)
fwait
inc
xor
sub
sbb
daa
loopne
mov
nop
cmps
rcl
mov
mov
mov
cmc
call
mov
and
pusha
mov
add
shl
inc
xlat
aaa
jmp
or
dec
mov
add
add
adc
pop
lfs
or
mov
and
pusha
mov
loopne
int3
(bad)
jmp
mov
loop
shr
mov
mov
call
loopne
xor
movs
push
dec
scas
push
xchg
adc
adc
cmp
jae
or
addr16
or
(bad)
sub
loope
inc
call
hlt
jp
test
fsub
je
mov
jp
cmp
aas
and
push
inc
add
inc
cld
je
in
mov
ret
jle
movs
sti
out
jp
ret
dec
pop
jl
inc
cmp
jne
fdiv
cld
lock
ficomp
add
out
cmp
shl
jmp
(bad)
jge
mov
ins
add
(bad)
je
sbb
(bad)
std
add
mov
pop
push
or
jmp
add
sub
test
dec
int3
lea
add
leave
push
and
inc
xabort
ins
hlt
sub
push
or
les
adc
inc
or
sub
jnp
adc
pop
or
push
fs
loope
scas
cmc
mov
popf
pop
jmp
mov
loopne
ret
cwde
jmp
ins
cmp
cld
in
add
adc
jmp
dec
(bad)
icebp
sti
dec
sbb
mov
(bad)
call
ja
ja
dec
add
fsub
aam
fabs
ds
add
inc
aam
scas
inc
sub
add
cdq
loopne
push
inc
pop
pop
jmp
add
data16
daa
dec
shl
adc
scas
lock
and
mov
jp
mov
and
into
adc
mov
pop
sbb
mov
add
or
inc
xor
retf
lods
push
ret
and
push
pop
fdivr
add
xor
test
es
add
cmp
push
fnstsw
push
xor
outs
enter
adc
pop
ror
dec
or
outs
ss
ret
jno
inc
add
sahf
sbb
xchg
jmp
fnsave
movs
jg
add
add
sbb
add
adc
loope
push
push
lock
stos
cmp
pop
jo
rol
test
mov
mov
loope
or
loope
es
and
scas
fstp
or
push
mov
arpl
pop
sbb
sub
xor
adc
mov
call
mov
pop
je
scas
in
int3
cmp
jp
or
mov
inc
mov
sbb
or
pop
shr
icebp
ss
fs
idiv
pop
out
fcom
mov
inc
add
xchg
sub
fwait
rol
or
inc
cs
add
inc
data16
dec
mov
pop
and
lods
add
or
add
fist
or
cmp
adc
test
or
or
adc
and
xchg
jecxz
mov
fstp
jmp
inc
or
xchg
add
(bad)
push
ror
add
mov
mov
and
mov
neg
mov
int
movs
aam
movs
imul
adc
jmp
jo
sub
dec
and
xchg
add
pop
adc
(bad)
pop
dec
lea
push
in
mov
nop
mov
call
mov
test
pop
push
mov
ret
inc
ins
in
adc
imul
or
add
push
pop
mov
dec
or
cmp
js
jmp
cli
lds
xor
adc
xor
out
adc
mov
cmp
adc
xlat
pusha
mov
adc
sbb
adc
(bad)
aam
lods
sbb
and
outs
not
inc
or
rcr
or
or
add
push
test
fs
sub
mov
pusha
inc
jbe
int
mov
pushf
xor
jae
js
pop
add
add
mov
push
stos
mov
cmp
scas
adc
cmp
sub
pop
test
xor
daa
ret
fisttp
sbb
jne
sbb
sub
stos
outs
sbb
daa
stos
jp
jne
sub
daa
sahf
or
add
adc
inc
sub
add
test
jnp
xchg
sbb
call
push
or
fwait
stos
loope
mov
pop
lock
push
jbe
push
call
mov
and
loop
or
adc
mov
out
add
clc
pop
out
outs
mov
scas
pusha
and
mov
xor
mov
sbb
push
clc
mov
das
ror
fsubr
sti
scas
in
pop
push
sbb
add
ds
jns
mov
lods
or
mov
and
les
mov
(bad)
call
add
inc
dec
popa
jae
inc
jb
outs
jb
add
iret
ror
add
push
inc
dec
fs
outs
arpl
add
jmp
inc
or
je
and
ss
sub
or
or
pop
add
gs
data16
fistp
or
inc
dec
sbb
int
sbb
addr16
mov
mov
dec
sub
inc
jbe
fdiv
pop
add
imul
xor
movs
cmp
and
or
xor
pmaxub
pop
test
pop
pop
hlt
(bad)
cmp
push
cmc
iret
pop
and
adc
clc
or
add
movs
pop
loopne
pushf
fild
mov
pop
sub
gs
imul
outs
push
outs
jae
jo
and
mov
in
imul
mov
pop
pop
inc
pusha
shr
fmul
inc
push
sub
mov
mov
cs
cmp
pop
xlat
iret
sbb
and
lods
mov
pop
or
pop
test
mov
into
push
mov
pusha
or
push
movs
cs
xchg
jnp
inc
cmp
jnp
mov
movs
psubusb
mov
dec
xor
inc
dec
jne
arpl
shr
retf
int3
mov
add
xor
fsubr
mov
ret
lock
inc
sub
aas
push
fcom
ds
push
mov
inc
inc
gs
pop
lea
and
mov
dec
lods
fistp
jne
mov
and
add
push
jno
jmp
push
dec
sbb
ds
fbstp
clc
in
or
loopne
outs
outs
and
test
xor
jnp
cmp
or
or
pusha
mov
or
ins
or
pop
add
push
int3
or
sbb
jns
push
or
mov
pop
pushf
jge
pop
inc
int
xor
pop
cmp
xchg
ret
push
jno
pop
cmp
or
sub
pop
dec
(bad)
bound
mov
inc
inc
invd
fcom
pop
sub
movs
cwde
push
cmp
inc
sub
retf
(bad)
mov
sbb
mov
add
mov
xlat
dec
push
scas
cld
mov
das
retf
or
fs
dec
push
in
add
dec
test
push
js
push
inc
enter
pop
add
push
cmp
push
add
js
mov
ltr
add
sub
mov
push
retf
(bad)
jg
mov
punpckhdq
add
fdivr
pop
add
pop
scas
shr
pop
shl
scas
enter
(bad)
add
inc
out
push
stos
repnz
fisttp
sahf
lock
adc
lock
outs
clc
pop
sti
daa
stc
pop
fidivr
out
lds
jns
xor
cmp
and
inc
fs
ret
inc
add
jo
cs
pop
inc
dec
popa
outs
fs
gs
inc
add
fisubr
adc
(bad)
pop
mov
dec
popf
mov
pop
loop
inc
jle
loopne
stos
dec
xor
int3
dec
adc
ret
test
pop
cmc
adc
test
out
ins
outs
jbe
pop
add
push
inc
imul
add
pop
adc
pusha
pop
popa
imul
stos
sbb
inc
nop
add
(bad)
adc
pop
lds
sbb
jae
test
arpl
sbb
ins
outs
addr16
inc
enter
pop
xor
or
inc
push
jb
dec
daa
jo
push
outs
sbb
inc
inc
js
jo
ret
loope
int
inc
push
imul
xor
and
pop
mov
and
sub
sbb
bound
inc
data16
or
push
or
push
inc
jl
or
jl
or
shl
pop
inc
push
in
dec
loope
mov
out
inc
dec
or
ins
sub
out
or
mov
je
push
nop
add
shr
mov
mov
pop
jmp
jb
jb
dec
inc
aas
aaa
or
mov
jbe
clc
scas
cmp
push
enter
add
or
adc
jmp
xchg
ins
ds
xlat
movs
adc
push
push
(bad)
in
or
out
lock
sbb
push
pop
shr
aaa
jne
or
add
pushf
pop
push
clc
test
inc
cdq
dec
sub
push
jae
and
sbb
dec
inc
adc
popf
lds
popa
ins
dec
arpl
fcom
jl
and
sbb
fwait
jo
ret
adc
lods
ins
mov
add
dec
lea
daa
pop
pop
sbb
stc
inc
popa
cmp
inc
in
mov
mov
push
mov
lods
push
in
or
pop
inc
xor
jbe
mov
cmps
add
push
adc
in
mov
das
or
dec
adc
loopne
jl
cmps
or
popa
xchg
iret
push
and
bound
dec
popa
jae
pusha
cwde
(bad)
shl
and
adc
adc
test
push
adc
in
mov
test
push
or
pop
and
add
add
arpl
sub
jno
(bad)
push
pusha
push
cmp
outs
pop
sub
add
pop
push
ret
aaa
jbe
loope
sub
dec
fadd
inc
or
xor
jo
bound
scas
and
inc
scas
arpl
push
inc
ja
popf
mov
mov
and
hlt
out
aaa
or
push
out
fidiv
js
pop
sbb
pop
pusha
add
loopne
lahf
or
rcr
xlat
mov
mov
aam
push
or
and
pop
in
(bad)
pusha
cmp
jl
mov
ret
push
lods
add
and
data16
mov
add
push
mov
out
push
adc
dec
add
imul
inc
adc
xor
or
ret
jne
sbb
xor
pop
pop
scas
std
inc
test
mov
dec
scas
popa
fild
es
les
add
inc
push
popa
aad
ret
(bad)
push
ret
lds
fld
cmps
fadd
xor
push
popf
fadd
inc
mov
push
cmp
or
daa
xor
sbb
inc
sub
xor
setns
dec
loop
cmc
fdiv
pop
arpl
xchg
add
mov
imul
lea
xlat
jmp
pop
add
(bad)
in
mov
jg
sbb
stos
push
test
pop
lods
push
mov
out
repnz
jns
or
mov
cdq
mov
mov
xor
push
push
mov
outs
test
movsd
mov
movups
adc
scas
push
dec
outs
addr16
repnz
jnp
adc
mov
push
pop
adc
cmp
unpckhps
jbe
add
pop
movs
push
dec
sbb
pop
sbb
stos
bndldx
push
iret
(bad)
ja
push
sbb
jmp
adc
xor
ror
sbb
je
aas
sub
pop
push
dec
nop
shl
(bad)
popf
jne
and
ficomp
imul
push
sar
enter
or
ja
add
(bad)
add
outs
push
in
retf
push
daa
add
push
jg
sbb
es
sub
sub
rcl
adc
arpl
xchg
ror
or
shl
aad
push
sbb
or
push
and
inc
pop
add
xlat
movs
add
cwde
sbb
or
and
movs
out
ss
jo
cmp
inc
imul
jmp
jmp
enter
outs
sbb
add
fdiv
or
enter
(bad)
push
movs
dec
push
add
or
lea
jns
xchg
jno
add
mov
adc
inc
loope
inc
push
aam
outs
jo
cli
std
mov
inc
je
dec
dec
test
cmp
rol
ins
jnp
rcl
jecxz
mov
mov
outs
icebp
arpl
push
sbb
popa
jb
pusha
xchg
push
shl
pusha
dec
outs
arpl
push
lock
jae
scas
punpcklwd
rcr
in
loop
dec
pop
add
mov
inc
pop
or
push
gs
popa
ins
dec
push
adc
or
add
mov
push
jmp
scas
ins
pop
add
xchg
pusha
add
outs
cmp
inc
(bad)
pop
sbb
dec
outs
or
jns
lea
xlat
or
or
push
popa
loope
dec
call
add
outs
dec
and
into
jecxz
adc
cld
push
popa
ins
jne
sub
lea
xor
jns
jns
inc
xor
xor
mov
test
sub
mov
xchg
ds
jns
sub
sbb
xor
std
xor
sub
cmp
dec
loopne
dec
or
inc
sbb
jno
jmp
xchg
clc
dec
add
push
mov
push
sub
jecxz
sub
jmp
gs
aas
shr
cmp
push
push
push
mov
push
mov
xchg
xor
and
pop
add
std
arpl
xor
add
sbb
test
jbe
jb
outs
jae
jns
lea
mov
or
mov
pop
aaa
inc
push
push
adc
mov
xchg
jne
jg
add
and
jne
mov
mov
fiadd
push
stos
and
outs
push
xor
xchg
adc
popa
cmp
dec
stos
(bad)
rcl
call
adc
sbb
mov
(bad)
push
loope
pop
ja
(bad)
sbb
sub
push
jns
mov
add
imul
outs
ins
and
jl
and
jne
adc
dec
jbe
mov
ins
push
cmp
or
cwde
add
push
and
in
or
jns
mov
adc
jae
mov
sbb
dec
jo
pop
mov
add
das
mov
mov
out
icebp
dec
adc
cmp
out
jmp
and
xor
loope
pop
add
loope
lock
sbb
cmp
add
adc
inc
sbb
sbb
add
arpl
xchg
nop
lea
popf
add
cmp
mov
inc
jne
data16
xchg
data16
pusha
push
or
adc
or
mov
lock
xor
push
and
loope
aas
ss
sub
push
pop
inc
pop
(bad)
add
adc
fldenv
test
sbb
dec
mov
lods
jbe
push
pop
out
sbb
mov
pop
leave
or
pop
adc
cwde
add
or
sbb
xor
adc
sbb
sbb
add
sahf
(bad)
pop
add
or
aam
outs
shl
and
cmp
mov
fsubr
add
call
or
hlt
rcl
sbb
cmp
lock
pop
jbe
dec
pop
imul
inc
pusha
or
and
inc
and
(bad)
ss
scas
push
call
gs
xchg
in
js
xor
xchg
dec
outs
aad
iret
js
outs
popa
bound
xchg
add
shl
dec
push
and
xor
out
jle
imul
and
jmp
pushf
inc
mov
inc
test
add
inc
dec
xchg
test
push
in
clc
and
and
sub
jo
mov
stos
mov
add
pop
inc
loopne
mov
gs
bound
imul
or
inc
pop
jno
and
jbe
sahf
mov
and
aam
js
push
pushf
std
cmp
fist
or
inc
arpl
sub
add
mov
std
add
lock
popa
je
jne
ds
xor
or
adc
adc
adc
adc
test
push
dec
add
or
mov
dec
inc
add
and
add
inc
pop
addr16
js
adc
adc
ror
mov
add
push
aaa
repnz
mov
in
add
imul
add
sbb
or
out
xor
fisttp
mov
fist
inc
ins
add
jne
nop
fimul
mov
pop
xchg
fld
jmp
(bad)
xchg
xchg
xchg
xchg
imul
xchg
xchg
xchg
xchg
dec
inc
cmp
xchg
xchg
xchg
xchg
sub
sbb
leave
enter
add
fwait
repz
leave
leave
leave
jmp
fcmovnbe
leave
leave
leave
leave
retf
ret
mov
leave
stos
mov
dec
mov
in
push
mov
mov
rol
add
push
icebp
mov
xor
mov
push
mov
and
xchg
out
aaa
ja
inc
sbb
sbb
pop
ret
nop
scas
and
std
(bad)
clc
test
je
or
push
sti
rcr
fwait
call
mov
mov
adc
mov
or
mov
sti
test
ds
fs
lods
cmp
cmps
mov
test
sbb
cmp
push
and
xchg
fnstenv
gs
dec
imul
hlt
adc
push
lock
adc
out
or
outs
mov
adc
fcomi
jle
sbb
in
cmp
inc
inc
adc
adc
iret
mov
sbb
mov
push
pusha
ret
pop
shl
pop
mov
hlt
dec
dec
or
and
or
fsub
jno
push
sbb
sbb
or
mov
cmps
rcr
push
adc
cmps
or
push
inc
ja
sti
push
sbb
cli
push
or
sub
pop
or
adc
inc
and
ror
and
fdivr
sbb
push
push
or
mov
imul
or
xchg
push
xchg
mov
fld
aad
shr
(bad)
(bad)
(bad)
das
inc
in
(bad)
sub
add
add
outs
add
test
jl
cwde
imul
inc
xor
lock
lock
out
shl
retf
xor
cld
clc
out
pushf
lods
jne
or
je
or
push
dec
jne
xor
sti
in
mov
idiv
fidiv
inc
in
in
mov
(bad)
sub
adc
mov
cmp
jne
sbb
fnsave
pusha
xchg
fucomip
in
(bad)
stos
push
inc
(bad)
fild
and
inc
pop
outs
nop
cs
scas
fistp
pavgb
mov
lea
mov
jle
jl
iret
les
and
mov
outs
or
test
push
cmc
lea
jo
jmp
add
in
push
push
in
mov
call
in
sbb
cld
adc
mov
call
jne
pop
(bad)
fwait
nop
mov
and
mov
and
push
jbe
scas
cmps
sbb
jo
mov
nop
add
add
fidiv
pop
cwde
xchg
mov
js
inc
push
ins
scas
jle
and
adc
mov
js
inc
jge
cmp
call
hlt
jge
js
clc
push
and
ins
add
push
pop
dec
enter
rcr
outs
ja
scas
outs
mov
shr
mov
cmp
arpl
mov
push
cld
aas
js
jne
retf
dec
or
add
ret
vmread
test
xchg
sbb
dec
aaa
fs
adc
repz
sbb
stc
into
loopne
fcom
mov
mov
and
stc
cmp
nop
jne
in
and
ficom
das
inc
scas
mov
nop
scas
pop
dec
scas
nop
inc
sbb
jo
sub
jmp
mov
jge
loop
fadd
mov
mov
xor
cwde
loopne
in
outs
push
or
sub
mov
mov
in
(bad)
mov
mov
shr
outs
push
mov
call
mov
jle
or
in
jl
jle
add
call
call
add
and
adc
loopne
mul
xor
clc
sub
stos
stos
xchg
inc
push
shr
jae
pinsrw
pop
retf
cmp
add
xchg
xchg
push
out
jnp
jo
hlt
push
and
jmp
push
jmp
mov
lahf
and
loop
rol
shr
jo
adc
mov
cmp
sub
xor
jmp
mov
push
and
cmp
sbb
add
xor
mov
pusha
outs
or
dec
add
bound
dec
adc
push
aas
xor
xor
aaa
rol
push
mov
ret
pusha
push
adc
push
adc
push
js
lock
and
and
xchg
mov
pop
lahf
jno
dec
clc
jbe
pop
daa
push
add
cmp
add
dec
mov
mov
adc
push
jne
and
push
pop
sahf
scas
out
xchg
add
or
das
in
or
(bad)
push
or
fnstenv
jns
push
push
sbb
fninit
fsubr
frstor
inc
inc
push
inc
hlt
mov
inc
sbb
inc
sbb
push
adc
inc
sub
sbb
je
hlt
mov
call
jmp
mov
pop
lods
inc
mov
int3
inc
sbb
stos
dec
pop
ins
or
jo
push
hlt
cmp
fmul
jno
or
jno
pavgb
inc
jbe
nop
cmp
mov
lock
pushf
dec
mov
cmp
xor
fld
bound
push
dec
push
out
or
ins
mov
das
add
cmp
or
mov
sti
shl
stos
dec
clc
ss
mov
loope
mov
fmul
in
ret
mov
push
test
dec
lock
inc
inc
sahf
or
sub
lahf
push
dec
ret
sbb
test
or
push
inc
dec
fdivr
fisttp
pop
pop
in
inc
mov
jmp
enter
fcomp
clc
ds
ss
fild
push
pop
pop
pop
loopne
rcl
repnz
add
dec
pop
add
fist
aas
sub
cmp
cmp
jnp
dec
push
pop
jo
xchg
into
repz
cmps
mov
jns
sbb
cmp
and
sahf
out
sahf
dec
pop
ins
jle
mov
mov
fsub
neg
(bad)
adc
and
inc
push
xchg
ins
je
ins
xor
jmp
xor
push
xor
imul
cmp
int3
xor
inc
and
jns
cmp
add
loop
pop
fsub
imul
js
fld
ja
jmp
popf
or
fs
mov
inc
fimul
xor
xchg
xor
hlt
and
dec
cmp
jo
jmp
sub
xchg
and
or
jbe
and
daa
dec
fist
fmul
test
and
icebp
lahf
and
fbld
pusha
mov
and
mov
mov
jbe
test
and
test
je
frstor
nop
xlat
jmp
sbb
sub
addr16
sbb
inc
jns
dec
sbb
sbb
mov
sbb
sub
sbb
or
(bad)
push
lea
xchg
adc
inc
loopne
jne
add
adc
loopne
fdivr
test
(bad)
jns
or
and
inc
pop
push
add
fwait
add
mov
or
cmp
mov
add
pop
inc
stos
xor
jne
jns
pop
and
sub
xchg
adc
mov
lock
pusha
or
es
push
nop
outs
retf
int
int3
test
inc
ds
mov
lock
cld
popfw
call
xchg
mov
cmp
dec
add
in
out
adc
ret
fst
test
outs
mov
dec
xchg
ss
lock
call
and
and
imul
sub
rcr
clc
outs
movs
sti
add
js
inc
and
dec
mov
arpl
cmc
retf
cmps
ret
xor
jno
enter
add
aaa
push
sbb
jmp
cmp
shl
in
sub
add
or
in
add
inc
xor
jnp
jle
mov
hlt
ins
in
add
dec
sbb
jg
or
add
test
call
lock
mov
lods
fmul
shl
loope
neg
scas
push
add
jno
lock
loopne
test
mov
sub
ja
add
cmps
add
int
mov
jae
pop
add
jg
jle
or
mov
outs
addr16
inc
outs
outs
jnp
jbe
outs
arpl
sbb
movhps
arpl
addr16
mov
gs
push
data16
push
jb
outs
jae
or
add
fist
mov
adc
dec
pop
or
ss
or
ins
jo
outs
and
push
call
dec
inc
and
inc
jbe
push
add
jge
add
add
dec
bound
add
out
mov
lock
lea
or
jb
xor
push
xor
or
xor
inc
inc
cwde
stos
xchg
dec
cmps
sti
add
sbb
lahf
outs
pushf
and
xchg
dec
dec
outs
ins
pop
sbb
or
mov
or
push
loopne
retf
stos
add
mov
xlat
scas
emms
inc
gs
rol
les
mov
lods
mov
dec
popa
js
mov
add
shl
mov
adc
cmp
cs
movs
or
mul
jl
or
dec
pusha
je
add
ret
adc
lock
and
or
mov
or
out
lahf
jno
fild
call
push
mov
add
push
pushf
push
mov
jl
push
int
dec
loopne
add
dec
add
jge
cmp
push
push
ins
repnz
add
push
xlat
mov
ins
ss
or
push
push
xor
and
scas
fnstcw
pusha
push
push
dec
pop
add
xor
xor
sub
cmp
in
mov
jo
mov
mov
push
shl
push
add
push
cld
mov
mov
outs
xchg
or
loope
add
ret
jns
iret
loopne
lds
add
or
mov
js
pop
cs
cdq
mov
lock
repnz
mov
lods
in
nop
sub
dec
loopne
cld
push
popa
jb
and
add
ret
add
xor
add
es
dec
xchg
std
(bad)
adc
test
out
push
cmp
mov
xchg
ins
mov
xor
add
inc
and
outs
add
push
xor
daa
lds
inc
int
sub
cmp
jns
test
dec
jae
inc
outs
fld
icebp
add
dec
add
std
into
inc
(bad)
pop
dec
xchg
in
pusha
cwde
arpl
xchg
lahf
pop
pshufw
(bad)
jecxz
ret
pop
mov
inc
pop
test
enter
retf
lds
lock
push
(bad)
ss
aas
jmp
push
push
push
or
rcl
jbe
lock
jmp
mov
and
mov
sbb
cmp
mov
pop
add
shr
test
jle
sub
pop
pop
mov
and
and
cmp
ja
push
cmp
mov
push
cmp
pop
push
rcr
xchg
cmp
je
xchg
inc
test
jne
lea
push
je
adc
hlt
mov
hlt
movzx
fbld
sahf
add
int
mov
mov
mov
call
or
mov
dec
push
sbb
dec
(bad)
mov
aaa
pop
lock
or
lahf
ficomp
outs
hlt
adc
mov
paddsw
jmp
shl
sar
mov
lea
inc
cmp
aaa
mov
mov
or
inc
jns
in
ins
(bad)
xor
add
fs
mov
push
or
retf
ret
adc
push
call
pop
lock
xor
mov
clc
and
fimul
cmp
push
(bad)
icebp
jo
jle
ror
inc
icebp
pusha
adc
mov
jns
je
push
pusha
mov
(bad)
jge
inc
dec
mov
(bad)
out
mov
jmp
fcmovb
rcl
mov
adc
or
fwait
sbb
pop
dec
ret
(bad)
push
jl
stos
and
rcr
cmp
adc
nop
aas
fadd
cwde
adc
inc
movs
out
loopne
pusha
pop
jbe
repnz
ja
idiv
lock
in
sar
mov
cmp
sbb
and
mov
jl
and
xlat
pop
push
cmps
(bad)
mov
pop
pop
jl
jp
sbb
loope
xor
cmp
call
jne
inc
pop
clc
jne
mov
fdivr
jl
inc
mov
clc
mov
mov
add
pop
in
test
push
sbb
inc
and
mov
push
mul
lods
ds
icebp
mov
les
mov
scas
aam
ins
jb
mov
fild
xor
cmp
sti
pop
(bad)
js
gs
imul
mov
sbb
add
and
mov
(bad)
ja
pop
lock
inc
ins
outs
jae
push
outs
arpl
or
fwait
xlat
pop
sub
and
dec
div
push
punpcklbw
or
pop
addr16
mov
dec
push
imul
pop
mov
add
pop
outs
mov
rol
addr16
pop
or
push
add
push
cmp
cmp
dec
outs
dec
dec
imul
je
mov
ret
pusha
das
(bad)
pop
test
pop
pop
cmps
rcr
xchg
pop
fsubr
loop
rcl
cmps
and
popa
imul
je
ins
and
adc
stos
test
mov
stos
movs
xchg
adc
movzx
icebp
push
movs
daa
mov
pop
pusha
jno
imul
shl
sub
sub
cli
sbb
adc
add
xlat
addr16
mov
and
outs
adc
or
cmp
sbb
push
(bad)
and
adc
jo
movs
push
xor
sub
dec
mov
xor
pusha
mov
jg
pop
fadd
fidivr
adc
jg
rol
push
jns
bound
je
jne
jo
out
cmp
inc
xor
(bad)
mov
test
montmul
cmps
or
cmp
ret
dec
dec
popa
outs
fs
gs
into
jo
outs
jbe
ins
imul
mov
ror
fs
push
int3
jmp
sbb
les
popa
push
outs
rcl
shl
mov
adc
mov
pop
sbb
push
addr16
imul
xor
adc
add
jo
addr16
or
call
push
mov
test
das
shl
dec
and
mov
and
fild
push
je
movs
pop
or
cmp
cmp
call
push
dec
je
outs
arpl
push
jo
pusha
les
pop
cmp
inc
mov
add
add
pop
inc
cmovp
adc
adc
test
and
add
lock
adc
ins
neg
pop
cld
das
add
outs
mov
mov
inc
push
fild
xor
xor
push
shr
ins
add
pop
mov
sbb
sbb
sti
arpl
loope
popa
(bad)
outs
je
js
inc
sbb
inc
imul
out
pop
inc
push
ins
inc
pop
adc
js
pushf
pop
add
pushf
fild
xchg
or
iret
sub
dec
lods
pop
and
shl
pop
xor
xlat
loopne
(bad)
and
inc
add
rol
popa
and
xor
aaa
xor
xor
lock
ss
xchg
adc
hlt
(bad)
adc
pop
jg
xor
fadd
add
gs
add
rcl
enter
call
push
mov
add
mov
mov
jno
shr
push
xchg
and
adc
push
sbb
lds
add
out
xchg
inc
fisub
out
out
fwait
or
xchg
inc
xor
add
adc
push
cmp
outs
imul
scas
fild
xor
xor
push
jo
mov
ja
pop
dec
cmovle
sbb
inc
ja
push
sbb
pop
sub
inc
sub
nop
dec
xchg
in
adc
xchg
cmp
adc
inc
add
into
sbb
test
inc
jne
push
xchg
add
daa
pop
out
cmp
inc
mov
xchg
shr
hlt
pop
fmul
fiadd
clc
dec
cmp
xlat
daa
sub
and
in
adc
pop
nop
setbe
inc
add
outs
dec
inc
jo
fcom
popa
ins
(bad)
out
pusha
adc
pop
ins
and
push
cdq
push
or
pushf
fistp
xchg
push
outs
adc
sbb
imul
or
pop
inc
push
add
mov
lahf
xor
pop
pop
sub
xor
and
lock
je
push
sbb
dec
gs
test
pop
add
pushf
fild
or
and
arpl
inc
push
pop
xor
mov
mov
pop
loopne
out
inc
and
imul
mov
inc
push
jae
ss
rol
in
add
into
in
mov
rcl
jns
push
dec
and
es
xchg
push
out
mov
inc
push
cdq
fld
clc
add
mov
add
xchg
lahf
mov
cmp
push
add
push
(bad)
out
imul
dec
cdq
mov
inc
jo
push
xchg
sbb
divps
add
cmp
inc
and
shl
push
xchg
inc
dec
outs
adc
xchg
sbb
dec
pop
and
enter
sub
inc
pop
sub
popa
xor
add
or
jmp
out
add
inc
outs
scas
sub
add
inc
or
out
jg
push
add
sub
jle
jbe
xchg
add
push
push
xor
dec
lock
add
add
es
xor
cmp
ss
xor
add
outs
or
mov
loop
inc
xchg
xor
mov
push
adc
dec
push
dec
test
int3
in
xor
push
cmps
jbe
int3
int3
mov
pop
add
pop
add
mov
das
int
mov
ss
mov
fstp
or
jne
xchg
push
rcr
loop
push
dec
inc
bound
aaa
retf
mov
mov
xor
pop
xor
pusha
mov
setg
jnp
inc
add
xor
push
add
push
imul
adc
adc
inc
hlt
popa
jp
xchg
adc
xor
push
lods
ret
mov
nop
mov
data16
movs
imul
sub
test
push
call
cmps
cmp
sub
ins
or
adc
outs
mov
int3
pusha
mov
aas
scas
jg
jl
adc
adc
scas
pop
push
outs
add
pusha
xor
push
push
or
call
xchg
inc
and
test
data16
add
push
movd
or
inc
ja
inc
xchg
xchg
push
cmp
cmps
daa
mov
imul
push
cwde
inc
popa
sub
inc
int3
in
adc
add
sbb
or
ins
addr16
ror
lahf
push
inc
bound
or
ja
and
inc
out
(bad)
sub
iret
and
scas
push
add
add
outs
xchg
fist
mov
lahf
adc
xlat
xchg
mov
adc
mov
fwait
xchg
or
mov
ss
xor
fimul
pop
xor
les
out
aas
adc
push
pop
inc
push
and
aas
adc
add
daa
inc
sub
ja
mov
push
cmp
mov
and
ins
inc
dec
mov
add
xor
mov
or
fcom
push
push
add
ror
sbb
fidivr
push
pop
int3
and
xchg
sub
adc
or
(bad)
orps
adc
jbe
outs
jle
test
pop
dec
ror
dec
lahf
push
add
push
push
add
or
adc
add
push
jg
popa
pop
cmp
jg
imul
sub
dec
das
lods
cdq
pop
sbb
add
push
inc
bound
pop
jg
inc
dec
add
(bad)
ins
adc
ret
das
aas
bound
mov
dec
push
inc
sbb
(bad)
inc
fild
sub
or
int3
pop
xchg
(bad)
xor
and
jp
inc
mov
push
test
mov
(bad)
pop
ficom
int3
sub
retf
sbb
pop
call
outs
push
sar
pop
dec
pop
add
outs
push
xlat
loope
pop
(bad)
dec
inc
je
fsub
loopne
rsqrtps
inc
aas
js
pop
mov
das
scas
adc
adc
daa
outs
and
movs
or
ds
or
and
call
ret
addr16
adc
mov
pop
addr16
adc
sub
addr16
inc
add
cmps
mov
cmp
pop
or
aas
jbe
loopne
aad
jmp
push
(bad)
cmp
pop
mov
dec
add
out
adc
rol
mov
push
data16
xchg
or
inc
aaa
pop
or
adc
jbe
xchg
or
add
sti
out
xlat
xor
or
jbe
xchg
add
or
es
push
xchg
jmp
pop
cli
aas
mov
sahf
or
adc
lahf
(bad)
movs
fst
dec
das
xchg
call
sti
aas
iret
xchg
ss
inc
ss
mov
loope
inc
pop
push
(bad)
fsub
sub
mov
dec
adc
pop
sysret
push
add
(bad)
adc
out
ins
loopne
mov
adc
sbb
loopne
cs
xor
fwait
mov
sub
adc
neg
mov
mov
cmp
cmp
loopne
sub
mov
xchg
mov
daa
outs
add
xor
fbstp
addr16
adc
xchg
adc
les
inc
push
pop
and
pop
or
xor
das
ds
jmp
or
xor
(bad)
mov
lds
dec
popa
imul
cmps
push
ja
or
(bad)
out
cmps
cmp
mov
xor
add
pop
xor
mov
push
jbe
mov
lahf
sub
sbb
aas
ret
inc
addr16
xchg
push
jbe
les
rol
fistp
pop
aaa
stos
inc
mov
pop
push
aaa
adc
cwde
dec
pop
imul
push
dec
sub
pusha
and
test
pop
rcl
xor
xchg
mov
mov
sub
aas
mov
ficom
and
fsub
pop
adc
out
lahf
and
push
or
aas
sbb
cs
xchg
ds
mov
add
aas
xchg
push
add
adc
cmovg
and
fcmovbe
out
mov
xchg
jecxz
or
cs
sbb
xchg
add
pop
inc
or
daa
cmp
je
out
inc
fcmovne
pop
push
push
push
addr16
(bad)
les
pop
outs
and
out
pop
jg
add
sbb
mov
rol
pop
(bad)
sub
int3
loopne
(bad)
scas
dec
or
rol
mov
inc
xlat
pop
push
imul
adc
mov
cmp
cwde
loopne
mov
or
mov
inc
mov
push
cli
xor
adc
pusha
push
and
mov
out
mov
scas
(bad)
jo
dec
iret
iret
xchg
adc
mov
addr16
pop
inc
out
add
xor
addr16
inc
test
or
pop
xchg
push
ss
add
mov
add
sbb
mov
mov
arpl
push
dec
pusha
push
imul
sbb
or
push
cmps
xchg
lahf
inc
lock
cdq
inc
loop
and
sbb
or
add
mov
add
mov
pop
pop
mov
mov
mov
jne
test
test
mov
dec
loop
cmp
jle
jno
jno
xchg
dec
or
fidiv
lock
push
add
and
push
bound
loop
inc
loopne
adc
inc
or
pusha
scas
aaa
adc
add
nop
addr16
or
dec
sar
out
ret
sbb
pusha
xlat
out
pushf
cmp
out
ret
and
ja
outs
adc
add
dec
aaa
add
inc
cmps
ret
movsx
stos
add
push
test
xlat
cmps
xor
test
push
out
dec
sub
inc
dec
jmp
adc
test
pusha
mov
inc
add
xchg
adc
test
out
add
add
or
imul
and
popa
(bad)
outs
xchg
test
outs
pop
pop
sub
ja
push
and
push
jmp
mov
aam
add
xchg
sbb
and
mov
jg
arpl
adc
sbb
enter
aaa
daa
ss
or
xchg
mov
push
pop
aaa
xchg
dec
mov
add
pop
jbe
pop
add
popaw
sub
xchg
aaa
ret
adc
pop
imul
daa
pusha
outs
xchg
push
pop
iret
cmovl
push
neg
push
int
call
or
push
inc
pusha
adc
mov
pop
bound
(bad)
mov
jecxz
test
xchg
xchg
push
adc
inc
pop
inc
loopne
sub
out
or
lahf
inc
mov
dec
ins
int3
iret
aaa
imul
dec
dec
int
pop
neg
inc
js
aas
or
adc
sahf
out
xor
pusha
xchg
sbb
adc
xchg
aas
push
dec
add
aas
sbb
inc
or
and
bound
adc
daa
xlat
mov
adc
popa
lea
or
dec
ja
out
dec
dec
iret
aas
cmps
mov
movs
(bad)
aas
and
(bad)
mov
inc
or
aas
mov
iret
(bad)
sub
movs
xchg
lahf
daa
inc
shl
inc
xchg
mov
(bad)
pop
mov
aaa
sub
dec
xchg
(bad)
daa
mov
inc
or
inc
pusha
push
and
xlat
fistp
xlat
out
inc
bound
stos
adc
dec
xlat
lahf
shl
or
adc
mov
popa
aaa
jne
mov
in
add
jp
aaa
lods
mov
xor
ja
js
mov
adc
add
dec
jbe
enter
jle
dec
add
dec
dec
loopne
jbe
inc
cmps
seto
ins
les
mov
pusha
push
pop
pop
xor
out
or
push
and
mov
add
adc
sub
inc
cmps
push
dec
pop
test
or
jg
pop
inc
bound
sbb
rcl
daa
test
push
or
xchg
pusha
or
(bad)
(bad)
or
ja
pop
pop
xchg
aas
iret
retf
push
ret
or
mov
sbb
outs
inc
and
mov
xor
inc
ss
repz
sub
dec
xchg
and
jmp
jnp
outs
jo
mov
inc
aaa
lahf
and
movs
push
sahf
pop
stos
add
out
inc
pop
mov
nop
push
dec
scas
dec
pusha
popa
mov
(bad)
push
dec
mov
pop
xor
sub
out
out
test
add
mov
(bad)
test
mov
mov
pop
out
adc
adc
dec
inc
push
dec
cmp
lds
xlat
push
or
xchg
aas
dec
sub
arpl
sbb
push
dec
iret
icebp
inc
bound
xchg
or
jecxz
inc
iret
and
xchg
sbb
fbld
mov
mov
adc
xor
xor
sub
xor
push
add
mov
dec
pop
inc
or
or
dec
cs
or
xchg
out
sub
add
and
push
daa
inc
cmp
into
push
out
and
push
aas
out
int3
sub
scas
add
inc
fs
sbb
(bad)
data16
sbb
dec
outs
or
sub
rcl
aaa
pop
cmps
inc
pop
fmul
jns
sub
iret
xchg
add
cmp
ret
pop
cvtps2pd
sbb
retf
and
daa
(bad)
cmps
inc
movs
inc
xlat
mov
int
jp
xor
ins
xor
(bad)
out
push
inc
mov
xlat
int3
adc
test
xlat
cmps
mov
dec
das
or
sub
test
mov
lahf
fisttp
and
out
or
iret
inc
xor
out
rcl
das
imul
cmp
mov
jb
xchg
ret
nop
pop
jae
xor
add
nop
pusha
mov
jbe
push
mov
rol
inc
pusha
pop
xchg
aaa
sub
sbb
adc
push
nop
mov
mov
aas
dec
scas
dec
pop
test
sbb
loopne
push
add
adc
stos
inc
out
jbe
les
lahf
pop
daa
add
or
adc
mov
sub
in
lods
push
mov
add
mov
and
lahf
iret
aas
pop
jo
and
aas
pop
xor
xor
addr16
mov
or
or
push
push
mov
jmp
(bad)
add
call
inc
and
(bad)
pusha
add
loop
ins
xor
push
shl
test
mov
out
inc
das
dec
cwde
sbb
inc
dec
mov
or
out
dec
pop
xchg
push
test
or
addr16
sub
out
push
add
(bad)
lock
pop
ds
sub
jmp
and
aaa
mov
mov
test
push
pop
(bad)
out
or
inc
dec
pop
jecxz
inc
mov
dec
das
mov
jbe
mov
adc
out
out
add
add
int3
sub
inc
mov
add
pop
fild
fist
cdq
push
ret
(bad)
iret
arpl
sub
sbb
fist
imul
aas
pop
call
aaa
or
mov
out
daa
mov
adc
pop
das
aas
push
and
cmp
xchg
jo
mov
fwait
iret
outs
inc
inc
loop
cmova
add
pop
out
out
cmps
(bad)
aas
out
jmp
daa
add
out
inc
cmp
mov
jae
aaa
xor
sub
pop
sub
push
dec
aas
out
dec
or
mov
rcr
push
dec
push
xor
pop
and
int3
sub
les
pop
int3
mov
addr16
outs
addr16
mov
add
cmps
das
loopne
shl
jle
data16
es
xchg
ret
rcr
daa
pusha
push
xlat
xlat
or
sar
cmp
xchg
and
setg
push
aas
fistp
daa
push
test
push
mov
ss
packuswb
fist
fidiv
xchg
mov
lods
add
cmps
xor
div
outs
add
int3
xor
scas
outs
push
stos
inc
mov
inc
and
popa
dec
sub
add
pop
add
or
push
outs
push
inc
add
pop
mov
xor
das
and
loope
sub
adc
pop
pusha
and
dec
ja
dec
add
adc
retf
inc
xor
scas
cmps
dec
adc
ss
arpl
dec
adc
adc
cmps
das
dec
sub
inc
out
out
mov
push
adc
add
es
pop
outs
cmps
iret
sub
js
addr16
push
adc
out
mov
push
pop
out
out
ins
xor
xchg
ret
test
ja
adc
(bad)
out
out
sub
push
sbb
out
mov
pop
mov
jg
mov
adc
sbb
adc
inc
and
pusha
sub
sub
inc
xor
adc
push
inc
stos
not
dec
sub
mov
push
sbb
pop
dec
inc
mov
das
inc
and
out
mov
dec
inc
mov
addr16
or
push
xlat
out
pop
and
pop
and
daa
push
mov
imul
mov
outs
addr16
ret
and
xchg
xor
(bad)
test
mov
bound
adc
loopne
xor
sbb
arpl
ret
add
xor
adc
mov
into
imul
mov
dec
lahf
test
mov
imul
pop
sub
aaa
xlat
mul
and
push
xlat
inc
xchg
pop
pusha
jg
xlat
xchg
mov
xor
ds
jb
add
out
(bad)
popa
dec
mov
sbb
cdq
inc
push
sbb
mov
pushf
push
lds
xlat
mov
sub
adc
not
push
aaa
pcmpeqw
cmovae
cs
xor
addr16
out
out
getsec
jle
imul
pop
add
mov
adc
daa
lods
mov
aaa
mov
or
push
sbb
bound
add
out
sub
add
xchg
pop
mov
cmps
xchg
iret
or
pop
iret
daa
bound
popa
iret
(bad)
arpl
sub
xor
nop
or
or
lahf
or
sub
aaa
push
add
iret
daa
rol
test
sub
ins
les
xor
daa
mov
inc
dec
iret
xchg
iret
push
xor
mov
push
mov
pop
(bad)
aas
and
dec
ss
xor
daa
xchg
stos
push
pop
cmps
pop
aaa
daa
add
and
neg
mov
mul
xchg
iret
movs
pop
fadd
jb
or
fisttp
ja
push
bound
adc
loopne
iret
aas
movs
push
pop
fmul
daa
iret
mov
iret
pop
sub
push
int3
or
in
xlat
cmps
pop
or
test
scas
nop
push
(bad)
(bad)
test
sub
stos
push
jmp
mov
mov
ret
lods
fisubr
adc
cli
push
test
pop
dec
aaa
or
dec
maskmovq
test
jno
pop
push
add
fild
add
rol
inc
call
mov
aaa
inc
cmps
outs
adc
cmps
loop
dec
sub
outs
cmps
test
pop
mov
daa
adc
mov
xchg
fwait
iret
push
out
mov
call
inc
pusha
test
popa
popa
or
aaa
xor
jmp
outs
test
mov
ins
add
rcl
fdiv
xor
lahf
inc
push
add
ja
push
rcl
dec
inc
sub
sbb
lahf
pop
xor
cwde
arpl
push
out
inc
xchg
cmps
pop
scas
add
mov
push
dec
dec
or
mov
cmp
dec
lahf
push
dec
and
stos
pop
pusha
mov
imul
add
cmps
out
int3
add
mov
or
adc
push
lahf
inc
push
mov
adc
pop
add
inc
mov
das
rol
push
add
pop
(bad)
mov
xchg
mov
pop
fiadd
call
adc
xchg
inc
lar
loopne
inc
mov
ror
sbb
inc
push
rcl
jnp
retf
add
add
mov
push
push
test
xor
push
or
push
outs
pushw
push
push
push
imul
pop
push
rcr
push
out
adc
and
jp
cmp
cwde
or
lods
dec
add
das
loopne
push
fcomp
inc
pusha
dec
and
add
jmp
aaa
push
test
and
fbstp
pop
or
xor
xor
aaa
test
aas
dec
sub
out
outs
call
(bad)
sbb
call
or
jo
push
dec
call
cmp
mov
push
inc
or
push
adc
xchg
sub
fdiv
aas
adc
lahf
aas
pop
and
inc
aas
cmp
dec
daa
dec
ret
inc
sub
inc
mov
dec
sub
push
and
sahf
dec
add
inc
daa
add
sub
cmp
adc
daa
sbb
inc
dec
adc
adc
pusha
dec
pop
bound
add
inc
pop
daa
inc
inc
pop
xchg
pop
xchg
pop
or
outs
pusha
xor
dec
mov
and
daa
test
add
repnz
daa
call
adc
adc
pop
and
or
mov
xchg
daa
push
and
push
add
addr16
addr16
and
adc
inc
sub
dec
mov
or
inc
mov
or
add
daa
inc
adc
xlat
daa
mov
inc
and
daa
push
or
test
daa
xchg
adc
daa
inc
daa
push
rcr
mov
adc
jbe
aam
inc
daa
das
adc
xchg
and
inc
daa
movs
adc
daa
inc
shl
inc
daa
adc
adc
or
ins
inc
daa
adc
sbb
cwde
inc
pop
mov
mov
jbe
mov
inc
push
pusha
adc
inc
dec
out
push
nop
pop
or
xchg
sbb
test
ja
dec
and
inc
mov
pop
push
mov
ss
adc
push
dec
add
retf
mov
bound
dec
dec
test
fsub
aas
aaa
cmp
add
mov
push
aaa
scas
adc
mov
or
or
add
js
test
out
add
adc
adc
add
test
inc
pop
push
add
mov
es
mov
adc
inc
xor
push
push
sbb
and
add
push
inc
inc
call
mov
or
int3
leave
push
jnp
dec
(bad)
pop
xor
add
(bad)
pop
cmp
xlat
out
pop
popa
mov
or
add
dec
push
or
daa
ins
xchg
rcr
inc
add
out
or
fisttp
aaa
sbb
adc
inc
outs
fwait
inc
sub
fnstcw
outs
mov
and
push
pop
shl
xchg
addr16
inc
pusha
pop
outs
out
inc
movs
shl
cmps
dec
test
dec
ss
dec
lods
inc
mov
or
xor
push
das
ja
xor
add
into
and
iret
push
lock
cmps
dec
xor
outs
mov
add
xor
add
sub
cdq
sbb
push
pop
pusha
push
push
imul
mov
push
iret
push
xchg
out
ja
xchg
xchg
ja
sub
cmp
and
cdq
cmp
js
daa
or
push
or
xchg
(bad)
cmp
xchg
push
or
adc
pop
je
mov
sbb
or
int
sbb
jo
add
rol
dec
int3
int3
sub
setbe
xor
or
sub
outs
data16
xchg
test
push
push
adc
int3
push
pushw
das
cmp
and
lods
adc
shl
loopne
inc
xchg
xchg
or
popa
ja
jo
add
mov
adc
outs
mov
mov
sbb
mov
mov
and
cmp
jb
das
pusha
and
mov
mov
arpl
jo
jp
mov
inc
ds
sub
mov
movs
cdq
cs
pop
daa
pop
pusha
into
sbb
mov
push
mov
pop
dec
push
dec
sub
lds
push
dec
cli
xor
ins
or
pop
dec
adc
movs
or
add
out
push
test
pop
pop
sub
dec
xor
data16
pusha
loope
(bad)
pop
inc
mul
push
mov
into
inc
dec
sti
mov
pusha
push
cmps
push
xchg
push
and
pop
lahf
push
push
xor
sub
rcr
loope
xor
adc
cwde
add
xchg
mov
push
adc
repnz
jecxz
fbld
test
test
jp
(bad)
ror
pop
(bad)
xchg
and
(bad)
out
rol
sub
xchg
mov
aas
das
sub
pop
aas
aas
shl
into
mov
inc
inc
das
pop
add
sub
xor
xchg
push
inc
add
sahf
addr16
daa
inc
pop
sub
bound
push
ret
add
jg
jmp
cmp
pop
aas
pusha
push
pop
mov
dec
adc
ins
push
add
push
aas
cmps
cmp
ss
mov
or
or
add
scas
push
aas
mov
mov
push
test
adc
jle
sbb
or
es
push
inc
push
push
xchg
or
(bad)
ins
xor
xchg
mov
sub
sub
inc
inc
xor
pop
push
inc
and
fimul
mov
and
(bad)
mov
pop
add
test
xchg
push
pop
push
or
adc
and
add
jg
shl
loopne
mov
scas
adc
maxps
inc
jne
ds
sbb
adc
or
sbb
cmp
int
ret
ja
ja
stos
add
idiv
lods
or
lds
sbb
(bad)
dec
fidiv
lods
inc
and
and
mov
ja
pop
pop
fiadd
ret
adc
cmps
(bad)
xchg
adc
pop
mov
aas
iret
sub
pop
adc
fcomip
outs
mov
or
dec
sub
push
jae
push
rcl
push
or
push
and
dec
pop
add
movs
cmp
sbb
sbb
and
add
add
fbld
popa
add
cmps
fist
inc
adc
sub
push
loop
adc
call
sub
or
sbb
cmp
sbb
mov
das
sbb
sbb
pop
mov
lods
or
and
ins
inc
test
daa
arpl
sbb
repz
mov
dec
imul
fsub
xchg
xor
mov
mov
adc
dec
mov
xor
dec
scas
repnz
dec
aas
fisttp
or
ret
rcl
pop
xchg
fisttp
out
fsub
xor
xchg
xor
xor
or
sbb
xchg
add
imul
sbb
inc
push
xor
mov
iret
addr16
shr
adc
push
es
es
outs
in
push
bound
fild
test
inc
jns
cwde
or
(bad)
movs
es
test
es
imul
pop
dec
push
mov
pusha
lahf
inc
pop
ja
or
sub
mov
int3
cdq
jb
inc
cmp
mov
(bad)
(bad)
mov
cwde
or
cmps
inc
add
inc
cmp
xlat
shl
ds
ds
push
movs
mov
fist
xor
arpl
adc
ret
loopne
pop
aaa
iret
outs
les
sbb
cmova
inc
test
loopne
(bad)
mov
pop
xor
push
imul
addr16
add
test
adc
xchg
mov
ja
push
mov
mov
pop
pop
push
push
xlat
test
mov
and
ret
add
iret
inc
dec
test
push
fimul
mov
add
push
adc
mov
jg
and
test
add
iret
iret
test
add
mov
out
iret
pop
sbb
cdq
push
bound
cmp
xchg
retf
ja
mov
push
ins
dec
inc
or
push
add
cwde
inc
pop
and
add
push
add
out
xlat
jae
shl
not
test
cmps
mul
mov
or
mul
adc
int
fsubr
inc
out
out
xchg
sub
xlat
out
sbb
push
iret
push
cmp
daa
loop
adc
test
cmps
or
iret
ja
or
ja
sbb
(bad)
push
bound
add
push
pop
pop
(bad)
mov
jbe
dec
dec
dec
and
xchg
mov
nop
xchg
outs
push
push
jae
scas
jo
xchg
outs
push
pop
mov
jmp
les
outs
out
jae
inc
mov
push
fsub
inc
mov
test
xchg
push
mov
jns
mov
add
outs
idiv
mov
dec
dec
dec
ficomp
aas
call
add
bound
push
iret
jg
inc
sub
or
aas
xchg
pop
sub
cmps
push
xor
or
xchg
dec
nop
adc
mov
add
dec
jmp
out
mov
add
cmovae
xor
mov
add
cmps
jg
push
and
add
dec
push
cmps
mov
cmps
rol
inc
dec
dec
and
xor
dec
inc
adc
leave
cmps
dec
fisttp
ins
aaa
(bad)
push
push
dec
jecxz
xor
xchg
sub
faddp
inc
js
into
dec
mov
shr
repnz
sbb
repz
mov
ja
(bad)
or
stos
dec
adc
outs
test
dec
push
sbb
pop
push
xor
addr16
or
lea
or
xor
add
outs
aaa
xchg
mov
fmul
dec
scas
stos
adc
pop
or
pop
cmp
popa
dec
sub
jp
sub
inc
pop
push
dec
aaa
ja
mov
mov
or
das
pop
add
loopne
add
lods
push
loopne
jg
add
pop
xchg
xor
and
out
sbb
das
ja
imul
push
das
aas
mov
dec
push
jbe
adc
pop
xchg
imul
add
or
ja
push
mov
push
dec
xchg
lahf
das
pop
mov
(bad)
pop
adc
push
xor
jg
push
and
pop
xchg
add
sub
movs
scas
dec
add
xchg
cmp
sbb
push
ins
dec
fisttp
sbb
iret
dec
dec
mov
xchg
mov
adc
pop
(bad)
sbb
sbb
fwait
test
aaa
mov
pop
and
(bad)
dec
pusha
xor
not
push
push
mov
xor
xor
mov
(bad)
(bad)
(bad)
dec
sub
lahf
and
shl
jmp
inc
add
cmp
jne
mov
pop
pop
lock
call
ret
mov
push
mov
mov
dec
and
add
inc
mov
ror
dec
pop
xor
push
mov
in
mov
push
mov
xchg
push
es
push
lock
inc
jle
push
pop
movs
sbb
les
fisub
xchg
scas
add
pop
cld
push
mov
and
add
xor
add
aas
out
mov
or
fs
jns
sub
int3
ds
mov
ss
pop
add
cli
dec
adc
fnstsw
push
jb
(bad)
jge
iret
cs
sbb
add
dec
fs
test
jae
std
push
inc
push
popa
je
cmp
add
dec
pop
mov
fadd
imul
or
and
dec
popa
imul
bound
arpl
cmp
jae
pusha
add
ss
add
rol
inc
int3
jnp
js
pop
mov
sar
jnp
sti
pop
xor
or
sbb
jb
imul
sti
ins
push
xchg
jb
inc
outs
ins
jo
sahf
test
or
js
jnp
shl
mov
add
inc
jb
xchg
xor
or
outs
dec
inc
jns
xchg
cmp
add
ins
outs
bound
add
pop
shr
pop
mov
mov
mov
add
sub
add
sbb
or
push
and
loopne
cmp
add
or
sbb
cmp
imul
cmp
jb
outs
addr16
and
add
nop
test
sbb
cmp
(bad)
lds
clc
sub
dec
jg
shl
ret
mov
xor
xchg
leave
hlt
ror
xchg
clc
cmp
jecxz
jge
add
xchg
shl
push
add
leave
push
push
push
mov
movzx
mov
cmp
dec
inc
jne
int
mov
cs
mov
jp
mov
hlt
(bad)
fld
mov
or
mov
jae
or
jmp
ja
xchg
std
out
dec
or
push
inc
or
push
out
pushf
push
movs
fldenv
inc
in
adc
cmp
jbe
mov
and
ror
cs
out
push
inc
cmp
jne
mov
pop
adc
and
clc
pushf
std
aad
das
pop
mov
jmp
jmp
cld
dec
mov
pop
add
push
test
je
add
inc
jne
fimul
or
fisttp
pop
pop
mov
inc
jge
out
mov
je
es
fs
push
mov
iret
jb
lock
xlat
mov
push
jne
mov
add
or
push
xor
call
jmp
push
mov
mov
ins
mov
pop
xchg
scas
lock
(bad)
pop
or
sub
retf
add
ins
outs
in
cmp
fidiv
mov
xor
jnp
in
(bad)
cmp
add
xchg
push
sub
add
rcl
icebp
test
add
and
push
popa
cmp
call
int
push
mov
push
push
lea
add
loopne
fisttp
out
or
ret
mov
je
xor
imul
or
push
call
fisttp
cs
hlt
push
add
cmp
pop
icebp
clc
outs
cmp
pop
adc
mov
mov
and
sbb
push
sub
lock
mov
pusha
aas
leave
and
repnz
inc
fisttp
fadd
lahf
js
mov
fucomi
ss
cmp
test
inc
or
(bad)
(bad)
jnp
shl
inc
dec
lods
pop
cmp
out
xchg
sub
sti
lock
inc
and
inc
aas
cmp
pop
mov
fidiv
add
add
push
les
ror
pop
xor
lea
mov
loopne
and
jl
cmp
adc
inc
rcr
xchg
mov
jmp
lea
inc
jb
add
inc
add
js
dec
dec
mov
inc
mov
sbb
or
sbb
clc
push
aaa
retf
push
stc
push
or
cwde
add
nop
fldcw
in
imul
sub
jb
je
jmp
leave
inc
jo
das
dec
das
cmp
inc
and
jl
pop
repnz
inc
retf
jge
mul
stos
push
inc
push
jl
dec
dec
leave
leave
adc
push
dec
dec
dec
leave
leave
leave
leave
dec
xor
xor
leave
leave
leave
xor
leave
aaa
cmp
cmp
leave
leave
leave
cmp
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
leave
das
adc
adc
leave
leave
leave
adc
leave
pop
sbb
sbb
leave
leave
leave
sbb
leave
pop
add
add
leave
leave
leave
add
leave
pop
or
or
leave
leave
leave
or
leave
(bad)
std
icebp
enter
popf
lods
cmps
add
sahf
push
aam
cmp
jo
mov
cmp
pop
sbb
add
sbb
add
retf
adc
inc
dec
outs
popa
les
fs
inc
jb
ins
dec
push
fisubr
dec
daa
(bad)
mov
dec
outs
inc
jne
ins
fs
popa
arpl
(bad)
aas
jnp
xchg
push
dec
pusha
xor
inc
dec
dec
dec
inc
dec
imul
pop
and
inc
inc
push
gs
js
push
(bad)
jmp
jnp
pop
dec
into
mov
xchg
popf
movd
xor
or
lidtd
sahf
popa
dec
mov
push
dec
xchg
out
imul
sub
or
fisub
rol
or
sbb
mov
or
push
in
sbb
sbb
out
sbb
mov
inc
mov
or
gs
outs
fiadd
dec
(bad)
cmp
ror
gs
into
ret
popa
enter
pop
fcom
dec
popa
and
dec
fs
xor
xor
je
loopne
ja
adc
jne
cmps
and
dec
fwait
pop
ret
shl
bound
inc
add
push
jae
inc
dec
or
rcl
or
je
xchg
cld
inc
scas
or
outs
stos
loop
rcl
cmp
bound
lahf
jns
jne
popa
js
cmp
lods
pop
pusha
ror
jns
jg
jecxz
xchg
mov
int
neg
out
sub
outs
bound
push
xor
outs
ins
repnz
mov
xchg
or
lods
jmp
fisttp
dec
push
or
and
mov
add
fs
jne
(bad)
fcom
outs
lahf
pop
inc
or
gs
(bad)
outs
(bad)
push
ins
cli
outs
or
xor
or
and
dec
push
push
push
fwait
in
cmc
xlat
ja
mov
add
ss
out
int
adc
pop
test
push
or
dec
sar
sbb
xor
mov
add
enter
shl
aam
fmul
push
xor
outs
ss
imul
aad
push
in
or
xor
data16
and
mov
cld
test
je
sub
call
call
out
fild
pop
call
pop
movzx
sti
out
idiv
cmp
jne
cmp
test
push
mov
push
mov
push
dec
popf
mov
(bad)
fdiv
in
add
mov
jmp
pop
or
adc
xor
adc
jge
adc
pop
mov
jns
or
aam
mov
or
push
jne
or
jno
mov
push
and
test
jge
mov
mov
lock
jle
cmps
and
jne
adc
enter
push
sub
inc
stos
in
shl
xchg
push
inc
fwait
sbb
inc
lock
cmp
jne
jmp
inc
fidivr
clc
mov
jbe
cmp
or
sbb
or
gs
data16
das
adc
push
shl
adc
mov
jnp
mov
and
out
mov
push
mov
sbb
shl
in
sar
bound
das
mov
lods
lds
and
ficomp
test
xchg
ror
adc
rol
sub
inc
mov
mov
clc
adc
jb
inc
and
and
push
iret
sub
and
inc
dec
jne
mov
fxch
push
push
push
add
mov
sbb
hlt
cli
push
clc
or
loope
loope
mov
outs
movs
cld
mov
cmp
add
inc
or
sub
pop
out
adc
sub
xchg
aaa
pop
jno
test
cmps
add
pop
ror
movs
repnz
pusha
mov
or
pop
add
add
or
adc
adc
jne
icebp
sbb
cmps
jmp
mov
adc
mov
fld
cmp
xchg
(bad)
test
(bad)
adc
cdq
fldenv
adc
repnz
popa
ret
xor
sbb
into
sar
ret
push
daa
clc
push
nop
push
adc
jl
sub
cmp
jne
imul
sub
(bad)
(bad)
outs
push
das
inc
hlt
push
lea
mov
(bad)
cmp
mov
mov
add
aam
or
stos
cmp
mov
mov
enter
arpl
or
push
add
sub
pop
and
in
sbb
push
iret
cmps
inc
stc
adc
in
jns
and
ja
mov
push
sbb
add
sbb
jbe
jmp
nop
jbe
pop
out
adc
mov
inc
lea
push
or
lock
cmp
and
fadd
xchg
dec
mov
fisttp
loopne
cmc
in
jmp
dec
test
nop
or
jmp
fwait
pop
cmp
out
retf
loopne
sub
dec
(bad)
hlt
fsub
in
sbb
jo
pop
mov
pop
pusha
jo
je
ret
push
and
xor
mov
or
push
xor
xor
xor
je
js
mov
ins
cmp
test
mov
xor
mov
xlat
push
sub
adc
sbb
cmp
pop
add
(bad)
push
push
cmp
cmp
out
and
out
push
popf
add
loop
xchg
jmp
ret
xor
shr
shl
inc
mov
jbe
aas
jbe
push
sub
sub
out
adc
mov
xchg
shl
mov
mov
ficomp
rol
mov
xor
popf
sbb
jmp
pop
call
add
ror
cmp
cld
repnz
mov
(bad)
cmp
jge
or
cmp
sbb
xor
or
ret
adc
adc
mov
mov
add
push
adc
mov
xchg
mov
enter
and
jmp
pop
shl
sub
jno
adc
mov
fsubr
sub
ds
jae
inc
shl
and
aad
mov
mov
(bad)
mov
ret
clc
add
fstp
xor
cmp
sbb
pop
push
stc
arpl
ins
push
imul
push
das
adc
out
push
cmp
jno
sbb
(bad)
jmp
jl
sub
inc
fild
push
loopne
pop
mov
cmp
jbe
into
fwait
push
mov
mov
pop
fiadd
xor
mov
push
sbb
xchg
rcl
pusha
popa
push
loope
xlat
loopne
addr16
out
mov
out
out
jmp
mov
shl
(bad)
fsubr
xor
outs
sub
dec
mov
test
inc
and
xor
out
mov
pop
mov
clc
std
sbb
cmp
test
fimul
repnz
sbb
mov
mov
adc
cld
je
sub
or
add
xor
or
mov
cmp
(bad)
nop
data16
cwde
jae
mov
cmp
dec
push
lahf
sub
rcr
test
push
or
add
jno
xchg
mov
adc
lods
mov
mov
add
adc
loopne
sti
xchg
and
pop
sub
xchg
inc
and
daa
sub
outs
pop
add
add
and
lods
loopne
or
xor
clc
add
fidivr
sahf
and
sub
push
mov
xchg
cmp
jecxz
or
dec
adc
fisubr
pop
mov
shl
and
aas
sbb
mov
mov
adc
inc
dec
sbb
mov
sbb
imul
xlat
scas
shl
stos
das
sub
inc
cmp
add
inc
bound
fadd
add
mov
sub
rol
or
xchg
iret
add
sbb
jmp
dec
test
jne
mov
xchg
pop
dec
shl
mov
and
or
sbb
lea
data16
jg
popf
mov
loopne
sbb
fld
pop
pop
ret
push
sub
les
and
mov
fsub
retf
inc
push
or
in
adc
adc
rcr
jns
mov
jb
push
push
fstp
inc
lods
sbb
dec
push
xor
sub
mov
mov
ja
ja
dec
inc
daa
push
and
popa
bound
push
daa
inc
xor
out
add
ficomp
out
jbe
or
imul
daa
ds
mov
daa
and
dec
movs
add
pop
daa
(bad)
fistp
or
daa
mov
add
inc
pushw
retf
adc
and
inc
(bad)
mov
sub
dec
jbe
daa
push
or
mov
inc
push
push
jae
add
mov
into
or
pop
daa
and
sub
or
dec
push
das
bound
push
call
or
or
sub
inc
scas
shr
mov
int3
or
cwde
jg
call
cmps
scas
pop
rol
push
das
xor
ret
and
push
or
es
aaa
cwde
test
out
imul
push
nop
out
leave
xchg
push
mov
push
sub
and
inc
pop
scas
xchg
(bad)
call
xchg
sub
adc
(bad)
mov
adc
push
ja
(bad)
scas
push
cmps
ss
add
(bad)
call
push
push
mov
test
je
mov
stos
mov
mov
mov
mov
cmp
jne
inc
add
cmp
jne
xor
fwait
icebp
xor
fdivr
pop
adc
push
fdiv
xchg
shl
jo
in
fdiv
popa
pop
mov
sub
inc
lods
fsub
ss
sahf
jo
jge
cmp
push
add
cld
xor
fistp
dec
and
ror
sti
push
add
sub
sbb
xchg
maxps
xor
pop
gs
lods
add
push
fild
xchg
mov
and
mov
jbe
push
and
pop
pop
add
xchg
pop
pop
(bad)
mov
pop
cmp
add
or
pop
xlat
push
fcom
mov
push
xor
push
shl
or
(bad)
pop
or
pop
pop
ja
cmp
(bad)
aas
dec
sbb
dec
addr16
in
ja
ja
ret
test
mov
adc
sub
jg
mov
or
mov
scas
mov
mov
and
mov
sbb
pop
push
(bad)
aaa
push
test
dec
lods
or
push
addr16
xlat
add
adc
dec
xlat
not
or
and
iret
call
and
adc
or
push
daa
or
daa
pop
fsub
push
retf
add
sar
add
ins
and
dec
push
sbb
sub
mov
add
jmp
pop
mov
(bad)
popa
mov
push
push
daa
(bad)
pop
xchg
xchg
fistp
push
pop
pop
mov
addr16
sub
or
daa
pop
daa
sub
es
push
ret
daa
inc
or
or
inc
inc
push
inc
pop
add
inc
outs
xlat
add
sub
push
and
pop
out
jne
pusha
add
push
(bad)
dec
pop
(bad)
or
mov
adc
sub
das
sub
out
es
lahf
test
daa
xchg
ja
mov
adc
pop
and
mov
xchg
sbb
sbb
push
mov
push
fwait
call
pop
or
cmp
ja
add
pop
(bad)
into
(bad)
pop
ds
inc
out
or
mov
outs
adc
jmp
out
pop
push
stos
cmp
fbld
or
mov
and
aad
shl
pop
xlat
push
cwde
pop
test
dec
das
dec
shl
adc
not
jmp
pop
punpckldq
push
cli
xchg
lods
je
mov
mov
cmp
dec
(bad)
adc
loope
mov
jo
inc
mov
xlat
sti
xlat
mov
xor
push
add
pop
sti
xchg
dec
push
movs
mov
add
not
sbb
and
pop
fwait
cmp
pop
retf
sbb
and
xchg
not
or
fistp
cmps
cld
sbb
lods
test
aad
ja
call
adc
add
push
jne
lock
nop
(bad)
xor
jmp
arpl
and
sbb
sub
cld
mov
adc
xor
cmp
jmp
push
push
adc
mov
mov
jne
and
stos
adc
xchg
dec
fild
arpl
inc
data16
popf
outs
lods
mov
pop
dec
fstp
fwait
inc
pusha
cmp
ficomp
lods
jae
mov
fst
cli
cmp
clc
inc
inc
adc
lods
rcr
inc
push
shl
add
or
into
pop
sbb
and
sub
stos
icebp
mov
pushf
pop
adc
add
pop
add
ret
loopne
aas
jb
ja
(bad)
call
dec
xchg
mov
movs
out
pop
push
aas
test
xchg
pushf
jl
sub
sub
lods
add
call
rol
call
lods
ins
mov
adc
push
icebp
rol
dec
pop
inc
stc
mov
jg
loopne
inc
dec
xor
jmp
mov
movzx
add
aam
inc
push
xor
or
out
call
aam
cmp
jg
test
jle
cmp
jl
push
ss
add
inc
add
add
retf
lock
xor
ret
mov
cmp
push
shr
jecxz
in
mov
pop
or
add
movs
and
gs
sub
lea
dec
and
rcr
test
cmps
add
sub
mov
mov
ja
(bad)
or
pop
outs
call
sub
fisttp
shl
sub
or
or
retf
add
sub
loope
xchg
enter
xchg
je
test
repz
cmp
repz
and
sbb
pop
mov
clc
cmp
cwde
dec
pusha
test
in
cmp
xchg
ss
shr
lock
cmp
aaa
inc
and
inc
add
outs
add
popa
add
mov
mov
outs
add
gs
push
ins
adc
rcl
push
inc
ret
cmp
inc
bts
adc
movs
cmp
pop
lock
pop
mov
jae
stc
add
sbb
ret
cs
sbb
in
pop
mov
or
pop
je
push
sub
les
push
stc
shl
cs
push
mov
and
hlt
hlt
add
cmp
(bad)
and
stc
mov
aam
test
mov
cld
xchg
das
push
jle
mov
and
mov
in
mov
loopne
je
mov
jl
mov
add
add
cmp
and
in
pop
push
jno
les
loop
inc
(bad)
(bad)
aam
jae
mov
push
xchg
jbe
pop
sub
icebp
lea
ret
xor
test
scas
daa
pop
es
int3
adc
test
mov
fsubr
mov
daa
and
dec
and
sub
daa
(bad)
jne
test
jo
outs
lahf
es
cwde
or
daa
enter
xchg
arpl
mov
cwde
push
daa
es
daa
mov
inc
aaa
adc
addr16
and
(bad)
fwait
push
test
in
test
lds
mov
jne
shr
mov
cwde
ret
pop
mov
adc
adc
inc
cwde
mov
add
adc
inc
jg
cmp
xor
mov
ss
aaa
add
aaa
fdivr
lds
fild
or
dec
sub
jo
bound
cmp
sbb
out
and
loopne
push
mov
pop
mov
in
mov
out
xchg
mov
in
cs
xchg
mov
pop
in
repz
mov
mov
add
out
imul
leave
cdq
mov
mov
xor
sub
in
push
scas
cmp
enter
inc
aad
inc
push
or
xor
push
add
je
lea
push
xor
mov
test
jne
push
ret
add
add
jg
out
pop
xor
outs
aam
mov
pop
jmp
cmp
xchg
sub
cmp
add
cmp
cmp
je
sub
push
or
mov
push
and
push
push
in
pop
call
std
fs
fstp
fwait
fs
push
clc
loop
loop
sub
inc
fadd
fstp
cmp
mov
xchg
ins
mov
xor
repnz
(bad)
fmul
xor
pusha
dec
mov
sbb
jnp
or
daa
fsub
push
or
cmp
jg
add
add
and
add
add
xor
(bad)
jg
ds
add
add
cmp
add
pop
add
add
mov
add
jnp
add
jle
lahf
sbb
(bad)
push
and
rcl
sub
addr16
retf
or
dec
mov
dec
jne
push
mov
push
mov
arpl
sahf
pop
push
add
call
pop
sti
out
mov
inc
es
push
cmp
mov
xchg
xchg
adc
dec
jl
xchg
dec
cs
add
leave
and
xchg
xchg
xchg
pop
jb
clc
sub
dec
cs
xchg
dec
repnz
hlt
sub
movs
es
and
mov
test
jb
and
adc
jl
fs
xchg
pop
aam
in
leave
dec
cs
and
push
leave
enter
das
mov
les
pop
jb
and
mov
add
cmp
repnz
dec
cs
sub
leave
and
loopne
fs
xchg
dec
cs
and
leave
and
mov
dec
pop
jb
sub
pop
dec
cs
xchg
pop
xor
or
inc
cmp
and
push
mov
shr
leave
and
adc
cmp
leave
and
clc
xchg
dec
es
icebp
push
and
in
in
repnz
pop
jb
cmp
xchg
int3
cs
in
add
inc
je
in
dec
movs
call
and
mov
xchg
pop
loopne
cmc
ja
dec
pop
jb
pushf
loopne
imul
mov
cld
dec
div
xchg
imul
loopne
clc
in
xchg
dec
je
adc
xchg
dec
cs
push
xchg
in
xchg
dec
repnz
push
leave
in
sti
cmps
pop
sar
cld
dec
cwde
xor
dec
cs
xchg
xchg
pop
int3
sbb
pop
leave
dec
cs
and
mov
sbb
sub
pop
ins
mov
xor
dec
add
inc
mov
sub
jl
xchg
dec
cs
and
add
xchg
dec
cs
inc
nop
shl
add
jns
lock
push
adc
xor
js
jb
and
mov
shl
or
and
or
xchg
dec
es
mov
or
and
loopne
pop
pop
jnp
or
pop
mov
and
dec
repnz
dec
rcr
push
mov
cmovs
xchg
dec
cs
adc
leave
and
fcom
adc
xchg
dec
repnz
je
and
cdq
in
adc
jnp
movs
sbb
fs
xchg
cmp
test
pop
leave
and
lods
pop
pop
xor
ins
xchg
dec
pop
jb
add
dec
imul
inc
sbb
xchg
mov
or
pop
pop
jb
and
mov
mov
jb
and
cmp
mov
in
dec
pop
and
pop
pushf
imul
clc
dec
pop
cmps
pop
xchg
dec
repnz
call
cs
in
inc
and
dec
add
pusha
test
mov
xchg
add
inc
pop
shl
and
int3
dec
cs
in
and
repnz
aam
es
xchg
es
and
mov
fsub
jns
and
sub
xchg
dec
es
clc
inc
sub
and
cmp
leave
dec
cs
test
sub
xchg
xchg
pop
xor
sub
js
sbb
xchg
pop
jb
push
nop
int3
adc
mov
mov
leave
and
sar
fs
xchg
inc
xor
das
sbb
push
lods
in
dec
pop
add
cmp
leave
and
mov
mov
pop
jb
hlt
cmp
cmps
es
mov
int3
adc
pop
mov
fcomp
jb
and
in
dec
pop
cmp
adc
and
pop
mov
hlt
inc
cmp
sbb
iret
and
das
mov
cdq
in
cmp
mov
call
pop
jb
and
mov
jo
xor
dec
fmul
cmp
and
enter
jb
and
scas
add
sub
imul
loopne
sbb
jb
ficom
pop
mov
push
add
jge
mov
hlt
ror
pop
lock
push
add
dec
test
cmp
rcl
sub
and
sub
ror
dec
or
loopne
cmp
clc
ins
xor
fs
ins
adc
aas
cmps
inc
mov
adc
sbb
and
out
jg
or
jl
inc
ja
shr
int3
jge
push
push
jnp
add
or
clc
cdq
push
and
aad
test
pop
cld
rol
push
cmp
push
test
sbb
leave
jle
lea
or
jge
and
ins
in
sbb
or
ins
neg
sahf
and
inc
dec
jne
cmps
pop
or
fmul
fild
dec
shl
add
jmp
pop
rcr
mov
lea
mov
shl
fwait
je
fcomp
mov
popf
aam
pop
lock
outs
mov
push
cmp
je
in
cmp
clc
push
movs
xchg
xor
jbe
loope
int3
xor
add
loopne
dec
sar
out
add
push
sbb
and
addr16
cwde
outs
mov
jmp
jb
aam
xor
cmp
mov
pop
pushf
add
int3
mov
add
(bad)
pop
ficom
neg
inc
imul
add
add
cmp
add
mov
push
push
das
push
or
daa
or
push
pusha
jbe
add
or
mov
add
jne
(bad)
sbb
outs
mov
xor
add
imul
and
das
add
add
sub
mov
dec
mov
addr16
call
push
or
mov
addr16
mov
cmp
aas
rcl
inc
add
pusha
pushw
xchg
add
rol
pop
sub
pop
pop
outs
shl
test
pop
mov
pop
and
add
ret
pop
(bad)
xor
xor
and
or
cmp
das
and
lds
or
mov
maskmovq
neg
push
mov
sub
outs
es
or
xchg
xlat
jno
xor
jmp
fisubr
outs
mov
lods
xchg
adc
movs
fstp
push
das
outs
sbb
add
(bad)
out
nop
sub
jg
cli
adc
add
sub
push
xor
das
pop
mov
or
aaa
(bad)
sub
xchg
jg
sbb
sbb
daa
das
pop
nop
call
and
imul
movs
mov
cmp
or
pushf
ss
push
out
jo
inc
das
inc
ret
mov
(bad)
jb
dec
data16
daa
or
sub
push
mov
pop
jae
xchg
inc
or
xlat
pop
inc
or
jmp
mov
xlat
xchg
pop
and
aas
fist
adc
add
add
imul
cs
mov
aas
xor
ja
nop
pop
and
int3
jns
xor
xchg
dec
xor
or
cmp
pop
push
dec
xchg
and
loop
sar
push
(bad)
pop
stos
xor
push
aaa
out
(bad)
xor
pop
pop
das
imul
fcom
sub
push
imul
adc
daa
push
pop
pop
push
js
retf
add
rol
pop
aas
shl
das
mov
xchg
cs
pop
sub
add
mov
mov
or
push
retf
mov
push
sbb
adc
inc
pusha
push
jae
push
cmp
(bad)
daa
cmp
inc
aas
iret
cs
pushf
movs
out
out
out
es
int3
int3
leave
notrack
push
inc
push
dec
and
outs
ja
pop
sbb
xchg
shl
(bad)
daa
stos
adc
or
not
sub
dec
daa
call
(bad)
or
push
push
pop
or
jb
data16
pop
repz
mov
xchg
add
pop
out
xor
and
pop
test
das
pop
pop
int3
movs
stos
mov
xor
pusha
out
add
imul
fimul
push
fnstenv
pop
jae
or
pushw
jbe
aas
push
ja
out
xor
push
lahf
adc
mov
ins
dec
mov
ja
inc
jb
xchg
movs
data16
das
pop
fsub
out
aam
and
fisttp
sub
int
jnp
das
pop
call
mov
pop
daa
sub
cmp
mov
cmp
aaa
push
cmp
mov
(bad)
xrelease
jg
aad
push
into
jae
pop
call
push
pop
ss
adc
sub
mov
pop
daa
dec
mov
adc
daa
xchg
das
dec
outs
cwde
pop
sub
das
iret
xchg
shl
pop
xor
xchg
pop
mov
outs
inc
push
pop
mov
outs
cmp
xor
cmp
or
daa
push
dec
cmp
ss
popa
pop
call
add
or
dec
adc
cmps
adc
inc
push
mov
or
sti
ja
(bad)
pop
fiadd
pop
(bad)
jle
and
or
js
bound
mov
pop
push
sbb
out
outs
mov
imul
sub
out
xor
rcr
xchg
mov
xchg
push
aas
dec
add
mov
push
or
mov
xor
or
mov
xchg
cwde
xchg
pop
scas
inc
jg
sub
fisub
pushw
into
add
and
xchg
addr16
or
sbb
(bad)
jmp
daa
add
xor
cwde
xchg
retf
imul
(bad)
les
inc
mov
or
daa
push
or
add
out
sub
sbb
sub
ja
and
and
test
add
inc
nop
test
das
pop
pusha
pop
pop
jg
pop
daa
mov
push
dec
imul
outs
imul
adc
addr16
sub
(bad)
push
and
and
push
sub
push
sbb
bound
enter
xlat
ror
sub
mov
xor
pop
test
mov
sub
add
nop
shr
push
outs
mov
lahf
(bad)
ficom
cmp
push
jecxz
jb
movs
mul
xor
mov
add
inc
xchg
cmps
add
add
rol
cmp
arpl
pop
test
call
outs
daa
outs
movs
fmul
stos
arpl
adc
test
aaa
push
mov
cdq
out
int
cmp
rcl
inc
mov
sbb
inc
and
push
loop
das
out
ficomp
and
int3
cmps
sbb
and
daa
xchg
int3
cmp
lahf
inc
(bad)
mov
aaa
scas
add
arpl
inc
repz
xchg
mov
xchg
add
inc
fiadd
push
out
jg
xchg
sub
test
and
xor
ficomp
inc
lahf
imul
lahf
inc
sub
pop
lahf
pop
and
and
inc
test
outs
inc
lahf
mov
test
enter
or
push
push
xchg
sub
add
daa
das
xchg
jp
or
mov
or
inc
daa
in
or
hlt
add
cmps
(bad)
mov
mov
add
lahf
mov
sub
lahf
inc
inc
ins
add
sbb
bound
mov
scas
cmp
ja
pop
and
rsm
xchg
jg
jo
add
cmp
iret
daa
addr16
sub
mov
dec
adc
ja
popa
push
stos
xor
addr16
inc
sbb
adc
cmps
cmps
add
jae
jnp
dec
mov
shl
jnp
inc
xchg
jnp
es
outs
les
repz
pop
and
js
pop
or
xor
add
push
out
push
cmps
inc
mov
cmps
fistp
push
pop
pushf
inc
push
push
cmp
stos
jo
iret
inc
pop
mov
push
ja
xchg
add
ja
js
and
xchg
mul
ja
xor
iret
shr
in
or
pop
push
adc
and
aaa
pusha
cmp
rol
ja
push
dec
push
test
mov
sub
packuswb
inc
push
ins
or
pop
test
mov
xor
jp
lods
cmp
addr16
inc
gs
push
xchg
iret
sub
and
jg
add
push
jmp
push
or
outs
daa
dec
lahf
ret
inc
dec
jae
sub
push
mov
jmp
or
out
mov
inc
in
jg
xchg
pop
add
push
sbb
stos
xchg
mov
mov
mov
dec
adc
jg
adc
fdiv
push
pushf
sub
pop
fild
or
and
scas
xchg
dec
nop
sub
(bad)
dec
and
push
popa
fucomip
jg
inc
xchg
bound
mov
jae
and
push
aaa
add
and
outs
aam
push
lahf
bound
inc
adc
adc
jg
mov
xor
mov
sub
loop
cmps
xchg
pusha
jne
xlat
aaa
xchg
mov
inc
repnz
xchg
out
das
mov
jecxz
fistp
daa
das
aas
sub
sbb
ret
xchg
sub
push
rcr
or
xchg
push
mov
cmp
or
add
sub
lahf
push
add
retf
nop
scas
pop
cmps
pop
and
dec
jb
push
cmps
sub
ja
add
pop
sub
mov
ja
or
jo
addr16
cmp
scas
add
pop
lock
cmp
repnz
and
add
lds
dec
xchg
bound
push
and
pop
ror
xchg
adc
push
xchg
inc
push
outs
mov
dec
mov
iret
(bad)
popa
sbb
jmp
loopne
and
inc
cmp
jg
repz
dec
adc
add
inc
pop
push
dec
pop
shl
mov
loopne
bound
xchg
aaa
push
push
push
cmp
imul
scas
add
jbe
aas
data16
add
into
mov
dec
daa
imul
movs
pop
xor
and
jae
pop
arpl
add
lahf
pop
pop
or
mov
dec
jg
test
outs
ja
xor
xchg
ja
push
pop
and
add
test
sub
push
jnp
test
sub
out
daa
jno
push
int3
adc
test
mov
mov
mov
lea
jae
pop
xor
add
jb
out
push
mov
repnz
aas
call
add
mov
mov
pop
cmp
pop
rol
inc
xchg
or
add
jg
adc
es
cmps
pop
test
dec
jg
add
inc
and
cmp
inc
cmp
inc
dec
pusha
mov
inc
inc
movs
sbb
mov
daa
dec
pop
dec
or
jnp
(bad)
push
adc
sar
mov
nop
xchg
mov
sbb
mov
cmp
add
faddp
push
ret
mov
cmp
and
add
mov
(bad)
ficomp
fisttp
add
jno
imul
cmps
add
inc
das
cmps
and
sub
xchg
pop
add
lds
add
inc
dec
lahf
or
inc
xlat
dec
cmova
aas
or
mov
jp
ja
sub
lods
sub
sbb
ror
retf
aas
(bad)
(bad)
pop
scas
push
adc
dec
add
cmp
inc
aas
scas
pop
and
jnp
rcr
jnp
jg
sub
cmp
mov
dec
out
out
aaa
push
nop
and
sbb
imul
cmp
ja
cmps
or
rcr
sub
xchg
ss
mov
mov
test
pop
rcl
adc
xchg
push
das
pop
je
push
pop
pop
int
fwait
sub
sbb
ja
or
adc
sbb
xchg
or
mov
sub
rol
fistp
popa
or
adc
nop
fsub
retf
xchg
or
mov
pop
inc
ja
add
pop
iret
cmps
add
sub
leave
fild
pop
push
daa
(bad)
xor
fs
xchg
aaa
push
ror
enter
pop
test
mov
sub
push
inc
sub
xchg
lahf
xchg
adc
xchg
pop
and
sub
jg
jg
and
into
outs
cmps
lds
or
xchg
sbb
rcr
ret
mov
out
push
and
lea
mov
ret
aas
jle
fild
adc
popa
imul
iret
xchg
mov
xor
or
inc
outs
xlat
mov
cmp
ja
mov
fild
iret
xor
stos
or
iret
pop
jecxz
or
fbld
xchg
xchg
inc
pop
xor
or
stos
add
adc
(bad)
cmps
mov
stos
pop
mov
cmp
push
rol
cmp
stos
mov
out
push
inc
test
jmp
push
sub
or
call
or
adc
iret
cmp
fmul
sahf
iret
scas
push
mov
inc
push
ss
or
jmp
(bad)
call
or
ja
inc
ffreep
and
popa
fcomip
adc
movhps
pop
loopne
xor
pusha
repz
cmovb
out
movs
xor
mov
or
sub
mov
(bad)
xor
jg
jg
add
pusha
push
mov
and
jmp
ja
adc
cmps
dec
jae
and
xchg
adc
(bad)
mov
sbb
scas
(bad)
push
push
and
outs
dec
movs
fcomp
sbb
jo
es
ret
sub
mov
mov
dec
jae
js
xlat
ret
mov
mov
jae
cs
mov
ja
or
je
aas
outs
push
xchg
jo
pop
dec
and
inc
jnp
pop
jbe
imul
cwde
xchg
sbb
jg
xor
pop
mov
mov
push
xchg
push
sub
inc
fimul
adc
pop
push
(bad)
mov
(bad)
pop
push
test
pop
stos
movs
lea
outs
imul
sub
pop
add
adc
cwde
jne
push
scas
and
add
xchg
xchg
dec
pop
jb
xor
sbb
iret
inc
cmp
ret
add
fwait
push
dec
jns
push
das
sbb
retf
add
outs
xchg
push
aas
adc
es
dec
push
inc
test
pop
mov
and
cmp
adc
adc
add
xchg
push
mov
mov
add
lahf
lahf
xlat
cmp
xchg
push
sub
mov
sbb
sub
and
pop
bound
out
push
aas
push
dec
mov
xchg
pop
pop
jae
xchg
mov
jae
add
addr16
add
push
out
cmps
cmp
(bad)
xchg
xor
nop
scas
retf
jo
sbb
xchg
push
sbb
imul
push
imul
push
xchg
pop
out
dec
jae
mov
adc
push
jg
jnp
add
inc
(bad)
or
daa
sbb
adc
daa
add
out
inc
xchg
pushf
mov
(bad)
push
add
sbb
test
test
out
and
dec
ss
inc
mov
jg
adc
pop
adc
xchg
jae
das
aas
inc
(bad)
rol
mov
dec
pop
mov
mov
mov
ror
mov
stos
add
mov
or
das
lods
ja
mov
or
sub
sub
aaa
fisubr
outs
pop
cmps
ins
dec
mov
xlat
shl
sub
lods
mov
mov
sti
pop
inc
sbb
sub
fcmovnbe
dec
enter
mov
stos
or
sub
push
adc
push
ja
adc
xor
popa
shl
push
retf
xchg
add
inc
adc
adc
xchg
mov
or
arpl
sbb
test
cmp
add
cmps
mov
jg
or
ja
xchg
sub
ja
out
add
imul
pop
push
stos
jne
mov
imul
and
xor
mov
xchg
mov
push
push
push
jnp
cmc
mov
lods
nop
sub
pop
stos
(bad)
or
push
sub
xchg
ret
xchg
aas
shl
sbb
pop
ja
sub
pop
pop
aas
xchg
xor
ficom
adc
sbb
pop
out
and
add
(bad)
mov
jbe
(bad)
jg
or
dec
(bad)
or
xor
inc
test
dec
xor
or
push
out
jmp
add
xchg
movs
add
arpl
adc
mov
(bad)
jle
iret
push
fstp
mov
scas
push
daa
xlat
push
and
outs
cmovs
addr16
xchg
inc
add
inc
pusha
push
pop
iret
add
repz
(bad)
or
jg
adc
or
cs
push
stos
ins
mov
push
mov
xor
cmps
and
test
push
add
dec
jo
or
lahf
pop
lahf
adc
push
test
lahf
add
add
and
adc
mov
scas
jnp
mov
popa
loope
or
lods
sbb
cmps
sbb
mov
outs
es
mov
emms
iret
cmp
adc
add
ja
je
and
push
mov
pusha
or
ja
or
ja
and
adc
xor
jnp
es
pop
scas
mov
aas
cmp
xchg
lahf
fmul
xchg
add
sbb
adc
scas
mov
or
cs
addr16
and
mov
cmp
dec
jg
outs
test
add
lahf
bswap
leave
test
mov
and
xchg
and
mov
xor
cmps
adc
fld
cmp
dec
mov
ret
xchg
fild
push
xchg
pop
mov
cmp
or
and
or
vpshufhw
addr16
(bad)
and
xchg
and
and
sub
scas
add
and
xchg
pop
or
in
lea
inc
loope
xlat
dec
and
cmp
mov
(bad)
xchg
inc
imul
and
mov
fist
or
dec
mov
add
jb
sub
into
inc
jnp
ret
jb
jbe
scas
(bad)
jg
aad
mov
fisttp
sbb
sub
mov
pop
out
mov
aaa
jg
xor
push
jg
adc
ret
jle
jg
mov
and
movs
or
ins
rol
mov
push
daa
and
cvtdq2ps
pop
ret
or
adc
mov
inc
addr16
mov
xlat
mov
inc
fimul
or
add
cmp
adc
daa
test
daa
xchg
jg
or
(bad)
call
mov
xor
cmp
mov
data16
bound
xchg
sub
loopne
push
xchg
pop
xchg
retf
adc
adc
(bad)
(bad)
pop
aaa
adc
test
nop
sub
xchg
outs
jecxz
and
lahf
add
(bad)
mov
or
dec
sbb
or
popa
or
sbb
sub
pusha
lahf
daa
xor
imul
dec
sbb
js
pop
xchg
push
push
rcr
mov
push
inc
adc
mov
mov
cmp
pop
dec
dec
pop
or
add
sbb
inc
cmps
mov
add
add
fistp
data16
pusha
or
push
mov
push
sub
int3
sar
outs
mov
test
aad
ja
inc
(bad)
jnp
mov
retf
push
aad
xchg
in
sbb
add
ja
adc
inc
mov
loope
jne
inc
inc
daa
movs
sar
xchg
push
data16
outs
pop
les
retf
pop
shl
loope
fwait
or
pop
or
out
xchg
push
mov
sub
pop
imul
xor
retf
sub
adc
dec
pop
xchg
fcom
sar
int3
ins
pop
cmp
das
shl
dec
xchg
shl
xchg
call
sub
dec
xor
adc
inc
sahf
addr16
inc
or
xchg
arpl
add
or
retf
inc
es
mov
adc
and
sub
adc
add
addr16
add
adc
xchg
arpl
test
pop
das
addr16
gs
pop
das
pop
or
push
mov
mov
lahf
sub
es
sub
and
or
pop
push
sub
pop
xlat
inc
ss
push
and
out
xchg
inc
mov
sub
dec
add
xchg
jae
or
stos
in
add
inc
or
sbb
and
add
out
push
mov
xor
or
pop
mov
mov
push
xchg
mov
mov
mov
int
add
push
pop
pop
mov
pop
or
inc
or
inc
jmp
iret
mov
mov
dec
push
inc
adc
(bad)
sub
add
and
cmps
xchg
(bad)
dec
loop
add
cli
(bad)
jg
mov
push
push
push
mov
mov
mov
mov
xor
push
push
dec
push
mov
lea
mov
call
mov
test
je
sub
in
mov
fisttp
test
je
mov
dec
add
les
and
jmp
outs
fwait
add
jns
in
mov
data16
jnp
pop
loop
cmp
je
in
lahf
loopne
lea
mov
mov
fwait
je
inc
adc
xor
fbld
call
inc
jne
sbb
adc
xchg
mov
cmp
mov
int3
pop
pop
pop
rcl
add
fucomp
stos
shl
aaa
popf
dec
lea
(bad)
call
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
test
dec
jnp
(bad)
or
js
std
or
push
or
push
and
call
retf
icebp
out
rcr
push
push
mov
mov
loopne
scas
mov
scas
xor
ficomp
add
xor
and
mov
sub
shl
cmp
mov
scas
ret
xor
out
mov
ss
pop
movs
pop
inc
outs
mov
mov
fwait
pop
inc
outs
mov
pop
(bad)
push
sub
lock
lock
(bad)
adc
mov
pop
pop
mov
add
js
adc
jge
push
lock
cmp
(bad)
jbe
pop
fiadd
mov
sub
fmul
fidiv
clc
cmp
js
add
mov
cmp
add
leave
mov
inc
sub
mov
ret
(bad)
lods
cmp
xor
mov
and
fiadd
das
jl
jle
dec
pop
pop
mov
data16
mov
rcr
cmp
ret
inc
jno
xchg
mov
ret
push
cmp
sub
inc
push
jl
pop
call
jmp
idiv
dec
mov
or
iret
xchg
pop
and
inc
cmovl
and
aas
or
dec
rol
cmp
cmp
imul
cmp
fsub
and
sbb
or
and
(bad)
sahf
push
xor
test
ret
add
pusha
inc
inc
in
rol
pop
cmp
jmp
(bad)
or
dec
jg
dec
jne
xchg
loop
in
nop
or
push
xor
inc
aam
inc
fisttp
jp
jo
gs
test
cvtdq2ps
dec
fisttp
dec
lea
add
cdq
xor
in
scas
xor
sahf
cwde
fadd
cs
inc
loopne
mov
dec
mov
dec
lock
loopne
mov
push
cmp
push
lea
mov
fcom
dec
and
int3
stos
call
xchg
ret
jge
idiv
mov
add
xchg
inc
cmp
jmp
pop
adc
pusha
imul
dec
adc
aad
jno
stos
test
cmp
cmp
out
in
cmp
push
mov
loopne
inc
jne
loop
cli
sbb
xor
or
in
jo
ret
adc
fwait
pop
push
mov
and
or
hlt
jne
(bad)
mov
pop
das
mov
jle
push
jne
dec
sbb
fs
add
xchg
adc
pop
cs
mov
dec
adc
cmp
dec
xor
inc
stos
popf
retf
mov
jb
icebp
mov
mov
adc
jbe
cmp
sete
fild
push
xor
add
add
pop
adc
push
cmp
sar
dec
imul
push
je
mov
mov
xchg
fadd
mov
lock
sub
sbb
pop
(bad)
(bad)
sbb
push
pop
xor
fidivr
stos
add
ss
icebp
rol
js
push
out
inc
test
jle
dec
pop
pop
xchg
loope
add
push
xlat
loope
adc
js
out
adc
mov
mov
xchg
jmp
mov
into
mov
push
jb
pop
jge
sbb
jne
cmp
pop
pop
pop
subps
jno
fisttp
test
mov
std
ja
sbb
cmp
cmp
dec
retf
imul
mov
mov
imul
fmul
or
movs
lock
pop
cmps
mov
xchg
or
mov
(bad)
loope
or
and
fist
in
dec
adc
dec
loopne
fnstenv
in
dec
or
or
jo
sub
adc
jmp
xchg
imul
(bad)
jmp
fcom
aaa
inc
imul
inc
lods
jo
push
pop
xor
sub
push
push
test
imul
or
(bad)
out
fidivr
dec
xor
inc
adc
jns
movs
sbb
push
dec
xor
jbe
add
xor
sbb
mov
out
das
inc
add
pop
das
jp
pop
pusha
data16
mov
icebp
push
push
scas
push
ss
cmp
enter
pop
cs
add
jmp
es
add
call
dec
push
inc
pop
push
mov
lods
jno
adc
inc
loopne
mov
js
push
popf
jmp
pop
and
test
adc
push
popf
test
xor
and
rcl
xor
inc
cmp
xor
ins
add
mov
push
cmp
jg
pusha
mov
xchg
sub
push
(bad)
cmp
mov
dec
(bad)
iret
add
inc
push
pop
clc
aas
jne
push
sbb
mov
jp
out
in
and
out
push
or
push
push
mov
jle
jp
mov
cmp
inc
add
cmps
jg
sub
fild
out
fcomp
cmp
or
or
dec
sub
add
inc
jmp
xor
jne
ins
mov
cmp
mov
lock
loopne
jle
jmp
mov
pusha
jb
and
pop
fiadd
aad
popf
daa
jl
add
pop
push
ins
adc
sub
mov
inc
lock
clc
pop
jmp
jo
mov
sub
jb
je
sub
push
sti
jo
fist
cs
jbe
sub
ds
sbb
loopne
mov
and
dec
je
dec
popf
mov
add
xchg
cmps
das
(bad)
pop
and
ja
sbb
ins
fadd
je
jmp
pop
sti
add
das
pop
add
and
pop
sub
movs
sbb
mov
or
or
adc
cld
mul
in
sub
xchg
add
add
je
dec
adc
xchg
or
push
mov
js
jns
jmp
ret
sbb
dec
enter
add
push
add
mov
outs
es
call
dec
dec
fcom
ror
or
push
in
and
sahf
cmps
sub
add
sub
xchg
sub
jo
mov
test
imul
mov
jg
sub
add
dec
pop
sbb
cmps
outs
into
and
(bad)
into
adc
and
jmp
in
push
sbb
pop
int3
loop
repnz
dec
and
inc
adc
movs
pusha
dec
mov
xor
cwde
xor
jne
and
mov
ins
push
aaa
ds
push
and
sub
fadd
loop
inc
rcr
pop
mov
mov
jbe
mov
mov
cs
arpl
in
jo
scas
mov
jb
xchg
std
aaa
jmp
aad
adc
aam
jbe
sbb
add
push
xor
call
jb
rol
xor
mov
xor
sbb
add
sub
fstp
popf
je
inc
lods
loop
test
add
and
out
dec
ret
jmp
pop
mov
push
jae
sbb
imul
in
adc
int3
mov
pusha
xor
push
adc
add
xor
lds
push
ret
jmp
in
test
xchg
cmp
cwde
jmp
les
in
jbe
bsf
in
lods
push
pop
cmps
shl
enter
sbb
shr
shr
cmp
adc
and
outs
sub
or
loope
or
adc
pusha
lock
cmp
add
inc
pop
push
pusha
ja
pusha
and
add
mov
adc
push
xchg
or
test
add
push
fiadd
stos
sub
lods
push
test
mov
dec
or
sbb
jg
sbb
sbb
and
shl
sub
adc
adc
enter
sub
xchg
inc
push
dec
push
pusha
je
(bad)
std
adc
adc
dec
icebp
mov
xchg
or
xor
enter
arpl
push
xchg
adc
sbb
push
cmp
lods
mov
xchg
xchg
or
pop
pop
or
jmp
and
test
or
pop
add
mov
pop
xor
pop
ret
jmp
push
adc
mov
out
sbb
xor
jmp
inc
jle
push
pop
test
sub
inc
adc
inc
outs
cmp
xlat
hlt
jns
add
mov
push
xchg
mov
sbb
cmp
xchg
mov
mov
inc
movs
js
add
test
sahf
xor
push
and
pushf
repz
vcvttsd2si
jp
jp
push
sub
xlat
xchg
dec
mov
mov
in
xchg
xchg
xor
sub
push
ror
dec
add
fisub
add
sub
xlat
jmp
adc
cwde
cmp
nop
mov
adc
enter
es
in
dec
add
push
mov
or
adc
call
nop
mov
fldenv
push
mov
mov
dec
sbb
inc
or
loop
mov
xchg
fsubr
pusha
mov
pop
test
xor
adc
push
fucomi
dec
stc
pop
dec
ins
inc
fbld
jle
ror
sub
addr16
test
xor
(bad)
out
enter
mov
jl
xor
pushf
fs
sbb
adc
add
test
js
add
cmp
sub
cmp
or
aas
xchg
push
sbb
aad
mov
mov
aad
(bad)
fnstenv
nop
mov
mov
call
popf
dec
lock
in
add
(bad)
out
lock
out
sub
pop
pop
jnp
aad
push
rol
add
or
ja
mov
add
sti
fisttp
add
add
add
add
adc
pop
inc
push
popa
add
add
dec
data16
imul
jbe
or
outs
mov
je
and
inc
jne
jbe
ja
js
jns
jp
jb
aaa
add
or
inc
add
inc
sbb
dec
ror
xor
dec
dec
test
inc
and
add
or
push
xor
push
add
(bad)
call
pop
add
add
add
add
xor
add
add
add
dec
add
daa
lock
add
pop
and
xor
das
loopne
sbb
daa
add
daa
lods
jle
adc
out
add
or
or
sbb
push
daa
das
add
push
movs
fldenv
cmp
inc
pop
dec
pop
ror
pop
pop
add
repnz
dec
add
cwde
sar
pop
push
mov
mov
mov
or
and
sub
sbb
sbb
cs
sub
adc
jns
out
cmp
cmp
pop
sub
retf
ss
xor
xchg
repnz
dec
sti
fild
pop
add
aas
add
pop
adc
jnp
adc
or
jge
ret
sub
jg
push
push
xor
mov
mov
mov
add
scas
ret
pop
cmps
push
add
or
retf
popf
sub
pop
adc
adc
inc
(bad)
pop
jne
mov
test
lods
out
add
cmp
loopne
fcomip
jle
mov
imul
push
and
popa
out
cmp
ret
mov
mov
inc
imul
mov
or
or
cmp
jge
pop
mov
sbb
cmp
or
arpl
out
scas
and
sub
sbb
ret
add
ret
sbb
lds
out
or
push
popa
out
mov
push
xor
cmc
lea
cs
call
(bad)
lock
std
lea
mov
sbb
xchg
mov
add
in
mov
push
dec
std
cmps
inc
test
adc
lea
add
mov
sbb
or
loopne
aam
jge
js
in
cmp
in
icebp
mov
outs
fsubr
push
dec
loopne
inc
mov
and
pusha
dec
fistp
sbb
adc
sti
jae
push
and
pop
push
push
xor
sti
fucomi
rol
jo
mov
popa
call
xchg
sbb
pop
adc
or
pop
mov
dec
sbb
push
(bad)
cmp
push
inc
ja
adc
jo
mov
add
ss
and
hlt
push
lods
xor
sbb
cld
mov
stos
rol
(bad)
sti
test
jmp
cmp
cmps
lods
sub
adc
pop
sub
inc
push
jo
pop
test
jle
or
push
or
mov
xor
mov
jnp
push
pop
cmp
pop
(bad)
lock
je
jb
les
ror
fcom
pushf
std
xor
mov
pop
pop
mov
rol
jp
daa
and
sub
sbb
add
mov
or
inc
mov
inc
or
inc
or
iret
out
fadd
sub
cmp
pop
push
mov
mov
mov
sbb
call
xchg
adc
jmp
xchg
sub
add
loopne
fidivr
mov
dec
in
scas
in
js
push
or
or
std
mov
and
sar
dec
repnz
dec
sub
jae
xor
mov
mov
xlat
cld
ret
adc
add
inc
ins
jmp
jmp
sbb
mov
ja
inc
outs
push
pop
loopne
xor
dec
lock
jecxz
lock
cmp
sbb
test
loopne
pop
(bad)
mul
inc
mov
int
into
ret
test
mov
mov
iret
gs
fdiv
pop
or
pop
inc
adc
pop
pop
push
adc
mov
lds
sbb
ja
outs
jge
push
hlt
cli
push
fadd
outs
ds
adc
jae
push
mov
push
sub
js
pop
hlt
sbb
movs
and
test
jl
(bad)
ins
ja
ret
pop
cmp
push
push
inc
or
adc
add
sahf
jmp
cli
adc
dec
cmp
push
pusha
test
es
xchg
jge
shl
mov
outs
push
cmp
push
(bad)
in
push
out
dec
loopne
sbb
push
and
push
add
outs
lock
retf
pop
ins
dec
(bad)
addr16
les
pusha
cmps
in
sub
call
clc
dec
test
jl
inc
divps
std
xor
push
push
imul
shr
dec
aam
daa
and
inc
mov
inc
inc
sti
and
pop
inc
fsubr
add
inc
dec
jne
pop
call
dec
pop
dec
inc
and
cmp
xlat
xor
js
nop
mov
ret
sbb
jecxz
ret
shl
out
inc
jb
pop
xchg
out
shl
adc
lods
test
xchg
mov
hlt
ds
xchg
(bad)
mov
xor
adc
shl
cld
cmp
pop
mov
add
jnp
xchg
out
shl
in
and
pop
stc
adc
adc
aaa
mov
push
jb
cwde
dec
mov
cmp
sbb
or
mov
push
nop
cmps
ja
or
fisttp
mov
test
mov
(bad)
mov
jl
inc
dec
mov
outs
mov
add
dec
jne
out
add
repnz
in
pop
fcomp
(bad)
lds
sub
(bad)
call
inc
and
jle
ds
lea
into
fucomp
pop
in
fcom
pushf
in
adc
bts
add
sbb
mov
mov
rol
aaa
push
and
sub
cld
jecxz
and
push
fistp
jo
lea
push
and
daa
or
push
lea
ret
mov
mov
inc
mov
pop
and
sbb
mov
inc
add
ins
add
cmp
jg
je
push
adc
or
or
push
in
sbb
or
sub
js
add
mov
jmp
ds
outs
or
ret
or
add
shr
push
mov
push
leave
xor
add
cs
repnz
lock
push
xchg
sbb
jb
shl
cmps
add
rcr
dec
or
cmp
enter
dec
add
fmul
pop
push
or
sbb
or
call
cdq
fdivp
jmp
inc
push
jno
rol
into
icebp
(bad)
call
sbb
clc
sti
in
shl
pop
ds
ja
and
push
jmp
int
adc
jne
or
dec
cmps
and
inc
clc
test
or
pop
cmp
arpl
mov
sub
je
sub
push
cmp
aad
call
aas
cmp
jne
scas
mov
outs
and
or
addr16
mov
cs
jmp
jmp
test
or
retf
push
in
adc
and
aas
jno
es
arpl
retf
fst
in
mov
push
sub
adc
jo
add
and
push
mov
jg
mov
mov
mov
fadd
cmp
mov
mov
mov
push
add
jne
ins
jp
mov
lahf
push
scas
loope
into
ins
dec
push
or
push
movs
sahf
out
call
(bad)
sar
test
jge
jl
push
iret
repz
adc
push
cmp
repz
and
clc
test
or
push
inc
enter
scas
fnstcw
mov
cmp
adc
outs
movs
stc
pop
mov
jle
sub
test
loopne
lock
or
in
jge
cmps
pusha
mov
sub
imul
das
push
xchg
ins
js
mov
nop
sahf
xchg
push
push
push
test
mov
add
inc
adc
popa
ins
gs
popa
ins
jne
push
gs
jb
je
xchg
shr
adc
cmp
inc
push
outs
imul
jmp
ins
fs
imul
inc
inc
sub
daa
jns
pushf
pusha
adc
addr16
ss
mov
arpl
outs
je
push
jns
gs
loope
xor
push
inc
add
jae
repnz
jmp
ja
stos
inc
in
jns
outs
pop
sub
arpl
movs
jb
repnz
sub
jmp
sbb
movntps
or
gs
fs
clc
pop
pop
inc
jae
cmp
push
je
fs
or
add
mov
or
add
mov
ins
push
or
push
lock
dec
and
cmp
mov
or
add
xchg
add
push
jnp
add
inc
jae
movs
call
fwait
lds
add
push
aaa
sbb
lea
rcr
jbe
adc
outs
jbe
je
outs
or
inc
or
add
xchg
cmp
ds
inc
jb
imul
je
inc
jno
mov
sub
dec
pop
inc
js
popa
arpl
or
cmp
jno
fadd
push
js
dec
nop
shl
or
pop
adc
mov
xor
cmp
gs
aas
std
xchg
out
lea
jg
mov
add
out
or
pop
xor
xor
push
adc
push
in
ins
adc
pop
add
lea
adc
div
push
test
xor
cwde
(bad)
cs
add
mov
mov
ins
dec
int3
dec
add
inc
mov
lods
or
cmp
sbb
xchg
pop
mov
dec
push
fsub
adc
pop
mov
test
lock
inc
inc
fsubrp
outs
sbb
popa
in
icebp
ds
xor
sub
sbb
lods
loope
cwde
dec
sbb
xchg
or
or
xor
inc
retf
pop
pushf
adc
popa
rcl
or
inc
pop
or
adc
and
inc
dec
or
test
mov
inc
loopne
bound
cmc
les
add
xor
sub
not
sub
test
and
lahf
mov
inc
sbb
movs
push
shl
add
dec
hlt
pop
scas
ret
push
push
cld
pop
hlt
ins
inc
inc
dec
jne
or
mov
rol
jmp
out
loop
cmp
dec
(bad)
icebp
push
inc
jmp
jo
add
xlat
outs
fcomip
aad
rcr
sbb
push
add
arpl
push
push
push
inc
scas
mov
inc
mov
xor
data16
pop
inc
test
add
cmp
fld
push
xor
push
dec
nop
sub
cmp
mov
inc
jb
or
aas
mov
or
dec
mov
pop
imul
clc
clc
xor
fdiv
xor
and
adc
fldenv
in
mov
lea
sbb
loopne
mov
popf
(bad)
popf
repnz
cmp
jo
mov
or
sub
push
sbb
lahf
xor
fisubr
jb
repnz
and
xor
sbb
inc
pusha
dec
or
cmp
jg
cmp
mov
xchg
add
and
cmp
mov
xor
xor
iret
pop
jo
cld
test
je
dec
sub
push
pop
test
rcl
jg
out
mov
mov
sub
inc
pop
add
pop
add
jle
jo
sar
and
mov
cld
jne
sbb
fs
cmp
divps
fs
adc
enter
xor
je
and
xor
dec
jmp
rol
movnti
inc
adc
jge
jmp
test
sbb
xchg
pop
sub
retf
mov
dec
sbb
xchg
jne
dec
mov
mov
repz
and
inc
push
sbb
test
std
jne
hlt
mov
xor
or
je
sysenter
ss
aas
and
test
pop
lock
xor
lea
adc
or
or
je
jecxz
jg
mov
or
loope
mov
jae
(bad)
inc
rol
lock
mov
out
or
sti
pop
iret
pop
mov
lock
push
jnp
sbb
cmp
lds
cmp
popf
pop
xor
imul
fmul
lock
cmp
ja
loopne
dec
sbb
dec
cmp
jle
ret
sub
add
ja
add
jg
xchg
cli
shr
ror
or
and
xchg
adc
push
fisttp
test
and
iret
mov
call
les
add
mov
mov
sbb
mov
nop
push
mov
sar
add
sbb
aad
inc
in
das
pusha
jno
push
inc
data16
push
jne
pop
mov
cwde
das
mov
jne
mov
iret
lea
mov
xchg
push
mov
push
adc
push
mov
iret
and
lea
xchg
sub
push
push
jbe
daa
or
xor
ds
cmp
das
push
push
daa
jno
or
retf
fist
ds
xchg
mov
cmc
mov
call
bound
dec
jg
call
adc
lahf
or
add
adc
sbb
mov
cli
push
pop
imul
loopne
dec
pop
push
sub
test
xchg
mov
inc
mov
aad
test
dec
mov
push
loopne
mov
outs
xchg
jl
fisub
shr
sbb
adc
inc
fwait
cmp
inc
adc
mov
ret
add
lds
xchg
das
jge
mov
add
xchg
pushf
cmp
or
in
popa
jmp
sar
dec
xchg
pusha
imul
mov
mov
call
cwde
inc
and
adc
dec
xchg
xor
jg
jno
add
dec
loopne
sar
jl
add
in
addr16
jns
and
add
pop
ja
nop
sbb
outs
(bad)
and
sbb
inc
dec
jle
popw
lea
add
xor
and
mov
inc
sbb
or
adc
clc
cmps
ss
(bad)
ja
and
push
out
dec
jo
cmp
out
dec
inc
(bad)
sbb
test
dec
cmc
jo
mov
scas
cs
je
push
sub
dec
icebp
ret
adc
les
and
push
add
fist
cmp
ins
fadd
mov
jmp
dec
add
ret
cmps
jne
mov
pop
jp
add
push
int3
xchg
and
xchg
imul
loopne
iret
dec
or
das
add
and
or
dec
inc
add
outs
data16
sub
mov
jo
dec
mul
aas
mov
inc
add
jae
sub
adc
jo
and
aas
lahf
mov
add
xchg
push
stos
adc
xlat
and
fmul
push
and
or
jno
lock
ret
ins
or
loopne
adc
outs
add
and
add
cwde
push
pop
imul
sub
sub
xor
je
fiadd
mov
clc
jmp
je
outs
jo
mov
push
pushf
hlt
jmp
or
pop
sub
sbb
ror
xor
mov
add
xor
jge
cmp
ret
ret
push
sub
ret
adc
jecxz
mov
mov
xor
aas
fs
or
cwde
xor
les
push
sbb
sub
arpl
inc
mov
sbb
aas
dec
push
mov
enter
add
mov
sub
adc
es
(bad)
mov
xlat
push
daa
dec
ret
mov
push
enter
lock
push
mov
and
jo
cmp
ja
mov
push
adc
and
push
xlat
sbb
scas
rcl
inc
cmp
jmp
mov
sahf
shl
lea
push
sbb
nop
or
cmp
jg
or
add
add
jbe
add
mov
mov
in
push
mov
lods
cmp
popa
dec
test
daa
push
add
mov
jge
loopne
in
or
push
test
repz
pusha
push
push
dec
pop
add
mov
out
mov
sub
cmp
in
mov
outs
or
test
sahf
add
add
aam
xchg
xchg
mov
lar
int
(bad)
retf
add
push
ror
cmp
sbb
mov
pushf
pushf
mov
push
das
push
test
or
dec
gs
jl
add
sbb
pop
mov
test
push
add
sti
dec
lock
outs
retf
or
inc
inc
jns
gs
adc
test
xchg
test
dec
imul
mov
call
mov
mov
imul
mov
mov
or
mov
add
mov
fcom
mov
sub
cdq
addr16
xor
jmp
aad
aam
mov
xor
sbb
in
jl
mov
mov
int
mul
mov
push
add
xor
ret
retf
cmp
leave
inc
add
ja
(bad)
and
pop
xor
jmp
mov
pushf
mov
dec
xor
and
push
jbe
sti
and
xchg
and
sub
jecxz
mov
dec
sbb
add
pop
fwait
adc
inc
sub
and
pop
aad
imul
cs
push
xor
es
and
sti
(bad)
loopne
jb
shr
loop
call
xor
push
add
xchg
xchg
adc
das
loope
dec
ja
fadd
add
xchg
cmp
add
add
pop
jbe
sbb
ins
push
dec
ja
jae
ins
sub
movlps
push
pushf
mov
mov
add
rcr
adc
adc
icebp
lods
mov
jecxz
sbb
addr16
mov
shl
push
sub
or
fs
add
xor
xchg
scas
add
(bad)
xor
test
cmp
inc
add
sub
lahf
mov
or
ins
inc
xor
lahf
mov
mov
aaa
mov
gs
cmc
mov
inc
loopne
inc
add
mov
movs
cmp
dec
inc
xchg
pusha
dec
pop
cmps
das
and
mov
int3
jp
int3
mov
outs
mov
ret
push
and
jmp
loopne
inc
movs
and
mov
sbb
cmp
xor
and
movs
ds
and
push
and
(bad)
cmp
or
lods
or
xor
push
and
nop
inc
sub
dec
ss
cmp
cmp
push
or
retf
pop
sbb
and
mov
js
and
test
push
movzx
pop
loop
add
scas
or
or
jb
cwde
xor
pushf
sub
cmp
push
ficom
retf
stos
dec
xor
add
inc
shl
test
adc
pop
sbb
add
cld
inc
out
add
hlt
add
pop
inc
pusha
ucomiss
loopne
(bad)
xchg
jo
cwde
mov
xchg
out
inc
mov
dec
inc
jo
pop
ret
adc
pop
or
js
jbe
xor
jl
call
cs
out
xor
dec
call
pop
xchg
(bad)
fst
pop
xchg
cld
pop
nop
sbb
or
loopne
or
sub
xchg
dec
and
arpl
in
jmp
mov
inc
adc
adc
js
mov
js
mov
xchg
inc
push
mov
adc
inc
push
cmps
loop
mov
sti
xchg
(bad)
vpsrad
daa
mov
inc
loopne
cmc
js
icebp
in
scas
mov
aam
or
cmp
xor
jae
fisttp
or
and
fist
loopne
loopne
sar
and
je
daa
outs
and
xor
lods
inc
adc
or
mov
cli
fcom
xor
outs
xlat
adc
mov
xchg
shl
inc
cmp
push
and
js
and
push
xor
jo
movs
dec
push
in
jno
stc
imul
jno
cmp
cmps
jo
pshufw
add
out
pushf
adc
lahf
dec
add
std
in
inc
inc
rcr
jo
push
jge
test
jl
js
fld
addr16
pop
pusha
aaa
daa
fldenv
xchg
fdiv
aas
xbegin
sti
cmp
js
aas
pop
shr
jecxz
push
and
icebp
and
pop
xchg
inc
jmp
adc
and
or
sbb
dec
daa
pusha
in
or
mov
mov
imul
test
adc
js
daa
ss
jns
inc
jns
xchg
add
repz
and
mov
cmp
xor
jg
lock
out
scas
cmp
and
mov
mov
lgs
(bad)
rol
(bad)
jmp
dec
inc
and
inc
cmps
test
xchg
lock
fimul
je
mov
out
mov
adc
ror
pop
add
pop
cdq
mov
dec
dec
das
pop
ret
sbb
fxch
sub
sub
stc
xchg
push
xor
adc
dec
mov
and
push
inc
mov
hlt
icebp
xchg
fbld
or
bound
add
mov
jbe
sbb
dec
add
lahf
push
call
push
cmp
jge
mov
and
dec
xor
push
push
adc
pusha
test
and
inc
fisubr
inc
or
cs
les
inc
inc
imul
push
mov
adc
xor
shr
popa
call
push
fmul
pop
cmp
inc
xchg
test
xchg
ret
imul
retf
pop
sub
jns
pop
cmps
loopne
mov
ficomp
gs
jb
add
mov
sar
mov
jbe
mov
add
push
out
neg
pop
mov
push
add
adc
fwait
sub
push
aaa
hlt
test
add
and
mov
cs
cmp
daa
int3
cs
mov
test
pop
or
mov
add
in
mov
int3
mov
adc
outs
les
arpl
push
je
jg
inc
xor
pop
dec
cmp
test
popa
jns
fs
push
jne
sar
dec
or
popa
popa
mov
mov
cwde
iret
loopne
smsw
inc
iret
sub
mov
pop
ficom
or
xor
mov
test
std
imul
sub
mov
lock
jle
mov
inc
inc
pop
sbb
fistp
pop
add
dec
jne
pop
clc
shr
daa
je
add
ret
cdq
push
add
add
aam
add
mov
(bad)
cld
icebp
pusha
xchg
arpl
test
mov
aaa
sub
sub
sub
shl
xchg
rcl
pop
mov
rol
inc
inc
push
adc
je
sbb
push
mov
bound
aad
in
mov
rol
not
cld
data16
cld
mov
xchg
inc
jo
xlat
xchg
test
xor
sub
mov
jmp
clc
jg
cmp
or
inc
test
cmp
jns
add
sar
push
out
mov
or
mov
jmp
or
add
pop
ins
inc
adc
lock
inc
or
cmp
fnstsw
fsub
jge
pop
sub
add
mov
add
mov
iret
add
ret
and
and
dec
and
add
xor
push
pusha
push
push
dec
shr
sbb
or
adc
inc
stc
out
fxch
lahf
pusha
xadd
sbb
add
sahf
mov
(bad)
popa
jmp
movs
sub
push
popa
add
rol
lar
aaa
jmp
sti
add
and
mov
mov
popw
jmp
ret
adc
pop
mov
addr16
mov
cmp
jecxz
bound
mov
xchg
in
sbb
and
adc
or
outs
push
and
inc
in
inc
imul
pop
cwde
pop
push
add
nop
out
xchg
(bad)
in
fdivr
xchg
jb
mov
mov
and
mov
push
sub
add
xchg
add
mov
xchg
add
pop
(bad)
adc
xor
sub
mov
mov
jl
add
mov
mov
adc
or
outs
pop
imul
and
jbe
mov
les
add
sbb
(bad)
sti
sub
add
xor
sub
jmp
data16
mov
sbb
mov
mov
jg
xor
loope
mov
jo
in
ins
adc
or
in
or
push
nop
push
or
lsl
pop
push
push
call
push
aas
call
xchg
cmp
jge
xor
popf
mov
dec
or
push
push
push
rcr
push
je
(bad)
imul
adc
js
jmp
test
les
jo
or
retf
lods
test
push
dec
sbb
jbe
xor
popf
js
cdq
dec
dec
dec
inc
mov
push
fild
lahf
mov
mov
mov
inc
pushf
fld
pop
mov
mov
fistp
adc
das
add
sub
pop
push
xchg
addr16
sub
pusha
cwde
out
test
inc
cs
cmps
cli
cmp
add
dec
cmp
rol
dec
dec
inc
xor
vsqrtss
push
xchg
mov
add
pop
add
pop
add
bound
adc
pusha
rcr
add
imul
aaa
cld
(bad)
inc
ins
add
outs
add
jno
jb
jae
je
jne
jbe
ja
add
jg
lock
xor
xor
add
loope
pop
inc
cmp
cmp
sub
das
pop
fisttp
mov
shr
fisttp
mov
ds
jo
mov
push
repz
in
(bad)
movs
movs
movs
movs
xor
mov
xchg
int3
loopne
rol
lea
mov
cmp
fidiv
test
add
add
and
or
mov
add
inc
inc
inc
fldenv
out
scas
or
lock
adc
mov
inc
je
push
push
gs
inc
push
nop
clc
in
(bad)
(bad)
cmp
ja
inc
jae
push
push
addr16
ins
or
inc
outs
push
gs
div
push
inc
popa
imul
arpl
outs
add
lods
mov
mov
push
je
mov
cmp
or
mov
push
mov
sbb
mov
mov
mov
push
mov
xor
dec
lea
add
fdiv
xchg
pop
ja
aaa
dec
push
add
pop
add
es
mov
clc
shl
push
je
jo
push
pushf
sbb
cs
inc
push
popa
shr
or
sub
loopne
lods
add
xor
(bad)
call
jl
wbinvd
add
inc
sbb
jle
add
jl
push
or
sbb
sbb
push
je
adc
bound
dec
es
push
inc
mov
jge
add
or
or
cmp
shl
daa
jmp
(bad)
rcl
add
and
adc
dec
mov
sbb
push
mov
sbb
xor
push
sti
xor
dec
push
push
and
inc
push
jb
xchg
je
scas
dec
dec
add
push
lahf
xor
adc
mov
sbb
and
daa
xchg
lock
hlt
inc
ins
imul
adc
enter
adc
and
cmc
push
push
push
xor
sbb
or
out
mov
test
call
or
leave
or
ror
fiadd
ins
push
inc
pop
pushf
mov
adc
or
jb
inc
gs
sub
jae
fdiv
jb
test
cmp
int
mov
rol
mov
pop
ror
out
sbb
shl
mov
adc
jg
or
(bad)
dec
xchg
cmp
int3
push
dec
push
push
push
stos
push
inc
pop
push
mov
(bad)
xor
jns
cmp
addr16
popa
(bad)
in
loopne
or
mov
xor
popa
rol
inc
lods
popa
ins
mov
lea
add
jbe
and
mov
xchg
adc
jne
add
xchg
pop
pop
and
dec
and
ins
stos
stc
test
push
mov
lods
adc
loope
outs
cdq
movs
sbb
pop
push
loopne
cmp
adc
or
sar
daa
mov
mov
xchg
popf
cmc
test
jge
and
adc
shl
fwait
je
xor
or
adc
test
in
pop
push
sti
(bad)
jle
in
mov
cwde
icebp
mul
or
(bad)
not
add
lock
lods
outs
pop
mov
or
mov
outs
cmp
push
inc
add
test
je
dec
pusha
push
jmp
push
pop
jmp
add
in
xor
push
test
mov
jne
mov
retf
mov
fwait
sbb
jecxz
xor
mov
and
adc
or
mov
jbe
pop
pop
outs
mov
aaa
jo
(bad)
nop
or
lock
add
lock
push
push
clc
pop
push
lods
fisttp
ins
add
std
add
es
test
jl
inc
ins
lea
fldln2
mov
das
loop
call
pop
pop
call
lahf
cmp
shl
in
mov
or
dec
jne
and
mov
cmc
inc
enter
fisub
test
out
cwde
jmp
loopne
fld
scas
ret
nop
pop
push
push
add
or
jb
or
push
addr16
add
mov
jb
jno
lea
(bad)
aam
xor
loop
xor
outs
push
fs
inc
mov
outs
rcl
pop
adc
bound
mov
sbb
mov
pop
iret
pop
add
xor
hlt
pop
mov
xlat
mov
pop
and
sbb
sbb
ds
icebp
sahf
and
shr
out
aad
dec
lea
std
dec
adc
mov
push
inc
int
in
pusha
in
mov
xor
fwait
lock
xchg
loopne
adc
retf
cmp
(bad)
push
pusha
aaa
out
adc
ja
mov
mov
arpl
(bad)
movs
in
mov
fld
test
xor
jns
outs
fdiv
pop
push
push
inc
jo
mov
pop
imul
out
inc
(bad)
loopne
or
sbb
jo
or
mov
mov
ds
push
outs
sbb
aaa
xchg
push
xor
inc
add
mov
mov
je
sbb
push
repnz
adc
mov
push
imul
call
adc
out
cld
lea
add
or
jmp
ret
jg
pushf
in
jnp
jne
out
in
inc
movs
mov
cs
cli
add
fdiv
mov
test
add
dec
cmp
pop
xchg
out
test
imul
ja
pop
xchg
ja
(bad)
xchg
ins
inc
xor
and
inc
xchg
lods
or
idiv
add
dec
inc
je
dec
addr16
jne
std
dec
js
mul
adc
mov
dec
sti
pop
ja
pop
mov
mov
sub
cmp
rcr
aam
add
dec
cs
mov
loope
inc
inc
aad
mov
push
xchg
aam
sbb
dec
sbb
cmp
cmovl
xor
sbb
cmp
sbb
(bad)
dec
data16
rsqrtps
push
dec
and
pop
sub
(bad)
or
ja
gs
cmp
cmp
inc
popa
arpl
int3
sub
or
call
dec
gs
add
add
loopne
inc
loop
sbb
(bad)
push
daa
pop
pusha
cmp
arpl
in
outs
inc
xlat
jnp
sub
jae
outs
jae
cmp
test
shl
hlt
aaa
shl
fsub
loopne
dec
popa
cs
addr16
ss
pop
push
push
addr16
xor
xchg
xor
js
iret
daa
cld
aaa
cmp
push
je
and
and
cmp
data16
dec
js
arpl
pushf
cwde
add
out
mov
pop
add
movs
xor
mov
popa
das
cmp
das
cmp
push
xchg
pop
leave
push
jbe
mov
xchg
jne
outs
ins
iret
js
push
pop
xor
pusha
icebp
dec
shl
inc
js
imul
data16
push
cmp
and
pusha
sahf
dec
pushf
imul
jns
push
and
ins
popa
push
sti
pop
jecxz
ins
jl
adc
push
xchg
pusha
int
test
cmp
movs
inc
ror
sub
cmps
scas
jmp
push
dec
add
push
loop
push
test
push
add
push
stos
loop
test
fwait
mov
enter
adc
outs
xor
xlat
(bad)
adc
out
repnz
mov
add
mov
or
imul
adc
stos
sbb
dec
or
pop
sub
cmp
mov
out
and
es
popf
jns
movs
mov
dec
push
push
push
xor
and
mov
add
push
adc
and
ret
scas
xchg
out
leave
ins
push
xchg
inc
retf
ss
inc
pusha
inc
or
in
out
pop
dec
in
mov
scas
adc
or
and
ja
inc
pop
mov
pop
mov
push
push
inc
test
adc
push
lock
inc
or
jge
cmp
xor
fnstcw
or
sub
adc
jae
test
inc
push
stos
stos
rcr
adc
(bad)
nop
(bad)
(bad)
sub
or
sbb
add
stos
and
pop
mov
retf
push
(bad)
jmp
jp
shl
xchg
mov
dec
loop
pop
dec
push
mov
dec
add
loope
sub
and
cwde
mov
mov
movs
push
cmp
jbe
cdq
cmp
cmp
pusha
out
scas
outs
inc
inc
adc
in
xchg
fs
iret
mov
pop
xchg
retf
xor
dec
adc
int3
cmp
adc
(bad)
in
mov
(bad)
mov
xor
repnz
xor
and
out
out
pop
jnp
int
xchg
and
mul
mov
and
lahf
aam
mov
and
xchg
mov
and
and
(bad)
pop
dec
loope
clc
or
test
icebp
push
add
push
mov
mov
mov
(bad)
adc
movs
sbb
cmps
andnps
add
sbb
mov
and
cmc
arpl
push
adc
shl
cmp
adc
push
pop
push
out
adc
and
or
bound
out
sbb
not
push
pop
sbb
mov
stos
xlat
add
cwde
je
add
pop
imul
mov
sub
ror
sub
popa
jbe
add
pop
inc
push
int3
test
add
jo
xor
push
add
jo
pop
mov
or
inc
gs
jne
test
adc
or
pop
push
inc
mov
or
cmps
push
pop
adc
into
pop
cmps
mov
ins
add
mov
jo
leave
cmp
sahf
push
sbb
or
lds
add
mov
dec
lds
adc
and
dec
fsubr
ret
add
mov
adc
imul
or
test
adc
pop
dec
xchg
pusha
cmp
arpl
adc
cmc
push
adc
adc
jmp
mov
or
in
or
add
(bad)
fdivp
cmp
xchg
jecxz
int3
inc
popa
pop
inc
or
sub
xchg
mov
or
cmp
xchg
xchg
ja
or
fwait
mov
in
mov
pop
sub
xchg
rcr
pop
jbe
add
sub
xlat
add
push
sub
jmp
pop
stos
pop
aam
movs
adc
daa
lock
add
cmp
fadd
cwde
pushf
dec
xor
call
mov
sub
and
inc
or
imul
inc
dec
push
fmul
pop
cmp
xor
jb
push
xchg
cmp
pop
test
inc
sub
cmp
jo
pop
mov
ins
fsubr
push
add
pop
inc
pusha
mov
fbld
pop
mov
mov
or
stos
and
add
(bad)
mov
add
out
add
sti
sbb
adc
add
jnp
cmp
stc
and
inc
add
add
push
and
push
test
(bad)
das
push
push
jl
ss
and
cmc
test
js
pop
sbb
pop
pusha
shr
add
inc
adc
adc
inc
add
push
push
inc
jmp
sub
inc
jl
jl
mov
and
or
subps
add
mul
mov
jmp
shl
push
add
out
and
xchg
push
inc
fs
mov
add
add
sub
sbb
dec
mov
mov
call
pop
js
inc
add
and
add
cs
add
ins
jne
jnp
or
mov
mov
cmp
mov
in
arpl
and
or
cmp
scas
add
jno
icebp
and
fadd
or
cmp
push
enter
push
push
add
(bad)
fcomp
or
in
cmp
push
add
jae
out
jmp
xchg
push
or
xchg
cwde
pushf
in
in
mov
out
in
mov
add
cmp
les
inc
inc
arpl
test
fild
and
jne
fdiv
popa
push
mov
inc
xor
add
add
push
js
xor
and
inc
inc
jb
and
rol
add
or
ret
into
push
aaa
xchg
aaa
inc
shl
or
sub
arpl
mov
enter
or
jne
or
lods
sub
pop
ss
ss
loop
and
jecxz
and
cmp
jecxz
shl
ret
xor
fiadd
imul
bnd
movs
jnp
push
cs
push
and
add
xchg
inc
cmp
loope
push
jns
hlt
cmp
inc
jne
cmc
daa
loope
or
or
adc
push
dec
rol
cmp
retf
out
rcl
mov
scas
inc
adc
out
arpl
adc
inc
inc
retf
dec
add
inc
adc
getsec
dec
out
pop
dec
outs
adc
push
and
jae
add
pop
push
pop
int
adc
push
ds
mov
sbb
push
out
lods
sbb
pushaw
out
enter
pop
cmp
inc
mov
scas
inc
cmp
sbb
rol
and
ja
inc
inc
mov
xor
push
in
inc
out
pop
inc
leave
lea
sbb
ins
pusha
out
add
pop
inc
push
rol
jae
imul
inc
inc
pop
inc
mov
inc
push
pop
push
xor
dec
push
push
and
daa
mul
daa
cmp
push
aas
and
daa
mov
pop
dec
mov
jnp
rol
sti
into
or
enter
retf
inc
ins
xchg
enter
(bad)
and
inc
imul
fdivr
(bad)
cmp
or
inc
jg
out
cmp
or
pop
cmp
(bad)
jne
mov
push
push
and
aas
push
cmc
add
div
adc
cmp
push
js
cs
adc
pop
xor
xchg
int3
lods
mov
pcmpeqw
sbb
or
das
retf
mov
jno
or
inc
stos
add
sar
and
aaa
xchg
push
jo
push
cmp
js
bound
and
add
loopne
add
push
xor
push
push
lods
scas
movaps
add
or
mov
ss
jno
push
pusha
dec
jno
mov
push
xchg
and
pop
pop
cmp
or
sub
pop
and
lods
loop
sub
push
adc
mov
ja
push
lods
or
or
ja
sub
hlt
mov
pop
jecxz
jmp
loop
imul
movs
ret
rol
xchg
pop
jnp
push
pop
loope
xor
popa
in
add
adc
fs
ss
(bad)
gs
imul
sar
adc
movs
daa
add
add
adc
push
fldenv
adc
xor
ins
adc
mov
loop
xchg
popa
ret
inc
jno
imul
pop
pop
adc
inc
jae
xor
std
xor
cmp
dec
cmps
pop
inc
push
fadd
or
imul
pop
mov
pop
push
cmp
popa
mov
aam
xor
aaa
ror
jp
ins
add
push
mov
xor
cs
aam
or
js
je
bound
inc
cmp
mov
add
add
jb
push
xchg
lock
push
push
test
je
add
call
clc
push
mov
mov
mov
xor
mov
push
pop
mov
mov
sbb
adc
aam
fidivr
mov
and
mov
mov
test
je
xor
(bad)
push
and
mov
dec
adc
and
in
and
push
cmp
loope
(bad)
out
jbe
clc
lock
mov
mov
mov
xor
mov
imul
add
and
mov
xor
(bad)
xor
mov
and
mov
adc
std
mov
mul
aaa
xchg
dec
pop
pop
fimul
clc
lahf
(bad)
mov
test
je
inc
sti
adc
(bad)
inc
or
sbb
cmp
sbb
pushf
xor
sbb
and
int
and
push
dec
sar
inc
or
xor
sbb
xor
cmp
cmp
call
inc
inc
je
imul
dec
dec
pop
and
lock
cmp
inc
pop
sub
push
fs
jo
je
popa
xchg
xor
(bad)
popf
or
mov
loope
mov
lea
unpcklps
rcr
aaa
setg
xor
xchg
jge
push
(bad)
jbe
or
fs
xor
xor
inc
inc
jle
jle
pushf
pusha
jo
ror
xor
adc
sub
loopne
and
sub
dec
std
cs
push
mov
mov
dec
jne
pop
adc
inc
lock
push
push
mov
dec
in
mov
mov
scas
inc
lock
rcr
jb
dec
loopne
pop
and
sbb
inc
fadd
cwde
inc
pop
inc
cmp
mov
and
cmp
and
inc
and
enter
inc
adc
and
fisttp
and
and
adc
pop
push
add
push
inc
enter
pop
dec
mov
mov
push
xchg
mov
or
mov
setge
mov
mov
xor
inc
push
inc
mov
pop
inc
and
sub
arpl
imul
cmp
test
cmp
lea
push
push
cld
mov
mov
xchg
dec
xor
mov
pop
nop
int3
sub
outs
aad
ficomp
pushf
xor
bound
fsub
and
dec
push
cmp
sub
ret
sub
or
mov
jnp
imul
in
je
sub
sbb
scas
(bad)
neg
pop
fwait
jmp
sbb
xchg
push
in
push
pop
dec
add
loope
pop
mov
inc
scas
sub
mov
inc
mov
xor
enter
push
in
loop
ja
mov
xor
or
mov
sbb
fistp
call
faddp
cmps
pusha
push
push
adc
ror
push
push
push
fs
xlat
ins
fcomp
outs
or
cmp
pop
sub
jmp
jmp
out
mov
sub
cli
test
fsub
daa
add
and
cmp
inc
mov
dec
dec
call
js
je
and
mov
and
push
mov
mov
retf
pop
sub
adc
mov
pop
ret
shl
inc
push
add
loopne
sbb
sub
pop
outs
push
jb
ins
dec
xor
addr16
pop
dec
aaa
add
enter
xchg
sbb
inc
lgs
ins
cmp
sahf
push
adc
lea
adc
dec
jae
push
jo
pop
ret
addr16
sbb
xchg
inc
push
addr16
adc
add
add
pop
dec
(bad)
or
in
mov
sub
sbb
adc
push
and
mov
and
dec
add
int3
pop
scas
adc
or
push
mov
cwde
pop
pop
stos
dec
push
inc
pop
das
pop
or
int
pop
add
pop
cmps
rol
xor
(bad)
pop
xchg
pushf
adc
xor
mov
adc
push
jbe
push
push
fdiv
add
test
mov
mov
pusha
mov
push
inc
cs
xlat
push
adc
popa
into
arpl
das
push
push
push
outs
mov
fdiv
adc
bound
or
xor
pop
cmp
push
add
inc
jbe
and
icebp
push
fidivr
push
adc
mov
sub
fisub
adc
dec
sub
push
push
and
repnz
push
mov
int3
je
in
sbb
and
repnz
movs
and
mov
or
jp
aas
adc
sub
sub
clc
js
cmp
jnp
in
pop
sub
and
push
add
sub
loopne
retf
xchg
mov
or
or
fcomp
fild
adc
out
loopne
jae
pop
add
nop
push
test
ins
(bad)
in
nop
clc
mov
push
repnz
jmp
pop
sub
jae
nop
xchg
mov
and
js
mov
data16
and
or
mov
dec
push
adc
das
lea
jae
(bad)
hlt
add
int3
mov
in
lock
and
ds
lock
pop
xchg
fwait
adc
xor
push
pop
in
mov
mov
fild
add
push
cmp
lock
ss
aaa
push
pop
push
adc
sbb
push
and
aaa
(bad)
pop
shr
inc
scas
or
mov
or
or
cmp
mov
add
jl
ret
ds
nop
or
outs
loope
mov
jle
test
mov
hlt
mov
repnz
hlt
mov
jo
and
mov
jmp
add
test
cmp
outs
push
mov
out
arpl
pop
enter
jp
(bad)
or
sbb
mov
mov
hlt
(bad)
inc
mov
loope
ins
fsub
dec
and
jp
unpcklps
jmp
sbb
and
je
sub
mov
xor
adc
jo
mov
push
iret
jne
arpl
mov
test
pop
mov
int3
movs
cmp
das
cmps
es
daa
and
or
bnd
in
mov
(bad)
add
scas
fild
mov
xchg
nop
ss
pop
jle
ror
jp
push
pop
jb
jnp
sub
aas
push
dec
add
dec
inc
cmp
call
add
adc
inc
pop
xor
fadd
pop
jbe
xor
ds
daa
cli
cwde
ret
mov
add
sbb
xor
mov
jae
pop
test
aaa
jmp
adc
dec
pcmpgtd
jmp
sub
ficom
call
and
or
sbb
push
fwait
(bad)
push
hlt
arpl
lods
lahf
push
pop
push
pop
leave
push
fwait
add
sub
addr16
push
jl
aam
jge
xor
rcl
or
movs
inc
movzx
mov
movs
lds
mov
push
ss
out
pop
cwde
push
adc
dec
dec
cld
mov
loope
cdq
jmp
in
jae
lock
push
cmp
in
push
xor
jecxz
jnp
adc
push
mov
jae
mov
push
dec
mov
sub
and
or
in
sub
mov
or
pushf
push
push
sbb
xlat
push
mov
bound
adc
(bad)
je
inc
xchg
sub
cwde
loopne
cmp
out
mov
not
fwait
loopne
add
aas
sbb
add
dec
js
ins
or
out
xchg
dec
fs
push
scas
fisubr
inc
outs
adc
jp
lds
jo
out
out
xor
or
pop
mov
mov
sub
cs
push
jbe
push
shl
js
mov
mov
(bad)
scas
ja
int
icebp
or
add
sbb
or
and
and
sbb
and
dec
adc
mov
sbb
in
retf
sbb
je
jnp
xchg
adc
jmp
jge
adc
(bad)
fdiv
pop
push
jb
mov
pop
test
data16
cmp
mov
out
addr16
jne
push
jae
or
sbb
sub
test
cld
jmp
imul
ds
hlt
cmp
ins
cmp
and
les
jnp
and
pop
push
movs
jae
lods
adc
and
outs
sbb
xor
loopne
lock
mov
lods
sbb
and
dec
mov
mov
sub
test
mov
outs
sbb
jp
aam
dec
cmps
add
in
mov
movs
pop
push
pusha
pop
push
xor
sub
sbb
inc
movs
mov
sub
jmp
adc
ins
cdq
and
or
inc
push
and
mov
jmp
mov
mov
mov
jns
xchg
jns
mov
ja
not
out
mov
mov
or
fmul
scas
mov
push
pop
sub
pop
mov
push
pusha
outs
pop
or
sahf
(bad)
sbb
push
push
rol
add
push
ror
adc
inc
mov
scas
pusha
jmp
and
or
jl
inc
xor
jmp
repnz
aad
jecxz
mov
rcr
cmp
xor
mov
cdq
shr
retf
inc
dec
jne
cmp
sbb
jo
push
jecxz
jo
xor
and
test
xchg
sub
pop
cmp
and
mov
hlt
sbb
sbb
mov
icebp
ret
aas
repnz
or
cmp
and
cld
jb
xchg
pop
jne
pop
ret
pushf
dec
push
fisttp
or
add
fimul
xor
xchg
aad
rcr
idiv
add
mov
cmp
sub
dec
test
jl
inc
xor
lea
sub
call
fwait
push
pop
inc
call
add
fcom
cmp
fldenv
scas
es
in
shl
pop
jmp
nop
or
xchg
test
test
inc
dec
jne
jmp
mov
push
test
nop
mul
stc
dec
and
xor
cli
pop
call
aam
sbb
or
cmp
push
jecxz
push
xchg
popa
adc
xchg
jbe
mov
movs
pop
mov
adc
push
jl
pop
sub
mov
cdq
jo
push
sub
dec
or
aad
das
and
ret
into
cmps
xor
aaa
mov
mov
int3
int3
xor
sbb
add
mov
pop
enter
and
dec
xchg
jnp
mov
lock
jne
in
jne
lds
clc
pop
mov
out
std
sahf
cld
lea
js
pusha
sbb
fistp
xor
clc
stos
cmp
mov
pop
add
enter
retf
cmp
mov
sbb
mov
mov
push
in
sahf
movs
cmp
mov
inc
loopne
fdivr
lock
add
(bad)
or
push
test
sub
fdiv
ret
sbb
jecxz
in
mov
call
xor
push
jecxz
mov
movs
les
inc
and
push
dec
imul
jg
or
dec
cmp
mov
out
cmp
mov
fild
add
mov
ins
das
mov
mov
aaa
test
add
xor
in
and
jg
or
pop
fst
push
push
pop
push
push
inc
lahf
mov
dec
xor
test
call
div
add
xor
and
xchg
push
fs
push
jae
dec
and
push
push
fs
xor
aas
xchg
int
shl
jmp
and
fmul
and
cwde
and
pop
and
xchg
and
jge
push
stc
movzx
or
jp
mov
xchg
mov
cmp
sub
push
sbb
mov
push
add
cmp
shr
sub
fild
inc
push
or
mov
popf
push
sbb
mov
jbe
movs
add
mov
cli
or
(bad)
loop
dec
sub
xchg
add
fldcw
xchg
inc
mov
inc
mov
pop
aas
cmp
jno
xor
cmp
cs
daa
cmp
test
fsubr
cmp
mov
loopne
inc
pop
daa
sub
add
mov
pop
mov
mov
outs
movs
shl
test
mov
push
cmp
arpl
mov
pop
int3
stc
dec
and
int3
push
fmul
mov
or
or
mov
push
pusha
dec
xor
cwde
(bad)
pusha
push
adc
dec
cmp
mov
mov
stos
dec
test
ror
add
pop
pop
pop
js
mov
cmp
popa
cmp
mov
pop
or
mov
xor
mov
test
daa
frstor
sbb
and
ficom
test
xor
(bad)
mov
shl
lahf
sti
rol
sbb
inc
xchg
pop
je
imul
pop
push
adc
iret
pop
inc
pop
push
lahf
call
dec
stos
(bad)
or
fisub
push
xchg
imul
push
mov
mov
dec
and
sub
out
(bad)
or
lea
inc
pop
mov
sbb
inc
lahf
inc
mov
cmp
mov
(bad)
enter
or
or
inc
dec
push
jo
bound
loope
les
sbb
dec
xor
lahf
push
lods
pop
pusha
adc
clc
movs
mov
sub
sub
add
or
mov
jl
jmp
fcomp
fisttp
push
lock
push
jecxz
rcr
cmp
add
cmp
xor
mov
call
pop
cmp
xor
hlt
xor
mov
mov
sar
jno
call
bnd
add
pop
popa
aas
aaa
out
adc
pusha
cmp
mov
(bad)
cmps
ins
adc
jmp
add
mov
mov
cmc
pop
scas
repz
retf
adc
or
out
mov
mov
add
or
idiv
sub
pop
push
and
aas
or
mov
mov
adc
scas
hlt
or
sar
loope
push
dec
push
mov
sahf
inc
loopne
inc
in
ss
sub
adc
in
push
loopne
mov
jge
mov
test
(bad)
mov
ins
sub
xchg
fadd
jp
aam
aam
mov
ins
cmp
sbb
in
(bad)
sbb
push
inc
mov
ds
cld
mov
mov
and
popa
fmul
mov
test
cld
dec
fcmovu
rcl
mov
dec
int3
mov
sbb
dec
setbe
xor
(bad)
sbb
xor
ja
mov
xchg
imul
and
pop
or
jmp
dec
sub
imul
inc
inc
pusha
leave
ror
pop
das
or
jmp
inc
mov
lock
mov
inc
dec
jp
sbb
scas
addr16
mov
push
and
push
ror
(bad)
sub
adc
mov
dec
outs
jecxz
sbb
rcr
idiv
push
pusha
outs
sti
out
das
xchg
das
test
mov
sbb
ret
cmp
dec
add
popf
pop
xor
adc
or
mov
popa
inc
xchg
out
xchg
and
xor
cmp
clc
test
jbe
or
mov
jl
jbe
clc
jb
imul
mov
(bad)
push
sub
mov
xlat
fst
daa
mov
iret
sar
add
push
movs
sbb
les
push
(bad)
add
or
lock
int
cmp
sbb
fcom
push
mov
jl
mov
test
outs
add
sbb
sbb
mov
movs
outs
adc
push
pusha
push
dec
add
popa
mov
add
sbb
add
gs
(bad)
jmp
cmovbe
jb
popa
je
gs
gs
jns
in
xchg
adc
mov
inc
and
je
arpl
test
mov
rcr
dec
add
sbb
push
call
pop
add
push
mov
ficom
fimul
xchg
pushf
movs
retf
cdq
jmp
adc
adc
shl
add
ss
ffreep
xchg
loopne
push
dec
adc
aad
inc
ins
gs
mov
sub
or
or
adc
loopne
mov
add
cmp
popa
add
push
inc
jb
or
mov
sahf
or
sub
or
ins
cwde
jl
mov
outs
outs
jne
lea
aad
mov
fst
pusha
out
or
sub
sbb
daa
rol
gs
jb
jns
pop
sbb
jg
(bad)
or
inc
outs
fs
sbb
sbb
imul
push
mov
test
push
xor
pop
jl
out
xchg
rsqrtps
jae
cmc
jle
xor
inc
jb
push
sub
rcr
or
rcl
jnp
mov
movs
sbb
mul
add
mov
aas
or
aaa
mov
mov
mov
mov
dec
mov
adc
(bad)
bound
in
pop
pop
and
aaa
fst
add
in
and
jnp
or
fnsetpm(287
fcmovb
cmp
xchg
cmps
les
sbb
mov
inc
sub
outs
pop
loopne
ret
push
or
lds
adc
push
or
ins
jo
pusha
mov
imul
or
test
xor
push
adc
outs
and
jae
inc
dec
ret
cmp
sbb
outs
push
mov
aaa
sub
sub
mov
cs
js
pop
sbb
pop
pusha
lahf
out
cmp
or
shl
out
imul
xor
(bad)
cmp
minps
cs
jmp
sub
test
push
addr16
and
popf
setbe
je
or
imul
inc
fs
push
push
mov
out
fistp
jo
out
inc
jb
pop
adc
out
inc
push
sub
mov
adc
add
pop
mov
xchg
push
dec
ja
xlat
rcl
imul
mov
xchg
add
(bad)
aas
jp
inc
sbb
enter
outs
pop
mov
movs
adc
add
adc
inc
lds
stos
fs
jb
add
ror
popf
dec
inc
mov
(bad)
inc
add
shr
adc
ins
imul
add
push
popa
ins
jne
outs
pop
pop
cmc
push
data16
inc
imul
add
or
mov
push
rcl
or
xor
iret
in
xor
cwde
pop
or
sbb
jp
aas
fsubr
(bad)
fsubr
push
jmp
lods
add
les
add
push
cmp
mov
inc
adc
and
and
add
adc
add
xlat
xor
pop
or
(bad)
je
xchg
fstp
dec
(bad)
mov
sbb
push
add
(bad)
push
popa
xchg
cmp
jbe
xor
lea
mov
inc
push
call
dec
or
and
inc
or
scas
rol
inc
xor
mov
movs
adc
sub
adc
inc
xchg
push
inc
adc
test
mov
add
inc
adc
shl
xchg
aaa
arpl
ffreep
mov
push
push
xor
inc
or
fmul
jmp
cmp
and
fwait
jno
aam
(bad)
dec
cmc
pusha
push
cmp
nop
add
or
ffree
(bad)
xor
sbb
xlat
cli
lock
xchg
lock
out
mov
pop
data16
pop
pushf
vdivsd
arpl
(bad)
dec
leave
pop
push
leave
iret
mov
(bad)
out
retf
loope
lock
inc
add
nop
mov
ins
and
lock
aad
or
ret
add
mov
jg
pushf
lods
je
mov
sub
mov
or
rcl
hlt
mov
popa
ja
iret
les
aaa
(bad)
dec
xchg
mov
test
xchg
add
cmp
xchg
ret
sub
xor
aaa
push
jb
loopne
lock
in
test
loopne
mov
retf
or
shr
pop
xlat
mov
xor
jb
into
xchg
(bad)
iret
outs
mov
xlat
xor
ss
jne
xchg
push
xchg
push
mov
or
dec
push
mov
ins
jb
js
xchg
arpl
mov
push
mov
or
cmovg
outs
inc
mov
scas
dec
rcl
or
arpl
sbb
inc
ret
push
mov
mov
push
fcomp
jnp
test
pop
test
dec
ret
push
ret
mov
scas
mov
add
outs
push
add
loopne
lds
mov
daa
movs
stos
jmp
push
push
push
xor
add
jmp
inc
(bad)
js
dec
test
jl
inc
xor
mov
arpl
outs
mov
xchg
xchg
jne
sub
mov
sub
inc
dec
jne
(bad)
movq
scas
add
jge
add
push
push
outs
pop
push
popw
imul
fild
loope
xor
push
sub
dec
les
jo
or
rol
int
xor
adc
xor
mov
aad
mov
adc
push
xlat
mov
dec
adc
push
or
fiadd
ins
adc
mov
xlat
bndldx
and
push
mov
jp
dec
mov
outs
mov
push
inc
inc
cmp
adc
fadd
fadd
aam
jnp
mov
push
sbb
ror
dec
icebp
add
in
pop
sub
mov
or
mov
cwde
push
das
sbb
ret
stos
iret
fadd
js
and
or
(bad)
fmul
inc
loope
(bad)
cmp
fbstp
test
inc
sar
enter
dec
(bad)
lock
push
test
adc
daa
push
add
mov
rol
std
dec
or
and
jae
popa
addr16
inc
je
lods
pop
fldenv
xchg
retf
loope
or
popa
inc
add
pop
out
ficomp
retf
mov
fwait
sbb
or
aaa
les
mov
ins
or
jl
and
push
inc
fs
add
lods
inc
mov
cmc
rcl
shr
add
and
loopne
fistp
fs
cmp
std
add
push
add
cmp
movs
add
or
(bad)
cmps
lahf
xor
stos
push
jns
and
push
imul
adc
inc
add
ror
mov
lock
into
ja
xor
pop
dec
and
test
xor
sub
or
int3
cli
cli
inc
pop
inc
mov
push
inc
mov
mov
dec
cmp
int3
bound
pop
and
and
dec
add
or
inc
dec
jne
jmp
add
mov
push
jle
fnsave
int3
push
add
inc
push
inc
rol
sbb
inc
mov
(bad)
xlat
inc
mov
or
push
(bad)
call
or
mov
mov
cmp
sete
popa
ret
adc
fstp
lock
inc
cmps
sbb
add
jp
out
dec
sbb
stos
inc
add
rol
inc
inc
mov
rol
add
inc
inc
(bad)
jp
jg
in
jg
inc
outs
or
add
add
sbb
push
in
lock
mov
rcl
rol
jo
xor
push
in
mov
jno
xor
pushf
inc
inc
cwde
sub
jmp
(bad)
into
cmp
pop
ss
test
jl
inc
(bad)
sub
pushf
call
fs
hlt
inc
lods
push
in
nop
jg
loop
add
fdivr
xchg
cmp
push
jne
add
pop
adc
or
inc
sub
inc
adc
stos
or
xchg
push
test
cmps
(bad)
mov
ror
push
sub
(bad)
mov
ds
adc
loop
jg
adc
es
adc
test
push
mov
js
or
(bad)
jle
dec
push
pop
mov
add
adc
jge
mov
ss
push
inc
adc
test
repz
pusha
push
push
dec
pop
add
shl
xor
xor
sub
cmp
(bad)
xor
scas
xor
mov
rcr
pop
inc
repz
lods
inc
int3
jbe
and
int
jo
arpl
dec
popa
add
in
jae
jb
add
outs
push
cli
jmp
inc
inc
or
dec
fs
gs
imul
(bad)
aas
hlt
jne
or
jns
push
or
push
cmp
xchg
in
cmc
or
retf
push
inc
jl
sbb
mulps
add
popa
sti
(bad)
push
inc
outs
jmp
inc
repnz
or
jmp
(bad)
nop
data16
movs
xlat
dec
mov
arpl
dec
fmul
xor
push
call
sbb
bound
sbb
dec
jb
pop
sub
push
xchg
push
push
push
push
test
fdiv
cmp
lods
push
add
fbld
jae
inc
cmp
sahf
jecxz
pop
pop
hlt
dec
or
push
fwait
bound
fidiv
cmp
sub
add
scas
mov
inc
scas
dec
push
adc
push
jecxz
call
sbb
pop
popa
cli
or
or
inc
pusha
out
mov
inc
lods
hlt
xor
sbb
les
mov
or
dec
cmc
pop
push
daa
push
sbb
jo
cmp
shl
cmp
pop
jl
pop
mov
adc
sbb
popf
or
cld
dec
push
mov
mov
sub
adc
mov
pop
mov
dec
xor
or
jne
cmp
ror
xchg
sub
dec
or
jbe
(bad)
jp
lock
pushf
or
ins
(bad)
and
(bad)
mov
sbb
add
ins
push
fild
inc
add
inc
inc
pop
adc
add
jge
adc
pop
xor
mov
loop
in
adc
pop
pop
or
push
fs
inc
js
aad
jmp
je
xor
std
(bad)
sub
xor
mov
cmp
inc
cmp
jg
popf
dec
or
aaa
jmp
daa
dec
add
sbb
pusha
pop
xchg
pop
ins
psrld
mov
dec
outs
je
outs
loop
push
inc
repnz
dec
outs
inc
jne
data16
out
cmp
inc
add
shr
add
pushf
fld
pop
sub
xor
inc
add
inc
push
outs
outs
dec
jne
jnp
push
ins
xchg
out
cmp
or
or
add
inc
push
gs
outs
jo
loopne
retf
cmc
or
inc
pop
mov
pop
push
dec
bound
sti
push
inc
xor
inc
pop
mov
xlat
pop
mov
mov
mov
jbe
cmp
ins
sub
in
shl
(bad)
push
sbb
or
adc
scas
push
push
clc
das
push
sbb
loop
add
sub
outs
pop
xchg
sub
fisttp
lds
cmp
adc
rcr
push
hlt
add
add
add
push
inc
sbb
mov
or
imul
inc
mov
inc
jb
ja
push
es
xor
or
gs
fs
dec
add
pusha
add
or
jl
bndldx
bound
add
inc
and
sahf
add
leave
leave
dec
adc
push
imul
cs
ins
push
mov
daa
and
push
sbb
enter
ror
pop
dec
fs
leave
mov
or
dec
xor
in
cwde
loope
and
(bad)
and
out
and
sahf
sub
clc
adc
add
cmps
or
xlat
es
call
push
dec
movs
sbb
ds
add
sbb
mov
mov
inc
add
adc
add
loop
or
inc
pop
add
cld
jns
and
jo
xor
pop
je
sub
pop
shl
dec
addr16
test
jge
sub
outs
ins
jo
cmc
adc
inc
inc
popa
outs
push
push
push
call
fst
ret
push
pop
add
dec
inc
js
retf
sbb
jo
sbb
sbb
xchg
std
lea
sti
add
mov
adc
push
stos
inc
mov
push
push
dec
leave
or
and
leave
push
or
pop
adc
mov
sbb
xor
mov
cmp
pop
mov
pop
sub
and
sbb
dec
retf
ds
push
push
jae
aam
push
retf
aaa
pop
dec
ins
mov
lds
in
push
add
xor
or
ins
push
shl
dec
in
add
sbb
in
dec
movs
push
push
(bad)
iret
add
dec
movs
jp
popa
lds
xor
or
ss
dec
cmps
add
je
clc
inc
xchg
jns
in
xor
jecxz
add
in
add
test
inc
cmps
sbb
and
xor
xor
adc
loope
dec
je
neg
out
lock
push
jbe
add
and
hlt
inc
adc
mov
or
add
xor
jle
das
push
inc
dec
xchg
gs
popa
xor
shl
(bad)
fisttp
nop
popa
jb
push
outs
xchg
dec
fisub
xchg
jae
cmps
cwde
pop
mov
bound
(bad)
int
mov
xlat
push
cdq
das
xchg
movs
retf
lods
cmc
sbb
add
mov
mov
push
gs
or
mov
loopne
adc
inc
mov
pop
imul
or
or
popa
outs
dec
push
add
pop
or
loope
inc
add
adc
sbb
and
out
fsub
loopne
scas
rcr
adc
out
test
pusha
xchg
imul
xor
jns
sti
rcl
data16
inc
(bad)
bound
aad
les
inc
ret
push
or
adc
inc
mov
imul
cmp
inc
mov
fcmovne
lea
and
inc
pusha
push
pop
dec
sti
xchg
lea
inc
push
(bad)
xchg
sub
mov
push
test
out
xchg
sbb
adc
mov
jnp
lea
sahf
cdq
mov
dec
push
dec
pop
js
fwait
jbe
sbb
ret
ret
pop
xor
xlat
sbb
pop
(bad)
dec
inc
popa
movs
xchg
jb
in
ins
jmp
sub
clc
inc
inc
test
push
mov
push
add
mov
aam
fdiv
pop
cmp
mov
inc
jae
rdpmc
lods
sub
fist
push
es
mov
mov
fsubr
fiadd
dec
and
fnstcw
mov
ror
sbb
mov
pop
je
shr
fs
mov
call
push
add
mov
jmp
shr
out
pop
mov
adc
sar
clc
mov
test
pop
(bad)
inc
sbb
dec
lds
hlt
push
lods
push
and
mov
fadd
jb
bound
sub
push
push
dec
lock
push
or
and
xor
pop
sub
outs
xchg
mov
bound
cmp
xchg
das
pop
repz
sub
push
push
push
lods
lea
mov
add
mov
cs
and
mov
jnp
add
mov
sub
pop
movs
push
rcl
sbb
and
mov
push
popa
rol
jg
cmp
shl
or
or
sbb
mov
(bad)
lock
fmul
sbb
into
xchg
stc
mov
jmp
add
clc
xor
test
jge
mov
mov
xor
lahf
jmp
push
inc
mov
adc
add
jle
lahf
add
adc
cmp
lahf
outs
enter
inc
mov
rol
sbb
add
cmps
pop
inc
test
outs
jl
add
popa
shl
call
dec
outs
mov
xor
hlt
in
retf
adc
sub
retf
ja
test
sbb
and
or
push
sbb
ret
add
aaa
sbb
clc
mov
dec
cmp
(bad)
fstp
mov
mov
cmp
jne
lods
mov
push
and
inc
xor
(bad)
dec
fadd
and
sbb
bound
sbb
adc
jae
shl
mov
rol
loop
add
pop
stos
sbb
mov
add
push
loope
int3
xor
sub
mov
adc
cmp
cs
retf
popa
push
fild
jbe
mov
lock
iret
jmp
xor
pop
or
jo
cmp
pushf
popa
cmp
push
cmp
sbb
jl
add
and
or
adc
adc
arpl
inc
mov
jo
fcmovbe
pusha
push
or
sbb
fadd
test
out
pop
mov
and
mov
push
xlat
lods
or
sbb
test
punpckhbw
sbb
fwait
mov
push
jmp
push
hlt
sbb
lock
(bad)
jmp
xchg
ret
lods
hlt
pop
mov
pop
shr
dec
imul
mov
jbe
adc
mov
sub
out
dec
pop
dec
add
aaa
cmp
mov
mov
add
sub
jp
add
out
jno
cmc
fwait
push
push
inc
jl
add
jmp
add
sub
rcl
fs
cmp
jle
cmps
cmp
cmp
mov
inc
sbb
push
sbb
clc
jmp
adc
icebp
mov
and
dec
rol
inc
inc
and
cmps
fnstcw
cmp
xor
and
inc
and
inc
xor
data16
sbb
cmps
pop
push
pop
ret
sub
cmp
lods
jge
mov
out
cmps
ss
mov
pop
ret
das
(bad)
xchg
push
not
push
rcl
idiv
sub
test
fsubr
aas
sub
shl
cli
and
call
enter
sub
(bad)
ret
push
and
pop
pop
and
pusha
add
outs
push
leave
fdiv
add
mov
sub
mov
not
adc
adc
adc
dec
and
sbb
cld
mov
shl
jne
pusha
enter
rcr
data16
ret
xchg
int3
cmps
dec
loop
bound
retf
mov
cmp
rcl
add
(bad)
fcom
sbb
pop
and
fadd
xchg
push
or
nop
inc
adc
mov
or
rcl
nop
cmp
into
aad
fiadd
jne
loopne
in
or
pusha
inc
sbb
jae
add
cmp
dec
sbb
sbb
pop
mov
xchg
inc
sub
cwde
push
cmp
add
mov
sub
sub
jl
add
in
inc
jmp
in
dec
test
jl
inc
pusha
lea
push
push
cmp
jge
mov
pop
add
mov
xor
sbb
add
out
push
je
push
add
add
dec
jne
scas
adc
call
mov
push
push
inc
dec
jne
jg
fdiv
cmp
call
pushf
into
das
or
or
les
jb
ret
or
pop
sar
fdivr
jle
test
jl
cmp
not
sub
neg
neg
fbstp
pop
dec
sub
jl
inc
mov
pop
aaa
sub
jne
shr
push
dec
cld
popa
cmp
(bad)
mov
adc
out
shl
push
nop
or
sbb
mov
pop
sbb
dec
sub
test
xchg
or
or
inc
cmp
retf
ret
js
jns
jp
js
and
loopne
inc
aad
inc
sti
pop
xor
(bad)
retf
aas
iret
jge
mov
mov
jmp
mul
inc
sbb
push
arpl
imul
adc
outs
add
sbb
imul
fisttp
jae
ins
sub
jb
xor
mov
ficom
push
outs
jp
add
xchg
pop
(bad)
xor
loop
jmp
inc
pop
rcr
and
ror
jnp
jne
call
idiv
data16
fadd
jae
mov
add
test
and
sbb
ret
add
or
and
add
or
inc
mov
sbb
jp
pop
push
push
imul
xchg
imul
or
mov
jmp
dec
add
(bad)
xchg
mov
push
push
inc
pop
cli
sbb
jge
xor
add
jle
xchg
push
xor
inc
add
call
and
mov
je
add
add
or
jb
inc
dec
test
xchg
adc
scas
fwait
or
and
cmps
add
add
add
int3
pop
dec
add
mov
xor
xor
faddp
call
loop
adc
pop
mov
js
js
cwde
(bad)
cdq
or
push
pop
xchg
mov
or
xor
or
xchg
mov
mov
in
xchg
and
mov
imul
or
or
out
std
pop
ret
(bad)
pop
js
push
(bad)
scas
test
push
and
adc
xlat
(bad)
dec
push
pop
sub
push
xchg
pusha
and
out
out
or
push
add
adc
scas
repz
sbb
scas
ja
add
inc
dec
inc
mov
mov
cmp
inc
mov
xchg
mov
aas
sub
pop
adc
rol
push
cmp
inc
sub
outs
or
fs
ja
xor
int3
push
mov
and
int
repnz
add
sbb
jne
xor
stos
lods
ret
sbb
loope
daa
into
or
xchg
mov
out
(bad)
(bad)
jo
fs
mov
push
pop
(bad)
dec
xor
push
push
shl
push
jnp
push
dec
or
sbb
test
stc
in
mov
das
xlat
add
leave
sbb
jge
rol
inc
jp
inc
nop
add
rcr
xchg
cmps
mov
dec
jle
stos
bound
jle
xchg
outs
enter
push
fmul
pop
or
(bad)
sub
in
dec
push
lock
movs
add
pop
pop
in
aad
add
sbb
loopne
bound
cmp
add
loope
int3
inc
jmp
mov
ret
jmp
loope
adc
jmp
mov
xor
aaa
adc
add
dec
dec
ror
test
add
(bad)
jb
gs
inc
imul
push
ret
outs
in
xchg
pusha
inc
push
or
xor
cmp
pop
dec
xor
or
dec
je
data16
jbe
and
push
inc
inc
outs
outs
outs
pusha
mov
or
test
cli
xchg
add
push
in
add
in
adc
mov
test
sbb
add
or
jecxz
jo
jmp
or
mov
jae
pop
dec
xor
in
dec
fistp
push
dec
cmp
sti
add
cmp
push
mov
scas
ds
dec
dec
test
dec
int
icebp
sbb
es
push
in
or
jge
adc
add
xchg
and
dec
pusha
push
push
neg
imul
pop
es
push
xor
xor
sub
cmp
cmp
imul
mov
sbb
les
pushf
lock
add
clc
sbb
dec
push
imul
inc
cmp
or
inc
push
sub
dec
sub
jae
ins
imul
sub
enter
jle
out
popa
je
and
outs
test
jae
or
xor
sub
pop
push
and
imul
pop
in
retf
repnz
loope
add
mov
adc
loope
stc
adc
(bad)
adc
pusha
sti
jo
add
xor
xor
and
scas
rcr
pop
loopne
enter
add
sub
jge
sbb
nop
sbb
and
mov
in
pop
push
jge
or
mov
into
imul
pop
fistp
mov
inc
sub
mov
add
rol
loop
add
adc
xor
pop
xor
pop
inc
inc
mov
mov
ja
pop
dec
adc
sar
pop
inc
loopne
nop
loop
add
cmc
sbb
lods
mov
push
or
or
mov
mov
pop
in
rcr
pop
xchg
xchg
outs
mov
or
int
pop
inc
add
out
xchg
inc
inc
jbe
dec
test
test
pop
push
or
pop
call
leave
jnp
jno
inc
iret
mov
inc
push
(bad)
and
jns
sbb
pop
push
in
das
xor
ins
inc
test
jo
call
push
push
jno
dec
(bad)
popa
test
sub
xor
mov
add
or
push
js
xchg
cmc
and
dec
test
jge
je
mov
test
je
cmp
jne
and
mov
add
scas
fwait
movs
mov
clc
adc
adc
ret
xchg
mov
in
js
add
xchg
mov
test
push
(bad)
jbe
ret
inc
or
mov
or
(bad)
push
cmp
inc
push
popa
popa
cld
adc
jns
push
pop
cmps
push
pop
mov
rol
inc
jne
sbb
popf
stos
jo
mov
and
and
inc
dec
add
test
add
pop
nop
setbe
std
test
or
dec
dec
popa
push
ins
pusha
mov
or
iret
pop
and
adc
add
or
leave
sub
dec
fs
cmp
sub
sub
dec
fcom
es
sub
jno
imul
dec
popa
jb
gs
sbb
mov
pop
or
inc
add
mov
push
lahf
xchg
and
dec
push
push
aaa
mov
push
outs
pop
push
outs
outs
pop
inc
test
pop
pop
popf
add
test
(bad)
aaa
mov
jae
jbe
sahf
xlat
nop
pop
lds
in
scas
add
inc
not
xlat
push
xchg
xor
push
repnz
pusha
inc
push
push
inc
test
neg
popa
or
shl
bound
xchg
lods
repz
rol
xor
jl
ins
ffreep
fs
test
jg
adc
rol
cs
test
pop
push
(bad)
fimul
sbb
pop
push
jl
cli
pop
sti
sahf
aam
push
dec
ss
jle
gs
ins
pop
sti
sbb
push
nop
imul
push
sub
mov
mov
sar
jae
ja
xchg
lock
mov
hlt
dec
ror
or
clc
mov
ror
fdivr
push
adc
pop
ror
sbb
inc
loopne
mov
xor
jae
inc
jb
arpl
jne
ins
jns
inc
outs
loop
cmp
lds
outs
jne
pop
fmul
mul
sahf
or
loope
mov
add
cmp
inc
dec
pushf
push
inc
test
sbb
outs
jo
or
inc
aaa
sbb
dec
jecxz
sbb
dec
popa
js
je
dec
fs
js
cwde
pop
push
add
sbb
sub
sub
push
or
xchg
int3
sbb
mov
es
pop
mov
fcomp
inc
push
outs
jb
(bad)
fsubr
push
dec
outs
push
jo
imul
vcomiss
fs
call
xor
test
arpl
cmp
sub
xor
or
mov
inc
fsubr
adc
scas
push
xchg
int
inc
and
or
(bad)
jp
ror
test
or
dec
and
hlt
mov
shr
(bad)
call
push
retf
add
das
and
sahf
(bad)
add
and
add
inc
(bad)
push
dec
jbe
(bad)
cmps
(bad)
sub
mov
es
pop
pop
(bad)
outs
aaa
mov
push
daa
add
sub
das
stos
out
jbe
dec
aas
imul
movntps
in
popf
mov
push
lahf
por
xor
xor
rol
mov
cmp
dec
xchg
mov
hlt
(bad)
sub
add
cmovbe
mov
aas
loop
pop
push
in
mov
push
mov
push
outs
xor
out
out
lods
mov
cmova
add
push
sub
cdq
in
pop
sub
scas
cs
push
mov
int
scas
paddsw
pushf
pushf
lods
call
dec
dec
dec
call
daa
daa
mov
out
xor
ss
pop
dec
mul
mov
aas
xor
(bad)
add
add
jbe
stos
cmp
pop
pop
cmp
push
cmp
pop
mov
loop
pop
add
jbe
push
stos
pop
mov
data16
push
sbb
push
loopne
xor
(bad)
dec
mov
push
jnp
shl
outs
fidivr
mov
lahf
jo
or
call
mov
fcomp
fst
sbb
gs
js
cmp
data16
dec
mov
or
stos
inc
add
adc
pop
ret
adc
cmp
or
nop
xchg
add
ins
push
mov
lods
loop
inc
fwait
rol
push
add
inc
add
pop
mov
mov
loopne
mov
dec
dec
pop
jge
mov
xor
imul
or
je
push
xor
push
push
push
inc
dec
ja
repnz
sub
or
ss
lods
je
aaa
rol
popa
cmp
jns
mov
inc
jo
mov
lahf
push
push
outs
adc
jb
movs
sub
inc
icebp
adc
gs
fsub
add
cmps
lea
ss
sar
nop
mov
add
mov
push
cmp
inc
mov
je
dec
ret
or
retf
sbb
adc
inc
xor
sub
xor
movs
out
xchg
outs
arpl
imul
adc
mov
shl
add
push
and
das
xor
jo
dec
add
lock
add
sbb
in
or
add
cmp
pop
mov
and
retf
and
pop
xor
or
xor
sub
jns
and
ror
sbb
daa
cmp
and
or
popa
bound
add
push
arpl
xor
fistp
adc
and
mov
out
add
js
jmp
ins
(bad)
jnp
jae
push
jae
outs
cmp
or
adc
sar
push
add
loopne
and
(bad)
adc
js
mov
adc
jl
inc
lds
add
sub
retf
or
dec
mul
add
int
add
xchg
pop
nop
nop
mov
mov
push
push
sub
xor
sub
push
xchg
pop
cwde
addr16
mov
push
sbb
lea
xlat
lea
sbb
pop
lea
xchg
lea
sar
adc
ss
lea
jo
add
cmp
gs
call
mov
inc
adc
pusha
xchg
or
xor
shl
loopne
mov
cmp
mov
push
inc
add
fs
int3
outs
retf
xlat
inc
inc
push
test
popa
inc
imul
pop
shr
adc
data16
push
jb
outs
jae
cmp
or
push
adc
add
inc
cmp
mov
add
mov
xchg
mov
or
add
rdpmc
aaa
or
adc
add
arpl
push
adc
and
add
and
ins
push
pusha
cmc
popa
inc
pusha
cmp
int3
and
dec
pop
mov
shl
sub
add
aad
test
scas
in
push
adc
jnp
(bad)
cdq
cs
add
sbb
imul
(bad)
inc
push
jae
inc
cwde
fs
je
jo
pushf
into
and
adc
(bad)
adc
pop
ret
dec
push
cmc
and
inc
in
or
addr16
sbb
mov
lods
loope
ret
lods
push
enter
aam
cdq
(bad)
mov
(bad)
bound
xor
push
or
cs
in
xchg
jecxz
sbb
and
loop
add
dec
in
int
rol
add
mov
sar
pop
add
inc
sub
sbb
sbb
mov
xchg
sbb
pop
sub
xchg
jno
lods
adc
pop
add
add
test
push
inc
ins
adc
lds
pop
in
add
or
xor
mov
cmovno
cmc
std
rol
or
popa
inc
lock
test
sar
jb
mov
inc
ins
xor
clc
inc
ror
add
(bad)
retf
pop
int3
sub
int
inc
or
sbb
mov
ret
lock
sub
dec
or
inc
push
dec
mov
fsub
fadd
sub
es
jl
dec
fnstsw
int
mov
adc
in
retf
pop
jo
inc
sbb
ret
cmp
mov
mov
ret
mov
xchg
and
(bad)
mul
or
je
push
ja
fiadd
not
ja
shl
add
xchg
xor
je
jne
mov
jno
mov
ja
pop
jo
xor
push
ins
and
jne
cld
je
lahf
jo
in
ja
ja
das
ds
or
ins
popa
ins
ins
jle
cmps
sub
iret
cmp
into
push
cmps
inc
aas
dec
push
xchg
retf
retf
xor
or
sub
in
iret
push
add
jns
repnz
lods
sbb
addr16
or
bound
or
sub
sbb
ror
ins
iret
jge
and
add
hlt
scas
imul
test
std
fiadd
adc
rcl
push
add
cmp
ret
jecxz
mov
lea
push
les
cmp
push
cmp
lods
and
out
popa
ins
dec
ins
pushf
adc
fcom
ds
movs
add
stos
lods
pop
sub
pop
inc
add
push
and
pop
inc
inc
ret
mov
pop
pop
add
push
fld
xchg
dec
pusha
mov
or
(bad)
or
jo
adc
popf
push
cmps
mov
sbb
(bad)
in
adc
clc
ror
imul
in
es
arpl
bound
xor
xor
xchg
inc
imul
(bad)
cs
sub
scas
inc
jae
or
push
inc
mov
adc
add
icebp
popa
ficomp
mov
pop
push
cmp
loopne
fadd
mul
xor
cs
lock
sbb
adc
push
(bad)
push
or
cmp
add
sti
mov
xlat
or
inc
inc
and
push
inc
stos
lock
test
rcr
ud0
xchg
pop
dec
sbb
shl
push
xor
mov
movs
add
or
xor
cmp
add
add
jns
xor
inc
push
push
data16
adc
mov
pop
mov
cmps
or
mov
sbb
mov
das
and
sbb
pop
add
bound
jmp
pop
xor
xor
jae
mov
enter
push
sub
cmp
dec
mov
push
sbb
mov
pusha
jo
sbb
cmp
adc
mov
xchg
arpl
push
jae
sub
pop
dec
or
jmp
sub
xor
inc
add
inc
jo
inc
pop
out
inc
mov
ret
xchg
dec
int3
xor
xchg
push
popa
add
popa
mov
push
clc
es
cmp
fst
push
jno
scas
aad
lahf
fld
sbb
cmc
and
fdiv
adc
pop
adc
mov
fmul
pop
xchg
fdiv
imul
inc
push
cmp
cs
mov
jns
inc
call
outs
js
test
sar
shr
adc
dec
jg
mov
push
mov
xor
push
push
xor
mov
mov
call
shl
call
xor
pop
pop
pop
xor
dec
clc
out
adc
dec
cmp
or
cmp
sub
jmp
jecxz
pop
ret
push
push
loope
std
inc
add
mov
mov
mov
inc
nop
lea
repnz
mov
adc
xor
mov
dec
outs
mov
std
xchg
fimul
pop
ss
(bad)
data16
data16
mov
and
mov
loop
test
jle
(bad)
jle
mov
pop
pop
pop
pop
ret
mov
xchg
sbb
pop
or
sub
data16
test
pusha
and
inc
inc
add
outs
lock
push
cmp
jne
cmp
fisttp
cmp
shl
cmp
je
cmp
pop
mov
or
sar
or
mov
sbb
je
and
or
sbb
mov
in
shl
push
mov
push
xor
jle
outs
jp
cmp
ins
(bad)
test
and
hlt
adc
xor
cmp
das
fistp
dec
sub
fdiv
das
lock
out
sub
retf
mov
sub
js
(bad)
lods
loopne
stos
adc
mov
jle
add
pop
mov
call
add
(bad)
pushw
outs
pop
add
sbb
add
mov
repnz
xchg
cmp
and
mov
ss
test
jne
lea
push
cld
out
shr
fs
hlt
mov
push
hlt
push
mov
xor
mov
iret
les
fmulp
hlt
sbb
sub
sbb
xchg
mov
test
or
fst
mov
mov
clc
xor
test
in
or
je
loope
(bad)
pop
mov
dec
cmp
jl
mov
cld
popf
jae
test
sub
lds
jne
out
adc
(bad)
mov
sub
xchg
sub
das
adc
mov
jg
rcr
call
xchg
ret
ret
push
jmp
mov
adc
clc
sbb
bound
jge
inc
jg
loope
xchg
adc
pop
test
loope
jb
sub
mov
xor
and
or
ins
inc
jmp
cmp
sbb
cmps
movs
shr
mov
cmc
jmp
cmp
jle
push
push
jl
retf
add
fistp
shl
leave
call
call
out
scas
jle
adc
(bad)
mov
sub
cmp
push
jle
nop
stos
rcr
ret
mov
rcr
loopne
mov
(bad)
pop
aas
aaa
add
shl
ret
pop
popf
pop
xchg
sub
adc
xchg
pop
fst
out
clc
push
mov
and
dec
and
mov
cmc
and
sub
mov
cmps
or
pop
sbb
inc
hlt
cdq
adc
call
test
cdq
mov
cdq
les
and
(bad)
xlat
xlat
xor
and
inc
in
pop
mov
pushf
outs
sub
adc
or
xor
mov
cwde
push
adc
inc
or
mov
xchg
xchg
add
mov
mov
push
cmp
stos
call
leave
je
mov
or
dec
cmp
jnp
xor
(bad)
mov
xor
add
xor
nop
add
sbb
adc
dec
mov
sub
cmps
add
cwde
push
add
les
or
or
mov
out
stos
push
xor
mov
or
sub
mov
or
retf
sub
cwde
aaa
or
sbb
out
ret
jns
enter
jg
scas
push
pusha
xchg
adc
push
xor
or
test
xor
jl
add
add
add
fmul
push
mov
les
xchg
inc
cmp
inc
xor
push
lock
push
and
fldenv
aaa
push
dec
dec
lock
das
xchg
jg
and
ins
xor
mov
cmp
je
loope
clc
and
xchg
jno
(bad)
mov
fld
mov
shl
daa
fdivr
push
inc
dec
fstp
xor
in
in
or
call
lock
sbb
sbb
sbb
add
iret
or
sysret
shl
jmp
jmp
(bad)
sar
js
int3
pop
mov
xor
lea
push
popa
inc
xor
or
add
inc
pop
cmp
outs
loopne
ins
add
ja
inc
push
xor
adc
je
test
stc
daa
pop
mov
add
test
test
add
sub
sbb
jle
in
into
es
(bad)
into
jo
mov
or
hlt
and
or
into
pop
cld
adc
les
mov
inc
mov
pop
enter
icebp
aad
xchg
mov
mov
retf
aas
add
or
outs
mov
mov
mov
xchg
inc
push
and
inc
fwait
out
add
cli
inc
je
or
int3
and
sbb
bound
pushf
add
nop
addr16
add
or
addr16
inc
add
loopne
jge
mov
cld
mov
loopne
add
sbb
push
pop
jne
mov
xor
sbb
mov
mov
xor
inc
mov
adc
lock
or
cwde
push
mov
pop
adc
pop
adc
pop
test
add
pop
adc
pushf
in
adc
pusha
add
in
nop
sub
or
add
push
cmp
xchg
in
cmp
arpl
ret
pop
ins
sub
or
lock
xchg
fnclex
add
add
pusha
hlt
pop
iret
cmc
outs
jle
push
bound
aas
dec
je
push
sbb
mov
and
ret
dec
push
sub
inc
push
pop
mov
loope
jg
mov
dec
test
jl
inc
xor
hlt
sbb
lock
inc
dec
jne
inc
jg
jp
dec
call
int
or
sbb
les
sbb
xor
aad
or
mov
ret
mov
pop
sub
xor
popa
xchg
xchg
cdq
mul
xchg
bound
mov
enter
bound
mov
adc
or
pusha
pop
(bad)
mov
nop
add
and
jo
push
cmp
pop
add
and
or
mov
hlt
pop
imul
add
cmc
pop
cmp
or
ret
lods
in
push
or
in
in
mov
inc
in
inc
push
mov
vlddqu
jp
aas
rol
and
aas
cmp
sub
push
loope
mov
xor
out
sub
xchg
js
nop
pmulhuw
sbb
pop
loopne
push
dec
icebp
pop
retf
loope
adc
outs
sbb
dec
sbb
mov
sti
les
mov
mov
and
ficomp
mov
add
in
push
div
and
adc
icebp
adc
or
mov
push
xchg
sbb
lea
ss
or
out
fild
xor
fadd
cli
sbb
sbb
adc
pop
or
ret
and
imul
jmp
jge
add
mov
rcr
cld
add
adc
jo
adc
jnp
int3
(bad)
adc
xor
test
add
mov
fisubr
jno
loopne
dec
mov
test
jle
cmp
jle
outs
pop
add
scas
pusha
sbb
dec
std
aam
data16
call
fimul
sub
scas
jge
xchg
pop
and
jne
jg
cmp
dec
outs
cmp
sub
mov
outs
xchg
fidiv
sbb
and
and
xor
push
stos
adc
adc
jp
test
mov
(bad)
and
mov
dec
push
jbe
sete
mov
push
add
add
in
loopne
js
lock
pop
std
add
or
shl
mov
jmp
(bad)
jle
or
jbe
or
je
and
ret
mov
adc
sub
scas
adc
inc
xor
cmp
jne
dec
pop
call
dec
(bad)
sub
je
fsubr
(bad)
or
pop
rcr
ret
fistp
sbb
jg
les
(bad)
cmps
jae
je
arpl
stos
push
jmp
sbb
ret
mov
inc
retf
stos
arpl
or
ss
movs
out
pop
test
dec
mov
push
pop
inc
jo
xchg
ret
jbe
push
mov
sbb
shl
bound
xchg
dec
sahf
add
and
mov
test
ficom
inc
push
(bad)
sbb
or
sub
adc
jnp
dec
mov
pop
xchg
cmp
mov
pop
push
add
pop
stos
sbb
shr
(bad)
adc
ja
and
inc
mov
sbb
pop
add
jno
movs
das
adc
jecxz
mov
and
pusha
mov
ss
iret
add
and
jne
arpl
or
sub
or
test
scas
scas
pop
pop
call
jae
mov
sub
cwde
lock
xlat
lock
lods
pop
cli
(bad)
out
or
push
or
hlt
jb
jge
cs
xor
mov
shr
outs
int
adc
pop
jmp
adc
cmp
and
dec
xor
ficom
call
shl
nop
mov
and
mov
movs
push
in
push
out
js
and
adc
mov
inc
test
pop
sbb
cmp
aaa
push
popa
clc
push
inc
movs
aaa
dec
jne
push
xchg
nop
sbb
mov
hlt
das
push
jnp
mov
jae
outs
xchg
fnsave
call
(bad)
int3
xor
mov
add
xor
xor
outs
js
into
add
mov
mov
je
stos
rcr
xor
mov
and
mov
lods
push
jmp
mov
pop
xor
lods
inc
popa
stos
jecxz
pop
xor
(bad)
push
ins
add
sbb
in
add
sub
lock
pop
jne
xor
add
(bad)
pop
inc
xor
(bad)
test
sub
rol
dec
pmaxub
out
jmp
push
or
sbb
cmp
ror
push
or
inc
jns
out
ret
mov
sti
dec
daa
cmp
lods
add
xchg
je
(bad)
jmp
add
ss
rcr
push
stos
pop
adc
mov
shl
(bad)
mov
mov
jne
mov
mov
or
mov
dec
and
and
xchg
cmp
jmp
test
std
fs
icebp
or
loopne
fdiv
dec
fadd
cmc
pop
inc
pop
push
(bad)
pop
sbb
mov
call
xor
jecxz
xor
iret
rcl
fnsave
sub
add
push
int3
jmp
add
mov
add
and
adc
ja
ins
(bad)
jg
fucomi
add
nop
pop
scas
loopne
xor
jle
loopne
in
cmps
hlt
adc
jge
inc
fdiv
cwde
mov
xor
xor
test
and
or
je
mov
add
sub
sbb
mov
add
dec
lods
stos
sbb
jne
pop
out
call
jo
cmps
iret
push
retf
mov
sbb
std
test
lock
pop
jl
cmp
or
inc
jg
push
adc
retf
jl
lock
ds
push
call
fs
push
xor
mov
sbb
add
call
jne
imul
ss
pusha
enter
aam
shl
xchg
sahf
ret
out
outs
jbe
inc
aaa
imul
sub
jg
jecxz
hlt
sbb
xor
jno
and
dec
test
or
jbe
cmp
loopne
push
in
ja
jmp
jg
and
sbb
jbe
imul
sbb
cdq
adc
push
add
inc
loopne
pop
mov
(bad)
jg
movs
(bad)
or
icebp
cli
push
jmp
push
push
mov
jbe
jle
push
cmp
jle
addr16
test
push
xor
lock
sbb
int3
retf
mov
cmp
jge
cli
mov
stos
lea
shl
pusha
(bad)
jo
inc
call
cmp
mov
cmp
sub
loopne
and
inc
xchg
push
sbb
outs
push
xor
das
jg
clc
mov
pop
cmp
sbb
mov
jnp
shl
inc
adc
mov
clc
adc
push
outs
or
mov
movzx
jb
mov
ret
loope
jg
and
sub
sbb
loopne
push
add
and
adc
js
pusha
mov
jp
lea
in
iret
mov
scas
mov
or
xchg
rcr
or
jbe
cdq
loopne
rol
imul
add
mov
push
cmc
fld
push
adc
sub
add
mov
fdiv
inc
cli
sub
lods
push
das
mov
or
test
loop
dec
repz
ficom
jbe
test
adc
sbb
xor
sub
mov
jmp
and
cdq
and
add
adc
or
nop
sbb
push
add
xchg
loopne
jbe
ins
pop
shl
push
sbb
fdivr
imul
inc
(bad)
sbb
loopne
les
mov
add
aas
lds
add
dec
add
adc
cmps
and
pop
xlat
jbe
pusha
cmp
jle
or
mov
adc
pusha
mov
jmp
jl
in
inc
jno
out
sbb
jo
cmp
fwait
dec
pop
lock
dec
xchg
pusha
jmp
push
jmp
adc
loopne
loopne
int
scas
jae
and
out
and
mov
adc
sub
dec
mul
imul
sub
add
mov
pushf
mov
sbb
or
xor
in
push
jecxz
shr
inc
imul
scas
sbb
fmul
aam
sbb
jecxz
enter
aam
mov
test
test
fiadd
adc
shr
mov
adc
jb
aad
pop
and
test
or
pop
jmp
mov
pop
loopne
addr16
mov
add
add
dec
mov
ins
sub
test
xchg
inc
adc
cmp
mov
dec
jb
cmp
mov
add
sub
or
outs
shufps
pop
ror
mov
mov
cmp
pop
pop
jae
sbb
jge
pop
push
popa
popa
xor
xchg
lds
jge
aam
rcl
push
(bad)
push
movs
(bad)
jmp
cmps
pop
cmps
add
mov
test
int
and
xchg
adc
mov
push
xor
(bad)
push
push
push
lods
cmp
lods
jae
(bad)
out
imul
setl
mov
pop
jl
jno
scas
retf
out
ret
enter
xor
retf
xor
ss
add
jmp
jl
xor
and
dec
jge
(bad)
jl
sbb
pushf
mov
jb
add
push
sbb
inc
gs
call
pop
adc
imul
dec
jb
inc
push
mov
xchg
inc
imul
aaa
retf
stos
ret
push
adc
std
adc
cmovno
jmp
jmp
fnsave
jb
or
sbb
adc
aaa
jmp
retf
xor
or
or
sbb
mul
cwde
xchg
xor
cmps
adc
shl
call
cdq
callw
test
xchg
mov
adc
and
out
stc
or
cs
sbb
push
push
push
mov
cmp
scas
mov
enter
mov
and
shl
or
in
(bad)
and
repz
and
sub
xor
xchg
pushf
xchg
popa
lods
sar
out
mov
cmp
fwait
cmp
loopne
mov
or
sub
add
push
rcl
xor
lds
jbe
mov
std
cmp
jmp
dec
or
or
std
and
dec
xchg
jne
sub
mov
mov
gs
cmp
mov
ror
mov
xchg
add
cmp
loopne
mov
cmp
adc
cmp
and
inc
imul
push
sbb
clc
dec
aas
in
(bad)
gs
fucomip
xor
pop
adc
mov
ins
inc
fiadd
xor
je
xchg
or
or
adc
cmp
pop
data16
or
or
inc
jns
xor
push
and
fmul
jae
push
bound
cld
into
je
mov
cmp
ins
inc
adc
inc
pop
push
mov
punpcklwd
adc
imul
hlt
hlt
popa
lods
in
jmp
pop
dec
inc
dec
sub
fnstcw
cmc
cdq
or
ds
loopne
mov
and
dec
or
mov
mov
ja
jae
xchg
aas
inc
sbb
not
push
imul
movs
jmp
add
push
xchg
int3
pop
inc
mov
pushf
or
outs
test
fisubr
sbb
push
add
push
jg
bswap
movzx
add
cmp
ja
jg
retf
jmp
add
repz
hlt
add
pop
mov
push
pop
test
jle
clc
sbb
dec
jno
pushf
test
dec
loope
dec
or
or
or
enter
cmp
cmp
jmp
add
loopne
js
ror
ss
ret
(bad)
mov
xor
or
sbb
xchg
mov
rcr
mov
jg
call
cdq
add
add
popa
pusha
cmp
push
lock
in
ret
jecxz
mov
xor
sbb
sbb
xchg
pop
xchg
repnz
dec
or
rol
dec
xchg
scas
inc
int3
adc
aaa
fadd
out
xchg
and
mov
mov
push
je
outs
fisub
sbb
sub
and
add
sub
stos
add
movs
or
sub
mov
(bad)
ror
lock
add
mov
push
repnz
sub
mov
jo
add
imul
cmp
retf
sub
sbb
mov
push
fadd
out
push
jl
jle
hlt
sbb
pop
shl
push
aas
les
into
jge
sbb
jle
sbb
jmp
sub
mov
sub
clc
mov
mov
cmp
ret
je
je
adc
fisttp
pop
cmp
xor
xchg
cmc
push
and
ror
pop
jge
xor
add
sbb
xchg
or
mov
ret
push
and
bound
int
push
icebp
add
and
inc
sbb
ret
push
movs
loope
scas
out
je
sub
bnd
jmp
mov
jo
dec
ja
in
add
(bad)
retf
push
cmps
loop
imul
pop
xchg
cmps
add
iret
ins
push
pop
fnstsw
loope
fst
or
sbb
jb
mov
push
mov
movnti
popf
push
cmps
inc
cmps
and
retf
rcr
lahf
or
mov
sbb
sub
push
adc
sub
adc
cmp
mov
inc
lahf
pop
xchg
and
stos
fstp
and
jle
cdq
adc
xchg
adc
sbb
add
cmp
gs
or
fistp
adc
and
mov
pop
loopne
shr
push
or
enter
jmp
in
push
push
and
imul
cmps
jbe
sbb
cmp
jl
test
sub
repnz
ins
add
or
cmp
fist
daa
neg
push
mov
enter
inc
xor
and
sub
sub
add
pop
mov
test
push
inc
xor
out
add
sub
call
sbb
test
out
xlat
jne
mov
cs
add
loop
sub
cmc
iret
test
add
add
push
loope
push
fstp
add
or
out
in
fimul
push
jns
shr
jae
int
or
int3
scas
add
lock
and
mov
js
sbb
fdivr
jbe
mov
(bad)
and
lock
add
jl
mov
push
lock
sbb
test
retf
mov
push
and
mov
loopne
cmp
(bad)
xchg
dec
imul
xchg
inc
in
out
sbb
xor
or
and
outs
mov
add
int3
loope
inc
dec
test
imul
add
cmp
push
aas
ret
cmp
les
mov
inc
push
xchg
(bad)
mov
into
push
(bad)
(bad)
popa
push
pop
fs
xchg
out
and
ins
mov
adc
mov
adc
add
mov
adc
add
add
add
push
push
push
cli
aam
clc
sbb
lock
jecxz
mov
imul
and
(bad)
push
stos
cmps
mov
add
call
in
call
out
pop
fcomp
sub
rcr
cwde
jo
mov
in
push
add
movs
sbb
push
sub
xor
inc
and
ret
sub
dec
pop
jnp
out
aas
jmp
mov
mov
dec
sbb
jmp
sbb
xor
mov
aaa
sbb
add
cmp
mov
mov
xor
sbb
dec
jl
lea
xor
jne
pop
mov
jo
mov
mov
adc
or
(bad)
mov
pop
(bad)
je
jmp
sub
test
xor
scas
inc
adc
ja
or
adc
xchg
sbb
push
lods
mov
adc
stc
cwde
push
cmp
jmp
add
pop
cmp
sar
sbb
repz
cmps
mov
int
mov
cs
and
push
sub
push
lock
and
sbb
ins
aaa
cmp
inc
add
adc
mov
loop
add
push
(bad)
mov
ret
ss
sbb
add
inc
int3
adc
iret
(bad)
jg
stos
push
inc
inc
ins
imul
je
imul
jae
xor
jo
xlat
in
(bad)
xchg
out
inc
dec
popa
outs
fs
gs
and
mov
and
arpl
gs
mov
jp
gs
aad
fmul
mov
and
or
mov
mov
inc
push
gs
fs
mov
imul
imul
or
mov
adc
jns
sub
popa
jo
push
ins
pusha
sub
cmp
lods
sub
shr
push
cs
outs
fild
sub
adc
sar
arpl
xor
dec
pusha
jg
inc
jb
clc
mov
inc
outs
popa
bound
jge
inc
out
cmp
dec
popa
arpl
pusha
pop
out
enter
pop
jne
das
fist
mov
scas
or
inc
mov
dec
dec
int3
pop
lock
scas
or
fimul
or
push
inc
dec
jle
push
dec
mov
fdivr
or
dec
dec
mov
dec
popf
retf
enter
xor
in
leave
push
and
pop
xor
in
mov
je
jb
repz
popa
lds
push
dec
mov
jecxz
adc
jo
mov
ror
or
fiadd
gs
xchg
or
mov
push
add
push
stc
push
xor
push
xor
and
dec
call
or
sub
inc
push
retf
outs
sub
mov
sbb
adc
sbb
push
push
xchg
call
or
mov
or
add
jp
add
imul
or
push
mov
push
dec
push
jo
gs
popa
sbb
ss
das
cmp
popf
xchg
or
inc
inc
jns
stos
imul
addr16
pusha
mov
call
inc
mov
aad
aam
stos
add
ror
cmp
mov
shl
pop
pop
jle
and
push
inc
jb
bound
test
jl
jo
sub
cwde
into
dec
and
add
inc
pop
inc
gs
xchg
sub
jns
sbb
pop
xor
cmps
ret
xor
push
jne
gs
jne
jne
in
push
sub
repz
enter
jns
dec
push
je
rcr
cmp
lock
jo
add
push
imul
adc
iret
out
pop
push
inc
jne
data16
imul
test
pusha
push
test
sbb
push
mov
call
repz
mov
loopne
out
add
add
inc
popa
ror
shl
and
mov
xor
or
or
push
and
or
inc
inc
mov
xor
push
or
push
and
scas
outs
sub
add
push
imul
fld
int3
test
test
outs
mov
sbb
inc
add
inc
movs
fisttp
popa
cmp
jo
or
lds
(bad)
add
div
pusha
rol
fstp
or
fnsave
add
xchg
add
push
xchg
stos
push
and
lds
std
or
fidiv
dec
mov
jae
inc
lods
pop
loop
pusha
xchg
into
or
and
scas
mov
add
dec
leave
mov
xchg
jmp
jbe
pop
jecxz
pop
in
cmp
dec
popa
ins
and
mov
dec
xchg
jmp
and
mov
js
ins
mov
test
js
add
loop
mov
add
adc
nop
push
imul
add
adc
loopne
or
popf
xchg
add
sbb
pop
sub
repnz
mov
mov
and
inc
fs
jne
je
int3
dec
call
ins
(bad)
jmp
mov
inc
(bad)
jne
push
sti
pop
scas
dec
add
mov
inc
and
or
sahf
daa
push
dec
outs
jo
adc
rol
popa
or
jbe
push
sub
bound
(bad)
clc
or
adc
nop
daa
test
adc
inc
mov
inc
popa
call
sub
loop
pop
aas
sti
or
push
mov
push
dec
jge
or
adc
jno
sbb
arpl
pop
imul
movs
and
and
inc
cs
sahf
pop
lods
cmp
push
mov
xor
jecxz
dec
retf
call
cdq
je
lods
call
rol
adc
into
push
pop
push
push
or
add
inc
dec
add
scas
sbb
sub
inc
dec
into
or
inc
adc
inc
pop
mov
mov
outs
shl
inc
inc
jae
ret
fld
inc
test
or
push
mov
jo
inc
jmp
je
pop
pop
gs
mov
push
in
add
ret
scas
aam
inc
mov
fbld
add
inc
inc
jo
mov
sub
pop
jns
push
jmp
hlt
inc
loopne
lahf
(bad)
dec
jne
push
xchg
int
push
xor
pop
xchg
mov
pop
mov
or
add
push
push
push
call
inc
xor
pop
mov
stc
and
add
push
es
ret
mov
sub
or
and
mov
mov
sub
mov
lock
sbb
call
or
mov
(bad)
sar
jg
xchg
adc
xchg
add
stos
push
(bad)
sbb
mov
inc
xor
div
xchg
cld
mov
or
and
neg
mov
(bad)
pop
jge
add
inc
and
jmp
in
scas
push
sub
mov
ror
mov
and
fs
fcomp
outs
popa
dec
mov
adc
pusha
out
pushf
sbb
movd
movd
sti
je
xchg
or
test
or
xchg
in
mov
inc
dec
sahf
jbe
sbb
or
inc
xor
jb
and
fisttp
loope
leave
mov
outs
mov
mov
mov
xchg
cli
cwde
xor
mov
and
or
mov
mov
ret
shl
mov
aad
ins
call
inc
test
push
jae
add
retf
mov
pop
dec
popf
add
lods
mov
mov
xchg
add
pop
(bad)
out
jns
sbb
jmp
loop
mov
js
jge
fdiv
push
or
xchg
sbb
dec
adc
arpl
mov
nop
inc
daa
and
inc
push
xor
bound
in
mov
push
cmp
js
jo
cwde
aam
cmps
jmp
loopne
mov
cmp
pusha
adc
and
jmp
or
add
nop
iret
mov
or
rcr
sar
push
xchg
pusha
or
ret
sbb
sub
loope
fcom
sbb
bound
xchg
jb
xchg
addr16
test
or
dec
push
or
adc
pop
push
je
mov
stos
add
out
pusha
in
call
add
cmp
add
(bad)
add
xor
sub
xchg
or
shl
adc
push
mov
mov
mov
shr
jo
and
test
outs
out
in
test
inc
or
cmp
or
test
mov
inc
push
jb
push
test
cld
jo
add
push
lea
mov
rcl
in
and
xor
ja
js
dec
enter
in
ins
xchg
call
push
in
call
cmp
in
xchg
and
cmp
push
jbe
in
and
pop
or
jo
xlat
and
sahf
adc
lea
loopne
cmp
imul
sbb
rcl
or
sbb
retf
mov
aad
lods
call
out
test
sbb
sahf
xchg
jge
(bad)
popf
inc
jo
sub
jge
jne
test
push
(bad)
mov
xchg
jo
and
mov
sub
or
and
rcr
add
inc
dec
fwait
loopne
enter
outs
dec
sahf
add
jo
push
call
out
push
ror
out
sbb
pop
movhps
sti
arpl
call
push
xor
test
or
idiv
ja
popf
pop
xchg
sub
jnp
inc
mov
and
dec
sbb
rol
jbe
cmp
add
pop
nop
sahf
push
xor
sbb
jecxz
cdq
mov
mov
cdq
lods
or
dec
cmp
dec
inc
adc
dec
leave
or
pop
dec
iret
movs
jo
and
mov
ret
loopne
pop
cli
pop
stc
shl
int
or
ds
ret
test
je
cli
dec
lahf
jno
sti
inc
sub
or
fsubr
out
sbb
cmp
js
nop
adc
test
mov
mov
pop
pusha
push
sbb
or
add
(bad)
in
push
push
fnstenv
call
sar
add
dec
mov
mov
enter
dec
mov
outs
push
pop
push
mov
test
sub
out
mov
mov
mov
jbe
mov
lock
pop
sub
aam
cdq
pop
daa
cdq
inc
mov
mov
add
inc
or
xor
jp
mov
cs
mov
dec
daa
add
mov
cmp
pop
add
add
or
(bad)
push
mov
stos
pop
add
sbb
inc
cs
jne
push
mov
std
jle
inc
inc
xor
jmp
fimul
loope
jne
dec
sub
popa
retf
std
js
cmp
jg
dec
adc
retf
jg
(bad)
fs
and
pop
fdiv
or
mov
inc
es
push
sbb
and
sbb
xor
add
lea
push
push
sub
fld
aas
and
and
cmc
(bad)
(bad)
(bad)
push
lea
adc
add
or
adc
or
adc
xor
ja
mov
test
jns
inc
(bad)
push
mov
in
bound
mov
in
loop
loop
mov
je
jmp
jmp
xor
rcl
ins
(bad)
dec
dec
mov
clc
sub
ja
push
outs
or
sub
ja
or
xchg
adc
push
dec
inc
jne
ins
pop
xchg
mov
mov
adc
and
rcl
imul
or
xchg
ret
mov
cmp
inc
inc
jl
sahf
ds
dec
inc
adc
je
mov
dec
dec
and
daa
lock
adc
sub
shr
cmp
and
push
mov
mov
cmp
ds
mov
push
pushf
test
das
cmp
rcr
xor
bnd
and
loopne
sbb
rcl
mov
xor
add
je
dec
in
mov
add
sbb
push
and
cmc
add
sbb
std
lahf
cmp
ins
push
dec
(bad)
loop
jb
or
adc
aaa
adc
push
inc
push
inc
push
adc
lock
or
push
sub
mov
xchg
or
fistp
inc
movd
call
js
push
xor
and
es
nop
xchg
pushf
xchg
movs
push
inc
add
mov
es
cs
and
into
xor
sbb
jle
push
mov
mov
mov
sub
jge
adc
sbb
xor
mov
fsubr
jns
mov
lods
inc
ja
mov
add
les
add
add
(bad)
pop
jmp
push
jb
outs
jae
popa
jb
jb
js
inc
imul
int
push
dec
imul
test
pop
mov
sub
jne
je
ins
pop
jnp
cmp
ffreep
in
mov
mov
mov
(bad)
mov
push
std
mov
push
dec
outs
je
jne
jo
push
stos
(bad)
mov
push
outs
mov
add
cmps
add
sub
mov
or
cmps
in
add
mov
mov
out
popa
pop
or
add
popa
dec
mov
push
pop
sbb
sbb
jle
inc
adc
in
push
and
dec
pusha
push
push
mov
pop
add
xor
xor
sub
sub
cmp
in
mov
jo
mov
sbb
xor
test
jle
mov
fisubr
mov
push
fadd
pop
cs
dec
dec
pop
or
jl
fmulp
in
cli
cwde
setl
inc
cld
pop
inc
add
or
xchg
push
hlt
popa
jae
push
sbb
xchg
ret
das
loopne
js
test
pop
mov
sbb
add
(bad)
mov
sub
div
ret
maskmovq
or
push
mov
das
jg
repnz
sbb
neg
add
mov
sbb
in
add
sbb
inc
mov
lods
push
(bad)
popa
push
fcom
cmps
pop
pop
push
push
sbb
mov
data16
aaa
inc
test
push
std
jge
push
add
xchg
iret
jge
xor
push
fld
(bad)
mov
mov
mov
outs
pop
outs
rol
and
mov
pop
adc
pop
xor
lds
xchg
(bad)
aad
mov
add
into
inc
ja
mov
ja
add
add
mov
fimul
and
or
and
(bad)
jnp
push
add
and
mov
or
xor
mov
pop
ret
hlt
jno
loopne
sbb
jne
pusha
loope
gs
nop
aam
push
or
retf
addr16
pop
cmc
mov
retf
sahf
xchg
dec
stc
jne
ret
push
ins
inc
fnsave
ins
adc
rol
sbb
clc
ror
rcl
rdtsc
add
retf
shl
cmc
dec
inc
add
xchg
pop
or
jle
fwait
dec
(bad)
ds
hlt
ins
pop
jmp
in
push
or
add
pop
xor
ins
xchg
daa
mov
xor
xor
mov
shl
push
push
repnz
push
loopne
(bad)
push
sbb
cs
stos
inc
jmp
add
(bad)
inc
add
rol
or
add
inc
(bad)
in
and
cs
pop
xor
mov
sbb
pop
sbb
pusha
xor
cmp
add
cmps
add
or
aam
add
js
(bad)
push
loop
es
lea
jb
xchg
or
and
cld
cmp
and
and
mov
ins
out
loopne
mov
data16
fld
push
push
or
inc
jmp
dec
sub
loopne
mov
sahf
mov
fld
pop
mov
mov
xor
adc
push
xor
or
sti
xor
ins
stos
mov
pop
xor
xor
pop
jns
sub
test
xchg
dec
pop
mov
dec
repnz
jae
add
inc
(bad)
sbb
push
ins
fcom
scas
inc
cmps
lea
cmps
scas
std
test
inc
sub
push
dec
xchg
mov
mov
outs
call
xor
pop
loope
add
out
stc
add
cmp
fwait
jne
fisttp
jl
mov
lods
aad
test
add
push
ins
ret
and
and
mov
je
mov
sub
repz
pushf
sbb
push
(bad)
push
inc
ins
xor
inc
jb
hlt
mov
push
hlt
cmp
and
mov
adc
mov
mov
jge
xchg
or
mov
or
(bad)
lock
outs
or
sbb
leave
and
repnz
shr
gs
add
pop
sbb
jbe
or
in
shl
ja
sub
push
in
bound
aaa
or
sbb
inc
cmps
movs
loop
aad
scas
(bad)
(bad)
in
scas
into
pusha
out
and
cmp
mov
sub
add
addr16
jbe
or
xor
mov
pop
mov
xsha256
cmps
adc
test
outs
pop
or
add
and
in
or
push
outs
movs
es
mov
pop
outs
inc
and
mov
inc
and
cld
jg
xor
push
pushf
bound
imul
adc
xchg
and
mov
push
jecxz
jnp
push
jl
push
aam
mov
jo
into
mov
mov
mov
imul
mov
ret
inc
xor
jge
jae
ja
repz
pop
mov
hlt
fs
push
out
sbb
les
push
dec
js
xchg
or
dec
xchg
(bad)
push
and
push
or
xor
push
inc
adc
pop
push
or
jo
adc
test
fld
push
inc
outs
jb
imul
cmp
mov
xor
popa
push
gs
js
gs
ja
shl
dec
data16
dec
and
or
stos
gs
sub
ds
cmp
iret
push
mov
add
add
pusha
fmul
call
push
gs
fs
add
or
sub
xor
push
cmp
or
rol
or
mov
adc
cmp
jne
xor
mov
in
sbb
push
xor
pushw
fsubr
mov
push
sar
dec
jg
(bad)
prefetch
xor
aad
pop
cmp
(bad)
mov
cmps
push
pop
pop
and
mov
pop
push
dec
sbb
add
push
inc
cmp
ret
inc
mov
addr16
lock
lea
inc
dec
sub
mov
jb
clc
inc
mov
inc
adc
jae
popa
addr16
int3
sbb
mov
arpl
push
xchg
cmp
xchg
mov
jno
(bad)
push
adc
push
push
ds
xchg
inc
xor
dec
sbb
sbb
pop
pop
popf
(bad)
ret
stos
movs
mov
dec
mov
jo
xchg
pop
jo
popa
adc
or
int3
or
cmp
sbb
scas
adc
pop
inc
cmps
mov
or
xchg
ror
push
out
add
leave
add
jo
sti
cmp
int
loopne
aam
or
ror
mov
sbb
jg
mov
jb
jge
mov
jmp
mov
mov
jmp
mov
or
shr
das
mov
loop
xor
jo
xor
or
(bad)
push
adc
scas
je
mov
pop
inc
aam
adc
push
mov
push
fmul
clc
nop
sub
mov
test
inc
ja
push
dec
mov
jmp
ins
lods
das
clc
mov
and
adc
xchg
cld
sub
inc
and
cmp
xor
neg
loopne
popf
jb
daa
xor
cwde
ret
jmp
jae
clc
cmp
add
push
xor
into
cmp
(bad)
xor
mov
lea
and
pop
(bad)
fisttp
or
cwde
or
mov
adc
call
xchg
leave
jo
mov
cdq
xor
mov
xchg
outs
jmp
cmp
aaa
pop
dec
cwde
(bad)
jmp
or
mov
inc
or
or
pop
movs
ror
or
pop
cmp
sbb
cli
pop
cwde
ret
in
mov
lea
adc
adc
jl
and
movs
mov
mov
popa
sub
clc
push
mov
sbb
jbe
cmp
stos
sub
sub
or
ss
mov
and
xchg
fwait
jl
and
ins
xor
cmp
mov
retf
inc
test
adc
push
mov
pop
arpl
sbb
mov
jmp
mov
sub
pop
push
das
pop
es
xchg
mov
push
push
add
movs
jo
adc
into
sbb
pop
add
jl
stos
mov
adc
jg
int3
std
xchg
add
popfw
movs
pop
mov
xchg
cmp
add
and
xchg
in
out
mov
mov
mov
cdq
sub
and
and
sub
jmp
sub
jmp
inc
ror
fdiv
inc
inc
mov
popf
rol
or
add
push
lock
das
pop
popf
cmp
or
dec
or
(bad)
mov
addr16
inc
xchg
add
mov
add
or
fwait
inc
lds
inc
xchg
jmp
jmp
enter
call
or
dec
test
mov
rcl
or
(bad)
adc
add
cmp
test
lock
ret
sub
and
in
add
mov
push
stos
ror
pop
enter
or
add
pop
add
sti
es
push
les
popa
scas
and
adc
data16
mov
push
aad
or
fmul
push
bound
shl
test
sbb
fld
cld
aam
jbe
mov
aaa
clc
push
clc
cs
fidivr
pop
mov
fnstcw
add
add
icebp
adc
inc
inc
jb
gs
or
mov
(bad)
cmp
sub
outs
je
xor
xchg
push
jo
add
mov
dec
sbb
push
jne
ins
fs
gs
ins
pop
push
mov
xor
mov
inc
dec
pop
pop
(bad)
cld
sbb
sub
push
cmovbe
out
adc
and
add
mov
test
xchg
xchg
dec
fistp
ins
pop
jge
loopne
add
es
mov
adc
push
outs
nop
cmp
or
rcr
cmp
dec
inc
and
clc
or
pop
dec
push
cs
push
mov
add
mov
and
push
int
push
mov
mov
and
sbb
and
pop
fucomp
into
jno
jb
dec
add
pusha
enter
push
pop
(bad)
lar
sbb
inc
push
pop
clc
ret
inc
sub
inc
psllw
mov
arpl
add
pop
jmp
inc
inc
in
push
push
add
push
jns
add
pop
mov
repz
inc
data16
call
add
add
or
rcr
jp
add
xor
(bad)
cmps
mov
dec
and
or
inc
inc
ins
ins
outs
ja
fsub
int3
mov
mov
inc
xor
enter
mov
xlat
inc
fwait
xchg
adc
push
xor
sub
push
(bad)
cmp
pop
inc
mov
inc
or
outs
jns
dec
sub
mov
rcl
push
ret
or
push
aas
cmc
cmp
ficom
or
add
jns
jge
mov
mov
imul
sbb
push
pop
bound
call
pop
add
scas
inc
outs
retf
jo
lods
pop
mov
or
loope
loope
pop
adc
and
jmp
xchg
imul
mov
mov
add
adc
test
adc
popa
lea
cmp
pop
loopne
mov
push
je
pusha
push
fstp
cmp
mov
pusha
mov
lea
sub
fcomp
ret
int3
or
or
imul
xchg
mov
mov
mov
mov
rcl
data16
mov
lods
pop
mov
push
int
sub
mov
push
cmp
cmps
aas
call
push
dec
outs
or
inc
push
mov
(bad)
mov
ja
add
xchg
mov
ja
inc
inc
push
push
mov
fdiv
inc
dec
and
shl
sbb
mov
push
ret
inc
xchg
(bad)
xchg
pop
pusha
add
popf
jmp
jecxz
cli
ret
add
test
out
xchg
inc
inc
add
loopne
mov
out
adc
adc
push
sub
xor
imul
inc
push
cmp
inc
pop
pop
push
lock
stos
inc
inc
gs
mov
xchg
sub
jmp
or
rcr
ror
adc
or
jbe
sbb
sbb
call
pop
test
popa
mov
jmp
fistp
arpl
dec
or
mov
xchg
jne
adc
mov
pop
pop
movs
push
bound
push
sub
mov
xor
lods
adc
arpl
(bad)
push
push
div
das
sar
(bad)
in
aaa
push
push
mov
jb
push
sub
sbb
fcomp
mov
xchg
push
retf
mov
mov
mov
jg
or
push
fs
shr
push
mov
add
sar
cwde
dec
pop
cmps
ja
xchg
shl
aaa
ds
mov
dec
test
xchg
fs
mov
ror
pop
loop
(bad)
lock
xchg
mov
mov
add
adc
js
jo
mov
fdivr
xor
mov
ss
or
pmuludq
mov
and
adc
fstp
mov
dec
pop
fisub
test
push
push
cmp
jp
sbb
enter
bound
shl
pop
xchg
and
push
dec
cld
sub
das
cwde
pop
(bad)
mov
cli
add
add
in
rcl
fwait
push
es
mov
inc
and
icebp
std
push
cmp
xor
xchg
(bad)
dec
test
mov
inc
inc
or
nop
push
addr16
cwde
or
mov
int3
loope
stos
push
out
dec
(bad)
adc
call
ja
jge
jo
xchg
or
je
sub
xchg
mov
push
or
xchg
repz
sub
mov
sub
cmps
xor
test
sbb
mov
sar
ins
jg
inc
daa
lock
pmaxub
icebp
cli
sbb
jbe
mov
mov
nop
aam
mov
(bad)
dec
pusha
cmp
pusha
pushf
int3
cmc
push
in
add
fadd
sub
je
fmul
in
mov
jmp
cwde
sub
add
push
dec
xchg
mov
add
repnz
push
jle
cmp
shl
adc
pop
and
pushf
jae
fnstenv
and
pcmpeqd
cmp
ror
xchg
das
pop
mov
clc
lea
test
mul
jge
stos
xchg
rol
cmc
xchg
push
add
push
cmp
imul
and
push
add
push
mov
bound
and
and
cmp
iret
call
push
(bad)
push
test
jo
cmp
div
jg
push
mov
ja
cmp
je
jo
fwait
lock
sub
ja
pusha
or
loopne
addr16
dec
adc
sbb
push
cwde
sbb
fsubr
xlat
(bad)
jmp
push
adc
mov
pushf
into
adc
js
idiv
ss
rcl
jge
movs
cmp
push
mov
mov
xor
lea
pop
cmps
or
xor
sbb
add
and
sbb
outs
outs
aas
ret
xor
dec
dec
or
jg
sub
ins
xor
mov
cmp
and
and
sub
jae
adc
dec
mov
not
sub
aam
push
cmps
jg
push
loope
jge
stos
inc
in
mov
or
popf
mov
add
jne
sar
push
shr
jle
loopne
loopne
adc
iret
jmp
jmp
cmp
test
test
cmp
inc
and
inc
cwde
fstp
aas
cmp
and
add
inc
adc
push
cmps
rcl
add
cbw
jge
or
cwde
clc
pop
(bad)
cmp
fsubr
sbb
or
mov
xor
jne
cmp
push
fst
movs
cmp
call
mov
and
bswap
cld
icebp
xor
popa
push
and
jno
or
push
mov
and
sbb
jp
aaa
fwait
fwait
(bad)
es
fwait
clc
std
fwait
(bad)
adc
ss
jb
test
mov
push
cmp
jle
je
out
jl
inc
loopne
(bad)
aas
inc
cmp
jne
push
add
dec
jne
cmp
add
or
jge
hlt
push
les
or
inc
in
sub
or
jp
call
dec
sti
cwde
ret
mov
adc
pop
cmps
mov
cld
mov
int3
cmps
xchg
jo
in
dec
mov
dec
cmp
nop
int
arpl
pusha
add
xor
add
stos
mov
sbb
sub
jno
daa
scas
inc
xchg
fstp
pop
dec
or
sub
ds
push
and
jmp
pop
mov
sbb
mov
sbb
or
inc
pop
push
inc
cmps
pop
lds
ret
xor
dec
or
or
fsubr
inc
jmp
das
cmps
stos
sbb
sbb
pop
loopne
rcl
dec
bound
pop
dec
test
addr16
xor
adc
call
push
fnsave
je
aaa
push
and
cmps
aad
mov
out
sbb
addr16
ret
adc
loopne
adc
dec
add
mov
stc
adc
pop
iret
bound
and
shl
inc
pop
es
adc
jecxz
(bad)
jbe
pusha
loope
sbb
or
sub
mov
and
ins
clc
inc
push
add
clc
pop
fidiv
add
cmp
int
and
jo
sub
(bad)
fsub
mov
add
sbb
push
stos
mov
mov
maxps
dec
daa
push
cmps
push
ror
jecxz
ret
lock
jl
xlat
pop
sbb
stos
sub
enter
xor
push
stos
loopne
ror
sbb
pop
push
add
and
xchg
or
sbb
inc
js
dec
add
cs
or
repz
cmp
sahf
push
push
mov
mov
call
inc
add
shl
psubsb
pop
add
pop
and
outs
jne
fs
add
int3
jb
add
sahf
add
daa
push
outs
jb
sub
xchg
cmps
(bad)
or
adc
pusha
and
xor
or
rol
cmovbe
inc
xor
cmp
imul
aaa
js
jmp
dec
outs
and
aas
lods
fcom
xor
gs
in
or
dec
aaa
fadd
outs
in
jge
or
adc
adc
aas
pop
add
lock
ins
imul
sahf
popf
mov
push
jae
sub
outs
inc
sbb
jne
dec
mov
nop
xor
ins
das
inc
mov
cs
data16
adc
push
xchg
xor
popa
jns
test
das
adc
psraw
mov
arpl
std
push
aad
mov
add
or
in
add
vtestpd
cs
ins
imul
aas
pop
inc
je
ins
daa
xor
xor
jne
les
add
xchg
mov
xchg
bound
add
pusha
imul
xchg
pop
add
or
mov
add
outs
adc
inc
push
mov
test
pop
pop
cmc
call
fild
out
or
repnz
das
jp
pop
xchg
mov
pop
inc
mov
stos
mov
and
loop
xchg
or
xchg
and
jecxz
push
jge
and
and
lahf
or
push
dec
sbb
jge
dec
inc
jmp
mov
mov
rcr
add
fadd
and
stos
add
bound
and
pop
pop
mov
push
mov
cmp
lods
jmp
dec
movs
sbb
(bad)
test
dec
outs
sub
dec
je
xor
dec
mov
sub
dec
ins
mov
push
mov
dec
movs
ret
cmp
dec
adc
cs
scas
add
fild
inc
in
sub
xor
les
add
pop
add
or
xchg
ret
pusha
pop
daa
pop
and
sub
sub
cmp
or
xchg
test
and
loopne
fnsave
inc
lock
jge
or
sbb
xchg
(bad)
cmp
cwde
add
outs
in
push
fs
add
in
je
rcl
adc
dec
push
sbb
adc
movs
sbb
and
adc
mov
adc
dec
adc
xor
cmp
retf
or
cmp
clc
sbb
cmp
xor
xor
sub
rcl
cdq
fcom
or
data16
or
fiadd
adc
pop
(bad)
mov
enter
sbb
(bad)
mov
clc
imul
mov
adc
dec
cmp
add
mov
adc
(bad)
dec
xor
scas
xor
lds
dec
scas
sbb
packsswb
inc
mov
or
inc
pop
iret
js
add
dec
dec
add
adc
retf
mov
jae
leave
nop
pop
mov
outs
xor
nop
jns
push
ja
sub
sub
mov
ret
mov
cmps
cmp
fisttp
test
sbb
std
push
lea
addr16
das
sbb
xchg
pop
cdq
pop
data16
cmp
jl
xor
ja
and
jmp
push
mov
mov
in
je
and
nop
cdq
mov
rcr
cs
mov
adc
aaa
mov
mov
fisub
xor
or
inc
test
xor
push
mov
push
adc
dec
push
imul
push
and
or
loope
mov
hlt
adc
sub
movs
cmp
jae
cmp
sub
jo
cmp
sar
movs
ret
test
jg
lods
mov
imul
mov
iret
mov
dec
stc
ss
mov
retf
sti
mov
inc
aaa
retf
mov
cmps
cmp
dec
jg
mov
xor
and
mov
ficomp
mov
adc
sub
mov
lahf
mov
in
ret
ret
nop
xor
clc
cwde
loop
and
push
mov
mov
mov
mov
ror
out
pop
neg
adc
and
mov
outs
sub
shl
push
inc
adc
mov
add
cmp
push
xchg
sub
push
sbb
jp
aaa
xchg
and
and
ins
inc
sub
push
cmovbe
rcl
jnp
pop
mov
xor
xchg
in
stc
or
out
or
repz
mov
jge
dec
int3
js
push
or
xor
nop
dec
shl
mov
xor
sbb
outs
push
xor
in
outs
out
sub
outs
adc
int3
jmp
outs
dec
add
jo
iret
movs
pop
and
pushf
(bad)
cmp
jne
(bad)
xchg
jmp
pop
xchg
adc
scas
mov
das
mov
mov
xchg
cmp
and
mov
mov
(bad)
sbb
sbb
aad
scas
mov
(bad)
(bad)
jmp
scas
push
mov
mov
arpl
jmp
imul
clc
mov
xchg
nop
xchg
mov
mov
push
idiv
inc
or
and
test
push
fst
sbb
lock
xor
push
outs
mov
xchg
cwde
add
out
fs
cmp
jge
jle
aam
(bad)
sub
inc
popf
adc
movs
out
sbb
ret
cmp
and
cmp
(bad)
js
dec
jl
sbb
mov
(bad)
pop
(bad)
fsubr
mov
pop
jnp
jecxz
(bad)
loopne
add
lahf
dec
clc
push
les
add
add
mov
mov
push
dec
outs
je
jne
jo
gs
jns
lods
jnp
loopne
inc
dec
mov
outs
add
out
xlat
sub
shr
add
cmp
or
pop
ins
pop
inc
(bad)
mov
sti
in
mov
mov
or
sysenter
and
inc
repnz
popa
and
lock
adc
inc
xor
inc
jne
push
adc
inc
adc
lods
aas
ins
xchg
jbe
and
shr
push
push
out
adc
(bad)
icebp
sbb
add
push
sbb
lea
push
js
(bad)
ret
or
sub
adc
mov
sub
mov
ins
ds
push
ds
jl
push
adc
les
xor
cmps
fld
cmp
retf
or
cmp
jge
inc
sbb
xchg
push
pop
test
inc
(bad)
or
push
out
push
or
addr16
ficom
mov
jne
push
dec
sbb
push
cmp
nop
repnz
sbb
lock
cmp
ins
movs
push
sbb
push
cmp
mov
outs
outs
aaa
aaa
push
int3
imul
mov
push
fstp
pop
inc
push
jb
ins
add
xor
arpl
pop
push
jb
jns
mov
ins
mov
add
add
das
imul
sahf
inc
adc
add
addr16
dec
dec
dec
popa
dec
ins
adc
sbb
or
popf
or
mov
add
push
dec
imul
(bad)
fs
xlat
lods
add
sbb
ffree
pusha
stos
imul
sbb
and
sub
push
nop
xchg
imul
arpl
mov
and
mov
fild
xor
sahf
or
mov
fisub
inc
jne
xchg
sbb
push
or
fcom
sbb
ins
or
or
or
or
xor
int
xor
jge
or
rcl
sub
push
and
sbb
add
push
data16
cs
inc
add
or
xchg
dec
inc
arpl
and
adc
leave
jmp
addr16
mov
add
stos
lods
mov
add
xchg
and
pop
addr16
mov
push
inc
fwait
add
and
or
dec
cmp
and
add
or
add
inc
sbb
jl
cmp
mov
xor
add
ins
and
inc
inc
pop
mov
mov
fwait
arpl
cs
inc
inc
or
mov
push
aaa
sbb
xchg
or
inc
push
loope
(bad)
fs
idiv
pop
into
test
idiv
or
xchg
fs
sar
inc
mov
out
push
lea
push
(bad)
imul
or
add
xchg
add
sub
or
mov
pop
in
and
adc
add
adc
imul
popa
inc
clc
jae
shr
dec
inc
test
add
add
push
nop
jmp
mov
movzx
sbb
cmp
pop
jno
cmps
mov
jmp
sbb
mov
rol
mov
int3
and
shr
xor
jl
and
and
cs
mov
ret
in
cdq
xchg
sub
cdq
xchg
sub
in
xchg
jo
mov
shl
add
nop
cmp
sbb
leave
sbb
adc
inc
lea
cmps
push
fdivp
lea
aas
lods
or
cmp
inc
pop
push
mov
cs
inc
dec
in
cwde
jecxz
push
cwde
add
jp
(bad)
mov
xor
xor
push
sub
in
sbb
enter
sub
or
inc
and
xlat
or
out
inc
test
sbb
repz
inc
add
je
or
sub
or
cmc
dec
jmp
hlt
pop
cmp
ret
sbb
add
cmp
in
dec
inc
jmp
inc
hlt
mov
aaa
pop
repnz
add
pushf
cmp
sbb
out
pop
add
stc
dec
mov
inc
in
sub
(bad)
cwde
mov
(bad)
jl
cwde
push
test
sbb
ss
mov
xor
mov
fld
inc
imul
ror
lock
add
push
push
daa
mov
clc
xchg
mov
mov
xchg
mov
jge
inc
test
ret
add
cmp
test
inc
popa
push
add
or
push
add
or
sub
push
les
pop
dec
and
outs
enter
shl
ror
add
add
sbb
(bad)
fdivr
or
mov
jmp
lea
test
jnp
xor
jne
neg
vpmaxsw
inc
jge
imul
sub
out
inc
mov
test
jbe
push
fcmovb
pop
add
add
add
arpl
sub
pop
add
pop
in
or
and
push
inc
lds
jo
popf
mov
mov
add
dec
dec
jne
push
xchg
stc
add
cmp
(bad)
(bad)
data16
or
out
icebp
pusha
push
mov
adc
lock
add
loopne
push
lods
mov
iret
imul
nop
xor
or
rcl
or
pop
inc
and
pop
test
clc
out
and
or
jmp
lea
popf
aam
in
sub
and
jg
or
xchg
jmp
std
push
pop
push
jg
sahf
out
push
movs
retf
icebp
pop
cmp
dec
call
dec
pop
and
ja
aas
test
and
retf
jmp
pop
shr
outs
xor
loopne
add
or
arpl
in
in
enter
mov
nop
cmp
adc
inc
inc
dec
fsub
jl
lods
jmp
and
jnp
in
fcomp
jno
mov
pusha
lods
dec
aam
or
push
jo
or
sub
iret
shl
jo
mov
push
int3
mov
(bad)
fistp
pusha
add
push
sbb
pop
(bad)
stos
mov
push
cmp
add
and
cs
pop
cs
push
pop
stos
add
xchg
nop
retf
and
enter
sbb
or
pop
loopne
mov
enter
xor
call
add
sbb
mov
rcl
push
pop
pop
sbb
mov
jne
div
add
dec
adc
mov
adc
xor
ja
cmp
ja
or
and
retf
test
int3
push
push
xchg
or
pusha
test
add
mov
add
daa
pop
dec
cwde
jmp
mov
adc
pusha
leave
hlt
int3
adc
mov
add
sub
pushf
push
adc
popf
mov
xor
test
xchg
cmps
dec
add
jge
cmp
das
mov
and
shl
add
xchg
lock
mov
movs
(bad)
mov
sbb
sbb
or
push
pop
fdivr
lock
mov
push
out
loopne
imul
push
pop
fucom
add
not
call
add
sub
jb
je
jmp
adc
push
jb
jl
or
jmp
and
inc
xchg
dec
sub
setb
clc
sub
cmps
xchg
in
mov
adc
cmps
xchg
mov
xchg
add
aam
push
cli
mov
pop
test
pusha
sub
add
mov
or
or
shl
push
sbb
mov
or
cld
fdivrp
adc
jle
add
add
cmp
mov
ins
scas
adc
stc
xchg
and
pop
xchg
adc
dec
aaa
jmp
mov
enter
push
lods
mov
das
mov
add
push
ss
inc
xor
xchg
(bad)
add
test
mov
pop
int3
push
sub
in
mov
test
push
pop
js
jns
add
sbb
jge
pusha
xor
aas
mov
or
ins
add
ret
sbb
mov
repnz
in
scas
cmp
imul
cs
push
fisub
iret
test
push
fisub
add
mov
mov
inc
cmp
jbe
dec
enter
or
add
mov
xor
out
add
scas
push
ret
or
out
cmp
mov
or
or
cmps
(bad)
cmc
je
pop
cmps
xor
xchg
adc
sub
inc
shl
mov
mov
dec
loopne
fsub
(bad)
push
mov
or
mov
inc
dec
adc
ret
cmp
push
push
xchg
sti
sbb
sbb
mov
add
das
adc
and
adc
add
add
cmp
mov
add
ret
cmp
xchg
xor
ss
pop
mov
ret
push
add
or
fadd
jge
ffreep
mov
stos
retf
push
ror
iret
repz
stc
push
pop
push
inc
imul
xlat
repz
xor
xor
rol
mov
xchg
repz
repz
leave
add
jle
and
les
xchg
add
rol
fsub
mov
inc
repz
sbb
repz
mov
push
xlat
push
repz
test
in
(bad)
out
add
hlt
pop
and
jns
jae
xor
ins
sbb
jns
mov
sti
outs
push
je
or
mov
(bad)
or
pop
fs
loopne
mov
xor
out
(bad)
sahf
inc
inc
jp
mov
ficomp
xchg
fsubr
data16
cmp
test
xchg
ds
pop
pop
mov
jbe
movs
mov
scas
mov
data16
or
xchg
or
dec
shl
cmp
cmp
push
aas
retf
jnp
xor
outs
inc
test
push
cmps
cs
pmaddwd
xor
nop
mov
sbb
jo
movhps
or
hlt
cmp
and
mov
movs
stos
not
or
dec
cld
mov
shr
mov
or
xchg
cmp
retf
xchg
adc
xchg
pusha
mov
sbb
and
add
call
into
and
jl
jg
rol
or
iret
repz
or
lea
frndint
pop
ds
loopne
jp
and
xlat
inc
add
fcomp
add
pop
add
add
(bad)
pop
push
pop
xchg
jb
jae
mov
add
jb
add
or
(bad)
jb
sbb
(bad)
jae
add
adc
ins
(bad)
xchg
add
(bad)
pop
addr16
xor
mov
mov
div
imul
push
mov
jmp
mov
out
mov
mov
call
pop
mov
test
jmp
xlat
cmp
movs
not
mov
sahf
mov
push
mov
and
push
out
lock
sbb
push
movs
lea
jp
rol
and
mov
or
mov
imul
mov
sbb
xor
mov
xor
shl
mov
outs
test
xchg
ins
xlat
jmp
adc
jne
dec
lock
pop
add
outs
mov
sub
mov
scas
push
mov
push
mov
ins
sub
mov
cs
ret
or
(bad)
sbb
add
dec
mov
leave
inc
sub
inc
and
sbb
dec
dec
push
sbb
fwait
push
nop
mov
cmp
inc
mov
dec
lea
xchg
das
xor
or
jle
mov
popf
pop
fcmove
jge
(bad)
popf
xor
mov
jge
add
in
adc
or
cmps
(bad)
mov
mov
pushf
jmp
inc
test
inc
jl
add
mov
adc
scas
(bad)
(bad)
aaa
adc
adc
loope
sub
lods
and
sub
adc
repz
pop
push
jle
retf
pop
out
cmp
sub
pop
mov
in
sub
loopne
pop
xchg
or
sub
rol
push
les
pusha
les
xchg
mov
leave
int3
mov
sbb
and
aaa
scas
inc
daa
jle
(bad)
in
push
push
jmp
in
xchg
fnsave
adc
jmp
inc
in
xor
js
or
add
add
jbe
lock
xor
push
cmp
outs
imul
push
mov
(bad)
cmps
xchg
jmp
push
pushf
xchg
push
sub
test
les
add
push
or
mov
add
push
popa
adc
test
sti
dec
pushf
add
push
adc
pusha
or
ret
pop
push
ja
sbb
pop
ret
daa
mov
in
jg
jb
iret
xchg
cmp
pop
mov
ror
and
jmp
movs
rol
cld
popa
sub
pusha
jo
lock
(bad)
pop
gs
dec
loopne
data16
call
pop
ficomp
leave
fcomp
xor
fmul
dec
sub
or
out
pop
xor
daa
push
xchg
xchg
(bad)
shl
adc
mov
cmp
mov
adc
(bad)
sub
es
xor
pop
bound
jbe
jmp
mov
or
and
dec
out
xchg
sub
fnsave
xchg
cmp
add
sti
add
xlat
jle
cwde
stos
lea
cmp
scas
into
ds
shl
loopne
inc
retf
mov
ret
mov
push
mov
mov
pushf
shl
xchg
add
add
int
(bad)
mov
mov
add
dec
jne
ins
add
cmp
push
pop
call
mov
ds
or
ds
cmp
imul
jo
inc
add
adc
fist
sub
ds
adc
sub
push
xlat
das
outs
enter
sbb
mov
cmp
adc
jge
in
or
or
lock
ins
and
loopne
push
pop
push
add
jo
repnz
fcom
xor
jge
xor
ins
push
aad
inc
inc
test
imul
jno
adc
lds
push
xor
pusha
pop
xor
sar
pushf
sub
mov
inc
or
pop
test
inc
icebp
stc
sbb
std
cmp
add
in
or
sub
aaa
sbb
in
push
in
cmp
push
mov
mov
and
add
push
inc
jo
test
sbb
std
(bad)
jnp
or
clc
nop
outs
mov
into
cmp
into
mov
mov
fnstenv
inc
es
mov
jbe
out
sbb
(bad)
inc
out
outs
and
inc
and
add
fisttp
add
popf
movs
test
jne
cmp
mov
(bad)
sbb
loopne
jb
in
pop
push
jmp
push
jge
and
adc
fadd
lock
loop
or
bound
inc
sti
pop
and
pop
pop
loop
and
dec
lds
ja
mov
rol
jo
xchg
sbb
sahf
inc
or
jp
mov
xor
cmp
lock
pop
add
push
mov
bound
and
mov
dec
mov
test
jo
and
and
or
addr16
les
mov
jns
push
ret
inc
jp
lock
or
push
xor
mov
mov
pop
mov
mov
adc
mov
fstp
inc
mov
and
and
push
in
shl
adc
add
fadd
outs
div
push
push
adc
jbe
das
mov
adc
sti
adc
xchg
inc
pushf
push
add
push
movs
cmp
out
or
dec
add
push
push
fistp
mov
push
ss
or
in
imul
push
push
movs
es
dec
pusha
push
push
dec
pop
out
mov
xor
xor
sub
cmp
in
jl
fiadd
push
enter
popa
add
push
xor
mov
and
inc
mov
inc
and
fisttp
adc
push
pushf
bound
pop
outs
shr
push
adc
xchg
and
jnp
sti
fisubr
inc
mov
jl
push
aam
push
fmul
call
push
push
nop
imul
test
mov
ss
push
dec
mov
sar
jae
jnp
or
ja
(bad)
enter
hlt
fs
mov
ror
in
add
and
dec
fsubr
mov
push
push
jnp
mov
aaa
xor
add
add
mov
push
or
imul
dec
outs
xchg
cmps
stc
mov
sub
es
adc
or
out
push
outs
jb
sub
or
iret
int
jb
mov
out
outs
inc
gs
jne
je
push
popa
dec
outs
inc
xor
data16
gs
xor
popa
xor
je
(bad)
pop
xor
push
outs
arpl
je
ins
ins
dec
jbe
push
popa
inc
cmp
inc
push
jb
mov
jae
popa
sahf
outs
aam
outs
js
cmp
pop
mov
out
cmp
inc
dec
ins
jo
imul
jecxz
dec
inc
push
jae
dec
popa
ins
sub
push
sub
das
mov
sbb
jne
out
cmp
xor
push
idiv
pop
push
inc
jae
outs
jbe
fld
(bad)
add
add
bound
add
lods
push
push
sbb
dec
retf
xchg
mov
add
and
xchg
daa
add
cs
push
dec
repnz
dec
cs
jle
pop
fs
sub
sub
clc
arpl
jo
lock
add
adc
int3
mov
push
gs
data16
out
pop
(bad)
jae
sahf
jns
sbb
fdiv
adc
adc
add
pop
and
fadd
sub
inc
mov
push
outs
arpl
and
add
jo
cdq
push
mov
or
push
jb
gs
imul
adc
cdq
add
add
jbe
outs
add
or
inc
inc
outs
popa
bound
loope
and
mov
push
scas
pop
sar
pop
movs
sbb
shl
outs
aaa
xchg
jne
leave
(bad)
or
cwde
mov
dec
inc
inc
fwait
(bad)
and
or
or
mov
or
mov
xchg
bound
not
push
cmp
push
ror
xchg
cmp
add
rcl
fist
jmp
je
mov
push
push
movups
push
in
xor
dec
add
enter
or
inc
mov
int3
or
mov
(bad)
cld
daa
sbb
add
push
or
test
mov
inc
or
pop
add
inc
dec
cwde
mov
inc
dec
or
or
mov
sub
daa
js
xchg
xor
lock
adc
sub
add
jg
sub
scas
or
add
sub
test
cmp
dec
dec
push
cmp
xchg
push
retf
repz
out
jbe
cmp
leave
mov
dec
hlt
and
add
je
lea
mov
or
movzx
and
into
or
adc
mov
sti
fld
out
inc
movs
cwde
mov
out
xor
mov
adc
and
xchg
clc
mov
sbb
unpckhps
std
sub
rcl
into
pop
jne
ror
xchg
push
subps
add
push
xor
adc
mov
add
jle
ror
call
jae
jns
cli
sar
adc
jo
mov
add
shl
mov
sub
or
lock
idiv
je
(bad)
call
mov
inc
ror
(bad)
je
test
jle
push
inc
in
setle
push
jne
(bad)
xchg
sbb
jne
cld
jecxz
dec
jmp
ins
jo
pop
ret
jno
adc
cmp
xchg
adc
(bad)
dec
pop
jne
pop
enter
sti
and
mov
jmp
es
mov
mov
mov
int
xchg
mov
add
push
push
cmp
cld
adc
jg
jle
mov
out
push
or
push
add
mov
repz
pop
xchg
add
mov
jbe
out
inc
(bad)
ss
push
mov
dec
pop
mov
in
sbb
pop
mov
mov
add
or
es
and
fisubr
or
hlt
scas
xchg
arpl
push
mov
push
ins
fs
test
hlt
xchg
lods
adc
push
pop
out
and
hlt
aas
sbb
push
mov
ret
inc
dec
add
push
adc
ret
(bad)
hlt
sahf
dec
add
out
add
cmp
sub
loop
add
rol
pushf
call
call
cmp
sbb
jmp
push
out
pop
cmp
sbb
xchg
push
add
(bad)
call
cld
jle
and
cld
jmp
ds
push
mov
das
mov
jnp
pop
lock
inc
sbb
dec
sub
mov
adc
jbe
sub
mov
jmp
add
push
push
jbe
lahf
mov
ss
test
push
mov
push
fst
add
test
jle
add
push
add
xor
cwde
test
cld
ins
sub
mov
stos
scas
loop
push
mov
clc
dec
daa
inc
mov
sbb
clc
dec
mov
push
mov
aad
cmp
jp
jne
call
jl
and
lds
sub
and
(bad)
or
sbb
mov
jmp
add
cmp
add
std
or
sbb
aas
(bad)
cmp
pop
call
jno
shr
adc
push
push
mov
xchg
aaa
xor
data16
mov
sar
mov
jne
cmp
lea
pop
cwde
mov
inc
stos
(bad)
js
fild
into
ror
fdivr
jae
fsubp
push
push
mov
and
fwait
aam
ret
dec
daa
inc
inc
push
inc
(bad)
push
fstp
cmp
dec
pop
mov
pop
js
add
(bad)
jne
adc
pop
push
out
push
fld
rol
aaa
bound
cmp
pop
rcr
jb
jbe
mov
scas
pop
sbb
push
aas
sar
or
pop
fucomp
mov
mov
pusha
das
xchg
push
loopne
add
pop
pop
movs
sub
push
pop
push
pusha
push
pop
ret
xchg
frstor
mov
dec
lea
clc
les
push
jne
inc
outs
ffreep
pusha
lea
dec
std
add
shl
mov
or
outs
mov
push
add
push
or
cli
push
shl
push
ror
dec
je
das
push
popa
jae
or
in
xor
outs
mov
adc
or
lods
xchg
ins
or
inc
loope
mov
shr
add
sbb
inc
lock
or
int3
repz
add
or
data16
(bad)
fcom
add
add
inc
mov
add
push
cli
lahf
inc
js
pop
mov
mul
and
into
inc
cli
or
sbb
sub
adc
push
inc
sub
push
and
mov
pop
sbb
(bad)
xor
test
mov
scas
inc
dec
scas
mov
bound
retf
lea
cmp
pop
add
or
sub
mov
icebp
test
cwde
loopne
xchg
adc
mov
mov
cmp
mov
jbe
fs
adc
jns
add
ja
mov
pop
inc
or
adc
test
adc
adc
iret
add
add
push
or
loop
sub
or
pusha
and
mov
sub
mov
scas
push
push
pop
bound
scas
scas
mov
sbb
nop
popf
mov
add
push
sub
imul
lods
out
(bad)
dec
cmps
inc
cmps
imul
push
dec
or
pop
aas
mov
pop
sub
push
jmp
dec
out
gs
push
pop
leave
shl
bound
lock
push
fmul
ins
loopne
adc
jecxz
outs
push
dec
ja
sbb
rol
mov
mov
sub
xchg
test
pop
es
das
and
mov
push
or
cmp
jne
mov
cmp
cmp
adc
push
or
addr16
sub
aam
dec
cli
lods
arpl
ins
dec
ret
mov
sbb
je
stos
add
pop
cmp
push
(bad)
sub
sub
push
inc
xor
pop
cld
jno
ret
push
xor
push
ret
aaa
inc
or
and
test
inc
push
les
dec
test
adc
imul
add
and
push
jno
out
es
das
in
scas
sbb
sbb
scas
es
push
pop
stc
mov
inc
outs
outs
ins
adc
add
cmp
jbe
mov
inc
push
and
xchg
or
lds
aas
xor
scas
fiadd
ret
mov
aas
fcomp
or
rol
mov
and
rol
cld
lahf
sbb
aas
nop
add
(bad)
loope
pop
aaa
jg
xor
or
ja
pop
out
(bad)
retf
fimul
or
dec
cs
js
addr16
jb
mov
ret
adc
sbb
addr16
jne
adc
or
fsub
or
push
int
mov
jne
push
mov
imul
imul
jae
xchg
test
or
jae
dec
mov
(bad)
xchg
and
xchg
es
jns
(bad)
daa
cmp
in
rcr
ins
jo
xchg
dec
lods
sti
repz
add
push
outs
jo
test
data16
inc
and
inc
add
jne
ins
inc
movs
xchg
and
pop
std
pusha
je
js
mov
aaa
xchg
sub
sbb
add
xor
cmp
das
outs
push
sbb
xor
cmp
add
jno
scas
or
dec
bound
jae
pushf
xchg
jmp
mov
ror
enter
xchg
pop
cdq
imul
add
scas
leave
sti
or
fsubr
xchg
dec
sub
aam
inc
inc
mov
pop
dec
jb
outs
fs
test
aaa
test
loopne
sub
test
adc
mov
or
xor
prefetch
cmp
movs
mov
pop
aaa
lock
shr
jp
test
cli
push
(bad)
pop
and
sub
mov
mov
adc
iret
hlt
xchg
(bad)
sar
test
and
add
xor
inc
or
adc
dec
or
mov
fild
inc
arpl
ret
jmp
dec
or
or
ja
add
bound
and
xor
sub
mov
scas
test
out
popf
cmc
jmp
add
inc
cmp
ror
inc
cmp
pop
out
xchg
lods
sbb
add
sahf
lods
test
out
push
stos
sbb
push
rcr
dec
inc
outs
cmp
retf
push
ror
lock
ss
inc
pusha
lods
iret
pop
daa
xor
push
xchg
out
repnz
sbb
cmp
sub
xchg
setbe
out
mov
dec
test
sub
hlt
ja
loope
jmp
js
xchg
mov
add
jnp
dec
pushf
pop
in
inc
cmps
push
sub
(bad)
stc
push
fsubr
mov
pop
(bad)
pop
jae
add
ins
xlat
inc
push
and
jo
fsub
and
jbe
(bad)
or
sub
ficom
xlat
xchg
test
cmps
jl
sub
dec
sbb
clc
popf
pop
xor
pushf
inc
dec
jne
ja
cmps
pop
push
in
sub
mov
pop
or
add
jae
sub
outs
daa
push
mov
fst
push
pop
pop
jno
or
xor
subps
mov
loopne
cmps
add
leave
pop
xor
pusha
ret
add
pop
mov
mov
mov
mov
add
out
jge
cmp
jno
rcl
adc
mov
ja
xchg
push
sub
push
lea
push
lea
push
xchg
pop
pop
adc
mov
push
out
(bad)
mov
cmp
pop
arpl
pop
pop
xchg
sub
or
pop
retf
xchg
xor
xchg
add
inc
push
or
mov
xor
rcr
and
or
add
das
xor
push
shl
mov
add
jo
out
fsubr
mov
lods
inc
in
jnp
inc
loopne
add
les
or
add
inc
out
sbb
xor
rol
aas
cmp
jae
dec
add
jo
dec
cmovle
adc
xchg
inc
mov
xor
ins
imul
add
imul
nop
or
sbb
xchg
mov
cmp
pop
je
jo
in
xlat
jns
outs
fs
lods
or
scas
mov
loope
or
push
jne
test
or
mov
out
int
call
push
pop
bound
aad
add
or
cmp
inc
dec
cmp
add
adc
in
sbb
add
pop
or
sti
push
xor
scas
(bad)
xor
(bad)
add
cmp
shl
cs
adc
les
or
loopne
cld
fs
and
adc
fnsave
sbb
xchg
sbb
aas
sbb
push
adc
dec
outs
jae
stos
aas
ja
xchg
cwde
sbb
push
cld
adc
fxam
ds
and
push
xchg
sahf
or
or
dec
lahf
repz
fidivr
cmp
adc
push
inc
push
inc
push
dec
daa
and
iret
dec
inc
sbb
dec
push
aam
push
dec
hlt
inc
sar
inc
push
hlt
add
int3
inc
push
push
lea
es
outs
or
push
sub
or
add
fcom
pop
sub
and
and
fcomp
arpl
sbb
xchg
and
ins
out
js
cli
jp
push
and
inc
or
adc
mov
jnp
push
sub
inc
gs
adc
inc
sub
sar
pop
sbb
fbstp
popaw
jae
loopne
add
hlt
add
mov
outs
popf
je
push
into
or
sbb
add
sub
repnz
sub
add
ins
sti
push
clc
outs
mov
dec
ss
push
ltr
adc
adc
jecxz
add
sbb
out
jo
sbb
adc
add
xor
mov
test
inc
push
add
mov
mov
leave
and
add
cmp
mov
adc
add
outs
arpl
js
jp
xchg
cmp
nop
add
gs
shl
xor
sub
xor
add
(bad)
(bad)
xor
adc
cmp
mov
inc
mov
sbb
frstor
xor
mov
adc
and
and
xchg
mov
(bad)
and
xor
repnz
and
popf
int3
frstor
aaa
inc
cmp
scas
push
inc
cmp
loopne
iret
scas
and
mov
push
fs
add
jne
pop
xor
fnstsw
fisttp
pop
push
add
mov
inc
sbb
lds
sbb
adc
pop
adc
pusha
das
mov
pop
pop
cmps
sbb
pop
jne
jnp
inc
fcom
mov
xchg
inc
stos
push
mov
and
mov
iret
push
mov
push
out
lock
cld
or
data16
or
and
cmp
and
les
dec
push
and
dec
mov
or
mov
aaa
dec
sub
adc
mov
lea
or
jmp
dec
test
fiadd
mov
cmp
adc
ror
sti
out
jnp
jle
sub
mov
or
clc
and
adc
ins
lock
xchg
out
dec
ret
cmp
cmp
jo
in
(bad)
daa
pop
cmp
test
fnstenv
or
dec
sub
dec
test
daa
add
cld
push
fst
xchg
out
inc
scas
sbb
push
inc
push
popa
clc
popa
sbb
jmp
jmp
xor
enter
push
mov
inc
shr
push
jne
gs
fld
pop
js
int3
push
lea
xchg
mov
dec
les
add
mov
retf
loopne
into
cmp
mov
pop
jmp
inc
lods
xor
es
into
inc
leave
xor
xor
push
imul
dec
xor
ret
iret
inc
jmp
scas
add
push
mov
ja
inc
pop
ins
pop
push
mov
pop
jne
pop
popa
or
das
int3
imul
idiv
xor
push
mov
sub
dec
fs
inc
jb
mov
dec
push
and
fiadd
outs
add
outs
shr
pusha
mov
add
clc
sub
daa
(bad)
or
mov
and
dec
push
add
inc
push
or
cmp
cmp
inc
lods
push
sbb
mov
jg
retf
xchg
or
dec
mov
and
adc
jge
cmps
nop
loopne
push
push
push
add
(bad)
aam
add
cld
sti
fs
shr
pop
gs
pop
xor
call
jbe
add
(bad)
adc
ins
inc
push
pop
test
or
add
fnsave
cmp
pop
mov
fstp
xchg
inc
inc
cwde
adc
dec
(bad)
int
enter
stc
inc
ins
popa
fimul
mov
inc
cwde
loop
mov
pop
push
lahf
(bad)
in
sbb
int
pushf
push
vsubpd
add
jle
in
mov
mov
pop
adc
(bad)
or
and
shl
out
sub
add
pop
adc
dec
pusha
aad
fnstenv
add
movs
gs
daa
out
push
int
push
cwde
out
sbb
ins
sbb
add
cmp
aad
repnz
ja
jo
aad
xchg
test
mov
inc
stos
jne
adc
push
jge
pinsrw
mov
retf
shr
imul
inc
add
cmp
xchg
push
or
inc
ins
call
es
add
bound
xor
push
pusha
ficom
and
cmp
or
fmul
and
dec
inc
xor
dec
mov
ins
jmp
inc
or
jle
push
test
je
cmp
inc
and
mov
cmp
mov
aas
pop
pop
(bad)
fcmovbe
dec
jbe
(bad)
push
add
or
int3
jns
out
and
ss
cmp
add
out
es
push
jp
mov
push
mov
push
scas
test
ja
enter
xchg
scas
fnstcw
push
push
inc
adc
test
and
dec
xor
ds
dec
pop
add
xor
in
jnp
xchg
xor
sub
cmp
in
mov
dec
scas
fcmovnu
add
sahf
sbb
pop
sub
dec
rcr
add
ins
adc
adc
inc
inc
or
cmp
push
xchg
add
jbe
shl
dec
push
dec
push
retf
xor
out
out
dec
hlt
dec
add
jbe
adc
(bad)
das
adc
or
pop
scas
or
pop
(bad)
cmp
arpl
fs
gs
mov
cmps
inc
sub
sub
loopne
iret
and
or
imul
and
mov
cs
mov
outs
imul
and
jae
sbb
leave
mov
stos
add
lods
or
xor
outs
add
mov
jp
push
fdivr
xchg
js
add
mov
or
mov
arpl
ins
ins
xor
shl
pop
in
xor
jmp
lods
mov
or
outs
jnp
popf
pop
icebp
mov
sti
cdq
lahf
(bad)
mov
adc
pushf
je
es
dec
adc
cwde
rol
mov
cld
pop
xchg
js
lea
(bad)
and
and
aam
lods
stos
test
mov
nop
mov
pusha
mov
repz
push
clc
(bad)
lods
scas
xor
mov
cmp
push
test
jmp
mov
dec
cmp
jl
test
jbe
stos
mov
movs
out
cmc
outs
mov
js
mov
pop
aas
cmp
mov
cmp
xor
xchg
ret
out
or
xchg
add
jle
in
lods
out
es
das
ror
test
popa
push
fldenv
test
ins
repnz
out
cmp
aad
push
mov
jo
jnp
imul
push
inc
jle
push
stos
in
cmp
cmp
jo
inc
cmp
or
xor
add
sbb
push
mov
mov
jmp
sbb
in
ins
cmp
dec
dec
dec
popa
outs
test
push
xchg
rol
jbe
nop
pop
fs
add
sbb
jmp
mov
or
inc
push
loop
retf
ror
movs
cmps
popf
jb
pop
aas
fisttp
xchg
aas
inc
lahf
adc
outs
inc
ins
cmps
ins
dec
lods
imul
sub
xlat
ret
test
test
jg
xchg
or
push
push
ja
jne
mov
dec
jb
or
push
lea
or
fisttp
in
call
ja
mov
mov
(bad)
in
jle
adc
sub
sub
mov
ret
pop
ret
push
pop
push
cmp
jne
cmp
lods
jne
xor
mov
jl
jle
test
sub
lock
jmp
sub
inc
inc
mov
arpl
cmp
dec
add
mov
push
push
clc
push
sub
hlt
mov
push
xor
mov
cwde
and
je
adc
pop
push
sbb
inc
out
and
ffree
mov
push
cld
jg
add
bound
pop
scas
cmp
in
in
push
adc
xchg
and
mov
int
ss
push
xchg
push
aam
push
xlat
push
jmp
cs
enter
xchg
mov
sti
ficom
sbb
ss
push
dec
mov
sar
xor
push
fs
(bad)
enter
lahf
xlat
jl
hlt
fs
push
ror
lock
and
dec
dec
and
loopne
cs
push
pop
pop
inc
adc
xlat
pop
pop
and
push
jmp
dec
outs
jne
push
hlt
das
adc
dec
jae
mov
sti
ja
inc
push
push
dec
push
outs
inc
lock
inc
(bad)
mov
jnp
pop
retf
cli
jmp
leave
cmovne
inc
call
jno
xor
and
cdq
inc
add
outs
inc
bound
punpcklwd
adc
mov
bound
dec
add
rcl
vpmullw
jne
add
mov
pop
cdq
or
or
mov
inc
test
mov
xor
xor
push
sbb
or
add
mov
jmp
cmp
push
add
loopne
das
scas
push
push
mov
les
pop
pop
push
push
push
jo
xlat
pop
inc
outs
fnsave
mov
mov
sbb
inc
sbb
bndstx
sbb
sbb
inc
sbb
inc
mov
sub
inc
sub
mov
fld
mov
pop
fmul
fld
or
lea
cs
pop
add
out
and
gs
push
push
push
jbe
push
outs
xor
pop
enter
jbe
and
adc
sub
xchg
cmp
add
push
xor
push
add
mov
btc
hlt
mov
xchg
jge
call
aas
or
aas
mov
lods
mov
cwde
push
push
fimul
jg
test
sub
push
or
mov
dec
idiv
movs
adc
out
shl
sub
push
lock
push
sub
out
mov
push
daa
xor
or
adc
(bad)
frstor
pop
adc
inc
push
popa
or
arpl
add
rol
xchg
dec
and
inc
inc
outs
jo
jb
jp
sbb
sahf
cmp
mov
xchg
arpl
add
add
enter
dec
push
lock
and
ret
jnp
adc
mov
or
mov
pop
xchg
push
addr16
bound
cmps
pop
daa
popa
or
mov
inc
in
sub
(bad)
sub
icebp
push
dec
pop
pop
or
cmp
loopne
jo
(bad)
jl
rol
mov
pusha
cwde
mov
inc
dec
add
fs
push
push
dec
ret
sbb
and
lods
popa
xor
pop
aad
push
adc
cmp
dec
add
inc
cmp
sar
xlat
mov
inc
pop
ja
mov
fld
pop
ins
das
xchg
push
xchg
hlt
out
aaa
leave
sub
push
lahf
out
ficomp
push
pop
pusha
add
inc
adc
rol
mov
daa
int3
(bad)
push
fsubr
push
(bad)
ror
(bad)
sbb
loopne
xor
lock
pop
adc
sar
ds
push
and
jo
add
fs
xchg
lock
inc
outs
inc
pop
inc
adc
lods
or
mov
push
push
dec
daa
xchg
mov
inc
add
mov
imul
imul
sbb
or
jmp
mov
xchg
cmps
mov
and
ins
pop
jo
cmps
jns
cmp
fmul
aam
cmp
test
mov
and
dec
dec
ins
mov
lea
mov
pusha
or
leave
ins
xchg
sub
adc
jae
fcom
inc
lods
add
mov
mov
or
and
inc
pop
aam
ret
cmp
and
inc
push
call
xchg
cli
ja
sub
or
or
cwde
jmp
neg
jbe
sub
call
mov
or
mov
arpl
jmp
jp
(bad)
fisttp
add
es
or
mov
or
xor
iret
div
and
cdq
push
push
xchg
or
push
inc
push
cwde
mov
arpl
hlt
call
(bad)
outs
ins
jo
sub
push
add
ins
ins
adc
daa
cmps
sub
les
fcom
cmps
mov
das
ds
xchg
add
scas
mov
sub
xor
ins
aaa
pop
movs
gs
sar
push
dec
retf
outs
add
rsqrtps
unpckhps
lods
aad
push
rcl
pop
stos
jbe
pop
sti
push
add
mov
popa
das
cmp
loope
sahf
invd
push
pcmpgtb
jo
inc
sbb
adc
push
mov
jb
add
xchg
sub
add
push
and
je
(bad)
pop
loop
push
rcr
aas
ins
cdq
jmp
and
adc
daa
add
ins
add
xchg
push
movs
push
inc
(bad)
ins
add
push
(bad)
cmp
pop
or
cmps
push
cdq
test
sub
test
xor
push
mov
pop
(bad)
or
imul
push
xor
dec
loop
sbb
adc
jns
ins
adc
adc
mov
sar
push
stos
mov
mov
fwait
rcl
popa
push
adc
test
fwait
adc
ds
rol
outs
dec
dec
inc
popa
jo
or
inc
pop
add
mov
jae
test
adc
inc
dec
sbb
dec
and
or
xor
in
(bad)
jmp
mov
jo
xor
xchg
adc
and
icebp
aam
fild
and
scas
adc
fstp
pop
rcl
adc
fistp
fldcw
pop
imul
test
pop
or
mov
adc
push
lea
pop
and
adc
test
dec
jae
cmp
nop
jmp
ja
xchg
outs
packuswb
adc
cmp
jbe
cmp
pop
or
(bad)
add
pop
push
lea
mov
and
xor
dec
inc
scas
lock
push
cs
add
hlt
das
mov
add
inc
aaa
sub
sub
push
lea
repnz
dec
push
cmp
out
add
movzx
and
cmp
jne
in
clc
jg
inc
inc
cmps
clc
adc
jg
mov
sbb
jnp
cmp
jne
(bad)
in
sbb
add
dec
pop
aas
add
adc
add
jne
push
add
dec
inc
(bad)
xlat
dec
retf
loopne
shl
push
std
mov
inc
mov
cs
in
(bad)
sbb
mov
pop
stos
inc
rol
fsubr
xchg
sti
cmp
ret
outs
out
push
jbe
pop
pop
push
push
retf
ror
outs
repz
mov
or
pushf
push
mov
stos
pop
cmp
xchg
pop
mov
pop
pushf
call
std
aaa
jo
or
sbb
outs
jo
cmp
push
scas
sahf
ss
rol
nop
sub
xor
in
mov
mov
mov
fdiv
or
(bad)
int
mov
(bad)
iret
add
xchg
pop
mov
pop
dec
out
mov
jle
cmp
add
jle
xlat
mov
pop
or
push
neg
sbb
push
or
push
inc
push
fisubr
inc
cs
daa
dec
imul
cld
into
and
inc
jle
mov
sub
ret
cs
push
ret
lds
inc
(bad)
xor
and
inc
mov
cmp
call
fdivr
sar
ret
lods
mov
icebp
test
je
mov
in
mul
clc
out
xor
or
jne
call
pusha
pop
or
das
and
pushf
xor
sub
xor
pushf
lahf
(bad)
xor
add
outs
push
and
sub
test
outs
add
popa
(bad)
adc
add
or
jbe
ret
inc
xor
nop
push
mov
dec
mov
scas
mov
(bad)
shr
fdivr
fisub
jo
add
ret
mov
cdq
xor
lods
das
sahf
hlt
dec
inc
setg
mov
pop
bound
lea
(bad)
push
movs
fs
js
repz
out
sub
nop
xor
adc
imul
add
ja
ins
inc
imul
(bad)
jmp
imul
outs
inc
jne
push
xor
adc
outs
outs
imul
imul
sub
mov
push
pop
(bad)
sbb
jne
add
hlt
push
out
outs
in
loopne
push
dec
inc
add
push
jno
xor
inc
push
jmp
cmp
hlt
sar
ret
push
not
test
or
bswap
rsm
dec
or
add
sub
mov
inc
inc
outs
arpl
dec
push
rcr
gs
sub
je
outs
cmp
bound
les
cmp
add
fwait
mov
pop
and
stos
and
int
sbb
dec
outs
jae
sub
xor
xor
fisubr
push
jae
jb
pop
add
sbb
call
sub
sub
lock
je
cmp
mov
push
jp
add
js
in
mov
fst
cli
sysexit
cmp
jns
imul
and
movq
out
inc
sub
inc
jbe
lods
or
or
add
fmul
add
js
sub
inc
inc
xor
dec
add
jl
fisttp
cmc
mov
ins
sub
and
pop
jp
dec
or
mov
mov
inc
mov
pop
mov
int3
and
in
pusha
inc
outs
fs
or
test
jecxz
fs
les
dec
sbb
ins
imul
rol
outs
mov
out
ja
sub
ret
or
inc
mov
cwde
adc
push
and
not
arpl
xchg
mov
clc
ins
js
inc
jns
inc
outs
outs
imul
dec
aam
mov
jnp
mov
mov
jo
aas
pop
add
cmp
mov
es
xlat
sub
add
in
mov
pop
fistp
adc
into
adc
dec
sub
sbb
or
mov
outs
xor
jo
sbb
jne
mov
test
add
or
xlat
(bad)
out
rol
pop
inc
push
pop
or
or
add
add
loope
xlat
add
jb
test
cmp
sar
adc
cmp
push
add
push
sti
jle
inc
xchg
sub
out
add
inc
or
jmp
inc
push
add
test
sbb
add
inc
inc
mov
add
and
mov
and
es
lods
jo
rol
lods
fisubr
push
or
lods
xor
push
les
add
cmovne
pop
jmp
js
movs
xlat
pop
sub
and
sub
lea
push
pop
mov
aam
icebp
pop
clc
jl
lock
enter
pop
mov
call
mov
xchg
pop
and
jle
cmps
cs
jmp
popa
sub
pop
mov
push
jle
mov
sar
inc
mov
mov
loope
add
mov
lea
sub
std
ret
and
jmp
mov
movzx
cmp
out
(bad)
aas
je
or
je
pop
jne
inc
xchg
enter
lock
das
add
jle
pcmpeqd
pop
mov
scas
(bad)
cmp
cmc
sub
push
mov
sbb
test
and
xchg
rcr
je
les
mov
sub
dec
call
pop
add
mov
movs
sbb
and
cmp
mov
mov
ss
fdiv
clc
or
lock
jle
push
xor
push
mov
dec
mov
sar
and
sbb
jle
(bad)
push
lea
mov
call
sub
sbb
sbb
inc
push
ret
inc
fistp
inc
pop
and
push
ds
or
add
mov
add
(bad)
or
daa
push
in
push
sbb
adc
xchg
outs
mov
pusha
movs
pop
xchg
pusha
fst
mov
sar
fwait
lock
and
xor
inc
data16
in
push
leave
sub
or
pusha
dec
pop
mov
sub
aas
idiv
aas
push
xlat
cmp
jle
out
in
cmp
push
mov
out
push
out
in
pop
iret
ffree
or
call
aas
aas
inc
mov
sub
imul
(bad)
inc
imul
sahf
loopne
adc
sar
push
div
dec
adc
ss
je
push
fisttp
adc
mov
add
ins
in
pop
jmp
jmp
add
leave
fmul
add
xor
pusha
inc
and
inc
sbb
daa
stos
outs
or
push
inc
mov
mov
je
lea
pop
jmp
dec
xlat
push
ret
neg
pop
add
idiv
push
jb
cmp
loopne
rcr
mov
pop
pop
pop
push
or
inc
shr
ror
mov
push
and
rol
leave
div
xor
jmp
and
js
jmp
test
in
add
add
mov
push
popf
pop
hlt
cli
jae
and
push
(bad)
push
retf
jecxz
xchg
mov
jb
adc
jmp
shr
jo
mov
and
add
xor
pop
push
data16
xor
mov
pop
push
clc
cld
out
ja
sti
and
ins
dec
popf
pop
jmp
jbe
out
ror
jb
or
hlt
fadd
out
fs
mov
popa
das
dec
push
add
(bad)
jbe
jle
xchg
jns
clc
mov
in
scas
cdq
bound
adc
sbb
inc
jmp
sbb
push
test
jmp
rcr
shr
and
jge
xchg
imul
pusha
std
cmp
movs
add
sbb
add
das
ins
pop
in
or
icebp
add
mov
push
xchg
adc
xor
or
xor
leave
inc
pushf
int3
aaa
inc
adc
jmp
jmp
cmp
jo
jge
sbb
int3
and
sar
fucomip
loope
icebp
sbb
add
mov
popa
sbb
cmp
pop
mov
or
popa
push
cdq
sahf
sbb
inc
popf
mov
inc
jne
or
jnp
adc
inc
dec
push
sub
ds
and
inc
jnp
jge
jl
pop
repnz
inc
mov
aas
psubusb
iret
out
add
and
adc
clc
mov
ret
push
xor
out
(bad)
sub
(bad)
in
jmp
mov
loopne
test
fsub
lea
mov
push
ins
push
mov
push
or
stc
lods
pop
movs
jo
and
add
inc
inc
loop
not
mov
adc
push
mov
mov
and
pop
clc
and
adc
jbe
inc
rcr
adc
scas
cmc
jo
jp
lock
pop
pop
movs
pushf
fdivr
repnz
and
dec
aaa
push
cmp
in
out
push
push
lock
or
add
and
call
ret
mov
sbb
jnp
dec
jne
mov
mov
xor
push
and
inc
sbb
adc
ja
mov
das
(bad)
xor
mov
neg
push
xchg
sub
loop
aad
mov
call
adc
and
pop
mov
adc
pop
in
adc
mov
pop
movs
pop
sbb
or
push
imul
push
jge
stos
pop
mov
bound
or
ret
stos
int3
xchg
add
ret
movs
cwde
xor
push
cmp
daa
xchg
cld
push
lock
and
mov
dec
imul
sar
shl
enter
loopne
add
fstp
ja
inc
es
in
sub
sbb
jmp
sti
ret
sbb
into
and
adc
test
mov
test
in
shl
or
lods
push
scas
xchg
inc
inc
sbb
dec
adc
ins
mov
lock
lock
icebp
mov
xor
xlat
add
or
jne
lea
push
jp
mov
hlt
cmp
mov
mov
shl
or
mov
dec
push
lock
jg
test
fwait
je
and
je
test
je
ss
sub
sbb
mov
dec
pop
push
add
pop
cs
cmp
jne
ins
div
jo
sbb
push
inc
arpl
or
dec
mov
ss
in
shr
or
movs
psubsb
shr
in
sahf
and
in
mov
aam
pop
je
dec
je
jmp
adc
loopne
pushf
lods
nop
test
cmp
and
push
in
pop
push
dec
jne
adc
xchg
xchg
xor
daa
xor
jg
and
loopne
jo
mov
out
xlat
sbb
push
rcl
call
jo
test
addr16
or
(bad)
and
sub
dec
push
add
ds
adc
(bad)
aaa
ja
ins
jne
push
pop
xchg
shr
fisttp
push
adc
data16
pusha
leave
mov
push
pop
inc
pop
push
mov
cmp
xor
mov
add
dec
xor
xor
push
ins
mov
push
retf
jnp
stos
xchg
or
ss
scas
mov
mov
mov
dec
add
push
mov
imul
push
hlt
add
or
inc
add
jmp
ja
sahf
fisttp
xchg
mov
cs
cld
push
sub
push
fcomi
xor
lock
and
sbb
fcom
push
dec
mov
sbb
movs
sub
ffreep
push
shr
lock
pop
jg
pop
pop
add
add
cli
add
sbb
jg
xor
inc
inc
js
imul
inc
cs
jo
outs
ins
jns
mov
add
out
or
sub
(bad)
enter
arpl
inc
add
inc
push
popa
add
loope
ins
jne
fist
add
(bad)
jne
movzx
push
fnstenv
xchg
jo
or
inc
arpl
pop
pop
retf
add
popa
test
repnz
add
fs
pop
outs
rol
outs
push
dec
jp
push
dec
pop
int3
lar
cmp
or
pop
prefetch
add
cmp
adc
push
(bad)
add
lock
inc
fs
ins
push
xor
sbb
sub
pop
inc
inc
je
outs
jns
add
mov
mov
pop
pusha
push
mov
ret
push
and
or
or
inc
in
ja
jo
add
jnp
cmp
mov
xchg
lods
sub
mov
inc
or
adc
cwde
mov
adc
shl
nop
inc
ins
in
cmc
movs
mov
enter
fisttp
gs
add
std
mov
jbe
mov
mov
nop
xor
pop
or
lahf
push
cmp
inc
in
int
pusha
mov
push
dec
test
and
mov
call
xchg
test
and
and
and
cmp
or
push
pusha
cwde
add
cmps
es
dec
or
mov
jae
dec
dec
xchg
dec
xor
cmp
xchg
add
dec
jne
jno
mov
aad
xchg
pop
lea
fst
or
sbb
popf
psrlw
stos
add
sub
stos
add
jnp
add
sub
ds
lahf
xchg
int3
int
clc
dec
popa
js
addr16
inc
sbb
pop
ror
jo
fs
xchg
and
test
jmp
cmp
add
xchg
xor
pop
arpl
xor
xchg
or
fdiv
sbb
xchg
in
das
or
add
or
(bad)
rcr
mov
js
cmc
push
test
test
push
xchg
sbb
pusha
push
push
and
and
mov
in
pop
mov
push
dec
outs
fs
dec
data16
jp
adc
fadd
jo
push
pusha
mov
fadd
imul
or
out
jae
cmp
pop
cmp
xor
pop
data16
add
jb
cmp
add
inc
jne
add
lods
adc
mov
dec
inc
mov
or
daa
scas
lds
lock
(bad)
movq
or
cmp
arpl
cmps
ficomp
or
scas
test
inc
add
mov
ret
test
fisubr
push
js
pop
adc
push
pop
sbb
jns
xlat
push
pop
push
pusha
add
inc
adc
rol
jno
das
or
adc
sti
inc
movs
aaa
xchg
lock
sub
inc
push
push
dec
outs
arpl
adc
mov
jo
pop
sub
push
sub
mov
xor
nop
ror
leave
leave
enter
mov
loope
mov
psubusw
lea
jo
sbb
rcpps
sbb
pop
outs
adc
xor
xchg
std
pushf
push
cmp
xor
arpl
and
cmp
rep
xor
out
add
jb
add
jp
out
and
call
adc
adc
and
adc
add
ins
popa
mov
dec
ins
pusha
add
mov
or
in
jg
or
test
test
and
stos
fbld
inc
stos
cmp
iret
cmps
or
sbb
test
adc
adc
push
dec
fist
mov
pop
fwait
pop
popf
mov
movs
sbb
cmp
inc
add
pop
or
mov
sbb
sbb
mov
loop
sub
pusha
pusha
xchg
sub
lods
lods
adc
mov
jb
sbb
lods
push
arpl
loope
sar
add
div
inc
hlt
inc
imul
mov
push
mov
sbb
shr
or
push
lock
ret
jo
push
jl
add
inc
push
sub
bound
adc
ins
mov
jb
rol
rcr
or
inc
dec
jge
or
sbb
mov
mov
add
mov
lods
inc
dec
inc
jo
mov
xchg
ret
ror
addr16
icebp
cmps
loop
adc
mov
pop
in
mov
add
popf
mov
fdivr
xchg
lock
lahf
cmp
sub
push
fadd
xor
adc
sub
sub
in
add
pop
test
pushf
in
in
sub
xchg
loopne
jmp
dec
push
outs
or
inc
mov
pop
cmp
bound
and
loopne
fisttp
inc
adc
outs
push
inc
clc
jecxz
cmp
xchg
sbb
jo
clc
push
cwde
std
sub
mov
jmp
and
nop
dec
mov
test
cmps
out
add
jns
sbb
test
push
out
aas
push
cdq
sbb
mov
fadd
sahf
sbb
mov
jne
fisttp
xor
cmp
mov
ret
jmp
shl
ret
(bad)
mov
cs
cmp
fcomp
rcr
and
das
mov
add
clc
loope
ins
jmp
sbb
lea
mov
lock
popa
mov
pop
or
les
fdivr
mov
scas
test
pushf
mov
mov
lea
pop
sbb
leave
ins
fadd
xchg
rcr
or
mov
scas
add
outs
fcom
das
(bad)
das
jae
adc
pop
pop
icebp
arpl
ja
imul
arpl
mov
sbb
or
pop
jne
push
sbb
xor
sbb
retf
into
sub
cmp
lock
cmp
cmps
in
pop
outs
cmp
xchg
sbb
push
push
mov
adc
cmps
pop
aaa
mov
or
cmp
mov
xor
sahf
adc
mov
cmp
dec
test
jl
inc
xor
push
fild
pop
inc
dec
jne
addr16
out
or
(bad)
pop
arpl
shl
pop
fsubr
lock
push
xor
xor
ins
dec
add
xchg
fstp
fld
or
fwait
sar
mov
cmovle
fs
pop
ins
jo
push
scas
je
mov
lock
fisub
mov
adc
fsub
push
inc
add
sar
add
popf
cwde
cmp
pusha
cmp
int3
mov
(bad)
cmp
mov
inc
cmp
or
test
movzx
and
mov
inc
cmp
jle
dec
fs
mov
addr16
dec
test
pop
xor
cmps
adc
mov
inc
adc
fadd
or
inc
sbb
(bad)
js
sbb
adc
xchg
xor
int
adc
and
ins
and
or
add
mov
or
cmp
sbb
jo
pop
ror
inc
inc
and
dec
fistp
xcrypt-cfb
cmps
addr16
call
mov
dec
repz
add
cld
cmp
es
sub
shl
(bad)
add
pop
test
push
data16
or
mov
push
nop
rcr
push
pop
ror
rol
shl
(bad)
fcmovb
sub
push
or
pop
outs
hlt
push
or
dec
test
or
movs
stos
loopne
sbb
and
pushf
pop
cmps
loopne
xchg
adc
and
pop
sbb
loopne
or
adc
popa
retf
adc
lods
scas
add
sti
push
test
mov
ret
push
pop
fcom
sbb
xor
or
or
push
jle
test
retf
dec
(bad)
mov
and
cmp
and
mov
dec
jg
mov
pop
xlat
and
pop
pop
inc
jo
call
fadd
inc
mov
add
rcl
add
sub
not
enter
add
push
out
adc
out
pop
push
mov
and
push
je
xor
push
cmp
test
imul
pusha
xor
out
(bad)
loopne
and
scas
cld
mov
jno
or
jp
outs
(bad)
jne
push
pusha
je
add
push
les
loopne
jmp
loope
mov
mov
loopne
sub
pop
out
mov
sbb
and
mov
loopne
xor
push
(bad)
fidivr
shr
adc
and
mov
nop
inc
bound
add
mov
fst
data16
jg
pop
fs
sahf
movs
mov
pushf
lods
mov
mov
mov
mov
cmps
xchg
jo
mov
add
jmp
int
xchg
dec
cwde
jmp
cdq
mov
leave
outs
loopne
ja
xchg
adc
cmp
jne
push
jne
or
fadd
cmp
jl
sbb
test
push
push
fdivr
dec
icebp
fwait
or
ins
pushf
fdiv
(bad)
cmp
jge
(bad)
ins
nop
faddp
fstp
fwait
jmp
data16
sti
in
ret
data16
push
ss
sub
add
pop
fstp
fwait
in
call
add
int3
mov
mov
mov
je
push
out
pop
xchg
dec
fimul
add
fmul
fnstsw
sahf
push
ret
xor
add
mov
out
and
push
jp
and
pop
pop
xchg
fwait
test
mov
pop
(bad)
stos
pop
pop
in
push
loopne
push
inc
mov
jne
xchg
adc
adc
sub
mov
(bad)
in
mov
adc
adc
outs
daa
ins
xchg
jl
add
xchg
sub
cmp
mov
je
mov
jge
cs
pop
dec
jle
lea
fisub
xchg
mov
or
int
sbb
cmps
dec
clc
daa
jl
test
sti
sbb
or
popf
lea
mov
ins
sar
sbb
add
ret
jmp
out
adc
pop
inc
cld
sbb
pop
push
inc
add
fcom
or
aaa
in
stos
hlt
push
dec
add
sub
mov
inc
add
ins
ds
sbb
xchg
js
dec
rcl
push
icebp
mov
mov
xlat
push
mov
dec
(bad)
dec
inc
pusha
(bad)
jle
ins
add
or
dec
inc
push
xor
mov
add
xchg
mov
xor
push
inc
pop
inc
popf
popa
nop
fadd
neg
xor
pop
daa
fbstp
add
ret
pusha
mov
pusha
lahf
das
mov
dec
push
push
xchg
jbe
adc
repnz
add
aaa
or
push
retf
add
or
mov
lahf
lock
ror
or
adc
or
jne
pop
hlt
push
jg
mov
adc
push
adc
dec
sbb
lods
and
cmp
or
ins
pushf
mov
push
mov
rcl
movs
adc
sbb
pop
daa
mov
push
js
jne
cmc
and
or
(bad)
div
movzx
pop
sub
add
in
int3
cmc
mov
les
pop
ins
push
repz
sbb
or
or
cmp
loopne
cmp
adc
mov
jns
push
pop
mov
cmps
pop
mul
lods
test
or
adc
jmp
lods
inc
sbb
push
call
shl
mov
mov
inc
xor
inc
or
loope
mov
mov
loopne
sbb
inc
dec
add
adc
push
adc
inc
mov
push
ss
add
loopne
out
mov
xchg
sbb
xchg
daa
fcomp
push
jo
loope
xor
mov
hlt
fadd
outs
xor
ins
sub
lds
clc
push
push
ds
add
into
or
mov
push
idiv
xchg
cmp
or
add
push
sbb
(bad)
mov
or
add
jb
popf
mov
aam
test
fs
stos
pop
pop
les
mov
jnp
add
mov
pop
push
jmp
lds
aad
add
cmp
jl
aam
hlt
or
mov
push
or
in
cmp
push
enter
(bad)
inc
repz
dec
lsl
pop
xchg
mov
aaa
cs
or
xchg
add
lahf
xlat
das
movs
sub
add
xor
cwde
mov
or
in
push
push
sbb
leave
mov
add
xchg
loope
cmps
dec
and
fmul
pop
out
fdiv
or
dec
popf
push
push
(bad)
adc
(bad)
loopne
mov
movs
imul
mov
fimul
jp
xchg
into
xor
push
or
push
jbe
test
jle
mov
ins
sbb
sub
out
dec
xor
jl
push
add
jnp
adc
cli
and
fdiv
test
mov
sbb
(bad)
shl
int3
test
dec
mov
repnz
cmp
int3
sub
lock
sbb
shl
xor
add
(bad)
fld
push
inc
adc
mov
loope
adc
and
clc
cwde
mov
adc
adc
pop
pop
sbb
(bad)
mov
aad
jecxz
pop
inc
test
test
inc
pop
adc
mov
aas
xlat
cmp
push
popa
inc
aaa
push
or
pop
inc
out
sub
adc
mov
inc
and
icebp
jmp
dec
call
jmp
(bad)
adc
and
jmp
shl
shl
div
gs
clc
out
shl
cmp
sete
inc
and
das
fiadd
mov
push
(bad)
out
inc
mov
pushf
or
jmp
sti
pop
not
test
jne
test
loopne
sbb
jns
ds
add
hlt
enter
pop
sub
sub
and
or
(bad)
test
cmp
inc
test
xor
out
icebp
mov
push
push
mov
je
stos
(bad)
fcomip
hlt
xchg
ins
adc
arpl
das
cmp
xor
mov
pop
retf
xchg
push
ret
fucomip
push
dec
test
repnz
or
push
ror
dec
test
mov
jl
xchg
inc
inc
nop
inc
or
and
popa
jno
stos
cmp
push
cmp
mov
aam
out
loop
pxor
pop
cmp
push
aas
out
adc
adc
sub
add
jo
jge
mov
cmp
jp
and
call
sbb
dec
popa
popf
inc
(bad)
loope
sbb
fsubr
xor
mov
in
xadd
ja
popf
inc
lea
loopne
add
mov
es
loope
and
and
mov
xor
xor
xchg
clc
mov
and
add
(bad)
jle
adc
mov
(bad)
mov
cmp
dec
xor
xor
icebp
hlt
ins
(bad)
cmps
mov
jge
adc
bound
js
pop
loopne
xchg
inc
or
jl
sahf
inc
or
and
iret
sub
aas
arpl
jl
sbb
pop
dec
sbb
stos
jo
call
push
pop
loopne
movs
div
xor
imul
xor
or
hlt
add
loop
scas
inc
test
icebp
jmp
inc
dec
ins
sub
(bad)
int3
cwde
adc
data16
mov
mov
jmp
sub
out
(bad)
adc
ret
(bad)
push
int
prefetch
dec
test
(bad)
mov
aas
dec
mov
aaa
xor
mov
ja
inc
jb
fwait
add
xchg
jmp
ds
push
add
out
xchg
push
push
sub
mov
sub
fdivr
inc
les
fsubr
jp
xchg
fcom
outs
add
ret
nop
or
xor
xor
dec
pop
sbb
jne
dec
scas
cwde
jg
(bad)
xchg
add
push
jg
jmp
call
mov
mov
hlt
add
pusha
sub
fmul
loope
push
inc
mov
push
dec
pop
(bad)
xchg
in
mov
repz
jl
add
jo
ret
xchg
or
pusha
jle
add
enter
(bad)
jle
xchg
imul
cmp
push
ds
and
xchg
mov
imul
sbb
jmp
test
mov
shr
push
push
imul
mov
or
popa
push
add
sbb
pusha
sub
jo
ins
and
das
cwde
jo
in
add
popa
or
out
icebp
xchg
sbb
adc
ret
int
std
into
test
fdiv
iret
pushf
loope
sbb
in
jno
aad
(bad)
arpl
mov
dec
dec
mov
and
inc
adc
push
pop
adc
sub
sbb
ja
iret
cdq
lock
sti
xchg
push
ja
jb
xor
sbb
wrmsr
inc
mov
jmp
jo
cmp
test
push
jmp
js
mov
pop
rcl
or
mov
ret
rcr
dec
test
jl
inc
xlat
mov
or
sbb
rcl
call
inc
mov
ins
imul
xor
loopne
pusha
xor
in
and
adc
or
int3
inc
dec
jne
idiv
mov
shl
push
xor
mov
retf
sbb
das
loopne
push
cmp
mov
add
jbe
js
mov
mov
sbb
inc
mov
mov
adc
sub
jl
inc
cwde
out
inc
add
push
xchg
aad
add
clc
sbb
jmp
inc
dec
push
ins
pop
(bad)
or
pop
jle
(bad)
dec
aas
pop
in
dec
or
(bad)
fiadd
pop
xor
aad
repnz
js
dec
sub
jl
inc
sbb
fisub
sbb
retf
and
lods
sub
add
or
and
sbb
call
inc
dec
jne
cmc
inc
mov
lock
add
out
imul
push
pcmpgtd
xchg
pusha
mov
add
xchg
js
cmp
arpl
or
aas
rcr
push
xchg
mov
ja
jg
jmp
adc
jle
mov
and
nop
inc
or
cmps
fcomp
jmp
mov
adc
movs
ss
xchg
lock
or
push
dec
outs
dec
gs
inc
jbe
outs
je
fisubr
push
adc
pop
cmp
arpl
popa
jbe
inc
or
add
push
inc
add
(bad)
arpl
jo
pop
inc
push
ins
gs
outs
add
adc
scas
pop
cwde
mov
pop
add
add
out
mov
shl
cdq
addr16
or
xor
jo
add
rcr
push
push
imul
pop
sbb
sub
mov
inc
lea
xor
scas
pop
add
push
std
out
mov
das
dec
push
fs
mov
call
movs
or
add
imul
jnp
push
push
xchg
scas
fnstcw
push
push
inc
adc
test
and
dec
pop
mov
mov
push
push
dec
pop
add
xor
xor
fstp
cmp
in
mov
mov
fs
push
test
add
add
call
xchg
leave
cmp
int
jle
out
jecxz
loope
inc
xor
jns
fadd
push
sub
jo
cmp
cmp
loope
inc
sub
add
dec
enter
push
or
add
call
and
pop
xchg
adc
pop
xor
loopne
fiadd
add
repnz
rcl
ins
lds
dec
fidiv
push
jb
jb
ror
mov
sbb
fsubr
or
fwait
(bad)
pop
mov
adc
jae
or
test
cmps
sahf
or
int3
mov
xchg
(bad)
xchg
sbb
adc
jne
shl
inc
dec
add
outs
jo
cmps
jne
push
or
mov
es
inc
ins
int3
push
add
jp
aad
xor
mov
push
adc
sar
ins
cmp
mov
jp
cli
pop
dec
pusha
sub
and
(bad)
dec
fild
jne
adc
popf
sub
add
out
mov
stc
inc
mov
add
sbb
inc
inc
js
aaa
mov
inc
inc
mov
or
add
inc
mov
xor
int3
or
or
pop
xchg
inc
dec
and
loopne
jecxz
mov
pop
repnz
or
cld
clc
adc
dec
mov
(bad)
sbb
mov
mov
mov
fwait
out
mov
retf
test
jmp
pop
mov
outs
bound
jmp
mov
inc
iret
inc
push
test
inc
xor
pop
xor
jae
or
inc
in
jo
aaa
aam
adc
dec
inc
cld
mov
aam
add
(bad)
jmp
inc
mov
and
mov
pop
mov
mov
xor
or
mov
fsubr
push
nop
data16
push
and
int3
and
xor
add
add
test
js
in
sub
push
mov
pop
cld
rcl
(bad)
pusha
xchg
mov
mov
lea
out
mov
fwait
dec
(bad)
sbb
inc
mov
push
inc
or
jmp
cdq
call
sub
xor
push
push
mov
(bad)
ret
push
aam
push
outs
mov
aam
sub
call
and
loopne
adc
retf
mov
ss
add
pop
push
and
sbb
add
mov
jo
test
outs
mov
mov
dec
call
mov
pop
pop
and
lods
(bad)
inc
push
add
pop
pop
push
sub
pop
clc
arpl
inc
pop
add
push
jecxz
or
fisub
mov
sub
adc
test
sbb
xor
mov
or
ja
dec
sbb
sub
pop
ret
dec
pop
xchg
xor
or
mov
out
test
shl
ret
mov
xchg
push
sub
loopne
(bad)
cmps
enter
or
movs
test
ret
loopne
jno
cmps
pop
sbb
cmps
mov
mov
(bad)
dec
pop
sti
pop
fwait
icebp
les
sti
pop
xlat
add
jne
sbb
mov
sbb
sub
cmp
mov
gs
(bad)
js
dec
xchg
dec
jmp
dec
leave
fild
(bad)
jbe
mov
data16
push
pop
or
outs
(bad)
retf
push
call
xchg
lock
mov
inc
cmp
jns
iret
xchg
cmp
inc
fild
dec
xor
imul
mov
(bad)
mov
add
jle
inc
or
or
movs
push
test
or
add
pusha
je
sub
add
and
lods
xchg
retf
fld
iret
and
out
or
mov
and
sbb
sbb
jno
sbb
cmp
push
mov
pop
lock
add
push
sbb
ret
push
mov
rol
call
mov
push
sub
push
lock
and
and
nop
fcom
push
add
sub
pop
fadd
cld
out
or
inc
push
push
dec
push
adc
push
pop
inc
push
popa
jb
ins
jbe
sbb
cmp
add
dec
cmps
mov
push
sbb
push
or
lock
adc
(bad)
outs
je
arpl
cmp
aas
mov
mov
push
or
fild
movsx
mov
scas
or
push
ficomp
mov
xchg
pop
pop
dec
in
jg
ss
imul
call
mov
xchg
pop
addr16
inc
in
je
cmp
jmp
in
or
pop
cmp
push
repz
adc
add
lahf
(bad)
mov
inc
push
rcl
xchg
add
jnp
sbb
das
and
clc
sub
repz
cmp
js
pop
sbb
pop
pusha
lds
iret
add
inc
adc
xor
add
(bad)
jle
push
inc
xchg
or
ror
sub
cmps
test
mov
adc
ret
sbb
pop
jo
and
cs
sbb
or
ret
sub
imul
push
out
inc
gs
dec
shl
or
sbb
aam
dec
xor
or
js
cmp
jne
jne
mov
pop
jmp
jne
rol
push
popa
ins
jne
pop
pop
std
mov
div
sub
ftst
data16
cmp
mov
iret
add
mov
fiadd
cmp
dec
push
sbb
xor
mov
jo
(bad)
sub
add
pop
into
adc
mov
cmp
mov
xchg
cli
or
mov
cmp
push
mov
add
sub
jnp
jbe
sahf
mov
popa
outs
outs
push
scas
arpl
inc
add
sbb
mov
popa
and
push
xchg
fcom
aaa
cmp
int
sbb
nop
or
pop
push
je
cmps
int3
sbb
add
add
add
and
rcr
shl
test
mov
inc
pushf
sbb
arpl
or
and
scas
pusha
jb
jp
lods
lock
gs
(bad)
stc
pusha
mov
ret
mov
js
mov
mov
jne
mov
xchg
cmp
cmps
jl
cmp
retf
sbb
aas
xor
push
loope
cwde
mov
pop
dec
inc
or
push
sbb
mov
loopne
scas
fisttp
mov
push
jb
sub
or
jns
rol
mov
popa
fnsave
pop
jmp
mov
sub
jne
add
add
or
loop
loop
std
call
ja
int
pop
sub
loop
call
inc
movups
ins
mov
pop
in
fsubr
mov
pop
dec
mov
fucomi
rol
ret
das
sahf
push
or
dec
out
sub
idiv
ret
mov
outs
mov
int3
cmps
ja
sti
enter
dec
pushf
imul
push
bound
pusha
scas
jmp
pop
pop
inc
outs
or
push
mov
push
pop
cmp
cmp
push
pop
push
(bad)
sbb
jecxz
mov
sbb
movs
push
xor
mov
inc
inc
aad
imul
push
inc
inc
test
out
sbb
outs
mov
pop
add
mov
sbb
lods
or
dec
add
add
or
int3
or
outs
test
imul
cwde
jmp
ds
push
das
inc
popa
jae
lods
enter
daa
in
adc
inc
jae
xor
ret
dec
mov
adc
push
pop
ds
dec
sbb
sub
fsubr
adc
add
les
add
adc
or
div
mov
jb
pop
xor
xor
sub
adc
push
jg
outs
(bad)
out
cmp
bndldx
shl
xor
push
test
pusha
pop
loopne
pusha
test
sub
sbb
imul
mov
inc
jns
loopne
mov
push
push
sub
movs
movs
sbb
mov
fld
scas
inc
ds
sub
out
adc
sub
je
pop
das
pop
dec
add
inc
add
jmp
out
fs
call
xchg
mov
and
push
(bad)
retf
ins
nop
std
cmp
shl
sti
pop
mov
ret
mov
pop
movs
cmps
hlt
mov
adc
movs
add
mov
xor
fdivr
add
pop
mov
call
and
std
pop
sbb
add
add
sub
dec
jnp
lahf
test
add
xchg
push
push
fs
cmp
fsubr
add
nop
or
into
or
test
scas
imul
adc
repz
cmp
aas
mov
loopne
jo
or
jmp
dec
cs
sbb
sub
mov
jne
das
pop
movs
int
pop
hlt
adc
push
push
push
in
mov
xchg
pusha
in
dec
in
lock
jmp
retf
or
xchg
pusha
inc
mov
dec
sub
jno
and
sbb
adc
or
in
addr16
mul
push
xor
ss
stos
sbb
in
fnstenv
sub
mov
(bad)
out
cmp
scas
js
pop
pusha
das
jle
shl
mov
jnp
sbb
sbb
(bad)
hlt
cs
dec
xchg
mov
add
xor
ss
jae
imul
inc
leave
sbb
adc
leave
adc
add
pop
cmc
(bad)
push
mov
and
adc
ret
or
movs
jae
(bad)
or
add
xchg
jl
sbb
adc
fisttp
ds
mov
mov
scas
and
hlt
dec
gs
int3
or
adc
retf
sbb
ja
push
inc
mul
ds
mov
jle
lahf
cmp
adc
add
es
mov
mov
cmp
retf
scas
mov
add
nop
imul
add
or
cmps
je
add
dec
je
movs
test
cmp
int3
adc
int
jo
jmp
sub
cmp
mov
sub
call
(bad)
out
mov
inc
or
add
mov
adc
mov
(bad)
in
rol
xchg
pop
push
push
ret
clc
fisttp
mov
iret
xchg
mov
sub
xchg
xchg
cli
adc
xchg
xor
xor
dec
push
in
fs
or
mov
mov
or
pop
cmc
mov
dec
push
and
retfw
push
add
mov
imul
pop
aaa
mov
outs
jg
loopne
clc
xor
cmp
jle
sbb
inc
lea
add
clc
and
test
push
cmp
jne
das
add
sar
inc
jne
out
es
(bad)
aad
xor
mov
sti
fstp
mov
test
arpl
fidivr
push
stc
(bad)
cli
dec
shr
adc
fsubrp
pop
clc
push
cli
pop
jae
adc
jmp
or
out
mov
jne
ss
pusha
stc
pop
jmp
or
inc
xor
pop
sar
sub
dec
daa
inc
sti
or
add
sbb
mov
xor
and
sbb
sbb
inc
adc
rol
xor
and
dec
test
xor
dec
pushf
popf
jo
outs
cdq
lock
mov
mov
pop
or
das
add
add
mov
(bad)
out
ror
mov
pop
(bad)
cmp
out
xlat
mov
jae
(bad)
je
js
sbb
popf
pop
adc
inc
cdq
fs
or
jle
cmp
inc
jmp
sbb
outs
rsm
adc
repz
sub
jb
je
dec
je
jmp
jbe
dec
sub
add
mov
cli
aad
add
in
scas
mov
inc
pop
adc
cld
sub
pop
and
fimul
jle
fdiv
cmp
push
jge
mov
sub
and
fcomip
addr16
imul
xor
jb
push
pop
and
mov
adc
shr
mov
out
and
xlat
jmp
(bad)
pusha
add
ror
adc
sar
movs
and
ror
mov
ret
or
cmp
in
test
push
cmps
and
cdq
mov
sbb
dec
pop
mov
jb
jmp
lds
cmps
jg
xlat
or
sbb
inc
dec
lahf
push
je
out
sub
fcom
inc
fadd
push
sahf
movs
mov
jne
or
add
mov
xor
or
fwait
mov
fwait
(bad)
mov
pop
or
in
pop
jae
inc
pop
xchg
aaa
aaa
movs
fiadd
mov
fcmovbe
in
hlt
jg
or
or
mov
add
and
mov
mov
sbb
push
js
mov
mov
jmp
jmp
or
(bad)
mov
ret
inc
test
hlt
and
nop
mov
sub
jmp
inc
or
jo
nop
push
dec
sub
or
or
sahf
cli
sbb
rcl
fsub
or
push
jbe
dec
fbstp
in
mov
cli
fwait
push
and
push
jg
leave
mov
(bad)
jmp
inc
add
cmp
jne
jle
ret
mov
pop
mov
or
jo
mov
ds
mov
sub
outs
pop
jl
je
cmp
jg
sti
jle
mov
inc
mov
test
sahf
or
xor
inc
jmp
(bad)
xor
je
inc
cmp
inc
mov
cmp
lock
stos
pop
ds
pusha
aaa
ror
dec
mov
call
add
or
pop
ror
adc
sub
dec
or
outs
push
ret
or
iret
sub
mov
and
iret
es
and
mov
shl
dec
adc
adc
out
inc
outs
cmp
call
push
dec
add
dec
rol
fcom
cmp
(bad)
sub
adc
dec
xlat
in
mov
sbb
mov
or
in
(bad)
pavgb
aaa
jbe
fdivr
fsub
add
scas
mov
lock
mul
out
shr
xchg
or
mov
or
pop
add
mov
or
jmp
and
dec
jge
movs
or
fisttp
data16
inc
shr
inc
add
in
setle
jmp
jmp
push
add
sahf
aam
lea
cmc
xchg
jge
fild
fdivr
je
outs
or
xchg
hlt
ret
jg
and
fsubr
test
pushw
(bad)
sbb
cmp
jle
cld
push
pop
dec
ins
div
mul
sar
mov
cld
add
(bad)
xor
sbb
mov
or
es
les
jl
sar
mov
add
add
mov
dec
mov
sbb
dec
sahf
push
push
neg
push
jbe
adc
add
add
dec
mov
shr
call
shl
adc
loopne
ss
add
ret
out
sbb
push
sub
add
sahf
jl
mov
mov
pusha
pushf
inc
or
sub
jp
sub
out
mov
pushf
int3
jmp
mov
mov
test
jmp
fmul
sub
push
lea
out
push
test
dec
jo
fst
cwde
lods
fsubp
push
or
push
dec
cmp
mov
or
ss
push
retf
mov
loope
push
mov
pop
and
out
mov
(bad)
inc
dec
jne
into
and
mov
(bad)
icebp
rol
xchg
sub
push
bound
cmp
fisttp
pop
fadd
lods
cli
jge
xchg
cmp
push
outs
mov
jae
add
xlat
jp
popa
call
inc
nop
loopne
add
mov
push
adc
clc
push
mov
pop
push
jmp
push
shr
adc
retf
call
pop
adc
cmp
pop
cs
or
add
push
adc
je
sbb
cli
push
enter
push
mov
sbb
and
sub
inc
xor
add
fcom
inc
fs
add
jmp
into
jmp
cmp
pusha
add
sub
mov
mov
push
mov
sbb
mov
cwde
push
loopne
pop
pop
imul
and
inc
int3
adc
push
sar
mov
out
add
mov
inc
arpl
sbb
out
inc
sub
aaa
les
in
dec
sbb
icebp
lock
add
icebp
rcl
or
in
mov
or
ja
arpl
js
dec
cmp
jno
or
aam
rol
fwait
sbb
sbb
js
mov
adc
inc
or
inc
lock
clc
ret
lea
mov
icebp
icebp
push
jo
mov
addps
or
pop
test
mov
ds
cmc
retf
sbb
pop
push
retf
or
je
cmp
inc
and
sbb
jp
push
mov
jmp
test
es
test
(bad)
cmp
dec
mul
mov
sti
ret
loopne
lock
sbb
lahf
add
movs
stos
(bad)
mov
int3
lods
mov
lea
ds
add
cld
or
ret
sbb
scas
adc
push
mov
clc
dec
jle
mov
jo
cmp
cwde
xchg
push
test
mov
mov
sub
out
adc
push
sbb
stos
mov
add
pop
jno
mov
cmp
push
popf
add
sti
xlat
popa
lock
stos
ja
push
int3
xor
xor
xor
push
fsub
adc
popa
ret
xor
icebp
dec
mov
(bad)
sub
dec
je
add
jmp
call
fdiv
adc
add
inc
rcl
shl
cmp
int3
push
faddp
push
or
pop
cmp
inc
sbb
cmc
imul
sub
xlat
enter
adc
data16
int3
dec
aam
mov
rcl
ss
jecxz
mov
aas
shr
mov
xor
and
and
pop
or
dec
sahf
dec
dec
inc
shr
mov
sar
push
mov
push
rol
or
push
loop
bound
fsub
xor
mov
ret
add
sbb
add
out
mov
mov
nop
cmp
inc
pop
mov
push
mov
rcr
loopne
or
add
mov
aaa
icebp
mov
outs
pop
sub
shr
ret
scas
or
dec
(bad)
jmp
clc
test
jl
inc
fmul
mov
inc
dec
jne
scas
add
mov
test
fisttp
into
mov
mov
push
repnz
sub
out
push
aas
sbb
test
jne
xchg
or
rol
or
int3
cwde
push
inc
in
shr
cmp
lock
jl
jmp
jle
xchg
mov
into
rol
cmp
and
(bad)
fild
icebp
push
shl
pushf
cmp
jle
int3
cmp
xor
ret
js
xor
ss
sbb
cmc
mov
sbb
les
push
mov
clc
pop
(bad)
fild
sub
xchg
jo
push
cwde
das
cwde
frstor
and
jmp
pop
icebp
pushf
lods
je
test
cmp
xchg
dec
or
jecxz
sahf
nop
enter
or
push
xor
jg
mov
pusha
(bad)
cli
xchg
cmp
jge
fimul
jmp
inc
sbb
fs
add
sub
jb
gs
fild
je
sub
je
mov
fucomi
and
inc
cld
out
jno
push
es
and
sub
fwait
out
add
rol
or
into
push
push
inc
lods
les
inc
ja
sub
mov
pop
add
les
jmp
je
mov
inc
and
test
dec
sbb
test
lods
ins
out
loop
xlat
ins
dec
push
in
bound
out
fidivr
jb
jmp
add
js
sbb
jmp
xor
or
jg
adc
das
ins
jnp
inc
mov
xchg
dec
dec
dec
movs
pop
cmps
(bad)
mov
adc
mov
add
out
cmp
pop
aam
loop
inc
and
push
aas
or
dec
test
fstp
cmps
aas
add
mov
push
push
in
or
push
push
adc
into
push
and
scas
fnstcw
pusha
push
push
dec
pop
add
xor
xor
sub
cmp
in
mov
mov
sbb
jb
mov
add
add
mov
jb
jne
retf
push
push
jb
outs
je
bound
pop
ror
or
or
pop
movs
(bad)
fbld
xor
push
jb
push
je
gs
jmp
or
gs
sub
pushf
xchg
inc
inc
jns
jae
aaa
or
movs
fadd
std
xchg
test
dec
pop
int3
push
(bad)
push
push
inc
mov
lea
mov
in
lods
test
mov
add
and
(bad)
xchg
out
cmp
pushf
loopne
je
repz
and
jl
mov
jo
test
pusha
enter
xchg
and
(bad)
cmp
mov
call
into
outs
outs
xchg
xor
lock
xor
or
cmc
frstor
adc
push
sahf
dec
mov
dec
out
bound
mov
or
aam
mov
aad
push
xchg
div
adc
jmp
mov
fwait
adc
push
mov
inc
cmp
setg
jmp
pop
pop
add
les
cmps
clc
rcr
cdq
or
lock
jmp
out
(bad)
mov
pop
and
test
jb
inc
call
into
cs
dec
ror
add
or
dec
pop
and
push
jo
cdq
fs
loopne
jnp
or
lock
mov
dec
fisubr
fmul
test
sbb
aam
lea
dec
cmp
(bad)
mov
dec
iret
cs
lods
lock
lods
sbb
ja
inc
and
and
cmps
out
rol
and
daa
dec
add
add
add
add
add
push
add
es
mov
stos
add
mov
add
pushf
cmp
ds
jbe
cmps
inc
add
in
mov
add
inc
xchg
inc
fimul
dec
inc
aad
je
push
cwde
push
(bad)
cli
mov
neg
pop
add
pop
pop
movs
inc
stos
out
add
pop
retf
add
popa
aad
mov
add
add
add
(bad)
push
cwde
imul
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
pusha
lock
jns
jp
jnp
jl
jge
jle
pop
lods
ret
mov
and
dec
jge
xor
out
pop
push
and
fld
push
cwde
mov
call
daa
out
mov
xlat
add
push
les
or
push
sub
push
lock
or
adc
fcom
push
push
jmp
in
or
pop
setae
adc
sbb
sub
dec
jmp
adc
inc
inc
imul
cmp
fwait
or
lods
jnp
nop
jae
mov
outs
and
ret
push
jns
push
rcl
das
jb
outs
sub
xlat
jae
fidiv
sti
or
loopne
mov
pop
add
(bad)
pop
inc
mov
neg
das
push
popa
ins
jne
shr
loopne
mov
push
adc
push
inc
mov
and
cmc
add
add
mov
xor
inc
mov
cli
mov
into
test
jno
xchg
push
fidiv
inc
adc
inc
or
rcl
push
inc
shl
test
or
rol
dec
add
or
pop
shl
jl
je
push
cmp
pop
push
test
jns
lods
xchg
pop
in
pop
shl
mov
in
stos
(bad)
mov
ins
test
movs
je
imul
outs
add
repnz
fs
pop
and
push
add
ror
cmp
or
lds
(bad)
call
mov
mov
(bad)
mov
lahf
pop
xchg
daa
loop
xchg
mov
inc
add
loop
(bad)
test
ds
adc
sti
enter
je
cwde
setae
call
inc
push
adc
inc
in
jno
inc
and
adc
dec
inc
dec
nop
cwde
mov
inc
add
and
jp
mov
(bad)
call
mov
or
(bad)
cld
dec
xchg
push
pop
add
jmp
out
neg
add
mov
or
jg
adc
sti
xchg
ss
push
pop
sbb
pop
pusha
popf
out
cmp
or
sar
add
push
or
imul
pop
jo
nop
in
or
cmp
sub
cmp
dec
and
imul
push
jo
cmp
pop
mov
mov
or
push
mov
(bad)
cmp
jp
jo
inc
fs
sbb
leave
inc
push
imul
sbb
cld
inc
adc
out
pusha
popa
pop
sub
inc
or
push
inc
xchg
gs
xchg
inc
sub
mov
out
mov
xchg
(bad)
cmp
mov
inc
push
outs
(bad)
mov
shr
dec
in
int
mul
test
lock
and
push
cmp
aas
pusha
out
data16
je
int3
inc
ds
pop
stos
outs
inc
fcomi
(bad)
push
les
push
mov
clc
cs
stos
push
mov
push
push
push
cwde
add
(bad)
fld
imul
xchg
add
add
or
mov
jo
inc
xor
sub
sub
test
test
jne
push
jns
pop
or
out
ret
adc
gs
clc
xchg
cmp
sub
ins
lds
into
push
iret
inc
jmp
scas
push
xchg
data16
mov
xchg
cs
jb
xor
data16
leave
jmp
jae
stos
pop
js
sub
xchg
add
lock
imul
jge
loop
test
or
jmp
jo
xor
stc
call
bnd
add
addr16
(bad)
add
mov
aaa
or
es
sbb
mov
jbe
daa
pop
sbb
nop
xor
stc
and
leave
adc
jp
push
in
mov
add
xor
fwait
ror
daa
int
test
inc
ss
and
dec
sub
mov
pop
pop
add
adc
ror
sbb
or
xor
loope
pusha
adc
dec
or
push
dec
bound
sbb
sbb
adc
mov
fs
mov
xor
rol
fwait
shr
or
hlt
sbb
call
dec
cmp
pop
cmps
or
inc
inc
mov
adc
mov
jnp
in
push
and
fwait
mov
pop
mov
add
mov
mov
loopne
add
or
xor
jmp
inc
enter
pop
push
fild
xor
and
dec
sub
pushf
fld
pop
push
cvtps2pd
inc
add
dec
push
outs
jae
jo
add
add
push
xor
mov
retf
cmp
sub
cmp
mov
dec
and
or
push
fld
or
fnsave
out
cmp
add
loopne
jnp
cmc
pop
in
jmp
out
or
inc
cmp
inc
add
or
xchg
push
xchg
loop
mov
out
dec
push
push
sub
dec
stos
rcr
jns
sub
xor
add
jo
push
push
stos
ins
sub
xor
ss
push
adc
mov
iret
test
test
je
jp
jmp
mov
mov
add
test
adc
pop
mov
jp
popa
mov
xchg
out
inc
cmp
lea
dec
xchg
sub
loop
out
adc
je
into
mov
mov
sbb
icebp
mov
inc
xor
mov
inc
pop
mov
add
jbe
fs
or
and
xchg
sub
add
cmp
ss
dec
or
xor
fwait
adc
xchg
jp
xor
int3
adc
jbe
outs
ror
inc
cmp
dec
sub
add
mov
jmp
mov
push
retf
mov
add
mov
fsubp
inc
mov
xor
mov
loope
mov
and
add
mov
adc
sub
cmp
fcom
ret
(bad)
out
xchg
mov
inc
clc
inc
mov
mov
loopne
push
and
dec
jns
lock
adc
xchg
adc
mov
fs
mov
mov
mov
xor
cs
test
add
push
push
sbb
lods
popf
adc
jmp
imul
push
outs
sbb
xchg
fwait
ret
mov
or
nop
pop
lods
xchg
pop
das
lock
icebp
mov
xor
int3
xor
push
das
rcr
and
sar
imul
test
ror
sti
jmp
jmp
push
movs
lock
add
or
lea
ds
pusha
adc
(bad)
call
push
sub
lock
cs
loopne
(bad)
and
inc
sub
test
hlt
mov
pop
jmp
lds
push
and
outs
lock
adc
inc
sbb
mov
or
and
or
adc
add
xchg
mov
xlat
aaa
adc
or
in
sub
pusha
jnp
jge
jne
imul
pop
test
int3
lods
push
cwde
or
shr
scas
or
xchg
or
or
push
push
mov
mov
mov
mov
fbstp
xor
mov
mov
jmp
cwde
add
rol
or
adc
xchg
lods
stc
and
nop
xchg
and
xchg
jp
imul
jae
pop
push
or
adc
or
les
in
outs
push
adc
mov
pop
les
push
sub
(bad)
jnp
ds
sub
jp
push
jg
or
pushf
in
add
push
fdivr
in
sahf
inc
add
(bad)
int3
daa
ficomp
and
adc
xchg
loopne
xor
or
inc
lea
xor
outs
scas
pop
mov
xchg
fimul
cdq
push
popf
std
sar
es
jnp
nop
fld
push
add
inc
adc
pop
sbb
jbe
jp
stos
xor
sbb
int
push
add
inc
ins
push
xchg
dec
and
adc
(bad)
(bad)
rol
mov
ret
xchg
imul
xchg
pusha
add
call
mov
ret
mov
int3
or
adc
cmp
test
and
cs
and
adc
(bad)
fmul
inc
dec
aaa
add
jne
cmp
jmp
add
or
cmp
rol
add
xchg
pusha
clc
and
push
and
pop
cmp
push
sbb
sub
jno
xlat
test
and
scas
outs
test
lods
ins
push
xor
lock
in
movs
cmp
jne
xor
push
inc
adc
inc
or
or
sti
cli
or
jmp
scas
lods
sub
push
clc
loopne
and
aas
adc
sar
jne
mov
cmp
inc
sub
rol
int3
xor
mov
in
repz
lods
les
lock
add
push
je
je
(bad)
stc
pop
test
iret
jle
mov
sub
adc
div
fcom
or
rcr
or
and
mov
in
cmp
or
sub
dec
add
ror
adc
push
sub
mov
je
push
or
cmp
outs
int3
hlt
or
data16
sub
outs
adc
adc
lock
adc
adc
cmp
mov
call
scas
adc
aam
ss
into
dec
xchg
xor
push
push
ins
xor
adc
ins
rcr
cdq
add
adc
mul
mov
sub
sub
repnz
cmp
es
inc
mov
shl
and
pushf
fild
mov
adc
and
or
pop
push
cs
inc
aaa
cmp
mov
jle
inc
and
add
bswap
xor
pushf
sbb
inc
push
cmp
mov
push
jmp
dec
adc
lods
pop
mov
or
mov
mov
mov
jne
in
inc
ins
xchg
shl
inc
mov
outs
or
cmp
ror
pop
inc
mov
pop
mov
cmp
dec
int3
push
punpckhbw
xchg
out
fwait
sbb
push
adc
xor
mov
and
(bad)
aaa
std
jle
cmp
adc
push
pusha
out
sbb
shl
pop
loopne
sbb
sub
jne
retf
ret
adc
outs
pop
aaa
pop
mov
daa
inc
pop
jg
mov
pop
or
sub
jb
je
push
shl
retf
jmp
ss
mov
pop
ins
mov
enter
cmc
pusha
jno
dec
and
and
shl
or
jmp
sbb
pop
cs
imul
mov
pop
sbb
or
push
sub
iret
pop
inc
rcl
cs
cs
jbe
clc
aaa
lahf
add
scas
or
add
out
sbb
data16
xchg
mul
(bad)
adc
cmps
in
movs
jae
mov
movs
pop
cmp
mov
stos
xor
or
pop
ret
repnz
add
or
jb
jp
dec
add
ja
adc
add
ja
mov
movs
mov
test
xlat
icebp
mov
push
push
cmps
or
push
add
ds
mov
push
xchg
movs
and
mov
retw
sub
or
push
jmp
data16
or
mov
movzx
or
std
fst
adc
push
aaa
inc
sub
int3
push
aas
xor
pusha
dec
adc
and
(bad)
push
mov
test
fs
push
jecxz
push
or
and
mov
push
lea
push
idiv
mov
stc
push
and
adc
int
cdq
test
mov
dec
add
adc
sbb
sub
stos
inc
cld
xchg
enter
xchg
push
dec
xor
sbb
dec
and
ds
adc
enter
jns
test
adc
jle
xor
mov
aas
int
out
out
fcom
loopne
xor
push
sub
in
mov
xchg
adc
pop
sbb
pop
xor
neg
shl
test
inc
adc
dec
push
in
rcl
aam
mov
test
sbb
loopne
add
ror
aam
jle
push
fadd
cmps
push
outs
pop
pop
mov
add
cwde
jo
pusha
aas
add
popa
daa
sbb
rcl
mov
dec
xor
inc
push
xor
or
mov
aas
cmp
sahf
sbb
outs
es
movs
cdq
xor
lock
or
into
xor
out
inc
jb
mov
push
mov
bound
pop
data16
push
jle
jae
cmp
and
add
arpl
call
cmps
push
pop
mov
outs
mov
bound
push
and
call
inc
addr16
fiadd
or
int3
push
cld
int3
sub
add
aam
mov
fisubr
or
loop
test
ror
or
outs
push
shl
js
je
push
aaa
cli
mov
aam
or
mov
fadd
sub
push
adc
adc
je
popa
mov
jmp
push
stos
pop
push
push
sub
pop
sub
lods
pop
jg
ret
dec
xlat
xchg
loopne
in
pop
add
pop
adc
jne
push
dec
push
push
dec
in
mov
pop
pop
push
and
push
xor
jmp
push
and
adc
cmp
in
inc
push
rol
sbb
loope
xchg
bound
xchg
addr16
rcr
(bad)
mov
jnp
pop
pop
sbb
mov
test
and
mov
sbb
and
push
and
or
push
xchg
sahf
cdq
ret
xor
or
out
bound
jb
test
call
sbb
loop
pop
or
leave
cmp
cwde
ret
(bad)
xchg
mov
mov
adc
scas
push
jmp
pop
xor
pop
mov
or
or
push
or
sbb
add
push
push
daa
ror
xchg
jp
enter
add
fimul
je
or
into
rcl
push
add
push
xchg
rcl
les
lds
clc
(bad)
clc
js
mov
pop
subps
cld
and
inc
xor
inc
movs
lock
mov
ror
or
les
movs
aad
cmp
pusha
sub
aam
mov
je
dec
push
inc
clc
cdq
jmp
daa
cmp
add
fsubp
pushf
icebp
sbb
cmp
ficomp
popa
loopne
sbb
out
ror
enter
add
inc
xor
push
xor
add
lea
das
jne
pop
push
push
pushf
cmp
add
and
jb
jg
adc
sbb
jo
inc
push
dec
xchg
ret
mov
ja
pop
pop
jnp
int3
and
fist
xor
pusha
jecxz
xor
cmc
mov
nop
xlat
adc
test
xchg
and
fst
mov
mov
arpl
arpl
push
cmps
out
sbb
mov
or
loop
lods
push
or
add
pop
push
or
inc
js
out
cmp
dec
mov
das
push
push
out
inc
imul
xchg
(bad)
xchg
adc
mov
ja
dec
mov
int
sbb
dec
or
jmp
(bad)
js
iret
mov
sbb
test
cmp
add
cmp
inc
push
in
cmp
dec
xor
fadd
cmp
das
push
pop
mov
cmp
xchg
mov
sub
daa
pusha
loop
or
(bad)
cli
adc
mov
add
push
(bad)
repnz
(bad)
and
clc
popa
shr
clc
mov
and
fcmovu
enter
bound
cdq
movs
sbb
call
jmp
or
enter
popa
jo
pop
inc
and
imul
addr16
or
mov
js
mov
or
test
jg
push
pop
add
mov
addr16
jne
stos
pushf
cdq
or
add
push
lods
cmp
sbb
pop
inc
pop
inc
nop
jns
inc
sub
add
rcr
sbb
loop
pusha
dec
inc
dec
(bad)
mov
into
sub
xchg
das
adc
adc
push
xor
push
enter
xchg
loopne
shl
cld
sbb
dec
xchg
leave
dec
das
sub
sbb
jle
cmp
je
jmp
sub
lods
xor
ret
arpl
pop
add
ret
xor
pusha
jns
inc
xor
test
or
sbb
push
push
jl
repnz
push
push
leave
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
ins
fld
adc
add
inc
and
ja
call
inc
ins
outs
jb
je
ins
dec
outs
je
mov
fnstsw
outs
ja
fs
pop
inc
mov
aaa
push
inc
test
mov
stos
call
mov
add
mov
dec
ror
pop
and
push
data16
mov
aas
sbb
outs
movs
push
adc
xchg
xlat
mov
push
call
hlt
or
lock
pop
je
pusha
iret
adc
inc
mov
call
sub
js
int
push
push
pop
(bad)
(bad)
add
adc
je
or
inc
inc
push
push
add
dec
adc
add
pushf
adc
add
outs
jne
sub
adc
and
add
push
push
ret
cmp
jne
jnp
and
add
pusha
pop
popa
jg
shl
arpl
ins
cmp
aaa
mov
push
and
or
outs
mov
daa
add
dec
movs
push
and
das
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
pop
loope
sub
mov
add
sti
aas
les
in
add
shr
cmps
(bad)
mov
loope
adc
or
dec
pop
push
dec
dec
dec
inc
in
pop
ret
(bad)
cmp
push
inc
dec
inc
dec
push
dec
and
mov
ja
add
add
fld
je
or
sbb
ins
popa
js
inc
popa
js
addr16
popa
addr16
xor
or
add
fnstsw
dec
sub
sub
sub
pop
inc
push
pop
dec
push
fiadd
sub
xor
or
push
push
sbb
sub
and
inc
dec
sbb
sub
xor
push
mov
mov
outs
xor
loope
sbb
pushf
out
add
cs
dec
sub
pop
ja
sub
push
dec
dec
inc
push
and
pop
or
or
mov
or
add
gs
jnp
popf
outs
popa
ins
push
add
stos
ja
and
popa
outs
lock
in
mov
jne
push
push
cmp
add
cmp
je
ins
pop
gs
sti
pop
and
test
gs
jge
mov
add
or
pop
bound
imul
(bad)
aam
sbb
push
add
aaa
cmp
jp
pop
or
cmp
cmp
cmp
retf
stos
arpl
jb
sbb
adc
xor
jae
test
shr
mov
and
or
push
sbb
fidivr
add
sbb
inc
mov
(bad)
sub
pop
push
js
pop
bound
daa
xor
jo
ins
sti
loope
jbe
mov
and
gs
outs
push
fstp
arpl
xor
test
daa
je
push
cmps
adc
pop
retf
inc
aas
in
sbb
pop
dec
xor
inc
dec
xor
mov
add
sbb
xchg
jae
add
sbb
ins
lods
imul
push
ins
fcomp
adc
push
test
sbb
call
push
ficomp
and
sbb
adc
inc
mov
pop
aas
fisttp
(bad)
jo
pop
loop
add
clc
mov
adc
pop
jbe
mov
inc
outs
xor
adc
or
add
add
pop
push
add
cmps
adc
popf
rcl
add
sub
rcl
pop
and
or
sub
inc
push
xor
sbb
adc
mov
inc
inc
inc
cmp
(bad)
aaa
loop
cmps
cmp
ss
adc
shr
push
fisttp
inc
dec
inc
inc
add
pop
cmp
and
cmp
jnp
jb
mov
push
push
clc
rcr
inc
dec
push
shr
into
sbb
lock
dec
pushf
dec
dec
pop
mov
ins
stos
or
xor
adc
out
ss
sub
mov
dec
dec
push
or
inc
push
inc
add
outs
cld
fidiv
cmp
dec
push
dec
rol
xor
mov
fild
inc
cmp
test
push
or
push
inc
arpl
jp
aas
add
sbb
mov
test
pop
shl
xchg
xchg
ins
hlt
xor
pop
outs
bound
rcl
or
pop
inc
sahf
add
xor
cld
or
in
jo
and
push
sbb
scas
ins
pushf
mov
add
or
call
imul
mov
bound
xor
and
je
sub
popa
xor
ret
or
mov
ins
xor
sti
and
bound
sub
movnti
jbe
jae
mov
pop
and
inc
shl
imul
add
mov
jp
xor
fild
jae
xor
mov
sub
arpl
xlat
add
add
xlat
pop
or
jne
popa
ja
sub
jl
push
movs
sahf
xor
cs
or
inc
or
add
fild
pop
xlat
jne
pop
add
dec
or
imul
frstor
push
add
push
push
sar
iret
or
movs
ret
outs
add
leave
and
retf
or
pop
stc
add
add
(bad)
mov
mov
out
or
xor
pop
pusha
sub
push
das
pop
cmp
(bad)
lea
js
add
mov
and
enter
pop
es
imul
and
call
add
sbb
inc
fwait
add
or
shl
jo
add
or
mov
js
xor
and
or
push
icebp
test
shr
imul
jno
loope
test
mov
test
pop
cs
push
mov
stos
jnp
je
add
mov
jns
inc
jo
mov
je
jo
sar
mov
push
mov
pop
ja
mov
pop
sbb
xor
loopne
adc
mov
dec
add
sbb
jno
aas
out
and
inc
jo
pop
cmp
push
es
loope
test
add
xor
pop
sub
adc
xor
mov
ret
sbb
lea
ja
jns
xor
xor
dec
ins
enter
dec
xor
add
push
in
push
xchg
mov
sub
or
mov
daa
push
push
ins
pop
sahf
bound
xchg
add
pop
bound
push
cs
pop
mov
retf
add
push
add
adc
add
mov
xor
push
sbb
into
xor
adc
sbb
sbb
push
and
pop
js
push
pushf
and
mov
add
lods
push
pop
sbb
loope
ins
aad
add
stos
pop
dec
adc
or
pop
jo
lds
sub
fisttp
popa
sti
and
mov
(bad)
sub
lds
clc
jmp
add
aaa
mov
add
aaa
or
fmul
jb
rcr
out
cmp
jo
bound
adc
dec
mov
inc
test
ss
jp
shr
fbstp
mov
shl
or
adc
rol
pop
or
mov
pop
add
fs
xchg
sahf
cli
daa
cmp
sub
push
add
jno
popf
xchg
jecxz
jmp
retf
imul
jge
cmps
jmp
xchg
xor
ins
test
pop
cld
mov
push
inc
push
push
pop
push
dec
inc
pop
add
ret
jo
xor
push
push
sub
loopne
add
jbe
push
loop
and
cmp
sbb
cmp
or
lock
or
adc
mov
pop
int
xor
icebp
cmp
push
cmp
push
inc
dec
pusha
or
fmul
aam
sbb
mov
mov
sar
add
jno
pop
dec
or
sbb
imul
stc
xlat
popa
xor
aad
fidiv
js
inc
pop
jo
loopne
ins
out
or
xor
shr
push
es
fisubr
dec
inc
push
(bad)
daa
in
cmps
cmp
sub
das
or
rcr
pop
scas
xor
mov
cmp
pop
and
bound
and
scas
sbb
and
push
das
dec
add
pop
setl
add
push
or
push
pop
xor
dec
(bad)
(bad)
ret
pop
push
icebp
or
cmp
cmp
pop
add
std
jo
mov
inc
push
push
pop
and
sub
fild
arpl
adc
loopne
aaa
or
lock
cmp
cmp
xor
hlt
jno
imul
inc
jne
bound
add
sub
or
bound
xchg
daa
xchg
seta
call
inc
push
jno
sub
aaa
fdivr
les
cs
retf
sub
pavgw
sbb
sbb
scas
adc
popf
push
xor
mov
lods
loope
shl
or
push
jp
and
push
shl
ret
mov
loopne
test
cmp
inc
push
fistp
adc
inc
cmps
sbb
jmp
cmc
test
fucom
shl
add
dec
hlt
xchg
jg
ret
mov
dec
mov
add
mov
sub
jb
xor
mov
jle
sbb
pop
add
cmp
jmp
sbb
adc
add
pop
jge
jg
push
pusha
mov
push
pushf
call
adc
mov
mov
jns
mov
inc
in
pop
jne
adc
ret
sbb
ins
lods
push
mov
sub
test
jl
xor
inc
daa
or
aaa
sti
das
pop
dec
inc
dec
inc
inc
xor
pop
cs
sbb
fsub
aas
mov
out
movs
sub
pushf
mov
neg
mov
outs
mov
(bad)
xlat
out
add
sub
adc
mov
lds
lahf
into
ins
jb
add
xchg
lds
out
dec
rol
in
out
push
inc
push
ja
fsub
into
dec
sbb
in
or
mov
sbb
or
out
push
add
push
ficom
or
and
loope
mov
inc
mov
or
add
cdq
adc
adc
adc
out
loopne
ror
sub
test
add
enter
cs
adc
cmps
pusha
int
scas
push
iret
lods
jmp
pusha
and
inc
stos
cdq
jne
inc
dec
adc
push
dec
jbe
outs
pop
xchg
out
enter
mov
call
sub
dec
push
pop
pop
inc
test
inc
cdq
jne
xor
add
sbb
fs
js
jmp
jae
or
fwait
push
pop
neg
das
inc
sub
cwde
outs
mov
(bad)
inc
xadd
push
push
inc
add
dec
out
add
movs
mov
fistp
cmp
int3
xlat
adc
dec
addr16
lods
dec
jp
cld
push
popa
add
out
mov
adc
ins
imul
jne
je
gs
adc
arpl
aaa
jns
cs
xchg
push
adc
enter
add
pop
xchg
xchg
jo
ror
scas
movs
add
rcl
mov
add
sub
or
mov
mov
add
addr16
add
ja
lods
retf
adc
sub
inc
(bad)
lea
jbe
jns
add
jne
xor
mov
sub
jnp
pop
push
lock
outs
je
data16
jnp
sub
ret
push
out
or
iret
dec
xchg
ins
jb
fnstsw
add
mov
mov
xbegin
push
bound
mov
pop
mov
imul
sbb
iret
dec
dec
sub
(bad)
xlat
sti
mov
inc
cs
or
push
adc
mov
dec
adc
add
mov
and
scas
jo
jecxz
bound
stos
loopne
cmp
repnz
(bad)
cmp
cmp
sub
adc
inc
fwait
sahf
mov
pop
push
dec
pop
aaa
push
scas
sub
xor
push
or
sbb
push
dec
or
(bad)
fcomp
das
inc
dec
inc
ins
xor
or
sub
sbb
push
div
jo
jmp
icebp
rol
jne
bound
inc
(bad)
(bad)
and
jne
cmp
xchg
add
ds
push
or
mov
pusha
out
dec
sbb
inc
jmp
sub
(bad)
(bad)
push
ins
or
jne
ins
push
pop
ret
fbld
jmp
adc
js
loopne
mov
in
inc
add
out
push
loopne
fcom
and
pop
dec
cmp
add
add
sti
mov
loopne
jb
fadd
popa
int3
cwde
add
pop
(bad)
sti
arpl
cmps
and
add
loop
xor
not
pop
stc
mov
pop
xor
ret
or
push
scas
add
aad
cld
mov
outs
sbb
and
jb
movs
xor
sbb
shr
sub
pusha
dec
das
jmp
pop
inc
add
xchg
push
arpl
pop
xchg
jae
and
xor
sub
jmp
int3
xchg
adc
leave
sbb
xor
jmp
sub
imul
mov
sub
sub
(bad)
sti
add
imul
rcl
popa
pop
pop
aaa
rcl
fidiv
jns
push
arpl
cs
cli
inc
lea
test
loopne
rol
cmp
add
sub
fwait
xor
xor
mov
xchg
push
pop
loopne
imul
lds
popa
jne
mov
lods
stos
inc
iret
dec
dec
dec
dec
push
push
leave
int
pop
out
add
jle
xor
inc
adc
jo
inc
pop
in
push
mov
sub
jle
pushf
mov
das
add
xor
add
(bad)
mov
int3
ins
adc
cs
xor
dec
pusha
test
pop
addr16
or
jnp
jae
jb
mov
and
cmps
sbb
or
pop
addr16
aam
das
outs
add
adc
(bad)
outs
pop
je
loopne
sti
jmp
cmp
add
add
daa
pop
sbb
ins
outs
outs
mov
mov
stos
add
jp
ss
ret
sub
dec
pop
cdq
jg
rcr
adc
sbb
push
adc
sub
shl
sti
gs
sbb
xor
leave
jmp
or
sub
and
fcomp
adc
popf
pop
cs
dec
movs
and
add
add
or
jo
pop
jns
daa
adc
inc
hlt
add
push
push
pop
mov
push
jle
mov
xchg
xor
cld
adc
inc
mov
ja
jb
sbb
cmp
xchg
loope
cmp
push
ja
push
jb
stc
xchg
dec
or
jle
push
xor
retf
outs
out
les
dec
dec
push
je
fild
idiv
cmp
test
or
outs
dec
aad
adc
cmp
cmp
jmp
lock
or
or
jle
lock
(bad)
daa
cmp
outs
movs
mov
repnz
fild
ins
ins
bound
popf
xor
mov
js
mov
sub
mov
lock
or
(bad)
sbb
ja
add
xchg
adc
into
shl
fbld
outs
jne
sbb
xor
mov
mov
sub
rcr
addr16
pop
movs
in
push
das
sar
add
xchg
sub
scas
std
and
inc
cdq
std
sbb
mov
cmp
ror
test
scas
lea
popa
pop
adc
or
pop
or
mov
and
ins
push
xor
rcl
xor
xor
xor
pop
in
adc
dec
fnstenv
push
arpl
and
push
ret
popf
push
jg
xchg
mov
daa
and
cmp
imul
fidivr
aaa
jns
push
xlat
outs
sub
inc
mov
cmps
sub
push
push
pushf
mov
sub
in
add
push
inc
or
sbb
push
sbb
dec
push
out
jb
pop
stos
xchg
mov
popa
dec
pop
add
mov
jnp
add
xchg
(bad)
or
push
enter
or
mov
stos
adc
lock
cli
xchg
(bad)
or
xor
ja
test
pop
push
or
inc
sub
ins
fs
aaa
adc
sar
aam
adc
or
pop
cmps
jae
fs
enter
faddp
pusha
cwde
xor
and
stos
imul
add
dec
ja
lods
push
jnp
loopne
inc
xchg
lods
sub
aaa
sub
lods
mov
ja
mov
jo
pop
adc
xor
push
mov
inc
ins
arpl
loope
ja
mov
sar
mov
jmp
push
ficom
jl
int3
outs
sub
or
pcmpeqb
movs
push
mov
inc
or
or
dec
sub
mov
test
sbb
pop
lods
loop
loopne
push
fistp
jae
jo
jb
rol
mov
shl
pop
push
push
inc
jns
addr16
add
dec
add
aas
jb
jbe
arpl
add
cwde
mov
lods
mov
cmp
bound
pusha
test
imul
pop
ja
loopne
push
arpl
das
add
add
in
xor
add
add
add
add
sti
sub
or
add
mov
dec
lock
mov
int
push
sbb
ja
mov
popa
stos
add
ret
icebp
push
or
push
or
pusha
add
fdivr
push
or
imul
xlat
enter
in
daa
add
mov
cwde
pop
push
imul
mov
ss
inc
mov
adc
out
mov
neg
cmp
sbb
jecxz
add
adc
adc
mov
out
test
fist
add
int
(bad)
jge
test
mov
mov
push
arpl
scas
xchg
dec
jb
fadd
cmps
jl
sbb
inc
imul
mov
in
push
pusha
jne
adc
and
test
pop
adc
out
pop
and
dec
and
dec
or
cmp
sahf
(bad)
sub
push
jb
xchg
jae
add
sbb
jb
ja
jecxz
test
arpl
sub
pop
and
daa
icebp
daa
mov
and
add
pop
out
test
ja
dec
jb
push
cmp
add
daa
lock
or
out
inc
cdq
xchg
jecxz
fld
inc
or
shl
outs
ja
xchg
xor
aam
outs
mov
add
cmp
and
mov
ja
and
mov
add
shl
push
push
xor
mul
ds
lahf
(bad)
scas
pop
xor
imul
aam
mov
into
iret
add
aad
adc
inc
lea
adc
adc
xchg
or
sbb
mov
sti
movs
outs
dec
and
or
xor
inc
or
mov
xchg
pop
mov
add
sub
xchg
push
cmp
xor
lahf
mov
mov
rol
mov
adc
test
add
and
(bad)
cwde
adc
adc
inc
inc
inc
push
cmps
lahf
scas
ret
fwait
add
aad
or
das
mov
and
lock
push
js
push
or
xor
cmp
mov
(bad)
xor
sbb
mov
in
ret
push
xor
jo
mov
and
sub
add
push
daa
jno
xor
fwait
inc
popa
sbb
adc
push
add
out
sbb
jo
out
movs
cmc
dec
push
ja
xor
mov
add
pop
stc
push
add
mov
js
bnd
arpl
rcr
cmp
enter
push
popa
addr16
es
xchg
adc
adc
loope
sbb
adc
lock
jo
and
push
add
xchg
pop
das
cmp
push
inc
(bad)
adc
mov
inc
xchg
je
pushf
bound
adc
push
iret
pop
jne
push
ja
dec
inc
in
jae
add
jns
add
icebp
rcl
pusha
fmul
std
jo
jge
add
dec
pop
in
sub
sbb
or
push
cmp
pop
pop
mov
lods
pop
pusha
sbb
stos
test
jo
stos
cmps
ins
mov
test
mov
fild
or
add
mov
cdq
loop
sbb
jne
xor
rol
fadd
xchg
ret
adc
fidivr
inc
pop
outs
mov
xchg
dec
add
xchg
dec
into
test
(bad)
ins
push
fst
lock
jns
mov
inc
adc
and
cli
pop
push
push
pop
push
push
dec
cld
fs
ror
adc
dec
dec
outs
and
and
cdq
mov
sbb
cmp
mov
pop
aas
ret
call
xor
add
dec
xor
cld
rcr
inc
sub
jmp
or
pop
pop
xor
in
add
pop
sbb
cmp
jnp
add
daa
xor
mov
popa
sti
mov
icebp
cmp
or
add
xor
pusha
mov
adc
(bad)
sbb
dec
pop
aaa
or
lods
adc
test
push
loope
or
fist
pushf
mov
or
and
sbb
inc
jbe
dec
adc
shl
or
add
int
mov
fwait
mov
cmps
cmp
add
fist
mov
popa
imul
or
leave
mov
jns
and
xchg
adc
leave
or
clc
push
push
mov
xor
lds
adc
imul
adc
inc
adc
aas
pushf
dec
sbb
push
mov
out
fimul
xor
inc
jge
std
add
inc
xlat
inc
push
push
or
sbb
jb
out
rcl
mov
xchg
xchg
or
je
out
xchg
cs
mov
aaa
cs
inc
bound
and
pop
stc
pop
outs
hlt
mov
pop
mov
cmp
ret
in
or
xor
in
sbb
ja
add
push
in
in
xor
arpl
inc
mov
cmp
addr16
sti
adc
arpl
or
adc
push
or
sub
xor
add
and
inc
mov
adc
cmp
mov
or
hlt
and
jno
adc
or
loopne
dec
and
sub
push
data16
cmp
adc
jb
test
pop
and
ins
rol
sbb
xchg
dec
sub
dec
adc
dec
jmp
mov
aas
push
loopne
add
aas
adc
xor
sbb
ror
jmp
inc
test
fidivr
adc
inc
nop
nop
outs
inc
aaa
adc
pusha
sub
popa
mov
test
jb
outs
adc
dec
push
and
movs
(bad)
dec
pop
dec
icebp
retf
or
loope
xor
sub
push
cmp
shl
pop
fbld
or
(bad)
psllq
in
push
adc
mov
mov
dec
enter
pusha
xor
pop
adc
jl
loopne
outs
mov
and
js
les
outs
fs
ror
dec
sbb
test
sbb
retf
lods
push
adc
test
test
mov
mov
sbb
adc
dec
ret
ds
imul
dec
aaa
add
push
inc
push
inc
and
jbe
xor
repz
das
xor
movs
sub
inc
sbb
xor
lock
push
cmp
xor
adc
add
loopne
xchg
pop
inc
bound
jo
cmc
adc
push
lods
push
sub
fld
mov
stos
jge
add
xor
mov
jecxz
xor
xor
jo
sub
(bad)
enter
xor
add
jo
sub
movs
xor
jmp
ja
jecxz
add
and
cwde
sbb
cwde
adc
arpl
ins
or
retf
loopne
jo
mov
ret
push
add
mov
sub
push
test
xchg
or
imul
or
sbb
dec
push
and
jo
and
or
pop
cdq
xor
daa
push
out
dec
mov
jae
es
daa
sbb
popf
sahf
jbe
ret
mov
enter
aad
or
adc
call
xor
sbb
sbb
dec
addr16
xor
or
stc
adc
stc
xor
and
jmp
pop
pushf
ror
out
add
adc
loopne
mov
xchg
jae
test
cmps
push
sbb
mov
or
cld
cmp
shl
mov
push
cmp
cs
or
jbe
jg
or
mov
das
movs
add
ret
or
mov
cmpxchg
mov
pop
or
arpl
cmc
es
loope
fidivr
ror
add
test
outs
push
out
fisttp
add
adc
sub
ret
xchg
ins
adc
jp
add
(bad)
jmp
jecxz
and
add
fild
loopne
pop
xor
add
ficom
sbb
frstor
sbb
and
pop
and
fbstp
dec
js
sub
sub
jge
add
mov
mov
pop
popa
and
shr
xor
cdq
mov
or
imul
jmp
stos
adc
scas
sub
or
jo
lods
rcl
xor
sbb
jno
sub
pop
and
mov
and
adc
or
dec
dec
push
sbb
gs
test
pop
mov
jo
adc
mov
inc
fs
popf
inc
xor
fadd
jo
cli
push
cmp
sbb
popf
pop
popf
cs
sub
jo
inc
sbb
xor
adc
pop
inc
pop
inc
(bad)
adc
and
(bad)
hlt
or
stc
call
cmp
xlat
and
fstp
add
add
jmp
add
outs
pop
cmp
adc
add
pushf
fst
pusha
xor
xchg
push
fisttp
cmps
aaa
es
mov
arpl
adc
mov
rcl
push
jae
adc
push
jg
mov
imul
outs
dec
inc
xchg
ror
aam
gs
fbstp
jae
in
sub
xor
ja
inc
movs
dec
xor
jno
pop
ins
aaa
mov
jno
(bad)
ss
aaa
pop
aaa
jecxz
lea
inc
dec
jne
jno
pop
adc
loope
inc
or
test
xlat
or
jmp
test
pushf
pop
loope
pop
add
adc
inc
xor
lock
cmp
in
int3
or
or
inc
jo
dec
inc
sbb
or
or
mov
ins
mov
inc
pop
or
sbb
add
mov
mov
repnz
test
adc
jmp
imul
scas
add
sub
sub
pop
sub
or
popa
or
inc
ins
int
push
sub
and
loop
xor
cmp
pop
cmp
pop
pop
ficomp
xor
lds
ret
(bad)
xor
add
and
dec
pop
jb
fisttp
les
mov
ins
or
stos
(bad)
pop
pop
pop
ja
fist
sbb
and
aaa
xor
xor
mov
sbb
jae
(bad)
daa
inc
push
push
mov
adc
pop
daa
mov
push
mov
and
clc
xor
add
add
push
ins
jmp
rcr
xor
push
push
out
sar
adc
dec
test
lods
icebp
or
ins
xor
push
push
add
nop
mov
push
test
and
lods
loopne
sbb
cmp
adc
pop
lock
and
xor
mov
shl
dec
jnp
jo
sgdtd
push
cmp
cmps
and
mov
sahf
fbld
test
test
inc
mov
jne
pusha
inc
pop
or
inc
iret
or
inc
push
cmp
pop
aas
mov
fstp
outs
push
inc
inc
dec
push
inc
push
and
push
or
or
xchg
add
and
enter
and
in
and
sbb
int3
loope
repz
mov
loop
popa
lea
add
inc
gs
or
add
(bad)
jno
(bad)
(bad)
and
add
xchg
inc
inc
inc
push
adc
or
xchg
cmp
ret
add
lock
je
ins
ret
xchg
adc
sbb
stc
jl
xchg
pusha
push
in
(bad)
cli
add
int3
dec
ret
push
dec
frstor
add
xchg
std
leave
adc
xchg
fstp
cmps
mov
out
or
push
adc
jge
add
add
bound
jne
aas
xor
dec
adc
cli
sbb
mov
sub
pop
data16
outs
fs
xor
in
mov
(bad)
xor
loope
push
mov
mov
jne
lods
test
in
adc
cmps
adc
or
add
xchg
mov
dec
in
sub
icebp
nop
mov
push
cmc
aas
out
fisttp
loopne
stc
aas
pop
add
pop
push
retf
jmp
sti
add
jmp
or
inc
movs
jbe
mov
sbb
xchg
jg
sbb
mov
pop
sti
sub
dec
add
dec
mov
stc
xchg
sub
add
sub
or
sbb
fidivr
dec
xchg
pop
xor
xchg
inc
or
xor
in
adc
sub
xlat
out
cmp
nop
pusha
mov
aaa
cmp
adc
add
(bad)
sbb
mov
jmp
out
or
fidiv
mov
dec
lea
sub
fidiv
xchg
jbe
outs
push
sub
dec
cmp
push
pop
aas
push
arpl
push
fsub
adc
push
es
pop
mov
push
not
pop
mov
arpl
jmp
dec
addr16
ins
cdq
test
inc
loopne
cmp
in
fwait
imul
loope
adc
out
cmp
adc
mov
nop
push
fmul
loopne
jbe
nop
clc
jne
cmp
cmp
and
enter
cmp
movs
je
ret
push
push
inc
fdiv
jo
and
pop
loopne
ins
sub
add
xor
popa
add
cmp
and
daa
dec
mov
jne
or
jg
sub
fdiv
xor
lods
retf
or
idiv
adc
push
xchg
or
inc
jno
pop
ds
jo
jmp
mov
add
xor
daa
mov
popa
icebp
pushf
pop
fcomp
icebp
push
data16
repnz
xor
daa
push
xor
bound
adc
adc
xor
lods
push
stos
mov
sbb
imul
xchg
ja
or
add
xor
(bad)
das
adc
jmp
jo
jns
cmp
movs
push
or
push
cmp
movs
ret
cmp
mov
cmp
inc
mov
aaa
sbb
mov
in
pop
jbe
xor
lea
test
adc
xor
xlat
and
addr16
dec
add
adc
movs
bound
je
mov
dec
aas
inc
shr
adc
sbb
fwait
loopne
ret
mov
adc
pop
js
ja
sub
and
cs
fs
cwde
fcom
xor
aam
lock
sub
mov
int
lahf
(bad)
movs
ds
mov
push
add
pop
pop
add
xlat
pop
ds
dec
or
push
sbb
es
ret
hlt
jae
pop
mov
mov
add
push
add
push
push
lods
or
dec
mov
ja
repnz
jecxz
int3
sub
arpl
pushf
clc
lahf
add
or
inc
dec
push
dec
inc
push
je
test
push
add
and
sbb
jmp
jl
or
dec
or
repz
mov
push
sbb
aaa
mov
xor
inc
pop
fdiv
or
push
call
or
inc
and
aam
je
push
shr
add
movs
jmp
push
mov
stc
pop
test
xchg
dec
dec
icebp
adc
daa
ds
jae
push
mov
and
les
and
adc
out
adc
addr16
sbb
push
or
push
nop
push
xchg
or
xor
lods
mov
inc
inc
icebp
pop
popa
les
test
xchg
jge
neg
and
add
push
pop
(bad)
je
mov
in
sbb
and
xchg
out
and
jb
jbe
stos
cmp
popf
das
sub
mov
or
and
or
and
push
dec
out
adc
adc
sbb
adc
sub
add
cmp
jb
inc
cmp
jmp
sub
cmp
ins
push
cs
pop
adc
test
loopne
jmp
cmp
pushw
xor
or
xor
push
adc
shl
adc
xchg
push
cwde
mov
jle
ss
xor
xor
fistp
add
jb
mov
in
sar
je
push
hlt
and
cmp
sub
mov
mov
mov
xchg
lock
adc
sar
add
and
psubsb
ja
mov
or
fs
add
jo
aam
aaa
add
xor
js
aam
or
lds
aaa
sbb
cmp
dec
nop
stos
aaa
sbb
push
and
and
adc
jo
es
add
ins
into
in
ss
test
lock
aam
ficomp
mov
xchg
pop
fsubr
push
adc
iret
imul
fsubr
push
mov
neg
cmps
stc
push
add
(bad)
out
jne
les
sub
inc
dec
fs
in
add
inc
lods
xlat
(bad)
ins
adc
pop
sub
adc
loopne
loopne
sub
dec
xor
adc
ins
outs
mov
mov
es
jo
or
sub
add
mov
inc
inc
inc
mov
outs
sub
daa
sbb
js
pop
jmp
(bad)
dec
inc
xor
dec
ror
loope
ds
add
jle
push
popa
hlt
add
rol
data16
sub
div
push
sub
in
add
js
sbb
or
inc
out
add
outs
mov
add
adc
out
push
mov
xor
adc
out
mov
adc
test
or
outs
push
retf
jmp
scas
add
les
movs
cmp
ins
sbb
dec
in
out
push
in
fiadd
movs
add
xlat
push
test
(bad)
das
fmul
out
or
aaa
add
dec
mov
aaa
shl
shl
mov
inc
cli
prefetcht1
ficom
inc
jb
sub
imul
xor
mov
jmp
or
cmp
sbb
inc
sub
mov
pop
inc
test
mov
mov
nop
loop
xchg
add
and
pop
cmps
add
mov
dec
sbb
divps
add
inc
repnz
(bad)
sbb
pop
(bad)
test
ins
jns
imul
pop
inc
inc
add
push
push
test
add
sbb
lahf
inc
pop
add
pushf
fld
ucomiss
push
pop
inc
imul
int
pop
sub
add
outs
cld
sbb
mov
out
les
jo
adc
xor
daa
fcmovb
popa
ins
inc
xlat
pop
sub
and
jae
jae
outs
mov
outs
mov
cwde
setle
pop
inc
test
push
imul
xlat
adc
sub
in
dec
nop
cmp
adc
call
je
xor
call
and
xor
ret
mov
ret
(bad)
(bad)
xor
cmps
fistp
lock
setne
nop
test
je
mov
imul
(bad)
xchg
es
pop
nop
push
dec
ins
sbb
push
call
mul
int
pop
add
mov
push
sub
adc
loopne
push
or
mov
xor
or
outs
jl
ins
add
ret
pop
pop
ret
into
add
xor
pop
add
mov
in
imul
scas
add
call
xor
or
add
nop
add
push
add
sub
adc
pop
enter
mov
sbb
pop
inc
jbe
inc
mov
dec
sbb
nop
or
pop
rol
sbb
and
mov
add
call
mov
test
je
sub
or
push
(bad)
call
push
js
daa
push
pusha
sub
add
adc
retf
add
push
lock
ror
(bad)
mov
cmp
fistp
or
fsubr
mov
push
rol
xchg
fwait
add
clc
jl
cmp
push
jno
test
cmp
sbb
adc
pop
pop
sbb
jo
mov
or
xchg
dec
ins
and
cmp
je
push
cli
sbb
and
xor
clc
and
pop
and
sbb
and
mov
push
cwde
bound
jl
mov
mov
loop
mov
pop
sbb
fist
jmp
ficom
mov
je
or
sbb
in
jmp
xchg
inc
sbb
xor
jo
pop
(bad)
fistp
fild
fistp
fistp
rcl
mov
ja
or
add
pop
fild
or
fbstp
push
sub
cmc
mov
pop
push
loopne
sbb
pop
sub
dec
cmc
push
cmps
(bad)
cmp
mov
xor
inc
inc
je
mov
inc
mov
lahf
mov
sbb
cmp
dec
jnp
jb
loope
xor
mov
or
or
adc
mov
mov
rcr
cs
sub
(bad)
xor
add
lock
out
into
xlat
jmp
andnps
(bad)
jo
dec
sti
pop
call
cld
add
hlt
mov
mov
jmp
ror
out
cwde
push
push
xor
test
je
push
pop
cmp
call
xor
repz
lea
pop
cmp
push
cdq
lods
push
push
xor
mov
pusha
sub
mov
mov
cdq
ja
test
mov
xor
das
jl
push
hlt
adc
jo
dec
cld
mov
dec
outs
add
nop
mov
loopne
test
dec
pop
pop
jbe
rcr
adc
fiadd
jmp
and
call
shr
push
outs
mov
mov
dec
mov
push
push
fistp
dec
pop
sub
test
xchg
mov
addr16
mov
jb
outs
popf
adc
xchg
pop
xor
mov
mov
jnp
leave
retf
mov
xlat
jmp
jmp
and
(bad)
dec
je
sub
jne
push
xor
shl
adc
aaa
out
jae
jge
add
dec
xchg
xor
jbe
les
out
push
adc
mov
sbb
cmp
inc
sbb
(bad)
push
scas
mov
and
mov
aam
jmp
adc
mov
rol
dec
adc
stc
and
push
mov
sub
sub
inc
inc
in
icebp
sbb
push
push
or
ror
add
mov
add
push
or
mov
jmp
mov
int3
stos
fmul
call
mov
sbb
fs
add
adc
push
call
ja
or
lds
fldenv
push
arpl
sub
mov
mov
fdivr
out
sbb
pop
dec
xchg
rol
adc
ret
pop
pop
cmc
loope
sbb
jmp
je
bound
popa
add
xor
xor
cs
add
pop
or
sbb
mov
test
jne
add
das
outs
mov
cmp
int
adc
sbb
pop
pop
popa
arpl
or
jae
cmp
mov
adc
stc
pusha
sti
scas
xor
push
add
sub
inc
add
jno
push
lahf
mov
call
add
pop
mov
jmp
in
cwde
sub
dec
popa
jne
push
jo
mov
cwde
and
push
clc
mov
out
dec
adc
and
mov
pop
dec
aas
in
mov
mov
cmp
dec
mov
sub
test
fild
xor
xor
sbb
repz
call
nop
cld
loopne
lock
stos
stos
into
and
stos
std
sbb
or
outs
in
mov
sbb
and
cmp
enter
or
sub
repnz
xor
sar
xchg
cmp
in
xchg
cmp
inc
aam
sbb
sbb
inc
mov
dec
mov
jb
nop
int3
push
or
pop
and
xchg
enter
xchg
xor
ins
push
into
and
xchg
je
and
push
inc
xchg
and
enter
and
jl
inc
push
cmp
sbb
xchg
inc
test
and
test
and
xchg
arpl
and
xor
enter
pusha
movs
and
xchg
enter
mov
mov
inc
inc
push
mov
mov
(bad)
and
enter
sbb
fs
xchg
inc
inc
push
shl
loopne
test
sbb
fs
loopne
in
pushf
inc
inc
mov
push
call
and
inc
adc
mov
and
and
sbb
jb
mov
clc
add
cmp
and
add
jb
enter
or
push
and
push
push
in
inc
mov
int3
add
xor
sbb
xor
mov
test
sbb
fsub
sbb
adc
and
inc
dec
and
sub
and
add
cmp
in
adc
fcomp
and
inc
or
and
sbb
xor
fs
arpl
mov
enter
and
sbb
jb
test
push
push
or
mov
jo
test
pop
test
nop
xchg
inc
fs
and
xchg
call
jb
enter
mov
mov
sar
or
and
inc
xor
add
xor
push
dec
test
mov
and
sbb
enter
mov
sbb
je
fs
xchg
js
jl
sub
sbb
xor
call
mov
test
mov
cwde
and
cmps
int3
sub
fwait
mov
lods
or
and
in
sub
mov
push
sbb
ss
and
mov
enter
ror
and
mov
xor
ins
aam
enter
fsub
fmul
sbb
in
ret
in
cmp
rcl
lods
pushf
arpl
fsub
xchg
and
ret
push
mov
dec
fldenv
outs
mov
xchg
enter
clc
sar
gs
outs
jno
cld
and
nop
and
in
nop
aaa
push
and
inc
cmp
cwde
and
ror
and
inc
cmp
(bad)
adc
and
inc
mov
mov
idiv
sbb
cmp
push
in
xor
es
xor
adc
(bad)
xor
not
cdq
and
sub
in
sub
aam
js
sbb
in
hlt
adc
(bad)
or
enter
sbb
add
or
lock
popa
push
and
and
inc
and
xchg
push
push
sbb
fs
jo
xchg
arpl
and
jb
nop
clc
xor
leave
xor
xchg
cmp
enter
inc
mov
jbe
jbe
xchg
and
add
and
push
sbb
push
sub
inc
mov
mov
push
inc
js
pop
cwde
in
xchg
inc
pop
mov
fcom
and
ds
xchg
mov
jbe
enter
pushf
xchg
and
mov
and
(bad)
data16
test
sub
pusha
and
arpl
and
mov
xchg
inc
fadd
and
fs
xor
mov
jb
nop
push
ror
out
in
nop
aaa
inc
in
js
adc
int
sbb
jl
jo
fs
mov
mov
je
mov
add
xchg
mov
in
adc
and
mov
and
and
retf
mov
inc
inc
enter
xor
in
mov
test
and
mov
push
and
test
retw
into
inc
adc
and
inc
dec
and
enter
js
lods
mov
jb
(bad)
or
in
xchg
inc
fdivr
push
sbb
fs
enter
mov
push
cmp
sub
mov
nop
xchg
inc
mov
enter
xor
cwde
inc
inc
push
sbb
mov
fsub
mov
pusha
lods
xchg
mov
and
mov
mov
and
shl
inc
inc
push
cmp
xlat
enter
nop
xchg
int3
nop
shr
xor
(bad)
cmp
sbb
fsub
fadd
push
sbb
ins
fmul
and
and
add
and
xchg
out
push
and
push
ficom
sbb
and
retf
mov
(bad)
and
test
xor
enter
mov
pop
mov
cmp
retf
sbb
and
(bad)
ficomp
add
and
mov
and
inc
push
sbb
je
js
in
xchg
inc
jl
cmp
or
in
and
mov
mov
sbb
cwde
or
pushf
push
xchg
dec
xchg
mov
fs
xchg
dec
sar
and
xchg
and
jl
jb
enter
aam
inc
mov
add
fdivr
fs
sub
push
loopne
inc
push
sbb
fs
xchg
call
sbb
sbb
hlt
cmp
enter
pusha
cld
xchg
test
sbb
add
enter
or
inc
push
cmp
and
adc
xchg
inc
adc
sbb
sbb
mov
xchg
inc
inc
cld
and
loopne
sbb
xor
pusha
sub
enter
xor
enter
loope
nop
xchg
inc
inc
cmp
push
inc
xchg
dec
push
sbb
in
dec
clc
push
enter
and
push
push
mov
jb
jl
test
and
xchg
fs
sbb
in
jecxz
xor
inc
inc
pusha
jo
sbb
fs
sar
and
jl
in
sbb
jb
inc
test
mov
mov
jge
sbb
retf
and
xchg
movs
scas
and
sbb
xchg
add
inc
inc
push
call
xchg
pop
add
and
sub
mov
mov
gs
and
inc
nop
and
nop
xchg
cld
les
loope
pusha
nop
and
and
out
sbb
sbb
or
test
adc
and
sbb
in
sbb
sbb
xchg
inc
inc
push
and
es
mov
inc
mov
push
sub
and
jmp
xor
mov
nop
cmp
cmp
ins
nop
and
jmp
enter
js
xchg
jbe
enter
pop
retf
sbb
xor
jmp
pop
push
pusha
and
xchg
enter
ins
or
xchg
inc
inc
push
jo
je
fs
js
lods
jl
inc
push
sbb
sub
xor
enter
mov
mov
nop
cld
sbb
enter
out
cwde
inc
inc
push
sbb
inc
out
xchg
mov
sbb
arpl
mov
mov
or
and
and
xchg
inc
inc
push
shr
sbb
xor
adc
enter
jbe
loopne
fs
inc
mov
xor
jbe
inc
mov
fsub
xchg
inc
mov
sbb
loopne
fsubr
nop
push
in
mov
call
mov
ins
ret
into
xchg
and
test
inc
inc
nop
cld
rcr
aad
repz
xor
retf
or
mov
adc
sbb
sbb
enter
mov
jb
int3
test
lods
nop
xchg
inc
mov
inc
in
and
inc
mov
cmp
nop
and
push
sbb
fs
int3
jo
nop
xchg
inc
inc
test
ror
neg
xor
and
xchg
pusha
in
xor
nop
call
xchg
enter
test
push
xor
mov
sbb
xchg
stc
or
sbb
fs
mov
xchg
adc
cli
fs
xchg
sbb
inc
push
sbb
and
arpl
and
xchg
sub
fs
test
shl
push
sbb
cmp
cld
xor
enter
pushf
ins
xchg
inc
xchg
mov
dec
test
in
xchg
inc
push
xchg
pop
push
sbb
fs
enter
(bad)
fs
mov
jb
mov
and
xchg
je
sbb
in
(bad)
js
jl
xchg
inc
inc
test
fcomp
cmp
test
mov
inc
inc
push
mov
nop
rcl
cmp
pushf
je
jb
enter
fcom
adc
lods
cmp
dec
mov
mov
inc
push
sbb
popa
mov
test
sbb
fs
je
movs
xchg
inc
inc
push
int3
(bad)
sbb
xor
and
push
mov
in
loopne
add
inc
push
call
in
int3
lock
hlt
and
xchg
enter
add
push
cmp
int3
and
pop
or
or
sbb
fs
mov
inc
push
sbb
or
xor
pop
and
mov
mov
xchg
push
and
xor
jb
enter
nop
xchg
inc
mov
sub
inc
mov
ret
dec
jo
xor
and
mov
fisttp
push
xchg
and
or
mov
enter
pusha
mov
push
cmp
or
pop
into
mov
fs
nop
and
or
adc
outs
fnstsw
push
add
adc
lock
shr
call
rol
ja
fidivr
hlt
sbb
in
dec
and
push
inc
jae
jge
pop
jmp
imul
fsub
mov
cmps
or
dec
fs
sbb
xchg
sub
inc
inc
push
jns
mov
enter
(bad)
in
inc
sbb
lea
push
sbb
test
and
xchg
inc
inc
in
and
adc
xor
fadd
fcomp
and
in
sub
cmp
inc
adc
mov
and
stc
mov
mov
sub
jb
in
mov
outs
and
xor
(bad)
call
and
hlt
and
sbb
clc
inc
cld
pusha
sbb
movs
inc
add
jl
xor
cwde
and
push
(bad)
mov
lock
aam
cmp
ds
dec
les
cmp
int3
inc
mov
(bad)
out
sub
call
test
mov
pop
mov
push
(bad)
in
ins
hlt
inc
loopne
add
pop
adc
sbb
mov
pop
ret
jmp
jmp
mov
pop
mov
pop
ret
sub
add
push
(bad)
out
add
ins
add
bound
add
jns
add
add
add
aaa
xor
add
add
dec
out
(bad)
mov
add
add
push
add
popf
idiv
push
je
arpl
jo
push
int
jmp
cs
outs
push
mov
inc
and
xor
sahf
dec
add
or
ins
or
dec
pop
mov
mov
inc
sbb
pop
mov
shl
dec
push
cmps
cmp
add
inc
call
sbb
add
dec
dec
retf
int3
cdq
outs
jle
sbb
sbb
sub
xchg
or
cmps
xor
cmps
daa
cmp
pop
or
outs
push
out
adc
add
imul
aaa
and
mov
ja
add
int
outs
sbb
add
xor
jae
repnz
popa
test
push
mov
or
cmp
xor
ja
dec
xor
mov
cmps
and
xchg
cmp
inc
mov
push
adc
jg
jg
lods
add
int3
arpl
cmps
pop
push
sub
retf
pop
push
(bad)
cmps
daa
dec
cmps
mov
es
adc
outs
pop
and
push
inc
sbb
(bad)
pop
or
push
sbb
pop
jg
(bad)
xchg
sub
or
btr
pop
mov
xor
mov
add
cmp
ds
retf
adc
sub
add
out
cdq
or
aas
(bad)
aas
ret
sub
or
daa
out
mov
inc
call
push
cwde
shl
mov
or
xor
retf
arpl
add
lahf
scas
das
ins
stos
movs
add
add
push
mov
inc
clts
xor
xor
(bad)
adc
cdq
jb
jecxz
imul
pop
addr16
mul
ror
sbb
ins
mov
pop
xor
or
addr16
sbb
xor
mov
sub
xchg
sbb
lods
pop
xor
xor
les
add
fs
mov
xor
adc
daa
cmps
push
pusha
add
inc
das
outs
sub
push
adc
iret
inc
adc
and
outs
aaa
and
push
jmp
inc
jae
push
sub
dec
dec
sub
add
int
add
sar
jne
inc
adc
mov
dec
ja
dec
outs
outs
adc
(bad)
das
mov
mov
lahf
das
outs
sub
imul
push
xor
aas
xor
sub
jbe
aaa
test
das
aaa
and
push
add
push
jo
mov
call
jmp
and
pop
inc
xlat
(bad)
mov
cmp
pop
and
shl
neg
pop
dec
add
dec
xlat
data16
nop
and
dec
add
mov
addr16
jae
packuswb
inc
pusha
or
scas
mov
push
sahf
xor
adc
or
dec
jp
inc
dec
popf
adc
ror
push
pushaw
test
and
adc
scas
pop
dec
add
xchg
push
call
add
inc
popa
push
pop
push
mov
push
pop
sub
mov
sub
or
pop
outs
pushf
inc
sub
shl
aam
addr16
push
jae
adc
inc
test
push
outs
push
xchg
fcom
(bad)
ja
adc
ror
inc
cmp
je
add
mov
jb
sbb
cmps
xchg
pop
push
ret
mov
aas
add
xlat
or
iret
fisub
or
mov
jno
(bad)
fcomp
adc
sub
add
or
fadd
push
sar
fistp
add
sub
imul
scas
outs
mov
lahf
out
push
fnsave
inc
jle
imul
rol
out
pop
cwde
push
add
pop
push
mov
daa
push
add
xor
mov
addr16
xor
inc
out
inc
push
add
and
push
dec
mov
nop
ficom
dec
neg
emms
xchg
repz
sar
ja
push
push
mov
data16
ror
(bad)
add
jecxz
loopne
jo
out
repz
pusha
jmp
cmp
add
idiv
or
push
pusha
add
dec
mov
sub
out
mov
in
test
addr16
xchg
not
mov
dec
xchg
mov
and
xchg
mov
mov
sub
fwait
loop
call
pop
inc
add
or
ficomp
jg
je
rcl
jg
and
lods
xchg
inc
xor
pop
mov
sbb
or
dec
movs
loop
dec
fisub
sahf
(bad)
lds
aaa
jp
in
mov
inc
repnz
sti
dec
jb
into
and
out
jmp
in
cmp
dec
int3
add
or
pop
pop
test
sub
xor
jg
mov
mov
pusha
sbb
xor
add
sbb
jae
inc
pop
stos
add
pop
sub
ficom
and
mov
not
or
sbb
(bad)
or
mov
and
push
dec
mov
add
push
add
fisub
shl
imul
and
push
ror
int
mov
xchg
and
lea
mov
xchg
xlat
pop
test
dec
aaa
jo
xor
pop
test
fcomi
inc
add
out
add
dec
adc
push
ja
inc
xchg
fsubr
pop
jae
sub
add
push
and
mov
not
mov
out
dec
repz
jnp
ins
dec
into
lahf
adc
xlat
mov
(bad)
fcomp
adc
dec
fidivr
push
addr16
adc
repnz
cmp
dec
adc
mov
cwde
inc
test
out
pop
daa
addr16
ja
add
ja
add
mov
ds
mov
add
movs
mov
test
dec
cmp
adc
ja
ja
add
or
addr16
je
add
adc
and
pop
xlat
or
enter
adc
sub
and
xlat
ja
add
pop
pop
push
mov
out
and
shr
push
imul
pop
xchg
add
pop
dec
xchg
add
add
(bad)
sbb
mov
dec
icebp
rcl
xor
mov
xlat
push
cmps
cmp
push
sub
test
adc
add
clc
les
test
xchg
(bad)
and
out
pop
pop
aas
adc
pop
(bad)
pop
test
push
dec
pop
aaa
adc
jne
aaa
jp
(bad)
mov
add
cmp
out
xchg
movs
addr16
es
push
inc
inc
push
add
add
sbb
scas
inc
out
outs
jnp
mov
aaa
outs
fidiv
les
xor
xor
jmp
aas
das
cmp
enter
(bad)
cmps
ins
lds
call
popa
lea
mov
in
add
inc
mov
(bad)
dec
sub
and
inc
sbb
(bad)
dec
retf
mov
dec
aas
cmps
mov
test
aas
xlat
fbld
dec
add
push
inc
or
push
mov
sub
dec
push
js
aas
mov
or
adc
push
cmp
iret
sub
or
stos
aas
lds
or
mov
xorps
jae
inc
out
pop
dec
outs
mov
pop
or
dec
fdiv
or
(bad)
out
xor
push
fisttp
add
inc
pusha
push
pop
dec
pop
ins
push
sub
add
aaa
aas
and
loopne
or
pandn
rcl
aas
cmovb
sub
inc
dec
sub
dec
movs
xchg
fisubr
lahf
dec
cmp
mov
outs
das
or
mov
sub
add
pop
mov
ja
in
push
or
sub
jg
inc
mov
jg
(bad)
dec
ror
mul
pop
adc
add
pop
pop
bound
lahf
popa
das
movs
pop
dec
ficomp
dec
repnz
not
scas
js
mov
jbe
pushf
pop
(bad)
or
sub
nop
mov
xchg
cmp
outs
inc
add
aaa
mov
adc
xchg
xor
imul
mov
ja
or
aas
add
push
test
push
sub
cmps
push
outs
scas
mov
jecxz
out
dec
pop
adc
aaa
mov
pop
mov
ror
sub
mov
pop
add
push
js
sbb
dec
mov
test
(bad)
add
inc
fidivr
and
pop
pop
out
daa
js
(bad)
and
or
outs
inc
(bad)
es
xchg
sbb
loopne
outs
daa
inc
jo
and
push
push
inc
sbb
call
xchg
mov
add
cmps
push
addr16
push
mov
call
imul
and
push
and
xlat
sbb
inc
add
mov
mov
bound
dec
stos
outs
cwde
push
fmul
pop
outs
outs
outs
imul
or
add
adc
xchg
xchg
xchg
jecxz
mov
rol
add
mov
push
outs
and
inc
adc
ja
add
mov
add
stos
push
xchg
mov
adc
ja
(bad)
sub
ja
add
pop
xchg
push
cmp
xchg
movs
and
arpl
inc
or
xchg
inc
pop
add
xor
mov
and
ja
xor
pop
and
aaa
or
pop
cmp
fwait
je
sbb
das
call
call
scas
inc
pop
setnp
or
xchg
outs
test
cmp
adc
out
inc
adc
dec
sbb
pop
mov
in
pop
push
push
pop
mov
dec
xchg
div
xchg
ss
add
push
inc
sbb
mov
xchg
dec
aas
aaa
push
cmp
dec
push
push
scas
dec
and
add
fcom
aas
sbb
cwde
mov
push
aas
or
inc
or
aas
test
dec
xor
jecxz
add
xchg
or
cmp
cdq
inc
xchg
pusha
dec
es
push
mov
das
call
dec
jbe
and
(bad)
sbb
or
test
popw
inc
adc
xor
inc
fiadd
xor
add
sub
ror
sub
adc
shl
dec
jle
loop
add
dec
lar
movs
pop
dec
loop
test
mov
dec
sub
inc
cmp
jb
rcl
aaa
das
aaa
and
push
sti
das
and
or
push
and
mov
pop
or
addr16
cmp
jnp
(bad)
dec
and
mov
dec
loopne
pop
test
xchg
inc
cmps
xchg
pop
and
or
out
push
inc
jg
add
pusha
push
iret
push
stos
or
aaa
div
inc
sub
mov
adc
cs
push
inc
push
inc
daa
inc
adc
sbb
dec
sub
mov
add
mov
test
pop
push
cmps
or
outs
cmps
dec
iret
test
sbb
push
adc
push
lahf
pop
push
test
and
push
dec
pop
aas
xor
add
cmp
xlat
push
ficomp
call
sub
pusha
imul
call
pop
adc
or
mov
adc
das
pop
das
adc
or
add
ret
push
aad
adc
scas
push
adc
pop
and
xlat
imul
push
cmps
push
dec
or
inc
push
and
addr16
mov
aaa
push
or
push
pop
add
aad
pop
sahf
mov
dec
mov
jnp
sub
mov
rol
xchg
dec
pop
(bad)
push
and
push
mov
(bad)
test
push
ss
xchg
ss
out
dec
push
push
cmp
sbb
lds
out
push
outs
pop
add
sar
or
jo
xlat
pop
inc
and
outs
outs
ret
(bad)
and
xlat
push
add
mov
pop
mov
mov
mov
adc
mov
test
dec
addr16
cmp
and
inc
adc
(bad)
out
mov
xchg
sub
add
iret
pop
pusha
dec
adc
inc
sub
pop
pop
inc
test
es
xchg
popf
mov
or
mov
pop
pusha
or
add
adc
(bad)
aam
pusha
add
int3
je
mov
push
dec
push
push
pusha
and
cmps
add
adc
push
mov
or
and
sub
iret
push
or
ins
adc
aas
xlat
test
push
add
sbb
dec
mov
idiv
add
aam
and
lahf
dec
adc
outs
or
jnp
mov
cmps
pop
cmps
add
xorps
pop
and
pop
xorps
dec
adc
imul
xor
add
add
addr16
inc
pusha
pop
addr16
add
and
lock
adc
push
push
sbb
sub
and
sub
adc
sahf
add
add
rcl
mov
sbb
mov
add
xor
jle
rol
cmp
imul
inc
and
jae
mov
inc
mov
popa
mov
addr16
lods
inc
or
and
das
adc
mov
leave
loopne
bound
or
dec
(bad)
data16
dec
out
dec
add
add
and
push
add
test
push
movs
cmp
and
and
mov
jno
sbb
mov
push
inc
and
cwde
out
scas
and
xchg
jmp
pop
pop
inc
mov
or
cmps
and
add
adc
sub
push
rcr
outs
push
inc
xchg
(bad)
pop
xor
aam
outs
jp
pop
push
fnstcw
pop
pusha
or
add
pop
mov
xor
outs
(bad)
iret
and
adc
adc
call
sub
nop
outs
sub
and
dec
aaa
outs
push
ficom
dec
cmps
imul
sbb
dec
xor
pop
inc
nop
sub
cmps
xchg
sub
movs
sub
push
and
and
inc
inc
mov
mov
ficomp
dec
push
jg
adc
popa
or
iret
inc
xchg
push
sub
sub
dec
mov
add
xchg
dec
mov
dec
xchg
sub
adc
or
rcl
pusha
jo
(bad)
pop
popa
mov
pusha
sub
mov
cwde
inc
adc
sub
mov
xchg
cmp
jg
xchg
pop
pusha
dec
dec
dec
mov
outs
mov
mov
out
sbb
xchg
outs
movs
lods
add
ret
inc
outs
inc
or
stos
nop
xchg
pop
inc
push
rcl
mov
dec
mov
dec
dec
pop
mov
dec
push
sub
and
les
ja
lods
sbb
xchg
scas
cmps
add
or
call
scas
pop
jbe
movs
movs
mov
imul
add
or
pop
mov
mov
mov
sub
iret
mov
outs
add
mov
add
outs
outs
jne
push
out
int3
fsub
xchg
dec
cs
sbb
sar
data16
cli
outs
pop
xor
out
arpl
scas
mov
scas
ja
xlat
pop
or
push
aas
sub
adc
bound
pop
ret
mov
pop
push
sub
fistp
add
xchg
test
fld
jo
add
aaa
inc
mov
(bad)
aas
push
xor
mov
sub
outs
add
pop
mov
mov
and
or
les
inc
pop
add
imul
add
push
div
or
sti
inc
xchg
push
push
xchg
bound
jnp
and
add
test
(bad)
xor
add
shr
ja
push
and
inc
jbe
les
jb
pop
xchg
lods
mov
retf
cdq
jns
call
push
mov
adc
add
dec
dec
pop
aaa
pop
pop
mov
or
dec
dec
outs
or
call
inc
jo
inc
inc
fild
addr16
fsub
imul
inc
fmul
das
add
jmp
jo
ins
outs
das
outs
xchg
test
add
push
inc
add
xchg
pop
dec
or
xchg
loopne
jg
dec
jbe
cmp
jb
and
inc
or
ja
and
and
sbb
jno
ffreep
adc
add
daa
scas
mov
mov
or
add
add
outs
jb
push
and
dec
or
push
xchg
ss
(bad)
fist
pop
push
sub
or
(bad)
(bad)
push
test
imul
or
add
or
xor
ret
ja
add
adc
ja
mov
mov
jmp
repnz
dec
adc
inc
xchg
xchg
pusha
das
pop
aas
movs
loopne
dec
ja
push
and
cmps
xchg
and
fist
test
pop
outs
or
mov
add
addr16
xchg
mov
(bad)
(bad)
cwde
out
pop
mov
add
or
ins
rol
mov
and
outs
add
movs
jecxz
adc
mov
sbb
push
add
jg
pop
shl
retf
mov
sbb
mov
adc
jg
out
add
add
xor
adc
sub
imul
xchg
mov
sub
sbb
push
push
add
fisub
jg
xor
or
sub
or
sub
outs
stos
pop
inc
rol
rol
dec
not
nop
pusha
or
mov
add
sbb
push
adc
cdq
sub
ja
pop
mov
mov
test
or
sub
add
iret
mov
ins
adc
iret
outs
xchg
mov
pop
sbb
jne
pop
mov
lea
aaa
pop
jg
pusha
or
test
add
sub
mov
pop
rcl
inc
sti
iret
pop
pusha
or
xor
inc
addr16
stos
adc
bound
addr16
dec
xor
nop
or
sub
sbb
ja
or
pusha
push
xor
test
sbb
iret
xchg
jmp
not
jg
adc
add
adc
mov
mov
jg
jg
push
pop
ins
xor
add
jg
lds
and
xchg
pop
popa
jne
adc
pop
push
add
pop
mov
push
retf
daa
xchg
dec
shl
in
sbb
test
or
cmp
sbb
push
movs
add
das
sub
dec
sahf
dec
dec
add
push
inc
mov
push
or
and
aaa
inc
or
inc
add
jg
add
pop
call
pop
push
sbb
jne
cs
push
inc
pop
or
add
scas
pop
into
int3
rcr
cmps
pop
push
pop
dec
imul
mov
les
sbb
outs
or
aad
or
cmp
ja
xchg
and
sub
cmp
pop
sar
stos
mov
inc
imul
(bad)
jg
fiadd
add
cwde
inc
ja
inc
adc
cmp
cmp
idiv
add
push
push
push
stos
push
xor
cmp
(bad)
cmp
add
pop
push
dec
(bad)
stos
xor
js
sub
adc
pop
and
or
mov
test
sbb
jo
and
jb
cmps
sub
xor
dec
dec
pop
inc
clc
(bad)
inc
push
mov
xchg
mov
pop
js
sbb
jbe
push
sahf
shr
lahf
xor
inc
and
lods
inc
or
sub
or
ja
sub
lods
dec
stos
inc
push
push
add
shl
push
rcl
pusha
push
(bad)
and
mov
jg
(bad)
lahf
pop
inc
dec
es
shl
add
repnz
add
add
cmps
stos
inc
add
test
pop
inc
mov
pop
sbb
mov
cmps
bound
push
dec
or
loopne
add
shl
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
xchg
fld
sbb
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pusha
fs
xchg
jo
js
xchg
xchg
xchg
xchg
jl
mov
xchg
cwde
pushf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
xchg
xchg
xchg
xchg
rcl
fcomp
xchg
xchg
xchg
xchg
loopne
call
xchg
lock
clc
cld
xchg
xchg
xchg
retf
add
add
or
mov
retf
enter
sub
or
inc
and
cmp
inc
cs
jo
je
jl
inc
inc
inc
add
or
adc
xchg
xchg
in
lock
clc
inc
data16
cld
add
or
inc
inc
cs
jo
js
inc
inc
inc
jl
cwde
or
and
mov
or
and
and
mov
(bad)
enter
and
rcl
fsub
and
and
loopne
nop
and
and
xchg
in
lock
add
and
clc
cld
add
mov
fld1
sbb
or
and
adc
sbb
and
and
and
sub
mov
or
mov
js
mov
mov
dec
mov
pop
mov
jo
push
mov
ins
or
inc
inc
pop
pop
nop
xchg
sbb
inc
pusha
fs
xchg
inc
inc
data16
sbb
inc
inc
inc
inc
test
mov
inc
inc
inc
inc
cmp
xor
inc
inc
inc
inc
jl
je
mov
inc
inc
test
sub
sub
mov
mov
fdiv
fwait
lea
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
int3
rcl
jne
xor
fcomp
lods
sbb
sbb
dec
dec
push
sbb
sbb
push
pop
pop
pusha
pop
sbb
sbb
sub
inc
inc
or
jl
inc
inc
inc
inc
test
inc
inc
xchg
cwde
pushf
mov
movs
test
mov
inc
inc
inc
mov
mov
inc
(bad)
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
add
inc
inc
cs
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
in
inc
inc
inc
dec
dec
fs
push
pop
pop
fs
fs
fs
js
fs
nop
xchg
movs
fucom
mov
call
mov
xor
fwait
jge
or
xor
xor
sbb
ins
jbe
xor
stos
sub
sub
enter
xor
cmp
enter
inc
dec
dec
enter
push
push
pop
pop
enter
pusha
fs
enter
jl
enter
test
ret
cwde
xchg
pushf
or
fs
mov
fs
fs
fs
loopne
fs
jb
fs
cld
add
or
adc
fs
and
fs
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
add
nop
xchg
fs
pushf
mov
fs
mov
fs
fs
fs
loopne
fs
bound
cld
add
mov
adc
mov
mov
xor
sub
inc
inc
or
cmp
inc
sar
xor
fwait
sbb
push
pop
ins
xor
pop
pusha
les
sbb
or
or
pushf
mov
ins
jbe
sbb
and
and
enter
and
and
fcomp
loopne
and
and
call
and
hlt
clc
cld
add
or
add
or
jle
adc
inc
or
mov
pop
fldenv
mov
data16
xchg
xor
adc
sbb
inc
and
ror
enter
fcomp
loopne
(bad)
in
mov
fldcw
mov
xchg
xchg
xchg
xchg
(bad)
hlt
in
clc
es
adc
fwait
int
lock
cmp
cmp
ret
mov
cmp
adc
je
add
(bad)
out
aas
call
nop
add
sub
sub
cwde
adc
xchg
mov
into
call
sbb
mov
xchg
ds
and
cwde
jnp
cwde
sbb
sbb
outs
outs
pop
sbb
push
and
pop
cmps
mov
js
or
out
sbb
imul
sub
es
jle
or
adc
aaa
aaa
sbb
daa
add
ret
nop
push
mov
push
mov
dec
test
dec
jne
xchg
push
push
mov
mov
xor
push
push
push
mov
(bad)
sti
and
inc
hlt
add
adc
leave
push
pop
lea
mov
xchg
sar
(bad)
fild
and
inc
cld
mov
adc
loopne
push
mov
inc
mov
and
jb
test
js
mov
dec
lock
mov
add
pop
lock
nop
push
mov
dec
in
add
and
in
mov
inc
adc
into
aas
inc
or
call
pop
rol
in
or
leave
in
in
loopne
jb
in
mov
adc
cmp
fcom
ins
inc
sti
jmp
cmp
add
xor
mov
or
ret
push
movntps
adc
push
cmp
mov
(bad)
mov
call
jno
mov
mov
je
outs
fistp
inc
pop
(bad)
xor
jl
push
inc
sub
jne
mov
fsub
push
inc
ror
das
fdiv
out
xor
in
and
lods
aam
adc
ret
sbb
aam
push
pop
pop
pop
sbb
or
ins
pop
bound
sub
lahf
lea
dec
ret
jmp
ret
(bad)
jmp
xor
pop
mov
pop
ret
add
sub
push
push
ss
dec
push
jp
xchg
les
pop
ror
(bad)
in
ret
lea
hlt
ins
inc
mov
fst
ret
push
mov
jns
jp
cmp
outs
pop
xchg
outs
jo
and
pop
pop
push
mov
mov
daa
adc
push
mov
pop
out
inc
or
loopne
mov
cmovo
mov
jnp
or
pop
pushf
mov
ret
pop
jnp
rcl
mov
and
dec
or
shr
sub
push
push
movs
pushf
sub
inc
sbb
aaa
imul
fadd
cmp
and
or
lods
or
adc
adc
test
add
push
fs
xor
mov
inc
mov
add
push
pushf
outs
mov
pop
or
(bad)
mov
push
pop
ret
pop
sbb
or
push
dec
push
gs
jne
hlt
jae
outs
outs
dec
add
push
or
ins
jbe
arpl
jle
xor
adc
sub
push
dec
fild
xor
pop
pop
xor
out
jo
outs
or
enter
fbstp
sbb
sar
dec
outs
fs
pop
scas
and
loopne
push
cmps
ins
push
outs
popa
mov
imul
inc
ins
imul
add
adc
jmp
fstp
(bad)
fiadd
mov
out
imul
mov
cmp
jb
push
gs
adc
lahf
gs
test
add
adc
gs
imul
add
push
add
dec
fucomip
jne
clc
inc
je
or
les
or
push
mov
lds
mov
shl
jo
sub
xchg
push
dec
nop
addr16
arpl
mov
push
add
mov
in
add
pop
sbb
sbb
test
cmp
xor
sbb
out
mov
outs
push
sbb
outs
pushf
cmp
sahf
arpl
dec
in
inc
pop
imul
or
push
push
pop
loopne
ja
dec
inc
inc
das
add
push
dec
pushw
cdq
mov
outs
mov
jmp
cmovb
gs
jb
popa
jns
daa
fdiv
movs
add
mov
inc
popa
je
xchg
xor
mov
(bad)
inc
popa
ins
ins
bound
push
and
imul
or
dec
jae
shl
cmp
adc
dec
adc
jnp
and
add
inc
and
(bad)
sbb
xchg
push
or
inc
sub
clc
jg
outs
js
pop
push
dec
bound
arpl
inc
pop
push
outs
fstp
bound
inc
push
inc
push
push
clc
mov
mov
gs
sbb
inc
push
jns
and
xchg
or
sar
fild
and
add
dec
rol
dec
add
outs
add
add
loopne
pop
sbb
push
aaa
add
sbb
push
pcmpgtd
ja
jb
add
push
xor
test
outs
xchg
pop
sar
inc
and
mov
add
cwde
jbe
adc
jg
mov
or
add
inc
dec
jae
maxps
pusha
adc
pushf
outs
ins
gs
outs
sub
rcr
je
add
push
imul
adc
bound
stos
aas
mov
cmp
or
leave
sti
xchg
ss
xor
mov
inc
dec
imul
inc
gs
int3
inc
das
adc
push
inc
cmp
pop
cmp
push
dec
int3
adc
lds
or
popf
or
cmp
xor
fist
xlat
sbb
dec
or
mov
sub
dec
dec
dec
shl
inc
dec
(bad)
and
jns
scas
sbb
jge
mov
fadd
pop
sbb
outs
and
sbb
add
push
dec
xor
das
push
push
add
sub
call
dec
add
pop
push
movs
or
mov
rol
push
pop
sti
ror
push
push
in
push
mov
fsubr
mov
dec
xchg
out
or
fxrstor
adc
mov
add
iret
jno
cmp
push
data16
in
je
inc
imul
add
icebp
mov
dec
gs
retf
mov
ret
data16
xor
std
fdiv
xchg
loop
dec
jbe
outs
nop
add
pop
test
out
adc
cs
ja
ds
cs
shl
popa
dec
push
scas
add
movs
ret
or
fsub
pop
lds
inc
imul
hlt
mov
imul
add
jo
jb
inc
add
test
push
es
jp
inc
int3
sub
pop
loopne
movs
adc
dec
or
shr
push
ins
xchg
pop
pop
jno
push
cmp
int
leave
int3
call
or
jmp
ins
mov
push
or
mov
inc
push
pop
sbb
pop
inc
inc
loopne
and
inc
fcom
dec
xlat
inc
push
push
or
and
sbb
inc
adc
add
inc
xlat
fdivr
pop
fild
rcr
push
inc
cmp
xchg
or
ror
bound
mov
add
fadd
fcom
or
xchg
mov
add
retf
xchg
xchg
fld
fwait
or
xchg
xchg
xchg
xchg
sub
xchg
aad
xchg
xchg
mov
(bad)
mov
xor
xor
cmps
add
jge
push
fisubr
pop
or
inc
cmc
push
cmp
xchg
cmp
push
movs
mov
scas
inc
xor
or
ins
push
xlat
or
push
xchg
inc
cmp
aas
xor
pop
sub
aam
push
add
or
sub
mov
push
jo
cmp
or
push
je
jne
dec
outs
outs
dec
outs
xor
gs
cmp
gs
data16
daa
les
stc
test
jnp
or
push
mov
push
sub
mov
ret
out
mov
dec
cli
add
inc
push
es
dec
dec
outs
rsqrtps
inc
add
cmp
outs
add
xchg
sub
xchg
nop
rcr
xor
mov
cli
outs
pop
xor
mov
dec
and
ins
lods
out
mov
cmp
and
mov
fs
mov
sbb
push
push
or
pop
xor
and
cmp
fisttp
push
add
or
iret
minps
pop
lods
setns
pop
test
cmps
mov
out
or
sbb
push
jl
lds
sbb
jmp
int
inc
xchg
fcomp
fst
inc
scas
or
les
stc
inc
push
inc
std
sbb
xor
sbb
mov
mov
push
pop
xor
add
push
sbb
repz
repz
sub
popa
aaa
dec
jnp
loopne
pop
sub
and
jbe
scas
jae
sbb
movs
jmp
fidiv
stc
mov
arpl
dec
stc
icebp
push
add
and
nop
mov
push
ins
enter
push
daa
std
das
dec
adc
arpl
(bad)
rol
int3
add
pop
or
mov
add
clc
es
xor
ins
jns
inc
out
add
mov
push
sbb
mov
add
sub
pshufw
sub
push
sbb
pop
pop
push
sub
mov
sub
pushf
mov
out
add
pushf
es
shl
dec
inc
xor
add
and
or
popa
scas
xor
mov
mov
add
pop
ins
sub
aaa
jl
mov
lea
cmp
jo
cmp
ins
cmp
js
mov
lods
aam
outs
push
add
xchg
add
mov
push
mov
inc
jne
data16
test
test
inc
dec
push
jae
and
and
add
push
jbe
pop
add
test
lods
cmc
mov
sbb
cmps
add
int
dec
mov
add
ins
aas
add
jo
sahf
fcom
jae
pop
dec
cvttps2pi
inc
stos
adc
inc
mov
ss
in
jg
outs
push
neg
or
or
sub
pop
cmps
pop
or
inc
push
mov
add
pusha
(bad)
ret
pop
icebp
pusha
inc
idiv
inc
xor
pop
add
pushf
bndstx
fwait
loopne
add
jb
add
inc
aas
pop
mov
adc
(bad)
cmp
add
add
add
pop
fst
in
push
pop
adc
push
sbb
inc
das
add
jp
arpl
ins
pusha
cmp
jmp
sbb
and
cmp
push
jg
inc
dec
mov
mov
mov
in
mov
cmp
imul
push
ds
pop
aas
daa
add
mov
pop
test
daa
ins
add
push
or
jmp
inc
add
jl
mov
mov
ss
push
inc
adc
movs
xchg
imul
push
dec
pop
add
push
jge
mov
sub
cmp
in
mov
out
xlat
push
dec
mov
add
push
xor
inc
and
mov
mov
mov
push
and
jg
add
bound
out
fistp
mov
push
nop
mov
ins
fistp
push
push
jl
push
aam
fcmovnbe
mov
push
inc
xchg
push
push
in
push
enter
xchg
(bad)
push
mov
sbb
xchg
push
dec
mov
sar
xlat
ins
add
ja
(bad)
enter
ja
repz
hlt
fs
mov
add
in
fiadd
ss
dec
push
or
mov
mov
lods
mov
push
mov
jns
jl
sbb
xchg
cwde
popf
aam
or
sbb
mul
je
sub
jns
jecxz
data16
pop
cs
in
xchg
add
in
jle
jb
pop
sub
or
sahf
pop
imul
xor
inc
scas
push
out
add
fs
cmp
out
push
push
data16
add
test
imul
jmp
(bad)
and
shl
dec
popa
jns
adc
outs
lods
lahf
or
pop
dec
sbb
cld
jb
mov
jecxz
add
dec
repnz
jmp
sub
add
mov
jp
add
xor
inc
fist
loopne
rol
dec
call
dec
and
mov
aam
pushf
dec
fcom
cmp
add
aas
ud2
inc
data16
rcr
push
xor
mov
add
call
aaa
mov
in
sbb
popa
fs
bound
dec
dec
mov
jns
add
mov
test
sbb
sbb
jo
cmp
push
add
inc
daa
jmp
xor
out
mov
pop
dec
pop
adc
ins
adc
sbb
and
or
xor
xor
ja
arpl
pop
push
push
fadd
dec
sbb
inc
sub
pop
cmp
fwait
inc
push
sbb
fdiv
inc
mov
int
xchg
das
mov
or
cmp
and
and
push
cmp
jae
pop
xlat
fwait
xor
lock
cwde
push
mov
jne
int3
fnsave
sbb
in
mov
(bad)
and
add
mov
ficom
(bad)
popf
inc
mov
retf
clc
add
push
pop
int
lock
mov
cli
test
inc
mov
push
mov
loopne
inc
pop
adc
inc
out
mov
lea
test
sub
add
mov
imul
push
fdivr
pop
js
inc
add
push
push
mov
shr
pop
pop
mov
fdivr
sti
sub
dec
add
sahf
cwde
test
lods
add
enter
and
fidiv
push
add
and
fist
add
pop
test
xor
cmp
push
shl
enter
mov
sub
cmps
xlat
hlt
repnz
add
(bad)
lea
mov
rcl
push
inc
adc
add
out
sbb
inc
bndstx
nop
and
pop
xchg
inc
pop
add
pop
mov
jo
mov
movs
jbe
add
or
jne
outs
ja
push
pop
ins
dec
pop
and
push
nop
pop
fs
or
ret
sub
inc
or
ins
or
inc
(bad)
and
add
push
daa
loopne
sbb
add
jp
xchg
pop
shr
imul
clc
push
in
pop
or
dec
popa
mov
and
xchg
cld
fisttp
inc
push
push
push
jbe
push
and
and
sbb
push
int3
or
mov
add
add
jl
mov
push
inc
xchg
inc
mov
push
ficom
add
dec
add
add
jae
pop
inc
dec
add
xchg
jbe
pop
push
sbb
xchg
xchg
jmp
and
int3
pop
dec
push
xchg
and
ja
scas
inc
push
sbb
add
xchg
retf
ja
xor
inc
sub
xchg
xchg
push
jl
mov
ins
test
out
pusha
rcr
mov
xchg
out
(bad)
(bad)
push
daa
mov
adc
movs
out
jg
push
mov
cmp
data16
adc
data16
jae
addr16
dec
popa
ins
cld
xor
xchg
inc
mov
aaa
cmp
xor
(bad)
sub
jae
xor
mov
or
mul
push
mov
dec
dec
pop
or
jg
adc
add
imul
aas
xor
jne
in
jb
stc
dec
mov
mov
dec
pop
mov
pop
jbe
push
mov
add
or
daa
adc
out
shl
inc
sub
xchg
mov
ror
int
out
or
out
push
outs
or
pop
fisttp
or
adc
ret
mov
push
scas
add
pop
das
repnz
adc
add
adc
inc
cld
fs
or
mov
add
add
shl
xor
xor
push
xor
sar
sbb
ret
scas
mov
ja
add
inc
fninit
dec
inc
xor
or
test
cmp
sub
dec
inc
xor
pusha
into
cmp
dec
push
jmp
das
cmps
dec
xor
xor
pop
inc
mov
push
inc
xchg
push
test
sub
retf
xor
sbb
shr
mov
cmp
rol
outs
mov
enter
xor
xchg
xor
inc
xchg
inc
xchg
ss
or
jp
mov
fsubr
cmps
push
addr16
xor
addr16
mov
lds
pop
mov
dec
mov
sub
add
or
outs
test
mov
push
push
dec
pop
inc
push
jns
mov
ret
mov
aam
mov
inc
push
enter
jbe
add
int3
es
add
jbe
add
and
adc
add
or
push
jne
sahf
or
xchg
lock
je
mov
(bad)
mov
xor
inc
popa
outs
push
dec
add
lock
mov
dec
mov
bound
daa
jnp
pop
add
inc
dec
jae
jne
xchg
push
(bad)
mov
imul
sbb
add
scas
xor
push
add
dec
or
add
sub
scas
and
or
ins
retf
or
or
jge
pop
add
push
sub
daa
or
push
cmp
xor
xchg
or
xor
xor
push
ja
cmp
in
mov
mov
lods
dec
xchg
push
and
in
mov
jmp
mov
jg
mov
and
sbb
xchg
sbb
cmp
movs
retf
xor
cmp
mov
dec
js
loopne
or
je
nop
fst
or
outs
je
inc
enter
or
imul
adc
dec
scas
dec
or
popa
pop
xlat
jbe
inc
add
pop
out
(bad)
cmp
push
iret
pop
or
sub
cmps
into
xchg
pop
mov
jo
inc
sub
ror
jmp
xor
sub
dec
mov
lock
inc
xor
push
loop
mov
cwde
inc
dec
ja
cdq
cmp
push
iret
adc
or
pusha
test
fs
lods
add
loope
inc
mov
rcr
add
(bad)
inc
or
pusha
and
push
jmp
adc
adc
out
cwde
dec
arpl
add
inc
daa
cli
and
inc
imul
jg
xor
mov
out
add
cmovb
push
sbb
dec
clc
cmps
mov
leave
inc
xchg
fsubr
or
push
les
(bad)
lods
sbb
and
push
jae
jne
fs
xor
pop
idiv
jb
jb
out
pop
inc
bound
sbb
or
pop
add
jl
(bad)
xchg
and
add
mov
push
xchg
jo
push
dec
adc
test
(bad)
pop
sub
and
mov
mov
fcomp
mov
pop
jo
adc
ds
inc
jb
jb
pop
xor
xor
enter
pop
js
jle
cwde
add
add
mov
cmp
push
pop
inc
and
pusha
push
xchg
xor
(bad)
and
fld
pop
inc
cmovbe
repnz
pop
(bad)
out
pop
push
test
fwait
mov
pop
pop
or
xchg
or
and
inc
inc
push
outs
fdiv
out
pop
adc
add
pop
fsubr
push
pop
add
pop
ror
(bad)
adc
adc
(bad)
pop
dec
adc
or
jns
pusha
inc
jg
pop
inc
jo
mov
pop
nop
setbe
dec
add
push
inc
dec
gs
shl
out
cmp
mov
pop
jg
and
outs
pop
push
orps
jg
and
inc
dec
push
popa
jb
ins
jae
test
mov
out
pop
push
add
push
xchg
or
pop
mov
sbb
push
rol
push
mov
cmp
adc
pop
cmp
inc
xor
xchg
cmp
fsubr
fmul
loop
ins
mov
jns
inc
and
xlat
cmps
adc
and
frstor
in
pop
mov
nop
setbe
inc
fndisi(8087
popa
clc
inc
popa
je
inc
mov
ja
or
sbb
add
or
add
orps
add
xchg
xor
pop
jne
pop
xor
and
cld
outs
sub
add
or
push
outs
nop
sbb
adc
adc
lods
pop
jno
pop
xor
or
mov
xor
push
add
mov
xor
mov
mov
pop
cmps
push
mov
mov
mov
adc
push
repz
out
inc
mov
cmp
pop
call
shl
lea
call
mov
fistp
imul
mov
cmp
lds
ror
cmp
setg
lea
mov
xor
push
or
ret
imul
or
push
and
inc
call
pop
clc
sub
cmp
adc
test
jle
add
and
out
mov
je
(bad)
push
shl
nop
pop
nop
lock
pusha
in
push
popa
nop
sahf
or
inc
add
add
push
pop
pop
ficomp
pop
data16
cmp
inc
cmp
jg
add
jmp
jmp
cmp
mov
or
push
inc
inc
xchg
jmp
fcomp
xchg
ret
push
pop
pusha
push
push
adc
mov
pop
push
pop
xchg
je
ror
lock
pop
sub
popa
icebp
mov
pop
ret
push
sbb
inc
xor
hlt
cmp
mov
jl
add
sub
pusha
mov
daa
push
cwde
mov
sub
sub
in
shl
inc
push
push
jle
mov
mov
ror
add
int
call
adc
in
push
lea
mov
iret
(bad)
in
mov
add
test
push
push
test
dec
mov
push
adc
push
push
and
sbb
and
fldenv
sbb
dec
xor
fnstenv
sbb
fldenv
fldpi
pusha
mov
cmp
scas
in
test
imul
fcmovnb
pop
ret
push
inc
mov
push
movs
jle
call
pop
jne
out
dec
sbb
sbb
xchg
xor
add
add
xchg
or
sbb
jne
mov
dec
sbb
inc
push
test
jmp
cmp
push
dec
hlt
mov
mov
dec
call
(bad)
(bad)
fist
clc
jo
cmp
(bad)
pop
xor
xor
loopne
or
sbb
xor
mov
or
out
dec
jne
or
add
clc
mov
mov
pop
adc
add
cmp
or
or
f2xm1
pop
add
mov
outs
mov
aas
in
jmp
jmp
jmp
int3
cmp
push
leave
lock
dec
jmp
lahf
popa
cmp
sbb
push
mov
aad
cmp
add
xor
pop
imul
mov
pop
adc
cmp
xor
xchg
xor
loope
add
clc
pop
jns
loopne
mov
repnz
mov
adc
mov
mov
fnsave
mov
les
shl
cmp
or
ret
(bad)
cmc
sub
in
dec
repz
xor
dec
push
imul
clc
and
mov
lods
scas
out
jp
lds
aas
or
inc
add
mov
or
jge
jo
std
lock
mov
mov
and
loopne
mov
add
mov
push
xchg
ss
scas
mov
shr
adc
scas
js
movs
cld
cmp
adc
ins
aam
mov
ins
dec
adc
loop
int
or
jo
in
push
mov
and
stos
loopne
mov
or
and
xor
lods
sbb
xchg
xchg
fld
adc
je
mov
jmp
inc
xchg
(bad)
fdiv
mov
sti
dec
mov
mov
xor
mov
mov
sbb
mov
xchg
mov
inc
mov
pop
test
inc
xchg
nop
retf
xchg
dec
mov
enter
fwait
mov
sub
add
push
sub
xor
fadd
dec
dec
rcl
mov
dec
ja
dec
mov
lods
add
daa
nop
push
sbb
sub
and
sar
ins
inc
mov
mov
mov
rcr
mov
inc
push
xor
add
mov
sbb
mov
inc
mov
push
mov
push
sub
mov
stos
sub
mov
push
dec
mov
enter
mov
mov
sub
sbb
loop
mov
outs
inc
mov
pop
es
aaa
inc
out
popf
inc
mov
inc
mov
pop
mov
mov
jl
imul
je
jle
and
arpl
(bad)
mov
dec
push
add
out
imul
and
xlat
inc
adc
je
std
adc
adc
adc
clc
lea
sbb
int3
pusha
sar
sub
ja
mov
or
pop
adc
and
push
cdq
pop
push
ret
mov
lods
jg
dec
jo
mov
jne
mov
push
enter
(bad)
mov
jo
sbb
push
jbe
dec
mov
inc
pop
pusha
jo
cdq
or
cmc
jmp
hlt
pop
lea
stos
xchg
xlat
lock
mov
aad
cdq
jo
or
jmp
inc
or
push
adc
es
int
xor
in
ins
scas
imul
sahf
xchg
sbb
loopne
jl
test
inc
sbb
mov
rcr
and
mov
cmp
jne
ds
sbb
mov
dec
mov
fcmovnu
retf
mov
mov
stos
addr16
jne
cmp
pusha
and
out
jmp
mov
mov
movhps
add
jmp
lds
aaa
dec
pop
sbb
xchg
mov
ins
xor
pop
pop
push
mov
daa
setl
movs
lea
sbb
(bad)
call
(bad)
mov
cmp
cmp
loopne
repnz
mov
jle
aas
adc
or
and
aas
pop
ss
(bad)
mov
add
pop
(bad)
scas
xor
push
sahf
sbb
push
loopne
call
ja
jo
imul
retf
and
rol
iret
cmc
pop
cmc
arpl
mov
sub
xchg
lock
(bad)
(bad)
sbb
xor
shl
(bad)
adc
add
push
dec
adc
inc
mov
cmp
jae
inc
dec
jne
cmp
ja
clc
clc
mov
push
stos
adc
fnstsw
out
xor
mov
cmc
out
cmp
arpl
rcl
mov
scas
aas
pop
pop
sub
mov
xor
mov
call
jne
add
add
inc
jno
xlat
jbe
fwait
and
fs
mov
or
push
mov
fdiv
enter
int
mov
pop
je
dec
mov
xchg
jg
out
rcl
cmp
pop
hlt
push
adc
hlt
jmp
push
cmp
xor
and
mov
imul
cmp
sub
mov
rol
clc
sub
inc
pop
pop
add
add
fdivr
jmp
xlat
sbb
test
arpl
test
imul
sar
test
mov
inc
mov
hlt
mov
gs
jl
mov
pop
jmp
pop
mov
test
call
pop
lds
test
(bad)
jmp
jbe
sbb
aam
je
push
push
jge
je
test
jecxz
mov
pop
and
adc
inc
mov
cmp
xor
sbb
arpl
cmp
sub
or
sub
inc
(bad)
mov
inc
in
cmps
popa
or
and
bound
hlt
(bad)
stc
in
jmp
mov
sub
jmp
cmp
das
pop
adc
movs
pusha
ficomp
or
jb
test
push
dec
je
add
jmp
mov
cmps
or
sbb
mov
jmp
mov
mov
push
inc
shl
mov
jge
sbb
xor
jbe
adc
xchg
cld
sbb
mov
jmp
push
cs
xor
and
pop
push
cmps
mov
outs
cmps
push
and
pop
add
add
xor
or
pop
or
pop
push
dec
jne
test
pop
daa
adc
xchg
ins
pop
add
and
sub
sub
loopne
jne
adc
sub
mov
ret
pop
imul
sub
fisttp
test
add
call
xor
dec
shr
sub
call
ins
xchg
clc
jo
std
push
loopne
sub
or
cwde
mov
lds
pushf
icebp
cmp
push
xor
jl
js
inc
sub
or
add
jb
xchg
xchg
aaa
lea
sbb
inc
jo
inc
(bad)
xlat
fiadd
xlat
cdq
sbb
sbb
xlat
push
xchg
or
jecxz
xlat
pop
ja
mov
push
aaa
mov
mov
inc
(bad)
std
cmp
jne
mov
(bad)
das
mov
xchg
jmp
fwait
add
add
(bad)
fs
push
sub
lods
jmp
je
je
in
cli
xchg
inc
sbb
sbb
add
(bad)
xchg
and
pop
lods
ret
inc
xchg
push
jnp
add
ss
into
mov
nop
repnz
ins
pop
ret
scas
add
or
dec
or
sbb
(bad)
pop
leave
jae
outs
mov
xchg
in
or
add
enter
and
into
test
xlat
inc
or
shr
cmp
lods
jge
ficom
hlt
pop
repnz
push
ins
add
xor
jecxz
ja
fmul
jl
inc
sbb
cmp
sbb
shl
imul
pop
push
inc
bound
in
cmp
jmp
loopne
adc
sti
mov
or
mov
jne
jg
fdivr
pop
shl
mov
std
loopne
push
push
mov
in
jmp
xchg
push
mov
cld
test
mov
jb
mov
jge
fwait
inc
mov
xchg
pop
(bad)
mov
mov
into
push
test
pop
mov
push
rcr
jge
or
add
add
pusha
mov
jb
sbb
push
aas
ret
sbb
frstor
addr16
mov
add
jp
dec
loopne
or
fwait
mov
sbb
fadd
hlt
fistp
out
movzx
test
inc
(bad)
mov
inc
daa
push
fadd
test
jl
scas
or
shr
pop
or
adc
out
imul
cmp
inc
icebp
xlat
cmp
and
pop
adc
dec
adc
cld
xchg
and
inc
fsubr
push
repz
test
int3
mov
jmp
cmc
iret
loopne
push
mov
adc
fadd
inc
gs
jne
jge
mov
inc
mov
cs
adc
sub
push
fs
aas
and
push
add
sbb
jg
cli
jns
idiv
add
xchg
cmps
mov
aam
lahf
mov
movs
adc
leave
and
mov
or
cwde
dec
xor
adc
cmp
push
add
adc
and
mov
test
cdq
mov
inc
adc
adc
in
(bad)
jne
mov
pop
push
and
push
leave
repz
and
jge
bnd
jmp
mov
add
loopne
mov
sbb
mov
shl
dec
push
fmul
add
xor
ja
mov
fisub
push
mov
cmp
add
push
inc
add
mov
(bad)
push
lahf
adc
jmp
xchg
adc
outs
pop
ins
(bad)
push
adc
push
adc
aaa
scas
(bad)
inc
push
pop
push
or
sbb
inc
sbb
inc
sbb
push
and
push
and
sbb
(bad)
mov
jle
push
and
in
jp
clc
or
and
je
mov
mov
mov
mov
push
mov
out
mov
les
loop
cmp
pop
cdq
jbe
pop
ret
mov
retf
pop
xor
movs
pop
cmp
mov
shr
mov
pop
xchg
sub
popa
sbb
sub
lahf
fsubr
sbb
or
and
inc
inc
pop
xchg
sub
jnp
sbb
sub
jb
mov
out
ins
xchg
shl
mov
es
jne
adc
dec
xchg
mov
jb
add
adc
push
adc
stos
sbb
lods
or
push
push
sbb
ret
pop
sbb
xchg
xorps
test
push
int3
cmp
es
shr
or
or
xchg
or
jbe
loope
pop
xchg
pushf
test
push
xor
and
jb
mov
sub
pop
and
pop
add
add
fcomp
xor
adc
jo
push
cld
mov
pop
mov
add
cmp
test
sub
or
pop
pop
loope
jb
adc
push
pop
pop
ret
or
mov
xchg
sub
fdivrp
loopne
es
mov
push
or
mov
jns
push
retf
pop
mov
rol
(bad)
mov
or
ds
test
mov
lahf
aaa
ret
int3
adc
inc
rcr
add
je
pop
jge
movs
cmps
or
pop
es
int3
dec
enter
ror
inc
fsub
push
fimul
mov
or
cmp
adc
pusha
lds
mov
mov
inc
inc
(bad)
or
xchg
sub
inc
xor
or
mov
(bad)
sbb
and
add
mov
nop
push
mov
sub
or
out
adc
inc
mov
sbb
and
nop
xlat
pop
movnti
pop
mov
jmp
add
xchg
mov
call
cmp
or
lds
and
les
cli
(bad)
gs
cli
add
dec
sub
pop
push
pusha
push
jecxz
test
(bad)
jg
stc
scas
ffree
sbb
sub
adc
adc
add
push
lahf
cmp
jle
jne
fsubr
dec
sub
sub
fisttp
or
test
test
mov
push
hlt
mov
xor
mov
push
mov
inc
in
in
mov
dec
in
push
push
pop
push
pop
pop
dec
test
sahf
frstor
dec
jmp
mov
xor
call
xchg
inc
test
mov
sub
in
std
sub
jl
push
mov
dec
xchg
dec
or
jge
jae
fisttp
jge
pop
push
aam
jmp
sub
dec
mov
cmp
sub
pusha
popa
inc
mov
sub
push
les
xchg
mov
cmps
out
adc
scas
or
mov
movs
inc
push
lods
xor
xor
inc
and
jno
(bad)
into
mov
xchg
daa
outs
loopne
xchg
push
cmp
lahf
pusha
lea
loopne
popf
test
mov
sahf
add
fs
es
sbb
xchg
in
sbb
adc
sbb
lods
in
xchg
add
test
push
or
mov
adc
sbb
add
or
or
push
(bad)
mov
adc
xlat
adc
xchg
xchg
xor
xchg
loopne
lea
xchg
or
idiv
jae
mov
jno
inc
and
arpl
fadd
pop
dec
push
or
call
xor
pop
cmp
mov
lea
(bad)
sbb
jmp
mov
adc
push
out
sbb
pop
vpminud
and
dec
stc
pop
xor
sub
mov
nop
popa
(bad)
or
pop
add
shl
cmp
nop
or
test
scas
pop
in
jg
cmps
cmps
ret
sbb
js
add
jmp
fsub
dec
mov
cmp
popa
and
or
sub
and
dec
dec
cmps
retf
and
iret
mov
(bad)
(bad)
adc
push
xchg
and
adc
movhps
ja
mov
mov
and
ds
inc
mov
rcl
adc
xchg
mov
pop
ss
or
mov
sahf
xchg
(bad)
call
adc
nop
shl
mov
pop
mov
fucomp
ins
mov
cmp
jno
and
mov
mov
push
or
dec
lea
mov
jl
and
push
cmp
(bad)
push
stc
xchg
movs
sub
sbb
leave
add
dec
add
lea
mov
ins
jmp
inc
sub
js
sbb
mov
add
lds
(bad)
sbb
ja
jecxz
cmp
aas
xor
xor
aas
jecxz
mov
pop
cmp
jb
bound
jecxz
xchg
aaa
mov
jbe
repz
jns
mov
enter
jns
outs
aaa
xor
js
jns
mov
iret
js
in
inc
mov
jns
jns
xchg
mov
jns
fdiv
outs
dec
sbb
inc
jns
xlat
sbb
sub
jns
adc
inc
js
arpl
mov
ret
outs
fcomp
xchg
push
pop
jno
daa
xchg
mov
call
push
mov
pop
xor
cmp
cmp
lahf
inc
aaa
sub
mov
and
stc
int3
mov
dec
dec
or
xlat
scas
cmp
pop
or
(bad)
test
dec
call
jg
mov
sbb
sub
sbb
sbb
out
dec
test
mov
aas
call
jmp
sub
ror
cmps
les
jno
test
mov
or
xchg
daa
imul
add
cwde
mov
xchg
sub
addr16
sub
loopne
es
sub
mov
jmp
(bad)
pushf
arpl
ret
xchg
add
data16
mov
pop
cmc
das
pushf
jns
or
ds
sbb
cmp
int3
mul
cwde
sub
inc
push
adc
cld
(bad)
sub
iret
mov
mov
outs
push
aam
cmp
cmp
dec
jae
push
inc
or
push
sub
sti
test
or
jle
push
inc
xlat
sbb
xchg
and
pop
jecxz
aam
xchg
and
hlt
pushf
sbb
add
fdiv
in
xor
nop
inc
test
cs
das
mov
xchg
mov
push
xchg
imul
add
dec
or
idiv
add
add
adc
pop
xchg
mov
adc
cmp
(bad)
jmp
jle
scas
mov
inc
push
add
inc
cmp
jno
mov
xor
adc
shl
adc
push
cmp
outs
and
cmp
add
push
aad
jl
in
adc
shl
sbb
push
cmp
es
jp
add
push
sbb
xchg
add
pusha
jae
mov
adc
jle
pop
inc
add
add
test
and
or
lods
push
frstor
jnp
push
clc
mov
repnz
clc
xor
push
test
or
ficom
and
nop
xchg
dec
inc
add
add
add
push
push
jbe
adc
int3
rcr
mov
xlat
test
mov
movs
adc
push
repnz
adc
aaa
mov
and
add
sub
and
sbb
sbb
mov
ret
sbb
sbb
or
retf
(bad)
and
mov
pop
nop
(bad)
lods
sbb
xor
or
call
pcmpeqw
(bad)
sbb
sbb
push
add
dec
lock
test
ins
pop
push
adc
stos
in
adc
sbb
sbb
fsubr
push
adc
push
cwde
add
push
call
sub
mov
push
add
and
and
lock
mov
ds
mov
mov
cwde
sub
shl
mov
mov
mov
jne
cdq
jle
loopne
cmp
sbb
dec
sub
dec
sbb
test
adc
push
lea
test
inc
xor
or
push
mov
mov
int
sbb
data16
pop
xor
sbb
jmp
aaa
xor
mov
loopne
neg
dec
ins
sub
xchg
xchg
stos
jmp
test
cmp
jg
dec
and
push
or
xor
inc
push
push
push
inc
dec
inc
push
adc
cmp
push
sti
out
hlt
fwait
mov
je
mov
push
fidivr
xor
push
test
je
or
adc
add
mov
push
push
mov
sbb
rcr
loope
aam
pop
jge
push
(bad)
mov
cwde
imul
js
add
mov
xor
mov
rol
add
out
fisub
fwait
xchg
cmp
jle
jl
addr16
call
rol
ins
push
jne
in
adc
cmp
mov
ins
cmps
retf
push
push
shl
push
loope
xor
jae
add
ss
jb
jb
inc
adc
retf
jo
ja
sub
scas
push
clc
jnp
mov
add
push
mov
or
popa
loop
test
push
mov
clc
jge
xchg
jmp
mov
mov
ret
cmp
inc
mul
adc
aaa
aaa
or
push
cmp
push
lea
loopne
jae
pop
pop
pop
(bad)
and
sar
dec
adc
(bad)
mov
ds
nop
rol
aas
pop
xchg
aas
mov
mov
sbb
(bad)
jmp
loopne
xor
fs
sbb
sub
add
ficom
xor
fcomi
aam
cwde
add
push
fucomi
pop
push
test
ret
jno
enter
pop
sti
jmp
iret
mov
jg
scas
fs
sub
and
mov
add
xchg
xchg
inc
xchg
or
jmp
adc
mov
cmp
sbb
dec
es
aas
hlt
mov
mov
mov
adc
loop
jo
pop
add
fimul
and
push
fst
(bad)
cwde
cmp
push
mov
and
xchg
and
pop
shl
pushf
lock
add
inc
dec
in
dec
sub
jo
xor
xor
das
data16
add
sub
push
mov
pop
ret
pop
mov
mov
mov
and
movs
inc
popa
or
ret
jmp
popf
sub
popa
jo
adc
rcr
inc
rcl
lods
imul
push
jo
(bad)
fs
mov
xchg
mov
pop
ret
mov
push
popa
xor
sbb
inc
sub
jns
push
cwde
sub
add
test
cmp
inc
push
shl
movs
cmp
mov
icebp
inc
fist
adc
icebp
mov
dec
je
sbb
pop
mov
(bad)
adc
add
mov
push
clc
adc
jp
fisttp
adc
push
cmp
cmp
or
push
inc
sub
pop
nop
les
sub
clc
and
aam
imul
push
push
inc
xchg
loopne
pusha
scas
sub
xor
inc
lods
push
push
dec
leave
push
xlat
mov
outs
or
push
ja
into
sbb
jns
mov
scas
jbe
adc
mov
gs
inc
or
std
mov
outs
mov
pmuludq
stc
test
or
mov
je
and
pop
imul
mov
jne
shl
daa
sbb
xor
push
adc
mov
xchg
outs
and
mov
jg
icebp
(bad)
fstp
inc
lock
inc
adc
mov
and
xchg
or
pop
rol
es
in
mov
cmp
enter
call
movs
mov
aad
jo
add
retf
mov
add
pop
add
or
popf
jecxz
popa
ret
call
cwde
call
(bad)
push
push
push
movs
xchg
push
push
sbb
aaa
and
bound
ss
loopne
fcmovbe
mov
(bad)
xor
rol
fadd
fdiv
call
mov
jb
pop
(bad)
sar
push
inc
adc
fdivr
xchg
pop
mov
jp
call
mov
or
adc
pop
mov
adc
(bad)
push
out
push
test
and
inc
add
push
add
jb
cmp
and
outs
add
ins
sbb
cmp
movs
pop
lods
cmp
daa
push
push
jbe
mov
add
(bad)
je
outs
xchg
fstp
bound
inc
pop
call
jbe
ss
add
out
nop
adc
(bad)
or
pop
mov
or
fidivr
dec
xchg
sbb
xchg
push
push
and
dec
push
and
adc
(bad)
retf
popf
sbb
arpl
imul
(bad)
lock
mov
lahf
adc
xchg
test
cmp
imul
mov
xor
enter
xlat
mov
sbb
cld
aaa
adc
xchg
aaa
inc
mov
xlat
sahf
xlat
scas
and
inc
ss
in
jp
(bad)
aam
xlat
(bad)
adc
inc
adc
cwde
dec
aam
inc
or
xchg
repnz
mov
adc
mov
fsubr
je
adc
xchg
test
jle
ret
jmp
out
jg
adc
je
or
je
test
mul
les
inc
pop
pop
dec
clc
and
and
mov
retw
or
lidtd
add
sub
cmp
jl
jmp
xlat
enter
ret
mov
mov
add
jle
in
movs
adc
add
test
sub
adc
sbb
fs
mov
dec
or
inc
jmp
or
push
jne
cld
test
adc
mov
leave
sbb
fild
(bad)
adc
push
sbb
aam
(bad)
adc
ins
dec
out
push
fst
shl
mov
pop
fwait
adc
imul
neg
call
xchg
inc
call
loopne
or
mov
dec
jbe
movs
dec
cmps
or
and
cmp
cli
test
scas
sub
mov
lock
movzx
movs
(bad)
push
cmc
mov
test
test
fadd
cdq
fwait
sbb
dec
jne
loop
ja
xlat
outs
inc
jb
mov
pop
dec
jg
cmp
dec
push
and
movs
rcl
mov
test
mov
js
xor
mov
mov
int3
or
mov
and
mov
stos
dec
jl
sbb
rol
push
xlat
jle
cdq
inc
jb
inc
mov
push
data16
div
mov
scas
mov
sub
mov
add
pop
or
sbb
jno
data16
cld
sub
out
or
call
movs
mov
add
inc
xchg
fmul
or
mov
jns
fdiv
lea
mov
hlt
adc
sbb
add
ror
fist
loope
xchg
push
iret
movs
push
sub
loope
mov
xchg
lock
loopne
pop
mov
mov
sub
xor
lea
push
or
ds
bound
sbb
xor
cmp
xchg
std
cmps
mov
dec
inc
inc
dec
jne
fdiv
icebp
test
pop
(bad)
pop
mov
js
js
jnp
in
ds
int
add
mov
xor
add
scas
mov
push
leave
sub
cmps
xchg
add
and
or
loop
pop
dec
in
add
lock
ret
pop
rol
and
nop
push
sbb
inc
sub
je
and
jb
je
jb
jb
shr
in
sbb
arpl
mov
cmp
fadd
inc
jmp
loopne
mov
push
ins
ja
jo
jb
jmp
push
ja
ja
adc
in
test
loope
xchg
dec
jo
ja
push
or
cmp
pop
ins
cmp
cmp
add
pop
loop
sbb
jb
stos
ret
ja
jo
leave
cdq
mov
ja
cmp
ins
sbb
cwde
call
imul
sbb
add
stos
ret
mov
call
bound
cmp
dec
or
pop
out
dec
push
and
in
hlt
or
js
mov
or
mov
or
add
fsin
fcom
pushf
push
xlat
inc
rol
pop
mov
and
shl
cs
fisub
shl
sub
and
or
es
mov
or
and
out
fs
push
lock
pop
ret
mov
pushf
(bad)
mov
ret
arpl
das
or
shl
shl
ja
shl
or
adc
jle
mov
push
and
and
ds
adc
sbb
mov
scas
in
cmp
mov
arpl
mov
adc
adc
sbb
cdq
jae
xor
xor
mov
or
adc
push
xor
or
push
inc
add
retf
push
push
jo
jl
jmp
add
jns
scas
cmp
sbb
jne
iret
cmovs
loopne
xor
pop
sbb
cmp
ror
mov
xor
xchg
mov
stos
sbb
xor
and
sbb
cmp
scas
adc
outs
daa
pop
pop
fcomp
add
jge
mov
mov
aas
int3
and
mov
or
pop
xchg
jbe
and
ds
mov
shl
cmp
lods
pop
(bad)
push
cmp
sbb
jecxz
pop
sbb
imul
sar
mov
add
ret
push
call
pop
dec
fbstp
mov
mov
add
ins
push
mov
cmps
mov
dec
je
test
neg
aaa
ins
or
loop
sub
cmovae
loopne
push
test
sub
sub
prefetchw
jmp
dec
test
nop
pop
push
push
mov
or
ja
arpl
dec
call
mov
in
mov
add
sti
mov
bound
sti
adc
or
mov
out
loope
push
scas
add
mov
fmul
into
lods
jmp
iret
push
xor
outs
aam
scas
xlat
sub
jne
adc
push
sub
ins
or
and
sub
sub
dec
and
hlt
sub
adc
mov
mov
jle
movzx
adc
sub
or
xchg
pop
and
fwait
push
mov
dec
in
push
sbb
(bad)
hlt
fcom
inc
sahf
daa
clc
sti
cmp
fstp
and
sub
dec
rcl
xor
fsubr
add
cmp
and
push
mov
cmps
fst
dec
scas
push
add
faddp
inc
mul
adc
cmp
imul
mov
or
mov
and
or
mov
cmp
mov
sub
push
js
dec
fcom
pop
mov
fdiv
or
mov
cmp
push
outs
shl
inc
sub
imul
aad
mov
jmp
jmp
sub
xor
nop
(bad)
adc
shr
pop
push
ret
sbb
mov
pushf
mov
add
jnp
sbb
das
add
pavgb
pop
not
pop
movs
sbb
les
repz
iret
mov
xchg
dec
mov
add
add
enter
add
push
in
leave
popf
jecxz
mov
ret
fiadd
push
dec
fs
popa
jae
es
push
inc
jb
popa
je
pop
cld
loopne
out
add
or
add
(bad)
jg
in
gs
jmp
dec
jae
jbe
imul
call
gs
pop
add
outs
mov
push
je
imul
add
test
mov
ss
sbb
imul
mov
inc
inc
gs
inc
outs
arpl
jb
inc
jne
jns
sahf
enter
add
cmovno
sub
in
dec
gs
xchg
mov
jae
dec
mov
inc
ret
scas
or
inc
jns
jae
cmp
ror
bound
out
(bad)
inc
xor
sar
inc
inc
sbb
xchg
cs
inc
ins
adc
jo
dec
test
lds
sbb
or
sbb
sbb
and
inc
and
add
(bad)
lahf
mov
jb
push
outs
jae
inc
and
jp
gs
sar
and
test
pop
pop
or
ins
mov
and
dec
add
add
pop
pushf
das
mov
add
stos
iret
inc
test
and
jl
jbe
xchg
push
out
push
xlat
pop
cwde
push
out
mov
add
sub
push
dec
outs
je
sbb
push
cmp
das
movs
(bad)
and
sahf
push
outs
pop
mov
aad
xor
add
in
das
fld
add
pop
mov
movsx
sub
das
pop
or
cmp
add
dec
imul
inc
outs
fs
inc
xor
push
sbb
mov
or
lea
les
rcr
mov
out
adc
clc
jp
test
xor
sbb
sbb
ds
and
cmp
dec
les
ret
cmp
mov
xlat
jb
stc
and
adc
or
lods
xor
mov
scas
lods
sub
mov
(bad)
pop
sbb
les
push
jmp
out
imul
inc
lock
test
xor
mov
imul
ret
fidiv
mov
stos
cmp
and
ja
xor
pop
push
and
bound
iret
imul
int3
(bad)
loop
mov
sar
cld
fcomp
jo
mul
or
loope
cld
xchg
and
iret
jo
xor
xor
fbstp
adc
out
stc
sub
jmp
and
ins
clc
dec
out
mov
aas
sahf
fisttp
pop
dec
and
xlat
ins
mov
es
push
xlat
int3
call
lock
jbe
inc
push
mov
mov
jle
ret
sub
retf
ficom
pop
shl
mov
adc
jb
aaa
pop
xlat
(bad)
jmp
jl
push
add
ret
xchg
mov
call
in
sar
push
retf
sub
sbb
dec
or
jp
or
fiadd
jb
adc
sub
pop
sti
push
dec
fs
pop
mov
add
outs
loopne
imul
in
lods
dec
in
sbb
clc
mov
cmp
jb
xor
cld
or
and
retf
into
mul
sbb
int3
jb
mov
pop
aam
mov
out
mov
push
ret
enter
add
leave
stos
and
cmp
(bad)
push
fdivr
cmps
outs
dec
cmp
call
test
outs
in
ins
cld
add
and
outs
push
mov
mov
test
xor
xchg
xchg
in
or
xchg
push
push
jle
add
call
cmp
fadd
lods
cmp
mov
in
call
ins
jl
pop
mov
sbb
xchg
adc
retf
fcomp
and
mov
jmp
pop
or
ins
xchg
outs
sbb
sub
push
jb
add
js
test
sbb
call
je
cmp
xchg
ss
inc
jne
inc
and
daa
movs
cmp
inc
popa
mov
push
sub
fist
push
mov
shl
aas
adc
push
push
mov
daa
cld
xchg
mov
test
je
add
jae
sbb
adc
and
and
add
dec
add
mov
sub
cmp
sbb
or
std
push
xor
outs
outs
addr16
outs
jb
push
arpl
scas
jo
or
dec
push
in
imul
pop
add
push
adc
pusha
mov
push
out
das
hlt
push
xchg
or
mov
pushf
fsubr
ret
pop
pushaw
pusha
adc
add
add
xor
ret
and
inc
inc
inc
jne
data16
add
mov
movlps
gs
popa
addr16
imul
test
push
outs
outs
cmp
test
ret
aam
adc
add
movs
jle
cmp
push
enter
clc
push
sbb
dec
cmp
call
cmp
mov
dec
push
mov
mov
lds
cs
sbb
fadd
inc
cli
je
loop
xor
aaa
push
adc
push
sbb
push
adc
aaa
xor
mov
jo
xchg
sti
xchg
cmp
xchg
pop
loope
or
add
add
jbe
(bad)
mov
xor
push
push
mov
cwde
mov
add
test
dec
into
jo
jo
jae
imul
adc
daa
jg
inc
push
or
aad
daa
or
sub
adc
add
add
loopne
mov
add
xchg
ins
movaps
cmps
daa
stos
pop
or
inc
or
pop
pop
push
xchg
xlat
dec
push
sbb
sahf
add
or
add
adc
dec
pop
mov
push
es
paddsb
rol
mov
movzx
(bad)
cmps
cmp
or
dec
push
adc
shl
add
xor
movs
das
add
jnp
xor
add
or
into
fwait
aad
mov
jl
adc
(bad)
push
loope
add
inc
and
xor
add
out
add
sub
xor
and
cmp
lds
inc
add
pop
xor
aam
in
in
xor
and
(bad)
xor
mov
xchg
addr16
push
nop
and
add
xor
adc
std
or
aam
dec
mov
mov
sti
aaa
push
mov
or
and
or
test
outs
xchg
sbb
nop
ror
(bad)
and
inc
adc
or
pop
or
ss
or
loopne
loope
pop
dec
or
or
ss
xchg
inc
mov
cwde
loopne
inc
dec
or
lock
push
xchg
test
sbb
and
fsub
mov
jmp
outs
cmp
enter
add
xchg
jae
xor
inc
xchg
out
adc
cmp
inc
mov
and
or
sub
inc
mov
and
or
cmp
cmp
ds
add
add
mov
push
pop
aam
mov
lahf
xlat
clc
out
push
and
pop
pop
call
pop
or
fstp
mov
sahf
or
cmp
icebp
jmp
mov
adc
shr
loope
add
jl
sbb
add
or
push
hlt
push
push
inc
jae
mov
ret
fisubr
(bad)
mov
lods
add
and
aas
outs
add
cmp
jle
dec
sti
aas
jg
ins
outs
fwait
inc
repnz
add
sti
inc
jne
mov
dec
cmp
cmp
or
or
cmps
or
and
mov
mov
call
xchg
jmp
sbb
shrd
shr
push
aad
sbb
data16
outs
pop
add
add
loopne
or
ret
xchg
outs
jns
sbb
or
or
(bad)
add
xlat
push
mov
sub
dec
js
adc
sbb
jb
sbb
inc
mov
bound
xchg
xchg
mov
add
inc
push
jmp
or
shl
cld
add
movs
add
sub
cmp
add
jo
(bad)
cmp
xor
cmp
fcom
pop
sbb
inc
mov
jmp
cmp
mov
(bad)
push
sbb
in
and
mov
in
mov
and
in
mul
sub
scas
fadd
hlt
mul
mov
xor
cld
imul
ins
mov
idiv
add
imul
or
pop
dec
imul
dec
mov
adc
(bad)
jp
adc
jae
mov
jp
mul
cmp
cmp
ss
jb
div
and
jbe
lods
sti
jo
cwde
and
cwde
sub
bound
sub
not
sub
mov
xor
mov
(bad)
imul
bound
cmp
cwde
inc
div
mul
sub
mov
nop
dec
div
div
or
push
cmp
sub
or
shr
pop
cmp
out
add
and
rcr
jbe
mov
pusha
and
out
cs
in
ret
dec
push
pusha
shr
jo
in
popa
(bad)
out
je
in
(bad)
les
jl
arpl
sahf
inc
sbb
in
mov
out
inc
in
push
nop
push
pushf
sti
(bad)
not
or
fmul
cmp
mov
out
pop
test
inc
mov
jne
ret
jne
into
loopne
movs
neg
adc
imul
mov
lods
not
mov
ins
mov
pop
mov
movs
mov
lds
lods
fcom
mov
push
mov
int3
not
mov
mov
mul
add
mov
mov
mov
pop
mov
retf
jle
push
mov
dec
mov
mov
add
repnz
add
aas
xor
lock
lea
fisubr
jmp
nop
fidiv
rcr
nop
jns
sub
xchg
adc
jbe
aaa
fidivr
add
add
call
xchg
loopne
and
or
loop
lock
clc
lea
movs
movs
aam
movzx
mov
shl
fbstp
push
push
add
retf
or
es
loop
and
out
(bad)
fild
push
enter
or
mov
loopne
push
add
xchg
out
sub
push
or
shr
or
(bad)
fst
out
dec
or
inc
add
shr
or
in
mov
add
mov
sahf
push
push
sub
bswap
or
int3
mov
outs
adc
call
int
inc
fadd
fcomp
jle
pop
cmps
add
cli
mov
or
gs
nop
mov
dec
mov
push
ss
nop
push
or
out
adc
push
add
loope
push
lods
ins
push
mov
lods
and
test
add
add
pusha
pop
adc
lds
inc
push
cs
vmovaps
sbb
(bad)
jo
das
cmp
popf
hlt
adc
sbb
in
(bad)
fcom
pop
pop
xchg
push
xchg
dec
adc
add
test
push
test
push
xor
mov
adc
lock
test
push
push
rcr
idiv
jg
fiadd
push
sar
retf
or
jle
push
jge
rol
pusha
adc
inc
and
mov
mul
adc
mov
mov
push
push
ins
xor
push
imul
imul
xor
mov
loop
push
jge
lea
les
inc
hlt
cmp
aam
ds
push
and
add
jo
sub
lds
jl
dec
adc
dec
xor
loop
out
mov
mov
out
dec
outs
es
mov
sbb
inc
mov
fadd
loopne
loopne
(bad)
fdivr
bound
stos
cmp
js
add
adc
mov
sbb
sbb
into
xchg
sub
pop
xor
inc
sub
loopne
xchg
and
ror
add
or
les
les
ss
push
adc
push
pop
lock
in
xchg
push
pop
int3
jecxz
pop
fcmovnb
xchg
(bad)
imul
mov
into
xor
xchg
repz
int3
les
test
or
xor
into
aam
stos
mov
dec
inc
ins
mov
or
mov
aam
mov
inc
clc
cmp
adc
inc
adc
and
sbb
add
sbb
cmp
cdq
jl
fisubr
push
sub
shl
xchg
inc
sbb
sar
sti
push
adc
adc
adc
cmp
mov
ret
imul
push
arpl
test
sbb
or
lock
and
mov
cmp
(bad)
jnp
push
fmul
or
jp
test
mov
mov
icebp
outs
push
scas
mov
pop
or
jne
xchg
jo
add
sub
ins
loopne
mov
sub
rcr
sub
lds
rol
xlat
sbb
ret
mov
cwde
test
dec
pusha
mov
call
(bad)
fidivr
je
mov
push
add
call
dec
mov
rcr
mov
add
xor
js
mov
or
add
or
jl
pop
mov
movs
and
adc
add
sub
lods
sbb
adc
xor
pop
repz
sbb
adc
lods
jns
out
xor
sub
xor
ficomp
pop
push
push
sub
ret
mov
sbb
(bad)
jne
mov
and
push
cmp
sar
cmp
add
adc
push
pop
inc
mul
jg
sbb
pop
mul
sbb
push
cmp
imul
cmp
sub
fwait
in
sub
cmp
xor
xor
cmp
sbb
or
adc
mov
and
outs
inc
imul
sbb
mov
dec
sbb
test
cmp
(bad)
push
movs
mov
lea
sub
xchg
(bad)
mov
inc
xlat
push
(bad)
ss
arpl
cwde
pop
push
test
adc
push
nop
out
outs
fsub
push
jmp
add
and
stos
sbb
xor
push
mov
jne
(bad)
in
or
loope
mov
fistp
mov
push
pusha
push
push
adc
call
mov
sub
fst
jo
cld
rdmsr
add
dec
imul
or
push
dec
dec
dec
outs
outs
and
std
out
sub
inc
dec
outs
jae
and
inc
inc
outs
ins
popa
imul
and
fwait
(bad)
ins
pop
dec
data16
dec
dec
add
add
inc
inc
or
sbb
(bad)
ja
inc
jne
push
arpl
outs
outs
es
ret
ror
ret
clc
ins
adc
mov
aaa
and
rcr
add
jg
mov
lock
sub
dec
rol
cld
gs
ins
imul
mov
inc
pop
xor
push
scas
les
adc
xor
jo
xor
add
out
fmulp
add
pop
dec
int3
stos
enter
inc
and
and
les
mov
mov
out
pusha
iret
les
mov
mov
and
test
outs
mov
mov
hlt
sub
add
cmp
ds
pop
pop
dec
pusha
nop
inc
daa
daa
or
add
cmp
add
imul
loop
jb
je
dec
je
add
jmp
or
sbb
xor
mov
fld
adc
(bad)
push
cmps
push
jmp
xor
jmp
sbb
sbb
adc
cmp
or
mov
cmps
loopne
pop
pusha
fcomp
mov
mov
cmps
test
mov
add
shl
mov
jle
fimul
lods
xor
sar
sbb
adc
add
test
lods
jl
add
jmp
popa
xor
push
clc
stos
lock
rol
enter
mov
daa
div
ret
(bad)
xchg
shl
hlt
mov
je
push
jl
in
adc
jne
jbe
mov
sbb
xor
mov
ret
jbe
mov
inc
mov
and
fistp
sbb
or
sub
inc
xchg
dec
enter
or
mov
test
or
adc
aas
adc
and
mov
jns
sar
add
fdivr
sub
mov
fwait
cmps
ds
lock
mov
adc
mov
xor
inc
push
xchg
nop
lods
xor
(bad)
jecxz
ins
ja
or
sub
inc
cmp
loope
sub
fstp
lahf
ror
inc
cmp
ds
inc
das
pop
js
enter
push
call
cmp
out
or
and
jg
add
xchg
xchg
add
movs
or
xor
cmp
dec
outs
call
daa
ret
mov
and
mov
out
sbb
fsubr
jmp
test
stos
dec
jne
mov
cmp
dec
inc
adc
push
push
push
dec
dec
inc
add
push
clc
(bad)
fbstp
pusha
daa
adc
inc
inc
push
push
dec
push
pop
pop
push
push
inc
push
push
push
pushf
dec
push
and
jl
or
dec
popa
outs
fs
gs
push
arpl
push
addr16
push
push
or
jnp
aaa
jo
pop
pop
fs
outs
ja
cmp
mov
and
jo
push
mov
push
je
ins
jo
es
xor
clc
or
ret
addr16
push
gs
(bad)
or
cmc
add
adc
xor
fild
or
or
adc
or
popa
lock
imul
int3
xor
or
jle
sbb
jae
daa
imul
inc
dec
jge
add
arpl
popa
js
outs
sbb
imul
cmps
or
add
js
adc
gs
data16
inc
outs
ins
and
xor
addr16
push
data16
fcomp
retf
sbb
sub
enter
or
cmp
push
pop
or
push
jns
mov
or
push
out
cmp
mov
inc
loop
push
cmp
rol
push
push
or
ins
dec
xor
ins
lea
xchg
(bad)
push
popf
std
add
inc
inc
push
pop
dec
inc
mov
inc
dec
sar
stos
imul
(bad)
out
jbe
inc
jb
popa
adc
push
jb
outs
arpl
ins
sti
js
out
and
push
dec
gs
sbb
add
out
sti
icebp
mov
je
aam
in
pop
in
push
push
dec
push
inc
pop
inc
push
inc
inc
dec
push
dec
inc
dec
push
pop
dec
inc
dec
inc
dec
and
(bad)
(bad)
in
push
inc
dec
jmp
rol
fldenv
or
imul
out
call
pop
jb
fs
or
pushf
dec
into
ret
and
and
inc
and
mov
je
sti
push
pop
pop
inc
inc
adc
sar
(bad)
jne
add
or
in
mov
fdivr
jae
js
imul
add
mov
loopne
cmp
mov
adc
cmps
add
inc
inc
inc
lds
rol
cmp
sbb
xor
aaa
emms
or
pushf
or
xchg
xchg
pop
push
inc
mov
push
push
dec
push
sahf
xchg
inc
push
dec
sbb
aaa
push
xor
ds
sub
mov
push
inc
arpl
jne
sub
xchg
xchg
cmp
loop
outs
jb
sub
ja
or
and
jb
sbb
cli
outs
xchg
sbb
sbb
movs
sub
and
clc
loopne
cmp
pop
jo
adc
sbb
inc
mov
sbb
adc
sahf
shl
inc
pop
push
inc
mov
xor
fmul
or
daa
dec
es
je
js
add
popa
xchg
movs
mov
sbb
in
ss
jno
or
xor
or
mov
jo
push
jo
outs
xor
push
xchg
imul
movs
loopne
add
cld
and
sbb
test
stos
mov
call
push
hlt
adc
jmp
rcl
add
jecxz
or
mov
adc
dec
push
cwde
dec
push
dec
mov
push
push
dec
pop
push
dec
dec
clc
add
sbb
(bad)
push
ja
add
ror
jmp
loope
push
push
and
inc
daa
dec
cmp
mov
or
lods
stos
sbb
push
xchg
sar
test
push
push
jl
or
ds
stos
mov
add
push
add
mov
xor
mov
mov
jmp
xchg
mov
push
mov
push
dec
dec
or
xor
or
sbb
sti
jge
lds
pushf
dec
inc
pop
inc
inc
xor
add
sub
imul
jnp
adc
rol
enter
in
ret
jecxz
sti
rol
xor
out
push
pusha
shl
jecxz
cmps
add
ja
dec
repz
inc
ja
test
add
dec
cmps
fcom
mov
ror
sbb
fild
mov
inc
inc
sbb
add
loopne
frstor
xchg
jbe
jg
call
dec
inc
push
dec
inc
mov
pop
jnp
or
mov
dec
push
push
xchg
or
gs
test
(bad)
pop
or
push
(bad)
dec
popf
ds
bound
ror
repnz
inc
js
xchg
dec
scas
rcr
mov
pop
add
rol
or
dec
(bad)
xlat
dec
fdiv
push
inc
push
int3
inc
cs
sbb
iret
pop
and
call
add
popf
add
iret
and
and
sahf
push
les
push
inc
inc
dec
mov
(bad)
in
and
jmp
cmp
or
arpl
jp
imul
jo
lea
push
push
pop
add
mov
scas
pop
dec
dec
inc
dec
rol
mov
adc
sbb
dec
popa
in
add
(bad)
mov
test
push
aaa
push
inc
ins
mov
sbb
ja
jo
pushf
inc
and
fimul
push
int3
sbb
push
and
inc
jecxz
leave
pusha
add
jge
imul
pop
mov
push
push
jns
jne
arpl
push
popa
bound
mov
outs
ror
inc
js
add
xor
add
fs
hlt
or
call
jb
xchg
sbb
aad
retf
push
dec
xor
bound
mov
sbb
pop
sbb
jno
imul
push
xchg
dec
cld
push
test
inc
cmp
and
sbb
sbb
dec
dec
rcl
pusha
jae
and
mov
imul
arpl
ins
add
mov
gs
inc
pop
jb
sub
add
jo
sub
or
add
sub
cmp
xor
mov
inc
and
das
jb
ins
jnp
cmp
xchg
sub
inc
imul
cld
cli
bound
mov
or
add
clc
jb
push
xor
inc
or
fcomp
hlt
push
imul
cmp
mov
imul
mov
xor
je
pop
inc
cmp
jne
aaa
test
dec
pop
xor
or
push
loop
xor
pop
outs
inc
ja
adc
inc
push
push
mov
fadd
pop
or
popa
cli
xchg
inc
fs
inc
jb
in
sub
inc
mov
mov
push
sub
dec
push
(bad)
arpl
xor
xacquire
xor
xor
stos
ins
xchg
cmps
je
leave
mov
jo
inc
cli
loopne
xor
jp
loope
push
retf
rcr
lock
jne
fisttp
add
std
jle
in
in
in
out
in
in
call
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
in
in
(bad)
(bad)
in
in
rol
ret
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwde
cdq
call
popf
sahf
shl
fldcw
pop
add
ficomp
jle
enter
jbe
jns
lods
inc
loopne
add
jo
rol
ret
cwde
hlt
inc
mov
push
and
push
push
push
dec
push
js
push
and
push
ins
adc
fmul
push
cli
inc
jb
add
loopne
add
or
add
xchg
and
les
xor
inc
dec
add
add
sub
jno
jmp
inc
mov
add
shl
pusha
out
jp
add
mov
retf
mov
xor
add
ret
pop
jne
or
sub
lock
ss
in
sub
dec
mov
out
fwait
sbb
push
pop
xor
ss
push
js
rcr
cmp
jb
popa
inc
fcom
fild
cmp
cmp
mov
dec
and
(bad)
pusha
sti
pop
outs
test
jg
push
add
pop
ds
test
rol
out
push
lock
sub
mul
outs
popa
fs
adc
loopne
ret
das
jo
dec
jae
add
xor
sub
mov
and
pcmpgtd
aas
les
mov
inc
dec
push
xchg
mov
or
adc
push
je
or
xlat
inc
xor
dec
mov
push
mov
push
add
push
inc
or
in
jae
jne
test
inc
xchg
mov
inc
xchg
popa
pop
inc
adc
in
inc
or
popa
cmp
pusha
fs
or
js
sub
sub
cmp
pop
cs
dec
daa
xchg
pop
xor
adc
and
mov
xchg
pop
push
add
xor
outs
adc
and
or
pop
sbb
mov
and
cld
pop
loop
fisttp
push
daa
inc
das
dec
push
addr16
ret
inc
pop
cmp
jecxz
mov
nop
and
inc
pop
and
vsubpd
lods
cmp
loopne
shl
cwde
fwait
add
cwde
std
or
popa
push
jnp
sub
or
outs
fild
pop
popa
clc
or
std
adc
(bad)
rol
fldcw
pusha
xchg
pop
push
sbb
pushf
add
push
daa
xchg
pop
pop
jecxz
das
stos
push
scas
enter
xchg
cmp
pop
(bad)
mov
mov
out
push
sahf
jmp
test
push
inc
add
outs
ins
daa
cmp
or
dec
push
ret
dec
xor
les
test
test
(bad)
shl
sub
call
add
call
ret
jne
popa
das
(bad)
push
ja
sahf
ja
scas
and
outs
xlat
jbe
push
sub
dec
push
dec
dec
cmp
inc
aad
xchg
mov
pop
pop
jge
add
xor
mov
(bad)
jle
adc
inc
xchg
dec
inc
inc
or
jne
mov
adc
or
out
loop
pop
adc
xor
push
add
xor
movs
clc
es
arpl
jge
inc
mov
push
push
sbb
test
loope
push
push
not
mov
or
add
or
pop
pop
data16
add
xor
mov
mov
cmp
or
data16
and
add
sbb
clc
push
ja
inc
mov
push
pop
enter
in
push
mov
inc
imul
ss
push
bound
adc
outs
adc
xor
push
lods
outs
in
sbb
mov
in
dec
iret
in
inc
push
inc
and
sbb
dec
mov
bound
imul
mov
ins
jb
(bad)
or
fs
jo
pusha
push
or
sub
mov
adc
cmp
ss
je
aad
sub
sub
or
test
or
add
add
aaa
xchg
pop
push
das
or
push
sbb
mov
sub
adc
hlt
push
imul
add
pop
sbb
sbb
add
push
ins
int3
imul
add
call
and
cmp
or
push
and
pop
mov
arpl
pop
jge
push
xchg
scas
add
(bad)
add
add
int3
sub
add
mov
inc
and
and
jae
push
pop
cwde
push
pop
add
sub
or
push
push
stos
push
scas
arpl
or
xchg
lods
scas
lds
dec
lahf
jp
xchg
mov
or
push
xchg
aam
push
test
jb
retf
loopne
in
cwde
push
(bad)
cmp
xchg
dec
xor
or
(bad)
xchg
outs
mov
call
pop
sbb
(bad)
cmp
sbb
push
pop
sbb
mov
int
push
xchg
mov
lds
popa
inc
xchg
mul
(bad)
push
mov
test
sbb
movs
dec
push
cmp
(bad)
and
(bad)
push
xchg
das
sbb
arpl
cmps
push
pop
fs
(bad)
sbb
mov
xchg
push
rcl
cmps
dec
or
sbb
ret
inc
arpl
and
les
ins
sub
push
arpl
inc
les
mov
add
lods
xor
outs
mul
je
aad
fs
inc
icebp
jle
pop
fs
push
push
jo
jbe
and
push
sub
adc
push
xchg
fstp
cmp
push
popa
inc
clc
ins
push
gs
inc
outs
retfw
add
pop
push
sub
pop
pop
or
inc
push
jnp
daa
aaa
adc
or
sbb
mov
neg
pop
or
cs
sub
sub
loopne
jnp
out
mov
push
iret
call
mov
jo
cmp
add
test
inc
inc
loopne
fsubr
in
retf
or
jne
cmp
xor
cmovle
sub
jae
xor
mov
push
push
sub
out
fisttp
inc
imul
pop
arpl
push
sbb
xchg
or
sub
outs
cdq
cmps
les
sahf
mov
addr16
or
mov
gs
mov
shl
adc
daa
ficom
mov
(bad)
jecxz
and
movs
fwait
jne
push
dec
or
jp
and
pop
les
movs
jp
jl
add
mov
push
push
cmp
nop
(bad)
push
sahf
push
adc
push
push
xchg
add
nop
or
xchg
push
in
(bad)
add
or
shl
lds
popf
adc
jns
icebp
add
push
gs
out
jo
xor
lahf
std
out
or
mov
mov
mov
stos
cmp
xor
sbb
inc
add
jae
jb
adc
pop
pushf
sbb
jecxz
cmp
mov
jecxz
xchg
pop
inc
pusha
imul
out
or
test
sahf
jmp
bound
test
sub
mov
ror
adc
adc
adc
push
bound
push
mov
or
jg
add
pop
add
inc
not
jl
test
add
or
push
mov
popf
jge
jp
add
push
and
cli
push
cs
das
push
push
push
in
stos
stos
lahf
fisttp
inc
jg
sub
mov
in
or
in
shr
push
aam
xchg
sub
sbb
push
pop
push
pusha
push
mov
fs
and
xchg
loop
xchg
or
cmp
or
add
dec
add
cld
inc
scas
or
xor
dec
lahf
push
outs
(bad)
cli
xor
add
add
inc
ret
shl
mov
or
pop
fs
add
or
xor
mov
sub
ret
xor
sar
push
ret
add
ins
mov
add
sbb
enter
and
dec
shl
loopne
inc
mov
popa
adc
pop
mov
mov
enter
pushf
ins
test
or
fdivr
xchg
(bad)
call
push
mov
cmp
jg
cld
inc
je
add
idiv
cli
cmp
xchg
sbb
(bad)
int
pop
and
mov
sahf
out
sub
and
inc
dec
jns
out
pop
push
xchg
mov
int3
fiadd
data16
adc
repz
dec
aaa
pop
imul
or
nop
dec
lods
push
mov
sahf
enter
aaa
pop
cmp
mov
sbb
repz
repz
bound
imul
push
mov
loope
es
outs
es
cld
adc
scas
test
iret
(bad)
iret
repz
cmp
mov
(bad)
shl
out
repz
repz
or
sbb
es
xor
sub
push
das
pop
pop
ss
jns
out
push
jp
xchg
movs
mov
add
sbb
sbb
or
pop
cmp
dec
jns
jns
fadd
jmp
jns
in
xor
dec
push
pop
push
dec
and
jmp
push
push
dec
or
pop
out
fninit
mov
jmp
xlat
pop
(bad)
add
leave
cmp
cmp
add
ja
(bad)
mov
mov
mov
add
sbb
les
sbb
pop
in
xor
inc
in
ds
push
enter
mov
rcr
jo
je
sbb
fistp
add
cmp
xchg
xor
sbb
rcr
nop
mov
pop
sbb
add
push
add
sbb
dec
loope
sbb
pop
cmp
ret
rol
pusha
sti
and
sbb
fucomip
and
fdivr
aaa
enter
push
jbe
sbb
xor
in
pusha
cmp
addr16
mov
cld
sbb
cmp
and
sbb
fstp
aam
clc
aaa
or
xor
dec
pushf
sub
ror
loopne
loopne
mov
dec
mov
ror
fadd
fistp
cmp
rcr
ret
and
pusha
cmp
adc
ror
cmp
pop
cmp
hlt
push
mov
pusha
cmp
inc
and
fld
fadd
xor
(bad)
fild
imul
cmp
push
mov
mov
pusha
adc
sbb
in
pop
vpsubq
adc
in
mov
mov
add
push
jmp
(bad)
push
push
xor
mov
add
test
je
and
cmp
clc
mov
mov
call
mov
xor
push
push
xor
test
jne
(bad)
(bad)
or
mov
dec
add
jge
mov
mov
or
add
lock
(bad)
inc
daa
dec
(bad)
adc
add
sbb
xor
mov
xchg
mov
pop
pop
pop
(bad)
call
out
adc
ficom
mov
ret
jmp
sti
jl
(bad)
jmp
push
cmp
je
sub
fs
mov
sub
pop
add
sub
pop
pop
mov
pop
ret
js
adc
loopne
ds
mov
loopne
xchg
mov
test
jne
rol
mov
mov
mov
dec
mov
test
loopne
shl
ret
cld
sbb
ds
dec
imul
pop
pop
ret
nop
jp
repnz
push
push
cld
fild
or
push
rep
sub
scas
mov
mov
test
setge
loop
sbb
enter
adc
pop
add
adc
pop
add
cld
popa
mov
sbb
mov
and
movs
sti
mov
ss
jo
or
xchg
mov
retf
fadd
push
fadd
jo
jo
pop
jbe
mov
push
xor
daa
mov
(bad)
mov
mov
dec
imul
inc
inc
fidivr
bound
inc
cmp
dec
shl
adc
or
xor
shr
sbb
push
dec
shl
sub
inc
inc
shl
push
cmp
add
popf
fcomp
jmp
scas
mov
fs
out
call
push
not
mov
hlt
sbb
iret
mov
inc
ss
in
jo
pusha
mov
out
cmp
sbb
add
imul
jne
inc
or
jae
add
add
xor
xor
cs
scas
push
(bad)
ins
add
ins
ins
shl
add
fsub
add
push
inc
das
push
es
fcmovu
push
data16
adc
inc
sbb
ret
xor
cs
(bad)
cmp
dec
mov
out
xor
pop
hlt
push
mov
jne
adc
mov
or
or
sbb
mov
(bad)
addr16
mov
out
lea
cmp
cmps
ss
std
test
mov
cmps
cmps
sub
mov
mov
jns
loopne
inc
pop
call
aam
cld
and
popf
jl
jle
adc
(bad)
cmc
lahf
push
dec
jp
hlt
(bad)
jb
pusha
test
pop
fadd
and
jp
cmp
mov
mov
push
cmps
adc
lea
mov
mov
pop
mov
out
dec
js
fistp
in
sub
nop
pop
or
stos
xchg
cmp
xor
adc
cdq
jo
ss
test
mov
push
push
pop
sbb
and
inc
int3
(bad)
cmp
shl
mov
mov
mov
fxrstor
or
sub
mov
icebp
xchg
sbb
push
into
mov
pop
inc
xchg
push
xlat
imul
xchg
pop
cli
outs
repz
mov
jne
jle
scas
loopne
lds
jb
push
and
push
inc
and
inc
push
add
mov
rcl
movs
js
aaa
xlat
ins
lock
inc
push
repnz
adc
dec
add
inc
inc
adc
xchg
add
imul
mov
add
sub
cmp
sub
add
xchg
dec
mov
jp
sbb
mov
inc
xchg
and
and
retfw
aad
sbb
mov
jo
(bad)
sbb
test
aad
mov
jb
cs
enter
mov
je
mul
mov
adc
sbb
les
hlt
add
jnp
ins
clc
mov
jecxz
jg
and
adc
jb
je
dec
je
jmp
mov
or
jmp
mov
mov
pop
pop
mov
cs
mov
inc
push
cs
lea
jp
add
add
(bad)
loop
push
push
push
mov
mov
dec
sbb
lea
push
loopne
sbb
leave
push
jo
lock
fild
sub
hlt
inc
test
stos
lahf
sub
hlt
cmp
cwde
daa
inc
out
jno
je
ret
ret
push
(bad)
cli
or
add
pop
es
ins
mov
mov
pop
rcr
sbb
and
xchg
enter
inc
lods
push
mov
and
add
out
adc
adc
xor
adc
or
mov
push
or
in
loope
mov
call
or
call
pop
lock
push
cmp
pusha
ja
adc
or
mov
mov
inc
daa
ret
pop
sbb
pop
xor
dec
cmovl
loopne
outs
out
clc
cmp
or
adc
mov
lock
adc
inc
sbb
setg
test
and
mov
pushf
ret
retf
loopne
sbb
fiadd
add
adc
call
rcr
in
push
xor
xor
mov
fld1
loopne
push
mov
xchg
adc
sub
invd
data16
cmp
stos
(bad)
push
adc
out
inc
or
clc
loop
mov
mov
jge
add
cmp
xor
lock
jp
jl
inc
mov
ins
mov
cmp
fwait
push
xor
jne
push
sub
sbb
add
and
adc
mov
lea
mov
jmp
div
dec
mov
leave
xchg
inc
adc
push
push
fisub
push
add
cdq
lock
dec
jmp
in
repnz
out
popa
xor
nop
ror
dec
mov
inc
or
jo
push
loope
jl
or
push
loopne
or
(bad)
sbb
jno
aam
imul
pop
jecxz
bound
iret
mov
mov
dec
scas
in
sbb
in
imul
push
cmp
ss
jg
xor
and
add
add
ss
shl
xchg
cmps
jo
jle
test
jecxz
mov
test
sbb
fld
lds
in
push
jmp
movlps
sbb
push
or
inc
add
aaa
xor
cli
mov
aaa
pop
adc
daa
pop
hlt
rol
and
shl
xchg
push
popf
adc
pop
cmp
xchg
jo
fisub
jecxz
jo
pushf
popa
mov
push
sub
(bad)
test
mov
aam
add
and
cld
cld
mov
push
fdivr
mov
dec
sahf
mov
stos
mov
add
in
sbb
pop
nop
sbb
stos
push
mov
into
dec
and
push
xor
call
xor
(bad)
in
cld
idiv
push
cmp
inc
lea
dec
sbb
xchg
ret
ins
mov
mov
iret
cmp
lds
inc
test
cmps
cmps
es
cmp
push
inc
sub
clc
cmp
mov
adc
or
in
add
mov
cmp
sbb
ss
lea
push
shl
xchg
and
or
xlat
adc
in
das
pop
(bad)
pop
idiv
xchg
outs
cmp
repnz
push
add
adc
stos
cmp
popa
xor
in
fmul
mov
sub
sub
ins
outs
outs
sahf
add
dec
cs
test
push
neg
push
aaa
gs
mov
in
add
push
enter
sbb
push
bound
aaa
jnp
push
sbb
mov
inc
nop
sbb
jge
in
js
out
or
push
cs
push
es
jmp
push
rcl
xchg
and
in
rcr
add
loop
push
or
not
jo
xor
dec
push
cmova
cld
push
pusha
(bad)
das
or
add
inc
js
jle
and
dec
and
sbb
cmp
mov
mov
lods
and
neg
aam
pushf
je
xchg
pop
pop
test
addr16
mov
(bad)
popa
into
fidivr
xor
mov
test
sbb
inc
xor
test
xchg
jae
xor
or
dec
clc
fbld
push
cld
and
inc
or
cmovl
push
ja
and
inc
mul
inc
or
cdq
cld
fisttp
inc
sbb
gs
or
ror
and
sub
add
iret
cmps
jp
sub
adc
adc
and
xchg
sbb
dec
add
mov
imul
test
stos
test
ss
fistp
je
or
je
dec
je
jmp
sub
add
mov
jge
jmp
adc
inc
out
lea
adc
ja
adc
jno
cwde
adc
sbb
es
fwait
cld
sbb
or
or
aaa
mov
cdq
push
lods
mov
loopne
add
jne
(bad)
aam
add
mov
push
push
mov
and
ja
pusha
sar
dec
je
jecxz
xor
xor
xor
pop
jo
jmp
mov
adc
pop
xor
xor
xchg
push
js
inc
pusha
mov
scas
push
jl
aaa
arpl
sbb
sub
add
mov
pop
sbb
mov
lock
sub
lea
mov
and
adc
fwait
je
or
loopne
adc
test
data16
das
jo
mov
push
loopne
shr
add
adc
pop
in
outs
mov
sbb
push
xchg
push
sbb
mov
mov
adc
aam
or
push
dec
dec
adc
ss
sbb
(bad)
jp
pop
pop
add
adc
scas
add
add
inc
fdiv
sbb
push
sbb
xor
(bad)
and
xor
push
aam
push
inc
mov
pop
and
aaa
jb
popa
or
dec
dec
pusha
mov
test
mov
mov
sbb
or
pop
ret
pop
pusha
test
or
add
cmps
popa
bnd
loope
pop
jle
into
mov
lahf
pop
je
jb
add
pop
hlt
mov
cmps
stos
and
cmp
and
jp
aad
jo
lock
add
repnz
test
sti
xchg
pop
jle
xor
mov
sub
bound
in
loope
mov
cld
gs
popf
sub
push
movs
pop
mul
or
in
aaa
addr16
loopne
push
add
mov
jb
scas
pushf
push
push
rcl
mov
xor
lods
js
pop
addr16
lods
sbb
nop
cmp
mov
pop
or
mov
das
arpl
imul
iret
or
gs
mov
xor
jnp
add
inc
ret
bound
inc
pop
and
jecxz
fmul
sub
sub
push
cmp
push
ds
push
fsubr
mov
lahf
out
mov
lods
ds
cmp
pop
add
les
add
sbb
jmp
jbe
ins
imul
je
and
pop
xor
xor
sub
mov
addr16
mov
add
xchg
test
push
inc
das
das
inc
mov
outs
push
stos
pop
push
adc
xchg
xor
ss
frstor
push
dec
cs
in
or
ins
sub
push
aam
xchg
push
adc
pop
push
test
jge
jge
xor
dec
push
push
fild
push
cmp
push
push
adc
sbb
xchg
xchg
cdq
ret
cvttps2pi
loope
sahf
popf
xor
or
add
pop
pop
xchg
adc
adc
je
jg
imul
popa
jno
and
mov
dec
pop
and
outs
ins
popa
imul
mov
dec
pushf
xchg
and
or
outs
jne
push
aaa
or
xor
inc
pop
sub
dec
and
(bad)
add
push
dec
pop
add
sahf
inc
inc
je
inc
dec
jns
pop
or
fistp
sub
jno
sub
cmp
dec
cmps
jb
xlat
and
data16
cmps
push
dec
lock
int
dec
adc
push
xchg
sub
pop
push
or
adc
out
pop
adc
inc
jb
je
dec
add
enter
shr
out
jo
push
gs
retw
lahf
pop
inc
in
lds
sti
jl
outs
jns
cmp
add
rcr
jo
fadd
sub
add
or
(bad)
xor
retf
or
add
inc
cdq
cmp
das
and
inc
xchg
sbb
or
xor
pop
(bad)
push
scas
outs
pop
xor
shl
lock
not
xchg
jmp
jo
jo
pop
add
fcom
push
sbb
mov
les
cmp
inc
dec
movs
bound
or
push
mov
mov
inc
mov
and
iret
dec
add
or
xchg
sub
dec
cmp
add
pop
mov
cld
sbb
sub
sbb
mov
aas
mov
js
mov
dec
je
jbe
or
test
add
xor
mov
(bad)
sbb
mov
test
daa
stos
movs
add
mov
sub
pop
jmp
or
fcomp
daa
sar
adc
or
bound
push
xor
push
pop
je
jmp
scas
adc
inc
leave
jmp
sti
aas
and
fstp
fwait
push
add
lea
mov
ja
add
dec
loopne
sbb
push
fsubr
test
jae
add
rcl
sbb
xchg
jl
mov
adc
and
cvtps2pd
(bad)
and
push
aam
sbb
hlt
ja
sub
pop
mov
mov
hlt
addr16
cmp
pop
inc
jle
xor
adc
and
and
sti
shr
jg
sbb
jae
push
into
and
jp
xor
push
xchg
and
or
push
xor
mov
dec
paddsb
xor
js
lock
mov
shl
add
shr
mov
cmp
(bad)
cmp
xor
push
ret
jle
jmp
push
or
fptan
cmp
sbb
jo
stos
gs
xchg
rcr
xlat
or
inc
jmp
lods
inc
dec
sar
pop
les
call
pop
mov
fdivr
in
push
repnz
rol
push
cwde
mov
xor
xor
retf
jnp
sub
inc
jae
(bad)
rcl
enter
inc
lock
popf
add
sahf
cmp
and
sbb
js
(bad)
pop
fidiv
(bad)
mov
xor
retf
(bad)
cmp
sbb
dec
pop
xor
pop
inc
jne
pop
aas
popa
pop
inc
cwde
inc
bound
lahf
ja
adc
std
fidiv
and
jb
pop
ins
adc
sbb
add
daa
inc
add
fld
and
xchg
bound
loope
xchg
ds
lods
and
xchg
dec
lock
ss
loopne
in
add
das
jno
jo
xor
stos
aas
xlat
sub
out
xchg
loopne
arpl
pop
dec
lock
or
jo
xor
inc
mov
mul
add
iret
sub
shl
cli
dec
push
in
or
xor
sar
movzx
(bad)
mov
pop
(bad)
cmp
je
or
inc
inc
xor
retfw
sub
dec
add
push
add
add
pop
aam
xor
loope
xchg
lahf
test
call
add
inc
xchg
jae
fild
sbb
adc
or
(bad)
xchg
jle
or
loopne
mov
jmp
push
dec
inc
cmp
jmp
mov
cwde
mov
add
es
cld
es
sbb
pusha
lock
push
xor
cmp
daa
iret
loopne
xor
ret
loopne
mov
call
or
fdivr
repnz
lahf
cmp
push
mov
aaa
sub
push
mov
fsubr
sar
inc
test
mov
add
(bad)
in
jmp
sub
int3
pop
int3
pop
lods
add
or
cs
outs
xor
mov
pop
mov
xor
shl
mov
adc
inc
je
jecxz
rcr
mov
ins
xor
call
sub
xor
vrcpps
popa
call
sbb
ror
dec
call
mov
imul
push
sbb
out
mov
inc
mov
cmp
pusha
or
mov
fiadd
push
adc
mov
arpl
dec
xchg
push
push
ins
mov
cwde
cmpxchg
rol
mov
or
cli
sbb
push
loopne
mov
shr
and
es
xchg
(bad)
loopne
or
push
push
imul
mov
pop
rol
test
push
movs
pop
jle
pushf
sbb
test
jo
jbe
xor
cdq
inc
mov
movs
dec
mov
or
mov
nop
mov
aas
int3
ror
fcomp
lahf
pop
jg
and
mov
ins
or
and
jmp
mov
add
ins
test
loopne
or
aaa
lahf
shl
xor
iret
lahf
sti
push
add
pop
(bad)
mov
aas
mov
fsub
iret
daa
test
add
(bad)
mov
fadd
or
shl
shr
dec
add
es
push
push
push
imul
call
popa
je
dec
gs
cdq
je
in
jg
idiv
or
inc
outs
push
outs
push
push
dec
or
dec
jne
je
js
je
inc
outs
outs
je
das
xchg
stc
dec
outs
outs
ja
nop
fs
outs
fs
or
and
push
lods
je
jns
push
push
cmp
outs
arpl
fimul
mov
jns
gs
dec
inc
or
outs
outs
jg
outs
jb
popa
ins
add
pop
or
outs
js
or
shl
cmps
or
or
push
std
pop
add
push
dec
gs
jb
addr16
(bad)
sub
ins
adc
fadd
outs
sbb
sbb
jb
ins
jae
es
push
jae
sti
pop
mov
gs
push
aaa
dec
mov
lods
popa
out
inc
shr
pop
sub
rcr
xchg
push
push
js
pop
dec
ret
fs
xchg
popa
adc
push
jp
xor
dec
imul
or
sbb
jb
mov
ja
xor
push
dec
scas
loope
jo
je
dec
dec
inc
xchg
sbb
fbstp
sar
mov
adc
stc
add
mov
jmp
sub
lods
dec
add
xor
xor
lock
jg
mov
pop
and
inc
jbe
data16
push
or
jle
push
ds
push
dec
bound
add
mov
loop
outs
add
dec
jne
popa
pop
(bad)
pop
and
pop
dec
popa
bound
inc
outs
inc
pop
and
adc
inc
dec
push
ins
imul
fcomp
add
js
test
fnstcw
cdq
add
inc
icebp
and
xor
test
pop
jecxz
mov
jmp
shl
int3
push
mov
cmp
push
popa
bound
fdivr
inc
dec
ret
adc
xchg
add
push
push
imul
adc
shl
cmp
jbe
cmp
test
arpl
and
cmp
mov
imul
sbb
inc
sub
jno
or
add
adc
push
cs
inc
pushf
fadd
or
movs
sub
or
push
dec
movs
jg
scas
push
add
add
aas
sti
jg
add
inc
fbstp
fistp
inc
mov
or
dec
pop
or
adc
adc
xchg
popa
pop
add
loopne
sub
jae
mov
jne
inc
(bad)
pusha
push
fadd
jb
out
out
and
inc
push
int3
(bad)
int
pop
imul
(bad)
cmp
es
mov
jmp
adc
cmp
push
js
sahf
pop
fcmovnbe
push
push
cs
test
mov
lea
pop
es
xchg
jmp
inc
jecxz
and
pop
in
(bad)
or
sub
shl
push
add
mov
or
lahf
fisttp
mov
ins
dec
pop
jo
dec
fisubr
push
inc
sbb
in
sub
sbb
sbb
mov
aaa
clc
jbe
ss
retf
jo
inc
in
jns
add
sar
shr
push
add
fbld
sbb
aam
test
or
or
in
(bad)
or
stos
mov
bound
mov
push
mov
dec
and
adc
and
das
inc
es
add
iret
les
xor
pop
sub
mov
and
and
sti
loopne
fisubr
push
adc
std
xor
mov
cmp
lods
popa
int
bound
dec
rcr
loop
or
and
rol
dec
inc
bound
or
or
sbb
pop
aas
cmps
jmp
inc
pop
nop
pop
ja
sti
push
mov
dec
add
in
push
xor
(bad)
pop
sbb
cs
out
ins
mov
call
dec
lock
jmp
xchg
jmp
mov
inc
and
rcr
cmp
rcr
in
jg
adc
arpl
mov
or
mov
std
aam
xor
pop
outs
xchg
push
outs
jne
xor
or
push
fdiv
or
sub
cmp
pusha
add
mov
mov
inc
pop
imul
fbld
dec
sub
push
inc
sub
dec
cmova
pushf
fwait
bound
pop
xchg
inc
aam
lds
(bad)
retf
(bad)
enter
repz
bound
inc
or
enter
fmul
xchg
(bad)
add
sbb
(bad)
out
inc
cmp
dec
sbb
xchg
pop
dec
sbb
cmps
xchg
add
xor
jo
mov
ror
inc
inc
scas
popa
and
or
sbb
out
(bad)
fldcw
add
dec
push
daa
pop
das
mov
inc
xchg
jge
in
sub
call
push
cmps
cmps
mov
retf
add
dec
popa
shl
(bad)
cli
or
and
jp
mov
add
add
call
or
ins
cli
push
inc
push
inc
dec
or
ins
ror
adc
shl
lods
cmp
call
xor
sbb
lea
sbb
ret
daa
sbb
and
ja
pop
sbb
sbb
rcl
adc
adc
push
adc
outs
outs
es
jo
bound
add
lea
ficom
inc
cmps
or
and
imul
inc
mov
xor
rol
popf
mov
test
push
repz
js
xor
popa
js
std
xchg
ret
out
xchg
cmp
dec
retf
ds
popa
pop
or
sub
mov
mov
or
xor
add
je
push
mov
ins
icebp
dec
das
mov
push
mov
fs
enter
or
outs
pop
test
fadd
ret
mov
xchg
sbb
sub
pop
outs
push
inc
adc
cdq
repz
pusha
push
push
dec
pop
add
ss
mov
sub
cmp
in
mov
xchg
fimul
enter
popa
dec
push
xor
fwait
scas
pusha
fneni(8087
sahf
push
cmp
push
push
push
in
sbb
out
push
xor
cs
push
cld
aam
jnp
xlat
mov
push
mov
xor
fild
(bad)
neg
pop
movs
push
or
add
cs
push
adc
ins
ss
cmps
cmp
test
je
sbb
out
mov
xor
pop
push
bound
loope
sbb
inc
cmp
(bad)
jle
data16
in
imul
arpl
add
into
and
mov
gs
and
mov
xor
dec
stos
mov
neg
push
inc
dec
sub
cmp
cs
jno
sub
cmovbe
xor
dec
fdiv
in
mov
loopne
outs
ja
xor
mov
adc
loope
loope
sub
pop
pop
cmp
adc
jecxz
push
call
popa
xchg
lods
ret
xor
arpl
fwait
loope
pop
xor
ss
lea
pop
test
dec
jne
cmp
es
add
ret
push
lock
lds
sub
dec
mov
test
inc
add
cmp
test
nop
mov
int
in
sbb
cmp
retf
sub
xchg
(bad)
je
push
pop
xor
jo
mov
dec
cmp
js
sub
aaa
adc
add
add
or
pop
fadd
cmp
leave
enter
enter
fs
leave
mov
inc
push
xchg
cdq
and
in
add
bswap
leave
enter
push
push
mov
in
in
push
mov
xor
jno
xor
inc
dec
sbb
gs
add
or
push
sbb
cmps
dec
mov
add
adc
cmp
adc
or
adc
cmp
fld
aas
push
fwait
and
call
loope
inc
add
add
or
sbb
sbb
sbb
jmp
ss
mov
adc
daa
and
xchg
jmp
pop
cmp
jne
shr
or
inc
push
add
mov
cmp
or
cmps
xor
(bad)
test
push
inc
arpl
add
sbb
xor
in
adc
sub
(bad)
jns
push
adc
jo
jl
push
outs
fs
in
jno
shl
add
or
inc
shl
add
out
rcr
push
sti
add
mov
or
cmp
add
jle
or
outs
add
mov
ins
pop
fiadd
pop
rcl
fwait
mov
nop
out
or
fwait
popa
jo
popa
rcr
add
shl
je
in
adc
(bad)
ret
mov
sub
pop
push
adc
loope
xor
inc
mov
loopne
jmp
cmp
ds
push
jne
jno
in
mov
cdq
inc
push
push
mov
cli
inc
pop
add
je
push
push
dec
cwde
mov
inc
imul
(bad)
mov
add
pop
outs
ins
(bad)
fistp
push
push
push
int
or
push
mov
xchg
xchg
retf
xchg
cli
and
je
xchg
xchg
xchg
fwait
(bad)
pop
xchg
xchg
xchg
xchg
inc
push
mov
xchg
retf
xchg
fadd
xchg
xchg
xchg
(bad)
mov
aaa
xor
sub
inc
into
cmps
add
or
jae
sbb
sub
xchg
add
add
shl
push
push
jecxz
adc
mov
int
xor
inc
(bad)
test
arpl
stc
cmp
xchg
or
add
lods
xchg
adc
(bad)
dec
mov
pop
push
xor
push
lods
and
mov
test
lods
inc
rol
bswap
cs
int
popf
inc
push
ud1
mov
popf
or
outs
aad
pop
dec
invd
fadd
imul
pop
add
push
mov
jmp
lahf
jmp
ins
adc
cmc
or
pop
push
leave
xor
or
adc
mov
mov
inc
dec
dec
mov
pop
push
dec
int3
pop
pop
or
jnp
pop
dec
adc
popf
xchg
inc
pop
ror
and
pop
imul
adc
inc
push
cdq
mov
xor
icebp
imul
cmps
sar
push
push
pop
dec
movs
xor
out
sbb
nop
cmp
call
cmp
js
sbb
fsub
fs
push
sub
mov
adc
xor
pop
xor
sbb
add
lods
adc
xchg
or
shl
mov
inc
push
or
or
xchg
xchg
inc
push
push
or
out
inc
add
or
sbb
adc
mov
dec
test
sbb
push
pushf
adc
push
sbb
cmps
out
rcr
adc
shl
lods
sbb
xchg
jbe
or
in
fs
push
pop
cmp
jb
fs
sar
and
fs
xchg
jb
pop
or
(bad)
sub
or
push
sbb
ret
movs
cli
fsubr
(bad)
fsubr
push
(bad)
loopne
add
les
outs
add
adc
push
outs
imul
jb
je
fild
fild
adc
aad
das
enter
out
add
outs
scas
jge
add
push
nop
popa
push
(bad)
push
imul
add
push
and
add
ja
cld
adc
(bad)
mov
add
mov
or
jb
mov
or
fiadd
push
add
mov
sbb
xor
or
or
fild
mov
and
sbb
pop
or
cwde
dec
imul
mov
lock
out
mov
ins
jns
das
inc
cmp
xor
and
mov
pop
mov
nop
push
fild
bound
bound
mov
sti
add
shl
mov
pop
sub
push
pushf
or
xor
add
daa
push
(bad)
(bad)
(bad)
mov
push
push
test
je
add
call
mov
mov
mov
push
xor
mov
fidivr
clc
lea
mov
ss
sub
test
je
(bad)
sbb
adc
push
fs
movs
add
sub
pop
ret
mov
fmul
mov
mov
and
enter
fisttp
inc
and
mov
aam
mov
or
sbb
pop
ret
daa
or
je
lahf
jecxz
test
or
sbb
ins
add
pop
cwde
add
pop
aas
sub
movs
jae
and
outs
or
out
ds
sbb
cmp
push
imul
push
dec
pop
adc
sbb
xchg
push
xlat
push
or
mov
lock
push
push
retf
popf
std
std
xor
mov
hlt
mov
pop
pusha
mov
lea
stos
inc
add
out
fiadd
xor
enter
ja
int3
in
jb
push
lods
dec
xchg
(bad)
lock
int
sbb
lahf
nop
inc
(bad)
pop
pop
pop
retf
ror
(bad)
lea
jmp
jmp
ret
ret
inc
sbb
in
push
push
scas
mov
es
mov
sbb
stos
or
and
cwde
cdq
pop
push
sbb
int
imul
call
pop
daa
and
jo
adc
or
fsubr
and
(bad)
jbe
mov
adc
xor
mov
cmp
(bad)
or
mov
lods
xor
mov
cmc
pop
cmp
rcr
aas
sub
rcl
ret
or
jle
adc
in
dec
cmp
ret
nop
es
sub
and
dec
push
clc
mov
nop
xor
push
push
(bad)
cld
push
push
mov
cmps
sub
test
adc
xchg
push
and
adc
sub
lods
xchg
sub
mov
inc
add
xchg
cmp
push
push
add
hlt
cli
push
sub
pop
mov
xor
pop
mov
mov
pop
call
cmp
mov
shl
inc
push
inc
iret
xchg
movd
cmp
jmp
lods
cwde
xor
jns
out
or
call
aam
arpl
push
daa
jo
adc
mov
mov
jae
outs
or
loope
dec
call
mov
out
or
pusha
fild
hlt
(bad)
aad
push
sbb
pop
sub
bound
std
daa
fild
pop
dec
push
inc
xor
add
push
dec
(bad)
xor
pop
fild
cmp
or
adc
pop
(bad)
mov
fistp
clc
xor
mov
dec
fild
and
or
cmp
pop
mov
adc
sbb
sub
outs
or
(bad)
scas
(bad)
loopne
leave
rol
add
or
or
out
jmp
ds
add
scas
jbe
jmp
cs
sub
or
cmp
sub
inc
pop
push
daa
mov
dec
loop
add
in
push
test
jl
xchg
movzx
je
test
clc
mov
call
test
je
and
fmulp
mov
(bad)
jae
adc
mov
add
xchg
scas
xor
push
mov
push
nop
and
inc
retf
xor
mov
ret
push
inc
and
bound
add
int3
sbb
add
inc
push
div
xchg
ror
add
sbb
dec
(bad)
call
iret
push
outs
push
rol
push
add
add
pop
inc
bound
pop
push
push
jne
data16
push
je
add
ins
push
xchg
ja
out
xor
jbe
ja
jns
jp
inc
mov
xor
xor
xor
jo
(bad)
aaa
add
add
add
mov
add
dec
shr
aam
fcomp
adc
js
and
bound
or
loope
and
ins
int3
iret
add
dec
addr16
adc
clc
jo
lock
jge
push
mov
jge
ret
xor
or
push
ins
mov
sub
stos
mov
test
dec
sub
movzx
callw
push
data16
jo
cmp
jne
sar
fwait
sbb
jmp
jbe
push
out
cld
and
xlat
cs
fsubr
inc
cdq
xor
jne
jmp
aaa
pop
not
lea
scas
push
test
mov
lods
scas
in
adc
mov
loop
adc
mov
inc
xor
js
mov
or
in
jge
cmp
jge
aas
je
ds
loope
sar
mov
or
adc
jne
(bad)
fs
mov
cmp
dec
loopne
loop
dec
ins
jbe
ss
and
aaa
sahf
adc
in
push
shl
jne
fwait
retf
jmp
jge
sbb
add
xor
aam
out
out
add
mov
jp
shl
xlat
jnp
pop
into
cmps
xchg
or
push
inc
in
fmul
mov
and
aad
test
push
cmp
adc
aad
or
pop
sub
sub
pop
and
mov
inc
add
cmc
mov
add
pop
loop
repnz
jbe
mov
dec
jle
cmp
stos
in
pop
sbb
sbb
mul
add
add
or
mov
sbb
push
adc
and
push
adc
add
dec
cmc
dec
sub
push
nop
add
(bad)
and
or
sbb
xchg
sbb
push
mov
stc
xchg
push
mov
iret
xor
sbb
test
xlat
sbb
imul
test
loope
mov
loopne
or
xor
cmps
or
loope
loopne
arpl
mov
jg
pusha
add
pop
push
or
loop
test
jb
lock
cmp
xchg
xor
inc
push
adc
cmpxchg
mov
xor
sar
ret
push
(bad)
inc
call
push
int
mov
pop
fadd
push
mov
inc
and
inc
loopne
cwde
xor
push
es
mov
and
sbb
arpl
and
cmp
cld
or
dec
jne
sub
cmp
fst
pusha
call
mov
fadd
inc
dec
or
sub
adc
dec
popa
xchg
rcl
push
push
dec
xchg
mov
ror
inc
sub
dec
sub
xchg
pop
sahf
clc
jae
ja
cmp
sar
loope
in
ins
mov
or
sbb
sbb
cmp
inc
or
push
xlat
test
loopne
sub
sub
and
sbb
out
pop
pop
aaa
adc
xchg
pop
aad
fcom
pop
pusha
repz
push
or
fcom
imul
dec
push
aad
jno
mov
cld
inc
push
mov
sbb
outs
adc
sub
pop
mov
adc
sub
pop
mov
outs
stos
icebp
rcr
mov
(bad)
dec
loop
mov
shl
or
adc
cdq
fadd
push
stc
push
paddq
and
pop
pushf
sbb
add
cmp
sub
aaa
sbb
or
xor
mov
test
enterw
es
adc
push
test
jnp
pop
sub
gs
ret
mov
sub
out
inc
cmp
(bad)
(bad)
jecxz
pusha
loopne
or
xor
int3
arpl
cmp
and
ds
push
pusha
cld
pop
push
add
popa
pop
mov
loopne
and
scas
not
cmp
adc
dec
leave
inc
fst
dec
pop
leave
adc
dec
test
adc
dec
and
push
pop
fmul
or
fimul
aas
gs
leave
push
pop
or
adc
aam
test
repnz
or
jne
cmp
fs
mov
adc
inc
inc
pusha
and
xchg
sbb
pop
xchg
ret
xchg
and
or
pusha
test
arpl
ret
xchg
sub
mov
loopne
and
xchg
retf
jns
rol
retf
or
loopne
ja
div
js
inc
dec
cmp
push
movs
adc
pop
jo
add
jns
fcom
outs
fstp
outs
push
jp
outs
mov
outs
mov
out
movzx
jmp
loopne
aas
ret
fdiv
pop
or
call
mov
or
(bad)
std
stos
ror
push
out
push
mov
je
mov
stc
(bad)
sub
add
mov
and
inc
or
clc
mov
and
enter
movs
push
mov
inc
ss
dec
dec
sbb
sub
loope
mov
(bad)
mov
lahf
adc
xchg
xchg
js
outs
mov
test
inc
adc
call
push
fadd
push
adc
aam
fimul
in
out
sti
adc
mov
in
push
mov
and
adc
mov
jl
cmp
mov
push
adc
jo
jbe
mov
retf
repnz
or
ja
or
inc
sti
add
scas
mov
mov
jo
std
loopne
push
sub
je
mov
outs
dec
dec
sub
dec
sub
jecxz
fisttp
js
adc
dec
push
add
lock
pusha
popf
pop
or
mov
jmp
or
push
xchg
movs
arpl
pop
test
cmp
cmp
jo
xchg
sbb
int3
sti
rcl
mov
mov
inc
mov
addr16
sar
sub
inc
jae
test
mov
push
pop
pop
mov
sbb
jp
or
popa
mov
daa
mov
and
(bad)
out
(bad)
push
mov
add
out
and
add
(bad)
cli
push
cmp
jg
std
pop
sbb
cmp
jne
or
xor
lahf
dec
addr16
or
jp
pop
jle
add
or
setne
jmp
test
je
sti
push
or
outs
int
push
xor
cmp
adc
push
cdq
idiv
dec
je
sub
int3
mov
(bad)
cmp
pop
enter
sbb
mov
add
pop
fimul
mov
clc
add
push
mov
or
loop
push
add
mov
in
int
sbb
(bad)
push
arpl
popa
mov
imul
push
ins
xor
pop
jo
pop
pop
aas
dec
mov
and
mov
je
mov
js
hlt
push
sub
mov
nop
jp
stos
jecxz
call
jle
ss
sbb
xchg
dec
mov
in
or
dec
hlt
xchg
add
xor
je
xchg
jnp
and
loopne
push
mov
dec
lock
sub
xchg
bswap
inc
pusha
pop
inc
xchg
leave
or
mov
or
fdivr
out
jl
push
sbb
push
test
iret
inc
lock
and
lea
mov
xor
loopne
jo
loop
mov
dec
and
cmp
lds
shl
push
outs
lock
mov
pop
mov
cdq
push
or
ins
sub
xchg
sub
in
pop
jnp
inc
adc
sbb
test
push
push
dec
mov
scas
jne
stc
jmp
push
into
pusha
pop
cdq
add
xor
(bad)
push
icebp
les
jge
loop
mov
push
pop
cmp
push
test
jmp
push
jecxz
movs
loope
repz
cmp
ja
prefetchnta
pusha
adc
mov
dec
mov
mov
(bad)
push
push
sub
sbb
stos
movs
dec
sub
int3
xlat
in
call
and
lahf
jle
add
cmp
xchg
sbb
dec
fdiv
mov
sub
mov
lea
pop
movs
arpl
and
push
push
and
bound
test
dec
daa
mov
test
das
popa
das
mov
jb
dec
sub
stc
sbb
nop
sbb
in
and
out
xor
shr
or
mov
movs
clc
test
jmp
jmp
cmp
pusha
cs
mul
jmp
mov
movs
lock
addr16
cmp
inc
push
test
pop
sbb
inc
mov
push
popf
adc
jo
loop
iret
test
lods
pop
jecxz
jmp
jmp
stos
popf
popf
jg
sub
mov
add
sbb
mov
js
sbb
jnp
out
xlat
inc
add
clc
mov
lds
sbb
push
push
call
sbb
cmp
inc
ret
or
out
mov
dec
inc
mov
inc
mov
jg
je
push
xchg
mov
cmp
daa
push
cmp
mov
cmp
lods
mov
mov
pop
fs
jmp
fs
push
mov
ds
push
stos
xchg
xor
loopne
das
sub
or
sub
inc
push
xor
mov
and
lock
sub
sbb
add
ins
fdivr
mov
adc
jmp
inc
sbb
or
std
push
lock
nop
push
test
dec
add
and
mov
and
popf
imul
mov
outs
mov
dec
xchg
push
jno
xchg
jmp
jle
out
push
rol
mov
stos
js
jo
add
and
mov
push
push
jmp
xchg
adc
sub
ja
lock
mov
imul
pop
jmp
stc
sbb
adc
out
push
fnsave
sbb
sub
push
push
in
fiadd
jmp
shl
test
inc
mov
pop
jmp
cmp
sub
pop
fisub
lock
jmp
inc
sysret
aam
fldcw
xchg
fs
jno
imul
push
mov
out
aaa
xchg
mov
arpl
inc
dec
hlt
imul
cmp
xchg
imul
fmulp
sbb
mov
popa
faddp
cmp
push
pop
mov
lods
sbb
imul
jo
push
dec
fild
ins
xlat
adc
pop
rol
addr16
(bad)
mov
addr16
pop
lea
ja
cmp
xor
sbb
add
aaa
mov
and
ja
add
dec
push
ss
jae
retf
push
sub
jnp
loopne
ret
into
jbe
cmp
out
loopne
or
movzx
shl
in
out
fist
push
add
loop
or
sbb
xor
add
pop
mov
add
je
sbb
pop
(bad)
push
test
mov
mov
jmp
aam
cmps
ret
fcom
mov
cwde
cs
mov
retf
inc
mov
das
sbb
out
outs
and
adc
xlat
jne
call
jge
add
sahf
test
jmp
cmc
pop
bound
add
inc
retf
pop
mov
and
cmp
add
mov
cdq
add
mov
mov
pop
jae
jl
addr16
ret
adc
dec
retf
jne
mov
add
scas
cli
push
add
cmp
clc
mul
sbb
cmp
jne
out
inc
outs
jmp
inc
test
jae
cmp
jbe
shl
jns
shl
jg
add
retf
cmp
ja
test
aaa
jp
xchg
xchg
add
sahf
xchg
mov
adc
and
mov
cmps
dec
int3
inc
test
mov
push
int3
sbb
ror
sub
mov
cmp
xchg
enter
adc
jo
call
adc
mov
inc
dec
jne
jmp
fist
mov
jnp
mov
hlt
stos
cmp
inc
push
(bad)
push
mov
aad
and
xchg
push
cmp
sti
and
cmp
cmp
es
ds
push
sub
test
nop
and
jle
dec
inc
or
mov
movzx
and
loope
test
jmp
movs
pop
adc
ret
std
dec
add
add
sbb
pop
pop
and
cmp
jne
repnz
pop
pop
jbe
adc
mov
(bad)
xor
push
ins
add
retf
or
std
sub
clc
rcl
adc
imul
jg
inc
and
pop
aas
sahf
hlt
mov
test
jne
xchg
inc
mov
aaa
sbb
jb
(bad)
clc
push
movs
rcl
sbb
and
jo
mov
and
adc
xchg
mul
pushf
push
mov
pushf
mov
mov
outs
ficomp
xor
daa
jne
cmp
aam
icebp
(bad)
ss
fistp
clc
mov
mov
sbb
xor
sub
add
cwde
ds
cmp
adc
or
pusha
jne
push
cmp
jmp
dec
cmp
pop
inc
add
jb
or
xor
jmp
push
or
jmp
mov
jle
cli
mov
sti
and
js
pop
aaa
push
inc
pop
mov
add
mov
lahf
cmovs
adc
aas
sbb
pop
and
push
(bad)
cmp
jne
mov
sub
dec
mov
mov
pop
arpl
sub
sub
(bad)
retf
aaa
add
push
inc
xchg
daa
aam
sub
out
es
push
dec
ret
jae
aaa
pop
sbb
xchg
ds
shl
(bad)
dec
push
inc
dec
aaa
lock
pop
ret
xor
and
dec
call
push
sbb
sbb
ds
xchg
fs
jnp
inc
and
inc
imul
and
push
and
and
div
xchg
push
daa
add
jno
pop
lods
out
push
rcl
adc
mov
sbb
adc
sbb
daa
adc
or
cmp
dec
mov
adc
sbb
into
cmp
or
sbb
ss
repnz
aas
aaa
or
jge
adc
sub
adc
enter
out
sbb
dec
pop
iret
fisttp
sbb
shr
jmp
iret
ret
sub
hlt
mov
push
or
jns
sti
add
aaa
lock
inc
jo
mov
lock
movs
jmp
push
mov
(bad)
pop
jno
in
xor
test
(bad)
(bad)
inc
call
call
jno
cmp
in
xchg
jbe
pop
scas
daa
je
pop
add
cld
daa
adc
lods
dec
movzx
mov
ret
in
inc
sub
mov
lea
jg
xor
jl
int
xor
cmp
in
or
xlat
out
xor
fsubr
mov
mov
scas
jb
mov
shl
jmp
sub
xchg
pop
scas
sbb
dec
aaa
xchg
mov
ss
mov
pushf
lods
je
dec
ss
loope
push
mov
dec
fsubr
push
sti
adc
outs
jmp
mov
mov
or
loopne
adc
xchg
and
fld
mov
jns
and
add
mov
inc
out
pop
ja
adc
inc
and
add
das
das
push
imul
add
jae
add
popa
push
imul
add
mov
pop
cmp
xor
push
outs
pop
add
or
add
cld
xchg
movs
loop
add
and
cmp
retf
or
xlat
movs
jae
lods
xor
lahf
add
test
or
sbb
sbb
mov
ds
call
add
add
sbb
sub
jb
je
add
loop
dec
je
push
pop
jmp
mov
add
adc
push
movs
fwait
je
jne
ret
mov
or
out
retf
ret
xchg
gs
(bad)
neg
jnp
or
jmp
(bad)
clc
dec
mov
mov
xchg
inc
mov
mov
push
cmp
add
fdivr
dec
arpl
mov
call
test
inc
or
(bad)
pop
add
xor
mov
mov
stos
or
lods
pop
add
and
or
push
add
xchg
ret
xchg
test
and
lahf
inc
jmp
mov
pop
jmp
sbb
fsubr
dec
dec
jno
jne
int
js
test
cld
adc
pop
cmp
and
and
iret
add
sbb
in
call
fs
xchg
out
loope
addr16
cli
fnstenv
gs
test
push
data16
pusha
fcompp
adc
movs
hlt
mov
push
add
add
mov
or
je
or
adc
sbb
jne
push
push
fsubr
call
ins
ja
lock
mov
add
mov
sbb
push
inc
jmp
adc
mov
test
in
adc
inc
adc
add
and
sub
retf
sbb
or
sub
adc
fadd
cmp
imul
mov
dec
xor
and
xchg
jbe
or
push
mov
stc
pusha
(bad)
test
pop
pop
or
and
test
movs
stos
inc
dec
sbb
push
mov
mov
lods
(bad)
retf
and
sub
cwde
mov
adc
scas
in
call
xchg
in
sbb
or
inc
dec
or
pop
xor
pop
out
xor
loope
loopne
fnclex
std
pop
cmp
and
fimul
or
das
minps
xor
adc
lods
xor
js
mov
ja
cmp
mov
popf
hlt
adc
or
adc
pusha
inc
ss
xchg
dec
loopne
push
dec
or
jg
and
fcomp
mov
test
loopne
enter
cld
pusha
ins
or
adc
adc
mov
pop
mov
in
or
xor
rcl
cwde
add
mov
shr
dec
cmp
sbb
rol
test
je
das
int
add
mov
adc
lahf
in
sbb
push
(bad)
leave
sub
jne
xlat
pop
mov
cmp
fs
lds
jmp
icebp
push
xchg
jno
sbb
scas
inc
or
jmp
pushf
arpl
pop
dec
pop
xlat
mov
jns
inc
xchg
pop
test
pop
imul
push
push
pop
or
push
mov
jo
popa
out
imul
(bad)
mov
les
sub
and
push
pop
jo
pop
fst
add
outs
aaa
mov
sub
mov
push
iret
add
add
pop
add
arpl
inc
sbb
fisub
mov
cmps
movhps
das
sbb
add
fidiv
sbb
pcmpgtd
scas
cmp
xor
jae
mov
inc
(bad)
mov
and
sub
cmp
retf
push
add
mov
sub
mov
sub
add
pop
jne
or
xor
mov
(bad)
xor
or
icebp
inc
xchg
cld
mov
sar
outs
push
mov
fwait
loope
(bad)
mov
jbe
and
mov
fadd
loopne
shl
push
lods
sti
push
add
ret
xor
into
mov
xor
push
cmps
push
cmp
jne
cmp
int
adc
adc
adc
and
cmp
adc
pop
ins
jmp
and
jne
and
pop
test
mov
mov
jge
add
cmp
je
cmp
xor
cdq
enter
je
bound
es
jbe
mov
xchg
shl
push
or
mov
loopne
pushf
or
or
sbb
xchg
inc
mov
aas
mov
popa
add
pop
push
out
dec
into
test
stos
clc
fwait
inc
inc
add
cwde
mov
mov
jl
mov
jbe
test
jl
inc
mov
dec
sahf
aas
dec
jae
aaa
retf
push
or
in
sbb
inc
sub
mov
mov
call
fwait
mov
dec
jne
clc
cmp
sbb
xchg
js
in
pop
inc
xlat
xor
ss
xor
outs
or
inc
repz
cmp
xchg
push
push
sbb
xchg
loopne
das
adc
cmp
jne
repz
scas
mov
addr16
jae
in
dec
lds
bound
adc
(bad)
jnp
rcl
mov
sub
rcl
fdivr
or
ja
pop
cld
or
lods
nop
pop
push
mov
dec
daa
lock
jmp
lds
lock
inc
je
out
inc
shr
retf
stc
xchg
push
mov
js
imul
scas
push
sbb
mov
fadd
mov
js
add
pusha
cmp
(bad)
das
jmp
jmp
shl
or
xor
mov
(bad)
repz
je
out
test
xor
sahf
outs
call
fiadd
inc
add
and
push
icebp
(bad)
mov
sahf
or
sbb
enter
push
or
push
les
enter
or
dec
fimul
inc
sub
mov
or
jl
or
(bad)
leave
call
in
mov
fs
or
mov
fldcw
out
xor
jl
xor
cli
neg
loopne
ret
in
sti
in
mov
and
imul
lods
xchg
add
call
not
cmp
pop
dec
jo
fadd
sbb
adc
loope
mov
inc
nop
mov
retf
js
push
loope
adc
inc
loopne
xchg
retf
fist
mov
not
into
sbb
mov
js
jnp
mov
pop
sbb
and
shl
sub
repnz
data16
test
nop
xchg
add
retf
hlt
test
loope
sbb
add
and
push
xadd
adc
rcl
sub
xlat
jbe
sbb
ds
pop
or
sub
call
mov
repz
push
in
inc
mov
mov
outs
jne
mov
add
sbb
nop
pop
shl
sbb
les
sub
scas
dec
icebp
ret
jg
cmp
cmp
push
pop
and
out
sbb
je
pop
repz
mov
and
ret
mov
adc
cwde
push
mov
mov
ret
mov
cmp
add
add
ror
or
das
pop
pusha
shl
pushf
mov
aas
bound
and
sahf
ret
pop
iret
inc
dec
sbb
cmp
cmp
in
dec
xbegin
les
jne
icebp
mov
mov
into
jle
scas
sbb
(bad)
stos
out
mov
xor
hlt
pop
stos
pop
clc
vpacksswb
ret
mov
cmp
rcr
movd
fs
xor
les
cmp
jle
mov
lods
lock
mov
or
mov
and
leave
mov
mov
and
sbb
pop
popa
and
jbe
sub
and
dec
aaa
sbb
inc
xchg
sbb
push
mov
dec
cmps
inc
call
test
xchg
sbb
ret
pop
inc
popf
push
mov
push
cwde
inc
imul
ins
push
pushf
and
loopne
mov
inc
xor
lods
mov
or
and
or
ja
data16
and
nop
lds
and
jne
dec
mov
ficomp
loopne
jg
cmp
pop
(bad)
xor
cmp
cmp
imul
jae
pop
jo
std
xchg
mov
loop
loop
add
lea
fadd
pop
push
add
leave
into
mov
fld
(bad)
in
push
sbb
out
loopne
and
mov
push
movs
add
bound
pusha
xor
in
mov
aam
xor
and
in
loop
sbb
cwde
xchg
fdivr
repnz
retf
jmp
hlt
xchg
hlt
mov
dec
and
cmp
xchg
inc
imul
xor
loop
repz
out
lock
inc
lea
sbb
mov
pop
xor
cmp
add
dec
or
inc
cmps
push
iret
popa
lock
xchg
aam
movs
pop
aas
popf
in
mov
mov
cdq
jo
es
add
xor
mov
push
mov
push
mov
cs
adc
leave
add
and
loopne
inc
add
stos
fwait
or
lds
or
jp
push
out
push
xchg
loopne
out
cs
pop
shl
into
rcl
xchg
hlt
iret
lea
sbb
test
rcl
dec
sbb
xlat
cli
inc
mov
pushf
in
popa
aam
mov
hlt
and
jle
sar
ret
and
jmp
inc
add
cmp
jne
sbb
xchg
in
xchg
sbb
rol
xchg
add
enter
mov
push
mov
xchg
push
xor
mov
xchg
pusha
xchg
mov
mov
pop
sbb
xor
fistp
xchg
pushf
mov
mov
and
inc
nop
lods
mov
ret
cmp
iret
ret
xor
pop
sbb
mov
mov
or
sub
mov
pop
xor
and
xor
sub
out
xchg
add
(bad)
pop
dec
call
shl
fidivr
pusha
or
inc
push
dec
pop
lock
test
adc
fs
xchg
mov
call
inc
adc
jo
ins
adc
xchg
pushf
jge
rcl
test
xor
jns
adc
mov
les
and
and
ins
xor
sti
xchg
pop
lods
imul
cmp
clc
push
rol
xor
pop
or
mov
or
enter
push
or
retf
push
xchg
mov
add
ror
scas
stos
push
and
sbb
jg
test
jl
inc
sbb
xor
test
sub
in
arpl
or
cmp
mov
sti
pop
mov
inc
dec
jne
aaa
xor
fadd
mov
cmc
xchg
enter
cmp
and
jmp
jmp
pop
mov
dec
pop
ror
sub
pushf
pop
cmp
gs
fwait
scas
lea
adc
ins
bnd
add
cli
inc
mov
dec
js
test
shr
scas
test
jg
dec
jg
jmp
ret
push
das
retf
adc
rcl
repz
ret
jg
add
jmp
inc
sbb
test
mov
movs
add
jo
inc
add
mov
daa
les
jmp
lock
push
inc
ss
shl
adc
test
add
push
cmp
lsl
(bad)
sar
and
cmp
fsubr
sbb
fcmovne
push
pop
addr16
or
fndisi(8087
outs
test
test
xor
fimul
jmp
das
mov
and
iret
sar
movsx
cmp
jne
stos
add
dec
jne
adc
push
fidivr
or
and
loope
mov
out
mov
out
adc
pusha
ret
mov
arpl
sahf
shl
xchg
fidivr
dec
hlt
or
arpl
inc
cmp
add
popa
and
xchg
xchg
dec
inc
int3
call
out
inc
sub
in
push
addr16
inc
pop
leave
inc
pop
inc
sbb
xchg
pop
nop
rcr
dec
(bad)
mov
movs
lods
gs
out
adc
mov
inc
pop
xchg
and
pop
js
(bad)
dec
inc
sub
push
add
add
shr
cmc
ror
pop
or
arpl
push
call
data16
add
inc
test
js
shr
mov
xchg
xor
dec
push
jns
mov
aam
rcl
in
xchg
fsub
adc
lods
dec
mov
add
jne
push
cmp
aad
cwde
fisub
add
adc
test
lahf
or
cmp
adc
iret
ret
popa
ins
jne
mov
cmp
push
pop
out
shr
lods
xchg
push
push
xchg
push
sub
jo
daa
loopne
not
addr16
push
and
loope
and
dec
cmps
inc
scas
or
das
push
pop
leave
loope
mov
ja
loopne
mov
nop
adc
jnp
inc
ja
jo
ja
leave
sub
cmp
jge
inc
jne
push
xor
push
jo
mov
push
lea
adc
jge
add
or
cmp
jl
pop
adc
adc
inc
push
imul
sar
adc
push
fild
xlat
pop
mov
call
and
xchg
cli
sub
je
push
aaa
adc
(bad)
cmp
jno
ret
shl
push
mov
mov
out
xchg
test
mov
std
add
xchg
ret
lds
sub
sub
leave
les
jg
int
sub
rcl
push
retf
or
jmp
adc
loope
cli
sbb
pop
imul
bound
pop
div
imul
(bad)
jmp
arpl
xor
push
ret
mov
out
jge
(bad)
mov
jecxz
xchg
jecxz
jne
mov
push
add
inc
push
mov
mov
inc
adc
pop
cmp
enter
dec
in
mov
jl
leave
xor
pusha
test
or
xor
pop
inc
pmulhuw
xchg
les
ror
(bad)
jle
mov
jo
cwde
data16
sbb
cmp
or
push
mov
popf
hlt
pop
mov
and
aam
mov
jge
inc
aad
mov
mov
sub
lods
pop
cdq
add
push
loop
add
fild
popa
loop
call
jae
inc
xlat
in
mov
and
xor
pop
ror
xor
lock
and
adc
jo
mov
mov
inc
loop
or
out
or
sub
add
mov
clc
push
sahf
cmp
inc
or
shl
xor
mov
sbb
sbb
cmp
ins
add
adc
das
jo
add
inc
ins
movs
nop
sub
add
ret
mov
sbb
je
retf
mov
add
adc
fs
mov
sub
pop
lock
ret
push
outs
push
jle
ret
add
inc
test
enter
dec
push
enter
mov
retf
dec
mov
sub
or
xor
cmps
loopne
rcl
sub
fsubp
xor
push
int
jge
jne
push
js
and
adc
cs
push
or
test
inc
mov
mov
pop
cmp
xor
push
pop
jg
add
inc
fwait
rcr
adc
mov
test
sbb
add
mov
hlt
or
jne
mov
pop
leave
jle
test
daa
inc
adc
pusha
dec
inc
xchg
mov
cwde
cmp
push
(bad)
ja
or
adc
push
mov
out
(bad)
jnp
scas
lods
mov
xchg
ins
pop
jb
adc
sbb
and
sub
pop
adc
fs
add
dec
push
es
inc
sbb
aaa
pop
or
adc
test
mov
cmp
fdivr
retf
aaa
or
sahf
mov
jnp
mov
pushf
sbb
loopne
xor
ja
dec
mov
out
loopne
out
push
test
jp
pusha
push
lods
jbe
in
js
mov
add
pop
sbb
cmp
out
add
jbe
jnp
sbb
(bad)
test
cmp
mov
push
jmp
jecxz
cmps
mov
into
fsubr
push
inc
je
mov
pop
les
or
ins
push
and
pop
daa
int3
sar
xor
test
jecxz
push
jne
mov
inc
add
rcl
lahf
xchg
push
mov
mov
cmp
push
dec
or
cmc
neg
cmp
mov
mov
cmp
fwait
or
add
shl
cmp
cmps
add
clc
shl
pop
mov
inc
mov
jge
(bad)
inc
jl
sbb
imul
push
cmp
setb
fistp
inc
adc
out
pop
push
movs
or
add
test
mov
push
sti
(bad)
fist
dec
add
push
ss
or
push
push
ds
imul
push
and
dec
pusha
push
push
dec
pop
out
mov
xor
xor
sub
cmp
in
xor
fimul
push
cld
mov
ud0
aas
sub
mov
add
add
outs
je
inc
jb
gs
lods
jns
mov
jb
arpl
jae
add
pop
or
push
cld
or
add
gs
data16
mov
bound
nop
adc
ret
add
push
arpl
mov
cmp
mov
adc
add
lods
out
mov
js
je
mov
inc
lods
push
test
add
lods
adc
cmp
or
push
sbb
rcl
std
xchg
xchg
xchg
into
sahf
jo
xchg
xchg
add
xchg
xchg
xchg
mov
xchg
(bad)
jo
jb
xchg
xchg
xchg
jae
jne
xchg
xchg
xchg
xchg
ja
jns
xchg
xchg
xchg
xchg
jnp
jge
xchg
xchg
xchg
xchg
jg
popa
bound
fs
mov
jo
or
inc
push
gs
imul
test
enter
or
push
outs
imul
outs
add
dec
popa
adc
ins
popa
imul
mov
cmp
and
out
cmovbe
popf
add
mov
lods
inc
add
mov
lods
add
add
inc
rcl
ror
inc
js
jo
pop
fld
cmp
and
(bad)
push
add
dec
add
add
jbe
imul
mov
addr16
outs
outs
(bad)
jae
popa
jb
jle
push
fild
adc
xor
lahf
xor
imul
mov
push
es
stos
pushf
cli
mov
call
inc
shl
fdivp
jge
pop
pop
les
not
sbb
xchg
test
xchg
cmp
add
add
stos
mov
sbb
and
lock
cmps
(bad)
push
retf
and
jne
loope
inc
push
push
xchg
hlt
dec
fild
or
ss
mov
inc
or
push
dec
fidiv
push
inc
aad
cmp
mov
mov
outs
push
je
ins
ja
sub
jo
or
dec
ja
scas
jg
xor
outs
popa
fs
outs
ins
jnp
adc
sbb
imul
mov
inc
jbe
push
lods
outs
je
repnz
or
loope
and
jnp
pop
(bad)
or
jno
push
cmp
or
jo
dec
pop
push
mov
call
pop
jmp
bound
lods
pop
adc
jmp
add
mov
mov
jmp
ja
xor
push
aam
mov
in
es
das
je
pop
les
pop
adc
jmp
push
mov
inc
xchg
invlpg
fldcw
mov
lds
push
loop
jno
js
(bad)
mov
push
cmp
jns
out
mov
push
popf
mov
cmp
idiv
rcr
pushf
pushf
cmps
fimul
push
mov
xlat
push
and
mov
inc
add
pop
mov
imul
pusha
mov
add
rcl
daa
(bad)
pop
xchg
loope
inc
gs
sub
xor
(bad)
test
fs
pushf
adc
addr16
xor
sub
jl
into
pop
popa
and
or
out
stos
xor
or
dec
std
dec
or
mov
outs
fs
jmp
or
push
pop
push
nop
add
xor
and
outs
mov
xor
enter
sbb
inc
add
dec
pop
imul
jo
lock
add
in
test
push
aas
lods
test
cld
inc
mov
mov
pop
adc
inc
dec
outs
sbb
cld
xchg
adc
inc
jne
iret
or
pop
add
xor
repnz
and
lds
bound
push
cmp
add
inc
mov
test
mov
jnp
add
sbb
lea
bound
cmp
es
or
fstp
mov
xor
retf
jmp
int3
fisub
enter
jb
or
mov
push
dec
ins
or
push
pop
jmp
push
scas
mov
je
sub
add
inc
cmp
push
add
data16
or
aaa
call
daa
add
mov
add
pushf
mov
and
clc
push
pop
xor
add
ins
jne
repz
sbb
dec
popa
or
lahf
in
xor
pushw
fwait
pop
sub
add
xor
push
sahf
push
jecxz
xchg
les
adc
pop
inc
and
ret
pop
pop
in
or
cmp
lods
fmul
jo
or
add
or
call
mov
xor
sbb
or
out
ins
imul
xor
jl
call
xlat
pop
call
lds
data16
pop
loopne
mov
leave
ins
not
(bad)
pop
pop
jle
leave
sti
and
(bad)
pop
add
xchg
pop
ja
lods
psubd
enter
leave
test
and
push
or
inc
xor
call
daa
mov
fmul
add
or
in
push
inc
inc
push
ffree
popa
mov
push
and
inc
mov
add
test
add
xor
cmp
fcomp
leave
test
gs
pop
cmp
sbb
add
dec
inc
cmp
dec
add
call
fdiv
inc
inc
aaa
sti
pop
and
imul
imul
push
push
xchg
inc
pop
(bad)
ins
jno
sub
js
jg
inc
mov
bound
imul
outs
xor
push
test
ret
xor
and
(bad)
mov
retf
cwde
push
xchg
popf
dec
and
jl
mov
pop
inc
loope
mov
ds
jbe
pusha
jo
push
or
push
popa
pop
outs
imul
jl
leave
pop
dec
jnp
int3
adc
ja
jnp
push
(bad)
cwde
icebp
push
popa
bound
add
loope
adc
fisub
out
aas
add
cwde
cmove
lahf
ret
loopne
sub
sbb
push
dec
lock
lods
mov
inc
jl
sub
add
lds
add
jge
ins
clc
jecxz
and
sub
inc
js
add
sub
xor
dec
xor
add
mov
rcr
add
inc
mov
loopne
mov
pop
ins
ins
mov
add
pusha
pop
cmps
push
pop
inc
mov
(bad)
pop
(bad)
and
xchg
data16
or
call
mov
and
xchg
inc
popa
je
pop
cmp
adc
loope
les
or
cwde
jnp
add
inc
imul
js
cmp
jmp
push
inc
xor
push
sbb
arpl
pushf
mov
push
arpl
call
xchg
mov
jbe
xchg
int3
sbb
add
dec
push
imul
jo
mov
or
dec
or
popa
test
push
jp
cs
ins
ror
arpl
inc
imul
ja
das
popf
add
cs
pop
mov
mov
aas
push
int
ss
mov
push
inc
imul
add
mov
cmp
movs
out
sahf
(bad)
es
das
iret
push
sbb
nop
pop
push
sar
mov
rcl
test
sbb
push
cmps
clc
mov
sub
adc
inc
adc
mov
pop
inc
imul
mov
(bad)
or
int3
pop
cmp
js
out
or
outs
mov
movd
test
lock
punpckhbw
push
or
stos
popa
cmp
cs
cmp
(bad)
call
add
and
rol
(bad)
fwait
jno
shl
and
xchg
or
dec
sub
xchg
cmp
or
cmp
adc
popa
push
lock
dec
xor
jnp
add
pop
fld
imul
fisub
fsub
or
add
pop
fcmovnbe
mov
or
push
bound
retf
xchg
fxch
or
xchg
xchg
xchg
xchg
push
lea
jne
cmp
jns
pop
cmp
aad
fdiv
or
pop
aas
push
adc
mov
inc
test
jb
fcomp
mov
inc
adc
pop
add
or
fs
push
nop
outs
dec
jo
xchg
push
sbb
es
iret
sbb
mov
jmp
outs
xchg
or
mov
dec
popa
mov
shl
in
mov
add
movs
es
jmp
pop
jmp
dec
xor
push
and
sar
push
push
jmp
add
(bad)
xlat
xor
cli
pop
push
dec
in
sbb
jmp
outs
push
movs
ror
mov
add
pop
scas
jae
mov
inc
rcl
or
xchg
ret
call
or
adc
pop
push
mov
loope
add
and
adc
cmp
push
cmps
push
jmp
(bad)
popa
bound
push
add
ffree
cmp
out
gs
mov
imul
or
dec
push
cdq
daa
dec
and
push
jne
jg
push
pop
push
sub
add
pop
leave
sub
ja
and
jl
cmp
add
push
push
mov
cmp
jo
rol
xchg
or
xchg
pop
add
jns
stos
push
test
fiadd
fsub
hlt
test
aaa
sti
es
shr
cmp
mov
add
or
aas
fild
sub
ins
mov
ds
scas
push
xchg
push
scas
lahf
popf
out
dec
xlat
cs
loop
test
pop
mov
cmovle
push
inc
xor
ret
add
(bad)
adc
shr
into
ja
xchg
mov
test
fsubr
xor
push
mov
xchg
lea
mov
inc
sbb
jnp
xchg
sbb
mov
xor
or
in
xor
pop
jge
xchg
sub
fadd
add
jne
jge
shl
or
daa
out
cdq
mov
stc
das
jmp
jo
les
xor
shl
aam
push
aad
adc
or
das
cmp
rol
add
adc
pop
add
and
bound
outs
mov
data16
test
jo
add
add
jo
imul
mov
add
scas
inc
or
outs
or
(bad)
xor
add
cmps
push
loopne
pop
xlat
push
mov
loop
xchg
mov
lds
fisttp
ror
in
push
lock
fld
add
mov
push
daa
pop
inc
test
xor
sub
(bad)
imul
jae
inc
jl
fwait
loopne
outs
dec
gs
xor
js
pop
sub
inc
and
je
jp
in
sbb
jge
sub
add
in
out
and
sub
xor
pop
hlt
and
pop
cld
shl
fsub
cmp
inc
shl
or
call
(bad)
sub
pusha
sub
inc
inc
inc
inc
push
fdiv
push
xchg
push
pop
pushf
mov
daa
inc
(bad)
push
pop
in
(bad)
fdivr
dec
paddsb
scas
jbe
push
aas
sub
outs
jae
cmp
aas
fisub
jge
retf
push
dec
out
mov
cmp
xor
test
sub
or
push
xor
sbb
push
mov
dec
xchg
xor
sub
dec
adc
ret
mov
aas
add
and
sub
add
cdq
sub
add
ss
bound
push
xchg
mov
int3
ja
xchg
call
addr16
retf
test
adc
out
jbe
and
pop
call
add
lock
and
mov
mov
xchg
hlt
fwait
nop
push
sub
mov
jno
ror
shr
arpl
not
(bad)
pusha
add
mov
scas
pop
rcl
inc
aaa
into
loopne
dec
gs
mov
sbb
nop
adc
scas
jbe
jne
data16
rol
(bad)
push
push
push
xor
and
inc
test
call
sub
add
jns
xchg
and
sbb
sbb
mov
xor
dec
jns
test
movs
adc
cs
and
sub
cs
add
jnp
aaa
pop
adc
js
cwde
or
outs
push
imul
inc
fcomp
les
test
neg
push
(bad)
in
pusha
jo
fmul
enter
mov
in
enter
fisttp
enter
mov
enter
inc
arpl
retf
add
icebp
loopne
test
cdq
enter
sbb
fdivr
sbb
out
lock
clc
push
and
or
fst
mov
mov
pop
into
fnstcw
jns
adc
cmp
rol
mov
sub
mov
mov
cmp
ds
inc
or
jae
add
inc
add
or
xchg
dec
xlat
int3
ss
scas
(bad)
aam
dec
dec
inc
push
ins
popa
jne
pop
mov
in
mov
mov
fisttp
inc
retf
gs
retf
inc
test
pop
xchg
outs
dec
xor
or
push
dec
test
pop
dec
pop
sar
sub
inc
repz
inc
sti
test
fdivr
enter
aas
jno
pop
js
add
xor
jbe
and
push
rol
dec
sti
adc
pop
sub
add
inc
ins
jo
jns
rol
mov
push
nop
or
repz
pop
inc
dec
jo
imul
lods
mov
(bad)
add
loop
mov
pop
je
mov
idiv
ror
outs
in
push
shr
js
cmps
push
pop
adc
pop
lds
xor
jl
js
push
cli
clts
mov
add
in
in
cmp
movs
mov
jb
pop
cmp
add
add
dec
pop
adc
bound
add
pushf
cmc
outs
push
outs
cmp
mov
ficomp
enter
mov
fild
arpl
mov
push
cdq
mov
pop
in
popa
jns
imul
pop
add
adc
and
push
shl
mov
cmp
loope
andps
outs
jae
dec
jg
ds
outs
fs
sub
ins
dec
(bad)
test
or
mov
xlat
or
leave
or
int3
enter
push
lock
das
ss
pop
and
adc
sub
push
jo
cmp
push
pusha
mov
sub
mov
or
and
push
adc
add
mov
fdiv
pop
scas
push
ds
or
sub
jno
test
jg
adc
and
inc
sbb
mov
lds
mov
loopne
loope
pop
fsub
cmc
mov
add
add
lods
mov
mov
enter
cmp
mov
fs
push
cmp
sub
sub
(bad)
sar
xor
imul
sbb
inc
mov
aam
hlt
stos
xchg
and
or
push
or
mov
ret
je
xlat
ins
sbb
sub
or
push
sbb
xor
push
xor
adc
push
add
out
loopne
push
mov
sbb
and
inc
mov
dec
sub
cmc
xchg
sbb
push
cmp
sbb
jp
cdq
shl
mov
test
xor
inc
out
fucomp
jnp
es
das
dec
push
loop
in
push
inc
xchg
mov
jo
cld
call
and
xchg
push
shr
and
xlat
stos
or
pusha
ss
mov
push
das
ror
cld
sbb
comiss
mov
in
xchg
adc
mov
icebp
pop
jmp
gs
and
and
test
ins
retf
movs
and
cs
cmp
jnp
(bad)
dec
mov
outs
in
loop
sbb
or
lahf
mov
jo
in
add
sub
xlat
in
add
mov
add
add
xor
or
retf
adc
in
pop
add
outs
inc
or
into
lahf
adc
pop
ja
(bad)
(bad)
(bad)
imul
and
cmp
dec
add
mov
adc
fmul
pop
inc
fnsave
retf
sbb
mov
inc
push
mov
mov
inc
xchg
call
dec
adc
pushf
gs
sub
or
xchg
les
mov
pusha
xor
push
dec
mov
test
fwait
cdq
(bad)
clc
pop
push
add
mov
pop
cmp
rcr
jmp
call
es
das
daa
push
jp
fiadd
and
cs
add
or
popf
dec
xor
out
ret
push
xlat
jmp
push
mov
mov
aad
mov
retf
aam
ins
xchg
sbb
push
and
mov
or
outs
pusha
xor
mov
ins
inc
lea
test
mov
mov
mov
and
pop
inc
xor
jecxz
mov
mov
jbe
or
adc
out
or
out
dec
fcmove
fld
xor
imul
cld
pop
xor
test
push
inc
jne
adc
mov
pusha
outs
pop
jnp
out
mov
pop
fmul
mov
cwde
mov
inc
jo
ins
pop
cwde
jb
cmp
js
inc
jl
shr
add
test
std
add
aad
lock
in
pop
imul
adc
jbe
pusha
add
std
add
mov
div
loopne
cli
das
cmp
push
add
adc
push
fbstp
jo
hlt
sahf
push
aam
adc
push
bnd
add
and
rcr
out
push
fld
xor
add
icebp
mov
cmps
jmp
xchg
out
push
add
push
add
outs
fs
les
mov
sbb
loope
sub
mov
pop
or
and
add
int3
add
mov
mov
mov
stos
push
xchg
adc
dec
mov
xchg
mov
bound
jmp
cwde
mov
popa
icebp
inc
push
add
pop
adc
pusha
or
rol
xor
pop
and
test
mov
inc
aaa
pop
mov
push
out
push
jmp
rcl
pusha
inc
pushf
push
fstp
ror
pop
shr
push
je
out
add
in
mov
cld
lahf
add
icebp
push
daa
es
jp
fwait
das
dec
push
jb
pop
jp
les
cwde
xchg
add
pop
sub
adc
inc
sbb
cmp
outs
gs
dec
idiv
retf
push
inc
mov
ins
xchg
push
cli
out
(bad)
cmps
(bad)
sbb
test
adc
sub
wrmsr
jp
sub
xor
sub
sub
pusha
or
jno
call
jo
jbe
sub
mov
out
ins
jno
add
add
jno
lds
outs
pusha
or
adc
rol
ss
call
loop
and
add
pmulhuw
xor
add
push
dec
das
gs
test
xchg
sbb
test
jne
mov
cmps
fs
ret
cld
or
lock
cmp
xchg
rcr
push
pop
push
and
int3
jge
mov
mov
push
mov
mov
push
outs
imul
outs
cmp
dec
loopne
or
in
outs
pop
or
out
shl
cmp
jmp
pop
sbb
jne
aaa
sbb
movs
pop
add
pop
xor
pusha
hlt
push
jle
add
and
lds
aas
mov
pop
adc
sub
imul
push
test
push
push
aas
push
and
jo
js
lock
add
jne
inc
inc
test
or
mov
or
dec
rcl
push
jno
ret
dec
pop
lods
dec
and
push
xchg
inc
fwait
dec
jmp
je
outs
or
push
dec
or
or
xor
scas
or
mov
cmc
aas
call
imul
es
test
mov
jb
mov
fcomi
add
adc
push
sar
mov
and
xor
push
add
mov
mov
dec
in
loop
in
push
jge
lock
sub
out
xchg
ret
popf
sysret
add
ds
push
test
and
pop
and
cwde
adc
fwait
and
or
cli
and
and
cmps
pop
sub
aaa
pop
outs
loopne
ds
cmp
outs
pop
outs
sar
inc
add
ins
mov
ins
fld
ins
or
push
rcl
iret
pop
or
loope
sbb
enter
mov
idiv
mov
push
gs
xchg
mov
sub
push
jb
adc
push
sbb
jae
xor
xor
jns
sub
pop
jbe
sbb
lods
loopne
or
or
push
or
push
jne
adc
xor
jbe
mov
and
mov
pop
or
jmp
or
loopne
add
push
loop
xor
xor
cmp
sbb
test
mov
fs
gs
jo
int3
cmp
imul
dec
test
dec
popa
dec
jne
dec
pop
ror
jb
sub
jb
test
mov
push
add
dec
jo
ins
outs
jmp
pop
inc
push
xchg
pusha
inc
add
pop
or
jne
or
dec
xor
loopne
mov
rcr
mov
mov
fdivr
(bad)
aas
inc
outs
cmp
jne
retf
xchg
pop
std
jg
or
jl
mov
or
(bad)
out
or
pusha
or
mov
mov
mov
sti
cmp
mov
shr
fsub
ss
cmp
scas
fs
test
mov
mov
add
add
bound
rcr
or
test
lods
jb
push
dec
bound
out
int
sbb
fidiv
sbb
addr16
add
addr16
sbb
or
jo
mov
movs
ja
mov
mov
cwde
xor
cmps
xor
jo
xlat
rol
es
std
fdiv
repz
lods
push
pushf
inc
into
push
into
ds
mov
or
fs
sbb
xlat
mov
add
cmp
push
hlt
dec
sar
push
xor
push
sbb
xor
jns
sbb
cmp
mov
push
inc
out
mov
push
or
push
test
int
jge
nop
sub
sub
push
pop
ss
jle
adc
mov
sbb
jle
sbb
or
add
shl
outs
sub
daa
dec
cs
sub
test
cmp
mov
ja
xchg
adc
push
jae
ret
aad
(bad)
aaa
cmp
and
mov
addr16
jne
fwait
cmp
pop
and
test
dec
fsub
push
cmp
adc
inc
out
bound
mov
xchg
push
scas
cmp
mov
data16
loopne
stc
push
push
xor
mov
or
dec
outs
mov
pop
call
fwait
test
push
repnz
lods
xor
adc
sti
adc
push
jmp
pusha
ds
int3
or
outs
and
push
int3
or
jo
inc
data16
sbb
pusha
pusha
xor
xor
(bad)
je
jo
xchg
and
fs
shl
adc
mov
fimul
outs
fwait
mov
xor
lods
nop
sub
add
xor
xchg
or
xchg
mov
stc
cmp
jno
cmp
dec
fmul
mov
(bad)
push
mov
inc
iret
sub
dec
sbb
cmovg
mov
sti
sub
inc
cmp
and
ror
push
(bad)
lods
nop
dec
mov
sub
dec
pusha
nop
mov
inc
aas
and
pushf
sbb
push
std
daa
inc
dec
int
jecxz
dec
in
sub
sub
pushf
or
out
mov
test
pusha
or
or
jmp
mov
inc
fs
pop
cs
push
pop
popa
test
or
and
bound
and
adc
bound
fstp
add
or
sahf
add
add
push
pop
adc
int
or
jae
or
fisubr
push
cmp
or
mov
and
xor
aad
sbb
inc
push
rol
xlat
pusha
xor
outs
sbb
or
pop
adc
add
out
add
push
push
inc
jae
inc
adc
add
or
jecxz
fsub
popa
in
imul
leave
in
aam
sub
xchg
pop
inc
dec
aam
es
push
ins
pop
and
inc
clc
or
and
addr16
sub
int
add
mov
cdq
add
add
mov
inc
call
and
inc
add
sub
mov
adc
ins
add
add
or
push
sub
(bad)
rol
clc
mov
inc
jae
ins
gs
xlat
mov
addr16
or
lea
pusha
test
ret
add
jb
sti
push
in
or
xor
xor
sub
cmp
add
jle
jb
xor
retf
hlt
adc
xor
pusha
sub
out
adc
aaa
pop
or
lock
daa
sbb
jb
sti
push
(bad)
fisubr
mov
adc
push
mul
dec
pop
popa
push
sub
jno
jne
pop
aas
mov
movsx
enter
jne
push
add
or
pop
test
push
cli
imul
and
pusha
push
dec
inc
jnp
les
jnp
and
and
push
adc
push
inc
or
or
(bad)
or
les
test
or
cwde
fwait
or
inc
dec
adc
test
xor
pop
mov
add
or
add
sbb
(bad)
fcom
inc
dec
cmp
rol
cdq
adc
push
xor
add
sub
push
daa
xor
aaa
and
pop
inc
or
es
sbb
mov
es
cmovbe
xor
pop
xchg
mov
inc
inc
inc
cmp
adc
arpl
inc
test
(bad)
cmp
mov
and
cmc
pop
call
arpl
mov
dec
or
mov
or
push
cmp
mov
(bad)
rol
enter
inc
or
or
outs
ja
inc
mov
cmp
push
clc
les
lock
jle
neg
scas
push
aam
cs
jae
jnp
ss
mov
pusha
push
and
repz
es
sbb
or
cmps
iret
jmp
or
cmp
or
push
or
add
pushf
retf
hlt
or
inc
inc
js
popa
loop
in
pop
cmp
push
or
pushf
sbb
inc
fisttp
adc
stos
popa
outs
sbb
mov
adc
cmps
and
xchg
out
sbb
and
sbb
dec
jb
popa
adc
inc
jns
pushf
fcmovnb
push
adc
mov
popa
dec
daa
pop
xor
adc
mov
push
or
lahf
repz
loop
ret
lds
mov
cmp
push
dec
add
add
scas
loopne
fiadd
mov
mul
adc
xchg
add
push
push
inc
jne
outs
ins
jmp
push
lock
neg
adc
loop
xor
retf
popa
mov
dec
js
add
add
or
cmp
(bad)
adc
sbb
(bad)
xchg
inc
fcomp
or
int
inc
dec
ins
add
jecxz
(bad)
jmp
mov
lods
lock
repnz
call
or
aas
pop
test
and
test
push
add
ins
or
xchg
mov
xor
jb
dec
outs
(bad)
xor
xor
stos
mov
(bad)
loope
jae
fwait
mov
and
inc
mov
inc
or
hlt
jmp
dec
lds
adc
(bad)
mul
adc
test
adc
(bad)
push
jmp
xchg
mov
bound
je
cmp
push
pop
(bad)
dec
or
jmp
and
scas
mov
aas
pop
cmp
inc
or
adc
pusha
inc
jae
test
call
pusha
retf
or
je
das
and
jmp
es
das
out
add
test
das
jnp
adc
adc
push
fisttp
pop
dec
push
cs
pop
push
fcom
loopne
sahf
inc
push
fs
rcl
das
pop
push
xor
push
push
add
scas
(bad)
and
cmc
mov
push
cmp
(bad)
ret
aaa
ror
shr
or
imul
mov
out
xor
dec
mov
sbb
fwait
rcl
and
stos
data16
inc
push
sbb
rcl
sub
cmc
push
outs
mov
mov
push
xor
out
sbb
push
add
out
mov
sub
push
xor
stc
sub
in
xchg
clts
ror
add
add
cmp
pop
xchg
cmp
sub
sub
shl
jne
mov
movs
cdq
ins
dec
adc
pop
push
dec
pop
mov
inc
add
cs
(bad)
ror
sub
adc
shl
pop
sbb
push
fild
jne
add
jo
sbb
int3
fisubr
data16
or
mov
or
push
dec
rcl
pop
inc
or
inc
sub
dec
mov
mov
or
fild
std
cmps
stos
sub
sbb
jbe
or
nop
es
push
bound
rcl
mov
in
outs
cs
add
cmp
adc
stos
imul
mov
pop
add
ds
ja
mov
jo
(bad)
mov
pop
test
mov
xchg
cmp
mov
push
xchg
in
inc
je
inc
ins
sub
adc
pusha
inc
imul
xchg
xor
jne
add
mov
fld
or
push
adc
push
push
cmp
retf
outs
mov
add
ja
jnp
fs
(bad)
mov
jnp
inc
sub
pop
nop
jmp
add
jne
in
or
inc
jbe
inc
loope
test
xchg
jns
push
sub
push
sub
es
sbb
and
inc
adc
sbb
sbb
pushf
adc
js
neg
loopne
push
movs
fld
stc
outs
push
xor
push
shl
daa
mov
mov
push
loopne
aam
nop
jo
add
inc
outs
sub
add
in
test
out
or
jo
push
adc
inc
push
push
push
push
dec
outs
adc
ja
jecxz
push
aaa
fbstp
bound
pusha
mov
xor
sbb
xchg
push
xchg
fsubr
lds
xchg
add
(bad)
adc
add
pop
mov
or
cmp
test
jo
ja
popf
sub
das
mov
stos
inc
adc
fbld
ins
inc
sub
test
int
xchg
ficomp
pushf
loop
sub
out
cmp
fsub
into
nop
mov
iret
sbb
sbb
mov
test
push
add
out
(bad)
out
cmp
push
pop
in
das
add
xlat
push
add
out
pop
dec
push
cwde
scas
ret
jne
adc
test
sbb
out
fild
fistp
add
rcl
mov
jb
xlat
push
pop
sub
pop
pop
sbb
push
xlat
adc
outs
js
(bad)
xlat
add
loope
xlat
adc
shl
ret
fldcw
sbb
fxch
fld
fnstcw
movs
or
pop
jge
(bad)
pop
xor
add
mov
pusha
(bad)
out
or
add
add
sbb
div
leave
mov
mov
movzx
imul
mov
adc
pop
add
cld
lar
inc
rol
ret
stc
push
jne
(bad)
push
(bad)
sbb
add
ret
(bad)
xchg
add
push
lods
(bad)
into
push
call
lock
ret
out
pusha
sti
mov
push
mov
sbb
std
push
push
xor
mov
mov
push
push
mov
ins
daa
outs
add
mov
test
je
push
or
es
sbb
push
sub
mov
call
dec
es
test
je
cmp
ja
pop
mov
les
mov
add
fcompp
fist
jmp
push
out
mov
iret
loopne
rcr
pop
push
and
pop
pop
cmp
sbb
push
mov
(bad)
cmp
jns
(bad)
jmp
pop
mov
pop
ret
lea
pop
fisub
clc
mov
add
mov
rcr
mov
movs
loopne
xchg
es
movs
cs
call
ror
ret
mov
jge
jle
mov
or
stc
cs
push
mov
mov
inc
mov
push
pop
jnp
push
adc
push
and
or
jo
(bad)
sub
cmp
fisttp
push
cld
xor
xchg
xchg
sbb
pop
fadd
and
mov
call
cmp
je
lea
add
mov
clc
pop
or
iret
sub
out
sbb
or
xchg
js
or
push
jbe
mov
mov
add
fimul
push
imul
hlt
sbb
push
sbb
lock
cld
adc
cdq
loopne
ficom
add
or
outs
popf
sbb
or
hlt
test
jle
sub
pusha
sub
mov
mov
das
or
jo
ins
rep
push
hlt
sbb
ret
add
sub
push
jg
retf
arpl
fld
adc
lock
(bad)
popa
icebp
mov
mov
ja
clc
push
out
js
push
dec
xchg
lea
xchg
hlt
cmps
repnz
sbb
mov
inc
mov
mov
call
push
sti
stc
and
add
or
jne
cmp
jbe
sbb
sti
sti
(bad)
shr
cmp
inc
sti
mov
lods
cmp
inc
ins
es
cs
das
inc
add
ficom
movs
jp
or
cdq
loopne
sbb
adc
xor
dec
dec
push
jo
adc
loope
push
fld
adc
xchg
or
sahf
adc
pushf
test
sbb
pop
mov
(bad)
push
cmp
jbe
fs
je
(bad)
push
or
mov
stc
sti
jb
ins
inc
lock
loopne
mov
or
loope
and
je
aas
mov
ret
nop
into
push
fmul
push
push
retf
cmp
adc
or
or
rcr
sbb
inc
xchg
xor
mov
lock
xor
pop
lods
push
cdq
xchg
add
jp
or
inc
mov
pop
sub
adc
(bad)
or
mov
sub
(bad)
out
loope
push
mov
(bad)
daa
sub
cmp
mov
push
inc
and
mov
and
in
daa
movs
and
std
mov
jbe
fs
data16
pop
psraw
push
or
and
inc
(bad)
ficomp
pop
jmp
or
xchg
cmp
clc
push
imul
(bad)
sti
push
out
jmp
ins
inc
pop
cmp
jg
sub
push
inc
pop
rcl
or
mov
shl
neg
fisttp
out
das
push
call
lock
aaa
fdivr
sbb
pushf
jg
stos
push
call
dec
test
jl
clc
pop
mov
sbb
ret
mov
push
inc
dec
jne
pop
jmp
cmps
and
cmp
sub
bound
test
test
ss
mov
(bad)
cmp
add
lds
enter
cmp
int3
jmp
or
push
sbb
xor
pop
dec
jp
ja
and
faddp
pop
cdq
in
or
in
mov
ss
stos
aaa
loop
call
add
inc
dec
inc
cmp
loopne
or
je
outs
ins
imul
sub
inc
sbb
into
out
mov
pop
mov
pop
movs
mov
retf
xchg
dec
cs
pop
cdq
push
or
mul
or
and
lds
adc
ret
push
cmovo
out
loopne
inc
cvtps2pd
mov
out
call
pop
cmp
push
je
mov
hlt
push
push
shl
or
push
sub
test
dec
leave
outs
js
sbb
fdiv
fwait
or
inc
and
gs
prefetchw
sub
dec
sbb
popa
add
pop
xor
xchg
sub
mov
ins
and
and
jo
or
sbb
push
mov
and
js
pop
lods
shr
popa
ds
outs
outs
stc
push
ret
int3
or
out
aaa
ror
leave
js
dec
push
dec
add
(bad)
imul
sahf
mov
push
das
push
sbb
je
fdivr
jo
fistp
dec
imul
jo
mov
fs
stc
xchg
xor
mov
mov
push
inc
push
cdq
adc
jb
mov
sbb
push
or
dec
cdq
add
mov
and
inc
pop
pop
sub
dec
fwait
mov
fs
loope
jmp
pusha
or
outs
xchg
fcom
push
jo
dec
or
push
add
push
adc
pop
push
inc
out
mov
add
js
or
ret
pop
mov
add
mov
aas
push
in
fsub
add
add
(bad)
les
mov
fwait
test
out
pop
ret
or
jns
pop
sub
sbb
and
cld
add
sub
adc
and
popf
pop
stc
adc
adc
sbb
sbb
(bad)
mov
loope
add
mov
add
jns
call
test
or
mov
push
push
fadd
push
mov
cmp
sbb
aaa
ret
or
hlt
mov
or
cmp
rol
jge
jne
lock
outs
ja
cmp
or
inc
and
sbb
dec
mov
cmp
or
add
aas
in
mov
js
ins
stos
jmp
cmp
mov
ret
adc
push
push
aas
sbb
or
push
das
cwde
sbb
cmp
adc
cld
xor
sbb
loop
sbb
cmp
clc
mov
loope
js
jae
jmp
and
js
inc
nop
push
push
dec
hlt
mov
sahf
sbb
loop
arpl
test
jle
sub
loope
(bad)
dec
pop
aam
movzx
fistp
and
scas
retf
not
and
mov
shr
push
(bad)
mov
sbb
add
mov
inc
popa
ss
inc
sbb
int
ret
cmp
xchg
ss
pop
mov
cmp
cmp
inc
sub
push
xchg
dec
js
and
js
xchg
std
fwait
ret
push
dec
jns
jmp
push
xor
and
(bad)
mov
sub
cs
cmps
ret
mov
jmp
jl
hlt
xchg
mov
sub
mov
cmp
mov
outs
mov
adc
inc
adc
mov
sub
adc
pop
shl
mov
dec
int
daa
mov
add
lea
push
mov
mov
jmp
xor
test
enter
push
pop
sbb
cmp
push
push
push
call
sub
sub
in
cli
jae
(bad)
cmp
cdq
or
shr
call
in
xor
add
xor
inc
xchg
pop
push
mov
fild
mov
sub
les
cli
add
add
sbb
push
dec
and
mov
and
adc
dec
out
inc
sbb
or
dec
cs
dec
dec
add
rol
rcr
(bad)
div
jmp
xor
sub
push
cmp
sbb
sbb
xor
dec
aas
jle
jno
jo
test
jne
rcl
std
inc
fld
lds
(bad)
test
jmp
jmp
pop
lds
fnsave
js
int3
retf
ret
adc
(bad)
ins
imul
daa
in
js
sub
push
cld
pop
or
pusha
mov
and
je
inc
into
retf
xchg
ror
jmp
shl
pop
sar
xlat
or
lahf
and
je
js
and
ret
cmp
jae
add
ret
mov
push
(bad)
aas
stos
add
cdq
ss
out
idiv
xchg
das
data16
inc
dec
mov
push
inc
cmp
xor
mov
sbb
adc
push
aas
sbb
jmp
mov
push
popf
sbb
js
push
xor
outs
(bad)
pop
push
jp
arpl
ficom
aas
mov
xor
xor
mov
inc
xchg
lahf
ds
test
jl
push
shr
mov
into
in
loopne
fadd
pop
dec
push
or
mov
sub
sbb
xor
push
cs
jmp
rol
push
or
cmps
or
pop
ret
inc
pop
add
lahf
mov
add
inc
mov
sub
xchg
jg
lea
cmp
add
ins
mov
jbe
loop
or
push
adc
adc
cmp
push
inc
or
retf
and
sti
movs
and
retf
mov
mov
lea
add
or
mov
mov
mov
mov
mov
inc
mov
js
xor
dec
retf
cmp
hlt
sar
mov
in
mov
imul
mov
daa
adc
call
imul
rol
lea
add
adc
xor
xchg
push
pop
pop
cmps
mov
sub
add
in
push
or
leave
imul
lods
mov
dec
add
xchg
cwde
out
mov
mov
mov
xchg
or
pop
sub
es
neg
idiv
cmps
loopne
fs
jp
push
idiv
leave
sbb
repnz
pop
mov
jbe
cwde
mov
mov
add
call
sbb
add
ret
shl
cs
push
inc
jb
pop
ret
mov
adc
sub
inc
ds
sbb
sbb
pusha
push
or
inc
lea
dec
imul
outs
imul
add
inc
add
and
fsubrp
dec
das
das
jbe
adc
dec
fistp
pop
fadd
pushf
inc
push
cmp
scas
and
add
idiv
mov
dec
inc
inc
imul
inc
cmp
sub
jne
and
xchg
sub
mov
es
add
fwait
leave
add
int
push
into
test
scas
cmp
(bad)
sbb
pusha
and
mov
pusha
rcr
jb
outs
xchg
sbb
jae
mov
ins
xor
pop
(bad)
cmp
lock
and
jae
pusha
mov
mov
cmp
sti
mov
aad
jl
ror
bound
or
js
adc
xor
xor
mov
dec
or
push
pop
xor
pop
pop
test
loope
add
mov
and
cmps
outs
in
aaa
fisttp
pop
dec
pop
ins
(bad)
push
inc
(bad)
out
mov
fcomp
inc
inc
popf
sbb
push
out
loopne
sti
fiadd
shl
sub
das
push
push
xchg
sbb
lods
jge
or
push
push
dec
push
hlt
push
fs
push
mov
add
nop
adc
jmp
and
jl
sbb
mov
popa
retf
push
outs
and
ins
jle
(bad)
and
imul
and
lods
ret
and
je
xor
dec
cmp
xchg
xor
xor
or
outs
ja
cmp
lea
outs
inc
sub
push
shl
xchg
fidiv
xor
sub
push
dec
pusha
jne
cmp
push
iret
pop
in
push
(bad)
fwait
iret
jno
(bad)
pushf
pop
push
inc
jle
mov
push
pushf
or
addr16
test
push
pop
add
pop
ror
jo
daa
repz
mov
and
cs
and
and
and
and
adc
call
xchg
xor
xor
cmp
ror
add
rcr
mov
fidiv
das
or
outs
loop
in
inc
dec
out
mov
push
dec
add
dec
pop
dec
push
xor
jmp
sbb
xor
or
shl
push
stc
daa
jb
or
sti
daa
inc
mov
jae
std
ja
daa
adc
add
add
push
daa
or
daa
sub
imul
sub
cmc
ja
jmp
pushf
inc
nop
adc
and
arpl
and
cmps
shl
ret
ins
dec
popa
fwait
jno
mov
inc
or
xchg
ins
fdiv
jno
push
jno
aaa
sub
popf
sub
pop
xlat
or
sub
imul
popf
pop
push
push
ret
jnp
scas
aad
imul
jmp
push
or
xor
pop
movs
push
(bad)
push
dec
pop
sub
push
push
push
and
or
dec
push
mov
jns
push
and
sub
push
push
mov
pop
add
push
xor
scas
dec
add
jnp
push
inc
fcom
stos
mov
cli
push
aas
loopne
adc
stos
aas
rcl
dec
add
sbb
andps
fisttp
fist
fisttp
lods
ror
pop
mov
xor
adc
cmp
test
das
add
out
push
push
pop
mov
ret
popf
or
pop
fcom
sahf
pop
pop
sbb
sbb
dec
jb
pop
addr16
cmp
sbb
pop
and
cmp
mov
mov
push
or
neg
cmp
add
adc
dec
push
cwde
push
cld
xor
and
jne
jo
mov
push
adc
jg
sbb
push
mov
pop
mov
out
mov
sahf
ret
mov
push
push
ds
inc
push
jl
test
scas
and
mov
or
pop
mov
mov
push
inc
js
sbb
jg
mov
pop
ja
daa
and
test
xor
or
test
test
dec
and
test
pop
mov
inc
or
cmp
pusha
jno
out
popa
imul
and
ins
jno
inc
jo
xchg
nop
outs
xor
je
mov
pop
stos
and
dec
outs
lds
outs
jmp
pop
or
adc
gs
movs
dec
hlt
gs
jb
stos
imul
test
fsubr
shl
dec
jnp
sbb
test
iret
es
sar
jnp
loopne
or
nop
xor
stos
add
sub
sub
add
sub
xor
jno
mov
pop
push
mov
xor
pop
sahf
popa
mov
ret
popf
cmp
popa
and
ret
mov
or
mov
inc
inc
xor
jmp
js
jae
cmp
sbb
cmp
es
hlt
(bad)
andps
jb
ss
mov
mov
xor
or
popa
pop
sub
xor
shl
and
pop
lahf
xor
xor
outs
and
into
shr
push
jne
clc
je
or
ja
mov
scas
cmp
test
int3
push
add
push
ins
or
cwde
scas
fsubr
push
in
(bad)
sbb
push
or
push
and
push
pop
add
add
add
inc
(bad)
mov
nop
add
(bad)
mov
or
push
add
fcmovb
dec
jne
jle
mov
push
or
and
dec
getsec
add
nop
mov
in
aas
iret
and
mov
cwde
sbb
inc
pusha
out
ror
and
xor
mov
loopne
mov
lock
neg
sbb
inc
inc
cmp
jl
or
jge
inc
repnz
inc
dec
sbb
rcl
jl
push
in
xchg
pop
jge
fwait
pop
inc
loopne
sar
rol
retf
scas
ror
push
ins
sub
shr
inc
icebp
and
data16
pop
and
test
test
add
and
add
jne
adc
cdq
mov
add
test
movs
or
sar
mov
pop
lock
loope
xor
dec
pop
and
pop
jmp
pusha
out
std
lods
cmp
sbb
loopne
lahf
mov
jns
and
and
cs
mov
cmp
mov
data16
or
lods
mov
pop
adc
push
push
imul
inc
imul
ret
rol
je
cmp
jge
lods
je
daa
mov
add
test
xchg
mov
std
dec
mov
add
scas
std
scas
daa
mov
loope
and
jp
mov
or
xor
into
scas
and
mov
cwde
scas
or
iret
dec
push
jp
mov
sub
scas
dec
scas
pop
push
popf
cmp
cmp
or
xor
jg
jmp
sub
stos
stos
mov
js
add
cmp
adc
cmp
loop
mov
jmp
enter
mov
shl
pop
in
pop
popa
cs
and
(bad)
pop
xor
mov
daa
jnp
xor
add
push
adc
pusha
dec
adc
inc
nop
(bad)
pop
and
mov
jne
add
cwde
in
lods
fsubr
and
cmps
das
xor
xor
inc
jno
ret
retf
sbb
enter
xchg
pop
xchg
pop
and
nop
gs
pop
xchg
pop
pop
xchg
inc
xchg
xchg
pop
xchg
xchg
adc
repnz
inc
pop
or
pop
leave
inc
enter
add
add
xchg
mov
iret
sub
or
and
sub
inc
sub
adc
and
adc
or
daa
adc
pop
int
xor
adc
popa
adc
pusha
xor
adc
popa
mov
fisub
mov
dec
js
add
cdq
idiv
push
ror
popa
sbb
imul
or
cmp
pop
add
fldenv
inc
clc
pop
mov
fld
cmp
pop
les
adc
sbb
(bad)
sbb
xchg
jp
hlt
add
hlt
hlt
loopne
adc
adc
fwait
clc
mov
jo
fnstenv
mov
mov
ror
dec
xchg
in
inc
or
pop
call
dec
add
push
dec
xchg
ret
jge
mov
sub
repnz
xchg
xchg
nop
sbb
and
jg
inc
or
push
out
popf
or
or
or
fnstenv
jo
add
aas
sub
stos
stos
stos
stos
xchg
xchg
xchg
xchg
stos
stos
stos
stos
pop
pusha
add
mov
mov
cmps
jae
pop
sub
pop
xor
rcr
inc
mov
and
mov
jno
pop
sub
and
test
mov
xchg
mov
inc
data16
and
std
sbb
dec
adc
and
sub
ja
jne
or
int
cmp
loopne
iret
mov
add
loopne
inc
nop
mov
sbb
cmp
lds
sbb
call
add
sub
xor
mov
inc
and
dec
and
and
pop
mov
and
xor
mov
or
int3
or
xor
push
int3
pusha
shl
xor
xor
ror
push
not
cmp
cwde
std
sbb
je
scas
rol
cmp
xchg
sub
pop
adc
(bad)
mov
das
mov
mov
and
in
push
mov
pop
arpl
mov
neg
adc
dec
sub
mov
jo
ss
dec
or
mov
call
add
cmp
mov
add
mov
push
push
xchg
out
mov
push
je
lea
mov
adc
jne
js
add
jge
adc
add
ja
push
shr
push
and
push
enter
cmp
xlat
sbb
lea
mov
add
mov
sub
add
test
cmp
push
adc
das
(bad)
adc
or
cmp
lea
sub
or
add
jno
mov
sub
inc
(bad)
sub
sub
pusha
mov
sub
sub
sub
jl
xor
aaa
fwait
shl
adc
jns
jne
mov
dec
clc
mov
dec
aam
jbe
pmaxub
je
mov
jbe
sub
add
sbb
jbe
shl
inc
xor
pusha
adc
and
mov
mov
mov
es
jbe
je
out
mov
imul
loopne
call
(bad)
leave
in
mov
test
adc
cmp
imul
jo
add
lahf
pusha
xor
shl
add
xchg
fisttp
loopne
inc
shl
sub
mul
or
cdq
div
jmp
test
(bad)
movs
imul
inc
movs
repz
jnp
cmp
cwde
pop
fadd
mov
test
add
pop
inc
sahf
mov
test
jl
(bad)
mov
dec
mov
mov
jb
jo
cdq
dec
cli
int3
mov
push
push
fcom
mov
pop
or
ins
inc
jl
mov
mov
imul
ror
pop
dec
jmp
sbb
imul
int3
loopne
fldcw
sub
js
fdiv
adc
add
bswap
js
js
adc
into
js
and
daa
int3
and
js
lahf
adc
inc
out
mov
stos
mov
push
cdq
adc
jmp
pop
test
xchg
enter
test
jb
and
and
hlt
mov
test
cli
sbb
aaa
(bad)
sbb
jno
jno
xchg
sbb
jno
(bad)
push
xchg
inc
push
and
jecxz
scas
scas
xchg
push
cmovp
xchg
mov
ins
shl
aad
sbb
fbld
jnp
push
stos
imul
icebp
adc
bound
and
inc
cs
mov
mov
inc
lahf
sbb
out
adc
and
sbb
lahf
cs
lahf
sbb
icebp
push
mov
sbb
sahf
or
mov
push
inc
fadd
mov
sub
dec
and
sub
mov
mov
push
xor
shl
jno
jno
and
ror
mov
(bad)
mov
xor
mov
xor
xor
add
xor
xor
add
jmp
xor
das
xor
arpl
inc
xor
xor
adc
aad
and
push
out
push
ret
cmp
or
sub
inc
mov
add
xor
pop
sub
inc
daa
scas
xor
nop
mov
and
fadd
dec
add
test
and
push
push
leave
mov
mov
adc
mov
adc
loop
sbb
fwait
mov
cwde
add
adc
std
pop
inc
test
xchg
push
icebp
fnstsw
mov
add
add
dec
fnstenv
add
div
mov
cmp
inc
test
sbb
cmp
sbb
inc
aam
sti
jbe
pushf
sar
ss
sub
lahf
nop
and
pop
dec
dec
inc
mov
pushf
mov
or
(bad)
or
icebp
or
inc
sbb
ds
ret
mov
int3
and
adc
adc
in
ja
adc
test
test
inc
push
cmp
mov
test
out
inc
xor
inc
xor
out
jmp
mov
pop
(bad)
sar
push
fadd
imul
pop
imul
imul
ffreep
jnp
and
imul
mov
and
mov
mov
xlat
and
mov
out
xor
add
or
cwde
cmps
xor
xor
add
(bad)
jg
imul
gs
imul
gs
out
xchg
cmp
add
cmp
add
add
rol
xor
or
add
loopne
(bad)
push
inc
sub
or
pop
movs
out
sahf
mov
add
jnp
ds
jle
cwde
push
and
ins
jmp
call
popa
pushw
add
mov
gs
inc
outs
jne
je
or
test
in
push
jne
and
outs
daa
imul
ins
jne
and
out
mov
js
add
push
add
sbb
ins
fs
sub
inc
add
call
ret
jge
xchg
or
je
das
pop
fucomi
ficomp
bound
inc
sbb
je
add
mov
sahf
lods
push
inc
push
repnz
sub
add
cmp
xor
or
outs
jb
imul
sbb
test
std
shl
push
or
dec
pop
inc
mov
outs
jns
push
add
add
push
push
ja
pop
pop
(bad)
call
pop
cmp
arpl
ins
popa
imul
mov
lea
pop
scas
pushf
ja
ins
mov
in
push
cmp
adc
cmps
sbb
ret
push
scas
add
sbb
and
sbb
inc
or
in
loope
sub
popa
js
sub
add
ret
mov
inc
cld
bound
dec
xchg
xchg
inc
add
(bad)
ficomp
mov
push
push
jne
in
jp
jb
cmp
pop
adc
lahf
add
or
inc
or
and
jmp
aas
push
sbb
add
dec
or
push
mov
into
pop
add
sar
adc
adc
or
inc
inc
bound
jb
jns
adc
xlat
inc
pop
cdq
outs
pop
push
pop
imul
push
sub
pop
scas
shl
test
adc
ror
push
or
or
adc
fisttp
cwde
sbb
add
std
inc
cmp
sete
mov
jb
sbb
inc
jmp
adc
add
jns
mov
bound
jg
xor
jns
cmp
inc
mov
sub
dec
jne
pop
or
pusha
stos
movaps
adc
pop
cmp
mov
xor
xchg
or
dec
sub
or
pop
dec
jl
mov
out
mov
je
lea
xlat
sub
cmc
add
clts
dec
push
xor
mov
push
mov
mov
(bad)
in
inc
pusha
pop
pop
(bad)
loop
mov
adc
inc
adc
aaa
cli
xor
mov
mov
sbb
js
adc
(bad)
and
inc
adc
cmp
les
inc
hlt
inc
push
dec
inc
in
sbb
adc
jo
sbb
es
imul
(bad)
push
and
add
push
sti
adc
shr
xchg
mov
dec
sbb
stc
inc
shr
call
bound
sbb
or
push
div
push
scas
sbb
push
inc
push
dec
adc
push
adc
mov
push
je
pop
push
imul
mov
mov
mov
loop
ins
add
adc
mov
cmp
sbb
ss
push
inc
and
sbb
cmp
dec
adc
inc
add
loopne
and
push
cld
lea
mov
mov
mov
cmc
push
mov
lock
adc
jle
adc
fisubr
dec
add
jmp
(bad)
add
mov
dec
scas
pop
mov
jl
jmp
js
mov
sbb
shl
rcr
pusha
(bad)
xor
add
ficom
dec
cld
add
jle
cmp
sbb
mov
mov
adc
adc
xor
stos
icebp
arpl
lds
add
inc
inc
rcr
adc
push
clc
or
in
add
nop
cmp
adc
pusha
repz
dec
mov
mov
xchg
mov
in
xchg
or
dec
loop
add
pop
or
nop
iret
fidivr
push
test
mov
push
inc
jno
cmp
adc
dec
push
call
(bad)
idiv
jmp
and
push
xor
es
xor
dec
cmp
jg
gs
popa
fild
ins
(bad)
jl
das
add
push
mov
dec
pop
scas
popa
adc
cmp
cmp
cld
or
in
add
sub
arpl
jae
das
add
xchg
mov
pop
adc
icebp
xchg
or
and
bound
adc
jp
aas
pop
popf
add
add
or
mov
sbb
mov
add
inc
push
pop
icebp
or
and
dec
jl
inc
or
(bad)
pushf
push
cmp
push
ret
push
inc
xchg
xchg
push
adc
test
hlt
jl
xchg
out
cmp
or
push
push
out
jae
jbe
jge
jl
mov
jne
inc
xor
out
int
mov
add
call
xchg
fadd
in
rcr
cdq
(bad)
jmp
and
push
clc
pop
mov
xchg
push
sbb
(bad)
add
data16
idiv
cmp
jmp
and
je
(bad)
sub
mov
test
jle
mov
mov
add
lock
add
add
mov
add
push
mov
push
pop
dec
push
jg
les
mov
push
add
sub
rol
push
pusha
fadd
loopne
sub
(bad)
xchg
adc
in
imul
jmp
mov
push
push
push
mov
push
out
out
cmp
xor
lods
lea
dec
pop
jg
out
out
adc
push
sub
ret
jmp
adc
dec
cmp
fisubr
push
push
sub
or
test
aam
inc
ror
fisub
ret
mov
mov
ret
jg
add
inc
add
cld
add
movs
fwait
rcr
mov
push
lahf
popf
xor
cdq
out
sbb
add
add
sbb
add
add
add
cwde
mov
xor
ror
mov
fcmovnbe
lea
mov
jmp
sbb
bound
xchg
add
pop
dec
clc
jg
sahf
ret
adc
add
mov
sbb
imul
cmp
nop
imul
push
or
lock
inc
ss
add
mov
out
pop
call
jo
and
cmp
ja
test
mov
inc
push
dec
cmp
sub
daa
iret
pop
sbb
ja
fisttp
pushf
jmp
adc
gs
and
test
pop
mov
mov
daa
ins
adc
mov
jne
lea
mov
iret
les
rcr
or
jnp
fs
adc
inc
clc
xlat
inc
pop
inc
mov
in
mov
mov
xor
lock
call
sub
jmp
and
enter
adc
pushf
enter
into
lock
adc
sbb
sbb
sbb
clc
push
ds
mov
outs
push
cmp
sbb
dec
inc
push
push
addr16
cmp
repz
xchg
cmps
push
mov
std
fimul
mov
xchg
cwde
xor
ret
push
push
adc
cmp
mov
cmovno
movs
ds
nop
cmp
les
dec
movs
ret
pop
cmp
inc
out
ror
test
ds
cmp
push
sahf
adc
xchg
fsub
adc
test
outs
or
and
push
push
or
ja
cwde
or
fldl2t
push
retf
addps
jo
movs
fld
lock
mov
scas
mov
fcomp
mov
fsubp
cmp
aam
loop
js
call
dec
jb
stc
sub
jae
out
(bad)
fdivr
cmp
sete
push
inc
or
push
shl
mov
adc
fcom
xor
jmp
push
test
xchg
cmps
lods
sbb
aaa
inc
or
scas
mov
pusha
mov
loopne
rol
jne
sub
mov
mov
popaw
adc
inc
js
test
das
adc
out
lock
adc
jl
mov
xor
inc
add
xchg
pop
push
push
xchg
scas
cmp
movs
shl
sbb
fwait
add
mov
lea
add
push
jo
cmp
jmp
mov
mov
inc
add
rcl
push
mov
clc
ss
mov
push
or
dec
adc
add
mov
xor
(bad)
call
or
loopne
or
sub
fadd
cmps
push
dec
lea
and
(bad)
pop
ficomp
inc
xor
in
add
daa
popf
add
mov
dec
cs
and
xor
fidiv
cmp
adc
push
mov
jmp
jmp
scas
ret
jge
pop
iret
js
int3
and
test
addr16
jl
call
add
mov
mov
xor
mov
add
mov
xlat
sbb
bound
pop
aas
or
mov
(bad)
cwde
adc
mov
rol
mov
ret
adc
in
adc
mov
and
adc
mov
push
or
loop
or
loop
adc
popf
push
adc
lea
mov
inc
or
or
ins
hlt
enter
push
mov
push
(bad)
fsubr
rol
clc
adc
aam
cli
imul
jle
adc
cli
dec
push
(bad)
and
(bad)
adc
int3
jbe
test
cmp
pop
jo
sub
push
add
cmp
xor
sbb
lea
dec
xchg
jp
push
mov
and
adc
dec
add
dec
adc
mov
add
push
sbb
cmp
or
add
mov
mov
or
(bad)
imul
push
das
inc
add
(bad)
add
xchg
cli
mov
push
add
ret
jge
cmp
jg
mov
jle
adc
and
nop
sub
pusha
test
loop
or
loope
jle
imul
xchg
xchg
inc
iret
inc
add
lea
sub
ds
pop
pushf
adc
jl
cmp
pop
mov
dec
fmul
and
jl
inc
cmp
push
lock
dec
retf
mov
scas
call
add
add
dec
jbe
adc
(bad)
(bad)
fild
or
push
int3
mov
inc
adc
pop
mov
aaa
loope
clc
pusha
adc
pop
nop
stos
test
mov
cmp
xor
inc
je
sbb
adc
cmp
sub
call
sbb
push
es
dec
adc
mov
mov
inc
cmp
jb
pop
pop
fild
cs
dec
cmc
jge
fstp
test
mov
jl
js
xchg
es
adc
daa
jo
dec
lock
jno
jl
jg
mov
fsubr
aam
pop
loopne
sbb
sbb
fwait
cmps
loop
outs
push
pop
shl
add
inc
pop
adc
mov
or
(bad)
cdq
lds
jg
dec
test
jl
inc
sub
or
push
cs
ret
fidiv
mov
pop
ficomp
aas
pop
mov
jmp
jne
fmul
aas
lods
xchg
inc
pop
out
push
dec
hlt
cmp
dec
(bad)
jns
jnp
test
push
and
hlt
mov
test
pop
aam
sub
xchg
(bad)
(bad)
sbb
push
push
xor
mov
or
ror
xchg
dec
fsubr
sar
mov
adc
add
add
xchg
push
lea
and
dec
jbe
sbb
out
bnd
aas
lods
fwait
les
push
outs
dec
fmul
sbb
mov
mov
test
sbb
add
mov
push
or
bnd
sahf
jmp
add
js
add
mov
js
pop
loop
pop
push
pushf
loopne
or
(bad)
pusha
mov
daa
sub
popa
out
into
jns
xor
ds
sbb
fist
shl
fdivr
mov
mov
call
add
daa
(bad)
(bad)
clc
mov
add
adc
push
call
shl
stos
mov
add
sub
retf
adc
adc
jg
adc
xchg
stc
imul
retf
leave
sub
das
sbb
ret
clc
cli
cmp
mov
mov
dec
sbb
mov
mov
mov
and
dec
mov
jbe
push
and
adc
lock
dec
mov
outs
jbe
stos
(bad)
(bad)
dec
sbb
adc
push
shr
cmp
mov
jmp
inc
mov
fmul
movs
in
fcomp
sub
push
jg
and
lock
stc
(bad)
js
cmp
jl
and
cmc
mov
cmps
imul
jge
cmp
jle
inc
clc
xchg
cmp
icebp
imul
jl
sbb
push
sub
dec
and
fdiv
pushf
ror
fwait
mov
mov
test
ss
sub
and
js
pushf
add
add
lods
ret
mov
adc
aas
ret
loop
std
adc
repnz
dec
cmp
jne
mov
ret
cmc
jmp
dec
mov
inc
sbb
or
pop
push
(bad)
lock
out
addr16
cli
add
adc
daa
scas
imul
jmp
mov
in
scas
cmps
mov
or
sub
or
sub
mov
icebp
add
mov
sbb
push
push
mov
mov
jl
cmp
push
cmp
ret
add
add
dec
mov
adc
test
je
jo
push
mov
sahf
lea
jl
(bad)
adc
xchg
adc
(bad)
mov
mov
jns
jo
push
mov
jg
jb
test
int3
mov
pop
adc
addr16
xchg
mov
ds
outs
out
jmp
or
call
mov
cmps
scas
je
push
cwde
es
push
out
or
ror
stos
rcr
mov
mov
mov
loopne
fdivr
int3
pop
sti
adc
test
fs
mov
jmp
gs
fs
add
in
jg
shr
push
je
add
add
pop
shl
repnz
ins
outs
bound
das
add
cmp
cmp
sub
iret
inc
jo
mov
or
push
xchg
leavew
dec
dec
add
stos
loopne
pop
or
bound
adc
add
test
jg
addr16
inc
push
fs
or
fmul
jg
inc
mov
cmp
pusha
inc
mov
adc
push
test
push
mov
adc
jbe
add
xchg
jbe
jmp
add
inc
push
test
ficomp
mov
push
lock
dec
push
and
sub
repnz
das
mov
mul
outs
loopne
stos
cld
inc
mov
mov
lods
lea
push
push
adc
call
xor
cmp
jmp
cs
cmp
mov
sub
mov
sub
call
mov
add
cmp
jbe
cmps
adc
inc
sbb
inc
mov
cmp
scas
adc
cmp
int3
hlt
imul
inc
xor
aaa
push
xlat
push
lock
mov
inc
push
and
jno
or
sahf
imul
dec
or
dec
or
or
mov
dec
out
push
or
xor
lock
adc
fld
adc
aaa
fisub
xchg
or
xlat
inc
pop
inc
adc
lea
or
repnz
icebp
(bad)
jle
mov
push
rol
ins
xor
fadd
add
cwde
movapd
push
sub
inc
or
data16
inc
mov
jb
jne
inc
out
push
or
cli
push
outs
mov
loopne
cmp
loopne
mov
out
add
pop
loopne
(bad)
lahf
pop
adc
add
sahf
and
fstp
hlt
mov
mov
or
pushw
pop
add
jg
mov
mov
jmp
addr16
shl
mov
adc
pop
pusha
push
cmp
(bad)
pop
xor
jle
mov
hlt
into
outs
rol
retf
shl
shl
out
or
inc
jo
loopne
pusha
dec
and
push
mov
push
ror
xchg
es
test
lock
sub
push
or
sub
lock
add
cmp
ins
and
test
clc
or
add
xor
adc
push
stc
mov
cld
xchg
push
ins
add
jae
xchg
imul
push
retf
push
or
fbld
and
cmp
jne
sbb
push
fsubr
sub
div
retf
pop
cs
cmp
js
xor
pushf
push
add
stos
xchg
ror
test
cli
ja
mov
cmps
and
mov
lods
(bad)
not
and
mov
jg
inc
hlt
mov
lods
je
jb
push
push
jmp
sub
jbe
mov
sub
call
push
enter
inc
(bad)
mov
in
or
in
push
fstp
xor
outs
xchg
or
loope
mov
push
shl
cmp
jl
add
int3
aaa
outs
(bad)
push
pop
fbld
xchg
xchg
jmp
and
adc
pop
add
test
ret
mov
clc
jae
and
test
inc
add
jnp
cdq
shr
pop
loope
push
ins
lock
cmp
add
add
adc
or
daa
lds
das
outs
inc
addr16
jle
imul
mov
outs
shr
retf
jg
stos
pop
aad
cmp
pop
(bad)
mov
ret
jecxz
pusha
js
pusha
xchg
frstor
js
jecxz
or
cs
ins
int3
adc
adc
mov
scas
fsub
int3
xchg
clc
adc
mov
push
mov
push
xor
push
push
add
fstp
push
inc
inc
jb
ins
gs
or
mov
jg
adc
arpl
add
pop
mov
and
or
inc
(bad)
dec
pop
xor
adc
push
mov
lock
mov
mov
outs
pop
lds
lods
adc
and
add
js
gs
add
adc
xor
pop
inc
out
add
(bad)
mov
dec
sbb
test
movzx
push
pop
mov
or
adc
xor
lea
mov
in
mov
inc
mov
jg
cli
dec
jne
cmp
jbe
pushf
add
add
inc
adc
cmc
add
stc
mov
mov
dec
push
retf
mov
cmp
jbe
pusha
cmp
push
mov
inc
sbb
sbb
jecxz
pop
js
mov
int
push
sbb
push
push
ins
xor
in
jcxz
cli
stos
mov
add
test
fisubr
les
or
adc
sbb
inc
movs
jp
pop
adc
cmps
sub
jle
inc
push
xor
sbb
sti
pop
sti
push
and
push
mov
int3
push
jl
push
in
mov
mov
mov
xor
pop
mov
or
outs
push
popa
jb
aam
jo
in
bound
mov
loope
ins
retf
stos
or
rol
ds
sub
jae
je
loopne
(bad)
daa
sub
or
mov
cmps
pop
and
ja
or
in
jmp
cmps
cwde
fcomp
cmp
inc
or
push
inc
and
in
pop
out
push
and
mov
js
je
pop
or
or
cmp
mov
sbb
adc
sbb
add
dec
dec
addr16
dec
ret
shr
inc
mov
clc
inc
test
sbb
sbb
pop
sbb
pop
adc
dec
scas
mov
(bad)
push
cmps
inc
push
scas
adc
xor
and
push
movs
es
jns
lea
xor
mov
fadd
jnp
dec
xchg
or
jo
adc
out
pop
xchg
inc
jne
popw
and
add
je
and
test
(bad)
in
sub
jne
je
inc
xchg
imul
xor
inc
inc
dec
inc
pop
adc
pushf
mov
mov
dec
sbb
dec
out
push
fimul
dec
int3
jle
push
add
xchg
sub
inc
sti
or
or
sub
(bad)
movs
adc
cli
std
or
or
enter
ins
stos
sbb
inc
push
dec
outs
jns
or
or
xchg
jb
int3
loopne
sub
in
inc
and
or
add
inc
jecxz
push
or
cdq
ret
jae
or
aaa
sbb
dec
nop
jmp
sbb
daa
out
mov
jbe
jns
adc
int
(bad)
shl
stos
lahf
add
mov
ins
popf
mov
js
mov
or
inc
sub
scas
jmp
pop
ror
xlat
cmps
mov
push
xlat
add
movs
fisub
push
xor
adc
dec
sbb
mov
jl
in
jo
sub
cmp
push
push
pop
je
mov
fisub
shl
mov
add
cmp
sub
add
and
pop
lock
in
adc
ffreep
call
sbb
(bad)
pusha
add
sbb
test
ror
shl
arpl
push
(bad)
adc
mov
dec
and
add
pop
pop
pusha
and
mov
mov
xor
jmp
fwait
or
fs
test
je
data16
fcmovnb
inc
mov
jne
fnstenv
xchg
fild
call
test
sub
and
mov
pop
and
jbe
lds
pusha
clc
add
mov
cmp
add
jle
or
inc
cs
push
mov
dec
out
jle
pusha
jnp
and
dec
mov
cmp
mov
xchg
inc
cmp
jle
out
inc
sar
or
pusha
hlt
push
add
sbb
fiadd
mov
cmp
pop
push
iret
or
mov
push
fisttp
cmp
ret
jl
dec
and
push
add
xchg
cmps
sar
xor
sub
push
jl
jle
mov
in
jle
cmp
jge
mov
jmp
mov
mov
les
jae
add
sub
add
jmp
fbld
not
or
jg
cmp
test
dec
mov
fwait
jge
pushf
add
(bad)
es
xchg
das
xor
fadd
mov
aas
cwde
xchg
loopne
sub
clc
es
sub
aas
or
loopne
movs
and
out
cld
outs
add
dec
gs
ins
jne
push
std
aas
pop
std
jne
shl
in
cs
push
mov
push
jb
adc
lock
jb
add
stc
ror
dec
add
shr
add
add
add
push
or
or
inc
jns
inc
add
mov
xchg
and
out
rol
xchg
push
or
aas
lds
and
addr16
mov
cmc
iret
inc
add
adc
and
into
mov
mov
xlat
mov
mov
dec
lea
mov
pop
xchg
ret
mov
lods
loope
pop
das
lock
cmp
jo
mov
cmp
sub
sub
cmp
jge
fisttp
lods
xchg
xchg
test
sahf
xchg
leave
in
ficom
jno
or
cmp
jmp
push
push
ror
xchg
add
pop
sub
fxch
push
ins
dec
add
push
daa
jb
das
xor
jbe
cwde
push
xchg
pop
mov
xchg
cmps
scas
xor
xor
push
aaa
pop
(bad)
jmp
add
mov
clc
or
je
and
sbb
dec
adc
or
popa
mov
sbb
daa
or
out
fisub
or
(bad)
fisttp
fcmovbe
imul
sub
inc
or
cmc
test
aaa
into
shl
xor
fs
dec
push
sub
iret
in
push
dec
outs
mov
bound
dec
fdivr
or
xor
dec
push
mov
add
inc
mov
add
xchg
pop
mov
fiadd
stos
push
or
and
jge
ja
aaa
mov
(bad)
outs
movs
or
and
jp
mov
dec
and
or
pop
js
jle
out
mov
mov
(bad)
push
test
xor
inc
(bad)
mov
das
cli
push
mov
mov
ud1
pusha
movs
and
fld
sub
mov
(bad)
aaa
ret
and
loopne
push
or
mov
int3
xor
icebp
cld
cld
mov
mov
iret
(bad)
jmp
pushf
inc
add
mov
adc
mov
stos
and
sar
stos
les
push
inc
dec
fucomip
cmp
jae
sub
ja
rol
xchg
and
adc
enter
clc
test
jmp
xchg
adc
cli
add
jns
js
lods
movs
add
sar
ret
push
rcl
push
mov
jne
dec
adc
xor
stc
jne
dec
(bad)
ja
fcomp
and
or
mov
jmp
jl
call
adc
inc
out
and
fld
int3
test
dec
ret
out
int
stc
(bad)
les
pop
pop
pop
(bad)
jg
and
add
ror
and
cmp
and
aam
clc
ret
ret
adc
out
mov
inc
repz
mov
adc
retf
add
fmul
xor
out
adc
or
inc
stos
sub
sbb
mov
jmp
test
and
pop
mov
add
or
pushf
and
add
imul
mov
pop
or
inc
sar
sbb
or
bnd
clc
or
mov
mov
fnsave
mov
sbb
xchg
jg
lock
addr16
fwait
scas
test
in
enter
push
out
jne
es
sub
mov
or
push
cmp
rol
pop
inc
(bad)
cmp
lea
sbb
dec
add
in
sbb
fisubr
pusha
sub
arpl
adc
cmp
int3
pop
mov
stos
sub
inc
xor
or
daa
in
add
loopne
outs
add
je
cmp
iret
aas
fsubr
(bad)
cmp
dec
fdiv
and
cmp
xor
js
lods
loop
jne
into
and
mov
sub
aaa
div
pop
jl
adc
mov
mov
pop
loope
ins
xchg
aaa
or
lock
pushf
and
mov
mov
push
xor
pop
jl
ins
pop
jg
aas
lods
push
mov
sbb
lea
adc
inc
addr16
mov
sbb
adc
sbb
or
sub
xchg
ret
popa
or
add
dec
fist
sub
jmp
lea
cmp
movs
lea
nop
dec
loope
call
pop
dec
cmc
add
repnz
pop
sahf
call
jne
fsubr
mov
inc
lea
mov
rcl
adc
inc
(bad)
xchg
iret
popf
test
sub
sbb
xchg
imul
lods
ret
aam
mov
iret
pushf
cmps
mov
out
popf
js
call
rol
jae
sbb
es
idiv
xor
inc
iret
sbb
mov
and
jb
fsubr
test
lea
and
xchg
jge
pop
loopne
call
sbb
adc
xor
sub
mov
push
or
and
scas
enter
test
jp
div
xchg
enter
test
or
scas
retf
(bad)
and
mov
sub
pusha
loop
push
mov
not
inc
stos
enter
fidiv
shl
int3
das
lock
push
jl
inc
push
cmps
jg
std
mov
cmp
jge
test
jmp
fnstsw
inc
mov
inc
mov
fucom
pop
imul
retf
cmp
jg
cmp
cmps
and
cli
sbb
bound
jle
ror
clc
scas
push
scas
and
push
sbb
or
sub
sub
sahf
shl
jo
sub
aam
fadd
and
mov
in
jge
pop
pop
mov
or
fsubr
dec
fwait
dec
sub
jmp
ret
fwait
add
mov
sbb
popf
mov
xchg
pusha
jo
cmp
sub
add
add
or
xor
dec
test
das
sbb
(bad)
mov
ret
jmp
aas
push
in
dec
and
mov
jp
or
cmp
(bad)
out
mov
or
jae
inc
jb
popa
jns
jge
jge
arpl
inc
add
inc
adc
jbe
or
push
movs
lock
add
ins
addr16
xor
das
cmp
or
sub
je
in
add
xor
sbb
mov
ins
push
add
ins
sbb
xor
push
and
sbb
stc
xchg
mov
and
std
jne
add
sub
or
loope
jg
add
lds
sbb
movs
stc
mov
in
inc
lods
popa
jb
inc
add
enter
dec
outs
jae
jb
dec
add
jbe
outs
rol
dec
gs
or
outs
fs
stc
(bad)
or
or
adc
pop
test
add
ja
mov
shr
xor
mov
mov
ret
mov
cdq
ins
jp
sub
data16
push
(bad)
push
ret
rcr
adc
ror
add
adc
test
push
je
ret
mov
jae
push
add
outs
fbld
mov
les
sar
jmp
xchg
pusha
mov
jmp
bound
jbe
xchg
je
movsx
push
add
sar
cmp
out
and
movs
addr16
cmp
or
inc
mov
call
push
mov
mov
dec
push
mov
add
je
cmp
jne
xor
mov
and
es
fmul
data16
dec
push
adc
pop
push
and
inc
movs
lahf
ror
jmp
mov
push
dec
or
add
push
fs
add
test
sahf
(bad)
xlat
outs
mov
test
setae
pop
xlat
add
loop
dec
popa
js
mov
fmul
push
xchg
add
popf
jecxz
imul
int3
pop
inc
imul
jg
cmps
(bad)
fs
and
push
dec
imul
cli
mov
inc
pop
retf
hlt
push
or
bound
rol
loopne
cmp
inc
push
add
xor
inc
aas
add
adc
mov
or
sahf
into
jge
or
jne
jo
inc
jne
imul
xor
in
sub
iret
cmp
inc
inc
sar
ror
iret
sub
and
imul
push
cs
and
in
inc
mov
jmp
inc
sbb
daa
pop
sbb
xlat
dec
es
sti
fdivr
add
sbb
sbb
xor
in
add
jle
lods
and
mov
or
cmp
arpl
les
jno
scas
or
or
gs
cmc
jne
sti
test
xlat
sbb
ja
or
lahf
dec
ins
push
jae
pop
add
pusha
adc
or
lds
arpl
or
inc
(bad)
in
mov
mov
adc
cmps
pop
jne
push
and
or
mov
test
imul
mov
mov
pusha
daa
lds
pop
pop
jg
jbe
rcl
loop
test
ror
std
xor
add
add
pop
movzx
and
sbb
imul
jo
imul
imul
lfs
jge
test
cmp
jne
dec
add
add
neg
mov
pop
push
inc
mov
call
mov
push
push
jl
dec
push
cmp
pop
imul
xor
push
push
or
jmp
ins
aad
dec
je
add
jmp
js
or
push
cmp
jl
inc
enter
(bad)
sbb
jmp
das
sub
jmp
cs
adc
in
adc
jmp
cs
bswap
adc
scas
fiadd
push
sub
dec
push
inc
data16
mov
mov
add
scas
shl
mov
cld
mov
sub
xchg
int3
xor
ret
push
pop
repz
cld
hlt
push
adc
sub
cmp
mov
ja
adc
adc
inc
outs
mov
nop
push
call
xchg
in
aam
mov
in
mov
leave
or
aaa
mov
xchg
jns
lods
mov
fs
cmp
dec
test
mov
nop
sub
dec
rcpps
inc
movs
cld
ss
jb
sub
xor
je
jg
fs
push
jmp
sbb
push
daa
sub
popa
push
addps
xchg
cwde
ins
or
test
sub
out
dec
or
push
or
or
push
inc
cwde
pop
je
adc
push
jae
push
pop
scas
loop
push
or
dec
sbb
imul
pop
popa
out
fst
(bad)
out
les
inc
nop
mov
add
and
or
rol
dec
clc
pop
stos
aaa
sahf
ja
out
les
push
push
ins
call
pusha
aaa
clc
sbb
pop
lods
push
js
faddp
aad
pop
jbe
adc
push
dec
movs
push
(bad)
and
inc
gs
xchg
ret
push
push
push
mov
ror
push
or
push
out
sub
or
xor
lods
push
cmp
sub
jp
scas
(bad)
daa
xchg
cmp
jg
cmp
scas
adc
sbb
ins
mov
mov
xor
mov
and
or
cmps
movs
ss
dec
push
jmp
xchg
ret
out
lods
push
call
push
xchg
or
inc
data16
bound
bound
cmp
adc
add
icebp
sbb
fs
xor
inc
nop
lods
sbb
pushf
mov
xchg
(bad)
cmps
pusha
sub
xor
fild
adc
mov
repnz
lock
mov
popf
mov
mov
hlt
addr16
mov
inc
sub
jo
shl
ret
or
outs
pusha
or
jo
clc
data16
es
and
jmp
inc
sub
pop
fs
inc
mov
cmp
jge
inc
cmps
shr
mov
bound
test
push
popf
mov
sahf
test
scas
inc
fabs
mov
out
xchg
icebp
lock
call
enter
adc
inc
jmp
pusha
cwde
xchg
ins
test
inc
or
(bad)
clc
test
ins
int3
not
mov
or
(bad)
retf
mov
sub
jmp
xchg
inc
mov
fiadd
sub
sub
inc
ret
scas
enter
push
cmp
sub
xor
xor
mov
arpl
sbb
cli
rcl
jl
push
ret
mov
(bad)
xor
xor
pop
(bad)
cmp
xchg
iret
add
or
push
jge
jbe
or
in
aam
add
mov
push
or
sbb
cmp
dec
ds
lahf
rcl
jl
clc
and
inc
(bad)
mov
and
push
hlt
cmp
pop
call
or
cli
mov
jo
xchg
nop
aaa
fcom
mov
scas
test
mov
push
xchg
or
xchg
jmp
jmp
or
int3
jmp
jmp
mov
mov
cmp
and
push
popf
jne
mov
enter
sub
mov
hlt
cmp
dec
and
retf
xchg
je
adc
(bad)
pop
and
add
je
jl
cmp
inc
sbb
pop
out
pusha
(bad)
adc
mov
fdiv
data16
and
repz
fs
clc
test
std
push
dec
stc
pop
lods
or
call
stc
(bad)
scas
daa
sbb
or
into
or
sub
mov
xchg
js
and
mov
daa
pop
sub
and
pop
sahf
lods
or
sub
inc
sub
mov
or
adc
adc
pop
cmps
jbe
or
or
adc
push
pop
mov
fsub
hlt
push
cmp
ins
mov
push
and
ror
aam
outs
sub
inc
cs
mov
das
inc
jbe
inc
push
jbe
fs
mov
pop
loopne
rcr
mov
or
jae
inc
pop
movs
sub
cmp
push
pop
loope
je
push
je
push
inc
adc
inc
loopne
or
je
rcl
adc
pop
mov
push
test
add
pop
std
pop
pop
pop
bound
jno
pop
jmp
cld
push
jmp
je
sbb
adc
pop
call
jno
mov
mov
js
cmp
jle
(bad)
mov
call
test
gs
dec
sar
adc
lock
out
jnp
push
add
sahf
pop
push
call
add
mov
out
jecxz
cld
xchg
mov
outs
adc
comiss
and
add
cmp
push
xor
neg
mov
push
in
(bad)
adc
adc
(bad)
push
add
out
test
je
lea
mov
xor
xor
dec
(bad)
hlt
push
fcomi
add
test
push
sub
xchg
inc
movzx
inc
sub
scas
or
and
sbb
inc
mov
and
pop
sbb
xlat
cmp
sbb
add
mov
pop
setne
aas
push
xadd
shl
pop
shr
dec
xchg
in
xchg
clc
(bad)
cmp
push
fsub
cwde
jle
push
sub
or
ja
out
pop
cmps
daa
adc
in
fsub
fs
or
push
(bad)
int
mov
xor
adc
cmp
sub
pop
sub
or
push
inc
lods
cmp
aas
ror
fwait
mov
lahf
lea
xchg
(bad)
or
pusha
xor
movs
inc
add
call
imul
cmp
fcomp
push
js
add
push
cmp
add
loopne
enter
cs
data16
pop
cmp
mov
sub
jl
cmp
jmp
retf
cmp
(bad)
or
std
dec
mov
mov
dec
sbb
sbb
adc
cmp
fiadd
sub
lock
xchg
xor
test
push
pop
xor
fist
dec
clc
dec
adc
adc
ja
xor
mov
js
aad
pop
cmp
cmp
jg
sbb
dec
mov
mov
adc
test
push
fadd
fstp
push
inc
imul
jne
cmp
pop
push
(bad)
inc
dec
pop
mov
sbb
lea
data16
(bad)
scas
les
mov
mov
push
xor
push
push
fcom
fistp
add
fdivr
js
push
inc
mov
and
mov
mov
retf
xadd
add
mov
loop
out
add
shr
stos
(bad)
fsubp
pop
cmp
push
mov
sub
pop
xchg
cmp
sbb
imul
and
add
mov
dec
push
xchg
adc
sahf
mov
rcr
or
les
inc
lds
adc
fimul
aam
int3
(bad)
mov
or
test
jle
inc
push
div
pusha
and
loope
jne
in
push
sbb
add
inc
inc
mov
loop
ja
sbb
lods
mov
nop
and
js
sub
shl
out
lock
cmp
leave
in
mov
dec
add
jne
int3
xorps
sahf
dec
sub
push
add
push
xchg
ret
add
repnz
pusha
inc
or
les
lods
mov
jmp
jg
or
enter
cmp
(bad)
rcr
jne
add
jle
ror
or
jmp
ins
int3
adc
adc
push
adc
fidivr
call
dec
or
ins
pop
out
shr
and
cwde
iret
in
lods
shl
inc
jmp
shl
pop
add
sar
dec
inc
pop
pusha
dec
adc
dec
xor
and
pop
push
loopne
xor
xor
mov
and
dec
int3
call
stos
jo
adc
and
ss
jge
loopne
pop
xor
or
je
aam
add
pop
loope
je
imul
jge
adc
pop
clc
cmp
sub
push
push
jmp
aam
mov
mov
lods
sbb
cmp
rcr
in
in
jl
fxch
sub
xor
xlat
add
cmp
sub
push
push
adc
rcl
aaa
mov
cmp
leave
leave
mov
test
and
sbb
sbb
adc
push
xor
movs
rol
mov
xor
or
sbb
out
cmp
mov
and
jmp
add
call
cmp
adc
adc
fmul
push
in
cmp
or
jmp
fild
imul
and
je
mov
div
or
popa
lock
xchg
nop
add
clc
mov
pop
sbb
add
nop
sbb
mov
mov
and
sub
add
push
data16
push
jp
mov
jne
or
fdiv
mov
test
jne
push
mov
bound
jne
or
dec
scas
push
cwde
jmp
pop
popa
ja
retf
cdq
or
adc
jne
dec
je
fcom
mov
(bad)
push
inc
adc
mov
int3
or
ficom
int3
mov
dec
cld
sub
mov
fstp
leave
add
movs
mov
mov
cmp
ja
rcr
call
jp
(bad)
mov
ficomp
pop
fwait
cmps
shl
inc
icebp
cmps
or
outs
mov
mov
cmps
dec
push
ins
les
jmp
xor
cmp
add
js
cmp
(bad)
hlt
fld
fstp
add
dec
loopne
sub
adc
fmul
dec
sbb
cmps
mov
fst
jmp
movs
shl
lea
push
test
sbb
sub
sbb
sahf
pusha
mov
push
xor
and
push
in
inc
(bad)
pusha
ret
mov
sub
and
cmp
cmp
mov
or
cwde
push
mov
pop
lds
add
inc
add
outs
inc
jbe
pop
xchg
sub
fsub
mov
push
or
push
mov
jl
mov
cmp
fbstp
sbb
sub
xor
clc
mov
push
test
mov
add
lock
or
and
scas
mov
xchg
je
xchg
and
lock
mov
jp
pop
test
sbb
adc
outs
clc
and
lods
mov
and
lock
cmp
jae
cmp
adc
clc
jl
cld
push
push
push
cmp
das
sub
int3
dec
pop
retf
(bad)
bound
jg
inc
xor
pop
jmp
stos
(bad)
aaa
or
sub
ret
jle
push
or
mov
enter
or
sbb
aas
add
push
aaa
sti
mov
adc
and
das
dec
rol
sar
or
fmul
pop
test
(bad)
sub
push
push
iret
out
xor
sbb
cmp
enter
pop
and
fs
stc
je
shl
ror
xchg
mov
pop
fisttp
clc
hlt
sub
mov
jne
aam
ror
mov
sub
(bad)
add
adc
xchg
inc
push
cmovle
addr16
or
(bad)
clc
pop
sbb
(bad)
xchg
push
clc
push
daa
push
jae
jnp
sub
cmp
movs
sub
idiv
xor
jmp
push
mov
cmp
rcl
sub
or
mov
idiv
(bad)
mov
dec
cmp
pop
push
mov
in
je
push
sub
ja
arpl
lock
mov
loopne
xor
cmp
ror
ret
mov
or
fld
pop
dec
jno
ja
jb
sub
adc
xchg
mov
sbb
daa
push
push
or
dec
and
test
push
adc
pop
stos
add
or
ret
adc
je
or
or
pusha
cmp
pop
mov
mov
mov
addr16
cmps
mov
ret
js
push
out
dec
dec
adc
cmps
mov
(bad)
test
int3
inc
pop
ds
sub
push
or
jmp
mov
out
stc
cmp
je
aas
test
add
rcl
int
cld
push
cs
fimul
adc
retf
into
mov
xchg
scas
fld
fistp
pop
cmp
push
sub
sbb
ja
xchg
outs
call
inc
mov
adc
or
mov
jae
mov
mov
mov
lock
dec
mov
cmps
arpl
sar
or
sbb
sbb
sar
scas
xor
pop
push
xor
clc
or
mov
sub
pop
test
push
adc
inc
jne
adc
mov
lea
mov
or
cmp
sahf
or
lahf
xor
push
add
cmp
lds
das
outs
or
sbb
test
add
jg
aas
cdq
out
pop
sub
cmp
test
pop
pop
or
movs
adc
test
cmp
(bad)
scas
or
dec
sub
inc
adc
add
out
aaa
ins
cmp
sub
iret
cmp
add
retf
lods
pop
add
loop
push
pop
enter
es
sub
jo
mov
add
cmp
add
pop
or
add
out
ret
sub
pop
push
sub
mov
cmp
add
inc
push
mov
and
mov
inc
jl
sbb
lock
mov
adc
xchg
mov
iret
das
xchg
adc
stos
js
je
jecxz
push
stos
xchg
xchg
hlt
repnz
aam
jmp
xor
cmp
push
push
hlt
pop
lods
pop
xlat
jo
cmps
xor
xor
lahf
dec
jg
mov
shl
fist
xchg
adc
xor
test
and
(bad)
mov
rcr
or
or
dec
mov
mov
sub
sbb
xchg
and
int3
or
mov
push
arpl
addr16
jmp
dec
jecxz
and
int
aas
data16
sbb
inc
pop
arpl
mov
xor
dec
lock
jne
cmp
push
sbb
sbb
adc
or
mov
add
pusha
cmp
ret
test
fisttp
es
clc
xchg
add
cmps
mov
mov
dec
mov
in
add
mov
clc
inc
dec
test
add
push
pop
imul
xchg
jns
jp
inc
sbb
test
jle
cmp
ja
mov
sub
les
jg
dec
sbb
jecxz
dec
ss
cmp
inc
or
adc
(bad)
mov
orps
jecxz
add
adc
push
loope
loope
dec
xchg
loopne
(bad)
out
mov
cld
in
pop
inc
sbb
imul
or
repz
loopne
push
shl
outs
sbb
or
and
test
jne
fisubr
and
pop
or
adc
inc
dec
jne
jmp
clc
cmp
test
add
sub
jo
pop
dec
inc
retf
xor
xchg
scas
loopne
sbb
and
push
data16
xchg
hlt
inc
add
cmp
push
xor
loopne
fimul
or
outs
pop
jnp
outs
test
pop
dec
sub
leave
jle
into
or
dec
push
push
inc
mov
shr
jge
jo
sti
lock
add
pusha
dec
dec
dec
jg
into
mov
sbb
hlt
fwait
jae
mov
adc
sbb
loopne
or
adc
ret
mov
push
int3
jnp
jmp
mov
inc
add
cmp
jne
push
dec
pop
cmp
fs
push
sub
imul
push
sbb
imul
imul
jo
dec
test
or
and
inc
test
in
(bad)
inc
mov
dec
lods
push
push
lds
inc
popa
xchg
movs
adc
ins
mov
jge
repnz
cmp
pop
mov
dec
cmp
jne
inc
es
ss
fs
data16
push
imul
in
push
adc
inc
(bad)
lods
hlt
out
add
add
xchg
call
push
sti
les
pop
ins
push
xchg
sub
jne
xor
lea
lock
jle
pop
adc
xchg
mov
sbb
xor
xlat
sub
mov
and
ror
addr16
xor
sbb
inc
popw
xor
and
into
pop
push
aam
ret
jns
lock
adc
jbe
jle
dec
or
scas
fnstenv
xchg
fimul
fistp
loopne
jo
xlat
loop
push
clc
lock
push
or
fiadd
adc
fcom
fbld
dec
sar
inc
repz
mov
out
and
and
icebp
fidiv
shr
outs
int
jmp
stc
adc
in
inc
pop
sbb
cmc
pop
or
aam
vmlaunch
pop
xor
rol
or
fimul
jmp
xchg
dec
dec
jns
mov
in
jne
jmp
call
inc
lds
inc
je
add
pushf
pop
clc
mov
lea
ja
imul
je
lds
in
les
jmp
daa
inc
lock
movs
fst
mov
pop
inc
sub
pop
mov
push
dec
adc
in
loopne
pop
pushf
nop
loop
inc
mov
aam
push
inc
xor
je
mov
sbb
mov
cmp
in
pushf
xchg
sbb
ins
fadd
(bad)
call
inc
push
mov
adc
or
sub
sub
lock
aaa
jb
add
and
add
pop
and
jae
(bad)
mov
or
and
and
pop
push
pop
daa
mov
vrcpps
sti
iret
cmp
imul
std
fidivr
push
mov
ds
pusha
mov
cmp
sub
mov
inc
add
xchg
adc
inc
adc
push
(bad)
movs
dec
ret
fistp
add
test
sub
add
push
push
xor
mov
mov
jo
and
xchg
aad
adc
dec
div
cmp
idiv
outs
add
loopne
xor
push
(bad)
adc
test
push
xor
add
cmp
xchg
sbb
push
and
lods
ins
fwait
cmps
xchg
sub
data16
pushw
sub
inc
sbb
mov
ret
hlt
cmp
addr16
inc
mov
xor
add
inc
lods
cmps
sbb
dec
inc
cmp
ror
in
xchg
sbb
in
and
xor
movs
adc
out
dec
push
jmp
dec
mov
ins
ins
fadd
xchg
out
hlt
sbb
and
cmp
mov
and
cli
(bad)
int3
cmp
test
xchg
pop
sbb
mov
icebp
jge
push
out
imul
adc
test
cmp
lods
sub
enter
sub
je
or
push
clc
cmc
add
adc
add
or
jmp
sti
or
je
mov
dec
lock
jmp
pushf
cmp
xchg
ja
ret
mov
mov
(bad)
xor
mov
or
aam
mov
mov
mov
or
cld
addr16
gs
push
sbb
stos
pushf
add
dec
inc
jns
and
stos
shl
sbb
or
cmp
aam
(bad)
pop
mov
sub
jb
sub
je
push
xor
lock
outs
dec
or
inc
pop
mov
dec
dec
outs
pop
sbb
or
mov
pop
jmp
adc
imul
sub
xor
mov
rol
sub
jb
jo
popa
mov
mov
xor
sbb
push
add
jno
inc
out
sub
sbb
push
out
and
call
ja
jo
pop
sub
les
cmp
jmp
or
fadd
sbb
pop
fnstenv
xchg
xchg
jmp
test
in
in
sbb
mov
inc
or
int3
pop
loop
mov
inc
cs
in
call
dec
xchg
push
bnd
mov
fcomp
je
je
mov
arpl
add
add
push
mov
jmp
(bad)
jae
xor
jbe
int3
jmp
jae
in
outs
and
jae
jmp
aaa
cmps
jae
fs
loopne
push
push
and
push
fst
mov
lds
aaa
sub
pop
(bad)
fild
cmp
mov
loopne
mov
xchg
aam
and
in
test
or
aam
mov
pop
mov
js
int
mov
(bad)
jnp
out
push
push
mov
mov
pop
mov
and
or
cmp
xchg
test
sub
sub
popf
adc
adc
hlt
rol
daa
pop
sub
push
or
pop
das
sub
jne
(bad)
loopne
ds
push
imul
push
sbb
and
or
adc
xor
push
clc
loope
add
fldenv
mov
add
pop
aam
sub
std
xor
ret
mov
and
or
ja
xchg
dec
push
xlat
pop
xlat
xchg
fcom
(bad)
popa
xor
pop
cmp
rcl
push
mov
pop
push
sub
call
push
rol
call
loopne
dec
daa
jne
mov
add
mov
xchg
xchg
pop
test
or
pop
sbb
and
mov
mov
inc
jmp
es
mov
sbb
add
add
test
push
sub
ins
xor
add
(bad)
xchg
fsubr
loopne
ds
loope
jnp
xchg
jmp
xchg
dec
jnp
retf
cmp
and
cmp
repz
push
pop
lock
mov
inc
xchg
add
add
arpl
arpl
inc
mov
mov
mov
gs
push
mov
fcom
sub
xchg
js
mov
je
loope
lock
mov
sbb
sub
jnp
or
mov
fisubr
ins
nop
jmp
add
popf
jecxz
cli
icebp
cli
cwde
pop
or
daa
push
and
xlat
mov
mov
loopne
in
jmp
daa
lea
ss
and
in
sub
push
sbb
adc
adc
bound
jge
mov
cmp
sbb
movs
xchg
adc
jmp
adc
fucomi
ret
and
mov
mov
xlat
mov
mov
mov
mov
push
out
neg
mov
sub
sar
in
jmp
add
daa
add
hlt
add
add
cmp
pop
(bad)
dec
mov
sbb
stc
mov
push
mov
xor
test
xor
or
adc
lds
mov
or
and
dec
add
loope
cmp
push
(bad)
mov
add
dec
sbb
sub
pop
push
outs
fst
test
pop
jmp
dec
fdiv
nop
call
imul
or
xchg
inc
xor
cdq
pop
ror
arpl
mov
sbb
or
sub
mov
call
cmp
cmp
xchg
or
sbb
push
jle
sbb
xchg
leave
mov
sbb
mov
lea
movs
add
(bad)
ss
sub
push
or
mov
int
mov
push
adc
or
cmp
sbb
mov
add
jns
xor
daa
or
out
fiadd
bound
loope
xor
jae
sbb
or
icebp
adc
mov
loopne
imul
xor
call
inc
test
add
ds
out
test
sbb
adc
jg
std
mov
jmp
mov
ins
test
jl
inc
mov
mov
fcmovnu
(bad)
popf
mov
cmp
xor
jmp
inc
dec
jne
sahf
add
(bad)
(bad)
inc
xchg
jg
and
xor
dec
sbb
xor
int3
sahf
enter
mov
mov
je
xchg
and
mov
les
xchg
or
jle
hlt
xchg
ror
sahf
inc
mov
jle
fcomp
test
ja
xor
sbb
mov
(bad)
loopne
inc
and
xchg
data16
inc
or
pop
pushf
inc
jb
(bad)
cmp
mov
movzx
mov
jmp
sbb
lods
pop
pop
xchg
push
add
sbb
icebp
inc
jo
imul
sbb
adc
adc
pop
xchg
mov
sbb
or
lock
jo
ret
cmp
xor
push
sbb
test
and
out
cmps
cmp
(bad)
mov
pop
push
pop
or
mov
and
jnp
clc
pusha
in
lods
inc
xchg
scas
or
inc
and
sub
dec
daa
test
or
pop
and
adc
xor
push
and
jno
jbe
inc
or
daa
jbe
or
xor
cmc
push
outs
data16
adc
sbb
push
call
clc
bound
push
pop
add
int3
adc
std
pop
mov
cmp
pushf
mov
jmp
adc
pop
loopne
lock
arpl
xor
shl
jmp
and
or
xor
dec
mov
jne
das
lds
lock
jmp
inc
dec
jne
cmp
xchg
data16
pop
mov
jno
jne
dec
clc
and
push
aas
jecxz
push
pop
sub
mov
push
push
jge
mov
mov
jbe
dec
xor
pop
(bad)
xor
inc
push
adc
(bad)
sub
jb
cmps
ror
jle
or
inc
movs
adc
(bad)
ror
mov
inc
rcl
push
xor
shl
loopne
out
(bad)
enter
iret
test
cmp
fucompp
pop
mov
test
(bad)
mov
jge
add
mov
cmps
out
inc
retf
(bad)
daa
mov
sub
call
test
push
add
and
xchg
push
mov
jg
or
mov
mov
xor
xor
fmul
jne
jecxz
sub
xchg
fnsave
repz
fcomp
add
xchg
xor
add
imul
push
mov
jo
je
jne
push
lods
adc
pop
xchg
or
out
je
les
dec
jne
shl
adc
sub
add
adc
push
add
add
and
fmul
add
and
clc
shl
jno
clc
pop
mov
dec
into
out
mov
inc
inc
dec
jne
jmp
push
sbb
add
adc
cmp
xor
inc
push
adc
adc
fist
cwde
add
in
hlt
inc
rcl
repnz
(bad)
mov
cmps
fwait
aas
test
add
inc
mov
pop
push
call
xchg
add
call
cmp
inc
clc
je
pusha
fs
inc
xlat
(bad)
lock
call
loopne
or
shl
mov
xchg
jl
mov
retf
adc
xchg
rcl
popa
or
les
sub
xor
cmp
add
cmp
push
adc
test
aas
(bad)
ror
push
and
movs
cmp
imul
jle
sub
mov
push
inc
(bad)
(bad)
data16
pusha
test
add
inc
add
call
push
dec
add
push
inc
push
or
maskmovq
call
push
inc
js
outs
jae
outs
outs
dec
imul
pop
xor
sti
push
inc
jb
popa
sub
add
pop
xor
cmp
push
gs
retfw
icebp
pop
aas
pop
mov
inc
gs
jb
jns
inc
add
inc
fs
dec
enter
add
adc
fadd
gs
popa
bound
push
add
mov
out
out
fwait
or
inc
ins
popa
jae
test
add
fs
mov
add
or
mov
ins
push
push
gs
outs
jbe
imul
pop
xchg
imul
pop
sub
rcr
xlat
mov
push
arpl
ins
popa
sbb
inc
dec
inc
adc
mov
add
cmp
js
aad
popa
add
jne
fcmovbe
aad
inc
pop
(bad)
add
(bad)
imul
in
pop
out
(bad)
ins
sbb
sahf
(bad)
push
call
jmp
into
pop
in
je
(bad)
js
or
jbe
fs
nop
pop
les
sub
mov
push
popa
outs
or
adc
clc
out
or
out
cmp
add
mov
and
daa
xor
mov
jle
adc
or
ror
jmp
imul
add
cmp
push
push
aas
test
dec
mov
dec
cmp
call
into
cmp
jne
mov
jmp
jmp
dec
dec
movs
jne
pop
(bad)
pop
adc
in
pop
inc
pop
or
sti
pop
and
pop
in
fimul
cmp
jne
aaa
and
hlt
inc
jo
scas
ja
add
dec
daa
jne
inc
jne
xcrypt-cbc
cmps
aam
adc
mov
call
or
or
mov
pop
icebp
sbb
mov
in
mov
shr
or
test
push
aas
and
aam
mov
das
xor
add
adc
or
cmp
je
mov
and
int
les
dec
cdq
push
push
fwait
lods
cmp
pop
mov
pop
push
out
test
cmc
icebp
mov
push
popa
shr
jo
mov
popa
pop
mov
push
pushf
cmp
cdq
adc
jo
mov
in
pushf
je
ja
jbe
loop
jbe
mov
mov
and
mov
pop
inc
rcr
cmp
pop
cmps
or
mov
cmp
mov
and
or
sub
xchg
sub
push
ja
pop
loopne
add
sbb
and
cwde
cmc
pop
data16
push
cmp
mov
add
add
aam
sbb
jae
mov
in
cld
inc
retf
rol
popa
rol
add
rol
pop
xchg
fimul
cmp
(bad)
adc
loopne
and
xor
sub
and
xor
mov
xchg
out
shl
sbb
cmp
enter
sbb
cs
(bad)
mov
cmp
fldlg2
and
fcom
cmp
shl
xchg
ja
fisttp
in
add
repz
jmp
movs
mov
push
or
inc
outs
pop
clc
inc
adc
adc
and
js
ror
scas
push
mov
cmp
cmps
loope
add
test
cmp
cmp
xor
cmp
inc
cmp
mov
mov
xlat
inc
sbb
sbb
stc
cmps
or
sub
clc
inc
or
xchg
ror
fcom
or
fcmovnb
xchg
aad
cmps
hlt
adc
and
das
xor
jo
mov
fstp
add
or
push
gs
shl
das
loope
pushf
mov
shl
(bad)
mov
ret
add
or
adc
inc
mov
jp
in
sar
and
ins
aas
jne
and
cs
xor
sar
sub
and
je
inc
ss
aas
xor
sbb
push
push
cs
pop
or
push
or
out
bound
mov
aas
cmp
mov
add
rcr
add
and
push
aaa
jge
mul
es
cmp
call
and
or
mov
(bad)
mov
mov
dec
jecxz
pop
vandps
ins
or
push
adc
or
test
pop
inc
imul
int3
nop
xor
bound
cmp
or
shl
loopne
mov
sbb
jge
jl
es
adc
adc
es
out
sbb
sbb
cmp
mov
push
idiv
and
movs
mov
(bad)
push
sbb
shl
sbb
mov
pop
sbb
cmps
shl
pop
aad
mov
push
adc
cwde
lock
popa
pop
cwde
pop
dec
cmp
push
cwde
push
push
and
xor
cmovno
jo
(bad)
scas
mov
dec
xchg
xchg
jns
mov
sbb
(bad)
outs
mov
jo
pop
sub
pop
push
push
nop
pop
adc
add
ins
cmp
sbb
push
fidivr
mov
fbstp
xor
adc
jo
test
lds
sbb
bound
dec
fsub
(bad)
stc
inc
add
push
lock
ds
jmp
dec
fs
bound
icebp
sub
in
xor
shl
inc
js
(bad)
sbb
or
xchg
aam
and
in
pop
sub
jge
fdiv
inc
mov
out
repz
or
inc
loope
and
sbb
mov
test
std
fnstsw
cmp
movs
movs
movs
movs
mov
mov
mov
mov
ins
outs
adc
pushw
or
or
push
inc
mov
cld
or
(bad)
cld
arpl
fdiv
lahf
cmp
jg
and
sub
inc
add
fist
jae
push
jmp
push
xor
add
popf
aas
ds
pusha
js
and
out
add
jne
loopne
mov
inc
jnp
cld
dec
fld
sbb
retf
sub
std
cwde
add
arpl
inc
into
sbb
ret
into
pop
add
cmp
lea
mov
sub
push
or
jl
or
xor
xor
xchg
cmp
pop
mov
xor
jmp
movzx
or
dec
popa
inc
or
mov
enter
iret
lods
push
add
mov
jmp
cmp
cwde
push
and
fisub
test
jne
test
test
sahf
iret
xlat
push
rcl
xor
mov
adc
lds
js
xor
mov
sbb
adc
and
adc
push
adc
sbb
pop
ret
xor
jo
(bad)
mov
lock
and
lea
stos
add
dec
das
daa
push
jae
adc
daa
or
hlt
out
lea
aaa
xor
jae
xchg
pushf
or
scas
loopne
cli
adc
jle
cmp
out
adc
cmps
sbb
mov
inc
and
cmp
lock
xchg
aas
ins
ret
jmp
or
xchg
add
pop
add
ret
push
sub
and
push
dec
enter
or
or
mov
inc
dec
shl
inc
in
lea
icebp
cmp
xchg
inc
retf
mov
jbe
jge
loop
lea
(bad)
mul
or
cld
sar
push
or
lea
sub
mov
in
xchg
shl
sub
(bad)
loopne
push
xchg
or
fwait
popf
push
(bad)
pusha
lea
stc
shr
clc
adc
add
push
mov
clc
mov
sbb
inc
or
dec
daa
xchg
or
(bad)
push
aaa
rol
lods
das
(bad)
fsubr
adc
scas
call
gs
dec
push
or
in
mov
or
(bad)
adc
adc
sub
pop
mov
div
or
push
rcr
sub
sbb
std
add
mov
xchg
adc
pop
inc
jecxz
xchg
pusha
hlt
sub
pushf
add
sub
pop
or
fstp
jmp
mov
jb
sub
jne
jle
xor
or
cmps
hlt
sub
or
and
inc
and
and
scas
rcr
jmp
cmp
test
out
sbb
cwde
lods
dec
mov
sbb
sbb
es
dec
jmp
jmp
stos
jl
sub
int3
lods
push
sub
and
ins
and
sub
xchg
push
idiv
fimul
pusha
aaa
cmovae
sbb
push
or
pop
out
xchg
test
jnp
xchg
not
out
sbb
mov
jl
mov
dec
add
inc
jbe
inc
hlt
dec
adc
das
popf
or
aas
lock
mov
ja
stc
sub
adc
fs
adc
and
sar
pop
dec
je
add
jmp
cmp
inc
hlt
mov
sbb
movs
inc
cmp
push
imul
das
pusha
add
sbb
popa
jmp
call
jmp
inc
rol
stos
push
aad
(bad)
lock
movntps
mov
pop
or
mov
(bad)
xor
icebp
pusha
(bad)
leave
ja
push
or
ja
adc
xor
mov
enter
add
or
jnp
pop
add
add
maxps
and
jp
or
adc
or
aas
mov
jmp
pop
sub
push
iret
mov
mov
mov
stos
xchg
aad
in
sub
leave
clc
cli
jg
inc
xor
dec
retf
mov
push
push
mov
push
sub
add
sub
pop
call
repnz
xor
sbb
out
mov
test
xchg
mov
shl
std
jmp
jae
push
push
add
inc
(bad)
sar
es
sbb
lds
push
jle
mov
sub
fwait
mov
cmp
ret
xchg
sbb
rol
jmp
push
push
rol
ins
xchg
push
lds
pop
or
(bad)
loope
or
mov
lods
xchg
cmps
jbe
mov
mov
cmp
xor
push
inc
shl
retf
sbb
movs
jl
inc
(bad)
es
cdq
xor
(bad)
lea
xor
inc
dec
clc
jne
mov
or
loopne
push
jbe
sbb
xchg
sub
dec
jo
imul
je
jns
es
push
or
jmp
inc
outs
ins
outs
jb
arpl
loopne
pushf
test
add
gs
mov
sbb
and
clc
fistp
push
push
popa
ins
gs
mov
cmp
push
(bad)
add
into
or
jne
and
shr
ins
fs
outs
fs
daa
mov
jb
(bad)
es
gs
mov
jno
mov
push
add
std
sub
jo
imul
push
ret
addr16
push
pop
adc
pop
cmp
sub
or
cwde
call
loopne
cmp
xor
sbb
pop
adc
and
(bad)
je
sti
retf
pop
cwde
int
push
dec
or
xchg
mov
sub
pusha
sub
jo
inc
sbb
sub
and
dec
popa
jo
adc
pop
push
cmp
add
or
mov
sbb
outs
dec
adc
sahf
adc
push
icebp
cwde
push
cmp
push
cmp
or
push
add
and
xor
or
jo
or
or
inc
daa
sub
sub
imul
or
inc
arpl
inc
loop
xchg
retf
out
retf
add
mov
out
loopne
add
add
add
xor
push
mov
fs
test
xchg
cmc
push
in
fadd
jae
push
push
outs
jae
popa
loopne
arpl
rcr
in
or
sbb
xor
sbb
pop
pop
fs
sbb
mov
add
inc
or
fisub
mov
cli
or
loope
mov
add
fist
aas
or
sbb
jbe
aas
cwde
(bad)
add
sbb
mov
push
popa
add
jg
and
mov
inc
add
stos
inc
xchg
push
add
mov
inc
mov
inc
addr16
imul
cmp
mov
out
push
and
push
sbb
or
push
push
je
ret
sbb
icebp
dec
sbb
sbb
dec
xlat
jmp
push
enter
add
out
push
aaa
adc
add
sbb
push
jb
dec
(bad)
nop
mov
mov
ror
inc
jge
and
dec
add
or
cli
fst
pop
cmp
mov
(bad)
(bad)
pop
or
and
xchg
mov
sub
mov
xor
adc
adc
ss
inc
sub
(bad)
adc
je
mov
je
ret
lods
fadd
add
or
loopne
sbb
add
mov
mov
push
ins
add
jmp
dec
dec
hlt
mov
sbb
fidivr
arpl
or
adc
jnp
xor
inc
inc
or
add
mov
push
add
mov
mov
mov
mov
(bad)
je
lods
add
hlt
jne
inc
daa
lods
sbb
sbb
je
mov
cs
(bad)
in
mov
jg
sbb
fcmovnbe
mov
test
neg
inc
fndisi(8087
ror
popf
ja
sbb
sbb
sub
scas
imul
inc
shl
or
inc
xchg
mov
imul
add
or
push
test
ds
mov
je
push
stos
cmp
jl
mov
popa
les
push
in
mov
or
sti
stos
or
dec
mov
add
ret
add
cmp
ss
add
je
adc
jmp
inc
sbb
ret
(bad)
inc
dec
retf
and
jne
pop
neg
loope
aaa
dec
mov
fisubr
pop
out
xchg
imul
je
lock
dec
(bad)
mov
sub
fs
in
js
jae
mov
pop
sbb
out
add
and
std
aaa
sub
jl
inc
js
nop
lods
outs
xor
sub
push
in
mov
imul
adc
inc
sub
inc
mov
cmc
xchg
push
dec
into
mov
mov
adc
mov
cmp
adc
push
and
aam
add
xor
bound
pop
mov
pop
add
jmp
addr16
jmp
fwait
jl
pop
push
cmp
xchg
push
bound
into
ja
push
inc
(bad)
sub
or
sbb
or
clc
dec
adc
add
jle
sbb
push
out
xchg
sbb
bnd
(bad)
and
pop
mov
sub
pop
add
and
data16
sbb
xchg
xchg
cli
add
or
push
sbb
ficomp
push
sub
arpl
imul
adc
dec
lahf
pop
push
lods
push
mov
mov
or
bound
pop
lea
push
adc
aam
js
or
ret
pop
imul
sbb
jmp
sbb
repz
push
add
jbe
inc
sbb
add
pop
call
adc
mov
repnz
or
enter
jge
jl
inc
xchg
sub
ret
mov
inc
and
shr
or
pop
clc
std
xchg
arpl
(bad)
xrelease
or
and
test
mov
mov
(bad)
xchg
mov
cmp
and
call
add
mov
js
js
xor
pop
jle
push
push
movs
and
jecxz
js
push
adc
jnp
inc
mov
loop
pop
pop
(bad)
(bad)
mov
jmp
fcom
jb
adc
popf
sbb
add
lock
out
xchg
push
aaa
push
or
push
cs
mov
adc
dec
fcmovnbe
pop
mov
ja
in
dec
push
neg
inc
mov
inc
rcl
mov
mov
call
ror
xor
or
jl
ss
pop
inc
int3
or
aas
in
loopne
add
or
mov
in
shl
mov
sbb
adc
retf
data16
dec
mov
mov
mov
(bad)
jo
ret
or
cmp
push
pop
jo
adc
ss
mov
mov
add
add
jbe
sbb
adc
jle
or
ret
add
cld
das
push
pop
aad
cmp
int3
mov
hlt
jne
dec
sub
or
ror
adc
add
ret
jge
cld
mov
or
sub
mov
add
mov
mov
dec
xor
cmp
mov
sbb
adc
es
imul
cld
or
stos
mov
jo
inc
or
mov
sbb
mov
lds
mov
data16
jl
ror
and
and
push
fst
shl
mov
xor
data16
addr16
test
add
iret
push
fcomp
and
adc
xchg
or
or
adc
push
sub
test
pop
mov
inc
push
and
hlt
rol
inc
dec
jne
das
les
retf
jo
adc
add
lods
cmps
jmp
inc
mov
sbb
and
fstp
das
sbb
ins
push
aad
pusha
dec
fnstsw
mov
inc
clc
ins
bswap
cli
mov
push
test
xchg
daa
ret
sbb
mov
mov
fadd
nop
outs
sub
adc
jl
lods
mov
push
mov
stos
ret
push
mov
movs
push
hlt
ret
jmp
mov
loopne
and
mov
mov
inc
xor
dec
cmp
jmp
sub
jne
xchg
or
inc
and
pop
adc
or
jbe
or
js
mov
sub
jnp
hlt
iret
ins
push
jg
cmp
jg
sub
es
je
mov
add
test
lock
std
sar
sub
adc
imul
in
je
mov
mov
inc
aas
cmp
ss
stos
add
ret
push
mov
sub
lea
popa
or
add
mov
in
xor
sub
xchg
mov
add
dec
dec
test
shl
lock
lock
adc
add
or
inc
and
mov
sbb
pop
cmp
adc
xor
ins
push
mov
or
cdq
fisubr
imul
cmps
jne
ins
mov
pop
jle
mov
mov
sbb
scas
jo
dec
jmp
cmp
sub
add
shr
pop
cmp
mov
cmp
and
mov
sub
inc
xor
xchg
push
movs
rcl
and
add
fdiv
cmp
adc
scas
jmp
sub
pop
add
add
sbb
or
sub
pop
mov
mov
ror
mov
cmp
push
test
stos
or
or
ja
dec
push
pop
xor
inc
xchg
xor
(bad)
dec
sub
sbb
out
ficom
cbw
mov
arpl
sub
pcmpeqw
dec
mov
popa
ror
xchg
js
fadd
or
cmp
lock
div
adc
outs
or
push
cwde
jecxz
sti
fild
clc
dec
mov
or
add
add
jge
dec
inc
xor
adc
jmp
adc
sbb
push
sbb
dec
mov
fiadd
and
jno
sbb
fldenv
in
mov
push
inc
push
jbe
pop
jmp
enter
(bad)
cli
int
ins
adc
je
adc
cmp
les
popa
inc
mov
je
or
jg
(bad)
int3
push
pop
sub
cmp
jge
mov
xchg
sbb
jp
push
push
xchg
and
fs
fcom
inc
adc
adc
push
xchg
mov
bound
mov
adc
mov
inc
loope
movs
loope
cdq
adc
xor
ss
bound
nop
mov
cmp
call
mov
push
cmp
sahf
sub
sub
lahf
pop
les
dec
repz
jb
or
adc
mov
rcl
ja
add
add
dec
jne
call
popa
cli
push
popa
ins
push
stos
les
movzx
pop
outs
push
test
push
cmp
outs
or
add
inc
pusha
and
xor
sbb
pop
call
lock
call
pop
ja
and
bts
mov
test
mov
enter
or
adc
aad
ret
mov
inc
dec
cwde
xor
or
add
(bad)
sub
and
jnp
sbb
dec
xor
inc
movnti
bound
sti
mov
cld
sbb
mov
pop
adc
xchg
mov
and
mov
pusha
outs
fwait
hlt
fwait
test
jmp
out
or
mov
sub
fst
lods
jb
(bad)
or
xchg
ror
mov
add
rol
cmp
sbb
cmp
mov
add
xor
ret
add
sar
pop
outs
adc
je
aad
push
sbb
iret
test
ret
stos
aad
sbb
mov
adc
xor
add
push
out
and
add
pop
popa
stos
hlt
inc
pop
add
inc
inc
add
mov
mov
push
mov
inc
sbb
pop
adc
mov
mov
jmp
xor
test
je
push
fs
or
xor
adc
call
not
into
jne
mov
outs
inc
pop
xor
xor
sbb
sbb
mov
sbb
mov
clc
sbb
mov
imul
cmp
push
pop
(bad)
aas
mov
mov
out
cmp
mov
ins
sbb
adc
xchg
cmp
jne
jo
add
cmp
push
ins
push
add
ficom
call
int3
jo
icebp
push
xor
mov
inc
pop
aaa
mov
inc
sub
je
dec
je
jmp
and
add
jmp
pop
fsub
lahf
int
int
push
pop
mov
inc
int
sbb
fadd
mov
pop
sbb
mov
add
add
mov
mov
cmc
lahf
or
mov
add
lock
sbb
int3
sbb
inc
cmp
cs
cwde
std
cmp
cmp
fwait
pop
out
push
and
or
jle
jmp
cld
mov
xlat
push
xor
fisttp
int3
es
xchg
stos
aad
add
push
mov
push
pop
pop
pushf
jle
jae
stos
or
xchg
(bad)
pop
sbb
push
push
sbb
sub
mov
mov
adc
inc
loopne
retf
xchg
push
pusha
jae
lea
push
mov
dec
or
or
aas
rol
xchg
mov
add
pop
sub
push
jmp
call
jb
xor
jns
lods
push
inc
mov
inc
sub
and
sahf
retf
jae
and
and
lods
mov
and
mov
sar
mov
sub
push
sub
cmp
inc
xchg
add
or
xchg
inc
jo
or
push
and
rsqrtps
pop
dec
std
mov
in
inc
sub
fsubr
in
mov
sysexit
xchg
dec
inc
add
fs
data16
or
jecxz
retf
or
sub
cmp
jno
ja
lods
aas
bound
and
jmp
mov
imul
data16
jae
and
inc
ss
push
(bad)
mov
jge
cmp
jb
pop
(bad)
imul
nop
jbe
clc
and
cmps
and
push
sub
pop
loope
cld
stos
hlt
cmps
or
std
scas
xor
call
inc
dec
jne
lds
cmps
pusha
xor
cmps
inc
je
ror
pusha
nop
mov
xchg
push
xor
pop
or
bound
ror
pop
and
out
lock
or
mov
or
mov
mov
sub
and
popa
xchg
or
mov
lods
data16
pop
cmp
je
pop
mov
push
or
nop
xchg
je
sub
xor
imul
push
inc
fidivr
in
jge
or
jb
add
add
pop
push
je
hlt
xchg
mov
aad
adc
mov
icebp
mov
imul
xor
push
ja
loopne
clc
ds
pop
cs
mov
lss
pop
jg
sbb
sti
add
or
dec
push
cld
adc
in
push
cmp
mov
ror
push
lea
sti
div
inc
dec
sub
mov
jge
clc
sub
fdiv
adc
xor
adc
ret
mov
mov
dec
cld
jp
cld
sub
push
or
rcl
aas
aad
and
mov
xor
xchg
add
xchg
jmp
add
dec
pop
push
mov
mov
mov
repnz
mov
sub
pop
scas
mov
int3
mov
add
xchg
cwde
outs
call
lods
mov
(bad)
xor
ret
lods
push
adc
sbb
aad
pushf
push
add
push
xor
inc
outs
jo
sub
inc
mov
ds
mov
dec
mov
push
add
rol
fsubr
rol
push
push
ins
mov
test
sti
or
or
cwde
adc
cmp
add
mov
ja
pop
sub
adc
and
mov
scas
or
or
push
mov
push
or
jne
push
add
cmp
jl
pop
add
or
sub
sbb
add
sub
scas
test
mov
or
add
adc
sub
int
movs
test
cmp
loopne
inc
mov
add
sbb
or
clc
xor
push
test
fcom
(bad)
sub
jae
adc
push
fsubr
xor
xchg
ss
loopne
scas
pop
pop
sub
push
adc
dec
rol
stos
ins
outs
or
mov
je
or
cld
adc
and
add
enter
lea
xor
jmp
dec
rol
cmp
test
lahf
or
(bad)
sbb
xchg
add
fsubp
sbb
sub
repz
jmp
pop
add
es
retf
popa
or
gs
and
lock
je
and
inc
and
and
sub
mov
nop
xchg
add
pushf
pushf
ror
or
push
xchg
xor
sbb
test
push
mov
mov
lock
cmp
adc
in
mov
fcom
test
jo
jne
and
icebp
cmp
jo
sbb
mov
jne
outs
push
pop
ins
dec
fwait
push
pushf
cmp
(bad)
add
push
sub
lock
test
adc
and
push
je
lds
cmp
sbb
cmp
add
pusha
or
in
or
and
mov
arpl
lock
mov
xchg
pop
mov
pop
sbb
sub
dec
bound
mov
lods
shl
repz
sbb
push
jne
lods
cmps
dec
leave
xchg
sbb
aad
sbb
mov
push
ror
jo
int3
lds
jle
xchg
ss
mov
mov
ss
jb
clc
inc
bound
dec
sub
inc
nop
or
mov
sub
nop
pop
push
adc
ds
fisub
pop
inc
hlt
pop
mov
xchg
push
mov
clc
or
mov
ret
jmp
out
sbb
dec
lods
shl
(bad)
(bad)
(bad)
or
or
leave
dec
push
mov
jo
les
test
fisubr
aam
jmp
sbb
or
xor
mov
mov
ja
sub
arpl
pop
ins
psraw
or
fcmovbe
inc
stos
or
jg
xchg
test
add
inc
int
int3
dec
or
adc
ss
inc
loopne
pop
jp
mov
mov
push
lea
sub
outs
push
inc
mov
popa
mov
test
fadd
je
jge
dec
push
sub
movzx
dec
enter
sbb
fcom
add
fld
pop
mov
add
jb
fldlg2
movs
popf
xchg
sbb
jo
inc
jbe
pop
jae
daa
dec
ja
adc
ficom
add
sbb
ret
or
add
jae
xchg
call
fdivr
leave
push
mov
ret
loope
fdivr
jmp
mov
aam
(bad)
in
popa
dec
enter
mov
sbb
ins
mov
sub
xor
add
pusha
mov
hlt
xor
sbb
mov
xchg
push
mov
test
mov
inc
push
add
sub
xchg
sbb
and
in
ja
dec
es
jp
fnsave
adc
imul
jmp
jmp
cdq
push
call
cmp
or
add
sub
arpl
(bad)
aam
pop
pop
push
adc
cmps
arpl
movs
je
arpl
push
rcr
pop
pop
sbb
pop
int
sbb
adc
(bad)
lock
call
mov
add
inc
jne
add
dec
pop
jge
rcl
movzx
stos
xor
clc
jne
dec
sahf
xchg
xor
and
loopne
lahf
jo
push
jne
and
lods
rcr
or
out
mov
xor
push
mov
cs
fstp
fbld
inc
xchg
cmp
add
sub
inc
sbb
lock
out
pop
mov
add
xchg
xchg
and
pushf
test
std
aam
xor
pop
cmc
jl
fmul
and
ficomp
mov
or
xor
cmps
mov
adc
loopne
sub
pop
xchg
je
or
mov
xlat
cli
les
push
shl
sub
or
sub
pop
and
xlat
daa
lea
loopne
inc
cmp
sbb
add
or
ror
out
stos
pop
mov
cwde
or
pop
aam
hlt
in
movs
push
add
cmp
lds
inc
sbb
test
pop
sbb
jecxz
mov
xor
push
mov
cmc
ror
fldenv
shl
fldcw
mov
loopne
mov
sub
pop
jmp
push
mov
mov
jne
jmp
into
push
mov
mov
dec
loope
sub
scas
retf
jmp
push
add
sbb
jmp
mov
fwait
mov
in
scas
jmp
jmp
xchg
add
xor
add
aad
test
adc
mov
add
sbb
push
or
mov
cmp
xchg
shr
or
jbe
retf
fstp
adc
adc
test
jne
cmp
mov
push
jl
add
cmp
cwde
add
loope
xchg
aaa
xchg
mov
imul
in
js
add
dec
ds
mov
je
xor
stos
mov
pop
cli
(bad)
rol
hlt
mov
jmp
pop
lods
add
mov
push
adc
pusha
repnz
inc
pop
inc
fs
jle
adc
call
movs
inc
jo
in
or
push
jle
sbb
jnp
mov
loopne
out
xchg
jle
into
mov
and
dec
jmp
aaa
movs
dec
js
sub
mov
into
clc
aas
lock
shl
and
jae
je
scas
jb
cs
push
stos
cmp
pop
retf
xor
add
sbb
adc
(bad)
jno
push
mov
pop
push
(bad)
cmc
add
cmp
or
jbe
xchg
inc
pop
loope
std
mov
inc
cwde
loope
xchg
pop
cld
daa
mov
sbb
inc
ret
add
(bad)
adc
inc
test
push
mov
or
and
xor
mov
and
adc
es
and
inc
or
pusha
adc
cmp
loope
adc
mov
or
mov
inc
cdq
mov
mov
movzx
mov
or
mov
mov
push
xchg
and
retf
leave
adc
rol
xor
or
mov
loope
mov
push
les
cmp
mov
movs
dec
jb
cmp
outs
mov
add
jmp
push
adc
xchg
pop
nop
xor
and
outs
and
mov
loop
push
fs
pop
aas
inc
sbb
add
shr
rcr
ss
add
aaa
jo
cmp
adc
pusha
add
or
jmp
outs
mov
std
push
sbb
push
cmp
mov
or
mov
dec
shr
dec
or
in
daa
sbb
in
xor
mov
test
sbb
sbb
pop
dec
loope
jle
mov
cwde
in
mov
ins
and
or
inc
mov
stc
sub
into
inc
dec
aam
mov
dec
adc
add
cmp
adc
xlat
(bad)
(bad)
sbb
pop
sbb
sbb
inc
xor
out
lods
ja
add
sbb
test
or
mul
and
or
add
push
xchg
(bad)
js
(bad)
pop
daa
stos
jmp
jmp
or
add
inc
ret
loope
ss
out
pop
popf
sbb
out
pop
int3
loopne
(bad)
mov
and
mov
adc
mov
push
js
gs
jbe
xchg
jmp
sbb
xor
or
(bad)
adc
dec
rol
adc
mov
mov
popa
loope
lds
das
push
push
xchg
lea
xor
jle
pop
and
dec
push
dec
dec
std
call
fsubr
sub
mov
cdq
stc
pop
adc
leave
jmp
lea
dec
pop
cmp
xchg
or
adc
sbb
jno
pop
and
out
pop
pop
stos
push
jno
in
and
pusha
xor
fwait
pop
adc
dec
icebp
push
popa
lods
jns
pop
lods
mov
mov
push
fbstp
fmul
adc
div
aas
out
jo
rcr
shl
stos
push
cld
or
ret
add
ss
call
aaa
loopne
mov
cmp
lahf
pop
fisttp
and
popa
enter
cwde
inc
out
ss
push
les
lahf
and
xchg
(bad)
cmp
add
shl
or
mov
push
pop
nop
fnstcw
pop
mov
push
fild
js
lods
add
or
out
jmp
pop
cmp
cmp
jne
loope
dec
rcl
inc
or
jecxz
std
xchg
cmp
call
cld
push
std
mov
ret
dec
xchg
lock
fwait
mov
mov
lds
data16
sbb
push
arpl
ret
adc
add
dec
pop
lock
dec
jo
push
mov
pop
gs
mov
or
and
test
add
fistp
jge
mov
leave
adc
call
test
add
cmp
push
movs
add
cmp
mov
dec
mov
ret
inc
add
cmps
clc
xchg
mov
addr16
add
fld
imul
mov
mov
lahf
push
cmp
fmul
jl
or
and
add
pusha
mov
cmp
je
or
pop
loope
test
cmp
ret
mov
adc
arpl
div
inc
pop
cmp
push
pop
out
push
push
movs
sbb
adc
pop
mov
mov
repnz
push
es
adc
movaps
fadd
sbb
mov
adc
rcr
aad
cmp
cld
in
js
dec
cmc
call
pop
lds
out
push
out
push
not
jge
lods
ins
and
push
push
dec
fs
add
int3
fiadd
loopne
pushw
inc
ins
gs
frstor
adc
dec
push
pop
cmp
scas
hlt
loopne
push
mov
sbb
and
and
mov
push
push
mov
pop
fneni(8087
pop
or
loope
push
sbb
adc
push
into
jp
pop
push
cmps
icebp
addr16
aad
sub
xchg
jne
loope
mov
out
popa
jmp
add
jno
dec
je
test
sbb
sub
xor
pop
test
and
movs
mov
dec
es
ret
xor
or
mov
sub
cmp
inc
xor
rol
jno
ret
push
cmp
mov
test
mov
fdivr
jecxz
mov
js
sbb
mov
cmp
clc
not
or
mov
pop
xchg
add
pop
and
jne
mov
and
mov
inc
pop
(bad)
or
adc
push
imul
jb
outs
outs
push
jb
jb
push
push
push
push
jb
jb
push
push
push
pop
jb
jb
pop
pop
pop
pop
push
iret
hlt
jae
mov
add
sbb
lock
add
add
popa
out
test
push
add
and
jbe
jb
jae
in
mov
push
or
data16
add
aaa
adc
pop
jne
add
cmp
addr16
or
pop
pop
pop
xor
sbb
cmps
addr16
repnz
pusha
data16
data16
pop
add
movs
sub
jns
xor
push
mov
imul
dec
push
xlat
xor
xor
add
dec
pop
outs
and
scas
pop
xor
and
push
xor
sub
daa
cmp
scas
pop
jg
mov
xchg
jnp
adc
ss
cmp
cmp
inc
daa
or
ds
mov
rol
pop
pushf
cpuid
sbb
adc
inc
mov
fsubr
repz
or
push
rol
push
imul
idiv
or
or
dec
jne
dec
gs
outs
jb
mov
nop
or
adc
arpl
ins
popa
imul
jo
imul
jae
dec
add
pusha
pop
dec
rsqrtps
or
repnz
jb
movs
jne
jb
mov
or
or
inc
pop
jo
add
hlt
das
cli
dec
adc
mov
outs
gs
arpl
inc
outs
fs
pop
sub
sbb
sbb
lods
lss
push
inc
dec
outs
jbe
ins
imul
push
inc
lahf
outs
sub
pop
imul
ss
pusha
pcmpgtd
mov
dec
dec
inc
push
iret
pop
stos
add
fsubr
ror
cmp
adc
sbb
stos
loopne
pop
leave
dec
imul
add
jne
je
jo
gs
inc
inc
push
fild
cmp
cmp
inc
lock
fmul
fiadd
push
pop
dec
dec
inc
add
mov
jb
ja
or
pop
add
outs
mov
pop
mov
mov
ja
dec
adc
and
gs
aad
push
add
xlat
pop
xor
add
inc
ja
cmp
cmovp
repz
dec
gs
fs
add
pop
xor
jo
add
jg
inc
pop
push
adc
or
popa
rcl
or
je
jb
pusha
xor
push
out
scas
pop
sub
inc
ins
add
mov
pop
mov
inc
imul
gs
shl
mov
sbb
inc
lock
ins
push
cmps
sub
mov
pcmpeqd
mov
outs
imul
outs
inc
jb
js
xor
adc
in
inc
push
cmp
add
or
in
ss
pop
cmp
ds
loopne
sub
jb
pop
mov
ss
outs
outs
fild
cmp
aaa
mov
xchg
dec
pop
cld
das
add
xchg
dec
inc
push
in
jae
stos
jb
popa
pusha
xlat
pop
xor
sub
outs
mov
or
fcomp
mov
add
jg
cmp
jge
pcmpgtw
popa
iret
jmp
sbb
dec
into
in
adc
pop
jo
jbe
inc
test
jne
jae
xlat
ins
fs
dec
outs
popa
fs
xor
jb
and
adc
fild
xor
xor
pusha
pop
cmp
ds
stos
sbb
outs
inc
je
mov
cmps
ds
push
jb
jae
popa
rol
out
inc
dec
das
sub
dec
stos
loopne
popw
add
or
fnstenv
jmp
mov
sysexit
pop
adc
add
ss
sar
pop
sbb
ror
inc
add
gs
xlat
or
shl
jnp
adc
add
ja
pop
adc
ja
outs
pop
jo
inc
push
lock
or
push
xchg
jmp
push
dec
inc
pop
inc
dec
or
dec
inc
dec
sub
jg
in
aad
js
xchg
or
imul
ins
outs
jb
mov
mov
sub
adc
push
ja
jnp
jge
jns
outs
ins
add
jo
ins
shl
out
cmp
gs
push
inc
imul
jp
imul
pop
ins
sub
push
inc
jns
gs
out
fiadd
mov
jb
push
mov
xor
ss
add
or
inc
add
fnstsw
mov
outs
movs
call
xor
leave
out
mov
pop
aaa
pop
mov
adc
mov
and
pop
cmps
ds
mul
xchg
das
lods
push
adc
pop
sahf
inc
(bad)
mov
mov
push
data16
add
adc
jmp
js
sbb
push
dec
ja
iret
in
js
add
or
les
mov
pusha
or
pop
mov
scas
push
mov
push
push
dec
cmp
sysret
lods
dec
imul
sub
push
popa
and
add
clts
aaa
mov
or
loopne
gs
data16
pop
ins
fisttp
or
inc
std
add
dec
test
aad
inc
mov
jns
add
pop
add
mov
imul
add
test
jmp
ja
mov
and
pop
call
push
adc
push
mov
inc
ins
popa
jae
shl
sbb
add
ins
jbe
push
pop
hlt
das
and
sub
sub
mov
add
jle
mov
cmp
fstp
fimul
movd
push
push
add
or
add
push
or
jae
sbb
ins
or
pop
fild
clc
js
push
mov
jge
or
mov
test
and
push
inc
aaa
xor
inc
fs
loop
aad
jl
or
ins
ins
inc
cmp
mov
int3
ins
das
cmp
gs
jne
mov
dec
sbb
xchg
sbb
pop
mov
pop
iret
jl
fcmovnb
jne
inc
and
imul
add
push
jecxz
je
das
jnp
xchg
jge
xchg
cmp
jle
aaa
pusha
aaa
pop
pop
or
popa
ins
aaa
mov
(bad)
pop
add
mov
mov
cdq
or
dec
or
pop
push
pop
stos
ja
xor
xor
sub
fidivr
add
add
push
jo
sub
jle
mov
or
pusha
sbb
into
or
scas
jae
mov
fld
inc
push
push
and
inc
mov
test
push
sar
mov
in
add
cmovnp
cmp
xlat
ins
pop
fistp
ret
push
hlt
dec
sar
dec
aam
es
mov
aam
jl
push
dec
fidiv
pop
aas
cs
push
push
lock
xor
push
add
fistp
out
test
loop
cmps
and
test
and
(bad)
fisubr
pusha
data16
sbb
sbb
in
outs
pop
push
or
push
add
and
or
loop
inc
xor
pop
repz
pushf
retf
sub
mov
adc
and
push
sub
loop
clc
and
cmp
push
sub
test
xor
sub
shl
cmp
dec
popa
js
call
jmp
sbb
adc
sbb
imul
or
sbb
fst
mov
fs
xor
loop
ins
push
popa
bound
add
daa
leave
leave
leave
ins
punpckhwd
out
push
dec
pop
mov
sbb
imul
xchg
popf
xchg
fld
(bad)
sar
aam
cmp
fcomp
push
push
das
test
add
in
push
dec
mov
jo
add
add
fucomi
fild
fisttp
sbb
sbb
outs
cmpps
ins
add
pop
cmovae
adc
nop
push
push
inc
mov
push
ds
dec
inc
add
xchg
add
test
inc
pop
arpl
xor
sub
ins
jo
(bad)
shr
test
vmread
adc
loopne
lods
(bad)
arpl
bound
sbb
clc
add
je
pop
je
fcom
ins
into
loop
pop
dec
gs
outs
jb
and
push
cmp
push
add
fmul
pop
dec
xchg
addr16
int
or
outs
inc
ins
imul
push
xchg
or
cmps
int
inc
push
and
or
inc
les
pop
sbb
jl
inc
adc
inc
fwait
rol
int
mov
add
mov
or
std
push
push
xor
or
and
adc
in
or
xor
mov
jbe
push
sub
push
pop
mov
sbb
push
push
xor
nop
dec
out
mov
imul
jl
js
mov
mov
add
push
add
inc
adc
push
mov
push
or
or
and
xchg
adc
sti
fldpi
add
scas
inc
inc
retf
in
jp
mov
push
out
push
stos
imul
adc
inc
imul
add
and
imul
fbstp
sub
clc
outs
ror
lahf
mov
dec
scas
(bad)
or
movs
inc
sbb
pop
adc
adc
inc
xchg
xchg
push
xor
xor
out
mov
and
mov
dec
das
push
sub
add
sub
add
sete
inc
push
jns
stos
and
popa
stos
cld
fs
push
rcr
arpl
pop
xchg
cmp
cmps
out
daa
add
or
hlt
add
push
and
adc
sbb
and
jo
dec
lods
dec
jnp
imul
outs
ja
add
jbe
ret
repz
dec
cmp
rol
add
mov
fsub
sahf
fmul
dec
inc
mov
mov
je
inc
dec
xchg
lods
inc
adc
arpl
adc
inc
outs
cmp
and
inc
pop
push
mov
jp
(bad)
repnz
test
jb
in
loope
adc
xor
test
sbb
or
add
and
and
ja
sidtd
dec
or
iret
push
ins
push
pop
jge
add
(bad)
lds
pop
pop
inc
xor
pop
push
shl
push
push
pop
or
inc
imul
clc
and
push
inc
inc
inc
mov
bound
add
or
mov
and
push
or
icebp
push
test
sub
sbb
imul
sbb
mov
aam
stos
clc
push
xchg
inc
dec
mov
add
adc
loop
repz
push
mov
or
add
adc
ins
dec
leave
call
mov
mov
rcr
out
inc
sub
icebp
jge
popf
jmp
imul
add
aas
and
clc
sbb
(bad)
imul
(bad)
fdivr
pop
inc
jg
push
inc
push
pop
or
and
jne
cmp
inc
or
pop
adc
and
je
(bad)
and
sti
inc
sti
xor
bound
(bad)
sbb
jae
jo
cld
pop
dec
mov
pusha
mov
iret
test
cld
stos
neg
mov
dec
push
xor
mov
rol
push
je
add
out
fucomi
add
pusha
push
push
scas
mov
mov
push
xor
call
mov
add
mov
or
sbb
jmp
jne
push
scas
bound
clc
mov
addr16
fiadd
push
inc
xor
dec
xor
loopne
lods
(bad)
push
dec
mov
push
mov
jmp
pop
dec
mov
or
data16
push
cli
add
push
mov
cmp
jns
je
xor
mov
stos
fdivr
or
lds
sub
or
test
add
movs
mov
retf
mov
add
inc
add
mov
je
and
loope
shl
pop
pop
pusha
xchg
or
int3
pusha
loope
or
pushf
add
add
inc
add
inc
mov
pop
pop
sbb
xchg
rcr
push
fs
cmp
bound
or
ret
popa
push
mov
gs
add
jne
adc
aas
push
mov
and
cmp
cmp
or
rol
push
xchg
(bad)
dec
cli
test
push
mov
sahf
dec
outs
mov
pop
arpl
add
rsqrtps
push
xchg
ja
add
inc
dec
inc
push
movs
xor
fild
and
pop
push
inc
and
psraw
or
or
retf
and
add
hlt
jb
xlat
pop
and
mov
and
adc
mov
pop
retf
arpl
xchg
rol
sub
or
das
sub
hlt
or
add
xchg
lods
fs
dec
ror
sti
cmps
gs
aam
jo
out
jbe
inc
loopne
or
push
pushf
push
test
jle
iret
and
loopne
and
addr16
push
mov
sti
sub
fs
mov
cmp
mov
aam
data16
xchg
sub
pop
jo
push
mov
nop
mov
cli
mov
in
jmp
or
push
lds
(bad)
repnz
sub
ficomp
or
and
push
shr
push
jo
jo
mov
scas
fild
test
dec
jp
add
add
cwde
(bad)
das
adc
inc
and
add
jo
out
test
out
add
add
nop
pop
test
aad
sub
xor
aad
aad
(bad)
ss
inc
bound
xchg
push
call
push
gs
(bad)
push
cmps
jnp
and
or
and
xchg
push
or
adc
retf
xchg
out
push
inc
or
aas
pop
ss
adc
ja
mov
pop
pop
pop
scas
(bad)
rol
popa
cmp
jmp
pop
inc
bound
pop
inc
jge
adc
push
arpl
push
fwait
dec
int3
pop
aaa
dec
fs
pop
dec
add
jo
mov
or
bound
pop
or
outs
mov
outs
pop
adc
addr16
xor
push
outs
mov
mov
das
mov
stos
in
pop
sbb
sbb
sub
popa
fcomip
push
push
or
mov
push
push
or
popa
push
js
cmp
loopne
rol
and
js
and
sub
test
push
cmc
adc
jo
pop
jae
adc
push
mov
sbb
fiadd
mov
sbb
sbb
imul
pop
ret
outs
out
mov
add
data16
imul
(bad)
std
inc
ja
mov
inc
jae
sbb
inc
pop
xor
cmp
daa
add
cmp
push
fild
rol
xchg
ret
sub
fnstsw
in
xor
mov
xor
pop
inc
sbb
gs
inc
adc
xor
push
sub
adc
daa
or
loope
lahf
daa
mov
or
sbb
daa
xor
push
outs
out
or
in
pushf
and
push
sbb
add
fwait
adc
ins
jg
outs
push
jl
push
popa
jne
xchg
das
mov
fstp
nop
mov
adc
push
mov
dec
and
add
shl
es
bound
pop
cwde
push
out
xor
ret
push
dec
push
inc
mov
mov
retw
sub
push
mov
nop
push
sbb
sub
cmp
sar
pop
loop
adc
(bad)
bound
jnp
xchg
lods
inc
or
outs
dec
jmp
cwde
or
ror
sub
and
into
push
or
ja
in
rol
jo
mov
in
das
or
and
call
cmp
ins
cmp
jnp
or
add
addr16
cmp
cmp
ja
push
or
(bad)
adc
push
sbb
jne
lods
mov
popa
je
cmp
fistp
mov
sub
cmps
jecxz
fiadd
mov
sub
(bad)
push
popf
imul
sbb
jecxz
je
addr16
push
jno
cmp
push
or
in
mov
or
and
sub
mov
rol
jae
es
add
push
push
jg
fistp
inc
xchg
lods
push
xor
sbb
ja
push
pop
sbb
dec
xor
adc
nop
inc
sbb
rol
push
loopne
inc
ins
sub
dec
data16
shl
cmc
gs
or
imul
push
jne
fld
jnp
in
sbb
or
sub
add
inc
cmp
mov
shl
mov
lods
inc
xor
mov
inc
inc
adc
inc
test
jns
sub
fdiv
pop
jns
and
push
xchg
push
mov
test
pop
test
fnstenv
test
out
not
jl
xchg
movs
push
pop
loope
add
inc
sbb
mov
jae
push
add
mov
push
cmp
pop
cmp
xchg
out
rcl
aaa
dec
outs
jl
and
fimul
cmp
cmp
pop
iret
in
aam
mov
and
pop
jmp
mov
movs
and
popa
dec
sub
test
push
add
sub
dec
dec
and
add
into
dec
mov
xchg
bound
mov
xor
push
mov
(bad)
sub
imul
or
(bad)
das
rcr
mov
pop
fs
scas
xchg
data16
or
fs
jle
xchg
add
mov
inc
mov
sub
loopne
aam
adc
xor
ja
idiv
pop
cmp
enter
pop
inc
shl
jae
add
nop
add
mov
jne
fidivr
es
push
push
add
out
ficomp
cmp
pop
push
hlt
push
push
sbb
stos
icebp
btc
enter
xor
or
or
cli
gs
outs
jb
dec
in
gs
push
sub
fisttp
dec
inc
and
pop
je
adc
data16
dec
jno
cdq
inc
pop
adc
test
outs
lea
jbe
imul
and
mov
mov
mov
data16
push
add
rol
fdiv
adc
(bad)
add
pop
inc
das
cmp
cmp
mov
stos
and
mov
cmps
adc
les
and
or
jp
rcl
adc
mov
or
add
rol
nop
push
sub
push
outs
retf
pop
(bad)
call
mov
add
push
push
push
mov
lea
mov
sti
mov
mov
mov
mov
call
mov
mov
fcomi
xor
push
push
push
sub
push
or
push
dec
ror
add
xor
sub
adc
or
push
mov
fild
adc
mov
sub
mov
lahf
sub
pop
fwait
ins
xchg
pop
aam
shr
add
jne
sbb
imul
fcmovnu
xor
sbb
push
hlt
push
push
fcomp
ss
call
in
inc
cmp
fild
div
sbb
push
inc
les
ret
into
add
or
or
scas
loope
(bad)
xor
aaa
dec
in
loopne
cdq
jecxz
lods
lea
cwde
cmp
in
mov
ja
inc
pop
pusha
aaa
lahf
sbb
push
inc
cmp
and
sbb
adc
sbb
sbb
in
dec
and
loopne
and
xor
outs
into
ficom
xchg
dec
or
pop
mov
pop
ret
jle
adc
xor
mov
(bad)
mov
js
mov
fadd
xor
jmp
adc
(bad)
(bad)
mov
inc
add
cmp
mov
jnp
and
ret
(bad)
in
stc
push
mov
cmp
cmp
xor
dec
test
jl
inc
xor
(bad)
shl
xor
and
shr
shr
or
jp
dec
jne
mov
sbb
out
adc
pop
add
push
stc
sub
inc
mov
fucomi
or
push
ret
clc
add
add
or
jg
rol
shl
sub
cmp
jl
xchg
jmp
cmp
jl
(bad)
pop
loopne
outs
mov
pop
mov
bswap
pop
shr
ret
mov
push
cli
push
ja
jmp
push
std
(bad)
mov
rcr
out
ror
rol
ja
out
sar
or
cli
add
add
mov
mov
repz
clc
add
cmp
shr
dec
pop
ins
sub
fadd
jg
or
xor
mov
mov
jb
mov
sub
pop
ins
ret
out
out
sbb
jae
inc
jne
mov
out
je
xor
fstp
mov
sti
out
in
jge
inc
dec
jne
and
mov
loopne
inc
ins
cld
mov
int3
aam
test
adc
call
enter
push
adc
adc
sbb
test
add
cwde
adc
push
loopne
add
or
dec
hlt
add
mov
ret
pusha
push
cli
push
push
push
mov
mov
test
test
jl
inc
xor
jmp
in
mov
mov
lea
call
xchg
outs
push
clc
mov
push
lock
adc
int3
cmp
cmp
add
dec
jne
mov
les
call
in
dec
mov
or
mov
pop
cld
adc
adc
std
jg
lea
(bad)
(bad)
jmp
and
in
dec
fiadd
push
mov
je
push
inc
fwait
jmp
cmp
cmp
cmps
sub
inc
push
sbb
add
push
dec
mov
popf
aaa
icebp
mov
jo
pop
add
loop
jnp
mov
inc
or
popf
mov
inc
push
push
call
jne
daa
lock
nop
sub
xchg
repnz
leave
fisub
pop
push
inc
mov
stc
add
add
or
fild
(bad)
jno
mov
and
and
cmp
wrmsr
push
push
mov
pop
jnp
je
jl
jge
jp
add
clc
or
or
or
cmp
jp
mov
add
scas
mov
push
fst
lock
arpl
shl
mul
jge
pop
jo
sub
push
pop
push
fdivr
xor
xchg
ficom
inc
loopne
pop
ins
adc
jmp
dec
jne
lods
sbb
and
popf
adc
ins
stos
mov
mov
icebp
aam
mov
or
add
popf
adc
jo
dec
ds
inc
dec
fst
xor
test
lea
sbb
dec
ret
pop
mov
jmp
xor
fcomp
dec
adc
sub
add
daa
aam
or
add
jne
nop
add
mov
dec
mov
push
sub
dec
sub
cmp
push
xor
pop
nop
jmp
xchg
xor
ret
mov
int3
popf
xchg
and
sbb
sahf
jmp
jge
inc
fadd
add
xchg
sub
rcl
scas
pop
adc
loope
repz
mul
pop
jne
icebp
rol
aas
clc
test
xor
jae
pop
mov
mov
jg
sub
ucomiss
fs
sub
aas
enter
cmp
xor
push
push
mov
clc
or
mov
das
pop
xchg
les
add
jne
mov
jmp
in
jl
mov
das
mov
dec
clc
idiv
data16
cmp
jge
mov
lea
mov
dec
test
fisttp
sbb
pop
pop
xlat
mov
mov
inc
xchg
dec
mov
aad
adc
push
aas
push
mov
and
test
je
push
or
rol
sub
mov
(bad)
mov
and
movs
outs
jl
jle
imul
jle
jbe
dec
shl
inc
pusha
jnp
js
add
add
mov
lock
shl
sar
sbb
sbb
mov
add
add
jl
(bad)
pusha
ja
mov
or
iret
mov
cmp
or
(bad)
(bad)
adc
shl
cmp
or
cmps
add
xchg
mov
es
sub
add
or
push
daa
(bad)
sbb
pop
lea
ss
add
or
push
mov
xchg
sub
xchg
adc
sub
scas
pusha
ja
aad
jb
test
sbb
popa
daa
push
add
cdq
and
cmp
call
and
inc
xor
inc
sbb
jae
loop
dec
call
nop
popf
or
repz
xchg
adc
adc
mov
xor
pop
pusha
mov
in
je
push
pop
into
push
xchg
sub
cmp
jo
and
repz
les
xor
outs
movs
adc
xor
sub
imul
mov
aaa
cmp
xor
fdiv
(bad)
pusha
cmps
cmp
xor
cli
jne
and
xor
rdtsc
je
aam
push
ss
and
aad
imul
or
xor
dec
outs
push
jo
jnp
movs
call
fwait
nop
call
add
js
inc
stos
(bad)
xor
and
and
loopne
dec
and
rol
or
pop
add
mov
gs
sub
adc
(bad)
sbb
xchg
cmp
xor
sti
sbb
push
adc
xlat
shl
lea
xor
in
xor
jmp
aam
xor
bound
add
add
aaa
sub
add
int
pushf
push
pop
loope
loopne
pop
cmp
push
pusha
push
pop
ror
or
push
cmps
inc
test
pop
push
xchg
cmps
xchg
mov
push
cmps
aaa
lock
inc
pop
hlt
inc
mov
xor
fcomp
mov
dec
mov
pop
inc
mov
rcr
mov
xchg
push
mov
lds
dec
xor
adc
cmp
pop
inc
pushf
xchg
inc
adc
fbstp
jle
leave
jbe
xor
add
push
test
pop
xor
lods
add
je
mov
ror
mov
sar
cmp
xor
sub
add
mov
into
ss
pop
or
call
sub
mov
xchg
pushf
add
pop
call
sub
std
add
pop
lea
inc
ss
cwde
(bad)
jae
into
test
push
mov
or
sub
vmovaps
leave
push
inc
leave
nop
in
sub
jmp
jecxz
dec
fwait
jno
push
pop
or
nop
cmp
xor
xchg
ret
adc
xor
pop
push
loopne
nop
xchg
imul
(bad)
lea
pop
adc
xchg
inc
push
xchg
(bad)
xchg
dec
or
fistp
loop
sbb
ja
add
add
pop
xor
mov
inc
push
inc
and
cmps
add
xor
loope
pop
lea
cmp
push
mov
pop
sbb
dec
idiv
push
lock
enter
push
mov
ins
int3
mov
or
adc
popf
sti
and
and
out
fistp
push
add
inc
jp
ret
lods
jg
mov
and
data16
adc
retf
push
pop
add
push
pop
test
dec
and
or
out
dec
lock
cmp
ror
push
jo
sbb
mov
hlt
sete
add
mov
lock
mov
push
(bad)
pusha
xor
dec
pop
xor
pop
xor
in
outs
dec
ror
add
inc
hlt
pop
pandn
es
cmp
jne
loopne
mov
loope
or
add
mov
shl
es
push
mov
pop
cs
xchg
dec
add
pop
push
sbb
sbb
sbb
mov
push
mov
movzx
mov
push
mov
or
sar
sbb
js
shl
push
sbb
mov
xor
movs
retf
jle
adc
jo
jae
push
mov
mov
add
inc
xchg
push
dec
imul
sbb
sub
xor
pusha
mov
push
sub
sub
or
fwait
and
sub
xlat
bound
in
rcr
mov
xor
into
cld
dec
aaa
ror
inc
xchg
push
rcl
pop
mov
sub
mov
and
test
cmp
mov
adc
call
out
add
jmp
xor
jbe
inc
ret
mov
ins
sbb
mov
jnp
js
mov
mov
test
push
out
aas
jae
cmp
mov
push
pushf
cmp
jnp
int3
in
push
out
add
mov
push
sbb
sub
jmp
add
add
fs
and
(bad)
push
test
mov
dec
mov
sahf
adc
movaps
aam
add
dec
pop
(bad)
das
jp
test
pop
sbb
inc
add
mov
hlt
add
mov
xor
xchg
les
pop
inc
or
lahf
cmps
fmul
pop
fcomp
mov
test
loopne
and
push
ror
add
sub
je
lea
mov
neg
fimul
add
mov
mov
sbb
inc
(bad)
mov
mov
sbb
movs
in
js
sbb
std
dec
add
pushf
and
sar
popa
jo
dec
mov
sbb
sub
in
lock
ret
(bad)
xchg
rol
outs
xlat
mov
jo
mov
pop
adc
jmp
hlt
or
push
hlt
and
add
add
adc
mov
dec
cmp
rol
add
jb
adc
jl
mov
jmp
and
ja
in
mov
lea
push
jnp
fstp
outs
xlat
fist
inc
popa
aaa
and
pop
push
sbb
aas
int
push
dec
test
jne
sar
adc
sbb
push
enter
add
or
sahf
loopne
jo
ja
xlat
or
es
push
or
push
mov
bound
(bad)
or
es
lea
pop
cmp
fcomip
(bad)
jp
test
xchg
or
push
or
add
(bad)
push
dec
dec
push
or
es
add
enter
jnp
jo
push
cmp
rep
ret
xor
sub
aam
call
jmp
hlt
mov
aam
push
push
push
or
mov
fld1
dec
shl
add
or
jbe
push
loopne
int3
cs
jp
sbb
sub
jbe
ss
xor
adc
jnp
or
movaps
sub
sub
pop
cmps
inc
pop
cmp
cld
cmp
pusha
add
(bad)
and
pop
mov
outs
outs
inc
push
jmp
adc
and
and
mov
outs
jno
pusha
add
inc
jmp
push
lea
xor
add
inc
les
jmp
and
or
shr
push
and
jbe
(bad)
or
mov
pop
inc
fucomip
jae
mov
clc
or
mov
inc
push
push
loopne
pop
dec
cmp
cmp
mov
in
mov
dec
pop
pop
mov
push
or
ret
rol
push
sbb
mov
add
or
(bad)
js
call
xchg
push
int3
in
jmp
pusha
dec
add
mov
sbb
bound
mov
rcl
cmp
mov
inc
sbb
js
gs
adc
sub
aam
outs
xor
mov
outs
and
sti
retf
pop
add
cmp
jne
mov
pop
out
sbb
dec
mov
push
mov
outs
(bad)
retf
adc
loopne
loop
movzx
ror
(bad)
cmp
dec
es
push
push
jbe
sub
push
out
(bad)
fiadd
icebp
pushf
add
inc
add
mov
test
into
les
push
pop
sub
sbb
dec
sbb
int3
mov
add
sub
test
mov
and
mov
and
iret
fisttp
dec
dec
dec
mov
and
shr
dec
dec
cld
mov
push
cld
add
mov
outs
hlt
das
mov
and
rcr
adc
or
add
icebp
imul
sysret
push
cmp
lea
jle
push
sbb
mov
(bad)
mov
sub
jb
dec
je
dec
sub
jb
adc
outs
mov
ret
or
cmp
ja
push
xchg
pop
xchg
add
neg
or
add
add
sub
push
ss
fcomi
inc
push
pop
shl
cs
push
mov
pop
push
dec
push
push
push
push
mov
and
div
imul
mov
loopne
call
and
(bad)
inc
ins
cmp
je
cmp
jne
and
mov
jle
mov
xchg
out
mov
cmp
outs
scas
nop
aas
in
loopne
xchg
add
fidiv
mov
mov
scas
out
xchg
xchg
js
jo
cmp
mov
push
push
and
adc
or
cmp
push
jecxz
aad
fbstp
jp
sbb
and
sbb
adc
pop
sbb
cmp
push
sahf
add
sub
fidiv
push
inc
in
dec
xor
mov
adc
jbe
ja
mov
ins
adc
imul
cmp
dec
xor
adc
jnp
sub
pop
add
pop
cmp
sbb
push
(bad)
cmp
add
pusha
lea
fimul
cld
jns
cmp
idiv
cmp
out
aam
xchg
mov
mov
sbb
shl
ins
jo
push
adc
stos
add
sahf
cmp
ret
js
or
and
xchg
adc
jmp
mov
push
pop
or
add
jmp
mov
inc
inc
dec
test
jo
mov
jb
inc
es
mov
dec
mov
and
and
test
cmp
shl
rcr
js
cmc
mov
fdiv
in
movs
mov
push
mov
(bad)
push
shl
or
or
shl
or
jmp
add
sbb
ins
in
xchg
adc
mov
or
add
push
ins
out
shl
push
ror
sub
ret
inc
or
jl
adc
test
or
cwde
popa
add
and
lahf
cli
xor
dec
jne
mov
lea
and
cmp
hlt
inc
add
push
xchg
stc
mov
push
gs
mov
xor
mov
dec
ret
and
pop
js
rol
out
mov
aam
and
inc
fwait
rcr
js
fs
rcl
jle
rol
inc
pop
adc
adc
and
dec
into
jge
mov
sub
pop
lock
inc
or
and
pop
mov
popf
bswap
or
inc
sbb
or
inc
hlt
dec
sete
mov
sbb
bound
rol
mov
hlt
add
js
xchg
cli
jno
stos
les
mov
dec
push
sub
cwde
sbb
jmp
adc
sbb
outs
dec
xor
or
sub
dec
dec
fsubr
add
fisubr
adc
and
fiadd
nop
es
xor
push
daa
mov
add
dec
jne
fbstp
mov
xchg
jge
or
mov
sbb
mov
mov
fsub
in
fimul
jae
sahf
sbb
fs
mov
outs
es
mov
(bad)
ror
push
cdq
cmp
add
loope
sbb
pop
cmp
xchg
adc
inc
mov
es
push
call
jmp
fs
mov
adc
je
(bad)
out
xor
in
in
inc
sub
adc
add
inc
loopne
pop
mov
push
mov
lods
or
in
int
fsub
mov
das
js
mov
pop
jmp
inc
cmp
mov
push
dec
jno
aaa
or
inc
fild
imul
add
jae
(bad)
ins
stos
and
or
lea
sub
cwde
mov
cmp
jmp
pop
or
cmp
sub
or
popf
sbb
inc
push
test
mov
or
add
and
or
mov
arpl
xchg
jge
ret
fsub
push
dec
gs
push
js
xchg
sub
and
es
jle
js
(bad)
rcl
jmp
stos
xchg
popf
jno
arpl
pop
jg
mov
repnz
ja
mov
mov
add
dec
dec
add
popa
test
add
push
lahf
sbb
jne
or
push
lea
dec
pop
clc
push
add
lea
sbb
in
pop
pop
ins
fs
push
inc
es
adc
cmp
add
pop
xchg
sbb
mov
call
pop
sub
add
add
cmp
jl
sub
and
sti
cwde
or
rcl
imul
and
clc
or
movs
adc
or
adc
dec
fmul
push
es
cmps
and
push
push
jmp
push
test
sub
mov
adc
xchg
mov
mov
mov
inc
mov
(bad)
call
sbb
mov
cdq
retf
imul
test
add
mov
jns
fadd
sar
dec
mov
jae
mov
ss
and
jne
ret
jne
and
dec
or
inc
sub
shl
lock
add
or
inc
adc
push
jecxz
jge
fwait
sub
adc
push
jo
outs
and
addr16
push
lock
int3
loop
outs
mov
xchg
sar
ss
push
adc
push
add
xchg
or
and
(bad)
aaa
xchg
pop
and
dec
leave
clc
inc
push
dec
pop
sub
daa
or
adc
or
sbb
and
jge
or
push
xor
lods
xchg
mov
sbb
pop
push
dec
cmp
leave
scas
lahf
vmread
xchg
add
or
mov
add
ds
sbb
or
mov
fidiv
ret
adc
inc
sar
iret
cmps
mov
mov
rol
jbe
pop
jge
mov
adc
xor
or
pop
push
or
mov
cwde
add
int3
cmp
jg
sub
out
cmp
push
test
or
or
stos
dec
mov
mov
test
test
pop
xchg
pusha
or
xor
mov
pop
pushf
jl
sbb
ret
shr
or
cmp
mov
loop
in
xor
rcr
sbb
cmp
lahf
lea
inc
cmp
and
mov
test
mov
data16
aad
and
loopne
in
rol
fist
scas
or
cmp
xchg
and
mov
push
movs
push
movs
push
imul
sbb
adc
je
push
adc
(bad)
test
jmp
stos
movs
sar
dec
jmp
les
arpl
add
inc
mov
or
sar
mov
scas
in
lock
or
jns
into
sahf
xor
cli
add
and
mov
pop
lods
push
dec
push
xor
jle
push
jmp
cmp
mov
pushf
or
cmp
pop
pop
mov
addr16
(bad)
bound
adc
cmp
lahf
int
or
fisttp
cmp
ins
xor
xor
pop
sub
push
fmul
jo
pop
jecxz
idiv
mov
xor
js
inc
and
dec
xor
and
mov
mov
or
add
pop
loopne
int
sbb
sub
scas
ror
dec
push
sub
xchg
in
mov
add
scas
jge
add
cmps
add
sub
jnp
xchg
fucomi
jge
and
lea
push
add
mov
inc
rcl
mov
adc
fwait
mov
nop
cmp
lea
js
mov
call
pop
mov
push
ret
loopne
cmp
sub
add
adc
sbb
sahf
sub
pop
cwde
call
inc
xor
ja
xor
loope
clc
cmp
fcomp
add
pop
jne
jo
inc
or
popf
jp
idiv
lea
sbb
test
adc
and
dec
jne
stos
cmps
mov
test
adc
push
sbb
dec
xchg
fstp
push
mov
je
add
fisttp
push
mov
adc
aad
dec
pop
cld
pop
xchg
retf
nop
sub
mov
lock
bound
jle
sti
inc
sub
shr
and
and
or
mov
inc
and
enter
sbb
and
loopne
sub
shl
scas
xchg
test
pop
cmp
sbb
call
shr
jecxz
or
mov
mov
lock
and
add
add
mov
lock
(bad)
ja
jb
shr
pop
mov
push
pop
cdq
sbb
jne
addr16
xchg
sbb
push
xor
mov
out
or
adc
fist
sbb
xor
adc
mov
jno
jg
sub
add
bound
push
inc
inc
js
ja
test
push
and
sbb
ja
ret
push
jne
pop
and
ss
sahf
xor
xchg
mov
sbb
pop
push
out
out
push
sub
jle
daa
(bad)
jne
es
sti
push
in
sub
mov
out
or
adc
mov
or
movs
xlat
sbb
xor
mov
xchg
fidiv
mov
pop
(bad)
xor
push
out
fwait
(bad)
iret
cs
sbb
ins
inc
aaa
jmp
pop
fdivr
pusha
pop
pusha
das
push
dec
push
cdq
fstp
or
jmp
cmp
nop
pop
lock
clc
je
fdivr
enter
aaa
jecxz
fist
dec
mov
add
fnstenv
jae
push
xor
clc
add
inc
mov
jo
push
push
add
sbb
push
mov
add
inc
hlt
add
and
or
ret
icebp
inc
retf
fmul
inc
add
push
push
je
test
mov
lock
sub
jb
int
call
push
aam
adc
test
and
add
and
mov
inc
dec
jne
jmp
int
ins
test
jbe
push
enter
cmp
icebp
add
xor
xchg
js
xor
xor
push
js
js
jmp
adc
out
call
mov
mov
dec
into
and
retf
xor
jmp
sbb
clc
in
int3
lods
retf
cwde
push
sub
add
sar
add
aad
shr
add
and
enter
sbb
mov
pop
in
addr16
xor
jbe
(bad)
pop
sbb
sti
sub
xor
mov
scas
or
push
jb
dec
cmp
and
adc
mov
call
and
push
jp
sbb
mov
lds
push
cmp
sub
sub
or
xor
pushf
ja
xor
pusha
adc
jg
add
dec
lock
sub
inc
pop
jmp
sbb
int3
inc
xchg
add
dec
mov
mov
mov
cwde
test
outs
outs
test
add
dec
outs
test
aaa
adc
data16
nop
push
pop
push
sbb
inc
add
ret
test
mov
fadd
sbb
sbb
push
sbb
dec
mov
call
sub
popf
loope
jo
movs
mov
fcom
inc
jmp
(bad)
mov
call
push
aam
jmp
and
pop
mov
jp
cmp
popf
jmp
popa
push
and
jmp
ret
dec
scas
or
inc
test
ss
sub
call
lock
lock
add
cmps
in
sbb
inc
mov
(bad)
rcr
mov
enter
adc
je
dec
lods
sub
fwait
adc
(bad)
sub
call
mov
jmp
pop
adc
xchg
sub
jo
into
outs
fadd
loope
xchg
adc
sahf
mov
in
sub
or
push
pop
test
loope
jg
fild
movs
adc
push
or
add
test
xchg
sub
inc
xchg
sub
dec
stos
sbb
inc
nop
xlat
icebp
mov
ss
xor
mov
cwde
sbb
cmp
mov
call
mov
scas
xor
sbb
mov
retf
sbb
scas
and
stos
cli
sbb
push
adc
movs
(bad)
cwde
add
adc
shr
es
mov
cmps
mov
ret
in
js
add
xor
add
push
outs
push
mov
jp
cmps
stos
sub
or
push
mov
add
add
out
mov
jbe
mov
sub
jbe
jge
or
push
ja
ss
push
and
sbb
mov
sbb
js
outs
xchg
(bad)
movs
(bad)
mov
ss
je
sub
xor
in
dec
es
daa
adc
and
dec
lea
add
pop
iret
lock
inc
sbb
inc
or
repz
inc
and
and
ret
les
xchg
sbb
inc
pop
ror
mov
clc
inc
cwde
xchg
scas
das
movs
in
les
inc
push
or
dec
mov
aaa
adc
pop
retf
adc
xor
push
outs
push
adc
cmp
sbb
mov
in
data16
dec
pop
cmc
pop
mov
push
add
mov
inc
rcr
movs
sti
in
push
scas
and
dec
je
ins
mov
je
or
loope
jmp
pop
test
sti
or
jmp
sbb
pop
gs
pop
xchg
aas
pop
dec
inc
cld
int
jae
cmp
push
mov
pop
xchg
or
sbb
cdq
adc
jno
jnp
mov
xor
pop
inc
and
dec
push
add
mov
adc
loopne
loope
mov
cmp
ror
int3
jo
mov
or
nop
(bad)
fsubr
xor
dec
lods
sub
bound
sub
cmps
cmp
stos
cmp
lahf
pop
(bad)
rol
pop
retf
sbb
push
fsub
and
sbb
add
add
push
add
sahf
push
add
mov
inc
mov
daa
jecxz
xor
ret
mov
adc
pop
lods
or
mov
add
mov
adc
or
arpl
xor
shr
or
or
and
loopne
ins
or
shl
push
dec
add
cdq
movs
fst
repnz
inc
dec
or
inc
sub
fdiv
loopne
ja
mov
mov
mov
and
dec
sti
test
adc
jge
add
mov
mov
xchg
mov
jl
xor
xor
repnz
ficom
sbb
loope
xchg
pusha
in
dec
addr16
or
cmp
or
push
add
add
shr
xchg
and
add
loopne
clc
rsqrtps
lods
push
pop
pop
mov
sub
pop
sbb
adc
add
rol
scas
cmp
add
add
add
ret
dec
push
rol
jp
add
cwde
js
(bad)
and
add
cdq
push
jne
daa
mov
clc
push
out
test
add
lods
pop
cmp
ja
enter
sbb
push
add
fsubr
test
sti
mov
push
lods
mov
add
add
ja
int
loop
push
jae
mov
dec
pop
add
pop
sbb
push
jne
jl
xor
jmp
cmp
ins
rcr
cli
jmp
(bad)
dec
cmp
push
sub
je
sub
popa
add
je
idiv
sbb
aad
xor
inc
cmp
or
cmp
mov
cmp
cmp
shl
sbb
add
and
mov
jnp
and
xor
add
add
movups
loopne
xor
lds
push
rcl
adc
inc
call
sahf
add
and
add
adc
outs
add
cmp
add
sub
bound
xor
clc
jbe
jmp
cld
push
mov
or
cmps
shr
aam
push
xchg
cmps
add
inc
add
add
das
push
xchg
sbb
add
xchg
cmp
retf
(bad)
xor
mov
add
ror
(bad)
mov
cmp
rcl
out
dec
clc
inc
data16
sub
lods
mov
addr16
mov
cwde
lahf
cmp
test
jb
inc
xor
sub
cmp
jb
mov
mov
rcl
xchg
adc
jmp
push
aas
pop
mov
jb
sbb
pop
inc
cwde
add
push
sub
add
inc
dec
jne
xchg
inc
data16
push
dec
dec
sbb
imul
pop
jmp
mov
sub
cmps
sub
mov
pop
repnz
jle
adc
sub
mov
mov
or
fnstcw
or
adc
ja
scas
adc
ror
or
mov
lds
sar
call
ins
and
mov
outs
cmp
xchg
pusha
shr
xchg
add
adc
nop
sub
xor
adc
or
push
call
daa
xchg
jle
push
rol
cmp
and
ja
bt
jae
(bad)
inc
jnp
shl
add
imul
and
mov
jmp
int
out
add
inc
mov
jo
mov
dec
push
cmp
xor
or
add
mov
xchg
sbb
adc
xchg
sbb
inc
(bad)
sbb
xchg
gs
out
icebp
and
adc
mov
add
mov
or
push
adc
push
cmp
sub
push
clc
mov
push
es
pop
adc
push
cld
and
cmps
mov
js
mov
add
shl
nop
dec
scas
dec
neg
rol
rol
push
adc
sahf
sti
inc
add
or
sub
(bad)
sbb
mov
jp
mov
jg
ss
je
or
test
jne
push
ret
push
adc
cmp
cmp
mov
pop
in
jno
or
out
sbb
adc
test
dec
cmp
mov
shl
and
cmp
mov
call
dec
test
jl
inc
push
inc
xchg
mov
ret
jnp
fild
or
mov
loope
dec
add
cmps
js
add
nop
and
call
inc
clc
push
add
fwait
std
mov
jne
call
add
push
ret
sub
mov
xor
push
add
ss
push
and
push
push
rcl
mov
lock
or
dec
and
adc
and
out
add
fucompp
and
push
push
and
push
xor
jle
js
pop
mov
and
lea
call
push
rep
pop
pushf
adc
jl
inc
cmp
pusha
xchg
or
sub
mov
push
dec
and
push
push
dec
sub
jl
push
adc
jbe
add
int3
rcl
push
push
mov
or
or
or
dec
sub
(bad)
cmps
adc
mov
movs
sub
je
inc
adc
sbb
cli
inc
je
cld
mov
mov
sbb
xchg
or
sub
lahf
std
rcr
add
popw
out
ss
and
pop
mov
mov
sub
sti
scas
rcl
rcl
cmp
jne
shl
mov
mov
test
je
mov
jbe
pop
dec
icebp
or
outs
cmp
je
mov
push
jb
push
xor
inc
cmovb
mov
stos
(bad)
jg
fldz
fld
fcompp
fstsw
sahf
or
call
jmp
add
cmp
sub
or
sbb
lock
and
jmp
jnp
out
push
jne
add
sbb
push
retf
pop
imul
cmp
fwait
and
popf
sub
(bad)
xchg
or
sbb
stos
jb
aad
icebp
ss
aas
test
mov
mul
stos
int
or
mov
fdivr
loopne
loope
mov
jle
mov
daa
fild
push
or
cmps
cs
sub
fdivp
outs
loopne
or
or
test
add
pop
push
clc
or
jne
outs
push
das
add
cmps
ret
inc
int
add
ret
lock
or
dec
or
adc
mov
mov
out
pop
imul
or
sahf
mov
jmp
add
je
or
pop
and
aaa
sar
mov
test
cmps
adc
or
repnz
fcmovb
mov
call
pshufw
into
jmp
sub
mov
std
call
out
adc
stos
rol
or
or
or
sbb
in
and
arpl
mov
jne
push
sub
ret
stos
fs
fst
scas
push
inc
jbe
icebp
jmp
adc
inc
jo
xor
scas
inc
mov
xor
sub
jb
fdiv
mov
dec
push
add
sbb
outs
mov
xor
or
cmp
jne
call
add
adc
jne
or
test
(bad)
test
nop
adc
cmp
add
mov
test
push
xchg
adc
sbb
loopne
lds
jo
shl
inc
rol
add
push
jne
or
sub
pavgb
xchg
inc
pop
adc
jle
sbb
and
shl
mov
cmp
shl
jno
loop
jo
out
pop
fiadd
dec
popf
lock
add
int
ret
pop
push
shl
or
repz
jle
jmp
xchg
adc
mov
dec
sub
inc
mov
pop
sub
mov
add
dec
mov
pop
or
add
xchg
mov
jo
dec
or
pop
dec
jb
jo
adc
mov
xor
xchg
jg
push
pop
std
pop
cmp
into
add
add
ins
movs
jle
adc
mov
add
push
aad
mov
mov
mov
adc
out
sbb
ret
and
sbb
dec
cmp
cmp
loopne
xchg
xchg
jmp
push
ret
mov
pop
test
fld
dec
mov
dec
lar
mov
pop
movzx
lea
adc
inc
ror
add
sub
and
fmul
jo
int3
or
or
pop
das
jo
mov
add
jne
int3
or
and
inc
push
push
ret
sar
jo
inc
cmps
lds
and
push
cs
or
pop
cmp
enter
xchg
fadd
ja
xchg
je
test
aas
jle
daa
sbb
aas
xchg
addr16
jecxz
cli
outs
jge
(bad)
or
dec
cmp
ja
mov
and
and
add
add
lds
or
mov
out
cmp
movs
movs
icebp
cli
jecxz
xchg
add
xor
push
cmps
add
mov
fild
sub
fstp
fwait
or
(bad)
fsubr
cmp
fwait
push
xchg
nop
sbb
add
cmp
frstor
and
test
call
into
test
inc
lahf
pop
mov
xchg
cmp
or
adc
(bad)
not
imul
or
xor
ins
adc
je
push
pop
rol
cmp
sbb
pop
inc
not
pop
or
add
add
add
xor
add
and
mov
std
jno
pop
sub
xor
sub
dec
adc
jecxz
je
js
setne
mov
or
jne
sub
add
sbb
sbb
aaa
das
mov
(bad)
retf
lods
add
je
pop
fdivr
adc
or
push
add
fsubrp
pop
adc
leave
inc
cmp
movs
dec
daa
jmp
fistp
dec
and
popa
enter
jns
sbb
retf
mov
adc
sbb
sub
pusha
xchg
add
add
fwait
sbb
xor
xor
fstp
xchg
mov
mov
jno
jnp
add
cmp
pop
mov
add
sbb
mov
pop
ror
push
scas
mov
push
push
push
push
mov
cdq
jbe
jne
adc
add
mov
inc
jne
sbb
mov
add
out
lods
loope
jmp
mov
mov
cmp
cmp
mov
test
ins
int3
jge
or
inc
push
fild
call
sbb
push
fld1
popa
test
jg
add
cwde
push
push
mov
inc
leave
mov
rol
out
mov
sti
(bad)
mov
fsub
or
aaa
jge
dec
rep
mov
add
cmp
jne
lea
in
sbb
or
adc
adc
outs
mov
mov
mov
cmp
call
lods
adc
cwde
cmp
or
call
cwde
dec
mov
mov
mov
sub
test
push
pop
cs
loopne
das
aam
mov
push
jne
pop
xchg
mov
movzx
xor
add
pop
and
inc
inc
push
inc
xor
jae
inc
xor
push
aaa
je
push
xor
mov
pop
ins
(bad)
jb
pop
pop
mov
mov
add
cmp
in
lods
or
mov
lods
data16
sbb
cld
adc
add
aad
test
adc
jne
add
out
mov
adc
xchg
mov
dec
inc
jl
xor
mov
retf
fild
xor
fmul
fild
push
cmc
mov
pop
adc
jne
cmp
inc
les
(bad)
daa
sar
adc
or
or
mov
jmp
not
dec
les
push
mov
push
add
add
or
rcr
ret
sbb
icebp
push
mov
xor
xchg
xor
outs
test
sbb
inc
js
inc
add
adc
lahf
lea
ss
push
lods
aad
inc
dec
mov
int3
add
jle
into
test
sti
lods
mov
push
int3
shl
shr
mov
jg
mov
mov
dec
jp
enter
(bad)
push
call
inc
or
test
js
adc
pop
xor
jl
inc
sub
je
jmp
add
jg
stc
dec
or
call
outs
outs
ret
pop
sar
aam
mov
lods
shr
enter
call
shl
sub
xor
jmp
mov
cld
push
ss
(bad)
sar
rcr
jae
xchg
xor
inc
pusha
retf
popf
mov
(bad)
and
ins
sub
jecxz
call
add
xor
cmps
in
loope
(bad)
mov
pop
cmp
jne
je
fsub
pop
push
mov
imul
std
or
push
xchg
outs
stc
ja
push
mov
sub
cmps
mov
xchg
jle
dec
inc
jmp
jp
dec
xchg
mov
test
mov
clc
mov
adc
scas
or
push
adc
shl
popa
sbb
jo
adc
adc
in
jno
adc
rol
nop
imul
imul
nop
cmp
inc
or
call
pusha
test
cmp
dec
xor
adc
mov
idiv
or
inc
fld
push
jp
lea
lea
ret
jmp
aaa
out
xor
jmp
and
test
or
and
mov
lods
add
shl
dec
sub
lea
push
push
sbb
shl
cld
sub
aas
dec
lea
mov
jg
push
jmp
push
xor
sbb
jge
xchg
dec
sub
movs
or
lea
sub
(bad)
mov
sub
push
push
push
mov
outs
or
mov
dec
cmp
dec
jne
fnsave
jb
sub
in
cmp
movs
mov
mov
cmp
mov
sub
push
js
shl
daa
repnz
fs
inc
loopne
enter
sub
iret
push
adc
dec
mov
inc
rep
jp
mov
fmul
add
bound
or
enter
cmp
aas
mov
retf
mov
aad
pop
xor
dec
addr16
fsub
adc
or
push
add
mov
in
add
mov
popa
das
sbb
sti
push
stc
add
add
mov
pop
inc
xor
mov
or
je
mov
sar
aaa
cmp
int3
mov
shl
add
call
jbe
push
push
push
dec
and
sbb
in
inc
fidivr
add
add
and
push
and
outs
call
bound
xchg
add
pop
mov
test
ins
shl
and
adc
fadd
outs
les
adc
mov
or
dec
inc
das
mov
outs
in
ret
jecxz
stc
dec
je
xor
xor
push
or
dec
adc
lea
dec
repz
js
adc
xor
fadd
add
mov
xor
mov
adc
adc
cwde
enter
sahf
mov
mov
jmp
add
or
inc
dec
add
inc
add
outs
mov
adc
das
sub
push
das
ja
lods
frstor
pop
dec
das
pop
inc
add
xor
add
(bad)
call
cmp
adc
lods
push
mov
(bad)
aaa
outs
sub
aaa
call
pop
add
cwde
fcom
(bad)
fnstcw
xor
enter
mov
and
dec
in
jnp
sbb
mov
cmp
sub
add
pop
pop
arpl
out
sbb
or
bound
push
ss
cmc
pop
sub
adc
cmp
rol
stc
jae
popa
out
movs
jecxz
lods
ret
retf
push
loopne
adc
jecxz
(bad)
lock
sbb
(bad)
ja
outs
shr
mov
add
xchg
mov
shl
lock
push
cmp
xchg
std
pop
lock
adc
inc
xor
cmps
ret
and
push
sub
pop
or
loope
add
inc
add
or
mov
or
sub
jb
mov
or
or
mov
adc
ss
cmps
add
pop
adc
or
push
or
and
jge
jae
movs
in
dec
jmp
dec
inc
jb
jp
add
fs
jae
inc
inc
push
in
or
mov
jg
push
mov
sub
mul
push
push
mov
add
jmp
das
jmp
inc
cmp
and
pop
mov
adc
pop
jmp
xchg
test
ins
bound
cmp
cmp
cmp
inc
pop
and
add
and
cmps
fiadd
xor
in
sub
mov
or
cmps
les
cmps
push
xor
loope
cmp
cmp
mov
mov
lods
sbb
mov
cmp
push
pop
dec
add
call
clc
adc
scas
daa
fstp
cmp
add
sbb
add
push
xlat
icebp
iret
push
mov
jmp
mov
inc
test
sub
jb
test
pop
jmp
mov
jmp
add
dec
pushf
adc
enter
jnp
cmp
jns
or
pop
push
aad
adc
xor
sar
add
rcl
mov
js
pop
xchg
mov
shl
pop
add
or
mov
cmp
dec
ror
push
ins
pop
pop
push
mov
xor
adc
xor
ret
fcom
jp
inc
dec
js
add
xchg
fadd
in
or
cdq
cmp
or
pop
adc
sub
in
call
mov
ret
push
pop
xor
jns
std
add
test
ret
xlat
rcr
add
sub
jnp
adc
adc
daa
cmp
cmp
mov
or
add
lock
cld
pop
sbb
ret
fsub
inc
inc
sbb
int
mov
test
add
sub
mov
(bad)
lock
mov
sbb
mov
je
loopne
scas
mov
and
lea
scas
sbb
test
sub
cmp
retf
push
dec
or
js
and
xor
xor
lock
pop
lock
loopne
cs
mov
push
xor
idiv
nop
int
and
jne
push
and
pop
pop
test
dec
sbb
sbb
mov
mov
jmp
loopne
inc
adc
test
movs
add
imul
data16
and
outs
mul
test
es
dec
test
jl
inc
lods
outs
fcom
int
out
and
mov
cmp
data16
dec
adc
dec
jne
mov
mov
pop
(bad)
aas
sub
int3
jne
xor
sub
jo
outs
mov
and
outs
mov
push
add
cwde
call
or
or
xor
pushf
popf
add
cmp
addr16
or
mov
sbb
es
clc
dec
push
adc
pop
inc
mov
dec
sbb
inc
repnz
loopne
mov
or
arpl
jb
xor
ret
mov
jo
(bad)
inc
dec
jne
lea
lea
mov
add
pop
pop
(bad)
push
xchg
outs
or
xchg
je
ds
add
imul
push
inc
shl
mov
outs
pop
ret
lock
popa
mov
ss
mov
mov
adc
sub
mov
mov
(bad)
adc
mov
fwait
push
cwde
loope
pop
dec
fisub
aas
das
dec
loop
mov
lock
clc
adc
inc
cmp
nop
jmp
fucomi
add
js
xchg
mov
mov
xchg
fsub
cmp
push
adc
jmp
test
add
pop
btr
jmp
idiv
(bad)
(bad)
fcom
add
adc
or
js
adc
add
inc
cmp
xor
jae
fsub
les
add
imul
fdivr
or
shl
inc
sub
xor
and
sub
add
int3
jecxz
xchg
shl
add
cmp
and
cmp
mov
fsubrp
or
pop
fsubr
and
iret
adc
scas
test
dec
jmp
jecxz
mov
add
lods
mov
ret
arpl
stos
fnstenv
test
mov
xchg
xor
xchg
xor
sub
sar
loopne
sbb
push
sbb
push
mov
pop
inc
ja
pop
adc
cli
ficom
or
xlat
push
add
ret
rol
and
adc
ja
mov
outs
or
mov
or
mov
ret
jae
sub
mov
jb
push
inc
mov
jo
data16
out
mov
test
cmps
cld
mov
and
imul
or
cmp
(bad)
fsub
add
loopne
jb
retf
pushf
adc
or
dec
fiadd
lods
jmp
xchg
fwait
loope
push
pusha
cmps
pop
mov
add
or
int
mov
ins
or
ret
dec
hlt
xor
sbb
jle
xor
in
pop
out
cmp
jbe
iretw
adc
or
cwde
mov
add
mov
inc
sbb
test
cdq
idiv
pop
mov
jo
sahf
pop
das
rol
lods
punpcklwd
mov
sub
out
shr
ja
sar
das
mov
test
and
scas
and
jbe
dec
repz
je
out
mov
push
scas
shl
out
push
movs
sti
jmp
test
jmp
loop
retf
in
push
ror
loop
loop
or
adc
adc
push
ret
ins
push
in
add
cwde
ror
and
rcr
out
jmp
mov
jae
imul
inc
in
(bad)
mov
iret
adc
ret
test
jg
or
xchg
dec
pop
sbb
into
jb
gs
mov
sub
jp
out
bound
xchg
out
fiadd
or
xchg
add
or
out
or
cmp
mov
mov
and
out
jle
or
cmp
or
gs
and
lea
cmp
ss
mov
jmp
call
jmp
enter
jmp
shl
cmp
pop
mov
out
xchg
retf
cmps
add
fmul
(bad)
in
xchg
and
xor
adc
daa
cs
sbb
push
or
ret
push
dec
clc
push
mov
cld
(bad)
push
jp
div
jmp
cmps
mov
repnz
add
rcl
pusha
jle
add
mov
sub
add
or
adc
adc
js
inc
inc
sbb
and
add
out
sbb
cdq
sbb
mov
(bad)
adc
fadd
jnp
loopne
fsubr
pop
cs
mov
inc
loopne
pop
or
clc
inc
clc
inc
add
ins
clc
fwait
test
shl
mov
sar
call
je
not
sbb
shl
and
call
rol
popa
sbb
mov
adc
pop
push
or
leave
arpl
sub
scas
sti
call
xor
dec
hlt
push
call
or
add
push
dec
enter
push
dec
jne
int3
lock
je
pop
adc
int
sub
and
fsub
xor
ret
sahf
retf
popf
or
dec
rcr
cmps
ret
inc
les
popa
push
jnp
sub
mov
mov
mov
dec
mov
rol
adc
jmp
adc
and
nop
mov
leave
pop
and
or
fadd
and
sub
and
dec
mov
lock
pop
and
add
jbe
inc
adc
dec
or
push
mov
fcomp
mov
or
les
sbb
test
pushf
repnz
and
ins
pop
sbb
les
add
add
mov
ret
mov
scas
jo
cmps
dec
push
jb
dec
add
movs
sbb
cmp
jl
mov
pop
dec
pop
xchg
arpl
es
sbb
int
mov
(bad)
add
add
nop
dec
sub
and
rcr
in
push
jnp
add
fnstcw
sbb
push
test
test
add
inc
mov
add
aad
adc
or
inc
inc
aas
push
push
lods
repnz
fadd
outs
add
inc
mov
repz
fmul
ficomp
add
mov
mov
fistp
cmps
cs
pop
cwde
loopne
mov
cmp
ss
mov
mov
imul
mov
inc
dec
jp
mov
sub
or
inc
add
or
inc
add
or
test
and
mov
mov
mov
call
int
sar
cmp
lods
adc
mov
mov
sbb
addr16
add
sbb
add
mov
gs
mov
int
test
packssdw
test
inc
xchg
inc
test
inc
mov
sub
sub
aaa
and
xchg
mov
sub
xor
pop
mov
xchg
sbb
lahf
jge
inc
xchg
pop
mov
sub
push
rol
sub
add
add
add
outs
cli
stc
pop
lods
push
fild
sti
inc
call
push
add
xor
pop
fsubr
mov
jo
fmul
adc
mov
push
aad
js
add
pusha
ins
mov
clc
addr16
push
add
push
maxps
mov
dec
inc
je
add
repnz
(bad)
fstp
es
das
fimul
sbb
fcomi
push
cmp
imul
push
movs
sbb
les
sti
and
xchg
pop
test
add
pusha
cmp
ins
adc
add
popa
test
inc
dec
gs
out
imul
inc
push
imul
adc
adc
or
jb
jns
arpl
sub
add
mov
dec
adc
push
dec
push
inc
inc
test
(bad)
jmp
inc
gs
jb
jns
in
or
loopne
or
push
gs
mov
pop
add
fsub
(bad)
dec
xor
ins
cs
ins
popa
imul
addr16
lock
adc
or
jns
popa
jl
arpl
add
add
and
jb
outs
jb
outs
arpl
outs
xor
test
cmp
stos
inc
cmp
or
push
shl
mul
push
xchg
or
xchg
lods
mov
lods
std
push
or
inc
jne
ins
push
imul
or
stos
jne
in
jb
hlt
or
inc
movs
push
jl
adc
dec
imul
rcl
dec
or
pop
push
xor
inc
jbe
in
ss
cmp
lods
push
add
clc
dec
hlt
push
data16
das
mov
iret
pop
inc
into
mov
sti
fiadd
in
cmovnp
cld
les
cmp
pop
jnp
std
pop
inc
push
hlt
dec
les
imul
push
nop
mov
pop
sti
call
mov
dec
push
adc
fidiv
push
inc
sysenter
inc
cmp
push
or
(bad)
test
and
test
push
lods
pusha
jbe
jnp
mov
sbb
add
push
push
cmps
ret
repnz
cmp
adc
push
shl
dec
icebp
xor
jo
dec
xor
inc
mov
and
fs
das
or
stos
jl
inc
sbb
or
mov
ins
jo
ss
cmp
scas
mov
push
not
outs
outs
jle
sub
fisttp
loopne
ret
cs
pop
out
mov
(bad)
lock
popf
add
sti
out
fsub
addr16
jae
jbe
inc
imul
jnp
cmp
inc
dec
outs
mov
add
aad
pusha
mov
dec
xor
xchg
or
js
sub
jns
arpl
add
jmp
in
push
inc
adc
push
inc
mov
cmp
(bad)
jae
gs
movhps
cs
and
prefetchnta
aas
sbb
xchg
jmp
add
or
add
ret
ret
mov
(bad)
adc
ret
adc
bound
aam
inc
icebp
inc
int3
mov
inc
outs
sub
inc
sub
or
pop
pop
xor
xlat
add
add
or
mov
ss
popa
das
add
dec
add
push
sub
and
push
outs
jne
or
adc
(bad)
jge
dec
outs
popa
fs
mov
push
mov
or
jnp
xor
enter
icebp
or
popa
in
outs
ret
ds
les
popa
pop
repz
fst
bound
jb
sbb
or
lea
push
adc
or
inc
clc
mov
in
xor
or
gs
loopne
cmps
sahf
shl
adc
add
add
add
loopne
push
pop
xchg
push
ror
enter
or
pop
jo
or
in
stc
daa
push
jp
or
call
and
or
call
stos
es
aas
inc
inc
adc
int3
fnsave
adc
(bad)
adc
mov
(bad)
jmp
cwde
add
or
jg
pop
movs
mov
pop
call
jge
(bad)
in
dec
add
cdq
adc
sub
das
aaa
pushf
retf
xchg
cwde
cmp
jbe
inc
sar
int
(bad)
jbe
jae
push
imul
mov
xor
add
pop
pop
jecxz
dec
ins
das
adc
rol
ins
cli
into
in
ss
add
cmp
and
call
mov
loopne
add
cmp
fadd
add
test
sahf
aad
add
sbb
push
popa
mov
inc
inc
addr16
mov
add
sub
cwde
xor
ret
inc
cld
push
or
push
ins
clc
loopne
je
pop
mov
cli
mov
pushf
push
xor
movs
dec
mov
cli
xchg
aad
pop
add
add
mov
xchg
dec
ins
jp
cmp
push
fs
mov
les
mov
and
int
clc
fisub
pop
mov
inc
dec
inc
aas
adc
fs
push
test
je
add
jne
outs
clc
mov
or
jbe
adc
(bad)
imul
cld
in
mov
mov
or
or
mov
mov
sbb
or
or
inc
push
add
es
inc
adc
fsubr
sbb
fidiv
push
fs
popf
add
xor
add
outs
dec
cmp
add
popa
push
inc
xor
ror
push
push
pop
in
or
inc
and
inc
ja
ret
inc
(bad)
mov
xor
(bad)
in
inc
dec
sub
dec
inc
jg
mov
add
test
enter
inc
add
or
add
je
fmul
mov
dec
js
(bad)
push
or
popa
iret
mov
cmp
sbb
adc
jo
out
into
xchg
or
jae
mov
ja
shl
inc
sub
ret
or
sub
add
pop
push
(bad)
adc
loope
adc
test
push
or
iret
cmc
fsubr
sub
adc
pop
in
clc
cmp
add
jb
fist
outs
or
jmp
jl
or
xacquire
push
pop
mov
dec
sbb
inc
cmp
sbb
scas
and
inc
and
sbb
je
sar
ror
in
outs
mov
inc
fild
add
fdivrp
or
rcr
add
inc
iret
inc
(bad)
adc
push
les
cmp
je
mov
shl
xchg
iret
mov
mov
clc
add
popf
shl
loop
xchg
rcr
adc
ret
std
and
sar
jnp
enter
mov
mov
push
lea
add
cmp
(bad)
mov
xchg
leave
mov
mov
xchg
and
pop
xchg
mov
and
cmp
push
add
mov
popf
mov
or
sbb
push
pcmpeqw
fcmovnb
add
std
jmp
mov
fisttp
xchg
rcl
cmp
fmul
je
or
lods
adc
popa
fild
retf
ss
call
dec
pop
jmp
add
movs
push
cmp
fnsave
jmp
cmc
sbb
ss
cmp
ret
mov
add
inc
mov
cld
sbb
dec
xlat
cmp
sbb
push
dec
ds
es
out
add
nop
adc
das
adc
dec
imul
idiv
mov
mov
or
xor
(bad)
mov
outs
inc
push
int
and
jo
push
adc
sbb
adc
jle
pusha
cdq
in
jmp
jmp
mov
cmp
shr
int
js
int3
call
pop
leave
mov
jmp
movs
(bad)
hlt
jmp
stos
cmp
cmp
sbb
fld
adc
rcr
xchg
or
inc
movs
add
ret
jmp
nop
sub
mul
pop
and
pop
push
not
lea
fsubr
mov
add
aam
dec
retf
lea
ins
sbb
test
js
jae
and
cmp
and
ins
jno
inc
sub
dec
fwait
rol
hlt
jnp
mov
xchg
inc
mov
inc
iret
call
daa
mov
mov
mov
test
lock
jne
inc
fimul
push
test
retf
mov
sbb
adc
imul
and
and
push
repnz
add
dec
sbb
pusha
nop
and
rol
xor
mov
dec
adc
jmp
adc
bound
pop
inc
sub
mov
rol
adc
add
mov
ins
loopne
enter
cmp
jo
add
or
inc
pop
inc
or
push
inc
mov
test
ret
inc
pusha
aaa
rol
push
xchg
fdivr
xor
sub
cs
fild
add
call
in
in
jmp
(bad)
or
or
xor
sbb
(bad)
xchg
sbb
jo
(bad)
xor
xor
or
jmp
add
fdivr
jo
into
and
lds
ret
div
add
out
add
hlt
or
js
cmp
jb
cmps
(bad)
hlt
jmp
retf
retf
or
cmps
jmp
dec
push
inc
mov
or
fs
jnp
scas
push
pop
cmp
cmp
mov
hlt
mov
xchg
inc
add
push
rcr
mov
xchg
movs
mov
dec
test
ss
lods
lock
stc
dec
sub
mov
(bad)
imul
cs
xchg
mov
adc
mov
clc
mov
lahf
pop
jle
push
mov
jp
std
in
and
sub
cmp
sete
icebp
jbe
add
retf
mov
pushf
mov
xor
sti
icebp
pop
clc
jg
clc
mov
movzx
and
mov
mov
sub
jne
and
dec
test
jl
call
cmp
loopne
mov
stos
add
mov
add
inc
sbb
loope
dec
pop
sbb
or
add
pusha
outs
pusha
add
push
(bad)
mov
jecxz
ds
ret
loope
andnps
jl
or
and
dec
sub
test
jle
jp
je
push
mov
mov
mov
call
mov
dec
(bad)
jl
in
cli
jbe
inc
sub
mov
adc
cli
dec
push
add
test
push
lea
add
mov
inc
mov
lock
adc
pop
cmp
push
dec
and
imul
mov
je
xrelease
dec
lods
or
daa
add
mov
es
push
pop
push
adc
push
les
scas
cs
xlat
sub
xchg
jmp
add
test
loopne
ror
test
jnp
and
inc
mov
pop
adc
jne
xchg
repz
(bad)
push
gs
push
shl
dec
xor
xor
and
sbb
sbb
sar
mov
and
push
or
cmps
cli
add
mov
popa
jmp
inc
das
and
outs
push
xor
jae
pop
loope
mov
outs
xlat
dec
push
push
mov
and
nop
add
or
and
imul
jne
mov
js
das
sti
push
adc
sub
nop
aas
aam
sub
cmp
popf
nop
repz
or
and
and
fcom
ins
sub
call
cmp
and
add
and
je
sbb
loope
in
sbb
add
mov
push
sbb
sub
pop
pop
fcom
not
(bad)
nop
dec
mov
adc
adc
mov
mov
push
mov
jmp
shr
cli
cmp
mov
test
adc
or
jne
pop
cwde
shr
pusha
je
mov
int3
and
add
popa
je
adc
pop
cmp
(bad)
and
test
push
lea
fisttp
sub
js
jle
adc
add
das
mov
in
aaa
inc
xchg
mov
mov
mov
cmc
add
ss
push
add
sti
cmp
jecxz
ret
idiv
add
aas
jb
adc
mov
iret
sbb
adc
add
dec
cmp
pop
or
cmp
or
adc
xor
inc
ins
outs
pop
add
cmps
je
mov
fidiv
mov
or
cwde
ret
pop
adc
addr16
pop
dec
loopne
sbb
dec
or
test
pop
ret
adc
std
mov
int3
sti
adc
rcr
push
nop
bound
xchg
test
enter
sbb
cmp
das
dec
sub
ja
adc
jmp
or
inc
ds
jmp
pop
dec
mov
loope
mov
xchg
push
jecxz
sub
xchg
int3
pop
inc
add
ror
lods
mov
adc
sahf
adc
call
xor
aad
and
sbb
or
adc
sub
cdq
sub
xchg
into
neg
in
inc
shl
jns
lock
add
push
adc
jo
stos
dec
push
xor
jmp
push
adc
scas
inc
std
or
pop
fistp
rcr
sub
pop
xor
(bad)
icebp
cmp
lds
nop
dec
int
and
shr
or
ret
inc
push
not
xor
push
xor
push
mov
fisub
enter
inc
xor
xlat
mov
(bad)
jb
sub
sbb
inc
cld
adc
ja
cmp
test
movs
retf
mov
inc
clc
adc
std
cmp
or
add
mov
loop
inc
sbb
sbb
pop
pop
repz
(bad)
push
nop
or
jg
push
test
or
pop
jno
call
into
mov
xchg
pop
jbe
adc
fs
test
or
ins
test
sbb
test
xchg
outs
ins
pop
pop
sub
clc
mov
or
test
(bad)
cdq
push
mov
inc
jecxz
cwde
mov
test
aas
sbb
jle
dec
pushf
retf
test
sbb
test
ret
pop
hlt
movs
arpl
movs
daa
jne
into
lea
dec
sbb
cwde
xchg
adc
bound
push
adc
enter
shl
mov
outs
inc
fcomp
inc
dec
gs
retf
hlt
add
and
test
mov
addr16
popa
mov
mov
inc
and
add
push
(bad)
cmp
mov
cmp
xchg
push
cmp
aas
popa
push
push
adc
push
jmp
je
cdq
hlt
ror
(bad)
sub
ret
dec
into
imul
aam
add
dec
cmp
das
jbe
add
xor
sub
sbb
popf
mov
and
call
cmp
pop
dec
lods
add
imul
jne
jp
add
loopne
xchg
pop
push
cs
ins
call
ins
xor
mov
sub
ds
cmp
pop
fistp
pop
mov
out
and
jmp
inc
dec
shr
sbb
inc
inc
imul
push
shr
xchg
xchg
ja
ret
or
jge
ja
dec
dec
dec
mov
xlat
push
clc
test
js
test
sahf
add
and
and
add
pop
push
or
mov
and
(bad)
push
lock
cmp
mov
call
cmc
mov
push
sub
mov
(bad)
jg
add
cli
ds
je
mov
mov
sub
jmp
in
loope
adc
mov
pop
cwde
sti
xor
mov
pusha
adc
in
mov
add
sub
out
aaa
fstp
movs
mov
inc
mov
cdq
lods
xchg
sbb
test
xor
add
in
dec
or
adc
mov
inc
xor
pop
mov
cmp
ins
mov
add
xor
out
adc
cmp
jle
idiv
bound
sahf
je
dec
je
mov
or
or
jmp
in
lods
sub
pusha
sub
ja
cmps
mov
popa
sub
jb
je
jmp
fsubr
std
rol
jmp
or
xor
inc
jb
arpl
rol
loop
add
pushf
loopne
push
jmp
jmp
mov
pop
sbb
push
clc
adc
test
(bad)
jne
push
add
cmp
dec
movs
fst
inc
cs
inc
(bad)
aaa
in
xchg
inc
icebp
jmp
loop
(bad)
sbb
mov
jecxz
cmp
das
outs
test
jl
rcr
arpl
pop
push
cmp
retf
lahf
sbb
push
icebp
jmp
adc
xor
clc
inc
add
jne
(bad)
enter
dec
mov
sub
pop
xor
icebp
inc
push
shl
push
fdiv
aas
inc
in
inc
inc
sbb
or
fsubr
dec
push
andnps
or
xor
mov
add
inc
rcl
push
dec
ins
xchg
out
shl
mov
cmp
leave
push
loopne
je
adc
clc
push
inc
pop
test
add
mov
sbb
je
dec
push
jmp
pop
jmp
or
and
jnp
xor
mov
mov
or
in
outs
sbb
pop
pushf
clc
or
mov
and
jae
out
xor
add
add
pop
xlat
sbb
push
ret
jo
mov
(bad)
push
push
mov
push
or
arpl
out
push
cmp
rcr
fiadd
in
cmp
stc
sub
rol
daa
pusha
out
xor
sub
ror
popa
pushf
cmp
inc
adc
addr16
xchg
adc
inc
je
imul
pop
into
or
xor
mov
call
push
mov
rol
and
ffree
iret
jmp
cmp
cmp
and
adc
and
cs
inc
xor
call
cmp
loop
ret
pop
mov
jo
mov
neg
push
mov
ror
mov
test
loopne
leave
call
lods
xchg
mov
cmps
jg
pop
bound
push
mov
or
add
es
test
add
add
jae
dec
push
pop
jl
ret
fs
adc
outs
and
nop
call
fidivr
bound
fimul
or
rcl
neg
mov
sbb
and
adc
cld
push
mov
cmp
jbe
sbb
fwait
cmp
add
sub
push
and
and
out
add
stos
pop
sti
xor
mov
pusha
popa
fstp
or
push
add
sbb
add
mov
or
jne
dec
mov
inc
xor
add
add
add
sbb
mov
mov
fsubp
lock
call
jge
xchg
lds
xor
fcom
mov
jnp
push
rol
ss
outs
lahf
dec
dec
add
add
pop
adc
adc
and
(bad)
cmp
inc
jae
test
mov
and
pop
aas
out
mov
adc
hlt
mov
sub
sbb
mov
pop
div
sar
xchg
mov
xor
loopne
sbb
fbld
pop
cmp
jge
mov
jmp
mov
dec
in
xor
mov
push
push
shl
add
loopne
mov
sub
sbb
and
cmp
jae
inc
sub
jmp
mov
adc
jbe
inc
jns
push
cmp
jle
sbb
xor
dec
fidivr
pop
js
daa
lock
lea
test
jbe
mov
mov
jp
hlt
dec
push
ja
lahf
mov
stos
dec
test
or
xchg
cmps
mov
add
mov
add
and
inc
mov
xor
mov
nop
adc
push
leave
jmp
cmp
or
inc
dec
mov
or
cmp
mov
jnp
std
push
mov
mov
aad
xlat
mov
adc
push
sbb
cmp
or
lock
dec
push
jnp
mov
mov
and
mov
adc
iret
js
mov
leave
or
jg
nop
retf
dec
dec
data16
push
push
mov
cmp
je
mov
jo
cmp
sbb
pusha
clc
or
or
pop
dec
repnz
push
mov
out
ror
add
mov
adc
pop
push
shl
pop
dec
int3
push
out
arpl
nop
sbb
sbb
inc
or
(bad)
mov
pop
fiadd
jl
mov
xchg
push
rcr
call
shl
jmp
mov
div
inc
cmp
jl
fimul
mov
lea
pushf
or
push
xor
dec
neg
lods
pop
dec
jnp
xor
int3
mov
or
add
cmp
pop
pop
xor
xor
dec
adc
jo
pop
aad
sbb
push
xchg
mov
ror
jo
fs
out
push
or
scas
and
sbb
call
(bad)
pusha
add
nop
mov
sbb
sub
scas
pop
stos
imul
mov
mov
ja
(bad)
cmp
jle
or
adc
mov
rcr
retf
jl
adc
bound
pop
fsubr
sbb
ret
dec
inc
adc
push
sahf
cmp
push
or
jl
push
sbb
push
xor
fild
imul
push
push
xor
mov
xor
mov
adc
push
xor
pop
add
dec
adc
ja
add
bound
into
clc
add
add
clc
cmp
ja
inc
or
add
pop
sbb
(bad)
cmp
inc
mov
movs
clc
jbe
cmp
xchg
push
test
sahf
or
xor
push
adc
add
in
or
loope
popa
add
out
dec
sbb
clc
data16
sub
pusha
cmps
add
push
xor
adc
jnp
sbb
jae
jae
cmp
rcr
jmp
cmp
in
scas
ss
add
and
push
test
sub
sub
(bad)
jbe
pusha
div
mov
add
jle
mov
out
jmp
addr16
lods
dec
add
or
(bad)
jl
push
xchg
add
inc
sbb
cmp
jb
or
xor
mov
bound
lea
rcl
or
dec
cmp
data16
adc
jl
inc
mov
dec
adc
sar
and
inc
add
mov
sbb
dec
sbb
add
push
inc
cmp
stos
(bad)
cmp
dec
push
cmps
push
xor
jle
adc
inc
mov
dec
xchg
cmp
jo
mov
pushf
pop
and
add
rol
or
cld
retf
(bad)
cmps
dec
dec
ja
or
hlt
retf
mov
fld
xor
mov
dec
cmp
xchg
jne
lds
pusha
jne
outs
mov
mov
push
sub
hlt
dec
cs
mov
out
push
mov
mov
inc
push
imul
shld
jnp
nop
imul
lock
data16
add
popf
dec
jl
jmp
mov
stos
imul
sbb
ins
mov
rcl
jmp
xor
mov
push
sbb
mov
push
pop
push
or
lock
mov
sbb
test
adc
sbb
js
push
scas
jl
ins
sbb
clc
pop
sub
sbb
cmp
cmp
lock
jle
dec
or
test
jge
inc
jp
test
call
cmp
or
mov
adc
and
wrmsr
pop
js
xchg
js
mov
sub
add
sub
push
aaa
leave
or
adc
nop
mov
mov
push
fisubr
jg
adc
dec
pop
fadd
pop
enter
sbb
shl
loope
cmp
cmp
stos
adc
and
pop
or
cmp
fistp
xchg
sbb
sbb
mov
dec
cli
inc
mov
jg
dec
mov
ficom
rcl
lea
or
push
or
mov
adc
dec
or
mov
jae
adc
mov
cmp
ss
adc
adc
lods
jno
add
and
cwde
idiv
in
into
fmul
and
push
cmp
push
pusha
imul
or
ficom
test
das
jle
das
scas
int
ja
dec
imul
imul
cdq
loop
mov
es
daa
sub
shl
and
loope
jl
pop
pop
scas
push
add
dec
or
add
inc
or
fsub
pop
xchg
xchg
or
pop
ficomp
or
imul
and
retf
and
sbb
cmp
jne
add
inc
fisttp
ins
lds
pushf
or
dec
dec
inc
inc
sbb
adc
and
jno
test
push
je
in
imul
sbb
mov
xchg
push
loop
loope
and
pusha
add
loope
in
xchg
das
repz
shl
dec
sbb
xlat
inc
push
dec
xor
fld
test
ss
mov
fdiv
jl
jo
xor
pushw
cmp
mov
sbb
jns
in
test
pop
add
in
xor
dec
lods
pop
jo
ss
push
dec
jo
jle
retf
or
add
sbb
inc
mov
loopne
call
icebp
mov
add
test
jg
inc
and
cmp
ror
mov
clts
mov
clc
mov
sbb
lea
push
dec
inc
aam
xor
fdivrp
call
test
jl
cmp
jge
cmp
cld
xor
mov
mov
add
push
or
ss
call
aad
test
outs
dec
cwde
and
mov
cmp
mov
retf
ds
or
popf
add
mov
fsubr
mov
loopne
test
push
adc
inc
xor
shl
dec
jle
in
jmp
js
test
outs
add
std
fbld
add
jo
sbb
repz
sbb
pop
es
dec
fmul
inc
push
pop
jmp
into
icebp
out
call
inc
scas
dec
pushw
fadd
cmp
adc
clc
jle
pop
nop
push
cmp
jp
mov
push
xor
xchg
or
rol
es
sub
ror
(bad)
push
adc
pop
(bad)
and
jmp
mov
(bad)
push
mov
push
mov
jne
(bad)
or
xchg
or
xchg
mov
adc
div
mov
mov
rcl
repnz
fsubr
aaa
jo
pop
rcr
sub
fadd
mov
js
scas
xor
mov
push
add
mov
repnz
cmp
dec
jge
loopne
and
fisttp
jmp
sub
inc
jg
movs
into
pop
fmul
lock
sub
pop
ds
je
(bad)
cli
jmp
sub
inc
mov
int3
pop
adc
(bad)
mov
sbb
call
loopne
test
dec
cli
and
(bad)
aam
push
(bad)
out
pop
inc
or
or
adc
sbb
sbb
movs
inc
dec
mov
sbb
(bad)
cli
loop
and
and
(bad)
push
adc
retf
adc
fwait
mov
push
or
dec
xor
pop
mov
push
es
dec
int
lock
inc
popa
xor
fcmovnbe
adc
je
dec
jne
(bad)
inc
push
pusha
jmp
cmp
jl
pushf
fadd
inc
loope
fiadd
inc
(bad)
jge
push
loopne
adc
dec
jo
sbb
test
(bad)
outs
mov
adc
outs
lock
cmp
lock
ret
shl
adc
mov
maskmovq
mul
jl
mov
mov
and
add
mov
mov
sub
push
in
mov
push
sbb
push
mov
out
jmp
mov
add
cmc
(bad)
aas
cli
stc
pop
mov
xchg
cmp
outs
and
adc
jnp
push
add
inc
(bad)
xchg
scas
sbb
adc
(bad)
mov
mov
enter
je
and
xor
xor
push
jmp
mov
daa
cld
add
loopne
imul
jmp
leave
pop
jg
iret
mov
ss
mov
jmp
add
push
or
sbb
add
inc
mov
popf
mov
cmp
mov
idiv
sbb
mov
and
mov
pop
ja
add
call
add
xchg
enter
inc
and
rcl
jecxz
fdiv
xchg
in
jg
imul
aam
push
pop
test
or
shl
jne
or
sub
jne
jmp
nop
mov
out
outs
lods
pop
or
and
pop
add
cmp
iret
inc
mov
or
jg
or
sahf
mov
js
mov
jmp
out
mov
pop
mov
xor
add
(bad)
fdiv
shl
cmp
ja
pop
push
push
pop
ret
loop
enter
ins
inc
jo
cli
pop
je
je
mul
mov
xor
add
ins
in
add
jae
jae
pop
inc
pusha
std
dec
ins
add
imul
xor
imul
mov
mov
or
xor
arpl
das
aaa
dec
icebp
or
into
pop
daa
jmp
add
xchg
or
mov
paddsw
or
add
stc
adc
push
xchg
push
sbb
xor
(bad)
jle
mov
jmp
mov
int
imul
imul
jmp
cmp
inc
fsubr
lea
sub
je
dec
sub
jb
or
sbb
je
aaa
pusha
mov
push
adc
push
mov
loopne
mov
and
js
icebp
or
push
or
stos
(bad)
sbb
iret
sbb
inc
push
xlat
mov
or
adc
push
add
add
or
scas
jnp
mov
add
out
je
adc
jbe
mov
sahf
std
pop
or
into
(bad)
mov
inc
inc
cmp
mov
cmc
pusha
stos
mov
mov
add
cmp
hlt
push
popf
test
push
sub
add
push
ins
(bad)
push
jmp
lock
adc
push
js
pop
mov
sar
ret
inc
test
ins
retf
lock
pop
mov
cmovle
hlt
test
push
adc
pusha
jp
outs
dec
sbb
xor
and
dec
push
je
push
fwait
movs
das
(bad)
pop
pushf
ins
sub
add
test
fnstenv
jl
push
ins
xchg
(bad)
rcr
and
sub
repnz
sbb
ins
ret
aam
ja
rcl
sub
push
in
int3
es
xor
mov
ins
and
retf
pusha
adc
pop
push
test
aaa
inc
or
adc
fs
adc
fmul
adc
pop
mov
sbb
xchg
push
loope
cmp
nop
xor
cmp
stc
jl
loopne
jne
inc
sbb
add
adc
adc
ins
je
push
push
push
mov
cmps
or
loop
push
xlat
call
dec
in
stos
push
and
adc
add
mov
push
fadd
cwde
dec
add
pop
pop
call
mov
fisub
xchg
iret
adc
adc
inc
test
loope
fs
and
fidiv
fmul
enter
mov
adc
dec
dec
sub
mov
rcr
ins
jne
pop
adc
add
(bad)
in
scas
call
jmp
(bad)
cmps
or
and
jb
sub
test
add
cs
adc
jo
xor
pop
(bad)
pop
inc
jo
aam
or
sar
adc
or
cmp
popf
pop
xchg
iret
adc
hlt
or
jge
dec
lock
sar
arpl
push
pop
sub
dec
or
les
sub
xor
jne
pop
push
pop
mov
int3
add
cmp
cwde
cs
jo
cmp
or
jo
pop
pop
adc
inc
add
in
and
sub
retf
pusha
xor
outs
lods
xchg
add
or
retf
xchg
enter
jle
aaa
outs
mov
sub
add
xor
and
and
jb
pop
mov
jne
mov
and
cmp
lock
sbb
call
rol
pop
call
cmp
sub
cmp
addr16
cmp
or
fstp
mul
or
shl
push
pushf
adc
enter
dec
sbb
push
out
aam
das
mov
out
push
mov
mov
cmp
imul
imul
sbb
test
(bad)
or
sahf
jge
mov
add
sub
mov
shl
xor
call
(bad)
in
scas
or
rol
jge
lock
dec
cmp
or
int
fdivr
loope
xchg
adc
jmp
popa
inc
cmps
shr
pushf
rcr
js
jne
test
sahf
sub
push
and
cmp
push
jg
jle
dec
or
sub
jl
pop
and
mov
jo
call
inc
jmp
adc
fisub
in
push
das
jo
sbb
adc
add
lea
out
adc
mov
pop
and
xor
adc
into
lea
push
out
mov
sti
xor
sbb
sbb
pop
lock
nop
push
mov
pushf
xor
mov
pop
adc
inc
scas
mov
popf
cdq
push
adc
mov
cli
push
inc
adc
inc
cmp
dec
sub
test
mov
mov
cmp
jg
jns
add
sar
arpl
inc
mov
add
mov
jo
or
pop
out
sahf
jbe
xlat
add
sbb
mov
mov
out
addr16
das
arpl
adc
ror
lods
adc
xor
mov
mov
mov
fimul
ret
jo
push
cmp
add
jns
sahf
jmp
hlt
pop
mov
out
cmp
pushf
adc
test
imul
mov
fdivr
lea
mov
fwait
cmp
mov
rcl
in
lea
mov
(bad)
mov
add
adc
and
cmp
std
pusha
sbb
dec
jns
ret
dec
shr
jp
and
test
clc
dec
jno
xchg
or
adc
dec
jge
in
in
int
fcmove
mov
push
xor
mov
push
sub
xor
(bad)
dec
mov
jmp
lea
sar
and
(bad)
sbb
adc
lock
bound
sub
add
xor
or
rol
mov
sbb
fsubr
sub
test
xlat
in
out
jge
rol
fiadd
shr
and
test
pop
sbb
imul
repz
sbb
shl
mov
and
cmp
jl
popf
push
jmp
bound
jb
push
inc
inc
pop
test
pop
mov
icebp
adc
jecxz
mov
lods
push
jae
sbb
push
and
sbb
xchg
xor
jmp
jg
je
mov
inc
mov
test
cwde
mov
loop
xor
jns
(bad)
call
dec
sub
les
sbb
addr16
int3
push
push
push
(bad)
xor
pop
ins
daa
cmp
jo
mov
jecxz
jbe
mov
rol
fiadd
shl
and
pop
call
lds
enter
or
and
or
jmp
xor
clc
jo
cwde
inc
push
dec
jecxz
pop
jl
sub
(bad)
mov
push
mov
dec
js
pop
xor
pop
mov
dec
sub
clc
data16
jo
cmp
cs
fadd
adc
test
push
mov
test
pop
dec
inc
lds
jmp
lea
lds
inc
mov
test
je
sub
and
mov
add
ds
sbb
push
sbb
xchg
stc
outs
clc
and
(bad)
adc
or
je
add
sti
out
add
test
imul
fistp
cmc
sar
mov
gs
dec
and
cmp
xchg
jg
or
ins
and
xor
jl
dec
jmp
push
movzx
inc
aaa
mov
mov
add
repz
adc
in
or
cmp
dec
sub
(bad)
mov
js
imul
mov
fisttp
retf
inc
aaa
lock
jg
push
mov
test
xchg
ss
and
push
pop
stos
dec
xor
push
xchg
call
or
jns
scas
mov
ins
mov
push
or
mov
lock
mov
and
out
stos
inc
cmps
inc
icebp
jmp
mov
push
or
clc
add
push
add
or
jl
mov
dec
mov
int3
sar
test
pop
popa
data16
or
inc
(bad)
mov
add
jl
mov
jne
cmp
pop
xchg
mov
mov
fmul
and
push
add
xchg
inc
cli
fisttp
sar
stos
cmp
and
and
or
or
cmp
sub
push
stos
mov
xor
lods
push
scas
xor
sbb
jl
mov
inc
addr16
int3
ins
xor
imul
jl
xchg
loope
add
stos
in
xchg
fs
lods
push
and
sbb
ds
sbb
xor
cld
ret
sub
dec
fs
cmp
mov
stos
ins
adc
jo
inc
xchg
mul
(bad)
sbb
mov
movs
inc
imul
lods
imul
frstor
imul
cdq
fst
mov
push
add
add
ret
aas
push
fs
sbb
je
mov
adc
lea
jae
or
xchg
call
pop
cmp
popa
sbb
inc
add
test
mov
or
outs
or
jmp
inc
sbb
je
add
xor
inc
outs
sbb
mov
and
jbe
jge
mov
push
or
sub
push
(bad)
test
out
shr
sbb
lea
push
gs
dec
jmp
shl
int3
sub
in
add
jecxz
cmp
ins
add
fiadd
mov
shl
shl
push
jl
and
add
mov
adc
js
mov
cli
xchg
add
mov
add
and
add
push
ds
jo
mov
pop
mov
outs
sub
(bad)
push
mov
std
push
xchg
xchg
jge
cmp
mov
add
das
mov
mov
loopne
adc
sbb
lock
jle
cmp
sub
add
daa
add
add
add
or
add
dec
sub
sbb
mov
mov
sub
sbb
sbb
cld
clc
jl
int3
push
or
jg
bound
outs
add
inc
mov
pop
dec
mov
popa
mov
pop
int3
ror
ja
xchg
test
ret
jl
loop
and
cs
fsub
push
addr16
pop
mov
xor
inc
push
jmp
mov
inc
fsub
inc
jl
inc
mov
cmp
loopne
mov
sbb
pop
ret
lods
(bad)
sbb
aas
fimul
adc
in
cmp
jno
jo
add
dec
jp
aam
(bad)
mov
nop
sbb
cwde
sbb
test
inc
sub
mov
pop
adc
jle
or
push
xchg
push
dec
jecxz
jmp
cmp
push
mov
loopne
jecxz
pop
jl
xor
xor
aas
or
into
pop
cmp
lea
sub
cmp
out
dec
xchg
(bad)
fwait
pop
add
retf
mov
xchg
cmp
adc
in
jp
fs
fistp
pusha
push
in
sbb
setg
and
mov
sbb
js
push
icebp
xchg
mov
rcl
add
movs
jl
xor
cmp
imul
les
xor
cli
movs
call
icebp
mov
mov
pop
or
je
(bad)
sub
sbb
cmp
mov
adc
out
mov
sbb
jge
shl
clc
ret
mov
mov
mov
dec
dec
hlt
cmp
shl
es
cmp
push
mov
mov
lds
push
mov
nop
mov
daa
std
inc
in
pop
hlt
lea
sub
add
call
mov
inc
in
add
cmp
rol
inc
test
iret
and
lea
cmps
xchg
inc
call
in
cmp
js
test
jne
inc
inc
mov
in
xor
mov
jb
ins
in
mov
in
dec
mov
inc
xchg
inc
lea
push
fimul
push
or
icebp
je
mov
add
ret
jg
push
jge
or
add
sbb
fild
xlat
jo
mov
test
rcl
lock
pushf
dec
jg
lea
cmp
jmp
test
loopne
jbe
or
sub
sub
dec
mov
cmp
std
push
mov
inc
sub
mov
out
inc
and
mov
stos
push
add
inc
ret
xchg
(bad)
in
push
mov
stos
inc
mov
xor
or
mov
sub
loopne
sbb
inc
rcr
lea
test
and
sub
jge
(bad)
sub
jmp
data16
sub
push
inc
retf
or
out
push
lea
test
sti
or
pop
aam
leave
ss
jnp
shl
fistp
mov
sub
mov
mov
mov
inc
push
dec
and
sbb
mov
aam
mov
mov
cmp
inc
push
loopne
jae
fs
inc
xor
pop
ss
call
push
push
jge
dec
movzx
clc
mov
adc
(bad)
cwde
pop
inc
sub
cmp
mov
pop
jl
nop
neg
adc
add
jo
mov
inc
mov
cmp
sbb
sbb
(bad)
loope
inc
jne
mov
test
dec
sbb
outs
jmp
sbb
add
shl
lea
pop
mov
je
inc
mov
jmp
clc
add
or
sbb
clc
shl
or
push
pop
ins
sub
hlt
or
push
mov
jle
leave
cmc
loopne
sub
jp
daa
or
push
jne
(bad)
cmp
shl
mov
inc
sbb
mov
shl
adc
xor
push
inc
add
sub
mov
lahf
fstp
inc
add
pop
push
int
hlt
mov
xchg
jge
mov
ja
sti
jle
push
retf
jo
ret
data16
pop
(bad)
enter
in
inc
dec
or
cmp
aaa
mov
adc
xchg
jne
mov
mov
or
daa
cld
mov
inc
add
fs
push
mov
in
mov
pop
or
inc
ret
or
rol
or
inc
pop
cmp
push
fdiv
cmp
jg
jne
ret
or
jmp
add
ds
adc
or
push
ss
sbb
jg
add
iret
dec
mov
push
adc
inc
inc
or
mov
push
sar
and
lea
aam
push
and
movs
add
cmc
data16
stc
pop
mov
(bad)
cdq
popa
push
cmps
mov
and
pop
popa
jne
and
mov
mov
aas
ins
and
cmp
inc
xchg
ror
mov
xor
pop
dec
mov
push
sbb
push
jo
lahf
imul
mov
lock
call
in
jmp
int
sbb
mov
adc
inc
xor
lea
and
jnp
xor
cmp
movs
test
scas
adc
mov
jb
xor
scas
adc
ret
scas
lock
mov
push
and
inc
fistp
inc
fisub
pop
add
cmp
ror
mov
push
ror
js
enter
sbb
test
push
dec
or
mov
sub
xor
test
xchg
shr
xchg
rcl
or
sub
cmp
or
iret
adc
inc
or
or
bound
xor
jbe
int
loope
out
(bad)
lock
or
cmp
fs
push
scas
jecxz
or
gs
add
sbb
cmp
ins
xor
inc
jle
push
movs
jmp
(bad)
sti
daa
lds
inc
cmp
ret
ins
inc
add
fist
popa
pop
rcl
push
dec
dec
xchg
inc
es
and
adc
(bad)
rol
sub
jne
fistp
lods
aad
lahf
iret
sub
jmp
int3
pop
sbb
inc
sbb
xor
mov
in
lea
pop
dec
aam
(bad)
push
fist
xchg
and
in
and
and
add
inc
imul
(bad)
adc
mov
add
mov
cli
add
cld
sub
inc
sbb
mov
in
or
lea
mov
push
xor
xor
mov
xchg
add
(bad)
mov
mov
jmp
add
mov
(bad)
mov
sar
or
sub
xor
dec
xor
and
pop
out
sbb
and
scas
ja
push
jmp
je
inc
sub
pop
(bad)
test
in
dec
fdiv
xchg
call
adc
push
sub
add
push
jbe
enter
add
ret
mov
adc
inc
and
push
mov
bnd
cmp
adc
sub
mov
div
cmp
or
shl
ret
ror
inc
in
push
jmp
pop
and
into
or
jl
lea
or
add
or
add
call
mov
scas
adc
xor
jae
adc
mov
cmp
jb
out
shl
fnstenv
mov
(bad)
pop
mov
mov
inc
js
sub
imul
cwde
jno
cmp
ror
fadd
or
scas
jne
mov
mov
sbb
cmp
mov
in
mov
adc
mov
add
push
inc
or
cmps
out
push
push
xor
ins
ror
shr
push
loopne
jge
pop
mov
adc
inc
mov
adc
lock
pop
pop
mov
sbb
cwde
in
or
scas
jge
xor
out
in
add
or
sar
mov
mov
jge
mov
je
clc
lea
mov
mov
jns
pop
add
lea
xor
sbb
adc
add
js
loopne
inc
pop
aam
test
and
add
pop
push
dec
or
das
xchg
mov
add
jmp
inc
mov
mov
das
(bad)
neg
mov
add
cmp
mov
shl
cs
or
adc
inc
les
pop
fwait
ror
xchg
push
inc
xchg
lds
mov
mov
dec
mov
sub
adc
pop
ds
test
push
jo
jmp
jmp
pop
add
inc
int3
js
xchg
fild
xchg
mov
push
(bad)
int3
jne
in
adc
aam
adc
loope
sub
in
adc
push
loopne
pop
fmul
nop
hlt
lea
rcr
mov
xchg
adc
jmp
mov
(bad)
and
jo
add
or
add
fcom
push
add
mov
fstp
pop
or
or
adc
mov
call
mov
jmp
lock
test
xor
adc
push
xor
(bad)
push
add
leave
push
dec
mov
xor
add
inc
jbe
inc
push
add
adc
cmps
xchg
add
sbb
xchg
add
or
mov
ins
ss
nop/reserved
inc
arpl
call
mov
test
push
js
add
add
imul
pop
loopne
(bad)
push
jo
scas
push
js
pop
cmp
jae
jbe
mov
cmp
sbb
dec
or
js
js
dec
sub
push
inc
xchg
jmp
sub
inc
and
ss
or
js
imul
jb
add
add
enter
push
add
mov
push
aaa
push
xor
or
sub
push
add
int3
adc
mov
dec
jo
mov
sahf
push
sbb
xchg
pusha
xchg
leave
leave
movs
mov
jl
mov
cmp
xor
xor
pop
sbb
lea
cwde
or
pop
lock
xor
div
in
je
fiadd
scas
or
ds
je
pusha
push
dec
mov
adc
mov
jge
mov
jnp
ds
lea
push
data16
div
inc
aam
adc
add
xor
sti
adc
shl
xchg
inc
nop
inc
inc
cmp
loopne
int3
xchg
mov
nop
mov
jns
lods
inc
(bad)
pop
xchg
and
jb
ins
jmp
mov
push
sahf
ret
cmp
js
or
push
mov
adc
add
test
xor
mov
mov
inc
sbb
dec
push
ja
fdiv
fmul
loopne
mov
int
repz
jecxz
push
and
scas
mov
rol
(bad)
or
aas
jbe
add
adc
paddb
and
sbb
ret
mov
repz
cmp
jo
cwde
mov
out
ss
sar
inc
es
ror
mov
add
pushf
nop
lahf
mov
mov
push
sub
mov
les
and
outs
mov
xchg
cwde
push
js
mov
retf
or
fucomp
sub
test
inc
stos
out
push
add
mov
out
cmp
mov
push
sbb
icebp
enter
add
(bad)
mov
add
sub
mov
mov
sti
fdivr
inc
mov
hlt
add
mov
in
or
push
mov
push
xor
xor
les
pop
das
pop
nop
sub
test
mov
or
add
std
pop
sbb
ret
cmp
pop
inc
sub
or
jb
add
inc
and
je
mov
pop
sub
movs
ret
mov
ins
sbb
inc
sub
movs
mov
imul
ins
aaa
mov
jl
je
sub
sub
cs
je
add
sub
je
imul
jmp
cmp
pop
je
sbb
arpl
jle
mov
jmp
dec
jmp
jo
xchg
adc
loop
xor
sub
inc
outs
push
jge
out
dec
inc
and
in
leave
ja
sbb
sub
adc
rol
lods
cmp
jl
and
inc
push
fdivr
std
add
inc
mov
xchg
xor
jne
(bad)
lahf
out
lea
dec
jmp
loopne
mov
arpl
(bad)
dec
add
mov
xor
sub
aaa
inc
fsubr
dec
sub
dec
dec
dec
js
in
sub
mov
or
jl
fiadd
push
icebp
into
pop
js
push
dec
pop
jg
sub
add
lock
mov
mov
cmp
mov
arpl
mov
imul
mov
adc
or
loop
cmp
jge
mov
adc
dec
rcl
adc
aaa
fistp
(bad)
fcmovne
lods
jns
xrelease
mov
mov
icebp
clc
push
inc
call
ror
sbb
bound
hlt
and
adc
dec
mov
retf
mov
cdq
idiv
inc
xor
les
inc
pushf
ret
mov
ds
or
adc
mov
jbe
mov
adc
jne
div
sbb
lahf
mov
push
xchg
cli
inc
fadd
loopne
mov
cli
push
rcr
ret
loop
nop
add
sar
dec
inc
add
add
add
pop
sar
add
cdq
cmp
in
and
mov
push
fadd
pop
enter
enter
js
popa
push
and
adc
adc
sub
jg
je
aam
jmp
into
pop
mov
sub
add
aaa
sets
je
test
push
les
push
loopne
inc
add
push
outs
adc
ss
sub
adc
ds
cmps
sub
or
xchg
inc
or
movs
ficom
mov
ds
retf
jge
cmp
jge
dec
sbb
jbe
inc
jl
cmp
fcom
jbe
dec
inc
clc
and
push
into
and
sub
xor
xor
test
mov
add
add
inc
rcr
pop
sbb
pop
add
add
jl
ror
sbb
js
ret
test
and
(bad)
jle
leave
icebp
cmc
hlt
dec
js
adc
(bad)
dec
or
xor
lds
pop
adc
xor
inc
mov
fs
pop
je
adc
fsubr
mov
sar
ror
xor
xchg
sbb
xchg
out
sbb
add
daa
or
clc
inc
les
lea
xchg
jmp
mov
not
sbb
daa
push
adc
rcr
push
push
push
jno
test
test
ja
pop
sub
dec
mov
or
outs
(bad)
test
cs
shr
ins
ret
jge
mov
dec
inc
inc
push
mov
cs
mov
mov
push
jmp
pop
mov
nop
sbb
sti
add
repz
shl
jecxz
or
outs
xlat
add
neg
add
mov
xchg
gs
jno
test
inc
adc
jmp
push
cmps
xchg
mov
or
and
inc
or
dec
or
lods
cmps
xchg
mov
rcr
int3
clc
in
add
push
or
loopne
xchg
push
or
push
outs
lods
lock
pop
and
mov
add
mov
cmps
pop
add
sub
test
shl
pop
lock
cmp
jmp
adc
mov
push
mov
sbb
mov
int3
pop
jp
mov
cmp
add
test
sbb
pop
clc
sbb
sahf
popa
jo
jmp
mov
outs
push
sahf
or
popa
cmps
and
fidivr
lods
xor
adc
cmp
cmp
and
push
jne
jle
inc
mov
mov
clc
add
mov
pop
jo
mul
mov
jno
pop
sbb
js
in
xor
or
cmp
jge
push
arpl
or
clc
xchg
ja
cmp
jbe
sbb
cld
clc
mov
push
mov
mov
movzx
add
inc
lock
cmp
push
clc
mov
les
add
(bad)
jmp
ja
fimul
push
mov
loopne
inc
in
dec
ror
lahf
sbb
and
loopne
sub
jae
mov
jle
or
outs
neg
es
sbb
(bad)
xor
bound
cvtps2pd
dec
push
jo
add
push
jne
test
jbe
add
mov
xor
out
rol
rcl
mov
pop
ja
jae
mov
dec
cmps
sbb
xor
and
jno
jno
loopne
cmp
loopne
int3
fdivr
add
mov
sub
sub
vmovaps
inc
xor
mov
sbb
cmp
lods
inc
ror
outs
int3
xor
xor
jge
inc
cmps
xchg
out
fadd
icebp
iret
mov
ins
pop
lock
rol
mov
ret
mov
call
and
fmul
scas
shr
(bad)
hlt
pop
mov
inc
mov
rcr
push
rcr
retf
ror
fmul
and
shr
jl
adc
pop
and
loope
add
mov
inc
int3
adc
adc
or
xor
pop
add
inc
daa
out
call
sub
pop
mov
cmp
fist
cmp
out
sbb
xchg
add
adc
xor
add
shl
cli
ss
jns
push
cwde
out
adc
push
aaa
push
test
cmps
mov
push
mov
push
inc
sub
sub
jbe
or
pop
xchg
test
or
ins
adc
pop
dec
call
lock
xor
std
pop
gs
xor
rsqrtps
ja
lock
bound
shl
add
fdivr
mov
jo
mov
sub
daa
(bad)
mov
push
daa
push
inc
les
call
sbb
jecxz
sub
push
enter
ins
(bad)
and
push
mov
xor
jp
data16
mov
xor
ins
ret
popa
pop
call
cmp
dec
push
cmp
lods
adc
sub
enter
dec
lods
imul
les
add
adc
stos
es
add
js
jmp
sti
dec
or
xor
xchg
add
and
nop
jbe
sbb
jne
add
push
jl
lods
test
mov
int3
push
ins
movsx
add
mov
push
mov
push
jmp
inc
adc
and
adc
xor
or
add
xchg
pop
sub
dec
add
dec
add
or
xabort
sti
pop
sbb
jne
inc
not
dec
retf
ja
outs
jmp
mov
dec
cmp
sbb
cmp
push
sbb
push
cmp
inc
jmp
aas
int
ffree
je
push
mov
add
jp
pop
in
jg
mov
mov
fcom
push
mov
in
scas
xor
jo
stos
(bad)
cmp
xor
xchg
jo
jmp
add
or
fwait
push
mov
cmp
jl
pop
inc
retf
adc
or
mov
adc
xchg
test
sbb
std
dec
sub
jb
je
dec
je
jmp
add
push
sbb
inc
pop
rcl
mov
fcomp
call
int
pop
cwde
dec
shl
cmp
jne
cmp
add
dec
xor
dec
dec
add
sbb
jle
mov
xor
dec
push
imul
add
lock
add
mov
lds
mov
aad
(bad)
out
sub
and
call
faddp
or
inc
sbb
sub
cmp
add
cmc
mov
fnstcw
or
arpl
or
dec
xor
add
xchg
outs
or
xor
jecxz
out
outs
sub
sbb
jnp
fdivr
inc
add
add
jnp
add
dec
mov
mul
repnz
call
pop
jb
lds
jo
cli
push
es
jo
or
clc
test
jbe
or
add
sar
div
clc
sar
shl
adc
add
sub
inc
add
adc
fidivr
into
xor
mov
test
jg
sbb
movs
and
sbb
dec
jo
(bad)
xchg
les
cli
dec
call
mov
pop
inc
sti
mov
cmp
jge
js
jle
(bad)
mov
adc
fsubp
and
jg
mov
pop
sbb
jo
push
dec
or
adc
dec
ja
mov
or
mov
sbb
inc
or
cmp
and
push
fmul
sbb
cmp
xchg
cld
mov
ret
pop
xor
or
adc
adc
(bad)
js
jno
or
jle
add
pop
rcl
xchg
fs
add
scas
fs
pop
dec
or
data16
cld
cmp
adc
aas
push
and
add
loopne
add
les
or
cmp
jl
cmp
add
aaa
mov
je
enter
jmp
inc
xor
in
cmp
mov
inc
aas
mov
push
fcomp
cli
data16
cli
out
sti
or
or
and
jl
sti
(bad)
fsubp
jb
sub
sub
cmp
dec
xor
mov
data16
in
dec
inc
neg
out
push
dec
mov
inc
jle
shl
or
ds
or
mov
or
popa
sbb
stc
call
mov
add
jb
lds
xor
and
call
leave
xor
sar
je
jle
jns
fnsave
and
fld
push
std
add
or
retf
mov
test
or
loopne
add
dec
mov
mov
xor
stc
or
loope
mov
pop
or
mov
dec
pop
mov
ja
pop
or
fst
sbb
out
mov
shr
popa
scas
push
mov
aam
xchg
ret
imul
shl
push
sub
shl
leave
cwde
mov
ret
mov
add
xor
add
fimul
sbb
sbb
inc
inc
jle
int
jo
sub
jg
rol
adc
or
lock
cmp
out
out
addr16
push
pop
and
dec
sbb
dec
or
scas
mov
mov
cmp
test
mov
int
add
and
adc
je
push
sub
dec
fiadd
inc
mov
dec
dec
bound
push
in
adc
sub
or
or
dec
out
cwde
inc
sub
or
cmp
add
dec
sub
xor
ror
dec
ins
push
cs
xchg
jo
out
push
outs
outs
mov
mov
add
jg
add
pop
je
dec
je
jmp
xchg
add
inc
les
adc
sub
or
adc
int3
fsubr
or
jmp
and
push
adc
push
fwait
inc
or
push
xchg
adc
imul
inc
or
add
in
mov
outs
jmp
push
pusha
xor
add
and
mov
and
pop
or
xor
push
push
jb
jnp
or
add
jg
jns
inc
retf
or
popa
loope
jmp
retf
jmp
clc
add
jae
jl
cmp
aaa
test
mov
je
add
jmp
and
lds
call
std
cdq
jne
add
sbb
push
pop
push
(bad)
test
das
add
and
mov
movs
sar
mov
add
jl
push
mov
call
mov
and
xlat
push
fisubr
and
lods
mov
int
sub
mov
ja
(bad)
mov
rol
jo
ret
ret
add
pop
sub
pop
mov
fcom
or
dec
adc
xor
dec
push
mov
add
push
pop
scas
fstp
cs
call
jle
xchg
test
sub
(bad)
test
mov
jmp
jmp
scas
push
pop
pop
jp
mov
cmp
or
das
out
add
cmp
je
jmp
xor
int
(bad)
sub
or
dec
psubd
cmps
xor
je
push
jbe
or
dec
adc
push
clc
push
call
sub
lea
mov
getsec
and
mov
and
push
pop
nop
sbb
rcl
push
iret
sahf
sbb
hlt
fsub
in
shl
cld
popa
lds
mov
jbe
cmp
xchg
ret
sub
fisubr
adc
enter
cmp
lahf
test
dec
xor
or
cmp
jb
mov
cmp
mov
push
sub
sub
push
scas
lock
sbb
push
pop
mov
xlat
add
jb
retf
jmp
xor
in
clc
jmp
loopne
jno
push
or
xor
push
ror
sbb
ins
add
call
int
inc
popa
inc
and
jg
bound
xor
les
adc
dec
aam
into
or
and
fwait
lock
xadd
add
daa
pop
add
or
outs
rcr
pop
cmps
xchg
aam
pop
mov
inc
mov
inc
xchg
or
js
jl
shl
or
jae
std
jl
sub
inc
lea
push
mov
or
scas
mov
add
ficom
fidiv
push
push
loopne
adc
push
xchg
sbb
adc
stos
(bad)
xchg
xor
(bad)
xchg
cs
dec
pop
sub
jge
js
push
mov
mov
inc
xor
ds
sub
lea
cmps
jo
mov
call
mov
adc
ficom
lock
adc
retf
push
add
add
xchg
(bad)
hlt
adc
inc
imul
ret
cmp
rcr
addr16
jg
or
xchg
inc
shl
sbb
rol
fisttp
push
mov
and
pop
jne
enter
mov
jge
mov
outs
lock
mov
add
mov
mov
aaa
push
cmp
loopne
pop
jge
imul
enter
inc
mov
and
aam
push
out
(bad)
sub
jmp
mov
pop
imul
ficom
imul
and
pusha
(bad)
(bad)
in
cmps
mov
test
int3
sar
push
pop
push
sub
inc
fs
out
xor
lock
jp
(bad)
mov
add
ret
fcom
mov
addr16
jo
jbe
dec
sbb
arpl
sub
(bad)
push
cmp
pop
shl
gs
cmps
sbb
clc
add
add
shr
jmp
adc
(bad)
fistp
inc
inc
mov
out
inc
cmp
jl
inc
cmp
jl
rol
sbb
mov
outs
fdiv
bound
jo
cmp
shl
cdq
add
out
in
adc
adc
pushf
inc
sub
sbb
adc
cli
add
jbe
(bad)
mov
inc
in
xor
adc
cli
add
int
xor
jbe
icebp
mov
fwait
ret
cli
push
or
cmp
test
loopne
rcr
retf
lock
mov
cli
push
(bad)
hlt
mov
add
mov
ins
mov
ja
jg
mov
mov
dec
daa
add
aaa
xchg
inc
and
test
in
cld
inc
mov
clc
sbb
jne
call
lods
jmp
sub
xor
movs
sbb
mov
mov
pusha
and
cwde
mov
inc
xor
pushw
ret
popf
inc
data16
push
cmp
shl
pop
cmps
sub
jns
add
mov
and
daa
push
inc
push
push
mov
test
ret
add
test
xchg
dec
mov
test
out
loopne
(bad)
call
pop
ins
add
add
test
imul
loope
pop
jle
cwde
adc
mov
pusha
jmp
inc
mov
mov
add
jbe
ja
sub
mov
sbb
cli
push
push
inc
daa
adc
inc
xchg
sbb
test
add
jl
add
cwde
or
add
and
(bad)
sbb
test
cmp
adc
add
ins
pop
out
mov
inc
stc
inc
mov
push
inc
mov
test
lods
mov
sbb
cmp
add
js
jae
inc
xor
pop
lods
mov
xor
mov
adc
mov
cld
cli
mov
adc
out
jne
sub
into
inc
inc
or
inc
shl
(bad)
mov
dec
mov
mov
add
int3
fimul
mov
sub
mov
add
push
jge
(bad)
data16
mov
adc
mov
xlat
push
jmp
or
push
adc
dec
(bad)
sub
jle
pop
cwde
cmp
fadd
lock
(bad)
pusha
mov
out
push
mov
sbb
cwde
push
retf
sub
push
aam
push
ror
push
lods
cmp
adc
dec
bound
and
and
sub
jbe
je
or
pop
ja
out
lods
push
mov
dec
mov
and
adc
adc
mov
xchg
jecxz
push
not
daa
push
cmc
mov
(bad)
imul
out
or
adc
out
loope
push
add
sub
data16
neg
neg
mov
mov
pushf
add
push
in
div
clc
adc
sbb
push
xor
cmp
jne
lods
imul
add
xor
jl
pop
cmp
mov
pop
das
jle
ret
rcl
dec
loopne
pop
and
fs
add
rcr
popa
and
add
sahf
pop
inc
push
xor
jle
pop
push
pop
cmp
push
add
test
je
data16
mov
std
fcomp
or
test
jno
adc
mov
mov
push
inc
sbb
(bad)
adc
pop
sbb
cmp
aaa
std
push
out
cmp
dec
cmp
mov
cmp
xor
adc
dec
or
or
push
sub
(bad)
sbb
push
sbb
xchg
and
mov
adc
cmc
jmp
jmp
dec
sbb
rol
add
test
add
in
sbb
mov
push
jbe
mov
jp
scas
inc
and
xchg
je
and
xchg
shr
popf
mov
add
js
push
sbb
sub
popf
mov
mov
cmp
loop
adc
and
xchg
cmp
or
push
pop
popa
xchg
xchg
push
xchg
enter
sub
sub
mov
mov
inc
mov
sub
lock
ret
aaa
and
es
call
xchg
or
ror
dec
add
fisttp
or
xchg
cmp
sbb
loopne
dec
es
in
nop
xchg
adc
nop
jo
add
adc
or
je
sub
mov
retf
push
ins
cld
movs
mov
mov
or
push
arpl
add
test
mov
data16
movs
ret
scas
loopne
push
cmp
mov
mov
out
dec
dec
add
mov
xor
cmp
dec
data16
jl
and
rcr
paddusb
mov
dec
mov
mov
add
test
push
movs
mov
ror
nop
push
fdiv
js
ja
push
inc
ja
ja
sbb
js
test
cld
bound
test
jge
sub
mov
push
adc
shl
lock
(bad)
repnz
enter
jmp
in
out
aas
inc
jne
(bad)
fcom
(bad)
or
adc
scas
in
cmp
cmp
jl
jp
aaa
sub
stc
dec
mov
div
cmp
fcmovnb
ret
pop
mov
pop
aaa
push
xor
inc
push
rol
jmp
sub
mov
clc
mov
sbb
retf
cmp
hlt
or
push
xchg
adc
data16
nop
xchg
js
ret
jmp
inc
or
or
jne
ret
inc
push
or
cmp
or
jle
cld
xchg
sbb
push
mov
sub
scas
mov
and
out
or
dec
and
and
xchg
retf
add
cmps
test
call
ins
imul
retf
cmp
pop
retf
lock
jno
fnstsw
test
repz
adc
fdiv
mov
mov
jne
lea
inc
(bad)
push
fld
pop
data16
sbb
sbb
mov
push
jmp
lea
sub
(bad)
scas
out
test
clc
cmp
cwde
jno
add
lock
jmp
push
div
pop
or
cli
push
pop
loopne
add
or
in
pop
popa
add
add
mov
call
jge
call
js
daa
cmp
addr16
repz
add
out
mov
aam
xor
sbb
lods
and
push
or
in
pop
mov
sbb
sbb
inc
clc
push
push
sub
push
pop
dec
push
push
lea
mov
inc
xor
inc
jb
or
mov
push
adc
mov
mov
out
out
jp
xor
sub
data16
mov
sub
call
dec
jb
jno
sbb
inc
jb
je
cmp
jmp
push
or
sbb
push
adc
xchg
fcomp
sbb
daa
push
inc
dec
jb
lea
sub
xchg
and
or
push
mov
dec
cmp
ret
adc
fdiv
fsubr
fiadd
jmp
jb
test
add
imul
pop
fldcw
adc
packsswb
push
dec
push
push
(bad)
sbb
addr16
enter
push
add
mov
jb
dec
fidivr
ins
add
inc
adc
push
inc
pop
lock
fwait
(bad)
mov
and
cwde
adc
int3
lods
lock
jns
cmp
add
push
inc
ins
xor
jl
add
push
cmp
bound
sahf
mov
jmp
ret
jmp
lock
pop
mov
adc
nop
out
aas
add
lods
sbb
push
dec
and
pusha
(bad)
or
(bad)
sahf
adc
ret
sbb
inc
and
mov
ins
aas
or
outs
adc
adc
inc
mov
or
sub
and
cmp
mov
dec
and
jmp
mov
ins
(bad)
out
dec
fs
dec
adc
sbb
mov
nop
pop
mov
and
sbb
mov
jle
xor
call
je
stos
je
or
rcr
or
xchg
enter
mov
shr
sub
test
sar
sbb
and
xchg
ins
or
bound
pushf
inc
add
add
inc
dec
jbe
(bad)
in
push
adc
xchg
mov
fs
cmp
shrd
shl
push
rol
xor
or
push
and
mov
into
sub
pop
sbb
or
adc
sbb
loopne
inc
std
push
add
out
sbb
jle
nop
cmp
cmp
out
cmps
das
ror
sbb
push
add
xchg
(bad)
das
jno
add
and
sub
into
push
mov
jae
sbb
mov
xor
or
jmp
inc
or
add
add
cmp
xchg
pop
cmps
push
add
jbe
push
je
gs
or
adc
or
push
hlt
add
hlt
jge
jl
neg
stos
fild
sub
dec
fcmovnb
lea
shl
cld
sbb
pusha
imul
jmp
cmp
jnp
inc
dec
jl
adc
jo
add
cwde
dec
in
jp
sub
lahf
sbb
cmp
cmp
mov
in
xchg
add
jg
mul
fdivrp
jbe
push
adc
or
sbb
ins
jo
lock
push
cmp
inc
pop
cmp
add
add
jbe
mov
inc
jmp
jmp
mov
in
fs
add
data16
and
dec
(bad)
ror
sbb
(bad)
stos
lea
add
hlt
imul
jp
push
push
push
out
enter
call
into
iret
bound
ret
pop
aaa
scas
xchg
loopne
and
add
jg
mov
sub
inc
jmp
or
pop
call
push
clc
daa
into
sar
xor
add
jno
jmp
(bad)
xchg
icebp
in
sbb
xor
ins
jo
adc
add
cmp
mov
into
mov
adc
clc
popa
mov
loope
pusha
add
out
lea
jmp
add
sub
std
inc
ret
xor
jmp
test
push
push
test
pop
or
cs
mov
xchg
pop
daa
cmp
xchg
dec
jo
sbb
cs
fisub
or
sbb
mov
jmp
mov
lods
fdivrp
(bad)
dec
daa
xchg
(bad)
pusha
sti
outs
aas
test
(bad)
(bad)
(bad)
dec
movs
clc
(bad)
jle
xchg
add
jmp
pop
out
mov
arpl
ins
ror
jnp
mov
gs
jb
lea
loopne
jmp
scas
mov
jl
push
or
daa
xchg
jne
or
push
jbe
mov
rcl
mov
sbb
das
add
scas
push
cmp
cli
aas
shl
push
test
fbstp
inc
or
push
inc
sbb
scas
cmp
jns
sub
into
ror
and
packuswb
push
les
inc
cmp
add
or
stos
fiadd
or
jae
adc
adc
jl
fldenv
test
mov
loope
popa
push
cmp
dec
xchg
movs
nop
sti
loop
push
adc
push
in
es
inc
or
pop
repz
push
push
das
(bad)
jnp
adc
and
(bad)
imul
fwait
mov
bound
loope
mov
pushf
loop
sub
stos
sbb
jl
lods
push
ins
cmps
ficom
aas
adc
xor
xchg
test
sub
rcr
lds
aaa
jae
mov
lahf
sub
sub
hlt
fwait
cwde
pop
test
sbb
mov
mov
or
cmp
jnp
sbb
push
jbe
(bad)
imul
jge
pushf
mov
push
mov
sub
jae
retf
xchg
rcl
adc
es
das
sub
xchg
cmp
and
js
or
scas
or
or
push
push
sar
adc
cmp
jno
jmp
or
ret
sbb
fiadd
ret
xor
shr
and
mov
mov
cmps
or
mov
cdq
mov
cmp
jle
nop
sbb
sbb
dec
fimul
and
mov
or
imul
(bad)
call
mov
xor
or
cdq
sub
jmp
sbb
xor
movs
jno
mov
(bad)
pop
cmp
in
ret
add
out
xchg
mov
sar
mov
cmp
ja
shr
ficom
aaa
push
lds
mov
cmp
xor
jl
mov
pop
jle
jmp
jns
stos
sbb
mov
jae
cmp
out
adc
mov
xchg
dec
stos
push
and
dec
inc
aam
jne
icebp
and
push
les
imul
mov
(bad)
loopne
jae
ins
add
add
or
dec
dec
cmc
mov
dec
and
dec
retf
sub
sub
mov
movs
addr16
cmp
xchg
retf
fs
outs
lds
sub
and
gs
data16
cdq
xchg
fs
dec
inc
jno
popf
shl
mov
adc
mov
add
jae
lods
pop
push
scas
dec
adc
inc
push
xor
push
pushf
and
add
pop
fiadd
push
cmp
sahf
pop
push
ss
inc
adc
sub
mov
ret
cmp
inc
inc
addr16
pop
js
or
and
loope
mov
mov
cmp
add
sbb
mov
push
sub
dec
test
or
adc
out
xor
jp
jp
neg
dec
xor
pop
cmp
dec
nop
in
test
mov
int3
push
(bad)
(bad)
xor
xor
mov
aad
push
je
test
(bad)
imul
pusha
mov
push
repnz
jne
cwde
xor
jle
repnz
jl
ret
popf
je
sbb
push
and
add
sti
cli
adc
ja
push
dec
dec
mov
mov
cmp
and
nop
jecxz
xchg
cmp
pop
add
mov
pop
inc
or
imul
fisttp
call
test
mov
sub
pop
scas
xor
sbb
jo
leave
test
jl
cmc
cmps
mov
pop
shl
push
rcr
fs
mov
sub
xchg
idiv
ret
sbb
mov
pop
push
add
or
arpl
mov
add
push
pop
or
sbb
test
inc
xchg
push
loopne
cmp
inc
xchg
inc
or
mov
imul
add
add
gs
ffreep
sbb
mov
inc
mov
add
xor
shr
push
inc
shr
add
test
pop
sbb
loopne
adc
and
popf
sbb
jb
xlat
push
stos
push
push
mov
jo
mov
sti
pop
inc
pop
imul
mov
push
push
arpl
add
and
push
adc
pop
xor
push
inc
nop
call
mov
mov
dec
je
fisub
adc
and
dec
add
dec
push
jl
push
lea
inc
sbb
mov
push
sbb
sbb
js
xchg
pop
data16
std
jp
jmp
push
fadd
movs
iret
lods
out
sub
push
xor
(bad)
ds
and
sbb
cmp
xchg
(bad)
into
out
mov
add
cmp
sbb
fimul
hlt
out
add
and
mov
cli
mov
ror
dec
inc
push
mov
mov
stc
add
ret
mov
das
loopne
les
dec
sub
movs
das
inc
clc
mov
mov
es
stc
mov
cld
add
mov
mov
mov
stos
mov
inc
jp
lahf
les
xchg
cmp
or
pop
mov
clc
mov
inc
mov
inc
xchg
stos
or
sbb
mov
scas
sti
add
add
adc
adc
adc
ret
cs
and
pop
rol
or
xor
adc
push
dec
repnz
adc
and
mov
sbb
(bad)
push
fmulp
icebp
pop
or
int3
cmps
fadd
jecxz
add
mov
inc
or
fimul
fdivr
or
xor
pushf
and
xchg
mov
sahf
adc
adc
or
pop
add
jmp
cmp
and
fist
add
adc
leave
jl
das
adc
or
mov
rol
mov
mov
dec
push
mov
iret
sub
dec
cmp
mov
xchg
and
movs
nop
imul
lods
shr
push
sbb
jns
dec
call
repz
pusha
rcl
adc
push
xchg
jo
push
ds
adc
test
jbe
mov
outs
mov
mov
mov
lea
push
sub
inc
hlt
rol
or
sub
push
xor
fadd
or
add
nop
movs
pop
add
adc
add
lock
neg
and
push
das
push
cmps
data16
int3
nop
adc
loopne
add
or
pop
iret
adc
sbb
dec
sar
pop
lock
lock
mov
mov
out
push
or
adc
gs
js
mov
mov
fs
add
lock
cmp
mov
push
inc
int3
movs
add
aas
cwde
in
push
cmp
and
cmp
push
pop
inc
jae
test
jae
jg
sub
cmp
jle
ret
(bad)
jae
add
inc
je
mov
mov
lock
adc
sbb
fimul
mov
add
dec
mov
cs
mov
push
mov
loopne
and
adc
jmp
inc
add
push
clc
mov
xor
sub
dec
add
mov
loope
dec
js
push
bound
mov
xor
mov
adc
sbb
inc
ins
push
sbb
in
cmp
inc
sub
push
stos
and
push
mov
bound
sti
push
mov
and
dec
inc
stos
je
and
je
add
sub
je
fisttp
add
xor
aam
stos
jno
sub
jmp
mov
dec
jbe
xor
push
dec
dec
je
add
jmp
fsubr
ins
adc
lahf
dec
ss
jbe
mov
into
loope
xor
xor
dec
inc
jmp
jmp
push
add
das
pop
ror
mov
add
sbb
in
or
enter
cmp
xor
add
xchg
loopne
sub
cmp
in
pop
test
and
dec
jecxz
sar
pop
mov
cmp
add
dec
sbb
shl
jmp
adc
jmp
mov
int3
out
sar
add
jmp
mov
loop
std
and
xor
ja
push
movsx
inc
fisubr
xor
out
sti
int3
push
cwde
fld
adc
add
add
mov
rcr
aas
xchg
out
sub
cmp
push
dec
repnz
sub
fcomi
pushf
cli
inc
cmp
push
fmul
fstp
jo
inc
mov
jns
or
(bad)
mov
push
pop
ins
data16
mov
lahf
mov
int
aam
pop
add
push
pop
add
(bad)
icebp
jo
je
pop
nop
xor
ror
mov
(bad)
mov
xchg
cmp
lds
lea
mov
ret
or
ins
push
mov
sub
jmp
push
cs
push
aam
pop
push
push
mov
ret
mov
and
sar
popf
mov
jle
inc
enter
pusha
addr16
xchg
mov
pop
cmp
add
iret
dec
imul
ja
push
push
xor
call
das
inc
and
jp
add
in
jge
psubsb
xor
pop
clc
add
or
pop
and
add
inc
jo
mov
sub
mov
inc
jo
dec
inc
mov
adc
mov
pusha
loopne
mov
add
add
add
pop
or
or
(bad)
sar
in
aad
mov
or
inc
in
adc
pusha
xchg
add
sbb
add
lahf
inc
sbb
daa
or
je
or
push
out
pop
mov
call
imul
inc
sbb
outs
push
pop
or
mov
shl
adc
pop
pop
bound
in
add
lea
fs
pop
sbb
jg
int
mov
jp
add
cmp
or
clc
jbe
mov
inc
xchg
test
jle
mov
inc
dec
push
jg
push
jmp
mov
mov
dec
cmp
fadd
dec
jo
cs
inc
add
clc
mov
fsub
sbb
cmp
mov
in
jg
or
add
mov
hlt
inc
or
adc
xor
mov
mov
loopne
sbb
sub
dec
sub
jns
cli
cmp
jbe
mov
inc
add
repz
clc
(bad)
hlt
rcr
fdiv
jg
sar
fidivr
jo
loop
sar
or
cmps
or
dec
pushf
outs
(bad)
lock
test
fimul
cmp
cwde
pusha
jbe
loop
inc
mov
inc
add
loop
or
dec
adc
dec
sub
jge
rol
inc
(bad)
jl
loopne
xor
mov
loope
jg
add
or
or
ins
rcl
xchg
push
js
out
or
mov
rcl
sub
repnz
mov
add
out
lock
sbb
cli
add
push
sub
jbe
scas
lahf
fwait
cmp
cmp
pop
inc
fiadd
fdiv
imul
arpl
ja
mov
clc
jbe
retf
or
nop
test
adc
and
or
or
(bad)
aam
out
and
or
cdq
push
test
jmp
or
add
sub
push
mov
jo
add
nop
push
fsubr
jne
sbb
jecxz
adc
rcl
inc
or
in
mov
dec
idiv
lea
jbe
sub
xchg
xor
sbb
sbb
or
clc
in
mov
mov
in
jbe
mov
stos
mov
inc
sub
(bad)
test
jbe
ret
jle
test
dec
mov
into
es
jbe
pop
sar
xor
inc
lea
fmul
hlt
test
mov
jecxz
cld
jecxz
loopne
pusha
sbb
add
mov
aad
push
rol
xchg
push
sub
lods
xlat
add
sar
(bad)
add
add
add
adc
mov
inc
or
push
jne
ja
loop
adc
mov
jle
inc
sbb
dec
jmp
scas
pusha
lea
add
inc
or
xchg
cli
jp
das
lods
sbb
jmp
mov
push
lahf
mov
outs
pop
mov
inc
or
enter
sbb
jo
cli
xchg
xchg
mov
sub
daa
(bad)
mov
xchg
or
cmp
or
ins
sbb
fcom
jnp
jmp
pop
jne
xchg
sbb
repnz
mov
and
scas
mov
sub
cwde
or
mov
jg
add
pop
xchg
xchg
jmp
fst
movs
xchg
adc
add
les
enter
sbb
ret
loope
adc
cwde
pop
test
sub
jmp
and
xchg
jmp
adc
sahf
jne
adc
cli
adc
ins
and
call
cs
inc
or
pop
or
sbb
jmp
loop
daa
mov
sbb
push
and
mov
les
(bad)
das
test
jp
sbb
(bad)
push
mov
mov
cmp
xor
sbb
(bad)
call
and
mov
aam
adc
lea
test
push
jne
xor
loope
jne
or
ins
or
gs
dec
repz
pop
pusha
push
or
push
fistp
add
or
rcr
xor
ins
or
or
addr16
and
pusha
loop
adc
or
sbb
fchs
rcl
and
cwde
xchg
cld
(bad)
fmul
inc
and
dec
inc
adc
inc
fmul
xlat
out
pusha
imul
fldcw
les
fsub
clc
and
int
clc
outs
pop
rcl
lock
pop
sahf
push
sahf
mov
and
xor
cld
and
popf
into
int3
and
mov
loop
imul
pusha
call
xor
pop
push
in
dec
push
imul
mov
int
in
and
pop
les
ror
addr16
les
inc
pop
adc
sbb
movs
mov
dec
enter
lock
fld
xor
push
xchg
add
jo
cmp
aam
cmp
fadd
in
or
popf
out
rcr
fcmovb
in
or
pop
push
fwait
push
and
inc
or
inc
addr16
adc
mov
adc
pop
sub
fwait
mov
push
mov
scas
repz
stos
jae
movs
inc
mov
enter
adc
fld
fadd
xor
jne
pop
sbb
lock
sbb
adc
sbb
or
repz
jl
lahf
ret
add
test
or
jo
adc
test
pusha
xchg
scas
pop
ret
mov
clc
add
mov
push
mov
cmp
in
sbb
xchg
adc
movs
aaa
cmp
pop
mov
add
mov
sub
mov
mov
add
inc
mov
dec
call
cmp
bound
mov
pop
sub
enter
aam
mov
jne
daa
rol
mov
cmp
add
sub
adc
in
xchg
dec
push
inc
int3
lea
mov
jp
mov
cmc
cli
jp
mov
mov
out
jmp
mov
jp
dec
or
inc
mov
loopne
or
cmp
mov
in
scas
or
inc
and
cli
outs
pusha
mov
mov
or
push
mov
push
sbb
dec
lock
stos
add
sbb
daa
mov
sub
pop
dec
and
sahf
add
and
lods
jecxz
dec
mov
add
ds
mov
or
fbstp
sbb
jge
sub
imul
add
neg
mov
sub
mov
into
push
mov
cdq
mov
mov
loopne
xor
and
mov
push
movs
data16
pop
adc
ins
mov
test
sub
clc
loopne
jle
loopne
jge
ss
std
ss
sub
push
es
adc
push
arpl
sti
shl
sub
or
push
sar
adc
push
xor
inc
into
pushw
rcr
inc
fadd
add
xor
add
pop
mov
adc
inc
loopne
rcr
sbb
pop
cwde
inc
mov
push
cwde
or
call
or
cwde
aas
or
mov
sbb
cwde
cs
ror
in
loopne
push
inc
test
inc
push
sub
dec
cmp
adc
add
std
int
push
hlt
xchg
les
sbb
push
add
pop
and
push
or
int
(bad)
call
xchg
jne
(bad)
out
inc
or
add
js
mov
and
mov
cmps
imul
add
add
push
pop
clc
and
jo
or
popw
or
adc
inc
xchg
das
xchg
xchg
fcom
jns
adc
jg
arpl
adc
add
add
je
and
add
adc
enter
jecxz
sbb
mov
sub
pop
pop
cmp
(bad)
pop
fisubr
mov
pop
enter
outs
sub
dec
dec
test
jno
sbb
or
xchg
pushf
enter
popa
mov
mov
das
fdiv
sub
je
xchg
inc
xchg
jmp
(bad)
pop
outs
in
jb
rcl
call
jmp
cmp
jne
pop
test
jnp
aas
or
jne
neg
or
xor
sub
pusha
adc
push
ret
lods
cmps
inc
xchg
mov
cmp
adc
push
into
push
pusha
jmp
dec
nop
aaa
(bad)
cmp
cmc
adc
push
and
sub
in
in
shl
aad
iret
movs
mov
or
add
(bad)
mov
xor
shl
test
imul
and
mov
cs
or
jo
add
jnp
cmps
mov
inc
push
ficom
xor
push
js
add
sbb
hlt
adc
aaa
xor
fimul
lock
ret
out
(bad)
jne
mov
jns
cmp
pop
adc
xor
lock
inc
shr
aaa
cmp
jb
div
jmp
jne
ret
dec
push
in
int
add
xor
xor
ja
add
push
ja
cld
add
add
mov
or
cmp
hlt
pop
xor
push
bound
clc
add
add
push
fmul
clc
sub
inc
add
movs
adc
push
in
push
outs
xchg
xchg
lds
ds
in
mov
fmul
add
pop
mov
inc
aas
cmp
xor
add
daa
mov
call
fild
movs
(bad)
loop
mov
mov
mov
movs
dec
stos
dec
push
push
add
inc
dec
cwde
inc
(bad)
hlt
and
cmc
or
jo
pop
arpl
retf
mov
sti
div
sub
fild
fld
mov
arpl
push
pushf
and
xchg
jmp
mov
clc
imul
repz
push
and
into
hlt
iret
shl
stc
imul
pusha
or
stc
sub
adc
xor
xor
imul
push
pop
xor
pop
mov
aad
jmp
adc
mov
pushf
add
das
sbb
rcr
inc
push
adc
pop
stos
dec
loopne
push
dec
add
int
sub
add
jl
mov
in
sub
nop
jb
lock
cmp
test
cdq
movs
push
push
sub
mov
push
or
lods
popa
cmc
loopne
xchg
lea
cmp
mov
push
cli
push
push
rcl
(bad)
enter
out
add
aad
fst
or
and
sbb
shl
rcl
neg
(bad)
bound
ins
push
mov
shr
aaa
int3
aam
shr
cmovb
mov
or
imul
ja
ret
lahf
cmps
imul
(bad)
xor
and
xlat
inc
test
call
sub
jo
clc
loope
adc
cmp
lock
pushf
inc
pushf
or
cli
ret
dec
sub
movsx
scas
cs
inc
ret
test
adc
retf
dec
dec
hlt
xchg
push
mov
or
dec
xchg
mov
mov
jg
and
push
mov
mov
loopne
lods
loope
pop
repz
sbb
dec
pusha
out
or
jmp
dec
shr
adc
or
sbb
cmp
or
or
push
rcr
scas
hlt
and
enter
mov
aaa
add
add
mov
inc
test
mov
(bad)
push
mov
aad
jbe
je
push
scas
es
sbb
lods
fimul
shl
push
push
mov
adc
bound
mov
pop
mov
jmp
ret
dec
pop
test
mov
call
xchg
enter
mov
mov
sub
cmp
sti
xor
lea
inc
adc
push
jmp
call
add
adc
jmp
adc
rcl
sbb
sbb
into
mov
sbb
mov
and
cmp
js
add
stos
mov
ins
out
pop
ret
mov
lock
sub
push
sbb
sub
adc
push
inc
cld
xor
xor
xchg
fist
or
ds
call
test
mov
shl
jmp
outs
add
fdivr
shl
inc
pop
stc
adc
pop
sub
in
pop
int3
es
pop
inc
pusha
pop
add
sub
adc
add
shl
push
inc
and
jnp
xchg
push
add
sub
add
mov
test
fld
add
xor
mov
cmp
ret
xchg
mov
test
xor
sbb
dec
enter
adc
dec
pushf
pop
add
adc
mov
xor
add
aaa
mov
movs
jbe
or
push
or
daa
jo
mov
xor
dec
mov
push
cmp
jne
add
pop
outs
xor
add
inc
fld
push
mov
add
adc
dec
add
or
add
xor
mov
test
mov
scas
inc
mov
sar
dec
mov
and
sub
jbe
mov
dec
push
add
jmp
int
or
or
mov
nop
inc
int3
dec
or
dec
adc
inc
gs
xor
ror
add
in
adc
call
mov
inc
fisttp
pushf
rol
xor
mov
into
call
mov
shl
lea
pop
cli
adc
mov
cli
test
sbb
pop
xchg
arpl
sbb
retf
xchg
dec
xchg
scas
adc
aaa
into
inc
pop
jl
jle
leave
and
(bad)
inc
jb
pop
mov
dec
pop
and
pusha
push
daa
addr16
xor
cmp
ret
cmp
jnp
(bad)
mov
rol
icebp
jne
mov
jl
or
add
or
push
cmp
dec
or
loopne
call
mov
inc
jo
mov
(bad)
in
push
jmp
loopne
xor
sub
jecxz
or
into
inc
cmp
push
cmp
je
inc
add
cmp
jl
pop
add
ret
ins
icebp
adc
mov
icebp
sar
loope
lock
pop
sbb
inc
inc
push
idiv
cs
(bad)
jmp
nop
xchg
push
push
pop
(bad)
test
sets
push
adc
or
xchg
mov
sub
xchg
nop
inc
jno
sub
add
inc
jno
sub
pop
adc
or
and
fmul
jae
push
out
add
dec
pusha
xor
movs
imul
pop
ins
(bad)
adc
mov
pop
mov
cmps
sbb
aam
mov
inc
test
sbb
xor
xor
int
adc
dec
es
test
add
test
xchg
mov
push
inc
sub
xor
out
cmp
mov
fld
test
jne
not
dec
ds
sub
lea
xchg
int3
jge
adc
in
int
pop
(bad)
dec
inc
mov
or
push
inc
dec
adc
bound
lock
(bad)
sar
dec
mov
pop
jl
sbb
and
cmp
shl
jmp
or
sbb
inc
mov
loopne
push
and
sbb
inc
rol
push
or
jb
sub
and
and
mov
and
enter
add
pop
rol
mov
mov
push
jno
mov
jbe
outs
adc
sbb
xor
jge
jno
xchg
sbb
jno
mov
jo
je
xchg
popa
jae
mov
div
jg
jle
adc
es
or
in
add
add
adc
and
add
jl
xor
test
xchg
xlat
iret
jg
adc
add
js
push
mov
cld
jbe
adc
dec
add
dec
push
(bad)
(bad)
cld
xor
test
cld
adc
pop
into
shl
in
(bad)
ficom
add
pop
mov
lock
pop
xor
xchg
sub
add
addr16
out
xor
or
sbb
dec
pop
shl
les
std
fbld
nop
sbb
popa
sub
out
jbe
push
inc
popa
add
and
sbb
lock
enter
inc
stos
adc
mov
mov
sbb
mov
rcl
dec
lds
sti
jmp
daa
(bad)
popf
movs
push
in
push
adc
ffree
push
in
mov
or
call
aaa
add
adc
sub
inc
push
or
hlt
pop
dec
dec
fmul
xor
movs
pop
sbb
pop
int
cmp
fadd
sub
popf
pusha
sbb
and
mov
mov
lds
test
int
jl
push
jb
xchg
call
fwait
jmp
push
or
adc
ja
or
adc
sbb
or
or
out
xor
add
loop
clc
loopne
pop
dec
push
sti
mov
mov
mov
hlt
or
lds
repz
test
push
xor
jl
adc
mov
jo
hlt
add
xchg
or
sub
cmp
dec
je
fwait
aaa
sbb
push
mov
push
adc
xor
mov
mov
imul
push
adc
add
mov
jge
arpl
les
scas
cmp
pop
rcl
push
popa
mov
xor
pop
mov
ror
adc
pop
not
push
add
sbb
mov
cld
add
or
jb
clc
dec
punpckldq
sbb
mov
cmp
sbb
mov
mov
mov
sbb
stc
mov
cmp
cmp
xchg
push
cli
out
push
add
mov
mov
mov
data16
outs
add
pop
mov
xor
loop
add
xor
cmp
or
loope
enter
std
push
mov
sub
rcr
dec
sub
xor
maskmovq
dec
pop
push
ficom
enter
rol
ficom
adc
loopne
daa
push
or
push
mov
or
je
inc
out
mov
stc
pop
inc
jb
add
or
dec
dec
xchg
enter
or
out
fscale
dec
cmp
je
test
jae
mov
mov
push
ret
and
cmp
push
out
or
stos
cwde
mov
out
mov
clc
pop
sbb
into
stos
or
sbb
fwait
imul
jg
sub
je
dec
je
adc
je
jmp
cmc
ins
or
xor
mov
jmp
xor
aaa
dec
enter
adc
sbb
cmp
jmp
inc
mov
sbb
pop
jnp
push
rcl
push
pop
in
hlt
cmp
or
or
push
test
sub
sbb
mov
inc
test
sbb
mov
idiv
sbb
xchg
imul
std
dec
add
mov
dec
pop
movs
test
clc
or
cmps
rcr
jb
or
lahf
clc
push
jns
hlt
dec
mov
jmp
pop
mov
mov
jmp
push
xor
dec
or
imul
jmp
jp
add
fist
shl
sbb
aaa
mov
dec
aam
or
dec
inc
push
pop
push
in
sar
push
adc
pop
aaa
sub
lock
or
jmp
leave
shl
in
or
lea
clc
pop
call
xor
out
pop
jmp
inc
test
ror
add
jb
(bad)
shr
inc
inc
push
xchg
mov
dec
sub
call
in
js
je
push
rcl
rol
test
jmp
jne
das
stos
enter
call
mov
mov
xchg
out
cmp
mov
sbb
pusha
xor
enter
ja
pop
xchg
iret
sbb
xlat
nop
cmp
inc
mov
and
push
daa
cld
test
call
jb
xor
loope
add
jmp
cdq
lock
les
jb
(bad)
fs
call
mov
adc
sub
dec
dec
nop
pop
in
(bad)
fistp
sahf
iret
lds
push
adc
adc
mov
test
(bad)
sbb
dec
pusha
rcr
cmp
sbb
shl
ins
cmp
or
mov
sbb
or
dec
add
xor
xor
mov
jecxz
adc
mov
mov
mov
or
out
mov
inc
fild
fld
xor
push
dec
nop
jg
(bad)
jbe
push
sti
fisub
mov
jmp
pop
mov
sahf
xchg
int3
xor
mov
add
pop
ficomp
adc
cmp
inc
repz
enter
jne
pop
ret
loopne
jae
push
jae
jp
sbb
and
dec
inc
fwait
ret
das
in
outs
mov
ja
adc
xor
sbb
in
cmp
clc
jmp
mov
pop
jmp
inc
adc
add
lods
test
fsubrp
shl
xor
push
dec
bound
lock
mov
xor
js
fwait
jno
jge
out
jmp
push
aam
xor
or
sub
loopne
add
pop
test
into
xchg
(bad)
xchg
dec
and
cmp
jne
push
push
cmp
mov
popa
inc
stc
test
(bad)
ds
pop
sbb
mov
push
out
pop
mov
cmp
(bad)
xchg
rcl
sub
test
inc
je
or
inc
inc
xchg
inc
rol
pushf
xchg
popa
xchg
pop
sbb
or
ret
cmp
lods
adc
cmp
rol
imul
loopne
add
cld
cmp
mov
movzx
dec
inc
cmp
jb
push
repz
inc
or
inc
lods
jne
dec
jnp
mov
push
pop
lds
jecxz
sbb
add
jmp
idiv
sbb
dec
cmp
mov
inc
xor
fwait
push
fiadd
sbb
inc
mov
outs
and
cmp
rcl
sbb
fist
arpl
xor
jnp
push
pop
mov
sub
cmp
push
int3
add
or
ret
mov
jle
xor
bound
push
jo
imul
mov
scas
pop
pop
mov
lock
add
push
stc
xchg
jp
add
repnz
jmp
and
in
imul
push
lds
jg
je
in
dec
or
sub
fidiv
add
xor
jmp
xchg
mov
xchg
add
dec
dec
fucomp
push
scas
(bad)
mov
pop
ja
xchg
sbb
imul
(bad)
mov
pop
or
pop
cmps
push
in
test
push
nop
test
ret
enter
or
sar
pop
or
jmp
cmps
push
cmp
jb
rol
call
ds
adc
or
je
test
mov
shr
jb
dec
cmp
xchg
rcr
(bad)
xor
ret
fcom
jno
cmp
and
fninit
add
popa
sahf
inc
fsubrp
arpl
out
pop
loopne
sub
or
mov
sub
int3
dec
mov
cs
(bad)
cmovp
lods
jns
xchg
ret
daa
mov
and
push
add
mov
jmp
sbb
fisubr
push
sbb
push
retf
xor
and
inc
sub
sbb
or
sub
mov
clc
jmp
ss
pop
or
dec
adc
shl
jno
sub
bound
mov
xchg
or
add
xor
adc
xor
loop
cmp
popf
add
das
lahf
mov
mov
jmp
fdivr
pop
clc
cmp
cmp
mov
push
jmp
sbb
jl
push
xlat
jle
clc
outs
pusha
sub
jmp
lea
and
add
fcmovne
je
(bad)
(bad)
push
pop
fidiv
and
xor
cmc
add
lds
sahf
sar
mov
je
and
jmp
xlat
pusha
jnp
mov
jmp
pop
popa
adc
jmp
bound
outs
jmp
add
push
mov
(bad)
call
or
push
adc
dec
sbb
adc
adc
mov
add
mov
mov
sbb
mov
add
ret
or
or
sub
cwde
pusha
or
scas
and
adc
inc
pusha
loopne
ja
cmp
jl
ds
mov
mov
adc
pop
mov
push
clc
call
pop
xor
jge
mov
test
je
mov
icebp
test
jne
nop
push
jae
mov
push
imul
and
cmps
cwde
mov
mov
mov
xor
arpl
mov
mov
inc
ret
popf
dec
jl
push
out
jg
mov
jb
xchg
cmp
inc
mov
mov
call
iret
lea
dec
sbb
test
ret
cmp
dec
test
lea
cdq
idiv
pop
sti
fisttp
push
fimul
add
mov
and
or
ret
push
nop
xchg
sar
inc
or
loop
mov
add
adc
icebp
add
mov
push
mov
cmp
pop
push
add
add
and
cld
push
push
push
sub
fidivr
jg
test
pop
xlat
add
push
adc
inc
pushf
add
cmp
inc
in
jno
xor
call
std
and
test
jg
xor
mov
mov
pop
and
adc
mov
gs
out
push
je
sub
ja
aad
test
aas
mov
mov
nop
xchg
push
test
pop
mov
xchg
pop
ds
jg
mov
and
push
pop
test
clc
mov
adc
mov
xor
mov
sub
test
cmp
push
mov
inc
mov
sbb
mov
mov
xchg
(bad)
loop
mov
mov
and
je
jbe
xchg
mov
push
or
cmp
rcr
dec
xor
jp
mov
dec
ret
aas
mov
jne
sub
mov
mov
ja
scas
mov
or
leave
cmp
retf
jle
or
adc
inc
xor
jbe
repnz
cmp
adc
sbb
and
cmp
jl
clc
lods
add
cmp
jo
lea
add
cmp
jp
or
xchg
inc
xor
call
mov
mov
xor
cmp
sub
jg
inc
cmp
arpl
or
and
push
xlat
into
and
push
push
dec
ror
jno
push
push
inc
jl
mov
loopne
mov
rol
stc
pop
cmps
stc
pop
jae
out
push
js
xor
ja
mov
push
sub
and
(bad)
enter
push
out
push
cmps
fs
mov
and
xor
mov
imul
add
mov
fs
push
icebp
pop
ret
leave
loope
add
cmps
mov
sbb
push
(bad)
cld
add
cmp
jle
sbb
lea
xor
inc
cmp
add
cmp
jle
cmp
sub
jle
(bad)
dec
(bad)
not
cmp
or
ds
and
push
popa
xchg
push
fwait
add
or
pop
into
inc
push
aas
clc
or
or
sbb
jg
outs
pop
sub
pop
es
sahf
xor
and
es
add
daa
and
aas
add
xor
out
mov
dec
sti
or
movs
int
sbb
movs
push
sub
(bad)
jge
xor
js
and
out
and
shr
xchg
mov
sub
xlat
mov
out
mov
xchg
cmp
jle
mov
into
int3
or
pusha
imul
fldenv
fwait
ds
or
adc
add
mov
aad
add
icebp
shl
xchg
cld
bound
mov
ja
pop
out
pop
ror
into
push
cmp
dec
push
mov
mov
test
adc
enter
inc
push
xlat
add
mov
pushf
jmp
jae
addr16
sub
adc
or
push
sub
ja
mov
div
or
push
cwde
xor
jmp
or
loopne
imul
xchg
mov
inc
mov
int3
dec
or
jl
xchg
dec
sbb
iret
pusha
test
jae
jae
cmp
pusha
daa
xor
arpl
push
(bad)
push
leave
inc
push
dec
mov
jnp
enter
out
inc
pop
dec
pop
push
inc
cmps
sbb
and
(bad)
sbb
std
jb
sbb
dec
leave
push
dec
cmp
sub
cmp
test
push
jae
popa
dec
rcr
inc
stc
dec
inc
dec
cmps
add
add
popa
or
out
mov
add
ins
push
xor
jno
or
jno
and
push
lods
popa
and
add
lea
adc
mov
(bad)
cmp
cmp
clc
add
out
ror
sbb
sbb
inc
xlat
shr
sub
add
shl
shl
add
mov
inc
fisttp
and
inc
cmp
jae
cmps
lea
xchg
gs
push
retf
jo
sbb
or
push
ja
inc
xor
and
push
in
in
add
fstp
sar
addr16
push
add
add
jge
mov
movs
pusha
js
inc
jg
int3
loopne
cwde
jnp
(bad)
jbe
add
sub
icebp
test
or
push
inc
dec
mov
retf
mul
mov
add
sub
push
push
mov
fcmovb
push
xchg
lods
ret
pop
sqrtps
pop
mov
aad
scas
js
outs
add
cmove
or
add
test
es
or
iret
add
dec
mov
inc
xor
(bad)
jbe
add
call
cmp
jge
out
dec
push
mov
add
adc
fmul
shl
inc
ds
sbb
adc
or
mov
sbb
cmps
sbb
test
or
adc
push
cld
push
fcom
mov
push
ret
xchg
dec
ret
aas
add
pop
xor
mov
imul
shr
or
add
fbstp
shl
fbstp
mov
ja
push
shl
push
add
push
sub
or
pop
sub
mov
pop
test
je
pop
popa
push
lods
out
(bad)
lods
and
push
jmp
sub
sbb
dec
mov
movs
mov
outs
add
sbb
or
arpl
jg
push
(bad)
mov
gs
out
mov
adc
enter
adc
dec
sub
mov
inc
or
mov
adc
and
je
and
push
sbb
jo
out
aaa
push
data16
sub
rol
rcl
ret
push
lea
add
mov
dec
push
jmp
adc
and
add
pop
adc
imul
jo
inc
jl
fisttp
and
pop
shl
cmp
jbe
out
jae
fs
pop
movs
jecxz
mov
add
mov
sbb
movs
(bad)
jg
jbe
sar
jp
mov
cwde
fcomp
mov
in
adc
popf
cmp
and
add
add
inc
adc
and
xchg
push
idiv
add
shl
cmp
push
and
sbb
add
lea
adc
or
jl
sub
inc
or
dec
adc
out
jnp
cmp
xor
inc
xor
loop
xchg
or
mov
adc
fst
(bad)
push
xchg
pop
dec
(bad)
sbb
or
ds
mov
sti
test
test
xor
mov
push
fidiv
inc
(bad)
je
data16
cmp
cmp
mov
or
jns
add
jae
jmp
mov
jmp
out
rol
test
in
call
and
scas
sbb
xchg
popa
jecxz
inc
cmp
je
or
push
sahf
cwde
sub
mov
inc
retf
add
call
add
cdq
shl
mov
sub
dec
fidivr
mov
adc
sbb
inc
add
leave
jne
or
fsub
out
pop
bound
pop
loope
mov
mov
pusha
cmp
add
mov
dec
or
or
cmp
or
sub
pusha
add
pop
lock
nop
fnstsw
aas
jecxz
or
dec
add
xor
daa
sub
sbb
in
jge
sti
jge
or
jmp
adc
sbb
xchg
add
mov
ss
adc
sub
cmp
jmp
leave
fsubrp
pop
xchg
shl
cmps
outs
mov
aas
and
add
and
and
jne
jb
push
adc
pop
movs
es
mov
mov
retf
adc
sbb
mov
or
rol
push
jbe
mov
aaa
rcl
add
pop
push
xchg
jg
hlt
jg
sub
jg
push
fisttp
cmp
mov
inc
pop
pop
adc
inc
jl
cmp
mov
or
je
ret
jnp
mov
sub
push
clc
mov
add
ret
dec
movs
fwait
loop
hlt
sub
(bad)
adc
add
push
xchg
jo
push
mov
pop
jmp
adc
rol
test
add
dec
call
push
or
or
pushf
shl
loopne
adc
cmp
mov
or
add
or
inc
mov
add
dec
sub
or
push
push
(bad)
mov
xor
pop
ret
js
aaa
sbb
outs
call
or
inc
or
jmp
pop
push
jg
cmp
jg
mov
and
pusha
mov
mov
les
dec
adc
xchg
cmp
mov
lock
mov
add
in
jnp
jmp
scas
dec
sbb
or
sub
push
and
push
cmp
fistp
jbe
and
push
mov
stos
mov
and
cmp
jae
jmp
lods
mov
aaa
pop
push
jb
mov
pop
popf
adc
(bad)
push
cmp
jl
lods
xor
cmp
shr
push
xchg
hlt
sbb
rcl
retf
pop
jg
ins
and
in
lea
mov
inc
push
stos
push
add
inc
test
dec
jge
mov
ins
and
dec
jne
enter
ret
adc
push
mov
push
in
(bad)
lods
pusha
shl
shl
cmp
pusha
or
ja
jo
sbb
sub
xor
fwait
pop
adc
mov
ds
mov
inc
popf
in
xchg
adc
aam
push
or
test
mov
outs
mov
movs
in
adc
fs
pusha
and
dec
rcr
mov
inc
pop
mov
outs
pop
outs
push
ins
xchg
pop
pop
sub
jg
pop
repz
add
xchg
mov
and
jno
lea
sub
sbb
sbb
(bad)
jp
bound
or
cmp
mov
pop
js
xor
push
push
mov
cmp
or
mov
arpl
(bad)
dec
sbb
sub
outs
jo
dec
test
push
cmps
pop
iret
and
je
sbb
(bad)
ror
push
rol
movs
retf
adc
jo
mov
stos
xor
(bad)
in
jp
sbb
hlt
je
pop
cdq
rol
inc
mov
popa
inc
outs
push
mov
add
in
jge
test
jmp
in
je
sub
lock
dec
add
cmc
mov
push
mov
add
xor
push
sub
sub
(bad)
mov
and
jno
fdiv
and
inc
and
aam
ins
loope
int
ret
mov
out
je
ret
pop
mov
jne
lock
push
popa
stos
add
pop
clc
jmp
aas
and
imul
sbb
fbld
sbb
adc
and
test
mov
and
int
sub
mov
jmp
mov
lock
mov
and
into
ja
mov
cld
and
push
call
mov
dec
xor
or
sub
inc
loopne
(bad)
push
push
daa
push
mov
sub
shl
lds
retf
and
popf
sub
pop
sbb
mov
jp
push
rcr
push
or
in
or
xchg
das
adc
fistp
or
push
sbb
cmp
add
idiv
jbe
outs
pop
add
cmp
jle
dec
in
jne
jg
(bad)
sub
es
aaa
cld
es
and
sbb
imul
add
cmp
mov
inc
pop
shld
xchg
fsub
and
inc
mov
les
retf
arpl
je
jle
sub
jle
or
pop
bound
fist
std
mov
mov
es
mov
xor
cmp
ss
adc
cwde
fimul
adc
mov
mov
adc
call
imul
pop
mov
outs
ror
cmp
and
outs
shr
inc
es
push
in
xchg
arpl
sub
(bad)
(bad)
in
cmp
and
mov
push
add
cmp
inc
xor
and
add
xchg
je
or
popa
mov
rol
mov
push
lea
adc
jmp
js
aas
je
mov
and
add
jmp
loopne
add
or
test
inc
jl
pop
sbb
outs
push
push
push
sub
jmp
fisttp
xlat
inc
jne
jae
or
xor
jmp
mov
or
push
in
sbb
jl
in
mov
scas
hlt
clc
mov
adc
mov
or
loop
push
not
aaa
dec
and
jb
xchg
std
jg
gs
mov
jl
push
mov
test
jl
cmp
adc
sbb
pop
ss
aad
sbb
cmp
loopne
add
and
mov
int
push
or
inc
adc
adc
mov
out
mov
test
push
jle
sbb
jp
int3
pop
jne
pop
inc
je
jl
or
inc
jge
pop
nop
adc
adc
rcr
pop
test
jl
cmp
jg
push
sbb
sbb
cdq
inc
rcr
adc
(bad)
in
xor
or
xor
dec
sub
push
add
or
lea
mov
mov
pusha
lock
lea
pop
cmp
sbb
sar
(bad)
push
dec
add
fbstp
cmp
jge
mov
xor
cmp
push
push
clc
add
inc
sbb
cmp
and
sub
dec
inc
inc
into
loope
sbb
stos
or
rol
lods
add
clc
mov
and
mov
jmp
sbb
loopne
cmp
adc
jne
nop
jns
cmp
dec
pop
scas
inc
cmp
pushf
mov
push
and
lea
cmp
pshufw
enter
cmp
xchg
pusha
sub
jle
and
daa
or
and
(bad)
sub
shr
mov
loope
xor
push
adc
enter
xor
fsubr
dec
xchg
js
shl
lods
lea
push
dec
xor
add
retf
adc
fcmovbe
mov
dec
rol
or
mov
mov
lea
push
shl
add
mov
inc
mov
shr
fadd
sbb
mov
inc
enter
or
adc
pop
push
inc
movs
shr
cmp
cmp
xor
push
xchg
xchg
adc
add
pop
stos
cmp
or
inc
clc
pop
loopne
add
in
add
jecxz
pop
in
fild
cmp
mov
inc
ss
mov
das
inc
fidivr
mov
mov
inc
cmp
ins
imul
push
xor
add
sbb
or
mov
hlt
pushf
addr16
jmp
sub
add
add
cmp
push
inc
add
xchg
test
adc
aaa
pop
push
loope
and
test
fcmovnb
jmp
mov
jns
sar
inc
pop
aaa
fs
xor
scas
ror
pusha
push
adc
cs
in
cmp
mov
pop
xor
stos
pop
daa
cmp
sbb
or
outs
fsub
fcom
shr
shr
xchg
adc
iret
out
and
or
mov
add
push
sbb
test
cmp
adc
shl
fucomp
mov
sti
mov
outs
inc
sub
jb
je
bnd
js
cmps
fadd
mov
nop
pusha
daa
mov
pop
addr16
adc
mov
lods
cmp
sub
pop
je
sub
xor
add
jmp
in
xchg
(bad)
gs
add
cmp
adc
cmp
jg
mov
or
imul
jge
sub
jge
adc
(bad)
aaa
cs
adc
or
adc
and
test
mov
mov
push
mov
inc
and
push
shl
add
add
adc
fild
push
fisttp
ja
fwait
xor
ja
ret
outs
sti
dec
sbb
dec
sbb
xchg
rol
xchg
inc
shl
sub
push
int3
or
ds
pop
imul
test
aaa
push
mul
pop
pop
add
inc
add
cmps
mov
pop
je
dec
je
jmp
ror
xor
inc
ja
mov
sbb
mov
jl
xor
jle
add
mov
xchg
sar
lods
cli
lea
add
add
xor
test
or
inc
cmp
mov
jmp
pop
aam
mov
add
popa
cwde
out
(bad)
std
stos
sub
scas
xor
and
xchg
and
aam
sbb
or
cmp
jmp
pop
add
xlat
pop
out
push
push
call
cmps
add
push
sbb
loop
sbb
iret
jno
add
cmp
push
push
sahf
loop
mov
or
sub
imul
cmp
cmp
adc
arpl
push
mov
clc
imul
call
ja
imul
push
sbb
push
lea
push
push
jne
add
add
fsubr
call
dec
jne
inc
call
jnp
xor
fmul
ret
jmp
daa
sbb
adc
mov
movs
cmp
movs
add
xchg
inc
sub
(bad)
mov
repnz
push
inc
or
pop
sub
sbb
hlt
in
mov
sbb
lods
shl
loopne
sbb
push
xor
adc
xor
pop
or
shl
pushf
inc
and
loope
or
loopne
mov
mov
aam
hlt
(bad)
push
scas
shl
rol
sub
dec
lock
loopne
inc
sahf
in
test
ss
pop
and
sub
xor
lock
xor
sub
int3
dec
jns
cmp
push
stos
stc
movs
xchg
fistp
pop
mov
(bad)
cld
lea
mov
add
xor
out
ja
pop
loope
in
fcomp
mov
(bad)
cmp
inc
jmp
push
adc
dec
xor
ror
fild
cmp
jbe
and
in
rcr
xor
outs
push
enter
push
lea
rol
js
and
mov
adc
push
sub
dec
add
sub
rol
cmp
jge
es
and
lock
adc
in
pop
jno
push
jl
inc
mov
(bad)
fisttp
mov
pop
sbb
cmp
mov
and
sbb
xor
shl
mov
pop
dec
cmp
fstp
scas
inc
or
dec
enter
or
inc
xor
fnclex
add
imul
ins
add
retf
inc
adc
mov
pusha
mov
in
xchg
in
sbb
movs
test
jmp
mov
mov
xor
adc
or
enter
or
ret
lock
(bad)
sub
cmp
lock
mov
or
fwait
mov
inc
cmp
cmps
or
sub
sbb
or
lock
sti
push
imul
inc
sti
lock
add
fsubr
mov
add
xor
mov
dec
in
push
or
jmp
jge
sbb
push
jmp
mov
neg
push
push
dec
out
(bad)
adc
push
inc
push
mov
push
inc
and
lods
shl
inc
jle
inc
or
sahf
mov
inc
cmp
in
jg
or
shl
xor
inc
jnp
sub
outs
into
jne
jge
adc
loop
retf
dec
icebp
and
push
int3
mov
out
lods
test
xchg
xchg
data16
sbb
or
adc
cwde
and
mov
xor
xor
add
add
call
add
adc
add
pop
push
ficom
rcl
not
jb
loop
rol
adc
push
sti
jo
xor
cmp
or
stos
mov
adc
pusha
or
lods
nop
loopne
inc
or
cmps
inc
lea
mov
inc
(bad)
and
cmps
mov
add
sbb
and
stos
je
idiv
fdivr
movs
xchg
lock
cmp
loop
scas
rcl
fwait
pusha
cmp
adc
or
cmp
je
fild
lea
mov
mov
push
cwde
mov
bound
cli
mov
jge
inc
cmps
ret
daa
les
add
or
bound
movs
add
xor
mov
adc
dec
add
dec
pop
push
adc
jmp
sbb
(bad)
adc
movs
(bad)
movs
sti
daa
in
push
loop
and
ret
fbld
jb
sbb
add
add
push
cmp
adc
or
and
loop
jmp
add
inc
pop
dec
cwde
sbb
cmc
pop
xor
push
inc
lock
cmp
das
adc
shl
sar
jo
cmp
pop
loopne
add
jmp
mov
xor
or
or
inc
inc
jmp
mov
loop
or
pop
loopne
pop
or
cli
mov
cmp
push
out
add
dec
je
add
pop
sub
cld
sub
sub
mov
xor
jmp
cmp
push
dec
inc
xor
test
mov
or
das
movups
cld
add
cmp
addr16
xor
cwde
mov
retf
sbb
sub
jmp
test
mov
sub
mov
sub
loopne
xchg
js
mov
cmp
jmp
mov
cmp
xor
jp
push
scas
loopne
inc
ror
sub
hlt
sbb
add
adc
add
mov
or
icebp
adc
repnz
push
mov
je
mov
xor
add
sbb
dec
xor
and
mov
and
sbb
mov
pop
jp
mov
jne
dec
fld
xchg
push
shr
adc
cmp
ja
add
sub
sar
cmp
imul
out
xor
ret
out
out
aaa
inc
out
xchg
imul
pusha
lea
sub
fiadd
enter
cmp
call
cli
add
sub
push
ja
lock
mov
jl
xor
jmp
push
push
sbb
test
in
mov
xor
inc
stos
jb
jle
jo
inc
mov
mov
fsubr
cmp
sbb
push
push
xchg
iret
sub
mov
(bad)
xor
call
fdivr
pop
inc
dec
ds
mov
push
pop
and
push
add
rol
xchg
in
retf
pop
xor
dec
mov
push
mov
xor
adc
pop
push
push
push
pop
mov
and
pop
and
push
inc
xor
retf
adc
cmp
push
outs
jae
imul
push
mov
inc
jl
push
push
adc
pop
mov
and
stc
hlt
push
inc
out
push
sub
cmc
mov
div
mov
test
jle
out
(bad)
cwde
loopne
cmps
add
rol
scas
adc
repz
cmp
mov
in
faddp
jge
mov
and
and
cmp
cmc
loop
into
sbb
lahf
xchg
ret
scas
cs
sbb
xor
enter
pop
ret
or
push
xor
push
mov
pop
jle
xchg
add
adc
jg
inc
repnz
or
ja
data16
hlt
pop
mov
dec
mov
lock
je
adc
repz
xchg
mov
lss
mov
and
push
push
cmps
inc
dec
sbb
mov
xor
ja
mov
pop
js
lock
inc
je
and
add
push
pop
sbb
push
jne
lds
or
loopne
ins
loop
xor
inc
sub
push
mov
push
inc
sub
dec
mov
inc
fdivrp
jmp
jmp
adc
adc
(bad)
out
adc
sbb
out
cwde
and
shl
pop
or
mov
cmp
mov
sbb
fld
push
iret
adc
es
push
fiadd
sbb
enter
sub
add
jecxz
bnd
and
push
(bad)
fadd
adc
loop
test
or
fwait
int3
jmp
jb
xor
pusha
mov
ret
sbb
jns
sub
hlt
loopne
cmp
adc
div
stc
adc
aam
inc
adc
into
mov
loope
add
add
ror
lock
add
or
pop
or
pusha
aam
jp
inc
dec
adc
cmp
cmps
mov
int3
test
lea
je
js
lock
jp
ret
div
addr16
sbb
push
add
inc
pop
or
add
ja
hlt
popf
xchg
into
jge
ja
ds
cmp
in
ds
adc
fisttp
(bad)
cdq
cmp
out
(bad)
push
mov
fisttp
jno
fs
dec
mov
repz
xchg
lock
je
adc
pop
push
mov
inc
ins
mov
pop
popa
push
mov
dec
scas
loopne
ds
or
rol
cs
cmc
jg
jmp
push
mov
push
es
mov
lods
aam
(bad)
fadd
jecxz
add
mov
cwde
ret
sar
pop
or
adc
je
mov
mov
push
adc
outs
sbb
sbb
imul
jge
or
inc
xchg
mov
fcom
(bad)
sub
or
and
int
je
or
stos
lods
arpl
or
push
(bad)
jge
fnsave
cmp
xchg
sbb
repz
sbb
sub
lea
inc
pop
loopne
ret
xchg
jb
sti
mov
inc
sbb
inc
in
jmp
push
in
sub
add
pop
add
jno
mov
or
xchg
loopne
mov
ror
mov
jl
inc
sar
pop
loopne
xchg
cmp
jae
mov
add
mov
mov
inc
hlt
push
ror
pop
add
jb
add
or
leavew
and
sar
mov
mov
mov
retf
and
aas
push
sbb
rol
int3
sar
pop
adc
sub
in
cmp
rcl
push
dec
inc
mov
push
fcmovnb
xor
psubb
jl
jmp
or
or
orps
aam
mov
inc
movs
pop
add
lmsw
sbb
adc
pusha
hlt
ds
xor
ja
sbb
retf
test
loopne
sbb
jle
shl
popf
sbb
fsubr
sub
shl
loop
shl
inc
push
pop
dec
mov
dec
jge
fadd
(bad)
outs
(bad)
loopne
ror
in
in
fs
jno
movs
push
stos
test
push
mov
add
mov
sub
mov
cmp
sub
test
in
cmp
sbb
fsubr
add
fcomp
add
adc
ficom
lds
push
call
xor
cmps
pop
mov
pop
push
inc
int3
inc
clc
add
inc
add
push
dec
(bad)
jmp
push
js
cmp
jae
mov
mov
add
inc
sub
sub
repnz
xchg
push
popa
xor
jno
lock
cmp
push
and
outs
add
mov
xchg
cmp
mov
xor
dec
mov
and
mov
cld
sbb
pop
jl
jl
push
or
dec
add
mov
mov
inc
test
push
int3
add
sti
pop
movs
sub
or
jb
or
jmp
sti
add
mov
add
or
lock
xchg
adc
add
inc
bnd
sub
adc
mov
mov
std
sti
add
stc
add
jmp
add
jnp
push
push
call
push
mov
cmp
jg
clc
fstp
jle
sub
jne
mov
cld
pop
out
push
add
nop
cwde
cld
shr
sub
or
push
dec
dec
lock
outs
mov
inc
cmp
mov
cwde
ins
pop
mov
cmp
cdq
mov
inc
outs
cdq
add
fidiv
dec
inc
pop
int3
syscall
cdq
pop
test
push
cmp
jne
cmp
inc
and
push
xchg
loop
out
jne
inc
add
mov
or
clc
push
hlt
sub
jle
jmp
cld
jge
test
mov
xor
jle
mov
inc
dec
adc
clc
inc
gs
dec
xor
jl
dec
inc
test
pop
dec
cmp
xchg
cli
test
push
add
int3
pop
inc
push
sub
push
cmps
mov
jmp
movs
into
in
dec
push
dec
clc
sbb
(bad)
cwde
ret
jbe
scas
dec
or
mov
std
ror
outs
(bad)
call
dec
sbb
inc
cmps
push
or
or
int3
push
add
add
addr16
push
sbb
mov
sbb
or
addr16
cdq
ja
es
(bad)
cld
retf
outs
push
inc
sub
ins
call
cli
jns
jge
add
aam
in
push
inc
pop
fdivr
dec
sbb
repz
mov
call
and
int3
iretw
aam
popa
dec
int3
js
and
scas
adc
ss
scas
aam
push
xor
pop
call
pop
mov
add
push
mov
push
jge
pcmpeqd
lock
mov
add
inc
inc
push
jl
(bad)
call
loopne
in
loopne
rcr
(bad)
add
cmp
shl
add
mov
fdiv
cmp
inc
in
push
int3
fsub
shl
sbb
sbb
pop
sub
xchg
cmp
add
mov
into
adc
jp
jo
pop
add
add
mov
push
mov
mov
enter
add
mov
arpl
inc
dec
gs
mov
add
dec
jecxz
xchg
ins
test
or
shl
jmp
fdivr
and
pop
jbe
sub
jae
xchg
inc
cld
inc
xor
sar
mov
and
inc
cmp
call
jle
inc
ret
clc
jg
(bad)
rol
out
int3
pop
mov
adc
push
rol
in
mov
add
or
enter
adc
push
add
pop
mov
lock
inc
pusha
xlat
add
sub
sbb
or
mov
fiadd
mov
sbb
add
add
iret
inc
or
add
and
xchg
outs
aam
dec
aam
xchg
jae
dec
lea
shl
push
inc
js
push
cmp
inc
or
and
stos
js
and
jbe
mov
adc
sub
dec
dec
loopne
push
ja
cmps
ds
mov
shl
jno
adc
bound
mov
cmps
cs
xor
add
adc
test
cmp
xor
mov
jbe
neg
adc
add
xchg
scas
jle
or
or
push
leave
add
or
sbb
clc
adc
fs
outs
mov
(bad)
jnp
jns
mov
inc
mov
mov
pop
(bad)
aad
push
or
inc
cmps
adc
or
adc
xadd
shl
xchg
push
and
adc
or
pop
adc
pop
push
adc
mov
dec
pop
cwde
push
scas
inc
dec
xchg
lock
inc
cdq
lock
mov
aam
inc
sbb
add
add
dec
mov
inc
xor
retf
fidiv
mov
rcr
sbb
test
inc
add
cmp
fdiv
add
jg
ret
mov
add
adc
lea
lods
enter
out
sbb
pop
outs
pop
movs
push
push
inc
sbb
sbb
push
push
push
js
inc
mov
sbb
adc
xchg
imul
mov
les
cwde
pop
mov
inc
fsubr
or
call
sbb
mov
pop
aam
mov
rcr
xor
push
fbstp
xor
repz
fmul
or
test
mov
clc
jno
xchg
or
std
add
pop
or
xor
in
(bad)
cmp
and
jbe
aam
or
or
dec
ror
sti
ja
dec
pop
mov
enter
rcl
cwde
ret
jb
inc
xor
loopne
pushf
and
lods
sar
push
inc
mov
ror
(bad)
mov
push
cmp
rol
inc
xchg
xchg
out
pop
push
mov
cs
jg
mov
add
int3
or
adc
mov
sbb
and
add
jmp
pushf
ror
ss
aaa
or
inc
or
jne
jp
jp
mov
sub
lods
mov
jmp
add
jmp
dec
cmp
mov
pusha
(bad)
sbb
jp
jne
call
jmp
lods
dec
shl
dec
sub
xor
arpl
andps
enter
add
cmp
leave
test
jne
mov
(bad)
imul
(bad)
scas
or
hlt
fdiv
test
jo
inc
add
dec
jl
int
adc
jl
cli
adc
sub
jp
arpl
out
or
movs
rcl
inc
out
(bad)
cmps
(bad)
jp
pop
mov
sbb
xor
sar
gs
or
outs
mov
fstp
sti
add
mov
cmp
cwde
dec
xor
cmp
pop
pop
add
jno
pop
fsincos
ficom
xor
mov
cmp
mov
test
add
jmp
cdq
or
sbb
into
je
mov
rcl
aas
retf
inc
call
ja
verw
cmp
sbb
adc
mov
movsx
add
xor
loopne
add
xor
mov
inc
leave
add
xchg
sti
or
cmp
jl
jmp
pop
adc
test
adc
dec
xchg
pushf
call
and
cmp
sbb
jae
push
loopne
adc
(bad)
hlt
or
pop
lds
imul
push
sbb
paddusb
fmul
inc
xor
in
or
and
lods
cmc
and
or
in
rol
mov
sbb
push
mov
pop
push
pop
xor
imul
dec
or
push
adc
or
jno
pusha
jnp
inc
add
aas
xchg
sbb
cdq
dec
test
xchg
nop
add
inc
add
scas
xchg
loopne
or
jbe
push
or
add
enter
mov
jbe
sub
or
adc
add
adc
aas
sbb
or
or
xor
jo
push
lock
adc
push
and
push
pop
aaa
pop
mov
repnz
mov
sbb
inc
(bad)
sar
add
cmp
jg
jle
and
inc
ret
jmp
sub
or
pop
shl
jne
inc
mov
dec
sub
test
add
in
xor
es
or
sbb
dec
add
jle
lock
pusha
cmps
adc
cmps
pop
push
xor
inc
call
test
lods
fstp
push
out
mov
loopne
inc
cs
int3
inc
or
pop
cmp
in
cs
or
loope
or
not
int3
cdq
sub
sub
mov
das
pusha
repnz
push
sbb
popf
int
dec
xchg
lock
push
fstp
fldz
fbld
cwde
hlt
fadd
pop
add
and
clc
push
call
call
inc
mov
pop
ins
into
add
aaa
imul
data16
jnp
jmp
xchg
adc
and
push
add
hlt
or
sub
pop
stc
sbb
push
inc
nop
add
fnstsw
lea
hlt
or
dec
adc
jl
mov
jl
mov
shl
outs
add
cmc
or
cmp
pop
sete
and
push
and
aas
mov
in
add
hlt
mov
xor
pop
push
and
mov
pop
aam
mov
mov
inc
and
cmp
cmp
and
pop
adc
sbb
or
mov
ror
add
add
or
push
xor
in
ss
adc
push
or
mov
mov
fst
mov
(bad)
ficom
mov
cmp
invd
adc
add
sub
mov
cmp
adc
dec
inc
mov
push
adc
mov
xor
adc
into
push
jle
dec
jg
rcl
(bad)
adc
or
mov
ret
cwde
push
cwde
mov
dec
cmp
cmp
sub
scas
push
adc
add
pushf
inc
inc
and
loope
or
dec
mov
push
or
mov
add
mov
push
xor
adc
outs
cdq
(bad)
stos
mov
or
repnz
sub
ja
xor
loop
mov
lock
cmp
shl
dec
add
mov
int
out
jae
cmp
imul
dec
dec
mov
sar
and
ins
popf
push
ret
mov
pop
dec
lock
aam
xchg
jne
aaa
mov
fsubr
hlt
in
add
jge
push
add
mov
jne
jae
push
aaa
mov
scas
push
add
pop
and
adc
(bad)
cmp
sbb
adc
rcr
or
add
or
mov
mov
jl
sbb
addr16
jp
icebp
mov
cmp
push
sbb
sbb
pop
mov
xchg
cmp
fs
cmp
imul
add
clc
jne
cli
push
mov
xor
add
mov
loope
shl
pop
pop
push
xor
rol
xor
cmp
mov
and
pop
sub
in
cmp
and
mov
xchg
pusha
or
lods
xor
mov
int
inc
xchg
(bad)
sub
ret
adc
push
lahf
jle
and
aas
and
push
mov
jmp
cmp
fdivr
ins
push
test
ins
xor
pop
cmp
mov
pop
call
dec
mov
dec
fimul
dec
inc
in
or
rcl
adc
stos
sub
mov
cld
ins
jl
call
adc
loope
xor
mov
popa
fisub
mov
or
inc
mov
dec
call
data16
mov
inc
xchg
mov
or
add
and
add
adc
dec
jo
pop
inc
call
or
ffree
inc
daa
jmp
push
fnstcw
push
fistp
adc
sub
adc
mov
sar
mov
or
adc
push
cmp
loopne
mov
inc
inc
dec
loopne
pushf
dec
pop
dec
leave
sbb
adc
mov
(bad)
in
jnp
mov
jno
inc
add
ret
and
sub
xchg
jbe
dec
pop
xchg
jae
push
cmp
mov
xchg
fs
pushf
adc
inc
(bad)
hlt
sub
mov
ret
cwde
idiv
(bad)
(bad)
in
scas
cmp
shl
mov
jmp
adc
fbstp
loopne
cmp
jno
not
xor
dec
pop
or
mov
inc
jmp
int
or
call
jle
mov
ss
add
sub
jmp
shl
xchg
mov
or
out
je
out
sub
sbb
ret
add
or
cmp
sub
(bad)
sbb
test
mov
mov
pusha
shr
call
mov
cwde
lods
test
popf
inc
or
push
sub
int3
pusha
push
push
sbb
div
arpl
cmp
mov
adc
inc
and
pop
mov
dec
cli
sahf
mov
xchg
jmp
ins
aaa
or
lock
xor
cli
cmp
push
jl
mov
xchg
inc
sahf
scas
push
aaa
inc
sbb
fwait
or
les
jno
jge
(bad)
enter
mov
movs
fisubr
enter
movs
push
cmp
cmovg
pop
inc
cmp
lods
icebp
push
pushf
aad
xlat
push
retf
push
test
loope
lods
mov
cs
js
sti
loope
xor
movs
or
push
fisttp
jge
neg
rcr
pop
lock
push
imul
cmp
mov
inc
mov
lods
jle
jae
dec
or
add
shl
or
or
add
pushf
ja
mov
inc
(bad)
sahf
xor
int3
ror
jne
inc
jmp
inc
push
int
or
out
sub
aad
in
aas
pushf
inc
fucomi
(bad)
cmp
cmp
jle
(bad)
test
add
push
hlt
xchg
(bad)
jns
fwait
cmp
pusha
jb
jbe
cmp
add
add
push
hlt
jno
icebp
enter
pop
fstp
mov
sub
sar
inc
pop
sahf
div
jmp
adc
adc
test
mov
or
in
mov
inc
mov
mov
push
dec
adc
retf
ins
mov
fisub
fild
inc
mov
cmp
push
lea
push
(bad)
enter
ret
scas
bnd
or
mov
jmp
or
pushf
clc
aaa
add
lea
jmp
jo
mov
aas
sub
iret
mov
inc
and
call
mov
retf
(bad)
xlat
add
test
adc
sahf
es
sub
enter
sub
mov
inc
dec
xor
mov
push
mov
adc
adc
rol
call
sbb
pop
cmp
stos
sbb
cmp
repz
mov
fisubr
xlat
push
stos
mov
add
mov
setl
push
add
mov
push
add
add
xchg
shr
sub
sub
sub
std
lahf
call
lea
sub
mov
mov
imul
cmp
pop
mov
xchg
add
or
jb
push
cmp
cmp
imul
pushf
in
or
sti
add
out
push
add
out
std
sahf
jle
pusha
idiv
add
add
sar
xchg
mov
add
fs
add
lea
push
imul
sub
add
sar
sti
mov
pop
rcr
pop
dec
or
xor
icebp
cmps
lea
sub
mov
or
cmp
fidivr
dec
and
aam
adc
add
add
ja
cmp
pop
mov
and
cdq
cmp
cwde
mov
and
cmps
enter
mov
sbb
ins
ret
dec
js
push
pusha
add
push
addr16
or
mov
jl
mov
dec
pusha
jae
mov
das
ret
int
in
mov
int3
sti
aaa
(bad)
mov
jecxz
add
inc
sbb
sbb
push
bound
push
inc
add
sbb
add
dec
in
dec
push
inc
or
adc
or
sub
adc
or
push
sub
or
fdivr
adc
xor
mov
push
int3
fidivr
pop
sub
cs
xor
adc
adc
sub
or
xor
and
push
push
pop
add
into
push
dec
adc
les
adc
mov
loopne
rcr
xchg
rcr
sti
ins
or
add
icebp
cmp
imul
outs
cwde
loopne
je
cmp
sbb
push
out
jmp
sahf
pop
dec
dec
cs
dec
sar
add
sub
fdiv
addr16
xchg
adc
mov
leave
push
nop
xor
or
repz
adc
sbb
imul
jno
iret
sbb
sbb
adc
cmp
push
aaa
push
lds
sub
mov
pusha
and
and
call
call
xor
shr
call
pop
xor
repz
aas
adc
inc
ds
or
jne
cmps
aas
fcomip
mov
fsub
je
push
lods
sub
add
push
push
push
call
pusha
sub
js
xor
xchg
add
and
pushf
cmp
dec
cmps
dec
(bad)
or
test
idiv
pop
test
(bad)
neg
call
ds
fcomip
movs
(bad)
push
in
mov
jo
inc
xor
adc
push
pop
aas
jnp
xchg
test
int3
mov
pop
mov
outs
xchg
pop
pusha
test
out
jmp
lahf
and
test
dec
std
and
or
fs
add
ins
pusha
test
(bad)
xor
mov
sbb
sub
arpl
mov
or
sub
xchg
pushf
jl
ficomp
(bad)
xchg
cld
adc
movs
jbe
and
sub
or
add
icebp
mov
pusha
mov
pop
or
sbb
outs
mov
jae
xor
adc
xor
pop
jmp
adc
ja
dec
mov
push
fs
outs
push
mov
mov
call
lock
mov
push
add
dec
loopne
mov
add
add
cmp
mov
mov
and
pop
jg
je
test
loop
std
scas
call
inc
mov
add
add
icebp
inc
inc
mov
xchg
mov
sbb
(bad)
and
mov
jmp
jmp
lea
sub
xchg
inc
dec
or
dec
call
or
(bad)
push
daa
jp
(bad)
jg
cwde
lods
(bad)
add
neg
cmp
add
cwde
sar
sbb
retf
pop
mov
cli
jo
add
add
das
adc
lea
mov
cmp
adc
div
pusha
scas
fnstsw
cmp
jg
mov
aas
add
push
or
mov
cmp
adc
or
fadd
or
jl
in
adc
cmps
fild
jnp
push
push
retf
push
rcl
cmp
jl
ret
adc
add
jecxz
mov
adc
cmps
scas
inc
cmp
sbb
cmps
mov
retf
inc
push
fld
sar
inc
xchg
adc
cdq
int3
pop
mul
mov
test
or
in
sbb
mov
sbb
cmp
mul
fiadd
xor
jbe
push
dec
dec
or
mov
push
pusha
mov
sub
mov
test
jmp
dec
inc
icebp
dec
in
lods
aaa
add
pop
sub
mov
clc
cmps
mov
in
adc
xor
loop
inc
jmp
cmp
sti
movd
xor
or
mov
cmp
xor
jg
mov
jmp
pop
jg
mov
xchg
pop
sbb
mov
add
inc
sub
add
pop
and
inc
mov
vunpcklps
or
inc
and
sub
outs
(bad)
in
cld
mov
inc
hlt
aaa
push
fstp
or
mov
adc
mov
call
push
adc
daa
sbb
and
mov
aaa
or
pop
mov
add
cli
inc
inc
xor
and
mov
mov
fnsave
dec
cmp
push
(bad)
in
jne
mov
mov
or
sub
and
pop
adc
sub
adc
stos
cmp
cli
retf
mov
lea
rol
dec
lock
sub
pop
loope
test
mov
push
aam
loopne
fdivr
lea
dec
mov
lods
ret
xchg
add
or
add
inc
inc
std
rol
jae
and
inc
adc
mov
jb
cmp
mov
xchg
pop
mov
adc
xchg
inc
and
xchg
pop
ss
add
pop
retf
adc
and
pop
or
xor
sbb
dec
inc
add
pusha
xchg
adc
sbb
lea
or
inc
push
aam
xchg
jns
and
or
mov
push
sbb
shr
mov
jge
neg
xor
movs
jmp
inc
or
or
xor
es
mov
stos
cmps
rcr
add
inc
mov
jo
push
popa
loop
mov
add
retf
push
inc
lods
jmp
into
mov
jl
and
adc
lahf
cld
icebp
mov
add
jo
inc
(bad)
cmp
test
and
cmps
cmp
rol
cmp
mov
dec
and
push
pop
dec
add
push
xchg
jb
sbb
lea
(bad)
shr
aas
loope
xor
xchg
dec
mov
popa
das
fimul
lds
sbb
sbb
inc
jmp
or
jnp
sahf
test
mov
mov
or
test
mul
imul
adc
jo
add
mov
fisttp
test
mov
cmp
lds
mov
scas
retf
mov
test
je
cmp
fmul
mov
(bad)
push
xor
(bad)
or
or
data16
cs
or
(bad)
jl
ret
je
mov
je
outs
imul
test
jl
js
mov
xchg
add
mov
cmp
cmp
jnp
scas
mov
mov
movlps
cmp
out
jmp
sar
sub
lock
cmp
xchg
pushf
push
push
adc
daa
out
clc
push
or
jecxz
inc
adc
push
cld
mov
cmp
mov
jmp
mov
aaa
dec
add
jmp
dec
dec
cmp
stc
add
inc
add
pop
(bad)
movzx
movs
fimul
add
jg
cmp
les
dec
dec
cmp
sbb
lock
pop
ret
call
adc
mov
loopne
js
int3
cmp
cmp
push
or
mov
inc
inc
inc
jl
nop
jle
and
imul
or
lods
cmp
retf
nop
das
loop
mov
sahf
or
cdq
push
das
and
lea
sbb
sbb
xor
je
sbb
push
and
or
gs
(bad)
mov
mov
adc
xor
push
repnz
jle
or
popa
stos
push
cmp
popa
shl
mov
dec
sbb
dec
add
outs
mov
sbb
sar
jbe
mov
cmp
cs
lock
and
jge
sub
xchg
scas
lock
loopne
xchg
adc
loopne
push
and
fwait
les
inc
pop
aaa
out
xchg
mov
out
dec
hlt
xor
xor
cmp
adc
outs
(bad)
(bad)
jg
push
push
xor
dec
imul
push
dec
adc
imul
dec
dec
xor
sar
js
bound
push
push
inc
dec
dec
pop
push
cmp
inc
shl
nop
enter
gs
popa
je
jbe
jns
sub
(bad)
(bad)
outs
jae
sub
popa
jns
dec
jp
jne
push
xor
xor
mov
popa
jbe
sub
inc
ins
inc
dec
sbb
addr16
std
outs
fldcw
adc
mov
outs
outs
cwde
adc
push
rcl
outs
imul
add
mov
push
xor
cmp
jl
xchg
add
aaa
aaa
xor
movs
inc
add
xor
cmp
xor
cmp
mul
bound
and
rcl
sti
mov
arpl
inc
mov
imul
popa
jo
xchg
jmp
jbe
das
push
outs
outs
das
addr16
fs
popa
ins
imul
and
push
aas
rol
scas
arpl
jo
dec
outs
rol
fdiv
outs
ja
clc
dec
sbb
lahf
jae
outs
fs
mov
js
arpl
gs
je
pop
lods
pusha
rcl
dec
ins
push
sbb
mov
add
add
bound
arpl
dec
cld
mul
pop
add
rcl
xor
push
mov
add
mov
add
push
mov
ficomp
mov
adc
pop
pop
add
adc
jo
jmp
jmp
pop
mov
add
cmp
push
push
xor
xor
das
stc
push
inc
sub
(bad)
push
cmp
rol
pop
movs
sbb
les
jg
shl
jnp
mov
pushf
(bad)
in
or
mov
sbb
daa
sub
sbb
movs
jnp
ror
and
cvttps2pi
shl
les
cmp
dec
retf
add
nop
std
ja
pop
inc
dec
fs
je
jo
inc
pop
push
inc
push
ss
sbb
jae
test
pusha
sbb
or
pop
inc
imul
push
and
outs
and
mov
jle
dec
pop
dec
cmp
imul
dec
inc
retf
sub
inc
inc
and
cmp
adc
shr
push
inc
jle
inc
dec
xor
in
arpl
inc
pop
inc
ret
pusha
inc
or
(bad)
sbb
sub
pop
mov
inc
or
retf
loopne
div
and
or
xchg
mov
or
cdq
sub
or
jb
mov
movs
inc
add
jmp
mov
cmp
push
mov
inc
sahf
mov
stos
cmp
ret
mov
pop
ins
jne
mov
pop
push
add
dec
sbb
add
sbb
ss
dec
and
or
add
push
ins
data16
add
push
popa
fmulp
movs
sbb
add
push
add
mov
sbb
push
stos
and
jge
add
push
adc
aam
jmp
adc
das
dec
(bad)
pop
ror
das
rcl
or
outs
jns
push
shl
lds
jne
rcr
jb
cdq
cwde
add
push
ret
pop
push
mov
imul
shl
push
jbe
in
push
push
and
pop
inc
gs
add
retf
xlat
and
xlat
fnstenv
push
outs
push
fisttp
ret
inc
push
push
or
xchg
pop
into
adc
add
sbb
inc
dec
popa
jns
xchg
add
mov
xor
sbb
inc
or
rcl
imul
push
jne
add
add
test
push
gs
jmp
addps
mov
popa
jle
add
dec
es
clc
mov
clc
pop
sbb
jnp
mov
test
jns
and
jae
add
inc
adc
ja
lahf
nop
loop
fild
jg
mov
imul
inc
sbb
add
or
add
push
or
mov
int
mov
outs
ins
inc
dec
xor
push
rol
call
lock
pop
inc
xor
jae
jo
mov
pop
inc
add
add
add
inc
aas
ss
cmp
cmp
inc
jo
or
pusha
add
fiadd
dec
push
add
loopne
add
sub
inc
pop
jl
xlat
add
sbb
pop
sbb
pop
dec
lods
and
pop
or
pop
jae
jo
cmp
popa
call
pop
rcr
push
inc
push
and
ror
push
mov
bswap
xor
or
adc
leave
mov
xlat
mov
pop
pop
mov
fsub
sar
xor
rcr
or
adc
pop
ret
bound
repnz
pop
sub
shr
add
xchg
or
mov
clc
sbb
xor
xor
bound
xor
sbb
jp
mov
add
imul
push
mov
das
ret
push
or
les
adc
cdq
call
inc
vmmcall
mov
aas
add
pushf
push
push
jle
adc
dec
loope
je
push
or
push
add
jae
cmp
outs
cmp
add
cmp
aaa
fstp
add
bound
jns
pop
push
mov
scas
(bad)
cmp
ins
out
jbe
mov
xchg
inc
pushw
mov
push
sbb
lock
inc
sbb
add
cwde
xchg
adc
in
fbld
adc
inc
or
cmps
adc
jl
lds
pop
xchg
xchg
or
sbb
ss
popf
xlat
xchg
mov
mov
inc
aad
xchg
pop
loope
mov
pushf
call
in
out
sbb
inc
shl
pop
pop
xor
and
sbb
adc
cmps
adc
adc
cmp
pop
or
mov
jmp
shr
adc
mov
daa
adc
adc
loopne
add
push
call
jnp
dec
cmps
jg
test
inc
jmp
mov
push
aaa
into
mov
mov
xchg
add
mov
in
scas
test
cmp
inc
xchg
push
and
nop
jns
out
int3
ret
and
cmp
sbb
jmp
push
add
mov
push
pop
iret
add
out
or
out
es
adc
and
push
add
(bad)
sbb
jo
add
dec
jle
inc
push
lea
push
xor
inc
mov
adc
mov
in
not
push
clc
adc
fadd
cs
cmp
in
outs
cwde
pop
add
test
jmp
or
xor
scas
neg
std
dec
jne
push
jmp
add
inc
or
adc
jl
inc
loopne
cdq
loopne
in
add
xor
mov
or
jle
pusha
inc
ins
dec
add
add
jae
call
call
mov
lock
xor
shl
hlt
cmp
fsub
(bad)
enter
cmps
jge
ror
push
xchg
sub
pop
xor
leave
test
push
fdivr
xchg
int
sar
pusha
inc
mov
mov
prefetcht0
push
ror
dec
mov
mov
push
vmovshdup
pop
dec
mov
pop
sub
or
push
push
mov
cmp
das
aaa
cmp
call
add
add
jge
aas
sbb
cmc
dec
movs
and
daa
adc
std
je
fild
popa
add
data16
outs
add
maskmovq
and
idiv
es
pop
push
mov
sbb
pop
xor
jne
cmp
jg
fs
inc
xor
mov
cmp
pop
mov
mov
daa
or
mov
mov
and
clc
inc
lds
and
push
mov
push
mov
loop
dec
mov
shl
pop
sbb
mov
xor
mov
mov
pusha
mov
xchg
sub
(bad)
push
mov
test
xor
in
dec
mov
push
lock
imul
adc
call
ss
cmp
add
enter
push
xor
mov
cmp
cmp
push
dec
pop
add
imul
jl
pop
pop
fwait
je
enter
movs
test
data16
jg
inc
pop
mov
les
jle
pop
sbb
call
jg
fld
sar
jo
mov
sub
repnz
mov
mov
mov
xor
pop
jle
movs
mov
inc
sahf
pop
mov
test
ins
push
imul
aam
enter
cwde
pushfw
jg
xchg
scas
and
push
jae
add
adc
nop
jg
and
jle
(bad)
scas
cdq
int3
or
mov
out
xchg
jl
test
mov
retf
clc
push
ja
div
lea
rol
fistp
into
ss
les
push
pop
xor
std
scas
jmp
jb
inc
jae
xlat
ss
add
and
push
xchg
retfw
dec
jbe
push
mov
aaa
ret
xchg
mov
ret
dec
(bad)
fimul
ror
jg
outs
jl
inc
add
jb
add
or
push
cs
xor
add
push
add
repnz
stos
adc
daa
dec
gs
push
jbe
lea
mov
ret
call
dec
mov
cmp
jne
sub
jmp
pop
push
sub
jo
ja
mov
push
jl
cli
loopne
stos
pop
mov
(bad)
data16
add
push
je
jmp
jo
cmp
push
jmp
and
push
cmp
or
mov
pop
js
mov
enter
call
mov
inc
or
or
popa
gs
xor
jmp
cmp
das
adc
jne
mov
out
add
pop
adc
push
clc
sbb
dec
jmp
popf
pop
push
pop
in
pop
add
inc
inc
imul
outs
add
or
add
jl
outs
xor
jl
add
lea
xor
ins
sbb
dec
mov
inc
xchg
and
out
cmp
add
or
enter
call
enter
and
mov
icebp
and
(bad)
sbb
sbb
pop
adc
shl
test
push
adc
popf
enter
fs
mov
jbe
cdq
xchg
in
push
and
pop
call
call
cmp
imul
out
jmp
push
fmul
and
cdq
or
adc
jecxz
test
cmp
jp
mov
lds
mov
xchg
push
dec
jb
dec
adc
and
or
test
jle
add
adc
test
pop
jbe
icebp
or
cmp
jbe
cmp
or
mov
mov
jbe
adc
neg
data16
fldenv
pop
hlt
mov
add
push
adc
pop
dec
push
and
aas
adc
push
cs
(bad)
mov
mov
ror
jp
sub
lahf
int3
dec
push
in
sbb
adc
mov
adc
jle
pusha
inc
sub
mov
shr
push
clc
mov
in
lds
outs
dec
icebp
loopne
iret
add
dec
fsub
mov
push
sbb
add
sbb
push
mul
adc
pop
pop
sub
fcomp
dec
jmp
jl
jge
out
add
push
je
push
mov
(bad)
xchg
clc
int3
test
loop
cwde
xchg
aam
adc
sbb
aam
lea
arpl
jo
out
pop
xor
movs
push
rcr
add
sub
sub
cmp
sbb
outs
inc
loop
inc
mov
add
jle
bound
cmp
or
mov
and
mov
push
scas
or
mov
sar
xor
jbe
xor
or
sub
mov
loope
sti
push
jmp
pusha
cld
pusha
das
fdivr
inc
add
clc
ins
nop
sbb
mov
xor
push
or
cmp
xchg
add
dec
jbe
loop
mov
push
cwde
mov
jl
enter
aam
pop
repz
ss
inc
mov
shr
js
mov
jae
and
cmp
inc
mov
add
mov
mov
js
inc
add
adc
clc
pushf
or
sahf
fidivr
mov
inc
neg
nop
jg
sub
(bad)
aam
sbb
jl
or
inc
inc
lods
outs
in
cs
in
xor
outs
pusha
arpl
daa
xor
scas
lds
xchg
mov
mov
retf
jne
out
int3
hlt
in
rcr
aaa
dec
dec
sbb
(bad)
inc
push
sub
mov
mov
fldenv
rcl
or
mov
adc
cmp
fcom
out
stos
push
push
mov
dec
ja
or
sub
cwde
xor
les
mov
jmp
mov
imul
xor
sub
outs
loopne
fld
mov
add
cmp
dec
cs
inc
cli
xchg
adc
xor
loopne
push
push
push
mov
scas
adc
mov
mov
add
call
mov
mov
push
out
out
push
out
and
out
sbb
fdiv
pop
shl
or
or
scas
cmp
aam
and
pop
inc
xor
shl
stos
pop
dec
inc
push
or
add
push
mov
add
push
fsub
push
es
adc
out
int3
in
push
sub
out
out
js
fisubr
push
add
pusha
mov
xchg
mov
add
mov
nop
inc
pusha
ret
push
push
icebp
sar
ss
test
push
push
mov
mov
cdq
arpl
pop
dec
nop
pop
(bad)
cmp
sti
cwde
movs
pop
pop
mov
or
sar
or
adc
out
lods
(bad)
or
push
sub
hlt
inc
and
push
push
mov
lea
xchg
dec
cmp
push
inc
cmp
loope
cmp
js
mov
daa
add
or
in
push
push
call
mov
call
or
(bad)
push
push
adc
sbb
push
sub
lahf
jle
push
aas
lods
(bad)
pusha
aas
mov
imul
test
adc
pop
ss
xor
add
lahf
jle
movs
sub
ss
lahf
icebp
mov
cmp
adc
(bad)
add
int3
pop
scas
jl
sbb
add
or
xor
sub
rol
add
jae
sbb
pop
pop
sbb
scas
or
dec
int
or
dec
adc
push
push
pop
bound
imul
or
pop
(bad)
fistp
sbb
push
mov
and
aaa
and
mov
loopne
push
lods
rcl
jb
sbb
in
dec
ret
sub
sbb
jmp
enter
mov
and
pop
cli
js
pop
mov
retf
mov
loopne
add
inc
and
fisttp
aaa
stos
push
push
(bad)
ror
jmp
out
adc
xchg
les
mov
add
js
mov
sbb
adc
fdiv
ds
js
mov
(bad)
jle
daa
aam
xor
add
call
or
inc
add
daa
mov
push
pop
stos
sub
cdq
rcr
and
adc
ja
fiadd
pop
pop
sbb
mov
push
sub
aam
sbb
inc
int3
sbb
mov
inc
inc
mov
ins
xor
int3
fld
aaa
sub
and
ss
cmps
lock
aas
mov
mov
push
addr16
xchg
dec
(bad)
test
cmps
push
scas
push
call
mov
add
out
push
jb
add
jns
push
mov
dec
mov
cmp
data16
push
jmp
mov
(bad)
loopne
in
cmp
pop
dec
dec
in
mov
icebp
mov
pusha
add
mov
xor
inc
xor
xor
bswap
dec
push
add
or
sub
dec
dec
dec
sub
mov
loop
xor
mov
icebp
mov
adc
sbb
mov
mov
fsub
add
int3
and
aaa
xchg
jle
cmps
sub
dec
in
and
mov
rcr
test
push
lahf
push
out
mov
or
jmp
call
xor
push
jo
(bad)
test
sub
je
or
cmp
jg
mov
mov
call
jmp
jns
out
(bad)
nop
dec
(bad)
enter
cmp
into
push
gs
dec
dec
push
pop
sub
xchg
fstp
ficomp
mov
mov
jbe
push
loopne
push
hlt
push
les
ss
jmp
add
cmp
xor
adc
xor
jno
sti
or
cmp
fldenv
mov
gs
sbb
pop
movs
pop
push
cld
cmp
imul
push
bound
cwde
xor
loopne
sub
out
mov
mov
xchg
fadd
in
push
or
mov
lock
dec
shr
loopne
mov
mov
adc
dec
mov
imul
jmp
popf
into
sbb
pushf
(bad)
push
cmp
arpl
fld
or
and
pop
data16
jmp
retf
outs
das
xchg
sub
lock
data16
adc
mov
es
push
and
cs
movs
fiadd
dec
mov
push
xor
push
push
sub
cmp
or
jle
add
ss
cmp
ds
push
push
mov
cdq
xor
inc
das
ret
out
es
bound
dec
jp
lahf
pop
aaa
(bad)
stos
cs
mov
dec
add
test
loopne
addr16
push
ficomp
adc
inc
sub
sbb
inc
push
push
sahf
adc
push
push
push
push
(bad)
sbb
dec
int3
xchg
fcmovne
fs
or
(bad)
add
and
fsubr
cmp
or
into
dec
sbb
pop
das
mov
xor
jae
push
push
jbe
adc
ja
arpl
add
gs
mov
es
fs
mov
mov
test
add
push
movs
or
fs
sar
push
int3
les
mov
ins
mov
(bad)
es
push
in
or
outs
fist
push
push
test
push
jno
dec
pusha
push
fidivr
out
pop
add
xor
xor
sub
cmp
int
jmp
ins
push
cld
pop
xchg
outs
hlt
jo
add
ds
xor
addr16
add
dec
fs
push
push
push
and
je
and
and
add
in
ins
push
adc
popa
dec
jmp
jne
gs
jb
push
gs
stos
data16
push
outs
fs
gs
(bad)
outs
add
pop
inc
inc
push
sbb
sub
inc
outs
ja
ins
outs
popa
fs
imul
xchg
push
and
push
imul
je
outs
outs
aaa
inc
js
outs
jae
cs
lock
imul
aam
adc
inc
lods
jb
jns
mov
push
mov
or
andnps
clc
mov
jge
popa
imul
xor
in
jle
add
or
add
pushf
ins
callw
shr
or
mov
fst
and
fstp
push
fcom
movs
jl
jbe
jge
push
fcomp
fsub
sbb
fwait
ss
xor
inc
push
jo
add
jle
cdq
pop
mov
out
add
add
or
imul
mov
ret
cmp
shl
sub
fisubr
dec
cmp
ret
mov
mov
dec
fwait
sbb
outs
in
loopne
adc
sub
addr16
sbb
dec
pop
jbe
inc
pop
or
add
push
std
add
ret
movs
sbb
lods
mov
js
call
mov
xrelease
repz
adc
pop
inc
loope
jmp
jo
rcl
mov
add
mov
out
fs
sub
jbe
adc
das
mov
adc
add
repz
imul
push
jmp
out
test
ret
add
mov
fild
add
imul
add
xchg
out
push
push
mov
mov
scas
jl
mov
sub
adc
mov
push
and
mov
push
sbb
mov
pusha
add
jo
fisub
jo
push
xchg
clc
outs
mov
push
mov
hlt
mov
inc
mov
sub
pushf
in
mov
sbb
push
clc
mov
sub
xor
out
popf
sbb
xchg
in
sub
adc
out
in
push
or
push
jne
and
sar
stos
push
cwde
mov
cld
push
jmp
rcr
xor
sbb
push
sub
mov
loope
sbb
outs
cmp
push
xchg
dec
adc
lock
cwde
push
jb
xor
cmp
test
jge
sbb
mov
jecxz
inc
mov
out
not
mov
and
ror
pop
or
and
xor
cdq
daa
push
jmp
dec
call
mov
jecxz
fdiv
test
adc
push
push
test
cdq
push
xor
adc
mov
mov
outs
lock
dec
mov
jnp
cwde
push
mov
jmp
cmp
dec
loope
push
mov
test
jle
mov
sub
mov
push
clc
into
sub
lea
pop
test
aad
xchg
xchg
cmp
je
mov
sub
jg
fdiv
(bad)
jmp
adc
in
adc
clc
adc
cmp
pop
dec
xchg
jns
mov
lods
(bad)
mov
jmp
cmp
out
add
push
mov
dec
(bad)
or
fisub
jne
pop
xchg
addr16
call
fs
mov
adc
pop
pop
cmp
aad
mov
sbb
test
mov
shr
push
or
jno
sub
cmps
(bad)
std
cmp
jne
pop
cmpps
push
fild
inc
mov
mov
clc
popf
push
push
add
inc
add
or
ror
fidiv
pop
fwait
mov
push
mov
mov
mov
std
jge
mov
adc
add
dec
jne
adc
sbb
lock
outs
ret
add
jo
inc
adc
jge
(bad)
sub
xor
je
shl
push
in
dec
mov
cmp
shl
jo
jmp
sub
pop
data16
pop
xor
fs
stos
sub
imul
cdq
int
sbb
dec
inc
call
bound
lea
fmul
sbb
adc
cli
inc
fs
(bad)
sub
enter
add
sub
popa
push
imul
cmp
out
in
mov
inc
sar
and
inc
loope
fs
retf
sbb
movzx
pop
add
(bad)
jo
fmulp
int
inc
movs
clc
jne
mov
adc
pop
xor
adc
imul
cwde
ficomp
mov
push
mov
test
jge
pop
retf
jno
add
movs
mov
sub
cwde
mov
pushf
cs
sub
push
shl
in
xor
push
cs
or
cmp
sbb
je
inc
sub
dec
xchg
push
add
shl
mov
inc
inc
dec
and
jb
retf
or
pusha
adc
ins
inc
push
sbb
or
fs
and
je
cmp
dec
ret
mov
push
push
fcmove
aad
data16
or
xchg
add
add
nop
mov
push
es
adc
xor
push
push
adc
jae
mov
add
aas
add
cmp
cmps
cs
push
add
add
scas
aas
dec
es
mov
pop
xor
adc
push
push
mov
or
adc
ins
sahf
add
ins
push
add
aas
fwait
xchg
pop
pop
jmp
ja
aas
sbb
addr16
inc
repz
mov
and
xlat
sub
into
outs
aaa
rcl
and
outs
pop
aas
pop
and
repnz
xchg
(bad)
inc
pop
pop
aam
shl
call
mov
ret
or
or
and
jae
in
cmp
or
xor
je
in
jbe
outs
rcr
jl
mov
mov
fsubr
cmp
shr
xlat
pop
loopne
add
mov
(bad)
call
xchg
add
gs
inc
jb
outs
jb
add
xchg
fisubr
xor
and
rol
jmp
dec
jae
push
xor
xor
cmp
push
push
and
gs
das
loopne
jae
imul
out
neg
cs
ins
jbe
or
das
cmc
push
pusha
popf
mov
(bad)
sub
(bad)
aaa
cmp
jbe
mov
push
retf
jo
punpckhbw
dec
add
xor
je
loopne
into
popa
add
inc
xor
add
mov
(bad)
lods
mov
xchg
and
mov
pop
inc
inc
xor
inc
outs
ins
ins
rol
test
inc
xchg
inc
mov
push
mov
lock
push
adc
jp
sbb
push
lock
mov
add
out
add
lea
add
jne
pop
mov
adc
add
ret
pop
pop
out
shr
fnstcw
pusha
ret
fisttp
(bad)
sbb
xor
jo
ins
lods
and
add
bound
cmp
movs
cmp
pop
lahf
jnp
cmp
mov
sub
and
sub
and
cwde
inc
fmul
push
not
daa
icebp
das
inc
js
jmp
inc
pusha
jle
in
adc
ja
xchg
add
or
push
and
add
lahf
repnz
jecxz
xor
pmaxsw
xor
imul
pop
mov
es
(bad)
jne
lods
pop
xlat
jno
and
jle
inc
ja
sub
dec
and
inc
sub
lods
push
adc
xchg
(bad)
push
inc
ins
push
jb
aas
data16
fcomp
dec
xchg
fs
inc
mov
repnz
fwait
lods
fscale
mov
fcompp
dec
add
jg
mov
mov
add
ins
jle
jg
fld
lea
sbb
pop
cwde
pop
adc
xchg
inc
add
xchg
stc
mov
inc
pop
add
or
mov
mov
add
add
(bad)
inc
gs
adc
call
push
inc
mov
sti
jo
stos
pop
outs
xchg
es
cmp
cmp
jp
test
ror
call
dec
(bad)
(bad)
push
push
test
je
add
jne
mov
mov
and
add
mov
lea
mov
dec
std
mov
or
(bad)
jbe
fs
es
add
pop
ds
(bad)
or
scas
push
sub
dec
cmp
test
dec
mov
call
cld
mov
add
adc
xor
outs
test
fwait
je
je
add
aam
and
lahf
mov
into
add
mov
mov
add
adc
dec
arpl
retf
nop
or
outs
sbb
jl
test
inc
out
push
sub
push
cmc
test
jne
ins
sbb
and
popa
xchg
jge
test
ror
mov
fistp
cdq
les
test
sub
sub
adc
popa
xor
adc
in
jb
or
push
adc
inc
add
inc
arpl
sub
xchg
dec
cmps
push
pop
call
push
push
(bad)
and
out
xchg
fild
add
pop
push
dec
mov
add
in
dec
(bad)
mov
rol
cmp
dec
mov
add
jnp
call
ret
sbb
adc
jg
add
into
xor
jnp
jmp
xchg
jno
and
and
xchg
sbb
fadd
leave
adc
jne
jo
sub
sub
jno
mov
add
or
cld
call
sub
js
ins
sbb
push
mov
ficomp
fisttp
(bad)
sub
sar
mov
sbb
xstore-rng
cmps
(bad)
iret
dec
push
inc
add
jmp
dec
test
jl
inc
xor
and
pop
sbb
pop
outs
mov
jne
dec
sub
cmp
jno
outs
fwait
adc
popa
add
add
mov
(bad)
fwait
(bad)
xchg
push
aaa
jo
inc
das
mov
mov
fbstp
adc
jl
add
jbe
xchg
mov
adc
movs
int
into
push
and
push
(bad)
(bad)
xor
push
or
js
xor
push
xor
push
cmp
test
push
push
mov
or
sbb
out
push
in
sbb
inc
add
xchg
out
ss
outs
adc
xchg
mov
inc
push
retf
dec
and
mov
mov
jg
loop
xor
jb
lock
test
jl
inc
xor
call
fisub
and
ror
sete
push
adc
jp
jmp
inc
dec
jne
ret
pop
pop
pop
adc
or
out
(bad)
out
xchg
ficom
mov
add
inc
adc
and
push
sbb
xor
add
push
dec
pop
scas
ror
pusha
jmp
shr
pop
pushf
lods
sbb
loope
(bad)
xor
push
dec
in
xchg
ror
in
inc
fsub
cvtps2pd
nop
out
neg
mov
inc
out
stos
daa
cld
inc
rol
cmp
je
js
adc
or
(bad)
xor
inc
bound
in
leave
mov
pop
ss
xadd
clc
fnstsw
enter
in
jmp
(bad)
sbb
cmp
adc
movs
adc
das
addr16
add
mov
push
aaa
je
inc
mov
mov
dec
mov
add
push
sub
xor
dec
lock
mov
cld
jmp
inc
mov
lea
lea
adc
data16
outs
fmul
mov
mov
mov
inc
mov
(bad)
test
nop
mov
push
pop
pop
xlat
sub
sub
add
fdiv
retf
lea
ret
addr16
add
push
push
xchg
je
xor
hlt
pop
inc
mov
int3
inc
inc
push
in
(bad)
adc
gs
enter
add
push
and
pop
cmp
xor
jge
xchg
or
and
sub
fdivr
sbb
xchg
fidivr
popa
sbb
cmp
fistp
inc
xchg
and
xor
mov
mov
jbe
call
and
xor
(bad)
ss
adc
mov
add
add
sbb
lock
xor
jbe
out
out
iret
es
mov
push
push
sub
jmp
mov
enter
sbb
lock
cld
(bad)
rol
cmp
push
cmp
or
xor
pop
mov
shl
pop
bound
push
add
and
cmp
mov
sbb
sub
add
int
out
cmp
sbb
jnp
cmps
(bad)
sbb
mov
shl
inc
rcl
sar
loope
add
adc
adc
(bad)
pop
rcr
mov
sbb
dec
test
jb
inc
xor
pushf
inc
aad
sar
dec
int
adc
int3
jge
dec
jne
out
push
xchg
cli
jbe
jnp
dec
scas
sbb
adc
or
add
rol
js
push
rdmsr
out
or
jg
xchg
or
addr16
lock
cs
in
dec
mov
add
sbb
push
push
addr16
mov
cmp
jne
cs
pusha
ja
les
sub
aas
sub
push
mov
mov
xor
pop
ds
add
jae
and
push
xchg
int
das
lea
add
xchg
out
adc
call
push
daa
adc
sbb
add
cmp
aas
loope
shl
ins
aaa
inc
and
xchg
push
enter
push
pop
mov
lea
lods
inc
jne
push
sub
add
rcr
loopne
call
sub
and
fs
icebp
call
jo
xchg
push
andps
inc
push
gs
imul
jae
js
dec
out
add
lds
aaa
xchg
pop
(bad)
xchg
retf
cmovbe
inc
or
sqrtps
and
dec
jbe
cvttps2pi
add
inc
outs
ins
jo
outs
jns
out
fadd
cmovbe
sbb
arpl
jo
inc
xor
pushf
bound
or
outs
je
or
outs
sub
ins
xchg
dec
cs
dec
gs
ins
fwait
sub
jo
xchg
addr16
aas
xor
xor
fs
popa
jb
mov
mov
add
dec
pop
imul
dec
fs
pusha
xor
into
sub
xor
add
les
ret
es
pop
pop
pop
imul
inc
jne
fs
aaa
outs
test
mov
arpl
das
xor
or
popa
add
add
push
outs
dec
jnp
xor
inc
push
aas
cs
jb
loopne
and
call
dec
ja
outs
pop
dec
or
into
aas
push
push
xor
push
dec
ds
and
(bad)
jnp
aaa
inc
pop
jbe
mov
push
aas
sbb
pusha
lods
jbe
xor
push
dec
push
xchg
pop
or
jae
out
(bad)
pop
pop
dec
adc
dec
jecxz
pusha
add
not
lods
and
mov
jae
pop
inc
jo
lods
idiv
dec
xchg
bound
pop
and
aam
retf
mov
pcmpeqb
mov
or
daa
xchg
je
push
push
mov
sub
loopne
adc
outs
or
sbb
push
push
xchg
or
and
cmp
sub
arpl
test
clc
pop
mov
fdivr
and
cmp
push
je
data16
mov
test
sub
lods
push
jo
(bad)
outs
mov
clc
adc
fdivp
dec
mov
and
movzx
cmp
ja
dec
jns
and
in
clc
push
inc
mov
cmp
or
das
fucomp
jmp
mov
scas
jmp
xor
test
jne
jns
ins
aad
add
xor
adc
add
dec
aaa
les
sbb
or
pcmpgtb
sbb
repz
sbb
push
xchg
jl
pop
cli
les
xor
pop
les
sar
test
outs
xlat
hlt
push
ss
add
rol
mov
out
daa
adc
add
mov
sub
sbb
push
mov
add
out
push
movs
lds
je
or
jge
add
rol
sbb
dec
add
or
popf
xchg
les
or
adc
jbe
adc
pop
call
call
pop
shl
cmp
xchg
shr
dec
pop
aas
xchg
push
pop
mov
imul
dec
mov
push
sbb
mov
cdq
or
xchg
out
sub
add
xchg
sub
xor
push
xor
fadd
shl
ret
or
pop
mov
arpl
fmul
dec
xor
retf
fild
inc
pop
rol
sub
lods
fdiv
test
fimul
call
and
mov
sbb
pop
out
add
mov
mov
push
ds
sub
sbb
imul
mov
mov
push
ins
movs
outs
and
cmp
int
mov
pop
call
and
jo
or
ds
sbb
popf
lods
pop
lods
xchg
jg
sub
xor
(bad)
dec
dec
add
data16
popa
add
xchg
push
adc
fs
add
jne
xchg
dec
mov
aas
js
jo
retf
(bad)
push
mov
neg
jne
push
xchg
fcom
or
fsubr
mov
(bad)
ret
or
shr
rcr
je
push
mov
push
push
lea
in
cmp
inc
out
mov
scas
call
fldpi
add
loopne
adc
dec
mov
mov
test
jle
ja
inc
or
inc
xchg
fnstenv
das
test
and
jne
jbe
fmul
adc
inc
enter
arpl
lock
and
(bad)
call
add
inc
mov
sar
sub
jmp
inc
xchg
inc
dec
jne
jo
mov
jp
jmp
mov
mov
rcr
nop
test
ficomp
retf
pop
mov
fst
xchg
sub
js
pop
adc
cs
cmp
mov
enter
add
cmp
dec
mov
mov
and
mov
xchg
xchg
push
pop
cmp
lods
sbb
into
jbe
sbb
or
loopne
or
add
test
mov
cmp
add
fwait
or
adc
or
imul
jnp
into
es
and
mov
push
adc
or
push
jns
pop
xor
pusha
sub
sbb
sub
xor
pushf
es
adc
dec
pop
aas
into
pop
ror
xor
or
cs
sbb
pushf
or
bound
ja
xor
cmps
inc
mov
jb
inc
cmp
jecxz
pusha
out
test
ror
(bad)
(bad)
push
mov
xchg
inc
dec
scas
sub
ja
daa
mov
mov
mov
jecxz
add
push
push
or
mov
adc
mov
xor
add
xor
xor
cmp
add
sbb
mov
retf
lahf
fimul
cmp
jbe
aas
inc
push
add
and
xor
inc
dec
bound
(bad)
push
inc
arpl
or
push
nop
inc
jle
pop
invd
xchg
daa
adc
sbb
cdq
inc
(bad)
mov
xor
out
push
fstp
sbb
xchg
pop
test
or
int3
loopne
iret
jbe
xchg
or
add
ret
ret
jecxz
xchg
add
ret
rol
(bad)
or
add
out
cs
cli
sub
push
imul
in
hlt
aad
lock
js
add
in
pop
hlt
cli
lock
shr
add
loopne
js
lea
and
outs
test
(bad)
push
hlt
push
sub
shl
jne
or
adc
inc
adc
fs
loopne
pop
cmp
sub
xchg
or
add
add
icebp
cwde
mov
push
mov
mov
push
inc
mov
test
in
cwde
imul
jns
test
int3
mov
jnp
scas
loopne
jge
repnz
jmp
inc
mov
(bad)
out
test
mov
xchg
fstp
fistp
outs
jns
test
dec
mov
fild
(bad)
call
repz
ds
push
adc
repnz
mov
push
xadd
lods
lods
push
mov
dec
mov
or
iret
sub
gs
scas
fsub
lock
adc
test
pop
dec
jle
dec
shl
sub
enter
sbb
(bad)
sar
jmp
jae
fimul
into
ins
popa
cmp
fiadd
cmp
outs
inc
lods
jmp
mov
inc
jmp
aaa
or
dec
bound
adc
xchg
dec
stos
sbb
cdq
xchg
jmp
ret
cmp
fild
ja
inc
iret
pop
scas
push
pusha
fwait
inc
push
pop
mov
adc
xchg
and
sub
aas
leave
cdq
fnstenv
cs
clc
and
cmp
dec
frstor
sbb
bound
inc
cmps
stc
cmps
aaa
add
inc
xor
inc
sbb
mov
imul
cmps
les
inc
jb
ret
inc
shl
dec
dec
ja
sub
nop
jb
rcr
or
mov
inc
cmp
es
pop
inc
inc
xchg
test
adc
jo
loope
mov
cmp
ret
jnp
les
mov
ss
add
inc
mov
lock
mov
fild
push
jbe
adc
das
jmp
mov
xor
xor
pop
jae
xchg
jmp
add
add
adc
or
or
ss
jle
push
jmp
or
xor
cmp
fwait
js
mov
ds
mov
inc
scas
(bad)
stos
jo
adc
fs
cs
jbe
das
inc
clc
jbe
add
jmp
add
xchg
add
push
and
sbb
daa
pop
push
inc
sbb
cdq
push
nop
scas
cmp
cmps
std
sbb
jecxz
test
or
xor
push
and
add
adc
imul
sbb
add
inc
sbb
imul
xor
add
add
ds
retf
(bad)
jae
inc
mov
jge
popf
imul
sahf
inc
or
jle
das
ins
sub
mov
aam
sub
inc
dec
iret
jmp
sub
sub
xor
add
(bad)
sbb
pop
inc
inc
inc
call
push
push
inc
sbb
xchg
mov
sub
add
inc
mov
xchg
sbb
js
push
push
aaa
rol
loope
pop
les
mov
jge
cmps
pop
push
add
push
rcr
pop
or
mov
daa
dec
mov
test
xchg
sub
mov
adc
mov
call
ror
pop
aaa
mov
pop
sbb
pushf
xchg
xchg
sub
in
or
ret
adc
mov
jg
inc
mov
xchg
mov
sbb
xor
in
shr
jae
hlt
stc
cmc
inc
or
js
push
mov
fcom
add
es
push
and
add
sbb
cmp
add
inc
dec
xchg
js
xor
loopne
push
or
mov
add
mov
sbb
fidivr
mov
add
lahf
pop
popw
lea
inc
pop
ror
sbb
sub
div
(bad)
xorps
ds
xchg
or
mov
sahf
and
xchg
push
jnp
xchg
push
pop
adc
outs
enter
test
inc
arpl
and
outs
mov
outs
(bad)
in
adc
rep
call
rcr
sub
mov
dec
enter
call
xchg
mov
pop
jne
mov
enter
lock
fcom
inc
mov
pusha
jo
add
popf
and
imul
inc
pusha
add
mov
test
push
sbb
gs
lock
clc
xchg
loopne
push
mov
lea
les
sub
out
xor
xchg
mov
jmp
and
sbb
or
aam
test
and
sbb
or
mov
sbb
fsub
cwde
or
add
rcl
sbb
mov
mov
and
test
or
dec
sbb
sub
rcl
xor
mov
or
add
sbb
les
loopne
adc
mov
sar
sub
retf
scas
hlt
mul
and
ret
and
sbb
retf
test
clc
add
xor
sbb
lods
fild
add
xor
xchg
sub
dec
icebp
jmp
mov
pop
add
iret
lea
lods
out
pop
jmp
sbb
rol
mov
ret
call
data16
cs
sub
cmp
pop
ins
dec
add
xchg
push
fcomi
mov
push
cwde
and
pop
mov
out
punpcklbw
inc
sbb
xchg
and
add
xor
dec
cli
daa
dec
out
sbb
inc
div
mov
aaa
sbb
rcl
mov
inc
mov
adc
inc
lock
jne
aas
adc
jne
test
adc
call
jge
ds
call
bound
sbb
or
adc
clc
mov
push
popf
mov
xchg
aam
lods
mov
sub
leave
movs
js
pop
call
in
dec
sub
push
dec
cmp
into
rol
xor
sbb
sbb
jne
or
sub
jo
or
inc
mov
imul
out
mov
adc
sbb
out
push
addr16
cmc
aad
ja
sahf
ss
mov
stos
adc
(bad)
push
sbb
stos
nop
xchg
jle
fldcw
hlt
mov
pop
shr
xchg
add
dec
ss
jne
pop
cmp
xchg
(bad)
jb
mov
out
push
sbb
push
push
jmp
dec
movs
cmp
mov
fcomi
cmps
ja
adc
call
add
cmp
(bad)
fild
cmp
inc
pop
add
ss
mov
call
add
outs
xor
cmp
pusha
retf
pop
add
push
push
lods
int3
stc
rcl
cmovb
and
ins
push
loope
cld
clc
mov
push
cmp
outs
adc
dec
aaa
xchg
neg
sub
or
ins
add
jbe
je
pop
dec
les
les
das
fnstenv
jo
cmp
idiv
inc
aaa
jmp
mov
stos
inc
jbe
loope
fistp
cmp
sub
sub
or
mov
mov
(bad)
mov
or
das
test
pop
jle
or
xor
jb
sub
imul
mov
adc
xchg
into
add
push
mov
cmp
add
into
outs
sub
mov
(bad)
rol
pop
mov
mov
rol
add
push
jbe
push
jo
je
gs
in
push
sar
mov
push
sbb
in
jge
add
sahf
hlt
add
fisub
in
xchg
mov
imul
inc
outs
dec
out
sbb
daa
sub
mov
clc
daa
das
fld
add
adc
jno
mov
mov
sbb
daa
sbb
adc
jbe
and
popa
shl
out
xchg
test
mov
call
push
outs
mov
loop
in
add
add
pushf
(bad)
jmp
pusha
(bad)
imul
push
mov
and
mov
and
jge
mov
inc
ja
int3
jae
int3
sbb
addr16
xor
or
mov
bsf
or
les
xchg
jl
sub
mov
lods
dec
or
mov
mov
dec
mov
mov
dec
popa
leave
ret
adc
dec
mov
xlat
fisubr
sub
xor
pop
xor
pop
lods
(bad)
in
clc
mov
call
ins
mov
sub
jmp
xlat
inc
sahf
out
add
jno
rcr
test
outs
fdiv
fisttp
mov
je
lea
addr16
idiv
fistp
test
sbb
and
ret
inc
(bad)
outs
and
jne
test
inc
xchg
mov
jmp
loope
cmp
jne
in
push
(bad)
mov
sub
mov
and
and
(bad)
pushf
sbb
and
xchg
push
pop
loop
aaa
jge
addr16
loop
and
push
aaa
jmp
sbb
or
aam
and
xchg
xchg
nop
fstp
in
jmp
fsub
mov
adc
je
jmp
dec
cmps
cmp
mov
mov
sbb
sbb
cmp
test
xchg
jl
xor
test
cmp
jg
out
xchg
push
sbb
mov
je
jle
mov
dec
and
lea
xlat
loope
or
push
xchg
ss
sbb
or
xor
xchg
(bad)
mov
sbb
push
test
mov
and
bound
mov
rcr
dec
add
push
adc
cmp
inc
jae
mov
push
mov
ror
das
loope
or
aaa
(bad)
push
push
pop
mov
or
test
mov
xlat
and
in
pop
lods
jnp
int3
push
test
cmp
pop
inc
test
test
adc
in
ja
add
cwde
pop
dec
or
inc
ret
push
or
and
or
(bad)
xor
test
jb
push
mov
test
adc
mov
mov
push
mov
rcr
je
push
sub
pusha
ins
mov
jge
jl
adc
outs
popf
cmp
mov
and
push
xchg
adc
adc
ins
rol
fild
cmp
loopne
push
or
adc
cwde
repnz
jnp
jp
outs
jg
mov
les
enter
pop
lock
or
jl
mov
inc
arpl
add
cdq
push
push
mov
mov
neg
clc
fstp
fwait
sub
pop
add
add
inc
cmp
rcl
das
cmp
mov
inc
push
push
xchg
jmp
inc
or
or
ret
int3
dec
push
shl
sbb
xchg
xchg
int
push
mov
jne
inc
adc
fadd
mov
dec
fsub
sbb
dec
scas
loope
stos
pop
pop
push
and
sub
(bad)
(bad)
or
data16
pop
cmc
add
adc
pop
cmp
dec
in
ins
sub
push
xchg
fcomp
js
mov
mov
outs
rcl
add
int
and
les
push
add
outs
imul
cmp
aas
mov
test
dec
shl
sub
daa
test
add
in
sub
jo
pop
loope
dec
test
fucom
sub
dec
sbb
mov
enter
push
pop
cmp
add
nop
in
int
jl
cmps
dec
xchg
jo
xor
sbb
fdivr
mov
ret
inc
rcl
jmp
adc
cmp
inc
add
jbe
pop
das
fisttp
or
dec
enter
add
lods
adc
mov
sbb
outs
and
mov
inc
inc
jge
sti
cmp
mov
jle
shr
das
iret
add
push
nop
(bad)
iret
push
inc
xor
jnp
rol
pushf
fsubr
add
cmp
cmps
sub
push
jle
(bad)
and
lock
(bad)
hlt
fxch
xor
je
fcom
ins
push
add
mov
pop
mov
je
mov
(bad)
xor
pop
outs
xor
sbb
push
out
cmp
jmp
bound
xchg
push
fisub
rcl
mov
das
cmp
cmps
pop
push
sbb
fcmovu
scas
or
loopne
pop
or
sar
fadd
or
push
cli
push
push
mov
jo
mov
push
add
sar
add
add
jbe
ins
lds
or
(bad)
mov
sub
stc
sbb
sbb
mov
cmps
cdq
mov
add
mov
pop
cmp
fadd
and
(bad)
loopne
dec
ins
lea
mov
(bad)
mov
out
sbb
and
xor
xchg
movzx
test
or
and
loopne
add
xchg
pushf
inc
inc
adc
jl
test
frstor
shl
mov
out
or
aam
inc
mov
ss
das
mov
std
call
(bad)
mov
movs
into
jb
pushf
mov
lahf
sub
jnp
add
stos
jo
push
jo
sar
rol
pop
mov
adc
mov
mov
stos
pop
push
push
movs
push
fadd
loopne
push
add
ds
sbb
sbb
pushf
mov
push
pop
ret
sub
movs
mov
cli
mov
or
push
mov
(bad)
in
mov
jne
push
push
movs
std
or
and
sahf
je
lea
adc
outs
test
cmp
jge
dec
adc
mov
repnz
aam
xchg
sbb
mov
add
sub
pusha
add
into
sbb
sub
mov
or
adc
or
sub
and
fmul
push
jmp
xor
dec
in
add
ss
mov
mov
mov
cmp
enter
xor
scas
add
es
adc
add
jns
add
(bad)
dec
push
ffree
or
sub
push
dec
add
outs
outs
arpl
jb
add
jbe
push
or
add
daa
fst
inc
es
or
fdivr
bound
inc
jp
xadd
in
repnz
xor
ins
sbb
shr
in
scas
call
add
loopne
or
outs
mov
fidivr
pop
dec
gs
outs
jne
add
pushf
mov
or
ins
retf
popa
sbb
stos
mov
mov
and
add
sbb
cli
push
fs
stc
mov
jg
fadd
pushf
pop
push
sub
push
xor
cmp
cs
and
dec
mov
xchg
push
leave
jae
mov
scas
xor
int
mov
repnz
test
jecxz
xlat
jmp
(bad)
cld
sub
adc
mov
cs
out
pop
push
pop
loopne
mov
jo
pop
jecxz
pop
loope
popa
inc
jmp
xor
pushf
add
and
pop
mov
outs
or
call
push
fsub
sub
(bad)
retf
mov
pop
jmp
add
sar
nop
mov
lods
push
loopne
sub
nop
out
adc
add
lock
aas
loop
outs
stos
(bad)
aas
lea
mov
das
or
movs
jo
push
mov
mov
or
sub
cmp
fs
add
inc
sbb
mov
dec
push
sbb
jne
cmps
retf
cmps
dec
push
add
or
call
sub
mov
cmps
adc
mov
jmp
push
mov
sbb
jne
imul
imul
sbb
leave
xor
aad
out
jl
xchg
jo
not
je
fs
mov
call
sub
(bad)
fstp
xor
mov
bound
in
xor
fdivr
push
shr
and
cmp
add
jmp
es
fiadd
adc
ins
adc
daa
in
call
call
lods
shl
mov
jbe
das
out
and
aaa
movs
lods
loop
jnp
add
add
mov
inc
loopne
mov
in
push
pop
inc
inc
push
jle
cs
xor
add
sbb
ds
sti
add
add
addr16
pop
xchg
sbb
in
pop
jb
push
sbb
or
sbb
jmp
dec
inc
inc
inc
fs
jae
js
add
das
lods
pushf
fadd
mov
(bad)
push
mov
jp
pushf
sbb
fild
lds
mov
xchg
movs
ficomp
test
sbb
pop
cmp
retf
and
mov
into
mov
bound
adc
mov
test
jl
inc
xor
lea
popa
mov
call
cmc
dec
xor
cmp
dec
jne
add
sub
imul
inc
or
mov
sub
xor
fdivr
dec
loopne
lock
push
out
int
popf
arpl
inc
pop
repnz
cmp
lock
push
pop
test
cmp
pop
ins
push
add
mov
test
and
sub
mov
mov
cmp
jge
xor
sar
sti
or
dec
iret
imul
(bad)
sbb
or
add
popa
mov
add
inc
sbb
pusha
mov
pop
xor
push
nop
xchg
daa
ret
fnstcw
dec
or
or
pusha
and
in
xchg
mov
or
push
cmp
and
sbb
sbb
popa
ror
sbb
repnz
sbb
push
pop
adc
jb
xor
fisttp
xchg
out
push
inc
in
lods
lock
sahf
fisttp
lahf
pop
push
and
in
mov
inc
je
pushf
nop
das
(bad)
cmp
or
cmp
shr
nop
or
sub
push
mov
jmp
sbb
in
inc
mov
jae
test
scas
fs
push
push
and
xor
cmps
nop
out
push
push
inc
call
mov
sbb
rcr
adc
mov
test
loop
add
int3
pusha
cmp
and
call
jmp
push
pop
enter
xchg
push
and
sbb
and
sub
sbb
adc
retf
adc
pop
(bad)
(bad)
inc
mov
pop
or
cdq
adc
push
push
pop
dec
mov
and
popf
mov
aas
mov
sub
loop
das
mov
inc
mov
mov
add
add
fwait
in
push
dec
scas
call
mov
repnz
sbb
out
xor
fadd
je
push
mov
sub
adc
(bad)
jo
push
rcr
jbe
ins
xor
ret
or
jo
sub
(bad)
xor
push
fdiv
sub
push
xchg
pop
dec
ins
sub
hlt
test
jo
adc
fdiv
outs
sub
out
pop
jns
hlt
or
sub
aaa
xchg
scas
leave
jne
pop
lahf
inc
xchg
dec
jno
fnstenv
adc
xor
add
mov
lock
add
inc
hlt
test
call
cmp
push
loope
sbb
xchg
enter
fiadd
sub
hlt
mov
cmp
lods
sbb
adc
sbb
es
inc
or
xor
stos
movs
dec
out
pop
fist
call
(bad)
jbe
mov
ret
sbb
sbb
sti
loopne
adc
xor
sbb
mov
rcr
dec
in
inc
or
add
mov
adc
cmp
rcl
fmul
xor
mov
aas
adc
int3
pusha
mov
clc
rcr
inc
outs
jg
lods
daa
popa
adc
cmp
adc
adc
(bad)
jl
mov
push
lods
adc
test
sahf
(bad)
ja
xchg
int
sets
cmp
pop
pop
in
mov
xchg
xchg
pop
xchg
sub
cmp
lahf
scas
ret
fst
clc
fmul
lock
mov
add
adc
add
jle
fdivr
mov
xor
sbb
or
aad
pop
clc
ret
mov
(bad)
sub
test
aas
in
and
pop
push
xchg
fdiv
adc
add
bound
test
mov
mov
enter
loopne
loope
mov
pop
sbb
pushf
lods
xchg
in
sub
push
adc
mov
jo
mov
mov
mov
sbb
xchg
jp
popf
ret
mov
mov
imul
outs
ror
dec
jg
ret
push
push
mov
loope
and
push
loopne
mov
push
mov
push
mov
mov
pop
in
movs
cmp
pop
adc
lds
mov
test
jg
sub
push
jp
fadd
mov
and
push
jbe
imul
xor
adc
jg
cs
cmp
mov
mov
bound
aad
mov
mov
adc
mov
inc
loope
mov
ret
mov
out
mov
adc
mov
sub
xchg
das
ret
repz
inc
push
adc
jg
push
cmp
sbb
and
cmps
bound
jl
mov
sub
aad
push
(bad)
xchg
js
ja
loope
mov
ret
mov
mov
jp
dec
mov
repnz
cs
mov
or
mov
(bad)
jg
push
sbb
outs
adc
push
push
loope
bound
aad
mov
adc
push
mov
or
sbb
loope
mov
mov
mov
sub
mov
aas
mov
in
adc
adc
push
inc
mov
mov
or
jns
or
sub
ins
xor
sub
push
jnp
inc
cmp
push
pushf
sahf
or
add
jg
sub
push
dec
les
adc
nop
lods
gs
inc
jbe
(bad)
arpl
jo
xchg
push
ins
jo
cmp
pop
or
mov
cmp
(bad)
lahf
sub
das
mov
mov
xor
pop
ret
sbb
imul
pop
pop
xchg
and
ja
mov
pop
xor
ficom
push
fs
movs
inc
adc
sbb
icebp
xor
iret
shr
sbb
pusha
add
ins
or
jecxz
das
ja
sub
stos
xor
push
test
sub
push
mov
and
mov
fs
or
or
cmp
inc
lods
jge
aad
adc
sub
test
sahf
sbb
push
scas
fwait
push
mov
dec
rcr
or
lea
popf
cmp
loope
nop
mov
mov
mov
stos
push
in
xor
out
and
mov
rol
hlt
into
xchg
call
outs
mov
inc
xor
xchg
jae
add
inc
push
stc
mov
or
mov
mov
fwait
and
cmp
inc
mov
jbe
push
mov
fiadd
mov
js
inc
cmp
jne
mov
clc
aas
adc
or
scas
mov
idiv
ret
shr
mov
add
cs
rol
jae
pop
fdiv
in
bound
imul
sub
das
aaa
pop
jo
or
or
and
ds
je
jns
daa
mov
fisubr
sbb
into
(bad)
cmps
xlat
add
pop
arpl
pop
push
ret
xchg
push
pop
sbb
inc
outs
ins
dec
fcom
mov
adc
sbb
add
add
adc
out
fsub
push
imul
bound
sub
or
inc
pop
push
dec
pop
dec
int3
int3
(bad)
dec
inc
push
or
dec
and
push
cmp
push
push
sub
inc
pusha
push
adc
add
shl
out
push
fild
ss
cmps
or
and
imul
outs
loope
data16
pop
packuswb
adc
mov
cwde
ror
adc
into
cmps
loop
cdq
jmp
es
push
mov
mov
pop
sub
pop
(bad)
mov
mov
and
retf
pop
and
push
jmp
mov
loopne
jg
push
test
dec
pop
fiadd
push
(bad)
pop
push
and
add
fist
hlt
or
in
or
push
sub
ror
cs
xchg
pop
ja
out
add
jo
adc
cmp
and
cmp
daa
sub
out
dec
jnp
daa
adc
dec
sahf
inc
loopne
xor
retf
add
or
mov
es
add
adc
adc
cmps
les
mov
xchg
inc
or
and
sbb
cdq
jle
repnz
jae
ins
out
xor
push
sub
retf
jp
pusha
mov
es
adc
rcl
scas
rol
add
ds
pop
loopne
and
or
nop
or
outs
out
cmp
adc
adc
lods
ret
iret
xchg
sti
inc
fild
and
push
into
add
mov
pop
or
sub
dec
sub
inc
or
dec
lock
jge
add
(bad)
in
mov
shl
lea
add
shl
fs
cmp
data16
dec
mov
push
loope
pop
in
sub
mov
sub
movs
cmp
fadd
cwde
push
hlt
sahf
mov
hlt
mov
push
sbb
int3
add
out
mov
adc
or
mov
stos
jno
(bad)
sub
call
add
jne
sub
mov
nop
inc
addr16
or
mov
int3
mov
aas
lea
push
mov
mov
cs
or
adc
push
iret
sub
fmul
inc
mov
xor
mov
out
and
jbe
es
pop
or
daa
les
mov
dec
jne
cmp
jbe
pop
and
inc
shrd
and
icebp
xlat
push
ins
(bad)
xchg
ficom
stos
(bad)
mov
or
sti
pop
push
dec
mov
cmp
jne
push
adc
fbstp
adc
ret
or
lods
std
je
sub
mov
or
(bad)
push
sbb
jns
out
ss
dec
ins
push
popa
pop
iret
add
nop
(bad)
int3
test
and
mov
mov
mov
jmp
add
mov
add
adc
sbb
adc
mov
or
sbb
iret
repz
cmp
mov
or
sub
in
sub
xor
cmp
cmp
or
iret
repz
dec
dec
movmskps
loope
(bad)
push
add
jecxz
xchg
in
dec
loop
inc
xor
mov
pop
and
cmp
add
les
dec
sub
and
jg
mov
xor
mov
xor
fdiv
test
jne
or
ja
ja
and
outs
dec
mov
adc
mov
cmp
mov
xor
rol
pop
shl
mov
adc
scas
xchg
rcl
push
sub
test
fcom
icebp
mov
mov
(bad)
jmp
mov
dec
mov
lock
push
jbe
pushaw
pop
inc
dec
js
nop
cmp
lea
pop
push
fdiv
mov
jmp
lea
shr
and
mov
dec
and
in
push
push
add
xor
and
adc
ret
jge
cmp
inc
add
sbb
mov
xchg
jnp
call
push
outs
push
pusha
add
xlat
or
mov
pop
pushf
lock
adc
ins
push
cmp
xlat
(bad)
shr
push
mov
xchg
cld
pop
mov
cmps
cmps
cmp
or
sbb
mov
add
mov
cmp
add
push
lds
pop
xchg
push
or
dec
scas
out
or
iret
out
pop
jbe
ins
jl
out
scas
cdq
dec
popa
sbb
push
outs
mov
mov
sub
adc
jns
repz
sub
leave
jecxz
mov
cs
aaa
xchg
xchg
lock
dec
and
mov
cld
inc
clc
cmp
rol
xchg
mov
je
mov
dec
call
popa
popa
daa
dec
(bad)
popa
out
cmps
ret
inc
and
mov
pop
ror
dec
inc
mov
sbb
cmp
fst
cmp
les
jmp
mov
aaa
icebp
adc
mov
out
dec
jne
enter
(bad)
lea
push
or
std
pop
mov
add
test
cmp
outs
shr
add
push
imul
inc
adc
push
hlt
xchg
popf
and
pop
vpaddsw
xor
cmp
adc
mov
(bad)
es
cld
jmp
push
mov
(bad)
jae
loopne
jmp
and
add
mov
dec
push
xor
pop
shl
mov
inc
add
fdiv
cli
push
sar
pop
fistp
out
mov
push
fwait
jp
or
pop
je
or
lods
sti
(bad)
pop
sub
lahf
xchg
add
inc
add
jb
push
cmp
lock
add
ror
xor
and
inc
adc
or
mov
retf
inc
mov
sbb
mov
push
inc
cs
lods
adc
mov
or
adc
test
nop
retf
inc
jb
xor
sub
xor
xchg
pop
mov
enter
inc
cmp
pop
fadd
jmp
add
sub
or
adc
aad
sbb
and
mov
pop
push
dec
inc
inc
add
and
dec
adc
push
push
push
or
ss
int3
int3
cmp
inc
adc
pop
inc
enter
xor
xchg
sbb
ja
push
push
push
add
(bad)
mov
ins
push
push
xor
pop
xor
dec
data16
cs
sub
push
or
(bad)
inc
inc
pop
xchg
pop
idiv
ret
mov
test
test
cmp
push
sub
push
adc
cvtps2pi
cmp
dec
sahf
inc
xchg
scas
xchg
inc
and
not
push
mov
push
pusha
push
pop
push
pop
inc
cmp
jp
aaa
push
bound
ja
daa
cmovg
es
pusha
push
dec
mov
test
retf
xchg
push
movs
push
cmp
adc
push
imul
sbb
test
imul
pop
or
pop
dec
mov
addr16
and
dec
adc
mov
(bad)
pop
bound
jo
dec
dec
xchg
aam
push
xlat
jb
(bad)
pop
inc
cmps
inc
sub
(bad)
sbb
dec
xchg
dec
outs
pushf
test
dec
mov
push
outs
push
lods
test
inc
jge
add
xlat
rcr
push
leave
sbb
std
and
adc
faddp
(bad)
add
xchg
sbb
or
mov
jle
shr
adc
push
clc
sahf
push
jl
dec
cmp
inc
inc
std
mov
inc
inc
inc
fst
push
add
inc
arpl
lock
jnp
mov
in
add
or
arpl
imul
cmp
add
push
imul
ins
push
ins
popa
arpl
jae
xor
or
and
mov
or
or
outs
jo
dec
ins
jo
imul
call
pushf
add
jb
or
std
mov
mov
call
push
sti
sbb
xor
mov
in
ret
add
push
add
into
dec
mov
mov
outs
ss
inc
fs
cmps
jecxz
dec
xchg
out
fld
inc
inc
adc
cld
rcpps
pop
push
shl
pop
pop
add
int3
and
outs
mov
or
pop
jbe
and
inc
imul
sub
jns
gs
neg
pop
lds
adc
xor
sub
inc
jno
xchg
ret
es
inc
fs
inc
pop
push
pop
into
push
mov
pop
sbb
sbb
(bad)
gs
push
mov
cmp
pushf
jae
pop
das
test
mov
in
sbb
movs
adc
addr16
add
pop
add
mov
xor
inc
scas
or
ds
repz
les
imul
loopne
add
add
or
jo
and
and
jbe
mov
popa
cs
ins
je
jns
sbb
test
pusha
or
dec
pop
nop
dec
mov
sub
out
ins
outs
ja
sar
sub
shr
dec
lds
mov
add
xchg
je
test
pop
ret
push
clc
mov
adc
add
sbb
push
pop
pop
sbb
add
xchg
(bad)
(bad)
dec
mov
shr
dec
test
jl
inc
lea
cmp
je
xor
ret
inc
dec
jne
xor
neg
push
ret
adc
rol
jmp
mov
pop
pop
mov
(bad)
cmp
push
mov
std
rep
pop
movs
push
or
and
or
mov
or
(bad)
(bad)
sbb
out
dec
test
jl
inc
lea
ins
jg
(bad)
cmp
jne
sub
jmp
mul
adc
or
jae
mov
lods
mov
dec
jne
cmp
jle
cdq
(bad)
out
push
clc
enter
cmps
sub
test
jne
sar
jns
adc
pop
in
jg
inc
add
and
jmp
pop
je
or
mov
dec
and
dec
push
push
std
mov
and
cli
push
mov
push
xor
push
out
mov
mov
mov
lds
dec
jmp
mov
sar
scas
rcl
aas
push
push
add
add
jg
sub
sbb
jne
inc
cmp
cmp
jl
add
mov
or
dec
cmp
jge
mov
imul
ins
adc
jge
and
add
push
add
sbb
jp
sub
sub
and
mov
outs
shl
add
pop
mov
adc
(bad)
sub
lods
dec
add
out
mov
push
sub
xchg
repz
mov
push
int
or
push
mov
sbb
mov
mov
pop
or
dec
cmps
mov
fstp
and
push
cmp
jne
or
add
jo
outs
inc
cmp
xchg
dec
hlt
lea
dec
nop
sbb
jecxz
sub
test
inc
lock
push
jmp
jle
dec
push
inc
movs
add
hlt
cmp
in
or
in
xor
xor
mov
sti
fist
jle
mov
and
inc
jge
cmp
jge
test
mov
sub
push
mov
(bad)
mov
rcr
xchg
sbb
rcl
add
sbb
add
xor
mov
xor
not
and
jp
jmp
call
cld
jb
sbb
bound
adc
adc
aam
cmp
std
ret
sti
sti
iret
cld
xchg
sar
aaa
or
fs
inc
sar
retf
push
loopne
add
push
dec
inc
push
(bad)
push
sbb
adc
jmp
cmp
jnp
loop
cs
adc
add
dec
push
xchg
fisttp
adc
fs
outs
pop
sti
inc
add
adc
fadd
loop
ss
ins
arpl
inc
rcl
sbb
dec
or
nop
ror
jmp
sbb
jl
sbb
mov
and
mov
shl
push
sub
mov
xchg
sub
inc
ss
add
and
xor
mov
inc
inc
push
mov
fwait
push
add
(bad)
out
pusha
xor
jge
mov
addr16
call
inc
jne
div
aas
jbe
push
stos
push
loop
cmp
sbb
sbb
dec
loope
adc
push
fld
out
ret
and
or
mov
mov
cmc
mov
sub
cmp
out
xor
adc
add
xchg
adc
std
ret
jmp
pop
xor
iret
xor
xchg
mov
mov
out
mov
sar
(bad)
jmp
mov
sub
ret
div
add
jmp
mov
loope
mov
sub
mov
outs
into
mov
retf
hlt
pop
inc
jmp
jecxz
mov
mov
dec
mov
shl
cmp
and
mov
adc
fldcw
imul
(bad)
and
sub
pop
add
and
sub
shr
cmps
add
add
fld
sub
fld
mov
fstp
fwait
imul
xor
pop
pushf
clc
mov
and
loopne
in
add
push
adc
cld
adc
in
out
out
mov
leave
add
inc
int
ins
mov
inc
inc
pop
daa
xchg
xchg
outs
cmc
push
out
dec
js
and
shl
fistp
cmc
fadd
mov
(bad)
nop
sub
add
xor
retf
add
pop
xchg
das
cs
or
popf
fwait
xor
mov
mov
dec
and
push
or
call
(bad)
or
and
ret
jl
xor
js
ret
loope
fistp
add
cmp
and
jmp
mov
push
sbb
xchg
in
or
pop
mov
adc
out
cmp
jmp
add
jae
scas
pop
fldenv
push
xor
push
xor
pop
mov
push
repnz
int3
or
test
das
push
mov
push
int
add
lods
jo
jmp
adc
push
mov
loop
cmp
or
cmp
jmp
add
push
or
ret
icebp
mov
cld
push
xchg
inc
test
clc
sbb
fidiv
shr
mov
clc
(bad)
fwait
lock
mov
inc
aad
inc
mov
das
push
lea
mov
and
pop
jnp
mov
pop
and
ds
cmp
jl
sub
mov
jb
lods
xchg
and
popa
outs
jmp
adc
lea
add
mul
cli
pop
xchg
loopne
jbe
xchg
push
(bad)
xchg
aad
in
lock
xor
push
inc
mov
fimul
je
sahf
loopne
fdivr
sub
xor
mov
loopne
retf
cld
add
mov
adc
push
jbe
(bad)
adc
sub
fnsave
and
jge
loope
sub
add
add
rcr
fisub
jge
sub
and
neg
add
pop
dec
mov
stos
cmp
dec
add
xchg
add
xor
pusha
sar
mov
fsubr
rol
add
inc
call
sbb
sbb
mov
pop
popa
or
mov
int3
fs
loope
dec
scas
sbb
(bad)
clc
and
or
ret
lods
ret
ret
add
ds
pop
adc
stos
lea
add
push
cmovs
pusha
clc
shl
or
movs
scas
lea
stc
es
mov
cwde
fadd
test
jle
test
(bad)
fistp
sti
push
shr
mov
shl
mov
jmp
push
dec
push
test
and
inc
sahf
lods
cmp
add
cli
nop
je
and
push
fcos
sub
cmp
jae
and
and
test
lock
cmp
fs
xchg
mov
test
loop
or
jb
sbb
mov
fimul
or
aad
lods
iret
jle
icebp
(bad)
mov
jg
cmp
jle
pop
xor
xchg
scas
pop
cs
dec
inc
clc
aaa
xor
adc
adc
or
pop
or
mov
mov
sar
sbb
add
call
adc
test
jmp
and
jmp
shl
push
inc
dec
jne
movs
mov
fcomp
pop
fnstsw
mov
cmp
dec
xor
icebp
rol
ss
jo
shr
and
inc
adc
mov
and
sar
je
inc
jnp
xlat
jl
lods
dec
cmp
mov
pop
mov
retf
dec
cmp
(bad)
stc
inc
rcl
loop
repnz
jmp
mov
ret
in
mov
xor
dec
and
add
push
mov
outs
mov
out
cmp
jle
sbb
ds
mov
mov
jmp
nop
repnz
shl
push
or
and
mul
cld
sub
mov
out
push
lea
xor
xor
cli
mov
mov
pusha
pop
mov
or
add
or
cmp
fwait
daa
mov
pop
adc
xor
jns
jp
fwait
rcl
sbb
ror
xor
jnp
pop
mov
in
enter
jmp
inc
pop
mov
mov
add
dec
add
mov
mov
ror
adc
push
pop
mov
je
sub
inc
add
mov
mov
add
test
pushf
sub
jmp
mov
push
cmp
push
jo
add
xchg
rol
test
inc
out
je
pop
pop
test
outs
lea
sti
push
test
retf
sub
clc
dec
test
mov
cmp
sbb
sub
fdiv
inc
cld
mov
push
into
outs
mov
cmp
repnz
sub
movzx
push
pusha
adc
idiv
shl
nop
xor
lds
adc
jmp
dec
dec
ror
or
std
inc
dec
jne
and
pop
pop
or
ror
or
sub
in
xor
and
data16
jne
xor
(bad)
jns
mov
or
add
nop
lods
push
fwait
dec
sar
jp
lgs
sub
es
aad
js
jl
std
or
test
sub
and
or
inc
mov
daa
mov
push
inc
fimul
sbb
ret
jmp
adc
or
cmp
stc
popa
mov
xor
pop
jp
inc
clc
mul
cld
mov
daa
int3
data16
or
xchg
test
out
cs
dec
popf
xchg
xor
aad
dec
clc
and
push
fdivr
jbe
jle
or
push
or
jne
mov
mov
outs
shl
mov
and
call
mov
(bad)
std
mov
js
jne
mov
mov
inc
shr
sub
push
xor
std
xor
ds
pusha
sub
sub
das
sub
push
pop
inc
cmp
and
or
mov
and
mov
test
jo
jmp
hlt
dec
test
add
sti
gs
test
aad
popf
push
xor
xchg
data16
xchg
adc
xor
cmp
sbb
cmp
add
jns
sbb
(bad)
out
call
lock
push
sub
shl
mov
sub
add
cmps
jbe
inc
and
mov
sub
mov
lock
jmp
inc
pop
test
add
or
ss
loope
push
xchg
or
push
(bad)
lahf
mov
xchg
sub
inc
jl
popa
xlat
jecxz
cmp
sbb
in
mov
fiadd
mov
push
outs
imul
clc
push
cmp
sub
jbe
or
ret
sub
jp
into
retf
(bad)
sub
xchg
push
jp
movs
fisubr
ins
sub
mov
enter
mov
lea
mov
mov
enter
xchg
std
out
aaa
jmp
add
xor
aam
mov
jmp
aas
push
push
arpl
xor
cmp
or
inc
add
bound
fstp
jbe
push
jmp
retf
ja
lea
dec
xor
mov
sub
mov
fldcw
push
add
and
inc
fisttp
mov
dec
test
adc
rcl
jo
in
xchg
cmp
rcl
or
mov
or
rcr
outs
clc
adc
fcom
mov
pop
adc
mul
rcl
push
addr16
out
add
cmp
adc
inc
pop
jae
sbb
shl
das
(bad)
jmp
mov
repz
xchg
pop
add
movs
aam
push
daa
fsub
adc
pop
dec
lods
scas
adc
pop
mov
fstp
fwait
rcr
push
xchg
inc
ret
sub
jnp
aam
and
aam
leave
mov
popf
push
int
or
aas
seta
aaa
in
shr
cmp
dec
or
fiadd
inc
test
lock
xchg
and
aam
fiadd
mov
or
cmp
sub
mov
dec
call
movs
ror
hlt
mov
mov
and
(bad)
ror
retf
rcr
push
call
xor
inc
and
rcl
sbb
jg
jg
push
test
dec
syscall
int
or
sbb
loopne
in
jo
mov
sub
adc
ja
sbb
jle
mov
adc
cmp
pusha
in
fistp
jbe
push
dec
inc
mov
ror
fild
data16
popf
cmp
cmp
xchg
adc
out
popw
js
scas
push
sbb
adc
dec
xchg
movs
outs
data16
push
xchg
xchg
rcr
add
push
ins
loope
fistp
mov
push
mov
pop
repz
and
push
adc
mov
cld
loopne
imul
test
out
fs
mov
aas
aaa
fcomp
push
adc
pop
push
add
dec
add
cld
xor
(bad)
add
xchg
pop
add
ret
mov
push
push
add
dec
imul
call
out
push
popa
jb
popa
outs
je
jns
gs
add
loopne
sbb
or
lock
nop
lock
clc
push
add
gs
data16
adc
sub
add
inc
xor
inc
outs
jo
pop
or
loopne
cwde
sbb
inc
gs
lods
sbb
jae
or
push
outs
jne
arpl
jbe
loope
jmp
int3
inc
add
adc
add
jge
mov
push
outs
sbb
sub
int3
inc
adc
cmp
stos
push
sbb
stc
mov
scas
dec
gs
and
loopne
addr16
js
dec
clc
gs
je
icebp
pop
mov
not
lods
ins
test
scas
gs
(bad)
stos
pusha
fwait
jecxz
add
push
push
cwde
enter
jae
imul
shr
jle
ins
add
add
adc
ja
mov
cs
das
jb
in
adc
call
push
pop
enter
(bad)
in
push
add
loopne
adc
add
add
push
inc
add
add
push
inc
shl
jae
dec
push
pop
or
xor
mov
fwait
and
inc
in
and
pop
div
xchg
xchg
xlat
add
add
adc
jcxz
test
add
sbb
mov
cmp
push
bound
loopne
xchg
mov
fadd
cmp
sub
scas
test
scas
(bad)
out
push
add
inc
push
gs
push
and
cmp
sbb
inc
loopne
pop
sbb
sbb
xor
jmp
jno
add
push
scas
mov
cmp
pop
pop
mov
push
jle
mov
mov
adc
sbb
enter
test
adc
mov
add
pop
iret
out
pusha
add
or
shl
add
call
lahf
xor
jmp
movzx
mov
mov
mov
cmps
inc
loopne
mov
add
enter
push
outs
inc
sub
hlt
into
test
mov
mov
xor
mov
dec
cli
push
imul
mov
xor
xor
lock
adc
out
pusha
cmps
sub
push
dec
les
ins
mov
rol
sub
cs
lock
jae
cwde
rcr
push
mov
cmp
mov
cmps
aam
rol
mov
test
or
cmp
adc
mov
add
jmp
pop
adc
in
push
je
add
ret
jp
pop
in
retf
or
mov
dec
aas
adc
inc
add
push
mov
sahf
cmps
imul
int3
enter
stos
adc
cli
mov
add
mov
aas
jmp
and
cmp
jne
and
aas
aad
or
or
test
test
scas
clc
cmp
add
icebp
and
sub
mov
inc
sbb
ret
call
push
shr
jmp
clc
rcl
push
fild
pushf
int3
or
stc
int
pop
push
cwde
fs
inc
imul
pop
cmps
or
jmp
inc
lock
sbb
sbb
push
ror
mov
int3
in
mov
out
sbb
jp
inc
cmps
(bad)
mov
or
pop
loopne
ret
sbb
lods
cs
xchg
sar
mov
test
(bad)
movs
dec
mov
daa
loopne
sbb
mov
push
mov
push
cmp
je
dec
lods
dec
jmp
pop
add
xchg
mov
pop
sub
pop
popf
lea
lahf
shr
jge
out
mov
pusha
and
call
cmps
pop
cmp
fmul
push
in
mov
ret
add
loopne
mul
in
jmp
dec
fsub
fmul
arpl
push
je
xor
inc
push
icebp
cwde
jmp
push
mov
and
push
mov
ins
xchg
shl
int3
rcr
out
clc
cli
or
lods
or
cmp
jo
shl
mov
fdivr
mov
cmp
pop
add
rol
ret
pop
lea
mov
imul
adc
push
fs
mov
mov
or
mov
or
lock
xchg
jo
fidivr
add
mov
xchg
xor
cwde
sbb
lods
(bad)
int
scas
call
push
cwde
lock
dec
data16
mov
inc
clc
pushf
add
or
loope
ins
dec
or
mov
mov
mov
fdiv
iret
xor
stos
jb
mov
adc
or
adc
lods
add
and
adc
and
mov
ins
jecxz
pop
in
adc
imul
inc
ja
in
fidiv
mov
dec
adc
das
fld
adc
xchg
push
ds
into
add
sbb
add
push
cmp
pushf
pop
add
ss
stos
push
push
ror
std
sbb
cld
mov
xor
add
mov
in
stc
pop
shl
pusha
cmp
sbb
xchg
lea
inc
adc
cmc
fadd
fdivrp
add
and
lock
mov
paddw
fistp
mov
ret
nop
mov
push
push
dec
push
imul
jo
out
pop
mov
push
cwde
add
add
out
adc
aaa
sub
stc
push
add
dec
outs
outs
je
and
add
inc
popa
jns
push
pop
retf
pop
dec
cwde
pop
fiadd
mul
cli
push
dec
imul
arpl
push
in
and
inc
jb
arpl
add
pop
sbb
adc
data16
je
aas
add
push
dec
sub
imul
pop
es
xchg
adc
mov
fwait
cmp
xbegin
in
inc
sbb
xor
jle
xor
mov
push
pop
(bad)
mov
cmp
jo
mov
les
mov
or
mov
in
xor
in
rsqrtps
hlt
ds
mov
adc
xor
imul
add
hlt
add
retf
pop
or
add
mov
and
inc
sysret
push
popf
retf
xchg
bound
sub
sub
or
shr
retf
mov
inc
stos
retf
sbb
or
aad
lea
xor
ror
mov
in
dec
dec
call
mov
fbld
or
loopne
push
and
mul
mov
jmp
das
nop/reserved
push
ins
push
cmp
outs
sub
cmove
(bad)
cs
push
popf
sysexit
push
pcmpgtw
fxtract
fisubr
mov
push
push
and
(bad)
nop
push
sub
sbb
cmp
add
bound
sbb
pusha
or
sbb
mov
in
sbb
sbb
cmps
inc
sbb
sbb
add
retf
xor
xchg
call
push
jg
in
add
out
mov
mov
js
push
lods
es
das
pop
and
daa
push
xor
inc
push
mov
add
enter
addr16
or
movs
into
leave
leave
push
xchg
leave
cmp
push
sbb
getsec
js
adc
repz
lds
lar
dec
push
mov
sub
in
imul
or
pop
sub
xor
sbb
xor
and
mov
or
push
push
inc
inc
cmp
mov
push
or
add
rol
xchg
mov
imul
or
pop
js
cmc
xor
fwait
ret
mov
arpl
xor
add
aas
push
inc
outs
inc
fs
or
fiadd
jmp
sub
outs
push
jne
je
add
pop
(bad)
jb
sbb
inc
or
lds
(bad)
std
push
lods
(bad)
xor
cmp
push
repnz
test
or
jae
xchg
cmp
cmp
int
icebp
test
les
mov
dec
jmp
mov
(bad)
inc
adc
sbb
sub
mov
push
lds
mov
mov
je
jmp
push
les
cdq
xor
fmul
adc
inc
int3
lods
(bad)
std
mov
add
xor
retf
sbb
or
dec
imul
sbb
mov
mov
sub
cmp
cwde
fiadd
inc
sub
adc
pop
movs
es
das
adc
sbb
inc
out
push
mov
jo
adc
add
out
dec
(bad)
add
popa
pop
dec
sub
xor
in
cdq
iret
add
push
pusha
jo
jb
ror
je
test
pop
pop
ja
popf
not
dec
xor
jnp
and
or
imul
push
xor
imul
or
imul
movs
push
ficomp
shl
jo
add
adc
push
add
out
push
fs
test
adc
jl
loopne
fidivr
dec
test
sbb
mov
mov
sbb
pop
sub
cmp
popa
mov
mov
add
call
mov
lock
or
dec
das
mov
sub
sub
js
mov
add
mov
mov
jns
js
aam
mul
inc
popf
mov
or
dec
cdq
data16
cld
mov
stos
ja
add
inc
out
inc
ss
cmps
int
push
out
(bad)
jle
adc
cmp
jne
or
xchg
mov
data16
js
pop
repz
fdiv
or
jne
or
push
or
sbb
add
rol
add
xor
mov
outs
mov
adc
push
sbb
jne
or
jmp
mov
mov
mov
outs
pop
adc
arpl
pusha
ins
arpl
pop
jecxz
add
xor
inc
inc
or
mov
cmp
pop
add
retf
push
or
pop
popf
inc
adc
aaa
inc
or
or
icebp
arpl
sub
ficom
les
xchg
jo
or
cmps
cmp
mov
enter
or
or
test
pop
adc
sub
pop
repnz
mov
sub
cmp
sbb
ja
jmp
sub
js
fnstsw
rcl
fsub
pop
shr
cs
add
mov
mov
es
ror
out
jo
sbb
push
and
in
jmp
cmp
mov
dec
pop
lock
(bad)
fstp
or
mov
aam
xchg
les
bound
push
push
outs
enter
adc
or
or
or
test
out
jns
add
inc
mov
or
dec
aaa
sub
cmp
dec
or
xor
sub
xor
mov
push
loopne
repnz
nop
or
lods
jl
add
inc
sahf
dec
push
mov
push
data16
add
or
rcr
cmp
rol
data16
fstp
test
lock
movzx
push
add
add
sub
(bad)
cmp
or
jl
and
std
mov
jle
stos
(bad)
adc
cmp
jl
pop
(bad)
scas
ja
loopne
pushf
es
and
add
mov
add
pushf
out
or
xor
ins
jle
mov
pop
ja
adc
test
jl
mov
sbb
scas
ss
or
adc
repz
or
xchg
mov
push
(bad)
lods
pop
sbb
or
push
xor
addr16
adc
stos
adc
mov
cmp
cmp
data16
push
add
icebp
rol
push
push
dec
push
sub
mov
scas
dec
add
mov
cwde
loope
or
push
xor
push
clc
add
sbb
dec
xchg
test
adc
push
adc
loopne
out
mov
cmp
push
or
das
ror
sbb
jbe
push
push
mov
mov
sbb
adc
push
mov
push
mov
addr16
push
push
mov
adc
inc
mov
mov
sar
popa
out
enter
sub
test
jne
cmp
pop
push
sbb
pop
or
fdiv
or
push
(bad)
dec
xchg
push
push
adc
dec
adc
add
add
lock
add
sbb
mov
scas
lea
rcl
into
loope
sub
mov
fucomp
(bad)
xchg
pop
push
inc
cmps
add
addr16
xor
hlt
lea
retf
add
add
adc
fcomip
adc
mov
fdivr
push
fistp
jne
push
and
push
push
xor
and
jnp
ins
jg
mov
cmp
or
rcl
lahf
xchg
sbb
shl
pushf
or
sti
cmps
lds
mov
int3
mov
fmul
div
add
or
mov
int
mov
addr16
jae
ret
dec
push
in
movs
inc
ds
add
cmp
mov
xor
cmc
nop
jmp
xor
ret
sub
mov
or
xchg
js
or
ret
push
or
or
cmp
cmp
push
add
and
cmp
xchg
jo
push
outs
sbb
mov
dec
mov
jmp
pusha
out
shr
sub
push
popf
and
cmp
mov
pop
outs
mov
outs
or
push
and
outs
out
pop
loope
xchg
and
enter
and
pop
and
pop
outs
xor
test
test
outs
and
mov
enter
scas
pop
(bad)
fadd
xchg
jo
outs
push
and
mov
mov
sar
dec
sub
nop
(bad)
jbe
push
jne
jmp
pop
or
iret
mov
pushf
fs
daa
pushf
clc
ja
ja
pop
push
jmp
jb
je
jmp
jno
shr
and
jmp
xor
sahf
je
or
int3
add
xchg
add
call
pop
mov
inc
cmp
jl
adc
mov
int3
inc
adc
and
and
fwait
push
pop
mov
mov
xor
and
lock
ja
out
stos
js
pusha
xor
sbb
jb
sub
pop
ja
ja
lea
or
ja
jnp
cmp
dec
cs
pop
ds
add
mov
pop
sbb
stc
push
test
and
inc
into
jp
or
add
add
mov
test
cmp
add
sbb
push
call
push
mov
xor
jge
dec
lock
sub
xor
push
push
xor
cdq
dec
cli
ins
cmps
xor
sbb
pop
push
fwait
je
rcr
icebp
mov
sahf
hlt
les
test
jne
leave
mov
dec
xchg
fimul
inc
or
mov
mov
enter
ja
or
jge
test
mov
outs
clc
xchg
adc
dec
mov
leave
sar
add
mov
(bad)
fadd
push
dec
cmps
or
xlat
shl
push
cwde
xlat
bound
jl
push
jl
jo
iret
leave
shr
mov
add
out
mov
mov
push
test
(bad)
call
jne
bound
push
lds
adc
cdq
popa
enter
lods
test
pusha
xor
in
lahf
xchg
cmp
test
ss
cs
push
add
pusha
lahf
lea
shr
shl
mov
cmp
jle
and
xor
nop
xor
in
inc
aam
or
ja
bound
cmp
inc
pop
jg
and
cmps
inc
loopne
xor
and
xor
rcl
je
jo
or
xor
sbb
cmp
pop
mov
xchg
pop
push
jp
mov
dec
jbe
xor
mov
call
xchg
xor
out
cmp
sub
sub
aas
sti
pop
sub
adc
loope
mov
js
mov
test
xor
or
push
cmp
sbb
adc
cmp
mov
jbe
lods
push
mov
loop
xlat
faddp
push
xlat
push
shl
(bad)
jecxz
add
xchg
aas
sub
adc
mov
or
gs
(bad)
aam
adc
push
xchg
je
test
rol
jbe
pusha
sub
int3
aam
inc
jbe
loopne
dec
fnstsw
inc
mov
cld
aaa
push
dec
mov
push
mov
mov
jle
fwait
jno
popa
dec
push
data16
add
dec
or
inc
push
cs
ret
xchg
(bad)
bound
nop
xor
adc
mov
div
mov
jo
pop
push
mov
lock
loope
pop
pusha
fldz
fmul
fnstsw
sahf
ja
xchg
mov
sub
sbb
push
jmp
cmp
sbb
into
xchg
cmp
xchg
fstp
fwait
mov
in
(bad)
cmp
add
shr
movntps
mov
mov
inc
mov
movs
pop
mov
sub
fadd
fadd
call
popf
shr
mov
jo
shr
mov
mov
data16
mov
fwait
push
sar
or
push
js
bound
mov
es
push
jg
fadd
aaa
or
push
pop
or
cdq
add
jle
packuswb
mov
ret
or
push
push
je
push
inc
cli
push
or
pusha
adc
push
jb
in
jnp
pop
ja
lahf
sbb
aam
(bad)
cld
pop
call
aam
movs
sbb
inc
lea
xor
lock
hlt
add
mov
mov
in
xor
mov
sti
ret
xor
in
out
call
in
rcr
stos
fucomi
dec
js
inc
in
jge
xchg
push
es
or
test
dec
data16
loopne
sahf
pop
dec
dec
sar
mov
mov
cmp
add
adc
cmp
outs
das
push
and
sub
mov
sub
pop
es
cmp
sub
and
push
jg
hlt
jl
adc
jg
mov
add
sub
push
popf
pop
(bad)
leave
in
sub
pop
push
cld
repz
ins
mov
add
jmp
add
dec
das
ds
xor
aas
clc
test
je
clc
test
xor
add
sbb
mov
sub
jg
out
sbb
in
jg
and
fwait
jecxz
or
adc
es
iret
or
dec
or
adc
jle
adc
sahf
xor
rcl
inc
sbb
add
es
loope
push
loope
cmp
call
aas
push
cmp
jne
inc
aam
cmp
jmp
adc
xor
push
cmp
mov
add
movs
int
pushf
mov
test
int
dec
jp
mov
je
xchg
(bad)
cmp
loope
or
mov
ret
stos
pop
cld
sbb
fsubrp
and
adc
adc
aam
test
dec
and
dec
fld
cmp
in
mov
dec
iret
mov
and
ss
sub
fwait
test
pop
mov
lods
dec
mov
into
add
or
outs
add
ins
push
add
or
pop
icebp
clc
out
test
jbe
dec
and
pop
jne
xor
es
dec
je
ret
out
add
sbb
xchg
inc
ds
jne
inc
jnp
sub
ss
std
aam
xor
pop
ret
cwde
add
add
(bad)
xor
fnstenv
es
dec
imul
pop
shl
test
pop
mov
sub
retf
add
xor
jae
clc
jae
scas
jl
loopne
push
(bad)
bound
fadd
leave
sbb
jp
test
or
add
jae
clc
adc
push
add
or
jle
or
nop
pop
ret
dec
scas
and
add
loopne
cmp
dec
test
mov
pop
mov
in
int
mov
cmp
push
mov
movs
ud0
adc
test
into
jnp
aad
sbb
sbb
sbb
lahf
pushf
xchg
rol
xor
push
ret
mov
(bad)
jmp
dec
das
cli
daa
inc
ja
mov
(bad)
lea
pop
mov
pop
cmp
mov
cmp
ja
retf
outs
sub
adc
pop
jo
push
sub
mov
jg
push
xor
dec
add
sbb
scas
into
mov
sbb
pop
add
sahf
mov
cmp
add
loopne
xchg
jge
test
add
pop
loopne
mul
rol
pop
sahf
mov
inc
add
and
inc
call
ins
push
inc
jmp
mov
icebp
or
lock
push
adc
and
and
inc
cmps
cmp
dec
fnsave
add
push
imul
or
add
fld
push
das
or
mov
mov
or
loopne
in
std
xor
mov
je
push
jle
outs
ja
mov
xchg
cmp
add
or
outs
js
push
enter
imul
sub
mov
adc
jmp
pop
dec
test
jge
jmp
push
push
push
cmc
hlt
outs
repz
test
push
inc
jo
push
mov
(bad)
mov
(bad)
xor
sub
adc
ins
adc
pop
pop
inc
rcl
ins
lea
jl
shl
scas
mov
stc
dec
xchg
int3
test
pop
into
jg
mov
sub
add
rol
adc
stos
adc
mov
sbb
mov
cwde
sbb
test
or
pusha
mov
sub
jo
cs
lea
das
xchg
mov
xor
popa
push
fmulp
test
fistp
sub
sub
outs
into
or
fist
rcr
jo
cmp
xor
jge
int3
lea
int3
pusha
fisub
pusha
mov
push
ret
shl
mov
in
popa
ret
repnz
cmp
test
in
inc
sub
add
push
sbb
or
stos
push
adc
or
and
push
ficom
test
cs
inc
out
inc
and
mov
add
adc
js
pop
xor
mov
push
jl
dec
out
sbb
or
inc
inc
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
leave
leave
leave
leave
sub
sub
leave
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
aas
into
leave
leave
add
push
xor
stos
inc
jg
daa
cmp
je
aad
push
cmc
cli
clc
push
bound
mov
iret
es
ror
adc
adc
ja
jle
adc
cmp
mov
fcom
xor
(bad)
fistp
pop
ret
jmp
pop
xlat
sti
jb
mov
pop
adc
leave
retf
adc
ds
and
inc
clc
push
movs
rcl
pop
rol
pop
rcl
inc
pop
add
stc
jns
adc
sahf
jmp
cs
inc
fsub
inc
or
in
sbb
xchg
pop
push
in
jg
dec
or
cwde
push
in
add
inc
inc
(bad)
mov
jns
gs
push
loopne
or
jb
push
mov
(bad)
sti
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
inc
dec
pop
sub
div
test
push
push
push
push
push
pop
inc
push
add
or
idiv
mov
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
push
jne
inc
add
pop
adc
popa
cs
inc
inc
outs
ins
ins
outs
outs
icebp
jae
ins
jbe
div
les
add
push
pop
enter
sbb
(bad)
push
cmp
pop
test
rep
sbb
jns
mov
jg
cwde
(bad)
(bad)
cmp
jmp
adc
inc
ins
popa
jae
push
imul
jb
dec
bound
arpl
push
inc
jb
cmp
lock
pop
add
adc
add
gs
data16
pop
test
push
pop
loop
adc
mov
add
xchg
fcomp
mov
xchg
(bad)
loopne
enter
lods
inc
loopne
mov
(bad)
add
add
adc
and
data16
jb
outs
jb
pop
xor
sub
into
loopne
add
fstp
movs
jg
adc
or
das
retf
sub
daa
push
push
or
pop
jnp
mov
adc
add
lock
add
and
push
popa
arpl
addr16
popa
ins
pslld
xor
dec
popa
outs
mov
fsub
mov
push
dec
fisubr
outs
mov
dec
aam
daa
sahf
test
inc
or
outs
mov
sub
or
lea
add
xor
das
push
push
sbb
xchg
inc
loopne
dec
into
hlt
or
push
add
out
jno
or
ficomp
js
es
push
es
ins
sub
xchg
ins
mov
push
mov
sub
jne
aas
sub
dec
inc
push
fist
fmul
cmp
cwde
je
xchg
out
xor
les
(bad)
mov
pop
stc
inc
jo
push
popa
ret
inc
dec
xor
std
push
movs
xchg
lock
gs
pop
dec
lods
std
fidivr
pop
outs
pop
pop
add
xor
fmul
and
outs
adc
scas
sbb
mov
inc
sub
or
add
mov
or
pop
push
sub
mov
test
pop
add
xchg
jo
test
inc
xor
mov
inc
loopne
je
push
outs
sbb
fadd
add
jmp
jae
movs
jne
jecxz
sub
or
add
dec
outs
xor
arpl
cmps
add
xchg
pop
ret
outs
add
cmps
mov
lock
(bad)
push
jl
and
jb
push
jns
ins
cs
outs
addr16
loopne
fistp
lods
ds
inc
dec
pop
out
add
add
dec
gs
lods
sbb
add
ins
jne
fs
adc
rcr
add
inc
rcr
jge
add
inc
popa
sbb
lock
mov
inc
jb
popa
jns
jae
adc
pop
pop
in
mov
(bad)
lods
and
push
aas
adc
outs
cmp
add
pop
inc
stos
cwde
jo
cmovle
mov
push
fldcw
xchg
fcom
sub
jl
push
inc
outs
jne
sahf
je
push
stos
mov
mov
dec
outs
je
jecxz
jbe
gs
lds
mov
imul
test
xor
pop
xlat
les
imul
ins
inc
imul
fld
cmp
mov
mov
add
or
add
dec
jno
push
pop
inc
jne
xor
push
in
pop
add
fimul
push
jbe
xchg
or
not
mov
add
cmps
fs
test
imul
js
dec
push
pop
cmps
push
cmp
cmp
sub
jecxz
lods
xchg
adc
mov
or
sub
pop
addr16
cmps
jbe
xor
pop
push
outs
sti
dec
jl
add
dec
inc
sub
xchg
fbstp
push
pop
or
movs
sub
add
sub
jbe
xor
lods
jl
inc
xor
mov
add
sbb
jne
xchg
add
popa
scas
(bad)
add
lods
retf
arpl
daa
mov
or
add
scas
imul
adc
js
cmove
fidiv
outs
jns
xlat
dec
pusha
bound
js
test
jnp
and
mov
outs
outs
cld
test
outs
stos
mov
je
jo
fdiv
or
sub
imul
out
pop
push
inc
dec
outs
inc
js
push
imul
cwde
imul
xor
loope
sub
movs
pusha
sbb
cmp
sbb
sub
shl
mov
or
inc
inc
xor
xor
or
cmp
or
sbb
pop
inc
mov
inc
push
inc
mov
into
into
jecxz
fsub
add
fadd
add
dec
arpl
neg
mov
es
xchg
push
cmovno
pop
mov
pop
inc
icebp
mov
mov
(bad)
repz
mov
and
add
or
pop
iret
fcomp
mov
adc
push
jno
lds
js
scas
and
ins
mov
inc
sub
adc
test
mov
add
jge
movd
inc
sub
pop
(bad)
icebp
xlat
pop
mov
add
push
jno
imul
into
push
cmp
gs
push
mov
push
das
add
fucomp
mov
push
pusha
es
das
cmps
push
iret
adc
ins
stos
adc
pop
iret
sbb
outs
and
adc
push
add
loope
ret
push
sbb
sbb
iret
cmp
cmp
add
arpl
sub
and
push
adc
je
rol
push
pop
jns
addr16
cmp
mov
mov
shl
inc
mov
mov
addr16
push
das
or
xlat
inc
dec
mov
jo
jnp
in
pop
ds
lock
ja
push
xlat
mov
mov
clc
push
cmps
and
inc
xor
movs
push
lds
mov
mov
test
stos
(bad)
je
mov
xor
fld
push
gs
fmul
rol
popa
push
out
inc
sub
xlat
sub
mov
pusha
stos
out
add
(bad)
inc
mov
xchg
das
fcmovne
lods
adc
pop
es
shr
outs
das
xchg
push
xlat
loopne
inc
lods
inc
jo
xlat
fmul
lock
adc
int3
call
push
or
nop
sub
test
push
xor
add
jns
bound
addr16
inc
sbb
mov
(bad)
int3
test
mov
imul
neg
ins
das
stos
push
xor
in
adc
lock
movs
push
jo
jnp
mov
push
nop
push
sub
sub
ret
xlat
stc
inc
mov
mov
sub
ret
clc
xchg
push
mov
or
ins
jo
(bad)
int
mov
dec
dec
inc
inc
jb
ja
gs
sbb
sub
push
lahf
bound
dec
outs
sub
dec
cmp
jnp
cmp
and
and
sub
push
pop
cwde
mov
imul
mov
out
adc
sbb
cmovbe
int3
sbb
inc
push
daa
daa
mov
outs
jg
mov
sbb
cmp
add
cmove
cmp
jo
push
jp
imul
or
shl
and
repz
(bad)
div
(bad)
inc
inc
popa
cld
arpl
mov
loopne
jne
mov
cmp
jno
dec
cmp
jno
add
xchg
or
adc
rcl
push
sub
dec
or
push
ror
add
movs
or
and
mov
or
cmp
jmp
fld
aas
add
dec
add
fs
loope
nop
ret
lods
mov
sub
or
xor
cmps
fs
js
fst
sub
add
inc
dec
movs
and
xchg
jns
outs
inc
repz
xor
cmps
pop
cmp
push
mov
inc
sub
mov
ins
(bad)
arpl
sub
push
inc
add
jns
mov
inc
rcl
in
and
sti
lock
inc
dec
test
mov
xchg
test
cmp
cmp
push
call
outs
jae
pop
mov
inc
ficom
cmp
pusha
outs
or
sbb
jb
ss
xor
lahf
imul
inc
or
adc
mov
jp
mov
in
cmps
dec
inc
sub
loopne
xchg
add
loopne
xchg
add
shl
pop
repz
sub
movs
cmp
pop
lods
mov
int3
or
jbe
enter
add
or
cmp
xchg
adc
out
fild
jae
sbb
or
cmp
xor
pop
retf
inc
inc
or
out
cmp
out
pop
dec
adc
adc
or
(bad)
add
xchg
and
add
add
repz
cmp
call
je
and
adc
pop
and
imul
adc
(bad)
bound
push
push
mov
push
mov
arpl
pusha
add
lock
add
fwait
sbb
das
push
push
xchg
mov
add
mov
cmp
(bad)
aad
addr16
push
cmp
sub
scas
int
test
push
cwde
mov
push
xor
sub
add
sub
loopne
pop
or
xor
sub
sti
mov
add
mov
outs
mov
pop
mov
mov
lods
neg
imul
xchg
xchg
rcr
je
lods
jns
mov
sbb
push
add
push
mov
(bad)
sub
loopne
push
out
pop
xor
fwait
adc
dec
sbb
rcr
adc
cmp
add
mov
pop
dec
sbb
inc
inc
jbe
push
push
xchg
or
inc
(bad)
cmp
xor
lock
add
dec
inc
sub
inc
sti
rcr
xor
(bad)
subps
or
jle
int3
mov
inc
adc
dec
jb
popa
call
jmp
adc
fisttp
add
sbb
iret
adc
mov
not
std
mov
or
inc
fidivr
add
jnp
mov
xor
rcl
sbb
pop
aam
add
jne
(bad)
jp
fsub
or
adc
mov
outs
push
add
js
pop
loopne
je
jge
mov
cmp
pop
sub
push
push
test
js
aad
push
pop
inc
loopne
retf
or
out
sub
mov
push
jns
cmps
pop
add
in
ror
dec
je
jae
add
pop
and
jae
pusha
cmps
ret
add
jge
test
int
clc
and
push
dec
jecxz
jmp
and
jno
aaa
ja
xlat
jecxz
cdq
fsub
aam
daa
and
add
leave
mov
mov
imul
sbb
aaa
arpl
lock
push
sbb
ret
xor
aam
sub
sbb
and
xchg
pop
dec
shr
cmps
repz
adc
cmc
ror
cmp
enter
aaa
adc
adc
scas
inc
arpl
adc
adc
arpl
adc
outs
mov
sbb
pop
movs
das
mov
pop
xor
adc
push
out
aad
or
sbb
mov
xchg
ins
pusha
mov
sbb
shl
xchg
aad
mov
(bad)
fmul
movs
add
sbb
(bad)
pop
adc
mov
mov
scas
lods
push
in
xchg
xchg
push
out
ret
push
in
sub
sub
sub
pop
clc
mov
std
and
inc
pop
lea
sub
and
inc
sub
sbb
pop
addr16
inc
or
or
and
add
es
das
nop
sub
push
(bad)
inc
push
pop
jbe
dec
inc
lock
clc
push
add
mov
sub
dec
ja
sbb
scas
cmps
push
mov
pop
stos
push
loopne
sar
mov
mov
pop
inc
je
jns
adc
scas
pop
mov
mov
aad
push
sub
stos
lods
loopne
add
push
call
das
push
ficomp
hlt
aas
sub
add
aas
fcomip
mov
das
(bad)
push
das
rep
and
push
stc
mov
xor
aas
pop
mov
aas
pop
mov
(bad)
shl
pop
cmp
shr
pop
and
pusha
test
sub
sub
scas
sti
mov
dec
add
stos
add
mov
jno
add
scas
jmp
pushf
cmp
push
xchg
pop
ja
es
xchg
out
cwde
cmc
xor
mov
jno
ja
les
add
loop
xor
sbb
add
aad
lods
int3
in
dec
mul
mov
adc
jns
scas
pop
retf
bound
mov
dec
cmp
arpl
in
js
icebp
add
pop
mov
push
in
jnp
or
mov
jecxz
inc
jo
cmc
outs
pop
in
or
mov
shl
xor
test
inc
and
mov
outs
test
outs
mov
scas
add
inc
cmps
sbb
mov
addr16
in
mov
frstor
into
jae
call
fimul
or
dec
je
daa
and
in
lea
mov
cmp
aam
add
push
xor
call
adc
(bad)
in
sbb
push
inc
fwait
pusha
mov
jno
or
pop
mov
xor
fadd
or
mov
mov
rcr
jae
js
and
adc
sbb
sbb
or
ror
lods
jl
sahf
adc
or
test
and
leave
sbb
sbb
mov
jo
mov
adc
sub
bound
stos
xchg
mov
ss
test
jae
nop
mov
cmovb
push
dec
xor
mov
add
xor
mov
or
call
add
sub
ret
or
jae
adc
add
mov
mov
mov
push
inc
mov
xchg
or
or
into
pop
xor
cmp
test
aas
repnz
xchg
xchg
fld
adc
xchg
or
xchg
lods
add
pusha
aam
push
push
sti
sti
add
sbb
adc
(bad)
call
test
je
add
call
mov
mov
xor
mov
sbb
mov
mov
sbb
(bad)
sub
icebp
xor
inc
add
push
not
sti
outs
push
mov
test
je
sub
inc
enter
movs
(bad)
sub
test
ds
or
push
cwde
scas
lock
inc
adc
xor
mov
bswap
jbe
fs
rol
push
mov
sub
ret
repz
mov
and
mov
xor
mov
dec
mov
hlt
mov
sti
pop
cld
mov
cmp
and
ds
add
les
fcomp
add
lea
inc
or
add
mov
jbe
outs
(bad)
mov
pop
pop
stos
adc
ror
jmp
xor
sar
jmp
pop
jle
sub
jbe
inc
dec
pop
ret
aas
call
or
jl
pop
nop
or
dec
std
xchg
sub
inc
add
repnz
xor
xor
cmp
in
hlt
push
sahf
lock
push
cmp
in
fld
in
adc
loopne
mov
pusha
cmp
add
iret
sub
jmp
xor
mov
imul
rol
pusha
in
cwde
xor
mov
mov
loopne
jae
xchg
div
mov
jne
test
movs
adc
add
mov
pop
mov
cld
nop
cmp
jle
sbb
push
pop
sahf
jg
mov
rcr
ret
lea
push
outs
pusha
mov
push
push
inc
into
inc
jnp
loopne
js
inc
xor
dec
or
pop
scas
adc
or
cli
mul
fisttp
popf
sub
add
fld
in
xchg
and
or
mov
inc
adc
dec
or
je
leave
push
hlt
adc
lahf
in
mov
(bad)
adc
in
retf
mov
xor
xchg
xchg
in
mov
push
repz
rol
inc
adc
or
loopne
fbld
lds
cmp
fild
out
xchg
sbb
cmp
mov
push
bound
aam
in
out
in
xor
(bad)
sbb
loope
pop
inc
(bad)
(bad)
std
adc
xchg
push
push
retf
in
add
mov
shl
bndldx
rol
mov
dec
xor
enter
in
sub
call
loopne
loopne
lock
sub
xor
in
fistp
push
add
test
ret
lock
bound
imul
jmp
mov
mov
ror
int3
addr16
and
out
test
adc
cmp
inc
push
or
daa
out
mov
adc
pop
aas
mov
movs
pop
ficomp
add
out
je
popf
pop
inc
out
and
push
xor
push
jno
jo
and
mov
sar
addr16
rol
jmp
in
call
pop
inc
cld
or
or
pop
in
cwde
adc
xchg
add
add
sub
mov
and
sub
inc
cmp
clts
xor
in
mov
add
cld
and
jecxz
popa
pusha
ret
ret
(bad)
jo
adc
pop
inc
cmp
sbb
loop
mov
add
pop
ins
add
mov
xlat
popf
push
mov
add
mov
mov
inc
jbe
mov
add
mov
inc
add
adc
inc
dec
ja
jae
imul
sub
pop
and
xor
add
push
push
dec
bound
and
call
test
fist
xor
xor
dec
push
imul
rol
cwde
hlt
jbe
movups
add
cdq
adc
cdq
xor
and
lahf
lea
jns
mov
or
sar
dec
pop
dec
mov
mov
mov
mov
adc
mov
scas
cmps
jnp
ret
mov
jb
inc
inc
jmp
pop
inc
mov
add
push
push
cld
fwait
mov
jno
push
mov
push
fsubr
imul
fisttp
mov
push
mov
fldenv
out
jp
push
sbb
adc
jbe
fsub
or
jl
mov
sub
shl
out
test
loopne
cmp
or
pop
jne
cld
call
add
pop
mov
imul
jmp
push
out
mov
call
scas
in
or
dec
inc
or
inc
or
and
add
pop
lods
mov
loope
adc
push
rcr
xor
adc
das
(bad)
jmp
sti
xor
pop
adc
and
mov
fild
aaa
sub
in
gs
push
test
ja
mov
xor
xchg
mov
inc
dec
sub
je
ret
mov
inc
jmp
push
add
sar
or
test
rol
or
cwde
test
test
test
jne
nop
push
je
sti
pop
rol
mov
add
or
mov
sub
(bad)
push
(bad)
ret
in
sub
sahf
add
and
push
push
out
dec
hlt
add
sub
xchg
(bad)
je
or
push
or
sbb
test
daa
cmc
inc
mov
(bad)
dec
test
jl
inc
sbb
outs
adc
retf
mov
mov
out
add
repnz
add
mov
jb
out
add
(bad)
(bad)
mov
nop
mov
cld
xchg
cs
pop
test
add
nop
dec
or
mov
cli
nop
inc
(bad)
aad
adc
fsub
aad
lea
js
mov
in
iret
shl
mov
jp
adc
mov
mov
getsec
adc
rcl
add
sub
pop
xchg
mov
inc
jo
and
mov
pop
popf
and
fst
jne
mov
cmp
data16
cmp
test
push
div
inc
or
add
shr
inc
push
lods
mov
fisttp
cmp
sbb
or
inc
enter
jmp
dec
lods
adc
push
mov
fist
lods
out
inc
aas
cmp
jg
inc
jmp
add
sbb
imul
leave
(bad)
mov
ins
adc
fidivr
or
dec
(bad)
js
enter
and
int3
pop
stc
test
jo
outs
add
push
fiadd
mov
push
mov
(bad)
or
jg
jl
mov
cmp
xor
mov
mov
outs
pop
and
push
or
mov
or
xchg
pop
iret
iret
cli
and
out
mov
jle
loope
adc
(bad)
lea
xchg
adc
adc
loop
(bad)
das
or
mov
xor
cmps
sahf
or
sub
outs
imul
imul
mov
pop
push
cmp
rol
cdq
or
outs
inc
xchg
mov
add
outs
fs
push
cs
cmps
fmul
fmul
xchg
call
pop
cmps
fadd
ins
jmp
jecxz
sbb
scas
mov
int3
sti
sbb
cdq
sbb
in
in
push
fs
out
adc
and
pop
in
add
or
dec
xor
jge
loopne
or
mov
scas
sub
jae
jae
adc
mov
jp
(bad)
sbb
or
retf
sbb
push
pop
mov
jmp
mov
sub
test
imul
lea
dec
adc
and
pushf
stos
cld
sub
movs
mov
(bad)
mov
sbb
or
cwde
test
adc
cwde
push
fbstp
pop
push
cwde
cli
dec
or
mov
sahf
and
test
xchg
or
push
xchg
jmp
ds
push
das
shl
js
sahf
or
addr16
jnp
inc
sbb
sbb
ror
and
xor
adc
inc
pushf
jecxz
push
ins
mov
mov
rol
mov
jnp
jle
clc
fwait
push
inc
cmps
mov
pop
test
ret
mov
inc
mov
xor
and
jg
nop
adc
push
(bad)
mov
idiv
bound
xor
mov
xor
mov
or
jmp
(bad)
and
das
push
popa
hlt
sub
push
repz
mov
xchg
movs
lea
nop
ror
jno
lods
sbb
mov
arpl
icebp
test
sbb
out
lds
in
jnp
fcom
jge
jp
and
or
or
and
in
mov
pop
dec
(bad)
cmps
cmp
ror
movs
inc
inc
mov
inc
add
mov
lods
les
fisubr
ins
pushf
or
or
adc
pop
sar
or
inc
adc
movs
das
xor
sub
sub
xor
mov
xor
jo
(bad)
push
and
push
mov
not
mov
pop
nop
xchg
pop
aaa
mov
push
shl
mov
pop
fs
xchg
dec
out
sbb
or
add
sub
in
ins
sbb
lock
out
cmp
and
push
jge
cmps
cs
test
mov
jo
mov
and
test
dec
add
inc
push
inc
es
out
xchg
add
jo
and
xchg
and
clc
jne
jmp
sbb
sbb
call
mov
inc
mov
push
cmp
push
xchg
xchg
dec
setge
in
or
ror
or
adc
xor
ret
and
inc
mov
cmp
jle
nop
in
cmps
push
es
adc
inc
call
loopne
xlat
dec
shl
push
inc
iret
xchg
xchg
jl
in
test
sbb
shl
adc
rol
ret
add
sub
sbb
in
xor
ud0
add
or
hlt
jne
pusha
mul
mov
jmp
xchg
ficom
jl
add
sub
sub
cmc
mov
bound
cdq
je
xor
ret
out
sub
mov
mov
repnz
sub
push
movs
call
mov
mov
test
cdq
mov
xchg
jge
mov
jp
add
sbb
sbb
mov
cwde
xchg
or
dec
das
es
inc
mov
lea
pop
dec
outs
xchg
lds
rcr
xchg
sub
imul
aas
mov
add
lock
enter
(bad)
call
xchg
loop
push
mov
loop
shl
popf
icebp
add
jg
xor
outs
mov
pop
adc
pop
adc
dec
adc
push
add
pusha
out
add
sub
adc
sbb
repz
nop
cli
push
mov
(bad)
(bad)
push
and
daa
xchg
inc
test
adc
test
adc
pushf
cmp
mov
mov
lods
jae
sbb
imul
mov
cmp
ins
and
sar
mov
mov
out
in
arpl
mov
retf
inc
push
or
pusha
mov
hlt
push
or
push
mov
pop
loope
cmp
adc
xor
das
mov
rcl
inc
fdiv
mov
in
xchg
stc
mov
cmp
gs
mov
dec
cmps
inc
cmp
mov
mov
scas
loope
inc
lea
push
sub
add
daa
mov
test
mov
sbb
mov
aad
inc
xor
lock
mov
test
mov
adc
sub
add
xor
mov
push
into
xor
cmps
push
mov
ja
ror
push
das
aam
pusha
xchg
mov
bound
mov
jno
mov
pop
mov
and
mov
aaa
or
push
(bad)
xor
ficom
inc
sub
sbb
hlt
cmp
lea
jecxz
test
xor
jecxz
jo
push
frstor
sbb
test
sti
int
sub
inc
jecxz
add
inc
mov
lea
adc
mov
sbb
adc
jmp
in
test
mov
enter
mov
add
add
xor
inc
add
mov
xor
out
nop
(bad)
test
sbb
push
push
cmp
mov
sub
fisubr
push
inc
mov
mov
mov
cmp
adc
scas
mov
adc
mov
or
shr
mov
inc
es
sub
mov
xlat
dec
adc
dec
mov
outs
fs
push
add
sub
fcmovu
adc
mov
jno
aam
cwde
jnp
sub
add
mov
shr
xor
test
jno
stos
adc
out
adc
jns
(bad)
aam
shr
je
(bad)
stos
cmp
mov
sbb
or
js
scas
pusha
inc
mov
cmp
jge
(bad)
clc
popa
cmc
shl
lods
mov
sub
jno
les
mov
mov
and
mov
mov
pop
fs
jns
das
pusha
sub
cmp
fs
add
(bad)
xor
xor
add
cld
or
ror
inc
rcl
add
ret
add
sbb
pop
loope
das
es
pop
ds
jno
arpl
xor
cmp
shl
data16
dec
pusha
xchg
hlt
data16
aad
(bad)
jle
sbb
jo
pop
sub
aam
shr
ror
add
lahf
aas
lods
jmp
hlt
add
daa
bound
lock
cmps
ror
inc
sete
mov
imul
cmps
scas
add
xchg
scas
clc
xchg
shl
cmp
and
mov
in
mov
jne
test
je
mov
pusha
pop
push
push
jl
push
cmp
add
push
clc
pusha
(bad)
push
xlat
mov
aad
cmp
mov
fnstenv
sbb
mov
mov
pop
xchg
mov
xchg
movs
je
inc
dec
and
clc
adc
cmp
je
les
fcom
push
add
call
push
ret
add
or
rol
and
xor
jae
jge
enter
mov
inc
and
test
aam
clc
bound
add
add
lock
das
fs
jno
mov
fadd
push
call
fild
jbe
xchg
push
rol
cli
iret
xor
inc
inc
movs
movs
mov
mov
cmp
jmp
dec
inc
sub
push
sub
and
enter
jmp
ret
jmp
or
nop
and
mov
cld
test
add
push
movs
sbb
enter
out
shl
mov
xchg
jg
repnz
xor
loope
xor
sbb
mov
lea
test
nop
pop
or
push
pop
js
cmp
and
pop
ret
stos
pusha
inc
mov
pop
and
jb
ret
aas
out
cmp
into
jge
mov
ins
mov
push
jb
push
ror
inc
or
cmp
rol
ror
lea
mov
test
(bad)
jp
daa
push
lock
sbb
cli
mov
lock
hlt
js
sbb
shl
mov
add
lods
mov
jnp
js
sahf
or
or
iret
sbb
add
lods
stos
in
dec
and
bound
mov
stos
xor
ds
mov
fcom
mov
in
aam
add
sbb
or
stos
add
loop
cmp
lds
adc
xchg
shr
dec
or
mov
push
inc
aaa
das
enter
add
sub
inc
mov
mov
sub
cmps
(bad)
mov
inc
ror
add
sbb
pop
mov
push
sub
mov
add
add
sbb
add
xcrypt-cfb
cmps
jecxz
sub
int
loop
or
cmp
cmps
cmp
inc
in
adc
mov
daa
das
dec
cmp
jmp
movs
mov
jle
hlt
lea
fcom
sbb
aam
cs
xchg
or
add
iret
push
out
xchg
add
dec
daa
into
(bad)
inc
cmps
daa
add
adc
shr
shl
fdiv
add
add
fcmovnb
hlt
dec
add
push
sbb
cmp
jge
push
sub
or
movs
cmps
xchg
adc
cli
adc
sbb
sub
adc
adc
jo
data16
sbb
arpl
and
sbb
out
push
inc
adc
in
test
int3
(bad)
aas
test
jne
cmp
test
add
es
pop
adc
rcl
ret
xchg
sub
xchg
call
cmps
fsubr
sbb
cwde
popa
cmps
inc
and
daa
repnz
dec
js
push
test
hlt
xor
jno
in
scas
mov
in
in
jb
loope
sbb
cmp
pusha
leave
mov
retf
cmp
cmps
pop
xor
mov
aas
leave
cmps
pushf
or
cmps
test
cmp
or
out
and
(bad)
sub
sub
dec
mov
idiv
and
aad
ret
mov
dec
mov
add
jo
xor
retf
pusha
sbb
test
rol
xlat
cs
fimul
cmp
jne
ret
adc
clc
sub
mov
pop
(bad)
aas
adc
mul
movs
movs
jmp
inc
inc
xchg
adc
mov
cmp
add
call
pushf
pop
or
mov
xchg
lods
xor
dec
nop
pop
jo
xor
call
jmp
push
mov
test
cmps
movs
add
mov
jl
je
test
fs
adc
jl
add
shl
dec
push
inc
mov
(bad)
dec
jns
xor
js
and
jge
and
sub
ins
or
pop
push
je
nop
cmp
jo
mov
pop
ins
sub
(bad)
iret
jo
xlat
sub
movs
push
ja
sub
inc
lods
and
sbb
cmp
pop
fxch
push
ficom
mov
inc
mov
mov
xchg
mov
sub
mov
inc
fs
cmp
sub
inc
ret
push
adc
pushf
in
aam
mov
sub
lahf
cmps
dec
push
lea
cmps
(bad)
jo
push
push
jecxz
cmps
loopne
arpl
inc
jno
and
aam
loope
loop
cmps
mov
test
loop
add
ins
cmps
mov
popa
scas
(bad)
into
cmc
inc
cmp
pop
adc
push
pop
cmp
mov
ror
and
cmp
aas
cmp
push
xchg
pushf
adc
stos
and
push
cmps
sub
sub
xor
cmps
dec
push
jecxz
sub
test
pop
sbb
cmps
fdiv
or
(bad)
in
and
push
cmp
cmps
fcmovnb
and
shr
push
loop
mov
add
dec
pop
ror
cmps
cmps
rcr
xchg
cmps
retf
add
push
shl
cmp
jnp
push
arpl
aam
push
push
ja
and
sub
inc
jo
or
inc
or
inc
cmps
sbb
inc
mov
stos
and
lea
add
jns
scas
xor
adc
loopne
mov
les
test
add
pop
aad
inc
pop
cmps
cmp
lea
cmps
aam
ret
and
aam
cmps
push
xor
sbb
cmps
test
push
stos
mov
xor
aad
lea
test
or
outs
sub
sub
jp
pop
push
arpl
adc
stc
inc
lea
pop
xchg
cmps
or
movs
and
xor
pop
nop
mov
add
aad
in
aad
push
cmps
aad
and
mov
push
lea
enter
and
mov
std
xlat
jb
and
add
mov
mov
repnz
cmps
cmp
push
and
mov
loopne
hlt
mov
add
mov
or
ds
cmp
and
lock
pop
lea
lea
mov
shr
(bad)
int3
lds
outs
cmp
mov
push
loop
ret
sbb
inc
sar
ja
cmp
dec
xor
ins
cmp
cmps
loopne
xor
fsin
pop
mov
mov
xchg
xor
(bad)
movs
out
sub
xor
(bad)
push
push
push
adc
addr16
test
sti
mov
adc
xchg
xor
mov
mov
inc
dec
sbb
aas
add
aam
mov
xor
or
mov
stos
mov
xchg
xor
adc
mov
sub
dec
xchg
fsub
test
div
cmp
mov
xor
xchg
sbb
adc
or
pop
pusha
addr16
ret
fidiv
push
or
push
arpl
cs
arpl
sbb
ss
fstp
push
imul
adc
popa
out
dec
lods
and
loop
sbb
pop
cmp
lea
scas
or
push
mov
(bad)
pusha
sub
or
xor
int
pop
hlt
mov
(bad)
jae
mov
push
adc
xor
iret
jne
sub
hlt
add
sbb
sub
out
call
jge
das
je
fs
dec
fcom
pop
popa
pop
out
sbb
loope
pusha
xor
inc
mov
fucomi
ret
fst
pop
pop
adc
movs
jl
mov
dec
ret
adc
adc
inc
jo
out
stos
adc
out
dec
push
and
mov
mov
pop
pop
push
cs
aam
test
pushf
rcl
sub
push
aas
sbb
fs
in
lds
xor
and
(bad)
pushf
shl
fdiv
(bad)
(bad)
jnp
mul
inc
or
push
adc
inc
push
mov
push
add
pop
jo
hlt
pop
push
xor
test
ret
push
popf
sub
or
adc
inc
push
fmul
icebp
pop
adc
pop
sbb
or
cmp
xor
fsubr
mov
cmp
iret
mov
mov
aas
sbb
inc
iret
xchg
es
js
cmp
inc
daa
daa
xlat
sbb
mov
pop
push
lahf
push
sti
cmps
(bad)
or
les
pop
mov
pop
int3
ficomp
pusha
pop
push
jne
cs
scas
adc
syscall
jl
movs
mov
xor
sub
fs
ins
jns
nop
and
iret
daa
adc
(bad)
lock
dec
rol
pop
pop
mov
lods
or
ins
xlat
inc
add
jl
into
push
rol
pop
inc
mov
push
aaa
fcmovu
add
ret
xchg
and
mov
pop
in
retf
ret
ror
iret
hlt
in
add
(bad)
dec
mov
xchg
and
sbb
loope
add
jle
mov
mov
icebp
push
cmps
jp
es
and
jae
fidivr
and
dec
push
mov
xor
dec
sbb
aas
jecxz
in
out
call
xchg
cmp
push
dec
enter
inc
rol
jmp
loope
mov
push
dec
cmp
jg
push
jl
test
jge
mov
push
mov
sar
cwde
test
test
cmp
add
dec
(bad)
aad
push
js
xchg
nop
(bad)
mov
adc
mov
jae
push
dec
cmp
adc
daa
jo
fild
or
mov
jmp
or
call
mov
jg
mov
sub
shr
add
aam
out
xchg
or
mov
call
lock
out
pop
or
add
lea
jmp
popa
sbb
inc
mov
jge
jle
push
lods
sbb
mov
mov
ret
ret
jg
mov
or
sbb
loopne
adc
xchg
sbb
and
xchg
jg
and
pop
sbb
nop
mov
jg
pop
sbb
jg
xlat
test
lods
jg
sbb
leave
ficomp
repnz
fld
mov
mov
js
inc
cmp
inc
mov
sub
sub
ja
pop
loop
push
jb
mov
adc
cmp
out
clc
nop
mov
aad
adc
ins
xchg
adc
in
call
mov
sbb
mov
adc
jmp
or
call
aaa
inc
sbb
jle
call
sub
or
jmp
mov
add
ret
push
iret
pusha
fsub
in
cli
inc
dec
lock
cmp
jl
or
xor
and
cmp
or
mov
shr
push
pusha
daa
inc
lock
mov
mov
cmp
jle
fcom
in
inc
lock
imul
sub
ja
mov
pop
sub
data16
cli
push
(bad)
popa
in
mov
js
pop
icebp
in
and
xor
aaa
sub
aaa
sbb
pop
push
ins
mov
mov
mov
mov
adc
sub
adc
add
sbb
aaa
retf
and
and
xor
outs
cs
enter
jne
(bad)
xchg
daa
shr
add
jp
jmp
and
sbb
and
sbb
jl
retf
xchg
dec
das
lds
stos
hlt
pop
neg
cmp
mov
bound
mov
mov
lods
jo
sub
ja
daa
add
aaa
push
dec
push
dec
imul
popa
cs
inc
pop
inc
ins
popa
jae
push
gs
out
idiv
jb
cs
push
popa
imul
ins
and
addr16
pushf
fdivr
fist
ds
jb
popa
jns
push
movs
inc
mov
mov
push
inc
outs
gs
jae
mov
out
inc
ins
ins
arpl
outs
jae
pop
or
or
inc
dec
push
adc
ins
cs
jo
inc
pop
enter
mov
rol
inc
daa
lock
popa
jne
je
add
(bad)
in
in
adc
or
das
dec
outs
or
inc
jbe
pop
sti
sub
and
add
push
push
and
cmp
fsubrp
dec
bound
adc
inc
and
push
inc
inc
adc
push
movhps
jl
push
sbb
shl
adc
out
ins
jae
cmp
sub
mov
jmp
jl
shl
inc
outs
jne
push
popa
(bad)
enter
pusha
cwde
cld
jmp
dec
push
inc
ja
(bad)
in
fisttp
call
je
inc
jne
arpl
in
mov
adc
out
in
mov
adc
add
lock
shl
sti
das
mov
push
adc
loopne
push
add
push
movs
cmp
imul
jle
cmp
pop
dec
push
clc
push
sbb
hlt
adc
inc
lds
pushf
adc
push
inc
dec
cmp
sub
pop
fsubr
call
into
inc
and
rol
shl
test
inc
test
or
sbb
xor
add
mov
ins
inc
add
ins
data16
push
or
inc
cli
adc
neg
fadd
dec
je
jno
ins
and
pusha
nop
jge
pop
pop
sub
push
cmp
pusha
jo
add
icebp
imul
ins
fs
mov
repz
mov
add
jne
xchg
xchg
xchg
jl
fnstenv
out
inc
repnz
xchg
repz
xor
pop
xlat
mov
push
out
ret
push
cwde
rol
repnz
mov
push
fwait
daa
test
mov
push
add
and
add
rol
sbb
adc
or
sub
sbb
pop
ss
shl
jae
jae
inc
sub
dec
sub
dec
inc
outs
cmp
add
or
sbb
out
xchg
push
dec
ins
mov
cdq
cmp
inc
cs
cmc
fisttp
in
leave
leave
cmp
aad
test
mov
xor
mov
sbb
push
stc
pop
inc
sahf
pushf
pushf
cmps
(bad)
add
dec
dec
push
xchg
daa
and
(bad)
icebp
fdiv
setne
sbb
neg
pop
hlt
push
xchg
push
xor
adc
mov
push
mov
pop
sub
fisubr
test
add
ret
sbb
xor
or
shl
add
movs
test
pop
or
movd
jae
jae
inc
outs
outs
jns
dec
sbb
inc
jle
xchg
test
mov
or
dec
jae
or
or
mov
into
sbb
jg
les
sub
les
xor
jle
inc
fs
push
pusha
push
mov
mov
add
arpl
sbb
push
(bad)
or
push
sub
sub
into
add
lods
outs
or
ret
js
outs
cdq
mov
dec
pop
jbe
adc
les
dec
enter
sahf
movs
enter
xor
dec
cmc
enter
add
out
out
or
xchg
xchg
add
xchg
or
push
xor
dec
jmp
das
leave
call
gs
pop
(bad)
sub
xchg
call
push
and
jns
pop
inc
call
xchg
pushf
imul
and
and
iret
dec
add
mov
pop
jno
xlat
inc
add
ror
jb
push
nop
add
inc
push
add
lea
jns
mov
add
push
aad
push
inc
fistp
inc
sub
pop
jmp
or
pop
cmp
je
push
add
push
ins
jle
cdq
pop
out
fcom
xor
scas
inc
add
enter
fld
ror
fiadd
or
mov
fsub
sar
rcr
pop
add
ret
xchg
xchg
push
out
arpl
les
dec
gs
xor
ror
add
popf
dec
cmp
mov
jg
jg
dec
leave
clc
cmp
sti
out
dec
popa
pop
and
mov
popa
pop
lds
js
es
pop
int
sub
dec
aaa
add
retf
addr16
mov
(bad)
call
add
cmp
and
pop
dec
add
test
lods
into
imul
add
addr16
sub
and
ds
or
mov
mov
push
mov
outs
fild
pop
mov
(bad)
jbe
rcl
pop
dec
cmp
mov
push
or
loop
jns
or
sbb
adc
and
mov
pop
add
and
xchg
dec
test
jg
sub
xor
mov
jae
sbb
add
xchg
fisubr
cmps
(bad)
and
sbb
inc
sub
sub
inc
and
scas
aad
mov
bound
mov
cmp
pop
in
adc
xor
cmp
push
or
sbb
inc
pop
pop
rcr
loope
inc
mov
add
inc
add
sbb
or
add
test
sub
test
in
stos
inc
mov
stos
mov
iret
hlt
mov
arpl
jns
add
sub
mov
les
ret
out
test
xor
aaa
push
mov
js
jbe
mov
push
add
or
test
mov
cs
pop
aas
(bad)
ror
mov
jg
add
xchg
push
dec
jp
inc
cmps
ret
call
pushf
pop
xchg
xchg
mov
push
pop
or
mov
inc
inc
pushf
test
xchg
out
in
add
push
add
inc
inc
and
and
push
addr16
sbb
sub
push
popf
cmps
push
push
lds
mov
mov
xor
push
add
enter
aam
fucomp
es
stc
push
into
cwde
jae
arpl
fsubr
push
add
enter
jmp
cld
and
loop
ins
(bad)
xor
xor
adc
push
xor
sbb
or
adc
je
rcl
mov
pusha
mov
mov
sbb
push
ins
add
xchg
bound
or
std
or
push
jo
bound
aaa
add
jb
adc
sub
add
push
push
push
pop
adc
pusha
iret
push
ins
int
pusha
div
mov
push
lods
push
push
mov
pop
test
mov
push
pop
push
jae
or
sub
and
test
in
inc
imul
push
and
push
arpl
bswap
or
inc
leave
enter
aad
or
leave
leave
leave
xchg
retf
or
repnz
or
or
sbb
jb
hlt
and
push
cmp
cmp
js
aad
push
pushf
pushf
pushf
mov
mov
sahf
adc
pop
mov
jne
adc
adc
adc
int
jl
add
or
cmp
mov
dec
or
in
push
enter
xchg
jbe
mov
or
fwait
xor
xor
enter
adc
in
pusha
and
call
add
dec
lds
aad
pusha
bound
pop
push
fwait
sbb
push
or
adc
imul
ja
cwde
jbe
xor
fwait
jae
push
or
mov
out
lea
lods
xchg
cwde
cmc
adc
or
enter
sbb
ins
sar
add
and
sub
mov
or
fwait
lea
lds
fidiv
repnz
(bad)
fwait
inc
sar
iret
dec
add
rol
int3
fwait
jno
sub
jo
add
inc
ins
shr
fadd
add
add
out
and
nop
sub
aam
mov
rol
fwait
mov
fwait
rcr
cwde
mov
mov
lods
fwait
xchg
movs
mov
popf
dec
jg
cmp
and
pop
ins
xor
cmp
add
iret
sbb
repz
cmp
add
pop
add
or
imul
inc
sbb
jmp
jae
and
adc
data16
cdq
inc
mov
mov
xlat
mov
xor
sbb
lods
inc
mov
or
push
fwait
nop
call
xor
les
or
adc
xchg
push
adc
and
inc
mov
push
mov
mov
add
xor
or
adc
adc
xor
sbb
bound
sub
fwait
jmp
or
fwait
inc
sub
inc
xor
cmp
cmp
pop
push
mov
pop
adc
add
mov
shr
fs
inc
out
test
bound
int3
lods
push
adc
mov
push
sub
lods
add
xor
sbb
fist
adc
adc
addr16
add
or
aas
mov
out
and
push
(bad)
imul
cld
out
test
jmp
ret
jnp
popa
pusha
adc
inc
lahf
cmps
push
push
push
xor
xor
adc
das
jge
and
jle
das
mov
loope
mov
dec
ja
test
xor
test
shl
push
xchg
and
sbb
mov
adc
sbb
loopne
sub
loop
sbb
push
add
pop
dec
push
stos
imul
popf
mov
pusha
popf
in
aas
cwde
shr
sbb
(bad)
jmp
aam
push
popf
das
repz
sbb
mov
mov
push
dec
fst
push
push
mov
cmp
jmp
inc
pop
pop
shr
mov
sbb
pmaxsw
in
ret
pop
jmp
sub
push
mov
fmul
aam
sbb
and
fisubr
sbb
xchg
xchg
daa
daa
iret
add
push
leave
enter
rcr
leave
leave
fwait
jecxz
push
sub
in
in
ja
in
jb
repnz
imul
in
and
bsf
out
pop
sbb
fimul
sahf
mov
fwait
add
inc
cmp
movs
div
dec
push
dec
mov
add
test
fidiv
and
popa
or
test
adc
inc
mov
enter
or
fadd
fst
out
imul
add
and
test
shr
mov
lods
ficomp
or
nop
push
or
rcl
adc
je
and
jae
pop
mov
test
(bad)
(bad)
aam
mov
or
ins
mov
je
das
leave
call
gs
and
lea
sbb
dec
pushf
sub
or
in
inc
or
mov
test
mov
out
mov
fsubr
adc
mov
jno
test
or
or
mov
adc
adc
jae
mov
add
xchg
or
sbb
rol
ss
cwde
repz
mov
dec
add
mov
inc
sbb
test
dec
test
xchg
cmp
cwde
mov
push
xor
adc
imul
nop
enter
dec
mov
es
push
test
mov
dec
xor
jne
aaa
adc
(bad)
mov
scas
and
mov
and
mov
and
inc
imul
push
mov
mov
ds
cmp
jo
mov
inc
mov
bound
test
jns
xor
adc
jbe
jge
inc
sti
out
sub
or
mov
ins
test
push
mov
add
mov
mov
push
jae
xchg
mov
inc
mov
push
mov
or
mov
mov
jge
xchg
mov
mov
pop
test
dec
mov
xchg
sub
adc
in
inc
add
fwait
imul
and
fiadd
pop
push
inc
aaa
push
js
in
xlat
mov
pop
test
sub
xlat
dec
or
and
or
lods
and
push
mov
hlt
inc
dec
or
(bad)
pop
dec
scas
or
sar
(bad)
cmovne
popa
fs
test
fnsetpm(287
movs
sbb
daa
mov
add
data16
mov
push
mov
add
inc
and
hlt
jmp
adc
mov
cmp
push
cmp
xor
movs
add
add
add
cld
call
fucomi
mov
sbb
and
adc
adc
jl
and
fcmovbe
pop
mov
mov
scas
addr16
aad
dec
jle
neg
push
dec
or
retf
inc
popa
inc
test
push
push
stos
movs
and
mov
cmp
mov
sub
cmp
sahf
or
adc
daa
enter
or
out
loope
jbe
inc
mov
cmova
jg
js
outs
mov
in
pop
sbb
cld
jmp
push
imul
jno
xchg
dec
push
out
cmp
sbb
jne
sbb
(bad)
aas
mov
jmp
or
and
xor
and
mov
inc
je
add
leave
sub
dec
lock
adc
xchg
mov
mov
sub
scas
outs
sub
xor
cmps
outs
inc
cs
add
popa
neg
push
push
add
in
mov
mov
add
arpl
inc
add
loopne
clc
(bad)
fild
push
inc
mov
and
arpl
or
push
or
mov
cmp
mov
mov
mov
imul
int3
popa
sub
(bad)
jns
imul
pop
jg
shl
cs
into
or
push
nop
into
repz
add
cwde
push
push
cmp
mov
add
push
jg
cmp
cmp
add
out
add
and
xlat
add
push
repz
aam
xor
adc
cmps
cmp
mov
push
cmps
mov
sub
les
ss
sbb
shr
mov
ret
cmc
scas
or
mov
out
pop
lahf
and
push
loope
inc
jno
sbb
in
cs
scas
jge
in
js
push
cld
es
sub
sub
jl
add
out
mov
sahf
push
xor
and
sub
ret
sub
clc
xor
push
stos
adc
sub
arpl
and
arpl
arpl
adc
(bad)
arpl
xor
movs
push
push
and
popa
test
sub
shr
inc
addr16
or
das
pop
gs
stos
add
mov
das
scas
adc
and
cmps
mov
cwde
cmps
lock
lods
lock
or
adc
int3
sbb
push
mov
push
lods
push
adc
add
ja
push
xor
in
fmulp
push
dec
push
add
daa
loopne
mov
ja
push
ja
sub
inc
add
adc
cdq
inc
sub
sub
push
add
aam
movs
mov
cmc
jp
add
xor
ja
inc
mov
push
dec
mov
arpl
sbb
pop
adc
int3
shl
iret
aad
inc
loopne
fucom
sbb
xor
jne
fcmove
add
sbb
push
jle
cdq
push
add
daa
push
inc
in
lea
(bad)
mov
and
jnp
xchg
mov
or
or
adc
fild
adc
push
sbb
outs
ror
aas
loopne
mov
loope
jo
sub
stos
stc
ja
aam
out
cmps
rcr
adc
or
push
xor
or
sbb
in
push
jo
ret
mov
adc
pop
lock
push
xor
loope
jmp
cld
ret
ret
out
sub
mov
pop
xchg
mov
loope
fadd
jo
xchg
enter
or
int3
cs
mov
ret
inc
xchg
adc
and
ins
mov
ret
test
cli
xchg
loope
nop
sbb
js
jmp
pop
or
ja
popa
xor
mov
out
mov
cmc
cdq
mov
dec
add
cld
lock
movs
sbb
mov
adc
int3
or
and
add
jns
xchg
sub
jbe
loopne
xchg
jl
mov
cmp
sbb
(bad)
push
shl
lds
adc
ret
mov
test
pop
pop
popf
movs
and
nop
cmp
add
mov
pop
cmp
scas
xchg
mov
sub
cmp
int3
xor
pop
cmp
inc
sub
push
cs
iret
fnstsw
sbb
push
add
(bad)
jne
mov
push
out
push
or
femms
inc
test
and
test
and
sub
(bad)
aaa
bound
jmp
cwde
inc
dec
sbb
cmp
ja
cmp
imul
out
cmp
dec
cmp
dec
push
data16
inc
add
push
scas
nop
dec
rcr
mov
ret
pop
sub
xor
xor
add
push
leave
fiadd
inc
pop
fiadd
or
push
mov
addr16
fisttp
jmp
inc
lock
sub
inc
mov
in
add
dec
fimul
adc
or
xor
mov
jnp
jnp
add
jno
and
mov
jnp
push
mov
cmp
and
outs
scas
jge
pop
cmp
das
push
aam
and
adc
adc
jmp
and
xlat
ficomp
cmps
sbb
xor
push
push
push
push
repnz
aam
push
push
inc
xchg
sbb
or
sbb
jns
loope
gs
push
sbb
ds
push
push
cmp
aas
push
bound
jle
xchg
push
push
xchg
cmp
xchg
xchg
push
lods
jmp
(bad)
adc
ins
push
(bad)
mov
fcomp
push
and
adc
push
inc
jne
arpl
nop
and
jo
loop
(bad)
sbb
enter
mov
inc
daa
push
pop
jno
adc
jle
lds
sub
push
mov
int3
out
push
into
inc
call
or
adc
mov
or
cmp
popa
outs
je
adc
je
ins
cmp
idiv
inc
dec
push
or
add
je
mov
cwde
pop
jl
sub
(bad)
iret
sbb
enter
lods
inc
mov
push
ror
ss
in
dec
loopne
add
add
adc
xchg
and
inc
jb
outs
ins
adc
jb
pop
sub
clc
gs
and
fdiv
pop
das
cmp
mov
pop
and
add
pop
(bad)
imul
dec
jbe
(bad)
mov
adc
cmp
ins
dec
push
arpl
sar
shl
xor
icebp
sbb
out
adc
std
jge
js
or
mov
jo
dec
ret
or
gs
adc
cs
mov
push
call
or
dec
ins
jne
cmp
nop
cmps
ds
pop
xor
popa
adc
xor
sbb
cmp
adc
imul
cmp
mov
std
out
pop
jp
mov
push
mov
dec
jg
(bad)
push
xchg
push
push
mov
mov
mov
xor
push
push
xor
std
dec
call
lea
mov
sbb
push
or
sbb
imul
rol
enter
inc
loopne
movs
mov
sbb
pusha
add
xor
xchg
mov
pop
in
xchg
xor
xor
dec
imul
loopne
dec
stos
iret
push
call
mov
mov
std
mov
sar
fstp
or
mov
add
mov
mov
(bad)
(bad)
fistp
dec
xchg
add
dec
jne
mov
test
je
sub
mov
push
movzx
and
dec
mov
(bad)
mov
out
mov
stos
pop
inc
pop
pop
pop
(bad)
dec
push
ja
push
mov
ret
jmp
fdiv
sar
jmp
push
fsub
inc
or
lock
add
sti
push
add
xchg
enter
sar
and
xor
mov
shr
in
dec
pop
push
cld
sub
mov
mov
adc
lock
ret
in
mov
pop
push
xchg
ret
mov
sub
ins
xchg
shl
mov
adc
jne
test
in
mov
es
sbb
add
xor
jne
cmp
mov
les
sub
clc
sub
mov
cld
adc
cdq
int3
cmp
jle
pop
int3
dec
cmp
icebp
outs
push
pop
nop
cmp
add
jle
adc
mov
cmps
cmp
jmp
cwde
lahf
or
jl
jne
sbb
shr
inc
aas
add
xor
inc
and
dec
enter
inc
mov
mov
inc
fwait
retf
cs
push
pop
mov
dec
sub
scas
mov
clc
pop
mov
arpl
pop
pop
mov
pop
ret
neg
rcr
imul
add
pop
mov
fadd
cld
clc
adc
push
or
pushf
hlt
push
or
inc
in
ja
(bad)
cmps
adc
mov
adc
mov
dec
aas
outs
xchg
cmp
fdiv
pusha
cmp
push
nop
call
scas
add
or
or
cmp
push
das
ds
add
out
pop
hlt
test
(bad)
pusha
dec
test
je
xor
dec
mov
push
pop
jl
ja
pop
xor
inc
adc
outs
cs
adc
mov
jmp
lock
add
jnp
cmp
cmc
addr16
sub
inc
jae
mov
fdivr
sub
sub
mov
int
push
mov
mov
cmp
in
lods
or
lods
inc
ss
mov
or
clc
push
dec
rcl
outs
vmptrld
and
mov
inc
mov
lods
std
arpl
fcomp
sar
cmps
call
aas
adc
test
dec
sar
pop
add
mov
(bad)
mov
pop
jae
mov
or
mov
mov
fwait
jmp
cdq
js
test
jmp
dec
bound
push
sub
or
xor
push
push
(bad)
cmp
and
pusha
call
lea
invlpg
adc
add
nop
jb
dec
retf
push
sub
add
nop
out
xor
add
push
ins
add
pop
call
add
inc
or
lock
in
mov
lea
jnp
call
std
jg
add
jge
movs
add
mov
mov
ss
mov
sbb
pop
mov
pop
mov
addr16
or
add
xor
(bad)
dec
xchg
pop
lods
xchg
retf
ret
jne
add
idiv
lahf
add
add
(bad)
enter
and
out
inc
sahf
and
jne
ss
sbb
add
jnp
or
pop
clc
mov
enter
xchg
jbe
lods
cmp
jl
inc
mov
add
inc
imul
mov
jnp
call
and
push
add
dec
push
or
movs
push
shl
call
dec
mov
mov
cli
or
icebp
push
ret
or
inc
ret
xchg
or
inc
adc
aaa
fadd
mov
test
push
js
cmp
retf
je
mov
sahf
shl
div
int3
dec
call
inc
xchg
ficom
inc
jmp
scas
mov
stos
push
cmp
add
loopne
xchg
out
inc
inc
mov
cmp
dec
aam
lahf
cmp
or
popa
aam
mov
subps
aam
jl
mov
jno
jo
xor
jno
mov
or
mov
inc
jae
cdq
nop
test
and
fadd
jne
xor
add
ret
pop
push
mov
(bad)
push
push
push
mov
lods
push
aad
dec
dec
clc
inc
add
inc
icebp
loopne
aas
loopne
je
cs
mov
lock
adc
lock
and
(bad)
stos
sbb
jp
or
xor
(bad)
sahf
add
push
add
movs
push
push
push
test
cwde
dec
mov
add
mov
add
sbb
(bad)
js
inc
pop
adc
xor
test
mov
pop
jmp
outs
mov
sar
jns
adc
hlt
lea
inc
ficomp
fdivp
popa
ror
pusha
leave
push
jae
add
adc
popa
mov
popa
loopne
in
xor
xor
pop
hlt
jg
int3
test
or
push
mov
imul
jmp
int3
pop
add
inc
jmp
retf
pop
inc
icebp
and
in
lahf
nop
pusha
add
jmp
cmp
add
pop
enter
hlt
fsub
test
pop
pop
outs
punpcklbw
cmp
mov
pop
in
jno
ret
lea
call
movs
loop
es
ja
ror
mov
(bad)
sub
(bad)
mov
mov
fistp
rcr
ret
cli
xor
sbb
xor
ror
shl
not
push
and
ficom
xchg
push
cmp
xchg
or
mov
push
pop
cmp
fadd
sbb
cmc
mov
sub
dec
iret
aaa
xor
int3
sub
test
push
ins
pop
sub
inc
cdq
(bad)
outs
in
sub
lock
add
add
add
mov
mov
xor
push
in
pusha
jmp
shl
leave
mov
add
sbb
or
pop
push
scas
rol
ins
fadd
ud2
add
cld
push
push
rol
adc
ret
dec
xchg
sbb
mov
dec
mov
or
or
ret
retf
test
sub
xlat
xchg
sub
enter
out
adc
jbe
out
aas
xor
jno
inc
outs
call
cmps
jo
cld
add
jns
adc
call
mov
and
xchg
add
loop
dec
dec
mov
push
cmps
fwait
and
inc
add
mov
sbb
cli
mov
mov
in
add
pop
pop
fs
adc
movs
js
shl
nop
inc
rcl
fwait
rcr
pop
cli
iret
or
jge
add
cmps
loopne
add
sar
sbb
lods
push
mov
jne
mov
ret
xchg
pop
push
aas
pop
loop
ja
ffreep
fiadd
std
mov
aas
iret
aam
add
push
enter
adc
test
imul
push
imul
push
out
push
push
imul
add
jb
popa
jns
mov
inc
mov
femms
fild
imul
outs
outs
and
scas
cwde
push
inc
jge
popa
bound
xor
jmp
aaa
in
notrack
xchg
call
cli
dec
popf
aaa
sti
push
xor
dec
push
and
pusha
add
sub
cs
imul
jo
lahf
or
sub
sub
jae
xor
add
pop
sbb
fild
fs
addps
jg
int
cmp
or
add
lock
push
add
or
push
push
mov
cmc
push
lods
dec
jmp
add
popf
out
jmp
(bad)
lds
dec
outs
out
shl
js
gs
int
pop
mov
fidiv
int3
adc
push
data16
adc
inc
mov
xchg
loopne
test
sub
or
sbb
pop
or
bound
adc
add
add
pop
rcr
or
popa
inc
jg
pop
inc
jbe
outs
je
or
push
in
xor
push
pop
mov
dec
and
and
push
or
addr16
iret
xor
cmp
shl
add
outs
daa
xor
popa
out
sbb
(bad)
jp
int3
xor
sub
xor
dec
gs
mov
movs
cmovbe
jae
bound
add
loopne
addr16
dec
push
sbb
add
mov
add
adc
mov
addr16
pop
dec
inc
inc
push
push
jns
gs
ins
scas
jbe
movs
cmp
jmp
shl
fld
sbb
mov
add
ret
jns
or
xor
fld
add
pop
push
add
(bad)
daa
scas
das
fisttp
mov
lods
jmp
cdq
mov
add
pop
push
movzx
fisttp
add
adc
mov
push
rcr
push
inc
xor
xor
mov
pop
jo
cmp
xor
jb
mov
mov
daa
or
outs
jns
xor
add
or
xor
ret
push
fbstp
add
loopne
push
pusha
lea
sbb
(bad)
or
inc
jbe
iret
xchg
fmul
jecxz
leave
mov
inc
dec
xchg
mov
dec
or
xchg
fcmovne
cmp
cld
add
add
xor
int
inc
push
loope
push
movs
outs
pop
push
push
pop
add
ja
loopne
sbb
or
mov
push
inc
addr16
scas
stos
cmp
push
shl
add
pop
test
call
or
test
mov
fidivr
dec
ss
push
jl
adc
cmp
cmp
dec
and
ds
fnstcw
clc
test
xlat
jl
dec
enter
fs
jle
out
xor
adc
outs
movs
jle
sub
test
repz
imul
lock
or
pusha
mov
aam
sub
cs
fisubr
mov
push
inc
not
add
push
push
fdivr
in
fistp
mov
dec
add
mov
mov
add
mov
mov
popf
ror
or
scas
js
mov
xor
mov
xchg
jbe
or
add
or
inc
mov
dec
or
add
and
bound
adc
mov
cmp
fsub
test
sbb
inc
icebp
or
cs
jo
mov
in
or
es
pop
movs
in
push
add
inc
or
add
daa
cwde
js
xor
and
adc
pusha
mov
stos
sub
jo
cld
add
xor
inc
dec
ja
gs
mov
adc
inc
rcl
inc
loopne
inc
cmps
mov
lds
sti
adc
push
popa
add
or
add
clc
dec
dec
ins
movzx
mov
stos
retf
pop
add
pop
ins
idiv
push
add
cmp
fs
leave
jl
add
in
add
in
lods
push
punpcklbw
adc
ins
repnz
cmp
das
cmp
mov
cwde
in
loope
nop
jecxz
fld
cs
es
mov
add
js
or
or
outs
push
pop
add
dec
(bad)
mov
push
es
add
shl
jo
jb
outs
(bad)
sbb
adc
gs
imul
jp
sbb
shr
jecxz
jnp
je
call
imul
out
dec
add
into
push
dec
cmp
and
add
mov
sub
sbb
push
inc
test
add
outs
mov
dec
hlt
push
add
dec
adc
ret
leave
mov
pop
int
add
inc
(bad)
mov
jb
cmp
jns
cmp
scas
inc
xor
or
mov
adc
test
pusha
mov
lea
push
adc
push
loope
push
or
(bad)
jnp
enter
inc
in
xor
bound
add
ror
mov
sbb
or
or
push
faddp
push
inc
ror
inc
or
ret
add
and
jecxz
push
or
pop
sub
add
cmps
add
jae
or
inc
aam
adc
sbb
push
fsub
loop
jle
or
push
lods
rcr
mov
fiadd
dec
push
cwde
ss
outs
jne
repz
pusha
bound
pop
aas
or
ud0
inc
cmps
cmp
adc
addr16
in
imul
es
das
mov
sbb
pushf
les
iret
repz
fld
cld
fstp
js
iret
repz
nop
pop
rol
mov
test
call
mov
ja
inc
xchg
adc
popaw
jne
je
outs
jb
pusha
das
aam
call
ds
or
(bad)
mov
adc
std
mov
adc
mov
rol
pop
push
inc
rcl
sar
test
mov
arpl
or
push
daa
mov
pop
pushw
jl
pmuludq
xchg
iret
push
mov
pushf
pushf
jl
pop
call
inc
cdq
movs
fimul
add
loop
cmp
or
and
lahf
inc
popa
or
rol
mov
ins
xchg
daa
movd
and
add
xchg
pusha
and
push
or
pop
rol
pushf
jae
or
inc
xor
dec
adc
mov
mov
arpl
jnp
pusha
fld
xor
sbb
rol
mov
fs
pop
and
or
cmp
jb
push
cwde
test
sbb
adc
into
js
dec
popa
push
and
push
xchg
mov
mov
into
mov
pushf
and
xor
inc
adc
mov
xor
xchg
or
inc
ins
mov
lea
xchg
sbb
sbb
jns
push
int3
jne
or
xchg
int
lods
jne
or
sub
in
dec
(bad)
inc
or
std
add
jo
adc
inc
and
or
or
repnz
sar
adc
pop
out
pop
and
jo
jae
add
add
fnstenv
lods
(bad)
int
mov
pop
outs
adc
sub
(bad)
xor
pop
dec
int3
add
outs
arpl
mov
test
inc
push
push
outs
(bad)
dec
add
sar
sub
xchg
xchg
mov
dec
dec
cmp
jo
(bad)
or
and
adc
inc
jge
dec
outs
dec
mov
int
(bad)
xor
jmp
out
or
cmp
or
out
adc
dec
sbb
or
or
retf
mov
sbb
xor
rcl
imul
push
je
add
rcr
loop
es
pop
or
xor
add
xchg
ret
add
sub
cli
adc
fdiv
xor
sti
jae
imul
or
das
mov
test
enter
ja
ret
push
repnz
push
xor
scas
lds
imul
pop
adc
fdiv
pop
daa
loope
push
sbb
dec
or
and
mov
push
leave
bound
das
pop
pop
xchg
(bad)
mov
sub
ret
gs
in
popa
cmp
jge
adc
(bad)
pop
dec
vmmcall
sbb
add
cmp
xchg
inc
mov
(bad)
imul
enter
fs
inc
xchg
mov
ficomp
or
pop
jg
push
(bad)
sub
mov
lds
shl
dec
cmp
xor
fstp
gs
push
pop
pop
push
xchg
pop
sub
jno
arpl
mov
inc
bound
data16
add
mov
xlat
fcmovnbe
lods
xchg
mov
or
dec
bnd
shl
ins
pop
jl
or
ficomp
pusha
ins
lods
cmp
ins
add
lock
int3
fstp
and
sbb
cld
xchg
add
push
daa
and
add
push
rcr
push
add
ret
rol
inc
shr
inc
enter
ss
cmps
or
ret
add
data16
sub
iret
inc
je
adc
rol
mov
push
xlat
cmps
xor
push
xchg
daa
cmps
add
add
rol
adc
dec
xor
jo
inc
addr16
cmps
xor
xor
add
push
(bad)
ins
add
pushf
ja
lds
sub
cmps
in
sahf
xchg
in
scas
push
jge
pusha
sti
push
clc
out
push
test
inc
push
js
add
pop
push
jmp
inc
data16
or
mov
fcmovnu
or
ret
jne
inc
push
dec
push
outs
arpl
repnz
jae
add
adc
xchg
xor
pop
inc
retf
js
pop
pop
ja
fbstp
mov
mov
push
mov
outs
popa
ins
imul
loopne
xor
add
inc
or
call
add
shl
icebp
cmp
mov
dec
mov
cmp
adc
jae
or
mov
xor
lods
xchg
test
or
mov
cs
push
cmp
aad
mov
xchg
js
dec
retf
inc
push
lock
in
add
pop
pop
int3
push
daa
dec
or
jae
adc
cs
jnp
jbe
adc
push
jl
jns
cwde
lods
jne
cmp
and
sub
sbb
adc
test
pop
gs
dec
imul
xchg
mov
add
ins
outs
or
pop
push
ror
sub
pop
push
mov
inc
and
pushf
inc
or
adc
sbb
mov
lds
out
jnp
adc
add
scas
add
ret
jae
lods
push
xor
pop
mov
ins
fld
movs
adc
dec
sbb
add
sahf
neg
push
aam
push
fistp
loopne
sbb
adc
pusha
push
fs
jge
jbe
xchg
es
fidivr
les
jl
in
lahf
adc
inc
xor
iret
repz
shl
mov
dec
out
and
dec
inc
add
add
jp
scas
mov
jae
cmp
push
fisubr
arpl
pop
add
sub
and
in
jne
lds
sbb
mov
movs
pop
and
xchg
(bad)
dec
inc
dec
or
ret
mov
loopne
push
dec
push
xor
ret
mov
and
pop
dec
jae
in
xor
pusha
cmp
add
pop
cmp
and
xor
add
ret
xor
pop
sbb
pusha
xor
bswap
mov
jmp
clc
push
rol
adc
sub
test
add
nop
jne
sbb
scas
loopne
push
divps
push
mov
std
pop
add
push
mov
and
scas
cmp
(bad)
ja
loopne
jne
and
or
(bad)
push
sub
and
sub
xor
lds
jge
and
(bad)
mov
test
inc
inc
jns
cmp
jmp
jns
pop
xor
mov
xor
test
call
pop
loop
adc
mov
cmp
gs
sbb
dec
imul
retf
mov
xor
cwde
adc
fisttp
cmp
inc
aaa
adc
call
push
push
fsub
mov
(bad)
ins
jo
mov
scas
push
adc
aad
mov
mov
je
daa
adc
cmp
add
push
jns
add
xchg
daa
rol
dec
pusha
js
pop
pop
in
pop
jno
iret
cmp
mov
or
fwait
or
xor
xor
call
adc
cmps
mov
add
bound
push
pop
inc
sub
inc
arpl
add
xchg
xlat
and
mov
cmp
daa
or
mov
fisub
ror
mov
fild
push
sbb
jnp
and
sub
adc
ret
inc
and
mov
add
imul
add
dec
lea
imul
dec
or
or
sub
lahf
cmp
push
and
jae
rcl
cli
cld
inc
inc
(bad)
pop
test
(bad)
push
pop
inc
test
pop
xor
inc
mov
pusha
(bad)
mul
pop
cmps
add
push
mov
mov
mov
mov
xchg
xor
inc
pop
mov
sbb
xchg
mov
jns
mov
jo
cmp
pop
imul
or
enter
sub
ret
and
add
push
lds
xchg
dec
push
test
pop
cmp
push
(bad)
jge
in
mov
dec
cmps
add
mov
arpl
mov
pcmpeqd
lock
sbb
adc
inc
push
jne
(bad)
int
sbb
popa
(bad)
jge
add
dec
aam
gs
adc
jo
scas
je
out
shl
inc
or
push
mov
out
dec
fisubr
popa
xor
push
mov
jge
add
mov
jge
outs
ja
push
lock
add
xor
pop
jo
inc
imul
cmp
data16
popf
cmp
popf
dec
ins
xchg
dec
fs
imul
inc
push
or
and
adc
ds
outs
inc
xchg
iret
adc
adc
mov
aad
jo
call
nop
xor
lahf
and
dec
sub
dec
xor
sbb
ins
outs
addr16
jne
iret
xor
ja
or
dec
cmp
push
xchg
inc
jo
dec
push
(bad)
mov
icebp
ret
push
sbb
or
jp
mov
jmp
cmp
jl
jne
pop
inc
es
fcmovne
lea
leave
pop
out
pop
shl
pusha
test
mov
push
add
outs
add
or
xor
mov
cmp
jb
xor
retf
cli
and
or
lea
or
push
rcl
ss
inc
adc
mov
pop
pop
pusha
or
sbb
pop
push
nop
stos
popf
xchg
pop
sbb
scas
imul
shl
sub
in
out
jmp
push
push
add
icebp
jns
popf
add
dec
lock
or
inc
ins
cmp
pop
test
inc
pop
adc
inc
push
push
xor
int
mov
in
pop
sbb
stos
addr16
retf
int
(bad)
gs
or
sub
or
mov
pop
push
and
into
mov
das
or
inc
pop
fsub
push
jmp
and
xor
neg
push
ja
ret
push
fs
pop
ss
hlt
mov
or
mov
test
je
mov
les
mov
out
push
je
inc
jle
push
and
dec
sbb
cmc
pop
ds
push
add
(bad)
cdq
add
scas
cmc
or
dec
pop
push
add
and
enter
popf
mov
push
leave
xchg
pop
or
fcom
mov
arpl
outs
jne
ret
loop
ja
and
inc
outs
pop
jne
cmp
inc
inc
(bad)
inc
cmps
add
sar
dec
xlat
mov
mov
loope
xchg
push
or
cmp
dec
add
repnz
add
add
sub
sbb
sbb
adc
dec
cvtps2pd
nop
pop
fsub
adc
xor
sbb
cmp
mov
or
jo
je
ds
pop
or
or
sub
push
shl
repnz
imul
push
pop
ror
pop
cld
cmp
das
dec
sub
or
push
add
add
in
(bad)
aad
adc
repz
scas
loopne
mov
mov
adc
les
mov
xchg
seto
dec
mov
and
or
jge
stc
mov
jb
xchg
sbb
jle
leave
lock
shl
adc
xor
rcl
and
or
jae
data16
cmp
test
add
xchg
add
adc
add
or
dec
mov
dec
xchg
bound
lods
push
sub
jmp
jae
sub
loope
inc
test
push
add
or
(bad)
or
mov
xlat
dec
jae
sti
in
xor
push
sbb
es
mov
icebp
mov
js
mov
dec
mov
and
and
add
and
cmp
push
cmp
and
add
cmove
shl
mov
push
lock
cld
push
enter
mov
in
push
ins
push
je
idiv
repz
or
sbb
xor
data16
push
add
push
lds
rol
rcl
xor
push
fld
inc
mov
leave
add
cmp
pop
mov
push
jns
js
scas
jp
jb
lidtd
sahf
ss
punpckhbw
loopne
add
imul
add
lahf
add
pop
add
add
sub
or
sub
adc
repz
test
add
add
or
add
pop
mov
lds
dec
mov
push
pop
rol
mov
mov
mov
mov
pop
scas
pop
in
inc
add
sar
gs
sub
add
ret
not
or
xchg
push
shr
jno
push
and
add
cmp
mov
pop
cmp
mov
push
pop
inc
push
int3
movs
in
push
or
fisub
test
mov
mov
das
and
mov
xchg
pop
xor
mov
test
pop
jo
push
movs
fiadd
fimul
out
add
scas
sar
test
cmp
inc
test
ficom
pop
enter
mov
dec
push
fldenv
lea
ins
sub
mov
adc
fcomp
leave
addr16
mov
or
push
fild
push
push
push
jb
xchg
add
pop
push
ja
add
sbb
sysret
aad
adc
add
pushf
mov
je
or
sub
mov
mov
xor
adc
pop
push
lock
adc
push
hlt
inc
lea
dec
add
int
cmps
aam
loopne
xor
inc
xor
js
mov
fmul
or
mov
add
scas
js
fdivr
pop
add
and
jo
dec
pop
inc
jns
or
pop
test
not
iret
ins
xchg
or
rol
imul
loopne
add
outs
mov
mov
verw
pmaxsw
sub
push
push
push
adc
pop
sahf
cmp
call
not
and
int3
xor
add
pop
sbb
fcmovbe
lea
inc
jae
xor
add
loopne
dec
stos
addr16
jns
lock
bound
fld
popa
and
sub
cmp
cmp
cmps
lods
xor
dec
mov
pop
add
add
push
retf
xchg
int
popa
rcl
add
nop
test
and
push
data16
sbb
lock
adc
sbb
fisubr
mov
and
shl
and
pop
or
dec
es
and
popa
pop
add
in
popa
bound
xchg
iret
add
pop
adc
xor
rol
lods
adc
jo
dec
(bad)
stc
push
inc
push
lods
push
mov
enter
pop
push
mov
push
adc
push
mov
push
mov
push
iret
repz
jo
test
mov
repz
cmp
inc
inc
xchg
into
repz
pop
das
xchg
or
sbb
aad
inc
sahf
popa
jo
lea
push
and
jne
inc
xor
daa
inc
jmp
sub
push
jne
scas
and
outs
ret
mov
or
pop
push
loopne
imul
lods
push
dec
arpl
cdq
mov
dec
sub
adc
ins
fs
cmp
daa
(bad)
push
jp
add
or
and
mov
inc
imul
dec
and
inc
lock
mov
xchg
pusha
dec
outs
cld
test
in
or
or
(bad)
scas
add
mov
dec
faddp
lods
out
nop
je
adc
test
push
pop
cmp
test
cmp
es
jae
jae
pusha
mov
mov
push
fadd
sub
dec
shl
pop
push
outs
or
adc
lds
jb
arpl
dec
xor
or
push
test
cmp
inc
cmp
push
jnp
pop
cmps
or
adc
outs
jbe
imul
push
jg
inc
js
xor
or
mov
push
es
push
adc
mov
fsub
xchg
mov
lahf
ret
and
in
xchg
sub
and
and
mov
and
xchg
and
and
fwait
les
sub
dec
push
xor
xchg
add
call
mov
or
jae
xor
push
inc
add
xchg
xlat
aas
inc
pop
outs
push
imul
push
cmp
pop
icebp
push
lods
push
iret
cmps
cmps
push
and
leave
xor
or
and
add
jmp
xlat
rcl
add
inc
push
dec
ins
movs
pop
dec
push
mov
pop
sub
and
es
inc
adc
add
pop
lods
hlt
dec
in
pop
popa
fs
or
ins
cmp
add
cmps
add
inc
xor
or
sbb
(bad)
loopne
dec
sub
je
retf
push
inc
sbb
mov
shl
cmps
pop
test
sbb
pusha
fild
pop
sub
adc
jmp
(bad)
sbb
xor
or
xchg
adc
or
fwait
cdq
loope
dec
in
pop
sbb
sti
mov
mov
int3
push
fsubr
fimul
xor
push
aaa
imul
ss
mov
sbb
fnstsw
cmp
(bad)
je
and
mov
in
in
or
mov
shr
adc
mov
add
sbb
add
inc
or
xlat
adc
sbb
inc
xor
xchg
gs
dec
jns
add
psubd
dec
xor
loopne
mov
and
imul
sub
pop
imul
sbb
jmp
js
shl
jno
push
or
pop
push
lea
add
loopne
mov
jmp
push
outs
jne
push
daa
or
sbb
add
imul
jae
outs
std
mov
pushf
mov
mov
xor
mov
fstp
jo
mov
add
adc
sbb
pushf
jp
fs
push
imul
xor
cmp
ja
inc
aas
cli
or
fcomp
pop
test
jbe
(bad)
adc
in
add
jne
sub
push
mov
stc
sub
jg
out
rcl
cwde
push
fdivp
sbb
or
nop
es
repz
pushf
aam
mov
lea
lds
inc
adc
ror
cmps
pop
mov
mov
and
or
clc
push
push
dec
aaa
push
fwait
mov
mov
push
popa
mov
jp
mov
push
retf
push
repnz
add
or
sysret
add
sub
lahf
wbinvd
add
test
jbe
or
sub
call
mov
mov
in
scas
aam
add
and
scas
push
es
xor
push
in
pop
ror
sbb
dec
xchg
xchg
or
fisttp
dec
sub
and
pop
call
sbb
aas
or
fnsave
shr
test
sbb
or
arpl
lahf
or
push
(bad)
cmovns
sub
movs
mov
and
inc
sub
rsqrtps
jbe
movs
fisubr
and
movs
add
pop
ror
jge
das
and
rol
test
xor
xor
mov
adc
pop
or
jmp
cmp
loope
mov
mov
inc
(bad)
adc
test
push
xchg
test
inc
cli
adc
pusha
test
xor
push
pop
jg
mov
js
xchg
push
cs
sbb
fnsave
and
call
add
(bad)
aaa
out
aam
sub
push
adc
jbe
ins
cmp
push
jno
iret
mov
adc
mov
xor
inc
pop
xor
mov
outs
push
adc
push
sub
test
push
sub
add
iret
jnp
shl
cmp
push
fcomp
mov
ficom
push
lock
push
hlt
push
pop
inc
cmp
pusha
push
js
out
mov
mov
adc
lock
jnp
jnp
sub
xchg
push
enter
inc
lods
mov
mov
push
push
nop
push
je
inc
pusha
inc
cmp
cmp
jbe
add
jnp
inc
adc
aas
loopne
iret
jae
push
push
or
fs
inc
add
ss
or
pushf
call
outs
stos
pop
sbb
xchg
cmp
fiadd
add
jecxz
dec
jae
shl
ins
push
imul
add
cmp
jge
push
call
ror
in
nop
and
daa
mov
dec
sbb
jne
and
inc
push
lock
cmps
nop
clc
or
aas
mov
push
and
and
mov
(bad)
add
and
inc
cmps
(bad)
push
(bad)
cwde
pmulhw
out
sub
test
sub
pop
retf
xchg
mov
sub
int
add
mov
add
test
xchg
fdiv
add
xor
stos
rdpmc
add
xor
jnp
add
ss
jg
retf
pop
stos
getsec
add
test
cmp
ret
jb
sbb
cmp
aas
sbb
add
add
adc
ficomp
inc
pop
mov
mov
add
sub
jno
push
xor
js
and
xlat
xor
pop
das
std
cli
xor
mov
or
add
int3
rol
stos
push
cmp
inc
cmp
sub
test
lock
jg
mov
add
mov
jb
mov
and
outs
jae
push
imul
pop
fdivr
pop
inc
push
xchg
pop
and
outs
scas
mov
adc
mov
push
jl
inc
outs
outs
jo
imul
(bad)
push
mov
pop
add
or
imul
jno
cmc
jb
mov
or
fdivr
mov
push
dec
(bad)
cmp
xor
jne
jne
add
inc
fcmove
ror
int3
outs
into
add
cmp
xor
dec
bound
sbb
dec
ss
inc
cmps
cmp
stos
inc
inc
pop
push
ja
test
outs
jne
inc
call
add
add
repz
sti
add
test
add
data16
add
or
inc
jne
and
retf
add
aas
adc
pop
dec
mov
push
dec
gs
je
fisttp
push
inc
movhlps
test
popa
mov
jo
sbb
dec
int
sub
or
arpl
hlt
ins
(bad)
js
sbb
sub
jb
loopne
jmp
repnz
inc
sbb
push
sub
inc
sbb
sbb
dec
ss
fcomp
ins
push
inc
jae
or
dec
ja
xchg
ins
add
rol
cmp
les
test
sbb
shr
shr
jo
dec
cmp
out
adc
mov
test
sti
inc
js
push
add
adc
das
sbb
xor
add
(bad)
ins
bound
imul
ror
cs
in
mov
add
pop
ret
cmp
pop
inc
lods
pop
or
add
inc
dec
xor
add
push
or
popaw
jne
fild
fist
les
add
add
pop
add
lds
cs
add
jnp
loopne
shr
or
sub
push
pop
jge
adc
sub
pop
pop
push
sub
sahf
sbb
jnp
mov
(bad)
rol
mov
add
sbb
adc
or
push
inc
outs
inc
icebp
fidiv
and
imul
push
dec
clc
ja
cwde
jbe
xor
mov
inc
pop
adc
imul
xor
dec
pop
dec
mov
adc
lods
addr16
leave
or
enter
push
jbe
mov
fdivr
and
enter
iret
push
daa
(bad)
enter
or
sbb
pop
inc
xor
jp
lds
inc
push
inc
jae
pop
cmp
movs
inc
popa
mov
fmul
xor
dec
jle
pop
xor
sbb
das
ror
call
push
adc
pop
mov
inc
retf
push
lods
(bad)
fbld
inc
push
inc
in
add
adc
mov
and
mov
adc
loope
cmc
or
cmp
cmp
sbb
jge
pusha
add
dec
mov
popa
test
lods
adc
dec
js
call
or
iret
push
push
pop
movs
neg
les
sbb
inc
inc
dec
mov
sbb
aas
(bad)
aam
ror
push
inc
rol
jmp
aad
fsubr
stos
push
mov
xchg
jne
push
fiadd
mov
add
lock
fiadd
dec
push
push
hlt
xor
mov
jl
rcl
pusha
push
les
cmp
xchg
ins
sbb
dec
fadd
mov
in
neg
lods
fcomp
add
aam
out
lock
push
adc
push
movs
iret
repz
mov
push
test
mov
push
dec
push
ins
test
pushf
sub
dec
mov
push
test
xor
ins
push
aam
in
push
fnstcw
push
jl
add
jge
add
outs
sub
sbb
push
dec
sub
imul
fisttp
dec
or
mov
pop
add
pop
add
add
iret
lock
xlat
les
pop
sub
fdiv
punpcklwd
shl
daa
mov
add
pop
in
data16
mov
add
add
imul
mov
pop
cmc
mov
dec
mov
xchg
pop
dec
outs
add
jo
sbb
loope
clc
imul
sbb
and
or
lea
pop
inc
jp
and
outs
or
stos
nop
imul
pop
dec
cmp
add
dec
mov
cmp
and
push
add
add
xor
xchg
div
add
mov
fwait
mov
and
sbb
and
mov
pop
xchg
out
or
dec
mov
cmp
mov
inc
and
sbb
sub
mul
out
fadd
push
imul
shr
pushf
adc
inc
shl
mov
xor
ja
mov
cmp
jbe
or
stos
mov
retf
push
arpl
(bad)
std
ins
std
shl
xchg
sbb
out
dec
rcl
rcl
sbb
loope
xor
int
std
dec
ins
rcr
or
fsubr
ins
sbb
ins
lds
ins
xchg
fcomp
outs
mov
mov
sbb
or
xor
pop
add
outs
or
xor
sub
xchg
pusha
mov
xlat
add
mov
push
(bad)
jb
sub
je
arpl
add
jns
xchg
push
mov
lahf
sti
jne
fisub
jns
jmp
push
pop
xor
cmp
inc
add
ins
adc
xchg
retf
or
add
lods
mov
jg
rcr
dec
cmp
mov
aas
stc
adc
mov
xchg
or
and
cs
les
(bad)
add
dec
or
lds
or
rol
adc
mov
and
int3
scas
inc
xchg
mov
int
cmps
xchg
inc
call
das
and
ins
rcl
sub
scas
adc
or
out
xchg
sbb
jo
mov
cs
inc
cli
sbb
inc
inc
inc
and
inc
or
inc
inc
inc
mov
rcl
mov
xchg
mov
mov
inc
test
or
dec
adc
mov
adc
mov
sbb
mov
inc
dec
sbb
inc
or
dec
and
push
inc
dec
sbb
xor
sub
dec
xor
inc
mov
inc
cmp
xor
cmp
adc
adc
sbb
sub
inc
dec
mov
sbb
inc
adc
xchg
add
movs
rcl
push
movs
shl
mov
dec
dec
out
inc
jne
scas
push
xchg
add
jns
push
ficom
rcl
sbb
xor
pop
inc
add
pop
test
mov
outs
mov
pop
pop
movd
inc
repnz
lods
xor
pushf
les
mov
mov
jl
pop
and
lods
jae
or
js
jno
mov
pop
jmp
int3
(bad)
push
outs
and
or
jns
sub
add
dec
add
pop
mov
or
pop
ds
mov
ret
push
pop
retf
push
ss
jbe
push
push
add
and
and
inc
ja
js
imul
out
push
mov
push
push
xchg
mov
(bad)
out
outs
lock
or
ss
xchg
and
xchg
int3
push
xchg
push
fs
xchg
clc
loope
ins
xor
xchg
xchg
pop
jle
in
popa
lea
pusha
push
push
cwde
push
mov
mov
push
nop
es
pop
push
call
arpl
in
xchg
mov
outs
js
push
adc
in
mov
xor
add
shl
call
(bad)
aas
stc
push
inc
dec
jbe
jb
ins
outs
ja
xlat
pop
cmps
xchg
mov
cmp
loope
sbb
lds
pop
add
mov
mov
mov
add
cvtps2pd
(bad)
clts
add
jl
imul
wbinvd
add
and
pop
pop
(bad)
prefetch
mov
mov
add
add
cmovae
repnz
dec
cmove
jne
add
jb
jno
jb
cmovs
pop
dec
add
dec
adc
dec
xor
setg
adc
mov
dec
mov
push
mov
jmp
and
in
sbb
pop
aaa
jne
sub
push
fsubr
jb
adc
dec
or
cmp
add
cmp
or
retf
leave
cdq
mov
xchg
retf
sub
push
ret
or
cmps
mov
jecxz
jecxz
xor
out
mov
stos
sub
fcmovu
lock
push
popa
push
sub
xchg
jo
daa
mov
pop
sbb
aaa
rol
xor
gs
mov
test
push
push
sbb
ins
push
shl
push
dec
sbb
pusha
sbb
cmp
lods
jne
pusha
push
inc
es
mov
pusha
mov
scas
push
or
loopne
xor
std
xchg
pop
adc
sbb
inc
and
ds
mov
enter
add
adc
push
cmp
dec
daa
push
xor
scas
adc
scas
cmp
aaa
push
jecxz
imul
cmp
mov
jne
pop
inc
adc
fmul
push
push
sub
or
mov
pop
add
push
outs
retf
loop
or
jae
mov
xchg
jae
aam
and
arpl
fsub
ja
push
jno
mov
lea
jnp
mov
dec
jg
retf
push
pushf
adc
leave
push
xchg
les
xor
lds
pop
pushf
retf
jae
or
cmps
xchg
mul
stc
add
and
add
mov
(bad)
sub
(bad)
add
add
outs
xor
sub
add
jns
mov
xchg
jmp
ins
jmp
and
adc
rcr
pop
mov
xor
add
mov
mov
ins
cmp
rcr
mov
aas
into
push
add
xchg
daa
push
sbb
lahf
dec
jo
cmp
jno
push
mov
(bad)
push
sbb
daa
mov
push
(bad)
scas
mov
xor
or
mov
or
jbe
shl
nop
ffreep
sbb
push
es
push
(bad)
sbb
add
cmc
sbb
es
add
popa
add
dec
add
jp
or
jg
push
add
add
iret
cs
push
pop
inc
(bad)
add
pushf
js
iret
mov
pop
ror
nop
or
inc
movmskps
pop
sub
add
push
cmp
mov
xor
xchg
jge
retf
ja
(bad)
lock
imul
pop
pop
bound
jo
pop
pop
test
icebp
xor
es
push
(bad)
cs
ret
daa
adc
sbb
lds
adc
push
add
inc
mov
daa
or
sbb
(bad)
jae
cmp
xchg
(bad)
sub
lods
sub
fisttp
add
inc
mov
jge
mov
adc
push
fwait
adc
js
cmp
add
mov
add
ins
push
shr
sub
ins
imul
call
imul
pop
fsub
jl
adc
add
push
lods
shl
fistp
test
(bad)
mov
push
pop
add
iret
xadd
jae
jb
push
add
pop
xor
and
scas
pop
jne
cmp
inc
mov
add
aas
sub
push
call
aad
add
das
mov
inc
das
lods
jae
or
mov
je
jns
push
ds
mov
fdivr
sub
adc
inc
aas
adc
aas
xlat
push
je
aas
loopne
add
push
and
into
repz
xlat
mov
push
jo
mov
mov
cmp
sub
cmps
add
or
add
pop
or
imul
inc
xchg
add
inc
ja
psubw
je
sbb
xlat
minps
(bad)
add
je
(bad)
ss
add
shl
addr16
fadd
test
add
cld
imul
mov
or
mov
in
cmovae
daa
fldenv
shl
jbe
inc
out
(bad)
stos
cld
repnz
add
inc
add
fimul
cmovns
pop
(bad)
adc
jge
(bad)
(bad)
add
cmps
add
push
xchg
dec
inc
xchg
(bad)
test
jmp
aad
pop
pop
or
pop
push
push
js
sub
push
pop
xor
inc
std
(bad)
std
push
push
mov
mov
sub
pop
pop
xchg
std
push
sub
std
sti
mov
std
push
pop
adc
std
push
add
std
inc
mov
rcr
ins
push
sar
or
mov
retf
pop
cmp
lds
add
jno
xchg
xlat
sub
arpl
xor
aad
or
jae
add
adc
adc
jno
and
inc
and
adc
aad
pop
mov
xor
stc
ins
jle
inc
test
ss
or
jne
fs
and
adc
ror
sbb
dec
sahf
pop
fstp
inc
adc
stos
mov
mov
push
cdq
add
fidiv
fdivr
mov
shl
mov
loopne
cs
push
das
dec
fadd
pop
scas
outs
pushf
ja
mov
loopne
sbb
mov
das
mov
es
fisttp
sub
das
pop
aas
rcr
cmp
cs
jecxz
push
mov
jno
mov
nop
bound
repnz
call
(bad)
neg
cmp
fisttp
adc
pop
push
ror
xchg
inc
cmps
scas
add
cmovg
test
fisttp
jb
jg
call
or
sbb
dec
daa
jns
mov
and
cmp
addr16
int3
out
aad
ins
rol
xchg
dec
dec
sbb
or
sub
xchg
pushf
add
or
pop
mov
cmc
imul
ins
inc
test
cmp
lds
pop
test
enter
mov
jae
je
and
cmp
sbb
mov
xchg
sahf
xor
imul
sub
or
test
imul
scas
je
add
sbb
lahf
fsub
mov
loope
add
jecxz
dec
jmp
and
pop
mov
add
xlat
jmp
(bad)
fucomp
jmp
test
xor
adc
push
or
and
push
push
cld
add
mov
push
cmp
fadd
dec
inc
mov
ja
mov
lock
and
pop
aam
push
cmp
cs
add
cmp
cmps
jp
rol
jns
fidivr
nop
jnp
push
and
aam
inc
or
not
push
inc
dec
dec
push
push
inc
movs
(bad)
xchg
outs
or
adc
lods
dec
aas
sub
xlat
and
inc
push
imul
sub
rcr
test
jmp
sbb
push
jl
sub
out
ins
(bad)
add
adc
jmp
mov
adc
or
xchg
or
mov
or
out
(bad)
mov
fidivr
mov
inc
jo
repnz
dec
cmove
sub
inc
add
jmp
in
pop
cmova
aad
xchg
jmp
retf
xchg
aas
cmovnp
or
scas
jge
dec
mov
cmovg
loope
mov
jb
(bad)
mov
aam
rcl
daa
ja
or
loope
push
sahf
cmps
add
add
dec
cld
sbb
pop
shl
retf
ja
sbb
ins
pop
ja
pop
lods
add
aas
jecxz
pop
dec
mov
sub
imul
or
sub
jmp
add
imul
ins
push
call
push
imul
adc
rcl
sub
push
arpl
add
sub
push
imul
dec
xor
imul
imul
(bad)
and
dec
sub
add
sub
mov
mov
adc
pop
or
and
nop
fadd
push
mov
sub
cmp
xor
inc
xchg
jno
push
xchg
push
sbb
les
adc
adc
push
xchg
jae
pop
inc
xchg
xchg
jp
dec
sub
xchg
jno
add
popa
adc
mov
xchg
les
inc
sbb
jno
add
enter
ret
jae
xor
ins
inc
and
mov
push
dec
push
imul
out
int
add
les
mov
push
lods
xor
xchg
fsubr
add
dec
lods
mov
popf
dec
lods
sub
ins
rcl
xchg
lods
test
dec
or
loopne
jae
sub
and
test
inc
and
xchg
fbstp
call
(bad)
imul
in
push
rol
xor
shl
das
adc
xchg
out
jo
dec
cld
push
push
shl
fdivp
sahf
(bad)
push
rol
xor
or
test
out
stos
or
push
jg
pop
pop
xchg
push
xor
dec
fs
mov
mov
push
repnz
fmul
(bad)
sbb
cld
jnp
jnp
push
nop
cs
cwde
push
mov
push
or
push
add
call
les
test
and
jbe
rcl
ds
mov
sbb
inc
(bad)
in
pop
dec
pop
add
arpl
out
syscall
add
xchg
aas
ret
push
mov
lods
enter
hlt
bswap
hlt
wbinvd
add
lock
in
mov
xchg
repnz
adc
inc
or
call
pusha
cmovae
in
sub
cmovns
xor
dec
add
dec
add
dec
add
ror
xchg
inc
or
(bad)
cmpxchg
js
jecxz
test
loope
scas
mov
loope
call
das
dec
sbb
inc
mov
pop
push
adc
sbb
jnp
adc
sub
push
loop
bound
add
sbb
cmps
xor
push
mov
push
sub
ret
bts
xchg
mov
jmp
cwde
loope
sbb
daa
sbb
add
xlat
dec
js
xchg
xlat
sbb
bound
push
xor
adc
push
mov
adc
ins
inc
mov
lock
les
test
or
push
sbb
adc
cmp
cmp
xor
adc
jno
sbb
or
fs
inc
bound
jae
adc
fdiv
dec
xor
xchg
fdiv
bound
inc
sub
dec
jae
shr
test
or
sbb
dec
mov
out
cmc
test
or
ins
cmc
inc
pop
push
xor
test
test
imul
lahf
push
fwait
mov
jae
hlt
adc
add
sti
push
loopne
push
cli
pop
imul
repnz
outs
sar
pop
outs
cmp
inc
push
hlt
push
add
jnp
test
int3
es
push
ret
outs
aam
push
push
lods
mov
lahf
test
pop
push
outs
and
imul
psubw
(bad)
push
aad
rol
mov
les
loopne
push
inc
push
pop
push
sbb
and
mov
js
mov
and
outs
mov
outs
push
inc
neg
mov
inc
dec
add
add
pmulhw
stc
pop
add
add
aas
ret
push
inc
sysret
add
pushf
add
jo
sub
mov
pop
or
ud2
add
jo
jb
sar
cmovne
push
inc
add
iret
xchg
cmovs
std
inc
retf
dec
jo
imul
jno
stos
cmovnp
in
stc
sti
ret
ret
(bad)
add
jo
jne
test
ds
xchg
pop
call
and
push
or
and
es
mov
mov
and
pushf
dec
cmp
mov
jmp
inc
or
push
dec
jne
add
ja
sub
and
stos
pop
or
repz
push
pop
clc
mov
les
mov
imul
or
ja
test
aas
ja
loop
pusha
dec
ja
nop
fsubr
xor
loopne
mov
or
or
mov
mov
mov
pop
ja
sbb
ja
ja
pop
or
test
sub
test
add
push
sbb
ja
and
pop
cmp
ja
ja
test
push
jae
sbb
add
ja
popa
mov
test
pop
cmp
jne
div
pop
push
dec
ins
ja
rol
pop
popa
je
ja
pop
or
and
add
pop
jnp
mov
sbb
jl
outs
or
cmp
add
jmp
pusha
mov
mov
clc
sahf
out
sahf
cwde
in
push
pop
jo
loopne
out
test
lock
jno
push
lods
dec
jg
or
jg
das
or
sbb
jle
push
ja
ficomp
in
ins
mov
push
neg
repz
inc
push
push
jo
push
enter
pusha
adc
push
jg
cs
jg
or
loopne
add
push
pop
clc
cmp
pop
(bad)
(bad)
jecxz
add
inc
dec
add
add
pop
add
xor
adc
add
(bad)
add
cmp
push
jp
sub
out
mov
jle
shr
loopne
add
or
add
or
xor
shl
add
xlat
ds
add
inc
add
inc
add
in
jno
and
inc
add
dec
lods
aas
vsubsd
lar
dec
inc
cmovl
jge
fs
ror
repnz
inc
cmps
xor
lahf
rcr
sub
mov
dec
bound
dec
add
or
cmp
cmp
iret
dec
iret
js
xchg
popa
jp
test
sub
jmp
push
sbb
sub
push
or
retf
repz
add
lods
inc
ret
repz
sub
repz
and
pop
xor
ss
rol
repz
mov
pop
repz
or
gs
add
repz
xor
repz
test
popa
and
cmp
mov
mov
fistp
retf
gs
mov
push
outs
gs
add
adc
adc
lahf
gs
add
mov
push
and
adc
mov
inc
mul
adc
adc
call
inc
and
test
inc
gs
add
push
sbb
mov
les
test
gs
adc
sub
gs
gs
and
dec
fsub
push
mov
ins
sbb
jmp
xlat
les
out
jecxz
outs
lahf
push
cmp
mov
scas
add
ins
aam
push
out
add
pop
xchg
scas
and
push
addr16
out
fdivp
push
clc
push
xchg
call
push
hlt
mov
or
push
mov
or
test
pop
addr16
adc
scas
movs
dec
out
jns
ror
in
pusha
jmp
es
xor
int3
mov
mov
push
dec
push
ins
push
sub
fadd
addr16
(bad)
push
inc
xchg
pop
adc
jmp
push
xchg
pop
popw
out
sti
pop
pop
imul
add
or
pop
mov
xchg
aas
sti
pcmpgtb
(bad)
add
pop
ret
in
add
pop
push
or
mov
hlt
paddq
or
retf
xchg
ret
in
les
or
or
xchg
dec
inc
ins
cmovne
inc
add
inc
add
or
pand
mov
push
or
in
lahf
test
cmp
dec
add
inc
cmp
jb
punpckhbw
pop
outs
fiadd
mov
rol
mov
ins
mov
es
ins
js
loop
dec
cmp
mov
dec
push
dec
adc
pop
sub
pop
ret
pusha
out
pop
ins
adc
fldenv
inc
outs
push
cli
push
outs
push
push
and
and
adc
imul
or
test
outs
push
inc
movs
sub
sbb
and
ins
loopne
add
push
xor
outs
dec
adc
adc
or
outs
mov
loope
shr
add
ins
inc
or
popa
add
and
mov
les
mov
inc
and
jno
inc
adc
stos
outs
mul
adc
out
and
or
outs
jno
inc
mov
test
jae
mov
and
(bad)
outs
jae
pusha
adc
outs
xor
jae
loop
push
outs
sahf
outs
dec
test
sub
outs
rcl
in
ins
bound
sbb
imul
pop
dec
fiadd
iret
fwait
sub
adc
jno
scas
ja
jbe
add
cmps
pop
pop
cmps
sub
adc
push
xchg
repz
test
dec
xchg
push
push
sub
jns
mov
push
push
pushf
push
outs
sbb
outs
lods
or
shr
or
sahf
outs
adc
adc
dec
adc
loopne
mov
push
inc
rcl
push
fdiv
mov
push
inc
push
je
dec
push
inc
adc
push
outs
mov
sub
and
add
ret
jns
(bad)
out
adc
stos
inc
pop
ror
addr16
ret
in
add
data16
(bad)
adc
cld
or
add
syscall
add
sahf
stos
imul
inc
cvtps2pi
mov
fs
add
mov
prefetchwt1
or
push
das
jg
lar
inc
add
xchg
aas
inc
in
es
call
(bad)
mov
add
dec
mov
cmovnp
dec
add
addr16
das
dec
add
add
and
cmp
sbb
xor
retf
and
xor
xchg
mov
movs
aam
test
mov
sub
les
(bad)
dec
or
inc
(bad)
outs
xchg
test
fadd
pop
mov
mov
xchg
aad
add
ror
mov
push
push
pop
mov
mov
imul
imul
and
pusha
mov
add
push
sbb
fiadd
add
or
xchg
push
push
and
jo
jecxz
xchg
ror
stc
cmp
push
imul
loope
add
mov
pop
adc
sbb
cmp
loope
pop
and
pop
mov
int
pop
adc
jno
adc
shr
outs
ror
shl
add
and
pusha
shl
adc
mov
push
xchg
pop
jno
ins
lea
int3
pop
jno
jno
sbb
mov
and
jae
js
adc
lods
jmp
jae
sub
bound
test
jmp
mov
cmp
cmp
imul
into
pop
ins
daa
or
pop
mov
test
jno
and
xlat
jae
xor
popa
ss
rol
int
add
ret
ds
add
lea
and
add
pop
mov
nop
pop
push
hlt
sbb
aaa
fild
push
sbb
hlt
push
and
sahf
div
sub
xchg
sbb
sahf
out
in
pop
ins
jl
jne
sahf
out
xor
pop
aas
lods
pusha
les
dec
iret
mov
or
iret
sbb
inc
cs
iret
jo
lock
xor
lods
xchg
mov
push
fs
xchg
and
les
or
mov
mov
ds
out
rol
ret
and
add
inc
jnp
push
test
add
(bad)
pop
add
aas
rcl
orps
addr16
or
pop
sti
mov
add
sbb
add
add
add
fdivr
add
sbb
mov
jne
cmp
or
cmovae
push
(bad)
sbb
inc
add
inc
add
clc
adc
pop
cmovs
paddd
stos
dec
cmp
dec
fimul
dec
add
dec
add
jb
add
push
(bad)
scas
sbb
dec
loop
add
mov
scas
stos
inc
inc
js
scas
test
or
bound
sbb
scas
stc
dec
loope
pop
or
push
jae
or
push
mov
pop
inc
xor
xor
scas
push
jp
pop
lea
push
scas
push
and
push
jp
scas
or
lock
scas
rol
mov
ror
push
sbb
ret
scas
push
pusha
test
inc
jne
les
cs
xor
sbb
pop
push
dec
scas
push
mov
sbb
inc
pop
scas
ror
mov
ror
xor
push
pop
push
pop
and
push
pusha
test
or
mov
lds
mov
pop
outs
pop
push
mov
pusha
sub
adc
les
adc
xor
cwde
pop
jno
add
lea
rcr
add
push
sbb
mov
bound
inc
pushf
es
jae
shr
cmp
mov
les
mov
sbb
pop
ins
pop
ins
pop
sub
add
in
ins
or
or
in
es
mov
imul
sub
jns
fsub
adc
jae
test
inc
push
out
das
or
inc
sahf
out
and
jae
add
push
call
das
repnz
push
out
lahf
cmp
sbb
adc
xor
jns
repz
pop
push
ins
shr
in
pop
out
dec
sub
mov
adc
out
pop
(bad)
out
psllw
les
ficomp
push
cs
xor
push
sub
add
pushf
out
adc
out
adc
loopne
mov
out
or
push
lahf
daa
icebp
inc
call
push
jl
test
imul
mov
push
add
add
daa
mov
add
pop
lods
wbinvd
add
or
and
scas
xor
prefetch
pop
add
mov
cmove
cmovne
cmovbe
jg
lock
inc
mov
dec
dec
bswap
lahf
mov
daa
dec
xor
dec
add
dec
add
jb
add
sahf
adc
xchg
cmc
fild
push
movs
out
add
mov
pop
push
cmp
push
mov
push
add
xchg
mov
adc
imul
popa
xchg
or
fisttp
jne
and
fbstp
sub
or
(bad)
ins
adc
push
adc
pop
pop
movs
fbld
mov
ffreep
imul
adc
push
fisttp
ins
inc
or
pop
fist
adc
sbb
adc
mov
and
pusha
test
and
lea
(bad)
pop
add
inc
fbstp
or
test
pop
movs
push
and
inc
sbb
fistp
lods
outs
fbstp
and
add
jae
mov
fist
fbstp
sbb
or
cli
fild
inc
bound
jno
add
fild
mov
and
and
(bad)
fbstp
jl
xchg
fadd
test
shl
fild
push
and
(bad)
bound
test
and
and
sbb
loopne
js
add
daa
adc
mov
sub
jbe
dec
aam
add
push
mov
pushaw
ja
cdq
sub
test
outs
mov
sahf
fwait
mov
fdiv
mov
push
sub
test
push
or
push
outs
adc
push
and
xchg
fs
or
xchg
outs
sbb
out
push
mov
adc
je
xchg
call
aam
hlt
jbe
push
jmp
adc
pop
movs
dec
add
inc
cmp
mov
test
and
scas
loope
cmp
movaps
xor
int3
shr
sub
iret
or
movaps
js
shl
addr16
sahf
sbb
movaps
data16
sub
sbb
sub
lar
in
lahf
loopne
sub
inc
add
inc
add
or
aad
add
cmova
jo
dec
fmul
add
dec
les
dec
add
adc
dec
add
cmps
add
outs
aad
es
mov
cld
pusha
jg
loopne
inc
xchg
rcl
push
cmp
sub
pusha
adc
add
or
jae
push
mov
outs
xorps
inc
sub
pop
inc
inc
adc
fld
push
and
(bad)
aad
cmc
outs
sti
add
or
test
sbb
xor
add
pusha
mov
and
bound
inc
sbb
push
movs
inc
sbb
xor
or
xchg
fadd
loope
or
outs
ret
and
pop
test
shl
les
jno
adc
mov
add
outs
and
dec
ins
inc
outs
jae
add
push
sbb
mov
outs
les
test
cli
outs
jno
adc
or
outs
jno
inc
mov
test
ins
jae
jb
adc
xor
cmp
or
movs
inc
outs
ins
sub
add
or
pop
ins
outs
or
les
test
and
pop
jbe
test
outs
add
ins
push
pop
xor
jo
dec
xor
das
movaps
lods
inc
push
mov
lods
out
out
cmp
nop
push
mov
push
add
inc
ja
mov
dec
outs
ins
dec
daa
mov
adc
or
jno
mov
outs
xor
(bad)
loopne
out
sbb
dec
loopne
outs
je
inc
cmp
clc
fdivp
ficomp
push
enter
push
add
shr
xchg
push
push
mov
mov
mov
punpcklwd
outs
(bad)
outs
add
(bad)
adc
ds
or
add
or
sbb
sub
jae
push
clts
add
pop
add
sahf
jecxz
mov
sbb
wbinvd
add
push
paddusw
stos
mov
into
push
aaa
cmovae
add
inc
add
mov
add
cld
sub
mov
dec
cmps
cmovns
cdq
mov
ror
cmp
bnd
inc
(bad)
add
or
clc
xor
cdq
into
xchg
es
arpl
mov
xor
dec
xor
xor
jb
scas
shl
rol
jo
ins
jae
stos
inc
mov
adc
and
(bad)
mov
ins
push
mov
jno
sub
scas
cs
ins
adc
imul
or
ins
ret
add
shr
adc
rol
test
sbb
popa
sub
jno
mov
mov
xchg
dec
ins
bound
inc
js
ins
mov
ins
jecxz
inc
nop
and
pop
ret
or
push
and
or
ins
jno
sub
or
add
and
jno
sub
adc
and
add
inc
and
jno
pop
adc
bound
sub
or
add
jae
icebp
shr
xor
adc
sub
add
xor
rcl
ins
adc
test
ins
pop
test
ins
imul
add
pop
aad
cmp
inc
cmp
in
or
push
sar
push
push
push
mov
add
push
jo
and
inc
addr16
cwde
jo
pop
sbb
mov
cwde
pop
js
dec
fdivr
pop
out
ins
push
adc
push
sub
adc
call
add
mov
stos
cmp
addr16
mov
inc
mov
xchg
out
aam
nop
mov
addr16
ror
pusha
push
les
cmp
repz
dec
xchg
ins
sbb
dec
addr16
addr16
or
cmp
push
addr16
or
icebp
outs
push
adc
inc
test
sbb
push
add
xchg
sub
cmovbe
into
(bad)
popa
cmova
mov
push
inc
inc
jns
gs
pop
retf
jmp
pop
sar
mov
pop
inc
dec
data16
int3
lods
cmp
push
jne
cmps
xor
fisubr
jp
inc
sbb
xor
push
jbe
inc
ins
outs
ja
(bad)
push
ret
stc
push
dec
add
jmp
cmp
out
pop
add
daa
(bad)
psrlw
scas
dec
loopne
push
(bad)
push
imul
sahf
or
adc
inc
jb
jns
ins
and
pop
jge
inc
test
jb
jns
jmp
or
push
xor
mov
js
push
data16
push
lods
loope
pop
dec
push
add
dec
or
ror
push
retf
add
adc
jne
push
idiv
addps
cmp
sub
fldpi
pop
inc
sub
push
imul
add
fadd
bound
add
adc
aas
std
sti
jno
jne
(bad)
inc
jns
popa
ins
or
nop
mov
sub
shr
fadd
or
pusha
aas
jne
outs
or
add
jo
ins
mov
das
xchg
push
fiadd
sub
out
aas
and
jnp
cmp
jae
mov
cmps
xchg
retf
(bad)
sbb
js
fcom
push
test
inc
(bad)
push
movs
adc
xor
push
push
test
and
cmp
movs
ret
pop
or
or
sbb
outs
adc
loope
xchg
dec
retf
pop
pop
xchg
lds
pop
and
add
xor
mov
push
pop
sub
mov
es
ins
and
dec
mov
lahf
pop
lods
add
mov
int3
outs
call
dec
psllq
shl
out
inc
sbb
lods
jle
fcomp
mov
loope
pop
inc
push
jno
inc
push
pop
or
outs
sbb
shl
cmp
ret
aam
mov
lahf
pop
and
cmp
setno
cld
jmp
fiadd
dec
push
pop
or
inc
dec
popa
jae
outs
outs
imul
cmps
xor
fisub
cmp
push
or
dec
outs
cmp
jle
sub
arpl
ja
xor
push
adc
test
inc
inc
mov
push
imul
add
or
cmp
ficomp
push
pusha
pusha
push
inc
pushf
push
xlat
pop
xchg
orps
inc
cmp
popa
mov
daa
adc
jg
jbe
iret
add
jl
add
cwde
nop
popa
push
add
lds
lods
leave
or
inc
rol
or
add
adc
cmps
les
jmp
push
outs
jne
sbb
dec
dec
adc
movups
dec
adc
adc
das
xor
push
outs
dec
gs
popa
pop
fidiv
aaa
or
sub
fld
scas
pop
sbb
call
cmp
js
(bad)
inc
inc
xchg
rol
add
or
push
adc
push
add
fld
xchg
push
imul
sub
adc
scas
adc
repnz
or
(bad)
out
inc
inc
(bad)
dec
shl
and
add
pop
mov
sbb
add
dec
popf
and
inc
push
adc
lock
pop
sub
or
push
add
dec
ja
add
cmp
sub
shr
xor
push
push
mov
pop
js
sub
repz
in
mov
inc
and
mov
jl
and
ror
jb
movs
and
xor
test
mov
adc
fs
cmp
imul
lds
mov
or
push
or
pop
test
sti
popf
or
adc
add
ins
aaa
sub
fmul
pushf
dec
das
repnz
fs
push
aas
hlt
mov
lahf
and
xchg
mov
ins
mov
mov
lahf
shl
sub
rcr
add
and
adc
cs
sahf
xor
and
out
ret
push
pushfw
enter
jo
addr16
das
push
sti
cmp
pop
jmp
popf
or
or
sub
jmp
ret
pop
jne
xor
fdiv
or
dec
popa
dec
lods
pop
push
or
pop
add
xchg
popa
pop
add
pop
mov
xor
lds
xlat
or
outs
add
dec
dec
cmp
or
add
pop
mov
imul
cs
comiss
sbb
add
shl
add
mov
pop
push
mov
adc
call
sbb
dec
pusha
pop
or
dec
hlt
or
popa
jmp
ja
icebp
ds
or
fs
ror
lahf
in
les
enter
mov
adc
dec
pusha
and
pop
inc
fld
pop
add
jo
ins
addr16
pop
add
pop
test
push
adc
mov
and
shl
pop
push
mov
jno
adc
push
cmc
mov
fstp
aaa
outs
xchg
lahf
sbb
xchg
add
data16
xchg
mov
rol
imul
jo
push
movs
dec
movs
mov
imul
push
or
add
mov
(bad)
pop
test
sbb
xor
push
pop
adc
or
rol
inc
xchg
mov
(bad)
das
sbb
jo
mov
cs
add
sbb
pop
push
pop
fisubr
jl
mov
push
test
ja
das
xor
(bad)
fld
mov
jo
nop
add
xchg
add
sbb
mov
or
imul
jp
mov
add
adc
sub
stc
xor
mulps
jmp
add
push
push
mov
divps
shr
xchg
fld
adc
dec
add
add
push
sub
push
sbb
jb
das
sbb
jecxz
cli
js
add
jmp
inc
pop
xlat
or
pop
xor
in
aam
mov
pusha
dec
add
(bad)
rcr
movhps
out
push
sub
cmp
call
ins
pop
pop
adc
adc
fadd
jae
add
xor
sub
pop
mov
rcl
fldcw
push
adc
push
outs
es
xchg
push
aaa
push
in
cmp
add
lahf
mov
(bad)
loopne
sub
js
or
adc
rcl
adc
nop
pusha
or
outs
movq
cmp
xor
xchg
lods
cmc
fld
mov
cmp
or
pop
icebp
fmul
or
stos
adc
fld
adc
xor
mov
outs
imul
add
add
xlat
aas
int
dec
mov
(bad)
push
aas
les
add
lock
push
sub
es
push
xchg
dec
out
sub
dec
int
inc
add
xor
scas
mov
dec
fisub
jo
jg
push
loopne
inc
into
dec
sub
push
pop
push
push
fisttp
push
fdiv
gs
mov
cwde
mov
movs
xor
adc
repnz
push
pop
gs
mov
cvtps2pd
jecxz
add
mov
addr16
data16
js
or
sub
or
pop
lods
add
xlat
pusha
dec
push
xchg
xchg
jns
pop
xchg
out
push
sub
inc
ja
int
lods
add
jns
jns
stos
addr16
jns
or
mov
add
push
or
cmp
jg
and
add
sub
shl
xchg
xlat
mov
aad
dec
fisttp
inc
fs
push
cld
pop
sub
pop
das
mov
inc
inc
pop
aaa
jb
int3
push
push
inc
loopne
adc
inc
cmp
retf
xor
cmp
adc
daa
jne
push
scas
inc
or
daa
xlat
popa
mov
inc
mov
cs
or
or
add
jbe
rcl
(bad)
and
test
push
sbb
les
push
outs
ja
mov
pop
mov
sub
aaa
je
and
jmp
pop
in
inc
dec
popa
js
pop
imul
adc
addr16
adc
cvttps2pi
cmovl
(bad)
add
jne
rcr
mov
add
ds
daa
push
or
xchg
jne
bound
or
and
pop
fistp
adc
dec
adc
xor
jmp
inc
jecxz
mov
test
sbb
loop
arpl
add
or
pop
movs
xchg
sub
mov
lock
icebp
inc
lgdtd
sbb
pop
icebp
xchg
xchg
and
loopne
push
mov
sub
lds
rol
fild
int3
and
rol
sbb
mov
out
(bad)
pop
fild
inc
pop
push
in
push
add
mov
xor
pop
out
push
icebp
inc
sub
jo
push
sbb
add
push
mov
out
push
scas
or
add
je
inc
inc
add
out
adc
das
out
sbb
mov
pop
outs
out
pop
(bad)
adc
dec
aas
add
iret
push
jecxz
pop
arpl
aaa
add
add
pop
add
outs
push
sub
push
add
sbb
mov
imul
or
imul
push
add
in
jno
dec
xor
movs
shl
sbb
jmp
aas
in
adc
adc
xchg
pop
or
popa
dec
add
ins
add
loope
sbb
mov
mov
cmp
hlt
arpl
daa
mov
das
or
xor
or
sub
inc
outs
loopne
xchg
shl
dec
aam
push
jnp
lds
adc
dec
outs
inc
jb
sbb
push
es
popf
add
push
jb
arpl
outs
imul
daa
or
inc
ins
popa
addr16
popa
xor
sub
pushf
jmp
or
outs
popf
adc
adc
(bad)
daa
fsub
mov
push
or
adc
lahf
or
cmp
add
mov
rcl
cmp
or
sub
push
and
pusha
jg
dec
dec
mov
(bad)
fmul
dec
dec
shl
cs
ds
test
push
imul
movs
dec
inc
sahf
fmul
loop
bound
push
xchg
out
dec
cmp
jp
sub
sbb
adc
daa
in
aas
inc
push
mov
out
ficom
dec
dec
mov
data16
xor
pop
(bad)
rcl
out
enter
(bad)
pop
cli
jle
push
mov
jns
mov
inc
add
js
xor
addr16
mov
or
dec
mov
push
mov
pushf
scas
ins
loopne
inc
push
fadd
mov
scas
ins
xchg
or
and
ret
jl
(bad)
fcomp
outs
fwait
or
daa
push
ret
mov
ret
addr16
pop
ret
test
dec
adc
inc
jne
pop
push
int
pusha
or
cmp
add
leave
icebp
push
inc
mov
fimul
fwait
data16
xchg
push
sub
clc
add
out
jb
js
gs
sub
iret
add
pop
loopne
push
and
jmp
bound
or
pop
dec
fs
outs
mov
fiadd
and
dec
push
sbb
add
jo
mov
add
xchg
inc
lods
push
in
add
dec
cmp
pushf
dec
ret
cs
push
mov
add
dec
adc
mov
add
dec
lahf
or
faddp
push
add
add
cmc
das
mov
addr16
jo
and
add
clc
ret
add
adc
iret
mov
adc
call
push
mov
jl
xor
jp
mov
jne
or
jl
pop
add
push
jno
pop
fmul
wbinvd
add
sbb
fidiv
add
add
mov
stc
push
push
add
verr
les
sbb
add
push
sub
mov
pop
mov
fld
imul
das
xchg
dec
mov
xor
rcr
sahf
or
adc
adc
fld
mov
data16
pusha
push
imul
cs
push
inc
je
fdivr
add
pop
into
int
cmp
imul
and
popf
xor
shr
and
lds
iret
mov
mov
nop
ss
mov
and
adc
mov
ror
inc
outs
jne
mov
adc
data16
push
rol
fs
push
add
adc
mov
sub
jb
mov
sbb
jecxz
into
jmp
cmp
mov
add
not
int
add
mov
add
fldcw
fld
adc
push
imul
sub
lea
fadd
retf
arpl
mov
nop
sub
ins
stos
loopne
mov
or
adc
aam
push
and
rol
mov
outs
outs
enter
mov
mov
adc
(bad)
xchg
loopne
mov
add
mov
xor
dec
dec
dec
dec
and
adc
daa
and
add
add
jmp
daa
daa
daa
jecxz
ror
or
cmp
adc
jle
adc
(bad)
paddsw
cmp
je
cmp
inc
and
jl
add
test
js
mov
or
and
mov
push
sbb
xchg
push
int
fisttp
cmp
out
cmp
cmp
push
mov
shl
loopne
and
or
cmovbe
jb
popa
and
cld
dec
push
jae
or
dec
popa
xchg
popf
xor
jmp
and
mov
jmp
jno
mov
ins
add
pop
jnp
in
fidiv
jnp
movs
lea
lods
push
cmp
mov
push
(bad)
jmp
ds
push
ins
mov
sbb
push
cmp
mov
call
push
loop
or
xor
mov
outs
inc
dec
popa
movs
pop
cld
rol
jno
mov
fisub
cmp
aaa
adc
add
mov
jno
xor
push
pop
ret
and
adc
pop
jbe
fwait
les
fsub
adc
push
cmp
nop
jmp
lds
int3
jae
push
cmp
mov
xor
pop
pushw
jno
mov
(bad)
ret
bts
or
fs
jmp
push
mov
adc
adc
xor
jle
mov
cmp
inc
push
iret
lods
xchg
jb
mov
or
jge
add
out
cmc
mov
aad
push
inc
push
adc
cmp
push
mov
dec
or
aaa
xor
es
(bad)
xchg
sub
pop
ret
lds
dec
push
pop
dec
adc
push
mov
mov
mov
and
ret
inc
inc
jb
fisubr
mov
add
or
mov
outs
adc
push
out
stos
lahf
add
pusha
je
ins
or
xor
and
pop
je
imul
int
or
push
daa
dec
push
stos
mov
scas
and
push
push
imul
mov
push
mov
lods
das
ror
cmp
outs
xchg
out
adc
cmp
and
jmp
in
push
sub
fs
add
mov
push
inc
sub
sbb
sbb
jp
push
dec
stc
inc
push
dec
(bad)
jno
or
jge
or
or
jecxz
cmp
add
(bad)
lods
mov
or
clc
mov
ins
ficom
pminub
mov
ret
mov
cmp
adc
iret
or
jo
fnsave
cmps
push
lods
push
rol
popa
adc
and
das
(bad)
mov
jg
mov
pop
loopne
push
xchg
das
mov
push
adc
lods
mov
jg
sahf
add
call
inc
xlat
xor
pop
or
jle
or
sahf
jo
je
repz
jns
add
hlt
repz
dec
test
mov
mov
or
dec
add
sub
outs
or
iret
add
add
shl
leave
sti
and
rep
popf
in
add
push
daa
movs
das
mov
and
mov
pop
adc
nop
add
pop
je
push
push
xor
into
or
imul
jge
sbb
xor
sub
cmp
ss
add
mov
xor
sti
xor
or
inc
popa
xor
stos
jne
cmp
enter
aas
rcr
xor
add
xchg
pop
js
outs
div
in
das
sti
push
mov
(bad)
lock
scas
aam
pop
(bad)
sub
inc
xchg
movs
or
pop
cmp
push
add
repz
push
jo
je
sbb
fwait
loope
xchg
add
rol
mov
push
jae
xchg
bound
or
xor
push
inc
jb
xor
aad
add
or
popf
inc
popa
or
cmp
jae
neg
sbb
add
into
pop
mov
sbb
add
jecxz
add
fsubr
push
jl
sub
loope
mov
cmp
cs
adc
fwait
je
adc
add
mov
xchg
rcr
gs
pop
fsub
push
jno
out
pop
add
sar
lea
fbstp
pop
js
jo
adc
ds
and
and
aam
mov
pop
sub
and
push
mov
sti
push
cmp
(bad)
ins
pusha
pop
jo
retf
sbb
push
imul
sbb
movs
addr16
mov
rcr
ins
(bad)
loopne
fisttp
ins
inc
cmp
ja
lock
clc
or
js
and
cdq
popf
cmp
pop
cmp
(bad)
push
fldenv
rcr
cmp
push
and
test
ins
xchg
dec
fadd
cld
imul
or
iret
jnp
dec
jbe
adc
push
sub
jnp
jnp
ins
push
es
inc
add
xor
neg
jnp
cmp
push
fcomp
mov
push
ds
lock
pop
movs
pop
into
pop
xor
test
adc
push
js
xchg
mov
mov
adc
lock
idiv
data16
xchg
push
enter
inc
lods
push
iret
jnp
ret
lods
es
push
je
jnp
and
outs
ja
or
jmp
jnp
sub
inc
adc
aas
push
pop
iret
jnp
xor
push
out
icebp
loopne
or
nop
mov
push
push
jl
shl
scas
push
les
fsubp
repz
dec
inc
outs
es
sbb
jo
fadd
mov
in
out
cmp
lods
fcomp
add
aam
ja
and
push
adc
cs
jnp
cmp
push
add
nop
push
test
out
out
cmp
ins
test
pushf
out
loopne
mov
xchg
inc
cmp
push
ins
sar
es
in
sbb
add
cwde
ds
scas
inc
stos
daa
mov
lods
mov
dec
add
xlat
in
add
sbb
pop
push
pop
ss
xlat
xchg
aas
(bad)
add
add
mov
dec
gs
shl
inc
cmc
mov
cli
cwde
hlt
test
pop
dec
loop
mov
or
jmp
inc
sub
cmp
or
shr
outs
add
ss
or
jae
int3
test
jecxz
cwde
jnp
cmp
or
imul
cwde
xchg
and
or
rcr
and
pop
loope
push
imul
cmp
int3
ds
xor
adc
cmp
mov
test
push
or
daa
jne
enter
pop
push
daa
jmp
inc
push
pusha
xchg
or
push
daa
xor
daa
add
pop
aaa
mov
scas
daa
(bad)
pop
aaa
add
daa
mov
pop
daa
(bad)
push
daa
in
nop
and
push
pusha
add
xchg
lar
pop
add
jp
daa
add
jmp
inc
daa
or
mov
mul
shl
sub
mov
aad
push
retf
inc
pop
shl
outs
ror
daa
cmp
sbb
outs
inc
es
sub
gs
daa
jecxz
jo
mov
pop
push
scas
inc
es
pop
ins
daa
aad
enter
std
in
fiadd
daa
cwde
stos
add
mov
lods
test
in
add
push
adc
scas
mov
sbb
iret
repz
mov
les
scas
repz
out
push
mov
mov
xchg
neg
xor
mov
dec
push
jl
push
jns
neg
push
(bad)
hlt
shl
jns
add
or
adc
aam
mov
sahf
push
mov
cmp
jl
push
ins
push
cmp
jns
int3
fs
push
shr
cmp
nop
dec
ds
push
pop
iret
jnp
cmp
je
xchg
push
inc
mov
mov
push
dec
push
pop
fs
jns
jnp
sbb
sub
clc
jle
fidivr
jns
fsubr
ds
dec
cs
push
dec
push
or
or
mov
sbb
aas
inc
out
lds
jecxz
gs
or
out
cmps
(bad)
inc
add
push
or
jmp
outs
ja
(bad)
cmovae
jb
add
sbb
call
xchg
xor
dec
adc
ja
retf
pop
inc
pop
(bad)
sbb
aaa
pop
fnsave
xchg
mov
cmps
mov
xchg
clc
das
push
and
rcr
mov
out
sbb
xchg
cli
sbb
adc
std
popa
outs
fs
add
mov
add
mov
sub
mov
push
push
mov
mov
jnp
push
dec
mov
dec
xor
mov
cmp
add
pop
dec
scas
icebp
and
(bad)
fucomip
shl
dec
or
and
pop
dec
das
mov
xchg
push
adc
dec
push
(bad)
cmps
push
loopne
mov
mov
push
mov
xchg
mov
add
aas
clts
add
mov
fimul
dec
xor
retf
wbinvd
mov
xchg
cmp
je
dec
mov
jl
loopne
push
outs
lahf
add
and
sub
rcl
lds
add
pop
ror
jae
push
cmp
lds
sub
dec
jg
mov
add
mov
lock
je
add
lods
lods
inc
and
push
mov
or
cdq
ins
push
pop
and
inc
ret
out
jne
or
lods
je
adc
or
fcom
and
push
fs
lea
add
inc
lods
pop
sub
mov
push
xlat
cmp
xlat
add
adc
jo
mov
jns
nop
add
pop
mov
inc
xchg
mov
xchg
mov
sbb
out
jg
adc
or
add
xchg
mov
inc
arpl
inc
add
cmps
adc
inc
loopne
add
xchg
outs
xor
mov
dec
push
mov
retf
adc
xchg
add
int
jmp
add
push
das
inc
(bad)
in
in
aaa
das
daa
pop
js
in
pop
sysret
sahf
cld
jnp
dec
cmp
dec
xchg
push
aam
sub
aaa
xchg
push
fs
mov
sbb
out
dec
mov
out
and
jae
inc
fsubr
sbb
push
add
lds
inc
aaa
out
and
out
fs
dec
aaa
out
jge
push
out
clc
push
int3
push
out
mov
push
hlt
fdivr
push
out
ror
out
ficom
cs
out
dec
push
test
loopne
jecxz
out
mov
add
div
add
rol
add
inc
js
cmp
jae
cmps
cmp
xor
test
jl
scas
xchg
popf
cmp
(bad)
int
cmps
clc
ficom
pop
pusha
sub
jae
btr
je
mov
(bad)
xchg
wrmsr
cs
or
xor
add
or
xchg
nop
call
jbe
jb
sbb
pop
jg
jbe
dec
push
dec
dec
pop
cmp
mov
pop
clc
test
or
call
jno
lds
ins
xor
jae
sub
in
sub
(bad)
shl
adc
leave
adc
loop
pop
or
or
jp
ror
and
add
xchg
dec
push
add
sbb
sbb
and
mov
dec
mov
lmsw
cwde
mov
cdq
test
cli
add
mov
add
inc
xchg
or
not
jbe
pop
outs
sbb
rcr
fisttp
inc
mov
add
pushf
clc
sbb
mov
aad
push
fsubp
inc
out
pop
cmp
xor
or
js
sbb
jbe
test
sub
add
or
fnsave
adc
push
test
xor
test
hlt
xor
xor
loop
mov
inc
imul
mov
js
xor
lods
mov
adc
mov
mov
mov
test
push
enter
repnz
pop
cdq
cmps
or
sub
sbb
test
aaa
imul
mov
cwde
xchg
xor
lods
add
inc
adc
aam
push
cmps
out
cmp
xchg
fdivr
push
inc
shl
sahf
mov
xchg
ret
add
je
or
fcom
hlt
clc
mov
ins
bound
imul
lock
push
jbe
(bad)
fidivr
ret
mov
xchg
rdmsr
add
sub
setl
test
(bad)
pop
cmp
push
and
mov
inc
test
adc
push
inc
test
ins
adc
push
cmp
sbb
retf
sub
ret
lds
aas
inc
adc
pop
clc
xor
addr16
mov
push
loopne
push
fnsave
adc
imul
add
sbb
push
adc
mov
in
add
xor
mov
jno
add
inc
ret
cli
ret
push
aad
inc
adc
outs
pusha
pusha
test
xor
aad
imul
sub
adc
dec
xor
sbb
inc
xchg
inc
fidivr
in
dec
and
int3
mov
sub
imul
inc
fstp
scas
psubusw
arpl
sbb
jbe
outs
je
and
add
add
push
xchg
pop
jecxz
jae
sub
push
(bad)
daa
push
add
push
fiadd
sbb
pop
push
jnp
mov
call
loop
push
inc
pop
or
lock
add
push
adc
inc
dec
inc
dec
add
or
cmp
shl
sbb
push
mov
loopne
ja
dec
(bad)
or
inc
xor
enter
shl
jl
xchg
es
add
or
push
xor
dec
call
inc
push
adc
nop
push
and
call
mov
bndstx
ins
popa
jo
bound
sub
dec
popa
sbb
push
sahf
jecxz
popa
imul
push
add
pop
mov
clc
cmps
push
in
sbb
sbb
or
or
out
pop
mov
pop
movs
mov
sbb
push
lds
lea
mov
pop
or
adc
fisttp
data16
cmp
(bad)
jae
das
cmp
and
jo
mov
rcl
mov
std
ror
inc
dec
outs
push
fisubr
sub
leave
sbb
pop
or
pushf
add
push
mov
leave
in
or
mov
mov
adc
loopne
sub
adc
or
pop
sub
rcl
or
push
mov
dec
nop
dec
and
inc
fcomp
fld
fs
dec
fimul
pop
lock
push
add
or
or
jae
or
push
lods
cmc
fld
push
xor
mov
add
sbb
les
lods
out
ins
cmps
inc
pop
cmps
loopne
jl
sbb
jae
mov
adc
arpl
xorps
pop
add
inc
push
xor
jb
ins
aaa
push
adc
xor
sti
inc
xchg
pop
sub
cmp
outs
xor
pusha
shr
add
lods
add
int3
mov
sbb
add
jns
outs
add
and
push
ficomp
inc
mov
sbb
dec
sbb
neg
test
add
sbb
imul
adc
inc
jb
adc
popa
jns
and
inc
ins
add
cs
push
jns
(bad)
fs
xchg
add
in
ss
pop
ins
(bad)
call
gs
push
sar
outs
jne
push
adc
mov
and
push
ins
cmps
add
dec
outs
sub
jno
adc
mov
pusha
or
cmc
add
sbb
ins
(bad)
sbb
mov
jnp
imul
lods
xchg
inc
jae
add
pop
in
push
sar
jne
in
push
cmps
fdivr
mov
pop
cld
das
sbb
pop
ret
arpl
scas
pop
cld
push
pop
pop
scas
jnp
push
das
mov
push
dec
push
aas
bound
lock
rcl
lock
cmp
adc
adc
cmp
pop
xor
mov
out
pusha
pop
mov
test
push
dec
push
jne
adc
js
out
pusha
stos
popf
or
xor
mov
adc
push
jmp
sbb
add
mov
push
lock
and
push
mov
sbb
sub
repz
not
mov
xor
xor
or
lds
sbb
jl
enter
aaa
sbb
sbb
add
or
push
cwde
lods
pop
lds
sbb
jae
dec
lock
or
inc
add
movs
sub
mov
xor
xor
int
scas
pop
pushf
ins
add
push
push
aaa
prefetchnta
mov
dec
outs
mov
(bad)
mov
add
sbb
test
inc
mov
push
sub
push
mov
fld1
dec
pop
js
jo
sbb
(bad)
adc
je
jo
push
sbb
sbb
in
into
jmp
xor
inc
dec
add
sub
loope
mov
add
mov
aas
add
test
sub
jmp
mov
mov
add
fstp
enter
lds
jecxz
jle
mov
and
pop
add
loop
icebp
in
push
imul
mov
and
add
clc
fbld
fist
add
push
movs
inc
out
sbb
into
or
inc
adc
je
sbb
jmp
rol
imul
cld
setl
inc
sub
jo
stos
out
push
and
retf
cmps
fsubr
sbb
cmp
jnp
push
fst
ins
pop
adc
inc
adc
and
loopne
xchg
add
add
adc
cs
fld
pop
adc
push
daa
out
mov
xchg
mov
nop
push
sub
adc
shr
xor
add
adc
mov
sub
bound
push
sbb
jno
mov
stos
pop
stos
pop
pop
das
jbe
(bad)
mov
pusha
sub
mov
jne
and
push
xor
and
mov
add
sbb
outs
call
pop
lods
outs
dec
pop
int
xor
neg
(bad)
in
outs
cmps
ret
push
pushf
ret
dec
inc
sub
test
ins
add
sbb
mov
adc
loopne
add
jne
(bad)
lods
push
call
das
push
or
js
mov
pop
mov
push
adc
fs
add
rol
out
add
js
cmps
mov
and
mov
pusha
jo
mov
or
fstp
aam
je
jns
or
add
xor
movs
popa
mov
lods
adc
mov
adc
loope
pop
cmp
push
in
or
sub
test
enter
xlat
loop
pusha
(bad)
je
out
push
xor
fmul
imul
(bad)
not
in
test
or
iret
lods
push
repz
add
or
iret
dec
stos
ret
popa
push
iret
mul
sub
adc
mov
dec
jo
sbb
pusha
cmp
adc
pop
cmp
or
pop
or
push
adc
inc
jo
xlat
(bad)
pop
push
push
or
imul
pop
push
and
call
mov
call
outs
fimul
push
inc
mov
mov
cmp
rcl
sub
jmp
xor
pusha
mov
add
adc
push
(bad)
out
add
std
mov
adc
cmps
loop
mov
adc
and
cs
test
mov
icebp
das
(bad)
mov
xor
and
xchg
out
adc
rol
movs
push
jl
neg
push
loopne
mov
daa
add
add
stc
inc
adc
div
cmp
shl
mov
fst
and
and
fucomip
cmp
aaa
push
inc
inc
jb
add
xor
push
(bad)
jl
push
and
jnp
and
cs
in
leave
in
adc
mov
cmp
movs
xor
xor
sub
adc
ss
pusha
test
push
add
cmp
(bad)
out
and
shld
and
call
and
daa
(bad)
(bad)
cmp
xchg
ins
push
pop
call
push
cpuid
aaa
add
cmps
aad
add
inc
sub
imul
cmp
popa
sbb
je
jo
push
cmp
mov
pop
inc
push
je
fadd
jecxz
(bad)
in
lea
outs
lods
push
inc
or
stos
or
test
sub
mov
cmp
je
or
and
fwait
clc
dec
dec
dec
xchg
mov
pushf
loope
ret
mov
cli
jecxz
adc
iret
xor
push
mov
add
and
loopne
or
imul
outs
fnstenv
or
repz
lods
add
in
(bad)
mov
add
test
or
or
pop
inc
jmp
ins
(bad)
arpl
push
inc
inc
test
sbb
push
or
push
or
and
js
ret
test
mov
xchg
dec
jb
test
cmp
fcomp
and
and
pop
or
cmp
add
adc
jae
push
sbb
xor
sbb
imul
add
fstp
push
ret
or
(bad)
add
fld
ja
pop
les
retf
xor
sub
xlat
or
scas
mov
jge
test
mov
inc
mov
pop
cmp
pop
add
in
in
(bad)
or
nop
add
or
add
or
aad
cmp
jmp
xor
mov
sbb
jae
fdivr
push
sti
jae
inc
inc
es
mov
or
xor
out
dec
or
lock
mov
and
sbb
outs
xchg
ret
xchg
xor
fs
and
adc
cmp
mov
adc
lock
dec
pop
mov
pop
xor
imul
push
outs
test
scas
push
pcmpeqd
xchg
push
push
adc
frstor
cmp
push
cs
sub
sbb
loope
xchg
pop
test
fwait
sub
aam
inc
jne
rcl
das
sbb
mov
pop
fnstsw
xlat
mov
inc
inc
scas
fisub
mov
mov
cmp
pushf
sub
das
aam
sbb
dec
push
out
adc
sti
sar
mov
sub
push
mul
push
inc
popa
xor
mov
daa
xlat
add
mov
push
mov
(bad)
dec
pop
nop
push
loopne
xor
jo
pop
loopne
dec
dec
inc
sub
addr16
xchg
adc
rol
out
das
xlat
dec
pusha
mov
mov
mov
ror
jne
cwde
or
inc
lock
xor
stos
xor
adc
in
scas
mov
(bad)
add
mov
add
mov
adc
pop
fstp
mov
mov
pop
call
and
cmp
mov
adc
or
rcl
mov
mov
add
adc
bound
bound
inc
add
jo
dec
sub
rol
mov
inc
xchg
cmp
sbb
mov
add
(bad)
sti
push
das
loop
icebp
add
push
push
xor
jno
cmps
outs
push
cmps
pushf
push
xor
bound
jae
or
mov
cmp
adc
jae
rcr
pusha
mov
or
dec
cmp
add
adc
daa
shl
mov
add
inc
ret
push
sbb
xchg
or
pop
mov
push
add
cmc
xchg
mov
jo
xor
not
sub
ror
pop
push
gs
inc
call
das
or
test
mov
fcmovnbe
jne
shl
push
and
or
adc
jns
jl
sbb
pop
dec
adc
and
(bad)
mov
and
lods
leave
sbb
pushf
pop
add
(bad)
outs
scas
push
movs
es
jmp
fistp
mov
in
xchg
mov
fbld
clc
jmp
scas
mov
mov
jae
sub
bound
shl
loop
je
stos
shr
leave
and
pushf
sub
(bad)
and
pop
xchg
mov
inc
sub
xlat
dec
inc
sub
daa
mov
add
mov
mov
or
or
fistp
mov
mov
add
jmp
das
dec
out
or
pop
test
daa
out
pop
xchg
loopne
stos
in
push
add
cmp
aaa
je
out
jae
adc
or
(bad)
xor
and
or
pushf
mov
test
loopne
push
ss
jns
addr16
inc
cmp
aaa
cmp
adc
ret
push
dec
mov
or
push
nop
retf
jns
pop
retf
clc
or
push
inc
mov
push
out
sbb
and
xor
mov
loop
(bad)
push
leave
add
or
xor
cld
adc
inc
nop
or
call
push
pop
jp
xor
in
mov
cmp
xchg
lods
push
outs
in
nop
bound
xchg
clc
inc
int
mov
mov
pop
adc
push
dec
mov
push
cmp
push
psllq
js
xchg
xchg
fild
sbb
add
ins
xor
jno
add
lea
cmp
je
or
add
jnp
pusha
sbb
or
jmp
(bad)
out
jo
sbb
mov
sbb
repz
inc
xchg
lahf
pop
je
ja
repz
pusha
mov
sub
mov
pop
mov
inc
repz
jl
push
add
sbb
test
mov
push
mov
repz
stc
bound
add
repz
pop
lods
push
loopne
dec
add
repz
xchg
test
lds
sbb
repz
push
pusha
repnz
jo
lods
push
repz
sbb
cwde
add
out
sbb
jbe
imul
xchg
adc
or
lds
loopne
scas
xor
repz
jo
outs
call
cmp
pop
push
adc
repz
and
mov
ret
mov
xchg
enter
loope
sub
ret
call
fisub
add
pop
nop
add
rcl
push
xor
pop
outs
adc
adc
enter
ror
or
add
add
outs
sbb
sbb
jo
fisttp
imul
ins
shl
loopne
inc
imul
in
ins
cs
loopne
cmc
adc
frstor
pop
xor
inc
lods
pusha
add
add
out
xchg
xchg
add
dec
adc
jo
test
push
push
cmp
mov
sbb
add
add
ins
pop
mov
inc
shl
add
push
pop
jno
fld
enter
cmp
adc
das
cmp
mov
cmps
dec
pop
push
or
mov
cmc
dec
pop
add
pusha
cdq
inc
cmp
loopne
ret
mov
mov
xchg
dec
jmp
(bad)
pop
xor
cmps
push
xchg
jb
inc
sub
add
movs
ret
mov
add
mov
push
inc
sub
add
ins
fisttp
lds
repnz
lea
fsub
adc
sbb
and
or
(bad)
aas
(bad)
push
aad
xor
xor
test
dec
rcr
out
mov
dec
bound
or
sbb
ja
cmp
and
inc
int
xchg
add
sbb
mov
dec
add
inc
push
adc
je
pushf
ja
movs
das
mov
pop
inc
aaa
sub
or
jge
push
add
lock
loopne
or
ds
jp
test
icebp
inc
ret
jl
arpl
xchg
sbb
pop
fs
aaa
push
push
cmp
mov
add
loopne
mov
or
and
in
inc
icebp
fs
pushf
fstp
ins
es
das
push
push
add
push
outs
je
adc
jnp
enter
push
sti
fcomp
ss
imul
fbld
cdq
adc
inc
out
jl
cmp
push
sub
cwde
shr
sub
mov
or
popa
mov
stc
adc
mov
lea
lea
pop
rol
adc
mov
cmp
ficomp
ins
pop
loop
pop
add
inc
push
adc
cmps
and
xor
mov
(bad)
fmul
outs
mov
pop
in
repnz
aaa
jne
and
add
inc
int3
ins
sub
jo
lods
dec
mov
orps
mov
sbb
pop
and
mov
pop
add
ret
sub
sub
xchg
add
loope
mov
pop
xor
dec
push
xchg
pop
fld
and
iret
push
push
xor
loop
into
mov
adc
add
inc
mov
lods
xchg
sbb
mov
popa
mov
int
xor
dec
dec
sar
pop
shl
rol
cmp
ror
dec
inc
sub
ret
cwde
sar
outs
inc
loope
sub
outs
ins
ret
lea
aas
mov
pop
cmp
icebp
das
pop
push
or
js
test
pop
jo
sbb
pushf
push
add
or
sbb
add
call
dec
loopne
adc
shl
push
movs
sub
pusha
shr
mov
add
xchg
fsubr
jns
shl
sbb
arpl
dec
inc
mov
dec
sar
adc
(bad)
adc
ja
cs
in
add
and
out
or
push
mov
push
rcr
push
jne
out
push
imul
sub
pop
call
popa
adc
icebp
or
push
out
add
stos
iret
dec
scas
iret
shr
jmp
loopne
es
loope
or
pop
jbe
xor
loop
xlat
(bad)
in
es
push
adc
or
mov
in
push
push
aaa
pop
push
add
cmc
mov
mov
push
sbb
xor
cmp
sbb
sub
call
pop
push
pop
pop
xlat
push
mov
push
jns
or
or
xchg
arpl
paddsw
mov
cmp
std
popa
ja
imul
pop
add
push
mov
or
xchg
sub
jbe
imul
push
adc
mov
call
int3
sar
push
cmps
or
mov
or
xor
push
cmp
jo
and
add
xchg
cmps
ficomp
sbb
fisttp
push
out
dec
dec
inc
bound
mov
out
dec
jb
vunpcklps
pop
add
leave
movs
fcomp
pusha
movs
sbb
push
pop
ja
push
stos
cmp
push
ret
mov
lods
xchg
shr
jb
xor
mov
lds
jno
ins
or
jbe
sub
and
inc
mov
sub
or
mov
retf
add
sub
(bad)
shr
jae
dec
pop
add
daa
sbb
fistp
xor
lds
aam
add
add
mov
lds
jb
lds
inc
repz
aad
jo
add
rol
sub
mov
dec
pop
dec
xor
push
inc
cli
add
data16
lds
jo
or
add
mov
add
or
push
xor
jnp
push
ins
(bad)
les
sub
add
push
sbb
pop
jp
add
mov
lds
mov
jo
(bad)
push
(bad)
xor
addr16
pop
push
rol
add
and
and
in
jmp
or
xchg
adc
loope
adc
add
es
jge
sbb
in
cmp
int3
rol
test
in
rol
cld
mov
ss
cwde
add
mov
adc
(bad)
mov
xor
adc
out
imul
in
adc
out
rol
pop
dec
mov
adc
fisubr
in
pop
mov
les
push
pop
xchg
xchg
adc
lds
pushf
sub
cmp
outs
push
pop
xchg
add
pop
leave
popa
adc
popf
pop
jne
retf
cmp
or
std
add
int
adc
inc
out
aaa
dec
out
pop
dec
jne
mov
in
mov
adc
icebp
pop
mov
(bad)
lods
in
inc
adc
push
mov
leave
sub
cmps
in
sub
mov
sub
or
xor
pop
xor
add
inc
sub
sbb
and
add
pop
xchg
jb
loopne
jns
and
push
inc
mov
mov
cmc
pop
aam
xchg
push
add
xchg
sbb
add
push
out
sar
sysexit
add
call
pusha
xor
mov
les
mov
push
aaa
clc
or
add
fiadd
cmp
add
test
jae
cmc
mov
push
sbb
repz
out
mul
inc
das
push
push
adc
aam
call
clc
mov
add
push
je
mov
push
mov
pop
xor
pushf
fstp
pop
xchg
dec
lock
or
and
pop
push
loopne
and
sbb
mov
add
push
or
push
mov
or
or
fadd
mov
daa
mov
or
inc
mov
cmp
push
push
inc
sub
imul
idiv
loop
outs
add
push
sub
or
fldenv
adc
push
inc
fdivr
push
loopne
inc
sub
int3
ret
(bad)
stc
or
repnz
xor
add
outs
fild
push
and
push
mov
outs
(bad)
test
add
push
in
push
adc
dec
add
dec
sbb
push
in
add
mov
pop
adc
fsubr
add
pop
xchg
das
mov
les
(bad)
rol
xchg
cmp
inc
push
movs
xor
dec
pop
stos
cmp
cld
cmp
outs
adc
mov
mov
gs
into
ins
add
loopne
push
and
ins
add
clc
pop
es
cwde
rcl
push
push
push
cmps
clc
imul
neg
xchg
pop
push
mov
push
push
mov
movs
pop
or
icebp
cmps
xchg
daa
mov
dec
arpl
cmp
mov
je
sti
mulps
sub
pop
jae
pusha
sti
dec
inc
sub
adc
jg
loope
xor
mov
lea
cmps
js
das
adc
neg
jl
push
and
das
(bad)
push
ficom
mov
xor
das
xlat
shl
push
add
add
fsubr
sub
cdq
out
add
push
dec
xchg
dec
push
or
push
or
or
js
jecxz
xor
xchg
jecxz
lods
cmps
imul
je
jns
shl
sbb
imul
push
leave
mov
push
xor
push
dec
mov
pop
sysexit
push
pop
ja
in
rol
cld
push
test
lods
das
retf
push
add
jecxz
out
mov
(bad)
jno
sub
push
aaa
add
out
clc
mul
aad
mov
push
mov
jmp
jne
shl
cmp
mov
pop
push
xor
stos
out
push
jg
test
out
dec
cmp
aad
push
dec
rol
lds
push
jne
shl
std
jmp
push
pop
pop
loopne
ja
sbb
add
fucomp
es
das
add
ja
fidiv
ja
dec
cs
out
outs
push
add
ret
pop
xlat
jecxz
jg
push
ja
xchg
or
and
pop
jmp
fisubr
je
je
js
sub
push
and
push
or
test
mov
push
pop
(bad)
loop
jne
jl
outs
fcomp
push
shl
loop
movs
add
fmul
add
push
scas
in
cli
mov
adc
test
dec
aas
push
fadd
or
push
add
sbb
or
scas
add
cmps
in
scas
push
aam
sbb
lods
loope
cmp
je
outs
mov
and
dec
adc
pextrw
sbb
in
push
mov
mov
(bad)
lock
add
(bad)
daa
mov
cmp
push
jo
push
ja
xchg
mov
cmp
lea
inc
stos
or
mov
shl
lock
add
inc
test
test
loopne
test
or
lock
adc
mov
inc
or
sub
or
inc
xor
loopne
add
add
or
fldcw
and
mov
or
int
push
add
add
push
xchg
pop
aam
pop
mov
test
mov
add
mov
cmp
push
inc
add
rol
or
lods
mov
xchg
test
test
add
mov
mov
xor
pusha
push
add
add
imul
add
(bad)
out
push
ret
or
lds
je
mov
mov
mov
push
mov
adc
addr16
test
dec
add
pop
pop
sbb
mov
pop
rcr
or
movsx
xchg
fld
inc
mov
push
xchg
bnd
push
lock
cmc
add
mov
add
leave
mov
aaa
mov
and
mov
xor
or
push
cmp
xor
mov
inc
or
cmp
aaa
pop
mov
add
dec
add
adc
pop
jne
stos
hlt
bswap
call
fimul
out
cmp
pop
nop
das
sahf
push
dec
ja
push
div
xchg
fcom
dec
cld
add
leave
xor
mov
add
jge
daa
push
pop
std
shl
lds
add
sub
and
push
adc
fwait
pop
sub
inc
push
das
jge
jle
mov
hlt
cwde
pop
mov
xchg
sub
or
sbb
sti
inc
jno
push
movs
and
loopne
pushf
dec
xor
sbb
int
pop
xor
cmp
scas
xor
inc
add
sbb
inc
cmp
mov
pop
(bad)
inc
adc
lock
push
mov
mov
add
or
inc
daa
scas
rcl
test
jmp
or
cvtps2pi
inc
shl
or
aad
les
scas
stc
mov
push
mov
add
stos
inc
pop
adc
push
push
or
mov
mov
or
loopne
scas
sbb
push
push
call
adc
adc
test
loop
push
add
cwde
and
fst
pop
push
jp
cmps
mov
push
and
push
xlat
movs
(bad)
xchg
push
les
push
pop
inc
aaa
ja
loope
lock
pop
pop
add
add
cmp
xor
punpcklbw
adc
sbb
dec
push
and
add
adc
dec
mov
sbb
jo
jno
inc
jno
inc
imul
jp
out
push
out
loop
sbb
jo
rcl
dec
(bad)
and
daa
sbb
push
je
push
mov
jmp
or
shl
inc
dec
aad
adc
push
sub
mov
jno
push
movs
cdq
hlt
sbb
jo
and
inc
mov
movs
out
adc
test
fld
dec
loopne
add
mov
adc
fisub
call
pop
push
jae
jg
xlat
pop
xchg
scas
movs
xchg
sbb
mov
lods
pop
int3
cmp
nop
mov
pop
lods
stos
pusha
in
sysenter
xor
sub
inc
add
int
in
push
mov
add
sub
lahf
int3
scas
aad
sbb
xchg
clc
push
dec
add
jmp
scas
pop
push
push
and
nop
dec
or
les
sbb
daa
mov
xor
addr16
inc
ror
pop
xor
push
cmps
jmp
imul
or
mov
int
push
sbb
add
dec
adc
cmp
push
sub
xor
or
iret
cmp
fiadd
fadd
test
iret
sub
shl
add
in
ficomp
sbb
and
and
inc
inc
sar
xor
dec
fucompp
call
xchg
pusha
stos
cmc
jns
pop
imul
mov
jmp
sub
inc
push
sub
pop
pushf
cmp
mov
(bad)
es
cmp
dec
mov
mov
and
add
mov
call
push
mul
or
push
push
adc
movs
mov
pop
les
pop
test
gs
test
pop
out
add
jg
sub
out
sbb
aad
dec
out
dec
add
ja
push
jne
mov
shl
sbb
mov
add
mov
pusha
jecxz
push
add
mov
ror
ja
hlt
or
mov
or
bound
pop
ja
or
out
push
jg
push
ja
xchg
arpl
add
mov
fdiv
push
test
je
je
sar
pop
imul
push
nop
inc
adc
cmp
jp
enter
add
sti
push
ficom
jno
das
nop
adc
sbb
imul
push
push
lods
pop
and
cmp
xchg
or
or
aad
xchg
xor
cmps
mov
xchg
mov
push
add
push
aam
fld
cwde
mov
test
cmp
jns
mov
pop
mov
push
mov
bswap
leave
leave
enter
xchg
mov
add
dec
cmp
icebp
pop
push
jno
push
push
adc
dec
mov
xor
adc
js
or
(bad)
or
mov
test
inc
xchg
les
push
inc
in
mov
xchg
add
push
xlat
inc
mov
push
push
or
icebp
je
or
or
xchg
dec
dec
ins
push
add
adc
stos
cmp
push
add
call
sbb
es
ins
mov
cmp
mov
test
xor
add
adc
xchg
and
ror
xor
dec
les
xchg
push
loopne
test
xchg
xor
xchg
add
clc
xchg
push
add
jae
xchg
mov
movs
or
movs
sub
sub
push
lock
xor
dec
sub
std
mov
mov
paddusb
xchg
add
pop
sbb
dec
cmp
mov
pop
daa
lods
push
xchg
aaa
and
push
or
jbe
mov
add
(bad)
aas
xchg
add
test
in
and
add
xor
xchg
add
mov
and
ins
dec
xor
test
nop
(bad)
jb
dec
jl
adc
das
mov
movs
add
pop
inc
push
cmp
and
lds
das
pop
adc
add
cdq
imul
cmp
pusha
les
lock
lahf
pop
pop
lods
les
into
shl
push
and
add
sbb
push
add
jo
fldenv
push
xchg
jg
out
or
loopne
add
cmps
je
push
or
je
xchg
outs
push
lods
stc
pop
mov
rol
stc
daa
jo
adc
cmps
adc
(bad)
movs
sahf
mov
push
out
pop
pop
xlat
push
call
cmp
mov
pop
sub
test
mov
shr
dec
aaa
sbb
sub
push
stos
push
cli
pop
outs
push
aaa
fbstp
add
(bad)
(bad)
sbb
xchg
(bad)
and
sbb
cmp
popaw
jne
je
inc
or
les
and
xor
fldenv
rcr
and
add
out
ror
fs
das
xchg
dec
daa
add
inc
or
cwde
and
test
dec
mov
pusha
inc
inc
pop
cmp
fst
lahf
sub
mov
and
jne
arpl
lods
push
push
test
rol
sub
sbb
ins
sub
es
das
inc
jne
(bad)
push
adc
sbb
push
test
mov
add
jl
das
aam
xor
lea
pusha
shl
adc
cld
shl
imul
push
jge
(bad)
and
cmp
pushf
aaa
or
inc
adc
add
fsubr
ins
inc
add
fadd
aaa
mov
loopne
mov
mov
sub
sti
sar
sti
push
pop
add
sub
movs
mov
lock
mov
das
daa
sub
inc
icebp
jp
je
outs
adc
xor
push
mov
mul
pop
xor
adc
push
(bad)
cld
mov
imul
and
add
adc
or
test
mov
jae
shr
push
ins
movs
add
dec
out
fldcw
add
mov
or
outs
push
loop
mov
cmp
or
cmp
inc
mov
arpl
and
imul
inc
das
xchg
mov
out
and
outs
movs
in
in
out
cmp
jb
jb
xor
add
daa
dec
jo
jns
jb
int
xor
cmp
cmp
loope
pushf
mov
fucomi
test
cmp
or
fidivr
sub
jae
add
imul
pop
push
push
xchg
or
(bad)
mov
dec
or
aad
xor
cmp
fs
jno
loope
dec
ror
jae
aaa
inc
mov
(bad)
xor
xchg
lods
pusha
cli
dec
add
jg
imul
js
push
adc
dec
mov
push
mov
xor
add
test
scas
inc
push
mov
add
push
icebp
mov
add
fsub
ss
ins
scas
outs
cmp
sub
sbb
xchg
or
imul
ja
inc
jbe
dec
stc
push
push
or
push
jae
add
enter
call
dec
sub
add
loopne
or
push
xor
dec
add
and
das
leave
call
inc
popa
fist
shl
add
popa
arpl
pop
inc
inc
push
inc
or
popf
pop
loope
add
jae
imul
test
mov
push
mov
add
div
adc
inc
mov
imul
inc
movs
sbb
lea
sub
inc
mov
stos
xchg
or
ret
pop
jmp
push
lock
mov
xchg
sub
cdq
ss
fisubr
cdq
xchg
popf
sub
push
push
mov
js
xchg
xor
loope
(bad)
pop
add
xchg
les
or
ja
lahf
pop
arpl
mov
inc
mov
and
lds
dec
popa
inc
nop
cwde
out
and
add
cli
jo
dec
cmp
sub
inc
and
(bad)
loope
and
adc
mov
mov
aad
adc
imul
push
out
mov
add
push
or
daa
sahf
jb
int3
xor
inc
mov
sbb
scas
bound
push
test
xor
inc
jl
inc
fmul
mov
dec
sbb
ins
or
loop
inc
sbb
or
adc
mov
fld
stos
popa
pop
add
xchg
or
pop
jo
adc
pop
sub
cmp
aas
xor
xchg
or
sbb
push
jmp
add
xchg
cmp
arpl
(bad)
sub
xchg
jnp
add
cmp
imul
and
aas
popw
pop
pop
arpl
mov
xchg
ss
xor
xchg
jns
dec
lods
sbb
sbb
add
and
sbb
data16
jmp
dec
lea
inc
lds
dec
fld
jae
mov
pop
ret
xlat
inc
push
js
sar
push
cmps
mov
cli
bnd
push
push
aam
les
push
ins
lahf
jo
pop
pop
es
pop
adc
xor
aaa
cmp
rcr
movd
push
fadd
xchg
xchg
int
arpl
pusha
add
mov
pusha
adc
stos
dec
sbb
das
cmp
dec
mov
sbb
loope
inc
add
jbe
aam
xchg
push
add
adc
frstor
pushf
das
mov
popa
xor
push
xchg
xchg
xchg
push
(bad)
icebp
jecxz
adc
icebp
daa
lahf
(bad)
jo
push
mul
push
mov
fsubr
fild
add
push
lods
aaa
lods
push
xor
or
dec
inc
sub
in
lods
das
dec
or
dec
cli
cmps
push
add
scas
adc
mov
mov
adc
popf
cmp
cmp
(bad)
add
jl
pop
imul
outs
test
rol
cdq
add
scas
adc
mov
pop
inc
jmp
add
pop
xor
and
adc
mov
xchg
sub
mov
cmp
out
test
das
test
or
loopne
in
call
lock
add
push
mov
aam
dec
dec
scas
fadd
in
sub
push
mov
cwde
push
inc
xchg
or
push
retf
loopne
or
xor
add
add
pop
or
lods
daa
or
mov
stos
int3
push
push
or
stos
pop
outs
jbe
push
sub
sahf
push
mov
push
jno
(bad)
aas
aas
cmp
xchg
imul
imul
mov
rcr
popf
sahf
cmc
cmp
popa
stos
push
pop
push
push
lea
jae
js
jo
jmp
aas
in
and
add
inc
cmove
mov
push
ds
pushf
fsub
js
and
(bad)
retf
dec
dec
inc
sahf
pop
inc
dec
xchg
jecxz
daa
and
inc
push
mov
or
leave
leave
enter
inc
push
sahf
fs
leave
ret
out
inc
xor
in
in
lahf
in
es
jbe
jb
dec
jno
icebp
aas
jbe
xor
dec
emms
call
mov
(bad)
push
cs
add
sub
repnz
dec
cdq
inc
sti
adc
push
mov
sub
iret
aaa
je
movs
fcmove
jno
or
cmp
shl
jae
das
aas
mov
movs
dec
inc
mov
int
aaa
mov
(bad)
jg
or
mov
push
fs
lods
cdq
cmp
jl
jb
aam
dec
ins
push
stos
ss
sub
nop
outs
push
call
jbe
push
add
push
sar
test
aaa
or
(bad)
adc
inc
mov
push
mov
or
aam
loope
sub
and
ror
call
gs
or
retf
test
pusha
outs
aaa
or
pop
pop
xor
push
aaa
ins
iret
push
dec
sbb
aaa
inc
test
sbb
inc
mov
and
cmp
aaa
mov
ss
push
aaa
jae
retf
or
aaa
and
int
ins
xchg
cdq
mov
nop
cwde
aaa
jne
xor
add
aaa
xchg
(bad)
dec
push
jmp
aaa
ror
xchg
adc
mov
in
inc
inc
(bad)
loopne
sub
scas
aaa
inc
nop
cld
mov
and
sub
xor
dec
aaa
inc
stos
(bad)
or
mov
ins
aaa
mov
es
and
push
aam
jae
xchg
sti
and
add
push
cdq
dec
ror
xor
adc
dec
aaa
test
fcmovbe
jge
inc
sti
mov
and
movs
adc
ss
add
ss
ja
jmp
dec
aaa
pushf
mov
inc
sbb
xor
sbb
mov
or
inc
bound
sub
inc
cmp
xor
aaa
unpckhps
shr
xchg
inc
add
or
jb
aaa
imul
imul
pop
pop
and
sbb
popa
ja
mov
aad
into
call
pop
mov
and
das
loopne
mov
push
cmp
push
imul
pop
mov
sub
inc
pop
test
push
mov
add
push
cmp
inc
mov
mov
fs
add
xor
out
lea
hlt
ds
loope
sbb
cwde
add
gs
or
push
xor
outs
sub
out
mov
ret
in
or
sub
add
or
xsave
inc
dec
cld
inc
adc
adc
sub
shl
ror
in
pop
sub
adc
out
ss
add
pop
enter
jno
adc
sbb
cmps
cmp
push
dec
inc
inc
sub
mov
fcom
mov
sub
push
mov
std
jnp
xor
aad
aam
add
cmp
mov
dec
das
pop
dec
pop
inc
push
fsubr
das
jle
das
push
add
xor
push
xchg
xchg
or
rol
push
inc
inc
push
rcl
aaa
daa
stc
mov
sbb
dec
sub
mov
cdq
xchg
pop
xor
loope
jo
push
clc
scas
sub
push
jbe
dec
inc
sub
shl
jo
(bad)
bsr
xchg
pop
setns
push
push
inc
mov
adc
shr
fadd
lods
or
daa
mov
jae
add
xor
jae
sbb
shl
jae
mov
je
out
inc
daa
pop
add
adc
fadd
jecxz
pop
push
push
add
jl
aaa
inc
cwde
adc
out
stc
push
test
inc
add
adc
or
adc
pop
lock
and
sub
fld
test
adc
adc
push
outs
loopne
scas
popf
adc
sbb
dec
das
pop
push
xor
imul
sahf
inc
cmp
fs
inc
addr16
add
adc
add
call
inc
mov
cmp
cmp
leave
rcl
or
or
pop
add
add
or
inc
push
rcl
(bad)
movs
je
jns
and
cmps
sbb
arpl
inc
push
pop
dec
cdq
scas
add
nop
repnz
mov
imul
test
pop
and
scas
ror
cmp
sbb
or
pop
push
xor
cli
mov
mov
and
loop
fcom
movs
fsub
loopne
loope
adc
or
adc
adc
or
div
sub
sbb
ret
(bad)
add
sar
sar
(bad)
mov
inc
sub
sbb
loope
mul
(bad)
push
sub
mov
imul
sbb
(bad)
repnz
mov
push
and
add
call
push
adc
xlat
and
loopne
adc
add
imul
xlat
mov
fld
idiv
pop
nop
setle
pop
mov
sub
nop
push
mov
add
push
push
hlt
aaa
retf
addr16
inc
in
pop
mov
or
(bad)
aad
sub
push
ja
mov
add
fcomp
jbe
add
dec
sti
mov
lahf
push
mov
sub
and
jne
jg
inc
or
xor
inc
inc
or
mov
rcl
mov
gs
loop
dec
jecxz
dec
stos
pop
pop
pop
loop
cwde
shr
jecxz
push
jecxz
push
imul
jg
(bad)
retf
jg
in
mov
lds
jo
push
je
movs
das
adc
daa
fdivr
daa
fst
adc
fdivr
push
jo
add
pop
or
cwde
mov
or
cmp
xor
call
add
fadd
or
sub
or
cmp
pop
imul
or
push
ja
test
aam
imul
cmp
out
pushf
sub
ins
pop
jmp
cmp
outs
das
mov
icebp
cmp
jmp
mov
jno
out
push
out
outs
push
jns
and
xchg
ret
push
fadd
lds
movs
fdivr
test
out
(bad)
pusha
push
push
stc
or
add
dec
jne
test
inc
or
rol
lock
outs
sub
ret
push
outs
retf
fiadd
add
mov
das
repz
outs
push
call
idiv
ds
jne
push
or
push
outs
dec
scas
xchg
add
jne
push
mov
ins
(bad)
xor
movs
sbb
jmp
pop
dec
pop
lods
sub
sub
mov
and
push
cmp
or
fidiv
mov
mov
cmp
push
xchg
pop
das
das
pusha
push
xor
mov
jbe
or
hlt
jl
mov
neg
mov
push
fwait
sub
out
and
call
ret
add
xor
xchg
sbb
xchg
adc
imul
mov
inc
jb
ja
push
popa
jae
es
push
inc
dec
outs
jo
dec
bound
cs
daa
cmp
pusha
bound
iret
xor
loopne
ins
dec
xor
xor
sub
adc
outs
mov
xor
inc
sahf
fcomp
addr16
sub
call
mov
push
jb
xor
mov
bound
dec
mov
fisub
arpl
mov
sar
mov
jo
xor
jae
jno
cmp
cmp
mov
imul
or
xchg
int
div
jp
dec
and
sub
jno
dec
add
inc
inc
push
adc
das
xchg
mov
cmp
push
idiv
and
or
mov
mov
bound
pop
outs
outs
and
inc
fs
cmps
push
mov
jne
test
cmp
push
out
sub
retf
xchg
add
adc
sbb
push
mov
aaa
loopne
inc
jns
add
push
or
adc
jle
mov
inc
mov
add
dec
das
push
loopne
lds
add
push
push
xor
popa
mov
and
ds
mov
jg
xchg
dec
jb
pop
out
xor
push
nop
and
dec
pop
cwde
rcl
mov
add
push
inc
xchg
add
cmp
or
xor
mov
add
aam
pop
or
add
test
lds
in
mov
int
mov
push
sub
leave
inc
inc
mov
rol
pop
adc
sbb
and
dec
add
xor
repnz
cli
or
or
add
pop
movs
data16
inc
dec
sub
fadd
push
push
add
jae
cmp
add
inc
and
cwde
inc
or
or
jae
sub
pop
dec
or
dec
add
inc
xor
adc
push
sbb
push
jo
outs
mov
sbb
push
test
add
add
jae
out
inc
sub
cmps
(bad)
cld
pop
dec
mov
ins
addr16
add
je
or
pop
inc
test
(bad)
test
xchg
loopne
mov
mov
jmp
sub
ror
mov
xchg
inc
jns
out
mov
cmp
add
lds
push
vpcmpgtd
or
es
daa
pop
mov
dec
push
push
aam
xlat
loop
jno
pushf
popf
push
aaa
retf
(bad)
loope
aad
fnstcw
xor
sbb
(bad)
cld
fwait
inc
pop
adc
lds
pop
push
mov
pop
xor
xlat
movs
cmps
sbb
test
inc
sub
test
add
jmp
adc
mov
xchg
or
inc
inc
or
inc
pop
push
lock
add
imul
daa
jns
xchg
inc
add
xlat
pop
mov
(bad)
xchg
neg
pop
int3
ror
ins
or
mov
or
aam
add
push
add
push
push
cmp
or
aaa
loop
ins
sub
mov
mov
push
push
cmp
mov
neg
mov
mov
push
es
out
dec
adc
jge
adc
sub
add
inc
adc
or
pop
dec
or
or
dec
retf
jo
jp
test
xor
aaa
je
sub
lods
sar
mov
push
adc
pusha
mov
and
add
pop
inc
cmp
imul
pop
cmps
lods
pop
add
outs
fsub
(bad)
sti
push
mov
mov
loopne
add
lds
clc
out
push
out
ret
add
xchg
sbb
dec
not
mul
shl
sub
mov
add
sti
or
stos
add
or
dec
inc
test
mov
pushf
sbb
arpl
lods
add
adc
icebp
int
mov
mov
and
jno
push
unpckhps
outs
adc
cwde
jno
cwde
pop
xor
jno
fmul
ds
int3
jne
and
sub
sub
jae
jo
lods
int3
sbb
xchg
xor
int
pop
mov
mov
ret
sub
push
(bad)
les
fs
gs
(bad)
push
jae
push
lds
jl
call
out
and
push
push
xlat
loope
out
push
cmps
sbb
cmp
add
inc
and
lds
daa
scas
lahf
dec
scas
imul
dec
lods
out
call
xor
inc
fild
fisttp
sub
adc
outs
ins
add
jo
shr
jno
push
add
pop
or
mov
cmp
rol
sub
es
mov
cs
push
add
scas
or
cmps
sahf
inc
cmps
jnp
call
adc
sbb
bts
mov
lock
push
push
lock
fnstsw
cmp
ss
(bad)
and
rol
imul
lods
xor
xchg
retf
sbb
pop
or
out
(bad)
cmp
es
(bad)
scas
sbb
push
mov
sub
in
cmp
mov
fsubr
push
inc
stos
inc
mov
push
sbb
lds
dec
push
fadd
cmp
call
stos
stos
(bad)
jo
xlat
stc
push
push
cmp
xlat
jmp
dec
xlat
dec
aad
xor
mov
sub
mov
addr16
in
mov
and
or
add
js
and
jns
es
push
scas
mov
adc
cmp
ins
mov
fld
add
call
ja
sbb
xchg
xor
mov
sub
xor
add
adc
js
pusha
mov
xchg
sbb
push
push
sub
arpl
out
test
aaa
cmc
mov
push
imul
jp
inc
push
dec
add
sti
push
jmp
push
adc
pop
push
test
idiv
(bad)
out
mov
sbb
xchg
push
lods
mov
push
pop
adc
mov
or
outs
stos
test
pop
nop
aam
xor
push
or
sub
stc
push
pop
xchg
xchg
xchg
fnstenv
jl
imul
ds
gs
scas
movs
pmulhuw
xlat
sbb
imul
stc
xor
push
out
test
mov
int3
cpuid
cmp
cmps
test
mov
mov
dec
xchg
cmp
cmp
bound
test
sbb
aam
rcl
or
add
cmp
in
xchg
adc
push
sub
repnz
push
lock
sbb
mov
push
or
sub
or
sahf
pop
out
fwait
ins
and
inc
inc
adc
push
cdq
sbb
push
stos
sbb
xor
dec
rol
push
add
sbb
mov
pusha
xchg
mov
push
inc
add
sbb
sub
pop
dec
add
mov
mov
cmp
pop
xchg
sbb
lea
les
aam
outs
sbb
mov
or
ins
inc
imul
push
add
add
or
xor
mov
mov
call
sbb
push
sbb
cmp
jo
mov
or
call
shl
xor
jge
add
or
and
sbb
sub
pusha
pop
mov
sbb
adc
push
adc
sbb
mov
pop
add
in
or
fld
ret
sub
cdq
add
dec
daa
pushf
inc
hlt
outs
test
xchg
fisub
push
pusha
adc
cld
mov
mov
call
pop
lods
aad
add
bound
push
ret
dec
xor
or
cmc
jbe
out
cmp
xchg
pop
js
xchg
push
cmp
mov
test
adc
inc
xlat
loope
xchg
adc
test
cs
stc
mov
push
pop
pushf
in
movs
std
pop
je
xlat
sbb
add
int
out
pop
inc
sbb
or
inc
nop
and
jb
sti
mov
sub
adc
ret
pop
gs
pop
fnstcw
inc
inc
in
mov
sub
push
hlt
sub
pop
outs
push
or
push
loope
add
test
(bad)
dec
mov
in
pusha
inc
jp
and
add
mov
popaw
jne
je
inc
or
and
jne
push
and
popf
sar
add
(bad)
inc
sbb
add
iret
nop
popa
jo
cmp
or
add
inc
and
ds
xchg
and
ss
mov
add
je
mov
pop
je
sub
cwde
push
je
inc
jne
arpl
pop
mov
ror
mov
jg
mov
arpl
jns
adc
nop
jg
jl
or
in
movs
call
fld
add
inc
sbb
rcr
cmps
and
cmps
fdiv
add
lea
push
ins
sub
(bad)
pop
xor
sbb
dec
push
add
inc
cvttps2pi
add
movs
jecxz
and
xor
ds
pop
pop
mov
cmp
outs
adc
xlat
add
add
mov
shl
dec
sub
add
sub
jmp
push
shr
mov
test
mov
ins
add
mov
sbb
jnp
ins
call
mov
les
ds
cmp
addr16
add
or
sahf
cmp
sub
movs
push
inc
or
jo
and
jae
sbb
cmp
(bad)
sub
in
pushf
xchg
fstp
adc
mov
inc
jge
push
mov
dec
cmp
push
inc
cmp
mov
jle
cmp
lea
loop
dec
inc
sahf
xor
daa
and
(bad)
aas
mov
xchg
xchg
xchg
daa
or
enter
out
xchg
xor
leave
leave
leave
push
in
in
fs
jo
lock
in
or
xchg
pcmpeqd
test
movs
mov
test
ret
hlt
push
and
inc
cmp
or
cdq
inc
sti
xor
popf
dec
mov
or
scas
ror
test
jno
push
loope
sub
daa
xor
pusha
xor
xchg
lods
pusha
inc
outs
dec
cmovns
(bad)
cmps
inc
inc
dec
jae
int3
push
adc
jae
mov
jg
movs
dec
mov
inc
dec
jg
add
test
mov
mov
cmp
lahf
or
outs
sub
push
xchg
sbb
bound
pop
pop
or
mov
pop
add
fidiv
adc
jl
mov
push
dec
inc
mov
jae
dec
add
scas
push
dec
mov
or
add
jno
sbb
xchg
and
das
leave
call
gs
inc
push
fdivr
popa
arpl
pop
xor
clc
mov
cld
bound
pop
dec
jae
imul
leave
pop
ins
cs
dec
iret
dec
add
mov
imul
loopne
retf
inc
imul
add
push
ret
mov
sbb
lea
dec
rcl
add
push
sbb
xor
pop
or
xchg
sti
adc
cdq
inc
xor
mov
xor
xchg
push
out
mov
mov
stos
mov
xor
pop
xor
adc
xacquire
lock
dec
gs
and
inc
inc
(bad)
or
mov
xchg
fisttp
(bad)
nop
add
xchg
dec
add
or
jo
shl
pop
push
jae
dec
aaa
ror
(bad)
movs
xchg
jo
call
and
cmp
ins
mov
mov
mov
imul
add
out
cmp
test
push
or
daa
sahf
jns
adc
mov
xor
outs
xchg
sub
inc
sti
jbe
ror
dec
mov
js
inc
loop
dec
sbb
and
or
adc
and
popa
pop
add
or
xchg
cmp
add
loopne
sub
mov
pop
or
xor
xor
ror
dec
leave
(bad)
mov
shl
je
mov
mov
xor
shr
sub
adc
imul
dec
pop
arpl
and
sub
mov
sbb
mov
or
inc
in
adc
add
sbb
mov
inc
xor
adc
cmp
loope
inc
inc
outs
movs
(bad)
mov
mov
movs
ret
mov
mov
sbb
pusha
sub
in
adc
das
xor
lds
mov
and
shl
cwde
adc
outs
arpl
(bad)
das
pop
and
sbb
scas
lds
mov
pop
clc
fmulp
mov
fisub
or
and
sub
or
fs
pop
adc
lods
call
mov
int
jo
mov
dec
imul
xor
fadd
call
jnp
jecxz
inc
mov
push
mov
or
mov
dec
or
dec
add
cmps
cmp
add
adc
xor
scas
enter
(bad)
loopne
outs
ins
push
xchg
push
inc
mov
inc
push
aad
sbb
pop
(bad)
xchg
imul
bound
add
aad
push
sub
xor
adc
push
jb
cmc
inc
add
pop
arpl
pop
jo
adc
mov
add
and
add
call
fs
mov
add
test
cmps
test
cmp
pop
aad
inc
loope
daa
(bad)
stc
adc
fst
add
(bad)
xlat
pusha
fwait
pop
or
das
call
bound
mov
xchg
jne
push
mov
push
out
imul
mov
mov
dec
jo
and
pop
into
test
test
shl
sub
push
mov
aas
pop
xor
lea
or
add
or
das
adc
scas
lea
add
jmp
push
rcr
adc
push
sar
inc
repz
and
add
dec
pushf
cmps
cmp
push
sub
jg
or
push
push
inc
sbb
add
mov
add
add
outs
add
xor
inc
adc
popf
out
add
add
loopne
inc
test
(bad)
add
pusha
inc
(bad)
cmp
(bad)
aas
shr
inc
aam
add
mov
push
fsub
pop
push
add
sub
test
mov
jp
xchg
push
scas
push
pop
push
add
add
retf
inc
pop
js
jnp
fdiv
xchg
push
std
inc
xlat
jno
push
and
ror
fadd
mov
jae
or
or
pop
pop
inc
loop
push
mov
inc
mov
xchg
loopne
xchg
or
les
xor
fimul
cmp
scas
xor
sbb
cmp
call
imul
test
ror
ss
cmp
add
inc
add
outs
mov
in
(bad)
loopne
and
and
pop
test
push
sbb
cmp
movs
mov
xchg
xchg
(bad)
movd
enter
ret
in
in
xor
sahf
jmp
push
in
cmp
sbb
test
mov
cmp
adc
sahf
pushf
retf
add
ret
dec
dec
xchg
aas
stos
orps
(bad)
mov
adc
ins
push
xchg
(bad)
xor
sbb
add
mov
retf
inc
xlat
in
pop
scas
pop
cmp
loop
stos
aam
push
dec
or
mov
ret
or
arpl
mov
cmovbe
sub
xor
adc
test
inc
pusha
jg
add
push
mov
push
mov
(bad)
cmp
in
xlat
push
inc
in
ins
push
mov
clc
outs
or
inc
jbe
stos
push
lea
adc
adc
or
jbe
jae
and
mov
sub
jo
xchg
mov
js
mov
sub
and
ror
call
test
sbb
mov
in
push
enter
ror
pop
lods
test
add
or
mov
movs
mov
movs
shl
push
rcr
mov
mov
jae
inc
add
mov
ins
xchg
cdq
push
add
ss
cwde
mov
xchg
popf
dec
add
mov
sbb
mov
push
add
add
add
mov
rcl
mov
pop
nop
fist
bound
add
jo
push
cmp
add
or
sub
shr
inc
mov
cmp
ins
inc
mov
add
cmp
mov
cdq
dec
sub
push
shl
inc
add
dec
mov
jge
inc
sti
mov
mov
mov
xor
and
adc
adc
xchg
dec
add
mov
mov
sbb
aas
pop
dec
jmp
bound
arpl
pop
loop
test
xor
fcomp
shr
xchg
inc
add
imul
dec
or
pop
dec
sub
sbb
into
ficom
out
enter
add
or
mov
or
scas
pusha
push
jbe
add
mov
or
pop
push
add
sti
jo
stos
and
sti
fidiv
xor
mov
out
push
cmp
xchg
stos
push
ins
mov
inc
pop
inc
xlat
xchg
ins
(bad)
jno
int
xor
enter
retf
leave
fdiv
in
lds
inc
(bad)
les
fsubr
push
(bad)
cmpxchg
repnz
dec
(bad)
or
push
pushf
pushf
ja
add
cmp
aam
or
and
mov
(bad)
push
je
jns
sub
and
add
int3
fisubr
hlt
dec
scas
cmovl
shr
cdq
(bad)
lock
add
push
jmp
add
in
lock
add
push
ins
sub
wbinvd
scas
add
lsl
repz
je
xor
mov
push
sub
push
pusha
jg
in
cmp
test
mov
ds
sbb
mov
pop
lock
inc
xor
sub
repnz
xor
outs
addr16
lods
or
and
lock
sbb
pop
mov
gs
jle
push
in
or
pushf
dec
mov
pop
stos
gs
lds
xchg
push
xchg
ret
or
adc
xchg
or
inc
and
push
mov
inc
pusha
xchg
and
sbb
inc
ret
xor
adc
cli
pop
cmp
push
ins
push
nop
adc
loopne
lea
popa
adc
push
gs
pusha
out
xlat
or
add
fsubr
dec
data16
add
push
pop
mov
jno
ins
jmp
adc
arpl
out
or
clc
sbb
js
mov
xchg
or
mov
pop
dec
add
fsub
mov
shl
mov
push
adc
dec
rcr
or
push
mov
add
mov
sbb
push
push
add
sub
lock
pop
shl
pop
ss
addr16
les
push
nop
pop
inc
and
dec
jmp
add
punpckhbw
push
mov
mov
addr16
gs
ja
sar
push
mov
aaa
es
jnp
push
ss
lock
mov
sbb
repz
jae
sahf
xor
push
js
xchg
mov
fdiv
je
adc
lock
sub
xchg
out
jnp
jns
enter
inc
lods
push
mov
push
pop
sti
sahf
neg
nop
push
je
inc
pusha
inc
push
aam
mov
or
sub
inc
adc
idiv
push
push
push
push
push
(bad)
clc
fs
clc
imul
(bad)
or
out
pop
push
pushf
cs
popa
push
dec
push
cmp
pusha
push
push
cwde
push
mov
jl
loope
in
outs
call
arpl
xor
fdivp
fimul
fcomp
add
jnp
shl
xor
push
xor
adc
jle
push
repz
mov
push
test
jnp
repz
push
pushf
sub
out
mov
push
test
xor
ins
push
aam
in
enter
sbb
add
js
add
mov
cli
pop
clc
pop
dec
push
inc
das
pop
add
ins
ja
fs
sub
scas
cmc
js
add
dec
cli
idiv
fcmovnb
add
nop
push
(bad)
push
pop
add
sbb
push
outs
jae
lahf
mov
cmps
cmp
cmc
lea
js
sar
xor
sbb
dec
jae
out
jno
inc
pop
ins
dec
lds
stos
movs
cmp
pop
fmul
add
sub
add
ret
scas
or
lds
adc
cdq
mov
lds
xchg
aad
neg
pop
cmp
in
mov
lock
mov
scas
cmp
or
and
enter
test
inc
mov
jno
je
call
sub
(bad)
out
push
jno
and
push
out
mov
or
push
cmp
fadd
jne
xchg
push
inc
push
fld
ins
out
aas
femms
fsubp
aam
push
push
xor
loopne
mov
call
test
jge
jp
mov
ss
push
mov
nop
jnp
push
sub
sbb
ja
push
pushf
push
inc
dec
push
stos
sbb
hlt
or
aas
xchg
outs
pop
lea
add
adc
test
(bad)
push
imul
aad
jp
and
and
mov
jge
sbb
jnp
in
push
jno
retf
fucom
js
dec
aad
mov
fiadd
sub
or
mov
and
jae
outs
cmp
push
nop
retf
and
test
sub
xlat
dec
jmp
fucomi
test
enter
jge
push
mov
mov
mov
mov
iret
repz
fs
xchg
pop
or
iret
repz
les
repz
ret
add
shr
in
lar
pcmpeqw
cvtps2pd
jmp
cld
syscall
add
push
xor
stc
jb
popa
sahf
push
mov
or
in
cld
sub
or
pop
ror
prefetch
xor
mov
pop
scas
push
add
or
lods
inc
push
inc
ins
outs
jae
fs
jns
gs
pop
adc
js
ins
fstp
add
mov
test
cmps
or
dec
jb
nop
outs
add
pop
popa
test
cmp
lea
mov
stc
out
stos
loop
pop
call
adc
idiv
fcom
outs
je
iret
addr16
xor
inc
out
int
mov
or
xor
mov
outs
iret
jns
or
mov
iret
ss
sub
inc
sub
inc
push
lods
ins
jmp
inc
not
inc
outs
jne
fld
pop
adc
push
sar
retf
ins
movs
push
mov
in
pop
loopne
cwde
xlat
jb
adc
mov
xlat
pop
jecxz
pop
(bad)
cmp
cmp
int
push
pop
adc
int
sub
sub
int
hlt
add
sbb
or
xchg
add
daa
ficom
push
jb
add
imul
mov
mov
movs
loopne
xor
dec
sbb
popa
out
cs
cmp
inc
and
js
aam
mov
push
jp
(bad)
cmps
test
or
and
nop
push
jg
push
mov
push
add
push
mov
mov
xor
push
push
push
mov
mov
idiv
test
ins
pop
push
call
mov
mov
mov
push
rcl
cld
mov
sti
dec
mov
sbb
les
cmp
clc
mov
aas
clc
add
push
clc
mov
push
mov
sbb
movs
popf
mov
sbb
fistp
out
sub
mov
adc
jae
outs
sbb
dec
mov
cmp
pushf
mov
add
add
inc
and
xor
adc
aas
add
ja
push
es
pusha
lea
(bad)
jmp
jmp
ins
pop
pop
pop
inc
pop
ret
add
add
inc
loopne
jbe
gs
test
ins
adc
inc
int3
pusha
clc
add
inc
add
dec
shl
arpl
push
push
sbb
add
fmul
and
add
adc
xor
mov
test
or
outs
mov
(bad)
adc
imul
inc
push
or
mov
call
pop
neg
sub
pop
pop
adc
and
xor
stos
pop
xor
mov
sar
dec
pop
sub
imul
pop
dec
fdiv
test
je
xor
push
pop
mov
cmp
xchg
mov
mov
fbstp
sti
mov
and
fwait
jl
jle
adc
inc
pushf
scas
ja
adc
adc
sti
xchg
push
push
mov
push
dec
adc
adc
ret
inc
retf
push
mov
push
cld
in
xor
mov
add
and
fsubrp
mov
mov
clc
loop
xlat
fnstenv
push
sbb
mov
jmp
mov
movs
push
cmp
xlat
sbb
imul
lock
or
push
pop
adc
pop
js
out
mov
jno
sub
sbb
in
mov
pusha
cmp
ror
sbb
outs
js
inc
call
fmul
bound
cmp
mov
retf
in
jg
cmps
add
sbb
cmp
psrlw
jmp
jmp
sbb
or
call
mov
inc
inc
and
mov
jno
adc
sbb
jge
inc
jl
pop
repnz
in
sub
xchg
pop
add
(bad)
sbb
pop
inc
aas
xor
push
sub
lock
daa
das
pop
fs
mov
add
cmps
imul
adc
scas
pop
xor
mov
sub
in
in
push
das
out
jle
or
rcr
and
int
int3
je
out
fisttp
sar
mov
call
sbb
or
or
jne
and
push
lea
sti
add
adc
add
mov
xor
call
shl
iret
ins
inc
mov
mov
adc
inc
pusha
dec
enter
mov
vmovups
pop
iret
aam
retf
cli
fwait
or
inc
add
ror
fld
adc
loopne
retf
pop
fdiv
mov
in
lods
jo
je
mov
push
xor
call
jge
imul
clc
add
test
outs
mov
push
and
cli
sub
xor
imul
sub
cmp
jnp
mov
into
lock
test
jl
push
jl
add
call
(bad)
in
ret
lea
mov
ins
pop
sbb
sahf
hlt
dec
mov
push
sub
jmp
jne
jge
test
out
out
popa
mov
mov
mov
sub
adc
int3
sti
jnp
idiv
sub
mov
mov
jmp
sbb
pop
inc
dec
jne
add
sub
data16
js
mov
dec
mov
cmps
mov
add
push
xor
and
imul
xchg
jbe
xchg
(bad)
sbb
cmp
sbb
add
adc
push
sub
push
sub
call
lock
test
sahf
fist
push
xchg
mov
pop
xchg
rcr
cmp
rol
idiv
mov
jmp
dec
push
fidivr
rcr
je
stos
mov
or
pusha
ja
stos
sar
dec
inc
call
cs
gs
das
add
test
pop
add
push
icebp
mov
jle
gs
sbb
add
push
push
bound
sbb
pusha
dec
or
mov
add
cmp
or
cmp
dec
enter
jbe
mov
rol
je
enter
mul
sub
ret
mov
xlat
pop
add
xchg
into
cmc
aam
xor
xchg
rcr
jb
sbb
in
xor
inc
dec
mov
inc
sti
add
xor
dec
fdiv
cmp
pop
dec
sub
xor
sbb
push
es
cmp
fadd
sti
repz
in
loopne
sub
pop
push
fadd
add
adc
sbb
mov
mov
aas
mov
in
dec
inc
cwde
jecxz
ins
call
sbb
sub
stos
add
push
outs
adc
jae
mov
cmp
retf
mov
pop
push
addr16
adc
adc
cmp
(bad)
iret
test
or
adc
cmp
xchg
inc
mov
add
lea
les
leave
cmp
jae
jns
cld
pop
mov
add
inc
div
rol
cmp
(bad)
js
jbe
inc
(bad)
sub
cs
pop
(bad)
sub
cmp
mov
xor
push
pushf
cmp
lds
inc
pop
lods
(bad)
mov
lock
imul
pop
add
push
aaa
test
aaa
adc
add
bnd
je
jae
mov
enter
or
jns
pop
jns
cmp
cmp
cmp
jp
sbb
dec
mov
and
pusha
mov
cmps
shl
lea
mov
mov
xchg
mov
mov
enter
cmp
ds
xor
mov
mov
add
xor
sub
add
and
mov
shl
jecxz
push
sub
stos
dec
or
or
sbb
pushf
mov
arpl
or
ror
mov
int3
nop
xchg
js
pop
sahf
popa
test
dec
cld
inc
adc
adc
test
jne
push
out
enter
ja
rol
pop
bound
pop
lea
cmp
int
je
adc
test
dec
dec
jl
mov
icebp
dec
fadd
call
add
movs
pop
xor
xchg
mov
sbb
stos
push
test
or
add
and
aas
sub
pop
add
or
or
or
fwait
or
clc
push
and
shl
aaa
inc
fcom
or
xor
sub
add
jnp
push
outs
and
pop
call
test
je
je
int3
repz
aam
call
jmp
shl
push
pop
or
jge
ret
sub
dec
in
jne
mov
js
xor
je
sub
push
cld
sar
add
push
pop
xchg
aam
push
and
inc
jmp
push
push
movs
xlat
jle
mov
push
shl
add
xor
sbb
cmps
xchg
or
xor
xor
push
push
dec
or
shr
and
aaa
and
mov
dec
shl
dec
iret
and
mov
add
ret
loopne
es
sbb
pop
fadd
inc
neg
mov
test
pusha
sub
mov
cmp
cmp
cmp
sbb
(bad)
jns
and
in
test
xchg
or
mov
push
and
cmp
test
mov
call
or
out
cmp
jo
cmp
mov
inc
and
loopne
cwde
mov
(bad)
or
pop
inc
adc
call
cmp
je
add
pop
fimul
push
repnz
mov
cmp
mov
std
jecxz
fisttp
mov
adc
push
test
je
pop
cmp
sub
or
jno
inc
pop
loop
lahf
pusha
add
hlt
add
mov
(bad)
neg
fdiv
sbb
je
lock
xchg
je
iret
inc
fst
cmp
out
adc
retf
int3
push
pushf
dec
sbb
dec
sbb
mov
cmp
sbb
mov
jl
xor
and
push
push
lock
mov
fidivr
mov
adc
ins
ss
mov
mov
out
js
dec
(bad)
xchg
(bad)
lock
sub
pusha
adc
cli
lahf
pusha
in
ret
std
adc
mov
mov
jg
dec
clc
ror
ins
add
(bad)
daa
push
test
adc
pop
mov
enter
cmp
mov
inc
aam
lds
leave
shr
push
sar
gs
out
push
push
add
pop
mov
dec
js
not
aaa
pop
cmp
pop
pop
adc
pop
rol
data16
mov
jb
inc
bsf
arpl
fs
jno
and
inc
cs
inc
pop
push
xor
ss
in
mov
xor
ss
pop
js
loop
fdiv
aaa
test
mov
mov
push
push
addr16
dec
fisub
fsubr
jns
inc
sbb
outs
aam
xor
jg
pop
test
pop
xor
adc
pop
dec
adc
pop
xor
add
push
adc
je
adc
jo
push
sub
push
fwait
push
add
mov
aas
aam
aas
mov
push
scas
mov
inc
sub
xlat
or
push
xor
mov
xor
inc
nop
out
out
push
adc
add
push
nop
pop
push
push
imul
or
aas
cmp
xor
xchg
fcom
xchg
gs
loopne
les
push
aas
cmp
sbb
retf
jle
loope
push
vmulps
and
stc
push
les
adc
or
mov
fdivr
lods
mov
mov
xor
fimul
test
call
rol
inc
fcom
mov
pushf
data16
push
in
mov
xchg
in
mov
mov
mov
loopne
test
pop
and
iret
adc
push
popa
icebp
test
sahf
fst
mov
xor
xchg
mov
gs
out
sub
test
call
das
xor
loope
inc
sbb
stc
in
scas
ror
and
or
or
sahf
add
mov
lods
scas
nop
and
push
or
adc
add
and
and
into
repz
fdiv
jns
lds
mov
sub
sub
or
jmp
aad
pusha
xor
add
call
idiv
jne
add
ins
or
mov
call
fsubr
dec
inc
ins
rcr
dec
inc
rol
push
pop
dec
fcom
dec
test
hlt
and
jo
mov
dec
mov
push
lock
leave
cmp
mov
mov
xchg
inc
and
inc
clc
sbb
loop
sub
or
push
aaa
cli
push
inc
jb
pop
xchg
and
call
jne
fsubr
int3
pusha
dec
xor
js
cwde
aam
mov
aam
fdiv
sub
mov
call
jne
add
pop
mov
inc
shr
loopne
dec
loope
sub
mov
cmp
bound
stos
add
loopne
popa
and
fbstp
sbb
or
sbb
xchg
pop
mov
add
dec
mov
in
(bad)
sub
push
mov
fwait
and
addr16
fcomp
in
xchg
dec
outs
cmp
pop
outs
movhps
jp
pop
outs
push
xlat
call
lahf
add
jbe
movs
das
sbb
xlat
lods
jg
xchg
shl
add
mov
push
neg
jge
lds
dec
adc
add
dec
dec
adc
movs
add
mov
fsubr
dec
mov
test
push
lods
aaa
mov
or
xor
call
test
scas
fs
push
retf
fild
dec
sbb
dec
hlt
mov
rcl
pop
test
arpl
pop
int3
xor
mov
inc
or
xchg
xor
dec
and
dec
dec
je
lock
enter
jmp
cmp
sub
ret
hlt
jo
pop
cmp
add
daa
add
cmp
dec
jno
and
sbb
ret
popa
icebp
push
xor
(bad)
lock
call
popa
dec
enter
in
add
call
jnp
int3
sub
test
call
in
mov
push
mov
test
(bad)
rol
inc
sbb
out
fdivr
add
(bad)
cmp
mov
pop
sub
sbb
stc
inc
imul
cmp
push
mov
dec
mov
popf
(bad)
jne
jne
loopne
sahf
adc
mul
pop
jmp
imul
xor
cmp
mov
cmp
push
ins
fimul
pop
cmps
pop
or
adc
add
sbb
adc
ins
dec
fs
mov
daa
inc
sar
mov
lea
lds
sbb
aas
sbb
push
pushf
xor
adc
jns
adc
push
aaa
fcmovnu
inc
and
sub
xor
loop
aaa
push
fist
neg
fs
xor
push
add
lods
add
pop
ja
add
inc
dec
aad
mov
pop
fistp
test
adc
fidiv
leave
push
add
push
test
adc
dec
inc
cmp
or
push
push
retf
or
(bad)
cmp
nop
push
xchg
lods
cmps
fstp
jo
test
mov
and
and
mov
mov
jae
scas
push
or
popa
stos
repz
and
add
xor
loopne
retf
lock
es
sahf
dec
add
repnz
sub
in
scas
jnp
add
inc
mov
mov
dec
cmp
movs
mov
lods
iret
fcom
ins
add
(bad)
push
cmps
add
and
inc
cmc
pop
add
and
sbb
jno
adc
inc
ss
mov
sbb
add
push
cmp
mov
sub
add
sbb
in
sti
adc
add
scas
sbb
rcl
outs
ror
loopne
mov
mov
aas
push
mov
pusha
cmp
jmp
adc
aam
mov
out
ret
ds
pusha
ins
xlat
sub
add
call
jl
sub
jmp
sub
mov
loopne
adc
in
(bad)
sbb
scas
xor
inc
fiadd
sub
mov
js
mov
mov
inc
xor
cmp
inc
(bad)
in
xor
(bad)
pop
sahf
mov
and
(bad)
aaa
rcr
int3
pop
retf
add
adc
jo
pusha
dec
pop
dec
push
inc
cmps
rcl
call
or
mov
add
call
mov
and
adc
fiadd
xchg
mov
sahf
das
sti
sbb
(bad)
xor
mov
jg
outs
mov
out
cmp
pop
xor
sbb
push
jns
js
lods
mov
cmp
je
jmp
dec
call
cli
sbb
and
add
cmc
inc
js
mov
out
(bad)
pusha
inc
adc
mov
push
xchg
clc
je
add
add
pop
adc
clc
jmp
xchg
rol
(bad)
retf
mov
dec
cmp
test
add
sub
das
in
or
rol
add
add
cmps
add
pop
aad
(bad)
aad
or
clc
lods
in
ret
or
or
xor
hlt
lahf
xor
add
ret
add
push
les
adc
lock
mov
dec
test
jl
inc
popa
mov
fadd
cwde
push
pop
gs
popa
mov
cmp
add
out
std
lods
cmp
jne
fwait
xor
push
or
popa
adc
shl
xor
enter
cmp
fwait
into
ins
in
pop
mov
mov
adc
and
adc
or
in
xchg
data16
push
mov
push
add
jecxz
sbb
dec
adc
shr
add
xchg
mov
dec
test
iret
and
inc
mov
pop
adc
pop
sub
movs
lods
adc
inc
cli
cmp
call
or
jmp
out
xor
imul
popa
cwde
imul
mov
aam
stos
inc
xchg
jno
adc
jl
push
sahf
xor
enter
ret
fnstsw
cld
jge
push
push
inc
push
gs
add
xchg
or
cmp
dec
jnp
cmps
cld
mov
xor
loopne
sub
dec
lds
or
addr16
add
or
sbb
jne
or
nop
lds
enter
sahf
adc
push
ret
(bad)
mov
dec
movs
ins
sub
add
push
cld
push
or
scas
in
add
inc
inc
xor
xchg
mov
ror
xchg
xchg
lahf
fincstp
popa
js
jmp
ins
mov
push
adc
loop
sbb
shl
inc
adc
cmps
call
mov
hlt
jo
fsub
add
push
pusha
or
inc
mov
or
fnsave
xor
adc
mov
pop
or
rol
inc
and
leave
lock
mov
inc
push
(bad)
jge
mov
xchg
aaa
mov
ficomp
jbe
mov
test
iret
xchg
into
jp
scas
or
inc
aas
add
ror
jmp
addr16
add
or
mov
pop
and
mov
shl
fcos
inc
cmp
jmp
es
scas
dec
ret
cmp
add
or
in
popa
sub
mov
xor
adc
(bad)
or
arpl
add
fld
jmp
ja
ss
cmps
add
add
adc
cmovs
ror
inc
xor
adc
daa
pop
inc
call
rol
sub
pop
adc
aas
inc
and
mov
popa
hlt
mov
call
cli
mov
imul
push
mov
xor
cmp
adc
cmps
xchg
push
push
pop
in
(bad)
mov
cmp
movs
or
cmp
mov
mov
pop
in
jno
pusha
or
pop
adc
sbb
sbb
nop
stos
mov
jge
adc
push
or
lods
int3
mov
ficomp
and
rcl
repnz
and
ror
fs
out
fstp
add
fdivr
pop
jne
sub
cs
cmps
pop
clc
xchg
mov
adc
mov
adc
and
add
call
sti
sahf
jl
adc
cmp
jle
mov
adc
pop
retf
js
(bad)
add
imul
add
xchg
sub
scas
mov
mov
mov
scas
pop
test
aam
xor
mov
aas
div
cmc
xchg
jg
ja
cdq
push
inc
mov
push
mov
sub
dec
push
shl
push
daa
ss
stos
test
stos
jns
inc
rol
inc
dec
inc
fld
pusha
push
fwait
adc
ins
bound
add
call
or
adc
add
pop
or
imul
pop
and
jbe
push
and
or
mov
in
fs
dec
call
jnp
add
or
jns
loopne
sbb
mov
pop
out
xor
dec
lock
mov
(bad)
and
shl
mov
jmp
ret
lock
loope
xor
inc
adc
adc
loope
and
inc
call
call
pop
mov
clc
or
lock
jmp
adc
sbb
ja
cli
mov
je
jae
shl
mov
dec
aaa
jecxz
push
jecxz
push
data16
ret
adc
icebp
arpl
sbb
push
pusha
dec
sub
loopne
and
push
adc
scas
add
inc
es
mov
(bad)
retf
mov
jo
sub
mov
and
into
or
add
add
push
pop
or
or
or
push
movups
adc
in
loop
call
sbb
sbb
push
add
add
and
ins
sti
adc
and
hlt
shr
push
jnp
repz
repz
scas
mov
call
ss
out
sahf
inc
pop
imul
jns
mov
out
out
add
adc
and
inc
push
jns
out
push
jo
sahf
out
mov
or
add
xchg
test
enter
jne
xor
sbb
sub
push
push
inc
inc
sbb
and
and
cmps
jmp
iret
mov
(bad)
mov
xchg
in
and
(bad)
mov
gs
enter
test
in
xchg
sbb
jmp
push
cmp
js
sbb
ror
push
xchg
mov
pushf
and
xor
mov
jmp
jmp
mov
xchg
push
inc
enter
pmaxsw
push
cmp
fimul
sbb
ins
leave
add
inc
in
fsubr
or
and
stos
and
gs
and
push
fwait
and
jp
dec
jmp
sahf
inc
mov
pop
jl
loop
xchg
push
sbb
pop
jmp
sbb
and
adc
xor
and
lods
or
popf
add
mov
lea
pop
dec
inc
add
aam
cmp
push
or
adc
or
add
cmps
xor
in
xchg
fild
(bad)
ret
cmp
sbb
inc
ret
test
jne
sbb
mov
out
pusha
in
ret
inc
dec
mov
xor
pop
xor
or
es
or
push
mov
xchg
mov
test
dec
rol
jp
js
inc
(bad)
cmps
dec
cmp
int3
or
jmp
lea
test
sub
push
fsubr
push
inc
bound
adc
jle
sub
and
xor
xor
and
and
pop
sub
call
xor
(bad)
cmp
mov
mov
lods
and
bound
cmp
adc
rol
aas
ds
lahf
adc
mov
lock
popa
iret
cld
call
rcl
pop
mov
cmp
std
mov
mov
push
cmp
push
or
inc
jno
cmc
adc
inc
nop
loop
mov
inc
sub
scas
xor
cmp
jnp
test
setne
neg
div
das
test
xor
push
scas
out
fist
xor
(bad)
into
push
inc
adc
mov
push
and
add
or
and
out
pop
pop
outs
sub
sub
loopne
inc
nop
add
or
das
test
daa
push
nop
sub
add
ret
cmps
in
fbld
iret
dec
out
cmp
je
mov
(bad)
test
inc
add
aaa
adc
dec
mov
cmp
sbb
mov
dec
or
fidiv
je
popa
push
xor
ror
retf
xchg
sub
test
in
xor
jbe
xchg
xor
sbb
push
or
or
add
inc
or
js
sub
(bad)
fisttp
xchg
neg
inc
call
aas
sbb
cld
and
xchg
sbb
mov
pop
mov
pop
clc
and
ja
in
mov
out
cmp
adc
add
jmp
add
dec
fadd
call
outs
or
xor
mov
cs
fmul
sbb
out
pop
push
mov
cld
and
out
ins
and
cs
push
rcl
sar
repz
aaa
pop
push
iret
repz
mov
mov
test
repnz
add
adc
popf
out
push
and
ins
out
cmp
inc
adc
jns
mov
rcl
sub
mov
jmp
loopne
mov
and
jb
enter
jo
xchg
jb
enter
xchg
xchg
jae
fs
and
bound
push
or
cmp
mov
push
sbb
in
das
fs
nop
xchg
inc
inc
test
loopne
mov
mov
sbb
(bad)
and
dec
xchg
leave
push
and
and
cwde
and
test
cmp
sbb
imul
sahf
fwait
jecxz
aas
adc
xor
adc
push
push
movs
add
out
add
and
cmps
or
cmp
sbb
add
xor
test
lock
pop
call
push
out
dec
push
dec
add
rcr
pop
push
lods
xor
aaa
les
xchg
ss
adc
movs
data16
rol
xchg
or
lea
cwde
cdq
sub
ss
mul
mov
sbb
mov
stc
xor
xor
push
cmp
or
push
aaa
xchg
rol
arpl
push
sub
(bad)
es
call
es
dec
mov
fadd
xchg
push
inc
aas
and
neg
aaa
mov
and
pusha
data16
cs
shl
fidiv
xchg
pop
push
imul
daa
pop
sbb
xchg
stos
mov
es
pop
sbb
fdivr
push
data16
cmp
xor
jecxz
dec
int3
int3
inc
adc
dec
fs
dec
ds
jp
jo
jae
out
add
push
(bad)
mov
out
jne
add
arpl
lahf
outs
rol
xchg
xor
aaa
(bad)
xor
add
popaw
push
jg
fisttp
adc
mov
call
in
aas
data16
xor
adc
add
push
pop
push
push
push
push
test
add
les
pop
in
imul
(bad)
cld
add
in
inc
cmp
add
or
call
inc
jmp
in
mov
in
ins
jae
jmp
jb
hlt
es
mov
in
push
loopne
xor
imul
inc
les
ja
and
out
(bad)
xor
dec
push
adc
aas
ds
add
adc
mov
aam
push
and
add
movs
jbe
dec
pop
lock
mov
test
push
jmp
lods
xor
cmp
mov
add
mov
xchg
dec
xor
out
or
ins
dec
mov
sbb
push
cmp
inc
sub
test
mov
or
(bad)
rol
mov
into
std
mov
rol
rol
add
addr16
and
add
sub
aam
nop
mov
add
test
mov
add
jmp
mov
pusha
mov
push
and
add
jae
hlt
mov
loopne
push
add
lahf
push
adc
push
add
fsubr
nop
rsqrtps
xchg
fnstenv
repnz
movs
add
push
adc
xchg
arpl
cs
fbld
mov
or
shl
add
and
dec
loopne
mov
push
add
scas
and
loopne
jecxz
sub
(bad)
(bad)
jo
adc
pop
dec
dec
into
sbb
jb
sub
mov
mov
add
loope
inc
lods
call
imul
dec
mov
mov
ss
add
and
lea
ja
lock
into
repnz
fisubr
loopne
ret
pop
xor
mov
jne
xchg
popf
mov
test
daa
stos
mov
adc
or
ret
dec
imul
fwait
mov
or
(bad)
fisttp
or
loop
clc
or
add
fisttp
mov
(bad)
les
or
ds
adc
dec
mov
shl
xchg
loopne
scas
shr
sbb
push
imul
and
and
push
cmp
add
push
jbe
je
addr16
cld
faddp
sbb
push
cmp
push
lock
or
or
inc
dec
push
mov
ret
cmp
dec
scas
sbb
inc
jo
cmp
imul
ret
add
xchg
aas
pop
repnz
mov
rcr
xor
and
das
adc
mov
loope
or
jl
cld
cmp
rcl
neg
dec
dec
mov
adc
sbb
outs
(bad)
mov
or
xchg
test
push
mov
xchg
pop
add
sar
sbb
popf
inc
clc
(bad)
fidiv
jo
or
mov
inc
in
jmp
cmps
xchg
xchg
cmp
xor
aam
inc
inc
sar
push
add
ins
sbb
xchg
in
mov
sar
jle
jge
pop
sbb
outs
mov
jae
shr
shr
call
in
out
cmc
mov
test
je
rol
shl
call
push
add
cld
push
or
dec
test
xlat
inc
jmp
push
mov
bound
add
inc
sub
mov
push
ins
adc
lock
add
out
xor
jbe
adc
retf
sub
mov
adc
lock
ud1
aas
push
leave
ins
cmp
in
adc
and
push
enter
lods
iret
or
cmp
dec
or
jecxz
test
add
lock
into
sbb
and
sub
adc
loop
(bad)
cmp
dec
fdivr
sbb
or
cwde
jge
sbb
cld
mov
add
dec
mov
cmp
jno
or
retf
and
push
out
das
and
(bad)
or
(bad)
sub
xor
fwait
pop
dec
lock
dec
aas
fwait
jbe
sub
ins
adc
lea
mov
clts
arpl
mov
jnp
pop
shl
jns
lea
popa
add
call
dec
jnp
int
adc
mov
ret
rcl
add
(bad)
call
add
or
sub
(bad)
cmp
push
sub
push
test
cmc
add
fild
sub
or
mov
pop
add
shr
push
sbb
or
mov
cmp
cmp
sar
bound
jb
mov
xor
sub
xlat
lahf
jbe
sub
lods
push
fsub
arpl
sub
jl
xlat
(bad)
add
mov
aaa
add
cmp
push
adc
cmps
pop
pop
stos
loope
loope
push
mov
enter
rcr
sbb
push
pusha
push
hlt
stc
push
movs
adc
js
aas
fadd
sbb
sub
shl
jo
adc
push
fistp
inc
and
scas
outs
fcomp
call
cdq
sub
dec
add
shl
xor
add
inc
jo
mov
aaa
int3
add
push
pop
or
fidiv
mov
(bad)
into
and
or
lahf
push
xor
cmps
inc
clc
ror
adc
or
int3
call
pop
out
adc
adc
into
pop
ins
cmp
test
jecxz
add
push
stos
das
mov
xchg
sbb
cmps
jmp
sbb
xchg
retf
mov
push
inc
inc
xor
jno
rol
cwde
or
pop
jbe
fdivr
shld
mov
mov
adc
test
aad
inc
stos
lahf
fs
ds
mov
adc
je
aas
cmps
test
push
mov
ins
add
and
inc
push
cmc
mov
cmp
push
cmp
pop
push
add
dec
outs
sub
dec
call
pop
inc
sub
sar
push
fwait
mov
sahf
ins
sub
pop
mov
pop
pushf
arpl
cmps
paddq
inc
and
cmp
(bad)
cmovle
xchg
pop
retf
and
sbb
add
add
es
sahf
mov
shl
cmp
xor
push
(bad)
jle
lea
mov
xchg
lock
mov
outs
mov
sbb
add
pop
mov
push
or
push
mov
loope
jl
mov
dec
cli
sbb
cwde
xchg
ret
mov
jl
inc
mov
in
and
xor
cmp
repnz
and
mov
ret
adc
push
pusha
or
or
xchg
pop
call
(bad)
jne
cmp
cdq
movs
cs
push
fcom
mov
jmp
adc
mov
xor
sub
or
icebp
xchg
lods
movs
rcl
mov
fst
popa
xchg
lods
scas
call
out
or
loop
repz
fld
xor
mov
(bad)
imul
push
mov
sub
inc
xchg
adc
das
jp
cmp
push
pop
dec
cmp
add
lods
and
push
sub
test
mov
inc
test
inc
out
push
xchg
push
cmc
in
or
mov
call
daa
xlat
pusha
dec
out
fist
adc
add
push
adc
add
inc
lea
out
mov
push
pusha
lds
neg
add
sub
add
jbe
sbb
pop
(bad)
adc
or
fcomp
out
push
xchg
into
std
xor
outs
xor
adc
bound
(bad)
push
ret
sub
or
jp
add
pushf
mov
inc
pusha
rol
inc
outs
sahf
or
jno
mov
jae
aaa
push
or
add
int3
add
adc
and
cmp
sahf
add
leave
or
lock
mov
cld
test
xor
sbb
mov
wrmsr
mov
cmp
loope
sbb
ret
xor
jo
cmp
jne
rol
jae
iret
or
push
jne
push
mov
inc
or
or
pushf
fsub
and
add
jp
jnp
js
test
jg
fist
pandn
mov
(bad)
jae
mov
xor
(bad)
lods
cmp
jne
mov
jmp
push
cmp
cmp
in
jne
mov
xchg
cmp
xchg
lea
push
sub
xor
test
xor
xor
pop
(bad)
test
retf
or
push
bound
adc
dec
add
cdq
xor
mov
push
(bad)
shl
push
add
add
and
cmp
sbb
loope
test
pop
xor
aam
mov
pop
(bad)
cmp
mov
adc
or
mov
int3
adc
dec
add
adc
xor
xchg
fild
sbb
mov
out
push
jl
mov
int3
adc
clc
sbb
shl
lea
bound
test
mov
dec
outs
iret
bound
cdq
inc
nop
rcl
or
les
leave
mov
sub
ins
pop
mov
dec
out
xchg
pop
call
imul
ror
loopne
push
retf
aaa
add
aaa
ds
sub
mov
push
arpl
xchg
xor
addr16
jbe
ins
mov
or
mov
aaa
(bad)
push
mov
add
sub
lock
sub
pop
jb
or
jns
and
sbb
pop
pusha
mov
and
mov
xchg
adc
cmps
pop
js
xchg
pop
jb
aam
sbb
xchg
fs
xlat
or
cmps
push
ror
or
pop
dec
or
inc
aas
cmp
ins
push
xor
jae
inc
pop
add
inc
inc
aas
cdq
push
popa
imul
fisubr
pushf
jno
int3
inc
inc
dec
ss
inc
and
xor
pusha
ret
xlat
pop
or
test
dec
les
push
adc
nop
and
ja
adc
xchg
aas
mov
add
add
xchg
nop
cs
adc
xor
mov
add
inc
push
(bad)
sbb
sbb
cli
push
ja
pop
or
xor
pusha
pushw
mov
push
inc
inc
mov
add
xchg
adc
adc
inc
xor
adc
(bad)
push
fs
and
outs
(bad)
sbb
sub
pop
push
adc
sbb
mov
iret
pop
or
outs
imul
aas
test
xchg
adc
rol
loope
sbb
push
pop
mov
scas
cmp
xor
mov
or
or
lahf
mov
(bad)
lds
push
ret
ins
in
adc
add
add
pushf
pusha
add
push
lea
pushf
retf
add
mov
call
inc
cmp
int3
les
add
inc
mov
xchg
xor
jo
xor
push
mov
xchg
mov
jecxz
add
pop
add
xor
shl
and
push
sub
inc
sub
lods
inc
mov
or
push
or
das
movs
pusha
rol
out
jmp
nop
mov
sbb
mov
sub
dec
pop
stc
in
iret
(bad)
inc
rol
mov
lea
push
add
clc
adc
ret
inc
dec
pop
ret
mov
into
or
xor
retf
(bad)
pop
nop
jg
ins
sbb
addr16
jne
xchg
and
inc
or
loope
jmp
invd
popa
mov
and
push
xchg
jmp
icebp
call
jmp
mov
ja
scas
bound
lea
sbb
aas
idiv
push
aad
pop
jno
aam
dec
popf
adc
mov
dec
sbb
inc
mov
cli
pushf
lods
je
pop
je
inc
xor
pop
inc
scas
mov
jne
and
invd
lods
adc
(bad)
push
sbb
mul
cmp
push
cli
pusha
xor
xchg
cmp
dec
jne
inc
jle
daa
imul
or
cmp
push
cmp
in
push
or
cmp
xor
pop
jl
mov
mov
xor
add
cld
lods
daa
xor
xchg
inc
imul
(bad)
std
push
and
in
retf
outs
xchg
in
je
sar
out
xlat
shl
mov
in
inc
clc
inc
sub
popf
cmps
pop
inc
daa
add
sbb
jne
jno
pop
lods
ret
pop
pop
test
sub
xor
adc
cmp
cli
push
call
test
jp
addr16
mov
jb
(bad)
adc
mov
jnp
movs
jno
mov
stos
jp
mov
jl
push
adc
stos
jle
rcl
inc
rol
sbb
fbld
or
push
test
inc
(bad)
js
or
pop
pop
xlat
clc
cmp
mov
movs
add
pmulhw
(bad)
lock
sub
pop
aaa
les
or
push
bound
xor
mov
xchg
mov
mov
mov
call
lea
push
fcom
test
add
mov
push
push
in
jae
pop
sub
and
cwde
ss
pop
dec
add
fwait
pop
mov
sub
test
ins
cld
jae
push
popa
or
sub
lods
inc
pop
adc
cli
stos
add
pop
ret
or
sbb
pop
rol
mov
inc
push
adc
and
jb
nop
and
xor
push
retf
lods
lea
(bad)
outs
cmp
ret
inc
sbb
jge
and
out
call
adc
adc
bswap
inc
push
dec
jb
add
lock
addr16
add
imul
xchg
or
and
popf
add
icebp
or
js
xchg
mov
cmp
adc
test
and
push
xor
push
call
fidivr
mov
jmp
(bad)
push
and
sub
ja
or
sub
inc
les
fdiv
or
jnp
cmps
jo
ret
cmp
sub
push
or
iret
ret
inc
imul
sbb
cs
rol
add
add
ja
adc
push
sar
mov
rol
xchg
jnp
dec
shr
jp
push
fs
out
jo
push
push
ins
and
adc
int3
sbb
adc
mov
or
pop
jbe
add
movs
(bad)
xor
add
mov
js
fdivr
out
adc
cmp
pusha
ins
fidiv
ds
scas
loopne
ret
out
dec
xor
pop
push
cmp
xor
mov
lahf
sub
mov
cmp
cmps
inc
jmp
adc
ja
cld
cmp
jbe
mov
test
add
push
inc
or
add
cmp
inc
or
inc
sub
add
aaa
dec
ins
dec
cmp
sbb
sub
adc
(bad)
add
and
push
sub
test
cld
cmp
or
add
cmc
sub
pusha
mov
add
xor
sar
jb
dec
pop
daa
mov
cmps
xor
sub
adc
lods
push
fmul
inc
sub
and
jmp
jle
jae
jae
mov
sbb
jne
pop
push
sti
pusha
jbe
jae
add
fcom
dec
xchg
sbb
lock
and
add
ins
and
jl
mov
inc
xor
not
add
pop
push
mov
inc
sbb
or
mov
push
dec
retf
add
hlt
dec
or
adc
test
pop
ja
xchg
cmp
mov
jmp
mov
sbb
pusha
sub
out
dec
sbb
int3
xor
ins
inc
(bad)
xor
add
clc
pop
cmp
das
mov
dec
test
jl
inc
mov
pop
outs
movups
xchg
add
adc
inc
dec
jne
scas
add
(bad)
pop
or
pop
and
addr16
aaa
loop
loopne
ja
std
jbe
inc
ror
fs
cmp
xor
bound
xor
or
inc
les
pop
cmp
iret
adc
daa
aas
rol
mov
movs
leave
sub
imul
imul
pop
(bad)
push
(bad)
mov
pop
or
inc
jmp
call
and
or
fimul
and
jmp
jne
pop
sbb
push
retf
add
mov
mov
inc
dec
mov
cmp
xor
pop
dec
xor
add
mov
cli
gs
add
add
call
sar
movzx
mov
outs
int
add
mov
or
repz
and
sub
adc
mul
scas
cmp
and
daa
mov
pusha
add
mov
inc
add
or
das
movs
or
add
in
mov
xchg
inc
push
clc
sbb
push
xor
hlt
(bad)
mov
imul
in
mov
add
das
xchg
pop
dec
inc
pusha
fiadd
retf
xor
add
jmp
or
mov
mov
mov
(bad)
hlt
data16
push
xchg
add
sub
shl
push
outs
cmp
shr
sbb
(bad)
fadd
(bad)
xor
jge
imul
pushf
bound
inc
xor
jo
mov
(bad)
push
daa
sub
add
je
push
push
enter
das
adc
es
sub
fisubr
pop
add
sub
sub
add
sbb
outs
rep
iret
repz
cwde
ret
das
push
mov
and
movd
into
sbb
mov
das
daa
das
mov
nop
mov
fsubrp
xchg
(bad)
xlat
push
inc
push
pop
xchg
cmp
(bad)
push
fcom
push
jmp
iret
jl
mov
xor
cmp
jmp
sub
jo
ins
sbb
iret
retf
inc
cwde
mov
push
jmp
mov
out
and
xchg
or
fstp
xchg
sbb
les
in
repz
test
in
xchg
sbb
or
mov
cwde
inc
dec
pop
sub
leave
inc
cmp
xor
add
pop
enter
std
dec
jp
or
jne
push
sbb
test
into
call
xor
popa
or
jmp
stos
mov
xor
loopne
sbb
and
pop
jmp
and
pop
and
pop
es
inc
rcr
push
pop
xchg
xchg
dec
push
js
retf
call
xchg
pop
adc
cmp
fcomp
inc
add
or
imul
mov
mov
and
aas
scas
test
sete
lods
test
cld
adc
push
jp
inc
cmp
sbb
dec
aad
mov
fnstsw
popa
sbb
pusha
inc
fnsave
sbb
mov
xchg
and
(bad)
scas
sbb
adc
push
mov
mov
ss
lock
shl
fdiv
daa
aas
sbb
pusha
retf
sbb
scas
jbe
mov
mov
add
das
cmp
pop
enter
and
and
pop
(bad)
int3
and
outs
push
cmp
lahf
nop
dec
and
push
adc
lock
mov
mov
hlt
sbb
dec
test
xchg
ror
adc
and
add
cmp
frstor
push
cmp
int3
ins
test
aas
push
ins
jmp
fst
jo
ret
outs
or
push
jecxz
jo
inc
fsubp
mul
mov
push
aaa
pusha
repnz
ins
and
je
sub
mov
cs
sbb
fild
xchg
or
push
fisubr
sub
in
fimul
mov
js
mov
cmps
(bad)
lahf
add
xchg
mov
or
xchg
dec
test
add
movs
sub
scas
xchg
jg
cmps
movs
pop
cwde
(bad)
pop
pushf
and
ins
mov
mov
pop
lahf
div
test
jl
fs
nop
mov
mov
pusha
or
pop
cmp
cmp
jne
mov
rcl
and
das
imul
and
nop
add
imul
sbb
js
push
sbb
adc
and
fmul
mov
js
rol
(bad)
mov
movs
mov
pop
add
outs
add
fild
or
pop
mov
in
xchg
clc
inc
xchg
mov
mov
add
mov
pusha
adc
add
aaa
arpl
add
cmps
aaa
aas
aaa
add
xor
mov
lock
mov
pop
or
cwde
inc
xor
fidivr
add
(bad)
lods
adc
xchg
jb
or
psubusw
das
addr16
inc
pcmpgtb
(bad)
repz
out
out
retw
inc
sub
gs
aas
out
aam
lea
mov
cmps
mov
lea
xchg
push
or
pop
fild
push
sub
push
xor
std
cs
mov
dec
(bad)
mov
cwde
gs
fstp
fwait
inc
not
outs
pop
mov
sbb
add
and
getsec
cmps
dec
data16
pop
loope
repnz
inc
paddusb
js
fdivr
bound
add
inc
dec
sar
pop
mov
dec
cld
add
hlt
es
adc
mov
inc
sub
arpl
fadd
jmp
jg
imul
cmp
push
jno
(bad)
fld
fstp
add
push
xor
cmp
addr16
ja
mov
ja
pop
ja
movs
dec
mov
sbb
test
jl
jecxz
push
xchg
iret
mov
mov
das
push
sub
enter
sub
xlat
fimul
xchg
inc
lds
inc
aaa
push
sub
imul
movs
adc
aas
mov
cmp
sbb
or
jno
xor
jo
jns
pop
cdq
cmc
mov
test
cmp
and
outs
or
outs
inc
test
scas
inc
sbb
cmps
mov
jge
inc
adc
add
sub
or
ret
push
push
jnp
ds
lock
(bad)
cld
add
adc
cmp
and
mov
movs
mov
hlt
sbb
leave
mov
mov
jmp
test
sub
jno
cmp
jne
xor
push
(bad)
and
in
sub
inc
call
sub
ror
sbb
push
inc
lock
lock
in
mov
dec
fwait
pop
push
shl
cs
popa
rol
rcr
jecxz
add
cmp
sub
stos
add
dec
push
scas
frstor
loopne
push
xor
dec
arpl
lahf
mov
pusha
add
daa
cmp
setle
or
cld
fsub
sahf
addr16
rcr
cs
stos
inc
add
imul
aas
adc
hlt
jne
lahf
icebp
push
mov
lock
mov
call
mov
les
fnstsw
push
into
xor
into
mov
and
jmp
cdq
xchg
retf
push
and
aaa
in
dec
sub
jl
inc
bound
add
xor
mov
pop
loop
lods
add
mov
bound
dec
nop
push
jmp
and
sbb
aaa
dec
push
movs
add
sub
jo
hlt
sbb
pop
pop
jmp
inc
dec
jne
and
inc
pusha
mov
scas
fisub
mov
mov
cmp
inc
or
ret
jl
inc
add
push
fwait
push
push
adc
jge
in
sbb
xchg
jo
inc
in
call
movs
inc
call
add
or
push
ror
jne
or
cwde
adc
cmps
imul
xchg
push
xchg
outs
cmp
sub
and
test
add
call
inc
add
rol
adc
scas
lock
ins
loopne
pop
loopne
mov
xchg
popf
add
sub
clc
dec
add
and
push
xchg
aaa
neg
adc
add
pop
cmp
pop
popa
add
push
inc
and
repz
xchg
adc
call
fisttp
scas
push
movs
dec
adc
out
jge
jl
or
mov
add
rdtsc
sbb
jno
in
jle
mov
mov
dec
cmp
out
in
dec
pusha
jb
nop
or
mov
dec
test
dec
and
mov
pop
daa
cmc
or
(bad)
cs
out
(bad)
inc
out
repnz
mov
cmp
add
leave
ss
xlat
pop
nop
pop
ss
jg
clc
jle
sub
test
push
pop
xor
pop
and
fbld
mov
pop
fxch
push
and
int3
push
pop
stos
jmp
lock
idiv
rcl
mov
inc
movs
icebp
sahf
ret
xchg
out
fs
mov
ret
test
into
adc
and
xlat
sbb
mov
push
inc
shl
push
dec
cs
mov
push
(bad)
cli
inc
or
jmp
pop
ret
pop
dec
loop
sbb
xchg
pop
jo
(bad)
pop
jg
jb
pop
ja
push
and
inc
adc
les
shr
jl
mov
fstp
mov
inc
retf
xchg
inc
or
mov
inc
and
push
stos
inc
(bad)
outs
push
inc
sub
add
mov
sub
dec
addr16
test
sub
psubusb
fadd
loopne
ret
sub
mov
inc
cmp
jo
lods
pushf
jl
and
fcom
lea
and
mov
sbb
in
mov
jnp
in
lock
pop
fst
mov
ja
loope
adc
push
repnz
sti
cmp
in
fcom
loopne
add
daa
loopne
aas
push
mov
mov
push
push
ins
mov
mov
or
cli
daa
mov
cmp
jl
lods
int
and
cmp
jmp
enter
fsubr
aas
je
push
cmps
sbb
call
cwde
in
mov
sub
push
jo
and
shl
das
cmp
xor
cmp
pop
call
push
jne
sub
mov
or
sub
in
loopne
sub
sub
ror
ja
dec
xlat
ret
xor
push
or
pop
inc
test
xchg
mov
pop
fild
dec
daa
jle
push
imul
dec
mov
inc
fadd
jmp
ret
inc
(bad)
mov
add
(bad)
inc
pop
enter
bound
js
add
add
fidiv
out
push
push
sidtd
push
inc
mov
push
idiv
cmp
jae
inc
jbe
push
stos
inc
push
sbb
ds
dec
imul
add
jb
lock
and
arpl
push
arpl
dec
nop
pop
out
sub
imul
add
outs
jbe
inc
int
out
mov
jo
inc
jle
cmp
xor
push
adc
fisub
imul
sbb
mov
dec
push
or
mov
xchg
ja
ror
loope
pop
or
dec
addr16
xor
xor
jae
add
adc
mov
jbe
inc
jmp
cmp
call
fnstenv
dec
bound
xchg
adc
pusha
dec
mov
add
pop
mov
jo
or
mov
or
add
(bad)
outs
popa
push
mov
sbb
push
and
push
ja
arpl
xchg
ret
jg
jg
mov
ins
and
inc
cmp
ss
adc
adc
xchg
(bad)
nop
add
pop
adc
mov
xor
xchg
add
cli
xor
and
les
add
add
inc
inc
shl
aaa
cmps
xchg
fwait
std
and
inc
cmp
xchg
mov
xchg
jb
lds
xor
aaa
pop
dec
inc
or
sbb
or
rcl
push
(bad)
out
jnp
je
int
das
adc
cmp
and
dec
pop
aas
pop
jl
jo
loopne
xchg
cs
fild
adc
rcl
dec
mov
jl
test
enter
mov
in
les
add
mov
mov
push
add
scas
pop
push
pushf
dec
xor
xchg
lods
xchg
cmp
scas
push
add
adc
jmp
adc
sub
adc
test
add
inc
add
and
adc
test
(bad)
mov
aam
cmp
or
imul
loopne
les
ja
loope
out
mov
dec
push
jnp
xor
ins
push
lock
sub
add
mov
or
paddusb
pop
das
pop
inc
daa
out
mov
setle
cs
sub
xor
loopne
xchg
or
fs
es
jmp
in
and
or
jecxz
not
sbb
imul
retf
or
jo
jmp
dec
test
dec
loopne
enter
add
arpl
js
imul
jmp
aaa
(bad)
add
pop
imul
aaa
xchg
jmp
rcr
aaa
lods
jmp
ins
mov
hlt
out
icebp
(bad)
fsubr
or
loop
lock
sbb
jmp
or
pusha
in
daa
mov
add
into
inc
add
push
into
or
imul
sub
aam
enter
fdivp
sbb
test
neg
mov
lea
lods
add
inc
ins
mov
test
xor
push
cdq
sbb
mov
jmp
mov
lea
pushf
jmp
xor
fidivr
stos
mov
inc
out
push
cli
jmp
push
test
mov
sbb
cmp
(bad)
push
fisub
push
shr
push
inc
ins
pop
xlat
ins
inc
add
cmps
fdivr
imul
xchg
out
cmp
ret
repnz
mov
cmp
test
sbb
mov
xchg
add
adc
push
adc
or
sbb
shl
and
and
dec
imul
or
xor
xor
or
xor
inc
push
inc
cmp
cmp
push
imul
dec
js
inc
mov
adc
icebp
or
ror
fcom
jecxz
mov
cmp
cmp
and
stos
add
mov
mov
dec
int
jp
rol
int3
mov
push
push
out
xor
mov
call
out
cmp
das
stos
push
xor
jmp
pop
das
unpcklps
or
xor
push
and
fstp
repz
dec
outs
sub
mov
aas
mov
ds
loopne
clc
mov
sbb
rol
repz
jne
add
push
stc
and
jbe
pop
jmp
icebp
push
mov
xor
cwde
mov
sub
in
test
xchg
retf
adc
jbe
out
cmp
(bad)
rcr
pushf
nop
fild
and
cld
sti
mov
ins
inc
dec
enter
or
adc
pop
jl
xor
xchg
push
cmp
xor
dec
jne
jl
sub
jmp
cmp
or
inc
sub
shl
pop
bound
or
push
bound
in
rcr
lahf
and
jbe
push
aas
pop
or
xor
push
rcr
fcmovbe
push
add
rcl
jo
mov
dec
test
jne
aas
sbb
(bad)
xor
sub
mov
add
pop
pusha
inc
shl
jmp
adc
ds
mov
inc
dec
(bad)
adc
ror
ror
mov
in
pop
push
xor
fcomp
cmp
mov
test
inc
mov
cmp
jne
dec
loopne
into
mov
add
push
cmc
xor
sub
push
push
hlt
pop
lods
xor
dec
or
rcl
jg
adc
cmp
imul
add
push
pop
in
and
or
adc
lock
mov
cmp
or
cmp
pop
adc
push
xor
ds
cmp
inc
and
or
ja
cli
or
hlt
add
jmp
cmp
movs
mov
add
clc
outs
add
sub
rcr
cmp
test
sub
aaa
xchg
mov
and
enter
fisubr
dec
push
cmp
mov
sbb
or
data16
xchg
add
push
inc
cwde
and
cs
aam
scas
cmp
sbb
push
movs
add
add
les
add
cmps
mov
in
mov
add
rol
mov
adc
push
jo
into
mov
adc
and
sub
inc
pop
xchg
mov
(bad)
ja
sub
inc
or
or
adc
push
cmp
push
push
inc
inc
call
sub
and
add
(bad)
or
add
fadd
test
dec
push
add
add
or
shr
sub
aam
sahf
ror
add
xchg
test
add
cmp
outs
lock
dec
and
not
mov
cmp
push
add
cmp
(bad)
cmp
or
or
mov
lock
xor
cmps
int3
aam
shufps
push
inc
sub
rcl
ficom
data16
or
xor
(bad)
push
test
shl
pop
ret
jmp
inc
shl
adc
adc
test
je
cmp
mov
or
push
mov
stos
pop
mov
call
lds
sbb
cwde
dec
push
push
cwde
and
cmp
jg
jbe
dec
push
sub
js
add
lea
fisubr
xor
cmp
sub
xchg
dec
or
and
push
sbb
mov
xchg
push
test
iret
xor
or
(bad)
mov
mov
mov
pop
mov
mov
loop
sub
xor
jle
push
sbb
pushf
repnz
call
add
daa
or
push
lods
hlt
jle
push
xor
adc
jbe
or
loop
dec
mov
pop
mov
jecxz
xor
repz
fnstsw
push
test
enter
icebp
and
or
push
or
xor
inc
pushf
pop
mov
stos
imul
mov
push
sbb
ja
mov
mov
jno
mov
mov
retf
mov
add
jl
or
jecxz
push
sub
push
xor
mov
retf
js
fidiv
xchg
xchg
dec
das
fild
test
adc
fist
and
fdivr
mov
push
inc
mov
sbb
sbb
pop
add
push
scas
adc
push
in
inc
add
jnp
inc
or
pushw
(bad)
repz
pop
adc
loopne
sub
dec
scas
test
and
or
les
sub
ret
or
dec
mul
clc
cmps
ins
jmp
xor
mov
sub
jge
mov
dec
sbb
mov
add
enter
and
hlt
dec
jle
push
or
fsub
or
mov
popf
imul
sbb
imul
xchg
rcl
inc
or
adc
aaa
push
dec
pusha
dec
xor
xor
add
jnp
jb
scas
or
call
sub
and
inc
inc
and
or
sbb
sub
xchg
out
cld
test
in
add
pusha
lds
shl
pop
and
or
mov
or
or
outs
mov
jle
push
and
cmp
jle
and
xor
or
or
lods
shl
cmp
mov
mov
ins
adc
cs
xchg
clc
adc
into
out
test
test
xchg
lea
xchg
mov
sub
adc
and
cmc
jo
movs
ss
out
dec
cmp
cmp
or
sbb
lock
sbb
xor
js
aad
adc
fmul
xor
jg
pop
aas
pusha
mov
xabort
push
pop
hlt
add
repz
mov
or
jo
imul
push
mov
jo
(bad)
pusha
push
xchg
xor
sub
jne
out
adc
inc
or
hlt
sub
fld
push
pop
fld
pop
test
sub
mov
xlat
enter
in
cmc
je
in
je
in
(bad)
or
adc
sub
mov
push
cmp
jecxz
jb
in
mov
or
mov
inc
and
fsub
shl
adc
push
adc
xchg
retf
repnz
cli
test
mov
or
std
(bad)
ds
jecxz
ret
(bad)
mov
xor
sub
jl
push
cld
and
sbb
jecxz
xrelease
leave
xor
cwde
mov
cmp
push
mov
out
not
out
repnz
mov
lea
cmp
lea
fadd
jno
jg
sbb
js
mov
jb
xor
jge
jo
sbb
sti
fadd
loopne
cmc
add
push
repz
pusha
sahf
xor
jecxz
inc
push
test
add
pusha
sti
(bad)
or
cmps
mul
test
push
cmc
push
in
fsubr
ret
dec
lock
loopne
cmc
movs
cmp
arpl
or
mov
cmp
cld
rcr
inc
(bad)
hlt
fstp
fwait
push
mov
ret
cmc
jo
pop
(bad)
adc
mov
mov
ret
out
aaa
popa
cmp
mov
movsx
xor
outs
ds
lods
lock
cmps
mov
leave
sbb
mov
sub
fbld
fidiv
add
gs
out
and
dec
std
scas
cmp
adc
(bad)
idiv
or
cmp
adc
xor
dec
nop
mov
fstp
mov
xchg
das
mov
sbb
loopne
addr16
adc
mov
repnz
adc
push
sub
pop
addr16
mov
fwait
cmps
pop
jbe
pop
(bad)
loop
add
dec
aaa
shl
sbb
cmp
or
cmc
cmps
and
sbb
cmp
and
add
and
or
inc
cmp
and
sub
dec
pop
mov
or
push
std
cwde
cmps
scas
inc
rol
cs
jecxz
mov
ds
fsubr
cmps
inc
or
enter
cwde
mov
sbb
clc
adc
out
fistp
out
nop
popa
rcr
cmp
jmp
bound
mov
loopne
pushf
xor
mov
mov
in
loope
sbb
cmps
push
in
inc
pop
push
or
enter
ja
jb
mov
sbb
push
cmp
jmp
adc
(bad)
aaa
xor
dec
(bad)
sbb
jbe
shr
cmp
inc
jns
ins
mov
(bad)
push
scas
or
jg
(bad)
(bad)
fst
cmp
mov
lods
sete
aaa
adc
sbb
iret
stos
leave
pop
stos
and
dec
movs
pop
stos
xor
mov
push
xchg
jne
aas
movs
adc
das
hlt
push
sbb
xchg
lea
and
dec
cmp
sbb
adc
bound
hlt
mov
sbb
sub
nop
rol
push
pusha
outs
xchg
aas
pop
mov
ja
jb
ds
pusha
and
int3
sbb
pop
sub
imul
or
rol
pop
hlt
jg
rol
lods
adc
retf
sbb
fwait
shl
cmp
mov
sbb
inc
(bad)
clc
add
in
push
leave
imul
mov
and
push
jb
xchg
pop
mov
stos
stc
sub
loopne
push
or
mov
inc
lock
mov
inc
or
imul
push
jmp
pop
imul
stos
inc
mov
ja
sub
dec
jnp
fstp
(bad)
aaa
dec
outs
mov
outs
jge
(bad)
jo
popa
aaa
(bad)
jge
in
in
pop
aas
cdq
loopne
push
push
xor
sub
daa
xlat
mov
lds
adc
add
aaa
loop
cwde
shl
add
xchg
cmp
or
imul
mov
pop
sub
sbb
in
shr
sbb
daa
push
js
jno
push
cmp
fnstsw
je
pop
add
hlt
xchg
sbb
lahf
nop
and
aad
jmp
cmp
mov
sbb
and
jne
sbb
fild
lods
ja
adc
add
inc
fist
imul
jb
mov
nop
ins
pop
pop
call
lea
add
mov
push
mov
stos
pushf
fidivr
adc
add
mov
inc
jmp
xor
(bad)
retf
or
scas
push
pop
in
cwde
push
pushf
dec
popf
jo
push
stos
pop
lock
mov
and
cmp
dec
jo
cwde
jns
nop
sub
push
pop
cmps
jmp
fnsave
in
adc
jne
cmp
mov
test
sub
lods
push
mov
mov
test
mov
jmp
xor
ja
aaa
inc
jecxz
xlat
call
outs
xchg
addr16
dec
xor
mov
jg
lahf
and
mov
pushf
jno
adc
adc
sbb
dec
pop
shl
(bad)
cmp
push
ja
repnz
adc
inc
xchg
mov
and
jge
sub
mov
cmp
push
mov
jae
add
ret
inc
adc
fnstcw
and
and
add
mov
and
or
mov
cmp
cmp
sub
test
sub
in
test
pop
int
loopne
aaa
dec
pop
mov
and
push
sbb
add
xchg
xor
cmp
clc
jne
xchg
jmp
das
inc
pop
push
and
fdivr
enter
or
jle
pop
mov
xor
pop
sub
xor
or
mov
mov
inc
push
sub
xor
adc
and
pop
push
or
adc
pop
scas
jne
icebp
add
scas
clc
xchg
mov
out
xor
and
fild
or
sbb
popa
cld
fstp
pop
inc
mov
fld
les
out
fwait
cmp
or
into
(bad)
mov
inc
fsubrp
add
xchg
mov
daa
and
xchg
(bad)
in
add
pop
in
lea
(bad)
push
lods
xchg
jle
shr
push
jo
out
dec
fidiv
pop
ins
(bad)
ror
mov
test
(bad)
cwde
push
mov
fwait
pop
(bad)
mov
jg
mov
dec
test
cwde
ret
mov
addr16
jge
cmps
or
and
xchg
movsx
lock
pop
out
jb
mov
and
in
mov
cs
cwde
xchg
cdq
and
ins
xor
and
mov
inc
mov
inc
add
inc
inc
fisubr
clc
push
movzx
movzx
(bad)
clc
dec
inc
sbb
cmp
cmc
adc
out
adc
adc
(bad)
je
dec
sahf
xchg
or
cmp
lock
cmp
jne
inc
xor
in
je
push
mov
add
outs
fld
cwde
mov
retf
call
leave
inc
mov
lea
mov
push
jo
shl
daa
add
leave
or
into
add
arpl
loopne
pop
pop
sbb
imul
rcr
and
daa
mov
js
pusha
dec
add
pop
xor
fisttp
xchg
fs
push
aam
or
add
iret
add
xlat
(bad)
xlat
push
rol
xchg
sub
dec
push
fadd
pop
cmp
xchg
and
shr
jo
nop
popa
movs
pushf
aaa
pop
loop
add
sub
jne
iret
add
into
fcmove
xchg
addr16
aaa
loopne
or
clc
(bad)
jmp
push
js
daa
out
imul
daa
jg
push
add
inc
add
mov
pop
xor
addr16
jbe
lds
test
xlat
pop
unpcklps
sbb
or
sub
loopne
mov
js
add
cmp
pop
fistp
cmp
popa
js
push
js
pop
int
aam
jle
ja
cmp
cmp
iret
iret
int3
or
add
add
js
shr
pushf
loopne
dec
jb
test
push
cmp
neg
pushf
cmp
adc
rcr
xchg
(bad)
fld
rcr
mov
rcl
fcomip
xlat
mov
pop
push
mov
and
daa
jp
ffree
inc
and
lods
cs
test
or
bound
in
jp
das
movs
pusha
enter
lods
sbb
push
inc
(bad)
mov
fild
in
std
scas
and
add
jnp
fild
sub
push
rcr
xchg
pop
and
mov
push
cmps
pop
popa
fist
lods
add
pop
xchg
add
cmp
jl
add
xor
sbb
sub
and
fadd
adc
or
and
inc
mov
push
dec
inc
test
sub
rol
inc
sbb
inc
adc
cmp
mov
dec
cmp
inc
or
jge
rcl
adc
mov
push
gs
adc
sbb
xchg
inc
cmps
mov
dec
icebp
cmps
add
popa
dec
xchg
aaa
jb
or
ss
(bad)
dec
(bad)
iret
data16
jle
mov
fcom
pop
fs
and
adc
retf
pop
loopne
cmp
(bad)
cmp
lahf
adc
enter
je
add
sbb
pop
jl
adc
(bad)
jo
not
in
or
(bad)
fcmovu
adc
mov
xchg
mov
push
sbb
and
loope
push
add
dec
outs
loope
xor
sbb
pop
or
jge
adc
iret
in
jmp
add
sbb
sub
add
xlat
jb
jbe
sbb
push
aas
cmp
and
add
jns
cmp
cmp
or
push
or
iret
pop
je
or
cmps
rcl
adc
add
mov
stos
retf
push
or
test
mov
repz
add
cmp
nop
add
add
inc
pop
push
pop
stos
stc
lds
mov
nop
loope
ficomp
call
rol
fadd
and
stos
mov
nop
sbb
cmps
ficomp
adc
adc
push
stos
iret
rcr
adc
(bad)
iret
xchg
push
test
aaa
pop
int
loopne
mov
adc
adc
outs
adc
mov
pop
pop
aam
in
pop
cmp
aaa
jbe
pop
push
sbb
add
xor
jbe
shl
ror
push
jge
(bad)
mov
pop
add
inc
int
aaa
popa
add
aaa
push
test
sbb
popa
xor
repnz
cmps
retf
adc
adc
mov
fdiv
pusha
xlat
movs
or
jno
daa
fs
push
inc
jbe
sub
and
std
(bad)
repnz
push
clc
aam
sbb
dec
test
jle
div
cdq
(bad)
adc
pop
pop
add
sbb
ror
add
adc
cdq
xor
mov
test
or
aaa
push
mov
inc
mov
and
mov
mov
daa
lock
mov
sbb
nop
das
sbb
rcl
lock
inc
test
jo
lock
daa
adc
scas
out
add
dec
pop
fdiv
arpl
test
dec
inc
push
sub
mov
ja
jno
jo
paddsw
loopne
stos
mov
ficom
xadd
mov
inc
adc
int
sbb
sub
jbe
push
dec
xor
pop
add
mov
jo
sysexit
push
dec
or
or
(bad)
cmp
sbb
sbb
bound
xor
fld
dec
loope
mov
imul
pop
call
outs
xchg
sub
outs
push
jo
adc
xchg
je
inc
mov
xor
and
inc
pop
push
and
dec
jge
lods
ret
add
mov
shl
add
mov
push
icebp
mov
neg
mov
jae
push
cmc
fs
jne
adc
mov
pop
cmp
lahf
in
add
dec
cmp
gs
(bad)
fimul
sbb
sub
push
xchg
mov
push
inc
pop
jo
imul
cmp
cwde
ss
xchg
repz
enter
movs
sbb
add
or
xor
dec
add
add
(bad)
push
push
adc
add
call
data16
add
push
xor
xor
inc
add
sbb
mov
or
rcr
movzx
sti
inc
sbb
lahf
js
std
loopne
(bad)
jg
ror
add
(bad)
xchg
jge
out
ret
add
int
loop
xor
dec
mov
fcomp
fnstsw
sahf
ja
sbb
cmp
fsub
fbld
pop
mov
pop
mov
push
xor
cmp
push
sub
jo
ins
cmp
dec
cmp
push
ja
in
and
and
ins
jb
and
adc
push
fadd
add
xchg
inc
xchg
pop
inc
cmp
push
xchg
das
add
nop
adc
scas
sbb
add
sbb
or
push
inc
sbb
push
sub
inc
xchg
pop
and
cmc
das
daa
jo
shr
daa
and
mov
aaa
pop
adc
mov
outs
push
test
or
xchg
test
add
pusha
sbb
mov
data16
popf
sub
out
test
xchg
repnz
ja
or
fidiv
ficom
sbb
sub
rcl
pop
add
lea
sub
push
xchg
dec
iret
cmps
pop
int3
outs
outs
inc
(bad)
push
or
addr16
mov
mov
add
xchg
mov
sub
daa
fnstenv
jae
pop
jne
cwde
lahf
rol
push
stos
mov
ror
pop
retf
outs
int3
and
jno
adc
add
pop
add
and
test
rcr
add
es
and
xor
dec
add
lock
xor
out
xchg
mov
jb
xchg
out
cwde
and
dec
das
shr
out
sbb
add
push
cmps
xchg
pop
sbb
or
pop
out
in
dec
add
out
out
lods
mov
or
cs
shl
add
fist
mov
inc
add
das
(bad)
mov
adc
js
add
dec
jo
pop
pop
loopne
scas
shr
pop
inc
mov
(bad)
push
ja
test
and
outs
ficom
inc
jmp
sub
addr16
out
xlat
push
adc
and
and
and
xchg
test
cmp
inc
cmp
push
push
daa
mov
and
jb
ins
adc
je
push
mov
pushf
(bad)
or
cmp
inc
pop
mov
ins
stos
test
inc
mov
add
pop
aaa
(bad)
push
xchg
daa
cs
xchg
daa
js
push
add
(bad)
daa
xchg
lock
jmp
ret
ins
loopne
(bad)
push
sub
dec
test
xor
add
mov
pop
and
mov
inc
shr
pop
ja
sbb
adc
pusha
and
adc
ret
add
and
inc
pop
sub
push
ss
sbb
icebp
xlat
mov
mov
mov
cld
dec
jne
cmp
pop
jne
mov
retf
add
jbe
pop
or
outs
out
add
mov
xchg
xchg
xchg
sbb
jg
xlat
or
sar
pop
sub
inc
mov
jo
add
ret
ror
popa
test
xor
xor
inc
sub
pop
or
push
add
xor
clc
pusha
or
xchg
cmp
xchg
push
or
ins
lahf
ins
add
pop
add
mov
jecxz
fwait
dec
add
ja
out
add
ja
bound
out
sbb
cmp
pop
mov
sbb
cmps
pop
shl
jne
lods
xor
push
mov
jne
(bad)
call
stos
cmp
sub
adc
xor
int3
or
sbb
push
push
mov
push
scas
cwde
cld
cdq
popa
cwde
sub
mov
and
xor
jl
jnp
in
inc
push
aaa
cdq
add
adc
fist
jbe
inc
mov
ds
pop
xadd
cld
enter
xor
data16
adc
daa
adc
ds
pop
jo
pop
inc
enter
inc
add
aaa
rol
add
mov
adc
and
pop
mov
pop
and
or
mov
add
jmp
adc
push
movs
das
cmp
push
pop
mov
mov
(bad)
sti
out
inc
test
cmp
or
push
sub
pop
lahf
jp
rol
je
fmul
push
push
mov
imul
dec
and
lock
mov
sub
aad
lock
pushf
inc
lods
iret
inc
cmp
xchg
sub
jne
popf
xchg
into
adc
das
xlat
pop
inc
mov
ficom
add
add
xor
lea
inc
adc
iret
out
jecxz
xchg
add
ja
push
push
sbb
cmc
loope
in
mov
pop
cmp
repnz
aad
inc
movs
add
fcomip
lahf
fstp
jbe
dec
mov
and
das
das
scas
inc
ins
aad
fistp
hlt
dec
mov
rol
lahf
inc
int3
push
outs
shl
repnz
xor
loopne
stc
dec
push
fbld
inc
or
or
cmps
aad
imul
xor
das
mov
pop
pushf
fwait
std
mov
pop
push
das
div
test
dec
sub
mov
daa
das
xlat
outs
rcl
stos
and
cmp
ret
addr16
cmp
adc
mov
cmp
fsubr
or
sbb
cmps
iret
sub
add
inc
pop
add
out
retf
xor
push
or
call
add
add
ja
addr16
push
xor
inc
cmps
or
and
shl
test
add
fbstp
xchg
mov
lahf
rol
adc
enter
(bad)
jbe
inc
(bad)
ror
call
push
in
lock
adc
out
iret
call
mov
mov
dec
jae
adc
jecxz
cld
push
shr
cmp
jne
sahf
jne
dec
pusha
lods
or
call
push
jne
push
xor
jne
add
mov
mov
mov
dec
xchg
jl
jae
xchg
sar
sbb
or
mov
cmp
je
lock
das
mov
mov
cmp
push
and
pop
(bad)
and
js
shl
xchg
adc
out
ds
cmc
fbld
cmp
sub
dec
hlt
lea
dec
push
pop
adc
retf
xchg
add
push
ficomp
push
data16
(bad)
(bad)
outs
dec
push
xchg
xor
js
call
idiv
int
adc
ror
in
xor
add
xchg
jns
cmp
pop
jmp
inc
inc
xlat
add
pushf
outs
mov
sbb
pop
pop
or
push
cmp
inc
or
(bad)
adc
or
inc
sub
xor
retf
dec
mov
push
mov
add
adc
add
pop
mov
sbb
mov
and
xor
shl
and
sbb
inc
sub
out
outs
sub
mov
lock
xor
mov
mov
outs
pop
pusha
cmps
xchg
lods
dec
inc
jnp
xor
cs
fs
xor
movs
(bad)
sub
les
mov
mov
cmp
mov
test
jle
cmp
add
and
push
dec
add
ja
movs
pop
sub
jp
pop
sbb
ins
out
test
mov
sbb
cmps
mov
fsubrp
repnz
xchg
in
cs
jb
xchg
lock
and
dec
inc
and
mov
mov
ret
dec
aam
mov
dec
or
inc
adc
inc
mov
pop
jmp
push
or
cmps
in
enter
mov
in
and
add
inc
popa
push
jle
jle
or
loop
xchg
sbb
cmp
adc
lock
jo
cmp
push
add
aam
call
loop
outs
mov
mov
test
nop
dec
pop
gs
cmps
push
jbe
pop
add
por
loope
stos
shl
pop
mov
add
sbb
ja
mov
stos
jae
mov
mov
lahf
xchg
dec
dec
xchg
xchg
or
mov
aam
ret
out
loope
xor
xor
lods
sbb
or
(bad)
push
lea
das
pushf
inc
loope
xchg
in
lea
shl
dec
repnz
add
mov
sbb
daa
push
and
or
or
out
add
and
or
popa
setb
loopne
mov
lea
cwde
adc
xchg
sub
rcr
add
repnz
pop
cs
outs
and
pop
or
test
into
inc
retf
shl
adc
add
ins
mov
lahf
push
outs
inc
fcomp
fwait
imul
lea
jo
xchg
adc
inc
fist
in
jl
test
sbb
pop
push
inc
push
xor
adc
xchg
sbb
sahf
adc
imul
nop
sbb
adc
xchg
sbb
fsub
repz
fadd
scas
inc
xchg
fadd
ins
scas
add
fsubr
and
pop
in
(bad)
and
mov
cmp
shl
dec
(bad)
dec
or
cmp
or
mov
dec
test
(bad)
mov
adc
xchg
aas
(bad)
inc
pop
pop
mov
dec
out
dec
out
add
dec
nop
and
xor
je
addr16
cmc
rep
data16
mov
outs
xor
push
movs
sub
mov
lock
push
int3
sub
sub
fmul
and
dec
sub
sbb
mov
imul
dec
adc
jo
ja
adc
inc
ret
stos
ja
scas
adc
xor
sub
rol
fcom
dec
test
test
push
jbe
pop
mov
sub
adc
mov
shl
jl
lods
(bad)
outs
ret
int
sub
sbb
rol
add
adc
cmp
mov
xor
push
ficomp
int
add
sub
shl
or
push
add
dec
inc
add
js
nop
cmp
jmp
push
push
inc
cmps
cmp
fisub
mov
xchg
pop
movs
fcmovb
adc
and
mov
arpl
pusha
jno
(bad)
movs
or
pop
or
inc
inc
mov
inc
add
xchg
bts
dec
lahf
lock
clc
sbb
gs
sbb
inc
fwait
mov
addr16
pop
in
mov
inc
push
dec
cmp
xchg
cld
mov
iret
les
mov
or
inc
pop
xor
retf
inc
pop
xor
loop
loopne
ret
add
adc
pop
and
push
mov
pop
mov
pop
ins
adc
or
pop
outs
dec
loopne
push
daa
(bad)
inc
sub
jg
pusha
and
test
ss
cmps
mov
pop
test
sbb
mov
jae
loop
sub
sti
jl
rcl
aaa
jge
push
outs
sub
loopne
ror
jg
test
jmp
pop
clc
dec
clc
mov
cmp
push
jae
nop
hlt
ins
jp
mov
mov
js
pusha
pusha
mov
ret
xlat
jg
sbb
dec
rcl
push
test
stc
push
js
xor
cmp
ror
aaa
getsec
pushf
or
pop
xcrypt-ecb
cmps
dec
sbb
rcl
push
xor
int3
or
ins
xchg
sub
xor
add
not
gs
daa
test
mov
dec
jp
adc
cmp
or
mov
in
imul
push
outs
mov
and
dec
sub
jl
add
pop
add
sar
clc
jl
push
pop
or
adc
mov
rol
mov
aaa
cmp
adc
jb
imul
cwde
imul
inc
adc
fdivrp
das
push
add
arpl
imul
push
dec
aam
inc
cmps
cmp
xor
adc
div
add
ins
add
ins
add
int3
add
cmps
outs
adc
cmp
push
pusha
into
push
pandn
outs
sar
out
push
inc
ja
call
out
dec
int3
int3
int3
outs
or
xchg
call
xlat
mov
inc
push
faddp
push
mov
js
or
push
xor
or
xor
xor
outs
aaa
mov
xchg
aas
push
or
add
or
out
lock
push
xor
push
add
sub
stos
call
push
mov
fwait
cmc
add
cld
add
add
aas
cs
jmp
mov
or
(bad)
in
into
icebp
cmp
jge
push
xor
inc
jne
jbe
scas
push
dec
xor
pusha
xchg
dec
cld
es
in
push
mov
fidivr
fwait
test
xchg
mov
pop
loope
cmp
jne
sbb
jo
fild
js
dec
dec
(bad)
jecxz
mov
aas
push
cmp
pop
lds
jp
fbstp
into
or
jl
lock
inc
int3
sbb
cmp
loope
sbb
fs
add
mov
jne
fwait
xchg
and
and
push
pop
cmps
js
iret
xchg
sub
xchg
dec
shl
push
add
cld
fsubr
sub
movs
push
adc
(bad)
outs
imul
xchg
xor
mov
dec
ins
add
mov
mov
add
mov
xor
pop
adc
rcr
rol
shl
inc
jmp
jmp
add
sub
or
ds
push
in
scas
repnz
inc
into
mov
or
aad
cs
icebp
pushf
add
or
adc
mov
fimul
sub
cmp
dec
js
pop
push
adc
hlt
dec
or
add
scas
adc
sbb
ret
mov
add
sbb
xor
cmp
ins
add
(bad)
je
sar
pop
add
das
jnp
push
pop
mov
pop
or
sbb
clc
scas
ret
jle
push
cmp
pop
cmp
sbb
das
push
pop
loopne
inc
scas
cs
cmp
sub
ins
inc
add
xor
out
fbstp
sbb
push
mov
ins
int3
or
pandn
fs
adc
icebp
lea
mov
inc
mov
imul
ins
stos
xor
inc
and
inc
cmovno
push
or
nop
push
cmp
je
dec
ins
hlt
aaa
cmp
cmp
jne
xchg
adc
stos
add
rcl
inc
mov
sbb
test
cmp
jne
mov
push
mov
ja
cmp
mov
adc
xor
or
sub
(bad)
lock
inc
ja
push
lea
add
scas
or
or
outs
push
sbb
mov
dec
int
scas
bound
jge
in
repnz
push
cli
mov
(bad)
mov
inc
cwde
or
push
mov
jmp
add
sbb
sbb
outs
add
adc
lahf
shr
fsub
mov
pop
xor
push
cmp
je
and
cmp
jmp
and
add
inc
push
add
pop
pop
xlat
jmp
test
fadd
jne
xchg
cmp
loopne
out
xor
add
and
cmp
mov
shl
rcl
or
fcomp
out
xor
fnstenv
add
or
add
mov
sbb
je
sub
mov
out
sti
xchg
inc
icebp
dec
xchg
xor
adc
xchg
cmps
enter
xor
inc
rol
hlt
lods
add
pusha
dec
ror
push
retf
push
ins
or
inc
xor
cmps
push
mov
sbb
lea
jmp
mov
and
pop
in
idiv
adc
mov
adc
pop
lock
jmp
push
(bad)
and
or
or
jle
adc
xchg
dec
ds
add
mov
jmp
(bad)
rcl
xchg
mov
sbb
cmp
inc
fcomp
mov
loopne
cs
jne
pop
xchg
ror
jne
in
std
pop
jo
ja
test
pop
jb
aam
or
pushf
jb
scas
or
cmps
adc
add
and
in
ret
inc
inc
scas
(bad)
pop
or
or
push
mov
div
loopne
mov
imul
sub
hlt
add
and
adc
sahf
push
mov
sbb
ss
sahf
cdq
jl
into
dec
gs
pop
lods
cs
adc
adc
imul
gs
aad
xlat
inc
ss
ret
pop
dec
add
imul
fs
jne
or
les
pop
mov
inc
fst
pop
pop
push
pushf
test
popa
or
gs
push
lock
pop
in
jmp
or
adc
iret
push
jne
mov
push
idiv
clc
jl
(bad)
push
into
fs
or
adc
loope
sub
cld
adc
jb
jno
inc
imul
ss
out
cmp
or
add
sub
jg
cmp
inc
or
mov
or
ss
aam
add
mov
pmuludq
push
or
daa
adc
dec
ret
sbb
loopne
fdivr
pop
pusha
adc
adc
cdq
fistp
or
add
aaa
cld
or
push
or
sbb
mov
add
pop
sahf
pop
or
sbb
push
mov
cmp
or
mul
ret
pop
push
xchg
loopne
xor
(bad)
push
clc
movs
sub
add
add
mov
xor
mov
dec
ins
dec
loopne
pop
jae
dec
or
loope
push
shr
cmps
xor
sub
int3
rol
xor
addr16
add
mov
sub
add
fbld
lea
or
dec
out
call
inc
jmp
jo
mov
mov
cmp
jle
cdq
gs
or
xchg
or
cmp
lea
cld
aad
les
inc
ret
lahf
test
fcom
test
mov
push
sbb
mov
cs
mov
mov
pop
or
or
ret
mov
push
js
aas
retf
mov
push
adc
xchg
ror
test
push
jg
aaa
loopne
inc
pminsw
sub
(bad)
jge
sub
jle
xchg
add
or
jle
pop
nop
add
ret
sbb
push
inc
lods
adc
lea
add
sbb
loope
pop
sbb
pop
add
and
rol
inc
push
or
adc
and
pop
or
ror
scas
push
enter
icebp
loopne
pop
jb
rdtsc
push
mov
adc
add
and
push
in
in
popa
add
fild
ror
push
rol
mov
shl
out
ds
loop
fld
xchg
ss
xchg
and
push
jnp
lock
push
mov
cmps
rcr
arpl
shr
pusha
pop
push
movs
and
xor
in
pusha
and
mov
pop
aam
xchg
bound
cmps
xlat
scas
pusha
jnp
pop
add
dec
add
inc
add
or
jae
inc
push
push
xlat
loop
add
loop
sub
lea
add
dec
adc
jmp
fsub
add
stc
ret
mov
mov
or
mov
mov
push
cs
inc
movs
sti
(bad)
int3
jns
add
lea
stc
(bad)
jo
and
or
mov
cwde
fstp
fwait
lea
push
addr16
in
or
shl
mov
nop
stos
retf
sbb
or
jmp
iret
inc
cmp
jne
mov
dec
lods
xor
mov
adc
mov
pop
imul
add
or
je
jo
dec
data16
sbb
or
xor
sub
add
test
adc
jge
xlat
lock
cmc
in
repz
push
sbb
xor
sbb
xor
js
or
and
fs
(bad)
xchg
mov
cmp
in
jl
jle
test
in
ret
retf
arpl
jmp
xchg
loopne
sbb
or
push
and
loopne
jecxz
push
dec
sbb
push
cmp
(bad)
xchg
pop
or
push
loopne
ins
leave
add
pusha
pushf
ror
loopne
or
or
push
loopne
cmp
mov
in
mov
push
(bad)
xlat
int3
leave
fstp
sub
inc
push
not
push
jb
mov
call
into
je
or
adc
bound
push
(bad)
adc
xor
mov
mov
retf
xchg
add
or
xchg
adc
mov
push
sub
mov
adc
push
push
popa
push
push
dec
push
push
push
(bad)
test
jge
xor
jl
or
ret
mov
sub
call
scas
dec
cs
iret
mov
mov
xor
jae
and
es
sbb
or
push
mov
sub
jg
jns
and
pop
jb
push
mov
rol
inc
ja
cmp
sub
aas
inc
push
mov
sbb
jg
stos
adc
inc
mov
mov
xchg
movs
inc
ja
sbb
aaa
pop
mov
dec
sbb
sbb
sar
ja
jmp
rcl
xor
mov
adc
int3
mov
adc
push
les
cs
nop
enter
scas
fmulp
dec
and
adc
gs
inc
inc
sbb
sbb
sar
adc
fwait
jno
in
mov
out
add
push
adc
arpl
into
shl
(bad)
jecxz
push
popa
cmp
mov
sar
xchg
mov
mov
mov
inc
loopne
jl
dec
jne
outs
jg
add
mov
mov
cdq
fadd
push
cmp
fild
ret
jmp
or
xor
sbb
out
jns
mov
mov
popa
cwde
xchg
das
and
movs
add
add
mov
cwde
retf
or
das
and
popa
push
rol
or
push
jle
repnz
inc
jp
pop
scas
cmovl
or
lahf
mov
popf
jmp
mov
add
test
push
adc
cmp
inc
rol
mov
jecxz
jb
movs
add
inc
adc
mov
cdq
clc
cdq
or
xor
xchg
jle
sbb
test
iret
outs
inc
movsx
inc
cmp
mov
sbb
xchg
or
sbb
fisub
mov
or
push
fstp
fisttp
add
cmps
push
jae
pusha
daa
jg
adc
inc
xor
sbb
jbe
addr16
add
fld
bound
fnstcw
scas
mov
add
mov
sbb
adc
mov
shl
or
rol
jl
pop
mov
cmp
jg
or
or
dec
adc
pop
int
push
mov
jl
(bad)
fld
fcomp
fstsw
sahf
ja
sbb
add
jne
arpl
or
sbb
inc
or
push
lock
cmp
(bad)
or
xlat
dec
lods
adc
pop
xor
add
push
pop
out
cmp
mov
or
and
add
push
int3
push
xor
lods
inc
add
jbe
call
aam
ror
ss
fldenv
pop
push
ror
mov
shl
push
aas
ret
cmp
sub
add
mov
shl
out
jne
dec
pop
xchg
popf
mov
loopne
enter
push
xor
xor
test
aas
test
scas
sbb
out
jmp
add
imul
xchg
push
jl
cmp
out
jne
mov
mov
push
stos
pop
push
xchg
jl
xchg
test
rcl
and
pop
cs
xlat
outs
inc
scas
adc
fiadd
(bad)
fisttp
pop
jg
sti
push
pop
pop
test
jl
cmp
inc
xor
cmp
popa
mov
xor
call
movs
aad
pop
mov
mov
inc
data16
adc
cli
push
jg
(bad)
xchg
fdivr
xor
jmp
sbb
pop
mov
add
stc
jmp
and
adc
pop
pusha
cdq
cwde
sbb
pop
or
or
(bad)
fsub
(bad)
mov
mov
pusha
(bad)
out
jp
xor
and
popa
sub
mov
xor
xchg
push
pop
js
mov
and
sub
adc
cmp
adc
inc
and
inc
pop
xchg
das
or
cs
push
sbb
jbe
call
xchg
jo
(bad)
sub
mov
cs
fdiv
in
lahf
mov
pop
mov
sahf
nop
test
jnp
sbb
sub
imul
inc
pop
push
add
lds
test
ja
fmul
cmp
push
mov
push
or
aaa
je
lods
or
inc
shl
inc
and
shl
mov
add
cmp
add
xor
add
mov
xchg
and
aad
mov
mov
stos
and
cmps
scas
add
mov
push
movs
xchg
cwde
pop
mov
inc
cmp
mov
cs
fwait
pusha
xchg
mov
mov
push
cmp
hlt
(bad)
(bad)
xchg
call
sbb
lock
into
adc
jge
sub
hlt
aad
scas
jmp
sub
pop
movs
pop
loope
mov
jge
sbb
jo
imul
aad
hlt
ret
or
push
stos
ret
and
pop
cmp
rol
aas
arpl
mov
adc
mov
cs
or
jnp
cmp
sbb
sbb
loop
xchg
dec
fbld
push
and
add
push
dec
dec
rcr
push
jmp
xor
cwde
enter
cld
sahf
out
mov
add
outs
pop
xor
sub
test
push
test
out
xor
imul
rcl
fbstp
cmps
fs
sub
mov
sbb
ror
mov
ret
enter
xor
cmp
cs
rcl
outs
loopne
mov
arpl
shr
leave
push
ins
push
sbb
dec
xor
pop
mov
test
sub
push
aaa
sub
pop
xor
shl
pusha
sbb
add
sbb
mov
pop
push
retf
mov
ficomp
or
ret
inc
retf
pop
and
fld
faddp
push
push
mov
fstp
fwait
mov
in
test
mov
adc
inc
fnstsw
push
jmp
inc
xor
or
mov
nop
xchg
cwde
fld
fdivr
mov
add
jne
mov
push
push
sbb
dec
lock
mov
mov
hlt
mov
jle
xor
call
adc
call
les
dec
add
stos
inc
daa
push
add
loopne
in
mov
pop
je
lahf
add
dec
mov
jl
loopne
ret
out
retf
shr
scas
mov
cmp
add
push
cmp
xor
xor
jl
mov
and
jnp
int3
jns
inc
popa
(bad)
out
mov
add
jecxz
inc
mov
jmp
aas
sub
movs
std
lods
xlat
retf
add
pop
pop
or
push
xlat
(bad)
in
push
add
pop
repnz
push
pop
add
(bad)
jno
das
fmulp
add
test
jl
loopne
lahf
pusha
hlt
ja
and
dec
hlt
xor
sbb
jne
out
or
rol
aad
fmulp
or
mov
test
jmp
stos
jno
mov
mov
out
sti
mov
je
out
outs
sub
cld
mov
add
arpl
inc
imul
test
and
out
jne
rol
(bad)
jae
push
imul
test
imul
nop
movs
jo
add
call
inc
pop
enter
and
sbb
shr
ret
mov
rcl
out
sub
ret
aas
mov
adc
lods
stc
push
adc
dec
mov
add
jo
sbb
or
add
xor
pop
or
pop
sub
ja
shr
or
dec
fsub
jge
ja
fcom
mov
push
xor
mov
fmul
fmul
cmp
mov
or
fstp
icebp
push
aad
ret
add
loope
fdiv
inc
sub
in
add
mov
je
rsqrtps
mov
or
add
fadd
add
shl
push
add
mov
mov
repz
movaps
add
(bad)
out
pop
sub
push
inc
call
(bad)
and
or
jmp
or
in
test
cmc
cmp
or
mov
jmp
jb
xor
push
jb
push
scas
push
inc
cmp
int3
lea
hlt
cld
or
add
mov
jns
pop
jb
pop
retf
add
sbb
pusha
push
or
out
and
ffreep
dec
mov
push
inc
jo
cmps
xor
loopne
mov
fld
jg
cmp
pop
neg
enter
(bad)
or
call
inc
or
and
push
aaa
adc
jne
jge
mov
cmp
scas
jae
ss
xchg
scas
xor
ret
dec
adc
push
pop
lods
(bad)
mov
add
loopne
ins
or
push
mov
dec
inc
adc
sahf
sub
dec
lods
aas
dec
data16
push
shr
or
add
je
lahf
push
pop
(bad)
ins
(bad)
movs
jmp
sbb
mov
call
pop
retf
inc
mov
cmp
add
cs
mov
push
aaa
jg
mov
pop
fs
inc
xor
arpl
mov
cmp
jne
sub
sub
dec
loop
clc
jae
mov
lock
mov
mov
add
jle
cmp
dec
push
in
inc
lock
cmp
pop
in
jo
inc
aam
mov
shr
out
add
push
mov
mov
bound
dec
mov
push
fldcw
pushf
pop
das
adc
gs
cld
jmp
adc
xor
imul
aaa
xchg
inc
aaa
mov
sbb
repnz
cmp
cmps
mov
loopne
sbb
sbb
sub
int3
mov
shr
add
stos
cs
sbb
adc
(bad)
dec
ret
lods
retw
ins
loop
push
add
push
inc
add
pop
add
sub
push
add
add
rcr
adc
add
xchg
fwait
push
fcmovb
push
add
fiadd
scas
jns
fadd
cdq
jmp
clc
mov
add
sti
outs
adc
pop
mov
sbb
lock
push
push
mov
ins
cmp
pop
sbb
sub
(bad)
jmp
or
jg
ins
sub
sbb
clc
gs
fadd
xor
xor
ror
add
cmp
test
cmp
adc
lock
mov
mov
push
mov
out
test
movs
outs
out
jo
test
xchg
pusha
outs
stos
pop
pop
stos
(bad)
sub
add
popf
aad
pop
mov
(bad)
call
adc
add
or
pop
mov
movs
sbb
les
pop
cmp
loopne
or
push
or
and
cmp
pop
retf
sub
imul
(bad)
jg
jmp
mov
sub
cvtpi2ps
jmp
fsubr
fs
(bad)
pusha
sti
(bad)
movsx
mov
pop
push
pop
pop
outs
sbb
fbstp
fist
adc
sbb
and
mov
pushf
shr
loope
mov
mov
mov
pop
mov
push
adc
xchg
inc
dec
adc
pop
cmps
imul
clc
in
and
pop
aas
inc
int3
js
mov
pop
add
sbb
stos
fs
pop
xor
sbb
ja
sub
mov
into
addr16
pusha
lds
xlat
xchg
pop
jmp
mov
push
pop
cwde
lock
cld
scas
adc
repz
nop
in
inc
ret
(bad)
clc
nop
test
sbb
sub
or
jbe
add
aam
add
adc
pop
sti
dec
xor
fstp
stos
xchg
xchg
scas
js
push
or
mov
jl
jg
mov
and
inc
pop
jmp
mov
add
sbb
xchg
xor
in
das
xchg
ins
cmp
fstp
int
jmp
adc
rcr
in
xor
xor
pusha
jmp
(bad)
or
movs
xchg
test
xor
es
les
add
xchg
in
es
mov
ins
pop
and
cmps
push
hlt
mov
inc
dec
jne
mov
nop
mov
add
shr
push
lea
aas
and
popa
pop
add
test
jnp
push
sahf
mov
dec
jne
popa
add
in
shr
and
(bad)
jo
popf
xor
and
or
xchg
cmp
push
cmp
inc
sbb
mov
push
inc
lock
(bad)
loopne
xchg
and
jb
lds
adc
ss
mov
and
mov
jne
das
xchg
ja
mov
fcomp
jno
pop
sbb
clc
icebp
sbb
pop
mov
pusha
pusha
fmul
xor
xchg
ret
xchg
jbe
fsub
push
repnz
fdivr
xchg
mov
lods
cwde
mov
das
imul
test
dec
aam
add
mov
call
mov
test
loop
lock
inc
lods
xor
cmp
mov
pop
int
loop
mov
loop
pop
(bad)
js
push
sub
add
mov
mov
mov
fstp
mov
cmp
jae
or
ds
jo
adc
and
shl
inc
add
push
out
das
ins
push
cmp
jecxz
push
and
call
pushf
mov
sahf
les
mov
jb
call
xor
scas
hlt
add
jg
inc
mov
adc
or
ja
gs
push
scas
rol
sub
sti
jg
mov
add
ds
dec
bound
arpl
push
(bad)
(bad)
jg
outs
outs
popa
jb
cmp
jns
je
ins
or
outs
addr16
popa
je
cs
inc
pop
mov
outs
ins
ins
ds
adc
jb
jo
pop
gs
dec
add
add
inc
jb
dec
gs
add
sub
or
gs
data16
inc
lock
or
pushf
adc
mov
inc
inc
popa
jo
arpl
jns
add
inc
or
stc
inc
inc
call
cdq
pusha
xchg
call
(bad)
rol
lahf
pop
adc
sub
jg
lock
(bad)
add
ins
inc
gs
cwde
jae
pusha
ins
ins
clc
jo
out
mov
jae
jecxz
repnz
add
push
test
mov
or
pusha
inc
dec
dec
aas
push
fadd
mov
add
icebp
mov
xchg
shl
mov
daa
mov
(bad)
sbb
or
mov
test
out
(bad)
sar
push
scas
pop
cdq
scas
movs
loopne
xor
sbb
pop
xchg
or
out
int3
add
test
in
mov
pusha
neg
loopne
jmp
sbb
out
sub
cmps
mov
push
clc
shr
sbb
push
lods
pop
cld
outs
sub
(bad)
jecxz
loopne
pop
aam
lods
unpckhps
in
mov
das
lock
bound
popa
outs
fs
adc
sbb
inc
fwait
cmp
test
pop
mov
adc
mov
pop
xchg
and
out
div
sub
jns
mov
pop
in
add
dec
hlt
jl
mov
cwde
inc
inc
jbe
mov
add
mov
andps
inc
das
inc
xor
jl
pop
jbe
dec
outs
popa
or
call
and
jne
inc
mov
adc
xor
nop
cdq
adc
out
cdq
mov
push
inc
mov
loopne
dec
mov
lods
cmp
jno
xlat
dec
int3
cli
push
nop
es
into
push
xchg
out
dec
push
mov
push
fnstenv
mov
push
add
ret
adc
cmps
or
ja
xor
jmp
es
pcmpeqw
outs
sub
sbb
cmp
pusha
(bad)
sub
add
enter
or
inc
test
push
xchg
ja
loopne
jns
ja
push
in
hlt
or
data16
push
push
popf
enter
sub
cmps
xchg
call
mov
add
pop
adc
adc
inc
hlt
add
sti
push
lods
out
sahf
test
add
in
shr
add
cld
push
lods
xlat
push
ja
es
das
jmp
ins
cmp
imul
xlat
mov
add
leave
lods
(bad)
dec
push
not
dec
setns
scas
xchg
ins
popa
jae
not
fiadd
push
push
pushw
ins
inc
pop
(bad)
push
(bad)
sbb
inc
pcmpgtd
ficomp
ficom
sbb
cmp
loopne
inc
jo
cmps
cmp
add
ret
imul
dec
mov
push
enter
in
mov
xor
push
fsub
clc
das
push
(bad)
sbb
pushf
push
pop
mov
cmps
cmp
ds
push
sub
or
aaa
lea
fadd
cmp
sbb
aam
push
arpl
fs
jb
call
test
test
push
(bad)
loopne
into
test
out
or
mov
or
popf
pop
fwait
test
pop
xor
div
lods
lods
mov
aam
sbb
es
mov
test
or
push
inc
imul
jae
mov
push
lahf
call
mov
rol
int
jmp
scas
adc
mov
jbe
xor
xlat
lock
and
sbb
popf
jmp
fistp
pop
xlat
call
ror
mov
sub
inc
sub
push
je
fbstp
jmp
cmp
mov
call
push
(bad)
dec
jmp
add
xor
cmova
mov
jo
jb
push
pop
in
nop
adc
scas
dec
sub
test
sub
sub
retf
sar
xlat
call
adc
lods
mov
lds
icebp
lock
fild
mov
stc
arpl
pop
lea
pop
mov
and
out
mov
dec
push
in
cmp
test
inc
jb
loop
add
push
or
xor
ja
adc
std
ds
call
cwde
test
test
test
jne
push
shl
mov
push
add
or
and
cli
mov
sub
mov
mov
mov
in
mov
cmp
add
add
or
(bad)
je
jge
in
push
outs
push
sub
add
mov
in
pop
imul
daa
xor
push
ds
clc
(bad)
out
jmp
(bad)
adc
or
inc
out
xor
add
lock
sub
mov
je
out
add
(bad)
jmp
cmp
xor
adc
cmp
je
mov
ja
xchg
out
add
aaa
push
mov
push
mov
push
cmc
cmp
xor
push
je
call
js
jb
fld
(bad)
in
(bad)
jns
mov
jle
and
ret
cld
jmp
shl
add
add
stos
mov
and
cmp
xchg
push
mov
jl
mov
or
cmp
loopne
gs
movs
push
mov
outs
mov
jl
push
not
jmp
pop
or
dec
or
push
ret
mov
add
inc
int3
dec
or
sbb
pop
mov
mov
mov
push
pusha
sbb
jg
push
jmp
ins
inc
sbb
cmc
scas
pop
xchg
stc
(bad)
mov
test
jnp
jl
and
ja
mov
not
stc
inc
arpl
inc
add
inc
xor
repz
pop
push
xor
jo
sub
dec
adc
shr
dec
bound
shl
jmp
pusha
mov
pop
mov
fimul
add
and
or
jne
sbb
sub
dec
sar
add
xchg
push
push
rcl
dec
xchg
push
sbb
inc
and
xchg
outs
sbb
cmp
js
add
nop
mov
inc
call
or
and
add
jge
xor
in
adc
lea
adc
sbb
mov
xor
push
clc
push
or
mov
loopne
jo
test
xchg
adc
push
and
dec
leave
cmp
pusha
and
and
ret
sbb
into
and
loopne
pop
lock
in
and
and
jb
push
push
icebp
xchg
ins
fadd
jb
stos
dec
dec
push
enter
shr
loopne
mov
jmp
(bad)
movaps
in
add
push
cli
ja
inc
or
int
cmp
jne
scas
scas
adc
hlt
call
xor
test
mov
loopne
outs
scas
sub
jne
jne
adc
xor
sbb
jge
and
push
push
mov
or
loopne
push
int3
jmp
mov
and
test
(bad)
iret
arpl
pop
test
adc
fadd
mov
je
(bad)
pop
inc
adc
jbe
mov
add
adc
(bad)
adc
jnp
lea
sbb
fsub
dec
or
mov
mov
fs
inc
add
jo
adc
mov
fsubrp
add
jmp
js
or
or
xor
(bad)
inc
sbb
push
sbb
push
xor
and
cdq
cmp
and
daa
mov
push
sbb
or
clc
jo
xchg
call
push
ss
xor
sar
faddp
jnp
jle
jbe
or
adc
ficomp
test
dec
and
mov
lea
cli
adc
and
jg
mov
xchg
sbb
(bad)
mov
ss
idiv
sub
dec
clc
imul
(bad)
push
cmp
jmp
imul
add
in
ins
(bad)
and
arpl
cwde
leave
xchg
sub
loope
or
sbb
sbb
adc
jno
imul
(bad)
pusha
test
gs
pop
ja
loope
sbb
and
sub
push
cmp
sub
add
push
in
and
ret
add
dec
jecxz
jbe
add
adc
dec
inc
add
inc
jecxz
shl
mov
cld
cmp
sub
mov
sub
adc
lods
aas
jns
dec
xlat
fld
inc
or
add
pop
in
inc
adc
add
or
or
mov
call
je
dec
mov
pop
enter
add
xchg
adc
scas
popf
ins
int
add
das
or
not
pop
and
mov
push
and
sbb
or
push
xchg
std
out
(bad)
jmp
push
lods
inc
call
int3
pop
dec
mov
pusha
adc
lds
or
scas
sbb
push
fld
add
inc
data16
scas
inc
or
and
daa
and
cmp
sbb
pop
mov
push
mov
inc
mov
add
cmp
loopne
push
or
push
push
and
out
sar
xor
adc
xchg
or
push
or
addr16
(bad)
ror
ret
or
pop
jne
push
int3
clc
cmp
jp
jns
add
or
pop
mov
and
ret
aas
lds
lds
and
call
jmp
mov
push
adc
mov
enter
dec
bound
shl
push
jge
push
cmp
ror
hlt
xchg
sbb
(bad)
jmp
enter
or
cmp
(bad)
je
mov
jmp
daa
enter
push
add
xchg
test
(bad)
(bad)
into
fcom
jge
adc
in
mov
cmp
rol
sub
mov
jle
cmps
mov
inc
movs
sbb
aas
sub
popa
scas
sbb
lods
xor
int3
add
lahf
loope
and
scas
add
push
add
push
mov
inc
cmp
sub
ja
gs
xor
cmps
in
mov
aas
push
push
and
lea
(bad)
sbb
inc
dec
das
pop
mov
inc
xor
shr
sub
xchg
jl
adc
push
and
out
adc
mov
push
sub
(bad)
(bad)
pop
push
push
push
mov
mov
sbb
jb
fmul
inc
jg
fisttp
xchg
shr
lock
jne
mov
cld
pop
push
hlt
mov
xor
clc
in
sub
cmp
sbb
jno
jo
mov
cmp
rcl
inc
or
popa
or
cld
out
enter
jle
cmp
jne
lock
mov
adc
xchg
test
ret
pop
add
test
inc
lods
pop
test
adc
clc
mov
xchg
add
stos
jno
mov
mov
cmp
jo
cmps
sbb
mov
xlat
dec
out
sub
jle
lock
dec
shl
or
inc
inc
test
sbb
adc
and
push
test
xor
push
push
leave
repz
sub
pop
enter
call
fisub
pop
xchg
pop
adc
pop
je
add
iret
pop
xchg
in
inc
cs
(bad)
ror
mov
xchg
dec
movs
scas
xchg
sbb
rcr
xchg
inc
lahf
fisttp
jnp
ret
cmps
scas
cs
jb
ss
(bad)
push
mov
sub
stos
leave
hlt
jle
add
rol
sub
jge
and
fisubr
outs
mov
aas
pop
imul
or
add
inc
not
xchg
test
in
jge
stos
jle
adc
pop
xchg
mov
inc
mov
mov
pop
lds
div
test
movs
loope
cmp
jnp
jo
adc
jp
xor
mov
adc
dec
ret
xchg
stc
in
jne
mov
jge
ins
addr16
mov
retf
test
sub
test
xchg
sbb
out
int3
cmp
inc
mov
pop
test
xor
sbb
mov
out
sbb
cmps
mov
or
imul
mov
mov
and
out
mov
mov
(bad)
push
lods
mov
or
sti
push
btr
or
(bad)
aad
xchg
jnp
sbb
fsub
aad
lods
ret
stos
mov
jnp
mov
mov
mov
test
mov
cmp
adc
(bad)
pop
inc
sbb
add
mov
test
push
outs
scas
cli
dec
pushf
push
aas
or
xor
jo
or
add
inc
sbb
or
xchg
or
pusha
(bad)
or
mov
xor
xor
mov
and
or
fimul
add
or
jmp
aam
push
into
push
mov
cmp
int
mov
push
mov
mov
or
adc
jnp
mov
repnz
fadd
mov
fldcw
cdq
or
outs
inc
xchg
arpl
adc
movs
mov
jo
jne
cs
int
xor
(bad)
push
cmp
or
lods
jmp
imul
push
xor
xor
xchg
xchg
lds
xchg
mov
pop
in
fst
push
inc
(bad)
xchg
mov
jge
(bad)
into
jb
mov
fsubr
fdiv
int3
mov
adc
jb
popf
and
or
dec
data16
and
je
int3
jg
or
iret
mov
cld
mov
es
cmp
sbb
jns
shl
rcr
cwde
cli
cmps
dec
jo
xchg
sahf
cmps
push
lock
movs
push
lods
sbb
jmp
je
cmps
retf
pop
imul
(bad)
xor
xor
outs
pop
or
cwde
(bad)
jno
pop
adc
add
sub
lock
jno
mov
push
fdiv
fild
je
test
push
scas
repz
loopne
dec
cmp
nop
loope
sub
adc
lea
mov
cmp
jo
adc
ja
xor
std
into
mov
out
jne
cmp
adc
pop
scas
hlt
daa
xlat
imul
lods
xchg
mov
fild
dec
(bad)
mov
and
loopne
rcl
push
add
repnz
aaa
jg
subps
lods
jg
nop
test
adc
mov
sbb
jge
jne
pop
mov
push
das
xlat
pop
or
pop
and
addr16
pop
push
sub
sbb
ror
mov
xchg
pop
out
ss
xor
pop
xor
mov
push
mov
into
(bad)
cmp
test
adc
and
lea
les
test
push
push
or
cmp
je
ret
out
pusha
sub
cmp
js
xor
or
jns
or
or
(bad)
aaa
adc
sub
lahf
sbb
(bad)
inc
or
mov
jmp
or
inc
mov
sbb
jmp
mov
int
jge
adc
push
sub
mov
xlat
dec
and
adc
das
dec
xchg
and
adc
shr
ss
add
sbb
in
je
cmc
or
and
jns
jne
cwde
ror
xchg
jno
out
pop
lods
add
bound
jno
mov
inc
adc
push
(bad)
call
sub
sbb
(bad)
js
adc
ds
call
adc
xor
and
call
dec
add
call
sub
pop
add
add
push
adc
or
adc
addr16
push
fs
push
jb
xchg
(bad)
pop
sbb
inc
fmul
push
adc
daa
adc
(bad)
add
mov
in
or
xchg
cmps
pop
mov
addr16
in
xchg
fdiv
sbb
enter
or
push
pop
es
shr
cmp
inc
mov
or
fstp
and
ins
or
mov
fld
ins
add
or
mov
or
and
or
cmp
mov
sbb
adc
xor
jae
pusha
or
push
into
into
lods
inc
fdiv
jmp
push
push
(bad)
dec
ins
stc
mov
sbb
or
mov
retf
sub
dec
push
shr
aaa
add
pop
js
push
pop
inc
sub
adc
cmp
js
aam
mov
push
mov
mov
ret
pusha
movs
fsub
aad
or
pop
mov
mov
test
xor
adc
sbb
shr
rcl
pop
mov
sbb
mov
add
mov
pop
das
push
pop
sbb
mov
jno
mov
stos
sub
xor
mov
fdiv
xor
inc
test
mov
ret
cwde
cs
mov
pop
sbb
test
jne
jecxz
push
test
and
xor
sbb
lds
in
inc
xchg
fmul
pusha
aam
xlat
xchg
adc
push
arpl
xor
arpl
push
nop
push
shl
arpl
sbb
inc
fisttp
xor
daa
inc
pop
xor
xor
lea
das
add
xor
add
(bad)
mov
sub
sbb
push
push
cmp
mov
sub
fisubr
push
inc
mov
mov
mov
cmp
adc
scas
mov
adc
mov
or
shr
sbb
in
xchg
nop
call
inc
mov
xlat
dec
adc
icebp
xor
test
xlat
adc
mov
clc
ror
mov
adc
pusha
aam
or
jno
and
out
add
mov
shr
xor
loope
daa
ins
sbb
and
dec
addr16
mov
and
addr16
and
pop
mov
dec
sbb
or
js
scas
pusha
inc
mov
cmp
fiadd
shl
and
xor
jno
les
mov
mov
and
jl
jne
cmp
cmp
fs
add
out
out
es
hlt
add
inc
mov
out
xlat
hlt
inc
or
loope
popa
dec
inc
shl
pusha
pop
clc
rcl
aam
fcmovb
jmp
jae
xlat
hlt
add
daa
mov
jae
pop
sbb
popf
arpl
ja
cld
pop
jmp
inc
jp
sbb
das
dec
lock
mov
mov
pusha
frstor
mov
xlat
(bad)
xchg
dec
cmps
es
inc
add
(bad)
shrd
jg
mov
cmps
daa
in
xchg
daa
mov
lods
push
and
push
cmp
shl
cmp
cmps
loopne
movs
pop
loopne
cmps
sub
xor
jb
cmps
sub
add
cmp
cmps
jbe
fucomi
adc
push
inc
xor
pop
cmps
or
cmp
mov
test
(bad)
cmp
lods
mov
jo
fwait
scas
das
pop
lahf
cmp
in
xchg
stc
je
mov
mov
xchg
bound
jp
pop
mov
jae
mov
push
les
cmps
add
dec
cmp
pop
outs
cs
cmps
sub
sub
bound
cmps
push
mov
lock
cmps
mov
cmps
sub
sar
aad
adc
cmp
mov
bound
sub
mov
lea
sub
xchg
into
cmps
cmps
loopne
push
lods
cmps
int3
out
dec
inc
mov
mov
add
in
imul
or
push
movs
mov
inc
mov
sbb
(bad)
adc
cmp
sbb
(bad)
mov
cmps
sub
sub
inc
lea
sub
jo
test
xor
xor
retf
mov
out
push
jo
ficom
fadd
jae
in
bound
cmps
adc
add
xlat
pop
inc
lods
mov
fucomi
and
ds
sbb
adc
int
fild
stos
pop
cmps
xor
nop
loopne
jl
pop
jl
cmp
sub
je
sub
or
ss
sbb
daa
call
and
and
sub
les
cmps
and
cmps
jmp
arpl
sbb
cmps
out
les
xchg
adc
adc
cmps
adc
ret
cmps
gs
movs
and
mov
cmps
sub
jnp
push
(bad)
or
dec
cmps
loope
lds
in
test
or
aad
int3
shl
bound
sub
rcl
xor
(bad)
fucom
inc
cmps
mov
jno
ss
cmps
inc
lods
fisttp
and
aas
cmp
cmps
jno
(bad)
out
pop
std
sub
mov
dec
inc
mov
pop
call
addr16
les
ss
mov
aaa
xor
lods
push
or
jmp
push
cmps
call
xor
inc
jno
in
mov
cmp
icebp
push
js
jmp
cmps
cmp
push
mov
test
out
test
daa
mov
rol
dec
add
imul
rol
lds
lds
cmps
lahf
add
or
ja
sbb
pop
shl
retf
dec
cmps
cmp
jmp
dec
push
mov
aas
and
scas
arpl
push
pop
cmps
cmp
cmp
pfrsqit1
dec
ds
cmp
xchg
cmp
sbb
jo
hlt
and
mov
inc
cmps
lods
mov
cmc
cmp
lds
inc
cmps
shl
fmul
loop
inc
fwait
scas
dec
pop
les
or
and
or
dec
cmps
add
or
mov
loope
cmp
lods
mov
jo
fwait
sub
adc
inc
cmps
stc
(bad)
fcom
jmp
xchg
stc
cmps
mov
push
(bad)
dec
xchg
movs
inc
mov
cmps
xor
shl
cmps
jge
cmps
aam
adc
or
cmps
(bad)
add
sub
xor
mov
pop
inc
cmps
cmp
imul
cmps
inc
inc
lods
mov
cmps
aas
scas
xor
nop
lock
fmul
(bad)
loope
jmp
cmps
loop
out
lds
mov
cmps
test
out
test
ds
(bad)
mov
cmps
and
or
gs
cmps
add
xor
jp
or
cmps
add
xor
dec
add
cmps
aad
les
shl
cmps
jno
pushf
and
mul
pop
and
and
(bad)
loopne
pop
mov
push
(bad)
mov
cmps
pop
and
push
dec
inc
push
lea
sub
sbb
dec
retf
inc
jl
mov
xor
popa
jo
xor
pop
adc
inc
dec
in
mov
cmps
dec
js
mov
cs
lods
xchg
or
fist
jo
shl
sbb
(bad)
dec
(bad)
cmp
cmps
inc
cmp
push
das
mov
sbb
add
inc
inc
adc
jmp
cmps
xchg
adc
sub
enter
mov
inc
cmps
xor
push
sub
test
mov
cmp
mov
out
mov
sub
call
or
addr16
test
cmps
gs
dec
inc
lods
cmps
mov
cmps
inc
nop
and
es
fcmovnb
or
xlat
dec
cmps
stos
mov
add
hlt
push
adc
or
cmps
movs
cmp
fsub
lods
add
fdiv
cmps
mov
jno
dec
and
hlt
push
aas
dec
or
sub
sub
pop
push
mov
es
xchg
mov
daa
rcl
xor
mov
adc
inc
xor
push
aas
(bad)
cmp
cmps
mov
cmp
and
jo
pop
jno
(bad)
fld
cmps
sub
add
mov
or
pop
xor
aam
mov
and
jno
jnp
imul
mov
add
jae
add
jg
cmps
scas
aaa
jae
ret
sbb
cmp
les
dec
inc
adc
xchg
call
aas
lock
sub
mov
dec
clc
cmp
or
jp
cmps
dec
and
dec
push
mov
or
push
dec
jg
xchg
jl
ret
xchg
dec
pop
push
push
in
lahf
(bad)
hlt
sub
repnz
(bad)
cmps
mov
in
xor
pop
sbb
inc
data16
dec
inc
(bad)
out
xor
pop
in
call
dec
cmp
(bad)
push
cld
and
outs
xchg
dec
loope
das
das
cmp
jge
pop
dec
push
lea
mov
and
addr16
add
xor
outs
sbb
out
add
fsub
pop
inc
xor
cs
sti
cmp
push
mov
xchg
ss
fmul
mov
mov
or
mov
popf
in
xchg
add
sub
loopne
lea
scas
out
dec
xor
lds
nop
pop
addr16
clc
jmp
xor
nop
xor
arpl
and
push
adc
inc
in
xchg
xor
adc
pop
iret
out
inc
rcl
pusha
add
mov
into
adc
or
in
cli
push
lea
sahf
mul
xor
or
and
mov
sar
call
bound
sar
xor
pop
jmp
jge
(bad)
sub
push
into
sub
mov
dec
test
add
push
test
mov
daa
mov
and
push
cmp
sub
add
push
xchg
mov
jge
push
jbe
out
pop
sbb
pop
in
jnp
cld
popa
inc
ret
push
xchg
sub
out
fisub
repnz
les
or
add
imul
daa
dec
addr16
mov
adc
dec
in
fidiv
cdq
enter
push
and
clc
sbb
pop
lock
into
ja
hlt
push
jle
push
popf
cmp
dec
or
xor
dec
push
stos
ss
inc
fstp
dec
sbb
jecxz
popa
jmp
iret
push
mov
jmp
and
or
jmp
clc
lea
loopne
rcl
dec
xor
sbb
fld
int
push
push
xchg
inc
xor
ret
cmps
xor
sbb
push
mov
arpl
or
ss
data16
push
into
aaa
(bad)
hlt
add
xor
(bad)
fld
inc
fdiv
dec
les
push
(bad)
fadd
inc
dec
shl
pop
in
loope
jo
jp
js
mov
push
cmp
push
loopne
test
sub
imul
mov
lock
sbb
xchg
sub
data16
pop
loope
out
or
rep
jl
xchg
cmps
adc
adc
jb
and
jnp
add
lea
mov
sbb
add
lods
push
pop
xchg
cs
mov
and
aam
mov
add
mov
div
push
dec
in
pop
test
jne
aas
sbb
mov
push
mov
push
and
out
in
push
sbb
hlt
(bad)
(bad)
mul
pushf
jnp
or
push
adc
mov
push
dec
in
jo
xlat
or
pop
push
xor
adc
push
sub
sub
cmps
fmul
or
pop
sbb
es
lock
bound
ret
adc
ror
outs
pop
pop
(bad)
hlt
adc
sar
(bad)
mov
sbb
inc
rcr
or
rol
fadd
add
dec
sub
or
loop
call
js
push
jo
ret
fist
leave
push
jmp
jae
add
push
sti
cmps
div
cli
and
sbb
pusha
enter
pop
push
jne
cs
into
sub
add
imul
pop
xlat
cmp
int
jns
ja
cmp
add
mov
cmp
cmp
sub
cmp
sbb
push
(bad)
jo
xlat
inc
or
push
outs
paddq
dec
movs
sbb
xor
inc
xchg
ds
stos
add
dec
jg
or
in
ret
inc
and
lahf
push
iret
loopne
pushf
or
xchg
cmp
stos
pop
pushf
pop
int3
push
dec
push
pop
sbb
movs
das
enter
(bad)
pop
push
les
sub
jbe
loope
(bad)
popa
movs
pop
ror
jecxz
(bad)
pop
dec
(bad)
dec
dec
repnz
cmp
inc
(bad)
and
mov
loope
mov
adc
les
sbb
sub
adc
push
adc
push
and
into
ror
mul
adc
movs
and
stos
adc
test
fild
imul
and
(bad)
push
jo
jo
push
push
push
mov
fldenv
dec
mov
daa
inc
add
add
(bad)
push
hlt
cmp
mov
sbb
push
dec
xchg
(bad)
jno
xor
mov
inc
cmc
cmp
(bad)
es
(bad)
movs
popf
in
pop
mov
rcl
jp
pushf
xor
mov
popa
(bad)
dec
call
and
add
mov
xor
inc
cmp
or
into
je
popf
loop
cmp
(bad)
push
outs
adc
enter
sbb
movs
pushf
pop
lock
xlat
and
mov
mov
xchg
(bad)
out
loop
nop
add
push
popf
sbb
pop
(bad)
jo
nop
pop
or
daa
scas
lahf
(bad)
or
and
or
mov
sbb
mov
rol
popa
enter
cmp
(bad)
fsub
adc
sbb
xor
sub
xchg
sub
mov
adc
dec
jecxz
inc
mov
dec
cmp
clc
add
inc
cmps
fisttp
ret
arpl
and
rol
jmp
sbb
xor
jnp
xchg
mov
shr
inc
cmp
je
rcr
mov
lock
jae
jmp
mov
and
add
pop
sub
pop
inc
ret
and
shr
pop
and
push
xor
sbb
or
push
mov
sub
je
push
(bad)
sbb
cwde
test
cmp
push
das
jmp
sub
jle
push
and
stc
fild
jo
and
or
adc
ja
xor
and
mov
repz
cld
aaa
xor
arpl
jo
mov
inc
jmp
test
add
call
stos
mov
push
mov
jle
and
cmp
jle
add
or
mov
sub
(bad)
addr16
fsubr
retf
loope
cmp
push
inc
arpl
(bad)
nop
scas
nop
mov
add
add
into
clc
or
pop
fisttp
cmc
daa
cmc
(bad)
arpl
dec
test
jl
inc
mov
clc
mov
out
sbb
xor
out
pop
inc
repz
je
shr
add
(bad)
mov
and
sbb
cs
adc
cmp
je
mov
mov
add
pop
cli
addr16
div
cmp
in
iret
cmps
ret
pusha
mov
inc
sbb
or
nop
jp
xchg
ret
xchg
add
rol
rol
call
add
pop
jb
add
pop
loop
and
push
pop
adc
or
sub
cmp
adc
test
cmp
mov
iret
jne
mov
shr
inc
push
push
inc
jne
mov
pop
cmp
into
inc
enter
inc
dec
jne
dec
lods
adc
push
ins
clc
not
lods
out
inc
aas
cmp
jg
inc
jmp
repnz
out
sbb
cld
leave
(bad)
fidiv
and
(bad)
jg
or
dec
pushw
ins
mov
stc
fcom
popf
stc
ss
nop
adc
xchg
pop
mov
iret
rcl
xor
mov
hlt
push
mov
push
or
ret
fst
push
sbb
arpl
fs
fsubr
or
not
(bad)
(bad)
scas
ret
jbe
xor
vmovdqa
(bad)
into
adc
mov
mov
pop
or
push
xor
or
xor
cmp
ror
fistp
aam
or
or
outs
add
and
push
movs
rcl
outs
cs
adc
mov
jl
fadd
fstp
mov
(bad)
sbb
lea
pusha
ror
sbb
xor
push
in
push
adc
(bad)
jns
and
pop
in
add
stos
stos
add
cmp
into
jge
loopne
loopne
fsubr
fdiv
add
jae
adc
pop
jp
int3
and
nop
or
add
jle
sbb
and
jmp
ss
sub
test
jg
adc
lea
dec
adc
cld
fmul
out
add
push
cmp
mov
es
and
and
test
push
xchg
add
cli
cwde
dec
or
mov
sahf
adc
xchg
xor
test
xchg
jmp
je
pushf
das
outs
sbb
sbb
cs
adc
and
jmp
push
std
push
fadd
or
outs
push
ins
mov
mov
sub
inc
out
jp
push
pop
es
test
pop
ror
cmps
and
mov
sti
mov
adc
push
(bad)
mov
adc
enter
hlt
jecxz
add
test
sbb
jno
cmp
push
stos
push
popa
and
das
adc
(bad)
lock
cwde
leave
push
cmp
imul
or
push
clc
lods
pop
das
mov
stos
jo
xor
add
xor
outs
pop
das
jecxz
mov
ja
in
inc
jmp
psubusb
fild
daa
xlat
in
cwde
lock
jl
or
or
mov
(bad)
mov
adc
push
jo
ror
pop
inc
dec
pop
test
fstp
mov
and
mov
and
arpl
loope
sub
adc
mov
push
das
(bad)
cmps
add
pushf
je
idiv
test
push
and
push
mov
not
mov
pop
loopne
pushf
icebp
fcomp
pop
push
jo
cmp
push
cmp
out
rcl
ret
or
bound
push
cmp
adc
mov
add
adc
mov
mov
test
mov
xor
daa
mov
add
test
xor
ds
jmp
cmp
jo
rcr
and
adc
or
dec
jne
jmp
and
sbb
call
sahf
cmp
scas
push
or
inc
ret
outs
pop
call
rcr
in
ror
sub
sbb
pop
jmp
or
enter
cmp
repnz
jmp
jmp
shr
adc
adc
mov
rcl
rol
xor
iret
xchg
xor
push
inc
sbb
rol
pop
fwait
cmp
mov
or
in
je
mov
ja
test
or
hlt
jne
pusha
idiv
or
pop
mov
adc
xchg
add
bound
cmp
sub
add
mov
outs
add
out
mov
repz
pop
jae
sub
push
mov
pop
sub
fs
or
jo
inc
mov
and
(bad)
aad
xchg
outs
sbb
add
mov
or
mov
shl
lea
lock
dec
das
es
xchg
lds
outs
xchg
pop
cmps
dec
jnp
xchg
sub
imul
je
mov
mov
sbb
jno
cmp
push
ja
mov
mov
loop
je
imul
lods
fmul
inc
jg
xor
outs
scas
adc
add
add
jp
sbb
imul
mov
push
sub
les
lock
dec
ins
add
sbb
cmp
fs
popa
fs
js
add
lods
add
pushf
rol
mov
inc
out
sbb
inc
cmp
imul
adc
loopne
adc
fbstp
push
xor
or
jmp
inc
daa
jo
fist
jae
fmul
add
ja
ins
pop
inc
xchg
rol
sub
jmp
or
rcr
inc
lds
adc
daa
in
add
scas
(bad)
fmul
das
repz
nop
cli
aas
jae
mov
lock
je
(bad)
cmovl
xor
jg
(bad)
xor
adc
aam
cwde
imul
in
(bad)
test
or
and
pop
and
ja
xchg
movs
xchg
imul
adc
cmps
(bad)
movs
cmps
in
imul
ja
js
jmp
cld
and
mov
xchg
jnp
call
or
cmp
jmp
hlt
loope
daa
sbb
(bad)
cmp
adc
bnd
jmp
adc
(bad)
dec
fcom
cmps
stc
push
xor
push
mov
inc
lods
cmp
cli
cmps
or
les
or
add
push
cmps
ja
cmps
mov
sub
mov
pop
adc
cmp
lods
sub
daa
imul
cmps
mov
cmps
jp
mov
fsub
aad
mov
(bad)
loope
or
cmps
push
adc
xor
mov
daa
addr16
pop
adc
lods
cmps
(bad)
retf
inc
inc
lods
cmps
into
(bad)
pusha
adc
cmps
cmps
jne
add
cmps
sub
je
mov
cmc
or
lea
lea
inc
lods
inc
mov
lods
sub
inc
and
cmps
ja
fisttp
jl
retf
mov
and
add
and
cmps
dec
adc
mov
xchg
lea
jbe
test
cmp
xor
adc
push
xor
dec
dec
mov
inc
retf
shr
mov
ins
sub
jnp
cmps
cmp
lods
add
dec
fisttp
inc
(bad)
adc
and
aam
jo
shr
(bad)
and
add
cmps
jp
cmp
xor
or
out
jns
xor
cmps
jne
pop
mov
and
cmps
xchg
xchg
jge
inc
mov
cmps
test
and
inc
sub
call
out
call
jno
(bad)
rcl
cmps
mov
lds
test
or
jnp
es
add
sub
xlat
dec
jno
pop
and
das
hlt
aad
cmp
bound
xchg
(bad)
mov
add
jne
das
cmps
push
daa
mov
outs
jno
adc
mov
aas
xchg
cmps
loopne
sub
sbb
jo
jne
addr16
pop
test
test
rcr
mov
je
xor
aas
(bad)
cmp
cmps
test
mov
test
inc
cmp
cmps
jmp
in
xchg
xor
adc
stc
std
int
test
ins
movs
pop
out
xor
inc
adc
add
call
jno
xor
inc
lods
add
jmp
mov
jae
aas
jae
ret
sbb
cmp
les
dec
xor
ins
push
popf
sub
aas
lods
jae
mov
aas
(bad)
lods
dec
add
cmp
jbe
or
rsm
pop
and
loope
in
xchg
xchg
test
pusha
mov
pop
ja
lock
sub
repz
clc
loop
data16
mov
mov
push
and
jb
push
add
sar
sti
mov
mov
mov
cwde
out
and
mov
das
cld
movzx
loop
fst
popf
xchg
inc
lds
les
ins
je
bound
cli
in
jge
add
jp
jle
imul
idiv
push
mov
mov
cs
and
add
or
jne
mov
push
sub
mov
add
fisttp
add
fadd
xchg
shr
xor
sbb
cmp
aam
xchg
cmp
mov
fld
push
push
in
pop
cmp
inc
sbb
or
inc
lods
lea
sbb
ja
mov
test
icebp
mov
arpl
cs
(bad)
fidivr
aaa
cmp
mov
cmp
or
mov
push
jecxz
or
cmp
sbb
cmps
fnsave
(bad)
lahf
out
mov
movs
mov
aam
lods
shl
fild
(bad)
cmp
add
pop
in
and
das
jno
push
sub
jno
pop
mov
fcom
lds
push
enter
fs
shr
mov
inc
add
das
in
movs
sub
and
push
mov
and
add
das
xor
in
mov
data16
into
mov
jns
div
xchg
test
scas
push
rcr
les
bound
and
push
out
xchg
pop
popa
das
iret
iret
cmp
jge
or
scas
or
mov
push
lea
push
mov
xchg
adc
xor
add
dec
pop
call
or
repnz
ss
(bad)
sahf
jo
mov
xchg
ss
fmul
push
dec
jo
mov
xchg
or
push
(bad)
pop
(bad)
push
aad
adc
cmps
adc
add
loope
add
jne
dec
repz
adc
shl
add
movs
dec
scas
or
mov
jns
or
dec
push
clc
pushf
call
cld
mov
xchg
fidivr
sbb
call
das
neg
jnp
or
test
cmps
popf
cmc
mov
test
adc
dec
cmp
mov
lea
test
and
jle
cmp
cmp
dec
rcr
cmps
or
sti
pop
push
sahf
das
or
and
mov
ja
inc
addr16
nop
push
sub
add
(bad)
sub
fidiv
add
pop
add
inc
push
cmp
push
xchg
nop
inc
movs
jg
rcl
xlat
jp
lock
sbb
mov
ret
pop
add
push
ficomp
shr
mov
cs
mov
jnp
pop
nop
sbb
pop
xor
sub
shr
sbb
mov
add
(bad)
repz
aam
adc
and
neg
fisub
pusha
je
and
dec
xchg
ficomp
cs
ja
hlt
push
(bad)
jbe
outs
xchg
dec
or
xor
imul
dec
mov
adc
dec
mov
popa
mov
mov
sbb
test
lock
or
fimul
clc
int3
mov
cmp
mov
adc
int
call
repnz
jno
xor
outs
mov
add
or
cmp
add
ja
mov
add
ja
jecxz
cmp
cmc
movs
sbb
pop
bound
inc
das
ret
push
mov
mov
cmp
dec
or
rol
fdiv
jmp
cmp
xchg
sub
sbb
sub
pop
adc
xor
fsub
or
bswap
add
inc
jo
push
add
cld
xlat
adc
into
sbb
jmp
xor
out
sbb
add
call
es
leave
jne
out
arpl
xchg
push
xchg
jge
fbstp
jbe
push
sbb
into
call
or
(bad)
(bad)
jnp
jnp
ja
or
push
adc
inc
or
mov
outs
dec
xlat
xchg
repnz
push
xor
or
pusha
idiv
or
dec
adc
xchg
fmul
out
add
nop
ja
jne
ror
mov
ret
cli
ficom
adc
pop
or
or
outs
(bad)
adc
pusha
test
ret
cmp
js
and
adc
fiadd
xchg
das
ror
mov
fiadd
or
xor
sbb
js
int
dec
rcl
xor
test
push
jmp
and
lds
sti
cmps
pusha
je
and
mov
mov
mov
pusha
pop
push
jne
sub
add
ja
imul
and
add
fs
ins
jns
loopne
cmp
cli
out
loope
daa
mov
push
cmp
adc
xchg
fadd
push
mov
ins
clc
mov
xlat
inc
mov
stos
or
push
and
movs
(bad)
in
xchg
push
sub
ds
enter
stos
add
ret
inc
and
les
inc
mov
push
iret
pop
mov
loopne
pop
mov
test
pop
xor
imul
das
or
cdq
rcl
sub
popw
sbb
push
fcom
mov
lahf
sar
pop
adc
cmp
pop
repz
lahf
cmp
mov
int3
fwait
loope
and
popf
and
imul
cmps
gs
or
loop
cmp
daa
cmp
add
sbb
ret
icebp
retf
jmp
mov
addr16
jnp
(bad)
fcom
mov
test
pop
push
jo
daa
(bad)
adc
mov
fistp
pop
test
inc
jo
mov
call
and
jne
xor
mov
mov
pushf
sbb
mov
(bad)
lods
push
xchg
test
sub
pop
lods
and
mov
pop
jmp
adc
call
xlat
pop
mov
jne
dec
popa
(bad)
mov
adc
icebp
js
int
cmp
(bad)
ss
or
aaa
(bad)
mov
(bad)
ss
and
popf
xbegin
dec
jo
mov
ror
test
sbb
ror
test
mov
pop
and
jb
mov
loopne
or
jno
cs
enter
(bad)
cmp
push
lahf
dec
xchg
cmp
(bad)
cmp
js
pop
les
(bad)
jl
sbb
xchg
mov
pop
(bad)
lahf
xor
or
push
pop
push
xor
adc
into
(bad)
or
retf
jbe
sbb
cmp
sar
sbb
jne
test
je
(bad)
(bad)
fisttp
pop
nop
add
xor
mov
stos
mov
pop
or
fmul
mov
mov
mov
movs
fcom
jbe
xchg
xchg
push
sub
lock
xchg
sbb
or
ret
cmp
cmp
je
mov
mov
loop
xchg
jbe
cwde
test
test
push
add
outs
or
xor
push
mov
mov
or
scas
xlat
and
mov
das
fs
mov
push
lahf
mov
xchg
sub
inc
mov
das
in
mov
outs
push
aaa
add
adc
inc
and
xchg
lahf
inc
sbb
enter
inc
rcl
jmp
mov
inc
imul
or
lahf
sub
push
aaa
xchg
aaa
cwde
dec
test
pushf
push
jecxz
push
fmul
pop
or
mov
je
inc
js
push
fild
mov
je
mov
or
mov
lds
mov
cmp
loope
int3
inc
or
jbe
jg
fs
adc
inc
scas
xchg
out
xor
pop
adc
out
xor
sub
xchg
cmps
push
ss
leave
and
add
and
xchg
jl
xchg
jmp
push
inc
cmps
test
inc
ss
shl
ins
and
lods
(bad)
adc
xor
cmps
pop
cmc
and
sahf
dec
jp
mov
sub
or
push
add
or
cmc
push
rcl
push
inc
aad
out
push
jecxz
push
mov
cs
cmp
sub
fimul
xchg
retf
sub
push
sub
xchg
sbb
xlat
dec
mov
bound
cmp
xlat
stos
push
sbb
add
fcom
lea
xlat
div
aam
fmulp
jmp
mov
les
mov
mov
pop
in
cwde
mov
(bad)
pop
xor
bound
pop
inc
nop
or
mov
adc
lods
rcl
sbb
test
shr
xchg
repz
xor
push
sub
xor
xlat
xor
int3
lds
xlat
mov
(bad)
sbb
and
and
jae
pop
adc
and
sbb
sub
out
sub
lds
sub
out
shrd
inc
(bad)
in
add
xchg
loopne
call
mov
mov
jnp
aad
add
cwde
call
sbb
fbld
sbb
(bad)
sar
inc
inc
sub
add
int3
cmps
shl
jecxz
(bad)
aad
loop
psubsb
cmp
jb
cmp
add
xchg
into
mov
jmp
inc
loope
jo
cmp
jle
adc
sar
add
mov
xor
lock
aam
push
cmp
sub
pop
addr16
(bad)
aam
cmp
sahf
ss
lea
sub
inc
mov
cmp
or
xchg
xor
test
adc
adc
sbb
cmps
nop
add
add
adc
cmps
sbb
mov
xchg
sbb
aas
xor
push
dec
popf
push
inc
push
sbb
cmp
movups
push
rol
sbb
test
mov
add
xchg
sbb
cli
pop
adc
imul
push
cmp
and
daa
in
cmp
js
mov
jne
cmp
or
cs
scas
mov
pushf
call
fdiv
mov
in
nop
mov
inc
rcl
or
daa
jo
mov
lock
aad
and
shl
dec
push
mov
cmp
cmp
adc
xchg
stos
jns
stc
add
arpl
or
leave
push
jns
fcom
ret
cmp
nop
jle
cmp
sbb
pop
rol
adc
mov
sbb
inc
(bad)
mov
sbb
js
fidivr
add
push
add
loopne
pushf
or
add
xor
cmps
js
jl
iret
out
ficomp
test
fs
adc
jl
push
je
loopne
bound
js
xor
push
clc
imul
jns
call
je
shr
lock
or
in
xor
mov
ins
les
pop
or
aaa
add
int3
rcl
dec
je
adc
push
sbb
sbb
int3
enter
in
xchg
push
and
dec
fcomp
shr
fadd
sbb
add
xchg
xor
sbb
or
mov
aad
add
(bad)
(bad)
clc
mov
lock
mov
mov
mov
imul
lock
xchg
mov
add
xor
cli
lods
enter
push
or
sar
cmp
and
test
cwde
test
fcom
mov
mov
ret
mov
bound
cmp
test
mov
mov
fstp
mov
ror
int3
pop
daa
data16
lods
(bad)
js
mov
jmp
or
mov
test
aaa
push
add
aas
pop
pmulhuw
push
mov
retf
inc
fcomp
and
mov
dec
jne
mov
push
adc
test
ror
xchg
out
sbb
pop
bound
push
aaa
pop
addr16
and
add
sbb
mov
pop
mov
xchg
mov
arpl
sub
sbb
or
pop
(bad)
call
lods
xchg
test
(bad)
adc
pushf
mov
fdivrp
mov
cmps
or
mov
push
dec
inc
sub
mov
mov
adc
mov
cmp
mov
data16
xor
cmp
or
xor
enter
mov
mov
push
lea
xor
call
movs
inc
aam
cmp
imul
pop
test
test
add
pop
sbb
push
scas
sbb
or
das
mov
or
sub
xchg
lds
ss
push
aas
jge
mov
cld
mov
inc
jmp
popa
aam
(bad)
sbb
mov
repz
pop
scas
xlat
aaa
jp
sub
nop
adc
cmp
mov
push
pop
xchg
sti
dec
sub
dec
je
or
push
retf
pop
pusha
icebp
lds
add
sysenter
loopne
addr16
or
pop
xor
mov
or
inc
adc
cld
adc
add
push
inc
mov
ret
loope
inc
add
push
push
and
xor
jne
cmp
(bad)
and
neg
test
sbb
inc
inc
aas
adc
push
lds
pop
ret
stos
mov
xchg
adc
mov
cmp
in
xor
jg
je
arpl
jg
mov
or
inc
mov
sbb
ror
jnp
into
and
rol
jnp
inc
jbe
jnp
mov
xchg
ret
mov
or
jmp
sbb
out
fs
adc
out
dec
outs
mov
out
xchg
cmp
cmps
mov
lds
or
push
adc
test
mov
cmp
lahf
retf
daa
dec
lds
lahf
cwde
rol
jo
out
xchg
xchg
outs
sbb
sar
push
daa
push
pop
xchg
das
jno
xchg
daa
add
daa
adc
pushf
jo
adc
inc
or
dec
mov
pop
loopne
xor
pop
adc
repnz
cmp
mov
or
xor
xchg
adc
push
pop
and
jne
and
daa
xchg
daa
out
sbb
push
lods
and
mov
and
lahf
ror
dec
ret
pusha
xchg
jl
dec
rol
sbb
lahf
popa
loopne
push
push
lahf
hlt
adc
xchg
mov
sub
fadd
mov
icebp
mov
sbb
sbb
loope
lahf
adc
pop
sbb
push
xchg
(bad)
repz
pusha
std
mov
lahf
cmp
std
push
cld
add
sar
cmp
je
into
dec
fst
daa
rcl
cmps
adc
cmp
mov
lds
and
popf
mov
movs
and
mov
sub
je
cdq
add
aas
sbb
add
int3
sbb
outs
and
add
mov
adc
cmp
jno
add
daa
pop
daa
xor
xlat
mov
jne
lahf
sbb
shl
lahf
mov
fimul
cmp
xchg
cmp
and
add
or
lahf
cs
cmp
mov
add
dec
sahf
or
and
sahf
sub
test
not
pop
push
stc
dec
fsub
nop
cmp
xor
sbb
push
add
(bad)
aad
cmp
xchg
xchg
adc
add
mov
loope
push
cmps
xchg
je
stos
stos
inc
sbb
js
mov
bswap
(bad)
(bad)
push
and
and
mov
ficom
mov
jb
les
cmp
and
pop
lea
(bad)
frstor
retf
mov
mov
rol
test
xchg
cmps
sbb
shr
mov
push
mov
inc
aam
int3
mov
mov
jns
push
add
arpl
(bad)
out
in
mov
fucomi
adc
mov
pop
ror
cmps
and
dec
or
pusha
adc
push
pop
(bad)
mov
iret
leave
add
popa
mov
adc
adc
mov
or
xor
fimul
push
arpl
(bad)
sbb
mov
dec
mov
cmps
iret
xor
jno
and
push
pop
hlt
cmps
aas
pusha
push
or
jmp
dec
lea
lock
shl
xor
jnp
add
stos
loopne
repz
xor
sbb
cmps
jecxz
in
pop
xor
push
cmps
mov
adc
out
mov
daa
call
loope
cmps
xor
sub
inc
mov
or
aaa
movs
jl
push
cmps
loope
(bad)
div
xchg
cmc
cmps
mov
jb
xchg
cmps
pusha
sbb
dec
(bad)
sbb
push
sbb
mov
mov
lea
aad
daa
or
mov
lea
mov
scas
test
in
jno
cmps
adc
and
xor
adc
cmps
sub
mov
add
dec
rol
sbb
sub
jmp
(bad)
xchg
add
inc
push
cmps
inc
cld
cmp
sbb
inc
or
(bad)
dec
push
push
adc
xchg
pop
mov
cmps
sbb
nop
mov
sbb
push
sahf
lods
cmps
adc
mov
cmps
(bad)
hlt
push
arpl
or
mov
fdivr
call
xor
outs
add
jo
or
and
enter
jl
ret
xor
movs
sbb
loope
mov
inc
ss
or
je
inc
adc
mov
lods
and
mov
lods
stos
jno
cmp
dec
ds
inc
sub
sub
mov
loopne
dec
call
pop
push
dec
xchg
inc
adc
fcomp
adc
mov
push
push
sbb
stos
in
mov
test
xor
mov
mov
mov
pop
mov
jno
push
sub
and
sahf
pop
inc
lea
leave
add
sub
xor
adc
mov
and
xor
jmp
mov
ret
lods
and
xchg
outs
test
mov
ret
je
mov
mov
or
cmps
mov
lods
mov
push
jbe
int3
ja
hlt
push
jle
jno
nop
inc
cs
cmps
aas
push
scas
scas
fstp
lahf
jmp
inc
pop
inc
mov
xchg
loop
int
sbb
lock
clc
lea
scas
retf
mov
or
cmps
loop
icebp
mov
mov
pop
hlt
dec
inc
jl
push
adc
pop
in
jmp
into
retf
ror
(bad)
hlt
add
jecxz
in
(bad)
xor
add
(bad)
es
jge
loope
ret
push
das
je
or
cwde
xchg
cmp
sar
out
bound
in
fneni(8087
mov
sbb
out
mov
scas
movs
jl
adc
int3
pop
jo
cmps
adc
aaa
and
rcr
out
sbb
pushf
or
pop
push
cs
aam
adc
pop
call
aas
mov
sbb
fs
out
(bad)
push
sbb
hlt
(bad)
fidivr
mov
(bad)
jnp
or
cmp
shl
les
mov
hlt
dec
push
mov
pusha
push
pop
inc
sbb
popf
sub
inc
ret
adc
int
out
add
nop
ja
ret
adc
mov
iret
pusha
sbb
jnp
sbb
inc
iret
xchg
(bad)
xor
xchg
mov
daa
inc
jmp
lahf
push
sti
sbb
mov
cmps
pusha
push
pop
mov
mov
pusha
pop
push
jne
pop
and
cs
add
jl
mov
add
fs
ins
jns
inc
pushf
js
iret
daa
adc
in
lock
loopne
pop
pop
jo
ret
jo
xlat
inc
dec
sub
add
pavgb
and
xor
leave
loopne
jl
dec
mov
fistp
sbb
push
or
cs
icebp
adc
push
pop
in
pushf
jg
movs
pop
add
mov
loope
pop
jecxz
les
rcl
mov
and
mov
jno
mov
inc
or
xchg
pop
pop
jno
outs
stos
pop
xchg
mov
adc
or
pop
ss
adc
aas
mov
in
push
cmp
sub
lahf
pop
lods
adc
push
and
sub
(bad)
xchg
pop
sbb
pushf
dec
hlt
(bad)
jns
mov
pop
fistp
cmps
fild
movs
daa
in
pusha
add
pop
loop
jl
push
sub
pop
cmc
add
mov
dec
fild
adc
sbb
rol
sbb
into
popf
and
and
and
sbb
and
add
imul
pop
xor
fild
add
sbb
xor
mov
xor
fbld
cli
add
dec
and
adc
mov
(bad)
(bad)
cld
lahf
fucomi
and
push
sub
loop
cmp
lea
push
mov
das
not
pusha
mov
out
cmps
sbb
clc
fwait
or
and
xor
fistp
push
add
fistp
inc
add
fbld
or
sbb
jns
mov
push
add
scas
(bad)
cmps
push
pop
cmp
pusha
leave
mov
stos
pop
ror
psubw
fisttp
cmps
or
sub
sub
sbb
not
stc
inc
or
nop
xchg
ffreep
adc
pop
xor
push
xchg
cdq
xor
inc
xor
mov
int3
mov
push
xor
iret
aas
fisttp
pusha
sub
into
js
mov
fist
stc
sti
test
retf
add
leave
add
cs
push
(bad)
js
fucomip
jl
inc
mov
popa
mov
or
and
and
js
fild
cmp
js
in
out
out
adc
sub
push
or
fistp
mov
test
dec
in
mov
fcom
js
sbb
test
imul
pop
push
out
xor
into
pop
cmp
mov
sbb
aad
jb
pop
mov
pop
dec
pop
inc
nop
or
push
(bad)
aas
mov
push
arpl
xchg
dec
cmps
loopne
push
adc
adc
xchg
sub
push
pop
and
push
mov
stos
out
xchg
and
test
mov
push
das
mov
js
add
lock
add
cmp
cwde
pop
fcmovu
inc
or
add
add
fist
call
int
pop
sbb
xor
fistp
sbb
adc
add
xchg
je
dec
xor
neg
add
jo
cmps
fild
mov
(bad)
out
shl
sbb
adc
int3
or
movups
cmps
xchg
inc
push
add
inc
test
out
sbb
add
imul
dec
mov
pop
daa
sub
add
adc
mov
add
mov
push
fild
pusha
dec
pushf
mov
fcomip
sbb
push
test
push
adc
sbb
pusha
sbb
out
mov
jo
add
pop
xor
cs
pop
dec
(bad)
pop
mov
xchg
fmul
jg
je
not
dec
xchg
call
fisttp
sti
cmc
adc
inc
mov
jo
pop
lahf
adc
or
pop
pop
mov
inc
jo
or
xor
add
mov
or
rcl
sub
cli
ins
lods
push
dec
mov
pop
and
leave
mov
cmp
ds
xchg
and
mov
bound
dec
pop
cmps
or
jo
(bad)
mov
mov
psubd
pop
aam
(bad)
mov
add
add
or
add
mov
sbb
mov
fild
adc
add
cmp
fbld
nop
pop
xor
fistp
cmp
sbb
sbb
xchg
pushf
arpl
dec
xchg
daa
push
rcr
popf
inc
(bad)
imul
jo
add
out
cmp
jno
ja
movs
rcl
add
xchg
cmp
lahf
adc
xchg
inc
push
aam
out
add
add
popa
mov
mov
push
pusha
(bad)
push
inc
pop
fistp
push
add
ret
and
or
sbb
(bad)
push
push
cmp
sub
je
ds
and
rcr
jg
inc
push
or
sbb
sub
adc
xchg
test
fcomp
pop
stc
sbb
arpl
and
mov
mov
(bad)
push
push
mov
fisttp
cwde
jno
dec
pushf
mov
add
rcl
dec
cld
js
lock
fist
and
imul
(bad)
in
jno
jo
retf
mov
mov
xor
in
or
xor
inc
(bad)
aad
cmps
mov
arpl
fistp
ins
outs
push
cmp
clc
xor
pop
out
or
xor
mov
add
push
xor
lock
fistp
and
mov
test
mov
sbb
dec
mov
xor
dec
js
mov
sbb
jg
sub
cmc
out
in
mov
adc
sbb
lea
dec
mov
and
dec
pop
inc
and
push
xchg
add
lea
push
xchg
add
jle
and
mov
xor
leave
mov
ds
cmp
mov
mov
mov
lahf
mov
xchg
fbstp
add
in
mov
or
mov
add
add
jg
or
fild
call
add
sbb
fisttp
add
adc
fisttp
add
xchg
sbb
pop
sub
das
mov
(bad)
fisttp
mov
(bad)
mov
fucomi
fcomp
movs
jl
loopne
cmp
adc
das
cwde
out
pop
sbb
mov
add
inc
or
xor
scas
sbb
add
(bad)
push
or
dec
ror
adc
jo
lahf
fild
and
mov
test
add
mov
ins
rol
ins
dec
or
inc
xor
add
pshufw
xchg
pop
dec
push
aaa
push
ret
fidivr
add
pop
frstor
in
retf
mov
mov
mov
cmp
hlt
(bad)
dec
ret
ret
push
call
xor
ja
xchg
rol
jnp
int3
sub
cmps
adc
jmp
push
hlt
push
jl
mov
jg
lea
dec
cmp
jg
xor
jmp
pop
test
jge
mov
pop
sar
or
test
test
inc
jle
push
add
dec
test
xor
xor
cmps
jbe
cwde
or
mov
retf
or
lea
retf
loopne
or
adc
add
inc
test
idiv
dec
shr
pop
lock
jg
mov
sub
shr
add
neg
jecxz
adc
mov
adc
mov
call
lock
in
add
lea
jmp
popa
sbb
in
data16
je
lds
sbb
mov
sub
adc
jo
dec
inc
and
daa
xchg
mov
or
mov
aaa
push
clc
shl
loopne
shr
dec
push
dec
sar
mov
sbb
mov
pop
pop
and
adc
(bad)
mov
andps
jecxz
mov
inc
add
mov
mov
dec
into
call
adc
loope
mov
inc
sub
xchg
mov
pop
pushf
jb
nop
or
pop
ss
adc
aas
pop
adc
loopne
push
cmp
mov
sbb
mov
sub
pop
arpl
xchg
inc
jb
inc
pop
dec
and
mov
(bad)
and
es
adc
jo
rol
test
pop
xor
movs
add
sub
rcl
push
or
pop
outs
or
mov
pop
inc
pop
pusha
cmps
rol
xchg
pop
into
outs
and
and
adc
cmp
lock
add
and
sbb
inc
pop
xor
pop
and
daa
pop
adc
out
pusha
or
ror
rol
das
xchg
add
xchg
add
adc
adc
and
add
in
jo
sbb
ins
pusha
xor
mov
or
sub
cmp
daa
adc
ret
jns
mov
dec
test
scas
pop
cmp
pop
adc
scas
ins
pop
test
add
inc
(bad)
cmps
and
test
pop
or
sub
jp
pop
xchg
mov
not
and
enter
mov
add
arpl
stos
pop
xchg
imul
mov
pop
pop
add
popf
push
xchg
not
or
mov
leave
push
hlt
js
das
cmp
pop
lock
sbb
fisttp
mov
(bad)
stc
sub
adc
retf
and
cmp
pop
sbb
pop
lea
inc
fs
fld
adc
push
sub
xor
outs
sbb
out
pusha
sbb
or
sub
(bad)
or
sub
sub
aam
aaa
push
lods
mov
ja
xchg
ret
push
sbb
jnp
xor
sub
(bad)
dec
int3
or
into
push
ret
loope
pop
cmp
mov
sub
mov
jb
pop
mov
or
push
sub
aas
mov
pop
sbb
sbb
push
leave
adc
add
and
(bad)
loopne
ds
mov
dec
xchg
mov
cli
gs
mov
jmp
nop
jbe
icebp
push
jl
push
cwde
pop
cmp
pop
comiss
pop
test
icebp
sbb
sub
(bad)
test
jb
mov
sub
jae
xchg
je
out
push
or
cwde
arpl
pop
test
loope
(bad)
ror
cmp
pusha
add
movs
jl
sub
adc
adc
cs
out
cmps
adc
xor
test
leave
add
scas
and
ret
(bad)
mov
pop
xchg
adc
push
and
push
sub
or
repnz
test
or
cmp
adc
dec
and
test
aaa
and
adc
inc
xor
and
sbb
fbld
sbb
cmp
add
fsubr
stos
les
pop
jmp
retf
das
push
cmp
and
dec
push
push
dec
fistp
push
or
imul
daa
daa
inc
mov
mov
xchg
jo
adc
inc
or
add
and
xor
add
sub
pop
rcl
sub
push
and
pop
and
inc
sub
sub
pop
jbe
cmp
rol
pop
mov
and
and
mov
outs
pop
and
or
fild
mov
scas
sbb
pop
aam
push
sub
outs
add
cmp
adc
sbb
add
add
pop
pop
and
and
fistp
ret
and
add
add
pusha
ins
addr16
fild
jo
bnd
outs
sbb
add
fistp
adc
xchg
dec
daa
and
inc
fist
cmp
nop
into
out
jno
add
movs
xchg
cmp
sbb
pop
push
out
inc
push
add
lahf
adc
rol
sbb
cmps
mov
pusha
jo
cs
add
mov
or
push
cmp
sub
daa
jmp
add
fild
fistp
fcomip
nop
mov
add
add
and
cmp
add
inc
push
push
nop
fild
xchg
adc
push
mov
cwde
pop
stc
add
sbb
sub
mov
push
mov
gs
xchg
jno
push
fist
sahf
jno
cwde
mov
aas
and
bound
fist
and
rcl
mov
out
nop
ffreep
push
and
and
fbstp
sbb
add
push
fild
mov
cs
xchg
sbb
mov
jo
jecxz
leave
ins
outs
xor
add
in
pop
fbstp
add
push
cmp
das
fbstp
inc
add
mov
js
clc
arpl
aaa
push
jl
xor
mov
sbb
push
mov
stos
mov
mov
les
mov
lea
dec
mov
and
dec
pop
inc
and
push
xchg
add
mov
xchg
cmp
mov
cli
xor
(bad)
test
mov
add
push
test
loope
push
aam
ds
push
push
xchg
mov
mov
add
(bad)
dec
and
mov
in
mov
or
mov
add
jg
popa
outs
test
pusha
fild
sub
test
int
or
rol
fild
in
(bad)
adc
fild
in
inc
sub
fistp
fst
push
jo
aad
xor
fucomi
loope
or
mov
lahf
dec
adc
sub
out
pop
inc
adc
push
out
nop
test
scas
sbb
adc
mov
mov
add
enter
push
push
js
or
loopne
fild
dec
cmp
cmp
inc
ja
into
pshufw
xchg
pop
dec
push
aaa
push
ret
fiadd
outs
add
pop
frstor
in
retf
mov
fcomp
adc
hlt
(bad)
dec
ret
ret
push
call
xor
ja
xchg
rol
jnp
int3
sub
cmps
adc
jmp
push
hlt
push
jl
mov
jg
lea
dec
cmp
jg
jo
(bad)
ins
push
jl
test
jge
out
aas
ja
sbb
inc
push
test
test
inc
or
push
add
dec
clc
cdq
xor
rol
or
or
cmp
inc
retf
and
leave
(bad)
push
dec
cmp
adc
std
pop
pusha
sbb
or
inc
test
pushf
ror
call
lock
mov
mov
and
sub
shr
add
adc
mov
adc
mov
jae
or
call
lock
add
lea
jmp
popa
sbb
jne
test
je
lds
sbb
mov
pextrw
sub
adc
sub
and
ficomp
inc
jb
mov
fld
push
or
add
push
pop
pushf
jo
ficom
retf
inc
mov
arpl
fdivr
pop
repnz
stos
movs
and
add
jge
jbe
shl
jle
ret
jmp
les
jmp
out
shr
xchg
pop
leave
xor
pushf
or
xor
push
aas
mov
(bad)
outs
sbb
ret
xchg
push
add
xchg
sbb
ficom
or
mov
jbe
push
imul
ret
jb
popa
or
mov
inc
inc
daa
pop
inc
cdq
ret
and
pop
stos
and
push
fdiv
push
jne
sub
mov
pusha
sub
adc
das
stc
loop
aad
mov
pop
cmp
mov
push
(bad)
cmps
push
xchg
ret
rol
inc
mov
pop
ins
ss
add
mov
mov
in
ja
or
scas
xchg
pop
in
mov
dec
cwde
or
adc
jp
inc
or
nop
or
scas
inc
das
xchg
jae
jg
iret
hlt
loope
pop
and
pop
aam
push
xchg
mov
add
movs
inc
es
aas
out
scas
jbe
sub
not
cmp
inc
dec
jg
and
xor
stc
jecxz
pop
das
lock
pusha
jo
and
mov
and
mov
(bad)
into
out
cmp
pop
das
xchg
jmp
in
popa
test
push
push
test
sar
ins
dec
in
cs
jl
(bad)
aam
add
mov
out
jb
mov
(bad)
xlat
push
jg
rol
shl
inc
(bad)
xor
test
arpl
arpl
or
pop
mov
shl
fs
in
mov
pop
mov
call
push
bound
add
push
or
sbb
stos
pop
xchg
xlat
cwde
aaa
inc
mov
ja
add
cmp
inc
cmp
stos
ret
cs
cmp
push
add
sbb
or
push
mov
add
lea
adc
jg
shl
mov
cmp
hlt
mov
xor
inc
ja
pop
mov
inc
or
sbb
xchg
fnstsw
pop
pop
test
daa
shr
add
movd
out
and
add
cwde
rol
enter
sub
cs
fldcw
jg
cmp
jl
ds
push
push
je
cmp
mov
loop
jmp
mov
push
mov
inc
dec
cmp
cmp
jle
test
int3
loop
push
ins
cmp
ds
mov
mov
sub
jl
inc
out
and
daa
dec
mov
out
push
dec
and
adc
data16
loopne
inc
push
sbb
pop
dec
push
pusha
push
pop
out
and
jno
jmp
add
xchg
ins
mov
xor
add
pop
add
out
xor
cld
jno
adc
add
and
cmp
pop
in
mov
lahf
in
pop
leave
add
lock
imul
jmp
lahf
ss
jno
cmp
sbb
out
mov
xlat
push
jo
in
sub
in
loopne
icebp
mov
shl
sub
cld
jg
xor
imul
adc
mov
enter
daa
push
test
pop
push
mov
not
jl
cmp
das
aam
(bad)
fcomp
pop
and
push
fld
fadd
out
loopne
push
sub
add
xchg
jmp
adc
sbb
jo
rcr
xor
xchg
cs
aam
mov
iret
aaa
out
push
iret
ret
jg
lods
push
dec
cmp
add
inc
out
mov
cli
scas
push
and
in
imul
das
and
lea
sbb
jle
sub
pop
cmp
pop
outs
and
loop
loope
shl
add
call
ret
adc
in
inc
push
xchg
mov
inc
cmps
imul
ret
mov
jg
mov
lods
shr
in
inc
xor
lds
sbb
test
mov
(bad)
in
lods
mov
shr
xor
call
cmp
jg
sub
xor
out
cmp
nop
or
pop
rcl
lods
jns
mov
repnz
sub
loopne
and
mov
or
dec
pop
inc
repz
lahf
pop
push
pusha
shl
push
call
pop
mov
lea
outs
inc
push
in
call
add
jb
pop
test
xor
sbb
aaa
mov
push
mov
nop
lock
imul
test
push
pusha
xor
pop
shl
fild
dec
xor
imul
xor
(bad)
fistp
(bad)
xor
mov
int3
in
add
nop
sub
inc
aas
aaa
xor
sbb
xchg
ins
aaa
popa
jo
push
mov
mov
daa
cwde
inc
pop
push
aaa
push
pop
push
in
aaa
(bad)
and
push
or
push
in
push
imul
(bad)
(bad)
sbb
jae
add
ins
cdq
pop
xchg
inc
mov
enter
daa
pop
push
(bad)
rcr
push
adc
in
pop
cmps
add
sub
inc
and
mov
pop
sbb
shl
add
mov
pop
sub
inc
xor
push
ja
sbb
pusha
enter
in
add
sbb
mov
fwait
xchg
ins
xor
pop
sbb
js
sub
pop
dec
sub
lea
lea
daa
(bad)
xor
add
mov
pop
push
xchg
sub
add
sbb
jnp
mov
push
inc
pop
xchg
pop
(bad)
adc
dec
and
sub
inc
arpl
in
pop
push
sbb
js
inc
jl
push
push
dec
imul
popa
cs
inc
pop
mov
outs
ins
ins
outs
outs
cs
push
popa
imul
ins
or
outs
addr16
call
inc
inc
jbe
outs
je
outs
xor
jb
ds
jb
popa
mov
outs
push
adc
sbb
fistp
dec
imul
arpl
fiadd
adc
aam
cmovnp
jo
test
pop
enter
push
jo
add
cmove
popa
jne
je
jo
shl
ja
pop
jge
or
adc
dec
outs
or
mov
fbstp
or
push
and
push
dec
bound
adc
mov
add
inc
cmp
add
add
or
mov
adc
jle
mov
add
xor
sub
mov
cmp
pop
inc
push
scas
pop
sbb
push
inc
outs
jne
push
popa
(bad)
retf
add
adc
icebp
add
out
push
daa
(bad)
out
mov
push
movs
je
inc
jne
arpl
std
xor
and
jg
add
sbb
or
imul
or
xchg
push
cmp
repz
ret
movs
sbb
les
mov
int
jg
les
nop
add
nop
lea
test
inc
mul
pushf
adc
mov
inc
dec
pop
js
push
fidivr
pop
popa
fmul
call
aas
inc
or
push
xlat
je
jb
add
ss
cwde
xor
inc
sbb
add
inc
mov
shr
add
ins
data16
or
adc
or
inc
pop
add
add
push
pop
inc
sti
push
dec
pop
je
add
ins
lea
or
pop
lock
adc
mov
dec
cmp
or
ret
adc
add
ret
add
pop
inc
jne
sbb
enter
push
xchg
repnz
jbe
push
dec
sub
or
pushf
mov
adc
mov
int3
repnz
adc
shl
mov
push
push
fwait
daa
dec
and
clc
loope
repz
shl
add
adc
sub
dec
dec
movs
jo
js
pop
xchg
pop
push
jmp
jae
inc
ins
lods
sub
ror
xor
add
sub
cdq
cmovp
jae
iret
pop
jp
push
inc
sub
dec
outs
setne
or
daa
daa
fwait
jmp
xchg
xchg
pop
nop
lds
mov
leave
leave
leave
inc
xchg
jmp
in
jb
jmp
ds
sar
cmp
jns
mov
mov
fisub
mov
pop
imul
pop
or
push
xor
mov
popa
call
pushf
mul
dec
fwait
mov
and
inc
mov
sub
add
jno
rcl
or
test
add
mov
xor
mov
inc
mov
sub
cmovns
hlt
push
xchg
add
sbb
sbb
push
sub
aam
cdq
cmps
pop
dec
jg
clc
jle
inc
fs
sub
cmps
jmp
popa
ins
jne
arpl
sub
xchg
adc
or
cmp
push
(bad)
mov
ins
push
fiadd
cmp
call
scas
or
cdq
sub
and
hlt
adc
lds
mov
inc
and
sbb
sbb
cmc
enter
add
adc
or
mov
inc
add
xor
push
das
leave
call
and
xchg
mov
mov
push
arpl
pop
xor
and
repz
pop
dec
jae
imul
sub
add
push
adc
not
or
push
add
fimul
inc
add
shl
and
mov
lock
or
pop
jmp
dec
xchg
pop
jle
inc
js
xchg
push
jo
cdq
ins
jle
aaa
adc
add
push
inc
xor
scas
inc
add
cmps
outs
mov
cmp
adc
mov
or
sar
rcr
push
add
sub
xchg
fs
or
ja
iret
jo
out
and
add
xor
pusha
mov
das
add
push
icebp
sub
and
mov
sbb
add
dec
push
jae
sbb
es
sub
dec
sub
push
aaa
mov
pushf
es
push
je
cmps
imul
add
cmp
cmp
dec
push
cmps
sbb
into
jo
aam
imul
add
cdq
sub
jo
or
push
sub
and
ds
jne
xchg
outs
sbb
add
inc
jl
mov
inc
(bad)
cvtpi2ps
or
cli
pop
dec
add
lods
sbb
loop
jns
or
adc
mov
jnp
xlat
mov
inc
xchg
pusha
xchg
and
adc
dec
lock
hlt
out
sub
shl
mov
jae
sbb
push
mov
not
outs
inc
ss
mov
mov
movs
bound
add
outs
and
cmp
cmp
pop
in
pop
push
or
mov
out
and
lock
push
add
fadd
push
or
adc
dec
add
jl
jbe
mov
mov
sbb
ja
mov
sub
sub
inc
mov
fdiv
retf
iret
hlt
mov
imul
add
push
adc
leave
push
aas
inc
cwde
fwait
sbb
hlt
mov
js
mov
sbb
cmp
sub
pusha
dec
xor
cmps
into
pop
loope
push
add
sbb
sub
jno
dec
xchg
lahf
iret
aaa
inc
cmps
push
push
mov
or
aas
retf
pusha
outs
add
fsub
aad
scas
pushf
jnp
xor
nop
lds
js
push
movs
es
das
mov
push
ja
push
scas
mov
cmps
push
lock
and
mov
cld
popf
adc
mov
dec
shl
packuswb
in
xchg
je
inc
sub
and
push
push
push
inc
aas
pop
daa
sub
inc
leave
jo
xchg
xchg
adc
xchg
add
pop
xchg
ja
jnp
fwait
push
push
(bad)
xor
clc
hlt
ja
(bad)
fist
stos
push
push
lds
repnz
and
das
lods
scas
push
pop
mov
push
mov
push
popa
and
push
sub
sbb
xchg
pop
pop
push
sbb
movzx
push
pop
xchg
push
push
jns
jno
push
xchg
push
imul
add
cmp
pushf
pushf
pushf
mov
(bad)
cld
dec
dec
inc
sahf
xor
daa
and
cdq
xchg
fisub
xchg
xchg
xchg
xchg
call
xchg
rol
fwait
cmp
leave
(bad)
jmp
pushf
inc
aam
in
(bad)
jmp
lods
ror
push
pop
je
push
mov
stos
test
push
and
pushf
dec
mov
adc
push
push
call
jno
dec
or
xlat
ror
jno
stos
je
push
xlat
mov
xor
xchg
push
xlat
mov
jg
adc
xchg
outs
int3
jle
adc
add
pop
dec
push
mov
push
aad
cs
hlt
outs
push
mov
or
shr
leave
add
adc
pop
mov
xlat
adc
adc
enter
dec
push
xor
out
and
cmps
(bad)
xchg
shl
cmp
xchg
bound
lea
add
gs
retf
or
sbb
sub
push
inc
or
inc
push
pop
mov
dec
not
dec
add
xlat
ja
mov
inc
xlat
pop
pop
xor
mov
mov
jo
jae
and
xchg
xlat
mov
cwde
add
in
push
mov
xlat
sbb
xchg
cmps
inc
cmp
add
pushf
xor
dec
pop
xlat
shr
mov
mov
xchg
shr
push
push
mov
jno
add
and
das
push
sti
xchg
jae
out
xlat
pop
xchg
and
mov
cs
sbb
push
cmp
xor
mov
xchg
xlat
stos
add
int
imul
rcr
sub
xlat
xlat
and
test
mov
mov
add
or
mov
(bad)
xlat
jge
inc
dec
sub
mov
jmp
mov
adc
adc
xchg
nop
pusha
or
push
mov
mov
loopne
or
or
jne
push
xor
inc
sub
movs
lods
mov
je
xlat
xacquire
mov
sar
or
mov
inc
inc
loopne
xlat
rol
lea
aaa
push
xchg
test
pop
fwait
dec
pop
je
test
and
cmps
mov
inc
xchg
or
sbb
nop
xor
pop
(bad)
xchg
inc
(bad)
cmp
xor
mov
punpcklwd
dec
out
ucomiss
cmp
mov
pop
cs
pop
aas
pop
test
(bad)
mov
(bad)
jmp
add
or
and
push
jo
sbb
or
hlt
loope
cli
push
out
aam
ins
dec
bound
call
jns
add
and
pop
sbb
outs
adc
add
(bad)
jg
or
inc
add
xor
mov
out
pushf
inc
and
(bad)
push
scas
pop
in
ins
(bad)
(bad)
mov
repz
out
push
push
mov
sbb
sbb
sub
not
or
es
das
push
jmp
push
pop
mov
inc
push
(bad)
fimul
fadd
pop
push
jmp
mov
fsub
push
mov
jle
dec
sbb
xor
loopne
or
retf
xor
or
inc
pop
add
dec
and
ins
add
pop
dec
mov
xor
jnp
add
jmp
cmp
jae
js
mov
adc
iret
and
rcl
ds
lds
out
movs
ja
clc
iret
jnp
cmp
shl
and
push
sbb
sub
cmc
cmp
fs
ja
push
push
jmp
sub
ja
stos
push
aaa
push
ja
sub
in
(bad)
sub
ret
out
push
jbe
push
jbe
cmps
sahf
fdivr
imul
push
dec
dec
dec
inc
dec
(bad)
fldenv
test
jne
into
add
dec
test
leave
leave
leave
enter
mov
in
fs
lods
push
jl
jb
repnz
shrd
jns
jb
loope
scas
popa
mov
out
sbb
not
pop
inc
stc
push
xchg
adc
push
cmp
dec
cmp
xor
mov
xchg
lock
cmp
add
adc
cmp
daa
addr16
pop
add
mov
mov
sub
mov
pushf
jg
adc
inc
rcl
popa
test
cmp
bound
xchg
push
mov
adc
call
xor
stos
inc
xor
mov
stos
jae
imul
adc
add
xchg
inc
mov
or
ins
mov
ins
je
test
leave
call
gs
and
call
ss
aad
sub
ret
push
(bad)
mov
cld
push
mov
sbb
mov
mov
jne
add
popa
add
rcl
sub
pop
mov
outs
mov
xchg
or
adc
sbb
inc
sub
push
mov
adc
push
stos
push
sub
xlat
mov
sar
push
mov
xchg
pop
mov
mov
mov
in
mov
fsubr
pop
int
push
ja
ins
dec
mov
adc
dec
mov
sti
stos
ss
ins
xor
push
movs
mov
movs
into
adc
retf
push
and
xor
adc
cmps
or
mov
aam
ds
xor
mov
mov
jge
inc
test
or
push
movs
out
nop
ins
adc
sub
dec
xor
jno
pop
scas
xchg
pop
or
mov
mov
or
xchg
movs
mov
xchg
xor
dec
mov
sub
in
lea
mov
call
or
xor
sub
mov
adc
cmp
lea
xchg
ret
pushf
movs
push
add
mov
sbb
mov
test
xor
test
sbb
mov
inc
retf
lea
jge
clts
sub
in
cmp
push
aaa
shr
mov
inc
adc
jb
adc
int3
in
cs
xchg
iret
(bad)
aas
push
pop
ficom
mov
js
inc
dec
adc
aam
je
add
sbb
pop
jmp
and
mov
dec
lea
xchg
and
cmps
push
inc
cmp
pop
retf
fldcw
test
aam
add
es
aas
pop
or
and
push
popf
pop
add
aam
jge
mov
fisubr
loope
push
fwait
das
jo
cmps
out
mov
jbe
shl
jbe
out
lods
push
stos
dec
cmp
ret
je
mov
push
mov
and
sbb
xor
mov
sti
fs
arpl
mov
xchg
ins
xor
or
mov
and
mov
stos
gs
or
ds
dec
inc
lds
adc
loopne
cmp
call
cmps
loopne
mov
ror
in
fucomp
clc
cmp
in
fadd
cmp
mov
lahf
push
loopne
inc
push
je
mov
xchg
cmp
cmp
cmps
outs
cld
sub
outs
cmp
sub
div
push
mov
sbb
aam
add
mov
dec
dec
dec
mov
inc
mov
daa
loopne
mov
xchg
outs
mov
daa
and
psrlq
mov
daa
daa
ret
mov
inc
jp
add
fmul
leave
leave
sub
aas
(bad)
push
mov
pop
push
ins
lahf
mov
(bad)
dec
jmp
sbb
scas
leave
sub
lods
cmp
cmp
dec
or
sbb
inc
adc
push
jmp
daa
inc
xor
jne
aad
mov
mov
push
fwait
call
push
aaa
shr
sbb
aad
or
fistp
bound
ins
push
jo
sbb
outs
or
movs
test
enter
xor
ja
mov
jbe
jae
les
pop
std
sub
sub
cwde
cmp
xor
ins
loop
aad
xchg
je
test
and
and
call
and
mov
push
das
xor
dec
pop
dec
adc
add
shr
ins
test
dec
add
push
aad
mov
add
loop
imul
sub
add
jae
mov
xchg
aad
and
add
scas
cdq
dec
sub
xor
and
cmps
outs
mov
pop
mov
jecxz
inc
adc
aam
jo
mov
add
aad
popf
mov
popf
cmps
push
push
inc
dec
jg
stos
jge
sbb
or
in
pop
or
dec
aad
cmp
call
sub
nop
not
xchg
daa
(bad)
aam
aad
dec
add
dec
popf
mov
jae
test
adc
in
add
cmp
sbb
mov
mov
dec
in
push
cmp
inc
call
test
ins
inc
adc
adc
add
aam
mov
pusha
and
cmp
loopne
aad
mov
push
push
push
out
inc
sub
add
mov
cmp
test
dec
push
sbb
jb
pop
and
add
(bad)
test
pop
loope
adc
fisub
(bad)
hlt
sbb
sbb
add
or
adc
inc
shr
cmc
mov
lea
cmc
retf
sub
push
pushf
cmc
mov
cmc
add
adc
push
adc
xchg
ret
add
xor
outs
sub
dec
and
scas
add
fmul
(bad)
sub
call
mov
pusha
aas
mov
dec
(bad)
and
push
push
es
push
jmp
fisubr
mov
sub
sub
add
mul
test
stos
pop
pop
inc
aaa
test
out
popf
adc
and
popf
movs
test
or
ret
pusha
mov
ja
inc
aas
in
xor
dec
(bad)
dec
push
lahf
cs
shr
mov
das
or
jg
push
js
jmp
das
jecxz
das
shl
jg
jmp
rcl
push
sbb
das
fs
stos
push
mul
popa
and
das
jae
rol
jb
jecxz
das
or
and
packuswb
test
mov
cmp
retf
jae
lss
and
out
sub
outs
mov
push
int3
push
js
enter
loop
int
fs
leave
scas
sti
xor
jns
repnz
shl
iret
das
jns
jb
push
mov
(bad)
cmp
cmp
dec
jo
retf
push
out
cmp
call
pop
stc
push
push
das
jecxz
inc
je
cs
es
pushf
inc
xchg
push
repnz
dec
mov
add
dec
(bad)
call
or
out
das
(bad)
and
jno
fst
movs
mov
out
adc
inc
xchg
add
out
cs
push
jg
and
pop
mov
out
jmp
push
mov
(bad)
enter
jmp
scas
fcmovb
movs
out
outs
or
pop
call
jbe
mov
ja
aam
push
or
jmp
jae
and
bound
mov
adc
dec
out
or
es
xchg
inc
xchg
test
das
leave
sub
rcr
sub
out
in
dec
or
bound
inc
bound
jns
in
ins
iret
add
fld
add
add
adc
jno
mov
movs
adc
xchg
out
jge
rol
mov
loopne
jae
xchg
jnp
out
add
inc
ins
xchg
cdq
(bad)
movs
xor
sub
push
xchg
popf
dec
pop
out
or
add
mov
mov
dec
pop
mov
sar
mov
(bad)
pop
mov
mov
nop
bound
dec
jae
sar
add
cmp
xchg
ret
push
aaa
add
inc
ret
mov
mov
mov
(bad)
imul
push
pop
mov
xchg
sti
and
cmp
cld
cdq
or
lds
out
(bad)
xor
adc
pop
in
push
fst
movs
adc
(bad)
js
or
movs
sub
adc
xchg
push
push
std
mov
mov
dec
(bad)
hlt
mov
bound
jo
or
add
sbb
(bad)
cmp
jecxz
cmp
adc
(bad)
(bad)
pop
pop
mov
dec
mov
loopne
inc
cmps
jno
sub
inc
add
or
or
popw
sub
xchg
(bad)
fcmovnb
(bad)
mov
cmc
test
sbb
or
inc
push
sbb
je
push
cmp
dec
mov
lea
pop
pop
pop
dec
mov
mov
xchg
xchg
ss
add
jg
cmp
push
ret
fdivr
jge
pop
stos
rcl
push
jg
or
inc
daa
or
cmp
pop
push
dec
add
mov
pop
add
imul
fnsave
enter
int3
adc
inc
or
lock
imul
adc
or
inc
add
xor
cdq
mov
or
adc
retf
inc
mov
push
rsqrtps
jno
add
push
push
push
inc
push
xchg
in
xor
inc
adc
jmp
sbb
push
ja
es
das
pop
push
xchg
push
in
cmc
push
and
movs
push
fs
out
push
add
lock
mov
fcom
push
shl
inc
adc
dec
movs
push
out
ds
cmp
ja
retf
out
push
out
xchg
sbb
inc
xchg
add
cmps
cli
jmp
adc
outs
cmp
mov
popf
aaa
and
pop
xor
cmps
(bad)
ret
hlt
add
test
(bad)
cmp
in
cli
pop
pop
repz
jae
test
jo
test
movs
shl
adc
ins
aad
add
pop
test
jae
dec
ffree
aaa
cwde
sub
dec
fistp
jb
stos
in
mov
fmul
mov
imul
psadbw
fnstsw
cmp
outs
mov
dec
ficomp
mov
dec
dec
inc
jb
repnz
loopne
daa
daa
and
xchg
xchg
xchg
dec
jp
(bad)
enter
loop
mov
loopne
jecxz
test
aam
in
or
ss
(bad)
imul
sub
mov
push
mov
cwde
push
jbe
push
repnz
jbe
sbb
sub
je
jno
out
and
and
popf
cmp
and
fidivr
sub
call
or
xor
jmp
pushf
mov
ins
push
xchg
outs
or
pcmpeqd
adc
xchg
jbe
pusha
mov
aam
bound
xchg
xchg
pushf
jp
mov
or
les
xchg
leave
call
gs
sub
push
add
or
sbb
pop
pushf
adc
test
jne
dec
add
xchg
pusha
push
mov
xchg
push
add
test
dec
add
xchg
xchg
xchg
inc
xor
ins
mov
mov
xor
and
cmps
out
inc
add
scas
popf
aaa
adc
inc
xor
call
pop
add
outs
xchg
mov
sub
sub
add
mov
dec
dec
std
es
sbb
leave
push
out
push
pop
and
pusha
mov
pop
fidiv
test
inc
jmp
popf
cli
movs
inc
add
cli
fistp
aad
pop
imul
and
push
pushf
fbstp
out
or
and
sbb
cmps
xchg
sub
loop
jne
mov
inc
inc
jge
inc
(bad)
shr
xor
adc
ficom
out
adc
add
xchg
dec
add
rcr
push
mov
sub
or
xor
jb
inc
(bad)
fnstsw
add
push
ja
fbstp
(bad)
mov
sbb
xor
sbb
fild
inc
nop
mov
cmp
ds
add
cmc
sub
daa
pop
jmp
xor
sbb
test
inc
cdq
in
mov
or
aad
mov
pushf
int3
push
lods
shl
mov
inc
sbb
inc
fild
(bad)
in
retf
inc
sbb
or
and
xor
ja
cmp
and
sub
xor
les
nop
(bad)
cvttps2pi
add
fimul
cs
sar
sbb
xor
dec
sar
call
arpl
call
mov
add
(bad)
xor
sbb
neg
(bad)
mov
pop
fnstenv
add
ja
call
push
xor
sub
dec
mov
or
loopne
test
push
pop
and
pop
mov
xor
jl
mov
push
or
or
clc
inc
pop
das
fidiv
mov
mov
pop
jmp
in
xchg
mov
outs
fcomp
fiadd
mov
add
pop
push
jmp
mov
(bad)
out
or
dec
std
data16
push
push
mov
jmp
and
ins
push
test
push
mov
outs
pop
test
adc
outs
jae
and
inc
outs
in
jmp
pop
push
outs
loopne
xor
in
paddusw
outs
mov
inc
outs
loopne
outs
and
and
leave
ins
push
jp
in
fs
nop
fisubr
jns
jb
push
test
cmp
cmp
pushf
pushf
mov
mov
sahf
pop
repnz
dec
dec
out
repz
ins
mov
daa
daa
mov
jb
outs
xchg
outs
movs
pop
ror
mov
pop
jmp
sub
movs
cli
push
add
cmp
pusha
cmps
aam
hlt
dec
out
jnp
retf
in
nop
(bad)
jno
push
call
daa
inc
xor
jne
daa
xor
jae
push
fwait
sub
jg
sub
daa
repnz
mov
lds
cmp
aas
ins
mov
push
xchg
push
daa
pop
outs
test
sub
scas
call
ja
push
push
xor
jbe
inc
(bad)
les
lods
out
shl
daa
stos
pop
ficom
dec
mul
xchg
es
cmp
ret
test
rcl
xchg
call
fisub
call
mov
dec
out
and
mov
inc
mov
test
push
shl
popa
adc
sub
add
daa
test
push
mov
mov
jae
inc
sub
adc
add
sub
lea
sbb
nop
cwde
adc
cmp
dec
add
add
sti
xchg
xchg
dec
aaa
shl
pusha
mov
xchg
sbb
and
xchg
mov
(bad)
test
sub
mov
out
and
add
pop
int
dec
iret
cmp
xor
fst
xor
mov
movs
stos
dec
and
ins
iret
movs
jmp
mov
es
cmp
ins
ror
daa
add
mov
cdq
iret
or
adc
dec
mov
sbb
iret
xor
adc
mov
movs
cmp
ins
dec
and
clc
rol
adc
movs
aad
into
xchg
fst
movs
or
mov
or
cs
or
stos
(bad)
and
cmc
cmp
inc
sub
test
sbb
xchg
iret
lock
mov
fdivr
retf
cdq
(bad)
iret
sub
inc
add
add
imul
sub
outs
pop
xor
int3
lahf
fnstcw
mov
hlt
or
adc
xor
pop
mov
add
push
outs
clc
shr
lock
outs
arpl
movs
aam
outs
rol
retf
outs
pop
cmp
and
push
pop
iret
add
and
pop
jb
test
cmp
pop
jo
(bad)
jmp
and
push
cmovg
pop
cmp
sub
add
pop
push
sub
inc
popa
inc
mov
add
push
aad
jmp
(bad)
dec
bound
adc
xor
push
lock
pop
gs
and
mov
adc
clc
and
add
xor
ins
outs
xchg
push
adc
push
scas
mov
aam
pop
mov
pop
add
adc
push
dec
or
add
es
fiadd
hlt
es
push
add
push
scas
xor
movs
pop
pop
jnp
add
mov
dec
popf
loope
add
les
je
adc
je
mov
ret
and
cmp
dec
cmc
xchg
cmp
add
in
out
xor
sub
fsubr
push
push
and
and
or
ret
cmp
cmp
and
sbb
push
add
mov
push
enter
jge
add
or
enter
xlat
lods
jbe
or
pop
int3
repnz
add
aaa
pop
pop
stos
push
ja
(bad)
in
aaa
popa
jecxz
fcomp
jae
add
out
jne
pop
(bad)
mov
jge
pushf
mov
mov
call
or
xchg
leave
add
test
and
iret
sbb
daa
daa
daa
(bad)
stc
inc
add
enter
lds
leave
leave
cmps
out
push
add
repnz
in
cwde
iret
add
xor
mov
cmp
sbb
push
push
mov
push
idiv
aam
movups
cmp
adc
fimul
jge
dec
ret
je
icebp
adc
jge
scas
leave
sub
mov
mov
ror
dec
or
je
sub
push
jno
push
pop
and
mov
je
sub
mov
fdivr
inc
jge
jg
mov
jle
or
cmps
jge
push
pop
aaa
pushf
das
fistp
xor
jb
push
test
ss
jge
outs
push
cmp
or
add
jne
aad
add
jge
cmp
sbb
test
sbb
dec
jno
or
mov
push
jge
xchg
shl
adc
and
nop
mov
fsub
mov
cwde
or
test
aam
and
or
sar
je
cs
jge
test
dec
add
push
jge
mov
add
or
inc
inc
jl
push
jge
jb
sub
pop
jle
inc
xor
pushf
jge
scas
pop
mov
inc
xor
cmps
out
push
icebp
inc
add
aaa
adc
and
jmp
sub
mov
test
daa
cmp
mov
inc
sbb
xchg
push
jg
das
add
mov
pmullw
push
or
call
mov
dec
popf
cmp
div
adc
je
aad
into
adc
dec
add
jae
loopne
cmp
cmps
les
push
cdq
cmps
in
and
aad
nop
cmp
mov
dec
aad
movs
(bad)
sar
mov
xchg
inc
pop
movs
dec
fst
aad
ins
inc
push
pushf
or
adc
and
xchg
and
xchg
dec
add
rcl
shl
or
lds
inc
(bad)
aad
add
push
ja
aad
(bad)
aad
mov
sbb
xor
sbb
aad
mov
mov
ds
add
jno
js
neg
add
lahf
pop
lods
inc
xor
or
add
and
imul
mov
and
cmp
lods
shl
mov
mov
and
leave
xor
add
cmp
xor
dec
or
xchg
in
out
cmp
xor
aas
fisub
into
(bad)
out
mov
cmps
pop
xor
jg
cmp
mov
scas
adc
dec
out
imul
inc
in
add
or
in
es
push
xlat
fst
push
add
icebp
push
and
adc
push
add
sbb
out
mov
fcom
xchg
push
test
or
shl
xor
sbb
je
cmps
xor
vmovaps
and
je
cmps
or
sub
pop
das
lds
nop
xor
test
pop
cs
test
ror
add
sbb
test
add
gs
push
sub
push
pop
pop
adc
lods
adc
mov
push
push
sbb
ror
push
pop
aam
dec
stos
hlt
call
sub
pop
jo
push
fdiv
mov
dec
inc
pop
stos
sub
(bad)
cmove
imul
stos
push
pop
dec
data16
jmp
jnp
adc
push
xchg
daa
and
int
adc
xchg
xchg
daa
daa
neg
adc
enter
rol
adc
in
leave
sahf
aam
adc
ret
in
in
lods
sar
comiss
enter
push
aaa
outs
push
addr16
mov
pop
cmp
pop
outs
pop
pushf
push
dec
ror
loop
mov
push
daa
jnp
add
xchg
push
sub
clc
pop
ja
cwde
imul
test
add
inc
jnp
jno
adc
xor
jne
daa
inc
pop
dec
inc
mov
popf
sub
pop
xor
jg
movs
jle
add
mov
mov
bound
ins
push
icebp
stos
or
or
and
jbe
stos
shr
adc
push
or
jae
push
adc
popf
out
xor
xchg
aam
mov
add
or
xchg
and
das
leave
call
sub
push
fcom
pop
pop
lea
push
sbb
xchg
add
mov
mov
push
repnz
ins
iret
and
sub
add
jno
mov
inc
add
mov
sub
add
jae
mov
add
add
xchg
cdq
test
rol
ss
cwde
add
mov
dec
add
push
or
jmp
mov
jmp
mov
xchg
movs
ss
and
sbb
sbb
add
nop
xor
xchg
mov
add
mov
jmp
mov
mov
nop
ins
mov
imul
push
push
jo
jge
daa
cmp
fcomp
or
mov
jno
mov
sub
sub
sti
inc
xchg
dec
or
mov
je
sub
sub
xchg
pusha
xchg
mov
nop
dec
mov
shl
mov
and
xchg
cmp
dec
inc
sub
hlt
bound
aad
fsubr
inc
cmps
jno
sub
inc
add
dec
jno
loop
outs
pop
xor
xor
ja
pop
pop
pushf
scas
sar
and
and
je
pop
sbb
movs
shl
pusha
inc
pop
mov
mov
movs
leave
pop
sub
add
ret
pusha
push
push
inc
push
xchg
ss
and
stc
jg
movs
add
push
fs
fisttp
and
add
jmp
adc
ja
cmp
xchg
push
lahf
push
test
jo
add
push
add
retf
push
les
add
int
push
sbb
inc
add
adc
push
dec
lock
js
pushf
fiadd
dec
ja
dec
test
mov
mov
retf
sub
lar
or
add
ret
mov
xchg
and
jnp
sahf
addr16
aaa
sbb
ja
imul
dec
xor
and
in
jne
adc
cmp
jmp
inc
(bad)
jnp
in
push
(bad)
push
pop
push
mov
or
push
inc
add
jl
mov
loope
dec
retf
push
imul
cmp
pop
scas
pop
in
ret
push
or
outs
push
adc
pop
lods
scas
ud0
aaa
mov
jle
pusha
xor
sub
xor
and
adc
je
int
inc
adc
sbb
dec
mov
cld
lock
adc
lock
mov
ss
push
aaa
inc
je
cmp
pop
fst
add
push
out
std
in
mov
sub
sub
or
push
pop
add
and
(bad)
loope
jo
cld
add
add
inc
lock
add
vsubpd
add
nop
into
dec
adc
repz
mov
mov
adc
retf
jle
or
adc
sbb
popa
retf
add
cs
in
fdivr
push
cmp
add
and
mov
(bad)
push
loope
out
(bad)
mov
shl
leave
or
pop
add
and
add
test
pop
out
push
sbb
jae
out
mov
jl
mov
mov
imul
ins
popa
jae
gs
push
ret
ins
adc
fcomp
mov
ja
icebp
add
push
add
inc
jno
iret
adc
jmp
(bad)
sbb
loopne
push
and
add
pop
mov
fnstsw
scas
loopne
cmps
adc
pop
cmp
das
sbb
add
push
pop
scas
sub
inc
bound
scas
test
jecxz
sbb
push
scas
xchg
scas
test
fild
xor
jb
sub
stos
mov
pop
xchg
cmps
add
out
xor
push
sub
or
mov
int
push
jb
xlat
idiv
dec
mov
ins
imul
int3
jne
jg
mov
call
cs
cld
and
push
movs
add
fisttp
push
add
push
cmp
add
add
mov
cmp
jns
pop
push
mov
lahf
and
adc
pop
scas
stos
pop
mov
pop
scas
xchg
and
aas
stc
jne
fwait
xchg
jns
aas
(bad)
adc
push
push
popa
jno
adc
inc
scas
ins
cs
aam
clc
push
jl
add
pusha
and
sub
pop
add
scas
xchg
and
and
imul
xor
mov
test
retf
xlat
adc
jge
(bad)
(bad)
adc
and
add
and
inc
xor
jnp
push
dec
outs
popa
or
fld
inc
pusha
jb
dec
adc
or
adc
pop
prefetcht1
out
dec
fbld
add
sbb
add
pop
lds
push
fs
adc
inc
xchg
inc
lods
or
inc
cld
sub
push
or
jb
push
dec
bound
adc
xor
js
inc
rol
pop
popa
mov
bt
pop
mov
or
inc
add
dec
push
add
xor
jnp
in
sub
inc
int
scas
lds
jl
sbb
push
mov
pusha
ins
test
sub
push
aaa
clc
test
popa
lds
dec
sub
fisubr
inc
add
push
es
or
push
pop
and
push
push
sbb
and
(bad)
call
fdivr
or
and
push
push
push
and
and
sbb
outs
sub
or
or
test
sub
mov
ret
pop
addr16
dec
mov
push
(bad)
sbb
jb
lds
cmp
push
inc
sub
fs
and
js
pop
cld
jle
fldcw
das
sub
push
add
pop
and
push
scas
push
pop
hlt
jo
test
push
sbb
push
loopne
pop
and
dec
inc
inc
fsubr
and
jae
scas
and
push
aam
push
jp
fdivr
cmp
inc
ret
push
cmp
push
jp
call
push
or
(bad)
jb
repnz
pusha
pushf
loopne
cmp
jns
xor
jmp
push
mov
sahf
and
jg
mov
cmp
dec
jns
int
mov
repz
lods
dec
inc
sahf
pushf
out
xor
dec
dec
mov
cmp
in
dec
push
push
xchg
push
add
jbe
fmul
push
dec
ret
sbb
dec
es
and
fs
mov
xchg
jecxz
stos
ror
dec
or
mov
shr
mov
mov
dec
aaa
daa
mov
mov
mov
dec
sbb
popf
loopne
pushf
sub
inc
popf
push
and
or
test
pushf
jmp
int3
bound
aam
mov
push
aad
and
popf
jl
sub
dec
js
in
and
jbe
adc
push
xchg
jbe
test
rol
pop
xchg
jo
out
test
inc
xchg
ins
or
xor
add
adc
cmp
inc
das
leave
call
gs
xchg
push
and
popf
sar
test
lea
mov
add
xchg
xchg
mov
ins
inc
mov
dec
adc
and
xor
ret
and
popf
inc
and
mov
adc
jae
and
(bad)
adc
jle
pushf
add
mov
pop
adc
and
sbb
scas
mov
xchg
push
inc
and
fnstsw
ret
and
mov
leave
xchg
mov
and
rcl
leave
sub
out
mov
add
sub
popf
dec
jg
xchg
lock
das
add
fistp
test
push
and
and
mov
hlt
mov
stos
mov
dec
push
xchg
jo
aaa
ss
cmc
js
add
neg
add
pop
xchg
(bad)
cmp
inc
dec
ss
add
xor
jg
rcr
mov
push
inc
sub
or
cmc
xor
mov
xor
jge
inc
dec
pop
and
test
aam
arpl
adc
adc
les
xchg
add
push
lods
and
or
mov
add
test
or
adc
mov
inc
sub
xchg
jo
cmc
jo
cmc
mov
mov
dec
xor
cmc
inc
scas
adc
xor
cmovne
xor
or
or
or
adc
dec
add
test
popa
push
mov
cmp
or
shl
push
mov
test
imul
fist
inc
sbb
test
js
xlat
push
dec
inc
outs
sub
push
or
adc
push
sub
(bad)
xchg
cmp
into
xor
outs
sub
aas
sub
or
iret
xlat
xchg
cmp
sub
mov
adc
inc
sub
aas
xlat
popf
data16
xor
xlat
add
push
jmp
das
jge
(bad)
xor
push
xchg
mov
mov
push
add
push
fst
fdivr
in
inc
xor
ror
pop
repnz
sbb
or
or
cmovb
sbb
pop
das
mov
push
xlat
hlt
mov
xlat
push
mov
(bad)
fild
xchg
xchg
inc
pop
in
in
pusha
clc
inc
add
cmp
ins
mov
clc
push
mov
add
cmp
ins
cmps
mov
dec
sub
cmp
jnp
push
push
mov
inc
dec
adc
out
push
inc
ins
test
pop
pop
inc
jae
cmp
sub
dec
inc
in
xor
sub
ds
cmp
mov
test
cli
push
inc
cmp
cmp
mov
movs
loopne
inc
sahf
pushf
pushf
mov
clc
inc
inc
dec
dec
dec
inc
push
aam
inc
daa
daa
daa
and
in
and
imul
cld
and
in
in
mov
inc
cmp
ret
in
xchg
jmp
jmp
push
jne
test
and
inc
es
mov
mov
mov
xchg
push
sbb
dec
fimul
shl
nop
sub
mov
cdq
daa
inc
sub
xor
pop
xor
mov
test
inc
xchg
inc
jg
enter
xor
sub
or
mov
pop
ins
push
cs
push
push
call
sbb
aad
or
mov
inc
jbe
movs
stos
sbb
adc
jo
xor
sar
jae
ja
jmp
xchg
dec
mov
es
ret
test
rcl
xchg
call
fisub
call
xchg
sub
dec
push
cs
dec
ins
cmp
dec
sub
jmp
movs
jnp
iret
dec
add
push
sub
rol
inc
dec
mul
cs
inc
add
push
ins
xchg
cdq
sbb
cwde
jmp
and
pop
add
xchg
outs
or
mov
je
rcl
rol
je
and
xchg
adc
test
push
fiadd
(bad)
into
pop
dec
pop
cmps
dec
es
mov
cmp
push
rcl
loopne
xor
and
and
scas
and
imul
push
loopne
mov
jae
add
add
xor
inc
mov
lds
pop
cmps
xor
pop
xchg
dec
cmps
jge
mov
sti
xchg
out
call
ins
adc
adc
cmps
and
xchg
push
mov
push
cmps
xchg
je
xchg
push
dec
cmps
fs
xor
cmps
or
pop
push
xchg
mov
cmps
in
dec
ja
jb
inc
sub
mov
stos
mov
fdivr
call
xchg
inc
xchg
mov
add
add
imul
dec
pop
arpl
xor
mov
out
xchg
sti
scas
dec
mov
lods
ror
or
cs
and
test
rol
mov
inc
inc
pop
jo
xor
movs
aam
inc
je
xchg
pusha
js
adc
lahf
inc
xchg
add
push
xchg
sbb
lea
add
cmp
mov
jae
fs
ds
jle
dec
sub
jo
loop
aad
ss
or
push
or
inc
push
inc
lods
push
add
or
sub
cmps
and
push
dec
xor
mov
bound
adc
xor
add
pop
scas
cli
ja
mov
adc
dec
or
xor
jnp
pushf
pop
(bad)
inc
mov
adc
cwde
ins
cmovg
stos
push
sub
xlat
xchg
outs
dec
out
push
aaa
shr
es
mov
dec
push
push
sub
add
dec
das
jne
xchg
push
das
xor
mov
add
stos
push
pop
aam
pop
xchg
xchg
cmp
push
cli
and
push
and
push
or
push
retf
adc
push
ja
push
cmp
add
mov
mov
or
push
lock
mov
int3
imul
push
test
adc
jg
fisttp
test
(bad)
scas
pop
in
int3
ss
xor
mul
push
sbb
movs
adc
dec
pshufw
stos
dec
(bad)
push
maxps
lea
jae
aad
add
test
(bad)
jb
jecxz
push
mov
je
test
and
out
gs
add
daa
daa
daa
and
aad
xchg
xchg
xchg
xchg
push
jno
retf
enter
push
or
in
in
push
lods
hlt
jb
xor
and
push
js
cmp
jns
aad
push
pop
xchg
mov
cmp
jl
pushf
pushf
mov
in
test
sbb
sub
mov
push
dec
ret
cmps
shr
inc
mov
xor
test
or
and
jno
cmps
mov
push
dec
mov
inc
xor
popf
or
aad
cmp
push
pusha
jo
les
jne
or
xchg
cmp
cmp
bound
add
in
push
es
ret
imul
ja
add
push
les
shr
push
push
xchg
fwait
cmp
adc
push
xor
pop
add
das
add
sbb
cmc
add
cmp
inc
or
cmp
adc
push
or
out
loop
rcl
push
inc
ins
iret
dec
add
add
sub
add
cmp
xor
dec
push
inc
or
or
push
cwde
loop
xor
add
out
xchg
push
ins
mov
cdq
push
inc
jmp
add
sbb
dec
loopne
loope
pop
dec
mov
inc
adc
cmp
test
cmp
adc
sbb
mov
inc
dec
jg
stos
jge
jge
add
dec
jge
add
out
push
lods
and
cmp
aaa
mov
lods
scas
adc
dec
not
je
ins
je
ins
lods
imul
cmps
into
add
or
les
lods
cdq
je
loopne
cmps
in
lods
jne
mov
xor
rcl
or
cmp
shr
sub
lods
inc
ins
or
movs
dec
sbb
fsub
adc
xchg
fst
test
mov
or
dec
lods
or
inc
(bad)
sub
lods
movs
xor
add
lods
loopne
ficomp
mov
mov
cmp
cmp
inc
xor
cmp
and
ret
cmp
push
inc
or
and
jecxz
add
or
add
pop
(bad)
xchg
or
inc
shl
adc
push
cs
cmp
add
ins
inc
add
int
adc
mov
sbb
or
adc
push
adc
cmp
xor
sub
aas
cmps
mov
pusha
pop
sahf
sub
xlat
ja
inc
jne
(bad)
(bad)
sub
push
(bad)
retf
prefetcht2
and
xor
(bad)
mov
mov
mov
jne
sbb
push
add
sysexit
or
and
pop
jbe
test
push
add
or
fld
fdiv
mov
test
pop
mov
xor
push
mov
lock
sbb
mov
neg
jg
jg
mov
add
aas
pop
stos
sbb
xchg
jno
dec
mov
test
push
sbb
xchg
out
xor
pop
add
cmp
das
ja
aaa
sbb
test
adc
jg
inc
out
inc
aam
adc
dec
pusha
push
clc
push
call
hlt
adc
adc
aaa
pop
and
aaa
jae
sub
aaa
leave
lods
(bad)
pusha
popf
and
paddb
lods
aaa
pop
push
cmp
popf
push
fisttp
jae
daa
daa
daa
mov
cmova
stc
or
cmovge
cmp
fs
ja
dec
inc
sahf
pushf
clc
inc
gs
(bad)
daa
daa
and
push
jnp
xchg
daa
daa
daa
(bad)
jmp
push
movs
fiadd
leave
sub
add
addr16
ss
pop
mov
mov
mov
les
push
and
add
add
hlt
out
mov
xchg
push
outs
sbb
dec
mov
cwde
imul
sbb
cmp
push
mov
aas
inc
mov
out
xor
outs
movs
inc
cmp
out
xor
or
out
movs
jle
popf
mov
add
mov
jge
add
adc
push
out
enter
loop
or
or
add
pop
jbe
adc
or
jbe
and
or
jae
jmp
out
lock
imul
xchg
out
or
xchg
cmp
or
and
je
call
fcom
inc
xchg
adc
out
sbb
cwde
inc
or
mov
sub
mov
dec
jb
add
jno
adc
aad
je
ret
loop
out
inc
or
out
sub
cs
or
out
ins
xor
shr
and
xchg
into
nop
cwde
fst
popf
dec
add
push
dec
pop
add
outs
add
mov
dec
je
rol
test
(bad)
mov
sbb
sub
inc
nop
xor
dec
out
and
popf
pop
int
xchg
cmp
(bad)
dec
dec
xor
cs
mov
shl
xchg
imul
jmp
lods
push
phaddd
daa
cmp
push
cdq
xchg
cdq
xchg
or
adc
jns
push
mov
inc
xor
cs
xchg
jge
je
jbe
inc
aaa
rcr
pop
ins
movs
adc
add
rol
not
xchg
dec
xchg
out
call
xchg
xor
xchg
or
and
jecxz
xchg
test
cs
xchg
hlt
bound
lds
test
pop
fsubr
mov
xchg
push
add
(bad)
add
mov
add
add
outs
pop
xor
int3
xchg
imul
shl
lock
inc
xchg
out
loopne
xchg
xor
aas
xor
inc
aas
aad
pop
jo
aas
lds
sbb
bound
pop
mov
nop
sbb
lods
xchg
imul
imul
mov
add
nop
fcos
add
jmp
adc
sar
int3
adc
addr16
sbb
or
add
in
mov
test
add
pop
shl
aaa
xor
add
adc
and
in
inc
and
pushf
fiadd
test
fst
test
in
inc
xlat
popa
sar
pminub
iret
in
retf
and
inc
dec
push
test
xchg
js
pushf
gs
mov
inc
enter
sub
dec
xor
push
bound
retf
xchg
sub
adc
(bad)
and
inc
aaa
imul
lock
rol
rol
xor
pop
inc
and
jne
ret
cmp
mov
jge
cld
jmp
sbb
imul
fisttp
xor
or
call
lock
inc
sbb
jnp
(bad)
clc
mov
sbb
cwde
scas
rdpmc
inc
pusha
xor
lds
xchg
sbb
xor
xor
and
je
int
aad
push
aas
mov
(bad)
out
adc
mov
adc
in
or
fcom
push
and
add
push
add
mov
adc
jns
lahf
les
rcl
push
sbb
lds
push
xchg
mov
stc
int
xor
push
jo
jns
loop
jmp
pop
jne
and
sub
add
and
or
mov
mov
in
test
leave
outs
sub
pop
add
mov
leave
mov
add
pop
push
stos
add
out
test
daa
retf
push
mov
xlat
add
ror
and
adc
jae
jae
sub
inc
pop
out
adc
out
mov
(bad)
push
arpl
bound
sbb
adc
fcomp
push
ja
icebp
or
jmp
fstp
inc
jno
or
xchg
stos
js
pushf
or
pop
out
test
sets
mov
iret
out
add
out
jle
and
cmove
cmp
adc
xor
and
je
pusha
sbb
mov
outs
sub
inc
bound
pop
mov
mul
push
imul
sbb
mov
div
div
imul
sbb
repz
inc
xor
cmp
pop
or
jae
sub
add
pop
sub
cmc
xchg
push
add
xchg
(bad)
adc
das
adc
loopne
inc
int3
mov
mov
outs
sub
shr
xchg
push
pop
jne
loopne
add
add
push
daa
je
add
xchg
xor
inc
jmp
adc
or
pop
popf
icebp
add
and
mov
adc
jmp
lahf
popa
xchg
adc
int3
int
xlat
add
jns
loope
aaa
in
and
cs
inc
push
js
jns
out
adc
add
clc
push
mov
add
jns
mov
adc
lods
sbb
dec
retf
add
pop
fwait
repz
xchg
pop
je
xchg
mov
ret
pop
(bad)
push
inc
jbe
push
outs
xor
and
mov
jb
imul
aaa
jae
es
mov
in
sbb
lock
add
stc
jle
mov
loopne
and
mov
jl
ret
out
adc
push
add
sub
jo
mov
ror
aaa
ret
ret
daa
push
sets
push
jl
dec
sub
xor
dec
pop
jo
or
mov
sub
aam
pop
js
cwde
nop
addr16
jo
arpl
pop
mov
mov
das
dec
xor
jmp
scas
or
xbegin
or
sub
dec
jge
jnp
pop
or
popa
xor
ja
adc
push
adc
adc
lock
xor
rcr
adc
shl
jle
add
push
adc
add
fldenv
fisub
lods
push
xor
add
xchg
(bad)
retf
pushf
pop
lss
add
add
es
pop
mov
add
push
les
fdivr
add
movs
mov
mov
and
scas
cmp
repnz
fwait
push
lock
xchg
cdq
int3
pop
jle
arpl
aaa
shl
push
scas
js
pop
jnp
sbb
mov
mov
mov
pop
cwde
push
push
xor
aaa
test
mov
ret
icebp
fdivr
add
and
cmp
adc
test
add
loop
dec
add
sub
cmp
sub
(bad)
pusha
mov
les
sub
adc
int3
xchg
shl
push
lahf
push
test
adc
mov
xchg
and
in
mov
(bad)
add
inc
cs
bound
pop
mov
out
jbe
push
mov
pusha
sbb
daa
icebp
ins
sbb
xlat
imul
lea
xlat
sub
inc
mov
fsub
(bad)
xlat
addr16
loope
xlat
and
xlat
or
or
xlat
dec
pop
getsec
or
or
retf
test
outs
mov
sbb
sbb
sbb
xlat
pop
icebp
pop
test
call
sub
(bad)
lods
scas
(bad)
sub
test
pop
cmc
add
inc
xchg
and
popf
push
adc
int
and
adc
pop
inc
mov
xchg
test
rcr
push
jmp
test
dec
call
pmaxsw
xchg
dec
dec
js
add
cld
popf
inc
or
and
rcr
fsub
jb
pop
jge
loop
pop
scas
fistp
(bad)
xlat
mov
dec
add
push
retf
or
iret
adc
int3
adc
sbb
and
loopne
xor
pop
mov
mov
inc
push
add
sub
push
into
add
push
jmp
inc
pop
sbb
outs
pop
inc
or
and
loop
test
stos
movs
or
inc
popa
nop
cmp
pop
jno
sbb
(bad)
fcomip
arpl
in
inc
gs
mov
loopne
adc
shld
lahf
arpl
ret
adc
int3
sbb
repz
pop
pop
shl
lahf
enter
out
ss
push
add
mov
int3
daa
jmp
sub
(bad)
pop
cpuid
(bad)
mov
popf
xor
pusha
inc
test
push
cmp
cmp
cmp
bound
cmp
pop
xchg
fidivr
shl
mov
push
cmp
xchg
loope
adc
jae
push
mov
jmp
mov
adc
test
sbb
sub
mov
and
add
inc
adc
mov
(bad)
ss
add
int
mov
adc
ja
cmp
int3
cmc
inc
or
je
scas
adc
sbb
inc
mov
adc
daa
mov
lock
add
int3
scas
lahf
inc
or
push
lods
sbb
addr16
add
shl
add
aad
inc
out
dec
xor
mov
sbb
mov
mov
or
xor
sbb
mov
int3
push
push
push
out
neg
out
pop
lea
fimul
stc
daa
dec
(bad)
push
pop
push
mov
and
mov
mov
adc
(bad)
jg
adc
lock
sar
cmovle
pop
push
jb
jo
adc
mov
gs
out
cmps
es
jge
popa
dec
cld
sbb
or
adc
pushf
out
imul
push
jg
push
lds
mov
(bad)
mov
nop
add
pop
adc
add
adc
jle
into
in
or
pmaddwd
dec
jno
imul
xchg
movs
jo
or
mov
sub
clc
bound
movs
int3
adc
add
cwde
movs
push
movs
cmp
inc
adc
movs
inc
xchg
loopne
mov
sbb
test
adc
add
out
xor
ret
lds
enter
(bad)
ror
outs
(bad)
pop
add
lods
inc
sbb
or
fiadd
rol
add
adc
cmp
sub
push
jns
pop
push
fadd
(bad)
ficom
xchg
scas
mov
add
pop
lds
xchg
cwde
call
pop
adc
cmp
and
mov
add
and
or
inc
sbb
arpl
pop
scas
xlat
mov
add
xor
int3
mov
mov
mov
loopne
fsubr
scas
sbb
repz
push
add
cld
push
jp
mov
into
xchg
add
mov
and
pop
push
or
adc
inc
jmp
xchg
or
jns
push
loope
add
or
adc
jne
or
push
pop
das
iret
mov
jo
inc
sbb
adc
int3
mov
cmp
add
ja
mov
xchg
int3
ret
xchg
ss
pop
movs
push
sub
add
inc
adc
out
jle
jmp
scas
punpckhwd
push
mov
mov
adc
xor
out
aaa
call
jo
out
(bad)
out
test
dec
cmp
mov
mov
cmp
dec
mov
outs
out
cmp
das
es
(bad)
or
xor
sbb
sbb
inc
and
test
push
add
mov
xchg
dec
jns
lahf
arpl
popa
int3
xchg
ss
push
movs
jo
inc
out
das
mov
fdiv
push
cmp
push
ror
loopne
jmp
cwde
push
daa
push
push
add
cmp
add
add
je
adc
mov
xchg
or
pop
jge
or
sub
call
xlat
ins
sub
jb
mov
adc
loopne
jne
jge
xchg
xchg
jne
outs
and
pushf
xlat
fdivr
test
push
sub
cmp
jmp
cwde
push
cmp
pop
push
(bad)
xlat
jg
les
and
and
add
or
inc
add
test
add
shl
pushf
push
out
mov
dec
push
mov
cs
aas
sub
sub
push
ds
adc
cdq
outs
mov
cmp
lea
mov
xchg
aam
inc
popf
push
enter
jmp
jbe
sahf
pop
dec
add
cmp
pop
push
aas
mov
cs
ja
mov
adc
mov
shl
mov
outs
sub
mov
(bad)
addr16
lea
or
(bad)
push
push
test
adc
out
rol
sbb
and
lds
sbb
pop
cmp
sbb
lahf
push
pop
mov
mov
pop
fild
and
add
push
inc
(bad)
outs
rcl
adc
repz
ds
test
mov
pop
enter
ja
scas
jge
push
mov
fcomp
daa
mov
xlat
pop
ins
push
add
push
xor
add
in
mov
or
pop
mov
or
xor
ror
pop
int
add
dec
ror
mov
es
daa
push
jb
mov
push
mov
cmp
jae
cmp
or
push
xchg
push
and
aaa
sub
(bad)
push
sbb
push
mov
mov
push
mov
sub
and
cmp
adc
test
cmp
mov
retf
pop
shl
mov
in
sub
mov
(bad)
lea
push
and
xchg
ja
ss
cmp
arpl
movs
loopne
iret
sub
pop
push
imul
je
stos
mov
sahf
movs
ja
ret
scas
push
test
add
pop
add
add
mov
pop
and
ja
jle
pushf
fist
ja
xor
ret
jne
pusha
push
clc
xor
call
or
das
sub
or
test
das
mov
nop
das
push
stos
jo
sub
adc
adc
push
mov
js
repnz
xchg
int
mov
mov
out
mov
push
add
out
sub
fisttp
nop
push
add
mov
ins
or
xor
out
stc
out
or
loopne
stc
add
adc
push
mov
xlat
fldenv
fidivr
movs
push
sub
add
daa
add
push
xlat
test
add
and
test
es
or
adc
pop
xor
push
fdiv
jno
out
mov
cmp
pop
mov
xor
out
adc
xor
icebp
ds
push
add
and
out
adc
out
fstp
pushf
push
and
add
adc
pop
scas
push
leave
daa
iret
push
out
and
dec
out
sub
test
(bad)
xchg
push
jno
sti
mov
push
mov
xor
pop
adc
inc
clc
fimul
push
aaa
inc
scas
or
inc
inc
sub
add
xor
popa
outs
or
stos
or
inc
cmp
ret
imul
(bad)
adc
add
or
inc
jno
xor
arpl
mul
ins
jbe
mov
add
lods
pop
les
out
mov
fsub
push
jg
sahf
and
lods
jg
xor
push
test
sbb
(bad)
pop
(bad)
adc
lds
pop
adc
mov
cwde
(bad)
lds
jno
and
jl
mov
outs
adc
push
(bad)
mov
or
(bad)
in
sar
cmc
sbb
jo
cmc
mov
adc
mov
mov
inc
xor
leave
add
test
sbb
shl
sbb
push
pop
lock
sub
iret
sub
cmp
int3
sbb
xor
(bad)
cs
test
push
dec
push
add
xchg
(bad)
loopne
push
push
dec
lss
add
pop
icebp
sub
rol
inc
rcl
pop
sbb
pop
int
pusha
add
mov
cmps
es
xchg
mov
mov
inc
sub
pop
adc
xor
jns
mov
cs
fsub
sub
push
mov
ja
xlat
mov
ds
add
push
(bad)
pop
inc
pop
inc
push
add
and
inc
(bad)
mov
add
sbb
pop
loop
dec
xchg
pop
mov
sub
cmp
scas
mov
mov
stc
daa
push
cmp
or
pop
sub
sub
leave
rol
sbb
cmp
fnstsw
mov
mov
mov
clc
add
int
mov
push
push
mov
jle
hlt
adc
outs
(bad)
mov
mov
pop
test
shr
adc
bound
sub
addr16
push
loopne
adc
test
loopne
pop
and
cmp
loope
dec
mov
ins
cmp
lods
movs
sbb
and
mov
in
fild
mov
xlat
call
or
inc
xor
aad
jb
inc
mov
mov
mov
adc
int3
gs
outs
push
jns
adc
push
mov
test
(bad)
sbb
shl
adc
jo
add
sub
add
push
(bad)
or
mov
add
sbb
and
rol
inc
add
sub
test
pavgb
lds
and
fucomip
adc
jns
ret
movs
gs
sub
cmp
adc
int3
pop
mov
addr16
sbb
out
jl
imul
test
mov
ja
xlat
mov
sbb
pop
cmp
out
mov
sbb
push
sbb
or
and
and
xchg
mov
mov
xor
scas
dec
pop
add
mov
mov
mov
inc
pusha
xchg
call
adc
enter
sub
jp
and
or
rol
inc
jo
sbb
mov
jnp
js
inc
loop
push
dec
push
les
fcmovnb
cmps
into
gs
loope
rol
lock
pusha
add
out
xor
jae
shr
cmc
adc
popa
gs
adc
gs
sub
sbb
pop
shr
mov
push
sbb
int
push
push
pop
add
sbb
lock
cmp
push
loopne
mov
push
add
enter
push
inc
and
push
test
and
imul
ficom
push
push
inc
test
jae
mov
push
push
je
ins
dec
pop
call
dec
fcom
ret
pop
dec
pop
lds
dec
jno
xor
sbb
pop
pop
and
out
test
inc
push
or
pushf
cmp
mov
ror
in
lods
sbb
dec
outs
popa
or
sbb
cmp
sti
ja
sbb
nop
and
shr
push
mov
vlddqu
inc
add
add
es
mov
mov
pop
and
push
mov
jle
loop
ja
pop
scas
packuswb
dec
add
mov
jl
add
push
mov
push
sub
adc
cmp
push
ror
cmp
mov
jmp
mov
push
dec
adc
nop
jmp
and
inc
xor
(bad)
popf
pop
cmp
inc
(bad)
mov
inc
pushf
pop
lahf
sbb
adc
or
jmp
cs
pop
sbb
sbb
lock
fld
mov
clc
cs
xor
xchg
loop
shl
add
daa
pushf
push
jno
dec
mov
cmp
add
and
out
adc
push
pop
dec
popa
lods
inc
add
ret
inc
push
dec
sbb
es
outs
daa
sbb
inc
sbb
sbb
out
jo
cmps
adc
cmp
sbb
cmp
mov
pop
cs
repz
(bad)
add
jl
push
test
adc
push
mov
out
sub
adc
mov
sti
dec
sbb
out
retf
loop
sbb
movups
out
mov
lea
fcom
inc
pop
inc
push
dec
pop
adc
shl
int3
and
push
fadd
(bad)
(bad)
mov
push
jmp
cmp
lds
add
ja
(bad)
pop
xor
add
pop
fist
dec
stos
mov
sub
rcl
jne
inc
bound
jno
or
jo
pop
shl
test
lods
pop
addr16
or
sbb
pop
push
mov
cmp
pop
mov
mov
inc
dec
mov
outs
repnz
pop
imul
(bad)
in
add
iret
or
(bad)
cmovo
mov
aad
and
imul
adc
ret
adc
int3
sbb
dec
inc
xor
outs
cmp
(bad)
pushf
sahf
enter
out
push
dec
push
add
daa
loopne
add
jo
mov
add
xchg
rcr
inc
inc
or
mov
inc
imul
pop
jge
pop
adc
mov
xchg
fisubr
neg
and
stos
sbb
pop
call
ror
adc
int3
adc
adc
jns
sbb
and
jno
xor
out
sahf
mov
push
inc
push
add
xor
push
into
push
jmp
daa
out
push
out
and
cmp
pusha
push
sub
scas
xchg
pop
push
js
sub
sbb
sub
push
xor
mov
push
or
inc
pop
rol
repz
push
adc
xor
pop
test
push
stos
adc
into
repz
push
dec
sub
xchg
push
push
cs
dec
(bad)
mov
popa
neg
fs
add
ret
test
addr16
jle
test
push
or
addr16
stos
sbb
jns
or
test
mov
loopne
adc
adc
pusha
bound
adc
mov
outs
push
lods
adc
push
mov
lods
sbb
jns
sbb
mov
jmp
pop
xor
(bad)
jl
add
(bad)
and
sub
sbb
adc
add
cwde
add
lock
push
mov
mov
push
lock
cmp
push
xor
subps
push
cwde
jg
fnstsw
out
push
ins
push
add
sub
pop
ja
add
push
push
aam
pop
fld
add
pop
aas
and
rcr
pop
lds
rol
mov
imul
push
mov
adc
(bad)
pop
pop
jns
(bad)
mov
xchg
sub
clc
cmp
sbb
inc
adc
cdq
shl
cmp
sub
mov
sbb
hlt
out
shl
cmp
(bad)
add
fadd
push
or
push
mov
enter
or
and
pop
push
or
sbb
adc
mov
pop
jmp
xchg
jnp
test
mov
pop
sub
(bad)
mov
xor
popa
scas
ret
pop
xor
or
out
pop
lahf
sbb
fldenv
jecxz
in
int
jno
sbb
clc
cs
pop
fmul
shr
push
add
fsubr
pushf
aam
mov
cmps
push
inc
fst
add
cmovp
adc
sbb
xor
imul
dec
ja
jo
jmp
lods
jmp
sbb
js
call
or
call
dec
mov
jo
mov
mov
das
sbb
adc
mov
in
xor
mov
mov
cmp
or
add
adc
mov
xchg
dec
add
mov
jne
inc
je
push
ds
mov
push
mov
aaa
xchg
cs
and
scas
mov
add
cmp
or
jmp
ds
mov
push
adc
and
inc
or
test
mov
pop
jge
or
mov
call
mov
fild
cmp
adc
or
adc
jnp
(bad)
int3
xlat
mov
outs
push
jns
fistp
cs
sahf
adc
jns
out
push
xchg
add
add
cmp
add
fbld
jns
xchg
adc
and
adc
mov
inc
sbb
mov
mov
popa
addr16
jnp
sub
or
pop
inc
fnstenv
in
test
cmp
test
das
jno
cmp
mov
pop
aam
cmps
sub
xchg
pop
dec
push
test
loope
test
push
dec
adc
dec
pop
xchg
bound
lods
adc
add
test
xchg
inc
popa
imul
pop
inc
jno
mov
loope
jno
sbb
clc
adc
lods
ja
popa
adc
cmp
leave
aas
clc
popw
push
in
sbb
lock
clc
fist
xlat
popf
aaa
nop
push
push
add
push
or
inc
enter
into
push
mov
and
xlat
loop
jbe
push
scas
push
push
cmp
mov
mov
xor
sbb
sbb
jg
shl
test
test
sub
jne
jg
push
add
dec
mov
xchg
mov
scas
jge
les
loopne
push
(bad)
push
repnz
or
pop
jns
push
sub
and
pop
fisub
sbb
pusha
mul
je
outs
xor
adc
int3
cmp
fsubr
pop
inc
push
test
test
lods
int
push
icebp
shl
sahf
int
adc
xchg
pop
mov
sub
cmc
fidiv
adc
rcl
fild
rcl
out
das
add
imul
add
enter
and
idiv
div
mov
ins
push
div
inc
pop
xor
push
jmp
mov
std
adc
scas
loopne
push
or
scas
jno
sbb
sub
ins
(bad)
outs
inc
sbb
xor
imul
push
and
ja
in
fwait
je
and
xchg
mov
inc
enter
xchg
and
xchg
xchg
sbb
addr16
or
inc
std
lods
test
out
jbe
lds
xchg
jl
xchg
shr
cmc
rcl
jno
push
inc
inc
sbb
push
inc
shl
push
jno
mov
push
loop
scas
jge
ins
jecxz
bound
jle
xchg
push
enter
ja
mov
outs
inc
fadd
int3
lea
mov
push
mov
or
adc
mov
and
mov
jo
je
gs
push
loope
fcomp
adc
pop
sub
sbb
iret
mov
sbb
and
mov
icebp
add
pop
popf
inc
nop
cmc
add
outs
scas
jge
test
jp
nop
pushf
or
loop
test
or
push
test
adc
div
inc
inc
push
and
je
scas
inc
sub
mov
jmp
scas
jno
outs
int
xor
pop
sbb
jg
imul
mov
stos
shr
and
out
out
adc
cs
mov
out
push
add
in
pushf
sub
daa
les
fadd
mov
addr16
fisubr
cwde
loop
addr16
push
addr16
std
aad
inc
mov
dec
push
addr16
inc
lds
add
inc
sub
mov
xchg
sub
mov
adc
ret
jmp
sbb
iret
pop
mov
lods
sbb
or
push
adc
push
push
push
xor
ss
push
pop
test
inc
push
enter
loopne
jno
inc
fsub
pop
jle
stos
popa
mov
pop
mov
pop
xor
ret
pop
push
inc
loopne
mov
mov
pop
mov
push
mov
dec
int3
jo
bndstx
and
js
pop
jno
in
mov
mov
(bad)
aaa
rcl
jmp
test
ja
stos
je
inc
dec
vzeroupper
jl
and
frstor
push
neg
imul
ja
add
lds
inc
(bad)
inc
sub
jne
jge
mov
mov
jno
push
and
pop
xchg
sbb
xor
push
jo
xor
outs
cmp
out
jmp
les
shr
jecxz
dec
dec
repnz
or
pop
sbb
in
pushf
or
jbe
mov
jno
sub
sbb
mov
pop
xor
mov
xor
pop
mov
jno
mov
popa
xor
mov
xor
add
xchg
jno
bound
ja
jge
sbb
in
adc
out
push
xchg
push
scas
or
loop
das
les
ja
mov
and
cmp
ja
cli
ja
sbb
push
add
lds
outs
popa
mov
dec
mov
loop
dec
dec
mov
mov
jno
mov
dec
jge
mov
mov
sub
js
outs
scas
jge
idiv
lock
mov
stos
das
rcr
(bad)
sar
fadd
mov
mov
div
(bad)
sub
sbb
inc
sub
test
scas
popa
nop
mov
jo
scas
add
imul
xor
jmp
mov
jg
imul
inc
(bad)
addr16
mov
xchg
icebp
xor
dec
repnz
inc
push
pop
das
adc
pop
fdiv
mov
aam
nop
push
popa
out
addr16
retf
fadd
addr16
fisub
push
add
push
std
cmp
or
inc
lods
dec
out
inc
test
cmp
setbe
or
lods
jno
add
add
sbb
inc
shl
mov
sub
add
repz
mov
and
push
ds
pop
das
jo
inc
push
pusha
test
jnp
fsub
test
not
shr
mov
clc
scas
and
scas
add
imul
and
(bad)
js
jno
addr16
fsub
add
neg
cld
es
das
inc
push
inc
xor
xchg
mov
push
shl
repz
mov
sub
jle
push
sbb
in
cmp
and
add
cmp
inc
inc
push
cmp
sub
add
retf
movnti
imul
mov
fisttp
movs
and
pushf
or
inc
popa
ins
ins
(bad)
fsub
pop
pop
jp
add
je
inc
js
arpl
inc
js
aaa
xchg
mov
xchg
add
loop
xor
addr16
data16
mov
int3
dec
or
es
sub
jg
push
inc
fs
mov
gs
inc
dec
add
jmp
push
dec
fistp
mov
pop
xchg
and
sbb
iret
dec
push
dec
dec
and
mov
or
inc
jbe
ins
sub
mov
add
call
mov
add
and
or
dec
xchg
mov
or
lock
imul
bound
dec
jb
jp
shl
cmp
mov
call
jmp
lea
scas
push
inc
push
fld
mov
out
mov
hlt
das
cmp
mov
sbb
jecxz
xchg
dec
in
push
nop
out
sti
xchg
loopne
or
scas
push
int3
push
pushf
ret
popf
enter
ret
and
add
inc
iret
xchg
cmp
ret
stos
xchg
jmp
movs
outs
fmul
and
dec
or
loope
cmc
js
cmp
cmp
daa
mov
add
mov
xor
or
xchg
pop
xchg
ror
add
jns
jno
and
xchg
mov
sbb
xchg
ret
push
sub
rcl
sub
add
push
pop
push
stos
outs
pop
inc
mov
ja
add
push
jecxz
retf
jg
and
and
hlt
xchg
nop
ret
push
pop
inc
(bad)
in
fild
add
nop
push
dec
pop
add
fstp
call
mov
pop
ret
xor
(bad)
(bad)
(bad)
jge
push
push
push
jbe
mov
mov
lea
mov
mov
mov
xor
(bad)
out
leave
mov
push
mov
and
mov
adc
pop
jbe
mov
fcmovnu
pop
pop
cmp
ret
sqrtps
(bad)
jmp
es
mov
mov
mov
test
je
mov
das
sbb
fwait
cdq
jmp
adc
test
outs
pop
cmp
push
push
shl
mov
call
sub
mov
mov
dec
sub
je
shr
pop
push
xchg
daa
sbb
xor
add
add
jle
ins
or
add
outs
add
imul
jo
mov
adc
push
add
in
(bad)
push
push
out
jbe
push
mov
sbb
pop
push
adc
and
jmp
mov
pop
ret
dec
mov
and
inc
jne
mov
sti
pusha
or
lea
int3
(bad)
fisubr
xor
jl
pop
std
mov
or
dec
dec
or
or
dec
dec
dec
or
daa
daa
daa
and
repnz
daa
daa
daa
daa
cmc
div
clc
daa
daa
daa
daa
stc
cli
sti
cld
daa
daa
daa
daa
std
(bad)
jmp
daa
daa
daa
daa
loope
jecxz
cli
mov
cmp
aas
push
dec
jne
fdivr
das
or
mov
mov
mov
sbb
std
and
xchg
dec
dec
cmp
lods
popf
movs
sub
outs
clc
xor
and
outs
cmps
jg
inc
hlt
mov
lods
jne
mov
fnstsw
iret
les
adc
push
jl
fisttp
or
cmp
mov
xchg
call
and
push
cdq
in
loopne
push
loopne
fdivr
xchg
push
aam
mov
sahf
cmp
aam
adc
and
push
loopne
mov
jns
in
mov
mov
or
cwde
aas
adc
dec
repnz
test
aaa
mov
xchg
cmp
push
xor
push
mov
mov
mov
adc
xor
sar
mov
mov
hlt
jge
retf
cmp
in
stos
push
cmps
cmp
mov
xor
in
stos
push
mov
lods
adc
pop
test
test
movs
mov
sub
cmp
adc
mov
pop
movs
mov
sub
mov
imul
inc
pop
jge
pop
scas
int
or
dec
xchg
les
test
(bad)
cmps
lds
push
cs
pushf
xor
jmp
pop
pop
mov
sbb
in
add
cwde
xor
fisub
add
jb
mov
add
daa
fcom
cs
ins
and
push
call
dec
mov
lea
or
dec
push
or
pop
ret
push
push
sbb
xadd
push
aad
and
push
in
or
xlat
ss
mov
or
nop
push
fcom
dec
pusha
jbe
push
fcomi
fxch
dec
pop
lods
mov
push
sub
cmp
ins
(bad)
jl
push
cld
pop
push
sbb
outs
xor
(bad)
cld
add
jo
push
int3
xchg
data16
adc
fcmovnbe
mov
push
cmp
push
or
and
push
inc
aam
in
jno
mov
ftst
mov
push
sbb
inc
sbb
es
inc
into
aam
add
rcr
pop
jnp
nop
jle
aaa
push
xor
nop
push
dec
or
lock
test
int3
ss
push
hlt
inc
push
fcmovnbe
dec
pusha
push
aam
mov
mov
jbe
fadd
ins
pop
pop
fdivr
push
or
push
lock
es
pop
pop
outs
push
ins
ins
(bad)
jbe
ss
push
push
pusha
push
xchg
and
out
cmps
lods
aam
pushw
cld
and
fcomp
xchg
data16
dec
push
inc
ins
xchg
pop
js
jl
push
add
cli
mov
sahf
push
push
frstor
ins
pop
dec
and
add
(bad)
mov
and
gs
daa
not
bound
add
sub
mov
outs
je
test
les
or
sbb
pop
jge
sub
js
mov
stos
(bad)
(bad)
ins
addr16
push
jb
push
sub
adc
and
jae
inc
addr16
gs
sub
(bad)
cmp
ja
ins
cmps
fsub
ret
mov
adc
dec
mov
stos
xor
sub
adc
imul
dec
and
adc
jmp
xor
call
or
ins
in
xchg
jbe
ins
bound
aaa
call
add
(bad)
sub
xor
push
test
xor
jle
dec
ins
(bad)
mov
sub
mov
or
ja
pop
sub
pop
xor
data16
ins
popa
imul
xor
adc
add
in
cmp
jmp
sub
pop
inc
jne
rcr
push
xor
aaa
sti
sbb
inc
inc
xor
cs
add
push
outs
imul
pop
add
jne
mov
add
movs
repz
add
(bad)
sub
and
ja
test
fs
adc
ins
sub
pop
mov
and
and
das
cmp
mov
inc
aas
enter
xor
mov
or
push
sub
adc
sbb
inc
inc
pop
cmp
mov
enter
jne
jbe
in
xor
fist
xchg
xor
jl
(bad)
push
jl
sub
cdq
aas
cmps
mov
cmp
enter
cmp
(bad)
mov
mov
push
fs
cmp
fld
xor
fbstp
in
sbb
imul
jb
push
repz
std
pop
xchg
rcr
fcom
add
pop
or
dec
add
add
jo
ins
push
lods
mov
mov
sub
adc
loope
lods
and
ins
and
add
mov
scas
cmp
sbb
sub
pop
dec
outs
xor
jb
clc
loopne
fbstp
mov
sbb
sub
adc
jb
fbld
push
outs
das
xor
int
mov
push
xchg
push
shl
adc
pop
mov
cmp
or
bound
bswap
enter
ficomp
or
ret
test
xor
dec
js
adc
gs
or
je
jo
adc
movs
add
ins
sub
sbb
es
adc
inc
mov
add
rcr
fcom
fiadd
sbb
add
inc
inc
mov
mov
adc
jg
or
mov
sub
mov
mov
mov
inc
je
or
test
mov
jge
or
inc
jp
inc
add
mov
mov
je
xor
mov
outs
cwde
add
call
sbb
ins
arpl
cmp
mov
jmp
into
or
pop
push
push
outs
imul
push
mov
dec
je
add
cdq
fidivr
jmp
call
ret
or
pop
sub
or
mov
js
jg
mov
jne
xor
add
movs
ret
call
push
push
add
add
add
add
add
adc
cmp
add
inc
xor
ds
add
add
aas
idiv
mov
add
je
(bad)
xor
dec
repz
dec
idiv
add
and
and
mov
xor
dec
lods
jmp
or
sub
push
cli
inc
dec
ret
cs
mov
leave
repz
xchg
fistp
scas
or
loopne
mov
or
add
push
and
push
jmp
mov
jg
mov
pop
sbb
mov
sbb
push
or
add
push
mov
dec
and
popf
lock
cmp
pop
ja
mov
daa
pop
mov
and
mov
mov
lods
sub
out
inc
sub
jne
lea
push
add
push
add
push
ds
lahf
repz
push
jmp
in
push
xchg
(bad)
call
in
mov
push
fmul
inc
in
lea
cld
es
in
mov
aam
aam
add
pusha
fmul
push
popa
xchg
lods
dec
rol
pmulhuw
mov
call
dec
enter
call
jle
call
adc
shl
lods
mov
inc
call
pop
inc
sahf
cmps
in
in
loop
mov
lods
hlt
push
nop
cld
sbb
push
xchg
mov
adc
mov
or
test
mov
sub
mov
pop
mov
jge
mov
mov
(bad)
and
sbb
mov
daa
in
dec
add
push
(bad)
enter
daa
int3
rcr
fsub
hlt
mov
shr
and
sub
xor
add
xor
ins
sbb
push
and
ins
movs
shl
outs
xor
dec
inc
add
dec
jl
mov
push
push
dec
add
(bad)
pop
ret
add
sahf
and
lods
popa
unpcklps
sbb
inc
cwde
mov
cmp
add
add
scas
addr16
nop
pop
and
or
pushf
mov
jle
sub
vpmacssdd
mov
cwde
ins
arpl
stos
ja
push
sbb
jne
mov
adc
aaa
xchg
retf
mov
push
xor
dec
mov
pop
mov
xor
cs
ds
(bad)
cmp
add
imul
jb
xchg
pop
push
cdq
add
cwde
push
adc
xor
add
push
pop
jecxz
or
dec
dec
jecxz
sar
push
add
jp
xor
add
jb
xor
pushf
popa
arpl
sbb
add
xchg
or
lock
loope
loopne
iret
adc
and
mov
ss
and
outs
pop
inc
xor
add
lods
jae
outs
aas
jae
cs
int3
int3
ror
cs
add
sbb
out
pop
sbb
movs
(bad)
loopne
or
sbb
mov
test
add
jecxz
or
or
jge
pop
loop
sub
adc
jae
push
push
out
aas
imul
cs
scas
sub
fmul
ret
push
sub
sbb
push
xor
adc
xchg
and
push
jp
mov
daa
jl
test
je
push
in
int3
push
or
mov
int
jg
movzx
cmp
jne
adc
sub
add
jmp
mov
or
lock
push
add
(bad)
lock
inc
mov
sar
adc
je
neg
lock
mov
pop
adc
fld1
fsub
adc
fwait
cmp
jge
add
mov
sbb
scas
ins
jo
adc
lock
jne
dec
push
int3
pushf
mov
cmp
pop
add
sbb
int3
cmp
mov
add
pop
and
pop
repz
rol
rcr
cmps
push
les
xlat
and
mov
push
shr
mov
or
ja
and
dec
jmp
mov
sbb
(bad)
inc
jb
mov
push
stos
sbb
push
inc
sbb
push
push
mov
push
adc
push
retf
sub
jne
add
cdq
xor
sub
and
fisttp
inc
dec
rol
mov
inc
add
loopne
mov
push
lods
jmp
rcr
jmp
add
imul
imul
push
add
faddp
lea
pop
sbb
mov
sub
inc
inc
sbb
sahf
lea
inc
add
mov
jg
inc
add
add
dec
inc
test
imul
push
or
icebp
inc
js
ret
inc
retf
mov
lock
mov
cmp
push
push
adc
popf
lock
(bad)
adc
inc
dec
mov
mov
js
scas
sbb
add
mov
call
movs
xchg
ins
mov
jp
in
ret
daa
push
mov
je
mov
daa
test
xchg
dec
jg
sbb
mov
cmp
or
ret
sub
call
aad
xchg
push
sti
ins
and
inc
jl
push
pop
and
mov
aad
ins
nop
or
sbb
adc
mov
jo
pop
or
jp
ret
inc
push
or
into
lock
bound
inc
xor
cmp
int3
mov
mov
and
inc
test
and
mov
jle
inc
dec
jne
xchg
pop
lock
sub
mov
adc
sti
sub
sti
or
and
pop
xchg
mov
jns
xchg
fmulp
push
cli
mov
mov
movs
pop
pop
add
sbb
pop
fist
xor
push
cli
push
nop
push
das
cmc
and
cmp
scas
mov
lds
add
or
mov
adc
mov
aas
call
je
add
sub
int3
pop
imul
pop
mov
pop
dec
movs
add
gs
popa
pop
cmp
test
bound
ror
addr16
inc
test
pop
cmp
dec
pop
add
nop
mov
jno
outs
jne
nop
mov
mov
mov
adc
sbb
push
inc
fiadd
mov
and
push
arpl
outs
push
imul
dec
add
outs
sbb
daa
dec
jne
arpl
sub
cmp
imul
sub
xchg
into
sbb
jb
cli
jae
adc
or
inc
popa
jb
daa
mov
add
push
or
fdiv
adc
add
retf
retf
and
add
dec
push
push
jo
cmp
dec
mov
xor
mov
fs
cmp
test
push
outs
ss
int
push
push
shl
inc
movs
sbb
sahf
inc
cmp
lock
push
and
sub
add
add
iret
pop
push
pusha
je
sbb
cmps
mov
fnstenv
add
js
or
(bad)
or
cmp
or
(bad)
mov
arpl
jecxz
sub
in
jmp
and
add
or
das
add
inc
fs
fs
pop
sbb
rcl
mov
and
push
mov
inc
push
aaa
sub
dec
arpl
mov
inc
cmp
fs
and
pop
mov
popa
mov
jmp
push
add
std
jne
inc
inc
fstp
cmp
sbb
mov
push
adc
ins
add
cwde
iret
jge
sbb
add
adc
in
mov
push
or
inc
jns
jo
mov
or
jb
js
push
mov
in
adc
adc
call
pop
cwde
cmp
scas
add
div
addr16
pop
dec
lock
add
inc
adc
fwait
mov
add
push
pop
jo
adc
outs
sbb
inc
gs
add
mov
sub
mov
xchg
sbb
pop
fcmove
xor
imul
xchg
push
ret
adc
push
add
and
lods
mov
add
popa
and
push
pop
mov
js
mov
inc
push
sti
and
pop
pop
dec
sbb
lods
in
repnz
xor
sbb
es
stos
sti
cmp
call
aas
sbb
clc
inc
inc
push
adc
not
xchg
cmps
adc
sub
add
out
sbb
cmps
imul
jg
lods
mov
movs
jmp
in
dec
mov
add
and
das
rol
xchg
xchg
xchg
daa
xor
jno
leave
leave
enter
and
push
and
sub
jb
cli
ds
out
mov
fist
sbb
fild
add
and
mov
test
cmp
adc
push
pop
cmc
cmc
in
in
call
cmp
inc
shr
inc
inc
adc
pop
add
xchg
and
les
idiv
add
inc
jno
cwde
in
popa
jp
inc
imul
fnclex
or
rol
inc
sub
or
mov
iret
cld
rol
add
cmp
push
mov
leave
jnp
inc
and
add
aad
rcl
fimul
add
lahf
dec
add
mov
aas
xchg
adc
mov
add
int
add
push
gs
dec
push
xchg
add
clc
movs
dec
dec
push
push
rol
dec
xchg
add
in
data16
and
pop
adc
pop
mov
xor
pop
sti
ins
mov
and
test
or
outs
pop
push
dec
add
fild
rcl
sub
mov
sub
add
rol
rol
cwde
aas
adc
rcl
xchg
test
int3
adc
test
sub
cmp
add
push
xchg
dec
dec
inc
js
dec
outs
dec
lods
jle
add
jae
inc
fs
(bad)
sbb
mov
pop
cli
dec
stos
inc
push
add
pop
xor
dec
push
dec
dec
dec
bound
ffreep
add
je
popa
loop
loop
xchg
fadd
add
or
or
cmp
fsub
int
lahf
rol
das
xlat
adc
add
(bad)
aaa
(bad)
outs
sub
cmp
or
jb
add
cmp
imul
je
mov
xor
jae
imul
jnp
int3
dec
cs
push
ds
addr16
int3
pop
data16
push
aaa
sbb
add
out
out
inc
add
add
(bad)
out
add
rol
fcom
pusha
div
add
add
push
aaa
add
xchg
jnp
push
inc
or
add
sbb
pusha
sti
mov
add
lahf
add
data16
adc
pop
out
pusha
add
outs
adc
or
jle
or
out
rcr
dec
sbb
sbb
push
and
cmp
fdivr
ret
mov
inc
ror
mov
mov
lock
add
add
(bad)
dec
out
mov
mov
ret
mov
or
cmps
fst
lock
scas
imul
ror
push
jmp
push
loop
ret
mov
daa
pusha
jmp
adc
add
repz
add
xchg
add
in
inc
cmps
adc
ins
popf
cmp
ss
sub
ss
cmp
inc
push
xor
iret
or
add
cld
(bad)
jb
jb
out
jmp
jb
in
in
out
jb
jb
out
rcl
shl
jb
rcl
aad
jb
jb
xlat
fcomp
ficomp
jae
fcmovnu
pop
cmp
enter
(bad)
in
or
sbb
mov
cmp
pop
cwde
xor
add
jb
mov
shl
pushf
fs
or
sub
mov
add
mov
add
xor
cmp
sub
or
cwde
pop
xor
shl
daa
and
std
push
mov
cmp
mov
fs
adc
frstor
add
add
mov
mov
into
add
inc
clc
push
fadd
xchg
mov
lock
retf
call
mov
add
jmp
ret
push
add
mov
add
(bad)
add
xor
and
pop
ja
cmp
rcr
or
and
adc
add
sbb
cs
adc
sub
add
das
setge
iret
pop
fadd
or
dec
(bad)
retf
cmp
mov
mov
mov
sub
dec
fist
adc
mov
inc
fwait
and
sbb
cmp
mov
mov
lods
jo
jp
inc
call
push
pop
mov
mov
inc
mov
je
xchg
int
jl
mov
dec
shl
mov
enter
call
adc
add
sub
inc
add
adc
jb
mov
mov
cmp
(bad)
adc
aaa
fsubrp
mov
in
cmp
adc
call
jne
enter
inc
in
in
loope
push
and
jmp
xlat
out
xor
cmp
ins
sbb
mov
or
loopne
sbb
test
cld
dec
ins
test
adc
mov
jecxz
sbb
enter
call
sti
or
sbb
cs
mov
lods
sbb
out
hlt
movs
mov
dec
jmp
sti
dec
mov
enter
or
or
pop
push
mov
mov
mov
or
js
mov
jbe
mov
gs
daa
cmp
sub
rol
and
pop
jne
lock
pop
cmps
jmp
cdq
mov
add
test
aaa
int3
repz
sub
or
jmp
std
mov
mov
(bad)
icebp
in
div
fdivr
mov
pop
(bad)
stos
loope
or
in
xor
cmp
test
fdiv
outs
pushf
lods
jne
mov
sbb
mov
lock
lea
ror
inc
push
xor
ficom
cmp
or
sbb
sbb
cld
or
add
or
push
mov
xchg
pop
xchg
cwde
sub
add
cwde
add
ret
and
add
add
add
push
add
call
dec
add
sub
xchg
xlat
add
sar
test
xchg
mov
nop
or
enter
lds
pushf
sbb
xchg
mov
adc
jo
jnp
dec
test
rcr
inc
sbb
mov
aaa
dec
add
add
add
add
and
rcl
mov
inc
add
jmp
daa
add
mov
xor
hlt
fidiv
js
push
test
sub
add
pop
aam
jo
sar
int
xor
xor
ret
sbb
popa
stos
iret
ins
sbb
pop
jbe
inc
jae
daa
(bad)
daa
inc
bound
test
out
jo
adc
jl
lock
cmp
ins
and
or
pop
cdq
fdiv
adc
xor
test
imul
test
je
jo
add
xchg
pop
dec
mov
push
sbb
push
jmp
xchg
xor
cmp
or
jmp
dec
inc
or
into
mov
loopne
js
add
movd
les
inc
add
daa
loopne
add
dec
push
mov
jmp
jecxz
add
leave
mov
call
jg
stos
je
adc
fcomp
stos
mov
fst
inc
mov
dec
lock
test
lock
dec
in
in
dec
pop
loopne
xor
inc
dec
sub
je
mov
dec
jo
mov
push
cmp
push
nop
or
cmp
das
je
dec
jnp
dec
nop
add
(bad)
loopne
or
hlt
jmp
jno
adc
(bad)
stc
xchg
or
daa
sub
mov
sbb
push
pushf
lea
jl
adc
bound
loopne
sbb
jmp
call
pushf
lahf
data16
mov
pop
and
push
push
data16
ins
ss
int3
cdq
or
aaa
or
add
scas
mov
ds
popa
sbb
push
mov
imul
fmul
popa
mov
jp
aas
ja
daa
test
jp
or
sbb
dec
push
dec
jle
stos
mov
inc
or
cmp
bound
xchg
cs
pushw
ds
xchg
dec
out
push
adc
mov
mov
into
or
cmps
imul
or
and
addr16
add
sub
ret
mov
dec
out
pop
add
bound
mov
inc
emms
ror
das
imul
cwde
aas
aaa
daa
or
add
sbb
or
int3
mov
das
outs
or
or
mov
push
fild
pop
cwde
sbb
scas
das
test
push
add
dec
aaa
push
xchg
push
retf
aaa
cmp
lahf
pop
sub
jle
daa
cmp
sbb
(bad)
fadd
add
xor
pop
call
test
or
cmp
pop
jle
add
cmps
adc
test
pop
dec
cmps
movs
push
adc
leave
arpl
cli
mov
test
cmc
mov
xor
std
rcl
pop
lock
test
mov
outs
lods
xor
add
out
push
push
lods
jno
mov
push
mov
dec
test
jl
aam
shr
xor
gs
xor
mov
add
jne
leave
add
sar
enter
add
adc
in
jnp
add
add
sar
cmp
adc
dec
xor
inc
add
add
pusha
jae
sbb
mov
adc
addr16
fcomp
loopne
sbb
mov
mov
dec
sbb
sub
xchg
test
mov
jne
push
and
mov
mov
mov
hlt
cmp
mov
and
xlat
mov
cld
out
mov
rol
rcl
mov
adc
mov
in
and
pop
lods
add
or
and
dec
int3
call
mov
fnstenv
mov
adc
js
or
mov
add
call
mov
and
or
inc
mov
xchg
cmp
jmp
mov
mov
mov
xor
dec
ret
or
and
pop
and
add
lods
lahf
xor
or
nop
pop
mov
mov
sub
xor
mov
push
outs
jo
adc
loopne
cmp
popf
clc
adc
mov
adc
sub
xchg
jnp
pop
add
and
push
add
mov
fsubrp
or
xchg
mov
pop
pusha
adc
pop
sub
leave
inc
lock
(bad)
mov
ret
add
and
imul
mov
sbb
push
mov
pop
push
or
xor
jnp
adc
push
(bad)
test
push
and
hlt
push
loope
fiadd
add
scas
loope
test
(bad)
sbb
xchg
loopne
dec
jmp
(bad)
or
mov
mov
js
ins
mov
lods
loope
test
mov
jo
xchg
test
fs
mov
and
adc
pop
mov
sub
mov
aaa
(bad)
xor
xchg
sub
xchg
adc
pop
push
pop
es
push
sbb
add
cli
jns
adc
cmp
adc
mov
fwait
dec
inc
pop
add
pop
loop
or
adc
cmps
sub
pop
adc
dec
ror
test
sti
cmp
sbb
pusha
add
out
int3
fdiv
loopne
jmp
xor
push
ins
mov
cmp
repnz
adc
xor
mov
bound
add
xchg
xchg
out
pop
mov
mov
call
clc
popa
aad
push
pop
add
(bad)
inc
inc
cmp
adc
in
or
dec
or
or
xor
mov
lea
and
ins
mov
mov
add
cwde
or
cmp
lock
sbb
mov
test
in
pop
xchg
cmp
daa
adc
dec
sbb
clc
icebp
mov
jle
jmp
ds
mov
xlat
outs
and
or
and
ret
shl
mov
push
mov
in
adc
inc
mov
(bad)
in
scas
mov
cwde
push
and
pop
push
loope
mov
xchg
pop
push
loope
adc
adc
dec
cli
fistp
call
xlat
out
jo
add
fcomp
lahf
push
jp
(bad)
jg
push
jecxz
(bad)
or
rcl
sar
adc
test
adc
dec
sbb
pop
xlat
pusha
sub
das
lock
or
mov
icebp
jmp
add
cmc
movs
test
rol
lea
mov
rol
mov
mov
ss
daa
jae
mov
cmp
mov
pop
sub
cdq
lock
enter
test
mov
add
push
mov
lea
and
push
xor
pushf
dec
cwde
xchg
xchg
pushf
nop
pusha
les
jno
adc
call
add
nop
jg
test
or
adc
inc
mov
xor
mov
push
sbb
or
sub
aaa
inc
inc
mov
loope
sar
push
rol
mov
adc
sub
mov
gs
mov
nop
push
or
js
outs
push
scas
lock
aas
adc
pop
jnp
mov
push
loope
test
cmp
push
and
adc
aad
aad
sar
adc
(bad)
jmp
inc
enter
inc
jmp
ret
mov
xchg
jmp
clc
ins
pop
test
loopne
xchg
fs
ins
cmp
pop
xchg
jnp
jnp
sbb
pop
adc
push
ins
sub
inc
fwait
pusha
mov
mov
sub
aam
inc
jbe
sbb
add
jmp
adc
inc
test
loope
test
pop
leave
inc
add
test
lods
mov
inc
mov
mov
xlat
xchg
dec
test
add
dec
fadd
movs
int3
cmp
push
inc
mov
push
imul
and
fcom
sbb
popa
mov
das
cs
pop
mov
xchg
push
sub
imul
jg
pop
adc
aaa
pop
xor
push
sbb
(bad)
sbb
fldenv
jo
sbb
sbb
add
sub
lahf
pop
pop
sub
push
add
inc
fmul
add
mov
xor
dec
lods
call
test
dec
test
jl
inc
xor
inc
add
adc
sub
add
rol
ins
xor
mov
cmps
sar
lock
dec
jne
push
pop
fstp
jl
fwait
mov
mov
mov
aam
or
adc
ins
out
xor
or
pop
pop
les
test
fldpi
or
cmp
loopne
loope
ins
adc
mov
sbb
sbb
in
das
add
shr
sbb
adc
fiadd
mov
les
and
test
sub
pop
test
fld
(bad)
xor
cdq
adc
jl
xchg
call
add
xor
push
and
mov
push
push
popa
pop
loopne
jb
fcomp
push
pusha
dec
pop
or
jge
adc
pop
sub
scas
and
dec
lock
dec
xor
jg
shr
mov
push
mov
lods
fimul
cmp
inc
test
sbb
loopne
mov
jle
fild
ficomp
inc
push
xor
js
(bad)
(bad)
(bad)
mov
inc
outs
jb
inc
outs
ja
ins
outs
popa
fs
jae
imul
popa
imul
cmp
push
add
mov
fdivr
add
push
outs
imul
add
jg
sub
ret
ret
pusha
jnp
loope
lock
std
pop
adc
in
push
sub
or
cdq
popa
push
jo
aas
sub
fsub
push
mov
data16
mov
(bad)
js
xor
cs
cs
in
leave
pop
call
mov
mul
fmul
loopne
aas
repnz
je
fsubr
aas
mov
inc
call
lock
ror
out
jnp
add
push
call
mov
(bad)
mov
in
pop
push
inc
cmp
sbb
pop
xor
sub
movs
std
mov
or
add
nop
cmp
sbb
inc
jb
add
jo
rol
aam
adc
out
(bad)
icebp
pop
dec
in
inc
pop
fiadd
or
(bad)
(bad)
repnz
sub
cmp
inc
iret
jno
cmp
cmp
add
pusha
push
mov
jg
test
mov
test
js
or
inc
mov
dec
push
jns
mov
mov
mov
cmp
jne
mov
dec
loope
jmp
push
dec
jne
mov
mov
clc
sbb
push
mov
or
add
mov
fcom
cmp
ds
out
xlat
retfw
add
cmp
or
adc
aaa
or
jns
out
nop
pop
xlat
push
jmp
push
int3
mov
call
nop
jge
or
fidiv
not
inc
sub
int3
loope
addr16
cmp
arpl
inc
mov
mov
loopne
inc
gs
and
fmul
inc
or
ins
and
(bad)
mov
jg
add
inc
test
mov
jne
call
inc
push
and
test
stos
je
dec
scas
jl
add
mov
mov
mov
mov
dec
in
lea
les
sahf
pusha
mov
pusha
fcomp
xor
nop
fstp
fwait
inc
int3
add
mov
dec
and
shl
mov
les
mov
add
xor
push
shl
daa
call
aad
jg
dec
movs
dec
dec
maskmovq
neg
sub
imul
pusha
cld
test
mov
pop
lock
sub
ss
pusha
in
adc
sbb
adc
adc
push
lods
test
ins
cwde
add
push
add
mov
sbb
or
xchg
popa
(bad)
inc
jl
pop
out
jb
repz
fbld
add
push
(bad)
sbb
mov
xchg
out
dec
pop
xchg
fnstcw
ror
adc
adc
xchg
clc
pop
in
push
and
push
loopne
or
sub
or
or
aad
or
test
rcr
xchg
cli
sbb
cmp
imul
xchg
shr
and
mov
pop
clc
xor
jo
rol
sub
add
fnstcw
push
popf
inc
push
cmp
or
pop
adc
enter
ds
xchg
out
mov
jl
test
and
jb
mov
adc
mov
enter
jl
iret
mov
cwde
fwait
cmp
mov
pop
adc
jp
out
sub
push
mov
mov
push
sub
inc
popf
jmp
sub
aas
test
pop
jb
out
add
push
sub
call
scas
loopne
enter
pop
push
mov
pop
movs
pop
mov
or
mov
(bad)
sub
add
jmp
sub
cli
or
fdivr
push
jp
rcl
mov
mov
adc
rol
int
ror
mov
xlat
and
daa
aas
popf
loope
push
xlat
push
fidiv
addr16
(bad)
add
add
fiadd
aad
ror
das
pushf
(bad)
or
lock
pop
hlt
test
push
test
xchg
pusha
sub
or
daa
adc
loope
mov
jae
loopne
scas
arpl
mov
ja
cwde
loopne
or
cmps
push
adc
ret
cs
inc
fisub
shr
fwait
aas
sbb
das
call
cli
cwde
ret
mov
push
mov
int3
lods
(bad)
imul
cmp
not
sbb
mov
jg
icebp
xor
sbb
ss
add
add
add
out
std
sti
cmp
add
push
sub
and
aas
cs
or
sub
out
loopne
add
add
out
test
rol
stc
ds
lods
or
popf
mov
rcr
add
ret
lea
jg
jle
mov
xchg
(bad)
pop
scas
sub
jb
sub
push
or
mov
je
and
sub
sbb
or
xchg
adc
xor
xchg
jmp
jne
push
jbe
cmc
push
mov
or
adc
mov
adc
adc
adc
cs
sbb
clc
mov
enter
inc
repnz
(bad)
mov
das
stos
sbb
xor
sub
(bad)
sbb
test
retf
sbb
cwde
shl
mov
aam
or
sub
xor
dec
scas
fld
ret
cmc
in
pop
push
cmp
push
xor
mov
dec
scas
sbb
bnd
fisubr
into
fs
add
addr16
mov
retf
gs
adc
sbb
xchg
xchg
jb
iret
inc
stc
clts
(bad)
mov
call
jo
lock
imul
cmp
xor
mov
mov
shl
pop
xchg
mov
jle
inc
test
jne
pop
or
pop
mov
inc
push
pop
dec
inc
sbb
nop
dec
fwait
nop
mov
inc
dec
fdivr
call
dec
jno
xchg
or
and
xchg
std
pop
out
push
xor
xor
movs
jmp
push
mov
mov
add
sbb
jne
adc
pop
add
cwde
(bad)
sub
daa
pop
xchg
add
sbb
push
xor
jmp
push
jnp
pop
pusha
push
cwde
pop
push
or
mov
pusha
into
mov
pop
or
and
gs
aaa
mov
in
test
cmp
sbb
xor
xlat
xchg
mov
and
cmp
loop
push
xlat
dec
mov
jle
(bad)
lock
mov
mov
mov
xchg
inc
pop
sub
int
inc
and
mov
mov
push
dec
test
jl
inc
sub
imul
sbb
test
xchg
dec
ins
call
jne
cmp
arpl
push
inc
dec
jne
(bad)
dec
xchg
lock
fimul
dec
test
cmp
pop
aaa
repnz
(bad)
bound
xchg
xor
add
jmp
or
xor
push
into
jmp
addr16
xchg
popa
sub
lock
out
jae
arpl
arpl
add
mov
ss
movs
test
push
lock
(bad)
sahf
outs
loopne
mov
ret
mov
mov
dec
adc
dec
and
adc
jg
mov
dec
inc
add
test
fsubr
pop
jno
lea
push
or
or
jmp
in
mov
sbb
xor
daa
xchg
add
sbb
repnz
pop
cmp
test
add
xlat
ret
push
call
pop
cli
out
jnp
enter
pop
das
jl
push
add
call
inc
cmp
loopne
xchg
push
xor
loopne
ror
pop
adc
inc
(bad)
leave
inc
cmp
jg
mov
cdq
cmc
jl
inc
dec
jne
sub
test
and
cld
je
cmp
sub
adc
(bad)
add
(bad)
inc
pop
add
ror
push
inc
out
pop
scas
dec
test
sbb
push
pop
and
fld
pop
adc
xor
xchg
mov
add
inc
dec
or
mov
push
or
push
mov
add
mov
dec
inc
sub
call
mov
pop
cmp
jne
pusha
mov
rol
push
js
into
imul
imul
sub
or
mov
aam
cmp
pop
aaa
into
pextrw
jnp
retf
fmul
mov
xor
les
out
int3
clc
add
outs
and
sbb
cmp
inc
pop
mov
pop
push
and
sbb
cwde
sub
mov
xchg
jo
data16
push
sbb
dec
test
add
(bad)
cli
adc
out
xor
call
jbe
cmp
lock
(bad)
adc
sub
push
test
and
cld
lea
dec
lock
or
push
mov
cs
push
and
xor
and
xor
sbb
pop
push
test
xchg
lods
sti
dec
out
fstp
popf
dec
pop
frstor
cmp
xor
and
fld
fcomp
loopne
jae
mov
popa
adc
sub
retf
mov
sbb
sbb
add
stos
punpcklwd
pop
add
adc
inc
imul
dec
add
dec
and
enter
fiadd
nop
sbb
and
call
push
enter
or
lock
jl
loopne
xchg
cld
popa
mov
fisubr
shl
call
or
push
cs
loopne
mov
pop
pop
cmps
sbb
and
aam
fadd
retf
dec
lods
in
aam
test
test
(bad)
mov
shl
pop
inc
outs
pop
mov
or
mov
hlt
repnz
loope
bsf
add
pusha
inc
jns
pushf
cmp
push
imul
aas
mov
sbb
inc
cmp
es
aam
push
ja
sbb
push
mov
push
(bad)
cmp
cld
mov
sbb
xor
sub
mov
jae
inc
mov
in
and
rol
cmp
stos
lock
push
and
ret
push
test
add
sbb
xor
movs
adc
movs
xchg
fdivr
mov
movs
repz
aaa
ret
jo
lock
mov
out
shl
fidivr
and
nop
mov
sbb
fdiv
mov
jmp
dec
mov
xor
and
sbb
test
and
nop
jmp
test
das
adc
or
mov
dec
das
mov
daa
rcr
cmps
arpl
push
ret
xchg
pop
rcl
gs
inc
sbb
mov
pop
pop
fwait
sbb
data16
popa
jmp
ss
xchg
fimul
inc
pushf
mov
and
pop
shl
imul
sti
pop
sti
pop
or
jae
sti
adc
mov
adc
movzx
add
sbb
add
pusha
loopne
jmp
adc
jmp
addr16
(bad)
mov
pop
jecxz
movs
ins
xor
test
push
add
push
jo
sbb
xor
push
push
push
jmp
or
push
mov
xchg
jmp
or
sbb
aam
jne
vucomiss
mov
iret
cmp
and
pusha
mov
xchg
jge
mov
sbb
add
in
les
popf
add
je
dec
shl
cmp
cmp
add
sub
adc
jp
outs
js
mov
jne
mov
pop
pop
test
xchg
push
ficomp
inc
inc
pop
xor
mov
jo
jbe
out
fnsave
adc
adc
loopne
and
test
adc
sub
fcomp
mov
inc
cmp
popa
rcr
lock
sbb
push
cmp
in
lea
pop
xor
jmp
xlat
and
in
mov
and
bound
out
mov
data16
jo
sub
retf
jbe
outs
push
push
dec
loope
rol
fisub
jbe
mov
adc
pop
fwait
iret
outs
cs
inc
bound
add
out
mov
pop
sub
push
(bad)
jno
and
push
fidiv
adc
test
outs
mov
fadd
add
bound
sub
mov
shl
or
ret
jno
mov
les
add
(bad)
icebp
add
mov
(bad)
or
sub
jl
jle
adc
mov
sub
pop
les
les
adc
fucomip
cmp
or
adc
enter
fsub
mov
push
sub
mov
adc
pop
rcr
mov
pop
mov
and
ja
or
add
ins
cld
and
fwait
adc
das
sbb
test
(bad)
dec
mov
aad
movs
mov
repnz
hlt
test
and
adc
push
sahf
add
in
mov
dec
in
xor
jbe
mov
cdq
in
add
shr
mov
mov
xor
pop
lea
pop
movs
test
les
(bad)
loopne
sbb
push
xchg
jl
or
xor
mov
lods
mov
mov
add
adc
ins
(bad)
adc
ds
je
inc
xchg
js
add
sbb
xor
lods
pop
cmp
iret
adc
mov
mov
cmp
pop
xor
lea
mov
sub
pop
pop
fs
aas
ds
ss
rol
popa
pop
or
(bad)
shl
and
xor
movs
ins
sub
stc
gs
scas
cmps
and
mov
lods
cld
jae
rcr
fisttp
inc
mul
outs
add
repz
imul
jmp
jle
fild
mov
stos
pop
fdivrp
fmul
jmp
into
or
movs
rcr
inc
or
sub
sub
pop
xor
out
lds
mov
pop
fsub
sbb
pop
lock
hlt
add
sub
push
push
mov
(bad)
fbld
inc
and
inc
fsub
ins
(bad)
in
call
push
push
push
adc
sar
lea
sbb
mov
fmul
add
cmp
imul
or
mov
xchg
mov
add
sbb
pusha
mov
xadd
jmp
mov
fs
jae
add
mov
ucomiss
pushf
and
out
lock
mov
add
fwait
fwait
add
or
rcr
sbb
and
push
les
and
(bad)
shr
mov
add
or
fcom
or
jle
leave
xchg
xchg
outs
mov
ret
and
inc
mov
sysenter
jo
aaa
adc
cmp
repz
in
lods
inc
rol
inc
mov
repz
mov
xor
adc
cmp
adc
mov
mov
jp
out
pop
sbb
je
imul
sub
pop
sbb
nop
cmp
or
sub
jmp
pop
repnz
retf
psraw
or
cmp
push
(bad)
(bad)
or
ret
cmps
push
or
pushf
xor
lods
lea
sbb
ret
enter
int3
push
sbb
push
pop
pop
(bad)
sub
mov
mov
pop
sbb
sbb
bound
fcmovu
(bad)
mov
xchg
add
pop
xchg
sub
inc
cmp
dec
loopne
loopne
dec
sub
dec
ret
iret
sete
cld
pop
pop
pusha
int
shr
jnp
mov
data16
fsubr
test
jp
icebp
aam
add
jb
mov
hlt
call
and
test
lods
and
add
int3
mov
push
pinsrw
les
sub
sbb
lds
pop
push
sbb
test
js
cmp
sbb
jge
add
jp
jle
loope
fadd
das
ret
les
mov
pop
push
bound
ds
(bad)
jg
sub
and
or
popa
shl
jno
add
or
xchg
and
mov
mov
adc
call
popa
add
test
pushf
push
fnstcw
xor
movs
pop
pop
nop
cwde
push
xchg
out
xor
outs
xchg
pop
lds
push
jmp
inc
push
mov
retf
test
adc
mov
movs
lock
add
in
ins
fidivr
push
sub
and
mov
ins
pop
inc
test
enter
pop
shr
adc
fadd
pop
mov
(bad)
rcl
pushf
in
mov
popf
cs
add
and
lods
cwde
in
cmp
or
xor
add
jmp
dec
in
andnps
dec
xchg
inc
out
shl
icebp
or
fadd
mov
loopne
jle
mov
push
push
cmp
imul
pop
(bad)
jp
xor
test
dec
bound
sbb
pop
cmp
pop
mov
mov
test
push
cmp
ret
adc
and
shl
jbe
jne
jae
imul
jno
jno
imul
pop
add
sub
mov
add
xchg
add
and
sub
cmp
loopne
xor
add
movzx
dec
push
jl
push
add
push
jmp
rol
ror
mov
ins
ja
mov
sbb
int3
inc
lea
(bad)
inc
mov
imul
mov
scas
xor
arpl
sbb
imul
cmp
jne
lock
imul
push
mov
ret
sub
data16
lods
fstp
push
jl
(bad)
push
sbb
mov
cli
sar
imul
(bad)
cli
push
and
retf
shl
mov
mov
add
mov
into
rcl
js
lds
push
mov
test
push
cdq
sub
sbb
xor
aas
add
add
or
outs
scas
lea
push
xor
mov
fnsave
test
sub
pop
fld1
sub
mov
add
dec
js
dec
xor
test
aas
push
cmp
adc
cmp
lock
xchg
clc
jne
push
xchg
xor
ja
adc
or
ficom
outs
cmp
push
sbb
xor
das
mov
call
ss
inc
dec
dec
aas
inc
xor
call
imul
sub
sti
pop
pusha
and
sub
fldenv
ficomp
clc
fwait
int
jo
sbb
adc
pop
jo
fwait
adc
or
xor
imul
out
imul
imul
int3
pop
loopne
je
fwait
je
and
out
dec
call
fimul
xor
adc
cmp
mov
test
and
and
or
xchg
fs
mov
xchg
popf
in
(bad)
sbb
push
cmc
ret
pop
pop
jmp
je
aaa
inc
mov
test
push
push
xor
std
clc
pop
std
dec
imul
sub
sbb
mov
add
pop
sub
pop
xchg
nop
jbe
movs
dec
pop
mov
adc
(bad)
in
and
ja
das
pop
int
sbb
add
movs
int
out
or
test
mov
int
or
or
(bad)
lods
mov
and
xchg
xor
jg
adc
pop
es
in
xchg
pop
pop
rcl
mov
mov
push
out
call
ror
pop
test
sbb
mov
(bad)
pop
(bad)
nop
mov
push
outs
stos
inc
movs
(bad)
mov
xchg
in
pop
jae
and
sbb
imul
imul
scas
sbb
(bad)
and
and
adc
fcom
sbb
and
sub
or
popa
aad
xchg
lods
(bad)
out
adc
je
add
mov
jle
jne
inc
nop
nop
pop
adc
test
pop
cdq
mov
jmp
dec
not
loopne
popf
push
sub
or
pop
pop
xlat
mov
add
adc
xlat
je
test
push
push
call
jo
inc
xor
sub
jp
test
push
sbb
push
(bad)
xor
ss
outs
add
and
ret
adc
js
cmps
add
movs
inc
push
in
div
cmps
add
add
push
repnz
cdq
or
mov
adc
xor
jb
mov
js
dec
call
setne
push
sbb
adc
ret
xor
retf
sbb
mov
cmp
add
sbb
or
cs
fst
mov
fst
and
sub
xchg
xor
cmp
call
add
fist
dec
shl
mov
scas
cmp
cmp
add
leave
mov
cwde
sbb
out
sub
fbld
adc
js
adc
test
sub
sbb
test
and
or
adc
push
sbb
shl
pop
or
adc
adc
jbe
inc
and
or
fst
xor
adc
adc
sbb
ret
or
cmps
test
adc
mov
add
mov
dec
test
jl
test
push
xor
cmp
jne
jo
dec
add
mov
adc
(bad)
sti
jmp
lock
push
pusha
test
add
inc
pop
mov
dec
sbb
ds
sti
inc
dec
jne
(bad)
stos
popf
sbb
movs
xchg
mov
or
jno
test
push
rol
xchg
out
xchg
xchg
push
and
add
cld
fsub
cmp
adc
sub
call
and
fsub
sub
or
in
adc
mov
adc
dec
jne
loope
dec
gs
test
push
mov
lahf
and
ret
jmp
cwde
mov
mov
inc
mov
xor
inc
push
loope
mov
sbb
add
cs
rcl
(bad)
xor
ror
jb
daa
out
jecxz
sbb
aaa
je
aas
jge
es
cmp
cmc
mov
jp
and
dec
jp
retf
int3
add
add
aaa
es
cmp
and
inc
rcr
jb
lea
or
and
jmp
mov
push
inc
add
cli
adc
dec
pop
and
idiv
push
pop
pop
mov
or
cmp
adc
les
jnp
ja
arpl
pop
cmp
mov
outs
or
es
loope
cmp
arpl
cmp
and
xor
pop
xchg
dec
add
aas
push
pop
outs
ds
sub
ds
fstp
xlat
bnd
out
push
mov
pop
jbe
imul
push
add
mov
push
or
push
ror
push
and
mov
sub
cmps
cmp
ss
and
add
inc
int
imul
pop
push
and
or
cmps
mov
inc
jmp
jg
cdq
sbb
push
cli
cmps
add
int3
add
xor
jae
retf
cmp
int3
gs
(bad)
xor
or
mov
pusha
sub
or
push
inc
pop
mov
xchg
pop
ror
retf
mov
jle
jae
jo
(bad)
imul
outs
push
or
add
pop
dec
push
fisttp
enter
(bad)
add
or
je
push
call
pusha
repnz
mov
sbb
add
push
jmp
mov
mov
mov
jmp
add
mov
add
loopne
sub
xor
test
and
test
cmp
adc
add
out
add
xor
push
(bad)
lock
jae
jbe
addr16
mov
dec
cmp
jl
mov
test
call
dec
jne
cmp
(bad)
div
repnz
cmp
mov
add
inc
push
sbb
and
add
outs
les
mov
jmp
out
std
lds
push
mov
test
je
mov
mov
mov
lea
arpl
dec
xchg
retf
imul
retf
sar
mov
shl
pusha
xor
enter
mov
shl
(bad)
aam
adc
adc
cmps
es
movs
add
and
mov
cmps
shr
dec
(bad)
lea
mov
or
rcr
nop
daa
nop
pop
and
popa
jne
popa
cmp
leave
(bad)
arpl
jmp
mov
popa
rol
mov
mov
xchg
jno
test
loopne
push
add
inc
lods
mov
jmp
adc
dec
shl
and
adc
fsubr
jmp
push
cmp
pop
stos
add
leave
sub
add
mov
popa
push
adc
ds
mov
xchg
fs
ror
add
jb
cmp
xor
jb
pop
outs
rcl
outs
push
rol
cwde
adc
jmp
aam
loop
fisubr
mov
leave
add
into
outs
nop
nop
adc
fadd
pop
dec
rol
outs
sti
(bad)
dec
push
mov
mov
fimul
outs
ficom
xor
mov
dec
test
push
movzx
xchg
or
push
pop
imul
arpl
xchg
sub
and
jnp
aad
mov
xchg
inc
dec
stc
aad
pop
icebp
aam
dec
enter
(bad)
inc
jg
inc
adc
aad
push
test
outs
pop
push
fdivr
stos
dec
sti
outs
arpl
test
or
fdivr
lea
(bad)
and
sub
lock
pop
xchg
mov
jo
adc
push
loope
(bad)
fs
aas
out
xor
fcomip
pop
xlat
add
das
lahf
and
or
mov
jbe
out
imul
mov
dec
movs
das
outs
(bad)
and
je
pusha
inc
iret
xor
mov
add
aaa
(bad)
bound
mov
push
push
pop
ret
sbb
add
sub
xor
inc
rcr
pop
jle
es
daa
sub
add
jno
arpl
and
xor
cs
daa
add
xor
daa
arpl
or
out
scas
inc
xchg
jg
or
add
adc
cmp
mov
out
cld
adc
mov
jmp
mov
jno
push
mov
adc
push
sbb
pop
pop
in
js
jbe
dec
pusha
mov
inc
mov
mov
out
cmp
lock
test
lock
push
(bad)
es
es
mov
push
dec
imul
and
push
in
cli
add
lock
mov
add
xor
ret
hlt
push
movs
fild
cld
call
mov
es
sahf
mov
adc
mov
ins
xchg
fsubr
add
cwde
inc
mov
pop
xor
test
xor
add
mov
inc
out
pop
pop
push
dec
cmc
push
push
fmul
inc
fimul
rcl
add
cs
push
fdiv
(bad)
jbe
sbb
cs
dec
inc
mov
push
int3
cmps
stc
fidivr
jnp
mov
fs
movs
cmp
jbe
sub
add
or
xchg
in
push
push
xor
add
lock
in
frstor
fimul
adc
fnstcw
sar
shr
dec
lock
nop
fbstp
add
push
xor
push
add
xchg
neg
fdivr
pushf
mov
out
fneni(8087
dec
dec
or
(bad)
push
and
mov
dec
ds
add
nop
inc
mov
das
fdivr
jbe
jl
fdivr
mov
xchg
push
out
push
shl
or
call
sub
jl
dec
xor
xchg
push
lock
mov
mov
das
enter
out
clc
call
add
in
jecxz
or
jmp
leave
aaa
adc
jmp
mov
sub
test
fmul
push
imul
sbb
in
push
pshufw
jmp
push
cdq
int
ds
cmp
push
(bad)
push
imul
add
push
cld
mov
mov
add
rcr
add
outs
cwde
sbb
je
xor
pop
add
adc
mov
pop
pop
dec
push
push
aam
stc
xchg
nop
pusha
add
inc
daa
sbb
dec
dec
popa
outs
pop
push
xchg
jl
mov
push
add
xchg
je
int
mov
or
or
out
mov
sti
mov
push
cmp
cmc
outs
add
in
aaa
push
outs
xor
add
ds
push
dec
stos
ds
push
mov
icebp
or
sbb
dec
add
lmsw
into
(bad)
mov
add
fsub
pop
add
cs
out
and
call
retf
cld
iret
xor
fwait
mov
shr
pushw
shl
push
sub
add
xchg
ins
das
push
mov
cmps
fs
lock
sub
mov
and
add
and
arpl
fsub
mov
cld
out
arpl
ins
add
fs
xor
je
add
aaa
leave
aaa
cmp
fdiv
inc
push
cwde
sbb
fist
xor
add
sbb
cwde
push
rol
jo
push
fs
jno
inc
jle
das
clc
push
xchg
cli
je
push
cs
gs
or
and
pop
push
mov
add
pop
ins
xchg
pop
addr16
adc
pop
popw
xchg
int
mov
loopne
and
pmulhuw
sar
hlt
push
fsubr
inc
inc
call
pop
dec
jmp
and
pusha
sbb
cmp
aas
or
mov
sbb
inc
data16
xor
iret
repz
in
adc
push
fstp
sahf
jo
lahf
pushf
push
mov
ror
out
push
rol
in
clc
push
adc
push
sub
iret
repz
mov
ins
and
add
scas
adc
sub
inc
push
lahf
neg
pop
pop
push
movs
adc
shl
push
shl
outs
out
push
test
push
aam
in
in
mov
jo
pop
cwde
and
add
inc
cld
pop
xor
jns
adc
ds
dec
and
pop
push
mov
les
pop
fdivr
xchg
enter
sysret
xor
pop
in
(bad)
push
xchg
mov
mov
test
pop
lods
push
add
pop
sub
pusha
fld
inc
daa
fdiv
and
push
nop
sub
pop
mov
dec
jnp
ins
fild
inc
sub
xor
push
push
ficom
iret
ins
mov
je
lods
cmp
jns
and
pusha
cwde
(bad)
in
or
jle
xchg
dec
dec
push
or
inc
jbe
pop
ins
test
mov
fiadd
das
std
scas
fiadd
cld
cmovb
xor
fstp
test
sub
xchg
mov
push
adc
pop
mov
ins
cmp
(bad)
and
pop
pop
in
push
dec
cld
pop
(bad)
outs
mov
add
push
cmp
and
test
das
adc
shl
mov
into
sar
jl
aas
clc
test
ds
push
sar
ins
rcr
(bad)
out
out
push
fmul
push
inc
pop
mov
mov
int
test
mov
(bad)
jmp
push
or
adc
call
in
push
and
ss
xor
push
clc
dec
push
in
jbe
fldcw
test
xor
mov
pop
pushf
popf
push
loopne
dec
pop
fdivr
push
jl
ins
out
mov
ins
dec
pop
mov
push
call
pop
aaa
xchg
addr16
les
movs
lds
ins
(bad)
retf
data16
xor
xor
pop
push
int
mov
inc
arpl
inc
test
mov
fldcw
xchg
in
aam
or
sub
fcmovnu
jbe
nop
fild
in
enter
stc
push
sbb
cmp
mov
das
or
pop
fcomp
loopne
dec
pop
stc
mov
cwde
push
mov
pop
sar
pop
jl
push
and
rcl
or
pop
iret
repz
mov
cwde
in
int
imul
sbb
out
clc
cmp
sbb
(bad)
pop
ins
pop
pop
mov
movs
das
xlat
adc
push
pop
cmp
mov
pusha
push
xchg
pop
lods
cmp
scas
popf
mov
pop
push
push
enter
scas
in
pop
mov
push
int3
push
hlt
pop
cmp
dec
sub
in
fwait
je
inc
inc
push
dec
inc
xchg
pop
add
bound
out
das
popa
add
pusha
daa
pop
cld
mov
adc
push
add
mov
pop
cmps
stc
ds
ds
push
adc
lock
jne
aas
test
out
pop
fmul
or
push
or
pop
and
pop
xor
mov
push
fs
jl
cwde
push
mov
and
mov
mov
je
pop
enter
adc
pop
test
jg
sbb
mov
push
sub
aad
sub
add
iret
js
sub
adc
pushf
mov
pop
mov
das
xchg
mov
mov
pop
adc
sbb
aam
aaa
call
pop
xor
push
xor
call
sub
mov
mov
ret
out
xor
call
lods
shl
mov
push
sub
es
test
push
aam
pop
cmp
push
xchg
(bad)
jbe
push
mov
cmps
fnstcw
or
mov
fstp
hlt
mov
push
cwde
fisubr
fistp
loope
fsubr
ds
push
jecxz
mov
cmp
imul
shl
mov
cs
loopne
call
mov
jmp
cmps
sbb
push
fdivr
xchg
out
push
mov
cmp
sbb
pop
and
into
fistp
push
fs
test
daa
mov
or
cmp
jg
(bad)
int
fild
ds
and
in
lods
and
sahf
daa
sub
sub
shr
pushf
or
shr
xor
mov
fadd
push
hlt
(bad)
push
xchg
pop
mov
pop
pop
mov
inc
inc
pop
aas
pop
pop
imul
movs
ret
jl
dec
inc
inc
ret
je
jns
scas
in
inc
rol
push
call
push
das
and
push
and
push
sar
fwait
ins
ds
leave
enter
retf
inc
enter
call
les
and
ja
in
scas
push
aam
pop
or
out
test
int
mov
fld
loopne
inc
fld
and
int3
in
out
jmp
lahf
pushf
push
jmp
inc
in
ds
pop
mov
out
es
outs
neg
xchg
push
sub
push
xchg
clc
cdq
std
add
push
cmps
mov
call
adc
lock
fldenv
fldcw
les
data16
fiadd
dec
test
dec
out
ss
fmul
dec
sbb
je
in
jge
mov
push
ja
push
add
call
loopne
xor
ror
fnstcw
sub
nop
push
xchg
fwait
ins
in
outs
sar
jle
mov
cmp
ds
mov
ficomp
or
push
movs
mov
mov
lea
mov
push
ror
inc
fwait
jge
jns
pop
hlt
push
adc
xchg
fcomp
mov
pop
inc
cmps
jbe
div
nop
push
call
pop
xor
jle
push
sbb
inc
push
hlt
jl
xchg
push
adc
pop
lahf
out
or
into
mov
fisub
pop
movs
push
mov
enter
test
push
mov
mov
into
adc
push
fsub
or
pop
lahf
test
inc
push
pusha
dec
inc
cmps
in
ins
or
dec
xchg
dec
ja
add
loopne
mov
xor
cmp
inc
sub
mov
aam
loope
loope
(bad)
xchg
xlat
push
fdiv
outs
fimul
out
out
jl
sahf
jmp
fldcw
pushf
xchg
sbb
push
push
sti
push
std
push
add
add
fiadd
and
cmp
push
rol
clts
adc
or
out
mov
and
cld
lods
push
fwait
in
pusha
jnp
sbb
mov
xchg
sbb
adc
and
and
call
(bad)
add
mov
push
sbb
jl
jbe
int
xor
outs
inc
into
adc
inc
push
push
hlt
cmp
in
shr
adc
dec
adc
in
movs
mov
mov
cmps
push
adc
fcmovnu
or
push
mov
adc
mov
mov
push
push
sub
add
mov
sar
(bad)
outs
enter
adc
fwait
in
ss
push
fmul
int3
iret
dec
(bad)
add
pop
pop
fnstcw
lahf
push
mov
jno
add
sbb
jbe
inc
push
imul
movs
push
les
stos
fsubr
scas
or
lds
push
adc
mov
mov
lods
ret
outs
mov
mov
lds
pushf
(bad)
mov
enter
in
jge
jnp
sar
aad
xlat
push
cwde
or
(bad)
add
mov
rol
outs
loopne
loop
jmp
xchg
mov
jge
dec
int3
fs
repz
cld
mul
jbe
push
(bad)
(bad)
lock
add
or
and
lahf
sbb
xor
cmp
out
push
loopne
pop
or
adc
mov
jns
ror
sbb
sbb
lock
rcr
fidiv
push
mov
cmp
mov
push
jl
or
push
pop
or
mov
out
lods
sbb
push
fdiv
xchg
push
or
lods
push
call
mov
in
mov
(bad)
pop
push
pop
push
fs
add
push
add
cld
addr16
imul
push
lods
ins
push
outs
fwait
int
mov
xchg
jno
jae
jne
ja
jns
xor
inc
sub
push
test
test
pop
add
push
xchg
test
pop
fwait
into
push
mov
mov
sahf
outs
lahf
push
xor
push
imul
sahf
cmp
push
in
ss
mov
in
pop
ins
dec
pop
push
lods
pop
sub
fisttp
inc
push
pop
bound
ins
fs
enter
aaa
mov
pusha
dec
outs
pushw
pop
push
outs
mov
and
jb
je
jbe
fs
push
push
push
loopne
xor
mov
jg
clc
adc
scas
test
dec
xchg
xchg
mov
xchg
pop
pop
cwde
push
xor
lock
xchg
cdq
mov
adc
push
sub
cmps
sbb
mov
lods
(bad)
push
es
rol
rol
inc
fsubr
fsubr
mov
inc
push
ss
push
popa
mov
fidiv
inc
push
mov
inc
sbb
and
sbb
push
jbe
push
push
pop
popa
mov
push
mov
call
adc
outs
fs
mov
dec
dec
imul
jl
push
or
sahf
jno
adc
sahf
je
test
ins
push
cld
jbe
js
add
cs
out
rol
movs
nop
test
mov
push
jo
ret
xor
fmul
js
pop
xchg
ins
out
pop
ins
push
fs
pop
cwde
push
call
mov
pop
inc
mov
push
test
jge
stos
cs
lock
sub
push
ficomp
fdiv
out
mov
mov
push
mov
push
lds
add
enter
retf
xchg
push
iret
rol
int3
ror
loopne
sbb
into
fsubp
cmp
push
out
push
loop
jecxz
push
inc
in
out
lods
inc
cmp
mov
push
clc
sub
sbb
sti
scas
or
xchg
ins
mov
push
call
sahf
(bad)
jl
ins
xor
push
fmul
xor
cwde
dec
cdq
push
fnstenv
int
call
popf
je
xchg
(bad)
movs
cmp
or
data16
push
in
movs
mul
(bad)
test
fwait
dec
repz
inc
cli
in
sti
jmp
pusha
ficomp
add
call
pushfw
ds
es
jecxz
jecxz
and
sbb
fadd
adc
loopne
loopne
xor
popf
ins
das
(bad)
cs
mov
lahf
fs
xlat
gs
scas
push
mov
dec
daa
pop
enter
neg
test
dec
cs
ds
jl
ds
inc
outs
mov
stos
xor
mov
xor
sahf
mov
das
mov
xchg
pop
out
or
pop
call
scas
int3
out
das
mov
push
push
imul
or
fidivr
daa
cs
push
push
push
push
fs
fnstsw
cmps
rcr
sbb
push
xor
dec
push
sub
pop
out
(bad)
not
sbb
xor
call
js
out
push
inc
push
es
ret
dec
repz
aaa
pushf
jl
jnp
push
mov
movs
push
ror
into
shr
inc
push
in
inc
cmp
ins
int3
mov
push
cmp
daa
push
jbe
nop
jp
test
hlt
daa
fdivr
mov
sbb
push
ja
jl
jge
call
jle
push
fiadd
enter
jbe
push
mov
mov
test
sbb
shl
fs
arpl
push
push
push
mov
ins
cmps
idiv
jo
push
mov
jno
jb
mov
sub
push
dec
hlt
push
xchg
ja
dec
jns
or
add
in
xchg
xchg
sbb
jne
jnp
xchg
xchg
jle
mov
push
nop
xchg
jbe
test
mov
push
fwait
ds
jbe
push
xor
push
mov
test
push
inc
pop
mov
pop
jmp
mov
and
push
push
adc
test
pop
adc
mov
nop
jg
test
cmps
in
aas
int
addr16
enter
cmp
sbb
dec
cmps
clc
xor
dec
fnsave
sub
xor
int
cs
das
adc
enter
fdivr
xor
push
mov
jl
fisttp
in
vmptrst
dec
idiv
bound
data16
mov
pop
pop
push
call
data16
inc
adc
je
add
push
fs
and
out
pop
int3
inc
inc
ja
add
je
mov
fisttp
sub
add
push
das
(bad)
bound
or
inc
sysret
repz
mov
fldenv
pop
xor
pushf
cmovl
dec
mov
fsubr
mov
cmp
mov
idiv
add
lahf
adc
push
enter
jnp
int
jle
test
mov
mov
ror
outs
test
ficomp
lods
push
lods
mov
int3
rcr
shl
push
mov
push
dec
jmp
repz
sti
js
outs
stos
push
popf
sub
or
push
test
mov
data16
ds
inc
push
test
jl
jbe
pushf
jmp
push
pop
cmps
fdivp
push
push
pusha
pop
cs
jbe
push
and
and
inc
adc
sysenter
jno
jae
cmc
mov
jne
jbe
js
jp
ins
popf
fiadd
hlt
jg
test
ins
xchg
xchg
mov
cwde
daa
sbb
push
call
push
dec
pop
not
sbb
jl
call
jbe
aas
psubb
ds
out
push
fs
sub
mov
enter
aas
pop
and
mov
addr16
stos
stc
add
pop
adc
ins
cs
or
mov
into
push
jae
outs
mov
push
andps
popa
das
xor
es
cmc
push
jl
aaa
push
jae
sub
push
ja
lods
pop
mov
sub
push
(bad)
jb
or
sub
retf
ins
outs
inc
js
jp
xor
push
call
ss
push
mov
mov
rol
pop
pop
aam
out
pop
rcl
add
loope
push
ss
fistp
push
pop
je
push
mov
adc
or
mov
pop
push
pop
mov
push
dec
sbb
test
push
cmp
sbb
mov
inc
into
jbe
push
mov
add
clc
mov
mov
push
mov
jo
aaa
pusha
fwait
and
push
push
xchg
xchg
and
add
and
mov
bound
adc
addr16
test
paddsb
jbe
test
push
lock
dec
pop
stos
push
add
xchg
fidivr
addr16
add
push
sar
test
push
gs
add
or
test
jg
ror
aam
ins
cmp
adc
add
pop
and
push
add
push
in
fst
add
test
(bad)
xlat
push
xor
pusha
in
(bad)
cld
push
cwde
in
lock
std
mov
push
js
ss
in
jbe
fisttp
mov
out
push
and
ja
mov
xchg
pop
add
dec
push
pop
jl
out
ins
test
push
enter
popa
cmps
fnstenv
clc
addr16
std
jmp
xor
fiadd
daa
mov
bound
push
fsub
cwde
add
push
add
fwait
int
mov
push
mov
test
ins
push
xor
data16
xor
mov
or
or
jl
int
or
loopne
or
cmp
pop
inc
setle
ds
popa
movs
ds
pusha
aas
push
xor
nop
pop
out
fstp
daa
dec
xchg
aas
pop
xor
ins
add
aas
ins
add
addr16
mov
test
int3
data16
and
(bad)
retf
xor
adc
in
aas
push
sahf
ja
push
push
xchg
sbb
int
sbb
scas
push
nop
scas
enter
xchg
test
pop
rcl
test
pop
pop
sahf
push
in
lahf
pop
push
mov
div
daa
jne
or
mov
push
aas
push
or
lahf
repz
xor
in
movs
inc
mov
ins
ss
inc
sbb
xchg
seto
shr
pop
inc
push
sbb
nop
dec
xchg
in
shr
dec
loopne
dec
dec
addr16
xchg
not
and
pop
pop
jl
mov
call
push
xchg
int
mov
cmps
push
adc
clc
pop
rcr
arpl
pop
lods
push
push
pushf
push
mov
pop
fsubr
call
pusha
pusha
mov
cmps
jne
push
add
les
shr
sub
pusha
sahf
push
mov
repz
cmp
les
test
mov
movs
dec
jno
jnp
movs
push
cld
cmps
dec
stos
push
cmp
pop
add
pop
inc
push
test
les
data16
ss
das
sbb
push
pushf
retf
push
mov
in
div
lahf
fcom
pop
aam
(bad)
jl
mov
mov
inc
sub
mov
hlt
mov
jbe
cs
push
rcl
test
sti
call
fiadd
or
cwde
fmul
sub
pop
pop
ror
sub
push
fs
push
repz
out
ins
xchg
aaa
je
addr16
js
scas
adc
sub
pop
mov
mov
mov
jo
push
das
pop
mov
pop
push
add
bound
sub
push
push
mov
adc
sbb
mov
push
xlat
pop
xchg
lock
mov
mov
pop
adc
les
pop
mov
adc
aaa
push
fadd
push
daa
clc
push
js
sub
push
and
out
pop
push
push
pushf
add
data16
jl
pop
mov
arpl
fwait
int
shl
aaa
inc
jo
mov
jno
fadd
scas
push
clc
jae
ja
cmps
fldcw
jns
jnp
sbb
cmp
jge
or
xor
push
stc
fisubr
pop
or
cwde
push
fadd
sbb
jne
push
pushf
aaa
or
push
push
pushf
outs
cwde
and
outs
pusha
inc
ins
mov
das
pop
fs
push
xor
dec
jl
fwait
int
fldcw
pushf
or
in
dec
push
fldcw
mov
inc
push
fs
fsub
fisub
loopne
inc
arpl
push
ins
ret
mov
outs
ds
cwde
jae
je
int
jmp
js
mov
jnp
jge
int
ss
or
test
jl
out
push
push
or
in
inc
nop
(bad)
stc
out
ins
out
or
cdq
mov
fdivr
cmps
outs
push
in
test
test
test
push
movs
stos
scas
les
adc
mov
lods
push
push
sub
scas
push
sbb
push
enter
shl
push
inc
fcom
fnsave
clc
out
push
sub
push
pushf
popf
ins
mov
cli
das
hlt
std
unpcklps
cmps
adc
add
add
pop
push
or
fld
push
push
pop
pop
nop
or
clc
adc
mov
mov
ss
addr16
push
push
movs
pop
and
and
sahf
popf
ins
js
jg
sub
mov
pop
scas
push
and
pop
outs
loopne
pop
ss
ss
inc
adc
mov
ins
pushf
outs
ficomp
call
jo
movs
fidivr
jns
sbb
push
push
adc
push
push
shr
sar
push
shl
int
push
mov
je
add
test
scas
or
pop
pop
movs
push
fsub
fwait
iret
sbb
push
loopne
scas
jl
aas
mov
ds
sti
push
or
push
inc
test
mov
out
inc
mov
pusha
iret
mov
dec
fist
(bad)
pop
adc
es
cmp
lds
ins
sbb
xor
imul
and
cmp
xchg
(bad)
ins
mov
pusha
pop
call
dec
add
inc
cmp
iret
je
mov
mov
lock
push
test
mov
pop
sub
adc
mov
or
adc
ja
or
mov
mov
dec
mov
jl
push
mov
add
xor
xor
push
in
out
in
in
rol
int3
repnz
adc
push
dec
fstp
fstp
test
daa
or
scas
inc
sub
mov
repz
add
and
dec
ins
jnp
outs
movs
and
in
jbe
data16
call
push
cmp
sbb
push
test
imul
cmp
(bad)
and
outs
mov
(bad)
sub
pop
aas
sahf
out
ficomp
push
jo
cwde
add
cmc
jns
or
out
rcl
sub
inc
mov
cmp
push
mov
mov
int
iret
aas
(bad)
rcl
add
jge
cmps
ins
push
mov
pop
aam
ss
scas
push
pop
push
(bad)
aad
(bad)
js
pusha
(bad)
out
fld
fisttp
paddb
ja
push
jl
push
push
das
lock
dec
loopne
push
mov
sbb
cld
push
jnp
(bad)
fs
mov
mov
mov
outs
push
(bad)
neg
test
repz
sbb
xchg
sub
int3
fnstcw
mov
(bad)
cld
push
in
std
mov
dec
sub
je
test
out
push
movs
inc
fucomip
adc
pop
nop
push
and
xor
out
push
xor
lock
pusha
jns
iret
rep
les
sub
int
cld
sub
inc
add
inc
jbe
data16
dec
push
call
cmp
pop
xchg
idiv
scas
pop
das
pop
dec
pop
sub
in
push
sbb
imul
les
stos
add
mov
mov
and
aas
push
inc
and
inc
sub
das
in
or
add
mov
fistp
enter
mov
xor
xchg
jge
in
loopne
push
dec
xchg
mov
fld
mov
pop
(bad)
xor
mov
push
fdiv
rcr
push
push
loopne
push
xor
push
lods
pop
fwait
int
shl
fdiv
push
sub
enter
loope
in
popf
jge
jmp
out
cmp
bound
jmp
add
inc
jg
and
push
or
pop
jno
fimul
push
pushf
inc
lock
push
mov
call
xor
mov
add
inc
add
push
add
rcl
or
pop
ins
int
je
push
and
xor
mov
adc
push
or
pop
mov
add
sub
push
sub
loopne
ja
mov
fadd
(bad)
daa
pop
ins
mov
push
mov
int3
mov
cmp
push
ret
pop
pop
xor
push
fldcw
sub
push
cmp
add
lock
cld
add
cs
jo
loope
jecxz
xor
jnp
in
out
adc
jl
fwait
in
mov
jle
inc
icebp
push
loopne
pop
hlt
sar
in
push
mul
push
pop
clc
mov
fdivr
stc
push
push
loopne
imul
and
fwait
vmread
daa
loopne
jbe
mov
push
fcom
push
shl
dec
adc
sub
push
scas
sub
ficomp
enter
and
gs
push
fldcw
icebp
mov
je
cmp
add
push
retf
push
xchg
outs
pop
jecxz
pop
test
jge
in
aaa
pop
jle
les
fs
popa
mov
pcmpeqb
dec
mul
cmp
cmp
lods
fnstcw
aas
je
mov
aam
scas
in
mov
dec
push
push
cs
push
and
ds
mov
and
inc
sub
add
addr16
sbb
pushf
adc
pop
push
pop
addr16
lahf
es
or
das
(bad)
push
fldcw
js
mov
stc
push
pop
sti
cwde
cld
add
inc
inc
add
and
cmps
add
fs
push
or
or
(bad)
pop
dec
loop
pop
fbstp
push
nop
pop
fdivr
lock
or
jnp
fsubr
and
pop
rcr
push
bound
push
aaa
pop
xor
mov
cld
cmp
popf
jge
inc
out
add
(bad)
loopne
jns
dec
(bad)
adc
jmp
repz
pop
inc
mov
pop
cmp
pushf
adc
sahf
push
mov
call
psadbw
rol
es
das
cwde
push
mov
fiadd
aaa
clc
(bad)
xlat
mov
sub
mov
push
fcomp
mov
pop
xchg
sysret
movs
push
call
mov
add
outs
sbb
mov
mov
adc
xchg
pop
jge
aaa
add
mov
push
jmp
popf
sbb
pop
dec
in
pop
cld
push
mov
sbb
pop
sysret
enter
xchg
(bad)
pop
pop
pop
sbb
sysenter
xchg
xchg
xchg
xchg
push
js
mov
enter
lock
pop
bound
mov
sub
dec
punpckhbw
fadd
movs
cs
aaa
pop
(bad)
fiadd
addr16
popf
(bad)
nop
push
inc
pop
cmp
push
jbe
pop
aas
or
push
or
xor
test
enter
pop
popf
out
inc
sbb
xor
mov
(bad)
add
push
cwde
push
lods
(bad)
fsub
fstp
popa
pop
push
ds
les
sub
sub
daa
pop
fidivr
es
das
rcl
dec
or
sbb
push
jo
mov
pop
test
adc
sub
and
ds
pop
mov
out
mov
push
in
sub
pop
pop
pop
mov
repz
enter
pop
div
mov
push
lods
clc
out
das
push
clc
outs
scas
mov
push
mov
int3
push
sub
lock
ins
sub
inc
daa
enter
push
push
fisubr
pop
push
push
pop
push
in
mov
push
xor
push
cld
inc
fsubr
xor
push
pop
cmps
neg
xor
ss
push
push
mov
daa
pop
xchg
aaa
adc
in
sbb
or
or
jnp
mov
add
mov
out
aas
pop
dec
mov
add
out
push
push
cmp
jo
cmps
aam
psubsb
(bad)
in
or
pop
pop
push
mov
dec
push
jge
xlat
jbe
sub
push
je
(bad)
cld
sbb
fistp
push
push
shr
push
mov
in
pop
lahf
cmps
stc
or
pop
mov
dec
push
push
dec
jl
ja
push
xor
repz
push
push
cld
adc
scas
push
fucomi
repz
pusha
data16
push
les
out
cwde
movzx
ficom
imul
ret
mov
lods
outs
sysret
call
mov
(bad)
mov
retf
mov
das
movq
sub
pop
xor
out
push
sub
push
loopne
sub
aas
adc
push
push
call
stc
xor
fs
dec
sub
mov
xor
sbb
inc
inc
cs
push
dec
inc
fwait
lods
inc
fisttp
mov
add
pusha
push
(bad)
scas
inc
es
dec
push
pushf
push
inc
push
push
sub
jmp
sti
xor
mov
(bad)
pop
outs
pop
jle
push
ins
mov
pop
(bad)
pop
loopne
(bad)
jle
push
sub
or
push
and
ss
out
mov
mov
pushf
xor
in
cdq
call
daa
inc
dec
sahf
mov
jb
sub
lods
hlt
and
cmp
adc
push
xchg
inc
(bad)
idiv
ins
fistp
push
mov
push
inc
push
push
push
fsub
aam
pop
mov
pop
push
bound
push
scas
sbb
daa
pop
call
add
sbb
push
call
xchg
push
fsubr
into
cmp
fsubr
fisttp
outs
pop
cmp
push
pushf
mov
aaa
lock
push
shl
or
(bad)
push
outs
imul
jb
dec
outs
jae
popa
ins
ins
jae
jb
pop
push
je
dec
sti
in
mov
xor
gs
push
jns
gs
cs
jns
sbb
(bad)
ficomp
cmp
aaa
push
dec
cmp
dec
fs
(bad)
fisubr
popa
jae
inc
outs
ins
jo
cmps
outs
je
push
inc
ins
outs
bound
sti
push
je
scas
jae
pop
inc
push
adc
push
imul
jo
cs
outs
ja
pop
or
mov
pop
out
push
ins
cs
js
xor
mov
lods
push
jmp
push
outs
cmp
jae
push
dec
nop
inc
outs
ins
fs
pop
xchg
pop
dec
ins
popa
addr16
ins
jo
pop
adc
jg
gs
ins
push
inc
dec
mov
ins
mov
movs
jae
sbb
arpl
adc
or
imul
mov
inc
gs
jne
clc
cmp
rol
imul
xchg
outs
or
ins
cwde
or
cli
push
lds
cld
adc
inc
in
imul
mov
jbe
pop
mov
push
in
pop
fld
adc
shl
jne
arpl
pop
inc
sbb
popf
push
jl
or
imul
gs
(bad)
xor
int
outs
arpl
push
adc
mov
outs
outs
adc
or
or
inc
unpckhps
sub
sub
rol
xor
xlat
dec
dec
or
push
ret
bound
mov
scas
adc
or
popa
fiadd
dec
push
dec
dec
push
sbb
lock
ins
adc
enter
xchg
fidiv
pop
loopne
cwde
loopne
inc
mov
(bad)
mov
test
aad
test
imul
push
sbb
mov
adc
repz
sub
(bad)
or
sub
ins
pusha
dec
sbb
mov
xchg
repz
inc
ins
je
arpl
movs
pop
adc
test
int
fnstcw
fst
xor
(bad)
popf
ret
ins
adc
mov
push
rcl
sar
push
inc
push
push
inc
shl
sbb
push
aaa
push
xchg
inc
test
dec
in
jmp
imul
adc
add
imul
dec
xor
pop
fldcw
stos
sbb
mov
mov
pop
pop
jb
imul
mov
rcl
imul
mov
xor
in
iret
sbb
push
(bad)
jb
inc
add
jb
lock
xchg
es
push
(bad)
push
enter
inc
inc
inc
adc
add
(bad)
gs
fwait
mov
mov
inc
xor
mov
sbb
jne
ds
dec
and
and
hlt
mov
cld
js
add
(bad)
shl
push
inc
fs
pop
push
and
inc
or
gs
jne
inc
jae
ins
bound
ret
mov
mov
mov
loopne
push
push
push
clc
sbb
cmp
sbb
js
stos
loopne
pop
in
arpl
push
mov
shr
call
cmp
in
arpl
inc
push
ret
dec
dec
dec
test
push
dec
dec
dec
inc
pop
xor
jp
ins
jl
or
test
jle
jo
push
arpl
cs
es
in
dec
xchg
push
sub
push
ret
inc
arpl
bound
mov
inc
sbb
inc
je
sub
jnp
out
sbb
cmp
pop
retf
xchg
mov
sub
jo
es
imul
adc
push
xchg
pop
je
data16
mov
retf
mov
or
ja
jnp
int3
inc
or
push
js
rol
or
add
ja
data16
mov
sbb
push
div
ins
jae
adc
ret
xchg
addr16
aad
ins
(bad)
jge
add
jge
pop
dec
dec
mov
push
adc
jne
jmp
jne
jns
or
jbe
adc
aaa
or
adc
xchg
sbb
jb
adc
and
fwait
add
adc
mov
push
jnp
ret
sub
push
sbb
dec
sbb
pop
or
mov
into
sub
imul
arpl
int
aam
and
adc
or
jo
add
sbb
dec
cmp
dec
imul
jo
sbb
loope
add
or
aaa
ret
jle
fwait
push
mul
dec
mov
jo
or
shl
pop
sub
fisub
int3
popf
rol
inc
ins
data16
pusha
xchg
shl
and
sahf
ret
sbb
push
sub
push
or
mov
inc
sbb
push
add
bound
loope
dec
push
inc
push
cmp
scas
sub
shl
pop
or
jae
push
inc
sbb
xor
jne
adc
and
inc
dec
inc
mov
dec
iret
xor
movs
mov
sub
sbb
je
xlat
pop
mov
push
cmp
femms
xchg
fidivr
ror
sub
push
mov
lods
pop
xor
sbb
sti
scas
fld
(bad)
fsub
xor
xor
dec
push
adc
adc
fimul
add
add
xchg
push
add
jae
push
mov
ins
cmp
pop
je
dec
or
push
push
mov
sbb
inc
fwait
rol
xor
mov
add
mov
(bad)
out
ja
daa
jge
push
dec
dec
ss
into
or
jbe
dec
(bad)
dec
mov
call
cs
inc
xlat
and
jge
mov
ficom
ss
data16
jbe
sub
fimul
(bad)
pop
je
cmp
adc
push
push
pop
push
and
cmps
pushf
jno
mov
loope
das
xor
xor
ret
jg
outs
ds
dec
mov
in
inc
js
add
ror
mov
pop
ja
sub
in
push
sbb
xchg
sbb
mov
lock
test
pop
push
push
dec
(bad)
out
test
lods
sub
mov
add
ret
xor
jnp
sub
and
mov
add
push
adc
sub
out
xchg
shr
and
sub
ds
pop
in
in
call
add
add
add
dec
inc
add
and
jnp
cmp
xor
adc
dec
sar
fs
jge
mov
or
movs
mov
es
hlt
or
data16
dec
mov
adc
and
lock
std
ds
out
mov
mov
ins
es
add
mov
cmp
lods
mov
ret
data16
je
or
imul
js
ret
mov
cs
adc
enter
mov
jo
add
adc
in
push
int
mov
mov
les
sar
pop
ins
jo
xor
and
xor
mov
adc
mov
(bad)
push
sbb
push
out
div
sbb
pop
add
adc
aas
(bad)
cld
adc
mov
mov
and
mov
outs
sbb
mov
mov
mov
mov
sbb
lahf
sti
dec
test
je
inc
shl
cmp
xchg
mov
mov
movzx
mov
cmp
jnp
ficom
jne
inc
jle
mov
cmp
out
mov
push
or
and
lea
or
cmps
xor
ja
or
dec
push
ins
push
cmp
(bad)
or
rol
iret
les
mov
test
push
and
sub
jb
je
dec
je
sub
out
leave
(bad)
mov
jne
xchg
movs
cmp
sub
push
fsub
cmp
cmp
test
cmp
in
arpl
fdiv
(bad)
arpl
xor
push
xor
mov
sbb
popa
mov
sbb
xchg
popa
sub
jmp
shl
pop
je
and
jo
sbb
sbb
dec
ror
add
sbb
adc
push
into
xor
test
aaa
in
add
inc
jae
mov
xor
cwde
ret
(bad)
loopne
mov
add
pop
inc
mov
push
mov
jl
push
test
mov
jo
inc
pop
or
adc
mov
(bad)
ins
jg
mov
sub
cmps
fs
fbld
mov
enter
or
xor
jmp
xchg
rcr
mov
add
neg
outs
pop
push
push
mov
cmp
fucomip
pop
pop
pop
cld
adc
cmps
ret
jmp
jmp
pop
ret
mov
daa
xor
add
add
sar
inc
lahf
out
add
mov
inc
add
pop
out
pop
lock
dec
and
jbe
iret
mov
adc
push
xor
push
mov
jg
mov
mov
(bad)
sbb
gs
xchg
out
push
je
sbb
push
stc
push
xchg
cmps
or
sbb
clc
addr16
push
add
mov
push
or
mov
rcr
push
(bad)
shl
mov
or
push
pop
cs
dec
cs
xlat
mov
inc
push
xchg
loope
fild
mov
ret
mov
mov
pop
adc
mov
mov
lods
xchg
in
(bad)
jo
mov
add
bound
call
stc
jge
inc
rcr
push
dec
mov
lea
mov
test
je
sub
neg
jmp
test
sbb
hlt
dec
rcl
inc
and
in
and
mov
or
sub
lds
pop
add
mov
dec
stos
inc
sbb
or
jo
xor
mov
int3
ds
movs
ss
mov
adc
cmp
cmp
push
ins
mov
fild
ins
enter
stc
les
rcr
add
and
inc
repz
xchg
fsubr
and
push
dec
js
dec
hlt
or
ror
mov
and
nop
dec
and
or
loopne
mov
dec
loop
add
sti
sahf
cld
sbb
(bad)
push
jb
pop
pop
push
push
or
out
xchg
test
or
sub
add
xchg
jbe
adc
sbb
fwait
cdq
loopne
aam
jg
sub
out
(bad)
loopne
pop
add
dec
sbb
pop
jo
sub
iret
arpl
jbe
xor
out
in
dec
xor
fwait
fs
scas
leave
push
add
dec
push
push
adc
push
lahf
pop
lods
or
loop
pop
xor
das
add
cmp
arpl
jp
mov
cmp
loope
adc
add
mov
ins
adc
scas
lock
mov
bound
sub
getsec
in
jnp
inc
add
adc
mov
ja
movs
cmp
and
adc
cmp
pop
in
push
in
clc
and
leave
clc
xchg
cdq
mov
inc
adc
adc
add
pushf
adc
(bad)
adc
push
pop
jns
in
adc
adc
adc
push
or
dec
sahf
cmp
or
or
in
xchg
mov
and
and
dec
sahf
cmp
adc
adc
adc
xchg
daa
cs
xor
xor
sahf
cmp
repnz
sbb
sbb
sbb
cmp
ds
push
mov
dec
ficom
inc
cmp
ds
jl
xor
in
mov
es
or
sub
div
mov
not
not
pmaxsw
cmp
neg
cmp
not
not
pop
mul
push
not
not
imul
sar
adc
adc
adc
mul
push
fcom
not
not
sar
adc
pmaxsw
adc
adc
adc
push
fadd
cmp
adc
adc
jo
out
rcl
adc
adc
fadd
adc
cdq
test
adc
inc
xchg
adc
sub
mov
sub
test
pop
adc
sbb
push
hlt
mov
mov
lock
cmp
lods
adc
push
call
add
fcomp
cmp
push
fist
or
push
lock
or
pop
sbb
mov
ret
paddusb
in
in
push
jl
test
jne
pop
seto
(bad)
cmp
in
mov
push
setge
inc
add
add
inc
and
mov
or
jne
mov
jg
daa
fwait
or
enter
repnz
jge
mov
jmp
xchg
pop
dec
push
or
shl
and
mov
es
push
lahf
js
and
xchg
push
or
jo
jo
retf
and
pop
je
(bad)
fidiv
jg
push
xor
mov
and
(bad)
inc
mov
push
push
adc
test
leave
rol
sar
out
ja
mov
xchg
movs
mov
(bad)
jns
fimul
icebp
xor
and
add
dec
mov
push
add
(bad)
ja
mov
add
mov
mov
cld
or
jbe
jae
sahf
or
cwde
mov
rsqrtps
js
stos
(bad)
movs
mov
stc
sbb
dec
mov
sar
outs
enter
cld
add
call
fwait
push
adc
aas
ss
mov
int3
xchg
jg
jg
xchg
loopne
xor
mov
nop
fstp
and
push
in
sbb
sbb
inc
push
fs
xor
out
rol
aam
sar
push
and
or
mov
sbb
sbb
push
pushf
ds
xor
mov
and
xor
das
dec
ds
out
nop
add
mov
test
test
or
pop
inc
mov
dec
jge
mov
shl
enter
xchg
add
in
and
adc
mov
xchg
sub
mov
jo
fisttp
pop
ins
mov
cmp
inc
cmps
or
mov
cmps
fmul
push
push
(bad)
push
sbb
in
dec
dec
aaa
mov
enter
jo
pusha
mov
nop
pop
push
cmp
or
sbb
sar
sbb
pop
cmp
push
loopne
daa
or
aam
push
and
in
pop
jg
or
jbe
add
cli
not
dec
daa
push
jmp
sub
xor
cmp
push
das
popf
jb
or
fiadd
add
add
imul
add
fisttp
add
inc
add
int3
scas
fld
ins
sbb
outs
cs
push
add
mov
in
in
js
cli
cmp
push
(bad)
shr
mov
test
mov
xor
sti
(bad)
adc
in
mov
jg
out
nop
ja
cwde
jg
ins
jmp
and
or
push
fsubr
dec
sti
jbe
fsubr
pop
mov
mulps
sub
or
imul
pop
call
test
sub
fsub
xchg
push
or
ret
aaa
aas
data16
dec
sbb
xor
in
jae
mov
or
out
dec
add
jo
or
add
pop
adc
xchg
cs
jb
aas
pusha
adc
inc
cmp
scas
sbb
hlt
repz
pop
jnp
jnp
lahf
push
push
mov
or
inc
dec
imul
push
or
inc
and
pop
adc
fistp
sub
add
aas
push
aam
in
pop
cmp
leave
fistp
mov
mov
push
push
imul
add
sbb
(bad)
imul
inc
mov
pop
mov
ds
les
cmp
pop
xor
jl
pusha
out
inc
mov
ins
in
loopne
inc
cmp
cmp
in
lods
inc
mov
ret
popf
jmp
rcr
push
das
jl
push
enter
and
js
xlat
aas
mov
lea
stc
je
icebp
sbb
cld
push
add
sbb
push
sbb
or
retf
adc
xor
les
inc
out
add
jbe
xor
push
push
ja
cmp
dec
jne
std
scas
dec
pop
imul
test
dec
xchg
(bad)
rol
xor
cmp
mov
movs
mov
or
fwait
and
cmp
cmp
mov
daa
mov
(bad)
out
sti
push
cld
bound
jne
mov
cdq
dec
cmp
sar
lock
test
aas
add
sbb
push
push
lea
loop
sub
mov
mov
mov
mov
sbb
mov
sub
jg
cmc
push
test
add
mov
sti
das
lock
icebp
repnz
mov
das
in
loopne
in
push
out
push
out
out
cmp
fs
call
jmp
jnp
mov
cs
push
out
out
iret
mov
dec
push
mov
push
loop
xor
std
cs
test
test
out
jge
jecxz
fild
mov
(bad)
fiadd
aas
(bad)
jnp
fld
fdiv
lea
out
jg
push
sbb
add
push
mov
push
nop
jbe
xor
push
add
mov
les
test
imul
dec
test
aam
push
stc
mov
cwde
cdq
add
cmps
dec
cwde
mov
addr16
mov
hlt
int
mov
mov
dec
add
add
mov
mov
in
inc
or
repz
mov
mov
cmp
adc
cmp
sbb
sbb
and
or
ficomp
leave
mov
mov
mov
fld
xchg
inc
add
cmp
pop
imul
sub
iret
or
push
jae
mov
dec
xor
and
je
outs
sti
mov
cmps
and
clc
add
push
lock
daa
movs
adc
mov
and
sbb
cwde
scas
pusha
into
jns
mov
jo
test
sub
inc
fisubr
lods
cmps
or
adc
repnz
xor
pushf
cdq
dec
in
jle
add
xchg
sti
add
and
sar
call
imul
movs
sbb
pop
pop
mov
mov
add
and
stc
jmp
(bad)
mov
pushf
loopne
ins
and
xchg
sub
mov
call
fsubr
jae
sub
add
push
fs
mov
mov
jo
test
add
lea
imul
or
and
dec
dec
xor
mov
inc
cmp
or
push
out
pop
sbb
lock
adc
mov
lods
lsl
adc
scas
sub
icebp
and
lahf
pop
mov
clc
addr16
cld
outs
mov
mov
mov
and
int3
dec
icebp
loop
es
or
clc
pop
cmp
and
jl
or
adc
sbb
es
loopne
cmp
addr16
js
or
inc
test
(bad)
dec
adc
movs
ret
add
fistp
xor
(bad)
cld
(bad)
imul
xchg
mov
adc
pushaw
jno
mov
sub
sahf
retf
repz
mov
data16
sub
shr
cmp
nop
arpl
xor
cmp
nop
inc
push
dec
inc
push
nop
inc
push
cmp
inc
push
cmp
pusha
pop
push
fs
adc
jo
pop
sahf
retf
jae
loopne
in
sbb
in
bnd
jb
and
and
iret
in
jb
test
in
lods
lock
ret
mov
out
popf
fucomip
add
lahf
pmulhuw
jmp
add
mov
je
mov
int
adc
xor
in
jae
call
pusha
xor
sahf
inc
cs
in
(bad)
ficom
or
push
or
push
call
adc
pop
pushf
adc
jne
push
and
iret
out
sub
adc
jbe
mov
adc
sbb
or
pop
xor
fiadd
call
js
hlt
inc
adc
xor
jl
pop
xchg
out
jmp
xor
adc
pop
sub
subps
inc
push
push
adc
pusha
cdq
fcom
jle
cmp
adc
push
dec
adc
pop
mov
push
movs
jnp
adc
pop
push
adc
icebp
push
push
ins
push
jae
dec
mov
jb
aam
pop
adc
cmp
fbstp
or
fisub
shl
test
iret
jle
pusha
or
pop
aas
call
pop
dec
add
js
call
scas
adc
jb
nop
mov
sub
adc
data16
and
add
sub
mov
cmovb
push
ss
pop
dec
xor
xchg
mov
in
xchg
cmp
mov
call
add
jns
pusha
minps
sbb
mov
dec
pusha
pop
jl
or
or
call
fiadd
mov
int
mov
inc
adc
and
mov
and
call
call
and
push
test
add
xchg
into
pusha
data16
out
push
test
out
jle
test
add
or
outs
out
or
call
sub
inc
or
and
inc
or
retf
xlat
adc
cmp
shr
xchg
push
pop
sub
push
mov
addr16
push
xchg
mov
stos
dec
pop
push
icebp
adc
jnp
cmp
cmps
out
cmp
loopne
in
pop
push
test
xchg
dec
cli
sbb
dec
call
scas
inc
jg
push
cwde
stc
pushf
cmp
pop
xchg
lock
stos
daa
cmp
cmp
fs
in
mov
add
iret
or
ret
das
or
adc
or
sbb
lahf
ja
cmp
xchg
xor
xchg
pop
jo
cmp
dec
cmc
(bad)
jne
nop
cli
mov
inc
add
loop
retf
cld
mov
aam
mov
(bad)
cmp
ret
inc
clc
call
mov
push
push
call
mov
add
out
movzx
xchg
ins
int
inc
mov
push
neg
fmul
sub
push
sbb
dec
scas
fadd
add
mov
loop
push
mov
js
ret
fs
jmp
inc
xchg
or
mov
imul
icebp
cmp
pop
ds
(bad)
call
jb
inc
(bad)
call
sub
scas
fldenv
(bad)
cmps
call
je
ror
and
int3
or
pusha
or
out
out
mov
pop
mov
sahf
sub
dec
(bad)
call
push
mov
imul
cmp
ds
jg
popa
pushw
pop
jle
inc
outs
inc
mov
fdiv
lds
add
inc
lods
and
rep
loopne
aaa
mov
jl
or
jbe
cmp
jp
cmp
sbb
sub
not
addr16
add
das
gs
pushf
ret
leave
push
test
rol
dec
cmp
or
sub
pushf
pushf
xor
scas
fisttp
and
test
outs
aas
lods
jae
sahf
int3
(bad)
retf
int
test
and
dec
inc
and
jl
push
jg
and
ja
cmps
repnz
mov
addr16
inc
cmp
cmp
neg
dec
sbb
test
mov
rcr
xor
es
cld
push
shr
je
xor
retf
sub
(bad)
sar
bound
add
lods
mov
add
pop
fdiv
dec
call
jne
adc
test
mov
inc
mov
xor
aaa
push
ins
xchg
add
test
xor
outs
sar
aam
retf
sbb
jne
ds
pop
fnstcw
xchg
xor
call
test
fsub
shl
or
test
call
cmps
jne
push
push
fadd
aaa
(bad)
push
push
fsubrp
test
stos
in
xor
fist
daa
xchg
fnstenv
push
call
mov
sub
pop
fwait
call
mov
js
pop
or
jmp
push
call
aad
pop
adc
mov
test
in
loopne
test
loopne
call
shl
rol
iret
and
or
pop
dec
lahf
dec
mov
loopne
stc
adc
std
push
sub
call
push
mov
jecxz
push
(bad)
mov
add
dec
xor
or
rcr
data16
aaa
inc
mov
xor
ds
push
test
add
push
mov
push
sbb
mov
and
inc
dec
add
adc
lds
loop
out
(bad)
(bad)
fisub
into
movs
cmp
jne
xchg
dec
inc
add
js
out
sahf
mov
in
add
add
jle
aaa
mov
out
or
aas
sbb
add
aas
in
sbb
fsub
pop
add
sub
test
pop
add
sti
xchg
sti
es
jnp
pop
add
aas
dec
pop
(bad)
mov
push
aas
push
pop
add
adc
mov
adc
jnp
add
add
sbb
adc
add
dec
cmp
rcl
pop
add
xchg
jbe
adc
movs
sbb
add
sub
loopne
add
adc
add
adc
and
in
mov
cs
mov
mov
push
adc
add
mov
and
cs
loopne
test
mov
mov
push
pusha
add
mov
inc
mov
jo
jo
push
test
adc
sar
or
sbb
push
cld
add
or
add
mul
push
mov
pop
push
xor
dec
jg
ss
pop
aam
adc
out
retf
int3
enter
enter
dec
into
fcmovnu
fcmovu
retf
(bad)
loopne
jecxz
in
jmp
in
out
outs
jmp
stc
ror
inc
mov
cmp
adc
ds
in
add
pushf
or
ret
(bad)
repnz
dec
and
adc
mov
enter
out
sbb
add
mov
das
adc
out
xchg
sub
scas
cld
retf
mov
xor
leave
sbb
cld
lds
mov
jbe
imul
cmp
mov
(bad)
mov
outs
dec
jmp
(bad)
lods
inc
cmp
xlat
fadd
outs
xor
fwait
jg
js
xchg
push
or
push
push
int3
into
sbb
ror
mov
test
popa
push
pop
test
enter
mov
cmp
and
daa
(bad)
retf
into
cld
(bad)
(bad)
call
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
(bad)
(bad)
push
hlt
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
jmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
push
daa
cmp
inc
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
(bad)
(bad)
(bad)
inc
das
push
sbb
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
(bad)
(bad)
(bad)
jmp
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
cld
pop
(bad)
ds
push
cmps
scas
mov
pop
or
(bad)
(bad)
(bad)
inc
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
call
aaa
popa
mov
fsub
addr16
repz
mov
sub
and
(bad)
(bad)
inc
and
outs
bound
xor
jb
outs
jb
push
jne
je
ins
and
jg
in
and
popa
je
xor
xor
paddd
cmp
inc
inc
inc
push
in
inc
cmps
push
add
sahf
cmps
std
push
mov
push
or
jo
sub
iret
repz
push
fcomp
mov
iret
repz
(bad)
push
(bad)
jns
aad
adc
and
cmp
jns
out
inc
sub
cs
out
sahf
pop
inc
ins
push
js
or
idiv
add
cs
sbb
pop
call
int3
push
cmp
pop
adc
out
ds
push
aas
push
add
cs
adc
mov
mov
push
sub
sbb
cmp
popf
jo
pop
push
dec
pop
aam
pop
push
loope
imul
pop
and
je
push
sbb
aaa
call
sub
cmovle
pcmpgtb
adc
out
sahf
adc
sbb
jg
jg
sbb
sub
push
out
ror
shl
push
jg
push
iret
cmp
das
out
loope
scas
inc
push
das
push
fisttp
jnp
xchg
adc
push
sbb
push
xlat
loop
fild
push
pop
cs
scas
fadd
xor
inc
push
outs
push
cmp
ret
cmp
mov
loop
jg
test
daa
sbb
mov
ret
(bad)
(bad)
fild
fcom
pop
add
(bad)
imul
pop
push
push
adc
or
ss
sbb
or
add
adc
adc
adc
add
scas
and
pop
add
call
test
sbb
adc
std
adc
xchg
pand
sbb
xchg
inc
add
push
jl
int3
(bad)
shr
loopne
loope
sbb
jge
mov
in
out
les
sbb
fwait
int
mov
and
rcr
sub
in
lock
ret
lods
out
inc
out
push
and
add
push
bound
pop
fisubr
add
fisubr
push
stc
mov
aaa
popa
adc
punpcklwd
pop
pcmpeqd
xor
jne
push
(bad)
bts
movlps
in
pop
inc
push
push
or
sbb
test
sbb
xchg
sub
lds
sub
outs
call
push
loopne
jae
call
mov
add
sbb
cmp
int3
sub
std
inc
out
jb
bound
(bad)
aas
push
lahf
stos
jmp
cmc
es
in
repnz
mov
and
cmp
push
xchg
jg
jmp
jns
(bad)
(bad)
dec
div
fwait
jecxz
dec
repz
mov
not
repnz
(bad)
push
fld
(bad)
jmp
test
mov
and
cmps
inc
xchg
inc
mov
(bad)
mov
test
retf
sbb
leave
sbb
arpl
xchg
xchg
in
std
aas
repnz
pop
push
or
pop
cli
call
outs
jbe
sti
xlat
mov
idiv
push
jge
sub
repnz
pop
inc
jnp
scas
cs
pop
out
push
into
mov
pop
xchg
pop
jnp
mov
cs
dec
sub
into
cld
push
mov
cs
out
es
jge
out
scas
push
push
push
inc
scas
push
scas
dec
in
repz
adc
es
dec
clc
in
outs
outs
jl
mov
arpl
push
mov
outs
clc
iret
ror
push
fmul
imul
xor
(bad)
outs
push
retf
stos
add
cmp
movs
in
in
pop
inc
cmp
shl
sti
inc
ins
and
push
pop
fimul
adc
mov
jmp
(bad)
fistp
xor
push
mov
xor
push
stos
push
push
mov
(bad)
fld
push
and
or
adc
push
fld
scas
sbb
or
sbb
push
sbb
or
mov
push
sbb
sahf
out
js
cwde
and
add
arpl
inc
(bad)
(bad)
(bad)
sbb
jle
push
pop
mov
rcl
pushf
js
mov
or
mov
jg
pushf
jmp
fsubr
push
xor
pop
int
lods
loopne
sbb
daa
lods
add
pusha
int
lods
mov
add
jg
fldcw
and
pop
loopne
in
pusha
or
(bad)
mov
cwde
loope
retf
push
sar
retf
test
cmp
dec
sbb
aaa
adc
mov
push
mov
jle
dec
add
and
rcr
idiv
inc
inc
in
cs
xor
push
rcr
mov
imul
es
data16
sti
cmp
push
cmps
push
bound
rcl
add
mov
scas
ins
int
mov
push
cmp
pop
ror
popf
out
(bad)
mov
sahf
out
push
in
sbb
adc
mov
mov
and
mov
ficomp
inc
mov
(bad)
in
mov
jle
push
in
(bad)
call
(bad)
mov
mov
sbb
lds
scas
mov
bound
inc
ja
mov
push
cmp
inc
mov
shl
aaa
(bad)
inc
fwait
shl
jb
sub
int3
jo
adc
mov
jmp
loopne
(bad)
(bad)
call
popf
and
jne
fnstcw
retf
shl
mov
or
jmp
cmp
ss
pop
add
std
out
out
jb
sub
cmp
scas
outs
ds
cmp
jno
push
pop
test
jo
call
outs
xchg
mov
jns
jns
rol
mov
fsubrp
repz
aaa
lahf
dec
add
add
iret
repz
repz
push
popa
add
repz
repz
xchg
movs
mov
iret
repz
enter
icebp
cld
jns
outs
ds
sbb
sub
aas
dec
pop
push
mov
jno
jle
out
xchg
mov
repz
scas
push
rcr
call
iret
repz
xor
aas
iret
lock
add
add
sahf
std
cmp
mov
mov
int
lahf
out
fldl2e
add
or
adc
cmp
sub
dec
push
inc
dec
repz
cmp
push
js
aas
iret
repz
xchg
movs
stos
mov
mov
repz
add
repz
aas
add
push
sbb
aas
iret
and
xor
dec
sti
cld
repz
mov
pop
add
add
add
pop
mov
xchg
add
add
add
out
jg
add
add
add
aas
iret
repz
push
adc
enter
xor
push
aas
(bad)
cld
push
dec
push
sub
push
bound
xor
outs
jp
xor
xchg
fmul
(bad)
repz
jmp
push
mov
in
retf
fcomi
cld
rol
retf
(bad)
xchg
loope
cwde
(bad)
jmp
sahf
jmp
jns
repz
or
loope
adc
pop
add
push
(bad)
jns
jg
pop
push
add
ss
push
sahf
jmp
jns
bound
push
add
push
add
out
(bad)
jns
mov
pop
add
mov
mov
pop
add
pop
(bad)
jns
out
add
iret
aad
in
pop
add
sahf
loope
jns
test
pop
(bad)
push
adc
jns
jns
and
pusha
add
xor
or
jg
daa
push
push
inc
dec
push
or
push
pop
sahf
daa
clc
jns
ins
or
push
ja
out
(bad)
jns
lea
push
xchg
lahf
stos
lahf
out
sahf
mov
ret
in
or
stc
out
add
daa
std
pop
or
or
sbb
adc
daa
and
push
daa
sub
or
daa
inc
or
daa
dec
or
daa
push
or
popf
std
jmp
jle
bound
popa
jae
imul
arpl
je
sub
js
jne
imul
and
sub
in
pop
add
or
cmp
cmp
imul
enter
cmp
imul
fidiv
cmp
adc
jmp
ins
popa
je
outs
ja
add
sub
ja
add
pop
lea
pop
mov
xor
inc
sub
sbb
lea
mov
das
aaa
xor
mov
fnstenv
lea
xchg
arpl
imul
sub
jnp
sub
mov
or
xor
push
outs
inc
arpl
inc
push
ja
in
test
mov
xor
int
mov
mov
mov
mov
gs
mov
adc
pusha
fld
fimul
push
lea
xor
and
in
and
movs
xchg
sub
and
jl
pop
mov
adc
mov
retf
sub
xchg
and
icebp
xchg
cmp
xchg
in
mov
adc
dec
mov
(bad)
aas
push
lods
push
mov
imul
rcr
dec
ins
inc
movhps
ret
jg
jge
ins
mov
in
shr
pop
jge
fsubp
or
or
(bad)
sti
jmp
xor
imul
pop
neg
and
push
outs
ja
pop
bound
cmp
xor
mov
inc
xor
add
outs
sbb
or
nop
mov
je
xor
adc
addr16
adc
xchg
mov
test
addr16
div
fdivr
adc
sbb
sub
mov
or
add
or
popa
pop
bound
push
mov
pop
adc
xor
jae
or
daa
lds
imul
daa
mov
loopne
imul
daa
es
pop
sbb
pusha
dec
daa
sbb
pusha
dec
lock
fsub
repz
sub
imul
and
sbb
jae
loopne
jecxz
aaa
es
xor
icebp
mov
xor
inc
jae
test
es
fadd
scas
das
push
das
pushf
inc
add
mov
mov
or
push
jo
fs
push
popa
jo
fst
dec
pop
cmp
sub
jne
push
es
push
push
pop
push
xor
sbb
inc
xor
xor
or
sbb
arpl
add
cmp
aaa
cld
inc
or
cli
push
bound
sahf
or
out
sbb
ins
cmp
jne
dec
jnp
or
int3
jecxz
push
dec
pop
or
push
inc
or
(bad)
adc
pushf
mov
sti
or
pop
jae
xchg
adc
out
cmp
push
jbe
mov
push
mov
jns
sub
iret
sub
push
sti
or
daa
push
mov
pop
push
xchg
sbb
push
xchg
fnsave
inc
sbb
sahf
shr
sbb
sub
push
in
inc
lock
(bad)
adc
sub
out
fisttp
and
xor
mov
cli
dec
adc
add
sub
pop
test
mov
pop
leave
js
add
adc
fmul
or
sub
sbb
jmp
aaa
sbb
mov
cld
fwait
call
add
mov
jo
fstp
or
mov
adc
not
adc
arpl
lods
cmp
popa
fs
jne
jge
gs
and
jo
push
gs
inc
sub
mov
daa
xor
mov
repnz
add
dec
sbb
xor
clc
jo
test
loope
add
push
adc
push
data16
sbb
add
dec
data16
dec
push
dec
push
dec
push
dec
xor
in
push
call
push
add
push
dec
push
dec
push
dec
into
cdq
cdq
cdq
push
dec
push
dec
push
dec
ror
inc
push
add
dec
push
add
dec
jo
dec
sbb
addr16
cmp
mov
add
pusha
div
xor
dec
xor
dec
int3
cmp
arpl
ror
data16
dec
push
dec
dec
push
dec
out
or
stos
arpl
ror
inc
push
add
push
add
xor
pushf
ror
sbb
cmp
stos
jb
sbb
arpl
ror
ja
add
mov
add
add
mov
and
mov
cmp
xchg
dec
pop
sahf
out
pop
push
inc
inc
inc
inc
inc
sub
lds
jae
push
int3
int3
int3
int3
jle
jle
jle
jle
push
add
jle
jle
push
data16
jle
jle
jle
or
data16
jle
push
xor
xor
jle
jle
jle
jle
test
jle
cdq
cdq
cdq
cdq
push
jle
jle
jle
jle
jo
cdq
push
jle
jle
int3
int3
int3
int3
push
jle
jle
jle
jle
cmp
int3
push
jle
jle
data16
jle
jle
jle
jle
sbb
pushw
jle
jle
xor
xor
push
jle
jle
push
xor
push
jle
jle
cdq
cdq
cdq
pop
push
jle
jle
jle
add
cdq
cdq
jle
jle
jle
int3
int3
int3
sub
jle
jle
jle
ret
ret
int3
int3
jle
jle
jle
rol
ret
inc
retf
jae
rol
(bad)
jae
cdq
cdq
cdq
cmp
jle
jle
jle
xchg
jle
stos
xor
inc
retf
push
out
add
jae
jle
jle
jle
jle
mov
fwait
and
or
cmp
add
arpl
jae
dec
data16
jle
jle
jle
push
push
inc
inc
fwait
and
push
mov
jae
push
(bad)
jae
pushf
pushf
int3
int3
add
jle
adc
mov
sbb
sub
inc
retf
push
xor
or
(bad)
jae
add
sub
xchg
ret
ret
enter
sub
cmp
dec
shl
rol
jecxz
repz
inc
cmp
add
rcr
ret
xlat
jno
add
inc
dec
mov
push
add
sahf
aas
enter
jg
retf
movs
dec
add
and
add
dec
sahf
jns
out
push
mov
out
sahf
out
rcr
loopne
iret
sar
clc
add
adc
cmp
repz
sub
cmp
cmp
repz
push
pop
pusha
push
jo
or
cmp
test
mov
jg
imul
add
push
mov
movs
push
add
iret
enter
push
add
cmp
or
das
jae
cmps
ror
jmp
ins
add
dec
enter
fsub
loope
loopne
adc
push
push
pop
dec
push
mov
pop
pop
push
pop
or
xlat
pop
add
add
cmp
add
sbb
jg
pop
add
inc
aaa
add
xchg
xor
aas
or
adc
add
add
add
(bad)
int
sbb
or
(bad)
add
dec
mov
pop
or
fmulp
sub
or
pop
je
mov
xchg
xchg
push
pop
or
les
mov
add
add
add
fiadd
sbb
dec
or
add
pop
xlat
popf
imul
das
jbe
pop
pop
pop
(bad)
out
fnsave
lds
add
or
das
or
out
or
or
or
or
add
stos
sbb
mov
(bad)
loopne
push
sbb
push
ins
mov
fdiv
adc
sub
(bad)
into
repz
js
(bad)
xor
stc
or
xchg
scas
sbb
je
outs
pop
push
push
mov
test
aas
push
adc
iret
repz
mov
add
or
enter
bound
daa
lock
clc
daa
sub
jnp
cld
jle
fwait
push
and
dec
nop
out
cmp
daa
mov
(bad)
out
mov
das
mov
pop
daa
xor
iret
test
int3
loopne
pop
push
jnp
les
xor
daa
out
(bad)
out
mov
das
fsub
or
adc
sub
sbb
out
mov
xor
mov
dec
shr
outs
das
add
jl
es
mul
mov
mov
ins
jnp
daa
mov
repnz
dec
jnp
add
mov
call
iret
(bad)
push
push
clc
das
mov
popf
inc
sahf
addr16
aam
sub
es
inc
das
mov
jg
jb
daa
dec
pop
pop
nop
or
bound
fcomp
pop
idiv
jnp
push
test
test
test
inc
mov
lahf
push
sahf
ins
(bad)
push
das
add
or
in
or
outs
mov
cmp
jns
out
outs
js
rcr
in
clc
or
cmp
cmp
and
and
push
fsubr
sahf
pop
movs
cs
sar
aas
add
shr
push
das
mov
ror
aas
jg
lods
cmp
dec
int3
push
add
outs
mov
mov
mov
fmul
sub
add
and
mov
add
add
mov
out
das
fs
mov
aas
dec
pop
aas
and
fisttp
in
jo
aas
and
fild
pop
je
and
lahf
ds
push
jo
adc
pop
push
ret
int
call
adc
call
enter
inc
es
add
dec
or
popf
fadd
pop
sbb
inc
pop
outs
mov
push
pop
pop
scas
mov
or
daa
mov
or
mov
push
push
aas
pop
mov
inc
or
ror
sbb
pop
pop
mov
or
sub
inc
scas
pop
mov
dec
in
pop
sbb
scas
xor
aas
add
add
pop
or
or
sbb
jp
pop
outs
sbb
in
jb
test
add
outs
das
or
mov
adc
or
pop
call
or
outs
push
and
add
movs
pop
iret
xlat
adc
loop
les
test
mov
pushf
jne
mov
add
addr16
and
push
push
mov
and
das
pop
jo
push
cmp
in
xchg
mov
pop
xor
mov
push
jnp
test
or
xor
pop
popf
adc
xchg
cs
push
(bad)
and
mov
push
addr16
in
int
add
add
mov
add
xor
add
into
out
or
add
or
or
cli
rdpmc
add
sbb
jle
inc
in
dec
xchg
xor
xor
xor
ss
cmp
fidiv
cld
cmp
inc
inc
inc
or
icebp
call
and
pop
jmp
push
lods
ds
add
dec
sbb
(bad)
call
retf
adc
push
cmp
dec
or
icebp
or
cld
mov
(bad)
(bad)
(bad)
mov
jno
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
(bad)
(bad)
(bad)
jmp
mov
push
xor
cmp
jmp
sbb
mov
dec
jge
dec
(bad)
(bad)
(bad)
call
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
jmp
jbe
leave
push
pop
psrld
scas
iret
or
or
mov
push
add
ficom
ror
xchg
dec
lahf
fisttp
int
add
pop
adc
arpl
jns
ja
push
pushf
shl
sub
scas
sub
pusha
add
push
fist
repz
cld
enter
sahf
out
stc
or
sub
out
sahf
out
imul
sahf
out
sahf
hlt
mov
int3
repnz
sahf
cmps
ins
jno
or
push
lock
jns
out
push
out
jo
mov
jns
out
lods
jmp
jmp
or
pop
dec
push
mov
jnp
mov
pop
push
mov
scas
mov
aas
push
clc
aas
push
adc
xlat
jecxz
(bad)
rol
push
mov
push
fidiv
jne
push
and
add
aas
push
loopne
push
cld
jg
cmps
stc
jl
sbb
cmps
retf
inc
(bad)
sti
pusha
sub
aad
mov
scas
call
adc
and
hlt
(bad)
repz
jl
xchg
dec
push
adc
cmp
pop
lods
push
call
popf
cmps
sub
fadd
call
jns
out
push
sbb
adc
push
rcl
jl
ds
sbb
jle
push
pop
mul
push
cmps
jmp
mov
push
sbb
pop
in
fidivr
cmps
mov
jg
push
sub
dec
jo
out
(bad)
cwde
(bad)
js
ficomp
pushf
push
stc
cmp
jmp
mov
add
jo
out
xchg
push
jmp
pop
inc
loop
or
push
push
(bad)
clc
ret
xlat
clc
fld
mov
jb
sub
daa
out
pop
ds
fdiv
bound
mov
ror
int
lock
jae
push
and
(bad)
cmp
sub
sahf
push
xchg
sahf
pop
dec
push
rcr
push
push
imul
inc
dec
lock
fs
fsub
neg
pushf
jg
cmp
fdivr
cwde
pop
mov
sti
cdq
mov
push
or
test
add
push
inc
outs
outs
addr16
fstp
pushf
push
imul
(bad)
call
push
das
imul
test
mov
cdq
(bad)
aas
ret
out
cmp
ds
push
jp
jmp
pop
loopne
cmp
dec
dec
das
sahf
icebp
pop
jl
(bad)
ror
sahf
push
rol
xchg
(bad)
mov
ds
xchg
adc
hlt
push
(bad)
mov
imul
push
mov
push
and
mov
mov
inc
fcomp
mov
fld
push
mov
xor
fadd
call
lds
or
cs
jecxz
dec
and
push
das
dec
cmc
mov
sahf
jmp
mov
das
push
push
dec
dec
push
mov
lock
add
push
pop
pop
int
push
add
scas
ins
cmovg
mov
adc
push
cli
lods
jmp
inc
xor
jl
in
fidiv
push
int
mov
call
mov
inc
adc
push
sar
inc
pusha
push
shl
ror
add
push
nop
out
nop
ds
in
lahf
div
push
adc
sahf
mov
sti
sub
and
push
cli
into
xchg
pop
adc
pmuludq
les
mov
xchg
push
push
and
mov
sbb
dec
in
dec
lock
scas
int
dec
int
iret
icebp
jnp
pop
push
rcl
into
push
(bad)
ds
cld
or
push
jno
cmp
push
out
push
sub
dec
inc
push
int3
shr
(bad)
enter
push
push
jo
sbb
mov
push
loope
xor
mov
or
jl
push
pop
loopne
scas
lahf
pop
push
out
std
dec
push
xor
shl
mov
xchg
push
fsubr
jle
fbld
jo
jl
stos
call
or
pop
push
out
out
scas
push
mov
lahf
out
push
xchg
jo
out
xchg
push
aad
push
icebp
cdq
mov
pop
push
aas
test
push
loope
cld
fcmove
rcr
push
frstor
loopne
or
scas
dec
clc
push
dec
jle
(bad)
sub
(bad)
pusha
dec
push
loope
inc
loopne
cli
add
push
adc
lods
push
jb
pop
sti
fldcw
movs
hlt
outs
push
push
mov
outs
xchg
(bad)
loopne
mov
sub
loopne
icebp
ss
ds
int
push
outs
sbb
dec
nop
ds
push
pop
lock
push
mov
inc
add
push
mov
sbb
push
push
fdivr
arpl
jl
ret
jle
inc
push
push
out
or
cmp
push
lock
mov
add
fcomp
jno
xor
mov
mov
adc
ret
add
add
sti
lahf
add
popa
outs
jae
gs
xor
xlat
or
inc
mov
push
jo
test
or
push
dec
cmp
pop
push
or
push
mov
push
mov
inc
mov
ds
repz
mov
jo
out
fiadd
int3
and
sahf
mov
pushf
js
sub
add
scas
mov
push
adc
ds
bound
or
repnz
fcos
add
add
adc
sbb
adc
cmp
out
cmp
sahf
adc
sbb
fimul
sub
sar
add
out
adc
sbb
sbb
and
in
cld
xchg
push
add
test
add
inc
pop
and
xor
imul
sbb
adc
(bad)
jmp
ins
popa
je
and
xor
cmp
inc
outs
jo
js
push
jecxz
cmp
xor
xor
dec
gs
ins
outs
jne
and
imul
fistp
and
jb
and
ins
aam
fsub
jbe
dec
sahf
mov
dec
pop
ret
sbb
sbb
xchg
int3
sub
not
add
add
into
cmp
add
inc
pop
data16
les
pop
adc
adc
cmp
out
pusha
push
push
clc
add
jae
fnstsw
pop
push
jo
push
or
adc
push
fmul
push
push
or
mov
or
repnz
mov
or
js
out
sub
rol
adc
push
or
sub
mov
mov
or
xchg
lock
pop
mov
adc
adc
push
mov
push
je
xor
enter
pop
ja
test
and
test
pop
test
adc
fisttp
dec
or
jle
pop
push
lock
xor
cwde
xchg
push
push
jl
cmp
fdivr
ror
ins
push
sub
mov
xchg
adc
mov
cs
jle
mov
push
push
adc
mov
out
mov
(bad)
(bad)
xchg
or
and
push
pop
or
or
or
jle
or
jnp
sbb
or
cmp
cmp
or
xchg
mov
lahf
mov
dec
push
hlt
jle
mov
push
push
push
xchg
jmp
(bad)
or
ds
dec
cwde
inc
(bad)
push
or
or
push
push
pop
cmp
lods
push
(bad)
or
dec
fmul
in
jle
or
add
neg
or
ds
fdivr
cmp
in
jb
outs
push
cs
mov
loop
lds
dec
push
cld
call
or
cmp
push
xor
ret
jnp
jmp
and
mov
push
pusha
push
add
out
or
mov
pop
push
sbb
xchg
(bad)
jns
cmp
fdivr
imul
icebp
pop
or
mov
dec
push
bnd
sub
in
push
adc
jne
xor
ds
or
jmp
push
pop
test
inc
push
jmp
push
jb
call
scas
js
(bad)
ins
push
sub
out
repnz
cli
call
sub
addr16
inc
push
push
push
or
call
or
ret
pop
icebp
or
into
lds
(bad)
jnp
push
or
inc
scas
or
loop
jmp
push
dec
push
mov
push
aaa
ds
jmp
xlat
fnstsw
daa
push
scas
push
fild
scas
js
push
call
outs
or
mov
push
aas
push
fdivrp
outs
push
das
push
mov
mov
or
jmp
push
sub
sar
mov
mov
call
jb
inc
call
adc
push
push
inc
push
dec
test
push
(bad)
jmp
cs
fnstcw
test
stc
(bad)
call
test
mov
call
aad
push
push
inc
mov
cmc
(bad)
dec
lds
pop
lods
push
(bad)
in
jmp
inc
xchg
popf
fst
push
(bad)
std
inc
mov
mov
pop
(bad)
out
inc
cs
shl
test
repz
call
test
stos
push
call
(bad)
call
fstp
mov
sti
(bad)
inc
lds
pop
cmps
push
jmp
jmp
inc
xchg
xchg
xlat
mov
push
call
adc
dec
scas
stos
adc
out
(bad)
(bad)
mov
fistp
stos
(bad)
(bad)
jle
sahf
pop
push
and
out
add
adc
loop
cmp
push
add
add
fisubr
push
add
adc
mov
push
inc
je
out
dec
xor
jle
(bad)
jle
jnp
repz
jle
data16
ds
jns
mov
xor
gs
sar
or
jg
and
lods
outs
data16
sub
add
mov
ds
jmp
add
pop
imul
arpl
gs
fs
or
push
arpl
ja
jae
jnp
sbb
jo
jae
imul
outs
push
cmp
jg
popa
ins
imul
xor
xchg
adc
mov
mov
mov
add
jb
push
imul
ds
ins
outs
or
je
jo
mul
xchg
xor
addr16
mov
outs
jns
and
popa
imul
xchg
je
arpl
jns
bound
inc
sub
fdiv
fld
mov
jo
clc
jg
loop
shl
push
cdq
sub
fistp
fs
dec
or
rcl
jmp
dec
sub
sbb
sub
and
popa
add
adc
popa
cmps
sub
sub
popa
add
and
xchg
push
pop
adc
dec
es
dec
and
xchg
jle
movs
push
mov
adc
dec
test
adc
push
mov
add
outs
add
mov
add
mov
adc
fisub
add
out
xor
out
outs
out
cdq
push
es
scas
push
(bad)
sbb
mov
rcl
inc
(bad)
call
out
push
mov
jecxz
ret
push
imul
sbb
xor
sahf
add
jnp
add
pop
test
cmp
scas
pop
mov
push
and
pusha
cmp
popa
mov
test
sahf
sub
mov
rcr
pop
cmp
sahf
add
pop
sub
and
cmp
add
outs
fadd
(bad)
or
or
or
or
(bad)
push
add
sbb
repz
lods
ins
in
out
sahf
jmp
cmp
fnstcw
mov
sbb
and
fnsave
add
xor
cmp
repz
repnz
out
sahf
mov
sub
jns
cli
push
call
cmp
cmps
sbb
es
sahf
out
data16
push
xchg
cmp
repz
(bad)
ss
es
repz
stos
push
sahf
out
sahf
into
cs
outs
out
push
jns
out
sahf
pop
fidivr
mov
jle
push
push
out
mov
test
push
push
je
jmp
push
loope
repz
ret
push
ror
popf
out
push
mov
icebp
push
cmp
repz
sub
repz
pushf
out
sahf
fnstcw
mov
dec
jae
push
test
popf
out
and
jns
cmps
cdq
mov
xor
mov
cmc
mov
cmp
repz
int
lods
ins
out
cmps
repz
loop
popf
pop
popf
out
sahf
fnstsw
scas
sub
add
xchg
push
xchg
add
jns
fiadd
push
rcl
add
mov
adc
sahf
ja
push
repz
repz
repz
mov
cmp
into
retf
mov
push
stos
stos
cmp
repz
imul
sahf
out
out
push
push
fwait
fwait
pop
pop
jns
out
fcmovnu
cmp
mov
mov
jns
xlat
add
inc
out
sahf
out
mov
jns
cmps
cmps
addr16
jns
or
push
push
xchg
xchg
out
sahf
out
push
xlat
xlat
aaa
sahf
out
sahf
aaa
mov
ja
test
add
push
(bad)
(bad)
cmp
repz
dec
iret
iret
das
repz
repz
scas
scas
outs
outs
iret
repz
out
out
pop
pop
lahf
lahf
cmp
repz
pop
(bad)
aas
repz
repz
mov
cmc
cmp
(bad)
push
inc
push
and
and
pusha
adc
xor
jo
repz
jno
dec
push
sub
add
repz
cmp
cmp
repz
inc
and
adc
scas
mov
test
repz
and
cmp
dec
out
push
mov
retf
push
xor
stos
xchg
mov
push
mov
mov
push
push
push
loop
push
lods
sub
or
fs
mov
and
pop
push
add
push
xchg
cdq
mov
jbe
inc
inc
and
ins
or
push
inc
popa
push
data16
out
add
or
or
or
leave
inc
jb
push
out
add
adc
in
jns
adc
in
sbb
cs
cs
sbb
xchg
mov
jb
adc
adc
add
or
add
push
xchg
sbb
add
adc
and
add
add
add
push
rcl
add
push
bound
push
bound
or
inc
add
ret
inc
outs
mul
gs
mov
or
cs
sub
xchg
pop
bound
mov
sbb
dec
add
push
loopne
jae
test
out
xlat
iret
jae
cmp
(bad)
mov
xchg
jg
jmp
(bad)
jns
adc
(bad)
out
mov
push
add
push
clc
add
test
mov
add
or
daa
pop
lgdtd
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
(bad)
(bad)
mov
aad
mov
rcl
mov
sub
mov
sbb
jmp
mov
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
(bad)
(bad)
jmp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
(bad)
(bad)
call
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
call
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
(bad)
(bad)
inc
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
(bad)
(bad)
dec
or
and
or
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
(bad)
push
add
aad
mov
mov
movs
in
lahf
xor
mov
js
(bad)
(bad)
inc
or
mov
cmp
fs
add
(bad)
(bad)
(bad)
push
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
inc
fnstenv
adc
mov
mov
bound
ficom
gs
aam
idiv
outs
clc
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
inc
shl
jmp
outs
xor
mov
sar
add
in
add
pop
jmp
stos
leave
jl
fnstsw
add
daa
xchg
or
and
(bad)
(bad)
push
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
(bad)
inc
pop
mov
shl
mov
call
mov
cmp
jmp
rcr
adc
jae
or
test
fs
ds
or
or
push
in
push
std
popf
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
add
inc
push
(bad)
(bad)
(bad)
jmp
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
int3
dec
(bad)
(bad)
(bad)
jmp
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
(bad)
(bad)
dec
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
(bad)
(bad)
(bad)
inc
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
(bad)
(bad)
(bad)
call
ja
int3
add
mov
das
es
lds
or
sub
mov
(bad)
(bad)
call
xlat
ret
shl
sbb
ret
es
pushf
mov
ins
(bad)
mov
push
or
addr16
jb
push
or
adc
mov
(bad)
(bad)
push
or
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
(bad)
(bad)
(bad)
(bad)
sbb
int
mov
mul
ja
outs
ja
mov
out
cli
jo
(bad)
(bad)
jmp
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
(bad)
(bad)
(bad)
(bad)
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
dec
shr
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
(bad)
call
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
jmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
or
add
sbb
and
ret
push
sub
inc
inc
hlt
ja
xchg
inc
dec
or
ret
call
(bad)
(bad)
(bad)
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
js
(bad)
(bad)
(bad)
inc
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
add
call
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
jg
(bad)
push
mov
out
repz
gs
fisubr
inc
inc
sub
imul
(bad)
jmp
std
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
sub
stos
in
add
hlt
div
sub
xchg
sbb
xor
pop
nop
sti
(bad)
(bad)
(bad)
(bad)
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomp
push
dec
lock
jle
jmp
(bad)
sbb
adc
push
lea
(bad)
(bad)
inc
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
inc
vrcpss
push
pop
mov
mov
lea
push
cwde
dec
lock
ficom
test
loope
xchg
retf
les
jb
out
imul
(bad)
(bad)
(bad)
call
test
pop
adc
push
sbb
adc
and
inc
and
inc
(bad)
out
cli
jg
jl
or
push
fs
dec
mov
mov
and
cmps
xor
mov
jmp
sar
mov
adc
stos
and
leave
jmp
(bad)
(bad)
(bad)
(bad)
sti
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
(bad)
(bad)
(bad)
jns
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
mov
cmps
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fcos
(bad)
(bad)
jmp
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
(bad)
(bad)
(bad)
jmp
sbb
pop
push
(bad)
ins
pop
push
dec
sub
or
sub
jmp
fstp
adc
cwde
mov
nop
bound
xchg
push
(bad)
push
hlt
out
les
(bad)
out
aad
fdecstp
jmp
lea
inc
xor
mov
retf
jo
outs
sbb
sub
loope
fisub
lds
push
call
jmp
gs
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
(bad)
(bad)
(bad)
(bad)
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
pop
std
(bad)
push
xor
mov
jo
cmc
shr
add
mov
arpl
lods
(bad)
loope
(bad)
out
clc
ror
mov
stc
dec
xlat
loopne
adc
mov
jo
popf
mov
test
(bad)
(bad)
(bad)
jmp
add
ins
cmp
les
adc
sub
dec
add
sar
push
or
(bad)
(bad)
(bad)
(bad)
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
dec
(bad)
(bad)
(bad)
jmp
dec
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
(bad)
(bad)
(bad)
jle
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
(bad)
call
(bad)
sbb
mov
mov
(bad)
(bad)
call
shl
out
mov
shl
es
xchg
aas
mov
adc
pop
lock
inc
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
cli
(bad)
mov
xor
aas
mov
and
push
push
add
test
pop
mov
jmp
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
cld
mov
xchg
or
fs
sbb
sub
mov
jo
es
leave
in
push
ja
pop
sub
das
sbb
fild
sbb
(bad)
(bad)
dec
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
(bad)
(bad)
(bad)
jmp
inc
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
pop
pop
pop
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
call
push
std
nop
in
and
(bad)
mov
fsub
leave
pop
sub
and
(bad)
(bad)
(bad)
jmp
and
mov
sub
fidivr
sub
ds
sbb
sub
(bad)
push
lods
mov
call
pop
cmp
xor
jb
(bad)
(bad)
(bad)
jmp
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
fcomip
(bad)
push
xchg
push
inc
js
mov
(bad)
jnp
cs
fdivrp
cmp
mov
es
xchg
pop
in
ja
add
push
or
(bad)
jg
scas
bound
stos
sub
shr
aam
cmps
gs
fs
add
loopne
and
xlat
dec
pop
mov
outs
jns
dec
(bad)
(bad)
(bad)
(bad)
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
(bad)
(bad)
(bad)
inc
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
(bad)
(bad)
(bad)
dec
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
(bad)
(bad)
call
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
(bad)
(bad)
jmp
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
popa
hlt
pusha
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
call
sar
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
push
jg
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
(bad)
(bad)
(bad)
fst
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
(bad)
(bad)
(bad)
call
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
(bad)
(bad)
(bad)
inc
daa
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
(bad)
(bad)
jg
retf
lahf
lds
adc
leave
je
inc
int3
inc
ins
xchg
sbb
ror
mov
aad
inc
fcom
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
lds
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
(bad)
(bad)
push
fwait
jge
repz
dec
mov
or
(bad)
in
popf
or
dec
(bad)
(bad)
(bad)
inc
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
(bad)
(bad)
(bad)
call
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
(bad)
(bad)
(bad)
(bad)
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
ud0
(bad)
dec
push
mov
pop
dec
adc
mov
mov
fidivr
pop
call
in
xor
push
add
mov
stos
out
scas
pop
cmc
xchg
mov
push
xchg
bound
pop
imul
(bad)
jmp
lds
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
(bad)
(bad)
call
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
(bad)
(bad)
(bad)
dec
jo
lods
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
(bad)
(bad)
dec
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
(bad)
(bad)
cmp
mov
cmp
pop
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
cld
mov
clc
mov
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
call
shl
mov
(bad)
lds
xchg
lahf
mov
(bad)
mov
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
sbb
call
mul
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
mov
(bad)
(bad)
cmp
adc
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
(bad)
(bad)
(bad)
push
mov
cmc
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
(bad)
(bad)
(bad)
push
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
cmp
aas
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
(bad)
cmps
(bad)
call
inc
addr16
fwait
push
add
in
mov
dec
leave
xor
(bad)
(bad)
jmp
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
jmp
div
mov
clc
inc
add
and
push
cdq
inc
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
aad
in
jmp
(bad)
(bad)
(bad)
jmp
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
(bad)
jmp
or
xchg
movs
loope
mov
sub
dec
dec
cmc
scas
repz
(bad)
(bad)
push
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
mov
xchg
idiv
sub
sbb
repnz
and
sbb
pusha
jle
(bad)
(bad)
(bad)
push
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
(bad)
(bad)
(bad)
push
popa
stc
(bad)
and
push
mov
rol
outs
mov
push
or
adc
jmp
into
(bad)
(bad)
(bad)
jmp
je
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
(bad)
jmp
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
das
cli
(bad)
dec
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
stc
mov
mov
lock
imul
ss
test
(bad)
cs
mov
push
es
fsubrp
sahf
adc
mov
loope
into
cs
out
add
add
jecxz
neg
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
(bad)
(bad)
cmp
(bad)
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
call
imul
stos
pop
mov
jle
cmp
pushf
in
adc
(bad)
(bad)
(bad)
mov
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
mov
dec
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
data16
push
add
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
dec
sahf
fs
mov
jns
mov
push
xchg
rcr
mov
mov
sub
jl
(bad)
(bad)
(bad)
mov
nop
mov
adc
and
repz
inc
ficomp
fcmovbe
jge
fucom
(bad)
jmp
cli
jmp
aam
push
sub
push
imul
mov
in
adc
(bad)
(bad)
(bad)
call
push
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
(bad)
(bad)
(bad)
jmp
ror
aam
ror
mov
xor
mov
ins
fstp
stc
inc
xor
mov
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
shl
and
and
mov
movs
movaps
mov
or
or
mov
(bad)
(bad)
(bad)
dec
jmp
xchg
dec
adc
popa
sbb
cmp
add
jno
cwde
shl
mov
call
adc
jno
test
lahf
mov
xor
leave
(bad)
push
les
and
or
sbb
or
sub
(bad)
(bad)
call
imul
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
pop
(bad)
(bad)
inc
cmc
pinsrw
fld
adc
mov
jl
fstp
cli
jmp
repz
aam
gs
mov
test
into
mov
(bad)
(bad)
call
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
(bad)
(bad)
(bad)
fisub
rol
jae
add
pop
fisttp
jno
daa
add
mov
pop
icebp
dec
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
(bad)
(bad)
(bad)
call
(bad)
xlat
test
pop
mov
pop
cs
xor
mov
mov
(bad)
fcomip
mov
mov
sub
inc
cmp
(bad)
adc
jecxz
(bad)
call
or
xchg
cmp
pop
test
push
iret
or
add
(bad)
inc
sahf
mov
setae
mov
push
mul
pop
and
sbb
outs
(bad)
(bad)
(bad)
jmp
out
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
loopne
sar
mov
aad
(bad)
mov
push
fadd
les
repnz
sar
pop
call
mov
fisttp
ss
fmul
sbb
dec
test
lock
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
add
mov
(bad)
jmp
das
lds
or
sub
add
xlat
jmp
sub
sahf
mov
(bad)
(bad)
(bad)
jmp
mov
arpl
es
mov
or
ss
jb
test
add
adc
mov
sub
xchg
ror
repnz
(bad)
(bad)
(bad)
fsubr
mov
fcmovnu
and
aam
inc
push
fiadd
int
mov
(bad)
cmp
mov
loope
mov
ja
pop
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
ret
es
(bad)
(bad)
(bad)
call
pusha
push
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
(bad)
(bad)
(bad)
fidivr
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
int
push
xchg
push
ficom
and
addr16
jp
les
mov
sub
jg
(bad)
call
or
mov
sub
sbb
xor
ss
(bad)
jmp
cli
sub
push
ret
lods
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
(bad)
(bad)
(bad)
(bad)
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fcos
(bad)
(bad)
jmp
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
(bad)
(bad)
jmp
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
adc
and
call
shl
ret
fiadd
gs
scas
stos
(bad)
(bad)
(bad)
inc
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
jg
inc
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
pop
mov
xor
lahf
mov
mov
cmp
out
cmp
jns
push
dec
(bad)
(bad)
(bad)
mov
pop
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
inc
cmps
and
cmp
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
outs
test
dec
outs
cli
bound
pop
push
mov
lea
(bad)
xchg
(bad)
(bad)
(bad)
call
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
(bad)
(bad)
dec
lahf
push
push
adc
adc
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
(bad)
(bad)
fcomip
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
jmp
ja
das
jg
(bad)
(bad)
aas
jns
ss
mov
or
je
adc
xor
dec
lea
(bad)
(bad)
(bad)
jmp
out
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
js
(bad)
(bad)
jmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
(bad)
(bad)
push
mov
pop
adc
inc
and
shr
ja
adc
out
movs
add
(bad)
mov
inc
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
daa
(bad)
(bad)
(bad)
out
mov
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
jmp
out
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
(bad)
(bad)
(bad)
jmp
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
imul
pop
std
mov
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
mov
shl
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
add
xlat
std
(bad)
call
dec
mov
and
popf
mov
inc
mov
and
sbb
ins
(bad)
(bad)
(bad)
mov
sub
push
test
cwde
inc
jle
test
ror
cmp
hlt
(bad)
(bad)
(bad)
call
push
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
dec
sub
sub
xchg
mov
xchg
push
mov
cld
(bad)
(bad)
push
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
gs
(bad)
push
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
pop
call
and
loope
or
mov
jle
shl
imul
loop
inc
out
cmp
ja
fsub
push
jle
hlt
out
push
or
test
push
adc
xor
add
push
add
(bad)
(bad)
jmp
push
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
inc
loope
sbb
fs
xchg
push
or
cmp
(bad)
jmp
inc
pop
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
repnz
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
(bad)
(bad)
inc
cmp
xchg
mov
or
mov
xchg
cmp
pop
(bad)
(bad)
(bad)
call
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
call
aad
nop
mov
cmps
daa
aam
es
dec
dec
and
(bad)
jmp
out
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
(bad)
(bad)
(bad)
jmp
cmc
enter
mov
shl
div
pop
scas
jb
xor
jbe
dec
sub
(bad)
(bad)
push
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
scas
out
cli
(bad)
jp
mov
std
ins
mov
xchg
cli
fisub
clc
(bad)
jg
nop
jmp
ja
pop
push
repz
arpl
(bad)
(bad)
out
js
sub
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
add
adc
dec
dec
fs
(bad)
(bad)
mov
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
(bad)
(bad)
inc
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
(bad)
(bad)
(bad)
dec
push
clc
ror
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
(bad)
(bad)
push
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
jmp
sbb
out
fldcw
jp
add
out
(bad)
(bad)
(bad)
jmp
and
in
mov
hlt
popa
call
in
mov
jmp
ss
imul
(bad)
(bad)
(bad)
call
rol
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
repnz
(bad)
(bad)
inc
cmp
cmp
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
(bad)
(bad)
(bad)
mov
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
(bad)
(bad)
(bad)
jmp
fdiv
shl
add
mov
jo
shl
pop
lds
adc
(bad)
(bad)
(bad)
call
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
(bad)
jmp
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
stos
xchg
loopne
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
jecxz
push
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
(bad)
(bad)
mov
xor
jge
mov
pop
mov
mov
sbb
mov
fisttp
(bad)
and
sbb
sbb
out
(bad)
rol
(bad)
inc
pop
sbb
xchg
jb
test
and
into
stos
movs
outs
stc
scas
jmp
jl
(bad)
(bad)
jmp
outs
lods
adc
sbb
movs
jne
jbe
mov
inc
mov
(bad)
(bad)
jmp
jl
stos
mov
les
mov
sbb
mov
cmps
mov
mov
fisttp
(bad)
(bad)
push
dec
punpckldq
xlat
and
adc
test
xchg
pushf
xor
cmc
(bad)
mov
pop
pop
fidivr
mov
or
mov
mov
out
jmp
xchg
push
aaa
fdivp
xor
xlat
cmp
or
outs
mov
shl
dec
(bad)
mov
fucom
fbstp
pop
arpl
push
push
sbb
(bad)
(bad)
(bad)
(bad)
call
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
(bad)
(bad)
mov
add
sahf
sbb
call
inc
mov
and
(bad)
dec
mov
mov
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
(bad)
jg
inc
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
call
push
dec
xchg
lahf
les
xor
loop
push
dec
jg
outs
test
or
rcr
jge
rcr
lahf
ror
and
lds
sub
mov
(bad)
call
add
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
iret
(bad)
(bad)
(bad)
jmp
retf
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
clc
mov
fs
das
push
ret
ja
imul
setl
(bad)
(bad)
inc
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
out
(bad)
sbb
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
inc
nop
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
(bad)
(bad)
(bad)
inc
mov
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
(bad)
(bad)
(bad)
call
add
shl
pop
jns
psrad
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
hlt
pop
call
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
dec
(bad)
call
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
(bad)
jg
xchg
xor
out
mov
aam
push
stc
mov
in
pop
cmp
(bad)
jmp
cmp
xor
or
cmp
movs
add
inc
scas
cmc
test
and
mov
mov
sbb
push
leave
dec
ror
sar
add
push
movs
not
cmp
and
in
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
fcos
or
movs
rol
mov
xor
rcl
and
stc
popa
call
movs
pop
add
mov
ss
(bad)
(bad)
push
call
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
(bad)
inc
data16
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
(bad)
(bad)
dec
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
jmp
fdiv
inc
mov
bound
fwait
push
mov
xchg
xchg
cdq
xor
cs
push
es
mov
cld
mov
adc
push
ja
ss
adc
out
(bad)
(bad)
(bad)
(bad)
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
(bad)
(bad)
(bad)
(bad)
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
(bad)
(bad)
dec
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
jmp
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
(bad)
(bad)
(bad)
mov
dec
jnp
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
jns
dec
jp
mov
push
icebp
pop
jmp
add
js
out
sahf
adc
(bad)
(bad)
jg
gs
je
outs
outs
popa
jb
add
jb
popa
ins
and
fs
imul
outs
jb
sbb
ins
sti
(bad)
imul
imul
and
pop
mov
test
cmp
outs
ins
jo
imul
jbe
jae
mov
xor
cmp
(bad)
jmp
add
xlat
mov
dec
xchg
jg
loopne
mov
add
push
jbe
call
fs
push
lsl
or
out
push
lsl
clts
sbb
add
add
or
pop
add
push
aaa
add
mov
sbb
pop
add
add
out
sub
scas
add
mov
mov
pop
movs
cmp
pop
xlat
xor
adc
lahf
cmp
or
push
sti
xor
add
sbb
pushf
xor
xchg
sub
out
and
adc
and
popa
and
imul
mov
inc
sbb
push
out
loope
jne
push
jge
xor
sub
or
pop
cmp
sub
addr16
cs
add
pop
add
or
mov
test
(bad)
clc
push
add
sti
push
subps
jo
in
ja
(bad)
loopne
or
iret
xchg
ins
or
add
jae
out
shl
dec
cmp
out
adc
push
fdivr
inc
std
cld
fld
cmp
das
push
push
pop
aas
cwde
fwait
push
add
jbe
mov
add
push
add
sahf
out
out
add
shl
sar
clc
outs
pushf
push
or
jns
(bad)
push
adc
je
push
add
repz
int3
in
sbb
sub
adc
aaa
push
pop
add
inc
add
cmp
mov
sub
xchg
xchg
pushf
dec
xchg
cmp
ret
sar
add
outs
add
jae
test
(bad)
out
fimul
pop
pop
pop
add
mov
enter
or
cmp
repz
sub
pusha
repz
repz
xchg
mov
iret
enter
or
sahf
out
sahf
and
inc
push
ins
cmp
nop
mov
hlt
or
repz
shr
inc
push
pusha
add
iret
faddp
rcl
push
adc
popa
sbb
dec
push
pop
(bad)
rol
rcl
or
cmp
adc
sahf
xlat
pop
cmp
jg
push
push
adc
mov
sar
inc
jg
pushf
jae
pop
scas
add
fdiv
test
sbb
jne
shr
data16
add
pop
inc
mov
ja
out
adc
add
push
adc
test
cmp
push
xor
push
push
add
or
pop
loope
sbb
add
divps
outs
call
or
or
or
pop
sbb
loopne
adc
and
mov
xor
cdq
mov
lods
xor
daa
or
inc
sbb
adc
and
pop
and
pop
fwait
xor
xlat
sub
push
scas
add
pop
pushf
mov
xchg
pop
push
pop
das
out
loopne
pop
add
pop
out
ficom
test
out
sahf
cli
sti
cld
std
(bad)
(bad)
scas
add
dec
pop
test
add
repz
add
cmps
add
cmp
pop
push
push
in
fucomi
add
fild
mov
rcl
in
add
cdq
mov
std
iret
sti
ins
pop
add
dec
xor
xor
xor
xor
add
dec
aaa
adc
xchg
inc
add
add
inc
xlat
add
xchg
jns
out
clc
sub
inc
push
push
out
movs
mov
xor
hlt
or
push
cmp
xor
ss
retf
iret
adc
(bad)
(bad)
dec
xchg
mov
frstor
mov
jbe
mov
adc
fidivr
xchg
mov
inc
cs
rcl
lock
mov
pop
sar
(bad)
(bad)
call
cdq
jno
ror
jbe
outs
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
push
in
jecxz
ret
and
out
movs
dec
jne
inc
test
pusha
ins
retf
push
stos
add
xchg
or
dec
pop
sbb
repz
push
xchg
punpckldq
mov
loopne
adc
repz
sub
je
test
sahf
out
cmp
clc
and
push
test
out
cwde
enter
cmp
cmp
repz
jo
(bad)
in
jns
out
adc
sub
cmp
sahf
movs
enter
jbe
pop
repz
out
movs
int3
lock
inc
pusha
je
mov
repz
push
jbe
pusha
je
addr16
mov
enter
out
sahf
out
nop
mov
hlt
iret
repz
adc
xor
sub
clc
sub
push
je
cmp
out
mov
adc
xor
iret
repz
test
call
adc
jbe
dec
push
iret
repz
in
sbb
push
pop
sar
mov
iret
repz
inc
push
je
shl
repz
ds
outs
push
test
fdivr
sub
pushw
je
jns
iret
repz
in
sbb
mov
sahf
out
xchg
mov
add
iret
repz
mov
pop
and
ds
jle
ins
mov
shr
and
iret
repz
mov
call
and
fiadd
je
mov
repz
and
sbb
pushf
enter
push
push
iret
repz
push
js
shl
sahf
out
xchg
out
push
je
test
jns
jns
add
out
cmp
int
jns
xchg
mov
clc
sbb
cmp
repz
je
rcr
sahf
aaa
clc
or
xchg
push
dec
test
add
push
push
pop
nop
out
ds
mov
adc
out
push
push
mov
add
inc
push
nop
sahf
ja
out
in
cs
push
push
jns
shl
sbb
(bad)
repz
repz
pop
sub
adc
sahf
push
inc
pop
jl
jns
iret
repz
lock
push
push
inc
out
sahf
out
mov
fst
xor
aam
mov
xor
dec
jo
in
cmp
pushf
shl
ds
cmp
iret
repz
test
sahf
out
dec
push
dec
push
shl
add
pop
push
inc
jo
out
ds
movs
enter
push
push
js
cmp
fdivr
aaa
cmp
repz
pushw
js
(bad)
in
adc
jle
pusha
test
jns
add
ss
dec
push
mov
out
sahf
out
push
ins
pushf
(bad)
in
iret
repz
push
pusha
test
cmp
and
sahf
push
push
iret
nop
shr
outs
push
pop
clc
cmp
repz
int3
clc
sbb
out
sahf
aaa
out
pusha
xchg
(bad)
call
add
ds
pusha
test
add
push
push
je
ja
out
movs
enter
outs
push
lahf
out
sahf
mov
iret
repz
push
push
pop
test
clc
sub
mov
pushf
sahf
ja
out
in
adc
push
pop
add
out
xchg
(bad)
call
cmp
repz
cmp
(bad)
out
cmps
iret
call
pop
js
out
sahf
mov
inc
out
sahf
out
inc
pop
mov
lahf
call
cmp
ds
repz
lods
int3
loopne
dec
iret
repz
xchg
cmp
mov
repz
dec
ss
push
jo
repz
mov
sahf
ja
push
cmp
jns
jnp
lods
enter
push
push
out
sahf
out
xchg
mov
out
adc
push
pop
je
mov
push
lahf
out
in
add
mov
cmp
push
cld
sahf
out
sub
push
fs
push
lahf
out
(bad)
loopne
and
repz
repz
pop
je
mov
iret
lock
push
push
ins
shl
jns
xor
cmp
repz
mov
jns
iret
repz
sub
push
push
pusha
out
sahf
out
xchg
mov
fmul
repz
lahf
cld
sbb
push
inc
cmp
repz
lods
int3
call
out
out
push
xor
push
out
mov
call
ret
xor
push
fs
mov
loopne
cmp
in
or
push
xor
sahf
out
push
jo
pushf
mov
fdiv
or
push
inc
iret
repz
pop
jo
test
fdiv
cmp
or
push
push
ins
test
cmp
lods
int3
call
sahf
out
sahf
dec
push
out
idiv
adc
cmp
lahf
out
sahf
js
mov
cmp
repz
pop
push
push
jo
lods
iret
repz
repz
pop
mov
jl
fsubp
repz
hlt
and
push
jo
lahf
out
cwde
(bad)
in
or
outs
repz
repz
push
je
mov
iret
cld
and
push
push
sahf
lods
shl
adc
push
push
fs
repz
test
fdivr
iret
repz
push
dec
push
repz
in
out
push
lahf
out
sahf
pusha
test
cmp
repz
into
push
test
repz
sbb
push
pop
mov
sahf
aaa
clc
cmp
add
pop
push
push
mov
out
test
call
lahf
out
sahf
pusha
jl
shl
adc
iret
repz
mov
mov
clc
sbb
test
mov
(bad)
loopne
imul
pop
js
sahf
out
xchg
mov
in
or
repz
pop
push
push
pop
mov
iret
call
pusha
jl
out
sahf
mov
outs
ds
sahf
out
pusha
nop
mov
in
repz
lahf
clc
adc
push
dec
push
cmp
fdivr
sbb
ss
out
jns
mov
push
mov
jl
out
(bad)
in
jb
push
iret
repz
dec
jl
int3
hlt
sbb
es
je
int3
lock
sbb
ss
fs
mov
fadd
ds
repz
movs
int3
clc
sbb
sahf
out
push
push
je
mov
repz
ja
push
push
je
clc
cmp
cwde
mov
push
fucom
jns
dec
jo
rol
pop
sahf
ja
out
mov
or
push
push
jl
cmp
icebp
jns
sbb
push
push
sub
jl
push
mov
ret
out
test
fsubr
jle
xchg
repz
cmp
push
lahf
out
push
mov
cmp
repz
mov
jns
ja
push
and
in
sbb
xchg
fsubp
repz
loopne
add
js
sahf
out
cwde
sar
mov
cmp
adc
nop
enter
es
mov
add
mov
lahf
out
push
or
inc
xchg
mov
in
mov
push
sbb
sbb
out
out
aam
and
out
sahf
and
cmp
repz
int3
hlt
jns
ja
sbb
out
mov
out
adc
mov
ins
iret
repz
mov
repz
mov
and
call
push
dec
jo
ds
repz
shr
nop
dec
out
sahf
out
pusha
mov
sub
dec
add
add
add
sub
sub
movs
cmps
test
add
add
sbb
or
shl
add
adc
sbb
mov
les
add
rol
xor
mov
das
mov
add
(bad)
xchg
add
and
add
xchg
push
fcomp
mov
add
add
fstp
and
popa
add
dec
add
es
add
cmp
daa
daa
daa
mov
add
daa
daa
daa
(bad)
enter
movs
repnz
hlt
pop
add
in
fs
add
push
pop
pop
cdq
sbb
pop
add
pusha
cmp
popa
bound
add
xchg
xchg
xchg
xchg
pop
jbe
popa
push
add
mov
ja
add
sbb
cmp
in
adc
push
pop
add
cmp
jne
ja
xchg
xchg
xchg
js
jp
mov
jge
add
add
pop
rcr
cs
adc
std
mov
movs
mov
cwde
(bad)
sbb
out
xchg
frstor
pop
add
imul
add
das
cli
(bad)
call
adc
adc
adc
adc
adc
daa
sbb
sbb
and
daa
sub
(bad)
jmp
popa
daa
bound
and
dec
and
dec
and
and
dec
mov
adc
dec
popa
(bad)
(bad)
(bad)
call
push
aad
and
jno
(bad)
loopne
stos
fisubr
fisubr
fidiv
or
inc
ds
mov
and
idiv
xor
jmp
or
dec
adc
(bad)
sti
(bad)
repz
and
fisub
jp
(bad)
test
stc
(bad)
jle
shl
es
xchg
add
std
pop
add
add
add
sub
jmp
mov
enter
loop
pop
(bad)
inc
add
add
add
add
add
add
add
mov
cmp
ds
cmp
push
push
fs
repz
mov
fdivr
push
add
in
test
cs
aaa
pop
inc
je
fcmovnbe
outs
das
mov
pushf
daa
mov
les
jae
out
fdiv
sub
sbb
xor
dec
pusha
js
nop
or
fst
movs
add
out
scas
mov
cld
pop
adc
push
inc
jg
mov
aaa
push
push
add
add
es
das
add
rcr
mov
push
pushf
jl
out
mov
in
adc
push
inc
pop
jo
iret
repz
mov
adc
cmp
mov
je
fidiv
test
push
fdiv
paddsb
add
dec
sbb
xor
out
sub
dec
push
dec
nop
repz
pop
push
je
mov
repz
bswap
ins
mov
pop
add
fistp
xor
sar
setg
jmp
mov
ins
inc
push
mov
jo
test
rcr
mov
push
call
mov
cmp
push
cmp
push
dec
fs
jl
xchg
pop
xchg
cmp
shr
fwait
in
out
(bad)
pop
call
adc
popf
idiv
push
fs
js
cmp
pop
push
jg
neg
pop
lods
push
lahf
mov
fmul
push
xlat
scas
clc
push
out
adc
push
imul
push
outs
push
push
aas
fs
imul
fistp
mov
mov
imul
push
loopne
hlt
push
add
mov
push
cvttps2pi
outs
inc
push
or
push
push
scas
fs
lahf
je
jb
jo
je
xor
mov
or
ret
push
pop
in
push
iret
mov
pop
sbb
xor
push
jns
lds
push
das
pop
push
push
outs
out
nop
inc
dec
lock
arpl
or
cmp
out
push
push
out
fld
push
addr16
js
movs
adc
daa
dec
jnp
fnstcw
smsw
sbb
outs
(bad)
call
and
push
and
and
and
and
sub
arpl
inc
and
and
sub
das
and
lock
(bad)
push
and
aas
and
inc
and
dec
and
(bad)
(bad)
(bad)
cmp
and
pop
and
popa
and
and
imul
ins
and
jae
and
ud0
bound
and
xor
das
clc
ss
and
inc
and
dec
pop
sti
aaa
mov
es
pop
and
jg
adc
fisub
sub
sub
aaa
cmp
cmp
aam
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
add
add
arpl
imul
ja
jnp
add
shl
mov
fwait
xchg
cmp
add
retf
std
mov
add
rol
sub
push
xor
xor
xor
call
add
add
adc
cmp
cmp
cmp
add
outs
cli
cmp
jp
inc
add
inc
call
icebp
fwait
jle
sbb
dec
add
dec
loop
dec
add
dec
pop
std
cmps
pop
adc
push
add
push
mov
add
add
cli
mov
pop
repnz
pusha
add
mov
pop
and
pop
add
data16
add
cmc
or
add
imul
outs
inc
add
jb
jmp
add
jne
jbe
ja
add
jp
jnp
call
mov
jle
add
add
add
and
add
add
add
add
(bad)
(bad)
jmp
add
sub
add
add
add
add
add
xor
add
add
add
add
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
inc
add
inc
add
add
inc
add
dec
add
(bad)
(bad)
(bad)
dec
dec
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
jmp
(bad)
pop
add
add
add
popa
add
arpl
add
add
push
add
push
imul
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
xchg
inc
jns
jp
jnp
jl
jge
jle
or
adc
adc
cmc
mov
repz
shr
cld
stos
xchg
loop
or
add
inc
adc
fisubr
sbb
fsub
add
inc
addr16
(bad)
(bad)
jmp
mov
adc
push
push
mov
call
out
into
mov
cmc
sub
(bad)
(bad)
inc
xchg
inc
xor
fcomp
inc
mov
xlat
pop
mov
adc
(bad)
push
std
mov
cmps
and
mov
bound
inc
rcl
es
(bad)
mov
pop
adc
(bad)
push
(bad)
(bad)
(bad)
call
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
(bad)
(bad)
(bad)
jmp
outs
mov
lea
cli
inc
popa
popf
ins
or
in
inc
jmp
dec
fimul
dec
mov
mov
cli
daa
mov
aam
sbb
aam
in
(bad)
(bad)
call
mov
les
hlt
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
(bad)
(bad)
(bad)
dec
or
jge
out
call
pop
test
loopne
sub
adc
add
cmp
xor
repnz
xchg
rol
add
push
dec
dec
push
push
push
add
push
cmp
inc
push
and
and
bound
cdq
int
(bad)
push
pop
push
adc
jmp
(bad)
inc
add
xchg
cmp
cwde
fstp
and
arpl
mov
fwait
cmp
rcr
cmp
in
mov
mov
xlat
ja
push
arpl
and
jae
fidiv
and
inc
pop
mov
arpl
aas
adc
push
fidivr
js
inc
pop
xchg
cmps
outs
dec
or
jae
fs
pop
mov
fidiv
add
pop
add
fiadd
or
add
(bad)
and
add
mov
daa
add
popa
add
sub
pop
xchg
push
imul
sub
add
aas
add
leave
pop
and
inc
and
aas
add
ins
xor
aas
cmps
stc
or
fmul
mov
mov
aaa
popa
cmp
sub
pushf
adc
cdq
popa
inc
sti
inc
pop
or
pop
dec
add
loop
and
add
jmp
adc
add
add
pop
add
into
sti
fdivr
add
push
pop
fs
sub
add
inc
push
repnz
imul
inc
(bad)
(bad)
(bad)
dec
test
add
add
(bad)
jg
inc
push
push
inc
inc
push
inc
xor
xor
dec
dec
inc
pop
sbb
adc
out
sub
out
cmp
fadd
or
lahf
out
sahf
dec
js
aam
adc
xor
cmps
out
bound
das
pop
(bad)
into
cmp
inc
pop
inc
pop
das
add
add
ja
add
int3
shl
add
sub
test
xchg
addr16
sub
inc
jae
sti
rdtsc
add
or
or
xchg
mov
cli
mov
cmp
push
inc
inc
dec
add
push
push
add
xor
getsec
pop
aaa
out
xor
push
sub
aaa
push
push
stc
cmp
repz
loope
add
mov
lock
add
cmp
shl
or
cmp
add
(bad)
call
xor
bswap
aas
inc
mov
mov
add
(bad)
dec
mov
shr
(bad)
(bad)
(bad)
in
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
outs
lahf
pop
or
cmp
add
(bad)
(bad)
inc
xor
or
cmp
pop
(bad)
aaa
test
dec
mov
ja
call
(bad)
(bad)
jmp
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
add
xor
push
(bad)
(bad)
(bad)
dec
inc
shl
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shr
(bad)
(bad)
(bad)
(bad)
out
push
fisub
loope
shr
bound
pop
mov
ins
popf
pop
or
cmp
push
(bad)
(bad)
(bad)
inc
test
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
jmp
push
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
test
gs
push
neg
inc
pop
lahf
push
inc
dec
push
dec
xor
mul
std
and
jae
push
xor
sbb
push
bound
std
mov
std
mov
inc
sub
sbb
push
and
mov
data16
ss
and
sbb
or
push
sbb
cdq
cdq
cdq
inc
cmps
mov
ss
clc
(bad)
(bad)
mov
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
(bad)
(bad)
dec
sub
cmp
jmp
jnp
push
loope
pop
stos
jb
sbb
and
test
lahf
inc
or
ja
sub
push
into
repz
sbb
push
adc
xlat
imul
(bad)
cmp
dec
das
mov
xlat
add
jns
and
enter
out
mov
push
adc
sahf
and
xor
cmp
jne
out
sub
jmp
pop
push
push
js
push
xor
out
cmp
xor
mov
xor
add
test
pusha
jne
stc
pop
pushf
add
loopne
sbb
push
pop
aaa
out
push
add
aas
pop
out
pop
addr16
pusha
addr16
comiss
push
xlat
and
ja
inc
push
pop
jae
mov
aas
pop
pop
pop
scas
mov
cmp
pop
aaa
(bad)
jns
and
inc
push
ins
retf
sti
xor
cmps
(bad)
xlat
repz
push
out
cmp
scas
outs
jns
cmp
mov
push
dec
fadd
jo
rcl
or
dec
xor
sbb
add
(bad)
rol
aaa
xlat
out
inc
aas
push
aaa
ja
pusha
add
pop
pop
cmps
outs
pop
pop
push
or
mov
jecxz
jnp
pop
add
add
push
pop
or
or
add
cli
jg
mov
cmp
add
add
add
add
adc
fidiv
lods
adc
(bad)
push
inc
push
adc
pop
and
xor
inc
mov
adc
xor
xor
(bad)
call
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
(bad)
(bad)
(bad)
call
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
movs
movs
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
shl
(bad)
(bad)
call
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
int
add
pop
gs
inc
mov
push
pop
popa
jno
and
or
or
push
push
lock
shl
xor
and
add
imul
adc
mov
iret
sar
loopne
xor
dec
jo
into
repz
shr
repz
cmps
push
cmp
xchg
shr
iret
repz
dec
push
sahf
out
sbb
ins
add
shl
mov
xor
and
cmp
add
push
into
call
push
cmps
les
(bad)
movzx
mov
or
into
cs
xor
mov
or
xor
lock
pusha
pushf
(bad)
call
in
out
cmp
add
cli
je
add
jns
ret
daa
jne
sub
shl
sub
fdivr
dec
jo
push
ins
add
pushf
dec
push
sub
cmps
ins
enter
sbb
push
call
xlat
shr
add
cs
push
push
call
sub
test
dec
push
mov
outs
and
dec
push
dec
fdivr
push
aaa
xor
imul
in
es
mov
addr16
ds
push
in
push
nop
pop
js
push
and
sub
es
push
pop
push
and
mov
cmc
(bad)
mov
push
cld
dec
cmp
shl
adc
xchg
cmps
int3
push
pop
adc
dec
jbe
xlat
ins
(bad)
data16
xor
mov
out
loopne
outs
sbb
xor
push
pop
add
jo
or
mov
pop
sti
fcmovu
pop
es
test
push
xchg
dec
push
pop
iret
cmp
adc
inc
out
and
sti
fisubr
pop
push
sub
ja
jo
push
mov
out
mov
add
jp
cmps
mov
mov
js
xor
fild
xchg
clc
cmps
out
loopne
mov
or
xor
clc
fdivr
pop
pmaxsw
movs
(bad)
pusha
jle
(bad)
xor
loopne
aaa
ss
push
cs
idiv
lods
hlt
dec
shl
clc
fistp
out
push
test
mov
jl
pusha
(bad)
push
pop
mov
data16
lock
pop
pop
scas
cs
mov
ins
pop
mov
sar
cmp
push
mov
pop
pop
out
mov
xor
mov
loopne
movhps
push
adc
mov
lods
push
push
cmp
js
push
pop
int3
scas
jge
cmp
adc
mov
jge
pop
xchg
rol
cmp
pusha
lahf
cmps
push
push
loope
idiv
test
out
fidiv
mov
mov
movs
push
fdivr
pop
pop
jle
sahf
adc
pushaw
out
or
faddp
ins
pop
inc
cs
shr
xor
push
pushf
dec
mov
fiadd
scas
sub
or
sbb
mov
outs
pop
es
mov
je
cs
mov
mov
push
push
fidivr
sub
cld
cs
ror
out
mov
aam
adc
mov
push
inc
push
hlt
es
cmp
xchg
push
ja
jl
int3
shl
loop
fdiv
adc
mov
out
xchg
mov
mov
jnp
cmp
push
push
cs
fsubr
lock
faddp
(bad)
into
and
ds
cs
out
mov
mov
scas
int3
out
je
sub
xor
and
xchg
jo
and
test
mov
jle
mov
pop
out
sbb
cwde
daa
mov
enter
jnp
xor
pushf
iret
(bad)
cmp
pop
sti
fidiv
sub
push
jbe
jge
call
(bad)
idiv
clc
into
sub
cmp
js
nop
loopne
loop
dec
aam
sahf
mov
js
call
scas
jl
in
lods
ss
push
mov
outs
adc
pop
sbb
pop
push
push
push
add
inc
pop
loopne
xlat
loope
xor
xchg
add
fidivr
out
mov
mov
push
sub
out
imul
push
cwde
ds
dec
scas
cmp
push
enter
dec
push
inc
push
xchg
lahf
sar
sahf
int3
pop
pushf
(bad)
and
inc
or
fidivr
pop
push
loopne
inc
xchg
adc
test
jle
mov
push
pusha
js
out
sbb
push
add
test
add
fisubr
into
dec
push
dec
test
in
icebp
cs
push
lods
inc
test
mov
(bad)
fmul
sbb
loope
or
mov
pop
outs
sub
inc
cs
out
adc
sub
push
mov
lods
daa
das
fnstsw
pop
ss
ja
loopne
add
sbb
jle
in
aam
in
iret
jmp
das
out
xchg
mov
faddp
xor
inc
cmps
push
mov
push
cs
sub
push
mov
mov
sbb
dec
es
xchg
out
jns
(bad)
lock
push
inc
and
sar
mov
ror
mov
loopne
ffree
dec
cs
adc
mov
xor
sar
(bad)
adc
jp
sbb
jbe
fiadd
cmp
jo
sub
or
push
pop
mov
sbb
push
sbb
ret
jnp
int3
pop
pushf
xchg
aad
xchg
ss
sub
pushf
scas
push
test
(bad)
jl
hlt
push
cmps
es
jnp
pop
mov
cmp
test
cs
xchg
push
sbb
sar
(bad)
jo
pop
mov
sysret
pop
pop
out
dec
mov
xor
mov
ret
ret
or
outs
shl
sahf
xchg
mov
and
sbb
addr16
add
fiadd
push
pop
push
cs
loopne
push
cs
ja
(bad)
pop
sbb
sbb
cmp
push
sub
dec
push
js
imul
xlat
mov
data16
ins
call
loop
jl
push
and
ins
outs
(bad)
sysret
out
pop
les
call
pop
cmovle
div
es
mov
push
loopne
sbb
push
jle
test
and
sbb
cmp
add
cld
loope
neg
mov
shl
loopne
call
cwde
push
shl
sahf
sar
dec
sub
movs
push
call
loopne
addr16
push
push
rcl
loopne
popa
pop
xchg
sbb
or
pop
push
pusha
jbe
ds
push
push
push
xchg
mov
pushf
cmp
out
jecxz
push
jle
jle
inc
shl
add
dec
rcr
ret
cmp
push
add
mov
in
push
in
(bad)
xlat
cmp
push
sahf
pusha
pop
call
shr
das
xlat
js
pop
cmp
xor
or
sub
mov
out
pop
pop
cmp
cmp
inc
mov
or
fs
cmp
cld
cmps
jl
iret
ret
jmp
mov
ds
test
aam
loopne
enter
ja
push
test
ds
sahf
cmp
lock
add
xor
call
xchg
loopne
loope
fisub
into
mov
out
mov
(bad)
sahf
push
push
(bad)
push
mov
mov
lock
mov
mov
pop
adc
mov
mov
or
loope
shr
mov
ds
faddp
ror
(bad)
adc
imul
mov
pop
shr
ins
pop
clc
cmp
inc
cmp
mov
test
or
cmp
cld
data16
dec
ss
mov
out
sbb
push
loopne
fcom
ret
xchg
jnp
mov
js
outs
enter
push
fidivr
pop
outs
mov
mov
lock
(bad)
test
cwde
loope
(bad)
ja
enter
push
mov
pop
pop
out
push
push
scas
je
sub
enter
fidivr
adc
rcr
(bad)
enter
ds
and
xor
js
push
in
js
jmp
fdivr
loopne
pop
or
fidivr
push
fsub
push
or
push
xor
xchg
(bad)
dec
int3
fsubr
or
or
jl
sub
test
xor
pop
mov
(bad)
sbb
cmp
push
pop
faddp
jnp
mov
pop
jle
push
add
cmp
push
mov
shr
pushf
push
push
cs
inc
mov
dec
sub
ds
rcl
data16
mul
or
pusha
jbe
push
sub
pop
sbb
in
ss
sar
jo
jecxz
loopne
and
test
sar
out
dec
test
pop
pop
mov
cwde
pop
push
out
rcr
(bad)
add
out
jns
lock
pushw
ja
push
fisub
add
mov
or
mov
push
cmps
dec
cmp
inc
data16
aam
pop
xchg
mov
xchg
(bad)
push
enter
iret
loope
adc
into
lock
cmps
test
cmp
and
mov
pusha
lock
add
mov
xchg
lahf
add
ja
in
jbe
inc
ss
pusha
inc
aaa
push
mov
sbb
pop
out
mov
es
push
lods
pop
in
loopne
cmp
js
add
enter
cs
adc
ds
sahf
pushf
push
push
out
sbb
(bad)
pop
inc
dec
sbb
pop
data16
mov
pop
pop
dec
out
xor
cs
test
hlt
cmovle
pop
es
dec
xchg
xchg
xor
inc
sysret
out
out
cmp
dec
sahf
inc
fidivr
js
ds
mov
mov
cld
mov
or
ds
mov
jnp
loopne
cmp
addr16
dec
xchg
xor
lock
mov
push
cwde
jno
jno
ss
and
push
push
popa
in
jo
sbb
js
cmps
pop
out
lods
jo
mov
fimul
add
jl
out
push
in
sahf
mov
clc
push
fsubp
mov
(bad)
push
add
rcl
inc
xchg
ds
jns
fsub
and
shl
mov
jle
mov
shl
fs
nop
es
ss
cmp
xchg
push
cmps
data16
mov
push
faddp
ins
scas
ins
dec
cmp
push
or
out
das
mov
sar
int3
mov
ret
add
loope
dec
outs
cmp
imul
outs
clc
div
push
fdiv
outs
clc
cs
sahf
cmp
cmp
mov
push
in
xchg
jle
aam
test
shl
cmps
push
in
mov
cmp
cmp
call
push
adc
out
out
nop
outs
push
mov
ficomp
mov
es
sub
out
mov
fisub
push
push
push
mov
lock
test
inc
mov
lock
rcr
and
ins
inc
add
hlt
dec
ins
jbe
scas
jl
mov
(bad)
div
out
push
xchg
clc
data16
iret
loop
scas
pusha
push
ror
scas
adc
sahf
xchg
test
call
scas
les
cs
push
xor
mov
adc
into
sbb
loop
outs
mov
les
mov
push
faddp
jnp
jl
js
dec
inc
(bad)
in
sbb
fdivp
push
fcom
push
sbb
neg
enterw
hlt
cmps
sbb
nop
out
loopne
sbb
cmps
inc
xchg
and
mov
(bad)
jnp
mov
cmps
sbb
dec
push
nop
xor
cmp
push
cmp
fidiv
sar
and
rcl
push
(bad)
out
mov
push
sub
inc
es
pop
pop
scas
mov
cwde
mov
pop
mov
mov
dec
cmps
jbe
scas
sar
mov
sbb
dec
jbe
mov
(bad)
enter
jecxz
dec
es
inc
mov
xchg
fs
fimul
outs
test
or
xchg
dec
addr16
lock
cmp
cld
pop
idiv
pop
dec
outs
adc
push
sbb
jo
faddp
lds
push
dec
pusha
cs
mov
addr16
mov
push
mov
add
push
fcomp
sbb
inc
push
dec
push
cmp
push
dec
test
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
test
push
nop
cmc
aaa
add
icebp
clc
bnd
xor
les
cld
push
out
mov
cld
push
enter
aaa
(bad)
jnp
or
add
aas
neg
mov
or
ss
xchg
fidivr
out
sbb
sbb
in
out
jns
out
aam
xor
ss
iret
repz
cmp
push
fdivr
xor
xor
sbb
jo
es
pop
fdivr
push
cmp
in
sahf
out
cmp
cmp
cmp
sbb
mov
pop
repnz
push
call
mov
(bad)
in
mov
mov
push
and
sahf
out
mov
fadd
ror
push
ds
repz
cmp
inc
add
inc
pop
inc
mov
mov
fldcw
aam
loopne
cmp
pushf
(bad)
fwait
iret
repz
cmp
xor
js
push
add
sahf
out
dec
xor
add
adc
ds
rcl
mov
idiv
out
xor
add
and
sub
popf
cs
mov
push
inc
jbe
inc
mov
sahf
mov
(bad)
out
or
add
push
dec
push
push
jp
mov
push
fisubr
repnz
push
add
out
iret
leave
ins
xchg
mov
retf
repz
push
xor
jb
jns
cmp
mov
mov
fnstsw
in
das
adc
add
push
inc
pop
stos
(bad)
jbe
jl
adc
imul
gs
xor
(bad)
mov
ins
ins
pop
inc
gs
outs
imul
arpl
jae
jb
outs
data16
data16
ins
popa
je
outs
outs
ds
pusha
pop
dec
inc
cmps
ins
or
popa
addr16
outs
js
ja
adc
imul
ins
sti
push
push
outs
push
gs
jae
fs
push
jle
outs
mov
mov
inc
inc
(bad)
adc
jb
inc
cmp
pusha
mov
addr16
inc
ins
outs
inc
sub
popa
outs
out
(bad)
push
scas
pop
xor
jns
inc
lock
push
outs
lds
outs
je
ins
fdecstp
(bad)
ins
sub
int
jb
imul
xor
jo
popa
inc
cmps
scas
pop
dec
jae
outs
ja
outs
ret
ss
and
ins
gs
add
inc
dec
inc
daa
adc
pop
push
adc
gs
jb
add
and
gs
adc
push
jo
mov
sub
add
dec
gs
gs
inc
and
xchg
sbb
outs
fs
outs
xchg
push
dec
inc
push
mov
je
imul
or
push
scas
js
push
sbb
data16
gs
popa
sbb
mov
adc
sbb
call
adc
loop
das
inc
je
xor
imul
mov
mov
or
jnp
inc
mov
rol
mov
xor
mov
and
push
push
sub
sub
inc
mov
add
push
gs
push
add
ins
lea
or
cmp
cli
dec
jo
dec
xor
cmp
mov
jno
mov
mov
xor
cdq
xchg
jge
inc
pop
arpl
cmp
mov
or
shr
sahf
inc
popa
inc
ja
and
pop
mov
inc
in
jbe
pop
dec
push
dec
inc
push
dec
cs
dec
dec
mov
ins
mov
add
jo
mov
xor
xchg
sbb
or
mov
inc
leave
and
or
and
test
mov
and
dec
dec
dec
push
ja
jae
out
arpl
xor
xchg
dec
call
cwde
(bad)
push
outs
mov
push
test
push
sub
jle
out
lahf
xor
fisubr
outs
ins
outs
popa
test
jg
sub
gs
add
je
outs
fs
ins
jo
or
test
mov
out
fwait
push
cmp
gs
add
adc
out
adc
inc
push
cmp
aas
int3
fidivr
and
add
arpl
jo
and
inc
ins
bound
arpl
outs
and
mov
(bad)
jg
jo
imul
push
imul
ins
jo
ins
xor
jbe
std
mov
and
cmp
xor
sub
xor
xor
xor
aaa
cmp
xor
stos
lea
xchg
inc
and
inc
add
add
inc
add
dec
add
push
or
int3
in
jle
dec
add
cs
sub
push
dec
xor
out
xor
or
inc
inc
inc
dec
ucomiss
push
or
push
out
int3
int3
inc
adc
push
xor
push
push
pop
ss
push
xchg
ins
lods
sbb
push
push
es
cmp
xor
imul
push
jnp
dec
xchg
push
mov
data16
or
add
and
aaa
mov
xor
or
jl
mov
mov
add
add
(bad)
and
inc
sbb
add
or
xchg
sbb
in
jnp
ins
inc
add
sub
lahf
daa
clc
pop
rol
mov
mov
inc
push
mov
inc
pop
pop
mov
add
call
dec
int3
fadd
cld
jg
clc
aas
push
popf
cdq
popf
das
pop
jmp
loop
les
push
add
cld
or
push
adc
shl
(bad)
je
pop
ins
xor
mov
mov
or
push
mov
pop
jo
pusha
ror
out
mov
rol
mov
pop
or
lss
jg
int
(bad)
jae
add
sbb
ficomp
cs
cmp
out
cmp
sbb
je
loopne
pop
lock
add
pusha
push
rcr
pop
push
xor
jecxz
loop
pop
pop
add
xor
push
pop
std
cmp
js
stos
add
jl
sar
pushw
jbe
jg
jg
loope
in
lock
inc
add
retf
and
aas
add
mov
push
mov
adc
cmp
sahf
push
xor
jnp
fadd
push
mov
loopne
inc
pop
jl
daa
push
clc
repz
(bad)
cmp
(bad)
dec
add
add
into
hlt
fidivr
or
cmp
or
retf
(bad)
pushf
jnp
aas
dec
pop
outs
daa
or
add
bswap
fwait
std
push
clc
lock
fcmovb
sbb
jmp
jnp
pop
push
inc
pop
outs
push
shl
adc
movs
pop
pusha
mov
shl
add
not
pop
in
int
jae
lods
sub
add
cmp
pop
das
aas
pop
add
jae
dec
adc
mov
test
cmp
test
fdivr
push
pop
das
aas
addr16
rol
push
or
pusha
pop
cmp
fmul
pop
ss
jno
push
add
push
pop
sub
das
add
cmp
push
sbb
cmp
loopne
jl
push
sub
inc
add
inc
add
rol
inc
xor
sbb
sbb
push
push
sbb
add
add
push
add
push
mov
(bad)
push
xor
not
clc
ss
int
dec
sbb
cmp
sbb
or
test
shl
loopne
shl
stos
stos
and
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
jg
or
add
add
push
jl
outs
not
fs
adc
je
or
jae
pop
std
jle
std
outs
add
add
sbb
add
ins
add
jnp
fimul
push
addr16
or
push
(bad)
int3
in
mov
sub
mov
sbb
push
inc
sbb
dec
cs
adc
call
inc
pop
jmp
jbe
add
sbb
xor
sbb
inc
push
or
lods
fcom
push
aaa
sbb
cwde
sbb
out
xchg
mov
add
and
cdq
cdq
cdq
or
cs
push
pop
cmp
push
cmp
or
cmp
push
mov
mov
add
cmp
das
add
adc
sahf
add
cmp
xlat
ror
ds
pop
data16
outs
out
pusha
xlat
xchg
or
iret
sti
cdq
sbb
sbb
rcr
out
loopne
sub
push
jg
inc
rol
xlat
ds
xchg
sar
scas
sub
xor
cmps
cs
or
xlat
inc
jns
push
aas
sbb
jecxz
xor
sbb
retf
push
mov
sub
xor
sub
(bad)
(bad)
repz
inc
cmp
int3
loope
pop
es
into
rcl
or
ror
and
ror
xor
sbb
mov
fisttp
adc
add
shl
das
in
sub
aad
sbb
mov
xchg
ret
push
xor
jmp
aaa
xor
outs
add
scas
and
push
enter
fwait
adc
das
data16
jb
(bad)
fisub
inc
es
out
jb
jno
xor
add
add
add
add
add
add
inc
add
add
add
push
adc
and
inc
fidiv
sbb
repnz
add
and
fidivr
add
or
pop
add
ss
push
fmulp
sbb
arpl
xchg
ror
sub
add
bound
rcr
jg
data16
pop
add
or
call
push
rcr
cmp
mov
outs
dec
add
pop
or
and
sbb
xchg
cmp
mov
sbb
cdq
cdq
sbb
cs
xchg
mov
push
dec
mov
dec
sbb
cli
adc
mov
mov
cdq
loopne
xor
jmp
test
mov
jbe
and
xor
sbb
and
(bad)
aas
arpl
cmp
aas
repz
int3
or
imul
push
or
pushf
push
cmp
cdq
cdq
add
mov
call
push
sahf
inc
outs
fidiv
xlat
and
push
out
sbb
cli
ds
sub
rol
rol
dec
(bad)
pop
mov
and
push
sub
inc
fwait
rcl
data16
or
cdq
mov
sub
mov
push
push
retf
add
(bad)
jg
dec
aas
add
mov
(bad)
xor
js
out
mov
or
push
aas
(bad)
fst
rcr
xlat
fwait
sbb
push
cs
ror
fild
inc
add
ror
inc
add
rcl
idiv
into
pop
into
and
cmp
dec
mov
int3
and
add
push
(bad)
(bad)
bound
jo
jbe
push
daa
xchg
push
push
push
ja
out
jae
ss
push
jae
out
stos
imul
xchg
add
dec
outs
add
jbe
push
push
add
or
sub
push
xor
das
rcr
addr16
mov
add
dec
outs
not
dec
sbb
pop
xchg
sbb
add
mov
xor
or
in
jb
adc
pop
sub
dec
addr16
ret
daa
out
pop
repnz
mov
jg
push
or
and
inc
lahf
es
data16
cmp
sbb
imul
loop
and
push
push
push
pop
lahf
mov
add
test
das
pushf
lock
pusha
xor
push
and
retf
sub
push
pop
in
add
sbb
outs
or
sbb
sbb
push
popa
push
add
dec
aaa
aad
cwde
push
test
mov
pop
popa
add
iret
sbb
call
push
add
fs
test
push
into
loope
push
pop
pop
sbb
loop
iret
pop
mov
sub
xor
addr16
jmp
stos
div
comiss
pop
dec
ds
add
adc
xor
adc
and
mov
scas
adc
mov
jbe
test
addr16
pop
mov
aaa
or
jbe
repz
mov
maxps
pusha
out
jne
retf
lahf
ja
xchg
push
xor
pushf
dec
scas
mov
push
iret
push
adc
add
mov
jo
outs
sbb
add
ss
aas
ret
imul
ret
xor
add
mov
xor
add
or
dec
daa
mov
add
push
daa
cmp
jb
jo
xchg
mov
add
aas
rol
mov
outs
push
mov
push
fimul
ja
scas
ret
sbb
movlps
scas
rcr
mov
adc
adc
outs
fwait
add
sub
add
bound
aaa
dec
cmc
or
(bad)
mov
pop
jae
xor
cmp
das
mov
inc
js
cmp
(bad)
sub
xchg
mov
(bad)
neg
ret
mov
sub
and
dec
jae
dec
cmp
aaa
and
xor
(bad)
fs
and
xlat
daa
jp
fldenv
mov
sbb
add
mov
not
hlt
add
xchg
pop
mov
(bad)
fucom
xor
inc
add
ds
cmp
cmp
push
(bad)
inc
pop
jb
repz
shl
sar
mov
push
xlat
xchg
push
adc
nop
pop
xor
xchg
arpl
or
das
sti
or
or
dec
xor
ss
inc
jae
aaa
into
xor
inc
daa
fist
mov
jae
pop
mov
xchg
or
xor
cmps
ret
(bad)
push
sbb
jmp
mov
xrelease
xor
or
inc
aaa
mov
mov
add
ret
push
pop
es
jo
inc
pusha
inc
mov
test
jg
push
xchg
sub
adc
ret
mov
cmc
mov
xor
jmp
out
add
and
scas
pop
jae
pusha
xchg
and
aaa
cmp
jmp
cmps
inc
enter
idiv
iret
xchg
loop
xlat
out
jg
shl
push
rol
scas
inc
mov
ja
sahf
xor
jg
push
pop
imul
pop
jnp
ds
push
sub
sub
ror
call
pop
xor
pusha
mov
addr16
daa
inc
mov
mov
sbb
ss
daa
cmp
xlat
call
shr
test
fimul
adc
ret
push
dec
xor
jmp
cmc
sub
aas
and
inc
mov
cmp
push
arpl
add
add
sub
sub
out
fwait
int3
leave
or
xchg
xor
lods
add
jg
pop
ret
cs
out
add
repz
push
fild
mov
cmp
or
lods
mov
xchg
call
add
jnp
jo
rcl
packsswb
shl
add
sbb
and
jae
xchg
push
mov
jnp
jae
inc
xchg
jmp
and
lock
mov
das
inc
call
xlat
add
inc
mov
sub
(bad)
jae
cmp
mov
pop
cmp
ret
(bad)
fisttp
push
out
xor
mov
inc
fwait
sbb
pop
push
adc
mul
mov
push
push
or
push
and
xor
add
mov
sub
sbb
cmp
adc
mov
retf
push
jle
and
pop
stos
mov
inc
push
out
and
scas
pop
iret
xor
and
xlat
jb
or
rcr
mov
(bad)
iret
jecxz
mov
jmp
xchg
jbe
add
(bad)
and
add
ja
pop
pushf
fisttp
cmps
adc
xor
fsub
sub
aaa
outs
sbb
repnz
jae
lods
add
mov
es
cmp
ret
adc
scas
dec
mov
xchg
fisttp
adc
nop
mov
jb
pop
and
add
inc
add
lods
repz
pop
lds
xchg
popa
rcr
div
and
xchg
sub
push
inc
and
inc
scas
push
shr
xor
and
inc
stos
mov
shl
sub
out
push
pop
pushf
rol
dec
idiv
addr16
sbb
mov
outs
lock
repz
ss
dec
loopne
popa
dec
das
ja
inc
pushw
mov
fwait
push
adc
xor
out
add
rcpps
mov
xchg
xchg
push
inc
nop
mov
retf
iret
scas
sbb
sub
out
mov
adc
mov
rcl
ret
push
ret
adc
and
xchg
loope
icebp
sub
sub
xor
or
xchg
call
inc
or
pop
stos
retf
xchg
inc
mov
adc
pusha
inc
mov
adc
sti
outs
mov
push
sbb
lods
push
sar
bound
popa
enter
mov
lds
imul
and
inc
sbb
pop
inc
or
add
and
inc
out
sub
mov
add
fiadd
mov
shr
cmp
or
jecxz
mov
and
dec
xor
retf
lahf
(bad)
in
out
imul
add
daa
inc
int3
and
jae
cmp
inc
xchg
or
iret
add
mov
cs
aaa
lahf
jnp
inc
and
adc
pop
imul
imul
test
inc
test
jbe
and
and
dec
enter
push
adc
jo
xlat
jg
setl
sbb
or
cmp
push
or
dec
dec
arpl
xor
out
or
lahf
inc
pop
mov
jae
addr16
cmp
xchg
and
jno
cmp
dec
dec
cs
push
imul
xchg
pop
and
inc
lahf
xchg
push
addr16
and
pop
inc
jae
adc
dec
pushw
push
jae
retf
push
jb
mov
sub
dec
push
pop
dec
popf
sbb
ss
add
push
inc
adc
mov
push
repz
mov
xchg
test
test
jmp
pop
punpcklbw
inc
arpl
mov
test
cmps
addr16
and
jb
xor
jmp
mov
inc
pop
jg
rcr
xchg
ja
or
adc
sub
aaa
pop
mov
xchg
cmp
retf
inc
mov
and
imul
das
push
sub
xlat
les
fimul
cs
je
mov
push
dec
pop
inc
adc
jmp
int3
or
sbb
cmp
xor
iret
test
mov
push
es
and
adc
jb
pusha
sbb
scas
sub
xchg
mov
movq
pop
into
scas
jae
fild
cmp
arpl
adc
sub
test
inc
sbb
loopne
sbb
xor
or
mov
add
mov
add
push
mov
jmp
into
(bad)
arpl
or
push
push
jnp
popf
lds
cmps
call
add
mov
add
lahf
adc
jo
test
aaa
cmps
imul
adc
movs
jecxz
or
movs
cmp
inc
mov
or
idiv
mov
inc
scas
add
fwait
imul
cs
or
mov
xchg
push
sub
mov
add
xchg
or
xchg
xor
jnp
fld
xor
cwde
dec
jmp
and
xchg
sbb
add
dec
test
(bad)
sti
and
rcl
xchg
test
cli
dec
pop
xor
ds
inc
pop
adc
mov
mov
add
xor
or
push
sbb
inc
pop
add
sbb
pop
mov
sbb
and
test
out
add
mov
pop
inc
and
dec
sbb
and
cmp
arpl
daa
repz
ret
mov
popf
fmul
mov
lds
call
inc
adc
and
lds
movs
jbe
and
xchg
adc
add
xchg
push
adc
cmp
and
mov
shr
mov
stos
xor
mov
popa
and
fadd
add
push
pop
xor
mov
data16
das
xchg
call
sbb
mov
ret
push
call
aad
add
cmps
xchg
push
and
xlat
sbb
push
test
sbb
and
scas
sbb
mov
out
nop
dec
adc
daa
rol
pop
adc
and
cmp
sub
arpl
cmp
xchg
xor
add
mov
or
pop
xor
loopne
pop
ss
sub
sbb
fisttp
sbb
cmp
dec
or
mov
cs
push
or
xchg
xlat
dec
pop
inc
mov
inc
add
bound
test
(bad)
and
jb
pop
repz
data16
sbb
push
inc
shl
aaa
sbb
(bad)
jnp
adc
adc
or
or
mov
or
cmp
iret
scas
aaa
push
push
xor
movs
and
or
test
xor
inc
xor
mov
pop
pop
mov
xchg
mov
add
and
fild
inc
pop
xor
lahf
ins
inc
loop
(bad)
xor
pusha
add
inc
mov
ret
call
add
mov
sub
loop
jo
jmp
mov
pop
cmp
loop
imul
cmp
jecxz
push
fiadd
loopne
xor
adc
cmp
jb
movs
adc
mov
jo
loop
rcl
mov
aam
mov
lock
cmp
ss
xchg
and
stos
xor
addr16
and
dec
shl
call
dec
add
add
jnp
sbb
rol
rol
jmp
lahf
aam
and
push
mov
pop
arpl
popf
movs
mov
push
push
sub
sbb
daa
mov
sti
and
rol
daa
cmp
cmps
add
xor
into
loope
xchg
pop
rol
dec
rcl
jg
shl
iret
iret
ja
add
xor
inc
cs
adc
add
xlat
(bad)
dec
push
inc
scas
sub
and
jbe
jle
sub
xchg
inc
mov
and
ret
xchg
ja
daa
inc
pop
cwde
ss
rcr
rol
and
movs
arpl
jno
jmp
jae
pop
and
imul
pop
xchg
xlat
and
pop
(bad)
pop
mov
xor
mov
sub
jecxz
push
add
xor
pop
sub
sbb
cmp
pop
sub
inc
jmp
sbb
adc
and
or
stos
dec
imul
sar
cmp
and
mov
call
adc
push
test
cmp
and
push
xor
sub
cwde
xchg
out
pop
and
add
or
outs
sbb
fild
add
sub
int
and
push
sub
and
mov
sbb
aaa
jae
cdq
sbb
mov
lods
inc
jo
(bad)
add
sbb
inc
pusha
ss
push
adc
xor
(bad)
xchg
sbb
arpl
pop
or
dec
pop
pop
imul
data16
and
popa
cli
inc
ret
mov
dec
sub
and
loopne
jmp
(bad)
adc
pop
out
outs
and
add
or
jecxz
fwait
or
addr16
cmp
arpl
xor
or
call
or
mov
jo
mov
jmp
jmp
cmp
mov
test
pop
or
dec
or
push
or
pop
xor
sub
and
adc
pop
push
add
addr16
sbb
jg
xchg
cmp
sti
push
xchg
jae
adc
js
rcl
dec
adc
retf
sahf
gs
xchg
enter
pop
xchg
popa
jb
addr16
add
in
add
xor
add
movs
jg
scas
lds
or
xchg
mov
push
adc
repz
inc
adc
aaa
xor
popa
cmp
xor
(bad)
fist
mov
pop
shl
sub
sub
xor
nop
repz
cmp
mov
or
and
arpl
mov
or
pop
fbstp
cmp
(bad)
popf
icebp
les
fadd
test
shl
mov
xlat
push
mov
mov
push
adc
xchg
push
add
or
inc
cmp
xchg
rol
into
and
pop
pop
add
or
push
mov
test
and
add
cmps
push
xchg
and
xchg
add
retf
add
and
xor
mov
lock
jo
and
or
shl
dec
or
sub
xor
div
call
arpl
repz
mov
or
xor
jo
push
into
(bad)
loope
test
retf
add
adc
cwde
xor
sbb
shl
mov
arpl
xor
pop
dec
inc
out
aaa
add
xlat
mov
stos
icebp
mov
xor
push
mov
or
sbb
mov
mov
add
and
das
pop
pop
dec
adc
pop
adc
push
and
add
mov
enter
addr16
jo
mov
fwait
push
pop
push
nop
or
daa
mov
push
jo
neg
or
fwait
mov
push
mov
cmp
test
xor
cmp
adc
or
push
aaa
iret
aas
cdq
inc
(bad)
enter
das
pusha
pop
call
push
or
movs
mov
push
mov
retf
inc
push
movs
dec
je
mov
adc
les
pop
pop
call
xlat
add
inc
adc
and
fidiv
mov
lsl
adc
or
ja
and
xchg
jnp
arpl
sbb
ret
push
xchg
scas
or
stos
ret
xchg
mov
sbb
push
mov
sbb
xchg
sbb
mov
ret
mov
add
cdq
retf
mov
and
push
popa
mov
out
xlat
add
push
and
or
pop
arpl
daa
mov
fs
fcmovnu
inc
sar
aas
repz
inc
add
mov
add
jnp
arpl
adc
test
pop
mov
in
mov
loopne
jno
cmp
and
fs
cmps
inc
pop
add
sub
pop
ret
in
dec
pop
sar
pusha
nop
and
test
aas
sub
jo
ss
fwait
sub
mov
push
inc
push
mov
jp
ja
adc
push
mov
sub
push
sti
ja
adc
mov
arpl
adc
jecxz
enter
mov
push
xor
sbb
loopne
xlat
cmp
aaa
and
test
push
aad
and
sub
fisubr
mov
mov
add
das
or
pushf
or
adc
mov
xor
loope
push
xchg
mov
add
inc
(bad)
dec
in
inc
push
and
add
pop
or
pushf
sbb
dec
outs
cmp
rol
xchg
aaa
stos
mov
sbb
pop
rcr
sub
mov
pop
dec
and
push
pushf
cmp
inc
xchg
jecxz
iret
add
or
xor
push
mov
scas
stos
cli
stos
arpl
add
lahf
test
into
xchg
dec
out
push
add
out
mov
daa
dec
ret
sbb
ja
push
xchg
adc
add
(bad)
outs
push
inc
popa
xor
pop
imul
push
stos
addr16
mov
push
stos
cmp
xor
lock
sbb
and
mov
mov
add
(bad)
xchg
push
aas
add
mov
mov
mov
pop
fisub
xor
xor
arpl
adc
dec
fist
or
xor
call
bound
sbb
imul
and
fs
adc
pop
lock
xchg
shr
cmps
or
push
daa
xor
jae
push
xor
pop
cmp
and
aaa
cmps
pop
test
pop
or
add
add
push
adc
sbb
mov
adc
xor
imul
sub
pop
adc
stos
(bad)
jo
lock
popf
xor
cmps
inc
mov
stos
rcr
add
ret
loope
push
imul
imul
xor
push
sub
aas
adc
jg
adc
xchg
sbb
xlat
sub
out
add
mov
xor
lods
cmp
aaa
out
mov
aaa
retf
adc
dec
or
sub
or
add
push
lock
xor
or
dec
or
cmp
retf
mov
push
rol
test
retf
mov
das
ret
test
cmp
push
addr16
pop
mov
mov
mov
xor
(bad)
rep
inc
ss
adc
xchg
add
sti
sbb
mov
mov
pop
out
add
xchg
dec
and
adc
mov
cmovnp
add
mov
pop
inc
cmp
and
loop
xor
rcr
test
xchg
mov
test
jnp
bound
loopne
shl
cmp
mov
pop
enter
adc
pop
sbb
fcomi
jg
sub
and
neg
popa
inc
mov
adc
jb
adc
adc
dec
mov
xchg
push
pop
mov
scas
xor
and
or
enter
not
jg
repz
adc
jnp
and
jmp
sub
or
mov
mov
inc
test
inc
xor
cmps
or
mov
loopne
jo
jp
push
test
jmp
out
dec
dec
ror
in
inc
call
and
and
cmps
mov
iret
mov
push
lods
lahf
(bad)
sbb
js
add
dec
push
cmp
mov
cs
push
ret
(bad)
mov
cwde
mov
xlat
dec
sub
xchg
and
out
mov
adc
adc
imul
mov
xor
ja
lea
cmp
mov
inc
pop
daa
and
push
addr16
cmp
imul
iret
mov
aaa
cmps
jnp
cmp
scas
mov
mov
cmps
jnp
inc
mov
mov
mov
mov
pusha
out
sub
sub
push
stos
daa
sbb
adc
sti
mov
scas
jecxz
loopne
addr16
push
inc
sbb
xor
xor
sub
and
nop
push
scas
sbb
rol
popa
aaa
cmps
pavgb
scas
sbb
pop
xchg
mov
test
and
iret
adc
inc
xor
sti
or
dec
or
ja
cmove
adc
pushf
or
mov
movs
push
adc
or
or
arpl
pop
sbb
sbb
adc
hlt
mov
or
push
jp
xor
inc
int3
cdq
sub
adc
arpl
add
and
and
inc
test
ret
jmp
sub
inc
lahf
out
xor
and
xchg
xor
or
ja
ja
rcr
scas
inc
iret
pmulhuw
rol
outs
lea
push
nop
daa
ss
xor
add
inc
and
jae
cmp
mov
xchg
xchg
pop
pop
inc
in
push
xchg
cli
push
mov
mov
cmps
sbb
dec
or
jb
outs
sub
mov
mov
jmp
and
and
pop
daa
add
and
iret
out
and
cwde
inc
inc
push
or
ret
add
sub
push
out
(bad)
add
add
add
lds
jmp
sbb
and
out
jnp
push
and
push
xor
bound
inc
cmps
sub
add
adc
or
rcl
mov
fcmovnb
lods
sbb
xchg
or
xor
retf
out
test
mov
jmp
xchg
sbb
mov
ja
adc
add
stos
mov
out
add
nop
or
sbb
sub
sbb
adc
pop
add
adc
fild
mov
xor
imul
push
rol
sbb
sti
mov
arpl
push
xor
(bad)
lea
mov
mov
jae
xchg
pop
pop
fadd
rol
jg
inc
push
and
shl
mov
daa
jae
mov
cs
mov
es
loope
push
add
inc
or
add
add
add
pop
pop
fcomp
adc
or
mov
push
aas
push
loopne
xor
fwait
adc
movaps
retf
pusha
(bad)
imul
pop
out
aaa
push
neg
rol
or
pop
pop
mov
push
addr16
imul
es
retf
pop
out
push
and
(bad)
ja
lea
dec
outs
lahf
sub
aam
xlat
rol
neg
scas
inc
or
sbb
addr16
mov
sti
sub
xor
fistp
xor
dec
dec
out
inc
pop
adc
(bad)
sub
dec
inc
cmp
mov
call
ss
pop
adc
mov
pop
inc
or
mov
or
fild
imul
sbb
inc
adc
lahf
sar
pusha
or
adc
inc
test
and
(bad)
or
and
adc
adc
adc
stos
sar
fadd
push
sti
add
sub
iret
push
adc
loopne
sbb
push
fidiv
dec
nop
xlat
cmps
or
stos
aam
push
push
mov
push
sub
pop
push
or
or
mov
adc
out
in
adc
mov
push
pop
add
out
imul
add
add
add
ret
xchg
mov
xlat
test
jmp
aaa
xchg
pop
jb
test
scas
push
(bad)
fsub
(bad)
fild
add
and
push
or
add
inc
adc
jae
(bad)
mov
test
dec
fcmovnu
inc
jae
jb
sti
mov
sbb
xor
out
jp
enter
jp
adc
xlat
aaa
add
dec
dec
adc
push
pop
or
mov
jmp
push
mov
pop
jbe
mov
jo
or
(bad)
jnp
or
lds
mov
inc
rcr
das
inc
pop
ret
sub
xor
push
test
aas
jae
inc
mov
iret
call
jb
xlat
add
xchg
sbb
adc
or
nop
or
inc
mov
xlat
cmp
inc
mov
jecxz
dec
adc
test
dec
jmp
loopne
mov
mov
rol
mov
push
jb
cli
mov
mov
mov
adc
lods
sbb
sbb
xor
add
ret
dec
cmps
jbe
imul
push
adc
dec
or
mov
pop
pop
pop
inc
adc
inc
or
retf
push
fisttp
mov
xchg
add
daa
iret
inc
sub
test
sub
add
mov
xchg
das
pop
pushf
loope
sbb
jnp
xor
dec
js
(bad)
or
dec
and
rcl
sub
cwde
jns
inc
push
jecxz
inc
mov
(bad)
or
jp
add
cmp
push
mul
fcom
adc
sub
xor
jecxz
push
nop
and
pop
mov
out
pop
fdivp
push
jb
push
ret
outs
out
add
mov
(bad)
cmp
daa
xor
jo
repnz
dec
add
mov
retf
outs
adc
and
rol
daa
lahf
icebp
test
pop
xlat
pusha
pop
or
arpl
in
imul
push
dec
mov
add
push
add
out
mov
add
(bad)
sahf
xor
inc
test
add
loope
pop
lock
inc
shl
pop
out
xlat
or
inc
pop
(bad)
pop
or
xor
and
repz
mov
pop
dec
mov
mov
xchg
add
or
add
push
int3
mov
and
(bad)
sub
test
nop
fiadd
loopne
div
loop
cmp
add
jne
imul
loope
push
inc
(bad)
mov
iret
into
popa
les
pop
cmps
sub
pop
mov
outs
dec
nop
ret
mov
ja
adc
xor
outs
ror
daa
pop
iret
mov
push
popa
jo
addr16
mov
test
rol
inc
push
mov
add
out
pop
adc
dec
adc
push
adc
adc
mov
sub
adc
sbb
and
rcl
jp
es
push
mov
sar
push
mov
cmp
mov
cmps
or
inc
or
pusha
add
(bad)
outs
push
add
jo
daa
jle
xor
inc
aad
inc
push
dec
imul
pop
sti
repnz
xor
popf
dec
mov
mov
rcr
dec
push
mov
pop
mov
cli
inc
add
adc
and
fbld
(bad)
repz
and
xchg
sbb
imul
mov
shr
arpl
addr16
dec
xor
lds
pop
push
inc
movq
jo
jmp
sbb
xor
and
sub
sahf
idiv
mov
dec
push
push
fwait
sar
mov
sbb
aaa
rol
addr16
jmp
mov
gs
and
pop
cli
xchg
dec
pop
shl
sub
sbb
loope
push
add
xor
inc
sbb
inc
push
repnz
mov
add
ss
repz
int3
arpl
adc
pop
sub
sbb
jae
pop
add
out
jae
and
and
push
mov
adc
add
inc
xor
pusha
(bad)
idiv
adc
movs
adc
inc
outs
pop
add
cmp
cmpps
mov
jg
sub
mov
adc
push
dec
push
mov
pop
stos
pop
jb
and
mov
and
push
fadd
sub
jecxz
pop
iret
mov
mov
xchg
inc
lock
test
push
retf
jmp
pop
fwait
in
xchg
push
fild
jb
movs
mov
xchg
dec
xor
sbb
xchg
and
or
add
mov
outs
jo
retf
ja
jecxz
add
pop
ret
cmp
mov
sbb
add
mov
and
rcr
mov
outs
sbb
pusha
pop
pop
adc
and
xor
jne
dec
mov
xor
xor
stos
dec
push
ret
inc
pusha
xchg
inc
pop
dec
and
jbe
inc
call
lahf
rcl
push
fs
addr16
mov
xor
out
cmp
jg
mov
adc
adc
inc
adc
push
inc
pop
mov
pop
jmp
or
pushf
push
jb
retfw
sbb
push
and
ss
nop
add
jmp
loop
sub
sbb
jp
add
nop
fcmovnb
xchg
mov
stos
pop
sub
and
loopne
adc
mov
xor
mov
mov
xchg
repz
xlat
scas
push
das
sub
inc
das
or
add
cmp
pop
loopne
sub
test
retf
movs
pusha
movs
xchg
inc
sahf
adc
push
aas
sub
outs
ret
scas
jae
arpl
ds
jnp
pop
ja
push
sub
push
jg
push
cmp
out
push
jecxz
add
cs
inc
cmp
mov
mov
push
fist
mov
inc
push
arpl
cmps
add
les
xchg
xchg
push
and
mov
fistp
das
iret
lods
repz
aad
aaa
fistp
imul
add
add
iret
dec
repz
imul
jo
adc
mov
ds
push
jg
sub
rcl
xchg
jnp
and
out
jae
sti
dec
add
mov
or
jbe
push
mov
loop
aaa
inc
and
adc
xor
mov
repnz
adc
es
inc
stos
push
sub
xor
ret
add
and
adc
sbb
mov
and
sub
push
sub
or
ror
shl
jmp
push
adc
adc
jo
enter
add
mov
mov
inc
sbb
fwait
ret
retf
mov
jae
adc
(bad)
test
div
push
or
inc
push
movs
enter
dec
stos
add
and
sbb
retf
adc
arpl
dec
inc
mov
jecxz
pop
cwde
xchg
inc
xchg
pop
or
test
shl
xlat
add
add
repz
jo
rcr
ret
add
pop
mov
inc
mov
sbb
xor
ret
or
pop
push
mov
aad
xor
jnp
cmp
cmp
or
xor
adc
xor
dec
pop
xchg
js
xor
test
add
rol
pop
lock
cwde
add
mov
cmps
adc
add
aaa
pop
pop
ret
mov
sbb
ret
jp
xchg
lds
cmp
dec
push
(bad)
push
shl
push
push
mulps
sbb
or
ss
js
add
out
add
pop
arpl
ja
adc
outs
inc
ins
pushf
enter
imul
cwde
mov
shl
loopne
dec
add
sub
jg
cmps
aas
cmp
cmp
and
and
mul
jg
inc
add
(bad)
stos
pop
sub
mov
jne
and
push
sbb
mov
or
mov
or
sub
stos
push
ins
xor
push
xlat
mov
jp
dec
xor
mov
sub
xchg
ret
xor
adc
shl
scas
imul
loope
test
or
mov
loopne
add
loope
mov
and
outs
not
mov
and
mov
push
clc
inc
outs
sbb
mov
es
xchg
shr
inc
pop
out
movs
and
xor
and
xchg
xor
sbb
or
push
push
imul
pop
fild
or
and
cmp
push
add
movsx
cmps
mov
adc
sub
test
in
or
push
stos
xchg
push
sbb
dec
icebp
sbb
mov
sub
arpl
push
sbb
pop
out
push
add
jg
adc
jbe
or
push
push
xor
arpl
fdiv
(bad)
sub
test
and
daa
add
sbb
add
add
push
dec
cwde
int3
sub
sub
imul
xor
jnp
pop
adc
pop
push
(bad)
jo
add
sub
or
sbb
enter
mov
adc
adc
or
inc
loop
mov
pushf
fisub
pop
dec
add
or
cdq
jb
adc
or
lea
out
sub
lea
or
es
push
sbb
scas
pop
daa
and
mov
retf
das
arpl
mov
shr
jbe
ret
adc
sub
pop
not
adc
cmp
pop
shl
inc
cmp
sbb
add
das
out
sbb
shl
pop
or
sub
dec
mov
mov
es
inc
mov
test
dec
mov
inc
adc
(bad)
(bad)
push
cmp
and
add
fadd
push
pop
add
cmp
cs
jmp
push
jno
mov
repz
jae
xchg
xlat
sub
cmps
xor
sub
dec
jae
mov
dec
aas
jmp
inc
xor
adc
and
xor
mov
into
stos
daa
mov
test
test
mov
(bad)
jnp
xchg
cmp
jp
(bad)
jo
pop
adc
and
test
dec
push
out
push
ins
inc
add
mov
ret
push
jnp
xor
cmp
shl
out
adc
sbb
cmps
pop
add
push
or
push
push
push
fist
fcomp
ins
retf
pop
(bad)
add
jbe
and
add
addr16
xor
std
sbb
or
push
(bad)
pop
lea
imul
inc
repz
push
or
push
fsub
rcl
ja
xchg
jg
sbb
enter
xor
mov
or
push
xchg
push
mov
daa
sub
adc
pavgb
and
xchg
shr
mov
xor
or
xchg
fisttp
sub
test
add
mov
rcl
inc
(bad)
mov
xor
pop
je
in
xor
ds
jg
rcl
or
jb
pop
retf
bound
daa
icebp
add
fstp
jmp
push
or
jb
and
loopne
jle
inc
mov
adc
add
adc
mov
or
shl
ss
pusha
loopne
pop
fwait
inc
sub
or
xor
aaa
cmp
sbb
pop
iret
or
fwait
cdq
jae
test
out
out
pop
or
ds
jbe
dec
add
xor
mov
pop
pop
add
push
mov
sbb
pop
xlat
xchg
xor
mov
xor
push
retf
push
or
mov
ss
in
adc
pop
pop
or
inc
scas
out
not
or
stos
ret
add
push
pop
or
xchg
inc
pusha
test
jmp
xor
lahf
or
inc
sbb
retf
mov
mov
dec
mov
pop
mov
add
inc
add
push
or
cdq
sbb
or
(bad)
or
or
inc
and
and
adc
cmps
mov
mov
lods
push
or
rcr
xchg
cmps
cdq
(bad)
or
repz
test
mov
cwde
xchg
add
enter
xlat
add
dec
push
push
mov
(bad)
addr16
cmp
imul
es
cmp
pusha
test
jp
call
call
cs
add
ins
and
bound
mov
or
jp
packuswb
ret
ja
xchg
dec
dec
sbb
add
(bad)
fimul
lahf
inc
arpl
arpl
xchg
sbb
push
popa
or
or
mov
pushf
jnp
lea
(bad)
xchg
pop
bswap
leave
sub
pop
scas
xchg
ret
mov
xchg
push
adc
addr16
sbb
scas
jo
xor
xor
or
pop
jnp
into
lods
pusha
adc
outs
daa
(bad)
in
push
rcr
das
(bad)
loope
jle
mov
push
mov
in
rcr
repz
adc
push
adc
jo
repnz
arpl
rol
pop
aaa
(bad)
dec
add
xchg
shr
and
test
setg
xor
mov
add
add
push
(bad)
and
dec
popa
mov
inc
mov
pop
push
out
sahf
or
pop
or
pop
inc
cmp
es
outs
cdq
sbb
push
xchg
iret
jae
mov
jae
cmps
xchg
data16
push
add
push
mov
bound
shr
xor
xchg
loop
es
adc
dec
cmp
push
and
pop
fsubr
adc
aaa
add
xor
pop
add
stos
bound
and
xchg
outs
rol
or
pop
xor
add
fst
mov
xchg
dec
dec
push
sbb
push
cs
inc
imul
arpl
fbstp
sub
rcr
xor
(bad)
xor
shl
retf
adc
bound
pusha
nop
jmp
or
arpl
mov
sbb
mov
sbb
iret
loop
out
sbb
add
out
iret
xchg
rol
or
add
pop
add
ror
shl
pop
or
out
jmp
pop
fstp
sbb
xchg
adc
dec
cmp
ret
ins
sbb
adc
jp
cmp
inc
cmps
sub
out
jmp
pop
push
mov
ss
stos
add
unpcklps
and
xchg
call
mov
in
arpl
xchg
ss
or
pop
or
fwait
retf
pop
inc
add
adc
jno
adc
cdq
mov
fs
adc
das
scas
push
js
pushf
jmp
adc
push
add
add
das
xlat
xor
and
mov
jp
xchg
add
aas
and
xor
add
or
mov
pop
sub
call
xchg
add
jb
repz
mov
push
shl
(bad)
sbb
retf
daa
jg
xor
xor
aas
jmp
add
dec
jecxz
cmp
push
sbb
pop
xchg
cmp
cmp
jmp
stos
das
or
pop
stos
pop
adc
xchg
mov
mov
sbb
xchg
daa
daa
sub
and
jnp
enter
addr16
fistp
mov
mov
cmps
inc
sub
stos
or
and
push
test
inc
outs
jmp
xor
sbb
inc
aaa
add
inc
cmp
pop
jno
or
xchg
pop
sub
daa
pop
das
adc
xor
scas
dec
xor
inc
jmp
fwait
pop
sbb
push
jb
(bad)
and
xchg
mov
pusha
shl
iret
retf
sbb
adc
xchg
dec
aaa
cdq
mov
dec
jbe
mov
xor
push
or
xchg
add
out
jb
and
retf
rcr
pop
and
cdq
adc
push
mov
adc
push
push
ja
dec
ret
add
add
jnp
sbb
arpl
dec
out
inc
jns
inc
dec
imul
add
push
das
shr
into
rol
pop
jmp
arpl
inc
sbb
jno
sbb
sub
(bad)
mov
pop
rol
inc
bound
jp
mov
lock
daa
add
pop
das
jecxz
inc
push
pop
add
gs
mov
push
pop
stos
scas
xor
jbe
inc
inc
inc
not
das
sub
dec
gs
dec
jbe
xchg
or
fld
inc
sub
pop
dec
add
pop
push
sub
pusha
adc
sub
fld
push
xor
cmp
push
sbb
retf
or
ds
mov
or
mov
(bad)
aaa
xor
pop
sbb
jg
push
xchg
jbe
pop
mov
pop
or
xchg
pop
pop
imul
into
jo
or
add
jg
cmps
xchg
bnd
imul
push
cmp
loop
push
and
xchg
mov
mov
shl
pusha
xor
imul
or
push
retf
add
jb
add
pop
loop
mov
pop
sbb
(bad)
add
mov
and
adc
adc
scas
push
pop
inc
adc
imul
(bad)
sahf
xchg
mov
cwde
inc
int
xor
xor
sbb
or
push
stos
out
mov
xor
stos
dec
stos
push
sbb
shl
inc
mov
ficom
retf
adc
push
inc
xchg
dec
fwait
push
cmp
dec
and
ja
scas
mov
push
pop
sbb
pop
jmp
push
xchg
jecxz
sbb
push
cmps
jno
xor
add
dec
mov
rol
dec
lea
add
xor
add
pop
daa
fist
push
or
xor
cmps
inc
retf
mov
mov
adc
inc
or
dec
inc
lock
div
adc
pop
add
sub
adc
je
test
test
sti
sub
cwde
inc
nop
ss
pop
scas
add
sbb
pop
aaa
jnp
pop
out
push
push
dec
adc
add
add
mov
adc
(bad)
push
mov
inc
add
push
and
or
sub
xchg
fistp
adc
jecxz
cmpxchg
int
out
idiv
jns
jae
sbb
and
jo
sahf
pop
and
loopne
dec
dec
daa
imul
sub
inc
push
(bad)
adc
aaa
xchg
inc
add
mov
not
pop
push
mov
dec
pop
pop
mov
pop
ret
ja
inc
and
pop
(bad)
lahf
push
xchg
js
or
outs
sub
sbb
xchg
jmp
or
sbb
mov
or
pop
mov
js
add
(bad)
sub
add
mov
cmp
(bad)
popa
popa
fwait
mov
(bad)
push
gs
ret
ds
or
fbld
xor
stos
dec
jnp
xor
aam
div
(bad)
adc
xor
jecxz
outs
(bad)
push
sub
out
gs
push
push
inc
inc
adc
(bad)
cmp
jae
or
inc
cmps
mov
add
arpl
outs
push
add
ja
xchg
(bad)
mul
or
aas
add
mov
iret
mov
pusha
gs
dec
retf
pop
retf
sbb
jbe
shr
push
loope
imul
ffreep
cmp
push
popa
xchg
cmps
movzx
adc
add
mov
mov
or
xchg
add
arpl
stos
out
(bad)
ret
or
mov
jle
fiadd
ror
jae
fidiv
test
dec
es
test
pop
imul
push
rcl
push
push
repz
adc
aaa
push
out
pusha
or
mov
dec
ins
push
inc
outs
mov
sbb
arpl
and
and
mov
or
adc
push
(bad)
jmp
addr16
ror
inc
ins
sub
inc
jae
sbb
inc
mov
movs
sub
dec
retf
add
sbb
mov
inc
mov
(bad)
adc
sbb
mov
mov
add
movs
aas
aaa
sbb
add
jnp
nop
push
imul
xor
adc
push
loopne
or
retf
xchg
jbe
and
push
add
add
sub
ss
dec
inc
jne
and
push
(bad)
cmp
add
mov
pop
xchg
inc
add
push
mov
xchg
(bad)
sbb
test
mov
inc
adc
push
add
push
cmp
xor
add
jle
lods
pop
popa
mov
retf
daa
sbb
dec
(bad)
push
push
dec
cmps
arpl
sbb
adc
mov
adc
jecxz
fisttp
add
xchg
xor
jg
cli
outs
test
ret
push
inc
inc
xor
ror
cli
mov
jbe
mov
jp
push
ret
inc
fsin
pop
cs
or
sbb
daa
xor
lods
jmp
mov
stos
fcomip
push
call
add
fnsave
push
arpl
data16
mov
imul
daa
mov
push
xchg
pop
loopne
xor
jcxz
cmp
dec
loope
adc
push
sub
xchg
addr16
adc
outs
or
jmp
push
add
aaa
stos
aaa
pusha
xor
inc
movzx
adc
lods
pop
or
xor
mov
ret
and
pop
pusha
xchg
or
aaa
mov
or
addr16
push
out
test
sub
push
jo
rcl
mov
enter
out
out
das
xor
or
mov
sub
pop
pop
xlat
adc
adc
xchg
xor
jl
sar
inc
add
cmps
or
add
call
dec
out
or
aaa
or
add
scas
and
scas
pop
dec
add
shl
pop
dec
add
(bad)
(bad)
scas
popa
cmp
and
call
cmp
cwde
mov
jmp
inc
xchg
mov
mov
dec
adc
pop
xchg
popa
or
loope
add
pop
adc
jb
push
test
mov
dec
sbb
pushf
aaa
mov
(bad)
mov
push
or
mov
imul
push
add
sbb
add
push
inc
cmps
sub
cmp
adc
aas
jae
add
add
mov
mov
push
mov
push
mov
mov
daa
mov
shr
aas
mov
cmp
sti
mov
add
adc
add
sbb
mov
inc
bound
and
imul
out
or
int3
dec
and
xchg
mov
mov
sbb
and
out
and
pop
xlat
and
push
test
add
test
dec
pop
cs
stos
xchg
popa
test
inc
shl
xlat
or
add
add
and
test
mov
add
outs
jae
sbb
ss
mov
movs
xor
push
sub
stos
addr16
mov
push
inc
shl
or
push
sbb
xchg
or
mov
and
lods
pushaw
sub
ss
jecxz
or
sub
or
ja
sbb
nop
mov
xor
and
jae
push
add
xchg
jae
mov
pusha
je
les
rcr
add
loopne
adc
sbb
sub
adc
jo
push
sub
sti
xor
add
sbb
xor
xor
pop
fild
dec
adc
mov
adc
and
lahf
dec
adc
loopne
pop
fnstcw
(bad)
mov
out
pop
or
add
and
pop
xchg
or
(bad)
call
pop
mov
pop
call
outs
adc
add
outs
(bad)
rol
xchg
imul
sbb
dec
call
add
sar
lods
rcl
(bad)
and
jae
pop
add
(bad)
pop
xor
add
mov
pop
into
pop
ss
ficomp
iret
inc
and
push
daa
(bad)
mov
jle
push
js
adc
pop
mov
loopne
cmps
lahf
add
adc
stos
pop
sbb
jle
add
jecxz
add
push
arpl
xchg
pushf
mov
daa
push
add
push
xchg
mov
fistp
repnz
data16
pop
inc
lahf
or
inc
cwde
inc
pop
stos
pop
mov
retf
aas
stos
(bad)
aaa
adc
adc
push
sbb
xor
xor
shr
pop
mov
bound
adc
inc
add
push
out
loop
cwde
push
adc
shr
push
mov
sbb
inc
sbb
push
dec
fs
dec
add
sbb
mov
enter
pop
ffreep
mov
pop
ret
adc
or
aas
add
imul
scas
sbb
mov
cmp
iret
pop
mov
scas
push
xor
daa
or
sbb
xchg
pop
and
inc
addr16
mov
aas
adc
inc
lods
push
xor
mov
push
stos
jbe
sbb
adc
or
ret
mov
ins
xor
shl
xchg
add
push
cwde
adc
mov
or
add
sti
jnp
or
add
movs
(bad)
dec
mov
(bad)
jnp
sub
xchg
cs
int3
and
xchg
push
inc
adc
dec
repz
test
sti
pop
pop
ins
sar
cmps
jno
dec
test
(bad)
jg
nop
xchg
and
stos
shr
dec
cmp
xchg
xchg
xor
rcl
adc
das
out
mov
add
dec
adc
data16
adc
stos
xchg
popa
jb
rcl
xchg
adc
pushf
mov
jb
jo
cmps
pop
dec
fwait
cs
jo
mov
popa
push
xlat
ret
inc
push
pop
and
mov
dec
push
pavgw
leave
gs
rcr
mov
cdq
cmps
pop
(bad)
sbb
sub
push
jecxz
sbb
pop
rcr
jp
stos
outs
push
add
cdq
xchg
jbe
pop
inc
push
mov
btc
mov
stos
push
xchg
push
add
ret
pop
sbb
sahf
iret
lds
pop
sub
test
jle
test
das
fidivr
sbb
fsub
inc
cs
xor
mov
mov
jle
sbb
cmp
mov
push
test
shr
mov
inc
mov
xor
sbb
adc
arpl
out
outs
xchg
rcl
pop
(bad)
loop
or
sbb
repz
sub
pusha
push
scas
jbe
add
aaa
pusha
daa
cmp
call
xchg
arpl
imul
adc
test
outs
push
or
sbb
mov
add
jbe
mov
outs
aas
cmp
loopne
mov
jo
add
cli
arpl
jbe
push
loop
push
mov
xchg
add
ret
stos
out
retf
mov
add
jmp
pop
test
arpl
test
mov
add
adc
shr
adc
or
add
lahf
outs
pop
enter
(bad)
xor
ss
ficomp
or
add
(bad)
aas
or
in
xlat
(bad)
or
pusha
xor
inc
(bad)
cmp
xchg
fild
add
add
adc
adc
cmp
lods
daa
xchg
add
pop
aad
shl
stos
pop
add
xor
out
inc
push
xchg
sub
or
pop
and
shl
mov
push
adc
es
jp
test
aad
arpl
inc
add
cmp
adc
add
fstp
cmps
lea
xchg
out
xor
or
mov
jb
repz
mov
pop
xor
jmp
and
cmp
adc
mov
bound
push
ret
xor
ret
(bad)
fisttp
inc
(bad)
add
call
iret
xor
aaa
jg
(bad)
cs
add
ror
inc
inc
xchg
scas
lahf
inc
push
xor
imul
call
add
jmp
mov
(bad)
ficomp
mov
inc
xchg
data16
inc
jo
inc
daa
xor
mov
out
pop
dec
dec
inc
outs
ror
out
jmp
retf
sbb
pop
pop
mov
mov
push
fsubr
push
dec
(bad)
adc
outs
jg
pop
add
adc
xor
adc
pop
or
dec
xchg
aaa
mov
adc
sbb
or
rcl
loop
xchg
xchg
xchg
pop
jmp
stos
xor
and
test
mov
sbb
push
lock
mov
repz
sbb
mov
pop
(bad)
mov
xor
stos
and
sbb
retf
push
push
add
ret
add
push
fwait
das
or
sbb
push
add
pop
sbb
xchg
push
or
pop
push
repz
mov
(bad)
(bad)
and
push
sbb
jno
adc
pop
cwde
inc
push
sbb
loop
sub
xor
push
aas
inc
in
test
dec
pop
cmps
jo
or
dec
shl
mov
cmps
fild
mov
imul
stos
mov
sbb
mov
jecxz
ds
xchg
mul
mov
ja
ret
stos
cmps
jg
cmps
xor
arpl
and
imul
popa
mov
sbb
jo
inc
ror
fild
out
dec
adc
mov
add
scas
sub
mov
xor
scas
or
xchg
pop
lahf
mov
and
ins
lea
retf
jg
sbb
add
pop
sbb
pop
mov
arpl
ret
pop
sub
cmps
mov
sti
dec
xor
fwait
push
mov
jbe
enter
pop
imul
js
or
pop
push
and
mov
inc
pusha
pop
(bad)
cs
rol
adc
retf
inc
(bad)
out
iret
push
mov
inc
mov
retf
into
out
adc
inc
out
add
outs
popa
push
imul
test
and
dec
adc
fsubr
xchg
cmp
mov
fcom
movs
and
and
enter
jecxz
stos
cmp
stos
or
inc
cmp
push
inc
push
sbb
or
mov
and
mov
js
nop
xchg
mov
xchg
pusha
ret
fcmovnb
lods
adc
or
jg
jg
cwde
add
mov
div
and
push
mov
lds
mov
adc
(bad)
shl
sub
loopne
add
sar
daa
mov
sbb
getsec
scas
add
pop
rcr
(bad)
ffreep
jmp
es
aaa
mov
pop
fwait
cmp
(bad)
mov
push
add
inc
outs
ja
ins
outs
popa
fs
fcomi
(bad)
dec
fs
dec
imul
gs
outs
jb
popa
jae
adc
(bad)
mov
and
push
inc
dec
sbb
pusha
bound
fbstp
jns
je
ins
cmp
imul
popa
mov
fucomip
jb
arpl
test
les
outs
popa
jo
cs
(bad)
inc
cld
call
jns
int3
mov
mov
retf
push
bound
(bad)
xor
mov
popaw
ror
dec
and
mov
mov
arpl
int
xchg
outs
adc
jmp
loop
ins
dec
sbb
sub
inc
push
mov
outs
pop
(bad)
push
dec
inc
outs
ins
pop
sub
addr16
ins
xor
or
ins
in
adc
push
outs
scas
fst
outs
jne
arpl
push
addr16
es
inc
popa
adc
or
sbb
mov
adc
je
push
sti
movs
xor
sbb
inc
outs
(bad)
cmp
clc
jbe
arpl
gs
jne
pop
xor
ins
test
popa
loopne
jmp
push
pop
adc
ret
jge
ins
ins
gs
cmp
cmp
dec
cmp
pop
mov
inc
xor
jg
sub
pop
add
or
retf
jo
fcomi
jo
data16
or
arpl
push
xchg
in
sub
dec
test
(bad)
in
addr16
in
jbe
pop
imul
dec
call
imul
nop
outs
outs
adc
sub
dec
dec
push
lar
inc
iret
loope
adc
adc
push
mov
sub
push
sbb
jo
adc
arpl
mov
dec
adc
lds
inc
shr
ins
out
or
outs
and
fwait
jo
nop
popw
xchg
inc
adc
mov
push
jo
dec
sbb
and
inc
call
psrlq
push
inc
dec
push
retf
loope
push
inc
inc
sbb
shl
bound
jp
imul
pusha
inc
mov
inc
pushf
out
sbb
push
adc
aad
ret
push
or
fs
fstp
mov
ss
and
mov
out
data16
xor
gs
inc
outs
imul
shl
push
add
outs
je
or
vpunpcklqdq
add
gs
jne
(bad)
in
mov
iret
(bad)
es
push
push
repnz
push
pop
mov
je
jns
shr
cmp
imul
or
adc
fsubr
xchg
and
loope
out
imul
push
inc
fs
adc
sbb
je
mov
cmp
or
dec
adc
dec
rcl
inc
je
dec
sbb
iret
xor
push
and
push
pop
add
jnp
pop
push
xchg
dec
dec
dec
inc
sbb
adc
bound
dec
jb
mov
sbb
lea
inc
jnp
xor
adc
mov
push
push
dec
stos
push
mov
mov
push
inc
inc
mov
sbb
ins
gs
and
loopne
mov
inc
jne
dec
ins
test
ficom
jae
dec
xchg
mov
jl
iret
ins
cmp
mov
arpl
xor
fiadd
das
rcl
popa
stos
retf
cs
cmps
sbb
fsubr
inc
inc
out
iret
es
or
test
fimul
pop
jbe
arpl
xchg
push
daa
mov
pop
ins
jmp
cmp
out
or
pop
ror
jno
ret
xor
adc
scas
mov
lods
adc
push
dec
dec
adc
push
pop
push
push
(bad)
mov
cmp
push
inc
xor
inc
fidiv
jmp
push
inc
stos
out
loop
out
in
test
sub
out
fsub
push
push
push
adc
mov
ins
xchg
(bad)
and
xchg
mov
lahf
mov
xchg
or
das
push
pop
inc
pusha
xchg
and
cmp
shl
rcr
inc
dec
je
push
je
push
ins
movs
popa
push
aad
inc
aad
push
jne
aam
push
int
cmp
xor
cmp
inc
push
push
xchg
sbb
push
lods
sub
push
fcomp
mov
daa
movs
ret
mov
aas
xor
xor
dec
cmp
push
ins
popa
push
stos
add
push
aam
xchg
loope
cmps
xor
aas
loope
push
arpl
add
aad
sbb
jg
ins
addr16
cmp
sbb
or
cmp
sbb
cmp
fisubr
xchg
je
and
jge
nop
add
push
dec
(bad)
sbb
fld
xlat
mov
jns
xchg
inc
push
aam
inc
add
xor
add
stc
sbb
mov
sbb
and
popf
rcl
adc
inc
das
push
jbe
add
and
je
sbb
fidivr
ret
or
sbb
and
pop
lods
push
in
lds
inc
ret
inc
push
mov
dec
xor
fstp
lock
or
inc
push
dec
lods
nop
into
or
adc
sbb
and
neg
sbb
ret
fsub
cmp
or
and
daa
adc
neg
rcl
cld
jo
cmp
push
push
ins
out
inc
dec
jl
inc
xchg
jle
shl
push
jo
mov
jb
jl
lea
ins
cmp
nop
sub
pop
push
push
and
mov
shr
mov
or
pop
out
and
lds
lock
inc
lock
dec
dec
ja
sti
dec
stos
scas
and
pop
call
jns
imul
jo
and
movs
fadd
sub
sbb
sub
add
pop
or
pop
sbb
and
jo
outs
(bad)
push
xchg
cmp
fdiv
mov
aad
pop
mov
ja
pop
mov
push
aad
lock
(bad)
mov
fst
outs
sahf
jmp
sub
mov
pop
push
xor
fst
jp
push
inc
jne
cs
bound
sub
fcmovb
jo
sbb
dec
mov
test
push
dec
push
sub
inc
icebp
clc
inc
cld
ss
dec
push
dec
dec
xor
mov
fistp
add
cmp
xor
inc
das
mov
int
clc
cmp
inc
push
push
movs
(bad)
fwait
imul
fiadd
push
jp
(bad)
adc
ins
fcomp
iret
mov
cs
cld
push
mov
aam
loop
or
retf
mov
cs
ins
fadd
jbe
adc
and
imul
inc
mov
or
push
sub
lds
inc
dec
inc
or
sub
push
or
dec
mov
sahf
ja
pop
sub
in
push
xchg
push
fst
dec
inc
out
push
dec
inc
sbb
inc
arpl
fcom
xor
add
ins
out
aaa
scas
or
xor
mov
inc
mov
pop
mov
data16
dec
ret
movs
sar
fwait
mov
inc
xor
xchg
mov
jne
push
movs
dec
fdiv
out
jne
fadd
jno
xchg
push
neg
xchg
add
push
push
inc
xor
push
fisttp
pop
adc
lds
int3
mov
sub
or
sbb
pop
outs
push
and
xor
mov
fdivr
adc
and
scas
shr
je
inc
add
aas
add
push
cwde
shr
or
cmp
xor
rcpps
dec
cmps
adc
dec
mov
and
sub
jne
add
pop
test
cs
jle
in
inc
add
pop
add
ja
repnz
adc
mov
pop
dec
push
addr16
mul
call
das
push
xchg
gs
or
mov
shl
sbb
or
sbb
push
dec
push
out
in
fbstp
push
ds
sbb
ins
sub
sub
sub
cmp
lea
cmp
mov
ss
mov
push
ins
mov
push
mov
das
xor
xchg
and
and
sbb
push
xor
and
push
ss
and
jo
push
bound
fld
aaa
xor
push
dec
ror
in
fild
test
and
outs
dec
inc
push
div
gs
xor
xchg
xor
xor
ror
jo
push
ins
adc
mov
sar
xchg
iret
jae
add
mov
mov
push
add
xchg
dec
inc
loopne
ja
jae
adc
hlt
loop
cmps
xor
add
adc
std
or
outs
jo
or
bndldx
pop
in
push
test
sbb
iret
sbb
xchg
and
inc
dec
adc
xor
mov
hlt
or
inc
fdiv
mov
dec
pop
ins
imul
bound
cmp
or
push
cli
mov
pop
mov
add
(bad)
sub
mov
add
loopne
loopne
pusha
inc
je
inc
popa
mov
loopne
sahf
cmp
and
adc
pop
in
aam
adc
adc
int3
or
outs
jne
xchg
or
sbb
fadd
adc
in
push
push
ror
in
inc
pop
inc
dec
inc
push
push
inc
push
or
sbb
mov
mov
daa
mov
fdivp
sbb
gs
pop
push
mov
jnp
imul
outs
popa
xor
mov
outs
push
arpl
fiadd
ins
shl
push
sbb
fsubr
pop
and
pop
loop
sbb
(bad)
cli
or
cmc
(bad)
int3
(bad)
outs
das
pop
or
xor
push
sub
sbb
mov
daa
adc
cmp
fnsave
arpl
or
adc
push
es
mov
jg
adc
or
mov
test
jb
cmp
xor
add
in
fs
or
mov
popa
mov
dec
or
test
ficom
cmp
dec
je
shr
and
inc
xchg
or
jbe
dec
inc
pxor
pop
push
pop
push
bound
pop
or
xchg
cdq
mov
xor
adc
ret
mov
mov
pop
sbb
or
pusha
push
in
stos
hlt
push
add
add
addr16
pop
cmp
jl
xadd
popa
(bad)
jge
mov
pop
sbb
jp
loop
popa
imul
pusha
add
add
xchg
and
scas
xor
jnp
or
test
sbb
add
xchg
cmp
(bad)
push
sbb
dec
sbb
mov
in
or
xchg
and
(bad)
int
mov
sub
push
mov
int3
retf
retf
les
xlat
dec
or
or
push
push
clts
adc
(bad)
or
or
or
mov
pop
jmp
add
call
push
pop
je
jbe
sub
nop
ins
cs
bound
dec
rol
aas
js
loop
and
add
xchg
dec
cmp
and
push
adc
dec
xor
pop
lock
jo
push
push
jp
push
arpl
arpl
and
ror
push
test
and
ins
lods
mov
pop
scas
cmp
sub
movs
std
inc
je
xor
cld
push
and
(bad)
(bad)
and
xor
xor
aaa
cmp
xor
and
push
das
xor
outs
(bad)
fstp
das
push
sub
xor
xor
and
and
or
(bad)
adc
inc
inc
fstp
scas
mov
je
cmp
das
ja
cs
cs
das
xor
add
xor
ret
pop
and
or
mov
loope
sub
sub
sub
mov
inc
add
jo
xchg
das
js
jo
push
adc
xor
imul
jo
ins
xor
repnz
or
fisubr
add
jmp
mov
cmp
cwde
or
ins
adc
mov
inc
jbe
jae
inc
pop
arpl
das
cmp
data16
or
xchg
xor
and
cmp
ins
or
mov
add
cmp
add
mov
int3
retf
push
inc
(bad)
inc
stos
bound
cmp
fnsave
fcomp
sub
xor
push
xor
xor
xor
adc
cmp
xchg
or
fs
mov
imul
xchg
ficomp
sub
test
(bad)
mov
pushaw
sub
(bad)
push
sub
stos
add
xor
inc
adc
dec
int3
jbe
fisttp
and
imul
or
xor
sub
stos
scas
mov
bound
arpl
fs
cmp
xor
mov
arpl
xor
mov
mov
sbb
dec
lock
lds
fisubr
aad
fcomp
loopne
sbb
xor
add
add
cs
sub
xor
fs
lods
outs
jae
frstor
cmp
mov
fcomip
add
mov
xor
adc
adc
push
loope
mov
xor
(bad)
ja
sub
out
lea
inc
cmp
je
inc
in
adc
add
ins
mov
sbb
aaa
sub
push
inc
sub
loope
cmp
into
ret
add
fisubr
xor
pop
pop
add
clc
mov
ins
jne
aaa
je
rol
fistp
mov
adc
pop
cmp
sub
sbb
imul
mov
(bad)
ds
cli
xor
outs
pusha
add
add
jae
xor
xor
shl
or
mov
xor
ret
movs
xchg
xor
dec
imul
adc
inc
fldcw
leave
push
pusha
mov
mov
stos
push
add
stos
push
pusha
add
bound
pusha
mov
mov
or
js
popa
arpl
je
outs
fs
push
aas
ds
pop
and
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
add
(bad)
(bad)
inc
movs
dec
xchg
(bad)
out
in
mov
push
xor
or
cbw
bound
aas
and
(bad)
(bad)
inc
movs
adc
loope
xchg
test
(bad)
adc
add
xor
orps
pop
les
(bad)
(bad)
jmp
inc
scas
inc
pusha
or
outs
dec
outs
jne
gs
outs
ja
pop
sbb
outs
gs
pop
dec
mov
data16
dec
imul
ins
imul
push
outs
jo
push
jl
push
dec
ins
popa
addr16
or
arpl
ins
ins
push
jo
dec
(bad)
(bad)
gs
add
dec
add
push
imul
(bad)
mov
enter
or
je
push
imul
outs
fisttp
sti
(bad)
jb
imul
js
or
fidiv
gs
jg
inc
popa
or
cmp
or
jcxz
push
dec
inc
or
sti
mov
dec
inc
push
push
clts
adc
push
or
or
mov
cld
or
pop
jae
adc
add
call
push
pop
call
pop
dec
dec
cmp
ins
cs
outs
bound
pop
and
add
sbb
out
mov
(bad)
fild
adc
dec
xor
inc
gs
push
jp
sub
dec
arpl
arpl
fs
ins
js
sub
int3
add
popa
and
ins
nop
sbb
cmp
push
fcmove
mov
je
xor
(bad)
dec
cld
push
and
nop
and
xor
xor
aaa
cmp
xor
fimul
aaa
sub
xor
das
xor
das
push
sub
xor
xor
ins
jmp
inc
and
or
data16
inc
fucomp
in
aaa
fcomp
scas
pop
je
cmp
das
ja
cs
cs
ret
outs
shr
das
xor
add
jae
mov
mov
pop
and
in
sub
sub
imul
sub
push
scas
fsub
add
jg
das
js
jo
cs
imul
jo
ins
xor
sbb
(bad)
gs
outs
xor
push
in
mov
fdivr
int3
xchg
sar
adc
ror
mov
adc
jbe
jae
push
ret
aas
jae
jns
gs
push
jbe
jb
gs
sbb
or
scas
xchg
lods
adc
xor
adc
push
gs
ins
xor
mov
add
cmp
sbb
pushf
dec
mov
movs
push
add
push
inc
pop
stos
aas
cmp
inc
stos
and
and
xchg
jae
cmp
gs
mov
push
add
sub
xchg
call
push
xor
xor
sub
sub
mov
push
xchg
ror
jns
jp
jmp
fs
pusha
add
cli
mov
jne
pusha
(bad)
fdivr
retfw
imul
or
jno
push
stos
stos
and
int3
fcmovb
cmp
xor
pop
fcom
dec
test
scas
out
mov
dec
inc
and
imul
cmp
add
or
fs
fs
jmp
arpl
cmp
jne
pop
sub
outs
arpl
xchg
mov
ss
mov
add
not
fisubr
fisub
lds
cmp
js
xor
mov
loopne
pop
push
gs
add
std
add
xor
jo
jb
gs
inc
popa
xor
in
add
jae
arpl
lods
xor
dec
mov
sub
lds
push
cmp
ja
cmp
add
and
jo
je
and
inc
xchg
shr
push
adc
mov
dec
loope
sub
out
pushf
xchg
cmps
cmp
pop
shl
jne
hlt
(bad)
pop
daa
pop
or
ins
jne
aaa
je
ss
rol
or
mov
xor
or
imul
gs
aad
call
add
xor
add
add
js
ins
pop
inc
repnz
jae
push
pop
push
pop
mov
nop
dec
aaa
xor
push
and
push
popf
xor
mov
outs
inc
ins
ins
and
add
push
ins
leave
add
add
push
ins
add
add
ins
add
push
add
add
push
push
add
push
ins
leave
add
ins
add
idiv
(bad)
aas
or
js
popa
arpl
je
outs
fs
sbb
rol
(bad)
(bad)
(bad)
inc
inc
inc
push
js
arpl
(bad)
(bad)
aas
add
adc
jmp
and
call
popa
ins
pop
push
pusha
aad
lods
adc
ins
(bad)
out
pushf
call
sbb
(bad)
(bad)
dec
sar
mov
push
fbld
add
dec
inc
scas
inc
pusha
or
outs
dec
fdivr
(bad)
jmp
jae
inc
outs
ja
pop
sbb
outs
gs
pop
dec
data16
dec
imul
lock
arpl
push
imul
push
mov
adc
popa
imul
js
dec
gs
in
call
add
push
outs
jo
add
push
dec
imul
inc
mov
inc
imul
or
jbe
dec
jne
add
mov
outs
pop
push
bound
mov
inc
xchg
cs
push
call
sbb
rsqrtps
push
dec
inc
dec
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
iret
faddp
mov
pusha
pop
arpl
push
daa
rol
or
dec
popa
ins
gs
pop
push
lods
fs
popa
imul
jns
or
or
enter
or
pop
mov
dec
add
or
cs
imul
pusha
pop
push
retf
dec
ins
popa
adc
xor
jo
arpl
(bad)
adc
jo
xor
xor
adc
inc
ffreep
mov
or
pop
xor
rol
xor
mov
and
xor
or
je
idiv
pop
ins
aam
adc
rcr
and
test
mov
mov
adc
xchg
mov
inc
jo
cdq
xchg
cs
or
xchg
shl
and
pop
mov
sbb
mov
jnp
outs
arpl
xlat
pop
xchg
sti
jae
push
popa
imul
push
pop
or
not
sbb
add
or
push
or
mov
mov
cs
adc
int3
jo
jae
outs
or
pop
or
sub
push
ins
std
inc
adc
push
ja
mov
xor
xor
adc
bound
sub
(bad)
call
xchg
adc
sar
sar
inc
sbb
adc
cmp
sbb
add
add
add
add
push
or
sub
or
popa
pushf
cmp
loope
jne
call
jns
jl
sub
xchg
push
adc
popa
and
jb
cmps
jae
and
int3
mov
sub
push
dec
outs
scas
add
lods
cmp
mov
jl
jo
cmp
push
inc
mov
call
dec
and
pusha
xor
push
repz
mov
xor
push
mov
push
and
mov
in
adc
mov
adc
and
int
pop
bound
push
cmps
pusha
js
push
cmp
ror
xchg
jns
and
(bad)
xor
and
je
push
ret
pusha
pop
push
(bad)
cmps
adc
push
add
jl
adc
mov
pusha
jo
sbb
mov
add
rcr
sbb
in
popa
pusha
mov
sub
pusha
mov
or
or
push
je
int
pop
test
add
inc
imul
push
rol
fld
pop
loope
or
mov
mov
adc
cmp
dec
or
sbb
shl
jo
cs
jle
retf
push
xchg
or
jg
inc
dec
inc
xchg
push
cmp
popa
and
add
dec
rcr
(bad)
mov
mov
shl
mov
dec
add
add
dec
dec
sbb
inc
push
mov
xor
add
into
gs
ja
call
and
popa
js
cs
outs
or
outs
ds
add
or
sub
in
sub
(bad)
call
out
enter
movs
jmp
popf
inc
or
mov
(bad)
(bad)
call
xor
sub
xor
mov
ror
sbb
cmp
add
and
dec
inc
sub
adc
add
and
cmp
pop
sar
mov
test
xchg
mov
adc
ja
inc
cmp
adc
ja
bound
(bad)
inc
inc
cmp
pop
pushf
pop
mov
or
add
lahf
cmp
mov
(bad)
(bad)
(bad)
call
je
xchg
dec
jae
mov
cmp
jg
adc
or
pop
sbb
(bad)
(bad)
jmp
dec
inc
cmp
cwde
jg
pop
pop
sar
pushf
jae
out
jmp
push
(bad)
(bad)
(bad)
in
cmp
sahf
arpl
fsubr
adc
aaa
inc
xchg
fwait
xchg
test
movs
cmps
pop
(bad)
(bad)
out
xor
push
push
ret
bound
inc
mov
in
lods
dec
stos
popf
push
cld
jmp
lock
js
call
add
pop
or
adc
cwde
sbb
cmp
(bad)
(bad)
jmp
mov
xor
cld
es
xor
xor
xor
fstp
sbb
add
jbe
jg
push
xchg
mov
mov
jnp
jle
mov
cmp
(bad)
fcomip
inc
xchg
js
mov
test
xchg
xor
(bad)
(bad)
call
mov
sbb
pushf
adc
push
cwde
imul
imul
(bad)
(bad)
(bad)
dec
jl
aad
xchg
inc
fld
sub
pop
push
mov
pusha
clc
(bad)
inc
(bad)
movs
mov
xchg
mov
cmp
sbb
and
pop
(bad)
aas
lahf
add
sub
out
inc
xor
xchg
mov
int
mov
mov
sar
adc
xor
loopne
xor
sbb
(bad)
(bad)
(bad)
inc
mov
xchg
ins
test
inc
test
pusha
adc
add
jo
movs
push
or
add
data16
or
in
add
jne
cmp
pusha
jp
jge
test
(bad)
dec
push
mov
gs
jns
imul
and
mov
(bad)
dec
xchg
cmps
jp
stos
jnp
lods
lods
stos
jl
stos
movs
mov
mov
mov
imul
mov
pop
mov
adc
mov
lahf
leave
inc
mov
mov
cmp
jg
(bad)
jmp
mov
scas
mov
out
scas
mov
adc
movs
or
xrelease
and
mov
or
push
sbb
sbb
dec
call
popf
xchg
and
mov
adc
movs
push
adc
mov
xchg
movs
gs
jecxz
or
and
cdq
and
inc
xor
outs
add
(bad)
(bad)
mov
xlat
aad
dec
sbb
fsubr
popa
xchg
or
pop
mov
jmp
push
jne
push
push
xor
add
push
test
addr16
jns
(bad)
(bad)
(bad)
jge
add
popf
adc
mov
test
cmps
popf
stos
or
movs
cmps
xor
(bad)
fcomip
sahf
mov
xchg
fs
jo
mov
adc
xor
dec
(bad)
(bad)
(bad)
(bad)
jmp
add
js
adc
push
mov
enter
test
pop
loop
jns
popf
mov
adc
jmp
imul
outs
cli
cmp
retf
xor
int
dec
ret
jg
sbb
sub
mov
mov
cmps
ret
push
push
or
xchg
cmp
lods
sti
jp
xchg
adc
bound
or
inc
movs
sub
and
push
rol
nop
push
add
sbb
(bad)
(bad)
inc
lea
and
inc
inc
push
pop
arpl
loop
aas
push
shl
das
jo
pop
inc
es
sbb
(bad)
push
popa
pop
sbb
add
sbb
cwde
add
push
jno
(bad)
(bad)
(bad)
dec
movs
or
bound
inc
add
or
sbb
call
clc
mov
mov
ror
mov
or
mov
push
add
inc
xor
mov
pop
push
sbb
add
out
xchg
mov
(bad)
(bad)
jmp
dec
imul
cmp
cwde
fs
and
xor
jno
sub
inc
push
cwde
add
(bad)
mov
and
and
push
pop
stos
nop
scas
adc
adc
(bad)
call
mov
sub
push
push
mov
xor
(bad)
(bad)
out
clc
or
pop
clc
dec
ret
stos
mov
bound
xchg
xor
cld
(bad)
out
shl
or
ds
out
das
jb
pop
(bad)
(bad)
(bad)
(bad)
cmp
dec
xchg
xchg
adc
xchg
xchg
pop
cmp
xchg
fwait
pushf
xchg
mov
xchg
stos
cmp
and
sbb
or
add
push
popf
adc
push
sbb
mov
push
mov
(bad)
adc
mov
pop
pop
add
(bad)
(bad)
(bad)
(bad)
jge
push
or
or
dec
fidivr
push
add
or
xchg
fwait
dec
xor
or
rol
inc
shl
add
xchg
fwait
push
add
(bad)
(bad)
jmp
sbb
add
dec
shl
sub
test
jo
adc
shl
push
adc
or
aam
adc
mov
push
sub
stos
loope
aad
(bad)
(bad)
(bad)
jg
sub
inc
rcl
xor
xor
inc
or
mul
mov
movs
in
les
call
mov
and
cmp
xchg
(bad)
(bad)
jg
(bad)
sbb
dec
and
dec
adc
add
mov
dec
jmp
call
mov
dec
and
add
test
lahf
es
push
mov
cmp
sbb
test
inc
xor
(bad)
(bad)
dec
test
push
and
or
or
retf
call
icebp
mov
loopne
retf
(bad)
dec
mov
adc
mov
icebp
adc
retf
sar
ret
movs
sbb
clc
loop
mov
add
dec
inc
jmp
outs
clc
pop
push
inc
jp
inc
mov
xchg
data16
fwait
and
pop
test
add
cmp
xor
and
add
push
add
movs
ins
sbb
add
add
jg
sbb
(bad)
or
push
lds
nop
mov
(bad)
call
ror
adc
into
ret
adc
lds
call
std
(bad)
(bad)
jmp
or
out
jmp
push
sub
fwait
push
loopne
push
pop
adc
jmp
and
add
lock
fwait
pop
test
hlt
test
jbe
inc
jge
sbb
or
pop
scas
hlt
mov
call
bound
sbb
ret
pop
pop
cmp
pop
cmp
(bad)
test
(bad)
enter
sub
or
(bad)
(bad)
jmp
fimul
add
cmp
shl
adc
inc
out
call
pop
(bad)
(bad)
call
in
mov
jne
or
xor
nop
push
push
add
je
add
call
nop
xchg
mov
or
lea
pop
sbb
add
ror
stos
pop
mov
mov
inc
outs
test
inc
add
lds
pop
adc
ins
add
movs
mov
add
(bad)
(bad)
(bad)
js
sub
push
sbb
ror
mov
aam
add
inc
outs
inc
add
push
aas
dec
faddp
jmp
(bad)
jmp
out
adc
pop
clc
rol
rol
mov
stos
inc
xor
ret
add
pop
or
adc
xor
xor
add
aad
adc
push
push
or
mov
dec
imul
xchg
cmp
dec
xchg
xchg
cmp
cwde
cdq
xchg
movs
xchg
das
add
adc
cmp
sbb
pop
scas
scas
inc
jne
jle
mov
pop
mov
push
repz
imul
cmp
push
ss
cmp
push
or
add
inc
xchg
loope
aas
adc
and
int3
jmp
(bad)
jmp
add
sbb
icebp
ds
cli
ss
lock
push
mov
and
pop
cli
(bad)
(bad)
aas
or
sbb
xor
ss
or
mov
or
sub
(bad)
jmp
or
dec
fmul
push
mov
add
pop
dec
pop
sbb
mov
cs
fs
jle
push
jp
push
jne
pop
jb
and
push
or
(bad)
fcomip
pop
xchg
mov
inc
or
fwait
fwait
mov
push
pop
push
mov
mov
enter
sbb
test
xchg
inc
das
or
mov
fimul
mov
mov
mov
dec
outs
pop
mov
sub
(bad)
(bad)
inc
bound
pop
ret
adc
sub
int
adc
pop
loopne
shl
add
mov
inc
cs
shl
jle
jno
cmps
in
adc
pop
inc
(bad)
mov
or
and
or
outs
jae
(bad)
pop
and
dec
jp
cli
in
add
imul
inc
xor
inc
sti
push
push
outs
addr16
push
dec
inc
or
dec
dec
inc
push
or
out
push
inc
add
pusha
or
and
(bad)
xor
mov
jae
inc
inc
add
addr16
dec
inc
or
(bad)
or
popa
add
push
clc
aam
in
mov
push
mov
inc
(bad)
push
dec
mov
xchg
pop
xchg
or
mov
repnz
add
and
add
push
adc
loop
aas
aaa
into
pop
repz
rcr
sub
(bad)
(bad)
jmp
mov
sahf
(bad)
je
push
call
(bad)
(bad)
(bad)
mov
lock
xchg
xor
xor
add
and
fsubr
out
add
add
ret
inc
or
xor
(bad)
dec
or
inc
aas
hlt
inc
leave
mov
mov
test
jmp
mov
mov
push
pop
or
js
sbb
scas
test
sti
cmps
pop
mov
movs
hlt
loope
shl
sar
mov
jg
mov
xchg
inc
retf
push
pop
add
shl
std
loopne
lds
pop
scas
sub
fst
xor
out
push
add
pop
jp
or
(bad)
(bad)
jg
leave
in
sub
retf
jne
inc
jae
cli
push
stos
lods
retf
(bad)
call
adc
cmp
mov
hlt
leave
push
cmp
sbb
adc
add
(bad)
fdivrp
add
das
out
mov
xchg
test
movs
pusha
jg
ds
out
(bad)
(bad)
in
dec
mov
loopne
mov
xchg
fiadd
mov
nop
pop
mov
jge
sar
call
push
xchg
scas
add
sbb
lahf
loop
sti
add
jmp
(bad)
mov
lea
ins
cmp
mov
push
out
in
(bad)
fistp
mov
mov
and
les
sub
les
pop
in
pop
leave
bound
xchg
lock
(bad)
dec
nop
shl
mov
fisub
call
rcr
mov
xchg
xor
fild
clc
inc
sub
add
outs
cmps
(bad)
jg
lock
add
xchg
fadd
cli
inc
aas
jp
(bad)
jg
push
pusha
push
rcr
inc
ins
movs
out
ret
push
sahf
aad
loopne
(bad)
icebp
inc
or
and
ficomp
bound
adc
(bad)
dec
test
add
(bad)
and
xchg
lods
rcr
repz
popf
(bad)
mov
cli
pop
daa
int3
dec
push
push
retf
mov
into
add
lock
pop
lock
call
inc
int
mov
inc
loop
and
and
retf
jg
jmp
sub
call
xchg
jo
popf
data16
mov
add
(bad)
out
aaa
mov
jmp
jnp
aam
push
setb
cmp
ja
xchg
and
xchg
mov
sbb
(bad)
fisub
xor
cmps
jge
jp
(bad)
push
daa
jno
loopne
daa
cmps
out
mov
push
sub
jle
dec
adc
movs
push
cmp
arpl
mov
jge
sbb
sub
mov
sbb
leave
sbb
movs
mov
js
mov
inc
dec
ss
mov
xlat
xor
icebp
inc
mov
xor
pop
dec
(bad)
cld
(bad)
(bad)
inc
cwde
mov
nop
push
mov
out
js
xchg
outs
dec
jl
mov
and
sub
(bad)
fnstsw
aaa
push
and
mov
and
xchg
jg
add
jle
sbb
call
shl
fstp
jns
fs
sub
cwde
in
sbb
(bad)
mov
add
bound
fs
jg
dec
mov
cmp
push
jmp
(bad)
and
outs
push
mov
xchg
fcmovb
cmp
inc
and
(bad)
mov
std
mov
and
mov
inc
mov
pop
and
dec
stos
add
sub
imul
in
dec
or
fcomp
or
pop
or
movs
xlat
push
jmp
pop
in
je
jns
xchg
fistp
push
jmp
lea
inc
inc
add
loope
(bad)
dec
movs
xor
pop
xor
push
test
cmps
outs
sub
and
sub
jmp
jg
rcl
adc
jo
mov
lock
mov
in
jbe
cmps
fs
push
shl
inc
clc
jecxz
add
sti
sub
movs
dec
scas
dec
push
mov
test
sub
mov
leave
mov
add
cmp
xor
(bad)
mov
inc
arpl
icebp
dec
inc
dec
in
jb
into
add
jmp
cmp
shl
rcr
lahf
mov
and
pusha
add
call
loop
pusha
loop
adc
add
loope
das
adc
loop
mov
int3
ror
neg
jg
(bad)
(bad)
fdivr
fst
ds
js
xchg
cmp
cdq
lock
lock
push
xchg
cmps
(bad)
call
test
xlat
mov
movs
ficomp
or
lods
std
dec
xor
es
sbb
sub
cmp
lock
push
xor
cdq
push
jg
pop
sub
movs
sahf
dec
outs
lahf
and
cld
call
dec
retf
cmp
(bad)
clc
(bad)
dec
xor
mov
js
popa
cwde
int3
jecxz
cmp
xchg
aaa
push
push
mov
mov
pop
scas
(bad)
(bad)
fistp
add
jb
pop
fidiv
aad
adc
sar
mov
(bad)
call
pop
lods
out
aam
sbb
sub
das
jmp
fnstsw
lods
sub
jne
or
mov
jmp
(bad)
jmp
inc
jg
ins
pop
adc
lahf
sbb
adc
lods
or
fsubp
jmp
inc
push
add
jmp
xlat
arpl
(bad)
fcomip
push
push
xchg
dec
push
cmp
cmps
inc
call
xbegin
call
into
movs
xchg
add
lahf
sahf
xchg
lods
inc
mov
pop
cli
or
(bad)
call
cmp
inc
imul
push
sub
int3
pop
test
(bad)
out
(bad)
fsubrp
aad
aas
leave
fnstenv
inc
(bad)
push
jcxz
imul
(bad)
in
ja
inc
test
xor
nop
adc
xchg
nop
shr
pop
push
lock
sub
inc
pop
inc
(bad)
dec
jmp
pop
jle
sub
lahf
faddp
push
(bad)
(bad)
(bad)
call
jl
and
jecxz
mov
nop
pop
sbb
inc
jmp
sub
and
(bad)
(bad)
mov
xchg
fldcw
(bad)
(bad)
jge
mov
lock
inc
in
lea
inc
loope
iret
inc
and
inc
test
mov
imul
sbb
ror
pushf
push
push
dec
dec
hlt
psrlw
movs
sub
ds
or
xchg
test
and
sti
(bad)
(bad)
call
movs
and
call
ja
loop
sahf
jne
mov
xchg
stos
cld
js
(bad)
(bad)
dec
mov
les
mov
(bad)
mov
cmps
dec
shl
push
dec
xor
call
aam
lods
jmp
mov
add
(bad)
(bad)
pop
add
(bad)
pop
dec
cmp
cmc
(bad)
jmp
cmps
pop
add
stc
sti
jmp
dec
jg
(bad)
fiadd
pop
popa
hlt
call
mov
push
ror
pop
int
sbb
(bad)
(bad)
(bad)
cmp
xor
std
xchg
xor
jp
or
mov
inc
not
fcmovu
rol
ins
xchg
adc
(bad)
(bad)
dec
push
pusha
bound
setl
aad
mov
xchg
cwde
jne
inc
out
(bad)
pop
mov
dec
out
sbb
lods
outs
mov
sbb
or
(bad)
jge
xor
adc
adc
cmp
lds
lds
mov
(bad)
(bad)
inc
xor
mov
cli
or
mov
or
or
movs
imul
push
cld
fwait
sbb
cmp
dec
shl
(bad)
je
(bad)
mov
cmp
push
cmp
shl
scas
and
xor
mov
ja
cmp
pushf
cmps
nop
cmp
and
xchg
(bad)
and
cmp
xchg
add
mov
push
inc
and
mov
jmp
sbb
jmp
loope
dec
int
pop
push
pop
or
ja
cld
add
or
in
cmp
push
xor
inc
loopne
mov
jbe
cli
bound
sti
jmp
sahf
add
inc
movs
lds
lods
and
rcl
(bad)
out
(bad)
call
jp
mov
push
add
push
(bad)
pop
retf
stc
and
inc
inc
jecxz
sub
scas
movs
lock
(bad)
fild
jb
inc
adc
add
pop
jno
stos
xor
xchg
mov
retf
lea
pop
dec
loop
dec
aas
push
mov
jb
dec
mov
adc
jmp
dec
push
xlat
adc
sbb
ror
ja
scas
pop
inc
jg
aas
std
and
leave
(bad)
es
enter
jne
(bad)
jne
cmp
(bad)
inc
add
cmc
pop
out
mov
fild
pop
out
adc
dec
ud0
std
push
ja
and
push
jmp
les
es
clc
xchg
mul
pop
add
lods
out
fs
out
sbb
rol
fisttp
sahf
and
iret
pop
mov
jo
(bad)
jmp
push
xor
xchg
inc
mov
mov
cli
(bad)
xlat
mov
mov
cmp
mov
(bad)
inc
sub
mov
and
mov
into
dec
out
out
out
add
(bad)
mov
out
out
pop
or
cwde
inc
scas
ss
rcr
(bad)
call
mov
hlt
pop
jbe
jl
sbb
mov
mov
dec
div
mov
cmp
retf
and
(bad)
(bad)
call
push
mov
cwde
pop
shr
fwait
lods
pop
and
imul
(bad)
jg
push
mov
adc
mov
mov
push
adc
repz
cmp
outs
xor
call
xchg
jge
adc
div
hlt
pop
nop
or
retf
mov
loope
popa
gs
sub
fidiv
sub
mov
scas
xchg
(bad)
outs
and
and
push
loop
jbe
mov
not
cmc
add
and
(bad)
call
lods
mov
loop
mov
stos
mov
fucomp
stos
inc
pop
jmp
lock
(bad)
aad
shl
stos
outs
dec
iret
push
push
fadd
cmp
jp
aad
cld
jmp
mov
jp
test
dec
iret
adc
(bad)
call
mov
test
push
add
sbb
cmp
rol
(bad)
call
jmp
lds
jo
scas
push
xor
leave
mov
xor
enter
addr16
jmp
cmps
ja
aas
imul
and
fcmovb
das
mov
das
nop
js
loop
cwde
stos
xor
mov
sbb
cmp
mov
dec
jnp
and
mov
arpl
std
pop
pop
and
inc
aaa
mov
(bad)
(bad)
(bad)
fsub
or
je
mov
sub
dec
pop
pop
jmp
lods
mov
lds
or
ret
pop
push
mov
test
xchg
push
pop
push
ret
mov
sub
inc
fsubr
adc
sub
adc
call
or
dec
push
xchg
enter
mov
call
inc
cmp
mov
pusha
aad
xor
fistp
(bad)
sbb
and
cli
sahf
inc
out
in
cwde
int
push
jae
test
inc
cld
das
dec
clc
jno
jmp
leave
shr
mov
outs
sbb
(bad)
xchg
in
lods
adc
pop
mov
jbe
jl
inc
inc
leave
pop
fs
cmp
fstp
mov
push
(bad)
jmp
inc
(bad)
js
pop
mov
arpl
cli
imul
ja
inc
push
and
(bad)
(bad)
call
lods
hlt
mov
int
sahf
fcom
add
jbe
aas
jbe
lahf
mov
dec
and
call
(bad)
push
jle
jmp
data16
jg
fdivr
stos
cmps
rcr
daa
pop
push
adc
push
aad
jge
jp
in
ds
fistp
cmp
lods
imul
mov
clc
call
mov
and
mov
cmp
inc
push
(bad)
(bad)
mov
pop
mov
lock
jmp
mov
cs
cli
cld
addr16
sub
mov
or
cmp
and
xlat
int
(bad)
(bad)
xchg
push
(bad)
inc
or
aam
ja
ins
jl
push
in
cld
sahf
mov
push
daa
add
(bad)
aas
rcr
cwde
cmp
pop
pop
xor
xor
out
pop
or
inc
(bad)
jmp
dec
adc
mov
pop
pushf
shl
fmul
xchg
(bad)
mov
mul
jns
fild
cmp
and
mov
jg
jg
mov
add
add
pop
js
(bad)
outs
xchg
cmc
fucomp
jecxz
outs
pop
pop
mov
add
(bad)
sub
cs
call
dec
mov
jbe
dec
sub
shl
mov
cmps
push
mov
dec
imul
loope
mov
popa
(bad)
xor
jl
cmp
add
jmp
mov
popa
loop
mov
mov
addr16
in
ror
pop
jmp
call
inc
sub
adc
sub
sub
mov
xchg
pop
es
movs
cli
xchg
jg
mov
int3
ret
push
jns
xchg
cmp
rcr
outs
cli
sub
dec
fs
gs
repnz
jmp
mov
inc
pop
sbb
jg
add
into
test
push
sahf
clc
push
(bad)
in
repnz
(bad)
in
push
fldenv
shl
movs
(bad)
iret
imul
or
sub
clc
lods
cli
scas
(bad)
pop
xchg
add
retf
(bad)
dec
mov
push
stos
dec
dec
add
loop
outs
movs
idiv
lock
inc
jbe
and
dec
aam
adc
fcomp
stos
or
(bad)
out
mov
dec
fsubp
js
shl
or
(bad)
call
fsub
add
jecxz
xchg
add
nop
inc
std
xchg
(bad)
mov
daa
pop
je
inc
movs
cmc
jecxz
sub
lods
es
mov
inc
stc
aaa
add
aam
je
(bad)
ret
aas
and
xor
(bad)
jg
ss
jo
jbe
push
mov
sub
lock
sbb
push
call
mov
(bad)
fst
add
mov
(bad)
(bad)
(bad)
jmp
add
inc
in
mov
dec
or
lahf
dec
repz
inc
dec
sti
(bad)
jp
cs
xor
push
inc
mov
add
and
xchg
cwde
(bad)
mov
in
add
out
loope
xchg
mov
mov
lds
int
inc
hlt
and
inc
loop
jmp
cmp
xor
jle
adc
popf
int
cmova
leave
mov
daa
dec
push
add
add
movs
sbb
mov
jle
leave
mov
push
call
push
pop
(bad)
xchg
repz
adc
(bad)
(bad)
(bad)
fild
inc
and
and
clc
dec
xor
add
sbb
mov
nop
xchg
call
shl
pop
and
mov
dec
inc
pop
push
or
out
mov
clc
dec
idiv
movs
jle
aam
cmp
ror
jmp
(bad)
push
pushf
add
int3
push
and
mov
xor
imul
sar
or
out
hlt
cmp
movs
push
lahf
sbb
sub
call
cld
jg
clc
mov
dec
in
add
cvtdq2ps
fisttp
inc
sbb
daa
(bad)
ficom
dec
jae
jmp
xor
inc
gs
xor
or
shl
int
mov
mov
loope
adc
push
aaa
movs
je
cmc
mov
or
ja
dec
test
dec
xor
iret
and
int3
mov
popa
xor
test
test
xchg
dec
call
and
pop
mov
mov
push
sub
xchg
dec
pop
in
dec
ja
(bad)
dec
sbb
push
and
pop
repz
cmp
and
pop
std
call
imul
inc
add
test
and
add
cmc
(bad)
and
cmp
inc
scas
push
in
and
call
test
enter
ja
and
add
out
inc
jb
dec
sbb
imul
clc
dec
ins
add
mov
enter
xchg
pusha
fld
call
jl
xchg
jp
cmp
call
aad
ret
(bad)
fucomi
and
ja
and
xor
in
or
cmp
xchg
xchg
stos
push
cmp
jmp
(bad)
shr
mov
xchg
das
inc
mov
xchg
aas
and
ret
cld
out
sti
hlt
pop
das
pushf
fld
inc
fwait
pop
sbb
mov
cmps
mov
xchg
clc
pop
and
xchg
and
call
shl
pusha
adc
mov
pop
push
in
and
seta
(bad)
fbld
pusha
js
aam
pop
outs
test
in
and
je
xor
ret
(bad)
jmp
dec
jmp
std
cdq
fisttp
or
dec
jecxz
add
sysret
mov
test
cmp
outs
cli
push
mov
sti
stos
mov
fsubr
inc
call
and
sub
or
aad
xor
lods
pop
(bad)
stos
add
(bad)
not
int
pop
dec
gs
mov
sub
adc
jnp
push
lock
test
ja
push
stos
sbb
outs
mov
(bad)
aas
sti
inc
pop
push
xchg
cli
mov
das
and
cmp
lds
or
js
adc
add
ins
mov
int3
into
(bad)
dec
push
pop
add
push
inc
cmp
(bad)
xchg
ror
mov
out
in
(bad)
std
push
rcr
sbb
add
adc
push
je
push
aas
and
(bad)
fild
sbb
lock
aaa
add
popf
popf
jl
les
lock
inc
call
pop
leave
xchg
push
fcomi
nop
xchg
jle
sti
push
jl
ins
cmp
outs
adc
lods
ins
jbe
push
mov
push
(bad)
fild
inc
lods
xchg
ds
mov
jge
mov
push
xchg
pop
mov
xlat
push
call
cmps
aam
int3
mov
mov
mov
in
outs
fsub
rol
imul
loope
scas
cli
inc
test
cdq
cwde
es
aas
mov
cmp
lock
pop
sbb
jg
dec
or
ja
xlat
pop
cmp
dec
and
xchg
jmp
(bad)
(bad)
jmp
pop
lea
mov
push
xchg
addr16
movs
mov
jmp
adc
dec
ins
loop
jno
jno
pushf
lods
bound
shl
xchg
inc
(bad)
(bad)
or
xlat
dec
popa
addr16
loope
das
mov
mov
or
adc
js
adc
mov
repz
and
jge
out
xchg
mov
hlt
jo
pop
inc
dec
xor
scas
stos
sbb
sub
movs
gs
(bad)
(bad)
call
jns
pop
lods
iret
mov
into
lods
shl
push
sub
into
sbb
(bad)
(bad)
jg
dec
add
cmc
mul
jg
pop
ja
or
mov
xchg
or
out
xchg
xor
push
outs
dec
aad
retf
dec
cwde
push
neg
pop
mov
mov
into
mov
lods
inc
pop
jp
inc
cmp
call
(bad)
fst
in
leave
add
sub
lods
push
loop
fild
(bad)
jmp
mov
cld
xchg
xchg
sahf
shr
in
pop
leave
mov
in
in
cmc
shl
test
movs
mov
push
test
adc
sbb
jmp
stos
or
nop
(bad)
(bad)
(bad)
call
cmp
arpl
movs
bound
dec
retf
(bad)
in
ins
fldenv
in
mov
pop
jecxz
mov
adc
mov
xor
pusha
cmc
loopne
(bad)
jmp
mov
in
aaa
out
mul
dec
push
pop
xor
(bad)
(bad)
call
xchg
enter
fs
mov
mov
test
pop
imul
xchg
jecxz
(bad)
out
and
pushf
jp
xchg
inc
inc
out
imul
idiv
push
cld
fild
(bad)
stc
clc
div
test
push
movs
cli
js
imul
icebp
cmp
xlat
(bad)
(bad)
(bad)
cmp
xor
stos
or
inc
cmp
daa
mov
in
push
add
(bad)
mov
imul
ins
cli
pop
ins
jmp
xchg
ret
push
call
scas
xlat
pop
sbb
mov
push
sbb
pop
call
inc
add
cmps
js
push
lea
in
push
pop
clc
add
push
pop
cmc
pop
std
retf
or
dec
sbb
movs
and
(bad)
mov
mov
cld
les
mov
mov
and
mov
xchg
dec
in
(bad)
mov
(bad)
(bad)
call
test
xchg
jge
xor
fimul
cs
gs
jbe
fdivr
jmp
ins
aaa
movs
ss
imul
mov
dec
sbb
sub
loope
jl
mov
add
fwait
cs
jns
movs
(bad)
aas
lock
mov
cmp
inc
call
mov
cli
(bad)
(bad)
ficomp
nop
add
test
and
enter
fst
or
jge
call
cmp
inc
cmp
cmps
push
daa
dec
outs
cmp
iret
ret
out
out
dec
ret
js
sub
repnz
cmp
js
push
iret
js
daa
or
daa
cwde
sar
(bad)
dec
lods
addr16
mov
in
idiv
out
hlt
push
ds
(bad)
(bad)
jg
and
mov
mov
pop
mov
aas
mov
cmp
imul
cld
imul
sbb
in
add
add
repnz
cli
(bad)
jmp
das
inc
dec
shl
mov
mov
mov
(bad)
(bad)
mov
lds
or
mov
mov
sub
(bad)
fdivrp
pop
sub
push
(bad)
mov
mov
sbb
xchg
repnz
int3
mov
push
(bad)
(bad)
(bad)
push
xor
sub
sbb
mov
loopne
mov
(bad)
call
out
cmps
push
xor
gs
add
imul
scas
daa
hlt
aas
sar
jmp
cwde
mov
mov
repz
push
jae
cli
jp
cs
push
dec
(bad)
(bad)
(bad)
inc
xchg
in
out
inc
sub
clc
mov
test
mov
mov
imul
xchg
dec
jecxz
xchg
inc
neg
mov
shl
cmp
pop
(bad)
push
jmp
xchg
sub
mul
test
push
mov
in
inc
cmp
cs
(bad)
(bad)
fadd
into
sub
int
iret
fistp
ins
dec
int3
xchg
retf
leave
test
mov
dec
mov
popf
(bad)
or
out
hlt
inc
jmp
adc
jmp
inc
or
or
dec
iret
call
fidivr
(bad)
mov
lock
and
or
shl
sti
gs
std
pop
sub
(bad)
test
leave
ins
mov
cmc
push
mov
(bad)
mov
pop
fucomp
cmp
add
sub
call
retf
(bad)
(bad)
inc
(bad)
imul
sub
ror
neg
loope
cmp
adc
div
adc
std
enter
aas
ror
push
xlat
ja
or
test
add
(bad)
movs
pop
adc
cmp
push
jbe
cmp
inc
(bad)
inc
sbb
test
and
fild
pop
dec
stos
sahf
mov
xchg
lds
jmp
inc
(bad)
hlt
and
mov
or
lods
or
outs
xor
cld
retf
(bad)
call
sub
dec
(bad)
leave
loop
jecxz
test
dec
jns
stc
neg
jp
js
call
(bad)
mov
and
jnp
popf
adc
ror
pop
jo
(bad)
fcomip
sub
movs
xadd
dec
mov
inc
test
dec
repz
xchg
push
jmp
jmp
pop
in
int
ds
popa
jle
mov
push
mov
jge
jg
xchg
pop
mov
pushf
lahf
scas
lds
call
jbe
mov
mov
outs
mov
ds
(bad)
(bad)
inc
out
xchg
fist
xchg
mov
xor
dec
push
pop
mov
and
rcr
ds
int
and
std
sbb
mov
push
out
ror
mov
ins
cld
shr
or
jmp
(bad)
inc
mov
ds
jecxz
cmps
(bad)
mov
xor
mov
mov
add
scas
mov
fidiv
jnp
mov
das
cmp
stos
xchg
cli
das
pop
or
adc
cdq
daa
jle
and
lods
idiv
(bad)
fcomip
sbb
pop
sahf
and
cmp
xchg
mov
test
(bad)
imul
pop
dec
mov
xchg
fisubr
hlt
cmp
(bad)
sti
mov
jg
jle
adc
adc
int3
mov
scas
sbb
aaa
push
ins
cli
xor
(bad)
js
stos
adc
les
les
cmp
add
das
shl
dec
pushf
test
xor
dec
jl
and
(bad)
(bad)
aas
jp
loop
inc
les
xchg
test
cli
mov
xchg
imul
add
mov
and
dec
adc
ds
inc
scas
ret
sahf
cld
add
jmp
push
jmp
mov
or
daa
mov
pop
or
and
iret
dec
stos
je
fnstsw
(bad)
(bad)
in
repz
jbe
mov
mov
imul
mov
jns
adc
pop
sar
mov
xchg
cmp
pusha
mov
cmp
xor
movs
call
dec
(bad)
inc
push
mov
in
sub
inc
test
mov
sub
fnstsw
pop
hlt
jmp
jge
xor
ins
fld
iret
in
jb
add
mov
mov
mov
cld
dec
sbb
(bad)
dec
fstp
movs
imul
or
cmp
lods
push
fs
push
and
cwde
cmc
dec
popa
inc
clc
outs
mov
ret
int3
cmp
retf
cmp
and
std
(bad)
(bad)
call
xchg
ret
pop
popa
adc
(bad)
stc
mov
sbb
mov
popa
xor
shl
fcmovnu
cld
sub
popa
pop
inc
mov
sbb
jge
popa
rcr
sbb
cmp
cmp
enter
mov
popf
sbb
xor
ins
mov
arpl
xchg
retf
xor
add
ds
jle
sbb
popa
adc
(bad)
(bad)
jmp
push
ins
pushf
pop
iret
dec
mov
mov
fist
push
iret
mov
call
(bad)
pop
sub
sub
pop
sub
not
test
mov
fs
arpl
adc
not
push
cmps
mov
ror
mov
(bad)
(bad)
(bad)
jmp
pxor
or
dec
scas
mov
adc
fs
addr16
movs
jmp
les
loopne
mov
sbb
stos
inc
(bad)
out
push
(bad)
imul
nop
sti
jge
(bad)
aad
inc
and
ds
addr16
int
mov
test
inc
and
(bad)
cmc
sub
mov
dec
test
pop
adc
cmps
and
fwait
(bad)
addr16
pop
xchg
int3
and
adc
jle
jmp
and
stc
cmps
int3
js
sti
imul
and
(bad)
jmp
stos
pop
push
mov
aam
cmp
cmp
mov
dec
(bad)
(bad)
(bad)
out
cmps
pop
xor
ja
and
sti
dec
mov
xchg
inc
cwde
sti
sbb
mov
jle
cmc
mov
enter
popf
inc
dec
(bad)
arpl
mov
ins
scas
inc
stos
fbstp
nop
cmp
(bad)
mov
pop
shl
add
jnp
(bad)
mov
repnz
sar
scas
(bad)
mov
fs
lods
push
int3
push
pop
dec
push
mov
lods
pop
stc
in
sbb
or
jns
les
fst
(bad)
aas
cld
xor
cli
repz
dec
rol
mov
pop
and
(bad)
inc
test
mov
inc
fimul
shr
clc
(bad)
call
mov
(bad)
out
ss
pusha
and
imul
movs
jno
mov
add
mov
sar
inc
and
and
push
mov
retf
and
fdivr
aaa
test
xchg
cmp
outs
test
add
aas
lock
cmps
ja
mov
sti
mov
loop
pop
sbb
repz
inc
int3
sbb
popf
pop
and
scas
cmc
les
dec
inc
adc
xchg
jle
xchg
outs
in
mov
fiadd
push
(bad)
out
push
add
(bad)
in
dec
aam
mov
fild
call
and
imul
push
add
test
(bad)
(bad)
push
sub
and
inc
neg
push
inc
jecxz
gs
xchg
sub
scas
hlt
or
mov
inc
clc
add
scas
(bad)
dec
cmps
push
xor
inc
xchg
jae
out
xchg
jbe
sub
pop
jmp
mov
inc
sub
movs
je
std
push
clc
pop
dec
push
push
jmp
stos
int3
or
pop
fild
mov
mov
jmp
xchg
add
pop
push
gs
outs
dec
lock
sub
or
mov
call
mov
dec
xlat
cmps
sar
pop
dec
sar
jp
clc
or
mov
ins
jne
nop
xor
(bad)
inc
(bad)
mov
xchg
pop
and
(bad)
lock
jb
(bad)
sar
adc
(bad)
dec
push
mov
push
fwait
or
inc
jl
test
mov
retf
and
(bad)
jmp
scas
in
lea
push
xchg
jnp
out
jmp
call
imul
call
sub
mov
pop
iret
lods
outs
clc
fcomip
sbb
dec
lods
inc
sub
mov
jne
aad
inc
aad
adc
mov
test
mov
xor
and
iret
imul
(bad)
jle
(bad)
(bad)
(bad)
mov
ficom
iret
aad
or
neg
or
aad
popf
out
(bad)
jg
cmps
pop
xchg
retf
shr
inc
push
ins
stos
mov
mov
mov
or
arpl
xchg
xchg
jne
cmp
in
push
pop
icebp
(bad)
push
fbstp
add
rcr
push
scas
xor
stc
repnz
retf
adc
cwde
jno
cli
into
fist
add
lea
push
(bad)
push
jp
xchg
into
retf
xor
(bad)
xchg
cli
cmp
loop
int3
mov
daa
mov
(bad)
mov
pop
pop
stos
or
int
dec
inc
mov
cld
(bad)
push
add
xor
dec
in
push
pop
inc
(bad)
push
aam
jmp
inc
hlt
add
mov
rcr
add
jne
sub
pop
inc
sub
dec
loop
int3
push
and
out
clc
sbb
ret
fimul
mov
cmp
cmp
xor
outs
rcl
and
sub
pop
sbb
nop
(bad)
(bad)
jmp
pop
sbb
ss
sub
aas
fisub
jne
iret
arpl
std
push
cld
and
add
inc
add
sub
cmp
sbb
lds
shl
(bad)
jmp
mov
cmps
adc
and
push
xchg
xor
mov
cdq
and
jnp
fs
mov
add
xor
neg
clc
jmp
xchg
aam
addr16
jae
push
cli
fucom
(bad)
call
sub
or
outs
mov
xchg
jecxz
cmc
fld
and
mov
mov
mov
sbb
jge
call
adc
or
xchg
test
(bad)
push
cmp
adc
outs
lods
bnd
add
fadd
aam
into
inc
test
(bad)
aas
add
push
xchg
icebp
enter
jmp
test
inc
dec
pusha
xor
jb
jmp
pop
dec
hlt
mov
or
retf
(bad)
(bad)
aas
addr16
nop
mov
adc
loope
mov
outs
psubq
jg
pusha
pop
data16
dec
test
add
jecxz
movs
jmp
cmc
call
mov
rol
xor
lahf
ins
cmp
xor
add
pushf
pop
ja
(bad)
call
inc
out
xlat
jns
mov
inc
fwait
sar
das
fdiv
in
dec
or
adc
loopne
push
cmp
xchg
jle
pop
cmp
adc
cdq
pusha
in
dec
imul
das
xor
dec
xchg
in
push
jg
xchg
add
aaa
cwde
xor
dec
(bad)
jno
(bad)
jmp
call
enter
mov
das
pop
(bad)
jp
adc
int3
cmp
ror
rol
idiv
mov
ins
ins
fdiv
push
and
mov
in
(bad)
(bad)
(bad)
dec
pop
(bad)
fst
jecxz
mov
mov
jecxz
fidiv
pushf
add
lods
clc
sub
js
or
cmp
sahf
cld
inc
hlt
nop
bound
adc
inc
lds
(bad)
cmp
mov
dec
sar
retf
repz
neg
jmp
(bad)
push
loope
mov
xor
cmp
pop
mov
lods
pop
cld
jmp
clc
push
fwait
push
pop
sbb
push
inc
xchg
nop
into
arpl
js
ins
pushf
jg
sub
cli
(bad)
mov
repz
cmp
pop
xchg
sbb
push
cmps
fiadd
push
test
(bad)
mov
(bad)
mov
dec
imul
push
stos
jmp
jg
loopne
jmp
cmp
sbb
or
hlt
push
pop
mov
call
clc
test
idiv
mov
ja
cmc
sbb
adc
or
add
inc
adc
movs
aad
push
jae
(bad)
aad
cwde
(bad)
(bad)
push
mov
sbb
fidiv
in
inc
scas
inc
stc
fisubr
inc
jb
ja
(bad)
(bad)
(bad)
call
jnp
mov
push
dec
ret
push
aad
pop
jae
mov
cmp
dec
scas
mov
call
hlt
rcl
pusha
mov
adc
lock
jp
call
rol
xlat
not
pop
mov
xchg
pop
and
dec
daa
je
lods
sub
(bad)
call
ret
push
jmp
sub
call
jg
icebp
xor
adc
data16
int
(bad)
out
clc
mov
rcl
pop
rcl
mov
dec
sti
mov
out
jmp
jmp
push
sti
adc
test
imul
xchg
icebp
call
fist
dec
pop
ja
sub
cmp
cld
or
add
inc
and
and
ror
in
leave
inc
xchg
pop
(bad)
(bad)
(bad)
dec
mov
dec
(bad)
pusha
inc
mov
pushf
mov
jne
and
retf
in
push
mov
(bad)
jg
ds
adc
and
in
mov
aaa
mov
cmp
push
rcl
pop
xor
xor
jmp
pop
mov
push
scas
shr
mov
adc
add
sahf
sbb
jecxz
push
cmp
push
mov
in
inc
mov
pusha
(bad)
jmp
cli
pop
dec
jo
call
fist
fbstp
mov
(bad)
mov
mov
fsubr
mov
push
add
shl
jb
jmp
xchg
jg
and
ins
popf
mov
xchg
test
pop
hlt
and
push
movs
xor
dec
(bad)
inc
dec
mov
jmp
out
cmps
imul
das
push
(bad)
mov
pop
js
fxam
ror
ja
ds
sub
data16
(bad)
dec
loopne
in
mov
daa
sub
add
ins
fsub
push
and
mov
rol
retf
sti
pop
mov
inc
mov
dec
sub
mov
dec
(bad)
(bad)
out
adc
sbb
xor
paddd
int
and
shl
push
add
jle
cmp
mov
xchg
call
clc
mov
rcl
popa
pop
fst
cdq
push
pop
jae
out
js
or
sub
fadd
dec
sub
pop
xor
push
jno
inc
jg
xchg
jo
xchg
dec
adc
movs
xchg
scas
dec
test
jbe
mov
sti
mov
pop
add
adc
outs
cld
dec
out
sbb
fadd
leave
popf
jmp
adc
fwait
out
outs
push
jbe
movs
mov
(bad)
cld
ins
sub
shl
mov
jmp
mov
inc
or
sar
jbe
or
pusha
inc
lock
pushf
pcmpeqb
add
pusha
daa
lods
stos
inc
lods
ss
enter
sbb
sbb
push
shl
mov
ss
sar
lock
sub
ror
cli
xor
pop
in
mov
xchg
and
loop
add
mov
lods
sbb
or
add
add
je
sti
mov
dec
nop
xor
sub
add
add
in
or
std
iret
icebp
outs
add
(bad)
into
mov
std
(bad)
(bad)
fbld
(bad)
jae
fimul
lods
xor
out
and
int3
add
loop
ret
mov
lock
push
in
cmp
cmc
mov
add
out
jp
pop
pop
sbb
jmp
mov
pop
add
dec
mov
call
pusha
call
stos
popa
mov
outs
and
adc
call
jle
clc
cmps
add
sub
inc
pop
sub
adc
neg
shr
cmps
xor
out
add
ret
pop
ret
jle
nop
call
add
and
sar
outs
sbb
add
push
add
scas
add
sub
outs
adc
leave
shr
inc
aaa
cmp
loop
xchg
push
int3
daa
push
jbe
sbb
call
mov
stc
popf
jmp
push
add
js
dec
or
cmp
enter
push
lods
mov
iret
pushf
enter
push
inc
and
mov
inc
outs
xlat
out
(bad)
(bad)
inc
dec
test
push
pop
jbe
push
movs
inc
add
rcl
xchg
(bad)
or
push
push
mov
jmp
sub
ficom
sub
mov
aam
pop
dec
fisub
jg
jo
out
and
ror
and
mov
call
in
jmp
fldcw
outs
scas
dec
retf
sub
retf
adc
mov
and
(bad)
jg
adc
lock
cmps
fisubr
mov
aaa
loope
xchg
adc
jb
repnz
(bad)
imul
rcr
adc
and
mov
push
test
mov
es
sub
(bad)
jmp
mov
inc
push
test
hlt
inc
into
jbe
cld
dec
push
add
xor
pop
mov
clc
jbe
(bad)
inc
mov
sub
bound
or
mov
xlat
jg
enter
imul
bound
mov
jae
(bad)
inc
jge
imul
neg
scas
or
hlt
retf
and
fwait
(bad)
mov
pop
pop
lahf
ins
stos
xor
or
lods
add
ds
ins
mov
or
fnsave
lds
xor
aad
call
mov
mov
cwde
ret
cli
jno
fidivr
pop
mov
cmp
inc
jb
movs
test
mov
dec
or
and
(bad)
inc
xchg
aam
fcom
dec
add
(bad)
aad
sub
cmps
mov
int
jbe
inc
loop
push
mov
mov
and
adc
sub
(bad)
(bad)
dec
ficom
xor
xchg
movs
jmp
movs
adc
das
adc
(bad)
(bad)
jg
out
xchg
repz
lods
adc
push
icebp
push
adc
cmps
jmp
lods
movs
test
cmc
aam
leave
jne
mov
mov
dec
mov
js
iret
jae
xchg
jne
ins
cmps
adc
(bad)
(bad)
(bad)
call
dec
cmp
jbe
out
cli
xchg
jmp
gs
mov
rol
xchg
add
call
ins
movs
imul
retf
fs
xchg
out
add
in
mov
push
sub
xchg
dec
loop
cmp
pop
dec
push
pop
cmp
(bad)
push
sbb
into
jmp
dec
call
out
xlat
not
sub
nop
sar
mov
jg
nop
mov
ja
and
add
jae
out
pop
jg
out
scas
sub
xor
(bad)
(bad)
jg
push
push
push
add
js
push
jae
jmp
xchg
sbb
(bad)
ror
stos
pusha
movs
ss
int
push
std
outs
cli
outs
adc
push
fild
(bad)
mov
push
and
(bad)
(bad)
fild
adc
(bad)
sbb
push
pop
push
xor
in
out
xchg
jge
stos
or
dec
clc
jmp
test
add
jg
mov
sbb
enter
dec
or
aaa
pusha
addr16
mov
and
or
pop
stos
fs
into
jmp
pusha
cmps
mov
dec
gs
(bad)
(bad)
mov
cmp
fisubr
cli
push
dec
mov
ss
call
jne
in
mov
pop
cmc
xchg
mov
cmp
mov
mov
js
adc
jp
inc
dec
cld
in
movs
ds
mov
(bad)
hlt
mov
repnz
(bad)
(bad)
dec
mov
mov
sbb
fild
inc
movs
mov
push
jb
pop
mov
dec
fs
mov
jne
xor
cmps
xor
inc
sub
jmp
mov
ja
fs
or
sbb
pusha
stos
(bad)
bound
mov
mov
jmp
dec
sub
(bad)
mov
jl
mov
or
jb
inc
cmp
retf
or
test
cmc
ja
push
dec
push
inc
fsub
pop
retf
xor
mov
rol
pop
pop
fisub
mov
stos
mov
jnp
aad
je
sbb
xchg
lea
mov
inc
movs
mov
or
int
jno
ret
cwde
mov
push
std
cmp
xchg
nop
pop
inc
jmp
sub
mov
xchg
adc
adc
outs
leave
out
popf
push
add
scas
mov
ret
inc
add
xor
out
push
cli
(bad)
mov
jns
inc
mov
xor
dec
fistp
xchg
xlat
(bad)
(bad)
(bad)
call
lea
sbb
pop
mov
je
repnz
mov
icebp
popa
fldz
push
call
mov
mov
repz
dec
adc
imul
lock
mov
sub
sbb
mov
jecxz
(bad)
int
add
push
push
(bad)
(bad)
fcomp
add
mov
jmp
xor
push
(bad)
pop
lods
jae
(bad)
xor
(bad)
inc
icebp
xor
cmp
ss
and
addr16
add
idiv
(bad)
in
add
mov
sahf
push
jecxz
sbb
and
cmps
shr
int3
shl
(bad)
xor
jmp
(bad)
jge
in
test
outs
(bad)
sbb
ret
mov
into
mov
inc
dec
jmp
xchg
mov
outs
loopne
or
xor
les
push
(bad)
sub
ja
mov
pushf
mov
and
add
test
dec
add
mov
xchg
mov
shl
lods
add
sub
sbb
cwde
add
sub
(bad)
cmp
movs
push
pop
dec
(bad)
push
add
dec
icebp
js
mov
(bad)
std
fcmovbe
xor
cmp
aas
push
push
adc
sbb
lods
fdivr
hlt
lods
lock
sar
mov
sbb
cmp
pop
(bad)
out
xchg
out
clc
(bad)
fistp
mov
mov
mov
aas
mov
retf
xor
(bad)
mov
(bad)
push
call
pop
xchg
add
mul
xor
aad
push
inc
or
sbb
hlt
pop
sti
(bad)
mov
pop
cs
ds
test
call
pop
call
ss
xlat
nop
nop
dec
pop
add
loope
mov
(bad)
(bad)
(bad)
jmp
adc
int3
add
mov
dec
jmp
shl
test
(bad)
(bad)
(bad)
jge
cld
mov
(bad)
add
jb
fild
mov
mov
aas
rcl
jns
rcr
(bad)
push
rcl
stc
push
pop
pop
stc
pop
out
xchg
mov
das
mov
icebp
fadd
inc
sbb
and
add
mov
aaa
mov
mov
push
test
fidiv
int
push
xor
cdq
pop
xchg
mov
fild
in
mov
(bad)
(bad)
(bad)
call
iret
popf
dec
call
mov
or
sahf
lea
sub
cmp
or
imul
cld
pop
mov
mov
(bad)
cmp
mov
dec
mov
add
xchg
sbb
fmul
loop
inc
cmp
(bad)
inc
jge
sbb
sub
jp
test
xor
cmp
pop
psllq
mov
call
mov
xchg
xchg
or
(bad)
dec
dec
int3
jp
inc
mov
retf
movs
std
int3
jmp
jbe
icebp
mov
xchg
ja
(bad)
aaa
jnp
adc
pop
sbb
pop
adc
ficom
addr16
jmp
push
(bad)
(bad)
(bad)
jb
xlat
jne
or
(bad)
(bad)
jmp
pusha
ret
sbb
jne
int3
mov
pop
movs
lahf
scas
sbb
fwait
(bad)
out
(bad)
(bad)
nop
clc
jnp
push
pop
mov
fstp
pop
mov
ret
out
mov
inc
fist
mov
and
dec
push
jmp
mov
jne
and
rol
jae
xchg
adc
dec
loop
jb
loop
(bad)
(bad)
call
dec
out
or
sbb
mov
stos
xchg
jnp
pop
ds
out
fwait
mov
xchg
bnd
mov
pusha
inc
and
inc
xchg
(bad)
enter
jl
stc
movs
shl
stos
push
mov
(bad)
repz
or
out
data16
out
or
test
imul
jae
and
repz
(bad)
(bad)
dec
rol
daa
aad
(bad)
pop
sbb
inc
loope
xchg
(bad)
jnp
jmp
xchg
and
and
ins
scas
(bad)
mov
out
retf
cwde
mov
(bad)
dec
nop
xlat
dec
or
sbb
sub
cdq
mul
add
cdq
adc
jl
dec
mov
ret
(bad)
inc
in
mov
and
imul
jnp
push
aam
xor
icebp
jbe
or
(bad)
mov
xchg
ffree
in
fadd
push
cdq
adc
lea
test
dec
dec
cwde
jmp
shl
js
sahf
dec
or
shr
cmp
sub
jp
xor
xchg
push
(bad)
mov
xchg
mov
cmp
dec
pop
lea
push
adc
js
ds
(bad)
(bad)
jmp
cmps
movs
and
push
lahf
mov
pop
add
sbb
js
call
std
(bad)
dec
test
pop
xlat
and
mov
enter
outs
js
pop
enter
call
rcr
(bad)
dec
add
aad
lea
jmp
(bad)
(bad)
dec
iret
scas
dec
and
ror
pop
pop
retf
sti
(bad)
xor
stc
pop
mov
and
sbb
(bad)
(bad)
dec
mov
xor
xchg
jmp
pop
mov
inc
mov
repnz
stos
xlat
call
(bad)
(bad)
dec
ins
sub
das
mov
push
adc
pop
push
daa
mov
scas
mov
das
clc
call
cmp
jno
arpl
(bad)
dec
js
push
add
cdq
adc
popa
sar
ins
mov
(bad)
sbb
(bad)
repz
jge
sub
inc
xor
(bad)
fistp
push
xchg
jne
inc
or
stos
xchg
mov
iret
fild
mov
(bad)
int3
push
aaa
loope
clc
(bad)
inc
or
inc
sahf
or
out
jle
fisub
out
push
(bad)
(bad)
(bad)
out
push
mov
inc
sbb
ffreep
jae
in
in
arpl
(bad)
fidiv
jg
push
xchg
addr16
or
adc
xchg
jbe
sbb
sar
cmc
jp
mov
mov
adc
inc
inc
imul
mov
cmps
jbe
dec
sub
pop
out
adc
lahf
push
dec
push
lock
and
pop
xor
lea
jecxz
data16
(bad)
(bad)
jg
or
nop
arpl
out
(bad)
adc
xor
stc
pop
ins
(bad)
jo
sub
fdivrp
(bad)
(bad)
jmp
ret
mov
cmps
pop
fidiv
xor
or
sti
scas
mov
jle
addr16
lods
pop
(bad)
dec
xor
mov
fidiv
fadd
push
out
inc
sub
jg
(bad)
shl
inc
jae
dec
fisubr
mov
mov
imul
mov
(bad)
shl
fcom
jg
cmp
lods
scas
mov
shl
sub
sar
xchg
test
es
pop
jmp
and
mov
mov
inc
js
cli
xor
sub
mov
sub
sub
sub
outs
fwait
push
mov
xchg
dec
fld
or
shl
push
cmp
push
jae
movs
jmp
popa
ins
mov
mov
loopne
inc
mov
sub
pop
sbb
scas
inc
push
sbb
jbe
cwde
popf
inc
(bad)
inc
sub
mov
adc
into
mov
mov
(bad)
jg
pop
mov
lea
clc
fs
cmp
inc
add
inc
add
arpl
pop
fs
(bad)
(bad)
inc
cmp
cmc
addr16
dec
mov
push
jbe
inc
adc
and
xchg
xor
dec
dec
inc
mov
(bad)
mov
and
call
pop
push
in
push
and
mov
fcmovnu
leave
push
adc
ret
(bad)
(bad)
call
ss
imul
pop
iret
(bad)
pop
mov
addr16
pop
mov
pop
sbb
hlt
(bad)
call
daa
jmp
mov
clc
pop
mov
or
mov
(bad)
call
sbb
rol
cmc
mov
ficom
pop
pop
movs
jge
(bad)
(bad)
(bad)
call
push
xchg
lods
popa
pop
push
cmps
push
ins
sub
xchg
test
out
pop
data16
pop
push
aaa
inc
enter
(bad)
(bad)
jmp
std
daa
sub
inc
add
pop
repnz
pop
sar
jecxz
push
in
das
cli
(bad)
fistp
out
stos
out
test
or
mov
dec
enter
jp
sar
adc
(bad)
cmp
pop
repz
add
push
jnp
fcomp
(bad)
(bad)
(bad)
(bad)
jmp
sub
retf
aad
popf
mov
fistp
push
push
sbb
adc
test
(bad)
(bad)
(bad)
xor
dec
aad
jne
test
ins
or
cmpxchg
je
(bad)
(bad)
(bad)
jmp
sub
xlat
push
adc
sbb
or
out
xlat
or
mov
lods
fiadd
idiv
inc
rol
cmp
cli
mov
cmp
test
jg
add
xchg
pop
call
add
in
cmp
pop
imul
(bad)
(bad)
(bad)
mov
pop
in
ds
cmps
lods
mov
into
adc
cmp
cmp
pop
and
pop
cmc
(bad)
ficom
repz
lods
add
cmp
sub
test
jmp
mov
stos
dec
sub
(bad)
mov
xchg
fadd
bnd
pop
inc
adc
jle
in
(bad)
(bad)
(bad)
call
sub
addr16
cmp
push
lods
test
leave
das
xchg
ja
dec
call
stos
ret
in
mov
or
xchg
mov
mov
jecxz
(bad)
call
not
mov
fistp
add
jno
push
push
dec
aad
jmp
xchg
sbb
jg
test
or
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
fild
pop
imul
mov
fs
out
dec
mov
jnp
(bad)
(bad)
(bad)
(bad)
mov
xor
adc
jmp
cmps
mov
xchg
mov
jae
mov
(bad)
(bad)
(bad)
call
mov
(bad)
jmp
add
jne
xchg
dec
ror
xor
(bad)
popa
idiv
scas
clc
(bad)
jmp
mov
dec
adc
ret
daa
test
jp
fisubr
js
aam
xor
jmp
ins
scas
or
mov
enter
ja
push
in
(bad)
cld
(bad)
(bad)
(bad)
fist
dec
(bad)
mov
or
mov
mov
(bad)
mov
or
(bad)
cmp
inc
hlt
push
and
mov
movs
mov
mov
push
inc
sbb
idiv
xchg
(bad)
xchg
retf
and
push
rcl
fcmovne
cs
imul
pop
dec
mov
mov
xor
ins
mov
cld
pusha
jge
cmp
pop
scas
mov
mov
adc
lock
push
rcl
sub
jmp
std
fbstp
mov
inc
les
cmp
push
push
js
dec
fidivr
dec
push
movs
xchg
pop
jnp
add
int
loopne
aas
pop
add
dec
stc
pop
into
(bad)
(bad)
(bad)
call
xchg
fidivr
test
in
movs
std
(bad)
in
sub
es
mov
pop
sbb
(bad)
call
or
push
mov
test
jl
fidivr
sub
jns
(bad)
(bad)
(bad)
(bad)
fadd
test
aaa
ins
cmp
jnp
add
mov
aaa
data16
pop
push
scas
xor
jo
(bad)
cmc
es
jns
(bad)
jb
xlat
jp
shl
adc
sub
sub
adc
xchg
push
add
int
(bad)
(bad)
(bad)
(bad)
call
loop
popa
cmp
out
or
jp
lds
fiadd
repnz
into
inc
pop
jmp
lock
mov
pop
jmp
and
fst
xchg
mov
cmps
mov
rcr
lahf
sub
into
jmp
sub
mov
movs
icebp
call
dec
cmc
pop
mov
or
mov
inc
inc
out
(bad)
(bad)
inc
ins
das
inc
scas
in
cwde
sub
push
xor
retf
xchg
adc
rol
(bad)
(bad)
(bad)
jmp
pop
into
out
add
stos
cmp
cmps
jmp
aaa
icebp
mov
pop
call
std
jmp
cmp
or
mov
lahf
push
mov
dec
fdiv
(bad)
(bad)
jnp
fdivp
mov
loopne
dec
nop
mov
repnz
ja
mov
(bad)
lock
and
(bad)
inc
jle
push
bswap
lds
stos
cwde
fst
or
jmp
ror
cmp
test
sar
dec
inc
pop
xchg
pop
cmp
pop
pop
dec
cmc
nop
call
jbe
call
(bad)
popa
sbb
jnp
inc
and
cmp
(bad)
mov
rcl
fldlg2
pop
daa
int
dec
mov
cs
dec
mov
(bad)
mov
frstor
jns
nop
neg
xchg
and
test
add
mov
pushf
pop
lock
push
inc
mov
int3
xor
adc
cmps
js
push
jo
(bad)
(bad)
xchg
cmps
inc
jns
data16
clc
cmc
sub
test
cmps
pop
jecxz
adc
inc
push
push
in
popf
aad
mov
(bad)
(bad)
dec
push
pop
xor
rol
adc
ins
dec
hlt
cmovb
mov
push
pop
dec
cdq
(bad)
pop
cld
jmp
xchg
outs
mov
out
mov
inc
sti
xor
enter
ja
dec
inc
xchg
outs
inc
pop
push
and
cmp
fcomp
xchg
cs
(bad)
(bad)
jmp
fwait
sbb
test
lds
adc
and
aas
outs
or
ror
sar
push
mov
iret
pop
je
ret
out
jg
aad
xchg
sbb
or
cld
push
inc
and
inc
(bad)
jp
pop
mov
enter
xchg
inc
loopne
jmp
mov
mov
out
xchg
sbb
xchg
inc
inc
cmp
cld
or
pop
sbb
ror
xchg
fcom
sahf
mov
(bad)
mov
fnstcw
icebp
into
ds
xchg
ss
cwde
adc
jmp
cld
(bad)
(bad)
jmp
aad
xchg
movs
ror
xor
cmps
aad
jmp
mov
test
repnz
sahf
fst
(bad)
call
cmp
fimul
jl
outs
mov
xchg
xor
bound
mov
adc
mov
je
enter
(bad)
push
mov
pop
mov
ins
pop
loope
push
bound
jbe
inc
cmp
imul
sbb
aas
retf
adc
mov
mov
pop
inc
lahf
mov
xor
jbe
xchg
outs
cmp
sub
idiv
inc
xlat
int
or
movs
mov
aad
jne
and
sub
(bad)
push
or
cmp
(bad)
fisttp
clc
xchg
mov
mov
jmp
(bad)
jnp
test
push
(bad)
call
into
arpl
repz
ret
shl
dec
(bad)
or
push
loop
mov
vpsubd
in
jmp
std
mov
and
add
jecxz
inc
pop
push
xor
xchg
pushf
jo
cmp
sub
aaa
leave
mov
in
cmc
mov
or
jecxz
(bad)
jp
les
(bad)
jge
jbe
stos
cmps
jecxz
call
dec
in
(bad)
bound
mov
retf
mov
xlat
cmp
into
add
and
jmp
std
dec
hlt
fdivr
enter
inc
in
mov
mov
scas
sbb
mov
dec
(bad)
(bad)
dec
add
add
xchg
shr
push
dec
icebp
xor
sahf
and
jne
je
outs
(bad)
(bad)
(bad)
jmp
xchg
jle
mov
pop
es
mov
(bad)
movs
cmps
add
iret
shl
push
cld
xor
fnstcw
pop
cwde
sbb
cmp
pop
hlt
call
lods
adc
mov
imul
sar
outs
dec
pop
push
or
into
je
xor
jno
inc
into
out
cmp
pusha
xchg
inc
xor
(bad)
(bad)
(bad)
aas
(bad)
jmp
dec
outs
adc
pop
pop
cmp
neg
movs
cmc
mov
(bad)
(bad)
(bad)
call
mov
inc
fwait
add
dec
in
or
sub
cmc
fdivp
test
idiv
sbb
(bad)
cmc
sbb
push
add
int3
cmp
xor
xchg
dec
arpl
dec
in
std
ret
pop
lods
jmp
retf
enter
retf
scas
inc
stos
(bad)
(bad)
dec
hlt
jp
hlt
mov
es
mov
push
sahf
mov
(bad)
mov
shl
dec
daa
sub
imul
ret
cmp
mov
inc
je
ss
jnp
out
jge
pop
das
xchg
scas
daa
xor
(bad)
in
inc
(bad)
mov
(bad)
fwait
push
in
push
sub
sub
jmp
jnp
(bad)
(bad)
inc
jp
(bad)
(bad)
and
inc
push
jecxz
jmp
stos
stos
jbe
ins
int
sbb
(bad)
mov
and
(bad)
popa
pop
or
call
popf
or
mov
cmps
xor
pop
imul
or
fmul
push
(bad)
(bad)
jg
ins
and
mov
ret
dec
sub
std
jle
scas
fmul
loopne
out
xor
adc
adc
loop
aam
cli
mov
jle
(bad)
(bad)
dec
dec
jns
jbe
in
fst
dec
in
push
dec
shr
push
imul
jp
pop
nop
push
jns
(bad)
jg
sub
sbb
pop
out
jmp
sbb
rcr
pop
adc
or
rcr
daa
fst
fistp
idiv
(bad)
inc
pop
fcmovnu
mov
xchg
gs
or
pop
xchg
retf
das
mov
imul
mov
sbb
and
mov
stc
imul
hlt
mov
(bad)
jg
and
sub
mov
sar
mov
lea
(bad)
(bad)
(bad)
jmp
dec
in
mov
pop
in
stc
data16
in
ds
js
stc
and
inc
push
(bad)
jg
sahf
xchg
mov
popf
sbb
retf
hlt
not
xor
dec
in
or
or
rcl
jmp
cli
jns
push
in
sub
mov
inc
push
popf
cmp
xchg
std
adc
xor
jmp
jg
and
(bad)
dec
sub
outs
neg
shl
jne
jg
mov
cmp
arpl
mov
(bad)
in
jg
jl
out
push
sti
fcom
int3
dec
mov
pop
fcmovbe
hlt
mov
call
leave
dec
pop
retf
push
out
repz
mov
sub
shl
or
sbb
ds
mov
fadd
hlt
xor
aaa
or
div
imul
ins
shr
and
inc
xor
clc
jg
mov
add
xchg
in
int3
inc
sub
lock
(bad)
cmp
mov
jmp
xchg
call
outs
jp
jb
div
cdq
out
mov
in
jmp
inc
cmp
mov
ss
xor
cmp
pop
(bad)
(bad)
mov
das
add
ja
dec
stc
scas
cli
sbb
arpl
(bad)
cmc
adc
push
cld
or
cli
jle
retf
mov
pop
imul
jbe
push
xlat
cli
in
pop
scas
(bad)
(bad)
cmp
and
push
neg
(bad)
cmp
scas
shl
test
(bad)
sub
or
mov
jg
shr
shl
ja
(bad)
mov
pop
inc
sbb
in
retf
add
ret
scas
jo
jns
cmp
xchg
(bad)
adc
mov
gs
xchg
mov
(bad)
(bad)
(bad)
call
imul
imul
enter
push
fbld
pop
and
inc
jl
cs
ss
ret
and
dec
mov
xor
push
dec
call
mov
(bad)
jo
mov
cmp
out
out
mov
mov
sti
mov
push
pop
out
fimul
xor
inc
or
das
cmp
jg
int
cld
lods
imul
mov
(bad)
(bad)
(bad)
push
int
gs
mov
retf
je
sbb
and
fistp
xchg
call
xor
fucomip
loop
inc
cdq
push
(bad)
xor
clc
es
mov
cmp
call
jmp
out
jle
rol
jmp
cmps
xchg
shl
xchg
adc
add
ds
push
in
scas
add
pop
and
addr16
or
xchg
xor
xor
mov
adc
add
add
mov
pop
sbb
mov
push
fs
sahf
addr16
mov
mov
mov
mov
(bad)
(bad)
mov
add
fstp
jg
mov
push
mov
cdq
dec
(bad)
(bad)
mov
repnz
cmp
in
push
jnp
fidivr
pop
(bad)
sbb
mov
mov
stos
in
cmp
push
clc
adc
(bad)
(bad)
(bad)
jmp
scas
push
cdq
jge
jmp
pop
sub
call
push
push
mov
clc
xchg
(bad)
push
out
sbb
fidiv
xchg
in
scas
std
fidivr
pop
in
mov
fist
test
or
sub
(bad)
(bad)
call
je
fcomp
popa
xor
jmp
sar
push
mov
push
dec
mov
mov
(bad)
(bad)
(bad)
cmp
call
lock
dec
iret
imul
and
out
iret
mov
call
gs
xor
in
pop
pop
sti
inc
int
lds
pop
stc
push
sub
dec
(bad)
sbb
les
mov
adc
pop
mov
jecxz
popa
das
cli
stos
(bad)
adc
mov
jge
jnp
fstp
mov
(bad)
(bad)
(bad)
(bad)
call
pop
rol
mov
and
xchg
xchg
pop
dec
imul
cmp
popa
xlat
mov
or
pop
jno
sub
(bad)
call
push
rep
je
sub
outs
lea
mov
xor
hlt
dec
push
repz
ja
(bad)
(bad)
stc
int
aad
xor
and
(bad)
mov
and
fsub
adc
cmp
or
jno
dec
cld
retf
mov
clc
(bad)
(bad)
inc
call
push
xchg
test
loop
retf
sub
sbb
cmp
dec
retf
jbe
cmp
(bad)
push
cld
or
push
out
adc
iret
push
dec
xchg
test
pop
scas
lods
xor
mov
inc
cli
push
inc
je
ins
cmp
adc
push
mov
inc
je
cmp
cld
dec
rcl
mov
mov
push
and
bound
pop
add
dec
jmp
imul
jmp
stos
mov
xchg
add
stos
jg
fdiv
fisub
lods
push
jg
inc
jecxz
addr16
fild
xor
into
jecxz
(bad)
push
fcomp
imul
xchg
push
dec
stc
push
js
rcl
mov
js
out
std
inc
push
out
and
(bad)
cmps
sbb
dec
(bad)
fnstsw
push
stos
xchg
inc
sbb
scas
jmp
in
retf
(bad)
(bad)
push
adc
stc
(bad)
fistp
inc
mov
fstp
lea
inc
pop
fwait
jg
shr
pop
shr
(bad)
(bad)
clc
xor
in
imul
scas
aam
mov
cmp
fs
mov
cli
hlt
test
push
push
push
pop
push
push
dec
mov
shr
xchg
(bad)
idiv
jmp
xchg
imul
aam
mov
shl
xor
(bad)
(bad)
call
ins
fild
cmp
pop
mov
out
inc
xchg
mov
idiv
retf
ss
aad
add
fwait
jmp
bound
inc
jmp
push
push
std
lods
ins
mov
xor
in
sbb
ret
mov
(bad)
cmp
mov
fist
movs
jb
ror
xchg
push
sub
popf
cli
(bad)
call
push
cmp
shr
fld
mov
ror
jbe
pop
xchg
dec
pop
push
push
retf
aaa
ja
push
enter
lods
pop
cdq
(bad)
(bad)
(bad)
call
dec
daa
call
cmp
in
mov
push
or
mov
lods
xor
mov
sar
sar
lahf
pop
xchg
leave
retf
push
mov
pop
(bad)
(bad)
jg
jbe
fiadd
int
fisub
xor
xchg
(bad)
pop
sub
das
js
sbb
int
cs
jp
mov
mov
cld
mov
shl
xor
out
adc
xor
pop
sahf
jns
or
aam
xchg
sub
cmp
arpl
pop
(bad)
fbstp
jb
mov
lds
pop
mov
dec
imul
cmps
lds
addr16
add
retf
pop
pop
ror
pop
lock
inc
dec
into
scas
lods
lock
push
dec
pop
mov
add
mov
jl
push
inc
in
imul
mov
sub
fsubr
mov
ins
sbb
and
sbb
scas
pop
mov
pop
movs
jno
add
cmp
push
in
ret
dec
jl
mov
int
sub
(bad)
(bad)
(bad)
cmp
imul
fisub
cmc
xchg
mov
dec
xlat
push
mov
ins
cld
and
fild
lods
inc
pop
(bad)
(bad)
push
xchg
or
aam
and
out
mov
addr16
mov
inc
dec
fnstsw
jnp
cmp
cmp
mov
clc
test
js
push
daa
fld
mov
and
cli
gs
test
sar
mov
lds
or
jg
jle
addr16
adc
imul
and
(bad)
jmp
or
iret
test
push
jmp
xchg
push
and
mov
adc
dec
jg
mov
pop
xor
imul
and
xlat
pop
push
mov
loop
call
adc
pop
adc
push
push
(bad)
jbe
in
bound
mov
xchg
xchg
jmp
adc
in
loop
out
out
(bad)
xchg
data16
loopne
(bad)
(bad)
(bad)
jg
mov
sahf
leave
rol
lds
mov
xchg
popa
adc
gs
in
jmp
scas
(bad)
(bad)
call
mov
retf
sub
ss
mov
daa
inc
repz
(bad)
(bad)
(bad)
jmp
or
xchg
xor
adc
fidiv
rcl
pop
int3
push
inc
mov
mov
iret
jbe
inc
rcl
adc
jo
cmp
addr16
enter
call
pop
pop
mov
pop
jle
xchg
leave
pop
outs
clc
(bad)
(bad)
in
ret
jb
pop
outs
or
push
mov
out
ins
aas
fimul
(bad)
pop
push
out
mov
scas
sahf
fild
push
call
inc
xchg
call
pop
push
cmp
shl
mov
xor
pusha
mov
idiv
ret
sbb
dec
jbe
stos
scas
movs
(bad)
(bad)
(bad)
(bad)
push
sub
push
pop
lock
ins
xchg
jnp
mov
dec
mov
test
mov
push
mov
das
ja
bound
push
push
fild
pop
xchg
ret
aas
add
scas
cmps
and
(bad)
jmp
push
push
cwde
jle
xchg
mov
int3
ja
pop
xchg
movs
xor
inc
jmp
jge
mov
(bad)
(bad)
dec
jmp
push
into
hlt
xlat
mov
and
pop
sbb
and
hlt
sbb
out
lock
je
mov
push
arpl
shl
sub
test
cmp
cmp
in
xor
fdivp
jmp
loop
push
sar
jp
add
div
test
(bad)
(bad)
(bad)
fidivr
mov
imul
mov
xor
dec
cwde
add
repnz
(bad)
sbb
jns
cli
js
into
(bad)
(bad)
jg
das
xchg
mov
dec
ins
jp
ins
sbb
ds
neg
xor
hlt
loope
mov
(bad)
adc
lods
pushf
arpl
xor
fucom
cmp
jp
scas
movs
mov
mov
fwait
adc
aaa
xor
sub
rcl
mov
pop
arpl
ret
mov
clc
call
jge
cmp
stos
mov
push
or
sbb
movs
cld
jnp
inc
and
dec
dec
mov
(bad)
(bad)
(bad)
mov
jle
repz
call
mov
mov
mov
jmp
test
cs
cmp
cmc
aad
dec
pop
hlt
add
dec
hlt
mov
cwde
retf
lds
or
(bad)
call
in
sub
(bad)
enter
sub
sub
push
(bad)
sahf
mov
aam
fs
test
mov
cdq
in
rcr
pop
mov
das
push
or
mov
mov
test
dec
ficomp
jmp
pop
call
mov
inc
cmp
push
lods
imul
imul
mov
inc
sub
jns
jb
push
adc
dec
and
push
out
mov
ds
xchg
dec
xchg
cmp
call
add
mov
scas
ror
repz
lock
ja
push
xrelease
aas
jp
dec
les
ret
cld
(bad)
(bad)
jmp
shl
pop
dec
lahf
sub
in
int3
fld
inc
test
jl
adc
add
test
aad
mov
jmp
call
jmp
mov
dec
pop
lods
dec
adc
inc
cmps
jmp
inc
scas
sbb
vpmacsdd
daa
cmp
sbb
sbb
mov
fst
pop
jne
xchg
cmp
aas
mov
pop
hlt
aaa
sahf
popa
mov
xchg
or
mov
and
xchg
int
mov
clc
add
or
dec
cwde
movs
mov
addr16
(bad)
push
retf
mov
xor
jmp
in
xor
push
lahf
xor
pop
jp
clc
lahf
(bad)
jmp
jg
icebp
jno
mov
popa
cmp
push
loope
jne
imul
dec
push
xor
mov
push
add
call
mov
(bad)
dec
dec
sub
ins
sti
int3
pop
lods
mov
xor
jmp
jle
pop
jg
(bad)
retf
std
mov
pop
js
cmp
test
scas
mov
outs
xchg
in
sbb
mov
mov
dec
outs
and
jmp
(bad)
scas
push
movs
ins
sub
xlat
mov
push
loopne
outs
(bad)
push
mov
inc
pop
jmp
arpl
out
(bad)
cld
lahf
fmul
and
pushf
mov
push
and
cmp
dec
retf
aas
clc
call
std
imul
cmc
stos
mov
out
out
jl
mov
out
sbb
pop
shl
imul
adc
shld
xchg
sahf
call
(bad)
jg
xor
mov
aas
jmp
inc
jns
mov
test
add
pop
lock
jmp
in
push
jmp
jmp
mov
adc
push
loope
add
pop
iret
pop
cdq
push
jne
pop
push
adc
fs
aaa
jmp
repz
or
jmp
dec
daa
push
neg
fiadd
sti
and
div
movs
sub
jg
jecxz
retf
fbld
mov
sub
adc
movs
xlat
hlt
stos
scas
ficom
(bad)
(bad)
(bad)
sti
mov
ins
sar
jp
lods
jle
adc
popa
xor
stos
jmp
cmp
(bad)
(bad)
jmp
pop
adc
in
in
stos
popf
adc
out
out
add
fnstcw
ins
in
dec
pop
fistp
dec
add
lods
fwait
xor
pop
(bad)
call
std
xlat
push
jmp
popf
sti
ins
daa
data16
ror
les
cld
ror
in
out
(bad)
fild
inc
ss
fisub
aas
adc
in
and
icebp
(bad)
jbe
and
sub
pop
repz
inc
pusha
xchg
jb
rcr
jmp
test
dec
ret
mov
push
fistp
sar
sar
push
and
out
shl
mov
xlat
cmp
js
(bad)
call
std
jmp
mov
inc
pop
xor
ror
and
add
cmp
call
adc
dec
mov
xor
add
lock
inc
js
ins
adc
jmp
xor
xchg
mov
sub
sti
fnstcw
js
add
fscale
mov
clc
cwde
std
in
and
xchg
cmp
or
dec
aaa
std
pop
out
mov
inc
cmp
pop
mov
hlt
(bad)
(bad)
inc
pop
cmc
and
mov
aam
dec
fnstsw
xor
mov
fbstp
gs
call
inc
stc
mov
xchg
div
fxch
pop
rcr
(bad)
dec
jmp
and
sub
shl
and
fcmovnb
jmp
stos
mov
mov
mov
ds
push
daa
lock
xor
pop
jmp
outs
sbb
ja
aad
jb
cdq
fld
and
ins
cmp
(bad)
call
or
in
fdiv
pop
push
out
jnp
sub
mov
push
jg
imul
add
retf
rcr
in
mov
fidivr
cli
push
inc
mov
sub
mov
aad
add
fwait
les
jbe
(bad)
(bad)
(bad)
dec
inc
cmp
mov
neg
jae
xlat
dec
jmp
ret
movs
jb
jmp
movs
push
movs
mov
(bad)
jmp
scas
fimul
jmp
cmps
and
out
cmps
pop
adc
inc
jb
mov
in
rcr
(bad)
jbe
outs
popf
sub
mov
cmps
xor
add
jne
pushf
das
retf
(bad)
push
xchg
jge
jp
mov
or
idiv
call
sbb
dec
dec
ja
mov
popa
jl
mov
sbb
call
inc
jp
js
push
outs
fisubr
das
scas
xor
dec
movs
push
pusha
call
cli
adc
cwde
mov
repnz
mov
pop
dec
jns
(bad)
(bad)
jmp
jbe
pop
push
gs
je
mov
fbld
mov
out
push
call
cs
mov
es
clc
cmp
push
and
dec
je
dec
(bad)
xor
mov
sbb
mov
mov
js
fdivr
je
stc
mov
or
fadd
mov
movs
hlt
jnp
jmp
(bad)
jmp
xchg
xlat
mov
fiadd
dec
push
idiv
ds
fsubp
ss
mov
dec
test
pushf
mul
pop
aas
cmps
lods
push
cs
stc
imul
(bad)
(bad)
call
push
(bad)
(bad)
repnz
inc
jl
loopne
test
mov
mov
(bad)
mov
test
ds
mov
jp
test
mov
jmp
cli
(bad)
(bad)
inc
repnz
in
loope
out
jmp
std
movs
movs
in
daa
cmp
outs
popa
cmp
jmp
sahf
lea
pop
jbe
test
xchg
xor
sar
inc
clc
mov
push
cli
push
(bad)
in
(bad)
mov
mov
jmp
enter
call
dec
pop
mov
sti
fs
mov
mov
pop
pop
rol
ficomp
mov
in
and
clc
dec
xor
inc
das
jmp
adc
aam
(bad)
(bad)
dec
cmp
dec
sbb
jae
adc
mov
repz
or
fisubr
inc
data16
(bad)
(bad)
(bad)
jnp
push
ds
add
int3
pop
sub
mov
mov
xchg
loop
call
pop
sub
sbb
add
mov
aad
idiv
std
inc
sbb
jo
xor
std
stos
push
cdq
dec
stc
jp
(bad)
(bad)
mov
loop
xchg
cmp
stos
sub
dec
test
scas
inc
movs
jle
out
lds
add
adc
scas
scas
out
aam
jl
pop
retf
sti
and
(bad)
(bad)
jg
sub
pushf
ins
xor
cmp
mov
jnp
lods
xchg
pop
iret
loopne
(bad)
jg
(bad)
push
(bad)
push
dec
cmp
shr
xchg
jne
sbb
aam
(bad)
(bad)
push
push
sbb
and
dec
mov
repz
jns
cmp
push
ret
cmps
jg
dec
(bad)
leave
mov
leave
mov
in
cmp
(bad)
(bad)
fbstp
shl
mov
push
cmp
dec
sub
add
mov
std
mov
mov
pop
je
pop
jb
(bad)
(bad)
(bad)
call
test
xchg
mov
stos
xlat
idiv
sbb
pop
push
(bad)
(bad)
(bad)
call
and
aam
stos
es
inc
fstp
test
fmul
pcmpgtd
clc
pop
add
pop
cmc
pop
mov
ficom
mov
retf
cmp
nop
push
pop
jmp
leave
test
rcl
or
stos
jle
mov
jp
inc
cmova
pop
(bad)
jmp
xchg
mov
sahf
and
mov
ss
inc
test
dec
push
jmp
outs
sahf
and
mov
cmp
scas
(bad)
xchg
or
xlat
push
dec
cs
push
sbb
xchg
test
xchg
inc
cmp
das
mov
adc
sahf
jns
xchg
imul
fistp
pop
add
cmc
xchg
fst
inc
xor
imul
push
sbb
ret
inc
pop
cmp
push
loope
sbb
and
int3
xor
mov
dec
mov
loop
lock
sub
call
call
(bad)
mov
sub
hlt
dec
xor
lods
push
ins
pop
xchg
(bad)
scas
xlat
inc
adc
(bad)
jmp
jmp
test
movs
(bad)
pushf
(bad)
mov
xlat
jle
xchg
rcr
scas
gs
adc
mov
cmp
or
(bad)
and
pop
mov
es
out
clc
inc
push
loop
call
hlt
cld
pop
sbb
scas
sbb
(bad)
(bad)
mov
dec
mov
(bad)
sahf
pop
movs
mov
into
mov
fnstenv
jp
in
push
sbb
pop
push
mov
inc
pop
lods
mov
adc
call
sub
test
test
inc
ins
(bad)
stc
sbb
jmp
mov
(bad)
jg
call
int3
pushf
rcl
(bad)
mov
adc
push
sub
cmp
(bad)
(bad)
aas
sbb
dec
std
jno
sub
popa
jae
ja
and
or
movs
clc
inc
scas
fisttp
mov
cmps
addr16
arpl
(bad)
call
mov
dec
jecxz
mov
pop
ficomp
sub
aad
sar
jmp
mov
pop
inc
sti
inc
xchg
ret
ror
pop
or
aad
(bad)
(bad)
(bad)
cmp
arpl
xadd
pop
imul
fst
out
jp
pusha
data16
neg
not
xchg
sahf
popa
dec
js
call
dec
xchg
std
pop
cmps
sub
icebp
sub
cs
adc
outs
pop
ror
jmp
stos
inc
sti
lds
xchg
inc
mov
inc
jnp
inc
(bad)
pop
mov
mov
xchg
icebp
pop
hlt
(bad)
call
pop
add
repz
push
and
mov
fist
(bad)
jle
sbb
cs
mov
cli
fsubr
sbb
add
arpl
call
loop
mov
add
cli
xor
(bad)
jg
inc
sbb
cmc
(bad)
push
loope
xchg
inc
scas
dec
in
std
adc
inc
test
push
fstp
xchg
and
in
xchg
dec
cmc
pop
cdq
frstor
popa
pop
jmp
pop
sub
mov
inc
cmp
add
mov
pop
icebp
call
addr16
in
std
mov
push
lods
add
inc
daa
(bad)
(bad)
(bad)
dec
inc
and
pop
popf
push
lods
and
dec
push
mov
fiadd
add
adc
cmp
mov
lods
push
jle
add
mov
pop
daa
enter
lahf
adc
(bad)
(bad)
sar
pop
push
push
loope
add
lods
xlat
add
mov
das
shr
call
test
in
int3
push
sub
jecxz
enter
lods
add
dec
adc
xchg
sbb
push
pop
fisttp
cmp
sahf
call
mov
out
(bad)
(bad)
push
lods
in
fldcw
aad
mov
xor
adc
xchg
adc
test
(bad)
(bad)
jmp
xchg
rcl
add
les
jno
jnp
int
or
push
add
jnp
(bad)
(bad)
(bad)
call
cwde
fstp
clc
cmp
stos
adc
fadd
fidiv
ins
push
cmp
adc
add
hlt
retf
out
and
jp
or
ins
loop
jg
(bad)
(bad)
fbld
ins
std
and
cmps
xchg
push
jmp
pop
loopne
(bad)
in
jnp
mov
neg
fidiv
scas
or
(bad)
(bad)
(bad)
dec
push
lahf
pop
hlt
je
lahf
loope
adc
ja
(bad)
sub
lods
aad
sbb
sub
(bad)
es
(bad)
(bad)
call
add
fcom
gs
jne
jbe
mov
mov
(bad)
(bad)
dec
shr
scas
shl
movs
dec
daa
xchg
cdq
pop
(bad)
inc
rcr
sub
push
jg
jl
(bad)
push
std
fst
mov
dec
xchg
and
(bad)
fimul
mov
fisub
outs
test
idiv
cli
mov
(bad)
fdiv
pop
add
adc
lods
sbb
scas
lock
mov
push
data16
sahf
fidiv
or
icebp
(bad)
(bad)
jmp
jno
int
out
mov
ja
scas
ins
mov
or
es
dec
addr16
or
xor
jne
cdq
adc
mov
inc
(bad)
inc
lea
mov
lds
jnp
rcr
jge
jmp
xor
(bad)
push
ins
fld
push
push
adc
push
xor
call
xlat
adc
inc
xchg
pop
mov
fidiv
sub
xor
cmp
mov
xor
ins
jns
call
and
push
out
fdivrp
and
imul
sub
(bad)
aam
mov
mov
ds
mov
pop
sbb
pop
pop
repz
(bad)
(bad)
(bad)
push
and
pop
bound
stos
mov
or
lahf
stos
push
fst
data16
jp
or
(bad)
(bad)
push
sti
xchg
ja
loop
xlat
fwait
adc
sbb
mov
(bad)
(bad)
dec
push
aad
mov
(bad)
cdq
jl
(bad)
jle
jle
cmp
mov
call
sub
mov
stc
and
and
dec
mov
inc
xor
and
daa
mov
mov
mov
push
les
ror
adc
mov
(bad)
(bad)
(bad)
mov
sbb
fild
mov
in
cs
cmc
ins
gs
xchg
mov
out
call
hlt
dec
and
pop
outs
aad
jnp
ret
mov
push
jne
(bad)
call
and
cwde
adc
ins
mov
pushf
pushf
neg
(bad)
(bad)
(bad)
jmp
test
bound
test
inc
mov
in
popf
outs
outs
dec
in
call
jge
aas
add
add
jp
sub
aaa
fisubr
add
je
lock
(bad)
pop
xchg
jmp
out
mov
(bad)
push
(bad)
mov
mov
cmc
in
sbb
mov
adc
jb
cli
retf
js
pop
lock
icebp
xchg
mov
pop
das
pop
(bad)
(bad)
jmp
inc
fsubr
jnp
cmp
xchg
bound
push
into
and
aad
pop
xor
call
cmp
mov
or
sub
jbe
sti
imul
inc
push
ins
sbb
(bad)
call
xchg
push
cmc
adc
cmp
(bad)
je
call
mov
xchg
jmp
into
push
jne
rcl
cld
jmp
nop
push
mov
jnp
test
(bad)
aas
cli
jmp
pop
pushf
mov
cmp
frstor
ret
push
dec
sub
and
fwait
pop
adc
daa
shl
pop
(bad)
(bad)
(bad)
call
iret
fst
mov
fwait
push
out
mov
and
jae
mov
sar
dec
fsubr
xchg
and
xlat
mov
sbb
pop
in
inc
pop
repnz
adc
(bad)
(bad)
(bad)
inc
movs
mov
push
movq
mov
icebp
mov
pop
jmp
sub
pop
data16
push
(bad)
(bad)
(bad)
call
mov
jge
rcl
dec
cmc
xor
out
sahf
in
xchg
inc
cs
cli
nop
das
mov
(bad)
(bad)
dec
adc
sbb
test
(bad)
repz
sbb
and
push
(bad)
(bad)
(bad)
(bad)
jmp
jmp
ret
call
sub
out
aad
clc
iret
hlt
cmp
or
repnz
(bad)
(bad)
jmp
test
daa
fs
jmp
arpl
(bad)
(bad)
inc
leave
test
lahf
not
jecxz
jmp
mov
xchg
movs
out
retf
stos
add
(bad)
inc
mov
mov
jmp
call
push
mov
mov
xor
hlt
mov
jo
mov
popa
call
push
or
idiv
div
dec
mov
cwde
and
cli
inc
(bad)
(bad)
call
jmp
cmc
mov
movs
outs
mov
dec
test
xor
call
aas
dec
into
out
mov
in
xor
push
aam
cmp
cwde
(bad)
push
mov
mov
pop
fisub
mov
dec
mov
mov
cmp
dec
inc
into
(bad)
(bad)
(bad)
(bad)
push
jmp
jnp
mov
scas
mul
inc
in
push
push
aam
out
sbb
mov
cmp
scas
in
(bad)
(bad)
dec
and
dec
in
xchg
je
lods
cmp
aam
push
js
scas
out
pop
cmp
sub
(bad)
inc
imul
outs
jmp
aad
(bad)
cwde
dec
sbb
xor
bound
jbe
inc
jp
mov
inc
test
lods
pushf
sub
sub
pop
push
(bad)
pop
test
call
imul
xor
dec
mov
fucomip
push
adc
shl
jle
xor
(bad)
(bad)
cmp
push
mov
add
or
movs
das
call
jge
inc
cwde
pop
int
mov
mov
jne
adc
pop
movs
pop
sbb
xor
sti
pop
add
mov
test
(bad)
(bad)
inc
test
in
jbe
mov
sti
jne
mov
imul
jecxz
(bad)
(bad)
(bad)
fild
inc
jmp
retf
(bad)
(bad)
clc
(bad)
das
aas
(bad)
inc
add
cmp
(bad)
(bad)
call
(bad)
fcom
rcl
hlt
jp
fcmovnb
retf
cld
stos
hlt
sti
in
pop
push
lea
dec
sbb
inc
(bad)
jmp
mov
mov
stos
loope
and
push
push
add
inc
fs
clc
call
dec
push
fwait
xchg
pop
scas
ret
cmc
and
sti
fxch
mov
(bad)
hlt
mov
out
push
gs
mov
inc
dec
mov
cdq
pop
ja
and
pop
push
(bad)
shr
pop
retf
out
scas
push
in
aad
out
rcr
dec
cli
test
pop
fs
gs
or
lahf
(bad)
(bad)
(bad)
(bad)
jg
jbe
out
push
not
and
sub
mov
out
(bad)
dec
push
maxps
add
iret
jl
in
lahf
cld
in
std
fmul
dec
pop
(bad)
(bad)
(bad)
call
push
in
out
dec
popa
jp
loope
push
dec
mov
sub
xchg
mov
stc
push
imul
inc
cmp
push
in
mov
lods
mov
xchg
into
jnp
sbb
stos
mov
(bad)
adc
sub
push
(bad)
push
js
jp
mov
cli
mov
fistp
retf
add
mov
out
(bad)
inc
mov
and
push
cmp
fbstp
and
(bad)
mov
push
mov
sbb
sti
pusha
pop
mov
ficom
push
xchg
out
mov
jno
pop
or
sbb
enter
in
adc
(bad)
(bad)
jmp
sar
aas
clc
add
sbb
fidivr
pop
(bad)
push
mov
lods
dec
jp
loop
(bad)
(bad)
(bad)
jmp
dec
xor
rcl
mov
adc
sub
fisttp
das
cli
(bad)
ficom
leave
int3
or
add
jae
int
lods
std
(bad)
dec
ja
xor
sub
(bad)
(bad)
(bad)
mov
add
mov
adc
xchg
(bad)
les
movs
(bad)
(bad)
(bad)
(bad)
cld
mov
lods
jbe
adc
popa
jle
mov
pop
push
mov
cmps
jb
arpl
cli
(bad)
(bad)
jmp
and
mov
pop
sub
add
test
inc
sbb
cld
(bad)
call
test
repnz
pop
pop
scas
scas
jle
stos
das
pop
(bad)
repnz
or
lahf
(bad)
jmp
jnp
xor
aam
push
inc
fwait
pop
xchg
(bad)
out
xor
call
adc
mov
lahf
(bad)
add
dec
sar
pop
(bad)
mov
bts
add
pop
add
rcr
out
leave
rcl
mov
sub
cmps
xchg
mov
adc
cld
(bad)
mov
imul
imul
scas
mov
adc
outs
and
popf
mov
(bad)
cwde
daa
mov
sbb
mov
push
cld
lods
test
fucomp
jle
mov
add
xchg
aas
stc
xchg
mov
(bad)
(bad)
jmp
jae
dec
dec
iret
repnz
out
mov
movs
push
pop
das
and
mov
or
mov
push
stos
shl
jne
fbld
and
dec
push
int
imul
sahf
and
(bad)
mov
sbb
inc
bound
and
out
push
push
mov
(bad)
(bad)
jg
repz
(bad)
stc
lahf
add
out
ret
cdq
std
daa
jle
daa
pop
jle
out
outs
imul
imul
cmp
push
stos
mov
out
fcmovnb
sub
pop
(bad)
fld
(bad)
test
jmp
imul
xor
xchg
int3
pop
fimul
cmp
repnz
jg
test
outs
add
scas
cld
push
mov
adc
mov
int
into
call
sub
jmp
adc
(bad)
(bad)
call
mov
loop
mov
push
fnsave
mov
cmp
(bad)
mov
jmp
cli
push
xlat
fsubr
sbb
xchg
mov
mov
scas
jl
sub
pop
std
call
ret
(bad)
int
mov
retf
(bad)
mov
(bad)
jg
rcr
test
pop
popf
outs
dec
repz
outs
das
repz
call
jo
mov
je
ins
fcmovbe
enter
pop
jmp
adc
std
jmp
jge
jmp
leave
je
cmp
dec
ficom
loope
or
pop
ret
(bad)
fbstp
cmp
retf
adc
lahf
push
scas
(bad)
mov
pop
cmp
icebp
dec
push
or
packssdw
inc
stos
xchg
add
jl
mov
sbb
loop
out
sahf
inc
adc
dec
xor
lea
in
jmp
std
inc
cmc
das
sar
add
adc
xor
jge
or
pusha
dec
cdq
dec
pop
std
push
std
pop
dec
cmps
push
daa
cmp
adc
xchg
cmp
mov
loopne
push
ins
xchg
sbb
(bad)
inc
mov
loopne
enter
xchg
xor
or
jmp
sahf
sahf
cli
fwait
outs
(bad)
(bad)
inc
push
sbb
data16
mov
loop
sbb
cs
(bad)
(bad)
push
or
dec
cld
aad
std
aad
aas
cld
ret
aas
mov
cmc
imul
cld
loopne
pop
jle
or
(bad)
sti
mov
jnp
push
xor
clc
nop
xlat
and
push
mov
dec
(bad)
(bad)
(bad)
call
sub
dec
xchg
out
int3
js
mov
pushf
les
in
xchg
aad
mov
jmp
jmp
jne
adc
mov
and
mov
and
fwait
mov
hlt
cli
(bad)
mov
ror
add
hlt
out
out
pop
retf
pop
pop
(bad)
inc
lds
sar
jg
out
(bad)
mov
dec
push
cmp
aad
(bad)
mov
cdq
ror
jp
scas
cmps
aad
xor
jp
gs
pushf
push
add
mov
push
movs
stos
into
xor
jp
stc
(bad)
inc
fbld
shl
pop
xchg
pop
pop
sbb
push
cmp
int
mov
outs
mov
cwde
push
push
cld
fdivp
mov
or
cli
hlt
dec
(bad)
shr
fistp
in
xchg
xchg
movs
ds
dec
xor
mov
ficom
jg
repz
mov
fidiv
fadd
outs
inc
retf
std
jg
jmp
pop
jle
in
jp
(bad)
imul
adc
sub
stos
stos
lahf
xchg
mov
aas
push
xchg
outs
jle
fwait
out
cld
sti
xor
cmp
enter
jno
leave
jmp
push
cld
jmp
jp
jnp
out
js
mov
(bad)
(bad)
inc
imul
test
pop
leave
scas
inc
lods
mov
loopne
pop
or
fimul
cmp
fs
ror
pushf
sbb
(bad)
(bad)
(bad)
call
out
hlt
jg
cmps
jg
stc
ret
lock
fisttp
inc
lock
dec
jle
cmc
mov
(bad)
(bad)
push
scas
jl
arpl
jnp
test
add
(bad)
cmp
iret
ror
int3
iret
or
and
jns
pextrw
stos
int
ds
fnstenv
call
jmp
repnz
mov
sbb
pop
lahf
sbb
push
shl
cmp
lock
sbb
sub
pop
in
idiv
push
add
inc
in
scas
push
push
(bad)
(bad)
push
jo
mov
push
in
mov
mov
jmp
xor
(bad)
dec
push
scas
cmp
test
out
jge
dec
push
ficom
xchg
xlat
(bad)
(bad)
stc
(bad)
xor
xor
mov
es
add
pop
ret
je
(bad)
(bad)
jmp
sbb
or
aad
sub
jbe
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
ins
jle
ins
xchg
out
js
dec
mov
pop
sti
jnp
and
mov
(bad)
(bad)
out
clc
sti
int
fnsave
ds
test
push
dec
pop
adc
inc
lods
(bad)
inc
aaa
pop
mov
call
std
popf
mov
push
pop
xchg
lods
sti
out
inc
dec
cmp
ret
push
mov
jmp
fwait
scas
div
test
pop
scas
xchg
mov
sbb
inc
push
stc
jns
into
mov
xchg
xchg
sub
xchg
push
out
xchg
repnz
lea
mov
daa
jge
push
bound
cmp
xor
mov
dec
stc
jbe
cmc
stos
ds
repnz
mov
and
loope
sar
cmp
xchg
imul
fstp
repz
call
push
cmp
xchg
mov
cmp
fldenv
inc
imul
imul
mov
jae
push
cld
ja
fldenv
in
sbb
or
enter
pop
and
xor
aaa
(bad)
(bad)
(bad)
(bad)
jg
aaa
das
pop
sti
fcmovbe
fdivrp
jnp
iret
xchg
loopne
adc
push
jp
jl
fnsave
mov
sti
jg
(bad)
loopne
(bad)
inc
inc
fwait
xchg
cmc
call
pop
repz
imul
jle
sub
fiadd
pusha
ss
es
and
in
jg
lds
aaa
sar
mov
mov
ja
jns
(bad)
(bad)
jmp
mov
adc
mov
cmp
jae
push
or
into
test
(bad)
dec
sahf
ins
cmp
mov
xor
iret
nop
leave
pop
out
jo
test
ins
add
jno
sbb
xor
ret
pop
jecxz
jns
cld
(bad)
call
dec
dec
scas
jb
sbb
pop
aas
jle
(bad)
mov
js
es
(bad)
inc
nop
xor
or
stc
lods
xchg
lahf
xchg
jns
mov
jmp
push
fimul
mov
pop
jmp
ss
(bad)
fucomip
mov
lods
push
add
and
mov
jl
ret
pop
jle
clc
(bad)
aas
sahf
mov
dec
jle
inc
and
std
loopne
idiv
jg
cld
out
mov
cmp
jo
jns
shr
retf
add
loop
(bad)
call
or
scas
out
sub
shr
push
dec
ret
loop
pop
adc
rol
inc
lods
sahf
xor
imul
retf
(bad)
dec
push
mov
fadd
mov
add
mov
and
xor
mov
mov
jns
and
pop
add
jbe
push
inc
shr
std
add
(bad)
jmp
xchg
jmp
pop
loope
(bad)
jecxz
dec
out
ret
jae
stos
xor
mov
jno
mov
(bad)
push
or
and
(bad)
fs
pop
aaa
jmp
xchg
xchg
cld
lods
out
xchg
(bad)
mov
push
add
loopne
xchg
and
out
push
xor
(bad)
push
mov
pop
sahf
test
dec
mov
movs
pop
xchg
(bad)
cmps
mov
(bad)
das
cli
repnz
(bad)
sahf
hlt
mov
ret
sub
shl
in
cmp
jmp
inc
(bad)
inc
push
jg
sar
add
mov
mov
push
sub
sub
(bad)
xchg
(bad)
aaa
cld
mov
mov
inc
loop
test
push
mov
shl
cmp
call
into
sub
push
into
push
(bad)
popf
or
and
inc
pop
pushf
xchg
cmps
pop
mov
data16
mov
(bad)
scas
in
(bad)
jg
pop
ds
jmp
xor
ds
aam
addr16
jmp
jmp
mov
inc
inc
cli
push
xor
ja
out
cmps
push
(bad)
cmp
(bad)
sub
shld
xchg
clc
call
mov
(bad)
push
adc
fstp
and
outs
imul
xchg
dec
lods
or
jg
scas
xchg
cmc
mov
xchg
retf
mov
sahf
add
cmp
xor
mov
movs
into
sahf
add
lea
pushf
loop
stc
int
call
out
pusha
jl
cmc
push
add
mov
loop
jg
mov
(bad)
call
loopne
out
push
sbb
lock
sub
pop
jnp
stos
adc
pop
loopne
hlt
dec
cmp
ds
imul
cli
lods
pop
clc
inc
push
xchg
push
mov
imul
pop
pop
xchg
add
into
mov
lods
push
ret
repnz
or
in
leave
jmp
sbb
daa
(bad)
div
(bad)
mov
add
inc
dec
cmp
das
cmp
cmp
xchg
xchg
jbe
call
(bad)
pusha
jl
inc
fisub
jae
les
jne
aam
push
sbb
push
paddd
dec
fdiv
cmp
fidiv
mov
loopne
cmp
mov
test
mov
std
cwde
ins
pop
(bad)
and
push
xor
inc
fisub
dec
fidiv
out
in
mov
(bad)
jmp
je
dec
add
xor
cmp
push
jg
inc
pop
jp
in
imul
imul
call
std
dec
shl
jmp
lods
scas
inc
mov
xchg
cld
pop
sar
xchg
fsubr
jmp
mov
jp
cwde
add
jecxz
(bad)
aad
sbb
es
test
mov
sub
(bad)
(bad)
idiv
arpl
or
out
or
fild
cdq
mov
es
pop
add
jge
dec
push
gs
push
stos
pop
cmp
cmp
imul
stos
leave
fnstenv
mov
cmp
int
loop
add
dec
rcr
mov
(bad)
call
sbb
cmp
sub
sbb
in
outs
pop
loopne
push
in
repnz
or
jg
sbb
cmp
mov
sub
movs
push
(bad)
(bad)
jno
cmp
shl
cdq
dec
or
retf
clc
add
or
ret
lahf
ins
(bad)
(bad)
(bad)
push
(bad)
xchg
fmul
lds
sahf
cmps
fdivr
jmp
mov
and
rol
mov
(bad)
push
call
cmp
push
sub
pop
les
push
in
inc
push
sbb
sub
shl
call
call
or
fs
(bad)
(bad)
jg
xchg
fild
je
shl
(bad)
jle
lea
sar
inc
test
mov
repnz
(bad)
jl
mov
mov
xor
(bad)
(bad)
push
imul
in
mov
lock
adc
sbb
ss
std
sub
sbb
dec
jo
mov
lock
sub
movs
xor
jle
(bad)
jg
lahf
mov
dec
pop
mov
fldenv
inc
push
fmulp
or
mov
in
mov
add
clc
sar
pop
in
and
call
mov
imul
scas
lock
jne
rcr
cs
clc
(bad)
(bad)
jmp
mov
mov
mov
aas
call
pop
stos
dec
iret
popf
sub
(bad)
call
push
and
cmp
stos
es
xchg
hlt
dec
scas
adc
fmul
lods
cli
(bad)
(bad)
jmp
jae
adc
pop
adc
push
into
arpl
out
jnp
into
add
(bad)
push
(bad)
fmul
push
push
and
xchg
mov
xchg
hlt
mov
(bad)
jmp
retf
loope
in
jge
dec
sub
lahf
push
aas
stos
cmp
stos
or
cmps
jb
(bad)
xor
dec
int
pop
mov
mov
pop
test
and
jmp
mov
pop
dec
sbb
pop
popf
sbb
imul
mov
ja
mov
mov
(bad)
(bad)
(bad)
jmp
popa
add
cmp
sar
fcmovne
repnz
dec
popf
scas
jb
daa
(bad)
(bad)
jmp
popa
cmovbe
and
push
mov
push
out
sbb
mov
(bad)
jmp
ins
mov
dec
loope
push
loop
ret
(bad)
gs
or
dec
test
sbb
inc
fbstp
jb
dec
jmp
jmp
inc
dec
inc
rcl
pushf
(bad)
and
outs
cdq
xor
pop
cmp
dec
jmp
loop
rol
enter
sar
cmps
frstor
push
lods
ins
stos
popf
xor
into
pop
mov
cmp
gs
or
neg
dec
call
iret
addr16
and
push
js
int3
xchg
movs
and
jl
mov
repnz
scas
mov
loope
push
adc
test
test
fidivr
xchg
addr16
outs
cmp
cmp
mov
or
jns
out
pop
pushf
mov
scas
push
jns
mov
push
test
test
jmp
daa
cld
cmp
loop
sbb
(bad)
ds
cli
mov
mov
add
xchg
outs
adc
cmp
mov
add
ret
sbb
jp
jmp
(bad)
(bad)
(bad)
mov
add
pop
xlat
xchg
leave
pop
jmp
sub
and
xchg
inc
sbb
jl
movs
sub
ret
(bad)
jmp
(bad)
call
test
and
mov
arpl
cmp
call
add
fs
cwde
push
pop
xchg
neg
(bad)
nop
jle
mov
retf
pop
lock
dec
cmc
xchg
out
fdivp
sahf
cmps
mov
and
add
(bad)
clc
(bad)
xchg
imul
scas
add
jge
test
xchg
addr16
sbb
(bad)
cmp
sbb
pop
iret
retf
sar
sbb
mov
add
(bad)
call
jmp
xor
jmp
add
std
call
adc
leave
scas
adc
fld
mov
sti
outs
sbb
loopne
sar
outs
retf
xchg
aam
in
and
loopne
daa
mov
cmp
mov
div
addr16
(bad)
into
dec
nop
loopne
(bad)
jmp
fs
mov
add
push
fwait
lods
and
pop
repnz
sub
aaa
cld
call
mov
ja
and
aad
rol
fist
mov
loopne
inc
dec
push
fiadd
push
mov
(bad)
(bad)
(bad)
fistp
xlat
(bad)
and
mov
lea
or
push
mov
push
push
cwde
cmp
lds
mov
ja
push
xor
jmp
mov
xchg
inc
cmp
sub
icebp
xor
xchg
dec
jmp
xchg
loopne
and
mov
xchg
or
sti
xchg
jg
pop
jmp
call
stos
cmc
mov
cli
loopne
jmp
sar
inc
imul
cmp
xchg
xor
mov
jmp
dec
loop
not
inc
aas
imul
in
adc
aam
dec
shl
enter
scas
in
idiv
out
mov
mov
fiadd
shl
push
cmp
outs
out
ficom
mov
(bad)
call
rol
rcr
cmp
outs
xor
arpl
arpl
inc
out
sub
call
call
push
xor
test
cmc
lods
outs
and
mov
jmp
cli
adc
in
xchg
jb
aas
push
shl
outs
cli
call
movs
fst
and
ss
stos
or
sub
mov
mov
nop
pop
or
push
fistp
jmp
pop
loopne
dec
dec
cmp
(bad)
call
std
out
jg
cmc
inc
mov
jmp
(bad)
push
cmc
scas
jg
in
pop
cli
rcr
sbb
ins
test
push
in
addr16
loop
(bad)
jg
jo
pop
test
enter
and
ins
fwait
adc
ins
shr
add
(bad)
(bad)
mov
fiadd
adc
bound
movs
pop
in
sbb
mov
mov
in
xor
jne
lahf
out
test
or
jno
mov
pop
ja
xor
imul
jo
ror
mov
mov
dec
stc
(bad)
(bad)
(bad)
push
cmp
add
inc
(bad)
adc
das
mov
int
imul
xor
sub
loope
mov
lock
(bad)
in
jb
movs
(bad)
(bad)
out
pop
daa
shl
mov
mov
sbb
mov
jle
lds
push
call
pop
je
fwait
or
in
jle
out
int3
scas
add
ja
lods
inc
fcomip
pop
jno
or
out
push
cmp
cmps
in
repz
jg
cli
cdq
(bad)
(bad)
dec
rol
idiv
push
pop
push
retf
loope
mov
adc
dec
cld
pop
imul
push
adc
dec
mov
(bad)
cmp
ds
mov
loop
sbb
jge
sahf
(bad)
(bad)
(bad)
jg
lods
pop
fdiv
mov
jge
sbb
loope
ins
pop
cmp
js
fwait
sub
mov
push
xlat
cmp
dec
leave
xlat
mov
(bad)
(bad)
mov
test
aad
in
out
and
add
int3
cmps
jle
push
add
(bad)
mov
mov
push
dec
(bad)
cld
enter
jg
(bad)
std
adc
(bad)
(bad)
(bad)
fidiv
jmp
dec
jl
shl
repz
nop
or
add
push
xor
mov
fiadd
cld
(bad)
mov
sub
fild
cld
in
ficomp
icebp
jno
xor
dec
std
out
es
jno
std
adc
mov
aas
ja
push
jmp
dec
add
in
jge
repz
sub
and
push
out
sar
(bad)
call
push
dec
fcmovnbe
jnp
cmp
sub
sti
int3
adc
in
das
(bad)
loop
pop
test
popa
loop
(bad)
(bad)
call
xor
out
inc
pop
cmp
xchg
fimul
lods
mov
mov
lock
or
movs
pop
dec
movs
ja
rol
dec
and
cmps
jmp
adc
cmp
ds
fld
mov
cmp
fsin
(bad)
fcomip
sub
add
push
dec
sbb
(bad)
mov
test
adc
sti
inc
call
loop
std
jg
sar
mul
aad
out
adc
movs
cli
fstp
adc
mov
shl
sub
es
loope
push
mov
pop
mov
add
sub
lock
or
test
push
add
in
outs
jg
aad
call
cmp
jp
xor
test
(bad)
dec
sbb
aas
add
stos
xlat
sub
(bad)
out
or
(bad)
push
ins
in
mov
cdq
xchg
ja
cmp
or
cmp
add
pop
imul
js
loop
(bad)
icebp
cmp
adc
(bad)
push
jb
mov
jae
jle
push
and
dec
add
cmp
dec
out
dec
adc
mov
sti
and
(bad)
(bad)
dec
std
enter
mov
cmps
pop
out
mov
xchg
(bad)
outs
and
rcl
in
jg
out
scas
rcr
icebp
lock
aaa
jnp
jecxz
xchg
outs
jbe
pop
retf
(bad)
jmp
cmp
mov
repnz
mov
add
mov
aaa
loopne
call
in
fcom
es
jmp
ins
nop
jecxz
out
jns
push
in
push
cmc
scas
(bad)
(bad)
jmp
mov
jp
(bad)
dec
movs
scas
or
and
ret
(bad)
(bad)
inc
jns
in
jecxz
xor
shr
dec
mov
ja
push
mov
(bad)
(bad)
(bad)
mov
sbb
xchg
movs
jmp
adc
or
add
test
push
(bad)
(bad)
inc
sahf
mov
add
lods
(bad)
mov
jg
test
cmp
add
nop
mov
scas
call
dec
cmp
in
cld
mov
mov
inc
push
js
add
jle
dec
xchg
mov
jbe
xchg
(bad)
jno
out
idiv
(bad)
(bad)
push
aaa
pop
loop
stos
div
loop
jno
dec
xchg
fisttp
dec
push
scas
aam
xlat
imul
cli
mov
jb
call
or
(bad)
xor
add
(bad)
dec
cwde
cmc
(bad)
inc
je
mov
pop
(bad)
lock
(bad)
icebp
(bad)
aaa
cmps
jg
stos
cmp
in
inc
pushf
test
(bad)
cmp
mov
sub
imul
cmps
pusha
into
mov
xchg
retf
repz
call
(bad)
std
cwde
inc
imul
in
pop
iret
ss
icebp
fimul
jb
out
push
movs
(bad)
(bad)
(bad)
dec
jmp
out
sbb
mov
imul
imul
or
push
add
jmp
loopne
les
data16
test
mov
aas
es
test
add
mov
ja
push
xor
jg
leave
stos
fnstcw
lock
mov
in
mov
push
mov
imul
sub
push
jmp
test
(bad)
in
fistp
dec
ds
push
jecxz
ds
or
xchg
ds
jg
jge
scas
imul
movs
mov
adc
mov
ja
jae
push
fstp
int3
das
cs
das
inc
cs
sbb
aaa
and
scas
js
jmp
mov
in
jg
pop
dec
addr16
ror
jae
jmp
rcl
push
arpl
push
mov
stc
push
sub
cs
and
call
dec
push
aam
ja
pop
push
mov
sub
retf
aas
sahf
cmc
das
push
das
mov
jl
into
cli
mov
std
jecxz
(bad)
jmp
bound
pop
sbb
arpl
(bad)
stos
test
push
enter
cmc
iret
popf
pop
lock
cli
sub
add
leave
sbb
mov
mov
test
pop
inc
arpl
pop
pop
in
call
loope
ret
mov
call
clc
inc
cld
cmps
jbe
loop
sub
leave
loopne
jg
mov
adc
clc
mov
sub
cli
mov
pop
cmp
and
ja
sti
fnsave
(bad)
je
jp
imul
push
push
das
das
add
stos
xchg
mov
ds
cmp
add
nop
cmp
addr16
sti
xchg
xchg
std
dec
(bad)
jmp
push
push
hlt
push
(bad)
fistp
xchg
fs
bound
jbe
arpl
cmps
mov
std
dec
cmp
mov
(bad)
sub
cmp
inc
out
xchg
arpl
(bad)
(bad)
call
les
and
mov
outs
cmp
mov
aad
hlt
cmp
add
xchg
icebp
in
lock
scas
adc
jne
mov
mov
or
stos
xchg
xchg
mov
mov
(bad)
jmp
pop
movs
mov
dec
mov
aas
push
mov
(bad)
sbb
mov
or
data16
stc
iret
mov
(bad)
mov
out
loopne
pop
(bad)
dec
adc
xor
not
push
lods
add
xor
jmp
dec
mov
sub
sbb
imul
(bad)
(bad)
call
cdq
mov
sub
adc
pop
and
fisubr
push
adc
shl
pop
push
stc
mov
jmp
jge
xor
out
push
push
xor
cli
outs
clc
(bad)
(bad)
(bad)
call
jecxz
inc
mov
push
push
cmp
imul
xchg
shl
xchg
pop
out
dec
jo
jmp
inc
cmp
outs
fadd
and
(bad)
mov
inc
xor
mov
cld
out
cmps
scas
lahf
es
sar
mov
cmp
icebp
addr16
jle
shl
xchg
cld
(bad)
(bad)
inc
mov
pop
pop
sub
mov
and
mov
pop
jl
out
sub
xlat
sub
lar
lods
aad
rcl
add
add
arpl
jp
pusha
push
fsub
std
cmp
repnz
stos
hlt
jg
imul
daa
rcl
cli
and
mov
movs
cmp
inc
aas
retf
call
adc
icebp
(bad)
call
mov
xchg
in
adc
push
dec
cmps
dec
push
pop
jmp
pop
add
or
(bad)
cmps
add
push
sar
xlat
daa
xor
mov
aas
enter
pop
mov
jo
ins
aas
(bad)
jmp
cld
iret
fidiv
jl
mov
jnp
cmp
and
dec
popa
lock
(bad)
(bad)
mov
movq
mov
jmp
clc
fmul
jno
(bad)
xchg
or
dec
ret
shr
mov
leave
mov
sub
xchg
mov
push
mov
and
(bad)
(bad)
aas
xchg
inc
bound
lock
jae
fmul
mov
or
cwde
pop
inc
pop
inc
fs
jns
xchg
and
out
jmp
stc
and
(bad)
dec
dec
and
scas
mov
into
out
cli
(bad)
sbb
stc
xchg
(bad)
jmp
mov
xor
push
jne
popa
sub
mov
and
xlat
pop
lock
fisttp
jne
into
retf
imul
jns
push
inc
addr16
jg
sub
and
xor
(bad)
add
(bad)
mov
adc
inc
cmp
inc
cli
adc
call
dec
aas
jne
jp
in
push
and
nop
pushf
stc
push
retf
(bad)
lods
ja
xlat
imul
adc
pop
hlt
push
pop
cld
loop
pop
lds
add
shr
push
and
mov
outs
shl
neg
inc
cmp
stos
mov
sub
popf
mov
push
mov
add
and
add
(bad)
dec
arpl
mov
sbb
mov
xor
dec
sti
(bad)
jg
mov
cwde
sub
in
in
mov
int3
mov
mov
jg
jl
idiv
test
out
mov
ror
fbld
je
jmp
sub
addr16
fmul
cmp
cmps
push
xor
das
rcr
xchg
loopne
cmp
int3
enter
jg
xchg
loopne
adc
enter
js
dec
sbb
(bad)
call
jb
mov
push
es
jb
cmp
outs
loop
ret
(bad)
call
xor
sub
xor
aad
pop
outs
jne
into
mov
push
fbstp
push
jg
inc
mov
aad
fist
mov
mov
cmps
test
push
fbld
cmps
test
pop
xchg
je
sbb
fisubr
movs
add
cmp
push
mov
sbb
cwde
enter
(bad)
(bad)
(bad)
cmp
dec
or
dec
push
(bad)
out
inc
fiadd
fiadd
fidivr
outs
clc
jmp
cli
adc
xor
hlt
rcr
fstp
jge
stc
jmp
sbb
(bad)
scas
aam
and
jmp
cld
add
out
fcomp
dec
push
pop
mov
mov
pop
xchg
fcomp
fmul
adc
(bad)
js
ja
xor
adc
sbb
fbld
cwde
sahf
push
and
mov
es
cmps
dec
pop
iret
in
fnstenv
cmp
inc
out
sbb
std
sub
pop
lds
pop
sahf
ja
ss
dec
fldl2t
(bad)
jmp
adc
int
rcl
cmps
data16
jle
movs
push
or
mov
(bad)
jmp
sbb
pop
push
jbe
sbb
jmp
sbb
dec
jmp
mov
scas
clc
mov
aas
push
mov
out
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
inc
das
rep
arpl
in
mov
and
sub
jl
scas
mov
ret
(bad)
jns
or
dec
inc
sub
(bad)
mov
dec
dec
leave
mov
ja
(bad)
out
scas
hlt
dec
pop
loopne
(bad)
and
dec
fidiv
and
nop
adc
loopne
pop
inc
xchg
lock
(bad)
mov
dec
push
aas
mov
push
mov
adc
(bad)
(bad)
(bad)
jg
cmps
ds
inc
or
sti
aad
test
(bad)
mov
call
and
syscall
clc
(bad)
inc
js
shr
int
outs
cld
stos
mov
je
push
sbb
jo
(bad)
(bad)
(bad)
jmp
loop
int3
sub
mov
ja
stos
jmp
(bad)
jl
jecxz
mov
test
sbb
in
pop
xchg
jp
xor
cmp
out
in
xchg
sbb
into
(bad)
(bad)
fcomip
leave
fwait
outs
mov
mov
inc
and
mov
add
jmp
clc
xchg
cld
cwde
arpl
cdq
xchg
in
out
cdq
or
sbb
out
xor
ins
push
jg
movs
out
lahf
sti
sbb
test
div
mov
cli
out
lea
hlt
out
mov
(bad)
(bad)
push
or
movs
mov
push
mov
xor
jmp
mul
mov
leave
(bad)
(bad)
(bad)
jmp
out
mov
sub
enter
and
push
fsub
mov
mov
loop
movs
mov
cmps
out
fisubr
add
fwait
jae
stos
adc
adc
add
or
jo
push
cli
mov
(bad)
aam
aaa
clc
mov
or
jecxz
jg
(bad)
rol
mov
int3
addr16
(bad)
(bad)
call
jnp
scas
push
sar
xchg
stos
ret
pop
loop
aad
mov
iret
jmp
(bad)
mov
call
push
imul
das
mov
or
mov
sub
lock
push
add
call
and
ret
jecxz
fistp
ss
sahf
in
addr16
stos
fsubrp
ins
mov
arpl
sbb
lock
into
mov
popf
pmaxsw
sub
das
(bad)
(bad)
out
fdivr
dec
les
(bad)
dec
sti
mov
pusha
sbb
push
in
aam
pop
(bad)
(bad)
jg
pop
int
mov
scas
(bad)
push
xor
sahf
movs
test
jbe
(bad)
(bad)
mov
jle
loope
fiadd
xor
push
sti
xchg
inc
cmp
out
mov
mov
ins
xlat
jecxz
dec
xor
mov
pop
(bad)
(bad)
(bad)
jmp
cs
fcomi
ret
cmp
popf
xor
cdq
pop
popa
inc
jmp
sar
call
sub
pop
adc
push
retf
jae
(bad)
(bad)
out
jmp
cmps
fild
push
add
(bad)
(bad)
inc
cmp
add
cld
xchg
ret
cmp
push
mov
mov
pop
(bad)
(bad)
jg
mov
cmp
mov
mov
popf
std
mov
mov
dec
sub
jmp
xor
les
cmc
sti
idiv
sbb
in
pusha
cmp
clc
clc
(bad)
push
dec
test
mov
fdivr
xchg
adc
jnp
lods
ins
xchg
aam
mov
cmp
repz
repnz
add
ss
pop
(bad)
(bad)
jmp
sbb
dec
retf
outs
ret
cmp
lahf
fiadd
(bad)
jns
ja
repz
mov
sbb
lock
jl
out
pop
std
jmp
std
cmp
add
(bad)
(bad)
(bad)
push
inc
into
jne
and
dec
xlat
enter
jle
mov
arpl
add
(bad)
dec
mov
push
sub
fs
dec
or
push
leave
push
xlat
daa
cmc
pop
clc
stc
scas
(bad)
(bad)
(bad)
jg
mov
jno
mov
imul
jmp
xor
cmp
pop
stos
sbb
(bad)
(bad)
push
mov
cld
add
shr
aad
ins
in
imul
mov
dec
mov
push
(bad)
call
mov
scas
jb
(bad)
outs
stos
test
fdivr
ja
out
sbb
out
in
xchg
jg
mov
jmp
pop
pop
xchg
repnz
(bad)
(bad)
(bad)
jg
cmc
lahf
stos
repz
xchg
loopne
sbb
fcom
or
fmul
mul
cwde
inc
mov
or
mov
add
inc
push
call
and
xchg
xor
push
mov
add
imul
xchg
add
mov
jg
fcomip
or
mov
cmp
mov
mov
inc
push
lods
lahf
xchg
sub
popf
out
aaa
loop
mov
xor
cli
jmp
(bad)
(bad)
aas
(bad)
push
iret
leave
nop
xchg
sub
xchg
and
jno
arpl
cld
(bad)
(bad)
push
lods
xlat
loop
mov
test
xchg
mov
lods
popa
test
fiadd
add
pop
jo
ds
rol
out
out
(bad)
call
mov
sahf
out
cwde
repz
mov
cmc
test
test
(bad)
(bad)
push
jae
outs
mov
add
jge
mov
pop
rcl
jg
mov
and
(bad)
(bad)
(bad)
(bad)
stc
icebp
aam
movs
jmp
cmp
mov
or
push
lods
lods
ret
and
add
fwait
sub
fcomip
call
jo
xor
pop
mov
repnz
xlat
out
(bad)
neg
inc
pop
add
jg
(bad)
int
mov
mov
into
jmp
jg
shr
mov
xlat
xchg
xor
dec
imul
sub
xchg
icebp
sub
les
sbb
xchg
cmp
dec
add
pusha
int3
(bad)
(bad)
push
mov
popa
push
les
imul
icebp
fstp
mov
xchg
mov
add
(bad)
mov
mov
sub
adc
fmul
sbb
movs
(bad)
xlat
(bad)
sub
daa
inc
in
dec
push
in
clc
movs
aam
fwait
sub
jp
jne
add
pushf
imul
clc
ss
xchg
mov
dec
repz
cmp
add
test
ins
enter
push
or
aad
in
mov
lods
add
sub
jmp
clc
pop
cdq
xchg
and
pop
inc
mov
and
xchg
mov
jb
mov
rcr
mov
mov
ficom
fdivrp
lock
call
ret
dec
fidivr
dec
lods
imul
int
add
or
(bad)
fild
add
cmp
jne
xor
test
cmp
pop
and
jecxz
loop
(bad)
(bad)
(bad)
jmp
push
lahf
jae
stos
jne
dec
or
dec
stos
push
cmps
lods
pop
add
scas
loope
add
xchg
xchg
fwait
test
stos
cld
or
jb
xlat
jl
add
pop
fwait
in
(bad)
jmp
out
adc
and
mov
mov
pop
test
call
(bad)
cmp
xchg
adc
jecxz
adc
cld
jle
sub
cmp
nop
mov
mov
(bad)
call
imul
stos
call
lods
lock
jge
test
(bad)
call
(bad)
xchg
sub
xchg
aas
inc
jmp
das
inc
loop
ret
outs
mov
(bad)
(bad)
call
or
add
xchg
rcl
movs
arpl
xchg
mov
imul
push
mov
scas
(bad)
(bad)
mov
test
(bad)
sbb
jo
jmp
pop
sub
shl
add
jne
lods
retf
push
(bad)
(bad)
push
cmp
(bad)
jmp
push
icebp
push
test
icebp
ud1
dec
in
xchg
imul
addr16
mov
push
ret
sbb
sub
nop
pop
scas
lea
(bad)
jmp
sub
js
mov
jg
add
push
mov
(bad)
push
(bad)
cmp
mov
add
or
inc
pop
cmp
dec
in
xchg
sahf
add
dec
clc
fild
or
out
icebp
sbb
mov
aaa
jp
sbb
adc
movs
ins
push
inc
add
(bad)
fbstp
std
call
pop
push
out
push
sti
jbe
sub
out
push
jbe
imul
add
sbb
jmp
popf
out
jl
sub
cmps
(bad)
outs
mov
mov
and
jo
loop
inc
(bad)
cmp
sar
fild
js
sti
fwait
mov
pop
(bad)
mov
add
xchg
push
retf
sbb
and
mov
cmc
lods
pop
lahf
pop
(bad)
(bad)
inc
arpl
sar
aam
xor
mov
and
pop
(bad)
(bad)
jmp
inc
push
sub
ror
sub
pop
icebp
mov
cmc
int
cld
fstp
(bad)
(bad)
(bad)
std
sbb
or
int
dec
cmp
(bad)
cmp
mov
sbb
mov
(bad)
(bad)
(bad)
dec
movs
dec
out
call
hlt
pop
cli
fsubrp
xor
icebp
or
movs
adc
iret
arpl
clc
mov
mov
push
arpl
inc
fiadd
jecxz
outs
dec
fidiv
das
xor
mov
mov
cmp
and
jmp
jmp
imul
inc
imul
mov
fistp
add
cld
(bad)
fxch
cmp
dec
push
xor
int
(bad)
(bad)
(bad)
mov
mov
and
int
aad
imul
mov
(bad)
jno
int3
retf
scas
(bad)
(bad)
(bad)
inc
and
push
pmulhuw
cmps
pop
push
outs
mov
mov
loope
push
mov
shl
sub
call
cli
jl
mov
(bad)
push
ins
dec
sti
repnz
jmp
shr
ret
ja
aas
in
ins
out
stos
scas
mov
jg
(bad)
jmp
push
jmp
icebp
mov
ret
mov
xor
dec
bound
mov
and
sbb
sub
sbb
sub
ret
jns
and
inc
or
call
rcr
outs
aam
aaa
mov
fild
sbb
ds
pop
cmp
(bad)
(bad)
(bad)
dec
add
jbe
and
dec
mov
mov
outs
mov
adc
mov
adc
sar
push
leave
xor
call
test
(bad)
(bad)
dec
fcmovnu
sahf
push
xchg
lods
adc
scas
mov
mov
fcmovnb
out
inc
out
mov
jno
push
cmp
shr
push
scas
pop
in
adc
fisttp
popa
add
adc
out
add
shr
adc
lahf
cld
in
stos
loop
sbb
jb
sub
(bad)
cli
adc
jbe
bound
fistp
or
pop
out
out
sub
(bad)
pusha
jmp
out
mov
pop
cld
sahf
int3
mov
aaa
clc
pusha
in
enter
dec
outs
pop
and
aad
jp
repz
(bad)
(bad)
jmp
mov
fidivr
sahf
fcmovnbe
inc
push
and
lahf
xchg
call
jg
lea
out
(bad)
jmp
xor
pop
push
xor
mov
mov
jmp
xchg
jne
(bad)
sub
and
mov
bound
sbb
dec
int3
pusha
add
(bad)
(bad)
(bad)
(bad)
jmp
or
pop
mov
sbb
mov
jmp
fcmovnbe
fsub
inc
xor
(bad)
(bad)
jg
call
rol
jns
loop
add
cmp
(bad)
scas
mov
dec
call
inc
sbb
push
and
sub
add
push
adc
push
and
inc
cmc
pop
scas
pop
das
inc
pop
pusha
xchg
jmp
stos
dec
retf
mov
mov
dec
(bad)
pop
mov
mov
add
(bad)
jg
push
xchg
jo
jl
jecxz
lock
fdivr
fcmovnu
inc
(bad)
call
mov
call
jmp
ins
pop
push
jbe
xor
(bad)
(bad)
(bad)
(bad)
jp
pusha
xchg
(bad)
cmp
push
mov
hlt
jl
ins
push
sub
or
mov
call
or
and
mov
nop
ret
pop
jb
bound
xchg
movs
sahf
add
inc
popf
push
ins
sbb
js
and
cld
movs
xchg
pop
adc
mov
inc
int
xchg
dec
mov
cmp
xchg
je
sbb
and
in
fistp
daa
outs
in
jb
push
cmc
push
inc
xchg
add
pop
(bad)
sub
sub
sub
mov
mov
mov
pop
push
mov
jnp
adc
cmp
pusha
mov
push
xchg
jmp
ret
clc
mov
sub
fnsave
xchg
out
hlt
hlt
ror
jg
mov
lahf
fcmovu
leave
sub
mov
mov
lods
jo
xchg
out
cli
out
cli
(bad)
jbe
push
jp
loope
and
mov
jmp
jmp
pop
sbb
int3
adc
sti
xor
pop
inc
add
pop
jecxz
aad
ffreep
(bad)
jmp
sbb
xchg
pop
loopne
fdivr
(bad)
aas
(bad)
icebp
into
addr16
outs
(bad)
(bad)
(bad)
call
cld
out
(bad)
cli
pushf
clc
or
iret
aas
(bad)
jl
and
mov
xchg
sbb
mov
fisttp
int
mov
add
lea
mov
jle
adc
or
sub
out
jo
es
push
not
lods
inc
add
mov
arpl
jg
jmp
lods
arpl
xor
scas
adc
jmp
lods
test
retf
pop
jge
hlt
sbb
dec
into
jge
sub
int
(bad)
pushf
pop
xchg
(bad)
(bad)
(bad)
call
sbb
pop
jl
shr
push
pop
dec
pusha
fbld
sbb
or
lods
leave
and
sar
jmp
(bad)
fcomp
xchg
jnp
xor
(bad)
adc
jg
aam
ja
mov
mov
icebp
push
jb
jo
push
sbb
push
inc
fst
xchg
stos
or
popa
jae
sti
pop
jmp
sub
in
jl
loop
mov
cmps
jb
hlt
and
xchg
(bad)
(bad)
(bad)
dec
in
jg
out
jo
fst
jnp
adc
xchg
movs
jg
icebp
mov
out
enter
jg
sbb
jp
jecxz
mov
rol
or
(bad)
inc
mov
icebp
test
push
aam
mov
push
sti
jno
mov
jl
adc
push
cld
call
imul
aam
mov
pop
inc
out
dec
sti
mov
rol
push
imul
outs
int
jns
cdq
fwait
daa
(bad)
(bad)
call
neg
sti
pop
sbb
add
jbe
imul
movs
in
push
and
dec
pop
(bad)
fiadd
test
mul
jg
inc
push
mov
js
bound
push
(bad)
(bad)
mov
jmp
xor
pop
pop
outs
stos
sbb
sar
(bad)
(bad)
push
mov
out
movs
jle
mov
sbb
or
pushf
sti
aad
adc
repz
jg
(bad)
jmp
or
in
fwait
pop
pop
jl
fsubp
fld
inc
aas
cli
rcr
scas
fs
or
xchg
popf
mov
fidiv
(bad)
mov
div
iret
fcom
icebp
mov
mov
das
neg
stos
mov
or
and
into
stos
xchg
(bad)
clc
(bad)
(bad)
jmp
lock
lds
and
inc
sbb
mov
dec
int3
pop
(bad)
(bad)
(bad)
jmp
and
icebp
(bad)
int
out
mov
lds
jecxz
pushf
gs
iret
mov
and
(bad)
(bad)
mov
cmp
test
or
imul
push
(bad)
push
xor
or
cmp
loopne
pop
std
(bad)
push
inc
cmp
pop
(bad)
imul
xchg
test
dec
dec
inc
mov
adc
mov
rcl
jno
sub
jmp
xchg
aad
test
sahf
icebp
(bad)
(bad)
jg
das
mov
(bad)
stos
sar
aaa
mov
daa
xchg
cmp
(bad)
(bad)
fistp
push
repnz
sub
call
jnp
les
sub
imul
test
not
std
cli
mov
mov
push
mov
cwde
lahf
nop
mov
push
push
mov
xchg
mov
inc
cld
stos
out
xchg
jbe
in
ja
mov
adc
das
not
and
daa
add
add
add
lock
sar
dec
ja
or
leave
push
aad
pop
outs
clc
(bad)
push
mov
add
mov
or
cld
in
(bad)
(bad)
jmp
jg
repz
cmps
aas
std
imul
push
adc
test
and
out
sbb
dec
cld
push
(bad)
adc
xchg
imul
push
ret
jnp
dec
das
cli
in
pop
dec
xchg
icebp
js
das
shr
jb
inc
sbb
rcr
adc
pop
cmc
jmp
jae
xchg
xor
mov
and
movs
mov
and
pop
(bad)
dec
fld
cmp
fwait
clc
js
in
mov
cmp
jb
(bad)
(bad)
(bad)
out
push
sbb
adc
mov
mov
ror
mov
sbb
clc
jmp
cmovg
xor
pop
dec
inc
jmp
data16
cmp
scas
mov
shr
jo
xchg
add
mov
clc
dec
inc
push
fucompp
dec
gs
mov
dec
outs
jle
dec
lock
sti
jbe
int
mov
(bad)
or
jmp
cwde
cld
mov
mov
mov
pop
lock
ret
jo
js
push
repz
adc
(bad)
(bad)
inc
stos
pop
or
inc
rcr
pop
ins
loop
aam
nop
in
fdivr
push
jl
mov
or
std
push
and
inc
sbb
outs
pop
sub
enter
jmp
sbb
sar
out
(bad)
rcr
pusha
(bad)
stc
push
inc
(bad)
pop
push
lods
fbstp
inc
dec
jg
add
fistp
xor
jg
lock
lahf
icebp
push
and
ja
out
inc
mov
mov
hlt
mov
mov
mov
mov
adc
(bad)
mov
mov
dec
dec
xchg
clc
mov
(bad)
(bad)
arpl
ret
pop
aam
xor
inc
adc
and
xchg
jle
sub
icebp
mov
sbb
out
in
(bad)
iret
rol
retf
push
(bad)
(bad)
call
in
adc
ds
push
std
ins
in
retf
sbb
sti
ror
jo
call
clc
(bad)
mov
and
jae
fs
(bad)
repnz
push
fcomip
inc
mov
test
xor
int
mov
pop
std
(bad)
cmp
out
aaa
mov
fsub
xchg
mov
(bad)
pusha
adc
(bad)
jg
lock
rol
stos
aam
xchg
mov
idiv
loop
call
(bad)
xchg
dec
shl
mov
loope
push
pop
outs
mov
xlat
push
xchg
movs
outs
push
idiv
dec
sub
pushf
push
lods
push
add
jmp
and
pop
imul
adc
or
dec
mov
lods
cli
cli
pop
outs
mov
push
(bad)
call
xor
mov
cs
jo
(bad)
xchg
push
sub
imul
adc
and
mov
and
mov
dec
jl
popf
mov
mov
sub
call
push
push
jg
call
arpl
xlat
mov
cld
dec
ss
dec
out
or
les
cmps
inc
fsubr
imul
sbb
inc
jecxz
movs
or
pop
xchg
mov
rep
outs
jge
jl
lock
(bad)
jecxz
les
sbb
loopne
sub
loop
repnz
out
fnstsw
(bad)
push
mov
and
(bad)
mov
bound
fistp
jo
dec
jg
popf
clc
and
inc
adc
enter
sub
fldcw
call
cmps
fnstsw
stos
adc
dec
fsubr
into
and
jg
(bad)
ss
push
dec
std
mov
push
adc
cmps
adc
push
jbe
mul
test
fiadd
(bad)
mov
cmps
mov
adc
mov
cdq
fld
xchg
cmp
jne
(bad)
(bad)
jmp
scas
and
pusha
or
pop
out
add
inc
push
lods
imul
xchg
pop
(bad)
pop
jmp
mov
cmp
mov
jle
and
(bad)
loopne
adc
and
loope
or
or
retf
push
fsub
xchg
adc
mov
mov
and
(bad)
push
mov
sub
lds
xchg
sbb
mov
ficomp
das
ins
arpl
jmp
sar
sub
jne
push
cwde
cs
fcomp
shr
(bad)
(bad)
dec
rol
retf
jmp
mov
loopne
mov
shl
imul
pop
loopne
fs
xor
push
xchg
les
cwde
aas
mov
mov
lds
gs
pop
mov
mov
sub
xlat
jno
cwde
inc
and
shl
ret
jb
imul
or
loop
out
jne
test
nop
xor
div
inc
mov
(bad)
fsub
lods
sti
xlat
fdiv
fcom
les
(bad)
(bad)
sti
test
loop
mov
test
or
in
mov
sub
enter
cmp
(bad)
out
cdq
aam
(bad)
(bad)
in
jg
jecxz
ins
cld
xor
ins
sub
retf
inc
mov
je
sbb
ret
cli
pop
out
pop
(bad)
(bad)
(bad)
(bad)
jmp
loop
xlat
mov
mov
or
ja
outs
push
sti
popf
mov
repnz
mov
sbb
clc
lds
out
jl
pop
and
pop
xor
jbe
or
adc
cwde
test
sti
cmp
icebp
mov
shr
jb
fwait
pop
jns
jmp
movs
aam
sbb
adc
pushf
cmp
(bad)
jmp
std
sbb
add
ficom
(bad)
shl
xor
repz
cmc
jmp
popf
xlat
mov
mov
clc
(bad)
fild
(bad)
adc
jle
adc
sub
inc
mov
(bad)
(bad)
(bad)
push
out
mov
mov
dec
jmp
es
cmp
push
sbb
pop
dec
adc
dec
and
movs
dec
xor
(bad)
(bad)
(bad)
dec
dec
dec
mov
je
lds
data16
movs
inc
mov
(bad)
(bad)
jg
adc
sbb
icebp
icebp
call
sbb
jge
push
sbb
jbe
inc
inc
icebp
adc
outs
(bad)
(bad)
(bad)
(bad)
xchg
add
add
ret
in
cmp
mov
test
lahf
adc
(bad)
(bad)
push
sbb
jmp
pop
pop
ja
cmp
adc
jmp
(bad)
(bad)
(bad)
jmp
add
jecxz
test
jp
pop
sub
in
mov
cmp
jge
mov
mov
cmc
push
iret
jl
mov
rcl
mov
mov
pop
and
pop
std
jmp
movs
icebp
int
fstp
test
dec
sub
push
ret
movs
and
(bad)
push
add
sub
adc
loop
xchg
pop
scas
adc
sub
retf
aaa
mov
adc
jmp
(bad)
(bad)
(bad)
call
jg
cwde
cmp
jmp
aaa
or
and
shl
(bad)
(bad)
dec
pop
(bad)
jle
sub
out
push
popa
mov
jb
add
add
(bad)
call
mov
xchg
test
call
dec
jle
xchg
ja
(bad)
(bad)
(bad)
dec
pushf
add
push
pop
(bad)
and
ja
sbb
inc
inc
scas
pop
jne
adc
push
jmp
clc
sbb
bound
sub
(bad)
(bad)
call
test
xor
mov
xor
arpl
popf
ja
call
outs
add
pusha
push
push
jp
outs
les
push
icebp
outs
dec
mov
dec
std
int3
(bad)
fst
jbe
(bad)
adc
(bad)
cmp
(bad)
sub
mov
push
dec
adc
(bad)
cld
lock
dec
cli
sti
mov
(bad)
sti
pop
pop
stos
rcr
stc
lahf
(bad)
mov
jecxz
add
bound
shr
push
jmp
xor
mov
test
fstp
call
ins
adc
sub
loopne
pop
xor
call
int3
adc
and
aam
sub
cmp
cmp
adc
xor
sbb
(bad)
(bad)
push
ja
pushf
call
mov
push
int
xchg
sub
fild
imul
popa
les
(bad)
(bad)
(bad)
jmp
sahf
jle
jmp
div
mov
jg
and
int
outs
cmp
push
push
pusha
movs
sbb
lock
sar
(bad)
jmp
pop
jo
pop
pop
(bad)
sahf
out
(bad)
xor
xor
mov
jl
int
in
adc
add
xchg
fisttp
(bad)
(bad)
(bad)
cmp
repnz
fcmovu
pop
mov
std
sub
sahf
mov
mov
adc
dec
and
sub
movs
mov
sub
cmp
dec
inc
push
add
xor
sbb
xor
jmp
out
jae
dec
lahf
sub
scas
jno
dec
mov
and
jge
outs
(bad)
(bad)
dec
push
jg
mov
mov
ja
push
push
xor
jmp
in
aas
dec
mov
adc
mov
rcr
xchg
nop
iret
pop
cmp
ror
(bad)
jmp
dec
inc
mov
movs
xchg
xor
jmp
sbb
push
jae
out
jne
call
sar
pop
mov
mov
jge
call
and
push
stos
cmp
sub
(bad)
call
rcr
iret
fdivrp
into
push
pop
add
icebp
mov
in
xchg
fcmovu
(bad)
(bad)
(bad)
(bad)
fcos
mov
iret
xchg
jle
mov
sbb
mov
stos
mov
mov
pop
cmp
jecxz
add
or
add
lds
xlat
mov
es
pushw
push
jecxz
mov
movs
fstp
das
jp
mov
fwait
mov
out
inc
sbb
mov
lds
push
jp
imul
lahf
jg
call
and
lods
cs
out
test
sbb
mov
sti
clc
rol
daa
(bad)
call
cmps
mov
loop
jp
cwde
in
out
adc
(bad)
(bad)
(bad)
jmp
test
pop
mov
xchg
mov
(bad)
dec
movs
push
lds
mov
(bad)
(bad)
call
mov
mov
jne
adc
pop
jl
lds
lahf
movs
mov
sahf
jno
push
loopne
fs
in
and
aam
pop
in
xchg
mov
rol
(bad)
inc
push
mov
dec
cmp
movs
fnstenv
jnp
mov
and
fimul
sti
push
and
pop
cld
inc
enter
jnp
aam
out
call
add
movs
cmc
push
push
pop
inc
ins
aad
cmp
jae
int3
adc
clc
(bad)
fisttp
(bad)
cmp
outs
xchg
jae
dec
and
sub
sub
outs
mov
xor
mov
sbb
and
(bad)
(bad)
jg
dec
pop
aad
push
(bad)
push
mov
sti
jnp
shl
loopne
ret
(bad)
fisttp
mov
hlt
aam
adc
ret
js
inc
icebp
sbb
ja
mov
mov
idiv
cwde
push
sbb
pushf
mov
hlt
(bad)
(bad)
cmp
dec
push
hlt
jp
fistp
push
in
xlat
lods
and
sbb
rcl
rcl
push
push
inc
jmp
(bad)
test
dec
in
push
movs
jbe
fdiv
ficomp
sbb
xchg
jb
(bad)
(bad)
(bad)
mov
xchg
jecxz
xor
in
fsubr
fadd
push
jnp
mov
cmp
pop
(bad)
(bad)
std
inc
(bad)
mov
(bad)
mov
adc
(bad)
into
mov
and
sahf
inc
push
mov
jmp
push
jmp
fadd
sar
dec
sbb
(bad)
adc
push
(bad)
or
and
cmc
cdq
mov
(bad)
jmp
fadd
pop
sub
cmps
mov
push
push
jb
(bad)
imul
push
rcr
jne
stos
push
std
push
or
test
sub
into
xchg
fs
sbb
clc
sahf
(bad)
(bad)
mov
out
mov
pop
ret
cs
popa
mov
sahf
cli
mov
sar
(bad)
mov
and
cdq
inc
mov
lea
add
pop
sbb
dec
push
fimul
les
fwait
outs
dec
jecxz
dec
jmp
jmp
xor
sub
mov
sahf
call
push
push
add
push
lods
jbe
pop
or
or
xor
inc
int3
jns
mov
stos
js
retf
sub
xor
(bad)
mov
in
(bad)
in
icebp
mov
imul
test
(bad)
(bad)
(bad)
(bad)
cmp
jbe
into
dec
imul
push
jp
push
xchg
lods
arpl
cld
push
(bad)
mov
pop
jno
fidiv
fstp
stos
fwait
sar
aaa
add
push
or
nop
(bad)
jmp
(bad)
div
cmp
clc
out
xchg
loope
dec
cs
lock
(bad)
push
mov
imul
mov
pop
(bad)
cmp
jns
fldenv
jl
jbe
mov
arpl
movs
pop
mov
pushf
xor
call
aaa
std
push
scas
jmp
sbb
cmps
inc
fcomp
jns
int
outs
fisubr
(bad)
(bad)
(bad)
fidivr
out
xchg
mov
mov
add
cmp
ret
pop
jo
in
dec
mov
lds
cld
xchg
jae
sbb
(bad)
in
xchg
push
xchg
(bad)
shl
xchg
hlt
jb
bound
ja
cmp
call
jnp
(bad)
(bad)
inc
retf
les
ficom
mov
pushf
add
test
push
adc
fmul
nop
mov
adc
mov
bound
fstp
out
and
jns
(bad)
jg
pushf
mov
sar
data16
xchg
pop
fistp
add
add
mov
movs
xchg
mov
pop
sbb
call
movs
movs
fisttp
call
xchg
add
adc
fnstenv
jmp
aaa
push
aam
add
test
add
sub
push
idiv
mov
push
and
in
das
ret
inc
test
pop
movs
mov
mov
js
outs
test
(bad)
aas
push
std
jmp
call
out
inc
mov
dec
fsubr
pop
or
and
add
mov
(bad)
sub
pop
mov
jp
sub
(bad)
jmp
inc
inc
or
ud0
out
sub
loope
les
(bad)
repz
adc
(bad)
ds
(bad)
(bad)
(bad)
dec
nop
pusha
nop
xchg
ja
sti
pop
xor
hlt
lds
dec
in
out
pop
ins
jae
(bad)
pop
lock
js
or
fdiv
call
pop
add
mov
cli
(bad)
push
xchg
loopne
fcom
jb
jp
sub
paddusw
out
clc
arpl
sub
imul
shl
jb
pusha
bnd
xor
xlat
nop
jp
lods
cmp
mov
push
fist
jg
jno
dec
leave
push
sub
mov
movs
ss
cmp
call
pop
sub
push
(bad)
jg
daa
inc
xor
push
lock
call
xor
jmp
cmc
cmp
xchg
or
scas
push
es
adc
movs
inc
fadd
(bad)
(bad)
(bad)
push
adc
(bad)
pop
rcl
sbb
cmp
int
loop
mov
gs
pop
inc
xchg
inc
ret
push
(bad)
(bad)
fbld
(bad)
adc
in
test
xchg
sbb
(bad)
daa
cmc
mov
mov
jbe
ret
shl
pop
ja
adc
ja
and
dec
jmp
js
cmp
push
inc
add
sahf
ret
nop
mov
(bad)
mov
movs
aad
leave
mov
xor
xchg
pushf
mov
pushf
xor
inc
(bad)
call
je
pop
xlat
shl
mov
mov
xlat
test
(bad)
ror
bnd
(bad)
fist
mov
call
jnp
mov
sbb
cs
jmp
clc
jmp
sar
or
popa
fistp
dec
outs
or
aas
(bad)
clc
ins
in
retf
lods
jg
je
bound
or
(bad)
(bad)
push
mov
je
icebp
int3
sar
cli
cmp
nop
mov
push
std
(bad)
mov
inc
mov
or
ror
mov
lods
mov
aad
add
das
cli
xchg
fdivr
out
xor
mov
push
inc
push
mov
bnd
push
(bad)
fist
aad
or
or
lahf
out
mov
add
push
lods
jmp
(bad)
call
cmp
movs
add
cmp
(bad)
cmp
jnp
in
pop
mov
lahf
(bad)
loopne
out
clc
(bad)
mov
add
adc
push
test
hlt
fdiv
(bad)
jbe
push
std
dec
mov
movs
sbb
push
sti
loop
jnp
dec
jo
retf
cmps
sub
jl
inc
sub
xchg
pop
inc
mov
jg
sbb
data16
retf
push
pop
pop
cmp
imul
cmp
add
push
xor
mov
fld
enter
push
std
mov
shl
(bad)
(bad)
mov
rep
das
jge
pop
fs
fldz
mov
or
jno
call
adc
mov
xor
enter
or
hlt
jl
(bad)
(bad)
jmp
pop
xlat
add
rol
test
into
mov
xor
(bad)
fcmovnbe
mov
fsubr
sahf
rcl
and
lods
push
mov
sbb
outs
loopne
xchg
ds
aam
addps
mov
ds
(bad)
jg
jmp
(bad)
imul
add
cld
jmp
jg
popf
dec
xchg
(bad)
aam
shr
adc
pop
add
pop
mov
(bad)
mov
inc
sub
dec
lea
jmp
pop
stos
xlat
(bad)
aam
loop
mov
hlt
(bad)
dec
cmp
dec
dec
mov
aad
mov
daa
sub
jo
add
or
cmp
mov
aam
cli
xchg
into
cmps
push
add
pop
(bad)
mov
add
loope
ret
(bad)
call
jecxz
add
sbb
ret
in
dec
rcr
push
cmps
pop
jo
data16
jmp
(bad)
(bad)
fild
jo
mov
lods
out
inc
(bad)
stos
and
cmp
or
or
(bad)
(bad)
(bad)
(bad)
jge
jne
dec
lock
lds
pop
mov
cmps
js
mov
aas
ss
jl
stc
out
sbb
inc
cmp
mov
(bad)
in
gs
and
cwde
sahf
sub
inc
mov
test
xchg
(bad)
xchg
mov
(bad)
adc
pop
push
hlt
adc
or
aas
shl
push
rol
mov
cli
mov
(bad)
(bad)
dec
mov
popa
lods
not
(bad)
pop
jecxz
rcl
cli
(bad)
(bad)
(bad)
jg
out
push
pop
aas
adc
sti
cmp
jnp
mov
jb
in
fimul
(bad)
adc
cld
xor
cmps
cld
sar
neg
cmc
test
sar
aam
sbb
mov
pop
hlt
call
mov
pop
ret
inc
arpl
outs
test
push
xchg
xlat
imul
clc
(bad)
jmp
out
fstp
jg
fstp
lahf
in
fdiv
call
into
leave
lods
dec
xchg
jae
mov
(bad)
dec
aam
stos
xor
jl
and
rcl
fsubrp
loopne
mov
push
fcomp
out
je
out
mov
inc
mov
mov
icebp
loope
ds
(bad)
(bad)
call
adc
hlt
jge
aaa
hlt
sub
lahf
and
shr
les
(bad)
(bad)
(bad)
push
or
sbb
push
stc
ds
(bad)
(bad)
fidivr
inc
pop
stos
call
(bad)
out
inc
sub
mul
jns
jbe
and
xchg
(bad)
repz
aaa
fidivr
enter
test
ins
(bad)
stc
sub
add
push
int3
arpl
sbb
mov
les
mov
xor
out
(bad)
inc
addr16
shr
and
pop
movs
and
loop
jb
out
das
clc
(bad)
(bad)
(bad)
(bad)
out
int
ds
loop
movs
pop
add
push
int
inc
and
out
jns
out
paddd
inc
std
sub
and
ror
std
sbb
shl
(bad)
(bad)
call
jge
add
add
(bad)
lods
xor
jle
pop
fist
repz
(bad)
dec
lock
adc
xor
or
cmps
lahf
jle
gs
xchg
inc
leave
xchg
ror
xchg
dec
pop
xor
call
stos
test
add
mov
in
xchg
jbe
jp
pop
dec
mov
lods
jbe
sbb
pop
int
(bad)
(bad)
mov
out
pushf
pop
add
cmp
shr
mov
adc
lods
jae
dec
out
jg
add
out
xor
jae
adc
(bad)
and
mov
(bad)
(bad)
(bad)
jnp
imul
inc
xchg
(bad)
movs
rcr
add
xchg
sti
xchg
xchg
sub
pop
std
stos
call
loopne
rol
fldenv
jg
call
mov
jg
jns
xchg
sbb
shr
xor
nop
pop
imul
popa
movs
mov
or
inc
enter
(bad)
je
in
ins
xor
jmp
je
std
(bad)
jmp
sub
dec
aad
enter
(bad)
pushf
sbb
mov
add
mov
jg
retf
idiv
fild
inc
xchg
or
repz
(bad)
mov
and
dec
ret
std
idiv
push
(bad)
outs
pop
lods
push
shl
cmc
sbb
and
xchg
or
inc
push
adc
xchg
adc
sub
mov
mov
pop
mov
push
add
in
push
(bad)
push
sub
movs
loop
fmul
push
add
lea
mov
add
mov
xor
sub
(bad)
(bad)
call
into
mov
mov
clc
movs
repz
mov
es
xchg
jmp
daa
jle
ret
(bad)
push
cmp
fidivr
adc
or
(bad)
test
and
mov
jo
sti
(bad)
jmp
xchg
pusha
xlat
or
inc
jno
in
push
mov
add
jg
pop
mov
mov
jp
jmp
mov
(bad)
aas
sti
std
call
push
call
and
or
out
(bad)
(bad)
xchg
dec
aad
or
sub
sbb
and
mov
pop
and
pop
mov
add
adc
xor
add
dec
stos
adc
jecxz
xchg
ds
xor
xor
lock
cli
jecxz
(bad)
jmp
cli
push
gs
sbb
xchg
(bad)
fcomip
mov
cmp
mov
leave
xchg
(bad)
test
or
or
cmps
pop
add
add
(bad)
(bad)
(bad)
(bad)
cmp
call
jecxz
cmc
aad
mov
daa
xor
stos
sub
mov
div
retf
(bad)
dec
das
aas
clc
cld
std
neg
mov
pushf
mov
stc
jmp
(bad)
outs
rol
cmp
jle
mov
outs
fcomip
call
ret
cmp
rol
and
xchg
das
inc
mov
(bad)
clc
(bad)
mov
out
push
and
dec
int
pop
xor
fwait
(bad)
cli
scas
(bad)
jp
(bad)
out
clc
ja
(bad)
fld
xor
pop
inc
aas
dec
(bad)
ins
stos
push
scas
in
jmp
outs
or
dec
jo
xchg
not
xor
das
cli
(bad)
jg
(bad)
bound
sbb
fstp
out
lods
sar
sub
(bad)
mov
test
into
hlt
mov
cld
call
arpl
jecxz
and
pop
sbb
aas
loop
xchg
or
ds
aad
(bad)
fnstcw
aaa
sub
inc
mov
mov
out
cli
(bad)
push
jmp
repz
daa
inc
inc
retf
dec
sar
cmp
and
sbb
out
movs
movs
call
test
push
cwde
pop
fsub
ja
push
aas
pop
cmp
xor
das
call
cmp
mov
add
adc
call
xchg
xchg
(bad)
(bad)
(bad)
inc
cmc
dec
fstp
pop
shl
inc
out
jb
js
(bad)
sub
imul
sbb
test
adc
xor
push
outs
jmp
nop
push
push
jno
jmp
nop
mov
dec
movs
dec
push
enter
xor
(bad)
(bad)
fbld
hlt
lods
adc
call
mov
call
fbld
pop
loope
popa
and
mov
dec
mov
js
test
jmp
cld
jg
xor
jbe
mov
fwait
aam
mov
sar
inc
dec
dec
and
mov
jo
inc
jmp
pop
cmp
lock
loopne
sbb
pop
idiv
cmp
test
(bad)
xchg
xchg
call
push
xlat
push
mov
and
(bad)
cld
(bad)
dec
and
scas
jb
push
sar
lods
push
mov
sbb
add
(bad)
aad
dec
ss
adc
jae
out
sub
jge
jbe
add
ja
loop
dec
fst
mov
inc
mov
mov
jp
fdiv
data16
jg
sar
out
mov
or
xlat
pop
jg
pop
cli
lods
or
xchg
jp
dec
in
sub
(bad)
call
push
mov
jle
lods
pop
cwde
not
jb
push
dec
mov
mov
int3
das
mov
jp
sub
addr16
and
dec
pop
in
fidiv
mov
mov
data16
mov
call
call
leave
cmp
data16
lock
push
rcl
inc
sub
mov
add
das
loopne
call
mov
and
fwait
dec
sub
cmps
out
sub
in
push
loop
adc
int3
or
(bad)
sub
mov
add
je
movs
inc
add
(bad)
(bad)
(bad)
mov
clc
cmps
cli
dec
sbb
xchg
xor
out
dec
add
jne
jbe
int3
je
(bad)
jecxz
scas
pushf
xchg
fwait
or
push
dec
dec
(bad)
cdq
jne
bound
pop
mov
sub
cmp
in
(bad)
jmp
lods
outs
into
xchg
in
cdq
addr16
mov
jnp
sti
fidivr
mov
sbb
pop
ss
inc
mov
jae
mov
loope
int3
and
cdq
inc
call
(bad)
js
dec
addr16
mov
push
jb
lods
push
scas
and
movs
lods
mov
xor
sbb
or
loope
push
mov
sub
arpl
cmp
pop
icebp
or
cli
mov
xor
mov
pop
dec
das
cmc
xor
jmp
lea
or
pop
and
sahf
test
push
sub
sti
pop
icebp
pop
and
shl
lds
stc
dec
call
(bad)
repz
hlt
into
addr16
mov
je
push
fwait
xor
sbb
pop
jo
pop
ins
(bad)
xchg
mov
mov
inc
jmp
mov
loop
mov
sub
jg
inc
mov
adc
jmp
push
jmp
mov
inc
add
inc
mov
clc
(bad)
mov
mov
pop
and
in
(bad)
xchg
lods
jno
test
push
sbb
inc
fild
dec
ds
and
jl
lahf
bound
in
push
scas
dec
sbb
sbb
(bad)
cmp
push
rol
ins
int
pop
out
into
gs
int3
retf
cdq
nop
out
loop
mov
add
push
(bad)
ficomp
or
jecxz
in
pop
aam
pop
in
sub
aaa
mov
or
pop
int
(bad)
cmp
or
ret
push
cli
ins
cwde
push
jge
cmps
cmp
movs
enter
outs
mov
push
aad
inc
cs
jle
cmp
inc
scas
add
(bad)
mov
sbb
hlt
and
jo
push
inc
stos
sbb
out
pop
and
mov
xor
es
ds
mov
push
mov
lahf
call
loope
mov
not
sbb
gs
pop
lock
enter
add
jmp
fnsave
(bad)
in
iret
add
pop
daa
out
push
jmp
add
adc
fist
push
jno
ror
sub
push
pop
push
out
xchg
(bad)
sub
or
inc
mov
test
sbb
sbb
movs
(bad)
jg
pop
mov
sub
jmp
hlt
dec
push
loopne
in
xor
icebp
(bad)
in
pop
std
pop
mov
push
fistp
nop
cmp
jmp
pop
pop
mov
jae
test
clc
in
adc
add
pop
mov
dec
pop
push
stc
xor
movs
and
sub
jp
push
inc
mov
sar
stos
out
xor
std
rol
outs
jle
fwait
fwait
aaa
les
push
add
and
sbb
push
(bad)
(bad)
(bad)
fst
ds
xor
lods
sub
cmp
xor
test
das
cli
rcr
dec
lea
add
dec
push
and
add
mov
inc
movntq
mov
sub
mov
sar
ret
(bad)
(bad)
(bad)
call
push
jmp
aam
mov
pop
mov
fst
push
imul
lods
cli
xor
pop
sub
ja
into
or
xchg
int
(bad)
fistp
push
pop
(bad)
(bad)
ror
inc
jne
ja
in
sahf
pop
xor
push
fistp
stos
(bad)
jmp
(bad)
inc
add
sbb
xchg
(bad)
mov
aad
retf
mov
jge
lock
(bad)
cli
or
sbb
popa
push
loope
xchg
pop
cmp
inc
jl
mov
clc
in
mov
(bad)
sti
dec
ret
rol
and
ficomp
jb
(bad)
inc
jp
add
pop
mov
mov
add
adc
call
pop
dec
mov
lahf
push
test
out
call
bound
and
mov
aas
mov
cld
push
pop
jns
out
sub
jg
cmps
mov
mov
std
in
(bad)
(bad)
(bad)
(bad)
fsubp
inc
test
mov
outs
lds
inc
add
cmp
jge
add
(bad)
rcr
cmp
das
js
jmp
cmp
push
test
push
jmp
xchg
(bad)
inc
les
lds
icebp
sbb
adc
test
lea
jl
fcmovnu
std
lahf
cli
call
xchg
outs
aaa
out
stos
jnp
popf
or
sbb
(bad)
aas
xor
inc
push
cmp
mov
mov
add
in
clc
jg
mov
(bad)
in
(bad)
or
cmp
jmp
jecxz
push
add
pop
int3
jne
push
lea
pushf
(bad)
cli
dec
(bad)
out
clc
mov
xchg
xor
aad
rcl
xchg
je
es
push
loope
gs
mov
mov
dec
lea
out
sbb
pop
shr
sbb
lea
or
lods
adc
lods
push
gs
stos
mov
add
mov
fist
cmp
adc
pop
xchg
test
xchg
mov
and
das
mov
pop
test
and
pop
and
jmp
push
sar
xor
scas
test
cmps
(bad)
ds
push
cmps
inc
dec
fcom
lods
push
out
es
(bad)
pop
cmc
add
pop
cmc
mov
pushf
or
jg
push
and
push
lods
pop
movs
clc
and
and
cmps
push
xlat
push
ret
daa
movs
imul
and
les
xchg
pop
mov
adc
test
inc
mov
mov
in
jae
jae
mov
test
frstor
mov
daa
movs
out
fiadd
mov
mov
mov
jmp
add
mov
and
push
sahf
out
dec
stos
retf
push
xor
std
(bad)
(bad)
jmp
pushf
mov
push
call
xor
mov
enter
(bad)
call
std
push
sti
(bad)
mov
push
les
and
ds
xor
push
(bad)
(bad)
cmp
cmp
jle
mov
imul
movs
xlat
dec
enter
mov
fdivrp
cmp
adc
xchg
ins
(bad)
call
lods
mov
std
call
inc
jecxz
lea
or
cld
mov
sub
and
ret
mov
push
fmul
aam
(bad)
push
test
(bad)
inc
fnsave
xchg
jno
pop
mov
(bad)
jb
mov
fcmovnbe
test
hlt
push
(bad)
(bad)
(bad)
mov
jle
cmps
inc
cmp
adc
or
out
lds
add
not
xor
jmp
push
imul
and
add
mov
fs
mov
jb
sub
mov
dec
xor
inc
sbb
sub
call
rol
test
test
loopne
sbb
dec
inc
dec
add
out
jae
mov
cld
push
jge
loop
push
inc
hlt
clc
push
loope
ficomp
pop
(bad)
or
cmp
es
sbb
std
(bad)
jmp
jmp
jbe
test
jno
xchg
(bad)
lods
hlt
mov
add
inc
sbb
mov
mov
sub
mov
inc
mov
cmc
or
imul
pop
(bad)
(bad)
mov
sbb
pop
dec
xor
xchg
pusha
pop
and
std
leave
dec
jle
lods
(bad)
(bad)
call
sbb
sub
out
outs
xchg
cwde
(bad)
push
add
mov
clc
or
(bad)
and
fucomip
ror
push
and
jg
jmp
cmp
jne
inc
int
(bad)
(bad)
(bad)
fbstp
xchg
xchg
mov
xor
pop
sbb
cbw
(bad)
inc
icebp
(bad)
dec
lods
sub
adc
xchg
sti
push
mov
rcr
lahf
jnp
mov
aaa
push
pop
mov
scas
pop
cmps
int
sub
jb
sbb
inc
movs
lahf
(bad)
jmp
(bad)
jg
ds
push
jle
cld
dec
mov
jb
xor
jb
rcr
pop
stos
pop
sub
dec
jg
sbb
test
nop
movs
nop
cdq
loope
cwde
or
and
(bad)
(bad)
(bad)
inc
xor
or
xor
pop
neg
gs
xchg
movs
ss
dec
fwait
movs
mov
(bad)
aad
stos
push
or
(bad)
cs
mov
xor
cmp
fsubr
inc
xchg
or
ret
clc
jmp
std
sub
fisttp
pop
sti
cwde
mov
cmp
hlt
inc
jge
rcr
sub
mov
(bad)
mov
pop
fild
ficomp
(bad)
xor
in
xchg
sar
je
loop
pop
(bad)
(bad)
(bad)
jmp
stos
or
mov
retf
stos
imul
and
icebp
les
fdivr
jp
ins
cwde
jge
out
jg
dec
(bad)
(bad)
mov
inc
push
jns
out
(bad)
push
sub
push
mov
(bad)
jg
dec
movs
adc
xor
les
pushf
loopne
adc
mov
push
in
push
sti
sub
div
ds
test
stos
push
aad
(bad)
inc
xor
enter
(bad)
aam
add
fnstenv
or
cli
dec
sar
aam
out
pop
mov
and
fdiv
sbb
std
add
add
mul
repz
(bad)
(bad)
fdiv
(bad)
(bad)
jmp
and
icebp
adc
fld
enter
add
inc
xchg
les
add
imul
int
sub
mov
push
outs
(bad)
or
call
push
jecxz
pop
mov
(bad)
(bad)
push
mov
(bad)
jo
ficom
mov
das
add
mov
inc
ret
stos
inc
inc
pop
pop
and
fsub
mov
call
jecxz
icebp
xor
and
outs
imul
cli
fstp
inc
test
(bad)
(bad)
jmp
ds
mov
xchg
dec
ja
imul
fcom
xchg
clc
mov
inc
cmp
outs
and
ret
aaa
mov
lds
iret
ret
pushf
es
add
adc
stos
(bad)
jbe
add
fdivp
push
fnstsw
call
jns
sub
mov
pop
into
push
add
mov
(bad)
(bad)
cmp
call
fs
inc
jl
pop
or
mov
xor
and
int
fistp
into
aad
sti
push
mov
xchg
shr
dec
stos
lahf
call
hlt
dec
sbb
cmp
mov
add
xor
pop
dec
adc
(bad)
(bad)
jmp
push
dec
shl
sbb
and
bound
sbb
jnp
mov
mov
cmc
dec
lods
push
mov
cmp
imul
xchg
or
mov
shl
inc
inc
pop
(bad)
out
(bad)
in
(bad)
hlt
je
shl
add
rcr
call
dec
or
adc
pop
jg
add
push
call
call
adc
(bad)
mov
add
xlat
xor
cdq
movs
add
retf
push
ins
sbb
add
cmc
xchg
cmp
jg
mov
jp
mov
add
mov
cmps
push
jnp
mov
push
lds
ins
das
cs
(bad)
inc
lea
xchg
fnsave
jmp
push
or
jg
fiadd
xchg
xchg
cmp
cmp
es
lock
fdivr
jmp
dec
jg
rol
call
sti
adc
fcmove
sub
test
lods
mov
and
(bad)
(bad)
inc
cmps
lea
dec
test
dec
sbb
lods
jne
push
and
ret
push
aaa
xor
frstor
and
adc
(bad)
in
mov
cmp
push
xchg
arpl
mov
out
movs
xor
cld
(bad)
push
mov
mov
outs
das
imul
dec
int3
mov
call
test
dec
jp
mov
mov
xlat
mov
fild
xchg
push
mov
jmp
movs
out
inc
cmp
scas
push
mov
int
jg
mov
inc
or
cli
(bad)
das
inc
shr
test
mov
pop
mov
std
int3
iret
jge
fmul
cmp
jns
mov
cs
call
xor
sbb
sub
add
adc
inc
lsl
inc
add
cmp
fldcw
pop
push
cmps
data16
add
dec
test
xchg
test
loopne
cmp
pop
shl
dec
dec
dec
shl
inc
mov
mov
test
mov
addr16
aad
loopne
(bad)
call
pusha
xor
arpl
xchg
xor
ss
adc
test
pushf
sbb
adc
add
(bad)
mov
sub
xlat
push
cdq
test
ins
ret
outs
mov
or
(bad)
mov
or
fcomip
aaa
adc
add
jmp
sbb
movs
add
(bad)
(bad)
call
sbb
mov
(bad)
arpl
dec
retf
jne
shl
repz
out
jg
push
add
xchg
push
pop
mov
jns
lds
out
jge
in
pusha
and
mov
or
mov
icebp
dec
push
outs
inc
mov
pop
jb
adc
pop
or
(bad)
(bad)
dec
jg
mov
(bad)
(bad)
std
push
inc
or
in
sldt
loop
pop
mov
inc
inc
jmp
jmp
dec
das
and
out
xlat
loope
loope
pop
jns
add
loope
mov
push
movs
fld
ficomp
in
loop
sar
pusha
add
jne
inc
adc
mov
(bad)
mov
adc
xlat
mov
lods
jle
adc
mov
aaa
(bad)
cmp
dec
pop
add
mov
shl
je
or
xor
cmp
dec
xchg
cli
(bad)
loope
repnz
pop
test
repnz
(bad)
push
setns
aas
jo
xor
add
retf
pop
cmp
add
das
mov
dec
add
loop
es
dec
shl
push
mov
inc
mov
nop
mov
call
cwde
mov
xor
hlt
(bad)
call
mov
arpl
movs
inc
js
sub
cdq
jle
push
aaa
cmp
clc
cwde
dec
retf
add
out
(bad)
(bad)
fistp
lahf
(bad)
fnstcw
sub
test
add
sbb
adc
push
fmul
movs
retf
into
add
pop
hlt
push
pop
int
xor
outs
cmp
and
sti
lods
bound
hlt
(bad)
(bad)
fsub
xor
inc
and
inc
xor
lds
cmp
ja
scas
mov
out
mov
into
mov
push
int3
mov
push
jmp
iret
xor
in
aaa
mov
cli
pop
cmc
call
jnp
sti
push
std
call
jmp
pop
mov
fcmovb
(bad)
(bad)
sbb
(bad)
(bad)
jg
inc
inc
cmp
in
mov
scas
lods
fiadd
out
idiv
and
jbe
test
push
pop
or
lods
jl
sbb
sahf
inc
(bad)
(bad)
rol
cmp
inc
adc
add
int
pop
cmp
mov
aas
inc
mov
clc
(bad)
call
idiv
shl
xchg
xor
xor
in
fild
scas
fidivr
(bad)
(bad)
stc
sub
adc
cs
mov
or
adc
dec
xchg
inc
(bad)
(bad)
(bad)
inc
(bad)
push
mov
adc
dec
or
out
dec
add
(bad)
sbb
fisubr
add
sub
das
in
or
xchg
pop
scas
adc
movs
inc
xor
bound
(bad)
mov
addr16
cmp
sbb
mov
and
push
in
jbe
sub
adc
imul
(bad)
(bad)
(bad)
dec
mov
mov
iret
popa
and
and
sbb
or
mov
mov
not
mov
out
dec
imul
test
cld
fist
sbb
xchg
xor
out
add
(bad)
inc
(bad)
cli
lods
rol
pop
popf
jmp
xchg
jg
cmp
or
pop
out
add
push
jns
repz
or
je
test
mov
(bad)
(bad)
(bad)
or
and
add
les
shl
jbe
retf
jge
inc
mov
aam
mov
stos
mov
adc
push
movs
push
xchg
fst
arpl
mov
sub
push
test
sar
aaa
test
shl
movs
inc
aas
and
int
xchg
fsub
dec
ret
jmp
je
xor
addr16
push
and
mov
(bad)
mov
iret
fdivr
mul
push
dec
aaa
pop
jl
(bad)
call
rol
add
idiv
jl
stos
pop
popf
cmp
xlat
jmp
mov
clc
ins
lahf
imul
enter
addr16
(bad)
(bad)
mov
hlt
push
and
dec
ja
scas
sub
push
jae
jge
mov
aam
(bad)
scas
xchg
shl
mov
(bad)
data16
pop
das
cli
(bad)
call
int
test
test
outs
scas
and
cmp
fbstp
jmp
mov
out
retf
loopne
cmc
jecxz
fdivr
fisubr
gs
mov
ds
dec
and
and
js
mov
(bad)
jg
jl
push
mov
push
into
pop
add
lods
mov
and
std
(bad)
jmp
jnp
mov
mov
mov
xchg
ja
jge
cdq
int
add
(bad)
fbld
iret
push
add
lock
mov
(bad)
jp
push
jnp
mov
sub
sahf
push
xlat
loop
mov
jne
fisttp
data16
out
neg
cmp
push
call
pushf
in
inc
push
mov
or
and
rcl
mov
fcomip
(bad)
push
stos
jno
(bad)
push
loop
push
sub
mov
sub
push
movntq
adc
fild
call
adc
pop
mov
aaa
jg
jecxz
lock
(bad)
pop
outs
fidivr
std
fwait
push
shl
xchg
das
clc
jg
outs
(bad)
out
out
add
pop
(bad)
(bad)
div
add
mov
dec
sbb
jne
enter
shl
dec
hlt
popf
and
call
mov
cli
pop
adc
int
fcom
pop
push
inc
add
out
inc
push
cld
jmp
add
daa
add
mov
jmp
leave
into
xchg
mov
aaa
cld
(bad)
mov
mov
and
ds
jg
jg
aad
pop
xlat
cmp
adc
jmp
mov
jb
call
xchg
jb
jae
test
js
stos
ret
xor
mov
sbb
add
outs
sbb
fbld
mov
imul
jae
cmp
adc
shr
jg
or
test
ret
fidiv
cld
mov
mov
(bad)
call
popf
inc
jmp
stos
mov
(bad)
(bad)
fistp
movs
(bad)
jnp
cli
jbe
addr16
out
adc
neg
inc
(bad)
rcr
cmps
jg
mov
xchg
lahf
lahf
mov
rol
add
add
(bad)
(bad)
(bad)
jmp
push
fld
jns
test
mov
sbb
and
xor
pushf
inc
je
out
lock
push
out
add
push
sbb
call
xchg
jmp
sub
or
and
add
mov
aaa
lock
outs
lods
shl
fdiv
jmp
dec
pusha
add
xor
neg
pop
std
call
inc
mov
fisttp
pop
xchg
(bad)
aas
jnp
scas
enter
inc
(bad)
(bad)
(bad)
sti
fs
cld
jbe
xchg
or
and
and
and
jg
imul
add
loop
jp
int
or
dec
mov
add
stos
not
fadd
lock
mov
jmp
jae
loop
into
outs
push
add
clc
mov
mov
(bad)
mov
test
jle
jle
cmp
or
cmps
dec
test
adc
and
pop
pop
fwait
shr
std
add
jmp
dec
out
lods
cmp
aas
add
add
xchg
(bad)
fbstp
jb
sub
fisubr
in
push
sbb
mov
sub
cdq
cmp
loop
std
ds
sbb
sti
enter
mov
mov
adc
(bad)
(bad)
(bad)
fist
sbb
pop
jmp
imul
mov
js
(bad)
bnd
(bad)
(bad)
dec
mov
arpl
dec
fcmovnu
rcl
sub
iret
mov
push
iret
iret
and
nop
cmp
or
in
lods
push
xchg
cwde
add
lods
xor
lahf
ret
(bad)
fucomi
sbb
in
fiadd
and
(bad)
(bad)
jmp
and
mov
loope
shr
mov
cwde
push
mov
mov
rol
mov
outs
adc
fld
imul
std
in
sbb
xor
sub
mov
sti
or
test
test
fmul
pushf
loop
inc
(bad)
(bad)
aas
addr16
test
pop
sbb
in
xor
adc
jecxz
popf
xchg
(bad)
(bad)
push
add
js
pop
mov
xchg
fwait
imul
mov
out
jb
ror
and
repnz
fbld
mov
(bad)
jg
adc
not
and
push
mov
push
jl
mov
call
mov
sub
xchg
idiv
test
out
test
push
das
jecxz
push
mov
push
add
pusha
ins
jl
jecxz
pop
sti
pop
pop
sbb
cld
pop
lock
add
sti
(bad)
jmp
rcr
hlt
jp
and
inc
sbb
mov
mov
aaa
jl
cmp
es
out
iret
push
sahf
xlat
add
adc
(bad)
adc
and
jnp
clc
in
add
add
call
mov
shl
mov
shl
aam
sbb
rcl
(bad)
pop
sar
mov
adc
mov
mov
(bad)
xor
test
movs
loopne
cmp
xor
inc
sbb
ss
or
mov
push
and
clc
sti
(bad)
(bad)
jmp
sub
jo
neg
lods
call
jnp
or
xchg
lods
add
(bad)
jg
(bad)
fstp
mov
push
sbb
push
inc
enter
mov
jnp
mov
(bad)
in
(bad)
jmp
sbb
mov
jne
pop
out
xchg
stc
add
jb
push
subps
sbb
lock
push
cli
mov
out
jno
idiv
arpl
cmp
pop
push
fdiv
into
cmp
add
test
and
loopne
(bad)
jmp
and
jmp
jbe
pop
mov
mov
mov
or
(bad)
(bad)
mov
jmp
jg
mov
cmp
mov
xor
(bad)
in
aaa
ds
clc
xchg
and
or
adc
lods
(bad)
jg
push
mov
fidiv
data16
xor
push
and
jb
sahf
jbe
xor
es
jge
cmp
sbb
loop
jmp
add
(bad)
(bad)
inc
sbb
iret
xor
push
mov
dec
cmp
jmp
sbb
(bad)
xchg
(bad)
push
cmp
(bad)
fadd
mov
xor
out
ds
mov
(bad)
mov
call
(bad)
xor
adc
aam
dec
mov
and
je
jne
ret
into
fidivr
jp
push
imul
nop
mov
dec
(bad)
jae
xlat
mov
les
dec
ins
(bad)
mov
repnz
pop
lods
mov
jo
and
cmp
(bad)
(bad)
push
idiv
aad
adc
or
(bad)
dec
cmc
popa
stc
push
push
fisubr
sar
jmp
lods
lods
mov
es
std
sub
inc
cmp
iret
push
cld
out
sub
mov
sbb
mov
jcxz
(bad)
jmp
pushf
jnp
sti
test
sahf
mov
jno
adc
sbb
clc
(bad)
call
xchg
xchg
icebp
shl
lds
mov
mov
movs
jns
sub
(bad)
(bad)
jmp
or
and
xor
sbb
and
bound
adc
jmp
out
and
mov
inc
mov
adc
sbb
movs
mov
shr
add
rcr
xor
or
js
push
sbb
mov
out
loope
add
xor
push
clc
add
pop
and
es
fs
push
adc
inc
out
pop
inc
sub
jmp
jnp
xchg
mov
mov
sbb
push
cmp
sbb
sbb
jge
hlt
push
icebp
adc
pop
mov
sahf
mov
(bad)
mov
mov
pop
int3
jb
xchg
clc
fst
ror
jmp
lds
(bad)
xlat
test
jp
outs
mov
hlt
(bad)
(bad)
(bad)
call
adc
sub
xchg
sar
sub
dec
adc
out
mov
push
ds
sar
(bad)
(bad)
(bad)
jge
jge
sub
dec
pop
sti
inc
inc
sbb
lods
mov
(bad)
cmp
ficomp
sbb
(bad)
(bad)
call
popa
hlt
pushf
jp
aas
inc
mov
mov
inc
fwait
inc
mov
or
adc
xchg
(bad)
sub
ret
pushf
pop
mov
adc
dec
and
fsubr
pop
test
cmps
sbb
jmp
mov
pop
iret
sub
lods
jmp
out
scas
and
aaa
dec
sahf
(bad)
pop
add
clc
dec
sbb
cmp
xchg
dec
cmp
xchg
out
int
push
sar
call
ja
aam
mov
and
out
mov
call
ins
call
xor
xchg
data16
jecxz
mov
not
(bad)
push
cld
enter
jnp
shr
mov
mov
push
(bad)
(bad)
jmp
sbb
push
(bad)
ret
dec
pop
nop
imul
enter
(bad)
data16
push
stc
jg
dec
inc
stos
(bad)
adc
sbb
stc
fidivr
(bad)
mov
test
or
retf
dec
inc
sbb
dec
cmp
fwait
pop
std
lock
(bad)
(bad)
jmp
adc
mov
mov
mov
stos
out
lods
pop
dec
cmp
dec
xlat
ret
(bad)
(bad)
(bad)
(bad)
call
mov
ins
(bad)
or
pop
outs
add
or
inc
mov
xchg
ja
arpl
mov
mov
(bad)
cmp
(bad)
fild
mov
dec
and
test
xchg
jno
add
cld
(bad)
aas
mov
into
nop
aad
imul
cmp
adc
add
(bad)
loope
(bad)
(bad)
fnstsw
jmp
jbe
cmp
cld
mov
mov
jl
out
mov
test
push
pop
jnp
(bad)
jbe
mov
and
cmps
jno
jmp
xchg
push
jecxz
pop
xchg
(bad)
jecxz
(bad)
mov
pop
loopne
js
and
cmp
mov
mov
pop
lock
sub
pop
in
add
jo
test
lods
int3
adc
pop
jmp
push
adc
fiadd
xchg
ror
inc
pop
push
and
(bad)
(bad)
jg
iret
push
adc
mov
fnsave
pop
push
mov
fbld
push
sahf
shl
mov
(bad)
(bad)
(bad)
mov
in
xor
sahf
cmps
sbb
out
fistp
(bad)
mov
lods
lock
(bad)
(bad)
mov
cs
arpl
pop
outs
popf
mov
and
fbstp
(bad)
(bad)
(bad)
push
xlat
(bad)
push
add
inc
jecxz
jb
add
lods
arpl
sub
aas
(bad)
(bad)
(bad)
(bad)
jp
xchg
outs
scas
inc
mov
bt
jns
loop
int
or
stos
scas
mov
mov
sbb
inc
fidiv
mov
addr16
mov
(bad)
int3
sbb
(bad)
(bad)
push
lods
xor
mov
clc
jecxz
sbb
sar
loop
hlt
addr16
(bad)
jl
(bad)
(bad)
call
mov
fsubr
fs
cmps
inc
add
add
push
hlt
jno
pop
xchg
clc
shl
test
cmc
sti
outs
jns
or
outs
xor
(bad)
(bad)
call
scas
test
sub
push
adc
sbb
or
or
pop
stos
jg
push
add
fcomp
sti
jno
xchg
pop
(bad)
(bad)
out
cli
jne
data16
inc
into
in
outs
addr16
pushf
gs
jo
mov
mov
sub
(bad)
push
dec
ss
int
pop
cmp
test
pop
pop
(bad)
jg
call
rcr
add
pop
xchg
or
jbe
inc
push
imul
das
clc
(bad)
dec
sahf
idiv
xchg
fdivr
pop
or
jmp
or
call
std
out
or
shr
xchg
cmp
or
adc
(bad)
sahf
rcl
mov
idiv
sar
(bad)
jge
sbb
movs
sti
mov
mov
imul
adc
cmp
cmp
and
fild
div
dec
or
outs
push
stc
lock
add
inc
jno
call
xchg
arpl
sub
pop
cmp
pop
pushf
cmp
int
(bad)
in
inc
popa
(bad)
jo
inc
sub
test
inc
das
sub
loopne
push
fisttp
jb
(bad)
jecxz
clc
xchg
out
fdivr
mov
pop
sub
sbb
mov
(bad)
cmp
pop
or
push
ins
repz
adc
lahf
pop
fdiv
(bad)
dec
fprem
jae
arpl
test
movs
cmp
lock
(bad)
(bad)
mov
fldenv
popa
push
push
and
pop
inc
add
icebp
push
add
xlat
cld
movs
jne
xor
scas
dec
adc
and
ror
aas
jb
xlat
add
add
out
call
push
sbb
das
je
mov
and
aam
clc
or
mov
int
mov
pinsrw
mov
jge
sahf
test
and
aam
and
xor
adc
jno
popf
rsm
test
outs
add
fistp
(bad)
in
push
loope
and
or
jp
jbe
scas
rcl
into
adc
jns
add
adc
shl
or
dec
adc
out
mov
push
push
or
(bad)
mov
push
push
in
sar
push
cmp
nop
cld
lods
lock
jmp
push
cwde
cmp
stc
add
imul
scas
push
rcl
mov
popf
xchg
imul
sbb
push
push
cmp
push
scas
out
(bad)
cmp
ins
pop
lock
sbb
fsubr
xchg
pop
push
xchg
sbb
call
jmp
mov
jecxz
nop
movs
fwait
icebp
cs
(bad)
mov
aaa
rcr
pop
mov
addr16
mov
inc
xlat
mov
das
clc
(bad)
(bad)
xchg
mov
movs
or
pop
into
(bad)
arpl
imul
aad
(bad)
(bad)
(bad)
push
cli
jbe
fld
sbb
neg
fmul
loop
aaa
sub
call
ja
imul
fs
arpl
add
lock
(bad)
(bad)
(bad)
call
sbb
(bad)
and
sar
repnz
sbb
xchg
mov
sbb
scas
dec
push
pop
cli
mov
pop
cli
dec
cmp
pop
lods
and
dec
out
jb
jg
fcom
loopne
leave
mov
repz
gs
into
jne
shl
(bad)
inc
fs
fs
jmp
inc
jb
pop
shl
scas
jne
add
jg
std
in
xchg
pop
fsub
xchg
pop
mov
xor
fs
mov
mov
push
or
xlat
pop
jmp
sahf
cmove
(bad)
(bad)
(bad)
(bad)
cmp
js
retf
jns
mov
or
mov
and
cmps
add
repz
(bad)
(bad)
sti
sbb
or
pop
scas
aaa
loop
movs
icebp
sbb
in
into
cmp
ret
and
cmp
aas
mov
jp
mov
mov
aam
mov
or
fwait
int3
das
(bad)
pop
mul
js
(bad)
cmc
mov
mov
jmp
mov
movs
mov
aam
leave
int
gs
enter
xchg
test
add
mov
sbb
test
dec
inc
inc
in
jbe
clc
(bad)
(bad)
jmp
cmp
and
aas
in
imul
adc
and
shl
(bad)
(bad)
std
jge
pop
ins
sub
and
fdiv
lods
mov
fldenv
cdq
popf
adc
(bad)
(bad)
sti
jmp
mov
dec
fucompp
mov
rol
setns
jmp
pop
pop
sar
jmp
cli
push
mov
cmp
push
dec
jecxz
dec
cmp
ltr
add
lods
sub
(bad)
(bad)
inc
dec
pop
imul
dec
mov
inc
sahf
fidiv
push
(bad)
retf
(bad)
out
cli
inc
jo
add
dec
je
and
jge
(bad)
fwait
xor
mov
cld
mov
mov
movs
(bad)
mov
push
and
jl
dec
ud0
(bad)
call
xlat
xor
jo
lock
ret
mov
popa
or
add
adc
ficomp
jb
fbstp
pop
sub
jp
pop
lods
nop
mov
(bad)
(bad)
(bad)
jmp
jmp
aam
pop
lds
(bad)
mov
lahf
ja
pusha
mov
aad
push
fisubr
mov
add
sub
(bad)
loop
les
sub
call
(bad)
jmp
pop
fwait
sbb
xchg
fimul
add
xchg
push
dec
arpl
sar
retf
and
jg
dec
mov
mov
std
cdq
mov
or
(bad)
(bad)
dec
sub
push
jecxz
(bad)
xchg
jl
fild
les
push
inc
jg
(bad)
jmp
xchg
xor
sbb
xchg
arpl
adc
cmp
jle
(bad)
out
cli
inc
sbb
aam
(bad)
shr
mov
out
js
push
xor
clc
sti
adc
scas
(bad)
cmp
mov
cmp
(bad)
(bad)
mov
addr16
cld
sti
mov
cmp
mov
mov
sbb
mov
jmp
mov
sbb
lahf
xchg
cmp
(bad)
xlat
loop
add
pop
add
cmps
(bad)
xor
xlat
dec
add
ins
jge
cmp
xchg
stos
pop
mov
push
add
(bad)
inc
cdq
popa
cmps
push
aaa
push
push
dec
ins
mov
call
lods
pop
mov
(bad)
(bad)
call
xchg
push
mov
jmp
imul
adc
lea
test
push
mov
pop
lock
clc
and
jp
enter
lock
pusha
dec
jmp
or
push
xor
mov
addr16
sbb
add
stos
mov
mov
bound
js
mov
dec
add
fwait
(bad)
(bad)
dec
xlat
mov
hlt
aaa
dec
lahf
shl
out
mov
adc
adc
loop
adc
fs
ins
fidiv
cdq
push
fucomi
fst
jmp
cmps
les
(bad)
rcl
and
loop
jb
or
(bad)
(bad)
(bad)
(bad)
cmp
aad
and
stos
test
call
jns
arpl
cli
dec
(bad)
into
std
(bad)
(bad)
dec
aam
push
imul
bound
jg
scas
mov
arpl
xor
jmp
or
into
rcl
sub
push
mov
in
div
(bad)
(bad)
dec
sbb
fsubr
xor
aam
fwait
movs
data16
or
pop
fdiv
sbb
dec
arpl
push
push
sub
add
(bad)
(bad)
fnstsw
and
xor
add
ss
dec
inc
cmps
jmp
inc
inc
lea
clc
fs
or
pop
movs
or
jmp
mov
xor
gs
mov
(bad)
jmp
push
sahf
leave
pop
sub
push
mov
sub
xchg
push
mov
scas
jmp
cli
cmp
or
(bad)
(bad)
(bad)
jmp
call
sbb
mov
(bad)
imul
in
push
jns
xchg
test
xchg
call
std
dec
(bad)
jmp
mov
test
push
loop
or
test
xlat
cmc
out
sub
mov
jnp
into
sub
mov
stos
(bad)
jmp
xchg
(bad)
sbb
lods
xchg
add
into
fidivr
xor
and
jge
xor
js
repz
pop
out
sar
adc
fwait
loopne
mov
arpl
cmp
jmp
stc
cmp
(bad)
mov
outs
mov
call
jae
(bad)
jg
mov
(bad)
pusha
lock
out
or
mov
push
jmp
add
(bad)
fs
(bad)
mov
out
mov
cli
mov
inc
mov
clc
jg
(bad)
cdq
stos
jne
jg
hlt
xchg
(bad)
in
dec
jmp
xchg
les
sub
(bad)
inc
add
pop
lock
(bad)
les
mov
es
dec
pop
imul
jge
loope
dec
sahf
cmc
cmp
push
icebp
jnp
(bad)
xchg
pop
or
cld
test
adc
adc
push
call
push
repz
js
(bad)
(bad)
jmp
adc
dec
(bad)
mov
ret
fcmovnu
jb
repz
mov
jae
test
(bad)
jnp
add
ja
call
sbb
in
(bad)
jmp
cmp
jne
push
pop
fild
sar
fstp
sub
mov
jg
mov
retf
inc
arpl
daa
stos
add
jo
popf
mov
(bad)
(bad)
(bad)
push
fwait
shr
out
aas
mov
push
aad
(bad)
mov
pop
jbe
jmp
(bad)
pop
scas
mov
(bad)
(bad)
dec
dec
cmp
not
into
mov
cmc
repz
lods
rcl
add
clc
(bad)
jmp
pop
push
addr16
arpl
xchg
ret
mov
inc
scas
jne
cmp
xor
add
(bad)
(bad)
dec
and
mov
cmp
fidivr
sub
jne
push
mov
jp
inc
add
(bad)
cld
mov
xlat
jl
lahf
stc
push
mov
inc
clc
test
adc
(bad)
jmp
pop
pop
or
mov
(bad)
(bad)
scas
pop
addr16
(bad)
jmp
(bad)
jle
jbe
add
mov
xchg
jae
add
int
jb
fld
stos
(bad)
(bad)
call
adc
cmp
push
fisttp
test
ins
pop
add
add
pop
mov
adc
jl
imul
lods
push
iret
arpl
stos
push
push
les
sar
add
mov
into
ret
call
addr16
sub
mov
fwait
inc
sbb
xchg
xor
pop
adc
jmp
xchg
lods
push
iret
loop
add
or
repz
xor
(bad)
dec
fidiv
sahf
popa
mov
adc
cld
shr
nop
data16
mov
pop
adc
pop
mov
xchg
outs
ja
fs
(bad)
in
cwde
not
hlt
pop
inc
sub
out
add
pop
or
(bad)
call
xchg
arpl
shl
out
test
pop
dec
and
neg
jae
fs
push
fwait
pop
add
push
(bad)
mov
mov
les
or
or
push
mov
(bad)
jp
dec
mov
enter
movs
imul
inc
out
fstp
mov
(bad)
(bad)
fcomip
sub
sub
icebp
dec
inc
cmc
mov
fcmove
aad
xchg
idiv
jge
in
add
shl
inc
inc
sub
bound
loop
inc
popf
or
mov
or
jl
hlt
jb
(bad)
(bad)
jmp
stos
and
mov
cs
jp
pop
sbb
movs
inc
ds
das
or
(bad)
push
loope
sar
loopne
or
inc
mov
cmp
retf
sbb
inc
loop
mov
mov
ffree
sub
mov
cmp
(bad)
mov
lahf
movs
js
add
out
mov
mov
mov
cmp
(bad)
sbb
push
sar
sahf
pop
push
std
jg
mov
dec
rcl
jg
pop
cmp
pop
loop
pusha
(bad)
(bad)
jg
and
test
aas
jne
mov
mov
pushw
pop
ja
jg
jmp
cmc
sbb
inc
(bad)
inc
and
(bad)
in
mov
es
(bad)
inc
fdivr
retf
or
sub
ds
fisubr
movmskps
(bad)
jg
sub
outs
inc
cmp
jmp
and
js
and
out
cli
jg
outs
or
xchg
pop
push
inc
dec
aas
jo
outs
push
cli
mov
sub
in
pop
push
pusha
lea
sahf
xchg
(bad)
(bad)
out
cli
int3
sysexit
mov
mov
and
scas
stc
ficom
iret
sub
inc
push
cmpps
mov
lods
mov
ret
pop
push
and
xchg
xchg
fmul
(bad)
mov
ror
loopne
inc
in
sub
add
pop
clc
hlt
jmp
call
popf
stos
mov
ins
adc
jge
in
outs
push
cli
pop
dec
pop
dec
lock
pop
ret
stos
lds
add
adc
call
sub
imul
add
pop
repnz
(bad)
mov
dec
aad
mov
adc
(bad)
mov
cmp
sbb
pop
inc
in
sar
pop
and
fcmovb
out
push
and
or
out
clc
(bad)
mov
jae
ja
fcom
in
shl
and
sub
inc
retf
pop
lock
call
adc
dec
sar
fstp
leave
mov
adc
adc
into
fadd
sbb
add
int3
add
(bad)
(bad)
call
jno
mov
aam
pop
adc
ja
aas
icebp
call
xchg
mov
cld
(bad)
in
and
sahf
push
or
adc
rol
dec
mov
(bad)
pop
cli
pop
sbb
mov
cmp
dec
in
jno
pop
dec
xchg
xor
(bad)
(bad)
call
sub
cld
fisubr
idiv
icebp
imul
scas
out
outs
dec
outs
pop
cwde
push
lea
aas
sar
(bad)
(bad)
call
ret
ins
fs
pop
jnp
rcl
shl
mov
push
lea
inc
xchg
nop
inc
sbb
(bad)
push
test
jae
jge
sbb
and
cli
dec
imul
cmp
ret
stos
(bad)
cmp
push
dec
cdq
lods
mov
pop
mov
mov
xor
sbb
(bad)
push
les
out
mov
imul
jne
mov
mov
int
or
mov
in
inc
(bad)
(bad)
dec
jno
mov
(bad)
xlat
cmps
lds
call
inc
mov
(bad)
(bad)
(bad)
inc
add
mov
sbb
mov
(bad)
fsubrp
push
idiv
clc
sbb
ins
stos
aam
sub
jmp
mov
cmp
inc
xor
aam
rol
dec
dec
ja
push
inc
sub
cld
(bad)
(bad)
(bad)
std
push
lods
das
inc
push
(bad)
pop
loope
pop
dec
and
push
cmps
xchg
xchg
hlt
jmp
popf
sub
movs
imul
ja
shl
push
add
or
cmp
aas
push
test
cld
jmp
fild
lds
sbb
hlt
mov
(bad)
jg
pop
int
stos
addr16
loope
imul
pop
movs
cmp
and
(bad)
jmp
push
cld
movs
fcmovbe
cld
mov
retfw
fwait
xchg
mov
hlt
(bad)
call
cmp
shl
pushf
push
sub
sti
jp
lock
(bad)
jmp
pop
int3
ins
jbe
or
add
dec
xlat
sbb
lock
mov
ins
arpl
xlat
add
div
adc
(bad)
shr
imul
mov
mov
jb
jmp
test
or
jbe
mov
sbb
out
jmp
jmp
sar
dec
addr16
outs
xor
(bad)
sbb
inc
jmp
pop
aad
jmp
jmp
mov
call
movs
xchg
mov
lahf
push
add
jb
push
(bad)
call
cld
push
lods
fstp
mov
cs
ins
fld
sahf
cmp
pop
jo
and
pop
sahf
(bad)
cmp
xlat
out
(bad)
(bad)
(bad)
inc
les
and
sti
lods
sbb
pop
sti
call
mov
ja
lock
add
or
cli
(bad)
jmp
xchg
add
mov
pop
mov
dec
jnp
les
test
stos
jl
adc
add
aaa
rcr
mov
xchg
fiadd
mov
mov
popa
xor
(bad)
mov
mov
push
iret
mov
mov
icebp
or
cmp
add
aaa
lods
stos
inc
scas
mov
call
(bad)
inc
loope
call
adc
shr
out
add
pushf
pop
hlt
jg
sbb
leave
lock
jmp
pusha
pop
dec
fistp
push
mov
(bad)
icebp
add
mov
stos
cmp
bound
loop
inc
cmp
cmp
mov
(bad)
(bad)
inc
mov
fcom
(bad)
add
and
loop
nop
push
push
imul
adc
mov
inc
add
or
jae
cmps
mov
add
in
dec
aas
push
js
cli
aas
cmp
dec
xchg
dec
scas
ins
cmp
xlat
enter
dec
pop
mov
jae
call
jmp
and
ret
test
lock
xlat
int3
int
js
test
popa
mov
stc
add
(bad)
(bad)
jmp
enter
sub
fwait
cmp
mov
out
int3
pop
imul
push
adc
scas
clc
scas
les
out
icebp
sbb
rol
jne
fwait
popa
xchg
push
call
push
pop
add
push
outs
cmp
and
pop
(bad)
pop
dec
ret
mov
(bad)
inc
cld
stos
imul
lahf
and
stos
mov
or
retf
jmp
and
push
sbb
xor
push
sbb
out
scas
call
cld
das
and
pop
inc
jb
inc
jle
lahf
in
push
sbb
xor
(bad)
inc
cld
movs
arpl
pop
rcl
iret
lods
mov
cmp
pop
int
out
idiv
aam
inc
arpl
push
add
fsubr
mov
xor
dec
mov
cmp
test
sub
xor
xlat
mov
xor
cmp
(bad)
jmp
das
cmc
inc
xor
mov
aas
sbb
int3
jmp
inc
mov
fwait
test
push
xor
push
mov
inc
repz
dec
mov
mov
(bad)
(bad)
jmp
cmp
jno
push
aaa
bound
sbb
add
and
jmp
(bad)
mov
sbb
jl
sahf
or
sahf
pop
cld
(bad)
inc
mov
call
retf
imul
jmp
arpl
(bad)
adc
fnsave
or
push
xor
lods
cmp
push
pushf
out
mov
into
xchg
jg
(bad)
(bad)
(bad)
lahf
fnstsw
(bad)
dec
sub
(bad)
ficomp
xor
adc
push
les
add
xchg
xchg
(bad)
(bad)
push
sub
fist
dec
xchg
out
cwde
adc
cdq
stos
jb
call
ss
movs
out
mov
add
pop
inc
js
pop
call
aad
add
(bad)
dec
sbb
mov
hlt
mov
shr
inc
js
cmp
loope
jmp
sbb
push
cmp
retf
icebp
pushf
inc
gs
call
cld
jmp
repnz
inc
or
or
ins
loop
push
xchg
dec
jmp
pop
cs
fsubrp
iret
dec
fild
dec
xchg
mov
sub
sbb
xor
jb
jo
add
mov
mov
sub
xchg
dec
call
inc
fstp
les
jle
mov
rcl
or
xchg
pop
pop
lods
add
(bad)
cmps
pop
jmp
(bad)
push
leave
call
scas
es
mov
mov
jae
call
sbb
mov
fcomp
sub
out
(bad)
inc
push
pop
aas
sub
sbb
mov
int3
push
jp
(bad)
(bad)
(bad)
(bad)
mov
add
cwde
push
scas
push
mov
sbb
ss
mov
jl
jmp
outs
cli
push
cmps
sti
popf
xchg
cmp
mov
dec
pop
mov
pusha
cmp
inc
popf
call
fldcw
mov
jmp
mov
ret
lods
and
sub
add
call
jmp
iret
push
sub
xlat
dec
pop
adc
xor
outs
dec
push
inc
in
pushf
lods
mov
cmc
mov
jmp
mov
push
jae
pop
repz
jmp
sub
into
or
inc
jge
imul
mov
jne
xor
(bad)
call
mov
push
and
xchg
xor
push
in
inc
sbb
fdiv
mov
test
xchg
idiv
data16
or
add
mov
(bad)
dec
add
ret
pop
xor
pop
fdivr
fs
add
(bad)
cmp
or
mov
jmp
or
xchg
fwait
retf
dec
add
jmp
ret
pop
jmp
mov
call
hlt
add
push
adc
xor
dec
or
mov
pusha
sti
sbb
inc
pusha
add
movq
in
imul
push
sar
pusha
xor
ret
pop
ins
mov
arpl
cmc
shl
(bad)
jg
loopne
xchg
adc
adc
sub
or
cmp
scas
ror
hlt
xor
lock
cmp
push
and
sub
cli
add
pop
pushf
inc
(bad)
jns
shl
jmp
adc
(bad)
(bad)
jmp
xchg
adc
outs
std
ret
mov
fdiv
jp
mov
dec
jmp
mov
mov
outs
fistp
mov
mov
jo
add
psllq
(bad)
(bad)
call
punpckhbw
loop
lods
fstp
jmp
mov
jecxz
std
pop
mov
push
(bad)
(bad)
jg
data16
stos
xor
mov
lods
popa
imul
sbb
pop
jle
mov
sub
(bad)
sub
dec
std
lea
jmp
(bad)
(bad)
out
inc
sub
pop
out
push
jle
aaa
and
test
inc
outs
ja
mov
jle
lock
xchg
xchg
ss
add
push
nop
shl
stos
jno
(bad)
(bad)
cmp
pop
sub
cmps
cmps
mov
jnp
jmp
(bad)
fcomip
stos
mov
scas
mov
sub
xchg
cmps
lock
in
shl
(bad)
cli
sbb
(bad)
jg
or
out
fs
xchg
sahf
(bad)
(bad)
(bad)
(bad)
out
dec
mov
fisubr
mov
mov
xchg
movs
lods
sub
xchg
and
jg
jg
push
ficomp
push
add
rol
and
xor
(bad)
mov
pushf
fidivr
or
pop
cmc
sbb
pop
sub
sar
aam
outs
(bad)
(bad)
(bad)
jmp
lds
(bad)
rcl
mov
loop
movs
adc
into
aas
aaa
xlat
aad
jae
cmc
(bad)
jg
and
clc
fdivr
adc
icebp
ja
fsub
jb
in
inc
fmul
dec
inc
inc
push
in
iret
movs
jbe
push
jnp
hlt
jnp
jnp
clc
in
(bad)
mov
mov
mov
out
push
cld
jmp
test
sbb
or
lock
push
mov
js
xor
ins
or
cmp
fsubr
jmp
(bad)
ins
data16
lea
data16
add
(bad)
(bad)
push
xchg
nop
sbb
xchg
aas
jmp
ror
jmp
out
push
sar
pop
pusha
inc
jmp
xchg
(bad)
jmp
or
push
inc
movs
retf
int3
cmc
shr
(bad)
xor
ficomp
cmc
mov
sbb
fiadd
(bad)
jg
call
add
jbe
cmps
dec
mov
std
mov
(bad)
jg
(bad)
mov
pop
js
add
packssdw
mov
out
dec
and
inc
mov
mov
and
fdivr
(bad)
(bad)
push
sub
xchg
stos
les
cli
lock
mov
push
cli
sbb
in
mov
add
clc
dec
fist
test
(bad)
fnstenv
mov
sub
push
push
mov
sub
out
(bad)
cmp
int3
lock
(bad)
inc
cld
xchg
clc
aas
jp
xchg
add
add
cmp
dec
cmp
dec
mov
fmul
jmp
xor
mov
ds
mov
aas
std
(bad)
call
jns
xor
mov
movs
(bad)
int3
outs
jne
pop
loop
cmps
dec
(bad)
(bad)
(bad)
jmp
cmc
pop
cli
ficom
fisub
mov
sti
in
sti
ins
push
test
push
loopne
bnd
shl
add
xchg
call
int3
push
cli
jl
pop
dec
idiv
(bad)
jmp
and
sahf
xchg
into
add
js
lods
iret
mov
js
pop
pop
push
(bad)
(bad)
(bad)
jg
lods
es
movs
fsubr
into
add
out
cli
mov
inc
pop
sti
loopne
loopne
jmp
mov
pop
cli
jo
mov
pushf
push
mov
(bad)
(bad)
call
sahf
pop
cmp
xchg
aaa
and
pop
ins
loope
iret
mov
gs
inc
call
cs
bound
add
xchg
lock
(bad)
jmp
rol
or
mov
sub
shr
xlat
mov
dec
fs
sbb
out
xor
fmul
scas
add
iret
cld
(bad)
(bad)
jmp
iret
stc
mov
adc
jnp
nop
inc
imul
imul
(bad)
and
ja
imul
(bad)
(bad)
inc
push
inc
xchg
test
xor
and
test
push
sahf
or
fidivr
pop
fld
ja
add
pop
lods
loopne
pop
xor
cld
(bad)
cld
(bad)
js
iret
fnstenv
mov
les
mov
pop
and
adc
lods
cmp
sub
inc
dec
and
jae
das
ret
call
in
imul
mov
jl
sub
xchg
xchg
mov
inc
mov
addr16
or
(bad)
dec
push
xor
dec
retf
mov
jbe
push
adc
cmp
rol
js
jecxz
jae
cmp
mov
ffree
lods
dec
jo
inc
dec
sub
add
arpl
or
loopne
mov
dec
push
icebp
push
push
out
mov
mov
repz
dec
add
jmp
inc
int3
adc
jno
lods
jne
dec
fsubr
aaa
mov
or
loop
pop
icebp
and
into
je
(bad)
mov
mov
pop
cld
(bad)
mov
ret
sub
cmp
cmp
push
xor
fiadd
(bad)
ret
xor
mov
xor
jmp
mov
sbb
imul
fcomp
mov
dec
xor
(bad)
jmp
nop
les
loopne
sbb
ret
(bad)
(bad)
mov
shl
in
mov
dec
dec
push
jecxz
pop
sbb
jmp
mov
jmp
clc
inc
and
adc
mov
add
call
cld
add
add
sbb
out
in
(bad)
jmp
fadd
cmp
mov
call
sbb
test
and
(bad)
call
cld
out
ins
ret
or
cdq
repz
addr16
mov
arpl
in
xchg
sbb
int
scas
cs
push
sbb
call
add
jmp
(bad)
repnz
jg
les
cdq
lods
fiadd
lahf
jns
iret
in
mov
(bad)
js
or
aas
sbb
mov
inc
push
arpl
(bad)
call
mov
imul
pop
into
rcl
or
(bad)
jns
outs
sbb
mov
cmp
jb
sub
call
add
xchg
ins
jp
mov
fbld
(bad)
dec
jge
xchg
add
(bad)
(bad)
inc
fs
mov
adc
in
dec
jl
mov
fst
jmp
jo
mov
scas
ret
xchg
add
dec
pop
xchg
inc
imul
je
inc
ja
push
or
cmp
mov
(bad)
(bad)
mov
dec
pop
push
lea
xchg
scas
sub
(bad)
shr
dec
out
sbb
test
int3
enter
repz
imul
cs
ret
js
in
sahf
push
retf
cmp
ret
out
mov
in
xlat
mov
stos
loope
sbb
lock
repnz
not
in
pop
icebp
jge
mov
jns
(bad)
fistp
inc
mov
push
add
mov
and
xchg
cdq
mov
shr
aas
adc
mov
jnp
push
int
push
(bad)
jae
mov
(bad)
(bad)
(bad)
dec
inc
mov
or
test
fidiv
sti
neg
arpl
scas
cli
rol
xchg
mov
sbb
pushf
pop
sub
sub
ficomp
pop
push
cld
push
xchg
ds
daa
push
add
rcl
push
sbb
or
mov
(bad)
std
(bad)
fdivp
ror
add
xor
add
adc
std
sbb
and
pop
inc
ja
jno
pop
adc
adc
cmc
jg
es
jbe
push
xchg
lock
cmps
cli
call
inc
pop
movs
push
pusha
xchg
mov
call
mov
or
jbe
and
adc
push
std
call
push
add
xor
(bad)
jmp
aaa
mov
adc
repz
movs
push
sbb
jns
mov
mov
(bad)
aas
(bad)
je
rol
jle
and
push
rcr
aaa
add
cld
arpl
xor
ss
test
xlat
lock
jmp
jo
sar
push
mov
dec
mov
sbb
call
int
clc
(bad)
mov
int3
jbe
call
cwde
add
(bad)
jmp
adc
xor
sub
movs
sahf
inc
jmp
mov
outs
dec
mov
aaa
and
stos
ins
fdiv
lds
(bad)
jg
call
call
and
push
out
or
push
(bad)
(bad)
jg
popf
sbb
mov
and
xor
inc
dec
dec
or
fstp
xor
dec
sbb
and
mov
pop
loopne
sub
adc
call
fild
pop
loopne
(bad)
(bad)
call
push
lock
inc
arpl
frstor
cmps
hlt
pop
retf
mov
mov
cwde
leave
mov
mov
stc
or
xor
iret
add
(bad)
(bad)
jmp
and
cmp
xor
or
inc
pusha
add
adc
in
sub
mov
cli
jmp
es
adc
add
ja
in
jge
xor
not
add
loopne
xchg
popa
inc
push
dec
scas
pop
ret
fst
pop
aam
gs
pop
pop
(bad)
jmp
pop
addr16
sbb
inc
mov
dec
push
and
push
ins
call
and
add
xor
cmp
add
mov
(bad)
jmp
pop
push
std
cmc
out
push
cmp
push
popf
arpl
jb
ds
cmp
inc
(bad)
(bad)
(bad)
fistp
mov
addr16
call
inc
out
inc
mov
call
inc
rcr
cmc
shl
jo
gs
pushf
xchg
lds
add
(bad)
jmp
adc
shr
mov
add
gs
jmp
into
jo
xchg
mov
xor
dec
cwde
sbb
ficomp
and
jle
and
sbb
xchg
lds
rcr
add
mov
js
inc
push
popa
ins
nop
push
jo
(bad)
jg
mov
retf
imul
popf
(bad)
mov
loop
sub
jg
mov
cmp
loopne
add
movs
xchg
jno
pop
mov
(bad)
jmp
jb
cmp
lods
jmp
ins
and
mov
jo
jmp
scas
add
inc
xlat
aas
mov
stos
jne
inc
xrelease
fcomp
and
ins
sar
jg
sub
mov
out
jle
scas
jmp
dec
add
pop
lock
mov
pop
les
sbb
daa
nop
mov
repz
pop
adc
or
jbe
(bad)
(bad)
call
imul
lods
sti
pusha
sub
mov
scas
popw
scas
out
(bad)
(bad)
mov
sbb
aad
nop
movs
or
ficom
or
sub
(bad)
fisub
pop
pop
sti
(bad)
(bad)
mov
mov
mov
mov
xor
cs
jnp
sahf
pop
dec
cmp
inc
les
dec
mov
js
scas
in
dec
call
(bad)
dec
pop
and
cmp
inc
push
out
add
push
mov
mov
mov
sbb
(bad)
repz
push
xor
push
add
pushf
add
bound
gs
jmp
pop
and
jmp
fcom
sar
(bad)
lods
ss
(bad)
call
or
mov
ror
jp
mov
(bad)
push
cmp
arpl
inc
cs
push
movs
lahf
cs
push
sbb
(bad)
call
mov
fs
bound
jge
(bad)
mov
(bad)
mov
data16
ins
cmp
cmc
jns
push
cwde
and
ret
(bad)
jmp
adc
jae
in
mov
test
lods
jle
call
xor
icebp
jns
aas
lods
jae
ret
cld
add
(bad)
mov
inc
leave
clc
or
adc
push
jl
addr16
mov
adc
sbb
sbb
inc
test
fdiv
clc
fistp
leave
push
push
dec
pop
iret
arpl
cld
inc
jae
repnz
jae
cmp
hlt
pop
pop
fcmovne
mov
(bad)
aas
jp
out
popa
inc
fs
(bad)
in
jne
mov
or
xor
(bad)
(bad)
aas
xchg
add
lods
and
in
mov
or
cmp
lea
loop
(bad)
(bad)
jg
hlt
sbb
sub
add
and
shl
xor
dec
int
mov
jmp
das
dec
add
enter
mov
jns
cmp
inc
(bad)
(bad)
(bad)
push
and
mov
and
mov
dec
or
sub
lea
out
pop
xor
addr16
(bad)
inc
loop
inc
xchg
sub
daa
xlat
es
xchg
fst
cmp
ret
mov
xchg
add
(bad)
js
les
(bad)
push
pushf
sar
hlt
mov
push
out
jno
dec
cmc
cmp
int
inc
imul
loopne
loopne
ds
xchg
jle
mov
sahf
and
pop
push
and
jl
inc
dec
cmp
lds
pop
jne
and
pop
mov
(bad)
call
or
jo
inc
mov
out
jb
mov
fidiv
sub
mov
or
adc
std
(bad)
inc
mov
mov
aad
push
lea
push
fidiv
inc
and
jecxz
or
jbe
shl
cmp
adc
cli
test
std
(bad)
cmp
dec
mov
xchg
(bad)
and
inc
call
(bad)
(bad)
call
push
mov
ficom
imul
ret
dec
pushf
(bad)
(bad)
(bad)
jmp
sbb
mov
cmps
sbb
in
push
out
(bad)
ds
ret
inc
and
pop
and
mov
jo
shr
icebp
inc
xchg
mov
pop
cmps
cmp
retf
mov
jle
(bad)
(bad)
(bad)
cmp
ins
ja
imul
xor
(bad)
jecxz
out
daa
jb
(bad)
aas
cld
call
sub
dec
leave
adc
cdq
xadd
xor
xchg
js
adc
lods
(bad)
cld
(bad)
(bad)
(bad)
in
imul
sbb
jne
inc
jns
mov
imul
(bad)
dec
call
inc
test
ficom
aaa
std
(bad)
(bad)
(bad)
(bad)
fs
add
out
clc
mov
nop
sbb
adc
(bad)
jmp
cld
sbb
sub
xor
iret
adc
and
inc
fcmovb
cmp
sbb
cmps
addr16
je
(bad)
jp
fmul
mov
outs
shl
(bad)
call
mov
sub
mov
jl
adc
shl
(bad)
jg
(bad)
(bad)
int3
and
cmp
aaa
mov
xor
pop
lods
ret
lods
hlt
mov
out
jb
cmp
mov
xor
and
fwait
bound
fdivr
pop
cld
push
ret
shr
sub
mov
adc
fcos
(bad)
(bad)
dec
jns
ss
sbb
popa
xor
outs
sbb
add
pop
xor
mov
inc
outs
pop
lock
and
test
popf
sub
pop
or
scas
or
(bad)
jmp
and
adc
inc
movs
nop
mov
inc
mov
or
(bad)
inc
fnstenv
cmp
pop
shl
push
in
ffree
(bad)
stc
and
retf
pop
or
mov
sbb
mov
mov
or
jb
into
call
mov
das
fidivr
mov
imul
and
sahf
es
dec
movs
fs
mov
pop
xchg
ror
jp
pushf
lods
jne
xor
push
mov
push
(bad)
(bad)
(bad)
jg
retf
cld
cdq
arpl
xor
xlat
cmps
in
jb
xchg
add
cmps
mov
lods
dec
test
mov
outs
sbb
sar
jo
out
iret
dec
add
pop
loopne
pop
hlt
fs
sar
imul
add
(bad)
(bad)
call
xchg
push
mov
sbb
push
imul
ss
cmp
jbe
movs
(bad)
outs
das
(bad)
(bad)
(bad)
call
lods
fisub
je
cli
or
mov
add
ret
cmc
aad
int
xor
jg
add
(bad)
loopne
lods
dec
ror
adc
adc
out
jp
mov
mov
aas
out
stos
int
xor
test
push
idiv
(bad)
jg
mov
outs
mov
and
retf
cld
push
inc
pop
mov
push
outs
in
fcomip
sar
dec
stos
jae
adc
clc
aaa
ins
cmps
adc
add
xchg
jle
pushf
add
fisttp
lock
aaa
enter
mov
sub
aad
je
adc
(bad)
call
jl
(bad)
(bad)
(bad)
into
ret
iret
and
test
call
iret
mov
lods
loope
retf
lds
inc
and
xor
xor
(bad)
mov
inc
or
inc
call
jmp
pop
nop
ins
xlat
(bad)
addr16
cmp
cmp
fild
pop
sbb
stos
fistp
in
repz
aad
add
add
or
inc
sbb
and
jae
add
xchg
or
and
adc
add
and
xchg
add
sub
add
aaa
retf
std
dec
pop
pushf
xchg
clc
or
adc
in
dec
mov
jo
push
or
mov
mov
sbb
mov
jg
jmp
mov
pop
rcr
mov
mov
sbb
fisub
mov
sbb
(bad)
call
std
std
test
call
lods
mov
(bad)
jmp
dec
mov
jo
scas
inc
mov
xchg
arpl
popa
add
sbb
add
daa
mov
xchg
cmp
shl
dec
jmp
inc
bound
pop
std
pop
mov
xchg
retf
stc
cld
xchg
jae
add
xor
xchg
loop
loop
dec
mov
xchg
clc
(bad)
adc
dec
(bad)
mov
mov
sub
dec
or
fisub
push
add
cmp
jmp
sbb
loopne
int
(bad)
ror
xchg
ror
push
xchg
jb
stos
adc
mov
mov
sar
lock
add
xor
xchg
push
adc
xor
pop
mov
ins
shr
adc
adc
adc
push
jl
cmp
xor
and
sbb
pusha
or
call
push
scas
popf
mov
mov
test
leave
sahf
mov
inc
fucomip
hlt
add
xchg
jecxz
push
inc
fstp
neg
jnp
push
fisub
inc
adc
push
jo
sti
(bad)
jnp
(bad)
mov
shl
fstp
jb
mov
push
inc
div
pop
mov
mov
int
call
push
mov
aam
test
add
pushf
jo
mov
and
mov
sub
in
inc
jg
pop
sub
test
cmp
fbld
(bad)
(bad)
pop
xor
and
hlt
js
xlat
outs
cmps
aam
fimul
es
out
jg
and
jp
(bad)
sahf
js
xchg
jl
movs
xor
push
push
jg
(bad)
idiv
retf
lea
dec
imul
pop
adc
mov
(bad)
call
and
dec
mov
scas
adc
shl
xchg
(bad)
stos
sub
mov
dec
(bad)
jg
aad
lds
std
and
loop
or
fisttp
(bad)
inc
sar
outs
dec
sbb
dec
push
inc
xchg
(bad)
jle
lock
dec
clc
push
sub
out
cmps
jg
fistp
lods
aam
(bad)
call
inc
and
and
fdiv
add
dec
sbb
pop
and
pusha
inc
xchg
movs
int3
xchg
movs
jle
mov
sbb
and
push
sbb
add
in
sbb
fnstenv
pop
add
dec
fucomip
mov
add
les
arpl
jp
push
mov
xor
in
aas
dec
sbb
xor
loopne
mov
repnz
ins
cdq
jae
ins
rol
leave
cs
pop
push
sub
jge
ja
mov
and
pushf
xchg
ins
mov
test
xchg
jae
shl
in
out
xchg
mov
xor
add
lods
jbe
out
push
add
lds
push
in
add
inc
pop
jg
sti
jmp
sub
dec
inc
dec
inc
scas
inc
pusha
add
imul
(bad)
(bad)
fcos
pop
push
inc
jne
je
outs
or
jne
arpl
dec
gs
jno
push
sti
(bad)
jmp
add
push
imul
imul
popa
jo
imul
or
aas
add
add
add
add
push
dec
not
cmp
clc
dec
jb
gs
pop
dec
outs
inc
ins
imul
mov
or
push
popa
jbe
repz
add
clc
pop
pusha
cmc
and
add
add
add
inc
add
mov
mov
test
gs
cmc
jle
push
jb
add
push
fdivr
xor
lock
jmp
(bad)
jmp
jb
addr16
jae
inc
popa
jb
pop
pop
ror
inc
outs
ja
ins
outs
popa
fs
call
adc
sub
sbb
push
mov
outs
outs
and
repz
scas
cdq
into
in
jmp
mov
jbe
xor
mov
sub
cmp
push
pop
push
bound
jb
(bad)
push
pusha
nop
stos
mov
dec
ins
popa
addr16
or
inc
popa
sbb
push
dec
and
push
jno
add
inc
pusha
das
push
jp
or
ja
shl
pop
mov
je
sbb
mov
mov
dec
data16
add
and
ins
add
aas
in
imul
and
add
fild
xchg
push
rcl
sbb
jp
outs
or
or
push
mov
adc
das
pop
jno
xor
push
inc
xor
cmp
ror
adc
loop
arpl
imul
(bad)
jae
or
imul
jne
push
je
in
sar
add
jae
imul
je
and
or
add
or
popa
pop
add
mov
dec
or
inc
je
call
adc
shl
cmp
das
mov
adc
cs
push
pop
xchg
std
inc
dec
inc
inc
inc
inc
push
dec
push
push
inc
push
push
inc
push
or
xchg
outs
fs
push
gs
or
or
cmc
or
dec
popa
cli
push
mov
push
xor
push
out
push
dec
sbb
add
ins
fs
fsub
popf
xchg
push
outs
mov
popf
sbb
xchg
pop
push
jo
push
arpl
xor
sar
xor
div
pop
inc
int3
mov
inc
imul
mov
lock
push
mov
adc
jae
pop
mov
add
add
mov
ins
rol
cmp
cmps
inc
inc
xor
add
addr16
adc
fdiv
add
push
sub
and
fs
pop
and
dec
ds
mov
ins
(bad)
mov
or
rcr
xor
push
dec
mov
or
bound
mov
shl
and
adc
popa
dec
add
add
js
inc
add
adc
and
dec
adc
aas
cmp
push
inc
adc
out
cmp
rcr
shl
and
aas
sar
pop
mov
or
pusha
and
add
mov
js
add
stos
jl
pop
inc
sti
cmc
rcl
mov
ds
inc
outs
jmp
push
cmc
rol
push
add
push
scas
sub
add
add
leave
ss
pop
cmc
pop
ins
push
xchg
test
fadd
addr16
cmp
das
add
dec
sbb
ins
ss
rcr
xchg
cmp
xor
inc
int3
ins
dec
or
popa
imul
loop
rcl
fcmovbe
and
out
mov
cld
rol
and
adc
rol
into
mov
sar
push
sub
ret
fidiv
dec
(bad)
js
mov
(bad)
mov
mov
sub
fisttp
cmp
and
jnp
jge
mov
fdivr
pop
xor
fimul
inc
xor
pop
and
mov
out
repnz
pushf
fucom
mov
sbb
dec
data16
shl
fs
adc
fyl2xp1
dec
mov
sahf
adc
in
test
jo
leave
xor
xor
fwait
iret
sbb
sbb
in
or
cdq
lahf
xchg
shl
or
inc
stos
rol
add
jecxz
pop
push
in
pusha
add
mov
bound
inc
dec
mov
sahf
push
adc
mov
shl
ret
sbb
pop
movs
pop
mov
xor
add
or
xor
movs
inc
pop
or
ret
push
or
dec
cmc
add
or
fwait
dec
out
sysret
push
popa
ins
jge
outs
je
push
sub
inc
mov
popa
or
push
mov
push
jo
push
inc
dec
or
jbe
xor
jns
sub
add
add
les
pop
cmps
mov
cmp
test
or
fwait
int
movs
add
add
cmp
inc
and
or
sub
or
add
sbb
cmps
add
sub
pop
pop
push
add
arpl
push
adc
pop
jae
rcr
and
inc
sub
gs
mov
add
bound
test
push
pop
sbb
cmps
mov
test
push
pop
sbb
cmps
cmc
adc
pop
push
pop
sbb
sub
(bad)
add
pop
sbb
dec
push
pop
sbb
dec
dec
ret
fcom
add
pop
xlat
add
popa
fst
sbb
dec
xlat
add
adc
mov
pop
sbb
dec
dec
push
mov
imul
fld
dec
push
sbb
dec
mov
sub
sbb
adc
sbb
dec
push
sbb
or
aaa
not
adc
dec
fld
or
sub
js
sbb
dec
adc
mov
inc
dec
sbb
sub
add
pusha
imul
mov
add
add
dec
sbb
fild
xor
fsub
sbb
inc
dec
pop
dec
and
sbb
add
in
dec
adc
sbb
inc
aaa
add
mov
and
inc
add
imul
shl
fld
push
mov
ss
add
mov
(bad)
repz
sub
ins
ins
aaa
add
and
cmp
inc
add
inc
pusha
mov
add
add
pusha
pop
test
dec
cmp
add
(bad)
ins
cmp
mov
adc
aaa
add
sbb
add
inc
aaa
inc
push
push
add
sub
inc
ror
inc
inc
mov
and
mov
xor
mov
inc
dec
inc
xor
aaa
add
pop
or
add
mov
mov
nop
or
and
add
data16
icebp
or
aas
dec
dec
rcr
mov
icebp
ud2
and
test
add
repz
fs
aaa
inc
dec
test
sbb
ror
add
mov
shl
ror
inc
dec
lods
lods
and
sbb
add
and
aam
mov
adc
pusha
dec
sbb
popa
xor
dec
and
mov
dec
iret
pop
dec
or
mov
inc
mov
retf
inc
dec
dec
pop
xchg
and
sbb
nop
push
(bad)
fld
add
(bad)
mov
dec
aad
add
ins
les
sub
adc
rol
sbb
dec
retf
inc
ror
push
sub
imul
add
add
or
adc
aas
add
ror
pop
push
pusha
add
imul
push
sbb
add
inc
or
ins
sbb
dec
push
ins
push
adc
mov
mov
sbb
dec
add
push
sub
sbb
xor
adc
sbb
dec
push
imul
inc
ror
pop
fidiv
and
mov
adc
dec
fild
push
das
xor
dec
add
sbb
pop
mov
push
sub
arpl
add
and
sub
mov
jne
fild
add
dec
push
daa
sub
daa
dec
ins
add
loopne
pop
mov
fild
add
dec
push
and
add
mov
and
daa
and
lea
xchg
sbb
jne
add
sbb
and
inc
inc
and
and
add
sbb
and
add
and
push
pop
pop
xchg
push
sbb
mov
mov
dec
push
dec
fcmovnbe
push
sbb
sub
or
add
lahf
imul
add
add
dec
sbb
add
xor
sbb
pop
add
sub
sub
add
mov
pop
fisub
jbe
pop
add
movs
mov
test
fsub
cmps
neg
push
sub
and
pop
add
pusha
arpl
pop
and
xor
movs
sub
add
add
arpl
daa
and
ins
inc
nop
pop
xor
push
das
rol
ins
and
or
adc
mov
pop
and
adc
in
cmp
cs
sbb
inc
add
bound
add
xor
and
and
push
adc
rol
retf
inc
adc
sbb
sub
ins
dec
or
daa
cmp
cwde
add
add
inc
mov
mov
add
add
cmp
cmp
pop
inc
add
add
xor
dec
dec
jmp
fcmovnu
xchg
mov
das
xor
sub
or
pusha
add
pop
and
mov
push
sub
lea
sub
dec
ins
in
and
add
pop
sub
loope
outs
and
dec
sbb
add
push
ret
or
cmp
add
sub
sub
xchg
movs
movs
xchg
and
or
add
sub
sub
mov
loop
cmp
sub
add
sub
dec
test
add
lea
cmp
imul
add
ins
arpl
inc
add
mov
add
xor
outs
shl
shl
das
add
mov
sub
and
and
add
adc
mov
adc
cmp
ins
arpl
sub
sub
add
add
ins
ins
sub
daa
add
inc
adc
outs
mov
cmp
mov
inc
add
pusha
shl
lea
add
dec
pop
dec
dec
sbb
pop
ins
sbb
cmp
mov
sub
and
mov
daa
cmp
fsub
mov
add
push
push
dec
add
dec
dec
xor
or
push
adc
dec
push
mov
ror
cmp
cmp
dec
pop
or
dec
add
mov
cmp
sub
dec
add
or
push
xor
mov
and
add
dec
fcomp
fiadd
imul
dec
add
outs
mov
xchg
ss
push
mov
mov
add
add
add
dec
bndstx
add
add
mov
push
dec
add
cs
mov
sgdtd
adc
bound
add
dec
xchg
pusha
popa
outs
xor
add
add
sub
lmsw
inc
or
add
mov
mov
mov
inc
adc
sgdtd
or
dec
push
and
push
adc
je
je
pop
add
dec
test
or
and
fiadd
adc
test
adc
or
add
pop
test
arpl
and
dec
add
inc
pusha
jb
jg
add
loopne
dec
aas
pavgb
inc
mov
jge
loopne
push
inc
dec
jge
enter
dec
jns
arpl
and
imul
imul
imul
stos
or
ins
ins
push
ror
ss
stos
and
popa
sbb
mov
ins
pop
arpl
ins
push
inc
pusha
pop
dec
imul
lea
dec
mov
pop
dec
adc
ss
pop
dec
adc
push
arpl
xor
pop
mov
push
sbb
push
dec
pop
push
push
and
dec
pop
push
ins
ins
inc
ror
arpl
or
dec
pop
sbb
pusha
dec
dec
pop
add
and
fcomp
dec
pusha
rol
push
dec
and
mov
dec
push
inc
mov
push
add
push
inc
lea
sub
ror
inc
ins
inc
add
and
push
dec
inc
add
dec
aas
(bad)
adc
mov
sub
dec
mov
add
mov
dec
dec
cmp
mov
add
add
add
cmp
dec
ins
mov
adc
movs
and
dec
inc
add
add
dec
ins
sub
xor
or
xor
inc
mov
add
adc
sbb
add
rcr
cmp
or
fadd
adc
and
ror
inc
xor
add
arpl
or
dec
xor
dec
dec
and
pop
xor
xchg
fsubr
mov
inc
dec
das
dec
adc
add
add
sub
pusha
dec
sub
mov
adc
add
or
daa
dec
dec
(bad)
inc
inc
add
sub
dec
add
inc
mov
push
add
and
add
add
adc
dec
and
pusha
imul
mov
push
mov
add
sbb
cdq
jg
mov
and
add
and
mov
dec
add
add
push
adc
dec
sbb
ins
cmps
pop
add
dec
and
mov
dec
add
mov
sbb
dec
or
mov
inc
add
imul
outs
sti
jle
inc
push
pusha
or
arpl
add
movs
ins
or
dec
shl
xor
or
push
arpl
add
mov
add
add
inc
gs
inc
push
push
push
xor
xor
ins
dec
inc
dec
inc
add
sar
push
inc
inc
and
inc
sbb
adc
sbb
xchg
add
push
ss
add
lfs
dec
loopne
les
and
dec
and
xor
or
sub
lods
or
mov
sub
add
xor
pop
stos
shr
mov
push
dec
push
xor
add
or
enter
add
add
ss
cld
sbb
push
add
add
test
rol
loopne
arpl
xor
sbb
add
push
out
add
fs
push
dec
mov
and
xchg
push
and
es
or
mov
dec
xor
and
add
add
or
ds
gs
xor
or
leave
inc
out
mov
add
push
std
and
loop
add
test
push
out
push
mov
xor
push
add
mov
push
adc
ins
bt
and
push
sbb
and
rol
and
add
test
shr
inc
mov
adc
ret
ror
pop
movs
dec
inc
dec
out
and
inc
es
add
js
shr
adc
out
cmps
adc
and
xor
sub
add
enter
xor
dec
or
lods
jle
xor
loopne
loopne
and
dec
cmp
and
sbb
ret
dec
scas
repnz
and
xor
dec
push
rcr
or
test
dec
push
add
or
xor
add
adc
inc
pusha
xor
inc
stc
dec
and
test
cmps
and
xchg
sbb
jo
or
add
inc
mov
push
dec
and
cmp
push
inc
mov
in
add
or
xor
or
cmp
or
dec
push
pop
mov
push
mov
lahf
push
inc
adc
dec
cmp
mov
add
dec
adc
inc
add
dec
ror
cs
mov
add
dec
sahf
mov
movs
daa
pop
adc
stos
sub
fild
xchg
sub
dec
push
fmul
cmps
and
add
daa
push
mov
inc
mov
dec
push
add
mov
in
sti
dec
add
add
dec
out
add
(bad)
in
and
add
push
ret
or
mov
pop
add
ins
inc
lock
add
arpl
add
shl
or
add
shl
dec
add
in
dec
ss
adc
mov
xchg
fld
inc
add
pop
ins
push
add
adc
dec
add
pop
mov
mov
add
jg
sub
push
je
gs
push
jo
mov
in
jmp
imul
or
cli
push
sbb
outs
ret
imul
cld
push
dec
popa
bound
adc
out
fucomp
fistp
push
arpl
gs
inc
ins
gs
add
add
ja
(bad)
in
call
add
push
jns
and
inc
popa
jo
imul
call
rcl
and
mov
shl
sbb
pop
jae
push
adc
adc
pushf
aas
and
cmp
(bad)
mov
es
mov
and
dec
inc
mov
push
dec
dec
dec
and
cs
push
pop
cmove
inc
sar
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
jb
or
ins
fisttp
fidivr
outs
ja
gs
or
cmp
sbb
push
pop
push
gs
popa
outs
popa
jae
jns
in
in
or
inc
test
push
retf
xor
or
fs
jb
or
adc
push
jne
loop
arpl
neg
xor
jbe
lahf
es
mov
ret
shl
or
mov
inc
xor
or
add
xor
mov
data16
dec
push
add
fdiv
cs
xchg
xor
outs
ds
clts
nop
sahf
adc
outs
xor
dec
mov
addr16
jns
loopne
add
add
add
add
ss
outs
push
cs
pop
push
sbb
je
sti
scas
or
and
ins
inc
adc
or
jmp
sti
mov
fadd
addr16
add
sbb
pop
push
bound
ins
fcom
mov
cmp
and
dec
mov
or
ins
and
mov
addr16
inc
jl
or
mov
popa
fs
test
inc
mov
(bad)
leave
imul
ja
ins
bound
adc
rcr
xchg
or
popa
outs
fcmovnu
mov
or
mov
push
imul
fwait
adc
mov
mov
add
(bad)
ja
push
or
cmp
xchg
dec
pusha
sub
fldcw
adc
std
dec
and
rol
push
gs
or
sub
outs
adc
outs
mov
stc
add
push
add
or
or
mov
dec
outs
add
push
or
or
outs
inc
popa
push
outs
add
int3
push
addr16
adc
hlt
dec
push
mov
mov
mov
outs
cmp
mov
popa
mov
add
js
cs
jo
lods
ret
ror
sbb
fimul
and
sub
sbb
sub
fldcw
and
ficom
ror
mov
xchg
jbe
adc
fstp
dec
xchg
or
cmps
mov
xlat
cmp
mov
adc
out
out
add
lahf
jo
ins
jae
in
push
sub
lea
mov
inc
popf
call
xchg
xor
xchg
dec
(bad)
adc
sub
pop
jge
ss
pop
or
jbe
sub
jp
and
stos
dec
or
or
ret
sub
js
popa
rcr
sub
push
add
mov
rol
loopne
fcomp
and
rol
xchg
cmp
loopne
and
dec
push
sub
ret
fsub
int3
mov
mov
loopne
or
mov
(bad)
and
repnz
rol
push
mov
sbb
call
jno
xor
test
cmp
imul
call
inc
jo
inc
adc
lea
cmovns
push
or
cwde
dec
mov
sub
cmp
cwde
jns
fiadd
daa
fmul
loopne
inc
arpl
adc
imul
stos
mov
ss
rol
push
mov
push
js
mov
mov
push
push
pop
or
outs
ret
fisubr
cwde
pushf
xchg
div
test
and
clc
aaa
mov
push
mov
mov
add
push
fwait
push
loope
(bad)
repz
jle
xor
loope
ja
adc
or
jno
inc
add
ret
sbb
arpl
and
ja
add
pop
mov
mov
sub
jae
cmp
ret
ffree
call
js
ret
lea
loopne
gs
sub
aaa
ins
gs
push
aaa
test
or
sbb
mov
and
cmp
xor
mov
inc
stos
cmp
inc
or
push
sbb
js
xor
and
mov
ror
add
cmp
sub
sbb
popf
push
sbb
fidivr
cld
lea
sbb
mov
sub
adc
ret
xchg
fdiv
cmp
mov
lds
add
mov
sub
dec
fwait
ret
das
push
adc
jne
or
test
mov
rcr
push
lods
out
pop
mov
sbb
mov
cmps
xor
addr16
pop
or
iret
push
jg
lods
or
dec
sbb
sub
lods
cmp
push
push
sub
stc
push
add
cmp
mov
popa
mov
mov
cmp
mov
and
inc
jnp
loop
and
loopne
test
xor
pop
push
mov
movs
jg
sbb
push
shl
mov
adc
sbb
mov
xor
(bad)
cdq
adc
adc
or
add
xchg
inc
cdq
shr
cmp
inc
and
push
lods
add
lds
mov
cmp
cmp
mov
add
adc
sahf
ins
push
mov
push
test
in
bound
bound
jno
fadd
adc
ins
jmp
adc
rol
sub
adc
popf
xor
and
or
sbb
pushf
test
inc
and
rcr
push
adc
loope
pop
sbb
adc
sbb
into
ja
loopne
cmp
cdq
scas
dec
sub
inc
xchg
jae
jne
ins
and
push
cmp
mov
mov
call
popa
leave
adc
push
inc
sub
cmc
js
push
jl
int
je
xor
jmp
jo
jo
(bad)
push
lahf
pop
and
movd
sbb
cmp
fs
sub
dec
mov
cmp
ss
outs
es
cmp
pop
add
das
jl
add
cmp
or
sub
pop
js
ins
inc
rol
or
add
adc
ret
add
out
mov
cmp
sbb
out
adc
jne
dec
push
es
test
add
adc
jmp
repz
push
dec
or
jg
xor
add
jae
mov
xchg
mov
clc
push
imul
mov
mov
or
jecxz
icebp
or
sbb
mov
or
pop
imul
xor
add
dec
xor
fisttp
je
out
jns
mov
pop
sub
stos
push
lds
shr
bound
je
pop
add
xor
pop
daa
loope
je
inc
mov
shl
ds
jb
sub
mov
jmp
and
push
pop
sbb
mov
mov
xor
sub
push
ins
ror
add
mov
int3
and
jns
fsubr
and
popa
pop
inc
dec
jecxz
push
or
sbb
xchg
jg
sahf
cmc
test
lea
xor
inc
inc
xor
push
or
mov
popf
cs
push
xchg
cmp
xchg
mov
shl
xor
loop
shl
xchg
sub
sti
shl
sub
xchg
mov
add
dec
push
clc
jno
outs
pop
mov
inc
inc
jno
adc
loop
inc
in
dec
or
push
or
cli
sub
xchg
inc
sbb
stos
jb
ds
scas
dec
mov
or
or
sub
xchg
test
shl
js
rcl
mov
ret
aaa
push
(bad)
(bad)
(bad)
enter
push
or
mov
shl
and
jo
jmp
jp
pop
dec
mov
or
(bad)
mov
rol
xor
push
jno
sbb
sbb
popa
les
out
jecxz
or
sub
inc
sub
data16
lods
mov
add
inc
popf
push
push
sbb
dec
jle
ret
mov
or
inc
dec
(bad)
ret
jne
mov
mov
(bad)
mov
pop
adc
jae
inc
mov
or
mov
rol
or
fistp
and
js
adc
pop
mov
push
out
push
fadd
mov
pop
push
jl
hlt
cmp
jp
ret
(bad)
int3
mov
add
or
add
dec
pop
xchg
mov
sub
xor
adc
out
pop
aaa
rol
mov
pushf
sbb
fucom
xchg
push
bound
push
lea
jp
and
inc
arpl
pop
(bad)
bts
adc
repz
in
js
mov
sbb
retf
test
loop
dec
cmp
in
rol
xchg
and
xchg
shl
call
and
pop
pop
fsub
ret
inc
(bad)
ret
xchg
and
cmp
mov
repz
jns
pop
push
add
cmp
mov
cmp
hlt
inc
sub
lock
cmp
and
sub
stc
in
loop
add
jbe
pop
(bad)
loopne
push
mov
or
jne
outs
sar
gs
cmp
dec
test
outs
fsub
arpl
sbb
mov
sbb
dec
(bad)
ja
lea
(bad)
adc
pusha
dec
pop
sub
aaa
pushf
xchg
pop
mov
enter
lock
pop
arpl
dec
clc
rcl
push
mov
mov
push
adc
popa
pop
push
adc
dec
(bad)
(bad)
xchg
jnp
mov
out
je
in
push
dec
add
lock
push
pusha
test
and
jne
adc
lock
cmp
dec
test
sub
inc
imul
retf
ss
lock
ret
ror
xchg
mov
aaa
sbb
xor
imul
xchg
(bad)
xor
mov
mov
js
mov
shr
icebp
outs
jno
add
add
xor
pop
sub
or
and
xor
jns
jo
outs
shl
add
int3
hlt
sub
xor
push
and
dec
popf
cmp
adc
xchg
lea
and
retf
popa
xor
fwait
arpl
add
inc
ss
je
xor
out
inc
loope
sub
in
add
cmc
mov
push
mov
das
xchg
adc
cmp
rol
stos
or
bound
imul
rcl
adc
sbb
and
push
pop
loopne
xchg
movs
mov
unpcklps
scas
sbb
ror
in
cmps
int3
sbb
movs
push
retf
push
into
enter
mov
cmp
inc
cmp
xor
gs
imul
xchg
or
data16
or
dec
fld
adc
test
xor
add
aam
in
lock
add
rcr
inc
ins
jo
ret
pop
xor
loopne
ret
sub
jo
inc
dec
aas
sub
sub
jo
sub
or
dec
inc
jnp
push
and
mov
mov
pushf
push
pop
add
addr16
mov
jo
xchg
stos
test
lds
adc
(bad)
imul
add
sub
push
pop
jo
cmp
pop
retf
sub
adc
pop
mov
xchg
fnstenv
dec
or
lods
sub
adc
lods
cmp
mov
xor
lahf
pop
lock
shl
rcr
push
lea
out
pop
cmps
inc
stos
pushf
xchg
cmp
jge
push
outs
push
mov
cmps
stos
adc
leave
xor
sbb
mov
pusha
je
scas
mov
or
loop
retf
push
push
js
jge
shl
je
cmc
movs
cmp
ror
(bad)
loope
inc
mov
dec
ror
pop
push
adc
arpl
test
std
and
or
mov
push
sub
cmp
cdq
movlps
push
xor
adc
ss
pop
mov
xchg
int3
rol
popa
pop
aaa
pusha
mov
sub
add
lock
cwde
aas
adc
mov
cmp
or
aaa
dec
adc
fadd
daa
clc
mov
or
cmps
das
mov
add
inc
(bad)
adc
add
test
adc
jns
or
push
cmp
inc
dec
lods
jmp
(bad)
fimul
cmp
ror
mov
or
inc
bound
xchg
mov
jne
cmps
jmp
adc
cmp
jns
in
ret
sub
add
adc
inc
in
and
ret
cdq
shl
sbb
popa
js
push
or
push
add
cmp
fldenv
jp
push
retf
xchg
mov
fsub
pop
adc
sub
add
mov
rol
test
(bad)
loopne
pop
or
jae
imul
arpl
jno
(bad)
xor
repnz
jnp
sub
inc
dec
popf
and
mov
out
push
std
adc
mul
push
xor
popf
mov
xchg
inc
stc
shl
xor
in
inc
mov
enter
(bad)
test
and
in
pop
inc
into
add
jecxz
inc
movs
mov
push
xor
xchg
xor
leave
and
inc
and
mov
pusha
or
mov
mov
xchg
add
mov
imul
add
dec
push
adc
xchg
sbb
(bad)
inc
loopne
mov
pop
sahf
or
add
pop
pop
add
dec
adc
xor
or
push
fistp
and
pop
pop
push
or
or
jmp
addr16
xor
repz
inc
icebp
mov
imul
xchg
push
mov
xchg
cmp
push
fsubr
arpl
xor
jo
cmp
shl
mov
add
mov
jo
or
push
adc
and
or
dec
xor
cmp
shl
jmp
aaa
or
xor
loope
inc
sub
xchg
mov
xchg
sbb
ret
push
cmp
or
sbb
mov
cmp
test
or
movs
and
pushf
cmp
and
daa
and
fistp
dec
rcr
sbb
push
sbb
icebp
sbb
repz
add
jnp
xor
nop
push
aaa
sub
fild
mov
xor
out
ins
mov
stos
rcl
dec
xor
or
jp
mov
push
imul
jo
push
pop
xchg
bound
inc
mov
sar
outs
mov
loopne
cmp
xchg
xor
mov
xor
mov
and
out
xor
adc
or
movs
rcr
mov
(bad)
push
pop
inc
ror
xlat
call
test
and
adc
xchg
push
and
(bad)
adc
jbe
jne
push
push
sbb
cmp
push
pop
add
inc
jmp
cmps
adc
mov
nop
cmp
repz
sbb
out
mov
inc
xchg
fnstcw
mov
add
push
loope
(bad)
jmp
outs
ins
ins
inc
popa
jb
pop
or
push
gs
imul
bound
(bad)
inc
push
push
push
popa
outs
gs
add
outs
ins
xor
gs
jmp
mov
sub
push
test
add
push
dec
gs
add
outs
pop
or
ins
xor
in
test
gs
dec
jne
xchg
pop
push
bound
outs
nop
mov
fucomi
inc
add
push
popa
imul
pop
pop
inc
addr16
push
data16
sbb
fnstcw
add
pop
inc
xchg
pop
pop
sbb
scas
rol
pop
(bad)
and
and
mov
mov
mov
mov
mov
push
cmp
inc
ins
pop
inc
scas
loope
in
pop
cs
or
lock
inc
jo
pop
push
imul
dec
outs
inc
outs
push
mov
call
dec
and
jae
inc
lock
mov
je
inc
dec
inc
sbb
pushf
popa
out
pop
and
pop
sbb
sub
adc
and
cmp
mov
xor
mov
or
xlat
or
imul
sbb
add
adc
cdq
ror
or
and
inc
sub
outs
mov
call
movs
push
or
ret
cmp
push
jmp
dec
pop
xchg
inc
shl
pop
mov
adc
mov
out
loope
dec
mov
adc
jmp
scas
push
enter
cmp
das
mov
cmp
je
cmp
das
ins
push
push
xor
xlat
cs
je
xor
js
add
cmp
and
lods
inc
test
popa
ds
inc
push
pop
xchg
popf
xor
ss
adc
addr16
stos
sbb
dec
data16
mov
and
imul
push
mov
push
ins
xchg
ss
sbb
ins
or
ins
les
or
loopne
mov
iret
xor
imul
xor
jbe
inc
inc
mov
adc
call
and
cmp
pop
add
call
std
xchg
sti
sbb
pop
jl
pop
add
inc
leave
pop
inc
outs
xor
scas
adc
and
outs
shr
sub
inc
popa
mov
outs
jne
and
lea
xchg
retf
add
inc
jne
ins
ins
push
adc
lods
stos
cdq
test
inc
mov
sahf
jb
pop
jns
pop
xor
and
mov
sub
aas
outs
movs
adc
mov
add
push
inc
rcl
push
adc
add
jae
xor
sbb
mov
dec
adc
retf
inc
mov
pop
push
mov
xor
and
or
push
daa
jnp
js
sub
mov
jmp
mov
jmp
add
pop
inc
xor
xchg
sbb
push
not
push
daa
or
and
or
add
mov
shr
mov
push
outs
jne
and
pusha
or
or
ret
mov
cmp
pop
mov
gs
add
jne
leave
inc
ret
pop
out
in
adc
mov
and
aad
pop
or
inc
push
dec
add
mov
cmove
inc
push
dec
push
add
std
sbb
push
inc
push
or
outs
retf
xchg
nop
sub
push
gs
or
clc
mov
or
dec
popa
sub
push
xchg
jne
fsub
nop
popa
jno
jns
xchg
dec
shl
cmps
adc
sbb
add
ror
mov
adc
inc
sub
mov
(bad)
out
adc
push
xchg
and
xor
dec
or
jecxz
stc
icebp
add
mov
inc
dec
or
pop
ficom
popf
mov
push
out
and
inc
xor
repz
jae
ins
fs
or
fadd
add
jo
add
or
inc
mov
pop
jno
dec
or
push
push
loopne
sbb
and
adc
cmp
outs
or
pop
inc
mov
pop
dec
push
stos
sbb
inc
xchg
mov
addr16
sub
aaa
or
inc
sub
addr16
sbb
sbb
add
add
and
mov
or
pusha
sbb
and
pop
cmps
xor
cmp
test
mov
jae
or
scas
add
sub
push
rol
call
ds
mov
in
push
xor
lods
adc
dec
mov
into
mov
add
movs
sbb
push
adc
cli
or
cmp
inc
xor
push
jne
mov
test
fistp
adc
xor
lods
push
cmp
lea
or
add
and
cwde
pusha
add
mov
xchg
call
and
and
or
add
jo
ss
inc
add
jp
sbb
or
scas
pop
dec
mov
cmp
inc
(bad)
lds
push
dec
add
add
rol
dec
xor
or
add
or
ins
push
je
jno
ins
xor
mov
inc
push
mov
imul
ins
push
ins
mov
push
stos
(bad)
mov
bound
outs
sub
stos
ret
push
or
inc
pop
add
push
inc
xchg
cmp
push
xor
popa
mov
push
sbb
inc
fadd
dec
dec
adc
push
outs
jae
mov
loope
fadd
push
jo
scas
inc
les
sbb
push
sbb
and
int3
dec
adc
push
and
mov
lock
adc
pop
hlt
or
jae
pop
outs
arpl
pusha
mov
sub
mov
enter
cmp
and
call
inc
mov
mov
sar
inc
ins
(bad)
mov
add
add
rcr
dec
xor
mov
arpl
add
adc
test
jb
je
sar
jo
pop
or
shl
(bad)
xor
inc
inc
adc
jmp
shl
rcl
xor
shr
or
cmp
hlt
or
pop
adc
popa
sbb
bound
cmp
mov
cmc
dec
fisttp
cmc
push
pusha
add
and
add
cmp
and
dec
shl
lock
scas
mov
inc
or
and
mov
lods
inc
daa
(bad)
or
dec
and
and
(bad)
idiv
mov
or
(bad)
jbe
mov
mov
popf
pop
adc
shr
mov
js
inc
sub
inc
sbb
and
test
leave
push
movs
or
push
adc
pop
sar
pop
mov
cmp
xor
add
mov
mov
jns
mov
cmp
pop
and
push
push
inc
jmp
test
clc
add
and
adc
or
add
adc
(bad)
out
xor
and
cs
mov
sbb
inc
mov
iret
mov
pop
fwait
or
adc
dec
outs
jb
pop
xor
jae
adc
adc
mov
fwait
rcr
repnz
adc
push
add
xchg
xchg
mov
shr
cmp
repnz
imul
lods
pop
push
xchg
cmp
add
loopne
add
jns
xor
scas
pop
jmp
inc
add
sub
mov
adc
xor
or
add
retf
pop
and
loop
(bad)
and
mov
fist
div
xchg
arpl
pusha
jbe
add
xchg
mov
xchg
sub
fcomp
mov
imul
mov
in
addr16
inc
pop
and
in
or
sbb
push
or
rcl
jb
xor
aam
cdq
cmp
cmp
sti
pop
sbb
retf
pusha
push
sbb
aas
aad
or
adc
xchg
scas
arpl
and
jmp
mov
inc
pop
sbb
cs
fimul
pop
mov
xchg
cmp
mov
xor
fldenv
xor
pusha
push
out
and
loope
xchg
push
add
or
iret
test
add
js
push
push
inc
ins
jg
inc
pusha
xor
inc
(bad)
adc
sbb
xchg
sub
out
push
pop
cld
pop
sti
retf
jo
jbe
sub
sbb
inc
(bad)
retf
add
xchg
adc
in
xor
xor
and
sub
and
adc
cmp
xchg
adc
sub
add
xor
ret
and
xchg
pop
lahf
add
sub
xlat
es
sub
(bad)
jl
add
mov
sbb
add
out
sbb
mov
nop
pop
mov
and
xchg
adc
test
in
and
(bad)
push
mov
ret
pop
xchg
outs
and
add
push
adc
add
shl
xchg
add
imul
adc
inc
jnp
mov
icebp
push
call
mov
mov
enter
je
aam
out
cmp
dec
(bad)
fstp
inc
pop
or
add
ror
cvtps2pi
and
das
in
pop
mov
lock
iret
add
sbb
dec
and
or
push
and
push
gs
sub
mov
jns
lds
xchg
shr
out
fnstcw
test
test
push
sub
lds
add
mov
adc
mov
xor
jno
shl
xor
mov
popa
cld
in
xlat
cmps
mov
add
push
aaa
iret
std
inc
lock
xchg
dec
adc
sti
jnp
sbb
mov
sbb
xlat
push
and
out
(bad)
rcr
cmp
push
xor
xchg
mov
and
test
loopne
(bad)
push
push
das
inc
mov
mov
imul
add
or
rcr
add
adc
loope
xchg
mov
in
outs
push
loopne
xchg
or
push
and
imul
add
sbb
cmp
push
jae
sbb
and
adc
xor
and
mov
xor
cmp
cmp
xor
and
and
jge
sar
in
mov
pop
adc
pop
stos
inc
cld
add
sbb
or
dec
mov
adc
push
lock
cwde
cmp
mov
and
add
cmp
bound
or
ror
push
or
lahf
adc
cmc
icebp
sbb
sbb
imul
sti
sbb
ret
fadd
inc
pop
fs
js
(bad)
push
or
test
adc
loope
jmp
mov
push
push
dec
lock
popa
lods
adc
or
xchg
mov
xchg
(bad)
or
jbe
add
xor
int
mov
cmp
add
hlt
sti
inc
(bad)
mov
inc
cld
mov
sbb
adc
lods
mov
lods
loope
push
out
sbb
add
test
xor
(bad)
sub
cmp
int3
and
rcl
ss
stc
mov
adc
jl
xchg
add
sub
loope
into
add
sbb
push
es
nop
push
(bad)
or
pop
xor
pop
and
xor
pushf
adc
ret
cmp
add
adc
mov
and
pop
ja
call
add
xchg
jo
push
adc
xlat
cmp
cs
jbe
push
jecxz
aad
add
mov
in
sti
push
pop
and
adc
nop
add
jle
add
sub
xor
sbb
pop
cs
jnp
test
cmp
mov
lods
add
adc
lods
add
sub
data16
popa
jae
sub
and
jb
ss
cmp
mov
test
or
add
push
add
sub
sar
mov
adc
sub
mov
pop
out
inc
or
mov
sub
push
mov
iret
and
(bad)
inc
push
sbb
adc
xor
add
and
inc
and
mov
push
sbb
mov
inc
sub
daa
retf
das
inc
jnp
mov
sub
sbb
or
mov
or
mov
nop
jmp
frstor
shl
inc
addr16
sahf
dec
daa
and
fmulp
sbb
ret
add
test
push
cmp
retf
inc
(bad)
xlat
popa
loopne
shl
add
mov
or
sub
into
dec
jmp
add
dec
pop
shl
push
jl
popa
mov
pop
lea
add
fwait
shl
xchg
hlt
ins
sbb
xor
nop
push
cmp
test
xor
push
jmp
mov
and
into
adc
xchg
fidiv
dec
mov
aaa
shl
inc
sahf
mov
retf
pop
sbb
pusha
imul
in
cmp
pusha
sbb
xchg
cmps
adc
sti
ror
outs
jmp
les
cmp
sbb
sub
xchg
iret
movs
fldcw
adc
dec
imul
ins
and
daa
daa
and
or
and
bound
xchg
retf
mov
pop
sub
mov
xrelease
jne
add
sub
or
lock
cmps
repz
movs
pushf
out
push
and
shr
call
dec
dec
mov
aad
push
arpl
neg
push
loopne
cdq
movs
adc
retf
dec
ins
pop
test
sbb
mov
mov
lahf
push
add
in
inc
pop
pusha
pop
mov
aad
call
nop
out
out
dec
or
push
fwait
adc
jg
dec
sbb
lods
sub
add
ja
lods
les
js
adc
push
addr16
or
jo
movzx
xor
loop
cmp
dec
mov
test
push
fsub
sbb
cmp
sbb
and
adc
outs
into
sahf
rcr
(bad)
pop
adc
add
daa
sub
add
ins
inc
push
xor
test
adc
sub
xor
daa
adc
shr
mov
arpl
mov
mov
fisttp
adc
lds
push
adc
mov
pusha
inc
hlt
jg
repz
mov
out
loopne
loopne
call
rcr
add
dec
jo
cmp
sub
xchg
push
add
or
mov
imul
dec
add
mov
nop
and
jne
pop
cmp
ds
sub
adc
mov
loopne
inc
hlt
daa
and
hlt
je
mov
cmp
sar
or
mov
sub
or
mov
mov
sub
jmp
jo
add
rcr
(bad)
das
cmp
xor
push
or
loope
pop
sub
dec
pop
shl
aas
add
ror
ror
jne
add
aas
sub
outs
sbb
push
(bad)
mov
add
in
cmp
mov
movs
or
pushf
and
push
jo
push
push
cdq
push
mov
push
fwait
push
test
loopne
(bad)
mov
ds
add
add
add
add
add
add
add
add
cmp
out
test
xchg
hlt
test
sar
imul
or
fidivr
std
loopne
cmp
cmp
outs
shl
push
aad
fstp
sbb
dec
in
fldenv
out
mov
pop
or
cmp
and
or
ret
fsub
adc
and
ret
pop
(bad)
jo
ret
cmovg
add
pop
push
sbb
arpl
sub
and
pop
mov
mov
inc
cmp
movs
pusha
sub
xor
xchg
(bad)
cmp
pop
sbb
imul
add
jnp
popa
inc
add
fist
mov
push
adc
in
inc
pop
pop
cmp
jmp
xchg
(bad)
cli
loop
sbb
or
lds
pusha
or
mov
mov
or
jne
rol
add
sub
shl
adc
(bad)
pop
and
xchg
cs
cmps
inc
mov
jno
stos
adc
sub
shr
push
sub
xchg
xchg
sbb
pop
sub
imul
(bad)
ja
jno
fsubr
movs
and
aas
out
inc
xchg
sub
daa
mov
scas
adc
cdq
xchg
or
cmp
push
or
ja
mov
xchg
add
lds
mov
sti
shl
pop
mov
sbb
sbb
xor
adc
lea
jne
je
add
in
sub
sub
repz
add
jg
cmp
cmp
inc
adc
ret
popa
sbb
cwde
loopne
mov
pop
add
ss
or
inc
pusha
add
sti
fadd
inc
cmp
jle
push
adc
(bad)
dec
pop
in
pusha
in
xor
rcl
in
cmp
mov
mov
popa
and
mov
cmp
push
adc
sbb
cmp
inc
xor
sub
pop
sub
xchg
loopne
and
popa
push
ror
add
xor
outs
in
dec
sbb
and
sub
sub
dec
cmp
and
daa
cmp
pusha
jo
dec
jnp
push
js
add
sub
dec
dec
xor
mov
sbb
hlt
xor
pop
mov
dec
and
inc
push
movs
sbb
xchg
inc
push
sbb
sbb
cmp
mov
pop
jmp
loopne
pop
ins
adc
test
pop
push
adc
xor
sub
push
ins
ja
cdq
sbb
hlt
rol
xor
push
cmp
dec
mov
sub
add
mov
mov
mov
fwait
nop
shl
add
and
addr16
pop
test
inc
sub
adc
or
sub
rol
rcl
sub
in
sub
adc
jmp
rol
xor
pusha
push
pusha
nop
push
test
daa
pavgw
or
fstp
and
dec
push
mov
test
pop
rcr
push
repnz
imul
inc
adc
std
pusha
jno
sub
repz
adc
xor
sub
ret
repnz
dec
pop
(bad)
mov
xchg
jecxz
pop
xchg
sbb
rol
imul
bound
arpl
lods
loop
adc
daa
pop
sbb
dec
fwait
lahf
adc
xchg
inc
test
adc
push
and
adc
ins
add
and
sbb
sbb
cmp
push
pushf
add
enter
push
mov
nop
pusha
rcl
add
or
shl
mov
xor
popa
je
call
cmp
mov
dec
push
add
mov
je
push
(bad)
sbb
or
out
jae
and
sbb
fistp
or
or
add
(bad)
aad
fwait
add
std
add
cmps
mov
cmp
add
or
dec
(bad)
and
xchg
xchg
sub
adc
loope
jl
jo
pop
xlat
lea
dec
or
sub
xchg
nop
inc
cs
dec
aaa
fdiv
jno
aas
sbb
jmp
or
lea
aas
dec
fadd
cmp
std
inc
mov
jno
test
test
or
outs
aas
xchg
add
aam
add
jo
out
cmp
rcl
and
mov
les
cmp
pop
icebp
or
mov
mov
sbb
cs
lea
mov
push
xchg
or
mov
les
or
mov
popf
lods
ror
mov
imul
lods
shl
add
je
xchg
sbb
push
add
jne
in
or
dec
adc
sbb
xor
in
and
movs
and
test
sbb
loopne
inc
repz
push
inc
add
adc
mov
jbe
mov
repz
mov
repz
dec
jo
shl
sub
push
add
gs
lods
adc
adc
adc
push
ret
pop
add
pop
add
add
ja
inc
cdq
int3
repz
mov
or
mov
repz
inc
jns
pushf
pop
or
sti
or
jno
jnp
ja
ds
adc
push
adc
add
arpl
pop
push
sub
dec
ja
push
pop
xor
std
daa
mov
(bad)
mov
cmp
xchg
sub
in
sub
jo
sbb
(bad)
sar
sbb
sub
cmp
pop
imul
and
inc
rcr
fimul
fisttp
adc
ins
(bad)
lahf
xor
jge
or
jo
ins
pop
mov
jne
cmp
adc
pushf
jb
lock
das
je
mov
ret
adc
xchg
dec
inc
pop
mov
and
pop
loopne
mov
dec
or
mov
dec
sub
dec
mov
push
outs
sbb
and
mov
push
jo
add
pusha
adc
xor
sbb
shl
adc
repnz
and
mov
add
push
jnp
sbb
pop
sbb
pop
ins
dec
mov
mov
sbb
mov
xchg
push
sub
into
mov
gs
pusha
dec
loopne
jnp
mov
add
adc
cmp
pop
mov
or
cmp
aas
pop
adc
loopne
int
jo
sbb
pop
popa
repnz
enter
addr16
jae
add
int
and
out
in
push
bound
add
imul
mov
scas
push
out
push
(bad)
pop
arpl
popa
jl
or
jecxz
mov
jae
mov
mov
shr
retf
xchg
sbb
xlat
add
jmp
fucomip
test
sbb
sub
stos
ret
xor
addr16
shl
add
push
adc
and
mov
xchg
or
and
(bad)
scas
inc
jns
mov
push
popa
xchg
inc
mov
retf
leave
aad
dec
test
adc
xor
jmp
pop
push
mov
or
das
mov
fld
lea
push
sub
ss
adc
mov
and
jmp
and
or
push
shl
mov
cmp
call
mov
loop
pop
adc
mov
loop
stos
pop
stos
test
adc
pop
inc
sbb
cwde
(bad)
xchg
dec
pop
mov
or
or
ret
rol
shr
or
jne
jne
enter
jmp
pushf
jb
sub
xchg
jge
jo
add
ficomp
rol
inc
push
mov
mov
push
das
sbb
cdq
dec
push
jno
xor
popa
adc
adc
stos
jno
add
scas
ss
and
jecxz
rcl
pop
jge
add
mov
sub
and
loope
imul
rcl
mov
mov
or
dec
jecxz
retf
or
popa
(bad)
(bad)
jns
jmp
or
and
sbb
cmp
int3
inc
or
inc
rol
ret
add
ins
pusha
inc
add
mov
cmp
(bad)
sub
push
mov
add
mov
push
aam
cmp
fistp
xchg
sbb
push
mov
jo
ss
js
ins
xor
inc
and
and
jae
jo
outs
jb
inc
retf
adc
jmp
jae
imul
outs
gs
cmc
push
push
das
cmp
aaa
xchg
mov
add
mov
jecxz
or
cmp
xchg
jne
je
dec
xchg
pusha
ret
rcl
mov
add
add
and
cmp
int
movs
clc
add
repz
add
inc
xor
test
push
push
xchg
mov
jmp
int
mov
or
xchg
in
test
sub
mov
rol
sub
cmc
adc
movs
(bad)
add
push
add
add
push
mov
sar
xchg
and
xor
pop
sub
je
pop
or
pop
sub
and
add
add
cld
call
mov
inc
lods
jmp
fidivr
add
mov
xor
jno
icebp
inc
xlat
icebp
ret
idiv
popa
pop
push
addr16
shl
pop
sbb
push
xor
or
imul
mov
jo
xor
add
or
cmps
push
push
pop
xor
push
fcom
fsub
sub
jo
sub
adc
aaa
jp
pop
cmp
mov
xchg
fcmovnbe
sub
fs
js
shld
sub
bswap
sahf
inc
inc
js
sbb
sbb
add
mov
mov
jo
mov
inc
xchg
out
test
imul
add
inc
jno
adc
js
mov
cmp
iret
dec
xor
iret
sbb
in
sbb
add
xor
xchg
lods
scas
add
add
cmps
or
or
xor
push
shl
div
(bad)
or
mov
sbb
and
(bad)
loopne
add
dec
and
xchg
into
bound
fcmovne
dec
or
or
mov
add
pop
mov
and
in
pop
pop
sub
add
sbb
repz
sub
fwait
icebp
xchg
mov
pop
call
xchg
call
add
or
inc
jge
or
or
bt
stos
cmps
bound
push
sub
into
retf
fcomp
dec
xor
xor
lds
inc
add
and
inc
or
cmp
cld
addr16
stos
mov
or
mov
bound
cmp
add
lock
rol
(bad)
out
retf
sub
xor
out
test
adc
mov
adc
rol
lahf
fstp
mov
jo
or
or
add
sbb
sahf
push
mov
add
scas
push
loop
xlat
and
add
popa
repnz
dec
outs
inc
mov
inc
pop
repz
add
mov
popa
movs
mov
pop
out
jno
cmp
shl
pop
or
das
add
stos
push
jmp
and
inc
cs
adc
loop
cmp
xor
into
add
xor
push
inc
push
jge
mov
arpl
or
jno
fild
lea
dec
xor
inc
and
ficom
daa
cmp
push
dec
inc
mov
or
lds
sub
sub
test
jmp
push
pop
and
test
adc
lods
mov
test
daa
stos
push
adc
add
or
daa
ins
cs
stos
add
push
and
xor
add
push
js
push
add
inc
xchg
aas
and
sbb
or
repz
imul
adc
jecxz
xchg
mov
sbb
dec
pusha
add
repz
sub
shl
sub
inc
cwde
or
sub
outs
pop
pusha
adc
bound
jae
scas
jo
pusha
les
add
add
inc
fcom
mov
jl
and
xor
pop
mov
cmp
cmp
sbb
xor
fcomp
jns
ret
ja
rol
cmp
sbb
mov
add
js
inc
cmp
dec
test
xchg
ins
je
popa
adc
iret
xor
push
add
mov
fild
adc
mov
adc
mov
daa
or
mov
xchg
add
in
(bad)
daa
push
movs
xor
in
mov
js
xchg
add
cmp
pop
movs
inc
adc
add
jge
add
add
xchg
rol
push
cmp
xor
sbb
push
movs
popa
rcl
ret
dec
mov
pop
jne
sbb
test
cdq
sbb
sub
push
stc
push
xchg
rcl
or
and
add
xor
mov
ss
in
arpl
mov
jle
popa
inc
pusha
je
call
test
call
rcr
enter
das
add
adc
or
jno
xor
test
sub
daa
popf
add
test
sysret
fnstcw
loopne
jo
ret
fidivr
retf
sub
push
outs
xor
cmp
retf
pop
mov
mov
or
mov
pop
sbb
add
loop
add
cdq
or
loopne
addr16
cmp
xchg
add
jge
inc
sbb
in
xchg
add
add
sub
sbb
push
push
adc
pop
and
jnp
push
push
and
inc
sub
adc
cmp
xor
pusha
loopne
add
xchg
sub
lea
bound
push
mov
sub
sti
cmp
lods
jno
stos
and
in
push
icebp
sbb
adc
sbb
cmc
shl
sbb
aad
adc
cmp
pop
mov
add
or
addr16
std
xchg
scas
popa
aaa
mov
sbb
adc
push
aam
sub
loopne
xor
dec
scas
bound
sbb
cmp
cmp
sar
mov
sub
add
sub
xor
jno
dec
mov
call
sti
aaa
cmps
mov
pop
fs
add
adc
adc
jnp
pop
daa
out
or
ins
addr16
mov
cdq
ror
xor
xor
inc
and
push
mov
sbb
add
cwde
push
add
inc
push
movs
jg
ror
jne
sub
sub
adc
add
cmp
mov
add
or
outs
inc
and
add
scas
inc
sub
dec
(bad)
ror
lahf
rol
movs
sbb
loope
fadd
xchg
push
icebp
xchg
push
mov
pop
xchg
retf
sbb
sbb
sbb
add
dec
sbb
pop
sbb
inc
mov
mov
xor
push
or
xor
jo
in
adc
cmp
arpl
movs
nop
sbb
adc
arpl
xchg
pop
outs
push
push
dec
hlt
jp
pop
outs
ins
push
inc
cmps
sub
ret
loope
adc
leave
inc
sub
jno
fwait
inc
cmp
add
popa
loop
push
xlat
mov
xor
xchg
repz
add
mov
push
xchg
inc
sti
(bad)
jno
in
push
icebp
push
or
movs
rcr
aad
or
lods
add
mov
xchg
xor
lea
ins
mov
adc
repnz
mov
cs
cmp
popa
jo
adc
push
mov
sub
inc
push
sbb
add
pop
push
les
aaa
xor
in
add
(bad)
xor
inc
prefetchnta
shl
cmc
pop
cmc
or
push
ficomp
sbb
pop
sub
cld
push
imul
ds
xchg
sbb
or
stos
xchg
js
pusha
es
mov
popa
mov
add
cmp
add
inc
call
sbb
cmp
loope
add
pop
in
mov
hlt
pop
popf
xchg
and
mov
sub
add
jbe
ins
sub
xor
mov
aaa
loopne
and
mov
mov
jl
ins
add
das
mov
jb
adc
jmp
out
push
xor
lods
push
bound
and
fnstcw
xor
nop
mov
push
gs
mov
shr
cs
push
inc
jae
bswap
pop
xor
add
push
xor
jne
push
sbb
retf
add
inc
sbb
stos
loope
inc
retf
push
cmp
mov
sub
xchg
sbb
dec
sbb
test
jno
loopne
test
mov
mov
aaa
pusha
cmp
cmp
add
aam
pusha
lock
lds
mov
jmp
inc
out
in
lock
jmp
add
and
dec
push
lods
ja
shl
ja
rcr
push
pop
loopne
out
call
inc
and
cmp
loope
dec
jge
loope
add
inc
loopne
jle
cmp
js
retf
jnp
xchg
push
add
or
mov
mov
stos
adc
aas
dec
bsf
retf
sub
add
loope
and
sahf
ret
cmp
loope
daa
push
pop
arpl
xor
jecxz
cmp
loop
mov
lea
pop
cmp
int3
mov
xchg
xchg
inc
clc
push
in
push
push
sbb
imul
jo
cmp
mov
or
pop
fld
pushf
push
in
imul
push
adc
shl
xor
loopne
pop
xchg
sub
pop
imul
jo
fimul
test
test
sub
or
pusha
add
test
pop
mov
push
aad
and
sbb
xor
xor
sbb
xor
adc
nop
inc
bound
mov
loopne
mov
fistp
or
outs
cmp
mov
cmp
xor
xchg
xor
sub
sbb
das
das
pusha
retf
and
add
jo
sbb
nop
in
inc
jo
push
pop
lahf
popa
cmp
xor
rol
and
sbb
mov
jns
jae
xchg
cmp
or
std
loopne
cmc
cmp
in
movs
out
push
jecxz
push
sbb
lahf
push
xor
bound
jecxz
and
aaa
mov
mov
or
inc
cmc
rol
aaa
ds
je
jno
lods
xchg
les
adc
jmp
sbb
js
stos
cdq
jl
int
pop
mov
leave
mov
or
sbb
loop
sub
dec
jmp
movs
sbb
repnz
push
adc
test
call
adc
and
fsubr
retf
retf
pop
add
push
pop
sub
and
ins
lods
push
sub
push
sbb
push
stos
popf
cmp
or
dec
push
dec
sbb
inc
inc
push
loope
inc
push
pop
adc
call
cmps
push
dec
(bad)
jmp
or
nop
jae
mov
sbb
mov
xchg
push
add
or
pop
stos
js
shr
jmp
pop
add
movs
lea
and
pop
xchg
jecxz
imul
pop
loopne
or
icebp
push
xchg
imul
bound
repz
inc
jmp
mov
pop
cmp
test
test
add
sbb
push
pop
adc
xchg
stos
fmul
(bad)
pop
(bad)
jo
mov
shr
cmp
pop
pop
mov
inc
cdq
neg
adc
sub
jbe
(bad)
fsubr
xchg
lds
fwait
xchg
fnstsw
dec
cmp
jno
add
add
fisttp
xor
call
js
push
or
pop
inc
xor
mov
sbb
cmp
push
iret
loope
in
sub
test
in
shl
pop
(bad)
gs
push
inc
jns
xor
mov
stos
or
js
enter
sub
fmul
js
cmps
icebp
xor
inc
xchg
xchg
xor
xor
mov
sbb
push
add
jns
xor
jg
repnz
aam
popa
push
in
mov
push
sbb
add
sbb
mov
xlat
ins
cmp
rcl
(bad)
lds
adc
sub
in
ret
dec
jl
and
cmp
push
add
pop
add
xor
ror
retf
and
and
sbb
inc
jo
cwde
rcr
inc
and
(bad)
pop
rcl
inc
and
and
dec
adc
or
nop
mov
jb
xlat
iret
xor
push
inc
(bad)
sub
or
into
pusha
cdq
or
or
mov
pop
jae
and
adc
out
les
rcl
popa
mov
ret
pusha
mov
cmc
lds
push
rcl
popf
pop
mov
and
lea
jmp
mov
cmp
xchg
inc
stos
pop
inc
cmp
push
(bad)
lds
jl
cmp
xor
jb
iret
mov
rol
push
sbb
sbb
test
mov
add
or
ins
sahf
or
xor
xchg
int
icebp
fsub
xchg
sbb
call
xlat
fldcw
sub
call
push
enter
and
mov
rcl
aas
mov
lds
aaa
sbb
repz
lods
dec
or
scas
in
sub
inc
pop
push
arpl
test
adc
outs
je
inc
push
pop
jmp
inc
leave
and
sbb
add
cmp
fnstsw
lds
or
inc
daa
adc
xor
jl
movs
jecxz
fld
add
adc
rol
or
sub
pop
adc
daa
(bad)
lock
mov
mov
adc
cmp
adc
gs
ret
and
fs
push
leave
add
js
fdivr
ficom
jmp
shl
outs
xlat
sbb
or
fsubr
popa
iret
sbb
pushf
sbb
(bad)
jbe
push
fild
cmp
pushf
shr
add
adc
dec
and
cmp
and
add
loopne
inc
psllw
inc
add
mov
dec
test
in
xor
fisttp
pop
and
sbb
mov
mov
and
shl
adc
fisttp
lahf
or
jne
sub
nop
imul
push
cmps
xchg
mov
xor
jge
push
pop
mov
dec
inc
and
cmps
(bad)
and
popa
add
imul
sub
(bad)
in
lods
fwait
pop
cs
push
sbb
add
in
or
and
out
inc
add
mov
inc
dec
or
xor
rol
mov
cs
dec
adc
or
mov
mov
jno
sbb
jg
and
dec
stc
adc
adc
jmp
or
push
js
add
leave
lahf
lahf
mov
xor
ret
sub
inc
dec
dec
and
inc
xor
jg
sub
sub
xchg
pop
cmp
adc
test
push
cmp
jmp
repz
fs
dec
add
mov
pop
or
dec
cmp
push
inc
mov
xlat
inc
jo
adc
xor
nop
jmp
cmps
sbb
sbb
mov
(bad)
iret
(bad)
inc
pop
dec
jo
or
cmc
shl
out
jne
add
iret
test
sbb
lock
pop
mov
lock
lahf
add
mov
and
sbb
lds
or
add
fldcw
mov
or
fisttp
ret
push
nop
ret
xchg
popf
jg
pop
call
add
add
push
out
jge
out
inc
pop
or
pop
dec
pop
xchg
mov
nop
add
sub
inc
loope
mov
shr
mov
or
cwde
pop
sbb
aam
inc
mov
cmp
mov
test
adc
cmps
jbe
mov
nop
outs
test
push
stc
mov
adc
iret
shl
jnp
cmp
dec
retf
jae
jp
and
leave
and
dec
xor
ret
imul
inc
add
pop
or
scas
cmp
adc
adc
or
inc
or
movs
fld
dec
sbb
mov
hlt
add
lock
push
mov
mov
or
scas
add
mov
adc
retf
sbb
adc
adc
lea
and
and
sub
push
or
and
push
in
adc
or
adc
and
sbb
sub
out
fdiv
stc
mov
cmp
xchg
inc
loop
mov
call
ror
inc
cmp
or
(bad)
pop
and
sbb
pop
icebp
std
or
xchg
mov
push
inc
or
outs
xor
dec
or
mov
loop
push
shl
or
rcr
adc
lahf
pop
or
jg
or
jo
jecxz
fs
xchg
mov
xchg
fcmovnu
rol
mov
inc
iret
jmp
sub
iret
test
cmp
xor
clc
mov
cmp
push
enter
fcos
(bad)
ja
adc
idiv
add
add
add
push
cmp
add
add
clc
add
add
add
mov
out
mov
sub
sub
ja
outs
inc
loopne
mov
pop
loopne
cmps
mov
shr
test
pop
sub
adc
pop
hlt
push
mov
inc
sbb
sub
mov
sub
dec
cmp
ins
xchg
fwait
push
add
or
adc
lea
popa
xchg
jo
push
test
popf
rol
lock
loope
fwait
lds
enter
jge
ror
out
popa
jmp
ins
mov
sub
daa
loopne
jbe
ret
adc
mov
mov
push
and
shl
(bad)
xor
popa
ins
rcr
pop
aaa
sub
xor
movs
xor
push
cmp
div
imul
inc
xchg
movs
imul
mov
and
pop
and
loope
arpl
popa
sti
jns
pop
mov
out
lds
add
or
cdq
or
pop
sub
test
test
cli
out
pop
rol
pushf
rol
cmp
loopne
xor
and
mov
push
add
or
nop
out
xor
push
xchg
rcr
sti
pop
sbb
fcomi
icebp
mov
mov
mov
sti
jmp
shl
push
inc
fiadd
out
add
cmc
sbb
mov
xchg
bound
test
sbb
and
test
jne
xor
stos
adc
pop
adc
jg
dec
adc
pop
ror
inc
xor
sub
and
in
or
sbb
imul
push
mov
rcl
push
cs
fldenv
and
and
mov
or
dec
jb
cmp
out
xor
jg
jo
daa
inc
or
xor
inc
bound
jg
sub
nop
loopne
out
or
or
pop
mov
inc
or
inc
cmp
inc
adc
jb
clc
pop
pop
fs
out
(bad)
inc
sub
and
xor
nop
xor
dec
scas
xchg
movs
sbb
cmp
inc
ja
mov
xchg
aas
bound
inc
ret
push
lea
add
dec
dec
and
mov
xor
mov
push
xchg
fsub
pop
mov
pop
mov
sub
pop
fadd
les
loopne
call
shl
fistp
daa
inc
mov
daa
xchg
and
inc
jo
int
fs
loopne
ins
pop
mov
inc
jg
int
dec
mov
mov
xchg
(bad)
loope
push
mov
inc
nop
push
aad
aad
xchg
retf
cs
mov
mov
mov
jnp
test
ret
add
cmp
fs
outs
inc
dec
mov
loopne
jnp
xchg
cmp
cdq
shl
and
jnp
mov
inc
or
stc
jbe
adc
cwde
push
lods
xchg
daa
mov
repz
loopne
mov
int3
and
and
adc
jmp
lds
pop
sbb
jmp
lahf
pop
adc
dec
fbstp
sub
push
pop
xchg
add
fsubr
jecxz
loope
adc
and
and
cmp
popf
lea
mov
sar
inc
test
jne
nop
or
call
jb
xlat
fadd
pusha
jo
fdivrp
and
shl
rcl
and
jno
loope
or
sub
push
mov
fcmovbe
lea
ret
and
mov
lods
jge
and
xchg
add
xchg
pop
fnstcw
sub
into
loope
outs
adc
mov
xor
cmp
movs
jmp
dec
xor
dec
mov
xor
pop
(bad)
imul
sub
adc
xor
(bad)
sbb
pop
(bad)
sbb
and
lock
push
adc
lods
xor
lds
jecxz
les
sub
ins
rcl
adc
fisttp
sub
push
rcl
and
pop
jmp
sbb
sub
out
adc
and
xchg
or
or
add
(bad)
mul
adc
stos
ja
mov
ret
adc
and
xchg
scas
imul
stos
movs
arpl
test
bound
enter
mov
inc
cmp
fisttp
sbb
xchg
fild
out
into
sbb
(bad)
daa
or
adc
and
and
mov
sbb
jae
pusha
xor
add
pop
push
test
cmp
or
inc
outs
jmp
popf
cmps
ss
mov
add
add
inc
mov
push
sub
push
adc
call
xor
pushf
inc
mov
sbb
ret
sti
cmp
adc
pop
cmps
loopne
sbb
xchg
jmp
jmp
xor
jo
imul
frstor
push
adc
jns
mov
sbb
xchg
or
add
test
sahf
adc
call
in
pop
adc
xor
mov
pop
mov
sub
test
cmc
fnsave
rol
push
and
(bad)
lock
adc
or
dec
push
mov
rcr
add
xchg
and
nop
sub
jno
and
pop
in
sbb
fwait
or
adc
out
add
mov
fcom
mov
add
and
xor
mov
add
lea
pusha
jo
and
pop
movs
sbb
dec
inc
leave
bsf
push
jnp
adc
add
xor
or
sbb
cld
jg
inc
xchg
mov
(bad)
mov
inc
push
(bad)
xor
xchg
mov
jo
std
inc
xchg
(bad)
cli
fisttp
jp
call
shl
mov
js
xchg
and
adc
test
popa
mov
inc
xor
mov
inc
mov
mov
(bad)
xor
sbb
inc
add
mov
mov
xchg
xor
lahf
rcr
jo
xchg
sub
cmp
mov
or
add
xor
or
ret
ins
push
xchg
add
push
daa
sahf
jp
xor
xchg
jo
inc
retf
das
out
arpl
(bad)
and
adc
jae
aam
test
cmp
or
cmp
xor
xchg
out
inc
inc
sbb
mov
inc
push
arpl
ins
ins
inc
popa
jb
pop
or
push
gs
imul
scas
std
push
popa
bound
sbb
call
outs
gs
add
outs
ins
xor
gs
(bad)
jmp
add
add
add
push
dec
imul
(bad)
mov
inc
ins
adc
or
ins
or
jbe
dec
jne
std
lahf
mov
push
bound
outs
nop
mov
add
push
popa
imul
ds
outs
adc
pop
inc
addr16
fistp
clc
inc
fimul
mov
popa
jo
test
adc
aas
scas
mov
sbb
pusha
push
push
(bad)
xor
std
mov
sub
ret
fisttp
mov
arpl
or
pop
adc
inc
jo
pop
dec
outs
inc
(bad)
xor
ins
dec
and
jae
jns
and
ins
adc
cmp
xchg
imul
mov
mov
sub
test
lods
test
loope
pop
inc
jo
jmp
add
dec
adc
sbb
gs
dec
data16
dec
outs
imul
imul
movs
imul
adc
pop
inc
xor
cmp
gs
xor
imul
rol
mov
inc
mov
jb
(bad)
aam
or
dec
sbb
jae
popf
sub
adc
add
mov
sbb
mov
sbb
pop
das
sub
sub
outs
retf
pusha
adc
or
inc
outs
cs
push
sub
int3
outs
jne
and
push
enter
adc
dec
adc
cdq
sbb
mov
xchg
sbb
mov
ins
sbb
xchg
(bad)
aas
nop
ss
lock
add
xor
(bad)
sub
cmp
dec
mov
adc
sub
adc
jne
or
or
inc
mov
inc
cmps
pop
rcr
ins
idiv
sub
and
push
and
pusha
fwait
mov
adc
in
mov
mov
xor
imul
adc
inc
aam
adc
retf
adc
or
outs
push
imul
movs
hlt
mov
mov
or
inc
and
es
stos
pop
(bad)
test
add
add
sbb
xchg
sbb
mov
mov
dec
cs
and
and
cmp
je
cmp
das
fs
popa
jae
mov
pusha
ss
mov
das
jae
cs
ins
ins
and
bound
cs
std
rcl
ins
sar
jno
outs
iret
retf
cmp
ds
push
cs
outs
and
stos
push
mov
cmove
inc
push
dec
push
fdiv
in
out
push
dec
inc
push
push
inc
push
or
outs
ins
outs
pop
or
ins
or
sub
push
gs
or
lahf
arpl
out
cmc
or
dec
popa
sub
fsub
mov
jno
jns
or
xor
cmps
add
push
popa
mov
hlt
or
retf
mov
dec
rcl
lea
or
cs
iret
or
ja
add
and
add
mov
add
sub
mov
dec
sub
jecxz
fld
stos
ret
scas
ret
inc
push
sub
xchg
add
loop
rcr
popf
or
cmp
rcl
dec
mov
or
or
enter
and
std
cmp
fnsave
xchg
pop
push
add
xchg
fld
push
and
stc
push
mov
xlat
jno
mov
sub
pushf
sub
lods
pop
loope
jmp
into
jmp
push
jne
xor
sub
outs
test
fsub
xor
leave
push
inc
div
mov
enter
xor
aam
repz
add
jmp
add
lock
adc
jecxz
xor
dec
add
lds
push
push
fs
jb
inc
adc
add
ret
sbb
sbb
sub
lods
ret
mov
mov
cmp
sbb
add
test
pop
outs
sahf
push
out
jae
push
push
inc
sub
sub
jecxz
adc
sub
imul
mov
inc
pop
dec
push
xchg
xor
push
fld
jge
adc
mov
or
loopne
push
inc
loop
jo
push
inc
dec
dec
jo
out
add
sub
add
sti
call
or
les
pop
ss
ficom
and
cmp
test
add
add
add
cmp
push
and
pusha
add
sbb
or
sub
sub
or
add
sbb
aad
mov
dec
mov
pop
popa
sbb
and
ins
fild
pop
sbb
test
das
mov
add
pop
push
pop
sbb
cmps
mov
mov
sbb
xchg
adc
gs
pop
sbb
mov
fstp
push
inc
xchg
pop
pop
pop
sbb
adc
pop
sbb
mov
ins
sbb
arpl
sbb
or
xlat
add
test
pop
sbb
dec
xlat
add
dec
ins
fld
sbb
dec
dec
push
sbb
adc
fcom
push
sbb
or
ror
fdiv
push
sbb
inc
mov
sbb
ins
sub
sbb
xor
and
fcomp
dec
add
add
push
sbb
add
std
mov
sub
add
sbb
or
and
test
dec
sti
add
dec
sbb
ins
or
mov
pop
popa
popa
arpl
les
dec
xor
dec
mov
retf
mov
sti
add
ins
sub
inc
aaa
add
push
inc
add
mov
mov
retf
cmp
ins
stos
or
dec
rcr
add
add
inc
sbb
push
inc
test
mov
aaa
add
xchg
pusha
fisttp
cmp
ins
sbb
add
push
aaa
add
sub
cmp
fadd
dec
dec
push
sbb
mov
aaa
add
mov
or
cmp
imul
shl
sub
dec
inc
aaa
add
and
add
sub
push
add
add
mov
dec
push
fist
dec
inc
xor
push
ins
in
add
add
gs
in
pop
add
das
push
sub
lea
aaa
add
adc
dec
pop
and
inc
add
add
rcr
or
add
aas
dec
dec
add
pop
sub
xchg
test
dec
mov
setns
sbb
nop
ret
daa
add
push
add
rol
dec
mov
retf
sbb
add
dec
mov
xchg
test
sbb
add
adc
add
sub
adc
or
inc
fadd
dec
mov
fild
iret
pop
dec
and
dec
add
rcl
pop
mov
dec
sbb
inc
pop
mov
add
push
pop
retf
add
adc
retf
das
add
mov
inc
adc
add
mov
inc
add
or
add
xor
shl
and
pop
add
add
add
ss
or
gs
add
inc
pop
test
movs
lea
dec
cmovg
add
inc
cs
mov
add
mov
inc
or
aaa
push
fcmovnbe
ret
add
adc
loopne
dec
push
xor
cmp
mov
outs
adc
lods
add
add
add
adc
imul
and
adc
sub
das
xor
add
sbb
ins
and
aaa
fimul
dec
pusha
pop
and
sub
loopne
inc
fisub
jne
ins
sbb
lods
dec
push
daa
sub
daa
dec
dec
mov
or
push
and
mov
add
dec
ins
or
add
and
push
dec
dec
fisubr
and
and
ss
pop
push
jne
add
ret
sub
add
sbb
add
pop
pop
fmul
sub
add
dec
push
pop
pusha
pop
pop
sbb
sub
rol
push
sub
dec
pop
sbb
sub
add
mov
sub
add
and
and
adc
ins
adc
ins
pop
ins
das
pop
add
arpl
cmp
aaa
fldcw
imul
dec
div
and
das
and
xchg
fadd
cmps
mul
mov
and
add
or
pusha
or
sub
xchg
fisubr
and
movs
sub
sub
and
add
push
das
push
sbb
mov
inc
or
das
dec
sub
rcr
and
cmp
or
mov
inc
add
push
mov
add
xor
cmps
movs
add
inc
or
adc
daa
add
mov
cmp
cmp
inc
cwde
jle
inc
add
dec
mov
sub
add
sbb
ret
add
add
cmp
cmp
pop
push
xor
aam
fiadd
and
and
inc
add
pop
fisubr
xor
sub
pop
add
pop
and
sub
fdiv
sub
dec
mov
add
pop
add
or
add
rcl
adc
sub
pop
or
and
test
cmp
stos
jo
mov
xchg
xchg
pop
add
adc
sub
adc
repz
xor
mov
cmp
sub
add
add
sbb
dec
das
add
inc
xor
cmp
movs
mov
add
mov
das
inc
add
rol
sti
xor
mov
adc
cmp
push
xchg
scas
add
add
ins
sbb
sub
xchg
or
sub
add
adc
and
dec
add
add
add
mov
mov
daa
add
inc
inc
sub
add
daa
add
add
xchg
xchg
ss
and
pop
adc
dec
ins
sub
add
or
ins
dec
add
dec
pop
ficom
add
cmp
dec
pusha
mov
add
or
push
dec
or
sub
or
push
push
ins
inc
sar
push
sub
mov
aaa
push
(bad)
mov
dec
or
add
fldcw
dec
dec
add
xor
add
sub
mov
dec
add
and
dec
int
test
add
pusha
imul
imul
dec
add
mov
ss
mov
mov
mov
push
add
add
add
sub
ins
mov
sub
xor
cmp
sub
add
mov
add
push
jo
movs
sub
ss
pop
add
das
adc
sub
lmsw
or
sub
fsubr
mov
push
(bad)
sgdtd
push
mov
adc
inc
inc
jo
dec
je
jo
mov
dec
mov
js
xchg
and
test
or
dec
add
pop
and
or
arpl
and
sbb
add
ret
or
sbb
outs
dec
sbb
dec
and
sbb
jns
nop
lea
fadd
add
ja
test
imul
jae
arpl
or
gs
push
add
pop
test
dec
outs
popa
ins
ins
push
ror
lea
mov
add
ss
mov
dec
imul
dec
mov
dec
push
adc
fsub
dec
or
dec
arpl
shr
arpl
pop
ins
sub
pop
push
stos
lea
mov
add
lea
ins
inc
inc
or
add
adc
push
nop
pusha
arpl
dec
add
test
fsubr
push
inc
(bad)
(bad)
push
adc
inc
ss
mov
push
inc
mov
add
dec
dec
sub
dec
rol
dec
push
ins
ins
adc
sbb
lock
aas
or
add
pusha
arpl
add
sbb
inc
dec
dec
cmp
xor
add
mov
(bad)
push
inc
aaa
add
xchg
and
xor
add
sub
mov
xor
and
xor
shr
aas
or
ins
xor
dec
push
add
add
cmp
or
push
dec
cmp
add
dec
dec
pusha
add
fdivr
dec
inc
xor
or
mov
add
adc
dec
dec
adc
arpl
dec
dec
add
stos
xor
or
inc
add
push
add
dec
sub
sub
arpl
mov
sub
adc
or
xchg
sub
inc
add
add
add
or
mov
add
or
nop
mov
add
data16
push
adc
dec
dec
and
movs
mov
rcr
dec
rcr
sub
cdq
jg
div
add
add
xchg
add
xor
mov
add
add
dec
sbb
mov
pop
add
dec
and
dec
add
xor
and
fild
inc
add
movs
add
add
mov
push
pusha
or
arpl
add
nop
mov
inc
add
add
mov
gs
push
or
push
arpl
add
shl
cmp
inc
gs
inc
push
push
push
xor
xor
and
js
call
push
inc
inc
and
inc
sbb
and
or
pop
dec
push
inc
xchg
add
push
ss
push
adc
cmp
push
gs
or
fstp
dec
sub
cld
and
xor
or
mov
mov
add
inc
xchg
or
arpl
inc
pop
xor
mov
add
add
cli
out
push
dec
and
push
xor
add
sbb
sbb
or
and
inc
add
add
ss
ss
cld
sbb
js
dec
add
push
or
dec
test
push
inc
add
dec
mov
dec
into
add
push
out
or
mov
fs
push
dec
(bad)
fsubp
mov
and
xchg
push
adc
dec
xor
jg
xor
and
add
add
sub
dec
lds
out
adc
es
mov
or
mov
std
and
mov
pop
test
push
call
xor
push
add
mov
push
push
add
cmp
or
call
and
add
push
xchg
dec
cwde
inc
adc
cmps
add
aam
mov
dec
jo
ror
dec
jo
and
es
sbb
sbb
shr
or
pushf
cmps
adc
add
add
mov
cmp
dec
or
fdiv
dec
and
add
add
shr
and
dec
mov
add
dec
add
or
add
or
movs
add
or
fsub
pop
dec
xor
add
or
push
push
sbb
shl
inc
stc
dec
and
test
cmps
or
pop
dec
inc
ror
add
adc
push
add
pop
add
dec
in
adc
dec
xor
and
dec
cmp
and
dec
push
pusha
test
mov
lahf
push
push
inc
add
retf
test
sbb
add
dec
inc
and
adc
add
pop
mov
adc
dec
js
dec
xor
daa
pusha
inc
nop
sub
cdq
loopne
scas
dec
xor
add
add
jo
pushf
or
mov
and
popf
push
cmp
push
adc
les
adc
push
push
dec
mov
add
adc
or
push
mov
jae
or
dec
add
add
movs
adc
mov
ins
add
add
add
and
scas
xor
mov
adc
add
mov
mov
dec
adc
push
mov
sbb
add
add
add
pusha
mov
add
add
add
mov
dec
adc
mov
dec
and
push
add
dec
jb
je
push
jo
imul
je
gs
cld
or
cli
push
sbb
mov
addr16
cld
push
dec
popa
bound
adc
pop
push
mov
arpl
gs
inc
ins
gs
add
add
ja
add
push
imul
jns
and
inc
popa
jo
imul
call
rcl
and
mov
shl
sbb
mov
int
adc
adc
pushf
aas
and
and
(bad)
iret
es
mov
and
dec
inc
inc
push
inc
dec
and
cs
push
pop
cmove
inc
push
dec
add
pop
inc
dec
inc
push
push
inc
push
or
outs
ins
outs
jb
or
ins
outs
jle
js
outs
ja
gs
or
cmp
popa
push
push
pop
push
gs
popa
outs
popa
jae
jns
mov
das
mov
inc
test
push
retf
xor
cmp
movs
fs
jb
or
adc
push
jne
loop
inc
mov
data16
repz
xor
jbe
lahf
es
mov
push
inc
ret
sub
mov
inc
into
int3
xor
add
xor
mov
dec
push
cs
jo
ror
fidiv
sbb
xchg
mov
or
xor
xor
sub
daa
pop
leave
xchg
sbb
add
sbb
push
pop
sbb
add
push
in
jg
push
xchg
sub
add
push
ins
gs
push
mov
jmp
je
popa
ins
inc
jb
sbb
ins
outs
arpl
ins
jae
jge
(bad)
mov
dec
outs
push
das
push
jne
jb
sbb
mov
ins
popa
outs
arpl
outs
jne
je
xor
je
imul
pop
sbb
test
dec
outs
push
sbb
jmp
mov
inc
imul
test
mov
or
push
mov
pop
sbb
popa
and
jne
je
dec
dec
pusha
jbe
shl
and
push
jae
xor
pushf
inc
xchg
add
shr
xchg
push
imul
mov
jae
div
inc
outs
jae
je
jne
jo
inc
push
daa
jge
out
push
sbb
ror
jb
pop
cmp
push
je
pop
jo
jo
mov
and
or
mov
lods
pusha
sti
dec
outs
fs
or
nop
cmp
push
cmp
data16
loope
mov
iret
shl
fidivr
retf
jb
adc
dec
lock
push
outs
xchg
add
test
push
je
cmp
lock
imul
push
adc
das
daa
sbb
mov
push
loope
pop
pop
xor
ins
sbb
adc
loope
dec
add
and
inc
adc
int3
or
pusha
inc
repnz
outs
ss
xor
neg
jbe
ret
dec
cmp
inc
push
sub
mov
xor
add
jo
xor
je
push
add
jae
push
inc
cmp
sahf
fsubr
jecxz
push
imul
mov
sbb
dec
cmp
fwait
jbe
enter
push
jns
sbb
push
fcom
and
ins
out
push
inc
xor
sbb
lods
xor
mov
inc
mov
sbb
scas
and
inc
gs
cmp
inc
out
sbb
sbb
adc
adc
jo
or
call
push
mov
push
dec
loope
dec
shl
bound
popa
(bad)
retf
jo
jae
mov
out
pop
sbb
mov
xchg
ins
icebp
xor
repnz
fs
jg
adc
sub
jns
pop
adc
cmp
push
rol
xor
cmp
jne
xchg
fwait
xchg
outs
data16
dec
and
xchg
dec
mov
push
and
xchg
mov
ret
lahf
adc
imul
push
sbb
jae
dec
shl
imul
outs
adc
fcmovb
sbb
sub
test
cwde
cmp
out
or
dec
jae
bound
fidiv
lds
dec
xor
mov
jbe
or
ret
imul
retf
xor
sub
jno
jae
ficom
adc
inc
pop
add
adc
outs
ret
push
mov
cmp
bound
pop
xchg
sbb
mov
xor
push
push
(bad)
ins
mov
sbb
and
or
mov
pop
xor
mov
inc
neg
and
in
mov
push
push
imul
sub
cmp
and
popf
and
sub
es
lahf
inc
xor
ja
inc
sbb
sub
xor
outs
sbb
loopne
or
mov
cmps
jne
inc
sahf
push
mov
and
lahf
ret
sbb
inc
sub
scas
jmp
ret
daa
test
sbb
shl
and
mov
adc
popa
bound
loope
fst
popa
add
xchg
cmc
pop
test
and
dec
mov
adc
pop
push
ret
loopne
mov
xor
dec
cmp
or
arpl
and
xchg
cmp
cmp
push
and
sbb
sbb
fdiv
sub
push
es
test
loope
outs
not
adc
shl
inc
es
jmp
inc
cmps
inc
sbb
xlat
and
push
pop
adc
add
popf
sbb
lods
add
sub
mov
add
push
test
call
lds
sub
push
jo
push
or
or
pop
jo
pusha
push
sbb
pop
aas
jge
(bad)
sbb
and
inc
cs
pop
or
jb
push
sbb
mov
aaa
sbb
outs
cmp
adc
xor
popf
inc
add
adc
out
dec
dec
dec
loope
rol
push
icebp
push
outs
cld
push
jl
ins
jmp
jne
inc
arpl
mov
fs
call
sbb
ins
stc
push
push
jne
inc
jmp
push
pop
bound
daa
(bad)
loop
scas
(bad)
in
imul
push
sub
sub
into
inc
into
jmp
ror
aaa
xor
pop
ret
test
or
xor
pop
or
stos
push
sti
jo
cmp
icebp
or
maxps
arpl
add
add
retf
xchg
call
sbb
pusha
in
push
sub
push
loopne
pop
push
or
dec
jbe
xchg
jo
dec
les
retf
sahf
push
mov
push
das
mov
dec
jb
or
mov
adc
inc
add
outs
inc
adc
and
sub
ja
int3
or
out
rcr
daa
cmps
sub
cmp
rcr
sub
in
rcl
mov
arpl
mov
adc
and
lea
fiadd
not
pop
push
mov
cmps
mov
dec
jmp
test
cs
and
stos
sub
dec
fcomi
push
push
xchg
ja
mov
xor
rol
shl
fimul
cmp
retf
push
fsub
push
dec
ins
cld
add
ficom
push
outs
dec
fucomp
fwait
add
push
adc
sbb
push
push
push
mov
mov
push
push
pop
lds
adc
dec
jb
stos
ins
add
gs
mov
mov
cmp
ja
push
div
clc
cwde
mov
gs
aas
sbb
test
imul
push
pop
lods
addr16
pop
dec
push
xor
push
imul
ins
adc
retf
ins
jle
jl
adc
inc
jb
mov
add
inc
bound
add
add
xor
int3
inc
add
icebp
jp
inc
inc
int3
adc
and
lea
adc
fist
lea
fcomp
adc
cmp
cli
(bad)
jbe
cmp
dec
ss
jns
outs
adc
dec
into
jecxz
dec
adc
jp
add
sbb
sbb
mov
or
sub
call
pop
and
rcr
and
shl
push
inc
(bad)
jo
and
adc
mov
pop
pop
addr16
mov
arpl
xor
pushf
in
add
enter
xor
sub
in
xlat
adc
pop
mul
push
call
sub
mov
adc
mov
or
push
dec
ret
enter
inc
sbb
(bad)
fidivr
mov
test
imul
pop
xor
dec
jbe
mov
xor
es
jo
or
or
loope
ins
jo
outs
add
mov
dec
lock
movs
cmp
daa
adc
sar
xchg
inc
sbb
push
add
lods
cmp
enter
xor
retf
jne
icebp
cli
(bad)
inc
or
pop
inc
add
cwde
nop
pop
push
addr16
and
inc
loop
dec
cwde
mov
or
dec
sbb
and
div
push
out
imul
lahf
sbb
mov
mov
pop
cwde
nop
and
dec
pop
dec
in
xor
jl
js
or
or
adc
pop
mov
xchg
xor
popa
sub
sbb
addr16
test
adc
shr
sti
inc
jb
stc
js
pop
ja
or
adc
sbb
lds
push
inc
inc
clc
pop
stos
mov
ret
call
mov
dec
push
outs
mov
inc
and
inc
in
add
dec
arpl
sbb
loop
arpl
les
push
dec
inc
push
or
pop
adc
(bad)
adc
cmp
and
inc
cdq
scas
sub
dec
or
push
std
dec
xchg
fcomp
pop
fild
js
fisubr
xor
push
xor
pop
jns
pop
push
ins
(bad)
sahf
mov
sub
dec
pop
cmp
mov
sub
bound
arpl
imul
add
adc
and
jmp
sbb
or
popa
fist
int3
push
test
push
(bad)
popw
sbb
test
dec
retf
xchg
xor
or
cs
mov
sub
pusha
in
dec
dec
jnp
dec
outs
xor
sbb
imul
dec
push
and
jge
jle
out
sbb
sbb
sbb
cs
fisubr
add
or
shl
pusha
add
(bad)
dec
jae
sub
fiadd
cs
pop
sbb
retf
xor
push
and
adc
fidiv
push
imul
add
jae
in
fsub
cmp
push
aas
jae
adc
(bad)
call
lea
test
and
push
fidiv
jo
jo
add
add
inc
fld
lea
fimul
mov
pop
inc
mov
dec
ja
mov
rcr
fisub
inc
scas
jecxz
pop
mov
repz
add
pop
dec
movs
pop
and
sbb
adc
test
push
imul
or
lods
sbb
dec
sbb
ins
mov
xlat
into
retf
test
dec
xchg
cmp
mov
and
cmp
(bad)
xor
sub
test
dec
int
jae
jmp
sbb
ins
push
movs
and
je
mov
inc
add
mov
lods
or
and
push
fadd
pop
(bad)
push
push
mov
outs
push
int3
(bad)
mov
sbb
ja
cmps
sbb
sahf
sub
jae
cmps
jae
loope
arpl
adc
imul
push
xor
adc
xor
daa
aas
xor
push
ins
mov
sub
jnp
rcl
or
ss
bound
icebp
add
mov
xor
cmp
mov
add
sbb
dec
cld
add
popf
ret
push
and
mov
cmp
push
fcom
dec
mov
cld
or
out
sbb
and
ficomp
dec
mov
jae
cmp
inc
es
dec
push
cmp
push
bound
jbe
mov
out
rcr
jmp
sub
cmp
mov
inc
lock
jbe
or
fstp
push
mov
mov
outs
int3
lea
or
movs
cmp
jb
fwait
jne
add
arpl
push
fwait
daa
lock
mov
dec
sbb
or
jne
and
sbb
in
ins
sub
push
arpl
adc
mov
push
sbb
mov
mov
fadd
sbb
mov
xchg
pushf
xor
push
mov
add
sbb
dec
in
add
mov
cmp
ret
bound
fsubr
and
or
pop
popf
xchg
inc
add
inc
fldcw
(bad)
sbb
sub
inc
ins
addr16
mov
pop
pusha
xchg
mov
imul
jo
push
xchg
xor
ror
adc
leave
and
add
out
sub
sbb
ins
rcl
inc
push
sar
mov
fcmove
push
test
jnp
cmp
aad
cdq
fsubr
arpl
push
sub
adc
add
out
or
inc
xor
mov
and
ins
sub
jns
dec
ins
popa
or
pusha
sbb
imul
jmp
and
jmp
inc
fs
or
arpl
or
aam
push
and
cs
add
mov
leave
sbb
sbb
mov
test
jno
data16
mov
add
cmps
data16
mov
and
xchg
addr16
add
and
pop
inc
fs
jmp
sbb
dec
inc
dec
and
aam
push
imul
retf
adc
rcr
arpl
mov
inc
inc
sub
adc
jo
inc
jne
outs
imul
daa
test
mov
pop
pop
mov
das
mov
outs
push
outs
in
test
mov
inc
and
arpl
mov
(bad)
xlat
mov
xor
shr
adc
inc
fistp
pop
inc
push
dec
inc
dec
pop
push
sbb
add
mov
dec
xor
ja
in
and
add
enter
pusha
and
mov
pop
mov
nop
es
xor
outs
cmp
push
or
mov
sub
push
test
dec
dec
or
xchg
mov
lea
mov
dec
dec
mov
sbb
sbb
mov
adc
sub
std
add
adc
je
jo
cmp
sbb
inc
jle
retf
lea
and
test
push
mov
rcl
or
(bad)
adc
adc
pop
and
cmp
mov
mov
(bad)
mov
popa
pop
popf
add
imul
mov
add
push
call
(bad)
or
add
xor
std
mov
sbb
add
adc
jo
add
pop
jae
pop
mov
add
cmp
push
add
cmp
pop
packuswb
dec
icebp
xor
add
sub
mov
add
push
repz
sbb
mov
dec
imul
ret
sbb
dec
mov
lock
ins
dec
cmp
lods
push
pushf
mov
and
std
and
in
push
shr
push
adc
and
sub
dec
jae
push
sub
add
sbb
push
nop
ror
inc
aam
push
dec
mov
shr
mov
add
pop
or
add
cmp
adc
mov
inc
mul
lahf
fs
(bad)
mov
cmp
gs
in
(bad)
out
cmp
lds
xor
cs
gs
mov
dec
add
jge
imul
movs
xchg
push
cmp
cs
jb
or
mov
das
(bad)
and
sub
and
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
repnz
jne
cmp
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jge
cmp
