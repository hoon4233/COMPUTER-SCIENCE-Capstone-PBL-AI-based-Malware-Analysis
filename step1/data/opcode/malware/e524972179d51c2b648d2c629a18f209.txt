or
add
add
add
dec
add
add
add
add
add
add
add
add
add
shl
or
add
xor
add
add
add
add
add
sbb
add
sub
add
push
sub
add
push
sub
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
and
xor
add
sub
add
push
add
add
movs
add
add
xor
add
sub
add
push
and
add
test
add
sub
add
push
sub
add
push
and
add
add
add
add
push
add
add
lods
add
add
xor
add
add
add
add
sbb
add
add
add
adc
add
or
add
and
inc
or
add
jae
add
or
add
or
sub
add
push
and
add
add
push
sub
add
push
sub
add
push
and
xor
add
lea
add
add
add
add
sub
add
push
pop
or
xor
add
sub
add
push
and
pop
adc
xor
add
pop
outs
or
add
outs
or
add
and
pop
adc
xor
add
sub
mov
sub
add
push
pop
outs
push
add
or
pop
sbb
xor
add
sub
mov
sub
add
push
pop
outs
sldt
or
pop
and
xor
add
sub
mov
sub
add
push
pop
outs
adc
add
and
pop
sub
xor
add
sub
mov
sub
add
push
pop
xor
xor
add
sub
add
push
and
pop
cmp
xor
add
or
sub
add
push
sub
add
or
add
mov
sub
add
push
sub
adc
inc
sub
add
push
pop
dec
sub
add
push
sub
add
push
and
pop
dec
sub
add
push
or
sub
add
push
pop
push
sub
add
push
sub
add
push
and
sub
add
or
add
pop
pop
sub
add
push
or
add
inc
sbb
add
add
add
add
sbb
add
sbb
push
add
add
add
adc
pop
sub
add
push
sub
add
push
or
pusha
sub
add
push
sub
add
push
and
add
or
add
and
add
or
push
outs
push
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
or
outs
pop
add
or
outs
pop
add
or
add
or
add
or
sub
add
push
sub
add
push
and
add
or
add
and
mov
add
or
xor
add
cmps
add
add
inc
add
add
idiv
(bad)
push
add
or
pop
ins
sub
add
push
adc
jbe
adc
sub
add
adc
sub
add
push
adc
or
add
or
sbb
add
and
add
add
push
sub
add
push
sub
add
or
sbb
adc
adc
sub
sbb
add
(bad)
(bad)
(bad)
jle
add
add
push
outs
push
add
or
pop
js
xor
add
pop
adc
add
mov
adc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
sub
add
dec
add
add
add
add
add
xor
add
adc
add
push
add
add
add
adc
jl
xor
add
sub
add
push
sub
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
and
xor
add
sub
add
push
and
add
jp
sub
add
push
or
add
or
add
and
or
sbb
add
pop
add
add
add
adc
adc
add
or
add
and
test
add
sub
add
push
push
mov
add
sub
add
push
outs
and
add
and
and
add
sub
add
or
ficomp
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
and
add
adc
fadd
sub
add
adc
add
add
xor
add
add
xor
pushf
add
add
outs
and
add
or
outs
and
adc
pop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
mov
mov
add
sub
add
push
xor
and
xor
add
lea
add
add
add
add
xchg
add
add
xor
add
add
adc
outs
add
or
inc
add
add
idiv
(bad)
jmp
cwde
add
add
xor
add
sub
jne
add
add
pop
inc
add
add
idiv
(bad)
dec
movs
and
add
sub
pushf
add
add
xor
add
sub
xor
add
add
add
add
add
add
add
add
add
add
or
add
and
add
xor
adc
add
push
add
adc
jle
add
add
xor
add
idiv
(bad)
call
sub
add
and
xor
add
sub
add
push
and
add
and
add
add
add
add
xor
add
add
add
sub
add
push
or
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
jl
add
sbb
add
add
idiv
(bad)
jmp
test
add
sub
add
push
or
dec
jle
add
add
outs
sub
add
and
add
or
inc
add
add
idiv
(bad)
dec
pop
outs
sub
add
and
add
or
add
fiadd
push
sub
add
add
(bad)
(bad)
dec
and
add
push
pop
or
jle
add
add
sub
add
xor
add
idiv
(bad)
inc
sub
add
outs
sub
add
and
add
or
adc
mov
add
sub
add
push
add
add
push
sub
sbb
add
add
add
add
add
add
add
add
adc
add
add
xor
add
add
adc
or
and
add
push
sub
add
push
and
add
sub
add
push
sub
add
push
outs
sub
or
and
add
push
sub
add
push
and
add
sub
add
push
sub
add
push
and
add
and
les
add
sub
add
push
sub
add
push
and
add
sub
add
push
sub
add
push
and
add
and
int3
add
add
xor
add
sub
add
push
and
add
sub
add
push
sub
add
push
and
add
and
aam
add
sub
add
push
sub
add
push
and
add
sub
add
push
sub
add
push
outs
sub
push
sub
add
sbb
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
adc
adc
adc
add
add
or
jae
add
or
push
jae
add
or
mov
push
add
add
add
add
xor
add
or
add
and
add
loopne
add
sub
add
push
xor
add
add
xor
add
adc
xor
add
sub
pop
outs
xor
add
pop
and
add
add
xor
add
push
in
add
add
xor
add
outs
and
add
and
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
and
add
or
sbb
add
add
(bad)
(bad)
dec
outs
and
add
adc
adc
fadd
sub
add
add
add
add
push
add
add
add
add
adc
add
add
add
adc
adc
add
add
add
xor
add
and
add
add
xor
add
and
xor
add
idiv
(bad)
call
sub
add
or
add
or
add
sub
add
push
sub
add
push
and
add
and
hlt
add
add
xor
add
adc
or
add
adc
or
push
adc
or
add
or
add
adc
inc
add
add
idiv
(bad)
inc
or
cmp
add
and
push
outs
cmp
add
and
push
or
cmp
add
outs
cmp
add
and
or
push
add
push
and
add
sub
add
or
push
adc
or
add
and
sub
inc
add
add
idiv
(bad)
inc
outs
cmp
pop
add
or
clc
add
add
xor
add
xor
add
(bad)
(bad)
call
push
and
add
add
xor
add
lea
add
add
or
or
add
add
sub
add
push
jle
add
or
add
or
add
add
sub
add
push
adc
cmp
add
add
pop
adc
call
xor
add
lea
add
add
or
or
or
add
sub
add
push
and
add
add
xor
add
popf
adc
and
add
sub
add
push
and
add
add
xor
add
popf
adc
and
add
sub
add
push
jle
add
or
add
or
push
sub
add
and
inc
add
add
idiv
(bad)
call
add
or
add
and
add
or
sub
add
add
(bad)
(bad)
inc
or
cmp
add
or
push
push
outs
cmp
add
and
push
or
cmp
add
and
add
adc
and
add
add
xor
add
pop
adc
adc
adc
mov
sub
(bad)
call
add
(bad)
(bad)
call
push
or
push
add
push
and
add
xor
jae
add
or
add
and
add
sub
add
push
or
dec
add
outs
inc
add
or
add
add
sbb
add
sub
add
or
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
sub
add
sub
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
add
xor
add
add
adc
adc
add
inc
add
or
inc
add
or
add
add
push
pop
and
add
sub
add
push
pop
mov
xor
add
and
xor
add
ficomp
push
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
and
add
adc
fadd
sub
adc
add
add
aaa
cmp
pop
add
add
add
or
sbb
add
add
add
adc
and
add
add
xor
add
sub
add
push
and
add
sub
add
xor
dec
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
jle
add
add
adc
inc
add
add
idiv
(bad)
push
add
or
add
add
or
add
outs
xor
or
add
add
outs
dec
add
or
add
idiv
(bad)
(bad)
jle
add
add
outs
dec
add
or
add
sub
sub
add
push
and
add
add
xor
add
and
or
inc
add
add
idiv
(bad)
call
adc
add
or
add
and
sbb
inc
add
add
idiv
(bad)
inc
outs
xor
or
add
and
adc
inc
add
add
idiv
(bad)
dec
sub
add
push
and
push
or
add
or
or
add
and
sbb
add
idiv
(bad)
dec
sub
add
outs
xor
or
add
and
sbb
inc
add
add
idiv
(bad)
inc
sub
es
or
or
inc
add
add
idiv
(bad)
call
or
pop
add
push
adc
or
add
adc
dec
add
or
add
add
adc
add
add
add
sbb
add
adc
pop
add
add
add
dec
add
or
add
xor
add
sub
add
push
lea
add
add
add
add
cmp
add
sub
add
push
and
add
sub
add
push
popf
adc
aas
add
or
and
add
sub
add
push
or
je
add
pop
or
add
xor
add
lea
add
add
add
add
add
xor
add
and
add
xor
add
popf
adc
add
xor
add
and
add
xor
add
popf
adc
or
add
sub
add
push
lea
add
add
push
adc
and
add
xor
add
and
add
sub
add
push
popf
adc
outs
aas
add
or
imul
sub
add
push
das
das
sbb
add
add
idiv
(bad)
call
sub
add
es
jle
add
add
and
add
sub
add
push
call
lods
add
add
or
ins
add
add
xor
add
call
xor
add
lea
add
add
pop
adc
and
add
xor
add
and
add
sub
add
push
popf
adc
and
add
xor
add
and
xor
add
popf
adc
outs
inc
add
or
add
add
xor
add
call
xor
add
lea
add
add
or
or
mov
add
sub
add
push
and
xor
add
popf
adc
and
add
push
and
xor
add
popf
adc
outs
inc
add
or
add
or
and
add
push
pop
or
pop
mov
cmp
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
add
add
add
sub
add
sub
add
or
pop
add
add
add
add
sub
add
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
and
add
fiadd
fiadd
sub
add
add
add
add
pop
pop
add
sbb
add
adc
add
add
add
adc
or
add
and
sbb
add
jae
add
or
add
or
or
add
and
sbb
add
jae
add
or
add
or
sub
add
and
sbb
add
and
push
add
or
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
sldt
adc
sub
add
and
sbb
add
or
outs
daa
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
push
add
or
popa
push
sub
add
and
and
add
and
add
xor
xor
add
adc
add
add
add
or
sub
push
add
or
xor
push
push
pop
outs
sbb
add
and
mov
add
add
push
add
or
xor
outs
add
add
add
adc
add
add
pusha
sbb
add
add
idiv
(bad)
call
sub
add
es
add
add
push
add
or
or
call
add
and
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
ficomp
pop
pop
or
xor
sbb
add
add
(bad)
(bad)
call
jle
add
add
pop
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
or
sub
sbb
add
test
add
adc
add
sub
add
outs
pop
add
or
add
and
add
and
sub
add
push
and
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
and
xor
add
or
cmp
pop
adc
add
push
and
add
sub
sbb
add
(bad)
(bad)
jmp
mov
add
sub
add
push
or
adc
add
fiadd
and
xor
add
sub
sub
add
add
add
add
add
jne
add
xor
add
or
add
add
add
add
or
add
adc
push
and
add
jae
add
or
add
or
add
fiadd
sub
adc
add
add
add
sbb
add
add
add
xor
add
add
adc
add
outs
daa
add
or
add
adc
and
add
push
sub
add
and
add
or
add
or
add
and
sub
add
push
and
add
sub
add
push
lea
add
add
adc
adc
les
add
sub
add
push
and
add
add
xor
add
popf
adc
outs
aas
add
or
add
or
add
int3
add
add
xor
add
adc
add
xor
add
adc
and
add
add
xor
add
adc
sub
adc
call
and
inc
add
add
idiv
(bad)
call
sub
add
or
pop
and
add
add
xor
add
pop
call
and
add
add
xor
add
pop
adc
adc
or
add
sub
add
push
pop
xor
add
or
mov
inc
add
add
idiv
(bad)
call
add
add
add
pop
add
or
xchg
add
sbb
add
(bad)
(bad)
jmp
pop
add
or
add
add
add
pop
add
or
pop
add
or
add
add
xor
add
adc
sub
or
or
add
and
inc
add
add
idiv
(bad)
dec
adc
and
add
add
xor
add
pop
call
and
add
add
xor
add
pop
adc
adc
or
add
sub
add
push
pop
xor
add
(bad)
(bad)
call
add
pop
add
or
add
sub
add
push
mov
add
adc
clc
add
add
xor
add
outs
pop
add
or
add
sub
add
push
inc
movs
add
add
add
add
add
sub
add
push
outs
push
add
or
or
add
add
add
sub
add
push
adc
and
add
add
xor
add
pop
outs
sbb
add
and
or
or
add
sub
add
push
outs
push
add
or
adc
add
sub
add
push
inc
adc
add
sub
add
push
inc
adc
add
add
xor
add
outs
push
add
or
add
sub
add
push
inc
and
add
sub
add
push
inc
adc
adc
or
and
add
sub
add
push
pop
outs
pusha
add
or
or
add
add
or
add
add
add
bound
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
arpl
add
je
add
add
adc
mov
add
sub
add
or
push
add
or
or
arpl
add
adc
outs
inc
add
or
adc
adc
and
add
add
xor
add
adc
xor
add
and
sub
pop
inc
add
add
idiv
(bad)
call
or
push
and
adc
adc
sub
add
add
(bad)
(bad)
call
or
or
push
ficomp
and
add
sub
add
push
adc
fimul
and
add
add
xor
add
adc
fiadd
adc
cmp
add
add
inc
add
add
idiv
(bad)
jmp
jne
add
sub
add
push
and
add
and
add
or
movaps
add
and
adc
jnp
add
add
test
add
sub
add
push
and
add
and
adc
inc
add
or
inc
add
add
idiv
(bad)
call
adc
push
adc
adc
adc
add
xor
add
adc
add
or
adc
add
or
adc
cmp
add
sub
add
push
sub
add
push
and
adc
cmp
add
sub
add
push
sub
add
push
and
sub
add
and
add
fiadd
jle
add
add
add
push
outs
push
add
adc
adc
fimul
or
adc
imul
or
adc
adc
sub
add
add
add
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
and
add
sub
add
push
lea
add
add
and
add
xor
add
and
add
sub
add
push
popf
or
add
or
add
xor
add
adc
cmp
add
or
add
or
outs
cmp
or
and
add
add
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
and
add
sub
add
push
outs
pusha
add
or
add
jge
add
add
rol
add
pop
and
add
add
add
push
and
add
and
pop
and
add
xor
add
outs
pusha
add
or
add
jnp
add
add
mov
add
sub
add
push
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
jle
add
or
add
add
outs
pop
and
add
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
pop
and
add
sub
add
push
outs
pusha
add
or
add
jnp
add
add
jmp
add
push
and
add
sub
sbb
add
add
idiv
(bad)
inc
jle
add
or
add
add
pop
add
jge
add
add
add
pop
add
add
xor
add
pop
adc
add
mov
mov
add
adc
add
in
add
add
ins
add
or
push
add
add
add
outs
add
or
dec
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
inc
and
add
push
outs
outs
add
or
jnp
add
add
jo
add
and
mov
add
push
and
add
and
jnp
add
add
pop
add
or
jnp
add
add
or
mov
add
sub
add
push
and
add
and
mov
add
add
push
and
add
es
add
add
add
pop
add
or
jnp
add
add
or
jmp
add
push
outs
outs
add
or
push
outs
or
add
and
or
pop
add
add
add
add
sub
add
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
fiadd
fiadd
sub
add
add
add
add
pop
pop
add
sbb
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
adc
add
jl
add
sub
add
push
lea
add
adc
add
add
xor
add
add
add
or
add
adc
push
sub
add
jae
add
or
add
or
add
fiadd
sub
adc
add
add
add
sbb
add
add
sbb
add
into
add
add
add
adc
add
add
bound
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
popa
add
or
xor
add
add
push
and
add
and
add
adc
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
push
add
or
add
pop
or
imul
or
add
add
or
add
add
xor
add
or
cmp
add
add
call
and
sub
add
and
inc
add
add
idiv
(bad)
call
jle
add
add
pop
and
add
xor
add
pop
or
jle
add
add
imul
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sbb
add
xchg
add
add
add
adc
add
or
add
or
add
add
xor
add
or
dec
push
pop
call
or
add
and
add
and
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
xor
add
or
jo
add
sub
add
push
pop
or
push
mov
lods
sbb
add
(bad)
(bad)
jmp
je
add
sub
add
push
or
js
add
sub
add
push
or
add
add
adc
add
add
add
add
add
xor
add
add
adc
ret
add
add
add
push
and
add
mov
sub
add
push
adc
add
adc
add
adc
add
add
xor
add
adc
add
rol
add
xor
add
adc
add
adc
add
retf
add
add
add
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
xor
add
adc
add
push
add
or
jle
add
add
jbe
add
and
add
sub
add
and
into
add
add
add
push
and
add
and
inc
add
or
ja
add
and
push
add
add
pop
jle
add
add
enter
sub
add
push
or
add
or
and
add
ficom
sub
sbb
add
add
idiv
(bad)
inc
outs
js
add
fsubr
add
adc
add
add
add
add
sbb
push
add
add
add
add
add
dec
add
jle
add
add
sbb
add
mov
add
add
add
or
add
or
sub
push
sub
add
add
xor
add
or
or
adc
add
and
add
xor
add
pop
or
or
add
sub
add
push
pop
sub
add
add
(bad)
(bad)
call
sub
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
or
or
mov
add
sub
add
push
pop
sub
add
add
(bad)
(bad)
dec
and
xor
add
pop
and
add
push
bound
add
add
and
add
xor
add
pop
or
pop
or
ins
or
pushf
add
add
xor
add
pop
and
xor
add
bound
add
add
and
add
xor
add
pop
or
and
xor
add
bound
adc
add
and
add
xor
add
pop
or
and
xor
add
bound
adc
add
and
add
xor
add
pop
or
pop
or
pop
add
or
add
add
pop
outs
jns
add
and
add
and
pop
add
or
mov
xor
add
adc
imul
jnp
add
adc
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
mov
add
add
add
or
add
fiadd
adc
es
push
fiadd
adc
sub
sbb
add
add
add
add
add
add
add
add
xor
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
pop
add
add
add
add
sub
add
sub
adc
add
add
add
adc
add
add
cmp
jo
push
sub
add
and
add
or
mov
jns
add
and
add
or
outs
push
add
or
popa
push
sub
add
sbb
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
sub
add
and
add
or
or
add
add
add
jle
add
add
sub
add
sub
xor
add
add
add
add
add
add
add
sub
add
and
add
or
or
add
add
add
jle
add
add
sub
adc
push
add
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
or
inc
add
add
idiv
(bad)
jmp
jle
add
add
add
push
sub
add
sbb
add
add
add
add
pop
add
or
jo
add
sub
add
push
sub
add
or
push
and
push
add
sub
add
push
and
add
and
add
xor
and
add
sub
add
push
and
add
and
and
add
sub
add
push
and
add
and
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
sub
add
adc
push
add
add
add
jnp
add
add
sbb
add
push
outs
test
add
and
add
add
add
add
int3
add
add
xor
add
lea
add
add
pop
and
add
add
xor
add
add
add
and
sbb
add
and
add
push
and
add
outs
test
add
add
add
add
aam
add
sub
add
push
lea
add
add
pop
and
add
add
xor
add
add
pop
outs
xchg
add
and
sbb
add
add
add
idiv
(bad)
call
sub
add
and
add
add
push
and
inc
add
add
push
and
add
sub
add
push
lea
add
outs
xchg
add
or
add
add
add
loopne
add
sub
add
push
lea
add
add
add
or
add
sub
add
xor
add
add
add
jnp
add
add
gs
add
push
outs
mov
add
and
add
add
in
add
sub
add
push
lea
add
add
add
or
add
add
or
pop
add
add
add
add
sub
add
push
sub
adc
add
add
add
adc
add
add
inc
jb
add
jo
push
sub
add
and
add
or
mov
jns
add
and
add
or
add
or
push
sub
add
sbb
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
or
add
add
xchg
and
sub
add
xchg
or
pop
pop
dec
add
cmp
sbb
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
es
add
add
push
outs
jns
add
and
jnp
add
sub
adc
add
add
add
add
pop
add
or
pop
push
add
sub
add
push
and
add
or
push
and
push
add
sub
add
push
and
add
and
add
add
add
add
add
or
add
add
adc
push
add
add
add
jnp
add
add
sbb
add
push
and
add
and
add
and
add
add
call
xor
add
lea
add
add
pop
and
add
add
xor
add
add
add
add
add
add
and
add
push
outs
test
add
and
add
and
add
add
lock
add
xor
add
lea
add
add
pop
and
add
add
xor
add
add
pop
outs
xchg
add
and
sbb
sub
add
add
(bad)
(bad)
call
sub
add
and
add
add
push
and
inc
add
add
push
and
add
sub
add
push
lea
add
outs
xchg
add
or
add
add
add
cld
add
add
xor
add
lea
add
add
add
or
add
sub
add
xor
add
add
add
jnp
add
add
gs
add
push
and
add
and
add
add
add
add
sub
add
push
lea
add
add
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
sub
adc
add
cdq
add
add
add
adc
outs
mov
add
and
add
and
mov
add
outs
mov
add
or
adc
add
adc
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
push
sub
sub
sbb
add
add
(bad)
(bad)
jmp
or
add
sub
add
push
or
and
or
or
or
add
sub
add
push
sub
and
add
add
xor
add
pop
or
pop
mov
ficomp
add
(bad)
(bad)
jmp
adc
add
sub
add
push
sub
add
sbb
push
add
add
pop
add
adc
mov
add
and
add
or
sub
inc
add
add
idiv
(bad)
call
sub
add
es
push
sub
add
and
inc
add
add
idiv
(bad)
call
add
add
push
or
sbb
add
sub
add
push
lea
add
add
add
and
add
sbb
add
sub
add
push
inc
xchg
add
pop
inc
add
add
idiv
(bad)
dec
outs
outs
add
push
push
outs
add
push
and
outs
outs
add
push
and
add
and
add
sub
add
push
xor
inc
add
add
idiv
(bad)
call
add
add
xor
add
xor
sbb
add
add
(bad)
(bad)
call
push
sub
add
add
(bad)
(bad)
call
pop
and
add
add
xor
add
sbb
idiv
(bad)
jmp
xor
add
sub
add
push
jae
add
or
outs
outs
add
push
and
outs
add
push
and
outs
add
push
and
outs
add
push
and
outs
outs
add
push
and
outs
outs
add
push
adc
adc
and
add
sub
add
push
xor
adc
lea
add
add
or
adc
and
add
add
xor
add
adc
outs
xor
add
adc
and
add
sub
add
push
xor
sbb
add
(bad)
(bad)
call
or
adc
adc
cmp
add
sub
add
push
adc
outs
xor
add
and
inc
add
or
add
or
lea
add
add
or
cmp
add
sub
add
push
adc
add
or
jae
add
push
adc
adc
lea
add
add
inc
add
add
xor
add
or
add
es
or
add
add
inc
add
add
xor
add
arpl
movups
mov
add
add
xor
add
bound
add
add
dec
add
add
xor
add
inc
push
add
add
mov
add
add
xor
add
inc
add
add
add
idiv
(bad)
dec
outs
outs
add
push
adc
adc
lea
add
add
add
xor
add
adc
sub
outs
outs
add
push
and
outs
outs
add
push
and
adc
adc
pop
add
add
xor
add
adc
add
or
adc
push
adc
adc
adc
adc
outs
dec
add
push
and
adc
pop
adc
adc
adc
xor
add
add
xor
add
inc
mov
add
sbb
add
add
(bad)
(bad)
jmp
pusha
add
add
xor
add
lea
add
add
add
aaa
add
push
adc
and
add
sub
add
push
lea
add
add
add
aaa
add
push
adc
jae
add
push
adc
adc
adc
adc
and
add
sub
add
push
outs
inc
add
push
and
sbb
and
add
sub
add
push
add
add
sub
add
push
pop
outs
pop
add
and
sbb
inc
add
push
and
adc
sub
sbb
add
add
idiv
(bad)
call
sbb
add
or
fimul
sbb
adc
outs
js
add
fcom
mov
add
add
xor
add
inc
mov
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
push
lea
add
add
add
aaa
add
push
adc
and
xor
add
lea
add
add
add
aaa
add
push
adc
cmp
add
adc
adc
mov
add
sub
add
push
outs
cmp
add
and
push
add
mov
xor
add
add
add
sub
add
push
pop
outs
pop
add
and
pop
sub
push
and
adc
sub
adc
outs
js
add
(bad)
push
adc
outs
js
add
fsub
pop
pop
add
sub
add
push
and
add
jp
outs
and
add
adc
or
add
xor
add
add
add
pop
add
add
add
add
adc
or
add
add
add
add
and
add
add
fadd
push
xor
add
add
add
or
inc
add
add
add
add
sub
add
or
jae
add
push
jge
add
add
jae
add
push
jge
add
add
and
add
push
jge
add
add
jnp
add
add
and
xor
add
add
add
sub
add
xor
jge
add
add
add
and
add
push
lea
add
add
add
aaa
add
push
sbb
add
xor
xor
add
lea
add
add
add
aaa
add
push
and
add
scas
add
add
push
lea
add
add
add
aaa
add
push
and
add
sub
add
sub
add
push
lea
add
add
add
aaa
add
push
and
add
add
add
xor
add
add
adc
jnp
add
add
pop
add
push
and
add
add
jnp
add
add
add
add
rol
add
xor
add
pop
inc
add
add
add
add
add
add
add
add
jl
add
add
add
add
outs
pop
add
push
push
and
add
add
xor
add
pop
and
add
sub
add
push
das
or
int3
add
add
xor
add
sub
jnp
add
add
jnp
add
add
add
push
and
rol
add
sub
add
push
pop
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
add
xor
add
das
push
sbb
add
add
(bad)
(bad)
inc
and
add
add
xor
add
das
adc
add
idiv
(bad)
jmp
fadd
add
sub
add
push
sub
adc
sub
adc
sub
add
and
add
add
xor
add
jge
add
add
in
add
sub
add
push
sub
jle
add
add
and
add
add
xor
add
pop
xchg
jge
add
add
jle
add
add
and
add
add
xor
add
pop
xchg
jge
add
add
jnp
add
add
lock
add
xor
add
xor
inc
add
add
idiv
(bad)
inc
and
add
add
xor
add
jge
add
add
jnp
add
add
jnp
add
add
push
add
push
and
clc
add
add
xor
add
das
adc
add
idiv
(bad)
jmp
cld
add
add
xor
add
sub
jnp
add
add
jnp
add
add
push
add
push
add
add
pop
jge
add
add
and
add
add
xor
add
jge
add
add
jnp
add
add
jnp
add
add
add
push
or
and
add
sub
add
push
das
adc
add
idiv
(bad)
jmp
or
add
xor
add
sub
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jnp
add
add
or
add
sub
add
push
xor
and
add
add
xor
add
jge
add
add
jnp
add
add
jnp
add
add
push
add
push
or
add
sub
add
push
das
adc
add
idiv
(bad)
jmp
sbb
add
xor
add
sub
jnp
add
add
jnp
add
add
push
add
push
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
pop
add
push
push
add
add
add
or
and
add
sub
add
push
jge
add
add
and
add
add
xor
add
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
push
sub
adc
add
sbb
add
and
add
add
add
add
or
sub
add
xor
add
pop
inc
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
mov
sub
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
sub
add
sub
add
push
jge
add
add
xor
add
xor
add
sub
jnp
add
add
xor
add
sub
add
push
outs
push
add
push
or
and
add
add
xor
add
das
or
cmp
add
sub
add
push
sub
jnp
add
add
inc
add
add
xor
add
outs
push
add
push
push
and
add
xor
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
push
jge
add
add
and
add
xor
add
arpl
add
add
add
pop
add
add
add
sub
jnp
add
add
push
add
push
add
push
add
add
xor
add
jge
add
add
inc
add
add
add
sub
add
jle
add
add
sub
and
add
xor
add
jge
add
add
sbb
jae
add
push
jge
add
add
and
add
sub
add
push
jge
add
add
pop
add
add
xor
add
sub
add
add
add
pusha
add
add
xor
add
outs
push
add
push
and
add
and
add
xor
add
das
or
push
xor
add
sub
jnp
add
add
ins
add
add
xor
add
outs
push
add
push
add
jo
add
sub
add
push
jge
add
add
jnp
add
add
je
add
sub
add
push
outs
push
add
push
or
and
add
sub
add
push
das
adc
add
idiv
(bad)
jmp
jl
add
sub
add
push
sub
jnp
add
add
add
sub
add
push
outs
push
add
push
add
test
add
xor
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
pop
add
push
and
jnp
add
add
pop
jge
add
add
jnp
add
add
and
add
idiv
(bad)
inc
and
xor
add
jge
add
add
mov
add
xor
add
sub
jnp
add
add
push
add
push
and
add
sub
add
push
inc
sub
jnp
add
add
jnp
add
add
push
es
add
add
(bad)
(bad)
jmp
xchg
add
add
xor
add
sub
add
add
add
imul
jge
add
add
add
add
add
push
add
and
add
and
xor
add
jge
add
add
sub
add
and
add
add
xor
add
sub
mov
xor
add
sub
adc
add
add
add
adc
movs
add
add
xor
add
or
jnp
add
add
test
add
sub
add
push
cmp
jnp
add
add
add
outs
popa
add
push
or
pop
dec
add
push
pop
pop
or
add
add
add
add
idiv
(bad)
call
sub
add
es
sub
sub
add
and
jnp
add
add
pusha
add
push
and
add
sub
add
push
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
mov
add
sub
add
push
inc
jae
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
add
add
adc
xor
add
xor
add
(bad)
(bad)
(bad)
jg
das
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
xor
add
adc
add
add
add
or
push
pop
sub
push
add
or
xor
inc
add
add
idiv
(bad)
call
sub
add
es
push
pop
outs
sbb
add
or
sub
xor
mov
add
and
add
add
add
or
pop
add
xchg
add
or
das
and
inc
add
add
idiv
(bad)
call
sub
add
es
jb
add
jo
xchg
add
or
das
nop
add
add
(bad)
(bad)
call
add
addps
push
pop
outs
pop
add
or
pop
pop
inc
add
add
idiv
(bad)
inc
pop
outs
pop
add
or
add
xor
pop
pop
adc
add
or
add
add
sub
or
xchg
add
or
add
add
xchg
add
or
add
add
add
adc
adc
add
add
add
add
add
xor
add
add
add
add
jle
add
add
or
popa
add
or
popa
push
sub
add
and
pop
sub
add
fadd
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
and
sub
add
and
es
popa
push
sub
add
and
push
sub
adc
add
add
add
or
cmova
add
sbb
pop
add
add
add
add
adc
or
add
add
or
ror
or
xchg
add
or
or
pop
or
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
add
lea
add
add
add
push
outs
xor
add
and
adc
or
lea
add
add
push
add
push
push
push
outs
xor
add
and
pop
adc
adc
push
adc
or
or
push
adc
pop
pop
adc
adc
adc
adc
sub
pop
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
and
add
push
outs
cwde
add
or
add
add
inc
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
pop
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
inc
add
or
add
or
movd
add
add
das
add
add
cdq
add
or
add
add
push
call
fwait
add
or
or
add
or
or
add
or
outs
popf
add
or
add
adc
adc
outs
pushf
add
or
add
adc
outs
mov
add
imul
adc
adc
outs
xor
add
adc
adc
adc
adc
push
outs
sahf
add
or
xor
add
or
adc
outs
xor
add
adc
or
pop
push
outs
inc
add
or
inc
add
add
idiv
(bad)
inc
adc
add
add
or
pop
imul
es
adc
add
add
or
or
pop
add
and
xor
add
movhps
jle
add
jle
add
add
push
push
push
call
add
or
pop
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
xor
add
add
add
add
add
add
outs
inc
add
or
pop
outs
cdq
add
or
movd
add
add
xor
add
cdq
add
or
add
add
push
call
lahf
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
xor
add
and
adc
xor
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
xor
add
adc
adc
das
int3
jle
add
add
fiadd
fiadd
pop
sub
pop
outs
and
add
and
inc
add
or
outs
mov
add
and
push
add
add
adc
adc
adc
imul
es
add
add
add
and
cwde
mov
add
add
or
inc
add
add
add
add
and
pop
add
sub
add
push
jge
add
add
and
add
sub
add
push
jge
add
add
and
pop
add
sub
add
push
jge
add
add
and
add
sub
add
push
jge
add
add
sub
add
or
add
xor
add
add
add
add
adc
jnp
add
add
cmp
add
add
add
(bad)
(bad)
call
sub
add
add
add
add
jnp
add
add
adc
add
idiv
(bad)
jmp
test
add
sub
add
push
sub
and
add
jnp
add
add
and
add
or
lods
push
add
sub
add
push
pop
jge
add
add
xchg
and
xor
add
pop
add
add
add
and
add
or
mov
add
sub
add
push
pop
jge
add
add
xchg
and
xor
add
pop
and
add
push
bound
jnp
add
add
rol
add
xor
add
pop
bound
aaa
add
add
and
add
les
add
sub
add
push
pop
jge
add
add
jnp
add
add
and
push
add
sub
add
push
add
int3
push
add
sub
add
push
pop
bound
rol
add
sub
add
push
pop
push
imul
xor
add
add
add
add
add
and
add
and
push
add
sub
add
push
pop
fs
add
add
and
add
pop
jge
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
add
add
add
fadd
add
sub
add
push
arpl
add
or
inc
add
add
add
add
and
add
jnp
add
add
fadd
add
sub
add
push
pop
and
push
add
sub
add
push
pop
fs
add
add
and
add
in
add
sub
add
push
pop
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
add
add
xor
add
add
daa
add
adc
call
xor
add
or
add
add
xor
add
pop
dec
add
add
add
add
pushf
add
add
lock
add
sub
add
push
fs
add
add
and
add
hlt
push
add
sub
add
push
pop
jge
add
add
and
push
add
sub
add
push
pop
dec
add
push
and
push
add
sub
add
push
pop
or
jnp
add
add
add
add
sub
add
push
xor
add
idiv
(bad)
call
sub
add
es
add
xor
add
cmp
sbb
add
(bad)
(bad)
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
jnp
add
add
or
dec
add
add
add
add
jnp
add
add
add
sub
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
and
pop
add
sub
add
push
pop
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
and
add
or
or
add
sub
add
push
pop
jge
add
add
xchg
and
pop
add
sub
add
push
pop
jge
add
add
and
add
sub
add
push
jge
add
add
add
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
add
pop
add
sub
add
push
add
adc
inc
add
add
idiv
(bad)
inc
xor
push
add
mov
add
add
xor
add
pop
sub
sbb
add
(bad)
(bad)
inc
and
add
add
and
pop
add
sub
add
push
pop
dec
add
xchg
and
add
sub
add
push
pop
add
add
add
sub
add
sub
add
push
pop
bound
aaa
add
add
and
add
sub
add
sub
add
push
pop
jge
add
add
add
add
add
add
xor
push
jge
add
add
add
or
cmp
add
add
add
add
test
add
sub
add
push
lea
add
add
add
add
and
add
push
jge
add
add
and
xor
add
jge
add
add
sub
add
or
adc
add
add
add
adc
and
add
or
inc
pop
add
sub
add
push
pop
jge
add
add
and
add
xor
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
jnp
add
add
and
add
or
dec
pop
add
sub
add
push
pop
jge
add
add
add
pushf
add
add
dec
pop
add
sub
add
push
pop
jge
add
add
add
adc
pop
add
add
adc
pusha
add
add
add
and
add
or
push
pop
add
sub
add
push
pop
jge
add
add
add
add
add
and
add
xor
add
pop
dec
add
xchg
pushf
add
add
pop
pop
add
sub
add
push
pop
jge
add
add
and
add
xor
add
pop
dec
add
add
and
add
sub
add
push
pop
dec
add
and
add
xor
add
xor
add
idiv
(bad)
call
sub
add
sub
adc
pop
add
add
daa
add
adc
and
add
pop
and
add
and
add
sub
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
es
add
or
jnp
add
add
pop
and
add
xor
add
pop
or
jo
add
sub
add
push
add
push
pop
cmp
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
inc
add
push
add
idiv
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
and
add
pop
jge
add
add
add
add
add
and
add
or
je
add
sub
add
push
pop
jge
add
add
add
add
add
and
add
xor
add
pop
or
jl
add
sub
add
push
pop
dec
add
and
xor
add
xor
add
idiv
(bad)
jmp
add
add
pop
add
push
sub
xor
add
add
add
add
adc
test
add
sub
add
push
add
add
add
sub
add
add
push
and
add
and
add
mov
add
sub
add
push
add
add
add
or
xor
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
jnp
add
add
outs
pop
add
push
and
xor
add
jnp
add
add
mov
add
sub
add
push
add
pop
outs
pop
add
push
pop
or
push
add
jnp
add
add
jnp
add
add
outs
pop
add
push
and
jnp
add
add
pop
and
xor
add
pop
jge
add
add
and
add
pop
jge
add
add
sub
xor
add
add
add
add
add
xchg
pop
add
sub
add
push
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
or
jnp
add
add
or
add
sbb
jnp
add
add
jnp
add
add
add
add
sub
add
push
pop
or
or
and
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
mov
xor
add
or
add
sub
or
or
add
dec
add
add
add
add
add
sub
and
add
pop
jge
add
add
jnp
add
add
movs
pop
add
sub
add
push
das
push
jae
add
or
sub
xor
add
add
adc
ror
add
sub
add
push
lea
add
add
and
or
add
xor
add
or
sbb
pop
and
add
xor
add
pop
or
fmul
add
sub
add
push
pushf
pop
and
or
add
xor
add
xor
sub
push
pop
and
add
xor
add
pop
or
call
xor
add
pushf
pop
and
or
add
xor
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
push
pop
and
add
xor
add
pop
or
hlt
or
add
xor
add
pushf
pop
and
or
add
xor
add
xor
sbb
add
add
(bad)
(bad)
jmp
sbb
pop
and
add
xor
add
pop
or
add
add
sub
add
push
pushf
pop
and
add
sub
add
push
xor
sbb
add
add
idiv
(bad)
inc
jae
add
push
cmp
or
add
xor
add
lea
add
add
and
add
sub
add
push
or
sbb
pop
and
add
xor
add
pop
or
adc
add
sub
add
push
pushf
pop
and
or
add
xor
add
xor
sbb
add
(bad)
(bad)
inc
jae
add
push
cmp
add
add
xor
add
add
add
add
add
sub
add
or
add
add
push
sub
add
xor
add
add
add
add
adc
mov
add
sub
add
push
lea
add
add
and
xor
add
lea
add
add
and
add
push
or
dec
add
xchg
or
add
sub
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
es
and
adc
adc
adc
and
pop
add
sub
add
push
pop
sahf
or
enter
sub
add
push
pop
or
add
inc
add
add
idiv
(bad)
jmp
int3
pop
add
sub
add
push
adc
rol
add
sub
add
push
adc
add
xor
add
adc
cmp
adc
adc
adc
adc
xchg
and
pop
add
sub
add
push
adc
pop
and
pop
add
sub
add
push
pop
bound
add
push
and
pop
add
sub
add
push
xor
inc
add
add
idiv
(bad)
inc
adc
xchg
and
pop
add
sub
add
push
pop
adc
adc
call
xor
add
pop
adc
adc
pop
and
pop
add
sub
add
push
adc
pop
and
pop
add
sub
add
push
pop
arpl
add
pop
add
sub
add
push
pop
adc
adc
and
pop
add
sub
add
push
ds
(bad)
(bad)
call
idiv
(bad)
inc
adc
add
add
add
cld
pop
add
sub
add
push
adc
and
or
add
xor
add
adc
cmp
and
add
sub
add
push
pop
adc
adc
adc
xchg
and
or
add
xor
add
adc
pop
and
add
sub
add
push
pop
bound
add
add
adc
add
sub
add
push
pop
adc
or
or
cmp
add
or
push
and
and
add
sub
add
push
bound
or
popf
adc
and
or
add
xor
add
adc
and
add
sub
add
push
pop
and
or
add
xor
add
pop
bound
or
or
add
xor
add
pop
adc
xor
or
add
xor
add
pop
adc
adc
and
add
sub
add
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
push
adc
cmp
add
add
push
xchg
adc
adc
cmp
add
add
inc
add
add
idiv
(bad)
inc
adc
xchg
adc
add
ins
add
push
adc
adc
and
add
sub
add
push
xor
cmp
add
adc
push
and
or
add
xor
add
bound
punpcklbw
adc
and
add
sub
add
push
adc
and
add
sub
add
push
pop
bound
adc
adc
inc
or
add
xor
add
xor
add
idiv
(bad)
(bad)
cmp
jnp
add
add
adc
dec
or
add
xor
add
pop
xchg
adc
and
add
xor
add
adc
and
add
sub
add
push
pop
and
add
xor
add
pop
bound
adc
adc
pop
or
add
xor
add
arpl
adc
jnp
add
add
adc
adc
pop
or
add
xor
add
arpl
push
and
add
sub
add
push
bound
punpcklbw
adc
and
add
xor
add
adc
and
add
sub
add
push
pop
bound
adc
adc
adc
mov
adc
adc
ins
or
add
xor
add
and
add
sub
add
push
adc
pop
and
add
xor
add
pop
bound
adc
and
add
sub
add
push
pop
adc
adc
add
(bad)
jmp
add
add
xor
add
add
adc
and
add
xor
add
outs
push
add
push
and
or
add
xor
add
aas
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
xchg
and
add
sub
add
push
xor
sbb
add
add
(bad)
(bad)
inc
pop
and
xor
add
pop
outs
push
add
push
pop
and
add
push
arpl
pop
and
xor
add
arpl
pop
and
add
push
pop
or
add
push
and
add
sub
add
push
xor
add
push
and
add
push
arpl
or
pop
and
xor
add
pop
outs
push
add
push
pop
and
add
push
arpl
add
add
push
and
adc
push
add
push
and
cmp
add
push
and
xor
add
arpl
or
and
add
push
pop
adc
sub
add
(bad)
(bad)
inc
pop
and
xor
add
pop
outs
push
add
push
pop
and
add
push
arpl
and
xor
add
sub
outs
push
add
push
and
adc
push
and
cmp
add
xchg
or
and
add
push
xor
pop
and
or
add
xor
add
pop
adc
add
add
idiv
(bad)
inc
pop
and
or
add
xor
add
pop
outs
push
add
push
pop
and
or
add
xor
add
arpl
and
or
add
xor
add
sub
xor
add
add
add
add
add
sub
add
or
add
xor
pop
add
add
add
add
aam
add
sub
add
push
lea
add
add
add
aaa
add
push
cmp
add
in
add
sub
add
push
lea
add
add
add
aaa
add
push
add
add
test
add
xor
add
lea
add
add
add
aaa
add
push
or
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
push
add
add
add
add
add
sbb
add
daa
add
add
add
add
add
sub
add
and
add
sub
add
push
outs
push
add
push
jge
add
add
jnp
add
add
and
add
sub
add
push
das
push
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
push
sub
and
add
sub
add
sub
add
push
pop
jge
add
add
and
add
sub
add
push
outs
push
add
push
add
xor
add
sub
add
push
jge
add
add
add
xor
add
sub
add
push
outs
push
add
push
and
add
jnp
add
add
cmp
add
sub
add
push
das
adc
add
idiv
(bad)
jmp
cmp
add
sub
add
push
sub
and
add
inc
or
add
xor
add
pop
jge
add
add
and
add
xor
add
outs
push
add
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
push
add
add
add
add
and
add
sub
add
push
jge
add
add
add
dec
or
add
xor
add
outs
push
add
push
and
add
jnp
add
add
push
or
add
xor
add
das
adc
add
idiv
(bad)
jmp
push
or
add
xor
add
sub
and
add
pop
or
add
xor
add
pop
jge
add
add
and
add
xor
add
outs
push
add
push
add
pusha
or
add
xor
add
lea
add
add
add
add
and
add
xor
add
jge
add
add
and
add
sub
add
push
jge
add
add
jno
and
add
xor
add
outs
push
add
push
and
jo
add
sub
add
push
das
adc
add
idiv
(bad)
jmp
je
add
sub
add
push
sub
and
add
sub
add
push
outs
push
add
push
add
add
add
dec
add
add
jnp
add
add
push
rcr
add
jl
add
sub
add
push
pop
jge
add
add
jnp
add
add
jnp
add
add
jle
(bad)
call
inc
add
add
idiv
(bad)
inc
add
add
add
arpl
add
jge
add
add
adc
inc
add
add
and
xor
add
jge
add
add
and
add
push
jge
add
add
dec
add
add
add
and
add
adc
mov
add
sub
add
push
pop
jge
add
add
add
pop
shl
add
add
add
add
add
jnp
add
add
or
mov
add
sub
add
push
sub
jnp
add
add
outs
add
push
and
add
sub
add
push
pop
sub
sbb
add
add
(bad)
(bad)
inc
and
add
push
das
adc
add
idiv
(bad)
jmp
cwde
or
add
xor
add
sub
and
add
push
xor
sbb
add
add
(bad)
(bad)
inc
and
xor
add
jge
add
add
pop
and
add
push
pop
jge
add
add
and
xor
add
jge
add
add
inc
add
add
jnp
add
add
or
or
add
push
and
lods
or
add
xor
add
das
adc
add
idiv
(bad)
jmp
mov
add
sub
add
push
sub
or
add
push
or
add
add
jnp
add
add
pop
or
inc
add
add
and
add
adc
mov
add
sub
add
push
pop
jge
add
add
add
jnp
add
add
or
add
xor
add
pop
or
add
xor
add
xor
add
jnp
add
add
or
ror
add
xor
add
sub
and
or
add
xor
add
jge
add
add
ret
inc
add
xor
add
add
add
jnp
add
add
push
add
add
add
add
add
enter
sub
add
push
push
and
or
add
xor
add
add
add
add
mov
jae
add
push
sub
add
adc
push
add
add
adc
jnp
add
add
push
add
add
add
add
add
jnp
add
add
and
or
add
xor
add
add
add
add
mov
jae
add
push
sub
add
adc
add
add
add
adc
imul
add
xor
add
lea
add
add
add
aaa
add
push
or
add
mov
xor
add
lea
add
add
add
aaa
add
push
or
add
ror
add
sub
add
push
lea
add
add
and
or
add
xor
add
lea
add
add
and
or
add
xor
add
or
inc
jle
add
add
and
or
add
xor
add
push
pop
and
or
add
xor
add
bound
ins
add
push
and
add
add
and
add
xor
add
pop
or
jmp
xor
add
pushf
push
and
or
add
xor
add
xor
add
add
and
or
add
xor
add
push
pop
and
or
add
xor
add
bound
ins
add
push
and
add
add
and
add
xor
add
pop
or
std
or
add
xor
add
pushf
push
and
or
add
xor
add
xor
add
add
and
xor
add
push
pop
and
or
add
xor
add
bound
ins
add
push
and
add
add
and
add
xor
add
pop
or
adc
add
sub
add
push
pushf
push
and
xor
add
xor
add
idiv
(bad)
call
sub
add
sub
dec
add
add
and
or
add
xor
add
push
pop
and
xor
add
bound
ins
add
push
and
add
add
and
add
xor
add
pop
or
and
xor
add
pushf
push
and
or
add
xor
add
xor
add
idiv
(bad)
jmp
sub
xor
add
lea
add
add
and
or
add
xor
add
lea
add
add
and
xor
add
or
cmp
add
add
push
and
or
add
xor
add
bound
ins
add
push
and
add
add
and
xor
add
pushf
push
and
add
sub
add
push
pop
or
and
add
sub
add
push
xor
add
or
test
add
add
add
jle
add
add
and
add
sub
add
push
pop
xchg
and
add
sub
add
push
bound
add
add
and
add
sub
add
push
arpl
push
or
add
xor
add
pop
xchg
and
add
sub
add
push
bound
dec
add
add
and
add
sub
add
push
arpl
pop
or
add
xor
add
pop
xchg
and
add
sub
add
push
bound
dec
add
add
and
add
sub
add
push
arpl
xor
add
add
add
add
add
add
push
or
add
xor
add
sub
add
xor
add
add
add
outs
xchg
add
or
add
or
add
sub
add
push
bound
add
add
xor
add
add
add
sub
add
and
add
push
and
add
sub
add
push
bound
add
add
mov
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
stc
pop
loopne
push
and
add
add
mov
add
mov
add
xor
add
add
add
add
add
add
inc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
add
add
rol
add
add
add
add
lods
add
add
loopne
add
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
mov
add
and
add
mov
add
add
add
add
pusha
cs
ins
outs
arpl
add
add
add
add
add
add
add
add
inc
add
inc
cs
jb
add
add
add
add
add
mov
add
inc
add
inc
adc
add
add
add
dec
add
add
add
add
add
or
add
add
add
push
and
add
stos
add
xor
add
add
add
add
and
pop
fwait
pop
push
popa
movs
push
mov
dec
dec
rol
xchg
jge
shl
lea
mov
xchg
cli
pop
iret
sbb
(bad)
clc
aad
xor
ins
inc
mov
add
into
ret
sbb
pop
out
in
scas
jns
inc
test
mov
in
pop
xchg
or
ret
gs
arpl
and
dec
and
and
lea
push
dec
add
pusha
xor
fisub
xor
and
in
inc
sub
fdivr
ds
sub
push
sbb
mov
clc
ret
adc
inc
int3
bnd
jg
adc
mov
xor
jo
ror
cmp
retf
cmp
fisttp
pop
(bad)
iret
sub
test
mul
(bad)
jmp
dec
pop
ins
push
pop
pop
mov
pop
fs
clc
cs
shl
mov
jp
push
inc
arpl
stos
push
inc
mov
mov
test
retf
pop
loope
pop
push
xor
iret
loopne
and
push
nop
pushf
(bad)
jp
stc
loopne
jmp
std
pop
pop
xchg
adc
mov
mov
mov
inc
dec
mov
std
out
dec
mov
sbb
fcom
cmp
pop
mov
js
int
shr
mov
int
scas
enter
stc
arpl
mov
mul
cmp
pushf
sbb
sub
ins
mov
mov
pop
aaa
mov
cs
sub
mov
xchg
lahf
cmp
int
int
ins
jno
mov
mov
lods
rol
mov
pushf
bound
sub
cdq
push
enter
cmp
cld
lds
lock
mov
movs
push
jne
arpl
inc
cmp
fwait
outs
sti
rcl
dec
pop
fsub
sub
sub
retf
ja
ins
ds
and
adc
mov
cdq
popf
movs
mov
out
ficom
pop
fimul
in
or
push
das
mov
test
add
cs
(bad)
leave
or
mov
mov
stc
mov
daa
loope
ret
leave
arpl
cdq
cmp
sub
sub
movntps
xor
dec
add
jbe
popa
cwde
stc
add
cmp
pusha
and
mov
mov
xor
xchg
scas
push
nop
pushf
mov
dec
xor
push
inc
mov
inc
cmp
jne
pop
mov
inc
clc
and
sub
dec
push
or
pusha
movs
cmp
lods
add
mov
adc
not
sar
test
call
sub
call
cmp
inc
jle
mov
stos
sub
pop
add
mov
ss
into
leave
mov
dec
sahf
sub
sub
mov
pop
test
(bad)
adc
sbb
ds
push
sub
aad
inc
cmp
cmp
mov
pop
ss
stos
cwde
xor
sar
pushf
cmps
in
mov
in
sbb
hlt
or
push
pop
add
into
jp
push
inc
pop
cmp
(bad)
push
pushf
push
inc
xchg
shl
sti
xor
mov
sbb
ds
push
out
(bad)
lahf
inc
mov
aaa
sti
inc
pop
es
mov
and
and
and
hlt
or
shr
fmulp
jne
push
mov
data16
xchg
mov
dec
dec
test
(bad)
pop
out
mov
adc
imul
lock
das
add
(bad)
ins
repz
pop
mov
sub
cmp
mov
popa
loopne
pop
sti
xlat
sbb
cld
fbstp
cmp
jmp
dec
jno
or
je
pop
ret
mov
xor
hlt
out
nop
pop
sbb
xchg
mov
std
call
or
push
dec
cld
daa
push
cmps
dec
inc
mov
into
add
push
nop
in
xlat
sub
inc
pop
nop
in
cmp
or
pop
add
shl
add
dec
mov
add
or
xor
aad
in
repz
sti
add
add
add
ret
icebp
and
add
add
pop
(bad)
mov
ja
sub
jmp
cmp
push
cmovne
push
sub
daa
mov
jo
mov
inc
ins
lahf
es
loope
ret
sbb
and
mov
fild
or
sbb
data16
or
jecxz
sub
cs
pop
pop
add
jge
push
inc
inc
push
jg
and
jg
jge
adc
icebp
sbb
test
and
mov
pop
mov
jae
scas
jmp
dec
jae
shl
sahf
stos
xor
mov
pop
mov
inc
hlt
and
lock
jnp
iret
mov
inc
jmp
jl
sub
stos
rcl
or
push
fstp
xchg
loopne
fsubr
mov
mov
inc
fmul
pushf
in
mov
fidiv
(bad)
out
mov
inc
mov
xchg
inc
cwde
lahf
mov
hlt
dec
adc
adc
into
ja
mov
mov
(bad)
dec
jl
paddsw
jae
add
cmps
popa
sbb
hlt
pop
lea
into
mov
jns
jae
mov
test
add
jg
retf
in
test
jle
loope
lsl
outs
pop
lahf
sub
lds
gs
mov
or
pop
add
outs
adc
repnz
jne
das
jne
lods
ss
mov
and
pop
nop
sbb
pop
fwait
pop
mov
jb
js
and
xor
mov
cdq
dec
sbb
mov
movs
pop
call
ds
movs
(bad)
(bad)
call
loope
fwait
xchg
inc
cmps
pusha
cmp
popf
aam
test
mov
nop
adc
sub
outs
fdivr
mov
inc
outs
ds
icebp
pop
xchg
into
fadd
pop
xor
add
and
jg
sbb
mov
xchg
inc
fnstenv
inc
and
mov
int
dec
(bad)
scas
retf
shl
jle
or
int3
pushf
mov
and
pop
dec
xor
adc
pcmpgtw
mov
pop
inc
and
jg
fild
pop
mov
dec
scas
adc
pop
jmp
mov
mov
jge
pusha
ins
push
out
sub
sub
pop
and
adc
ror
and
jae
push
sub
mov
repz
pop
cmp
push
ja
xchg
jo
das
cmp
scas
adc
or
mov
out
lds
xor
(bad)
icebp
and
pop
or
jmp
rcr
ret
sar
sti
data16
cmp
std
dec
repnz
inc
test
push
cmp
and
push
leave
sub
inc
push
sbb
and
xor
fmul
xchg
pushf
mov
xor
stos
jb
fld
dec
stc
sbb
add
sub
mul
jp
pop
xchg
push
jmp
mov
(bad)
(bad)
pop
sbb
dec
add
(bad)
mov
lods
(bad)
aam
je
inc
mov
fwait
dec
cmp
jge
lea
mov
lahf
imul
xor
fld
dec
inc
mov
out
mov
stos
das
cmps
mov
clc
dec
adc
fild
(bad)
pop
lods
rcl
mov
sti
xor
je
scas
sub
and
out
jnp
ds
retf
push
sbb
or
inc
repz
stos
add
adc
inc
xor
addr16
outs
push
jne
inc
ins
je
push
outs
addr16
xor
arpl
jns
imul
jo
ins
arpl
ins
pop
pop
push
ins
pop
inc
inc
xor
push
outs
adc
imul
dec
jp
xor
xor
dec
cmp
jae
push
jo
adc
push
xor
jne
ins
push
jp
xor
pop
xor
add
addr16
xor
cmp
inc
dec
push
inc
push
push
je
jp
xor
dec
push
addr16
push
addr16
xor
dec
push
inc
inc
dec
push
dec
js
push
ins
inc
dec
push
xor
ja
inc
ins
push
pop
push
jo
xor
pop
inc
inc
xor
inc
push
push
xor
addr16
ins
push
addr16
ins
cmp
bound
cmp
ja
dec
inc
cmp
inc
cmp
cmp
cmp
ins
arpl
cmp
arpl
ins
arpl
cmp
cmp
ins
arpl
cmp
arpl
ins
arpl
cmp
jae
dec
push
jns
push
cmp
push
cmp
xor
push
or
dec
jns
xor
or
je
push
cmp
xor
cmp
xchg
add
jnp
jge
lds
or
cdq
cs
mov
lods
xor
xor
xchg
enter
adc
add
cmp
jmp
int
push
xor
jns
sub
pop
jno
mov
cmp
add
not
jl
int3
es
pop
xchg
fwait
cmp
arpl
je
push
mov
(bad)
mov
cmp
imul
mov
ficom
ins
pusha
jno
test
jp
adc
jb
sbb
mov
(bad)
cmps
adc
lea
jb
inc
dec
cdq
das
xchg
jl
dec
repz
push
outs
adc
out
push
xor
add
(bad)
mov
hlt
das
push
shl
mov
mov
jnp
jne
adc
push
and
rcr
test
add
sub
mov
mov
leave
mov
xor
jmp
dec
into
sbb
bound
rcr
push
jnp
dec
mov
std
cmp
mov
retf
js
mov
sub
push
mov
scas
retf
adc
out
lods
or
or
aad
push
ss
jecxz
mov
mov
hlt
inc
fistp
pop
ret
xor
dec
pop
pop
stos
xlat
sbb
arpl
jmp
icebp
add
add
adc
sbb
xchg
imul
imul
pop
add
xor
lahf
popw
cwde
bound
iret
push
int3
repz
push
fs
xor
es
add
fild
stc
and
pop
inc
jle
jmp
pop
idiv
sbb
xchg
mov
or
int
test
clc
cs
scas
std
ror
aad
jne
push
pop
add
pop
in
movs
pop
clc
jmp
fwait
call
and
mov
xor
scas
adc
xor
sti
ret
mov
lods
daa
sub
daa
leave
or
(bad)
into
repnz
xor
cdq
shl
jno
adc
repnz
inc
call
fwait
movs
pop
mov
shr
stos
cmc
ret
jecxz
call
mov
cmc
aas
mov
out
fisttp
add
movs
inc
mov
mov
push
mov
pop
add
out
adc
xor
xor
jg
out
sub
mov
cmp
shl
mov
lea
(bad)
cwde
jno
push
cmp
ja
dec
xchg
adc
lds
adc
add
jl
or
push
imul
aaa
pushf
inc
jmp
pusha
add
adc
fild
mov
xor
into
push
mov
push
paddsw
cld
dec
pop
cvtps2pi
adc
jg
xor
pop
mov
out
xor
jmp
xor
fwait
add
cwde
movs
lods
sub
repnz
mov
pop
inc
or
jle
aad
and
inc
xchg
jae
mov
push
sbb
sahf
add
mov
shl
es
outs
aas
jnp
cwde
cld
xchg
out
xor
cmc
mov
jle
adc
jns
pop
pop
div
mov
mov
jbe
icebp
gs
sar
rol
rcr
sar
mov
mov
dec
(bad)
ficom
or
sub
repz
sub
or
mov
loopne
push
out
push
jle
or
push
enter
jmp
sbb
push
ins
icebp
xor
mov
xor
dec
jbe
shl
sahf
mov
mov
inc
aas
mov
cmp
and
imul
push
cdq
sbb
xchg
dec
cwde
mov
push
mov
push
fisub
aaa
mov
sbb
fnstsw
xchg
pop
sub
sub
pushf
cmc
ins
dec
js
sub
push
mov
or
sbb
adc
cmp
adc
aam
je
sar
cli
out
mov
fwait
pushf
xchg
jle
cmp
mov
loope
xchg
fild
shl
xor
or
in
dec
mov
out
or
in
(bad)
xor
xor
mov
dec
icebp
in
push
arpl
mov
and
mov
inc
loope
inc
retf
pop
hlt
(bad)
rcl
xchg
pop
mov
mov
dec
xor
retf
scas
cmp
jl
mov
xor
cmp
pop
adc
pop
or
lahf
outs
ret
outs
test
mov
sbb
cmps
ss
pop
mov
pop
inc
xor
mov
push
das
call
sbb
sbb
(bad)
int
packuswb
je
in
fbld
xor
sbb
dec
sar
inc
lds
popa
cmc
pop
sub
sub
test
lea
mov
das
push
mov
xchg
out
mov
mov
or
inc
xchg
cmp
and
xor
je
dec
aas
retf
test
add
jle
(bad)
sahf
cld
popf
mov
jecxz
sti
sbb
or
fidivr
sbb
iret
mov
and
cmp
xor
jno
aaa
fucom
jbe
jmp
cdq
pop
add
fxch
mov
jae
jecxz
sbb
mov
sub
pop
or
bound
icebp
mov
cld
push
out
es
cmp
rol
loop
in
ss
xlat
push
fwait
or
push
(bad)
(bad)
in
mov
mov
mov
jnp
add
pop
jbe
lods
push
je
rcr
xorps
jmp
jo
sub
xor
inc
std
mov
ins
fwait
mov
pop
leave
cs
ds
sub
mov
jns
or
mov
xchg
lahf
mov
mov
inc
jnp
or
and
test
rcl
push
imul
lds
setno
inc
data16
inc
mov
xor
dec
imul
pop
adc
aam
imul
stc
hlt
and
sar
in
(bad)
xlat
cli
dec
jns
cmp
je
jecxz
out
mov
sub
data16
es
aam
movs
es
mov
xchg
xchg
jbe
push
jmp
pusha
pop
sub
frstor
pop
outs
jmp
out
es
inc
xor
aaa
nop
mov
jmp
je
out
pop
pop
xor
stos
pusha
mov
mov
xchg
xor
shl
mov
ds
mov
cmp
cli
shl
std
sub
iret
cmp
loop
or
jno
pop
dec
mov
retf
das
push
pop
adc
and
pop
mov
adc
int
mov
xchg
xor
test
popf
add
call
push
cmp
shr
ja
pop
inc
pop
pop
cmc
pop
dec
stos
imul
mov
test
cld
adc
ret
stos
sub
xor
inc
std
xor
cdq
push
adc
adc
idiv
cmp
jne
pop
dec
jno
jo
jmp
adc
std
mov
out
adc
mov
pop
push
xchg
rcl
call
dec
std
cs
cmps
cmp
cmc
stos
and
std
fwait
and
loop
hlt
(bad)
scas
xor
test
pop
xchg
mov
cmp
push
pop
cli
xor
outs
idiv
pop
scas
jmp
iret
mov
cwde
(bad)
fidiv
sbb
xchg
mul
add
mov
aad
jge
adc
test
pop
inc
adc
fadd
cmc
sti
enter
push
shr
repnz
sbb
mov
jnp
and
test
mov
push
dec
mov
aam
data16
pushf
stos
mov
pop
dec
xor
data16
sbb
sub
adc
jb
les
sub
mov
inc
xor
xor
mov
sub
and
jae
scas
cmp
test
leave
jns
test
leave
cli
sbb
mov
into
mov
or
mov
jg
outs
or
fsubr
les
(bad)
mov
out
pop
and
clc
or
and
lods
jecxz
add
pusha
into
imul
cmps
out
xchg
push
out
xor
mov
sub
xor
adc
xchg
aas
test
dec
sar
xor
or
pop
inc
loope
in
dec
cs
dec
xchg
xor
lock
aam
std
push
mov
cmp
inc
leave
push
add
xchg
sbb
inc
fidiv
xchg
ret
push
mov
mov
or
out
loopne
repnz
adc
pop
jmp
mov
and
xchg
or
fwait
push
pop
dec
es
and
push
push
dec
jb
or
or
sahf
push
cli
xlat
mov
xchg
movs
and
fisubr
pop
pop
xchg
xchg
or
push
(bad)
scas
xor
test
shr
fdiv
fnsave
test
aad
in
or
dec
cld
gs
shl
fiadd
sbb
xchg
mov
and
cmp
add
jg
enter
mov
shr
sbb
pop
sbb
rcl
adc
inc
pop
movs
push
push
dec
mov
rol
xrelease
loopne
aad
scas
in
push
xchg
loope
mov
repnz
and
and
aad
addr16
push
sar
out
das
cdq
xchg
mov
adc
fist
(bad)
out
add
addr16
dec
sahf
call
pusha
xlat
in
aad
mov
cmp
stc
in
add
test
rcl
pop
fmul
fdivr
sti
mov
cli
pop
nop
aam
je
push
lods
sbb
neg
data16
fwait
sub
fisub
adc
stc
sahf
cmp
jp
lea
fimul
or
retf
xor
pop
sahf
fld
test
ss
pusha
pop
mov
in
mov
adc
push
and
imul
fsubr
sub
out
mov
mov
inc
inc
push
jne
cmp
push
sbb
cmp
daa
sbb
cmps
push
popf
hlt
cvttps2pi
shl
sar
mov
cmps
jmp
cmps
cmp
jno
cmp
mov
fwait
xchg
imul
push
fs
aaa
jp
xor
sbb
in
not
push
aam
xor
(bad)
fild
add
pop
aaa
fsub
jmp
jae
xchg
out
lahf
push
rcr
cmp
push
mov
int3
mov
sbb
imul
aad
les
or
mov
fistp
mov
test
or
fstp
push
popf
add
add
mov
jecxz
and
outs
bound
fcmovu
xchg
ins
sbb
movs
sar
mov
aaa
push
ins
dec
push
icebp
inc
(bad)
and
and
nop
add
jns
scas
rol
push
mov
(bad)
jge
fld
inc
dec
inc
and
jns
jmp
call
cmps
cmps
jbe
xor
aam
jb
mov
cmp
popa
push
xchg
iret
jne
clc
cli
test
in
fnsave
imul
sbb
push
fidiv
mov
rol
dec
push
and
jns
(bad)
out
movs
retf
pop
sub
shr
jbe
xor
or
ds
adc
aad
aas
sub
and
push
fild
add
mov
xlat
(bad)
aam
div
fmul
add
sbb
xchg
popf
mov
push
scas
shr
mov
popa
dec
shr
cmc
mov
outs
in
nop
or
cli
js
in
adc
inc
xchg
ins
jecxz
shr
sub
aam
jp
xor
xchg
jns
inc
mov
inc
jae
jno
out
fwait
mov
pop
cmc
imul
cmps
xor
cmp
jo
sbb
push
xchg
dec
enter
cmp
call
sub
fcom
leave
aam
sub
inc
mov
ins
ret
shl
cld
fwait
pop
(bad)
neg
pop
out
or
add
stos
jp
mov
xchg
arpl
sub
xchg
test
mul
fwait
cmp
(bad)
cmp
fsubr
cmp
mov
dec
out
xchg
fucomip
lods
adc
test
and
xchg
rcl
lods
adc
bound
or
idiv
(bad)
hlt
xchg
mov
mov
movs
vshufps
and
scas
cmps
mov
dec
call
aaa
jp
mov
cmc
or
sahf
out
shl
(bad)
sub
mov
outs
mov
hlt
jmp
jecxz
pushf
dec
mov
(bad)
outs
or
aam
aad
(bad)
push
jle
mov
fwait
xor
cwde
shl
std
pop
outs
xlat
push
cmps
fcom
inc
sbb
or
mov
fst
push
mov
cli
fwait
icebp
ins
mov
jle
gs
xchg
push
ficom
pusha
dec
out
data16
and
jecxz
mov
pop
nop
(bad)
cli
mov
dec
mov
xchg
adc
popa
pop
xor
in
cmp
lods
pop
and
xor
aas
stc
sub
inc
(bad)
lock
xchg
sbb
push
jl
das
jae
push
sahf
adc
mov
jo
push
test
lock
push
add
dec
inc
mov
cs
cmc
(bad)
or
mov
jns
xchg
pushf
(bad)
dec
shl
inc
xor
or
out
mov
dec
out
jp
push
jae
popa
icebp
xchg
fnstsw
ror
repz
xchg
scas
repnz
xor
dec
and
jp
not
cli
xchg
fdiv
cmc
xchg
pop
pop
push
(bad)
in
jne
and
xor
xor
cs
adc
sbb
cmp
inc
add
gs
mov
fwait
stc
lahf
inc
loop
inc
sbb
push
jbe
xor
aas
mov
stos
push
dec
add
jl
lock
stos
ficomp
dec
fsub
and
gs
xlat
inc
inc
enter
dec
sbb
sbb
adc
and
loopne
jmp
inc
loop
in
stos
mov
sub
shl
fwait
and
scas
push
inc
add
fidiv
or
pop
mov
aas
cdq
cmp
fstp
lods
jmp
mov
and
ficom
lock
dec
fmul
dec
add
shl
push
sub
cmp
idiv
xor
data16
pop
jmp
xor
shl
cmp
dec
pop
jecxz
jmp
icebp
pusha
add
xor
loope
adc
fisttp
pop
cmp
inc
sub
sti
pop
add
shr
icebp
shl
retf
jp
stc
push
add
jne
imul
sti
mov
frstpm(287
inc
in
or
add
mov
sbb
inc
jmp
lock
mov
movs
cmp
outs
ins
lods
or
mov
push
sbb
inc
pop
cmp
pop
mov
loopne
mov
test
int3
fnsetpm(287
mov
dec
in
cmp
sahf
aad
sbb
cmp
and
(bad)
(bad)
sub
mov
jge
dec
pop
xor
(bad)
lock
inc
pop
shl
dec
hlt
adc
and
pop
cld
xchg
neg
xchg
mov
jne
inc
xchg
mov
jmp
outs
adc
pusha
int
pop
or
enter
shl
pop
or
mov
inc
sar
push
ds
mov
loop
add
daa
cwde
lahf
(bad)
fnclex
test
xor
sub
je
outs
pop
xor
xor
jl
cmps
ss
(bad)
xor
push
push
push
xor
or
das
and
mov
loopne
jno
pushf
inc
pop
cmps
(bad)
push
jne
xchg
mov
cmps
dec
sub
cmp
cmp
stc
ja
loop
add
imul
hlt
dec
and
outs
add
sbb
mov
or
vcmpps
std
scas
test
pop
loop
fadd
xchg
dec
ja
pushf
mov
jne
adc
rep
outs
push
mov
cmp
fadd
pop
jae
sbb
in
jno
mov
fcomp
sub
shr
mov
mov
test
pushf
hlt
pop
ror
clc
fldcw
cli
and
sti
mov
push
ficomp
das
dec
push
xor
and
call
dec
fsubrp
mov
push
dec
and
xchg
xor
xchg
inc
sti
xor
dec
pop
leave
pop
clc
jp
xor
jmp
test
and
das
sub
popa
sbb
or
popa
inc
imul
leave
data16
outs
je
jno
fisttp
mov
scas
mov
inc
adc
jb
inc
test
bound
bound
fldcw
scas
and
mul
outs
push
jnp
adc
pop
mov
dec
lahf
and
or
inc
inc
test
dec
fwait
rep
adc
or
fnstenv
in
loop
popf
push
inc
xor
(bad)
cli
jnp
jnp
cmc
loopne
(bad)
popa
mov
pop
(bad)
aad
jge
xlat
pop
xchg
lods
and
and
xchg
(bad)
fld
stos
call
inc
xor
jne
jmp
inc
jne
loopne
ins
cmp
mov
dec
pop
push
xor
out
push
mov
jmp
sahf
sbb
stc
cs
and
les
add
jp
ds
fistp
cmp
push
jnp
arpl
fistp
xor
in
out
pop
sub
gs
push
cld
mov
sti
rcl
movs
sbb
retf
lods
adc
dec
test
sahf
sub
arpl
dec
(bad)
lea
xor
mov
mov
sub
scas
loopne
in
push
shl
add
call
fcom
js
retf
lahf
outs
pusha
mov
mov
movs
lock
jmp
inc
inc
rcr
mov
addr16
pop
rol
cmp
call
aad
jge
inc
or
cmp
jae
outs
sbb
mov
mov
xchg
jbe
jo
pusha
in
sbb
xchg
adc
div
jo
xchg
aas
dec
or
je
repnz
mov
pop
mov
sbb
xor
imul
jnp
test
xchg
mov
leave
aam
in
loop
sbb
adc
dec
fsubr
xlat
mov
jo
inc
retf
and
mov
inc
xor
xor
push
test
sahf
adc
push
aad
nop
data16
jo
sub
pop
mov
ret
jmp
hlt
out
clc
sub
ss
pop
push
mov
mov
mov
adc
xor
dec
and
mov
xchg
fidiv
or
xor
jge
(bad)
in
in
fsubr
dec
mov
inc
test
add
lahf
cs
add
pop
xlat
dec
repnz
test
xor
jmp
mov
shr
adc
fimul
or
outs
out
jns
daa
outs
imul
xchg
push
clc
mov
ror
test
je
(bad)
inc
fimul
dec
ja
ds
cmp
test
jge
popa
scas
cdq
repz
outs
aaa
push
sub
adc
and
popa
je
dec
jbe
arpl
out
dec
add
cs
jo
ins
out
int
mov
call
mov
mov
mov
js
lods
cwde
mov
out
or
rcr
lahf
push
mov
data16
mov
or
mov
and
jge
dec
push
add
dec
nop
and
xor
fcomp
retf
hlt
mov
outs
add
dec
jno
cmp
int3
mul
adc
nop
xor
add
dec
and
push
out
daa
cmp
pop
jnp
stos
jl
js
sub
pop
jbe
mov
and
ret
es
popf
inc
int
or
aam
sti
ds
in
mov
stos
pusha
inc
cmp
add
push
adc
or
cmps
and
or
pop
shl
mov
fucomi
test
aas
mov
cwde
test
sub
stos
sub
data16
or
loop
and
ins
pop
add
jno
scas
in
and
call
mov
fcom
call
test
cwde
xchg
push
and
jg
add
mov
sbb
mov
test
lea
(bad)
bound
enter
dec
out
sub
in
push
loope
mov
sahf
and
push
test
inc
xchg
inc
jle
jl
xlat
dec
pusha
fs
aad
inc
inc
push
and
stos
and
cli
mov
jmp
xlat
sbb
cmp
xchg
aad
push
mov
hlt
and
push
bound
sub
stos
(bad)
xor
idiv
mov
lods
inc
xor
push
mov
int
xor
jge
dec
mov
xchg
aad
sbb
inc
in
mov
xchg
mov
stos
int3
test
mov
and
sub
mov
pop
out
icebp
add
in
push
push
stc
dec
jg
jecxz
ss
dec
je
popa
sub
pop
jmp
inc
(bad)
add
dec
cmp
push
jg
fmul
(bad)
imul
pop
outs
sbb
gs
push
cli
add
neg
xchg
adc
sub
pop
xor
aaa
mov
push
mov
out
ret
push
sbb
hlt
stc
adc
and
out
(bad)
mov
jno
cmc
popf
test
jmp
add
pop
aam
rcr
in
ret
pop
ret
xchg
adc
in
daa
sbb
lods
inc
mov
pushf
aam
iret
cmp
sub
dec
mov
lds
fs
daa
jg
pop
and
push
mov
cs
fsubr
test
fcmove
and
out
sub
mov
sbb
sub
data16
xchg
lods
mov
cmp
stc
stc
call
mov
ds
mov
mov
sbb
inc
das
outs
es
ja
push
jl
mov
das
mov
cmp
std
push
loopne
cs
icebp
mov
mov
imul
int3
mov
aam
mov
xchg
shr
test
mov
jg
rol
addr16
lods
xor
or
retf
and
sbb
xchg
jg
pop
int
mov
and
cmp
mov
ret
retf
and
pop
sar
nop
fstp
pusha
jge
rcl
adc
in
sub
fistp
and
je
mov
fld
mov
scas
xchg
movs
fdivp
pop
or
or
outs
sub
mov
sbb
jae
in
pop
(bad)
mov
fcmovnbe
shr
pop
inc
out
mov
enter
pop
mov
lock
push
repnz
fld
ucomiss
jno
nop
(bad)
mov
aad
sbb
gs
dec
les
test
sbb
pop
loop
sub
sbb
xlat
dec
push
popa
sub
mov
xchg
movs
xrelease
jmp
or
inc
outs
lahf
jp
xchg
inc
adc
fsubr
xchg
pop
pop
icebp
bound
cdq
cmc
int
mov
cmp
fwait
jle
data16
rcl
add
lods
push
adc
jle
jno
cmp
push
mov
jg
cmp
add
nop
inc
cld
lock
inc
dec
or
add
sub
(bad)
xor
and
mov
sar
ror
push
loopne
aad
test
fbld
jnp
test
(bad)
mov
rol
imul
movs
jle
pop
mov
pop
and
push
(bad)
adc
ret
out
jl
fmul
pushf
shr
repz
dec
jl
pop
retf
inc
dec
push
leave
loopne
and
or
arpl
or
inc
scas
loope
stos
sub
ret
jge
mov
ror
jmp
push
mov
cld
mov
mov
gs
or
adc
xchg
mov
pop
popf
inc
ficom
out
push
pop
dec
rcl
popa
(bad)
dec
xor
repnz
lahf
ret
scas
xchg
push
jb
shl
out
test
fs
icebp
or
aaa
jg
xor
pop
fwait
jp
add
push
movs
int3
scas
cdq
rcl
leave
outs
mov
adc
cmp
mov
sbb
dec
xchg
cmp
mov
mov
add
ret
add
fdiv
daa
and
lea
adc
aam
mov
in
sbb
cli
retf
mov
sbb
ins
xchg
pop
pop
and
adc
jne
mov
bound
sti
xchg
sbb
mov
repnz
(bad)
sbb
cwde
test
pushf
fsubr
push
xchg
int
push
js
cli
xchg
jmp
dec
or
gs
iret
inc
daa
fist
test
retf
leave
ins
cld
ss
and
adc
mov
mov
xlat
inc
cwde
adc
cmps
int3
inc
xor
mov
xchg
std
inc
(bad)
bound
add
xor
int
add
outs
scas
shl
mov
mov
sbb
call
icebp
xor
and
popf
fadd
mov
dec
ss
lock
cmp
sbb
xor
pop
or
jns
jge
div
imul
pop
pop
mov
xchg
test
fdivr
mov
or
cli
into
or
xor
retf
or
pop
shl
retf
mov
push
js
ror
inc
jne
sbb
fst
xchg
mov
movs
cmps
xor
out
dec
leave
(bad)
aas
daa
fld
fisubr
sbb
ins
mov
mov
psubd
fdiv
dec
mov
cmp
push
das
mov
lods
cld
shl
xlat
scas
inc
test
retf
mov
mov
jnp
cmp
(bad)
cmps
dec
or
and
mov
movs
mov
cmps
retf
jae
paddd
imul
out
push
inc
mov
nop
scas
stc
mov
enter
xor
and
test
repnz
mov
loope
clc
sahf
inc
mov
call
mov
dec
push
imul
mov
pop
sbb
push
and
int
into
jg
mov
dec
jg
cmp
and
push
push
push
xchg
xor
retf
push
and
sub
cdq
js
mov
dec
shr
mov
iret
lods
add
jl
pop
aas
ja
fst
adc
jae
cmp
pop
push
movs
into
or
mov
dec
pop
or
call
movs
mov
vpshad
xchg
(bad)
push
test
add
imul
push
enter
and
push
sbb
sub
shr
mov
pop
movs
sub
pop
fdivr
mov
push
lds
adc
cmps
mov
add
jbe
pop
add
mov
les
cmp
fs
inc
js
xchg
mov
aaa
adc
shl
mov
add
ficomp
bound
adc
jle
into
jne
lea
repz
dec
popf
mov
mov
inc
loop
imul
imul
mov
stos
xchg
bound
daa
inc
shr
cmp
push
ins
mov
sub
push
and
and
lock
pop
in
mov
sbb
sbb
and
cli
add
ins
data16
sti
fcom
xor
and
aam
add
cld
stc
adc
scas
inc
inc
in
pop
int
dec
(bad)
sar
movs
mov
rol
xor
mov
pop
mov
iret
lods
jno
rcl
popf
or
sbb
inc
stos
jne
jp
adc
mov
shl
inc
dec
pop
sbb
mov
punpcklbw
jecxz
xchg
outs
lods
inc
aam
xchg
imul
ret
cmc
(bad)
cli
imul
add
mov
sbb
mov
jns
jge
mov
sti
outs
hlt
in
xor
scas
sahf
pop
mov
cwde
adc
pop
lea
jmp
sbb
les
sbb
xor
mov
or
cwde
aas
xor
scas
not
push
das
sbb
out
fs
test
sub
test
ins
popa
mov
fdiv
or
inc
ins
dec
push
cmc
ins
or
jecxz
movs
xchg
aas
cmp
shl
lahf
and
cs
nop
pop
and
cmps
cmp
jmp
jecxz
jnp
loopne
icebp
add
jle
jns
lds
sti
add
push
cmp
cld
icebp
dec
dec
push
ss
sub
adc
into
pusha
sbb
cdq
sahf
retf
push
xlat
xchg
in
adc
pushf
jno
test
pop
cmp
mov
sub
cmp
pop
test
retf
pop
pusha
pushw
aaa
cli
xor
jne
ins
div
xchg
xor
jp
popf
in
inc
or
lahf
repz
mov
loop
dec
pop
into
sbb
retf
sub
adc
in
mov
mov
out
mov
jb
dec
jle
xchg
ins
pop
mov
adc
test
jb
mov
add
push
cs
cmp
and
pop
xchg
xchg
repnz
fwait
cli
les
ins
int
icebp
test
fsub
jmp
mov
inc
dec
nop
inc
inc
jl
cmp
mov
and
mov
xlat
(bad)
aad
retf
ret
adc
movs
and
jp
out
pop
adc
pop
scas
call
pop
jbe
push
aaa
pop
mov
lea
jmp
xchg
or
cmp
push
cmps
imul
add
test
mov
punpckhwd
loope
xlat
jae
add
arpl
or
xchg
sbb
in
stos
(bad)
in
pop
pop
and
scas
mov
pop
fadd
loop
rep
sbb
das
addr16
push
jecxz
or
gs
dec
int3
lds
adc
ja
ret
xchg
stc
jns
imul
sbb
cmp
mov
and
pushf
cmp
jge
aaa
pop
and
mov
call
dec
sahf
inc
or
cmp
mov
ins
pusha
mov
(bad)
ins
xor
ja
movs
arpl
stc
add
jge
xor
add
mov
fwait
mov
movs
outs
dec
mov
in
inc
and
call
push
push
push
rcr
mov
xchg
int3
fsub
sti
jle
sar
add
sbb
pushf
pop
jmp
mov
mov
cmp
ja
mov
mov
mov
sub
ss
mov
es
pusha
fcmovnb
je
jmp
xor
ins
dec
or
(bad)
shr
lock
mov
cmps
dec
int3
scas
dec
pop
mov
retf
(bad)
mov
ins
cmp
rol
loop
icebp
out
xor
mov
inc
xchg
shl
jae
les
adc
sbb
in
sbb
sbb
mov
adc
popf
int3
jp
pop
push
sub
(bad)
or
les
test
dec
stos
cmp
xor
inc
(bad)
pop
stos
mov
dec
sub
cld
cdq
sub
pop
xlat
fbld
or
or
push
jae
jnp
shl
repnz
daa
add
xchg
push
lahf
call
pop
adc
(bad)
cmp
test
or
les
dec
xor
jmp
and
sbb
mov
sbb
mov
push
jns
rcl
mov
sbb
(bad)
pusha
daa
(bad)
dec
aaa
xchg
neg
adc
xor
add
jnp
cmp
push
xor
div
jne
xor
mov
mov
in
aas
data16
jno
sbb
push
loope
rcl
sbb
lea
mov
pusha
imul
stos
icebp
adc
or
fsub
dec
fisttp
push
lods
es
test
or
inc
sub
or
push
push
jle
jle
js
fbld
xor
and
aas
(bad)
cmps
neg
fucomp
dec
jns
sub
xchg
xchg
sub
arpl
pop
sbb
out
mov
dec
dec
adc
sub
pop
fst
pop
and
test
push
pop
(bad)
adc
xchg
inc
(bad)
inc
inc
cmp
mov
loope
adc
jo
das
repz
test
fcom
xor
adc
dec
popa
or
addr16
cmp
shl
lods
adc
cmp
cmp
loopne
inc
stos
stos
xor
jne
test
and
int3
adc
pop
popa
fadd
xlat
(bad)
xor
test
push
mov
dec
call
sub
call
xchg
or
or
jecxz
push
inc
retf
sbb
adc
add
jnp
shl
inc
(bad)
mov
cld
jmp
cwde
xor
ret
mov
ds
(bad)
aam
imul
and
in
sbb
cmp
jl
mov
arpl
fild
push
bnd
mov
xchg
fsqrt
mov
push
mov
cld
add
(bad)
loopne
sbb
scas
cmp
xor
frstor
ja
in
jne
push
shl
sub
cmps
mov
dec
xchg
mov
jmp
je
leave
dec
push
mov
jle
adc
fbstp
scas
(bad)
dec
pop
cmp
fwait
pop
mov
jbe
fld
es
mov
shl
clc
sbb
pop
call
in
scas
mov
loop
jge
dec
hlt
jecxz
pop
and
pop
daa
lods
cmp
sub
ins
inc
inc
pushf
(bad)
sqrtps
(bad)
das
mov
fldenv
js
sub
dec
pop
inc
loop
sar
dec
rol
cwde
xchg
push
pushf
xor
xor
andnps
mov
push
xchg
cmp
imul
imul
xchg
fld1
fdiv
xchg
and
iret
ja
jns
repnz
adc
add
mov
and
cmp
xor
inc
inc
cld
jo
fsubr
(bad)
cld
jne
jb
xor
inc
jb
in
and
call
retf
pop
leave
cmps
pusha
jg
call
rcl
clc
cwde
int3
mov
inc
push
fwait
add
mov
mov
scas
pop
jg
cwde
xchg
push
shr
call
mov
imul
mul
(bad)
pop
pop
pushf
pop
cmp
xchg
loopne
cld
pop
push
jg
mov
cmps
iret
jecxz
push
push
push
sub
dec
dec
stos
bound
mov
addr16
push
and
scas
data16
arpl
fnstenv
cdq
retf
add
mul
push
in
xchg
in
hlt
mov
mov
daa
aad
fimul
push
adc
xchg
mov
ins
pop
adc
or
dec
inc
fldenv
lock
inc
sub
jecxz
jl
popf
inc
inc
ficomp
adc
scas
push
les
scas
das
pop
repnz
mov
not
gs
cdq
mov
push
mov
dec
lods
out
cdq
cmp
inc
push
lock
lahf
loop
inc
cmp
jno
int
sti
mov
dec
ror
ins
inc
push
aam
sbb
mov
imul
inc
in
shl
nop
sar
or
cmp
push
iret
in
push
ins
mov
hlt
out
pop
add
sub
or
out
out
pop
out
add
add
fstp
lods
test
xchg
rcl
inc
inc
mov
sbb
jmp
pop
mov
add
stos
out
int
jns
jge
xor
inc
xlat
cli
mov
push
mov
cmp
xchg
pop
icebp
mov
into
sbb
inc
xchg
mov
aad
ficom
movs
ret
jl
int
add
xchg
inc
inc
mov
pop
in
or
jmp
in
call
fwait
(bad)
arpl
lock
inc
mov
sub
add
fdivr
dec
add
outs
rol
rcl
(bad)
daa
leave
fld
fs
lods
xor
out
cwde
mov
dec
dec
cwde
cmp
sub
adc
lds
call
lods
cmps
(bad)
mov
ds
sar
mov
shl
push
cdq
cmp
movs
out
std
xchg
mov
mov
mov
mov
popa
(bad)
aas
dec
jecxz
test
and
ret
push
cmp
daa
fstp
pop
out
mov
mov
and
jbe
inc
xor
fild
out
lahf
les
inc
sub
nop
std
adc
mov
stc
add
clc
mov
xchg
mov
or
jnp
add
cdq
xor
ret
inc
aaa
fwait
cdq
mov
sbb
mov
(bad)
std
pop
jl
sub
jb
sti
and
popf
call
iret
std
push
sbb
test
pop
inc
outs
sub
xchg
mov
cld
sub
cmp
clc
xchg
jg
sbb
jmp
pop
icebp
inc
lods
xor
out
pop
fiadd
fdivr
pusha
cmp
scas
cdq
pop
sub
xchg
jge
cld
outs
mov
push
sub
into
scas
xchg
aam
or
jb
pop
sbb
mov
jne
pushf
fidivr
or
dec
addr16
or
jbe
dec
mov
lods
add
or
or
imul
(bad)
mov
xchg
sbb
(bad)
mov
jne
inc
mov
cmps
cmp
xor
stos
xchg
imul
frstor
mov
frstor
in
pop
nop
add
loope
lea
add
pop
mov
push
in
jo
jns
push
xchg
dec
es
xlat
push
jb
pop
and
sti
movs
adc
dec
fwait
jo
sbb
fstp
jns
ror
add
push
sbb
mov
push
cmps
int3
mov
movs
mov
pop
pop
pop
xor
fwait
or
mov
add
xchg
add
mov
std
mov
daa
dec
movs
ror
jb
mul
leave
mov
jmp
mov
and
push
add
mov
sub
mov
push
loope
pop
xor
ret
idiv
mov
popa
imul
lods
cmps
sbb
inc
adc
scas
mov
loope
scas
scas
cli
cdq
jmp
sub
add
das
ret
jne
xor
into
mov
add
pushf
clc
sti
pop
xor
mov
xchg
fs
mov
xor
aaa
cs
int
mov
xor
lods
cmp
pop
imul
iret
aaa
arpl
mov
pop
xor
aam
retf
in
aaa
add
outs
shr
aaa
addr16
cmp
call
xchg
pop
fldenv
dec
ins
(bad)
mov
lods
jne
lahf
daa
(bad)
pop
sub
jmp
jmp
adc
pop
fxsave
(bad)
mov
mov
and
push
push
cmps
inc
in
mov
(bad)
psubb
xor
add
mov
mov
xchg
shl
mov
mov
adc
push
inc
in
loop
dec
pop
retf
addr16
js
dec
jge
or
rol
scas
(bad)
xchg
int
aas
not
retf
std
mov
pop
fwait
lea
push
dec
xor
inc
xlat
inc
pop
sbb
popa
inc
adc
arpl
aas
arpl
ret
fnstenv
dec
nop
pop
retf
(bad)
jbe
mov
pop
or
stos
fbld
pop
mul
sub
repz
jns
mov
bound
popa
addr16
xor
sbb
jl
ins
inc
into
mov
jae
push
sahf
les
jae
push
scas
stc
movs
or
xchg
dec
xor
cdq
sub
mov
inc
sub
ret
imul
loope
popf
enter
call
xlat
out
fldcw
hlt
dec
push
jnp
or
jno
inc
mov
icebp
popf
in
push
sbb
sbb
xlat
call
stc
daa
or
mov
repz
js
ins
mov
sahf
push
xchg
add
mov
inc
inc
hlt
sub
sbb
clc
mov
dec
shl
clc
out
add
ds
lock
add
ds
xchg
fisttp
cdq
mov
or
(bad)
arpl
in
out
xor
cli
or
jle
pop
in
sub
outs
and
dec
(bad)
out
jl
pop
push
xor
cmovle
adc
jne
jo
cmp
push
xchg
imul
imul
add
jne
(bad)
and
loope
push
mov
inc
inc
cdq
les
xchg
xchg
scas
jb
or
imul
push
imul
sbb
jbe
push
repz
xlat
xor
mov
push
xor
neg
inc
std
ins
add
call
xor
leave
mov
ins
and
adc
cs
inc
xor
push
push
neg
fprem1
dec
nop
call
xor
lock
in
mov
inc
sbb
leave
or
imul
mov
mov
push
jp
xchg
jae
xchg
sbb
fisubr
dec
mov
dec
push
push
push
jp
jmp
outs
push
ret
dec
mov
adc
xchg
jmp
cmc
(bad)
or
pop
scas
idiv
sub
xor
jge
dec
cmp
jnp
fbstp
fcom
adc
push
sub
loope
mov
stos
inc
mov
jmp
push
pusha
jmp
mov
push
call
mov
or
push
ins
imul
or
les
dec
fcom
lock
icebp
or
bnd
out
cmp
pop
pop
push
sub
jns
test
jl
(bad)
push
imul
call
inc
cmc
dec
in
sahf
movs
test
xor
jo
in
fstp
bound
sbb
mov
dec
pop
and
jmp
sahf
cmc
xlat
xor
mov
sbb
cmc
data16
mov
sbb
or
cmps
lahf
test
lock
xor
leave
lahf
mov
out
mov
pop
cld
(bad)
inc
mov
scas
pop
or
cmc
(bad)
mov
popa
jne
mov
test
aad
retf
inc
cmps
shl
sahf
add
inc
retf
inc
push
lea
out
cmp
into
adc
xchg
sahf
ret
imul
ret
pop
dec
push
mov
fcomp
cmc
push
neg
aad
pushf
inc
clc
mov
js
sub
cld
dec
xchg
fistp
data16
das
out
pop
xchg
xor
sbb
shl
jl
into
pop
loope
dec
mov
inc
aam
outs
mov
imul
jbe
dec
inc
or
fwait
sbb
mov
rol
in
enter
dec
adc
(bad)
sbb
jns
ss
cmp
(bad)
pop
push
bound
cmps
les
call
xchg
adc
ds
xor
fwait
int3
and
mov
fimul
mov
lds
stc
xchg
ins
mov
fsubrp
lods
lahf
sbb
pop
sbb
and
cmp
retf
push
mov
add
xor
xor
lea
arpl
adc
xor
cs
(bad)
jmp
outs
push
es
stc
jmp
jge
lods
sub
xor
out
(bad)
mov
loopne
and
paddq
push
xor
sub
je
enter
cmp
js
in
jmp
and
xchg
popa
mov
in
add
lods
mov
jecxz
shr
cmp
inc
std
retf
mov
shr
add
out
fwait
mov
stos
lds
jl
jne
xor
or
inc
int3
stc
jne
jl
fstp
pop
scas
aad
mov
std
int
jns
push
mov
das
mov
push
scas
stos
sar
mov
mov
daa
sub
push
push
inc
pop
add
pop
xor
xchg
or
mov
or
cwde
or
jmp
clc
(bad)
iret
sahf
pop
lods
sbb
dec
ficomp
xor
xchg
mov
mov
mov
shl
push
pop
jb
popf
mov
pop
imul
cld
xchg
jge
int
push
jl
js
pop
clc
ss
mov
push
inc
ds
jle
or
or
cmp
in
cld
clc
dec
mov
repnz
outs
lock
xchg
sub
dec
fild
(bad)
shl
lods
daa
in
dec
xor
mov
or
in
push
ins
dec
and
sbb
retf
mov
mov
sbb
pusha
cmp
in
(bad)
fidiv
fcomp
sub
sbb
push
mov
jecxz
push
sub
gs
mov
mov
jnp
push
mov
xchg
aad
movs
adc
push
(bad)
push
jb
sub
jg
out
add
mov
test
inc
xchg
lahf
lods
cmps
fwait
arpl
or
xchg
int3
dec
jae
out
fwait
inc
xchg
outs
mov
fs
mov
loope
mov
jmp
adc
fs
out
or
dec
fdiv
out
jae
mov
dec
fwait
clc
pop
inc
addr16
gs
inc
std
scas
cmp
(bad)
pop
push
fst
mov
rcr
daa
xchg
push
loopne
mov
adc
int
cmp
sbb
jno
dec
mov
and
cli
(bad)
and
sahf
shl
movs
inc
jnp
dec
push
dec
div
and
(bad)
pop
icebp
dec
ficom
push
jmp
movs
xor
xchg
xchg
loop
jne
ror
lea
jge
jns
pop
jl
push
cmps
xchg
jno
push
or
jae
inc
stc
mov
push
cmp
stc
pop
pcmpgtb
je
inc
and
(bad)
push
push
xchg
in
rcl
sar
mov
cmps
stc
movs
or
lds
mov
adc
add
mov
in
pop
(bad)
push
or
(bad)
adc
push
adc
mov
adc
sbb
int
imul
repz
gs
out
inc
jo
pop
adc
push
(bad)
inc
aas
outs
ds
inc
mov
xchg
pop
aas
daa
pop
dec
cmp
jne
dec
sub
sti
mov
adc
jns
mov
loope
or
jbe
sti
in
jl
dec
in
in
and
add
xchg
js
xor
loope
or
cli
js
and
jo
mov
pop
(bad)
scas
out
repz
dec
nop
test
mov
in
in
xor
cmc
ja
xchg
ret
push
and
outs
retf
sti
jp
or
ror
mov
push
scas
dec
pop
retf
jb
adc
pop
test
repz
push
mov
popf
(bad)
nop
mov
cmp
pusha
and
shl
cmp
pop
dec
mov
rcl
mul
adc
mov
popa
pop
std
xor
jb
mov
test
pop
call
call
(bad)
iret
dec
push
cmp
ja
fwait
cmp
inc
pop
loopne
inc
mov
ins
or
xchg
xchg
or
aas
scas
push
mov
push
aam
shr
mov
aad
pop
into
mov
dec
dec
lahf
adc
dec
lahf
mul
(bad)
mov
pushf
add
pop
or
pop
sub
mov
inc
cmp
sub
mov
adc
sub
mov
out
outs
pop
xor
mov
arpl
mov
add
inc
dec
xchg
enter
xor
movs
imul
inc
mov
jno
movs
aam
lds
cmp
std
out
cmc
sub
mov
(bad)
in
les
sbb
mov
loopne
pop
imul
imul
push
lds
pop
aad
test
sub
sub
in
and
xor
inc
call
dec
stos
push
dec
mov
jbe
sahf
mov
mov
mov
inc
hlt
jne
movs
and
pop
pushf
sbb
movs
pop
mov
jp
lea
fwait
mov
add
xor
out
pop
adc
mov
dec
pop
inc
cmp
cmc
pop
push
xchg
daa
scas
sub
xor
xor
mov
sbb
xor
sub
nop
inc
mov
xchg
xchg
das
xchg
fdivp
push
fs
in
(bad)
jb
dec
fidivr
out
retf
(bad)
cmps
mov
cmp
(bad)
or
xchg
xchg
call
stc
cdq
or
inc
lock
pop
push
jge
cs
push
(bad)
xor
xor
push
or
cmp
and
sbb
stos
ja
xor
daa
test
pop
mov
mov
test
push
lods
add
(bad)
retf
push
imul
test
cmp
fwait
in
fwait
movs
add
add
inc
daa
xor
xor
aad
movs
xchg
sub
mov
sub
outs
or
adc
nop
mov
call
xor
sahf
ds
int
push
mov
mov
fprem
imul
stos
or
push
sub
sbb
out
(bad)
out
dec
xor
sub
out
pop
or
xchg
mov
fistp
xor
xor
mov
addr16
test
jmp
in
aad
dec
enter
pop
cmps
das
add
jae
cli
mov
or
aaa
mov
inc
push
cdq
test
sub
retf
sti
sbb
push
cdq
in
xchg
mov
in
pop
adc
inc
cmp
adc
pop
xor
sbb
cli
jnp
adc
mov
mov
mov
cld
push
fwait
call
mov
in
cmove
ror
pop
jge
cmc
sbb
push
clc
scas
or
and
mov
add
sar
movs
pop
sub
fst
inc
cmp
and
adc
inc
cli
push
adc
call
push
inc
mov
mov
or
shl
mov
ins
dec
scas
sbb
inc
mov
ds
or
push
gs
(bad)
sahf
xor
(bad)
ror
nop
sbb
lock
jbe
outs
inc
ins
xchg
es
call
popf
push
out
enter
(bad)
mov
dec
pusha
test
sub
enter
inc
mov
inc
push
mov
jae
out
mov
push
xlat
xchg
adc
idiv
idiv
push
std
sahf
jmp
push
ins
aam
sub
jg
shl
mov
js
ret
(bad)
xor
push
dec
sar
push
test
loopne
fld
inc
inc
(bad)
and
mov
test
jmp
test
ja
outs
mov
push
ss
iret
pop
data16
outs
xchg
not
xor
jmp
dec
retf
inc
xchg
sbb
or
pop
addr16
imul
cs
dec
out
and
or
mov
mov
rcl
jno
xchg
call
jmp
cdq
push
or
xor
mov
push
jnp
ins
into
push
cmps
lds
mov
add
pop
outs
test
pop
fadd
test
lds
jb
pop
enter
loopne
sbb
aad
inc
loopne
shl
out
pushf
mov
enter
or
mov
add
fistp
ficomp
sbb
mov
bound
clc
mov
js
mov
enter
jbe
sti
mov
shl
cld
jb
retf
mov
lods
les
mov
mov
lds
sbb
mov
xor
mov
scas
imul
push
inc
mov
xor
cmp
ss
stos
inc
sbb
aam
sbb
cs
out
(bad)
fisttp
(bad)
pushf
cmp
data16
adc
retf
add
add
mov
outs
aad
lods
test
dec
aas
cdq
(bad)
fisttp
mov
inc
fwait
int
jmp
mov
ret
ds
sbb
loopne
xchg
mov
addr16
cmp
adc
adc
xchg
jnp
repnz
stos
out
mov
add
mov
outs
stos
adc
jns
(bad)
out
cmp
(bad)
bound
(bad)
outs
cs
out
push
lock
sub
leave
dec
pop
mov
in
mov
inc
inc
ins
and
jmp
mov
mov
pop
sbb
pop
cmp
sub
inc
fsubr
inc
ficom
push
cmp
sbb
and
pushfw
mov
dec
cmp
push
mov
fcomip
rcr
movs
gs
shl
(bad)
or
dec
in
(bad)
aas
loop
popf
jge
test
xor
outs
sub
into
xlat
js
(bad)
adc
retf
jl
scas
mov
xchg
mov
dec
add
aad
xchg
push
jl
mov
fst
sbb
and
mov
sub
repz
jmp
sbb
and
jns
out
test
jp
jle
dec
mov
mov
xlat
push
inc
jb
cmps
pop
in
dec
stos
imul
jnp
sbb
mov
mov
outs
les
movs
fdiv
scas
xchg
or
fbld
rcr
mov
in
xlat
(bad)
jns
pop
adc
cs
outs
pushw
popa
push
inc
mov
push
shl
xchg
push
jmp
dec
and
mov
sub
mov
push
ret
and
ret
dec
jo
das
dec
call
ret
dec
inc
test
icebp
aad
or
leave
push
mov
push
out
mov
sahf
xchg
nop
or
call
xor
sahf
maskmovq
dec
fidiv
jle
add
data16
mov
or
imul
pusha
push
xchg
dec
jae
push
fwait
mov
enter
(bad)
ret
and
retf
int
inc
pop
xor
ror
mov
or
or
mov
xor
lods
les
adc
imul
and
inc
xor
bound
cmp
sti
cld
stc
sbb
push
adc
ret
sbb
cld
inc
mov
and
je
outs
inc
mov
sbb
sbb
jae
add
ret
xlat
loopne
mov
xchg
pusha
push
sub
sbb
push
jmp
sbb
inc
cmp
cwde
jnp
loope
into
sbb
pop
sbb
mov
out
push
mov
lahf
dec
enter
dec
movs
js
je
mov
call
mov
in
push
push
ds
lock
inc
mov
test
and
mov
outs
mov
jbe
inc
cmp
jp
fst
pop
fmul
clc
arpl
sub
pop
loope
fcmovu
mov
mov
jb
push
pop
in
pop
sti
xor
xlat
jmp
push
dec
cwde
out
inc
add
mov
mov
dec
mov
neg
or
into
stos
lock
pop
nop
outs
mov
std
movs
mov
mov
ret
in
shr
cmp
mov
cdq
add
mov
outs
arpl
dec
inc
add
xor
mov
cmp
push
es
xor
lea
mov
imul
enter
push
iret
iret
or
mov
adc
test
dec
(bad)
and
or
xor
scas
jae
sub
dec
cmp
clc
cmp
jne
jle
neg
dec
sub
ss
pop
add
lahf
std
jl
pop
pop
add
mov
pop
fsub
xchg
nop
test
out
jmp
out
mov
pop
out
mov
lods
clc
lods
adc
in
cdq
push
add
(bad)
dec
xlat
pop
push
fwait
push
xchg
xchg
jns
jae
jns
push
cmp
sub
lods
mov
mov
fisttp
in
cs
stos
in
mov
sub
popa
test
mov
push
lock
(bad)
mov
mov
sub
mov
jge
push
in
imul
or
mov
sub
jno
les
or
dec
test
ret
add
add
jb
into
out
shl
and
lahf
cld
out
sub
jb
imul
out
sub
mov
fadd
fwait
inc
mov
mov
iret
mov
push
nop
jge
and
adc
arpl
aaa
sbb
not
outs
(bad)
aaa
arpl
in
popa
jmp
adc
push
and
fdivr
in
push
and
in
jecxz
arpl
loop
retf
mov
mov
adc
fnstsw
jg
adc
in
jbe
inc
stos
push
mov
xchg
jl
iret
mov
jmp
rcl
cwde
mov
pop
mov
inc
jg
adc
pusha
test
retf
adc
mov
mov
inc
sti
push
rcr
stc
xchg
cli
cmc
mov
or
fs
add
inc
mov
neg
imul
jnp
dec
fild
loop
enter
popa
sbb
das
repz
in
out
cwde
movs
mov
cmp
xchg
shl
pop
mov
jmp
jg
into
repnz
sub
mov
xchg
cld
cwde
ret
pop
pushf
lds
arpl
pop
or
outs
or
jmp
out
pop
mov
addr16
mov
call
push
sbb
leave
(bad)
icebp
mov
push
repnz
loop
pusha
push
inc
pop
inc
loop
inc
scas
fdiv
cwde
mov
(bad)
ss
(bad)
xchg
jno
cmps
adc
xchg
repz
inc
imul
notrack
xchg
or
add
jp
test
test
and
mov
or
adc
jns
cwde
dec
cmp
out
das
les
test
inc
outs
sbb
jb
push
inc
xor
not
cs
inc
add
lock
inc
mov
lods
retf
fadd
loopne
sahf
fstp
(bad)
int3
xor
mov
jmp
pusha
and
arpl
and
sbb
(bad)
sub
ins
sub
xchg
jae
call
(bad)
fidivr
aam
imul
xchg
jp
es
icebp
push
jg
push
mov
push
push
sbb
mov
pop
and
lods
fdivr
jno
push
push
sub
adc
les
dec
add
or
lods
jmp
sbb
imul
call
push
adc
sbb
push
in
xor
out
ret
cmp
shr
push
cli
adc
imul
inc
scas
shl
ret
call
sbb
mov
xor
ror
loopne
jo
aas
dec
xor
add
and
imul
and
dec
pop
add
stos
fadd
or
pop
sub
sub
push
repz
fdivr
cs
xor
lds
xchg
test
(bad)
ss
jmp
sbb
cmp
into
ror
dec
push
fwait
lea
es
lahf
or
scas
(bad)
jmp
inc
out
stos
imul
in
lds
cld
imul
repz
mov
ret
cmps
mov
cwde
jns
sti
les
inc
add
jecxz
test
arpl
inc
test
cld
aaa
inc
and
dec
lahf
test
mov
mov
or
fmulp
popa
outs
or
retf
xchg
mov
xor
add
push
jnp
loop
xor
inc
movs
xor
out
push
retf
and
dec
int
(bad)
leave
fild
adc
push
add
or
push
popa
pop
cmps
lea
inc
loopne
xor
dec
das
add
mov
and
cld
je
pop
pop
adc
sub
sub
out
fs
inc
scas
cmp
stos
jmp
push
push
sbb
cli
sbb
mov
add
fbld
inc
outs
scas
adc
sbb
push
test
movs
repz
mov
xlat
iret
dec
retf
jp
push
push
ror
xchg
pop
jmp
jb
icebp
pop
aaa
popf
ds
xor
jmp
sbb
mov
and
cmp
jmp
sbb
mov
jl
mov
sub
hlt
out
sar
mov
pop
add
(bad)
mov
cdq
cmp
stos
dec
and
out
not
fisttp
(bad)
and
xor
iret
jle
sub
fild
addr16
in
rol
out
push
jg
and
mov
xchg
and
sti
sub
ror
out
cld
push
lea
(bad)
jmp
mov
aad
ja
test
aad
xchg
retf
imul
dec
xor
out
pop
mov
add
sub
rcr
mov
sbb
in
pop
popf
or
dec
cmps
hlt
push
popa
daa
add
mov
les
cmp
mov
ins
add
and
rol
fsubr
pop
mov
inc
lahf
icebp
mov
sub
or
or
icebp
pop
push
cmp
xor
adc
aam
idiv
and
mov
int
arpl
test
dec
xchg
les
jmp
or
xchg
rcl
inc
mov
lahf
pushf
icebp
je
sub
jge
xchg
xchg
sub
inc
(bad)
sti
and
enter
sbb
sti
mov
cmp
push
sbb
stos
cdq
inc
fwait
imul
test
xor
movs
dec
jg
push
adc
add
sti
pop
push
cwde
movs
hlt
pop
push
cmps
add
push
repnz
js
and
ret
sbb
je
inc
cmp
out
xchg
add
adc
adc
daa
sub
scas
loopne
inc
mov
mov
out
mov
lods
retf
arpl
out
fbstp
loope
fninit
mov
rcl
iret
(bad)
mov
std
jp
ret
adc
cli
mov
inc
ss
out
jl
retf
stos
movs
sar
fstp
cs
lahf
xchg
iret
stc
mov
retf
int3
repz
cmp
sub
enter
add
sub
sub
nop
outs
or
enter
outs
sti
sti
xor
mov
jne
lock
stos
mov
add
mov
inc
dec
sar
push
movs
dec
xchg
and
cmp
pop
pop
sbb
ret
outs
adc
addr16
fild
seto
pop
push
mov
imul
pusha
mov
adc
or
and
inc
xchg
adc
fs
in
jnp
enter
pusha
cmp
mov
out
push
sbb
mov
sbb
jae
ret
les
pop
sub
mov
call
mov
xchg
ret
call
test
rol
sub
imul
inc
sahf
push
push
sub
xor
scas
addr16
dec
sbb
test
and
enter
jnp
iret
ret
or
clc
aaa
jl
or
jae
inc
cmp
cdq
jnp
inc
fild
sbb
push
adc
or
loopne
sub
mov
loop
aaa
imul
loop
jecxz
mov
loopne
xchg
out
pop
xchg
jbe
in
adc
sub
iret
dec
enter
push
mov
sub
cmp
ficomp
xchg
out
pop
pusha
int3
jo
jne
inc
pop
pop
xor
outs
xchg
lds
lds
push
(bad)
jae
(bad)
push
add
xchg
call
lds
js
iret
es
xchg
mov
lock
xchg
jmp
xchg
leave
xor
push
movs
cmc
int3
movs
in
cmps
into
add
out
sar
cmp
cmp
dec
js
jp
dec
mov
jno
push
jae
inc
outs
repz
scas
jmp
mov
repnz
pop
pop
nop
mov
lahf
jnp
jmp
dec
xor
mov
push
or
out
push
stos
call
cs
popa
xor
mov
(bad)
aam
cli
mov
(bad)
xchg
test
mov
imul
mov
ja
rcr
xchg
ret
je
jo
adc
in
jns
in
or
or
fild
xchg
mov
in
fisub
xchg
dec
leave
(bad)
stos
mov
mov
imul
cli
push
push
fst
or
pop
inc
mov
add
push
mov
mov
add
pmulhuw
js
mov
push
jp
in
adc
test
fsub
ror
adc
sub
sbb
shr
jl
sub
dec
(bad)
retf
lods
(bad)
adc
(bad)
hlt
(bad)
out
and
mov
stc
sbb
pop
pushf
cmp
and
lock
adc
movs
jge
addr16
adc
shl
adc
or
dec
inc
stc
dec
mov
loope
jl
mov
mov
jbe
jno
js
push
ffreep
inc
clc
mov
(bad)
in
lods
inc
push
xor
scas
sub
fist
xor
ror
div
lahf
mov
fidiv
enter
mov
sbb
das
pop
repz
es
pop
das
cmp
test
mov
push
push
mov
inc
lds
lods
loop
test
or
cmp
sub
out
push
push
sub
outs
pop
inc
scas
jg
pop
cmp
mov
into
lods
(bad)
out
fisttp
in
adc
xor
rcl
pop
jmp
sbb
ds
sbb
or
pop
push
pop
inc
jno
outs
and
adc
xchg
add
jno
mov
xor
sti
inc
jmp
xlat
in
mov
ret
push
pushw
es
nop
dec
aad
(bad)
sub
imul
stc
shr
pop
xchg
dec
push
mov
inc
loop
lahf
rol
adc
or
stos
jge
jo
retf
stos
loopne
rol
js
shr
loope
fild
mov
arpl
ds
xchg
das
jl
push
mov
stos
aaa
shl
pop
jmp
scas
fwait
sahf
mov
xchg
cdq
xchg
imul
pop
repnz
mov
pop
ss
xchg
inc
pop
jp
jo
adc
leave
retf
push
lds
jo
pop
in
movs
imul
add
stc
movs
enter
add
or
mov
pop
inc
pop
xabort
or
lods
mov
xchg
inc
nop
cmp
jb
arpl
sub
movs
jo
movs
dec
jb
fnsave
fcomi
test
rcl
in
mov
sub
inc
and
cs
jno
imul
cmp
test
sub
mov
rcr
pop
in
pop
stc
outs
pop
adc
jns
es
lahf
mov
les
test
dec
sbb
ja
int3
push
jecxz
or
loope
ret
mov
sbb
mov
movs
neg
cmp
movs
xchg
push
fdivrp
retf
cmp
dec
add
adc
sbb
add
jl
sbb
and
jnp
lds
sub
lock
jae
std
mov
or
add
repnz
data16
and
jne
mov
loope
cs
adc
lods
sbb
fisubr
fistp
mov
fiadd
movs
in
xor
retf
or
stos
(bad)
mov
enter
pushf
push
sbb
aad
cld
pop
sub
cmps
xor
mov
xchg
int
add
shl
stc
mov
out
in
mov
in
fistp
push
and
(bad)
outs
(bad)
lahf
or
xor
hlt
push
das
js
clc
dec
mov
mov
and
les
es
cmp
adc
repz
mov
hlt
mov
scas
iret
in
adc
neg
je
popf
aaa
aas
sahf
test
or
ja
inc
cli
fwait
(bad)
jmp
inc
cli
xchg
and
mov
or
inc
in
mov
xlat
js
into
push
in
fldenv
inc
sahf
xchg
or
pop
xor
ficom
in
into
push
mov
test
mov
push
pop
retf
mov
or
stos
xchg
add
das
stos
leave
pushf
jb
pop
dec
aad
cmp
in
sti
fnstsw
imul
push
cs
lock
jp
mov
int3
repnz
mov
push
arpl
inc
cwde
jecxz
fstp
arpl
dec
sbb
jne
xchg
iret
aas
clc
test
adc
icebp
inc
add
not
data16
aaa
pop
mov
data16
stos
inc
add
dec
inc
mov
jae
in
fstp
jmp
shr
lar
fnstsw
fcom
icebp
xchg
pop
shl
(bad)
sbb
pop
mov
(bad)
jne
dec
scas
sbb
add
pop
into
clc
pushf
inc
es
or
test
pop
repnz
in
and
dec
jg
(bad)
ss
mov
hlt
leave
imul
fdiv
xor
pop
sbb
cwde
enter
push
call
pop
mov
sbb
scas
in
inc
stos
lods
fistp
ret
mov
lock
dec
out
gs
inc
xor
jp
jge
stos
pop
scas
xlat
cld
lahf
cld
shl
xor
lock
push
lods
clc
das
push
sbb
push
into
fs
jecxz
mov
les
(bad)
das
scas
ret
mov
xchg
cmps
adc
xchg
push
dec
push
(bad)
mov
out
out
xchg
std
cmps
xor
mov
jl
push
rcr
loop
aas
xchg
add
in
cs
(bad)
xor
sahf
mov
mov
aam
xchg
pushf
inc
pop
shl
cmps
loopne
pop
sbb
sti
(bad)
pop
outs
push
stos
loopne
mov
cmp
int
or
pop
sbb
fidivr
in
imul
mov
lods
push
mov
jg
ins
inc
imul
std
cmp
into
(bad)
jp
sbb
outs
xchg
xchg
xchg
mov
dec
xchg
jo
int3
scas
mov
das
and
loopne
movs
cmp
pushf
int
out
movs
ss
pop
imul
lds
pop
inc
sbb
mov
test
mov
push
pushf
aaa
add
inc
div
jle
sub
sub
xchg
ins
in
repz
ins
add
xlat
call
fsubrp
dec
ror
(bad)
mov
jns
push
ret
sub
mov
test
dec
push
aas
and
leave
add
test
iret
icebp
mov
stc
push
xor
cmps
and
stc
mov
adc
lds
movq2dq
(bad)
xchg
push
idiv
nop
dec
jb
mov
jns
dec
jb
mov
and
and
xor
in
cmps
daa
adc
add
add
stc
add
mov
cli
(bad)
xrelease
cli
in
push
fisubr
(bad)
or
pusha
inc
popf
xchg
lea
sub
loope
iret
enter
add
in
sub
pop
(bad)
cmp
out
jecxz
loop
sahf
iret
mov
les
data16
jns
push
jl
inc
push
add
stc
cmp
jae
jb
or
(bad)
jo
es
cmps
pusha
or
inc
xor
enter
dec
scas
and
add
add
retf
push
aad
cdq
dec
or
and
add
push
(bad)
cld
sub
inc
xor
iret
aam
push
dec
inc
setns
in
push
jg
and
sub
xor
mov
push
out
out
aam
jge
into
jmp
mov
call
ins
pop
leave
mov
ror
popf
lock
jmp
into
stc
mov
sbb
add
cwde
sbb
add
jle
inc
mov
test
jge
or
cld
cmp
and
test
pushf
les
and
pop
adc
adc
loope
add
adc
mov
mov
cmp
fisttp
mov
mov
or
and
lock
mov
inc
movs
jns
icebp
sub
jecxz
fist
test
imul
add
cmp
or
push
xchg
lds
adc
jo
(bad)
push
cld
out
mov
and
mov
xchg
cmc
sbb
push
push
ficomp
pop
out
mov
and
cmp
stos
out
sbb
aas
jbe
das
sub
fcomp
jmp
arpl
test
push
inc
push
and
dec
adc
xor
or
test
test
call
sbb
sub
call
inc
repz
sti
inc
or
lds
mov
call
ret
jo
stos
cmp
push
aad
js
mov
loop
mov
jne
sub
lea
and
inc
(bad)
das
pop
retf
in
mov
sar
cmp
jl
test
shl
cmp
push
aam
or
cs
mov
cwde
pop
mov
(bad)
push
or
loope
pop
push
mov
mov
jb
pop
sbb
ins
js
in
sub
aas
(bad)
cmc
sub
inc
mov
icebp
and
push
xor
xchg
pop
push
sub
inc
pop
mov
fwait
mov
push
stos
jp
or
mov
push
arpl
dec
sahf
push
jl
jl
push
lods
into
pop
ja
jne
jmp
repnz
inc
sbb
pop
xor
dec
mul
ror
stos
mov
adc
pusha
ret
inc
mov
data16
pop
sahf
cmp
cli
mov
cmps
out
add
sbb
pop
(bad)
fadd
jb
lods
cdq
enter
test
frstor
push
jb
cmp
pop
or
ds
cmc
stos
adc
fs
or
mov
sub
cmp
sar
retfw
js
aaa
pop
mov
dec
mov
add
cmp
fwait
mov
jnp
mov
leave
enter
ins
push
in
sub
dec
das
xchg
movs
scas
fidiv
pop
int
ja
mov
neg
mov
stos
sbb
movs
sub
mov
imul
adc
div
in
retf
fldenv
dec
test
and
(bad)
leave
fsub
add
mov
jbe
sar
rcl
xlat
sub
xchg
sub
jbe
cmps
outs
push
dec
fdiv
dec
pushf
xor
and
sbb
(bad)
mov
and
rol
test
mov
sub
push
cli
xor
cmp
adc
cld
ss
enter
pop
xchg
in
adc
pop
je
add
iret
mov
movs
sub
and
retf
and
bound
mov
xchg
stos
push
(bad)
fnstsw
scas
inc
adc
stc
outs
(bad)
imul
pushf
push
movsx
je
sub
inc
push
push
(bad)
cmp
retf
jg
gs
addr16
in
fld
sbb
adc
jae
xor
xor
movs
adc
xor
idiv
fidiv
enter
pop
nop
sbb
sahf
movs
adc
mov
fmulp
les
(bad)
and
jecxz
mov
mov
push
fld
add
cmp
pop
sar
mov
in
ror
xlat
repz
int
neg
ret
adc
clc
xchg
inc
mov
sbb
test
push
stc
lahf
ins
adc
call
pusha
mov
or
das
add
pop
pop
adc
cli
pop
hlt
pop
push
mov
call
stc
scas
adc
inc
sbb
sub
in
test
ins
jmp
test
push
aas
mov
mov
mov
or
imul
push
das
dec
(bad)
fst
fsubr
jnp
call
pop
adc
push
pop
xor
push
jnp
loopne
or
call
js
inc
cmp
and
mov
sub
inc
cmps
add
clc
xor
mov
add
scas
int3
adc
inc
scas
out
in
jbe
and
mov
retf
retf
adc
shl
push
sub
dec
out
adc
pop
popf
push
das
jle
movs
inc
cmp
scas
jb
movs
aas
rcl
repz
fisubr
cli
imul
call
cmp
pushf
jecxz
adc
leave
pop
dec
pusha
push
das
pop
xor
inc
cmps
dec
xchg
dec
popf
add
adc
rcr
mov
fmul
je
(bad)
out
push
icebp
xchg
mov
jb
pop
cmp
and
pop
xor
or
dec
inc
out
xor
push
inc
call
dec
cmp
jns
lahf
test
jp
inc
call
jle
jne
or
or
pop
sub
aas
add
push
adc
in
sbb
out
stc
pop
pop
sub
sub
sbb
mov
stos
push
pop
push
rol
mov
pop
jg
cli
int3
mov
sbb
add
ss
push
shr
jnp
mov
push
retf
cli
sub
mov
inc
out
mov
mov
pushf
and
outs
into
pop
mov
loop
xchg
inc
dec
out
mov
stc
retf
mov
test
rol
in
fidiv
ror
xchg
jg
cmp
and
xor
adc
int
inc
dec
imul
nop
mov
lods
hlt
repz
in
pop
jmp
imul
imul
mov
mov
jle
outs
lahf
arpl
pop
and
mov
adc
outs
test
pop
hlt
aam
int3
mov
jmp
dec
push
or
mov
add
sub
dec
adc
pop
scas
das
je
ins
xchg
or
loope
xchg
sbb
cwde
xchg
rcr
repz
bound
mov
les
jnp
mov
pushf
cwde
outs
xor
pushf
fstp
push
push
(bad)
rcr
xor
aaa
xchg
mov
shr
xlat
xor
cmp
sahf
hlt
and
call
xchg
popa
inc
pop
cmp
jmp
cmp
xor
rcl
adc
daa
mov
ss
mov
inc
test
(bad)
test
xor
jmp
pop
push
rol
hlt
test
pop
cmp
pop
(bad)
jecxz
lea
xor
dec
adc
mov
xchg
addr16
cwde
outs
outs
sub
cmp
adc
sahf
out
dec
movs
push
imul
push
xchg
mov
adc
ror
cmps
in
daa
or
arpl
or
or
dec
idiv
ffreep
add
jno
jnp
imul
push
jmp
cmovnp
push
mov
pushf
add
xchg
pop
xchg
sub
xor
retf
inc
pop
xor
xchg
(bad)
push
movs
mov
sti
bound
dec
aam
pop
jg
and
add
sub
dec
sub
fisubr
(bad)
cmp
jns
add
gs
sub
dec
inc
aaa
icebp
sbb
cmp
mov
loopne
cdq
mov
sub
int3
arpl
pop
lods
pop
vmovaps
xchg
inc
sbb
dec
fwait
pushf
lods
fimul
jg
dec
push
jl
mov
and
jbe
push
mov
stos
push
mov
cli
mov
mov
pop
dec
sbb
and
int3
cdq
push
cmp
dec
sbb
popf
dec
xor
or
cld
xchg
push
out
loopne
int3
cmovp
xchg
xchg
lock
imul
fdivr
jmp
out
mov
inc
pop
xchg
ins
and
jge
fs
test
jge
xchg
mov
lock
das
ins
fstp
jmp
lds
inc
rcl
push
ret
pop
jae
cld
xchg
repnz
sbb
dec
loop
and
push
outs
adc
psrad
movs
data16
cmps
xor
and
adc
stos
es
dec
mov
mov
xor
ror
pop
sub
adc
xchg
add
stc
gs
cs
cmp
sbb
dec
cmp
push
rcl
jne
vpaddusw
pop
pop
cs
fld
cli
aas
stos
jmp
iret
arpl
sar
mov
mov
leave
dec
out
pop
dec
jecxz
push
repz
(bad)
xchg
sbb
mov
mov
inc
fist
pusha
sahf
mov
xlat
ret
shl
xchg
stos
(bad)
inc
pop
fdivr
sub
mov
sbb
pop
cmp
clc
retf
pop
and
jae
mov
or
pop
call
psubd
mov
cmps
pusha
(bad)
sub
jl
add
fidiv
and
cdq
cmp
lods
mov
ins
dec
jp
imul
or
fnsave
sbb
push
leave
xchg
repnz
sahf
shl
leave
mov
push
add
adc
and
(bad)
xor
aas
mov
clc
js
fsubr
jp
iret
scas
xor
dec
or
pushf
popf
jg
lods
ins
loopne
daa
cdq
push
retf
pop
push
js
xor
or
push
inc
add
push
ja
div
(bad)
cmps
inc
loope
push
clc
mov
hlt
adc
and
(bad)
and
test
mov
call
sahf
sub
mov
(bad)
xchg
or
cmp
rcr
xchg
(bad)
and
(bad)
mov
clc
pusha
xchg
or
je
mov
push
xor
js
call
loopne
xor
pop
adc
mov
retf
sub
ds
daa
fiadd
sub
jo
jmp
cwde
in
dec
bound
cmp
clc
mov
mov
inc
(bad)
rol
unpcklps
add
xchg
and
push
xchg
ret
(bad)
repnz
cwde
aas
popf
jmp
cmps
mov
mov
or
xor
jmp
jp
je
adc
inc
aam
lahf
inc
or
inc
and
jl
xchg
dec
push
pushf
ins
push
pop
xchg
xchg
imul
jecxz
inc
xlat
mov
and
cmc
sahf
ret
jnp
sbb
ficom
fnstenv
enter
inc
sbb
sub
jp
or
add
data16
lods
fnstsw
adc
and
enter
add
shl
das
fsubr
xchg
in
add
(bad)
sbb
repnz
or
or
jle
adc
ja
mov
lods
dec
ins
add
out
aam
cli
retf
add
xchg
arpl
sahf
jecxz
fldenv
mov
fcmove
cmp
jmp
and
pop
mov
sbb
jb
adc
shl
mov
int3
mov
sub
test
pop
inc
jno
fild
cdq
dec
jle
sbb
dec
cmp
clc
leave
mov
in
jmp
jmp
mov
mov
fwait
outs
or
shr
dec
pusha
pop
sbb
lahf
mov
cmp
loop
mov
and
add
jbe
pushf
fdiv
inc
rcr
mov
push
adc
dec
cld
ret
mov
jge
in
fwait
test
pop
hlt
push
mov
gs
mov
push
loope
ds
in
mov
push
inc
bound
std
push
mov
scas
jne
cmp
xor
inc
add
test
test
push
mov
jecxz
out
(bad)
fbstp
lahf
dec
cld
push
jg
imul
mov
test
inc
jae
rol
dec
jo
leave
jecxz
fisub
jb
outs
inc
rol
scas
mov
cmps
mov
(bad)
pop
les
push
mov
sbb
or
pop
pop
push
stos
retf
mov
or
cdq
jecxz
cli
imul
(bad)
xchg
addr16
cmps
cdq
jg
add
loop
pop
fwait
cld
xchg
sahf
adc
jnp
inc
jae
or
xlat
int
sub
jmp
(bad)
jmp
inc
inc
pop
adc
inc
mov
int3
jge
mov
data16
test
cmp
mov
xchg
mov
out
lods
jmp
or
push
inc
outs
jp
xlat
mov
pop
out
jmp
outs
inc
pusha
je
in
mov
push
mov
jno
sub
jecxz
jne
(bad)
jle
retf
or
pop
jne
ficom
iret
(bad)
ins
sti
dec
mov
ret
mov
mov
add
inc
mov
imul
cwde
data16
add
jne
mov
ret
call
gs
adc
dec
test
movs
sub
xor
pop
fistp
pop
cwde
ficomp
dec
dec
ret
dec
fs
aas
lea
out
pop
mov
jo
mov
into
shl
and
retf
and
adc
push
mov
sub
stos
ret
cmp
jge
mov
jnp
push
pop
loope
pop
aam
push
lods
sahf
int
(bad)
sti
pop
rcl
iret
aaa
cli
repnz
xor
adc
push
int3
iret
ret
test
shr
push
mov
jmp
cmc
popf
aam
cmp
jg
inc
push
push
mov
xor
cmp
add
cmp
mov
fs
sbb
cdq
xor
dec
stos
dec
or
cmp
loop
jno
push
mov
movs
stos
int3
addr16
stos
jg
sub
jl
adc
pop
rcr
mov
or
jae
sub
jge
mov
bound
or
sbb
icebp
mov
hlt
je
enter
inc
and
dec
retf
ret
sbb
loop
loope
dec
popa
stos
loop
and
clc
inc
jns
mov
lahf
leave
sbb
cld
or
pop
iret
sub
mov
cmps
rol
and
out
inc
xchg
adc
inc
retf
add
aad
jno
mov
enter
push
mov
mov
sbb
xor
inc
mov
push
fsub
mov
adc
stos
adc
or
jge
test
and
aam
push
push
retf
mov
je
push
cmp
(bad)
pop
pusha
aas
mov
and
sub
hlt
and
xchg
cmps
cld
adc
movs
mov
jg
dec
aas
dec
push
bnd
sbb
mov
inc
sub
lods
jg
out
pop
dec
xchg
add
add
or
mov
sub
jbe
add
jmp
and
popf
add
mov
(bad)
mov
fisttp
mov
mov
xor
xor
adc
cmp
cdq
leave
add
hlt
test
jbe
mov
mov
ins
sub
jmp
iret
(bad)
mov
xchg
fistp
nop
mov
jbe
into
xor
fwait
icebp
popf
retf
push
jp
and
js
pop
push
sbb
xchg
pop
lahf
shl
adc
movs
jnp
push
rcl
fidivr
ja
cmp
adc
xor
push
xchg
mov
leave
cwde
mov
pop
and
icebp
lds
lock
mov
inc
outs
cli
movs
loope
inc
mov
imul
mov
jmp
inc
jecxz
sbb
pusha
paddusb
mov
adc
stos
repnz
jno
enter
ror
add
mov
jo
adc
add
popa
(bad)
xlat
imul
popf
sahf
xor
ret
or
lods
shr
in
jge
mov
push
cmps
pop
pop
mov
inc
pop
(bad)
cmp
popf
int3
hlt
push
jg
push
jns
addr16
addr16
sub
ja
mov
mov
stc
mov
stc
loope
jno
mov
gs
addr16
shl
out
jecxz
add
loop
repnz
jmp
jmp
push
popf
aas
add
jp
cvttps2pi
out
std
inc
mov
out
adc
adc
mov
xchg
cmp
ret
(bad)
hlt
adc
test
imul
and
cs
xlat
xor
test
jne
or
das
aaa
sbb
sub
jl
popa
push
mov
xchg
das
leave
test
pop
cmps
xchg
pop
(bad)
push
ret
pusha
jp
and
lods
in
sub
imul
or
not
mov
xor
scas
add
jge
int
div
aam
xchg
mov
cwde
or
mov
call
cmps
out
or
adc
adc
movs
daa
shr
fmul
scas
lods
fmul
ret
jmp
push
mov
sub
push
sbb
div
inc
int
mov
lahf
(bad)
lods
cs
pop
hlt
pushf
mov
push
shl
rol
mov
and
lock
in
pop
inc
sar
xchg
sar
push
push
or
sti
(bad)
cli
dec
pushf
call
outs
fist
cmps
jno
mov
mov
movs
inc
repz
add
mov
add
xor
cmps
mov
arpl
sub
pop
or
out
mov
(bad)
in
gs
lds
pop
jle
(bad)
adc
xor
and
int
jl
and
mov
or
sub
and
std
stc
test
jne
pop
cmp
aas
mov
push
int3
retf
ror
rcr
sub
push
xchg
push
mov
js
or
pusha
mov
dec
das
xor
push
mov
mov
(bad)
xor
fwait
mov
addr16
mov
call
sti
inc
dec
push
lods
add
xor
jnp
cdq
jns
mov
pop
jae
or
arpl
mov
(bad)
sub
out
int3
das
es
repz
mov
fdiv
aam
mov
xor
mov
jns
ja
scas
rcr
sub
or
dec
pop
daa
or
je
dec
and
inc
mov
push
mov
in
movs
inc
lock
pop
push
sub
pusha
int
(bad)
or
outs
mov
test
js
and
jmp
daa
imul
and
hlt
and
call
pop
fisubr
jle
shr
cmp
imul
in
cmp
jno
stos
movs
or
adc
mov
in
in
xchg
pop
mov
dec
fwait
imul
jnp
ja
nop
push
add
mov
inc
fisubr
add
mov
popf
jmp
mov
outs
cs
or
add
add
cmp
shl
enter
mov
scas
xchg
push
bound
mov
aas
rol
sub
cmps
out
aad
stc
rcl
cmc
xor
and
mov
in
retf
push
add
and
inc
pop
adc
xchg
xchg
mov
std
mov
xchg
scas
je
out
or
repz
xchg
xchg
scas
dec
int3
jbe
fld
or
mov
xchg
fldlg2
rol
aas
nop
outs
or
mov
outs
call
and
pop
outs
fmul
push
test
(bad)
add
test
push
ins
imul
mov
inc
aas
lds
das
xor
mov
cmp
lods
push
dec
cmp
pushf
mov
sub
sbb
enter
jmp
add
xchg
aad
rcl
xchg
test
xlat
call
xchg
addr16
pop
cmp
jmp
scas
jae
xor
retf
ror
stos
mov
sbb
lods
mov
imul
jo
or
fimul
adc
cmp
imul
pop
bound
push
cld
jecxz
jae
xchg
adc
inc
dec
fnstenv
lods
cmps
es
loop
int3
aas
gs
dec
js
xor
scas
mov
pop
addr16
pop
xor
ds
mov
push
call
ret
sbb
stc
stc
cwde
rcl
gs
dec
and
or
mul
xchg
into
pop
mov
cmps
and
mov
dec
mov
push
xchg
or
hlt
inc
pop
sbb
or
test
pop
mov
ds
ins
mov
cdq
adc
in
rcl
inc
mov
divps
push
push
cdq
hlt
iret
lahf
mov
mov
mov
fadd
imul
aad
push
std
bound
outs
adc
nop
xor
int
mov
cmc
iret
stos
xor
setae
loopne
arpl
in
js
sub
xchg
loope
inc
mov
outs
xchg
loope
push
clc
pop
xlat
add
lahf
mov
fisttp
ins
scas
and
adc
inc
test
jns
imul
inc
stos
aad
addr16
mov
int
xor
mov
outs
in
and
sbb
out
in
cmp
pushf
lods
push
ins
leave
ja
cmp
scas
shl
push
sti
mov
in
jnp
pop
lods
jg
pop
jnp
(bad)
mov
push
loope
fnop
pop
and
shl
inc
pop
push
dec
stos
cwde
jne
dec
fwait
sub
lds
aam
inc
call
lahf
nop
adc
sub
cld
retf
jae
mov
push
pop
call
test
mov
xor
jne
mov
cmp
ins
and
mov
std
test
sub
aad
xchg
add
lahf
mov
jg
fsqrt
fcmovnb
setno
xchg
int3
jmp
add
cld
into
inc
loop
imul
xchg
jno
fwait
ds
jae
jmp
loop
fcom
mov
sbb
push
in
sub
jb
dec
lock
out
arpl
test
cmp
ss
ret
jno
and
aad
add
shr
xchg
pop
les
(bad)
imul
xchg
arpl
ror
or
fcomp
retf
enter
lgs
xor
fxch
xchg
(bad)
cmp
jne
mov
into
das
jbe
ins
daa
fs
lods
call
movs
mov
mov
push
and
jmp
cmc
enter
out
pop
fisub
(bad)
sti
fs
fdivrp
sbb
mov
retf
in
imul
std
fdivr
push
addr16
adc
pop
push
lock
xchg
je
lds
push
mov
mov
call
mov
or
pusha
pop
and
mov
pop
retf
sub
sub
cmp
push
retf
and
inc
pop
pop
cli
xor
xor
sub
cwde
imul
mov
jle
fiadd
xor
fmul
jge
and
shl
sub
lea
aad
mov
inc
inc
adc
out
sbb
fs
stos
fyl2x
cld
fsub
pop
sahf
jl
jne
fbstp
pop
in
icebp
add
pop
call
ret
jo
lds
or
rol
and
sahf
imul
cdq
(bad)
inc
or
test
test
(bad)
sti
dec
jb
hlt
hlt
cmps
and
mov
push
les
ret
iret
das
in
popf
xor
(bad)
mov
ret
jp
inc
pop
xchg
inc
mov
sbb
cmp
mov
pop
rcl
inc
xchg
ds
mov
(bad)
pop
imul
xchg
and
pop
mov
pop
mov
sbb
and
push
js
xor
adc
(bad)
aad
test
mov
aad
sar
call
cmp
dec
outs
popa
and
push
stc
dec
cmc
out
sub
mov
int
sub
rcl
sahf
outs
cs
add
mov
aad
and
cs
clc
jne
out
push
xor
cmp
scas
sub
lds
mov
imul
and
inc
inc
fucom
inc
sbb
and
arpl
pop
xor
jmp
mov
adc
cmp
test
sub
add
pop
mov
pop
stc
in
sbb
cmp
mov
test
push
scas
or
rol
push
inc
jne
or
and
xor
pusha
lock
add
shl
dec
jmp
push
mov
add
adc
call
sub
xchg
or
outs
adc
fimul
popa
mov
add
outs
stos
gs
imul
adc
(bad)
push
cmp
call
ror
push
adc
pop
xor
push
adc
movs
movs
mov
adc
rcr
data16
ret
xor
test
add
and
clc
mov
stos
and
ss
mov
mov
pop
dec
xor
stos
loop
jmp
sub
fcomp
xlat
clc
cmp
push
cmps
xchg
push
xor
jle
lahf
sub
outs
es
pop
lock
retf
addr16
jae
sub
cmp
lea
mov
js
xchg
cmc
mov
inc
cmp
aaa
sub
jae
int3
pop
xor
jl
out
and
push
push
(bad)
out
mov
and
push
loop
int
xchg
and
sub
sbb
mov
add
test
xchg
cwde
sbb
sbb
pop
or
loopne
dec
test
xchg
pushf
nop
dec
stos
aad
popa
mov
mov
out
xor
aam
sbb
mov
js
pop
sub
inc
pop
push
imul
aam
das
call
hlt
adc
mov
pop
rcl
jge
jmp
push
pop
jnp
add
repz
sar
push
addr16
popw
dec
ds
inc
in
jl
hlt
retf
test
pop
xor
or
leave
ret
cmp
in
push
and
adc
das
xor
in
pop
adc
jle
dec
int3
aam
mov
pop
mov
mov
cld
mov
push
sbb
sub
(bad)
push
test
sub
or
imul
cmp
push
sbb
popf
push
shl
pop
fdiv
icebp
or
fs
push
pop
loopne
adc
jl
or
fcom
push
xor
jno
movs
mov
call
dec
out
jmp
cdq
out
out
jle
inc
(bad)
cld
sub
and
(bad)
ins
jp
movs
in
sub
inc
or
jne
cdq
xchg
ja
dec
dec
add
scas
mov
in
retf
pop
and
xchg
ret
sub
xor
repnz
pop
adc
loopne
mov
sub
sbb
mov
add
out
mov
xchg
pop
popf
mov
pop
xor
daa
scas
ja
shl
mov
mov
push
mov
pop
popf
jl
or
cwde
mov
dec
push
add
mov
push
mov
or
jne
out
inc
outs
add
int3
call
mov
lods
sub
lock
arpl
jmp
stc
pop
rol
shl
pop
les
gs
sub
xchg
out
push
adc
pushf
imul
mov
jns
add
(bad)
fnstenv
sub
add
add
xlat
fstp
mov
nop
test
pushf
je
dec
mov
in
mov
stos
sbb
lea
dec
mov
mov
fcomip
mov
in
sub
into
mov
add
pop
pushf
std
(bad)
out
mov
scas
xchg
pushf
sbb
fidivr
in
lods
repz
push
xchg
mov
push
and
sti
push
mov
inc
and
dec
mov
jge
in
clc
enter
out
or
int
pop
lahf
jmp
mov
add
popa
cmps
daa
sbb
in
popa
jp
rcr
adc
test
popf
xchg
pop
push
in
mov
adc
daa
repz
(bad)
dec
xor
ins
and
test
aad
add
xlat
push
lds
push
jns
fdiv
xchg
call
xchg
not
jg
or
adc
xor
cmp
jne
xor
iret
test
add
clc
xchg
sub
retf
sub
lahf
push
nop
addr16
lahf
jno
fldenv
stc
adc
scas
aaa
jbe
ins
(bad)
hlt
leave
retf
pushf
or
imul
out
or
mov
repnz
pusha
lods
add
iret
jg
push
push
adc
xor
fwait
pop
shr
mov
dec
movs
lahf
aad
and
stos
loopne
xchg
and
and
in
sbb
sbb
jmp
cs
mov
stos
pop
adc
xchg
out
jns
shl
adc
lds
out
fwait
adc
rcr
outs
movs
xchg
iret
movs
ds
ins
push
lea
sbb
push
fs
inc
jmp
and
push
imul
xor
sbb
pop
movs
imul
or
ror
mov
sbb
mov
imul
pop
or
repz
sti
xchg
push
push
out
jp
jb
fstp
xchg
rol
in
jp
pop
add
mov
push
pop
loopne
cmp
jnp
sbb
cmp
es
pop
mov
(bad)
sub
adc
cmc
outs
sti
jne
int
push
push
repnz
cmp
xchg
and
xor
pop
adc
jmp
test
adc
add
push
retf
addr16
jge
mov
fdivp
lods
xor
ss
cli
leave
arpl
xchg
mov
(bad)
dec
push
fwait
and
mov
sbb
xchg
jp
fwait
imul
mov
fnstenv
addr16
mov
or
shl
adc
xlat
mov
lahf
push
push
ja
add
xor
sbb
fdivrp
retf
int
es
xor
xchg
or
mov
out
bound
pushf
popf
sub
pop
cs
and
punpcklwd
push
push
add
or
adc
(bad)
jmp
and
inc
shl
clc
loop
fiadd
cmp
out
cmp
adc
mov
adc
dec
rcl
fiadd
xchg
xor
adc
inc
stos
fdiv
mov
adc
push
mov
push
pop
ins
sub
ror
pushf
pop
ret
test
sub
mov
add
call
push
and
lea
sbb
lea
stc
ins
inc
xchg
pop
outs
daa
dec
cdq
push
inc
or
out
lds
or
adc
pop
(bad)
arpl
cmc
pop
xor
push
mov
and
(bad)
sbb
mov
ret
leave
lahf
mul
arpl
push
je
cmp
les
xchg
jl
arpl
and
dec
nop
mov
fild
mov
pop
aad
sbb
pop
add
outs
pop
dec
(bad)
cmp
iret
add
inc
out
test
dec
je
xchg
jb
(bad)
sub
loop
dec
lods
aas
cmp
inc
push
cdq
pop
jae
fcomip
or
sub
and
jo
cwde
inc
mov
xchg
add
aam
fild
dec
(bad)
inc
je
ret
pushf
call
mov
popa
(bad)
not
mov
js
push
and
out
mov
(bad)
iret
stos
mov
jecxz
jmp
jle
mov
xor
rcr
inc
xchg
dec
rol
cmp
xor
mov
lods
dec
mov
sbb
and
push
xor
gs
daa
sub
fmul
std
repnz
fs
ds
mov
push
sub
xchg
arpl
dec
pop
out
iret
mov
cwde
mov
push
sbb
xor
push
fs
lock
ins
dec
cmc
ror
cmp
adc
ss
inc
pop
dec
inc
xchg
jo
sbb
imul
nop
adc
mov
mov
and
scas
sub
cmp
retf
in
mov
pop
loope
sub
mov
loop
jmp
mov
pop
repnz
cmp
mov
inc
pop
test
dec
es
jae
cmc
push
dec
inc
lock
inc
bound
and
lahf
pop
imul
and
cmp
lahf
int3
and
stos
pop
add
retf
inc
fistp
inc
(bad)
jle
pop
sub
and
fisttp
test
cmp
mov
sti
xor
dec
data16
movs
aaa
data16
adc
pushf
mov
jmp
jmp
pop
call
xor
jb
ret
and
inc
push
xor
es
dec
cmp
jns
ja
push
popa
fstp
push
add
adc
enter
and
scas
test
jecxz
push
jmp
int3
jmp
push
add
xchg
das
lods
cmp
cwde
push
jb
adc
mov
pop
push
or
loopne
(bad)
retf
shl
pushf
icebp
push
jmp
(bad)
or
call
fnstcw
(bad)
out
cmc
outs
mov
push
sub
adc
push
pusha
pop
shr
movs
repnz
pop
jmp
outs
dec
jns
sahf
je
and
sahf
sbb
push
and
addr16
stos
sar
mov
sub
dec
cli
mov
icebp
mov
xchg
cmc
outs
nop
and
adc
aam
popa
sub
(bad)
jb
daa
pop
shr
xchg
aad
inc
arpl
hlt
pop
adc
mov
xor
xchg
or
adc
retf
rcr
jecxz
pop
test
(bad)
mov
ins
pop
in
add
fwait
out
imul
pop
add
retf
xchg
in
xor
sbb
dec
push
out
enter
add
cmp
dec
fldenv
daa
pushw
das
push
sbb
cmp
dec
pop
es
test
mov
dec
ret
(bad)
sbb
or
js
mov
adc
imul
gs
sub
dec
fcom
add
push
icebp
sar
mov
push
stos
push
scas
and
mov
cmp
aas
mov
popf
inc
repnz
mov
movs
daa
mov
test
scas
mov
add
lods
in
push
jmp
ss
out
fwait
cli
jmp
iret
retf
ins
mov
cmc
fimul
add
add
jmp
dec
repnz
push
movs
mov
add
sbb
push
xor
xor
dec
cmp
and
out
out
and
cmc
sti
sub
cs
sbb
xchg
mov
out
fiadd
movs
shr
sbb
mov
cmp
aas
pop
call
aaa
or
xchg
jnp
jg
popf
mov
jmp
and
dec
test
fdiv
aad
(bad)
lock
push
aam
xchg
mov
jmp
repz
int
and
and
mov
rol
bound
sbb
mov
mov
fiadd
iret
sub
cmp
adc
push
shr
push
enter
cmp
ret
cmp
cld
sub
out
mov
lock
dec
repz
push
xor
mov
adc
aas
add
xchg
stos
bound
mov
xchg
je
jb
jecxz
pusha
cmps
pop
xor
stc
xchg
repz
inc
or
sub
adc
or
je
xchg
(bad)
xchg
mov
cld
sub
mov
jecxz
(bad)
jge
test
into
pusha
adc
and
(bad)
or
test
arpl
and
inc
or
(bad)
pop
pop
add
push
iret
outs
cmps
mov
das
hlt
push
rcl
fidiv
ja
inc
sub
jmp
test
mov
pushf
nop
dec
xchg
mov
and
push
cmp
push
cwde
inc
ins
outs
adc
cli
push
xor
setle
out
mov
daa
mov
ja
pop
jns
and
mov
jb
push
or
pop
sub
fsub
test
jecxz
pop
jp
push
test
xchg
sbb
cwde
add
ins
in
(bad)
mov
fst
jae
mov
imul
push
imul
and
cmp
push
mov
dec
inc
dec
jle
cmp
inc
fmul
inc
fist
lock
ja
push
cmps
fdivrp
int3
sub
pop
repnz
xchg
lods
fist
ret
mov
add
sbb
and
dec
cmps
jo
pop
cwde
enter
in
movs
iret
cmp
std
push
(bad)
and
or
ins
dec
and
inc
outs
xchg
pusha
aad
fmul
out
iret
enter
push
aas
lock
cs
mov
nop
mov
(bad)
pop
xor
xchg
cs
bound
and
sub
mov
mov
and
mov
in
mov
add
adc
movs
retf
mov
push
or
cmp
push
sbb
icebp
pop
cwde
jge
mov
retf
inc
bound
sub
xchg
iret
in
inc
jge
dec
push
out
sub
std
pop
cmps
call
and
popa
xor
jnp
xlat
mov
sbb
rcr
sbb
retf
sbb
(bad)
scas
or
mov
cmc
dec
ret
cmp
mov
ja
ficomp
dec
dec
mov
sbb
fwait
cs
outs
add
mov
lods
neg
pop
xchg
rcl
stos
out
aam
xchg
mov
lods
mov
adc
iret
ins
mov
std
test
pop
clc
adc
sbb
add
push
push
add
pop
or
or
in
das
jae
cmp
cld
cs
sbb
cmc
ror
lock
push
lds
cmp
push
jp
adc
dec
scas
icebp
je
leave
clc
cmp
lds
frstor
push
mov
and
inc
ins
xlat
(bad)
pop
pop
adc
sbb
in
mov
sub
test
arpl
and
pop
(bad)
js
std
dec
and
xchg
mov
adc
(bad)
fist
popf
xor
xor
mov
xchg
cmp
bound
xor
mov
loope
aad
or
xor
syscall
iret
and
jb
and
mov
test
jl
add
gs
push
jo
cmp
mov
pop
and
push
dec
fmul
mov
inc
adc
dec
rcl
pop
repnz
jno
test
in
jge
pop
aaa
jmp
movs
or
adc
add
adc
sub
add
aam
lods
mov
push
xchg
push
mov
inc
adc
pop
jae
push
push
fwait
aas
cmp
movs
xor
(bad)
scas
jbe
test
out
es
rcr
jecxz
xchg
mov
test
mov
sbb
xor
xchg
call
xabort
mov
mov
stos
sub
ds
pop
lock
jg
(bad)
inc
clc
inc
cmp
icebp
or
or
sbb
push
imul
(bad)
sbb
out
sbb
push
jmp
inc
cmp
pop
fdiv
sub
test
mov
fidivr
dec
stos
cmps
test
inc
cmp
fld
idiv
dec
loopne
sar
dec
adc
sub
xchg
leave
fst
mov
fisttp
sbb
cmp
test
mov
mov
cli
daa
ret
push
cmps
pop
inc
leave
retf
movs
cmp
cmp
push
hlt
stos
xor
pop
jmp
sahf
mov
shl
jge
dec
lds
xlat
in
sbb
sub
push
mov
pop
push
mov
js
ja
pushf
mov
pop
or
fsubr
push
out
ins
(bad)
lea
into
data16
sbb
mov
dec
out
push
int3
(bad)
mov
arpl
hlt
inc
mov
inc
fcmovnbe
pop
mov
cmc
in
addr16
xor
and
js
add
push
sub
mov
std
push
icebp
jo
(bad)
and
jmp
int3
push
inc
sub
pop
call
mov
push
bound
int3
pop
push
int
test
retf
loopne
stos
xor
dec
adc
popa
push
ror
and
(bad)
lahf
aad
arpl
add
cli
(bad)
cmps
or
pop
arpl
test
inc
shr
(bad)
or
jmp
call
xor
pop
scas
lods
dec
sahf
lahf
fs
add
ret
aad
mov
cmp
xchg
stos
cmc
out
adc
(bad)
ss
fdiv
in
jb
jns
push
xchg
ss
inc
mov
xchg
and
js
fs
xor
(bad)
in
aaa
xchg
and
mov
dec
push
shl
xchg
aas
dec
vpcmpgtw
xor
sbb
neg
punpcklbw
data16
ins
stc
sti
push
loope
xchg
pop
sub
inc
mov
ret
loope
jo
xor
jecxz
(bad)
fimul
jl
mov
sar
inc
fild
call
fist
dec
dec
jmp
icebp
rcl
out
outs
lahf
jmp
pop
sti
gs
out
(bad)
(bad)
repz
loopne
loop
push
out
sub
and
pusha
xchg
ss
cli
or
dec
mov
xor
and
sbb
sti
adc
sbb
(bad)
enter
push
mov
jbe
cld
jae
imul
out
outs
inc
and
cmps
adc
outs
jmp
or
aas
inc
gs
xor
or
mov
inc
idiv
je
mov
inc
push
aad
xchg
jle
fwait
sub
ds
shl
mov
cmp
or
cmp
mov
jns
shl
or
pop
sti
stos
dec
add
sar
in
push
fadd
mov
adc
fcmovnbe
adc
and
leave
cmp
je
lods
mov
push
jle
fisttp
(bad)
jecxz
add
je
nop
sbb
lds
mov
pop
adc
je
adc
retf
or
mov
xchg
mov
outs
(bad)
call
jp
sub
in
add
ins
push
dec
mov
test
jp
(bad)
lock
retf
std
jmp
sti
(bad)
fst
push
sbb
and
mov
cmp
movs
sbb
pop
sti
(bad)
gs
loope
test
ror
adc
stos
sbb
enter
add
popf
mov
or
xchg
popf
mov
mov
jbe
pop
mov
jle
aas
adc
xor
and
adc
aam
mov
xchg
or
pop
jp
adc
jmp
retf
mov
push
dec
mov
sub
por
dec
das
mov
jne
xor
sahf
cmp
or
je
fs
mov
repz
push
sbb
sbb
cmc
mov
jg
inc
sbb
or
pop
fisttp
loop
popa
data16
xor
stos
pop
adc
mul
adc
jb
adc
sub
pop
mov
pop
jbe
adc
ss
ret
push
mov
js
test
bound
jnp
inc
aad
sub
cmp
in
xchg
stos
sbb
adc
loopne
aad
dec
out
daa
enter
leave
in
retf
stc
loop
xchg
dec
sub
popf
out
jge
scas
sti
push
leave
fild
push
mov
repnz
sbb
dec
cmp
fldcw
cmovb
dec
in
ds
jne
pusha
inc
test
loop
push
xor
xor
sbb
add
jg
sahf
das
jecxz
repnz
sbb
(bad)
push
mov
add
inc
enter
sahf
jno
dec
mov
dec
jbe
sbb
ins
xchg
pop
jg
inc
xchg
out
xchg
mov
xchg
test
fdivp
cmps
add
repnz
imul
jecxz
mov
mov
mov
popf
fadd
jae
fsubr
push
adc
adc
fcom
push
pop
movs
test
cmp
jle
in
sbb
addr16
sar
pop
iret
test
pop
pop
call
mov
stos
mov
nop
mov
jecxz
jo
push
push
lds
push
not
sub
retf
dec
mov
adc
xor
popa
add
dec
adc
xor
xchg
addr16
pushf
gs
cmp
cs
sub
jb
pushf
data16
push
out
push
clc
loopne
jns
xor
mov
xor
data16
pop
adc
mov
push
push
inc
into
mov
inc
push
cmps
push
fbld
xchg
push
(bad)
xchg
sti
dec
(bad)
fs
add
or
jmp
ret
inc
cmp
pop
push
call
sbb
repz
jmp
mov
int
iret
pop
pop
mov
mov
rcl
(bad)
je
or
adc
and
xchg
mov
stos
es
fwait
lods
dec
mov
mov
dec
js
ret
clc
adc
mov
cmp
fsubr
outs
add
jno
popa
and
in
shr
(bad)
sbb
mov
test
cmp
fdiv
add
fidivr
ins
fadd
push
mov
ret
call
jnp
inc
call
xchg
int
scas
neg
aas
pop
mov
cld
push
and
imul
movs
into
add
mov
dec
fist
aam
sbb
add
sbb
outs
pop
movs
pop
pop
and
pop
mov
ins
cmps
and
jmp
cmps
cmp
mov
ret
std
out
outs
stos
shl
aam
neg
mov
jb
lahf
or
pop
mov
imul
rol
and
inc
mov
xchg
add
sbb
xor
sub
ins
ss
mov
test
xchg
add
adc
(bad)
shl
mov
mov
gs
push
mov
ss
adc
xchg
imul
and
xchg
cwde
ror
sub
jo
rcl
mov
(bad)
in
jmp
daa
outs
or
mov
mov
inc
jae
jg
push
(bad)
leave
daa
cmc
repnz
iret
repnz
push
cs
sub
mov
loope
inc
fwait
push
fnsave
mov
jno
repnz
inc
into
int3
test
ds
push
arpl
pop
push
setbe
and
repz
or
(bad)
and
fnsave
pop
scas
jmp
cmp
stos
cs
xchg
adc
jge
dec
retf
adc
jl
fwait
(bad)
xor
xor
pop
push
add
test
sub
pop
fmul
int
out
ins
pop
jle
retf
dec
sbb
xchg
gs
mov
shr
aaa
imul
adc
aam
jne
js
pop
loope
push
cmps
or
iret
or
cdq
ss
add
sub
sbb
adc
mov
push
shl
repz
sub
xor
stos
cmp
xchg
dec
(bad)
pop
mov
add
fld
adc
dec
or
mov
push
leave
stos
test
inc
sbb
inc
lds
sbb
adc
jmp
div
test
inc
pop
lds
xchg
xor
inc
jae
or
sub
gs
popa
test
xor
jbe
pop
jo
rcl
inc
sar
rcr
mov
int
stos
inc
push
aad
add
mov
arpl
push
dec
(bad)
(bad)
push
push
pop
or
inc
idiv
and
push
push
repnz
popf
jbe
aas
pop
test
dec
and
mov
inc
push
ret
mov
loopne
jne
dec
jnp
lahf
retf
aad
loop
jae
dec
xor
jge
xchg
sub
sub
aam
fild
inc
cmps
cmp
fwait
inc
add
call
and
icebp
stc
add
jmp
or
xor
js
or
or
mov
(bad)
not
fnsave
mov
imul
rcr
mov
xchg
jp
xchg
sbb
pop
movs
mov
and
and
pop
dec
mov
fisub
and
sub
mov
push
jno
xchg
in
sahf
repz
cdq
dec
aas
sti
iret
jo
add
sub
cmp
pop
cld
xchg
pop
and
lods
scas
in
mov
test
fwait
mov
cmp
mov
popa
in
stc
in
cmp
out
jl
(bad)
je
cmp
gs
adc
sub
push
mov
(bad)
retf
jp
mov
jae
aad
xchg
retf
pop
lahf
push
push
jp
mov
int3
lahf
sub
repz
and
fwait
pop
adc
stos
pop
pusha
xor
enter
retf
jle
jmp
loopne
inc
add
push
jmp
(bad)
loop
push
and
repz
arpl
sbb
push
(bad)
inc
adc
jae
mov
jmp
push
push
pop
in
cld
or
push
jecxz
add
cmp
scas
xor
jecxz
mov
fiadd
stos
lahf
int3
mov
stos
and
jmp
mov
push
push
iret
mov
or
lds
cld
push
rcr
js
ins
sub
sti
inc
cmp
jne
jne
stos
mov
sub
scas
sbb
out
stc
loop
jns
cmp
aaa
xor
push
sbb
pushf
mov
jno
and
ss
(bad)
dec
out
std
mov
xor
fiadd
adc
sub
je
(bad)
cmps
jne
and
movs
mov
(bad)
les
jb
lahf
mov
movs
call
aaa
(bad)
loop
xchg
or
and
cwde
daa
jg
jne
dec
jl
dec
cli
cmp
mov
imul
aas
pop
cmp
gs
pop
shl
mov
(bad)
mov
mov
(bad)
and
xor
cdq
out
outs
jns
mov
sbb
fisub
aad
std
jmp
fsubr
cmp
stc
sar
nop
aaa
mov
or
pusha
movs
fstp
fild
inc
or
and
xor
fsubr
ja
data16
xlat
jo
mov
dec
inc
mov
mov
or
mov
xchg
add
movs
mov
mov
mov
xor
dec
je
push
mov
mov
daa
aas
lds
in
pop
int3
test
inc
xor
call
push
lock
fidivr
jbe
push
cs
js
popa
inc
ror
or
maskmovq
mov
pop
outs
fcmovne
mov
shl
lods
shl
inc
lds
popa
jb
out
cld
pusha
cs
fadd
jae
mov
imul
add
outs
in
dec
lods
cdq
(bad)
mov
sub
adc
lahf
jae
and
ret
inc
xchg
cmp
bound
pop
push
inc
shr
mov
mov
mov
xchg
fsubr
push
mov
xchg
pop
movs
ins
push
mov
add
inc
mov
lds
aaa
sti
fild
enter
add
xchg
mov
sahf
mov
jmp
imul
mov
xor
add
out
jne
and
xchg
or
push
imul
movs
dec
les
xor
call
dec
jecxz
outs
gs
sbb
mov
out
ds
mov
adc
adc
inc
or
fisttp
or
push
pop
call
inc
cli
in
(bad)
fwait
mov
(bad)
pop
loop
and
add
mov
xor
jnp
mov
je
stos
jb
mov
cdq
add
pop
jle
mov
inc
xchg
cmps
sbb
push
jns
retf
ins
(bad)
xchg
js
dec
(bad)
lods
dec
rcr
adc
or
add
push
mov
xchg
cmp
int3
jno
adc
lods
mov
call
and
add
in
dec
xor
je
sub
cmc
arpl
or
add
lods
cld
mov
not
out
out
push
cmp
or
ins
jle
xor
pop
pop
(bad)
aad
clc
pusha
(bad)
fild
mov
into
ja
mov
shr
push
pushf
(bad)
jns
js
mov
lahf
(bad)
(bad)
mov
or
icebp
jo
mov
rol
sub
push
and
out
mov
cmp
mov
fs
dec
mov
loopne
pop
pusha
push
add
outs
or
fstp
mov
cmp
aas
fxch
pop
jbe
push
add
dec
mov
push
ret
pop
call
fsub
outs
repnz
sbb
xchg
leave
mov
pop
retf
push
ins
adc
adc
mov
xchg
xchg
in
push
pop
(bad)
push
cmp
mov
nop
inc
mov
in
push
sbb
sti
leave
jmp
and
scas
or
cmp
push
bound
leave
cld
movs
popf
xor
icebp
fist
mov
push
and
fisttp
leave
inc
jbe
fdivrp
in
mov
mov
shr
ja
je
xchg
je
sbb
push
mov
les
jbe
fild
sub
fnstcw
imul
sbb
pusha
xor
mov
stc
daa
(bad)
jnp
stos
scas
sar
dec
cdq
outs
nop
(bad)
lahf
fs
out
add
ret
cmp
or
push
add
mov
addr16
cwde
dec
imul
adc
push
out
adc
mov
jle
test
(bad)
shr
and
scas
mov
ins
push
lods
pop
cs
test
int
shl
ror
ss
mov
scas
sub
imul
rcr
(bad)
xchg
pushf
mov
mov
or
push
adc
or
into
loop
and
add
mov
(bad)
sub
jp
mov
sub
xchg
out
jl
xor
in
jle
sti
xor
out
pushf
aam
inc
repz
ret
mov
xchg
mov
sub
int3
mov
sbb
jno
repz
ins
test
adc
cmp
stos
cmps
scas
inc
cmps
jecxz
xchg
jge
mov
adc
push
lock
cmp
pusha
sbb
stc
sub
xlat
mov
lahf
jmp
jns
test
xor
and
add
out
aas
dec
ins
sahf
retf
adc
stos
lods
push
stos
out
cmp
and
xchg
ins
cld
int
mov
mov
xor
dec
push
lea
or
aas
clc
pop
mov
push
xchg
rcr
nop
lods
into
adc
jae
pop
cmp
push
jbe
sti
and
test
sub
enter
jecxz
sar
mov
int3
imul
xlat
sub
fisttp
shl
fadd
ins
xchg
mov
(bad)
data16
les
aas
and
dec
test
pop
jge
lock
(bad)
sub
sbb
fisubr
lahf
mov
add
iret
mov
mov
scas
inc
mov
mov
(bad)
jle
pop
add
add
adc
mov
xor
and
add
retf
popf
inc
push
(bad)
stc
push
adc
xchg
push
ffreep
fst
sbb
int
and
(bad)
adc
arpl
sahf
rcr
sti
rol
push
stos
push
test
or
test
fdivr
dec
fwait
fwait
mov
imul
sub
daa
cmc
fldenv
enter
fcmovu
clc
adc
test
add
inc
dec
mov
inc
jp
mov
push
mov
mov
mov
and
adc
sbb
pushf
xchg
sahf
leave
xchg
ret
pop
popa
(bad)
cmp
pusha
mov
push
test
les
jne
dec
pop
dec
add
popf
add
fist
inc
cmc
cmps
add
mov
mov
cmp
jecxz
mov
cmps
test
cmp
mov
ror
adc
retf
je
cmp
adc
outs
mov
jbe
mov
push
rcl
imul
into
push
mov
fisubr
mov
sub
cmp
arpl
sbb
stos
xchg
dec
out
adc
pop
or
bound
cmps
mov
xor
dec
sub
andps
rol
call
out
jo
loop
in
not
outs
xchg
cmp
shl
lods
(bad)
lea
mov
inc
jle
aad
add
arpl
add
addr16
pop
mov
imul
and
sar
push
and
dec
fcomp
inc
xchg
xor
jo
mov
sbb
add
fs
cli
iret
neg
aas
sub
cmps
add
fld
in
push
sbb
inc
mov
or
fwait
addr16
mov
xchg
mov
mov
or
(bad)
ins
lods
popf
mov
cli
adc
pop
dec
inc
mov
mov
fimul
xchg
and
sub
dec
int3
and
lds
and
mov
xchg
repnz
or
xchg
loope
stos
shl
sub
and
xchg
sub
inc
fs
cmp
xor
hlt
les
ins
or
push
leave
jg
sub
dec
mov
sbb
sahf
cmps
cld
mov
enter
push
shl
sub
dec
mov
sub
dec
sbb
mov
or
test
jp
xchg
setb
jbe
arpl
fidivr
ret
lea
mov
rcl
mov
scas
mov
xchg
push
mov
lods
xchg
push
or
idiv
push
hlt
xchg
add
loop
stos
jge
inc
lahf
popa
test
fisubr
adc
pop
or
cmp
into
jmp
sub
bound
addr16
and
cwde
sbb
mov
repz
fist
aaa
mov
sub
loope
(bad)
ja
int3
push
lock
lahf
jns
jp
push
sti
sbb
inc
mov
stos
sub
aaa
sahf
sub
inc
js
push
cs
into
adc
inc
sbb
push
and
jge
sbb
ss
mov
into
jns
in
scas
loope
(bad)
test
mov
loopne
dec
cli
mov
(bad)
jge
jb
imul
gs
loope
or
mov
jle
mov
std
arpl
mov
into
dec
xor
icebp
and
mov
stos
mov
retf
xchg
fldl2e
in
jmp
pop
sti
mov
mov
sub
fstp
cmps
cmp
push
push
or
inc
xchg
mov
out
jmp
or
pop
adc
cmp
call
cmp
addr16
xchg
daa
sbb
adc
xor
clc
push
outs
xor
dec
jmp
out
cmp
repnz
xor
pop
jmp
and
or
mov
mov
imul
mov
frstor
call
scas
mov
push
push
jle
jmp
movs
mov
fstp
inc
jno
repnz
inc
cs
scas
test
out
jmp
loope
jmp
loop
mov
enter
test
push
jns
or
add
dec
cld
fidivr
add
adc
push
xor
mov
outs
pop
mov
push
pop
jp
jae
cdq
sbb
xor
mov
sub
and
cmp
jbe
pushf
jb
je
aaa
jmp
in
in
daa
cld
cld
ror
sbb
(bad)
mov
and
pop
sti
inc
mov
loop
cmps
cld
mov
jno
retf
nop
jle
jmp
jmp
push
sub
aam
push
and
push
push
inc
loopne
cmp
or
cdq
lods
cmp
xor
les
cmp
stos
cmps
dec
dec
arpl
mov
cmps
jle
pusha
int3
cmp
jmp
add
mov
dec
add
call
popa
movs
das
loop
and
adc
nop
jo
(bad)
addr16
xchg
icebp
xchg
stos
dec
lods
icebp
pop
and
mov
dec
and
push
sub
pop
xor
pop
xchg
inc
pop
xor
retf
rcl
inc
and
adc
sub
call
push
xchg
cmp
pop
push
stos
inc
cld
mov
scas
(bad)
scas
mov
loope
sar
or
push
ror
mov
enter
outs
xor
cmp
and
ss
xchg
not
sub
ficomp
mov
mov
fnstenv
or
shl
popa
imul
inc
jmp
or
sub
adc
out
mov
dec
sar
add
jl
test
and
dec
loopne
jno
nop
rol
xor
call
stos
std
xchg
push
int
lea
jne
mov
stos
mov
rcl
inc
mov
sub
sub
outs
add
iret
shl
pop
pushf
mov
mov
les
sahf
rcl
xchg
addr16
test
sbb
inc
aad
mov
inc
xchg
aaa
lods
mov
icebp
mov
adc
stos
cmp
stos
in
retf
lds
dec
pop
cli
lock
fdiv
ins
and
or
xchg
sbb
cs
test
xor
xor
ss
js
dec
adc
shl
jl
rcl
pop
xchg
repz
ror
jae
jns
shr
mov
rcl
jge
(bad)
fstp
arpl
jne
cli
call
stc
cmp
pop
xlat
pop
fs
leave
pop
movs
jmp
fs
sub
or
push
sbb
xor
mov
fld
loop
icebp
out
xlat
mov
(bad)
jecxz
cwde
ja
rcl
shr
push
xchg
or
or
std
mov
icebp
or
fbld
ret
pop
lods
push
je
pop
inc
push
mov
pop
mov
aam
lods
fmul
xchg
xor
mov
dec
bound
sub
lock
stc
sub
icebp
fstp
inc
stos
jg
aas
shl
fimul
dec
push
inc
lea
fs
pop
add
inc
dec
jle
pop
ds
mov
mov
loope
mov
xor
daa
add
fbld
xchg
nop
(bad)
ins
jmp
lea
mov
sbb
out
push
mov
mov
pop
scas
sahf
xor
xchg
inc
adc
sub
cmp
leave
fwait
in
sbb
jp
xor
scas
xchg
cmps
cmp
scas
xchg
xchg
inc
mov
xor
inc
sub
loope
iret
pop
mov
ss
dec
ret
lock
int
int3
movs
mov
or
retf
jecxz
push
mov
pushf
ret
jge
enter
imul
test
dec
loope
push
je
ret
aam
cmp
pushf
pop
addr16
cld
sbb
adc
loop
cmp
jnp
lods
pop
test
rol
in
and
sbb
outs
inc
add
xor
xchg
test
sub
and
xor
aad
rcl
xchg
mov
or
adc
mov
xor
cmps
pop
push
stos
mov
cmc
daa
sub
pop
arpl
xlat
es
cmp
dec
retf
(bad)
fsubr
push
sub
mov
dec
push
cmc
push
xchg
mov
loopne
loope
adc
add
jge
in
push
cmp
sub
add
neg
test
jnp
imul
push
push
loopne
test
retf
cld
dec
inc
icebp
jns
or
jecxz
sbb
jmp
jecxz
popf
jne
mov
add
fist
stos
es
push
cmp
inc
clc
fadd
pop
xchg
loope
fcom
xchg
cmp
daa
push
push
test
repz
call
fnstenv
nop
int3
xlat
test
sti
cdq
jge
jae
jl
loop
daa
(bad)
jmp
mov
pop
jno
das
jnp
pop
mov
jae
out
jecxz
or
es
cli
push
shr
lods
inc
cmp
add
ror
stos
mov
sub
addr16
popf
retf
xchg
pop
adc
inc
test
aas
clc
inc
adc
mov
jnp
out
xchg
push
retf
mov
jle
rcl
jg
push
in
jecxz
pop
loop
and
add
add
mov
mov
rcl
fcom
or
sub
inc
cmp
fcmovb
xchg
xchg
ret
out
cmp
lahf
shr
sbb
jg
inc
in
clc
jmp
xor
jnp
cmps
repnz
cmps
cmp
pushf
pop
pusha
fs
xor
out
jp
out
stc
xchg
mov
in
push
sub
jmp
push
cmps
xchg
push
jle
sbb
daa
mov
test
mov
hlt
addr16
out
in
arpl
bound
fidivr
mov
jb
shl
imul
sub
es
mov
and
fcmovnb
lock
ror
cs
cmp
pop
push
inc
call
fidiv
add
sub
and
or
mov
pop
jmp
scas
adc
jl
mov
jl
call
test
mov
jmp
test
ret
push
xchg
scas
xchg
mov
in
dec
loopne
jmp
pop
stc
into
inc
fisttp
je
xor
int
cmp
clc
jmp
sbb
jmp
in
push
das
outs
shl
fs
mov
mov
ret
adc
xor
iret
out
inc
dec
push
cmp
outs
out
popa
(bad)
or
xchg
mul
push
mov
(bad)
jmp
mov
xchg
sbb
push
push
out
rol
test
call
loopne
push
int3
push
lea
push
aaa
sub
lock
pop
fs
lea
into
jle
push
adc
adc
and
test
jne
push
clc
mov
call
adc
sub
sbb
jmp
cmp
add
cmp
fdiv
jmp
jo
push
(bad)
outs
div
test
retf
jne
xor
xchg
loop
mov
sbb
adc
clc
adc
mov
mov
mov
add
push
adc
bound
ins
test
daa
fidiv
call
and
pop
inc
enter
popf
cdq
call
inc
or
jle
popa
movs
aam
mov
test
call
push
test
ret
popa
push
xor
cs
jmp
push
and
sub
cmp
and
ficomp
in
movs
sbb
out
inc
adc
rcr
mov
je
out
call
jnp
(bad)
push
mov
mov
inc
das
push
test
test
iret
mov
add
xchg
xchg
fisttp
mov
(bad)
pop
mov
push
scas
xor
gs
mov
inc
xchg
push
sbb
aas
clc
mov
shr
cmc
lea
push
and
mov
cmp
ds
int
push
sub
cwde
push
sbb
addr16
sbb
xor
lahf
jo
mov
rdtsc
dec
and
jl
push
add
and
inc
ss
retf
mov
ret
js
in
cmp
inc
outs
mov
pop
lods
push
jb
bound
clc
xor
pop
enter
pop
push
xchg
jp
pop
xchg
push
mov
push
ret
cmps
inc
pop
and
in
and
fcom
mov
into
mov
sbb
or
pop
out
sar
dec
sbb
shl
xlat
xor
inc
push
or
mov
jmp
mov
adc
aam
push
or
int
popf
into
aad
push
mov
push
stos
add
movs
push
or
inc
(bad)
addr16
popf
mov
mov
xor
cmp
jl
push
push
popf
or
ficom
dec
adc
stos
cmp
sbb
int3
int
adc
jp
js
and
lds
jl
aas
xor
pop
lock
cmp
sahf
std
sahf
push
lods
mov
cs
out
mov
rol
aad
mov
clc
and
fimul
mov
addr16
inc
jnp
dec
adc
imul
adc
leave
loop
inc
ins
lahf
push
mov
push
cdq
and
fstp
inc
and
jo
mov
ins
outs
jbe
mov
fldenv
je
scas
inc
mov
loope
mov
and
arpl
mov
fisub
cdq
imul
pop
xchg
stc
mov
jle
test
push
ja
push
xchg
and
mov
or
jnp
mov
sub
outs
dec
mov
(bad)
out
xrelease
ins
je
sbb
ret
(bad)
mov
out
es
gs
add
inc
jl
adc
leave
mov
add
enter
arpl
shl
and
dec
jecxz
inc
mov
jmp
or
and
int
(bad)
or
xor
sbb
(bad)
or
cmps
loop
stc
into
add
pop
push
mov
push
xchg
test
fnsave
push
push
popa
out
cwde
or
ds
jne
mov
xor
cmp
push
sbb
push
cld
mov
xchg
icebp
cld
(bad)
lock
sbb
test
push
and
cmc
adc
xchg
xor
jno
das
leave
popf
xor
stc
loop
adc
fcom
add
pop
xor
mov
out
ret
or
dec
xchg
pop
sub
repz
mov
pop
in
pushf
js
cwde
cmp
adc
and
rcr
push
int
inc
and
dec
cli
push
inc
stc
cwde
xor
loop
jecxz
inc
(bad)
xchg
pop
(bad)
scas
lea
xchg
call
xchg
xor
fnstsw
stos
lods
fnstsw
retf
or
lahf
sub
stos
out
xchg
pop
pop
loopne
shr
movs
test
jno
in
(bad)
cli
sub
pop
nop
ja
sbb
mov
in
jae
pop
icebp
sub
and
sbb
mov
clc
outs
pusha
inc
es
mov
cmp
pop
push
push
mov
xchg
xchg
sbb
push
ret
cmps
jecxz
or
adc
popf
lea
inc
dec
mov
sub
out
xchg
icebp
xchg
cmp
xchg
ds
mov
stc
test
add
xchg
cmps
or
push
lea
in
dec
xor
cmps
or
stc
int
and
fs
stos
cs
bound
pop
xchg
gs
sub
aaa
loope
xchg
mov
int
fisttp
jge
inc
xor
clc
jle
ins
ins
test
icebp
les
cmps
and
push
xor
fidiv
dec
bound
mov
dec
add
pop
fadd
int3
loop
and
or
neg
inc
cmps
stos
stc
(bad)
leave
shl
sbb
icebp
mov
pushf
fiadd
mov
push
fnstenv
add
neg
xor
push
imul
aaa
push
push
mov
hlt
and
jle
push
ror
scas
rcr
lods
les
int3
movs
cs
mov
loop
pop
icebp
add
mov
cmc
pushf
out
inc
leave
adc
dec
and
fisubr
mov
in
push
jnp
ja
ins
jmp
xchg
scas
jo
pop
sbb
mov
fmul
aaa
push
outs
mov
xchg
ficom
push
ins
jo
loopne
mov
sub
adc
cmps
push
hlt
outs
inc
cmps
repnz
icebp
cmps
or
xor
out
dec
sbb
xor
mov
or
in
outs
rcl
push
dec
jmp
sub
mov
lds
mov
pop
out
xor
mov
jno
ins
test
inc
xor
or
lock
in
and
rcr
sbb
cmp
mov
and
jg
cli
shl
rol
ss
iret
xchg
push
out
ror
rcl
inc
and
mov
aad
or
ins
and
pushf
daa
adc
push
jo
scas
xchg
int
dec
aam
and
dec
lods
outs
inc
stc
fdivr
mov
retf
addr16
adc
outs
add
mov
inc
repnz
es
mov
xchg
push
in
xlat
jnp
pop
cmps
ror
outs
push
(bad)
cmp
xchg
enter
mov
repnz
xchg
jne
int3
in
mov
adc
repz
mov
lea
call
adc
sbb
out
mov
inc
cmp
push
push
push
in
mov
sbb
mov
fsubp
sub
pop
pop
inc
icebp
fisubr
and
push
sbb
mov
outs
jecxz
out
cmp
add
pop
(bad)
aad
popa
nop
mov
jmp
aaa
mov
and
outs
(bad)
in
mov
xchg
jecxz
imul
mov
mov
stc
sub
add
pop
shl
or
sub
sub
aam
scas
call
inc
and
mov
ins
and
mov
scas
dec
xchg
inc
jle
xor
sti
jae
(bad)
cdq
dec
scas
retf
(bad)
es
mov
jmp
and
or
js
jl
gs
mov
aas
shr
lahf
jp
push
jmp
scas
leave
jmp
push
or
push
mov
(bad)
clc
in
xor
repnz
int
sub
mov
push
pop
pop
push
cdq
adc
push
push
mov
pop
jmp
lock
xor
sub
pop
push
jne
fadd
dec
repz
jns
mov
test
or
pop
jl
xchg
pop
loopne
and
cli
mov
retf
xor
mov
push
(bad)
bound
sbb
leave
xor
je
scas
add
dec
mov
jmp
test
rol
aas
jo
mov
pop
fild
das
mov
jae
into
adc
popa
and
shr
out
cmp
rcr
dec
and
adc
shr
inc
(bad)
enter
sbb
addr16
xchg
jecxz
mov
mov
stos
push
xchg
pop
bound
push
xor
pop
cdq
call
retf
jg
je
mov
cmps
push
test
ror
xor
pop
stc
bound
leave
mov
ret
out
pop
fild
mov
mov
or
cs
pop
out
jge
push
xlat
push
jne
and
sub
and
sbb
add
das
xchg
clc
mov
inc
repz
cmc
daa
stos
dec
xchg
inc
stc
sbb
sti
adc
sbb
jbe
pop
and
mov
scas
mov
adc
dec
xchg
adc
push
movs
out
push
jl
es
sub
lock
dec
or
retf
jmp
xor
push
push
lds
adc
xchg
pusha
jae
outs
sub
or
cwde
int3
iret
cmp
add
or
mov
mov
or
cmp
leave
outs
add
test
shl
in
mov
pusha
push
(bad)
push
hlt
push
pop
sub
stos
pop
test
mov
mov
mov
fwait
rep
jg
inc
ret
xchg
pop
scas
addr16
and
out
(bad)
loope
add
sub
jb
pop
and
gs
mov
pop
xchg
inc
xor
inc
xchg
xchg
sub
mov
push
cwde
mov
cmp
push
nop
mov
xor
or
clc
adc
mov
xor
outs
cmp
and
popa
call
push
xor
gs
xor
xor
mov
cmp
fisttp
dec
inc
sub
mov
or
lds
rcr
cdq
add
fidiv
cli
pusha
xor
retf
in
mov
mov
jne
mov
aad
cmc
mov
and
aad
sub
jbe
imul
pop
scas
push
add
iret
mov
xchg
mov
out
and
sbb
cmps
cli
(bad)
fbld
ret
dec
cld
sbb
inc
push
jmp
mov
mov
add
stos
not
mov
aas
or
ficomp
fs
aas
test
dec
sub
test
cmp
add
stos
lods
pop
sti
je
push
push
jae
inc
neg
pop
inc
shl
cmp
sub
add
ja
test
in
addr16
dec
adc
int3
ud0
jmp
mov
cmp
retf
pop
in
or
sub
pusha
inc
and
mov
jle
mov
jno
sbb
xor
mov
push
(bad)
lahf
sbb
jle
movs
adc
fdiv
mov
adc
fsub
pop
shl
out
mov
ret
mov
sub
xor
dec
and
jg
div
mov
clc
call
xchg
adc
movs
(bad)
and
aad
pop
fcom
mov
leave
fwait
je
inc
jo
cmp
dec
dec
add
push
xchg
stos
inc
mov
aad
or
repnz
clc
movs
cmp
imul
xlat
sbb
mov
cs
out
pop
bound
mov
mov
out
inc
(bad)
clc
rcl
pop
inc
sbb
(bad)
inc
push
cmp
jae
mov
inc
pop
bound
imul
push
cld
xchg
pop
xchg
(bad)
aad
xor
adc
sbb
mov
aas
lock
mov
fbld
shr
aad
cmps
sub
out
je
leave
pop
push
ins
outs
imul
push
in
or
ror
aam
push
(bad)
xchg
or
out
sahf
fbld
ss
mov
das
test
das
or
cmps
ss
inc
adc
imul
out
sti
xor
lock
mov
jo
(bad)
call
xor
outs
jb
xlat
nop
push
sub
aas
gs
add
inc
push
sbb
push
cmp
push
jne
outs
lea
push
cmp
inc
loop
cmps
dec
mov
sbb
rcl
mov
out
mov
adc
xchg
mov
dec
xchg
sub
sub
daa
mov
sbb
test
and
cmp
not
sar
in
cmp
mov
idiv
mov
mov
and
add
lock
mov
aas
dec
shl
xchg
gs
xchg
das
in
pop
ret
mov
push
or
mov
mov
daa
mov
inc
mov
daa
sbb
sbb
ja
ret
gs
mov
push
sahf
fs
mov
jp
arpl
dec
xlat
xor
inc
cmp
add
cmp
fs
ds
sub
shl
dec
pop
dec
rcl
and
je
mov
(bad)
jmp
or
sub
mov
stos
inc
scas
pop
loope
div
bound
xchg
add
sub
cmps
int3
rol
xor
lock
pop
jl
dec
sbb
mov
fimul
test
addr16
les
stos
push
in
pop
sub
in
cmps
call
sbb
dec
popa
cli
jnp
div
es
scas
in
jecxz
and
call
shl
jbe
out
mov
arpl
ss
dec
xor
bound
cmp
lock
adc
or
inc
adc
stc
ret
jmp
cli
(bad)
retf
loopne
enter
imul
je
and
push
add
sbb
cdq
push
fiadd
and
repz
adc
cli
dec
shl
shr
inc
jo
test
ds
(bad)
cld
lahf
out
rcr
mov
cs
out
leave
sub
cdq
jne
or
mov
dec
movs
xchg
call
add
xlat
test
adc
shr
shl
cmc
xchg
movs
out
dec
stos
je
aaa
(bad)
push
push
ja
cli
mov
stos
test
sub
clc
xchg
or
daa
stc
ss
sub
mov
mov
imul
mov
sbb
xchg
ss
sbb
retf
adc
out
movs
outs
int3
movs
push
jnp
nop
enter
xchg
pop
(bad)
fsub
adc
stc
jnp
movs
mov
imul
and
dec
pop
dec
cdq
test
xor
cdq
jno
ror
addr16
xor
ins
es
jnp
xchg
xor
jg
xor
mov
les
movs
push
mov
mov
enter
and
aad
pop
cmps
sti
shr
dec
mov
out
sub
cmp
push
mov
(bad)
mov
xor
ins
cli
popa
jg
gs
inc
mov
loopne
mov
imul
xchg
push
cwde
es
scas
and
dec
xchg
fnstsw
inc
jp
inc
push
(bad)
shr
test
adc
es
cmp
adc
cmp
lahf
dec
arpl
mov
ss
push
repnz
inc
sbb
add
dec
aad
cmp
adc
pop
js
in
push
jge
(bad)
jmp
lds
sub
jge
pop
mov
fcom
mov
mov
dec
les
xor
or
push
add
adc
push
aas
mov
movs
jmp
test
stos
jge
loop
adc
or
or
add
sbb
ror
mov
mov
xor
outs
iret
inc
mov
mov
mov
adc
retf
push
(bad)
(bad)
sbb
out
mov
jecxz
and
add
mov
fst
in
cmp
jmp
imul
arpl
imul
sub
inc
xchg
das
or
mov
(bad)
aam
stc
retf
push
cmc
dec
mov
push
imul
pop
(bad)
adc
loopne
ss
sbb
movs
test
shl
cdq
out
sub
dec
dec
push
test
ret
retf
aad
cmp
adc
push
aaa
shl
inc
sbb
pusha
shl
mov
xchg
push
dec
mov
push
mov
retf
into
jg
cdq
inc
push
pop
ins
je
call
jecxz
data16
xlat
sbb
inc
and
cmp
xor
push
retf
inc
add
dec
push
mov
inc
gs
pusha
btc
aas
lods
(bad)
and
mov
clc
js
fistp
fstp
test
ficomp
lods
jae
adc
sub
cmc
and
ja
mov
or
mov
or
(bad)
outs
dec
lods
sub
nop
push
popa
sub
fdivp
xor
jbe
push
fidivr
cdq
sub
iret
imul
add
aas
rol
imul
pop
jb
or
sbb
loope
dec
or
mov
mov
(bad)
arpl
aas
movs
pop
mov
or
(bad)
jp
sbb
aam
jb
dec
jp
cmc
pushf
xor
mov
or
adc
xchg
hlt
dec
cwde
dec
cwde
push
inc
xor
jg
add
clc
in
iret
pop
loopne
repz
mov
push
in
data16
call
mov
push
and
vxorps
cmp
inc
fst
mul
pop
xchg
add
(bad)
fnstenv
xchg
sub
fbld
xor
call
sbb
cwde
sub
fcmovb
into
loope
retf
ret
push
inc
retf
xor
cmp
stc
push
nop
xor
pop
mov
sub
js
and
les
icebp
pushf
lods
pop
jge
mov
nop
cmp
push
les
jnp
jge
scas
mov
push
outs
sub
pop
outs
push
mov
test
pop
xor
mov
movs
outs
loopne
adc
test
test
fisub
fptan
and
frstor
jb
arpl
sahf
(bad)
inc
cmp
push
(bad)
in
pop
mov
lods
mov
call
(bad)
sub
sub
test
push
(bad)
jl
sbb
(bad)
pop
xor
and
std
push
test
mov
mov
movs
sub
lahf
inc
adc
pop
mov
jl
sbb
inc
pop
pop
or
shl
sbb
fbld
push
xchg
jo
leave
imul
call
or
or
gs
inc
ret
iret
or
leave
repz
out
xchg
mov
xor
sbb
call
mov
cmp
(bad)
rcl
dec
std
pop
or
call
stos
imul
lds
div
js
or
xchg
shr
push
push
fisubr
test
lahf
sbb
int
jle
mov
mov
nop
xchg
and
and
sbb
adc
xchg
push
fiadd
sti
mov
mov
mov
push
sbb
fsubr
sbb
push
cmp
cmp
ret
jmp
(bad)
sahf
cmp
sbb
shl
xor
and
retf
mov
(bad)
shl
jne
add
sub
dec
data16
fcom
mov
lahf
jb
mov
lods
icebp
mov
mov
pop
(bad)
pop
gs
mov
adc
and
daa
and
and
mov
mov
pop
(bad)
mov
loopne
shr
inc
lods
scas
jge
sbb
mov
jae
lods
pop
das
mov
fnstenv
mov
dec
das
cmp
enter
jmp
and
ins
fs
mov
mov
fnsave
fmul
repnz
jae
stos
mov
popf
adc
dec
xchg
loop
mov
xlat
jmp
daa
fidivr
arpl
dec
jge
test
jae
jnp
xchg
sbb
sbb
pop
xor
dec
fldenv
cmps
out
jmp
cmp
std
or
cmps
mov
push
jmp
daa
mov
add
or
push
rcr
xor
and
mov
mov
std
add
fld
cli
mov
mov
stos
in
jp
pop
ins
add
pop
cmps
fimul
or
push
dec
jnp
neg
push
mov
fs
pop
cmp
mov
fimul
pop
call
test
icebp
aad
mov
loopne
lods
sbb
arpl
sahf
mov
sub
and
in
out
jmp
jo
adc
in
(bad)
mov
sub
in
dec
sub
int
lahf
cmp
cmps
xchg
cmc
mov
sti
fucomip
jb
mov
dec
fsub
mov
sub
bound
jns
xchg
or
sbb
cmps
icebp
fsub
sub
jnp
fcom
xchg
xor
sbb
hlt
loopne
jno
jo
movs
bound
mov
ret
int3
inc
xor
and
mov
push
mov
(bad)
mov
sar
inc
leave
inc
bound
outs
cwde
clc
rcl
mov
outs
lods
out
cmp
mov
mov
daa
pop
in
cmps
call
cmp
jns
adc
cli
xor
in
sub
adc
fist
call
hlt
dec
popa
rcl
and
mov
mov
aad
(bad)
fimul
(bad)
imul
mov
jp
leave
mov
xchg
jp
mov
sahf
or
loop
dec
pop
sub
lods
out
ret
xor
bound
movs
(bad)
xchg
leave
sub
out
int3
cmp
pop
push
pop
idiv
jl
imul
push
mov
addr16
fdiv
daa
sbb
dec
push
cmp
sbb
cmps
push
or
test
loop
jnp
fistp
adc
and
mov
sub
mov
inc
cwde
mov
dec
jne
xor
adc
aad
xchg
cmps
(bad)
and
movs
ins
pop
test
mov
scas
pop
dec
cmp
rcl
sub
jmp
stos
iret
xlat
xor
add
shl
xchg
add
xchg
cmp
cmp
mov
xchg
das
out
fistp
adc
push
or
test
sbb
mov
sahf
inc
retf
lock
inc
jecxz
adc
jbe
fisttp
cmps
imul
jge
push
inc
loop
xor
stos
shr
lahf
(bad)
jnp
and
jg
retf
adc
outs
hlt
mov
dec
test
add
xor
(bad)
push
push
loopne
mul
xor
mov
or
ds
ja
cmc
sti
pop
cdq
pop
stos
mov
push
xor
cdq
shl
gs
add
push
cmovo
pop
in
in
jns
jge
add
scas
sub
mov
pop
adc
test
cmps
mov
fwait
xchg
loopne
sbb
jg
repnz
mov
jnp
test
cmp
cmp
(bad)
shl
ins
xor
lock
xchg
cmp
push
daa
vunpcklps
test
pop
and
out
shr
cli
mov
inc
jg
inc
fimul
adc
pslld
cmp
outs
mov
mov
jbe
mov
sbb
lahf
xlat
mov
aas
add
test
pop
dec
rcr
or
cld
inc
or
frstpm(287
push
mov
pop
jne
fiadd
adc
aaa
stos
mov
js
js
sbb
inc
or
(bad)
sub
add
fwait
leave
xchg
in
in
rcl
fld
xor
loope
pop
jp
adc
or
into
das
inc
daa
cmp
jle
xchg
xchg
dec
sar
pop
mov
jmp
cmp
call
inc
div
aad
test
jecxz
lods
fld
or
or
std
dec
cmp
pop
and
dec
jmp
pop
or
fst
xor
fcomp
call
dec
test
inc
sbb
cdq
inc
mov
cli
(bad)
xchg
fimul
test
and
dec
jg
inc
(bad)
loopne
stc
jmp
dec
dec
leave
retf
fabs
adc
aaa
xor
push
stc
in
xchg
mov
pop
(bad)
out
mov
jg
dec
out
mov
sub
mov
imul
inc
call
mov
into
movs
(bad)
adc
fmul
mov
cmp
dec
add
xor
out
or
enter
xchg
add
pusha
bound
sbb
mov
fs
ss
mov
call
icebp
inc
mov
(bad)
jae
popa
add
or
cmps
xor
inc
test
aas
frstor
mov
mov
in
shl
cmp
cmps
xor
jo
out
mov
sub
cli
fisubr
mov
jnp
inc
mov
into
clc
mov
mov
xor
jno
mov
sub
push
std
jb
repnz
popa
sahf
ins
xor
or
sub
add
mov
das
dec
test
int3
(bad)
out
icebp
jmp
push
(bad)
sub
cmp
repnz
mov
hlt
nop
dec
cmp
dec
rcl
jae
les
inc
cld
int
and
retf
out
cld
mov
pusha
mov
push
pop
pop
or
outs
popa
call
into
(bad)
pop
nop
xchg
sbb
inc
das
pop
pop
and
pop
dec
jle
mov
ds
mov
adc
(bad)
outs
cmps
ret
fs
pop
cmp
cmps
mov
pop
xchg
ins
mov
scas
cli
aad
outs
mov
outs
ret
pop
sub
adc
jle
adc
in
movs
sbb
rol
lock
shl
mov
in
inc
fwait
sahf
sub
push
sahf
sub
and
ss
shr
loope
dec
movs
xor
sbb
xchg
push
fwait
pop
xor
dec
cmp
push
aad
into
test
cmp
sbb
mov
fsub
in
aam
pop
(bad)
nop
xor
aas
add
(bad)
enter
inc
imul
or
cdq
scas
sbb
sbb
es
retf
xlat
jae
xlat
fnsave
jl
jbe
int
aad
sbb
mov
cmp
sbb
sbb
sbb
jno
in
mov
call
jl
pushf
repnz
xor
(bad)
nop
pop
ret
fistp
test
cdq
or
and
mov
jae
ins
sub
clc
in
push
sub
sub
jmp
mov
in
iret
mov
adc
sahf
xor
push
mov
fild
out
into
push
and
cmp
mov
mov
adc
cmp
adc
xchg
ins
(bad)
fsubr
stos
xor
adc
call
imul
xchg
mov
hlt
out
or
adc
out
jne
jnp
sub
jns
dec
(bad)
ins
lods
in
jmp
inc
sar
mov
sub
or
idiv
adc
mov
or
sbb
cmp
scas
(bad)
arpl
mov
push
sti
arpl
mov
sti
dec
adc
scas
retf
push
ret
outs
leave
aaa
mov
popf
retf
call
das
nop
dec
std
inc
xchg
sub
(bad)
jge
ss
stos
xor
mov
imul
xchg
sub
std
mov
or
(bad)
fmul
and
jge
in
push
mov
fyl2x
nop
jo
adc
inc
test
addr16
bound
addr16
stos
dec
push
es
push
dec
cmp
cwde
cli
mov
frstor
repnz
pusha
mov
dec
popf
ds
bound
push
add
xchg
jne
daa
inc
and
jb
jnp
jle
cmc
sub
addr16
ins
pop
lahf
push
lahf
pop
adc
fs
cmp
repz
inc
mov
fs
shl
mov
nop
push
adc
sahf
outs
dec
shl
sub
je
push
inc
arpl
xlat
xor
push
pushf
push
add
shl
(bad)
xor
xchg
ja
mov
dec
adc
int3
cmp
in
ins
cwde
(bad)
aas
js
pop
enter
sub
out
pop
(bad)
mov
and
aad
fcom
pop
mov
ins
xor
lahf
xor
push
lea
mov
rcr
std
inc
leave
inc
les
fmulp
mov
inc
pop
cmps
mov
sub
jle
aaa
pop
xor
push
adc
push
cmp
test
aas
dec
stc
adc
out
rol
cmp
outs
loope
and
test
retf
and
xchg
jmp
sbb
daa
call
push
sbb
scas
jbe
enter
dec
pop
hlt
cmps
lock
xor
xor
mov
stos
data16
push
push
ficom
xor
shr
ret
bound
adc
pop
cmps
push
and
push
jp
pop
sbb
sbb
popa
push
jbe
adc
ror
jg
sub
push
sub
adc
push
data16
xchg
mov
push
retf
adc
(bad)
out
imul
pop
int
xor
xchg
or
ror
pop
arpl
sbb
mov
int
stos
aaa
addr16
mov
scas
gs
add
das
jg
ret
sbb
cwde
cmp
xor
mov
cmc
frstor
dec
out
popa
sub
mov
dec
ds
sbb
mov
ror
stos
mov
pop
cmp
xchg
push
pop
imul
and
sbb
push
in
xor
enter
stos
inc
mov
fs
xchg
gs
out
shl
sbb
repz
mov
jge
shl
test
jge
lds
ins
xor
(bad)
push
jp
mov
retf
clc
enter
adc
push
into
cmps
mov
addr16
hlt
push
test
loop
loop
inc
and
ins
sub
pop
bound
push
imul
mov
(bad)
out
inc
xchg
xor
mov
inc
test
jecxz
dec
or
mov
jne
xchg
stos
repz
call
inc
mov
add
stc
mov
xor
retf
mov
dec
adc
mov
push
(bad)
and
mov
rcr
mov
div
shr
jecxz
pop
xchg
mov
sub
fdivr
sahf
repnz
pop
and
lock
xor
mov
add
ins
dec
cmp
lods
push
pushf
daa
popa
and
and
psubusb
add
iret
or
push
(bad)
aam
jmp
jno
cmp
scas
int3
jge
ds
(bad)
retf
mov
mov
loopne
jl
(bad)
movaps
(bad)
fnsave
(bad)
jae
(bad)
or
lahf
test
pop
ret
comiss
mov
dec
mov
jo
mov
icebp
cmp
jns
sub
sub
stc
retf
not
xor
addr16
mul
xor
and
push
cmp
jle
test
sti
je
mov
jns
add
mov
pop
or
mov
(bad)
retf
mov
or
(bad)
mov
jae
pop
inc
adc
pop
adc
mov
repnz
shl
mov
push
adc
sbb
hlt
and
push
jl
or
lods
push
mov
sbb
mov
pop
jl
lods
ds
pop
mov
ja
rcl
and
bound
(bad)
ins
ds
shl
mov
push
shl
in
sub
enter
jno
mov
cli
mov
sbb
xor
cmps
pop
aam
fstp
cmps
out
(bad)
adc
jp
dec
call
jl
lds
add
jo
cmp
lea
jb
push
movs
pushf
pop
sub
mov
(bad)
in
call
jp
cwde
aas
in
fisttp
fs
add
pop
pushf
sbb
jp
(bad)
mov
jmp
mov
xlat
add
mov
ret
inc
xchg
pop
pop
xchg
sub
jle
mov
mov
inc
jmp
dec
xchg
outs
push
and
stc
mov
fadd
neg
lahf
ss
outs
push
fdiv
xchg
aad
jle
scas
sbb
mov
aam
jne
fcomp
pop
jmp
xchg
cmp
fild
inc
daa
psrlw
std
(bad)
sti
pop
stos
pop
es
sbb
lods
push
inc
sbb
mov
and
adc
cld
push
je
pop
loope
xor
fisub
rcl
xchg
fwait
imul
and
sub
xor
mov
mov
test
or
in
lods
shl
enter
jb
ds
aam
push
push
push
mov
out
cdq
xchg
repnz
stos
dec
leave
imul
stos
mov
lea
xor
popa
adc
xor
pop
lea
and
gs
and
xor
scas
inc
in
ja
call
inc
clc
lods
xor
int
xlat
leave
mov
ins
sub
sahf
pop
sbb
es
cmp
cmp
jl
push
jns
movs
fisubr
dec
in
xor
and
mov
xor
inc
push
mov
aad
dec
(bad)
sbb
mov
cmp
repnz
fimul
adc
adc
daa
(bad)
fild
outs
sub
mov
pushf
jle
ins
dec
and
aam
imul
jecxz
xor
inc
mov
cli
imul
xor
shr
outs
add
cmp
cmp
xchg
mov
(bad)
scas
cmp
cwde
retf
pop
xchg
pop
sti
mov
cmc
fisttp
test
(bad)
fbld
pop
adc
hlt
outs
sbb
shl
mov
mov
aaa
push
and
in
fisub
arpl
dec
lds
cmp
cmp
sar
add
(bad)
mov
bound
adc
repnz
icebp
xor
push
cs
pushf
xor
addr16
dec
call
mov
cmp
rcr
loope
mov
push
fcomp
loope
loop
cmc
hlt
fisttp
xchg
cmp
dec
dec
hlt
push
mov
sub
nop
lods
adc
xcrypt-cfb
cmps
out
cmp
ret
popf
enter
(bad)
jmp
mov
or
cs
sub
lea
addr16
fwait
shl
mov
xor
movs
sbb
inc
dec
cmc
js
mov
jmp
cmp
cmp
jns
adc
fnstsw
scas
shr
or
mov
dec
mov
popa
cmp
cli
rol
cmc
les
mov
dec
js
jmp
mov
dec
mov
mov
add
clc
sbb
cli
test
dec
and
mov
sbb
mov
adc
add
out
or
fistp
stos
mov
dec
data16
mov
cmp
add
pop
xor
or
outs
ror
mov
jne
sbb
repz
sub
sbb
retf
mov
cdq
jp
loopne
mov
adc
xchg
repz
mov
lds
mov
in
mov
push
retf
mov
xchg
std
out
les
out
iret
push
pop
scas
aas
push
out
sbb
dec
out
shl
sti
sbb
jle
ret
cli
xor
cwde
dec
add
sub
hlt
push
jmp
cmp
out
cmp
pop
adc
ins
mul
dec
push
mov
loope
mov
pop
mov
mov
enter
pop
inc
pusha
lods
add
ror
push
cmp
test
push
xor
sbb
loope
and
and
jg
pop
dec
(bad)
pop
or
in
ins
xchg
cmps
push
sahf
ror
clc
es
std
mov
sbb
mov
push
xchg
inc
lock
imul
sbb
pusha
xchg
fwait
pushf
or
xchg
(bad)
popf
cs
pop
dec
pop
sbb
lahf
cmp
jecxz
call
scas
pop
clc
add
pusha
lea
aam
in
shl
add
add
inc
xchg
mov
add
sbb
push
mov
loope
cdq
inc
shr
(bad)
mov
inc
repz
mov
aas
cmp
mov
cmp
sub
out
cmps
call
jns
shl
push
ret
enter
push
jg
popa
jbe
sahf
clc
pop
test
push
call
dec
add
pop
movs
(bad)
pop
push
icebp
push
push
dec
rcr
xor
add
fldcw
jae
(bad)
push
gs
xor
sbb
outs
xchg
xor
pop
inc
shl
stos
std
pcmpeqd
jo
push
or
outs
mov
xor
sub
add
aas
mov
cmp
add
pop
gs
jg
fs
xchg
add
int3
push
jl
pop
push
xchg
cmp
sar
sub
clc
test
jle
in
inc
cmc
mov
cwde
fwait
loop
(bad)
stc
sar
hlt
lds
inc
push
out
loop
mov
clc
inc
adc
sbb
add
ror
(bad)
ja
aam
out
fdiv
es
retf
int
fwait
mov
int3
jb
sbb
into
into
cmp
dec
push
test
test
mov
ins
ret
mov
cmp
imul
push
jle
outs
test
jnp
ror
ret
loop
mov
fs
lods
(bad)
hlt
add
mov
popf
fnstenv
xchg
(bad)
iret
test
xchg
shl
cli
push
pop
cli
int3
sub
test
jb
or
(bad)
movd
dec
xchg
push
sbb
mov
adc
jl
cmps
inc
mov
push
clc
xchg
pop
mov
adc
bound
jle
and
imul
(bad)
cld
cmp
xchg
or
jge
test
cmps
xor
push
(bad)
std
mov
cli
xchg
jb
add
mov
retf
and
dec
fstp
lods
aas
push
(bad)
div
loope
mov
fsubr
mov
mov
dec
push
mov
dec
(bad)
mov
xchg
retf
shl
xor
je
sub
xchg
inc
out
cmps
ret
add
scas
push
or
sahf
and
pop
mov
test
xor
pop
cmp
imul
loope
or
fsub
mov
outs
bound
xor
sub
hlt
ret
cmp
pop
pusha
sti
mov
dec
test
add
push
ret
mov
daa
jge
adc
push
ins
cmps
ss
ret
or
inc
jmp
bound
cmp
push
mov
add
cmp
call
and
mov
fst
fadd
test
fwait
neg
pop
dec
pop
(bad)
es
xchg
jge
xchg
push
jne
rol
in
stos
cmp
jbe
dec
inc
mov
xchg
rcl
sar
sbb
pop
sub
jl
xorps
cmp
mov
adc
mov
icebp
jmp
fs
dec
jp
fidivr
xchg
jo
sbb
xor
adc
xlat
and
pop
mov
xor
xchg
sbb
sar
fst
js
mov
shl
mov
sbb
inc
cwde
push
(bad)
cmp
imul
loop
icebp
inc
inc
xor
add
mov
je
cs
popf
enter
dec
loop
push
xlat
mov
call
add
idiv
pop
stos
arpl
inc
xchg
or
push
out
cmps
mov
xlat
retf
out
add
sbb
loope
and
dec
mov
push
out
jb
(bad)
arpl
outs
int3
and
movs
movs
inc
pop
jbe
loop
xchg
push
(bad)
sub
mov
ins
mov
sti
(bad)
pushf
dec
inc
adc
sbb
or
inc
inc
and
ins
or
and
jmp
sub
mov
adc
push
mov
sub
lea
cmp
into
and
add
mov
or
es
and
repz
stc
mov
sub
or
jmp
jbe
xor
sub
add
retf
mov
jb
scas
mov
repnz
or
je
test
pop
dec
ja
fst
jge
and
mov
rol
push
and
jle
ror
pushf
xor
jp
cmp
xchg
or
cs
sbb
adc
les
ins
mov
daa
(bad)
add
outs
mov
adc
mov
adc
out
shl
or
lods
or
sbb
jl
adc
dec
addr16
js
mov
add
mov
mov
or
jae
pop
in
add
adc
pop
aad
(bad)
add
fstp
cmc
cmc
mov
sub
ins
or
or
mov
pop
cmps
pushf
adc
pop
imul
stc
sahf
ja
xchg
cdq
fadd
pop
lea
(bad)
cmp
imul
push
sub
cld
mov
cmp
add
jl
push
xor
jns
loop
push
mov
mov
or
nop
push
dec
pop
mov
ins
jecxz
mov
push
(bad)
fsub
test
inc
movs
cmps
addr16
dec
add
shl
daa
mov
scas
je
mov
aad
and
sub
xchg
pop
pop
pop
mov
xchg
inc
mov
pop
pop
repz
in
mov
add
mov
out
cld
sti
and
rcl
jns
sub
fwait
push
and
adc
mov
mov
jmp
je
movs
pop
dec
xlat
sub
cmp
mov
push
push
push
or
push
(bad)
jo
test
mov
jecxz
adc
jge
repnz
jp
jne
sbb
push
movs
lock
push
pop
les
pop
addr16
stos
imul
into
add
retf
hlt
std
or
cwde
mov
add
add
xlat
xor
movs
and
sbb
pop
bswap
push
mov
pop
sub
(bad)
sub
adc
adc
loopne
dec
fsubr
leave
ds
mov
mov
pop
cmp
pop
cmp
mov
movs
pop
outs
xchg
lahf
mov
ins
and
or
call
arpl
xchg
mov
pop
dec
push
into
gs
scas
daa
out
push
popa
and
adc
xor
xor
jno
push
test
sub
hlt
sahf
push
ins
fcomp
xchg
jg
shl
jbe
xor
push
pop
push
movs
cmp
popf
mov
and
rcr
sahf
mov
out
(bad)
xchg
enter
xchg
and
not
inc
mov
movs
outs
dec
jp
fcom
mov
repnz
mov
icebp
add
mov
adc
push
ins
or
fisttp
xchg
ja
xor
in
arpl
popf
pop
push
mov
jecxz
mov
xor
sub
adc
xchg
outs
xchg
mov
jp
and
sbb
cli
cmp
ret
cmps
in
cmp
pop
mov
lods
je
push
add
add
xchg
pop
jbe
cld
imul
cmp
push
in
adc
sbb
popa
mov
sub
push
stos
adc
lods
push
movs
fcmovbe
xor
inc
adc
mov
div
mov
js
int
or
imul
lods
push
fcomp
add
mul
pop
jmp
push
mov
jns
mov
jmp
outs
fs
popf
xchg
(bad)
in
lock
jg
lods
mov
fild
aam
pop
shr
lea
adc
adc
retf
retf
mov
sub
stos
ss
enter
lods
sbb
push
in
ds
js
pop
lock
pushf
inc
jecxz
mov
stos
adc
adc
xchg
xor
sbb
loopne
outs
mov
mov
and
pop
sub
or
out
mov
loope
cdq
mov
mov
arpl
or
test
std
cmp
mov
lods
mov
cdq
dec
les
xchg
mov
imul
xchg
(bad)
push
dec
mov
imul
sbb
out
popa
mov
mov
xchg
jg
in
mov
adc
xor
fisttp
mov
lods
(bad)
jb
aas
ffreep
add
jmp
cs
inc
add
push
and
pop
cmp
call
mov
dec
repnz
add
adc
mov
js
stc
mov
jp
hlt
mov
mov
add
and
mov
mov
mov
pop
out
es
test
out
jg
ror
lock
mov
test
push
sbb
scas
mov
inc
adc
scas
(bad)
(bad)
and
xlat
aaa
call
test
cmps
mov
outs
aaa
les
daa
mov
jg
sub
mov
fidiv
daa
xchg
sti
mov
outs
data16
les
push
jp
mov
lods
ret
lock
pop
cmp
xchg
mov
pop
sbb
pusha
and
fwait
xlat
int
mov
pop
xchg
sbb
imul
inc
jae
dec
adc
mov
xor
xlat
call
jmp
outs
add
cs
add
dec
in
sar
hlt
faddp
cdq
mov
jp
scas
mov
mov
or
mov
push
ss
aam
rcr
xchg
cs
ss
clc
hlt
test
test
sbb
inc
inc
lods
xlat
sbb
popa
cdq
sahf
test
dec
pop
aam
addr16
movs
iret
outs
jp
rcl
or
sub
fidiv
popf
ins
mov
pop
mov
add
aad
fild
aam
out
ja
movs
and
mov
mov
pusha
out
and
dec
mov
in
bound
xchg
adc
out
xchg
xchg
add
mov
arpl
ins
cmps
or
les
js
pop
ins
repz
sbb
aas
lds
xchg
popf
fdivr
aaa
and
push
pop
dec
imul
adc
xor
jae
in
push
and
xchg
pop
push
sbb
clc
cld
stc
mov
int
xchg
xchg
retf
xchg
pop
and
mov
jmp
faddp
fldenv
xlat
xchg
cmc
icebp
das
ja
ins
scas
pop
inc
mov
cmc
inc
ret
repz
ja
test
loope
call
rcr
adc
cld
xchg
push
pop
fidiv
cdq
mov
imul
jb
mov
hlt
dec
jo
push
stc
mov
(bad)
(bad)
fst
cdq
dec
cwde
inc
sbb
jge
push
movs
push
scas
not
popf
rcr
mov
out
dec
(bad)
cmps
dec
test
ja
int
pop
sar
mov
adc
aam
adc
aaa
xchg
inc
dec
movs
sub
xchg
aaa
sbb
mov
adc
jmp
inc
shr
std
dec
sub
test
in
push
(bad)
rol
push
cmc
sub
fisubr
jnp
dec
sbb
out
mul
or
mov
rol
fs
mov
dec
bound
sbb
xchg
mov
dec
mov
mov
sar
popa
out
inc
call
rcl
loopne
inc
lods
jmp
ins
pop
cmc
and
jb
fistp
pushf
sahf
sbb
jns
mov
jo
mov
(bad)
cmc
or
push
add
xor
push
xchg
xor
aaa
rol
fld
adc
pop
mov
lods
push
mov
dec
jbe
lahf
jno
sub
hlt
test
pop
sbb
mov
fs
iret
or
inc
jmp
in
xchg
and
and
dec
sub
sbb
outs
clc
mov
rcl
ins
xor
cmc
pop
and
xor
outs
sbb
ds
call
ret
rcl
lds
inc
mov
loopne
sub
dec
hlt
ret
pop
lea
scas
nop
shl
cli
and
mov
dec
adc
int3
fild
mov
mov
ins
(bad)
fsub
mov
in
nop
in
in
mov
mov
add
jne
repz
pop
(bad)
or
mov
call
xchg
push
les
jne
mov
das
cwde
lods
test
add
std
xchg
fmul
adc
std
push
repz
out
pop
inc
inc
jl
dec
push
ss
in
xlat
cmc
pop
hlt
cdq
test
or
mov
adc
mov
div
xchg
or
xlat
fcom
jae
ja
dec
aaa
add
and
push
xor
mov
mov
adc
jmp
test
repnz
add
and
imul
in
mov
pop
lock
inc
in
sub
dec
jns
not
sub
repnz
xchg
mov
xchg
push
in
jnp
lahf
arpl
stos
pop
and
data16
dec
leave
test
stos
lahf
inc
push
jns
clc
mov
mov
and
cmc
xor
mov
cmp
mov
and
scas
sbb
sbb
xchg
movs
aam
push
jbe
ret
sbb
xchg
adc
push
push
stos
bound
scas
sti
inc
mov
pop
sti
and
dec
mov
push
retf
ja
adc
mov
out
das
sub
xlat
cwde
jnp
xchg
inc
and
scas
push
in
jo
addr16
adc
shl
inc
push
stos
jb
xchg
push
ds
mov
inc
shl
jmp
out
call
scas
inc
ds
xor
adc
loop
js
lock
dec
scas
out
inc
mov
jecxz
sub
fnstsw
cmp
mov
push
outs
ret
out
call
mov
xchg
int
mov
fldcw
dec
dec
repz
ds
adc
mov
sti
xor
xchg
out
xor
inc
xchg
jns
push
xchg
sar
inc
mov
aam
cwde
push
mov
jns
mov
sub
je
sub
imul
mov
jl
xchg
out
push
dec
sbb
push
jbe
xor
mov
bound
inc
cli
in
adc
jno
out
jmp
ins
pop
mov
aad
adc
pop
cdq
outs
or
ret
and
(bad)
cli
jns
pop
add
push
in
repnz
cmps
mov
or
inc
out
fcmovnu
push
ins
mov
mov
shl
mov
xchg
rcl
scas
xchg
mov
mov
ror
add
imul
and
jne
mov
mov
aad
dec
shr
(bad)
dec
sub
or
std
xchg
mov
loop
ficomp
sub
add
cwde
jmp
clc
rcr
and
jnp
jb
adc
test
push
popf
xchg
cmp
(bad)
fidivr
addr16
ret
(bad)
add
sub
sbb
pop
mov
clc
adc
ins
cmps
les
push
sar
pop
and
gs
mov
sub
sub
mov
cmc
fisttp
out
hlt
sbb
and
and
aas
lods
sub
in
rcl
adc
sbb
mov
in
xor
movs
gs
pop
mov
inc
mov
popa
outs
pop
pop
inc
mov
pop
sub
fstp
ret
sub
in
xchg
cmp
sbb
and
mov
dec
enter
in
pushf
lds
std
pushf
out
sub
xchg
pop
jl
adc
sub
popa
imul
into
mov
loop
lock
into
xor
and
inc
cmp
mov
adc
imul
lods
xchg
mov
sub
adc
inc
div
imul
pop
jo
bound
or
std
out
sub
sbb
in
push
mov
dec
fisub
pop
in
cmp
push
cmp
jmp
hlt
leave
dec
fwait
sub
sbb
cmp
sbb
push
fwait
mov
xlat
lds
loope
bound
out
in
sbb
ja
in
push
push
mov
push
(bad)
cmp
std
das
xor
jmp
xchg
cmps
leave
dec
xchg
not
outs
xor
(bad)
arpl
inc
lods
bound
fld
cs
and
push
push
inc
and
fcomp
or
sub
sahf
sbb
xor
lods
and
and
or
cmp
rcl
in
lds
cmpps
inc
les
sub
rcl
js
pop
cmp
fnsave
outs
jae
hlt
pop
mov
clc
out
hlt
icebp
push
jb
ret
sub
scas
push
xchg
pop
arpl
push
add
call
and
jmp
xchg
add
outs
aaa
popa
mov
in
je
in
add
mov
shr
or
push
cmps
shr
sub
sbb
dec
mov
aad
add
fs
in
imul
scas
icebp
jne
xchg
call
movs
ss
pop
add
retf
mov
int
loope
push
sbb
and
scas
and
inc
pop
iret
add
mov
inc
xor
movs
fcomip
outs
cld
sbb
in
push
call
mov
push
cmp
cmp
stos
stc
push
inc
test
int
mov
loopne
fbstp
fisub
add
add
stos
and
inc
mov
mov
push
imul
call
repnz
test
push
inc
jnp
sbb
mov
fldcw
cmps
clc
rcr
adc
mov
call
mov
jecxz
icebp
cs
call
out
pop
fsub
call
repnz
sbb
sub
xchg
cdq
jbe
cmp
gs
push
cmp
adc
mov
mov
std
fmul
adc
scas
adc
or
add
pop
imul
mov
sbb
jnp
test
les
sub
dec
lahf
or
popf
fiadd
cld
xchg
je
rol
mov
ret
out
pusha
data16
sahf
nop
jbe
inc
fst
pop
add
test
add
or
pop
xor
mov
sti
cmp
stc
inc
clc
cmp
mov
jmp
leave
mov
sbb
ja
fdiv
mov
lods
lea
ins
jge
(bad)
push
cmp
xchg
mov
pop
push
xchg
mov
cs
fdiv
es
pop
xor
mov
aaa
xchg
mov
adc
pushf
sub
cmp
rcr
adc
xchg
lea
cld
or
aam
sbb
movs
xchg
pop
inc
addr16
lea
movs
aaa
hlt
test
in
mov
adc
rcr
loop
dec
mov
sar
or
sub
not
push
fiadd
cdq
bound
push
imul
iret
popf
jno
add
cmps
jns
hlt
jno
sub
and
and
stc
mov
sub
xor
or
push
into
fnstenv
sti
xor
repnz
int3
fdiv
data16
dec
das
or
je
xchg
retf
lods
ret
dec
jecxz
jb
mov
repnz
push
or
xchg
lods
pop
mov
rol
in
push
mov
call
pop
push
retf
mov
cmps
stos
mov
stos
fst
xchg
ds
or
sbb
scas
pop
add
xchg
icebp
(bad)
cli
scas
ret
adc
rol
mov
sbb
lods
fild
inc
cmp
pop
imul
(bad)
into
mov
jg
adc
xor
cmp
ror
xor
adc
pop
(bad)
sar
outs
xor
imul
ret
daa
inc
rol
mov
jbe
lock
jl
popa
add
(bad)
pop
test
fld
(bad)
push
nop
jb
stos
xlat
ja
aaa
arpl
loopne
xor
or
clc
xor
into
gs
out
mov
cli
or
daa
xchg
jo
dec
mov
in
lock
jg
ds
sub
cmp
cmp
jne
cmp
xor
and
std
jb
sti
clc
pop
mov
pop
xchg
xor
popf
or
pushf
push
sub
sub
ja
cld
sahf
or
je
push
inc
xor
mov
jmp
aad
push
xchg
(bad)
das
ins
xchg
mov
ret
sub
add
test
mov
int
mov
jmp
mov
lods
popa
jle
loopne
dec
sub
cmps
ss
adc
pop
out
lods
cmp
xor
loope
mov
push
sub
pop
pop
retf
push
shl
pop
aas
xor
std
cli
adc
rcr
jecxz
cmp
test
(bad)
jns
repnz
add
call
add
arpl
sbb
rol
jmp
jno
dec
(bad)
sbb
cdq
dec
mov
int3
jp
test
stos
outs
int3
xlat
mov
nop
push
dec
clc
inc
adc
and
and
in
add
dec
out
cmp
lea
sbb
cmc
xor
dec
aam
and
(bad)
rcr
push
xor
(bad)
loopne
xor
pusha
add
sahf
popa
sub
rcr
mov
imul
pop
dec
jno
mov
mov
bound
mov
adc
sbb
pop
adc
xchg
jl
lahf
or
adc
jl
popa
test
mov
inc
cli
pop
enter
loop
sub
jecxz
sub
cwde
xchg
xchg
les
data16
cmp
or
xchg
in
sahf
dec
push
mov
fsubr
(bad)
(bad)
stos
xchg
movs
in
adc
mov
adc
cmp
dec
mov
add
lock
aam
sub
xor
fisttp
inc
add
adc
jmp
jecxz
aas
push
cli
sbb
popa
(bad)
jbe
gs
dec
xor
mov
adc
mov
xlat
mov
arpl
push
jl
mov
in
add
inc
scas
imul
repnz
out
jle
push
xor
sbb
retf
or
inc
test
mov
pushf
into
vunpcklpd
jecxz
push
mov
push
aas
and
dec
adc
push
pop
pushf
adc
jp
sbb
or
les
imul
xor
xor
mov
fucom
in
mov
cs
and
mov
adc
jl
cwde
jl
xchg
cs
cmc
and
lods
jl
cmps
and
icebp
mov
cli
push
sti
xchg
rcr
cmp
clc
dec
popf
mov
dec
mov
pop
ror
cmp
mov
jae
pop
mov
sub
nop
pop
call
aaa
pop
aad
xchg
jp
dec
mov
popa
div
repz
test
test
cmc
and
gs
mov
fisttp
add
int3
jmp
test
rcl
(bad)
stc
cmp
das
pusha
or
mov
xchg
jge
mov
repz
mov
data16
cmp
sti
mov
pushf
cdq
cmps
push
xchg
sub
sub
mov
and
mov
mov
pop
shr
adc
les
cmp
retf
cmp
daa
cdq
mov
mov
in
xor
cdq
or
xchg
das
dec
adc
dec
jmp
call
pop
and
inc
neg
bound
dec
inc
xchg
sub
wbinvd
mov
add
push
and
add
fisubr
fidiv
pop
or
push
stos
(bad)
clc
in
and
cmp
loop
dec
cmps
cli
dec
fistp
nop
mov
cwde
cdq
popf
pop
jbe
push
mov
aam
test
js
sbb
ror
jg
aaa
stos
xchg
inc
dec
scas
cld
pop
pop
jl
cmp
and
and
or
(bad)
xchg
xchg
stos
aas
sub
aam
dec
cmps
jp
neg
pop
dec
jne
loope
enter
xor
lahf
push
mov
in
ins
pop
enter
popa
out
mov
push
mov
push
int
jno
not
cmps
lahf
push
push
out
or
jbe
pop
mov
daa
inc
in
push
jnp
stc
in
pop
stos
xor
adc
xchg
enter
cmp
leave
cli
cmps
jne
adc
pop
xor
inc
js
iret
push
and
dec
jl
pop
push
jno
xchg
(bad)
push
mov
jge
lods
push
sar
or
sbb
ficomp
loope
mov
das
fwait
adc
cmps
imul
gs
pusha
ret
mov
pop
leave
xlat
add
dec
test
xlat
aas
mov
inc
adc
or
fwait
pusha
aam
jg
cmp
test
aad
mov
xlat
sbb
aaa
pushf
jae
cmp
in
call
push
mov
out
xor
stc
leavew
and
movs
adc
in
jmp
mov
rol
push
pop
and
pop
mov
inc
leave
ret
js
mov
hlt
fs
lods
mov
in
ins
jmp
sbb
sti
pop
icebp
mov
lahf
das
sub
les
pop
lods
lds
or
popa
xor
jl
pop
adc
ins
outs
sub
pop
push
das
xlat
and
inc
scas
imul
mov
cmps
sub
xlat
pop
xor
mov
cld
test
lock
mov
push
xor
add
(bad)
mov
fnstcw
mov
or
sub
xchg
push
shl
repnz
mov
dec
(bad)
test
add
rol
xchg
nop
out
adc
imul
out
add
push
xchg
jge
stos
sub
sbb
mov
inc
retf
jmp
inc
imul
or
push
shl
(bad)
das
es
mov
jmp
xchg
stc
xchg
cmp
out
sub
push
mov
xchg
pop
retf
stos
ja
mov
fwait
mov
scas
xchg
push
aam
fcmovne
dec
in
fidivr
inc
cmp
das
jp
pop
mov
sub
or
push
repz
and
inc
outs
adc
leave
inc
mov
or
adc
pop
adc
mov
pop
dec
jle
sub
or
sti
ds
mov
repnz
cmp
movs
add
por
adc
ret
push
outs
nop
push
ins
lods
mov
cmc
stos
add
jmp
stos
mov
sbb
bound
xchg
cli
xchg
inc
fwait
pop
mov
xchg
xchg
sar
jl
mov
xchg
jmp
and
in
pop
in
mov
int3
in
adc
jg
xchg
dec
jecxz
addr16
mov
push
xor
jne
mov
outs
sub
and
int3
inc
daa
dec
aaa
aas
pop
add
xor
xor
loop
push
xrelease
idiv
fnsave
mov
mov
dec
aam
(bad)
(bad)
dec
outs
loopne
test
ds
xlat
hlt
into
pop
daa
addr16
mov
mov
cld
adc
mov
mov
xor
sub
push
scas
inc
idiv
outs
jl
jbe
stos
clc
sbb
ror
pop
dec
xchg
ins
mov
push
sbb
jns
adc
sbb
(bad)
push
aas
dec
cs
(bad)
sbb
cmps
push
push
cwde
call
lock
rcl
test
adc
stos
mov
dec
sbb
mov
mov
scas
(bad)
mov
stc
icebp
sub
outs
push
stos
ret
imul
mov
sub
stos
pop
jmp
push
mov
dec
jo
mov
bound
ds
fisub
mov
dec
mov
and
test
fimul
ss
dec
jle
cs
fs
pop
ds
dec
mov
es
movs
adc
pop
add
adc
sub
xor
fs
inc
pusha
repz
loopne
gs
or
movs
jmp
hlt
mov
scas
cdq
and
aad
repnz
add
jl
or
js
pop
repz
in
sti
dec
lahf
out
clc
and
cmp
stos
pop
push
sbb
and
clc
mov
fdivr
mov
add
lea
push
cwde
jne
repnz
cld
dec
mov
xor
jmp
scas
fs
mov
adc
cmp
inc
mov
outs
xchg
inc
shl
sub
enter
into
sub
sub
and
fmul
cmp
or
out
sub
mov
push
pop
push
cmp
aaa
es
arpl
js
mov
ret
mov
push
mov
mov
in
inc
mov
mov
push
hlt
ret
clc
jmp
jne
mov
and
xor
sbb
outs
and
mov
adc
sub
inc
jae
mov
shl
or
push
(bad)
mov
repz
inc
mov
call
scas
ins
xchg
or
popa
jge
sbb
sub
dec
jb
jle
jne
mov
dec
inc
fisttp
out
or
push
xor
push
or
(bad)
sub
push
ins
fbstp
inc
in
movs
iret
cs
test
cdq
std
inc
add
mov
xchg
cdq
jle
jp
jnp
jae
jl
xchg
(bad)
lods
add
movs
les
ja
mov
jno
sub
push
fwait
stc
arpl
xchg
sbb
out
outs
mov
(bad)
cwde
fucom
inc
imul
cwde
inc
and
xor
sti
jno
ror
fsubr
inc
lahf
shr
push
jecxz
dec
es
cmc
jbe
push
add
cmc
xchg
pop
nop
push
mov
and
pushf
data16
cmps
jecxz
in
jne
loopne
imul
enter
adc
cmp
pop
outs
jns
int3
add
inc
(bad)
sti
scas
inc
ret
mov
out
movs
fidiv
int
mov
ds
iret
lds
mov
add
push
fmul
mov
ss
aaa
pushf
cmp
mov
lds
push
cmp
dec
mov
jno
and
cmps
xor
test
jp
jecxz
lds
cmc
push
int
aas
jns
(bad)
aas
outs
fisub
cmp
shr
loope
aad
into
ins
xchg
xchg
ja
fdivr
mov
pop
adc
push
xchg
push
out
imul
jae
aad
inc
(bad)
loop
inc
loope
fucomip
js
jecxz
dec
ret
sbb
imul
(bad)
(bad)
pop
(bad)
cmps
mov
test
stos
repz
sar
lahf
dec
xchg
stc
gs
cmp
inc
mov
in
call
in
mov
in
push
lock
sub
call
pop
or
inc
push
xchg
dec
fcomp
dec
push
dec
clc
scas
push
ret
xor
adc
pop
mov
test
sahf
je
mov
maxps
push
mov
leave
adc
jne
and
mov
int3
(bad)
xor
push
xchg
retf
aas
ja
xor
push
pop
fs
jo
inc
mov
cmps
dec
or
sbb
jns
(bad)
pop
jle
rol
jl
and
mov
(bad)
mov
lea
jb
push
push
mov
cmps
mov
and
cmps
jno
xchg
inc
nop
shl
sub
pushf
in
fmul
in
fsub
aas
loop
dec
mov
inc
cwde
push
rol
repz
mov
and
in
pop
jge
je
in
test
fwait
rcl
mov
add
cmp
xchg
jno
sahf
push
xchg
mov
loope
inc
and
mov
add
jg
enterw
dec
xor
scas
mov
imul
sub
push
out
and
or
pusha
and
jb
push
dec
mov
test
sub
adc
ffreep
add
sub
in
cmp
js
test
ins
push
(bad)
in
jecxz
or
dec
std
sub
lds
outs
fwait
mov
ret
jb
jnp
add
test
jmp
and
jg
xchg
(bad)
xlat
cmp
fstp
push
xchg
jge
cmp
jp
push
clc
mov
push
sbb
xchg
push
cmc
dec
adc
loope
xor
pop
mov
inc
psllq
sbb
adc
xchg
mov
(bad)
push
inc
cli
js
idiv
outs
pop
jecxz
idiv
sar
xor
jge
inc
push
adc
dec
dec
test
pop
fnstsw
out
in
(bad)
ins
imul
add
nop
movs
add
arpl
sbb
push
pop
push
js
dec
fadd
mov
cmp
pop
fsubrp
sub
jmp
cmc
sbb
mov
jge
mov
sub
(bad)
out
xor
and
inc
sub
fsub
xor
adc
mov
mov
mov
les
es
repnz
or
pop
inc
jns
dec
dec
sbb
cli
mov
jecxz
mov
jno
imul
pop
pop
dec
cmp
enter
mov
hlt
mov
or
push
ins
xchg
ins
call
out
xchg
push
bnd
push
dec
jae
jae
loope
icebp
loopne
mov
es
frstor
inc
push
ret
adc
inc
into
sub
addr16
imul
push
dec
sbb
and
dec
xor
into
mov
inc
xchg
loopne
loop
jle
scas
(bad)
adc
mov
xchg
push
js
pop
pop
dec
jle
adc
xchg
and
or
das
or
icebp
cdq
xchg
pop
ins
jmp
shl
jne
pop
ins
icebp
and
sub
jbe
daa
in
mov
push
retf
into
add
aaa
mov
loope
mov
shr
mov
mov
inc
rol
std
scas
(bad)
imul
int
in
cmp
jae
out
xchg
or
pop
pop
jnp
std
daa
dec
ja
and
sbb
jg
jns
mov
and
xchg
mov
mov
xchg
call
mov
int3
mov
mov
fmul
dec
inc
ret
sbb
mov
pushf
cs
push
stos
(bad)
stc
fs
ret
push
pop
pop
lods
lods
ret
pop
dec
(bad)
jnp
loop
gs
imul
imul
in
bound
out
test
std
outs
pop
jl
cdq
hlt
test
jo
jnp
(bad)
mov
xchg
jmp
shl
int
dec
clc
ins
or
xor
mov
lds
sbb
js
frstor
or
mov
jns
sbb
fwait
lock
sub
in
outs
loop
pushf
pusha
rol
and
div
aas
xchg
retf
mov
std
jno
sbb
dec
mov
xchg
ds
add
xor
push
jae
mov
(bad)
loope
movs
nop
cmp
mov
cmp
out
mov
js
cmp
or
sub
sti
pop
jmp
sbb
cmp
dec
inc
pushf
imul
xor
inc
cmp
outs
dec
ds
loop
pop
iret
mov
hlt
outs
ss
jbe
inc
pop
pop
xchg
movs
cmp
xor
ja
jg
dec
and
sbb
jg
ds
jmp
pop
clc
adc
je
sbb
loopne
or
ficomp
jl
std
push
fs
cmps
lds
out
inc
push
xor
stc
mov
sbb
push
out
scas
mov
imul
in
in
add
rol
xlat
add
push
mov
sbb
movs
inc
into
pop
or
ja
cwde
fnstsw
adc
loop
jns
shl
out
cmp
mov
mov
cli
pop
sub
adc
push
dec
jae
lock
add
push
push
sub
jle
sbb
bound
test
inc
push
das
fild
mov
idiv
js
bound
xor
dec
mov
xor
cmp
jmp
sbb
call
push
pop
enter
mov
test
dec
push
push
and
sbb
add
or
(bad)
mov
cli
mov
adc
frstor
aas
or
shr
xlat
cmp
mov
inc
out
in
push
and
call
fsubr
pop
cmc
retf
or
rcr
cmp
stc
mov
adc
mov
xchg
test
(bad)
in
in
adc
pop
jg
xchg
nop
mov
imul
or
rcl
mov
push
and
fst
add
pop
sahf
ret
or
push
clc
sub
dec
jne
sub
push
jl
ja
cmps
ret
and
adc
jo
scas
add
scas
mov
int
lods
test
pop
aaa
add
inc
xchg
sub
out
mov
sti
jecxz
cmps
repz
gs
ret
and
mov
hlt
test
sbb
scas
sbb
pop
data16
icebp
mov
inc
add
mov
xchg
or
addr16
ja
push
pushf
pop
push
ins
clc
pop
add
adc
cmps
fisubr
outs
pop
jecxz
test
inc
dec
cmps
pop
test
call
ror
xor
imul
xchg
(bad)
sub
out
jbe
jns
jo
inc
sbb
fwait
icebp
cmps
mov
js
xchg
mov
je
mov
test
pop
and
nop
ss
test
test
test
adc
add
and
xor
icebp
mov
add
out
je
mov
pop
iret
test
mov
pop
mov
fwait
pop
test
mov
cmp
jbe
or
lahf
sub
mov
inc
add
addr16
mov
cmp
jne
sbb
xchg
cmp
xor
adc
cmp
xor
out
sbb
mov
sub
scas
ret
ror
fist
and
jle
sub
sub
aas
popf
cld
xor
dec
inc
jne
mov
mov
call
pop
stc
sbb
or
(bad)
(bad)
xchg
ins
stos
cmp
ja
ror
adc
popf
dec
cmps
push
pop
dec
lods
inc
sub
and
and
or
xor
shl
xlat
popa
sbb
xor
push
aas
aaa
fidiv
repz
ja
jecxz
aas
adc
push
inc
xchg
movs
jmp
mov
clc
push
adc
inc
mov
into
out
inc
outs
xor
dec
or
cmp
mov
test
shl
sar
loop
push
mov
popa
enter
aad
call
inc
in
les
xor
sub
pop
cmp
stos
fiadd
in
popa
mov
pop
pop
mov
push
pop
cmp
and
dec
mov
mov
test
dec
shr
mov
aaa
cld
lock
ficomp
das
or
and
pop
mov
test
or
outs
loope
imul
js
and
and
je
in
or
mov
inc
jb
jns
popa
aam
js
movs
out
lds
pop
jmp
loop
sti
cld
pop
loope
scas
fmul
aam
push
jp
ret
aas
fmulp
loope
sub
inc
jmp
scas
xchg
rcr
imul
popf
dec
jp
movs
mov
outs
inc
div
dec
jae
pop
cmp
cmp
mov
adc
test
ja
xchg
mov
ror
mov
in
into
xchg
ins
adc
cmp
inc
outs
sar
jnp
mov
mov
sbb
outs
sbb
scas
(bad)
out
les
fcom
stos
int3
push
mov
scas
push
ds
pop
jmp
pop
inc
adc
jp
xchg
adc
jne
dec
jns
cld
sbb
stc
pop
pop
mov
xchg
popf
jg
xchg
cmc
cs
fdivr
popa
adc
pushf
mov
idiv
movs
dec
mov
fwait
cmps
xchg
add
movs
jle
in
cmp
mov
xor
mov
fsub
jg
mov
data16
fsub
mov
cld
jns
ja
fdiv
hlt
cdq
outs
inc
not
fidiv
xchg
xor
out
(bad)
fcmovne
mov
push
dec
lods
inc
ror
mov
mov
mov
cmp
xchg
cld
js
scas
in
jmp
imul
cmp
(bad)
xor
sbb
dec
les
xor
ret
or
inc
dec
and
pop
dec
mov
cld
sub
jo
or
mov
fs
mov
ficom
ffree
cmp
dec
inc
xchg
sbb
aam
(bad)
dec
int
cwde
jns
imul
mov
sub
push
imul
inc
and
xor
or
rcl
nop
test
(bad)
in
mov
mov
cmc
pop
(bad)
cmc
jne
push
data16
lock
pop
out
jns
js
scas
sahf
mov
mov
inc
not
lods
dec
lahf
fcmovu
aaa
aad
jg
stc
sub
imul
aam
mov
aaa
dec
and
cmp
dec
mov
and
cs
dec
sub
jle
and
adc
popf
mov
sub
mov
xchg
dec
sub
push
addr16
shr
and
cmps
dec
shl
jmp
jns
in
push
mov
and
hlt
sar
mov
or
push
sub
mov
or
push
pop
jne
popf
inc
inc
jmp
or
into
loop
mov
test
and
inc
inc
iret
fld
sbb
mov
repnz
add
or
or
aam
adc
push
sbb
mov
pusha
inc
lock
daa
outs
or
rol
(bad)
into
cmp
jno
mov
call
ror
hlt
cmp
stc
(bad)
cmp
and
push
xchg
in
fwait
pop
stc
jmp
loopne
xchg
ds
je
fs
mov
dec
lock
jno
popa
fcomi
add
into
mov
xor
and
dec
xchg
cwde
es
int3
push
hlt
cs
test
mov
mov
imul
and
ret
adc
dec
fisubr
aam
mov
xor
out
jo
mov
in
gs
sbb
sub
(bad)
ja
retf
sub
sti
mov
push
popf
repz
mov
std
pop
push
(bad)
pop
call
mov
lods
lods
outs
cli
inc
adc
mov
out
add
out
enter
shr
lea
fldenv
stos
addr16
jmp
dec
(bad)
std
xlat
(bad)
push
std
inc
sub
fs
(bad)
xor
mov
loope
xchg
push
jl
mov
int3
push
inc
xchg
and
test
xchg
fistp
xlat
fs
dec
dec
inc
add
ds
jmp
retf
repnz
pop
(bad)
jnp
add
ja
ret
repnz
sti
xor
xchg
popa
pop
jb
es
dec
or
fnstsw
lods
push
add
ins
shl
aad
cmps
push
pop
retf
sbb
lock
test
xor
mov
call
jmp
or
outs
push
mov
inc
xchg
cmps
popf
mov
sbb
xchg
pop
shl
loope
stos
leave
cwde
xchg
dec
sub
shl
mov
ret
jb
jg
clc
xlat
jno
add
inc
mov
test
fcomp
dec
xchg
xchg
mov
xor
mov
sub
fisub
and
fwait
pushf
push
mov
fucomp
mov
cs
adc
mov
mov
mov
(bad)
(bad)
inc
popa
popf
cmp
sbb
addr16
mov
push
out
mov
push
ja
adc
daa
sbb
loop
and
pop
cmp
cmps
popa
test
jge
mov
and
cmp
sub
mov
jmp
and
ins
dec
mov
lahf
inc
aas
out
jl
and
in
xchg
add
dec
mov
hlt
sbb
icebp
pop
and
or
mov
shl
lods
push
in
mov
daa
push
add
mov
adc
mov
and
push
add
and
pop
clc
pusha
ret
cmp
inc
xlat
sub
ret
enter
jle
loope
jmp
adc
mov
fdivr
xor
iret
pmaxub
xor
push
pop
push
cmp
retf
or
ins
push
dec
push
shl
jnp
pop
pop
xor
push
int3
sub
stos
repnz
call
and
fwait
call
dec
je
xchg
xchg
in
adc
(bad)
loope
xchg
lds
inc
cld
enter
or
sti
add
ss
daa
xchg
and
dec
and
push
mov
ffree
jg
sub
popa
nop
(bad)
cmp
cli
shl
int3
sub
inc
sbb
ret
stos
fidivr
les
cdq
pushf
lods
mov
jae
dec
sbb
cmps
lds
mov
ffree
mov
retf
adc
int
pop
mov
xchg
dec
or
jae
dec
jecxz
jns
ins
fld
clc
xor
or
fild
sti
push
ds
sbb
push
rcr
jbe
fs
jmp
test
arpl
popf
cmp
or
add
add
mov
or
call
jbe
sub
mov
bound
ret
xlat
or
jne
sahf
jo
mov
out
sbb
jle
sahf
loop
xor
push
sbb
inc
(bad)
mov
test
lock
jecxz
ins
pop
push
mov
shr
lea
ret
or
dec
sub
pop
push
(bad)
inc
xchg
mov
popa
scas
jecxz
mov
dec
inc
xchg
repz
(bad)
pop
push
ss
call
xor
outs
std
(bad)
cs
xchg
(bad)
push
push
mov
inc
rcr
aam
fmul
xchg
sub
xchg
xchg
daa
jl
dec
pop
mov
inc
iret
jns
pusha
scas
iret
cmc
retf
movs
enter
retf
div
add
xor
out
sahf
mov
add
shr
sub
(bad)
(bad)
stc
ror
mov
int
shr
jno
adc
into
cmc
mov
mul
xor
adc
sti
mov
jno
bound
add
movs
(bad)
mov
dec
lods
ds
lds
pop
add
gs
out
mov
rol
(bad)
das
aam
jecxz
fwait
push
retf
shr
adc
fs
jb
call
mov
popf
mov
mov
sub
test
fistp
(bad)
mul
mov
rcl
shl
and
test
cs
nop
sbb
sbb
or
popa
jns
pop
hlt
std
dec
mov
cmp
data16
and
cwde
es
or
add
cmp
cmp
cmp
cwde
jae
mov
out
jp
push
dec
imul
repnz
pop
inc
add
and
cld
pop
jmp
inc
pop
mov
data16
data16
movs
push
jmp
(bad)
rcl
popf
lds
inc
xchg
mov
cli
push
sti
push
das
fnstsw
adc
cmc
fiadd
leave
sti
ja
pop
jae
(bad)
add
and
jge
lods
mov
mov
aad
add
dec
imul
jns
retf
xor
fmul
jmp
dec
mov
add
(bad)
int3
loope
imul
pushf
pop
mov
in
shl
scas
push
sub
movs
aas
test
loopne
sub
fimul
xor
aas
adc
adc
fisubr
ins
pop
je
imul
ret
cmpxchg
call
imul
imul
rcr
cmp
xlat
out
cmps
jb
add
jmp
jecxz
fcom
lahf
sub
or
fs
inc
mov
mov
dec
pop
mov
(bad)
aad
push
xor
outs
fsub
sub
movs
icebp
push
xor
test
mov
inc
xchg
daa
cwde
xchg
mov
mov
test
lahf
xchg
cdq
cvtpi2ps
dec
push
and
mov
mov
fisttp
jmp
mov
mov
xor
std
mov
xor
retf
loop
popf
aam
jb
adc
or
(bad)
and
xchg
or
std
pop
cs
mov
fwait
push
push
inc
xor
aas
pop
ins
lea
out
add
(bad)
push
add
movntq
out
xchg
xor
pop
xchg
test
cli
movs
pop
icebp
or
mov
aas
imul
add
xchg
lods
mov
fisttp
mov
test
mov
cwde
add
add
pop
or
adc
dec
xchg
sbb
ja
retf
dec
lea
fadd
add
imul
dec
dec
test
jno
cmp
sahf
test
imul
or
inc
pop
jg
call
xchg
sub
mov
(bad)
inc
add
pop
mov
mov
rcr
fcmovu
pushf
out
jae
out
mov
push
pop
jbe
test
pusha
xchg
sub
(bad)
adc
push
inc
scas
jns
xchg
push
cs
cmp
loopne
int3
retf
hlt
hlt
xchg
dec
cmp
jb
pop
int
je
or
inc
mov
jnp
stc
bound
inc
dec
(bad)
mov
dec
push
xchg
inc
mov
das
sub
shl
dec
xchg
dec
mov
sbb
sahf
cmp
inc
mov
add
cmps
loope
sub
mov
sbb
lds
mov
aam
push
mov
mov
imul
or
sar
adc
mov
jp
add
test
daa
test
ss
aaa
ret
inc
jae
inc
stos
test
push
mov
dec
and
cmp
bound
aam
pop
mov
xchg
fisttp
adc
add
pop
push
dec
sbb
xchg
pop
mov
adc
jnp
sub
push
or
sub
sbb
ds
push
mov
dec
dec
(bad)
xor
add
or
fadd
retf
fidivr
jecxz
fild
mov
xchg
aaa
fist
ret
mov
dec
(bad)
sbb
add
in
mov
jmp
jbe
loope
mov
or
fbld
arpl
sub
mov
pusha
jmp
out
push
(bad)
pop
(bad)
cmp
aaa
add
inc
pop
sbb
dec
pop
jle
xchg
aaa
xchg
push
fst
or
pushf
xchg
jae
xchg
jecxz
out
fld
adc
test
ss
stos
mov
sbb
imul
cwde
sbb
push
outs
or
mov
push
fadd
in
scas
aam
loop
mov
dec
cmp
das
lods
add
mov
rcr
shr
xchg
xor
sub
jl
sub
lahf
ret
push
test
fistp
xor
push
sbb
gs
movsx
loopne
nop
mov
movs
sbb
jo
fsubr
(bad)
cmc
sbb
or
pop
sti
push
in
stos
dec
pop
or
or
into
mov
sub
cmp
jae
fidivr
mov
mov
movs
push
mov
mov
test
dec
je
xor
loopne
dec
(bad)
sbb
(bad)
sti
xlat
(bad)
sbb
and
fxam
jmp
sbb
repnz
push
pop
out
pop
sub
stos
les
lds
pushf
std
push
(bad)
in
push
jne
int
jbe
ret
jb
test
(bad)
push
cdq
iret
stc
or
dec
adc
ret
cmc
out
xchg
loop
outs
in
scas
or
ds
xor
jmp
inc
mov
add
(bad)
jp
cli
repnz
cmp
retf
inc
jl
lahf
int
cmp
lods
repz
push
pushf
xchg
jp
jle
gs
in
test
add
fadd
inc
jns
(bad)
hlt
add
pop
dec
in
add
stos
or
hlt
dec
fcmovne
sub
inc
das
add
mov
add
adc
ret
movs
rol
cld
xlat
call
arpl
scas
mov
cmp
loope
adc
inc
mov
and
xchg
lods
sar
inc
std
pop
lea
jmp
int3
aas
xor
retf
cmp
xor
jns
xchg
mov
stos
sub
(bad)
loopne
pop
xor
cld
xor
cwde
pop
fistp
and
rcl
xchg
pop
(bad)
(bad)
lock
pop
loopne
int
rcr
ret
xor
hlt
jns
dec
jl
adc
arpl
pushw
nop
push
(bad)
call
(bad)
fimul
cwde
fst
xor
xor
dec
fcom
xchg
iret
and
jl
mov
test
outs
in
rcl
and
das
inc
outs
(bad)
xchg
mov
outs
sar
xor
push
cdq
test
xchg
inc
bound
add
xlat
sub
mov
ds
lahf
pop
fidivr
les
lods
sub
add
and
in
cmp
jmp
dec
and
or
ret
call
pop
xor
jp
add
xor
in
or
js
mov
inc
test
adc
pop
adc
(bad)
into
pop
addr16
gs
inc
repnz
popf
fwait
mov
ficom
cmp
xchg
daa
in
mov
rcr
stos
push
out
cld
dec
add
dec
add
les
out
sub
loope
pop
push
arpl
jl
mov
cmc
mov
cs
inc
gs
int3
movs
ins
mov
xlat
bswap
loopne
out
sar
rol
cwde
int
ins
mov
bound
or
xchg
dec
out
cmp
cmp
ret
movs
faddp
xlat
call
mov
dec
and
inc
or
aad
mov
retf
push
jae
xor
dec
jns
push
cmps
jmp
adc
in
aad
inc
inc
inc
cmp
mov
push
adc
sbb
mov
lods
jbe
leave
sbb
test
pop
les
ins
mov
jno
retf
mov
push
(bad)
lea
mov
adc
sub
cmp
add
or
pop
pop
cmp
sub
inc
or
jg
pusha
jge
add
lock
inc
test
out
jae
push
add
dec
ret
pop
outs
aam
ret
pop
jg
rcl
pop
pop
ret
cmp
and
inc
sbb
fidiv
out
jecxz
xor
fs
stc
das
pop
cld
dec
add
imul
cmps
dec
add
in
fidiv
add
push
dec
popa
push
je
inc
add
mov
and
add
jns
pop
not
loopne
(bad)
loop
jl
in
test
fisub
push
into
mov
into
aaa
jae
dec
fbstp
dec
sub
xchg
add
nop
(bad)
sar
cs
adc
nop
dec
or
xlat
jecxz
retf
inc
xchg
mov
inc
push
jecxz
scas
and
dec
int
test
pop
aaa
cbw
(bad)
fwait
push
pop
retf
ins
or
cmp
shl
inc
aaa
mov
cmc
xchg
or
push
push
sub
push
jo
sar
jmp
lods
inc
dec
fcomp
sub
bndldx
xor
movs
push
inc
nop
fcmovbe
push
jae
pop
iret
leave
dec
dec
sbb
enter
ja
repz
sub
add
xor
dec
std
sbb
or
xchg
pop
into
out
xor
mov
cmc
push
loopne
ja
pop
test
out
bound
ret
fdivr
xor
push
jmp
pop
xchg
and
lods
out
inc
xchg
push
dec
jg
das
push
out
mov
jo
jo
xchg
mov
xor
pop
adc
dec
das
xchg
add
scas
test
outs
cmp
aaa
adc
dec
jle
nop
jne
arpl
inc
pop
lock
adc
add
ins
movs
mov
fild
loopne
das
and
ret
out
dec
adc
sub
stos
mov
movs
(bad)
lea
daa
ins
inc
xchg
(bad)
jae
fild
mov
and
add
inc
(bad)
clc
imul
and
das
or
or
ret
push
mov
jne
dec
mov
sbb
push
sbb
mov
ror
push
and
aad
scas
addr16
sbb
nop
mov
fcom
fwait
sar
cdq
jl
sahf
addr16
jmp
xchg
jmp
jmp
aas
push
gs
dec
xor
mov
cmp
xor
inc
ja
fs
and
out
jl
jg
add
(bad)
xchg
mov
mov
xchg
add
ins
inc
adc
or
out
cli
inc
push
(bad)
retf
aam
sar
in
shr
(bad)
jno
aam
sub
into
or
inc
push
cs
not
vorps
icebp
mov
shr
loop
(bad)
dec
sub
cmp
xlat
push
rcl
stos
mov
sbb
pop
xor
iret
out
pop
ret
jns
stos
mov
repnz
fbstp
and
and
out
jmp
hlt
mov
int
nop
idiv
retf
aad
xchg
int
jg
fcomp
xor
bswap
les
jb
sbb
sbb
int
dec
(bad)
sbb
jo
jmp
add
mov
cmp
mov
add
(bad)
jbe
mov
xor
inc
pop
dec
add
ret
loope
js
jbe
fwait
mov
mov
lods
test
pminub
popa
xchg
leave
mov
test
sub
jo
cmps
ja
pop
ffreep
lea
cmp
push
push
sar
rcl
lahf
mov
jo
cmc
pop
or
ds
leave
mov
js
inc
sub
out
or
mov
push
push
test
repz
out
loopne
ror
fldcw
mov
push
out
jmp
mov
and
sbb
sti
jne
sbb
retf
mov
or
sbb
not
neg
imul
and
mov
push
(bad)
xchg
xlat
sub
imul
push
fdiv
into
psadbw
jecxz
or
pop
and
mov
push
fidiv
inc
rcl
pop
dec
(bad)
cwde
jle
and
call
mov
inc
mov
add
test
mov
sbb
mov
repz
xchg
jp
out
sub
ss
xor
dec
js
push
not
cmp
rcl
mov
sti
or
fcom
sbb
nop
xchg
push
mov
adc
mov
sbb
push
adc
mov
mov
push
or
ss
retf
pop
add
into
jmp
inc
icebp
xchg
addr16
mov
sub
cld
lods
mov
je
cli
popf
jnp
out
fstp
add
or
fisttp
cmp
mov
inc
add
aad
movs
jo
fucomp
mov
mov
pop
call
xor
loopne
hlt
adc
push
imul
mov
lock
cdq
xlat
inc
xlat
call
pop
pushf
mov
(bad)
cmp
ret
sti
jl
push
sbb
lock
pop
mov
je
iret
hlt
mov
not
push
hlt
(bad)
clc
fwait
sub
jle
mov
mov
std
ins
dec
xchg
call
leave
pop
xchg
xor
pop
(bad)
test
movs
pop
sbb
mov
ins
mov
mov
ss
and
add
cmps
add
sahf
cmp
retf
sbb
jge
push
or
sbb
jp
pusha
sub
fnstsw
or
push
cmp
aas
or
loopne
pop
sbb
pop
cmc
fwait
dec
mov
stc
cmp
out
stos
mov
jl
xchg
mov
pushf
neg
inc
push
add
inc
dec
jl
gs
mov
clc
mov
lahf
dec
aam
test
sbb
mov
fisubr
mov
sahf
cmps
push
pushf
aaa
mov
(bad)
into
dec
cli
(bad)
test
sub
mov
clc
or
ss
push
adc
xor
scas
test
and
cmp
push
rcl
bound
add
jle
aam
adc
gs
stos
cmps
push
ss
push
sub
sbb
xchg
cld
pop
loop
jbe
pop
jmp
sahf
jo
fnstcw
clts
pop
mov
jmp
cwde
sar
inc
cmp
imul
clc
xchg
ror
pop
ds
in
out
jmp
in
mov
enter
pop
xor
xchg
imul
stos
pop
inc
sbb
pop
xor
rol
mov
push
mov
popa
dec
inc
movs
inc
movs
scas
mov
dec
xchg
xor
mov
xchg
push
and
add
mov
nop
loopne
into
les
dec
sub
mov
aaa
or
sbb
pop
pop
mov
mov
ss
jb
in
imul
call
push
lock
ss
xchg
pop
ja
retf
or
mov
dec
xchg
out
mov
aam
pop
loop
ja
jmp
test
cmp
jg
cmp
ret
mov
mov
sbb
cld
cmp
adc
cmp
int
js
mov
mov
adc
into
fs
loopne
xchg
cld
fst
add
test
sub
dec
in
mov
mov
adc
cli
iret
cmp
dec
mov
in
xchg
(bad)
sti
in
out
adc
cmp
push
inc
fmul
mov
xor
or
(bad)
lds
pop
pop
mov
and
bound
mov
xchg
jmp
out
xchg
jp
inc
icebp
mov
std
aaa
xchg
inc
retf
(bad)
(bad)
fwait
cmps
int3
sar
fcom
xchg
in
inc
inc
inc
xchg
aam
cdq
adc
or
vmovq
jecxz
sbb
mov
lahf
ins
pusha
aam
push
dec
cwde
xchg
sbb
call
aad
sbb
pop
loop
jnp
push
xchg
imul
pop
lahf
and
cmc
outs
loop
sahf
repnz
and
sbb
das
xchg
inc
mov
mov
test
dec
sub
adc
pop
icebp
mov
sbb
scas
mov
(bad)
mov
hlt
ins
add
xchg
add
cmc
js
mov
pop
shl
loope
ins
mov
or
arpl
maskmovq
mul
add
test
sbb
and
jl
lock
cmp
in
cld
shl
fiadd
ins
dec
jno
loope
adc
add
and
dec
jmp
(bad)
pop
or
jg
or
(bad)
cmc
jae
sub
mov
push
lea
(bad)
sbb
jae
xchg
fnsave
mov
fistp
add
js
loopne
inc
push
xlat
push
loopne
outs
fnsave
fwait
push
daa
(bad)
loop
shl
jo
lea
add
inc
mov
sbb
jmp
sti
pop
cdq
outs
xchg
ret
adc
or
rol
sbb
rol
les
push
inc
jecxz
adc
adc
popa
jl
add
and
sbb
lahf
stos
stc
sbb
imul
mov
push
leave
(bad)
xlat
jbe
loopne
in
adc
in
push
jno
into
sbb
mov
iret
pop
jmp
mov
cmp
addr16
pop
sub
stc
jp
xor
jb
inc
and
bound
rcr
jp
scas
jmp
not
sub
aam
aam
rcr
mov
(bad)
xchg
(bad)
sbb
test
jnp
adc
adc
jo
imul
sar
test
pop
psubusb
sbb
adc
sar
adc
(bad)
mov
pop
pcmpgtd
arpl
js
xor
push
cmp
cld
inc
adc
out
mov
xor
mov
fwait
mov
enter
inc
mul
sbb
das
mov
sbb
sub
xor
int3
mov
push
dec
in
std
push
inc
fwait
pop
cli
push
and
je
ret
ret
sub
inc
(bad)
jecxz
(bad)
cdq
push
push
xchg
push
div
repnz
sahf
retf
lods
lock
call
jnp
sbb
pop
inc
movs
pop
sub
into
out
out
mov
push
mov
dec
mov
jae
xor
xor
pop
sti
sub
and
sbb
add
mov
jae
push
ja
ret
inc
jl
xor
sar
stos
push
outs
call
out
and
lahf
dec
je
nop
mov
imul
pop
add
cmp
out
cmps
and
hlt
mov
call
nop
sbb
cmovle
pop
in
movs
leave
dec
mov
dec
mov
test
adc
pop
push
and
jmp
xchg
mov
push
dec
ja
inc
mov
pop
js
push
js
aam
bound
add
ds
xchg
call
xor
jg
jb
sbb
fsubr
cmp
xor
xor
push
mov
mov
sub
mov
inc
xor
ret
cli
loopne
(bad)
add
in
pop
and
lds
adc
or
and
cdq
call
fisttp
popa
sub
ja
push
retf
int3
and
push
(bad)
cld
ins
pop
mov
retf
xchg
cmp
fiadd
stc
or
push
xchg
mov
out
dec
(bad)
mov
arpl
(bad)
stc
test
cmp
add
bnd
(bad)
iret
into
jo
imul
or
push
mov
retf
mov
(bad)
jb
stos
xchg
jne
dec
jg
cmp
lock
pop
mov
nop
in
cld
ret
adc
sub
(bad)
jo
aaa
mov
add
mov
ja
mov
out
test
mov
jg
rcr
push
gs
inc
dec
inc
test
sbb
mov
or
cmps
out
repnz
inc
jl
mov
out
nop
ins
mov
lods
fwait
mov
in
inc
sub
and
into
int3
call
pop
gs
in
dec
retf
je
retf
pop
cwde
mov
sub
les
popa
jmp
call
mov
sub
out
pop
mov
adc
mov
add
ret
and
xchg
sbb
sbb
xor
in
pop
push
int3
push
mov
mov
pushf
outs
loopne
pop
in
test
push
mov
lahf
lods
imul
xor
add
xchg
xchg
mov
pop
mov
add
pushw
lods
movs
sbb
cwde
stos
mov
or
and
cdq
cwde
inc
jne
iret
out
call
arpl
in
jmp
bound
je
push
stc
stc
mov
mov
push
jae
ror
retf
les
loop
fst
fisttp
xchg
mov
popa
sub
scas
mov
jne
sbb
loope
lock
pop
in
(bad)
ins
(bad)
(bad)
lods
fld
pop
and
cs
jp
loope
xchg
sub
rcr
jmp
jle
xchg
jecxz
jns
out
(bad)
or
cmp
rcr
cli
movs
pop
cld
daa
outs
inc
popa
inc
fdiv
call
sbb
xor
(bad)
xor
push
out
mov
cmp
scas
sbb
sub
fwait
and
call
pop
test
pushf
in
jno
xlat
pop
xchg
out
mov
rol
gs
cli
or
xchg
add
fidiv
fild
jp
gs
mov
rol
fadd
jb
hlt
imul
in
stos
std
sub
adc
iret
fs
add
push
add
test
ror
or
jb
and
mov
icebp
int3
xchg
jmp
call
xor
dec
or
(bad)
loope
rol
or
cmp
sbb
fist
or
mov
sti
shl
or
xchg
rcl
ins
xchg
cmp
fnstcw
pop
aas
inc
lods
jmp
stc
mov
ds
and
popf
stos
dec
adc
jp
in
aas
sub
mov
inc
inc
cmp
xchg
ja
(bad)
jmp
test
jae
sahf
imul
aad
imul
mov
sub
add
and
cld
or
idiv
fwait
test
mov
mov
sar
repz
sbb
xchg
outs
mov
pop
and
or
adc
cs
and
shl
and
and
fwait
adc
setg
nop
cmps
retf
adc
and
lods
cmp
add
mov
outs
out
lds
icebp
popf
jecxz
(bad)
push
ds
xor
add
mov
or
mov
pusha
out
and
mov
pop
daa
xchg
outs
mov
loope
in
cmc
jns
jp
stos
scas
sub
jnp
jle
in
mov
pop
hlt
jb
jbe
sbb
pop
cmp
add
out
push
out
cmp
push
or
pop
enter
or
pop
loopne
out
add
mov
xor
sub
fidiv
mov
or
adc
add
push
cmp
mov
jbe
jecxz
and
xchg
int
addr16
xadd
fs
dec
push
(bad)
xchg
stos
lea
les
call
sbb
xlat
loop
movs
pop
movs
(bad)
jl
dec
bound
vpunpckhbw
enter
adc
push
fld
imul
sub
mov
repz
mov
mov
(bad)
pop
icebp
leave
es
or
into
fcomp
inc
or
cwde
test
stos
jecxz
sahf
add
add
retf
cmp
fidiv
jb
pop
adc
imul
sub
das
or
clc
icebp
jle
loop
add
or
hlt
push
add
shr
dec
add
das
call
retf
dec
mov
or
call
mov
lods
call
jns
je
sar
pop
push
push
loop
add
(bad)
xchg
xchg
ret
jg
fnstsw
lods
rol
mov
fbstp
mov
jnp
adc
mov
in
popa
clc
faddp
ss
adc
add
and
pop
(bad)
pop
mov
(bad)
call
div
xlat
je
add
ins
pop
jle
and
sti
sub
out
movs
jmp
cmps
jbe
(bad)
ror
out
mov
xchg
loopne
cmp
mov
mov
fnstenv
movs
sub
aam
cmc
aas
mov
cmps
nop
stc
mov
scas
in
sub
addr16
inc
adc
das
test
test
ins
add
imul
test
sti
dec
gs
js
xchg
mov
pop
(bad)
mov
pop
out
dec
nop
mov
jmp
loop
aad
dec
test
xchg
(bad)
stos
fisubr
div
int3
push
xor
outs
pop
pop
jmp
cmc
call
std
iret
mov
xlat
sbb
dec
mov
lock
add
sub
jnp
std
(bad)
loope
jnp
(bad)
push
lods
ret
cmp
outs
ror
inc
cmc
(bad)
mov
mov
and
scas
add
adc
xchg
mov
sbb
daa
fcmovnbe
jl
mov
es
jle
mov
daa
cwde
jo
jbe
movs
xchg
push
mov
add
cmp
mov
ret
and
pushf
aaa
adc
jecxz
cmps
jo
cmps
mov
mov
mov
pusha
pop
xor
xchg
test
xlat
jle
out
fdiv
inc
sub
jno
inc
pop
mov
mov
push
mov
jae
dec
loope
sub
fnsave
pop
mov
js
adc
and
out
dec
sub
not
lea
xchg
retf
aam
in
or
adc
or
mov
or
getsec
push
cwde
cmp
rol
scas
dec
pop
push
bound
fistp
call
add
xchg
or
pop
loopne
push
addr16
lea
xchg
popf
outs
mov
xlat
shr
add
dec
xchg
std
pop
mov
shr
mov
pop
xor
or
leave
xchg
sbb
repnz
mov
aaa
pushf
mov
cmp
js
xor
ja
or
(bad)
cmp
jns
pop
add
cwde
mov
pushf
xchg
mov
out
popf
or
mov
xchg
xor
hlt
inc
out
iret
out
in
sbb
call
and
enter
lods
in
xlat
xchg
arpl
(bad)
adc
dec
sbb
pop
fsub
movs
xchg
gs
xchg
cmp
(bad)
lods
cmp
stos
jle
(bad)
lods
xchg
mov
ret
arpl
movs
jg
push
in
loope
(bad)
mov
adc
in
mov
push
hlt
xchg
inc
lock
mov
sub
repnz
inc
sbb
sbb
loope
or
or
leave
mov
pop
mov
and
inc
sub
sub
jmp
repz
jle
cli
enter
xor
xchg
mov
push
dec
sub
es
add
jg
mov
jae
out
mov
dec
mov
lods
ret
jl
nop
dec
test
mov
and
xchg
or
scas
or
jge
test
or
xor
cmp
add
jecxz
jns
jg
and
jne
mov
sub
mov
xchg
mov
aam
int
pop
mov
loope
leave
push
jb
lods
jg
sub
jo
arpl
adc
fdiv
and
mov
fcmovne
xchg
mov
add
popf
inc
push
ror
sub
mov
ins
ds
push
js
pop
jge
jne
mov
int3
push
in
lea
cmp
push
xchg
pop
jg
lahf
test
jo
xor
out
idiv
or
cmc
rol
bound
bound
in
sub
jns
push
cmp
cmp
pop
mov
cmp
aad
sub
push
ins
std
int
or
mov
mov
pusha
mov
loope
sbb
inc
xchg
mov
rcr
out
out
jmp
jp
and
test
add
loop
and
fsub
mov
ds
mov
popa
inc
jnp
add
dec
loope
push
xchg
adc
daa
inc
sub
pop
adc
in
gs
leave
mov
cwde
xor
jmp
popa
test
and
and
loopne
rcl
mov
jnp
adc
std
pop
mov
mov
mov
pop
mov
xchg
test
inc
cmp
rol
sbb
fisubr
jmp
ret
inc
imul
and
in
sub
push
test
aaa
push
xchg
inc
or
push
push
cmps
push
gs
or
or
push
std
fstp
cmp
dec
pop
fs
or
push
cs
sbb
xor
xor
rcr
xor
mov
and
lea
(bad)
bt
push
dec
push
cmp
imul
leave
sub
leave
pushf
jge
faddp
(bad)
test
and
imul
bound
test
cmps
in
out
gs
jne
pop
inc
add
fimul
retf
ds
jmp
retf
add
pop
adc
adc
jle
jno
jge
push
dec
imul
iret
rcl
sub
ins
or
jg
xchg
lds
adc
push
lock
sub
mov
dec
fsub
arpl
fucomip
push
ds
imul
push
push
xor
or
sub
(bad)
fcmovne
out
or
jle
dec
adc
pop
in
std
sub
jge
jno
arpl
loop
jo
sub
jnp
vpsubd
cs
push
adc
ds
arpl
or
push
rol
(bad)
mov
or
mov
mov
sub
sub
rcl
aam
adc
xlat
aaa
bound
push
daa
inc
cld
or
fsub
lds
jne
out
in
icebp
ins
jo
ins
cmp
(bad)
pop
mov
nop
(bad)
and
xchg
lds
rcr
cld
pop
ror
pop
data16
pop
das
dec
mov
cmp
into
add
jmp
test
push
ror
or
mov
mov
add
or
int3
sbb
inc
jg
mov
xor
idiv
adc
cmp
xor
bound
inc
mov
pop
jnp
ret
add
sti
cmps
sbb
clc
sbb
push
xchg
or
push
mov
mov
jae
pop
nop
push
and
stos
les
out
test
int
neg
dec
mov
adc
jg
mov
addr16
add
(bad)
stc
pop
ds
jno
and
jl
inc
mov
outs
imul
fwait
jg
inc
bound
mov
sti
and
hlt
in
cli
movs
jb
mov
cmc
sar
dec
dec
adc
ins
and
push
and
mov
(bad)
push
jne
inc
sbb
in
aam
jl
xor
mov
mov
sbb
push
repnz
mov
test
pop
or
js
xchg
std
ss
outs
xchg
mov
imul
or
ss
imul
xor
inc
sbb
push
push
in
pushf
push
mov
dec
cli
loope
xor
adc
dec
xchg
clc
imul
push
xor
jecxz
iret
enter
fnstcw
mov
pop
jno
js
jns
xchg
jmp
fistp
adc
shl
fistp
and
jmp
mov
ficom
ins
faddp
int3
sub
out
aaa
scas
mov
std
mov
jmp
mov
xor
in
mov
jbe
mov
push
std
das
ffreep
xchg
add
mov
jbe
push
dec
sbb
inc
mov
retf
push
push
(bad)
in
pushf
push
sbb
add
xor
xor
sbb
xor
aam
es
sar
jno
retf
out
fwait
sbb
xor
ss
popf
stos
test
mov
cmp
iret
xor
cwde
adc
mov
mov
xchg
bound
cmps
adc
cli
outs
iret
xchg
rcr
cmps
jmp
and
stos
mov
daa
out
mov
clc
outs
or
push
(bad)
push
(bad)
pop
ret
mov
retf
popf
sahf
add
stos
inc
call
mov
std
sub
fcomp
or
clc
mov
push
cs
outs
xor
cmp
dec
push
inc
xor
xchg
ror
mov
adc
xchg
cli
jb
shl
dec
(bad)
in
cmp
ins
push
ror
or
dec
add
mov
call
dec
pushf
inc
movs
fist
retf
cld
mov
jl
xchg
mov
test
aas
jbe
mov
inc
cmp
cmps
mov
in
ffreep
cmp
int3
stos
lods
xchg
and
pop
les
xchg
mov
sub
fsubrp
arpl
xchg
in
hlt
jg
shl
test
xor
push
jg
outs
fcom
mov
mov
mov
dec
mov
popf
dec
iret
push
ret
jae
jle
call
aas
cs
pop
(bad)
fisubr
pop
(bad)
mov
jbe
ret
int
fstp
stos
adc
cmp
jge
sub
out
fidivr
pop
or
lock
inc
add
jno
mov
mov
outs
mov
outs
jecxz
imul
pop
mov
fisubr
mov
pop
clc
lock
xor
repz
and
pushf
dec
js
xchg
dec
push
push
dec
mov
mov
icebp
daa
mov
stos
pop
inc
out
jl
call
aad
jmp
and
and
jp
jecxz
push
int
adc
add
sbb
repz
aam
test
pushf
jl
jb
outs
out
gs
dec
(bad)
sbb
push
add
ret
iret
(bad)
jge
inc
push
sub
jle
fcmovnu
std
call
enter
js
mov
sar
pop
and
movs
push
pop
add
lock
sti
xor
test
pop
test
push
stc
repz
retf
mov
and
sub
mov
add
pop
jg
std
jbe
int3
sbb
or
mov
push
or
jl
mov
(bad)
sub
shr
add
inc
jb
adc
int
int3
adc
sahf
mov
hlt
or
rol
jge
mov
pop
js
add
ret
adc
push
aas
xor
nop
(bad)
das
or
icebp
inc
sbb
fstp
dec
aad
ja
mov
imul
shr
dec
push
jmp
aaa
lds
jb
std
mov
or
or
sub
push
not
scas
push
gs
not
push
call
mov
pop
inc
and
add
fist
adc
fmul
rol
or
sub
xor
mov
pop
fwait
mov
dec
mov
sub
and
jg
mov
rcl
bound
rol
rol
mov
xor
inc
jnp
imul
adc
sub
call
(bad)
cmp
adc
je
repz
cli
enter
repz
out
arpl
mov
push
psubw
outs
call
lods
in
jg
test
push
fld
or
ja
xchg
jnp
retf
adc
cmc
ds
div
xor
call
shl
xchg
push
pop
retf
xor
pop
inc
sub
ret
xlat
fadd
add
pop
lods
mov
out
sbb
les
mov
sub
test
push
call
mov
lods
mov
fnstenv
pop
cmp
mov
call
rol
mov
inc
adc
push
hlt
mov
call
ja
scas
cmps
mov
stos
repz
jge
stos
and
xor
sub
arpl
adc
inc
and
xor
xor
cld
rcl
push
pop
shl
ds
mov
mov
hlt
xlat
sbb
test
clc
bound
daa
test
mov
into
aad
cmp
adc
push
xchg
or
rcr
xchg
mov
pop
xchg
add
xchg
jb
cmps
sar
xchg
jmp
mov
xchg
ficomp
ficomp
mov
jbe
inc
jns
xchg
lods
and
xchg
and
and
ins
fucomip
inc
adc
fdivr
pop
xor
jl
inc
jno
in
retf
sbb
hlt
cs
add
adc
jbe
xchg
ds
and
je
repz
hlt
push
cmps
fs
jo
pop
or
call
(bad)
mov
mov
call
xchg
(bad)
xchg
dec
jecxz
pop
icebp
pop
jle
lods
mov
rol
stc
dec
cmp
dec
mov
test
pop
adc
push
ret
xor
(bad)
call
inc
xchg
sbb
call
and
aam
mov
mov
clc
xor
lds
ja
mov
push
sbb
fcom
cmp
icebp
popa
jo
push
and
ins
cmp
xchg
inc
sar
lea
scas
ss
lods
push
in
xchg
xor
sar
inc
cmp
loopne
mov
fisttp
sub
pop
fsub
into
pop
fnstenv
dec
inc
(bad)
stos
add
pushf
inc
pop
sbb
mov
jmp
clc
loope
pop
pop
jg
xchg
jnp
mov
mov
inc
mov
sub
mov
test
or
(bad)
fadd
cwde
in
pop
in
lods
or
jne
jl
fwait
mov
mov
leave
pop
bound
pop
scas
mov
mov
fmul
jmp
xor
ss
sub
ins
or
lds
and
mov
int3
jnp
inc
xor
fcom
push
ret
sahf
jno
jno
or
and
fld
xchg
push
fld
jae
in
dec
xchg
in
lods
cmp
lods
shl
xchg
loope
push
sbb
dec
xor
test
inc
mov
(bad)
mov
fst
outs
mov
xor
mov
outs
call
mov
push
ins
push
and
loope
scas
shl
sub
add
ja
jne
or
add
pop
rcl
jmp
mov
sub
in
fwait
movs
add
and
icebp
xchg
pusha
sbb
arpl
pop
leave
fld
push
outs
cs
adc
in
sar
or
out
mov
retf
shr
int
rdmsr
loope
xchg
or
lods
or
scas
(bad)
push
(bad)
jns
test
mov
call
retf
cmps
rcr
dec
and
mov
in
pop
dec
jns
sti
push
js
in
add
jle
ins
jp
and
sub
out
cmp
mov
ins
loopne
nop
test
scas
daa
cdq
push
aam
jne
cmp
push
dec
mov
dec
ret
inc
adc
mov
scas
xchg
sub
cmp
(bad)
push
jl
or
ds
iret
sub
pop
fldcw
add
dec
inc
out
int3
pop
clc
leave
(bad)
push
sbb
cmc
sub
jne
adc
jmp
dec
jmp
loop
pop
pextrw
mov
pusha
(bad)
popf
jne
push
push
(bad)
mov
pushf
retf
outs
cs
cwde
xor
jo
imul
adc
ret
das
mov
xchg
mov
xchg
pushf
and
jp
sbb
scas
mov
cli
jno
mov
xchg
movs
fninit
jno
in
ja
das
pop
fisubr
aam
mov
pusha
add
mov
pop
in
cmp
cmps
pop
xchg
xchg
int
mov
xchg
jge
add
inc
ja
cli
pop
aad
adc
or
dec
into
addr16
stos
data16
loop
dec
mov
mov
int3
ins
hlt
lods
dec
ror
inc
sub
lds
jns
mov
ins
mov
popa
into
push
dec
ffree
rol
leave
fwait
popa
add
in
xchg
mov
jo
mov
cmc
rol
cmp
pop
mov
repnz
dec
pop
stc
out
stos
xor
out
iret
mov
sbb
sub
cmp
fdivr
mul
push
idiv
stc
cmps
imul
loop
inc
dec
cmp
jle
pop
lahf
cmp
push
push
xor
sub
inc
dec
mov
mov
mov
and
push
sbb
stos
pop
lahf
ja
repnz
add
dec
jae
stos
sbb
jmp
jecxz
and
mov
cmp
bound
jg
adc
inc
jp
xor
mov
adc
push
into
test
jne
jae
cs
cmps
xchg
std
in
sbb
inc
mov
test
pop
outs
mov
movs
lahf
(bad)
movs
sbb
in
test
jge
movs
pop
loopne
push
adc
ss
jg
xor
cs
cdq
shl
mov
mov
push
sub
xor
repz
(bad)
hlt
dec
push
mov
iret
jo
shl
xchg
ds
retf
adc
fs
fstp
ret
inc
mov
mov
xchg
pop
mov
fs
push
adc
scas
ds
inc
aam
jb
je
dec
js
mov
ret
add
cmp
mov
and
mov
in
and
jp
sbb
push
inc
xlat
aad
mov
jmp
data16
sahf
cmp
jl
push
xor
xlat
push
inc
out
lock
or
jbe
mov
fstp
push
inc
adc
(bad)
mov
pop
or
movs
test
mov
ficom
imul
lahf
es
daa
leave
jo
and
push
push
and
ins
push
pop
xor
or
xor
jns
arpl
mov
jb
hlt
inc
pop
push
mov
push
push
repz
fcomp
test
dec
ins
mov
scas
movs
sbb
(bad)
clc
push
(bad)
sti
lahf
pop
sub
inc
dec
and
call
inc
dec
xchg
test
dec
not
stos
retf
or
cwde
sub
test
mov
retf
xchg
adc
call
loope
cmp
scas
add
hlt
out
cmp
cld
pushw
jge
inc
out
data16
xor
lea
sub
jbe
(bad)
fisub
xor
or
and
(bad)
mov
xchg
adc
rcr
punpcklbw
pop
stc
adc
or
mov
fbld
and
loop
sahf
inc
xchg
sbb
lahf
fsub
jno
mov
retf
ds
mov
and
(bad)
icebp
ret
out
and
test
cmps
xchg
(bad)
or
call
(bad)
ja
rcl
jl
cmp
xor
fwait
cmp
mov
xchg
dec
(bad)
hlt
movs
stos
ja
jecxz
cmp
cmp
add
(bad)
bound
rcr
pop
retf
sbb
push
xor
(bad)
jmp
fidivr
adc
fld
add
in
enter
mov
scas
movs
mov
das
or
mov
dec
mov
out
sbb
loop
push
cmc
mov
add
aas
pop
mov
pop
cli
add
jmp
std
jge
sbb
not
lods
pusha
mov
sar
das
xor
pop
dec
dec
pop
push
icebp
inc
mov
div
dec
cmp
push
xchg
push
pop
pop
mov
sbb
adc
inc
push
xor
idiv
pop
inc
(bad)
jns
xor
arpl
jg
pop
push
cld
pop
pusha
inc
cwde
sub
sahf
mov
popa
in
(bad)
call
jns
sbb
push
cli
ss
xor
jg
pop
cmps
mov
adc
mov
add
sbb
jmp
push
and
mov
dec
ror
xor
xlat
inc
add
xchg
loopne
or
ret
dec
xor
outs
test
mov
mov
mov
and
aam
xchg
and
push
js
adc
call
adc
jmp
sbb
pop
fwait
pop
imul
repz
cmp
scas
mov
and
cvttps2pi
push
xor
repnz
fist
outs
outs
std
pop
in
inc
cwde
cmp
sub
les
mov
(bad)
dec
call
pop
jne
mov
test
fistp
sub
sbb
jns
imul
mov
shl
mov
repz
dec
mov
call
push
test
push
or
push
ins
mov
pop
mov
icebp
push
loop
jbe
sbb
lock
sbb
nop
int3
xor
aam
test
or
or
xor
sbb
jns
arpl
push
dec
addr16
stos
inc
sbb
int
in
ret
push
sub
imul
ds
sub
push
dec
jo
lock
mov
xchg
out
sbb
adc
sbb
outs
in
call
loop
push
fbld
daa
sub
in
pop
movs
(bad)
(bad)
loop
mov
and
repnz
mov
not
bound
mov
fisub
into
jne
cdq
pushf
sub
push
aas
retf
add
shr
das
mov
out
(bad)
out
xor
pusha
mov
shr
pop
dec
mov
das
pop
cmp
aad
cld
xchg
cmps
iret
xlat
lods
push
xor
add
test
push
xor
and
xchg
int3
add
cmp
sbb
repnz
fsub
sub
lahf
test
outs
inc
scas
ds
retf
xchg
add
mov
ins
or
adc
pop
fistp
xchg
push
in
push
out
cmp
test
jg
out
adc
in
mov
add
cs
out
in
push
pushf
add
shr
inc
lock
pusha
xchg
sahf
call
cmps
pop
jmp
fs
adc
sub
out
popw
push
adc
mov
retf
sub
sub
pushf
adc
outs
mov
mov
and
jle
arpl
mov
imul
fsub
call
lea
call
xchg
sub
das
push
add
xor
pop
aad
loop
pop
ja
sub
cld
adc
(bad)
(bad)
jnp
inc
adc
mov
ins
es
mov
jp
mov
xor
and
jns
jmp
xchg
out
xor
xor
mov
jle
movs
mov
leave
mov
mov
xor
inc
pop
imul
push
jbe
mov
in
into
in
daa
adc
stos
xor
iret
fs
into
lods
in
push
xor
call
sbb
aam
pop
ins
bound
push
sbb
pop
sub
cmp
push
aam
push
js
movs
cmp
call
bound
xor
mov
(bad)
push
or
cmc
and
cld
sahf
repnz
sub
jne
and
movs
lods
push
loopne
push
jl
sti
dec
mov
lock
(bad)
xlat
dec
in
mov
xchg
add
jns
or
adc
mov
push
test
xor
inc
inc
xchg
xchg
push
dec
mov
mov
or
cmp
dec
xor
pusha
test
in
iret
(bad)
inc
ds
sbb
adc
xor
mov
dec
jl
shl
cld
jle
sub
es
mov
aaa
add
push
adc
mov
retf
loopne
add
mov
pop
stos
jae
and
xor
clc
call
adc
mov
mov
imul
outs
or
lock
daa
fist
repz
jle
and
cmp
mov
rcr
in
jno
inc
pop
and
jb
fbld
fstp
aad
in
in
mov
repnz
mov
mov
jo
xchg
cmp
mov
dec
(bad)
pop
nop
pushf
ins
dec
call
stc
dec
sbb
(bad)
icebp
mov
fwait
pop
pop
push
mov
dec
dec
pushf
data16
jbe
cld
sbb
vmread
shr
add
xor
or
add
sub
mov
stos
xchg
adc
mov
pop
adc
jmp
imul
outs
xor
test
hlt
scas
mov
sbb
pop
imul
lock
movs
xchg
add
add
xchg
pop
push
push
outs
cdq
or
mov
xor
xchg
jno
js
test
rol
mov
scas
or
mov
addr16
cmp
bound
xchg
add
inc
sti
pop
xlat
neg
and
loope
sbb
int3
xor
cmps
xor
sub
(bad)
addr16
mov
add
xor
push
pop
stc
bsr
out
cmp
cmc
rcl
std
leave
xor
inc
fwait
sbb
pop
add
mov
or
hlt
push
mov
loop
mov
jle
shl
sbb
sub
adc
sub
mov
fnstsw
sub
outs
push
sub
jp
xchg
sbb
test
cmp
sbb
fidiv
push
jns
mov
pop
stos
js
js
shl
out
mov
movs
and
nop
jmp
je
push
call
mov
mov
aas
nop
xchg
test
call
and
inc
jmp
shl
sbb
cwde
popa
mov
cmp
repnz
mov
mov
add
xchg
mov
adc
jb
push
adc
cmp
in
jge
or
mov
mov
jmp
daa
dec
xchg
les
cmp
jl
jecxz
and
(bad)
jmp
scas
inc
pop
(bad)
pop
pop
and
(bad)
cld
inc
dec
lock
or
int
cmc
fidivr
or
inc
pop
test
xchg
or
and
jmp
les
inc
and
and
stos
call
ror
(bad)
hlt
add
sub
(bad)
pusha
xchg
mov
mov
fs
out
dec
sti
shr
cwde
jl
mov
js
(bad)
loope
inc
inc
ret
add
repnz
xor
sbb
dec
cli
adc
push
sbb
inc
cmp
xchg
fiadd
and
add
cdq
cdq
cmps
fdiv
icebp
adc
in
jbe
push
mov
inc
shl
test
mov
push
xor
add
(bad)
mov
sub
or
and
dec
jne
retf
aaa
adc
mov
inc
inc
sbb
jmp
mov
xchg
push
ficomp
lahf
pop
enter
xchg
in
mov
fcomip
push
pop
or
cmps
cs
xor
xchg
lods
out
push
jae
cmp
aas
push
inc
mov
push
and
xlat
pusha
stc
ror
cdq
push
btc
daa
imul
or
scas
out
pop
mov
into
adc
out
xlat
into
retf
xor
lods
inc
push
mov
pop
dec
mov
xor
out
(bad)
fiadd
and
mov
pop
fwait
dec
inc
mov
sbb
and
pushf
dec
xchg
daa
jge
adc
call
(bad)
icebp
inc
loope
fist
xor
pop
aam
mov
cmps
adc
mov
das
xor
mov
inc
scas
dec
pusha
in
xchg
mov
mov
sti
clc
cmp
pop
adc
popf
push
in
idiv
mov
out
cmc
add
mov
sbb
cld
and
sub
dec
xchg
cs
rol
jo
jmp
mov
xchg
ins
cmps
xchg
xor
dec
jg
ins
js
aad
ja
outs
ret
fimul
xchg
scas
mov
and
mov
fadd
dec
inc
and
fcomp
xlat
mov
pop
and
cmp
test
add
sbb
sbb
xchg
retf
aad
clc
or
lock
cmp
dec
and
xor
sar
cld
push
or
aam
lahf
mov
lods
mov
sbb
cld
out
lock
std
and
mov
xchg
mov
pushf
jb
sbb
pop
adc
or
ror
cmp
aad
loop
mov
xchg
sbb
imul
gs
div
imul
out
in
dec
into
cmc
sbb
pop
mov
int
xor
outs
sti
cmp
in
jge
les
ror
in
lock
ror
mov
cmp
pop
or
adc
xchg
and
dec
cmp
mov
iret
adc
inc
inc
out
rcr
xor
mov
inc
loop
mov
(bad)
jge
lahf
ss
dec
fdivrp
pop
outs
mov
sub
inc
sbb
in
mov
loop
cmp
nop
push
inc
idiv
inc
add
sahf
mov
mov
imul
pusha
lds
repz
movs
fsubr
hlt
arpl
pop
out
scas
mov
adc
add
lock
xor
dec
shl
ds
pop
inc
pop
test
not
mov
cmps
xchg
shl
push
cmp
xor
(bad)
loope
dec
push
(bad)
ffree
(bad)
and
jb
int
xchg
jo
sti
add
jmp
ja
les
lods
xor
xor
test
enter
test
rcl
push
cmp
je
pop
mov
dec
pop
jb
repnz
jbe
xchg
in
adc
cmp
into
xor
jbe
mov
mov
jb
pop
inc
xchg
or
ret
push
pop
shl
repz
popf
add
ror
jmp
lea
mov
inc
jmp
adc
xchg
sub
sub
mov
xchg
jge
loopne
add
js
inc
lea
inc
mov
inc
sbb
adc
jge
rcr
inc
inc
xor
mov
jl
ret
xor
inc
mov
pop
es
xor
fsub
pop
or
repnz
sub
pop
outs
add
cli
mov
dec
lea
into
hlt
sar
fild
les
in
mov
sti
(bad)
sti
mov
push
or
stos
mov
pop
xlat
cmpps
arpl
repnz
leave
outs
jo
repz
sbb
loopne
mov
sbb
add
jne
jbe
inc
popf
dec
fild
call
mov
sub
stos
(bad)
xlat
push
xor
fsubrp
pop
int3
add
inc
dec
popa
or
in
pop
mov
shl
fldcw
cmp
cmp
fcomp
jae
fs
fmulp
xchg
fstp
ja
fistp
cmc
mov
in
push
mov
test
lahf
or
mov
fdiv
inc
ins
push
push
icebp
push
test
loope
clc
xchg
sub
xchg
pop
in
jg
mov
xchg
mov
in
enter
adc
xchg
jge
xchg
sub
jno
inc
push
dec
icebp
mov
sar
push
into
and
test
jmp
arpl
stos
jno
cwde
mov
and
(bad)
and
clc
jg
(bad)
rol
addr16
sbb
sub
jb
and
sbb
(bad)
fadd
mov
ins
repz
push
fnstenv
fsub
pop
into
xchg
cmp
mov
push
in
psrlq
jl
inc
mov
xor
or
jns
add
imul
sub
aas
sti
outs
inc
(bad)
dec
cwde
mov
into
or
(bad)
call
adc
sub
sub
pop
adc
mov
adc
jno
inc
gs
enter
les
imul
pushf
jb
pop
prefetch
xor
jmp
or
mov
es
cmp
pop
std
push
mov
push
xchg
call
dec
push
stc
pop
out
add
inc
push
fadd
pop
pop
xchg
outs
icebp
or
jne
mov
jl
ja
test
xor
movs
fsubp
inc
pop
(bad)
popa
aas
or
dec
mov
add
repnz
or
mov
jp
dec
je
shl
adc
ja
dec
fiadd
and
arpl
popf
push
cli
add
pop
jnp
sbb
icebp
(bad)
xor
dec
cmp
(bad)
leave
stos
mov
push
adc
mov
cmp
add
mov
fst
lahf
scas
in
js
into
ficom
dec
xchg
inc
push
aaa
add
adc
in
scas
pushf
repnz
mov
inc
enter
pop
dec
repz
and
jne
ins
cmp
sahf
mov
jnp
es
out
arpl
stc
mov
or
fimul
js
fistp
pop
xchg
jns
jp
sub
sbb
pop
or
jno
shr
add
cmp
imul
pop
cmc
push
(bad)
lods
ret
(bad)
mov
or
call
or
ror
clc
std
push
stos
(bad)
sahf
ins
(bad)
into
(bad)
sub
addr16
dec
daa
xchg
sub
xchg
pop
(bad)
in
and
mov
or
dec
mov
ins
push
mov
test
(bad)
addr16
sub
jne
ficomp
movs
or
adc
mov
pop
jecxz
or
jmp
jo
lods
pusha
jnp
sbb
jmp
or
movs
vpsubsw
dec
(bad)
cmp
out
mov
and
xor
or
call
mov
rcr
and
gs
mov
mov
push
sbb
or
pushf
jmp
lods
sti
loop
(bad)
(bad)
xchg
repz
(bad)
psubb
mov
push
push
sbb
mov
lods
(bad)
(bad)
cmp
mov
nop
push
pop
(bad)
in
inc
data16
rol
xchg
xor
xchg
imul
mov
xchg
scas
fidivr
rcr
leave
xor
fnsave
add
ret
pop
cmp
shl
lods
mov
int
aam
push
test
adc
sbb
and
mov
mov
in
mov
ror
cli
rcl
adc
into
push
ds
push
ins
cmp
bound
push
and
outs
adc
clc
pop
sub
adc
mov
push
fdiv
scas
mov
fmul
int3
inc
adc
or
jmp
push
sub
sar
sbb
cmc
and
loope
push
mov
inc
mov
pushf
pop
gs
and
jne
(bad)
fild
jo
imul
test
push
fdiv
addr16
dec
mov
movs
adc
push
nop
test
rcl
fstp
mov
jge
and
pushf
add
inc
xchg
sub
jmp
mov
in
sbb
jno
jnp
lods
cmp
fimul
xchg
inc
cmp
xchg
xor
mov
mov
adc
ins
leave
aad
lods
add
jbe
enter
lock
mov
cmp
sbb
push
xor
out
rcpps
cdq
fild
push
xchg
aad
mov
mov
popa
pop
mov
ret
repnz
dec
xor
inc
sbb
jo
mov
xchg
ret
repnz
cmp
lock
sub
push
stos
push
aaa
mov
mov
outs
rol
mov
adc
add
test
inc
and
xchg
(bad)
cli
(bad)
adc
mov
ffreep
arpl
or
imul
jecxz
arpl
cmp
xchg
ds
and
inc
mov
mov
sub
mov
mov
pop
stc
add
jne
cmp
sbb
adc
xchg
dec
push
movs
jl
adc
dec
gs
lods
(bad)
jo
in
sub
out
fsubp
cmp
inc
jo
xor
aas
popf
jns
pop
adc
mov
retf
mov
call
xchg
jle
jmp
lock
int3
xchg
sub
cmp
sbb
call
inc
(bad)
repz
stos
pop
(bad)
fsub
jbe
lds
pop
ror
add
jmp
cmp
fmul
jno
or
lahf
push
lea
dec
popf
clc
sub
mov
xlat
mov
fsubr
mov
add
mov
icebp
xchg
jb
les
outs
jmp
dec
push
push
out
test
mov
mov
sar
ins
xor
aad
xchg
jo
aad
xor
cs
or
jns
or
add
inc
pushf
jno
cmp
test
jb
aad
imul
jmp
sbb
test
xor
cmp
iret
xchg
lock
mov
pop
popf
loop
pop
dec
or
test
or
jg
adc
sbb
test
xchg
stos
inc
dec
ins
dec
(bad)
loop
out
adc
sbb
push
or
pop
clc
push
rol
scas
sti
cmp
jmp
fidiv
cmp
mov
popa
adc
sar
bound
inc
jp
mov
call
or
xchg
and
sbb
and
fabs
cmc
sub
cmp
jle
ja
cmc
(bad)
jmp
pusha
rcl
test
xor
std
pop
lahf
(bad)
and
das
daa
ins
jle
cmp
push
stc
dec
push
or
cmp
loopne
sahf
add
jns
mov
loopne
and
addr16
push
mov
into
jmp
les
pop
je
fwait
loope
lods
sbb
mov
mov
xchg
add
jge
mov
or
adc
test
push
outs
jle
cmp
(bad)
int
jp
imul
lock
inc
hlt
cmps
push
ins
inc
imul
push
outs
je
pop
ret
stos
outs
sahf
mov
cwde
lods
dec
test
pop
or
(bad)
ret
sbb
and
dec
shl
lock
jl
push
cmp
sbb
push
sbb
dec
mov
aam
js
imul
push
(bad)
icebp
retf
inc
add
jge
push
and
imul
in
pop
call
sbb
adc
sbb
mov
fwait
adc
pop
pop
ret
inc
and
and
mov
mov
ja
mov
dec
jo
rol
xor
call
fst
cmps
mov
repz
inc
addr16
xor
outs
mov
test
into
or
inc
push
or
out
jmp
out
mov
mov
sqrtps
jno
(bad)
pop
jb
push
xor
in
push
repz
xor
out
add
and
lea
out
(bad)
lahf
jp
xchg
gs
bound
cmc
je
mov
aad
adc
pop
stos
jl
shr
sbb
or
sahf
inc
add
lea
nop
popa
out
sti
push
movs
xchg
int
int
lahf
cmp
or
arpl
in
xchg
mov
fimul
(bad)
data16
sbb
sub
sbb
fild
enter
xchg
shl
ret
hlt
or
push
gs
jb
ins
and
aam
div
aaa
dec
lahf
loopne
mov
scas
retf
pop
mov
xlat
mov
aad
sbb
push
inc
fdiv
in
ret
xor
xchg
cs
shr
fdivr
ret
nop
and
push
(bad)
int3
retf
loopne
imul
adc
or
js
icebp
dec
out
ret
lds
dec
mov
ja
das
vpmadcswd
fldenv
pushf
sub
repnz
cwde
inc
mov
lods
jmp
pop
icebp
aam
pop
out
sbb
out
nop
shl
or
stc
adc
ss
aam
sbb
cmp
lods
arpl
mov
shl
jge
inc
add
(bad)
out
mov
call
bound
in
sub
dec
push
sahf
push
les
push
pop
(bad)
sub
(bad)
fimul
push
rcr
imul
mov
and
icebp
sahf
xchg
mov
mov
out
fs
dec
or
nop
(bad)
neg
hlt
ficomp
mov
xor
jge
xor
retf
push
nop
inc
pushf
pop
or
sbb
mov
push
addr16
inc
(bad)
fimul
cmc
jo
dec
outs
fs
fwait
sbb
dec
jmp
xor
cwde
sahf
dec
cmc
stc
idiv
xor
jecxz
xchg
add
xor
inc
dec
mov
push
sbb
out
ins
cs
je
pop
jb
mov
jmp
and
pop
jg
or
sub
idiv
jmp
mov
inc
fs
mov
(bad)
xchg
mov
adc
mov
jmp
cli
mov
add
mov
adc
add
sub
lods
mov
push
imul
out
lahf
pusha
das
xchg
jne
inc
out
add
ret
mov
add
push
jle
inc
mov
jmp
sbb
iret
out
fwait
xchg
fisub
jnp
mov
icebp
rcr
in
jns
and
pop
cdq
cmp
cmp
mov
push
jle
mov
push
aaa
cdq
repnz
dec
mov
and
pop
in
cmp
xor
arpl
shl
mov
in
call
lds
mov
loop
adc
adc
jl
fsub
add
mov
mov
push
inc
shl
lds
or
sbb
shl
stos
mov
sbb
jecxz
(bad)
int3
cmp
or
pop
jmp
mov
je
sbb
and
es
push
jge
les
dec
inc
dec
mov
jge
je
data16
pushf
outs
frstor
or
out
add
fdiv
cli
jecxz
inc
pop
mov
cmp
inc
mov
imul
out
xchg
pop
cwde
aas
pop
add
jbe
pop
std
(bad)
(bad)
cmp
loope
in
sub
mov
rcr
shr
xchg
sbb
shl
aaa
leave
inc
push
shl
cmps
adc
(bad)
mov
mov
mov
fwait
pop
popf
repz
pop
lds
into
pop
and
fiadd
lock
(bad)
in
or
(bad)
iret
pushf
jecxz
loopne
mov
in
popf
push
adc
inc
xchg
add
into
popf
ins
rcr
aaa
jno
in
test
lods
loop
data16
lods
dec
lea
adc
mov
fisub
pop
sbb
or
repz
out
dec
jae
icebp
jg
(bad)
sub
mov
jl
sub
fst
mov
sbb
xchg
add
or
aad
jnp
pop
xchg
lea
add
adc
jno
cmp
shl
neg
sbb
int3
xor
ret
test
mov
loop
test
cmps
cwde
add
(bad)
mov
mov
fsub
sbb
call
rol
xchg
and
sbb
push
enter
mov
or
cdq
push
xchg
mov
stos
xchg
mov
shl
retf
loope
mov
mov
scas
sbb
arpl
jae
mov
(bad)
xor
sbb
aaa
jmp
iret
retf
in
scas
repnz
push
movs
das
mov
pop
(bad)
mov
add
jl
out
(bad)
lock
mov
(bad)
std
fstp
sti
call
pop
sbb
je
add
add
test
jno
stos
push
jmp
notrack
jo
addr16
mov
or
test
retf
scas
(bad)
inc
cld
icebp
push
xlat
dec
(bad)
add
iret
(bad)
xor
loopne
or
das
push
(bad)
int
mov
adc
outs
pop
and
xchg
push
add
test
(bad)
iret
dec
out
push
test
in
clc
out
aam
mov
sub
clc
fsub
dec
push
mov
xchg
popf
xchg
(bad)
xchg
push
jl
jmp
mov
or
jno
inc
repz
mov
sbb
bound
push
xor
jne
popa
fisubr
mov
(bad)
cmps
inc
aad
cld
or
jo
mov
xchg
sbb
jb
sar
sbb
inc
mov
cli
movs
jp
retf
xchg
cli
pop
mov
pop
push
and
xchg
retf
xchg
jno
dec
retf
pop
repnz
and
fwait
adc
mov
and
loop
fmul
xchg
jl
mov
xchg
fstp
cmp
mov
repnz
aam
mov
outs
mov
sbb
push
dec
mov
sub
call
retf
cmp
js
js
xchg
ins
or
jmp
sti
inc
cmps
shr
shr
mov
mov
jg
stos
pop
add
xchg
sbb
movs
dec
xchg
mov
loop
je
jle
test
mov
push
xor
jg
mul
cs
(bad)
cld
xor
xor
mov
and
inc
xor
shl
push
cld
push
iret
cmp
cmp
fist
loop
dec
dec
fild
jle
stos
adc
and
cli
sbb
call
and
icebp
mov
repnz
jo
push
dec
pop
mov
je
mov
dec
adc
and
clc
mov
in
xchg
aad
sub
ja
cwde
jge
and
fistp
xchg
adc
mov
sahf
sbb
in
xor
and
rol
imul
xchg
nop
jle
(bad)
jl
daa
sbb
pop
ret
cmc
push
sub
add
or
(bad)
mov
dec
sahf
rcl
repz
xchg
inc
sbb
mov
out
popa
rcl
add
push
inc
cmp
xlat
call
(bad)
stos
fmul
fisub
lea
jg
data16
shl
mov
pop
cmp
lods
xor
xchg
xchg
(bad)
pop
stos
dec
inc
ss
jg
jmp
dec
inc
lods
mov
push
and
xchg
std
lock
stc
xchg
inc
fbld
adc
icebp
jbe
xchg
cmp
in
loop
int
jae
stos
ds
and
mov
call
jecxz
dec
dec
xor
je
stos
(bad)
stc
cmp
push
pop
push
pusha
mov
push
dec
cld
icebp
mov
out
mov
jecxz
sub
xor
pop
sar
xor
push
hlt
jecxz
mov
fistp
mov
xchg
jmp
jns
xor
sbb
sar
cmp
ss
pop
mov
mov
pop
jns
in
pushf
fldcw
mov
leave
popa
mov
in
pop
dec
loopne
sti
xlat
int3
movs
js
or
cmps
stos
div
mov
fbstp
sub
popa
lock
sbb
cs
or
call
int3
or
aas
ret
jns
ins
ja
dec
mov
pop
xor
inc
mov
push
ud1
push
inc
data16
mov
movs
xor
(bad)
lods
test
cmp
add
enter
add
xor
push
pop
test
mov
jmp
lds
int
scas
mov
fcomip
and
daa
mov
inc
and
pop
nop
arpl
push
int3
jmp
pop
or
sti
push
ss
jae
into
ins
sub
in
out
jnp
jl
mov
xor
xchg
jg
jb
sub
push
rol
pop
fldenv
pop
call
add
stos
add
lods
loop
stc
add
cmp
mov
dec
push
sub
loope
popa
imul
mov
repnz
aas
inc
sahf
retf
cmp
jmp
mov
hlt
add
enter
das
int3
fwait
fwait
(bad)
sahf
mov
jno
ins
mov
sti
jae
repz
xor
or
mov
cmps
jae
mov
pop
dec
pusha
push
mov
mov
loop
jnp
sub
ret
sahf
test
rcl
jmp
imul
fsub
hlt
pushf
jge
push
mov
sub
retf
xor
push
pop
mov
mov
mov
xchg
loope
mov
mov
sahf
cdq
sub
loop
xchg
ja
pop
push
loop
retf
pusha
rcr
xchg
push
mov
jb
push
and
adc
jns
jbe
pop
cmp
pop
jmp
adc
int3
aaa
jne
push
jns
(bad)
mov
fistp
adc
mov
dec
je
or
(bad)
(bad)
adc
sahf
out
jge
(bad)
sbb
sub
mov
sbb
leave
xor
stos
jbe
cmps
xor
cmp
lods
in
ror
cdq
aad
test
sbb
xchg
inc
push
xor
sbb
sbb
fist
movs
fld
dec
dec
addr16
mov
(bad)
fimul
out
mov
cmps
pop
or
(bad)
xchg
mov
cmp
mov
(bad)
rcr
xor
sbb
mov
jecxz
ror
push
push
shl
stc
inc
js
add
xor
aad
popf
outs
fistp
shr
mov
das
fldcw
xchg
mov
push
sbb
loop
push
outs
cwde
cli
or
fdivrp
dec
mov
cld
fs
(bad)
je
inc
addr16
inc
mov
add
xchg
mov
inc
aam
mov
out
or
xor
mov
mov
lods
jne
inc
in
jb
mov
or
add
lods
pop
mov
cs
es
mov
les
jns
or
or
add
or
pop
outs
pop
mov
jb
mov
cmp
sub
push
nop
and
pop
cwde
call
ja
mov
pop
pop
in
cdq
dec
ins
(bad)
sti
inc
adc
(bad)
loop
adc
popa
mov
or
int3
add
sbb
mov
out
loopne
inc
cdq
mov
sti
cmps
inc
je
pop
xor
jns
test
mov
mov
mov
jbe
mov
xchg
push
rol
mov
or
rcl
push
push
adc
dec
int3
cmp
mov
leave
xchg
xor
or
scas
daa
dec
pusha
pop
sbb
sbb
cwde
(bad)
sbb
js
mov
pop
out
je
loopne
mov
adc
std
xchg
or
jmp
cli
sub
bound
ret
jno
jb
mov
popa
inc
scas
call
(bad)
mov
stc
adc
into
inc
lods
mov
ficomp
imul
mov
dec
imul
jl
dec
inc
das
sub
mov
div
cmc
(bad)
xor
jmp
dec
push
xor
xchg
mov
pop
mov
out
loopne
or
and
pop
xchg
cmovb
adc
bound
xchg
dec
fwait
scas
getsec
and
shl
xchg
fsubr
jmp
xchg
fcomp
cmp
fs
cmp
inc
adc
xchg
(bad)
out
es
mov
inc
or
(bad)
fstp
out
ss
mov
fld
ins
movs
ficom
xor
inc
mov
aam
adc
call
push
jge
xchg
mov
mov
mov
jecxz
pop
xor
jns
fldcw
push
mov
fucomi
dec
fiadd
test
pop
ss
and
add
push
mov
pop
in
sub
mov
or
retf
push
jnp
dec
aas
inc
cld
xor
jecxz
inc
adc
jns
ss
xor
xchg
imul
or
mul
inc
dec
push
inc
sub
(bad)
aaa
test
inc
lock
jmp
jbe
push
pop
movs
or
cmp
test
jne
(bad)
arpl
xchg
dec
leave
xor
inc
fucomi
sub
jns
ss
lea
or
loope
sub
jl
iret
sbb
push
rcr
movs
hlt
movs
adc
inc
fild
ror
mov
movs
out
and
pop
cs
gs
cli
jmp
cmp
sub
mov
mov
and
scas
movs
(bad)
rcr
jnp
sub
repz
sbb
lea
mov
in
out
in
cmps
dec
rcl
and
shr
mov
push
jns
mov
std
push
jae
jge
mov
enter
jle
loopne
aad
push
pop
fwait
add
cmp
loope
jmp
call
nop
mov
mov
xchg
and
adc
pop
mov
ins
xchg
mov
xchg
add
cli
pop
mov
or
pop
out
ss
cmp
sub
or
test
sahf
push
dec
adc
push
pop
(bad)
pop
mov
inc
fst
cwde
in
mov
adc
pusha
retf
mov
and
stc
jnp
cmp
inc
add
inc
fmul
adc
jl
push
neg
outs
push
xchg
pushf
pusha
mov
adc
mov
jne
std
fnstcw
pop
lods
pushf
pusha
jp
jge
int3
clc
mov
addr16
scas
push
and
wrmsr
and
xchg
and
shl
cmp
cld
repz
xor
push
loope
push
(bad)
test
imul
xlat
shl
test
dec
jne
sub
test
ja
dec
cmp
aad
xchg
mov
adc
jne
(bad)
mov
je
jge
lods
jbe
xchg
sub
pop
js
jle
xor
xor
jle
jne
cmp
call
ja
mov
xor
pop
xor
jl
in
and
adc
jno
fild
aad
mov
outs
mov
shr
std
and
gs
jecxz
or
mov
mov
outs
and
hlt
jmp
mov
ret
aad
dec
inc
daa
shl
or
(bad)
jns
jns
xchg
cmp
mov
je
in
rcl
cmp
in
xor
scas
dec
pop
mov
and
sti
fdiv
mov
pusha
shl
aas
hlt
jecxz
call
jl
xchg
xchg
mov
ins
(bad)
lahf
in
sti
arpl
arpl
(bad)
adc
(bad)
retf
xchg
inc
cmc
shl
cmp
outs
inc
push
mov
fcmovnbe
jne
test
jecxz
addr16
dec
jmp
sbb
hlt
jp
imul
jle
iret
loope
inc
popa
pop
test
adc
stc
inc
adc
adc
popf
aad
pushf
xchg
gs
ss
out
imul
or
push
outs
cmp
js
sub
sbb
cli
retf
adc
inc
push
xchg
movs
int
adc
cld
push
sbb
aaa
push
add
xchg
test
clc
jb
fist
pop
out
gs
scas
push
dec
addr16
mov
pop
outs
sbb
fcom
mov
retf
loop
jmp
popa
loop
test
xor
(bad)
mov
pushf
jbe
in
push
mov
sub
pop
cli
sbb
mov
xchg
jb
pop
jno
adc
mov
fwait
std
mov
mov
jb
push
les
sub
rcl
cmp
sbb
and
xor
test
adc
push
push
fnsave
leave
cmp
test
sbb
(bad)
sub
push
out
das
jmp
jbe
push
inc
push
xor
pop
jl
cli
cmp
or
mov
fmul
sub
push
jmp
mov
sub
cmp
sub
or
cmps
imul
pand
push
ret
xchg
inc
hlt
jnp
and
jp
dec
push
out
push
(bad)
jo
inc
outs
sub
xchg
push
les
into
test
mov
imul
sub
push
sbb
(bad)
iret
pushf
mov
add
into
mov
inc
push
aad
xchg
ins
mov
jmp
retf
maskmovq
xor
xor
dec
pop
cmp
retf
cmp
sbb
out
test
and
and
inc
xor
mov
dec
dec
out
and
mov
inc
mov
xor
inc
or
clc
push
stos
popf
inc
pop
sub
loope
inc
xor
jg
lods
mov
jge
movs
cmp
add
dec
adc
push
mov
(bad)
fistp
repnz
pop
and
jae
pushf
sub
sbb
mov
pusha
in
mov
push
inc
aaa
ins
fst
pop
(bad)
adc
jl
cmp
(bad)
addr16
jle
mov
jmp
sub
test
ficom
xchg
mov
xor
mov
popa
not
sub
mov
arpl
call
loope
inc
neg
xlat
jmp
inc
jb
push
push
and
push
addr16
cmp
sbb
xchg
jmp
mov
push
retf
ret
in
movs
stc
pushw
pop
enter
int3
mov
loop
sbb
cli
imul
out
cmp
imul
or
dec
pop
test
inc
inc
pop
mov
test
(bad)
or
(bad)
cmp
jmp
xor
std
repz
sti
cmp
aaa
push
mov
loopne
xlat
mov
bound
and
dec
test
cmps
fidivr
jmp
sahf
sub
push
push
pop
aas
sub
fld
sbb
(bad)
dec
mov
fcom
xor
mov
bound
or
cmp
shl
je
jmp
adc
xchg
mov
jb
into
in
dec
push
int
pushf
lods
sub
out
inc
add
popf
sbb
(bad)
adc
xor
or
cld
mov
aas
jmp
jmp
push
adc
rcl
cli
inc
inc
mov
jb
xchg
in
inc
pop
sbb
out
mov
loope
out
jge
aaa
mov
int3
push
mov
shl
int3
imul
(bad)
sbb
iret
adc
out
and
and
add
nop
mov
es
and
jmp
mov
fistp
lods
mov
push
sbb
sub
add
test
jae
dec
add
cmps
call
popf
mov
mov
data16
shl
popa
(bad)
or
sbb
sub
xor
jle
adc
and
pop
lds
cmps
icebp
stc
pop
sub
xor
call
aam
xor
call
shl
stos
cmps
sahf
jmp
jnp
add
sahf
or
(bad)
and
bound
(bad)
inc
mov
ds
out
push
cmp
cdq
dec
arpl
xchg
sbb
xor
fstp
mov
(bad)
int
mov
xchg
mov
inc
fucomi
and
aaa
cmps
and
lds
pop
fsub
(bad)
repnz
test
shr
cmp
push
mov
cmp
and
mov
fucom
enter
lds
adc
xor
sub
xor
add
mov
adc
xor
dec
ficomp
fcmovnu
xor
dec
jbe
pop
(bad)
in
xor
mov
leave
fst
or
sbb
cdq
lods
mov
mov
sbb
mov
aam
xchg
or
test
cmp
clc
mov
push
ficomp
fist
jbe
sar
pop
push
rcl
pusha
mov
std
rcl
jmp
lea
dec
clc
and
pusha
jmp
jno
enter
xor
dec
add
xchg
scas
add
std
add
mov
lds
aam
add
adc
mov
mov
iret
fdivr
xor
cmp
out
fs
int
cmp
jnp
shl
add
push
pusha
push
pop
mov
pop
lods
xor
xchg
mov
and
mov
ss
outs
adc
pop
icebp
loop
repz
sti
jbe
or
call
sub
shl
lods
fmul
shl
pop
sbb
adc
jmp
cmc
in
sub
push
xchg
(bad)
fsubr
mov
mov
jp
cdq
mov
push
dec
xchg
adc
inc
rcl
inc
push
loop
fsubr
sbb
fnstcw
pop
adc
inc
xor
sbb
outs
push
popf
jnp
mov
pop
lea
jge
sub
pop
not
jge
aad
and
push
retf
scas
fbld
mov
jne
xor
jg
add
je
add
jg
std
lds
outs
mov
cmovle
add
es
nop
jg
xchg
lods
aaa
test
rcr
and
mov
or
ss
sar
mov
jmp
movs
inc
fmul
cmps
add
jp
fidiv
pop
or
jns
dec
jnp
ret
add
inc
xchg
rol
lods
push
add
jg
mov
add
lock
xchg
or
sti
ficomp
mov
sbb
rol
test
fsubr
pop
fnstsw
mov
mov
sbb
push
lahf
ds
ds
int3
dec
push
test
xchg
fdivr
(bad)
fwait
add
jecxz
aam
jecxz
or
pop
les
cmp
out
clc
mov
and
cdq
push
mov
mov
cmps
and
mov
aas
pusha
jb
inc
cld
dec
push
xor
add
gs
mov
outs
adc
mov
shl
fld
mov
xor
fcmove
popf
add
pop
mov
(bad)
cwde
xlat
mov
pop
xlat
leave
sub
rcl
adc
(bad)
iret
pushf
mov
fcomp
xor
es
(bad)
lods
mov
push
repz
inc
xor
push
addr16
fmul
pop
popa
or
js
call
push
fmul
pop
jbe
jnp
enter
cs
popa
outs
or
mov
dec
std
add
pop
mov
scas
sbb
jbe
fwait
xchg
fs
cs
inc
mov
xchg
push
mov
mov
lods
aad
mov
or
call
retf
pop
call
add
lahf
nop
loopne
dec
es
mov
ficomp
xchg
call
enter
ins
push
mov
sbb
jo
ror
imul
fld
aaa
retf
push
test
push
fidiv
into
adc
dec
pop
dec
xchg
and
pop
sbb
in
retf
in
mov
stos
pop
and
adc
retf
inc
mov
scas
jne
mov
push
sbb
and
xor
or
cmp
call
(bad)
aad
mov
or
faddp
xor
xchg
pop
cmp
sahf
pushf
js
lahf
les
shl
cmps
ss
mov
cmp
lock
(bad)
push
mov
daa
xchg
lock
and
(bad)
loope
bound
loope
adc
pop
jae
adc
cmps
pop
stos
(bad)
jp
inc
push
mov
sub
push
cmp
and
and
push
jmp
lods
inc
cs
dec
adc
outs
mov
mov
iret
sub
ds
in
sub
hlt
sahf
xor
mov
dec
popf
lea
shl
cmp
out
aas
jmp
cmp
and
dec
cmp
out
in
mov
dec
mov
mov
and
xor
out
mov
jb
and
jp
mov
mov
rcl
mov
push
xchg
adc
add
shl
mov
mov
jg
stos
pop
iret
rol
xor
mov
rol
push
and
pop
jg
outs
ss
cmc
mov
mov
push
pushf
imul
jl
shl
jmp
pusha
push
and
inc
jno
add
fs
xchg
pop
add
shl
mov
mov
fld
int
xchg
sbb
add
jo
sar
in
sbb
push
sub
outs
or
fdivp
and
push
mov
sbb
imul
dec
loopne
cli
loope
or
or
mov
mov
retf
les
xchg
push
dec
icebp
cld
mov
js
inc
sbb
or
cld
mov
mov
and
iret
out
sub
mov
push
jge
jge
sahf
in
cld
push
idiv
jns
sub
pop
(bad)
and
sub
jl
nop
mov
idiv
cmp
mov
pushf
mov
push
inc
pop
or
out
data16
call
(bad)
aas
push
rcr
mov
cli
dec
cmps
adc
stos
push
ret
ret
aaa
dec
sbb
xchg
in
les
mov
scas
int3
push
adc
loopne
enter
xlat
sahf
xchg
cmp
gs
out
push
pop
lock
int3
mov
adc
and
jle
dec
lds
dec
sub
retf
jo
popf
mov
lea
(bad)
cmp
retf
cmp
test
in
bound
jl
sbb
and
jge
jmp
mov
mov
mov
dec
mov
and
ss
mov
and
inc
or
push
add
xchg
adc
fcos
pushf
rcl
and
js
leave
test
test
mov
(bad)
dec
sbb
inc
xor
push
frstor
sub
add
(bad)
jp
sar
mov
das
mov
(bad)
xchg
leave
push
cmps
pop
inc
xchg
stc
cmp
imul
add
push
push
push
mov
mov
push
loopne
test
out
xchg
in
aaa
mov
jmp
and
push
jno
jle
jl
aas
or
push
iret
cmp
push
fs
(bad)
(bad)
test
inc
shr
inc
das
sub
fwait
or
data16
or
pop
imul
pusha
fistp
xchg
push
hlt
test
jge
out
ss
js
push
sub
es
ss
nop
iret
ins
les
test
mov
repnz
out
mov
push
fimul
add
mov
cmp
dec
cld
fwait
add
stc
xor
repnz
or
jg
sub
add
je
ja
lea
mov
mov
and
or
xchg
adc
pushf
sub
jg
jmp
iret
pop
stc
cmps
gs
aad
or
(bad)
xor
dec
sub
lods
xchg
push
clc
lds
sar
cmp
add
shl
std
out
retf
xlat
jle
pop
out
je
retf
fsubr
add
add
ja
pushf
xor
or
jmp
pop
xchg
dec
frstor
mov
lods
adc
push
ret
sbb
cmp
pop
push
or
(bad)
jns
aas
stos
nop
fwait
pushf
inc
xor
repz
pop
jmp
jl
pop
ss
fist
pushf
rcr
xor
call
sbb
enter
shr
sub
adc
cmp
scas
cmp
fistp
push
les
adc
jecxz
mov
(bad)
xchg
inc
push
in
adc
mov
inc
aaa
jmp
dec
adc
shl
ror
sub
nop
sub
loop
push
mov
cmps
sysret
cmp
and
lods
push
ror
mov
mov
push
pop
fnstcw
(bad)
(bad)
in
cdq
sub
cld
dec
cli
gs
cmps
adc
xchg
jb
lods
in
mul
call
push
xchg
mov
jle
xor
add
pop
imul
cmp
jmp
jle
fdiv
adc
loope
int3
rcl
push
sbb
cld
enter
popa
inc
and
hlt
and
(bad)
aam
dec
pushf
mov
les
lock
inc
in
mov
sbb
jg
fistp
adc
push
lock
js
(bad)
jbe
mov
mov
retf
pusha
adc
addr16
pop
inc
mov
xchg
and
pop
cmp
and
adc
or
jae
test
xchg
jo
jge
mov
xchg
dec
hlt
or
cmps
and
adc
lods
push
sub
or
popa
clc
push
dec
fwait
cs
loopne
gs
push
loope
mov
out
mov
cmp
ins
sub
sub
stos
outs
sbb
retf
retf
pop
cmp
pop
xor
test
cmp
call
mov
je
cmps
addr16
or
jbe
sar
cmc
lahf
outs
or
jns
cmp
xor
jae
out
out
add
xor
out
faddp
jmp
std
mov
(bad)
push
inc
dec
imul
int3
loop
mov
dec
xlat
fnstsw
mov
jbe
dec
test
hlt
inc
je
aad
scas
loop
shl
or
inc
lock
lock
inc
call
dec
mov
inc
mov
adc
mov
icebp
cmc
mov
xchg
in
sbb
jl
mov
in
mov
and
cwde
es
movs
bound
xchg
xchg
aad
dec
push
shr
in
push
pop
xchg
inc
dec
mov
xchg
xchg
arpl
ficomp
push
scas
mov
into
dec
or
shr
mov
mov
xchg
add
aas
push
and
sbb
jmp
mov
mov
(bad)
sbb
mov
adc
pushf
enter
pop
cmp
loopne
jecxz
fldcw
iret
inc
mov
mov
mov
sub
mov
lods
push
cdq
xchg
mov
leave
dec
sar
(bad)
scas
xchg
ins
push
scas
lds
xor
jnp
mov
push
dec
fisubr
(bad)
out
cli
dec
mov
pop
sub
inc
jmp
cmp
mov
pop
jg
retf
adc
test
aas
and
sti
xchg
mov
inc
cdq
stos
js
and
mov
or
retf
ja
cmp
inc
pop
sub
xchg
pop
es
(bad)
pusha
shl
xor
dec
call
adc
jg
rcl
xchg
mov
xchg
mov
push
ror
mov
bound
(bad)
loop
mov
push
enter
cmp
into
lds
mov
mov
inc
repz
jo
loop
dec
mov
loope
(bad)
xor
ficomp
loope
clc
das
lds
pop
jae
rcr
sub
jns
sub
cmp
adc
cwde
mov
test
push
mov
cwde
sti
adc
fmul
ds
leave
stc
mov
(bad)
mov
dec
push
cmp
dec
(bad)
aam
cmp
push
out
aam
scas
jmp
fst
pop
cmps
add
cwde
cmp
mov
add
push
repz
enter
add
pop
add
add
push
icebp
mov
loop
sub
push
cmps
pushf
jmp
or
js
(bad)
jmp
mov
pop
ins
add
mov
in
sbb
or
jmp
add
sub
dec
jmp
arpl
jbe
pop
jae
je
stc
or
fisub
(bad)
mov
push
addr16
shl
push
mov
sbb
dec
in
fldcw
je
pop
jo
rcl
mov
sub
sub
sbb
in
add
xchg
sub
mov
push
int3
inc
fs
lahf
in
ja
sub
(bad)
ret
or
mov
mul
or
pop
aas
push
jns
mov
inc
mov
cmps
push
cld
sahf
ins
stc
adc
add
gs
xchg
push
fdiv
mov
aaa
add
or
mov
jle
mov
ja
xchg
pop
shl
in
jge
je
jnp
aas
in
cmp
shl
sbb
mov
addr16
mov
dec
fidivr
push
imul
push
pop
dec
or
pusha
fdiv
stc
lds
jecxz
mov
or
xlat
mov
and
or
lds
dec
pushf
fisub
dec
(bad)
lds
xchg
fdiv
iret
inc
test
not
adc
mov
in
adc
or
into
cmp
imul
mov
push
(bad)
out
inc
sub
jbe
ss
neg
ins
jecxz
or
movs
mov
push
sub
and
jmp
sub
add
xor
mov
mov
jmp
adc
mov
data16
(bad)
cmc
mov
imul
jno
mov
sub
mov
ds
sub
or
dec
clc
cmp
and
repnz
add
xor
in
mov
cld
or
rcl
int3
call
jae
neg
je
stos
inc
inc
add
test
jnp
jl
xlat
fnstsw
adc
(bad)
repz
mov
cmc
out
jbe
aaa
mov
sahf
stc
sub
outs
fcom
push
mov
fs
(bad)
add
(bad)
cli
icebp
icebp
xchg
(bad)
leave
lods
jg
js
js
movs
dec
int
test
pop
pop
stc
idiv
jl
mov
movs
test
ss
xchg
and
in
adc
popf
and
mov
lea
pop
xor
ins
nop
jp
jg
pop
das
repnz
mov
in
ret
mov
test
stc
or
pminub
ins
sub
xchg
jle
mov
adc
mov
or
(bad)
mov
mov
add
inc
aad
pop
add
jp
cli
mov
call
stos
xchg
lock
push
or
loopne
movs
cwde
or
push
fucomp
in
xor
sti
sub
sub
fcmove
push
lar
push
push
je
sub
xor
lds
repnz
imul
mov
(bad)
(bad)
es
xchg
hlt
push
nop
cmps
cs
pop
push
add
xor
jmp
popa
in
jge
pusha
jnp
jmp
adc
inc
or
mov
sahf
mov
popa
push
xchg
sub
xchg
fldcw
cld
shr
test
pop
and
repz
mul
mov
cmps
jae
jnp
enter
sub
test
test
fistp
push
movs
mov
cmc
sub
cs
push
cmps
ss
push
cwde
jne
in
daa
push
add
cmp
inc
cld
mov
mov
in
mov
cmp
jmp
retf
imul
jmp
xchg
in
rcr
xor
stos
dec
mov
inc
sub
cmps
sbb
nop
int
cmp
icebp
dec
cli
fsub
stos
cmps
jb
pushf
movs
sar
aam
ret
nop
dec
sbb
clc
jg
shr
pop
sbb
movs
add
dec
pop
scas
das
lods
arpl
dec
adc
add
jnp
pop
or
ins
mov
or
movs
das
add
popf
repnz
push
xor
retf
and
into
adc
in
inc
ins
cdq
rcl
neg
push
inc
xchg
xchg
jmp
adc
outs
call
inc
scas
aas
and
xchg
shl
icebp
xor
mov
popf
mov
mov
inc
jbe
test
in
pop
mov
push
dec
and
mov
jno
loop
stc
or
(bad)
xchg
xchg
adc
mov
pop
popf
sbb
inc
or
ficom
cmp
push
inc
movs
jge
jmp
dec
mov
add
int3
xchg
dec
xor
out
mov
int3
shl
int
add
mov
mov
outs
pop
mov
push
inc
pop
mov
ins
cmp
push
out
pop
xor
dec
xchg
push
jns
mov
popf
daa
outs
ss
xor
jo
repz
fwait
or
and
sub
out
pop
mov
mov
loope
fucom
adc
push
call
sbb
mov
leave
add
movs
dec
stos
dec
sub
int3
adc
cwde
xchg
repnz
loopne
sub
fisttp
mov
jp
jo
lahf
jg
pop
jmp
movs
xor
clc
shr
mov
or
dec
repnz
imul
add
add
bound
cmp
sub
xchg
or
push
dec
pop
repnz
inc
dec
fdiv
inc
add
and
sub
pop
pop
das
(bad)
and
inc
in
mov
push
in
mov
gs
enter
test
bound
inc
repnz
sar
cmps
(bad)
adc
fwait
lods
sbb
(bad)
out
dec
push
mov
pop
sbb
cmp
jmp
(bad)
shl
mov
fwait
xor
mov
mov
fstp
pop
outs
std
lock
xchg
call
cld
jp
xchg
int3
dec
xlat
call
imul
mov
fadd
jae
addr16
xchg
imul
inc
pop
mov
leave
lock
or
push
arpl
sub
fstp
test
adc
stos
icebp
adc
fistp
ret
mov
mov
clc
hlt
jo
fadd
cdq
sti
ret
jno
outs
ret
cmp
adc
sbb
mov
pop
xor
(bad)
sti
jmp
in
mov
jnp
sub
imul
out
arpl
(bad)
mov
mov
xor
(bad)
mov
outs
fist
dec
cdq
add
pushf
loope
inc
xlat
aaa
movs
das
jo
pop
xchg
and
xchg
out
fst
in
imul
sub
popf
sub
sub
scas
cmp
inc
inc
add
or
int3
push
repnz
pop
ret
repz
pop
fwait
xchg
aas
ret
add
mov
cmp
int3
mov
jg
imul
and
mov
inc
pop
jb
imul
fidiv
js
js
pusha
or
push
outs
std
arpl
daa
ror
sbb
or
push
mov
shl
pop
sbb
stos
jne
mov
fldenv
or
mov
cli
and
pop
pusha
je
add
push
movhps
in
push
mov
mov
setns
mov
call
test
fidivr
js
call
cmp
(bad)
jmp
pop
xchg
push
xor
repnz
in
iret
out
sahf
xchg
aam
lods
pop
std
std
movs
into
push
test
and
add
outs
(bad)
inc
mov
ret
aaa
cwde
or
mov
dec
cmps
(bad)
jno
repz
ret
icebp
dec
push
out
sbb
cmp
aas
repz
rcr
jbe
ror
pop
enter
jge
mov
sub
mov
dec
pop
xor
cmp
sahf
add
or
pop
sub
div
mov
and
out
sar
jnp
push
and
mul
int
mov
lds
dec
jl
pop
fisttp
dec
leave
not
js
cwde
cmps
lods
add
mov
lds
pop
or
les
jmp
push
xchg
rol
cli
dec
in
int3
mov
sahf
sub
sub
cmp
sbb
movs
(bad)
leave
jmp
fs
push
leave
and
lods
arpl
push
sub
xchg
lds
mov
popa
in
popa
lods
or
push
push
les
dec
das
mov
or
xchg
(bad)
sub
stc
sub
loope
push
stos
push
leave
fimul
stos
ins
adc
fcmovb
mov
adc
test
mov
rol
or
aad
daa
xchg
xchg
(bad)
out
add
xor
dec
int3
mov
fnstcw
cmp
xor
ins
mov
inc
loop
imul
jne
out
enter
(bad)
(bad)
jmp
inc
cmp
lods
jno
mov
xchg
xchg
popa
xor
mov
lods
loop
inc
fbld
pop
pop
mov
les
aaa
jnp
lea
sub
aam
rcl
in
adc
out
xor
mov
dec
mov
out
xchg
jmp
sbb
fisubr
retf
and
into
adc
xchg
and
cmp
inc
or
daa
arpl
aad
cmp
leave
rsqrtps
test
jo
(bad)
imul
mov
xchg
pop
mov
stos
dec
push
jns
jmp
iret
cwde
bound
xor
pop
mov
sahf
ins
push
mov
ss
addr16
jle
xor
or
or
repnz
std
sub
int
add
ss
scas
jp
push
and
push
mov
sub
add
aas
jl
(bad)
stos
and
nop
call
adc
jns
xchg
fisttp
test
xchg
dec
jmp
lods
xor
or
pusha
adc
hlt
adc
xor
int
mov
test
add
je
idiv
mov
(bad)
popa
sbb
arpl
in
cmp
mov
jb
outs
adc
mov
leave
mov
push
sti
rcl
out
div
adc
mov
inc
shr
rol
pop
jae
xor
mul
scas
mov
xchg
out
cmc
add
into
xchg
mov
or
pop
jp
std
and
int3
pop
paddw
out
cmpxchg
in
pop
or
out
and
add
call
arpl
adc
scas
mov
push
int
cdq
fst
aad
push
xchg
js
hlt
(bad)
mov
mov
jl
scas
ins
cmc
fsubr
inc
addr16
shl
rcl
sbb
jmp
jp
or
ror
adc
cmps
adc
push
xchg
cdq
out
iret
cld
cmp
sub
add
aam
jnp
(bad)
fiadd
and
push
cmps
std
mov
add
push
sbb
clc
jg
(bad)
sbb
das
jmp
ret
xchg
ja
push
jecxz
das
out
sub
ins
adc
jo
loop
(bad)
push
dec
ret
cs
cmp
sbb
adc
out
call
scas
adc
fisttp
mov
inc
ins
mov
arpl
fidivr
div
jno
cs
call
add
cmp
cmp
inc
mov
nop
xor
out
int
mov
push
jecxz
clc
cmp
test
push
sub
xor
fcmovnb
cld
test
push
mov
sbb
loopne
mov
and
mov
mov
ret
adc
sbb
aam
dec
aaa
or
sub
test
dec
push
sbb
dec
cmp
imul
push
sbb
sub
retf
push
push
mov
sub
xchg
sub
jae
or
fst
mov
mov
clc
clc
retf
inc
xchg
bnd
sbb
xlat
fcom
out
push
(bad)
bound
xor
das
addr16
hlt
(bad)
scas
push
push
mov
sub
mov
and
repz
enter
cmp
test
mov
sub
push
out
add
push
out
sahf
inc
popf
icebp
ins
mov
enter
cmps
shl
cld
dec
test
jge
outs
mov
out
add
sub
mov
shl
or
push
fisttp
jmp
dec
xchg
std
dec
push
out
lahf
mov
(bad)
sahf
icebp
arpl
test
xor
cmp
out
es
inc
arpl
ja
aam
rol
mov
sbb
pop
pop
pushf
mov
stos
xor
jmp
inc
jbe
xlat
aad
adc
popf
push
push
test
inc
jp
xchg
dec
repnz
dec
sbb
push
ins
icebp
arpl
mov
shl
or
scas
mov
inc
ds
sahf
push
outs
xchg
fcom
inc
adc
or
mov
cmp
leave
or
ds
dec
repnz
test
or
xor
call
adc
pop
push
fisubr
push
jae
cwde
add
cmp
or
lea
add
push
push
call
in
clc
std
dec
sub
xor
and
imul
jp
leave
aad
fs
aaa
cwde
dec
inc
xor
imul
or
aaa
xchg
(bad)
rcr
lds
push
call
fs
call
scas
sbb
sub
mov
dec
in
push
in
and
(bad)
data16
ins
ins
pop
pop
call
inc
shl
loope
es
popf
add
cmp
ins
mov
pop
sti
inc
test
dec
sub
xchg
ja
add
sub
mov
push
sbb
pusha
es
mul
inc
mov
adc
push
and
mov
aaa
(bad)
pop
jbe
lds
xchg
call
jmp
jne
fild
mov
lahf
ss
xchg
sahf
add
or
xor
popf
cmps
out
aam
push
das
dec
xor
gs
outs
pop
call
in
arpl
sub
add
(bad)
loope
push
or
les
add
mov
lock
or
out
and
mov
dec
xchg
xchg
pop
mov
jge
ins
in
push
sti
sbb
inc
stos
es
fst
add
movs
jno
out
inc
add
ins
rcl
jbe
nop
sub
dec
je
sbb
call
es
sub
call
cdq
dec
sbb
mov
int3
ds
push
fcmovu
aas
xor
sub
mov
sti
popa
push
jns
jle
out
popf
push
or
jns
pop
int3
pop
mov
cli
ficom
cmc
jle
rcl
push
or
icebp
sbb
mov
sub
pop
sub
aad
inc
mov
push
dec
inc
call
mov
or
clc
cs
xchg
enter
fcom
pop
lock
xchg
push
sub
in
and
add
sti
add
inc
and
outs
sub
fdivr
stc
out
leave
movs
jb
and
mov
inc
jp
cmp
(bad)
cmp
out
push
(bad)
out
daa
cmp
jne
imul
cmps
sub
jnp
scas
mov
add
pushf
cld
jnp
sbb
push
and
mov
inc
adc
dec
retf
xchg
fsub
sub
pop
pop
sub
shld
jmp
fistp
addr16
mov
fisttp
call
lahf
cmp
imul
jmp
lods
mov
xchg
cs
sbb
jne
jns
retf
or
mov
mov
cmp
mov
movs
jp
nop
add
pushf
pop
fcomp
fsub
xor
call
push
pop
data16
bound
cwde
sbb
rcr
xchg
aas
sub
add
into
imul
loop
xchg
jl
mov
(bad)
cmc
jne
jb
sar
pop
scas
adc
push
sub
xor
xchg
int
repnz
hlt
movs
jmp
movs
push
sub
out
and
je
shl
bound
mov
movs
inc
dec
sub
inc
add
add
pop
add
ror
les
pushf
das
cmp
sub
lds
xchg
inc
xchg
cmp
shl
mov
inc
in
out
inc
sbb
cs
sahf
or
loop
jmp
cmp
mov
or
sbb
int3
lds
push
aas
xchg
push
mov
mov
popf
data16
mov
clc
lods
inc
mov
loope
dec
inc
imul
pop
pop
mov
test
xchg
mov
pop
mov
aaa
outs
xchg
(bad)
aam
push
stos
fnstcw
or
mov
jmp
fnstenv
and
jp
test
retf
shr
or
into
into
xchg
mov
popa
in
and
ss
lock
call
jmp
dec
hlt
bound
pop
push
push
sub
cmp
fwait
mov
sbb
jg
dec
dec
jecxz
jmp
mov
daa
mov
int
cdq
push
adc
mov
push
(bad)
xchg
cld
outs
pop
retf
push
lock
fdiv
mov
xchg
xor
fucomi
(bad)
jmp
and
je
mov
inc
jbe
xchg
div
jbe
(bad)
adc
cmp
jp
lea
dec
add
scas
jmp
int3
aam
mov
aas
adc
lods
jecxz
add
outs
and
jne
ja
and
and
xchg
fist
std
mov
and
repnz
pop
leave
mov
imul
inc
pusha
or
jno
xor
jle
enter
mov
adc
lea
dec
addr16
aad
and
stos
sub
jns
jmp
fidivr
xor
cmp
movs
adc
(bad)
pusha
or
aad
cwde
push
sbb
cmp
enter
pop
pop
popf
in
mov
repz
adc
jnp
sub
std
out
xlat
movs
mov
xchg
sub
push
enter
sbb
outs
cmps
ret
dec
jno
dec
inc
xchg
pop
xor
sti
(bad)
je
popf
xchg
pusha
retf
and
pop
(bad)
sbb
test
mov
mov
fadd
and
fwait
scas
fdiv
neg
les
out
push
xor
sahf
nop
cs
push
sub
and
pop
jnp
sbb
aad
addr16
jno
jno
cli
pop
fwait
bound
loope
sahf
jle
call
push
mov
push
daa
mul
stc
inc
arpl
in
ret
(bad)
jae
fstenv
hlt
xchg
cmps
dec
shr
push
mov
or
inc
dec
adc
imul
inc
dec
xor
sbb
and
sbb
adc
ins
add
add
fst
scas
xchg
repnz
adc
mov
sub
or
jge
and
daa
xchg
cmp
pop
add
and
mov
adc
sahf
dec
jecxz
enter
ret
repz
jns
aaa
je
test
add
fiadd
sub
sbb
ret
sub
bound
stos
(bad)
loope
scas
rcl
lock
clc
jns
mov
sbb
cld
xchg
mov
call
jle
push
cmp
out
pop
je
rcr
xor
push
sub
retf
xor
js
adc
mov
stos
adc
popf
mov
jo
dec
push
add
mov
mov
dec
ficom
imul
dec
inc
cmp
jle
stos
pop
in
push
or
sbb
add
xchg
(bad)
out
and
add
xchg
ins
push
int
xchg
inc
dec
add
inc
cmc
xchg
adc
pop
aad
sti
xchg
xor
movs
push
jae
aam
and
daa
mov
rol
mov
pop
jno
test
jmp
in
in
push
sbb
nop
and
lds
jno
mov
sub
or
popf
mov
cmp
cmp
ins
fwait
retf
mov
scas
push
loop
adc
push
nop
int
imul
dec
pop
mov
test
mov
mov
leave
cmc
(bad)
mov
repnz
popf
nop
ficom
adc
inc
std
sub
mov
push
mov
movs
dec
pop
mov
mov
sub
scas
addr16
jno
inc
cmp
mov
mov
frstor
mov
push
sbb
mov
in
lds
xchg
leave
add
xor
dec
mov
clc
fsub
or
inc
jmp
add
and
adc
rol
xchg
xor
push
int3
(bad)
sbb
fwait
neg
or
push
stos
sub
and
mov
mov
add
cmc
(bad)
out
mov
xor
outs
ss
or
fst
sar
sub
adc
dec
aaa
scas
lock
mov
mov
sub
das
sbb
lea
ror
fwait
rcl
icebp
push
sbb
xchg
nop
ds
push
dec
cmp
jno
test
cli
add
jge
in
xchg
mov
cmps
(bad)
lods
or
scas
cwde
push
inc
pop
out
addr16
sar
push
inc
jg
cwde
push
pop
aam
dec
aaa
and
mov
nop
repnz
cmps
sbb
test
push
(bad)
cmp
ret
jo
jb
aas
jo
scas
sub
jo
clc
mov
call
push
call
xor
mov
xor
jecxz
int
pop
aaa
ret
add
cmp
mov
mov
xchg
cld
or
mul
repz
cmp
pushf
mov
call
cmp
enter
sbb
push
push
(bad)
scas
jne
add
mov
push
out
dec
or
mov
imul
xchg
sub
cmps
inc
movs
push
sub
out
push
cwde
pop
std
push
lea
scas
fist
mov
out
adc
add
out
(bad)
inc
mov
sahf
inc
fs
xchg
fs
cmp
inc
dec
cmp
xchg
pop
inc
or
push
pushf
sbb
push
jno
cli
or
and
int3
scas
xchg
xlat
jo
sar
mov
aaa
mov
sub
repz
mov
stos
and
ins
lahf
leave
es
bound
fs
inc
push
adc
or
popf
call
mov
ret
ror
popa
pop
xchg
push
push
rcl
ins
pop
xor
mov
pop
or
mov
mov
ficomp
dec
int
jle
xchg
pop
mov
push
call
dec
hlt
js
sub
ss
mov
mov
push
popf
std
in
sub
fcomi
bound
dec
scas
push
data16
push
push
sub
rcl
imul
cmp
inc
or
(bad)
fist
dec
dec
stos
adc
mov
jmp
inc
or
jmp
pusha
sub
sub
xor
lock
sti
sbb
xchg
ins
or
mov
xchg
add
(bad)
aam
stc
dec
push
loop
cmp
push
dec
sti
mov
int
dec
repz
inc
and
inc
dec
xor
and
mov
pushf
inc
fwait
into
jns
test
(bad)
cmp
xchg
jmp
into
xchg
stc
jae
dec
inc
xchg
aam
jae
stos
jmp
sub
pop
jg
lea
push
or
xchg
sar
add
push
fcom
leave
aam
push
mov
ret
jmp
sub
rol
pop
push
mov
into
inc
sub
imul
leave
xor
fs
mov
and
stos
shl
push
mov
inc
outs
cmp
xchg
test
outs
cdq
dec
cdq
stos
into
cli
fcmovu
sub
pop
push
loope
popa
loop
pop
dec
ror
call
sbb
ret
mov
jg
(bad)
mov
retf
enter
in
clc
lods
sbb
enter
mov
dec
and
pop
daa
mov
adc
out
xchg
mov
adc
popf
jmp
jb
inc
test
mov
js
loopne
mov
lods
mov
mov
out
push
or
outs
push
xchg
xor
cdq
mov
add
xor
movs
test
xchg
pop
mov
ror
dec
iret
xchg
cdq
dec
test
dec
sub
(bad)
pop
adc
or
js
(bad)
sbb
(bad)
push
adc
and
aad
lds
mov
sbb
rcl
push
aad
int3
(bad)
je
mov
ds
jecxz
fstp
jne
xchg
sbb
fstp
sti
mov
mov
sbb
enter
jmp
iret
sub
xor
sbb
mov
bound
test
out
lods
sbb
push
xor
shl
stos
shl
addr16
out
repz
add
sar
jg
scas
and
iret
push
cmp
jge
dec
jo
fs
(bad)
aad
mov
xor
xchg
xchg
sub
add
(bad)
adc
mov
aad
xor
add
and
mov
lods
mov
ret
cmp
fmulp
dec
out
mov
sub
jl
cmp
outs
mov
clc
test
fidivr
aam
cmp
pop
rcr
mov
inc
adc
sbb
or
ror
pop
(bad)
leave
cmp
and
in
cmp
mov
nop
jns
daa
pop
in
pop
sbb
pop
popf
pop
gs
mov
fidivr
or
and
fnstenv
test
shr
sbb
mov
mov
adc
out
out
(bad)
fdiv
pusha
mov
cmp
lock
push
test
push
xchg
inc
mov
ffree
in
scas
adc
ret
add
mov
mov
push
retf
jle
xchg
add
cmp
ficom
adc
imul
hlt
pop
cmp
call
mov
div
popa
push
add
push
and
pop
or
ret
(bad)
sbb
data16
mov
mov
(bad)
jns
xchg
aam
xor
jmp
inc
fisubr
sub
fmulp
std
sbb
xchg
cmps
arpl
repz
inc
(bad)
xchg
popf
adc
push
xchg
icebp
sub
add
adc
sbb
dec
les
shl
push
sbb
ss
add
sti
xor
imul
aaa
add
mov
(bad)
fbstp
jae
outs
test
adc
int
add
mov
push
(bad)
in
pop
std
adc
jge
dec
cmp
cs
rol
or
push
lods
fdiv
sbb
and
pop
aaa
test
lods
inc
jae
push
adc
cli
retf
(bad)
jmp
arpl
cld
adc
lds
mov
fwait
adc
shl
inc
push
cld
jo
gs
mov
sar
rol
sti
jnp
and
in
xchg
test
cli
mov
xchg
add
inc
fild
push
in
mov
cmp
adc
fidivr
sbb
mov
mov
rcr
in
inc
test
dec
fld
mov
or
(bad)
jne
pop
cmps
cwde
arpl
das
nop
imul
mov
mov
dec
aam
add
ret
adc
stc
jmp
add
or
dec
sbb
lea
into
pop
cmps
mov
sti
sub
xor
dec
mov
(bad)
in
or
jl
int
pop
loopne
pushf
stos
aaa
ja
icebp
cmc
or
bound
jg
outs
mov
and
out
rcr
popa
mov
jg
inc
retf
or
add
push
sbb
mov
or
lea
std
icebp
daa
lock
mov
mov
mov
push
pushf
push
push
cmp
bound
and
xchg
fxam
(bad)
leave
popf
ins
or
add
shr
sahf
idiv
and
jp
cs
into
pop
cmp
ds
dec
ins
and
jo
dec
pushf
in
fld
sbb
xchg
imul
dec
cmp
outs
pop
pop
pop
mov
imul
or
iret
inc
sar
add
add
sub
xchg
cmc
inc
pusha
cs
call
in
mov
mov
fsubr
mov
and
add
sti
sbb
popf
xchg
and
mov
pushf
sahf
and
mov
ror
int3
jp
call
test
push
mov
lea
(bad)
(bad)
dec
mov
in
xchg
mov
icebp
(bad)
push
xchg
xor
cmp
sub
sub
in
mov
(bad)
add
nop
mov
scas
stos
retf
or
ins
inc
cmp
jmp
sbb
mul
or
clc
in
mov
std
cmp
mov
mov
and
inc
ja
mov
mov
rcr
xchg
xchg
and
push
dec
xor
xchg
rcr
adc
ret
mov
test
push
sbb
movs
xchg
mov
adc
dec
sub
ds
sub
gs
and
inc
sbb
inc
imul
jmp
push
fstp
sbb
in
sahf
outs
ins
in
add
or
jle
mov
jecxz
jno
jnp
aas
inc
mov
mov
or
(bad)
in
pop
cs
fs
jl
loop
inc
pop
(bad)
js
or
sbb
mov
fimul
adc
les
push
mov
outs
mov
mov
ja
popf
out
outs
jmp
sbb
xor
sub
dec
ret
test
fwait
in
movs
into
fadd
xchg
fnsave
movs
int3
sbb
pushf
rcl
add
lock
xlat
pop
repnz
popa
xchg
jl
jnp
xor
imul
popa
loope
mul
xor
inc
shl
int3
lahf
bound
adc
pusha
ja
xchg
push
dec
not
mov
sub
xchg
sub
(bad)
(bad)
pop
mov
mov
cmp
shr
jb
inc
adc
aad
inc
(bad)
xchg
mov
getsec
mov
sbb
add
aas
cdq
sub
jbe
mov
out
(bad)
out
xchg
pushf
pusha
into
fs
xchg
addr16
fcomp
imul
jl
out
xchg
clc
jne
movs
fisttp
mov
push
mul
aas
sub
and
int3
fwait
out
pop
push
loope
or
ja
dec
imul
popf
jmp
cmp
pop
leave
lods
jb
fsubr
ss
inc
jb
dec
cmc
imul
sti
jae
cmp
ins
xchg
lahf
into
das
ret
call
or
bound
inc
pop
jecxz
and
xchg
cmp
mov
iret
dec
fsubr
lea
cmp
sar
mov
inc
mov
into
dec
pop
xlat
mov
mov
rcr
in
inc
mov
sub
rcl
stc
out
mov
adc
dec
add
mov
rcr
mov
jnp
dec
sub
pop
add
out
add
mov
iret
xchg
or
cwde
inc
xchg
popf
cmp
or
dec
cmps
out
test
push
loopne
mov
pop
jl
pop
xchg
lods
mov
sti
adc
repnz
out
adc
mov
push
jle
in
sub
push
cmp
add
pop
mov
(bad)
pop
jge
stos
cmp
add
cmc
xor
push
aaa
int3
dec
loop
sub
pop
sahf
jns
pop
hlt
out
fisubr
sbb
mov
add
push
cmp
jmp
fidivr
jo
(bad)
scas
jb
pop
xchg
and
mov
test
cmp
mov
jno
mov
inc
add
or
xchg
stos
shl
pop
lea
mov
jo
mov
cmps
fistp
push
push
nop
int3
movs
movs
test
jecxz
or
xchg
out
mov
in
std
cld
test
fisub
add
sahf
jge
xor
jl
pop
test
mov
sub
pop
and
pushf
jp
fst
call
inc
and
retf
stos
and
mov
mov
jne
int
ror
xor
enter
fadd
(bad)
jecxz
sub
jp
fistp
adc
int
xchg
(bad)
adc
mov
scas
or
ins
imul
pop
je
sub
push
or
js
xchg
jnp
or
popa
add
lea
and
push
add
jb
clc
daa
imul
lds
mov
loopne
or
add
dec
sbb
retf
push
fdivr
test
shl
in
fstp
jmp
ret
jge
or
(bad)
sbb
inc
enter
leave
movs
jp
and
sti
adc
data16
shr
dec
cmp
sbb
dec
in
mov
jl
fild
sti
rol
dec
mov
jl
mov
jg
loope
jb
add
lods
cmp
cmp
repnz
lods
fwait
aaa
adc
pop
add
pop
xor
inc
sbb
jecxz
sub
test
fild
mov
(bad)
dec
cmps
adc
xchg
retf
sbb
psubb
mov
stc
pop
jge
rcl
out
jge
mov
stos
mov
inc
imul
sbb
or
mov
test
dec
mov
dec
mov
aas
jmp
inc
mov
div
mov
push
mov
(bad)
scas
xor
imul
leave
dec
add
unpckhps
ret
mov
mov
jo
inc
in
xchg
push
test
cld
shr
out
mov
sub
inc
loop
xor
ds
mov
movs
retf
mov
adc
lds
dec
inc
mov
or
es
or
movs
ja
xlat
fwait
out
bound
pushf
cs
dec
mov
and
aaa
pop
mov
nop
inc
call
rcr
ror
fcmovne
push
bound
mov
es
pop
mov
jmp
mov
sub
(bad)
(bad)
mov
jnp
aam
xchg
mov
lock
scas
jmp
test
mov
jbe
inc
arpl
pop
nop
jl
outs
push
jae
xor
test
or
mov
ret
aam
dec
add
sbb
enter
inc
cmp
dec
retf
jmp
mov
jne
xor
test
inc
js
pop
addr16
cmp
inc
mov
ins
fidivr
push
pop
ss
mov
lock
loope
(bad)
pushf
mov
int
push
movs
imul
or
cli
dec
mov
rcl
inc
sbb
push
sti
push
shl
pop
je
xchg
add
pop
dec
fcom
pushf
pop
or
aad
pop
dec
je
pop
stc
xor
mov
out
mov
add
jmp
inc
push
xchg
adc
es
push
stos
xor
sar
mov
adc
xchg
xchg
sub
lds
adc
cdq
mov
mov
jb
or
pop
ins
jmp
add
div
mov
mov
loopne
push
and
std
jp
loopne
pop
jg
or
xchg
pop
jp
rcl
dec
dec
xchg
out
fwait
jnp
pop
push
inc
push
out
mov
pop
test
adc
int
lock
xchg
mov
mov
cld
mov
pop
mov
test
xchg
stc
sbb
(bad)
cwde
cmp
add
add
in
lods
jb
pop
inc
rol
cmc
loope
pop
data16
add
cmp
push
in
leave
xchg
aaa
mov
sub
xor
adc
jbe
call
inc
fs
rcr
mov
cmps
test
fist
clc
xor
xor
repz
popf
pop
out
push
jle
sub
mov
dec
icebp
mov
push
adc
adc
ja
and
loopne
scas
adc
cmp
pop
add
lahf
cdq
ret
popf
mov
add
out
dec
jle
dec
retf
es
push
mov
repnz
fstp
inc
imul
test
push
bound
outs
and
xchg
mov
cmp
cmps
leave
fdiv
cmc
and
repnz
cmp
inc
jge
cli
pop
mov
sub
sar
(bad)
rcr
dec
push
(bad)
push
ja
sbb
inc
xchg
mov
sub
outs
pextrw
and
adc
xlat
test
pushf
dec
(bad)
addr16
inc
mov
ins
shl
ja
cwde
mov
sub
rcl
lods
add
lock
pop
ins
(bad)
and
inc
test
push
out
cmp
gs
call
stos
dec
or
daa
stos
ret
iret
popa
popf
out
inc
dec
or
imul
test
arpl
fdiv
out
xchg
jbe
xchg
inc
mov
daa
enter
xlat
out
cmps
inc
sub
lods
aad
cmps
sub
test
mov
(bad)
popa
inc
inc
or
lods
outs
dec
cli
mov
sahf
push
mov
pop
stc
jbe
pop
xlat
sub
pop
addr16
jno
es
add
shr
or
sub
or
in
dec
je
xchg
not
inc
xchg
js
inc
cmp
mov
cmps
inc
pop
stos
pop
mov
cdq
fistp
ss
stos
lods
movs
push
rcl
test
xor
fdivr
ins
and
mov
aam
je
bound
iret
out
mov
(bad)
frstor
stos
dec
xchg
shl
mul
dec
(bad)
or
sub
adc
or
fs
loop
pop
mov
ins
xor
xchg
cmp
stos
retf
and
jbe
aam
xor
sbb
outs
out
shl
and
out
jne
sub
fld
inc
jp
and
fwait
int
add
push
push
(bad)
in
js
or
mov
dec
stos
inc
mov
push
jmp
xor
in
out
adc
clc
dec
mov
pop
les
mov
ss
repnz
pop
and
enter
mov
pushf
xchg
ja
mov
aad
inc
out
int3
out
push
js
mov
add
xchg
pop
mov
(bad)
(bad)
retf
lds
mov
inc
inc
jecxz
movs
push
ror
(bad)
sbb
fisubr
test
or
iret
fistp
mov
lods
push
adc
cdq
movs
jmp
jb
ror
ds
xor
test
push
jg
das
pushf
and
add
sub
xchg
mov
mov
jnp
jbe
xor
inc
sub
std
inc
ret
jno
pop
jb
mov
les
mov
fdivr
call
jecxz
imul
jo
imul
sub
pop
fcmove
xchg
shl
inc
sub
add
fsubr
(bad)
fidivr
mov
out
les
lahf
or
stos
mov
dec
retf
push
leave
xlat
xchg
jmp
aas
adc
nop
test
fisttp
push
xor
push
leave
movs
popf
xchg
or
(bad)
sbb
lahf
mov
loopne
aam
ins
mov
inc
jno
xchg
pop
sbb
je
add
mov
pop
fiadd
push
int3
adc
cwde
movs
les
xor
jmp
xor
pop
jp
xchg
add
sub
and
cdq
dec
jl
xchg
mov
loop
push
retf
xchg
es
xor
add
xchg
inc
(bad)
and
mov
test
dec
leave
mov
pop
(bad)
out
retf
ss
pop
mov
cmc
test
loop
pushf
fidivr
xor
ds
test
cli
cmp
jmp
das
dec
gs
data16
fld
cmp
and
mov
mov
test
pop
(bad)
mov
(bad)
xor
push
or
jno
fst
nop
aas
fdivr
je
pop
lods
dec
jg
cdq
cmc
and
ds
adc
outs
push
repz
or
inc
adc
mov
xchg
or
jno
sub
neg
addr16
jnp
fistp
retf
test
cmp
xor
loop
sbb
xchg
pop
aas
or
repz
mov
arpl
imul
imul
mov
mov
lods
mov
sbb
(bad)
adc
popa
cmp
out
ffree
repz
(bad)
(bad)
xchg
fcom
sbb
pop
pop
test
pop
xchg
sub
outs
sub
or
and
stos
add
scas
and
dec
and
outs
(bad)
xchg
or
es
stc
add
push
ret
pop
inc
push
cmp
adc
xchg
imul
cmps
xlat
pop
sbb
cmp
out
hlt
mov
test
sti
pop
div
cmp
adc
add
mov
mov
xchg
adc
sub
dec
leave
ror
retf
push
std
push
out
fcom
pop
push
push
mov
loop
cmps
mov
popa
retf
mov
shr
neg
in
aaa
sbb
popf
icebp
sbb
xchg
push
sbb
mov
popa
mov
sbb
out
dec
xchg
xchg
and
add
data16
dec
mov
int3
lods
push
test
jbe
and
inc
adc
xor
mov
xor
fnstenv
sti
fidivr
cmp
add
bound
ins
sbb
cmp
pushf
popf
rol
inc
xlat
xchg
mov
push
mov
test
adc
sub
daa
pop
inc
add
push
(bad)
add
cmp
and
fisubr
push
or
mov
dec
jo
adc
rol
and
jb
push
movs
js
pop
stc
xchg
push
mov
fld
fbstp
scas
movs
mov
cmp
call
mov
mov
inc
or
sti
xchg
shl
add
xchg
xchg
scas
fsub
cli
repnz
stc
lahf
lods
ret
pop
cmp
sbb
mov
stc
bound
mov
dec
ss
dec
clc
div
mov
ss
jmp
pop
test
movq
xor
mov
dec
retf
jne
sub
xchg
cmp
(bad)
cld
push
out
pop
push
pop
dec
mov
repnz
push
mov
out
inc
sbb
push
test
mov
imul
mov
mov
sbb
and
add
push
jecxz
cmps
fcomp
cmps
ror
and
outs
imul
gs
push
in
in
pop
lods
mov
out
add
bnd
cmp
data16
and
mov
ins
enter
push
xor
lods
in
push
jo
or
push
dec
fisub
dec
or
js
add
ss
nop
cld
rcl
cli
sub
repnz
aas
stc
push
push
dec
or
xor
dec
inc
jecxz
cdq
add
mov
and
lds
jmp
popa
mov
(bad)
ror
in
not
xor
out
int3
arpl
push
lock
mov
and
or
ficom
push
adc
movs
inc
dec
jbe
lea
dec
pop
pop
mov
enter
push
out
fist
jg
aad
xor
fucomip
fstp
lds
or
dec
push
dec
cmp
cmp
std
movs
daa
out
fwait
pop
jl
call
sbb
push
(bad)
popf
es
mov
xchg
inc
(bad)
push
repz
pop
rcl
sub
mov
into
pop
out
cmps
xchg
cwde
pushf
mov
in
retf
mov
fnstenv
mov
push
retf
jne
mov
sub
xor
outs
inc
cmp
test
jnp
sbb
mov
mov
sbb
sbb
jp
fsubr
popa
push
imul
shr
rol
ins
mov
out
out
lahf
cmp
shl
ins
out
push
dec
sbb
jbe
iret
test
or
sbb
rcl
mov
mov
adc
into
and
dec
xlat
push
out
mov
fsub
(bad)
and
xor
xor
sbb
or
gs
jae
sub
fidiv
mov
stos
sub
xchg
jg
(bad)
push
jne
add
(bad)
xchg
xor
cmp
sbb
outs
into
sbb
call
stc
out
sahf
je
inc
add
inc
bound
mov
xor
or
rcl
in
ins
and
nop
dec
test
xchg
mov
fisub
xor
mov
cdq
arpl
bound
xchg
call
popa
push
jmp
cmps
pop
(bad)
cmp
aaa
call
(bad)
call
cwde
into
and
push
xlat
bnd
add
and
shl
jl
mov
add
icebp
mov
in
daa
xchg
xchg
sbb
or
fs
test
(bad)
scas
jmp
mov
scas
test
cwde
imul
clc
adc
bound
xor
fimul
inc
xor
pop
jp
cld
retf
cmp
mov
push
mov
popf
inc
xchg
sbb
outs
gs
cmp
stc
in
adc
sub
mov
sub
or
fs
lods
inc
popa
cmp
neg
(bad)
mov
addr16
and
dec
mov
pop
mov
adc
push
adc
add
test
fisttp
movs
sub
mov
push
pop
test
call
mov
sar
int
(bad)
mov
mov
or
ror
sub
xchg
es
mov
xor
mov
push
ror
cmps
inc
pop
and
nop
mov
pop
inc
or
pop
sbb
fwait
test
jno
xor
std
sbb
in
icebp
adc
pop
cmc
adc
mov
movs
mov
push
push
imul
sub
dec
loopne
mov
push
and
out
adc
mov
sbb
push
xchg
xchg
lock
daa
sbb
(bad)
sar
out
sbb
loope
popf
(bad)
sbb
outs
lahf
and
adc
push
sub
loopne
std
je
call
sub
add
pop
cmp
add
pop
mov
mov
push
sbb
lea
ins
cs
mov
popa
push
fisttp
fisttp
and
and
push
mov
pop
mov
loopne
or
adc
fiadd
mov
sub
cmp
push
xchg
imul
pop
out
mov
jmp
adc
and
test
xor
sub
jne
inc
xchg
pop
and
data16
jle
dec
mov
jo
mov
pop
jb
lock
test
inc
mov
cmc
pop
xchg
jmp
popa
dec
les
enter
push
jl
dec
or
add
icebp
pop
sub
jae
int3
stos
call
imul
push
mov
and
icebp
mov
ror
pop
scas
mov
mov
jle
adc
inc
inc
dec
jne
out
fistp
pop
or
sti
sub
pop
fdiv
call
jge
fmul
loop
push
scas
stos
xchg
mov
fist
lock
and
cmp
movs
mov
retf
(bad)
sar
mov
mov
dec
inc
sub
xlat
dec
inc
mov
pop
mov
bound
fwait
nop
sub
jg
js
data16
pushf
scas
stc
jbe
add
psubd
mov
xor
jg
or
pop
sbb
pop
inc
sub
xchg
fild
test
xor
loopne
sub
fwait
cdq
imul
hlt
cmps
dec
mov
jo
rol
jns
sbb
fild
js
aas
js
inc
adc
(bad)
jmp
repz
dec
fidivr
push
xor
into
mov
mov
nop
cmps
lock
shl
out
in
or
call
ret
sbb
repz
test
nop
push
mov
adc
inc
lahf
lahf
inc
cmps
das
cmp
cmp
lods
fstp
mov
cli
shr
fwait
mov
and
test
push
mov
jmp
aas
add
pop
mov
(bad)
sahf
ret
mov
cmp
pushf
or
adc
jl
lea
popf
ret
out
add
outs
jecxz
xchg
cmp
(bad)
std
and
xchg
loop
adc
enter
iret
dec
jb
ss
mov
ja
push
lahf
out
setp
adc
mov
mul
cld
(bad)
sub
xor
cmp
push
dec
stc
stos
stos
pop
(bad)
mov
mov
jmp
cmp
jmp
and
lods
aaa
(bad)
inc
fmul
imul
(bad)
jo
fist
xchg
or
out
cmp
mov
sbb
cmc
fdivp
mov
mov
inc
cmp
sub
and
or
sub
test
pop
push
pop
push
int
(bad)
int3
(bad)
dec
push
xchg
jae
or
lahf
in
stos
mov
cmp
lods
and
push
or
or
movs
xchg
jg
mov
xor
mov
add
bound
loopne
iret
dec
push
enter
inc
sub
das
dec
cmps
dec
mov
xlat
or
pop
push
jno
mov
mov
sub
fwait
pusha
out
cmp
jmp
mov
(bad)
pop
retf
push
(bad)
hlt
mov
repnz
push
and
push
adc
xor
push
leave
pop
fsub
call
mov
loop
fcomi
dec
jns
in
cmp
movs
shl
hlt
or
cwde
push
xchg
jo
addr16
leave
xor
mov
fucomp
bound
push
jecxz
mov
stos
call
cmp
push
imul
sbb
push
xchg
pop
ins
jno
jmp
out
mov
jb
or
dec
ret
push
call
cmps
and
sub
aam
ins
(bad)
fdiv
pop
mov
sub
scas
cmps
imul
popa
fs
add
adc
mov
repz
fcmovnb
inc
test
pandn
test
loop
fsub
pop
push
(bad)
pop
pop
les
jae
loope
neg
in
jp
push
mov
cmp
mov
sub
movs
xlat
mov
xchg
(bad)
shr
sub
ret
fsubr
add
pop
fwait
cmps
imul
mov
jns
jbe
mov
cmps
ss
and
dec
cmc
fisubr
xlat
lds
push
xchg
movs
mov
add
or
mov
ja
es
popf
rcr
xchg
je
mov
pop
sub
push
sbb
pop
cmp
repnz
sub
sahf
push
call
sbb
arpl
push
pop
in
adc
add
jmp
aas
mov
lahf
fs
in
adc
imul
xor
sti
adc
pop
ds
loop
adc
pop
inc
mov
scas
jmp
fidivr
inc
sbb
nop
jge
test
cmp
mov
push
pop
push
sub
sahf
push
(bad)
stc
outs
int3
adc
jbe
jmp
pop
inc
shl
mov
popf
sub
in
or
repz
dec
out
push
mov
dec
xchg
sahf
xchg
js
mov
pop
push
mov
dec
out
xchg
ret
int
arpl
retf
xor
ror
(bad)
push
cmp
out
out
xor
shr
mov
inc
push
clc
and
jg
add
push
push
jns
mov
cmp
push
nop
jle
repnz
int3
repz
stos
or
sub
dec
pop
mov
pushf
inc
icebp
xor
add
xchg
icebp
test
push
jge
jne
stos
clc
test
stos
fs
mov
xor
retf
dec
push
mov
outs
jmp
lods
push
addr16
xchg
lods
xor
mov
cmp
pop
fild
adc
lods
cdq
adc
xor
mov
test
push
push
sub
dec
and
dec
cmps
and
lods
in
nop
dec
out
lods
cmp
pushf
pop
jp
mov
dec
mov
fst
mov
iret
mov
mov
sbb
cmps
add
out
inc
pop
or
or
adc
mov
xor
adc
cmps
xchg
and
lock
sbb
cmp
pushf
push
pop
mov
int
sbb
(bad)
jne
push
pop
push
out
dec
lods
(bad)
mov
jnp
add
dec
(bad)
psrad
(bad)
mul
std
xor
or
push
mov
lea
rol
mov
clc
js
mov
lea
inc
mov
and
add
pop
fs
add
iret
mov
dec
loop
fsubr
test
lea
(bad)
je
pop
push
iret
push
jbe
stos
ret
outs
sbb
xchg
cmp
call
lods
repz
xchg
loope
aaa
stc
xlat
pop
imul
jmp
jno
jo
ss
jg
fimul
mov
repz
lods
lahf
std
push
cmps
cmp
jo
or
jns
push
mov
loopne
mov
stos
mov
pushf
fadd
jae
add
push
das
xchg
stc
shl
add
xchg
mov
add
adc
retf
pushf
cmp
sub
out
push
pop
sub
mov
inc
cdq
jge
shl
mov
test
xchg
sub
fcom
jmp
ds
xor
inc
ret
sub
lock
xor
sbb
add
lds
or
xor
pop
into
and
push
mov
dec
or
in
bsf
leave
dec
sbb
sub
pop
rcr
fld
push
outs
inc
nop
dec
mov
cmp
rol
mov
inc
pop
add
pushf
fiadd
test
in
jo
test
mov
mov
cmp
mov
jecxz
fwait
mov
cmps
cld
cwde
dec
loope
jp
inc
or
dec
push
mov
imul
sbb
sub
les
je
push
mov
xor
lock
dec
dec
cmp
add
or
add
xchg
gs
(bad)
dec
sbb
je
sbb
jae
cmps
out
mov
sar
fisttp
fbstp
lahf
sti
mov
xor
scas
or
mov
mov
rcr
xchg
push
sub
xor
shl
and
mov
lods
jl
mov
(bad)
cmp
pop
cmp
imul
inc
jle
repnz
ret
mov
mov
sub
retf
cmp
inc
sbb
les
add
in
imul
ror
ss
inc
imul
lock
(bad)
cmp
nop
mov
sub
loope
and
jo
dec
icebp
and
cld
or
int3
and
jno
mov
sbb
iret
fstp
scas
das
stos
inc
aas
out
inc
xchg
mov
push
fistp
dec
cmps
ja
inc
arpl
dec
mov
and
mov
push
mov
(bad)
fnstcw
dec
sar
xor
cmp
ja
mov
dec
scas
fadd
out
test
or
mov
iret
out
cmp
xchg
fwait
cmp
xchg
jl
js
js
cmps
popa
enter
dec
jo
shl
sub
addr16
cmp
sub
test
pusha
push
test
push
iret
loopne
(bad)
or
loope
outs
push
repnz
dec
je
aaa
inc
or
add
pop
fsub
ins
mov
out
mov
jp
je
cld
cmc
add
(bad)
xchg
loop
mov
mov
gs
(bad)
pop
enter
cmp
(bad)
mov
std
sub
sub
jecxz
jecxz
mov
push
and
stos
inc
xor
pop
imul
mov
add
inc
out
sub
lea
jge
pop
mov
call
int
adc
sbb
push
into
sbb
lea
pop
into
fstp
out
ss
mov
inc
pop
mov
shr
push
and
cmp
iret
int3
dec
(bad)
das
aaa
push
test
push
sbb
jl
push
bound
mov
scas
pop
dec
jmp
xor
data16
push
push
sbb
pushf
(bad)
cld
pop
fimul
jmp
fs
ja
pushf
push
imul
inc
sub
fadd
iret
std
mov
push
mov
jmp
ins
adc
in
mov
mov
sub
and
test
loop
pop
push
loopne
jo
hlt
xchg
outs
cmps
addr16
(bad)
cli
loope
push
jp
lods
sti
pusha
ins
iret
dec
je
jo
sub
addr16
pop
jb
fcmovb
std
push
and
repz
jecxz
mov
in
sub
das
mov
sbb
ficom
movs
call
sti
mov
inc
inc
fcom
and
ffree
inc
fisub
adc
jae
stos
jg
xchg
pusha
mov
ds
mov
sti
dec
movs
inc
pop
clc
xchg
xor
dec
xor
xor
xchg
retf
jb
push
jmp
xor
push
jle
mov
push
fdivr
int3
imul
add
imul
pop
mov
mov
or
lods
(bad)
(bad)
push
or
or
jecxz
pusha
outs
inc
enter
aam
daa
das
or
sbb
loopne
pop
xor
das
out
jp
(bad)
or
iret
jmp
stc
es
test
stos
mov
mov
fisttp
repz
pop
push
sbb
inc
add
or
mov
sbb
pop
adc
les
int
std
xchg
inc
push
in
repnz
idiv
outs
cs
adc
cmps
mov
das
fadd
mov
lds
arpl
test
mov
cmps
sti
es
inc
jne
and
out
xchg
bound
iret
or
mov
jecxz
and
fsubr
add
pop
jae
push
fnstsw
push
int3
xor
rol
icebp
push
out
into
cdq
xor
add
ret
mov
mov
mov
pop
mov
int
test
push
cmps
sbb
test
dec
sub
es
adc
fisttp
sbb
cli
cli
out
xor
loopne
add
inc
(bad)
sbb
ss
xchg
ret
ins
dec
sub
push
call
add
outs
cmp
xor
inc
adc
push
les
push
adc
add
dec
cmp
push
pushf
popa
jbe
cmp
mov
(bad)
add
lock
and
sahf
xor
loop
shl
inc
stos
jbe
jecxz
cmp
xor
retf
enter
add
push
xchg
rol
push
lods
iret
cmp
sti
add
adc
scas
mov
mov
cdq
es
ins
into
mov
jb
xchg
pushf
push
fcmove
mov
cmc
sbb
sbb
(bad)
fadd
sbb
neg
dec
call
aaa
ret
das
(bad)
out
and
mov
pusha
adc
nop
and
xchg
ret
mov
es
inc
movs
fstp
scas
scas
xchg
(bad)
and
or
inc
and
aam
pop
xchg
rcr
imul
jmp
ss
test
call
inc
cdq
xor
jl
(bad)
(bad)
dec
popf
inc
popa
out
pop
clc
repnz
jg
ss
loopne
jae
test
rep
cmp
in
(bad)
or
retf
std
das
outs
cmp
imul
xchg
ret
cli
jmp
jo
shl
and
xor
mov
fld
or
ret
xchg
cs
(bad)
xchg
mov
jae
mov
sub
or
enter
xchg
push
cmp
jmp
in
mov
xor
sbb
xchg
fwait
mov
fcmovne
ds
mov
push
es
addr16
fild
outs
dec
pop
iret
dec
mov
dec
or
push
jbe
lods
rcr
mov
in
gs
or
mov
jns
jo
push
ror
ins
sub
mov
icebp
fadd
sti
fidiv
mov
js
xor
sbb
hlt
les
dec
mov
sub
and
or
inc
push
sub
iret
out
xchg
mov
pop
push
ss
rcr
es
jb
mov
add
icebp
jnp
dec
sbb
pushf
push
lods
pop
test
mov
rol
cmps
leave
xchg
aaa
rcr
mov
xchg
sub
(bad)
xchg
add
sbb
adc
ins
fimul
test
jne
mov
xchg
xchg
dec
jl
push
xor
retf
mov
adc
sbb
cmp
jmp
mov
mov
bound
adc
inc
push
mov
stos
fisttp
es
pop
xor
sub
stos
imul
mov
dec
and
sar
jnp
std
lahf
clc
scas
(bad)
arpl
jecxz
ins
mov
cmp
and
outs
test
adc
dec
xor
dec
push
shl
cld
jg
jmp
jno
jge
mov
jmp
and
pop
mov
inc
aaa
imul
mov
jb
js
push
jmp
add
inc
dec
mov
push
and
test
dec
ficom
mov
fld
cmps
in
inc
lock
mov
jns
inc
or
push
pop
sahf
mov
scas
sub
and
pop
std
lock
or
cmp
xor
xchg
imul
xor
xor
xchg
(bad)
mov
add
test
repz
js
ja
dec
xlat
addr16
pop
jecxz
xchg
aaa
sub
inc
cli
call
sbb
(bad)
mov
mov
sub
mov
push
inc
popa
mov
scas
out
loop
push
push
scas
or
pushf
mov
ins
cli
mov
pop
(bad)
ss
outs
ins
mov
bswap
lahf
cdq
dec
stos
mov
sbb
adc
mov
hlt
in
js
enter
(bad)
xchg
or
enter
add
je
int3
jecxz
mov
jmp
jb
cmp
enter
jmp
or
aas
inc
cli
stos
inc
cmp
out
clc
test
or
ret
jbe
and
pop
sbb
cmp
cmp
mov
mov
push
sbb
mov
movs
stos
mov
cmp
(bad)
mov
mov
jmp
pop
lahf
xchg
xor
jmp
adc
int
xchg
dec
retf
dec
test
and
fadd
das
sbb
cmps
xlat
enter
ins
cmp
fisttp
pop
(bad)
aas
fiadd
les
enter
jp
rcr
mov
xlat
or
mov
mov
mov
loopne
xchg
in
aas
and
fsub
xlat
inc
mov
pop
les
mov
lods
sub
enter
inc
mov
outs
int3
cmps
push
sbb
push
push
push
mov
out
jb
imul
(bad)
adc
pusha
imul
imul
leave
xchg
movs
repz
movs
cli
lods
sti
les
dec
aam
test
(bad)
add
add
stos
aaa
xchg
xor
hlt
mov
sub
test
xor
movs
mov
ret
fnsave
xor
bsr
inc
arpl
mov
or
cmps
xchg
sub
adc
add
lock
sbb
sbb
jne
sub
sti
pop
div
mov
xor
cmp
inc
das
pop
or
stc
cs
nop
dec
adc
out
add
jle
shl
stc
addr16
dec
push
and
iret
mov
mov
mov
mov
pop
and
jmp
fldenv
rol
leave
rol
sub
arpl
push
jo
mov
outs
(bad)
push
push
fild
out
sbb
add
mov
scas
lds
or
aad
in
out
push
mov
push
mov
push
neg
cmp
mov
(bad)
push
mov
xor
ret
sar
cmp
sub
(bad)
lods
xor
push
arpl
scas
sub
ins
and
sub
mov
mov
ret
push
fst
push
sub
pop
mov
mov
ret
hlt
in
and
cmp
stos
adc
loope
fsub
cmp
leave
es
stos
inc
pop
ja
shl
(bad)
cdq
adc
adc
mov
or
mov
xor
pop
jae
rcr
(bad)
add
sti
xor
xchg
jmp
mov
fdiv
mov
nop
mov
shr
xchg
push
jp
or
outs
add
movs
int3
cmps
adc
xlat
push
mov
test
pop
cli
sub
(bad)
retf
mov
dec
cli
shl
cmp
jecxz
sub
sub
aas
dec
pop
call
or
out
pop
dec
mov
jle
(bad)
in
stc
std
ins
inc
leave
and
xchg
lods
out
xor
sbb
imul
mov
xchg
sbb
dec
add
jecxz
pop
push
mov
loopne
movs
pop
test
pop
mov
mov
pop
mov
in
call
lahf
pushf
movs
imul
mov
xchg
cmp
pop
addr16
xor
mov
jmp
fiadd
shl
(bad)
retf
cmp
loop
mov
std
into
mov
imul
hlt
rol
jae
jb
fdivr
push
and
add
in
dec
test
out
(bad)
shr
jl
call
mov
cs
pop
aas
movs
xchg
push
pop
sti
mov
shl
jg
adc
push
cmp
mov
or
cmp
mov
pop
adc
jmp
pop
jmp
pop
mov
daa
jg
sbb
sbb
repnz
cmp
pop
out
mov
pop
xor
or
retf
and
xlat
arpl
adc
aaa
xchg
sbb
adc
pop
and
adc
jmp
rol
aas
test
stos
jmp
or
lock
push
ins
xchg
mov
ret
push
popf
or
mov
inc
loopne
repz
sbb
sbb
stos
or
les
mov
sub
cmps
sub
inc
mov
mov
dec
sub
xor
das
ret
bound
add
(bad)
loope
leave
fs
mov
xchg
pop
mov
jne
iret
dec
add
ja
loope
pop
out
sbb
out
mov
scas
mov
jmp
jbe
xchg
xor
mov
mov
mov
out
pop
cld
aas
pop
mov
test
les
cmp
pop
neg
cdq
mov
mov
ds
adc
cwde
enter
xchg
daa
inc
out
xchg
addr16
ins
dec
enter
jl
xchg
cli
pushf
outs
add
xor
stc
and
mov
dec
out
scas
or
cld
call
div
ins
loope
cmc
cs
ret
jb
jl
add
mov
dec
cmp
cld
xchg
push
sbb
out
push
std
mov
(bad)
arpl
push
mov
inc
in
pop
ja
mov
jle
fidiv
sub
xor
push
sub
jnp
jns
mov
ins
clc
mov
cli
es
mov
ds
leave
xchg
push
mov
cmp
adc
(bad)
jne
mul
dec
xchg
sbb
jl
pusha
js
mov
cli
pop
mov
pusha
or
mov
xor
fcomp
repnz
jle
ror
mov
or
xor
fs
(bad)
fdivp
inc
or
fs
lods
dec
mov
mov
xchg
push
add
sbb
dec
or
sbb
mov
dec
arpl
sub
push
or
sub
ficom
ret
and
add
inc
shl
lock
dec
jb
adc
mov
mov
jb
ror
xchg
shl
and
xlat
pop
or
push
push
and
mov
mov
mov
or
cmp
adc
lahf
cmps
fwait
enter
retf
shl
ds
ds
mov
mov
sub
inc
push
arpl
or
dec
jo
mov
cmp
xchg
cmp
pop
imul
je
adc
shr
gs
fdivr
add
test
add
adc
out
pusha
sbb
repnz
or
pop
out
retf
xlat
repz
sub
add
inc
(bad)
shl
bt
repnz
xchg
xor
push
repz
jns
imul
cmc
mov
scas
pop
lock
pop
add
fcmovb
jle
push
push
test
pop
mov
mov
sub
retf
cdq
xor
jno
int
adc
jl
sbb
inc
popf
add
out
jecxz
(bad)
hlt
lds
jl
mov
jp
cmp
fcmovu
mov
jns
inc
jae
xor
lods
pop
aam
pop
aad
cmp
add
or
sbb
xchg
popf
mov
stos
(bad)
dec
fstp
mov
or
(bad)
cwde
in
(bad)
sub
outs
cmp
ds
add
call
sbb
or
cmp
in
sub
rol
nop
xchg
or
mov
pop
mov
adc
test
and
sub
cmp
xlat
fcmovu
push
stos
mov
test
pop
sbb
out
cdq
cmp
pushf
cli
cmp
(bad)
and
mov
sub
lea
adc
xchg
rcl
or
scas
sbb
mov
sbb
add
das
inc
push
test
xchg
out
retf
xchg
xor
xor
pop
stos
pop
sbb
add
mov
or
adc
add
aaa
mov
pop
sar
fnstsw
inc
in
jecxz
fmul
mov
pop
jnp
fcmovu
push
aam
mov
pop
inc
adc
dec
dec
and
dec
pop
pop
ins
(bad)
jb
pop
(bad)
jns
js
ficom
jl
sub
aaa
je
push
add
jecxz
push
push
mov
and
xor
jo
lods
xor
aaa
imul
fadd
ins
pop
mov
fnstenv
cwde
cmp
dec
sub
test
shl
and
and
lods
cmps
idiv
and
mov
bound
int3
sbb
shr
push
nop
outs
push
sub
dec
jg
jne
or
pop
sub
pop
ja
sbb
cwde
xchg
xor
fprem
xor
mov
fwait
push
(bad)
jns
jns
mov
mov
and
out
adc
fst
and
fs
in
repnz
adc
stos
xchg
out
data16
add
stc
add
scas
rol
dec
loopne
sub
mov
out
add
cmp
jns
cdq
ficom
test
loope
div
imul
inc
xchg
rcr
ds
or
rcr
ds
and
mov
and
mov
dec
jns
push
cld
adc
mov
inc
stc
popa
inc
dec
dec
(bad)
out
pop
adc
or
sub
rol
gs
and
test
pop
pop
loopne
inc
add
dec
xchg
or
(bad)
sub
js
xor
sub
jnp
xchg
nop
dec
jmp
jecxz
cs
mov
mov
jbe
inc
or
aad
(bad)
mov
(bad)
or
call
lods
scas
adc
xor
jecxz
fwait
or
das
push
push
inc
push
add
inc
retf
icebp
add
and
(bad)
mov
rol
add
mov
mov
shl
xchg
bound
fnstenv
fistp
popf
dec
ss
mov
add
and
jae
sbb
ja
arpl
pop
push
int3
mov
inc
std
sbb
push
push
das
call
push
arpl
adc
das
jle
cmp
ins
jp
test
fs
cmps
gs
push
push
xchg
pop
fsubr
push
cmc
xor
es
jns
cld
scas
ret
xchg
cmc
xor
cmps
push
pop
fisttp
sub
cmp
cli
jle
jns
data16
pop
lock
jecxz
sbb
adc
ins
jecxz
jl
int
cld
push
inc
push
jmp
cwde
mov
popf
sub
imul
or
sub
pop
or
or
mov
into
loopne
jnp
dec
mov
outs
push
mov
ds
inc
bound
mov
cmp
pop
repz
int
push
into
mov
pop
xor
push
sbb
pop
cdq
adc
sar
xchg
adc
inc
ficomp
cmp
xor
gs
ss
push
in
or
mov
movs
or
xchg
cwde
mov
enter
retf
inc
sub
mov
fwait
adc
mov
ret
sbb
xor
enter
pop
repnz
ins
aam
and
rol
icebp
mov
jp
fadd
(bad)
lods
imul
addr16
(bad)
scas
xor
test
push
inc
int
gs
add
jg
cmp
enter
aam
mov
vmovmskps
mov
cmps
daa
je
or
and
xchg
rol
and
mov
push
jmp
jp
mov
cmps
inc
xor
push
stos
adc
mov
mov
lahf
adc
(bad)
mov
xchg
(bad)
repnz
aaa
or
ret
pop
cld
mov
out
sbb
test
stc
inc
push
aaa
pop
xchg
pusha
xor
pushf
out
or
pop
xor
gs
test
ret
inc
inc
xchg
sbb
inc
xor
int
inc
mov
and
lea
push
xor
add
and
push
mov
jecxz
es
into
repz
xchg
movs
shl
sub
in
xchg
mov
shl
mov
sub
shl
jae
lahf
sbb
imul
test
dec
retf
call
cmp
pop
je
push
dec
xchg
std
imul
inc
stos
dec
xchg
mov
imul
xchg
mov
push
and
(bad)
imul
loope
out
cmp
xchg
adc
pop
pop
and
cmps
mov
push
pusha
je
pop
mov
cmp
rcl
adc
stc
adc
ins
xchg
fsincos
jno
lds
loopne
nop
and
xlat
push
fisub
lods
inc
sub
dec
xor
push
ins
cmp
push
mov
push
inc
outs
cmp
(bad)
stc
popf
and
sub
mov
xchg
adc
daa
movs
js
sahf
xor
fld
jnp
jecxz
lds
leave
mov
mov
imul
dec
arpl
push
xor
std
das
pop
call
adc
sub
sti
adc
add
loopne
movs
mov
pop
xor
and
in
adc
es
pop
push
cmc
mov
and
and
pop
dec
push
mov
mov
jno
add
(bad)
sub
mov
adc
adc
add
xor
sub
dec
sub
movs
sub
sub
or
fld
mov
test
std
movs
pop
aaa
sahf
adc
imul
ins
div
neg
addr16
add
cmp
(bad)
mov
cmp
data16
int
mov
jae
and
movs
ins
(bad)
jecxz
not
adc
das
add
and
jl
lock
sbb
(bad)
and
mov
add
je
fidivr
push
nop
out
sbb
xchg
test
jmp
jno
cmps
jl
pushf
fwait
push
sub
mov
push
mov
cs
mov
cmovs
hlt
jno
ret
mov
pushf
sub
dec
adc
jb
popf
(bad)
cmp
(bad)
push
jmp
push
ficomp
daa
cwde
cld
jge
(bad)
jnp
loope
outs
jg
(bad)
lods
mov
bound
out
outs
and
scas
pusha
loop
popf
test
fnstsw
std
retf
or
scas
imul
outs
sub
fld
jp
std
test
pop
pop
lods
xchg
adc
and
test
add
loop
push
call
out
test
sub
push
test
inc
mov
sbb
xchg
jne
mov
or
inc
(bad)
and
mov
and
sub
or
ins
dec
xor
popa
mov
add
jl
sub
xor
fstp
push
dec
ins
cmp
ret
aad
mov
push
ds
xor
popf
scas
push
and
jae
outs
imul
jnp
pop
mov
aas
mov
pop
pop
add
mov
loop
(bad)
xor
repz
adc
shl
in
addr16
xchg
mov
add
test
jae
outs
mov
jbe
mov
cmp
or
rcr
inc
inc
aam
mov
xchg
popf
scas
fldcw
adc
sbb
popf
ins
aaa
and
xchg
lahf
mov
lods
(bad)
loop
pop
iret
mov
test
inc
pop
mov
gs
outs
int3
add
dec
dec
push
jg
sub
jge
pop
aad
xchg
jnp
in
cmps
add
bound
ds
cmc
and
imul
out
sub
gs
push
stos
fninit
adc
ret
stos
push
sub
(bad)
cmp
dec
ds
cmps
popf
xchg
sbb
or
dec
aaa
push
cwde
pop
lods
aaa
push
ja
lods
in
or
inc
jbe
sub
retf
aam
add
and
and
inc
fnstsw
(bad)
shr
mov
pop
loopne
pop
fmul
mov
js
add
mov
xor
(bad)
xlat
in
loopne
sub
inc
loopne
stos
mov
jo
cmp
jle
stc
(bad)
mov
sub
sbb
fwait
icebp
test
nop
pop
inc
pop
scas
sbb
adc
out
int
xchg
jg
cmps
dec
jmp
jns
mov
cli
out
iret
cwde
inc
rcl
outs
clc
sub
pop
adc
sysret
fist
mov
iret
sbb
pop
sub
adc
adc
push
addr16
cmps
mov
pusha
sbb
fbld
push
mov
cld
mov
sub
addr16
std
xchg
fwait
add
pop
cwde
call
(bad)
or
or
and
lahf
ret
mov
inc
lahf
mov
(bad)
push
enter
and
cmc
pop
inc
leave
inc
add
rcl
jmp
nop
sub
mov
sti
jp
xchg
mov
idiv
int3
adc
push
scas
ret
jns
scas
mov
add
test
cld
push
inc
adc
xchg
psubd
retf
lahf
xchg
cmp
(bad)
aam
and
mov
sub
rol
into
hlt
mov
sbb
push
or
pop
cwde
jecxz
adc
push
mov
jnp
dec
pop
mov
ins
test
addr16
int
int3
xor
push
inc
mov
xor
dec
cmps
adc
mov
fadd
sub
(bad)
hlt
xor
ins
mov
test
add
iret
mov
dec
mov
sbb
fistp
nop
jbe
sub
cdq
and
fimul
pop
or
sub
lods
dec
pop
shr
or
idiv
cmp
push
or
jo
sub
rcl
sbb
sbb
sbb
in
dec
pop
jmp
or
cmps
inc
mov
xchg
mov
sub
je
enter
adc
movs
pop
sbb
or
and
mov
jae
mov
mov
rol
out
push
rol
(bad)
pop
retf
jmp
dec
(bad)
call
leave
or
push
lock
push
repnz
retf
sbb
xor
nop
ret
pop
lods
rcl
(bad)
jmp
adc
mov
test
outs
cmps
xor
mov
sub
lods
pop
and
sub
dec
jmp
daa
pop
inc
xor
retf
ficom
(bad)
push
inc
stos
cmps
mov
les
js
lods
mov
jl
adc
sub
add
add
fistp
fadd
in
fild
and
fwait
stos
xor
inc
dec
mov
sti
(bad)
sar
push
cld
inc
enter
push
xchg
jmp
aaa
xchg
stc
ror
push
adc
iret
repnz
sub
inc
repz
sub
adc
dec
sub
aaa
ret
dec
fldenv
pop
das
jnp
inc
xor
mov
adc
gs
test
(bad)
into
aas
xchg
xchg
retf
mov
out
shl
lods
inc
sub
out
dec
push
push
xchg
push
retf
inc
pop
(bad)
pusha
xor
out
scas
dec
xor
jne
loope
sub
mov
hlt
fneni(8087
cmc
mov
cdq
fadd
xchg
mov
push
xchg
xor
mov
in
pop
xchg
xor
fld
add
xor
cli
sbb
mov
retf
mov
jmp
lock
pop
inc
xchg
nop
xchg
add
sbb
(bad)
imul
jne
xchg
sub
pop
ss
pop
xor
mov
cmp
sub
sbb
pop
adc
sbb
mov
adc
xlat
push
push
sbb
(bad)
xchg
sub
sbb
push
fwait
int
test
frstor
pop
retf
ret
repz
mov
lods
xor
pop
jnp
xchg
inc
mov
push
iret
cmps
xor
sbb
lock
js
sbb
in
pop
inc
(bad)
ins
pop
fistp
(bad)
les
xor
or
popf
pop
jp
push
and
xchg
aas
call
int3
add
add
femms
jg
or
out
fisub
push
in
in
mov
gs
cmp
cmp
xchg
cmp
sti
adc
or
ret
iret
fmulp
enter
and
cmp
adc
pushf
adc
cvtps2pi
cdq
es
pop
rcl
neg
mov
popf
and
ins
lds
mov
ror
call
ins
movs
sub
loop
cli
push
sti
inc
fdivr
xor
(bad)
mov
adc
int
push
dec
inc
add
inc
jne
int3
popa
push
push
mov
mov
inc
js
add
out
jge
jne
out
push
xchg
gs
jmp
lahf
into
xchg
cs
(bad)
ss
inc
aas
lea
sti
add
xor
xchg
adc
fidivr
test
sbb
pop
pop
mov
dec
inc
fnsave
fistp
adc
sbb
loope
xor
jne
pop
clc
fcomp
or
fisttp
lods
pop
pop
vaddps
(bad)
pop
jno
sbb
dec
in
inc
or
and
dec
and
ins
into
test
inc
push
xor
(bad)
lds
xor
pop
js
mov
movs
lods
je
fisubr
dec
adc
movs
sub
shl
call
aam
mov
sub
shl
shl
xchg
jns
sbb
push
jbe
popa
sub
int
fwait
inc
dec
mov
scas
retf
and
xor
in
in
and
inc
xchg
adc
pop
mov
fidiv
in
fld
mov
cs
mov
inc
out
mov
xchg
popa
pop
jmp
mov
hlt
or
scas
loopne
icebp
pop
mov
fidiv
cs
gs
test
fistp
pop
pop
sub
push
cdq
adc
lahf
jmp
cdq
bound
sbb
cmp
inc
ja
sbb
test
mov
mov
ins
mov
push
pop
aaa
sahf
mov
popf
icebp
push
and
test
mov
cwde
inc
and
push
pop
mov
in
jg
push
and
inc
scas
stc
out
imul
xor
jmp
inc
mov
add
mov
inc
mov
jle
fcom
outs
inc
xor
adc
jae
mov
shl
dec
scas
popa
mov
xor
and
sub
pop
inc
push
repnz
fiadd
in
mov
nop
xor
add
mov
in
mov
(bad)
mov
jb
das
out
repz
dec
push
and
jbe
loopne
nop
jnp
clc
xchg
cld
mov
or
push
lock
cli
jno
std
mov
sub
lods
scas
sbb
ret
das
mov
outs
fisttp
mov
pop
aas
mov
daa
and
xchg
xchg
jmp
jle
xchg
push
lea
dec
sbb
loope
or
and
aas
sbb
fidivr
or
daa
(bad)
mov
adc
inc
and
push
fsubr
pushf
lds
pop
mov
ja
xlat
arpl
add
push
ss
nop
and
jns
xor
ror
retf
fwait
popf
sbb
push
push
pop
dec
push
cmp
into
dec
out
fbld
add
dec
cmp
adc
(bad)
out
push
xchg
loop
sub
sbb
xchg
and
jp
dec
icebp
adc
cmp
outs
out
adc
fnstsw
out
xor
mov
jne
sahf
pushw
ficom
add
jmp
div
mov
out
pop
inc
mov
and
mov
mov
or
jns
jno
pop
push
imul
sar
push
cmp
xchg
sbb
adc
push
out
push
inc
fwait
adc
mov
in
std
rep
xlat
ss
pop
pushf
scas
rol
or
in
ins
mov
xchg
test
ss
fucomip
lods
xchg
in
adc
mov
push
cmps
hlt
scas
ins
jp
pop
loopne
retf
mov
mov
adc
mov
mov
and
ficom
sbb
(bad)
dec
fdivr
mov
mov
out
add
adc
xlat
retf
xor
test
fs
es
cs
jl
push
jg
aas
push
rcr
jne
outs
pop
dec
ret
js
sub
sub
mov
jmp
imul
fnstsw
out
add
pushf
fdivr
xor
jp
pop
mov
xor
mov
aad
push
cmps
aaa
into
ja
fsub
mov
inc
add
inc
jne
cmp
and
pop
xchg
cmp
icebp
mov
or
jne
fwait
jmp
mov
jp
mov
ins
sub
ins
jg
cdq
dec
jae
sahf
icebp
mov
retf
int3
mov
sahf
aad
jmp
inc
nop
pop
lods
aaa
mov
aad
jne
pushf
mul
mov
sub
adc
xchg
add
mov
push
add
dec
dec
jo
in
jbe
adc
cmps
ds
std
xchg
jmp
jae
mov
mov
int
icebp
pop
scas
mov
mov
dec
popf
int
mov
push
pop
sbb
mov
ret
jns
pop
sub
out
lods
adc
add
fld
push
(bad)
xor
mov
popa
call
jmp
out
jge
xchg
mov
jge
jo
jp
push
clc
dec
movs
fstp
shl
add
iret
mov
ror
lea
aam
adc
push
in
push
cwde
cmp
pop
bound
sahf
mov
xor
in
adc
mov
dec
loope
xchg
jne
imul
jl
fcomp
rcr
cmp
aam
mov
pop
push
xchg
ins
and
dec
jl
dec
sbb
push
adc
cwde
dec
mov
sahf
and
push
shr
pop
fwait
xor
test
sbb
loope
imul
sub
inc
test
scas
mov
push
jno
test
lods
cmp
mov
sbb
mov
mov
push
xor
ins
loope
pushf
call
dec
cmps
cmp
(bad)
cwde
mov
popf
inc
add
jge
imul
mov
fld
xor
jns
xchg
jle
repz
pusha
lock
jg
pop
shl
jge
stos
mov
mov
add
jle
adc
cmp
mov
or
fcomp
mov
aam
adc
cdq
mov
sbb
lock
xor
push
pop
mov
cmps
(bad)
cmp
dec
unpckhps
shl
xor
xor
je
sti
mov
mov
add
paddb
fadd
jo
push
sbb
or
pop
push
scas
dec
bound
lods
out
add
mov
scas
scas
xchg
scas
jmp
inc
xor
int
mov
scas
das
hlt
pop
dec
adc
repnz
pop
arpl
push
mov
das
xor
es
xor
and
pop
fwait
mov
(bad)
lods
cmc
test
test
fdivr
dec
dec
pop
in
dec
lahf
sti
jnp
push
sbb
pop
js
nop
cmp
outs
push
mov
pop
in
je
in
jg
jae
in
jg
pop
cli
xor
(bad)
cwde
ins
mov
das
or
lock
jno
xchg
add
scas
pushf
lea
pop
push
popa
scas
lea
and
sar
pop
aad
push
imul
jae
out
mov
add
xor
jnp
scas
into
loopne
out
fldenv
dec
ja
xchg
or
cmp
xchg
sar
fisub
mov
pop
je
mov
stos
jecxz
aaa
xor
dec
dec
scas
ja
add
mov
dec
fwait
icebp
mov
(bad)
outs
xchg
mov
or
sub
and
in
fwait
(bad)
aam
shl
scas
xchg
add
ins
ss
xchg
out
imul
mov
mov
xor
retf
lods
mov
jae
mov
xchg
mov
mov
stos
les
and
adc
xor
cmp
imul
loop
push
cmp
aaa
lea
in
and
out
int3
xlat
les
popa
cli
cmc
sub
movs
ficomp
mov
out
bound
xchg
jge
push
les
(bad)
and
mov
xchg
mov
dec
mov
pop
out
push
or
test
sti
inc
pop
loopne
adc
test
dec
jno
push
arpl
das
test
inc
(bad)
jmp
push
cmp
aas
push
in
test
sar
ins
push
push
jg
pop
xlat
jb
or
out
xor
out
(bad)
arpl
xlat
leave
fimul
jmp
daa
in
mov
fwait
inc
push
mov
jge
jmp
aam
jbe
fld
jae
inc
dec
icebp
outs
cmp
jecxz
or
mov
cmp
out
retf
scas
ins
lock
test
push
mov
pop
mov
sub
xchg
mov
scas
xor
into
cmc
pop
sbb
xchg
adc
jne
fs
mov
pop
dec
mov
push
push
into
jl
sub
daa
call
scas
pop
shl
mov
fwait
ins
bound
test
sbb
inc
repnz
fnstcw
fwait
into
in
out
xor
int3
aad
mov
lds
push
lods
add
add
jno
jp
inc
repnz
hlt
test
fcomp
inc
adc
repnz
xchg
lea
jbe
(bad)
sbb
push
dec
push
inc
or
dec
daa
or
jnp
out
dec
adc
push
cs
aas
test
scas
jmp
iret
inc
and
sbb
jmp
shr
xor
inc
jle
fldcw
fisub
lock
ss
add
cmp
ins
call
pop
mov
inc
sbb
aas
hlt
sub
mul
retf
xor
xor
stc
add
sub
scas
sbb
add
stos
inc
cwde
fild
cmp
and
test
popa
xlat
test
pop
inc
pop
ds
retf
out
cmp
out
es
and
int3
ins
mov
out
aas
sub
ins
push
push
sti
cmp
imul
cmp
retf
enter
jmp
or
add
pop
fisub
jnp
pop
push
daa
or
jae
test
adc
push
mov
fidiv
xor
ins
test
(bad)
sbb
scas
ins
movs
shl
enter
jnp
push
xchg
scas
xor
inc
mov
arpl
jmp
pop
mov
xchg
cmp
add
inc
cld
jae
adc
pop
jns
in
ret
cld
pop
(bad)
aas
test
lods
sub
(bad)
retf
out
xchg
mov
cmp
retf
fldl2t
(bad)
mov
pop
add
daa
(bad)
shr
cli
cs
pop
mov
ins
call
test
jge
lds
call
test
rol
xchg
adc
out
pop
out
mov
and
dec
or
sbb
pop
mov
inc
or
pop
jp
mov
cmp
and
test
inc
test
or
inc
addr16
in
mov
jl
mov
in
add
das
loope
cli
jns
ins
and
xchg
shl
mov
mov
shl
jecxz
sbb
pop
cmp
and
sbb
test
jmp
dec
jmp
jb
add
push
out
cs
xor
neg
aad
stos
xor
popf
add
mov
jns
and
lods
inc
aaa
mov
ret
gs
and
sbb
les
outs
add
xor
sbb
ins
xor
in
fimul
mov
mov
loopne
loope
es
pop
xchg
xor
push
dec
sar
loopne
das
imul
pop
int
popa
ins
scas
dec
xchg
xchg
xchg
icebp
(bad)
lock
in
adc
fmul
mov
mov
jbe
or
push
inc
fimul
or
push
or
push
test
add
jge
leave
call
retf
xchg
mov
xor
xchg
mov
ins
in
ss
or
ror
sbb
add
mov
in
inc
call
pusha
mov
add
mov
mov
inc
mul
xor
rcr
xor
test
cdq
sub
rcl
mov
xchg
push
adc
adc
or
popf
retf
cmps
pusha
ror
or
aaa
scas
jae
sbb
fwait
sub
cmp
add
shl
jmp
xchg
sti
out
cmps
pop
sub
call
dec
movs
fwait
hlt
pushf
or
push
popf
xlat
push
into
(bad)
(bad)
xor
mov
jae
jns
movs
stos
les
add
fild
xchg
inc
data16
adc
leave
outs
out
mov
mov
mov
mov
outs
inc
inc
fs
sbb
inc
js
mov
cs
fwait
mov
push
fwait
mov
adc
and
push
aas
rol
es
fwait
push
je
movs
cmc
jl
(bad)
adc
xor
mov
aam
mov
movs
jmp
push
push
xchg
xor
dec
sub
dec
fs
jmp
arpl
retf
mov
mov
in
mov
ins
xor
cdq
loopne
pop
int3
outs
bnd
or
fidiv
test
or
mov
ret
sub
lods
mov
dec
test
test
(bad)
ins
xchg
fcmovu
xchg
mov
add
arpl
nop
push
mov
mov
sub
movs
adc
cmp
in
out
inc
cli
jmp
sbb
mov
stos
cmp
fstp
ror
into
jbe
add
adc
daa
dec
mov
fwait
ins
or
jecxz
adc
rcr
pop
cld
add
add
nop
mov
fldcw
jg
mov
cmp
dec
std
imul
push
xchg
xchg
sub
ret
mov
nop
int3
in
fldenv
mov
xchg
mov
out
(bad)
mov
lods
and
inc
mov
mov
enter
xlat
adc
inc
retf
jmp
sbb
test
add
adc
mov
mov
sub
push
push
jo
jno
sahf
iret
in
fbld
and
pop
dec
in
xchg
inc
cmp
popa
pusha
xchg
mov
test
repz
pop
mov
xor
pop
mov
dec
stc
xchg
out
shl
fistp
(bad)
mov
fidivr
mov
jecxz
aaa
cmp
mov
mov
clc
mov
sahf
adc
sahf
cmps
out
test
stos
or
loopne
mov
xor
nop
xchg
lock
and
xchg
xchg
ret
cli
mov
inc
shl
js
mov
dec
sbb
pop
scas
cld
pop
dec
mov
add
mov
cld
cmp
mov
lahf
and
or
add
call
and
shl
push
xor
fs
pop
in
sub
and
retf
data16
pmaxub
jg
pop
jecxz
push
ret
neg
in
xchg
inc
ins
cmps
push
test
inc
cmp
mov
xchg
scas
dec
xchg
mov
frstor
mov
pushf
in
push
mov
loop
and
cmp
out
pop
inc
out
imul
mul
clc
or
ja
call
add
jmp
jne
jg
lods
(bad)
jmp
data16
dec
cmp
lds
(bad)
jo
mov
sbb
push
push
and
inc
repz
(bad)
push
xchg
mov
mov
inc
sbb
fimul
es
iret
lahf
pop
lahf
mov
retf
jo
push
sub
add
ja
(bad)
aaa
(bad)
pop
inc
or
mov
(bad)
mov
xchg
jnp
lock
fidivr
and
xchg
rcl
dec
mov
adc
arpl
cmp
loope
adc
sbb
xlat
adc
xchg
sbb
(bad)
addr16
and
in
ins
push
(bad)
jecxz
xchg
jle
icebp
sti
into
in
fsubr
cdq
(bad)
adc
retf
push
dec
shl
or
arpl
addr16
add
xor
xchg
daa
mov
or
jp
les
retf
test
jmp
lock
jo
sar
das
push
push
adc
push
mov
adc
mov
mov
imul
mov
lods
scas
aam
jecxz
adc
inc
fwait
mov
sub
jp
jp
adc
jge
or
xor
inc
daa
in
or
dec
mov
out
sbb
pop
int3
cmp
mov
loop
and
retf
and
repz
push
das
nop
pop
popf
xlat
add
in
imul
pop
sub
dec
fild
test
cld
fiadd
rcr
adc
leave
nop
cli
sub
lods
adc
aas
test
sub
bound
dec
outs
push
and
sub
jl
push
dec
adc
jb
fimul
scas
mov
push
mov
jmp
js
lods
call
sub
mov
int3
or
lods
cld
imul
push
data16
hlt
add
or
popf
push
sahf
jb
push
arpl
xchg
mov
inc
mov
fdivr
push
dec
dec
jmp
xor
scas
stc
xor
popa
mov
sbb
xor
pop
icebp
push
xor
out
add
dec
leave
and
pop
jl
inc
sbb
test
rol
mov
xlat
call
push
ret
adc
test
movs
cmps
xchg
pop
inc
push
imul
xchg
xor
popa
movs
inc
icebp
dec
sbb
xchg
pop
int3
ds
in
jmp
push
pop
or
mov
xor
clc
xchg
or
mov
mov
adc
stos
xchg
out
outs
fwait
mov
adc
call
adc
movs
loope
mov
cmp
popa
lock
push
icebp
mov
and
inc
push
shr
cmp
dec
mov
imul
mov
inc
fcomp
jge
push
sub
dec
or
xchg
sbb
aam
inc
mov
jnp
xor
es
stos
cmp
imul
sub
mov
inc
ror
jge
ret
push
add
and
cmp
pop
xchg
xchg
adc
adc
inc
jle
aaa
jecxz
mov
adc
and
out
mov
call
cmps
cmp
adc
sub
stos
inc
and
addr16
mov
push
fcomp
sub
push
push
push
xchg
or
push
loope
mov
std
mov
ss
shl
mov
inc
inc
dec
out
retf
adc
fmul
nop
dec
std
loopne
push
std
ins
xor
cmove
loope
or
xor
(bad)
arpl
cmp
inc
sub
xlat
jb
imul
sub
push
inc
movs
call
cmc
je
test
xor
les
(bad)
jnp
frstor
adc
inc
xchg
pop
mov
dec
mov
jge
shr
bnd
rcl
mov
retf
jg
loopne
(bad)
push
retf
iret
xor
cli
push
cmp
jno
mov
(bad)
retf
xchg
and
fwait
(bad)
call
push
gs
pop
pop
je
es
enter
popa
adc
int3
sti
lods
int
(bad)
jo
in
sub
xor
in
inc
jne
sti
fcomp
stos
push
mov
and
movs
(bad)
les
mov
jl
loop
push
push
ret
dec
retf
ins
mov
(bad)
loopne
cwde
cmc
adc
out
sub
nop
mov
xchg
and
mov
adc
push
jno
sar
cmp
sub
aad
pushf
mov
scas
adc
mov
mov
pop
xchg
adc
(bad)
push
or
adc
xor
mov
lock
mov
sar
fist
je
adc
cmp
mov
lock
imul
clc
sbb
in
outs
into
outs
jbe
std
cmps
stc
mov
sti
pop
scas
cmc
popa
push
dec
jge
rcl
mov
mov
dec
cmc
(bad)
adc
aaa
add
repz
iret
icebp
pushf
xor
int
movs
sbb
(bad)
pop
dec
or
fcom
leave
fldl2t
push
dec
dec
cmps
jecxz
cli
and
jns
sub
mov
(bad)
jmp
loopne
or
push
arpl
jl
pop
daa
repnz
mov
pinsrw
dec
pop
test
repnz
lahf
mov
xor
cli
push
jecxz
stc
addr16
mov
push
adc
xlat
icebp
loope
add
in
stos
fimul
imul
sbb
test
test
sub
adc
movsx
scas
ret
arpl
mov
rcr
jo
aad
adc
mov
push
ins
lahf
popf
cmp
in
lea
dec
cs
hlt
push
pusha
xor
inc
and
dec
or
sti
mov
and
in
xor
stos
mov
adc
fstp
repnz
fwait
adc
jecxz
jnp
or
lahf
mov
mov
pop
enter
shl
aam
inc
daa
stc
cmp
popa
mov
cs
mov
cmp
sub
mov
lock
mov
idiv
cmp
clc
add
rcl
call
sub
cli
(bad)
adc
jg
push
pop
push
sbb
ret
cld
sub
cmp
pop
out
mov
and
jae
dec
popf
pop
pop
pop
push
jns
jb
scas
test
ret
cmp
mov
sti
shr
call
mov
(bad)
push
cmc
popf
movs
pop
leave
and
push
inc
sbb
xor
call
std
xchg
xor
mov
inc
loope
aaa
adc
aad
jb
mov
hlt
gs
jbe
mov
mov
xchg
sub
pop
int
xor
mov
stos
retf
das
test
xchg
inc
(bad)
jg
mov
outs
mov
pop
jle
mov
and
dec
mov
sar
hlt
and
mov
push
jnp
pop
mov
push
in
out
es
push
mov
dec
push
mov
out
fidivr
(bad)
sbb
cmp
hlt
(bad)
mov
loopne
jge
adc
popa
enter
cmps
jl
inc
mov
cmp
mov
xchg
sbb
es
mov
add
imul
push
arpl
aad
push
outs
out
add
mov
sti
inc
mov
xchg
jne
xor
and
loope
push
(bad)
test
mov
aad
dec
aad
call
or
(bad)
mov
mov
sbb
xchg
jae
and
rol
std
icebp
jmp
sbb
pop
test
daa
inc
inc
or
push
gs
(bad)
jp
inc
sbb
scas
ror
dec
pop
mov
mov
push
das
add
xchg
push
mov
jmp
scas
adc
adc
loop
les
mov
icebp
xor
les
lds
test
jnp
mov
inc
dec
jp
imul
inc
adc
sar
mov
stos
in
sbb
pop
dec
sub
and
pop
sub
aad
repz
hlt
inc
mov
and
movs
enter
sub
pop
cmp
xor
cdq
cmps
and
ss
jno
ret
pop
or
arpl
and
dec
add
imul
stc
or
lds
std
rcl
(bad)
jb
mov
xchg
add
mov
mov
movs
dec
lods
(bad)
in
icebp
push
leave
xchg
jo
mov
push
stos
fs
outs
cmp
imul
mov
inc
pop
arpl
aas
repnz
pop
ins
repnz
cdq
cs
pop
dec
push
aaa
iret
call
xchg
add
adc
fldenv
lock
popa
sbb
pop
aas
idiv
cwde
jp
and
sbb
es
fcom
push
in
jbe
pushf
mov
cld
mov
nop
adc
imul
test
sbb
ins
std
cli
inc
shr
retf
pop
imul
ins
sbb
sbb
or
gs
jmp
jmp
iret
clc
inc
ins
push
popfw
fisub
sbb
jp
jmp
xchg
mov
mov
ret
jb
jo
pop
sbb
pushf
stos
push
xor
ins
pop
mov
test
fwait
sbb
pop
mov
les
iret
cli
pop
sub
mov
shr
jbe
fs
outs
sub
jge
pop
in
test
xchg
or
shr
icebp
out
pop
sbb
les
inc
jge
pop
inc
imul
std
sub
push
int
sbb
in
sbb
dec
call
rcr
and
in
push
cwde
mov
loope
stc
daa
fs
cmc
mov
stos
fwait
lods
adc
push
mov
sub
push
inc
sbb
arpl
push
aaa
xlat
(bad)
mov
and
pop
in
sbb
cdq
jns
fisub
sub
push
mov
(bad)
mov
ins
inc
inc
mov
or
fist
push
xor
stos
add
inc
std
fadd
test
push
daa
pop
(bad)
xor
add
in
cld
dec
xor
in
fabs
ja
iret
cld
mov
sub
jmp
add
dec
repz
out
mov
sub
jnp
fnsave
add
fsubr
push
fist
rcr
leave
out
add
and
(bad)
shr
push
cli
int3
add
or
nop
jle
jns
daa
dec
clc
sbb
sbb
adc
fadd
retf
clc
call
pop
cmp
adc
mov
mov
fcmovbe
add
and
push
sbb
hlt
and
xor
call
xchg
lds
ins
addr16
aas
sub
xchg
or
and
xor
push
fwait
jb
ins
inc
out
stos
cmc
pop
pusha
repnz
mov
mov
inc
inc
pop
push
adc
mov
ret
mov
or
clc
scas
and
icebp
lods
lea
cmp
jne
mov
js
pop
lea
or
rcl
imul
in
cdq
mov
jno
rcr
or
clc
cdq
dec
cmp
mov
sbb
adc
pop
aas
mov
xchg
(bad)
pop
xor
xchg
xor
push
add
cs
sub
stos
jp
sbb
mov
pop
cwde
pusha
mov
pushf
mov
xchg
loopne
mov
push
push
or
jecxz
es
pop
pop
jo
ficom
xchg
xor
cmps
cmc
movs
pop
sbb
ror
fimul
loop
repz
adc
push
push
(bad)
enter
lahf
push
sar
fmulp
(bad)
jmp
and
inc
popa
mov
test
add
and
or
lods
loope
out
mov
mov
fistp
outs
dec
cmps
pop
retf
jno
adc
mov
loopne
or
inc
push
adc
ja
mov
into
ins
in
push
or
add
jns
(bad)
clc
xor
pop
pop
fimul
xchg
fwait
loope
pop
jg
ja
mov
sub
fwait
jecxz
int
dec
cmp
or
mov
(bad)
retf
xchg
pop
sbb
pop
cmp
in
stc
daa
push
mov
outs
and
lods
mov
sub
rol
sub
sbb
jmp
add
jge
inc
adc
mov
add
xchg
sub
out
mov
add
cmp
jg
aaa
push
jmp
std
push
adc
push
int3
stos
jg
pop
lahf
dec
xor
fld
rcr
fnstsw
into
sub
pop
cmp
in
mov
retf
and
cmps
inc
and
inc
jb
ret
mov
imul
mov
ret
loop
xor
rol
dec
push
adc
jbe
sub
dec
sar
rol
(bad)
mov
out
repnz
mov
dec
dec
icebp
repz
fadd
mov
xchg
(bad)
int3
(bad)
mov
mov
adc
iret
xchg
push
push
retf
mov
shr
(bad)
iret
(bad)
dec
pop
or
xor
push
mov
repz
jo
and
mov
mov
aam
shr
adc
out
jne
mov
jecxz
repz
mov
pop
add
or
(bad)
pop
mov
pushf
popf
xor
jne
(bad)
mov
mov
jle
(bad)
mul
mov
add
aaa
clc
mov
(bad)
into
pop
mov
js
jno
ret
in
das
loopne
lods
das
adc
xor
ss
cwde
hlt
or
movs
test
rcl
repnz
mov
sar
mov
out
jp
lock
jne
(bad)
sub
std
imul
push
int
test
jg
mov
ror
or
scas
test
(bad)
mov
in
fs
idiv
pop
sbb
dec
push
std
and
in
pusha
push
mov
add
es
or
add
sbb
stc
cmp
into
jns
sbb
(bad)
gs
sahf
in
push
sbb
adc
push
push
and
(bad)
in
dec
pusha
jne
mov
rcl
cmp
iret
or
cmps
cs
cmps
popa
in
adc
xchg
push
fbstp
stos
movq
sub
test
push
sbb
push
or
mov
imul
les
adc
ds
inc
or
inc
mov
sub
jnp
cmps
test
cmp
aas
mov
adc
and
sub
jp
shl
adc
pop
cmp
pushf
mov
outs
cmps
fdivr
mov
fcomp
arpl
cmp
push
imul
(bad)
sub
push
rcr
inc
adc
les
loop
aad
mov
(bad)
cmps
sbb
xchg
je
cmps
bound
mov
push
push
into
into
mov
loope
dec
sbb
popa
fst
pop
jl
mov
ins
inc
mov
sub
xchg
pushf
xchg
sbb
(bad)
jnp
xchg
inc
xchg
je
mov
ds
pushf
retf
clc
cld
push
daa
xlat
shl
inc
and
loopne
ss
fcomp
std
pop
sti
or
cs
inc
mov
or
adc
out
movs
sahf
dec
or
push
xor
sbb
and
int3
loope
adc
sub
iret
or
out
lock
cmp
pusha
pop
push
dec
dec
sbb
das
mov
mov
data16
test
mov
cmc
dec
sub
call
adc
add
xchg
bound
mov
in
or
stc
sbb
jns
mov
inc
adc
movs
adc
push
add
fs
adc
jmp
push
dec
jb
inc
dec
test
sbb
sub
and
fistp
and
mov
cli
dec
(bad)
sbb
mov
ret
les
aas
aad
push
push
xchg
mov
inc
(bad)
fcmove
inc
inc
sub
mov
pushf
push
push
lock
retf
or
xchg
out
aaa
cmp
jmp
or
inc
sbb
dec
or
sbb
in
popa
pop
in
dec
sahf
retf
(bad)
add
inc
(bad)
jmp
enter
sub
inc
out
pusha
cmps
aad
call
imul
scas
pop
push
pop
stc
or
pop
push
push
sti
dec
or
rcl
jne
loope
imul
stc
sub
(bad)
jne
shl
sub
xor
sbb
sbb
pop
jmp
add
cmc
es
imul
or
mov
dec
retf
das
pop
shl
inc
push
pop
push
xor
push
inc
pop
cwde
scas
and
stos
adc
or
dec
scas
popa
ins
pop
sub
mov
fnstsw
and
mov
push
jbe
gs
xor
mov
pop
int3
sahf
daa
(bad)
mov
loope
jns
rol
sbb
(bad)
pusha
mov
mov
mov
mov
or
into
popf
test
lods
or
mov
les
and
dec
and
dec
sub
mov
xlat
das
cmp
(bad)
jmp
sar
add
sub
push
sub
repnz
mov
cmp
push
sub
add
dec
xor
jecxz
loop
cmps
into
sbb
jo
xchg
sar
sbb
mov
leave
fisttp
or
aaa
adc
push
je
mov
inc
pop
scas
pop
dec
push
(bad)
push
ja
jle
inc
pushf
aaa
pop
mov
retf
jno
(bad)
(bad)
outs
push
push
out
std
aam
jbe
imul
lods
aaa
movs
std
addr16
and
shl
jne
out
dec
inc
scas
xchg
xchg
inc
mov
xchg
mov
add
xor
shr
mov
xor
jecxz
mov
retf
(bad)
fld
ds
adc
pop
xchg
jae
bound
inc
retf
sbb
add
rcr
out
in
shr
mov
add
jne
dec
xchg
aad
jmp
jp
jno
add
mov
push
push
sbb
shr
sbb
pop
mov
ficomp
icebp
fcomp
fadd
dec
push
push
scas
cmp
ds
mov
push
jne
lods
mov
mov
lahf
scas
out
inc
fisub
mov
hlt
cmp
shr
dec
cmp
(bad)
inc
inc
data16
rcl
jl
addr16
inc
sbb
push
shr
test
fistp
aaa
out
(bad)
scas
call
in
push
push
test
adc
inc
rcl
in
les
mov
inc
jo
ds
mov
or
cmp
ret
(bad)
jge
mov
bound
test
je
jnp
mov
pusha
mov
and
xor
push
hlt
(bad)
cmp
mov
in
das
mov
push
push
ins
mov
jo
pushf
mov
jns
cmc
sbb
fstp
jle
mov
in
mov
mul
into
inc
xchg
inc
push
pushf
fild
cs
jns
adc
xor
mov
sub
iret
lds
push
pusha
or
retf
enter
femms
xchg
xchg
jo
xlat
fnstenv
cld
out
push
cmps
daa
cmp
repnz
xchg
ds
mov
jnp
arpl
sbb
jno
mov
in
and
js
jno
repnz
hlt
pop
imul
jnp
ja
xor
add
mov
pusha
clc
xchg
movs
int3
mov
jg
xchg
xchg
stc
in
dec
test
mov
loop
push
cwde
mov
ja
sub
mov
mov
popf
cwde
inc
out
pusha
fs
out
imul
mov
out
mov
jb
xchg
add
hlt
jmp
ret
icebp
arpl
push
cmps
dec
outs
push
arpl
std
and
xor
sbb
shl
in
movs
mov
xchg
xor
mov
cmc
lods
das
rol
scas
mov
cli
in
jnp
repz
cs
mov
repz
jb
in
jbe
push
pop
ror
and
jmp
inc
mov
sub
dec
sahf
or
xor
dec
mov
hlt
mov
mov
pop
xlat
stc
or
xor
pop
jno
add
lea
xchg
jnp
ja
xor
add
sub
xchg
xor
std
add
fld
push
mov
data16
stc
ret
pop
jecxz
sub
add
ficomp
xchg
in
push
cmp
jmp
aas
stc
lods
xchg
mov
sub
dec
add
mov
cli
mov
pop
xor
adc
inc
lods
sbb
mov
pop
fidiv
(bad)
jae
(bad)
gs
out
and
call
imul
push
mov
cmp
adc
push
jne
and
iret
cmp
adc
int
adc
out
test
sub
stos
fst
and
cmp
xor
and
jb
jb
cli
mov
into
ret
push
imul
push
addr16
sub
push
(bad)
not
lahf
aaa
icebp
mov
add
(bad)
jae
xchg
aam
add
arpl
shl
je
mov
push
pushf
xchg
jno
call
jb
rcr
and
xor
stc
fwait
or
movs
into
xchg
jecxz
jp
leave
sub
push
test
loopne
mov
xchg
out
pop
imul
js
aam
pop
inc
fwait
push
cdq
mov
sub
pop
bnd
jo
and
cmps
lea
jp
add
out
in
dec
je
outs
and
jns
mov
mov
scas
add
pop
sar
mov
jnp
mov
mov
cwde
inc
sbb
xchg
dec
push
mov
dec
mov
dec
movs
or
in
repnz
mov
daa
mov
in
sbb
shl
or
jmp
push
cmps
sub
xchg
(bad)
cmps
mov
xor
div
aaa
sti
inc
cmp
or
mov
sub
pop
sub
pop
ret
aas
scas
test
iret
and
outs
ret
(bad)
outs
sub
jmp
mov
(bad)
ins
xchg
mov
inc
mov
(bad)
retf
inc
jbe
or
and
leave
sub
loopne
rcl
jne
test
je
mov
push
das
jp
xchg
mov
push
iret
outs
shr
lods
mov
cmps
add
add
push
dec
mov
jae
ret
(bad)
out
xchg
neg
outs
xchg
push
ror
int
ins
push
xchg
jp
js
cmps
mov
or
jnp
xchg
xor
dec
fcmove
nop
sub
sbb
pop
test
imul
in
jle
adc
ds
pop
nop
call
les
or
mov
je
leave
aas
test
push
mov
and
push
push
movs
sahf
jge
mov
scas
call
sahf
nop
stos
adc
sub
jne
mov
and
shl
rcl
mov
xlat
ins
sbb
or
xor
cmp
int
xchg
sahf
sbb
loop
sub
lods
ret
add
mov
mov
push
mov
aam
je
movs
shr
dec
pop
pop
repnz
push
daa
sub
push
lock
adc
or
pop
imul
popa
shr
out
mov
lock
and
mov
adc
or
arpl
dec
xor
xor
dec
add
cmps
mov
mov
sub
xor
xchg
and
sub
adc
sub
push
loopne
clc
fwait
push
hlt
sti
iret
add
xchg
add
loope
push
shl
into
ret
scas
pop
jns
sbb
mov
in
cmp
inc
pop
cmp
sub
cmp
pop
push
mov
dec
fsub
pop
loopne
push
adc
dec
dec
jbe
movs
test
inc
ja
mov
jne
sub
outs
and
mov
dec
adc
jns
rol
dec
mov
mov
inc
(bad)
xlat
or
scas
out
mov
mov
enter
pusha
jg
inc
pop
int3
es
xchg
cmp
sbb
fwait
sbb
cli
ret
adc
cmp
dec
adc
arpl
mov
fmul
movs
xor
mov
cmp
pop
sbb
dec
aam
or
daa
push
test
jmp
cld
retf
cdq
sar
jmp
je
arpl
jne
inc
push
lahf
arpl
mov
mov
jb
adc
xor
jno
mov
push
push
pop
pop
in
int
out
hlt
cmc
push
bound
sub
dec
out
adc
xchg
inc
mov
pop
dec
add
mov
outs
repz
add
sbb
mov
xchg
ins
cmp
or
push
jmp
ss
sbb
cdq
stos
jge
pop
hlt
xchg
cmc
fcmovu
dec
jge
sbb
cmp
clc
sub
mov
gs
inc
mov
jae
aas
and
ficomp
pop
xor
and
dec
mov
jo
cmp
pop
cmp
sub
loopne
call
movs
jp
jno
add
test
stos
movzx
mov
jg
jbe
ret
xchg
cmp
cwde
popf
inc
repz
test
ficomp
ja
push
and
jae
cli
(bad)
loope
jmp
pop
cmp
sbb
out
cmps
sbb
aaa
repz
cmp
inc
cmps
ficom
int3
jge
adc
adc
dec
sbb
xor
lds
(bad)
xlat
mov
popf
jmp
aad
popf
add
sub
arpl
loopne
xor
jae
into
jmp
jb
push
retf
rcl
out
je
cmp
repnz
cs
pop
sbb
outs
add
push
cmp
arpl
push
xor
sbb
mov
retf
mov
mov
stc
dec
cmc
and
sub
mov
pop
inc
or
push
add
pop
daa
pop
pop
std
lods
repz
cmc
push
adc
mov
adc
ror
cmp
daa
pop
stc
mov
mov
ror
stos
je
xchg
mov
sbb
mov
lds
inc
add
add
fmul
icebp
fstp
inc
pop
dec
inc
mov
mov
test
push
aad
add
(bad)
call
adc
(bad)
in
hlt
je
add
cmp
mov
xor
and
xor
movs
retf
lock
retf
or
jmp
cmp
xchg
push
test
movs
inc
in
sub
jb
and
cmp
stc
cmp
xchg
mov
scas
iret
(bad)
xchg
lods
(bad)
out
mov
adc
iret
in
inc
lock
jg
test
fldcw
mov
sbb
cli
hlt
test
dec
and
xchg
sbb
scas
imul
sti
pop
xor
cmps
sub
ret
adc
inc
sbb
mov
loopne
push
jbe
sar
call
sbb
cmp
dec
xor
arpl
adc
mov
mov
(bad)
dec
fwait
inc
mov
pop
daa
aam
retf
mov
inc
sub
pop
sub
nop
push
fcomp
dec
pop
out
test
dec
pavgb
xor
jo
sub
or
cli
or
jmp
(bad)
and
mov
stc
fdivr
xchg
mov
pop
jbe
or
cld
in
es
add
mov
pop
inc
movs
sahf
cdq
inc
mov
mov
jae
xchg
rcl
cmp
xchg
dec
into
je
ins
shl
cmps
std
icebp
and
inc
push
mov
and
shl
sub
xchg
sbb
movs
fs
not
int
xor
pusha
dec
scas
jecxz
pop
adc
jmp
mov
mov
xor
mov
or
popa
xchg
pop
lods
jge
outs
stos
push
sahf
sub
ins
das
and
cmp
add
ins
xchg
into
jle
or
lahf
fadd
lock
test
fnsave
inc
cwde
jmp
iret
add
mov
push
out
jns
test
test
and
jne
mov
and
lahf
pusha
mov
str
movs
fwait
xchg
cwde
dec
clc
sub
sub
jno
mov
mov
int3
mov
mov
imul
mov
retf
cmc
aam
push
pop
inc
push
pop
outs
lock
and
cmps
xor
push
mov
mov
cmc
test
sar
jl
jnp
mov
ret
xor
pusha
(bad)
pop
fdiv
jmp
inc
popf
repnz
mov
cmc
ret
sbb
sar
fbld
(bad)
retf
jbe
out
push
mov
ins
pushf
popf
adc
into
pop
xchg
pop
ins
popa
mov
stc
mov
xchg
sub
das
cmp
jp
ror
jbe
lods
dec
sub
call
stc
add
push
enter
pop
push
pop
jno
scas
xor
jmp
cmp
sbb
push
lahf
cmp
jge
repnz
sub
fdivr
test
push
mov
das
fadd
pop
cmp
loope
stc
lods
imul
test
aas
mov
push
lds
jp
and
sub
hlt
loope
xor
push
cmp
fcmovu
or
cmp
mov
inc
mov
stc
and
loopne
mov
test
nop
mov
iret
sahf
fwait
daa
xchg
hlt
(bad)
cmps
pop
loopne
push
ss
mov
cld
rcl
(bad)
ror
ja
pusha
test
outs
pop
(bad)
callw
mov
pusha
in
test
jnp
sbb
push
ins
add
fdiv
cs
cmp
bt
je
or
jb
and
clc
push
sbb
fdivr
mov
aas
fcomp
aas
cwde
cdq
pop
cwde
inc
(bad)
sbb
push
mov
int
in
mov
push
or
xor
dec
mov
out
dec
inc
mov
add
sub
sub
(bad)
xor
iret
ret
ret
jmp
pop
lahf
repz
outs
(bad)
popa
ins
out
(bad)
clc
mov
sub
mov
mov
data16
fstp
inc
sbb
xchg
cmps
sub
and
scas
xchg
mov
xchg
aam
aas
ds
mov
pusha
addr16
lods
jle
push
pushf
sar
pop
inc
je
xchg
(bad)
out
stc
jp
in
mov
popf
retf
pop
(bad)
xchg
sub
aam
sub
mul
push
adc
inc
in
mov
xchg
push
and
in
add
jg
mov
mov
imul
retf
in
cmp
rcl
add
xor
push
mov
div
jmp
repnz
sbb
or
out
(bad)
cmp
xchg
and
inc
rcl
xchg
xchg
xor
adc
dec
xlat
lds
repz
fisttp
lea
les
leave
rol
xor
scas
inc
xor
iret
inc
ins
cmp
add
dec
retf
lods
jo
aaa
or
xchg
pop
inc
pop
repnz
or
in
push
xchg
add
push
jl
stos
test
xor
xchg
xor
jl
mov
cdq
jb
je
jg
dec
js
(bad)
mov
xor
(bad)
mov
cmps
mov
and
mov
sar
sub
cwde
mov
leave
lock
and
jg
enter
jg
enter
inc
sbb
cmp
loopne
sub
(bad)
in
ins
repz
aam
repnz
call
hlt
fist
cmp
in
stc
ficomp
push
push
xchg
sbb
mov
and
inc
push
xchg
sub
push
jmp
jmp
inc
shr
sub
mov
push
jle
jmp
aaa
jle
xchg
inc
sbb
inc
in
cs
inc
cmp
test
inc
cmp
inc
ret
add
bound
lock
jnp
rol
test
and
test
movs
add
mov
pop
push
enter
retf
ja
into
sahf
adc
out
dec
out
push
sub
jecxz
mov
add
nop
mov
xor
dec
jae
sub
and
pop
push
into
arpl
sub
and
pop
adc
cmp
gs
out
daa
sub
xor
das
mov
pop
int
dec
jge
loope
mov
retf
xor
ds
clc
retf
push
retf
sub
add
adc
shr
jge
dec
nop
fstp
leave
mov
pop
sub
js
inc
xor
xchg
dec
mov
inc
and
push
and
jo
inc
adc
arpl
jae
rcl
ins
mov
or
inc
inc
mov
js
adc
xchg
movs
jbe
inc
cmp
pop
es
mov
dec
arpl
enter
mov
adc
cmp
xchg
cdq
xchg
cmp
outs
jp
stos
frstor
repz
xchg
and
adc
cmps
out
pop
ja
pop
dec
mov
mov
ret
pop
cli
pop
mov
loopne
pop
imul
inc
pop
in
xor
loop
cmp
int3
push
mov
and
jmp
sub
arpl
cmp
jno
adc
or
dec
lods
cmps
imul
das
cmp
pusha
push
jmp
mov
xor
jbe
scas
inc
push
(bad)
jecxz
cmps
in
ja
inc
iret
sub
xchg
daa
enter
mov
mov
fs
pushf
lods
movs
or
shl
mov
fs
movs
and
add
dec
mov
dec
sahf
mov
xchg
test
ins
mov
outs
dec
ret
ins
mov
sbb
jnp
sti
mov
or
out
loope
adc
pop
js
sub
mov
fs
cmp
cwde
push
sbb
xor
cdq
es
sbb
pop
and
push
dec
jmp
retf
inc
add
dec
sbb
or
shl
mov
xchg
inc
mov
sti
retf
or
adc
repnz
cs
jmp
scas
pop
(bad)
pushf
jo
sahf
jg
adc
leave
sti
enter
sub
push
cli
push
and
cmc
xchg
pushf
push
cli
arpl
ds
jae
mov
inc
idiv
xchg
das
int
cmp
movs
sbb
adc
dec
(bad)
outs
inc
or
cmp
icebp
sahf
xchg
mov
push
loopne
adc
xor
xchg
mov
xor
outs
push
xchg
popa
ret
sub
xlat
mov
pop
mov
mov
addr16
je
mov
ret
pop
mov
sahf
daa
or
outs
loopne
sbb
jmp
fisub
and
stos
sub
or
and
sbb
xor
inc
xchg
scas
and
lea
stc
pushw
dec
add
int
cmp
mov
or
or
out
xchg
push
pushf
add
inc
inc
sub
test
or
jmp
aaa
inc
jmp
mov
dec
out
mov
dec
das
mov
lds
push
inc
inc
rcl
or
push
sub
cmp
test
or
leave
test
push
das
loopne
and
lods
out
xchg
pop
ret
out
imul
xor
pop
xchg
xchg
clc
xchg
mov
dec
fbld
cs
daa
sub
lahf
push
cmp
push
je
lahf
jmp
ins
pop
shl
adc
out
push
mov
pop
ret
repnz
cmp
imul
cdq
pop
inc
lea
inc
and
mov
pop
mov
repnz
fs
ret
ja
sbb
adc
je
imul
xor
sbb
xor
or
push
shl
cmp
inc
adc
dec
xchg
push
xchg
jbe
xor
stc
sbb
cli
xlat
icebp
jne
in
inc
or
and
cmp
lock
sub
cmp
cld
push
mov
pop
shr
bound
dec
bound
into
cwde
push
push
int3
mov
aad
movs
jecxz
sub
xchg
and
mov
retf
int
and
arpl
popa
mov
es
push
aaa
mov
jp
mov
push
imul
and
mov
mov
mov
ja
sub
dec
pop
dec
pop
ins
in
pop
sti
mov
test
cs
ss
push
add
js
push
jp
mov
mov
out
jnp
push
cmp
es
out
aaa
pop
dec
pop
jmp
lock
into
xchg
jmp
xchg
dec
call
repz
bound
xor
shr
jecxz
add
outs
jl
cdq
pushf
int
loope
pop
xor
pop
xor
scas
clc
adc
nop
(bad)
data16
xchg
inc
fadd
mov
pop
dec
push
out
in
xor
int3
or
daa
cmps
and
cmps
mov
xchg
mov
cmp
inc
pop
aas
(bad)
call
ret
inc
mov
outs
out
test
and
rcl
je
dec
push
out
movs
data16
pop
xor
inc
mov
iret
adc
mov
pop
cld
add
cld
adc
xchg
jle
test
mov
movs
or
mov
mov
popa
mov
mov
fwait
xor
adc
cdq
jbe
and
and
jae
jge
jl
cwde
push
call
outs
les
jmp
mov
fbstp
dec
mov
rcr
mov
push
icebp
int3
or
inc
adc
jne
xor
jecxz
data16
cs
fldcw
sub
aad
adc
and
ins
dec
sub
mov
(bad)
jae
and
retf
sti
stos
scas
sar
mov
icebp
cmps
lahf
or
scas
jl
or
mov
int3
cmps
cmps
or
push
sub
test
das
jge
mov
jmp
jl
sub
call
daa
inc
mov
stos
outs
imul
pop
imul
outs
aam
imul
push
movs
js
stos
mov
imul
sbb
mov
pop
inc
js
lods
jl
mov
add
xchg
jmp
popa
sar
sar
into
jnp
xchg
mov
cs
scas
xor
stos
pop
call
test
jns
add
push
cli
retf
and
dec
cmc
add
pop
xchg
fcom
xchg
cmp
int
mov
ja
mov
enter
lock
fsubr
sub
sub
push
lahf
das
test
adc
pop
out
xor
sub
inc
push
mov
mov
push
sbb
add
sbb
dec
iret
mov
mov
cmp
ss
mov
sub
nop
xor
pop
popa
xor
pop
jb
inc
mov
inc
enter
int
cmp
loopne
mov
jae
or
xor
icebp
inc
sbb
inc
rol
dec
cld
add
add
inc
jmp
popa
retf
xchg
mov
jp
pop
ror
or
mov
ins
cmc
mov
mov
fild
imul
cmps
xlat
call
stos
call
adc
aam
sub
out
sbb
mov
dec
enter
lock
cmc
in
ret
dec
xlat
ja
clc
jne
xchg
jno
out
imul
ja
loopne
mov
in
or
or
stos
test
dec
neg
jns
push
add
add
xchg
sub
(bad)
neg
repz
add
add
cmc
in
jns
jns
inc
neg
das
mov
bound
add
movs
fmul
push
xor
push
dec
jne
std
or
add
mov
cwde
cld
xchg
daa
mov
jno
cmp
mov
dec
and
mov
repnz
retf
pop
add
add
dec
push
daa
sub
cmc
mov
(bad)
loope
(bad)
pusha
div
ds
ret
(bad)
jne
ins
movs
mov
js
cs
(bad)
jnp
ins
popf
clc
lods
add
sub
ss
les
cmp
fidivr
cli
mov
aam
cli
movs
jg
inc
aas
icebp
aam
adc
sub
jbe
push
popf
ins
adc
mov
outs
mov
adc
std
nop
dec
gs
add
paddsb
mov
push
js
jae
cdq
aaa
aad
stos
stc
(bad)
fmul
cld
mov
xchg
in
call
cli
cmc
clc
inc
sbb
enter
out
jno
ror
in
mov
bound
ror
mov
int
ja
fdivr
dec
or
imul
movs
mov
fcom
jb
clc
(bad)
jmp
mov
sbb
push
shl
sub
push
in
je
ins
(bad)
lock
(bad)
dec
loopne
imul
jae
call
sahf
push
or
dec
outs
jle
aaa
in
mov
les
xlat
mov
arpl
adc
stc
pop
mov
mov
shl
scas
lds
daa
push
mov
dec
jne
into
cmps
dec
mov
sar
test
js
mov
sbb
jmp
jg
or
push
aas
sub
ds
and
dec
shl
jmp
sbb
xchg
scas
clc
sahf
sub
dec
popa
add
gs
fild
movs
push
test
ficomp
out
xor
jmp
xor
inc
push
loopne
pop
or
stos
cmp
cli
mov
gs
and
cmps
setl
pop
std
adc
les
push
out
cmp
or
fadd
scas
fwait
and
cmp
call
scas
aam
data16
aas
cmc
mov
or
(bad)
mov
push
test
push
jecxz
imul
xchg
xchg
xor
push
or
sub
add
xor
bswap
in
adc
stc
nop
fadd
adc
or
inc
sbb
loop
(bad)
cli
push
test
mov
shr
sbb
push
jae
popa
cli
mov
jg
mov
shl
cdq
mov
(bad)
fistp
aad
inc
out
or
jp
push
cmp
popa
lods
mov
ds
pushf
ror
mov
mov
shl
(bad)
pop
sbb
stos
mov
jecxz
mov
iret
push
iret
cmps
mov
rcr
pop
inc
aam
rcr
sbb
push
xor
jno
and
sbb
cmp
lock
pop
cmp
mov
xchg
ss
jne
shl
scas
ds
pop
xchg
fiadd
cdq
fs
push
inc
ja
cwde
jl
add
sbb
test
les
pop
mov
and
pushf
sbb
sub
xchg
cmp
mov
sub
in
inc
jmp
pushf
lods
pop
push
sar
push
fst
es
test
rcl
popf
mov
jb
xchg
jbe
movs
(bad)
ins
xor
or
nop
mov
bound
push
das
xor
(bad)
cmp
je
push
or
and
(bad)
xchg
pop
xchg
adc
push
inc
cmp
cs
sub
mov
xlat
sbb
sbb
cmps
movs
or
push
mov
in
xor
ror
add
jge
xor
stos
out
(bad)
repz
push
test
add
inc
mov
ins
inc
xor
sub
xor
or
and
pusha
scas
pop
pop
jb
sar
push
dec
rcl
(bad)
cmc
or
xchg
sbb
or
adc
mov
retf
rol
cmp
pop
or
sbb
js
mov
int3
jns
add
jns
retf
mov
dec
mov
into
loop
shl
scas
ds
sub
push
inc
push
call
test
in
ins
mov
pop
enter
cmc
and
fbld
leave
out
mov
cmp
lea
pop
outs
add
or
or
jb
sbb
adc
adc
pop
jmp
and
inc
cli
mov
add
dec
in
jge
mov
ins
add
das
sbb
mov
xchg
xor
(bad)
pushf
movs
shl
sub
jl
inc
jns
hlt
dec
imul
xchg
out
jno
icebp
push
jp
popf
jae
dec
arpl
xchg
addr16
pop
sbb
out
int
push
mov
cld
retf
cmp
xor
dec
push
hlt
loopne
jns
nop
(bad)
std
push
daa
push
sub
mov
in
sbb
and
jp
mov
dec
dec
(bad)
sub
xchg
mov
or
les
mov
enter
test
pop
mov
call
xor
cmps
push
mov
mov
sub
add
mov
mov
sbb
loopne
push
mov
sbb
nop
inc
shl
xchg
shr
movs
pushf
aas
loopne
je
adc
pop
push
push
xchg
movs
scas
add
cli
jno
(bad)
sub
sbb
inc
(bad)
jge
iret
and
xchg
scas
out
and
jnp
cmp
mov
out
push
cdq
rcr
mov
test
jae
xor
dec
stos
mov
aas
lahf
push
jno
inc
mov
push
lahf
jb
sbb
aam
imul
mov
das
lds
dec
cmp
mul
dec
ss
mov
int3
xor
or
inc
stos
dec
sub
stos
xor
clc
enter
(bad)
aam
adc
loopne
pop
push
(bad)
sbb
mov
shl
stc
pop
out
mov
aas
and
js
jmp
fcomp
mov
lahf
test
sub
and
xor
jb
jne
stos
mov
xchg
stos
jo
dec
call
rcr
(bad)
ror
shl
pop
popf
lds
mov
pop
jg
arpl
inc
imul
rcl
lahf
(bad)
sub
xor
pop
out
cmps
cdq
outs
loope
dec
fcomp
cwde
jl
mov
in
add
int
cmp
mov
outs
xchg
imul
xor
popf
neg
es
fiadd
mov
rcl
(bad)
fcmovbe
jmp
or
inc
stc
mov
and
test
jge
mov
ins
xchg
mov
jl
call
jmp
xor
mov
mov
repnz
ins
add
xor
jnp
or
sbb
push
mov
fiadd
mov
fsubp
jae
ret
push
(bad)
btr
push
ss
pop
push
in
and
and
xor
bound
jno
cmp
aas
cmp
and
std
sub
mov
xchg
or
add
add
and
aam
daa
movs
push
cmp
mov
bound
int3
push
(bad)
call
mov
dec
(bad)
aam
enter
(bad)
sub
les
sbb
and
pop
lods
mov
push
fcomp
push
test
les
cmp
cdq
(bad)
je
adc
setnp
out
imul
jns
mov
inc
mov
xor
xor
ss
jmp
push
mov
clc
pushf
cmps
xchg
sar
or
push
pop
jecxz
loopne
mov
je
clc
add
cdq
hlt
adc
icebp
stos
jecxz
xchg
stos
popf
mov
adc
fldz
adc
jmp
mov
dec
and
test
(bad)
fdivr
push
mov
add
shl
sbb
mov
pop
mov
dec
pop
stos
pop
xchg
(bad)
cwde
jecxz
popa
or
adc
sbb
or
inc
xchg
cmp
(bad)
hlt
out
inc
adc
bound
and
adc
push
popa
lds
dec
inc
cli
sbb
sar
movs
mov
fiadd
adc
nop
mov
cmp
retf
push
fistp
daa
sar
sub
repz
pop
scas
xchg
pop
mov
int
pop
nop
push
mov
popf
xor
cli
and
(bad)
loope
imul
pop
mov
push
jp
cmp
shr
push
push
jg
jae
mov
cmps
(bad)
adc
fnsave
add
jp
jl
setl
cmp
jmp
inc
call
(bad)
hlt
dec
sbb
push
jne
lock
int3
inc
rcr
jb
fcomp
mov
adc
dec
xor
pop
and
push
lahf
jl
mov
fnstenv
xchg
and
mov
ss
out
jg
xchg
adc
shl
xchg
inc
pop
inc
mov
mov
ror
out
sub
ss
cmp
add
popa
(bad)
cmp
inc
dec
cmc
fld
fimul
or
stos
int3
stc
retf
pop
xor
ins
lock
jp
lods
sbb
call
mov
push
jmp
pop
lahf
outs
or
push
loope
cmc
out
xor
xchg
sbb
daa
jge
mov
xor
and
hlt
pop
scas
pushf
test
or
mov
scas
movs
xor
ds
pop
xor
and
sub
out
scas
mul
enter
lea
pop
xchg
push
and
pop
pop
out
push
or
pop
or
jge
fstp
pop
call
pop
mov
pushf
in
or
or
repz
dec
xchg
mov
add
xchg
sub
call
mov
sub
clc
jnp
jns
fist
nop
jo
neg
sar
dec
std
div
in
mov
iret
mov
add
mov
fwait
cmps
loopne
xchg
jo
out
shl
fisttp
(bad)
sub
retf
lock
je
fwait
xchg
imul
adc
pop
jmp
test
scas
sub
leave
dec
popf
(bad)
das
and
cmc
dec
pop
leave
arpl
into
pop
popa
mov
adc
inc
repnz
bound
mov
dec
push
jecxz
es
rcl
(bad)
lahf
mov
xor
push
(bad)
and
jecxz
stos
jmp
cmp
mov
push
sub
out
sahf
jbe
mov
adc
jg
pop
dec
repz
sqrtps
mov
cmp
xchg
mov
mov
std
pop
movs
pop
shl
sbb
xchg
xchg
bound
inc
(bad)
and
ins
fild
sub
(bad)
cli
or
and
pop
xchg
jl
sub
lock
jno
ss
dec
call
jns
and
inc
stc
sbb
sub
cmp
cld
xor
shr
ds
pushf
mov
mov
cs
ja
jae
test
xchg
das
jbe
adc
or
jbe
push
jge
push
jno
mov
mov
pushf
mov
js
pop
mov
mov
pop
dec
fdivr
rol
cdq
dec
jno
jae
rol
mov
out
fwait
or
dec
push
cld
ficomp
in
jl
sar
pusha
sub
sbb
leave
sbb
jbe
push
mov
mov
push
daa
or
mov
mov
test
jg
inc
inc
and
inc
inc
into
mov
jg
adc
(bad)
aas
call
out
cmp
stos
enter
and
adc
mov
push
or
imul
add
mov
cmp
and
ja
fs
push
or
sahf
jo
popa
pop
icebp
xlat
test
pop
adc
fs
and
test
push
aas
retf
adc
cmps
cdq
push
mov
add
push
mov
stc
push
pop
mov
les
cmp
call
add
push
xchg
xor
dec
je
std
dec
xor
pop
in
jl
adc
jbe
ins
jae
movs
imul
into
pushf
push
xchg
lods
xor
cmps
dec
repz
mov
add
clc
idiv
pop
jo
sub
stc
pop
stos
inc
hlt
mov
sub
xor
adc
adc
xor
xor
daa
ret
out
imul
sbb
call
std
lea
pop
loop
xchg
xchg
aad
cmc
and
sbb
psrad
or
imul
or
sub
jp
pop
test
push
push
jo
jns
std
jge
jb
(bad)
enter
clc
nop
out
loope
inc
and
push
repnz
scas
fld
fdiv
loopne
std
xchg
and
push
ins
cmps
push
inc
mov
mov
out
jp
rcr
push
cmps
ins
fcos
mov
jae
in
gs
ins
jmp
stos
aaa
in
mov
mov
xrelease
push
pop
mov
push
adc
mov
pop
mov
or
in
mov
xor
jecxz
lods
clc
adc
adc
mov
dec
inc
dec
enter
scas
std
inc
mov
je
xor
mov
pop
push
outs
cwde
lds
mov
adc
mov
or
dec
in
loope
jge
aaa
sbb
xchg
pusha
leave
dec
pop
and
cmp
dec
adc
add
pop
lds
int
sub
test
pop
dec
jb
pop
pop
dec
lahf
mov
setne
sbb
cmps
rcr
fdivrp
mov
dec
lea
clc
les
or
cmp
int3
in
pop
mov
sar
jnp
mov
aaa
jecxz
imul
xchg
mov
jae
add
push
popf
popf
jne
and
imul
add
inc
xor
les
jb
push
sbb
loope
dec
stc
aam
pusha
sub
sbb
fwait
add
ret
(bad)
cmp
test
into
or
dec
or
or
jns
mov
outs
sbb
out
cmp
xor
fwait
cmps
(bad)
(bad)
mov
in
or
fsub
adc
retf
int3
movs
jge
cmps
cmp
mov
icebp
mov
test
fwait
ins
push
and
shl
rol
(bad)
cli
add
test
mov
cmp
dec
pop
adc
jnp
dec
ja
pop
jle
stc
xchg
mov
fcmovnu
gs
out
scas
repz
xor
prefetch
or
push
xchg
arpl
out
lock
fdiv
sbb
repnz
dec
imul
(bad)
sbb
ja
rol
adc
push
data16
mov
ins
dec
cmc
and
shr
xchg
lahf
packssdw
lds
outs
mov
in
pop
push
daa
or
xchg
mov
std
(bad)
out
jo
jo
into
xchg
jecxz
push
std
int
leave
cmp
and
fist
retf
cmps
ds
aas
add
cmc
sub
xchg
sub
sahf
jae
mov
sbb
fs
fstp
shr
adc
add
and
inc
fist
idiv
xchg
adc
ss
bound
dec
(bad)
mov
(bad)
(bad)
out
push
std
dec
and
lock
mov
pop
adc
loope
jge
xor
mov
dec
or
not
or
fnstcw
push
gs
sub
push
pop
jne
fstp
lea
dec
pop
stc
cmp
adc
and
lock
add
repz
movs
mov
add
mov
leave
popa
jle
or
adc
sbb
mov
pop
push
xchg
dec
xchg
bound
add
xchg
mov
ror
int
push
push
cli
pop
jno
push
int3
(bad)
and
aas
sbb
gs
ins
aad
test
pop
pop
xchg
lahf
adc
cmp
test
mov
sahf
xchg
ins
adc
sbb
ja
and
dec
outs
vmread
push
stc
mov
push
mov
(bad)
daa
dec
sbb
push
in
ret
out
std
jg
push
jne
or
dec
aaa
or
sbb
loop
mov
xchg
pop
ins
lahf
retf
mov
ret
pop
xchg
sub
mov
xor
cdq
mul
jcxz
outs
and
push
sar
push
xchg
std
aad
ds
out
nop
out
rcr
rcr
aas
ss
or
sub
push
aam
stos
xor
add
xchg
ror
mov
frstor
lahf
push
or
add
inc
pushf
call
mov
imul
sub
cs
gs
(bad)
add
scas
inc
push
iret
or
rcr
push
xchg
mov
fldcw
mov
bound
out
jmp
jle
addr16
mov
mov
(bad)
xor
out
cmp
mov
test
stc
cmps
sbb
scas
test
pop
(bad)
es
xchg
cmps
mov
sub
int3
push
and
and
mov
xchg
or
jle
jo
loope
sbb
not
add
adc
leave
dec
mov
push
loop
mov
jnp
js
es
mov
les
test
or
sahf
xchg
outs
ins
dec
(bad)
xor
lds
cmps
dec
mov
and
(bad)
call
pop
ja
xchg
adc
bound
fild
retf
sub
pop
das
sti
mov
mov
and
xor
js
sub
adc
(bad)
(bad)
adc
sbb
sbb
pop
adc
pop
sub
es
movs
mov
jo
nop
loop
inc
sti
fdivr
jmp
xor
pop
dec
jnp
test
xchg
setae
xor
test
push
fidiv
mov
push
mov
addr16
xor
pop
add
cmp
pop
xchg
push
push
jl
ret
xchg
cmp
fbld
jo
pop
mov
mov
or
dec
push
dec
jae
popf
inc
jnp
pop
popf
data16
pop
fldenv
test
jecxz
ins
xor
cld
ret
pop
push
adc
loop
jge
test
lock
sbb
imul
dec
repnz
test
jg
adc
xchg
lock
sbb
mov
add
adc
push
sar
mov
out
outs
and
fld
and
add
test
sub
aas
nop
pushf
cmp
stos
daa
loopne
or
fs
pop
sbb
imul
sub
mov
(bad)
push
xor
retf
sbb
dec
sar
daa
fsub
cmc
jnp
or
rol
imul
xor
ins
mov
xor
mov
cmp
repnz
pmaxsw
mov
lods
mov
push
and
or
cli
xlat
push
cdq
pop
dec
dec
pop
pop
or
push
in
push
cmp
or
mov
jmp
cmps
cld
cmc
xchg
cmc
jmp
lds
call
pop
push
rcl
sub
push
jecxz
inc
sub
ss
push
fild
sbb
dec
cmp
xor
mov
test
enter
enter
repnz
mov
jne
xor
push
dec
inc
movs
mov
mov
sahf
sbb
jg
fsub
ficomp
mov
fld
mov
mov
mov
xchg
cmp
mov
lds
mov
jmp
cmp
std
push
add
pop
jle
lods
pop
stos
cmp
out
push
xor
pop
jb
jne
sar
jecxz
xor
loop
mov
dec
adc
int3
pop
clc
js
add
cli
aas
movs
ret
jg
pop
imul
hlt
mov
cmp
sub
retf
ja
sub
cmp
imul
cmps
enter
or
cdq
scas
mov
sbb
or
cmps
imul
cmp
inc
sbb
sahf
mov
(bad)
pop
cli
clc
push
xchg
jae
dec
mov
icebp
xchg
xchg
sub
jge
pop
loop
out
lds
daa
loope
sub
cmp
inc
inc
repnz
imul
xor
pusha
nop
in
pop
shr
dec
mov
pop
add
jecxz
rep
mov
movs
or
pop
lds
xchg
loopne
sub
cld
lods
test
inc
mov
xor
out
out
call
jbe
cmp
enter
cli
cld
iret
daa
xchg
push
pop
xchg
jns
mov
shl
adc
pop
cwde
xor
inc
mov
pop
scas
jmp
call
in
popf
(bad)
loope
mov
ds
xchg
jle
push
(bad)
inc
xor
int
outs
cmps
sbb
pop
sbb
pop
scas
fwait
add
sbb
xchg
xchg
pop
das
rcr
sbb
bound
sub
fst
shl
adc
in
xor
mov
inc
cmps
cld
addr16
mov
inc
je
imul
sub
push
mov
in
xor
cmps
pop
xchg
dec
fidiv
sbb
cdq
jmp
and
into
mov
push
mov
sub
(bad)
xor
jbe
mov
xchg
jno
into
mov
das
mov
(bad)
enter
test
xor
sti
mov
dec
jl
aad
sbb
mov
leave
or
adc
lahf
cmp
(bad)
cmp
mov
sbb
pop
pop
jge
cmovnp
out
ss
daa
mov
xor
adc
inc
sbb
leave
pop
fnsave
in
mov
sub
sub
push
out
push
stos
mov
sub
jae
stc
mov
cmp
aas
hlt
cmps
push
jecxz
aam
xor
or
mov
int3
jge
xchg
(bad)
leave
stc
imul
cwde
push
mov
aam
sbb
xor
fdiv
jmp
loope
inc
imul
cmp
adc
nop
sti
add
scas
cmp
jmp
jae
mov
jmp
(bad)
outs
xchg
aam
fmulp
fstp
pop
pusha
inc
leave
add
push
xor
sbb
fisub
test
dec
pop
sbb
(bad)
jmp
ins
fldlg2
mov
sbb
out
jl
push
inc
or
das
mov
mov
or
repnz
sbb
mov
push
das
js
jp
xchg
movs
adc
jmp
jno
cmps
mov
fcom
add
bound
setl
mov
cmps
lods
les
das
inc
ja
ins
xchg
sahf
push
ret
ror
inc
(bad)
adc
ror
sbb
push
or
mov
sub
mov
sub
mov
add
das
push
and
xor
rol
mov
push
sub
sub
gs
test
lds
ja
push
jae
pushf
addr16
sti
cdq
jne
dec
and
jne
jo
inc
mov
dec
daa
aas
sbb
xchg
push
xor
xchg
cmp
xchg
gs
jne
je
inc
xchg
sbb
lods
push
lods
mov
xchg
movs
sub
idiv
pop
dec
pop
pop
outs
jo
push
adc
out
and
test
or
(bad)
ucomiss
jne
jb
(bad)
mov
popa
mov
sti
mov
mov
leave
in
adc
jmp
adc
jnp
jl
enter
mov
neg
movs
lock
lea
test
adc
out
sbb
inc
popf
jno
lods
clc
inc
bound
mov
fmul
pusha
xlat
(bad)
dec
popf
or
xchg
sbb
fimul
sbb
jae
inc
leave
jecxz
add
and
mov
fmul
jno
push
mov
enter
lods
fcom
inc
dec
mov
xlat
call
sbb
mul
fdiv
dec
adc
repnz
xlat
jle
cs
jmp
sbb
cmp
cmp
call
inc
jns
sbb
or
and
dec
mov
add
pop
int
sub
adc
jp
lahf
scas
addr16
jb
dec
out
sbb
inc
or
sbb
and
jl
add
push
mov
das
sbb
cmp
push
lea
test
ss
pop
out
iret
sub
test
cdq
fistp
dec
dec
test
popf
pop
mov
or
ss
pushf
cs
dec
int3
out
mov
xor
inc
iret
sub
pop
push
push
ja
cmp
in
mov
fwait
pop
iret
and
in
je
adc
ret
cmp
mov
jo
and
push
sub
push
stos
sub
icebp
push
push
pop
cmps
add
test
cld
and
and
outs
xlat
cmc
inc
ror
xor
xor
dec
inc
fdiv
mov
mov
pop
mov
sbb
mov
dec
pop
mov
loope
or
and
or
aad
addr16
lods
adc
dec
das
push
pop
jle
xlat
xchg
imul
xchg
jbe
or
mov
ins
adc
fidiv
jo
imul
(bad)
repnz
aas
pop
mov
retf
loop
stos
lea
xor
xor
cmc
pop
mov
pop
aaa
leave
or
adc
xlat
lods
retf
dec
cmc
data16
sti
xchg
and
pop
mov
xor
fisttp
push
outs
fs
xchg
and
pop
aaa
or
jge
push
rol
sbb
xchg
sub
ficom
xor
call
loope
and
popf
pop
fcom
push
test
jns
xchg
dec
shr
retf
xor
mov
clc
fst
or
ins
push
push
cld
rcl
or
leave
fs
mov
sub
mov
add
sub
imul
push
retf
out
jo
call
test
nop
ret
fwait
iret
sub
jnp
push
rol
sbb
retf
or
ins
fisttp
xchg
out
lods
fucomp
sahf
das
lods
ss
lahf
push
fimul
or
push
outs
jmp
in
mov
cmc
(bad)
in
xlat
test
aaa
in
dec
add
out
test
xchg
xchg
sti
dec
push
inc
mov
adc
outs
mov
push
adc
sar
and
cmp
shr
mov
push
out
cdq
cdq
aam
sbb
imul
mov
shr
jae
mov
xor
ins
mov
pop
dec
(bad)
cmp
and
add
mov
(bad)
sbb
int
mov
fld
call
pushf
retf
xor
addr16
add
jns
dec
sub
adc
jl
shr
adc
mov
mov
sub
sbb
or
aaa
dec
cmp
xor
pop
push
adc
enter
clc
lods
popf
push
sub
or
mov
push
sub
outs
adc
jno
movs
out
jl
ficom
sub
scas
je
jmp
ja
and
cmp
loopne
movs
xchg
out
cmp
cmp
xchg
push
sti
xor
mov
push
cmps
cmp
mov
add
test
mov
(bad)
into
jmp
mov
push
mov
push
mov
push
and
call
out
or
jmp
sbb
enter
push
and
or
loopne
sub
fimul
rcr
outs
xchg
pop
xor
pop
mov
dec
mov
mov
jno
aad
cmp
or
(bad)
sahf
shl
push
xchg
adc
push
push
push
pop
popf
jle
cld
cld
inc
sbb
sub
or
cmc
add
sbb
sub
aas
or
cmp
mov
push
mov
sbb
mov
mov
pop
and
jmp
loopne
clc
dec
and
push
lods
(bad)
(bad)
loopne
xor
mov
int3
sbb
or
scas
jmp
mov
mov
mul
sbb
sub
icebp
ins
in
fistp
cwde
ins
cwde
jbe
retf
push
jecxz
stos
iret
inc
sub
push
into
ficom
das
ret
sbb
and
jns
jg
inc
lock
(bad)
mov
int
mov
imul
das
js
adc
mov
push
nop
add
dec
xor
gs
xchg
jmp
ins
xchg
(bad)
mov
inc
xchg
add
cmp
lods
mov
push
and
xor
dec
movs
xchg
ret
xchg
imul
cld
pushf
mov
cmc
out
jmp
(bad)
jecxz
shl
mov
(bad)
mov
iret
out
mov
jne
inc
test
movs
mov
cmp
mov
(bad)
jo
pop
call
xchg
std
cmp
sbb
dec
pop
xchg
jns
stos
push
mov
int3
ins
pop
xchg
or
stos
shr
mov
pop
mov
or
mov
xchg
out
jnp
stos
shr
test
or
mov
scas
pop
xchg
(bad)
add
jmp
push
cdq
adc
mov
mov
or
not
cmps
rol
pop
pop
cmp
mov
sub
mov
ins
jmp
call
cmc
mov
outs
mov
jae
sar
lds
inc
out
mov
movs
cmc
cld
mov
mov
mov
dec
dec
xchg
shr
inc
fadd
clc
inc
hlt
and
jnp
call
cmps
dec
repz
enter
add
out
xchg
popa
cli
mov
or
or
xchg
pusha
mov
test
aad
fimul
aas
xchg
jge
addr16
jmp
(bad)
les
sub
adc
inc
(bad)
pusha
fs
outs
mov
dec
and
cmps
or
cdq
pop
xor
dec
jmp
(bad)
repz
popa
pop
sub
sar
adc
sbb
push
adc
in
xchg
scas
(bad)
rol
test
std
xor
clc
add
xor
sahf
mov
(bad)
fsubr
sahf
ds
jae
movs
pop
sbb
std
out
inc
push
test
inc
xlat
cmp
or
aad
in
sub
mov
mov
dec
nop
cwde
sub
pop
mov
(bad)
xor
jb
int3
bound
and
add
iret
adc
xchg
std
push
gs
xor
sub
cmp
(bad)
fist
push
add
and
mov
pop
jns
dec
mov
loope
sbb
ret
jae
data16
sub
aaa
aam
jns
fstp
cs
outs
movs
fwait
push
mov
ss
adc
push
cmp
xor
xor
jl
mov
(bad)
outs
inc
cli
adc
jmp
jae
mov
mov
enter
jle
pop
mov
pop
ja
pop
stc
jnp
cmp
xor
scas
pop
cmp
cdq
stos
pop
ret
mov
add
and
sbb
fsubrp
loopne
cmc
inc
mov
mov
out
add
bnd
outs
and
adc
add
adc
and
mov
cmps
jge
add
mov
and
dec
aam
xchg
push
push
adc
jle
loope
xchg
and
cmp
pop
push
cmc
push
push
fdivp
jne
pop
inc
repnz
add
mov
fxch
push
fcomp
push
xchg
cmps
add
fsetpm(287
jl
fisubr
cmp
lds
rep
out
fdivr
leave
push
fmul
pop
in
xchg
ficom
cmp
mov
retf
mov
xchg
jnp
scas
lds
js
xor
inc
xor
xor
cmp
adc
or
sbb
ds
or
sub
sahf
es
mov
ja
mov
xor
aaa
ror
gs
push
sahf
and
and
dec
adc
mov
mov
pusha
mov
retf
xchg
bound
test
jb
iret
jns
push
inc
mov
lods
mov
frstor
sbb
jg
mov
test
stos
add
lds
je
in
out
enter
inc
mov
sub
xchg
outs
pop
in
pusha
pop
or
das
mov
push
xchg
retf
mov
das
xchg
fild
out
(bad)
pop
lds
lahf
mov
fst
mov
push
adc
or
jg
add
jp
je
(bad)
hlt
pushf
loope
push
pop
push
ins
jb
push
les
ins
xor
outs
call
push
fld
mov
into
mov
dec
das
dec
adc
out
xor
sub
push
test
call
add
movs
nop
stos
push
mov
mov
pusha
adc
loope
xchg
and
pushaw
cdq
push
dec
(bad)
cld
mov
inc
push
outs
mov
sub
js
ret
call
cmp
mov
enter
xor
xor
dec
lods
xchg
loope
das
sub
sbb
fisub
adc
pop
and
es
std
inc
call
mov
mov
mov
movs
inc
out
in
repnz
inc
dec
daa
adc
in
jno
sub
pusha
xchg
mov
mov
inc
pop
test
scas
jnp
ret
pushf
jge
mov
lods
mov
iret
cmp
jmp
pop
cli
cwde
push
cdq
dec
movs
out
sbb
sub
(bad)
cdq
jbe
cdq
(bad)
ds
shl
pusha
inc
pop
push
nop
sti
lock
call
push
mov
sub
mov
dec
dec
adc
dec
sub
inc
inc
shl
ins
mov
push
jo
mov
sbb
dec
in
jmp
test
pop
xor
fld
retf
xor
in
lahf
sub
mov
call
adc
sbb
in
and
xor
push
addr16
xchg
aad
sbb
push
fisub
aaa
mov
and
pop
mov
cwde
std
mov
rol
mov
xchg
iret
aaa
data16
inc
and
pop
into
stc
xchg
mov
adc
nop
pop
jo
gs
loop
inc
and
dec
jp
test
jbe
adc
jecxz
inc
mov
adc
int3
leave
mov
inc
shl
ds
cli
mov
jecxz
add
stos
(bad)
and
imul
push
sti
pushf
scas
inc
xchg
popa
rcl
mov
imul
int3
xor
xchg
xchg
int3
mov
dec
push
aas
test
fwait
cwde
das
mov
xchg
xor
cmps
pop
mov
pop
in
adc
outs
xchg
and
push
sub
jp
cld
xchg
aaa
sar
stc
sub
movs
dec
outs
nop
pop
push
ja
sub
push
sbb
push
xor
jne
gs
dec
scas
hlt
add
mov
in
ja
out
lea
sub
clc
sub
cmp
std
and
xlat
dec
mov
mov
add
je
leave
shr
dec
dec
sub
lods
or
jbe
xor
jmp
popa
xor
and
(bad)
jmp
mov
(bad)
mov
lods
sahf
mov
aad
add
ret
ins
mov
scas
cmp
cmp
test
xor
inc
out
or
outs
sub
jl
mov
mov
lea
jno
jle
out
sbb
or
mov
rcl
xchg
retf
int3
or
sbb
ins
xor
inc
xchg
mov
and
adc
(bad)
gs
inc
out
dec
mov
arpl
jmp
xor
pop
cdq
push
xorps
test
jl
pop
push
stos
pop
(bad)
(bad)
fsubr
sbb
imul
inc
outs
cdq
inc
adc
push
aad
fld
xor
jmp
mov
sti
aam
cmp
push
call
daa
sub
jns
or
sbb
ret
mov
push
aas
cli
jb
hlt
dec
retf
add
fild
cmp
push
clc
retf
aaa
push
jnp
imul
add
sub
sub
into
neg
inc
(bad)
fisttp
cmp
loope
cmp
jno
and
cld
fucomp
mov
push
fidiv
rol
mov
dec
push
and
xchg
dec
es
inc
mov
sub
or
mov
xchg
mov
imul
sahf
lods
and
dec
mov
(bad)
xor
js
mov
add
jbe
cld
(bad)
sub
sbb
cld
addr16
sbb
repnz
push
jle
sbb
pop
into
dec
jmp
cmc
shl
sbb
mov
mov
(bad)
push
sbb
add
and
(bad)
(bad)
jmp
cdq
jb
xchg
mov
nop
rcl
test
stos
test
rol
(bad)
add
pop
mov
rcr
xor
cmps
jg
jmp
sti
das
cli
push
jb
clc
mov
jae
jns
dec
adc
ins
jnp
rcl
xchg
fisttp
jae
push
mov
fst
(bad)
jg
fwait
repz
jbe
xchg
and
sub
jp
xchg
mov
or
aaa
push
dec
mov
mov
lahf
jmp
jmp
shr
aad
xchg
cmp
pop
inc
fldcw
ror
cmps
fdivr
out
sahf
adc
cmp
lds
clc
pop
pop
imul
jno
sti
int
in
div
popa
into
fdiv
std
mov
pop
dec
fmul
and
dec
in
or
dec
inc
cdq
and
aas
mov
out
gs
mov
loop
xchg
mov
jnp
stos
push
sub
dec
adc
mov
daa
(bad)
stos
sti
pop
mov
arpl
cli
ficom
stos
inc
adc
sbb
pop
or
sub
xlat
xchg
test
or
leave
pop
std
jae
pop
rcl
(bad)
inc
jno
mov
shr
dec
fnstsw
stc
stos
gs
gs
push
mov
sbb
in
or
sbb
scas
cmp
inc
and
test
cmc
sub
lods
pop
call
sub
dec
inc
dec
ds
xchg
shl
test
ret
pop
rcr
cli
sbb
cmp
add
sub
jne
lea
push
sub
sub
and
loopne
fdiv
jb
jmp
cmp
out
sbb
add
loop
add
(bad)
pop
out
enter
stos
into
fadd
cdq
sub
repnz
and
xchg
xor
or
xchg
mov
gs
pushf
dec
and
das
retf
hlt
jp
sbb
loopne
in
jb
push
push
mov
sti
rol
mov
leave
mov
ret
add
xor
fistp
inc
push
cld
fld
and
cdq
stos
scas
pop
rcl
inc
sbb
xor
mov
fild
sbb
test
dec
pop
ja
dec
loope
adc
mov
sbb
jmp
sbb
arpl
pop
lods
xchg
push
pop
sub
repz
mov
adc
fwait
add
mov
adc
sti
retf
js
and
shl
jp
ret
cld
push
pop
cld
test
jbe
inc
sbb
in
mov
iret
and
adc
test
jg
hlt
popa
(bad)
and
in
icebp
ret
cli
daa
les
mov
mov
and
mov
movs
dec
mov
and
lds
mov
pusha
(bad)
pop
dec
mov
push
push
sar
out
inc
dec
and
(bad)
out
in
xor
xchg
in
popf
outs
cmps
sbb
sub
cmp
test
push
imul
ja
xchg
in
add
sub
shr
mov
or
sahf
cs
ror
xchg
cmc
int
shr
mov
enter
and
push
stos
lahf
leave
add
xor
xor
mov
pop
rol
push
xchg
sti
and
int3
add
pop
jg
adc
rcl
adc
aam
xchg
xor
loopne
mov
or
adc
mov
xchg
mov
pop
adc
adc
pusha
cvtps2pi
jmp
fsub
xchg
scas
adc
sbb
int
mov
mov
xchg
ret
xor
pop
pop
idiv
mov
sbb
outs
cli
outs
ins
jno
les
loope
inc
mov
in
inc
cmp
rol
in
jbe
test
into
and
(bad)
cld
scas
mov
mov
lods
dec
cwde
and
mov
rol
mov
daa
ja
jmp
push
fbstp
out
int
retf
sbb
jae
rol
push
mov
inc
and
int3
add
dec
xchg
or
xchg
mov
pop
dec
mov
cmp
jo
sahf
outs
les
les
pop
adc
cmp
inc
adc
sub
jo
and
and
mov
xor
add
xchg
push
cmps
pop
dec
lods
sbb
mov
mov
xor
mov
cmc
dec
scas
sar
fwait
mov
aam
or
pop
jecxz
cmp
jecxz
mov
sub
adc
push
inc
lahf
jbe
inc
out
shl
push
add
leave
pop
and
jae
cmp
adc
test
rcr
inc
inc
sbb
mov
out
in
push
pop
sar
pop
adc
inc
fld
sub
loop
loop
gs
in
popa
add
loop
stc
pop
jmp
nop
sbb
xor
pushf
add
cmc
sub
xchg
push
mov
jge
mov
inc
sub
out
cmp
sbb
movs
adc
(bad)
push
inc
fldcw
add
pop
ret
sub
test
jne
cli
cmp
retf
jecxz
push
mov
test
cmp
push
imul
daa
fcomp
aad
js
ror
enter
cmps
jg
dec
mov
loope
and
in
lock
dec
loope
aas
add
sub
cmps
shl
popf
dec
dec
sub
mov
dec
push
pop
fcmovbe
pop
pop
lahf
pop
jae
es
jae
sub
push
xchg
sub
aaa
orps
rcl
push
mov
int3
adc
fsubr
mov
stos
jecxz
or
jmp
stos
sbb
aaa
pusha
push
mov
stos
repnz
sbb
gs
daa
mov
jecxz
rcr
sar
dec
sbb
xchg
push
jne
jmp
xlat
lods
dec
and
out
jo
or
imul
mov
cmps
inc
adc
push
mov
adc
inc
add
fnstcw
adc
leave
inc
xor
nop
ret
rol
call
idiv
test
cld
scas
cmp
adc
sub
inc
aaa
inc
xor
adc
inc
fs
ins
jg
test
xor
imul
inc
out
xor
cmp
or
xchg
adc
addr16
or
popa
mov
or
inc
dec
clc
pusha
pop
cmp
jbe
pop
js
push
ret
aam
out
fcomip
cli
into
in
push
push
enter
push
(bad)
jno
mov
and
mov
out
out
cmc
loope
cmps
and
sbb
sub
dec
or
jne
sub
enter
push
cmp
mov
rol
push
cmp
mov
pop
jp
cs
add
pop
push
setg
ror
mov
pop
pop
shl
pop
sub
pop
or
jmp
pop
jecxz
adc
sbb
gs
push
in
xchg
add
xchg
push
(bad)
(bad)
mov
imul
imul
pop
jnp
sti
ficom
or
shr
sbb
xchg
repnz
(bad)
aas
dec
sub
push
mov
jmp
pop
test
and
push
cdq
test
outs
pop
inc
inc
inc
(bad)
in
jo
sub
or
mov
inc
xor
rep
sub
push
popf
pop
into
js
xchg
jp
movs
jge
adc
xor
nop
adc
xchg
test
clc
and
cwd
mov
inc
mov
out
sub
loope
out
xor
pushf
or
movnti
sub
leave
(bad)
out
xor
mov
xor
sub
shl
scas
mov
push
push
mov
fldcw
fimul
test
int3
sub
(bad)
jecxz
je
push
xor
add
lods
(bad)
jge
sbb
cld
ins
xchg
pop
or
sbb
adc
xor
movs
and
xchg
test
add
mov
mov
sub
mov
push
xchg
shr
fstp
jmp
push
fwait
test
push
xchg
adc
adc
addr16
dec
mov
jno
(bad)
outs
jns
and
cmp
jl
pop
ja
pop
jl
mov
push
dec
in
lock
inc
(bad)
popa
inc
lods
les
outs
inc
iret
imul
cmps
outs
ja
mov
addr16
mov
mov
pusha
add
jp
add
dec
aas
dec
xchg
pop
lahf
fisttp
jg
loopne
shr
movs
pop
lock
ins
es
popa
scas
in
aad
in
sub
jae
push
sub
sbb
data16
rcl
xor
outs
xor
adc
les
push
in
sahf
movs
stos
out
sub
inc
dec
mov
clc
mov
out
jo
cmps
pop
or
sub
scas
xchg
push
mov
out
out
icebp
jb
cmps
sti
ja
jmp
ss
stos
jns
(bad)
call
test
cmp
gs
outs
jg
mov
sub
sub
xchg
push
inc
sbb
jmp
push
cmp
mov
jno
fs
xor
jl
ds
adc
lods
clc
loopne
and
rcl
push
dec
jmp
sub
mov
test
xchg
xchg
sub
mov
je
sub
in
inc
pushf
aaa
push
aam
sub
adc
lods
ja
cmp
shr
adc
aam
sbb
test
das
lahf
push
adc
xchg
pop
and
add
pop
retf
push
push
mov
dec
cwde
outs
call
add
mov
jmp
cmp
inc
ins
js
push
cli
hlt
(bad)
mov
push
pop
push
hlt
mov
lock
mov
cli
adc
jmp
xor
xchg
sub
rol
fcmovne
lock
es
fsub
and
add
mov
push
pop
in
test
ins
mov
stos
pop
pop
call
imul
cmp
ret
adc
cmp
or
push
add
or
mov
fild
xchg
movs
stos
add
ds
push
sub
sub
inc
cmc
loop
je
jge
pslld
popa
or
(bad)
stos
aam
inc
cmp
(bad)
ret
xor
add
dec
mov
and
imul
sahf
pop
int
cs
push
jne
or
push
(bad)
or
out
dec
push
mov
enter
test
in
jge
sub
or
mov
push
jno
(bad)
xchg
and
retf
int3
das
and
xchg
jo
jo
xchg
inc
stos
mov
mov
xchg
pop
mov
fmul
es
out
mov
rol
cmps
xchg
mov
addr16
repnz
xchg
push
jmp
fdiv
dec
push
pop
mov
stos
jns
mov
jbe
add
xchg
mov
cmp
call
mov
push
scas
pop
pushf
imul
push
scas
repz
sub
dec
shr
mov
push
idiv
js
xchg
rcr
xchg
xor
pop
mov
sub
pushf
lods
ficomp
mov
and
loope
xchg
mov
ror
jae
popf
mov
data16
pop
inc
add
out
fnstenv
pop
sub
inc
or
mov
cmps
fsubrp
inc
xchg
dec
dec
out
inc
test
int
iret
gs
test
retf
xlat
nop
ret
ror
in
jl
mov
xor
xchg
cmp
(bad)
loopne
leave
jbe
(bad)
jl
rcl
push
or
loope
arpl
aas
mov
lods
mov
dec
xchg
(bad)
xor
xor
frstor
pop
dec
fld
fidivr
pop
xchg
loope
rol
sti
adc
fwait
mov
fild
hlt
mov
sbb
dec
push
ins
retf
repz
pop
and
sbb
push
jmp
js
ror
xor
mov
cmp
dec
ja
mov
sbb
dec
imul
clc
sbb
push
sbb
push
cs
std
push
ss
mov
imul
and
sub
mov
xchg
inc
ja
outs
and
leave
dec
push
ret
out
shl
imul
pop
xchg
imul
iret
sbb
mov
cmp
repnz
pop
stos
jns
xor
mov
add
(bad)
pop
in
mov
xchg
in
dec
adc
adc
jl
add
add
in
fadd
fldenv
das
aaa
cs
scas
jae
test
fisttp
push
fs
shr
je
push
cmp
adc
out
adc
xchg
ins
adc
mov
mov
lds
test
push
rol
push
call
jnp
mov
shl
sbb
mov
adc
adc
hlt
into
mov
ja
rcl
or
in
fistp
shr
(bad)
(bad)
aas
or
adc
add
push
cmp
jle
cwde
jns
pop
push
jmp
call
std
mov
cs
sub
rol
add
xlat
lds
(bad)
mov
jg
dec
jmp
loopne
jns
outs
out
ins
cwde
(bad)
in
push
add
sbb
dec
cdq
pop
xchg
ss
div
mov
pusha
lods
mov
pop
(bad)
fild
stos
fcomp
les
add
into
pop
inc
test
push
push
lds
(bad)
push
pushf
xor
cdq
add
es
ins
retf
lds
aas
loopne
pushf
scas
push
pop
add
cmp
call
repz
fs
pop
jmp
mov
leave
cmovb
sbb
outs
push
movs
shr
ja
cmp
jns
ins
call
mov
add
sub
lahf
push
(bad)
mov
jbe
cwde
fwait
scas
enter
cmp
test
sub
or
fistp
push
in
in
gs
add
sbb
dec
and
clc
xchg
xchg
dec
inc
repz
push
lea
cmp
adc
lods
push
dec
daa
mov
inc
push
dec
(bad)
in
in
sub
cmp
pop
and
dec
clc
jns
dec
cmc
repnz
in
xor
or
icebp
and
xor
jge
pusha
cdq
mov
(bad)
jbe
shl
popa
fidiv
outs
ss
(bad)
push
push
fpatan
push
dec
aaa
sbb
jecxz
jmp
adc
push
mov
cdq
clc
push
cwde
lahf
and
mov
call
xor
not
bound
clc
cmp
and
jg
dec
ret
jno
imul
bound
pop
scas
xchg
rcl
inc
shr
ror
push
add
repnz
jbe
test
cmp
int3
jle
jg
or
sub
add
call
fwait
mov
jge
int
sub
push
imul
popf
pop
leave
add
mov
jle
cmp
ins
adc
push
movs
adc
inc
loopne
xor
dec
xlat
cmc
rcl
in
dec
jne
mov
(bad)
imul
dec
hlt
adc
sbb
int
jb
in
dec
repnz
outs
inc
cmp
add
cmps
mov
stos
or
and
adc
idiv
aaa
repz
ss
jp
and
je
or
xchg
(bad)
scas
daa
(bad)
jg
mov
loop
and
mov
out
cmps
ins
pop
inc
or
mov
fdivr
pop
cmp
ja
stos
gs
dec
adc
in
or
leave
sbb
stos
push
and
dec
lods
dec
dec
push
mov
cdq
push
ror
xchg
loop
jae
push
mov
pop
push
mov
jp
and
rcr
add
sbb
add
loop
sub
adc
jl
fstp
(bad)
lea
inc
bound
add
push
xchg
in
stos
mov
int3
xor
xchg
in
jb
push
add
iret
ret
jne
stos
mov
pushf
inc
(bad)
out
mov
cdq
dec
add
push
push
das
jecxz
pop
fs
mov
mov
mov
leave
lods
aaa
adc
es
jp
dec
cld
inc
mov
call
out
inc
jnp
ins
icebp
dec
frstor
inc
in
fistp
movs
xor
sbb
mov
into
sub
or
movs
jge
jbe
dec
push
cmp
xchg
sub
nop
jns
and
jbe
(bad)
ja
movs
xor
pop
fnstsw
cmc
adc
adc
mov
fist
dec
iret
mov
pop
pop
add
js
inc
test
popa
mov
leave
inc
pop
and
cmp
cli
loope
and
pop
xlat
mov
and
loopne
div
lods
pop
aam
(bad)
jno
test
sub
xor
and
jnp
and
fldz
xchg
xor
inc
jb
(bad)
mov
push
pop
js
mov
mov
retf
test
inc
fwait
stc
nop
cmp
out
adc
push
dec
cmps
add
and
ret
jns
arpl
test
inc
xchg
jne
xlat
jo
xor
jmp
lods
test
nop
aas
fldln2
or
imul
inc
or
dec
mov
mov
pop
and
aad
jmp
or
mov
jno
imul
repnz
cmp
dec
adc
dec
scas
leave
ret
(bad)
out
add
(bad)
mov
jg
aaa
sar
out
cmps
movs
mov
xchg
loope
jbe
push
loope
imul
ss
pop
aad
push
les
ins
ins
ss
xchg
je
xchg
sahf
dec
and
mov
in
and
fucomip
hlt
mov
jg
pop
fsubr
mov
sbb
push
fsub
xchg
dec
(bad)
push
call
ror
push
aad
rcr
sub
popf
xor
lahf
pop
fs
inc
mov
cmp
adc
inc
into
push
or
push
or
mov
(bad)
arpl
mov
ss
xor
mov
(bad)
in
aaa
xchg
test
cli
lods
xor
in
pop
clc
push
inc
ss
sub
sti
(bad)
(bad)
in
jmp
clc
inc
loope
(bad)
cmc
shl
mov
push
pop
mov
fidiv
xchg
and
mov
inc
cmc
retf
data16
ret
out
fadd
or
inc
adc
cmps
push
std
call
jns
clc
hlt
stos
cmp
outs
clc
cmc
push
jb
in
push
and
pop
rol
mov
retf
xchg
cmp
push
cmp
rol
stos
popf
xor
mov
xor
out
jmp
je
push
iret
bound
cmps
adc
imul
retf
stos
test
ret
enter
mov
cdq
push
dec
dec
mov
int3
test
not
adc
push
ins
pop
inc
in
mov
jno
mov
and
jmp
push
in
icebp
mov
and
jl
inc
call
push
dec
rcr
sub
into
je
mov
les
pop
movs
push
test
addr16
shl
hlt
(bad)
jo
or
jge
daa
mov
popf
mov
sahf
sahf
les
aaa
imul
adc
inc
add
dec
shl
xchg
sbb
imul
sbb
adc
add
loope
repz
adc
sahf
int3
ror
xchg
call
inc
call
addr16
mul
int
imul
jmp
pop
es
and
xor
clc
pusha
add
(bad)
push
push
jb
pop
add
mov
mov
loopne
jmp
ss
gs
cli
aas
vpmacsswd
loop
pop
sub
inc
xchg
bound
lods
xchg
add
je
cmc
or
cli
pop
scas
inc
push
pop
and
add
inc
push
jl
dec
mov
pop
sbb
mov
ins
mov
fadd
test
xlat
push
xor
shl
jecxz
out
lea
mov
pop
clc
xchg
int
jno
dec
mov
push
inc
stos
adc
call
push
push
not
pop
inc
test
sahf
call
add
(bad)
in
sbb
or
dec
mov
dec
push
xchg
fisub
pop
popf
popf
push
cmc
dec
mov
stc
or
mov
adc
cmps
test
stos
lea
add
out
int3
pushf
mov
mov
mov
mov
mov
ror
or
add
pop
jb
pop
aas
mov
jno
inc
mov
pop
mov
fwait
add
cwde
mov
pop
out
dec
dec
repz
popf
leave
(bad)
pop
mov
and
out
jns
cmp
sbb
mov
jmp
push
push
mov
pop
sbb
dec
mov
xchg
xchg
repz
int3
pusha
retf
and
dec
in
fstp
jo
adc
iret
(bad)
or
mov
mov
in
enter
clc
fistp
adc
popa
cmp
xor
pop
(bad)
jns
out
lods
adc
jbe
or
das
push
mov
ins
je
jmp
sub
sbb
es
(bad)
aaa
inc
cmp
mov
and
outs
inc
popa
cmp
in
call
jecxz
mov
add
enter
hlt
bsr
xchg
movs
sub
jno
loopne
dec
ficomp
jg
scas
adc
mov
cmp
cmp
scas
mov
push
test
dec
or
xchg
pop
int
add
aam
jge
pop
out
sbb
add
pusha
sbb
add
push
mov
sti
dec
in
add
sbb
clc
and
mov
or
sbb
mov
mov
xor
sets
inc
js
jmp
dec
mov
out
movs
xchg
aas
sahf
cdq
enter
retf
sar
mov
jecxz
movs
or
icebp
mov
jbe
repnz
and
jno
cwde
and
jmp
sbb
int3
mov
loope
inc
int3
mov
dec
xchg
xlat
xor
sub
xchg
dec
dec
scas
xchg
cli
gs
popf
mov
sub
adc
dec
add
add
push
pop
out
xchg
push
(bad)
push
push
dec
cmp
arpl
sub
add
xchg
ret
mov
enter
leave
jl
(bad)
pop
and
daa
xchg
ins
scas
xchg
cmp
mov
fst
pop
vmovdqa
ins
bound
jle
test
or
aaa
out
mov
(bad)
adc
stos
fstp
xlat
xchg
sbb
lds
std
test
mov
adc
cmp
or
mov
scas
ss
add
mov
and
iret
sbb
mov
ss
nop
(bad)
pop
call
sbb
inc
ss
dec
popa
scas
inc
sub
mov
pushf
dec
imul
cmc
cs
inc
arpl
cs
pop
jge
shufps
and
imul
fisubr
sub
cmc
mov
add
fistp
xchg
bound
pusha
or
dec
and
out
(bad)
mov
adc
dec
mov
aaa
(bad)
cmp
push
jmp
mov
mov
clc
sar
adc
sub
inc
in
clc
nop
movs
pop
jge
stos
pop
ror
pop
in
cmp
sbb
sub
loope
cmps
pop
or
sub
(bad)
jmp
xchg
cs
int
rcl
inc
push
mov
sahf
test
repz
cs
loope
xlat
inc
lods
add
inc
dec
pushf
push
cmp
adc
pushf
mov
dec
movs
repz
jne
dec
ret
call
jns
sbb
mov
mov
fdiv
movs
pop
aad
add
mov
(bad)
js
mov
xor
mov
ds
mov
sub
inc
push
rol
mov
xor
push
mov
fcomp
inc
stos
popa
add
jmp
in
cmp
adc
fwait
sbb
lds
jns
inc
arpl
jp
pop
ds
xchg
hlt
(bad)
icebp
std
int3
ds
jecxz
add
ja
inc
and
cli
push
cmp
sub
jbe
adc
sub
sub
into
shl
clc
add
cwde
xor
mov
les
jo
jno
dec
xchg
push
imul
fsub
cmp
enter
jp
xor
stos
ds
add
xchg
test
pop
in
jg
add
jo
adc
out
fs
jle
mov
mov
add
dec
addr16
add
jl
outs
inc
jg
loopne
mov
adc
push
add
(bad)
ffree
test
ret
jo
mov
xor
push
cli
mov
dec
bound
sub
loopne
cld
fs
lahf
mov
cmps
inc
pusha
test
ss
lods
push
int3
rcr
xlat
mov
movs
and
test
test
sub
in
push
aas
mov
dec
popa
mov
inc
inc
mov
outs
(bad)
sti
sub
push
das
(bad)
out
or
jge
jno
gs
dec
and
mov
mov
mov
fdiv
and
xchg
add
sahf
inc
imul
push
push
cld
adc
xchg
rcl
push
fisub
cmp
mul
jo
cmps
test
jae
jno
inc
and
cmc
pushf
push
and
mov
cmc
inc
cmps
mov
shl
in
(bad)
pop
push
test
mov
pop
sub
mov
(bad)
jge
jecxz
mov
shl
mov
jnp
imul
lds
pop
xchg
sahf
cdq
rcr
shr
ja
aas
retf
sub
lahf
in
lods
mov
pop
lds
sti
frstor
mov
and
pop
push
ds
pop
in
xchg
inc
push
sub
and
ret
mov
xchg
lds
mov
dec
and
adc
mov
inc
pop
jp
pop
daa
int
call
data16
jle
add
xchg
ret
and
(bad)
jge
out
push
test
mov
(bad)
adc
jmp
popf
aad
dec
xor
jne
xchg
mov
test
push
sub
in
jl
inc
mov
jb
das
cmp
add
lods
jo
cmp
leave
push
nop
mov
out
jmp
jg
jmp
stc
cld
mov
jp
lods
sbb
fwait
adc
pop
data16
retf
add
daa
call
and
repz
out
mov
hlt
dec
jmp
mov
mov
loop
cld
sub
stos
int3
in
inc
mov
loope
and
pop
jbe
pop
bound
xchg
call
js
outs
sub
es
mov
imul
cmp
cdq
bound
xor
inc
lahf
mov
loopne
imul
stos
dec
in
arpl
mov
or
pop
lahf
int3
jne
pop
outs
mov
sbb
jmp
xchg
addr16
enter
call
gs
int
mov
push
push
mov
inc
sbb
repnz
add
mov
jnp
push
cmp
push
dec
mov
mov
fimul
sbb
jecxz
icebp
adc
sar
pop
fnsave
or
inc
and
xor
cmp
inc
fcom
lahf
jbe
jns
(bad)
dec
(bad)
jnp
or
(bad)
xchg
xor
mov
std
cmps
jo
outs
push
add
pop
fsubr
loope
jbe
sub
call
mov
add
aaa
iret
test
push
sbb
cmp
ret
xchg
sub
mov
jne
sti
push
xor
ror
sbb
out
jle
popf
bnd
sbb
cwde
out
jne
push
stos
in
iret
or
mov
into
xchg
cs
pop
dec
fsubr
fstp
sub
lock
cli
call
mov
add
bound
ret
lock
jg
imul
push
sub
pop
stos
call
mov
pop
or
aaa
xchg
pop
ins
pop
sbb
mov
sbb
jae
sub
repnz
jns
push
add
dec
mul
cmp
xor
xchg
ret
push
mov
mov
mov
mov
mul
push
iret
xor
or
int
imul
ds
mov
dec
ss
repz
es
sahf
and
dec
sahf
jge
mov
inc
rcl
jno
ror
neg
dec
push
ret
enter
or
enter
xlat
loop
stc
jo
arpl
push
les
pop
cmp
inc
inc
mov
sbb
jns
clc
pop
mov
xor
test
test
sub
repz
mov
mov
adc
xchg
imul
dec
shl
ret
popf
push
xchg
push
adc
jp
or
scas
push
mov
add
pusha
lds
popf
pop
dec
fldcw
not
pop
div
pop
and
or
adc
lods
mov
dec
iret
xchg
mov
stc
inc
dec
mov
xchg
push
mov
ror
inc
ds
pop
sub
xor
add
or
add
in
cli
fld
ret
test
mov
in
inc
ror
sbb
xchg
cmp
cmp
int
jmp
and
mov
mov
jp
xchg
jg
sbb
sahf
jns
ror
inc
jb
retf
imul
pop
and
imul
and
xchg
push
xchg
jnp
sbb
or
repnz
sbb
sub
pushf
fdivr
pop
ret
push
xchg
mov
fs
push
pusha
xor
sbb
push
pop
xor
clc
xchg
scas
mov
arpl
or
mov
push
(bad)
jmp
cmps
jg
dec
push
aas
push
push
push
loope
js
sub
dec
mov
sbb
cdq
iret
dec
sbb
adc
inc
jmp
cld
ror
mov
mov
inc
mov
sub
(bad)
adc
sub
xlat
xchg
aaa
push
sbb
xchg
mov
xor
nop
sar
lahf
pop
inc
ins
seto
dec
adc
adc
push
imul
test
into
adc
cmc
xlat
(bad)
xchg
push
pop
xor
dec
dec
push
iret
cmp
jbe
add
or
dec
push
inc
pop
and
fwait
rcr
test
lods
js
sub
aas
rol
std
jp
out
popa
and
bnd
loopne
jl
pop
dec
adc
retf
test
bound
pusha
dec
jbe
push
cmp
out
aaa
mov
inc
mov
pop
mov
inc
aas
pop
add
adc
sar
aad
lock
mov
in
and
pop
pop
ins
int3
fsubp
int
mov
ret
jmp
enter
xchg
mov
sbb
(bad)
cmp
or
(bad)
sub
inc
inc
jns
pop
jns
pop
dec
aas
xlat
repz
sub
iret
aam
push
xchg
js
push
int
scas
jbe
sbb
cmp
repnz
jecxz
push
mov
test
popa
into
imul
pop
dec
xchg
nop
xchg
and
xor
mov
jns
xchg
pop
jns
scas
add
xchg
inc
out
in
ret
in
cmp
sub
rcr
mov
mov
jl
sub
xor
xchg
jmp
xor
loopne
xchg
in
add
pop
repz
call
pushf
push
mov
inc
shl
into
pop
inc
dec
fpatan
sti
iret
nop
jne
fsub
sahf
adc
leave
and
xchg
jle
cli
out
jae
les
xchg
stos
jnp
dec
mov
ins
stos
cmp
out
loop
(bad)
retf
push
cmp
push
stos
lock
and
push
repz
fsubr
pusha
mov
xor
stos
aas
mov
and
cmp
out
add
stc
(bad)
lahf
fcomp
pop
adc
or
cmps
das
daa
pop
xchg
cmp
xchg
adc
imul
sbb
nop
imul
xchg
jns
mov
jns
adc
jo
int
imul
sbb
dec
xor
dec
sub
push
imul
xlat
add
aam
mov
push
inc
pop
and
(bad)
fiadd
mov
xor
ss
stos
les
loope
inc
pop
popf
not
bound
sbb
pop
aad
push
lock
cmp
ins
pop
loope
jmp
enter
ror
push
cmp
rol
pop
cmps
jecxz
inc
stos
aas
mov
xchg
loop
adc
mov
push
test
mov
pop
cmps
mov
loope
mov
pop
push
scas
clc
mov
xor
add
and
div
add
pop
aad
into
or
movlps
inc
adc
hlt
out
(bad)
adc
mov
push
repnz
xchg
sub
cmp
inc
(bad)
push
jbe
jmp
js
push
(bad)
mov
vphaddubq
cmp
sti
push
pop
dec
push
sbb
je
fs
push
cmp
sub
enter
dec
jns
pop
or
xchg
and
xchg
cmp
cmp
in
or
mov
(bad)
and
push
inc
lock
je
mov
stos
fxch
(bad)
jb
jle
and
xchg
loopne
test
adc
movs
movs
inc
push
sbb
icebp
test
stc
dec
mov
mov
jp
div
pushf
or
push
pop
pop
and
scas
repz
inc
enter
xchg
cmp
xchg
inc
jmp
xor
mov
inc
js
fst
mov
clc
loope
jp
test
pop
and
inc
addr16
inc
out
mov
xchg
inc
mov
in
movs
mov
push
push
push
in
movs
dec
xor
dec
cdq
cld
sub
and
nop
or
mov
pop
iret
test
xchg
or
adc
dec
scas
add
fwait
dec
mov
adc
sbb
sti
fnsave
dec
add
dec
mov
cdq
sub
lods
sub
jle
inc
(bad)
pop
stos
sbb
add
xchg
dec
loope
inc
scas
cmp
call
fsubr
ins
xor
popa
(bad)
cmp
jge
and
or
xchg
mov
out
mov
jecxz
test
fdiv
or
retf
jmp
xchg
loope
ins
fdivr
push
cmps
inc
nop
jmp
je
(bad)
and
ins
sbb
inc
sbb
jge
fs
int
jb
cs
mov
mov
pop
stos
shl
adc
adc
(bad)
cwde
cwde
enter
test
test
mov
cmp
mov
fsub
mov
imul
mov
mov
fcom
fisubr
aad
loop
pop
sbb
and
(bad)
inc
aam
repnz
or
sub
retf
xchg
popa
loop
pop
in
mov
jae
jnp
cmp
fmulp
and
(bad)
je
test
and
push
data16
imul
xchg
add
or
loope
pop
jns
dec
or
jns
cld
(bad)
pop
mov
mov
mov
add
sub
cmps
push
adc
mov
jno
scas
rcr
pop
adc
inc
add
test
add
mov
sub
fs
xchg
adc
mov
icebp
aaa
lea
daa
aas
add
xor
xchg
adc
pop
in
dec
cmp
inc
xchg
pop
and
jb
shl
cmc
(bad)
ror
jne
jge
jae
fwait
push
fst
push
adc
xchg
xchg
mov
push
popf
loope
ja
scas
gs
loope
push
pop
jmp
mov
push
into
(bad)
adc
ficomp
jb
rol
in
in
div
fstp
es
mov
mov
mov
or
ja
fistp
into
shl
mov
retf
arpl
pop
daa
inc
pop
jmp
mov
cli
movs
cmc
mov
cwde
sub
(bad)
data16
sub
in
mov
adc
aas
jb
xor
lods
jns
(bad)
jmp
push
imul
pop
mov
jns
sbb
call
and
sbb
cmps
addr16
sbb
adc
xor
cmc
push
mov
fwait
jecxz
or
mov
and
in
jle
fimul
mov
dec
movs
out
leave
clc
or
ret
ret
mov
test
adc
iret
mov
cmps
and
lahf
mov
(bad)
stc
rcr
out
xor
push
adc
ss
jno
push
jmp
cmp
sub
sub
outs
ror
or
gs
sbb
sbb
inc
sbb
fldcw
xchg
sub
les
popf
xor
adc
and
sahf
push
cmp
js
rcr
pop
push
in
mov
das
aaa
arpl
fmul
sti
jo
test
and
and
mov
pop
inc
sub
hlt
inc
lahf
add
sub
aas
loope
pop
jmp
or
push
cmp
jg
(bad)
outs
hlt
mov
outs
aad
or
xchg
(bad)
mov
xor
push
pop
mov
aad
ja
cli
lahf
sub
in
loopne
adc
dec
outs
mov
mov
jg
(bad)
adc
push
mov
les
ucomiss
jp
cmp
inc
sub
sbb
or
enter
jle
or
dec
sbb
out
jae
dec
xor
xlat
jb
leave
cmc
in
js
jg
cld
xchg
gs
call
ficomp
lods
(bad)
fstp
push
lods
cmp
aaa
out
iret
neg
cli
imul
and
cmp
out
and
mov
jmp
daa
jmp
mov
int
ds
pusha
inc
mov
and
sub
inc
mov
jo
cdq
and
outs
scas
add
mov
and
mov
xlat
pop
mov
jno
out
jg
leave
mov
add
push
retf
cmp
sub
push
out
aaa
dec
fidiv
jmp
hlt
jmp
inc
or
test
test
cwde
push
mov
fcmove
push
push
nop
gs
shl
xor
push
ja
sbb
mov
fstp
rcl
mov
sbb
shr
retf
pop
lods
mov
pop
ret
push
mov
mov
inc
sbb
movs
inc
jg
in
adc
mov
data16
push
xchg
popf
icebp
adc
cs
into
push
ins
push
imul
jl
xor
popf
movs
mov
jle
scas
cmp
mov
sbb
pop
add
out
xor
(bad)
fidivr
jbe
fs
imul
aam
pushf
or
cmp
dec
adc
aam
in
add
retf
fwait
xor
mov
test
fnstsw
cld
mov
popf
gs
adc
or
pop
cmps
lods
jmp
cmp
stos
xor
pop
push
push
mov
cli
jg
ret
cli
sub
and
aas
or
mov
js
xchg
mov
sub
pop
jp
hlt
mov
inc
inc
mov
sub
icebp
xchg
pop
int
xchg
and
rol
xor
inc
adc
push
fs
push
xor
mov
ja
jbe
hlt
xor
mov
lds
ja
xchg
je
mov
xchg
adc
dec
ret
push
push
dec
sub
dec
ds
and
add
mov
movs
push
adc
fidiv
dec
movs
inc
push
sbb
and
xchg
xchg
adc
mov
loopne
(bad)
cmc
xchg
and
and
adc
lock
lds
(bad)
imul
addr16
inc
add
sbb
dec
mov
sbb
mov
jae
xchg
out
cmp
add
adc
cld
xor
push
les
movs
ret
fldenv
mov
and
pop
add
lods
shl
cld
jo
mov
je
xchg
clc
cmps
fs
push
rcr
mov
adc
arpl
xchg
jo
pop
aaa
lock
mov
pushf
xor
xchg
hlt
imul
mov
xchg
add
cs
cmp
pop
inc
dec
repnz
push
mov
mov
leave
push
int
xor
loop
mov
sti
(bad)
loopne
cwde
xchg
mov
sub
sub
sub
(bad)
int3
adc
sbb
mov
sub
pop
xor
pop
pop
jp
xor
mov
adc
shl
mov
out
xor
js
int3
fwait
mov
inc
or
mov
dec
dec
sti
adc
pop
pop
fadd
pop
fcmovb
(bad)
fcmovnbe
mov
xchg
sbb
jns
daa
cvtdq2ps
lea
jb
inc
ror
xchg
int
jbe
call
aad
jecxz
shl
pop
push
sti
jae
pop
xchg
stos
cmp
xchg
xor
daa
sbb
push
inc
jb
mov
ss
dec
inc
or
sub
xchg
lock
sbb
ins
ret
mov
xchg
mov
out
xor
adc
xchg
hlt
fdivr
movs
imul
push
ret
jge
push
nop
cld
ins
cs
pushf
jb
mov
add
and
cwde
es
std
out
inc
xchg
in
push
pop
loopne
imul
push
mov
retf
out
jmp
dec
sbb
inc
scas
cmp
push
test
xchg
jno
loopne
arpl
sbb
push
pop
sbb
mov
sbb
push
outs
pop
pop
and
push
test
jnp
loopne
(bad)
(bad)
repz
jecxz
mov
mov
rcr
mov
or
inc
push
int3
enter
stc
shl
sub
add
sbb
push
pop
ds
les
inc
pop
(bad)
ds
pop
xchg
or
push
xor
shl
sti
mov
pop
sbb
push
xor
cli
retf
mov
lds
xchg
stc
imul
dec
mov
push
(bad)
mov
push
repz
add
into
test
mov
push
neg
(bad)
fcom
inc
(bad)
adc
lea
into
stos
stos
shr
or
pusha
dec
call
stos
ss
pop
add
mov
jb
out
dec
xor
dec
push
lock
lea
sahf
pop
arpl
jl
mov
psraw
inc
cli
or
std
dec
iret
cwde
repz
out
sub
imul
or
jae
push
sbb
imul
and
rol
nop
or
sahf
sahf
mov
or
rol
ja
(bad)
pop
scas
and
mov
clc
add
or
jle
pop
mov
clc
icebp
jmp
test
add
adc
out
mov
fsubr
add
and
(bad)
cdq
fisub
sub
test
fstp
xchg
mov
(bad)
popa
jae
in
mov
scas
pop
jne
inc
xchg
stos
mov
mov
mov
enter
jp
add
adc
or
clc
cmps
sbb
(bad)
movs
sar
mov
inc
inc
popf
mov
repnz
and
sub
add
push
in
adc
and
stos
adc
cmps
sub
pop
add
mov
imul
outs
adc
xchg
push
dec
lods
call
add
or
fild
xor
out
sub
or
in
popf
push
push
dec
lods
cmps
ja
ja
inc
stos
cs
jbe
sub
shr
out
mov
sbb
arpl
xlat
pop
popf
icebp
out
call
sbb
adc
dec
pop
shl
sbb
pop
cmp
scas
ret
and
rol
shr
push
mov
test
in
(bad)
hlt
jge
add
cs
push
adc
int3
cmp
inc
cmp
pop
xchg
xor
cmp
loope
popa
add
into
into
adc
repnz
pusha
mov
jo
jae
pop
push
les
sub
sub
int
pop
sub
mov
in
mov
and
in
lods
jne
loop
aad
mov
jg
stc
imul
(bad)
adc
dec
popa
std
push
xor
add
das
xchg
jae
xchg
mov
cmp
data16
cmp
ficom
mov
shr
inc
add
sub
not
inc
jg
lahf
das
fist
enter
pop
inc
popf
mov
push
xchg
mov
mov
xchg
aaa
mov
pop
cmp
add
jge
in
or
jge
or
inc
(bad)
out
mov
fs
mov
je
jl
mov
and
(bad)
adc
inc
mov
jne
mov
addr16
nop
xor
sub
sbb
popf
test
jae
fidiv
xchg
stos
outs
or
and
dec
in
sub
jns
in
imul
lahf
mov
bound
daa
and
in
ss
jge
aaa
and
sub
push
rcl
scas
ins
int3
pop
sbb
jp
jecxz
dec
das
mov
mov
xchg
or
arpl
or
out
out
popf
pop
aaa
jae
sub
dec
dec
(bad)
sbb
inc
xchg
xchg
fwait
cdq
sub
jmp
sub
cwde
mov
cli
cs
xor
add
push
leave
movs
stc
(bad)
sub
or
das
dec
xor
inc
jae
pop
jae
pop
sar
scas
paddusb
add
fadd
pop
or
clc
cwde
out
mov
or
mov
push
push
fcomp
sahf
test
cmp
mov
(bad)
xor
jle
xor
mov
mov
mov
xor
dec
loope
int
mov
les
call
pop
dec
sub
inc
cmps
rcl
inc
enter
or
fimul
outs
dec
pusha
gs
aad
icebp
in
in
xor
mov
mov
jle
data16
aad
ins
push
bound
in
and
aas
cmc
cmp
xor
dec
mov
popa
cdq
pop
dec
fwait
push
(bad)
push
lea
and
sbb
mov
stc
mov
push
adc
out
cwde
and
js
or
add
sbb
sub
adc
xchg
mov
push
pushf
mov
mov
and
and
mov
fs
data16
in
aas
lds
jp
and
mul
aam
aaa
out
mov
fiadd
mov
hlt
(bad)
mov
std
push
rcr
repz
gs
push
jbe
inc
popf
lea
jecxz
cld
inc
sub
sub
mov
add
jbe
ins
pushf
xchg
sahf
cmps
mov
add
outs
push
inc
out
inc
xchg
jbe
and
push
scas
dec
(bad)
sub
push
mov
dec
(bad)
cmps
cdq
mov
xchg
sahf
pop
(bad)
mov
adc
xor
fld
cmp
stos
pop
add
sbb
fmul
dec
in
hlt
fcom
dec
pop
pushf
sar
and
enter
xlat
xchg
add
inc
and
fs
adc
div
js
sbb
cmp
stc
test
push
and
push
imul
or
mov
sub
cdq
jle
jb
xchg
push
lods
sbb
jns
push
cmp
iret
xor
add
push
inc
jne
pop
inc
mov
push
and
xchg
fisubr
inc
pop
lds
mov
lods
push
icebp
call
sahf
out
in
xchg
aaa
push
mov
pop
int
stos
mov
lea
or
or
and
retf
inc
dec
pop
mov
mov
cmps
fadd
push
add
xchg
in
pusha
sbb
and
sbb
cmp
push
call
pop
fs
(bad)
mov
inc
or
mov
mov
rcr
xchg
jno
and
pop
pop
jmp
cld
mov
fwait
mov
imul
mov
mov
sub
mov
mov
adc
mov
out
cli
bound
mov
es
cwde
jp
push
lods
shl
retf
in
les
sub
ins
cld
sbb
mov
inc
mov
mov
inc
adc
cmps
mov
rcl
mov
xchg
push
dec
dec
test
neg
lea
test
mov
repnz
sbb
repz
adc
and
sub
test
ins
cmps
jecxz
(bad)
call
mov
or
sti
push
xor
stc
out
das
adc
and
cs
jo
loope
retf
inc
inc
adc
(bad)
jmp
ds
retf
push
retf
mov
mov
xchg
js
sbb
pusha
shr
xchg
aam
ret
shl
and
test
sti
mov
xchg
(bad)
dec
push
mov
test
rcl
cs
pop
xor
pop
mov
fadd
cmp
pushf
retf
pop
mov
sub
inc
and
pop
mov
lock
test
push
xchg
xor
(bad)
lahf
and
and
mov
ja
mov
mov
std
mov
xchg
shr
mov
imul
adc
shr
pop
push
loopne
out
out
aas
in
mov
movs
mov
int3
push
mov
mov
jo
pop
mov
cmp
int
into
adc
cld
rcr
out
inc
push
or
movd
push
and
sbb
les
jmp
mov
push
das
jnp
lock
into
in
inc
mov
cmps
mov
sar
or
inc
sbb
out
aaa
or
dec
mov
adc
jae
jp
popa
sub
xchg
add
mov
add
test
das
dec
and
xor
mov
imul
mov
scas
push
sbb
cmps
iret
ficom
rcl
lahf
jb
inc
shl
outs
lds
pop
inc
and
add
dec
in
sti
or
xor
dec
(bad)
xchg
in
push
js
mov
jecxz
aam
xchg
push
stc
call
jne
hlt
or
std
adc
or
inc
inc
loop
scas
mov
xor
stos
addr16
push
pop
xor
pop
nop
pop
outs
mov
sub
inc
mov
loopne
sbb
test
push
jecxz
push
xchg
sar
xor
mov
je
ss
and
out
jns
jmp
and
mov
int
or
mov
dec
xor
sbb
jle
out
iret
pushw
sub
xchg
(bad)
mov
ins
or
jl
push
popf
pusha
add
sub
(bad)
mov
in
adc
cs
aad
inc
add
repnz
dec
mov
adc
movs
mov
imul
lock
addr16
(bad)
cmp
shl
inc
out
repz
popf
fmul
push
out
shl
xor
pop
sbb
pop
sub
js
pushf
arpl
rcl
mov
mov
push
imul
add
aad
push
pusha
dec
dec
and
loop
xchg
test
jb
repz
sub
cmp
retf
test
aas
pop
xor
mov
jle
out
mov
iret
lock
pop
sbb
fist
push
je
fbld
fwait
icebp
or
adc
fimul
clc
adc
mov
inc
mov
pop
popa
shr
int3
retf
scas
xor
sub
mov
not
lahf
out
jmp
es
es
mov
jne
scas
rcr
mov
psubd
cmps
jmp
sub
daa
inc
jl
push
inc
adc
daa
and
movs
xchg
(bad)
stc
lahf
shl
loopne
xlat
xlat
sbb
dec
call
sbb
sbb
imul
imul
add
mov
push
dec
sbb
jbe
fxch
mov
call
sbb
mov
cli
in
xchg
push
jno
cli
cmp
or
or
add
sti
mov
fiadd
jle
repnz
mov
(bad)
cmp
pop
jmp
lahf
dec
call
pop
daa
dec
sub
inc
(bad)
cmp
mov
retf
jp
cdq
in
dec
lock
inc
xchg
sub
outs
(bad)
sub
cmp
aam
mov
xor
sahf
xor
or
out
data16
pop
loope
xor
aaa
push
imul
xor
ret
jle
pop
leave
das
fninit
adc
ds
sbb
pusha
and
mov
mov
inc
aas
out
xchg
mov
cmp
inc
leave
stc
jo
pop
ss
or
mov
mov
or
movs
mov
inc
mov
adc
dec
add
mov
cwde
sar
inc
aam
aam
or
hlt
retf
call
lds
out
daa
sbb
pop
push
sbb
in
push
dec
vpand
aad
int
xchg
aam
dec
lds
jmp
xor
addr16
add
xor
push
std
or
fld
mov
xor
lahf
(bad)
xor
add
adc
mov
cmp
lea
xchg
inc
sub
mov
scas
sti
out
mov
dec
mov
xor
loopne
lods
mov
bound
inc
(bad)
sub
pushf
out
daa
mov
mov
ja
jle
out
retf
mov
dec
loop
xchg
movs
mov
fs
cdq
dec
or
leave
mov
cdq
ret
mov
lea
cmp
xor
gs
shl
(bad)
inc
jmp
jo
mov
fadd
add
jmp
movs
cmp
xor
lods
fnstsw
push
mov
(bad)
(bad)
mov
mov
fnsave
std
dec
je
stos
adc
mov
stos
pop
fmul
(bad)
aad
inc
mov
popf
mov
pusha
test
loop
leave
push
cli
lods
out
fldcw
or
jns
jge
sbb
mov
cld
call
pusha
cli
bound
cmp
sub
aaa
iret
sbb
in
or
outs
icebp
in
jbe
adc
and
pop
dec
loope
jmp
mov
ss
repnz
push
add
mov
enter
pop
or
mov
pop
iret
xchg
and
xor
mov
cmp
test
sub
test
outs
jmp
xchg
jns
add
cmp
push
outs
sub
push
fsub
arpl
jb
adc
mov
and
add
push
mov
inc
xchg
jns
in
not
inc
or
xchg
xchg
rcr
stc
inc
mov
cmp
mov
loopne
xchg
inc
jp
jae
addr16
leave
adc
xchg
mov
or
pop
or
mov
jmp
out
add
bound
adc
cmc
cmp
into
xor
xor
pusha
mov
lahf
jne
add
gs
xor
cmp
sub
movs
xor
and
(bad)
jmp
leave
retf
xchg
adc
test
mov
cmp
and
or
sbb
pusha
add
cs
push
into
or
inc
pop
pop
test
mov
jle
add
fist
sbb
dec
jne
sub
xor
mov
mov
fidiv
xor
setge
(bad)
aaa
pop
mov
xchg
ja
pop
or
xchg
std
in
repnz
dec
repnz
mov
dec
or
jne
ror
adc
sti
(bad)
stc
je
sti
(bad)
sub
not
arpl
add
in
cmp
push
outs
out
inc
aas
icebp
pop
pop
sub
push
xchg
loop
gs
stc
mov
jl
mov
inc
jle
sub
repz
fwait
or
or
(bad)
scas
xor
(bad)
fcom
adc
repnz
mov
ja
(bad)
js
mov
mov
ret
adc
gs
iret
popa
loop
in
xor
xchg
push
mov
or
inc
cmp
lods
daa
(bad)
inc
lods
iret
inc
test
je
push
adc
das
pop
sbb
pop
adc
ret
out
inc
(bad)
daa
sbb
dec
inc
out
pop
hlt
out
call
pop
cmp
mov
mov
or
iret
mov
(bad)
xchg
fidiv
cmc
or
nop
adc
inc
mov
adc
jno
inc
cmc
sahf
pop
mov
cwde
add
jecxz
loopne
daa
rcl
fist
jmp
and
fwait
or
arpl
imul
fild
lahf
idiv
loopne
bound
xchg
ficomp
in
add
test
mov
cdq
and
lahf
cmp
scas
xchg
daa
jmp
mov
loopne
cmp
pop
pushf
inc
push
ret
dec
jne
ficom
enter
xchg
xchg
out
push
call
imul
or
add
stc
aam
add
stos
popf
into
aad
add
stos
xchg
add
(bad)
cmp
out
or
in
rcr
push
mov
jl
push
inc
aad
adc
sbb
mov
xchg
hlt
mov
jl
xor
(bad)
icebp
scas
pop
xor
mov
pop
jmp
loop
xchg
push
inc
call
adc
stos
test
push
inc
ret
and
mov
je
outs
fisub
jge
xor
ins
int
push
and
jmp
xor
adc
mov
loop
and
cdq
or
jmp
sti
dec
outs
ins
ins
out
or
daa
jmp
and
jmp
push
xor
sbb
mov
lds
add
cld
inc
jno
sub
xchg
sbb
sti
and
dec
and
cmp
outs
jmp
cld
test
mov
mov
dec
cmps
fdiv
xchg
push
dec
pop
sub
adc
sbb
dec
ror
and
fwait
imul
xchg
push
or
and
cdq
nop
push
xor
cmp
leave
push
pop
imul
sbb
sub
cmp
outs
(bad)
gs
mov
jecxz
pop
fnstcw
jp
hlt
mov
movs
cmp
push
adc
movs
sti
ret
and
fwait
into
xor
pop
xor
(bad)
xchg
mov
mov
lock
push
or
out
push
repnz
js
test
fistp
jg
xor
mov
fcomp
lock
shr
push
and
test
stos
jle
cmp
out
ror
pop
mov
xor
and
jp
xchg
sub
arpl
fsub
xchg
mov
shl
mov
mov
lods
sbb
fs
call
pop
mov
pop
sub
cld
or
jno
clc
mov
push
add
int3
mov
loop
mov
mov
dec
rol
frstor
pop
mov
scas
hlt
xchg
xor
jp
or
lds
loopne
mov
(bad)
(bad)
sti
js
das
push
dec
or
ja
cmp
fdivr
sbb
xchg
or
mov
mov
dec
adc
hlt
pop
mov
shufps
ins
mov
xchg
fcomp
mov
sbb
pop
cld
pop
sub
pop
out
scas
dec
inc
imul
in
repnz
cmp
lea
hlt
shl
xlat
add
aam
das
inc
sub
or
add
cmp
imul
mul
pop
rol
adc
sub
rcr
iret
cmps
into
cmp
cmp
fstp
(bad)
test
sub
xabort
nop
aaa
mov
cs
push
dec
pop
adc
mov
sbb
fsub
int3
or
mov
cld
xor
outs
pop
cmp
push
xchg
or
dec
jo
sub
popa
or
(bad)
(bad)
cmc
push
int
(bad)
imul
sbb
jge
clc
mov
cmp
in
jnp
mov
push
fs
jnp
xor
or
cmps
mov
lea
push
pop
in
pop
pop
add
push
and
push
jae
fwait
mov
ret
mov
mov
cmps
adc
in
aas
iret
jo
aas
mov
jge
mov
jge
rol
mov
jmp
mov
sbb
pop
(bad)
ja
frstor
dec
inc
les
mov
pop
fcomp
fisttp
shr
sbb
xchg
cmp
jnp
leave
jo
sar
lock
daa
adc
movs
test
sbb
fnstenv
int3
xchg
mov
call
mov
cld
out
and
ins
out
cmp
dec
aaa
sbb
add
inc
xchg
stos
adc
stc
ficomp
imul
sub
xchg
mov
and
ss
mov
ss
sbb
fidivr
push
jp
push
repz
jle
lods
and
mov
ins
push
ins
movs
xor
rcr
cwde
pushf
adc
fstp
sbb
jae
or
lock
jmp
and
fild
fiadd
in
add
nop
and
add
loope
mov
sbb
les
leave
sub
or
icebp
imul
in
sub
lods
sub
neg
neg
addr16
pop
adc
ins
int
push
push
dec
mov
and
cld
pop
aam
idiv
cld
das
test
(bad)
dec
test
jge
xchg
ds
(bad)
and
pop
sub
add
jp
inc
mov
mov
sahf
test
pop
(bad)
iret
jecxz
sbb
mov
retf
(bad)
jl
pop
imul
lds
daa
mov
or
mov
rol
cwde
(bad)
popf
xchg
mov
dec
aad
in
cmp
push
and
in
add
adc
fwait
adc
icebp
mov
cmp
inc
mov
cmps
or
sbb
cmc
add
dec
xor
push
mov
inc
xor
add
ds
stos
shl
sar
cmps
cld
mov
dec
outs
inc
push
mov
jmp
pushf
sbb
or
pop
lods
aaa
fbstp
cmps
or
rcl
mov
and
push
inc
adc
je
mov
pop
in
popa
add
mov
movs
repnz
jo
cmp
add
je
test
movs
mov
inc
push
pop
mov
xchg
dec
mov
mov
jg
mov
xchg
jl
repz
dec
mov
mov
movs
cmp
xchg
adc
mov
out
cmps
sub
adc
xor
les
dec
mov
jg
enter
sbb
in
shl
fs
mov
push
mov
loope
sub
popa
jne
pop
rsqrtps
mov
mov
hlt
pop
lea
inc
xor
inc
sbb
dec
push
jle
leave
shl
jno
sbb
movs
scas
add
xchg
pop
sub
in
lds
add
mov
jns
add
mov
arpl
mov
jp
mov
(bad)
and
ret
int3
and
push
cwde
jb
in
sbb
xchg
dec
inc
shl
and
push
xchg
add
and
les
ret
fdiv
xchg
mov
pop
pop
jae
clc
(bad)
and
mov
repz
jmp
jecxz
stos
int
fisttp
call
pop
and
inc
push
test
fwait
and
inc
inc
xchg
sar
jo
arpl
int3
stos
lock
jecxz
sub
imul
dec
xlat
outs
out
arpl
fxch
scas
loope
xchg
or
mov
push
dec
mov
in
daa
or
shl
outs
fdivr
movs
pop
inc
cmp
(bad)
inc
mov
idiv
dec
fucom
mov
jp
xchg
ss
xchg
jmp
push
sbb
mov
movs
sbb
inc
ds
cmp
jge
sub
push
ins
div
std
in
aas
scas
dec
iret
xchg
jmp
dec
pop
jmp
xor
xor
inc
push
pop
int
add
mov
in
in
add
inc
xchg
ja
pop
inc
jge
jmp
scas
xchg
or
dec
add
jp
imul
pop
aas
mov
dec
(bad)
out
sub
pop
xor
iret
add
lock
xchg
jne
push
rol
and
cmc
cli
test
ret
sahf
push
jnp
hlt
iret
jecxz
ror
xchg
mov
arpl
scas
test
ror
addr16
mov
xchg
xor
aam
mov
fcmove
pop
pop
imul
pusha
and
xor
jb
shl
push
dec
mov
push
cld
test
fnsave
xchg
mov
xor
sbb
dec
aaa
push
fucomi
iret
test
jmp
repnz
cmp
push
xchg
pop
mov
neg
jo
nop
xchg
in
dec
aam
lea
aaa
test
test
mov
dec
arpl
stc
sti
out
addr16
lock
xchg
add
retf
add
(bad)
fs
test
and
sub
aam
mov
jmp
data16
clc
and
pop
pop
xor
clc
ja
mov
sub
or
test
jmp
xchg
int
out
out
pop
imul
in
sbb
push
add
mov
sti
into
sbb
inc
dec
ins
daa
mov
inc
xlat
sub
or
inc
pop
out
sti
ss
cmp
mov
sbb
loopne
jb
jmp
mov
add
push
mov
pop
sub
loopne
mov
jb
inc
leave
jns
mov
cmps
sub
jns
aad
mov
xchg
(bad)
push
fld
or
ins
daa
lds
cmps
fstp
inc
inc
movs
std
inc
pop
cwde
mov
sub
push
lea
movs
popf
movs
test
scas
pop
in
jno
mov
iret
sbb
ror
adc
std
and
out
ss
ss
jnp
inc
jo
sbb
adc
adc
sbb
xchg
cli
jne
xchg
jns
sub
push
(bad)
adc
aad
icebp
pop
not
push
imul
dec
ins
test
ror
xchg
cdq
mov
jmp
pop
mov
call
jnp
push
popa
jnp
int
dec
push
sub
test
xchg
add
stos
fisub
ins
push
lea
pop
xchg
jne
pop
ja
fstp
or
pop
shl
aas
push
sub
loope
inc
sub
jmp
sbb
test
mov
xchg
repnz
and
out
jb
cmp
and
xor
retf
in
push
jb
out
not
out
mov
sbb
shl
lds
mov
lods
jmp
std
jb
popf
inc
push
inc
pop
lahf
lahf
sbb
adc
sbb
loop
ins
cmp
xchg
sub
push
push
jecxz
fcomp
fs
xchg
popa
mov
push
(bad)
in
pusha
xor
mov
xchg
ja
gs
(bad)
pop
(bad)
fdiv
bound
xchg
dec
or
jmp
push
dec
test
loopne
cli
inc
and
mov
pusha
sar
adc
(bad)
scas
xor
ins
test
jo
movs
ins
call
jmp
pop
adc
xchg
pop
push
and
std
add
inc
rcl
daa
enter
cdq
fld
jb
sub
cmp
or
pop
push
fst
(bad)
mov
mov
and
fstp
fwait
mov
pop
adc
adc
dec
inc
out
fucom
cmp
pop
xchg
adc
dec
push
mov
mov
jbe
sub
xchg
xchg
idiv
push
jns
pop
jge
adc
add
adc
inc
xor
jl
mov
hlt
jle
sti
in
mov
jmp
sbb
out
sbb
(bad)
and
pop
dec
add
dec
jb
(bad)
and
push
outs
sub
jle
mov
lods
inc
and
jo
or
sar
outs
arpl
push
jmp
icebp
cmps
imul
jge
clc
add
rol
pop
jle
cmp
data16
jb
mov
fs
adc
jl
mov
icebp
xor
ins
je
push
mov
movs
add
adc
lock
fwait
push
cmps
sub
les
mov
data16
retf
dec
mov
xchg
popf
in
movs
or
xchg
mov
pop
fild
not
pushf
movs
in
pusha
loopne
sub
out
pop
xor
cmp
shl
in
fst
and
ins
or
pop
das
jp
repnz
and
dec
dec
shr
mov
jae
push
push
inc
cwde
leave
sbb
or
(bad)
aam
and
mov
call
dec
clc
stc
mov
xchg
sbb
jnp
pop
dec
fcomp
not
push
or
inc
mov
push
xchg
int3
cli
adc
sub
xor
adc
div
outs
repnz
jb
add
aad
into
gs
add
jmp
arpl
out
sbb
push
outs
shl
xlat
add
xchg
enter
sti
mov
jo
sbb
push
retf
icebp
int3
or
dec
cmc
push
call
cdq
jl
xor
lea
inc
xor
cmp
adc
mov
push
sub
adc
jecxz
pushf
(bad)
push
cli
mov
and
xchg
in
jo
inc
pusha
js
or
stc
sbb
push
push
lds
hlt
sub
ins
jecxz
add
add
sub
jl
jmp
mov
sbb
xlat
inc
mov
jle
ret
sub
pushf
mov
sbb
or
sbb
daa
xor
xor
push
or
addr16
fiadd
pop
outs
cmp
add
sub
loop
addr16
cmp
add
and
cmp
sbb
fs
int
pop
(bad)
(bad)
jno
cli
sti
ja
popf
shl
int
stos
cmp
and
movs
adc
adc
mov
sub
rcr
and
and
dec
fidiv
leave
push
jae
(bad)
js
sub
and
shr
clc
bound
fwait
imul
mov
pop
scas
pusha
mov
push
push
test
fild
push
data16
and
jl
stc
ins
ficomp
cmp
jns
jge
add
in
stc
cs
cmp
xchg
xor
mov
cmp
cmp
jp
dec
push
(bad)
(bad)
arpl
and
jecxz
jecxz
aam
fwait
sar
repz
push
jne
adc
push
add
(bad)
test
int
push
xor
pop
scas
dec
dec
xchg
aad
ja
or
add
mov
pop
fs
and
movd
add
lods
lock
fldcw
or
push
mov
pop
fdivrp
adc
ret
not
hlt
or
inc
add
lea
sti
call
mov
mov
les
loopne
jmp
in
push
pop
xor
mov
je
cmp
cmps
and
sub
jmp
jp
lods
imul
test
mov
rol
repnz
xlat
loopne
xchg
adc
jae
pop
inc
inc
repz
dec
lock
dec
xor
ror
je
inc
addr16
sub
out
mov
ins
xchg
jnp
popa
dec
push
pop
or
cmc
lahf
aaa
jg
adc
sar
xor
scas
xor
cmp
cdq
fistp
mov
int3
or
pop
je
enter
push
cdq
mov
lds
jae
imul
stos
add
mov
scas
pop
retf
push
or
mov
ins
daa
(bad)
mov
stos
es
sub
jge
dec
add
sbb
sbb
hlt
push
call
les
or
jge
mov
adc
lahf
jle
aas
popa
cmps
int
sti
cmp
mov
inc
sub
xchg
add
mov
inc
add
test
push
adc
sbb
push
jo
ins
xchg
daa
add
cs
js
pop
push
push
iret
jnp
xlat
add
jbe
adc
sbb
les
push
clc
inc
push
pop
xor
mov
jecxz
lock
pop
test
push
adc
sub
shl
jmp
pop
fld
cdq
in
xor
pop
sub
or
xchg
mov
or
das
mov
mov
inc
mov
push
sar
lods
mov
inc
sahf
jmp
jecxz
xchg
cdq
fs
sub
ret
push
out
push
repz
add
test
das
add
sbb
add
sub
xlat
or
dec
lahf
xchg
outs
jb
mov
stos
dec
sub
push
mov
mov
inc
ret
xor
push
add
std
pusha
push
movs
and
dec
jbe
ror
ins
popf
xchg
add
ret
pop
scas
loope
test
fdiv
pop
or
pop
bound
cmc
push
mov
lock
adc
jmp
aam
icebp
ja
sub
mov
push
lods
add
mov
pop
fs
mov
daa
daa
jnp
xchg
fdiv
ficom
add
imul
test
mov
mov
xchg
ds
enter
ss
pop
gs
mov
les
ret
shr
mov
jmp
add
fsub
jbe
(bad)
push
call
pop
and
aam
inc
xchg
xchg
jae
pop
or
sub
push
mov
sub
jg
jmp
test
adc
popa
aas
and
inc
out
movs
out
and
dec
enter
out
pop
(bad)
out
mov
dec
daa
mov
hlt
mov
add
daa
inc
mov
mov
movs
mov
retf
popf
mov
mov
add
(bad)
push
mov
xor
push
add
(bad)
sub
mov
cmp
aam
mov
es
in
ss
pop
cwde
inc
lahf
imul
lahf
clc
cmp
scas
sbb
mov
out
dec
add
js
push
and
out
or
mov
out
inc
stc
add
xchg
lea
call
leave
add
mov
mov
repnz
lock
pop
push
in
mov
push
pop
or
lahf
or
cs
xchg
push
sar
xchg
popf
jbe
ret
out
repz
jmp
loopne
bound
fld
and
das
xchg
jnp
imul
add
retf
nop
ret
or
iret
inc
bound
in
adc
mov
ss
or
sar
aam
call
cmp
mov
js
aas
jne
mov
jp
cdq
fcmovu
or
iret
neg
or
outs
inc
test
mov
pushf
mov
nop
and
push
sbb
jg
inc
fstp
aaa
sbb
mov
xchg
sbb
push
dec
arpl
xchg
fimul
sbb
fcom
pop
or
fwait
inc
(bad)
dec
mov
imul
cli
lahf
cs
rcl
sar
sbb
lock
mov
not
fiadd
xor
inc
aas
inc
mov
outs
cs
jg
and
cmps
xor
mov
out
push
jle
neg
mov
sti
call
pop
push
cmp
pop
inc
sbb
pop
push
icebp
xor
xchg
rcr
leave
push
aaa
inc
sbb
pushf
leave
fwait
sub
iret
or
or
push
xchg
pop
cmp
pop
dec
pop
or
push
sub
mov
movs
xor
sub
push
ror
imul
neg
or
sbb
xor
jo
and
pop
and
call
mov
jmp
add
jge
int
(bad)
pop
retf
xchg
(bad)
pop
mov
and
sub
mov
(bad)
retf
(bad)
aas
retf
sbb
cmps
das
pop
add
mov
das
or
adc
pop
popf
inc
lock
and
jnp
add
lahf
jge
lea
mov
cld
outs
push
xchg
jns
cmp
repz
rol
aad
push
xchg
retf
(bad)
xchg
and
mov
dec
push
fimul
jl
mov
xor
cmc
repz
mov
jl
cmp
mov
ds
pushf
sbb
imul
ins
retf
inc
ins
xor
cmps
dec
pop
inc
inc
add
imul
xchg
or
cmp
adc
neg
popa
and
dec
jne
mov
mov
std
xchg
add
les
idiv
or
mov
gs
jmp
sti
or
mov
xor
lock
dec
mov
jmp
movs
paddw
rcr
(bad)
fnstcw
clc
les
fst
mov
add
mov
mov
sbb
int
inc
xor
jb
pop
push
ins
fimul
sbb
out
pop
out
xchg
mov
mov
rcr
dec
sbb
xchg
jns
pop
inc
stc
(bad)
lock
inc
add
cmc
add
popa
jns
fnsave
jecxz
ss
and
add
mov
add
ret
hlt
loop
adc
push
adc
fnstsw
cwde
pop
ret
scas
sub
mov
cmp
fistp
or
imul
ret
xlat
fsubr
push
imul
mov
nop
pop
loop
pop
inc
sub
xchg
xchg
push
mov
or
push
mov
sbb
or
cs
in
pop
arpl
mov
mov
push
call
jo
add
dec
xor
adc
outs
or
and
mov
push
adc
pop
shl
xor
jno
(bad)
cmp
mov
lahf
and
inc
mov
jbe
or
inc
xor
inc
sub
outs
call
js
ds
das
dec
push
cs
fs
push
test
and
pushf
repz
xchg
jns
mov
icebp
sar
xor
je
mov
and
aas
pushf
mov
lock
dec
imul
movs
(bad)
jns
cmc
sub
mov
js
loopne
inc
jne
push
fmulp
mov
sahf
inc
jge
aad
xlat
cmp
jae
scas
shl
into
xchg
test
bound
add
leave
ins
aaa
in
dec
push
(bad)
shl
repnz
ss
aas
jmp
fcmovnb
js
xor
scas
arpl
sbb
cmp
outs
jecxz
clc
(bad)
mov
push
dec
pop
ins
push
xchg
mov
dec
inc
or
sbb
pop
or
(bad)
je
mov
movs
sub
cwde
iret
push
dec
mov
aas
mov
mov
(bad)
gs
neg
fadd
or
mov
and
dec
call
push
inc
repz
fdecstp
cdq
test
in
xor
or
cli
pop
lds
pop
lods
and
sbb
xchg
not
inc
or
and
mov
aam
mov
cmp
enter
out
out
fwait
jmp
xchg
pop
xchg
inc
push
xchg
xchg
gs
sub
inc
cmp
cmp
aam
je
jo
mov
xor
inc
cmp
or
sub
cli
test
std
sub
loop
enter
or
test
sbb
(bad)
retf
xchg
jns
movs
retf
inc
inc
lods
inc
mov
dec
and
xchg
push
dec
shl
pop
jle
test
sbb
or
test
lea
mov
ds
dec
xlat
cmp
and
movs
inc
mov
dec
add
add
sbb
mov
inc
xor
ficomp
push
adc
sbb
adc
inc
retf
inc
add
xchg
mov
in
imul
dec
inc
inc
jmp
xor
push
jbe
je
mov
fwait
push
es
jmp
mov
jbe
mov
push
(bad)
ret
dec
mov
cli
xor
dec
retf
cwde
out
sub
jmp
loope
add
frstor
jle
test
idiv
and
idiv
aaa
fimul
mov
cmp
dec
or
call
mov
out
fwait
(bad)
pusha
xchg
out
fild
mov
and
jl
or
lahf
retf
inc
es
mov
xchg
pop
dec
mov
test
fxch
bound
sbb
rcl
sbb
dec
fild
mov
and
arpl
loope
cli
push
mov
fild
mov
ja
lahf
call
dec
cmp
bound
leave
push
(bad)
lds
leave
pop
jne
mov
cmp
outs
dec
mov
sbb
fbld
xchg
aas
pop
mov
repnz
mov
lea
cmp
mov
not
or
cmp
add
mov
dec
cs
cmps
push
dec
sub
in
adc
xchg
or
pop
sub
mov
sahf
and
dec
bound
fucomip
frstor
xchg
adc
fcom
dec
mov
hlt
das
xchg
sbb
dec
push
mov
dec
push
mov
pop
aad
lea
and
ins
sub
jle
jle
sahf
xchg
sub
xchg
cld
inc
call
je
jp
mov
pop
mov
adc
dec
int3
jle
out
xchg
push
daa
(bad)
jle
lods
jl
lock
add
(bad)
cmps
push
daa
jl
stos
xor
dec
sbb
mov
and
loopne
xchg
aas
ret
mov
mov
test
xor
or
lods
mov
(bad)
sub
pusha
add
sbb
xchg
push
add
(bad)
mov
in
or
arpl
mov
pop
jmp
and
push
aas
scas
push
mov
xor
cli
mov
adc
mov
jg
xchg
dec
ret
or
inc
xchg
movs
jne
pop
xchg
aam
lea
out
in
scas
pop
neg
pop
sbb
(bad)
(bad)
push
inc
jecxz
pop
das
int3
or
mov
mov
into
je
xchg
mov
and
xor
xchg
ins
aas
fwait
hlt
mov
mov
and
jbe
inc
xchg
push
or
in
dec
lds
and
or
mov
push
nop
mov
xchg
fcom
cmps
mov
or
test
retf
dec
(bad)
adc
loopne
shr
jl
push
outs
out
pop
stos
aad
jno
jbe
imul
xor
xchg
fprem
sahf
add
shr
(bad)
cmp
push
adc
ds
adc
xchg
sbb
daa
es
movs
push
outs
dec
popa
icebp
(bad)
jmp
mov
cwde
dec
ret
adc
jae
into
push
addr16
jp
xchg
ins
pop
sbb
(bad)
(bad)
mov
xor
jl
adc
sub
mov
xor
and
mov
cmp
dec
push
les
jl
(bad)
mov
push
dec
adc
stc
inc
xor
jmp
push
dec
and
mov
xor
adc
test
dec
repz
jb
xchg
rcr
push
and
test
adc
pop
mov
mov
sub
fld
mov
push
imul
push
cld
in
int
ins
push
mov
xchg
test
in
pop
dec
ja
std
iret
inc
xor
and
cmp
or
(bad)
retf
out
jle
call
mov
mov
inc
mov
enter
outs
cmps
call
mov
outs
xchg
xchg
and
and
js
push
and
sahf
bound
push
xchg
jmp
pop
jo
push
pop
(bad)
sbb
dec
loopne
push
adc
sub
xor
or
xchg
movs
sbb
mov
adc
fcmovu
dec
inc
pop
push
xchg
jbe
add
xor
das
movs
fs
addr16
out
sub
mov
add
ds
xadd
lahf
pop
push
mov
int3
jns
xchg
stos
jg
mov
movs
jo
cmp
dec
movs
dec
ds
lds
jl
mov
cmp
mov
and
mov
ror
sub
add
std
or
fimul
and
in
js
jns
pop
or
mov
pop
popa
inc
pop
mov
test
addr16
inc
xchg
add
inc
inc
adc
fsubr
mov
cmp
call
push
xchg
fsubr
jae
fdiv
(bad)
fnstsw
bound
xor
in
movs
cmp
(bad)
loopne
jmp
lods
jnp
mov
jae
scas
or
jo
lea
inc
in
jmp
pop
outs
icebp
scas
adc
stos
pop
or
pushf
push
or
dec
push
mov
in
and
jmp
outs
cmp
push
jno
jne
sub
adc
lock
test
aam
test
loopne
mov
test
into
lods
enter
jne
adc
lods
bound
shr
cmps
outs
jno
clc
hlt
mov
add
cmp
cmp
mov
pop
sar
outs
rcl
hlt
mov
mov
inc
push
inc
loop
mov
mov
sub
fcomp
sti
mov
jne
fimul
frstor
lock
aas
ins
outs
pop
adc
cmp
ror
sbb
movs
hlt
lahf
es
pop
into
ja
ins
jge
arpl
scas
loopne
stc
xor
sub
jb
mov
adc
dec
imul
int3
add
movs
ret
sbb
in
or
mov
adc
scas
jno
les
repnz
pusha
xor
sub
in
fcomp
mov
fdivr
jge
test
mov
loopne
cmps
push
rcr
mov
cdq
push
sahf
mov
xchg
adc
icebp
mov
pushf
stos
fnclex
mov
jae
movs
cmps
sub
(bad)
fld
or
rol
dec
popa
int3
(bad)
les
push
dec
retf
mov
adc
int3
lods
dec
fisubr
in
in
int
jo
push
push
or
adc
push
(bad)
and
push
test
test
jnp
xchg
push
shr
stos
adc
shl
iret
pop
ss
aas
aad
xchg
rol
sbb
dec
push
pop
xor
dec
fst
pop
ins
push
mov
jp
jno
int
and
loope
out
push
mov
xor
(bad)
leave
push
data16
mov
xchg
shl
mov
sar
cmc
push
sub
jmp
mov
sub
sbb
add
ins
mov
sbb
inc
(bad)
(bad)
in
(bad)
aam
cmp
cmp
inc
call
je
jp
(bad)
jo
addr16
arpl
inc
mov
mov
rol
pop
fistp
mov
idiv
dec
js
imul
ins
sub
sbb
std
sbb
inc
xlat
sar
xchg
das
mov
cmp
sbb
sub
and
imul
mov
and
fwait
dec
push
xchg
stos
mov
fcom
scas
mov
mov
mov
mov
jmp
xchg
mov
js
and
(bad)
sti
xlat
jge
mov
fld
push
mov
mov
neg
sbb
pop
or
(bad)
adc
ds
jge
cld
jne
dec
pushf
pop
fdiv
or
push
xchg
imul
mov
mov
push
imul
push
movs
idiv
pop
and
or
push
lock
scas
scas
jl
adc
pop
mov
outs
ss
out
pop
imul
pop
mov
sahf
imul
inc
fs
adc
adc
iret
stc
hlt
sub
sub
stos
icebp
test
adc
or
std
push
pop
cmp
xor
bound
loope
(bad)
xor
adc
dec
and
push
aad
mov
rol
push
or
daa
jcxz
adc
mov
getsec
(bad)
jp
pop
bound
(bad)
icebp
sub
rcr
or
mov
inc
aam
rcr
nop
push
loope
adc
loope
adc
xor
xchg
cmp
cld
jae
div
mov
add
push
ins
(bad)
mov
xor
xor
sbb
or
in
cmc
xor
sbb
or
in
lock
out
call
jp
fisttp
imul
(bad)
ficomp
cmp
cmp
dec
test
xchg
imul
retf
pop
sbb
mov
(bad)
push
fnsetpm(287
push
loope
mov
and
ja
dec
jp
outs
es
xchg
inc
nop
pshufw
js
cmp
shr
push
push
shr
sbb
aaa
cdq
pop
in
mov
das
push
and
push
sbb
pop
add
scas
cmp
push
mov
jecxz
xor
shl
mov
jp
cli
lock
inc
xor
int
sbb
or
(bad)
or
adc
mov
or
push
sbb
pushf
ret
fmul
push
mov
cmp
sub
push
add
mov
jg
loope
mov
xchg
lds
fistp
sbb
addr16
arpl
lea
popa
push
inc
dec
(bad)
jecxz
push
sub
call
mov
pop
jge
dec
xor
(bad)
dec
enter
adc
icebp
in
dec
mov
add
(bad)
hlt
sbb
retf
xchg
sub
mov
xor
sbb
lahf
test
jmp
or
jecxz
push
push
xchg
dec
mov
mov
xchg
repnz
add
jge
push
mov
popf
(bad)
lds
dec
mov
mov
mov
js
arpl
push
fistp
dec
jg
jmp
xor
cmp
adc
cmps
je
pop
jge
std
jb
or
daa
cdq
pop
push
adc
stos
inc
pop
jp
push
mov
int3
adc
add
ds
jbe
push
mov
in
out
or
xor
and
cli
test
ss
ins
cmp
lahf
daa
out
or
adc
ror
or
mov
sub
push
loopne
shl
xor
pushf
ror
dec
outs
jae
(bad)
pop
outs
xchg
or
data16
sbb
addr16
outs
fcomip
aas
loope
repnz
cmp
aas
sbb
addr16
xchg
cmp
dec
pop
sub
jo
push
fisub
scas
cmp
mov
pop
adc
and
xor
bound
aad
adc
pop
and
xchg
sbb
mov
push
test
fimul
xchg
pop
adc
out
scas
xchg
ss
aam
cdq
bound
jnp
nop
jbe
jmp
test
xchg
mov
(bad)
std
mov
cmc
lahf
ret
jle
mov
dec
retf
fs
aaa
scas
mov
add
mov
outs
inc
jb
rcr
cli
out
loop
mov
push
test
arpl
pop
movs
in
retf
cld
rcr
mov
ins
repnz
pop
push
cmp
hlt
enter
adc
leave
test
push
pop
inc
mov
dec
aaa
mov
mov
repnz
cdq
mov
inc
in
js
xchg
inc
pop
mov
nop
mov
jg
push
jo
or
dec
jne
(bad)
mov
pop
sbb
pop
call
js
pop
das
outs
imul
mov
pop
into
daa
sbb
js
add
test
pop
push
mov
xor
push
jg
mov
add
jl
shl
mov
sahf
mov
jmp
inc
or
cmp
pop
inc
(bad)
(bad)
in
icebp
jmp
or
fwait
mov
je
push
ret
fnstenv
in
dec
or
xchg
pop
cmps
mov
push
push
imul
add
lods
bound
or
movs
pop
addr16
ret
sbb
or
adc
lea
dec
mov
idiv
dec
enter
out
rol
push
adc
ins
push
cmps
jmp
pop
fs
fdiv
repnz
xchg
xchg
cmp
sbb
mov
mov
(bad)
mov
xlat
or
xchg
inc
cmps
cmp
mov
call
xchg
mov
pop
mov
rcl
ds
shl
jbe
xchg
mov
add
ins
or
xor
clc
stos
loope
neg
aas
fsubr
inc
cmp
or
jge
pop
inc
adc
inc
movs
or
jmp
mov
scas
daa
lds
or
lds
sti
xchg
cld
adc
fldcw
sub
cdq
mov
ja
jmp
adc
call
loop
das
cmps
pop
jecxz
sub
sub
push
push
jno
push
adc
sbb
mov
mov
into
lea
stos
jmp
call
jle
mov
or
add
mov
mov
bound
add
sbb
cs
das
inc
test
add
(bad)
ds
xor
jmp
push
or
in
neg
fisub
xor
test
xor
jns
(bad)
mov
push
xchg
sbb
pop
xor
push
(bad)
sub
into
xor
in
sbb
xor
sahf
shl
in
jnp
ret
adc
cmps
adc
scas
jb
or
push
mov
jp
inc
jne
es
pushf
and
push
xchg
xor
pop
into
iret
stos
inc
ja
cmove
adc
inc
mov
sahf
stc
or
div
cdq
add
cmp
movs
lds
(bad)
std
push
movs
xchg
xchg
nop
push
shl
mov
jno
mov
les
lock
dec
push
mov
dec
pusha
pop
xchg
js
inc
stos
fstp
popf
jge
jecxz
pop
cmp
mov
ja
mov
mov
xor
or
cmp
pop
mov
repz
sub
sub
adc
int
imul
xor
cmp
dec
stos
mov
jno
dec
pop
jnp
sbb
sbb
sub
jp
retf
cmp
clc
mov
xchg
jo
inc
(bad)
lock
loopne
dec
dec
ret
fcmovne
int3
es
fsubr
jnp
mov
std
mov
sub
xchg
cmps
(bad)
(bad)
mov
push
add
jp
stos
icebp
inc
lods
cmp
inc
jge
adc
ins
sahf
int
lods
in
inc
and
push
cmp
add
fadd
cld
lock
fstp
sahf
mov
and
(bad)
hlt
hlt
sbb
xor
add
sub
sub
lods
imul
jle
fld
or
out
out
daa
jb
sahf
scas
pop
and
nop
jb
jle
enter
out
push
arpl
jg
loop
xchg
mov
sub
mov
inc
xchg
nop
jecxz
outs
scas
mov
sbb
sbb
test
mov
adc
jmp
and
mov
add
push
out
(bad)
daa
pop
(bad)
call
lods
xchg
mov
ins
in
add
sub
in
jnp
jae
repnz
cdq
jmp
pusha
adc
or
cmp
jne
xor
xor
mov
movs
int3
outs
sbb
adc
nop
imul
xchg
sbb
pop
adc
loopne
adc
add
sub
and
mov
pop
outs
mov
jge
xchg
jne
cmp
push
jmp
mov
popf
test
xlat
push
pop
je
jge
jo
inc
fadd
xlat
int3
sub
fldcw
sbb
popa
test
sub
lock
lods
(bad)
retf
push
push
mov
lea
fild
leave
push
dec
(bad)
cs
lds
mov
nop
xchg
mov
ss
gs
jns
gs
inc
mov
scas
(bad)
fld
add
fistp
mov
imul
lock
adc
jno
mov
push
inc
scas
stos
mov
jb
pop
xchg
sbb
cdq
retf
xor
add
inc
mov
mov
cld
mov
dec
test
push
xchg
dec
jae
retf
stos
js
sub
adc
dec
lds
cmp
aaa
jnp
test
xlat
mov
dec
das
and
into
pusha
push
xchg
cmp
jno
cmp
icebp
add
jne
mov
int
outs
pop
push
imul
js
aam
mov
add
jmp
add
ret
mov
movs
lea
cmp
mov
(bad)
dec
mov
ins
push
mov
cwde
inc
mov
and
mov
outs
int
mov
jbe
pop
dec
sbb
push
ror
sub
and
retf
bnd
push
dec
cmp
mov
inc
out
add
or
fcomp
shl
das
inc
jae
or
dec
and
mov
sub
shl
movs
sbb
into
test
mov
or
add
mov
mov
sbb
xchg
inc
sbb
mov
sbb
js
inc
mov
test
daa
or
push
xor
test
xchg
inc
mov
cs
mov
stos
mov
idiv
push
adc
shr
sbb
pop
xchg
mov
fisttp
cmp
add
jbe
je
cld
into
rcl
(bad)
lahf
mov
xor
jb
sar
loope
stc
ins
dec
into
push
sub
cdq
out
fdiv
xchg
ins
jmp
adc
sbb
and
xchg
push
sti
dec
ss
xchg
push
(bad)
xchg
inc
ins
mov
sub
xchg
or
xchg
cli
or
xor
loope
push
inc
enter
test
(bad)
pop
sub
mov
(bad)
cld
jnp
out
pop
mov
scas
cmp
adc
push
pusha
sub
jns
mov
rcr
(bad)
out
ds
mov
sbb
mov
stos
and
mov
sar
hlt
pop
mov
and
adc
push
inc
gs
outs
movs
stc
pusha
int
adc
test
mov
ja
push
movs
pop
arpl
mov
adc
std
fisub
inc
xor
inc
add
jle
fild
pop
inc
mov
cwde
movs
push
or
xchg
xchg
test
addr16
cld
sbb
pop
adc
pop
and
mov
sbb
push
push
int3
ja
adc
(bad)
dec
pusha
aam
das
inc
cdq
xchg
cmp
mov
(bad)
lds
add
popf
int3
call
outs
daa
adc
xor
and
mov
inc
out
scas
mov
xlat
fstp
xchg
in
dec
adc
pop
out
cli
(bad)
std
jbe
cli
ins
or
jg
aad
jl
and
and
movs
mov
test
std
add
iret
cmp
cwde
add
push
dec
pop
ret
into
cmc
pop
push
fcmovnbe
in
sub
neg
pop
xchg
mov
adc
push
xor
add
mov
fbld
leave
fistp
popf
sbb
pop
outs
lods
stos
jmp
xchg
test
fisubr
cli
ret
jae
dec
daa
pop
push
fild
xchg
mov
mov
mov
inc
popf
sub
scas
inc
shl
pop
jle
les
mov
add
mov
repnz
inc
inc
not
(bad)
out
jmp
or
test
nop
jg
gs
out
xlat
pop
fsub
outs
jno
aaa
movs
sub
sub
xor
nop
sbb
test
icebp
iret
mov
sub
lods
and
ins
or
sub
mov
shl
jmp
sub
in
imul
xchg
fstp
pop
mov
aad
fistp
arpl
movs
cdq
scas
fnstsw
mov
xor
loop
adc
(bad)
pop
jo
(bad)
gs
bound
push
xlat
and
call
ret
mov
test
(bad)
ret
xor
dec
fs
push
mov
imul
pop
xchg
ret
sbb
adc
(bad)
add
mov
test
jg
test
test
and
xchg
or
push
dec
(bad)
(bad)
out
in
sbb
(bad)
in
mov
in
adc
pop
pop
push
stc
pushf
shl
push
retf
inc
jmp
mov
push
test
movs
cmps
vsubpd
adc
cmp
mov
adc
xchg
pop
inc
int3
sbb
jp
push
mov
idiv
or
aam
jmp
ss
(bad)
ja
in
mov
mov
mov
shl
pop
xchg
loop
shl
cmp
pop
ror
and
dec
xchg
sub
adc
(bad)
pop
mov
mov
push
inc
in
dec
test
outs
jmp
or
scas
cwde
mov
jp
hlt
xchg
cwde
(bad)
lahf
push
jmp
lea
jle
or
jmp
cmps
push
push
lds
in
mov
ret
aaa
xchg
pushf
idiv
repz
inc
pop
sbb
shr
cmps
hlt
mov
pop
call
push
push
sahf
mov
cmp
or
(bad)
std
in
sti
std
ja
dec
jg
repz
mov
dec
or
sbb
in
and
call
(bad)
inc
outs
jo
in
out
cld
lods
mov
push
adc
inc
jne
int3
push
and
jecxz
sar
sbb
aaa
xchg
int3
ss
outs
push
movs
pop
adc
call
mov
loopne
inc
outs
mov
xor
imul
jp
dec
mov
loope
dec
or
test
popa
int
movs
push
dec
sbb
fprem
xlat
xor
clc
xchg
fs
das
sti
add
(bad)
jge
mov
std
xor
dec
adc
imul
mul
jo
test
push
int
jecxz
jle
(bad)
adc
hlt
xor
adc
pop
ret
mov
adc
in
inc
imul
enter
ins
jecxz
jnp
jo
mov
test
mov
movs
sbb
push
dec
cli
out
cmps
push
sbb
call
add
pop
jecxz
lods
add
sbb
out
adc
dec
fldpi
pusha
(bad)
hlt
mov
xchg
test
(bad)
fsubr
add
cmp
sbb
mov
icebp
or
add
repz
cmc
push
push
pushf
stos
test
stos
mov
dec
dec
push
xchg
jp
ja
fistp
or
sbb
sbb
and
add
fnsave
and
(bad)
mov
mov
ins
loope
fsub
xor
int3
popa
inc
jo
push
jns
pop
xor
dec
sahf
int3
jmp
jecxz
push
sub
and
lods
cmp
in
mov
data16
retf
xor
mov
into
xchg
cmp
or
add
mov
cmps
jb
fisub
sub
int
ficomp
cmp
ret
and
lahf
xor
retf
or
jp
push
jge
js
xor
adc
add
and
pop
inc
push
aad
xchg
inc
(bad)
mov
xor
cdq
cmp
sbb
les
cmps
iret
movs
daa
icebp
mov
in
mov
pop
sbb
jg
jecxz
inc
inc
dec
mov
dec
push
sub
push
test
imul
adc
pop
mov
out
les
push
stos
movs
cwde
and
ins
mov
sub
push
cwde
scas
lea
dec
mov
mov
pop
xor
call
cld
in
add
mov
stc
inc
push
pop
test
shl
cmp
test
xchg
inc
repnz
out
(bad)
shl
fld
movs
cmp
clc
xchg
ins
push
loopne
xor
clc
out
mov
mov
jp
xor
jmp
or
or
dec
push
jnp
sbb
popa
ret
fidiv
inc
nop
leave
bound
sbb
test
xchg
mov
jmp
scas
dec
xlat
lods
lahf
sub
sub
call
rcl
es
push
push
fucomi
xor
inc
pop
jb
pusha
adc
scas
(bad)
scas
in
movs
and
std
sub
rcl
in
jge
jo
mov
jle
jne
ss
movs
stos
jnp
ficomp
jae
fldenv
cwde
jb
adc
push
bound
dec
add
rcr
pop
fbstp
and
dec
and
loope
fmul
imul
mov
repnz
jns
sub
or
push
shl
outs
cli
shl
cmps
imul
mov
push
loope
xor
rcr
cs
sti
dec
scas
aad
test
cmp
outs
mov
cli
(bad)
cmps
or
clc
outs
push
push
push
movs
sbb
mov
xchg
sbb
sub
lds
aaa
js
jecxz
lea
aad
cmp
cmps
pop
sub
pop
jmp
sub
sub
dec
push
mov
lods
(bad)
ss
ins
push
sbb
ror
pop
sti
xchg
out
pop
or
sbb
in
loop
std
xchg
mov
rol
xor
mov
loop
jg
push
lock
pop
jg
or
add
test
add
outs
scas
loop
cmp
lea
rcr
push
sbb
js
or
mov
pop
addr16
and
outs
xchg
fnstsw
xchg
sub
xor
in
fldenv
(bad)
push
outs
jb
or
shr
or
cmp
xchg
scas
and
mul
inc
mov
dec
jno
aad
popf
fs
mov
sbb
push
mov
(bad)
aas
push
call
adc
dec
ret
jb
jb
rol
ss
mov
dec
or
fisttp
adc
aam
pop
and
(bad)
cmp
xor
mov
fld
lds
hlt
mov
out
mov
(bad)
fsubr
jno
ja
idiv
(bad)
rcl
cwde
push
aam
pop
pop
sub
movs
in
inc
xchg
repnz
xchg
dec
fwait
imul
dec
out
pop
inc
fmulp
pop
pop
mov
fadd
jo
outs
mov
sub
mov
xchg
ins
sub
push
gs
lods
lahf
push
jp
int3
outs
jg
mov
xor
mov
(bad)
adc
arpl
enter
jg
ins
or
inc
adc
mov
test
into
loop
adc
(bad)
sbb
pop
icebp
sub
jl
arpl
xchg
imul
int3
mov
fistp
rep
in
in
push
mov
cmp
int
cld
les
ficomp
add
loope
cmps
add
dec
call
jle
fistp
push
fadd
scas
inc
or
test
pop
xor
adc
sahf
sbb
adc
fldz
retf
pushf
xchg
or
(bad)
lock
jne
xor
jne
addr16
or
test
sbb
push
sbb
xchg
arpl
dec
scas
ret
sub
nop
and
mov
popa
ror
rcl
inc
fdivr
fistp
inc
repz
xchg
cmp
test
push
xchg
jne
or
adc
mov
cmps
jae
mov
cli
add
cs
and
or
or
mov
jnp
cmps
xchg
xchg
add
mov
pusha
xchg
iret
xchg
ficomp
xlat
jmp
popa
movs
retf
xor
cmp
fsubr
mov
or
push
or
mov
fist
pop
push
std
push
fcomp
data16
jne
sub
dec
lods
clc
mov
xchg
sub
retf
loope
xor
ror
mov
ss
xchg
gs
mov
test
stos
repz
(bad)
(bad)
inc
pop
sbb
(bad)
xchg
clc
ficom
xor
in
in
in
and
and
mov
lods
enter
push
outs
je
cmp
sbb
mov
mov
cmp
or
into
pop
popa
sub
sbb
push
test
push
and
push
mov
or
inc
lods
xchg
add
or
sub
nop
push
cmp
adc
stos
or
gs
xchg
clc
jno
ror
inc
rcr
cmp
aas
and
push
sub
aam
enter
mov
xchg
and
xchg
add
xchg
sbb
(bad)
fs
add
(bad)
sahf
ret
xor
push
lea
push
adc
mov
and
xor
jge
mov
mov
inc
and
not
je
xor
fild
cdq
fcmovu
ins
inc
mov
scas
mov
sbb
sbb
idiv
dec
outs
lods
scas
into
pop
mov
xor
jmp
loopne
lods
cmp
pop
out
inc
or
das
cwde
sar
enter
ins
lods
outs
pop
mov
fcomp
adc
mov
xchg
inc
arpl
fdivr
cmps
xchg
stc
jecxz
dec
xchg
test
jmp
test
int3
sbb
add
jge
xor
ins
add
shl
xlat
lds
stc
test
jnp
jmp
sbb
and
dec
mov
push
inc
xchg
push
xor
call
sbb
sti
lea
movs
and
stos
cmps
mov
push
jecxz
loope
and
jle
(bad)
mov
xchg
(bad)
pop
or
out
cmp
mov
idiv
out
mov
pop
jo
or
cli
sbb
mov
popf
dec
inc
or
retf
push
pop
es
outs
inc
mov
call
pop
and
mov
push
xchg
hlt
xchg
lods
pop
jae
sti
cmp
jg
cmp
test
cs
std
mov
add
retf
xchg
cwde
(bad)
sbb
lods
cmps
fwait
daa
adc
sbb
ss
jmp
cmc
add
dec
and
cmp
loop
addr16
push
cmp
and
pop
jge
(bad)
imul
mov
pop
(bad)
cmp
je
lahf
pop
call
movs
imul
je
clc
or
push
dec
jge
xchg
push
les
and
sub
push
fmul
mov
cmps
mov
dec
sbb
(bad)
jbe
xor
add
push
push
fimul
sbb
cmovp
pop
es
xchg
pop
test
ss
and
cdq
jmp
dec
sub
std
xchg
and
add
add
xlat
jns
adc
ins
popf
inc
jg
jb
fstp
dec
mov
pop
loop
(bad)
cmp
jecxz
int3
xchg
sub
std
stc
stos
mov
sub
cmp
(bad)
pop
and
cli
ds
stos
cmp
mov
push
stos
scas
adc
push
mov
mov
loop
mov
(bad)
and
jno
leave
xor
fbstp
repz
and
into
loopne
and
fnstcw
call
gs
mov
cli
pop
cmps
popw
inc
fcmove
into
cli
loopne
pminub
and
jb
mov
and
repz
lods
fild
xlat
clc
int
fld
dec
(bad)
fcom
cdq
frstor
cmc
fcmovne
push
lea
jnp
sti
cs
mov
xchg
stos
add
push
adc
mov
xor
dec
iret
pop
aas
pop
cli
mov
es
repnz
jecxz
mov
es
fistp
push
or
mov
adc
cdq
pop
jl
and
inc
pop
mov
sbb
lods
inc
in
mov
xor
dec
pusha
or
pop
jg
cmp
xchg
sbb
not
ja
cmps
bound
sbb
out
movs
add
in
es
sbb
(bad)
sub
cmc
sbb
xchg
test
stc
jmp
xor
lock
cmps
or
xlat
jecxz
and
push
jo
fadd
inc
xor
lods
cmp
jl
pusha
sbb
inc
fisubr
pop
(bad)
pop
outs
add
push
jmp
test
sub
dec
not
or
fnsave
mov
mov
inc
int3
cmp
cwde
jae
or
loope
fisubr
push
or
fsubr
imul
out
or
jecxz
cmc
push
mov
cmc
stos
gs
into
popf
mov
jmp
gs
(bad)
test
jecxz
hlt
or
std
jno
movs
mov
cmps
dec
cli
std
push
fst
sub
ins
jecxz
outs
or
outs
fisttp
dec
shr
(bad)
ins
div
rol
push
ret
inc
out
out
sbb
aaa
xchg
cmp
cmps
ss
in
sub
sbb
imul
call
add
int3
fwait
jno
add
movs
pop
xchg
out
push
push
loopne
xor
sub
jecxz
dec
ja
in
add
fs
loop
mov
psubb
sar
jle
aas
aad
mov
or
cmc
(bad)
adc
fsub
xor
inc
rcl
jno
mov
sbb
or
sbb
xor
jmp
xbegin
sbb
mov
lock
inc
xor
fnsave
test
and
(bad)
jbe
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
pusha
add
add
jle
add
add
add
je
imul
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
inc
adc
add
add
add
cli
add
add
add
add
add
adc
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
lds
push
add
add
add
lds
push
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
lahf
add
add
lahf
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
jl
ret
add
add
jl
ret
add
add
add
jl
ret
add
add
jl
je
add
adc
add
mov
mov
push
add
add
inc
add
add
cmp
add
add
add
add
add
add
add
add
jecxz
add
add
int
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
int3
mov
add
jo
add
add
add
aaa
aaa
jb
jb
add
arpl
ins
imul
jb
and
jb
jb
add
gs
xor
sub
sub
sub
popa
aaa
popa
xor
xor
jge
jnp
fs
xor
arpl
sub
sub
gs
xor
cmp
jnp
xor
fs
sub
sub
sub
sub
aaa
xor
aaa
xor
inc
outs
outs
ins
gs
outs
add
jae
gs
add
je
xor
inc
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jb
outs
add
imul
ins
gs
arpl
add
add
aad
rcl
pop
test
xor
push
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
dec
sbb
xchg
aad
sbb
ds
push
imul
lahf
in
jno
ret
mov
cld
aaa
aaa
retf
or
xor
out
fbstp
or
gs
push
mov
cmp
adc
aad
sub
icebp
cld
adc
xchg
mov
ret
pop
enter
jbe
fstp
gs
test
pop
push
sbb
mov
gs
jne
arpl
jae
gs
bound
add
add
push
add
add
outs
imul
data16
popa
jb
add
daa
add
and
jo
jb
addr16
and
imul
data16
popa
jb
and
xor
cmp
add
add
add
add
and
xor
xor
xor
sub
sub
sub
sub
cmp
xor
xor
add
or
add
xor
xor
xor
xor
add
add
or
add
add
add
add
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
rol
add
rol
add
and
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
add
add
or
add
xor
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
mov
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
nop
add
add
add
add
add
add
add
add
bound
xor
add
inc
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
dec
add
add
arpl
dec
add
and
push
add
data16
add
jb
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jae
outs
add
jb
arpl
add
jae
jae
add
bound
ins
add
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
add
outs
add
jb
arpl
add
jae
jae
add
bound
ins
add
add
add
add
add
and
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
arpl
dec
add
and
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
jae
outs
add
jb
arpl
add
jae
jae
add
bound
ins
add
add
add
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
push
add
jae
outs
add
jb
arpl
add
jae
jae
add
bound
ins
add
add
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
mov
sbb
add
push
je
imul
add
add
add
add
inc
push
dec
inc
add
add
add
push
add
and
outs
bound
add
cmp
add
and
add
add
add
add
add
mov
add
cli
add
add
add
add
add
push
add
add
add
add
add
outs
add
add
add
add
add
movs
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
popa
add
add
add
add
add
rol
sbb
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sbb
push
add
push
add
add
add
add
jg
or
sahf
add
or
scas
add
push
add
add
or
enter
or
jecxz
rol
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
sbb
push
add
inc
add
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
add
add
sbb
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
add
sbb
push
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
adc
cmp
inc
add
push
add
pop
add
jno
gs
xchg
sbb
push
add
add
stos
add
mov
sbb
push
add
add
add
iret
add
fadd
add
out
add
add
add
add
add
adc
lock
add
add
add
adc
add
pop
push
sbb
add
add
add
push
sub
sbb
add
add
add
push
push
leave
add
add
add
pop
push
leave
add
add
add
add
add
add
add
add
add
and
add
adc
mov
add
add
add
push
jmp
add
add
add
pop
or
leave
add
add
add
add
add
pop
adc
leave
add
add
add
pop
adc
sbb
add
add
add
adc
sbb
add
add
add
pop
push
leave
add
add
add
add
add
mov
leave
add
add
add
add
add
add
cmp
add
adc
ret
pop
leave
add
add
add
pop
mov
leave
add
add
add
pop
add
leave
add
add
add
add
jmp
add
add
add
or
add
add
push
add
or
add
add
add
add
or
add
add
bound
add
or
add
add
add
add
or
add
add
imul
add
add
add
mov
push
add
add
add
push
add
leave
add
jo
adc
add
mov
add
inc
add
jo
adc
add
popf
or
add
pusha
add
adc
add
mov
add
inc
add
jo
adc
add
lds
add
inc
add
jo
adc
add
(bad)
add
inc
add
jo
adc
add
in
or
add
pusha
add
adc
add
add
add
inc
add
jo
adc
add
adc
add
jo
adc
add
sub
add
inc
add
jo
adc
add
cmp
add
jo
adc
add
push
or
add
pusha
add
adc
add
or
add
pusha
add
adc
add
jns
add
inc
add
jo
xor
xchg
or
add
add
add
add
mov
push
add
add
add
add
sbb
mov
add
add
mov
clc
add
add
add
pop
add
add
pop
mov
adc
or
add
xor
outs
or
add
add
add
add
add
add
add
add
add
or
add
add
or
jecxz
das
add
add
add
add
add
das
add
add
add
add
stos
push
dec
add
add
add
add
push
loope
add
int3
push
loope
add
aam
loope
add
fisttp
daa
add
add
push
push
add
add
push
push
add
add
push
pop
add
add
divps
add
adc
pop
add
add
comiss
xor
pop
psraw
xor
jge
loope
xor
lahf
pcmpeqb
xor
ror
add
add
or
add
add
add
mov
add
mov
loope
add
lea
push
add
add
adc
add
add
loope
add
xchg
adc
add
add
add
les
dec
add
add
adc
add
rcl
push
add
add
adc
add
add
adc
add
mov
loope
add
in
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
adc
loope
xor
pop
adc
xor
pop
adc
xor
adc
add
add
ret
add
push
add
add
ret
add
push
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
adc
add
add
add
push
add
add
or
adc
jns
adc
adc
lea
adc
add
add
sbb
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
and
add
add
add
pushf
and
xchg
add
or
push
add
and
xchg
add
or
or
add
add
add
xchg
add
add
daa
add
add
xchg
add
or
or
int3
sub
add
add
add
add
add
add
xchg
add
add
xchg
sub
add
add
add
add
add
add
xchg
add
jno
(bad)
xor
add
add
xchg
add
jbe
adc
pushf
sub
xchg
add
jge
adc
js
add
add
xchg
ror
add
add
xchg
ror
add
add
add
add
mov
add
add
xchg
add
add
das
add
add
xchg
sbb
add
xor
add
add
add
dec
xor
add
add
add
pop
xor
add
add
add
mov
add
add
add
xor
add
add
add
add
add
add
xchg
ror
sub
sbb
mov
add
add
xchg
sbb
add
add
add
or
add
add
xchg
or
or
add
dec
xor
add
add
add
xor
add
add
add
inc
aaa
add
add
xchg
ror
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
xchg
ror
sub
and
sbb
add
add
xchg
add
add
add
add
xchg
ror
sub
and
push
cmp
add
add
add
add
add
add
add
add
xchg
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
ror
sub
and
ins
aas
add
add
xchg
ror
sub
and
cmp
add
add
add
add
aas
add
add
xchg
ror
sub
and
call
add
add
add
add
add
xchg
add
or
sbb
add
add
xchg
add
sbb
and
add
add
add
add
add
add
xchg
add
xor
add
add
add
add
inc
add
add
xchg
dec
rol
add
add
add
adc
add
add
out
sbb
sub
sub
sub
add
add
add
add
add
xchg
ror
sub
sub
xchg
inc
add
add
xchg
add
push
or
sub
jl
add
add
xchg
ror
sub
sub
add
add
add
add
add
add
add
add
add
out
sbb
sub
xor
cmp
add
add
add
add
inc
add
add
xchg
add
add
add
add
add
add
dec
add
add
xchg
sbb
add
add
add
add
dec
dec
add
add
add
xor
je
add
add
xchg
xor
ins
add
and
add
add
xchg
sbb
add
add
add
add
add
add
add
add
push
add
add
xchg
add
(bad)
add
add
add
add
add
push
add
add
xchg
add
mov
cmp
adc
add
add
add
and
add
add
add
add
add
add
add
add
xchg
retf
adc
pop
add
add
xchg
aam
mov
pop
add
add
xchg
out
mov
pop
add
add
xchg
stc
adc
add
push
pop
add
add
xchg
or
push
pop
add
add
xchg
pop
adc
add
pop
add
add
xchg
sub
cmps
add
mov
add
add
add
add
add
xchg
dec
adc
pop
add
add
add
inc
add
add
add
xchg
pop
adc
pop
add
add
xchg
popa
adc
pusha
add
add
xchg
ins
adc
pusha
add
add
xchg
jns
mov
pusha
add
add
xchg
xchg
ins
add
sub
add
add
add
and
add
xchg
ror
bound
push
add
add
push
add
add
add
add
cmp
add
add
add
push
xchg
sbb
add
add
add
ins
add
add
xchg
and
rol
push
add
add
add
add
nop
ins
add
add
xchg
sbb
add
outs
add
add
xchg
add
add
add
add
mov
add
add
int3
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
jle
add
add
lock
add
add
or
add
add
add
add
lock
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
mov
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
daa
adc
add
add
or
add
add
adc
add
add
or
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jge
dec
add
or
add
ror
sub
stc
add
or
or
add
add
add
or
add
add
add
add
or
adc
adc
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
das
adc
add
add
add
push
adc
add
gs
add
jo
mov
adc
add
das
adc
add
add
add
or
add
mov
adc
add
add
add
or
adc
add
ret
add
add
add
add
add
add
add
adc
add
add
add
or
add
icebp
add
adc
sub
xor
add
add
or
imul
or
ror
xchg
add
add
add
add
add
inc
adc
dec
adc
ror
sub
sbb
push
adc
imul
adc
mov
add
add
add
add
add
add
add
adc
rcl
adc
(bad)
adc
jo
out
add
add
add
add
add
adc
icebp
adc
ror
sub
mov
add
add
or
add
add
adc
retf
add
add
add
push
retf
add
add
adc
add
add
add
push
or
add
add
add
add
add
add
add
add
mov
pop
add
mov
add
fild
imul
mov
leave
push
mov
adc
aad
into
add
loope
ret
add
add
push
retf
add
adc
add
add
push
call
pop
jbe
mov
icebp
adc
or
mov
or
or
add
adc
call
pop
out
add
add
pop
stc
add
add
or
add
add
add
pop
pop
add
sbb
pop
and
xor
cmp
sub
pop
add
dec
add
dec
add
je
push
add
add
add
pop
add
pusha
add
addr16
outs
add
jns
cdq
add
adc
pop
xchg
add
mov
pop
dec
add
add
adc
add
das
pop
cmps
add
mov
pop
add
pop
mov
pop
rol
add
add
add
or
pop
out
add
add
sbb
push
imul
push
add
add
sub
pop
add
add
sbb
push
add
and
ror
sub
xor
xor
bound
xor
cmp
bound
imul
add
xor
pop
sbb
sub
ins
sbb
sbb
sbb
xor
ror
mov
xor
mov
add
or
add
add
or
add
push
imul
push
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
js
add
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
mov
push
adc
sbb
pop
push
cmp
push
xchg
push
mov
push
retf
add
add
add
add
add
add
jl
add
aas
add
or
add
jo
add
add
add
jno
add
sbb
add
sub
add
pushf
jno
add
adc
add
mov
add
add
add
or
add
pop
add
jae
add
fs
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
add
add
add
add
daa
add
add
add
add
or
pop
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
add
daa
add
sub
sbb
sub
sbb
add
add
aaa
aaa
jb
jb
aaa
aaa
aaa
jb
jb
gs
add
arpl
ins
imul
gs
add
jo
push
jns
je
ins
cs
imul
inc
outs
jb
jae
imul
gs
xor
add
aaa
aaa
jb
jb
add
data16
popa
je
jb
outs
jo
je
je
gs
ins
add
push
push
outs
fs
push
imul
imul
jb
jae
imul
gs
ins
jae
inc
arpl
popa
je
jb
inc
jo
inc
outs
ins
popa
imul
outs
ins
popa
imul
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
jns
inc
je
jb
bound
add
je
imul
jb
gs
add
je
imul
popa
addr16
je
jb
bound
add
fs
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
jb
popa
jns
imul
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
dec
jns
jb
fs
imul
jb
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
jb
outs
addr16
outs
ins
ins
arpl
outs
add
jb
outs
addr16
imul
jb
add
outs
jbe
jb
add
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
arpl
jae
outs
fs
add
popa
arpl
jb
ins
add
popa
arpl
jb
arpl
inc
outs
jne
ins
add
jbe
jb
outs
ins
outs
je
inc
js
gs
imul
ins
popa
je
js
gs
imul
bound
push
je
ins
gs
push
jns
je
ins
cs
ins
outs
bound
imul
add
imul
ins
add
je
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
jbe
ins
imul
imul
jo
imul
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
push
jns
je
ins
cs
dec
add
arpl
jns
outs
outs
add
ins
add
ins
gs
outs
popa
fs
js
gs
imul
gs
outs
je
outs
jne
fs
js
gs
imul
gs
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
je
add
imul
imul
popa
ins
add
je
add
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
popa
ins
add
ins
bound
dec
outs
outs
add
je
outs
fs
popa
jae
add
je
outs
fs
outs
outs
add
fs
add
jb
ins
gs
jb
outs
outs
add
outs
jo
jb
jns
outs
outs
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
je
ins
gs
gs
jo
jb
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
outs
je
ins
gs
imul
fs
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
ins
add
inc
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
jb
outs
addr16
jne
ins
fs
dec
outs
outs
imul
je
ins
cs
push
imul
add
outs
je
add
outs
je
xor
push
popa
ins
jne
push
jns
add
jb
imul
add
ins
outs
addr16
gs
ins
je
dec
push
imul
outs
ja
dec
gs
popa
addr16
outs
js
cmp
outs
fs
gs
je
push
je
jb
gs
outs
gs
add
jae
ins
bound
outs
outs
inc
je
jb
bound
add
push
outs
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
jae
gs
bound
gs
ins
jbe
jb
push
ins
popa
jb
inc
jae
gs
bound
inc
jae
gs
bound
gs
ins
jbe
jb
arpl
xor
cmp
cmp
xor
cmp
popa
data16
xor
cmp
inc
jae
gs
bound
gs
ins
jbe
jb
gs
jo
jb
inc
jae
gs
bound
outs
outs
add
data16
arpl
gs
outs
outs
je
outs
ins
inc
ins
outs
ja
je
jb
bound
add
jae
jne
arpl
gs
ins
jbe
jb
push
ins
popa
jb
inc
jae
gs
bound
push
gs
jne
arpl
gs
ins
jbe
jb
add
push
je
imul
popa
jb
inc
jae
gs
bound
push
je
imul
outs
imul
outs
je
jb
outs
gs
je
jb
bound
add
outs
je
outs
jbe
inc
je
jb
bound
add
cmp
cmp
popa
bound
arpl
popa
cmp
bound
fs
xor
cmp
bound
inc
inc
push
inc
jb
jo
outs
dec
outs
imul
add
popa
jb
inc
jae
gs
bound
pop
imul
gs
bound
cmp
xor
xor
arpl
xor
xor
aaa
add
inc
jb
jo
outs
dec
outs
imul
add
ins
jo
gs
imul
popa
je
jb
arpl
gs
cmp
xor
cmp
cmp
arpl
bound
popaw
cmp
xor
xor
xor
push
je
gs
ins
dec
popa
outs
imul
jb
dec
jne
jo
je
imul
outs
data16
popa
je
jb
jne
ins
popa
outs
push
jb
add
data16
popa
je
jb
jns
dec
gs
fs
inc
gs
popa
je
jb
jne
ins
popa
outs
add
jo
je
gs
ins
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
je
jne
je
js
xor
xor
xor
xor
and
jae
jb
arpl
xor
xor
xor
xor
and
jae
jb
arpl
xor
xor
xor
xor
and
jae
jb
arpl
xor
xor
xor
xor
and
jae
jb
arpl
xor
xor
xor
and
je
jne
je
js
xor
xor
xor
and
je
jne
je
js
xor
xor
xor
and
je
jne
je
js
xor
xor
xor
and
je
jne
je
js
xor
xor
xor
sub
jae
jb
arpl
xor
xor
xor
sub
jae
jb
arpl
xor
xor
xor
sub
jae
jb
arpl
xor
xor
xor
xor
and
jae
jb
arpl
xor
xor
xor
xor
arpl
outs
jb
dec
popa
ins
add
ins
je
jb
add
je
push
jne
imul
arpl
add
add
push
ins
add
push
gs
jne
arpl
gs
ins
jbe
inc
ins
popa
add
outs
jb
dec
popa
imul
pop
push
add
popa
jb
inc
jo
add
je
jae
gs
bound
dec
outs
jbe
imul
jo
dec
gs
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
gs
gs
jne
arpl
dec
popa
outs
ins
gs
ins
ins
dec
popa
ins
add
pop
imul
ins
jbe
inc
dec
dec
add
outs
bound
imul
fs
imul
inc
gs
jae
gs
bound
jns
popa
ins
add
jb
gs
jae
dec
popa
ins
add
jb
jae
inc
je
popa
arpl
jo
add
xor
bound
xor
arpl
xor
aaa
xor
xor
cmp
xor
xor
bound
arpl
xor
xor
cmp
bound
xor
cmp
xor
xor
gs
add
arpl
bound
cmp
data16
xor
cmp
cmp
xor
xor
xor
cmp
cmp
arpl
xor
xor
xor
xor
fs
xor
arpl
xor
popa
cmp
cmp
xor
aaa
gs
ss
cmp
cmp
add
cmp
cmp
popa
xor
ss
arpl
xor
bound
bound
arpl
xor
xor
aaa
bound
cmp
bound
xor
xor
xor
xor
xor
popa
add
xor
arpl
gs
ss
arpl
bound
arpl
popa
xor
xor
add
outs
fs
imul
inc
inc
dec
dec
inc
pop
inc
inc
dec
inc
pop
pop
push
dec
push
dec
dec
pop
push
inc
inc
dec
dec
push
add
jae
je
bound
dec
outs
jbe
inc
imul
imul
imul
outs
gs
imul
data16
popa
addr16
addr16
dec
jae
bound
jo
imul
add
je
arpl
push
gs
ins
jbe
inc
jae
gs
bound
jae
outs
fs
add
bound
dec
gs
outs
imul
popa
jae
gs
bound
jne
ins
dec
popa
ins
add
je
jae
gs
bound
jne
ins
dec
popa
ins
add
arpl
gs
gs
imul
je
jae
inc
popa
arpl
add
data16
je
popa
ins
jne
add
je
jae
arpl
push
imul
data16
je
inc
gs
arpl
xor
aaa
xor
gs
bound
xor
cmp
xor
arpl
xor
xor
popa
arpl
xor
xor
bound
xor
fs
xor
xor
xor
add
popa
cmp
xor
arpl
arpl
cmp
arpl
xor
cmp
cmp
cmp
xor
xor
cmp
arpl
xor
arpl
xor
xor
fs
fs
xor
xor
cmp
gs
arpl
data16
cmp
bound
cmp
aaa
xor
xor
arpl
xor
xor
xor
xor
xor
cmp
xor
xor
cmp
arpl
ss
xor
ss
popa
xor
ss
arpl
cmp
cmp
arpl
bound
cmp
arpl
xor
xor
arpl
aaa
xor
cmp
xor
popa
arpl
add
cmp
xor
cmp
xor
xor
data16
xor
popa
ss
ins
pop
inc
arpl
push
jns
add
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
inc
inc
push
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
gs
jb
inc
imul
arpl
ss
gs
cmp
xor
xor
xor
arpl
xor
cmp
bound
bound
xor
bound
ins
pop
inc
arpl
push
jns
add
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
inc
inc
push
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
bound
dec
gs
dec
popa
je
push
imul
dec
push
add
dec
inc
pop
push
add
inc
dec
push
push
add
inc
inc
pop
push
add
fs
gs
imul
outs
addr16
add
jo
imul
outs
ins
jo
dec
outs
add
dec
popa
jae
inc
ins
outs
arpl
imul
jne
jo
je
imul
jns
dec
gs
fs
ins
imul
add
je
jb
add
outs
fs
jne
ins
popa
outs
add
outs
fs
data16
popa
je
add
xor
data16
xor
data16
data16
xor
arpl
xor
aaa
add
xor
fs
xor
bound
xor
cmp
fs
xor
arpl
data16
arpl
gs
ss
bound
data16
xor
xor
xor
popa
bound
gs
xor
xor
add
xor
xor
xor
xor
cmp
xor
xor
xor
xor
data16
add
bound
data16
aaa
data16
aaa
data16
data16
xor
cmp
arpl
xor
cmp
cmp
xor
bound
xor
popaw
xor
arpl
cmp
arpl
data16
cmp
gs
data16
bound
aaa
xor
xor
xor
popa
cmp
data16
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
arpl
xor
xor
bound
xor
xor
cmp
cmp
xor
cmp
xor
popa
popaw
xor
xor
cmp
xor
bound
xor
xor
aaa
popa
xor
fs
ja
outs
outs
ja
ja
outs
outs
ja
jae
popa
jb
add
outs
outs
ja
outs
add
data16
bound
jae
imul
gs
push
gs
jae
inc
jb
jo
imul
inc
jbe
imul
je
add
je
inc
jbe
imul
je
jae
push
imul
outs
inc
jns
gs
outs
jne
fs
jb
add
je
dec
jae
gs
je
inc
outs
jo
inc
jns
gs
push
gs
outs
jo
je
ja
outs
outs
ja
outs
add
outs
outs
ja
imul
imul
push
gs
popa
je
push
gs
popa
je
inc
outs
jo
push
je
jb
add
je
jb
gs
jo
arpl
inc
gs
jbe
imul
outs
jo
dec
jne
jo
je
je
gs
dec
imul
add
inc
imul
add
imul
inc
gs
jns
bound
add
jo
imul
imul
outs
jae
ins
imul
outs
jae
bound
gs
ins
add
ins
add
outs
jne
add
ins
add
jo
jns
bound
add
je
outs
add
jb
inc
dec
pop
dec
push
inc
inc
push
add
imul
outs
push
jb
add
imul
jb
add
je
push
gs
jb
add
popa
je
arpl
fs
jae
popa
je
arpl
outs
addr16
add
popa
je
arpl
fs
jae
popa
je
arpl
outs
addr16
add
je
gs
jb
add
popa
fs
push
push
gs
fs
outs
je
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
and
gs
outs
xor
xor
xor
xor
and
gs
outs
xor
xor
xor
xor
and
gs
outs
xor
xor
xor
xor
and
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
dec
jae
bound
jo
imul
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
je
jns
add
je
imul
pop
dec
gs
imul
pop
dec
gs
popa
add
je
push
je
arpl
jb
arpl
addr16
dec
outs
outs
gs
js
gs
imul
pop
push
gs
imul
arpl
add
je
outs
je
jns
jae
gs
bound
addr16
dec
outs
arpl
imul
inc
imul
jns
popa
ins
add
popa
jb
jae
imul
dec
outs
addr16
add
bound
jb
outs
add
je
imul
inc
imul
inc
jb
popa
je
inc
imul
push
gs
jne
arpl
popa
outs
popa
addr16
inc
fs
imul
outs
inc
jb
popa
jns
dec
outs
popa
add
outs
jae
add
je
inc
outs
je
jns
outs
imul
push
popa
jb
ins
gs
jb
add
jbe
imul
gs
dec
popa
ins
add
je
js
arpl
imul
ins
bound
addr16
dec
je
ins
add
je
bound
arpl
gs
inc
outs
jne
je
push
gs
popa
arpl
push
gs
add
jne
push
outs
ja
jb
inc
jno
popa
ins
jae
addr16
push
gs
jo
outs
outs
jb
popa
je
outs
outs
add
je
inc
jo
ins
imul
inc
popa
jae
add
ins
bound
add
je
push
jb
jbe
je
inc
imul
push
jb
ins
add
je
push
gs
jb
je
jb
push
jo
imul
push
gs
imul
outs
push
gs
add
outs
ja
inc
gs
imul
imul
je
outs
jae
outs
outs
add
je
dec
je
ins
add
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
outs
jo
inc
jno
popa
ins
imul
jne
jb
outs
je
jb
arpl
jae
addr16
dec
popa
imul
add
je
dec
outs
fs
gs
popa
ins
add
je
push
push
inc
cmp
inc
gs
jns
gs
push
outs
inc
popa
jae
ss
je
imul
je
add
je
inc
push
inc
outs
je
jb
inc
outs
outs
je
imul
inc
gs
gs
jo
popa
je
add
jb
popa
je
inc
jb
popa
je
inc
imul
jns
dec
jo
outs
push
jb
je
add
fs
imul
add
jo
outs
add
pop
dec
outs
gs
popa
ins
imul
jb
ins
gs
inc
gs
gs
outs
add
je
dec
outs
fs
add
je
inc
jae
gs
bound
push
outs
dec
outs
je
xor
inc
gs
je
imul
ins
inc
popa
jae
ss
je
imul
gs
add
outs
je
xor
push
outs
push
imul
outs
inc
outs
jne
ins
add
outs
arpl
outs
jo
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
gs
jb
jo
jb
jns
inc
gs
gs
gs
outs
add
je
push
outs
imul
gs
popa
ins
add
je
jne
ins
imul
gs
popa
ins
ins
imul
ins
bound
addr16
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
push
popa
jb
add
jbe
jb
add
popa
fs
jns
add
je
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
inc
outs
jo
add
outs
add
mov
sub
test
ror
out
add
mov
pop
push
sbb
mov
popa
rcr
dec
add
add
add
push
add
adc
push
adc
inc
add
add
and
add
push
pop
add
adc
add
or
or
push
or
add
or
adc
sbb
add
push
pop
add
adc
add
sbb
add
sbb
add
add
push
push
add
adc
add
push
push
add
add
push
add
adc
push
adc
aaa
add
add
add
add
xor
xor
sub
add
popa
add
add
cmp
sub
add
add
add
aaa
add
add
add
add
add
xor
add
add
or
add
add
push
adc
add
add
push
or
add
add
adc
push
add
push
sbb
add
or
add
or
add
or
add
add
add
add
sbb
add
adc
or
add
adc
add
or
or
add
sbb
push
sbb
pop
add
adc
adc
adc
and
add
add
and
or
push
adc
pop
add
sbb
pop
add
sbb
or
add
rol
or
add
or
add
or
and
or
and
add
and
add
or
add
or
and
or
pop
or
push
sbb
or
pop
add
pop
add
add
pusha
add
add
or
push
adc
adc
push
adc
adc
add
push
adc
adc
add
adc
sbb
push
adc
add
add
add
or
add
add
add
and
add
call
add
add
or
add
add
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
cmp
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
cs
cmp
add
add
or
add
push
or
adc
sbb
push
and
add
xor
and
adc
push
add
add
add
add
jno
add
adc
push
sbb
push
push
push
sbb
cmp
add
adc
add
add
or
push
push
add
sbb
add
adc
cmp
sbb
pop
add
or
pop
add
xor
add
or
cmp
push
pop
add
adc
sbb
adc
sbb
and
sbb
sbb
sbb
cmp
and
add
adc
sbb
add
add
add
push
add
push
or
mov
xor
push
and
add
add
pop
or
sbb
adc
or
and
push
push
add
add
adc
add
push
add
add
and
sbb
and
push
sbb
add
add
add
push
add
add
or
pop
add
xor
adc
add
or
add
adc
or
add
sbb
add
add
add
sbb
pop
or
push
sbb
sbb
add
and
add
push
push
pop
add
or
or
add
or
adc
and
adc
add
or
add
add
sbb
pop
add
adc
add
add
add
push
add
add
add
add
pop
add
add
pop
and
adc
sbb
or
or
adc
adc
xor
adc
add
adc
sbb
add
sbb
add
add
add
sbb
and
add
add
push
push
sbb
push
add
adc
add
push
push
push
or
add
sbb
add
xor
xor
add
or
add
xor
push
or
sbb
popa
add
popa
add
fld
in
and
adc
adc
or
add
push
add
add
or
pop
pop
push
or
or
and
push
sbb
pop
add
sbb
push
add
or
add
sbb
add
add
pop
add
or
add
adc
or
add
int
and
adc
add
cmp
and
sbb
and
adc
add
and
sbb
and
adc
add
add
aad
pop
and
or
or
ins
sbb
or
or
sbb
add
or
or
push
sbb
add
adc
sbb
adc
add
add
or
pop
add
or
or
add
or
pop
push
push
or
or
add
or
adc
add
sbb
add
adc
add
sbb
pop
add
adc
pop
or
adc
add
sbb
or
or
sbb
add
add
add
adc
sbb
add
add
add
adc
or
or
or
pop
adc
or
or
or
or
or
or
or
or
or
push
or
or
or
or
push
or
or
or
sbb
add
add
add
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
dec
add
arpl
xor
arpl
outs
add
jns
dec
add
cmp
sbb
jp
arpl
xor
arpl
outs
add
jns
dec
add
cmp
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
sbb
add
and
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
