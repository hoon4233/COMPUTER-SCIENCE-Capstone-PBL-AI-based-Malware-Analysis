lods
stos
pop
lods
ror
rcr
outs
inc
daa
popf
push
sub
arpl
push
arpl
adc
jmp
cmp
lods
(bad)
ja
xchg
das
daa
lea
inc
inc
bound
daa
popf
push
scas
mov
loope
add
sbb
arpl
arpl
jmp
loope
xchg
push
arpl
push
and
loope
inc
daa
call
bound
popf
push
movs
pop
data16
test
adc
add
popf
add
aaa
(bad)
push
xchg
cmp
push
js
xor
retf
shr
retf
xchg
cmp
jo
loope
sub
das
dec
test
fiadd
xchg
fild
addr16
ins
inc
daa
popf
gs
push
scas
fcom
add
ds
mul
out
fist
mov
pop
xchg
jmp
out
daa
popf
push
sub
jmp
xor
aas
retf
loope
retf
push
push
daa
ds
mul
loope
retf
push
push
inc
lods
fild
pop
sub
cmp
xor
push
mul
loope
adc
out
sbb
pop
mul
xor
jns
ds
int3
jp
arpl
lods
out
adc
mov
mov
stos
idiv
je
test
sub
xor
xchg
adc
adc
lods
test
xchg
mov
jb
add
bound
scas
mov
xchg
mov
daa
pop
outs
push
xchg
fild
daa
popf
push
sub
cmp
daa
popf
jmp
xor
imul
and
push
daa
mul
push
loope
inc
movs
pop
bound
call
push
int3
mov
inc
pop
fsubr
sbb
push
jecxz
xchg
jb
sub
adc
push
scas
inc
lahf
pushf
push
daa
shl
in
push
imul
rol
popf
push
iret
cmp
mul
add
xor
es
push
int3
dec
push
out
popf
push
jb
(bad)
sub
gs
add
aaa
(bad)
inc
adc
inc
daa
popf
push
retf
lea
adc
imul
push
arpl
data16
sahf
mov
add
scas
inc
dec
popf
add
mov
add
gs
add
fild
xor
push
fsubr
xchg
jb
sub
dec
mul
jecxz
xor
sbb
daa
push
scas
pop
push
push
jecxz
fcmovne
sbb
push
in
leave
inc
daa
popf
push
daa
enter
mov
inc
daa
jne
xor
popf
cmp
jo
hlt
dec
push
leave
jecxz
push
gs
dec
popf
add
sahf
add
popf
add
popf
jmp
jne
inc
daa
adc
(bad)
fsub
inc
push
pop
sub
scas
sbb
or
ret
xchg
mov
es
out
fild
xchg
mov
push
popf
push
iret
jns
inc
daa
lods
pushf
sub
gs
out
adc
mov
es
push
jecxz
push
mov
and
push
rcl
xchg
arpl
push
sbb
sahf
hlt
fldenv
test
pop
xor
adc
retf
cmp
xor
scas
pop
out
(bad)
out
fcmovne
add
mov
push
daa
imul
push
xchg
xchg
xor
jne
ds
popf
jecxz
cmps
push
sub
push
cdq
pop
xchg
fcom
push
fsubr
jbe
daa
bound
push
fsubr
xchg
scas
and
inc
scas
pop
xchg
xor
jne
ds
popf
arpl
int3
test
cmp
pushf
pop
inc
lahf
lahf
push
daa
jbe
into
fild
into
bound
adc
sub
jns
test
adc
sub
inc
adc
mov
and
call
cmp
push
loope
pushf
xor
lods
stos
lods
adc
pop
pop
fsubr
jle
push
add
mov
pop
popf
push
loope
pop
mov
daa
xchg
pushf
xor
lods
stos
lods
sub
stos
pop
int3
fwait
jecxz
push
gs
js
mov
(bad)
retf
lea
adc
pop
dec
pushf
or
mov
mov
call
mov
daa
push
btr
push
movsx
jbe
les
push
push
xor
jbe
int3
bound
mov
cdq
cdq
push
jle
call
jecxz
movs
push
xchg
pop
cmps
mov
push
add
call
loope
aaa
movs
das
mov
cwde
loope
fbstp
into
jmp
into
bound
test
fwait
(bad)
out
bound
(bad)
sbb
xor
lods
fsub
out
mov
inc
daa
call
sbb
lahf
bound
sbb
pop
aas
into
ret
inc
es
xor
push
jno
loope
sub
aaa
push
loopne
xchg
mov
push
test
ret
xchg
mov
scas
or
inc
push
sub
inc
lods
fsub
out
mov
inc
daa
call
arpl
fcomp
adc
enter
cmps
loop
and
cwde
pop
ja
ret
xchg
mov
scas
or
lahf
push
ins
lods
ret
and
ret
xchg
mov
in
jecxz
jbe
cmp
lods
shl
xchg
or
mov
loope
pushf
lods
add
aas
daa
popf
loope
das
daa
mov
into
out
add
mov
into
test
or
xor
mov
inc
aas
popf
xor
adc
retf
cmp
add
xchg
dec
lahf
pop
and
popf
and
adc
mov
shl
scas
(bad)
jmp
hlt
ror
push
jbe
stos
mov
pop
nop
inc
out
jne
in
adc
push
scas
pop
jmp
jo
movs
mov
icebp
bound
xchg
fild
bound
loope
fist
outs
in
aas
mov
in
jecxz
jbe
cmp
lods
call
lods
add
lods
or
addr16
inc
fcomp
jecxz
int3
and
inc
pop
adc
outs
aad
daa
dec
sub
jle
push
dec
push
inc
push
pop
sub
jge
add
adc
jbe
adc
mov
jl
test
adc
pop
dec
cwde
push
outs
hlt
jno
xchg
inc
fist
add
dec
ret
mov
fisub
into
bound
cmp
fidivr
inc
jno
sbb
pop
popa
sub
mov
add
xor
in
jecxz
je
cmp
lds
cmps
xor
fbstp
dec
iret
cmc
push
inc
daa
adc
sub
fadd
xchg
xor
imul
daa
jne
xor
popf
jecxz
es
loope
pop
inc
scas
ins
xor
adc
retf
cmp
xchg
arpl
push
sar
add
adc
les
add
add
xchg
leave
add
fmul
(bad)
int3
popa
cdq
xchg
xor
push
jb
je
shr
and
das
mov
fsubr
bound
js
xor
movs
jno
adc
retf
das
and
inc
(bad)
jmp
std
aam
inc
movs
mov
push
daa
jne
aaa
daa
popf
out
xlat
int
push
(bad)
fild
out
push
scas
pop
rcl
popf
push
rcl
scas
pop
pop
xchg
inc
gs
adc
scas
cs
pop
adc
fisub
dec
popf
out
xlat
int
rcl
into
in
stos
dec
cld
xchg
test
call
stos
inc
ja
retf
popf
loope
fsubr
jg
daa
popf
push
in
test
sbb
mov
mov
xchg
stos
xor
lods
stos
pop
int3
xchg
cmp
fsub
mov
aas
popf
push
out
xor
out
pop
aas
into
ret
inc
es
and
retf
sub
inc
into
call
cmp
popf
push
and
dec
aas
xchg
fild
xchg
fiadd
sub
lods
inc
daa
popf
loope
sub
adc
gs
jecxz
sar
ret
xchg
mov
mov
jmp
sub
push
pop
mov
push
inc
jecxz
movs
mov
push
fsub
inc
stos
sbb
mov
push
popf
push
es
cdq
cmps
gs
out
(bad)
bound
fsub
sub
xchg
mov
movs
mov
push
jae
push
scas
inc
imul
mov
inc
stos
fcomp
int3
addr16
cmp
pop
bound
les
push
mov
push
pop
mov
es
push
inc
gs
sbb
fiadd
daa
jmp
arpl
bound
xchg
fild
bound
inc
pop
sub
inc
push
call
daa
cmp
repz
jecxz
fist
outs
call
sub
daa
popf
xor
push
add
lahf
push
bound
add
ds
repz
out
xlat
int
xor
push
xchg
jp
inc
daa
popf
push
adc
dec
lods
loop
adc
das
mov
daa
popf
arpl
test
push
out
sub
fcomp
push
sbb
das
mov
cmps
jbe
xor
popf
out
sti
bound
gs
cmp
pop
(bad)
std
shl
popf
push
bound
xchg
lods
inc
pop
sub
inc
fsub
inc
lods
fsub
mov
jmp
push
sar
ret
xchg
mov
mov
jmp
sub
push
pop
mov
fist
das
mov
fcom
mov
test
push
scas
inc
popf
movs
scas
sbb
test
xor
movs
jno
adc
retf
pop
or
pushf
xchg
into
loopne
pushf
into
aam
xchg
outs
fist
int3
bound
gs
push
cs
pop
push
loopne
xchg
inc
daa
popf
push
aam
xchg
outs
fist
outs
call
jmp
int3
bound
push
jae
xchg
push
jb
cdq
jmp
add
adc
inc
es
xlat
test
push
jbe
push
movs
pop
(bad)
(bad)
rcl
outs
out
fild
iret
inc
popf
mov
sub
adc
outs
fist
xor
ds
popf
leave
and
adc
mov
adc
mov
fistp
arpl
lahf
adc
lods
push
jle
cdq
push
ja
cdq
jmp
mov
popa
push
das
dec
cmps
mov
push
mov
fistp
push
dec
fsubr
bound
pop
add
inc
iret
xchg
add
daa
jbe
into
fistp
sub
daa
imul
daa
popf
push
dec
popf
hlt
push
daa
jne
sub
popf
jecxz
fcomip
push
pop
iret
in
add
dec
scas
pop
jmp
jnp
popf
pop
mov
stos
rcr
dec
fsubr
xchg
scas
sahf
repnz
dec
popf
out
ror
add
ins
mov
iret
cmp
pop
setge
push
cmp
push
jns
mov
dec
stc
pop
inc
daa
into
cmp
pushf
ret
outs
sbb
xchg
inc
popf
push
call
mov
dec
jns
add
daa
popf
jecxz
shl
mov
fldenv
scas
cmps
xchg
mov
mov
adc
inc
call
sub
daa
popf
xor
popf
push
mov
adc
outs
call
mov
fcom
out
sbb
xchg
pop
iret
pushf
xchg
mov
movs
mov
push
in
sbb
cmp
mov
int
fild
xchg
adc
das
mov
cmps
jbe
dec
daa
popf
out
sti
bound
gs
loope
(bad)
bound
xor
jecxz
fist
inc
daa
adc
inc
call
retf
xchg
mov
test
push
lods
movs
xchg
adc
das
mov
and
retf
(bad)
fild
cmp
mov
loopne
jecxz
fbld
mov
fldenv
adc
add
inc
daa
adc
stc
fsub
pop
xchg
leave
add
fmul
push
into
bound
xchg
sbb
inc
daa
popf
or
call
ret
mov
push
cmps
and
dec
mov
imul
jns
sub
sbb
scas
xor
mov
loopne
jecxz
xchg
bound
daa
push
into
mov
adc
dec
nop
sbb
mov
fcomp
push
ret
xchg
mov
fisub
mov
popfw
or
xchg
lock
pop
outs
inc
ja
sub
push
iret
repz
inc
movs
mov
push
mov
adc
inc
call
sub
gs
add
xchg
push
mov
xchg
mov
fsub
inc
push
mov
mov
fsub
adc
out
pushf
mov
sbb
inc
daa
jmp
xchg
mov
daa
imul
out
sub
int
push
daa
jne
mov
(bad)
jmp
mov
dec
pushf
add
(bad)
fild
call
jbe
bound
mov
sub
arpl
sub
gs
add
xchg
push
sub
mov
fsub
inc
push
mov
mov
fsub
adc
jb
mov
sbb
inc
daa
jmp
xchg
mov
daa
imul
test
inc
dec
int
push
daa
jne
mov
(bad)
jmp
mov
dec
pushf
add
(bad)
fild
call
jmp
push
mov
sub
arpl
sub
gs
add
xchg
push
scas
push
data16
bound
push
xchg
lods
ret
xchg
mov
lahf
or
inc
daa
push
into
mov
adc
sub
gs
add
xchg
push
jae
xchg
mov
fsub
inc
push
xchg
lods
ret
xchg
mov
dec
pushf
add
(bad)
fild
ja
sub
mov
mov
sbb
inc
daa
jmp
shl
fisub
mov
fsub
sub
xchg
mov
dec
pushf
add
(bad)
fild
call
mov
bound
mov
sub
arpl
les
popf
pop
push
loope
sbb
gs
push
mov
int
sbb
mov
es
out
popf
leave
and
and
daa
pop
out
mov
into
xchg
daa
adc
mov
adc
repz
into
in
out
lahf
fsub
pop
lods
sbb
int3
pop
bound
dec
out
out
mov
popf
push
mov
int
ret
xchg
mov
jo
jecxz
fist
inc
call
les
push
mov
push
iret
xchg
fsub
inc
scas
inc
imul
bound
fsub
inc
sub
int3
inc
daa
popf
jmp
setno
inc
pop
out
out
arpl
out
fsub
inc
daa
popf
push
mov
int
ret
xchg
mov
fsub
pop
lods
lods
xchg
adc
sbb
xchg
jnp
push
mov
int
xlat
(bad)
fild
mov
int
jg
mov
daa
popf
push
bound
xchg
sbb
daa
popf
out
mul
mov
fsub
pop
lods
movs
xchg
shl
popf
push
scas
fcom
inc
daa
xchg
stos
dec
mov
adc
scas
fsub
pop
lods
sbb
int3
pop
bound
dec
out
inc
scas
cdq
sahf
push
stos
sbb
int3
mov
int
jg
retf
bound
lahf
es
jecxz
movs
loopne
inc
sub
mov
mov
(bad)
sbb
int3
mov
int
jg
retf
bound
xchg
sbb
inc
daa
popf
jmp
bound
call
gs
mov
popfw
out
fisub
mov
daa
popf
jmp
stos
fsub
inc
into
mov
daa
imul
jbe
push
lahf
dec
inc
daa
push
into
mov
adc
mov
fcom
out
mov
dec
clc
mov
fsub
pop
iret
add
inc
daa
push
scas
push
inc
pop
out
xlat
fsub
inc
daa
push
out
stos
fsub
into
mov
adc
jecxz
arpl
mov
aaa
adc
(bad)
and
out
mov
xchg
mov
shl
daa
popf
cdq
loop
and
int3
sbb
imul
mov
in
pop
mov
and
xor
ret
xchg
mov
gs
loope
and
ja
push
mov
daa
popf
jecxz
fistp
jge
popf
push
out
out
jbe
popf
push
mov
int
ret
xchg
mov
jo
jecxz
fist
jbe
adc
les
push
mov
push
iret
neg
arpl
inc
daa
imul
jb
push
jle
add
fldenv
inc
lods
sbb
mov
pop
bound
fldenv
retf
xchg
mov
scas
jp
inc
daa
popf
push
adc
aaa
fsub
(bad)
retf
(bad)
jecxz
sahf
cdq
push
daa
outs
iret
int3
call
js
retf
bound
lahf
push
inc
jecxz
movs
loopne
inc
sub
add
daa
popf
jmp
mov
fsub
pop
dec
in
mov
fsub
pop
lods
movs
xchg
push
sbb
das
mov
cmp
mov
mov
adc
daa
fsub
pop
dec
popf
xchg
repnz
mov
fldenv
int3
pop
bound
into
jmp
mov
daa
popf
push
movs
and
mov
mov
push
xlat
das
fsub
inc
sub
lods
inc
daa
popf
out
inc
bound
das
fsub
scas
mov
mov
loopne
jecxz
jnp
xchg
mov
scas
sbb
mov
cmps
and
mov
mov
pop
out
mov
arpl
sub
fsub
retf
xchg
mov
(bad)
fild
mov
int
lds
push
jecxz
jecxz
es
jecxz
stos
adc
(bad)
fcomp
jmp
sbb
bnd
xchg
mov
fisub
int3
mov
adc
inc
fisub
mov
daa
popf
jmp
retf
xchg
mov
(bad)
fild
mov
int
popa
dec
popf
push
jecxz
jecxz
push
inc
jecxz
movs
and
mov
daa
and
popf
movs
scas
sbb
mov
lods
sbb
mov
pop
bound
fcomp
fidivr
(bad)
bound
fldenv
lds
arpl
mov
pop
bound
lods
sbb
mov
pop
bound
cmps
outs
mov
ret
xchg
mov
fldenv
ret
xchg
mov
fsub
cli
xlat
bound
mov
popf
loope
iret
bound
jno
jmp
mov
mov
int
ja
retf
(bad)
jmp
jle
ret
xchg
mov
repz
mov
int
ja
retf
(bad)
int3
mov
int
ja
retf
(bad)
int3
mov
int
ja
retf
(bad)
(bad)
in
jle
daa
push
out
cmps
fsub
pop
lods
lods
xchg
adc
je
mov
bound
adc
sbb
add
addr16
push
out
popf
push
ja
jecxz
daa
popf
push
movs
jno
adc
retf
iret
pop
das
mov
lods
loopne
into
fstp
add
popf
push
daa
cmc
xor
popf
and
cdq
ror
sbb
jecxz
(bad)
push
pop
cmps
scas
loopne
scas
pop
imul
gs
push
repz
and
mov
loopne
mov
popf
push
bound
int3
inc
jne
add
jp
push
dec
sbb
fwait
imul
inc
int3
lods
add
bound
sbb
push
das
mov
ds
daa
popf
sti
mov
cdq
push
cwde
ja
sub
fist
inc
dec
popf
add
inc
dec
pop
daa
imul
daa
jne
and
popf
jecxz
jo
pop
and
popf
xor
(bad)
retf
test
adc
mov
lahf
or
push
into
bound
xchg
cwde
push
repz
jecxz
movs
mov
push
out
jnp
daa
push
dec
pop
mov
mov
push
add
lods
inc
retf
add
inc
and
imul
add
inc
and
sub
daa
aas
sub
popfw
gs
and
repz
daa
xchg
stos
dec
stos
jecxz
inc
daa
mov
gs
inc
fdivr
push
sub
and
popf
push
and
fiadd
sbb
jmp
add
pushf
outs
jg
fsubr
sbb
jb
popfw
sub
or
sub
popfw
imul
cmp
fisub
imul
sub
fwait
xchg
inc
pop
add
inc
scas
push
inc
(bad)
scas
pop
or
push
and
xchg
inc
daa
popf
xchg
inc
push
sub
inc
rcr
jp
and
inc
cmps
je
gs
popf
jmp
cmp
enter
push
adc
mov
popfw
outs
xor
lods
stos
scas
ss
push
lahf
daa
jbe
daa
push
into
bound
xchg
popf
outs
scas
sub
mov
popfw
bound
and
inc
cmps
pop
mov
daa
popf
jmp
cmp
enter
push
(bad)
arpl
fsub
imul
lods
stos
scas
call
(bad)
scas
pop
jmp
pop
outs
stos
mov
popf
push
xchg
arpl
fsub
push
scas
mov
push
cmps
ins
ds
daa
popf
jmp
pop
outs
add
popf
push
scas
arpl
repz
xchg
inc
pop
add
inc
cmps
je
pop
daa
popf
jmp
je
inc
daa
popf
retf
stos
mov
movs
cmc
push
daa
adc
jbe
adc
(bad)
sub
and
add
inc
movs
pop
push
push
daa
je
inc
daa
popf
retf
add
xchg
cli
pop
daa
je
inc
daa
popf
retf
stos
mov
movs
cmc
push
daa
je
inc
daa
popf
xchg
inc
push
sub
inc
movs
cwde
push
fsub
push
inc
scas
push
pop
(bad)
scas
pop
jmp
inc
and
out
daa
popf
pop
xchg
inc
imul
addr16
mov
ins
lahf
arpl
popf
jecxz
popa
pop
push
ja
sub
sub
xchg
push
out
ds
fist
out
xlat
lahf
fild
cmps
popf
push
pop
fcom
daa
popf
push
sbb
sub
inc
cmps
nop
jb
popfw
sub
fild
adc
popf
imul
sub
mov
sub
pop
push
push
aas
add
inc
addr16
jbe
je
inc
daa
popf
jecxz
sar
iret
adc
mov
daa
imul
fsubr
sub
stos
inc
daa
popf
jecxz
popa
pop
push
push
cmp
inc
scas
push
pop
(bad)
scas
pop
gs
and
retf
add
daa
popf
loop
rcl
sub
jge
iret
bound
icebp
bound
xchg
popf
push
mov
sbb
ins
mov
daa
adc
mov
adc
mov
pop
gs
bound
(bad)
daa
popf
push
sub
fisub
imul
sub
mov
push
mov
call
ins
xor
outs
dec
mov
push
int3
mov
pop
arpl
popf
jmp
adc
add
fsubr
xchg
cwde
mov
popfw
jmp
mov
loopne
inc
push
nop
jmp
cwde
(bad)
xlat
addr16
outs
les
xchg
cli
pop
daa
popf
sbb
xchg
cli
pop
daa
pop
push
and
xchg
inc
sub
cli
pop
daa
movs
outs
dec
mov
push
cld
sbb
xchg
xor
cli
pop
daa
popf
sbb
xchg
cli
pop
daa
pop
push
and
xchg
inc
sub
cmc
push
daa
movs
outs
dec
mov
push
cld
bound
xchg
fild
xlat
mov
in
or
sub
popf
popf
cmps
scas
fcomp
mov
enter
retf
cmp
dec
cmps
push
push
popf
xchg
inc
push
sub
inc
dec
xchg
rol
daa
popf
jecxz
dec
mov
add
js
push
jnp
sub
gs
mov
loopne
inc
std
gs
cmp
mov
push
test
push
std
gs
cmp
mov
imul
std
gs
cmp
scas
ret
test
xor
gs
cmp
pop
ret
test
retf
adc
inc
fist
adc
into
cmp
pushf
push
test
mov
daa
cmc
out
std
gs
out
(bad)
int
push
jnp
sub
fadd
into
push
stos
daa
adc
out
scas
fcomp
inc
daa
popf
jmp
lods
push
pushf
push
movs
clc
xchg
inc
fcomp
jmp
lods
aaa
nop
push
movs
clc
mov
inc
daa
popf
push
bound
inc
daa
popf
out
push
daa
sub
fmul
add
and
inc
pop
lahf
scas
pop
lods
add
push
ud0
adc
sti
stos
call
push
aam
out
iret
int
inc
daa
fwait
push
bound
mov
daa
adc
jbe
adc
retf
cmp
ja
push
daa
imul
and
mov
daa
adc
out
bound
jecxz
fcomp
pop
dec
pushf
xor
jmp
push
push
cmp
add
fwait
xchg
xor
jne
es
popf
jmp
or
push
fsubr
mov
fcomp
out
iret
int
xor
bound
mov
jns
dec
lahf
xor
inc
daa
push
into
bound
xor
movs
jno
and
arpl
loope
fist
outs
in
aas
mov
bound
or
adc
mov
push
dec
jecxz
retf
adc
scas
dec
cdq
add
pushf
out
(bad)
out
iret
int
xor
imul
bound
sub
fmul
loope
shl
int3
bound
test
pop
jecxz
fist
scas
js
clc
cmp
push
dec
scas
gs
mov
push
sub
inc
fsubr
bound
mov
pop
aas
into
ret
dec
je
cmp
sbb
bound
xchg
fild
fcom
xchg
inc
daa
popf
pop
jae
sub
jo
mov
pop
outs
sub
cs
mov
pop
pop
sub
cs
mov
pop
push
sub
cs
mov
gs
sub
fdivr
arpl
loop
pop
pop
das
mov
fcom
(bad)
add
sbb
inc
daa
adc
or
push
pop
gs
push
scas
addr16
push
xor
(bad)
int
gs
xor
jecxz
movs
jne
dec
xchg
cdq
ins
jp
popf
push
push
ret
gs
bound
xchg
adc
dec
and
inc
ja
rcr
daa
popf
gs
jb
add
cmc
and
inc
jne
cmp
popf
push
bound
(bad)
fcom
aas
push
stos
leave
jns
es
inc
bound
scas
and
mov
fdivr
arpl
add
sahf
into
xor
and
pop
jle
sbb
push
sub
pop
mov
push
sub
inc
cmps
mov
jecxz
outs
sbb
and
fistp
add
ins
inc
push
fucom
mov
sbb
xchg
(bad)
iret
cdq
gs
and
push
stc
daa
popf
push
sub
xchg
(bad)
iret
cwde
jmp
inc
imul
and
add
ins
into
and
jmp
gs
sbb
xchg
(bad)
iret
lahf
jmp
gs
inc
and
push
add
outs
inc
sbb
inc
daa
jmp
push
push
mov
(bad)
fcom
aas
push
stos
leave
jns
es
inc
call
add
xchg
int3
bound
imul
gs
and
jns
call
jmp
gs
inc
es
add
inc
push
scas
jecxz
movs
jne
dec
xchg
cdq
ins
jnp
jmp
push
push
call
aas
jne
sbb
popf
loope
aaa
adc
push
and
inc
xor
mov
sub
fnstsw
jl
test
stos
sub
cmp
fcomp
loope
das
jbe
jbe
jbe
(bad)
sbb
jmp
iret
sahf
push
push
ins
jmp
iret
sahf
push
push
(bad)
sub
bound
push
loope
mov
into
popf
push
movs
pop
pusha
mov
daa
xchg
fcom
aaa
pop
mov
mov
push
cld
adc
inc
dec
adc
bound
repz
gs
and
push
add
push
movs
clc
xchg
inc
int3
xchg
jecxz
and
xchg
int
call
xchg
das
mov
lods
cdq
jne
and
loope
scas
fcom
outs
not
inc
std
pushf
mov
add
pushf
loope
rcl
inc
cmp
xchg
inc
push
push
jmp
inc
std
mov
into
fstp
inc
scas
fcom
retf
imul
gs
fcomp
jmp
retf
outs
inc
neg
add
xchg
and
pushf
push
daa
into
cmp
xchg
enter
lahf
xchg
jae
(bad)
daa
jne
mov
sub
xor
out
pop
aas
into
ret
bound
popf
sub
push
jno
add
xchg
and
popf
push
daa
popf
push
push
call
es
out
mov
bound
repz
ins
(bad)
call
push
sub
out
mov
bound
sti
gs
imul
sbb
xchg
inc
push
mov
mov
sbb
sub
call
(bad)
aam
xchg
mov
fsub
lea
adc
pop
and
inc
jbe
popa
sbb
pop
mov
mov
or
lea
adc
stc
sub
pop
mov
or
cdq
fsub
jae
int
push
daa
jne
push
daa
popf
loope
add
scas
cdq
jg
mov
push
mov
pushf
gs
mov
imul
cdq
pushf
fild
sub
daa
mov
aam
xchg
mov
aam
xchg
mov
sbb
push
mov
xchg
(bad)
aam
xchg
mov
xor
jecxz
repz
xchg
mov
gs
jmp
xchg
out
shl
popf
push
inc
fs
mov
fsub
inc
push
sub
inc
lods
or
xchg
out
jl
les
push
daa
adc
mov
bound
das
daa
lea
je
gs
daa
popf
jecxz
movs
imul
lahf
jecxz
call
test
lea
sbb
sahf
test
bound
stos
sbb
cdq
fsub
scas
out
push
fcomp
jmp
mov
daa
popf
add
xchg
jno
mov
clc
bound
mov
bound
xchg
jmp
mov
stc
bound
into
std
pop
add
push
jae
push
mov
sub
mov
cs
mov
push
inc
jmp
fcomp
jecxz
and
out
(bad)
stc
bound
inc
aaa
popf
push
fcomp
fdivr
frstor
push
cmps
sbb
inc
es
loope
stos
inc
xchg
mov
daa
movs
out
stos
enter
mov
bound
xchg
fild
xchg
inc
mov
fdiv
adc
popf
add
popf
push
xchg
or
movs
and
or
inc
scas
or
loop
jb
mov
enter
lds
push
or
push
push
scas
adc
clc
bound
mov
scas
inc
stos
scas
and
rcl
inc
fcomp
sahf
test
(bad)
jmp
shl
mov
push
sub
inc
cmps
and
xor
cli
gs
or
push
mov
adc
inc
xor
jecxz
mov
pop
adc
out
(bad)
bound
mov
stc
bound
inc
scas
sbb
cdq
fsub
ret
xchg
mov
fsub
inc
scas
sbb
cdq
fsub
ret
xchg
mov
fsub
ret
xchg
mov
lahf
inc
xchg
mov
clc
bound
inc
lods
sbb
ret
xchg
mov
jecxz
xchg
mov
fsub
ret
xchg
mov
fsub
xor
cmc
push
and
ficomp
sub
loope
lahf
inc
xchg
mov
dec
nop
push
daa
(bad)
(bad)
jmp
bound
xor
or
movs
and
bound
mov
pop
or
inc
sub
push
lahf
loope
xor
push
daa
lea
jne
cmc
adc
popf
jecxz
xchg
inc
xchg
mov
inc
pushf
push
cmps
loopne
inc
sub
push
inc
daa
popf
loope
shl
mov
into
popf
push
push
xchg
jmp
pushf
push
into
xchg
daa
push
out
mov
bound
inc
daa
popf
jmp
inc
and
mov
mov
popf
jmp
mov
clc
bound
jg
call
add
push
cmp
(bad)
iret
sahf
jmp
push
add
push
sub
cwde
jmp
push
xchg
inc
push
sub
inc
sub
jmp
stc
bound
repz
mov
fcomp
xchg
inc
sub
ins
jp
popf
push
push
mov
inc
adc
mov
scas
sbb
lds
sbb
mov
scas
lea
mov
mov
mov
fcomp
mov
lods
and
std
bound
jnp
pushf
push
daa
popf
pop
outs
cmps
mov
push
push
sub
sbb
pop
push
cmps
mov
push
push
xchg
jmp
popf
push
inc
pusha
jbe
dec
xchg
sbb
cdq
fsub
xchg
jmp
sub
mov
bound
cwde
fsub
repnz
xchg
mov
fcomp
scas
dec
cmps
and
xor
iret
mov
bound
test
bound
xchg
lahf
stos
cmps
and
sbb
clc
bound
ret
xchg
mov
fsub
inc
daa
popf
sbb
gs
sub
xchg
(bad)
mov
pushf
gs
mov
imul
cdq
pushf
fild
sub
inc
mov
jl
test
stos
pop
into
cmp
lods
shl
lods
pop
idiv
push
inc
daa
pop
das
mov
stos
test
cli
gs
rcl
popf
push
sbb
ds
inc
stos
loopne
retf
xlat
add
daa
popf
cdq
jecxz
loopne
retf
xlat
add
daa
popf
cdq
jecxz
cmps
or
add
add
inc
daa
sbb
das
mov
jbe
int
xchg
fcom
shl
ins
(bad)
bound
lods
sub
sbb
mov
jne
xchg
into
bound
add
pop
das
mov
je
inc
daa
popf
loopne
sub
aas
mov
fnstcw
sub
in
daa
popf
jmp
pushf
push
xchg
popf
push
dec
push
das
mov
scas
enter
fisubr
out
push
movs
sub
and
fadd
adc
(bad)
lds
pusha
(bad)
fstp
sub
and
fadd
imul
out
data16
(bad)
call
bound
dec
xchg
fisubr
out
push
sbb
outs
(bad)
bound
int3
bound
test
pop
jecxz
fist
push
daa
call
push
xor
sbb
das
mov
sbb
call
and
imul
mov
es
(bad)
bound
(bad)
pop
push
das
mov
scas
enter
sahf
push
les
popf
push
and
fadd
fadd
xor
out
pop
aas
into
ret
adc
retf
das
es
lea
push
les
mov
daa
popf
push
dec
popf
and
push
mov
inc
daa
call
fs
sbb
cs
popf
add
jo
lahf
sar
add
adc
sbb
mov
jmp
mov
cmp
retf
cmp
pop
cmps
push
inc
daa
popf
shr
popf
push
rcl
clc
bound
dec
jno
pop
dec
stos
sbb
fsub
scas
dec
retf
push
stos
sbb
fsub
scas
sub
jp
rcl
outs
fist
adc
in
sbb
push
inc
daa
popf
add
popf
xchg
xor
imul
(bad)
into
push
js
test
stos
aaa
into
cmp
cwde
cmp
push
sbb
and
push
daa
cmc
jmp
popf
add
push
cmps
bound
dec
iret
in
cmp
adc
(bad)
fldenv
pop
movs
loopne
inc
push
fwait
loope
sub
dec
inc
push
pop
and
scas
fcomp
adc
lds
inc
daa
adc
(bad)
out
cmp
daa
popf
jecxz
(bad)
popf
mov
loopne
push
pop
xchg
push
das
push
das
dec
scas
fcomp
mov
push
ins
cmp
xor
push
jno
pop
push
daa
popf
loope
(bad)
(bad)
enter
daa
ret
out
pop
aas
into
ret
dec
je
cmp
add
pop
add
sbb
outs
sub
daa
popf
push
fsubr
bound
scas
pop
jmp
jbe
jbe
call
push
sar
add
adc
sub
daa
retf
add
xchg
jecxz
movs
push
xchg
pop
cmps
mov
jecxz
dec
popf
out
fcmovne
cmp
ss
push
dec
popf
out
fcmovne
add
ins
mov
jbe
push
iret
add
inc
daa
adc
mov
adc
mov
fcomp
inc
daa
popf
xor
adc
retf
xor
xchg
into
loopne
push
cmps
popf
push
dec
cdq
add
popf
add
popf
stos
mov
jbe
push
loope
xchg
mov
int3
movs
jecxz
sar
add
adc
sub
daa
retf
sub
push
daa
adc
mov
fsubr
adc
sbb
inc
daa
retf
and
push
out
add
pop
xor
into
ret
adc
pop
dec
loopne
xchg
retf
inc
nop
inc
(bad)
bound
inc
daa
popf
pop
pushf
scas
inc
add
pop
sub
mov
fcom
into
jb
cmp
(bad)
fild
xchg
into
push
dec
cmps
mov
daa
popf
jmp
lods
xor
fadd
int
jb
fild
mov
push
movs
pop
bound
shl
lods
xchg
lods
sub
push
jns
call
inc
add
cmp
push
das
mov
scas
enter
mov
add
daa
popf
jmp
sbb
pop
aas
into
ret
adc
aaa
dec
lods
call
add
fstp
push
cmps
gs
xor
push
push
bound
jl
cmc
pop
cmps
gs
and
push
jecxz
sub
das
add
inc
iret
lea
inc
daa
(bad)
adc
outs
in
aas
mov
in
jecxz
movs
jno
adc
retf
pop
push
into
push
add
pushf
push
inc
jno
les
push
inc
jns
retf
out
mov
sahf
push
daa
outs
iret
into
jmp
push
es
mov
push
das
dec
sub
sub
fcom
sub
popf
popf
movs
scas
fdiv
add
xchg
fadd
and
cmp
inc
push
cdq
jmp
mov
mov
inc
cmps
lock
inc
cmps
loopne
inc
push
push
loope
sub
das
mov
jmp
push
sub
das
mov
(bad)
push
stos
pop
fadd
xor
push
pop
scas
and
sbb
mov
into
in
das
dec
sub
push
jb
gs
lock
fst
lds
mov
push
jecxz
or
xchg
ror
fmul
lock
loope
das
xchg
fst
nop
enter
pop
imul
sbb
iret
sub
gs
loope
das
xchg
fst
bound
add
ret
out
pop
or
mov
cli
xlat
lahf
popf
jp
daa
or
push
sahf
xchg
push
mov
mov
cli
xlat
push
mov
xlat
mov
pop
dec
mov
cli
xlat
addr16
sub
mov
cli
xlat
addr16
sub
mov
cli
xlat
push
inc
cli
xlat
mov
pop
popf
mov
cli
xlat
lahf
popf
fiadd
(bad)
fild
sahf
ja
repnz
cli
xlat
push
cmp
dec
mov
cli
xlat
movs
pop
outs
xlat
mov
push
lahf
mov
cli
xlat
push
jno
xlat
mov
or
mov
cli
xlat
inc
je
push
fisub
daa
mov
cli
xlat
mov
add
push
mov
cli
xlat
mov
xchg
jnp
popf
cli
push
mov
jb
mov
cli
int3
outs
cdq
cli
xlat
mov
cmp
or
cli
xlat
mov
test
jle
or
xchg
mov
cli
(bad)
out
cli
xlat
mov
push
inc
mov
cli
xor
or
cli
xlat
mov
cli
and
cs
fcomp
in
daa
xchg
push
mov
daa
dec
mov
adc
xlat
mov
cli
xlat
lahf
popf
jp
daa
or
cli
xlat
js
cli
xlat
mov
jmp
xlat
push
iret
cli
xlat
mov
rcl
test
inc
cli
xlat
mov
inc
xchg
dec
cli
xlat
mov
cmp
mov
cli
xlat
scas
push
cli
xlat
mov
popf
mov
or
cli
xlat
mov
xor
mov
cli
xlat
cdq
xchg
push
mov
mov
cli
xlat
es
xlat
mov
mov
lahf
popf
fiadd
daa
or
cli
xlat
mov
rcl
scas
inc
cli
xlat
mov
inc
xchg
dec
cli
xlat
mov
cmp
mov
cli
xlat
scas
push
cli
xlat
mov
popf
mov
or
cli
xlat
mov
xor
mov
cli
xlat
cdq
ja
repnz
cli
xlat
es
xlat
mov
mov
inc
or
or
mov
ret
jae
retf
cmp
add
sti
jecxz
sub
mov
lods
fcom
add
push
stos
scas
fmul
mov
fmul
and
adc
lahf
scas
fcom
inc
daa
je
inc
daa
popf
sar
jo
push
inc
popa
jecxz
repz
mov
ja
add
in
aas
mov
push
fwait
lods
add
popf
sub
adc
xchg
lahf
bound
inc
daa
popf
gs
jb
jecxz
push
dec
repz
adc
int3
bound
mov
adc
iret
jb
loopne
cmp
adc
inc
xlat
frstor
aaa
xchg
fmul
fnsave
inc
cmp
pop
push
scas
inc
imul
sub
mov
lods
fcom
into
jb
add
or
das
mov
jne
or
popf
gs
bound
into
call
dec
xchg
enter
int
test
push
and
das
mov
adc
inc
xlat
int
cmc
imul
push
inc
popa
jecxz
jmp
das
mov
fcomp
call
pop
lds
bound
mov
enter
jno
adc
retf
inc
aad
into
xlat
lods
call
popf
ror
sahf
stos
push
scas
pop
popf
lods
es
stos
mov
push
push
jecxz
jle
test
jb
jmp
inc
daa
call
pop
inc
daa
popf
out
(bad)
int
xor
jne
mov
das
adc
dec
out
out
pop
and
loopne
xchg
lahf
loope
sbb
xlat
add
(bad)
and
inc
scas
dec
and
dec
xchg
loopne
xchg
lahf
xchg
jae
xor
mov
sbb
add
push
push
sub
push
call
push
bound
scas
into
shr
movs
pop
jb
out
and
inc
scas
fcom
jp
popf
push
call
mov
push
movs
fcom
add
call
sahf
xchg
add
int3
mov
lahf
and
xchg
int3
xor
add
bound
out
and
inc
and
mov
gs
push
add
out
mov
mov
push
scas
fdiv
inc
lods
loopne
dec
nop
(bad)
mov
nop
scas
mov
add
popf
push
bound
cmp
push
pop
inc
lock
dec
nop
dec
stos
movs
aaa
xchg
mov
add
sbb
cmc
sar
gs
jecxz
and
stos
cli
gs
cmp
movs
pop
data16
and
inc
scas
fcomp
xlat
pop
popf
push
call
mov
push
movs
fcomp
add
call
sahf
xchg
add
int3
mov
mov
ins
jecxz
scas
inc
imul
call
mov
cmp
cli
gs
imul
fcomp
inc
sbb
add
enter
xor
mov
gs
loope
mul
sub
xchg
push
into
clc
sahf
push
sbb
test
ret
and
inc
lods
nop
mov
gs
jecxz
sbb
call
jb
xlat
push
into
bound
sub
adc
inc
and
add
(bad)
vpermq
add
popf
add
popf
push
bound
dec
iret
mov
das
mov
iret
int
xor
into
xchg
xor
jne
push
daa
popf
jecxz
sar
add
adc
mov
outs
popf
push
iret
and
lods
stos
pop
js
xor
cmps
jno
inc
daa
popf
cmp
jo
sbb
scas
(bad)
mov
jnp
ret
xchg
mov
push
sub
inc
lea
xchg
cwde
gs
shr
sbb
out
scas
fisub
into
loope
popf
or
popf
rcl
pop
popf
lods
out
ins
xchg
add
dec
xor
loopne
lods
push
scas
addr16
fsub
mov
daa
popf
lods
add
pushf
sub
xchg
fdivr
fsub
mov
into
out
add
mov
into
test
or
mov
xchg
mov
fcomp
xor
pop
out
inc
fsub
inc
iret
adc
test
in
pop
dec
loope
outs
mov
mov
scas
out
fsub
mov
gs
add
mov
int
sub
into
xlat
mov
into
loope
push
daa
imul
daa
imul
daa
popf
push
stos
sbb
scas
and
push
scas
sbb
mov
ins
jecxz
fsubr
(bad)
jmp
jne
or
popf
add
sbb
das
test
dec
xlat
add
fisub
scas
jp
push
fsubr
sahf
mov
popa
popf
push
and
fiadd
clc
fild
mov
int
mov
popf
push
loope
es
daa
adc
mov
dec
inc
mov
daa
adc
mov
dec
popf
push
cmps
jne
inc
daa
popf
xchg
inc
push
sub
inc
dec
pop
mov
daa
cmc
cmps
cwde
gs
out
fsub
mov
daa
sbb
push
dec
icebp
mov
daa
cmc
pop
cwde
gs
add
popf
jmp
pop
sbb
mov
push
ja
cmp
lods
call
int3
pop
scas
gs
mov
push
sub
inc
cmps
pop
pushw
daa
popf
jmp
add
int
add
int
inc
dec
mov
push
daa
imul
push
xchg
xchg
xor
jne
push
daa
popf
jecxz
movs
push
xchg
pop
cmps
mov
jecxz
fist
inc
fist
sub
push
lea
push
daa
popf
xchg
xor
jne
push
daa
popf
xor
adc
stos
call
mov
xor
add
popf
add
bound
push
fsubr
jp
push
xchg
xchg
xor
jne
inc
daa
popf
jmp
test
(bad)
adc
adc
jbe
adc
sub
bound
xchg
xor
bound
dec
iret
fwait
push
daa
push
scas
pop
js
test
pop
jo
mov
enter
xchg
push
stos
fcom
pop
dec
popf
add
lahf
push
daa
imul
daa
bound
dec
fsubr
bound
cs
push
inc
push
pop
xor
mov
mov
(bad)
(bad)
popf
arpl
(bad)
(bad)
popf
pop
xchg
mov
test
shr
fsubr
xchg
scas
push
aad
inc
push
pop
sub
out
pop
aas
into
ret
push
jno
loope
xor
das
pop
inc
adc
pop
cwde
push
cmp
pop
popf
push
and
jecxz
xlat
adc
and
int
pop
daa
lahf
push
daa
bound
dec
fsubr
bound
cs
push
inc
push
pop
cmp
imul
daa
bound
push
fsubr
xchg
scas
push
aad
inc
cs
push
dec
fsubr
xchg
scas
and
push
push
pop
sbb
push
into
bound
sbb
xchg
scas
retf
inc
sub
das
pop
js
mov
push
ja
cmp
pop
scas
gs
mov
fisttp
inc
daa
jmp
push
ja
lea
daa
popf
jecxz
fistp
xchg
gs
push
add
call
xchg
into
loopne
stos
pop
int3
movs
add
pop
push
daa
imul
daa
imul
inc
inc
sub
cmp
xchg
xchg
gs
arpl
int3
mov
mov
fsubr
or
popf
push
bound
sbb
pop
shr
fs
jno
out
lods
mov
arpl
adc
clc
fild
ja
test
pop
je
cmp
sbb
pop
das
mov
lods
fcom
into
jb
jecxz
int3
test
jnp
nop
pop
imul
int
xor
jne
add
popf
jmp
outs
call
aas
push
loope
push
stc
ins
popf
push
fistp
stos
inc
int3
out
sub
xor
xchg
mov
nop
daa
call
jmp
fdivr
daa
popf
ror
inc
popa
jecxz
fist
mov
sbb
inc
dec
sub
sbb
mov
bound
pop
scas
ins
imul
pop
sub
push
das
mov
scas
enter
pushf
xchg
lods
sub
stos
lods
and
mov
js
xor
movs
jno
adc
retf
das
and
mov
ins
jecxz
je
stc
add
popf
jecxz
fist
dec
jo
sub
scas
fcomp
inc
daa
lods
pushf
lods
xor
call
sub
movs
ins
sbb
and
sbb
daa
popf
or
sub
push
jl
rcr
popf
push
shl
movs
pop
or
scas
rcr
popf
push
push
jg
lods
and
aas
mov
dec
jmp
cmp
retf
clc
fild
iret
and
daa
push
scas
push
inc
bound
mov
sbb
xchg
xor
js
xor
lahf
shr
daa
jne
push
daa
popf
cmp
jo
adc
xchg
mov
push
movs
cmp
les
popf
jecxz
push
ins
jecxz
stos
sbb
mov
xlat
bound
test
inc
pop
inc
push
pop
cmp
push
call
dec
je
lea
into
mov
pop
push
iret
adc
inc
daa
adc
lahf
fsub
(bad)
ds
push
sar
xchg
mov
repz
mov
jmp
mov
fsub
retf
push
daa
popf
cmp
add
(bad)
mov
daa
push
into
mov
adc
mov
es
push
retf
inc
scas
ins
imul
adc
mov
pusha
xchg
into
out
mov
inc
daa
call
(bad)
int3
mov
xchg
mov
iret
jecxz
mov
dec
enter
bound
dec
iret
pop
das
inc
daa
push
scas
dec
dec
shl
mov
stos
fsubr
movs
pop
bound
sahf
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
iret
aad
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
push
inc
popf
push
mov
and
das
sbb
inc
jo
pop
add
popf
jmp
(bad)
popf
popf
mov
fisub
or
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
cwde
gs
xchg
repnz
mov
daa
push
scas
dec
iret
push
cs
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
mov
adc
sbb
xchg
into
loope
icebp
add
popf
ror
popf
push
shl
and
dec
scas
scas
fldcw
sahf
(bad)
push
daa
add
mov
fsub
adc
mov
daa
retf
arpl
xchg
xor
cmc
js
gs
loope
(bad)
mov
gs
cmp
movs
pop
jle
outs
fldcw
sahf
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
dec
xchg
mov
daa
(bad)
fistp
jb
push
movs
pop
(bad)
into
xlat
mov
into
loope
popa
add
popf
ror
popf
push
shl
and
jns
xlat
jge
inc
fsubr
xchg
mov
arpl
add
push
xchg
popa
xchg
mov
daa
popf
jmp
add
popf
ror
popf
push
shl
and
dec
scas
out
push
sahf
(bad)
push
daa
add
mov
fsub
adc
mov
daa
retf
fs
push
jecxz
jmp
cmp
sub
and
inc
daa
popf
repz
iret
add
call
shl
retf
xchg
mov
aaa
push
out
mov
dec
dec
mov
daa
int
cmp
jecxz
sbb
popf
push
mov
cwde
pop
fs
aad
inc
daa
and
inc
daa
popf
repz
iret
loope
(bad)
mov
gs
cmp
inc
movs
pop
jp
add
push
sahf
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
cmps
imul
daa
popf
cmp
popf
push
mov
cwde
pop
push
dec
push
mov
daa
(bad)
fistp
fisubr
movs
pop
bound
sahf
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
dec
or
lods
sbb
das
mov
jne
add
xor
add
daa
popf
push
shl
and
jns
in
inc
sub
sub
cmc
gs
push
jecxz
shl
jnp
push
rcl
fsub
into
loope
xor
dec
daa
popf
push
shl
and
jns
xlat
jge
inc
fsubr
xchg
mov
gs
push
jecxz
cmp
push
sub
push
(bad)
fstp
sub
and
inc
daa
popf
repz
iret
loope
(bad)
mov
gs
cmp
inc
movs
pop
jp
pop
mov
imul
iret
sti
fsub
inc
into
fld
daa
pop
out
inc
daa
bound
or
popf
jmp
mov
mov
sahf
out
(bad)
fsub
jl
gs
mov
call
(bad)
fsub
dec
xchg
mov
jo
daa
popf
repz
push
test
jne
xchg
(bad)
cmp
rol
xchg
sahf
jecxz
xchg
bound
add
cli
daa
popf
xchg
mov
gs
out
daa
popf
xchg
mov
daa
popf
jmp
outs
xlat
adc
mov
fcomp
(bad)
fsub
(bad)
daa
popf
push
movs
out
mov
fsub
mov
daa
popf
xchg
mov
fsub
pop
dec
stc
mov
daa
int
or
push
jecxz
sub
push
sub
push
(bad)
fstp
mov
daa
(bad)
fistp
push
push
movs
pop
(bad)
into
xlat
mov
into
loope
imul
daa
popf
push
shl
and
jns
in
inc
sub
sub
gs
push
jecxz
sbb
popf
push
mov
cwde
pop
push
dec
ins
mov
fsub
scas
fcmovu
push
movs
pop
(bad)
(bad)
mov
sbb
out
mov
arpl
mov
fsub
dec
movs
xor
out
stos
fsub
into
xlat
pushf
call
popf
loope
cmp
mov
jg
push
cmps
and
fsub
dec
mov
adc
outs
xlat
adc
int3
bound
push
mov
xchg
jmp
int3
mov
adc
stos
fsub
mov
stc
fild
mov
int
or
push
jecxz
out
shl
mov
cmps
mov
jecxz
inc
adc
stc
fsub
(bad)
loope
push
inc
daa
adc
inc
daa
bound
stc
fsub
retf
sahf
mov
jle
push
stos
sbb
scas
mov
mov
mov
(bad)
fbstp
push
test
mov
fldenv
das
inc
inc
sub
jne
js
popf
jmp
pop
daa
popf
popf
mov
fisub
ret
xchg
mov
sbb
push
mov
cwde
pop
push
dec
shl
arpl
inc
movs
pop
bound
sahf
xchg
push
daa
add
mov
xor
mov
repnz
mov
daa
push
scas
dec
iret
rcl
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
mov
pusha
xchg
scas
into
cmps
push
cmps
imul
popf
xchg
ret
xchg
mov
fsub
mov
fmul
add
xchg
(bad)
ret
xchg
mov
mov
cmps
mov
daa
(bad)
fistp
or
bound
sahf
xchg
push
daa
add
mov
xor
aaa
cdq
gs
xchg
repnz
mov
daa
push
scas
dec
iret
pop
push
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
outs
xlat
adc
scas
mov
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
dec
scas
mov
daa
(bad)
fistp
and
scas
inc
mov
push
daa
add
mov
add
and
and
popf
push
shl
call
jns
fild
iret
rcl
push
scas
push
iret
mov
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
sbb
fild
xchg
popa
xchg
mov
daa
popf
jmp
and
push
mov
push
daa
add
mov
xor
mov
repnz
mov
daa
push
scas
dec
iret
inc
push
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
jp
popf
ror
popf
push
shl
and
dec
scas
and
inc
daa
add
mov
fsub
adc
mov
daa
retf
sbb
add
fild
xchg
popa
xchg
mov
daa
popf
jmp
mov
adc
sti
fsub
into
loope
or
popf
ror
popf
push
shl
and
jns
xlat
jge
inc
fsubr
xchg
mov
sbb
add
fild
xchg
popa
xchg
mov
daa
popf
jmp
jp
popf
ror
popf
push
shl
and
jns
xlat
jge
inc
fsubr
xchg
mov
sbb
add
fild
xchg
popa
xchg
mov
daa
popf
jmp
outs
xlat
adc
scas
retf
inc
sahf
xchg
push
daa
add
mov
xor
call
bound
daa
push
scas
dec
stos
sbb
mov
int
inc
stc
fild
iret
push
push
inc
daa
push
scas
push
iret
xor
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
outs
xlat
adc
das
daa
inc
sub
sub
cmc
sbb
sub
popf
push
sub
push
(bad)
fstp
mov
fsub
scas
stos
mov
bound
sahf
jne
inc
daa
add
mov
aaa
mov
xlat
mov
dec
jne
add
sbb
sbb
push
sub
push
(bad)
fstp
mov
fsub
scas
sbb
bound
stc
inc
sub
sub
ins
sbb
jecxz
push
ins
jecxz
iret
jge
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
xchg
popa
xchg
mov
daa
popf
jmp
jl
popf
ror
popf
push
shl
and
dec
scas
mov
push
daa
add
mov
fsub
adc
mov
daa
retf
sbb
push
jecxz
add
xchg
popa
xchg
mov
daa
popf
jmp
sub
daa
imul
daa
popf
push
fsubr
bound
scas
sbb
or
xchg
mov
pop
popf
push
daa
adc
mov
arpl
mov
xchg
jne
mov
daa
popf
xchg
repnz
bound
inc
daa
(bad)
fistp
imul
popf
mov
fisub
xor
ret
xchg
mov
in
jecxz
cmps
jno
inc
daa
popf
cmp
das
scas
gs
mov
fcomp
xlat
ds
popf
gs
bound
das
lods
inc
sub
sbb
scas
cli
cmps
push
dec
popf
add
cli
fild
mov
int
inc
daa
popf
jmp
pop
jbe
bound
int
bound
push
and
inc
dec
movs
mov
daa
cmc
and
daa
popf
jmp
dec
mov
daa
cmc
mov
gs
add
popf
push
iret
out
call
gs
mov
in
jecxz
cmps
jno
inc
daa
popf
cmp
jo
jmp
or
popf
push
rcl
fisub
into
loopne
iret
fcmovnu
bound
(bad)
pop
pushf
gs
push
mov
sbb
mov
das
push
outs
inc
es
push
scas
sbb
mov
push
gs
push
inc
loope
das
adc
(bad)
scas
push
stos
push
lods
enter
lahf
outs
add
fsub
scas
jp
push
scas
sbb
mov
xchg
mov
daa
push
aas
dec
lods
adc
mov
sub
pushf
sub
mov
xchg
mov
fist
inc
daa
adc
xor
bound
mov
daa
popf
jecxz
push
pusha
xchg
mov
fsub
inc
adc
loope
push
pusha
xchg
mov
lods
adc
mov
sub
pushf
sub
mov
xchg
mov
gs
sub
or
sub
fisub
pop
iret
test
xchg
jbe
adc
scas
cmps
test
inc
ja
add
popf
add
popf
push
mov
int
call
xchg
inc
sub
lahf
push
cmps
jne
test
(bad)
jmp
xor
retf
adc
je
inc
daa
popf
adc
xchg
das
and
mov
mov
int
leave
adc
xchg
mov
fisub
mov
fsub
iret
fisub
mov
fsub
out
bound
mov
push
outs
xchg
mov
mov
xchg
stos
xor
retf
sub
je
inc
daa
popf
add
sti
fild
mov
int
xchg
pop
popf
push
fild
repz
pop
stos
sbb
scas
call
mov
fisub
(bad)
loopne
or
sub
fldenv
pop
iret
mov
scas
pop
loopne
sar
daa
popf
shr
jb
push
rcl
fisub
into
loopne
out
mov
daa
popf
push
loopne
cmp
and
mov
cmp
lods
ret
xchg
mov
sbb
push
stos
sbb
mov
lds
mov
fisub
pop
stos
sbb
mov
daa
imul
pop
imul
daa
imul
mov
int
inc
iret
mov
daa
xchg
stos
dec
mov
(bad)
fucomip
fisub
scas
repnz
push
cmps
jb
pop
daa
popf
xchg
repnz
xchg
mov
daa
cmc
pop
fwait
gs
out
(bad)
mov
daa
popf
jmp
sub
bound
mov
stos
sbb
das
push
inc
sub
fstp
daa
adc
dec
out
jno
iret
sahf
push
iret
adc
out
sub
bound
mov
push
push
arpl
popf
push
dec
test
cli
mov
sub
popf
adc
popf
push
xor
push
sar
ret
xchg
mov
es
push
mov
int
scas
loop
push
dec
pushf
add
mov
int
cs
mov
add
iret
fcmovnu
bound
mov
movs
cmp
mov
enter
daa
jbe
les
popf
out
xchg
pusha
xchg
mov
daa
popf
jmp
inc
ret
push
jno
in
je
popf
add
sub
mov
adc
push
xchg
cmp
jne
popf
loope
mov
fwait
jecxz
push
gs
js
xor
scas
js
stos
xor
cmp
lods
sar
fwait
nop
pop
scas
gs
mov
loopne
xchg
into
loopne
pop
dec
iret
jne
inc
daa
adc
and
xchg
sbb
sti
jecxz
(bad)
push
iret
push
pop
inc
daa
adc
and
pop
pop
inc
daa
adc
and
add
inc
daa
xchg
fld
fst
mov
inc
not
cs
bswap
add
dec
pop
inc
daa
adc
jbe
push
pop
pop
es
inc
and
jbe
adc
sub
ja
call
popf
jmp
dec
scas
ins
jmp
adc
push
xchg
lock
add
cwde
sub
iret
fstp
daa
bound
push
sub
das
mov
sub
aas
mov
ja
dec
jbe
popf
jecxz
es
je
fld
fst
cs
and
mov
retf
imul
daa
adc
mov
dec
sbb
pop
daa
imul
daa
jne
je
popf
jecxz
scas
gs
mov
jno
shl
popf
out
(bad)
cmp
outs
lods
push
jno
sbb
popf
loope
ffreep
xor
out
pop
aas
into
ret
pop
daa
popf
sbb
popf
push
jno
loope
das
and
mov
loopne
(bad)
cmps
fsub
pop
daa
popf
jmp
mov
push
stos
sbb
cmps
fsub
retf
mov
sti
fild
ret
inc
scas
pop
arpl
daa
popf
jecxz
push
gs
je
fild
xchg
test
bound
call
mov
iret
int
inc
daa
and
popf
mov
fsub
adc
sub
bound
retf
mov
out
xchg
mov
or
push
(bad)
rol
xchg
repnz
xchg
mov
daa
push
scas
dec
cs
pop
pop
fsubr
mov
xor
jne
push
sar
ret
xchg
mov
addr16
lods
sub
jb
(bad)
(bad)
cmp
inc
inc
daa
into
cmp
lods
shl
mov
es
daa
push
into
mov
adc
outs
xlat
adc
adc
cdq
imul
add
popf
jecxz
movs
push
xchg
pop
cmps
mov
jecxz
dec
xchg
jecxz
cmp
xchg
mov
jb
sub
jne
jae
popf
jmp
daa
daa
popf
popf
mov
fsub
ret
xchg
mov
push
ins
jecxz
dec
shl
inc
(bad)
bound
inc
daa
push
scas
dec
iret
jns
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
mov
int
inc
adc
jmp
sub
push
iret
and
pusha
inc
daa
popf
repz
push
nop
inc
pop
mov
loope
popf
push
inc
popf
push
mov
and
fsub
das
jg
sub
and
fsub
scas
mov
pop
jp
pop
scas
push
sahf
xchg
push
daa
add
mov
xor
call
jge
mov
daa
popf
jmp
cwde
gs
out
daa
jge
mov
daa
popf
jmp
mov
adc
stos
clc
bound
je
popf
ror
popf
push
shl
and
jle
xlat
jge
inc
stos
sbb
fsub
scas
jb
push
movs
pop
bound
sahf
xchg
push
daa
add
mov
push
jne
jne
popf
shl
popf
push
shl
call
pop
sti
fild
call
mov
popf
push
jecxz
xchg
xor
cmc
js
gs
out
daa
jge
mov
gs
out
daa
jge
mov
daa
popf
jmp
jne
popf
ror
popf
push
shl
and
jle
xlat
jge
inc
stos
sbb
fsub
scas
imul
bound
sub
sbb
fsub
scas
call
(bad)
rcr
sbb
popf
ror
popf
push
shl
and
jle
xlat
jge
inc
stos
sbb
fsub
scas
mov
push
movs
pop
bound
and
sub
sbb
fsub
scas
pop
scas
push
movs
pop
bound
sahf
xchg
push
daa
add
mov
push
jne
jne
popf
shl
popf
push
shl
call
pop
sti
fild
call
pop
adc
lea
outs
stc
fild
mov
int
imul
popf
push
sub
push
(bad)
fstp
mov
(bad)
bound
inc
daa
push
scas
dec
scas
ins
inc
mov
pop
add
fild
mov
int
test
jecxz
sub
popf
push
sub
push
(bad)
fstp
mov
(bad)
bound
inc
daa
push
scas
dec
dec
xchg
(bad)
bound
inc
daa
push
scas
dec
iret
in
pop
inc
daa
and
inc
daa
popf
repz
push
nop
inc
pop
mov
mov
fild
mov
int
leave
push
popf
push
jecxz
jmp
or
retfw
mov
sti
fild
mov
int
add
popf
push
jecxz
and
push
sub
push
(bad)
fstp
mov
(bad)
bound
inc
daa
push
scas
dec
dec
popf
mov
daa
adc
inc
(bad)
bound
inc
daa
push
scas
dec
lahf
inc
jno
daa
push
into
mov
adc
scas
cli
lods
push
sahf
xchg
push
daa
add
mov
xor
call
jge
mov
daa
popf
jmp
ja
popf
shr
shl
cmps
pop
jp
daa
popf
cmp
mov
sti
fild
call
loope
popf
push
jecxz
add
popf
push
sub
push
(bad)
fstp
mov
(bad)
bound
inc
daa
push
scas
dec
dec
inc
mov
daa
adc
inc
(bad)
bound
inc
daa
push
scas
dec
cmps
imul
popf
add
popf
push
sub
push
(bad)
fstp
mov
(bad)
bound
inc
daa
push
scas
dec
iret
mov
pusha
inc
daa
popf
repz
push
nop
inc
pop
mov
dec
pop
popf
push
inc
popf
push
mov
and
fsub
das
jg
sub
and
fsub
scas
and
jp
test
cmps
fsub
scas
xor
bound
and
cmc
push
daa
fnstsw
scas
mov
push
scas
sbb
and
push
fsub
scas
xor
out
fild
mov
daa
jge
mov
clc
bound
inc
fsubr
xchg
cwde
fsub
ror
dec
scas
ins
popf
mov
fsub
cmp
jecxz
cmps
jno
inc
daa
popf
cmp
jo
and
mov
gs
movs
cmp
mov
rcr
int3
jp
cmp
lods
enter
lahf
imul
or
inc
daa
popf
popf
mov
fsub
or
inc
inc
daa
int
jge
popf
push
xor
mov
daa
jne
ins
daa
popf
jecxz
xchg
mov
stos
sbb
mov
jmp
inc
daa
adc
repz
pop
dec
xor
fwait
gs
add
popf
jmp
pop
dec
dec
out
out
cli
and
pushf
push
stos
sbb
retf
xchg
mov
or
iret
push
sar
ret
xchg
mov
xchg
mov
fisub
pop
iret
mov
dec
cs
gs
pop
lahf
push
dec
cmp
out
mov
iret
xor
adc
repz
pop
stos
sbb
scas
mov
cs
mov
fisub
into
fbstp
sub
fldenv
pop
iret
test
push
scas
pop
scas
gs
mov
lahf
arpl
inc
loopne
mov
daa
popf
jmp
mov
loopne
cmp
imul
arpl
mov
mov
int
ret
xchg
mov
daa
test
daa
adc
mov
dec
popf
add
push
out
out
(bad)
es
push
xchg
xor
test
sub
popf
push
rcl
fsub
into
loopne
(bad)
fisub
das
xor
loopne
add
fldenv
pop
iret
xor
daa
push
scas
push
loope
adc
lods
or
retf
xchg
mov
sti
fild
add
arpl
and
push
dec
mov
inc
cmps
sbb
int
loop
mov
out
xchg
pushf
dec
mov
cmc
push
daa
popf
or
pushf
push
stos
sbb
mov
iret
push
inc
inc
daa
adc
jbe
adc
sub
gs
out
mov
xchg
mov
fsub
sub
xchg
mov
jmp
push
stos
sbb
mov
iret
or
mov
cs
gs
xchg
popf
push
dec
popf
xchg
repnz
xchg
mov
fsub
scas
outs
mov
inc
stos
sbb
mov
xchg
or
xchg
fsub
and
pusha
xchg
mov
daa
cmc
popa
fwait
gs
adc
push
dec
xchg
mov
daa
retf
xor
mov
push
mov
dec
sti
fild
fidiv
mov
sbb
outs
cmp
fdiv
nop
fsub
sub
dec
int3
mov
push
xor
repnz
xchg
mov
fcomp
scas
dec
scas
gs
mov
fsub
xor
outs
daa
popf
lods
ret
xchg
mov
stos
sbb
mov
call
repnz
iret
movs
inc
inc
daa
adc
outs
fist
mov
daa
popf
loope
mov
ret
xor
scas
js
stos
aaa
into
cmp
lods
shl
mov
popf
mov
loopne
or
popf
push
bound
xor
jne
outs
daa
popf
loope
rcl
ds
aaa
iret
add
iret
jmp
lods
adc
jne
pusha
daa
popf
rol
js
push
rcl
scas
pop
cmp
fsubr
retfw
imul
into
adc
popa
cmp
jns
push
daa
imul
cs
inc
scas
pop
jecxz
push
gs
dec
bound
xchg
mov
inc
stos
fcom
pusha
daa
popf
cmp
dec
mov
xchg
lods
and
outs
fist
test
(bad)
jmp
lea
iret
adc
cmp
adc
daa
push
into
mov
adc
sub
iret
jne
inc
daa
adc
into
fistp
xor
lods
stos
lods
fs
xchg
dec
daa
popf
out
es
xchg
mov
setge
bound
dec
stos
sbb
fsub
scas
outs
sub
mov
fsub
inc
push
cdq
jecxz
int3
(bad)
jmp
push
ret
push
dec
lahf
cmp
mov
pop
sub
jb
pop
retf
xchg
cmp
push
push
pop
daa
popf
or
bound
inc
int3
cmc
jecxz
es
sub
das
mov
gs
out
ror
xor
popf
push
bound
sub
daa
popf
xchg
jb
cmp
inc
iret
mov
daa
xchg
fld
fstp
stos
inc
ja
xchg
pushf
gs
out
ror
or
popf
push
jecxz
out
ror
add
fisubr
daa
bound
mov
mov
inc
cmps
pop
jae
daa
popf
or
bound
lock
mov
out
pop
cmp
cwde
pop
jle
ds
outs
fist
sub
and
imul
cmc
cli
inc
daa
popf
add
popf
add
lea
into
loope
imul
lods
xchg
jb
cmp
inc
iret
adc
daa
sbb
aad
popf
push
es
add
test
fisub
xor
popf
push
es
add
test
out
popf
and
popf
push
es
add
test
fsub
adc
popf
push
es
add
test
shl
add
popf
push
fild
adc
xchg
jb
add
inc
iret
lods
inc
inc
daa
imul
dec
lods
xchg
jb
add
inc
iret
mov
imul
lods
xchg
jb
sub
lea
daa
imul
dec
lods
xchg
jb
cmp
inc
iret
popf
inc
inc
daa
adc
outs
fist
ja
test
fisub
sub
retf
add
test
fisub
sbb
retf
add
test
in
popf
or
retf
add
test
in
popf
cmp
popf
push
fistp
test
(bad)
push
jo
mov
mov
jecxz
fist
scas
mov
mov
inc
daa
cmc
mov
addr16
add
popfw
xor
push
(bad)
mov
mov
mov
addr16
add
gs
or
push
fild
mov
daa
jne
popa
daa
popf
leave
arpl
sbb
inc
dec
popa
xchg
jb
add
inc
iret
jns
inc
daa
not
pop
daa
jne
popa
daa
popf
leave
inc
mov
push
stc
sbb
inc
dec
popa
xchg
jb
or
inc
iret
pop
dec
inc
daa
not
push
daa
jne
popa
daa
popf
leave
aas
xchg
push
stc
sbb
inc
dec
popa
xchg
jb
add
inc
iret
add
not
push
daa
jne
popa
daa
popf
leave
imul
sub
popa
xchg
jb
add
inc
iret
in
inc
daa
adc
inc
fist
ret
xchg
push
jle
push
test
mov
addr16
add
gs
or
popf
push
out
pop
aas
into
ret
push
jno
aad
jle
or
loopne
jge
daa
cmc
lahf
pushf
gs
xchg
xor
jne
mov
dec
jno
add
(bad)
(bad)
dec
mov
fldcw
imul
iret
cmc
dec
inc
daa
adc
mov
retf
and
mov
into
loopne
push
adc
push
lods
fcom
int3
bound
add
int
inc
dec
popf
add
sbb
sub
jl
add
daa
popf
sub
push
arpl
xchg
jb
add
inc
dec
popf
cmp
or
call
idiv
daa
popf
jmp
cmc
mov
gs
add
gs
inc
daa
outs
fsub
add
test
fsub
add
test
out
popf
add
es
push
bound
add
push
and
idiv
sub
cmps
int
fwait
clc
fild
std
inc
sub
popf
cmp
popf
push
inc
cmp
add
popf
add
cwde
add
popf
add
popf
add
and
imul
das
idiv
fidivr
jmp
in
mov
inc
dec
pushf
cmp
pop
bound
mov
mov
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
popf
push
inc
test
dec
icebp
mov
daa
cmc
mov
gs
add
aad
inc
daa
ds
out
popf
add
test
fsub
add
test
out
popf
add
mov
adc
daa
int
pop
cld
fild
std
inc
sub
popf
adc
push
xchg
sub
popf
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
xchg
add
popf
cmp
jmp
inc
mov
daa
imul
(bad)
mov
cmc
push
daa
sbb
ja
popf
push
daa
bound
mov
bound
xchg
push
aaa
cmc
adc
popf
add
daa
popf
push
pmaddwd
daa
int
leave
std
fild
std
inc
sub
popf
sbb
popf
push
xor
sub
popf
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
dec
aaa
push
daa
idiv
and
jmp
cmc
out
popf
gs
add
stc
dec
inc
daa
ds
popf
add
daa
cmc
sub
popf
cmp
dec
call
push
fs
push
fsubr
adc
push
daa
bound
mov
bound
xchg
push
or
in
daa
popf
push
pop
cmc
imul
fild
mov
popf
add
push
cmps
cmp
inc
scas
imul
test
fsub
add
test
out
popf
add
popf
push
sbb
rol
add
daa
popf
push
and
jmp
cmc
out
popf
gs
add
pop
dec
inc
daa
ds
fsub
xor
xchg
sub
mov
bound
xchg
push
aaa
not
rcr
inc
daa
cmc
push
daa
int
sub
fild
std
inc
sub
popf
add
popf
push
mov
sub
push
data16
popf
add
test
fsub
add
test
out
popf
add
sbb
inc
daa
cmc
xchg
inc
daa
popf
add
popf
push
daa
popf
push
dec
into
mov
daa
cmc
mov
gs
add
fisttp
daa
ds
out
popf
add
test
fsub
add
test
out
popf
add
cli
add
popf
push
in
push
dec
popf
push
ja
sub
cld
fild
daa
jne
fs
popf
leave
ja
fsubr
daa
bound
mov
bound
xchg
push
aaa
cmc
xchg
inc
daa
popf
add
popf
push
inc
cmc
push
daa
int
push
std
fild
std
inc
sub
popf
or
add
inc
scas
imul
test
fsub
add
test
out
popf
add
retf
add
xchg
push
ja
ins
popf
gs
add
daa
jne
gs
popf
leave
rol
pop
jae
fsubr
daa
bound
xchg
push
aas
cmc
inc
inc
daa
popf
add
daa
popf
push
xor
push
cmps
int
fwait
clc
fild
es
sub
popf
push
gs
popf
leave
ret
xchg
push
daa
bound
mov
bound
xchg
push
aas
cmc
call
test
popf
push
xor
push
cmps
int
xlat
test
push
es
sub
popf
push
gs
popf
leave
pop
mov
push
fbstp
mov
daa
imul
adc
retf
div
pmaddwd
push
dec
popf
push
ja
mov
gs
add
fild
daa
lahf
push
iret
inc
dec
inc
daa
ds
fsub
add
test
fsub
add
test
out
popf
add
stc
add
xor
push
cmps
int
fwait
clc
fild
es
sub
popf
push
data16
popf
leave
addr16
bound
mov
bound
xchg
push
xor
icebp
inc
daa
popf
add
es
push
cmp
push
cmps
int
movs
(bad)
fild
fld
dec
popf
and
popf
push
mov
hlt
xchg
mov
daa
popf
popf
mov
loopne
sbb
fsub
sbb
pop
aas
into
ret
push
jno
aad
push
pop
pop
(bad)
enter
daa
cmc
lahf
pushf
gs
xchg
xor
jne
mov
(bad)
or
adc
xchg
(bad)
dec
mov
mov
into
loopne
push
adc
cdq
addr16
popf
out
xlat
int
scas
retf
inc
cmps
jb
pop
daa
popf
add
test
fsub
add
push
das
mov
lods
fcom
sub
daa
popf
jmp
cmc
mov
popf
push
sahf
mov
retf
imul
adc
push
dec
mov
das
mov
jne
pop
dec
mov
push
dec
popf
push
ja
mov
popf
cld
fild
daa
jne
addr16
popf
leave
inc
mov
fcom
daa
imul
adc
push
adc
retf
cmc
inc
inc
daa
popf
loope
fbstp
push
pop
dec
int3
add
xchg
push
ja
mov
gs
add
daa
jne
addr16
popf
leave
daa
xchg
push
daa
imul
daa
imul
and
imul
cmc
(bad)
inc
daa
popf
add
popf
add
mov
into
loope
imul
lods
xchg
jb
add
inc
iret
jge
inc
daa
imul
adc
push
adc
retf
test
sub
cmps
int
fwait
clc
fild
mov
popf
adc
add
inc
scas
gs
mov
std
fild
daa
cmc
sub
popf
xchg
jb
add
inc
iret
or
pop
popf
gs
add
fisubr
daa
bound
mov
sub
mov
pop
xor
imul
es
and
daa
popf
xchg
jb
add
inc
iret
shl
jbe
sub
imul
add
popf
push
daa
bound
mov
bound
xchg
push
or
push
dec
out
inc
daa
sbb
sub
sbb
scas
push
sub
sbb
lods
push
push
popf
push
daa
bound
mov
bound
xchg
push
or
push
dec
xor
daa
cmc
imul
fild
mov
popf
cmp
add
inc
iret
repnz
mov
adc
push
adc
retf
idiv
cmps
popf
push
dec
repz
popf
push
daa
popf
push
dec
into
mov
daa
cmc
mov
gs
add
and
ds
out
popf
jecxz
push
gs
dec
popf
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
dec
sbb
daa
cmc
test
inc
daa
popf
cmp
gs
sub
inc
mov
daa
imul
pop
sub
lods
repz
daa
imul
adc
push
adc
retf
idiv
ficomp
push
daa
test
pop
dec
mov
pushf
gs
add
fnstenv
ds
test
fsub
add
test
out
popf
add
retf
add
daa
popf
push
xchg
push
ja
ins
popf
gs
add
daa
jne
pop
daa
popf
leave
rol
pop
jae
fsubr
daa
bound
xchg
push
aaa
cmc
mov
popf
add
cmp
push
daa
int
cmp
fild
std
inc
sub
popf
adc
cmp
inc
dec
popf
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
fcomp
add
popf
cmp
jo
sub
inc
mov
daa
imul
mov
cmp
push
adc
push
adc
retf
div
movs
popf
push
dec
mov
push
dec
popf
push
ja
cli
in
popf
add
fild
daa
lahf
push
iret
std
ja
daa
ds
addr16
jmp
fisttp
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
fild
push
dec
popf
push
ja
mov
gs
add
fild
daa
lahf
push
iret
mov
inc
fsub
add
test
fsub
add
test
out
popf
add
stc
add
dec
mov
inc
daa
sbb
sub
pushf
mov
daa
cmc
push
daa
popf
sub
add
inc
dec
popf
xchg
jb
add
inc
dec
popf
xchg
jb
cmp
add
daa
popf
push
addr16
push
dec
add
daa
sbb
sub
addr16
daa
imul
xchg
sub
daa
jne
mov
(bad)
jecxz
iret
push
sahf
mov
in
jecxz
movs
jno
adc
retf
push
mov
(bad)
loopne
popa
inc
daa
imul
cmps
popf
push
dec
sahf
add
sahf
add
popf
jmp
popf
push
loope
xchg
mov
daa
popf
add
jne
pop
daa
popf
jecxz
scas
imul
test
movs
clc
xchg
inc
loopne
sahf
inc
daa
popf
push
bound
retf
cmp
bound
mov
xchg
fild
es
push
iret
dec
mov
push
rcl
push
popa
add
jae
sub
call
xor
bound
add
xchg
stos
xor
imul
and
das
mov
dec
mov
imul
adc
bound
les
push
rcl
scas
pop
xor
adc
pushf
push
je
aam
cmp
jbe
daa
cmc
enter
out
daa
bound
pop
daa
popf
jecxz
es
jecxz
iret
jne
inc
daa
and
inc
daa
popf
repz
adc
iret
jp
jmp
and
add
fsub
pop
iret
mov
pop
mov
jmp
push
fsub
scas
sub
xchg
inc
push
mov
mov
fild
mov
int
mov
popf
push
leave
(bad)
jbe
daa
sbb
jnp
xor
inc
stos
sbb
fsub
scas
dec
xchg
inc
push
mov
ja
fild
mov
int
test
popf
push
pop
bound
cmc
and
gs
out
daa
bound
push
daa
popf
jmp
stc
fild
fsub
pop
iret
or
daa
adc
mov
adc
mov
loope
pop
mov
movs
sub
inc
stos
sbb
fsub
scas
push
mov
cmps
loopne
dec
push
mov
in
fild
mov
int
sbb
pop
bound
ss
mov
gs
out
daa
bound
push
daa
popf
jmp
pushf
fadd
fsub
pop
iret
mov
inc
daa
adc
outs
xlat
adc
(bad)
pop
bound
ss
dec
cmc
gs
out
daa
bound
push
daa
popf
jmp
movs
fadd
fsub
pop
iret
gs
daa
sbb
jnp
jb
sub
sbb
fsub
scas
(bad)
mov
dec
popf
add
fbstp
sahf
gs
out
daa
bound
fldenv
add
inc
sub
and
add
popfw
and
mov
jo
daa
push
scas
outs
scas
ins
popf
mov
fsub
or
ret
xor
scas
js
adc
pop
dec
cwde
cmp
xlat
outs
adc
outs
fist
cmp
jnp
imul
jne
test
(bad)
jmp
xor
imul
iret
aad
inc
daa
ret
jp
outs
inc
jb
pop
retf
test
cmp
cdq
sub
push
adc
jbe
adc
call
jnp
ret
xchg
mov
xchg
fild
mov
int
push
xor
push
sahf
xchg
push
daa
add
mov
fsub
cli
aam
xchg
mov
mov
sub
sbb
scas
into
mov
cmps
and
xor
cmc
lods
cmc
gs
out
retf
mov
daa
popf
jecxz
push
ins
jecxz
cmps
and
xor
cmc
(bad)
cmc
gs
out
retf
mov
daa
popf
jmp
call
sub
sbb
scas
mov
push
cmps
and
xor
cmc
jae
gs
out
retf
mov
daa
popf
jmp
inc
cmps
push
cmps
and
xor
cmc
pop
hlt
gs
out
retf
mov
daa
popf
jmp
call
sub
sbb
scas
data16
cmps
and
xor
cmc
push
hlt
gs
out
retf
mov
daa
popf
jecxz
es
jecxz
cmps
and
xor
cmc
loope
gs
out
retf
mov
daa
popf
jmp
call
sub
sbb
scas
retf
inc
cmps
and
xor
cmc
mov
ret
xchg
mov
daa
popf
jecxz
sar
ret
xchg
mov
aam
xchg
mov
iret
sub
sbb
scas
mov
cdq
mov
ss
imul
retf
mov
daa
popf
jmp
call
sub
sbb
scas
pop
mov
dec
in
retf
adc
stos
shl
pop
iret
fwait
xchg
rcl
shl
into
loope
sbb
gs
add
xchg
fild
int3
jno
mov
mov
sbb
xchg
jne
nop
jmp
mov
and
push
xlat
lods
call
popf
push
cld
imul
push
cmp
test
fcomp
scas
dec
scas
sbb
xchg
sbb
and
push
call
ret
jmp
push
cmps
and
dec
mov
sbb
xchg
jge
sbb
daa
popf
lods
ret
xchg
mov
fbld
pop
dec
test
add
(bad)
pop
iret
adc
scas
dec
lahf
and
mov
mov
adc
les
popf
push
outs
iret
movs
jb
daa
daa
test
into
out
add
mov
into
test
xlat
mov
mov
push
push
daa
mov
stos
add
xchg
push
or
sbb
scas
sub
sbb
daa
popf
add
xchg
push
cmp
stos
sbb
scas
(bad)
mov
movs
pop
jb
outs
cmc
push
daa
popf
out
(bad)
mov
daa
popf
jecxz
sar
ret
xchg
mov
(bad)
mov
gs
out
(bad)
mov
daa
popf
add
push
mov
int
lea
popf
push
jecxz
out
(bad)
mov
daa
popf
out
(bad)
mov
stos
sbb
das
fld
inc
stos
sbb
scas
push
mov
movs
pop
jp
daa
adc
mov
iret
cmp
imul
inc
sub
sbb
scas
stos
add
dec
out
out
cs
push
mov
push
stos
inc
ja
mov
into
mov
and
popf
mov
fsub
and
imul
fistp
mov
sub
js
add
fbld
pop
iret
gs
daa
push
scas
push
dec
adc
add
fldenv
pop
iret
mov
inc
daa
adc
mov
iret
mov
inc
daa
adc
lahf
shl
lods
add
out
lahf
shl
(bad)
fwait
cwde
xchg
mov
aaa
push
out
lahf
shl
and
(bad)
out
shl
les
sahf
sbb
dec
daa
popf
xchg
repnz
mov
fsub
das
icebp
inc
sub
sbb
scas
pop
mov
movs
pop
jp
mov
int
test
popf
mov
fldenv
adc
sub
xlat
xchg
shl
retf
jp
dec
fld
into
mov
and
popf
mov
fsub
sub
imul
ret
xchg
mov
daa
popf
out
(bad)
mov
fbld
retf
imul
aad
inc
daa
adc
mov
dec
popf
xchg
repnz
mov
daa
imul
daa
jne
push
daa
popf
cmp
stos
sbb
adc
sub
out
bound
test
pop
gs
xchg
mov
fsub
adc
loope
ds
daa
cmc
sub
cmp
sub
push
into
xor
sbb
pop
outs
inc
jb
(bad)
inc
push
iret
sub
cmp
pushf
scas
outs
call
push
mov
sub
popf
add
sub
(bad)
sbb
test
push
mov
scas
bound
mov
scas
inc
inc
lahf
scas
pop
loope
das
ds
fsub
lods
inc
ja
sub
popf
push
cmps
outs
xchg
cmp
mov
mov
dec
bound
daa
cmc
cli
out
popf
sbb
push
push
mov
ja
jno
daa
popf
jecxz
push
inc
jecxz
dec
cdq
imul
out
test
xchg
pop
fsubr
bound
dec
pushf
add
xchg
push
mov
int
pop
mov
lea
fcomp
imul
outs
xor
mov
xchg
inc
push
sub
inc
cmps
pop
xor
popf
sbb
popf
push
hlt
ror
push
jbe
stos
mov
pop
nop
inc
out
jne
in
adc
push
scas
pop
jmp
iret
mov
xchg
retf
inc
int3
stos
sub
popf
push
xchg
and
stos
fsub
xchg
push
jp
scas
pop
popf
lods
out
ins
xchg
add
dec
xor
loope
lods
es
outs
loop
sbb
xchg
retf
inc
lods
sbb
stos
fsub
dec
push
pop
jmp
gs
push
loope
lds
push
mov
scas
pop
pushf
test
call
xchg
mov
mov
retf
pop
dec
or
cmps
lahf
gs
out
test
mov
daa
popf
add
sbb
stos
fsub
retf
test
aaa
popf
push
mov
int
push
loop
xchg
(bad)
aam
js
daa
adc
loopne
bound
mov
dec
popf
out
test
mov
daa
popf
jecxz
es
jecxz
dec
pushf
sub
push
call
add
gs
add
mov
mov
scas
inc
pop
lahf
scas
pop
out
inc
jae
mov
gs
shl
popf
push
inc
cmp
repz
fild
mov
sub
pop
mov
daa
cmc
sbb
gs
sub
mov
mov
icebp
fild
cmp
iret
das
mov
inc
dec
or
lods
lahf
gs
add
(bad)
sbb
pop
lahf
scas
pop
out
lds
mov
gs
shl
push
inc
cmp
in
fild
mov
sub
pop
mov
daa
cmc
push
popfw
or
push
jecxz
out
cdq
jo
mov
gs
ror
popf
push
adc
call
sub
and
push
daa
cmc
push
daa
fld
inc
mov
xchg
push
scas
fcomp
sub
daa
int
in
popf
push
bound
out
lahf
int
ret
xchg
mov
daa
popf
out
xchg
jb
mov
cmps
mov
add
call
xlat
repnz
fsubr
fisubr
dec
popf
out
lahf
int
inc
dec
ins
mov
iret
and
daa
pop
das
(bad)
fcom
rcl
stos
sbb
test
bound
scas
dec
mov
stos
adc
test
(bad)
jmp
jnp
popf
pop
mov
lahf
retf
cmp
call
xor
popf
add
fcom
pop
dec
lahf
add
push
sub
jmp
repnz
sar
ret
xchg
mov
fsub
test
call
push
stos
cwde
mov
adc
inc
call
out
add
inc
scas
fsub
pop
daa
adc
xchg
adc
scas
xchg
xchg
push
scas
fdivr
into
in
imul
iret
xor
das
xchg
loopne
mov
daa
popf
push
daa
jne
push
daa
popf
jecxz
jmp
popf
movs
scas
sbb
stos
fsub
ret
xchg
mov
fwait
sahf
push
daa
pop
das
and
push
loopne
mov
into
call
sti
ja
sbb
popf
add
test
fsub
add
popf
add
popf
add
popf
add
push
push
mov
dec
jl
add
ret
inc
test
test
das
mov
sub
popf
add
and
cs
mov
push
push
sbb
inc
das
mov
sub
imul
gs
cmp
scas
sbb
stos
fsub
test
push
iret
add
daa
imul
fmul
(bad)
stos
fsub
ret
xchg
mov
scas
inc
inc
lahf
scas
pop
out
lahf
jo
mov
leave
bound
add
gs
add
xchg
fild
es
push
iret
adc
mov
cs
pop
inc
movs
mov
push
and
fiadd
daa
jne
out
fsub
mov
(bad)
push
stos
sbb
test
daa
imul
jmp
popf
add
jne
inc
daa
int
and
mov
int
inc
dec
popf
add
imul
out
nop
push
ja
sub
popf
add
imul
adc
pop
dec
daa
popf
sbb
or
adc
outs
call
retf
cmp
dec
popf
add
popf
out
ret
int
imul
call
mov
into
ret
jnp
popf
push
jno
aad
and
jnp
push
sar
add
adc
int3
bound
out
shl
popf
push
sub
xchg
inc
sub
add
popf
sbb
popf
push
ss
push
sub
cmovne
popf
push
push
es
push
cmp
jnp
daa
popf
gs
pop
xchg
push
sbb
out
(bad)
es
push
dec
xchg
push
movs
mov
push
mov
cmc
lahf
pushf
gs
xchg
jb
sub
inc
iret
or
fisub
into
fistp
pushf
gs
xchg
repnz
pusha
xchg
mov
fcomp
scas
push
scas
sbb
ret
xchg
mov
fisub
scas
ret
inc
cs
gs
mov
sbb
mov
daa
jne
dec
daa
popf
arpl
sti
pusha
xchg
mov
fsub
scas
and
dec
mov
xchg
mov
cmp
out
cmps
fisub
ins
mov
push
add
mov
shr
pusha
xchg
mov
dec
pushf
loope
(bad)
pusha
xchg
mov
fsub
int3
mov
mov
xchg
fisub
pop
dec
popf
add
test
out
popf
cmp
popf
push
fbstp
and
sbb
inc
daa
popf
retf
and
sub
inc
scas
gs
mov
inc
sub
inc
daa
sbb
push
push
xchg
xchg
jb
sub
inc
iret
jl
mov
push
sub
inc
es
out
push
and
fiadd
fsub
scas
outs
call
scas
pop
retf
inc
mov
xchg
gs
push
dec
popf
adc
call
daa
movs
das
dec
push
xchg
xchg
xor
jne
dec
daa
popf
jecxz
sar
ret
xchg
mov
and
jecxz
shl
mov
daa
popf
push
inc
mov
sub
fst
push
cmp
inc
push
mov
sub
test
sub
mov
inc
mov
sub
mov
sub
adc
push
mov
sub
sub
xchg
push
inc
xor
sub
sbb
inc
daa
popf
add
call
push
lods
sbb
inc
pop
cmp
inc
push
lea
xchg
sub
xchg
push
inc
adc
inc
push
nop
add
aaa
lea
push
lea
das
fsub
inc
fsubr
jp
push
xchg
push
cmps
pop
mov
daa
popf
jmp
mov
fisub
inc
stos
sbb
scas
dec
xchg
push
scas
sbb
jp
popf
push
fild
inc
daa
popf
out
fisub
mov
mov
xchg
push
cmps
and
xor
imul
daa
cmc
cmp
iret
movs
popa
inc
daa
bound
mov
xchg
push
into
inc
outs
inc
daa
pop
out
mov
mov
pop
out
mov
bound
repz
imul
push
daa
cmc
xchg
inc
daa
popf
out
fisub
mov
xchg
push
dec
xchg
push
stos
adc
(bad)
fcomp
jmp
outs
xor
jns
sub
add
scas
fisttp
xchg
mov
fsub
inc
push
mov
add
push
daa
jne
dec
daa
popf
xchg
jb
cmp
inc
iret
shl
je
inc
daa
popf
sar
popf
push
rcl
fisub
into
loopne
out
mov
stos
sbb
das
or
inc
stos
sbb
scas
dec
xchg
push
movs
pop
jp
fcomp
xchg
mov
adc
mov
cli
fisub
mov
daa
imul
sub
inc
dec
popf
cmp
push
adc
or
popf
push
stos
pusha
xchg
mov
addr16
xchg
(bad)
fisttp
add
jp
add
cs
push
fsubr
xor
popf
push
mov
xchg
mov
sbb
xchg
mov
fldenv
jnp
loope
jnp
jecxz
sub
ror
dec
popf
or
cmp
dec
daa
popf
xor
popf
push
mov
pushf
loopne
(bad)
mov
cmps
push
pop
daa
popf
out
fisub
mov
fisub
pop
dec
mov
add
fisub
pop
iret
loope
inc
daa
push
scas
push
dec
bound
daa
adc
mov
fsubr
and
pusha
xchg
mov
dec
popf
add
pop
mov
scas
jbe
push
fsubr
cmp
sahf
push
stos
sbb
retf
xchg
mov
(bad)
fild
mov
int
pop
sub
push
jecxz
add
mov
int
jb
add
inc
iret
sbb
daa
sbb
xchg
inc
push
mov
add
lock
daa
jne
dec
daa
popf
xchg
jb
add
inc
iret
add
daa
je
inc
daa
popf
jmp
in
push
stos
sbb
retf
xchg
mov
lock
mov
int
cmc
sub
lea
mov
mov
int
jb
add
inc
iret
and
fldenv
inc
push
mov
add
fild
daa
jne
dec
daa
popf
xchg
jb
add
inc
iret
test
inc
inc
daa
popf
out
fisub
mov
cmps
mov
jmp
sub
or
inc
dec
popf
adc
mov
push
daa
jne
inc
daa
popf
cmp
xchg
mov
sub
out
mov
mov
bound
pop
cdq
push
jle
mov
add
fild
daa
jne
dec
daa
popf
xchg
jb
add
inc
iret
pop
ins
inc
daa
je
inc
daa
popf
jmp
pop
out
mov
and
rol
loopne
inc
inc
daa
adc
mov
stos
sbb
das
or
inc
stos
sbb
scas
loop
push
movs
pop
jp
fcomp
xchg
mov
adc
inc
inc
daa
popf
jmp
call
push
ss
sub
popf
sbb
popf
push
adc
sub
pop
and
addr16
mov
sub
out
mov
mov
bound
pop
cdq
push
jle
mov
add
daa
jne
inc
daa
popf
xchg
jb
add
inc
iret
xchg
ins
inc
daa
je
inc
daa
popf
jmp
adc
mov
out
bound
(bad)
sbb
rcr
arpl
out
cmps
jb
jnp
popf
out
fisub
mov
fisub
pop
dec
mov
add
fisub
pop
iret
popa
bound
push
scas
push
lahf
jne
inc
daa
push
into
mov
push
out
mov
loopne
push
daa
imul
daa
imul
daa
popf
push
dec
(bad)
push
daa
jne
inc
daa
popf
jecxz
xlat
arpl
inc
dec
popf
xchg
repnz
arpl
inc
daa
sbb
push
push
(bad)
dec
pop
add
inc
movs
push
xchg
pop
cmps
mov
jecxz
dec
popf
out
retf
pusha
xchg
mov
mov
ins
xchg
mov
daa
popf
add
sbb
sub
gs
xchg
repnz
arpl
inc
daa
adc
mov
bound
(bad)
sbb
retf
xchg
mov
mov
into
xchg
repnz
arpl
inc
daa
imul
mov
int
inc
dec
ins
mov
fldenv
scas
inc
cwde
push
fsubr
call
popf
push
adc
retf
jne
inc
daa
popf
add
popf
add
popf
add
popf
push
addr16
dec
xlat
addr16
and
popf
push
mov
adc
jbe
adc
sub
daa
(bad)
fbstp
mov
cli
in
popf
jmp
jnp
popf
pop
mov
stos
or
adc
or
fbstp
retf
inc
dec
popf
out
retf
pusha
xchg
mov
retf
dec
sub
sub
xchg
and
xchg
into
loopne
fbstp
inc
sahf
push
loopne
push
repz
imul
add
cdq
add
xchg
fild
pop
inc
sub
int
add
daa
sbb
xchg
vpermq
(bad)
fsub
or
lods
xchg
into
loopne
jnp
push
mov
dec
fsubr
bound
js
xor
scas
js
stos
sub
cmp
lods
call
mov
mov
sub
gs
push
movs
loopne
dec
sub
lods
inc
daa
popf
push
jb
cmp
inc
push
xchg
xchg
jb
add
inc
iret
cmp
lods
mov
adc
push
daa
call
retf
add
daa
popf
push
jb
cmp
inc
push
xchg
xchg
jb
add
inc
iret
jmp
pop
imul
pop
pop
mov
push
inc
cdq
push
sbb
jbe
addr16
pop
dec
fsubr
or
popf
push
fild
into
bound
sbb
fsub
pop
dec
fsubr
xor
push
adc
jle
sbb
fiadd
fsubr
adc
push
adc
dec
(bad)
sbb
fiadd
fsubr
cmp
and
popf
mov
loopne
mov
adc
push
daa
call
inc
daa
cmps
pop
mov
fsubr
fbstp
imul
ja
mov
cmp
int3
cmp
pop
outs
mov
push
ja
xchg
push
adc
ins
int3
cmp
pop
ret
xchg
push
and
ja
mov
jmp
xchg
xor
bound
dec
jno
xor
popf
push
and
outs
fist
test
popf
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
enter
retf
daa
popf
push
loopne
push
gs
mov
sub
iret
int
inc
daa
push
scas
dec
scas
fcom
into
loopne
add
sbb
pop
push
inc
movs
gs
xor
jbe
add
and
out
outs
(bad)
fistp
add
retf
ja
sub
fsub
mov
(bad)
jmp
daa
lea
or
outs
arpl
popf
jp
daa
out
sub
jl
inc
daa
push
arpl
lods
stos
(bad)
fsub
mov
rol
fcom
arpl
or
cmp
cdq
cdq
jecxz
sbb
test
popf
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
aam
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
bound
rcr
push
mov
push
daa
