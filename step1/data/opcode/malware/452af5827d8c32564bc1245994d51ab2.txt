fild
sbb
add
add
xchg
cmps
mov
mov
add
lock
test
xchg
pop
adc
ss
int3
pop
fld
and
jmp
cmp
mov
and
mov
hlt
jl
ss
retf
xchg
shl
add
mov
inc
cli
shl
neg
sub
cld
add
ins
adc
dec
and
or
mov
ins
out
or
lea
xchg
push
sbb
inc
call
pop
mov
lods
xchg
pop
pop
xchg
dec
sbb
xchg
fcmove
sub
rcr
in
inc
push
pop
jecxz
mov
add
and
add
fisub
adc
push
sbb
mov
aad
lahf
aas
cs
adc
retf
xlat
(bad)
jecxz
vshufps
pop
pusha
mov
int
fdivr
push
ss
jb
jo
gs
cmp
sbb
rep
es
xor
mov
jne
pushf
adc
movs
mov
or
pop
loope
adc
retf
test
loop
add
outs
jg
test
push
repz
and
mov
jns
test
mov
ds
sti
add
outs
fs
mov
add
ror
kxorb
enter
sub
rcl
adc
or
mov
adc
aaa
lods
cs
fnstenv
inc
(bad)
daa
loopne
add
loop
push
(bad)
or
mov
pusha
sbb
push
xlat
jmp
pop
inc
xor
add
adc
mov
add
sub
popf
fwait
mov
inc
and
neg
mul
mov
ret
push
push
call
adc
imul
out
paddq
(bad)
fist
enter
xchg
add
std
and
jecxz
xor
or
movs
mov
inc
pop
(bad)
pop
jmp
cmp
sub
jmp
pop
inc
xor
pushf
dec
mov
mov
sub
jcxz
xchg
fiadd
mov
xchg
pop
(bad)
cmps
(bad)
ja
or
jl
dec
jmp
fwait
js
adc
aam
add
pop
popf
pop
fwait
xchg
lock
inc
sahf
fmul
lds
das
js
cmc
pusha
xlat
push
es
fwait
and
ret
pop
and
adc
pop
jecxz
xor
xlat
jno
dec
test
push
inc
mov
stos
outs
mov
inc
push
jno
inc
and
mov
aam
pop
push
add
mov
sub
mov
ja
sub
scas
xlat
dec
jge
inc
inc
loopne
push
push
(bad)
popf
cmp
xor
dec
pop
mov
cdq
rcl
or
mov
fadd
add
xor
adc
xchg
mov
and
dec
mov
xor
xor
mov
fcmovu
stos
ret
jmp
call
xor
aad
addr16
stos
cmp
dec
(bad)
mov
or
push
out
and
inc
mov
popa
repz
push
das
cmps
ret
push
dec
xchg
dec
pop
ja
sub
lahf
retf
add
jne
pop
push
rcr
xchg
add
or
cli
scas
stos
movs
sub
(bad)
cmc
fwait
rcr
pusha
pusha
mov
mov
push
cdq
aaa
fdivr
xchg
inc
sub
lods
fst
dec
out
aam
or
mov
sub
cmp
mov
pop
call
nop
ret
loop
in
ret
push
cmc
iret
ret
cmp
lods
data16
in
stc
(bad)
mov
inc
popf
sub
sub
or
adc
or
add
mov
cmp
fstp
ds
sub
cmp
ret
adc
ret
mov
ss
mov
mov
int3
mov
pusha
inc
in
int
std
mov
(bad)
and
ja
fwait
jb
xchg
adc
lahf
pop
ret
ins
sub
int
mov
jecxz
test
or
pop
and
pop
hlt
fiadd
adc
jle
scas
push
cmp
inc
out
mov
call
sub
nop
ret
inc
jo
jge
and
lods
sar
inc
in
push
test
sbb
xor
(bad)
xchg
in
dec
(bad)
fstp
mov
mov
or
ins
(bad)
and
push
icebp
sub
add
fs
pop
jge
rcl
test
mov
and
dec
rcl
mov
je
outs
jge
adc
ffree
enter
adc
dec
mov
cmp
or
and
inc
mov
xor
or
xchg
(bad)
js
(bad)
jae
popa
pop
scas
xlat
adc
sub
fcom
ja
mov
xor
int
pop
or
and
push
repnz
out
movs
test
pop
push
fld
ins
mov
pop
das
sbb
mov
adc
mov
jge
cmc
add
or
shr
(bad)
pop
into
and
(bad)
ins
lds
ja
leave
test
inc
adc
fs
and
push
sti
xlat
int
nop
mov
pop
mov
call
push
dec
add
or
jno
je
jg
popa
test
loope
mov
mov
popf
add
lahf
es
mov
gs
jp
ins
test
cmps
loopne
cdq
shl
popf
out
jno
fimul
xor
mov
imul
sahf
sahf
jl
fwait
push
(bad)
adc
shr
sub
inc
sbb
dec
jecxz
loopne
and
dec
xchg
aas
or
push
mov
mov
or
in
jmp
push
push
and
push
rcr
jne
mov
repz
adc
popf
loopne
mov
pushf
nop
mov
pop
nop
dec
movs
ret
gs
fld
dec
mov
inc
push
ja
rol
ror
loopne
jo
adc
loope
nop
(bad)
pop
test
mov
(bad)
adc
neg
inc
loop
lock
retf
std
xchg
add
add
ror
fnstenv
push
std
mov
fdivr
pop
js
mov
sbb
jae
out
pop
ret
mov
push
test
and
cmp
ja
pop
jge
idiv
pushf
inc
push
fimul
ins
pop
pop
fs
xor
inc
in
popf
adc
movs
mov
cli
adc
cmp
inc
mov
or
jg
lock
mov
pushf
retf
into
ins
and
or
stos
rcr
popa
and
stos
das
add
clc
cwde
jmp
and
and
out
cmp
adc
repnz
call
pop
pop
xor
cs
dec
or
mov
jge
sbb
iret
aam
movhps
push
jne
xchg
mov
outs
sub
imul
movsx
jnp
sbb
imul
cdq
ins
aam
lea
les
out
cmp
movs
mov
sti
inc
cmps
popf
and
cmps
cdq
rol
icebp
out
add
adc
xor
out
rcl
hlt
scas
xchg
loope
fiadd
mov
aad
sbb
dec
fisttp
sbb
ret
or
daa
imul
mov
mov
sar
xor
scas
ror
xchg
dec
mov
les
fwait
ds
into
loop
inc
mov
retf
call
cli
push
mul
loopne
or
shl
push
loop
cs
cmp
lods
retf
movs
xor
psubw
fisttp
sub
imul
out
xchg
sub
and
test
sbb
sbb
cs
pop
add
out
inc
dec
jecxz
xchg
ret
and
mov
call
daa
rcr
push
inc
mov
and
(bad)
xchg
or
addr16
lods
loope
in
setbe
cmp
push
ins
mov
xor
add
aad
and
arpl
sbb
and
push
enter
dec
adc
mov
out
mov
push
push
hlt
jnp
sub
stos
push
shl
sbb
je
ja
leave
push
jl
pop
mov
push
mov
icebp
in
jo
or
fcom
jp
mov
int3
add
and
shr
cdq
fsubr
clc
dec
mov
cmps
je
aam
repz
jnp
xchg
push
adc
lahf
xor
jne
mov
push
call
enter
lahf
jmp
call
xor
fs
ja
add
push
mov
out
and
sbb
inc
pushf
jg
(bad)
jecxz
push
in
aad
pop
add
sub
aas
xchg
popa
or
ins
xchg
fisttp
aas
jae
aas
xor
ss
mov
imul
ins
call
xchg
or
push
sub
mov
mov
ins
mov
add
std
mov
js
scas
xor
adc
sbb
out
dec
pop
shl
cmps
cmp
jae
out
repz
xor
sbb
loopne
lahf
jbe
mov
aad
push
xor
xor
test
and
mov
and
fmul
stos
xchg
int3
adc
sti
pop
mov
cmp
xchg
(bad)
mov
into
sbb
or
xor
js
or
mov
mov
popf
ret
inc
mov
call
imul
into
xchg
sti
jmp
adc
(bad)
jecxz
xchg
mov
loope
(bad)
fld
std
dec
mov
push
cs
jns
xor
(bad)
sbb
loope
push
addr16
cmps
sub
aas
mov
(bad)
repz
adc
dec
mov
ins
mov
and
lahf
ja
push
dec
dec
push
and
jae
mov
pop
add
cwde
lahf
jle
clc
cmp
arpl
stos
aas
sub
mov
sub
ins
cdq
shl
and
pusha
retf
push
je
aas
cdq
arpl
clc
dec
jp
push
loopne
mov
(bad)
push
daa
aaa
out
and
adc
fidivr
loope
lods
call
jo
mov
cwde
(bad)
pop
or
push
inc
test
fist
jge
sub
mov
imul
pop
cdq
pushf
dec
lods
push
mov
or
inc
add
or
mov
scas
xchg
xchg
shr
and
add
neg
int3
jp
xchg
push
mov
rol
xchg
scas
cmp
cmp
jge
add
sahf
adc
inc
fild
jg
hlt
inc
cmps
loop
sbb
pop
sub
pop
sar
aaa
test
xor
cmp
call
rol
mov
retf
shl
fs
sbb
push
mov
retf
loope
pusha
push
or
mov
fsub
fld
call
mov
sub
fidivr
inc
jbe
pusha
dec
cmp
inc
jmp
cmp
ins
cdq
push
mov
xlat
xchg
in
pushf
in
mov
aaa
cmps
add
gs
cmp
jbe
call
sbb
add
xchg
mov
loop
mov
push
sbb
jb
mov
lock
or
cmp
pop
gs
cmps
pop
lea
pop
and
and
sub
mov
mov
fucomp
repnz
dec
mov
das
inc
cmps
enter
cmp
xchg
xor
cmp
inc
int
adc
and
inc
cli
cwde
jmp
test
jg
rol
repz
jae
cmp
pop
call
ins
mov
pop
jno
pop
mov
mov
daa
push
mov
pop
js
outs
mov
mov
lods
addr16
enter
shl
sbb
je
add
idiv
and
bound
lock
push
mov
cs
pop
mov
jmp
test
inc
dec
xor
js
sub
push
daa
and
sbb
push
sub
pop
cmc
add
push
sbb
test
into
shl
cdq
in
aas
xchg
push
push
jne
xor
int
jle
std
(bad)
enter
push
push
push
mov
adc
fsubr
and
pusha
mov
and
mov
jns
sub
imul
repnz
mov
(bad)
xor
or
adc
test
cli
retf
push
(bad)
cwde
sbb
mov
test
enter
(bad)
ret
xchg
sub
ss
mov
xchg
xchg
xchg
frstor
test
inc
imul
inc
int3
in
cwde
test
imul
rcl
das
fimul
test
push
xchg
and
packsswb
xor
leave
out
lahf
jns
outs
adc
xor
xor
pop
cmp
push
push
les
mov
in
call
call
push
pusha
push
test
loope
in
push
lock
popa
mov
shr
stos
lods
cmc
sar
mov
jmp
push
popa
mov
jae
cmp
or
jne
push
call
jge
ror
cdq
int3
mov
call
xchg
adc
mov
and
(bad)
push
pop
pop
pushf
sahf
ror
(bad)
out
data16
mov
aas
mov
mov
sbb
sbb
xor
sbb
hlt
cmp
add
jbe
mov
inc
jbe
jmp
or
mov
push
int
push
sbb
out
add
and
mov
sbb
adc
xor
scas
lds
mov
outs
xchg
int3
pusha
mov
mov
movs
daa
out
(bad)
mov
into
adc
ss
ret
fild
xchg
inc
dec
frstor
and
jmp
inc
sub
gs
mov
jmp
aad
fnstenv
cmp
arpl
sbb
mov
lods
fwait
dec
mov
xor
mov
enter
(bad)
and
and
or
test
mov
(bad)
int
repnz
pop
iret
call
cdq
out
mov
sub
imul
nop
pusha
inc
test
inc
aaa
int
adc
inc
jmp
out
stc
add
jmp
add
jne
imul
ja
sbb
mov
inc
mov
cld
enter
les
in
mov
leave
(bad)
call
lock
mov
fisubr
outs
(bad)
sbb
jecxz
js
sbb
cmp
pusha
mov
xchg
mov
push
loop
adc
mov
dec
jne
fucomip
test
ins
popf
dec
inc
mov
out
push
inc
push
cwde
xor
push
cmp
stos
clc
adc
pusha
inc
jmp
and
mov
out
stos
jmp
push
stos
add
and
xchg
in
or
pusha
mov
in
fadd
sub
jmp
loope
mov
inc
push
icebp
or
xchg
jge
dec
dec
inc
push
sbb
pusha
inc
mov
ins
adc
cmps
retf
test
sbb
mov
add
fdiv
fld
cmp
test
jmp
and
out
fwait
push
test
pushf
dec
das
imul
in
int
popa
cmp
stos
ins
repz
je
jg
or
xor
adc
enter
stos
pop
test
add
shl
ins
rcr
inc
push
and
aam
dec
pop
inc
add
mov
out
pop
dec
or
pusha
jno
scas
retf
or
in
out
aad
dec
adc
jo
mov
(bad)
push
imul
add
jmp
inc
imul
clc
pop
xchg
lods
arpl
inc
cmc
mov
sub
or
xchg
or
mov
sar
fistp
push
scas
mov
cmps
add
or
sahf
mov
mov
(bad)
dec
loopne
xchg
mov
mov
or
mov
mov
mov
rol
clc
cmps
iret
imul
sub
jns
ds
cmp
stc
mov
out
fdivrp
js
bound
sbb
cmc
cmp
sub
clc
jnp
jb
add
stc
fidivr
sbb
into
mov
les
add
sbb
minss
imul
lods
mov
sbb
daa
aam
xor
(bad)
cs
dec
jno
into
jns
sbb
mov
xor
jp
gs
lea
pushf
push
xchg
sti
and
cmps
aas
jmp
out
and
mov
push
fdivr
fmul
neg
je
inc
hlt
or
in
adc
adc
outs
or
rcl
sub
jno
sbb
jno
push
sbb
shl
mov
popf
and
fisttp
mov
push
shr
push
pushf
dec
sbb
add
call
inc
dec
mov
jge
mov
stos
xchg
cli
(bad)
push
push
push
mov
rep
jo
pop
retf
push
dec
cmp
adc
jb
es
mov
dec
xor
mul
int
push
pop
cmps
inc
fstp
rep
inc
bound
add
pusha
add
fild
repz
jmp
xchg
sbb
xlat
clc
movs
cmp
xor
sub
jmp
stc
clc
and
mov
test
and
stos
int
sbb
dec
add
push
das
cwde
rcl
dec
cmp
xor
inc
mov
pop
aam
mov
iret
div
and
xor
(bad)
ja
(bad)
hlt
(bad)
fldenv
ins
mov
dec
cmp
(bad)
inc
mov
stos
push
(bad)
or
add
jp
xor
sti
in
jnp
fisttp
dec
adc
mov
cmp
cmp
xchg
xchg
les
clc
push
mov
or
push
jl
shr
shl
cmp
mov
sub
fdivp
cdq
inc
mov
push
mov
xor
stc
and
xlat
fmul
adc
jecxz
das
and
aaa
jmp
es
retf
adc
dec
sub
ret
push
popa
outs
pop
es
fcomp
dec
fdiv
dec
popf
xchg
inc
faddp
rcl
and
inc
test
add
mov
xor
js
mov
push
rcl
mov
call
ds
shl
mov
xchg
mov
dec
out
ret
in
sti
leave
std
js
fimul
inc
scas
dec
daa
shl
and
enter
mov
(bad)
xor
rcl
or
fdiv
icebp
outs
stc
inc
movs
pusha
lahf
push
in
xchg
out
(bad)
jg
push
pop
int3
ret
stos
cdq
pop
int
call
push
cmc
fld
test
aaa
jo
dec
sub
mov
ja
push
imul
aam
xor
stos
outs
pusha
mov
and
int3
fisubr
sti
add
cmp
xchg
or
cmp
into
popa
push
xor
push
push
jle
pop
lods
int
imul
inc
lods
jbe
lock
rcl
pop
adc
or
or
cmp
xchg
shl
add
sbb
call
jmp
imul
cs
shr
jp
jg
scas
xor
and
cmp
cmc
add
jmp
xchg
mov
xor
fistp
dec
out
stc
out
pushf
add
popf
add
sbb
xchg
clc
int
xchg
ret
adc
jb
enter
(bad)
pop
pop
or
dec
add
je
push
aas
out
jl
sub
adc
out
(bad)
and
outs
push
std
stos
ins
or
jmp
xor
mov
and
dec
jmp
or
rol
test
sbb
inc
in
jge
jg
sti
pop
enter
jp
push
fistp
repnz
enter
hlt
pop
es
push
dec
and
push
(bad)
xlat
mov
cmp
push
xchg
pop
je
jl
xor
andps
inc
cs
lahf
lahf
xchg
mov
les
pop
fs
mov
movs
sti
test
sbb
jmp
dec
mov
sar
sub
push
mov
xchg
cmp
hlt
push
xlat
inc
loopne
nop
mov
push
mov
sbb
in
sbb
enter
adc
sbb
imul
(bad)
ja
scas
ret
mov
or
call
test
lds
sub
cmc
mov
enter
xchg
pop
xchg
test
out
mov
cli
imul
cdq
(bad)
hlt
mov
div
xchg
inc
in
mov
pusha
push
movs
outs
rol
cmc
or
repz
push
repz
adc
icebp
fsubr
sub
hlt
scas
mov
push
add
cmps
jg
add
pop
inc
fimul
xchg
test
cmps
dec
mov
mov
(bad)
push
out
lock
lods
call
inc
sar
mov
fadd
dec
outs
mov
addr16
cmps
cmps
or
push
jnp
js
sahf
adc
cmp
test
inc
xor
cmp
mov
push
or
pushf
cmp
pop
cdq
jbe
aad
(bad)
sahf
jmp
cmps
jle
inc
cld
inc
sub
mov
dec
lahf
scas
push
sbb
or
mov
loope
cmp
push
(bad)
push
mov
adc
mov
movs
dec
inc
adc
sahf
push
sub
xchg
test
sbb
ret
iret
mov
sbb
xchg
fmul
in
pop
pushf
or
or
sbb
(bad)
ret
sahf
(bad)
push
dec
cmp
fs
scas
cmp
fild
pop
test
cwde
dec
add
push
fstp
fdivrp
in
push
jmp
push
ja
xor
scas
push
movs
sbb
fucomip
retf
add
inc
fisttp
ins
or
addr16
dec
sub
retf
add
out
test
enter
cdq
gs
jg
js
and
xchg
mov
lods
push
mov
xchg
inc
(bad)
jmp
sbb
rcl
mov
stc
add
ror
fmul
(bad)
jo
lock
fdivr
shl
cmps
inc
jae
lods
fst
shl
(bad)
dec
xor
xchg
bnd
fsub
enter
jp
jp
jmp
sbb
sub
add
push
test
sbb
push
shr
pop
sbb
ficom
fmul
adc
stos
sbb
push
ret
jbe
retf
or
xchg
mov
popa
pushf
and
lahf
(bad)
jmp
add
adc
mov
dec
imul
jns
stc
or
idiv
jnp
mov
test
call
and
lds
stos
(bad)
xchg
iret
lods
or
mov
dec
shr
jmp
loopne
add
or
sub
ins
les
sub
pop
fs
sbb
shl
xchg
js
and
mov
push
dec
sub
mov
mov
and
cmc
cld
pop
sub
pop
pop
jmp
lods
sbb
std
(bad)
int
jle
out
sub
in
stos
arpl
cmp
aad
dec
sbb
adc
cmps
push
mov
mov
mov
adc
nop
sbb
xchg
std
fmul
cdq
mov
aad
add
imul
add
cmp
sub
retf
(bad)
jae
or
out
lea
aaa
call
outs
call
or
movs
out
push
push
pop
popf
popa
xchg
mov
pushf
out
cmp
push
cld
jmp
adc
fadd
loope
test
cmp
call
(bad)
hlt
push
cmp
call
pop
cwde
push
scas
ret
adc
ins
call
scas
mov
ins
loope
dec
daa
enter
dec
cdq
push
retf
cli
ja
mov
fdivp
imul
imul
mov
fist
sbb
pop
ror
xor
pop
(bad)
pop
scas
pop
or
push
inc
jnp
arpl
cs
shl
scas
and
mov
jle
sti
push
ja
mov
lock
sbb
push
jns
es
inc
push
pop
repnz
das
stc
xchg
or
xchg
xchg
popf
(bad)
rcr
ret
cld
push
out
outs
cmp
jle
and
cs
push
out
dec
(bad)
stc
jae
je
icebp
imul
mov
enter
sbb
shl
push
(bad)
adc
retf
pop
aaa
cdq
lods
shl
sbb
cmps
cli
std
adc
stos
mov
aaa
mov
les
inc
dec
icebp
jmp
sub
call
mov
and
(bad)
nop
fs
(bad)
xor
jg
pushf
jnp
push
(bad)
loopne
(bad)
leave
fldenv
test
adc
sbb
xchg
out
sahf
push
imul
addr16
enter
sbb
or
jl
mov
mov
ds
inc
jp
mov
(bad)
mov
push
jnp
xchg
imul
or
push
rcr
aam
pop
mov
pop
push
and
fcomi
int3
inc
push
push
in
push
fidiv
lahf
mov
pop
pop
adc
daa
inc
sub
add
call
add
xor
sbb
sbb
sub
pushf
in
sbb
or
lods
fsubr
push
sbb
iret
(bad)
aad
retf
cmp
inc
out
mov
push
loope
inc
cmp
sub
mov
iret
mov
sub
mov
mov
xor
(bad)
in
mov
xchg
jne
push
jge
inc
sbb
cmps
add
int3
ret
inc
mov
jmp
pusha
retf
es
stc
mov
mov
jb
inc
mov
xor
adc
add
mov
repz
(bad)
out
push
(bad)
fldenv
sbb
mov
outs
mov
jmp
sbb
and
lahf
inc
shl
stos
loope
leave
xor
imul
mov
xchg
movs
stos
xor
pop
lea
push
mov
dec
sbb
fistp
push
sbb
sahf
into
push
pop
mov
and
test
adc
sub
sahf
mov
jge
xor
adc
pop
jmp
mov
dec
sbb
inc
push
cdq
mov
dec
xor
mov
lods
add
or
add
out
sub
xchg
and
das
js
or
(bad)
(bad)
fdivr
mov
in
mov
push
imul
hlt
inc
mov
xchg
sub
inc
push
mov
ret
shl
push
add
push
mov
pxor
add
adc
inc
push
cmc
mov
or
xor
ret
pop
pop
(bad)
jmp
xchg
cs
stos
push
add
sub
mov
pusha
xchg
inc
xchg
out
aad
and
scas
test
ror
rcl
test
inc
fwait
mov
sub
in
jle
inc
mov
inc
mov
xor
and
dec
test
add
inc
mov
push
xchg
sti
cli
cmc
sub
(bad)
fild
adc
mov
popf
xchg
jl
and
mov
jmp
adc
jae
scas
xchg
xor
or
sbb
push
mov
mov
fidivr
stos
lods
loope
dec
int
pop
jnp
fistp
dec
add
mov
cmp
out
stos
(bad)
cmp
lods
(bad)
xchg
retf
rol
add
cmps
mov
fs
inc
sti
scas
shl
popf
inc
retf
in
stos
cdq
jae
mov
push
das
mov
push
popa
xor
push
test
and
and
(bad)
jno
ret
daa
test
rcr
jmp
mov
add
cmp
push
fnsave
adc
mov
mov
and
add
dec
jnp
imul
inc
push
push
jp
and
xchg
lahf
inc
jg
aad
or
and
ss
test
cmps
sub
dec
mov
(bad)
jmp
jmp
repz
inc
lea
int3
jp
sbb
push
out
and
aad
mov
sbb
loopne
addr16
fdivp
out
sub
sahf
lods
loope
(bad)
fdivr
js
jmp
(bad)
popa
loop
xor
popf
xor
mov
scas
xchg
jns
jbe
dec
jne
jg
xchg
mov
push
in
xchg
xor
and
sbb
arpl
push
xchg
imul
xor
enter
in
ja
sbb
inc
inc
dec
mov
aaa
fmul
mov
mov
and
and
into
jo
(bad)
mov
aaa
jmp
inc
inc
adc
out
stc
into
(bad)
out
popf
sbb
pop
in
push
jp
pop
xor
pop
aaa
bound
ss
push
add
pop
mov
out
mov
xchg
out
rol
js
loopne
xchg
jnp
outs
jne
out
loope
and
cmp
mov
or
lahf
and
not
shr
inc
and
push
mov
mov
aam
jno
and
xchg
dec
mov
mov
add
or
cmps
cmps
das
mov
cmp
sar
repz
adc
icebp
sub
rcl
fnstcw
sar
aas
and
loopne
xchg
pop
shl
or
das
add
push
sub
popa
ins
push
rol
mov
adc
or
mov
daa
jecxz
jg
movs
cdq
std
mov
sbb
or
icebp
xchg
sbb
mov
xlat
in
call
jnp
mov
and
jns
or
(bad)
mov
retf
mov
movs
pop
adc
xor
aaa
xor
sub
sub
mov
cmp
icebp
sar
fistp
mov
and
pop
sub
sub
ss
push
(bad)
ficomp
mov
xor
out
mov
lods
jne
gs
ret
cs
test
adc
into
retf
iret
arpl
sub
int
dec
outs
into
add
and
ret
loop
cmc
dec
sbb
jle
xchg
push
inc
sbb
pop
fisttp
push
aad
iret
inc
pop
jo
sbb
pop
mov
pop
sbb
imul
add
out
js
sub
cli
and
(bad)
push
push
sub
idiv
cli
fild
jge
popa
mov
ror
mov
mov
imul
adc
sbb
daa
push
sbb
push
sub
xchg
es
push
fadd
ins
push
fsubr
pop
xor
lds
std
lods
in
mov
or
push
fwait
popa
loope
sub
sbb
dec
xor
loopne
jmp
adc
mov
inc
xchg
push
ret
test
xchg
fisttp
sub
int3
push
mov
es
fs
pop
test
mov
adc
xor
shr
dec
ficom
jno
fs
ror
(bad)
aas
jge
retf
sub
xchg
adc
sar
adc
cli
xchg
xor
daa
add
xchg
outs
dec
mov
imul
mov
pop
mov
cdq
test
jnp
rcr
retf
test
pop
xchg
jecxz
nop
jg
stos
mov
push
jnp
scas
pop
inc
xchg
dec
into
xor
push
sbb
xchg
sub
xchg
test
add
cmp
push
add
push
pop
adc
and
pop
icebp
jne
inc
pusha
dec
test
out
or
mov
loope
cmp
or
xor
ins
jge
arpl
cmp
dec
hlt
jge
jecxz
pop
jbe
jnp
rcl
stc
std
sbb
in
mov
jmp
or
mov
xlat
jecxz
lds
xor
pop
cwde
retf
and
sahf
push
loop
(bad)
xor
call
sub
(bad)
cmp
dec
in
int3
sub
imul
mov
iret
cmps
es
xchg
xchg
aam
outs
and
imul
(bad)
xlat
fldenv
add
in
test
and
ror
out
push
clc
sub
lods
jle
pop
movs
adc
mov
dec
mov
outs
int
fldcw
test
push
sar
sub
pop
fnstenv
cmp
sub
test
adc
popa
outs
repnz
ss
nop
int3
cdq
data16
pop
int3
ins
or
nop
adc
enter
test
fcmovnbe
inc
jp
jno
int3
xor
inc
(bad)
mov
ror
ins
sub
mov
sub
cmp
adc
cmp
fld
push
cmps
jb
dec
fs
pop
pop
or
pop
jno
cmp
into
dec
cwde
(bad)
movs
in
inc
cmp
sbb
fs
repnz
fwait
add
and
jo
inc
mov
sub
mov
sar
or
sahf
test
pop
les
das
push
arpl
dec
fcomi
test
adc
arpl
in
movs
popf
outs
inc
mov
out
jno
js
jmp
mov
cmp
sub
or
call
int
in
inc
push
je
popf
hlt
outs
cs
bound
popf
stc
sbb
outs
loopne
repz
stc
add
div
adc
(bad)
cmp
std
into
cdq
or
jo
int
fwait
sbb
mov
or
stos
mov
cwde
jp
sub
add
or
iret
out
sub
pop
rcr
inc
sub
sub
xor
dec
loopne
loop
push
pusha
xchg
xor
jg
ds
pop
jl
xchg
cli
enter
lahf
mov
sub
fimul
inc
imul
loop
arpl
daa
ret
test
shl
pushf
repnz
int
test
mov
jl
cdq
loop
fmul
pusha
js
addr16
jmp
addr16
adc
mov
sahf
push
xor
inc
add
mov
sub
jecxz
mov
pop
movs
outs
or
push
arpl
or
dec
xchg
jbe
pop
jns
sbb
lock
pop
adc
fst
push
js
or
out
add
pop
mov
jo
xchg
sbb
int
add
mov
jle
(bad)
addr16
gs
jp
xlat
fstp
leave
faddp
xchg
dec
add
inc
ds
ret
dec
dec
jmp
and
sub
mov
ret
ret
mov
cmps
call
jmp
dec
(bad)
lock
jns
mov
cmps
xchg
out
in
fimul
je
test
out
add
mov
int
mov
mov
data16
addr16
pop
retf
adc
jp
lds
imul
jge
lock
add
mov
and
adc
outs
mov
add
push
and
push
movs
imul
(bad)
mov
ret
pop
retf
mov
jp
movs
(bad)
cmp
or
pusha
aaa
inc
sub
test
loope
jmp
cdq
scas
bound
jecxz
jmp
aaa
or
shl
shl
ret
push
mov
xchg
stos
iret
pop
inc
rcr
pop
std
or
rcr
ret
dec
sbb
jge
pop
xor
loope
(bad)
jmp
xchg
int3
xor
cmps
xor
retf
inc
sbb
dec
xor
xchg
push
cmp
dec
ss
into
fidiv
sub
call
scas
test
push
and
popf
cmp
cmp
jb
jecxz
sbb
daa
mov
jae
jmp
or
shr
mov
pop
ss
mov
xchg
sub
repz
std
loopne
mov
js
loope
add
dec
in
daa
and
mov
sar
loopne
xor
xor
pop
retf
fdiv
xor
dec
ins
mov
push
sbb
mov
dec
jbe
jge
mov
mov
push
(bad)
mov
adc
jb
jle
mov
sub
push
stos
ss
mov
sub
xor
fisttp
jl
sub
jle
or
out
dec
pop
xor
mov
xchg
in
mov
gs
mov
sub
xor
pop
out
sub
inc
fwait
add
jnp
xor
and
ror
mov
and
cdq
sbb
push
scas
sub
dec
inc
xor
sbb
scas
je
popa
pop
mov
sub
adc
xchg
xchg
mov
or
inc
fst
enter
add
xchg
jp
add
imul
mov
and
jno
push
aaa
in
(bad)
pop
mov
ret
sbb
call
dec
xchg
sub
sti
je
bound
jge
dec
mov
mov
ret
fmulp
in
daa
sub
adc
sub
mov
push
mov
repnz
mov
nop
test
or
idiv
cli
cmp
test
sub
fdiv
popa
adc
ins
ror
ins
inc
add
pushf
push
retf
dec
pmulhuw
push
mov
mov
sub
in
sar
mov
retf
mov
ds
rol
daa
jo
ret
lods
call
inc
out
pusha
xor
pop
and
(bad)
sbb
and
imul
sbb
shl
xor
cwde
cmp
repnz
sub
adc
inc
add
cmps
pop
cmp
fdiv
and
xor
stos
xor
bound
movs
inc
push
out
push
xor
aam
inc
xor
stc
lea
pop
and
add
clc
pop
jns
out
(bad)
popf
cdq
movs
sub
in
xor
jl
pusha
ds
jno
inc
lds
fisttp
dec
push
or
out
aas
fdiv
fwait
das
inc
ret
fdiv
dec
mov
in
ins
scas
scas
das
push
pop
lods
inc
jnp
out
div
add
cmp
iret
jnp
pop
dec
jge
repz
mov
cmps
add
cmp
jl
test
lods
neg
cmc
shl
add
clc
imul
jmp
ja
inc
and
sub
sbb
push
xor
mov
push
mov
or
ret
aam
addr16
in
sbb
mov
or
gs
pop
lahf
xchg
dec
loopne
inc
js
mov
sub
out
jmp
push
sar
pop
jnp
and
addr16
hlt
rcr
cld
pop
aaa
stos
sbb
dec
in
sbb
cmp
cmps
xor
jp
frstor
hlt
cld
dec
aas
jle
sti
int3
scas
ja
jbe
push
outs
js
xor
stos
les
add
xchg
pop
add
jno
cs
xor
test
mov
rcl
(bad)
xchg
arpl
adc
and
add
pop
std
pop
inc
dec
retf
and
(bad)
push
or
xor
addr16
enter
test
add
mov
ja
aam
mov
outs
push
inc
adc
sar
and
jg
add
mov
jge
pop
add
lds
movs
push
sbb
mov
cwde
mov
adc
fsubr
call
ins
mov
fwait
scas
mov
cmps
xor
cmc
mov
clc
imul
retf
rcl
lock
(bad)
xchg
push
fiadd
mov
gs
frstor
in
push
rcr
push
mov
hlt
popf
sub
js
pop
xchg
(bad)
in
mov
mov
inc
aas
in
add
jns
loopne
call
push
jb
inc
(bad)
fwait
idiv
fs
xchg
adc
dec
inc
sbb
push
and
sbb
jb
lods
pop
adc
ss
mov
push
jne
mov
retf
or
retf
mov
mov
call
adc
fdivr
(bad)
push
(bad)
dec
pop
bound
imul
movs
test
popf
jns
pop
aad
pop
call
fnstenv
mov
sub
stc
sbb
adc
jo
int
push
dec
and
push
fwait
add
push
dec
fsubrp
enter
xchg
shr
sahf
mov
xchg
retf
add
cmp
mov
and
dec
mov
ins
push
cmp
sub
cmp
(bad)
jns
push
ret
cli
pop
in
and
and
mov
mov
neg
or
mov
push
sti
sub
sub
push
cmp
xor
aas
fidivr
jle
or
arpl
or
shl
push
xlat
rcl
jae
fs
add
xchg
or
pop
scas
jecxz
repnz
enter
or
je
add
loopne
push
sbb
mov
cmp
or
mov
into
or
imul
and
xchg
stos
sbb
mov
mov
enter
mov
lea
aad
xor
clc
fisub
xchg
xchg
mov
outs
mov
jle
xor
pinsrw
rcl
cmc
mov
in
adc
leave
pop
cs
stos
or
movs
in
jae
repz
sti
hlt
bound
push
sbb
test
push
fld
jecxz
out
cmp
daa
add
iret
pusha
cmp
iret
paddusw
icebp
add
cmps
sbb
pop
jo
out
mov
jecxz
test
and
scas
mov
push
jmp
jo
jle
cmc
sub
cmp
mov
mov
push
cmp
or
sbb
aam
dec
or
sub
aam
mov
fnstenv
pop
in
vmovapd
or
push
sbb
loopne
xchg
mov
xchg
(bad)
xor
pop
mov
xor
dec
int3
mov
xor
(bad)
push
test
xor
inc
pop
adc
adc
test
cmp
add
sbb
or
mov
enter
pop
in
cmc
pop
push
lea
jo
cmp
in
mov
leave
outs
mov
aas
es
mov
jae
cmp
out
xor
aam
scas
and
sub
pop
sub
or
fst
mov
jbe
sub
adc
ins
bound
js
dec
ret
and
sub
inc
out
mov
fwait
mov
and
mov
cmps
cmps
and
sub
mov
dec
into
or
bnd
xchg
rol
jp
pushf
es
jl
xchg
cdq
in
retf
pop
jle
pop
shr
jmp
cld
lock
push
out
jmp
cmp
inc
push
jge
pop
lahf
xchg
repz
out
pop
sahf
add
add
rcr
xchg
mov
jmp
lock
or
sbb
sub
lock
bound
arpl
push
jp
rol
mov
arpl
mov
test
cmp
inc
pop
xor
inc
adc
add
adc
ja
sbb
mov
xchg
mov
jo
mov
xor
stc
dec
mov
sub
out
int
push
mov
pop
rcl
mov
and
pop
push
(bad)
(bad)
je
add
cmps
jns
inc
shr
inc
popa
stos
pop
pop
cdq
fcmovnbe
mov
aaa
and
pop
jg
(bad)
out
dec
xchg
push
inc
loopne
sbb
push
(bad)
outs
sahf
sub
push
mov
cmps
aas
stos
xor
or
(bad)
clc
scas
xchg
ret
push
or
and
scas
ins
push
push
int
test
xor
xchg
aaa
ins
not
nop
test
jl
neg
push
arpl
sbb
pop
push
in
fistp
sub
ror
fsubr
loop
inc
jbe
icebp
cli
jbe
dec
xchg
jl
pop
mov
mov
cmp
push
(bad)
sub
pop
mov
mov
mov
push
adc
les
pop
jns
pop
aad
inc
addr16
jge
sub
test
rcr
or
pop
ss
adc
mov
or
mov
inc
mov
mov
xchg
cmp
aam
mov
imul
cli
out
pop
call
aaa
clc
sbb
push
push
sbb
dec
jo
daa
adc
(bad)
mov
(bad)
gs
pop
daa
call
jnp
mov
pop
jne
cwde
mov
pop
adc
or
ss
pop
jl
cwde
in
fs
fbld
cmp
jns
inc
enter
leave
aas
xor
xchg
mov
cmp
(bad)
lds
fisubr
xchg
call
mov
inc
mov
sbb
fwait
push
mov
add
or
inc
adc
xlat
outs
cdq
int3
cwde
repnz
sub
out
ja
(bad)
xchg
push
and
mov
add
cmp
mov
xchg
outs
into
lods
pop
add
movs
xchg
jbe
or
jns
repnz
dec
inc
out
fldcw
shl
push
mov
inc
dec
cmp
loop
pushf
add
lock
inc
in
dec
scas
dec
in
mov
mov
mov
add
test
jmp
retf
or
fmul
(bad)
sub
inc
inc
in
mov
call
loop
mov
repz
(bad)
adc
sbb
mov
xchg
aad
pusha
push
xchg
adc
sub
push
out
or
sub
aas
xor
mov
loop
clc
and
imul
test
retf
int
jb
xor
push
out
mov
std
movs
lock
or
mov
mov
xchg
add
stos
fwait
neg
push
ja
or
sbb
aas
loop
jmp
mov
jae
dec
adc
push
stos
mov
sub
fnstcw
rcl
pop
sar
adc
cwde
and
popa
daa
cmp
sbb
shl
outs
or
dec
or
pushf
xor
inc
sub
mov
(bad)
lds
loop
mov
imul
std
ins
repz
dec
int3
sbb
sub
dec
mov
adc
push
jmp
push
iret
dec
cwde
popa
inc
mov
sbb
(bad)
(bad)
fdivrp
mov
push
dec
and
jbe
div
mov
pop
fwait
add
lahf
int3
call
inc
loopne
xchg
sub
inc
stos
add
icebp
js
pushf
jbe
jmp
and
cld
je
aaa
push
loop
inc
cld
push
in
and
add
and
or
stc
loope
cmps
(bad)
jmp
mov
inc
sbb
sar
das
and
(bad)
outs
jae
cmp
dec
imul
cmp
mov
ret
fistp
mov
inc
data16
stos
ror
or
js
ins
add
popf
push
lods
adc
js
mov
and
ret
bextr
repz
and
cmp
cmp
fwait
pop
daa
add
jle
and
clc
mov
cmp
adc
addr16
icebp
push
xchg
lods
cmp
mov
xchg
inc
cmc
push
scas
ror
cmp
aam
in
cld
dec
xchg
xchg
in
xchg
mov
jae
es
xchg
cmc
std
add
(bad)
dec
xor
loopne
xchg
mov
mov
mov
sbb
cmp
xchg
into
test
in
xor
jp
jmp
pop
dec
cli
add
neg
sbb
dec
sub
scas
(bad)
(bad)
xlat
add
loop
stc
jnp
ja
inc
jb
or
int
fist
je
movs
out
jle
gs
add
(bad)
fadd
mov
mov
xor
mov
sbb
xor
(bad)
popf
mov
xchg
test
psrlw
cmove
cs
sub
jl
outs
xchg
adc
aam
inc
(bad)
jecxz
and
add
mov
fs
add
xchg
jnp
rcr
xchg
ins
push
ja
xlat
leave
dec
mov
sbb
es
fadd
cdq
aaa
lahf
pop
pop
sbb
sub
inc
jmp
movs
xchg
(bad)
xchg
mov
sub
stos
jo
jno
adc
sub
sbb
push
(bad)
jnp
(bad)
lahf
(bad)
or
mov
adc
mov
jb
idiv
mov
pusha
lahf
into
sub
jmp
(bad)
rcl
and
pop
gs
ror
mul
push
push
dec
push
retf
(bad)
adc
cmp
add
retf
rol
xchg
jae
pop
loopne
aas
pop
jnp
and
ret
pop
movs
pop
int3
push
fild
fmulp
adc
fcomi
popa
jp
or
add
lds
mov
cmc
lock
add
cdq
dec
es
xchg
(bad)
out
fs
mov
jne
out
or
in
test
pop
cmp
jae
jns
rol
(bad)
mov
cmp
adc
inc
je
xor
jno
xchg
ja
aad
mov
xchg
test
mov
dec
sbb
ret
inc
jg
mov
sbb
push
ret
addr16
add
cmp
iret
dec
nop
stos
retf
adc
test
cmp
add
push
pop
jns
fnstsw
adc
mov
add
pop
fcmovne
mov
push
in
test
and
stc
xchg
adc
mov
and
loopne
test
or
rol
adc
ja
dec
xlat
or
mov
and
out
loopne
cmp
neg
lea
aaa
dec
out
push
adc
neg
mov
addr16
cmp
sbb
cmps
in
lahf
cmps
or
cmp
xchg
or
ins
jo
push
dec
jbe
scas
and
call
cmps
push
outs
movs
loop
jno
mov
jmp
xchg
dec
std
and
sahf
repnz
or
push
sbb
ror
je
popa
popa
jne
sbb
jp
jb
(bad)
repnz
push
test
or
dec
push
das
inc
xchg
aaa
out
push
push
xlat
out
test
imul
xchg
push
push
gs
push
dec
or
popf
rdmsr
cmp
mov
out
(bad)
out
rcr
(bad)
int
loop
fcmovbe
ins
cmp
mov
call
mov
or
vmovaps
dec
in
rcl
stos
(bad)
jecxz
mov
dec
cmp
or
aam
hlt
test
mov
cmp
or
(bad)
cmp
mov
mov
bswap
push
sub
mov
ss
jae
mov
stos
mov
stc
xchg
int3
ins
jp
adc
out
jbe
leave
fimul
stos
mov
inc
(bad)
push
xchg
ins
xchg
sbb
call
cmp
test
xchg
push
popa
jb
int3
sub
out
xchg
dec
cli
retf
adc
loop
pop
call
jmp
out
pop
and
sbb
push
adc
mov
jae
mov
sub
frstor
clc
in
shl
jne
(bad)
out
das
pop
mov
jns
mov
and
xchg
(bad)
ss
int3
loop
cmp
xchg
stos
out
push
mov
mov
mov
test
int
jbe
jge
mov
push
arpl
cmc
xchg
mov
out
fisttp
adc
mov
rcl
sbb
xchg
sbb
sbb
cmp
sub
sti
pop
iret
test
popa
cmp
dec
xchg
outs
(bad)
mov
(bad)
xlat
pop
inc
push
xor
and
push
xor
retf
sub
shr
cld
push
out
fwait
ja
ret
xor
fidivr
adc
or
pop
pop
push
stos
push
ins
fs
adc
push
cmp
in
cmp
jbe
sub
push
sbb
pop
mov
mov
dec
mov
call
mov
inc
sti
inc
lock
mov
jmp
mov
adc
aam
popa
sbb
mov
sti
xor
out
sbb
out
and
sar
cmp
leave
push
out
xchg
mov
retf
icebp
mov
enter
and
icebp
test
mov
mov
and
add
inc
pop
xchg
mov
jno
leave
xchg
cmp
xor
adc
mul
xchg
pop
into
push
(bad)
shl
mov
loop
adc
xor
pop
(bad)
or
or
shl
aad
aaa
(bad)
aaa
fstp
mov
or
icebp
sbb
dec
inc
call
lods
cmps
cs
mov
scas
pop
mov
xchg
and
ins
bound
retf
xchg
shl
push
and
das
or
les
mov
scas
xor
and
xchg
xor
out
retf
leave
sahf
sbb
dec
ret
jb
mov
scas
jne
stc
mov
hlt
mov
cmp
imul
jnp
add
clc
out
push
cli
dec
std
mov
mov
lods
fnstsw
inc
outs
mov
pushf
mov
add
shl
inc
sbb
mov
cs
or
aas
xor
dec
push
pop
(bad)
loop
je
fadd
sub
and
inc
push
imul
mov
sub
retf
dec
add
mov
mov
ror
and
cmps
jge
test
or
sub
pop
adc
ja
jmp
aam
xor
stos
sbb
test
ror
scas
cmp
das
fld
sbb
sub
jne
cli
lahf
or
sbb
test
fcomp
inc
popa
sub
or
push
add
jle
out
out
daa
mov
cmp
pop
aad
out
jo
inc
push
bound
mov
cmp
jge
lods
mov
ss
rcl
je
adc
mov
imul
stos
imul
sbb
adc
sub
ds
gs
pop
int3
jle
data16
dec
dec
movs
mov
into
out
(bad)
cmp
dec
jl
lea
push
adc
repnz
adc
inc
test
aam
lods
mov
inc
dec
dec
shl
sub
(bad)
in
mov
xor
sbb
push
or
mov
jmp
mov
ja
inc
nop
loop
jns
mov
or
xchg
loope
xchg
cld
dec
xchg
imul
pop
mov
mov
ins
mov
pop
push
in
lods
pushf
clc
add
jg
stc
xor
and
ins
add
int
inc
call
jbe
adc
in
jbe
mov
and
js
pop
pop
cvtps2pi
inc
test
(bad)
sti
add
mov
sbb
mov
sahf
inc
loope
in
push
pop
or
pop
ss
in
fidiv
imul
and
mov
lods
imul
xchg
leave
les
mov
dec
leave
pushf
mov
faddp
adc
bound
sub
ffreep
call
or
xor
jl
sub
jle
in
xor
jns
cmp
jp
dec
cmp
lock
mov
pop
adc
push
push
jmp
cmp
std
fwait
push
inc
fwait
aam
xor
and
sar
push
push
fsubr
sub
inc
sub
push
jae
leave
pop
retf
aad
call
mov
xchg
ins
jo
inc
jmp
jg
xchg
mov
dec
fwait
push
cdq
push
mov
dec
push
data16
loopne
arpl
lock
test
xor
add
xchg
and
sub
push
jmp
jno
cwde
ja
sub
push
inc
retf
into
mov
(bad)
xor
dec
rcl
(bad)
push
leave
sbb
and
or
xor
mov
inc
jno
push
push
sbb
jl
js
fstp
in
dec
js
push
fwait
iret
pop
jns
rcr
cwde
mov
pop
mov
imul
out
jp
sub
loop
popa
or
stos
inc
sub
shl
xlat
jecxz
push
mov
shl
sbb
and
daa
icebp
fadd
adc
sbb
mov
sbb
aaa
mov
jecxz
dec
add
dec
dec
in
or
mov
fistp
fisubr
in
pop
jno
ret
pop
adc
xchg
sbb
inc
mov
fistp
in
pop
into
mov
add
mov
fsubr
cmp
pushf
dec
cs
adc
cmp
xchg
aas
pop
adc
clc
jae
pop
loop
clc
push
sti
xchg
scas
cmps
ss
pop
out
outs
pop
adc
sub
pop
jo
mov
inc
dec
mov
ins
xor
adc
sbb
aaa
scas
movs
ror
mov
xchg
loopne
jne
jo
pop
xor
xor
cwde
hlt
add
mov
call
std
dec
mov
mov
dec
ins
pop
cmp
loope
fwait
retf
ds
ret
std
push
jg
mov
es
adc
push
and
cli
enter
cmp
ret
mov
dec
inc
repz
xor
fadd
nop
out
std
adc
adc
add
mov
push
repz
imul
jl
es
add
cmc
rol
adc
jecxz
bound
(bad)
or
adc
addr16
inc
push
scas
test
aam
addr16
inc
mov
xchg
cmp
cmp
xchg
shr
xor
fisttp
or
and
xor
ret
xor
std
xor
mov
xlat
ret
imul
cli
into
and
cwde
in
je
push
or
loop
sti
and
(bad)
cmc
sbb
out
pop
bound
and
pop
dec
test
mov
sub
aas
inc
out
inc
cmp
les
lahf
ins
dec
cmps
mov
cmp
ins
std
and
jns
fwait
push
inc
fld
cmp
loope
cld
push
(bad)
les
repnz
sbb
push
jl
mov
movs
into
xchg
retf
push
test
xor
(bad)
in
ret
xchg
sub
and
icebp
cmc
test
pop
adc
jmp
push
arpl
and
fild
cwde
jno
push
(bad)
retf
fild
das
fld
xor
mov
popf
in
scas
dec
call
or
cmp
pusha
jp
mov
add
push
cmp
mov
xchg
aam
sbb
fcom
mov
or
pop
inc
test
and
mov
out
fisub
add
pop
je
push
punpckldq
gs
and
ror
mov
mov
aad
mov
cmp
pop
jge
mov
or
test
pop
inc
shr
jbe
dec
das
dec
cmc
test
aad
div
imul
xor
cmps
mov
mov
mov
mov
xchg
add
mov
lea
adc
(bad)
xor
inc
(bad)
or
inc
retf
jmp
stos
test
adc
cld
es
mov
and
inc
inc
stos
gs
hlt
call
jb
mov
pusha
push
add
or
fld
stc
push
out
xchg
cmp
adc
cld
(bad)
cmc
pusha
pusha
dec
jmp
and
fldl2e
jg
sbb
nop
xchg
dec
cli
or
stc
adc
or
adc
mov
lahf
out
jge
jmp
pop
add
ins
inc
and
mov
push
clc
adc
ret
or
pop
cmp
out
sahf
mul
push
add
lahf
and
dec
push
frstor
dec
(bad)
in
clc
add
fcomp
hlt
icebp
adc
sub
mov
outs
fbld
cmps
cmps
push
mov
mov
mov
jno
push
sub
push
mov
mov
int
xchg
mov
dec
retf
push
cmps
dec
adc
loop
inc
test
sub
jno
icebp
pushf
jle
movs
ss
imul
xor
loop
sbb
nop
(bad)
rcl
js
xchg
hlt
pop
push
cmp
jle
pop
or
xchg
sbb
pop
les
mul
out
(bad)
cmps
adc
gs
push
sub
cmp
push
icebp
dec
shr
push
into
int
dec
or
aad
(bad)
and
adc
sbb
jmp
ret
and
xchg
mov
data16
xchg
sbb
int3
and
scas
xchg
inc
retf
shl
aas
repnz
ss
leave
scas
pop
xchg
jnp
mov
sbb
int3
cld
jb
jl
adc
inc
xor
jp
sub
add
arpl
inc
push
xor
push
mov
pop
mov
inc
rol
xor
scas
aam
lods
js
sbb
pop
jge
ins
push
push
add
shl
cmp
dec
cld
sub
std
outs
xor
jbe
push
outs
sar
push
mov
pop
push
les
rcr
mov
fstp
popa
xor
mov
mov
mov
xor
mov
pusha
jge
or
aam
inc
iret
jae
mov
mov
(bad)
and
xor
xor
cmp
pop
mov
sub
(bad)
xor
jnp
mov
(bad)
xchg
lahf
mov
cmp
jg
out
pmuludq
and
mov
inc
push
cmps
jmp
dec
push
jl
das
in
retf
daa
cmp
(bad)
jge
cmps
xor
push
es
int
cli
popf
sbb
jmp
ins
mul
mov
push
jmp
inc
dec
scas
pop
(bad)
inc
dec
dec
in
cmp
dec
ror
call
mov
int
adc
popf
push
sbb
outs
(bad)
cld
cmc
mov
out
jae
sbb
mov
pushf
addr16
fwait
test
(bad)
mov
bndstx
clc
cld
out
push
ja
jnp
(bad)
jmp
jae
xchg
sbb
(bad)
fsub
xlat
cmp
jmp
cmp
push
ds
nop
es
in
and
jo
sti
mov
jp
jnp
mov
inc
xlat
mov
pusha
and
sub
(bad)
les
repnz
std
jno
aas
push
inc
sar
mov
or
arpl
mov
clc
mov
cld
push
in
fdiv
popf
shr
pusha
std
dec
retf
sub
lods
dec
inc
jp
pop
ja
cld
pop
mov
pop
test
cld
sub
sbb
sub
les
imul
ins
fst
retf
or
sbb
inc
call
push
xor
fcmovnbe
lods
in
jae
iret
xchg
dec
dec
jl
es
adc
or
push
add
enter
mov
sbb
mov
(bad)
les
adc
pop
push
aaa
cmp
fcmovnb
adc
xchg
inc
jo
cmp
jmp
into
fadd
daa
mov
cmp
jl
push
pop
sbb
mov
or
xor
jnp
or
jae
int3
inc
push
std
neg
in
in
rcr
in
shr
mov
fs
lods
sub
lds
pop
ins
add
ret
mov
outs
(bad)
or
cld
mov
jns
sub
add
ss
cmps
inc
aas
or
inc
in
fmul
and
xor
add
bound
popa
mov
ds
call
xor
mov
retf
sub
push
fidiv
cwde
adc
mov
fcom
nop
lea
(bad)
xchg
cmp
xor
fwait
jo
sub
dec
lahf
int3
sbb
fsub
and
xchg
jmp
sbb
dec
sub
leave
shr
xor
inc
inc
inc
mov
out
push
rol
inc
xchg
pop
xchg
arpl
adc
(bad)
mov
pop
out
add
pop
aas
ja
dec
gs
movs
mov
sahf
inc
and
lods
mov
fild
stos
sbb
(bad)
xchg
cdq
rol
out
jle
or
mov
lahf
(bad)
mov
in
je
mov
outs
test
add
out
popa
aaa
xchg
mov
mov
std
enter
push
ins
sbb
aam
cmp
push
adc
and
add
lea
pushf
mov
dec
imul
add
sti
lods
jne
mov
jmp
mov
out
sbb
addr16
xchg
ss
cmps
fidiv
add
repnz
div
adc
cmp
cld
mov
push
mov
ss
or
test
dec
dec
hlt
sbb
cmps
pop
mov
fild
mov
lods
sub
sub
xor
xchg
push
sub
jnp
mov
gs
mov
in
cmps
cdq
push
sti
jns
xchg
adc
mov
push
mov
bound
arpl
and
dec
retf
mov
mov
pushf
xor
or
rcl
pop
push
push
int
mov
push
ret
ret
cs
xchg
ins
inc
and
jmp
mov
hlt
sbb
adc
mov
je
sbb
adc
and
in
cli
nop
mov
movs
pop
lock
mov
loope
daa
or
into
mov
loope
idiv
push
mov
lods
xchg
push
dec
retf
(bad)
daa
dec
mov
xchg
mov
xor
clc
cli
push
push
pop
iret
sbb
and
ss
jp
xor
pop
inc
rcr
push
push
fdiv
push
shr
dec
(bad)
pushf
ins
inc
out
mov
ja
jb
push
sub
std
sub
cmps
retf
or
xor
test
stc
(bad)
push
sub
loope
cmp
cmps
lock
stos
and
or
and
retf
cmp
popf
add
hlt
mov
sub
int3
push
and
icebp
cmc
cmp
jne
mov
jae
add
mov
mov
dec
pop
mov
repnz
push
out
push
neg
call
inc
inc
inc
lock
jmp
xor
jmp
mov
xor
pushf
out
loope
jo
mov
sbb
mov
cmps
add
push
push
add
jnp
test
popa
pop
sub
stc
sahf
inc
lahf
push
out
mov
lock
loope
(bad)
scas
movs
add
dec
adc
mov
aaa
movs
retf
test
call
fmul
out
rcr
addr16
push
jmp
mov
js
dec
sbb
xor
cmp
mov
mov
int
stc
xor
xor
sbb
in
rcl
and
sbb
adc
leave
icebp
xchg
ja
sub
inc
sbb
and
in
(bad)
cmp
in
mov
cmps
mov
push
loop
sub
push
repnz
xchg
data16
retf
int
push
lahf
ins
jns
jnp
cmp
pop
lods
pop
inc
fstp
out
cmp
ins
in
mov
xor
enter
fcomp
fst
aas
pop
jecxz
xchg
frstor
lods
es
adc
leave
sbb
sbb
loope
push
mov
cwde
ins
push
addr16
fcomip
lods
xchg
retf
sbb
push
js
cmp
push
pop
leave
mov
inc
cmp
test
(bad)
dec
jmp
xchg
jmp
add
cmps
or
push
sub
xchg
xchg
pop
sahf
stc
icebp
(bad)
popa
rcl
call
sub
mov
pop
inc
mov
(bad)
sbb
xchg
aam
push
dec
and
leave
and
(bad)
jmp
push
adc
popfw
imul
ins
dec
dec
scas
jg
mov
aam
scas
push
pop
js
mov
push
or
arpl
cmc
(bad)
ins
and
into
adc
mov
xor
cmc
(bad)
xor
div
imul
lods
pusha
shl
stos
pop
xchg
push
push
inc
jbe
adc
jne
pop
test
push
inc
(bad)
ins
ins
cs
or
sub
repz
xchg
cmp
jle
out
cmc
mov
sub
enter
sbb
mov
shl
shl
stc
xchg
rol
dec
fxch
fistp
(bad)
bound
xchg
xor
jae
mov
pushf
jne
mov
std
scas
xchg
and
push
sub
out
cli
in
repnz
or
mov
retf
out
mov
push
push
stos
jae
jle
imul
fmul
or
aas
inc
push
adc
push
jo
mov
xlat
outs
in
pop
pop
mov
mov
(bad)
scas
inc
ins
inc
pop
int
add
daa
inc
clc
dec
shl
ret
lea
les
push
daa
jb
out
jnp
pop
push
cli
mov
jecxz
test
sti
dec
mov
in
fild
lods
mov
mov
jne
dec
inc
cmp
rcr
ds
jle
or
pop
(bad)
fcos
lahf
mov
arpl
popf
xchg
clc
push
push
sub
pusha
idiv
xor
cmp
jecxz
mov
stos
jp
dec
(bad)
jl
in
jmp
xchg
pusha
std
shl
jmp
push
in
lock
retf
jp
add
gs
add
ins
addr16
mov
push
jne
in
repnz
mov
lods
mov
pop
aas
xchg
sbb
xchg
mov
div
mov
dec
xchg
neg
mov
cmp
enter
(bad)
jle
lahf
ret
jo
(bad)
icebp
fiadd
pop
and
mov
(bad)
fwait
lock
mov
sbb
(bad)
scas
xchg
lods
rol
stos
dec
xor
mov
aas
imul
adc
lods
mov
div
add
scas
xor
shr
les
and
add
jg
imul
cdq
ficom
push
mov
jle
call
int3
(bad)
(bad)
std
push
sbb
adc
les
cmp
in
lock
fs
js
cs
sub
xchg
fisubr
jmp
sub
cmp
mov
jmp
aas
push
mov
enter
inc
aaa
sub
add
(bad)
in
jge
xlat
pop
or
jl
mov
mov
out
daa
jns
fild
les
sbb
repnz
int
xchg
jmp
sbb
xor
dec
outs
loope
stc
ror
xor
mov
jo
push
mov
inc
lods
in
out
jo
in
xchg
les
xor
fistp
xchg
into
inc
xchg
and
mov
neg
cld
jne
cmps
sbb
iret
lods
mov
xchg
and
jmp
into
inc
sub
or
popf
mov
cmp
repnz
xor
sub
cdq
ret
xchg
push
lock
mov
cld
inc
sub
sub
add
adc
jbe
in
lds
es
aaa
clc
jl
mov
in
xchg
xchg
xor
loop
jo
out
movs
ret
icebp
sbb
mov
iret
test
lods
sti
out
pop
shr
sub
add
or
shl
shl
psubusw
fsub
dec
cwde
stos
mov
jmp
push
mov
dec
call
icebp
ins
xchg
push
jb
push
shl
(bad)
adc
dec
dec
out
jae
addr16
inc
call
bound
fsubrp
leave
push
and
fcom
inc
dec
jbe
sbb
in
mov
push
(bad)
pop
adc
mov
loop
pop
icebp
loopne
pop
imul
pop
into
cmp
mov
mov
out
or
jmp
or
lods
mov
clc
mov
mov
lods
lock
push
xchg
cmps
sub
inc
jmp
fs
mov
jp
(bad)
fwait
mov
in
mul
pop
fild
dec
fadd
lods
push
xor
fisub
sbb
test
mov
xchg
sbb
scas
out
adc
inc
inc
idiv
out
mov
inc
and
call
jg
fwait
cmp
push
or
or
inc
add
popa
pop
dec
sar
mov
(bad)
(bad)
jle
ret
xor
stos
push
sbb
dec
fnsave
(bad)
and
pop
cmps
ret
ja
mov
add
outs
popf
scas
push
jns
scas
addr16
repz
(bad)
jl
or
inc
shr
cdq
push
and
gs
xchg
ficom
je
arpl
int
movs
sbb
or
pop
fisttp
add
pushf
test
mov
inc
hlt
pop
test
inc
cmp
lock
cld
in
mov
cdq
xchg
push
xor
mov
mov
cld
xor
cs
ficomp
retf
dec
(bad)
int
fild
and
adc
adc
movs
push
jno
mov
nop
add
xchg
aaa
fs
sbb
fmul
adc
enter
arpl
gs
ss
mov
adc
push
jnp
cmp
imul
loope
movs
push
jmp
push
addr16
movs
call
cmp
sub
sar
fldcw
mov
push
sub
jne
mov
(bad)
fstp
or
cld
(bad)
movs
mov
outs
icebp
dec
sbb
mov
std
outs
jne
or
in
outs
sbb
mov
aam
mov
jmp
mov
xchg
test
movs
push
adc
stc
cld
xor
repnz
loop
(bad)
push
je
add
mov
lods
or
fdivr
arpl
clc
pop
outs
neg
mov
dec
push
sub
pop
and
sbb
iret
fs
fwait
call
in
(bad)
mov
test
sbb
push
cli
cmc
push
gs
or
sub
shl
and
xchg
jo
pop
push
mov
jmp
jmp
(bad)
adc
xor
add
fwait
test
pop
inc
sub
jle
std
pop
inc
outs
in
inc
clc
scas
dec
mov
mov
jmp
pop
inc
arpl
loope
xchg
(bad)
clc
pop
cmp
pop
and
sbb
bound
pop
dec
dec
mov
jb
cmp
sub
inc
xor
inc
repnz
popf
xchg
lds
xchg
iret
dec
(bad)
xor
ss
out
retf
adc
push
sub
mov
xor
mov
and
mov
sahf
adc
pop
mov
(bad)
call
sbb
rcl
aas
popf
push
inc
aam
std
sub
xor
xchg
retf
outs
cmp
mov
jle
push
icebp
scas
jns
xchg
or
iret
lods
mov
mov
popa
mov
or
stc
pop
aaa
test
add
shl
js
cmp
pop
push
fsubr
xor
loope
cld
push
retf
mov
ss
or
call
xadd
mov
(bad)
(bad)
cdq
cmp
in
(bad)
sub
xchg
daa
push
dec
push
dec
mov
or
stos
aam
mov
out
movups
out
pop
shl
out
imul
and
cwde
cmp
test
push
and
dec
adc
scas
jb
pop
daa
pusha
dec
dec
aad
jns
cmps
mov
jp
push
xor
jl
loop
jg
push
sbb
ficomp
int
cmc
push
push
lods
pop
or
jns
mov
add
rol
(bad)
pushf
or
sbb
mov
dec
inc
add
push
stos
das
adc
cwde
imul
add
je
mov
add
cmp
xchg
jge
mov
dec
ins
stc
(bad)
xchg
sbb
cmc
pop
cmp
jge
bound
mov
call
lods
ficom
das
test
and
xchg
inc
clc
sti
mov
pop
fnstsw
xchg
jne
or
mov
sbb
cmp
scas
jl
mov
pop
not
cmps
or
sbb
mov
lods
sub
ss
xchg
fs
sub
mov
sub
fs
and
or
push
or
jmp
pop
xor
push
jnp
cmp
xchg
jmp
test
int
push
stos
xor
enter
(bad)
sub
jbe
push
dec
ds
ja
jecxz
mov
(bad)
sbb
in
dec
into
xchg
imul
imul
(bad)
loop
rol
sti
xor
ds
cmp
jno
inc
stc
das
clc
pop
(bad)
pusha
or
mov
and
retf
not
jl
dec
jno
aaa
xor
xchg
stc
scas
mov
hlt
movs
loop
push
sar
ins
pop
js
retf
imul
push
shl
add
std
data16
mov
sub
pop
enter
cmp
lods
mov
push
leave
cld
fdivr
lahf
mov
mov
pop
mov
mov
inc
mul
not
ss
sahf
mov
cmp
jne
add
arpl
in
loope
jo
cld
push
push
adc
push
loop
cmp
fwait
rcl
test
pop
xchg
and
leave
mov
in
xchg
mov
int
xchg
adc
add
cmc
inc
push
or
jl
idiv
sub
test
arpl
lods
xchg
scas
ror
pop
jo
aas
push
sub
ret
jnp
push
adc
inc
adc
imul
iret
adc
fnstsw
xchg
icebp
or
jl
xchg
(bad)
bound
push
call
mov
pop
sub
outs
mov
loop
out
sbb
push
ins
cld
les
out
loop
cmp
out
and
test
cmp
push
add
mov
ins
lea
cli
call
call
das
stos
rcr
rcr
(bad)
mov
mov
sbb
out
sub
add
push
dec
in
and
in
mov
xchg
mov
or
jecxz
rcl
or
add
adc
cmps
fild
imul
pop
mov
push
mov
ret
mov
stos
in
fwait
jp
jo
add
je
xchg
cmp
add
lds
(bad)
cmp
aas
dec
repz
sub
mov
in
fs
push
cmp
xchg
iret
push
jmp
neg
es
sbb
ss
popa
outs
jmp
loope
or
test
add
pop
cdq
aam
push
stos
jno
daa
lods
jg
xchg
(bad)
pop
in
cdq
sub
push
loop
xlat
retf
mov
test
lods
mov
gs
test
add
cmp
pop
mov
fcom
mul
sub
jp
xchg
shl
xor
lock
or
inc
into
ror
les
movs
test
hlt
fmul
mov
and
xchg
sub
sti
cmps
imul
test
aaa
sub
ja
xchg
xchg
jbe
(bad)
add
fld
mov
outs
repz
in
loope
push
mov
icebp
cli
fcmove
or
pop
ins
sbb
xrelease
fucomp
pop
jb
and
xor
inc
add
and
xor
xchg
xor
xor
test
pushf
outs
push
frstor
sub
shr
jle
push
and
fwait
std
mov
mov
sub
repnz
add
jnp
aaa
les
inc
sar
jecxz
dec
xchg
je
(bad)
sub
cdq
pop
add
push
ror
test
sbb
ins
dec
cmp
cwde
mov
setbe
dec
pop
inc
(bad)
adc
(bad)
in
repnz
and
shr
mov
ja
jne
inc
(bad)
mov
test
dec
push
sbb
mov
xchg
scas
inc
loopne
rcr
jecxz
jbe
or
inc
fnstcw
mov
cli
sbb
push
jl
xchg
rcl
xor
adc
push
aam
xchg
mov
and
push
stc
scas
mov
loopne
pop
inc
mov
adc
mov
das
mov
xchg
ins
or
cs
pop
int
movs
outs
push
mov
sbb
sbb
xor
sub
dec
sbb
mov
and
add
or
push
xor
dec
ja
adc
les
mov
and
xor
mov
ss
or
adc
jmp
sbb
inc
push
aad
pop
add
xor
ffreep
mov
test
mov
sub
lods
mov
push
das
and
mov
xchg
push
pop
retf
sar
popa
xchg
mov
(bad)
sbb
mov
mov
xor
ror
cmovno
inc
js
mov
test
aam
push
fcomp
cmp
sbb
in
out
xchg
aam
dec
fsubp
or
aas
fnstsw
add
sbb
lahf
adc
push
lods
into
push
mov
adc
and
nop
dec
outs
test
push
adc
sbb
inc
jae
and
mov
fld
fsubr
add
add
jmp
adc
pop
in
cdq
pop
cmp
sbb
ins
(bad)
es
outs
sbb
(bad)
inc
sahf
cdq
clc
jnp
mov
mov
int
mov
mov
jne
ja
push
push
pop
dec
iret
(bad)
xchg
cs
mov
jne
fisubr
ret
mov
gs
lods
push
pop
test
mov
rol
(bad)
je
cmp
xor
retf
dec
inc
je
mov
mov
and
mov
xchg
sub
inc
push
aad
pop
sbb
push
mov
mov
xor
dec
sbb
daa
stos
xchg
ins
jae
cdq
mov
jl
sbb
add
jl
xchg
push
xor
into
dec
push
and
jae
jmp
ror
cmp
fdiv
clc
adc
lea
mov
rol
test
loope
inc
dec
repnz
push
stos
(bad)
dec
stos
movs
lock
dec
add
clc
fbstp
iret
pop
test
fcomp
push
iret
aas
push
neg
mov
cmps
push
inc
add
icebp
stos
mov
adc
aas
dec
arpl
ss
jmp
fild
std
test
rcl
jno
mov
push
push
outs
pop
mov
retf
invd
retf
stc
fist
sub
pop
dec
lea
inc
lods
mov
nop
ins
push
test
jns
jl
fnsave
hlt
add
inc
xor
mov
and
loope
stos
ins
xchg
aad
add
(bad)
imul
out
and
cmp
mov
pop
out
mov
cmp
aam
sub
mov
sbb
sti
or
sub
push
mov
inc
add
(bad)
fcom
push
add
jmp
shr
(bad)
(bad)
out
outs
fbstp
mov
push
mov
mov
into
mov
push
push
dec
int
jae
lahf
retf
aad
lock
jnp
fdivr
xor
xchg
arpl
jne
loopne
sar
fs
or
ins
xor
in
xchg
ins
xchg
dec
shl
add
pop
aam
mov
lods
xor
mov
les
and
push
out
lea
push
mov
aaa
jbe
mov
push
daa
in
int3
lea
sbb
call
mov
movs
sub
es
dec
mov
adc
mov
cmovp
test
adc
add
cwde
daa
adc
mov
xchg
pop
int
stc
ret
pop
aaa
mov
(bad)
dec
psubsw
das
iret
ret
dec
pop
les
or
into
out
mov
mov
push
or
and
cmp
add
jg
clc
ja
in
mov
mov
fld
(bad)
cmp
xlat
jbe
cmp
adc
jle
mov
outs
test
inc
pop
jecxz
lds
in
nop
xchg
das
sbb
sbb
mov
outs
dec
das
in
retf
pop
loopne
pop
pop
xchg
cmp
push
jae
cdq
push
pop
mov
xchg
mov
in
dec
out
dec
icebp
pusha
js
cwde
add
mov
dec
and
sub
xchg
mov
add
gs
and
retf
call
das
mov
fwait
xchg
fisubr
mov
add
sub
jmp
push
lock
push
pop
nop
jmp
out
sub
mov
std
outs
repz
adc
pushf
jno
into
inc
addr16
sahf
psubd
dec
loop
mov
ret
or
addr16
in
sahf
call
mov
aaa
cmp
and
dec
adc
aas
mov
mov
ins
inc
mov
addr16
mov
mov
imul
jb
popf
add
sbb
into
add
ins
std
inc
js
addr16
(bad)
fsubr
and
sbb
bound
cmc
push
push
ret
mov
mov
aam
mov
jae
pop
pop
pop
(bad)
in
into
pushf
in
or
call
xchg
push
fs
repz
bound
(bad)
in
cli
pop
or
pushf
rol
adc
adc
int3
out
pop
jae
cmps
sbb
adc
loop
leave
mov
lock
leave
mov
sbb
outs
add
push
clc
outs
stos
aaa
mov
pop
sub
cmp
sub
imul
jl
sub
cmps
int3
mov
add
addr16
sti
push
cmps
imul
mov
sub
xlat
sub
fld
ins
stc
loope
pop
push
add
dec
pop
jne
xor
fdiv
sub
lods
jo
cmp
or
push
retf
xor
test
pop
(bad)
inc
adc
dec
jae
inc
out
pop
movq
jle
push
push
mov
adc
pop
imul
inc
lds
retf
pop
inc
test
sahf
mov
mov
gs
les
lock
jae
inc
add
ins
outs
aam
(bad)
loopne
je
dec
movs
xor
push
or
dec
dec
mov
dec
mov
xor
neg
xchg
xchg
out
and
or
clc
pop
loopne
mov
jns
loope
xchg
imul
mov
mov
cmp
aam
or
cmp
push
pop
mov
popa
pop
repz
retf
adc
shr
je
cmp
leave
ror
jne
loopne
fcomp
mov
cwde
mov
nop
mov
xor
lds
sub
imul
in
jmp
jl
rcl
xchg
sbb
adc
xchg
shl
mov
push
mov
or
stos
add
push
mov
push
retf
xchg
push
mov
mov
cmp
shl
xlat
fucompp
lahf
mov
cmp
mov
lea
fcomp
pop
mov
jmp
adc
push
jmp
ss
mov
cmp
dec
and
sti
and
daa
add
adc
jle
push
fidivr
add
jae
push
outs
mul
mov
jge
out
or
in
mov
push
outs
add
mov
add
sbb
push
or
cmps
xchg
dec
jnp
je
push
xchg
outs
aam
mov
(bad)
push
or
sahf
cmp
mov
add
loop
jle
cmp
mov
paddusw
into
or
movs
dec
loope
jns
xor
xor
arpl
push
jmp
push
fdiv
ficom
dec
nop
jo
rol
cmps
dec
sbb
xlat
stos
sti
in
cmp
jmp
inc
lds
daa
mov
in
std
enter
data16
sub
xchg
imul
ins
(bad)
pop
loopne
or
ror
cmp
or
cmp
mov
psubusb
xchg
fs
imul
movs
jo
jnp
xchg
cmp
push
call
in
sahf
sahf
inc
mov
iret
sar
ins
dec
test
shl
sbb
aas
adc
sbb
xchg
pop
and
mov
jecxz
add
iret
not
dec
movs
out
inc
sbb
mov
adc
or
pop
test
jg
les
push
push
sbb
inc
out
mov
push
cmps
dec
ds
loop
jmp
xchg
cmp
inc
ret
or
loope
cmp
sub
ret
pop
movs
add
sbb
cmp
nop
or
mov
pop
shl
loopne
jmp
mov
mov
not
cmp
repz
inc
or
and
mov
unpcklps
push
dec
jg
imul
mov
push
daa
push
xchg
jmp
mov
aaa
sahf
loope
or
in
xchg
ror
sub
out
enter
jmp
add
and
pop
mov
jge
inc
ja
outs
push
mov
iret
imul
lea
dec
loope
xor
popf
out
lods
mov
repnz
mov
jbe
mov
pop
cmps
xlat
pop
sbb
fsubr
jle
fld
sbb
test
mov
scas
es
xchg
cs
mov
(bad)
inc
sbb
int
mov
(bad)
fiadd
cmp
adc
and
xor
mov
aam
daa
sbb
or
mul
(bad)
(bad)
fisubr
xchg
sub
cmps
fdiv
test
mov
dec
jmp
cs
or
pop
dec
add
jns
jmp
fldenv
and
in
cs
pop
daa
cdq
inc
push
call
pop
ins
jne
xchg
ja
cmp
and
popa
stc
jg
jmp
aad
mov
call
arpl
loope
dec
mov
pop
fs
sar
add
fsubp
mul
mov
dec
call
(bad)
cli
sub
cld
jle
mov
sbb
outs
cmps
add
jp
cwde
push
or
cli
push
jne
cmp
sti
ds
inc
pop
sub
lods
ss
push
cdq
ins
ja
out
push
cmp
mov
dec
and
hlt
mov
cmp
sbb
xchg
xor
push
inc
jg
xor
shrd
push
pop
xchg
or
inc
(bad)
dec
ja
outs
enter
adc
leave
inc
xor
inc
dec
imul
adc
xchg
retf
cwde
push
je
push
jge
and
cmp
ds
inc
inc
test
leave
lods
data16
imul
int
and
xlat
pop
push
xchg
mov
xchg
movs
pusha
push
imul
mov
push
cmp
test
fiadd
or
cs
aas
add
sbb
mov
xchg
xchg
cmps
jno
mov
cld
imul
ror
mov
ja
clc
sub
cmc
mov
push
pop
push
ins
jg
and
jne
les
xor
cmp
cmps
sub
jp
sub
pop
and
fisubr
push
ja
push
std
jl
jge
push
mov
js
mov
fistp
imul
sub
out
cmp
pop
and
popf
dec
jecxz
int
push
push
pop
jge
or
xchg
sbb
mov
push
cmp
mov
jmp
mov
pusha
pop
sbb
and
add
ret
or
push
dec
imul
dec
fstp
cmp
jbe
and
test
dec
or
adc
fmul
pop
xchg
fild
and
push
mov
aaa
jbe
or
xchg
and
xlat
jbe
lock
leave
ror
push
imul
xor
lds
xor
push
sub
retf
ins
mov
or
mov
push
repz
mov
arpl
sub
mov
pop
cmp
mov
sbb
ficomp
in
cli
fisubr
lea
xchg
push
ins
inc
xor
outs
mov
sub
xchg
jae
jl
pop
sub
inc
fld
lea
pop
xchg
or
(bad)
dec
shl
add
imul
cmp
xchg
sub
or
and
mov
jecxz
iret
jmp
pop
shl
inc
mov
das
(bad)
push
add
sbb
push
mov
cs
lods
jmp
js
push
sbb
shl
scas
ins
xchg
mov
inc
lock
popa
cdq
inc
mov
mov
sbb
fdiv
jne
push
test
hlt
ss
mov
movs
push
shl
neg
xor
aad
sbb
(bad)
outs
das
ja
push
sti
or
cld
je
jo
xchg
repz
mov
cdq
fimul
imul
mov
xor
fiadd
outs
test
(bad)
jl
in
into
ins
outs
imul
add
std
dec
xor
xor
ins
(bad)
mov
mov
inc
js
add
pop
pop
outs
jb
dec
mov
lahf
nop
in
loopne
inc
dec
das
mov
push
xor
cmp
cmp
lds
lock
add
je
xor
sub
xchg
shl
and
test
push
jmp
or
in
add
add
cmp
add
sub
mov
push
shr
repnz
dec
aas
pusha
cmp
pop
(bad)
jmp
jecxz
pop
sub
xlat
add
and
or
fs
popa
push
xor
jnp
(bad)
and
cs
jg
jmp
fwait
mov
pushf
mov
xchg
lods
(bad)
jmp
xor
push
iret
sahf
or
sbb
jns
xchg
sbb
pop
fisttp
hlt
js
ins
sahf
jl
imul
(bad)
lods
add
cmp
cmc
push
std
xlat
cmp
imul
mov
jbe
js
ds
imul
mov
pop
std
add
outs
jmp
sub
in
mov
mov
adc
xchg
dec
mov
out
cmp
mov
or
loope
enter
loopne
mov
rcr
sub
add
cli
scas
fist
jp
lods
sbb
outs
pop
add
xor
jbe
cmp
fcomp
shr
retf
inc
jo
xchg
cmp
mov
loope
ss
mov
movq
imul
sbb
jmp
movs
in
dec
add
std
scas
test
mov
loop
sub
cld
(bad)
retf
add
ja
and
aaa
loopne
mov
push
cmps
bound
lods
pop
ins
arpl
sahf
(bad)
mov
cmp
hlt
fistp
rcr
ret
retf
sub
xor
sub
push
test
or
inc
popa
out
test
ds
sbb
arpl
add
aam
push
mov
aad
cmp
dec
fld
jp
fadd
fdiv
test
dec
adc
loopne
je
int3
les
bound
push
xchg
aas
out
add
test
xor
jmp
into
lods
icebp
xlat
sub
xor
jo
mov
icebp
lock
(bad)
(bad)
jmp
dec
pop
and
loope
jnp
les
(bad)
mov
movs
mov
repnz
repnz
ins
xor
lods
dec
pop
dec
add
repnz
add
mov
lea
in
sub
pop
cmc
bound
jle
add
cli
mov
cmp
xchg
and
jmp
add
xor
sbb
xchg
clc
stc
adc
sbb
xor
(bad)
sbb
popa
mov
add
pop
adc
shr
xchg
cmp
pop
pop
jmp
push
rcl
add
mov
sbb
(bad)
fisttp
shl
add
(bad)
pop
mov
popf
or
aad
addr16
push
pop
and
jle
pop
daa
movs
cmp
int
das
xor
mov
inc
out
push
hlt
and
push
sub
mov
inc
mov
retf
sbb
mov
pop
test
dec
jmp
jnp
aad
pop
push
mov
add
imul
(bad)
popf
(bad)
xchg
add
push
jg
aas
clc
imul
and
dec
lock
push
jno
cli
retf
jne
fld
pop
shr
dec
and
and
test
sub
imul
fstp
mov
and
(bad)
xor
cmp
jne
and
fwait
mov
stos
or
mov
aas
imul
leave
jno
add
aaa
and
add
push
dec
call
(bad)
pop
add
adc
push
ror
adc
pop
mov
mov
push
jecxz
pusha
lea
(bad)
addr16
neg
loopne
jl
js
xor
nop
jo
jns
and
jne
xchg
push
fwait
ins
sub
or
cmp
sar
pop
jns
mov
cmps
sub
lods
outs
xor
dec
push
movs
mul
adc
fnstcw
jmp
out
ret
in
and
push
sbb
xchg
cmp
cwde
rcr
cmps
add
add
mov
and
retf
add
xchg
fs
inc
sub
shl
cmp
sub
imul
movs
jmp
fidivr
xchg
sbb
test
xor
ror
ins
mov
div
cmps
adc
mov
or
sbb
pushf
xor
retf
jns
outs
xlat
cdq
jne
lods
add
adc
cmps
(bad)
mov
aad
mov
push
inc
loop
mov
adc
xlat
mov
clc
and
sub
jnp
add
cmp
lahf
mov
dec
pop
dec
mov
push
ins
lahf
mov
mov
or
adc
cmps
adc
mov
xchg
sbb
push
psubq
popf
mov
loopne
jb
dec
(bad)
retf
ins
inc
adc
push
dec
pop
(bad)
mov
xchg
inc
mov
les
cmp
sbb
jmp
ins
faddp
mov
adc
stos
add
cmp
mov
into
mov
sub
inc
pop
in
in
test
adc
cli
or
cmp
mov
or
adc
test
int3
cmps
mov
xchg
pop
inc
or
mov
(bad)
(bad)
cmp
pop
sub
fs
in
into
mov
scas
dec
adc
scas
(bad)
stc
pop
jg
sub
xchg
loopne
ja
mov
outs
clc
sub
retf
adc
test
(bad)
loope
sahf
adc
ins
dec
adc
inc
xor
pop
jmp
ds
fcom
sbb
fnstsw
fstp
xchg
or
jnp
jb
(bad)
inc
shr
xor
(bad)
pushf
in
fstp
mov
(bad)
aad
jmp
mov
and
not
aad
inc
or
in
ret
ror
add
(bad)
cmp
nop
nop
lahf
add
and
mov
or
pusha
mov
dec
push
(bad)
les
adc
xor
or
sti
ins
jmp
adc
jecxz
jg
sahf
inc
in
and
enter
and
and
out
or
call
push
xor
pop
jecxz
push
(bad)
inc
pop
lahf
xchg
(bad)
jb
call
nop
mov
add
xor
fdiv
stos
adc
scas
repz
dec
daa
mov
mov
mov
push
mul
mov
or
cmp
cmp
add
(bad)
(bad)
jp
jbe
repnz
push
sub
cmp
shr
lea
sub
mov
cs
mov
pushf
mov
dec
std
stc
sbb
arpl
test
popa
push
(bad)
xor
dec
mov
xchg
or
or
xchg
cmp
test
mov
lods
mov
dec
aad
push
ret
mov
and
pop
call
stos
or
test
xchg
dec
(bad)
test
sub
not
xor
dec
mov
xchg
sub
or
sbb
jmp
inc
das
rcr
cs
inc
cmp
js
sar
dec
scas
jmp
jmp
pushf
mov
mov
les
imul
inc
fs
fild
in
xchg
out
imul
cwde
aaa
or
push
lds
lods
mov
lahf
pushf
lea
dec
cwde
and
rol
es
fimul
loopne
dec
cmp
cmps
cmp
test
sub
jg
sub
shr
xchg
mov
dec
add
mov
sub
push
fcomp
or
retfw
pushf
out
sbb
push
into
xchg
ja
mov
enter
fs
pop
out
dec
repnz
or
jmp
mov
daa
cmp
mov
or
iret
stos
cmp
adc
ins
(bad)
neg
bound
and
cmps
(bad)
push
lds
lods
sbb
mov
dec
push
xchg
mov
imul
loope
bound
ja
push
jge
add
arpl
adc
pop
jno
cli
jo
sbb
jge
add
xchg
dec
mov
mov
jmp
adc
cmp
or
hlt
loop
push
dec
cwde
push
sub
xor
and
pushf
push
xchg
cmp
dec
(bad)
dec
dec
test
int
xchg
and
adc
inc
stos
mov
inc
ret
mov
enter
sub
stos
mov
lea
inc
sub
jne
jo
mov
ret
popa
sbb
mov
or
xchg
adc
mov
shl
sbb
adc
lods
punpckhdq
push
hlt
and
outs
seta
mov
enterw
into
lock
push
(bad)
out
add
jp
ror
mov
ins
mov
xor
sbb
in
repz
and
daa
jle
push
and
int3
sar
sbb
jmp
add
push
mov
cmp
dec
repz
push
ret
ror
and
mov
and
(bad)
mov
ffree
dec
pop
mov
xchg
push
(bad)
std
xchg
es
xor
jne
mov
mov
daa
retf
adc
(bad)
push
enter
mov
cwde
cdq
mov
loop
call
arpl
fstp
cwde
dec
pop
pop
movs
jl
std
or
jnp
aad
icebp
lock
mov
fs
xchg
std
inc
ins
pushf
repz
jmp
mov
mov
loope
dec
stos
cmp
std
adc
pop
inc
cs
cmp
jne
rcr
cdq
or
test
pop
jb
lea
mov
stos
pop
xlat
inc
push
addr16
lahf
int3
lods
sbb
mov
enter
adc
hlt
out
shl
(bad)
mov
jmp
gs
xor
push
or
inc
(bad)
push
es
push
gs
push
aam
add
or
dec
sub
hlt
xchg
cli
mov
(bad)
push
dec
jbe
aaa
mov
imul
(bad)
dec
and
outs
jp
sbb
pop
sti
pop
retf
xor
(bad)
aas
or
xor
rol
dec
rcl
fadd
popa
bound
inc
inc
imul
fsub
jecxz
cmp
ds
(bad)
pop
inc
mul
sti
fimul
cmc
xchg
inc
xor
test
loopne
sub
repz
lods
mov
dec
dec
inc
in
jmp
dec
out
cmp
jne
lock
loopne
loopne
xchg
call
push
sub
cdq
mov
mov
lods
shr
cmp
jnp
jne
cmp
jg
add
in
pushf
inc
neg
adc
int3
jmp
pop
mov
ret
test
add
sub
dec
dec
out
sub
stos
loop
pop
ins
mov
jecxz
(bad)
and
cmp
aaa
fucomip
adc
mov
push
jecxz
data16
lds
sub
ds
stos
xor
sbb
pushf
loope
test
shl
retf
lods
int3
hlt
push
xor
jecxz
xor
inc
ins
leave
lds
(bad)
mov
fs
cmp
push
mov
mov
in
ss
mov
cdq
clc
imul
pop
add
das
addr16
scas
fmul
loope
jae
sub
pushf
xor
pop
adc
xor
sbb
pusha
shl
add
jmp
sbb
pop
test
data16
adc
pop
inc
ins
cmc
pop
cld
aaa
pop
cwde
xor
xchg
lds
cdq
cmp
or
shld
movs
xchg
mov
jge
ins
sbb
das
loop
stos
popa
mov
xchg
adc
and
je
popa
or
xor
add
mov
sahf
cld
sbb
inc
lea
mov
retf
dec
adc
sub
xchg
mov
lds
ds
fs
fimul
cmc
mov
push
pop
outs
dec
and
xor
sbb
lea
fbld
xor
cs
xchg
inc
mov
pop
xchg
out
sub
fs
iret
mov
mov
shl
mov
xchg
adc
aam
xor
jecxz
std
lds
in
jbe
xor
mov
js
adc
fld
aas
sbb
(bad)
adc
out
inc
cmp
daa
xor
cmps
cmp
mov
mov
mov
sub
int
adc
jmp
fst
pushf
out
cmps
add
adc
fstp
fsub
add
jmp
fcom
push
sbb
in
mov
mov
int
jge
mov
int3
pop
or
adc
imul
loop
rol
cmps
add
add
add
sti
shl
inc
mov
mov
xchg
xchg
in
lahf
and
adc
sbb
loop
idiv
xor
mov
sub
bound
(bad)
into
cmps
xchg
daa
stos
jp
or
adc
and
xor
mov
imul
in
retf
sbb
sbb
jmp
lock
sbb
adc
(bad)
mov
and
jl
push
aas
or
retf
shr
out
jp
jo
fild
sbb
ret
xchg
inc
pop
add
movs
add
lds
retf
jmp
pop
jmp
aas
xchg
mov
mov
mov
in
loope
mov
xor
aaa
repz
aas
adc
push
cmp
dec
gs
les
xlat
sahf
ret
rcl
scas
sub
fwait
out
dec
(bad)
ins
or
push
adc
loop
add
mov
sbb
mov
out
shl
mov
dec
(bad)
ins
or
gs
sbb
cmp
fistp
sub
sub
pop
mov
(bad)
scas
cmps
cmp
mov
jecxz
cmp
je
stc
jecxz
jecxz
shrd
cmp
jnp
test
mov
inc
mov
(bad)
jb
pusha
mov
xor
pop
sub
enter
pop
and
ins
repnz
ds
lock
repz
pop
xor
scas
ja
leave
mov
and
push
and
push
imul
aad
fst
dec
dec
clc
mov
lahf
popa
sbb
mov
xchg
ret
popw
add
or
mov
movs
dec
jmp
push
pop
cmp
xchg
dec
mov
daa
int3
out
xchg
ret
pop
dec
push
mov
and
xchg
popa
inc
dec
adc
adc
fadd
mov
xchg
mov
out
call
mov
jns
fwait
pop
shr
sub
add
leave
inc
and
adc
data16
jp
nop
stc
popa
sti
mov
and
fldenv
fldenv
mov
cmp
and
enter
call
cmp
xchg
pop
add
scas
pop
idiv
and
adc
adc
loopne
std
mov
mov
sub
lea
fwait
or
mov
jge
das
hlt
sti
mov
outs
jbe
lahf
add
movs
cs
or
mov
inc
pop
cmc
dec
in
push
xchg
cmps
stos
(bad)
push
scas
cmp
push
int
fwait
sti
(bad)
das
(bad)
shl
push
enter
outs
repnz
repnz
std
jno
fstp
xor
add
cmp
xchg
icebp
ret
push
lods
js
neg
push
scas
add
retf
mov
dec
jae
in
and
popa
mov
ror
mov
mov
shl
inc
dec
push
push
and
add
mov
cmp
dec
mov
iret
lock
int3
adc
push
jl
imul
jle
lea
(bad)
ja
adc
out
inc
pop
mov
mul
jnp
add
jbe
sahf
or
jg
xor
test
xor
and
fstp
or
loope
and
fistp
or
pop
and
or
inc
and
fcom
rol
add
mov
mov
pop
cmp
aam
push
enter
loopne
(bad)
in
mov
add
cdq
sbb
sub
test
out
push
in
icebp
retf
add
rcr
mov
outs
jns
les
push
sbb
push
fldcw
mov
pop
cmp
addr16
jb
lea
call
inc
aam
cmps
cmp
mov
out
(bad)
mov
sahf
jno
pop
inc
(bad)
and
fmul
mov
sbb
sub
push
nop
aas
sub
pop
fstp
ins
mov
(bad)
(bad)
icebp
jae
xchg
mov
arpl
sti
sub
(bad)
push
dec
sub
push
int3
popa
icebp
ret
dec
push
xor
fdivr
dec
sbb
or
mov
push
mov
mov
nop
std
repz
push
aas
dec
inc
mov
shl
push
adc
int3
add
retf
js
inc
jge
or
movs
xor
jmp
mov
or
jnp
call
xchg
imul
push
or
inc
xor
gs
test
sbb
push
adc
sbb
pop
ret
dec
into
xchg
inc
cmp
add
imul
and
xor
test
and
mov
rcl
push
dec
cmp
jg
(bad)
jne
dec
mov
mov
or
pop
mov
pop
test
add
sar
js
leave
pop
hlt
fwait
int
ss
lahf
xchg
xchg
sti
mov
dec
xlat
mov
gs
xor
mov
popf
test
mov
mov
xor
cmp
jmp
adc
lea
mov
je
push
cmp
sbb
dec
test
sub
mov
stos
dec
stos
test
aad
lock
pushf
pop
or
push
nop
mov
pop
cmp
scas
xor
pop
je
xchg
mov
ins
test
popa
call
shl
or
ins
(bad)
call
adc
mov
sar
pop
inc
retf
cmovne
pop
ds
mov
cdq
jmp
not
push
movs
js
push
das
fisub
sahf
dec
cmps
mov
call
xchg
push
or
fst
mov
or
aad
es
pop
and
adc
and
push
add
dec
rcr
imul
lods
add
jno
xor
cmps
ret
in
lods
mov
push
adc
lods
mov
lock
mov
jb
mov
mov
mov
jo
mov
fwait
push
mov
movs
dec
mov
xchg
jl
sub
lea
inc
inc
or
xor
les
add
mov
call
idiv
adc
iret
sbb
bound
(bad)
mov
fwait
dec
fdiv
pop
and
and
adc
mov
jo
pop
and
mov
ins
jp
out
int3
jecxz
push
push
call
xchg
cmp
cmp
fisubr
pop
pusha
cmps
scas
add
in
sub
jbe
pop
dec
push
sbb
dec
fst
xchg
jmp
and
push
mov
inc
fdiv
ins
push
push
mov
dec
lea
leave
push
retf
dec
mov
pop
or
gs
xchg
lods
mov
popf
pop
(bad)
pop
xchg
inc
inc
mov
pop
test
cli
jns
xchg
iretw
retf
or
jno
mov
stos
xor
jp
xor
ficomp
inc
int3
les
in
dec
aaa
pushf
lods
cmc
popf
xor
cwde
mov
in
jecxz
dec
mov
push
adc
inc
xchg
and
rol
(bad)
pop
jno
call
mov
into
mov
pop
mov
cmp
rcr
pop
mov
dec
mov
sub
lahf
mov
(bad)
ja
mov
bound
popa
dec
icebp
aas
sbb
retf
xor
aam
inc
sbb
popa
in
out
(bad)
sub
pop
js
push
dec
loope
xor
dec
sbb
add
xor
jo
jno
sub
cmc
mov
and
push
cwde
jnp
adc
iret
mov
mov
jle
call
sar
push
mov
mov
out
pop
mov
inc
outs
xabort
sub
push
jns
push
lock
adc
int
sbb
inc
inc
cwde
push
inc
leave
add
into
push
std
dec
out
mov
mov
sub
pop
xchg
and
sub
mov
mov
clc
adc
pop
cmp
sbb
enter
fidivr
je
je
fsubr
xor
daa
jg
fbstp
push
sbb
pushf
scas
test
retf
mov
ror
inc
idiv
mul
call
pop
imul
aaa
push
daa
inc
or
pop
push
int3
addr16
repz
daa
or
lods
test
jbe
pop
pop
jne
and
dec
call
movs
gs
xor
bound
jbe
sbb
push
pop
inc
pushf
jge
mov
push
cld
mov
ja
into
pushf
popf
jae
lahf
cmp
imul
add
sbb
push
aam
ins
scas
push
pop
stos
push
mov
mov
mov
lock
sahf
mov
ins
cli
xor
rol
and
imul
xchg
imul
rcl
iret
jg
aaa
fild
out
cli
and
in
nop
xchg
xor
xor
daa
pop
scas
shl
mov
inc
jmp
sub
add
cmp
arpl
into
outs
jmp
les
hlt
(bad)
lds
fiadd
adc
repz
outs
cmps
lods
or
out
popf
rcl
aaa
push
stos
cwde
mov
leave
pop
mov
out
arpl
(bad)
imul
or
cmp
push
shr
xor
dec
int
lods
clc
cli
and
xor
ss
cmp
rol
adc
loop
in
inc
adc
push
sub
popf
nop
xor
jge
shr
ret
jmp
call
clc
xor
int3
loope
push
and
not
pop
add
shl
repnz
ja
lds
icebp
and
sub
clc
cmps
sbb
out
mov
mov
adc
out
or
sti
inc
pop
and
fidivr
stos
jb
lock
adc
outs
sbb
mov
mov
xlat
(bad)
xchg
fisttp
call
and
data16
movs
enter
sbb
mov
pop
push
aas
push
scas
fwait
sbb
iret
inc
in
(bad)
xchg
pop
push
loopne
adc
in
jo
pop
sub
inc
mov
int
call
test
or
add
pushf
inc
mov
mov
inc
(bad)
pop
mov
imul
jno
mov
idiv
cld
mov
aaa
sbb
add
dec
cmp
and
adc
add
dec
pop
mov
(bad)
sti
(bad)
push
imul
pushf
ins
call
movs
or
rcpps
inc
inc
(bad)
out
push
xor
int
mul
mov
ds
retf
iret
mov
add
call
lods
out
push
fsub
mov
test
mov
fbld
push
imul
push
xor
xor
xor
jg
ins
aas
xchg
loopne
and
cmp
bound
and
add
outs
push
pop
std
(bad)
fsub
ret
scas
xchg
and
iret
lahf
fld
and
aad
ja
jae
add
mov
inc
dec
xchg
dec
add
cmp
add
data16
pop
ror
dec
imul
xlat
jbe
dec
mov
lds
sub
inc
mov
aam
or
pop
pop
adc
xchg
jnp
popf
rol
jmp
je
ins
sub
and
mov
adc
add
shl
xchg
jg
jp
pop
popa
(bad)
dec
mov
cwde
int
sbb
fs
in
mov
and
popf
int3
ins
imul
cdq
xor
pop
mov
enter
push
add
retf
adc
jl
mov
outs
test
mov
xchg
xor
add
or
dec
push
pushf
sub
lock
adc
push
mov
out
je
shl
mul
jno
repnz
dec
sahf
test
mov
nop
push
adc
mov
inc
xchg
movs
cld
sbb
and
mul
hlt
pop
inc
xlat
push
leave
mov
in
lods
inc
inc
js
scas
jb
dec
fst
add
aaa
cmp
cmp
push
dec
aam
dec
ss
in
stc
call
sbb
sub
arpl
mov
cmp
xor
mov
sub
jno
hlt
mov
adc
inc
xor
or
call
push
popa
adc
jl
lock
push
pop
int3
(bad)
aad
cld
(bad)
repz
stos
(bad)
xor
jl
inc
retf
enter
fdivr
push
js
inc
stos
xor
jne
fst
xchg
pop
xchg
popa
cwde
add
rol
jae
out
xor
xchg
das
fwait
cmp
dec
mov
xchg
cmp
fstp
cmp
push
add
(bad)
stc
ins
(bad)
(bad)
xchg
pop
mov
inc
sub
xor
push
addr16
leave
outs
js
outs
fadd
int
jns
add
xchg
mov
push
jg
(bad)
cmp
imul
sbb
js
fld
in
addr16
mov
pop
mov
pop
stos
sub
call
ret
pop
imul
mov
fnstsw
(bad)
adc
call
mov
xor
out
test
cmp
pop
sbb
mov
call
retf
cmp
outs
add
cs
dec
adc
lock
lock
push
ja
inc
adc
ds
scas
jns
jbe
sub
lods
jl
rol
xor
inc
xchg
pushf
inc
jg
or
fbld
inc
inc
call
xor
rol
jnp
jle
pop
pop
jmp
lods
adc
mov
ror
sub
push
cmps
push
mov
jecxz
call
call
xor
int
neg
neg
cmp
inc
add
pop
cli
nop
idiv
je
leave
push
mov
rol
mov
je
fadd
mov
enter
test
outs
int
outs
hlt
mov
cmc
xchg
pop
push
add
dec
fsub
xchg
adc
mov
lahf
ins
sti
or
or
xchg
out
fidiv
push
pop
shr
fsubp
push
inc
fwait
pop
jae
fdiv
add
in
stc
retf
xor
addr16
stos
cld
xor
dec
mov
in
adc
or
retf
sbb
pop
dec
mov
lahf
jg
jecxz
stos
push
push
inc
sub
out
retf
jl
push
pop
ss
xor
out
dec
shr
ret
sbb
sub
retf
arpl
ins
mov
lock
out
mov
mov
clc
inc
daa
repnz
add
inc
pop
cmp
(bad)
stos
stos
pushf
sbb
in
jae
jb
popa
das
int3
jmp
call
ins
mov
sti
pop
mov
inc
and
or
in
out
pop
add
or
std
mov
push
mov
mov
rol
fdiv
push
sti
sub
sbb
sahf
pop
fsub
jne
jecxz
test
xor
jecxz
and
xchg
dec
fwait
popf
jl
outs
jae
icebp
aad
call
sbb
adc
cdq
inc
mov
stos
dec
or
pop
in
mov
stc
rep
adc
retf
mov
jno
or
or
mov
pop
sub
sub
mov
cvttps2pi
shl
sti
inc
ss
dec
pop
(bad)
mov
push
or
leave
add
cs
clc
inc
mov
ja
xor
mov
popa
sub
mov
stos
fdiv
clc
mov
pop
fsubr
les
ffree
jnp
fsubr
outs
les
data16
arpl
mov
pop
add
adc
and
mov
adc
xchg
mov
or
fiadd
lock
cs
xlat
cmp
cmps
dec
mov
nop
mov
cwde
adc
xor
lahf
sub
mov
pop
fistp
xor
xchg
lea
repz
push
mov
out
add
repz
stos
bswap
icebp
fld
and
rcr
mov
sub
nop
call
sbb
retf
inc
add
cwde
aas
jle
jne
mov
popa
mov
xchg
icebp
sbb
push
je
lock
dec
adc
xchg
scas
add
lock
(bad)
daa
or
gs
jge
bound
ins
push
push
ja
mov
adc
jl
or
leave
cwde
shl
dec
and
inc
cmp
leave
jmp
mov
xor
ds
inc
fistp
in
pop
mov
lahf
mov
xlat
mov
sub
push
jbe
mov
pop
mov
imul
into
xchg
fldenv
dec
pushf
(bad)
outs
jo
and
test
movs
idiv
mov
dec
dec
mov
fwait
clc
ror
pop
and
aas
xor
pop
mov
xchg
or
fcmove
xor
inc
les
ror
scas
xchg
inc
jmp
inc
or
(bad)
fmul
ror
xor
sub
jg
xchg
sub
adc
out
sbb
out
jecxz
jnp
and
fiadd
(bad)
push
or
pop
mov
jmp
adc
daa
xor
fcom
mov
movhps
inc
test
js
push
jge
enter
pop
sbb
adc
inc
push
or
int3
imul
mov
in
xchg
outs
push
jg
repz
pop
cmp
jmp
pop
in
and
adc
(bad)
js
push
enter
lock
ficom
call
pop
mov
or
pusha
pusha
imul
cmp
add
jae
mov
xor
push
adc
into
sbb
lahf
es
push
fsub
sar
das
push
mov
fistp
frstor
ss
scas
std
ftst
loopne
mov
out
sub
or
stos
inc
retf
fcomip
(bad)
xor
or
pop
xchg
mov
lock
loopne
je
lods
xor
sub
adc
popa
(bad)
test
sar
outs
cmp
sub
imul
xchg
sub
inc
fsubr
pop
sub
jmp
pop
push
dec
pop
cmp
mov
sub
push
sub
enter
shl
push
mov
mov
arpl
push
in
sbb
aad
loope
in
lea
aam
adc
mov
mov
popf
mov
jle
(bad)
bound
fnsave
(bad)
(bad)
jno
or
mov
xor
aaa
push
or
push
and
xor
pop
call
jp
enter
push
xchg
pop
inc
sbb
mov
xor
cmp
pop
outs
fwait
jmp
mov
or
mov
mov
lahf
dec
stos
sti
ins
stos
div
dec
sub
xchg
(bad)
sub
dec
push
inc
mov
xor
aas
add
mov
dec
sbb
popf
push
retf
(bad)
xchg
xor
jecxz
popf
addr16
xchg
aam
xchg
jnp
ror
imul
or
call
movs
dec
imul
mov
push
repz
jp
jns
or
mov
cmp
aaa
imul
xchg
or
xchg
mov
mov
in
lds
and
and
jne
mov
mov
ret
(bad)
adc
inc
or
and
mov
mov
and
add
shl
inc
xor
dec
into
lods
into
iret
pusha
dec
aas
add
mov
add
mov
mov
pop
ret
pop
mov
mov
test
(bad)
fcom
(bad)
imul
jb
xchg
mov
or
adc
and
ins
mov
cmp
adc
aas
mov
jle
mov
and
rcl
pop
lods
push
cdq
daa
jnp
pop
cmps
jle
mov
das
and
or
mov
call
mov
xor
aaa
cli
(bad)
mov
mov
sbb
jmp
cmp
shl
mov
cmp
aaa
int3
mov
mov
push
repz
xor
dec
les
mov
stc
ret
inc
(bad)
mov
movs
cdq
fcmovne
setnp
xor
mov
loopne
test
enter
inc
xor
pop
addr16
cmps
movs
popf
popa
push
outs
mov
xor
loop
push
mov
dec
cmp
test
sbb
sbb
push
in
dec
push
stos
cmp
push
or
pop
stc
jb
cwde
aam
and
cmc
inc
mov
and
jmp
sbb
and
std
imul
aaa
cwde
sub
mov
jmp
mov
dec
test
iret
mov
in
jne
xchg
addr16
cwde
aas
in
pop
push
repnz
or
fs
rcl
rcr
in
push
shl
push
aas
cld
addr16
into
test
outs
ret
jo
cli
mov
inc
arpl
jb
aad
jnp
pop
pop
div
cmp
fs
fs
adc
lock
pop
test
(bad)
je
sar
out
aaa
std
or
mov
leave
rcl
mov
dec
jo
adc
pop
fsub
xor
je
mov
inc
jae
xchg
add
xchg
dec
cmps
push
int3
adc
push
ds
test
icebp
lds
inc
and
mov
lds
enter
mov
xor
add
cmp
jo
int
lahf
jnp
loope
leave
add
cs
lahf
xchg
jle
adc
std
xor
int3
inc
inc
popa
inc
and
mov
daa
sub
loope
jno
outs
inc
add
pop
pop
call
dec
mov
mov
jmp
ja
or
jl
sar
fld
(bad)
jbe
adc
mov
push
push
jle
add
jmp
rcl
ds
arpl
outs
jae
mov
imul
cmps
inc
jle
pop
loopne
dec
sub
int3
mov
fcomi
in
test
pop
adc
jae
mov
addr16
fstp
mov
pop
out
shl
add
and
push
sub
mov
cmps
jle
cmp
into
dec
daa
push
mov
iret
repz
imul
add
cmps
fdiv
mov
pop
rcr
cld
sbb
lods
daa
cmc
das
add
cmps
xchg
sbb
outs
je
addr16
in
xor
stc
inc
or
fild
mov
xchg
pop
mov
daa
mov
jmp
movhlps
xchg
xlat
fucom
adc
(bad)
shl
fsubr
dec
mov
pop
mov
mov
cmp
fsubr
cmc
sbb
jg
sahf
mov
mov
sbb
pop
fidivr
imul
movs
sub
and
pop
jmp
cwde
and
adc
pop
dec
jnp
and
or
inc
movs
jae
stos
mov
fild
(bad)
std
fist
jmp
mov
mov
mov
ss
loope
mov
sub
leave
fisttp
int
pusha
lock
xchg
push
adc
popa
and
movs
adc
pcmpgtw
pop
mov
popf
sbb
nop
mov
fisub
mov
retf
pop
mov
mov
imul
sub
movnti
lea
adc
fsubr
movs
push
push
stos
ret
mov
dec
mov
call
idiv
inc
aaa
test
frstor
cli
mov
out
cdq
iret
adc
add
popa
aaa
push
jmp
sbb
or
dec
mov
jnp
pop
pop
pop
xchg
xor
adc
fucomip
mov
jbe
or
mov
frstor
jne
pop
jns
or
push
jb
sar
mov
xchg
push
sub
xor
pop
cwde
out
(bad)
(bad)
sub
(bad)
pop
int3
dec
cmp
out
js
jmp
cmp
loop
xchg
mov
sbb
iret
add
cwde
in
xchg
jge
(bad)
xchg
xchg
xor
xchg
test
sar
lea
movs
outs
sub
dec
inc
lock
add
(bad)
stc
xor
retf
xor
mov
sub
and
push
or
loopne
sub
adc
mov
sti
push
out
scas
xor
mov
push
inc
test
sbb
mov
je
test
fs
shl
popa
mov
mov
test
jns
pop
push
xlat
jl
inc
pop
dec
cmc
mov
repnz
ja
mov
out
popa
not
xchg
dec
inc
mov
mov
xor
dec
mov
icebp
gs
mov
cdq
xchg
retf
sub
stos
lea
cld
(bad)
mov
mov
cmp
pop
inc
fsub
out
push
movs
stc
fmul
mov
push
fisttp
in
mov
lods
repz
aam
aas
idiv
scas
or
pusha
das
imul
pusha
mov
cs
mov
outs
retf
jno
mov
jo
hlt
repnz
adc
js
movs
or
mov
jmp
mov
nop
xchg
dec
adc
stc
jp
jg
gs
call
imul
push
sbb
(bad)
movs
fwait
xor
movs
push
inc
mov
add
imul
cmps
xor
jnp
stos
jbe
mov
mov
lods
loopne
test
es
ss
das
mov
add
scas
nop
loop
xchg
data16
ret
lahf
jmp
or
outs
nop
sbb
xchg
repnz
jae
movs
add
push
sbb
in
jno
dec
arpl
push
push
(bad)
push
rol
lds
test
leave
cwde
test
cwde
out
dec
jl
fdivr
jmp
call
mov
cmp
lods
call
dec
inc
(bad)
retf
std
rep
fnstsw
pushf
cwde
int
ret
sbb
popf
and
gs
mov
pop
inc
out
pop
mov
and
shl
ins
sbb
in
(bad)
int
and
sbb
pop
std
mov
lea
jo
stos
xor
push
aaa
shr
mov
jmp
cmp
cmps
push
adc
mov
push
pop
retf
dec
and
mov
inc
movs
adc
adc
dec
add
(bad)
pop
enter
jno
mov
jne
clc
ret
add
sti
mov
xor
stc
adc
or
push
loope
dec
fadd
sub
pop
mov
add
or
cmps
lods
xor
shr
cli
es
(bad)
push
ret
imul
mov
and
mov
(bad)
mov
pop
mov
repz
and
mov
cld
adc
xor
add
push
sbb
sub
pop
imul
pop
and
lods
add
int3
fwait
mov
push
sub
in
mov
mov
xor
lds
sub
cmp
and
fist
and
jle
inc
mov
ins
cli
leave
or
test
outs
adc
add
lods
ss
(bad)
sub
lock
mov
test
cli
(bad)
adc
dec
mov
mov
xor
or
mov
jnp
aas
pop
mov
loope
add
push
cmp
or
and
loop
shr
cli
lahf
xchg
dec
mov
aas
jb
jl
movs
xchg
xor
add
popa
push
push
cld
std
icebp
movs
or
inc
lds
push
or
adc
mov
pop
mov
add
ret
scas
pusha
fs
inc
xchg
addr16
xor
push
test
mov
push
shl
sub
rcl
(bad)
mov
add
test
leave
cmps
in
sbb
cmp
sub
fmul
sahf
dec
das
mov
ds
xor
jmp
jb
mov
idiv
xchg
sub
imul
lods
ret
dec
div
mov
jle
daa
cdq
mov
inc
or
and
add
jb
pop
daa
sahf
xchg
cmc
in
cs
sub
cmp
jecxz
pop
or
dec
adc
fisttp
arpl
sbb
sub
xchg
loopne
cld
cmp
scas
and
pop
(bad)
mov
(bad)
(bad)
loope
cmps
call
mov
fisttp
addr16
(bad)
lods
push
jo
pop
xlat
pop
fidiv
xchg
push
or
(bad)
or
mov
jmp
fdiv
imul
or
xor
sti
xchg
std
bound
dec
repz
out
frstor
jmp
and
fist
cwde
mov
jb
rol
xchg
imul
retf
cmp
out
fwait
in
retf
into
adc
stc
mov
les
mov
je
imul
xor
inc
or
cli
xor
and
adc
xor
hlt
and
int
push
inc
stos
xchg
jno
shr
adc
push
push
mov
neg
test
inc
xor
adc
test
pop
and
jle
movs
out
jo
jg
and
adc
dec
and
ss
or
bound
sbb
push
push
aad
mov
sub
test
imul
push
xchg
jb
inc
test
and
push
movs
int3
adc
sbb
adc
cmc
sbb
out
xchg
mov
sti
jno
ins
stc
(bad)
pop
les
in
add
jecxz
cmp
inc
(bad)
stos
aam
pop
pop
outs
pcmpgtb
push
inc
in
dec
mov
js
add
lock
cmp
call
enter
adc
pop
sub
xchg
push
push
sub
cmp
sti
movs
mov
(bad)
add
sbb
jbe
add
rol
fs
cmp
(bad)
lahf
sbb
addr16
xchg
popa
or
mov
mov
vaddss
cmc
fwait
jmp
lock
sub
rcl
sahf
cmp
xor
mov
mov
imul
mov
push
dec
cdq
(bad)
icebp
adc
xor
pop
push
(bad)
pop
and
lahf
cmps
sbb
shr
cs
retf
xor
inc
outs
imul
cdq
push
adc
adc
or
stos
jmp
rcr
add
iret
int
add
xchg
sbb
and
cwde
fwait
rcr
cld
mov
test
and
lahf
pusha
xor
addr16
outs
xchg
pop
add
jl
jg
xor
push
jo
jne
scas
(bad)
mov
in
push
ret
jo
push
data16
xchg
dec
and
fnsave
lods
add
jge
ret
jb
push
(bad)
cmps
push
sub
icebp
mov
(bad)
fidiv
aas
ret
loope
pop
ds
pop
mov
popa
ds
cli
mov
ret
stos
sbb
sti
adc
adc
sbb
fcom
cmp
pop
jb
sub
or
mov
das
sub
(bad)
cmp
ss
in
shl
fdivr
sub
xor
(bad)
dec
add
pop
out
outs
mov
inc
adc
ins
or
pop
out
mov
inc
lods
or
mov
cmp
push
jg
repz
aad
fild
add
xchg
jecxz
fisttp
shl
lock
call
mov
xor
push
mov
inc
add
clc
out
inc
fld
push
jno
cmc
add
fisubr
mov
clc
fs
lea
scas
popa
test
in
(bad)
xchg
aaa
xor
mov
xchg
test
sub
or
ror
sbb
call
and
stc
aas
enter
popf
push
sbb
js
outs
jp
inc
es
sub
mov
fwait
out
ins
mov
retf
retf
pop
inc
pop
xchg
jo
test
push
sahf
adc
cmps
or
xchg
xor
jne
mov
arpl
xchg
and
cmp
(bad)
and
loope
pop
fdivr
mov
pop
add
sub
movs
sub
inc
mov
popa
xchg
pop
out
dec
jo
jo
sbb
pop
cmp
ds
icebp
ret
dec
std
inc
sub
ja
xor
sbb
jmp
jg
cmp
aam
adc
fldenv
ins
cmp
add
pop
jmp
jbe
loop
cli
fst
jnp
cmps
mov
int3
iret
xchg
sbb
mov
inc
sbb
loopne
pop
dec
jne
loopne
push
cld
xor
jecxz
ret
pusha
fidiv
jecxz
xchg
sbb
mov
xor
iret
jns
sbb
cmc
or
pop
cmp
push
sub
inc
nop
xchg
(bad)
(bad)
cli
cmc
or
ds
mov
sbb
push
sub
pop
imul
push
ror
push
mov
and
mov
sbb
int3
cmp
in
mov
pop
cmc
push
jle
mov
xlat
mov
je
icebp
pushf
cmc
mov
aaa
je
sbb
dec
repnz
push
jmp
adc
lods
and
std
ror
daa
push
jp
call
jno
push
clc
mov
sbb
test
outs
push
ror
imul
or
cld
pop
call
hlt
sbb
adc
mov
xchg
retf
test
jmp
repnz
jmp
ror
cli
push
jl
add
loopne
jp
cmp
(bad)
cmp
jmp
arpl
pop
aaa
popf
or
and
mov
ins
mov
shl
mov
lods
arpl
cmp
jle
mov
jo
rol
sbb
pop
cmps
mov
into
mov
push
cmp
mov
lea
ret
test
fdivr
les
fidivr
jno
mov
xchg
(bad)
push
jo
push
pop
call
dec
stc
test
cmp
(bad)
cmp
mov
inc
push
xchg
mov
ror
sub
xor
in
ss
ss
pop
(bad)
fistp
xlat
or
add
jle
sub
dec
jge
pop
add
sbb
fsub
cmp
pop
ins
fstp
fwait
es
je
push
push
lahf
outs
jp
test
push
sbb
out
cli
out
mov
pop
push
out
outs
fisttp
out
out
data16
test
mov
sub
es
sbb
fisubr
mov
dec
sbb
mov
sub
cmp
adc
(bad)
stc
and
xchg
push
jge
mov
jmp
dec
push
or
adc
scas
dec
push
pop
js
jno
out
fmul
jl
scas
xor
jbe
xchg
mov
pop
rcr
out
iret
cmps
xchg
inc
pop
maskmovq
div
or
mov
sbb
add
pop
push
fs
iret
sub
iret
push
ret
dec
repz
(bad)
hlt
jl
jle
loope
dec
inc
sbb
loop
outs
push
and
sbb
sahf
mov
jg
repz
mov
es
mov
in
add
xor
mov
pushf
test
lods
cmp
jmp
dec
addr16
add
aas
jmp
shl
les
sub
pusha
fstp
out
cmp
pusha
sti
sar
pop
jo
jnp
adc
test
push
in
jge
xor
cmps
leave
ja
sub
sbb
cmp
or
in
jmp
in
mov
out
stos
pop
cmp
xor
fdivr
mov
(bad)
push
rcl
movs
(bad)
aad
cmp
cld
or
gs
(bad)
repz
sbb
sbb
ins
jle
pop
mov
fild
sahf
or
push
mov
and
push
and
xor
jmp
in
sub
repnz
cdq
add
sub
dec
inc
in
cmp
xchg
mov
(bad)
adc
xlat
push
pop
clc
mov
mov
or
repz
mov
rol
ret
cwde
addr16
inc
push
dec
lock
mov
fidivr
fidivr
aam
loop
cmp
ins
test
enter
retf
sbb
fwait
push
mov
cld
xchg
rcr
dec
repnz
mov
jbe
or
push
and
mov
and
imul
je
in
call
push
movs
or
xchg
popa
int
adc
xlat
push
push
into
mov
or
(bad)
sbb
jns
inc
out
xor
clc
mov
sub
sub
pop
xchg
out
dec
arpl
test
and
les
mov
sar
sub
mov
(bad)
sub
add
neg
mov
fnsave
mov
(bad)
cmp
jecxz
jbe
retf
pop
out
jmp
in
test
lods
test
dec
mov
push
jge
fs
jl
aam
call
push
enter
cmp
pop
xor
jecxz
pop
adc
pushf
jns
or
fdiv
imul
dec
int
and
cmc
adc
outs
lods
sub
sbb
ret
inc
push
pcmpeqb
xor
cmps
retf
fdivr
add
test
jo
jb
scas
ss
retf
inc
mov
jo
mov
daa
inc
push
call
rdmsr
enter
sbb
addr16
mov
pop
stos
test
imul
je
enter
leave
pop
retf
inc
hlt
fcmovne
out
outs
lahf
(bad)
mov
(bad)
cmp
ds
push
shr
mov
jg
iret
int
fcom
dec
mov
and
sbb
push
div
shr
jne
or
mov
add
fs
mov
shl
mov
xchg
mov
push
clc
mov
push
fcom
sub
out
pop
mov
cs
mov
push
mov
cmp
adc
push
movs
(bad)
(bad)
std
inc
lods
ret
lock
das
xchg
xlat
xor
or
icebp
aas
pusha
xor
pop
adc
mov
mov
neg
stos
adc
ins
ds
and
xchg
leave
(bad)
mov
lods
or
mov
gs
mov
add
shl
scas
sub
hlt
xor
xchg
shr
cmp
xor
sbb
mov
ja
push
jp
ins
lds
and
or
daa
retf
mov
xor
in
loopne
and
jmp
xor
daa
lock
mov
add
mov
rcr
imul
jns
sub
sbb
call
dec
inc
inc
repnz
aam
xor
xchg
fdiv
xchg
inc
or
imul
sbb
je
loope
cmc
jge
(bad)
adc
in
push
sub
or
jmp
cmp
cmps
and
mov
sbb
(bad)
jo
mov
mov
outs
jmp
das
ret
sub
adc
lahf
and
ins
mov
fidivr
cmp
xchg
imul
and
je
inc
dec
mov
cmp
adc
mov
shl
xor
cmp
rcl
aam
pop
cmc
xchg
mov
xor
mov
fld
pop
repnz
mov
jae
add
iret
fs
clc
out
mov
dec
addr16
cli
and
ds
pop
arpl
sub
xchg
(bad)
mov
mov
test
ins
out
mov
out
pop
cmp
or
pop
jbe
imul
and
fist
jle
das
loopne
xchg
ins
test
test
es
mov
jp
and
cwde
les
jmp
or
in
jmp
in
mov
jo
sar
ret
lea
fistp
and
mov
mov
test
leave
pop
mov
retf
push
or
push
int3
pop
mov
sub
ret
inc
test
pop
dec
inc
(bad)
gs
dec
and
retf
int3
cwde
jmp
jmp
mov
cmp
mov
sti
push
add
sub
(bad)
mov
mov
mov
adc
mov
pushf
jg
out
ss
dec
xchg
sub
loopne
xchg
push
push
inc
or
or
sub
jg
int3
movs
fcomp
push
ret
mov
pop
mov
xchg
bound
stos
aad
mov
cs
sbb
mov
xor
(bad)
mov
addr16
pop
cli
bound
add
(bad)
(bad)
(bad)
in
repnz
popf
ins
ss
enter
loope
cmp
pop
in
fsubr
add
pop
rol
xlat
cld
outs
sbb
mov
push
std
std
int
pop
test
pop
dec
xor
add
xor
mov
mov
pop
add
ret
(bad)
dec
mov
adc
push
and
dec
in
pop
cmp
call
mov
adc
mov
sbb
push
(bad)
jno
test
jg
pop
nop
cmp
and
mov
mov
test
inc
xchg
mov
shl
test
add
arpl
shr
or
xlat
fisub
into
lea
fistp
mov
call
lods
loop
in
xchg
std
jbe
mov
jmp
cdq
repz
(bad)
inc
in
xchg
and
sbb
dec
or
mov
ds
(bad)
adc
int
dec
outs
pop
sub
jmp
lea
in
push
(bad)
or
stc
cmp
pop
lods
int
mov
xlat
loopne
jns
xor
jg
sub
sub
and
aad
dec
shr
out
or
clc
dec
pop
sub
or
aad
inc
and
or
sbb
fwait
xchg
inc
or
sbb
mov
mov
xor
mov
mov
retf
dec
inc
test
call
(bad)
sub
xchg
pop
and
xchg
in
test
pop
cmp
cmc
cmp
ror
gs
xor
mov
aaa
int3
inc
push
push
sub
movs
sar
rol
push
push
in
fcmovu
pop
dec
adc
pop
aas
mov
fist
fiadd
call
add
sub
rcr
add
xchg
fs
hlt
fst
hlt
cs
mov
sahf
or
call
test
repz
add
mov
push
sub
fwait
je
rcl
dec
js
add
fcom
repnz
xor
fwait
push
push
inc
pushf
mov
not
lock
aad
xchg
pop
test
jle
push
fwait
popf
sbb
fs
cwde
push
lods
adc
cmp
push
and
retf
xor
gs
nop
fmul
lods
rol
sub
push
add
sar
sub
cmp
inc
jge
ror
cmp
cmp
ja
adc
pop
call
jge
mov
or
and
addr16
arpl
xor
xchg
pop
inc
jo
inc
or
sbb
mov
mov
bound
adc
imul
cli
(bad)
stos
and
inc
sti
push
(bad)
pushf
out
in
pushf
push
xlat
xor
cmp
jns
xchg
arpl
mov
push
and
pushf
lods
push
sub
dec
call
scas
cmp
mov
sbb
cwde
and
retf
mov
or
aam
stos
mov
sar
push
push
sub
nop
(bad)
in
repnz
es
call
push
mov
pop
push
in
fisubr
push
mov
jg
jg
xor
and
shr
mov
pop
(bad)
pop
mov
(bad)
pop
mov
xlat
mov
xchg
out
pop
lods
sub
jmp
and
pop
and
mov
mov
outs
ds
push
and
daa
rol
das
stos
movs
inc
bound
pop
jne
jge
dec
mov
stos
cmp
sbb
cmp
rcl
popa
inc
je
aas
popa
cmp
xor
ds
bound
out
push
repnz
pusha
push
mov
loopne
xchg
pop
out
cli
push
js
mov
call
pusha
mov
enter
ja
add
dec
and
add
push
mov
js
inc
inc
fcmovbe
push
shl
dec
xchg
les
sub
push
pop
push
or
inc
pop
mov
pop
inc
repz
sub
add
and
inc
shl
lods
mov
mov
jle
(bad)
fbstp
pushf
cmps
pop
rep
mov
or
pop
mov
shl
sbb
je
aam
push
sub
fidiv
mov
fist
adc
ss
cmp
int
mov
or
outs
inc
(bad)
cmps
fcmovu
add
pop
movs
mov
loopne
fild
imul
pop
out
cmp
inc
fwait
dec
or
adc
(bad)
jge
dec
pusha
stc
scas
stos
ds
fiadd
pop
mov
mul
shl
mov
fbld
lock
pop
mov
repz
add
rcl
sbb
xchg
xlat
retf
or
mov
int3
cwde
xor
pop
xchg
cmps
mov
sub
cmps
cmps
push
xchg
fld
add
enter
pop
(bad)
jmp
fcmovbe
xlat
sub
int3
add
lock
mov
or
dec
fnstsw
sbb
shl
mov
fs
stos
push
sbb
mov
inc
pop
xor
sub
mov
adc
imul
jns
mov
mov
ss
jg
xchg
fs
retf
scas
aaa
hlt
sbb
ss
xchg
sub
aas
(bad)
enter
or
pop
jmp
or
jg
dec
aas
sub
cmp
lock
pop
fs
(bad)
fiadd
sub
(bad)
into
call
ret
and
neg
data16
jmp
inc
lods
jo
into
xchg
test
jae
and
cmp
push
test
stos
mov
clc
(bad)
imul
sub
(bad)
or
ret
int
or
sub
push
mov
add
jae
mov
hlt
cmc
sar
cmp
ret
arpl
sar
pop
pop
or
cmp
data16
inc
test
mov
and
mov
jg
iret
cwde
push
push
test
in
dec
ret
inc
cli
dec
cli
cwde
adc
clc
int3
cli
pushf
(bad)
out
(bad)
fist
inc
sbb
pop
mov
jne
push
(bad)
pop
lahf
(bad)
adc
pop
stos
nop
mov
xor
scas
pop
imul
aad
mov
dec
into
cmp
nop
dec
scas
popf
and
push
mov
repz
ja
push
mov
mov
push
sub
mov
idiv
push
sbb
bound
cs
pushf
push
cs
push
mov
mov
fmulp
pop
stos
mov
sti
shl
rcr
sub
dec
stos
gs
or
pop
jmp
xchg
ret
lods
or
cmovae
xor
push
sub
jno
lds
pop
inc
pop
sub
jl
xchg
ja
scas
cmps
(bad)
(bad)
es
sub
gs
or
(bad)
daa
mov
cmps
movs
mov
test
xchg
mov
out
push
jnp
(bad)
fs
push
xlat
inc
push
push
popf
pop
jb
in
pop
sub
ins
fs
leave
int
jmp
or
add
int3
dec
call
jb
inc
jo
push
pop
xlat
cmps
stos
cdq
xchg
or
sub
mov
test
es
ds
xchg
(bad)
xchg
xor
es
xor
jbe
push
movs
test
int3
adc
cmp
xlat
cmp
pop
ins
cmp
daa
sahf
jnp
and
push
stos
out
cmps
jb
jbe
call
adc
xchg
or
jne
mov
repz
or
imul
mov
pop
add
jge
stos
aam
(bad)
inc
xchg
fs
sbb
xor
inc
imul
xchg
lea
xor
dec
fist
jge
fwait
xchg
cmps
aad
popf
add
jno
sti
(bad)
loope
inc
(bad)
and
lds
and
dec
adc
fdivr
cmp
sbb
test
mov
ja
dec
(bad)
in
adc
ficomp
(bad)
loopne
cmp
add
mov
jmp
repz
mov
xchg
sub
dec
cmc
jb
fwait
popf
inc
ins
popf
or
xchg
push
pop
cmp
std
pop
adc
test
sub
ins
rcr
jge
sub
sbb
sbb
jne
iret
sahf
fisttp
push
lea
mov
pop
pusha
(bad)
pop
cmp
mov
scas
dec
sahf
arpl
jl
lahf
cmp
shl
xchg
or
adc
jbe
stc
in
mov
iret
lds
(bad)
ds
call
scas
arpl
pop
jnp
pop
xor
mov
xlat
clc
test
je
bound
sbb
and
nop
pushf
mov
or
mov
and
mov
jmp
jecxz
sub
imul
ins
push
inc
popa
and
add
jb
pop
add
popf
jecxz
add
pop
pop
test
mov
xchg
stos
nop
mov
and
imul
mov
test
retf
jp
je
sar
pop
pop
push
enter
sub
adc
imul
hlt
pusha
loop
dec
ins
rcl
leave
lods
push
mov
jecxz
mov
adc
shl
bound
dec
inc
js
in
mov
or
and
in
sahf
sub
(bad)
push
fsubr
xchg
test
xor
cld
xchg
push
mov
inc
stos
aad
(bad)
bound
xlat
mov
cmp
push
pop
and
sbb
xchg
adc
pop
pop
push
jb
mov
lea
lea
repnz
(bad)
pinsrw
xchg
pop
xor
jle
fistp
pop
jne
push
out
loopne
or
cs
outs
mov
pop
jne
sbb
fdivr
outs
bound
xchg
div
jmp
retf
out
lods
cld
cmp
out
jo
mov
and
push
mov
mov
mov
icebp
out
sub
and
push
xor
pop
ror
dec
pushf
and
out
jbe
sbb
outs
std
and
jl
mov
aam
sbb
xor
out
inc
rol
dec
adc
xchg
jae
sbb
enter
cmp
sar
cs
pop
jg
adc
pop
xor
mov
xor
sar
jge
mov
fcom
inc
ret
dec
mov
cmp
popf
sbb
cmp
mov
bound
fs
cmp
xor
clc
or
pop
xchg
jl
les
or
sub
pop
test
fdivr
outs
cld
cmp
movs
fmul
mov
pop
(bad)
in
jae
jl
pusha
scas
aad
daa
cmp
(bad)
sbb
fcom
mov
jae
or
inc
sbb
cdq
aam
sub
and
push
loopne
sub
mov
in
das
mov
and
jle
movs
stc
dec
sbb
hlt
std
test
jp
pop
sbb
jae
xchg
aam
aas
pusha
aam
xchg
adc
out
fcom
movs
jbe
loope
mov
idiv
push
push
je
xchg
aaa
push
jno
enter
and
and
xor
xchg
push
sbb
int3
mov
cmp
std
cld
dec
ret
pop
mov
inc
adc
enter
push
ja
imul
and
repnz
loopne
lods
sbb
add
adc
jns
dec
xchg
cmps
mov
mov
imul
leave
(bad)
jmp
stos
aas
rol
pop
clc
push
enter
enter
int3
cdq
repz
jns
xor
stos
inc
lods
mov
adc
mov
sar
mov
cmp
shl
mov
mov
scas
sub
add
retf
xchg
mov
out
scas
lock
cmp
adc
add
push
(bad)
std
pop
xchg
pop
dec
xchg
cmp
add
mov
ret
mov
inc
sahf
xchg
mov
fcomp
and
jne
cmp
mov
pop
test
imul
pop
cmp
inc
jmp
test
jle
cmp
or
repz
xchg
leave
jmp
and
jno
xlat
not
sbb
cld
sub
sbb
scas
sub
mov
cmp
std
mov
or
cmp
mov
inc
sar
inc
js
out
movs
ficomp
(bad)
mov
adc
sub
xor
ror
popf
jb
dec
pop
ja
jns
mov
push
outs
popf
retf
add
gs
sbb
xor
push
sbb
push
shl
clc
out
les
push
dec
inc
fsub
xchg
addr16
es
jae
mov
nop
mov
pushf
add
leave
sbb
call
or
inc
inc
push
xor
lds
add
lods
jno
sub
sub
out
xchg
rcr
in
into
call
loop
sar
dec
pop
push
loopne
loopne
dec
and
push
xor
aad
fstp
xlat
outs
or
jo
mov
sbb
push
in
lea
push
sbb
rol
cdq
push
clc
call
loop
cmps
lock
xor
and
mov
out
bound
in
sbb
ds
in
push
(bad)
les
call
and
and
xchg
stos
jbe
mov
(bad)
sahf
inc
(bad)
aaa
in
ja
std
ins
jmp
push
cmp
push
and
scas
sub
(bad)
(bad)
sti
into
in
ss
outs
imul
ror
leave
stos
repz
loope
fild
cmps
cmp
and
mov
sbb
ds
push
cli
lahf
call
das
imul
je
cmp
lods
adc
dec
pop
mov
(bad)
adc
sub
add
out
jmp
out
retf
retf
mov
fiadd
push
sub
std
sbb
add
cmp
sub
test
in
inc
push
and
and
fisttp
ss
ja
and
test
out
call
mov
cld
and
xor
mov
ret
adc
movs
mov
int
cmp
fsubr
fs
mov
cmps
test
mov
in
jle
dec
fdiv
mov
ja
ss
inc
call
xchg
mov
xor
mov
ret
scas
jmp
push
push
xchg
je
fstp
pop
jo
test
sbb
popf
dec
in
pop
push
(bad)
dec
loopne
(bad)
cmp
jge
dec
(bad)
fbstp
push
out
(bad)
pushf
int3
jae
xor
mov
sbb
xor
adc
jg
push
push
inc
mov
dec
je
rcr
and
sbb
popa
xchg
sbb
(bad)
mov
dec
ins
xchg
(bad)
push
lods
leave
addr16
rcr
ins
xchg
cmp
aas
xchg
arpl
mov
mov
setge
push
push
add
pop
xchg
outs
jmp
(bad)
xor
test
sub
stos
jp
scas
imul
dec
add
mov
xor
ja
rcr
rol
cmps
fnstcw
sti
xor
push
mov
add
jp
xor
push
add
leave
ins
inc
and
mov
and
pop
jnp
imul
cmp
xor
push
sbb
hlt
out
scas
imul
pop
repnz
sbb
sbb
or
dec
jns
sub
cmps
pop
cmp
mov
int3
xchg
sbb
xchg
mov
dec
sub
pop
jo
mov
xor
fyl2xp1
xor
mov
fdivr
lds
scas
push
stc
pop
jge
dec
push
fmul
push
xor
bound
sub
jbe
xor
add
mov
inc
and
gs
mov
mov
sbb
push
cs
mov
data16
push
das
xchg
mov
jb
add
repz
iret
data16
adc
cmp
dec
pop
out
cmp
jle
or
mov
clc
lahf
es
push
lea
stc
sub
mov
mov
sub
or
sub
test
loope
push
jecxz
pop
fidiv
popf
inc
ficom
xchg
dec
lods
dec
mov
pop
dec
out
push
jg
adc
scas
dec
loop
retf
pop
test
or
not
std
jo
hlt
jo
pop
iret
push
pcmpeqw
xchg
push
push
xchg
mov
or
add
xor
add
(bad)
jb
xchg
xchg
adc
fsub
mov
mov
mov
add
ja
aam
pop
clc
neg
push
ja
mov
dec
pop
lahf
jb
jmp
mov
dec
or
popf
mov
cli
or
dec
jns
out
jnp
sbb
inc
(bad)
icebp
loope
push
push
mov
test
pop
adc
mov
inc
inc
pop
xor
fcomp
sub
hlt
shl
fisubr
push
sbb
hlt
jnp
xor
jns
movs
arpl
div
jp
(bad)
fadd
sub
lea
shl
call
sbb
pop
mov
jns
mov
mov
cmp
and
push
inc
push
mov
cmp
std
adc
dec
addr16
push
fsubr
sub
test
push
xchg
jmp
je
fnstsw
pop
add
popa
cmp
jl
jno
xchg
out
prefetchwt1
es
xchg
jnp
aaa
xor
cdq
mov
xchg
adc
mov
xchg
inc
cli
pop
mov
in
int
fs
mov
imul
push
xchg
inc
mov
push
mov
cmps
inc
add
lods
std
call
mov
push
cld
lahf
out
fisub
xchg
(bad)
test
out
sar
lods
int
imul
(bad)
shl
cs
sub
popf
push
out
inc
cmp
enter
dec
jg
cli
or
xor
mov
jg
and
stc
hlt
cmp
sbb
sahf
add
push
pop
mov
lock
dec
jae
pop
or
add
shr
mov
and
test
and
mov
sub
mov
call
dec
aam
loope
(bad)
das
mov
cmc
icebp
loope
loope
ds
cdq
push
mov
pop
(bad)
jg
fisubr
jmp
cmp
clc
(bad)
rcl
fucompp
lods
lods
xchg
aas
push
cmp
xchg
or
adc
mov
mov
jecxz
shr
movs
call
loopne
fs
xchg
mov
cwde
mov
sub
in
sbb
mov
or
aam
adc
sub
pop
dec
pop
and
les
fnstsw
and
ins
out
sub
iret
push
rol
mov
ret
fwait
lea
fdiv
sub
int
dec
cmps
lock
xchg
cmps
sbb
call
push
xor
shl
cmp
add
xor
sbb
lahf
cld
stos
push
mov
dec
rcl
stos
mov
data16
arpl
dec
mov
shl
sar
adc
ret
pop
adc
jne
inc
test
popa
fidiv
add
push
jbe
in
cmp
lds
fnstsw
cmps
repz
cmps
cmp
jne
jmp
add
fisubr
sub
neg
outs
sti
ud1
test
adc
adc
cld
leave
arpl
dec
inc
fcom
mov
mov
mov
dec
inc
mov
call
(bad)
pushf
fadd
mov
dec
loopne
push
mov
jle
push
jecxz
std
mov
lahf
mov
call
adc
add
adc
push
and
aam
mov
in
cmp
sub
or
icebp
and
nop
in
add
lock
mov
stc
pop
out
and
lahf
sbb
sub
mov
retf
scas
repnz
std
jmp
repz
inc
pop
test
xor
push
into
movs
cli
and
pop
mov
or
stos
jl
int3
inc
push
cmp
adc
mov
mov
mov
shl
out
movs
mov
mov
retf
jmp
push
in
das
xor
in
rol
pop
mov
or
adc
xchg
adc
sub
dec
add
cmc
pop
shl
add
inc
dec
arpl
rol
lods
dec
mov
pop
inc
cli
xchg
inc
cdq
jmp
fimul
adc
adc
adc
pop
lock
call
mov
xchg
cs
popa
jnp
fld
add
(bad)
sbb
dec
loope
inc
popa
fiadd
sub
(bad)
jge
test
nop
add
mov
gs
aas
aas
mov
mov
ja
cs
pop
sbb
es
xor
sbb
rol
and
je
add
mov
in
dec
fwait
xor
push
add
xlat
ss
inc
mov
sub
jne
xor
not
adc
or
jae
out
sbb
push
mov
(bad)
in
(bad)
mov
pushf
leave
add
push
test
xor
stc
sbb
fldenv
cmp
mov
data16
and
xchg
pminsw
mov
mov
cmps
out
xlat
xor
jae
xchg
xchg
push
not
xor
cdq
mov
sar
test
xchg
(bad)
push
jno
js
fisub
xchg
pusha
adc
or
jo
enter
push
scas
inc
push
lods
xor
cmps
sbb
cmp
sti
test
inc
jnp
shr
push
push
mov
jo
sub
shl
cmp
int3
and
mov
xor
imul
mov
ror
ror
mov
or
push
or
ret
bound
cwde
pop
mov
adc
mov
add
hlt
adc
add
movs
repnz
mov
mov
jno
mov
and
aam
pop
ins
cmp
rcl
push
push
cmp
out
mov
loop
push
push
push
test
xor
xchg
js
bound
fs
shr
adc
aad
enter
cmc
fldcw
xor
xchg
or
pop
push
cmp
jo
mov
xor
mov
mov
ds
mov
jbe
push
sar
out
jbe
loop
mov
in
fbstp
rcr
test
rcr
mov
shr
mov
and
and
out
jae
dec
addr16
adc
pop
and
movs
hlt
fmul
mov
movs
adc
aam
std
inc
cmc
mov
sub
stos
mov
sbb
icebp
jo
(bad)
pop
retf
adc
jns
or
nop
lock
in
sbb
adc
add
dec
fsubr
outs
or
xor
invd
mov
mov
cmp
jge
inc
mov
xchg
pop
inc
imul
dec
(bad)
addr16
xchg
or
xchg
scas
cmc
out
pop
push
push
jmp
jmp
cdq
iret
dec
cmp
mov
movs
cld
ret
cmp
cmp
jnp
sbb
(bad)
push
sub
mov
pop
add
nop
loopne
and
rcl
jne
jnp
pop
retf
call
test
adc
or
mov
je
pop
shl
clc
push
fs
ins
pop
(bad)
sbb
in
pop
data16
add
neg
std
xor
mov
push
test
aam
(bad)
int3
push
mov
aam
jmp
dec
scas
test
push
mov
aam
cdq
inc
sub
or
jno
add
test
pop
push
in
adc
push
das
test
test
or
inc
push
cld
lods
outs
(bad)
int3
dec
jne
loop
mov
inc
cmps
sahf
inc
jno
data16
hlt
adc
lods
mov
lds
mov
mov
pushf
fnsave
clc
es
mov
gs
adc
ins
or
or
lahf
pop
xchg
psrad
inc
repz
call
inc
aaa
lds
lea
test
mov
pop
scas
std
push
retf
xchg
push
js
dec
cs
and
daa
movs
lods
xchg
nop
inc
inc
add
outs
gs
xchg
(bad)
push
sbb
mov
das
jmp
mov
sub
inc
and
(bad)
pusha
retf
fs
cs
test
add
arpl
or
pop
xchg
mov
neg
aas
sub
mov
mov
nop
jge
xlat
fnstenv
(bad)
jmp
jnp
jl
cmp
ror
sub
outs
xchg
mov
pop
loopne
ins
inc
jl
ror
mov
mov
into
adc
dec
stos
dec
and
stos
inc
and
mov
test
iret
xchg
ins
mov
xchg
leave
sub
sbb
fld
(bad)
les
xor
xor
xchg
dec
pushf
pop
je
jae
mov
mov
imul
js
xor
dec
inc
pop
aaa
repnz
sub
adc
outs
mov
(bad)
adc
loop
int
sar
adc
dec
adc
mov
mov
sbb
or
mov
in
sbb
add
cli
inc
xchg
imul
add
repz
popf
fs
jmp
lea
aam
mov
push
xchg
xchg
dec
inc
adc
xor
sbb
mov
sbb
(bad)
(bad)
test
dec
cli
inc
cmp
or
(bad)
sti
and
pop
repnz
fadd
add
sbb
fidivr
and
ror
stos
ss
jbe
xchg
std
inc
jecxz
pop
mov
fst
push
ror
retf
lock
cmp
pop
frstor
call
inc
int3
pop
ins
ins
fidivr
clc
(bad)
and
in
imul
xchg
sti
lods
dec
and
ins
mov
mov
mov
ret
push
mov
(bad)
iret
lods
and
scas
out
stos
mov
lea
jle
adc
dec
mov
xchg
ror
mov
rol
sbb
call
popa
jmp
or
xchg
or
lahf
xchg
push
dec
rcl
push
pop
cmps
jge
dec
call
lods
sub
mov
push
sub
xor
sub
test
pusha
jne
mov
lock
fistp
inc
pop
(bad)
mov
push
fild
add
mov
or
movs
fwait
clc
(bad)
inc
or
ret
mov
aam
jg
sti
sub
sbb
pop
rol
push
push
and
jp
sbb
inc
pop
aam
xchg
xchg
mov
mov
int
call
mov
jl
fldln2
retf
retf
aad
and
aaa
sbb
or
push
in
loopne
mov
loope
pop
ss
(bad)
jle
xchg
cmc
nop
add
cld
int
popf
jo
lods
std
jno
mov
mov
rcr
std
cmp
cmp
arpl
bound
icebp
xchg
sub
jns
xor
cmp
pop
repz
xor
push
std
inc
retf
jmp
sbb
cmp
aad
(bad)
mov
jle
push
out
sbb
xchg
fwait
xor
xlat
in
sub
mov
jnp
repnz
xor
out
adc
js
ins
sub
shl
dec
mov
popa
push
ins
daa
fcomp
mov
jle
xchg
ds
mov
aam
jmp
call
cmp
scas
push
inc
cwde
sti
jp
out
mov
scas
dec
xor
pop
sub
je
aam
lds
rcl
cmp
ins
jmp
inc
cmp
rcl
pop
test
jmp
js
scas
jmp
push
stc
and
cwde
jb
lea
icebp
fs
mov
call
sti
inc
jno
das
push
jmp
or
cs
push
aad
int
dec
aaa
out
int
std
dec
iret
adc
pop
mov
fld
sub
inc
popa
imul
inc
clc
cli
int3
jns
cmp
xchg
enter
dec
jo
int3
cwde
adc
cmps
push
pusha
aad
sbb
(bad)
cmps
xor
stos
out
sti
pop
sbb
(bad)
pop
add
mov
sbb
dec
arpl
(bad)
(bad)
int3
repnz
or
cdq
mov
sbb
leave
inc
shr
jge
enter
cmp
inc
sti
in
retf
mov
lahf
movs
mov
pop
sbb
cmps
dec
movs
or
push
xchg
push
je
or
sbb
in
mov
pop
jmp
or
std
cli
nop
(bad)
push
ss
(bad)
adc
mov
jnp
fcom
or
xchg
or
(bad)
cli
xchg
mov
inc
sti
and
pop
push
(bad)
xor
popf
mov
cmp
int
sub
pop
ret
and
sub
out
cmp
xor
pop
or
(bad)
xor
enter
ret
sub
mov
mov
pop
rcr
push
(bad)
not
jecxz
xchg
rcr
lods
iret
jo
mov
call
pushf
push
or
mov
(bad)
sub
mov
adc
mov
in
add
loope
inc
pop
sub
or
xor
jne
push
jmp
mov
xchg
sbb
mov
xchg
jmp
repz
loopne
add
jbe
sub
mov
sti
mov
xor
clc
pop
(bad)
lods
jecxz
not
inc
jns
mov
add
xor
sti
inc
loop
movs
clc
adc
in
repz
(bad)
pusha
aas
jl
imul
jne
pop
fcomp
push
xor
fwait
xchg
pop
movs
and
mov
in
xchg
and
or
xchg
dec
ss
aam
or
mov
add
test
or
ss
test
add
xchg
dec
movs
jg
cld
dec
xor
sbb
fdiv
mov
sahf
in
adc
jl
data16
dec
ja
inc
jl
stc
pop
xchg
in
mov
pushf
test
nop
push
xlat
fcmovnb
movs
adc
movs
cli
fs
mov
sub
mov
adc
mov
sub
outs
(bad)
sbb
xchg
push
add
mov
push
ds
adc
fsave
int
mov
xchg
sbb
pop
add
mov
std
les
cmps
jle
jle
mov
(bad)
jge
fwait
inc
cdq
add
cmps
std
mov
mov
daa
jmp
loop
movs
pop
mov
xor
cmp
jmp
aad
cmp
pop
neg
lods
jge
xor
aas
aas
sub
imul
pop
popf
out
int3
push
or
ins
mov
fld
std
shl
mov
cmp
cmps
push
jns
xor
lahf
cs
and
or
inc
icebp
jnp
inc
mov
lock
cmp
arpl
iret
push
lods
shl
pop
addr16
popf
cmp
repz
jbe
fiadd
int
out
sub
dec
cmp
dec
imul
cli
mov
cmp
push
(bad)
pop
mov
int3
xor
and
cmp
inc
jo
sbb
jnp
push
xchg
xor
inc
or
mov
jmp
push
shl
push
jge
fst
xchg
and
retf
mov
push
mov
dec
pop
push
and
xor
imul
mov
xor
enter
bound
cmps
sbb
repz
fmul
out
dec
inc
(bad)
jne
scas
mov
call
(bad)
ds
pop
and
jmp
pop
dec
ror
cmp
shl
mov
cmp
or
xor
mov
mov
fst
in
sub
dec
inc
popf
and
pop
inc
stos
cmp
(bad)
arpl
sbb
lahf
ret
adc
neg
ja
aas
sub
inc
fwait
lds
and
mov
(bad)
xor
mov
enter
sub
popa
imul
nop
retf
in
dec
push
(bad)
int
jns
mov
stc
or
data16
shr
arpl
mov
adc
mov
aam
mov
mov
or
div
push
scas
mov
arpl
dec
adc
pushf
add
cli
hlt
std
movs
inc
adc
(bad)
jo
pop
adc
aas
imul
fldcw
fdiv
push
das
aam
mov
and
stos
int3
xchg
movs
cmp
pusha
nop
xor
pop
ror
in
fistp
jb
out
mov
in
push
scas
fdiv
stos
dec
cld
daa
sbb
dec
sub
mov
and
call
xchg
lea
mov
test
movs
(bad)
in
jbe
btc
push
xor
in
add
pop
sti
sbb
inc
pop
add
add
idiv
scas
movaps
xchg
nop
cmp
es
outs
or
(bad)
inc
mov
push
rol
mov
adc
push
lods
ins
in
or
es
jp
sti
call
mov
xor
js
rol
clc
imul
dec
jb
out
dec
mov
imul
cmp
add
lods
rcr
call
or
aaa
scas
mov
adc
xor
mov
stc
pop
ds
cmp
adc
xchg
xchg
movs
jb
add
or
scas
call
mov
lahf
sar
and
inc
and
push
jg
dec
mov
(bad)
clc
xchg
arpl
enter
aaa
mov
sub
pop
inc
cmp
adc
lods
icebp
inc
jmp
jmp
inc
mov
mov
inc
push
shr
bnd
sub
fs
pop
in
mov
add
jae
jle
fdivr
xchg
jp
lock
fsub
add
push
rol
and
lea
leave
aas
cmp
out
and
mov
jl
adc
pop
cmp
fcmove
bound
mov
ror
adc
cwde
test
sbb
fimul
inc
ja
pop
cs
aad
xor
push
out
cld
push
iret
pusha
ret
add
sbb
in
xor
nop
xchg
aaa
sub
test
push
je
pop
mov
ficomp
adc
scas
outs
fbld
push
adc
and
(bad)
ror
lea
sub
adc
rcl
in
and
jbe
push
pop
popf
adc
(bad)
loop
addr16
pop
and
inc
iret
jo
fidiv
scas
push
pop
dec
dec
jmp
xor
std
pushf
call
rol
out
test
pop
ss
lods
jge
daa
sbb
jmp
add
aaa
push
ds
fcomp
ficom
pop
je
mov
cmp
and
shld
fild
dec
loope
rcr
pop
inc
pusha
pop
jge
push
or
rcr
mov
mov
mov
aas
repz
dec
xchg
xchg
test
push
mov
mov
dec
cld
(bad)
sbb
xchg
(bad)
inc
hlt
dec
mov
mov
loope
fnstcw
out
push
sbb
retf
xchg
sub
daa
int3
and
push
or
push
mov
sbb
cmp
call
inc
or
jmp
xchg
pop
lahf
fisub
inc
or
movs
imul
mov
fs
aaa
push
out
xchg
imul
mov
sbb
lds
sub
sub
ins
(bad)
xchg
fs
xchg
mov
inc
adc
dec
fdiv
test
scas
dec
ret
cwde
retf
mov
push
sub
shl
int
xchg
cmc
(bad)
jge
dec
mov
xchg
ret
adc
mov
lahf
sub
in
ins
test
xor
jo
out
jno
pop
je
mov
test
xor
cmp
loope
jb
(bad)
mov
inc
into
xor
or
mov
sub
push
mov
adc
xchg
fs
bnd
xor
mov
mov
mov
shr
pop
repnz
mov
push
jmp
movntps
cdq
pop
pop
dec
xor
leave
jno
push
loope
iret
outs
imul
mov
sub
out
repnz
mov
or
ffree
jb
and
xlat
dec
push
dec
pop
fidiv
dec
pop
sub
pop
ss
jmp
ja
in
retf
retf
sbb
dec
jne
mov
sub
stc
out
out
or
xchg
test
cdq
mov
cmc
add
push
inc
adc
rcl
or
dec
xchg
stos
jns
sahf
jecxz
cmps
rcr
in
scas
cmovge
into
xchg
outs
push
push
push
mov
std
mov
and
in
xlat
xchg
xor
jno
ins
mov
mov
jno
nop
dec
mov
and
inc
cld
dec
push
fwait
jns
jo
jnp
retf
xchg
sbb
(bad)
fisub
dec
sbb
ss
mov
test
int
push
push
stc
(bad)
adc
lea
adc
test
mov
and
sub
dec
cmc
pop
add
push
shr
stos
adc
icebp
or
lea
loopne
xlat
sahf
xor
je
cmp
and
retf
pushf
mov
aas
jmp
mov
inc
cmp
xchg
jo
or
scas
cmc
leave
(bad)
mov
pop
sub
cld
push
xchg
mov
int3
retf
xor
add
jmp
fild
scas
lds
sub
pop
scas
(bad)
jmp
popf
in
or
call
or
sar
push
pop
push
sbb
shl
push
stc
(bad)
xchg
inc
popf
sub
xor
and
rol
stc
dec
push
push
cld
push
pusha
jle
cmp
push
push
fbld
xor
mov
sub
mov
inc
hlt
cmp
dec
mov
jmp
push
xor
lahf
in
mov
push
sub
jecxz
dec
pop
arpl
dec
jnp
pop
stos
or
stos
xchg
push
stc
jmp
add
push
(bad)
and
pushf
ds
retf
mov
fcomp
(bad)
push
std
iret
xchg
ret
xchg
inc
jae
mov
cdq
jae
xchg
xlat
dec
(bad)
mov
mov
sbb
xor
push
dec
out
mov
push
jo
xor
stos
mov
shl
shl
dec
rol
pop
shr
sbb
mov
inc
cmps
xor
inc
dec
ss
pop
jl
push
cmp
js
mov
scas
and
scas
pop
(bad)
or
mov
movs
ds
imul
fisubr
jns
mov
jg
mov
lods
popa
inc
pop
mov
pushf
sub
imul
test
mov
test
and
cmc
jnp
repnz
je
enter
cli
cmps
mov
xchg
dec
push
sbb
xchg
add
adc
sbb
stc
mov
adc
xchg
test
aaa
xchg
fimul
cmps
lahf
inc
test
mov
sub
ss
(bad)
mov
(bad)
(bad)
pop
xor
sbb
push
push
clc
adc
ret
pop
mov
(bad)
repz
fisttp
push
push
mov
nop
sahf
push
jns
inc
jmp
dec
dec
mov
sbb
mov
xor
mov
mov
jge
rcl
das
or
cwde
ret
stos
mov
sub
push
mov
and
movs
xor
ror
inc
popa
(bad)
movs
push
pop
dec
in
push
adc
sbb
jns
adc
jno
add
arpl
pop
stos
add
add
cmp
xchg
shr
mov
add
lds
pop
jbe
loopne
xchg
sbb
mov
mov
inc
mov
scas
xchg
mov
das
stos
push
es
aam
lea
call
mov
retf
lods
mov
sti
aas
test
neg
test
cmp
jg
sbb
jecxz
stos
hlt
cmp
xor
pusha
in
inc
xor
xchg
xor
(bad)
stos
pop
cs
cs
ficomp
jae
push
lea
adc
rcl
sbb
and
arpl
test
mov
sub
cli
pop
out
sbb
cmp
lahf
outs
inc
mov
daa
push
jae
inc
or
cmps
loope
jle
(bad)
push
or
rcl
mov
inc
test
xor
leave
les
mov
aaa
push
leave
and
adc
cmp
inc
test
mov
loop
mov
mov
call
push
data16
dec
call
inc
out
(bad)
gs
leave
test
jo
xchg
retf
pop
cmc
xchg
or
pop
mov
xor
adc
mov
xor
repz
movs
arpl
and
cdq
add
test
mov
cmc
mov
mov
jne
inc
sub
jo
and
outs
out
adc
or
enter
pop
jmp
aam
add
out
fisubr
lahf
loopne
pop
call
out
clc
xchg
sub
pop
cmp
pop
push
outs
sbb
and
in
push
and
add
cmp
cmp
xchg
xchg
push
push
xchg
mov
add
mov
or
inc
dec
dec
adc
cmp
loope
fcom
xchg
mov
sar
stc
xchg
sub
pop
inc
daa
or
dec
or
mov
inc
adc
in
fst
adc
jecxz
mov
sbb
mov
je
sbb
retf
mov
xchg
out
shr
fcomip
mov
mov
mov
jmp
pop
mov
call
cli
jp
mov
mov
mov
into
sub
add
hlt
mov
sbb
in
fisttp
nop
xchg
push
jmp
xchg
lea
push
ins
fstp
nop
mov
aam
mov
(bad)
sub
sub
pop
mov
push
hlt
pop
stos
shl
inc
rol
inc
mov
(bad)
movs
pmaxsw
jecxz
jno
add
fs
scas
fild
pop
and
push
jmp
mov
and
loop
add
sahf
pop
in
add
aad
or
xchg
push
mov
pop
push
jb
xchg
outs
test
addr16
adc
ds
xchg
sbb
in
add
pop
and
jge
in
cmps
test
sub
call
dec
sub
push
jmp
movs
and
fbld
clc
dec
xchg
retf
mov
dec
jecxz
jae
mov
cmp
pusha
jmp
repnz
pop
cmp
pop
lahf
xchg
xchg
int
jno
mov
out
in
xor
cmp
sbb
cs
add
xchg
gs
nop
stos
aad
xor
jne
add
and
mov
sbb
add
leave
cmps
dec
(bad)
shr
fadd
aam
push
mov
ss
ror
stos
movs
push
xor
data16
dec
pusha
cmp
jge
in
sbb
jmp
push
xlat
mov
mov
jecxz
xlat
xchg
sbb
retf
addr16
jle
xchg
outs
adc
sub
pop
(bad)
mov
add
push
retf
test
pusha
mov
fild
mov
sub
loopne
or
pop
enter
xchg
mov
mov
mov
int3
jl
inc
adc
xor
mov
xor
jmp
sahf
into
shr
push
imul
lea
adc
cmc
fisttp
and
mov
fmul
mov
daa
pop
push
jo
cmc
jp
sahf
adc
orps
and
fadd
sti
mov
mov
mov
add
in
int3
cmp
cli
outs
or
stc
sar
mov
sbb
ja
and
mov
xchg
aas
clc
xor
xchg
fsubp
mov
ins
and
arpl
int3
jmp
daa
jne
xchg
inc
add
sub
push
xchg
push
and
xchg
stos
mov
or
or
mov
int
movsx
cmc
iret
icebp
sub
and
hlt
shr
sahf
outs
lds
into
lahf
push
outs
xlat
(bad)
ss
jg
pop
push
mov
mov
pop
fdivr
and
jb
pop
jnp
pop
mov
adc
push
xchg
call
sub
ins
cmp
cdq
mov
imul
mov
cmp
pop
js
cwde
call
ret
and
mov
scas
pusha
jns
popw
lock
inc
dec
mov
adc
out
rol
cmp
mov
xchg
jmp
jns
outs
or
stos
sub
movs
imul
push
pop
loop
mov
inc
scas
push
cwde
cmc
dec
cdq
addr16
cdq
jl
ins
adc
stc
xor
(bad)
shl
sub
push
xor
or
pop
int
jecxz
shl
inc
arpl
not
popa
stc
fisttp
xlat
js
int3
pop
push
and
je
das
int3
pop
rcr
ret
jb
mov
out
pushf
(bad)
fisttp
sbb
mov
dec
das
out
dec
jno
cmp
(bad)
mov
push
adc
inc
push
out
or
mov
xchg
inc
add
pop
pop
cmp
cmp
mov
and
fdecstp
push
push
xchg
mov
and
push
gs
sub
and
push
inc
push
dec
movs
sbb
jl
xchg
cmc
mov
fiadd
cmp
int
sar
mov
xchg
xor
into
nop
xchg
push
repz
scas
call
dec
xchg
push
mov
xchg
cld
push
cmp
out
js
imul
jo
outs
jmp
arpl
addr16
retf
(bad)
and
bound
aad
add
rcr
mov
mov
push
sbb
pop
pop
mov
mov
xor
adc
jne
in
inc
fadd
mov
push
in
and
imul
jp
ins
movs
xchg
inc
cmp
(bad)
cmp
xchg
jge
test
inc
in
sbb
mov
jg
pop
cli
push
daa
in
popf
cdq
add
ret
int
sub
cmp
or
xchg
sbb
mov
cmp
fiadd
xchg
aam
in
int3
not
mov
mov
or
inc
sub
pop
ja
cmp
add
sub
pop
push
inc
cli
outs
dec
jne
jae
movs
dec
push
aas
xchg
inc
arpl
aas
in
fstp
xor
les
pushf
cmp
mov
fidiv
test
dec
ja
test
adc
fistp
aam
test
mov
stc
in
xchg
(bad)
fist
das
(bad)
hlt
call
scas
or
ret
retf
dec
lods
sub
mov
call
daa
sub
jmp
dec
jmp
dec
push
fdiv
mov
xchg
push
mov
and
ret
mul
and
cmps
cmps
add
mov
sbb
(bad)
xchg
(bad)
out
xlat
sbb
sub
inc
mov
lahf
in
rol
xchg
ins
test
jp
dec
mov
into
retf
cmp
das
inc
cli
pop
inc
push
jecxz
mov
or
lea
mov
shl
cmp
mov
scas
or
mov
int3
(bad)
(bad)
mov
mov
in
mov
mov
pop
jnp
lods
push
inc
stos
(bad)
push
(bad)
into
ds
or
pop
nop
repz
into
push
jmp
pusha
stos
fisttp
popf
xchg
gs
cmp
push
push
(bad)
mov
imul
retf
mov
mov
sbb
push
ja
je
mov
or
int3
aam
ja
adc
stc
js
pop
(bad)
lock
and
mov
shr
and
adc
mov
sub
xor
test
or
pop
inc
inc
mov
push
mov
popa
dec
mul
add
dec
das
into
fidivr
and
jge
mov
add
mov
shl
movs
call
jb
mov
and
mov
sub
mov
cmp
xlat
cmps
stos
inc
jne
jle
mov
or
mov
and
fmulp
dec
xlat
mov
cs
pop
std
pop
ret
or
xchg
xor
mov
xchg
repnz
inc
daa
push
pop
xor
cs
outs
sub
xor
and
jmp
push
outs
cmp
movs
push
mul
fsubr
mov
lods
and
lea
jae
xchg
out
and
or
loope
push
push
or
add
fidivr
inc
mov
mov
jns
and
and
jp
xor
jmp
mov
int
mov
xchg
or
ins
inc
shl
test
mov
jae
xchg
stc
cmp
xchg
sub
dec
cmp
ins
test
cmps
pop
(bad)
fild
jno
lock
dec
xor
enter
push
movs
aas
aam
retf
arpl
mov
push
out
push
daa
iret
mov
pop
sub
adc
push
mov
sub
adc
add
jno
inc
pop
pop
scas
inc
mov
jmp
in
pop
int
(bad)
push
push
call
mov
dec
sub
mov
int3
into
and
sub
push
and
aam
aas
fdiv
(bad)
pushf
pop
into
ret
in
jb
out
mul
sbb
neg
es
xor
dec
jmp
mov
dec
jnp
pop
inc
adc
jns
sub
push
xor
nop
mov
sub
popf
jo
xor
or
mov
mov
cwde
mov
sar
popw
mov
sub
ret
aam
imul
pop
(bad)
fadd
aaa
int3
stos
sub
jmp
aam
push
test
pop
cld
mov
xchg
or
mov
xchg
pushf
jg
xchg
fadd
into
and
call
stos
lea
lea
xlat
es
jmp
frstor
sbb
into
push
push
push
pop
add
cwde
sub
stos
jns
and
sub
adc
(bad)
sti
pop
gs
enter
ror
push
test
aas
(bad)
push
call
and
mov
loop
adc
push
cmp
mov
sub
rcr
push
pop
repnz
rcr
out
lahf
cwde
lahf
fadd
mov
push
xor
push
add
cmc
push
sub
push
dec
icebp
fwait
inc
push
outs
sub
imul
sbb
xchg
adc
mov
mov
and
arpl
pop
inc
outs
jb
inc
mov
cld
mov
or
mov
or
xor
aad
mov
or
push
or
jle
mov
cmp
xor
mov
pop
cs
(bad)
movs
ret
dec
sbb
test
inc
test
shr
stc
adc
pop
mov
imul
and
adc
dec
scas
sub
test
mov
adc
inc
add
imul
movs
adc
nop
sub
mov
outs
or
pusha
test
push
adc
sbb
or
sbb
sbb
sub
lock
std
dec
pop
push
push
sub
daa
push
fisub
adc
shl
dec
cli
pusha
adc
mov
mov
push
sbb
sbb
icebp
cmc
out
arpl
mov
mov
call
and
jbe
in
fs
mov
into
sbb
or
xor
mov
jg
push
clc
ret
and
jg
mov
outs
push
sbb
xchg
mov
dec
push
jbe
or
mov
cwde
mov
push
adc
aaa
cmp
cwde
mov
push
lahf
retf
adc
retf
push
sti
stc
retf
mul
cmps
and
(bad)
or
(bad)
js
jmp
call
jl
pop
pop
nop
push
xchg
aas
xchg
setno
jmp
int
sbb
std
je
aas
mov
and
jae
or
adc
xchg
add
call
std
push
div
mov
cmp
loopne
pop
jmp
mov
dec
or
sbb
sub
xchg
mov
xchg
xor
sub
(bad)
pop
cmp
(bad)
ss
mov
sbb
adc
jmp
pop
ins
mov
test
outs
push
jmp
adc
xlat
jne
std
mov
sub
fsub
dec
sbb
test
adc
add
pop
sar
setge
in
inc
xor
ret
std
repz
cmp
lea
or
in
and
cmp
pop
push
sbb
inc
sub
inc
jb
sub
adc
mov
jg
fwait
loop
xchg
inc
dec
sbb
inc
popa
jno
mov
pop
daa
das
shl
cs
sbb
adc
mov
imul
sbb
fs
xchg
xor
xchg
or
xchg
mov
movs
mov
push
ins
in
pop
movs
shl
mov
sub
mov
dec
movs
test
scas
mov
fsub
or
lea
pop
imul
push
fwait
jl
push
outs
test
(bad)
pop
in
das
push
mov
aad
pushf
fldpi
leave
into
imul
push
xor
or
stos
bound
sub
cmp
or
popa
inc
ja
ds
and
mov
sbb
jb
push
shr
mov
mov
mov
fidiv
mov
pop
scas
cwde
outs
call
xchg
(bad)
sub
adc
mov
cmp
cmp
xor
int3
pop
push
inc
ins
int
fisub
and
into
cld
mov
pop
mov
inc
mov
pop
dec
not
outs
mov
push
js
pop
(bad)
jp
es
and
mov
retf
push
inc
je
test
movs
adc
fmul
test
mov
inc
imul
jmp
xchg
das
mov
xchg
enter
mov
push
adc
mov
(bad)
mov
cmp
loop
jmp
push
movs
leave
push
pop
cmp
xchg
iret
mov
cmps
mov
lock
retf
pusha
arpl
jle
arpl
mov
lods
out
jl
shr
inc
inc
xlat
sub
push
adc
rcr
adc
pushf
add
pusha
call
cmc
mov
sub
push
cmp
(bad)
sbb
xchg
movs
test
and
fwait
mov
js
jne
or
icebp
cwde
jecxz
test
mov
pop
stos
(bad)
call
call
out
adc
inc
test
jp
mov
fiadd
cmps
add
fsubr
xor
js
adc
sub
hlt
mov
mov
adc
retf
enter
movs
outs
std
push
xchg
cmp
rcr
mov
push
cmp
pop
sbb
and
dec
sub
cwde
fbstp
push
xadd
inc
push
je
fstp
sub
lock
and
or
cmp
sbb
mov
jle
xor
mov
test
stos
mov
or
jge
fnsave
push
mov
xor
xor
jne
mov
pop
push
and
je
or
ja
retf
or
sub
ss
mov
inc
data16
inc
inc
frstor
or
add
dec
push
dec
mov
hlt
sbb
mov
adc
mov
inc
out
leave
mov
mov
enter
xlat
sbb
mov
adc
cmp
sbb
sub
mov
add
mov
push
aas
mov
in
adc
mov
(bad)
adc
aaa
inc
cli
pop
sahf
mov
jo
jp
test
ror
dec
fwait
stos
cmp
fxch
sub
fisttp
int
pusha
mov
sbb
xor
inc
ret
sbb
xor
sbb
aas
cwde
in
and
cmc
xor
push
add
adc
adc
je
movs
or
loope
pop
aam
shr
add
lods
mov
packssdw
cmp
aad
and
sub
xlat
mov
jl
xor
mov
mov
out
push
idiv
mov
fwait
imul
and
ins
cmp
mov
mov
retf
lock
dec
test
dec
mov
loop
cld
popa
je
vpsubb
cmp
out
add
aam
call
cmps
sub
js
jp
cdq
jb
or
shl
mov
cmps
jmp
jne
mov
fistp
out
mov
inc
movs
or
std
adc
sti
mov
jl
push
inc
lods
sub
adc
xchg
(bad)
mov
jo
add
or
jb
inc
mov
test
sbb
outs
mov
mov
lods
(bad)
dec
jp
inc
mov
fild
mov
sbb
test
test
dec
cdq
js
push
and
dec
rcl
data16
in
and
add
dec
stc
add
in
in
sub
gs
or
mov
pop
retf
or
leave
xor
mov
xor
sar
inc
mov
shr
adc
retf
sbb
cdq
push
push
xor
sbb
mov
mov
pusha
jg
add
add
(bad)
mov
mov
lods
pop
pop
movs
test
aad
shr
push
sahf
mov
in
sti
retf
(bad)
shl
add
je
adc
lahf
mov
mov
es
inc
bound
rsm
int3
xchg
jo
cmps
retf
sub
not
fucomi
sbb
les
test
enter
rol
clc
inc
pop
arpl
sbb
fwait
xchg
and
adc
mov
jo
scas
inc
mov
xor
or
loopne
jo
outs
iret
mov
sub
(bad)
(bad)
icebp
pop
jle
add
ret
xchg
jno
icebp
mov
rcl
cdq
fwait
es
add
xchg
ins
sub
adc
retf
mov
cmp
addr16
adc
push
pop
pcmpeqw
xlat
and
push
test
adc
push
and
dec
cmp
mov
ret
xor
adc
hlt
fs
jmp
(bad)
fs
mov
aad
sub
(bad)
outs
jecxz
leave
xchg
push
cmps
or
lahf
xchg
(bad)
mov
sahf
enter
cld
add
jmp
je
dec
pusha
fdiv
das
mov
dec
daa
cdq
scas
inc
mul
push
fistp
xor
jnp
in
xchg
loope
push
movs
mov
sbb
shl
inc
into
(bad)
cwde
imul
mov
dec
(bad)
dec
xor
dec
mov
xor
sbb
jo
adc
test
xor
xor
inc
xchg
call
loopne
fcomp
add
sub
loop
loope
mov
fild
cdq
mov
sbb
pop
xchg
push
int3
aad
sub
cmc
add
xchg
stos
imul
mov
adc
in
mov
lock
pop
sbb
movs
test
test
test
sbb
fs
sub
pop
cmps
pusha
jecxz
xchg
jecxz
dec
aaa
inc
add
jge
test
bound
push
icebp
xchg
jle
std
in
loopne
sbb
out
stos
push
scas
mov
jae
pop
cmp
mov
cmp
add
cld
inc
daa
mov
or
adc
add
cmc
int3
inc
cmps
or
lds
xchg
jb
fs
jmp
xchg
addr16
xchg
out
dec
fidiv
xchg
idiv
clc
xor
xchg
repz
ins
xlat
jne
inc
loop
dec
cmc
or
dec
add
and
xor
and
pop
fmul
iret
sbb
hlt
outs
fadd
add
(bad)
loope
jmp
jge
int3
push
or
sti
xor
clc
call
dec
jp
cmp
push
inc
movs
mov
imul
aam
cmp
fcmovu
or
div
xor
shr
or
sbb
xor
outs
fs
loopne
out
jae
cwde
adc
int3
call
mov
push
jno
(bad)
scas
fmul
in
mov
mov
mov
div
sahf
fimul
(bad)
jp
out
fsubr
in
test
xchg
pushf
push
fild
pop
adc
repz
xor
int3
loop
jb
dec
clc
xor
mov
sahf
and
push
mov
imul
xchg
xchg
icebp
and
ins
inc
stos
jmp
inc
aad
cwde
test
jne
cmp
mov
test
sahf
pop
push
jae
pusha
fmul
sbb
fwait
sub
lahf
push
and
ins
lock
add
inc
imul
jo
rcr
lods
jno
mov
jb
jg
enter
sub
fstp
ins
stc
dec
mov
push
(bad)
ja
icebp
int
out
leave
test
popf
sti
sub
or
into
xlat
xchg
push
test
dec
cdq
inc
or
push
outs
jle
dec
sub
fs
call
and
or
push
cmc
xchg
out
ins
(bad)
jmp
mov
pop
mov
mov
repnz
rol
or
cld
push
xchg
sub
xor
loop
xchg
vmovdqu
enter
int
mov
fisubr
sar
mov
(bad)
pop
xchg
das
mov
jp
sti
push
into
std
jo
imul
iret
push
and
popf
mov
fucomi
(bad)
sub
cld
add
dec
jmp
xchg
inc
push
jl
pop
aas
inc
lock
push
or
popf
mov
push
cmp
shl
jo
mov
lea
sahf
loop
sub
push
loop
call
xchg
cmp
je
nop
mov
adc
ret
popa
aas
push
sbb
das
xchg
inc
call
aas
movs
jnp
sub
int3
and
mov
mov
xchg
sub
xor
push
mov
pop
call
add
rcr
adc
out
pop
test
xor
rcr
mov
xor
jns
lahf
cmp
movs
or
jg
push
sub
sub
inc
mov
push
adc
into
xor
fsubr
int3
sbb
clc
mov
and
jp
cwde
inc
lods
retf
ret
push
arpl
popa
add
(bad)
js
push
jmp
aam
xchg
imul
pop
add
out
leave
jmp
ret
lock
outs
push
mov
mov
inc
std
xchg
mov
das
sub
movs
cmp
mov
loopne
outs
xor
pop
rol
call
mov
mov
clc
mov
idiv
sti
pop
sbb
pop
inc
xor
push
(bad)
cwde
pop
or
push
inc
(bad)
sahf
jg
mov
sti
mov
mov
(bad)
aaa
adc
in
inc
ror
pop
inc
mov
sbb
or
cli
test
movs
call
sub
sub
dec
cmp
xor
jg
test
gs
or
out
xor
fmul
inc
sti
cmp
fnstcw
das
dec
jbe
(bad)
sub
out
pop
mov
sub
cli
repnz
xor
test
mov
jb
cs
push
clc
mov
push
out
fs
cmps
dec
adc
ds
pop
js
ret
mov
cmp
adc
test
out
out
dec
lods
cmp
aas
and
jo
nop
sahf
icebp
das
jle
test
popa
push
adc
xor
add
sbb
cdq
mov
dec
sub
in
jb
adc
call
push
aas
cmp
ins
pop
or
and
mov
stos
call
aas
int
push
and
push
hlt
dec
popa
(bad)
mov
dec
dec
inc
jp
data16
jo
mov
call
mov
(bad)
push
data16
jle
pop
or
int3
das
and
mov
jnp
ud0
lock
test
imul
icebp
xchg
pop
sbb
test
sbb
xor
xchg
xor
jmp
sub
lock
jle
and
in
pop
cmp
inc
or
mov
aad
mov
ja
stos
sbb
mov
mov
xchg
xchg
sbb
rcl
pop
push
popa
or
mov
inc
xlat
mov
inc
mov
fiadd
call
(bad)
pop
rol
sbb
retf
aam
xchg
aam
adc
dec
push
add
or
mov
sbb
push
xchg
jg
adc
push
dec
dec
xchg
repnz
inc
aaa
push
div
add
and
pop
test
sub
jbe
push
mov
jp
dec
inc
inc
and
aad
repnz
or
pop
xchg
sub
pop
jmp
xor
pop
cli
xor
popa
cmp
sbb
adc
pop
jno
jmp
ret
mov
pop
pusha
mov
inc
dec
fist
and
mov
pop
xchg
scas
iret
jl
pop
inc
push
(bad)
ss
fchs
inc
adc
mov
sbb
adc
aaa
add
mov
movs
rol
push
ret
sbb
xchg
sub
xlat
movs
add
movs
pop
int3
cs
or
and
shr
jae
sub
cld
push
xchg
std
pop
pop
stos
cmp
cld
je
dec
add
push
mov
hlt
stc
jmp
jnp
dec
push
int3
ret
sbb
dec
or
in
(bad)
repnz
jle
push
sar
or
fnstsw
jl
sti
sbb
dec
inc
repnz
push
xchg
xor
cli
push
jo
(bad)
lock
loopne
jno
call
add
mov
mov
adc
xchg
retf
push
ja
shr
(bad)
(bad)
and
popa
mov
mov
jae
jo
jmp
fmul
ss
cmp
sbb
mov
lea
jne
mov
retf
push
and
pop
clc
push
inc
or
mov
cmps
mov
das
ss
sub
mov
xchg
jb
fild
jp
mov
mov
push
mov
(bad)
fdivp
pusha
xchg
xchg
hlt
adc
xor
jl
jnp
add
sbb
xchg
jl
das
loope
mov
test
cld
retf
pop
dec
scas
inc
sbb
popa
jmp
inc
stos
pop
mov
fadd
cmc
jle
test
xchg
loopne
adc
jbe
dec
adc
mov
fld
xlat
jbe
ror
push
iret
jbe
outs
xchg
rcl
jecxz
fwait
je
sahf
es
and
and
add
cli
pushf
dec
ret
hlt
aas
ins
push
mov
aad
(bad)
and
js
repz
push
inc
das
enter
or
(bad)
(bad)
inc
stos
jns
aam
push
jmp
mov
add
or
jno
imul
ins
cmp
scas
push
arpl
pusha
push
je
xchg
push
popa
cmp
call
sub
out
jecxz
lods
jo
fbld
outs
das
test
mov
add
jbe
jbe
mov
bound
jns
neg
jbe
rep
lea
sti
inc
retf
adc
jno
gs
call
mov
adc
mov
cmp
sub
jne
and
fs
in
or
jne
mul
popf
push
data16
add
adc
inc
dec
test
push
cmps
mov
sub
mov
aam
test
imul
push
scas
mov
jmp
mov
mov
in
cmps
cmp
sub
push
pop
pop
ud0
jo
xchg
inc
scas
add
js
and
(bad)
cli
or
icebp
stos
js
and
mov
iret
sahf
frstor
loopne
push
cld
pop
pop
int3
mov
mov
xchg
xor
and
xchg
cmp
int3
push
shl
fsub
inc
cmp
jne
adc
adc
mov
test
xchg
xlat
aaa
cwde
dec
popf
adc
ja
and
sub
dec
sbb
and
xchg
fadd
int3
jl
call
sbb
jae
mov
mov
mov
retf
push
sbb
fstp
jne
xchg
mov
add
test
mov
jmp
pop
daa
sbb
mov
loope
aam
fldcw
ss
sbb
sbb
pop
lock
das
pushf
sbb
cmp
xor
pop
mov
adc
mov
add
lahf
mov
fwait
adc
mov
mov
fxch
cmp
jo
(bad)
sub
cmp
push
sbb
adc
test
or
jg
icebp
lods
pop
bound
cmp
idiv
aas
push
and
sbb
or
xchg
stc
mov
cmp
rol
lods
adc
cmp
jmp
inc
dec
(bad)
mov
xchg
mov
dec
push
rcl
inc
leave
cmp
jge
mov
cmp
popa
outs
ret
fcomp
cmp
sub
in
ret
(bad)
mov
xor
jmp
lods
push
jl
xor
sub
inc
and
nop
mov
mov
xchg
enter
mov
xor
sub
pop
sbb
pop
add
jg
test
lahf
jmp
cmp
aam
jle
shl
pop
and
out
int3
push
push
sub
inc
in
test
stos
mov
push
ficom
adc
jb
jmp
mov
mov
add
or
int3
and
retf
loopne
jl
sbb
fdiv
ja
or
or
mov
adc
add
fist
aam
popf
cmp
xchg
dec
cmps
pop
lods
in
jne
xchg
jge
loope
inc
popf
mov
mov
fdivr
(bad)
loopne
cmp
xchg
jmp
add
out
(bad)
mov
enter
mov
push
into
hlt
adc
repz
push
mov
shl
pushf
aad
jbe
adc
push
popf
sub
imul
adc
aad
enter
outs
xchg
pusha
sti
cmp
mov
imul
mov
into
mov
mov
lahf
jne
fucomi
into
aas
call
jne
repnz
sti
pop
or
add
xchg
cmp
mov
mov
loop
inc
mov
(bad)
inc
cmp
(bad)
div
push
test
mov
or
into
adc
pop
fs
jg
vrcpss
xchg
xor
ret
mov
cmps
test
add
jmp
mov
cdq
xchg
pop
call
imul
(bad)
and
xchg
dec
stos
xchg
fimul
les
dec
imul
fs
dec
fnstsw
nop
popa
lods
repnz
push
mov
ficomp
xchg
loop
pushf
neg
adc
fcmove
mov
or
das
push
inc
cmp
cmc
push
movs
xor
mov
rol
pusha
fisttp
sub
add
jns
xor
mov
jae
sbb
fadd
popf
push
cmp
cmp
xchg
and
and
push
xor
lahf
inc
xor
push
xor
mov
cwde
xchg
push
mov
pop
(bad)
and
out
ins
leave
repz
fisub
fstp
popf
inc
dec
mov
sahf
cld
and
cli
loop
or
push
mov
fnstcw
adc
dec
jecxz
sti
push
dec
cwde
(bad)
lods
js
jo
retf
pop
in
mov
mov
imul
test
xchg
xor
pop
bound
or
test
adc
mov
jno
or
pop
in
sti
pop
in
out
popf
push
sub
jmp
sbb
(bad)
mov
sahf
test
sub
imul
arpl
pop
outs
adc
fdivr
mov
adc
jmp
inc
outs
sub
inc
push
stos
xchg
call
fbld
or
add
pop
push
movs
add
popf
adc
jecxz
movs
and
sub
(bad)
xor
ss
retf
enter
xchg
mov
repnz
stos
loop
push
push
inc
out
mov
cmp
cld
mov
cmps
out
sub
cmp
rcr
loope
loope
pop
pop
and
fcmovne
mov
jb
fnstenv
repz
jnp
push
jnp
and
popf
fistp
or
clc
mov
sti
inc
icebp
sti
cmp
shl
in
cmps
xchg
add
mov
mov
test
mov
enter
jns
add
iret
fucomp
jne
push
out
stos
sbb
daa
(bad)
pop
lahf
push
out
dec
in
sub
jmp
in
cmc
xor
ja
mov
sbb
push
es
mov
test
fucomip
xlat
xor
(bad)
add
xchg
mov
pop
and
pusha
pop
ret
cmp
cmps
lods
cmp
xor
je
cli
test
mov
movs
xchg
clc
pusha
leave
ins
push
dec
xchg
adc
inc
adc
inc
ret
and
add
fimul
(bad)
bswap
les
mov
inc
rol
rol
inc
pop
inc
fidivr
in
cmp
mov
push
push
or
fsubr
pmaxsw
loop
int3
jecxz
and
ins
xchg
pop
inc
das
jge
cld
push
pop
sbb
in
aas
sbb
and
shl
cmc
popf
cmps
shr
push
sub
clc
sar
in
and
(bad)
out
mov
daa
into
daa
test
pop
jp
(bad)
mov
jecxz
jno
shl
retf
repnz
xchg
cmps
cmp
pextrw
(bad)
and
jo
leave
sub
dec
loope
jmp
and
jp
dec
cld
into
jecxz
pop
sub
jmp
fild
cli
pusha
ins
sub
out
scas
or
dec
aam
dec
xlat
mov
pop
js
pusha
adc
sub
xor
aaa
mov
sbb
rcl
dec
inc
test
arpl
call
outs
imul
inc
mov
outs
pop
xor
js
cmp
dec
sub
mov
jns
retf
mov
aam
movs
retf
mov
pop
jl
fs
aas
mov
push
push
add
or
retf
sub
aaa
shr
or
fisubr
retf
sub
iret
and
jns
fdiv
popa
mov
mov
daa
jp
push
xor
push
xor
lods
inc
cs
sbb
cld
add
aas
pop
jp
gs
dec
cdq
mov
xchg
mov
test
pop
and
sub
dec
mov
and
mov
test
mov
mov
ins
jmp
mov
add
jo
cmp
scas
xchg
cdq
hlt
call
ret
and
mov
cld
push
or
sar
dec
xlat
pop
cmc
popa
les
cmps
cdq
fwait
or
cmp
popa
sahf
test
fcom
mov
fimul
jecxz
push
push
data16
and
nop
pusha
xor
retf
sub
inc
xor
aas
daa
aad
stc
or
arpl
iret
xchg
ds
clc
fstp
mov
hlt
imul
fstp
adc
adc
out
shl
js
pop
mov
test
out
push
sub
dec
fcmovb
add
jl
inc
cmp
shr
jecxz
je
cmp
push
or
scas
fldcw
sub
sti
fcomp
data16
shr
cmp
movs
and
xchg
jbe
scas
xchg
aad
mov
push
pop
ins
in
push
jl
cwde
ficomp
and
xor
mov
dec
xchg
xor
mov
enter
fisttp
mov
sub
(bad)
pop
xchg
mov
mov
jmp
es
int3
lds
sub
mov
scas
adc
mul
mov
cmps
in
jno
dec
lock
cs
mov
sbb
adc
shr
(bad)
jmp
push
scas
arpl
xchg
and
push
xchg
mov
inc
mov
rcr
push
call
jge
repz
add
dec
ins
adc
imul
pop
pop
inc
push
ja
mov
out
inc
and
out
(bad)
inc
shl
outs
dec
out
cwde
lods
jmp
inc
fdivr
xor
sti
sbb
pop
das
cmps
jmp
std
and
in
cmps
imul
cmp
jno
lock
xor
das
mov
jb
test
xor
and
iret
pusha
dec
scas
out
inc
data16
xor
fwait
test
gs
dec
sub
movs
add
out
dec
outs
mov
adc
sub
mov
lods
or
sar
xor
jg
mov
jp
cs
jl
test
lahf
or
jne
iret
add
or
fisttp
xor
lahf
mov
div
cmp
(bad)
or
add
mov
ror
inc
inc
mov
push
stos
pop
cmp
retf
outs
in
cmp
xor
mov
lahf
movs
push
mov
sub
sub
cmp
imul
lods
adc
jle
adc
cmp
cld
add
stc
aas
into
(bad)
lds
out
dec
mov
xor
fsubr
sub
jno
dec
out
pop
sahf
ret
inc
out
mov
or
mov
push
and
jmp
or
add
rol
repnz
xchg
jb
jb
push
dec
cdq
sbb
jmp
sbb
cmp
jge
jae
sub
cmp
mov
movs
xor
(bad)
in
ins
push
mov
mov
jnp
jae
stos
dec
mov
mov
push
jno
jecxz
pop
jne
dec
inc
jns
push
and
aam
dec
or
test
stos
mov
ja
push
mov
adc
ret
test
adc
lock
(bad)
xchg
dec
loop
sbb
sti
call
or
add
push
(bad)
and
mov
scas
mov
mov
aaa
leave
jmp
jge
pop
jns
pop
push
mov
jae
lods
pop
pop
inc
retf
imul
or
pop
pop
mov
and
adc
rcl
pop
push
sar
sbb
add
dec
push
jmp
sbb
pop
add
adc
mov
das
cmp
outs
jb
jmp
push
pop
mov
aaa
adc
mov
adc
push
inc
in
adc
jge
xchg
sbb
imul
add
repz
imul
add
cdq
es
mov
enter
scas
fnsave
out
add
imul
sub
xchg
rcr
in
(bad)
push
sub
mov
or
stos
rol
arpl
mov
rcr
mov
mov
stos
pop
(bad)
push
sbb
dec
fs
aad
iret
sahf
test
test
in
lfs
inc
jg
pop
mov
push
out
sbb
adc
xchg
mov
ret
push
(bad)
stc
and
sbb
movs
pop
fadd
lea
iret
lods
push
call
push
lods
cmp
xchg
lds
pop
fmul
cli
pop
mov
mov
pop
out
dec
add
inc
aaa
(bad)
lea
sbb
inc
add
and
mov
mov
jnp
xor
jg
xor
xchg
rcr
pop
push
loop
dec
sub
pop
jecxz
mov
dec
mov
scas
cmc
test
jg
rcl
les
scas
ins
add
mov
jne
and
clc
mov
fwait
pusha
lods
leave
mov
les
xlat
mov
sub
es
add
sti
shl
imul
sub
mov
call
xchg
xor
adc
jg
iret
sbb
rol
test
xchg
fidivr
lock
adc
or
cmp
call
jns
dec
call
sub
or
mov
aad
jo
cli
scas
adc
and
and
mov
adc
sbb
jne
add
inc
xchg
fisub
xor
sti
scas
into
das
jge
std
cmps
push
outs
repnz
xchg
jge
jbe
shr
mov
pusha
mov
enter
(bad)
cmp
lds
cmp
jmp
bound
sahf
stos
out
aad
and
mov
dec
es
and
jno
in
add
loop
cmc
std
push
adc
pushf
call
out
xchg
mov
sbb
dec
lds
push
mov
ret
pushf
inc
bound
icebp
test
fcmovu
jmp
aas
sbb
xchg
mov
in
lds
jmp
not
test
or
or
pop
movs
sub
lock
sub
ret
inc
cwde
(bad)
in
sti
nop
mov
and
in
jecxz
pop
int3
ficom
into
push
inc
push
or
and
jge
(bad)
mov
cwde
ror
xor
jbe
(bad)
outs
sbb
ja
je
cmp
leave
push
adc
push
mov
push
pop
xchg
dec
ds
jmp
mov
cmps
sub
add
cmp
and
inc
(bad)
int3
wbinvd
aaa
and
and
div
mov
pop
jmp
jnp
add
ins
pop
test
or
push
sub
repz
push
mov
popf
rol
dec
mov
outs
shl
sub
outs
shr
scas
mov
rcr
inc
repz
jo
iret
out
js
mov
into
(bad)
fisttp
or
push
pandn
mul
nop
xchg
jne
lahf
stos
add
bound
add
popa
addr16
jno
mov
cdq
leave
stos
mov
lods
inc
fcom
sar
and
call
sbb
add
js
xor
jb
lods
mov
and
jmp
cmp
out
gs
or
sti
inc
pop
aad
pop
loopne
cmp
outs
pop
jns
xor
xchg
push
sub
mov
ins
xchg
(bad)
stos
ds
rcr
xchg
jmp
xor
je
pop
es
add
mov
adc
loope
mov
jb
je
das
sti
push
mov
test
aas
sub
push
daa
sub
inc
dec
test
sub
out
ds
or
cmp
sbb
(bad)
sub
leave
movs
icebp
pop
and
ins
jne
mov
(bad)
sbb
jmp
fisub
(bad)
fnstenv
stos
in
mov
jge
or
mov
ficomp
pop
retf
sbb
add
cmc
xchg
ds
jl
adc
xor
adc
cmps
(bad)
ficomp
loope
and
callw
cmp
mov
pop
xchg
sub
pusha
clc
lock
push
or
sbb
jne
int
test
inc
sbb
sub
and
sar
jle
retf
or
mov
enter
jne
and
mov
(bad)
scas
movs
into
jns
(bad)
clc
xor
pop
cwde
jmp
lock
mov
xor
jne
retf
loopne
dec
sbb
or
jmp
enter
iret
mov
push
es
pop
mov
mov
int3
xor
or
mov
jge
cmp
dec
pop
mov
test
xor
stc
repnz
repnz
iret
(bad)
add
fidivr
out
add
mov
jnp
aad
mov
fcomi
or
in
sti
sar
test
xor
sbb
mov
mov
aad
cs
popf
pop
or
adc
adc
lea
push
xor
jb
(bad)
sbb
jns
mov
cmp
push
pusha
inc
pop
mov
pop
jmp
jmp
or
mov
xchg
mov
xor
mov
cmp
pop
pusha
pop
inc
jmp
test
repnz
mov
cmc
mov
xchg
lods
xchg
add
and
mov
xchg
into
mov
in
xor
js
inc
data16
push
push
push
xlat
dec
and
sub
sub
xchg
das
hlt
cld
inc
repz
dec
pop
iret
or
pop
enter
sub
loopne
jns
sbb
push
add
and
sub
icebp
or
test
and
push
out
aad
and
and
push
lods
ja
xchg
xlat
adc
mov
cdq
sub
loop
or
idiv
cmp
test
pop
add
mov
stos
std
cmp
sub
ss
lahf
cdq
cmp
cmps
out
push
jp
add
aad
fs
sub
ins
adc
xchg
adc
retf
mov
push
iret
out
mov
adc
sub
or
and
dec
push
mov
cmc
cmc
jle
or
popa
cmp
aam
pop
mov
outs
in
add
adc
pop
sub
cmp
jge
iret
add
xchg
ror
xchg
jge
sbb
cld
sub
das
push
xchg
jecxz
aas
lods
push
enter
in
push
xor
adc
pop
out
mov
lods
push
mov
iret
lea
adc
(bad)
dec
mov
aad
sti
add
stc
sub
pop
retf
sub
pushf
je
cld
lahf
sub
jmp
sbb
in
cmps
nop
clc
scas
mov
add
jbe
mov
aas
ja
sub
and
retf
repz
jl
ret
inc
or
add
xlat
sub
std
fdiv
add
adc
ss
repnz
std
rcl
adc
mov
push
and
cmovb
sbb
pushf
sub
and
fdivr
mov
test
inc
gs
lahf
and
inc
cmc
cmps
dec
(bad)
cwde
lds
jne
retf
sub
xchg
inc
inc
inc
gs
jns
jecxz
addr16
ins
jmp
jmp
dec
mov
push
fsubr
fstp
neg
in
scas
test
es
and
and
dec
lahf
sbb
stc
adc
jnp
test
push
outs
mov
sub
xor
lds
cmp
mov
xor
js
arpl
(bad)
(bad)
rol
fsub
imul
mov
mov
add
cld
(bad)
jecxz
test
push
pop
pop
aas
ror
adc
jne
movs
imul
aad
mov
mov
mov
jmp
push
mov
(bad)
or
fild
sub
ds
es
cmps
push
mov
mov
inc
adc
inc
xchg
loope
shl
data16
jno
pop
push
and
add
add
dec
(bad)
ficom
mov
cwde
xchg
jbe
and
es
push
or
loop
add
sub
xchg
sub
scas
cld
push
(bad)
sub
mov
inc
cmps
js
cmp
jbe
jb
or
fdivr
xchg
xor
pop
and
xchg
ins
cmc
mov
out
(bad)
pop
lock
neg
int3
fiadd
outs
xchg
popf
sbb
push
push
int
or
enter
fcmovbe
cs
and
mov
loopne
mov
mov
dec
inc
and
or
jecxz
sbb
pop
mov
sbb
inc
dec
(bad)
shl
je
add
jae
js
and
and
imul
cmps
push
push
or
jecxz
(bad)
fnstcw
mov
xor
mov
mov
and
lods
mov
test
jmp
scas
push
scas
pusha
and
jle
lahf
add
sub
mov
pushf
das
ss
(bad)
fadd
mov
fwait
sbb
mov
xor
cmp
xchg
jae
movs
mov
cmp
imul
cmp
sub
das
not
or
xchg
lods
adc
stc
sbb
dec
dec
xor
sub
loopne
jne
aam
cld
not
rol
icebp
call
mov
jle
mov
paddw
mov
mov
adc
jmp
inc
push
lea
loop
ret
fistp
mov
into
inc
outs
stc
push
mov
into
pushf
loope
je
imul
dec
data16
out
aas
xchg
bound
jmp
sbb
ds
xchg
xor
ret
loopne
jnp
std
pop
hlt
mov
mov
add
xor
in
push
jge
aaa
dec
test
mov
in
mov
inc
mov
pop
inc
jno
adc
movs
lods
mov
aam
stos
xchg
push
es
or
retf
push
stc
xchg
in
inc
and
xor
int3
int3
jle
and
inc
retf
movs
ret
rep
(bad)
sbb
je
sub
std
addr16
xlat
hlt
fist
pusha
xchg
cli
outs
ss
and
xchg
dec
push
in
or
xchg
lds
out
bnd
sbb
sub
push
scas
icebp
cmp
cdq
and
inc
mov
call
popf
mov
mov
lahf
in
push
mov
in
hlt
xchg
loope
jns
sar
aaa
mov
push
imul
shr
fld
adc
bound
mov
sub
cmp
adc
aam
imul
iret
outs
jmp
push
iret
dec
jnp
inc
repnz
add
or
sub
ror
repz
sbb
les
dec
(bad)
stc
sub
out
enter
das
jnp
fimul
mov
test
mov
cmp
dec
fsub
xlat
shl
xlat
sbb
into
lds
push
xchg
stos
push
stos
mov
gs
or
bound
call
cdq
jne
cld
pop
cmp
ins
jb
fs
sub
mov
pop
loop
ja
mov
xor
call
inc
imul
pop
aad
sbb
jb
xor
xor
call
push
sub
cmp
leave
fbld
std
sub
and
jno
bound
shl
mov
aas
inc
in
test
fistp
sub
leave
mov
imul
sub
jns
jp
mov
or
push
cs
jo
test
sub
or
or
mov
aam
xchg
inc
iret
popa
imul
outs
xchg
inc
leave
or
xchg
dec
test
xchg
in
jno
cmp
pop
fcmovu
popf
push
fst
xlat
xchg
push
stos
inc
scas
movs
mov
inc
xchg
push
lock
adc
in
adc
repnz
pop
stos
mov
addr16
into
int3
mov
and
out
popa
daa
mov
mov
and
adc
xor
xchg
jae
adc
xor
push
cmps
sub
fcmovu
pop
jnp
and
or
in
cli
aam
(bad)
mov
xor
or
rol
cwde
sbb
fimul
leave
xor
jecxz
inc
adc
or
or
bound
mov
lea
ret
jecxz
mov
imul
push
and
(bad)
jp
adc
cmp
mov
ror
sbb
adc
ins
ret
cmc
call
pushf
(bad)
popf
xor
or
fsub
mov
test
sub
movs
mov
das
scas
cmps
nop
rcl
(bad)
pushf
cmp
fld
sub
icebp
sub
jg
push
dec
sub
sub
pop
and
cmp
push
mov
movs
xchg
mov
inc
movs
(bad)
push
push
xor
cs
(bad)
xor
int
imul
xchg
and
xor
dec
pop
cmp
jecxz
and
cmp
je
push
xor
jnp
es
sub
inc
lea
imul
push
sbb
mov
call
inc
aaa
and
inc
xchg
jno
jecxz
lods
mov
jmp
jl
mov
xchg
retf
inc
cmps
test
lahf
cld
adc
mov
cld
je
ror
xchg
(bad)
das
cmp
mov
add
test
pop
adc
mov
cmp
jnp
out
dec
and
loop
xor
sar
adc
js
pop
aad
cmp
call
pop
scas
jae
imul
(bad)
dec
mov
push
pushf
jno
inc
adc
hlt
fdiv
cmps
mov
test
aas
loop
xchg
in
test
cli
pop
les
xchg
in
mov
and
mov
loope
inc
cmp
add
je
call
imul
ror
ins
jno
(bad)
xchg
fs
mov
mov
shl
call
out
and
xchg
sub
or
outs
push
(bad)
fisub
xchg
aaa
(bad)
push
lea
test
push
push
fsubr
dec
or
pop
xchg
add
mov
rol
ds
mov
mov
loop
fnsave
fnstsw
fdivr
(bad)
fstp
dec
(bad)
and
mov
and
fild
mov
inc
leave
and
add
jne
xor
xchg
mov
sahf
into
in
inc
stc
sub
aaa
adc
rcl
pop
sahf
out
aam
leave
mov
and
push
or
dec
lods
mov
xor
outs
leave
cwde
lea
sbb
xor
popf
xchg
inc
cwde
mov
lea
adc
inc
fisub
pushf
ret
xor
xor
fist
(bad)
pop
inc
mov
shl
test
push
aad
add
movs
xor
hlt
(bad)
retf
aam
call
loop
xor
mov
sub
test
jle
mov
outs
and
dec
dec
cmc
pusha
mov
ss
ret
xlat
adc
dec
pop
push
sti
(bad)
arpl
and
adc
mov
cmp
mov
dec
sbb
mov
fldenv
test
dec
xchg
dec
es
in
jmp
mov
pop
popa
push
sbb
(bad)
and
movs
cmp
call
fidiv
adc
lods
sub
mov
mov
mov
cmp
das
dec
pop
popa
sbb
jbe
dec
mov
push
sti
inc
adc
sub
sub
call
mov
icebp
cmp
jne
mov
pushf
cmp
jp
mov
jae
test
jno
mov
(bad)
dec
outs
test
xchg
int3
stc
out
idiv
mov
inc
jmp
xchg
push
ret
pop
scas
xor
js
jbe
add
adc
xchg
push
rcl
pop
mov
pop
jnp
rcr
dec
call
jecxz
adc
jnp
imul
adc
and
mov
(bad)
rep
out
dec
js
stos
mov
push
xor
out
movs
repz
jmp
jae
mov
lea
xor
mov
leave
sub
inc
adc
mov
fs
fidiv
cld
xor
pop
push
fs
fidiv
(bad)
push
scas
jo
jmp
mov
je
out
sbb
pop
jbe
inc
xchg
xchg
mov
xor
rcl
rol
pop
mov
sbb
add
aam
pop
mov
loopne
mov
xor
jb
add
mov
push
mov
mov
xchg
and
outs
loope
sti
es
push
pop
mov
loop
and
mov
test
icebp
rcl
out
pop
cwde
jp
imul
jo
jp
outs
ret
mov
shl
je
daa
pop
sbb
mov
push
in
std
xchg
scas
data16
mov
leave
repnz
dec
stc
xchg
ret
mov
popa
mov
pop
pop
ret
cmp
mov
mov
test
mov
imul
stos
scas
dec
jge
sbb
pop
jns
inc
mov
out
stc
pop
sub
fidivr
sub
jmp
pop
xchg
jne
les
jno
xor
jb
cmc
and
sbb
in
das
xchg
sbb
lods
jp
out
mov
adc
sub
cs
dec
xchg
sub
adc
movs
dec
jmp
push
jecxz
xor
loope
and
cdq
ds
aam
push
xor
ror
mov
fwait
jae
sti
cmp
jp
in
cmp
cmp
pop
push
jecxz
iret
test
lods
imul
mov
test
gs
pop
pop
out
lea
jcxz
dec
lea
xor
pop
fsubr
shr
push
mov
aaa
adc
daa
(bad)
sub
push
es
mul
mov
mov
(bad)
dec
pop
loop
arpl
adc
xor
push
pop
ins
aaa
ror
(bad)
cdq
arpl
xor
or
dec
(bad)
scas
fs
push
mov
bound
jmp
push
mov
mov
outs
add
dec
mov
mov
or
ins
sahf
in
sbb
inc
sbb
in
cmp
(bad)
sahf
sbb
jl
hlt
inc
test
cs
cs
aas
jp
jmp
test
ds
lds
add
jnp
xchg
sbb
cmc
call
dec
aaa
outs
mov
jmp
cmc
test
xchg
add
dec
lock
in
push
arpl
xchg
mov
cld
mov
test
inc
aad
imul
add
mov
sbb
pushf
(bad)
cld
dec
std
adc
sub
dec
lds
push
mov
dec
mov
cmp
imul
adc
pusha
movs
jl
call
sub
das
sahf
pop
dec
mov
xor
mov
int
push
mov
out
inc
lods
aas
cmp
jge
ins
pushf
fucom
in
stos
inc
sar
les
js
mov
or
pop
inc
test
fld
or
xchg
ror
or
pop
int3
out
push
mov
ins
aas
inc
(bad)
outs
inc
aam
jmp
sti
call
stos
xor
jmp
push
repnz
cs
mov
mov
push
je
(bad)
loope
dec
pop
mov
loop
aaa
mov
js
jge
leave
push
fdiv
mov
lods
fstp
enter
jle
push
aam
leave
add
cmps
popf
jo
aas
pop
sub
mov
fstp
popf
in
cmp
and
shr
dec
jl
movs
ins
lods
in
in
sub
call
xchg
das
sbb
or
rcr
jae
movs
inc
mov
rcl
loopne
ins
and
cmp
fiadd
xchg
push
jge
push
aam
aad
std
shl
lods
or
mov
icebp
pop
sub
mov
test
sahf
mov
lds
xor
(bad)
sti
mov
jle
push
sti
cmp
shl
pop
cmc
push
mov
outs
inc
fcmovu
and
lea
push
jge
fnstcw
xor
(bad)
fisubr
rcr
jmp
mov
or
ss
ds
das
out
test
loope
gs
fimul
aaa
push
and
or
xor
das
or
adc
inc
cmp
mov
test
push
sub
fimul
jge
cmp
add
inc
cwde
test
clc
mov
shr
and
push
pop
push
clc
pop
arpl
xchg
jae
rcl
push
mov
out
fsub
iret
pop
mov
xchg
fwait
adc
rcr
adc
push
clc
in
into
xchg
popa
test
rol
scas
fstp
xchg
sub
push
mov
mov
into
xor
call
mov
loope
or
pop
adc
adc
sbb
push
sub
mov
cli
inc
mov
dec
inc
pop
scas
cmp
pop
stc
mov
xlat
add
ds
inc
add
xor
jp
rol
dec
inc
mov
lods
mov
out
mov
adc
or
inc
xlat
dec
ins
jae
mov
mov
adc
pop
mov
jg
or
les
xor
iret
xchg
clc
jmp
idiv
xchg
call
mov
mov
fiadd
std
loop
std
adc
mov
mov
popf
xor
push
pop
je
fadd
or
or
cmps
aad
dec
mov
sbb
add
int3
adc
mov
mul
movs
dec
sahf
mov
or
rcl
into
dec
ficomp
sbb
fcmove
fidivr
call
adc
pop
xchg
or
jp
fcom
adc
movs
lock
sti
mov
mov
xchg
sbb
es
sar
push
cli
pop
xchg
in
lahf
sbb
ror
(bad)
cmp
pop
sub
adc
jge
sbb
lods
outs
imul
mov
jbe
test
dec
in
pop
sub
jge
xor
add
dec
pop
jbe
sbb
or
mov
iret
les
addr16
mov
dec
rcr
push
pop
mov
loopne
lods
or
and
dec
(bad)
push
repz
mov
ds
fiadd
or
lds
mul
fmul
push
or
cmc
nop
popa
stos
(bad)
daa
loopne
jle
add
sub
imul
jle
pop
jg
add
sub
mov
scas
pop
cwde
test
jg
das
jne
pop
xor
and
mov
xlat
pcmpgtw
add
fisttp
jmp
sbb
xor
fsubr
lock
pop
or
ss
jl
adc
clc
push
cmp
test
dec
paddb
js
mov
clc
push
out
test
js
sbb
dec
push
jp
pop
or
rol
mov
movs
lods
mov
jp
pushf
sub
push
pop
pop
dec
push
rcl
out
push
shr
sar
outs
xchg
sub
lods
sub
out
ja
out
jo
xor
inc
mov
cwde
jle
pop
pop
sbb
(bad)
adc
pop
popf
mov
fs
in
jmp
xor
je
(bad)
mov
push
push
dec
jns
(bad)
in
jmp
or
sub
test
mov
add
aam
leave
mov
ror
lods
ins
dec
or
push
scas
shl
mov
shl
inc
loop
mov
ins
lahf
mov
das
jb
dec
jmp
dec
dec
leave
div
xchg
push
push
xor
js
or
and
cmp
out
and
das
test
jl
xlat
pop
mov
mov
mov
mov
xor
sub
arpl
mov
xchg
outs
pop
adc
mov
mov
arpl
and
mov
fs
cmp
jecxz
pop
aam
lds
cmps
ins
lods
cwde
int3
or
or
xlat
or
push
icebp
mov
fwait
xor
jecxz
dec
mov
inc
cmp
test
enter
push
mov
test
xchg
pop
sbb
or
jb
or
(bad)
sti
jns
pop
cs
pop
(bad)
mov
or
xor
mov
mov
das
psubusw
adc
in
sar
pop
jbe
mov
push
fstp
test
retf
std
push
inc
leave
inc
pop
sar
fdiv
push
xchg
gs
(bad)
addr16
fimul
xchg
les
lods
scas
or
cmp
call
call
push
retf
and
(bad)
in
jecxz
imul
adc
jmp
xchg
adc
outs
push
or
or
or
mov
retf
mov
leave
pop
xchg
imul
into
push
or
xchg
adc
cmps
inc
mov
fcmove
and
push
jp
repz
inc
in
or
setp
jno
xor
dec
sub
ins
jl
in
enter
xchg
sub
lods
(bad)
(bad)
xlat
lds
xchg
loope
jmp
movs
xor
and
repz
xchg
(bad)
in
mov
pop
adc
jg
xor
xchg
pop
test
aaa
bound
mov
xchg
and
mov
mov
leave
test
outs
sbb
add
cmc
dec
push
mov
dec
call
jp
xor
pusha
jmp
inc
push
(bad)
sbb
je
shl
dec
das
sub
fs
mov
pop
dec
imul
inc
sub
mov
jne
sti
mov
pop
xchg
xor
xchg
ja
sbb
retf
(bad)
out
stos
pop
jno
sahf
ja
push
push
cmps
jns
or
(bad)
fmul
imul
rcr
mov
push
repnz
movs
scas
pushf
pop
in
inc
adc
std
sub
inc
popa
push
inc
iret
add
mov
int
xchg
clc
dec
es
mov
pop
cmp
enter
aad
addr16
imul
or
mov
adc
mov
cs
xlat
sbb
mov
mov
xor
in
mov
aam
push
add
add
pop
xor
xchg
imul
jl
cmc
div
and
sub
mov
mov
mov
scas
shl
inc
pop
jle
jae
leave
jg
dec
pop
mov
in
retf
jbe
daa
or
sti
jmp
enter
jo
loope
outs
push
mov
and
cmc
pusha
mov
daa
push
enter
lahf
dec
mov
sbb
mov
cwde
push
enter
pop
outs
rcr
call
cmp
add
stc
aas
es
les
jl
stos
xor
jg
push
and
jmp
and
pop
aad
jb
sbb
ja
pop
dec
dec
dec
mov
icebp
inc
cmp
pusha
mov
retf
out
leave
icebp
push
shl
aam
stos
es
inc
mov
out
or
ret
mov
and
xchg
dec
test
jge
cmp
jne
add
adc
push
ror
aam
fldcw
xor
fbld
and
sub
jns
xchg
sbb
mov
push
xchg
or
test
fmul
mov
into
cmp
xchg
out
stos
add
call
dec
imul
pop
int3
neg
push
jo
hlt
sub
inc
outs
popf
in
mov
das
xchg
add
pushf
aad
dec
jp
jae
lahf
add
pusha
cld
mov
mov
cmp
and
jo
fwait
fwait
shl
pop
push
adc
xor
push
icebp
popa
xchg
inc
xchg
add
xor
fisubr
ja
fxch
std
xchg
add
stos
push
jae
(bad)
ins
cmp
sub
sbb
sub
push
shl
cmp
test
enter
fndisi(8087
cmp
mul
inc
dec
push
js
add
jb
hlt
adc
and
push
enter
fs
dec
out
pop
int3
scas
daa
fdiv
aas
rol
bound
xchg
neg
jmp
es
xchg
lea
push
lods
and
in
pop
fstp
pop
shl
test
test
shr
sbb
lock
lds
pop
xchg
sbb
sub
cmp
call
das
test
leave
scas
pop
sub
fdiv
rol
sbb
lods
adc
pushf
repz
add
mov
push
cmp
sbb
or
sbb
aam
push
not
push
dec
icebp
clc
pop
jb
dec
std
mov
mov
stc
and
or
cmp
daa
inc
fmulp
push
pop
loope
mov
mov
pop
movs
nop
lods
sub
out
pop
call
sti
sub
xchg
mov
out
mov
stos
lds
pop
das
jns
adc
cmps
pushf
sub
call
outs
push
aad
shl
js
jnp
pop
adc
imul
out
je
js
inc
pop
pop
repz
lahf
jge
mov
fyl2xp1
aaa
retf
loop
and
arpl
xchg
xchg
mov
xlat
test
and
jnp
or
lds
mov
lock
push
(bad)
ror
ds
ds
mov
mov
movs
scas
mov
xchg
lahf
xor
adc
sbb
test
les
or
add
(bad)
cwde
xchg
loope
pop
dec
rcl
mov
inc
jl
(bad)
xlat
xchg
mov
cdq
inc
cdq
jp
cmc
addr16
ror
inc
(bad)
ss
push
and
ret
cwde
ss
xor
xor
scas
movs
(bad)
pop
nop
ror
shl
sbb
xor
cmp
mov
int3
sbb
cmp
pop
sbb
cmp
in
lods
sar
test
out
push
xchg
cli
cmp
mov
push
iret
jns
fs
movs
ss
or
stos
imul
xor
mov
cmp
jbe
into
mov
adc
push
sbb
addr16
cld
rcr
sub
add
adc
xor
les
mov
xchg
aas
lods
xchg
xor
lods
jp
xor
dec
cs
lea
les
sbb
pop
out
or
stos
sbb
sub
jle
fist
push
scas
fdivr
das
pop
push
mov
test
cwde
scas
lds
in
mov
jge
movs
mov
add
shl
xor
loope
xor
and
or
out
retf
aaa
cmp
ins
fwait
(bad)
jmp
(bad)
repz
push
enter
sbb
mov
cli
mov
(bad)
pop
dec
sti
shl
sar
mov
pop
xchg
stos
ja
dec
xchg
int3
pop
adc
push
das
arpl
arpl
dec
nop
call
scas
xchg
daa
pop
into
dec
ss
mov
sbb
sbb
sub
cmp
and
mov
push
bnd
out
mov
dec
enter
push
mov
fldpi
or
jecxz
dec
adc
sub
inc
adc
fidivr
inc
cmps
in
stos
pop
dec
add
cdq
mov
adc
sub
cmps
inc
add
jmp
push
cmp
imul
rcl
sbb
sar
cld
call
xor
stos
loop
mov
pop
or
pop
popa
pop
icebp
nop
sub
adc
adc
mov
imul
test
movs
mov
scas
sbb
mov
arpl
jns
cmp
or
aad
loop
cmc
popf
scas
dec
jae
pusha
in
out
out
in
sbb
xchg
sub
test
adc
xchg
add
imul
mov
mov
adc
out
sbb
sti
pop
pusha
xchg
pop
cmp
sub
mov
test
stos
adc
(bad)
sahf
push
fadd
lds
ja
test
jg
sbb
mov
add
stc
xor
popf
scas
adc
and
xchg
add
and
in
fimul
xor
sub
in
mov
cmc
or
cwde
aam
add
outs
add
out
mov
and
(bad)
push
jns
test
pop
add
xchg
jmpw
and
cmps
mov
in
jb
cmps
rcr
popa
cmp
mov
dec
daa
inc
aas
xor
aas
inc
das
(bad)
sub
leave
mov
sub
and
fst
loop
stos
mov
cmp
pop
adc
jmp
stos
dec
mov
das
pushf
inc
cdq
mov
test
add
jl
ret
pop
mov
lods
aam
xor
inc
inc
es
shl
mov
sub
mov
cmc
lods
or
stos
cmp
addr16
mov
add
cmp
mov
sbb
pop
aas
or
pop
cli
in
sti
(bad)
pop
xor
adc
ss
mov
mov
test
xor
mov
ins
lea
xchg
in
shl
icebp
cmp
leave
jecxz
xor
inc
sbb
xor
ss
arpl
push
push
mov
add
and
mov
inc
or
adc
les
cdq
sar
stos
jb
out
pop
cmp
jmp
mov
call
pop
jb
cmp
lds
inc
cwde
dec
mov
xor
out
push
cmp
aam
sub
ret
push
push
dec
mov
jns
jmp
xchg
pop
mov
out
add
cmps
stos
cmp
(bad)
clc
add
inc
call
push
cmp
fcom
ficom
xor
mov
ss
mov
mov
ss
pop
into
mov
cmps
fisub
int3
stc
jno
imul
cmp
and
(bad)
lods
mov
pop
inc
sub
pop
sti
cmc
jecxz
cmp
cli
inc
call
sbb
ins
jno
outs
or
sub
sub
sbb
pop
cmps
or
mov
bound
lock
call
sub
xchg
jg
or
repz
hlt
mov
jno
in
ret
data16
sahf
mov
into
into
in
fiadd
aas
and
or
mov
dec
shr
fwait
push
xchg
sbb
sbb
push
fs
jbe
retf
inc
cld
mov
inc
mov
mov
popf
jb
dec
or
int
mov
mov
add
push
cmps
push
mov
popa
push
jbe
jnp
or
ret
or
push
inc
ds
imul
inc
ret
ds
movs
push
xchg
into
popf
cmp
daa
cvtps2pd
bound
jo
pop
stos
les
jmp
sti
mov
push
and
aad
dec
jae
cmp
sub
mov
movs
jmp
pop
je
mov
pop
xlat
mov
sub
inc
scas
jp
repz
push
pop
sbb
sub
xchg
mov
mov
das
ins
and
call
dec
pop
xchg
repnz
jle
mov
test
dec
nop
cmp
cmp
inc
jne
ror
dec
scas
or
and
(bad)
mov
or
mov
iret
(bad)
fstp
aad
jle
in
(bad)
cdq
not
(bad)
in
or
push
int3
fnstcw
inc
xor
xlat
aaa
xor
inc
jo
mov
mov
dec
xchg
push
(bad)
xor
add
xchg
daa
cmp
in
xlat
div
scas
mov
and
mov
jno
pop
sub
cmp
mov
dec
pop
push
les
inc
sbb
in
stos
cmps
jmp
jmp
mov
icebp
out
inc
scas
cmps
mov
jp
into
sar
in
clc
mov
xor
push
jno
xor
pop
jae
aad
jb
fs
mov
aam
xor
push
out
inc
dec
cmp
popf
mov
leave
pop
jmp
jmp
call
inc
shl
es
and
or
jnp
rol
sub
sahf
inc
xor
adc
or
inc
(bad)
out
aam
fild
cmps
cmc
imul
test
(bad)
(bad)
(bad)
push
fidiv
ror
mov
add
shl
inc
inc
iret
inc
call
dec
pushf
cwde
pop
mov
dec
xchg
sbb
loopne
xor
and
dec
lods
aaa
(bad)
xor
js
mov
ja
dec
xor
in
mov
push
add
ss
mov
and
call
push
stos
mul
jb
push
inc
pop
stc
stos
cmp
dec
rcr
add
jle
xchg
sbb
es
mov
gs
sbb
fcmovu
(bad)
pusha
or
mov
sbb
push
xlat
mov
movs
sbb
hlt
call
jne
test
lock
bound
test
xor
stc
das
je
call
push
jo
cmc
xchg
fstp
ss
sbb
push
cmp
inc
xchg
into
xor
push
imul
(bad)
cmp
mov
mov
das
addr16
mov
fidivr
(bad)
test
scas
paddusb
fild
(bad)
mov
mov
mov
ja
nop
rcr
idiv
hlt
inc
gs
popa
lods
dec
jmp
dec
outs
enter
pop
std
imul
in
or
clc
jmp
sub
(bad)
nop
jg
(bad)
sar
mov
add
adc
inc
test
mov
cmc
push
mov
adc
loope
stc
push
repz
jl
out
arpl
(bad)
pop
xor
inc
repnz
ret
mov
repnz
scas
daa
cwde
jecxz
fnstsw
outs
adc
cmps
js
jb
pushf
xor
or
push
cmps
movs
ret
ror
pop
sub
repz
repnz
jo
sar
mov
mov
jp
aam
idiv
sbb
xchg
and
and
and
push
fmul
push
daa
lods
pop
add
lods
je
inc
clc
dec
neg
pop
cwde
in
cmp
movs
mov
shr
mov
in
xor
aaa
add
add
mov
ret
lahf
je
movs
stos
repnz
fild
outs
sub
mov
adc
in
ins
mov
outs
inc
movs
(bad)
imul
repz
xlat
cmps
ins
in
mov
mov
cmp
addr16
fsub
mov
les
dec
movs
rcl
add
xchg
ret
cmps
(bad)
push
lods
scas
xor
pushf
ret
jne
inc
in
sub
popa
xchg
jg
lock
push
stos
xchg
retf
retf
stos
mov
test
mov
push
leave
inc
dec
cmp
inc
bound
mov
and
loopne
repz
outs
mov
mov
in
adc
xchg
rol
xchg
sbb
xchg
ror
cmp
das
pop
loopne
xor
xchg
pop
push
sbb
push
lahf
inc
icebp
mov
data16
jns
loop
inc
ret
fsubr
ins
enter
mov
mov
push
test
mov
inc
jo
mov
mov
xchg
das
add
ficom
hlt
xchg
mov
sub
dec
fild
and
pop
imul
jb
dec
push
sbb
inc
pusha
jnp
pusha
pop
jmp
push
mov
sahf
jp
sbb
jno
pop
push
bound
stos
pusha
sub
xor
jge
movs
ja
jmp
aad
sbb
jmp
ins
cmp
inc
mov
outs
shl
fsubr
mov
sbb
loopne
adc
xchg
or
(bad)
push
mov
pusha
shr
pop
jo
xor
js
ds
and
pop
jb
push
mov
mov
std
push
xor
adc
mov
adc
cmps
ss
or
xchg
nop
jp
enter
jl
pop
push
dec
retf
ficomp
fcom
(bad)
cmp
xor
cmp
sti
cmp
cmp
jge
sub
mov
dec
shl
push
rol
or
out
jmp
push
ins
js
jmp
or
mov
and
mov
nop
lods
stos
pop
mov
jno
(bad)
mov
fimul
test
or
sub
and
aaa
xor
or
push
jno
xor
pushf
aas
cmps
lods
out
test
in
add
sub
push
mov
push
jno
mov
popa
outs
sahf
mov
pop
mov
loop
(bad)
sub
loope
cmp
dec
cmps
push
pop
dec
out
pop
pop
xor
xchg
mov
mov
add
or
mov
add
jle
xor
icebp
pop
ins
pop
idiv
jno
clc
int
sub
fstp
idiv
push
(bad)
mov
mov
sub
push
cmps
push
add
fs
xlat
push
imul
add
xlat
jle
retf
add
push
retf
dec
or
call
or
test
in
ror
shl
popf
jle
(bad)
jge
push
aam
pop
in
jmp
inc
xor
xchg
rol
lock
call
scas
inc
int3
std
mov
leave
pop
xchg
mov
ja
into
dec
out
gs
push
mov
je
add
dec
mov
or
std
(bad)
cmps
dec
mov
xor
mov
jg
(bad)
shl
loope
jmp
movs
rcr
or
xor
das
ins
pop
adc
movs
jno
push
stos
sub
inc
jmp
xchg
scas
inc
or
xchg
xchg
cmp
or
xor
cwde
push
or
fstp
sbb
rcr
loope
dec
out
xchg
mov
inc
or
push
xchg
mov
out
push
enter
xchg
aam
mov
sub
les
clc
pop
pop
xchg
stc
dec
xchg
sub
outs
cwde
inc
cmps
push
sbb
or
lods
dec
(bad)
mov
(bad)
in
adc
jp
lea
adc
xor
in
fiadd
(bad)
std
sbb
aaa
jmp
bound
cmp
int
push
and
jge
sub
outs
js
sbb
ret
dec
ins
xchg
mov
jge
mov
lds
repz
loop
aaa
pop
mov
mov
fs
sub
add
fwait
test
xchg
and
add
aaa
pop
rcl
(bad)
xchg
xchg
add
jmp
cmp
(bad)
cdq
call
push
cli
fs
and
and
jl
ja
js
mov
icebp
pop
das
mov
mov
rcl
inc
movs
adc
js
pop
and
pop
fcom
inc
(bad)
nop
mov
xor
sub
cmps
retf
rcl
push
popf
test
loopne
ins
fistp
sub
pop
xchg
fist
scas
(bad)
add
pop
sub
push
ja
fwait
and
mov
jno
xor
aam
pop
test
(bad)
mov
dec
push
call
add
daa
cmp
xor
inc
cmps
(bad)
jne
es
repnz
stos
sahf
mov
sahf
push
mov
inc
jnp
mov
in
inc
xor
mov
or
movs
daa
rol
repnz
mov
adc
test
mov
xchg
ins
sub
adc
add
cmp
xchg
mov
pop
mov
fs
aam
test
out
hlt
comiss
mov
stc
popa
inc
jle
sbb
pushf
outs
or
xor
jge
xchg
cmps
mov
aaa
inc
xchg
emms
dec
push
popf
addr16
ror
inc
aaa
test
stos
mov
movs
xlat
xchg
mov
repz
inc
inc
outs
inc
es
jmp
dec
call
push
fcom
ret
jb
add
mov
call
test
dec
movs
add
call
fidiv
push
push
lods
sahf
iret
dec
mov
lods
mov
gs
iret
or
lods
fistp
retf
sbb
jno
fs
push
jp
xlat
inc
jo
dec
mov
inc
adc
jb
(bad)
(bad)
adc
stc
out
pop
mov
sahf
cmp
std
(bad)
test
dec
(bad)
xor
retf
dec
popf
jge
cmp
mov
sbb
(bad)
popf
stos
sbb
(bad)
leave
cdq
pushf
xchg
xlat
mov
pop
test
bound
push
imul
add
in
dec
dec
jns
pop
stc
jae
xor
jne
pop
mov
xchg
(bad)
or
adc
cmps
pushf
and
cwde
jae
sar
inc
and
enter
pop
pop
retf
jnp
add
inc
sbb
jg
push
pop
jp
sub
dec
add
xor
jge
xchg
sub
cmps
cmp
jb
jge
mov
lock
dec
out
jbe
dec
call
xchg
in
(bad)
in
cmps
loopne
or
imul
inc
(bad)
jmp
sahf
adc
and
dec
sbb
movs
aas
icebp
mov
movs
sti
cmp
and
icebp
fcmove
cli
xchg
push
test
dec
and
sbb
cmp
inc
and
dec
push
ss
jns
call
call
cld
bound
pop
mov
pop
jns
mov
add
dec
push
stos
sub
dec
lea
sbb
xchg
fadd
pop
add
ds
push
cmp
xor
addr16
pop
jg
pop
inc
shl
lahf
fwait
retf
ss
cmp
(bad)
adc
push
pop
dec
push
mov
and
jne
sub
sbb
es
or
sub
xchg
test
ret
mov
imul
jno
lods
add
pushf
fst
inc
or
push
xchg
or
call
sub
sub
inc
pop
pop
imul
cmps
cmps
cdq
lock
clc
out
add
jns
mov
push
adc
lods
sbb
lahf
pop
in
int
das
or
(bad)
adc
out
rol
jecxz
(bad)
cli
xor
pop
movs
ins
mov
cmps
cld
cmp
lea
sub
sahf
sbb
sahf
add
add
rcl
inc
pushf
mov
int3
(bad)
fisubr
stc
add
loop
add
sbb
test
add
push
adc
xor
movs
imul
es
pushf
enter
mov
retf
mov
adc
dec
shl
sub
sbb
mov
pop
(bad)
jmp
or
sti
adc
mov
bound
mov
inc
ins
ret
xlat
test
mov
mov
data16
mov
fisubr
ja
dec
int
imul
sub
imul
hlt
in
dec
mov
gs
gs
cmp
leave
adc
enter
cld
mov
repnz
fst
sbb
mov
cwde
add
cs
jmp
rol
push
pop
push
and
adc
jge
or
in
or
fnsave
test
popa
imul
into
sbb
sub
ret
push
loope
je
xchg
ins
int
add
(bad)
xor
enter
push
mov
stc
xchg
pop
shl
fwait
xchg
pop
cmp
push
mov
popf
inc
retf
imul
ret
mov
xchg
pushf
inc
test
je
aaa
out
rcl
int3
out
mov
mov
sub
cmps
(bad)
test
xchg
add
sub
ret
mov
fcom
push
lock
stos
jb
scas
data16
xchg
push
inc
or
jmp
popa
dec
test
add
pusha
sahf
push
(bad)
outs
inc
call
pop
ins
jns
cmps
and
fsub
or
(bad)
js
xor
pop
and
add
mov
mov
or
ret
inc
retf
adc
sbb
pop
int3
mov
and
adc
fisub
fs
and
mov
(bad)
out
jae
mov
adc
pop
mov
and
push
pop
xchg
retf
addr16
repz
mov
pop
mov
repnz
in
mov
pusha
outs
xor
std
mov
aam
mov
push
mov
xor
xchg
pop
cmc
lds
loop
mov
add
jmp
inc
aaa
pop
mov
test
mov
adc
js
pop
mov
dec
aad
and
cmp
ins
xor
push
push
in
jno
mov
and
dec
pop
jns
jmp
cmp
daa
jge
stos
and
(bad)
pop
(bad)
jg
jno
cmp
jae
ins
xchg
sar
loope
inc
loope
test
cmp
fisttp
(bad)
push
shr
out
(bad)
jg
fldcw
add
cmp
aas
mov
das
sub
adc
fdivr
aad
fnsave
and
sub
mov
cmps
jae
mov
ss
clts
and
jne
xor
(bad)
test
mov
retf
popf
outs
push
mov
es
repz
rol
into
(bad)
and
(bad)
mov
mov
fsubr
adc
shr
inc
fdivr
adc
movs
dec
cwde
xchg
add
ficomp
in
cmps
sahf
xchg
xor
cmp
xor
add
mov
sahf
ja
jmp
jbe
ja
sub
xchg
popf
cmp
into
iret
xchg
lods
and
mov
int3
and
loop
jecxz
popf
mov
mov
push
jns
adc
mov
fmulp
adc
gs
lahf
ins
push
pop
or
inc
outs
scas
rcl
jmp
sub
lds
pop
outs
mov
sub
jno
pop
sti
inc
outs
or
jle
outs
pop
and
call
cmp
mov
adc
fwait
out
inc
xchg
add
mov
mov
or
dec
mov
add
enter
jl
push
cmp
std
add
jnp
in
adc
cmp
pusha
scas
xchg
pop
mov
and
nop
js
sbb
inc
mov
jo
xchg
dec
aam
loope
mov
pop
add
mov
jo
and
aad
pop
push
cmc
cmp
inc
push
setb
neg
jae
aam
add
enter
xlat
repz
sub
inc
(bad)
cmp
out
cmp
dec
mov
int
dec
scas
popf
cdq
cmps
into
cdq
adc
dec
mov
stos
movs
pop
sbb
ret
mov
into
into
jbe
rcr
cld
lahf
div
adc
movs
lock
repz
cmp
movs
mov
in
cmp
mov
jbe
sub
daa
push
cmps
mov
sub
xor
jge
and
jmp
mov
mov
out
jnp
xchg
push
scas
dec
add
cmp
pushf
inc
hlt
ins
out
mov
shr
dec
(bad)
fs
sahf
xchg
cmp
call
fwait
sbb
rol
mov
pop
imul
xor
add
cmp
adc
test
cmps
mov
in
std
xor
xor
inc
jmp
sbb
jb
xor
mov
test
fiadd
data16
pop
adc
xchg
cmc
sub
in
cs
loop
add
sahf
jecxz
cmp
adc
add
bndstx
mul
(bad)
or
out
push
jnp
sahf
jb
sar
add
push
xchg
dec
mov
push
outs
mov
fstp
xor
repnz
push
loop
stos
xor
cmp
mov
rol
push
outs
daa
test
adc
sti
mov
dec
stc
ins
sbb
sbb
xchg
jecxz
(bad)
(bad)
sbb
mov
xchg
imul
nop
or
shl
fldenv
in
imul
inc
push
mov
dec
retf
cld
cmps
add
xchg
jno
pop
pushf
inc
cmps
stc
out
jg
and
fisubr
mov
jno
int
pop
pop
(bad)
xor
aaa
adc
pop
leave
repnz
mov
mov
in
les
mov
lock
dec
pusha
dec
jg
ficomp
jecxz
fbstp
(bad)
sbb
into
sbb
call
out
aad
push
sub
push
ins
jns
fwait
mul
daa
push
fwait
cld
xorps
mov
pop
or
cdq
sub
scas
(bad)
popf
icebp
xchg
imul
(bad)
imul
das
mov
adc
add
xchg
sti
cmps
ret
ret
cmps
sbb
or
fild
js
mov
outs
repz
jnp
popf
mov
push
pop
aam
sar
or
mov
in
dec
and
xchg
in
stos
mov
std
in
pushaw
adc
mov
test
xchg
dec
push
fwait
adc
pop
addr16
dec
test
sbb
in
sbb
mov
adc
shl
mov
xor
call
out
scas
shr
or
repz
inc
sti
dec
pop
fnstcw
pop
dec
mov
mov
les
loope
out
add
dec
out
daa
mov
dec
leave
test
inc
inc
icebp
xor
cmp
or
mov
je
mov
jae
stos
fidivr
repz
push
mov
int3
into
mov
dec
cmps
mov
std
enter
dec
pop
mov
inc
movs
js
mov
fbstp
dec
je
and
stos
cmps
push
retf
xor
sub
ret
xchg
xchg
mov
push
jae
stos
xor
cwde
test
mov
das
iret
mov
push
and
mov
xchg
mov
arpl
mov
jge
and
mov
xchg
cmc
xor
(bad)
xor
sbb
xor
jmp
mov
lahf
inc
icebp
inc
dec
jb
sbb
jnp
vhsubps
aam
mov
dec
in
jae
jb
push
in
imul
addr16
(bad)
je
shr
popa
xchg
inc
or
(bad)
lahf
push
and
pop
fwait
aaa
mov
(bad)
stc
mov
retf
sub
retf
dec
out
push
and
aas
aas
pop
jge
sub
in
jbe
and
xchg
sar
cmp
out
stos
ja
mov
push
sbb
jne
(bad)
lea
and
mov
shl
jge
out
inc
dec
sbb
nop
fiadd
push
adc
push
aaa
out
ja
fmulp
jmp
sbb
fnstcw
fist
out
les
rol
test
xacquire
cmps
xchg
add
or
shl
jbe
jns
jl
mov
rcr
jnp
(bad)
imul
test
out
int
mov
ins
repz
push
les
sub
push
in
xchg
dec
xor
call
stos
mov
cs
scas
sti
shl
xor
pop
lea
xchg
inc
push
push
push
shr
out
cmp
cli
nop
xor
and
data16
ret
mov
xor
test
enter
pop
dec
fs
push
xor
mov
inc
and
cmp
cmps
cmps
(bad)
push
jae
jp
inc
jno
mov
scas
push
retf
and
sub
push
push
lds
outs
xor
dec
iret
ins
ror
mov
mov
xor
xor
push
jo
inc
aad
shr
inc
push
push
repz
push
inc
std
push
pop
pop
or
das
repz
mov
mov
sub
mov
inc
out
sbb
sbb
por
rol
adc
daa
ftst
xchg
xchg
jnp
cmp
jbe
xchg
shl
cwde
(bad)
jmp
icebp
fwait
in
cld
test
jmp
inc
add
lock
scas
ja
sub
sbb
mov
stos
mov
test
adc
(bad)
mov
mov
jmp
dec
sub
xor
sahf
and
jmp
cmc
(bad)
jns
aas
(bad)
and
pusha
ins
fld
push
stc
jmp
push
push
pop
xchg
les
push
test
fisttp
cmp
adc
out
xlat
aas
dec
sbb
cmp
jmp
jnp
cdq
cmc
ret
not
in
stos
int
mov
xchg
rcl
xor
push
xchg
mov
cwde
mov
scas
int3
repz
xor
mov
scas
push
imul
mov
pop
jb
cdq
adc
xchg
cmp
shl
mov
rcr
es
mov
or
sbb
ficom
mov
push
mov
in
fwait
cli
mov
pop
sub
xchg
cs
es
out
(bad)
ss
int
jnp
mov
stos
xor
sub
das
jnp
jmp
jnp
call
mov
fild
js
jo
xchg
pusha
or
mov
retf
xor
hlt
or
(bad)
add
test
push
icebp
jecxz
pop
and
jnp
loope
dec
add
sub
push
adc
jmp
sbb
mov
mov
push
cs
loop
lahf
leave
mov
popf
mov
push
aam
sub
sub
push
das
stos
xchg
xor
cmp
cmps
lock
fst
ja
inc
lods
adc
maxps
cmc
inc
scas
push
push
push
gs
inc
jbe
mov
out
and
jo
mov
fwait
inc
outs
or
cdq
out
fwait
or
jmp
mov
aam
adc
dec
push
dec
jp
and
ss
cmp
pop
jge
mov
popa
scas
cmc
add
mov
imul
pop
dec
icebp
mov
cmps
or
xor
pop
cmp
lods
xor
jl
push
test
aaa
or
sbb
and
stos
ja
stos
fwait
popf
jl
fcom
add
mov
jmp
add
mov
mov
mov
fnsave
push
loope
sbb
mov
or
push
ins
rol
inc
mov
in
mov
out
fidiv
mov
cmp
push
xchg
jge
jl
inc
shl
(bad)
dec
arpl
pop
stos
mov
mov
cmp
sub
mov
sahf
mov
adc
rol
je
mov
test
jnp
in
call
loope
push
bound
imul
out
push
adc
cli
add
or
jecxz
test
int3
dec
pop
rcr
fdiv
cmp
xchg
hlt
fistp
mov
(bad)
push
jae
jns
mov
enter
ret
inc
imul
inc
loop
mov
fdiv
xchg
push
test
dec
inc
jg
mov
push
mov
setae
sbb
add
sub
sbb
push
add
mov
or
sar
aas
bound
or
bound
sub
jle
and
dec
ds
pushf
lock
call
jne
inc
daa
icebp
fstp
and
mov
cmps
(bad)
out
repz
fsub
clc
je
aas
imul
xor
and
fcom
ins
gs
xchg
jmp
sti
out
add
nop
cs
into
add
xor
jb
outs
dec
add
pushf
xor
ret
jno
and
out
push
jl
inc
(bad)
sti
xchg
xlat
repz
or
jno
pop
or
(bad)
inc
sub
sub
cdq
loope
fsubr
ds
test
loope
fsubrp
fcom
sub
and
sub
mov
out
cli
inc
or
sti
in
jg
addr16
cmp
mov
fwait
ss
test
ret
or
cmp
iret
scas
mov
cld
dec
ficom
aas
dec
outs
dec
add
xchg
and
in
cmp
into
or
gs
icebp
sbb
cli
mov
fmul
add
cli
(bad)
mov
jno
cmp
sbb
pusha
test
mov
stc
call
cdq
imul
dec
xchg
arpl
inc
pop
sti
cld
add
js
aaa
pop
adc
or
ret
lds
fiadd
adc
es
aam
xor
shr
rol
cmp
stos
ja
xchg
xchg
sti
push
and
sbb
ret
(bad)
arpl
dec
sar
outs
xchg
push
leave
cli
call
cmp
mov
call
inc
repz
jne
daa
pop
inc
push
jge
cmp
pusha
inc
push
push
shr
scas
jmp
push
(bad)
or
mov
pop
pop
mov
cmp
jl
inc
pop
retf
test
(bad)
xchg
push
xor
imul
out
or
mov
loope
cmc
rcl
lods
inc
out
push
push
rol
fidiv
lea
out
push
fimul
sub
add
push
iret
jne
pop
add
int
(bad)
cmc
sbb
xchg
fsub
pop
frstor
push
in
je
stos
jg
mov
lds
mov
dec
sbb
std
fwait
jno
aaa
loopne
in
xchg
jmp
cld
pop
or
(bad)
loope
hlt
mov
mul
pop
xor
or
mov
xchg
xchg
jns
inc
push
inc
xor
std
ret
pop
pop
jmp
cmp
xlat
out
outs
pop
cmp
xchg
lahf
cmps
xor
xchg
cmps
imul
imul
out
sub
daa
out
adc
dec
outs
mov
sbb
jmp
addr16
(bad)
mov
pop
inc
scas
jns
pop
lods
neg
fwait
jmp
or
enter
call
cmps
out
push
push
stos
inc
xacquire
jb
jb
(bad)
and
test
(bad)
xor
frstor
outs
cmp
push
test
nop
dec
iret
movs
sbb
lds
test
adc
push
mov
in
test
in
sbb
sahf
stos
jg
sbb
mov
push
test
mov
movs
cmc
push
(bad)
fnstenv
and
adc
pop
push
ror
xchg
mov
and
pop
call
call
mov
mov
fstp
lea
mov
mov
pop
jns
pusha
dec
inc
outs
sbb
addr16
mov
adc
scas
not
(bad)
dec
scas
data16
lahf
cmps
int
jle
fisubr
(bad)
in
sub
mov
or
xor
rol
test
adc
retf
fdiv
popa
sub
pop
or
inc
aam
add
adc
out
ja
ror
or
or
out
cmps
fwait
scas
lds
ins
mov
jge
jae
sbb
loopne
gs
mov
shl
es
dec
adc
shr
dec
aaa
xor
sbb
or
dec
shl
arpl
adc
in
sbb
popa
rcl
xchg
sub
sbb
xlat
mov
(bad)
fisub
push
mov
cmp
pop
movs
mov
adc
rol
data16
mov
mov
ror
push
test
icebp
sub
and
jae
lock
add
or
inc
jns
jl
pop
cmp
sahf
pop
sbb
rol
mov
cli
icebp
mov
call
add
jbe
in
fsubr
pop
jnp
clc
out
pop
mov
adc
mov
push
jle
sbb
rol
int3
xchg
xchg
push
pop
cmps
call
int3
aaa
(bad)
inc
dec
mov
shl
inc
sbb
inc
call
popa
iret
or
test
jmp
and
inc
pop
shl
retf
icebp
or
scas
mov
or
ja
fcmovne
cld
pusha
add
into
cmp
(bad)
(bad)
lahf
lock
xchg
js
sbb
in
or
(bad)
inc
jae
pop
pop
inc
mov
int3
mov
push
loope
xchg
retf
std
stc
inc
cdq
pop
out
jmp
mov
scas
ret
sbb
pop
retf
jno
xor
mov
aas
(bad)
dec
dec
ins
test
fwait
dec
ret
mov
mov
pusha
jne
scas
aad
imul
in
cs
add
cmp
sar
pop
adc
pushf
pop
push
jle
test
repz
lods
bound
das
stos
mov
push
xchg
inc
lods
rcl
je
pop
jg
cmc
pop
xor
call
outs
xchg
adc
xchg
inc
in
(bad)
cmp
(bad)
std
and
std
push
out
in
adc
je
loopne
test
hlt
ins
inc
jns
inc
jge
mov
sub
popf
or
jae
mov
push
out
xor
(bad)
arpl
pop
mov
xchg
inc
cmps
sub
xor
adc
ret
add
inc
adc
xchg
jns
push
pop
cmp
cdq
xor
jnp
xor
imul
sbb
and
jno
out
push
cs
sbb
rcl
stos
sbb
in
pop
push
xchg
popa
lea
adc
out
lock
hlt
pop
inc
adc
mov
out
and
loop
lock
inc
ds
sti
sbb
or
push
mov
imul
sbb
xchg
mov
loopne
loopne
sub
dec
push
jmp
movs
pop
cmp
(bad)
pusha
mov
je
sahf
cld
xor
push
sbb
or
test
loope
xor
stc
das
in
int3
push
lahf
jnp
loop
sub
xchg
nop
sahf
push
xchg
fnstsw
inc
(bad)
js
push
inc
xor
jmp
cdq
inc
mov
js
push
inc
lock
mov
dec
adc
ds
pop
adc
sub
pop
push
lds
or
leave
pop
out
push
inc
mov
mov
inc
nop
push
adc
scas
push
mov
xchg
sub
movs
ss
lds
dec
push
xor
mov
sub
push
push
outs
fdiv
mov
sub
movs
mov
iret
adc
inc
mov
mov
mov
sub
loope
cwde
jae
xchg
bound
adc
mov
lahf
inc
cmp
xlat
div
pop
sbb
stos
push
hlt
sbb
and
lea
rcr
vpsrlq
sub
sub
jge
hlt
add
xchg
ret
add
fldcw
(bad)
mov
inc
rcl
sub
jmp
lods
inc
inc
or
sub
hlt
xor
xchg
jnp
push
cmp
(bad)
test
dec
xchg
retf
pop
dec
and
sti
lock
fstp
cmp
arpl
sbb
in
cmp
inc
movs
sbb
adc
cmp
pop
les
adc
imul
sbb
mov
and
repz
scas
push
push
pop
scas
and
pop
inc
clc
out
bound
push
sbb
frndint
loopne
cmp
fist
pop
push
cld
xchg
xor
mov
inc
adc
mov
adc
lods
(bad)
cmp
repnz
pop
dec
neg
push
mov
fmul
cmps
sbb
and
cmovno
ins
jbe
sbb
out
xchg
sub
test
sbb
cmps
daa
xor
fwait
pop
sbb
pusha
push
test
xchg
push
pop
(bad)
push
and
adc
arpl
push
aaa
mov
das
out
ret
jmp
fst
xchg
adc
add
cmps
mov
mov
hlt
sub
xchg
and
mov
std
dec
out
gs
inc
inc
mov
mov
pop
jmp
adc
adc
fbstp
out
nop
les
xchg
cmp
popa
gs
aad
and
add
xor
in
xor
sbb
lea
icebp
push
les
pop
fchs
div
pop
hlt
pop
xchg
(bad)
pop
in
inc
icebp
jp
mov
xor
pop
mov
(bad)
mov
shl
call
push
jp
shl
addr16
push
movs
sbb
aam
or
cs
fistp
dec
add
inc
pop
cmp
sub
cwde
out
mov
add
cs
and
jno
mov
dec
mov
in
aas
mov
mov
into
mov
cmc
pushf
sub
inc
pop
ss
and
or
ins
pusha
les
out
add
add
mov
fcmovbe
cmps
sub
xor
sub
mov
mov
jbe
xchg
imul
xchg
aam
fcomp
xrelease
aaa
inc
fxch
test
shl
jecxz
pop
sbb
cmc
inc
ins
sbb
push
xor
xor
xchg
or
mov
push
sbb
jecxz
and
rcl
push
lods
aaa
xor
mov
loop
shr
adc
jmp
les
and
retf
div
(bad)
je
sbb
ds
push
xor
mov
(bad)
sbb
and
sbb
into
sub
and
pop
mov
sub
cmps
jl
outs
fdiv
mov
lea
int3
dec
sbb
mov
add
pop
stos
mov
test
and
arpl
sub
cwde
xchg
in
pop
push
outs
dec
jno
gs
scas
data16
out
dec
call
jp
rcl
pushf
mov
adc
das
fisub
dec
rcr
xor
repnz
mov
mov
xor
sbb
arpl
fucomi
mov
pushf
or
jl
mov
jb
inc
mov
lea
(bad)
data16
lea
mov
test
inc
inc
pop
cwde
xchg
nop
mov
leave
mov
ins
int
lea
jmp
pop
xor
ins
pop
sbb
sti
nop
xor
ss
xor
dec
add
mov
test
ss
rcl
sbb
stos
inc
fcmovb
(bad)
scas
mov
push
or
sbb
cdq
ret
dec
push
mov
and
aad
(bad)
jl
icebp
cmp
js
push
fmul
repz
sbb
(bad)
dec
mov
pusha
inc
sti
sub
div
mov
fcomp
and
sub
push
adc
mov
sahf
aaa
scas
ins
js
mov
mov
mov
jl
fnstenv
push
sbb
das
leave
cwde
xchg
inc
push
adc
push
xchg
pop
mov
xchg
inc
bound
sub
mov
scas
lahf
ja
mov
scas
retf
mov
push
sub
or
cli
loope
hlt
push
std
lahf
retf
test
pop
pop
pop
xchg
gs
xchg
enter
aas
popa
cs
jno
xchg
sar
push
loope
fcomp
xor
jp
cmc
mov
add
inc
jge
and
and
mov
loopne
jbe
mov
stos
adc
das
imul
pop
clc
mov
or
inc
nop
cmps
stos
fstp
daa
test
or
cmp
mov
clc
jmp
lods
jbe
(bad)
jle
outs
mov
jle
addr16
loop
rcr
ds
cmp
sbb
lods
adc
jmp
rol
pop
es
pop
xchg
or
xor
retf
pop
lahf
cmp
jle
pop
retf
dec
in
dec
cdq
mov
and
scas
sbb
and
xchg
inc
test
dec
jg
lods
jmp
pop
jnp
xor
std
imul
(bad)
aas
pop
push
pusha
xor
mov
lods
or
jmp
or
into
test
lea
dec
add
addr16
imul
hlt
push
mov
sub
cli
jnp
addr16
inc
add
aam
loopne
das
out
xor
xlat
mov
outs
lods
jmp
xor
cmp
sbb
push
mov
xor
mov
ss
push
mov
ss
cmp
mov
and
xchg
lock
pop
and
push
cmp
inc
cmp
fxch
pop
dec
out
push
aaa
sbb
cmp
mov
xchg
pop
outs
mov
aaa
lods
sub
popa
stos
test
mov
scas
jno
gs
scas
adc
pop
lock
xor
xor
and
mov
jg
shr
and
mov
cmc
mov
movs
outs
push
inc
test
xchg
(bad)
mov
mov
push
xor
push
pop
push
xchg
or
inc
add
jnp
pop
sbb
jb
loopne
jge
pusha
xchg
lods
dec
daa
ins
pop
aas
mov
push
ficomp
shl
stc
dec
dec
test
pop
inc
sysenter
push
dec
ds
pop
retf
sub
repnz
lgs
stc
aam
test
add
sub
aas
jg
sbb
sti
ss
adc
int3
into
sbb
pushf
in
mov
jecxz
xor
sub
cwde
sbb
pop
add
ret
adc
push
xlat
sti
out
stos
movs
js
xor
mov
sub
cli
lahf
loopne
cmp
ins
cmps
je
lods
ins
scas
movs
ja
outs
icebp
sub
sahf
lock
jg
add
lds
add
clc
or
cmp
xlat
jno
pop
jmp
repnz
jbe
xchg
test
lahf
repz
retf
in
mov
jmp
in
aas
sub
mov
cmp
or
xchg
xor
push
jbe
fidiv
push
mov
push
xchg
sbb
or
cmp
or
push
not
and
test
(bad)
pop
les
adc
movs
(bad)
cli
cmps
idiv
cmp
inc
cld
or
jge
scas
cmp
push
(bad)
pop
and
sbb
and
mov
cmps
jg
add
outs
cdq
jl
rcr
xchg
inc
in
mov
repz
pop
vpsllq
movs
fwait
inc
aam
mov
xchg
mov
mov
ret
sbb
dec
fdiv
jecxz
ror
test
aas
aam
ins
pop
jmp
add
into
call
movzx
sub
and
pop
xchg
mov
sbb
or
int3
lds
mov
scas
xchg
adc
mov
in
pushf
(bad)
pop
lock
scas
inc
mov
xor
call
(bad)
out
pop
or
sar
push
jl
and
mov
(bad)
xor
js
jg
jp
cmp
jecxz
dec
push
js
(bad)
jge
jne
fnstcw
push
fwait
or
ret
push
js
add
dec
xlat
dec
or
iret
cdq
retf
addr16
ror
adc
dec
add
mov
push
iret
into
xor
sahf
imul
xchg
outs
fld
lds
and
fisubr
adc
cmp
fild
push
jle
ja
fdivr
mov
sub
test
xor
rol
test
cmp
stos
xlat
add
ins
mov
pslld
add
push
inc
xor
(bad)
xlat
push
sti
in
bound
pop
in
xor
cdq
popa
(bad)
fcmovnbe
xchg
adc
xchg
pop
ds
aad
push
daa
ins
pop
or
jge
or
or
enter
mov
cmp
ja
mov
stc
scas
inc
test
pop
jmp
jl
or
pop
call
scas
jecxz
lock
cld
cdq
iret
jne
in
shr
movs
ins
loope
add
sbb
lds
dec
dec
sub
fdivr
pop
out
inc
adc
fisubr
clc
rcl
dec
sbb
push
pop
add
pop
ds
or
ins
jae
xor
fcomip
push
retf
out
push
pop
(bad)
mov
(bad)
push
sbb
inc
test
dec
mov
push
sbb
stos
in
sbb
dec
inc
xchg
test
cmps
mov
jecxz
imul
lahf
mov
ret
dec
dec
out
aas
mov
sbb
or
or
push
mov
adc
sub
je
xor
xchg
xchg
xor
and
repnz
mov
ror
les
sbb
aam
scas
and
fstp
test
sbb
cmc
xor
and
sub
(bad)
jae
fwait
adc
mov
test
xlat
pusha
xchg
mov
jl
addr16
adc
out
in
(bad)
xor
int3
and
imul
in
addr16
dec
jp
jle
jl
jmp
inc
das
sbb
lahf
sub
jmp
pop
repz
fwait
push
jp
jns
mov
adc
push
fsubr
push
jle
sub
(bad)
mov
cmp
sub
mov
mov
movs
mov
xor
dec
cs
sbb
add
movs
(bad)
sbb
mov
loope
(bad)
pop
push
jecxz
dec
dec
ja
pop
pop
test
(bad)
retf
mov
outs
imul
repz
aaa
icebp
or
sbb
lahf
mov
cmp
mov
xor
jae
jmp
mov
xchg
or
loopne
and
push
or
dec
dec
xor
and
stos
push
lock
push
(bad)
mov
test
imul
jl
or
repnz
jle
in
cmp
bound
push
jmp
je
fwait
cmp
js
out
pop
and
mov
inc
jbe
test
mov
shl
nop
push
std
and
xor
and
or
add
jno
fs
adc
not
cmp
push
mov
into
cld
out
cwde
add
in
sbb
jg
sbb
aas
mov
ins
pop
nop
push
outs
sbb
xchg
mov
dec
xchg
pop
pop
and
mul
inc
out
sub
sub
push
aas
call
icebp
pop
ins
sti
cmp
lods
dec
(bad)
lahf
mov
pop
mov
inc
enter
dec
mov
dec
mov
jb
stos
fsub
mov
repz
fild
push
test
mov
lds
mov
adc
mov
push
sbb
sbb
rcl
sbb
pop
pop
inc
cli
cdq
add
pushf
stos
add
push
retf
push
rcr
cmp
inc
adc
sbb
adc
or
adc
ret
xchg
jge
ds
push
aas
stc
popaw
mov
ins
xchg
or
mov
dec
dec
or
inc
sbb
push
jb
pusha
cmps
in
es
sti
mov
pop
test
mov
std
push
push
into
mov
leave
call
loopne
mov
dec
pusha
into
mov
mov
test
mov
xchg
sbb
je
icebp
rcl
jns
and
movs
sahf
stos
push
mov
cmp
retf
hlt
or
in
ja
xor
cmps
and
push
xchg
lea
sbb
in
fsub
dec
ffree
xchg
jl
or
shr
lods
leave
add
movs
or
mov
xchg
xchg
cmp
into
imul
pop
hlt
mov
stc
inc
sub
lahf
and
mov
jmp
mov
sub
fisttp
(bad)
mov
pushf
lock
push
ja
xchg
test
jo
fsubr
enter
mov
ds
sub
movs
popf
fdivr
lds
shl
rol
push
dec
outs
pusha
adc
jmp
mov
xchg
push
push
daa
mov
or
xor
scas
loope
xchg
jmp
push
jp
jmp
pop
add
sbb
inc
(bad)
data16
jl
das
pop
adc
mov
sahf
push
stos
pop
(bad)
push
sbb
xchg
stc
inc
mov
add
xchg
cmps
lock
mov
fld
sbb
out
lss
mov
or
push
popf
sub
cmp
adc
jecxz
sbb
mov
and
pusha
sub
adc
out
popa
dec
ds
bound
cmp
fcomp
retf
xor
xor
jle
jnp
(bad)
mov
pop
jbe
movs
aam
loope
mov
call
sub
std
xchg
das
dec
mov
stos
push
adc
jge
stos
cmp
stos
stos
xor
mov
sbb
push
fimul
jno
push
popa
xchg
fidiv
ret
add
push
(bad)
in
enter
xchg
jns
mov
fstp
mov
pop
cmp
push
push
inc
jle
jl
imul
mov
inc
xchg
push
rcl
jb
(bad)
imul
inc
fiadd
icebp
movs
jl
xchg
popf
mov
imul
repnz
test
fist
outs
data16
and
cmc
movs
mov
stos
test
mov
jle
push
sub
jb
(bad)
add
adc
jne
jae
in
retf
or
iret
dec
fidivr
sub
mov
xor
frstor
xlat
pop
mov
inc
inc
inc
dec
imul
ret
pop
dec
pusha
jb
call
or
xor
push
(bad)
xor
pop
dec
popf
mov
fiadd
mov
test
push
or
addr16
adc
push
aas
or
push
push
mov
out
sbb
pop
push
out
xchg
gs
push
dec
or
or
inc
pusha
arpl
inc
add
or
std
stc
adc
xor
fdivr
pop
push
mov
xor
push
cwde
pop
aad
xchg
or
stc
(bad)
in
das
adc
movs
faddp
adc
cs
daa
inc
or
fmul
pop
call
jecxz
stc
sbb
push
push
and
push
dec
sbb
cmp
fistp
ds
out
jecxz
mov
in
push
(bad)
aad
iret
repnz
add
(bad)
repz
daa
dec
sbb
or
mov
js
popf
cmp
mov
sub
in
xor
mov
xchg
pop
test
fistp
adc
iret
addr16
mov
cmp
sbb
hlt
rol
push
lock
jp
dec
jae
pop
inc
cmps
out
in
mov
sub
xor
aaa
jecxz
sbb
and
cmp
xor
ss
jo
inc
pushf
sbb
out
cli
jp
mov
xlat
cmps
and
push
sti
dec
mov
je
fs
pop
sbb
mov
pop
in
out
jne
or
adc
les
xor
or
and
rcr
xchg
cdq
repnz
shl
inc
jne
push
test
out
and
xor
popa
sbb
sbb
(bad)
and
xchg
fst
cmps
shl
out
pop
jnp
dec
in
inc
or
mov
fsubr
and
mov
push
pop
loope
dec
(bad)
es
mov
(bad)
push
pop
xchg
mov
push
pop
aaa
test
pop
mov
push
test
fsub
sub
ins
fild
sbb
mov
retf
inc
inc
dec
sub
mov
sbb
dec
jns
sbb
add
stos
cld
jnp
add
nop
rol
retf
in
loop
out
dec
pushf
xchg
(bad)
jb
loope
fs
iret
adc
mov
xor
stos
aam
sbb
(bad)
test
mov
dec
jecxz
push
adc
mov
inc
mov
out
repnz
ss
inc
sbb
pop
or
push
loop
push
add
ret
lahf
dec
fsubr
push
fdiv
mov
sbb
(bad)
cmp
lods
out
or
xchg
inc
mul
ins
fiadd
xchg
xor
mov
xchg
outs
hlt
xchg
por
push
or
cmp
cwde
sub
(bad)
mov
adc
jg
dec
jmp
lock
ins
(bad)
dec
je
mov
mov
fsubr
jecxz
jb
push
cdq
or
fiadd
ds
pop
dec
pop
retf
jnp
push
mov
add
in
es
inc
test
pusha
xchg
les
pop
retf
mov
bound
push
out
xor
jo
push
std
xor
lods
test
jo
mov
jmp
loopne
cmc
lds
inc
leave
outs
xor
das
popa
dec
add
adc
xchg
and
retf
mov
addr16
or
imul
jns
bound
retf
into
inc
ds
pop
popf
adc
mov
pop
std
push
mov
mov
fucomi
inc
mov
xchg
xor
sti
mov
xor
sbb
add
in
inc
loopne
xchg
sub
mov
adc
out
sbb
mov
jne
push
dec
add
sbb
mov
jae
push
mov
xor
mov
std
mov
sbb
dec
xlat
xor
adc
rcr
jecxz
sbb
pop
cld
bound
hlt
sbb
mov
xchg
call
fist
gs
daa
loop
mov
cmc
pop
jne
xchg
xchg
ficom
pop
pusha
or
mov
(bad)
scas
fdiv
hlt
adc
mov
and
sub
cmp
ror
pop
mov
cli
ret
into
out
(bad)
or
and
mov
or
lds
aam
popa
adc
je
enter
mov
sbb
hlt
stos
mov
jp
test
lods
sbb
ret
scas
or
push
push
loopne
or
call
dec
jo
fwait
mov
add
cmp
ror
mov
xchg
call
ins
dec
pop
or
(bad)
mov
jb
push
movs
sbb
aas
push
pop
idiv
int3
fnstsw
retf
inc
xchg
fs
cwde
aad
out
pop
ret
dec
xchg
shl
adc
popa
hlt
mov
int
ss
idiv
out
inc
and
inc
and
jge
loop
push
xor
cmp
outs
faddp
xchg
hlt
aas
out
in
jecxz
jl
xlat
leave
push
repz
scas
or
xor
mov
in
lods
jae
cmp
pop
out
mov
cmp
mov
pop
push
ss
sub
push
scas
pusha
mov
sub
inc
xor
(bad)
fcomp
mov
je
cdq
pop
test
dec
sbb
xchg
dec
ins
mov
mov
mov
iret
call
fs
pop
jnp
stos
scas
xor
fucomi
jnp
jae
add
push
add
adc
xor
(bad)
adc
cmp
fstp
cmp
xchg
ror
fcmove
xchg
mov
and
cmp
sbb
sbb
mov
data16
xchg
mov
shl
push
push
mov
in
aas
or
std
add
or
push
inc
mov
fcomp
mov
movs
adc
scas
sbb
popf
cmps
push
mov
jge
or
xlat
cmp
scas
push
cld
mov
bound
in
cmps
add
xchg
mov
mov
mov
cs
sbb
out
mov
les
into
dec
push
ret
fcmove
fisttp
push
ds
lock
fwait
cmp
inc
scas
push
mov
push
dec
lds
popf
pop
ins
mov
jl
and
cwde
push
sub
fild
jbe
add
mov
mov
inc
xor
mov
jmp
movs
stc
mov
inc
mov
pop
sub
into
stos
pop
iret
test
mov
adc
mov
movs
popf
outs
jge
cs
clc
ret
push
xchg
inc
cwde
ins
fist
in
in
loopne
and
add
pusha
add
adc
mov
aas
stos
lds
(bad)
adc
mov
bound
test
clc
xor
sbb
(bad)
ret
inc
in
shl
(bad)
outs
pop
sub
call
ss
fild
ror
loop
clc
or
ret
(bad)
rcr
jae
mov
sbb
outs
inc
dec
pop
enter
mov
loopne
leave
jne
ficomp
sub
pop
inc
xchg
jge
ror
sbb
mov
inc
out
hlt
mov
push
adc
test
mov
lock
dec
daa
repnz
(bad)
xchg
mov
pop
iret
jbe
movs
cmps
sub
int3
jo
add
(bad)
jp
pop
sub
pushf
xor
lds
inc
sbb
jl
pop
and
ds
dec
cs
dec
or
bound
mov
(bad)
in
jb
xor
push
adc
sti
out
pushf
or
mov
ja
(bad)
std
mov
adc
sahf
test
ins
iret
dec
sub
jbe
sbb
jmp
aad
push
out
pusha
movs
adc
push
cmp
sub
in
pop
nop
and
jle
pop
and
pop
sbb
push
mov
sti
das
push
test
enter
cmp
aam
xor
sub
adc
xchg
or
push
rol
cmp
clc
scas
gs
mov
jecxz
push
mov
lods
xchg
mov
ret
jae
xor
jmp
add
add
stc
into
lahf
loop
xchg
popa
push
jmp
xlat
xor
call
inc
test
and
jno
inc
lock
(bad)
and
mov
pop
das
pop
adc
inc
imul
sub
in
popf
jge
out
jns
cmps
jge
xlat
mov
popf
rcl
nop
jb
inc
inc
push
fstp
cs
mov
xchg
jno
cmps
cld
jmp
fistp
sub
das
cmps
lds
scas
popa
lods
adc
aas
adc
es
xchg
dec
mov
jecxz
outs
pop
jmp
cmp
cmps
mov
jge
mov
lock
pop
mov
inc
enter
rol
mov
cmps
imul
loopne
mov
addr16
mov
movs
jne
jbe
out
inc
pushf
inc
xor
hlt
sahf
sbb
inc
pop
sub
sub
sbb
addr16
inc
test
mov
ret
ss
inc
pop
xchg
out
loope
or
jge
daa
xor
and
push
out
lods
sbb
pop
ret
mov
mov
inc
cmp
dec
call
mov
sbb
in
inc
sbb
rcr
add
mov
clc
ss
mov
pop
js
pop
sub
fucomi
test
jecxz
mov
add
and
mov
in
mov
and
(bad)
adc
inc
mov
aam
cdq
in
bound
xor
cli
sbb
fcmovb
pushf
je
in
cwde
movs
push
dec
jnp
sub
ins
mov
in
inc
xor
mov
adc
or
ret
inc
stos
cwde
inc
xor
sbb
cmp
aad
push
jo
mov
cli
retf
sub
ins
mov
add
xor
adc
mov
ds
test
sub
std
sbb
jp
xor
xor
xlat
leave
jnp
jle
dec
jne
popa
dec
ss
test
pop
adc
test
nop
cmp
aad
stos
cmp
lods
mov
or
adc
adc
mov
push
mov
sub
int3
mov
jge
into
push
mov
adc
shl
inc
push
and
xchg
js
dec
inc
inc
sub
shl
inc
inc
out
adc
add
fiadd
inc
xchg
mov
or
mov
cld
xor
(bad)
loope
call
dec
mov
and
jmp
and
mov
pop
es
test
sub
(bad)
in
push
sub
push
add
in
mov
pop
sub
ret
pop
xchg
out
sbb
add
xchg
mov
out
sbb
jg
xchg
jp
dec
xchg
dec
add
popa
mov
clc
lahf
and
xor
movs
dec
addr16
cmp
test
adc
jns
inc
outs
cld
mov
mov
daa
adc
mov
pusha
fdiv
adc
(bad)
retf
loopne
dec
adc
movs
stos
cld
and
adc
inc
xlat
add
jle
retf
in
xchg
lods
jmp
dec
xchg
push
push
mov
xchg
xor
lock
or
dec
mov
jge
psrad
shl
sbb
pop
xchg
test
or
ds
in
int
fs
mov
mov
nop
int3
mov
je
or
dec
repnz
adc
mov
cmp
mov
add
and
mov
dec
push
sbb
or
push
in
inc
rol
leave
sub
nop
pop
lods
inc
xor
add
mov
mov
out
add
xchg
test
outs
dec
mov
push
sub
enter
jmp
sar
sbb
xchg
xchg
sub
adc
shl
pusha
sbb
cmp
push
je
jmp
mov
pop
enter
jecxz
lahf
and
ins
xor
mov
int
sbb
lock
iret
push
push
xchg
leave
sahf
out
sub
sbb
rcl
jmp
loop
dec
jb
cwde
push
and
imul
or
mov
cwde
mov
rcl
fdivrp
sub
or
or
call
inc
es
imul
loop
mov
mov
ss
test
dec
je
lea
push
mov
fidivr
adc
or
dec
je
mov
jnp
mov
rcl
pop
and
jge
push
les
or
push
(bad)
int
pop
out
out
add
inc
sub
nop
jmp
out
daa
jp
pop
adc
jl
in
cmps
(bad)
or
jg
jno
pushf
out
jnp
aaa
xchg
and
aas
push
aaa
pop
inc
imul
mov
xchg
fcomp
add
lds
inc
call
dec
mov
mov
inc
dec
sbb
jl
pop
add
addr16
cmpxchg
or
outs
popa
fs
aaa
adc
aaa
mov
sbb
mov
fbld
xchg
mov
sahf
add
fisubr
in
xor
inc
mov
(bad)
loopne
leave
sub
popf
sub
retf
and
cdq
leave
je
dec
cwde
lock
push
into
push
jo
mov
test
dec
fistp
daa
sub
or
xor
xchg
or
pop
pop
add
outs
mov
pop
fwait
push
std
inc
les
cmc
mov
adc
push
ins
vunpckhps
ret
ins
fidivr
ror
in
dec
dec
mov
cli
jl
and
pop
std
xor
dec
data16
ret
xor
jl
outs
ror
jge
dec
popa
jp
dec
mov
ja
es
mov
stos
dec
fcomp
xor
aaa
(bad)
addr16
cmp
mov
ss
lods
loop
mov
xchg
cmp
xlat
add
cmpxchg
xchg
jmp
iret
mov
push
mov
enter
popf
dec
imul
sub
imul
cmp
das
or
jae
xchg
aas
push
pop
push
pop
out
imul
sub
das
arpl
rol
adc
out
adc
xchg
jno
sahf
sub
int3
dec
out
push
das
lods
movs
std
imul
inc
test
dec
inc
push
or
out
push
sub
mov
mov
sub
push
js
stos
mov
sbb
add
ror
fild
in
jl
jle
cmps
sbb
data16
or
icebp
push
shl
pop
ret
pop
movs
scas
int3
ds
cdq
ss
sar
ficomp
push
mov
add
cdq
cmp
cmp
leave
outs
iret
push
repz
sar
sub
mov
ret
mov
retf
push
pusha
inc
xlat
inc
int
jns
mov
cmp
loop
sbb
(bad)
scas
movs
push
cmp
shr
dec
cmp
fs
jge
mov
inc
mov
dec
mov
or
cmps
and
cs
add
ins
xchg
lea
arpl
adc
inc
popa
ja
jmp
inc
mov
in
fldcw
cmps
sahf
jno
(bad)
stos
xchg
add
sar
dec
xor
mov
cmc
add
adc
dec
or
jecxz
xchg
and
cli
mov
push
jnp
fisubr
sub
cmovnp
and
and
test
sbb
sub
xchg
adc
mov
mov
cli
cmp
sar
pop
and
and
es
xor
push
or
retf
into
cmp
inc
mov
dec
cmps
pop
repz
sbb
cmps
or
scas
cmp
sub
fidivr
cmp
cmp
xchg
les
cdq
retf
jmp
jp
adc
sub
pushf
sub
xchg
repnz
jne
aaa
push
push
mov
dec
idiv
lock
jo
xor
lods
add
push
pop
add
lahf
mov
xchg
lds
mov
mov
xor
xchg
(bad)
ss
mov
inc
inc
adc
mov
stos
xchg
mov
or
pop
enter
inc
add
jae
mov
call
sub
(bad)
jo
cmps
imul
and
cmps
inc
dec
push
jo
mov
sbb
stos
or
faddp
pushf
stc
adc
mov
scas
retf
mov
jno
cmp
push
or
mov
inc
fsub
push
and
test
dec
mov
pop
shr
mov
or
jl
loope
loopne
or
inc
js
test
mov
mov
pop
aas
sbb
xchg
add
clc
sub
ret
test
sub
mov
int3
push
jmp
inc
push
mov
mov
test
bound
shr
push
jle
adc
cmp
loop
lods
call
out
push
cdq
dec
adc
xchg
pop
sbb
or
ror
enter
xor
or
xchg
jmp
xchg
(bad)
jmp
(bad)
and
adc
dec
push
ffree
mov
cs
sub
inc
(bad)
inc
add
jle
nop
add
xchg
sar
jl
sub
sub
loopne
mov
mov
idiv
jo
sub
adc
jp
dec
rol
cmp
mov
gs
push
aad
(bad)
scas
idiv
pusha
dec
pop
sub
imul
add
jge
jae
or
in
inc
cmp
jecxz
shl
pop
and
cmp
xchg
mov
xor
mov
stos
xchg
or
gs
or
out
mov
adc
dec
jmp
jbe
xchg
shr
pusha
push
pop
out
and
jp
mov
sub
mov
jo
es
sub
arpl
test
and
mov
push
mov
enter
add
xor
dec
jp
scas
jle
jmp
fs
sbb
call
ficom
jecxz
adc
inc
xchg
data16
xchg
mov
imul
push
int3
in
bound
sub
add
sysret
xchg
and
add
imul
rol
and
mov
jecxz
sti
push
(bad)
add
xchg
cmp
jb
jp
xchg
pushf
aaa
retf
popf
jnp
aam
test
div
sub
mov
mov
out
pop
push
xor
ds
retf
sub
ficomp
push
dec
push
js
jae
repnz
(bad)
(bad)
push
and
fwait
sbb
pop
(bad)
call
and
push
push
cmps
jo
dec
pop
nop
cmp
inc
scas
pop
cmp
mov
out
in
xchg
les
lods
xchg
in
sbb
call
mov
mov
cs
pop
pushf
test
call
test
outs
mov
ds
outs
and
sahf
sub
sbb
cdq
dec
std
mov
fistp
loop
jbe
cdq
data16
sbb
inc
mov
cmp
adc
xor
neg
dec
mov
or
neg
adc
mov
in
pop
not
call
mov
out
mov
mul
xchg
inc
out
add
jne
mov
cmp
mov
rol
push
rcr
pop
daa
push
lea
push
cmps
pop
xor
fmul
xchg
xor
nop
or
fadd
cmp
push
mov
dec
imul
lods
jle
jle
ins
pusha
cmps
pushf
je
or
mov
jle
sbb
cmp
xchg
fidiv
ds
mov
pop
sbb
(bad)
and
in
mov
aaa
jecxz
out
pop
mov
ins
push
dec
fsqrt
pop
pop
pop
loop
dec
pop
jno
fwait
adc
and
bound
jns
ja
xchg
mov
call
imul
daa
cmp
pop
cmp
push
mov
xchg
das
xor
inc
imul
sub
movs
out
mov
pop
fs
test
sbb
push
(bad)
dec
fsub
jmp
lods
data16
pop
jnp
jge
or
call
add
push
setp
ret
leave
jb
push
or
cmp
and
jl
inc
fisubr
push
int3
xchg
std
daa
call
movs
dec
lds
(bad)
and
mov
adc
gs
xchg
add
fs
push
imul
pushf
or
fidiv
outs
repnz
xchg
adc
in
out
inc
sub
ror
in
sahf
and
in
cmp
scas
cmp
cs
jne
retf
adc
mov
and
sbb
push
push
pop
and
xchg
or
out
mov
je
sub
dec
retf
dec
lods
lods
fwait
sub
jle
mov
fwait
aam
sub
sub
adc
lds
push
aaa
cmp
test
or
sbb
xor
sbb
push
aad
int3
enter
dec
out
or
jns
retf
loopne
stos
clc
cwde
cld
xchg
cli
enter
inc
das
sbb
inc
(bad)
shl
fmul
fwait
pop
mov
mov
add
adc
sub
fadd
std
mov
movs
xchg
push
sbb
mov
push
ja
sub
sbb
shl
dec
inc
mov
iret
mov
push
test
test
dec
sti
cwde
aaa
sti
js
jns
daa
rcl
or
mov
jnp
aad
pop
and
sub
int
xchg
aam
cmp
mov
repnz
push
ret
stos
adc
jle
outs
sti
push
push
xor
dec
lods
mov
daa
mov
cmp
xor
adc
sub
or
ror
cli
lea
lods
mov
fwait
pushf
lods
das
and
inc
cmp
pushf
inc
adc
push
add
or
sbb
mov
xchg
and
add
lahf
(bad)
jnp
xchg
mov
lods
dec
push
jo
imul
push
xor
add
cmp
mov
adc
xchg
push
out
cmc
clc
fdiv
iret
gs
aam
mov
pop
jmp
in
dec
stos
sub
jge
jmp
mov
retf
jb
push
mov
icebp
movs
dec
dec
sbb
xor
in
and
call
loopne
cmps
jmp
add
retf
(bad)
je
clc
sub
test
daa
push
inc
mov
add
mov
adc
aam
mov
lods
das
adc
adc
and
sub
ret
cmc
pop
mov
or
call
ins
out
into
sub
mov
outs
js
lea
xchg
add
hlt
pop
cmp
fwait
push
dec
sahf
bound
sbb
pop
into
outs
mov
xor
call
test
push
and
sub
mov
mov
call
retf
mov
mov
retf
inc
adc
adc
test
cmp
aad
adc
pop
popf
adc
add
adc
fild
add
pop
cmps
push
xor
lods
pop
movs
imul
push
jmp
fiadd
pop
or
adc
xchg
int
std
popa
movs
add
xor
test
lea
lods
sbb
hlt
loope
or
xchg
jecxz
push
pop
ffreep
jnp
inc
ret
imul
aam
pop
inc
enter
jb
sub
cmp
mov
rcr
jne
aad
mov
rcl
lods
iret
push
ficomp
lods
sub
stos
mov
int
mov
jecxz
adc
push
repz
ja
je
jecxz
in
jo
hlt
or
sub
imul
cmp
adc
cmp
xor
mov
jne
mov
pop
add
iret
sti
sbb
ins
or
and
ja
fstp
xor
cmp
jge
pop
ret
in
test
adc
dec
int3
hlt
sub
bound
retf
sti
and
mov
outs
push
ror
ret
mov
adc
jecxz
and
int3
xor
jno
cmp
test
or
mov
shl
cmps
push
cmp
or
mov
pushf
jbe
push
imul
out
inc
xchg
xor
dec
leave
popf
popf
mov
imul
cli
jge
jo
scas
ficom
push
push
dec
fld
or
in
or
mov
lock
xchg
or
call
call
call
jbe
mov
xchg
push
outs
outs
inc
push
sahf
repnz
out
out
push
cmp
sbb
cmps
sbb
jnp
push
xchg
data16
out
js
xor
adc
es
movs
(bad)
or
pop
sbb
data16
xchg
fimul
xor
jl
pop
lahf
test
test
or
add
jae
movs
(bad)
std
jl
pop
pop
(bad)
fstp
pop
fcom
mov
stos
cs
add
cmc
mov
aaa
ds
pop
sub
xlat
jbe
cmps
jns
ret
dec
lds
sti
pop
fldenv
xchg
dec
lea
mov
jae
add
or
aaa
in
and
daa
cmp
add
and
sbb
jmp
jne
jp
pop
es
nop
sbb
inc
in
mov
inc
aad
cli
and
cdq
inc
(bad)
retf
cmps
add
sbb
or
js
out
add
mov
mov
sbb
in
cmps
sub
pop
in
adc
ds
add
icebp
out
icebp
ds
xchg
loopne
pop
les
and
push
mov
call
or
xor
mul
xor
pop
icebp
jl
add
in
cmp
mov
pop
sbb
movs
xchg
shr
cwde
mov
sbb
mov
cmp
push
push
fild
adc
mov
test
sub
mov
or
xor
sbb
cmc
cmps
and
bound
push
mov
das
jl
jo
enter
ret
test
pop
clc
movs
or
adc
dec
inc
cmc
in
pushf
and
or
push
mov
sbb
jg
cs
mov
sub
pop
rol
jno
adc
or
std
daa
sbb
push
sbb
xchg
test
pop
add
or
loop
push
movs
scas
inc
ins
jb
out
cs
fld
sub
fs
xor
fnsave
xor
mov
pop
push
aas
dec
jl
ror
and
adc
enter
test
inc
pop
and
pop
adc
mov
xchg
scas
test
sbb
add
enter
sub
xor
push
jb
push
movs
(bad)
adc
dec
xor
loop
bound
imul
fs
cmp
iret
cwde
sub
fwait
ins
add
jns
dec
sar
jb
add
scas
retf
stc
jns
mov
mov
mov
inc
shl
sub
aad
cmc
inc
(bad)
aaa
into
(bad)
jnp
sbb
jbe
mov
or
sti
rcl
iret
and
xor
out
dec
xchg
das
sbb
cmp
gs
test
call
outs
cdq
cmp
lods
in
fist
div
mov
jbe
sub
loop
shr
fadd
(bad)
mov
adc
mov
rcl
test
inc
mov
inc
pop
mov
xchg
ins
inc
pop
push
fsubr
add
stos
(bad)
fdivrp
inc
ins
enter
xor
shl
cmp
test
lahf
fs
shl
popf
xchg
and
lods
aaa
jge
fdivrp
lods
adc
jge
xor
jne
stc
sub
ror
mov
or
js
pop
(bad)
data16
or
in
ror
outs
and
or
mov
mov
or
pop
ins
cmp
mov
andnps
std
or
sub
xchg
fsubr
rcl
arpl
pop
cmp
test
mov
pop
xchg
and
xchg
pop
cmp
rcl
repz
mov
jle
loop
retf
call
jp
stos
adc
in
js
adc
es
test
mov
mov
ins
mov
add
mov
arpl
popf
mov
add
jmp
add
fbld
nop
push
(bad)
mov
div
jbe
ins
jecxz
mov
ins
mov
sbb
inc
stc
addr16
add
jge
adc
dec
xchg
stos
ss
inc
cmp
arpl
fwait
and
mul
mov
cwde
leave
push
mov
sbb
popa
test
inc
ins
aas
inc
mov
xchg
(bad)
push
loopne
ret
push
mov
adc
mov
iret
push
xchg
aaa
jmp
mov
jge
pop
mov
jecxz
fwait
adc
test
stos
ss
xchg
xor
aas
test
xchg
sub
das
sub
std
adc
push
mov
in
call
clc
fidiv
cmp
inc
test
fild
mov
jmp
inc
jns
mov
adc
mov
xchg
push
and
lds
sbb
out
cmp
cmp
nop
inc
js
jge
(bad)
rcl
repnz
shl
and
mov
pop
popf
mov
add
rol
stos
jp
sti
shl
xchg
xchg
sbb
xchg
pushf
scas
pop
out
ins
ror
les
xor
ss
leave
jmp
lods
loopne
push
jb
sub
je
outs
pop
adc
and
test
rcl
jmp
sub
sahf
lock
xor
out
and
outs
mov
or
mov
pop
xchg
and
cmps
xor
mov
shr
inc
out
xchg
inc
in
and
gs
retf
mov
push
out
mov
mov
(bad)
test
jl
retf
mov
mov
stos
xchg
mov
fist
std
and
call
mov
dec
arpl
mov
adc
(bad)
cli
je
stos
dec
scas
fcmovu
mov
adc
ds
ror
not
xor
arpl
mov
push
inc
dec
mov
sar
mov
push
in
jg
or
imul
pop
jmp
out
lea
jmp
and
sbb
sar
movs
jmp
mov
fidiv
(bad)
sub
pop
xlat
enter
xchg
pop
adc
or
push
test
ins
pusha
jnp
inc
in
add
and
jmp
or
jecxz
xor
scas
popa
or
ret
fsubr
dec
shl
dec
jnp
sti
add
dec
inc
mov
xor
push
daa
lock
ins
pop
retf
xlat
popa
pushf
pop
cmp
pop
(bad)
xor
data16
pop
data16
sti
icebp
inc
es
aas
aas
pop
sub
jno
shr
test
xchg
xchg
dec
call
imul
sti
cmp
out
mov
dec
scas
push
fwait
sub
fcom
outs
jno
int
out
movs
jle
pop
sar
es
jmp
aaa
lods
es
cs
les
fnstcw
mov
les
mov
lods
mul
scas
das
xchg
push
xchg
pop
mov
cmp
sar
test
adc
test
out
repz
sbb
pushf
dec
cli
jmp
scas
clc
jmp
test
inc
js
(bad)
sub
mov
inc
inc
sbb
xchg
mov
repz
xor
pop
add
ja
js
lods
mov
push
push
inc
xchg
repnz
in
mov
pop
mov
mov
xor
and
cmc
pop
adc
outs
inc
dec
out
aas
inc
xor
cmps
inc
cwde
add
daa
lods
nop
sub
xor
sub
retf
sbb
and
xor
jo
mov
movs
ret
out
pop
retf
sti
jbe
enter
pop
lea
popa
(bad)
stos
in
push
pslld
aaa
lea
dec
push
pop
fstp
shl
jno
push
(bad)
sbb
repz
push
and
sbb
test
repnz
rcr
mov
xchg
mov
xor
sub
into
inc
loop
ds
idiv
fcmovnu
out
inc
and
out
mov
push
add
xlat
dec
lock
adc
test
sbb
lods
mov
mov
add
xor
pop
movnti
ret
xor
ror
enter
sub
adc
ficom
mov
fisttp
sub
or
jbe
ins
pusha
xor
fxch
inc
cmps
(bad)
fldcw
mov
sar
adc
pop
iret
mov
aas
clc
cmc
cmp
sub
cmp
sbb
movs
sub
cmp
xchg
push
or
xor
xor
xor
cmp
push
mov
mov
dec
push
sbb
pop
pop
fdivrp
xor
bound
xchg
pop
call
add
(bad)
int3
jae
mov
in
or
into
(bad)
mov
dec
mov
push
pop
sbb
and
outs
xchg
shrd
adc
xor
aad
sbb
xchg
pop
jp
dec
popa
(bad)
mov
cmps
xchg
or
test
jo
test
jb
push
nop
out
in
fldcw
cmps
out
jns
ds
cwde
cmps
pusha
int
leave
(bad)
push
jae
jp
dec
fild
add
shr
pop
xor
mov
pop
mov
cmp
popf
pop
jae
lods
inc
sub
mov
and
inc
xchg
push
and
or
cmp
mov
aas
mov
jbe
pop
xor
stos
movs
mov
addr16
lea
push
stc
test
nop
in
lsl
or
xchg
in
sbb
stos
popa
push
mov
dec
aas
jnp
and
out
and
pushf
shl
ror
dec
outs
inc
imul
push
retf
xchg
mov
js
jmp
(bad)
jg
add
lds
pop
jmp
mov
lds
sbb
aad
dec
gs
fiadd
mov
fwait
push
(bad)
sbb
mov
retf
inc
ja
movs
mov
mov
mov
cli
ror
mov
jae
add
xchg
icebp
lds
jge
xchg
push
int
minps
stos
push
pop
imul
jae
add
xchg
out
arpl
jl
xor
int
hlt
sub
aam
jmp
and
xor
xchg
int3
jmp
jne
pusha
std
sub
mov
sub
xor
mov
cmp
jbe
loop
or
or
imul
ja
and
iret
lods
add
jle
cmc
jge
fucomip
push
mov
lock
cld
push
sub
add
sar
mov
pop
imul
mov
stos
popa
pop
inc
inc
movs
gs
inc
jle
add
pop
cmps
push
rcr
call
push
sub
xchg
iret
mov
aaa
dec
xchg
or
aam
sub
stos
test
inc
clc
dec
out
xchg
sub
bound
mov
cmps
movs
stos
cmp
push
push
arpl
retf
mov
enter
fsubr
mov
neg
cwde
mov
test
lea
jno
cmps
sahf
mov
push
movs
inc
and
adc
jmp
pop
pop
mov
imul
mov
(bad)
fsubrp
sar
ins
inc
inc
jmp
xor
or
push
adc
std
cmp
out
das
nop
repz
cmp
shr
cld
xchg
cmp
(bad)
shr
(bad)
imul
mov
xchg
add
xor
pop
xchg
and
mov
dec
mov
cmp
sub
fs
stos
jp
lahf
das
aad
dec
setb
cmp
sar
cmc
or
in
mov
sub
xor
push
call
call
hlt
repnz
dec
sbb
into
and
xor
mov
xor
jae
aad
pop
aas
sub
xchg
test
gs
dec
and
mov
(bad)
adc
pop
mov
adc
pushf
push
out
push
sbb
pop
xor
lock
cmp
or
push
std
or
push
mov
inc
inc
xchg
mov
sub
jmp
push
sbb
call
jne
cmp
mov
dec
aad
leave
xor
and
pushf
lock
jg
push
rol
sbb
je
xchg
iret
mov
les
mov
mov
inc
inc
push
sbb
mov
mov
inc
in
test
dec
out
adc
ret
or
stos
push
sti
lea
or
mov
sub
movs
sahf
sub
sub
mov
out
pop
adc
ror
rol
pop
cmp
shl
ds
jno
cmps
lods
je
(bad)
push
or
mov
or
cmp
ins
sbb
loope
and
pop
repnz
or
push
dec
shr
repz
(bad)
icebp
call
mov
pop
push
loope
xor
add
mov
sub
lea
icebp
xchg
jno
aas
sahf
mov
pop
sbb
xchg
mov
jp
or
xchg
dec
fwait
push
inc
xlat
xor
test
pop
aad
xor
sbb
in
cmp
in
mov
mov
movs
ins
push
adc
pop
out
jmp
ins
mov
jle
xchg
fistp
jns
in
xchg
repnz
cmp
cmp
jnp
stc
lods
and
xchg
js
fistp
sbb
ja
inc
mov
(bad)
mov
dec
test
and
iret
pop
dec
shl
ins
ret
std
cmc
cmp
sti
cmps
mov
test
into
sbb
mov
sti
enter
xor
inc
mov
mov
fcmove
jmp
and
call
stc
or
jl
push
outs
inc
fld
jbe
jmp
and
jmp
add
xchg
push
ds
in
arpl
cmc
push
sub
mov
mov
push
clc
push
out
push
retf
dec
(bad)
ins
lock
sub
neg
repz
cmp
xchg
fmul
outs
inc
int3
pop
sbb
ss
xchg
cmp
xchg
cld
popf
push
cmp
sahf
iret
cdq
sub
shr
or
mov
cmps
jge
jmp
dec
gs
push
out
stos
mov
int
rcr
xor
dec
mov
mov
adc
hlt
sub
(bad)
call
gs
sar
retf
add
ins
push
dec
ret
sbb
lahf
in
push
enter
popw
mov
popf
fs
les
pushf
and
lods
pcmpgtb
je
xor
push
ds
xchg
(bad)
fistp
loop
push
cwde
cdq
jg
lea
adc
xor
fsubp
push
(bad)
clc
inc
mov
or
pop
sbb
pop
test
fwait
push
(bad)
xor
mov
adc
mov
mov
and
inc
sub
mov
ds
dec
nop
cmp
cld
jmp
gs
movs
cli
ja
pop
std
push
push
cmp
popa
sti
aad
mov
mov
ror
(bad)
adc
mov
retf
cmps
sbb
data16
(bad)
into
jp
jg
jp
hlt
popa
nop
cld
(bad)
repnz
jl
push
pop
enter
scas
retf
adc
sub
add
or
jns
jbe
stc
inc
add
jae
cmp
cmp
or
stc
in
mov
jmp
test
sahf
mov
js
jp
xchg
popa
ds
fisttp
sbb
push
js
xor
fadd
xchg
jp
or
pop
push
mov
cmp
inc
dec
mov
add
hlt
cmp
int3
or
mov
call
xchg
mov
mov
push
movs
dec
pushf
stos
or
dec
out
test
(bad)
jmp
gs
jns
lods
mov
movs
mov
inc
and
hlt
test
pushf
in
inc
outs
test
or
repnz
(bad)
sbb
cmp
mov
adc
jae
add
push
retf
scas
mov
shl
daa
xor
pushf
add
lds
fcom
ror
dec
xchg
out
and
jl
stos
(bad)
jecxz
scas
mov
cli
aam
int
xor
mov
mov
icebp
jle
push
sbb
clc
popf
push
cld
inc
add
loopne
and
jno
mov
fimul
stc
and
scas
cwde
in
jmp
adc
sbb
jmp
push
cld
dec
push
mov
inc
shl
scas
movs
fwait
push
cs
(bad)
xchg
movs
sti
xchg
inc
xchg
mov
pop
pushf
retf
rcl
xchg
cmp
sub
cli
scas
cmp
sub
mov
dec
push
push
push
mov
std
in
sub
test
sti
imul
inc
add
bound
in
xor
retf
cs
push
in
clc
mov
call
aad
push
push
push
add
add
jmp
ret
mov
push
inc
je
mov
xchg
xor
xchg
sub
aam
retf
pop
fs
adc
cmp
inc
test
ins
xor
loop
popf
cmps
or
pop
add
imul
xchg
sbb
aaa
mov
in
add
lock
sub
lock
imul
aaa
jmp
xor
jmp
movs
rol
xor
movs
sbb
test
sahf
mov
cdq
hlt
mov
or
pushf
out
push
mov
enter
leave
mov
out
fadd
adc
cmp
jle
scas
xchg
jmp
push
push
dec
sbb
mov
lods
mov
or
or
loop
jmp
cmp
lea
fld
xchg
scas
fidiv
jnp
xor
fstp
pop
mov
mov
mov
bound
stc
sub
add
fmul
ins
mov
inc
add
lahf
add
int
and
js
sub
xor
popa
scas
loope
sub
or
rcl
fistp
in
jns
jbe
movs
dec
jge
dec
and
loope
ret
jno
in
xlat
xchg
cmp
pop
push
(bad)
sub
sub
call
lahf
fsubr
push
jl
or
mov
jae
lock
push
push
fidivr
jmp
aaa
or
lods
div
lods
imul
out
call
mov
aad
cmp
pxor
mov
loop
cmc
jg
daa
mov
pop
inc
sti
loope
pop
sub
call
das
xor
outs
and
xchg
or
data16
mov
sbb
adc
sub
aas
loope
inc
mov
repnz
out
fwait
push
adc
dec
ja
push
sbb
call
(bad)
jp
fcom
push
mov
movs
sub
xlat
test
fs
test
xchg
adc
call
or
(bad)
mov
inc
xor
jecxz
lods
xor
in
cmp
inc
(bad)
cmp
mov
repz
mov
js
pop
aas
sbb
pop
jo
ins
pop
mov
jmp
addr16
retf
data16
push
ret
scas
xlat
mov
mov
xor
lods
sbb
int
(bad)
call
outs
pop
rcl
add
cmp
fwait
ja
fld
repz
mov
in
cmp
mov
pop
cmp
nop
ja
les
xchg
xor
inc
sub
xor
in
mov
outs
(bad)
xor
push
ret
xor
shl
scas
sar
lahf
add
push
movs
test
cmps
or
push
std
lahf
jmp
sbb
fwait
jo
adc
fwait
mov
pop
bound
test
xor
fadd
enter
mov
mov
and
pop
xchg
repnz
jp
mov
cmp
rep
jno
loop
push
dec
stc
inc
xchg
ds
ds
jns
ror
push
push
mov
jp
push
xor
pop
push
cmp
in
push
mov
add
mov
push
mov
mov
xor
dec
pop
aad
retf
shl
pop
stc
das
adc
aas
mov
pop
mov
sub
bound
shl
loop
xor
aaa
or
ficomp
mov
fimul
or
popa
call
sahf
sub
push
in
xchg
mov
xor
cwde
out
cwde
nop
jmp
nop
jnp
adc
pusha
mov
test
xor
stos
cmp
add
add
inc
jnp
enter
mov
or
pop
popf
clc
jle
jge
xor
push
psadbw
dec
ins
dec
(bad)
hlt
mov
data16
xchg
pop
xchg
scas
mov
mov
mov
push
mov
pop
ins
(bad)
or
jle
shl
xor
out
xor
mov
mov
adc
xchg
fisttp
add
and
xchg
(bad)
pop
jns
pop
test
mov
jnp
mov
scas
cwde
pop
mov
das
adc
aad
sub
enter
fldenv
mov
adc
in
test
xor
mov
in
fs
or
add
xor
icebp
add
xor
popa
mov
inc
loope
dec
jnp
mov
xchg
fcom
imul
push
lock
or
fwait
xor
scas
ins
daa
lods
cwde
push
mov
pop
sbb
xchg
cli
mov
cmps
jbe
mov
test
sbb
xchg
jmp
sbb
mov
mov
jne
aaa
push
cmp
and
mov
xchg
push
mov
xchg
aas
or
pop
jns
dec
push
sub
or
add
mov
push
ins
xchg
std
(bad)
fisub
pop
cld
jo
shr
add
push
arpl
mov
sub
pop
ins
jnp
popf
pop
into
xor
jno
mov
in
(bad)
add
push
adc
jno
or
xor
push
mov
jp
sbb
cmp
call
bound
jecxz
add
dec
mov
sbb
xchg
xchg
add
ja
cmp
pop
loop
outs
outs
and
push
jp
loope
jle
sub
iret
jbe
mov
mov
pop
scas
(bad)
mov
or
mov
sbb
or
aaa
and
mov
not
lds
mov
sahf
outs
sub
push
add
sbb
(bad)
out
jno
jg
mov
inc
out
ret
mov
out
adc
(bad)
pop
retf
inc
jae
test
mov
and
mov
pusha
jl
ficomp
lds
xchg
das
mov
lods
jmp
call
xor
ror
jmp
lods
clc
cmp
adc
mov
out
pop
adc
push
mov
test
mov
push
rol
scas
scas
lods
push
fld
outs
ret
dec
pop
clc
and
push
stos
dec
lods
jl
or
mov
jg
mov
in
test
fsub
push
popa
test
jmp
pop
cmp
jbe
imul
loop
inc
fnstcw
(bad)
sbb
push
sub
mov
xor
sar
loop
sub
ins
ja
ins
and
(bad)
repz
xor
push
jecxz
mov
adc
xor
mov
xor
repnz
jl
ss
mov
call
lods
sub
push
js
(bad)
mov
mov
add
xchg
or
es
mov
addr16
sub
sahf
aam
inc
fcomp
les
je
push
sub
repz
pop
stc
push
xchg
inc
push
movs
xor
cmp
push
mov
xchg
test
jne
enter
imul
imul
repz
sbb
lods
add
mov
fidiv
jge
inc
iret
or
out
loopne
div
push
aaa
and
sub
enter
pop
xor
adc
lods
pop
inc
shl
add
pop
pop
fs
add
sbb
add
pusha
jb
fdivr
cmps
popf
push
sbb
inc
rcl
(bad)
jmp
mov
nop
cs
inc
in
(bad)
out
in
in
or
jmp
call
adc
pop
jo
ret
pop
cmp
ins
(bad)
add
pop
aam
add
stos
sbb
loope
add
hlt
mov
out
or
test
xor
arpl
ja
xchg
popa
sbb
cmp
pop
dec
sbb
(bad)
out
(bad)
imul
sub
push
mov
(bad)
sub
dec
dec
in
xchg
xor
mov
ins
and
outs
test
adc
mov
sbb
sub
push
xchg
dec
fwait
stc
retf
mov
sbb
fld
aam
xchg
xor
inc
add
push
add
sub
xlat
and
inc
inc
add
jnp
aaa
and
cmp
imul
dec
jae
jo
jno
jmp
sub
scas
push
fcom
retf
stos
push
dec
dec
rcl
jns
(bad)
addr16
clc
pop
sar
inc
or
fimul
cmp
mov
mov
jbe
or
imul
ss
enter
mov
or
popa
xor
sub
mov
adc
inc
dec
rcl
adc
sub
dec
(bad)
cmp
test
and
out
and
sahf
mov
or
test
aas
pop
jno
mov
sub
xchg
fsub
leave
lahf
mov
jp
mov
hlt
xor
xchg
xchg
daa
lahf
cmp
scas
adc
das
hlt
dec
out
ror
fisubr
in
out
sbb
cmps
test
dec
fcmovu
rcl
ds
sti
dec
shl
jns
sti
imul
adc
mov
adc
das
dec
test
loop
outs
sbb
and
mov
in
imul
add
xor
push
dec
lea
imul
in
sub
xor
aad
or
add
in
sub
sbb
sbb
xor
push
je
jg
test
clc
add
ror
repnz
jp
xor
clc
(bad)
das
jo
inc
loope
mov
ja
shl
(bad)
mov
adc
mov
movs
mov
or
add
pop
cmc
scas
rcl
scas
pop
mov
fcomi
push
push
sbb
jl
xchg
outs
push
fs
jmp
sbb
(bad)
leave
cld
mov
repz
sub
dec
ja
mov
jo
dec
xor
cmp
or
sbb
lock
mov
adc
xor
inc
xchg
jg
(bad)
aam
mov
adc
dec
lds
dec
out
xor
cmps
lds
call
jnp
mov
pop
sub
jne
dec
in
shl
cwde
call
nop
ins
add
in
xchg
pop
pop
jae
xchg
faddp
mov
xor
lea
aam
inc
js
dec
cmp
adc
sbb
and
sub
dec
dec
imul
dec
fs
repz
sbb
sub
data16
aam
ret
push
cmp
add
xor
pop
xchg
mov
dec
xor
nop
call
jbe
clc
mov
ins
jecxz
cwde
and
mov
stos
test
cmp
mul
in
js
dec
or
in
ror
std
mov
call
sbb
pusha
sbb
jmp
movs
mov
mov
and
test
stc
adc
ds
cmp
scas
neg
ja
pop
cwde
xchg
xchg
rcr
or
fwait
daa
dec
fadd
icebp
mov
jmp
ins
cli
lods
pop
inc
data16
ret
shl
(bad)
push
mov
lods
loopne
jmp
hlt
mov
mov
sbb
inc
js
in
add
dec
(bad)
jle
jg
sub
repnz
xor
call
call
hlt
inc
push
sbb
(bad)
test
sbb
dec
mov
lea
or
xor
popa
jmp
mov
sub
mov
int
cmp
inc
jmp
gs
mov
ins
std
inc
jmp
nop
mul
fstp
aad
pushf
add
push
inc
jbe
pop
test
mov
ret
and
fxch
xchg
sahf
mov
pop
jns
repnz
jp
sub
xchg
mov
push
pushf
sub
or
cmp
mov
int
fs
cmps
dec
push
jns
mov
push
fmul
in
mov
pop
out
pop
jno
mov
cmps
sbb
fbld
or
pop
fld
out
arpl
pushf
mov
jb
cdq
clc
ds
out
adc
mov
into
and
cdq
pop
mov
inc
dec
daa
cmp
into
mov
mov
inc
pusha
sub
repz
xchg
jno
adc
data16
push
in
pop
aas
lods
adc
out
test
pop
pop
mov
cmc
in
inc
push
aad
xor
(bad)
xlat
xor
mov
loope
adc
test
sbb
mov
mov
and
add
into
jmp
nop
push
or
xchg
push
and
push
sti
mov
push
pop
dec
aas
inc
mov
outs
xchg
(bad)
jb
and
mov
add
mov
test
xchg
sub
mov
iret
or
in
lahf
fnstenv
pop
and
lods
mov
mov
js
cmps
inc
call
pop
in
push
gs
ror
sbb
ss
jb
gs
pop
xor
into
push
adc
test
mov
xor
rol
cmp
xor
mov
sbb
cmp
js
mov
cli
add
mov
sub
aaa
scas
or
and
ret
xor
movs
sub
out
add
rcl
cmp
add
xor
or
adc
out
cmc
jbe
pop
jg
retf
or
mov
mov
outs
or
js
or
stos
sbb
test
inc
fdivr
sub
push
jbe
xchg
out
fmul
mov
std
scas
ins
push
xor
sbb
mul
sbb
ins
mov
(bad)
out
jnp
dec
hlt
jne
iret
cmp
loop
and
mov
lock
xor
add
xor
sub
pop
mov
int3
movs
and
mov
cmps
hlt
enter
or
sahf
into
sub
add
mov
iret
movs
xchg
add
les
xchg
aam
repnz
imul
push
and
jne
or
not
lods
arpl
jle
hlt
push
lock
cmp
xor
and
fldenv
(bad)
cli
icebp
fcom
add
leave
pop
sub
je
or
inc
push
mov
retf
pop
in
sbb
fnstenv
out
mov
gs
dec
sub
dec
imul
mov
lds
jo
xor
sub
cli
test
(bad)
imul
cmp
int3
jne
dec
cmps
repnz
shl
cmp
mov
push
sbb
test
(bad)
(bad)
jg
retf
into
or
inc
stos
das
adc
retf
xchg
js
jp
cmps
xchg
sbb
fs
cmp
mov
aas
inc
jo
push
sub
pop
test
aam
retf
add
dec
loope
jmp
jns
mov
stos
das
rcr
and
and
xor
dec
or
call
cmps
pop
add
mov
ins
cmp
add
rcr
jmp
iret
mov
clc
cmp
dec
pop
adc
shl
push
pop
or
in
int3
nop
mov
cwde
mov
cmps
dec
sbb
rol
xor
scas
rcl
sub
pop
sbb
icebp
mov
out
stc
jb
lods
into
scas
jle
movs
jmp
movs
pop
shl
pop
mov
inc
imul
in
vpsubusw
jl
xchg
les
mov
inc
push
cwde
jb
imul
mov
dec
nop
iret
popf
xchg
fdivrp
inc
pop
out
ja
in
sub
add
mov
fist
xchg
cmc
call
push
ja
leave
das
push
dec
and
mov
aad
mov
retf
stos
mov
cmp
mov
fisub
ret
push
pop
inc
pop
xchg
jae
lea
dec
jl
test
test
call
mov
jecxz
loopne
ret
lds
sub
mov
sub
shl
mov
cmp
dec
(bad)
adc
call
jbe
adc
and
cwde
or
jns
inc
call
iret
out
add
mov
sub
stc
dec
retf
xchg
es
xor
outs
movs
adc
push
jnp
cdq
cmps
sahf
push
xchg
aad
les
push
repnz
dec
push
cmc
sbb
test
sbb
enter
and
mov
or
popa
add
xor
fld
ret
mov
enter
std
xor
mov
pop
popf
xor
scas
jbe
inc
mov
pusha
dec
enter
popf
xchg
xor
outs
fadd
adc
mov
sub
es
pop
pop
pop
adc
adc
dec
mov
xchg
jecxz
out
and
mov
jae
jecxz
jb
mov
iret
fld
jbe
jecxz
gs
mov
xchg
jmp
xchg
loopne
fwait
mov
dec
mov
add
mov
inc
jmp
ret
jmp
jb
jne
fimul
mov
inc
mov
inc
push
icebp
inc
lahf
add
jnp
popf
aas
imul
push
js
call
mov
mov
pop
fwait
fs
xchg
repz
rol
xchg
in
jecxz
loop
mov
scas
cmp
retf
rcr
js
ss
or
or
add
jne
inc
pop
addr16
adc
jo
sub
test
sar
(bad)
xchg
fdiv
mov
pushf
inc
lds
xlat
xor
inc
inc
into
dec
int
inc
ret
in
cmp
sub
sub
shl
sub
add
ins
cmps
std
dec
push
rol
add
adc
pop
rcl
leave
ins
fcmovb
xorps
add
leave
adc
icebp
loopne
jge
retf
or
cmp
push
gs
jmp
xor
cwde
fisub
push
xchg
ja
mov
addr16
cmp
pop
dec
pop
push
test
fmul
in
xchg
imul
clc
mov
lock
jp
movs
add
scas
push
push
pop
call
das
in
cmc
(bad)
out
mov
add
xor
out
push
add
jbe
lock
test
pop
lds
jo
arpl
add
sbb
iret
stos
sahf
mov
mov
xchg
in
inc
shl
push
or
mul
push
lea
pop
sbb
rol
inc
out
scas
(bad)
iret
outs
inc
in
inc
dec
jnp
mov
dec
sub
mov
sub
inc
scas
out
cdq
add
dec
and
xchg
mov
mov
sub
lods
lahf
nop
rcr
in
js
add
les
or
arpl
out
jmp
arpl
shr
xor
retf
aas
adc
(bad)
jmp
push
pop
sbb
ret
mov
out
out
mov
inc
pop
or
test
cmp
pushf
mov
je
mov
mov
out
scas
std
sar
pop
shr
pop
or
dec
scas
sbb
(bad)
ret
jo
in
(bad)
not
push
mov
int
lahf
or
adc
jnp
mov
stos
adc
and
out
mov
or
pop
add
sbb
xchg
or
xchg
sbb
rcl
mov
mov
pusha
adc
push
loope
add
div
fild
loope
push
retf
ss
xchg
test
push
dec
pop
mov
adc
mov
xchg
mov
xchg
cs
mov
aas
popf
sub
fiadd
call
push
aaa
xchg
sbb
into
aad
aam
fimul
popa
mov
xor
xor
(bad)
sub
sbb
lods
test
cmp
xchg
arpl
aam
icebp
adc
int3
and
test
mov
xchg
loopne
or
dec
jl
mov
retf
jg
xor
xor
push
inc
(bad)
and
(bad)
shl
mov
fnstsw
sahf
shl
mov
mov
inc
sbb
(bad)
mov
rcr
xchg
out
mov
jo
or
fsub
sub
lods
sbb
test
mov
in
call
jnp
iret
pop
and
dec
mov
std
pop
cdq
rol
xor
je
ret
xchg
push
sbb
adc
add
inc
call
call
cmp
sbb
lea
mov
loop
xchg
test
test
addr16
jbe
or
or
clc
lods
pop
pop
or
sar
fucom
jg
mov
dec
add
cs
and
push
pop
arpl
jnp
push
inc
xchg
ja
xchg
sbb
call
dec
jae
cmp
jecxz
stc
daa
sbb
mov
inc
inc
push
pop
stos
xrelease
adc
jns
mov
mov
ins
shl
lahf
add
add
push
out
pop
arpl
retf
adc
and
push
cmp
or
rcl
rcl
aad
cmp
and
jle
mov
or
hlt
mov
add
pop
iret
adc
lods
repz
jnp
imul
cmps
es
jnp
push
xchg
jle
inc
ja
shl
bound
movs
mov
(bad)
rol
ds
dec
jno
sub
and
sbb
addr16
pop
cmp
xchg
aaa
cmps
jns
(bad)
dec
xor
test
in
ds
gs
ss
mov
(bad)
int
inc
call
sub
and
jg
inc
push
ret
mov
ins
dec
mov
(bad)
mov
sub
movs
pop
retf
push
lods
push
adc
clc
or
rcl
(bad)
mov
mov
mov
jns
xchg
xor
mov
push
cmp
sbb
lock
out
scas
adc
cwde
mov
sub
ins
xchg
imul
push
movs
das
imul
xor
xchg
cmp
and
frstor
jo
int3
lods
and
clc
pop
adc
retf
jnp
xchg
aad
ins
(bad)
jl
jg
mov
push
ins
lods
xlat
adc
out
inc
aas
mov
push
sbb
push
fcmovbe
call
adc
(bad)
dec
std
aam
mov
cmps
mov
push
lahf
call
scas
mov
js
inc
and
or
jnp
jmp
push
out
pop
inc
jge
pop
xchg
stos
loopne
adc
pusha
jb
jmp
sub
call
inc
sbb
inc
(bad)
call
push
pop
and
jno
xchg
xor
add
dec
(bad)
pop
xchg
sub
out
push
lea
cmps
push
xlat
out
scas
sbb
scas
out
pop
sbb
cmp
sub
and
loop
adc
fwait
lds
leave
mov
ror
sahf
or
mov
mov
(bad)
ficom
or
mov
mov
xchg
ja
add
es
repz
and
(bad)
dec
mov
sahf
sahf
jge
cmp
ret
lea
out
dec
cdq
pop
pop
fisttp
int3
shl
adc
jo
sub
rcl
fidivr
add
xchg
out
xchg
jmp
hlt
push
fisttp
ffree
and
pop
aaa
add
or
xchg
in
ins
cmps
add
sub
mov
jge
gs
dec
lods
or
mov
pop
loopne
sub
inc
fwait
test
dec
inc
xchg
mov
mov
retf
inc
lock
fist
nop
addr16
retf
ret
pop
pusha
cmps
mov
ja
(bad)
lods
jns
pop
or
daa
stos
test
inc
adc
loope
lahf
add
jbe
inc
(bad)
dec
dec
jmp
imul
loope
scas
pop
xchg
or
nop
mov
adc
mov
dec
dec
or
jg
bound
cmp
dec
fiadd
push
retf
pop
call
into
jbe
push
arpl
outs
outs
(bad)
out
or
sbb
xor
sub
inc
aam
in
fdiv
push
adc
jnp
and
and
mov
cs
sub
dec
adc
and
test
lods
dec
xchg
push
int
sbb
nop
retf
push
adc
jo
rol
push
in
icebp
sub
into
and
es
pop
pop
icebp
rol
nop
mov
and
fsub
jo
mov
push
shl
and
push
push
pop
repz
xchg
cli
xor
mov
cmp
or
add
mov
sbb
outs
cmp
bound
mov
push
push
nop
or
stc
pop
das
cmp
xor
mov
(bad)
fnstenv
out
push
adc
jae
bound
mov
or
call
fadd
xor
adc
call
out
and
jg
(bad)
div
shr
xchg
sahf
pop
ins
je
ret
or
fs
addr16
inc
push
or
aad
popa
and
daa
(bad)
xchg
loopne
jp
cmp
jmp
stos
jle
cwde
call
push
xchg
call
fiadd
push
addr16
mov
lods
mov
test
mov
sti
mov
cmps
and
addr16
mov
dec
fdiv
unpcklps
or
out
inc
movs
or
addr16
and
xchg
addr16
outs
add
lods
jge
jle
or
push
cmp
mov
cmc
test
ror
das
aam
ficomp
xchg
pop
loopne
and
mov
ins
dec
(bad)
xor
in
dec
jp
sub
in
add
inc
mov
adc
xchg
aaa
sbb
or
test
imul
inc
dec
pushf
jmp
adc
into
xchg
pand
inc
ins
ins
hlt
or
out
and
in
sub
dec
push
scas
mov
cmp
cmp
outs
pop
and
pushf
sahf
inc
sar
jmp
mov
cmp
add
jp
jge
sbb
(bad)
push
or
add
adc
aam
or
imul
ficomp
add
xlat
ins
dec
scas
cmps
gs
fdivr
jne
cmp
lock
mov
lea
and
in
data16
xor
out
arpl
mov
and
and
repnz
xchg
cli
enter
fisub
pop
arpl
mov
add
and
mov
test
push
(bad)
out
in
dec
je
lock
or
stos
std
cmp
jno
pop
test
mov
mov
pop
stc
lods
jmp
call
mov
inc
mov
pushf
mov
aas
xor
cld
and
push
inc
imul
rol
mov
iret
pop
and
mov
adc
xchg
ret
jp
jnp
das
mov
jbe
push
xchg
adc
and
pop
mov
lods
xchg
jb
mov
lahf
push
pop
jo
xchg
xchg
pop
mov
or
rol
xchg
jno
fadd
mov
sub
js
imul
das
or
lods
jmp
xor
retf
dec
dec
push
xchg
inc
fsub
push
icebp
add
ja
mov
fstp
cs
mov
retf
movs
adc
movs
jbe
test
dec
pop
call
mov
jno
out
ret
aam
xor
jb
or
and
push
inc
adc
fist
inc
adc
adc
mov
inc
sub
cmp
xor
fiadd
push
sub
repnz
jne
not
mov
(bad)
dec
cdq
test
inc
jl
mov
cmp
cmps
aam
add
pop
call
addr16
jbe
clc
and
scas
fucom
in
(bad)
fsubr
loope
jmp
pop
iret
cmps
sub
popf
(bad)
scas
and
lock
sti
jae
(bad)
(bad)
sbb
sahf
scas
(bad)
push
pop
rcr
in
dec
test
and
cmp
mov
push
pop
fdiv
jbe
mov
jmp
cmp
and
add
jb
lock
rcr
je
imul
ds
or
sbb
pop
sub
adc
icebp
mov
imul
mov
dec
(bad)
dec
xchg
stos
lahf
cs
das
push
pop
xchg
adc
sbb
mov
inc
jge
hlt
sub
in
xchg
sbb
cwde
or
sub
dec
in
mov
mov
xchg
adc
aam
dec
ins
add
aad
aas
xor
or
inc
push
retf
inc
adc
adc
lods
je
outs
ficomp
shr
repz
cld
inc
ins
sar
std
es
fstp
push
mov
pop
lea
pop
cmps
pushf
in
in
lea
inc
fild
pop
addr16
out
dec
fwait
jne
je
xchg
xlat
das
cmp
mov
dec
jge
and
push
adc
sub
jp
shl
lods
out
gs
inc
ret
or
xchg
(bad)
or
cmp
push
pusha
(bad)
leave
add
xchg
xor
ror
mov
fsubp
call
mov
or
push
cdq
jmp
call
out
arpl
es
pop
xchg
lahf
cdq
inc
sub
and
nop
pushf
popa
sbb
test
(bad)
ins
scas
adc
test
dec
xor
push
in
loop
int3
dec
jb
xchg
loope
push
pop
hlt
test
adc
mov
xor
adc
stos
add
jl
mov
scas
adc
mov
ret
iret
xchg
xchg
fcmovne
adc
inc
adc
call
sub
xor
cmp
pop
push
or
adc
popa
aam
dec
outs
cdq
jmp
jb
jg
or
cld
nop
cmp
fimul
push
pop
mov
pop
cmp
or
jns
inc
hlt
jno
test
inc
xor
dec
or
push
jns
xor
imul
cs
mov
and
add
push
mov
jp
pop
(bad)
adc
fld
sbb
inc
mov
in
inc
or
pushf
dec
cld
or
jecxz
(bad)
loopne
test
pop
fidivr
das
dec
adc
pop
ret
add
outs
jmp
iret
mov
das
stos
mov
test
pop
loop
sub
ret
shl
loope
or
mov
aas
movs
xchg
addr16
sahf
sbb
xchg
cwde
rcl
jbe
cmp
pushf
xor
ds
scas
sub
inc
scas
xchg
(bad)
pop
imul
mov
inc
jb
mov
sub
test
pop
loopne
pop
pop
sub
ins
fild
bound
push
cdq
es
pop
push
mov
pop
aad
je
dec
lock
scas
cli
adc
popf
adc
outs
adc
and
ss
push
push
mov
mov
sub
cmp
push
adc
and
dec
ret
test
push
imul
(bad)
call
mov
mov
aaa
mov
mov
daa
or
mov
repnz
scas
and
mov
mov
push
mov
fmul
pop
sar
and
rcr
push
pop
jb
scas
icebp
outs
add
ret
dec
mov
xor
jmp
add
adc
int
pusha
out
(bad)
push
arpl
fistp
add
out
sbb
push
mov
xor
add
xor
sti
mov
pop
stos
or
mov
xchg
mov
call
rcr
ret
outs
(bad)
out
fnstcw
pop
adc
mov
popf
fild
push
xchg
jns
fld
pop
inc
enter
imul
in
add
es
or
sbb
lods
pop
xchg
imul
jb
outs
or
stc
pop
cmp
push
hlt
ins
jne
mov
pop
xor
cwde
cmp
cmp
gs
jecxz
inc
imul
ins
test
push
aad
pop
push
push
scas
aam
adc
out
or
xchg
scas
movs
fistp
jb
pop
aad
add
cli
jge
jp
arpl
dec
mov
cmc
push
lock
adc
pop
call
retf
les
mov
push
rcl
into
mov
cmp
(bad)
cli
push
sub
out
icebp
add
push
out
inc
aas
mov
call
setb
cmp
mov
xchg
out
sbb
lds
adc
nop
out
jg
test
xchg
call
cmps
sub
outs
dec
mov
mov
stc
jg
jbe
dec
mov
ins
sbb
retf
mov
iret
pop
mov
jg
iret
push
outs
retf
aas
ss
neg
jbe
inc
sub
sub
movs
sbb
mov
cmps
jmp
bound
lods
mov
mov
jae
push
lock
push
mov
push
ja
jmp
pop
pop
jbe
jg
sar
movs
mov
sar
jge
lock
mov
ficomp
std
out
stc
cmps
int
mov
or
dec
pop
pop
add
pop
imul
and
xchg
mov
lods
retf
pop
jl
push
movs
inc
pop
jne
push
cld
call
jno
cmc
sub
ret
dec
push
and
sbb
es
xor
and
inc
shr
mov
std
push
shl
mov
sbb
jns
dec
test
imul
mov
sub
movs
dec
sub
(bad)
(bad)
add
sti
pop
out
enter
cmp
aaa
sbb
movs
cmp
mov
dec
mov
or
and
das
add
push
std
sub
rcl
inc
xchg
cmp
shl
push
pop
int3
pushf
loop
(bad)
ds
xor
int3
call
dec
call
mov
jbe
retf
mov
adc
call
repz
inc
mov
scas
arpl
xlat
movs
pop
inc
clc
dec
retf
stc
adc
xchg
cwde
(bad)
sbb
mov
jae
mov
add
sahf
sbb
xchg
dec
pop
cmps
out
or
imul
pop
movs
ret
pop
out
fs
int
popf
mov
mov
xor
lods
imul
mov
mov
sbb
dec
std
call
arpl
mov
add
pop
push
push
mov
imul
stos
mov
lods
leave
jne
xchg
mov
cmp
push
repz
mov
sub
sti
mov
ins
mov
dec
mov
out
jmp
xor
ficomp
ror
inc
popa
(bad)
jo
daa
push
xchg
push
pusha
add
test
cwde
out
or
pop
sti
aam
jp
out
mov
repz
test
popf
aad
je
mov
pop
fsubr
adc
dec
mul
or
cdq
bound
jl
(bad)
retf
jb
xlat
das
(bad)
jno
not
xchg
sub
jno
movs
xor
mov
dec
cwde
retf
aad
mov
inc
gs
je
mov
mov
icebp
shl
cmp
icebp
idiv
sbb
and
add
xchg
cmp
push
cmp
inc
pop
daa
push
pushf
lahf
clc
sbb
pop
dec
das
jb
test
xor
fsubr
arpl
fnstsw
aam
xchg
push
mov
xchg
adc
movs
outs
fdivr
mov
call
rcr
mov
cdq
out
lea
mov
jns
shl
iret
and
inc
xor
ins
sar
jg
jne
mov
add
lock
dec
mov
dec
test
dec
fadd
or
leave
fs
pop
xor
adc
popa
mov
or
cmc
lahf
and
scas
inc
push
ins
mov
xchg
add
sub
mov
lds
pop
pop
xchg
xchg
adc
cmp
xor
cmp
out
fs
xor
and
mov
inc
daa
mov
xor
sub
and
mov
sbb
xchg
dec
dec
outs
subps
iret
mov
inc
xchg
mov
js
pop
push
cs
in
adc
sbb
jns
mov
dec
dec
dec
inc
cmp
test
mov
cmps
sbb
jmp
cmps
sbb
and
leave
adc
movs
xchg
xchg
jne
fdivr
pop
sub
aad
in
outs
je
xor
imul
xor
jbe
add
lock
xchg
add
hlt
out
cli
sar
stc
std
sub
call
dec
shr
jbe
shr
bound
repz
cwde
in
mov
xor
repz
jne
cmp
xor
cdq
dec
test
jns
jmp
jmp
xchg
mov
cmc
test
mov
repnz
dec
repz
les
pop
xor
or
sbb
lahf
fisttp
ins
js
mov
sub
cmp
or
shr
xor
xor
dec
adc
out
push
retf
ins
mov
adc
iret
(bad)
mov
pop
xchg
cmps
in
test
jl
jecxz
fwait
stos
retf
or
xor
jge
test
pop
push
sbb
and
outs
xor
and
outs
stos
imul
adc
xor
xchg
push
in
or
add
adc
xchg
dec
movs
mov
xchg
out
inc
bound
push
mov
imul
push
test
xor
and
cmp
add
adc
call
shl
mov
jo
clc
popa
popaw
jno
pop
add
jne
add
sub
mov
rcr
sti
cli
ret
sahf
lahf
pcmpeqb
inc
mov
push
sbb
dec
jb
(bad)
fst
cmp
mov
loope
cmps
jecxz
sbb
in
scas
push
lahf
mov
adc
adc
mov
repnz
pop
pop
jp
mov
inc
jp
shl
pop
mov
ds
iret
add
out
sub
enter
pop
inc
push
cmp
cmp
jge
pop
hlt
out
xchg
jnp
push
push
cld
nop
stos
mov
or
cld
xchg
jecxz
or
pop
xchg
and
cmps
jae
adc
ficomp
inc
pop
push
inc
fadd
pop
add
xor
or
ins
jecxz
jo
add
call
bound
shr
pop
lea
repz
sbb
lea
icebp
jno
push
into
movs
(bad)
(bad)
adc
fisub
iret
jmp
popa
cdq
and
and
sti
xor
sbb
aam
loop
loop
push
shr
aaa
sahf
jp
sahf
js
add
pop
mov
scas
pushf
ds
shl
aam
and
jo
cmc
fld
aad
mov
xor
cs
mov
call
leave
cmc
push
leave
sahf
mov
ins
arpl
xchg
(bad)
leave
nop
cmp
or
push
dec
daa
pop
and
retf
(bad)
loop
ja
stos
xor
lahf
jmp
fdivr
enter
xchg
leave
out
jecxz
sub
and
(bad)
call
or
loop
popf
pop
jmp
popa
mov
shl
rcr
leave
stc
pop
xor
or
aam
movs
enter
sub
xor
adc
test
pusha
sbb
or
loope
or
xchg
adc
rcl
dec
mov
pop
cmps
gs
pop
and
mov
jbe
sar
enter
adc
lods
jmp
bound
ja
outs
xchg
jmp
mov
leave
lods
sbb
dec
lods
cmps
adc
pop
push
in
xor
fstp
in
(bad)
jmp
xor
xlat
mov
cmps
das
mov
xor
dec
sub
loop
retf
stos
div
adc
xchg
sub
sbb
rol
daa
pop
xor
mov
cmps
mov
fsubr
inc
loopne
pop
dec
sub
adc
(bad)
das
mov
xor
sbb
jmp
jmp
and
or
xor
test
sbb
dec
and
xchg
cmp
shl
mov
dec
inc
add
mov
xchg
ret
xor
dec
mov
fsub
shl
adc
fisttp
nop
call
aas
fdivr
sub
in
push
int
(bad)
push
inc
outs
jmp
mov
enter
fisubr
mov
fcomip
ds
push
idiv
or
daa
call
out
repnz
add
clc
lds
jecxz
cs
out
push
inc
sub
jae
sbb
mov
cmp
dec
and
inc
test
pushf
cwde
(bad)
and
dec
xor
stos
mov
inc
jb
mov
or
push
jbe
je
inc
lods
data16
sbb
gs
outs
inc
in
(bad)
and
mov
mov
aaa
push
push
or
xor
sbb
aaa
pop
rcr
call
icebp
pusha
sub
lock
cmp
jb
loop
(bad)
iret
mov
cmp
lahf
das
sub
(bad)
mov
jo
lds
lods
fild
xlat
push
in
jp
cli
shr
popf
in
dec
ror
push
movs
sbb
and
sub
pop
enter
fisub
mov
xor
jne
gs
es
cs
(bad)
pushf
out
movs
add
mov
in
inc
jb
pop
ficomp
or
repz
cmp
dec
add
int3
mov
xchg
fbstp
and
mov
push
sbb
aas
dec
sbb
out
adc
mov
int3
jb
push
clc
sbb
in
ins
ja
cmps
xchg
pop
push
xchg
and
int
loope
jmp
inc
loop
clc
mov
push
inc
sbb
inc
push
icebp
jmp
or
test
imul
add
jecxz
pop
push
dec
fsubrp
mov
loopne
retf
call
jno
call
xchg
push
pop
xor
mov
hlt
jmp
outs
(bad)
aaa
fild
jp
dec
jns
jge
jo
sahf
sub
jmp
repz
inc
fst
ficom
xor
jmp
xor
xlat
xor
add
popa
inc
push
jno
or
in
inc
dec
mov
xchg
test
idiv
popf
push
dec
lods
std
(bad)
retf
fidiv
or
dec
retf
pop
lods
push
mov
cmp
std
inc
fisubr
push
dec
in
mov
push
mov
sub
adc
jmp
mov
ss
neg
or
(bad)
cld
into
aaa
mov
std
retf
montmul
cmps
add
std
jns
xchg
inc
retf
ret
repnz
adc
push
cs
xor
data16
add
jno
vhaddps
std
cmp
xchg
jge
iret
and
pop
sbb
repnz
imul
popf
pop
sbb
xchg
mov
rcr
add
dec
bound
call
cmp
test
imul
mov
pop
(bad)
fxch
arpl
dec
jmp
in
pop
and
mov
loop
jo
call
xor
fisttp
aaa
pusha
(bad)
test
jns
fwait
mov
or
add
pop
mov
jns
sar
jae
xor
outs
mov
cmp
ins
or
xor
adc
or
lahf
jmp
inc
(bad)
out
cli
out
xor
cwde
push
xor
lea
cmp
push
sub
xor
ds
ret
dec
inc
sahf
pop
mov
mov
sub
int3
jb
rcl
push
outs
cwde
jl
xchg
aad
out
repnz
(bad)
lock
xor
retf
sbb
inc
mov
loopne
fimul
dec
xor
mov
aas
fisubr
int
outs
push
pushf
mov
aas
cld
or
loop
lahf
aam
enter
nop
es
mov
or
xchg
sahf
adc
sahf
scas
pop
mov
dec
nop
movs
adc
mov
not
bound
sbb
pop
inc
dec
sbb
push
call
into
xchg
mov
push
xchg
mov
pusha
inc
sub
pop
pop
imul
push
(bad)
jle
xchg
mov
imul
das
dec
xchg
lahf
push
mov
adc
icebp
mov
adc
cmps
add
cmp
jbe
dec
popa
leave
mov
fist
or
sbb
pop
jno
les
pop
aam
add
int3
lods
rol
stc
cmps
mov
loopne
inc
adc
mov
xlat
pusha
sbb
dec
arpl
pop
jb
jno
pop
ror
ins
xchg
cmp
dec
mov
xchg
dec
mov
arpl
xchg
mov
icebp
pop
push
outs
into
xor
xor
push
jmp
pop
and
jns
test
jbe
ud2
icebp
jne
cmps
mov
mov
sar
mov
mov
neg
lahf
xor
inc
cld
dec
adc
out
outs
fnstcw
hlt
add
pop
daa
shr
std
aas
dec
and
aad
add
call
jnp
idiv
rol
stos
cmp
mov
mov
pop
mov
push
shl
cmp
sbb
das
into
sub
xchg
popf
jg
repnz
cld
icebp
retf
jbe
mov
test
std
not
pushf
scas
mov
call
dec
bound
sub
nop
dec
xor
int3
imul
lods
push
push
das
je
push
fnstcw
ja
sbb
inc
into
sub
out
cmps
push
jg
mov
test
jg
fisub
jae
ja
xlat
add
(bad)
outs
shl
push
sub
fst
mov
dec
xchg
adc
dec
push
addr16
push
pop
xchg
shl
in
xor
imul
push
sbb
clc
addr16
fidivr
pop
hlt
cwde
push
(bad)
retf
cmc
clc
(bad)
inc
cmp
mov
in
div
and
xchg
fild
test
in
add
dec
sub
es
in
jl
repnz
push
in
in
call
cmp
jp
xchg
in
dec
retf
mov
ret
loop
push
call
pop
xor
iret
retf
mov
or
cmp
add
data16
stos
ss
inc
nop
in
aaa
scas
jbe
jb
cmp
scas
xor
and
jnp
cmp
aas
and
and
lds
dec
mov
andnps
retf
cwde
inc
jmp
jae
(bad)
sub
sub
sbb
dec
add
mov
mov
sub
push
adc
sub
es
sub
sbb
xchg
imul
lods
jns
ror
sahf
int
cmp
outs
dec
retf
das
xchg
shl
mov
call
(bad)
test
imul
lea
imul
and
clc
xor
mov
mov
mov
mov
movs
xlat
addr16
lods
mov
(bad)
pop
dec
scas
xor
dec
loop
lds
fst
ja
cmp
cwde
in
sub
sub
cmp
inc
out
mov
push
mov
push
leave
xchg
xchg
or
fnsave
lea
pop
mov
dec
mov
bound
movs
inc
jg
add
retf
xchg
lock
dec
in
outs
sub
jo
imul
dec
hlt
pop
inc
jns
jmp
fwait
lahf
adc
fnstsw
jbe
xor
int
scas
and
out
push
xor
scas
adc
inc
ins
(bad)
imul
pop
ins
scas
dec
out
clc
xor
jbe
std
clc
leave
adc
in
scas
xor
xor
aaa
mov
cld
mov
imul
enter
xchg
bound
imul
pop
inc
cmp
rol
or
shl
and
nop
mov
add
int
rcr
xchg
xlat
mov
pop
push
adc
bound
pop
ins
dec
out
stos
ja
(bad)
imul
push
cli
addr16
out
(bad)
sub
pop
mov
cmp
cmc
es
add
or
and
push
xchg
fisubr
outs
sbb
stc
push
pop
sahf
push
(bad)
arpl
out
inc
pop
out
sub
pop
cmp
fisubr
push
sbb
out
stos
js
outs
psrld
mov
add
paddusw
add
sbb
popf
mov
popf
cli
xor
out
ret
mov
mov
imul
outs
dec
or
jns
push
arpl
cmc
ficom
and
jmp
or
in
push
mov
pop
aam
push
pop
jmp
mov
push
add
mov
push
fmul
lea
shr
xor
loopne
call
jecxz
repz
into
shr
sbb
cdq
aas
aas
mov
mov
mov
sub
aas
ss
xchg
jl
mov
mov
adc
lods
dec
jbe
imul
push
cmp
xor
jmp
sub
inc
shl
inc
std
rcr
cmp
stos
gs
sbb
jmp
fwait
pushf
sub
inc
xchg
jle
into
ja
fstp
dec
add
and
xchg
xchg
clc
ret
mov
dec
repz
retf
(bad)
add
jno
jne
inc
cdq
repz
cli
mov
push
gs
sub
mov
mov
into
icebp
scas
(bad)
dec
out
jae
sbb
sbb
test
cmp
test
rol
pop
(bad)
fsub
int
jp
push
jecxz
push
lods
shl
ror
jg
out
cmps
push
shl
jns
pop
push
outs
cmc
aad
(bad)
popf
adc
add
rol
xchg
adc
into
stc
or
push
pop
or
pop
mov
xchg
pop
inc
test
imul
ret
lds
inc
inc
xchg
in
fimul
mov
push
inc
(bad)
push
pop
mov
ja
jne
(bad)
xlat
stc
pushf
outs
outs
dec
mov
int
out
or
sub
add
sbb
cmp
(bad)
jb
xchg
mov
sub
dec
test
mov
xor
push
jbe
fdivr
pop
aas
lds
adc
shl
push
rol
cmp
fild
mov
mov
repz
sar
nop
mov
jne
mov
ret
jno
mov
add
sub
out
jmp
cdq
ret
and
mov
bnd
fcom
push
mov
xlat
push
(bad)
ins
fld
in
mov
out
daa
rcl
cs
push
sub
mov
cmp
int3
or
jp
cmp
ret
gs
(bad)
aam
mov
sbb
in
in
je
ss
sub
jb
addr16
mov
idiv
sub
xor
cmp
jbe
sti
mov
mov
hlt
(bad)
ret
out
mov
pop
aas
pop
pop
retf
push
dec
xchg
jmp
cmps
je
outs
pop
sbb
and
loopne
and
sahf
(bad)
ret
retf
test
cld
outs
jle
or
addr16
shl
test
mov
sbb
inc
xor
das
mov
adc
in
adc
mov
mov
jo
lods
pusha
aas
and
ins
imul
into
xor
jle
jp
sub
out
cmp
or
or
(bad)
das
sbb
repnz
dec
or
or
hlt
cmps
mov
xor
mov
clc
dec
xlat
xchg
sbb
fs
ds
dec
push
mov
outs
popa
loop
mov
xor
adc
pop
enter
int
lock
fidivr
out
pushw
(bad)
iret
stos
push
mov
push
mov
iret
aad
jg
adc
movs
fiadd
cmps
xor
mov
mov
mov
fdivr
inc
mov
pop
leave
inc
add
cwde
iret
call
popf
mov
nop
and
test
retf
je
or
rcl
test
rol
fsub
dec
inc
jmp
inc
pop
ins
aad
jbe
outs
jo
sub
ret
out
xchg
dec
dec
div
out
lods
inc
sub
mov
retf
push
pop
in
dec
retf
mov
mov
and
sub
inc
adc
pop
mov
addr16
dec
jp
push
dec
jmp
clc
imul
cmp
stos
adc
inc
in
or
pop
jmp
out
jg
push
scas
inc
repnz
dec
sbb
sub
cmps
icebp
mov
repz
mov
call
mov
mov
sub
xchg
pop
aas
add
xor
pop
cwde
xchg
ret
ficom
and
lods
push
add
movs
jnp
mov
leave
sbb
pop
or
cli
loop
rcl
pusha
adc
cmp
rcl
adc
fwait
test
and
adc
stc
inc
fs
inc
push
adc
push
(bad)
cmps
jle
es
push
xchg
fs
pop
test
iret
das
add
(bad)
fcmovnb
push
or
jp
js
mov
or
mov
aad
and
jae
mov
jp
pop
sbb
dec
xor
scas
stc
je
clc
add
sub
sti
pop
repz
sbb
jecxz
or
leave
jg
(bad)
sbb
cli
ror
retf
loopne
inc
out
jmp
ja
jmp
add
mov
shr
mov
push
push
mov
sbb
push
pop
lds
imul
mov
push
in
or
push
inc
in
xor
xchg
push
int3
jp
or
push
or
aas
mov
repnz
dec
adc
lea
mov
and
add
pushf
repz
fisttp
in
js
mov
ret
shl
cmp
pop
cld
and
cmps
pop
mov
and
xchg
fcmove
cld
jmp
adc
fisttp
push
adc
retf
push
push
fisubr
jb
sti
dec
xchg
and
inc
rcr
or
push
sbb
pop
pushf
pusha
test
adc
add
in
sub
shr
inc
push
pop
sbb
cs
imul
or
jns
jp
add
in
jns
addr16
cs
mov
and
jp
cmps
dec
cmps
pop
dec
fucom
inc
jmp
mov
call
mov
jg
pop
push
cmp
or
push
push
sbb
jbe
sbb
mov
jmp
stc
int3
push
mov
(bad)
fs
push
popf
loop
das
fcom
ins
fwait
ror
mov
push
fisubr
in
loopne
shl
and
je
rcr
rcl
fnstenv
nop
mov
push
push
sti
or
inc
xor
xchg
mov
ret
sbb
pop
clc
xchg
push
std
scas
push
ja
inc
sub
cli
fmul
test
js
adc
pop
pop
ret
(bad)
mov
inc
imul
and
pop
jae
repz
cmp
xor
xlat
jp
or
(bad)
int
outs
jnp
push
mov
call
lahf
dec
inc
sbb
(bad)
aad
push
dec
fst
icebp
mov
hlt
das
call
push
movs
adc
push
push
inc
imul
gs
call
movs
mov
lahf
pop
sti
sbb
or
push
cmp
push
sar
aad
and
or
pop
and
sar
inc
dec
icebp
lea
jnp
les
pop
pop
mov
pop
or
cmps
cmp
add
lds
add
std
cwde
out
leave
mov
into
repz
and
mov
sbb
pop
out
test
mov
and
lahf
mov
or
xor
mov
xor
mov
in
sub
or
pop
xchg
mov
dec
xor
mov
mov
lods
sbb
sbb
xchg
xor
jmp
imul
dec
lds
pop
sub
std
fadd
loop
cli
into
pop
mov
sub
mov
and
add
in
mov
(bad)
ja
bound
aam
in
mov
add
daa
cmc
mov
cs
cmp
scas
push
inc
mov
(bad)
inc
push
add
ror
rcr
jl
popf
fs
popf
call
(bad)
fs
retf
fbld
cmp
xchg
repz
jmp
aad
leave
fdivr
repz
retf
mov
out
jb
ror
push
and
jmp
sbb
fst
xchg
fnstcw
(bad)
popa
adc
test
cmps
inc
test
sub
aad
xlat
mov
dec
xchg
std
gs
idiv
or
ds
fidivr
int
jo
dec
int
mov
jmp
rcr
cmp
pop
mov
jb
inc
int
fmulp
aas
cwde
(bad)
into
lea
ret
adc
mov
fild
jo
lods
fmul
dec
out
dec
ins
fistp
inc
dec
fcomp
pop
pushf
adc
dec
push
cmp
stc
mov
mov
mov
lahf
stc
imul
xor
add
(bad)
lods
pop
in
push
jno
aam
adc
jmp
cwde
adc
imul
lock
addr16
jecxz
sub
or
sub
jge
sbb
mov
aas
push
stos
push
and
jns
mov
dec
nop
lods
xchg
pushf
(bad)
loopne
test
jecxz
cwde
arpl
cmp
xor
ins
(bad)
pop
retf
add
fnstenv
(bad)
out
inc
popf
add
pop
ret
mov
loop
fsin
cwde
lods
push
add
retf
jg
rcr
in
aaa
or
arpl
jno
dec
mov
bound
(bad)
imul
adc
pop
mov
outs
inc
dec
mov
mov
loope
pop
retf
daa
push
add
cmp
xchg
ins
add
pop
adc
mov
sub
inc
pop
sbb
nop
mov
ret
sar
xchg
test
int
mov
ja
mov
cmc
push
sbb
pop
cdq
lock
mov
je
shl
push
jbe
fwait
ins
sbb
pop
mov
sbb
mov
sub
xchg
mov
into
mov
js
dec
es
(bad)
jmp
xor
fidivr
(bad)
call
sbb
in
push
adc
sub
sub
push
aam
add
adc
int
add
pushf
and
dec
ins
pushf
or
fdiv
dec
adc
adc
jo
dec
push
inc
mov
pop
cwde
pop
in
jae
pop
and
adc
sti
movs
cli
jle
and
push
mov
xlat
aas
out
or
fldenv
push
fyl2xp1
push
mov
adc
ftst
mov
pop
fnsave
push
shl
das
int3
mov
cdq
je
shl
ins
adc
jmp
pop
out
mov
into
or
pop
push
imul
xor
(bad)
enter
loopne
fdiv
xchg
and
inc
jge
inc
jp
movs
xor
jmp
push
aad
adc
push
inc
pop
mov
int3
or
scas
mov
sbb
pusha
push
jo
inc
adc
xor
in
cmp
pop
jae
jae
mov
add
sub
jmp
stos
lods
jne
movs
out
mov
ficomp
mov
or
inc
or
shl
call
pop
mov
cmps
aam
xor
test
mov
mov
imul
lds
xor
ret
loope
push
or
mov
aaa
lahf
addr16
ins
cwde
sbb
fwait
sbb
test
xlat
mov
cmp
retf
jmp
repz
data16
sub
pop
jb
in
pushf
fmul
or
dec
scas
outs
mov
pop
mov
inc
inc
dec
iret
or
repnz
js
out
mov
iretw
mov
scas
dec
js
lods
dec
test
hlt
mov
fcomi
out
mov
dec
sbb
mov
dec
test
sbb
je
ins
push
push
xchg
xchg
adc
dec
test
out
ds
cmp
adc
pop
into
stos
mov
sub
fdiv
gs
loopne
xchg
jmp
cmp
add
outs
sbb
pop
repz
or
xchg
jbe
out
mov
mov
or
std
xor
dec
lahf
cmp
jne
mov
adc
je
pop
test
xchg
adc
clc
in
mov
shl
cmp
adc
sbb
mov
inc
call
xchg
xchg
pop
xor
fnstcw
test
aaa
dec
inc
push
unpcklps
pushw
xchg
fsubr
fadd
add
mov
dec
enter
inc
xor
mov
sbb
xchg
sub
(bad)
add
or
or
in
ftst
jmp
(bad)
inc
pop
xor
nop
jno
out
and
(bad)
call
(bad)
pushf
jp
ret
fs
sub
imul
ins
stc
scas
jo
data16
in
xchg
aam
xchg
adc
push
aam
xor
idiv
jg
pop
outs
sti
xor
jae
(bad)
shl
xchg
outs
fdiv
into
fcomp
mov
lods
enter
cs
pop
and
int3
jne
jle
shl
dec
push
jmp
add
test
cmps
mov
sahf
pop
mov
sbb
mov
fs
pushf
xor
mov
mov
inc
push
out
popa
ja
test
(bad)
leave
mov
xor
jmp
adc
push
mov
and
cmp
mov
inc
int3
in
loopne
sar
push
idiv
test
loopne
or
jmp
fadd
ins
mov
inc
jecxz
sbb
mov
add
mov
pop
mov
enter
das
ins
loop
stos
mov
loope
xchg
mov
enter
cmp
sub
xchg
push
push
push
cwde
sub
jnp
inc
add
cmp
rcl
test
shl
aam
fisubr
add
mov
inc
jmp
xchg
fnsave
(bad)
add
test
jmp
test
lahf
cli
cs
jl
push
xchg
or
and
mov
mov
or
and
(bad)
sbb
test
sti
xchg
mov
xor
gs
out
test
aad
push
hlt
or
and
sub
inc
and
(bad)
fdiv
outs
mov
sub
xor
neg
ror
sub
js
sti
scas
jbe
pop
sbb
jmp
das
pop
pop
xchg
mov
jl
cmc
sti
sub
aam
cs
pushf
mov
mov
cmp
jmp
mov
inc
loope
or
popa
out
xlat
jmp
jmp
stc
xor
imul
jg
in
ret
ss
mov
dec
jmp
lahf
int3
inc
xor
adc
(bad)
pushf
call
stc
xlat
mov
scas
jp
xchg
or
shr
test
mov
xchg
enter
mov
pushf
scas
out
push
lods
cli
ins
sti
jbe
add
jecxz
and
dec
push
mov
iret
xchg
popa
fcmovb
out
repnz
js
jmp
pop
ret
push
push
and
call
pushf
repz
aas
lahf
or
(bad)
inc
popf
jl
pop
mov
mov
add
sbb
xchg
pop
out
fisttp
or
mov
jns
mov
imul
(bad)
pop
aam
sahf
jae
fsub
test
repz
stc
movs
ds
push
xchg
pop
xchg
pop
mov
dec
xchg
outs
push
cmp
cwde
sti
daa
mov
retf
add
aam
xor
xchg
xor
mov
mov
lea
call
push
nop
push
or
(bad)
xchg
repz
pop
push
sub
dec
outs
out
mov
ds
sar
test
jle
retf
cmps
inc
movs
adc
jmp
and
jl
push
sub
iret
push
lds
loopne
xchg
push
jg
mov
xor
daa
ror
cmp
in
lea
leave
xchg
pop
add
mov
retf
jae
mov
push
push
movs
stos
inc
xor
or
jecxz
adc
xchg
jmp
sbb
popa
mov
cmps
(bad)
mov
(bad)
pop
int3
dec
or
ds
out
je
aaa
out
add
xlat
xchg
(bad)
inc
retf
in
rol
iret
mov
sti
inc
jg
add
dec
jmp
aas
cmp
xchg
dec
pop
push
fnstenv
mov
lods
sub
aad
daa
shl
lahf
xor
push
add
xchg
push
mov
jbe
(bad)
in
repnz
mov
add
(bad)
out
call
int3
push
in
hlt
sub
sub
add
jne
sar
inc
jno
imul
xchg
std
ins
and
cmp
inc
mov
es
sbb
test
into
sub
push
mov
sub
scas
movs
cmps
nop
xor
mov
test
push
dec
(bad)
lds
lods
adc
push
int
clc
add
cmp
sbb
gs
or
fimul
add
xchg
in
add
mov
adc
fisubr
(bad)
fwait
in
mov
adc
sti
icebp
ins
das
pop
push
out
(bad)
add
xchg
mov
retf
xor
sbb
mov
std
bound
adc
fdivr
retf
gs
or
js
xchg
aas
sbb
mov
in
test
stos
stos
pop
pop
xor
pusha
jmp
inc
and
das
push
adc
xor
ror
mov
push
pop
out
push
jnp
mov
and
stc
in
jnp
xchg
jbe
dec
(bad)
mov
lods
and
in
sub
stos
les
das
pushf
xlat
mov
sbb
cmp
inc
sbb
xor
in
sbb
sbb
shl
mov
mov
(bad)
ficomp
sti
xor
adc
push
jno
xchg
fidivr
(bad)
sbb
popa
(bad)
lock
movs
lods
cmp
sahf
mov
dec
mov
mov
or
hlt
fstp
xchg
aam
and
dec
shr
sub
inc
xchg
sar
pop
repz
push
xor
push
cli
mov
mov
ins
mov
xchg
jbe
pop
push
sar
jp
xor
inc
out
ficom
pop
retf
dec
cmp
jmp
pop
loope
xor
dec
leave
loopne
pop
jle
jp
dec
or
iret
and
std
push
and
add
and
mov
inc
or
jl
cwde
cmp
sbb
push
pop
gs
repz
test
jge
fs
and
and
int3
inc
rcr
jecxz
mov
mov
aad
arpl
test
imul
pop
cmp
fmul
xlat
call
out
test
imul
push
(bad)
push
imul
lods
fmulp
sub
sti
cwde
pop
sub
jne
or
pop
fimul
clc
xlat
aad
out
xchg
push
mov
jb
repnz
push
(bad)
cld
jmp
push
and
jle
(bad)
outs
xor
lea
addr16
loop
push
add
in
mov
xlat
inc
sti
mov
mov
aaa
pushf
addr16
inc
fadd
mov
mov
xchg
mov
and
test
jl
jmp
loope
retf
xchg
(bad)
stc
pop
or
pop
sub
js
cmc
jp
mov
ror
jmp
cmp
and
movs
mov
hlt
push
add
sbb
imul
push
push
int3
rol
mov
(bad)
inc
fnstsw
sbb
xchg
jne
fwait
in
mov
loope
and
push
cli
sbb
(bad)
rol
dec
ins
add
xchg
jmp
loop
sti
cmp
rcr
sub
or
mov
mov
add
push
imul
mov
push
adc
and
jne
repnz
lods
sbb
leave
and
cmp
mov
jbe
mov
int
imul
cwde
dec
ret
cmps
pop
nop
push
cmp
mov
dec
cwde
call
fs
xchg
movs
daa
popa
mov
pop
or
push
enter
inc
mov
out
ins
clc
jmp
jmp
dec
push
fwait
(bad)
adc
xor
mov
enter
es
add
adc
add
mov
imul
or
std
jmp
mov
rcr
test
enter
imul
xchg
push
std
fs
sub
cmc
mov
in
add
mov
aaa
mov
in
aas
push
scas
ret
dec
out
push
xor
test
int
sub
xor
xor
push
popf
lods
mov
jg
sub
and
aam
sbb
add
pop
xor
dec
ss
loopne
addr16
push
jp
jo
xchg
je
push
fmul
data16
mov
push
inc
in
dec
mov
mov
mov
or
push
sbb
sbb
cmp
adc
mov
adc
cwde
and
sti
lea
outs
adc
ins
(bad)
jno
(bad)
lds
mov
aad
pop
sti
sbb
inc
cli
or
add
sti
(bad)
mov
and
ins
mov
push
add
in
xchg
inc
mov
and
dec
dec
(bad)
aam
daa
inc
xlat
xchg
dec
rol
mov
test
sub
fisubr
scas
fdiv
mov
push
mov
push
push
pop
sbb
fwait
mov
das
fcmovbe
jmp
jp
xlat
pop
aam
repnz
fsubr
jp
push
movs
movs
idiv
sbb
jae
(bad)
mov
cmp
sbb
fcom
and
stc
add
inc
jge
xchg
mov
bound
pop
push
loop
pop
dec
aam
xchg
sub
hlt
addr16
arpl
and
or
es
xor
mov
test
imul
cmp
xor
rcr
int3
mov
ret
sub
adc
imul
sbb
in
mov
jmp
(bad)
mov
pop
icebp
sahf
jg
push
and
cwde
add
dec
xor
mov
mov
or
addr16
mov
inc
(bad)
in
test
ja
or
outs
add
shl
loopne
inc
jno
idiv
lods
sar
push
add
push
push
mov
jns
fsub
lods
sbb
lods
cs
mov
stos
aaa
dec
stos
cmp
or
rcl
or
loop
shl
iret
aas
fcmovbe
mov
jb
addr16
add
add
mov
das
movs
shl
ret
add
loope
fucomp
int3
(bad)
and
adc
mov
add
loop
adc
in
push
jl
sbb
aaa
inc
sub
ins
bound
add
push
call
in
and
push
add
(bad)
pop
add
pop
mov
mov
stc
xchg
scas
dec
out
test
pop
push
or
int
fadd
sbb
xor
add
lods
std
xor
xchg
and
arpl
inc
dec
pop
js
not
test
movs
retf
push
unpckhps
(bad)
aam
dec
add
and
cmp
mov
arpl
xlat
jmp
pop
sar
(bad)
imul
inc
mov
(bad)
cmp
jns
arpl
push
je
jns
push
cmp
inc
(bad)
into
xchg
sahf
mov
add
fist
mov
repz
fcomp
lahf
fnstenv
cmp
mov
xor
pop
mov
pop
jnp
adc
arpl
cmc
fwait
mov
scas
repz
or
(bad)
push
cwde
loop
stos
shl
xchg
div
push
push
retf
and
mov
or
add
mov
pop
(bad)
(bad)
xchg
cmp
adc
out
adc
das
jmp
stos
xor
mov
arpl
sub
jo
adc
jno
xor
inc
push
xor
jp
out
fist
out
xchg
dec
rcl
push
gs
mov
jmp
add
lds
mul
scas
popa
fisub
push
lock
loop
call
or
lock
mov
xchg
or
jp
(bad)
in
test
in
into
and
mov
jl
inc
xlat
sub
imul
shl
and
xchg
je
iret
sub
mov
pushf
sbb
pop
or
call
ins
xchg
stc
or
scas
aaa
lods
test
jno
or
ficomp
sahf
adc
adc
cwde
stos
xor
xchg
rol
pop
xchg
mov
jae
jae
loop
jne
movs
mov
cli
sub
out
sti
shl
mov
imul
mov
leave
movs
ret
jne
push
sub
or
pop
lods
in
inc
pop
sbb
dec
xchg
and
xor
mov
ins
cmp
fs
std
(bad)
out
aaa
loope
cdq
stos
push
shl
ror
hlt
into
int
shl
fwait
jl
dec
pop
int3
mov
add
mov
xchg
jmp
pop
inc
gs
xor
dec
or
cmps
sahf
push
sub
out
dec
push
ss
xchg
mov
out
add
mov
lods
aam
push
dec
js
hlt
mov
xchg
dec
cmp
mov
mov
scas
(bad)
repz
xor
push
sbb
jno
cmp
cmps
les
cmp
jne
mov
ret
adc
imul
ror
inc
xchg
lahf
movs
jmp
mov
and
jp
mov
aas
pop
pop
xchg
add
jp
std
push
cmp
dec
dec
push
enter
inc
into
(bad)
push
dec
in
cmps
inc
mov
push
out
call
pop
mov
xchg
(bad)
fst
push
int3
or
jecxz
ja
test
out
mov
mov
outs
cmps
aas
imul
xor
jg
mov
mov
or
mov
icebp
dec
ds
pop
sub
bound
add
loopne
push
mov
stos
sub
pusha
push
fcomip
mov
jle
outs
adc
mov
and
sbb
stos
jbe
nop
push
movs
cld
aam
mov
sub
loope
cmc
add
mov
xchg
popf
mov
gs
out
mov
xlat
ret
js
push
aas
add
fsubr
out
ret
and
mov
mov
xor
fsub
mov
ret
or
stos
sbb
xchg
sbb
sub
loopne
inc
dec
xchg
push
mov
and
jnp
cdq
and
ret
inc
sub
mov
xchg
adc
sub
push
ins
cmc
inc
push
loopne
sar
xor
das
dec
add
add
int3
ss
call
gs
xor
dec
(bad)
adc
jmp
add
in
gs
(bad)
sahf
or
jo
in
inc
and
cmp
push
sub
adc
or
fldcw
lahf
int
jae
xchg
mov
retf
mov
add
iret
hlt
jecxz
rcr
lock
mov
pop
xchg
aad
jns
(bad)
cmp
rcl
mov
rol
jbe
mov
imul
and
jle
cmps
arpl
cmp
or
push
sub
sbb
mov
loopne
stos
mov
mov
cmps
add
dec
add
shl
adc
sub
xor
adc
mov
mov
ds
gs
dec
inc
repnz
cmps
jae
fisttp
xor
int3
jmp
or
mov
add
jmp
adc
pop
or
lods
sbb
mov
stos
cmp
mov
call
xor
push
sbb
lahf
xor
fild
in
dec
or
fdiv
es
or
mov
cmc
(bad)
data16
js
mov
xchg
jns
movs
pop
cmc
dec
gs
(bad)
xor
int3
imul
sbb
cld
mov
mov
and
in
cmp
xchg
sbb
test
mov
add
iret
jg
or
arpl
pop
lea
or
inc
ffree
mov
hlt
fdiv
adc
not
dec
sbb
mov
scas
xchg
mov
and
dec
(bad)
xchg
js
add
bound
and
adc
cmp
inc
mov
jno
movs
or
inc
icebp
inc
iret
dec
aad
ja
xchg
adc
sub
inc
xchg
es
cmps
adc
mov
pusha
pop
(bad)
es
mov
inc
scas
(bad)
stos
scas
out
adc
ins
scas
xor
js
adc
xchg
sub
ds
jle
mov
add
xchg
dec
mov
ret
rcl
lds
daa
sbb
mov
loop
sti
aaa
or
dec
in
out
mov
sbb
fiadd
xor
and
add
out
add
jb
push
stos
push
dec
mov
cmp
push
xchg
dec
dec
std
test
xchg
and
aas
lahf
cmp
add
mov
pop
or
sbb
xor
(bad)
mov
adc
sbb
jle
test
jno
sub
aaa
test
xchg
repnz
xlat
adc
dec
push
punpckhbw
jno
iret
ret
cs
in
(bad)
in
sbb
sbb
daa
push
push
sub
sti
xchg
pop
dec
out
jne
scas
ja
pop
mov
neg
mov
sub
pusha
test
adc
xchg
shl
pop
pop
push
ret
nop
out
(bad)
pop
push
and
xor
fnstsw
mov
xchg
add
jg
(bad)
ror
add
das
add
add
jp
inc
cmp
sbb
add
(bad)
jnp
inc
and
aaa
mov
pusha
lods
jne
or
das
push
fistp
je
dec
or
lahf
icebp
or
jmp
push
outs
jae
pand
into
ffree
mov
sbb
pusha
pop
mov
mov
pusha
or
movs
push
jle
mov
out
jnp
dec
sbb
mov
pmuludq
sahf
dec
loope
test
mov
retf
push
daa
rol
add
pop
enter
jne
pop
jmp
push
or
push
mov
push
pop
(bad)
gs
pop
test
stos
mov
les
cmp
sbb
sti
dec
mov
test
fnsave
mov
dec
inc
mov
cmp
(bad)
into
mov
stc
dec
iret
adc
inc
neg
ror
inc
ss
inc
add
outs
push
sub
outs
retf
aas
xor
xchg
out
sbb
mov
push
mov
sbb
xchg
rcr
adc
out
enter
ss
mov
push
and
xchg
and
push
xchg
jl
cs
shr
mov
fisttp
int3
ret
out
dec
xchg
scas
mov
sub
mov
int3
pop
nop
cmp
xchg
xchg
shl
clc
shr
mov
jb
lds
pop
movs
aam
pop
add
mov
push
test
adc
push
cmp
dec
sar
cmp
movs
out
xchg
adc
leave
fist
push
cmp
inc
lds
stos
adc
sahf
in
ss
adc
(bad)
fild
(bad)
jmp
in
fmul
imul
ds
imul
or
or
mov
cmp
fsubr
mov
shr
xchg
loopne
jmp
cmc
lea
hlt
sbb
cmp
stos
dec
ret
popa
sbb
jg
or
jns
push
jno
cwde
add
and
arpl
push
jge
fstp
mov
dec
or
jge
dec
dec
jge
hlt
leave
loop
loopne
in
sub
and
in
push
jns
mov
sbb
fidiv
sbb
or
daa
shl
shl
retf
or
pop
call
xchg
call
adc
test
mov
mov
mov
out
pop
mov
sbb
inc
mov
jne
inc
imul
out
cmps
push
and
mov
pop
sbb
movs
push
fst
cmps
test
shl
loop
jmp
push
mov
and
fldcw
in
xor
pop
cmp
add
int
adc
mov
out
aas
adc
xlat
inc
std
jno
or
aas
sahf
std
push
jbe
mov
scas
xchg
mov
int
sbb
dec
loop
std
mov
xchg
outs
jge
or
dec
fidiv
leave
push
xchg
push
mov
aaa
int
jmp
mov
(bad)
and
inc
jge
mov
gs
mov
enter
adc
push
xchg
push
jge
or
loop
in
enter
mov
cdq
cmp
stos
inc
cmc
std
dec
shl
add
mov
cmp
jg
push
push
imul
into
mov
add
arpl
ret
shld
pop
mov
or
add
adc
lea
push
mov
jb
push
fwait
mov
jns
inc
aas
lea
mov
dec
mov
adc
lods
aaa
outs
mov
stos
icebp
loopne
xchg
and
js
stos
add
xchg
std
adc
dec
call
fst
push
pop
(bad)
aam
mov
imul
cmps
mov
add
mov
enter
pop
cld
and
stos
out
call
ja
mov
pushf
push
inc
jnp
jo
xchg
jo
sbb
test
xchg
pop
fnstcw
call
inc
mov
pop
rcl
mov
(bad)
imul
fisttp
mov
sti
or
(bad)
ja
std
push
cmp
or
or
div
mov
mov
and
adc
cdq
lahf
fwait
lods
xchg
mov
movs
cmp
xchg
and
cdq
jbe
and
pop
add
pop
imul
int
and
fimul
jge
clc
in
adc
retf
mov
pop
mov
add
push
into
cmps
outs
inc
fcmove
push
lods
add
cmp
retf
mov
jle
and
pop
mov
push
push
outs
jp
jp
(bad)
adc
add
and
das
add
and
and
inc
pusha
sti
add
pop
sti
cwde
hlt
xor
and
retf
cmps
addr16
jecxz
movs
or
or
stos
repz
cwde
jns
add
push
or
shl
cmp
pop
iret
(bad)
out
into
in
mov
mov
and
jo
movs
add
cld
fsub
mov
lods
daa
add
lods
(bad)
adc
adc
lea
imul
adc
adc
adc
fist
lahf
sub
mov
mov
aad
enter
xlat
dec
inc
dec
test
adc
push
sbb
push
cmp
test
loop
mov
or
mov
or
jge
adc
out
popa
mov
inc
(bad)
retf
out
in
movs
ja
(bad)
mov
pop
enter
and
into
(bad)
mov
mov
inc
iret
iret
mov
jmp
xchg
or
mov
mov
pop
jmp
inc
das
inc
xchg
push
cs
and
push
or
shl
mov
sbb
fwait
push
push
or
jae
and
sahf
icebp
mov
jb
cmc
xor
gs
cmp
call
vandps
and
jno
cmp
and
xor
xchg
xlat
mov
movs
imul
and
jmp
repnz
pushf
je
jmp
call
dec
push
je
mov
and
xchg
and
mov
aaa
das
adc
push
jmp
rcr
retf
enter
enter
addr16
add
mov
enter
out
and
outs
xchg
jae
fwait
or
loope
enter
cld
or
sub
jl
icebp
mov
or
imul
and
push
and
push
and
cmp
icebp
fcomi
mov
in
nop
adc
fs
dec
or
jnp
cwde
add
sub
jb
or
lods
xchg
jne
fimul
add
push
mov
ja
or
retf
pop
lods
fwait
bnd
push
iret
shr
pop
sbb
mov
ret
jp
jo
xchg
sub
jp
inc
sbb
outs
sub
or
(bad)
xchg
xor
in
cmps
jl
jmp
push
mov
int
pop
jnp
cmps
mov
addr16
inc
adc
inc
jne
ins
dec
dec
pop
pop
sbb
js
shl
retf
pop
sub
xchg
jb
inc
jno
adc
jbe
clc
add
jg
pop
aaa
or
int
cmps
out
xchg
dec
add
adc
loop
popa
push
jge
xlat
push
icebp
adc
cdq
xlat
cmp
pop
push
shr
push
mov
ret
pop
and
and
shr
repnz
daa
add
sbb
sti
test
sbb
or
mov
ins
jb
stos
inc
mov
xor
sbb
fcomp
cmp
stos
xor
sub
dec
fnstcw
push
dec
xor
sub
jl
loopne
adc
cwde
and
out
push
out
mov
adc
dec
push
into
dec
push
mov
dec
ins
xor
and
mov
jmp
mov
in
push
aad
out
fsubr
dec
hlt
fcmovb
loope
cmp
and
and
push
push
push
repz
adc
test
push
jbe
test
jo
add
sbb
sub
loopne
cmc
push
test
and
cli
stc
jmp
xor
out
mov
iret
or
sub
xlat
call
cmp
pusha
leave
movs
int
(bad)
rcr
retf
dec
cmp
into
cwde
jmp
stos
adc
fstp
shl
mov
xor
add
repnz
xor
xor
call
shr
sar
or
jle
xchg
leave
ins
call
loopne
jge
movs
xchg
add
call
sbb
xor
mov
fsub
in
sar
jb
sbb
xchg
call
(bad)
div
sub
outs
xor
and
adc
inc
in
cmp
jne
dec
pop
popa
or
jbe
xor
mov
pushf
sahf
pop
jno
xchg
pushw
add
xchg
dec
out
addr16
mov
pusha
add
fyl2x
fild
sbb
leave
pop
stos
dec
aam
retf
sub
sti
nop
jmp
call
inc
mov
xchg
outs
jae
mov
cmp
push
pop
mov
mov
sahf
jg
and
lods
jp
xor
mov
xchg
scas
scas
fxch
jbe
dec
imul
mov
jle
cmps
leave
jnp
mov
cmp
or
jecxz
daa
fs
data16
and
push
push
or
add
inc
jbe
or
aas
bound
sti
hlt
(bad)
push
shl
(bad)
mov
xchg
cs
xor
xchg
pop
jg
out
lahf
xchg
lock
mov
or
and
and
mov
aaa
sub
(bad)
cmp
sub
out
jae
inc
clc
add
mov
std
fst
test
jmp
das
stos
(bad)
lea
xchg
ret
inc
adc
cli
lds
fcom
or
into
out
movs
and
and
jle
sub
sub
push
(bad)
mov
xor
addr16
cmp
and
inc
jne
adc
or
jecxz
push
and
xlat
or
cwde
lock
cmp
mov
pop
cmps
int3
es
dec
das
mov
mov
xor
sub
mov
fsub
adc
sbb
add
mov
jae
clc
push
pusha
dec
sbb
mov
popa
xchg
xor
jnp
xchg
or
stc
dec
hlt
repz
enter
in
cld
and
adc
push
enter
int
mov
popa
repnz
and
imul
dec
cs
cmp
xor
jbe
sub
xchg
div
out
int3
push
test
les
sub
push
nop
and
xor
dec
adc
pop
loope
sbb
mov
imul
clc
inc
pop
mov
inc
push
je
daa
pusha
add
scas
xor
outs
cmp
hlt
mov
and
xor
in
ror
jns
xor
sbb
push
mov
rcl
jbe
es
jmp
aam
sub
movs
or
data16
lds
or
add
fnsave
call
clc
sahf
cmp
mov
fldcw
ss
mov
jne
leave
cmps
test
push
(bad)
pop
arpl
out
pop
mov
scas
shl
jns
push
cmps
call
cmp
mov
xchg
xchg
leave
ss
cmps
popa
in
mov
jmp
mov
je
aad
stos
scas
xor
pop
(bad)
cld
lahf
shr
dec
and
rcl
int
jl
jne
mov
push
mov
stos
aad
dec
mov
push
sahf
test
popf
retf
int
pminub
add
cmp
pushf
(bad)
leave
ss
mov
loopne
(bad)
aad
adc
popf
jb
out
sti
jg
pop
pop
repz
mov
sub
mov
sar
psubd
sbb
xor
cli
add
add
or
mov
enter
mov
in
inc
and
cld
pop
inc
push
(bad)
adc
mov
xchg
mov
push
in
fcomp
outs
(bad)
int3
stos
pop
dec
(bad)
cli
and
call
adc
movs
nop
fdivr
(bad)
adc
stc
jmp
dec
lock
jb
les
ds
add
xchg
pop
mov
cmp
mov
sub
imul
add
cmp
dec
adc
out
mov
adc
lea
frstor
pop
cli
movs
pushw
out
sbb
fstp
sub
push
mov
add
aam
int
clc
jmp
stc
mov
mov
mov
add
xchg
gs
je
add
pop
or
cmps
jmp
adc
push
call
push
cmp
shl
test
pop
push
add
in
out
xchg
in
cmps
in
mov
into
shl
adc
push
cmp
cmp
push
mov
into
and
aas
push
cmps
xor
cmp
cmp
ror
dec
stos
xor
mov
call
ja
inc
xchg
pop
iret
imul
stc
(bad)
xor
cmp
mov
in
(bad)
and
xor
mov
stc
cpuid
cmp
xlat
aad
cli
dec
js
loopne
inc
std
add
xor
test
cmps
in
inc
add
movs
xchg
daa
es
xchg
sbb
mov
push
dec
outs
push
add
inc
mov
sub
shl
es
and
jp
out
jne
push
aam
clc
xlat
gs
mov
push
dec
cmps
add
pop
mov
daa
call
xchg
xchg
jo
sbb
sbb
idiv
add
addr16
dec
addr16
cmps
outs
cld
cwde
out
push
mov
pop
inc
aad
xor
mov
jo
(bad)
sti
int3
xchg
test
cmp
mov
jns
(bad)
jmp
ins
jge
pop
loop
call
mov
imul
nop
xlat
inc
adc
ds
popa
fistp
out
out
test
sbb
jle
mov
(bad)
ds
ins
out
leave
adc
mov
leave
push
pop
dec
mov
je
fadd
push
dec
push
jge
imul
icebp
push
sub
push
aam
mov
rol
int
sub
inc
mov
packssdw
mov
hlt
popa
inc
das
dec
add
stos
retf
fs
and
outs
in
enter
sub
mov
mov
lods
sbb
pop
sbb
movs
push
bound
popf
imul
(bad)
jnp
sti
in
or
inc
(bad)
imul
int3
int
cmps
popf
idiv
mov
fwait
pop
dec
adc
pushf
add
adc
mov
xor
and
or
jo
js
ror
pusha
and
sub
inc
inc
sub
fsubp
sub
retf
inc
ret
fadd
mov
lods
cdq
frstor
out
sub
mov
test
dec
jmp
hlt
push
(bad)
mov
lea
mov
push
or
ret
repz
inc
sbb
and
adc
xchg
sbb
clc
fwait
lods
xchg
inc
aaa
xor
add
int
cmps
test
push
mov
and
daa
dec
and
fs
sub
push
fadd
ret
sbb
mov
add
pop
mov
loop
pop
xchg
mov
loopne
jmp
je
mov
inc
clc
inc
xchg
imul
jg
loop
push
push
inc
lea
aaa
push
ja
icebp
sub
jmp
sub
cmc
mov
adc
rcl
dec
shl
movs
(bad)
dec
leave
js
addr16
xchg
je
sbb
(bad)
jle
stos
adc
push
jecxz
add
push
retf
loop
ins
loop
int3
push
movs
dec
jns
xchg
xor
jne
add
lea
mov
sub
add
bound
push
xor
sub
out
mov
jnp
push
repz
mov
clc
in
outs
inc
leave
(bad)
movs
xor
and
xchg
mov
clc
xor
push
mov
std
xor
ja
dec
pop
fs
das
inc
in
jo
sar
out
(bad)
in
jle
inc
(bad)
pop
mov
js
pop
cmp
ins
xchg
clc
out
icebp
(bad)
cmp
lods
shr
xlat
fs
push
sbb
sbb
hlt
movs
data16
jl
fisub
jmp
ins
cmps
add
jno
bound
or
jne
movs
fnstcw
ins
ins
in
ror
or
dec
push
xchg
call
arpl
push
lock
(bad)
test
xor
(bad)
icebp
sbb
push
inc
adc
repnz
in
inc
cmps
cmp
mov
cmps
stc
and
inc
shr
cmps
rcl
imul
std
push
push
push
add
mov
ds
or
sbb
cmc
in
fcomp
xchg
mov
xor
adc
xor
inc
std
int3
sbb
iret
icebp
jp
dec
sti
inc
mov
xor
inc
adc
mov
adc
jle
pusha
pushf
les
stos
je
xchg
push
jno
repnz
shl
xchg
ins
push
push
push
stc
cmp
push
rol
mov
xchg
xlat
sbb
retf
mov
push
out
out
ret
pop
(bad)
xor
pop
imul
sub
or
cmps
aas
and
data16
or
jge
clc
xor
nop
add
aad
imul
cwde
xchg
cmp
pop
pop
call
movs
inc
jecxz
sbb
outs
push
dec
int
xchg
out
call
fldenv
idiv
and
nop
cmp
or
xor
pop
movs
call
sub
jne
mov
xor
aaa
cli
out
inc
lds
fwait
clc
aaa
jb
jge
(bad)
daa
adc
int
iret
dec
dec
ret
aad
inc
lea
es
sbb
mov
aam
add
int
sub
jp
jbe
or
outs
outs
call
adc
or
inc
push
das
out
das
add
pop
bound
and
ficomp
ja
or
rcl
pop
fwait
ret
xchg
cmc
jmpw
adc
mov
imul
inc
lods
mov
mov
cmp
ins
into
push
jge
into
pop
pop
mov
mov
enter
shr
or
fiadd
movs
add
outs
or
dec
fwait
dec
cmps
mov
jbe
cdq
sub
aaa
add
and
mov
sub
inc
stos
into
mov
cmp
(bad)
retf
xchg
scas
retf
(bad)
and
inc
sub
inc
inc
loopne
(bad)
lods
cmp
push
xor
mov
mov
scas
jns
out
xor
in
(bad)
inc
in
fsub
shr
das
pmaddwd
push
ss
xor
push
mov
shl
scas
push
ins
or
or
or
jmp
ins
fstp
pop
(bad)
adc
cdq
loop
push
jmp
and
jno
fimul
cmc
mov
(bad)
mov
jmp
test
sahf
jno
fcmovu
push
mov
cmps
out
add
jbe
into
fwait
fwait
push
or
outs
jae
jnp
stos
movs
dec
mov
lahf
mov
mov
add
lods
int3
inc
sti
fcomp
dec
mov
fwait
jbe
mov
push
xor
inc
sub
sti
stc
inc
ja
aaa
add
mov
sbb
leave
in
jmp
and
pusha
pop
push
(bad)
xchg
pop
fldenv
loop
std
ror
jle
and
push
or
nop
hlt
pop
mov
dec
into
mov
ror
push
ins
scas
popa
ret
adc
mov
test
aas
sub
adc
cmp
xchg
jno
mov
cmp
icebp
mov
test
cwde
dec
add
pop
push
xchg
mov
add
cld
jmp
pop
rcl
rol
pop
mov
and
push
fisttp
js
(bad)
jp
push
fld
push
aad
das
add
es
hlt
push
lahf
cmc
dec
loope
sub
cmc
mov
adc
shr
jmp
cmp
sbb
inc
pop
sahf
clc
push
and
bound
ja
fisub
mov
xor
cmp
add
add
jmp
rcl
mov
adc
push
push
mov
sbb
jle
stc
sub
jns
(bad)
movs
pop
and
pop
mov
movs
cmp
je
sbb
xchg
pop
add
lods
xchg
iret
jmp
mov
dec
je
xchg
cs
out
stos
mov
(bad)
aas
iret
arpl
lds
gs
xchg
jmp
jmp
inc
jb
movs
sub
fisubr
daa
push
out
in
les
in
dec
cld
(bad)
jg
loope
cmps
mov
stc
scas
fwait
push
jl
js
loope
ror
cmp
in
dec
or
push
xchg
jp
xor
retf
pop
in
push
mov
jl
iret
aas
add
aas
cs
mov
adc
jbe
scas
mov
pop
in
adc
std
rol
arpl
add
stos
add
pop
(bad)
sahf
cld
leave
xchg
js
push
ret
push
ins
jno
inc
retf
fs
and
call
or
shl
cmp
and
outs
add
mov
cmc
push
scas
retf
enter
xor
leave
jae
push
jns
xchg
pusha
test
les
je
fistp
aam
or
in
clc
daa
jl
push
cwde
out
pop
(bad)
or
pop
aas
xor
scas
shr
hlt
sbb
cmp
cmp
outs
pop
or
mov
rol
mov
and
mov
pop
in
cmp
lock
push
cld
popf
inc
enter
shr
push
into
retf
cs
pusha
in
adc
and
or
test
xor
pop
scas
popf
xor
dec
mov
push
mov
inc
fdivr
add
xchg
stos
iret
add
jecxz
mov
inc
rcr
xchg
aas
popa
inc
lock
sar
sbb
mov
(bad)
dec
cdq
lods
xchg
out
pop
dec
jb
mov
mov
imul
leave
mov
stos
or
ret
adc
ins
jmp
dec
lahf
add
idiv
mov
pop
je
fcmovnb
push
dec
cwde
inc
dec
pop
sti
inc
sbb
dec
test
xchg
inc
aad
das
xor
mov
jl
jl
jae
mov
add
jae
mov
ds
popf
popa
xchg
xchg
sub
movs
in
jnp
sbb
cmovle
aam
scas
push
retf
lahf
xchg
aam
into
stos
pushf
(bad)
in
adc
add
(bad)
adc
fimul
out
clc
enter
lock
cli
outs
jecxz
fs
fdiv
in
or
jnp
aad
dec
ds
jno
jp
je
iret
daa
mov
outs
hlt
xor
stos
push
sbb
and
mov
or
scas
movs
inc
pop
mov
xchg
cmps
cmp
or
(bad)
pop
outs
mov
inc
fdiv
dec
test
bsr
ret
shl
push
adc
sbb
adc
jg
ss
sub
jb
fadd
mov
fcmovne
imul
out
sub
ins
js
mov
shl
aam
icebp
test
stos
cmp
stc
push
mov
rcr
xor
outs
(bad)
xchg
push
add
imul
xor
mov
mov
sub
aaa
cld
xchg
push
pop
(bad)
jno
int3
shl
sbb
aas
sbb
dec
ss
xchg
dec
xchg
loopne
sbb
dec
pop
xor
pop
into
ret
xchg
sbb
fld
xor
ins
enter
or
call
dec
stos
mov
data16
jmp
cmp
addr16
inc
nop
inc
or
mul
mov
fistp
in
iret
pop
sbb
adc
addr16
pop
pop
xchg
inc
sbb
xor
setnp
jmp
pop
ficomp
outs
cmp
iret
cmp
(bad)
push
rcr
lock
inc
inc
(bad)
stc
mov
rcr
rol
clc
int
cmp
cli
mov
pop
sbb
fbld
js
push
pushf
jbe
out
js
lds
test
adc
add
fidiv
daa
fisttp
push
push
sub
or
xchg
clc
loope
adc
out
lds
call
mov
shl
in
inc
in
push
adc
cmp
push
daa
imul
je
pop
ret
jns
mov
pop
add
mov
ja
and
fld
ds
(bad)
mov
xchg
dec
pusha
jmp
sar
sti
dec
pushf
xlat
and
add
inc
cwde
je
mov
sub
mov
ret
dec
inc
sti
sbb
cmp
adc
repz
lock
add
xchg
xchg
div
fdivr
clc
mov
jmp
call
jmp
inc
xchg
lds
or
xchg
sbb
mov
pop
sub
push
and
inc
cmp
push
cmp
xchg
or
pop
jmp
jbe
mov
fcomp
adc
push
push
lahf
or
stos
push
mov
cmp
mov
inc
loope
xor
mov
js
add
cmp
ins
mov
fldcw
lods
(bad)
xor
fild
and
(bad)
xor
test
sub
adc
add
ss
lea
add
sbb
xchg
add
push
fsub
add
out
lahf
push
inc
mov
test
mov
fsubr
sub
cmp
xchg
(bad)
idiv
fisttp
stos
into
ds
gs
add
pop
mov
mov
add
jle
pop
push
dec
ret
das
or
mov
and
xor
stos
cmp
lods
dec
jle
jb
fadd
pop
xchg
test
call
stos
push
sbb
jbe
pop
pop
jecxz
addr16
push
add
or
int3
xchg
cmp
cmc
leave
push
les
and
push
bound
imul
mov
cwde
loope
adc
test
fld
add
pop
arpl
mov
dec
gs
mov
cmps
ret
mov
enter
cmp
loope
mov
jmp
lods
xor
inc
cmp
and
test
stos
(bad)
cli
xchg
xor
shl
out
(bad)
call
in
cwde
mov
push
lea
lahf
loop
outs
jno
imul
pushf
and
xchg
jns
aas
outs
jo
lock
dec
sar
call
mov
inc
mov
sbb
shl
and
fwait
or
mov
fwait
cmp
xchg
jae
fbstp
mov
push
out
dec
out
inc
aas
hlt
ins
cmps
jmp
aam
inc
retf
dec
push
dec
push
outs
jp
movs
push
leave
out
ret
xchg
nop
ret
(bad)
cmp
daa
sti
iret
inc
test
cmps
adc
and
cli
add
ficomp
(bad)
xchg
jl
jno
dec
and
and
mov
sbb
pop
fld
icebp
adc
and
cmp
popa
cs
data16
call
mov
xor
xchg
nop
lock
add
lea
cmp
or
stos
mov
lods
test
mov
mov
push
rcl
and
adc
cs
mov
(bad)
push
loop
sbb
test
jmp
xchg
jne
(bad)
jle
inc
fstp
or
push
ret
sub
mov
pusha
sahf
mov
sahf
pushf
inc
inc
js
mov
(bad)
xchg
cmove
repz
dec
cwde
adc
shl
outs
cmps
cmp
adc
cld
shr
cld
out
and
retf
dec
pop
or
sti
jns
movs
push
jnp
pop
dec
scas
addr16
dec
mov
mov
add
bswap
pop
movs
sub
add
sti
mov
mov
imul
push
add
lock
add
es
jnp
sbb
lea
sbb
outs
cmp
xchg
mov
pop
(bad)
xor
push
iret
xor
outs
jns
or
xor
mov
sbb
cwde
std
pop
cld
cmps
pop
xchg
pop
(bad)
int3
sbb
(bad)
jmp
into
sub
clc
pop
ds
outs
pop
pop
inc
xor
push
xchg
add
adc
dec
mov
aam
into
shr
(bad)
inc
fmul
push
pop
aam
scas
xor
mov
pop
or
xor
pop
lods
test
add
adc
mov
pop
jb
iret
sbb
pushf
push
adc
mov
gs
adc
mov
pop
ins
pop
test
fwait
gs
mov
mov
(bad)
not
das
mov
mov
xchg
cmp
mov
lock
mov
sub
cmp
enter
and
pop
mov
cmp
jl
jnp
fidivr
cdq
imul
fimul
pusha
rcl
and
sbb
cmp
and
inc
mov
jno
add
xchg
sbb
jo
push
std
jecxz
jae
outs
arpl
inc
dec
out
fld
or
jnp
fs
jmp
push
and
mov
mov
cmc
xchg
xor
push
cdq
jae
ret
int
cld
popa
stos
pop
or
mov
xor
ja
xlat
mov
dec
shl
and
movs
push
xor
aad
test
retf
push
cli
nop
jecxz
adc
(bad)
inc
sub
mov
xlat
loop
vmptrld
adc
(bad)
mov
push
scas
cmps
sub
jns
cmps
out
in
fs
hlt
repz
jb
cmp
in
cmp
xor
in
inc
movs
or
mov
(bad)
clc
sbb
loope
std
ret
sub
popa
and
sub
xor
dec
jecxz
das
mov
pop
inc
dec
(bad)
xor
inc
in
mov
cmc
idiv
cmp
imul
cmps
lods
into
push
inc
jge
sar
push
jge
test
jmp
mov
jecxz
call
xchg
(bad)
stos
xor
fld
test
xchg
std
cld
mov
or
xchg
imul
or
cmp
ss
mov
mov
push
retf
xor
adc
repz
stc
and
jle
add
fldcw
inc
dec
sahf
das
imul
sbb
cmc
xchg
es
addr16
push
sub
or
mov
xor
nop
adc
cwde
xchg
loopne
aam
or
push
mov
les
ror
dec
adc
(bad)
jnp
(bad)
push
add
fstp
dec
and
leave
jns
inc
mov
push
cmc
sub
xor
pop
ror
lahf
inc
mov
sbb
ret
sub
out
je
inc
adc
xchg
daa
aaa
fwait
mov
(bad)
into
jb
add
jo
mov
dec
or
outs
mov
adc
or
mov
jge
cmc
xchg
cmp
scas
lods
imul
push
mov
dec
xlat
mov
add
ret
inc
add
push
sbb
xor
or
mov
imul
scas
xchg
mov
mul
inc
mov
pop
adc
jmp
mul
(bad)
outs
popa
fdiv
mov
add
xchg
bound
cmps
dec
sbb
add
mov
mov
loope
lods
data16
pop
inc
mov
push
inc
xchg
sbb
or
sub
mov
cli
or
dec
cmp
adc
mov
int
add
push
retf
jo
imul
push
jmp
jecxz
fadd
push
adc
rcr
mov
std
mov
pop
dec
rcl
(bad)
mov
ret
xlat
sub
lds
fcomp
jb
out
fdiv
adc
out
mov
push
add
lahf
and
cmps
xchg
scas
test
jo
mov
jp
pusha
sar
test
jecxz
imul
xchg
push
cmp
cwde
pop
adc
xchg
rol
push
cdq
push
fbstp
stc
push
push
or
and
out
nop
and
cmp
loope
xor
test
in
aam
ins
retf
sbb
shl
and
xchg
mov
push
cld
arpl
fucomip
and
push
pop
lahf
div
je
xor
(bad)
xchg
mov
dec
xchg
sub
and
icebp
in
fbld
push
and
fdivr
ss
sahf
daa
test
cmp
xchg
jp
cmp
and
movs
pop
lods
mov
xchg
pop
jecxz
or
push
adc
dec
adc
push
out
data16
jb
scas
sub
push
scas
pop
ss
mov
lahf
out
fcomip
loopne
jae
leave
stos
dec
sub
push
push
and
pop
push
inc
push
aad
inc
mov
inc
test
aad
dec
sub
jle
addr16
inc
fst
fnclex
aam
or
cmp
outs
push
sub
cli
xor
xor
(bad)
mov
mov
dec
mov
mov
cvtpi2ps
inc
sub
sbb
jp
mov
rol
cmp
mov
arpl
(bad)
loope
dec
cmps
call
std
in
dec
mov
xchg
pop
jmp
jmp
pushf
sub
sub
cmp
inc
stos
mov
push
cmp
pusha
or
mov
vpcmpgtd
test
inc
enter
mov
aam
jbe
push
push
xlat
rcl
dec
stc
sub
cmp
pop
test
arpl
adc
shr
sub
cmp
into
or
mov
jo
adc
loop
mov
jmp
or
leave
shl
inc
jecxz
test
mov
in
sbb
jae
adc
icebp
xor
aam
cmp
ins
dec
cmps
sysret
enter
icebp
clc
call
push
call
rcl
mov
jmp
out
icebp
mov
push
stos
arpl
not
add
bound
pushf
jmp
sub
shl
in
mov
ret
sbb
jo
push
sbb
dec
retf
lods
sub
xor
or
sub
and
push
mov
xor
mov
sub
mov
into
test
jmp
rcr
xor
jmp
sub
mov
test
inc
scas
mov
neg
popf
mov
sahf
mov
adc
mov
push
mov
xor
mov
adc
nop
fisttp
fs
mov
and
(bad)
add
inc
es
or
inc
ins
cmp
mov
jo
mov
mov
ficomp
das
cmc
aaa
test
into
jo
ins
icebp
xchg
mov
sub
cmp
fstp
and
push
adc
je
jl
movs
ins
lahf
jl
out
xchg
repz
mov
xlat
scas
repnz
(bad)
cs
xchg
cld
sbb
pop
cmpxchg
push
dec
jmp
xchg
stc
mov
sub
movs
cmp
pop
cmp
dec
sbb
test
sub
leave
jo
and
jmp
shl
xlat
rcl
pop
(bad)
bound
out
cvtpi2ps
sbb
dec
inc
sti
inc
xor
nop
sbb
ret
retf
repz
sub
add
int3
and
jmp
cmp
add
lods
repz
cs
mov
add
push
adc
call
(bad)
out
or
mov
data16
retf
jo
or
sbb
jge
inc
lock
out
enter
scas
into
pop
enter
fdivr
enter
stos
cmp
imul
stos
out
fild
inc
add
hlt
or
js
retf
jne
xor
mul
ror
rcl
add
ss
inc
rcl
jns
test
in
aad
repz
jae
lods
xchg
inc
cmc
push
sub
xor
xor
data16
sbb
outs
pop
pop
pop
sub
pop
rol
push
xchg
pop
(bad)
ret
call
stos
sbb
mov
mov
mov
gs
out
push
repz
scas
pop
cmp
jmp
push
or
dec
xchg
je
push
cs
not
pop
add
leave
mov
sbb
or
test
pop
dec
dec
pop
hlt
outs
in
adc
jae
jae
inc
cmp
or
xor
fs
bound
push
pop
cmp
inc
les
pop
push
xchg
call
jne
mov
stos
lahf
mov
loope
xor
dec
retf
adc
cmc
jle
mov
mov
mov
jae
add
fstp
inc
and
fst
mov
dec
js
loopne
jle
popa
leave
stos
call
and
and
mov
mov
arpl
jle
mov
aad
or
jle
jecxz
cmps
push
pop
or
mov
in
hlt
icebp
xchg
loopne
lock
add
or
std
(bad)
ret
fnstenv
or
mov
inc
push
call
xchg
rol
push
dec
mov
mov
mov
pop
push
inc
in
pop
adc
cdq
ret
push
push
(bad)
and
mov
daa
jl
in
es
push
xor
xor
test
aas
push
jecxz
mov
fild
xor
pop
or
(bad)
cmp
sahf
or
inc
lea
and
movs
std
jae
pop
(bad)
xchg
xchg
cmps
js
clc
xchg
or
jae
mov
sar
mov
and
dec
movs
mov
push
(bad)
dec
fiadd
inc
push
adc
dec
pop
(bad)
loopne
cmp
lods
pop
push
addr16
push
fmul
and
dec
cdq
and
pop
movs
(bad)
sti
cmc
mov
test
shl
(bad)
ins
push
xchg
out
or
and
inc
sbb
or
retf
cmp
rcr
dec
arpl
(bad)
sbb
(bad)
pop
sub
push
push
xchg
mov
xchg
das
cmp
push
mov
loop
mov
out
inc
xchg
(bad)
pop
ror
inc
inc
in
xor
fbld
gs
jb
es
sub
daa
repnz
add
dec
pusha
push
call
das
out
add
jo
sbb
add
pop
scas
xor
les
dec
adc
das
xor
pop
inc
inc
mov
push
or
inc
and
dec
jmp
sub
dec
aad
adc
mov
imul
shl
mov
mov
sbb
in
int3
xchg
fdivr
test
ja
mov
add
pop
not
add
lods
mov
hlt
xchg
push
ret
fsubr
xor
lahf
jge
pop
shl
and
in
dec
cmp
clc
aaa
jne
mov
cmc
mov
cmp
cmps
and
dec
stc
call
pop
sub
cwde
mov
or
arpl
movs
push
cld
pop
xor
dec
loopne
gs
pop
popf
push
mov
cmps
ins
inc
call
inc
add
or
mov
gs
or
mov
push
push
mov
int3
adc
inc
jmp
iret
mov
xor
pop
addr16
xchg
bound
dec
cmp
jb
mov
inc
retf
xchg
ror
shr
push
scas
mov
popa
mov
cmc
xchg
dec
(bad)
inc
mov
cmp
into
ret
(bad)
imul
inc
xchg
loope
in
and
scas
cmps
fstp
xchg
movntq
and
int3
jecxz
(bad)
mov
(bad)
and
xor
shl
mov
fisttp
dec
gs
push
lahf
mov
xchg
arpl
adc
or
outs
inc
sar
sub
adc
lock
adc
aam
test
inc
and
pop
outs
push
pop
sub
movs
shl
neg
out
jbe
jge
imul
out
loop
jno
das
cmps
jae
pop
dec
sahf
into
mov
pop
jg
retf
mov
cld
jmp
mov
push
push
adc
mov
movs
add
mov
and
(bad)
jb
sub
pop
inc
jae
enter
xchg
push
and
fadd
out
(bad)
sub
out
enter
rcr
(bad)
sub
mov
aam
addr16
cmp
repz
lea
and
in
call
mov
xchg
fbld
inc
add
mov
dec
ficomp
or
jle
imul
xchg
repnz
push
sub
ficomp
popa
(bad)
in
mov
xchg
enter
(bad)
adc
pop
xchg
movs
mov
jb
aam
inc
call
mov
add
push
dec
push
mul
sub
pop
adc
adc
pop
stos
ins
mov
jle
(bad)
jo
mov
aaa
out
or
add
xchg
mov
mov
xchg
repz
mov
or
cmp
sub
dec
jmp
and
mov
pusha
add
repnz
xchg
dec
(bad)
mov
imul
out
(bad)
into
sbb
(bad)
outs
or
pop
lock
cdq
push
xor
jno
loopne
js
ja
cs
push
push
or
and
push
popf
fbld
inc
pop
inc
adc
dec
jmp
xor
pop
and
(bad)
std
adc
in
mov
sbb
(bad)
aam
xchg
in
xchg
jae
xchg
xchg
pop
adc
(bad)
lea
mov
dec
lods
mov
scas
call
outs
jmp
push
leave
das
mov
and
retf
pushf
mov
inc
mov
leave
not
and
sar
xor
fwait
pop
and
mov
jae
in
xchg
(bad)
fsubr
jmp
iret
fs
xor
xchg
push
sub
adc
aam
xor
retf
and
mov
movs
mov
inc
cli
sahf
fwait
lock
fwait
or
rcr
push
mov
jl
mov
jns
mov
or
sahf
data16
iret
cmc
rol
ret
shl
call
nop
repz
bound
movs
cmp
test
sbb
sti
aam
(bad)
mov
int
in
fs
shl
out
js
outs
(bad)
mov
js
ret
push
dec
cdq
dec
fstp
rol
scas
jg
pop
(bad)
std
repnz
mov
or
fldcw
mov
and
ror
xchg
fsubp
xchg
or
out
addr16
test
and
or
pop
ds
adc
fcmovnb
scas
out
cmps
dec
cdq
outs
movs
sbb
dec
xchg
mov
mov
movs
mov
ret
jmp
(bad)
cmp
dec
int3
jns
out
sub
sbb
xchg
cmc
(bad)
dec
adc
xor
mov
(bad)
jmp
xchg
adc
xor
and
jno
mov
mov
stc
out
mov
cmp
jns
fwait
inc
or
outs
call
pop
bound
nop
sub
fsubr
add
ds
js
xchg
sub
cmp
xchg
dec
mov
inc
rcl
popa
test
xor
mov
and
test
scas
call
(bad)
mov
aam
xchg
xor
sub
sbb
jge
bswap
cdq
sbb
lods
and
jp
repz
sub
out
cdq
xor
outs
jnp
out
js
sbb
pop
mov
outs
jp
jne
dec
rcr
sbb
pop
test
pop
shl
mov
sahf
push
or
out
icebp
mov
push
in
in
repz
fild
and
lods
jg
and
cmps
mul
cmp
sbb
jns
sub
loop
fisttp
xor
ficomp
sbb
mov
js
or
pushf
mov
add
mov
push
pop
div
test
out
shr
cmp
fbld
stos
or
or
xor
adc
sub
jmp
aas
fldenv
push
ds
stos
loop
sub
shl
mov
fcom
aaa
sbb
je
fwait
xchg
jo
jns
arpl
inc
out
fild
in
leave
jp
cmp
and
inc
imul
movd
sub
pop
int3
stos
inc
movs
bnd
sahf
xchg
or
push
repnz
mov
jle
popf
pop
stc
ss
ds
push
cmovle
int
pop
sti
daa
adc
mov
gs
in
arpl
in
sbb
fld
je
test
pop
clc
dec
fidivr
test
jmp
sahf
and
xlat
les
sbb
aaa
sar
mov
xlat
arpl
int
and
xor
retf
cli
adc
iret
adc
mov
loopne
les
fadd
jno
stos
(bad)
les
push
inc
add
fisubr
mov
int
push
sbb
push
sub
inc
int3
addr16
stos
lea
adc
mov
jne
loope
dec
mov
mov
add
and
jmp
bt
aas
pop
loopne
sar
aas
inc
out
mov
dec
adc
push
(bad)
mov
ins
cmc
rsqrtps
(bad)
(bad)
sub
inc
rcl
mov
cmp
sub
std
jp
lods
ror
cmp
pop
inc
cld
fsub
out
imul
add
mov
add
loop
push
cmp
mov
lahf
loope
jmp
push
fcmovnu
mov
mov
mov
and
inc
popf
mov
sbb
outs
push
inc
xchg
bound
add
sub
ret
in
mov
mov
popf
out
jne
mov
add
mov
jl
daa
adc
outs
cmp
jns
push
popf
mov
test
loop
not
or
hlt
mov
les
sbb
mov
and
and
fwait
bnd
xor
or
mov
movs
mov
push
inc
and
aam
push
mov
mov
pop
(bad)
sbb
adc
push
sti
xor
cs
in
ret
test
push
fld
mov
inc
mov
addr16
push
jmp
push
mov
ret
inc
dec
addr16
sar
dec
idiv
cli
sbb
mov
test
mov
(bad)
loope
sub
std
cmps
nop
lock
out
jmp
xor
cmp
and
mov
out
retf
jo
inc
fmul
xchg
mov
nop
outs
hlt
mov
and
out
pop
(bad)
mov
pop
and
js
imul
adc
cli
or
adc
jp
cmps
pop
bound
jge
adc
pop
bound
xor
test
lea
lahf
mov
sub
jo
ins
push
ins
in
cwde
loopne
test
daa
(bad)
icebp
push
inc
inc
lahf
cmc
(bad)
push
hlt
leave
test
pop
sahf
push
shr
div
fbstp
dec
jle
shl
(bad)
or
adc
into
in
in
mov
and
fisub
pop
int3
ja
enter
jmp
mov
xor
sub
cmp
imul
call
out
mov
cmp
pop
push
inc
inc
pusha
jecxz
in
bound
sub
imul
mov
inc
cmc
xchg
lahf
add
enter
jne
jg
mov
jecxz
fstp
scas
xchg
xchg
add
enter
dec
push
and
add
mov
ror
lea
pop
out
push
int3
fst
test
jmp
fild
ja
(bad)
mov
scas
out
lea
sbb
(bad)
arpl
jmp
and
pop
dec
(bad)
sbb
push
mov
pop
(bad)
xor
daa
mov
push
pop
jns
cmp
jnp
sub
scas
mov
xor
and
adc
mov
push
xor
mov
(bad)
jg
jo
fxam
ret
mov
sub
fisub
mov
lods
mov
fwait
dec
xor
enter
jmp
xchg
jne
cmp
fsub
cmp
scas
mov
clc
mov
sbb
mov
mov
jg
adc
cmp
shr
xchg
fsub
mov
or
cmp
jb
sti
mov
call
daa
mov
fs
enter
cld
mov
test
ja
loope
xchg
jne
xor
mov
mov
or
or
pushf
pop
(bad)
xchg
int
xchg
sahf
int
fadd
jp
jp
scas
jne
jnp
adc
push
imul
int3
fnstcw
inc
mov
jmp
stos
xor
cli
push
fisubr
icebp
sub
sahf
sub
and
(bad)
out
ja
mov
push
add
es
lds
imul
mov
cdq
or
cmp
jg
out
(bad)
jmp
cmp
movntq
adc
cmp
retf
popf
jl
push
add
outs
fidiv
lods
dec
sub
xor
or
rcr
pop
popf
sub
adc
sub
inc
or
retf
and
xor
jge
loopne
jl
faddp
jo
repnz
in
pusha
adc
sub
scas
lock
add
int
dec
sbb
add
stos
jg
cmp
psllw
div
test
cmc
and
xor
mov
jl
sbb
jmp
xchg
sbb
je
xlat
out
call
cmp
pusha
xor
push
ret
dec
enter
cmps
je
xor
inc
int
mov
lock
leave
push
pop
outs
cmp
mov
adc
leave
sbb
push
inc
ds
ror
and
adc
fstp
sbb
jns
and
aaa
cmp
xchg
mov
scas
pop
test
mov
addr16
mov
jle
push
mov
shr
sti
xor
leave
push
dec
sub
pop
jl
cld
sub
aas
or
inc
cli
mov
les
pop
inc
pushf
pop
mov
or
mov
fcomi
adc
mov
xlat
xor
xchg
inc
inc
loopne
xlat
data16
test
cwde
icebp
mov
int3
and
ror
pop
cdq
push
hlt
aaa
mov
ret
cmovnp
hlt
test
fldenv
push
add
cmp
mov
add
sub
mov
out
lods
in
adc
jo
fidiv
fiadd
and
or
sub
(bad)
scas
jnp
shl
jmp
pop
(bad)
mov
ret
dec
aam
push
icebp
xchg
aaa
dec
jns
mov
push
ins
fadd
stos
inc
shl
pop
mov
push
jg
sysexit
aaa
lds
jge
inc
sbb
ins
retf
dec
mov
icebp
leave
xor
and
push
cmp
or
std
pushf
stos
pop
or
lahf
out
enter
(bad)
(bad)
mov
loope
sbb
xchg
cmp
push
jns
jecxz
in
in
inc
retf
xchg
clc
or
mov
inc
das
mov
jl
pop
(bad)
pop
popa
and
mov
or
ss
fwait
lds
test
inc
adc
cmp
test
popf
sub
test
xchg
je
or
adc
rol
jmp
daa
mov
mov
sub
pop
ja
je
jmp
or
aaa
dec
and
xor
cmp
mov
pop
adc
mov
add
rcl
int3
rcr
jmp
js
or
je
mov
dec
lods
sub
sbb
xchg
push
inc
or
dec
jo
jmp
or
cmp
loopne
push
pop
sbb
les
push
jg
mov
cmp
jo
jl
js
enter
adc
push
mov
shl
neg
mov
adc
inc
inc
(bad)
mov
jecxz
enter
cmps
sub
mov
iret
leave
jecxz
jmp
or
retf
push
inc
mov
popa
mov
jbe
jno
in
pop
adc
push
int
aad
je
loopne
inc
mov
out
cmc
jo
test
sahf
stos
jns
mov
dec
neg
and
mov
fwait
dec
dec
xchg
test
pop
imul
jmp
dec
loopne
and
or
aas
cvtps2pd
imul
mov
mov
jmp
cmps
xchg
dec
movs
cmp
lahf
ret
cmp
movs
mov
fsub
ror
push
push
lods
or
jg
sub
fs
das
sbb
cmp
dec
or
dec
xchg
inc
xchg
jno
icebp
jb
fsubr
jns
int
add
aad
arpl
fcmovnbe
scas
xchg
cmps
ret
cmp
mov
xlat
push
push
jge
repnz
add
jo
push
cdq
fimul
into
or
clc
repz
test
add
clc
lods
add
cmp
sbb
out
out
cmp
(bad)
out
popf
in
popf
lds
test
sub
cwde
jae
ins
sbb
fs
mov
inc
mov
mov
lods
icebp
xor
mov
add
repnz
outs
lods
(bad)
(bad)
icebp
jge
xor
jo
jg
(bad)
iret
and
cdq
test
adc
sti
(bad)
vpsubd
jnp
jle
loopne
pusha
sbb
push
retf
ds
je
ins
mov
and
pusha
out
shr
imul
mov
pop
cmp
rcr
jmp
push
dec
pop
in
call
and
std
test
inc
xchg
and
bound
repz
xor
in
out
faddp
aas
mov
stos
arpl
mov
jo
mov
cdq
hlt
sbb
push
ins
cli
xchg
pop
loop
dec
loop
sbb
inc
clc
fisubr
inc
adc
ficom
into
inc
clc
jnp
mov
jle
sub
or
pop
push
adc
or
adc
or
sbb
fs
pop
retf
mov
xchg
inc
es
mov
pop
pop
fsub
repnz
xchg
pop
cmp
popa
sbb
inc
ficom
js
ss
rcl
mov
test
sub
aam
pop
pop
mov
(bad)
and
sub
sub
arpl
lea
stc
retf
retf
adc
js
push
jbe
jns
fxch
int
cmp
out
mov
mov
mov
inc
loopne
shl
icebp
inc
mov
call
push
gs
mov
leave
imul
jbe
aam
xchg
xchg
add
inc
jmp
mov
data16
add
stc
cwde
jmp
mov
jbe
push
fld
pop
fdivr
(bad)
push
shl
mov
xchg
lods
pop
adc
iret
push
mov
dec
mov
mov
icebp
mov
mov
push
lods
adc
or
pushf
sbb
cs
mov
jge
jno
pop
call
ficomp
(bad)
hlt
adc
jo
popa
adc
div
mov
xchg
mov
dec
aad
mov
mov
mov
repnz
retf
sub
ins
mov
in
pop
mov
sbb
push
xchg
(bad)
shl
lock
and
push
dec
mov
es
xchg
ins
fst
int
dec
pop
cmp
mov
pop
jb
popf
cwde
je
mov
movs
je
and
addr16
jnp
cmp
jge
mov
outs
ds
adc
pop
lock
mov
movs
sub
retf
mov
shr
scas
or
adc
sub
push
pushf
stos
ins
test
not
leave
int
inc
addr16
xlat
mov
frstor
fst
jmp
sub
xchg
push
int3
xor
add
call
or
js
retf
ret
in
jb
cmps
fwait
ret
pop
cli
adc
aas
xlat
xchg
mov
jno
bound
adc
out
xchg
push
or
sbb
enter
ds
imul
xor
push
data16
scas
sahf
sbb
in
bound
xor
call
shl
dec
daa
shl
addr16
aad
jns
mov
imul
cmp
dec
mov
jmp
int
sbb
ss
movs
push
scas
int3
inc
in
ss
retf
call
inc
cmp
call
pop
xchg
push
retf
(bad)
daa
rcr
push
cdq
dec
ret
pop
mov
jl
jecxz
test
inc
adc
jg
sbb
jno
xchg
jp
les
xor
cdq
push
retf
sub
mov
ffree
push
dec
push
fcomp
jp
xor
ret
or
mov
lods
in
xor
fst
rcr
push
loop
mov
mov
mov
or
cmps
sysexit
stos
dec
data16
test
sbb
sbb
pop
jmp
push
lahf
pop
and
mov
jmp
jle
cmp
mov
xor
lds
std
shr
cmp
out
sbb
mov
pop
add
call
lods
loope
mov
into
push
pop
rcl
mov
out
cwde
cmp
retf
cmp
(bad)
adc
jnp
add
and
test
xchg
dec
in
mov
adc
xchg
ins
mov
mov
jge
dec
out
in
sub
jbe
aaa
popf
arpl
xchg
inc
sub
js
dec
movs
retf
pop
sub
add
push
cs
sti
aam
fisttp
xor
in
test
idiv
or
and
pop
jmp
sub
cwde
sbb
das
retf
sub
add
dec
cmps
movs
xchg
cmp
(bad)
lds
adc
stos
or
mov
jo
lods
cmp
call
movaps
sti
inc
inc
aad
mov
iret
cli
mov
call
sbb
dec
mov
imul
xchg
cmp
mov
in
inc
cmp
adc
out
dec
dec
aaa
adc
(bad)
rcr
cld
adc
xor
xor
jmp
sbb
popf
xor
mov
mov
add
call
xor
and
mov
out
dec
xchg
xor
lods
push
cmp
ds
in
ins
mov
pop
loopne
loopne
inc
call
jb
xchg
mov
lea
xlat
out
sbb
aaa
jmp
dec
dec
xlat
xchg
xchg
fnsave
idiv
and
fiadd
adc
push
lahf
(bad)
xchg
add
(bad)
call
and
stos
sub
and
cmp
cs
aaa
mov
movs
pushf
pop
popf
dec
push
jo
and
fdivr
dec
jp
mov
pop
and
repz
cmp
cmps
rcl
mov
xchg
mov
inc
es
es
cmp
ja
xor
mov
pop
jo
pop
xor
stos
adc
arpl
mov
fdiv
loop
xor
outs
(bad)
addr16
mov
xlat
inc
xchg
push
cdq
cmp
fnsave
cmp
test
xor
test
cmp
faddp
jp
movs
clc
in
(bad)
clc
in
call
mov
xor
out
mov
pop
mov
fisubr
xchg
mov
out
sbb
bound
mov
mov
lahf
push
xchg
pop
mov
fcmovbe
sti
popf
mov
cwde
add
push
add
test
rcl
mov
push
mov
repnz
xor
in
sub
fbstp
mov
mov
cmps
pop
and
(bad)
int3
sub
lock
lahf
mov
inc
test
(bad)
(bad)
sbb
xor
xor
cmps
jns
outs
jb
stos
mov
pop
in
mov
sbb
cmp
leave
mov
imul
adc
mov
icebp
xchg
call
jno
das
stos
and
push
mov
outs
(bad)
in
sbb
cmp
jae
stc
popa
cdq
mov
test
push
arpl
fsubr
loopne
add
push
or
(bad)
sbb
lods
aaa
xchg
dec
add
scas
shl
mov
stos
shl
sti
js
es
xchg
sub
mov
jmp
push
js
mov
inc
add
clc
sbb
and
int
adc
inc
mov
cmp
daa
cmp
outs
js
xor
sub
pop
sahf
sbb
in
pop
aaa
inc
inc
pop
sub
sub
scas
mov
jle
cmp
bound
mov
sbb
fiadd
fcmovnbe
aaa
inc
adc
movs
fs
pushf
xor
or
pop
mov
es
hlt
mov
imul
mov
fidiv
and
nop
cmp
or
and
push
mov
pushf
cwde
sti
jecxz
ret
jge
push
inc
cs
cmps
icebp
add
call
rol
mov
and
jmp
dec
adc
add
mov
cmp
repz
(bad)
(bad)
dec
nop
scas
cmc
mov
xor
in
fisubr
out
push
loop
push
sar
mov
mov
scas
inc
and
adc
push
jle
mov
adc
(bad)
(bad)
aaa
add
stos
xor
inc
xchg
cmp
dec
in
inc
rcr
sub
je
cmp
cmps
cwde
lods
fnstsw
inc
fnstsw
ds
into
push
inc
(bad)
cli
sub
pop
xchg
dec
idiv
pop
push
les
lods
jp
fisttp
cwde
shl
ffreep
push
add
pop
sahf
mov
mov
sti
xchg
xor
add
mov
jg
call
jmp
mov
shl
mov
push
push
cmp
cs
and
add
pop
mov
repz
xchg
cmps
lock
push
mov
or
add
(bad)
adc
jle
push
sub
or
cdq
mov
popa
inc
add
lahf
mov
sub
ret
jmp
mov
cmp
push
inc
ins
cmp
fstp
(bad)
jb
in
sti
scas
mov
dec
inc
repz
pop
loopne
adc
arpl
xor
inc
xor
clc
dec
cmp
aad
mov
jb
or
lods
loopne
lahf
retf
outs
ins
pop
test
arpl
lods
xchg
ins
push
fist
hlt
gs
mov
loop
sar
loop
sbb
fcmovbe
lea
in
cld
inc
jns
pop
inc
xchg
(bad)
push
fldcw
cmp
jnp
nop
push
popa
in
push
adc
lea
xor
inc
iret
jae
xor
fiadd
push
pop
fisttp
mov
mov
dec
popf
fsubr
mov
or
ss
mov
pop
call
cs
mov
stc
adc
push
test
loop
adc
pop
fwait
out
(bad)
mov
lods
test
or
das
les
sbb
call
jns
sbb
pop
mov
pop
or
pop
jle
mov
loope
add
adc
repz
push
mov
(bad)
mov
daa
cli
or
xor
pop
xchg
xchg
and
xor
sti
xlat
cmps
jbe
or
and
jo
sbb
and
movs
lods
std
push
xchg
xchg
data16
push
xchg
into
pushf
and
aaa
rcr
xchg
rcr
push
(bad)
xor
push
inc
nop
push
movs
in
call
adc
pop
push
xchg
push
push
jg
mov
sbb
push
pop
pop
mov
add
jecxz
xchg
pop
lods
sbb
movs
adc
fs
leave
enter
jmp
je
xor
out
int
xchg
cmp
movs
shl
jno
int3
adc
loopne
mov
sar
jmp
sbb
xchg
imul
jbe
sub
mov
mov
das
and
add
jae
ss
hlt
lds
jbe
out
dec
sahf
push
cs
mov
or
idiv
mov
cmc
xchg
xor
cmp
or
sbb
idiv
adc
rcr
not
iret
pop
neg
out
inc
dec
inc
(bad)
sti
mov
dec
cdq
push
loope
adc
es
adc
mov
test
inc
cwde
pop
sub
jecxz
fcompp
je
xchg
arpl
xchg
int
(bad)
loop
inc
es
jecxz
adc
pop
mov
loopne
ror
pop
scas
sub
sbb
dec
jmp
pop
mov
pop
mov
test
lds
loopne
push
jl
sub
clc
or
xchg
aaa
adc
(bad)
inc
aam
das
pop
mov
xchg
sar
inc
xchg
leave
jecxz
xor
dec
and
retf
cvtps2pi
mov
fcmovne
dec
mov
sub
sahf
ja
fimul
mov
into
in
je
inc
ror
or
pusha
in
pop
pusha
stc
adc
xor
cmp
sbb
cdq
jb
addr16
into
sbb
sbb
push
je
sub
add
or
ja
mov
or
(bad)
cdq
push
push
pop
test
cmp
ss
mov
mov
push
movs
clc
xor
(bad)
push
dec
ins
jnp
out
fsubr
xor
stc
jmp
loope
gs
xor
jge
pop
sub
(bad)
imul
pusha
rcl
adc
sbb
aaa
test
push
mov
jp
mov
daa
xchg
push
in
xor
pop
inc
nop
lahf
call
in
mov
iret
imul
cmp
and
mov
ss
and
arpl
repz
std
inc
xlat
test
push
fcmovnb
cmp
scas
sub
dec
fcmovb
mov
jne
leave
cs
jae
lock
leave
add
mov
push
lods
mov
ds
xchg
fbld
mov
sbb
inc
repz
mov
das
lock
into
iret
mov
dec
call
loop
push
rcr
dec
and
and
or
and
dec
clc
enter
test
fdivr
push
popa
jmp
mov
jo
and
imul
mov
stc
mov
jae
daa
push
cmc
aad
push
pop
dec
leave
pop
mov
out
movhps
inc
jo
mov
ins
adc
dec
xchg
mov
lods
cmc
and
cmp
jmp
pop
xchg
inc
adc
push
and
nop
lea
rcr
inc
sub
into
out
popf
pushf
cmp
jg
cmp
rcl
dec
(bad)
pop
dec
push
and
outs
loopne
jecxz
jne
xchg
in
shl
add
sar
int3
je
arpl
jno
jne
lods
cmp
sbb
and
int3
add
jecxz
cmp
cmp
out
mov
xor
mov
xchg
cmp
out
push
sahf
pop
jnp
repz
push
sub
mov
xchg
sub
mov
jno
test
push
and
jns
sub
or
sbb
fild
je
fdivr
daa
sub
add
mov
mov
sub
mov
jg
retf
and
sbb
(bad)
push
into
xchg
retf
sbb
shl
jbe
stc
xlat
test
shr
inc
(bad)
jo
cmp
pop
mov
inc
(bad)
les
sub
and
iret
jno
(bad)
mov
xor
test
pusha
sub
stos
push
inc
(bad)
jns
clc
repz
or
into
sub
adc
loop
repnz
or
cmp
movs
(bad)
je
dec
push
or
out
retf
mov
call
xchg
neg
fcomp
popf
movs
xor
stc
scas
out
jae
hlt
cwde
mov
test
push
jne
int
jecxz
(bad)
popa
nop
(bad)
cmp
daa
dec
push
xor
pop
mov
int3
or
or
nop
arpl
test
push
fst
inc
hlt
je
mov
mov
leave
cli
das
cs
lods
mov
mov
std
inc
clc
nop
(bad)
jne
mov
loopne
xchg
mov
adc
mov
xchg
retf
stos
mov
xchg
push
pop
(bad)
mov
push
cmp
je
addr16
cmp
stos
loop
imul
mov
aaa
jns
add
adc
dec
ins
popf
or
das
jo
mov
out
pop
push
je
push
ja
scas
stos
adc
add
je
push
mov
push
mov
lahf
das
shl
lods
pop
cld
(bad)
and
(bad)
xor
mov
ror
xchg
mov
xchg
ins
mov
adc
cmp
scas
movs
xchg
and
rol
xchg
ror
pop
gs
xlat
repz
sub
hlt
ins
mov
test
mov
rcl
adc
xchg
iret
xor
cld
xchg
in
sbb
ins
push
and
std
shl
push
pop
lahf
pop
(bad)
cmc
jo
add
xor
inc
cmp
hlt
inc
xor
mov
sub
adc
push
cmp
jb
fild
ins
cli
imul
mov
xor
jb
pusha
mov
mov
and
imul
jbe
cdq
fadd
inc
xchg
stos
or
adc
jl
mov
sahf
repnz
jle
inc
and
ret
adc
outs
or
nop
add
jb
lea
mov
push
ret
push
mov
xlat
int3
cmps
aas
(bad)
call
add
sbb
jle
xchg
aaa
push
sahf
jmp
mov
fiadd
cmp
inc
mov
test
das
addr16
xor
jp
sbb
add
mov
shl
pusha
cmp
pop
leave
ds
inc
or
popa
mov
inc
sbb
dec
sub
inc
xchg
pop
sbb
mov
dec
add
adc
lods
in
dec
push
retf
xlat
xlat
jle
jns
lahf
stc
ins
out
mov
inc
(bad)
outs
xchg
repz
pop
das
or
xor
movs
gs
xor
mov
jno
inc
or
sbb
aas
aam
pop
xchg
inc
fsincos
jmp
lock
add
or
pop
pop
pop
out
dec
bound
mov
movs
sti
shr
cmp
mov
and
clc
retf
(bad)
dec
stos
aad
and
push
and
sbb
loop
inc
(bad)
imul
movs
out
outs
inc
xchg
push
jl
in
cmp
ret
jmp
sysret
aas
arpl
dec
int3
and
lds
or
vmulps
mov
inc
pop
pop
shl
stos
popa
jae
shr
push
adc
push
das
jo
push
adc
or
fld
xchg
inc
push
daa
fcom
xor
mov
int3
inc
dec
retf
push
pop
popa
(bad)
mov
xor
(bad)
jg
lds
retf
jbe
loop
xor
add
dec
mov
aaa
dec
jo
cvtps2pd
fsubr
and
mov
mov
dec
cwde
nop
js
add
push
les
xchg
fild
sub
cmova
push
stos
cdq
push
xchg
xor
ret
fild
into
dec
pop
into
pop
daa
rol
xchg
xchg
mov
ret
adc
scas
loope
and
jae
fadd
xor
popf
cmp
jp
bound
pop
dec
mov
or
cmps
mov
dec
push
push
jb
scas
mov
outs
add
add
int
cmp
les
shl
sub
xor
(bad)
cmp
repnz
sbb
jmp
pop
rcr
movs
adc
loope
ror
pop
sub
mov
gs
xchg
xchg
pop
loope
lahf
ss
pop
xchg
or
cmps
int
jo
call
test
lods
(bad)
cs
cmp
xor
(bad)
pop
push
lea
fisub
(bad)
mov
retf
ret
ret
rcl
jbe
test
sub
enter
dec
sub
adc
cld
jno
mov
daa
sub
dec
add
mov
pushf
loope
and
cmps
jg
and
scas
sub
pop
sub
and
lods
mov
jle
dec
in
inc
clc
and
sbb
sub
(bad)
or
cmp
loope
in
stos
adc
das
xchg
pusha
pop
out
xor
retf
lock
jae
shl
mov
shr
pop
dec
imul
adc
call
xchg
rol
mov
xor
adc
je
mov
test
or
mov
mov
sahf
or
xor
mov
arpl
xor
push
inc
stos
stos
and
stos
shl
ret
cdq
add
out
xchg
fnstsw
inc
repz
or
adc
in
pop
call
jnp
in
arpl
jp
or
cmp
hlt
inc
shr
cmps
stos
jb
outs
and
add
cmp
inc
inc
mov
add
dec
jae
pop
sbb
sub
mov
push
movs
enter
pop
sbb
adc
xchg
and
push
dec
fstp
cmp
in
mov
sbb
aam
sbb
xor
movs
shl
movs
ficom
sbb
scas
pusha
or
mov
xor
jmp
add
mov
ror
mov
ins
in
adc
test
shr
in
jb
add
icebp
and
out
pop
ja
movs
shl
in
(bad)
xor
retf
push
cmp
pop
idiv
test
sub
hlt
jmp
and
(bad)
cmp
push
mov
retf
jb
push
xchg
clc
adc
jnp
(bad)
xor
jle
repz
outs
leave
fcomp
repnz
cmp
and
lds
call
adc
mov
fs
mov
aas
add
xor
stc
sbb
cmps
xchg
pop
in
nop
cmp
xchg
push
jb
aas
adc
pusha
pop
imul
test
mov
sub
mov
xchg
push
push
cmps
cmp
push
(bad)
fdivr
ja
js
and
les
pop
xchg
mov
nop
scas
xlat
in
je
sbb
add
sbb
xchg
xor
mov
in
cmp
hlt
add
sub
por
jmp
adc
push
cmp
cmp
retf
mov
and
push
or
test
add
daa
fist
sbb
push
shl
test
and
mov
sar
call
(bad)
mov
and
hlt
rol
cld
push
push
mov
cmps
mov
out
sbb
pop
psllq
aam
xor
ins
jns
adc
out
icebp
cli
mov
fidivr
loop
icebp
retf
mov
or
xor
and
push
(bad)
xlat
out
or
cmp
lea
fisttp
sar
shld
jmp
les
and
cli
jnp
pop
mov
push
xchg
jmp
leave
sub
mov
adc
mov
mov
xchg
push
xchg
les
lods
add
push
sbb
or
fstp
lds
(bad)
sub
ror
and
dec
addr16
mov
xchg
push
pop
pop
shl
fistp
add
mov
lds
ret
data16
cwde
hlt
cmc
(bad)
sahf
pop
(bad)
lods
or
out
sti
dec
mov
pop
fmul
push
outs
(bad)
mov
lahf
jb
jp
xor
mov
jae
iret
jno
ds
mov
(bad)
mov
(bad)
pop
rcr
test
retf
and
pop
sbb
dec
inc
and
jns
xchg
xlat
cmp
push
mov
enter
add
cwde
pop
nop
mov
sbb
push
push
or
sub
mov
push
js
lock
mov
shr
sbb
xor
or
jmp
adc
pop
or
mov
jecxz
pop
xlat
stos
push
adc
and
and
movs
in
arpl
stos
pop
jg
cmp
enter
push
stos
and
jg
dec
jecxz
jmp
pop
ficomp
stc
sub
push
push
dec
jge
jp
mov
cdq
retf
mov
pusha
sti
push
scas
sahf
test
ret
push
push
pop
xor
inc
mov
mov
pop
fmul
stos
cmp
mov
add
xor
idiv
dec
add
enter
inc
jecxz
dec
cmp
daa
sbb
jb
inc
pop
push
nop
or
inc
dec
xor
cmp
xor
mov
mov
rcr
xchg
sahf
adc
sub
mov
cmp
mov
jbe
inc
arpl
mov
adc
daa
mov
lds
popf
mov
push
lods
lds
(bad)
out
pop
push
(bad)
data16
mov
addr16
(bad)
fmul
scas
test
dec
aaa
inc
mov
jl
shl
xchg
push
jno
push
jg
mov
jno
jecxz
mov
add
jnp
mov
inc
stos
adc
fdivr
js
push
call
aas
add
lods
or
dec
jo
adc
push
call
addr16
pop
push
test
sub
cmp
adc
add
jp
mov
mov
loop
cmp
dec
mov
sar
adc
popf
push
jb
or
sbb
dec
ins
xor
push
in
push
sub
mov
pop
cmp
fistp
stos
std
sub
repnz
(bad)
(bad)
lods
fnstcw
call
mov
stos
inc
mov
mov
mov
ja
in
cwde
mov
movs
push
pop
fbld
xchg
ins
mov
cdq
xor
jmp
jo
stos
clc
xchg
je
sub
mov
jae
test
mov
lahf
popa
cmps
push
pop
ins
xor
push
in
push
mov
xchg
sbb
lock
repnz
(bad)
mov
in
shr
mov
sbb
loope
pop
and
cmps
imul
inc
or
ret
xor
push
pop
test
scas
ins
push
push
into
jo
dec
enter
pop
adc
mov
scas
cmp
or
add
pop
sub
and
push
jecxz
cmp
rcl
xor
inc
aad
lock
loope
test
jb
jno
cld
jno
or
lods
sbb
jmp
(bad)
test
push
mov
sahf
ret
xchg
xor
fninit
dec
(bad)
cmp
repz
cmp
push
fst
push
sbb
pop
popa
xchg
dec
and
sub
push
es
mov
pop
pop
sub
cdq
mov
pusha
or
int3
ficomp
jb
(bad)
lods
push
scas
rcl
mov
adc
int3
sbb
mov
xor
mov
test
movs
pop
xor
pop
cmp
jle
cmp
test
jbe
xchg
in
pop
stos
fcom
xchg
xchg
mov
push
sub
out
jle
leave
jnp
push
mov
ret
mov
ror
pop
daa
jne
add
mov
dec
xchg
call
fdivr
pop
out
dec
sub
dec
call
sub
xchg
or
pop
jecxz
push
xchg
sub
test
icebp
ss
cmps
jae
push
clc
and
hlt
push
adc
stc
fsub
sbb
lahf
cld
ins
add
cli
(bad)
fmul
lods
fcomp
dec
sbb
mov
int
mov
add
sub
cmp
sbb
into
rcl
cmps
xchg
dec
dec
(bad)
movs
or
test
cwde
cmp
mov
enter
add
pusha
in
aaa
add
icebp
xchg
jle
sub
fld
and
and
add
loop
shl
test
pushf
cld
rol
std
pop
pop
les
cmp
into
(bad)
aam
add
and
cmp
(bad)
mov
or
mov
cmp
call
xor
mov
sti
push
push
or
jl
or
test
or
lods
leave
fwait
dec
sbb
movs
nop
jnp
test
pop
cdq
ficom
mov
clc
shr
dec
jne
mov
imul
sahf
inc
repz
mov
lods
call
or
mov
mov
pop
push
mov
dec
dec
ss
or
retf
mov
jo
inc
lds
xchg
mov
cmp
scas
jo
cli
adc
and
sbb
jmp
mov
add
inc
push
jno
xor
outs
pop
repnz
push
mov
out
mov
mov
outs
jno
les
outs
push
pop
mov
mov
sbb
xor
cmp
xchg
inc
push
and
sub
jmp
fcomp
or
jmp
(bad)
cdq
sbb
shl
adc
cmps
aaa
jne
rol
ret
push
daa
jns
pop
repnz
les
fdiv
push
call
lock
in
push
leave
dec
psubsw
mov
fiadd
jmp
movs
out
nop
sbb
mov
and
push
mov
ret
mov
out
add
mov
xchg
fcom
xchg
mov
push
or
addr16
pop
ficomp
es
pop
mov
pop
imul
pop
fistp
xor
jnp
jle
pop
jnp
int
int
sti
fisub
dec
mov
shl
inc
sbb
and
(bad)
arpl
cmp
movs
inc
push
mov
sar
push
mov
dec
mov
push
in
loop
dec
dec
mov
sub
and
or
lods
add
adc
call
cmps
mov
mov
out
ret
xor
xor
stos
pusha
mov
(bad)
jo
mov
adc
movs
add
jno
out
or
outs
fist
xor
cmps
inc
inc
pop
(bad)
out
xchg
sahf
retf
test
jns
gs
xchg
xchg
dec
xchg
call
sub
lahf
out
sub
out
jmp
sbb
or
loope
(bad)
(bad)
js
mov
test
push
(bad)
dec
and
jns
mov
sbb
xor
stos
lea
push
pushf
push
mov
imul
outs
cmp
sub
nop
and
inc
xchg
jns
pop
popa
inc
sbb
sbb
xchg
je
mov
add
xlat
cld
push
movs
pop
(bad)
mov
or
mov
push
je
leave
in
jo
xchg
jmp
rcr
movs
out
fcmovne
das
jmp
fs
aam
imul
push
inc
je
mov
in
ret
fcmovne
ret
movs
sub
or
push
pop
inc
xchg
xor
push
xor
add
les
or
xchg
cmc
addr16
aam
movs
mov
sub
mov
pushf
sub
idiv
jl
mov
xor
push
(bad)
scas
into
shr
sbb
test
push
out
(bad)
mov
push
ficom
dec
pop
pop
jle
pop
xor
rcr
xchg
push
push
pop
jmp
jbe
(bad)
fdiv
sbb
mov
je
sti
pop
(bad)
adc
jmp
fsubr
clc
fimul
(bad)
sbb
out
adc
jbe
jmp
cmp
movs
cmp
xchg
sub
scas
inc
loope
inc
aas
cmc
pop
fst
inc
sub
loopne
fild
mov
xchg
dec
neg
push
push
lds
push
pop
in
or
push
xor
and
test
adc
jmp
jne
or
add
cmp
ret
mov
sbb
es
and
mov
mov
pop
mov
aas
pop
sar
add
pop
stos
pushf
jg
in
and
mov
adc
out
inc
xor
cmp
sbb
sbb
xor
out
xchg
shl
add
mov
hlt
push
push
pushf
jmp
call
mov
and
cdq
push
mov
test
hlt
jb
jno
out
movs
jo
cmp
mov
fwait
push
push
call
xor
inc
ds
popa
ja
(bad)
out
pop
repz
in
movs
popf
push
mov
sub
xchg
dec
adc
or
sbb
mov
lods
push
add
in
xchg
mov
sub
shr
xchg
sbb
jbe
dec
pop
push
mov
add
out
movs
les
and
and
and
sub
jp
sub
adc
jne
shl
mov
adc
fs
cmp
(bad)
mov
adc
out
dec
data16
inc
pop
adc
inc
ds
xor
arpl
or
leave
jmp
in
xchg
dec
xor
cmp
cmp
jl
icebp
jge
inc
add
mov
idiv
jne
mov
xchg
jb
push
fwait
repnz
mov
stos
cs
pop
div
and
repnz
fisubr
stos
pop
adc
out
sbb
sbb
mov
pop
mov
pop
adc
rol
or
nop
sar
jl
fiadd
out
imul
sbb
push
iret
sub
test
scas
push
mov
dec
mov
lea
neg
pop
cwde
adc
(bad)
jecxz
mov
shl
jo
push
xor
fnstenv
mov
xchg
jb
movs
mov
pop
pushf
cmp
retf
mov
jecxz
cmps
mov
jle
jle
jmp
stos
mov
aaa
mov
jg
scas
xchg
cmps
test
loope
repnz
test
sbb
in
and
data16
or
iret
mov
or
inc
inc
sbb
mov
test
mov
push
cmp
sti
pop
sbb
repz
movs
jno
xlat
xor
or
mov
fsub
iret
mov
mov
stos
cmp
inc
sub
fld
xchg
test
loopne
push
lea
(bad)
push
(bad)
mov
adc
mov
add
shl
and
pusha
in
mov
addr16
inc
rcl
fnstcw
mov
jns
xor
iret
out
cdq
int
jbe
sbb
add
inc
hlt
es
ret
cmp
call
dec
sbb
shl
retf
outs
add
pop
popa
and
sub
or
pop
rol
ins
aam
hlt
jo
push
sti
loopne
pop
cwde
sub
(bad)
enter
inc
sbb
ficomp
ret
mov
(bad)
sub
jbe
sbb
pop
push
xchg
fimul
jo
pop
cmp
(bad)
movs
shr
cmp
pop
mov
pop
ret
xchg
adc
mov
push
pop
gs
pusha
dec
gs
push
popf
addr16
mov
push
fwait
lds
mov
pushf
out
mov
out
and
loop
adc
sti
sub
mov
fsub
scas
(bad)
call
jg
test
mov
stos
adc
ja
adc
lmsw
dec
adc
mov
push
mov
push
je
pop
mov
retf
retf
or
add
add
mov
cmp
cwde
ret
sub
cmp
pop
stos
add
stos
cwde
sbb
into
sub
xor
ret
dec
adc
xchg
(bad)
cli
mov
test
repnz
pop
loop
imul
push
fdivr
cmp
pop
sti
pop
movs
push
mov
pop
outs
jb
add
fincstp
push
xchg
add
cs
shr
mov
jb
and
xchg
lahf
mov
mov
dec
jp
ins
sbb
cmps
jge
(bad)
cmp
shr
xor
inc
jp
inc
jle
or
scas
inc
jle
dec
sbb
jecxz
cmp
lods
fisttp
push
cmp
cmps
out
inc
mov
mov
xlat
xor
stc
ds
inc
push
mov
add
rcl
xchg
push
enter
rcr
dec
mov
pusha
in
hlt
loope
push
pop
inc
mov
pop
hlt
pop
mov
ret
push
mov
push
add
stos
push
dec
push
into
sbb
cmps
clc
or
push
popa
cmp
push
not
call
cmc
mov
push
fiadd
or
sbb
cmp
mov
jo
or
fwait
popa
adc
mov
xor
sub
xor
(bad)
cmp
faddp
clc
xor
lds
mov
sbb
adc
stos
lds
test
in
mov
mov
(bad)
or
jnp
or
jno
add
test
pop
cmps
rcl
cmps
into
cmp
adc
pop
sbb
pop
das
ret
fcom
cdq
mov
jle
sahf
movs
dec
and
mov
je
enter
lea
and
adc
xor
add
in
iret
repnz
hlt
repz
add
or
lods
mov
cmps
sbb
aaa
imul
inc
inc
test
jae
add
sbb
ss
push
jp
fidiv
lods
ror
jo
stos
push
(bad)
cmp
sbb
inc
aaa
cld
xor
cmp
popf
gs
adc
jecxz
pop
sbb
xchg
icebp
sahf
mov
repz
loop
imul
sbb
adc
xchg
shl
mov
mov
add
ins
shl
out
fimul
stos
mov
sub
pushf
mov
mov
in
imul
inc
push
sub
stos
jmp
clc
cs
aam
mov
call
add
faddp
jne
mov
rol
inc
mov
jbe
ja
or
add
loope
clc
(bad)
fcmove
aaa
sub
js
mov
(bad)
push
(bad)
and
das
je
cmp
inc
retf
inc
shl
xor
shr
ins
pop
sar
ss
pop
js
inc
(bad)
stos
dec
add
popf
and
sub
push
xchg
and
mov
cmp
adc
ins
xchg
jo
mov
jno
cmp
dec
arpl
(bad)
movs
outs
pop
add
mov
adc
cmp
cwde
jne
mov
sub
push
(bad)
loope
inc
aam
sbb
adc
test
rcr
xchg
jge
add
fs
cmp
dec
loope
mov
fnstcw
sbb
inc
arpl
pop
call
fstp
clc
lahf
or
rol
push
push
outs
or
imul
scas
test
gs
add
mov
cmp
in
cmc
and
fisubr
dec
pop
fwait
jecxz
cmc
jnp
jg
sub
cs
nop
shl
cmp
cld
sub
mov
jmp
mov
or
xor
in
mov
push
or
add
inc
popa
jae
ds
mov
inc
jp
int
test
and
sub
sub
mov
arpl
mov
mov
ja
dec
adc
push
les
loop
push
leave
pop
stos
sar
cmps
pop
jns
jae
sub
push
push
lods
jb
addps
sub
mov
scas
pop
sti
nop
xchg
mov
leave
sub
xchg
aaa
sbb
add
popf
pop
xlat
cmp
push
jno
mov
rol
(bad)
dec
mov
fs
daa
ret
ins
es
in
addr16
or
jp
fsubr
xor
ins
and
into
mov
dec
xlat
gs
xor
lahf
shl
xor
mov
fist
cld
mov
or
outs
xor
test
cdq
mov
call
mov
out
cmp
sbb
stos
ror
loope
leave
xor
(bad)
rcl
mov
cmp
ins
pushf
mov
add
or
imul
and
sar
xchg
jge
ss
(bad)
or
inc
xrelease
int3
out
ss
xchg
cmp
xchg
sahf
div
lock
xchg
jae
or
mov
movs
aas
rcl
push
cmps
jo
pushf
das
and
sbb
cmp
icebp
inc
aad
rcl
add
or
shl
iret
gs
push
xor
dec
sbb
aam
in
mov
add
mov
lods
or
test
(bad)
retf
cld
adc
test
test
rol
jne
loop
cmps
sahf
sub
outs
shl
or
fs
jbe
jmp
jl
repz
jns
movs
rcr
jns
push
hlt
xchg
add
sub
sub
or
sub
cmp
jae
cmc
dec
mov
xor
xor
das
sbb
lds
pop
in
movs
imul
popf
pop
pop
pop
mov
push
arpl
icebp
mov
aas
mov
and
pushf
js
lods
push
retf
add
inc
dec
out
call
mov
iret
out
and
jmp
in
push
imul
inc
je
scas
inc
pop
xchg
in
push
adc
mov
xchg
es
ins
push
stc
ret
add
leave
mov
sbb
in
std
call
push
mov
jecxz
jp
repnz
pop
xor
xchg
mov
mov
dec
clc
sbb
xor
sysret
rcl
rcr
or
pop
xchg
pop
sub
and
movs
cmp
test
sub
adc
nop
or
dec
out
test
push
sbb
or
(bad)
mov
cwde
cmp
adc
es
lahf
push
dec
push
mov
push
pop
retf
add
sar
mov
ss
fs
sub
sti
mov
add
mov
enter
test
inc
mov
fdiv
in
je
sub
and
test
inc
call
imul
shl
frstor
push
cs
out
adc
(bad)
bnd
mov
or
sahf
rcl
add
in
in
xor
sbb
stos
pop
test
mov
arpl
jmp
add
(bad)
adc
inc
mov
out
sub
sub
dec
fscale
ret
push
pop
cmp
enter
inc
shl
pop
sbb
mov
aam
fst
inc
aam
shl
push
repz
adc
cmp
out
mov
aam
in
and
jp
mov
jmp
(bad)
aaa
sar
dec
das
cdq
jne
jne
sahf
(bad)
int3
cdq
jns
xchg
retf
lahf
aad
xor
aas
dec
push
enter
and
add
mov
in
lock
jl
mov
icebp
add
aad
fimul
mov
sub
mov
out
mov
in
ror
sub
cmp
push
ret
add
pusha
sbb
cmp
adc
pop
sub
mov
cmp
jmp
mov
and
dec
pop
aas
and
jmp
and
shl
sbb
sti
loopne
add
sbb
inc
inc
adc
ror
(bad)
popa
jno
xor
nop
(bad)
fdiv
or
mov
lods
mov
pushf
icebp
push
jae
test
jmp
sub
rcr
mov
mov
pop
loopne
call
push
jo
push
pop
bound
(bad)
out
dec
sub
fisubr
aad
mov
retf
lea
add
jns
xchg
mov
outs
pop
cld
mov
sbb
clc
ins
lods
jmp
or
retf
inc
pop
vpaddusw
jne
jmp
mov
adc
jmp
xchg
dec
pushf
leave
push
inc
jg
call
test
test
add
mov
or
mov
mov
jo
sbb
ret
retf
pusha
jns
mov
movs
push
adc
jb
clc
scas
push
out
imul
pop
or
out
xchg
inc
jnp
shl
aas
inc
sub
xlat
mov
(bad)
in
ds
sub
cmp
shl
(bad)
xor
mov
push
test
or
add
adc
popa
add
data16
cmp
xor
out
lods
sub
data16
les
sub
imul
jno
pop
jae
xor
mov
(bad)
test
clc
adc
pop
adc
mov
ins
cmp
pop
(bad)
enter
xor
ss
es
je
inc
mov
adc
add
in
jp
aam
mov
xchg
or
sub
push
mov
xchg
mov
mov
iret
jae
mov
jmp
mov
retf
(bad)
push
adc
sub
push
stos
sbb
pusha
lea
neg
jo
jle
lock
cmp
test
scas
clc
fild
cs
stos
ins
arpl
les
mov
stc
sub
bound
sbb
jbe
stos
mov
dec
test
mov
mov
(bad)
test
xor
xchg
xlat
movs
inc
addr16
or
dec
fld
and
out
pop
or
push
(bad)
fistp
adc
addr16
jge
ins
add
pusha
push
lea
stc
aam
mov
and
scas
in
mov
lock
xor
cmp
and
sti
fstp
xor
pop
sbb
add
loop
arpl
repz
shr
mov
jb
jb
mov
iret
adc
sub
out
mov
and
(bad)
aaa
daa
retf
cs
inc
mov
test
mov
sub
dec
inc
or
xlat
fs
cmp
cmps
sbb
xchg
cmc
xor
dec
rcr
add
fdivr
dec
xor
cmp
add
add
dec
mov
cmp
jge
pop
lock
xor
mov
pop
ds
push
(bad)
or
scas
fwait
mov
retf
scas
dec
movups
mov
pop
xor
shr
mov
aam
mov
mov
in
push
sbb
in
mov
je
mov
fisub
(bad)
out
popf
mov
sub
adc
xchg
cdq
ror
adc
shl
mov
dec
jmp
xchg
push
pop
push
outs
lock
movs
mov
adc
jbe
jmp
ds
lods
or
sub
mov
mov
retf
and
(bad)
push
mov
xchg
cmp
shr
xor
cli
jbe
xchg
aas
mov
int3
dec
sbb
cmp
push
mov
lods
mov
mov
pop
jmp
sub
int3
fimul
stos
mov
outs
xchg
push
push
sbb
or
rcr
je
push
loop
dec
fisttp
(bad)
stos
(bad)
div
or
enter
aaa
push
div
sub
and
cmps
inc
retf
xchg
xor
leave
es
ret
jmp
inc
pop
test
adc
jno
or
jb
or
mov
or
push
in
inc
mov
jbe
movs
mov
ret
add
xor
ds
jge
add
dec
dec
jns
pop
jbe
pop
inc
jno
call
xor
retf
or
sub
add
cmp
pop
imul
das
mov
ror
inc
and
sub
std
call
addr16
jmp
xchg
dec
push
add
and
icebp
sbb
leave
scas
(bad)
std
or
push
jae
push
lock
jp
lds
mov
pop
or
push
loop
mov
add
jmp
push
push
repz
scas
cdq
sbb
cmc
and
leave
test
mov
and
jnp
imul
mov
popa
sti
gs
retf
fs
xor
sti
jmp
xor
or
das
imul
or
cmc
dec
(bad)
cs
cmp
sahf
(bad)
cmp
int
push
pop
inc
fldln2
outs
loopne
out
and
bound
pop
mov
call
in
cmp
sti
mov
or
aam
out
idiv
leave
(bad)
pop
or
inc
add
addr16
nop
ins
imul
cmp
cmp
stos
jge
(bad)
sub
jmp
pop
mov
cwde
(bad)
or
cmp
test
mov
test
and
cmps
ret
sbb
jo
xor
add
push
arpl
xor
outs
dec
push
sub
sub
les
inc
or
ins
cmc
int
mov
(bad)
xor
inc
xchg
loop
cli
add
ret
mov
mov
add
jno
ss
sub
mov
rcl
inc
cmp
in
xchg
adc
xor
push
push
lds
stc
pop
fsubr
popf
add
push
jmp
ds
js
xchg
aaa
aam
xchg
popa
fst
and
dec
inc
xchg
sub
les
nop
mov
ja
scas
and
retf
add
icebp
push
xchg
cdq
aam
aad
ins
imul
jno
push
cmp
adc
pop
and
pop
ds
pop
cmp
push
push
out
mov
jo
movs
pop
inc
sahf
js
xchg
or
inc
retf
cdq
pop
or
push
sub
push
dec
fdiv
aam
jnp
push
mov
cmp
cld
cli
mov
call
loop
or
jg
cmp
mov
cmp
jno
int3
fbld
movs
movs
xlat
cmp
div
pop
cdq
sub
xchg
or
icebp
mov
fld
shl
iret
or
jmp
jg
xor
popa
adc
iret
push
adc
repz
inc
ret
les
jg
adc
rcr
mov
dec
das
aad
inc
inc
imul
pop
inc
add
imul
cld
add
shl
repnz
lock
(bad)
aam
lods
ins
xor
pop
gs
dec
or
add
lods
dec
sbb
or
out
mov
adc
test
inc
(bad)
jnp
in
(bad)
adc
mov
jbe
cmp
cld
fbstp
push
(bad)
or
cdq
sbb
fcom
pop
mov
(bad)
fiadd
loopne
in
pop
movs
fdivr
out
mov
pop
xlat
pop
jp
fwait
test
add
adc
out
dec
adc
outs
sub
dec
inc
les
jg
leave
cmp
retf
cmp
and
sbb
les
cmc
inc
mov
fadd
mov
mov
and
stc
mov
jp
xor
or
cmc
outs
hlt
out
outs
xchg
sub
les
jmp
jne
pop
lds
add
aaa
add
(bad)
cdq
sub
xor
xchg
retf
mov
push
aam
popa
or
ss
add
push
cmp
pop
cwde
ret
xor
sub
cmp
pusha
cmps
loop
sbb
test
inc
mov
lock
dec
mov
imul
stc
cmp
cmp
mov
pop
dec
push
or
inc
fnstsw
add
inc
add
mov
ja
in
ja
push
(bad)
xor
aaa
pmaxsw
out
mov
aam
mov
mov
push
popf
sbb
sbb
out
into
mov
daa
fcom
lock
xchg
int3
jge
jl
cs
icebp
gs
loope
mov
sub
sub
sub
dec
sbb
(bad)
xchg
stc
jne
or
mov
sbb
mov
inc
jno
mov
lods
or
icebp
ss
xchg
mov
fldenv
ret
test
faddp
push
cdq
fdivr
push
xchg
out
cld
sahf
or
xchg
mov
test
mov
jns
lahf
ror
fisub
inc
push
lods
call
popf
les
js
ds
mov
adc
pop
cmps
xchg
jae
fwait
icebp
mov
xor
inc
pop
inc
and
retf
pop
(bad)
lock
(bad)
fld
mov
frstor
sbb
dec
jno
movs
cmp
jbe
xor
push
mov
mov
push
repnz
mov
aad
int3
mov
scas
fild
pop
aas
fs
mov
loopne
sbb
jae
mov
jmp
jne
mov
jle
call
jg
cmp
push
dec
inc
rcl
sbb
hlt
ret
shl
xchg
push
into
rcl
inc
test
movs
lods
add
fcomip
pop
js
fidiv
and
or
mov
push
cmp
loopne
jle
dec
fild
mov
xchg
xor
outs
mov
and
or
scas
mov
mov
movs
rcl
test
or
push
xchg
cli
mov
ds
cs
aaa
mov
mov
or
jp
mov
into
lahf
pop
inc
add
jno
jp
mov
jns
addr16
adc
xor
(bad)
sub
cmc
mov
outs
nop
js
out
mov
cmp
js
jmp
cdq
(bad)
scas
imul
inc
test
mov
adc
jno
dec
cdq
dec
neg
adc
(bad)
loope
stc
dec
mov
aad
es
pop
push
sub
cwde
xor
push
sub
mov
mov
or
es
sti
add
imul
fild
(bad)
cmp
dec
add
jmp
idiv
xchg
or
and
daa
in
pop
stos
inc
dec
scas
cmc
mov
retf
fmul
xchg
add
and
rol
(bad)
stc
fwait
sub
fs
mov
call
and
cdq
lahf
cmp
xlat
std
int
mov
push
sub
mov
fst
jns
jns
es
ret
les
push
pop
repnz
hlt
add
jg
mov
das
adc
sub
hlt
loope
xor
(bad)
iret
jo
es
ror
jns
je
sub
xchg
jp
call
inc
add
pop
sbb
mov
jae
sahf
fld
sub
mov
rol
scas
push
pusha
cmp
sbb
inc
in
cmp
mov
sahf
sub
pop
inc
fxch
xchg
xor
cmp
data16
inc
ss
lea
inc
pmaxsw
sub
inc
mov
adc
mov
ficomp
xor
push
cmp
inc
mov
push
jmp
adc
jle
fimul
les
shl
hlt
mov
and
cmps
adc
je
pop
mov
push
ret
add
push
mov
test
pop
xchg
mov
adc
or
adc
pop
call
aad
adc
test
inc
mov
mov
ret
popf
loope
jo
jne
lock
add
sar
fcomp
fcom
sub
and
and
sub
outs
push
and
dec
mov
retf
inc
pop
or
ins
cmp
sbb
mov
pop
jge
in
mov
scas
rcr
and
jb
mov
cmp
gs
xor
pop
rcr
mov
dec
cmp
imul
aam
fwait
cdq
jg
mov
rcl
inc
jbe
ins
xchg
cmps
imul
nop
adc
push
push
leave
mov
arpl
jb
add
call
inc
sbb
dec
push
and
sub
dec
and
lds
popa
std
mov
pop
pop
xor
sub
and
sar
shr
aaa
add
cmp
mov
dec
pop
inc
or
jecxz
lds
xchg
or
and
mov
bound
js
fidiv
stos
in
lea
test
aas
push
ret
addr16
add
mov
xchg
jmp
imul
push
pop
(bad)
cmc
fwait
dec
push
rcl
mov
stos
sub
add
sbb
hlt
mov
ret
and
cmps
push
inc
inc
into
(bad)
mov
jne
pop
inc
and
adc
jmp
call
mov
inc
add
push
and
imul
in
xor
nop
xor
gs
jmp
and
jecxz
aaa
imul
lods
xchg
jbe
sub
into
adc
gs
jmp
add
or
outs
xchg
iret
dec
mov
inc
jmp
xor
in
punpcklbw
mov
(bad)
in
sbb
je
mov
mov
mov
jno
add
or
sub
ins
pop
xor
and
mov
aad
pop
ret
mov
fisub
sbb
or
ss
cmp
adc
lahf
sar
in
repnz
push
add
ret
or
int3
out
push
lods
jg
cmps
mov
mov
ret
push
fisub
ret
dec
xchg
js
aam
pushf
cmp
(bad)
or
cmc
jle
mov
add
sbb
sbb
out
mov
test
shl
cwde
mov
repnz
mov
pop
mov
je
or
add
sti
in
test
call
mov
push
xor
idiv
or
inc
outs
xchg
push
mov
and
(bad)
ja
cmc
dec
xchg
out
jmp
call
push
push
jecxz
fst
shr
or
cmps
loope
jp
aaa
mov
(bad)
cmp
outs
popa
sub
adc
xor
adc
dec
popf
cmp
(bad)
or
mov
pop
dec
jmp
outs
cmp
cli
mov
pop
xor
les
sbb
in
sub
xchg
lock
hlt
ins
mov
ss
adc
addr16
mov
jp
nop
sbb
sbb
clc
pop
push
icebp
fdiv
xchg
xor
out
jo
pop
sbb
xchg
scas
push
xlat
push
mov
cmp
clc
sub
cwde
lock
pop
loope
mov
jmp
out
cmc
push
sub
pop
stos
sub
aam
cli
das
idiv
mov
loopne
pop
inc
aaa
pop
arpl
sbb
int
xchg
and
leave
jmp
movs
call
xor
lahf
sub
mov
shl
xor
dec
lds
hlt
adc
lahf
adc
xlat
jbe
and
jnp
add
fld
sbb
add
icebp
xor
or
cwde
fidivr
in
clc
loope
jecxz
mov
add
fwait
and
daa
int
xchg
mov
or
jmp
std
fild
std
xor
xor
movs
adc
les
nop
sbb
ror
add
mov
mov
pop
fs
sbb
xor
retf
pop
scas
lahf
adc
stos
loope
lea
jae
or
ss
(bad)
ja
xor
push
retf
test
or
ror
adc
xor
pop
xlat
test
stos
aas
pusha
mov
popa
add
nop
push
sar
xchg
pop
mov
js
mov
jae
jbe
je
(bad)
and
pop
dec
xchg
jb
cmps
jmp
add
xchg
mov
nop
clc
retf
das
xlat
aas
jno
and
jnp
xor
loopne
lods
(bad)
sbb
data16
or
dec
cli
hlt
mov
iret
shl
push
es
add
or
repz
retf
not
cmp
or
fadd
sti
int3
jns
mov
dec
rcr
adc
jo
in
xchg
adc
sub
add
mov
out
sbb
mov
adc
sub
mov
xor
jmp
leave
shr
js
adc
jne
fcmovne
es
hlt
loopne
lds
(bad)
nop
mov
adc
xchg
sbb
movs
cmp
cli
dec
inc
sub
gs
adc
arpl
xchg
sub
mov
mov
pop
sar
mov
ja
mov
ja
out
aaa
push
inc
cmps
mov
in
inc
jmp
cld
ja
jb
inc
ret
test
in
add
mov
dec
xchg
pop
test
cmp
jb
call
ins
push
sub
cmp
xlat
push
add
enter
jb
cmp
cs
aaa
mov
retf
rol
inc
ror
jmp
ficomp
and
sti
xchg
mov
or
sbb
xor
jnp
xchg
mov
sub
fist
pop
sbb
dec
and
dec
cs
or
ins
out
out
fstp
mov
movs
in
xchg
mov
mov
mov
mov
jge
in
test
nop
cmp
lahf
test
adc
mov
in
xchg
adc
or
push
loop
cmc
cmp
pop
and
not
push
arpl
jb
call
inc
stc
mov
pop
xor
dec
ds
aas
movs
xchg
loope
xor
jle
dec
neg
iret
xchg
mov
jae
imul
push
push
jmp
test
and
mov
outs
mov
cmp
push
int
fild
lahf
jle
popf
ror
ds
push
in
outs
inc
mov
and
push
mov
lods
fild
push
cld
stos
sbb
js
inc
into
in
out
idiv
pop
inc
xlat
xchg
sar
mov
push
jg
push
cmc
mov
push
sahf
sub
pop
add
push
push
xlat
jbe
add
jmp
xchg
sub
cs
cwde
ja
mov
neg
add
pop
pop
mov
bnd
jmp
pop
(bad)
fsubr
cs
sub
xor
mov
dec
push
icebp
xor
push
prefetcht2
fcmovu
sbb
jle
shl
sub
iret
xchg
or
sar
xlat
or
inc
mul
cdq
or
jns
hlt
arpl
mov
stc
push
test
idiv
dec
pop
idiv
das
adc
jp
inc
cld
pop
and
out
mov
cmp
pop
iret
es
mov
mov
inc
sbb
popf
bound
xchg
fcomp
pop
xchg
(bad)
pop
shl
and
lahf
ds
mov
add
xchg
dec
popa
jmp
jno
pmullw
out
int
push
adc
mov
jmp
movs
adc
sbb
push
out
dec
push
mov
push
outs
ret
sahf
stc
jg
mov
shr
sbb
loope
shr
pop
pop
in
mov
mov
adc
mov
mov
inc
pop
sti
xchg
sbb
ss
mov
xor
adc
out
xchg
ret
xchg
gs
shl
in
out
fcomp
test
sbb
xchg
sti
lods
arpl
sub
pop
xchg
push
inc
fcomp
add
arpl
mov
xlat
sbb
push
jp
pop
sahf
test
sbb
shr
cld
xor
xor
(bad)
jb
or
adc
jo
xor
or
inc
push
shr
fdiv
jp
sti
add
sbb
dec
mov
cmp
inc
ds
mov
int3
sub
ror
pop
inc
and
leave
pop
outs
sbb
sub
(bad)
jp
retf
xchg
fldpi
sub
ss
(bad)
retf
or
movs
cmp
dec
mov
fbld
pop
or
cdq
jecxz
enter
in
(bad)
in
and
mov
xchg
movs
rcl
cmp
cs
repz
leave
add
cmps
mov
inc
cmp
popa
aad
rcl
movs
sar
stos
and
pop
ret
fisubr
fst
loop
add
retf
popf
and
and
cmp
pop
pop
cmps
inc
vprotw
mov
cmovl
jle
jae
add
into
ds
cmp
icebp
xchg
shr
test
(bad)
jae
jp
adc
retf
add
call
scas
and
and
shl
add
cmp
mov
fist
jne
push
mov
aam
fcom
xchg
jle
(bad)
jecxz
test
data16
movs
int
stos
dec
sub
in
cmps
retf
pop
shr
das
addr16
out
mov
cmp
mov
jmp
mov
movs
aas
adc
sub
xor
push
(bad)
lock
xor
lods
mov
nop
out
enter
imul
jno
dec
sbb
scas
shl
lahf
mov
into
jmp
xchg
pop
inc
into
adc
int
sbb
pop
cwde
in
ror
mov
call
popa
je
repz
and
cmp
popa
lahf
pop
jb
push
jmp
pop
fisttp
loop
or
lock
lahf
aas
xor
adc
pop
sub
push
mov
int
movs
pop
push
movs
out
cmp
add
and
addr16
mov
mov
push
xchg
ins
mov
js
mov
cwde
mov
das
mov
jae
xor
lods
pop
mov
int
add
movs
dec
test
xchg
std
repz
cld
fiadd
sub
dec
call
repnz
test
pop
js
jg
(bad)
stos
leave
fdiv
ret
jg
fiadd
cdq
xrelease
sbb
or
fldenv
out
fsub
mov
or
push
cld
stos
mov
mov
sub
mov
pop
jg
loopne
cmp
jb
cmc
pop
nop
retf
fucomi
leave
in
mov
sti
cli
mov
pop
mov
cmp
mov
jne
sub
push
fist
mov
data16
jae
jae
outs
mov
das
adc
fs
mov
in
mov
inc
jbe
imul
ds
bound
arpl
div
fld
ret
les
push
sub
add
add
in
adc
mov
dec
mov
push
sub
pop
movs
add
rol
cmp
dec
fstp
jnp
cmps
ret
pusha
xchg
mov
xchg
push
xchg
push
(bad)
repnz
fisttp
sub
data16
jb
sub
xor
cs
pop
retf
mov
jg
leave
imul
(bad)
xchg
adc
ds
call
imul
inc
jns
into
mov
mov
and
xor
dec
pushf
pop
sbb
lahf
js
or
xor
retf
out
(bad)
push
and
mov
dec
ret
adc
lea
add
push
sbb
iret
retf
xchg
mov
aaa
jecxz
push
sar
and
out
cmp
or
xor
movs
ja
outs
ins
adc
xchg
fs
adc
adc
iret
imul
push
sbb
mov
xor
adc
shl
(bad)
mov
push
cmc
into
in
das
sub
xchg
out
pop
jmp
aad
lods
adc
add
adc
jb
add
imul
movs
sti
xchg
nop
push
xchg
cmp
out
and
xchg
pop
call
jae
mov
or
cli
dec
les
xor
xor
js
dec
cmp
add
nop
dec
aas
outs
enter
push
dec
push
cmp
lds
and
push
mov
aas
sbb
pop
imul
mov
out
shl
fiadd
jbe
ins
stos
mov
int3
pop
sbb
shl
in
add
add
push
adc
and
fs
test
push
jo
jg
outs
inc
jb
ja
push
push
stos
add
mov
div
add
pop
leave
std
mov
leave
loope
std
push
cld
jae
adc
sub
lea
xlat
cwde
cmp
(bad)
pop
adc
pop
rcl
fdiv
rcr
bound
add
imul
ins
fwait
out
jne
mov
mov
mov
rdmsr
dec
cmps
cmc
or
call
jp
or
mov
pushf
jg
cmp
jae
sub
fild
test
xchg
fdivr
and
xor
(bad)
xchg
loope
aad
push
repz
mov
pop
push
rcr
cmps
cld
pusha
and
ror
sbb
mov
int
in
aas
nop
and
jmp
cmc
xor
std
lds
out
xlat
push
movs
dec
push
push
inc
cmc
pop
sub
in
mov
add
out
out
iret
xchg
sbb
fstp
icebp
fdiv
aad
add
pop
ss
movs
add
adc
jle
push
jmp
cli
rcr
mov
dec
sub
not
ins
pushf
nop
inc
out
test
lahf
adc
mov
nop
ds
cmp
js
aaa
cmp
gs
(bad)
sub
bndstx
push
test
pop
les
test
mov
add
cmp
and
in
(bad)
or
dec
scas
push
and
loope
shl
sbb
push
jl
int3
das
sar
in
pop
mul
lods
hlt
mov
out
ffreep
xor
lock
mov
xchg
enter
rcl
and
mov
pop
in
add
cmp
push
jne
mov
js
mov
retf
inc
cmp
sbb
cmp
push
sbb
push
das
mov
adc
dec
xchg
scas
aaa
xchg
dec
sbb
and
vpsubw
movs
push
xchg
mov
cmc
arpl
xchg
inc
scas
adc
ja
imul
and
mov
aas
(bad)
mov
in
adc
mov
ror
push
or
js
icebp
xchg
dec
and
adc
sbb
imul
mov
pop
into
mov
cs
mov
mov
xor
(bad)
outs
and
pop
xlat
mov
popf
cmc
lahf
mov
jbe
hlt
sahf
sbb
push
inc
adc
jge
daa
imul
mov
ror
out
mov
pop
popa
cmp
cmp
lods
into
mov
cmp
jb
jmp
test
aaa
add
sbb
push
adc
xor
xchg
add
test
fidivr
loope
jnp
lea
sbb
jmp
cmp
push
dec
lahf
pushf
mov
adc
ja
imul
imul
mul
add
call
mov
(bad)
pop
cmp
loopne
push
jns
pusha
aas
ffree
sub
xor
xchg
mov
mov
pop
outs
clc
xor
mov
lods
xor
mov
in
lahf
retf
xchg
test
dec
fnsave
sbb
or
and
scas
pop
push
mov
mov
and
push
imul
xchg
leave
push
adc
scas
push
cmp
xchg
and
shr
xor
push
sub
call
sbb
mov
sub
xchg
sub
popa
dec
sti
adc
ror
scas
into
mov
nop
repz
in
and
lock
xchg
je
and
shr
jo
mov
or
jle
pop
mov
add
hlt
fwait
and
mov
and
xor
jne
gs
adc
pop
lock
cmp
pop
xchg
hlt
xchg
sbb
imul
adc
daa
xchg
sbb
adc
lock
and
push
jg
push
sub
into
neg
mov
cmp
es
mov
test
add
push
scas
(bad)
adc
(bad)
repz
pop
add
mov
arpl
lock
xchg
jge
test
push
in
test
adc
cmp
movs
pop
cmps
xchg
sub
les
aam
iret
vmwrite
aam
inc
or
mov
ins
jns
idiv
lods
push
dec
push
bound
arpl
int
retf
push
(bad)
stos
mov
adc
idiv
sub
retf
aad
outs
mov
xor
mov
test
imul
lock
retf
aaa
push
inc
iret
jmp
xchg
dec
sbb
fdivr
lea
pop
adc
addr16
sub
test
pop
xchg
sub
mov
in
leave
cmp
add
shr
mov
lods
push
loopne
add
mov
inc
cli
cmp
aas
dec
push
jmp
outs
pop
mov
mov
or
ror
dec
das
xlat
outs
rcl
ja
pop
test
dec
out
push
mov
push
cmp
add
mov
sbb
pop
sahf
jmp
es
loop
or
jecxz
xchg
sub
iret
sbb
mov
test
pop
shl
push
loop
cmp
xor
dec
leave
mov
adc
fwait
cli
pop
jmp
mov
loop
sti
test
mov
(bad)
iret
jbe
imul
mov
dec
and
pusha
xchg
sub
jae
aaa
shr
adc
mov
push
lods
int3
push
(bad)
lea
jo
mov
les
pop
or
and
outs
and
inc
out
xchg
add
xbegin
call
(bad)
clc
add
mov
dec
addr16
pop
inc
mov
fisub
cli
and
gs
mov
or
mov
pop
loope
retf
dec
xlat
dec
scas
sbb
mov
arpl
call
sub
into
repz
shr
sbb
or
pop
mov
xchg
xchg
jecxz
pop
mov
mov
and
adc
stc
inc
test
mov
jmp
push
xchg
outs
pop
popf
jge
dec
ins
dec
xchg
xchg
xor
push
stc
xchg
xchg
repz
aas
push
test
test
mov
cs
cmp
stos
sbb
mov
push
sub
loope
dec
and
lods
jmp
rcr
repz
(bad)
retf
in
repnz
out
adc
lods
sub
daa
xor
adc
mov
mov
aas
inc
cmp
loop
push
ss
pop
rcl
adc
test
loope
xor
dec
int3
in
jecxz
push
int
mov
or
jmp
xor
movs
movs
sub
pop
pop
outs
mov
es
jl
loopne
xchg
pop
and
(bad)
sub
adc
pop
test
sbb
fs
ins
retf
aad
(bad)
and
ins
in
arpl
bound
jne
scas
movd
idiv
std
inc
fcomp
mov
pop
cs
and
int
pop
lea
or
in
sub
test
fucomip
iret
cmp
cmp
cli
mov
mov
lahf
mov
mov
sahf
mov
scas
cwde
push
sbb
mov
and
push
imul
or
sbb
dec
iret
(bad)
(bad)
lods
cmps
(bad)
xchg
jp
outs
pop
push
sbb
in
jmp
pusha
dec
dec
add
add
ds
repnz
mov
sti
adc
bound
pop
and
mov
imul
cmp
fwait
pop
jle
fst
aad
cs
lods
mov
dec
mov
(bad)
adc
push
ja
cmp
pop
mov
mov
clc
and
xchg
jmp
leave
or
out
aas
sahf
xor
push
pop
jg
(bad)
minps
adc
cwde
adc
pop
mov
dec
std
mov
cli
xchg
call
sub
call
xchg
push
cmp
mov
jmp
daa
fs
cwde
es
xchg
mov
mov
ror
rcr
loopne
cmp
xor
sti
ins
pop
jmp
add
popf
adc
inc
push
ficomp
loop
inc
inc
dec
test
or
idiv
fild
pusha
mov
or
cmp
and
jo
jecxz
not
xchg
stc
pop
mov
xchg
push
fist
push
mov
xchg
jl
mov
imul
fld
mov
(bad)
pusha
ror
lds
nop
pop
shl
adc
int
sbb
mov
lods
jp
aas
dec
movs
jae
stos
jl
jmp
xchg
sbb
clc
pushf
cmp
cmp
fadd
fild
call
out
jl
retf
jge
cmp
pop
cmps
mov
xchg
loope
cmps
repnz
and
into
mov
add
jb
int3
out
lock
mov
inc
dec
mov
mov
xchg
pop
xor
cli
sub
pop
mov
inc
cdq
sbb
xchg
xchg
cmps
add
lds
sti
out
adc
jne
add
mov
cmps
popf
add
add
push
lods
data16
add
int
xchg
pop
pop
daa
jb
push
int3
(bad)
adc
jno
hlt
adc
add
je
in
stc
sar
bound
outs
test
or
pop
inc
jmp
out
jl
and
sbb
dec
cmps
jnp
inc
or
cli
and
xor
out
sbb
das
inc
cmp
in
mov
mov
pop
push
dec
fistp
sub
mov
out
retf
mov
add
adc
push
sbb
dec
pop
stc
or
mov
mov
lods
stos
jne
mov
sar
push
mov
repz
jbe
sbb
in
icebp
(bad)
cmp
cmc
mov
in
sbb
test
xor
xchg
mov
xchg
fisttp
adc
mov
je
int3
or
fdiv
bound
mov
push
mov
call
pop
cmps
jae
clc
mov
dec
dec
cs
lahf
aad
clc
ins
jl
test
add
sbb
cdq
popf
scas
stos
xor
out
pop
mov
jo
repnz
ficomp
mov
mov
xor
jo
std
xchg
adc
sbb
sub
dec
push
pop
mov
fs
daa
xor
gs
push
or
in
mov
xlat
lods
call
xchg
dec
jmp
std
mov
(bad)
mov
cmp
jae
inc
xor
std
pop
test
pop
lods
cld
cmp
pop
push
rol
ret
push
mov
add
mov
ins
mov
fistp
xor
inc
ins
popf
sub
scas
adc
fs
movs
popa
out
inc
lock
cmps
adc
sahf
sub
dec
imul
cwde
push
mov
lods
(bad)
call
cmps
jnp
pop
mov
fst
ret
fwait
or
mov
in
and
(bad)
aaa
fwait
xor
add
cdq
mov
es
mov
jecxz
dec
test
aad
xchg
stc
and
sbb
dec
test
ins
in
js
xor
(bad)
gs
jae
retf
mov
adc
rol
cmps
xchg
int3
sahf
push
stos
fnstcw
jecxz
mov
out
daa
mov
sbb
fistp
adc
leave
dec
lods
pop
jle
js
cmps
sti
fist
and
add
fs
clc
xor
inc
jmp
sub
call
mov
data16
ins
mov
in
add
sbb
(bad)
jp
sbb
inc
mov
repz
or
inc
pushf
mov
outs
int3
shl
cdq
nop
loope
dec
pusha
cmp
xchg
or
repz
dec
loopne
mov
leave
enter
ss
retf
dec
inc
mov
ds
xchg
es
cmc
lods
xchg
aas
jl
mov
cmps
call
sbb
lods
sbb
in
xor
das
mov
or
ja
adc
xchg
dec
sub
mov
jne
test
pop
pop
xlat
das
sbb
shl
ficomp
dec
or
inc
pusha
add
add
dec
fiadd
xchg
fstp
aam
mov
loop
arpl
mov
out
xor
mov
rol
pop
and
das
sbb
push
add
push
in
aaa
popf
inc
xor
cmp
fst
xlat
push
mov
dec
push
or
pop
in
scas
pop
pop
mov
pop
mov
dec
sbb
jmp
into
test
push
mov
hlt
xor
gs
mov
dec
call
pop
fld
push
test
jb
shl
push
rcl
es
ficomp
push
lea
aas
fld
rcl
stc
repnz
push
add
js
cmp
mov
mov
adc
vmovshdup
push
dec
cdq
xchg
cld
dec
cmp
jno
cmp
fwait
or
(bad)
in
(bad)
imul
faddp
cmc
or
pop
adc
mov
(bad)
popa
xor
cmp
iret
push
cli
(bad)
(bad)
mov
pusha
jmp
cdq
paddd
enter
(bad)
jg
scas
and
jmp
fild
mov
pop
aad
imul
cli
inc
jmp
ret
mov
sti
ins
jle
sub
in
std
push
jl
hlt
scas
fldenv
dec
sub
inc
pop
pop
push
sbb
add
cmp
mov
cmp
gs
(bad)
int
lds
(bad)
lods
jne
jle
jns
add
sbb
push
shr
jmp
push
and
cmp
and
jne
(bad)
adc
pop
stc
fstp
aas
and
pop
mov
imul
adc
imul
xor
dec
fmul
(bad)
leave
jmp
dec
dec
cmp
in
sub
fistp
ins
inc
movs
mov
jecxz
jg
push
data16
and
jb
add
test
inc
(bad)
not
not
mov
aad
dec
inc
cdq
and
int3
push
xor
mov
stos
xlat
unpcklps
jmp
mov
push
outs
in
imul
aaa
and
outs
xor
cmps
xchg
pop
adc
movs
fnstcw
je
pop
jp
or
dec
xchg
push
sbb
test
mov
push
aaa
movs
shr
pop
ss
adc
xchg
ret
pop
stc
adc
nop
std
mov
div
jp
sbb
jge
ins
es
cli
and
mov
pushf
sbb
lock
jmp
inc
cmp
in
enter
jmp
dec
adc
ja
jb
pop
fist
inc
jo
jae
lock
inc
jle
popa
test
dec
xchg
clc
pop
leave
dec
(bad)
sub
fs
(bad)
aam
adc
lods
add
mov
es
pop
pop
pop
mov
loopne
lock
jae
mov
out
or
push
aam
cli
jne
jg
dec
fld
cs
test
cmp
mov
mov
push
(bad)
mov
fimul
or
and
or
cld
rcr
mov
dec
cli
in
pop
lods
sahf
jmp
inc
push
retf
cdq
cwde
pushf
or
jno
xor
fdivp
jecxz
mov
div
dec
(bad)
cmp
mov
pushf
out
inc
(bad)
push
in
inc
dec
inc
lods
popf
nop
mov
dec
mov
jb
dec
js
sbb
es
dec
mov
jecxz
sub
and
pop
or
jle
data16
pop
jle
xchg
cmp
into
lods
jecxz
data16
add
sbb
aad
mov
cmp
or
add
pop
ins
mov
mov
push
pop
cdq
scas
ds
inc
mov
mov
sub
movs
add
movs
mov
push
(bad)
retf
push
inc
loop
sbb
inc
fisub
enter
adc
xor
xor
fld
xchg
arpl
mov
cmp
jae
xor
xor
xchg
mov
pop
test
rol
cmps
(bad)
sbb
out
lea
adc
inc
ins
pop
cld
push
out
adc
cmps
or
inc
ins
adc
pop
mov
sbb
sti
or
inc
popa
setno
stos
xchg
sbb
pop
sti
and
xor
pop
stos
sub
shl
lock
imul
mov
cmc
in
pop
jp
pop
pop
cmp
mov
lods
cmps
inc
add
imul
mov
cdq
xor
or
mov
inc
ds
(bad)
sub
adc
xor
aad
mov
push
leave
mov
std
adc
mov
jmp
fwait
mov
sahf
mov
pop
je
mov
push
repnz
xor
fwait
push
pusha
js
repz
mov
or
movs
loop
mov
mov
sub
jmp
and
test
mov
cwde
dec
jp
xor
mov
sbb
es
pop
fyl2x
jmp
mov
cmp
pop
das
adc
imul
(bad)
scas
mov
sbb
pop
leave
in
loope
jmp
retf
add
sbb
jle
test
int
popa
stc
jno
outs
xchg
out
call
pop
gs
call
xor
dec
shl
mov
cdq
or
cli
mov
inc
cmp
sbb
jno
push
adc
xchg
dec
cmp
pop
dec
xor
pusha
movs
mov
dec
xor
or
push
push
rcl
jp
mov
inc
lea
psllq
loop
inc
leave
in
je
pop
mov
mov
push
sub
into
pop
push
pop
jb
mov
cs
ret
lods
xor
loopne
add
cmps
stos
enter
xchg
and
pop
in
sub
stc
sahf
mov
add
call
and
loopne
inc
jae
sub
or
dec
sub
xor
cmp
xchg
mov
pusha
xlat
call
push
mov
lahf
pop
push
dec
fidivr
mov
fcomp
scas
fdiv
in
mov
adc
call
sbb
jo
push
inc
mov
repz
movs
jb
ss
in
sub
xor
mov
push
dec
jg
lahf
sti
push
xchg
cmp
jp
loopne
int3
daa
xchg
pop
dec
xor
retf
sub
dec
imul
or
sub
sub
jns
arpl
(bad)
out
jl
cli
xchg
pop
jp
jmp
push
mov
push
add
in
stc
jo
sub
imul
addr16
pushf
jmp
cmp
(bad)
loope
aaa
cmp
push
lock
cmp
scas
add
xchg
inc
ret
pusha
stc
mov
mov
mov
or
ds
sbb
stos
dec
add
xor
out
sub
and
sub
cmp
ins
add
nop
daa
adc
mov
dec
iret
xchg
ds
int3
mov
xor
rol
adc
enter
and
arpl
je
and
mov
jmp
test
dec
fdivr
in
jno
std
mov
pushf
jl
std
dec
or
mov
(bad)
xchg
pop
xor
pop
and
in
pop
mov
cwde
fisubr
je
cmp
shr
pop
aaa
inc
xor
push
push
push
hlt
bound
jb
inc
jmp
shl
dec
in
popf
dec
shl
mov
sar
jmp
mov
test
sbb
pop
or
gs
ret
clc
xchg
push
mov
sahf
mov
aad
jle
ror
dec
mov
or
adc
xor
inc
cmp
in
inc
(bad)
sbb
cld
fdivr
lods
fidiv
(bad)
mov
pop
and
fnstcw
mov
lock
call
xor
xor
pop
mov
icebp
dec
xchg
xlat
and
inc
idiv
daa
sbb
cmps
mov
movs
mov
jecxz
jmp
rcr
sbb
jmp
ds
ins
mov
mov
shl
dec
addr16
mov
pop
imul
imul
mov
mov
arpl
wbinvd
fdivr
adc
mov
cwde
jle
inc
retf
popa
mov
ins
les
imul
push
xor
push
pop
enter
cmp
(bad)
lock
mov
dec
and
add
aam
mov
out
int
sahf
out
retf
push
or
cmp
push
cli
sti
xchg
test
retf
add
fdiv
jo
ret
mov
call
ja
dec
shl
adc
jns
xlat
xor
pop
call
movs
xor
push
cmp
push
es
hlt
ror
aas
cdq
test
je
inc
les
cmps
mov
(bad)
dec
or
jnp
les
push
pop
pop
mov
cmp
fdivr
cdq
pop
icebp
pop
jb
ja
mov
stos
fsubr
mov
ja
cvttps2pi
pop
jl
movs
into
(bad)
outs
lds
cmp
pop
int
jmp
xchg
neg
dec
mov
sub
mov
fmul
fdivr
sbb
ja
dec
dec
hlt
div
test
mov
test
imul
cmp
cmp
test
loope
and
mov
or
xchg
cmp
icebp
jae
popa
push
stos
sub
loope
outs
mul
push
ss
xchg
ret
and
fidivr
sbb
add
out
adc
xor
aam
or
es
fs
xor
fld
sub
inc
jp
mov
cmps
mov
or
dec
in
sub
rcl
not
sub
in
fs
cld
lahf
mov
pop
inc
xchg
jle
mov
loopne
push
loop
jb
cs
aad
cmp
lea
rcr
shr
lea
movs
stos
sbb
and
aad
push
pop
adc
stos
mov
jb
xor
push
adc
dec
sub
sbb
xchg
jb
and
jmp
rcl
push
pop
stos
mov
pop
mov
cdq
add
mov
jae
das
xchg
cld
adc
push
(bad)
movs
leave
mov
mov
pop
jecxz
sbb
sahf
daa
mov
in
xchg
in
sub
stos
push
out
xor
mov
(bad)
inc
pop
push
leave
pop
lea
sbb
and
test
push
in
out
repz
(bad)
adc
test
pushf
jo
and
push
push
sub
lds
inc
hlt
ret
loope
popf
ins
push
xor
dec
inc
xchg
jp
(bad)
adc
ficomp
or
or
sub
fs
push
dec
adc
inc
push
cmc
pop
push
pop
fdivp
jne
fiadd
aad
iret
mov
push
shr
jns
cmp
mov
daa
movs
imul
inc
xor
test
call
mov
test
xor
mov
push
out
mov
mov
xlat
pop
loope
mov
jmp
pop
mov
scas
rcl
push
and
pop
push
mov
pop
mov
jo
mov
xchg
cmp
(bad)
cmp
and
add
mov
cli
push
mov
test
push
fcom
in
cs
(bad)
push
and
shr
xchg
stos
bound
pop
and
test
or
xor
jne
ins
sub
scas
mov
mov
add
add
sbb
mov
inc
or
xor
add
or
xchg
jb
mov
add
not
das
mov
rcr
mov
mov
add
ret
jo
cmc
pop
mov
in
mov
mov
mov
shr
ins
pop
xchg
in
sub
fild
pop
fistp
add
xor
into
push
shr
clc
cdq
(bad)
fldz
cwde
or
fst
xor
mov
rcr
mov
addr16
int
cmp
addr16
xchg
test
dec
jno
adc
adc
cmp
cli
loopne
(bad)
sub
cwde
fld
mov
fiadd
popa
jb
sub
and
jns
add
inc
adc
pushf
out
test
inc
jp
dec
loop
mul
mov
xor
cmc
jno
mov
mov
mov
retf
xchg
adc
pop
pop
dec
push
add
add
add
jbe
jb
push
sub
fwait
mov
out
gs
dec
dec
imul
jb
mov
cmc
aaa
pop
inc
mov
push
mul
sub
push
sbb
in
mov
das
cmp
or
xchg
pop
fmul
mov
cmp
inc
sub
cld
push
sub
and
push
sub
(bad)
aaa
jl
dec
and
popf
cmp
push
out
mov
or
inc
repnz
push
mov
add
sbb
imul
out
xor
jg
retf
mov
test
push
test
lock
adc
ror
pop
inc
sbb
cmovne
lods
jp
jo
outs
mov
test
sbb
pop
sar
in
test
sbb
dec
add
jne
adc
es
cmp
pop
ins
jecxz
mov
push
mov
and
repnz
in
call
in
or
dec
add
lods
dec
arpl
xor
pop
pushf
sub
jg
xlat
test
call
mov
(bad)
(bad)
ffree
sahf
sub
jle
test
ja
xor
sub
mov
(bad)
js
mov
mul
stos
(bad)
retf
or
rcl
mov
sbb
int3
in
cmp
shl
movs
out
add
je
mov
popf
fidivr
push
cmp
lds
mov
(bad)
or
xchg
mov
mov
lahf
push
xor
adc
stos
pop
xor
call
shr
jg
stos
sbb
jb
movs
mov
fdiv
aam
lea
cmp
inc
sahf
iret
das
xchg
test
inc
movs
fs
sub
or
cld
adc
loop
mov
or
mov
mov
in
and
(bad)
daa
jb
xchg
fwait
jo
dec
inc
retf
sub
sub
add
jg
mov
mov
xchg
push
rcr
xlat
jne
imul
xor
jmp
rcr
sub
arpl
mov
shl
nop
pop
adc
test
mov
inc
leave
push
shr
cmp
dec
movs
push
mov
mov
(bad)
rcl
(bad)
clc
push
jmp
jnp
repz
or
mov
mov
sub
fdivrp
aaa
cmp
cs
mov
xor
pushf
scas
into
xchg
sahf
adc
adc
ret
repz
inc
dec
cmp
xor
mov
inc
ret
and
std
fldenv
idiv
push
test
jmp
outs
jmp
jno
and
rcr
out
push
jb
das
retf
and
cs
test
cwde
push
daa
sbb
in
jno
cmps
icebp
push
xchg
xchg
push
in
into
ins
xor
add
mov
dec
sub
or
fistp
les
add
ret
les
cwde
push
std
add
and
and
aaa
mov
pop
jl
loope
fucomip
test
inc
mov
(bad)
int3
sbb
mov
sbb
ficomp
push
xor
or
and
int3
xor
adc
test
aaa
xchg
(bad)
xlat
retf
mov
pusha
add
sub
(bad)
imul
leave
ret
dec
push
adc
mov
les
push
jnp
pusha
xor
jns
faddp
ret
ins
cmps
mov
shr
mov
sub
inc
adc
mov
into
jecxz
movs
push
popa
out
lock
les
sbb
stos
int3
loope
adc
mov
inc
ret
(bad)
jmp
daa
mov
test
jnp
sti
xchg
stc
daa
test
repnz
fucomip
sbb
push
lahf
call
push
dec
(bad)
lods
inc
and
outs
popa
dec
push
xor
rol
jo
hlt
inc
daa
dec
inc
cmp
mov
cmp
or
addr16
ins
sbb
fldenv
sti
popf
ror
sub
add
jmp
iret
je
sub
fnsave
mov
mov
mov
dec
and
push
inc
push
push
cmp
inc
add
shr
aad
add
mov
nop
test
aam
xor
aas
xchg
and
int3
adc
ret
or
rcl
push
ret
stos
adc
pop
sahf
stos
(bad)
mov
mov
sub
ret
fnsave
xchg
hlt
sbb
pop
xor
mov
fs
cmps
or
fbstp
mov
xchg
add
mul
iret
sar
inc
sti
mov
inc
mov
idiv
inc
ror
jb
pusha
xchg
in
mov
inc
(bad)
mov
jo
gs
mov
fistp
nop
xor
arpl
lahf
dec
and
out
adc
clc
sar
mov
cmp
adc
scas
cmp
(bad)
sar
pop
stos
cmp
push
xchg
dec
ins
ins
xor
(bad)
mov
jo
push
inc
push
push
xor
leave
xchg
fwait
inc
and
ror
ss
push
and
mov
sub
popa
xchg
jmp
xor
adc
pop
loope
mov
es
daa
add
test
fs
imul
sub
mov
out
ret
inc
outs
or
ins
mov
mov
or
jle
neg
fadd
pop
call
jne
mov
lea
in
or
popa
loopne
xchg
add
sbb
xor
ins
outs
push
das
jae
mov
or
jne
xchg
dec
popf
out
dec
int3
push
retf
sbb
mul
xchg
in
mov
jmp
(bad)
retf
int3
sub
jle
mov
mov
ret
mov
(bad)
cmp
fld
or
mov
jmp
mov
or
and
add
sahf
sahf
daa
pop
shl
mov
aad
aas
or
out
sbb
push
xor
sahf
pop
push
stc
cmp
iret
mov
sub
in
mov
lods
fs
not
xor
rcl
mov
arpl
(bad)
stos
popf
retf
add
mov
pop
lods
mov
repz
inc
ins
cmps
cmp
push
cmp
rep
fcmovb
push
daa
dec
or
jae
mov
in
jle
je
icebp
repz
pop
inc
mov
out
ins
stc
inc
mov
fst
cs
pop
mov
lds
jecxz
dec
and
push
adc
xor
sahf
pop
pushf
jnp
hlt
or
aad
mov
into
jecxz
or
pop
aam
xor
sub
es
pushf
retf
test
and
fwait
mov
mov
xchg
ret
(bad)
xor
test
icebp
out
cmps
mov
mov
stos
fs
or
mov
add
add
stos
out
xchg
in
jns
int
je
cmps
bound
mov
adc
jno
jbe
cmps
mov
rcl
and
in
adc
rcl
and
and
ss
jg
and
dec
mov
mov
and
pop
mov
stos
icebp
bound
outs
xor
sub
fwait
repz
es
imul
icebp
adc
jecxz
arpl
xchg
(bad)
pop
cdq
cli
inc
imul
loope
inc
pop
cwde
data16
cmps
fcomp
mov
dec
aam
ret
mov
mov
xchg
sub
sbb
mov
cmp
mov
or
add
adc
inc
imul
pusha
jns
inc
pop
jno
popa
xchg
gs
xchg
add
lds
mov
aam
aam
rol
mov
lods
pusha
xlat
xor
inc
mov
add
test
(bad)
and
iret
neg
and
retf
neg
inc
jnp
or
add
out
cmps
dec
jl
dec
pushf
(bad)
idiv
mov
repnz
sbb
outs
enter
adc
cmps
inc
pop
adc
retf
xchg
fidiv
ins
dec
jmp
xchg
shl
inc
shl
test
jg
(bad)
xchg
retf
es
gs
mov
ds
adc
sahf
jmp
jg
dec
mov
mov
call
test
xor
jns
fwait
adc
aas
mov
mov
mov
fsubp
jmp
daa
fisub
fwait
imul
and
lds
xchg
mov
mov
hlt
mov
and
test
loopne
fst
neg
cmp
jno
jge
neg
mov
aas
pop
test
gs
jnp
bound
mov
jg
das
pop
enter
lods
movs
jg
jns
xor
push
mov
fwait
mov
pop
mov
test
add
cld
sub
bound
adc
inc
xchg
pop
push
or
pusha
add
mov
popf
xor
sub
dec
loope
inc
push
stc
xor
bound
xchg
and
sub
cmp
mov
xchg
xchg
scas
ror
jp
jbe
dec
and
retf
movs
xor
ret
call
adc
mov
shl
fmul
jmp
cmp
fst
inc
jns
cli
jl
cmc
cmps
jno
or
lds
cli
aam
jmp
out
fiadd
mov
cmp
inc
call
shl
retf
sti
xor
ret
cmp
mov
outs
inc
addr16
mov
out
aas
scas
inc
stc
pop
rol
cmp
dec
imul
inc
inc
int
mov
cwde
shl
sbb
call
lahf
imul
fidivr
jnp
sub
dec
dec
cld
gs
loope
mov
sub
jl
lahf
cmps
mov
imul
cmp
fild
mov
xor
push
push
mov
push
std
xor
pop
mov
fcom
push
movs
jns
sub
jbe
pop
repnz
fwait
or
lea
sti
xor
sbb
movs
retf
add
xlat
dec
mov
pop
xchg
or
ja
or
sbb
shl
ins
xchg
add
xor
pop
jp
dec
ror
xor
inc
outs
jno
jg
retf
inc
loop
test
fwait
jo
mov
popa
fwait
mov
adc
test
fsubr
in
and
jno
cs
or
xor
add
imul
xchg
sbb
push
push
pop
scas
jno
push
ins
cmps
cmp
push
sub
inc
cmp
pop
or
iret
and
adc
cld
std
push
test
add
pop
sbb
sti
call
sub
(bad)
leave
lock
dec
jl
dec
push
idiv
mov
sub
adc
lock
jp
cmc
and
out
sub
mov
popa
and
(bad)
jmp
out
mov
pushf
(bad)
aas
ds
xchg
outs
jg
jge
test
mov
in
adc
lds
fmul
mov
or
jmp
js
ins
mov
xchg
out
sbb
into
push
int
inc
test
call
stos
out
les
ret
int3
dec
push
sar
sahf
cmp
mov
into
push
jns
pop
push
loope
mov
cmps
sti
push
jecxz
inc
loop
mov
sbb
dec
js
xchg
push
popf
scas
cs
into
scas
jmp
lds
ja
(bad)
lock
jne
inc
nop
mov
xchg
inc
arpl
test
xchg
call
inc
and
in
mov
in
sub
mov
cmp
int3
sti
adc
mov
mov
call
push
pop
adc
cmp
shr
fild
fld
cmp
mov
mov
ins
cmps
mov
jge
dec
push
mov
dec
repz
retf
xchg
mov
retf
sub
pop
shl
ins
mov
inc
mov
xor
xor
aad
sub
or
mov
or
cmps
mov
adc
dec
add
jnp
xchg
mov
xor
retf
push
mov
sbb
cmp
push
jo
hlt
out
outs
pop
shl
mov
cdq
dec
gs
mov
repnz
clc
adc
add
sahf
pop
sbb
les
and
pop
addr16
sub
push
leave
lea
ins
mov
adc
xor
or
inc
ror
mov
sbb
xchg
add
sbb
cmp
xor
dec
mov
mov
outs
or
xchg
pop
dec
mov
or
sub
pop
fisub
dec
cmp
sub
(bad)
dec
sti
pop
mov
pop
mov
xchg
pop
inc
fldenv
js
jg
xor
stos
(bad)
enter
scas
retf
in
pop
or
cmp
outs
retf
inc
cli
mov
add
lods
xchg
and
xor
dec
mov
in
(bad)
jle
push
push
jle
adc
ret
dec
test
test
mov
test
cmps
mov
or
mov
fcmovu
dec
mov
inc
pop
fisubr
fistp
adc
jmp
cmp
(bad)
mov
and
pop
clc
dec
jno
mov
arpl
and
das
sar
add
or
jl
cmp
sub
mov
add
dec
fstp
js
or
movs
or
int
nop
into
fld
jg
pop
adc
inc
sub
out
mov
cmp
mov
add
mov
push
pop
test
(bad)
cmp
cmp
jmp
retf
add
xchg
cmp
rcl
sub
cmp
sbb
jg
(bad)
mov
inc
dec
cmp
or
sbb
(bad)
push
sbb
jge
ja
enter
gs
int3
inc
xchg
push
and
stos
xchg
mov
loope
aas
cwde
or
dec
push
les
xchg
xor
jnp
arpl
sti
aaa
inc
popa
mov
jnp
sbb
test
jo
ss
ins
sbb
mov
jae
scas
stos
enter
cld
mov
imul
and
push
add
cdq
(bad)
cmc
cld
and
leave
mov
mov
loop
cli
pop
inc
cdq
mov
imul
mov
aaa
and
add
call
std
lods
xor
jo
outs
mov
jae
mov
addr16
idiv
pop
aam
test
ret
aam
mov
(bad)
pop
push
adc
xchg
scas
(bad)
rol
pop
cmp
cdq
shr
das
or
jns
mov
add
ja
or
arpl
jo
sahf
mov
dec
iret
mov
jb
cld
retf
and
pop
cmp
and
mov
iret
pushf
pop
test
and
mov
mov
dec
cmps
xchg
out
outs
out
xchg
cwde
xchg
push
movs
dec
sub
xchg
jbe
in
dec
lock
dec
adc
mov
push
sbb
push
jmp
cmps
mov
(bad)
leave
dec
int
test
ss
cli
cld
loopne
scas
xchg
nop
mov
je
jmp
lea
addr16
fisttp
dec
or
(bad)
jbe
add
loope
fld
outs
push
jne
(bad)
mov
mov
repnz
int3
outs
sahf
sahf
fwait
test
mov
ja
xor
cmp
xor
mov
ret
and
add
loopne
dec
call
mov
aaa
mov
push
ins
pop
push
xor
retf
leave
sar
dec
cdq
and
dec
sbb
push
imul
in
ins
sbb
stc
idiv
sbb
gs
adc
pushf
mov
ret
and
movs
out
xchg
sbb
shr
xlat
inc
pop
cmp
xchg
cwde
fild
daa
in
add
fcomp
push
and
mov
movs
and
cmp
movs
sub
mov
retf
push
mov
cld
dec
popf
jg
mov
or
cli
or
dec
cmp
push
inc
out
pushf
in
stos
adc
clc
out
jne
inc
nop/reserved
ja
out
out
jp
push
inc
aaa
jmp
xchg
popf
repnz
popf
dec
xor
or
mov
cmp
xor
leave
push
xor
cmp
gs
adc
push
out
retf
cld
outs
dec
cmp
data16
pop
push
cwde
push
fwait
dec
ret
ins
jns
in
jecxz
arpl
jne
sbb
add
xchg
mov
sub
sub
cdq
ins
in
stc
test
dec
cdq
mov
jo
cmp
or
jmp
fstp
test
cmps
cmp
and
(bad)
popa
mov
add
mov
jecxz
sub
xor
jge
and
pop
push
fldenv
push
ret
xor
and
jp
shl
mov
mov
sbb
outs
jp
push
sbb
mov
rol
daa
pop
jp
pop
inc
xor
jmp
adc
push
pushf
sar
or
ins
fimul
cmp
xor
cmp
outs
rcl
mov
jp
into
cmps
jae
clc
jecxz
mov
popa
cmp
adc
test
jecxz
cmp
into
adc
call
daa
mov
test
mov
mov
jb
rcr
ret
cmc
cmc
mov
lahf
int3
push
icebp
mov
sub
dec
fld
fcmovnb
xchg
popf
test
retf
aam
pop
add
push
(bad)
push
mov
mov
or
repnz
mov
mov
and
dec
mov
out
jnp
dec
ja
jl
bound
bound
fisubr
hlt
mov
add
cld
xor
sbb
cmp
loop
xor
lahf
sar
ret
add
push
scas
pop
xor
mov
pop
retf
jp
jns
jae
gs
sub
jo
gs
sub
jp
push
test
push
push
cld
cli
pusha
rol
xchg
sahf
jae
sbb
out
add
push
mov
jmp
fst
push
movs
sbb
add
out
shl
add
jns
and
ds
xor
pop
cli
jae
and
cmp
cwde
xor
mov
mov
call
in
icebp
addr16
in
adc
aad
and
into
loope
cmp
sub
jnp
aam
stos
push
shr
jae
loopne
or
and
sahf
aas
inc
movs
mov
scas
push
lods
jo
nop
and
dec
daa
and
pop
pop
jno
dec
test
jl
(bad)
les
dec
xchg
dec
push
jmp
sub
out
pop
lahf
xchg
addr16
adc
enter
dec
pop
add
jge
or
sbb
xor
imul
pop
mov
dec
mul
adc
(bad)
add
push
pop
psubsb
daa
ret
sub
fmul
cli
in
mov
stos
inc
jnp
xor
retf
xchg
xchg
inc
popa
adc
xor
sub
mov
or
sbb
(bad)
addr16
(bad)
das
(bad)
cmp
data16
sbb
mov
(bad)
in
out
les
rcl
cdq
add
mov
fcomip
push
or
arpl
push
test
scas
jb
push
ret
mov
xor
cmps
and
push
dec
pusha
or
test
data16
inc
test
mov
mov
not
or
arpl
in
movs
adc
scas
push
jmp
std
cmp
loop
stos
pop
ficomp
std
popa
or
mov
xchg
(bad)
dec
in
test
jne
jmp
jno
pop
jb
jb
mov
lods
test
jl
in
and
xchg
sub
ja
sbb
repnz
or
dec
or
sti
mov
push
pop
aad
mov
imul
sar
mov
dec
arpl
or
mov
jns
nop
ins
out
sbb
arpl
cmps
in
fwait
mov
and
cmp
call
clc
aam
xchg
cmc
xchg
xor
cwde
ins
aas
repnz
push
call
xchg
(bad)
inc
retf
dec
xlat
add
sbb
xor
xor
cmp
or
pop
daa
add
jne
pop
lahf
(bad)
cwde
mov
or
or
cmp
(bad)
popf
pop
hlt
sbb
enter
mov
inc
mov
lods
cwde
cmp
popf
mov
push
sbb
adc
test
jno
jl
push
std
pop
mov
rcl
call
lock
add
test
xor
pop
xor
mov
jecxz
push
add
aad
sub
dec
xchg
sbb
aas
loopne
(bad)
pusha
sub
aas
pop
add
xchg
xchg
mov
push
loope
call
mov
les
inc
call
ret
jle
das
sar
mov
mov
mov
or
sbb
lahf
mov
mov
mov
sub
shl
sbb
call
adc
dec
cmp
in
mov
cld
jmp
inc
inc
scas
adc
sub
cmp
mov
sar
and
sbb
mov
lods
inc
test
in
dec
gs
fs
sub
bound
dec
pop
jmp
jge
loop
push
jmp
das
leave
fnsave
xchg
push
movs
lahf
lock
test
out
mov
std
push
adc
cli
push
push
(bad)
rcr
popa
ror
sub
mov
sub
fistp
loop
(bad)
icebp
data16
(bad)
das
iret
pop
mov
je
pop
mov
fsubr
retf
cmp
sahf
repz
jle
fist
jbe
(bad)
push
pop
loope
cmps
in
pop
(bad)
jecxz
icebp
dec
into
inc
test
sbb
add
ror
test
test
push
mov
arpl
sub
fxch
inc
xchg
add
imul
(bad)
sbb
pop
in
jge
sub
xor
mov
(bad)
ffree
call
adc
fdivr
into
dec
xchg
jmp
inc
lahf
enter
repz
or
(bad)
rcr
push
ror
in
cmps
mov
ficom
das
sub
xchg
cmp
leave
cmp
addr16
fstp
dec
test
xchg
inc
xlat
imul
iret
data16
and
and
mov
scas
push
pushf
xor
sub
sahf
or
leave
mov
dec
cmp
jp
dec
ins
loope
xor
mov
int3
movs
inc
sub
cmp
dec
add
lods
dec
je
pop
push
jmp
xchg
je
jmp
ret
fstp
pop
mov
push
lds
call
sbb
push
ja
xchg
pop
inc
lahf
mov
mov
rcl
sti
repz
fst
push
mov
fimul
and
cmp
fsubp
inc
loope
cmp
int3
pop
sbb
pop
xchg
in
(bad)
push
(bad)
scas
push
push
xor
in
mov
sub
ins
ret
mov
push
inc
imul
ja
or
push
jno
bound
iret
push
das
add
int
jne
mov
and
cmp
cli
in
pop
or
xchg
out
addr16
add
nop
or
dec
dec
aas
sbb
cmp
(bad)
mov
inc
lds
fistp
jge
call
stos
fld
push
dec
mov
jnp
jae
inc
imul
int3
mov
repnz
outs
dec
push
cdq
adc
sti
in
outs
sub
jbe
iret
jmp
mov
jns
add
xchg
lds
jecxz
cmp
sub
jns
movs
mov
mov
outs
xchg
adc
xor
(bad)
sbb
stos
leave
cmp
pop
mov
stos
int3
test
mov
cld
dec
pusha
jecxz
shl
pop
out
sbb
xchg
outs
je
inc
and
leave
dec
pop
fptan
jge
fs
pop
mov
jae
loopne
pop
sahf
push
sahf
push
out
ins
dec
call
add
sub
and
jno
cmp
out
test
push
adc
adc
pop
mul
cs
cli
fidivr
mov
jge
dec
mov
test
call
cmp
mov
xchg
pop
dec
push
retf
rcr
add
add
adc
scas
test
cmp
or
not
push
jg
out
(bad)
sbb
enter
out
mov
sub
into
cmp
pop
loope
push
and
add
add
xchg
pushf
and
jb
sbb
rol
xlat
inc
cmovl
jnp
fmul
test
data16
mov
pop
push
clc
jl
(bad)
push
push
loopne
out
cmps
jl
sbb
stos
mov
ss
inc
ja
or
push
sbb
loope
jae
mov
(bad)
call
sub
sbb
shl
mov
les
push
add
pushf
xchg
icebp
and
loop
das
dec
repz
(bad)
(bad)
jge
out
repnz
pop
mov
mov
push
mov
mov
add
(bad)
jl
ret
cmc
dec
aas
dec
not
push
es
mov
ds
mov
repnz
cmp
icebp
mov
cmc
repz
push
stos
mov
cdq
call
cld
push
mov
stos
mov
push
inc
add
sbb
loope
mov
popa
enter
mov
cdq
pushf
and
push
sub
jle
push
ret
add
js
xchg
or
call
or
mov
dec
data16
or
pop
sbb
dec
fadd
and
js
cli
repz
cmp
punpckhwd
int3
dec
pop
or
data16
in
mov
ret
gs
dec
cmp
outs
mov
shl
or
add
pop
retf
jnp
js
and
stc
mov
fstp
(bad)
cli
lods
pushf
(bad)
lock
pop
cmps
into
ret
fdiv
call
push
popf
pop
xor
shr
mov
mov
xchg
jg
sbb
mov
add
mov
arpl
cmp
test
je
mov
and
loop
jmp
lock
test
adc
jo
mov
cwde
retf
in
inc
mul
mov
pop
xchg
outs
add
icebp
inc
mov
pop
sahf
in
and
cli
xor
push
shl
lahf
cmp
fdiv
nop
fidiv
idiv
mov
mov
adc
cmp
es
test
inc
retf
stos
mov
lahf
pop
inc
jp
lds
mov
sbb
clc
data16
nop
add
inc
sbb
loop
popa
add
retf
cli
clc
inc
or
js
add
adc
push
outs
(bad)
pop
dec
jmp
repz
adc
and
or
inc
gs
stos
xor
adc
call
cmp
sub
jb
xchg
(bad)
int
pop
mov
xor
movs
scas
pop
popf
jle
outs
or
cmp
retf
test
in
retf
ror
call
jae
inc
lods
fistp
(bad)
(bad)
push
or
inc
push
cmc
lds
rcr
outs
cmc
in
jge
sbb
fist
lods
sub
mov
pusha
push
retf
pop
mov
add
or
in
pusha
cmp
push
mov
push
jae
cmp
or
outs
jne
outs
data16
mov
call
lods
dec
cmp
push
adc
xor
mov
cld
movs
imul
mov
das
push
jmp
mov
cmp
push
and
sub
pop
ret
pop
out
iret
add
sub
inc
push
dec
scas
mov
cmp
pop
xor
jnp
jo
aam
add
and
mov
sbb
scas
mov
int3
cmc
scas
cmps
mov
sub
xchg
into
jecxz
retf
sub
in
xchg
xor
mov
and
push
shl
les
fadd
retf
fisub
dec
xor
mov
push
xor
mov
ss
stos
(bad)
rcr
xchg
in
xor
mov
add
push
fwait
xor
push
xor
(bad)
dec
jae
add
call
movs
cmp
rol
xor
(bad)
hlt
jo
addr16
outs
jmp
lea
std
scas
cwde
imul
imul
and
mov
push
jl
mov
jae
mov
or
mov
ds
cwde
vmovntdq
pop
(bad)
dec
repnz
jns
push
aas
call
jle
and
jle
dec
push
ffreep
cdq
fbld
mov
mov
xchg
fist
cdq
sub
xchg
lea
ja
aam
jo
les
addr16
imul
std
lods
xchg
xchg
lods
inc
dec
dec
add
sub
mov
int
addr16
test
aam
dec
scas
and
pop
in
rcl
popf
dec
repnz
and
pop
sbb
sbb
test
call
mov
lods
mov
cmp
dec
adc
push
lahf
sbb
cld
sar
pop
hlt
sbb
ins
mov
inc
push
leave
ret
mov
mov
pop
inc
sbb
jmp
jb
stos
test
es
pusha
jbe
or
fbld
in
dec
pop
dec
aad
push
daa
inc
dec
xor
imul
cmp
jb
daa
mov
xlat
adc
dec
in
fnstcw
dec
mov
and
or
lods
pop
data16
out
inc
pop
pushf
loopne
fnstsw
icebp
jg
mov
scas
adc
das
push
push
push
jge
clc
ds
test
and
scas
or
adc
loopne
mov
iret
lock
movs
adc
pop
test
and
fyl2xp1
je
push
fist
add
sbb
add
shr
scas
movs
jns
and
inc
mov
int
or
and
jbe
les
rol
je
(bad)
mov
ret
inc
ret
pop
jmp
(bad)
sub
mov
in
push
retf
inc
jb
out
dec
movs
loopne
les
test
xchg
mov
leave
cld
adc
adc
(bad)
or
jb
nop
es
or
in
xchg
and
lahf
xchg
movs
rol
inc
inc
or
dec
mov
jns
jp
push
dec
mov
jp
int
sbb
stos
xor
stos
push
out
cdq
call
sbb
inc
ret
(bad)
pop
jb
pusha
adc
dec
cli
div
dec
lea
pop
or
loopne
inc
retf
sar
int3
push
inc
loopne
jne
add
sbb
sahf
sbb
hlt
dec
push
adc
fcom
in
or
cmp
dec
inc
adc
xor
pxor
inc
mov
sti
cdq
push
sub
inc
mov
inc
jno
fld
cmp
or
add
in
jo
movs
pop
mov
hlt
aam
jb
out
inc
mov
mov
push
sub
mov
inc
ins
imul
in
test
repz
jb
jg
mov
mov
(bad)
stc
ror
into
enter
xchg
mov
leave
pop
or
or
es
push
ds
popa
(bad)
ja
scas
aad
inc
dec
fld
test
out
mov
bound
pop
test
mov
sar
jne
adc
dec
xchg
mov
xchg
dec
mov
cmp
test
sar
je
sub
xchg
sbb
xor
and
sar
std
mov
dec
loopne
out
xor
hlt
rcl
pop
mov
push
push
mov
popa
inc
dec
mov
outs
dec
mov
sahf
call
mov
icebp
std
mov
fistp
clc
outs
inc
push
aam
outs
inc
xchg
das
(bad)
js
pop
stos
cmps
in
jle
xchg
xchg
adc
stos
iret
test
push
stc
lock
ss
adc
add
bound
push
jp
int3
fwait
or
adc
and
dec
sbb
test
sti
popf
xchg
call
mov
lds
dec
rcr
jo
les
xor
push
in
inc
neg
addr16
sahf
(bad)
aaa
or
inc
and
jmp
out
sub
push
pusha
lock
adc
shl
out
rcl
and
scas
dec
cmp
inc
ret
sub
fadd
fsubr
ret
adc
aas
in
jbe
addr16
inc
mov
cdq
jge
pop
jle
xor
lahf
ja
mov
ror
pop
xlat
add
xor
push
and
fld
dec
pusha
sub
cmp
add
push
test
mov
jmp
adc
ins
jnp
mov
leave
sub
lock
ret
mov
push
sbb
out
add
test
outs
mov
addr16
imul
add
xor
(bad)
in
nop
inc
pusha
mov
repz
sbb
je
xchg
scas
cmps
jne
xchg
out
pushf
repz
pop
lods
sub
std
jno
adc
and
adc
(bad)
hlt
and
and
js
dec
adc
ds
sub
mov
int
mov
outs
adc
outs
dec
outs
sbb
pushf
psubq
fistp
imul
movs
mov
sub
pop
adc
sti
adc
std
movs
jae
lods
hlt
fidivr
xchg
adc
mov
jp
mov
push
xchg
jmp
jmp
into
and
ins
lahf
mov
adc
pop
push
cmp
stos
mov
rcr
dec
scas
test
imul
xchg
push
in
scas
ss
sbb
into
push
and
sti
mov
scas
adc
and
push
fsubr
repz
adc
in
push
pop
outs
cld
je
mov
lods
adc
repnz
ja
jno
sbb
call
outs
and
push
ja
mov
pop
mov
ins
fstp
idiv
aaa
inc
adc
rol
cs
cmp
sbb
mov
shr
fwait
push
outs
add
mov
sbb
adc
mov
es
(bad)
mov
xlat
aam
aam
push
dec
mov
clc
mov
push
add
sub
pop
mov
push
push
jle
or
idiv
into
sbb
or
aam
fldcw
hlt
and
mov
mov
mov
in
jo
cmc
dec
push
rcr
inc
sahf
clc
push
jge
retf
jg
ins
push
pop
cli
stos
retf
ret
jmp
pop
sbb
push
and
pop
mov
ds
adc
jae
dec
dec
scas
stos
cmps
fs
inc
test
add
add
test
fisttp
shr
retf
and
(bad)
sub
test
lea
and
lock
sub
xor
mov
and
(bad)
retf
lds
dec
std
gs
lods
imul
out
pop
xor
movs
scas
cmp
cdq
sub
add
mov
add
clc
xor
(bad)
sbb
mov
push
add
es
repz
imul
dec
loope
lods
and
fild
add
pusha
and
not
stos
(bad)
fiadd
mov
sbb
cli
in
mov
stos
addr16
test
push
shr
test
mov
and
mov
add
das
dec
repz
sub
movs
push
into
packsswb
xchg
popf
rcl
adc
cld
sbb
imul
jno
fwait
rol
inc
(bad)
fmul
leave
out
fdiv
ja
and
(bad)
fcom
pop
mov
xchg
pop
ins
sub
je
jmp
loopne
bound
fsub
in
(bad)
jb
push
fsubr
and
sti
aaa
lock
xchg
xchg
sub
popf
fwait
shl
imul
fsubr
arpl
jno
loopne
ror
das
leave
aad
dec
adc
xchg
add
and
sub
jge
or
iret
leave
or
data16
int3
and
int
dec
popa
jecxz
mov
retf
jl
pop
mov
hlt
fs
nop
ret
dec
addr16
jne
jecxz
mov
in
cmc
ret
clc
pushf
inc
xchg
rcl
pop
sbb
imul
mov
adc
pop
cli
mov
outs
and
pop
out
and
adc
scas
mov
mov
sub
fild
inc
xor
pushf
adc
push
jae
mov
mov
sub
pop
mov
pop
and
int3
or
or
sub
cmp
xor
cmp
sub
cdq
scas
sub
das
mov
jns
cdq
js
xchg
jecxz
push
call
xchg
jo
jmp
and
imul
es
rcr
fwait
xor
mov
(bad)
stc
dec
pushf
inc
inc
or
cmps
scas
ins
(bad)
sub
rol
xchg
cmp
out
je
inc
xor
repz
pop
ds
mov
outs
push
and
sub
lds
add
or
test
cdq
(bad)
std
(bad)
test
fwait
add
mov
cmp
xor
sbb
repnz
mov
push
push
enter
push
ins
xchg
dec
and
jo
mov
sbb
sti
mov
(bad)
loopne
arpl
das
scas
sub
or
out
xchg
sbb
cmc
sbb
fs
popa
push
mov
adc
inc
mov
and
adc
div
ins
sti
and
mov
pushf
mov
adc
retf
sbb
push
xor
push
int
xor
lods
inc
lods
ss
jo
mov
test
retf
dec
mov
stc
jb
sbb
je
popf
sbb
aaa
clc
sub
mov
sbb
xchg
mov
sbb
mov
jae
or
mov
movs
jmp
in
jns
inc
fimul
sti
xchg
sar
pop
mov
bound
sbb
dec
ficom
(bad)
jmp
popf
jmp
pop
inc
sbb
sbb
fiadd
xor
lock
aas
jmp
jmp
xor
rcr
xor
sub
sbb
shl
sub
mov
test
dec
(bad)
or
div
mov
add
retf
std
push
cld
pop
fistp
and
movs
das
cmp
mov
stos
mov
addr16
lahf
jge
hlt
push
xor
popf
sub
mov
scas
int3
inc
leave
xchg
cmp
loop
addr16
movs
dec
sbb
xor
and
ds
rcl
test
out
xchg
mov
cmp
loop
xchg
popf
mov
mov
ins
out
jne
rcr
add
ja
outs
ins
push
fist
in
adc
inc
stos
jmp
call
dec
popf
xchg
push
dec
arpl
jmp
add
ins
or
shld
push
icebp
bound
add
test
ins
jns
lock
test
push
fld
mov
in
std
add
xchg
ins
adc
aam
adc
or
icebp
or
imul
mov
push
push
lods
pop
jl
push
loop
dec
movs
stos
cmp
test
add
pop
bound
mov
pop
add
add
mov
nop
xchg
sar
out
mov
mov
push
or
enter
xchg
mov
aad
pop
ret
pop
mov
lods
aam
or
fist
push
sbb
pop
call
sub
sub
les
stos
add
(bad)
dec
aam
cmps
jnp
mov
fwait
int3
arpl
test
push
mov
add
and
jbe
push
imul
cmp
je
fs
aas
icebp
adc
dec
(bad)
pusha
not
and
jmp
mov
enter
loopne
inc
bound
addr16
adc
xchg
cmp
adc
imul
scas
outs
inc
inc
ror
adc
mov
out
ffree
pop
sub
mov
mov
or
(bad)
hlt
mov
mul
out
gs
lahf
ds
adc
inc
jno
sbb
leave
(bad)
dec
call
test
inc
sub
dec
movs
iret
in
sub
shl
mov
imul
loopne
and
shl
jb
enter
pop
cmps
or
nop
xchg
mov
in
jbe
inc
jmp
jge
psraw
addr16
std
sub
movs
test
(bad)
xlat
in
test
(bad)
or
aad
xchg
fidiv
shl
pusha
push
fidivr
mov
xchg
inc
lds
fs
add
adc
sub
pop
mov
mov
sbb
lods
outs
fld
mov
mov
add
scas
leave
jp
inc
loop
inc
cdq
cmp
xchg
scas
mov
dec
pop
int3
cmp
xor
cmp
xchg
fwait
(bad)
shl
rcr
cmp
push
or
add
and
push
sbb
dec
movs
cwde
aam
mov
(bad)
fnstenv
xor
inc
mov
add
pop
cmp
lods
add
adc
cmp
ss
sti
pop
(bad)
cli
nop
and
or
xlat
mov
mov
adc
jecxz
(bad)
in
cmp
pop
lock
sub
jmp
loope
xchg
mov
xor
rcr
ret
cmp
(bad)
lock
sbb
or
outs
movs
cmp
sbb
shr
hlt
dec
mov
xor
out
data16
mov
fstp
push
pop
cmp
fadd
sbb
pop
cmp
push
mov
cmc
xchg
dec
pop
fstp
pushf
sbb
pop
jbe
and
jle
adc
jmp
xchg
pop
adc
mov
cmp
mov
jno
jno
out
in
sti
mov
and
in
inc
and
jle
cmp
inc
push
test
pop
or
mov
mov
mov
jae
std
or
pop
push
rcr
fcomp
push
dec
mov
cmps
iret
sbb
pop
cmp
mov
call
in
inc
cwde
mov
cmp
xchg
cmp
movs
pop
mov
pusha
add
retf
das
or
mov
sbb
push
inc
adc
fcomi
movs
scas
pusha
loope
in
and
retf
mov
in
lds
mov
fild
mov
repnz
jmp
sub
pop
cmp
sub
mov
lods
lahf
pop
mov
push
fsub
push
ins
imul
add
sbb
in
jg
xchg
mov
dec
pop
sub
mov
mov
inc
or
shl
std
outs
out
out
jno
mov
adc
jbe
cwde
push
inc
arpl
xchg
cs
pusha
imul
fbld
fstp
jge
cmps
test
mov
inc
aas
aad
out
js
push
mov
int
sbb
dec
xchg
pusha
sub
cmp
rcl
cmc
outs
push
xchg
xor
xchg
sbb
cmp
mov
and
add
or
out
les
jp
xchg
pop
mov
inc
sub
cs
dec
push
cmp
out
repnz
lds
repnz
push
mov
sbb
stos
imul
stos
in
not
pop
and
sti
add
or
jmp
out
jmp
mov
cmp
and
add
in
(bad)
jle
retf
scas
xchg
call
lods
inc
ret
or
setae
or
outs
dec
mov
call
repz
jb
shl
hlt
pop
mov
add
xchg
adc
addr16
sbb
cdq
mov
dec
cmp
ds
xor
fwait
outs
push
adc
(bad)
out
aaa
jl
daa
lods
push
jle
movs
outs
dec
test
mov
ss
inc
cmp
pop
fdivrp
lock
(bad)
and
(bad)
mov
mov
dec
fisttp
out
adc
mov
fldcw
ins
enter
push
add
jge
adc
dec
jmp
jne
fiadd
in
xchg
dec
out
xor
(bad)
mov
jp
fadd
dec
adc
hlt
dec
pop
xor
cli
retf
ret
call
lods
std
cmps
xchg
add
or
js
std
fs
cmp
nop
sub
(bad)
and
pop
stos
mov
les
pop
mov
add
add
das
dec
stc
adc
adc
jmp
mov
sbb
inc
mov
cmp
loop
test
lahf
inc
lds
inc
jns
in
pushf
mov
in
nop
inc
mov
push
sub
dec
mov
sub
ss
scas
aas
fcom
lds
aas
dec
or
fild
pop
stos
sub
scas
mov
add
pop
push
fwait
cmps
sbb
aaa
push
mov
mov
hlt
cs
xor
loope
mov
inc
push
cmp
mov
test
pop
cmp
xor
icebp
adc
out
lock
adc
xlat
ret
push
js
fstp
sahf
or
aad
jp
popf
xor
push
push
mov
add
fistp
lahf
jne
test
cmc
(bad)
test
xchg
into
test
gs
dec
lods
mov
test
mov
sub
mov
int3
sub
jmp
push
push
adc
cs
jne
jns
adc
setnp
lods
pushf
stos
dec
push
xlat
add
daa
mov
out
out
mov
lock
inc
test
sub
add
cmps
lock
xchg
dec
in
jbe
mov
push
jecxz
push
(bad)
dec
dec
fs
lea
fwait
pop
iret
inc
fsubr
pop
add
cmc
sbb
sub
push
mov
aam
shr
iret
stos
fldcw
aad
loop
cmp
dec
push
mov
mov
jmp
xchg
out
fnstcw
push
cmp
sbb
cmp
adc
sub
cmc
cmc
ss
mov
sub
add
dec
mov
test
mov
fs
loop
in
cmp
fwait
jle
shl
imul
or
gs
or
sub
pop
adc
cmp
push
sub
cmc
mov
stos
push
xchg
cld
inc
adc
stc
fmul
sbb
xor
inc
in
push
scas
(bad)
data16
enter
ret
ins
push
or
xchg
adc
test
add
dec
fsub
out
bound
add
fist
add
leave
fisttp
ins
push
cmp
xchg
mov
cmc
test
cld
fwait
push
iret
add
(bad)
int3
or
out
sbb
or
out
sti
pop
das
fldcw
stc
jo
or
push
fist
outs
jmp
hlt
adc
jl
dec
cs
call
ss
scas
mov
push
and
or
mov
daa
ds
inc
call
es
stos
fild
rcr
cmp
nop
push
repz
xchg
out
pop
push
inc
or
sub
adc
mov
out
cmp
ja
adc
(bad)
ret
add
cmp
loop
cmp
out
cld
add
shl
or
fbld
fs
(bad)
and
adc
sub
call
mov
sub
pop
mov
imul
xchg
sub
aaa
ds
fdiv
fmul
popa
mov
xor
gs
jecxz
icebp
jl
rcr
jmp
hlt
mov
repz
out
into
mov
sub
mov
jle
xor
xor
dec
mov
je
and
sar
frstor
inc
daa
repz
sbb
jp
icebp
and
sbb
div
scas
xchg
xor
lods
cmp
data16
cmp
mov
imul
xor
(bad)
inc
mov
sub
adc
scas
xchg
pop
ja
in
jmp
inc
ror
daa
push
ficom
add
aas
lea
add
sub
fldcw
je
scas
mov
fs
inc
pop
outs
outs
pop
rol
jmp
ja
stos
and
cmps
out
mov
jbe
mov
and
fs
mov
(bad)
push
inc
sub
sbb
mov
mov
sbb
push
xchg
jmp
xchg
push
push
call
mov
(bad)
jb
clc
pushf
(bad)
sahf
mov
popf
call
icebp
mov
jno
imul
sbb
and
cld
xor
dec
jp
repz
and
or
inc
stos
or
imul
outs
(bad)
adc
inc
ins
cmp
in
or
adc
or
xchg
jae
aad
and
les
cs
or
movs
loope
ret
inc
or
dec
ret
jno
sbb
sbb
xor
push
fdivr
fld
xchg
std
dec
lahf
das
mov
inc
jo
jns
add
sbb
mov
xchg
jo
fdivrp
mov
sbb
es
ret
loopne
add
hlt
pushf
push
sbb
lahf
imul
xor
xor
stos
add
jmp
mov
jo
mov
retf
sub
pop
movs
dec
sub
ret
ins
imul
sub
sub
sti
js
lods
inc
or
(bad)
pusha
or
pushf
outs
adc
xor
test
cld
ss
ja
fidivr
mov
dec
push
loopne
(bad)
in
jbe
sub
push
sbb
add
outs
(bad)
call
rcl
daa
fwait
or
xor
xchg
test
(bad)
fbld
loope
pop
out
out
or
scas
cmc
lds
inc
test
inc
call
lods
rol
jo
ror
cs
inc
arpl
and
movhps
ret
mov
call
mov
mov
mov
dec
addr16
jecxz
in
imul
push
repnz
lock
jae
mov
sbb
or
dec
push
pushf
jbe
add
call
jne
add
dec
mov
rcl
cmp
pop
adc
aaa
out
push
jns
add
push
cmps
cmps
imul
(bad)
shl
cld
cmp
rol
inc
pop
pop
outs
in
in
jo
cdq
push
jp
jns
loopne
daa
cmp
xchg
loope
loopne
js
je
pop
adc
mov
xor
call
jecxz
(bad)
sbb
cmp
sbb
lods
scas
xor
cmp
(bad)
in
inc
jle
dec
aam
jns
pushf
mov
add
add
cdq
fstp
sbb
inc
adc
sbb
outs
not
push
fs
xchg
cmp
and
pop
jge
push
xchg
test
push
mov
mov
mov
cli
pusha
mov
adc
mov
ins
clc
mov
xchg
nop
lods
(bad)
and
sub
repnz
xor
ret
retfw
add
stos
jmp
push
pop
cs
fdivr
hlt
pop
not
test
out
and
mov
xchg
push
mov
cld
or
add
repz
mov
test
or
ds
test
mov
cmp
movs
sbb
sub
xchg
jmp
pop
dec
xchg
sbb
add
data16
lea
mov
test
jo
pop
ss
fst
(bad)
fwait
jno
jmp
dec
int
mov
pusha
addr16
int3
fadd
(bad)
sbb
loope
aam
xchg
mov
in
sbb
mov
mov
cmps
dec
push
data16
and
xchg
and
scas
(bad)
push
mov
(bad)
or
scas
jecxz
or
daa
cdq
mov
inc
jle
(bad)
repz
js
jnp
ficomp
outs
stos
sub
push
add
cs
es
(bad)
mov
(bad)
cmp
or
cmc
inc
lods
shr
aas
inc
(bad)
dec
sbb
lahf
mov
retf
mov
in
fnstenv
scas
cmp
shl
fld
mov
push
dec
cmp
stos
icebp
fsqrt
cmps
fistp
jmp
scas
xor
sbb
xchg
hlt
mov
lds
mov
push
jle
int3
bound
hlt
js
or
sbb
out
fadd
sub
inc
sbb
mov
hlt
ins
test
test
je
pop
push
push
adc
(bad)
loop
push
adc
std
pop
hlt
mov
mov
add
push
arpl
(bad)
in
cmp
sub
push
or
dec
(bad)
mov
test
inc
inc
mov
fbstp
mov
int3
or
int
sbb
repnz
rcl
out
mov
nop
and
fs
inc
imul
bound
scas
pop
shl
sbb
cli
mov
mov
(bad)
lea
push
lods
adc
inc
fisub
mov
test
or
fdivr
(bad)
push
stos
sti
jbe
and
ret
test
pop
xor
mov
mov
xchg
dec
(bad)
ins
fwait
movs
or
pop
mov
jge
or
or
movs
xor
ror
loop
dec
mov
ins
sub
jle
push
add
fsubr
loope
sahf
add
fsubr
mov
jecxz
xchg
dec
sahf
in
stos
and
cmps
addr16
adc
pop
sbb
adc
mov
inc
fdivrp
inc
fcom
les
lahf
xchg
lds
into
xchg
mov
and
xchg
mov
clc
mov
es
push
adc
adc
and
and
or
pop
in
call
xor
jmp
jnp
mov
jmp
fsubr
mov
mov
sbb
pop
ins
xor
dec
sub
push
push
xchg
cpuid
in
test
and
cwde
mov
xchg
xor
mov
dec
in
push
jmp
scas
sub
out
sti
push
fbld
add
mov
and
or
pop
pushf
fsubr
js
inc
(bad)
in
dec
mov
cli
imul
adc
xlat
in
cld
aam
push
mov
nop
jl
pop
mov
add
jl
arpl
inc
call
fcom
dec
ins
fist
dec
out
jo
dec
or
mov
fstp
dec
mov
add
add
stos
ins
fst
mov
mov
call
ss
scas
(bad)
push
push
or
movs
fmul
dec
cmp
inc
das
test
je
push
mov
adc
pop
mov
sbb
add
int
and
enter
inc
xchg
into
lea
mov
aas
dec
inc
out
aam
push
out
adc
xor
xor
mov
cmp
enter
mov
in
add
dec
in
push
fcom
adc
sub
loope
fsub
lea
push
ins
mov
inc
mov
sub
jmp
push
out
push
loope
xchg
mov
sbb
add
sti
sub
iret
push
loopne
cld
jg
fmul
cmps
popa
mov
mov
sub
xchg
cmc
in
retf
test
mov
cmpps
xor
icebp
shl
jmp
dec
arpl
jmp
xor
lahf
test
cmc
add
fcom
mov
dec
fwait
pop
in
stos
inc
xchg
cmp
cmp
sbb
outs
lds
pop
sahf
or
add
fsub
add
cmp
out
(bad)
mov
loopne
add
es
dec
and
push
loope
ror
mov
xchg
dec
dec
sbb
mov
inc
lods
dec
sub
xlat
and
pop
add
mov
retf
sbb
loope
mov
cvtpi2ps
mov
(bad)
in
dec
ret
pop
sbb
fcomi
stos
ins
pop
jb
retf
(bad)
out
stc
xchg
jnp
call
inc
xchg
adc
test
sub
loopne
push
push
leave
push
mov
adc
inc
pop
push
ret
iret
outs
cmp
lahf
jbe
scas
push
test
add
repnz
or
ror
rep
inc
es
call
icebp
and
cli
aam
sbb
sti
std
add
xchg
sub
jae
and
adc
mov
mov
not
lods
movs
imul
jae
gs
retf
mov
sbb
jbe
or
mov
push
xor
repz
xor
adc
jo
fst
out
xor
test
inc
loop
clc
je
mov
and
fld
sbb
xchg
push
jmp
repnz
fistp
and
loope
sti
loop
pop
stc
and
xlat
je
cli
lods
aaa
mov
imul
andps
mov
ret
jo
add
cmp
(bad)
jne
mov
scas
mov
mov
aas
in
pop
mov
sub
fsqrt
shl
imul
push
fld
inc
ins
adc
mov
jg
addr16
mov
cdq
mov
sub
rcl
jnp
imul
or
lods
push
test
dec
xor
sbb
mov
add
leave
mov
shr
inc
push
rcl
mov
fnstcw
cmps
shl
sub
lea
sahf
cmp
fbstp
fcomp
adc
cmp
adc
loop
cs
mov
sbb
pop
mov
fmul
mov
dec
xchg
in
ins
xchg
and
xor
mov
jp
sbb
mov
(bad)
jne
and
(bad)
stc
push
push
enter
add
addr16
mov
push
inc
rcr
sar
lock
je
mov
aam
mov
xchg
mov
fs
ins
rcl
inc
cmp
data16
jg
or
(bad)
fld
in
in
out
pop
mov
cmp
mov
mov
jmp
xchg
hlt
out
and
jle
xchg
enter
ds
int3
cmp
push
mov
or
cmp
into
add
stos
pop
std
mov
fcomp
pop
push
xchg
shl
in
add
je
cs
dec
mov
mov
out
mov
mov
dec
sbb
xor
jno
jle
mov
add
sbb
xchg
dec
loope
cmps
dec
(bad)
popf
sub
adc
scas
(bad)
mov
pop
or
pop
dec
mov
cdq
mov
in
mov
jbe
and
fwait
stos
mov
(bad)
xor
popa
xor
pop
iret
push
jg
xchg
iret
cs
outs
sub
movs
push
add
(bad)
inc
pop
mov
pushf
lock
mov
push
mov
adc
and
repnz
mov
jbe
mov
pop
iret
pusha
pop
iret
push
in
sub
icebp
sbb
out
test
mov
out
in
(bad)
rcr
xor
add
fs
test
sub
mov
and
outs
add
mov
mov
xchg
ins
fs
inc
mov
push
mov
and
jmp
mov
xchg
std
loop
or
fsubr
push
mov
sbb
jae
test
cmp
int
std
rol
xchg
adc
int
xchg
push
cmps
ret
mov
popf
pusha
fs
add
and
push
xchg
push
xor
jbe
retf
cld
or
xchg
push
enter
cmp
ds
fsubr
pop
add
and
int
jg
and
imul
pusha
sbb
jp
(bad)
in
mov
xor
xchg
pop
and
jg
mov
sbb
rol
adc
aaa
and
sar
outs
cmovns
pop
and
shr
idiv
pop
push
les
mov
ror
mov
jae
int
push
movs
xchg
test
pusha
or
neg
xlat
add
dec
cmps
sub
(bad)
stc
pop
rcr
jl
inc
cdq
sub
int
icebp
lods
inc
lods
std
pop
stos
inc
mov
jo
cmc
xchg
push
cmp
mov
arpl
mov
sub
sub
movs
xchg
inc
dec
mov
in
or
cdq
push
mov
and
cli
jo
test
and
mov
push
enter
fdivr
add
out
inc
xchg
mov
adc
addr16
xor
dec
pushf
mov
out
or
test
pop
jge
mov
arpl
or
mov
mov
ror
fimul
fsub
sbb
sub
rol
cwde
jb
je
push
adc
imul
pop
dec
(bad)
scas
(bad)
pop
aam
adc
push
pop
add
sti
aas
leave
mov
pusha
icebp
cmp
mov
ret
les
sub
stos
retf
test
mov
mov
push
ins
pusha
into
mov
in
gs
push
inc
cdq
js
add
jp
push
jb
retf
pop
ss
inc
push
out
wrmsr
dec
mov
(bad)
and
and
add
inc
mov
rcr
fstp
adc
fcmovnb
sub
(bad)
and
int
mov
or
lds
inc
cmps
sti
std
ja
daa
arpl
cmp
movs
retf
pop
fcmovnu
jg
int
fadd
aam
out
or
push
or
jmp
dec
jbe
push
fild
mov
mov
scas
mov
mov
cmp
or
(bad)
in
jmp
fdivr
je
add
sar
push
adc
icebp
mov
enter
push
sbb
jno
inc
or
movs
sbb
add
(bad)
xor
rcl
retf
les
stos
hlt
scas
out
pop
pop
xor
xchg
(bad)
stc
pop
dec
(bad)
(bad)
loope
imul
dec
shl
outs
mov
and
(bad)
adc
repz
fadd
pop
dec
add
test
mov
cli
icebp
add
fdiv
pop
jno
pop
call
or
pop
jge
pop
mov
mov
repnz
sbb
fbstp
and
jne
(bad)
and
ins
mov
jbe
popa
scas
imul
mov
retf
test
sbb
xor
neg
shl
lea
out
int
add
movs
push
pushf
mov
repz
jp
lahf
lock
sbb
inc
(bad)
outs
xchg
xor
shr
xor
ret
jae
(bad)
ja
push
and
xchg
xchg
xlat
loope
(bad)
sbb
add
inc
push
pusha
rol
cmp
bnd
jnp
dec
and
mov
call
inc
shl
mov
popf
or
dec
push
fcom
mov
das
fwait
iret
push
sub
call
loop
xchg
jnp
stc
add
imul
test
loopne
jge
imul
mov
ins
xor
and
iret
adc
push
(bad)
mov
pushf
mov
and
adc
retf
sub
ins
das
lock
imul
mov
fcom
adc
push
mov
aam
sub
mov
fcomp
cmp
mov
ret
xchg
xchg
bound
lods
and
out
jb
mov
jle
mov
inc
gs
mov
cmp
dec
jnp
dec
leave
mov
mov
xor
jne
stos
inc
sbb
fdivp
ror
push
pop
mov
bound
jbe
lahf
loop
out
jo
iret
pushf
aam
loopne
xchg
repz
stos
sbb
bound
test
sbb
adc
dec
jmp
xchg
cmp
or
xor
or
loop
jno
out
inc
shr
mov
pop
cmp
and
adc
pop
mov
ja
lock
sbb
inc
shl
pop
xor
mov
cs
push
daa
rol
and
xchg
cmp
dec
(bad)
mov
aad
sbb
sub
adc
and
sar
push
fistp
mov
popa
xor
popf
sub
stos
addr16
stos
mov
jbe
ins
jne
adc
mov
stc
cmps
lds
mov
pop
or
cli
xchg
in
jnp
sbb
xchg
fs
xor
int3
mov
(bad)
fcom
imul
test
jl
pop
or
(bad)
sti
lock
(bad)
jb
dec
pop
cmps
retf
pop
fist
popf
sub
inc
xchg
and
(bad)
sar
jmp
pop
(bad)
cld
mov
das
idiv
jmp
sub
test
out
ja
dec
call
lds
pop
and
pop
cmp
adc
movs
xchg
mov
xor
lods
in
sbb
aas
and
and
pop
arpl
jge
xchg
fistp
ror
push
retf
inc
retf
inc
xlat
cmc
scas
or
cmp
cmp
cmp
aaa
mov
enter
dec
mov
add
mov
fbstp
xchg
(bad)
sub
test
or
xor
mov
fcomp
and
jmp
cmps
add
std
pusha
nop
add
mov
ins
fdiv
loopne
call
loop
sahf
cld
fisttp
push
scas
data16
aad
(bad)
nop
ins
push
add
dec
jl
ins
dec
adc
jb
fisub
inc
jge
pusha
pusha
adc
mov
in
sbb
call
js
enter
push
xor
inc
mov
add
cs
sbb
iret
xor
mov
add
into
sbb
(bad)
add
std
add
and
add
cmc
dec
jl
or
dec
or
xor
(bad)
cdq
fsub
push
and
cmp
jmp
pop
or
jg
mov
enter
mov
(bad)
inc
cmp
pop
bnd
sahf
dec
leave
pop
pop
cli
mov
js
mov
mov
push
push
push
fadd
shl
test
pushf
aad
fstp
xchg
dec
sbb
rcl
fcmovne
xchg
xchg
cmp
jl
jmp
outs
inc
mov
cmp
sahf
mov
call
test
fidiv
inc
and
add
jp
sbb
pop
and
fdivr
sub
cdq
shr
sbb
lods
or
mov
push
cmp
jp
push
push
out
push
arpl
or
bound
sti
test
mov
mov
icebp
mov
add
cld
dec
mov
push
cmc
or
sub
cmp
mov
adc
movs
sahf
daa
aaa
jge
aam
rol
cs
jmp
inc
pop
retf
and
shl
(bad)
sbb
in
stos
xchg
(bad)
adc
xchg
sbb
int
jecxz
retf
ror
sbb
add
pop
adc
pop
cmp
pop
xor
ds
adc
dec
rcl
leave
rol
jae
lea
sub
mov
push
xchg
sub
mov
rcr
stos
call
sub
xor
dec
shr
adc
je
add
retf
pop
pushw
mov
push
pop
retf
dec
fild
mov
ins
dec
xor
in
fld
xchg
jnp
pop
xchg
push
jb
push
clc
jg
adc
pop
xor
mov
icebp
fbstp
rcr
test
cmps
test
in
test
out
and
(bad)
leave
jo
movs
sub
es
cmps
inc
mov
xor
jg
pop
cs
idiv
mov
aas
mov
inc
mov
pop
sbb
jb
daa
fild
mov
mov
jns
shr
jns
hlt
pop
pop
test
outs
push
add
and
hlt
repnz
add
inc
or
cld
sub
xchg
loope
jns
es
mov
stos
mov
imul
int
(bad)
jmp
pop
je
das
jmp
and
add
mov
cmp
cld
(bad)
and
repnz
call
enter
pop
pop
mov
in
cmp
imul
fwait
xchg
sub
vmovaps
fild
lahf
imul
pop
push
les
jmp
xchg
stc
jp
xchg
iret
cwde
call
dec
bound
adc
jae
mov
xchg
cmp
and
sbb
xchg
mov
ins
sub
inc
pop
xchg
movs
mov
jl
and
pop
into
or
add
push
mov
push
lahf
xor
dec
adc
(bad)
push
xchg
adc
enter
mov
(bad)
out
loopne
mov
xchg
jmp
mov
xchg
lahf
push
mov
cmp
loopne
mov
mov
inc
push
sub
cmp
inc
sbb
stc
stos
sbb
xchg
in
test
jge
mov
jg
inc
mov
xchg
xor
push
dec
call
aam
cmp
push
sahf
dec
scas
jmp
daa
lahf
call
je
sub
add
jl
jg
call
cdq
sbb
stos
adc
push
(bad)
pop
std
xchg
popf
ss
jns
stos
mov
push
out
fwait
in
(bad)
popf
mov
imul
jmp
add
aad
jne
mov
xchg
adc
adc
or
ja
dec
and
push
mov
(bad)
repz
nop
mov
dec
sahf
je
gs
lds
and
pusha
mov
cmc
jl
pop
jae
or
and
mov
lahf
cmp
aad
sbb
inc
mov
adc
jecxz
fs
shr
sbb
jg
imul
push
fnstsw
mov
jmp
pop
adc
cmp
sbb
stc
(bad)
sub
push
repz
xor
out
and
xor
sbb
pusha
xchg
pop
repz
(bad)
push
sub
fistp
sub
jne
xchg
cld
or
fsubr
call
sahf
daa
lods
jbe
adc
jle
push
mov
dec
push
ficom
ins
jnp
inc
adc
mov
in
push
aaa
sub
push
pop
shr
jg
loop
aas
test
outs
nop
icebp
inc
mov
call
fcmovnbe
cs
push
shl
mov
pop
xor
mov
movs
push
lock
fdiv
movs
pop
jecxz
and
add
std
imul
addr16
sti
xchg
jmp
and
and
mov
mov
loope
cmp
xor
xchg
pop
jmp
adc
(bad)
in
test
call
ss
dec
or
push
in
jbe
xor
sar
enter
aad
out
mov
mov
inc
test
sub
sbb
sub
test
push
inc
push
mov
sub
sub
inc
cmp
ja
mov
jle
dec
inc
dec
in
in
loop
mov
(bad)
clc
into
inc
mov
mov
fidiv
into
rcr
pushf
inc
xor
sbb
jge
sbb
mov
shl
push
(bad)
fs
test
and
jmp
imul
cmc
dec
fcomi
leave
sub
adc
inc
movs
loope
sbb
lods
add
jecxz
scas
mov
and
ja
imul
xchg
and
stc
jmp
dec
mov
or
sahf
test
gs
icebp
nop
repz
xchg
cmp
sub
xchg
adc
xchg
sub
(bad)
fistp
dec
mov
inc
cmp
jmp
push
dec
mov
add
popf
push
or
es
adc
cli
xchg
mov
pop
retf
jb
push
fcom
mov
mov
fadd
sub
popa
pop
out
dec
es
lods
cmp
or
aaa
lahf
out
nop
lahf
pop
add
or
dec
push
mov
cmp
adc
push
cmp
aad
loop
jmp
dec
xchg
jne
mov
pop
cdq
repnz
sbb
les
jns
push
jb
push
(bad)
dec
in
(bad)
fadd
pop
int3
and
dec
push
xlat
xchg
ins
cdq
push
dec
outs
jnp
mov
icebp
or
inc
push
pushf
sahf
leave
(bad)
int
xchg
loopne
inc
pop
cwde
stc
sbb
lea
push
popf
sbb
or
push
mov
sub
jle
push
or
in
jge
or
push
stos
push
xchg
xchg
push
daa
or
jecxz
xchg
(bad)
(bad)
push
xchg
pushf
jae
and
mov
bswap
js
mov
xchg
pop
test
push
xchg
mov
pop
dec
pop
fild
push
and
movs
(bad)
xor
shr
inc
sbb
or
ins
mov
mov
dec
(bad)
jg
dec
lock
pop
cmps
fidivr
mov
sbb
bound
mov
xchg
ret
push
dec
(bad)
jb
jae
add
stos
pop
(bad)
dec
add
push
dec
(bad)
xor
pop
cs
or
out
sbb
fstp
loop
retf
adc
push
adc
push
add
into
outs
data16
mul
sbb
sbb
(bad)
mov
sbb
add
dec
jecxz
jnp
jecxz
jmp
mov
fadd
les
out
addr16
push
sar
retf
outs
push
sbb
test
mov
jge
fcmovu
mov
gs
fcomp
and
or
je
call
add
mov
inc
and
lds
repz
pop
inc
pop
call
inc
rcl
jp
dec
sub
push
sub
mov
int3
retfw
xor
mov
cwde
pop
pop
xchg
pop
(bad)
or
push
cmp
add
aad
add
jo
push
inc
es
pop
ret
jnp
arpl
fwait
sub
sbb
push
sub
pop
mov
test
sbb
adc
adc
jmp
mov
ins
push
in
inc
pop
xchg
mov
test
cmp
data16
mov
pop
mov
and
mov
fcomp
jge
call
pop
in
mov
mov
sbb
xchg
(bad)
xchg
mov
mov
adc
aaa
stos
popa
sub
mov
je
dec
jno
sbb
ins
test
mov
jmp
pop
inc
fdiv
sbb
push
in
in
popf
mov
sbb
scas
xor
fdivr
inc
and
fdiv
sub
adc
aam
loop
jbe
or
dec
sub
aam
mov
jb
mov
in
cmp
lds
daa
ffreep
jne
lock
icebp
in
out
arpl
lock
sub
mov
jmp
out
push
popa
sub
bound
out
add
mov
addr16
adc
sbb
loop
jns
imul
stos
sbb
inc
inc
outs
dec
stos
in
ror
add
jl
or
sbb
mov
mov
je
adc
xchg
adc
jb
add
jecxz
push
inc
dec
ret
mov
aam
push
clc
jbe
xchg
movs
sub
cmp
mov
adc
and
aas
jae
ret
and
and
fiadd
adc
jmp
jo
pop
pop
rol
mov
loop
call
adc
jmp
sahf
cs
scas
outs
adc
sti
fimul
inc
sub
mov
ins
std
add
sbb
sti
dec
sub
mov
mov
inc
adc
stos
xchg
mov
sti
cmp
daa
or
sub
cmp
dec
adc
dec
lock
mov
mov
or
(bad)
cmps
mov
lds
pop
mov
push
dec
add
out
fistp
fldcw
pop
jmp
cdq
mov
rol
fs
sbb
jns
aaa
cmp
in
jmp
inc
adc
lahf
iret
loopne
sbb
bound
pushf
sbb
mov
rcl
adc
inc
add
aaa
ins
imul
cmps
xchg
jmp
cmp
cdq
mov
rcl
mov
pushf
ja
mov
mov
xchg
inc
(bad)
dec
cmp
pushf
cmp
in
inc
add
mov
xor
ja
sub
ror
into
ins
push
xchg
pushf
add
loope
push
jno
pop
xchg
(bad)
lock
push
adc
out
xchg
push
push
(bad)
js
xchg
jns
add
call
aad
or
jo
dec
pop
or
inc
sahf
push
repnz
pop
retf
mov
push
mov
clc
mov
nop
test
icebp
shl
stos
sahf
mov
xchg
jp
add
inc
or
leave
popf
pushf
pop
shl
loop
mov
addr16
inc
mov
cld
fs
mov
sahf
(bad)
sub
cli
jp
xlat
bound
movs
pop
inc
sbb
pop
mov
or
ss
cdq
sub
jg
nop
and
pushf
loope
dec
mov
mov
test
movs
xchg
cmps
(bad)
out
aaa
stc
movs
data16
retf
inc
pop
movs
xchg
repnz
int3
lock
cmp
aaa
mul
icebp
rol
and
adc
xchg
sbb
bound
int
xchg
xchg
and
sub
xchg
xchg
mov
sahf
dec
add
sbb
sbb
ins
rcr
mov
stos
push
sbb
dec
dec
popa
repz
leave
push
sti
aaa
xchg
scas
sub
scas
ss
xchg
aaa
ret
xor
sbb
pop
xchg
mov
push
lahf
sub
add
in
shl
and
xchg
xor
in
mul
test
dec
sbb
fs
movs
jmp
jg
mov
dec
les
mov
inc
sub
dec
fwait
enter
call
retf
dec
stc
cmp
pop
je
sbb
or
xor
pop
nop
outs
in
adc
retf
je
jmp
pushf
mov
cli
push
ins
sub
jl
call
fwait
sub
mov
jle
into
call
jb
push
inc
inc
ins
cmp
retf
pushf
ja
fiadd
jle
shl
fiadd
sbb
sbb
jmp
mov
cs
nop
cmp
inc
mov
stos
loope
inc
sti
cli
repnz
mov
repz
sub
sti
in
popa
out
sti
dec
repnz
add
mov
sub
dec
test
push
rcr
dec
movs
cmc
cdq
sar
aad
mov
sbb
clc
out
jae
pusha
mov
out
lahf
test
into
pop
fnsetpm(287
gs
sub
xor
rol
cli
and
das
jp
add
jb
push
add
mov
daa
cmc
(bad)
jae
sub
push
push
push
bound
cmps
jp
xor
test
gs
dec
inc
xor
push
pop
mov
cmp
jp
out
add
ret
xor
sub
out
(bad)
jns
(bad)
int3
xchg
pop
mov
mov
outs
ja
adc
retf
mov
xor
lods
movs
mov
loopne
or
add
sub
push
mov
pop
fist
push
inc
and
jl
xchg
nop
mov
xchg
lods
das
cdq
xchg
sub
or
xchg
push
mov
push
cmp
jle
mov
jb
and
jno
pop
adc
shr
sbb
xchg
xor
gs
sbb
rcl
sbb
dec
ss
add
fstp
and
and
sbb
xchg
inc
add
cmp
sbb
icebp
jmp
repz
pop
idiv
mov
ins
mov
(bad)
out
xor
into
cwde
call
pushf
adc
pop
mov
jns
mov
aaa
(bad)
into
pop
test
xchg
mov
in
test
pop
(bad)
jno
dec
inc
ds
xlat
mov
xchg
bound
and
cwde
popa
movs
pop
loope
jno
fiadd
sbb
cmp
mov
rcl
cs
sub
jecxz
dec
cmp
inc
push
call
adc
or
or
xchg
push
inc
mov
fcomip
xlat
imul
mov
xor
das
cmp
mov
int3
(bad)
and
retf
test
(bad)
pop
rcr
adc
out
mov
js
dec
mov
js
(bad)
jne
or
jp
les
xor
cmp
lods
jl
scas
inc
mov
movs
neg
jne
cmp
shr
pop
xchg
jmp
inc
xchg
pop
xor
lods
loope
js
pop
push
sub
push
adc
add
in
call
pusha
jnp
dec
inc
inc
cmp
dec
and
xchg
inc
fmul
clc
or
js
cmp
fst
mov
pusha
mov
push
add
cmps
leave
mov
sbb
bound
fidivr
pop
jns
xchg
out
mov
sub
test
inc
pusha
out
fst
add
sub
adc
jmp
push
lods
out
das
add
sar
in
ins
ja
repnz
mov
or
or
xchg
mov
int
xchg
mov
ss
rep
add
sar
and
sub
aam
inc
test
not
pop
pushf
shl
sub
ficomp
sub
xor
out
sbb
test
stc
scas
mov
dec
inc
popa
add
pop
xchg
and
jp
cs
inc
pop
pop
adc
inc
scas
push
jecxz
rep
aam
jmp
aaa
xor
or
xchg
mov
or
mov
not
enter
ror
lods
and
dec
mov
and
mov
ror
inc
retf
sar
cmp
retf
xor
push
cmp
dec
(bad)
mov
pop
cmp
push
pop
jmp
pop
aaa
lahf
jae
cs
and
push
cmc
fisub
add
jno
push
outs
fimul
pusha
jg
mov
jbe
or
xor
sti
push
or
xor
js
test
call
(bad)
lahf
nop
xchg
jne
push
push
pop
inc
add
test
xchg
scas
mov
adc
rol
fld
outs
pop
and
dec
xchg
push
out
lds
jp
and
sub
and
rol
stos
test
or
jecxz
jbe
cmp
scas
and
jne
sbb
jmp
mov
pop
cs
dec
push
jmp
inc
shl
test
pop
cmps
test
mov
or
or
lds
cld
push
jmp
mov
sbb
rcr
test
xchg
cs
sbb
add
xchg
test
dec
cmps
shl
clc
(bad)
or
push
cmps
aam
test
fcom
jae
(bad)
push
rcr
mov
icebp
aam
rcl
xor
xor
adc
dec
push
mov
sub
push
cli
loope
mov
pop
dec
pop
jg
lds
movs
xchg
cmc
mov
push
cmp
sbb
fcom
mov
ja
ror
fistp
and
mov
mov
cld
into
push
in
mov
dec
jo
daa
mov
xchg
imul
mov
int
jns
stos
xchg
je
jl
test
mov
mov
in
inc
jbe
fs
cmps
icebp
repz
push
sbb
shl
push
pop
mov
in
stos
loop
mov
mov
(bad)
xor
cli
cmp
mov
cmp
jecxz
in
sbb
lds
sub
and
pop
mov
push
fidivr
shl
push
cmp
push
jmp
pop
adc
lods
dec
xchg
dec
push
pop
fmul
adc
mov
xchg
cli
add
aad
stos
dec
xchg
sub
adc
idiv
(bad)
cli
sbb
imul
cmps
outs
outs
mov
xor
jne
shl
mov
mov
dec
rcr
dec
retf
pop
inc
lods
in
xchg
sub
push
clc
fdiv
popa
sbb
dec
cdq
repz
xor
mov
cmp
leave
outs
dec
and
jecxz
inc
cmc
and
pop
loop
mov
xor
lahf
and
sub
cmps
jns
mov
mov
cmp
or
mov
mov
mov
sub
xchg
xor
imul
push
data16
ins
sub
dec
adc
ja
sbb
xlat
ret
movs
or
retf
push
test
adc
dec
add
(bad)
push
or
stos
mov
out
out
stc
sbb
mov
imul
add
inc
sbb
pop
cmp
dec
mov
inc
jnp
push
pop
inc
bound
mov
fist
aaa
add
xchg
rol
or
mov
out
or
or
and
add
inc
pusha
jbe
or
leave
xchg
test
hlt
cdq
int3
(bad)
mov
or
ficom
ins
add
inc
add
lods
out
jg
test
mov
mov
xchg
dec
cmp
fadd
cli
pop
or
jmp
or
in
cmp
mov
mov
jecxz
ret
xlat
pop
das
in
dec
or
outs
pop
jnp
jge
movs
dec
fld
test
dec
pop
jbe
jno
xor
cmp
jl
sbb
add
js
mov
mov
push
pop
dec
inc
jle
imul
movs
in
js
pop
fst
test
sbb
fidiv
inc
jmp
dec
inc
int3
mov
sti
es
lods
push
jnp
out
cmps
push
fnsave
xchg
pop
push
lds
sub
jne
stos
or
adc
ja
sub
js
or
push
sub
bound
xor
add
or
mov
dec
popf
test
iret
push
cs
push
pushf
scas
add
push
imul
jns
xchg
sbb
dec
lahf
lods
outs
(bad)
cmc
loop
icebp
sub
fadd
aaa
mov
sbb
mov
adc
daa
lock
sub
mov
pop
mov
mov
dec
pushf
ds
in
sbb
push
sub
out
sbb
pop
(bad)
cmp
nop
cmps
lods
xchg
aaa
lahf
das
(bad)
jnp
mov
ds
mov
jmp
cmp
retf
js
push
push
lock
cmps
mov
add
mov
sbb
mov
mov
repz
push
inc
(bad)
sub
xchg
(bad)
xlat
inc
aas
mov
inc
cmp
add
adc
call
mov
call
cmp
sub
sar
das
loop
push
add
es
xchg
sbb
stc
add
aad
rcr
test
stos
or
mov
retf
adc
push
dec
mov
cld
arpl
cmp
xor
or
inc
ins
ret
icebp
retf
cmps
fild
add
jb
mov
mov
xchg
mov
mov
ret
xor
mov
cmp
mov
fild
iret
daa
call
cmp
mov
mov
test
pop
les
popa
add
test
fiadd
pop
push
test
dec
xchg
imul
mov
inc
std
daa
jge
pushf
(bad)
or
hlt
or
loopne
sti
and
out
mov
or
dec
icebp
adc
ss
fs
sbb
outs
xor
adc
ins
mov
imul
sbb
scas
ins
mov
pop
xchg
(bad)
aam
mov
retfw
lahf
mov
and
pop
out
and
xchg
xor
retf
or
scas
pop
dec
xchg
sub
sub
rep
jp
cmp
sar
nop
lock
mov
jae
adc
pop
stos
stos
pop
repz
jg
retf
sub
sbb
sbb
arpl
inc
mov
repnz
leave
sub
fbld
push
or
icebp
addr16
cmp
lahf
ss
push
jg
fs
jecxz
add
mov
imul
leave
data16
sub
push
mov
ss
cmp
pop
sbb
jo
pushf
int3
jae
mov
cwde
xor
jge
popa
mov
xor
mov
popa
js
aad
addr16
xchg
pop
int3
xor
pop
push
adc
cmp
mov
mov
dec
data16
shl
ret
pop
mov
sbb
inc
xchg
add
mov
stos
push
sbb
ins
sbb
xchg
jle
push
xchg
mov
cmp
jmp
cmp
mov
enter
retf
movs
add
push
(bad)
pop
mov
mov
cmp
add
pop
scas
xor
fnstcw
ficomp
das
xor
or
or
daa
addr16
or
push
pop
out
sub
pop
test
retf
in
js
jno
pop
or
adc
xchg
or
adc
dec
hlt
push
dec
sub
pop
sub
jb
outs
pop
ins
ret
push
or
xchg
inc
lea
mov
inc
mov
jg
pop
pop
xlat
out
into
ret
adc
ficomp
jmp
cmp
cmp
je
ret
push
das
mov
sbb
push
test
mov
stos
cmps
xchg
jns
mov
or
int
cmp
or
cwde
or
or
add
call
aad
nop
cld
iret
fiadd
jmp
push
cmp
addr16
cmps
jle
pop
mov
fs
fist
sub
mov
mov
aam
in
pop
dec
push
dec
cld
ins
sub
add
cdq
xchg
cld
mov
out
add
stos
jge
stc
sahf
shl
jns
cmps
fbld
sub
inc
xor
dec
aad
jns
mov
or
jnp
inc
pop
mov
ret
push
movs
das
dec
repnz
call
iret
push
xchg
add
cmc
sub
pop
push
fsubr
push
in
lds
or
(bad)
cwde
out
xlat
or
neg
xchg
jae
mov
cs
cmp
mov
pop
(bad)
xor
inc
jo
jno
test
inc
dec
xchg
lock
push
sbb
ss
inc
jo
movs
popa
(bad)
mul
push
add
lahf
xlat
pop
outs
inc
push
icebp
inc
inc
dec
out
inc
mov
std
lea
mov
loopne
loopne
push
cmps
leave
jl
push
nop
test
arpl
dec
and
or
push
jne
bound
retf
fild
sub
jo
and
push
xor
push
xchg
or
aad
adc
lods
jno
call
cmp
sbb
cmps
stos
sub
cmp
lahf
and
call
inc
add
jp
pop
adc
jbe
lea
dec
loope
mov
adc
push
jmp
add
outs
inc
mov
cmps
mov
pop
or
and
inc
stos
push
rol
or
ffree
in
fst
mov
sbb
xchg
jnp
scas
call
and
mov
adc
es
dec
out
retf
call
repnz
pusha
inc
out
enter
into
aas
pop
je
jmp
mov
nop
stos
push
out
inc
not
rcl
call
out
jbe
popa
xor
inc
iret
push
sahf
or
cmps
test
pop
hlt
out
call
xchg
call
adc
add
mov
fsubr
in
ins
sub
jae
mov
icebp
cmc
iret
cld
mov
lea
es
fild
mov
push
jmp
outs
aam
and
xor
dec
std
cmp
add
pop
pop
enter
hlt
mov
imul
xchg
scas
xchg
enter
hlt
add
aam
call
jns
inc
mov
jne
arpl
hlt
push
pop
sar
repnz
(bad)
xchg
mov
fdiv
mov
repz
ins
in
fsub
cs
dec
mov
ror
xlat
dec
imul
lea
sbb
dec
cmp
out
or
es
in
jne
push
sub
dec
dec
dec
cmp
int
xchg
ds
int
stc
inc
pusha
retf
sti
xchg
pop
or
pop
mov
sbb
jb
popa
inc
sub
push
sbb
clc
adc
xchg
loop
mov
jmp
push
inc
xchg
or
xor
lds
loopne
jae
sbb
or
popa
loope
fs
push
adc
mov
push
inc
adc
dec
sub
sub
jne
mov
inc
retf
arpl
jg
sub
scas
test
call
ret
xchg
push
dec
inc
cmps
arpl
outs
adc
repnz
jbe
sahf
fld
addr16
and
mov
lahf
push
ret
out
das
(bad)
sub
pop
push
bound
add
loope
xchg
daa
dec
mov
out
jmp
loopne
xor
mov
jbe
movs
bswap
hlt
retf
fisttp
cld
mov
cld
adc
adc
dec
and
xor
cmps
xchg
mov
jl
fdiv
pop
lock
aam
add
outs
mov
adc
icebp
(bad)
jmp
iret
mov
ucomiss
xor
in
mov
popa
pop
mov
scas
mov
movs
xor
std
mov
xchg
push
jae
mov
js
mov
add
jns
adc
cmp
rcl
pop
xor
jnp
mov
ret
dec
push
test
xchg
jno
pop
(bad)
pop
sbb
add
rcr
or
cmps
add
adc
sbb
sbb
aam
nop
inc
or
jg
out
test
mov
jecxz
mov
pushf
or
sqrtps
fsubrp
imul
mov
pop
adc
push
or
cld
addr16
mov
out
shl
or
dec
hlt
popa
sbb
sub
ja
fwait
mov
rcl
fcomp
les
in
push
leave
int3
test
push
gs
or
adc
pop
inc
pop
mov
inc
movs
imul
mov
mov
jnp
(bad)
xchg
stos
or
call
jg
jecxz
icebp
loop
or
js
xchg
jmp
sub
jb
mov
call
ins
jne
les
out
jae
xor
pusha
jecxz
scas
leave
outs
and
add
pop
call
mov
pop
mov
mov
fistp
test
push
in
push
pop
ss
or
adc
mov
jle
sbb
adc
pop
into
push
mov
test
xchg
mov
out
imul
ds
fsubr
sbb
add
bnd
mov
aam
jnp
and
mov
iret
movs
fsub
in
adc
push
ds
xchg
sbb
add
std
and
xor
imul
dec
fmul
mov
in
nop
mov
adc
sbb
cmp
push
bound
in
sub
out
lods
sti
jo
push
cld
mov
xchg
data16
mov
scas
shl
or
cmp
and
jl
or
bound
xor
enter
test
cmp
daa
movs
jg
sbb
call
sar
div
cli
iret
pop
sub
add
inc
ins
cmp
or
in
shl
mov
mov
ror
call
test
lock
jg
add
push
mov
(bad)
repnz
dec
(bad)
mov
test
sbb
sub
lods
xchg
js
add
in
leave
(bad)
lahf
mov
jmp
inc
test
sbb
outs
push
jge
out
fsubr
lahf
and
rcl
mov
xchg
add
sbb
in
pusha
cmps
ss
xchg
fdivr
data16
call
fild
push
stc
jbe
jne
push
popf
dec
adc
sbb
or
mov
lock
xchg
push
test
mov
adc
mov
popa
sbb
sbb
bound
shl
js
xor
ficom
movs
outs
daa
mov
loop
adc
pushf
adc
iret
es
push
dec
fstp
sbb
(bad)
repnz
and
test
(bad)
popf
mov
inc
push
or
adc
jecxz
ffree
xor
movaps
div
adc
mov
in
mov
cmp
pop
mov
js
out
jne
sbb
jg
and
add
test
sbb
xor
jl
inc
xor
adc
cmps
dec
jnp
pushf
and
dec
retf
out
pop
sbb
cs
mov
xlat
or
dec
call
(bad)
jecxz
mov
or
out
xchg
fldenv
movs
push
mov
imul
xor
dec
and
dec
aaa
in
push
stc
add
add
cmps
sahf
test
push
inc
adc
lea
jb
push
sub
loope
mov
loope
imul
retf
mov
mov
add
cmp
cld
push
xchg
push
je
push
retf
movs
rcl
adc
jne
cmp
mov
mov
int
(bad)
jg
jbe
mov
add
fldenv
and
out
popa
pop
jle
and
test
pop
adc
and
sbb
cmp
lock
outs
or
mov
rol
and
in
sbb
mov
aad
dec
fscale
xor
mov
add
push
lock
dec
loope
sub
xchg
xchg
jge
adc
aad
lds
push
in
mov
retf
cmps
sbb
(bad)
push
js
cmp
xor
pop
pop
movs
ds
outs
xor
add
pop
imul
mov
aaa
adc
daa
jne
inc
vpand
inc
imul
inc
scas
lods
push
call
mov
and
mov
xchg
pop
stos
mov
pop
repz
xchg
(bad)
jne
xor
sub
cmp
(bad)
out
or
cmp
sbb
stc
push
jg
pushf
mov
(bad)
ds
popf
jl
in
xor
lds
(bad)
fisub
out
int
inc
ds
popf
shl
and
push
lods
mov
cmc
stc
inc
enter
aas
daa
cmp
pop
mov
xchg
cvttps2pi
imul
cdq
in
and
aam
pop
bound
cmps
mov
xchg
(bad)
jmp
jb
cmp
jo
in
cmp
gs
cs
inc
mov
div
lds
shl
and
out
mov
loope
mov
sub
xchg
ds
mov
mov
call
cmp
pop
pop
out
int
mov
push
jp
int
mul
inc
push
mov
and
cmp
aam
fistp
(bad)
enter
sbb
mov
out
sbb
nop
fdivp
repz
ja
inc
push
aad
sub
outs
cmp
(bad)
ja
and
sbb
clc
xchg
sub
les
out
in
cmps
scas
sbb
leave
dec
jle
inc
sti
cmps
mov
jecxz
jecxz
imul
inc
cwde
sbb
icebp
out
or
movs
cmp
fcomp
or
sub
out
addr16
fsubr
sbb
sub
jl
mov
test
dec
(bad)
mov
xchg
sub
iret
dec
shl
lea
lds
or
aas
leave
mov
and
retf
push
pop
iret
dec
pop
lods
sub
jae
dec
pop
dec
xchg
fs
mov
fisubr
rol
push
(bad)
in
hlt
iret
fst
cmps
call
aad
or
inc
stc
pop
or
mov
fisubr
out
push
push
nop
inc
pop
sbb
fdiv
dec
inc
mov
and
clc
inc
xor
cmp
adc
(bad)
jle
sbb
push
cdq
sub
xor
jne
lea
je
lods
rcr
dec
pop
sub
dec
xchg
push
mov
leave
lahf
lds
and
in
inc
jecxz
or
loop
aam
inc
ret
pop
scas
and
jno
pop
mov
xor
pop
ret
dec
shl
mov
call
mov
out
xchg
cli
nop
dec
jb
add
push
push
adc
jne
dec
inc
movs
out
lea
mov
xor
aam
cmp
or
push
pop
lock
scas
daa
(bad)
adc
iret
xchg
lock
fwait
jl
xor
mov
jbe
lods
inc
cli
mov
pop
stos
jb
pusha
lahf
rcr
leave
cmp
fs
pop
fistp
jmp
dec
add
ror
lea
jl
mov
ins
data16
and
call
cmps
mov
xor
lock
hlt
cmps
and
movs
jg
push
dec
push
cmp
mov
mov
jp
ins
and
push
push
enter
out
in
pop
sub
mov
fs
pop
fnsave
xor
fsub
push
mov
call
xchg
out
jmp
mov
aas
jmp
pop
sub
jnp
cld
mov
stos
(bad)
aas
cmp
cld
add
dec
dec
inc
sub
dec
mov
push
aad
stos
xchg
cdq
mov
jecxz
sbb
or
out
fisubr
fwait
xor
or
ror
push
and
xchg
in
sub
xor
shl
loopne
test
push
and
push
mov
xchg
adc
aad
mov
push
data16
das
daa
jle
lahf
dec
outs
fisub
je
xchg
pop
dec
shl
bound
movs
stos
mov
mov
(bad)
ficomp
jb
adc
push
inc
pop
(bad)
movs
or
ins
mov
and
scas
test
test
inc
push
mov
es
loope
jbe
pop
jmp
dec
out
cld
cld
jge
jno
out
mov
push
xor
shl
adc
sub
test
test
xor
dec
shl
mov
xor
mov
inc
fsub
jmp
pop
pop
fiadd
aaa
stc
mov
push
mov
fsubr
push
pop
pop
dec
xor
and
call
sti
sub
stc
daa
cdq
out
out
or
mov
xor
mov
mov
xchg
mov
repz
xchg
in
sub
mov
mov
sub
dec
arpl
mov
xchg
(bad)
cmc
fsub
and
inc
out
nop
adc
add
push
repnz
repz
and
pop
inc
inc
cmps
xor
aam
push
sub
js
sbb
aas
shr
push
pop
xchg
js
shl
(bad)
sub
mov
push
cmp
sahf
stos
inc
bound
addr16
shl
movs
out
clc
inc
sbb
jnp
push
shr
mov
push
test
shl
add
popa
xchg
pop
jecxz
scas
jo
fsubr
movs
mov
push
adc
mov
dec
cwde
aas
pop
inc
cmp
ins
cmp
mov
jp
imul
cli
cmps
pushf
jp
fistp
call
hlt
jb
and
inc
cli
mov
scas
adc
xor
imul
fcom
or
lds
inc
pop
pop
loope
adc
mov
push
movs
adc
call
(bad)
in
stos
sub
scas
cmc
(bad)
dec
mov
jecxz
jb
cmc
jl
je
cs
push
xchg
or
adc
ja
mov
mov
pop
and
fwait
imul
lds
neg
push
jbe
ins
xchg
lods
retf
loope
icebp
lahf
mov
sub
dec
out
shl
mov
scas
and
jae
jle
shl
jns
or
pop
sbb
out
int3
movs
std
xchg
jno
pop
adc
loop
adc
out
sbb
repnz
jo
jmp
rcl
pop
aas
and
mov
and
pop
sbb
rol
pop
jb
cmp
xchg
xchg
xor
add
sub
and
and
cmp
mov
repnz
mov
dec
xchg
or
and
sbb
iret
jmp
and
mov
mov
adc
pop
pop
dec
jl
or
int
pop
dec
dec
loop
inc
sbb
xchg
mov
out
fidivr
aad
arpl
jo
sub
jmp
fistp
adc
or
call
pop
fsub
inc
push
imul
sbb
shl
or
ins
push
or
jne
xchg
xchg
and
xor
push
pushf
dec
mov
sbb
jno
sub
adc
cmp
cdq
push
cmc
out
sub
mov
ins
mov
lea
xchg
popa
stos
mov
lea
adc
push
stos
stos
mov
jle
mov
xchg
or
rcr
leave
xchg
outs
xchg
pop
scas
scas
xchg
test
out
hlt
aam
cdq
jns
mov
or
mov
aaa
popf
shr
and
push
add
jle
jecxz
out
jmp
mov
daa
xchg
es
loopne
push
cmp
cmp
jo
daa
stos
(bad)
leave
aam
mov
lds
dec
ret
xchg
je
xchg
shr
fst
scas
addr16
push
mov
pop
cmp
sub
mov
shl
shl
ins
cmp
xchg
sbb
ss
(bad)
or
(bad)
jno
jmp
sub
dec
test
movs
push
fwait
jnp
movs
stc
(bad)
sbb
sbb
add
(bad)
push
xor
repz
adc
sbb
jno
mov
mov
aas
fstp
push
add
push
int
test
stc
lock
(bad)
clc
fld
test
dec
lock
mov
and
sub
outs
sbb
xor
mov
push
jle
lock
cmp
ja
seto
inc
ret
mov
jmp
jns
ja
outs
iret
push
jbe
xlat
dec
and
inc
xchg
mov
or
adc
mov
dec
push
xchg
and
outs
cmc
jae
mov
jo
mov
adc
adc
(bad)
jno
or
dec
dec
int3
outs
(bad)
mov
ret
int3
dec
jmp
add
mov
sbb
(bad)
das
loope
xor
cmp
mov
xchg
and
pop
in
ins
fisub
cli
xchg
add
jmp
adc
jecxz
stc
imul
inc
mov
call
dec
pop
sub
push
pop
int
jle
test
fldcw
popf
push
lods
push
fbstp
lds
bound
cmp
das
int
scas
jecxz
push
jg
adc
test
fistp
cmp
pop
(bad)
cmp
cld
mov
loope
xchg
mov
cmp
or
sub
gs
in
out
cmc
fistp
cmps
movs
nop
in
or
mov
push
adc
mov
push
retf
pop
or
loopne
imul
pop
dec
mov
cmp
mov
addr16
ret
cmps
sahf
call
dec
pusha
fld
test
nop
repz
(bad)
loopne
push
mov
add
add
mov
jecxz
ror
sbb
lds
retf
or
scas
sti
sbb
and
frstor
mov
mov
mov
test
push
fldl2t
mov
sub
mov
ret
imul
lds
movs
push
inc
aaa
(bad)
pusha
cmp
or
inc
repnz
ins
add
sbb
inc
inc
mov
ins
lods
fild
xchg
stos
test
ins
xor
dec
pushf
mov
jg
push
push
in
rcr
rol
test
sub
mov
fsub
loop
mov
sahf
sub
inc
mov
imul
adc
sahf
enter
push
sub
loop
(bad)
out
pushf
xchg
inc
lahf
scas
jl
repz
cmc
adc
and
push
ss
mov
push
(bad)
int
jae
mov
push
add
dec
(bad)
mov
xchg
cs
ins
aam
xchg
jno
mov
adc
out
jne
test
aam
dec
add
jb
xchg
stos
jo
mov
jns
xchg
add
mov
ins
pop
mov
jmp
imul
or
cmp
add
cmc
xchg
rcl
xor
jne
jecxz
sar
xchg
icebp
jns
jo
xor
lods
jb
cmc
push
clc
sti
iret
dec
cmp
push
icebp
out
es
fadd
test
inc
jo
pusha
xchg
jmp
dec
stos
ret
dec
and
adc
or
mov
jle
shl
jge
mov
or
adc
xchg
out
jg
(bad)
call
add
mov
xor
jg
mov
mov
nop
pop
sub
or
icebp
daa
jb
das
cmp
inc
mov
rcl
stos
out
lahf
adc
xchg
dec
lods
retf
shl
fidivr
pusha
dec
scas
cmc
fldcw
lea
mov
pop
fwait
sub
push
mov
inc
lahf
pusha
lock
xchg
adc
call
repz
adc
imul
jb
int3
ss
and
add
cmp
jb
sbb
movs
push
xchg
add
jmp
jecxz
retf
popa
lock
call
popf
mov
mov
jle
and
pushf
loope
xor
mov
int3
adc
cmp
sahf
test
mov
mov
xchg
lock
jg
hlt
aad
or
or
dec
leave
and
or
test
fist
(bad)
leave
bound
sub
cdq
adc
out
push
dec
std
lahf
mov
xchg
icebp
mov
add
sar
inc
sbb
leave
fsubr
ror
xor
call
loopne
out
outs
cs
xchg
pushf
lea
loop
xor
push
push
call
mov
and
jns
pusha
sub
inc
callw
test
fbstp
cmp
(bad)
pop
rcr
jnp
sub
movs
push
and
inc
sbb
cmp
pushf
loopne
dec
(bad)
jns
loop
lock
mov
dec
push
mov
inc
and
push
xchg
jmp
mov
jmp
aas
cmps
repz
out
cld
dec
mov
loopne
cs
xor
and
pop
xor
hlt
mov
clc
fisubr
pusha
jl
dec
pop
sbb
add
lock
jmp
out
jmp
mov
iret
sbb
push
ins
mov
pop
fs
pop
and
and
dec
xchg
movs
outs
addr16
(bad)
and
dec
lock
xchg
call
push
icebp
scas
jl
leave
and
mov
adc
or
out
lock
and
aas
push
ret
jae
add
shl
pop
pop
cs
push
mov
add
outs
adc
mov
cmp
ret
(bad)
push
mov
call
les
sub
fsubp
std
ja
sub
shr
adc
out
xchg
ins
jns
adc
arpl
sbb
pusha
je
xchg
add
inc
cs
xor
out
and
rol
popf
mov
mov
cs
xchg
cs
cmp
mov
stc
inc
push
mov
dec
repnz
shl
pop
jmp
push
push
sub
mov
gs
retf
dec
(bad)
in
push
call
mov
xlat
and
and
aam
fmul
mov
xor
or
fwait
in
sbb
jle
addr16
lea
in
jmp
rcl
leave
loopne
push
sbb
cwde
mov
scas
sub
pushf
fs
mov
fsubr
jbe
jbe
adc
xor
push
mov
and
clc
cli
fdivp
mov
inc
sbb
call
mov
leave
icebp
outs
cmp
icebp
shr
sahf
mov
jl
or
movs
xchg
outs
dec
cmp
mov
sbb
mov
mov
icebp
adc
hlt
mov
push
jno
xor
mov
ja
pusha
xchg
or
shr
aad
xor
jg
xchg
fs
in
fnsave
mov
mov
pop
adc
or
loopne
ss
mov
cs
outs
jmp
sbb
sub
shr
add
mov
pop
inc
fsubr
loopne
mov
mov
stos
mov
dec
push
aas
cmp
push
leave
(bad)
push
push
dec
loop
dec
addr16
adc
pinsrw
rol
inc
mov
mov
and
xchg
pushf
xchg
jmp
ds
dec
ss
jle
push
outs
scas
jp
adc
(bad)
dec
push
inc
cmpps
lods
and
jns
mov
scas
or
cmps
shl
ds
cli
test
mov
or
pop
xchg
out
add
dec
jmp
lahf
dec
mov
and
pop
jmp
xor
jb
push
movs
es
dec
imul
jmp
push
and
(bad)
(bad)
jmp
gs
retf
jb
test
and
xchg
in
mov
outs
hlt
or
gs
sbb
mov
retf
repnz
pop
mov
xchg
call
dec
out
(bad)
icebp
add
retf
xchg
pand
outs
sub
call
or
add
cmps
int
popa
sbb
ja
jno
imul
into
getsec
xor
stos
sbb
call
xchg
mov
mov
mov
fnstcw
(bad)
mov
or
ret
pop
xchg
jo
mov
pop
pop
inc
mov
(bad)
pop
ror
cwde
jmp
lods
loop
lods
scas
add
icebp
dec
out
bound
mov
add
xchg
inc
jmp
adc
dec
in
je
pop
rcl
fistp
imul
pop
dec
scas
cs
rcr
stos
call
push
bnd
and
dec
bound
sub
rcl
mov
movs
arpl
pusha
mov
outs
cmps
popf
nop
ror
cmp
add
jecxz
mov
cmp
retf
jbe
inc
rcr
xor
jne
and
(bad)
pop
arpl
mov
ret
pop
dec
sub
stos
lods
in
mov
fistp
mov
rcl
push
pop
jle
pop
mov
inc
icebp
mov
cmps
xchg
mov
out
mov
adc
sub
out
dec
sbb
nop
fs
mov
lods
jae
adc
loope
push
aas
mov
(bad)
ins
(bad)
fistp
inc
mov
pusha
or
lods
in
gs
and
adc
das
mov
movs
or
fisubr
sub
xlat
repz
xor
mov
and
jbe
xchg
lahf
fistp
daa
add
xchg
xor
push
mov
inc
movs
xor
and
or
xor
retf
xchg
lar
mov
jo
out
mov
jp
cmps
imul
mov
mov
xchg
xor
push
and
out
call
push
or
test
ret
mov
fst
ror
xor
push
jle
in
loope
push
xchg
test
call
retf
dec
dec
repz
xor
inc
mov
sub
jg
jmp
jg
and
push
fs
cmp
ja
mov
pop
xchg
in
pop
movs
inc
mov
push
sub
sub
in
and
mov
adc
mov
aad
cwde
mov
lods
push
aam
daa
pushf
mov
je
jp
xor
push
(bad)
adc
xchg
out
sub
cmp
push
jg
or
int
mov
inc
mov
fisub
sar
or
test
dec
iret
adc
pop
xchg
mov
(bad)
int
jg
pop
jmp
xchg
retf
pop
pop
das
pop
pop
jae
(bad)
fisttp
daa
leave
ins
lahf
pop
and
or
fadd
dec
repnz
push
and
call
jb
ins
cmp
lahf
data16
dec
scas
cmc
ins
dec
pop
shr
add
sar
lahf
stos
mov
imul
shl
mov
rcl
ftst
push
xchg
mov
dec
cmp
push
loop
in
rcr
push
punpckhwd
into
fwait
shl
jg
stc
add
in
sar
mov
clc
es
imul
add
dec
jg
mov
add
pop
pushf
mov
out
mov
and
div
push
lock
iret
sub
stos
adc
push
xor
cwde
(bad)
and
dec
sbb
or
pop
push
cdq
sbb
dec
shr
aas
in
inc
cmp
push
into
xchg
sbb
and
jge
jle
movs
mov
xchg
pop
div
fnstsw
jl
enter
mov
jb
add
repnz
addr16
push
xor
inc
add
mov
lahf
es
aaa
push
or
ret
in
xor
adc
test
fisubr
or
rcr
bound
js
fistp
jmp
mov
or
rol
cmc
pop
mov
cwde
mov
push
leave
and
test
mov
mov
mov
jl
xor
sti
inc
pop
lds
mov
jle
push
fiadd
sub
imul
movs
(bad)
mov
imul
add
in
(bad)
mov
xchg
push
pop
or
jbe
push
cmc
fs
(bad)
idiv
shl
dec
and
mov
mov
adc
adc
rcr
adc
push
aad
out
cmp
xchg
out
ja
int3
dec
scas
sahf
dec
add
and
ds
dec
jle
adc
mov
cmps
or
mov
ins
je
inc
dec
push
inc
dec
adc
inc
adc
xor
jp
daa
je
mov
call
sub
sbb
xchg
stos
cmp
add
ins
dec
inc
pop
and
xchg
xchg
call
mov
dec
clc
fwait
push
(bad)
cmps
and
push
sub
(bad)
pop
lock
pop
dec
mov
xchg
aas
cdq
mov
inc
sub
shr
ss
loope
stos
pusha
mov
aas
and
test
retf
daa
pop
and
and
jbe
inc
cmp
rcr
adc
arpl
mov
pop
fs
dec
fsubr
sahf
rcr
add
sub
test
loope
add
es
push
aaa
int
aas
adc
push
retf
xchg
or
nop
dec
xchg
loopne
sub
xor
mov
jbe
lods
data16
dec
add
push
or
push
jb
push
pop
retf
out
int3
pop
(bad)
repz
or
fstp
fadd
adc
pop
rcr
dec
cld
stos
fidiv
push
fs
push
pop
pop
mov
(bad)
mov
sti
jmp
lods
jb
icebp
cwde
push
jecxz
push
enter
les
xchg
pop
into
iret
xchg
es
sti
and
adc
dec
inc
shr
xchg
cmp
jbe
jecxz
mov
and
fucomi
cmp
mov
lods
sub
js
sub
pop
imul
dec
idiv
add
jmp
repz
push
add
outs
daa
ins
push
mov
daa
push
and
and
sub
add
cmp
hlt
fld1
sbb
pop
cli
clc
mov
sbb
leave
inc
and
mov
mov
sbb
cmp
push
adc
sbb
imul
addr16
dec
xchg
(bad)
push
xchg
and
(bad)
in
loopne
int3
mov
adc
jne
push
iret
push
in
aad
push
loope
push
cmp
test
repnz
add
leave
ret
fldcw
stos
lods
add
(bad)
cld
jnp
inc
lock
adc
inc
or
adc
inc
retf
xchg
pop
pop
cwde
jmp
sub
call
add
cmp
inc
cmp
xchg
xchg
icebp
dec
cwde
mov
and
or
add
test
mov
rcr
aas
jl
js
push
xchg
(bad)
jl
sbb
mov
cmps
int3
mov
cld
push
invd
(bad)
out
sbb
cmp
bound
cli
xor
and
loope
pop
or
std
(bad)
cld
stos
jmp
ret
test
cmp
add
dec
inc
mov
mov
add
les
dec
mov
fiadd
cld
sub
cmp
shl
xchg
pop
jl
mov
and
stos
imul
(bad)
hlt
jp
xor
sbb
mov
adc
push
ficom
add
in
sub
cdq
std
mov
push
in
scas
arpl
jnp
pop
or
pop
mov
mov
xchg
xor
sub
adc
adc
jne
xchg
adc
jp
sbb
in
jns
mov
xor
clc
pop
test
stc
mov
cli
sbb
lods
xor
mov
out
mov
jo
xor
out
mov
pop
rep
test
fcomp
pop
mov
cdq
mov
std
jb
cmp
hlt
sbb
pop
test
sub
pushf
add
cmc
mov
jae
or
mov
mov
adc
inc
and
push
paddb
inc
add
mov
mov
jae
mov
and
movs
(bad)
jl
or
(bad)
xor
pop
adc
jno
push
add
scas
aam
int
lock
shrd
nop
jnp
sbb
icebp
pop
mov
nop
pusha
in
mov
int3
jmp
popa
jno
mov
(bad)
pop
ret
sar
sahf
pop
pop
jle
mov
cmps
pop
jnp
repz
jl
cmp
add
sar
cmps
pop
cmp
lahf
dec
in
xchg
pop
sahf
and
test
jmp
sbb
in
jne
cmp
test
out
mov
jo
mov
push
adc
test
push
aaa
aas
xchg
scas
imul
(bad)
fld
bound
pop
scas
jno
repnz
bound
(bad)
cmps
ins
and
mov
ds
stos
inc
xor
fcom
push
push
adc
mov
loopne
lods
(bad)
cs
dec
push
push
jecxz
cmps
mov
hlt
push
cmc
mov
neg
call
ret
adc
repz
(bad)
mov
in
call
clc
mov
push
dec
pop
std
in
shr
xchg
(bad)
das
add
rcr
mov
push
popa
xchg
sbb
lahf
sbb
fwait
jle
xchg
mov
mov
aam
cdq
ins
push
xchg
hlt
test
or
mov
inc
js
cmp
mov
out
inc
xchg
leave
not
mov
repnz
adc
dec
jae
fist
pop
sub
or
mov
and
mov
repnz
push
sti
mov
(bad)
stc
or
inc
pop
ds
pop
xor
shr
dec
mov
or
cmp
inc
or
hlt
or
adc
sub
or
xchg
xchg
fadd
mov
xchg
mov
shl
jge
leave
das
dec
test
push
movs
gs
xchg
add
(bad)
addr16
pop
inc
test
adc
sti
dec
and
imul
loope
popa
cmps
sub
push
mov
or
push
mov
dec
mov
cmp
(bad)
fbstp
cli
out
add
(bad)
loope
xchg
fcmovu
cmp
add
xchg
scas
outs
ins
mov
mov
outs
out
adc
cdq
stos
push
(bad)
inc
sahf
ret
mov
in
or
je
ret
or
mov
mov
mov
test
add
rcl
and
popf
imul
cmp
popf
es
mov
fsubr
add
enter
imul
sbb
into
clc
dec
jmp
push
data16
ret
nop
and
xor
mov
es
(bad)
cmp
jnp
je
pop
nop
mov
bound
jp
mov
in
mov
clc
xchg
call
push
add
xor
out
push
add
adc
push
imul
and
shl
pop
aad
movs
inc
push
push
jmp
inc
cwde
outs
daa
fmul
arpl
(bad)
mov
or
mov
stc
fisub
push
loope
repz
push
push
je
sub
test
xor
mul
mov
pop
add
idiv
int3
cs
xchg
(bad)
rcr
pusha
and
jo
dec
imul
inc
sahf
pop
aad
popa
movs
inc
bound
xor
jmp
iret
ret
mov
lock
lods
cmp
repz
ds
int
in
sar
scas
add
jg
lea
pop
in
test
pop
xchg
xrelease
xor
jne
xchg
(bad)
xchg
mov
int3
fbld
(bad)
gs
fs
retf
mov
push
jmp
sbb
ret
repnz
sti
pop
(bad)
je
repnz
aad
std
pop
loope
popa
cmp
jg
hlt
xchg
add
aas
push
push
add
or
mov
dec
cmp
cmp
test
imul
add
cmp
adc
(bad)
movs
jns
pop
test
mov
dec
call
int3
(bad)
rol
mov
mov
pop
enter
xor
int3
sub
fidiv
mov
stc
call
and
out
jg
sahf
icebp
cmp
retf
push
push
lock
push
xchg
mov
call
not
sbb
xchg
ret
lea
inc
cmp
in
rcl
lds
(bad)
leave
push
enter
(bad)
sub
shl
jge
leave
inc
ins
inc
cmp
mov
nop/reserved
add
data16
dec
iret
add
fsub
fmul
adc
add
jbe
xor
jmp
ins
mov
int
mov
into
addr16
call
xor
shl
push
dec
mov
inc
loop
ror
clc
ror
add
cwde
push
std
mov
icebp
jp
(bad)
sbb
popa
(bad)
pushf
sub
adc
jne
inc
mov
pop
fldenv
pop
jae
and
call
test
mul
popa
sub
fwait
xor
movs
stos
into
sbb
ins
nop
dec
leave
cli
jmp
test
cmp
push
mov
jl
aaa
mov
in
dec
jbe
cdq
xlat
sti
cmp
not
div
pop
mov
loope
xor
and
stc
adc
sbb
cmp
push
cmp
les
jle
cwde
scas
out
dec
dec
xchg
(bad)
inc
(bad)
cmps
adc
push
or
arpl
sbb
cmc
xchg
aas
inc
ret
push
in
pop
je
ins
(bad)
fld
mov
fild
enter
fstp
mov
iret
sub
push
bound
xor
cmp
sub
cli
test
lods
stc
add
push
xor
jns
ds
mov
jb
adc
mov
jno
ffree
ins
jae
jns
lods
test
fiadd
inc
cmp
inc
xchg
(bad)
cmp
xlat
call
mov
iret
fidivr
rol
jmp
call
inc
sub
and
loop
enter
mov
neg
inc
not
stos
je
adc
inc
xchg
in
mov
cmp
mov
xchg
cmps
xchg
fcmovbe
inc
cmc
addr16
add
inc
pop
outs
(bad)
aas
mov
xor
xor
lahf
sahf
pop
lea
dec
call
xchg
dec
cld
xchg
fst
test
std
mov
bound
loopne
mov
(bad)
out
and
movs
into
fild
clc
neg
push
cmp
hlt
ss
mov
(bad)
leave
push
dec
ret
mov
sbb
in
retf
or
pop
lahf
out
test
fldenv
(bad)
icebp
add
rcr
popa
mov
dec
inc
mov
sti
xor
and
or
mov
push
jge
popa
xchg
je
mov
mov
add
stc
pop
lahf
ins
push
lds
pop
imul
test
cmp
sbb
enter
sub
sub
jb
test
sahf
hlt
fsub
stos
or
repz
cmp
pop
mov
dec
pop
push
push
push
mov
outs
adc
pop
cmp
imul
add
loope
cmc
or
clc
mov
(bad)
inc
lahf
fisubr
ins
push
add
sar
cld
xchg
xor
mov
mov
push
sub
mov
and
pop
movnti
or
ins
dec
adc
and
xor
mov
mov
inc
jbe
les
fs
lea
add
inc
cmp
sbb
pusha
and
call
or
and
adc
sti
in
lods
inc
mov
ins
shr
aaa
movs
jns
jno
div
or
(bad)
and
xor
ror
sub
xchg
loope
mov
xchg
pop
pop
out
retf
cld
mov
aad
or
cld
addr16
mov
js
jno
movs
dec
jne
jb
xor
fisub
(bad)
stos
movs
sbb
(bad)
hlt
(bad)
and
fild
js
(bad)
dec
cwde
sbb
xlat
aaa
jg
(bad)
repz
xchg
or
jno
ja
fisttp
jno
lods
or
retf
int
imul
add
cs
lock
push
imul
psrld
fnstsw
data16
mov
add
out
sbb
xchg
or
les
push
stos
repnz
int
pop
mov
loopne
xchg
lods
fistp
push
retf
mov
sub
data16
leave
inc
push
add
ds
mov
sbb
cs
pushf
inc
bound
repz
mov
fsubr
inc
test
and
pop
adc
dec
int
jmp
je
xor
push
fdiv
xor
sete
adc
mov
xchg
pop
inc
sbb
inc
out
or
sub
push
ja
pop
or
leave
data16
gs
mov
ror
loopne
sub
les
mov
out
stos
xchg
dec
xor
inc
mov
push
or
popa
cmp
push
outs
xor
sbb
and
push
push
ficomp
movs
pushf
push
push
xchg
dec
xchg
mov
jno
push
out
cmc
stos
shl
(bad)
mov
fidivr
mov
jecxz
cdq
jmp
jo
push
(bad)
lock
dec
xchg
mov
xor
rcr
in
sbb
shl
adc
and
data16
pop
mov
pop
dec
mov
mov
xchg
pop
or
jbe
test
add
push
stc
cmc
pop
inc
(bad)
lds
shl
arpl
in
stc
sar
mov
push
out
call
retf
add
sahf
(bad)
mov
enter
popf
daa
lods
xor
cmp
or
aam
or
clc
fwait
pop
in
lds
into
call
call
sbb
cmp
sub
movs
mov
mov
sbb
sahf
or
fisttp
xor
cmp
hlt
pop
pop
add
sbb
or
xchg
jnp
dec
das
bound
inc
jno
pop
and
dec
adc
pop
(bad)
cmps
adc
adc
ret
nop
aam
push
icebp
jecxz
repnz
out
jmp
pop
jp
retf
data16
retf
xor
push
adc
add
add
repz
add
enter
sbb
push
dec
push
jmp
(bad)
call
mov
icebp
lahf
ret
(bad)
popa
xor
movs
outs
add
mov
mov
sbb
push
pop
nop
mov
add
mov
adc
rcr
mov
mov
jmp
xchg
aad
inc
loop
mov
pop
mov
jecxz
fsub
(bad)
fmul
pop
les
cmp
in
sbb
jg
jmp
(bad)
lock
push
test
es
cs
push
dec
(bad)
jmp
add
push
cmp
popf
pop
dec
mov
repz
in
call
aad
rcl
adc
push
iret
jge
xor
jnp
xchg
outs
shl
mov
jmp
or
jecxz
gs
dec
into
adc
cmps
cmp
jp
mov
jns
pop
(bad)
adc
and
sbb
or
jg
mov
sbb
xchg
out
lock
mov
sbb
pushf
mov
arpl
xchg
mov
add
or
push
mov
jmp
push
xor
add
fwait
cmp
sub
and
test
dec
jo
ret
mov
push
dec
or
loope
jnp
aaa
or
imul
mov
(bad)
jg
jne
jne
ins
cld
sbb
pop
stos
mov
and
(bad)
sbb
jns
fs
xor
mov
sub
or
ja
dec
add
out
(bad)
sbb
stc
xchg
xor
jbe
gs
cmp
repz
das
cmps
shr
push
dec
call
call
pop
mov
push
push
cmps
imul
data16
test
int3
mov
test
stos
sub
int
sbb
jg
pop
adc
xor
xor
repz
stc
mov
adc
pop
mov
sbb
cld
mov
fsub
outs
outs
inc
pop
push
dec
gs
sbb
mov
aas
inc
xor
outs
mov
fistp
mov
loop
inc
adc
shr
(bad)
aaa
sub
sub
int3
scas
xor
(bad)
xchg
shr
mov
xor
cmp
das
xchg
movs
inc
cli
or
stos
popa
test
shr
xchg
js
xor
addr16
ret
pop
dec
cmp
xlat
cwde
js
jbe
pusha
jp
hlt
fadd
mov
(bad)
imul
pusha
or
mov
mov
call
in
(bad)
xlat
fs
mov
jo
push
or
cmp
sbb
cmc
mov
sbb
loopne
adc
icebp
or
xchg
das
push
adc
cs
xchg
ins
daa
loope
daa
jle
mov
inc
sbb
xor
ja
push
xchg
dec
jmp
std
retf
xor
int
pop
mov
ret
outs
retf
(bad)
pop
add
or
call
xor
cmps
adc
pop
test
xchg
and
xor
push
cdq
jecxz
test
data16
imul
ss
xor
enter
aam
push
fwait
ins
jge
inc
ffree
xor
and
pop
jb
push
je
not
movs
out
adc
push
xor
sbb
inc
mov
jne
pop
fstp
pop
inc
inc
push
pop
mov
sub
aaa
(bad)
lods
adc
jmp
jmp
jmp
cmps
mov
push
outs
inc
xor
jae
mov
push
push
xchg
test
scas
xchg
in
fisubr
hlt
add
sahf
(bad)
cmc
fstp
sub
mov
jne
mov
iret
dec
cmp
shl
(bad)
mov
mov
mov
out
inc
adc
xor
adc
mov
iret
jno
in
int
add
fistp
(bad)
(bad)
mov
mov
inc
adc
cwde
rcr
push
mov
mov
and
xchg
stos
ffree
sahf
mov
loopne
mov
popf
inc
sub
fmulp
jnp
push
xchg
rcr
inc
hlt
(bad)
rcl
xstore-rng
cmps
les
pop
xor
xor
xchg
and
mov
or
xor
inc
retf
cdq
movs
retf
adc
in
sbb
daa
test
ds
cmp
pop
pop
and
inc
mov
adc
hlt
inc
pop
das
fisttp
fs
fidiv
xchg
cli
imul
sub
std
call
(bad)
lock
scas
cmp
or
jno
mov
stos
stos
jae
and
jb
(bad)
(bad)
hlt
out
imul
jecxz
sub
arpl
int
in
hlt
jg
adc
aad
push
ins
cmps
aaa
in
pop
or
stos
nop
xor
pop
inc
inc
or
jne
mov
lods
pop
and
push
sub
sbb
jmp
sar
(bad)
cmp
out
sub
fld
xchg
xor
pop
or
jo
jmp
ins
jge
or
pop
add
out
mov
and
arpl
push
dec
add
fdivr
mov
mov
ret
push
sub
jge
adc
mov
cmp
sbb
call
push
mov
add
test
mov
ret
stc
imul
or
ja
or
adc
adc
retf
mov
cmps
pop
ret
mov
sar
dec
dec
dec
pop
adc
mov
pop
pop
arpl
xchg
push
pushf
test
je
xchg
add
in
jmp
test
mov
xchg
add
cdq
inc
push
cmc
cdq
es
fbstp
inc
pop
sti
add
inc
xor
sar
or
outs
ret
or
inc
repz
mov
cmp
nop
adc
inc
add
out
dec
nop
in
int3
outs
add
dec
ins
fadd
test
push
leave
or
mov
pusha
or
mov
lods
into
push
xor
xor
retf
cli
or
inc
mov
popa
pop
mov
xor
ret
in
aas
push
int
adc
sub
mov
fcomp
pop
or
call
sbb
add
push
sbb
adc
inc
sbb
or
popa
cmp
xor
lods
lock
inc
or
xor
outs
cld
push
pop
loopne
jle
push
mov
imul
cmps
pop
and
xchg
daa
add
adc
int3
ret
xchg
sub
adc
jge
jmp
fwait
rcr
sbb
pop
gs
pop
push
(bad)
in
es
mul
adc
adc
js
test
jb
sahf
aaa
xor
or
ins
inc
xor
stos
dec
inc
imul
iret
inc
push
lahf
push
aas
(bad)
and
jns
adc
aam
fadd
call
jne
jecxz
mov
std
cld
cmp
cdq
jne
dec
stos
adc
add
pop
fsubr
(bad)
(bad)
mov
rcr
test
mov
stos
cmp
jo
push
push
inc
xchg
aaa
pop
in
test
jbe
or
and
xchg
push
aam
or
and
pop
ins
fnstenv
jg
cmp
test
mov
bound
mov
cmp
mov
mov
fwait
push
in
repz
sub
sar
add
jmp
cmp
push
push
jecxz
add
mov
xchg
js
shl
ret
jmp
pop
push
sbb
mov
mov
jmp
out
adc
mov
dec
lods
fistp
cmps
fadd
inc
or
arpl
das
mov
or
es
push
dec
mov
fiadd
pop
jg
xor
cmps
cmp
test
mov
sbb
sub
mov
pop
je
push
jl
into
sbb
hlt
mov
dec
push
add
clc
push
neg
sbb
retf
mov
cli
pop
jmp
test
ret
ror
icebp
sbb
push
lea
push
sub
pop
retf
(bad)
push
mov
cmps
mov
inc
mov
out
aaa
sub
add
data16
in
nop
call
push
movs
mov
icebp
add
(bad)
sbb
daa
ret
shl
(bad)
inc
push
addr16
(bad)
imul
inc
cmp
sub
stos
aad
mov
retf
test
pop
jnp
shl
ror
mov
test
inc
aas
sub
mov
inc
leave
xchg
dec
ret
fsub
pop
or
js
mov
cmp
sbb
push
pop
xlat
adc
int3
dec
mov
adc
out
pop
push
dec
mov
lods
jae
push
imul
in
arpl
sub
and
dec
pop
ja
in
ret
cli
push
jbe
pusha
pushf
jbe
lods
test
add
push
sti
jge
pop
aaa
jge
inc
ror
xor
jne
popa
jmp
dec
mov
or
stc
ret
sti
mov
push
xlat
data16
and
pop
and
jo
sahf
(bad)
cli
mul
mov
fst
xchg
loopne
push
jo
shl
lds
push
push
jns
adc
add
mov
xor
shl
out
jnp
and
ficom
add
int
ins
jg
test
inc
push
push
dec
cld
adc
fisttp
inc
test
dec
xor
sub
lock
loope
sub
hlt
movs
rcl
sub
call
jbe
data16
sahf
or
inc
pop
nop/reserved
imul
or
popf
jge
das
in
and
pop
cs
jle
popw
xchg
push
cmc
inc
lds
jo
sub
leave
or
pop
xchg
adc
call
mov
mov
ins
add
mov
shl
push
push
fidivr
inc
adc
test
xchg
jmp
push
cmp
dec
sub
cmp
js
lods
or
sahf
iret
in
dec
sbb
sbb
pop
xor
aaa
sub
lahf
in
mov
loope
(bad)
jmp
cmp
les
int3
sar
je
popa
mov
cli
lea
pop
jo
fdivrp
sahf
bnd
repnz
and
mov
push
dec
fstp
pop
ds
cld
jae
xchg
add
aam
mov
adc
mov
sahf
shr
inc
ss
pusha
or
mov
mov
in
retf
cmp
adc
jge
sub
fwait
pop
push
or
fimul
fild
pop
add
loope
and
push
and
in
mov
test
inc
(bad)
cli
cmp
or
xor
shl
pop
mov
es
aas
and
fisttp
loop
dec
scas
push
sub
add
stos
ret
leave
(bad)
cmp
adc
(bad)
inc
push
test
loopne
mov
inc
lods
xchg
fmul
sbb
pop
adc
fnstcw
sbb
mov
jmp
inc
rcl
in
xchg
test
sbb
xchg
das
jbe
add
pop
inc
mov
inc
xchg
jbe
pop
mov
add
leave
sbb
mov
or
ins
cmps
mov
or
jp
xlat
in
push
scas
inc
xchg
popa
dec
mov
mov
inc
dec
out
add
retf
xor
je
and
test
cwde
das
jmp
pop
sbb
imul
fcmovu
lock
fwait
and
sar
xchg
retf
inc
std
pop
cmc
fist
xor
lods
retf
cmp
dec
retf
push
pop
pushf
sub
div
add
(bad)
mov
inc
cmp
rcr
cmp
dec
lods
jnp
ins
adc
mov
inc
xor
mov
clc
or
stos
(bad)
sbb
mov
dec
jno
jmp
and
shl
adc
pushf
mov
sahf
push
retf
jae
jne
or
mov
sub
add
pop
mov
xchg
in
pop
inc
push
jge
mov
jg
adc
(bad)
in
xchg
shl
pop
and
cmp
mov
sbb
aas
or
std
fmul
scas
and
add
aad
push
inc
sbb
gs
sub
adc
and
xor
pusha
inc
outs
pop
je
arpl
sbb
sbb
into
scas
or
and
jp
popf
jbe
call
push
ret
sbb
mov
pop
mov
enter
leave
ja
outs
xor
add
dec
jg
adc
push
sub
dec
sbb
dec
xor
es
adc
arpl
fimul
fild
inc
xor
and
aas
int3
pop
cmp
pop
add
jne
(bad)
out
sbb
ss
add
adc
jns
xchg
xchg
mov
les
imul
(bad)
mov
popf
push
stos
push
sbb
mov
dec
fwait
push
sub
cmp
ins
mov
outs
jo
inc
(bad)
jb
pushf
adc
or
in
adc
sub
mov
push
idiv
xor
push
xchg
jo
mov
cmp
dec
and
or
adc
ins
cmp
push
or
mov
xlat
icebp
sub
loop
push
pop
(bad)
sbb
sub
les
lea
(bad)
std
mov
jl
(bad)
cwde
push
mov
bound
cmp
pop
fmul
scas
les
adc
mov
cmp
fmul
jnp
push
sbb
int3
dec
data16
into
sbb
adc
mov
jne
ja
ins
fpatan
inc
and
cli
(bad)
cmp
dec
mov
hlt
fs
(bad)
cmp
inc
dec
xchg
loopne
jbe
retf
add
lods
mov
adc
fistp
or
ja
in
movs
mov
stos
into
lock
dec
(bad)
jmp
or
jb
cmc
(bad)
fmul
js
push
rcl
cs
sbb
clc
fcmovnu
ficomp
and
stos
add
xor
popf
and
dec
leave
bound
mov
loop
int3
icebp
dec
stos
inc
ja
dec
in
jae
fs
add
push
dec
mov
mov
sti
fmul
or
outs
mov
add
ss
jo
adc
(bad)
push
pop
add
in
jbe
cli
xor
stc
repnz
jle
sbb
and
inc
jp
aaa
repz
data16
(bad)
stos
cdq
or
push
push
dec
pop
mov
jne
retf
pop
sub
pop
out
cwde
jle
loope
fsubr
fwait
pop
cmc
dec
dec
daa
pop
cmps
inc
dec
mov
dec
dec
cmps
int
int
push
cmps
stc
movs
jae
jbe
sub
mov
int3
daa
ins
ds
ret
sub
outs
cli
adc
movs
xor
jge
xor
lods
rol
mov
inc
push
aas
nop
adc
inc
mov
lahf
adc
sti
std
outs
pop
or
outs
xor
fisttp
sub
inc
imul
data16
add
adc
adc
xchg
arpl
in
pop
call
inc
xlat
xchg
cmp
sbb
jmp
mov
push
daa
jmp
or
mov
fs
js
loopne
inc
aaa
sub
sub
imul
pop
inc
jp
xor
mov
in
inc
sbb
jmp
add
mov
scas
mov
jp
push
push
and
clc
sbb
cld
pop
jno
push
inc
add
pushf
cmc
mov
fisubr
jae
pop
int
jmp
mov
sub
dec
xchg
push
pcmpeqd
pop
xor
cli
xor
xchg
(bad)
fnstsw
nop
in
add
(bad)
sbb
and
retf
pop
ss
lahf
pop
aam
nop
adc
push
mov
pop
loop
jge
hlt
cld
popa
push
call
pushf
or
add
test
mov
inc
(bad)
lock
xor
cmp
pop
mov
mov
mov
dec
sbb
out
push
and
idiv
inc
fsub
(bad)
sbb
sub
cmps
sbb
cmp
cmp
mov
lds
lds
xlat
jecxz
xchg
fild
xor
xor
inc
cs
sbb
mov
out
repnz
shr
or
push
cmp
test
leave
add
int3
pushf
xchg
push
mov
push
(bad)
push
cwde
sbb
add
mov
xchg
pop
test
xchg
inc
jo
adc
aam
ja
jp
jmp
mov
push
sub
mov
pushf
ret
je
cmp
or
xchg
xor
clc
sub
dec
inc
in
into
dec
icebp
jae
jl
add
inc
xchg
call
mov
aas
call
add
out
cmp
inc
repnz
scas
clc
dec
inc
pop
enter
pop
mov
stc
aas
xchg
retf
cs
sbb
xor
cdq
xchg
mov
push
dec
(bad)
push
adc
daa
sub
cmp
mov
(bad)
rcr
shr
add
adc
movs
and
ret
dec
add
jmp
inc
(bad)
or
into
xchg
cmps
mov
test
or
inc
repz
xchg
outs
(bad)
ficom
push
(bad)
mov
push
retf
lods
and
repz
mov
pop
mov
daa
adc
cmp
mov
push
adc
cmps
mov
cld
sar
jl
test
lock
test
push
icebp
mov
xchg
sub
ror
mov
pop
jb
add
jmp
mov
je
(bad)
test
and
jge
outs
pop
(bad)
sar
xchg
dec
sbb
scas
pop
js
mov
pop
out
jge
pop
rcr
imul
daa
dec
add
leave
push
jne
add
mov
aad
mov
lahf
mov
or
xchg
jmp
fbstp
adc
jge
in
mov
sub
xor
cwde
sahf
xchg
jae
or
call
xchg
nop
inc
cmps
lahf
lods
outs
leave
enter
lea
aas
jmp
fsubr
aaa
fwait
or
push
push
cs
loop
jo
imul
ror
ret
adc
inc
hlt
add
or
push
ret
inc
scas
inc
lods
pop
xchg
xchg
stc
add
lods
sbb
js
mov
(bad)
mov
xchg
int
xchg
inc
dec
nop
adc
and
jbe
inc
clc
sub
sub
bound
add
and
inc
adc
jo
xor
cdq
iret
fst
enter
fstp
fdiv
dec
xchg
jl
cmp
push
bound
push
dec
scas
scas
std
jge
cmp
push
xor
ficomp
cmp
push
push
push
mov
loopne
scas
adc
xchg
lods
out
imul
rcl
mov
adc
inc
mov
pop
and
mov
das
dec
jmp
push
xchg
imul
sub
sub
(bad)
sub
mov
push
and
jle
or
repz
push
pop
sbb
out
pop
popf
addr16
and
(bad)
mov
out
adc
inc
ja
test
lahf
mov
sahf
pop
adc
fsubr
pop
inc
mov
xchg
pop
lock
aam
test
mov
push
sahf
imul
movs
and
loop
xchg
inc
in
jmp
cmp
jnp
xor
stos
add
mov
mov
nop
pushf
shr
mov
lods
aam
aad
stos
pop
ds
retf
cmp
daa
adc
in
ss
cwde
sub
lea
inc
cwde
push
dec
sub
ds
and
shl
imul
xchg
fstp
into
push
nop
adc
popf
cmp
int3
out
xchg
shl
retf
sub
test
lahf
cmp
dec
pop
int3
push
scas
cdq
or
push
ror
inc
cmp
or
cmps
xlat
pop
cld
jns
and
cmp
std
push
gs
mov
mov
fsubr
pop
xchg
aad
jge
pop
aas
adc
xchg
push
adc
shl
out
jl
pop
cmp
and
rcr
mul
cmp
and
sbb
cmp
push
push
jmp
mov
imul
jno
xor
pop
in
dec
(bad)
fdiv
push
fidiv
loop
dec
add
xor
fidivr
and
mov
mov
add
popa
aam
inc
fs
lea
and
sub
not
aas
movs
mov
and
sbb
cmp
mov
pop
daa
sbb
test
stos
jge
rcl
(bad)
pop
pop
cmp
xlat
out
and
sub
call
xor
and
push
into
mov
outs
push
inc
gs
out
add
adc
pusha
cwde
cs
cmp
cli
scas
and
shld
mov
sar
mov
clc
stc
sbb
jmp
or
mov
xor
clc
add
adc
rcr
sub
adc
int
repz
lds
stc
mov
xlat
add
jmp
out
ds
popf
sub
clc
cs
dec
mov
jl
out
and
push
icebp
cmp
jmp
xchg
fisttp
push
mov
cs
shl
bound
ds
fnsave
adc
into
or
movs
ret
push
pop
or
pop
arpl
repz
mov
sar
xor
mov
cmps
nop
rol
mov
push
inc
xchg
sub
fidivr
xchg
sti
jbe
(bad)
push
out
or
add
jl
or
push
inc
pop
sbb
loope
pusha
fidiv
pop
icebp
loop
mov
or
leave
mov
mov
or
aam
pop
pop
out
and
and
cwde
fild
and
adc
lods
xchg
(bad)
jae
mov
dec
mov
mov
outs
out
add
inc
ror
retf
ret
stos
jp
test
and
mov
mov
or
outs
adc
cmc
sub
fnstcw
fdivr
imul
xchg
or
in
nop
aas
ds
and
ins
rcr
sub
adc
sbb
sub
add
push
bound
outs
sub
stc
sub
or
pop
data16
mov
retf
lahf
and
mov
mov
mov
fadd
sbb
sbb
in
(bad)
fnstsw
lds
jns
push
in
pusha
and
sub
fidivr
rcl
in
fmul
arpl
ret
adc
(bad)
fmul
pop
cmps
mov
xchg
pop
pop
icebp
pushf
dec
sbb
in
mov
aad
jmp
adc
mov
cmp
cmp
shr
push
retf
sar
fdiv
int3
sbb
xor
jno
adc
int
stc
(bad)
and
push
lock
jns
sahf
out
loop
cmps
and
gs
cmps
add
imul
jmp
out
cmp
pop
sub
push
(bad)
mov
movs
mov
xchg
stos
sar
pop
mov
jne
sub
cld
lods
imul
dec
xchg
fs
mov
dec
daa
dec
adc
loopne
push
dec
and
mov
push
lock
xchg
cld
(bad)
shl
retf
xor
adc
aam
sbb
stos
or
shr
sub
lds
cmps
test
aaa
jp
repnz
out
mov
sbb
mov
inc
outs
pop
adc
sbb
pop
fstp
pushf
in
loope
(bad)
mov
and
xor
sbb
loop
cmps
hlt
fnstenv
and
loope
enter
and
out
inc
iret
lods
jmp
movs
mov
sub
aas
xlat
push
pop
push
cmp
popf
fwait
scas
mov
and
(bad)
or
mov
aaa
nop
jmp
movs
cmp
mov
jge
mov
pop
sbb
test
cli
mov
pop
mov
xor
and
cdq
push
adc
cmp
jno
mov
xchg
fisubr
call
adc
adc
jmp
push
lods
push
mov
clc
mov
mov
addr16
xor
ja
add
inc
gs
cdq
jge
aad
or
push
inc
dec
not
pop
sbb
xor
aad
inc
xor
ficomp
call
and
push
fidiv
sti
xchg
inc
pusha
in
jmp
loop
xor
and
std
pop
push
xlat
mov
fadd
jae
cmp
and
data16
shl
mov
popa
scas
jl
neg
div
shr
jbe
dec
(bad)
xor
loop
and
adc
pop
popf
mov
leave
dec
(bad)
stc
sub
xchg
or
mov
mov
ins
sub
inc
dec
inc
xor
xchg
inc
imul
push
shr
sbb
xor
pop
outs
iret
mov
fnsave
call
inc
inc
fsubp
outs
enter
retf
int3
leave
out
mov
or
loope
clc
jno
push
shr
xchg
fdiv
(bad)
dec
jb
jmp
addr16
push
push
pop
sub
in
mov
xchg
mov
lods
scas
movs
pusha
lods
call
popf
jl
sub
push
cmp
outs
clc
sbb
pop
cli
sar
mov
mov
inc
jle
je
jbe
push
ja
and
scas
push
sbb
xchg
jmp
sub
ror
pop
sbb
cmp
mov
call
xor
nop
lds
addr16
dec
mov
stos
xchg
enter
fild
dec
mov
aam
mov
mov
lods
rcr
imul
xor
out
mov
cli
icebp
xchg
add
mov
sbb
and
cmp
adc
retf
or
pop
out
mov
shl
dec
test
mov
adc
lds
nop
push
mov
psubw
cld
das
add
in
pop
in
pop
rcl
int
ss
sahf
jecxz
and
xchg
out
imul
out
adc
popa
cli
mov
mov
pop
out
std
cmp
add
xchg
cmc
iret
mov
xchg
iret
nop
popf
cmp
dec
(bad)
push
jmp
cmp
stos
mov
mov
xchg
call
push
adc
outs
push
mov
inc
xchg
lea
imul
pop
jno
adc
das
push
add
push
(bad)
adc
cmp
sahf
lds
in
mov
push
retf
jae
sbb
repz
hlt
icebp
in
lock
inc
xor
hlt
mov
mov
icebp
mov
out
nop
cmp
jle
push
sbb
add
dec
lahf
std
movs
sub
inc
mov
cmc
ss
push
dec
dec
addr16
push
or
in
out
setg
sbb
xor
fld
sbb
iret
lods
dec
inc
xchg
shl
cmps
adc
inc
rol
add
push
jge
pushf
aaa
xchg
jb
xor
push
xchg
add
pop
out
xchg
jo
loopne
cmp
or
mov
stos
cld
cmc
xor
sbb
stos
pusha
out
jnp
add
add
(bad)
jne
fcmovne
out
jo
mov
jmp
or
(bad)
movs
pop
cmp
test
cli
ficom
mov
dec
mov
or
cmp
xlat
xchg
ja
xor
or
movs
in
(bad)
clc
fxtract
add
js
push
jnp
xchg
popa
in
inc
enter
dec
jns
mov
retf
jge
sbb
adc
out
cmp
mov
imul
imul
add
mov
and
jo
ret
scas
mov
jbe
fs
sub
loop
and
pop
jo
test
push
push
addr16
test
pop
xchg
movs
mov
shl
mov
dec
stos
push
arpl
jmp
outs
ja
jmp
das
mov
inc
bound
test
dec
addr16
mov
push
out
rol
sbb
mov
add
(bad)
cli
pop
cmp
xlat
sbb
shl
push
mul
and
mov
jmp
gs
inc
sbb
mov
mov
aam
xor
lea
and
test
push
jmp
inc
in
cmp
cmp
test
hlt
pop
cs
lods
or
jmp
retf
je
xor
add
cwde
iret
cmp
or
stc
pop
mov
test
mov
mov
and
mov
lods
inc
mov
xchg
iret
or
retf
jno
ss
adc
sub
push
adc
cld
cmp
bnd
sub
dec
sbb
ss
jl
xchg
mov
sbb
(bad)
(bad)
jno
(bad)
and
add
mov
js
inc
adc
jmp
jne
call
inc
lea
pop
jmp
loopne
pop
std
popa
mov
xchg
mov
popf
inc
popa
or
adc
sub
movs
pop
or
cmp
inc
imul
push
or
push
out
scas
imul
cmp
les
cmp
cmp
(bad)
in
call
sbb
jl
xchg
into
adc
adc
stos
xchg
mov
scas
popa
mov
js
inc
push
test
mov
repz
movs
out
add
in
stos
mov
mov
mov
jl
out
fcmovne
mov
and
pop
sub
pop
ret
dec
popf
xor
pusha
fcom
repnz
retf
jge
cli
dec
pop
lods
cwde
sti
out
push
xchg
inc
xor
sub
mov
(bad)
mov
xlat
and
fsubrp
movs
add
sub
sbb
push
aas
outs
dec
sbb
dec
das
and
jp
mov
mov
or
movs
bound
mov
mov
xor
cmp
div
cli
les
inc
mov
push
push
add
push
fwait
adc
or
lods
dec
in
out
ror
(bad)
inc
fwait
cmp
mov
(bad)
daa
rcl
push
fistp
shl
sub
pop
jb
push
cmp
loope
add
sbb
jne
fdivr
es
call
shl
jg
stos
ret
mov
push
cmp
sti
mov
add
xor
push
mov
dec
test
xor
push
mov
jo
pop
ret
int
test
adc
mov
in
xchg
nop
cwde
aad
std
stos
call
mov
or
mov
cmps
xchg
out
jne
stos
sub
inc
jp
cmp
sub
xor
fistp
dec
xchg
add
fwait
add
jne
imul
xchg
repz
ds
dec
adc
xor
enter
ja
icebp
jl
lods
dec
int3
(bad)
or
pop
sbb
pop
mov
gs
adc
xor
aaa
jg
add
nop
aad
mov
adc
jl
enter
cmp
pop
dec
jmp
cmp
dec
enter
push
dec
mov
mov
jb
fsub
mov
add
sub
into
mov
in
sbb
mov
scas
mov
jge
mov
cld
cmp
inc
rcl
xor
xchg
jmp
dec
test
add
cli
dec
loopne
push
(bad)
xchg
mov
(bad)
mov
int
mov
jmp
call
xchg
sub
arpl
pop
sbb
fwait
inc
jmp
inc
es
icebp
(bad)
arpl
adc
xor
push
lods
mov
daa
jno
mov
loop
ja
and
cmp
pop
mov
sub
(bad)
add
es
cmps
test
jle
xchg
js
mov
inc
mov
ins
mov
retf
out
mov
push
test
cmp
add
ss
fdivr
inc
cmp
add
mov
sub
jle
lods
pop
cmp
cbw
or
sub
sub
add
test
and
int3
and
fwait
xlat
sahf
xchg
inc
mov
inc
in
mov
pusha
(bad)
pop
adc
rol
in
mov
daa
dec
or
xchg
pop
xlat
lods
clc
lahf
gs
cmp
jecxz
or
adc
cmps
aaa
(bad)
sar
addr16
push
in
and
aas
ret
jmp
push
in
mov
xchg
dec
ins
mov
xor
mov
lahf
xor
or
push
mov
sbb
jno
ss
xchg
mov
xchg
push
lea
add
push
fisubr
fs
(bad)
adc
in
je
or
pop
pop
out
sub
adc
inc
fisttp
outs
test
push
xor
jl
bound
test
xor
lds
push
mov
cmp
retf
pop
push
stos
cmp
and
adc
pushf
js
fldenv
and
lods
ss
popf
rcr
arpl
aam
inc
popa
cmc
jmp
jp
jae
int3
dec
cwde
xlat
(bad)
out
mov
aaa
movs
iret
clc
imul
xchg
fnstenv
mov
ja
mov
mov
add
lods
imul
pop
pusha
and
mov
dec
(bad)
and
mov
pop
aam
pop
jns
pop
int
je
xchg
mov
shr
iret
hlt
and
in
adc
clc
cmp
xor
jp
xor
ret
jns
dec
loope
mov
jne
test
or
fadd
xchg
popf
dec
fnstsw
pop
sbb
loop
fmul
jae
ret
test
push
cmp
push
adc
mov
adc
push
mov
add
(bad)
jl
repz
mov
aad
fwait
in
dec
fwait
jb
mov
adc
dec
rcl
int3
fidivr
sar
mov
fwait
xchg
push
xlat
jns
ins
xor
push
sbb
enterw
test
les
inc
out
cmc
(bad)
sar
lods
pop
and
or
int
(bad)
aad
mov
mov
and
mov
sbb
mov
xor
sbb
adc
fucomp
cmp
mov
add
and
push
adc
neg
adc
jnp
lahf
in
and
ficomp
push
mov
cdq
jns
or
gs
scas
or
inc
repz
into
outs
and
sbb
sbb
hlt
xor
mov
xchg
aaa
sar
mov
popf
xor
adc
push
and
int3
movs
mov
(bad)
pop
adc
mov
jnp
sub
push
mov
mov
xchg
cs
mov
ret
mov
aas
in
pop
rol
dec
sub
sub
sbb
inc
pop
xor
pop
jg
add
aad
push
enter
sub
dec
xor
pop
imul
jb
lods
xchg
lock
pop
sbb
sub
cmp
push
push
pusha
movs
(bad)
std
push
jns
movs
cwde
dec
mov
test
inc
in
cs
ret
sbb
test
sub
call
cs
jae
and
push
mov
pop
fiadd
out
dec
sbb
loopne
xchg
xchg
push
pop
mov
push
ror
ds
pop
sbb
and
mov
ret
pop
jp
imul
(bad)
or
mov
mov
jmp
icebp
je
dec
lods
hlt
xchg
mov
stos
out
out
cmp
dec
push
(bad)
pop
test
xor
cmps
jp
mov
add
out
and
neg
leave
jns
mov
dec
push
ins
sahf
adc
push
mov
call
sub
add
push
dec
jp
nop
xor
adc
out
in
push
add
mov
arpl
pushf
sub
dec
mov
gs
push
jl
(bad)
mov
or
add
call
add
xchg
add
call
xlat
sar
sahf
push
push
push
sub
int
stos
shl
fsubr
pushf
xor
(bad)
mov
mov
sub
mov
mov
sti
movs
mov
loop
add
adc
mov
xor
sub
xchg
mov
mov
jge
fcomp
sub
dec
jb
or
daa
out
les
in
xor
mov
dec
cli
xor
mov
(bad)
pop
dec
retf
pop
xlat
lods
push
aam
lods
repnz
dec
retf
aaa
mov
lods
lahf
mov
jnp
stc
ja
addr16
mov
or
cmp
gs
shl
mov
inc
cmc
and
push
mov
inc
cmp
xor
mov
xchg
mov
lods
js
cmc
adc
cmps
mov
popf
clc
icebp
js
mov
jnp
mov
mov
pop
scas
add
jp
call
aam
sbb
std
test
mov
shl
jae
retf
xchg
repnz
xchg
stos
jo
or
jnp
jbe
mov
aad
cmp
vcvtps2dq
xor
repnz
xchg
sbb
rcl
pusha
leave
or
pusha
push
dec
xor
inc
pop
push
loopne
or
mov
arpl
out
cdq
sbb
ror
and
cmp
mov
dec
inc
mov
enter
sub
and
cs
sbb
ficom
call
shr
in
mov
sar
ja
sbb
inc
ja
push
retf
xchg
mov
ret
ret
lahf
mov
fidivr
jl
sbb
mov
cld
inc
dec
test
movs
fdivr
or
jbe
mov
push
xchg
test
jp
daa
adc
or
(bad)
push
(bad)
sti
lods
cmp
inc
(bad)
pop
in
arpl
daa
jno
scas
icebp
cmp
mov
mov
lock
das
popf
push
add
cs
dec
sti
mov
sti
sub
int
add
fidivr
clc
enter
imul
das
push
push
movs
sbb
xchg
dec
cmp
inc
pop
mov
dec
push
fistp
retf
sbb
mov
dec
push
pop
and
mov
inc
ror
mov
xor
or
in
ror
jmp
icebp
mov
sbb
pop
repnz
push
pop
xor
push
inc
inc
add
push
in
xchg
in
inc
mov
ins
cdq
loope
call
mov
dec
nop
pop
gs
push
inc
sub
popf
fs
retf
mov
daa
test
jne
adc
gs
lods
lock
mov
je
aam
and
cmps
add
test
push
lods
dec
push
sahf
div
mov
mov
xchg
pop
add
outs
ret
outs
out
aam
xor
cs
es
xchg
push
mov
mov
jns
lock
jne
mov
and
mov
jno
pop
or
inc
dec
push
sbb
sbb
mov
scas
lds
adc
xchg
loop
push
pop
push
aad
sbb
pop
pop
pusha
loope
add
xor
mov
cmp
mov
sbb
das
pushw
add
jnp
ins
mov
call
pop
aaa
mov
jmp
scas
sti
dec
cdq
arpl
xor
fwait
push
xlat
fs
xchg
(bad)
call
cmps
mov
test
adc
add
mov
shl
or
mov
int3
(bad)
mov
or
adc
enter
nop
int
push
outs
scas
fdiv
or
jo
aas
mov
stos
jl
adc
mov
daa
or
cmp
add
in
cwde
sub
cmp
fimul
daa
mov
inc
and
xchg
fdiv
adc
or
mov
das
dec
stos
mov
jge
jae
mov
test
and
xchg
cmps
test
rcr
mov
xchg
in
in
lea
or
nop
and
sub
pop
cmp
frstor
fldcw
pop
loop
mov
xchg
sar
ins
mov
push
jmp
push
mov
xchg
dec
inc
or
add
sar
icebp
adc
push
js
inc
lods
bound
pop
mov
sbb
dec
out
pop
mov
pop
rol
push
fistp
shl
xchg
sbb
pop
jbe
push
loop
mov
repnz
(bad)
or
dec
scas
js
inc
popf
ficomp
test
(bad)
scas
xor
stos
les
pusha
fidivr
mov
push
in
jmp
mov
cdq
xchg
icebp
dec
cmp
cmp
mov
fwait
cdq
mov
neg
sbb
mov
stos
adc
repz
xchg
scas
xchg
sub
enter
or
push
inc
pop
(bad)
sub
scas
jge
inc
ja
xchg
inc
fsubr
pop
inc
leave
fs
inc
xchg
iret
aas
xchg
push
xor
lods
iret
das
push
repnz
push
push
xchg
jnp
imul
popa
shr
(bad)
repz
data16
out
lds
push
inc
xchg
or
jnp
and
pop
mov
mov
push
adc
ins
ror
sub
push
clc
dec
loopne
inc
mov
cmp
adc
mov
mov
sti
mov
mov
aaa
fs
retf
push
mov
call
fwait
ja
inc
test
stos
(bad)
out
adc
sub
sbb
pop
xorps
adc
adc
daa
jae
movs
adc
cwde
(bad)
jno
xor
cmp
mov
sbb
pop
leave
in
fbstp
inc
adc
adc
inc
inc
mov
mov
cmp
mov
ds
and
hlt
call
xor
movs
inc
mov
pusha
iret
mov
mov
mov
dec
ds
push
sbb
mov
pop
jp
dec
inc
repnz
cmp
and
mov
in
(bad)
sbb
xor
dec
lds
cmp
mov
xor
adc
pop
pop
mov
xchg
inc
outs
mov
xchg
add
push
push
movs
cmp
pop
jno
pop
das
or
repnz
jmp
out
mov
cmp
movs
fs
retf
or
shl
mov
and
push
inc
push
push
fbstp
push
call
lds
pop
sub
mov
retf
jge
movs
pusha
je
xor
fidivr
pop
fwait
in
sbb
sbb
ss
clc
or
push
nop
aas
sbb
and
mov
cmps
sub
cmp
mov
mov
inc
(bad)
jp
mov
mov
(bad)
cs
push
cmp
in
sub
stos
mov
cmp
in
sbb
adc
js
dec
mov
inc
pushf
mov
sbb
xor
scas
movs
push
cli
mov
mov
cmc
imul
je
cmp
retf
jns
pop
enter
jp
into
pop
sbb
inc
adc
test
cmp
sti
out
ret
cmp
jno
push
sub
cmp
je
push
mov
and
inc
inc
popa
mov
xchg
xlat
or
mov
imul
scas
in
ins
cwde
ss
enter
mov
lahf
scas
dec
outs
add
lods
shr
xlat
jle
add
mov
mov
mov
adc
je
sbb
in
dec
mov
fwait
mov
jle
inc
idiv
mov
popf
adc
in
add
dec
dec
je
je
jnp
fist
mov
retf
test
sub
and
cmp
inc
lds
adc
aas
(bad)
sub
ins
test
(bad)
mov
fld
push
mov
push
not
(bad)
pusha
test
sbb
adc
mov
push
out
cs
and
aas
in
mov
pusha
movs
adc
add
jp
(bad)
stos
enter
scas
adc
mov
stos
cmps
fsubr
(bad)
and
aaa
pop
add
popa
sbb
not
idiv
or
xor
or
jl
pop
or
scas
leave
pop
sbb
jno
sub
adc
scas
std
pop
jle
cld
out
cs
inc
lods
fcomp
ss
fwait
pop
pop
pop
xchg
cli
jmp
mov
mov
xor
mov
(bad)
in
xchg
loope
fdiv
push
dec
loop
xor
mov
imul
ror
and
movs
jns
cmp
pop
xor
out
fidivr
mov
pop
mov
out
daa
pusha
clc
js
sbb
jmp
test
mov
stc
(bad)
cmp
das
mov
(bad)
and
cmp
dec
sbb
cmp
outs
inc
mov
sub
pop
call
dec
mov
mov
adc
imul
(bad)
and
(bad)
sbb
adc
test
pop
hlt
push
(bad)
ds
add
fs
dec
xor
xchg
xchg
aaa
mov
pop
and
sahf
nop
push
mov
mov
inc
jmp
xor
in
adc
rcl
out
cmp
stos
pop
outs
cmp
or
jnp
xchg
popf
ins
sub
sbb
or
mov
and
cmc
stc
ins
fsub
cmp
adc
dec
adc
sub
fs
push
inc
cli
fcomp
jmp
retf
inc
mov
sahf
jno
jecxz
cdq
jo
idiv
xchg
popa
push
sbb
mov
cdq
stos
(bad)
jnp
rol
test
cmp
and
mov
mov
cmp
pop
push
mov
jmp
mov
push
(bad)
lods
adc
adc
lods
out
dec
in
cld
mov
inc
mov
mov
and
jle
or
dec
gs
and
in
stc
(bad)
add
(bad)
mov
mov
aam
add
inc
jno
mov
dec
leave
sub
rcr
or
dec
frstor
mov
jno
in
push
(bad)
cmp
xor
inc
xor
loopne
jno
xchg
pop
inc
add
pop
xor
lds
mov
push
pop
cmc
sbb
or
jg
mov
(bad)
xor
js
sub
cmp
mov
inc
lea
pop
fiadd
cmp
pop
jnp
pushf
cmp
fcomp
leave
pop
(bad)
cmps
mov
push
enter
and
cli
cdq
ror
fldz
jae
in
pusha
in
scas
pop
xor
cs
inc
sbb
clc
pcmpeqw
das
shl
int
aas
sub
arpl
push
xlat
loopne
hlt
or
xchg
(bad)
and
fimul
jmp
ffree
test
movs
jae
jnp
leave
or
mov
sbb
pop
mov
add
ret
jo
mov
xlat
call
in
out
mov
popf
gs
shl
aam
lea
lea
jae
fiadd
loope
repz
stc
add
cli
(bad)
pop
inc
dec
es
fisttp
stos
stos
rcl
cmc
jnp
pop
or
sbb
xchg
cmp
sbb
out
mov
sbb
in
xor
ss
in
sub
(bad)
mov
shr
jg
push
les
fcom
xchg
cmp
cmps
fiadd
rcl
sbb
sbb
movs
pop
sub
sub
ds
jmp
cmp
jge
std
adc
rcr
addr16
stc
rcl
or
inc
push
shr
or
dec
lock
shr
sbb
pop
sahf
add
cmp
aas
clc
xor
push
push
not
sbb
cmps
or
(bad)
pop
lods
aas
test
int3
mov
aam
sbb
ret
les
rcr
loop
pop
inc
xchg
inc
(bad)
cmps
pop
shl
je
xchg
push
mov
(bad)
jnp
add
xor
push
sub
in
mov
aas
leave
jg
les
stos
cmp
dec
aad
imul
inc
jge
loope
push
lock
sub
aam
jp
xchg
outs
xor
xor
add
cmp
mov
jne
pop
push
test
icebp
ins
inc
push
cmp
dec
mov
(bad)
test
push
xor
add
icebp
or
inc
daa
bound
jae
sti
pop
and
push
ins
int
leave
loopne
mov
pop
loope
popa
ds
pop
rol
ss
adc
(bad)
rcl
sbb
xor
aaa
enter
xchg
sub
cmp
xor
add
jle
adc
xor
out
out
arpl
into
enter
popf
dec
and
rol
jg
xchg
fcom
aas
fcom
loope
adc
cmp
xchg
sub
mov
xor
outs
pop
jge
jns
jmp
test
xor
push
mov
clc
rcr
inc
repnz
mov
sbb
stos
test
cmp
imul
dec
arpl
fisub
outs
mov
dec
mul
sbb
in
sub
das
sub
cwde
pushf
mov
add
xor
sbb
dec
add
leave
aas
push
fmul
adc
jnp
pop
sar
popa
inc
cmps
jle
addr16
jns
or
pop
outs
sti
xchg
outs
mov
movs
mov
sahf
mov
in
dec
fsubr
cdq
adc
rcr
xor
sbb
leave
js
and
(bad)
lahf
inc
mov
jecxz
dec
jmp
or
(bad)
push
fcmove
and
(bad)
pop
jecxz
sub
adc
dec
(bad)
push
inc
ja
(bad)
div
(bad)
fidivr
fucomp
call
leave
fdivr
iret
cmp
jg
and
(bad)
enter
cs
adc
jo
aaa
cmp
jl
popf
xor
rcr
lds
adc
add
push
ss
sub
mov
sub
xchg
movs
or
mov
pop
xor
cs
pop
into
pop
fadd
stc
add
sub
dec
adc
push
jg
add
std
ins
jne
and
call
xor
es
xchg
mov
dec
jae
ins
cwde
and
out
cmp
xlat
(bad)
xchg
rcl
scas
loopne
(bad)
cld
xor
pop
sub
imul
sbb
out
sub
sbb
or
xor
call
pop
jle
cmp
adc
cs
rcr
sbb
pop
std
cmp
call
mov
adc
fwait
jecxz
shl
xchg
fcomp
nop
sbb
test
hlt
adc
rcr
rcr
inc
arpl
pop
push
gs
cdq
adc
cmp
mov
fidiv
cmc
adc
adc
fidivr
ror
cmc
push
push
pop
repnz
sti
idiv
dec
add
stos
xor
mov
xor
(bad)
and
jg
sar
scas
test
pop
aam
pop
push
mov
sti
xchg
mov
mov
mov
and
loopne
mov
ds
pop
out
xchg
or
sub
xchg
sbb
jp
xlat
repz
pop
mov
add
cwde
dec
pop
mov
or
or
inc
dec
jecxz
aaa
out
pop
scas
leave
sub
repnz
xlat
sar
jb
cmps
pop
and
dec
ins
lds
add
in
pop
add
jae
sar
call
inc
push
int3
ds
scas
mov
dec
js
mov
xchg
mov
loop
movs
sar
inc
popf
mov
fidiv
pop
ds
dec
fsub
push
jnp
stos
fwait
adc
cmp
cmps
ins
(bad)
push
ins
mov
push
test
ds
jge
mov
mov
and
es
data16
jns
in
mov
add
push
or
clc
mov
sub
cs
cmp
sbb
add
ror
leave
sub
jbe
into
dec
xchg
ret
cdq
dec
inc
test
xor
mov
test
sti
in
outs
sar
dec
mov
push
jmp
lea
frstor
aas
lea
or
and
mov
imul
dec
setle
fs
(bad)
repz
dec
jbe
push
mov
push
and
inc
sub
cmp
or
and
loope
dec
push
cwde
mov
jb
add
or
pop
jp
hlt
(bad)
imul
pop
adc
sub
mov
shl
lods
inc
push
push
cdq
mov
xor
and
fcmovnu
xor
js
cmc
out
xchg
mov
jne
xchg
or
shl
aad
in
cmps
je
sbb
arpl
icebp
dec
mov
ficom
cmps
push
sahf
push
popa
call
out
test
push
into
inc
retf
cld
adc
push
jp
cld
ds
repnz
mov
inc
loop
test
sbb
mov
inc
mov
(bad)
jbe
ins
or
sub
xor
stos
cmp
jbe
mov
cli
jmp
popa
in
xchg
ss
push
test
shl
pop
mov
cmps
mov
cmc
fcom
add
adc
cmp
jbe
mov
mov
pushf
xchg
js
mov
test
int
fcom
lea
add
push
push
loope
mov
lods
(bad)
rcl
mov
cmp
call
pop
ret
rol
jne
aaa
push
cmp
outs
sahf
imul
inc
cmps
push
movs
nop
xchg
imul
push
inc
or
dec
sub
stc
test
mov
push
push
fadd
sub
and
dec
push
test
dec
pop
sub
jl
daa
and
adc
stos
in
(bad)
pop
sub
push
dec
pop
jp
xchg
and
adc
and
sbb
ins
sbb
lods
in
stos
xchg
lods
jle
pop
or
sub
cdq
test
push
lahf
or
xor
xor
(bad)
ins
push
or
pop
pop
in
(bad)
cwde
inc
shr
enter
xchg
dec
jge
mov
std
sti
imul
adc
xor
push
prefetch
(bad)
push
push
imul
das
cld
fsin
mov
inc
jbe
push
mov
mov
fist
popa
shl
inc
lahf
mov
fnstcw
in
je
dec
(bad)
scas
cmp
push
pop
int3
popa
clc
int3
push
cwde
movs
jmp
cmps
cmps
xchg
mov
cmp
ins
or
xor
sub
outs
enter
inc
pop
jecxz
adc
inc
retf
dec
dec
pop
xchg
push
sub
lahf
jo
scas
mov
out
or
sbb
ins
bnd
shl
shl
(bad)
ret
mov
ds
dec
xchg
push
sti
mov
test
int3
stos
js
dec
mov
fisttp
push
add
add
test
das
lods
popf
jns
and
xchg
inc
in
in
xor
sbb
fs
sbb
stos
mov
and
jnp
test
xchg
fwait
add
xchg
int
or
or
ins
(bad)
jb
pop
mov
jmp
xchg
mov
lods
aad
cli
add
mov
test
inc
xor
lock
fsub
mov
push
(bad)
pushf
stos
test
fild
xor
(bad)
rcr
sbb
push
xlat
push
pop
jo
inc
mov
jl
jmp
xchg
lds
dec
lahf
jge
cmp
xor
les
(bad)
jl
shl
sahf
dec
mov
mov
aad
gs
and
cmp
dec
mov
xor
int
loop
scas
fsub
jae
vmovntdq
mov
xchg
ret
into
adc
in
push
repnz
sub
jl
inc
xchg
(bad)
iret
leave
imul
clc
int
inc
icebp
cli
add
dec
ret
adc
xchg
adc
jne
shl
jg
int
lods
(bad)
hlt
sbb
mov
rcr
shl
xor
mov
xchg
mov
outs
pop
gs
cmps
sub
int
pop
call
ret
adc
cmps
dec
mov
jnp
xchg
push
fbld
or
out
xlat
(bad)
rcl
xchg
dec
sbb
aas
jb
cld
dec
xor
mov
aas
ins
repnz
push
ins
xchg
ret
inc
out
(bad)
imul
xor
dec
es
jno
in
(bad)
and
dec
pusha
push
push
mov
jl
ins
jge
out
stos
out
sahf
enter
sbb
jmp
mov
retf
daa
pop
into
ret
cmps
out
adc
xchg
sahf
sbb
aaa
mov
mov
mov
shl
icebp
mov
lods
pushf
bound
into
jno
xchg
mov
mov
adc
jg
pusha
enter
fs
sub
jge
push
mov
pop
js
test
mov
outs
push
js
dec
or
lods
pop
mov
out
test
test
(bad)
xor
sub
adc
pushf
int
(bad)
retf
mov
ins
dec
fwait
ja
es
cld
jmp
mov
(bad)
cmp
dec
xor
lods
mov
cmp
call
aam
int3
dec
mov
rol
shr
test
sbb
sbb
stos
test
push
cmp
daa
xor
outs
ss
int
dec
(bad)
sti
jno
mov
es
pop
aam
jecxz
lock
inc
(bad)
cmp
fsubrp
outs
mov
cs
lods
iret
mov
cmp
(bad)
jecxz
xor
adc
out
xlat
outs
pop
outs
test
xor
mov
sub
xchg
cwde
cmp
test
ja
xor
inc
jecxz
movs
cmc
jg
std
mov
push
mov
xchg
push
jecxz
dec
sub
jmp
adc
sti
sub
in
das
int3
xchg
bound
jecxz
(bad)
sub
mov
jmp
mov
xchg
test
mov
jb
push
call
aaa
jle
ins
inc
sbb
jo
repnz
lea
jmp
xor
mov
add
xchg
es
clc
stos
rcr
not
rcl
retf
add
neg
movs
out
aas
or
pop
je
sahf
jp
rol
add
int
mov
push
retf
dec
pushf
pop
rcr
fdivr
sbb
inc
dec
mov
lds
xchg
or
pusha
lock
scas
cwde
call
es
add
rcl
mov
shl
mov
and
in
push
out
pop
mov
mov
dec
test
shl
push
mov
ss
fwait
retf
(bad)
pop
sbb
or
stc
mov
dec
sub
in
and
cmps
clc
jmp
js
pop
lahf
xchg
ja
sbb
mov
mov
xlat
mov
fisubr
push
pop
call
mov
fld
dec
in
inc
pop
jg
std
cmps
inc
loope
mov
pop
adc
hlt
addps
dec
adc
into
mov
inc
adc
pop
push
cmc
std
sbb
stos
hlt
mov
mov
aad
adc
ins
cmp
jmp
mov
add
(bad)
adc
sub
std
sar
icebp
out
clc
mov
(bad)
xor
dec
mov
or
mov
aaa
inc
ss
or
or
ins
mov
pop
inc
pop
jae
xchg
sbb
jae
daa
xchg
sub
stos
xor
daa
pop
loopne
mov
xor
mov
inc
pop
xor
jmp
xor
sbb
data16
sbb
jg
mov
rcl
dec
repz
and
inc
jmp
sbb
sbb
das
cmp
sbb
dec
outs
lods
xor
inc
pop
inc
jmp
je
sbb
xor
adc
lock
cmp
mov
mov
inc
sub
inc
(bad)
dec
pop
inc
adc
ficom
inc
cmps
bound
addr16
mov
push
js
xchg
sub
cld
je
shl
xchg
push
and
pop
cmp
popa
dec
imul
retf
ins
pushf
pop
or
int3
cld
push
adc
jbe
dec
and
adc
addr16
(bad)
jno
je
dec
pop
loop
aas
cmp
lods
inc
xor
in
inc
fbstp
imul
inc
sti
into
xchg
hlt
xchg
je
neg
fldenv
test
into
mov
popa
out
sar
push
daa
fs
stos
leave
push
sbb
daa
and
ret
mov
rcr
add
fist
sub
repz
loope
loop
icebp
sub
pop
jl
inc
leave
dec
les
add
push
ins
and
adc
or
cmc
jg
pusha
sbb
aam
xchg
pop
mov
mov
xor
mov
push
pop
test
mov
fild
mov
cmp
xchg
push
pop
shr
sub
jb
mov
test
inc
leave
rcr
sub
xor
das
dec
adc
repz
mov
and
fwait
js
div
(bad)
jmp
popa
test
xor
outs
mov
mov
out
ret
in
jl
bound
mov
inc
xor
or
movs
jno
jnp
push
xlat
inc
movs
(bad)
clc
cmc
out
loope
(bad)
add
(bad)
imul
mov
in
mov
and
stos
test
gs
jo
and
pushf
mov
adc
mov
popa
mov
lods
nop
inc
xchg
in
test
icebp
pop
shl
xchg
je
or
call
repnz
xor
dec
ja
sub
cmp
js
pop
xlat
dec
fcom
xchg
lods
pop
mov
dec
push
or
xchg
xor
shl
cmps
xor
shl
gs
mov
jo
mov
push
into
out
(bad)
dec
scas
and
test
outs
adc
(bad)
add
jno
test
mov
jmp
mov
repnz
xchg
out
fld
lods
sub
xchg
mov
test
or
add
adc
pop
and
scas
push
jle
push
push
mov
push
sub
and
xchg
fst
adc
mov
add
call
sub
(bad)
out
jnp
push
xor
hlt
pop
leave
xchg
shl
fxch
icebp
inc
adc
das
lds
stos
add
sub
out
fcmovu
stos
(bad)
xchg
mov
xchg
cs
xchg
push
jl
(bad)
idiv
fs
fisttp
mov
retf
jne
aam
enter
sub
xchg
xor
push
imul
and
mov
jge
cmps
mov
test
dec
repnz
jbe
mov
test
mov
loop
sub
add
sar
dec
out
mov
jle
jae
(bad)
cld
dec
mov
int
cmp
test
sub
popf
lea
sbb
dec
(bad)
mov
or
pop
push
mov
push
sbb
add
and
cmps
dec
mov
pop
xor
cmc
sub
or
xlat
arpl
mov
dec
ret
or
fucomip
cs
jl
jne
sti
fwait
icebp
xlat
jne
mov
(bad)
sbb
in
adc
or
push
add
je
xchg
out
add
loop
out
mov
mov
inc
(bad)
std
retf
jb
loop
mov
push
enter
mov
fnsave
ja
cmp
inc
stos
sti
inc
or
dec
iret
pop
fst
call
jge
and
push
mov
out
test
and
pop
in
pop
fimul
or
pop
mov
jb
sub
mov
out
adc
and
sub
jns
push
arpl
ins
(bad)
fsubr
xor
adc
shl
sub
clc
test
repnz
adc
push
movs
pop
cmp
xor
mov
sbb
pop
and
(bad)
xchg
ds
scas
jnp
ins
or
cli
adc
aas
pop
push
jmp
gs
mov
mov
inc
fsubr
fisttp
adc
(bad)
in
xor
les
xchg
cmp
in
and
stos
mov
out
xchg
mov
call
int
sub
jno
fstp
push
leave
xchg
dec
pop
adc
or
jmp
mov
jl
dec
gs
sub
shl
ret
test
mov
and
rcr
mov
and
sub
in
jo
lods
dec
mov
xchg
(bad)
mov
mov
shr
mov
sbb
inc
push
icebp
or
add
push
repnz
test
jl
sub
das
dec
push
int3
fldcw
adc
lds
pop
cmp
lds
mov
sub
sub
ins
cmp
pop
dec
push
jno
in
or
loop
jb
(bad)
arpl
fisttp
sub
cmp
into
repnz
outs
addr16
arpl
(bad)
cmp
stc
aaa
sub
inc
in
shl
or
cdq
jmp
cmps
scas
aam
or
mov
retf
cmc
lea
mov
jbe
pop
adc
sub
jle
pop
pop
and
mov
adc
dec
push
aad
push
jl
xor
xchg
js
sub
mov
pop
sbb
push
jecxz
pusha
aas
test
bound
jae
lahf
add
dec
inc
inc
gs
push
stos
add
mov
call
stc
pop
fcomp
es
cmc
mov
jl
adc
inc
shl
adc
adc
jno
or
xor
mov
adc
mov
xchg
pusha
dec
and
inc
or
and
dec
mov
int3
adc
and
mov
jg
sub
push
leave
mov
retf
sub
or
dec
mov
mov
stos
(bad)
js
js
cmp
lea
sub
sbb
pop
mov
int
test
data16
push
mov
jns
xor
mov
repz
loope
pop
mov
lock
js
test
xlat
repnz
sub
and
ret
xchg
inc
out
ss
cmp
fstp
xlat
mov
aam
cld
adc
test
movs
les
cmps
inc
in
in
adc
fs
mov
adc
jg
callw
rcl
sub
inc
push
lock
cmps
add
push
xchg
ror
mov
test
and
data16
or
(bad)
repz
and
call
mov
popa
(bad)
aad
cmps
mov
ja
xchg
mov
cvtdq2ps
jbe
sbb
pusha
dec
mov
sbb
sub
push
cmp
mov
aaa
dec
repz
inc
inc
xchg
cld
mov
sub
jp
gs
inc
(bad)
xor
jno
mov
std
cli
and
jmp
outs
(bad)
pop
sbb
xlat
daa
xchg
movs
fld
dec
or
mov
add
xchg
mov
int3
and
js
push
ret
icebp
rcr
out
push
(bad)
mov
int
xor
pusha
sbb
loope
cmp
sbb
add
push
push
stos
fcom
adc
sub
add
ins
repnz
adc
retf
mov
or
push
xchg
int
sbb
nop
aad
sub
xor
or
inc
jae
mov
mov
test
cwde
div
icebp
inc
inc
push
adc
gs
dec
pop
jmp
into
sub
loopne
lods
hlt
in
and
dec
jp
ins
mov
rol
stc
test
lahf
int3
addps
(bad)
push
adc
sbb
sbb
jg
cli
sub
add
pop
mov
jns
adc
xchg
(bad)
xchg
test
cmps
cs
pop
imul
(bad)
cmp
jns
hlt
inc
xor
lods
ficom
or
aaa
xchg
mov
lds
dec
or
mov
pusha
mov
or
ret
outs
push
sub
nop
mov
mov
ins
loopne
div
push
fsub
sub
push
(bad)
dec
pusha
cs
test
popa
in
outs
pop
mov
(bad)
ins
(bad)
(bad)
cmp
and
(bad)
into
inc
mov
popa
scas
sahf
ds
mov
(bad)
cmp
jecxz
ins
int
inc
cmp
ret
sub
dec
or
(bad)
inc
mov
hlt
and
ja
(bad)
in
mov
sub
mov
sub
pop
cmp
jp
push
ins
mov
ret
movs
push
mov
push
jne
fnstcw
pop
pop
jl
mov
test
(bad)
pop
dec
dec
add
xlat
lods
je
xchg
fld
ret
and
sub
sbb
loop
sahf
adc
mov
push
mul
jnp
mov
lods
push
sbb
cmps
aam
aaa
int
pop
(bad)
mov
sbb
loopne
mov
lods
xchg
dec
(bad)
daa
bound
retf
and
inc
mov
mov
push
mov
add
mov
push
adc
push
cdq
jnp
sbb
sbb
fdiv
jmp
sub
dec
out
movs
dec
jmp
out
pop
xchg
in
int3
ror
lahf
rol
pop
in
out
mov
lock
pusha
pop
ja
pop
pushf
dec
jbe
mov
cdq
cwde
pop
mov
mov
sbb
ret
xchg
sub
call
leave
add
jmp
in
fld
hlt
inc
cmpxchg
mov
clc
stos
or
cmp
ret
dec
mov
push
popf
xchg
jne
imul
dec
ja
call
mov
int
sub
out
xchg
loop
sub
cmp
pop
cmc
out
add
push
mov
(bad)
xor
loopne
lock
pop
scas
sti
out
add
je
push
push
lods
jb
loop
iret
pop
inc
lea
or
mov
fiadd
imul
ror
int3
sbb
stos
pop
repz
int
test
aad
adc
out
repz
adc
xor
inc
sub
adc
sub
fidivr
mov
cld
jmp
out
sbb
scas
sahf
out
mov
ss
cmp
push
das
mov
jae
fwait
ss
in
jo
rol
fiadd
sahf
(bad)
sub
dec
jbe
je
aas
jae
inc
fnsave
pop
das
inc
iret
pop
loop
inc
int
into
dec
enter
inc
scas
imul
mov
inc
jmp
dec
mov
ret
mov
mov
ror
bound
or
sahf
(bad)
(bad)
mov
cmp
adc
test
in
add
mov
xchg
fcom
xchg
mov
add
adc
xchg
ss
out
cli
enter
rcr
movs
push
mov
pop
gs
int3
xor
shr
movs
es
out
test
loopne
and
cld
push
pushw
jb
idiv
jae
adc
or
add
xor
xchg
call
push
test
scas
rcl
fcomp
call
cmp
addr16
cdq
jbe
cmp
mov
cmp
add
aas
cmp
addr16
pop
jmp
sbb
je
clc
out
std
lock
inc
ja
loop
cs
cmp
mov
icebp
xor
inc
jp
add
mov
jmp
gs
dec
add
add
and
ja
in
cmp
frstor
mov
clc
popa
mov
push
or
jae
lods
sbb
repz
inc
lods
je
imul
sahf
cld
lea
aad
outs
xchg
(bad)
gs
cwde
and
sub
xchg
or
leave
and
xchg
loopne
cmp
mov
sub
addr16
dec
push
or
inc
mov
mov
sbb
mov
push
jmp
rcl
add
or
ds
cmp
dec
inc
aam
mov
xor
sbb
(bad)
sub
jge
inc
pushf
icebp
div
push
ja
xor
xchg
sub
jp
out
mov
adc
jb
dec
vfrczsd
fldcw
fisubr
outs
jbe
retf
ins
cmp
stos
adc
in
dec
ficom
fimul
call
imul
pop
stos
sbb
sbb
xchg
std
add
stos
push
int
cli
jmp
add
pop
sbb
cld
scas
push
pop
popa
xchg
not
sahf
repnz
sbb
sub
iret
mov
mov
fnstenv
movs
dec
mov
pop
mov
es
xchg
retf
jno
jns
push
cs
mov
jb
ficomp
inc
push
push
call
mov
mov
or
sub
mov
retf
jmp
fcomp
(bad)
mov
xchg
mov
mov
hlt
aam
push
dec
lods
ror
stos
cmp
pop
adc
test
lahf
jmp
std
pop
ss
fwait
mov
inc
(bad)
fcomp
daa
pop
lods
jmp
sbb
nop
inc
fstp
jb
pop
mov
into
std
jg
dec
nop
mov
arpl
pop
inc
nop
(bad)
add
add
imul
int3
add
xchg
sub
punpcklbw
xlat
jne
inc
adc
popa
mov
out
das
jmp
mov
out
in
ja
sbb
jbe
push
movs
out
inc
push
pop
or
out
mov
mov
in
xchg
adc
cwde
loopne
xchg
push
jnp
test
mov
pop
je
mov
scas
push
and
sbb
out
pop
sbb
hlt
mov
sbb
out
xlat
adc
loopne
repz
ss
mov
hlt
adc
popf
jnp
ss
mov
mov
stos
or
(bad)
adc
js
retf
mov
divps
into
movs
add
mov
and
and
push
sub
xchg
xor
xchg
dec
mov
icebp
add
aas
outs
push
cmp
dec
and
pop
pop
jmp
int
aas
xchg
dec
xchg
and
popa
jno
das
rol
adc
(bad)
sub
(bad)
push
gs
rcr
stc
inc
pusha
(bad)
adc
(bad)
mov
jns
cmp
jmp
mov
stos
pop
mov
push
push
out
or
xchg
scas
rcl
les
inc
inc
test
sti
mov
cmps
fwait
jno
push
add
and
mov
out
cld
xchg
push
pop
mov
push
xor
mov
ss
ja
hlt
lods
cmc
(bad)
cwde
adc
stos
mov
std
sahf
mov
inc
loope
xchg
inc
cmps
xchg
xor
push
out
outs
mov
or
or
mov
jo
mov
or
bound
xchg
or
in
add
push
push
xor
out
pusha
fld
jae
push
xlat
cmps
lods
pop
mov
ins
test
sub
or
int3
out
sbb
push
retf
push
mov
adc
inc
push
out
sub
jl
out
xor
rol
jnp
adc
shr
enter
jmp
aas
inc
sub
not
jg
and
fmul
add
xor
and
je
mov
cmps
nop
jno
cs
adc
test
iret
test
leave
sub
cwde
hlt
pop
push
call
and
jns
jge
sahf
mov
adc
jns
addr16
sub
iret
adc
(bad)
jo
movs
sub
cmp
lds
(bad)
in
rcr
stos
adc
push
or
lods
scas
not
mov
xor
pushf
scas
cmp
imul
repnz
adc
inc
outs
and
imul
and
push
scas
dec
fwait
and
jp
sbb
jne
cmp
data16
add
add
fdiv
inc
mov
xlat
scas
repnz
mov
add
pop
int
mov
push
outs
sub
das
pop
sbb
enter
popa
aaa
mov
dec
das
cld
cld
popa
sti
dec
sub
icebp
pop
mov
out
das
aaa
les
inc
inc
lods
cdq
push
imul
mov
fadd
sbb
dec
mov
fucomp
stc
out
mov
ret
sub
mov
scas
dec
(bad)
mov
xchg
or
push
xor
push
bound
out
push
and
inc
add
(bad)
bound
jl
push
mov
and
js
adc
cmp
inc
mov
add
xlat
cmp
push
pop
icebp
xor
mov
mov
dec
xlat
inc
ficomp
loop
mov
push
and
xchg
repnz
out
and
fwait
pop
mov
or
sti
xchg
cmc
daa
std
loop
ror
add
sub
fiadd
mov
sub
pop
dec
push
popf
jnp
(bad)
lods
mov
mov
and
fs
xor
sti
retf
addr16
mov
aaa
test
into
pop
dec
shl
pop
cmp
loop
push
dec
jo
push
jns
shl
stos
repnz
jl
sub
pop
xchg
std
popf
xchg
test
rcr
and
mov
add
pushf
out
xchg
nop
sub
outs
es
mov
dec
sbb
jno
mov
movs
sub
push
and
jmp
xor
jge
jne
gs
outs
jecxz
pop
sub
loope
mov
mov
pop
push
mov
ds
mov
(bad)
mov
push
dec
outs
pop
cld
jg
call
nop
push
sbb
sar
sbb
inc
cmc
jne
inc
inc
sahf
in
stos
push
div
add
stos
jae
xor
std
sbb
out
(bad)
retf
enter
or
ss
sbb
ins
call
dec
cmp
dec
dec
mov
mov
inc
mov
aam
mov
(bad)
cli
pop
loopne
lea
jne
dec
or
inc
or
(bad)
sbb
pop
or
les
cdq
les
inc
ffreep
and
js
das
xor
mov
into
mov
adc
shl
pcmpgtb
call
mov
aad
xor
mov
mov
push
jns
add
lahf
xchg
fld1
xchg
test
pusha
sbb
mov
add
add
jmp
into
ss
and
ss
mov
sbb
mov
(bad)
sar
imul
loop
cli
or
or
pusha
call
sahf
(bad)
or
nop
stos
inc
xchg
pop
cmp
not
jns
addr16
cwde
movs
mov
ss
jnp
dec
fisttp
adc
hlt
aam
jno
dec
into
cld
jmp
das
inc
xor
lea
or
inc
lods
jecxz
or
sbb
mov
inc
mov
push
rcr
aas
cmc
bound
mov
(bad)
mov
imul
icebp
pusha
imul
dec
jae
mov
stos
add
push
clc
xchg
lods
dec
jae
mov
mov
sbb
pop
dec
add
ins
jb
bound
inc
cmp
inc
jmp
outs
sub
movs
ret
jbe
clc
into
fisub
add
(bad)
aad
stos
cmp
icebp
(bad)
push
repz
(bad)
or
cwde
addr16
pop
pop
jmp
stc
sar
popf
dec
(bad)
mov
stos
js
(bad)
pop
hlt
test
mov
pop
jo
shl
das
movs
sub
cmc
out
into
mov
ror
fnstcw
push
lds
lods
sbb
mov
mov
add
pop
test
lea
xlat
inc
popf
sub
cmovae
jle
rcl
cmp
(bad)
cmp
stos
test
call
push
test
push
cmp
xchg
outs
in
adc
scas
jno
push
pop
mov
add
fmul
mov
in
dec
jecxz
cmps
or
cmp
aaa
imul
xchg
xchg
sbb
push
adc
arpl
aad
add
mov
inc
mov
call
xchg
add
mov
sub
in
xlat
js
sub
inc
cmp
sub
mov
dec
mov
stos
jge
lea
out
outs
aam
mov
sub
xchg
(bad)
loop
repnz
add
mov
call
test
xchg
vpunpckldq
sbb
mov
in
dec
leave
cmp
push
in
retf
out
adc
adc
sbb
sti
inc
mov
pop
outs
or
xor
repnz
jge
inc
xchg
mov
adc
std
ret
push
imul
inc
dec
imul
jbe
pushf
mov
push
sbb
lods
pusha
and
or
mov
loop
pop
repnz
test
sbb
mov
das
jmp
cli
jge
(bad)
cld
mov
push
pushf
mov
call
outs
cmp
jns
dec
sub
jge
daa
loope
inc
lock
fwait
inc
aad
ret
or
fldpi
hlt
lea
outs
dec
mov
adc
cmp
dec
pop
lods
add
aad
gs
in
and
data16
std
dec
dec
stc
adc
mov
adc
cmps
fs
out
inc
sub
inc
test
scas
outs
cwde
ds
leave
xor
clc
cmp
fnstsw
pop
(bad)
sbb
in
or
sub
aaa
loopne
fnstcw
cmps
adc
gs
data16
retf
inc
icebp
out
sbb
xchg
dec
add
aad
retf
mov
lods
xchg
add
jl
sub
pop
fist
les
cmp
push
in
xor
inc
inc
sbb
stos
imul
push
sub
mov
cs
or
cld
xor
shl
loop
mov
sub
clc
jmp
hlt
test
loop
and
dec
jae
pop
xor
push
mov
or
xchg
jge
pop
idiv
dec
hlt
xchg
test
nop
iret
inc
cli
sar
(bad)
out
mov
clc
or
or
pop
sbb
data16
mov
fmul
jp
or
and
data16
cs
or
js
bnd
jne
sub
and
in
outs
aam
mov
push
lods
push
mov
push
in
xor
leave
mov
sbb
jne
pop
adc
les
xor
add
pop
pop
xor
jnp
test
or
sub
inc
cmps
imul
push
stos
fcomp
aam
movs
push
sti
rcr
popa
push
not
popa
in
out
imul
int3
ins
pop
in
xchg
cmc
push
and
cmps
dec
rcr
push
inc
lahf
je
push
pop
sub
stos
push
ret
pusha
mov
mov
in
xchg
mov
push
mov
mov
add
push
push
sub
mov
lea
xor
enter
aaa
mov
cmp
ja
(bad)
enter
push
push
js
scas
mov
mov
arpl
into
and
aas
in
jbe
leave
cs
push
jne
xchg
push
inc
imul
push
adc
mov
jbe
xor
xchg
mov
mov
add
shl
cwde
inc
icebp
mul
fadd
push
sbb
fidiv
shl
test
dec
push
jmp
ficom
icebp
jne
push
sbb
(bad)
stos
data16
push
in
pop
adc
ss
(bad)
ins
jbe
and
cmp
shr
pop
frstor
xchg
repz
pop
cmc
aaa
jecxz
add
sub
cs
mov
jne
sub
pop
cmp
lds
stos
push
dec
fnstcw
movs
pop
aaa
mov
ret
pop
or
mov
das
test
fwait
out
xchg
jg
lahf
pop
and
test
mov
inc
or
cs
rcl
sti
sbb
xor
js
mov
repnz
dec
arpl
dec
pop
(bad)
outs
jl
hlt
test
dec
pop
cld
jp
popa
mov
push
shl
jnp
xor
adc
mov
scas
repz
gs
or
mov
mov
scas
imul
jg
repz
cmps
(bad)
jecxz
in
xor
xchg
test
jae
js
sub
test
and
(bad)
cmp
cli
cld
outs
mov
adc
clc
or
push
scas
mov
and
push
adc
pop
adc
in
sar
ja
push
inc
and
and
pop
push
ja
xchg
inc
adc
hlt
dec
mov
out
cmc
je
push
jp
xchg
or
jnp
or
fldcw
cmp
mov
pop
adc
sub
cmp
add
(bad)
test
in
or
fwait
xchg
dec
imul
popf
and
jno
cmp
test
mov
pushw
loope
ds
cdq
mov
mov
fcom
jae
mov
(bad)
cmc
iret
jae
inc
jmp
push
ret
mov
or
movs
and
or
js
sub
jb
enter
iret
mov
add
pop
inc
imul
sub
(bad)
(bad)
clc
xchg
lods
gs
push
mov
shl
in
cmp
mov
cmps
or
xor
out
mov
dec
inc
push
or
pop
or
cmp
out
shl
cmps
cmp
mov
mul
inc
fisttp
mov
xchg
(bad)
jbe
and
pop
mov
sbb
std
sbb
sar
scas
ror
jp
data16
xor
or
or
xchg
sti
xor
cs
xor
es
adc
out
call
dec
frstor
jmp
fdiv
pop
ret
push
clc
movs
les
stc
mov
mov
inc
mov
jecxz
movs
dec
popa
push
xor
test
xor
dec
stos
push
jle
pop
and
in
dec
push
or
mov
cld
mov
pusha
sbb
pop
stos
lahf
xor
lods
mov
aam
and
outs
pop
xchg
sub
icebp
adc
pop
push
into
lds
stos
ss
dec
dec
push
xchg
add
jl
dec
lahf
mov
cmc
fbld
mov
adc
sbb
sbb
push
mov
xchg
dec
push
mov
jmp
bound
fcomp
add
jge
(bad)
data16
ds
ja
loop
push
and
push
es
add
(bad)
(bad)
ror
jmp
imul
dec
mul
cmp
inc
std
retf
inc
push
fxch
mov
lds
and
dec
adc
mov
pop
jl
push
ds
pop
and
add
cmc
mov
sub
ret
inc
cmc
xchg
cmc
outs
mov
sub
imul
fstp
jg
cmp
(bad)
jg
xor
inc
jo
mov
scas
frstor
stos
inc
xlat
aad
xchg
stos
push
iret
pop
push
jmp
add
mov
out
and
jle
cmp
(bad)
push
aaa
in
mov
ins
or
popf
scas
jmp
imul
fcom
scas
scas
fsub
add
ss
sub
adc
in
sub
pushf
clc
dec
and
push
cld
pop
add
pop
scas
and
xlat
add
cli
adc
dec
idiv
jo
sub
xor
mov
mov
fstp
es
add
fld
repz
das
inc
fmul
test
fisub
add
test
push
sub
dec
pop
out
ja
imul
les
sub
lods
add
sub
mov
call
cmp
push
jbe
fistp
call
inc
or
test
mov
cmps
out
cmp
sbb
jmp
add
mov
test
sub
stos
sbb
jmp
test
xor
dec
fsincos
or
or
fcom
icebp
pop
adc
jl
inc
sub
ja
and
xchg
pop
call
and
xor
mov
ret
jl
dec
leave
xor
add
lods
popf
out
xchg
rcl
sbb
jae
mov
in
jns
dec
pop
dec
mov
out
lods
(bad)
ins
(bad)
xchg
push
pusha
sub
test
std
sub
rcl
scas
enter
inc
jecxz
int
jmp
dec
xchg
mov
xlat
or
into
(bad)
jb
cld
add
pop
xor
lahf
xor
sub
imul
pop
add
fiadd
stos
dec
push
sbb
js
dec
jae
rol
shl
dec
(bad)
loope
xchg
test
and
shl
loop
pop
cmp
nop
int3
pop
mov
mov
mov
inc
dec
ja
jge
rcl
sub
imul
inc
cmp
fmulp
mov
jge
loopne
pop
mov
dec
dec
loop
outs
inc
loop
add
ins
sbb
mov
mov
jle
add
mov
sahf
adc
dec
(bad)
fnsave
idiv
push
and
push
push
mov
fisub
sar
out
push
push
sub
jae
cdq
bound
xor
and
xchg
mov
shr
pop
mov
pop
inc
dec
int
or
out
pop
mov
sbb
xchg
dec
js
jl
pop
sar
pop
xor
gs
pop
stos
cmps
shl
or
mov
dec
cs
out
sub
or
ds
fisub
add
pop
fisttp
jge
xor
mov
sub
mov
jge
sub
ja
sbb
pop
shl
imul
daa
jle
lds
xchg
push
out
lahf
mov
mov
push
mov
(bad)
and
sub
inc
mov
sub
mov
pop
add
ins
and
or
dec
or
call
mov
popa
xchg
sub
or
(bad)
imul
int
arpl
iret
jbe
push
jae
inc
in
cmp
hlt
or
imul
add
dec
mov
inc
mov
and
jae
jecxz
ins
pusha
outs
push
jecxz
(bad)
jmp
dec
pop
push
pushf
sub
cmp
aaa
retf
repnz
cwde
xor
enter
rol
ins
inc
rol
dec
lea
or
in
jbe
mov
xchg
popf
sub
sub
xchg
pop
and
popa
cmps
inc
mov
add
sbb
jne
scas
add
popf
push
mov
cdq
rol
and
sbb
ss
sar
test
sbb
adc
repnz
pop
jg
mov
adc
dec
lods
js
inc
mov
push
inc
jle
xchg
lock
rol
mov
mov
or
or
mov
push
xchg
popf
fldenv
mov
sbb
mov
mov
push
mov
jb
mov
pop
add
aaa
daa
pop
dec
(bad)
int
pop
or
sti
pop
cmp
sub
movs
xchg
and
xchg
adc
jp
clc
mov
or
fbld
jmp
or
aad
dec
inc
push
cs
(bad)
into
fs
inc
and
add
test
leave
lock
adc
out
scas
dec
aad
cmp
out
pop
xor
push
mov
jo
retf
cs
jg
jo
fbstp
cmp
push
repnz
inc
mov
test
lods
xor
sbb
scas
ins
(bad)
fcmovb
int3
sahf
sbb
mov
xor
rcr
mov
hlt
pop
jb
push
sub
jns
pop
jns
add
test
sub
xor
adc
push
mov
inc
nop
popa
cld
mov
mov
fisttp
sbb
cdq
jl
out
test
retf
aas
stc
enter
sbb
pop
in
pushf
add
int3
sub
sub
sbb
loop
hlt
add
sbb
(bad)
(bad)
lods
movs
inc
push
pop
mov
outs
jne
mov
push
jge
bound
scas
inc
lods
xchg
jmp
stc
add
cmps
sbb
jmp
jno
xchg
push
popa
pop
loope
out
outs
cmp
stos
pop
xchg
rcr
pop
ficom
mov
pop
sub
mov
fsubp
rol
sbb
sbb
dec
mov
imul
push
or
test
push
hlt
xlat
sbb
movs
mov
mov
lods
mov
int
test
pop
dec
add
mov
mov
into
nop
mov
repnz
enter
shl
aad
xor
jecxz
into
add
sbb
push
in
dec
adc
(bad)
adc
lods
push
leave
pop
cmp
inc
pop
ret
out
loopne
xor
jecxz
cmp
jmp
cdq
add
gs
jno
xchg
inc
hlt
xlat
mov
fsub
pop
in
jbe
inc
cmps
add
mov
ss
inc
sbb
repz
add
pop
imul
mov
int
mov
push
jecxz
imul
adc
outs
sub
xor
cmps
mov
mov
push
and
test
pop
loop
shr
div
pop
jns
jb
scas
loopne
mov
fld
sar
scas
inc
cmps
iret
stos
bound
mov
lea
(bad)
sbb
mov
and
inc
and
add
pop
jmp
mov
call
jne
retf
movs
test
xchg
mov
xor
mov
sti
iret
lock
loope
xchg
aas
out
out
xchg
in
pop
aam
or
pop
loop
stos
(bad)
mov
mov
sub
xor
es
inc
jbe
data16
addr16
fs
std
clc
adc
mov
loopne
mov
xor
xchg
stos
pop
jmp
xchg
repz
dec
icebp
jg
(bad)
cld
int
stos
les
dec
sub
xchg
adc
imul
push
inc
inc
dec
ins
mov
js
clc
sbb
ins
mov
sar
push
sub
mov
fldenv
xor
cmp
js
sbb
add
push
movs
(bad)
repnz
xchg
push
add
sbb
mov
and
mov
mov
jns
jp
test
sub
xchg
inc
data16
scas
(bad)
sbb
xor
or
shl
clc
jnp
in
stos
fs
stos
xchg
cld
mov
ja
das
subps
icebp
call
push
movs
fcomp
inc
ror
push
pop
in
sbb
pop
xchg
mov
jecxz
daa
mov
stos
inc
cmp
jmp
xor
aad
mov
rcr
mov
shr
or
rcr
and
push
mov
sbb
out
leave
add
ds
nop
dec
lahf
fnstenv
test
outs
ds
in
pop
test
mov
es
mov
mov
jo
lods
sbb
stos
or
dec
jl
retf
test
mov
adc
ror
ins
test
inc
sub
lock
call
mov
dec
popa
pop
adc
loopne
rcl
pusha
sahf
jmp
sbb
stc
jl
inc
dec
enter
lock
or
fimul
imul
sbb
mov
sbb
xchg
sbb
adc
scas
xchg
add
cld
push
inc
cdq
inc
cmp
mov
hlt
cmp
loop
jle
add
inc
(bad)
mov
mov
dec
mov
cmp
in
dec
sub
cli
or
dec
jbe
cmp
jae
jbe
repz
es
cmps
push
inc
xchg
jle
test
mov
jo
shr
jmp
mul
je
push
es
or
pop
xchg
pop
add
scas
push
mov
dec
movs
cmc
mov
and
mov
mov
jb
lods
pop
push
(bad)
or
jl
pushf
out
mov
ja
dec
ficom
fs
sbb
mov
add
gs
jo
lahf
jecxz
fs
cdq
lods
dec
or
and
xchg
jbe
sbb
mov
pop
push
cmps
mov
call
mov
fisttp
push
mov
push
jo
ins
(bad)
dec
dec
ins
xchg
jmp
add
inc
popa
push
iret
out
js
mov
add
stc
jo
adc
div
push
fsubp
mov
pop
ficom
bound
sbb
iret
rcl
push
loope
stc
movhlps
cmps
in
lahf
fst
dec
jmp
jp
xchg
retf
fidivr
outs
adc
cmp
mov
cmp
lods
mov
dec
test
cmp
sbb
add
cmp
loop
call
dec
xchg
enter
jnp
pop
xchg
push
sub
inc
dec
cli
(bad)
add
sbb
fistp
iret
push
cli
popf
mov
fnstcw
loop
popf
jecxz
ret
inc
or
fwait
or
mov
add
ret
or
add
dec
sub
push
(bad)
sub
xor
dec
out
mov
cmp
or
aaa
ds
jbe
or
push
sub
jne
adc
rcr
jbe
sbb
inc
inc
movs
clc
stc
test
es
je
cmp
fs
mov
gs
les
arpl
call
fdiv
or
dec
push
movs
lahf
cmp
sbb
or
mov
cmps
mov
loopne
cmps
cmps
adc
mov
mov
fldcw
dec
mov
jo
bound
scas
addr16
jae
cmps
mov
aad
fisubr
clc
pop
fldenv
std
fs
and
enter
ins
adc
xor
inc
sahf
mov
cli
loope
adc
cld
push
or
mov
(bad)
sub
rep
mov
mov
into
adc
shl
ins
mov
jl
or
adc
mov
jmp
and
call
and
pusha
imul
sub
push
xor
or
push
fwait
lahf
inc
inc
pop
pop
aas
mov
xor
addr16
add
out
jmp
add
call
loope
enter
cmc
lods
call
add
scas
cmps
fs
or
and
outs
xchg
mov
stc
add
mov
(bad)
sahf
ss
std
ins
push
add
movs
in
mov
lods
adc
test
dec
adc
or
xor
lock
ret
mov
icebp
xor
push
js
jne
mov
xor
add
rcl
cmp
das
(bad)
cmc
push
jo
xchg
into
mov
sar
fiadd
pop
push
adc
xchg
(bad)
pop
mov
jnp
mov
cmps
xor
pop
jge
push
pop
mov
xchg
cmp
add
jl
pop
lahf
int3
fbld
xchg
leave
jp
clc
test
in
mov
and
mov
test
inc
test
clc
and
pop
xchg
aam
push
leave
jmp
lods
mov
out
sub
jp
ficomp
in
imul
mov
ss
rcr
sbb
and
jge
cdq
fld
sub
rcl
dec
ret
mov
scas
lahf
es
push
mov
fsubr
ja
cmp
and
mov
inc
jae
test
adc
sub
xchg
std
iret
(bad)
mov
inc
lds
cwde
rol
jae
xor
cmp
sub
lods
ins
fisub
loopne
xchg
inc
xlat
mov
pop
xor
ins
add
(bad)
movs
lods
mov
xor
cmc
adc
jg
pop
mov
jbe
(bad)
jno
mov
loop
sar
push
inc
(bad)
hlt
clc
or
lea
sti
aad
sbb
jl
cmp
pop
mov
mov
jb
or
cld
or
test
outs
pop
add
popa
outs
inc
cli
sub
ror
pop
mov
shl
xchg
jp
inc
(bad)
adc
mov
fisubr
pop
call
and
(bad)
repnz
sbb
jmp
out
fimul
xchg
sbb
scas
mov
neg
or
(bad)
cmc
mov
adc
fbstp
push
test
mov
adc
add
fdiv
and
cmps
inc
fisubr
test
sbb
xor
test
cmp
xchg
(bad)
retf
ret
retf
push
lods
or
bound
jmp
outs
sub
pop
inc
les
pusha
add
(bad)
pop
cwde
lds
cmp
leave
dec
jbe
int
xchg
out
mov
pop
dec
fwait
out
cmp
aad
std
mov
ret
xor
mov
push
add
inc
add
mov
adc
sub
dec
jmp
jmp
adc
mov
fwait
mov
(bad)
fidiv
cs
mov
sti
adc
inc
mov
fxch
push
sub
call
fild
cmp
cwde
js
pop
lea
add
xor
push
ss
mov
dec
mov
push
rcl
cwde
loop
jg
mov
aas
pop
shl
sub
pop
and
add
pusha
sub
jg
mov
sahf
cli
in
adc
in
ror
cmp
loopne
sub
stos
stc
shl
mov
and
rol
ficom
mov
pop
push
les
sub
cmps
cli
inc
scas
pop
xchg
(bad)
iret
fidiv
(bad)
mov
jae
inc
sub
mov
aam
inc
dec
jg
push
jns
jp
mov
jbe
test
icebp
xor
into
jnp
sub
push
sub
nop
sbb
cdq
mov
mov
inc
or
sbb
mov
jp
inc
test
out
xor
dec
push
call
mov
push
adc
sub
jnp
mov
and
add
sbb
xor
adc
ret
push
retf
pop
lea
clc
xchg
mov
jno
fwait
jbe
shr
inc
sbb
jl
xchg
pop
rcl
les
int3
push
(bad)
mov
(bad)
hlt
dec
aad
into
xchg
(bad)
dec
mov
stc
jb
mov
inc
adc
scas
aas
cmc
dec
add
fcmovnbe
repnz
pop
retf
sub
cs
adc
mov
adc
leave
call
les
rcr
or
leave
dec
ss
not
jbe
movs
pop
fild
inc
jnp
(bad)
int3
fs
cli
sbb
dec
push
dec
iret
paddw
stos
inc
add
pushw
jge
xchg
jmp
cwde
outs
clc
mov
adc
nop
xchg
aaa
cmp
push
dec
out
(bad)
mov
cwde
jns
(bad)
adc
icebp
sahf
inc
stc
dec
cmps
cld
push
cwde
(bad)
dec
and
dec
fucom
push
(bad)
stos
sub
xchg
jnp
jo
or
(bad)
xchg
and
pop
and
repz
push
mov
and
and
hlt
nop
lods
sub
push
push
aad
add
adc
sub
lds
pop
fdiv
test
repz
(bad)
sbb
out
rcl
imul
inc
fisttp
jle
pop
dec
xor
clc
scas
pop
or
fld
jnp
cs
and
push
inc
cmp
xchg
jecxz
and
outs
mov
imul
lock
cmps
jns
cmp
cmp
sahf
nop
(bad)
ficomp
pop
xchg
and
push
sub
jbe
jo
pop
xchg
xchg
in
pop
leave
or
stos
xchg
xchg
fistp
push
rol
movs
call
jp
out
loopne
add
cmp
adc
in
xor
cmp
sbb
ds
in
outs
pop
neg
nop
pop
ds
retf
jb
jae
aad
cmps
adc
mov
call
inc
or
mov
mov
ins
xchg
jno
mov
ficom
popf
ins
enter
xchg
jg
aad
jg
(bad)
jecxz
je
sti
arpl
cmp
sub
setg
int3
adc
inc
sbb
inc
std
(bad)
fnstenv
inc
add
pop
mov
dec
mov
je
(bad)
mov
xchg
jb
adc
mov
sbb
jp
fcmovu
mov
push
jmp
mov
push
xchg
out
jbe
lock
mov
xlat
xchg
cwde
outs
cmc
adc
sub
sbb
push
cli
and
adc
ins
sub
dec
inc
and
repz
adc
clc
jno
popf
sbb
dec
fsubr
sub
scas
out
fadd
icebp
scas
sbb
dec
xchg
xchg
(bad)
sub
sar
test
icebp
test
leave
adc
inc
mov
push
std
push
out
mov
cmps
retf
push
(bad)
into
dec
pop
mov
jae
gs
scas
push
jmp
cmp
mov
sub
jp
nop
test
pushf
sub
leave
ret
inc
add
in
sti
popf
repnz
call
fdiv
sar
jnp
cmp
rcr
mov
mov
pop
xchg
and
dec
xor
out
dec
jg
aaa
cmc
push
mov
mov
pop
xchg
dec
fidivr
jbe
cmp
clc
mov
icebp
mov
push
xchg
push
mov
das
popa
repz
dec
mov
in
mov
sbb
jbe
inc
cmps
inc
imul
inc
push
push
in
mov
pushf
mov
iret
cmp
cs
jmp
xor
push
xchg
push
out
aaa
aas
cwde
mov
fmulp
cmps
push
aas
inc
mov
popf
nop
scas
in
iret
movhps
xchg
mov
push
mov
fisubr
fistp
xor
outs
and
adc
push
lahf
scas
in
shl
cmps
imul
lods
pop
and
inc
pop
sub
jne
jmp
push
fistp
dec
test
and
(bad)
enter
arpl
push
test
fisub
xchg
lds
cld
clc
xor
(bad)
xchg
or
out
ja
cmp
inc
outs
test
dec
(bad)
mov
mov
das
cmp
lods
int3
les
cmp
stos
xlat
ins
in
in
stos
sbb
jae
call
jecxz
stos
inc
cmps
and
xchg
mov
inc
jnp
fdivr
(bad)
mov
imul
xor
repz
xor
sub
push
fstp
aam
push
add
and
adc
fwait
mov
or
(bad)
sti
inc
and
jne
stos
retf
push
add
or
push
xchg
test
ficom
dec
jae
sbb
cmp
sbb
dec
ins
aaa
adc
iret
cli
shl
bound
add
mov
push
adc
add
mul
jbe
sbb
cli
jl
mov
fs
fst
xchg
je
mov
add
push
into
stos
test
aas
aaa
push
mov
(bad)
jecxz
aad
and
lods
mov
add
out
dec
sahf
and
sub
sbb
add
scas
popa
dec
pop
retf
in
xor
sar
gs
cli
and
mov
fbld
jmp
jne
add
fbstp
sbb
fcomp
jne
cdq
shl
aam
xor
(bad)
jno
mov
shr
(bad)
mov
(bad)
push
mov
mov
stos
sti
btc
jnp
dec
shr
mov
test
(bad)
(bad)
push
movs
rcl
retf
and
and
cmp
sub
inc
scas
iret
aam
fcom
mov
adc
inc
js
sbb
dec
data16
jmp
push
sar
aad
repz
sub
jbe
sub
inc
aaa
es
out
mov
shl
mov
mov
cmp
frstor
outs
sub
(bad)
out
inc
cdq
js
dec
and
mov
aas
and
cwde
push
ins
pop
mov
ret
lahf
mov
push
call
clc
rcl
cmp
jb
push
sbb
mov
xor
adc
mov
jnp
inc
rcr
sbb
out
loop
mov
popf
test
xor
fstp
sub
mov
sbb
mov
sets
xchg
icebp
mov
xchg
cmps
fbstp
or
mov
push
(bad)
out
xchg
xchg
fmul
aaa
inc
mov
jo
adc
das
ins
jmp
mov
adc
imul
cmps
call
bound
je
xor
jge
out
jmp
add
(bad)
out
cmp
mov
and
dec
frndint
add
sbb
pop
pop
cmps
or
xor
dec
in
jae
xchg
(bad)
les
mov
ror
fs
xor
or
es
inc
cmp
xchg
inc
jg
mov
mov
call
sub
pop
add
ins
bound
mov
or
xchg
jno
mov
pop
xchg
(bad)
jle
mov
jbe
pop
xchg
or
adc
add
dec
xchg
push
cs
int3
adc
sar
or
pop
enter
nop
adc
pop
cs
mov
and
mov
ins
icebp
sti
les
inc
in
pop
mov
and
pop
je
xchg
xchg
fsub
out
or
bound
pop
bound
xchg
jne
or
sub
mov
cmc
cmps
mov
and
pop
aam
mov
lods
(bad)
jno
jns
xor
retf
lea
inc
fdiv
cmps
sbb
ficom
fbld
out
(bad)
cmp
rcl
ins
(bad)
nop
scas
fild
inc
adc
push
mov
fwait
jle
xchg
cmc
xor
(bad)
mov
jnp
inc
push
add
ficomp
retf
aam
mov
add
xlat
xor
jp
add
mov
xor
mov
popa
repz
(bad)
dec
pushf
sub
daa
call
fldcw
push
jecxz
pop
shl
and
cdq
jnp
mov
jmp
sbb
adc
inc
add
scas
(bad)
push
mov
stos
lea
repnz
sub
add
inc
adc
mov
fs
sbb
imul
test
push
push
adc
std
inc
cmp
in
aaa
xchg
inc
cli
jmp
pop
scas
outs
and
or
gs
mov
into
adc
sbb
pop
call
(bad)
mov
mov
iret
arpl
sub
repnz
ret
fild
xor
fnstcw
mov
pop
loop
(bad)
jnp
lods
stos
adc
idiv
addr16
jb
cmps
movs
dec
dec
xchg
xlat
xchg
dec
mov
cmp
ins
scas
inc
mov
add
lods
pop
adc
xchg
out
test
in
mov
in
adc
cwde
push
mov
xchg
pop
mov
out
out
xlat
mov
and
int
or
pop
sbb
aam
mov
aad
cmp
loop
mov
mov
push
les
cmc
jge
fcmovnbe
adc
scas
push
mov
mov
imul
mov
(bad)
push
mov
dec
aas
shl
jp
add
xchg
lods
das
xchg
xor
add
and
rol
mov
and
ins
pop
push
sub
shr
add
in
dec
fwait
cmps
hlt
mov
and
add
adc
js
(bad)
in
xor
retf
sbb
mov
retf
sbb
and
jne
xchg
(bad)
std
sub
pop
xchg
mov
sub
sahf
or
mov
ffreep
mov
mov
addr16
cmp
cld
jmp
push
mov
rol
pusha
mov
jae
xchg
pop
cmps
std
and
les
jae
int
iret
rcr
scas
adc
sub
push
(bad)
pop
daa
mov
and
jns
or
mov
push
or
(bad)
sysret
sub
ret
test
jns
mov
rcr
push
mov
push
fcmovne
fcom
cmp
pop
sar
lods
jno
pop
push
pop
outs
arpl
loopne
test
imul
sbb
int
(bad)
hlt
cmc
popf
sbb
in
xchg
cmp
cmps
adc
out
adc
ret
sub
sahf
jmp
cli
fsubr
and
jmp
fld
inc
inc
inc
add
dec
cmp
adc
mov
xor
ret
pop
xchg
xchg
mov
ret
mov
in
loop
mov
or
mov
hlt
mov
mov
imul
jo
dec
loop
stos
and
loope
lock
pop
inc
sbb
dec
rcr
repnz
mov
pop
(bad)
fist
pop
mov
mov
cmp
or
movs
dec
addps
ins
int3
jmp
pop
imul
sbb
sub
int
xor
push
int
(bad)
hlt
mov
or
fs
pop
xchg
cdq
push
adc
cmp
mov
push
add
mov
pop
xor
push
int
aad
js
sub
jge
out
outs
(bad)
fld
pop
or
mov
aaa
js
inc
sub
sbb
pop
jle
add
in
adc
inc
loop
and
cmp
hlt
and
test
lds
or
cmp
enter
mov
sub
into
push
sub
scas
inc
inc
mov
shl
idiv
dec
add
leave
in
cs
sbb
push
inc
loope
data16
push
cs
cwde
sbb
sbb
call
fisttp
cli
adc
cmp
js
sub
mov
xchg
shl
gs
push
xor
cmp
sbb
inc
cmp
iret
movs
mov
pop
jecxz
inc
xchg
mov
mov
sub
pop
cmp
jbe
xor
rol
dec
sub
inc
(bad)
in
cmp
inc
call
push
enter
in
cmp
outs
lds
or
shl
xchg
fwait
mov
call
sbb
jmp
mov
push
mov
xor
aaa
inc
(bad)
fild
sbb
aad
cmps
push
sbb
popf
retf
mov
pop
and
jo
sub
(bad)
jge
lock
aad
in
cmp
pop
and
mov
movs
imul
cmp
or
in
pop
out
fcmove
xor
fcmovbe
test
clc
in
or
jg
mov
aam
sub
xchg
xchg
icebp
mov
shl
sbb
retf
add
and
sub
jb
mov
pop
lea
les
dec
mov
push
into
and
stos
icebp
inc
je
shr
inc
(bad)
(bad)
xor
test
out
mov
movs
in
ror
outs
cmp
je
cld
cmc
rcr
or
push
aas
test
(bad)
imul
mov
(bad)
ja
cwde
pop
call
add
pop
ins
push
fld
(bad)
jmp
in
mov
shr
jae
push
pop
sbb
div
cmps
(bad)
push
pushf
aaa
in
sar
icebp
(bad)
push
mov
repnz
sbb
cs
jp
pop
in
cmp
outs
jo
cmps
cmps
mov
adc
sub
out
push
mov
pop
scas
(bad)
aam
cs
push
jge
(bad)
test
lods
add
loop
mov
aaa
jae
popa
out
test
bound
xchg
xchg
jmp
leave
out
add
add
arpl
aaa
pop
adc
scas
rol
xchg
inc
jne
data16
cld
add
push
mov
push
into
inc
mov
stc
ins
retf
sbb
xchg
fcom
dec
add
cmp
xor
push
pop
and
pop
xchg
jp
xor
jle
jns
not
xchg
xchg
test
int
aaa
sbb
push
repz
push
stos
shr
adc
xchg
imul
fild
mov
jb
jns
xchg
retf
add
push
repz
xor
pushf
and
mov
mov
lock
push
ret
add
mov
enter
pop
xchg
jmp
sub
out
fyl2x
sbb
out
popf
fist
movs
mov
retf
sbb
inc
push
cmp
(bad)
fidiv
mov
mov
enter
mov
movs
dec
jg
adc
push
fadd
frstor
and
movs
cli
movs
adc
bound
mov
xchg
bnd
mov
sti
and
mov
pop
pop
cld
sbb
jmp
movs
pop
xor
mov
mov
xor
cmc
out
sti
push
push
fisubr
push
or
jle
aad
retf
mov
pop
sahf
aad
jns
jle
iret
sub
aam
data16
ja
out
pop
neg
fidivr
nop
pop
lahf
sub
xchg
xchg
cmp
lods
or
jne
test
dec
cwde
push
stos
adc
outs
sub
sub
pop
hlt
inc
movs
ret
mul
mov
or
retf
mov
add
jl
pop
in
sti
lods
inc
push
add
fild
xchg
in
(bad)
push
xor
fdivp
add
adc
xor
xchg
jl
lods
dec
fs
pop
mov
(bad)
shl
aaa
stos
and
sahf
inc
jne
pop
push
retf
ds
inc
mov
ss
cmp
push
cdq
sub
sub
mov
ror
jbe
add
cmp
neg
xchg
pop
sub
(bad)
bnd
clc
cmp
int
inc
call
jl
add
mov
outs
adc
push
sub
retf
xor
inc
jnp
clc
and
or
dec
adc
and
cdq
fst
loopne
stos
cmps
inc
push
js
dec
push
fsubr
fistp
test
and
pop
dec
xchg
dec
js
sbb
mov
(bad)
add
lea
or
cmp
fstp
sbb
adc
inc
scas
dec
fisub
push
inc
cmp
fs
sbb
xchg
retf
xchg
xor
cs
mov
and
daa
(bad)
in
loopne
mov
iret
jmp
jp
mov
xchg
xor
ins
or
sti
xchg
out
ret
mov
inc
scas
adc
shl
and
dec
call
lahf
push
adc
mov
(bad)
xchg
add
jg
in
cmp
sbb
out
int3
aaa
in
fldpi
aad
pop
cmp
xor
out
aaa
sti
mov
pop
ins
ret
in
and
mov
rol
adc
sub
retf
dec
les
cwde
add
push
cli
fwait
loop
mov
imul
arpl
push
in
sahf
mov
out
sub
xchg
and
movs
test
repnz
pop
ret
pop
inc
in
inc
sub
fadd
(bad)
les
shr
mov
cdq
mov
jbe
lods
sar
mov
mov
add
imul
in
(bad)
mov
mov
dec
mov
int3
fnstsw
(bad)
outs
and
dec
out
es
ja
js
push
dec
sub
bound
(bad)
lock
lods
push
sbb
jae
idiv
clc
ds
scas
xor
push
and
lods
pop
in
cli
jg
rcl
mov
sbb
or
or
xacquire
pop
mov
pop
jne
or
outs
(bad)
pop
mov
mov
nop
fistp
div
sahf
xchg
sbb
rcr
mov
dec
push
jmp
cmp
loopne
xchg
mov
inc
mov
mov
xchg
test
or
xchg
sti
aad
cwde
cmp
rol
or
aam
xor
je
shr
int3
test
into
arpl
add
jl
add
mov
add
and
add
and
fiadd
or
mov
push
pushf
and
jno
fcomp
repz
xor
sbb
mov
cmp
push
lahf
or
rcr
int3
xchg
jg
jecxz
test
mov
add
lahf
xchg
into
movd
outs
mov
jp
inc
fwait
aas
(bad)
repz
cdq
xchg
out
les
xor
dec
shl
or
icebp
jmp
sub
cwde
push
cmps
out
pop
icebp
sub
sahf
es
ins
repz
xlat
mov
jge
push
push
arpl
adc
push
jo
mov
mov
sbb
in
xchg
and
repnz
das
mov
js
mov
pop
loopne
nop
inc
and
xchg
mov
mov
sbb
mov
sub
dec
(bad)
xchg
aas
stc
inc
push
loope
cli
stc
mov
or
or
imul
lock
push
xchg
xchg
adc
les
xchg
mov
xor
inc
cmp
movs
ja
adc
mov
iret
mov
and
push
add
add
clc
call
mov
mov
dec
push
cs
aam
pop
pop
ffreep
jecxz
add
jmp
leave
daa
pop
push
or
repnz
enter
dec
xor
das
inc
mov
jmp
mov
lahf
das
mov
or
(bad)
inc
(bad)
icebp
jmp
test
dec
clc
or
or
aas
jne
imul
adc
icebp
(bad)
aam
mov
aad
add
cmp
cdq
lock
jnp
jle
in
fbstp
pop
shr
cmc
(bad)
inc
jp
imul
inc
xchg
xchg
(bad)
stos
imul
add
lds
stc
add
xor
xchg
jae
mov
jb
sub
mov
push
and
dec
xchg
jecxz
sbb
lods
mov
out
sbb
xchg
ins
adc
enter
adc
sbb
mov
pop
mov
cmp
mov
sar
popa
aas
gs
push
in
out
aas
mov
ffreep
clc
test
sub
mov
scas
mov
cmp
mov
addr16
jecxz
iret
mov
mov
fwait
jne
adc
xchg
or
sar
xor
stos
call
outs
ds
outs
cld
repnz
sub
xchg
fneni(8087
pop
sub
fidivr
xor
mov
xor
pushf
lds
add
jg
mov
ret
push
mov
call
rol
adc
fistp
cmp
adc
sbb
push
neg
pop
pushf
sti
adc
aad
pop
xchg
dec
cmp
or
fldcw
dec
mov
fisttp
sbb
sub
adc
es
outs
adc
adc
lods
or
inc
clc
sub
stos
fidivr
and
add
pop
dec
push
mov
push
xor
xlat
xchg
cs
pop
xchg
xchg
or
(bad)
mov
cdq
jle
setno
ins
and
sub
cli
outs
cmp
aam
mov
dec
mov
push
mov
leave
es
or
inc
or
fld
mov
add
mov
xor
das
(bad)
leave
xor
mov
outs
addr16
xor
and
(bad)
jo
into
pop
out
cs
adc
in
pop
add
adc
out
in
add
inc
xchg
pushf
inc
and
mov
mov
fwait
dec
jmp
xchg
cmp
lahf
aam
mov
cmps
outs
mov
jae
enter
mov
and
add
out
push
call
jmp
fcmovnu
movs
xchg
pop
sbb
icebp
enter
out
sbb
sbb
pop
cs
and
mov
or
mov
mov
cmp
in
cmovo
fadd
xchg
xlat
addr16
add
mov
xchg
pop
scas
test
or
jb
pop
lods
shl
and
cmps
faddp
retf
clc
sub
mov
mul
in
sbb
push
rcl
shl
popf
xchg
mov
popa
nop
adc
add
jecxz
cmp
ret
jmp
cli
(bad)
rcr
fwait
mov
pop
mov
adc
fild
inc
jo
in
mov
or
cmps
hlt
xor
dec
push
(bad)
in
push
xor
adc
gs
arpl
mov
mov
ret
imul
movs
sahf
fisttp
addr16
in
xlat
lea
lea
sub
add
cmp
adc
inc
imul
xchg
and
aaa
ja
call
and
inc
cmp
mov
popf
test
adc
jns
or
add
lods
and
mov
push
sbb
dec
mov
push
jl
or
pop
adc
jle
fwait
stc
or
aad
fild
sub
arpl
add
mov
adc
mov
xchg
in
cmp
popf
mov
xchg
ins
sub
clc
mov
stos
inc
and
and
cli
js
or
mov
xchg
pop
mov
aas
mov
sbb
jle
repnz
sub
and
inc
aad
mov
dec
popf
aam
xchg
push
or
mov
or
icebp
dec
or
(bad)
cmps
pushf
mov
cli
fwait
pop
jne
sar
adc
and
adc
mov
hlt
sub
test
add
pop
jno
data16
popf
adc
xor
lds
adc
sbb
in
leave
pop
fcmovne
mov
(bad)
lea
or
dec
movs
mov
inc
scas
and
shl
push
test
adc
fwait
and
scas
adc
add
add
rcr
ja
dec
xor
repz
inc
inc
xchg
sub
mov
mov
jmp
or
push
xchg
cmp
imul
jbe
xor
retf
add
mov
xor
leave
test
mov
dec
xor
inc
pop
cmp
sub
jb
pop
das
repz
mov
loop
cmp
add
dec
loopne
iret
repnz
xor
mov
aad
dec
push
repz
les
xchg
add
and
in
cli
dec
mov
div
mov
jge
pop
dec
sbb
test
sub
pop
and
mov
jl
xchg
fcomip
dec
xchg
dec
add
mov
sahf
hlt
ud1
push
sub
out
or
push
mov
iret
inc
cdq
pop
mov
retf
ins
test
xchg
mov
in
stos
pop
sti
rcl
push
ja
xor
sub
int
inc
xor
mov
adc
movs
rol
mov
ficomp
mov
or
jle
loop
add
imul
ins
mov
fldcw
or
(bad)
mov
inc
scas
fiadd
mov
cmps
add
(bad)
sub
lods
mov
inc
shl
fsub
jnp
mov
repnz
mov
mov
aad
mov
ins
dec
mul
add
movs
mov
lea
xchg
sbb
adc
out
icebp
test
out
or
aam
xchg
neg
imul
ret
push
adc
fdivr
outs
xchg
lods
sub
dec
jne
pop
dec
mov
(bad)
push
add
push
dec
stos
dec
push
xor
icebp
lods
inc
aas
push
aad
xchg
sbb
pop
push
pop
mov
leave
jle
js
mov
and
push
adc
mov
int
jnp
xchg
pop
fcomp
or
jmp
fcomp
call
pop
pop
xchg
es
and
test
xchg
scas
fild
call
fldcw
dec
xchg
js
js
fdiv
imul
ins
test
pusha
(bad)
sti
fwait
cdq
outs
mov
outs
jnp
enter
xor
pop
pop
sbb
enter
jge
mov
addr16
or
stos
ds
push
lds
leave
xchg
add
bound
dec
dec
jae
mov
dec
lods
loopne
inc
aaa
stc
xchg
pop
rol
ins
jnp
cmp
xor
scas
dec
test
mov
cmp
sbb
pop
sbb
and
or
sub
test
rcl
bound
mov
mov
cs
cmp
imul
lahf
sahf
pop
aaa
call
and
push
pushf
movs
in
sbb
imul
inc
or
sbb
js
inc
bound
fsub
daa
cmp
pop
xor
sti
xchg
ja
pop
inc
jge
(bad)
inc
outs
jge
mov
clc
xor
xchg
in
mov
shr
aaa
pop
or
in
(bad)
mov
fidiv
xchg
js
or
cmc
xchg
loop
adc
data16
and
mov
mov
cmp
mov
loopne
ror
mov
sbb
inc
leave
hlt
xchg
hlt
scas
es
mov
(bad)
cmp
pop
or
jne
mov
movs
cmps
mov
daa
push
push
fdivr
xor
cwde
add
daa
dec
repnz
jne
jg
out
dec
int3
sbb
mov
xor
int3
mov
ins
pushf
xchg
mov
enter
adc
js
rcl
jp
sahf
cmps
push
jecxz
pop
adc
push
daa
jle
jb
xchg
leave
bound
mov
inc
fisub
aaa
sub
sub
popa
push
mov
in
push
sbb
xchg
gs
sbb
cld
fcomip
cld
mov
xchg
aaa
push
pop
fsub
out
or
pop
mov
fld
dec
fstp
adc
dec
jmp
je
and
stos
dec
call
cmp
pop
sbb
fucomip
push
dec
or
in
xchg
cmp
ds
rep
push
jmp
and
push
push
repz
sahf
fsub
mov
loope
and
xchg
loopne
mov
or
add
sbb
outs
pop
push
lds
jmp
xchg
call
mov
pop
xchg
add
inc
loop
enter
mov
sub
jne
out
mov
daa
imul
cmp
movs
or
jmp
jne
cmc
mov
xor
lock
mov
fscale
sub
std
stos
ror
aaa
cmp
jbe
dec
fnstenv
imul
pusha
adc
js
repz
xchg
clc
or
adc
jg
cmp
aam
push
jns
fst
lahf
sub
lock
(bad)
bound
test
(bad)
daa
jne
push
dec
retf
fsubr
push
(bad)
cli
inc
(bad)
jp
icebp
es
ret
dec
mov
cmps
inc
(bad)
cmc
leave
adc
cmps
or
pushf
enter
out
sar
cmps
loop
movs
gs
xor
jb
daa
jbe
(bad)
repnz
or
call
loope
fnstcw
jle
cdq
leave
rcl
xchg
pop
mov
fst
loop
push
push
xor
and
mov
mov
ror
push
jmp
push
or
addr16
gs
and
imul
or
ror
ins
repnz
sbb
cdq
mov
add
lods
dec
loope
dec
mov
(bad)
(bad)
ins
out
push
sub
pop
stos
dec
cmp
cmp
(bad)
cmps
sbb
les
mov
call
jne
inc
cmp
out
xor
mov
push
in
xchg
(bad)
es
outs
das
mov
mov
sbb
dec
sbb
leave
into
ss
clc
mov
call
int
test
cs
mov
fisttp
movs
movups
frstor
xor
sub
int
sub
mov
shl
outs
inc
int
cmp
jle
jo
push
mov
fbstp
push
arpl
mov
xchg
arpl
pop
in
pop
push
jle
mov
lock
mov
repz
(bad)
dec
(bad)
or
jecxz
in
dec
popf
fs
add
data16
loopne
pop
fidiv
stos
add
aaa
mov
not
std
and
push
jb
or
adc
mov
and
jne
jne
jl
and
scas
stos
popf
aas
mov
jno
test
scas
call
xor
int
leave
jl
shl
adc
sub
stc
inc
inc
inc
dec
sbb
dec
cmp
fcom
mov
sbb
xchg
ins
ja
mov
sub
jbe
imul
add
call
mov
mov
shl
js
cdq
retf
xchg
nop
add
push
and
jmp
es
push
out
std
out
mov
popa
mov
call
retf
cs
dec
pop
rol
sahf
push
add
pop
push
lods
into
dec
mov
dec
push
push
and
pushf
pop
and
adc
push
and
fstp
push
dec
mov
(bad)
cld
stos
imul
outs
ror
and
inc
jnp
push
imul
push
dec
sub
jge
les
add
scas
xor
and
sub
inc
fcom
mov
dec
mov
je
int
ja
jbe
add
jmp
adc
xor
ret
sbb
call
dec
cld
mov
ds
inc
sub
retf
in
aaa
ficom
je
repnz
cs
push
std
add
int
daa
out
gs
and
jmp
fistp
fidiv
es
add
stc
pusha
mov
jne
rol
and
jl
ja
add
jb
sub
sub
sbb
dec
mov
mov
sar
popa
aam
inc
jno
leave
adc
(bad)
sub
sbb
rcl
(bad)
jo
jg
mov
mov
std
xor
icebp
and
stc
jb
inc
mov
push
repnz
xchg
add
fwait
sub
dec
xor
and
push
arpl
xchg
loope
mov
jp
sbb
pushf
xor
out
call
out
retf
add
fwait
sub
loop
arpl
jmp
jnp
and
add
jp
dec
test
or
iret
test
in
ret
sub
enter
pop
xor
ret
push
xchg
sub
jg
je
pushf
(bad)
loope
adc
mov
push
mov
repnz
repz
and
xchg
push
pop
mov
dec
add
pop
mov
ins
test
lock
out
iret
push
bound
mov
imul
je
inc
sbb
mov
xor
xor
sub
ja
sub
jno
pop
push
data16
fstp
sti
jnp
pop
push
and
fbld
jae
test
xchg
cwde
jne
add
xor
scas
retf
push
dec
cmp
fs
xchg
(bad)
jne
inc
int
ja
push
inc
lods
int
ins
cmps
xor
cmps
call
aaa
in
xlat
stos
mov
icebp
call
xor
into
imul
xor
or
std
mov
sbb
push
aad
xchg
jge
fisubr
adc
movs
pop
mov
mov
out
push
dec
sbb
ss
cmp
push
in
inc
push
cwde
sub
add
stos
lock
mov
and
out
fist
dec
fisttp
aam
adc
cmps
repnz
dec
cs
mov
mov
into
lods
xor
cmp
push
ss
stos
pop
mov
pop
push
push
xrelease
loop
or
in
lea
adc
or
or
out
les
jecxz
pop
jl
js
dec
in
(bad)
and
push
xchg
sub
push
in
jb
stos
cmc
mov
retf
ins
mov
push
dec
sbb
sub
pop
daa
ret
outs
and
sub
not
jo
lock
dec
adc
arpl
mov
mov
push
mov
punpckhdq
push
or
ins
push
leave
sub
js
test
stos
push
xchg
or
out
pop
ret
shr
pop
aad
pop
inc
cmps
add
scas
popa
jnp
pop
stos
push
cmc
mov
repnz
mov
outs
mov
xchg
mov
data16
lods
sbb
adc
and
out
pushf
push
and
in
nop
data16
data16
dec
shl
jmp
imul
dec
ds
mov
and
popa
es
xchg
iret
stos
les
or
mov
stos
xchg
xlat
mov
jnp
and
xchg
mov
or
pop
pop
outs
pop
aaa
sub
div
xor
cld
xor
popa
inc
lahf
retf
dec
scas
mov
push
xor
jle
pusha
or
mov
or
scas
dec
lock
pop
add
and
popf
add
inc
or
and
sahf
jmp
fsubr
pop
push
popf
sub
xor
call
sub
stc
xchg
pop
popa
push
xor
cdq
daa
or
int3
push
pusha
pop
mov
gs
dec
test
mov
pop
iret
pop
add
push
mov
in
in
or
push
mov
or
pop
xor
sub
mov
pop
dec
popf
test
push
cmp
push
dec
bound
dec
or
das
sub
mov
retf
rcl
sbb
cmp
fild
cdq
jle
fsubr
pop
add
(bad)
loop
push
scas
add
int
fmul
arpl
dec
cmp
push
loopne
mov
dec
(bad)
cmp
and
mov
int
mov
push
cmp
inc
sub
sti
mov
jae
xor
inc
sub
iret
outs
mov
test
rol
push
pop
daa
push
pop
out
xor
fsub
mov
sbb
js
and
adc
sti
(bad)
cmc
es
not
scas
pop
imul
test
out
test
xchg
xlat
or
mov
jb
push
int3
outs
mov
leave
or
fst
jp
mov
mov
adc
mov
xor
push
into
iret
sub
sbb
ficom
jp
mov
(bad)
xchg
jnp
retf
jl
scas
jmp
jmp
push
mul
adc
cmp
xor
fisttp
call
in
call
stos
arpl
push
outs
dec
adc
cli
test
out
sti
fisub
sub
movs
push
jno
sub
xchg
mov
mov
aad
sar
(bad)
pop
xor
lods
inc
cmps
cmps
pop
call
pop
adc
inc
xor
mov
ds
leave
jp
xchg
or
xchg
sar
jns
push
mov
mov
(bad)
xchg
call
lods
xchg
mov
in
xchg
pop
cs
jns
repz
xchg
mov
add
mov
cmp
jl
fstp
loop
call
or
popf
aaa
inc
scas
sub
jmp
push
dec
jg
adc
cmp
inc
push
sbb
ror
xor
pop
cdq
mov
movs
je
dec
inc
cmps
cmp
inc
jmp
in
test
cmps
cli
push
aas
add
mov
dec
(bad)
sub
dec
mov
mov
out
inc
mov
jnp
mov
inc
fistp
(bad)
pop
les
(bad)
(bad)
mov
mov
sub
pop
pop
aam
cmp
daa
adc
xlat
in
jbe
addr16
dec
fld
dec
out
mov
fcomp
sbb
cwde
and
gs
xor
scas
add
sub
add
std
in
aaa
mov
or
xchg
mov
test
rcl
jb
(bad)
pop
xchg
xor
stos
js
(bad)
shl
or
std
or
outs
mov
int
test
xchg
in
sub
popf
adc
push
mul
bound
pop
mov
cmp
stc
adc
aas
add
push
cmp
imul
mov
in
pop
mov
mov
setg
push
fs
outs
jns
inc
cli
(bad)
dec
add
and
das
in
xchg
dec
cmp
jecxz
sbb
(bad)
call
lahf
retf
test
out
call
mov
inc
out
into
dec
add
mov
loop
scas
fldz
outs
push
sbb
daa
push
les
(bad)
les
out
pop
dec
fstp
push
sub
sbb
das
iret
push
popa
xlat
cwde
(bad)
xor
daa
xchg
sti
push
cwde
rcl
push
fstp
mov
push
pop
pop
fdivr
cmc
mov
outs
sti
js
add
pop
jp
inc
mov
out
pop
push
fidiv
dec
jnp
into
inc
mov
pop
test
add
xor
and
add
out
lods
push
adc
addr16
mov
into
int3
and
mov
(bad)
sub
scas
shl
cmp
mov
push
mov
(bad)
mov
fs
pop
jns
cmp
push
int3
mov
nop
sbb
or
mov
and
cld
loop
pop
sbb
push
leavew
cmc
xchg
das
adc
test
sbb
or
enter
jne
push
leave
imul
push
dec
mov
cmp
ds
leave
push
cmp
retf
sbb
jo
(bad)
cmp
xchg
jmp
test
(bad)
jmp
retf
mov
mov
and
sbb
es
clc
jmp
fwait
push
dec
adc
pop
(bad)
icebp
fwait
sbb
xchg
pusha
dec
fcom
clc
mov
enter
push
mov
jo
nop
mov
inc
js
jg
cmps
outs
xor
and
test
jno
push
loopne
mov
cmps
rol
jmp
lock
jmp
ss
in
cli
dec
div
mov
out
sbb
mov
ret
add
repz
pusha
xchg
sti
inc
out
adc
sub
iret
inc
test
dec
ja
inc
ins
cmc
sbb
cmp
mov
mov
jge
das
cwde
test
sub
jns
or
mov
inc
sahf
push
stos
push
iret
jmp
and
or
jns
repz
clc
lahf
xor
cmp
cmp
stos
cmp
mov
(bad)
ret
call
jb
movs
xchg
pop
pusha
cmp
sbb
dec
mov
das
lea
mov
and
cmp
mov
out
sbb
jmp
xor
(bad)
and
xor
jle
pop
jae
in
ret
test
xchg
mov
stos
movntps
dec
and
icebp
out
or
xor
pop
ins
mov
ds
dec
xlat
mov
xor
xor
outs
fwait
pop
pop
test
add
or
ror
adc
popa
mov
sub
push
out
inc
xchg
dec
and
xchg
xor
pusha
mov
pusha
int
in
xchg
mov
add
add
stos
jnp
xor
push
icebp
xor
mov
pop
fwait
inc
div
sbb
aaa
pop
mov
adc
sar
jecxz
sub
mov
add
mov
stos
pop
sbb
cmp
(bad)
lods
or
movs
xchg
gs
push
adc
rcl
out
sub
xor
fcom
cmps
pop
or
out
cmp
stc
sub
cli
test
jmp
xchg
sbb
sbb
cmp
lea
and
nop
fisttp
shl
imul
xlat
mov
scas
push
xchg
xchg
es
aaa
mov
test
shl
shl
mov
mov
int
inc
test
daa
mov
in
mov
fnstsw
repz
and
xchg
icebp
(bad)
jle
pop
fsub
jmp
jne
cmp
movs
cmps
adc
stc
cmc
fidiv
sub
jbe
sbb
retf
ds
sbb
pop
(bad)
sbb
je
rol
pop
bound
cmp
cmp
pop
dec
jmp
jmp
cld
retf
loope
pop
jmp
retf
loop
pop
xor
sbb
mov
lods
add
mov
lods
pop
sub
sbb
cmp
sbb
push
mov
sbb
(bad)
xlat
add
xor
lahf
test
mov
xor
inc
mov
rcr
into
loope
ret
icebp
jg
inc
(bad)
out
push
int3
movs
pop
and
stos
sbb
xor
lahf
sub
cmp
dec
mov
xchg
mov
fadd
retf
retf
jb
jle
std
and
in
mov
arpl
mov
sub
add
mov
(bad)
hlt
and
xor
xchg
aad
jmp
scas
mov
fdiv
sbb
test
add
sbb
xchg
jge
or
xor
cmps
xchg
call
or
pop
xchg
int3
adc
std
mov
daa
sbb
imul
test
inc
ret
adc
xor
inc
out
sbb
test
ror
mov
rcr
adc
fidivr
dec
push
iret
xor
xchg
enter
inc
cwde
outs
loopne
mov
push
dec
pop
cmc
les
xor
cmp
in
ret
and
pushf
mov
jmp
out
or
xor
xor
fld
and
adc
push
mov
or
mov
and
repnz
xchg
jns
ds
inc
xor
xor
xchg
sar
adc
mov
scas
(bad)
test
in
or
mov
cdq
mov
adc
outs
mov
cld
push
sbb
cmc
loopne
es
inc
jecxz
cld
sub
inc
pop
icebp
cmp
or
push
leave
icebp
gs
add
mov
frstor
in
mov
xor
mov
test
scas
rcr
pop
mov
outs
(bad)
or
fisttp
or
push
add
dec
mov
mov
into
mov
mov
xchg
jmp
and
ret
and
movs
scas
xor
pop
inc
popa
sub
div
stos
or
inc
aas
and
rol
call
sbb
pushf
not
cmp
das
sbb
jmp
ja
sar
and
inc
int
cwde
xor
ret
pop
pop
cmp
sbb
shl
cmps
or
xor
test
scas
push
cmps
or
and
xor
mov
stos
or
sub
cs
ss
jl
rcl
add
loop
jno
in
push
inc
ins
sbb
mov
dec
jl
int
mov
mov
mov
cmp
retf
aam
fisubr
movs
lea
jae
int
or
adc
or
sbb
fidivr
sbb
push
inc
cmp
dec
retf
and
(bad)
in
or
cmps
inc
inc
rcl
add
int
imul
loope
pusha
repz
inc
push
xor
(bad)
mov
outs
rol
in
outs
xchg
ficom
push
mov
xor
test
xor
sbb
sbb
jno
dec
push
js
and
inc
call
js
je
ins
rcr
cmp
lods
out
mov
pushw
mov
mov
xchg
neg
outs
jns
cwde
mov
in
xor
inc
test
inc
je
ficom
sub
stos
stos
loope
data16
imul
jge
or
int
retf
aaa
mov
popf
jmp
inc
mov
cmp
int3
jg
clc
stos
icebp
ret
lahf
xlat
jmp
sub
adc
cli
test
and
xchg
shr
push
es
dec
jo
pop
push
ins
gs
(bad)
adc
mov
adc
sub
ret
inc
popa
mov
nop
into
hlt
ins
nop
pop
popa
cmp
mov
ffreep
cdq
shl
ins
daa
sbb
mov
es
shl
mov
out
mov
loop
pop
add
scas
jo
rcl
cdq
test
outs
cmp
adc
scas
fld
cmp
fcmovne
sub
add
not
stos
ins
mov
xor
imul
jb
mov
mul
ficomp
sub
fimul
imul
mov
inc
mov
dec
mov
pop
ins
or
add
fwait
dec
xor
fadd
xchg
cmc
cmp
ficomp
jno
inc
push
push
test
or
adc
(bad)
mov
mov
lock
xor
gs
int3
in
sub
dec
xor
fisubr
stc
and
push
and
retf
and
inc
cld
inc
repnz
mov
pop
es
rcl
sub
rcl
mov
les
enter
sti
fdiv
pop
push
pop
cli
pop
cwde
jg
xchg
fs
cli
iret
popf
jmp
scas
inc
sbb
xchg
xchg
cmps
cmp
jno
push
outs
mov
daa
jmp
and
popa
xchg
clc
hlt
jl
push
mov
ror
mov
adc
fcom
fwait
cwde
fidiv
adc
inc
mov
mov
mov
mov
or
ja
cmp
push
int
out
lahf
call
xlat
sub
sbb
inc
aad
cmp
push
outs
mov
mov
lods
ds
sbb
mov
(bad)
dec
sub
fild
jno
shl
xchg
sbb
mov
lock
pop
addr16
adc
jbe
and
dec
mov
call
bound
jge
inc
pop
cs
xchg
cmp
(bad)
pop
adc
pop
int3
ins
stos
or
xor
mov
test
jns
adc
enter
jp
int
xchg
sahf
push
outs
inc
cmp
sbb
fs
adc
sbb
or
xchg
outs
movs
jmp
or
sti
jmp
adc
jg
nop
mov
push
fisttp
sahf
pop
mov
pop
add
hlt
rcr
ret
daa
xchg
dec
mov
add
frstor
xacquire
cmp
jne
ins
sub
out
xchg
mov
out
fsub
enter
fnstenv
pop
ins
outs
xchg
pushf
or
sbb
cmp
xchg
enter
xchg
movs
push
mov
jecxz
popf
add
xchg
pop
and
sbb
inc
and
popf
adc
std
push
jo
cs
add
iret
sahf
imul
cwde
push
inc
jp
repnz
add
and
dec
(bad)
cmp
stos
cmc
cmps
gs
shr
dec
rol
jno
push
outs
test
shl
fmul
out
cli
cmp
pop
scas
fadd
cmc
add
shl
fs
add
test
push
pop
xchg
jmp
stc
or
mov
cmp
add
mov
and
sbb
push
sahf
mov
(bad)
movs
test
popf
dec
mov
cld
or
loop
mov
mov
add
add
mov
idiv
int
es
mov
sub
jmp
and
mov
xchg
xchg
jmp
dec
ins
or
dec
xor
adc
pop
mov
mov
out
gs
out
xlat
enter
sub
or
retf
fs
push
lock
pop
push
ds
adc
dec
enter
dec
scas
push
icebp
int3
jne
sahf
rcl
push
and
popa
dec
data16
sub
jo
jmp
sahf
std
or
loop
lods
push
cmp
sub
sbb
(bad)
xchg
jl
sub
push
cli
les
jecxz
mov
add
pop
arpl
push
push
or
out
pop
cs
adc
cmp
idiv
inc
(bad)
movaps
push
xchg
es
inc
dec
daa
push
out
daa
js
(bad)
xchg
pop
jmp
fldz
cmc
push
loope
mov
and
and
xchg
push
fcmovnb
lahf
popf
nop
adc
xchg
pop
add
pop
in
iret
xlat
and
jmp
(bad)
stc
push
enter
sar
adc
dec
pop
mov
inc
call
mov
cwde
cwde
lods
imul
inc
mov
sar
ss
push
sbb
adc
pop
xchg
ins
aam
pusha
and
jnp
xchg
popa
sbb
(bad)
sub
xchg
jmp
popf
call
ja
mov
loop
mov
fcomp
xor
adc
fcomp
dec
cdq
cmp
repnz
push
ror
push
add
pop
fild
or
pop
arpl
push
gs
in
cli
cwde
call
inc
cli
push
push
mov
mov
lods
push
push
add
mov
mov
push
(bad)
es
adc
cmp
push
out
int3
mov
pushf
sti
add
pop
je
mov
neg
out
lods
push
clc
movs
pop
dec
jmp
fimul
xchg
or
mov
jb
pusha
(bad)
(bad)
cmp
retf
and
adc
push
imul
push
jl
popa
add
cmp
dec
(bad)
fptan
pop
mov
scas
aas
jno
test
adc
test
push
fbld
sub
add
imul
or
mov
retf
xor
lods
or
loope
fstp
mov
aas
sbb
test
mov
int3
xor
jo
into
adc
sbb
es
jns
xchg
push
xor
push
das
sti
dec
xor
in
cdq
inc
ds
jnp
ficom
test
xor
outs
jl
mov
sbb
sbb
repnz
jle
sub
xchg
sub
fwait
xor
xor
mov
push
jg
push
pop
cmp
sub
cs
pop
retf
icebp
ficomp
adc
fild
je
dec
test
out
pop
mov
or
movs
cmp
gs
mov
adc
scas
xchg
mov
sbb
ins
out
sub
outs
jne
(bad)
jmp
and
sbb
mov
inc
lahf
push
dec
aad
push
scas
out
les
push
or
add
in
jno
xor
xchg
call
shl
fild
hlt
jbe
mov
pop
dec
stos
jbe
cmps
cmp
jle
test
std
add
icebp
sub
and
lods
gs
jnp
jno
pop
inc
movs
mov
add
cld
mov
push
pop
sahf
dec
fldenv
or
pop
cmp
outs
cld
(bad)
push
lock
mov
jecxz
push
lds
jae
dec
jns
jp
lahf
xor
movs
test
hlt
jp
jmp
mov
js
xor
getsec
std
cmps
xor
xchg
test
cli
(bad)
js
mov
adc
lods
loope
loopne
inc
loope
ffreep
mov
mov
xchg
lds
adc
repz
stos
cmp
or
jae
test
repz
out
xchg
sar
dec
dec
push
add
xor
cdq
mov
in
adc
sbb
mov
jne
pop
ds
jmp
jg
loop
out
(bad)
or
(bad)
xchg
dec
loop
xor
(bad)
lods
inc
ja
mov
push
cwde
fsubr
repz
sub
retf
inc
inc
mov
scas
or
cdq
pop
imul
aas
cmc
mov
sub
mov
and
mov
jae
push
push
mov
inc
das
aam
(bad)
pop
mov
and
hlt
ds
ficom
adc
loop
sub
rol
add
cs
pop
sar
or
cmp
sub
test
fldenv
hlt
inc
add
sbb
sub
push
fcom
pushf
(bad)
pop
aam
fcmove
cmps
pandn
sub
adc
xor
xchg
adc
jecxz
pop
push
push
sti
and
out
push
adc
mov
pop
inc
mov
mov
pop
dec
test
fisub
dec
fcmovb
pop
jae
scas
imul
sbb
mov
mov
push
pop
aam
cwde
test
mov
popf
dec
inc
stos
ins
int
mov
xchg
stos
cmp
xor
push
scas
or
mov
xchg
mov
jns
scas
adc
ret
xlat
add
jne
dec
cmp
sbb
cmps
xchg
pop
fiadd
fst
cmp
push
sub
les
mov
not
add
sbb
imul
into
add
lahf
add
shl
fdivp
pop
(bad)
mov
xor
jecxz
in
addr16
ret
mov
mov
xchg
cwde
movs
inc
dec
dec
add
dec
fidivr
mov
dec
mov
dec
jl
or
cli
les
cmps
sub
shr
fild
pop
jb
bound
dec
sahf
xor
icebp
jnp
cmps
lods
(bad)
ds
mov
push
dec
imul
aas
or
sahf
inc
adc
xor
jno
or
out
pushf
mov
xchg
stc
mov
fs
xor
fcomp
dec
fstp
icebp
add
es
retf
jle
(bad)
pusha
push
int
sub
or
cmp
popf
jne
movs
mov
fisub
aaa
or
mov
mov
ins
xchg
dec
or
xor
and
push
push
dec
sti
push
jle
fnsave
outs
and
ret
test
clc
mov
pop
xor
aaa
mov
mov
adc
icebp
adc
loop
test
adc
push
enter
stos
in
loop
pop
mov
jae
mov
test
ss
push
mov
imul
movs
in
fnsave
cmp
sbb
cmps
cdq
and
add
inc
xchg
movmskps
xlat
sbb
sahf
ret
jno
shr
jno
and
mov
test
stc
fldcw
(bad)
aaa
add
test
mov
test
sahf
mov
sub
jmp
es
mov
cmps
mov
fwait
loop
xor
call
repnz
sbb
(bad)
inc
xchg
je
fistp
rol
lds
add
or
out
xchg
test
fs
test
rcr
cmp
dec
xor
and
dec
test
and
lods
add
xor
dec
push
pop
cmp
xor
mov
je
mov
(bad)
arpl
imul
mov
sbb
jmp
mov
xor
sub
push
sub
jp
jmp
mov
pop
ss
mov
in
xor
cmp
cwde
or
mov
fld
pop
mov
sahf
jne
retf
ror
cmp
mul
push
sub
cmc
jmp
in
and
sub
and
mov
mov
not
clc
mov
pushf
aam
mov
inc
lods
mov
push
enter
dec
xlat
or
pop
cmp
push
pop
mov
mov
pop
xchg
aam
sub
daa
loopne
out
sbb
mov
xchg
pushf
dec
or
push
inc
push
pop
cli
ficom
sbb
icebp
aam
pop
push
jmp
add
leave
mov
in
sub
push
(bad)
movs
dec
xchg
jmp
stc
push
pushf
leave
inc
mov
push
aam
sub
sub
in
fadd
das
adc
pop
add
xor
push
pushf
and
(bad)
cwde
jno
lods
movs
ds
arpl
cs
push
shl
add
xchg
loop
out
push
mov
retf
jl
pop
dec
mov
inc
inc
cmp
shl
xor
push
add
stos
xchg
xchg
jp
movs
stos
std
pop
mov
and
mov
xchg
and
aad
mov
mov
push
in
aaa
cdq
(bad)
arpl
inc
xchg
shl
push
ror
sbb
mov
dec
(bad)
inc
inc
jmp
jmp
hlt
(bad)
in
or
arpl
inc
push
adc
push
inc
ret
loope
in
or
dec
sub
gs
dec
and
xlat
jmp
jle
dec
jl
mov
jae
or
cmp
pop
cmp
xor
xor
jbe
push
jmp
pusha
in
jmp
adc
enter
rol
std
sbb
out
sbb
or
repz
mov
pushf
ins
xor
cs
mov
push
mov
pop
and
fmul
add
pop
icebp
jbe
imul
xor
or
mov
stos
push
ret
stos
push
stos
dec
fcomp
dec
sti
pop
jns
popa
and
cmp
mov
dec
inc
adc
mov
ja
pop
das
xor
inc
dec
rcr
cwde
outs
mov
or
mov
(bad)
call
mov
add
push
and
js
test
test
jmp
pop
jns
pop
jmp
jg
jle
add
das
pop
in
fnstenv
retf
sub
dec
neg
lods
iret
and
or
loop
push
xlat
std
mov
je
out
cmp
loope
adc
sbb
and
gs
and
outs
lahf
outs
xchg
dec
dec
inc
mov
rcl
mov
pop
lds
inc
fadd
add
fiadd
jmp
imul
shl
and
loopne
int
mov
pop
pop
int
mov
sbb
mov
out
add
cmp
scas
and
int
loopne
mov
jg
cmp
stos
(bad)
jo
xchg
fwait
nop
int3
mov
outs
(bad)
int
and
jae
loope
dec
lods
test
inc
cld
push
lahf
inc
push
sti
dec
sub
mov
add
adc
push
mov
jecxz
fldcw
push
lods
dec
ins
popa
jle
dec
sub
adc
nop
sbb
int3
mov
jp
aaa
fucomi
lock
inc
and
popa
out
add
adc
push
or
pop
adc
or
(bad)
pop
fdivr
call
pusha
bound
setnp
mov
sub
pop
mov
es
xlat
movs
out
sub
pusha
mov
mov
mov
test
idiv
in
mov
test
repnz
push
stos
xchg
pop
jno
mov
outs
rcl
ficom
cwde
cmp
mov
ror
sub
cdq
gs
mov
test
aam
sbb
and
mov
test
push
mov
ja
lds
sahf
cmp
jne
lea
xchg
push
and
pop
(bad)
jbe
xor
mov
loop
popa
or
pop
data16
push
sub
mov
push
sub
xchg
dec
addr16
mov
rcl
push
mov
shl
push
mov
lods
jmp
xchg
xor
test
sahf
repz
inc
mov
pop
cmp
inc
shl
cmp
xor
pushw
mov
push
adc
mov
push
and
inc
cli
or
leave
xchg
stos
out
and
aam
cmp
jno
test
test
cs
push
add
xchg
cmp
jmp
shl
push
pop
xchg
jp
pop
add
in
in
stos
outs
icebp
and
pushf
sub
cmp
cli
imul
das
js
ror
stc
mov
(bad)
int3
or
xchg
dec
or
lods
shr
push
xchg
stc
adc
cs
outs
and
jmp
mov
pop
call
cmp
es
int3
in
fcmovnbe
pop
mov
cs
jle
adc
mov
loop
add
loopne
pop
scas
imul
mov
cmc
cmp
inc
stos
jp
xchg
cmp
adc
ds
test
addr16
rcr
hlt
add
fiadd
mov
pop
and
jnp
sahf
mov
out
stos
push
mov
imul
push
adc
pop
das
imul
fsub
push
pop
mov
sahf
or
pop
mov
cmc
xchg
jae
xor
mov
jmp
jmp
inc
loop
mov
dec
dec
fdivr
mov
lahf
dec
mov
push
xchg
in
mov
lea
cdq
jmp
out
xor
shl
push
scas
sbb
inc
ret
or
inc
mov
xchg
ss
js
mov
jg
call
and
add
test
add
movs
inc
(bad)
lock
sub
in
adc
test
xchg
shl
dec
das
jecxz
push
jo
inc
outs
mov
dec
fucomp
xor
shl
repnz
xor
jg
icebp
nop
pop
fs
and
pop
mov
rol
push
icebp
jmp
ja
scas
enter
mov
jbe
mov
rcl
(bad)
bound
and
push
push
jecxz
push
rcl
jl
and
test
mov
push
cs
nop
push
iret
or
mov
loop
push
sbb
or
(bad)
sub
cmps
outs
(bad)
cli
inc
lods
inc
stos
lea
fld
mov
enter
fidiv
push
mov
call
retf
or
jecxz
repnz
bnd
push
adc
sbb
stos
fisubr
ret
std
mov
push
sub
push
mov
mov
xor
nop
mov
stc
outs
(bad)
xchg
dec
test
or
xor
test
popf
popf
popa
jno
cmp
int
jmp
cmc
lock
add
imul
add
(bad)
gs
jmp
cmp
add
lods
(bad)
ja
ds
adc
pop
cmp
jb
mov
lods
push
adc
(bad)
out
mov
add
or
add
mov
add
mov
xchg
lahf
and
sub
jl
mov
and
mov
int
mov
pop
or
and
push
push
jmp
push
jne
sub
ss
daa
mov
nop
jp
sub
mov
int
(bad)
and
fidiv
lock
mov
lahf
fdivr
mov
add
imul
in
inc
imul
sub
repz
dec
imul
mov
pop
add
dec
pop
retf
retf
cmc
push
ds
push
mov
xchg
out
push
out
ret
(bad)
mov
xchg
loopne
out
adc
iret
mov
mov
or
add
push
jns
adc
pop
cmp
mov
bound
add
mov
cmps
fnstenv
dec
sub
sub
add
push
loopne
inc
xor
lods
xor
in
or
sbb
pop
test
or
fcomp
inc
add
fcomp
pop
lds
leave
adc
mov
adc
dec
into
cmp
bound
rcr
iret
mov
jae
iret
inc
mov
mov
repnz
daa
dec
hlt
mov
lea
cwde
mov
inc
call
pop
push
out
xchg
gs
sbb
cmp
imul
in
xor
inc
inc
call
shr
inc
mov
or
jle
xchg
out
add
jo
addr16
repz
inc
push
lahf
cmp
sbb
pushf
add
add
or
dec
push
mov
cwde
aas
ins
scas
in
test
xchg
mov
into
mov
jle
pop
loopne
cli
cmp
inc
dec
inc
cmp
sub
or
pop
and
(bad)
xor
and
xor
or
mov
mov
xchg
pop
sbb
sar
clc
pop
outs
xchg
ss
cmps
test
fnstenv
add
ja
sbb
push
(bad)
out
inc
cmp
push
adc
xor
ds
push
pop
mov
add
arpl
add
into
int3
movs
xchg
js
iret
and
mov
jno
mov
mov
xor
lock
rol
cmp
pop
inc
push
rcl
add
dec
xchg
xchg
fwait
lods
loop
mov
adc
sbb
arpl
mov
xchg
fnstenv
dec
jge
inc
sar
or
mov
xchg
out
inc
and
add
ficomp
dec
pop
aad
aaa
cmp
or
sbb
mov
and
nop
dec
push
jl
add
xor
(bad)
xchg
repz
fstp
mov
push
and
out
inc
pop
iret
repz
sub
call
lahf
cmps
or
sbb
add
test
ins
sub
fldcw
mov
mov
sub
ret
movs
out
(bad)
pop
out
movs
mov
dec
xor
mov
cmps
add
arpl
mov
add
push
jnp
fsubr
and
pusha
pop
sub
mov
inc
mov
pop
repz
jmp
nop
mov
sbb
scas
(bad)
aad
mov
mov
addr16
cwde
retf
(bad)
cdq
mov
xchg
sub
jecxz
popa
and
cwde
mov
pop
add
int
cs
and
mov
sbb
sar
cmc
call
leave
les
shl
xchg
adc
daa
lods
sahf
addr16
adc
data16
or
xor
add
inc
pop
adc
sahf
dec
mov
sahf
mov
lahf
jecxz
(bad)
daa
lds
fbstp
lock
cmp
cmp
xchg
dec
in
idiv
pop
shl
fimul
je
call
jge
sub
fadd
cmps
ja
repnz
gs
popa
mov
mov
adc
and
hlt
aas
mov
hlt
push
jbe
js
addr16
xchg
cwde
test
xor
mov
fidivr
jmp
(bad)
loope
push
aad
fist
mov
es
inc
mov
or
pop
gs
pop
hlt
mov
int
fnstsw
scas
mov
xchg
ffreep
jmp
pushf
aad
sub
jle
sti
out
xchg
cmp
sbb
adc
xor
dec
push
dec
push
int3
lods
xchg
das
adc
mov
lock
vaddss
movs
hlt
mov
xchg
test
lock
ss
mov
sbb
in
aad
das
lods
mov
push
daa
jmp
adc
imul
and
pop
adc
adc
lea
jb
mov
in
inc
mov
sub
mov
in
sub
adc
ret
adc
sub
cmp
adc
fcomp
call
fimul
fimul
(bad)
adc
aad
xchg
push
leave
jnp
ud2
xchg
sti
mov
and
sbb
iret
jmp
dec
xor
scas
jbe
(bad)
mov
repnz
add
fdivr
es
icebp
mov
jnp
mov
add
and
mov
test
jp
push
jnp
sbb
or
in
mov
and
xchg
push
in
jge
jecxz
inc
mov
and
inc
imul
pop
sar
lds
es
jle
push
aaa
inc
imul
xchg
xlat
pop
stos
(bad)
push
je
push
mov
jle
lds
fistp
out
mul
out
jmp
sub
(bad)
adc
sbb
popa
add
xor
sub
jnp
jg
fcmovu
sub
push
xlat
jecxz
cmp
cmp
and
lods
movs
cmp
mov
call
inc
xlat
xchg
test
fcom
fld
mov
xchg
mov
add
sub
xchg
mov
push
outs
call
mov
sbb
jbe
jmp
ror
addr16
mov
mov
sbb
mov
pop
test
(bad)
out
ret
repnz
stc
fidivr
sbb
mov
mov
pop
lock
cmp
rcr
dec
mov
ret
mov
loope
push
sub
mov
mov
xor
lea
out
xchg
dec
push
pop
(bad)
adc
outs
outs
adc
mov
cwde
add
dec
retf
outs
sbb
pop
sbb
pop
xchg
mov
dec
and
xchg
popf
push
js
stos
push
scas
fisubr
je
in
lahf
jle
xor
scas
stc
loopne
in
sbb
lods
ja
mov
pop
jecxz
in
and
mov
cwde
pop
jmp
scas
jnp
call
xlat
ins
in
sbb
outs
mov
rcr
sub
mul
xlat
sbb
or
inc
cmps
daa
mov
cmp
fisub
pop
test
or
fldenv
stc
jne
jecxz
mov
mov
jns
lds
xchg
mov
scas
pop
jb
clc
push
fsub
je
xchg
aas
(bad)
lods
mov
push
fidiv
jb
fnstsw
nop
xor
xchg
pop
mov
cmc
(bad)
push
adc
fisubr
and
mov
fild
std
shr
add
(bad)
fbld
dec
xor
xor
ss
aaa
loope
arpl
fwait
lods
sub
repz
add
mov
aam
mov
xor
fimul
jp
clc
cmp
fs
xlat
arpl
jne
imul
bound
ins
mov
xchg
cmps
adc
xor
adc
mov
in
xor
das
adc
jae
push
jns
popa
pushf
js
or
sbb
in
cmp
adc
push
add
imul
cmp
inc
jg
popa
xor
stc
jno
lods
inc
ja
nop
loope
inc
sub
add
dec
xor
mov
push
sbb
outs
push
lea
add
stos
and
cmp
fsubrp
push
push
fmul
mov
clc
call
mov
das
mov
mov
adc
rol
hlt
pop
mov
and
imul
and
xor
cmp
jae
mov
sti
in
mov
popf
or
jge
jne
shl
xchg
jns
sbb
out
aas
push
ret
xor
lock
pop
in
mov
or
mov
sub
outs
fdiv
cmps
or
add
add
pop
mov
inc
pop
into
pop
rcr
push
xchg
pop
inc
xchg
in
cli
sub
nop
xor
jmp
sti
lea
pop
jnp
xchg
xchg
cld
je
and
xor
or
mov
(bad)
dec
movs
dec
mov
cmp
inc
loop
ins
adc
movs
sub
cs
jmp
into
repz
ins
aaa
(bad)
sub
daa
fcomp
aaa
fcomp
push
cmp
clc
lock
cmps
clc
aam
mov
ficomp
inc
mov
shl
cli
outs
xor
inc
push
aad
fsub
addr16
mov
out
(bad)
or
jne
fwait
cmp
jge
inc
fbld
inc
ins
mov
mov
shl
mov
lods
icebp
mov
outs
movs
cmps
cmc
mov
das
mov
pushf
pop
imul
call
sbb
pop
push
mov
cmps
je
arpl
and
push
push
jnp
pop
jne
mov
xchg
outs
or
and
loopne
iret
dec
pusha
mov
mov
sar
scas
sbb
dec
and
mov
(bad)
push
ss
or
int3
retf
or
sub
sub
fistp
mov
adc
or
mov
xor
push
jge
add
ret
sti
sub
inc
push
pop
fimul
adc
ja
sbb
inc
aad
in
icebp
jle
add
xor
xchg
cmps
stos
or
bound
pop
and
jne
mov
push
sbb
xor
pusha
adc
add
int
push
jo
fs
and
mov
pop
mov
in
sbb
int
cli
cmp
test
mov
ret
repz
jae
mov
cmp
xor
inc
cdq
mul
dec
movs
cmp
(bad)
jecxz
xchg
vpaddb
cmp
aam
dec
hlt
sbb
fmul
ins
or
push
jmp
loop
cld
push
mov
sub
pop
adc
cmp
sahf
repz
leave
imul
int
and
pop
sbb
rcr
call
call
cmp
pop
pop
bound
or
xchg
mov
push
sub
(bad)
fld
ins
jg
adc
jle
jb
int
pop
xor
test
push
inc
leave
hlt
fdiv
adc
pop
sbb
es
fdiv
xchg
mov
pop
jns
mov
xlat
mov
loopne
into
and
movs
mov
lahf
mov
cld
adc
ja
mov
adc
mov
cmp
xchg
xor
add
xor
mov
stc
nop
mov
fistp
cmp
xchg
cmp
repz
aas
push
retf
scas
cmp
xchg
jge
pop
dec
cmp
fistp
arpl
lock
jmp
fld
(bad)
push
test
jmp
and
in
lds
xchg
test
mov
cwde
fs
xor
int
loopne
jmp
jns
inc
dec
adc
xchg
mov
imul
dec
dec
jge
push
cmp
gs
retf
repz
xor
pop
(bad)
jno
mov
mov
and
sar
into
idiv
rcr
push
xchg
out
push
cmp
mov
jns
int
xor
ret
mov
lds
xchg
xchg
data16
inc
jae
add
addr16
inc
ins
popf
jmp
repnz
aas
cmp
mov
push
test
adc
dec
push
lahf
lahf
out
mov
(bad)
jae
inc
les
mov
adc
out
pop
ret
repz
mov
sbb
cmp
push
inc
imul
retf
cmp
sub
sahf
xchg
lea
out
xchg
xor
fsubr
jg
out
push
or
sbb
mov
sbb
jae
aam
sub
mov
or
and
in
dec
mov
pop
and
clc
mov
addr16
in
xchg
addr16
and
cmp
sti
(bad)
daa
adc
addr16
mov
pop
dec
aaa
outs
leave
inc
pop
or
adc
push
push
or
xchg
xlat
(bad)
(bad)
out
dec
cmp
jmp
ds
lods
mov
(bad)
cmp
sub
push
jne
pop
fidivr
out
dec
mov
in
lods
imul
mov
into
mov
test
bound
std
test
xchg
ss
hlt
aas
popf
out
imul
retf
cmp
pop
sbb
int
push
add
or
jbe
xchg
cld
pop
es
mul
xor
push
stos
jne
dec
ror
jnp
out
xor
(bad)
shl
ret
idiv
inc
xor
or
inc
mov
jmp
shl
out
sbb
not
(bad)
enter
loope
ins
sbb
cmp
xor
xchg
stos
jecxz
mov
out
test
retf
xor
aas
out
lods
jnp
cmp
xchg
push
inc
ss
outs
imul
push
and
push
inc
add
and
mov
popa
scas
ins
stos
dec
fld
jl
sahf
arpl
aas
retf
fs
into
pusha
test
clc
jg
cmp
int3
jmp
sbb
cmp
loopne
and
stos
add
mov
test
leave
nop
retf
(bad)
jmp
(bad)
jmp
mov
pop
xchg
(bad)
mov
jo
pop
xchg
push
jmp
or
adc
inc
es
adc
sbb
ficom
out
xchg
cs
cli
push
and
pop
mov
inc
add
js
cmp
push
pop
mov
dec
or
test
ins
adc
ins
dec
jae
fs
pop
pushf
movs
mov
mov
mov
cmp
sbb
pop
or
cli
(bad)
out
inc
push
inc
ror
pusha
inc
pushfw
imul
popa
adc
fcom
inc
and
xchg
mov
xlat
aam
mov
jbe
mov
sub
fucomp
jmp
jge
dec
adc
movs
les
mov
dec
call
(bad)
aad
in
arpl
mov
push
push
pop
xchg
out
iret
push
pop
cdq
cmp
xor
test
daa
push
jmp
sbb
test
call
add
jbe
mov
xor
imul
popf
shl
mov
outs
push
arpl
sub
xchg
getsec
pop
push
fwait
out
sbb
aaa
push
hlt
dec
clc
test
dec
aaa
sbb
jo
stc
pop
xchg
mov
je
or
leave
adc
(bad)
sbb
push
xchg
adc
jp
arpl
int3
or
sbb
and
movs
pusha
sti
fdiv
cwde
call
pop
scas
inc
jns
mov
in
jge
xchg
sub
pop
xchg
rcl
push
xchg
inc
mov
ffreep
cmp
push
lahf
mov
mov
popa
dec
or
xor
inc
jg
or
enter
jnp
stos
retf
stos
push
adc
dec
mov
xor
cli
ret
idiv
(bad)
lds
xor
xchg
test
xor
pop
test
out
and
call
and
arpl
sti
xlat
dec
mov
cmp
test
mov
imul
xchg
cmps
aaa
int3
loopne
xchg
cmp
mov
pop
add
cdq
mov
rcr
jecxz
in
sub
xor
repnz
cmps
shl
sbb
ins
retf
jge
test
movs
jnp
in
mov
rcr
pop
test
lods
movs
xchg
adc
push
inc
dec
aad
dec
inc
jne
add
imul
pop
mov
outs
push
pusha
mov
pop
(bad)
cmps
mov
sub
mov
xchg
jbe
(bad)
cmp
push
bound
pop
out
add
loope
jbe
rcr
(bad)
cwde
dec
xchg
ss
dec
and
repz
lods
ret
out
mov
mov
cmp
mov
adc
fsub
jmp
pop
jae
push
dec
or
ja
sub
shr
and
jle
not
in
stos
push
call
or
push
retf
push
fisttp
add
in
aaa
sti
in
mov
clc
stos
xor
cmp
cmp
pop
and
rol
push
outs
jle
jb
jb
and
aad
fsubr
rcl
add
push
lods
test
cmp
adc
adc
out
and
ins
cmps
push
inc
jno
repz
es
or
cmc
mov
cmc
inc
and
rcr
stc
ror
and
sub
sub
jne
or
or
xor
pop
sbb
mov
jecxz
outs
sbb
sahf
jp
clc
push
xlat
sbb
aaa
in
aas
push
mov
jmp
iret
add
movs
pop
rcr
scas
sub
inc
xor
cdq
repnz
jo
jmp
push
adc
jb
cmp
add
leave
xor
mov
mov
lds
mov
sbb
and
cmp
xor
or
pop
push
xchg
ins
jg
sub
(bad)
loop
fsub
jecxz
jecxz
pop
jbe
clc
les
adc
in
leave
ret
hlt
pop
xor
dec
mov
push
cli
scas
(bad)
not
leave
in
push
push
cmp
lock
pop
in
push
aaa
ret
jge
cmp
jns
and
stc
movs
daa
sub
xchg
(bad)
fstp
jecxz
push
fsubr
out
fcomp
loop
fs
adc
jecxz
loope
inc
fwait
idiv
push
in
jbe
xor
mov
dec
daa
or
ds
(bad)
fcom
sbb
mov
dec
fild
mov
mov
icebp
in
push
pop
push
enter
ret
cwde
adc
mov
add
mov
mov
inc
adc
jecxz
mov
pop
jae
sub
xor
xchg
lds
sbb
inc
cmp
adc
mov
into
push
ret
inc
push
mov
add
(bad)
jmp
xchg
ds
adc
add
pusha
scas
push
mov
popf
pop
dec
pop
or
aas
outs
(bad)
pop
push
popf
ins
ins
xchg
stos
inc
adc
jle
addr16
mov
mov
stos
mov
ficomp
sub
in
sub
call
push
std
mov
not
outs
jae
inc
push
jp
xor
fs
ins
push
or
std
(bad)
inc
xchg
retf
xchg
sub
xor
mov
sub
or
mov
dec
jp
cmps
jmp
rcl
xor
ror
lds
sub
or
jbe
pop
inc
mov
pop
stc
push
scas
push
pop
cmc
pop
sbb
fild
cmp
push
loopne
jb
pushf
imul
les
xor
cdq
jae
aas
push
call
in
add
popa
fnstenv
fild
mov
enter
inc
jge
ror
xchg
mov
fld
mov
call
adc
push
jns
loope
inc
cmp
or
cs
pop
or
push
and
add
sub
call
xlat
pushf
push
cs
xchg
and
xchg
stc
scas
pop
bound
mov
repnz
stos
pusha
popa
push
xor
in
dec
xchg
int
loopne
or
(bad)
or
in
(bad)
dec
dec
fwait
push
test
in
push
push
sbb
add
inc
mov
popf
and
cli
and
cld
inc
ret
stc
sbb
test
fisubr
inc
(bad)
mov
test
jo
fdiv
mov
stos
scas
movs
dec
sub
and
jp
gs
fwait
push
add
mov
stos
(bad)
dec
sub
mov
movs
out
push
jecxz
(bad)
fild
or
add
or
mov
cli
retf
jge
test
sbb
arpl
dec
mov
gs
loopne
adc
ins
push
mov
inc
fcmovu
stc
pop
push
loopne
dec
fisttp
add
and
or
popf
fld
mov
xor
loopne
jmp
fwait
loopne
dec
and
out
int
jmp
cdq
es
lods
push
sbb
es
pushf
aas
mov
fabs
adc
sbb
js
test
mov
sbb
sar
mov
cmp
dec
je
and
call
cmps
push
push
call
in
sub
ret
mov
mov
jno
sub
aaa
retf
mov
xor
mov
loop
stos
test
and
add
or
test
mov
test
mov
cdq
int3
and
loopne
sbb
call
jle
or
gs
pop
or
mov
into
ins
jp
add
mov
iret
mov
repnz
aad
fdiv
jmp
(bad)
rol
movs
hlt
adc
daa
mov
mov
xchg
cmp
outs
adc
scas
imul
dec
(bad)
jbe
cmp
xor
fsub
inc
inc
push
pop
mov
xor
hlt
and
ds
out
or
call
and
mov
xchg
lods
mov
das
push
outs
push
adc
or
dec
jecxz
aas
xchg
and
xchg
cwde
sbb
adc
jne
arpl
bound
xchg
xor
shl
lahf
pop
out
cmp
push
xchg
xchg
xchg
cmps
dec
imul
jbe
push
push
fucomip
jns
stc
jle
xor
jg
js
pop
outs
dec
leave
jge
sar
aad
pop
aas
cmps
mov
fist
repz
(bad)
popf
mov
pop
mov
sub
(bad)
dec
sub
inc
mov
fwait
xchg
(bad)
fisttp
sbb
leave
jns
les
sbb
lock
cmps
imul
imul
lahf
fist
add
test
xchg
mov
adc
push
cld
repnz
and
pushf
neg
mov
dec
cmp
ja
cmp
add
mov
call
xlat
push
mov
stc
push
push
pop
imul
test
jg
mov
cs
mov
pop
inc
sub
outs
jae
xchg
push
imul
retf
or
xor
mov
adc
mov
pop
into
lods
pop
or
imul
cmc
push
std
outs
retf
scas
test
jmp
add
mov
stc
cdq
fcmovnbe
sbb
dec
jnp
das
adc
inc
jns
aaa
cmps
mov
mov
sub
sbb
adc
scas
repnz
scas
shl
sbb
mov
lds
mov
(bad)
mov
jnp
mov
call
nop
(bad)
repnz
rol
sbb
jno
jae
int
test
xor
inc
fisubr
data16
jmp
gs
jmp
call
push
pop
iret
cmp
sub
ins
xor
mov
add
fsubp
sub
ins
in
out
and
adc
push
rcr
shl
and
(bad)
add
sbb
stos
leave
jae
cld
xchg
sar
(bad)
pusha
cmps
pop
xchg
and
ret
call
cdq
pusha
mov
rcr
xchg
xchg
adc
retf
sbb
movs
adc
shl
xchg
mov
in
inc
cli
gs
loop
call
fsub
jae
test
int3
or
ret
nop
pop
cmps
rcr
sahf
sti
pop
cwde
xor
sbb
ror
pop
and
add
mov
das
shr
scas
xchg
daa
push
mov
es
mov
pop
rcr
jb
or
out
cmps
iret
bound
test
adc
sub
adc
jb
sbb
push
pusha
adc
ret
or
lods
sub
adc
mov
nop
mov
out
or
adc
jnp
adc
mov
xor
cmp
add
cs
xchg
rcl
xchg
and
xor
aad
dec
mov
out
out
test
xlat
inc
cmps
push
mov
imul
xor
inc
loope
sub
inc
xor
adc
int
sub
and
bound
cmp
inc
mov
mov
jp
inc
jnp
fwait
add
nop
mov
mov
out
push
or
aaa
fwait
xchg
push
pusha
data16
rcl
sub
pusha
ffree
call
cwde
mov
adc
scas
retf
xor
arpl
(bad)
jecxz
loope
imul
sub
js
push
imul
in
in
fs
mov
sbb
mov
std
in
sub
scas
(bad)
enter
int
leave
mov
sub
adc
sbb
or
ds
mov
jmp
ds
add
cli
cmp
jno
inc
in
xchg
clc
mov
test
into
dec
(bad)
adc
pop
repnz
push
bound
popf
or
lds
mov
and
inc
or
mov
cmp
push
in
jb
pop
cmp
cmp
(bad)
push
(bad)
stos
xor
rcr
int
jg
arpl
arpl
cmp
cmps
call
fwait
mov
push
in
xor
push
pop
sbb
mov
pop
js
push
enter
cmp
inc
xchg
mov
pusha
cmp
lea
cmp
adc
dec
dec
outs
and
shr
jnp
sbb
pop
add
mov
neg
cmp
add
or
jle
sbb
(bad)
sar
stos
leave
or
imul
inc
and
dec
xchg
or
inc
pop
ret
into
adc
lods
shr
pop
pop
es
ins
(bad)
push
push
mov
sub
add
push
and
or
popa
jg
gs
adc
outs
dec
or
int3
loop
dec
add
push
dec
sub
and
xor
stos
out
fldcw
or
jo
cs
imul
mov
out
push
xor
jmp
mov
data16
popf
aas
cmp
pop
pop
sbb
lock
loopne
push
test
clc
or
jae
sub
cmc
leave
adc
div
popf
mov
cmps
movs
adc
fbstp
pusha
sbb
pop
in
or
aas
mov
dec
dec
enter
aad
stc
call
loop
out
iret
jl
pop
jp
(bad)
shr
jge
imul
cmps
xchg
(bad)
mov
icebp
sbb
add
dec
ins
adc
stc
inc
std
mov
(bad)
iret
mov
faddp
ret
clc
push
push
xchg
sbb
push
fistp
popf
dec
outs
fisubr
inc
cli
shr
inc
mov
sbb
fstp
aam
mov
xchg
dec
xchg
inc
push
pop
cld
jle
xchg
in
sbb
inc
xor
jne
inc
loop
ss
mov
(bad)
hlt
iret
push
dec
fimul
fstp
repnz
mov
inc
mov
push
cmps
rcr
pop
stc
inc
push
adc
nop
in
out
inc
mov
dec
addr16
and
test
es
into
cmp
in
scas
(bad)
in
ins
test
jbe
(bad)
cli
fyl2x
gs
jmp
cmp
sub
push
shl
sub
xor
cmp
mov
(bad)
pop
mov
(bad)
cmps
pop
add
gs
jecxz
enter
push
cmp
rol
pop
or
pop
call
mov
shl
cdq
(bad)
cld
ror
xor
add
mov
adc
and
jmp
loop
and
add
inc
jmp
ret
xchg
repnz
xchg
pop
sub
mov
push
inc
std
cld
add
pushf
fs
scas
not
push
adc
sbb
jbe
ds
or
(bad)
outs
cmps
mov
dec
sub
lea
jmp
cs
rcr
dec
jl
out
mov
(bad)
xor
mov
outs
or
popa
addr16
inc
cli
ss
aas
jecxz
cmovb
xor
jl
sahf
adc
outs
adc
cmps
pop
push
mov
enter
pop
pop
jbe
aad
punpckhbw
xchg
scas
shl
or
mov
jg
dec
pop
lods
bound
(bad)
out
inc
jl
pushf
adc
adc
outs
mov
or
and
pop
stos
mov
adc
fidiv
jle
mov
push
clc
jne
pop
xlat
xchg
scas
adc
sbb
pop
outs
int
icebp
sti
push
ret
mov
dec
mov
and
mov
xchg
jbe
stos
sbb
js
pushf
jb
pop
cld
pop
movs
pop
mov
adc
dec
mov
xor
out
fmul
(bad)
fadd
or
push
jnp
pop
pop
cmp
dec
ins
shrd
int
push
mov
mov
pushf
fisttp
xchg
dec
(bad)
push
mov
sub
mov
cld
mov
dec
out
scas
stc
inc
sub
jno
adc
inc
(bad)
lds
push
js
rol
and
xchg
(bad)
push
cmp
push
in
jmp
(bad)
das
lock
dec
cs
sub
inc
pop
fsubr
mov
arpl
push
iret
adc
hlt
sti
inc
loop
mov
jno
mov
inc
mov
sub
int
loop
mov
retf
dec
(bad)
lea
push
cmp
shl
mov
adc
(bad)
mov
jp
xchg
dec
mov
cmp
mov
adc
push
lock
pop
fwait
dec
shr
sbb
out
frstor
fwait
cld
mov
mov
xor
pop
ja
mov
inc
and
test
pop
push
push
cmp
add
hlt
aad
push
pop
(bad)
repnz
jecxz
cmp
addr16
adc
cmp
icebp
in
fdivr
xchg
dec
test
xchg
daa
(bad)
mov
out
cli
sub
cs
popa
rcl
data16
xor
adc
cmp
push
jnp
into
or
mov
inc
rcr
mov
test
ret
fist
sbb
xchg
inc
and
add
push
retf
push
add
xchg
mov
cmp
add
dec
jb
mov
(bad)
vmread
cmps
pop
loope
repnz
lock
popf
ret
movs
mov
jle
arpl
mov
xor
or
ds
xor
push
test
adc
push
mov
fs
mov
push
xlat
jecxz
imul
repz
(bad)
imul
iret
inc
fstp
in
shl
into
retf
retf
cmps
retf
mul
inc
push
adc
in
jge
stc
mov
mov
test
pop
xlat
daa
mov
pop
cwde
mov
inc
aaa
scas
loopne
out
dec
inc
outs
cmp
(bad)
out
aam
ja
(bad)
and
fisubr
mov
(bad)
or
mov
or
adc
test
js
les
mov
mov
fidiv
mov
(bad)
enter
(bad)
(bad)
ds
call
mov
hlt
in
scas
es
movs
push
icebp
retf
call
sbb
jge
sti
push
clc
mov
mov
loop
rcr
repz
inc
mov
ins
out
(bad)
repnz
and
xlat
ins
call
jb
test
inc
mov
pop
retf
lea
jg
dec
mov
mov
pop
jl
inc
sti
mov
fldcw
stos
push
call
or
cmps
(bad)
and
dec
imul
fs
ja
int3
sub
retf
lods
dec
jmp
mov
dec
adc
imul
(bad)
arpl
add
push
xchg
cwde
dec
bound
stos
pop
dec
fcmovu
dec
aad
or
jg
push
lods
inc
xchg
sahf
add
bound
bound
jmp
cmps
xchg
popf
pop
fwait
push
jb
retf
xchg
int3
cmc
jb
cmc
cli
jnp
nop
add
sub
not
jb
jl
xchg
enter
jmp
and
ins
and
or
imul
add
loopne
test
lds
repz
(bad)
add
xchg
cld
mov
das
push
inc
or
and
stos
div
in
popa
inc
imul
call
or
rol
jo
pop
sti
pop
hlt
push
adc
cmp
sti
xor
ins
or
data16
pop
xchg
xchg
aaa
retf
pusha
pop
push
rcr
jg
add
push
scas
aad
pop
mov
out
out
add
add
ret
mov
mov
cmp
cmp
and
mov
mov
hlt
imul
stc
pop
lods
adc
dec
jle
and
imul
pop
aas
imul
enter
inc
sub
jle
out
inc
stc
and
std
adc
jno
enter
mov
stos
retf
ja
pop
test
(bad)
scas
sbb
push
mov
aas
test
lock
sbb
xchg
imul
or
mov
lods
in
jmp
loopne
push
outs
cmp
jnp
cmp
push
daa
add
test
mov
div
jl
loopne
sbb
rcr
sbb
ins
push
(bad)
inc
shl
jne
push
lods
add
xchg
stc
lea
ds
pusha
jl
jae
cmps
sbb
out
or
shl
aaa
add
fnsave
fidiv
or
jns
(bad)
mov
test
mov
or
jmp
test
js
push
adc
imul
pop
xlat
aam
(bad)
or
push
xchg
pop
dec
adc
imul
push
ins
imul
cs
call
mov
loop
add
xor
imul
jp
pushf
mov
int
sub
jae
cmp
fwait
out
pop
and
aas
jmp
sbb
xor
in
ja
sbb
mov
out
in
push
cmps
jp
sbb
movs
xchg
ss
fbstp
fld
into
jnp
sbb
push
mov
fstp
jno
imul
mov
int3
les
loop
cmp
jno
stos
pop
fidivr
ret
inc
push
push
add
movs
int
or
dec
(bad)
lods
mov
push
mov
scas
xor
into
shl
mov
repz
ins
mov
xor
push
and
call
mov
sub
retf
in
mov
icebp
mov
sub
retf
addr16
mov
cli
cmp
leave
adc
mov
sbb
dec
xchg
dec
jno
mov
aam
out
stos
pop
cmp
mov
push
lahf
iret
mov
leave
das
jle
fwait
test
push
mov
and
mov
adc
call
dec
sub
mov
mov
lock
sbb
adc
mov
jle
xchg
add
fdiv
push
mov
in
pusha
repnz
rcl
ss
lock
adc
mov
fwait
mov
mov
fdivr
cmps
sbb
(bad)
and
push
mov
aad
add
sbb
fsub
sar
in
xchg
mov
into
imul
out
xor
jge
ds
retf
bound
xlat
add
icebp
lods
jb
(bad)
outs
or
xor
ret
pop
mov
mov
mov
int
clc
jmp
mov
lods
(bad)
leave
add
and
pop
xor
add
push
mov
ja
aaa
xchg
xor
xor
lea
jno
push
adc
movs
jecxz
sbb
cmp
cli
dec
ret
and
pushf
pop
and
cmps
scas
cs
(bad)
stc
inc
aas
nop
(bad)
rcr
add
out
xor
js
pop
xchg
push
cmp
stc
cwde
or
stc
push
add
nop
push
and
jle
es
aaa
scas
push
nop
imul
data16
inc
add
dec
jl
pop
sbb
cmp
jg
call
inc
ret
cs
or
push
fdivr
out
(bad)
(bad)
sbb
mov
retf
stc
cmp
or
mov
xor
mov
add
out
push
push
outs
aam
add
loopne
inc
adc
ret
addr16
mov
loopne
sbb
xor
imul
(bad)
sbb
xchg
mov
adc
pop
or
cmp
inc
jae
stos
adc
dec
(bad)
fdivr
cmp
inc
test
into
or
jae
inc
push
or
lods
not
jl
test
repz
cmp
mov
dec
mov
jg
add
in
in
aas
sar
in
movs
dec
adc
mov
sbb
stos
cmp
int3
fsubr
sbb
fwait
xor
mov
rcl
fistp
xchg
dec
call
xchg
stos
arpl
mov
dec
xchg
fst
cmp
sub
push
mov
dec
push
fldenv
test
(bad)
mov
(bad)
or
enter
stos
push
push
outs
mov
lahf
cmp
loope
ret
shr
adc
pop
dec
mov
mov
jnp
je
jge
and
dec
push
mov
lods
sub
sub
cmps
or
stos
add
jb
mov
push
(bad)
jmp
sti
push
jp
xchg
mov
outs
xor
movs
dec
pop
cmps
adc
pop
cdq
dec
(bad)
mov
mov
xchg
cmp
mov
mov
das
lahf
pop
ja
inc
sbb
sbb
shr
movs
or
cdq
call
fsubr
cmp
pop
test
xor
dec
sbb
icebp
fisub
loop
xchg
imul
sbb
call
inc
je
cmp
jne
add
push
iret
retf
xchg
push
cmp
mov
out
scas
leave
mov
in
jge
sbb
mov
inc
jae
out
pop
mov
mov
lock
add
cwde
inc
mov
adc
jo
int3
inc
out
adc
aas
jle
enter
push
push
xacquire
out
daa
dec
test
mov
movs
mov
mov
xchg
mov
pop
ficomp
cli
lods
gs
aam
xor
push
jns
add
imul
mov
rol
xor
mov
ror
xor
adc
js
stc
push
xor
in
jns
jno
in
fild
adc
leave
imul
cmp
jge
addr16
neg
js
xlat
sbb
push
(bad)
pop
dec
dec
(bad)
lahf
into
pop
mov
dec
cmp
pop
inc
cmc
pop
(bad)
jb
xor
cld
pop
add
mov
sub
xchg
dec
mov
daa
out
adc
pushf
and
loope
pop
retf
mov
and
fstp
inc
cmp
jb
add
and
pop
fisttp
js
pop
test
inc
rcr
push
movs
mov
add
mov
push
jno
(bad)
mov
mov
jo
push
jne
bound
xchg
mov
pop
jmp
rcl
cdq
xor
inc
aas
xchg
int
cwde
pushf
fild
xlat
(bad)
jae
xor
test
loope
xchg
movs
xchg
cmp
sbb
mov
or
jmp
out
dec
ss
js
call
xchg
mov
pop
xchg
rcl
push
inc
or
ret
xor
fld
and
inc
dec
into
xor
ret
inc
ja
rcr
sbb
addr16
shr
adc
(bad)
xchg
ret
cmc
xchg
mov
lea
mov
in
xchg
or
cmc
and
adc
mov
and
pop
in
in
adc
adc
ins
hlt
add
push
xchg
fstp
push
pusha
repnz
(bad)
into
aas
sbb
sub
xchg
stos
call
mov
xchg
(bad)
aaa
push
xor
fiadd
pop
xchg
loopne
scas
ret
mov
add
cmps
pop
gs
sub
out
jae
fcom
mov
pop
pop
adc
xor
jg
int
repz
cmp
test
mov
mov
adc
ds
pop
inc
inc
clc
cmp
cmc
mov
mov
outs
test
xchg
imul
outs
sub
pop
into
push
sbb
fisub
cli
das
dec
xor
repz
or
out
jp
popf
push
imul
inc
adc
popa
mov
sbb
cmp
fnstsw
fcos
fwait
bound
repnz
repz
int
dec
xchg
repnz
adc
cmc
shr
adc
sbb
cmp
mov
in
lods
movs
pusha
pop
aaa
inc
imul
out
sub
(bad)
xchg
xchg
pop
out
jg
loope
lock
mov
inc
pop
adc
sub
jne
movs
sub
mov
pushf
push
sub
ins
add
scas
rol
mov
sbb
daa
xchg
es
jle
xchg
ret
add
fwait
mov
lock
jne
mov
cmp
jo
cmp
enter
xor
or
push
push
pop
add
push
rol
push
cld
inc
nop
sub
mov
sub
mov
xchg
mov
ficomp
pop
push
jmp
loop
jmp
pop
pop
pop
imul
shr
jb
aaa
cmp
and
int
mov
dec
mov
jae
adc
lock
add
jb
dec
(bad)
daa
cmp
jg
push
push
jmp
mov
bound
fisub
es
push
push
ins
sbb
daa
cld
sbb
stc
daa
sbb
out
inc
fs
push
(bad)
in
fs
adc
aas
add
cmp
push
jne
addr16
outs
pop
add
cwde
(bad)
or
js
(bad)
jmp
std
fisubr
shr
xlat
popa
mov
xchg
cmp
inc
adc
test
rol
or
sub
sub
mov
int
stc
push
sub
cld
ret
dec
xor
sbb
pop
mul
sbb
cmps
clc
mov
cmp
test
sub
push
movs
dec
ss
adc
js
jge
sub
ret
xchg
stos
mov
cmc
pop
call
push
imul
cmps
mov
mov
cmp
jmp
push
inc
mov
sbb
mov
test
aad
push
push
repnz
xor
add
cmp
hlt
or
into
and
or
test
outs
inc
cmp
(bad)
daa
imul
mov
xchg
add
jno
aam
fadd
addr16
mov
inc
cmp
push
daa
int
mov
cmp
data16
maskmovq
test
neg
mov
sbb
mov
jg
mov
fmul
fs
clc
add
xchg
std
xor
aas
jmp
push
and
stc
push
pusha
jg
shl
out
pop
or
jg
retf
lods
sub
mov
adc
cmp
pop
fsub
dec
xchg
mov
stos
lods
sahf
inc
cli
es
pop
aam
xchg
sbb
fld1
ja
adc
jmp
inc
lds
lahf
mov
mov
mov
push
mov
movs
inc
mov
je
push
and
das
(bad)
ficomp
push
push
not
push
cld
test
retf
pop
pusha
jmp
add
sub
das
pop
retf
call
ja
xor
icebp
ins
dec
push
sbb
shr
and
xchg
rol
(bad)
(bad)
(bad)
jle
adc
fcomp
loopne
das
mov
add
stc
bound
add
cmp
cmp
jns
sbb
mov
jno
xor
xchg
daa
rep
fidivr
mov
sub
add
fmul
aas
jmp
std
push
jg
out
sub
(bad)
dec
mov
retf
loope
mov
ret
call
test
in
jnp
jnp
inc
enter
ret
mov
xor
push
shl
dec
inc
sbb
call
and
icebp
lock
xor
dec
aas
ins
mov
push
fistp
sti
sbb
jae
mov
mov
ds
bound
nop
inc
es
add
ins
out
push
mov
les
int
xor
inc
xchg
xchg
or
stos
sbb
dec
sar
outs
out
inc
dec
xchg
pop
in
call
jns
shl
jne
loop
pop
mov
retf
je
xor
pop
test
add
fnstsw
cli
stos
pop
lock
scas
inc
and
cmps
xor
stos
shr
leave
lods
mov
pop
fs
mov
stc
ret
xor
mov
dec
jle
cld
pushf
push
jbe
pop
pop
sahf
or
scas
and
ins
ficomp
sbb
jne
fwait
sbb
fwait
ret
test
add
sbb
sar
lods
jo
adc
mov
dec
adc
ja
push
into
icebp
in
jmp
jnp
mov
xchg
mov
in
pop
jmp
int
mov
aas
mov
add
pop
sbb
daa
mov
mov
scas
mov
imul
aaa
xor
mov
cmc
jae
(bad)
mov
jae
lea
lahf
sti
jle
push
dec
add
jecxz
outs
inc
pop
es
std
mov
or
add
mov
test
or
mov
imul
loop
mov
in
xor
adc
repnz
pop
dec
ja
cmp
fsub
jbe
and
jb
or
ret
and
or
and
aas
aad
je
addr16
pusha
ret
push
es
mov
mov
xchg
push
lea
add
xor
dec
ds
adc
je
jg
lock
pop
out
xor
fwait
jns
cmp
jne
jo
imul
and
ja
(bad)
mov
lods
sti
outs
cmp
aad
pop
xchg
or
dec
fucom
test
add
xchg
jp
test
and
mov
pop
bound
pop
into
xor
ret
mov
sbb
cmp
or
arpl
in
adc
and
stos
test
test
jns
loopne
jb
push
dec
xor
call
lods
add
and
jp
mov
mov
jo
push
psubd
inc
loop
mov
inc
movs
es
clc
cmp
hlt
retf
sbb
mov
clc
ja
nop
push
imul
fwait
push
add
js
fst
das
into
cmp
out
push
pop
les
adc
pop
add
sbb
xchg
jo
outs
and
addr16
cmp
repnz
aas
fcmovne
push
mov
call
aaa
add
or
xchg
or
call
adc
sahf
and
pop
adc
cs
pop
push
sbb
or
dec
mov
adc
adc
shl
jmp
ja
mov
mov
and
rcr
imul
push
add
jecxz
mov
imul
sub
pop
add
inc
mov
cld
pop
fs
xchg
xchg
inc
ret
js
dec
jno
push
push
and
mov
mov
ja
push
jne
loopne
adc
xor
and
xor
mov
xor
gs
mov
push
cmp
cmc
lods
lock
das
icebp
int3
pop
fwait
mov
lock
retf
fwait
jl
fist
mov
(bad)
jmp
and
pushf
mov
retf
pop
pop
mov
pop
and
sbb
mov
xchg
xchg
ret
retf
outs
sbb
fsub
js
dec
dec
cmp
pop
fwait
mov
mov
dec
(bad)
out
xor
add
jmp
xchg
repnz
test
xor
or
popf
fisub
sub
repz
adc
push
add
in
push
int
mov
sub
sahf
and
jo
sahf
movs
mov
sbb
stc
add
inc
xchg
xchg
or
fxch
push
cmps
rcr
jmp
push
imul
stc
aad
pop
inc
add
mov
cmp
dec
and
adc
cmp
adc
pop
xchg
aam
in
xor
enter
xlat
inc
icebp
lods
imul
fs
repnz
mov
pop
retf
sbb
dec
test
dec
call
push
bound
mov
pusha
(bad)
sub
out
cmp
ss
ficom
xchg
cs
jg
dec
(bad)
cmc
cmp
ins
adc
inc
dec
in
cs
jne
jge
xor
and
daa
pop
(bad)
inc
fadd
sahf
xchg
fist
jae
jbe
imul
shl
jae
sub
mov
add
rcr
jg
mov
mov
fucomip
inc
(bad)
jle
jo
mov
imul
loopne
scas
inc
shr
pop
mov
push
pop
mov
ins
dec
xchg
dec
cmps
cmc
push
enter
add
push
or
aaa
popf
mov
pop
cwde
add
ficom
pop
lods
rol
int3
lods
retf
inc
inc
fsub
outs
retf
jmp
mov
sbb
jne
sbb
push
mov
mov
pushf
mov
sub
adc
or
pop
test
(bad)
sbb
dec
frstor
cmp
dec
hlt
jnp
retf
adc
sub
jno
(bad)
xor
movs
rcr
jo
push
jbe
push
aam
cmps
std
mov
call
or
and
mov
adc
pusha
lods
pop
(bad)
mov
int
fldenv
add
ret
mov
ficom
mov
js
sbb
ds
in
loopne
sbb
jne
call
outs
(bad)
adc
and
ja
repz
adc
add
xchg
fadd
imul
nop
ror
retf
enter
xchg
retf
mov
(bad)
out
in
lods
cmc
shl
jecxz
push
popf
in
xchg
xchg
mov
mov
push
xchg
xchg
sbb
pop
cmc
mov
in
sbb
xchg
movs
cmp
xor
stos
out
rol
mov
(bad)
(bad)
ins
imul
retf
iret
(bad)
call
push
or
sub
(bad)
je
sbb
xchg
leave
push
or
pop
mov
and
jl
daa
inc
test
or
out
push
mov
stos
std
ret
test
cmc
dec
and
and
jns
xchg
dec
fimul
or
int3
fadd
xchg
out
pop
jae
bound
mov
jge
mov
out
fiadd
jmp
ret
dec
not
xchg
lahf
dec
mov
mov
xchg
adc
adc
clc
jmp
js
adc
jo
or
std
data16
and
cmp
cmp
bnd
rol
adc
sahf
cmp
push
ds
sub
icebp
push
cmps
pop
adc
xchg
pop
mov
pop
jmp
xor
and
inc
cdq
sbb
mov
and
mov
xor
nop
adc
ret
rol
xor
out
imul
inc
call
jl
(bad)
(bad)
or
and
and
pop
dec
cmc
js
in
add
mov
in
arpl
mov
mov
outs
hlt
sti
ss
js
xor
jnp
xor
dec
out
and
fld
test
mov
pop
push
loopne
xor
pop
mov
cld
fcomp
sub
push
mov
mov
inc
daa
or
(bad)
lock
scas
cmp
cwde
sar
or
mov
cmp
and
mov
not
or
ret
cld
arpl
popf
and
xor
inc
ret
and
sar
retf
mov
or
icebp
test
mov
push
loope
push
or
mov
mov
push
aas
or
aad
cli
xchg
adc
jne
(bad)
shl
dec
test
cmp
cli
dec
pop
mov
rcr
cmp
test
xor
pop
test
xchg
push
adc
cmp
mov
fld
push
add
jmp
sar
push
pop
and
push
sub
push
mov
and
xchg
retf
icebp
dec
adc
loopne
xor
xor
xor
mov
(bad)
lods
loop
data16
fwait
jne
fldenv
pop
outs
int
xchg
clc
stos
mov
add
and
or
mov
(bad)
je
rcr
das
mov
es
cmp
div
dec
mov
pushf
xlat
sbb
push
jb
dec
cdq
mov
cli
std
fld
pop
iret
daa
sbb
ficom
jbe
adc
xor
popf
popf
adc
sahf
out
fwait
ret
push
outs
pop
ret
mov
add
xor
push
shr
sar
xchg
in
ins
add
or
cmovnp
loopne
xchg
cmps
aad
cld
or
dec
mov
(bad)
pop
xchg
xchg
enter
or
movs
mov
pop
in
imul
or
aad
xor
adc
dec
mov
lahf
push
cmp
xor
mov
lods
scas
xchg
cmps
adc
jecxz
ficom
jp
adc
cmp
push
imul
jl
ds
ins
in
das
mov
lods
xor
and
or
int3
cmp
cmp
pop
mov
dec
ins
jo
int3
inc
js
ss
out
mov
(bad)
out
or
std
lods
sub
shr
cmp
and
fisub
or
cmp
outs
push
add
iret
inc
pop
loopne
ins
and
push
pop
and
je
outs
int
jl
inc
ins
mov
jae
jns
xor
js
aam
sbb
sub
(bad)
call
xchg
in
jle
and
add
jl
fwait
dec
inc
push
xchg
icebp
cld
lods
mov
mov
les
jbe
ins
dec
pop
out
cmps
gs
add
in
repnz
test
mov
dec
fs
icebp
jb
sub
lock
jbe
push
into
sub
je
test
cmp
arpl
(bad)
xor
mov
mov
dec
retf
fild
ret
call
shr
jnp
xchg
repnz
sbb
scas
neg
push
addr16
and
dec
jae
jecxz
cmp
dec
ss
pop
push
loope
mov
inc
and
cmp
movs
jmp
push
ss
ror
inc
add
and
sub
inc
cli
xor
cmp
mov
adc
push
mov
sub
mov
mov
cmps
xor
pop
in
sub
sbb
lock
sar
pop
outs
sbb
out
mov
add
test
dec
mov
mov
outs
sub
clc
lock
stos
ret
icebp
loopne
push
lods
js
into
je
and
shr
lock
jno
retf
push
mov
jg
pop
fdiv
mov
sub
and
add
in
xchg
gs
stos
ds
and
and
push
push
mov
dec
jnp
in
jecxz
xlat
push
cld
out
or
push
ds
or
imul
jle
push
cmp
push
dec
sub
cld
push
lahf
push
ret
ret
inc
push
test
add
or
sbb
mov
xor
retf
cli
loop
cs
adc
fdivr
stos
inc
dec
cmp
jmp
or
dec
psadbw
xchg
ror
xor
in
pop
out
pop
mov
aad
sub
int
mov
xchg
inc
movs
sub
xchg
xchg
and
fidivr
or
mov
mov
sar
js
jno
inc
sbb
mov
ins
pop
sbb
sbb
xchg
fidivr
pusha
xchg
dec
jl
mov
cmps
or
int3
cmp
inc
pop
mov
bound
pop
sub
inc
movs
adc
test
mov
jp
or
rol
mov
mov
adc
jl
scas
ins
cmc
mov
xchg
stos
push
out
mov
cmp
dec
addr16
mov
xchg
ja
jno
pop
clc
push
ret
xchg
cmp
loopne
int
lods
xchg
mov
jecxz
cs
lea
mul
outs
fdivr
fsub
into
gs
push
cdq
push
fst
mov
movs
adc
pop
xor
pop
stc
lss
lock
or
xor
fimul
mov
jo
in
loope
or
mov
push
fisub
pop
stos
jne
lods
bound
ins
pop
sar
(bad)
mov
cwde
sub
mov
nop
jmp
int3
jmp
fcomp
inc
(bad)
dec
cmps
cmp
lds
ror
cwde
(bad)
lods
in
push
imul
pop
adc
mov
aas
loop
mov
or
loop
ror
push
cli
cld
call
loopne
outs
cmp
mov
fnsave
sub
pop
mov
mov
adc
out
imul
cmp
test
adc
dec
jmp
sbb
stc
test
inc
cwde
xor
pop
mov
adc
inc
mov
bswap
xchg
inc
push
das
test
sbb
adc
test
addr16
pop
push
mov
add
lods
retf
xchg
fcmovnbe
xchg
sbb
out
rcr
arpl
pop
push
mov
sub
sar
data16
repnz
adc
mov
add
in
pop
add
push
jae
jg
fdiv
xchg
hlt
lahf
cs
rol
sbb
mov
dec
mov
(bad)
sub
gs
cmp
mov
imul
dec
je
xor
lods
pop
lods
ficom
pop
rcr
mov
ficomp
push
pushf
push
loope
iret
add
das
hlt
adc
mov
xor
cdq
fild
pop
mov
outs
xor
and
and
or
xchg
or
mov
dec
bound
data16
test
call
xchg
pop
jne
mov
iret
xor
outs
cwde
sub
inc
call
daa
sub
or
pushf
stos
push
rcr
xchg
add
jl
xor
(bad)
out
test
mov
xor
mov
jns
scas
jmp
mov
stos
test
inc
xchg
pusha
sbb
xor
mov
jae
jno
mov
sbb
inc
fwait
pop
sbb
rcl
pop
out
jg
fisttp
inc
loopne
das
call
lods
dec
cdq
and
sub
fstp
les
mov
nop
rol
stos
xor
mov
mov
fld
in
lds
mov
loop
test
jo
xchg
jecxz
aad
loopne
jb
fwait
stos
out
sub
push
jmp
mov
xchg
pusha
cmp
enter
pop
ss
jg
cwde
lods
jp
imul
es
sahf
(bad)
fwait
push
call
add
test
stos
fisub
dec
cwde
pushf
ss
in
popa
leave
pop
retf
mov
mov
das
push
ja
or
pop
stc
leave
adc
dec
push
mov
inc
movs
lock
stos
cmp
push
fistp
xor
pop
add
test
clc
jmp
fld
pusha
jbe
rcr
dec
pop
outs
dec
jne
xchg
jp
fnstenv
adc
cmp
push
cmps
inc
mov
aas
and
popf
retf
cmps
loope
mov
jmp
mov
push
pop
add
mov
retf
jmp
push
call
adc
cdq
ins
sub
popf
sbb
imul
daa
jno
sbb
xor
add
and
loop
pop
mov
add
push
scas
mov
and
test
pop
mov
push
push
xor
push
xchg
push
and
and
inc
fadd
es
push
stos
dec
fdivr
pop
cmp
dec
inc
das
std
mov
mov
pop
je
in
(bad)
hlt
movs
stos
adc
and
repnz
aas
outs
test
sbb
jge
loope
jecxz
das
jecxz
loopne
sahf
sub
inc
and
cli
jo
call
xchg
out
cli
bound
stos
out
jmp
movs
xchg
push
cmp
jp
mov
jne
xchg
cmp
(bad)
and
inc
adc
sbb
cdq
cli
jae
fnstsw
dec
push
add
fldenv
in
jb
sub
push
dec
jno
dec
std
call
pop
cdq
push
cmp
(bad)
int
sbb
jne
cmps
std
lods
cmc
pop
push
shr
test
fcmove
(bad)
cmp
pusha
out
dec
jmp
lods
pop
aad
cdq
fistp
mov
pop
inc
xchg
stc
jle
or
adc
add
dec
and
or
dec
xchg
aam
jbe
lods
or
into
ja
shr
inc
mov
dec
pop
lods
popf
dec
mov
cmp
xchg
add
mov
out
jb
mov
mov
es
push
sub
movs
test
popf
mov
sbb
test
cmp
jne
jge
push
adc
inc
test
arpl
mov
leave
jp
lea
in
out
mov
mov
jecxz
loopne
mov
and
je
push
outs
xor
bound
mov
inc
loop
repz
mov
out
out
movs
stos
cdq
lods
push
xchg
push
xchg
mov
mov
lods
or
adc
dec
jb
arpl
(bad)
das
retf
in
ds
icebp
jbe
sub
mov
rol
call
ret
cdq
dec
fnsave
retf
stos
scas
xchg
mov
and
mov
or
fs
ja
push
test
inc
xor
jmp
pop
imul
test
shl
inc
aad
out
pop
cmp
inc
and
(bad)
daa
int
test
(bad)
(bad)
arpl
xor
sbb
pop
cmc
mov
mov
icebp
pop
in
xchg
mov
arpl
lea
scas
out
jmp
scas
and
mov
daa
js
mov
jmp
in
pop
sbb
fild
and
cmp
pop
push
stos
test
push
dec
enter
pop
pop
loope
movs
dec
inc
test
cmp
in
imul
movs
test
inc
mov
xchg
cli
inc
repz
popa
xor
bound
push
aam
and
and
jmp
mov
jo
jle
pop
in
push
mov
sbb
mov
cmp
xor
data16
std
jnp
mov
fcom
lods
in
icebp
retf
and
imul
in
mov
jmp
xlat
ret
jnp
xchg
pop
xor
sbb
mov
fs
ret
push
popf
int3
test
int3
sbb
adc
adc
call
movs
fdiv
loopne
daa
(bad)
mov
test
pop
mov
stc
inc
sub
mov
mov
scas
push
push
and
add
retf
mov
dec
js
data16
add
test
sub
xor
inc
mov
and
mov
add
mov
dec
scas
inc
sbb
cmp
loopne
cmp
jae
popa
repz
fld
mul
lods
and
std
iret
test
mov
stos
xchg
retf
cmp
repz
mov
pop
test
jne
cdq
addr16
enter
mov
call
jg
pop
(bad)
loopne
call
test
popa
(bad)
leave
bound
loopne
in
aam
jp
neg
adc
(bad)
stos
pop
retf
xchg
in
(bad)
pop
(bad)
ja
out
pop
ins
mov
sub
mov
stos
sbb
les
mov
push
shl
(bad)
pop
cwde
popf
inc
mov
das
xor
xchg
sub
dec
(bad)
sub
jmp
ret
inc
test
jnp
push
js
jmp
fidivr
in
les
adc
sbb
and
mov
jae
test
xchg
pop
sti
push
cmps
inc
fbld
loope
clc
mov
xor
push
cmps
push
lea
imul
jmp
test
ja
push
cs
jnp
dec
test
aad
loop
or
(bad)
xor
jne
test
adc
jne
mov
mov
cmp
mov
jge
stc
outs
xchg
jb
mov
xlat
addr16
or
sub
int3
mov
adc
adc
xor
inc
gs
fs
in
mov
aam
imul
dec
ds
xchg
push
inc
sar
pop
lds
mov
sbb
mov
stc
test
and
sahf
test
cmp
enter
dec
xchg
inc
xchg
ss
dec
test
out
shl
lock
aaa
rcl
dec
or
xchg
adc
jecxz
xor
xor
stc
add
pop
int3
(bad)
jbe
mov
idiv
pop
xchg
mov
push
packsswb
pop
out
fs
imul
in
mov
dec
or
mov
in
or
jg
or
fstp
add
jne
mov
dec
daa
pop
hlt
hlt
cld
xor
mov
adc
mov
aad
nop
fst
push
or
xor
mov
mov
pusha
mov
les
mov
xchg
lods
sar
ret
pushf
inc
sub
push
sahf
sub
add
stos
push
and
mov
mov
add
mov
ror
dec
jl
fcom
jmp
and
(bad)
mov
jns
push
pop
xor
and
(bad)
out
rcl
sub
(bad)
ss
aas
jno
int
pop
xchg
mov
test
xchg
mov
cmp
daa
and
aaa
jb
push
fistp
imul
sub
cmp
pop
mov
adc
ins
call
data16
adc
adc
inc
sar
or
adc
or
pop
out
mov
out
out
imul
xchg
push
cmp
rcl
mov
inc
out
mov
pop
ror
shl
sbb
sub
(bad)
call
xor
ret
mov
rcl
loopne
repnz
aaa
adc
call
xchg
or
jnp
int
loop
ror
lock
bnd
jno
pop
ret
jno
and
push
lods
rol
fs
push
mov
std
pop
es
push
pop
push
stos
mul
xchg
call
jge
sbb
xchg
inc
xchg
jbe
jecxz
ret
adc
push
loop
scas
jecxz
fwait
push
inc
push
dec
inc
push
cmps
xchg
sub
mov
mov
add
or
jno
int3
call
sub
dec
mov
inc
das
add
xor
shr
arpl
mov
pop
inc
add
call
inc
xchg
or
dec
test
dec
(bad)
retf
mov
mov
(bad)
sub
mov
or
push
dec
dec
cmp
lds
and
stos
xchg
int
bound
nop
daa
out
aas
mov
enter
clc
cmp
fs
inc
(bad)
xchg
mov
daa
pusha
xchg
inc
lea
mov
adc
xchg
pop
int
mov
mov
push
and
stos
push
cmps
cmp
(bad)
mov
fwait
cmps
and
std
or
pop
ret
shl
loop
xor
call
pop
jnp
pop
in
test
jns
int3
outs
inc
push
adc
outs
adc
jo
out
pop
cmps
push
fwait
sub
pop
add
add
cmp
xchg
sbb
dec
in
pop
dec
iret
jbe
add
mov
sub
mov
cmp
into
fdiv
add
or
or
push
push
jge
ret
or
sbb
pusha
aaa
sub
add
inc
rol
inc
mov
ins
jmp
popf
mov
adc
fwait
jns
outs
add
mov
repnz
mul
jb
jb
xor
ret
scas
lock
jecxz
int
arpl
xchg
dec
popf
pop
daa
retf
movs
mov
ss
pop
push
cmc
or
in
sti
lea
or
sbb
ja
mov
xchg
ret
xchg
jnp
lahf
push
jnp
rep
movs
hlt
and
out
mov
arpl
stos
cwde
adc
retf
jle
jge
push
mov
ret
popf
outs
jo
aad
dec
sbb
push
xlat
les
jg
push
pop
xor
mov
mov
add
mov
sti
ins
xor
int3
in
xor
adc
dec
push
inc
fstp
loopne
pop
jb
jns
mov
push
xlat
retf
out
icebp
cmp
adc
jns
stc
retf
add
outs
imul
retf
jmp
pop
mov
imul
xor
mov
jb
and
in
mov
add
movs
fmul
push
sub
pop
std
or
xor
mov
fcomp
out
xor
jbe
fdivr
push
int
sub
jbe
nop
scas
icebp
xor
cwde
mov
push
adc
inc
mov
fcom
or
das
mov
adc
ss
ins
mov
retf
adc
jne
out
jns
std
imul
out
retf
or
push
pop
pop
push
mov
xchg
js
sub
pop
jge
cmp
mov
ss
mov
out
push
clc
push
in
mov
dec
xor
sbb
rol
arpl
aad
or
(bad)
and
and
addr16
or
pop
jg
push
lea
inc
je
iret
outs
cmp
xlat
sar
adc
rcr
scas
mov
loope
jo
sbb
cld
ror
leave
cli
xchg
mov
ins
xor
push
outs
mov
sub
loopne
pushf
xchg
xor
sub
adc
xchg
fidivr
fisub
iret
sub
(bad)
(bad)
cdq
movs
lods
pop
sub
out
stos
pop
jne
inc
outs
sbb
xor
(bad)
outs
adc
(bad)
test
push
jnp
in
inc
inc
push
mov
push
pop
loope
xchg
in
ja
mov
shl
sub
dec
mov
push
fs
lock
sub
xchg
in
(bad)
aam
dec
fimul
sub
iret
mov
cli
sbb
repnz
mov
arpl
pop
adc
inc
int3
loop
mov
inc
fcomip
xchg
jmp
and
(bad)
in
mov
sub
test
jnp
jmp
int3
adc
fisub
ins
adc
xchg
xor
cmp
in
mov
push
push
iret
mov
test
and
pop
repz
or
pop
nop
(bad)
push
in
outs
mov
ffreep
jbe
popa
dec
in
int
clc
mov
adc
cli
mov
sbb
popf
mov
out
cmps
data16
ret
fstp
out
ja
pop
(bad)
jmp
repz
add
sbb
adc
pop
in
adc
dec
pusha
aad
add
pop
cmp
imul
(bad)
adc
sbb
dec
fcmovne
sbb
sub
cmps
and
std
lods
lock
cmp
fdiv
test
fs
call
ret
cld
out
out
sbb
les
js
mov
or
xchg
iret
xchg
gs
mov
xchg
cmp
xchg
ins
icebp
lds
cmc
dec
hlt
mov
pop
retf
add
ins
lds
cmp
loopne
retf
xor
movs
xor
xlat
inc
inc
add
daa
adc
aad
jno
ins
mov
inc
(bad)
(bad)
ins
and
addr16
cli
adc
retf
jmp
pop
shr
jo
or
int
outs
add
lahf
sub
aas
out
cld
xchg
xchg
(bad)
gs
mov
std
jbe
add
in
mov
inc
repnz
aas
cs
xchg
add
imul
xor
fistp
or
cmp
push
mov
dec
aam
es
sub
into
jecxz
ret
(bad)
movs
in
push
shl
outs
jg
mov
mov
mov
arpl
out
or
cmp
out
push
jge
pop
hlt
adc
fidivr
dec
push
dec
inc
add
inc
aaa
mov
pop
inc
mov
stos
sub
pushfw
aas
sbb
pop
call
ret
lock
dec
shr
gs
push
xchg
inc
(bad)
ja
or
and
dec
push
mov
dec
or
ret
pop
ficom
sahf
mov
ss
popf
cmp
fidivr
mov
loop
cdq
test
lods
cdq
mov
in
out
call
pop
mov
cld
xor
xor
add
in
cli
xor
addr16
xor
(bad)
loop
mov
dec
dec
mov
xor
scas
pusha
mov
mov
mov
adc
test
dec
arpl
loopne
stos
pop
iret
xchg
adc
inc
or
(bad)
and
out
fist
jne
push
xchg
and
js
ret
ds
adc
add
sbb
push
jae
les
mov
pushf
movs
loope
das
das
paddusb
leave
cdq
xor
stc
pop
shr
aaa
mov
jmp
icebp
in
cs
test
sbb
cmp
js
aam
mov
fadd
mov
(bad)
movs
sub
data16
lock
es
js
jbe
jp
jmp
out
lahf
cmps
push
arpl
mov
mov
cmps
dec
mov
xchg
pop
rcr
in
cdq
fisttp
pusha
pop
es
(bad)
dec
push
call
xor
push
rcl
jmp
lea
out
movs
cmps
es
shl
xchg
jmp
ficomp
push
cmps
nop
cli
mul
add
sub
pop
mov
or
mov
in
sub
cld
mov
es
enter
sbb
retf
test
cmps
aas
nop
push
xlat
pop
popa
fistp
(bad)
icebp
popa
sub
je
cli
cs
out
fistp
add
jae
inc
vxorps
dec
xor
inc
mov
pop
fucomp
add
mov
mov
jge
jle
jp
lods
test
in
aad
mov
pop
sub
out
in
loope
aam
lods
test
sub
add
sub
mov
inc
lods
or
mov
nop
mov
and
push
jg
aas
pop
movs
and
cmp
inc
div
adc
fdiv
test
adc
jle
jp
lea
js
push
add
cwde
popf
cmps
jbe
cmp
dec
xchg
mov
sahf
push
(bad)
hlt
js
adc
jmp
daa
or
out
rcr
cmp
out
cmp
jns
jle
mov
cmp
mov
int3
ret
ret
cmp
daa
fldenv
sub
dec
adc
cmp
sub
rcl
xchg
pop
xchg
ss
scas
iret
dec
xchg
jmp
xor
push
push
or
or
jae
sub
retf
jnp
mov
and
xchg
pop
clc
inc
add
add
xchg
mov
xchg
pop
in
pop
or
sub
xor
inc
outs
cmp
adc
jg
aam
mov
lds
and
les
loope
mov
dec
xor
jle
pop
adc
mov
sbb
jmp
mov
pop
leave
xchg
into
je
sub
mov
adc
dec
xor
stos
jnp
scas
and
dec
pop
and
cmp
or
repz
inc
jle
push
xor
sbb
push
xor
mov
pusha
xor
mov
mov
jmp
cld
fidiv
outs
into
cmp
pop
cmp
jl
gs
or
mov
ret
cmps
mov
xor
std
sub
enter
pop
dec
fnstsw
sub
dec
jge
push
jne
dec
inc
(bad)
sahf
ss
int3
dec
jl
mov
and
and
pop
outs
call
xor
mov
fnsave
fistp
fimul
sub
mov
cdq
les
jno
jmp
inc
cmp
push
into
aam
lock
mov
lods
fwait
cmp
shr
dec
jb
retf
rol
mov
movs
bound
push
clc
pop
sub
adc
imul
and
mov
inc
inc
add
push
rcl
fisubr
pop
mov
sbb
cmc
jmp
dec
fisubr
fldcw
fcmovb
xchg
sub
add
shr
sbb
cwde
add
test
lahf
push
inc
sti
jo
lods
push
or
or
call
cmp
sbb
mov
pusha
sub
setb
js
aaa
push
push
or
adc
dec
mov
mov
pop
fnstenv
aas
push
jb
pop
push
adc
xor
xor
daa
or
out
retf
fimul
jmp
mov
mov
or
pop
in
mov
rcl
out
int3
int3
(bad)
mov
aaa
leave
out
loop
mov
jnp
cmp
push
mov
cmp
out
add
mov
push
push
sbb
add
mov
jmp
nop
cld
mov
sbb
dec
jle
push
mov
mov
fistp
inc
xchg
inc
mov
inc
cmp
dec
push
(bad)
push
mov
imul
sub
sbb
dec
int
fsub
fsubr
add
movs
ficomp
jp
and
dec
lea
push
pop
aad
(bad)
mov
inc
and
fistp
or
out
add
jle
mov
cmp
inc
rcr
push
add
jecxz
stc
inc
mov
add
and
adc
push
cs
mov
clc
popf
call
pop
sub
mov
push
xor
pop
fbstp
lods
sbb
ins
sub
push
stc
fs
add
in
push
test
or
cmp
cmp
jno
mov
iret
push
and
arpl
repz
push
ds
jns
add
das
mov
lahf
scas
inc
and
sub
mov
mov
les
dec
ds
sbb
movs
push
or
adc
iret
push
repnz
lods
ret
add
jmp
mov
mov
cwde
xchg
xor
sub
pop
ret
xchg
or
ffreep
and
arpl
pop
out
jae
imul
jb
std
fwait
or
fistp
xchg
(bad)
aas
inc
mov
add
test
add
or
sub
in
jb
cmp
xchg
mov
jecxz
and
jg
mov
sbb
adc
in
push
dec
sti
rol
mov
ret
fidivr
or
into
mov
ins
ret
inc
aam
push
aam
in
retf
repnz
dec
mov
in
ret
je
call
cmps
movs
jne
shr
dec
loop
mov
or
pop
in
jns
lods
outs
inc
add
add
fild
fisttp
pop
imul
and
lods
mov
rcr
xor
pushf
push
sub
(bad)
push
ficomp
fist
stc
mov
gs
mov
dec
push
sub
(bad)
add
pop
add
jmp
mov
imul
or
and
loopne
ret
inc
(bad)
jae
mov
dec
push
cmc
std
call
push
sub
and
pushf
mov
inc
shr
adc
(bad)
sar
pop
mov
cdq
jbe
je
sub
ss
xchg
pop
mov
mov
mov
daa
xor
adc
sbb
adc
cmps
lock
shr
movs
rcr
cwde
xchg
sbb
sbb
sbb
outs
rcl
mov
add
push
push
fidiv
jnp
es
jge
mov
mov
inc
lds
pop
dec
mov
jb
or
push
add
cli
mov
inc
and
sbb
(bad)
stc
aam
mov
mov
dec
ror
jo
sbb
pop
scas
sbb
dec
call
loopne
stos
or
sbb
hlt
bound
dec
outs
mov
and
add
fadd
aas
les
add
jge
cld
cs
push
mov
jno
(bad)
dec
mov
dec
call
push
rol
repnz
cmc
shl
push
xor
aaa
or
popf
into
jb
xchg
dec
mov
inc
ins
lea
mov
mov
and
adc
push
mov
push
sar
addr16
sub
and
mov
and
mov
pop
pop
push
xchg
pop
jmp
add
add
fld
xchg
fxch
rcl
mov
sub
sar
aad
push
pop
call
(bad)
xor
xor
(bad)
fs
sub
sbb
pmaxsw
in
test
loopne
pop
add
sbb
mov
test
inc
add
cmp
dec
inc
inc
fisub
add
(bad)
pop
push
pop
lods
fwait
push
xchg
ret
cmp
mov
(bad)
or
push
aam
xor
cmp
aad
popa
clc
loopne
jge
xchg
dec
mov
ffree
bound
push
sbb
call
dec
imul
sbb
xchg
mov
popa
cli
es
stos
ins
xor
pop
push
idiv
add
push
sub
sbb
jae
jmp
in
inc
ins
(bad)
xchg
bound
sbb
add
cwde
shr
mov
xchg
js
pop
(bad)
(bad)
lods
adc
jp
inc
pop
push
xlat
fadd
call
mov
daa
fld
sub
call
sti
xchg
jmp
div
sbb
pusha
test
(bad)
out
mov
fs
gs
and
test
mov
mov
imul
sbb
imul
xchg
arpl
cmp
push
hlt
scas
push
mov
push
sbb
imul
aam
fcom
sub
adc
jbe
or
sbb
stos
jl
js
test
mov
add
popf
dec
ret
fbld
xchg
enter
loop
stc
fisttp
adc
xchg
shr
mov
push
out
cmp
xor
loope
jbe
imul
jp
pop
(bad)
out
jge
stos
test
dec
push
(bad)
push
xor
mov
sar
jno
dec
fadd
push
mov
sub
int3
sar
xchg
(bad)
jg
popa
xchg
fidiv
gs
dec
movs
aas
iret
pop
xchg
loop
mov
push
(bad)
mov
mov
inc
pusha
mov
ror
pop
pop
dec
mov
inc
dec
jecxz
xor
jb
inc
mov
scas
aam
das
scas
cld
xor
cmps
in
inc
aaa
stc
arpl
out
xchg
cmp
xchg
inc
ja
cmp
adc
out
lea
mov
xor
mov
adc
rep
(bad)
jmp
movs
cld
add
add
push
sar
adc
clc
(bad)
mov
inc
xlat
push
in
enter
pop
add
mov
xchg
jp
push
imul
lahf
mov
ret
cli
loop
arpl
cmp
mov
sub
fisttp
ins
int
add
arpl
mov
jg
xchg
ja
pop
xlat
xor
mov
clc
cmp
sub
or
out
fistp
push
jbe
cli
sbb
int
ds
loopne
pop
ret
jmp
sub
cmp
hlt
xchg
and
retf
cmc
cmp
cmp
and
mov
fnstcw
inc
or
mov
mov
pusha
mov
mov
push
popf
jno
pop
or
mov
or
mov
pop
pop
ins
push
(bad)
jecxz
sti
je
js
jns
xchg
lea
retf
cwde
fst
ins
stos
(bad)
pop
or
add
(bad)
lock
sbb
jp
dec
add
jmp
sbb
mov
sub
cmp
xchg
jmp
in
mov
mul
pusha
mov
loopne
inc
lahf
ret
bound
and
dec
shr
adc
xchg
test
dec
jmp
sub
data16
gs
mov
jbe
cmc
fnstsw
(bad)
sbb
ret
add
jmp
in
call
push
mov
lods
enter
lods
lods
cmp
cli
div
jo
mov
into
or
outs
jge
pop
das
in
jmp
stos
mov
push
cwde
scas
inc
jae
or
ret
mov
xor
jle
xor
xor
sahf
adc
jl
cmps
dec
xchg
push
xchg
shl
add
and
sbb
std
jbe
mov
scas
fisttp
adc
cmc
enter
pop
add
in
lods
pop
loopne
stc
cwde
mov
jmp
xor
ret
in
adc
and
pop
add
rol
fdivr
xchg
test
push
add
xchg
push
aam
call
mov
jecxz
mov
ficom
xor
xlat
cwde
inc
sub
mov
and
xor
cmp
sub
pop
or
push
pop
scas
mov
stc
faddp
loop
or
xchg
push
movs
(bad)
ss
icebp
inc
mov
jae
mov
pushf
add
fwait
cdq
lods
push
jle
gs
jmp
movs
sbb
adc
(bad)
repz
inc
std
mov
scas
stc
imul
xchg
xor
or
out
xchg
ins
out
and
popa
pop
mov
push
push
jno
psubsw
or
aas
add
popf
add
jmp
std
pop
pop
fisubr
fcmovbe
xchg
inc
popf
adc
pop
sub
pop
dec
jbe
inc
mov
push
popf
add
mov
push
call
repnz
sub
add
arpl
xor
les
sub
aad
push
sub
xchg
mov
xchg
pop
jle
scas
sub
nop
cdq
pop
jle
adc
mov
aas
cmp
add
cmp
lock
sti
scas
cmp
sbb
mov
lahf
ds
push
mov
ret
or
mov
sti
add
add
js
cwde
push
imul
push
adc
jae
xchg
jne
(bad)
mov
out
jle
or
mov
add
mov
mov
pop
pop
pop
mov
lahf
fs
cdq
rcr
cmp
iret
mov
and
mov
retf
pop
(bad)
clc
lds
pop
mov
sub
dec
xor
pop
push
ja
imul
movs
clc
mov
push
(bad)
xlat
mov
jge
leave
cmp
shr
jbe
test
mov
jb
movq
movs
lock
jl
push
jb
and
out
sbb
jmp
fmul
lahf
xor
lea
pop
mov
lds
add
xor
sti
add
jecxz
pop
sbb
ss
out
and
dec
fwait
dec
(bad)
ss
jno
cmp
addr16
push
test
aas
ja
in
shl
ins
mov
cmc
loop
xchg
cmp
stos
xor
sar
fld
neg
and
sti
retf
out
and
xor
add
push
enter
scas
and
in
mov
and
cs
(bad)
push
into
adc
rcl
ins
inc
aam
inc
mov
pop
fisubr
or
pusha
and
loope
ins
popa
dec
enter
jge
ror
shl
(bad)
sbb
jg
retf
in
xlat
sbb
sbb
xchg
addr16
popf
imul
mov
sub
or
pop
retf
mov
rcr
clc
mov
stos
psllw
push
inc
loope
test
rcl
and
scas
fcomp
aas
xchg
inc
(bad)
aad
cmc
repz
xchg
and
test
and
loop
out
jmp
bnd
sar
jne
mov
jbe
jmp
and
and
gs
fs
bound
xor
xor
into
mov
(bad)
sbb
mov
jle
aad
fisttp
push
mov
inc
cmp
int
jmp
xchg
pop
scas
jl
ror
sahf
not
dec
mov
out
inc
mov
sub
scas
repnz
adc
repnz
inc
jle
jns
add
retf
jns
adc
sar
or
or
push
add
aad
loope
push
(bad)
cmp
jo
mov
iret
pop
jl
out
jae
sub
dec
push
add
iret
mov
jg
dec
pushf
test
cli
and
ss
fs
cmp
dec
std
pushf
fs
adc
add
outs
cmp
out
out
sbb
cmp
or
clc
jmp
pusha
(bad)
jmp
(bad)
ds
jge
sub
shl
(bad)
and
les
into
int3
sbb
push
push
xchg
in
cmp
and
add
pop
popf
push
push
in
xchg
int
test
and
jg
je
push
mov
nop
mov
or
mov
adc
out
outs
test
ss
rcr
and
adc
movs
out
dec
sub
pusha
sti
movs
push
pusha
imul
mov
cld
mov
jg
cmp
(bad)
mov
(bad)
xlat
jbe
mov
fdiv
(bad)
stc
or
fisubr
push
xchg
(bad)
call
imul
adc
xchg
adc
jb
sbb
pushf
aaa
add
push
mov
inc
unpckhps
jo
and
push
scas
pop
std
sahf
add
dec
mov
cs
sbb
sub
mov
xchg
adc
jl
pushf
push
test
mov
mov
in
mov
adc
sub
cmpxchg
push
mov
cmp
push
sbb
clc
xor
dec
xchg
pop
mov
adc
or
and
pop
repz
pusha
mov
rcr
adc
xchg
adc
xchg
jl
adc
xor
loop
mov
sbb
sbb
popf
sub
sbb
push
jle
push
test
cld
js
pop
mov
adc
ret
lea
jp
and
jl
push
mov
mov
in
retf
pop
dec
repnz
xchg
inc
mov
out
push
mov
dec
retf
jb
in
sub
fs
sbb
xor
or
pusha
in
and
push
and
in
ins
outs
neg
mov
pop
mov
pop
es
adc
sub
add
ret
sub
mov
and
inc
cmp
jo
icebp
xchg
or
lods
(bad)
xor
pop
jb
xchg
xchg
ss
or
or
aaa
inc
dec
fsub
xchg
or
out
jg
popf
mov
ficom
or
outs
pop
int3
push
imul
stos
xor
movs
icebp
movs
dec
mov
add
xor
dec
imul
jg
aas
sub
ss
sti
xor
in
sbb
push
gs
xlat
cmps
dec
stos
aas
mov
outs
mov
ret
and
cmps
xchg
ror
mov
jmp
cmps
mov
push
cdq
mov
inc
jp
cmc
pop
loope
mov
cwde
jae
jmp
out
arpl
add
in
nop
je
popfw
rol
les
dec
inc
out
imul
rcl
cmps
add
or
pop
in
(bad)
in
xor
pushf
out
fcmovnb
stos
loopne
cmps
add
jge
inc
not
arpl
sub
jnp
test
scas
mov
xlat
lods
push
shr
jbe
dec
xor
out
mov
mov
cmc
mov
arpl
xor
jnp
push
(bad)
imul
jl
ja
lock
or
xchg
shl
aam
inc
mov
mov
xlat
push
(bad)
mov
jne
in
push
mov
icebp
mov
xchg
fcomp
xor
jno
push
xchg
adc
call
mov
out
adc
bswap
jnp
dec
leave
pop
adc
dec
sub
out
xor
movs
lods
mov
inc
add
sub
sti
or
(bad)
mov
retf
jle
xor
pop
aam
cmp
daa
inc
(bad)
fst
pusha
mov
int
aad
arpl
push
bound
inc
mov
retf
inc
jnp
shl
xchg
push
pop
addr16
cmp
idiv
into
outs
out
rol
xchg
retf
cmp
mov
inc
pop
add
or
jecxz
xchg
pop
or
push
popa
fcom
inc
test
dec
cmp
mov
repz
mov
jbe
shl
sbb
push
pop
stos
mov
xor
push
mov
cmp
ror
xlat
call
jno
sub
add
das
jbe
mov
inc
sbb
or
xchg
je
(bad)
pop
mov
cmp
sbb
jmp
lods
jmp
adc
push
les
mov
hlt
sahf
jmp
mov
mov
xchg
mov
fsubr
pusha
ret
or
push
(bad)
scas
or
adc
dec
xchg
mov
mov
fiadd
push
mov
enter
add
pop
pop
add
pop
cdq
nop
aaa
lock
ins
adc
adc
adc
jl
inc
dec
ror
(bad)
xchg
enter
inc
cli
fwait
inc
pop
jmp
arpl
add
xor
loopne
bound
push
pop
(bad)
mov
cmps
cmps
pop
mov
scas
lahf
pop
je
cld
into
mov
mov
push
mov
sbb
push
mov
mov
push
movs
cmp
and
mov
lock
dec
(bad)
adc
cmp
(bad)
xchg
jle
push
or
aaa
jae
dec
(bad)
jmp
adc
sub
mov
(bad)
int3
mov
dec
arpl
xchg
jae
or
stos
cmp
jg
dec
push
div
mov
adc
outs
sub
(bad)
pushf
sub
add
leave
(bad)
js
mov
shl
shl
jns
add
jmp
pop
gs
arpl
inc
in
jo
inc
pop
nop
out
xor
call
jo
push
push
push
imul
fistp
xchg
sub
add
call
fistp
test
push
out
cmp
cmps
push
push
inc
push
js
adc
mov
sbb
xchg
mov
and
cmp
test
popa
xchg
jge
dec
jmp
adc
xor
imul
jo
ret
inc
jo
mov
movs
cwde
test
pop
rcl
pop
or
cmps
aas
push
cmp
sbb
sub
mov
mov
push
mov
adc
and
pop
inc
sbb
or
push
jb
ret
cmp
dec
in
and
pop
hlt
mov
xchg
test
aad
mov
xchg
dec
cmps
xor
mov
and
imul
mov
adc
xor
sbb
pop
inc
cmps
cmc
jo
int3
push
stos
stos
push
cld
inc
stc
inc
(bad)
jae
jmp
dec
jb
outs
sahf
mov
dec
add
stos
mov
test
mov
movs
cs
jnp
add
pop
jae
outs
clc
sbb
cmps
cmp
fild
loope
add
lock
mov
sub
out
ret
mov
adc
aad
(bad)
ins
data16
sbb
popa
push
sti
rep
fwait
in
add
into
icebp
int
sub
cmp
out
lea
mov
je
adc
push
scas
and
push
int
jl
(bad)
pop
mov
xchg
adc
mov
mov
inc
adc
(bad)
in
cmps
mov
cli
xchg
cmps
and
lods
push
sub
xchg
sbb
fdivr
lods
inc
sbb
dec
mov
xchg
mov
jp
sti
js
jns
jne
cmp
and
mov
and
cmp
mov
lods
push
aas
mov
fisttp
jbe
cmps
int3
xor
pop
jae
shr
dec
push
outs
mov
cmp
cmp
sar
xor
jmp
aaa
fs
mov
sbb
fldcw
jae
icebp
push
out
hlt
pop
sub
pusha
aaa
xor
ror
jnp
dec
jl
add
adc
mov
cmp
cmps
scas
adc
jnp
imul
sti
jecxz
push
out
movs
retf
loope
cmp
cmp
cli
jmp
push
retf
mov
popa
test
imul
cmp
rcr
cmp
inc
mov
stc
inc
jecxz
retf
jb
pushf
call
out
xchg
jmp
mov
outs
mov
aam
jns
adc
push
scas
inc
add
mov
push
(bad)
add
fdivr
mov
test
ss
or
push
jne
xor
and
imul
add
xchg
mov
jae
je
cmp
adc
and
adc
gs
mov
adc
dec
cmp
in
sbb
pop
repnz
test
push
outs
mov
sub
test
shr
retf
add
(bad)
test
xor
aam
pushf
in
hlt
push
and
dec
cmp
inc
fadd
(bad)
ins
xor
dec
mov
cmp
mov
push
jl
(bad)
sbb
push
or
sbb
jne
js
repz
lahf
push
sbb
xor
mov
movs
call
pop
test
cmp
push
movs
dec
sub
ret
aaa
sbb
xchg
int3
push
push
mov
lods
inc
xor
enter
(bad)
aaa
int
sbb
pop
mov
into
or
ret
jne
jmp
loope
sbb
iret
cld
imul
not
sbb
mov
pop
pushf
setae
dec
sub
popf
jmp
lods
dec
cmp
aas
pop
lea
in
test
icebp
fwait
inc
lock
pop
inc
js
inc
inc
mov
sub
jle
into
fwait
pop
mov
lock
dec
pusha
ror
test
and
pop
popa
addr16
retf
icebp
fldcw
(bad)
sub
repnz
mov
loope
fldenv
out
lods
xchg
repnz
lods
adc
mov
mov
into
gs
add
dec
bnd
xchg
test
lock
inc
sbb
repnz
xchg
jp
xlat
xor
retf
lock
stos
mov
je
out
xchg
pushf
nop
(bad)
(bad)
jne
popa
stos
outs
aad
ret
(bad)
and
into
dec
jno
xor
test
or
sbb
jbe
rol
leave
stc
aas
and
cmps
jle
in
sbb
cmps
movhps
and
xchg
daa
(bad)
(bad)
inc
jb
sub
inc
lahf
out
adc
outs
inc
mov
pop
mov
pop
retf
mov
inc
dec
std
pusha
mov
inc
add
pop
lock
mov
mov
push
pop
dec
sub
mov
jg
mov
mov
rcr
pop
pop
inc
push
ins
inc
cmp
in
xchg
or
repnz
sbb
jmp
inc
sbb
mov
jmp
xor
sahf
adc
out
in
cmp
adc
sbb
sub
fs
into
pop
inc
imul
(bad)
fdivp
xor
aas
daa
pop
inc
adc
repnz
jmp
jne
inc
stos
(bad)
inc
xchg
fs
mov
retf
xlat
and
mov
out
inc
and
sti
std
fnstenv
(bad)
and
bound
test
enter
jge
jns
fisubr
jo
mov
cmp
call
in
fnstcw
std
mov
sbb
jle
sbb
push
daa
lahf
fs
in
pop
fiadd
leave
inc
aas
sub
dec
test
jmp
les
add
adc
rcr
enter
mov
inc
pmullw
jmp
loope
(bad)
jl
jle
add
shr
adc
ins
xchg
jo
(bad)
fnstcw
mov
pop
scas
sbb
cmps
inc
imul
(bad)
push
xchg
repnz
xor
ins
dec
inc
push
xchg
call
mov
int3
cmp
sbb
add
jne
mov
sahf
jno
mov
fiadd
mov
cmp
sahf
ins
lods
pop
and
xor
add
jno
dec
ret
push
cmp
or
jbe
test
cld
add
sub
idiv
xor
add
mov
cwde
and
mov
sbb
test
aas
dec
outs
js
imul
rol
ror
retf
xchg
test
sar
adc
push
xlat
outs
mov
lock
sahf
(bad)
lahf
push
jge
mov
mov
push
hlt
(bad)
xchg
sub
jmp
ficomp
out
or
mul
rcl
pop
scas
imul
cmp
ja
scas
jns
test
(bad)
jo
ret
pop
xor
sub
dec
mov
test
jmp
add
repz
push
mov
in
push
enter
jns
sub
stos
xchg
dec
inc
lods
cmp
retf
dec
in
fnstcw
std
in
jo
inc
push
mov
xor
push
outs
pop
lea
jbe
cmp
ja
inc
push
(bad)
cmc
mov
into
je
mov
js
out
pop
sbb
jbe
movs
cs
mov
mov
xor
xchg
int3
dec
aam
(bad)
mov
test
mov
ins
pop
int
pop
mov
sub
xor
or
sbb
cwde
sahf
add
push
jle
mov
pushf
pop
(bad)
mov
aad
jmp
sbb
cmp
or
js
icebp
sti
cmp
fstp
push
inc
mov
jb
pop
movs
idiv
div
int
cmps
out
enter
loope
stc
out
movd
adc
rcl
push
cmp
imul
xlat
xor
mov
xor
shl
mov
and
ss
neg
rcl
inc
add
mov
adc
scas
add
fwait
lds
rcr
das
push
popa
inc
xchg
test
cmps
or
adc
add
cmp
xor
dec
jne
sub
cmps
mov
sbb
mov
call
ret
and
pop
and
call
dec
pop
sti
push
push
push
fisubr
jle
and
hlt
retf
sar
mov
cmp
call
scas
icebp
cmc
in
es
loope
cmp
adc
into
fabs
inc
or
(bad)
mov
es
lods
ret
sbb
push
cmp
xor
sub
sub
and
jge
je
add
out
mov
or
xchg
add
push
cmc
enter
test
arpl
push
pop
int3
mov
inc
mov
(bad)
fcomp
lds
mov
mov
mov
loopne
enter
stos
xor
pushf
sbb
pushf
cmp
out
push
lock
inc
in
aam
ret
imul
in
and
fbstp
retf
jl
pop
ins
ds
scas
cmp
jge
adc
mov
cmp
(bad)
jle
out
lods
mov
les
ja
enter
int3
sub
mov
test
out
cmp
xor
int
dec
mov
retf
mov
sbb
imul
jecxz
xor
ret
pop
dec
ror
push
loopne
sub
icebp
xchg
or
not
sub
sub
inc
jne
(bad)
mov
xchg
or
ds
sub
mov
loop
inc
xlat
pop
addr16
mov
pop
mov
xchg
dec
ins
inc
pop
adc
inc
mov
cs
add
retf
les
in
lock
dec
jbe
lods
call
das
out
push
cli
or
data16
jmp
arpl
out
xor
data16
mov
cmc
repnz
fdivr
movs
sbb
fwait
jle
add
push
xchg
push
mov
test
cmc
lea
pop
xor
dec
dec
daa
das
inc
mov
push
iret
mov
push
dec
sub
push
sub
mov
repz
pop
and
out
jle
mov
lods
nop
add
jb
fsubr
test
mov
iret
fadd
inc
(bad)
mov
fidivr
mov
mov
leave
aad
inc
xchg
jno
mov
mov
mov
mov
rcr
out
shr
(bad)
fstp
sbb
rcl
(bad)
sub
pop
push
jg
popf
ins
xchg
xlat
add
sbb
xor
bound
inc
sbb
scas
ficomp
inc
adc
mov
aam
sbb
sbb
popf
sbb
pop
jmp
dec
cmp
mov
in
xor
jg
fbld
xchg
jecxz
test
or
mov
iret
and
jne
inc
(bad)
xor
push
pop
stc
push
ror
mov
add
sbb
mov
jno
cmp
fst
cmp
je
lods
sub
inc
(bad)
(bad)
push
fcomi
jmp
sbb
sub
mov
in
stos
mov
loop
aas
push
push
xor
and
bnd
pop
stc
pop
xchg
iret
stos
push
fs
scas
aaa
add
cmp
stos
(bad)
ins
xor
inc
push
ret
stos
fincstp
(bad)
cmp
jno
std
cmps
push
loop
inc
xor
xor
mov
xchg
adc
enter
sahf
out
mov
jge
dec
dec
pushf
sbb
or
inc
cld
aas
mov
pop
sbb
dec
cmp
in
daa
and
and
addr16
sar
loop
sti
rcl
dec
push
cmp
mov
ds
jecxz
cdq
je
scas
aaa
pop
push
sbb
sub
ror
fcmovnu
sub
mov
sbb
jle
ss
mov
(bad)
ins
mov
test
push
mov
fst
jno
clc
loop
push
iret
xchg
es
xor
ins
or
xchg
or
outs
pushf
pop
iret
std
retf
lods
jg
fwait
rol
aam
jge
and
pusha
arpl
sbb
and
cmps
jecxz
xchg
xchg
inc
cmp
pop
cmovb
inc
ret
in
frstor
mov
xchg
ins
adc
push
gs
mov
and
das
push
adc
adc
test
sbb
in
leave
pop
out
jge
xor
or
push
test
data16
add
pop
jne
cmp
adc
rcr
retf
push
inc
leave
xchg
cmp
cwde
jecxz
data16
and
test
rcl
out
adc
pop
cmps
mov
xor
cmp
ret
pop
movs
mov
clc
out
iret
xchg
mov
movs
fild
fbld
fidivr
int
sbb
jl
pop
add
lea
int3
pop
push
test
fmul
cmp
xchg
xchg
adc
aas
into
out
shl
dec
and
in
popa
cmp
cmp
inc
je
add
mov
push
mov
fbld
and
les
fidiv
lahf
(bad)
pop
adc
fs
clc
leave
add
and
push
fs
rcl
and
mov
pop
lods
ds
retf
lds
in
adc
sub
cwde
out
push
cs
add
nop
les
jae
adc
loopne
mov
and
sub
and
push
add
cmps
and
std
push
push
int
fs
out
dec
jmp
jae
sahf
std
jecxz
push
or
inc
(bad)
aam
sub
pop
dec
and
out
mov
ficom
sub
enter
push
xchg
sub
js
or
sub
xchg
mov
loop
retf
enter
mov
adc
leave
mov
repnz
xchg
fnsave
xchg
and
pop
div
sub
jmp
das
ds
call
mov
cli
imul
popf
outs
mov
mov
data16
lods
test
cmp
jp
xchg
pavgw
gs
scas
das
not
or
outs
cmps
fnstsw
sub
lock
and
pop
inc
fild
retf
sub
push
test
repz
sbb
inc
in
xor
retf
scas
or
arpl
adc
jne
or
je
and
jo
jne
int
dec
mov
adc
mov
sbb
je
jle
loopne
jne
xor
mov
hlt
push
and
push
mov
sub
xchg
xor
mov
push
mov
jl
pop
sbb
scas
adc
lock
or
addr16
or
push
outs
or
or
dec
(bad)
int
cmp
test
push
scas
jp
mov
push
(bad)
leave
arpl
cli
nop
mov
ins
mov
clc
mov
mov
and
cmp
or
xchg
rcl
out
xchg
push
test
out
jbe
out
sbb
pop
mov
icebp
movs
lds
and
jmp
jmp
jmp
mov
jns
adc
push
push
mov
ds
clc
add
js
outs
dec
call
mov
sub
cdq
mov
add
in
aad
fsubrp
cmp
sti
add
xor
das
cld
mov
pop
inc
dec
ror
add
mov
inc
push
fcmovne
fs
push
mov
jbe
test
popa
ins
in
movs
les
fmul
mul
mov
fstp
lds
std
or
xor
mov
loopne
dec
xchg
mov
cmp
out
mov
push
cdq
stos
outs
div
jle
movs
jnp
test
retf
adc
outs
sub
jne
fs
call
std
sahf
rcr
mov
imul
adc
int3
repz
ficom
(bad)
fisttp
mov
scas
jp
mov
inc
and
lods
dec
cld
push
mov
movs
cmc
stos
enter
scas
xor
pop
add
test
push
outs
cmps
gs
repnz
dec
stos
push
push
and
daa
clc
inc
and
mov
mov
loop
add
sub
(bad)
xor
mov
mov
inc
xor
push
mov
imul
cmps
or
pop
add
pop
push
lea
adc
and
jmp
adc
les
adc
mov
ret
pop
jno
bound
mov
adc
jbe
sub
xor
mov
inc
pop
jg
adc
mov
sub
cmp
jl
loop
sahf
or
dec
sbb
jle
dec
cmc
xchg
add
jae
in
iret
std
jns
pop
call
jmp
jle
sub
aas
push
xchg
scas
out
push
sbb
jbe
(bad)
repz
mov
sub
sbb
aaa
inc
stos
in
ret
adc
xchg
xor
dec
in
dec
mov
leave
push
push
cmp
lea
xchg
jg
and
sahf
xor
jecxz
or
and
(bad)
cli
sar
add
push
or
loopne
push
cmp
out
ret
pop
lock
stos
int3
pop
push
sbb
dec
and
call
push
sub
rcr
jne
cld
lods
sbb
mov
inc
jmp
out
(bad)
lock
aam
retf
xor
jae
sub
xchg
shl
jle
xchg
mov
mov
loop
leave
xchg
(bad)
mov
and
mov
pop
imul
repz
cmp
push
cs
stos
mov
push
(bad)
aad
in
shr
sub
pop
pop
inc
jno
popa
loopne
sub
aas
mov
mov
out
cmps
dec
mov
mov
dec
add
pusha
iret
jnp
enter
pop
imul
add
xchg
and
cmp
dec
in
int
xchg
or
cmp
inc
fdivr
repz
jbe
adc
jno
and
mov
xor
or
aas
gs
cli
inc
jge
push
push
pop
loopne
aas
mov
push
add
xor
loope
sbb
sbb
add
icebp
cmps
mov
jb
in
xor
clc
aas
pop
mov
mov
daa
cmp
hlt
pop
jmp
mov
retf
and
pop
lahf
fstp
out
and
ret
les
mov
aas
inc
adc
test
ins
outs
les
lock
shl
fadd
cmp
scas
fmul
es
adc
jl
nop
mov
xchg
popf
das
xor
xor
inc
cld
push
test
mov
clc
jb
jo
dec
or
adc
add
sub
sahf
rcr
aaa
mov
ficom
sti
popf
cmps
xor
xchg
xchg
or
cs
add
push
test
fwait
push
aas
stc
cmp
sub
int
dec
mov
outs
test
cmp
aaa
mov
jcxz
mov
jmp
adc
adc
jno
mov
inc
sub
cmp
cs
daa
add
inc
fldenv
and
xchg
mov
ficomp
inc
jbe
dec
mov
(bad)
sub
inc
sahf
dec
pop
pushf
loop
sbb
pop
retf
js
xchg
ret
mov
leave
outs
mov
xchg
in
push
xor
pushf
dec
mov
sbb
popa
pop
pop
dec
dec
dec
xchg
dec
inc
mov
(bad)
adc
push
(bad)
dec
dec
push
retf
mov
ret
test
inc
enter
xor
adc
mov
mov
stc
test
inc
ss
sbb
jbe
es
nop
sub
cmovs
push
cmp
sbb
xor
xchg
or
call
mov
test
cmp
(bad)
(bad)
nop
pop
(bad)
adc
mov
jmp
mov
enter
add
int
mov
mov
movs
mov
lock
or
inc
mov
xchg
jmp
push
out
mov
ficomp
cmps
sub
jmp
stos
jne
pop
xor
jno
pop
inc
mov
repz
jecxz
stos
aam
adc
jns
sub
and
lods
aaa
lahf
jae
outs
mov
test
cmp
aaa
xor
pop
ins
push
ret
xor
dec
(bad)
mov
cld
pop
or
dec
std
adc
jg
and
int
bound
imul
loope
fdiv
ss
inc
adc
cmp
jo
(bad)
jg
cs
out
dec
ss
aaa
push
fidiv
or
cli
push
pushf
test
or
ja
shr
test
and
fild
out
pop
movs
cmp
pop
cmp
shl
scas
dec
icebp
retf
inc
mov
push
mov
aas
xchg
mov
mov
sub
adc
adc
loope
mov
fwait
pop
das
push
mov
adc
sar
ret
inc
cmc
iret
lods
add
pushf
bound
ins
adc
xor
mov
adc
cli
xchg
out
and
ins
or
les
stos
movs
in
scas
add
push
jmp
leave
fistp
sahf
dec
jo
imul
neg
sbb
arpl
mov
jge
sbb
add
gs
lods
mov
dec
fbstp
sti
(bad)
fsub
jo
fisttp
lahf
repnz
jl
retf
sbb
fdivr
imul
add
dec
ins
imul
mov
add
inc
xor
mov
(bad)
les
mov
inc
retf
adc
and
xchg
addr16
sbb
cmp
or
mov
or
(bad)
mov
push
pop
inc
and
cmp
and
and
adc
inc
mov
shl
push
sbb
movs
sbb
stc
retf
ret
cmp
push
lahf
not
(bad)
mov
imul
inc
cmp
loop
cmp
inc
lds
add
js
cmps
popa
sub
into
or
push
out
(bad)
push
cmp
push
xor
(bad)
sbb
sub
jmp
push
jle
cdq
out
cwde
adc
ja
adc
jmp
xor
xor
jnp
mov
xor
test
test
test
cli
leave
addr16
adc
sbb
hlt
inc
test
sar
pop
mov
(bad)
(bad)
or
aad
inc
mov
test
adc
daa
xchg
test
jp
lds
inc
sbb
mov
push
ret
gs
mov
xor
ins
call
in
and
xor
sbb
cld
mov
sbb
imul
cmp
out
mov
mov
cmp
cwde
push
in
es
outs
mov
cmp
xchg
inc
mov
mov
mov
clc
inc
mov
(bad)
dec
fmul
outs
in
dec
adc
repnz
enter
push
sti
mov
pop
out
retf
add
je
out
retf
sub
inc
enter
mov
or
in
cmps
js
aas
inc
movs
hlt
push
xor
push
pop
out
retf
mov
sahf
mov
xor
test
cmps
call
mov
arpl
push
int
movs
add
push
sub
dec
mov
push
into
js
add
(bad)
(bad)
arpl
aas
inc
out
xchg
outs
mov
pop
pop
mov
in
mov
xor
push
or
mov
jmp
pop
or
arpl
gs
lods
fcmovbe
pop
inc
jne
xchg
daa
jae
inc
ja
shl
ins
sbb
lods
mov
in
in
rol
and
mov
inc
pop
dec
jae
add
mov
add
xor
mov
sbb
adc
dec
inc
int3
xor
or
into
fs
xchg
in
cmp
retf
xchg
in
push
nop
test
pop
repz
shl
push
push
(bad)
mov
ror
push
daa
push
adc
dec
call
movs
cmp
daa
inc
dec
(bad)
in
call
mov
in
add
hlt
mov
dec
mov
adc
inc
jmp
cmp
sahf
cs
inc
(bad)
fdiv
cwde
inc
call
mov
mov
inc
mov
jne
je
shl
inc
cmp
or
dec
xor
sti
ja
add
sbb
sbb
cld
jp
dec
adc
xchg
add
pop
jmp
adc
sub
cmp
mov
dec
retf
data16
test
push
sub
mov
into
push
lods
mov
cmp
mov
cli
sti
xor
push
mov
dec
jns
aad
gs
dec
mov
adc
ins
jmp
xchg
imul
cmps
ss
inc
jg
aam
or
test
lock
jnp
in
cli
push
sub
mov
sub
stc
mov
push
mov
fist
xchg
gs
out
lea
and
push
jae
mov
mov
fs
ficom
xor
push
adc
pushf
outs
mov
mov
test
or
fcom
add
inc
les
mov
data16
and
or
ja
dec
ficomp
loop
mov
mov
cdq
mov
fisttp
ds
daa
out
cs
cwde
and
test
out
(bad)
jae
cmp
mov
ret
(bad)
scas
rcl
iret
aad
stos
or
xchg
pop
idiv
sub
add
mov
push
syscall
mov
(bad)
and
dec
mov
mov
fcmovnu
xor
test
dec
mov
mov
out
(bad)
mov
nop
push
sbb
dec
cwde
ficomp
nop
cdq
xchg
sbb
pop
or
cmp
sub
push
mov
in
cwde
shl
sbb
lods
mul
fdiv
rol
sub
mov
jmp
(bad)
call
xchg
test
jl
inc
jbe
jae
or
and
lea
cmp
mov
or
push
xchg
repz
push
jbe
pop
gs
xchg
mov
hlt
adc
out
out
repz
sub
or
mov
sbb
enter
shl
(bad)
xchg
sar
push
adc
int
sbb
std
xchg
shr
sbb
pop
loop
aas
lods
adc
mov
mov
stc
mov
std
pop
dec
push
pop
jmp
test
add
out
frstor
pop
xchg
lods
into
inc
push
add
inc
and
xor
jle
pop
mov
stos
fdivr
cmps
call
pop
out
(bad)
and
mov
xchg
mov
(bad)
xor
dec
sub
and
(bad)
icebp
into
std
test
dec
les
push
int
(bad)
(bad)
cmp
mov
sbb
sbb
aam
mov
pushf
cmps
fs
clc
xchg
push
dec
jp
adc
push
inc
inc
jns
mov
push
jl
or
add
mov
sbb
mov
pusha
mov
cmp
inc
out
mov
cdq
push
mov
(bad)
cmp
cmp
movs
xor
das
ret
lahf
ds
dec
ins
arpl
movs
loopne
push
ins
pop
daa
aas
rcr
jns
mov
mov
or
push
in
fnstenv
mul
outs
and
ror
test
pop
xchg
or
add
mov
adc
pop
icebp
or
xor
sbb
push
dec
inc
dec
and
or
push
dec
inc
cwde
inc
add
retf
cdq
js
pusha
sbb
sbb
mov
jmp
retf
xor
cmp
xchg
and
frstor
sbb
cmp
int
push
jb
sub
dec
arpl
and
push
lods
xchg
jne
mov
jle
jecxz
push
sahf
sahf
fimul
mov
scas
xchg
push
xchg
push
sbb
repnz
xabort
mov
scas
add
adc
mov
pop
mov
jbe
xchg
dec
and
push
data16
(bad)
out
outs
push
ret
xchg
dec
jmp
test
mov
dec
nop
lods
inc
push
test
adc
add
xchg
push
movs
inc
(bad)
je
mov
movs
add
sub
fs
mov
xchg
fs
push
add
lds
daa
rol
mov
pop
inc
add
xlat
or
mov
fwait
inc
cmp
shl
dec
adc
bound
sub
or
inc
mov
popa
and
pop
mov
cwde
sbb
ret
jmp
aad
mov
stos
test
adc
das
adc
adc
imul
sbb
mov
push
addr16
fs
jne
(bad)
jne
retf
jb
scas
mov
cmps
cwde
call
cs
sub
fisub
jnp
mov
jmp
stos
dec
lds
pusha
repnz
fcom
aaa
aad
dec
stos
cmp
ret
test
jp
sbb
jmp
mov
inc
je
add
xchg
outs
jno
add
jg
psraw
inc
jae
inc
sbb
xor
aaa
mov
call
or
cli
push
jecxz
xor
mov
xchg
sbb
fcomp
arpl
or
sbb
neg
jl
sbb
movd
push
push
aam
jmp
adc
jle
dec
lds
adc
push
sbb
add
loope
mov
mov
(bad)
xchg
loopne
pop
push
push
test
shl
ret
push
mov
pop
cmp
mov
lea
pop
push
mov
mov
mov
mul
js
jb
int3
das
test
retf
in
cs
test
pop
retf
test
mov
rcr
jo
push
cli
add
xchg
daa
dec
push
jge
pop
pop
ss
pop
sbb
mov
inc
ins
out
xor
add
mov
retf
ret
je
int
mov
lock
push
pop
fidivr
ret
jb
pop
mov
cs
mov
xor
push
sub
addr16
or
cwde
loope
xchg
fwait
pop
push
jmp
mov
pusha
or
inc
dec
cmp
je
bound
sub
je
movs
retf
dec
add
push
push
or
sbb
ja
clc
ss
inc
cmc
wrmsr
cmp
mov
sub
xchg
int
cmp
add
sbb
inc
imul
cmp
test
cmps
pusha
js
out
cmps
retf
loop
xchg
inc
bound
or
push
pop
push
mov
add
sti
xchg
das
cdq
mov
dec
jbe
pop
aaa
(bad)
adc
lods
and
test
sbb
push
push
dec
xchg
dec
mov
jmp
jne
xchg
int3
xchg
xchg
sub
ins
punpcklbw
pop
sub
lea
aad
bound
retf
pop
add
repnz
xlat
pop
fcmovnu
xor
pusha
lock
or
mov
sub
rcr
xchg
mov
mov
out
das
adc
jg
mov
lods
movs
fcomp
fnstsw
cmp
and
dec
repz
mov
es
adc
or
cwde
sbb
(bad)
pushf
xor
sub
mov
pop
retf
and
jbe
push
ror
xor
shr
clc
xchg
loope
imul
add
test
mov
data16
mov
ret
inc
(bad)
clc
not
(bad)
or
aas
pop
mov
mov
test
cmps
add
push
int3
cdq
frstor
jno
lds
jl
stos
push
fnstsw
rol
loope
stos
mov
xchg
jnp
cmp
adc
mov
push
fsub
mov
mov
adc
mov
sti
jle
sub
faddp
stos
nop
xlat
hlt
xlat
pop
mov
mov
or
std
sub
hlt
add
add
push
fnstsw
js
pusha
jp
out
loopne
mov
inc
icebp
lea
fstp
mov
out
fstp
push
push
mov
call
mov
cmp
xor
cli
mov
mov
lds
cli
nop
not
xor
(bad)
hlt
sbb
cmp
xor
retf
push
lahf
mov
push
jle
ins
outs
xor
into
pop
imul
(bad)
pushf
cmp
xor
nop
cmp
fsubr
push
lods
fs
cmps
xchg
dec
mov
fwait
sbb
inc
shl
mov
and
sbb
int3
xor
mov
dec
mov
lahf
outs
adc
add
loope
rcr
or
mov
dec
jp
movs
mov
das
pop
retf
jmp
sub
stos
div
in
stos
pop
lods
cld
mov
cmp
xor
scas
xor
jp
dec
sub
pop
jmp
push
call
data16
ins
lea
jg
and
sbb
das
in
cld
add
mov
mul
(bad)
(bad)
shr
and
dec
cmp
jge
lock
push
sbb
push
fld
pusha
call
ds
jmp
inc
cmp
sahf
or
in
dec
lock
rol
stos
scas
dec
push
cmps
sub
std
call
nop
dec
mov
repz
loopne
sti
neg
push
push
aam
stc
mov
pop
push
cwde
pop
sub
mov
sahf
jae
(bad)
fnsave
push
and
xchg
stos
test
sbb
mov
sbb
mov
cdq
xchg
xor
cmps
sbb
inc
and
xchg
fmulp
dec
xchg
cmp
nop
mov
mul
cmc
pop
xchg
stc
fnstcw
sub
rol
out
ins
dec
xchg
mov
dec
push
jecxz
mov
aad
scas
inc
adc
sub
sti
cmps
mov
mov
loop
test
call
mov
out
lods
and
pop
sbb
es
jne
stc
xor
jbe
mov
add
in
adc
push
std
jge
ss
lock
pop
cmp
fstp
xchg
hlt
inc
enter
lock
mov
jmp
mov
scas
call
int3
mov
inc
pop
add
hlt
jnp
aas
repz
retf
or
jbe
jmp
sub
push
in
jns
and
loop
jp
das
retf
repnz
mov
add
sub
push
xchg
cmp
pop
shl
inc
in
clc
(bad)
sbb
and
js
bound
mov
xor
jecxz
je
sub
adc
and
jno
pop
stos
mov
and
add
fincstp
fnstcw
pop
pop
sub
push
stos
pop
mov
enter
shr
push
lea
fsub
dec
(bad)
cwde
xchg
adc
retf
inc
mov
das
or
push
jp
les
cli
fcomp
xchg
idiv
enter
cli
inc
jb
pushf
retf
or
xchg
aas
(bad)
fsubr
stos
js
mov
push
inc
ds
fcom
retf
retf
pop
adc
movs
and
mov
mov
arpl
xor
comiss
jmp
mov
fild
inc
data16
ins
sti
movs
(bad)
fs
mul
xchg
dec
dec
movs
clc
pop
imul
sbb
push
dec
jmp
sbb
in
jmp
and
mov
outs
das
test
cdq
sub
add
adc
das
push
sub
in
mov
add
sbb
mov
xchg
in
mov
mov
fwait
stc
inc
sub
popf
xor
jmp
movs
xor
ja
sbb
pop
loop
test
add
adc
mov
aaa
dec
addr16
cwde
dec
aam
xchg
xchg
ret
in
rcl
inc
add
or
lds
cmp
inc
out
pushf
lea
cdq
mov
mov
dec
es
push
lods
and
lds
iret
loop
(bad)
(bad)
push
daa
stc
dec
retf
cmp
(bad)
push
div
push
push
lock
cmc
and
mov
rol
in
outs
mov
cwde
cld
xor
and
test
ds
mov
pop
mov
in
hlt
or
mov
fcmovnb
loope
fwait
cmp
push
or
pop
ss
ins
call
mov
sub
lock
sar
mov
adc
mov
icebp
push
mov
shr
out
cmp
mov
call
scas
aas
jge
repz
cmp
shr
movs
sub
adc
pop
cmp
or
in
lds
into
or
aas
push
and
out
pop
inc
add
push
jne
xor
xchg
gs
jmp
pop
clc
and
jl
jnp
or
jmp
mov
stc
xchg
in
xchg
pop
push
and
sbb
xlat
(bad)
pop
and
std
shl
aas
hlt
loop
or
push
adc
sbb
loope
jns
sub
push
sbb
(bad)
mov
(bad)
and
loopne
or
push
add
pop
ss
jmp
shr
arpl
dec
rcl
or
sbb
scas
pop
vmread
and
or
pop
inc
mov
mov
pop
rcl
iret
(bad)
mov
sub
js
push
out
sbb
(bad)
adc
mov
sbb
mov
dec
stos
pop
jno
mov
or
fidiv
mov
sub
aad
stos
adc
popa
(bad)
mov
lods
mov
or
outs
mov
rol
fmul
mov
mov
sbb
ja
aaa
je
loop
adc
sbb
mov
or
mov
imul
and
xchg
push
fs
add
push
xchg
adc
xchg
and
push
jecxz
inc
push
inc
stos
inc
cmps
fidiv
stos
imul
out
dec
js
mov
pop
dec
arpl
cmp
stos
cdq
and
or
bound
xchg
ret
mov
bound
jp
push
adc
jne
outs
xor
cmc
and
cmc
sar
aas
shl
fs
sbb
dec
and
out
ja
das
pop
xchg
int3
shl
lds
push
cmps
(bad)
xchg
out
daa
sub
cdq
inc
fnstsw
dec
enter
aas
outs
xor
pusha
xchg
mov
adc
cmp
stos
pop
jg
int3
inc
dec
xchg
pop
or
and
fs
ffreep
pop
test
cmps
mov
jge
jnp
dec
popa
push
adc
inc
(bad)
pop
(bad)
cmc
add
jmp
rol
adc
aad
adc
inc
popa
mov
and
mov
xchg
xchg
in
std
sti
cmp
ins
jge
or
repnz
mov
pop
pop
xor
sbb
inc
cmp
jnp
lahf
sbb
movs
neg
pop
dec
sub
call
movs
gs
not
out
sbb
or
and
cmps
jg
jns
loopne
add
mov
hlt
jg
mov
pop
sbb
(bad)
in
dec
mov
mov
hlt
dec
loope
jnp
hlt
popa
fldenv
xchg
lea
bound
dec
cmp
(bad)
push
jns
inc
mov
enter
pusha
dec
cli
mov
dec
bound
(bad)
xor
push
sbb
test
push
fnstenv
push
jnp
clc
in
and
add
xor
sub
test
adc
sbb
js
push
push
fadd
ins
cmp
test
or
fsubr
test
xor
sub
mov
sar
mov
adc
add
pop
xchg
ret
adc
dec
mov
and
push
push
and
adc
out
xchg
add
fadd
imul
push
in
fmul
inc
mov
icebp
or
popf
ret
pop
les
(bad)
cmp
loope
sti
imul
cmp
mov
into
sti
mov
shl
push
sbb
jo
aam
or
(bad)
aas
ret
ss
ret
push
mov
mov
adc
push
and
dec
loop
xor
in
push
xchg
ret
mov
jb
adc
inc
ins
mov
rcl
inc
sub
jo
jo
das
std
mov
(bad)
jae
fstp
xchg
jnp
shr
push
lahf
jnp
mov
sbb
jbe
repz
push
(bad)
jl
sub
test
dec
inc
push
adc
cli
aam
les
sbb
in
and
ins
mov
scas
ror
js
out
sub
scas
adc
pop
in
enter
or
push
jmp
in
jnp
shr
test
mov
cld
dec
movs
and
pop
ret
cmp
add
shr
nop
shl
ret
mov
iret
imul
mov
push
add
popf
pushf
shr
arpl
hlt
es
mov
into
cs
clc
ror
pop
sbb
cdq
push
xchg
fild
push
sbb
push
rol
clc
adc
jbe
cs
xchg
xor
fsubr
icebp
sbb
push
mov
push
and
adc
push
fist
pop
arpl
pop
jmp
dec
cmp
push
pop
ret
xchg
jle
or
and
jle
jne
push
jecxz
test
jnp
fnstsw
add
dec
cli
xor
push
stc
push
jmp
mov
sub
outs
mov
leave
push
mov
mov
fcomp
mov
mov
mov
stos
cmp
shl
push
std
lods
mov
xchg
mov
mov
adc
in
cmps
mov
jg
test
retf
push
xor
jle
fwait
mov
popf
ins
dec
and
por
or
push
cmp
pusha
jge
xchg
out
into
lds
add
mov
cmp
add
retf
nop
push
mov
enter
ss
pop
popf
aam
and
xchg
add
loopne
inc
or
loopne
inc
imul
inc
shl
xchg
je
mov
ret
out
or
in
cmps
jle
int3
dec
xchg
jns
mov
fst
int3
mov
sub
cld
shl
shl
add
mov
or
and
adc
sbb
addr16
cmp
or
xchg
xor
jmp
js
inc
loop
jmp
cmc
pop
mov
icebp
jp
jo
daa
dec
sbb
add
test
jbe
dec
inc
sbb
popf
cwde
js
lods
jl
fmul
adc
adc
add
loope
lods
scas
sbb
test
repz
pusha
push
lods
jmp
cmp
add
mov
xchg
fisub
cmp
xor
data16
out
or
jae
js
cmp
lods
pop
mov
fcom
add
sbb
fwait
add
cs
outs
or
pushf
rol
(bad)
cld
repnz
shl
lds
jne
dec
jae
int
xor
xchg
ins
(bad)
xor
xchg
jbe
(bad)
in
test
lahf
imul
dec
outs
and
or
js
and
mov
pop
inc
push
cmp
daa
imul
pop
cmp
push
or
mov
fisub
push
retf
adc
push
push
outs
sbb
dec
icebp
xchg
and
gs
imul
addr16
mov
xchg
dec
in
jb
test
dec
movs
xor
aas
sbb
push
or
or
rcr
push
dec
or
popa
cmp
les
push
jae
div
sahf
cli
push
lods
add
aaa
inc
push
sbb
pop
push
jp
imul
int3
push
test
mov
and
mov
imul
xor
dec
xor
xor
aas
(bad)
jmp
pushaw
jmp
mov
mov
lods
scas
xchg
push
adc
cmps
dec
clc
or
xchg
jne
scas
add
pop
in
(bad)
ss
inc
jo
xor
enter
(bad)
dec
je
mov
sbb
cmp
mov
jmp
mov
xor
sub
push
push
pop
add
in
outs
sahf
xor
jns
xchg
mov
jo
(bad)
mov
sbb
push
jae
repz
pop
(bad)
js
out
cmp
cli
jp
sub
dec
out
dec
aaa
dec
xchg
jecxz
stos
dec
loope
or
add
sbb
pushf
fldcw
das
inc
mov
ins
jl
mov
(bad)
mov
mov
lea
jb
add
call
daa
int3
push
imul
lock
fwait
sahf
mov
test
test
stos
pop
inc
mov
loope
ds
pop
xor
jne
(bad)
mov
int
adc
sbb
in
sbb
in
xor
cmp
call
hlt
in
out
sti
push
(bad)
and
das
adc
jmp
in
dec
and
mov
pop
cmps
mov
mov
xchg
push
bound
inc
call
idiv
outs
or
enter
dec
mov
fild
imul
ja
call
lock
retf
push
aam
repz
xchg
rol
loope
push
dec
fbstp
cwde
inc
push
xchg
shl
mov
test
aam
adc
pop
cwde
hlt
popf
mov
mov
test
gs
add
xor
ficom
lods
xchg
(bad)
ja
sar
jg
stos
jg
mov
(bad)
cli
jp
(bad)
pop
jno
pop
hlt
pop
mov
dec
mov
or
ds
cdq
in
sbb
fwait
popa
add
mov
lds
ret
iret
and
lock
push
movs
jns
mov
xchg
cli
mov
xor
out
call
sbb
jl
stc
rol
aad
loopne
daa
retf
cld
xchg
and
into
pop
fcomp
aas
jecxz
inc
arpl
mov
mov
stos
pop
mov
ret
lods
push
xor
xchg
dec
cmp
les
xor
outs
jae
daa
add
xor
hlt
xlat
shr
push
mov
jbe
adc
sub
test
mov
xchg
pop
jg
push
gs
ins
inc
in
das
mov
loope
adc
in
adc
or
fiadd
stos
and
mov
sbb
xchg
xor
pop
stos
out
ds
xlat
sahf
sub
ret
wbinvd
cdq
test
xchg
sub
sahf
xchg
jno
ins
xor
test
xor
dec
mov
jb
call
mov
jb
inc
data16
movs
scas
out
test
pop
repz
jg
nop
into
push
mov
pop
fld
or
mov
jg
sub
xor
pop
push
jmp
xchg
repz
push
push
sbb
cmp
add
lods
pop
mov
clc
dec
inc
jnp
dec
push
fist
les
call
xchg
pop
ret
cwde
hlt
pop
push
mov
cmp
ins
mov
sbb
repz
xor
or
test
fdiv
pop
xchg
(bad)
lahf
xchg
dec
outs
xchg
mov
rcl
xchg
xchg
fdivr
mov
(bad)
fidivr
ds
les
xchg
cld
cdq
ins
fcom
dec
movs
ja
jp
xor
ins
lock
addr16
jecxz
and
xor
fnstcw
in
cmp
shl
pop
push
ds
pusha
bound
xor
sub
pop
shl
movs
mov
xor
pop
psrlq
rcl
int3
gs
in
push
xor
dec
inc
(bad)
shr
dec
cmp
idiv
bound
or
xchg
xrelease
jbe
call
or
mov
fidivr
cli
imul
or
icebp
xchg
jg
and
out
adc
adc
xchg
fstp
inc
outs
sbb
cmp
xchg
lods
shl
jnp
stos
hlt
jg
repz
push
xor
xchg
and
iret
adc
repnz
fwait
and
mov
fidivr
pop
xor
addr16
jge
rol
sahf
sub
(bad)
hlt
rcl
push
xchg
push
jmp
(bad)
loopne
leave
xor
and
mov
loope
(bad)
cmp
lods
push
mov
sub
mov
das
mov
xor
sti
movs
jb
out
mov
fisttp
xchg
add
add
div
sub
push
or
xor
pop
imul
jmp
mov
or
mov
in
pop
into
jb
pop
xchg
jmp
jg
mov
xlat
jno
jmp
mov
bound
adc
fisubr
push
daa
clc
xor
xor
and
jl
out
aas
push
mov
cmp
repz
push
push
test
sbb
and
add
xor
cmc
je
lods
ins
pop
push
or
and
cmp
jae
cmp
mov
mov
xor
pushf
mov
aaa
sub
push
fild
sub
dec
cmps
in
out
mov
and
push
daa
lds
jbe
(bad)
xlat
add
dec
and
inc
dec
ror
jmp
sub
outs
nop
xchg
pop
dec
push
mov
sub
(bad)
jno
xor
xchg
jmp
inc
cmp
(bad)
pushf
movs
ins
ins
in
frstor
lea
das
adc
add
out
cs
leave
lea
addr16
mov
jmp
adc
outs
or
inc
mov
jnp
test
sub
jae
stos
xchg
(bad)
jp
mov
cwde
imul
dec
lock
push
jo
or
xchg
sbb
mov
mov
mov
pushf
retf
fsub
jns
dec
ret
and
jnp
or
adc
mov
mov
test
stc
jb
mov
adc
push
cmp
popa
push
(bad)
nop
xor
inc
leave
test
daa
data16
mul
xlat
mov
jnp
jmp
lock
add
out
sub
jnp
(bad)
pushf
sbb
test
sub
mov
push
dec
xor
push
sbb
daa
sub
adc
jne
in
jmp
dec
aam
push
pop
mov
clc
push
inc
mov
fistp
dec
or
cmp
retf
jb
syscall
sbb
imul
xchg
sub
adc
aad
in
add
popa
arpl
retf
popf
cwde
ficomp
retf
push
mov
push
sub
pop
xchg
and
ins
mov
jp
adc
mov
sbb
nop
stos
mov
mov
mov
jge
add
jge
push
mov
stos
xchg
sbb
out
int
inc
cdq
push
clc
inc
adc
xchg
jl
xchg
mov
fild
or
and
clc
push
sub
mov
movs
in
dec
mov
mul
mov
mov
sbb
je
rcr
ret
push
push
push
dec
and
cmp
mov
outs
pop
(bad)
mov
and
pushf
xor
mov
hlt
xchg
mov
push
and
adc
xchg
cmp
into
xor
mov
add
aas
mov
jbe
push
xchg
int
sbb
push
sub
cs
cmp
repnz
or
xlat
mov
pop
ret
jbe
icebp
fisub
cmp
or
out
scas
or
xor
cmc
xlat
stc
lds
lock
xchg
(bad)
sti
jg
(bad)
les
nop
and
std
es
test
fs
div
mov
push
clc
xchg
idiv
pop
dec
mov
int
jne
dec
inc
out
xchg
adc
loopne
adc
and
xor
mov
lods
add
or
fwait
lods
popa
pop
xchg
mov
cmps
pusha
jle
push
mov
add
in
enter
sub
in
fwait
inc
rcr
cwde
dec
pop
add
sbb
inc
ds
mov
pop
and
push
or
xchg
dec
adc
aad
shr
inc
jnp
ja
jmp
je
retf
jb
xor
or
xor
out
cmc
sub
lods
dec
sub
jl
xchg
xchg
js
test
sbb
(bad)
inc
scas
cmp
jo
and
pop
cmp
and
or
inc
jg
fs
and
or
(bad)
rol
xchg
pop
adc
xchg
adc
jle
mov
inc
xchg
arpl
mov
mov
jnp
daa
add
in
and
sub
je
out
pop
inc
mov
mov
lss
sti
inc
das
pusha
js
dec
popf
imul
lods
xchg
pop
fs
xor
cmc
pop
scas
cmp
pop
push
(bad)
fnsave
sar
aad
cmp
xchg
(bad)
push
mov
jmp
fistp
ins
sti
in
sbb
push
dec
mov
xor
xor
mov
test
(bad)
xchg
sub
mov
lea
jne
stos
jae
imul
pop
loope
(bad)
mov
inc
pop
and
hlt
ins
test
pushf
xchg
push
mov
xchg
outs
lods
ins
and
adc
jmp
mov
cmp
mov
cmc
out
mov
aad
test
or
fnstenv
jp
pop
std
sub
and
call
inc
mov
push
enter
pop
addr16
mov
inc
sbb
mov
cmps
jge
mov
cmp
sbb
sbb
(bad)
enter
sbb
and
ror
lods
pop
pop
popf
repnz
bound
lea
je
nop
push
div
ds
sub
jns
xor
imul
lea
jge
add
pop
loope
das
or
leave
div
cmp
pop
mov
dec
dec
inc
sbb
lods
call
cmc
bswap
pop
jle
out
repnz
push
(bad)
mov
std
fdivr
sbb
jae
nop
loop
pop
loopne
jno
enter
or
mov
push
jp
aaa
push
lahf
sub
out
pop
push
sbb
ror
dec
xchg
fadd
xchg
aam
push
add
ror
into
mov
add
fisub
ret
call
adc
jno
xchg
sub
popf
loop
mov
mov
inc
jl
inc
mov
pushf
cld
cmp
dec
xlat
mov
ja
inc
das
pop
fs
jnp
adc
xchg
and
adc
in
cmp
lods
sub
loop
outs
rcr
sub
sar
leave
scas
xchg
das
push
(bad)
add
out
shl
mov
dec
outs
dec
cmp
cld
jge
retf
fucompp
jbe
sub
sahf
fiadd
adc
addr16
loopne
pushf
hlt
or
sbb
push
(bad)
dec
fisubr
mov
ret
in
retf
dec
sub
(bad)
mov
ins
stos
xor
pop
nop
cli
int
inc
outs
add
fisub
cmp
call
push
adc
push
loopne
test
test
aas
jnp
jbe
mov
pop
out
xchg
es
repz
outs
mov
ins
ficom
(bad)
lods
ret
mov
mov
dec
mov
pop
data16
jo
inc
scas
iret
(bad)
xchg
sti
xchg
cld
mov
cmp
loop
or
mov
pop
jnp
xchg
(bad)
cmc
das
jg
sbb
mov
pop
and
jg
aas
sbb
dec
movs
int3
call
sub
popf
gs
adc
int
or
inc
xor
sbb
rcl
test
pop
outs
(bad)
adc
xchg
cmp
int
js
pop
mov
sub
and
pop
cdq
je
mov
mov
dec
daa
push
jmp
stc
mov
data16
cmp
push
sbb
xchg
aaa
daa
loop
jl
stos
cmc
imul
(bad)
sub
lds
ins
mov
jmp
fldenv
int
push
mov
or
loopne
test
push
ret
mov
popf
or
ret
loopne
inc
sar
pop
repnz
and
adc
pop
jno
inc
jecxz
pop
or
sbb
adc
xor
retf
lea
push
push
pop
mov
aam
xchg
das
xor
xchg
push
mov
cs
fisub
cmp
mov
lds
mov
ss
xchg
sub
daa
mov
xchg
jmp
data16
(bad)
fs
mov
ins
imul
dec
stc
pusha
add
cvtpi2ps
push
push
sbb
add
xor
fdivr
xor
int3
pusha
dec
sub
cwde
adc
pop
retf
pop
cmp
int
lea
or
dec
or
push
in
retf
mov
sbb
sbb
mov
lods
inc
cmp
imul
clc
retf
or
inc
dec
mov
(bad)
mov
into
addr16
sbb
fild
push
cmp
stc
push
popa
cwde
inc
jae
cmp
mov
lock
call
adc
jo
dec
je
das
sbb
push
std
and
dec
or
or
fldenv
rcl
or
stos
xchg
or
ficomp
lock
add
iret
or
pop
outs
push
inc
jecxz
ror
jb
sbb
adc
aas
mov
pushf
cld
adc
shr
shl
das
popa
dec
sub
xchg
cmps
repz
mov
lds
ds
call
mov
cmp
mov
dec
jne
std
fs
mov
jno
sbb
loope
shr
lods
or
cli
cdq
mov
add
(bad)
stos
adc
in
mov
repz
jmp
mov
jmp
inc
cli
add
in
arpl
aaa
xchg
std
push
mov
leave
jecxz
jns
call
fst
sub
enter
xlat
shr
pop
scas
dec
out
lea
adc
sub
jb
shr
aaa
jae
xchg
cmps
scas
push
stos
jg
fdivp
daa
mov
sub
add
in
or
push
in
mov
inc
mov
and
int3
jl
iret
mov
push
add
adc
push
jmp
mov
loope
enter
push
stc
xchg
call
popf
push
pop
cli
out
cmp
adc
jne
xor
(bad)
popa
das
sub
or
in
cmp
or
sub
popf
or
push
pop
push
fdivp
std
imul
cld
aam
mov
inc
xchg
xchg
push
and
(bad)
mov
scas
xor
inc
dec
xlat
pop
aaa
call
pop
push
push
push
(bad)
push
dec
inc
aas
gs
push
mov
pop
fadd
xchg
and
xor
cmp
dec
mov
fldenv
sub
mov
shl
inc
stc
xor
push
xor
mov
jp
cld
out
pop
mov
loope
pop
cmp
inc
mov
inc
sbb
sbb
fild
repz
arpl
xchg
xor
pop
cmc
sub
pop
xor
mov
mov
jae
pop
mov
outs
(bad)
fld
shl
popa
jne
cmp
cwde
jmp
(bad)
adc
jg
bound
je
int
sti
xchg
idiv
mov
mov
xor
inc
inc
jecxz
dec
jb
pop
rcl
ss
fdivr
lea
inc
pop
es
cmp
xchg
and
cmps
push
dec
inc
jno
cmp
iret
xchg
in
iret
ds
push
xor
cmc
add
(bad)
imul
dec
pop
add
lock
lahf
push
or
fmul
pop
push
xor
out
pop
push
into
fdiv
in
gs
fs
test
or
test
(bad)
adc
push
mov
cmp
aam
adc
adc
xchg
popa
mov
xchg
inc
(bad)
cmp
jnp
aaa
(bad)
inc
ss
bound
sbb
cwde
push
mov
sub
pusha
not
push
mov
shl
rcr
fcmovnbe
mov
sti
or
out
sti
cwde
cdq
in
lds
popf
xchg
mov
adc
lods
into
jns
sub
or
lahf
fisubr
pop
mov
adc
out
retf
mov
shl
das
rcl
pop
repz
add
mov
shr
and
xor
jmp
push
jg
(bad)
lods
add
add
rcl
fs
repz
daa
pusha
push
adc
outs
or
cmps
js
lock
adc
adc
dec
xor
lods
pusha
data16
jmp
mov
ds
xor
xchg
data16
push
fistp
cmp
mov
push
loop
add
lahf
xor
xor
dec
sub
inc
xor
scas
jb
sbb
mov
stos
push
fdiv
shl
leave
cs
arpl
stos
pop
sti
xor
test
pop
cmp
mov
sbb
mov
movs
mov
jle
push
xor
jmp
lea
shr
xchg
xchg
sbb
test
and
mov
jns
mov
stos
cld
dec
shl
xchg
mov
add
fisttp
retf
cmp
popf
callw
ja
xor
inc
iret
popa
push
xor
shr
push
lds
pop
fild
cmps
and
int3
loope
push
aad
xchg
out
mov
test
sbb
ret
(bad)
jne
adc
test
push
xchg
enter
xchg
ins
add
dec
call
mov
or
jg
pop
fld
or
popa
pop
das
in
pop
xchg
sbb
lahf
cmc
std
repz
pop
cmp
test
cli
repnz
push
clc
int
call
pop
mov
add
cmp
clc
inc
lahf
(bad)
out
or
(bad)
es
mov
pop
mov
or
mov
mov
xchg
or
lea
push
mov
add
adc
pop
lods
xchg
add
std
in
and
jmp
test
dec
(bad)
cmc
dec
push
imul
sbb
push
xchg
dec
cmp
xor
mov
cli
cmp
xor
push
xchg
add
add
dec
loope
lock
sub
lds
in
in
xchg
jmp
fs
in
push
ds
mov
(bad)
ds
or
fidiv
aam
mov
cmp
fisubr
mov
cmp
mov
cmp
inc
cmp
xrelease
stos
sub
cmp
ins
mov
enter
test
push
add
xchg
jns
sub
mov
mov
cmps
rcl
sbb
dec
mul
xchg
sub
push
and
mov
ret
xor
enter
ret
lods
push
cmps
xchg
iret
pop
(bad)
mov
cmp
push
jb
adc
or
rol
cli
xor
adc
les
mov
stc
add
sbb
xor
xchg
cmps
outs
mov
lock
add
call
mov
jge
loopne
leave
adc
adc
out
sbb
dec
inc
outs
or
repz
inc
loop
stos
push
sub
data16
xchg
(bad)
fcomp
push
adc
stc
not
pushf
mov
(bad)
mov
pushf
test
xchg
push
outs
jge
stc
outs
mov
cmp
mov
ret
inc
ret
push
xor
and
or
cld
pop
aad
loope
sbb
das
ja
pushf
loopne
shr
cmp
(bad)
pushf
cmp
retf
les
jno
sub
xor
sti
cmp
repz
and
cmps
inc
xchg
fwait
loop
(bad)
pushf
imul
mov
mov
dec
pop
mov
mov
dec
push
imul
lea
loope
jnp
fidiv
ins
xchg
lock
shr
mov
pop
dec
(bad)
repnz
vmread
out
popf
adc
and
movs
add
fdivrp
adc
mov
les
jb
push
mov
add
mov
add
cwde
push
xor
pop
push
xchg
and
xor
cwde
call
test
adc
adc
jbe
jp
fcmove
pushf
mov
ja
shl
daa
lock
dec
mov
dec
loopne
sar
imul
mov
push
in
sub
mov
ins
in
pushf
inc
(bad)
dec
(bad)
mov
(bad)
cld
ret
jb
in
lea
lods
push
jle
int
arpl
sub
test
popa
mov
pop
inc
in
mov
inc
pop
push
sbb
mov
sub
push
dec
cmp
xor
frstpm(287
or
sbb
movs
pop
jb
rcr
cmp
in
sub
ss
jae
std
shl
ret
out
aaa
jb
jbe
loop
or
mov
mov
hlt
push
stos
pop
cmp
fcomip
je
stos
or
into
pop
jmp
or
sbb
jl
jo
pop
adc
pop
inc
pop
push
fimul
retf
sbb
call
or
add
pop
push
add
pusha
jno
fadd
pop
mov
mov
add
cwde
cmp
push
movs
loopne
sbb
sub
(bad)
fs
test
sub
in
inc
mov
scas
inc
and
cld
dec
mov
mov
int3
popa
out
addr16
ins
stc
cmps
in
add
in
sub
sbb
and
jo
pop
rcr
jecxz
xchg
and
ins
xlat
and
outs
and
inc
adc
mov
rcr
ret
(bad)
and
push
xchg
mov
scas
cwde
movs
fst
mov
nop
xchg
sub
add
aam
inc
aaa
aad
sbb
jne
les
cmps
inc
dec
nop
je
xchg
adc
sbb
repz
sahf
xchg
push
pop
shl
call
mov
inc
xchg
lods
stc
lds
pop
push
in
sti
adc
sub
les
jae
inc
or
enter
leave
adc
adc
mov
pop
adc
adc
cli
cmp
pop
inc
jg
bound
push
pop
jge
push
push
outs
xor
sub
push
or
cmp
add
sbb
les
rcr
bound
retf
movs
sbb
movs
push
lods
repz
mov
lds
sub
dec
inc
sub
jmp
push
outs
cmp
inc
xchg
bound
sub
xchg
pop
loope
cmp
dec
dec
cwde
sub
mov
rcl
cmp
iret
dec
or
mov
push
and
push
retf
add
dec
mov
lahf
stos
test
inc
clc
cmps
or
ins
mov
push
sub
sbb
cmp
jnp
scas
xor
and
mov
mov
loope
jg
mov
das
lods
pop
sbb
push
xchg
sub
test
and
cli
add
iret
and
sub
dec
pop
sub
ja
and
cmps
popf
mov
retw
mov
out
mov
out
xchg
pop
dec
add
xor
xor
out
mov
mov
stc
fsubr
mov
test
pop
lods
xor
xchg
aaa
loope
inc
adc
shr
pop
add
xchg
cmp
cmp
jmp
or
stos
inc
test
jg
frstor
ja
mov
leave
push
cmp
mov
dec
pop
jmp
fld
jnp
mov
push
les
test
lods
call
inc
fnstsw
push
cmps
jg
adc
jno
add
movs
xor
pop
mov
add
mov
push
push
daa
js
sub
mov
loop
call
jo
les
cdq
cmp
ds
jl
pop
cwde
pop
sbb
outs
mov
xchg
xchg
cmp
inc
pop
popf
mov
lahf
adc
mov
pop
(bad)
xchg
sbb
pop
jmp
shr
enter
in
imul
cli
test
pop
push
icebp
push
loope
cmps
mov
out
into
push
test
lock
mov
cmp
int3
loopne
sub
jp
lods
leave
and
lock
xlat
rcl
rcr
jecxz
pop
in
out
popa
inc
fwait
in
jno
jns
in
enter
fsubrp
ss
inc
dec
pop
sbb
xor
and
mov
pop
xor
outs
cld
retf
loopne
(bad)
push
repnz
mov
or
inc
mov
fs
or
mov
hlt
lods
retf
psrad
dec
mov
mov
sbb
rcl
jp
sbb
bound
out
imul
xchg
xchg
jno
daa
inc
pop
mov
nop
adc
push
mov
shl
jb
push
retf
add
stos
repz
pop
mov
mov
(bad)
dec
cmp
adc
pop
or
scas
sbb
shl
jl
ficomp
push
repnz
(bad)
call
push
and
or
aas
popa
push
rcl
fwait
sub
(bad)
movs
in
out
ret
popa
sub
ins
mov
ja
(bad)
scas
cmp
xor
adc
sahf
dec
mov
cmp
fbld
xor
add
and
mov
push
lods
fnstenv
xor
scas
shr
(bad)
fistp
test
and
jle
push
lock
out
push
sbb
loop
ret
stos
int
sbb
jp
cmp
mov
sub
cmc
in
pop
imul
nop
outs
(bad)
bound
mov
daa
xchg
mov
add
inc
mov
in
mov
in
dec
ja
mov
(bad)
das
pusha
out
fwait
lea
(bad)
push
les
sbb
pop
dec
sub
sbb
xchg
push
cdq
pusha
out
pop
rcr
pop
and
adc
mov
or
jmp
mov
sahf
jo
push
pop
add
clc
mov
rcl
push
sbb
std
into
xlat
adc
cmps
loop
sbb
(bad)
shl
leave
test
xchg
jnp
sti
pusha
rcl
pop
mov
adc
arpl
and
iret
lods
rcr
inc
pop
(bad)
loopne
(bad)
and
daa
xor
xchg
shl
leave
sahf
icebp
cmp
sahf
les
or
cmps
jmp
stos
out
pushf
adc
sti
(bad)
cdq
call
ret
mov
mov
dec
nop
mov
imul
retf
mov
les
lds
add
pop
aam
sub
push
fbld
jmp
xor
stos
jmp
leave
xor
push
nop
cli
mov
mov
enter
cmps
js
icebp
add
out
sti
jecxz
test
fld
sti
sub
es
push
inc
mov
mov
pusha
add
mov
xor
xor
cmc
xor
lods
pushf
div
clc
vpunpckhbw
lock
jle
pop
pop
inc
adc
and
shr
jmp
je
pop
xchg
cmc
in
dec
hlt
mov
fwait
xchg
push
cli
int
iret
out
push
iret
jnp
jle
sub
lahf
mov
add
cmc
out
or
test
pop
mov
lods
call
test
xor
mov
or
or
add
mov
sbb
or
in
loope
fwait
arpl
(bad)
sbb
mov
jp
mov
xchg
test
jbe
cmp
out
mov
inc
outs
jnp
xor
mov
dec
(bad)
test
in
sub
popa
out
or
adc
mov
sub
aad
test
or
mov
arpl
es
mov
pop
loopne
xor
stos
adc
push
pop
movs
mov
cmp
icebp
(bad)
rcr
mov
pop
lea
mov
repz
lds
jne
mov
lea
clc
or
les
cmp
push
and
mov
call
pop
in
rcl
mov
mov
cmp
std
ins
xor
pop
pop
shl
jge
lock
mov
repz
sub
push
or
inc
sti
fdivr
ficom
add
jle
mov
mov
jne
call
movs
rcr
jmp
cdq
xchg
sub
push
jecxz
fidiv
in
test
inc
and
arpl
cmps
in
sub
sub
test
inc
das
stc
push
cmp
rcl
js
inc
push
pushf
add
in
outs
mov
xchg
js
mov
out
and
mov
out
(bad)
xchg
push
ret
aaa
icebp
dec
enter
and
inc
cs
test
icebp
adc
(bad)
out
sub
cmps
xor
in
div
sahf
xlat
data16
xor
fwait
js
repnz
(bad)
mov
fisttp
push
or
xor
(bad)
xchg
dec
std
pop
xor
add
sub
and
into
cld
inc
aad
jns
inc
stc
call
xchg
pop
(bad)
sti
fnstsw
das
out
stc
dec
cmc
vpsadbw
mov
shl
int3
cld
xor
test
mov
cmp
inc
push
xchg
fs
mov
xchg
mov
push
in
neg
add
cmps
xchg
mov
sbb
add
push
cli
and
es
add
mov
xchg
ja
cld
retf
cs
popa
scas
pusha
js
rcl
inc
(bad)
repz
push
sbb
pop
imul
mov
mov
repz
int3
outs
mov
int
push
or
or
jecxz
nop
stos
mov
jnp
inc
out
fsub
sub
pusha
mov
pop
pop
out
das
bound
retf
ins
inc
(bad)
pop
mov
mov
xchg
adc
cli
(bad)
idiv
sub
(bad)
mov
fcomp
fsub
jg
test
xor
and
xchg
mov
push
mov
xchg
ret
int
retf
fisttp
stos
bound
int
cmp
or
cmps
test
mov
repz
cmps
xor
or
fs
loop
mov
pop
pop
mov
add
sbb
int3
mov
cmp
nop
fild
into
cmps
popf
sahf
sub
fbstp
dec
mov
jge
push
dec
pop
mov
das
fidivr
and
mov
sub
pop
sbb
mov
pop
and
pushf
nop
(bad)
mul
xchg
movs
pop
cmps
shl
ss
jbe
mov
lods
ror
nop
pop
pushf
loop
test
xlat
scas
sub
pop
mov
add
xchg
dec
and
jp
imul
push
cmp
add
clc
dec
lds
jo
mov
pop
gs
ja
sbb
pop
mov
repnz
adc
call
push
std
rcr
retf
xchg
mov
outs
xchg
xlat
fistp
jno
sbb
mov
adc
xchg
in
cmp
jl
xchg
push
xor
gs
hlt
addr16
xchg
outs
cld
sub
stc
(bad)
ins
cmps
pop
push
imul
punpcklbw
xchg
rcr
xchg
add
leave
mov
daa
cmp
pushf
dec
out
cmc
pop
sub
ja
rcr
(bad)
mov
lock
adc
ins
xchg
imul
sub
stos
sub
sbb
lds
andps
mov
imul
ss
jo
jl
mov
inc
mov
xor
pop
xchg
in
dec
or
aam
inc
lahf
or
cmps
sti
clc
ret
in
in
inc
les
out
std
hlt
push
imul
mov
mov
and
loop
outs
aaa
lea
shl
ret
neg
stos
inc
inc
jl
rcl
sbb
and
and
push
jno
push
fsub
xchg
fld
ror
and
cmp
and
loopne
sub
cmps
sub
jl
sbb
popf
std
repz
scas
or
sti
or
mov
cli
hlt
movs
mov
xor
aas
shr
xchg
pushf
sbb
and
cmp
add
mov
movs
gs
test
push
out
iret
pop
ins
pop
jo
rcr
jbe
adc
imul
imul
ins
add
retf
(bad)
cs
lahf
lahf
mov
and
repnz
mov
pop
push
pop
cmp
fld
pop
leave
push
and
jne
fcmovbe
and
mov
adc
pusha
xlat
mov
push
push
xchg
add
add
jbe
mov
out
mov
pop
les
inc
out
adc
add
repnz
or
cmps
inc
mov
enter
icebp
cmp
jae
inc
leave
rcl
arpl
xlat
push
call
mov
dec
ss
shl
xchg
test
xchg
fcmovnu
inc
fwait
pop
xchg
std
jbe
fidiv
mov
int
int
rep
arpl
fidiv
push
or
dec
inc
test
cmc
mov
adc
jg
in
gs
aaa
nop
bnd
aam
popa
sbb
mov
(bad)
cld
sbb
pop
xchg
mov
(bad)
scas
or
xchg
inc
retf
xchg
inc
xchg
xor
in
inc
call
pop
das
cmc
adc
icebp
aad
pop
pop
lds
mov
stos
xchg
mov
mov
inc
icebp
pusha
fisttp
jbe
pusha
xor
mov
inc
std
pop
adc
sbb
xor
push
mov
repnz
xchg
push
mov
mov
aaa
xchg
xor
xchg
out
or
stos
inc
and
xor
je
test
stc
sub
shl
xchg
(bad)
rcr
sbb
or
jle
dec
jp
or
sbb
popf
mov
jl
jmp
mov
xor
sub
outs
ins
icebp
jl
mov
ds
popf
mov
ret
cs
std
fcmovnb
jle
sbb
and
aad
popa
xor
mov
je
mov
test
add
in
pushf
rcl
push
inc
dec
cmc
adc
cmp
inc
leave
sbb
pushf
mov
out
sbb
jnp
or
jg
lock
scas
int
je
loop
mov
or
jp
or
loop
jecxz
aam
fisttp
dec
xchg
adc
and
mov
dec
out
lods
pop
pop
xchg
aas
or
cmp
mov
sbb
scas
or
cmps
test
test
lods
fcomp
ds
or
xchg
fiadd
pop
neg
dec
xor
aaa
sbb
mov
push
mov
mov
ficom
outs
jno
loopne
and
mov
adc
sahf
jb
dec
outs
lea
adc
test
hlt
imul
jg
les
cli
loopne
mov
imul
lahf
cmp
push
daa
retf
jne
adc
ror
push
lea
mov
gs
xchg
mov
push
std
fs
mov
ficomp
push
or
cs
stos
adc
gs
push
sub
pusha
bound
aaa
ret
ins
jle
shr
inc
rep
jne
inc
jbe
ds
adc
sahf
xor
xor
imul
aaa
(bad)
in
popf
mov
pop
pop
jle
into
adc
test
fs
inc
fsubr
rcr
lea
or
cli
shr
aad
movs
or
dec
pop
jne
gs
repz
cmp
ss
xchg
pop
jmp
cmps
inc
fnstenv
mov
iret
fcomp
inc
push
jns
inc
inc
(bad)
xchg
rcr
(bad)
mov
or
mov
jb
imul
fimul
out
xchg
mov
fwait
out
fmulp
retf
int3
sbb
call
jo
xor
scas
cld
call
push
sub
or
xchg
jo
cmp
add
add
sbb
jnp
mov
pushf
mov
in
adc
call
add
jo
popa
movs
out
mov
stos
dec
push
push
push
in
mov
add
retf
shl
inc
inc
adc
fsub
cmps
lock
push
imul
mov
cmp
mov
push
push
and
stos
sbb
pop
jg
inc
xchg
cmp
pop
cwde
js
xor
mov
xlat
sub
leave
cmps
(bad)
lds
sub
movs
adc
adc
pop
sub
cmps
fistp
sahf
inc
(bad)
clc
nop
aad
cmp
mov
pop
shld
movs
mov
dec
fwait
in
aam
xchg
jo
(bad)
add
rcr
add
and
adc
mov
addr16
jnp
arpl
daa
mov
loope
jecxz
jmp
dec
inc
adc
rol
cmp
data16
imul
iret
cdq
and
or
sbb
mov
sub
mov
nop
repz
les
jge
cmps
mov
jp
xchg
outs
mov
imul
ds
mov
cmp
nop
inc
(bad)
in
sub
xchg
sbb
xchg
xor
das
push
mov
(bad)
mov
cmp
inc
cdq
mov
or
jbe
out
idiv
jnp
sbb
aas
shr
inc
sub
out
mov
sti
mov
int3
cmp
mov
xor
(bad)
cli
or
mov
jp
sub
pop
cmps
sbb
call
cmp
mov
fxch
gs
into
xchg
fild
dec
mov
cmc
(bad)
fcomp
sahf
or
aam
cmp
vmovdqu
es
icebp
mov
xor
push
ins
mov
data16
sub
push
scas
iret
sti
gs
and
lahf
inc
ret
std
outs
cmc
add
xchg
ss
pop
or
cmp
popf
hlt
jg
idiv
shr
out
push
cmp
xchg
or
test
and
jnp
cmps
inc
ror
adc
pop
data16
sbb
jg
xchg
mov
leave
adc
arpl
inc
loop
mov
mov
(bad)
jecxz
add
fldenv
dec
pop
cdq
or
push
lds
aaa
or
jge
jno
fcom
mul
ss
xor
pusha
push
cli
push
or
mov
add
sbb
test
pop
imul
in
cmp
in
mov
icebp
fcomp
jmp
mov
pop
and
cmp
das
adc
pop
inc
inc
mov
repz
xchg
dec
adc
and
mov
inc
ret
and
(bad)
push
std
push
mov
loop
fs
jp
arpl
jecxz
dec
out
dec
mov
ins
add
(bad)
mov
adc
or
dec
cmp
xor
mov
pop
cdq
pop
in
inc
push
sub
cmp
or
ret
or
dec
add
hlt
add
mov
mov
and
cmp
xor
sbb
sub
es
lahf
mov
and
aas
daa
xchg
mov
dec
fwait
ins
mov
mov
jl
test
xchg
loope
mov
jnp
inc
aaa
(bad)
xor
dec
mov
loope
daa
push
popf
add
sub
xchg
mov
in
not
sub
xor
test
sar
std
(bad)
div
aam
iret
sbb
sub
sub
adc
cs
pop
sub
shl
xlat
pop
fcom
setl
inc
hlt
test
ret
pop
xor
mov
pushf
mov
dec
adc
imul
pop
push
addr16
sub
or
out
dec
jb
pop
push
push
aad
gs
mov
cmp
sti
mov
cmps
xor
mov
dec
lods
pop
pushf
jp
and
adc
or
jge
mov
xchg
in
inc
out
data16
jmp
call
xor
xchg
ins
jmp
ja
push
imul
nop
ds
pusha
nop
pop
sub
mov
repnz
mov
daa
xor
mov
jo
cmp
mov
aaa
pop
jno
xor
mov
push
enter
mov
xchg
and
add
f2xm1
rcr
hlt
push
adc
xor
xor
dec
inc
add
jnp
pop
pop
add
ins
mov
inc
xor
adc
pop
scas
cs
imul
cs
xchg
loope
fldlg2
pop
(bad)
cmp
js
xchg
dec
ja
xchg
cmp
xor
mov
xchg
cmp
les
stos
enter
mov
scas
and
sbb
add
sbb
pop
jne
adc
dec
fsub
fstp
loop
ret
shr
aad
dec
cdq
call
mov
mov
sahf
jno
inc
fdiv
jb
pop
nop
dec
test
jp
cmp
sar
cmc
inc
xor
pop
iret
adc
or
dec
push
fild
fld
or
mov
out
mov
xchg
fs
jns
(bad)
fisub
fnstenv
sbb
sti
mov
int
enter
shl
inc
test
inc
rcl
stos
pop
pop
cmp
jne
cmp
aaa
pop
test
aam
ds
xchg
pop
xor
and
mov
mov
lods
push
jnp
add
(bad)
nop
scas
jmp
(bad)
dec
int
fbld
shl
movs
jecxz
inc
jle
jns
inc
jbe
sub
jg
mov
add
jbe
stc
ja
jae
aaa
setp
sub
cmp
mov
jmp
stos
jecxz
pop
imul
xchg
das
mov
mov
data16
mov
mov
cli
mov
add
push
dec
mov
and
stc
shr
adc
and
dec
out
sub
sar
mov
mov
fwait
in
adc
(bad)
outs
sub
cmp
push
pusha
dec
mov
adc
xor
mov
push
test
sub
fbstp
mov
dec
mov
iret
pop
dec
shl
jno
or
xor
jge
retf
cli
mov
ret
sti
ficom
rol
retf
jg
ret
(bad)
fcos
dec
sub
sahf
aaa
push
pop
inc
lods
in
setle
ret
shl
iret
cmp
gs
cwde
shl
xchg
inc
enter
iret
push
mov
jno
or
repnz
dec
xlat
sbb
xor
mov
not
mov
repz
push
ja
gs
into
sbb
fdivr
and
push
fadd
cwde
test
mov
inc
add
sbb
shl
(bad)
lods
imul
aam
sar
das
popa
pop
add
outs
sub
test
jae
in
add
mov
cdq
jnp
xor
(bad)
movs
push
push
cmps
in
popa
push
dec
test
adc
inc
stos
(bad)
out
sahf
adc
fistp
je
in
arpl
fs
pop
jno
nop
push
aaa
ds
mov
js
mov
mov
dec
jnp
shl
inc
cmp
or
loop
pop
retf
cmp
lods
xchg
stos
or
(bad)
or
jmp
xor
inc
xor
cmp
rcr
inc
(bad)
stos
and
jmp
loop
pop
or
jne
stos
xchg
dec
pop
aam
pop
pop
mov
xchg
loop
dec
sbb
cmp
add
pop
mov
sbb
fist
cwde
sub
jb
mov
in
inc
adc
sub
xor
test
adc
imul
xchg
inc
arpl
dec
fild
and
push
(bad)
test
je
jmp
adc
into
nop
xor
les
cmp
mov
cmps
(bad)
jge
shl
add
in
nop
xrelease
inc
and
arpl
mov
es
or
in
popa
xchg
sbb
pushf
or
into
lahf
mov
cmp
test
xchg
(bad)
aad
xlat
add
sbb
in
scas
mov
call
mov
mov
inc
jecxz
movs
sbb
scas
ds
jns
fs
imul
cmp
mov
je
test
cmp
mov
mov
popf
ins
dec
xchg
popa
inc
aas
xor
fild
mov
mov
aad
mov
xchg
push
test
cmp
pop
ret
(bad)
mov
and
cld
push
mov
inc
pushf
pop
adc
jp
jo
mov
(bad)
ins
add
xchg
ret
loope
adc
pop
js
sub
inc
es
xor
cmp
scas
(bad)
mov
cmp
cmp
mov
mov
dec
mov
mov
daa
rcl
dec
mov
cmp
and
retf
dec
jge
or
mov
jecxz
or
into
fbld
xchg
je
sbb
enter
jno
out
dec
stos
dec
mov
lods
jnp
jo
cmp
xchg
fistp
cmp
adc
test
dec
cli
jmp
fwait
pushf
(bad)
sub
aas
inc
pop
pop
ds
pop
jge
fisub
lods
push
or
xlat
pop
fstp
or
push
xchg
sahf
inc
mov
xlat
adc
jne
pop
mov
mov
bound
mov
and
xchg
aad
mov
sti
mov
ficom
jnp
cmc
(bad)
xor
ss
xchg
push
xor
pop
adc
dec
fisttp
imul
xor
in
mov
stc
stc
pop
xchg
add
je
(bad)
sub
out
pop
int3
leave
cmps
push
inc
sbb
int3
fldcw
(bad)
cmp
mov
std
push
fcomi
push
loopne
jge
neg
stos
aaa
out
mov
xchg
pop
stos
pop
inc
pop
push
(bad)
in
addr16
hlt
outs
or
mov
mov
jo
add
das
ja
mov
lahf
pop
call
xor
test
xor
pop
xor
test
rol
stos
neg
mov
cmp
add
sbb
mov
(bad)
cmp
stos
(bad)
ror
xchg
xor
pop
or
mov
add
push
dec
sbb
xchg
cwde
jno
repz
xchg
ret
push
jge
sti
daa
xor
or
add
mov
inc
sbb
ds
mov
ror
les
aad
add
mov
jno
(bad)
cmp
dec
out
adc
cmps
aaa
xor
(bad)
cmp
scas
stc
jle
cmps
sahf
jg
fwait
int
push
imul
cdq
jl
jns
pop
cli
cdq
add
dec
leave
fdiv
fdivp
in
jmp
jno
pop
mov
cmps
sub
aad
push
out
cmp
sbb
das
out
xor
(bad)
call
dec
out
xchg
dec
jl
mov
xchg
push
aam
pusha
enter
mov
repnz
sbb
or
inc
add
aaa
push
dec
jo
je
(bad)
jo
jbe
xchg
ss
dec
pop
jl
(bad)
fwait
push
or
adc
jns
inc
and
stc
lods
pop
xchg
cld
inc
jno
and
pop
mov
(bad)
loopne
sub
push
ds
stos
xchg
or
inc
xchg
sbb
xchg
pop
fsubrp
jecxz
cmp
loop
fs
cmps
ret
and
test
mov
jge
pop
arpl
movs
std
jmp
pop
xchg
jge
jp
es
hlt
or
call
shr
je
lock
inc
xchg
and
jecxz
lock
outs
ret
inc
mov
ret
jge
stos
pusha
in
(bad)
jmp
adc
mov
dec
scas
jmp
sbb
test
stos
mov
into
dec
mov
jmp
scas
push
jl
sub
inc
in
sar
jnp
inc
shr
test
test
test
inc
inc
add
add
mov
stos
imul
scas
shr
out
inc
cmp
adc
into
outs
lods
mov
lods
dec
mov
(bad)
je
fsub
jno
repnz
sbb
enter
or
xchg
dec
lds
jno
aad
pop
stc
inc
(bad)
ja
cmpxchg
cs
jmp
fdivr
je
dec
into
call
mov
pop
or
cld
in
dec
mov
mov
mov
clc
push
retf
stos
dec
fwait
fwait
cmp
std
push
cmp
cmps
mov
fld
mov
push
push
stos
sub
fxch
pusha
lds
mov
aad
sub
xchg
and
not
pop
cmps
add
xchg
cmps
out
ja
stos
and
xchg
mov
int3
ror
lock
sub
and
jmp
adc
jle
stc
jbe
test
mov
cpuid
arpl
mov
cmp
mov
xor
mov
ds
fwait
adc
cmp
adc
xor
jno
aad
adc
test
xlat
test
ins
ret
test
mov
jo
push
cwde
(bad)
cs
aam
jmp
jnp
xchg
movs
fs
push
jbe
and
inc
sbb
aam
or
mov
test
xchg
les
mov
loopne
out
daa
pop
out
imul
push
cmps
mov
pop
pop
xor
mov
inc
pushf
or
adc
adc
ins
out
xor
push
in
ficomp
leave
ja
test
inc
mov
add
test
sbb
sub
(bad)
fs
cmps
psubd
rcr
es
lock
in
push
sti
outs
jne
mov
hlt
ss
jb
mov
ficomp
les
sbb
or
jmp
ja
popa
sbb
mov
aam
xor
jmp
data16
int3
jb
inc
(bad)
cmp
sub
add
mov
outs
xor
jo
sbb
and
ja
fidiv
lahf
(bad)
sub
push
push
popa
inc
dec
lea
or
push
shl
jmp
sub
mov
mov
push
lock
rcr
push
xchg
jo
jmp
imul
cli
push
jno
cld
xchg
out
clc
pusha
icebp
mov
sub
sbb
lds
cmp
call
or
repz
sub
jle
retf
sub
add
adc
imul
iret
or
pop
jmp
sbb
dec
iret
mov
or
or
stos
in
mov
retf
push
test
inc
arpl
int3
jne
test
add
dec
ins
push
movs
jmp
ja
sbb
sbb
movs
hlt
jne
or
jbe
dec
push
pop
cmp
sbb
jmp
scas
in
fs
sbb
jge
aas
stc
es
xor
test
fidivr
jns
arpl
ins
and
inc
lods
mov
mov
inc
fbld
and
mov
ret
fldcw
sbb
loop
xor
les
sub
in
push
push
or
clc
jmp
jmp
cmp
popf
inc
pop
in
hlt
leave
ins
push
mov
xlat
out
push
push
dec
cmp
enter
(bad)
or
dec
ret
ror
mov
jl
test
pop
repz
push
jle
stc
es
in
lock
jno
rcl
adc
div
out
std
jle
pop
mov
or
adc
dec
mov
gs
jg
push
aas
in
and
sar
add
mov
xchg
jno
cmps
into
out
addr16
xor
jno
sbb
les
retf
push
daa
mov
movs
dec
test
push
loope
aam
pop
sbb
inc
ret
test
clc
dec
push
adc
lea
inc
inc
mov
adc
cmp
cwde
sbb
push
mov
ret
mov
sbb
lods
jecxz
rol
mov
sbb
sbb
movs
dec
dec
in
cs
(bad)
push
fnstenv
dec
and
jae
scas
daa
pop
xlat
push
sub
outs
sbb
mov
int
movs
xor
mov
das
test
dec
mov
aaa
ret
jecxz
adc
pushf
clc
jmp
sub
(bad)
icebp
sbb
sti
dec
sub
sbb
movs
popa
jo
mov
aas
shl
mov
cmp
js
jmp
or
dec
imul
inc
sub
pop
ffree
outs
test
push
add
xchg
add
loop
inc
adc
(bad)
and
leave
loop
mov
or
xchg
xchg
mov
sub
sub
xchg
loop
fnstsw
loope
sti
dec
sub
cmp
mov
hlt
in
adc
(bad)
mov
stos
nop
or
jne
fldenv
mov
repnz
add
stos
add
nop
jmp
xchg
(bad)
fidiv
inc
adc
jns
aam
pop
add
cmps
sbb
cmp
jnp
fs
cdq
test
sub
mov
test
imul
(bad)
lea
mov
pop
cld
jno
arpl
jl
cld
sbb
xor
jle
das
push
leave
es
out
sub
or
fld
add
adc
stos
inc
push
inc
(bad)
(bad)
(bad)
cmc
cmp
mov
jp
aas
sti
xor
pushf
mov
ja
outs
sub
(bad)
xchg
inc
inc
rol
sub
fld
sub
mov
in
and
cwde
pop
push
sar
xor
jge
and
pushf
scas
in
in
dec
jmp
mov
jg
add
neg
stc
iret
aas
xor
addr16
int3
test
jl
inc
lds
loope
mov
retf
mov
es
ja
pushf
shl
loope
stos
jecxz
mov
iret
xchg
xor
pop
add
test
test
bound
mov
pop
lahf
aad
sahf
adc
xchg
aas
scas
push
xor
fst
and
addr16
push
add
mov
loope
pop
lds
popa
inc
addr16
or
or
mov
or
and
push
push
push
push
mov
test
ss
test
xor
cmp
call
add
push
sub
int3
loope
or
fwait
jae
xchg
std
cwde
and
mov
pop
cmp
add
cmp
and
ins
inc
jo
pop
mov
in
arpl
add
push
jmp
push
cli
sbb
push
dec
mov
cmc
sbb
sub
jno
lds
jmp
(bad)
imul
ss
or
cld
outs
daa
fist
fld
(bad)
(bad)
fcmovnb
cmp
add
imul
daa
test
(bad)
call
nop
rol
cmc
dec
and
adc
repnz
test
fwait
mov
cmp
ror
out
mov
pop
fwait
jno
inc
rep
mov
xor
popf
mov
(bad)
into
cmp
xchg
jbe
ja
in
fsub
inc
dec
sbb
iret
retf
sbb
inc
inc
add
pop
xchg
push
cmp
jp
push
xor
repz
push
cmp
call
cmp
pop
mov
jne
lds
out
push
jmp
mov
jno
jbe
aas
xchg
xchg
sub
sub
call
ret
cmp
lods
xlat
das
push
stc
aaa
adc
neg
movs
outs
xor
push
clc
or
and
push
fld
mov
stos
xchg
add
dec
pop
loopne
sub
push
stos
ret
je
ins
mov
mov
fld
cmp
movs
or
test
add
and
push
sub
xor
or
mov
sub
in
imul
fistp
inc
sbb
movs
xchg
and
mov
jge
push
dec
push
adc
and
jecxz
jle
sbb
inc
ss
xchg
shl
adc
jmp
leave
std
test
pop
push
movs
arpl
xchg
add
sbb
inc
loop
mov
mov
sbb
push
or
pop
or
jle
mov
cmp
cwde
ds
in
movs
inc
or
xor
sub
mov
mov
in
adc
dec
into
mov
test
stc
xchg
cmp
xor
iret
mov
pop
sub
xor
inc
cmps
jo
or
xchg
mov
mov
xor
or
imul
add
mov
xor
mov
cli
pop
fmul
fisubr
push
adc
les
xchg
pop
inc
lods
int
cmp
ins
data16
or
mov
ror
and
in
mov
or
mov
jmp
in
xchg
inc
imul
push
fnstcw
sbb
loopne
adc
call
dec
rcl
sbb
inc
and
or
sahf
add
lods
sahf
(bad)
fild
rcr
cmp
adc
bound
daa
mov
fisub
or
sbb
mov
jmp
rcr
sub
jne
js
loopne
sbb
mov
adc
std
scas
dec
xor
sbb
adc
jle
pop
push
push
push
xchg
(bad)
icebp
scas
inc
xor
fwait
mov
dec
(bad)
jns
xor
cmp
adc
mov
dec
popa
sub
inc
arpl
rcr
xor
and
repz
pop
pop
das
xor
scas
sbb
ins
mov
stc
jmp
dec
adc
inc
jnp
jne
out
sub
inc
in
addr16
in
test
loope
mov
dec
inc
icebp
xchg
mov
lds
xchg
jnp
fsub
ror
(bad)
xor
or
push
xor
and
icebp
sti
sub
inc
push
jp
add
jmp
mov
mov
(bad)
mov
fild
jg
mov
mov
retf
push
lock
fs
sahf
xchg
and
(bad)
(bad)
add
fs
or
sbb
retf
pop
ret
mov
bound
push
mov
and
pop
out
ins
sar
inc
push
daa
jns
add
mov
cmovg
mov
loop
sub
and
sub
xchg
inc
adc
(bad)
mov
lea
pop
add
fild
popf
retf
fwait
icebp
xor
jbe
imul
fldenv
fidivr
mov
jnp
push
enter
xchg
lods
jle
push
data16
pop
xchg
iret
jg
test
in
push
pop
adc
sub
pop
cdq
fild
add
jmp
call
stc
cmps
fs
ret
mov
ins
push
add
mov
jnp
shr
mov
and
cmp
cmp
push
and
push
mov
xchg
and
xchg
and
or
jge
add
into
out
pop
aad
adc
xchg
test
adc
push
stos
mov
mov
or
xchg
dec
daa
mov
addr16
(bad)
nop
xchg
pop
dec
hlt
push
mov
pop
and
idiv
popa
add
jb
cmp
loop
push
xchg
add
jg
mov
ret
sbb
or
jmp
xor
mov
push
imul
push
jmp
out
cmp
mov
mov
arpl
jns
jno
jne
sti
mov
or
in
and
daa
clc
push
and
sahf
push
mov
stos
cmps
scas
ror
test
sbb
adc
mov
arpl
xchg
out
pushf
fs
(bad)
cdq
mov
pushf
aad
adc
mov
adc
popf
pop
and
iret
jo
sub
das
inc
test
pop
aam
fsubr
adc
ds
ret
push
movs
lods
in
cmp
cmps
sahf
dec
jge
jmp
xor
dec
sti
mov
xchg
adc
rol
push
ins
inc
and
rcr
or
dec
dec
xchg
push
push
movs
ins
sbb
popf
mov
loopne
lods
add
sub
vpcmpeqd
xchg
jl
popf
push
xor
fidivr
nop
pop
adc
adc
test
fs
loope
je
shr
and
out
rol
rcr
aad
cmp
(bad)
int3
scas
xor
xchg
adc
cdq
dec
cs
popf
pop
into
outs
xor
xor
mov
imul
jecxz
(bad)
ds
out
sahf
stos
popa
pop
out
xor
inc
(bad)
not
sub
addr16
dec
mov
push
rcr
inc
ins
cmp
mov
test
cmps
in
pop
sti
jb
shl
mov
or
ds
ja
gs
jp
nop
push
dec
mov
or
jp
mov
add
push
sbb
lahf
inc
push
fmul
cmps
inc
push
pusha
xchg
push
ds
and
cdq
mov
sar
push
push
adc
sbb
pusha
cmp
fs
ins
pop
outs
sti
mov
jg
xchg
mov
sbb
mov
je
shl
icebp
push
sbb
xor
stos
xchg
outs
aam
out
(bad)
bound
and
imul
mov
jg
js
sbb
cmp
repz
std
xchg
es
jmp
sbb
dec
and
enter
mov
pop
lods
mov
add
mov
dec
js
scas
sub
movs
(bad)
scas
push
cmp
dec
test
xor
rcr
outs
dec
sub
push
and
outs
popf
test
bound
jle
call
inc
pop
out
adc
pop
int
pop
call
sbb
das
outs
idiv
fistp
mov
push
xchg
mov
inc
scas
push
aas
and
std
sub
nop
fucomip
dec
aad
jo
adc
push
sub
jmp
mov
jg
xchg
jo
int
push
js
or
inc
cmp
les
in
jle
sahf
inc
aad
in
hlt
xchg
retf
jmp
dec
xor
out
adc
dec
mov
bt
int3
jl
ret
cmp
sub
cli
adc
retf
jle
or
pop
dec
neg
cmp
sbb
mov
mov
mov
mov
mov
daa
dec
inc
mov
imul
push
pop
mov
scas
cmp
xchg
xchg
push
or
ret
clc
jmp
sar
cdq
clc
push
dec
sub
mov
jbe
or
test
pushf
aam
int
mov
xor
add
sbb
mov
lock
nop
mov
push
out
mov
loopne
inc
stc
pop
enter
(bad)
xchg
push
or
outs
or
shr
icebp
test
xlat
movs
adc
mov
enter
mov
fs
test
cmc
fisub
inc
sahf
stos
shl
clc
aas
mov
mov
dec
sub
push
out
mov
pop
dec
sbb
pop
shl
mov
shl
cmps
inc
mov
sub
mov
fstp
out
nop
jmp
push
and
adc
nop
push
sub
jmp
mov
fs
xlat
imul
xchg
hlt
and
inc
push
mov
jae
pop
loopne
stc
mov
sahf
push
xchg
jnp
enter
pop
adc
addr16
in
sbb
and
cdq
mov
and
movs
sbb
test
adc
cli
adc
inc
pop
out
xor
enter
inc
sub
cwde
push
pop
mov
cmp
sbb
and
enter
xchg
jne
adc
or
push
repz
in
dec
mov
int
and
xor
fcomp
lahf
rcr
xlat
sbb
mov
pushf
(bad)
cdq
std
pop
mov
(bad)
fimul
or
push
pop
imul
mov
dec
outs
hlt
aad
dec
add
adc
cmp
xlat
test
pop
sbb
add
push
js
xor
pushf
xchg
movs
test
test
punpckhdq
jmp
int3
lea
push
mov
pop
fistp
div
push
test
jbe
outs
in
ret
sub
stos
and
je
push
jae
adc
pushf
mov
mov
mov
push
mov
mov
out
gs
jge
(bad)
ja
cld
jle
add
adc
or
sar
retf
inc
sub
cld
test
mov
xor
inc
or
test
jle
shr
adc
ds
dec
add
cdq
cli
cmps
dec
adc
ss
xchg
cmp
xchg
repnz
jb
sbb
arpl
mov
movs
xchg
scas
and
or
arpl
or
je
rcr
jb
pusha
and
(bad)
sub
mov
pop
fsub
ins
call
fild
aaa
lds
cmp
bound
rcl
ret
ret
and
out
fwait
push
and
inc
mov
int3
ror
xor
jbe
cdq
les
mov
gs
(bad)
pop
test
addr16
daa
mov
(bad)
pop
retf
xor
out
sbb
dec
pop
into
jge
and
loop
lock
fwait
push
bnd
(bad)
lock
add
add
or
ja
and
xchg
test
mov
and
dec
call
dec
and
mov
fcomip
jle
sysret
es
inc
dec
(bad)
fsin
cmp
pop
loopne
out
sub
loopne
repz
lock
mov
cdq
jnp
push
fdivp
sbb
mov
shl
int3
imul
rcl
gs
loope
and
mov
repnz
cmps
lods
cmc
xor
add
jb
jns
xor
mov
cli
push
test
stos
sub
mov
scas
inc
scas
adc
scas
aas
inc
mov
es
aam
std
mov
in
clc
pushf
inc
xlat
imul
es
jmp
jl
xor
jmp
or
cmp
mov
mov
and
dec
aas
jb
dec
jns
cmp
aaa
dec
dec
movs
scas
shl
daa
nop
push
nop
xor
das
inc
cmp
mov
test
sub
ins
inc
movs
jecxz
inc
sahf
out
in
shl
movs
popa
or
sub
jge
iret
sub
and
dec
mov
in
stc
loopne
scas
gs
mov
mov
xor
sbb
mov
cmp
xchg
out
loopne
int
push
xchg
xchg
cmc
(bad)
neg
jg
popa
xchg
ds
scas
cwde
jno
cmp
dec
fdiv
addr16
(bad)
stc
les
xchg
leave
stos
jmp
jmp
data16
fadd
rcr
mov
mov
pop
cmp
push
pop
iret
jmp
icebp
xchg
and
push
into
cmp
xor
xchg
das
jl
mov
aam
mov
pop
sti
ds
jecxz
outs
sbb
retf
xchg
adc
bound
mov
arpl
push
or
dec
retf
les
lock
dec
mov
dec
mov
fxch
xor
push
xor
mov
stc
dec
cmps
or
aam
sub
sti
sub
(bad)
jmp
add
enter
fimul
dec
xchg
push
ror
dec
dec
call
in
ds
xor
push
popf
rcl
push
addr16
cwde
dec
mov
sahf
es
int3
mov
and
dec
popf
jge
out
xchg
imul
pop
or
sbb
add
ja
cmp
aas
or
lahf
retf
popa
test
daa
adc
cmp
cdq
fs
push
jg
mov
fild
sub
jb
inc
ins
out
scas
pop
mov
cmps
sbb
call
aaa
pop
or
and
jmp
(bad)
push
or
mov
call
les
sti
out
mov
jbe
sbb
dec
cmps
add
inc
cmp
ins
in
aad
imul
sub
cmp
pop
mov
add
icebp
jg
mov
int
push
adc
inc
mov
pop
adc
or
out
bound
xor
aaa
push
cmp
setbe
pop
iret
js
jle
imul
add
call
mov
push
fdiv
hlt
dec
cmp
pop
fdivr
outs
pusha
in
div
push
sbb
add
jbe
pop
sub
scas
mov
xor
pusha
sub
adc
into
rcl
push
aam
jb
es
mov
and
cmp
xor
add
mov
cli
test
xor
inc
lds
(bad)
in
je
enter
das
inc
push
cwde
pushf
sub
imul
mov
mov
and
dec
dec
mov
(bad)
push
inc
into
jl
call
in
movs
mov
pop
imul
xlat
and
cld
xor
ds
cmp
pop
imul
cwde
int
fistp
mov
cmp
test
lea
push
add
xor
push
mov
mov
pop
cli
jo
cmp
mov
int3
cmovl
in
popf
fstp
inc
pop
sub
mov
sub
jmp
sti
add
xchg
int3
sub
test
iret
dec
sbb
inc
pusha
sbb
inc
enter
and
xor
(bad)
jbe
loopne
and
xor
(bad)
(bad)
pop
repnz
cmp
es
outs
inc
push
mov
inc
cdq
sub
(bad)
mov
dec
jecxz
pop
data16
mul
push
jnp
bound
mov
out
sub
xor
or
xchg
jecxz
pushf
jno
mov
ret
and
inc
xor
dec
cmp
shr
test
aaa
xchg
or
dec
mov
out
in
adc
inc
pop
hlt
push
mov
pop
cmp
xchg
dec
dec
push
push
cmps
scas
outs
loopne
push
inc
adc
or
inc
inc
xchg
jnp
cmps
xor
sbb
adc
shl
pop
das
or
sub
adc
xchg
jecxz
jp
sar
mov
jbe
push
sub
scas
loop
xchg
les
test
dec
call
push
xchg
mov
or
out
xchg
mov
cmp
xchg
rcr
inc
jbe
xor
ins
js
cmp
jae
fcmovnb
lods
mov
es
add
xchg
or
push
mov
dec
adc
mov
add
cmp
mov
fs
outs
outs
sbb
cwde
sar
pop
lock
aaa
xor
repz
leave
mov
pop
pop
adc
push
dec
cmc
or
jb
mov
outs
popf
mov
inc
mov
arpl
and
mov
push
aas
jbe
cld
aas
ins
daa
int3
sub
ins
adc
dec
adc
inc
les
xchg
and
jecxz
jge
xor
inc
pop
stc
mul
dec
fwait
xlat
sqrtps
movs
out
mov
cmp
push
movs
mov
push
xor
les
xchg
dec
in
xchg
imul
fiadd
dec
adc
(bad)
and
test
pop
cmps
lds
xchg
pop
in
stc
test
cmps
pop
pop
sub
lds
add
and
aas
add
sub
movs
sub
sahf
lahf
xor
mov
and
pop
mov
ds
cld
sbb
mov
push
scas
repz
addr16
rcl
(bad)
fist
aaa
sub
sub
es
lahf
in
mov
ja
jne
xor
loop
push
cdq
in
daa
stos
fidiv
sti
daa
xchg
loopne
xchg
and
and
cwde
pusha
push
inc
or
jb
sbb
xor
scas
aas
cli
(bad)
push
cmp
xchg
mov
pop
fnstenv
loop
ficom
mov
daa
in
jg
mov
sbb
sbb
lea
or
cmp
std
cld
fisttp
rcl
imul
add
loopne
sub
sti
jne
cmp
xor
out
mov
mov
mov
sbb
mov
lea
stc
retf
xchg
cli
and
mov
(bad)
xchg
xchg
out
jg
fsubr
adc
hlt
lahf
push
mov
jno
sub
and
push
inc
mov
jns
mov
cmp
inc
(bad)
call
jl
mov
cmps
xchg
xchg
mov
dec
aam
adc
mov
sbb
mov
jno
jmp
pop
es
(bad)
jmp
fistp
push
and
add
mov
cs
or
inc
cmp
fwait
pop
mov
pop
sar
mov
fcomp
scas
inc
mov
cmps
js
mov
out
sbb
mov
lahf
jg
shl
cmp
test
in
stos
adc
mov
fiadd
push
dec
pop
mov
ds
push
mov
cmps
hlt
aam
aad
movs
jp
mov
or
jp
ret
ja
or
dec
and
push
xlat
les
inc
shr
cmp
out
jae
add
mov
cmps
mov
(bad)
xor
mov
jb
pop
jbe
mov
mov
sub
push
xchg
ror
push
test
call
js
inc
out
ins
sbb
add
xchg
pop
cmc
mov
mov
cmps
xchg
push
mov
fcomi
and
ss
repz
push
sti
fisttp
movs
popf
pop
leave
xchg
sub
xor
cdq
outs
pop
loopne
lea
int3
inc
cmp
nop
xor
dec
shl
mov
outs
xchg
pop
or
sub
mov
push
mov
push
repz
out
inc
mov
jle
xor
fiadd
mov
popf
mul
jno
shr
mov
or
mov
jle
movs
ret
(bad)
out
mov
es
in
mov
adc
push
fsubp
mov
jp
push
aam
dec
pop
jbe
mov
xchg
lods
ror
cmp
push
sahf
adc
mul
pop
lds
lods
stc
or
push
mov
scas
mov
and
mov
in
pop
inc
icebp
icebp
clc
push
mov
jb
stos
call
movs
ja
adc
sub
mov
fstp
adc
in
idiv
call
push
stos
cwde
(bad)
and
or
and
xchg
int
ja
add
imul
clc
div
mov
pop
shr
add
add
fidivr
add
(bad)
cmps
mov
pop
test
iret
mov
inc
or
cwde
dec
sub
loope
aad
(bad)
pop
inc
mov
push
lods
mov
mov
cmps
loop
(bad)
inc
ja
jne
arpl
pop
out
lea
push
jae
xor
and
test
lea
cli
and
add
cs
cld
jle
xchg
ret
jp
bound
jp
xchg
(bad)
int3
movs
scas
fiadd
xchg
push
rcl
sub
adc
dec
cmp
mov
or
into
stc
push
mov
sbb
mov
(bad)
arpl
add
cdq
add
dec
pop
imul
xchg
adc
leave
(bad)
mov
add
or
mov
push
sbb
push
mov
inc
jmp
aam
xchg
add
pusha
mov
iret
fsubr
and
cmp
sti
cmp
pop
(bad)
push
sub
mov
loopne
nop
adc
out
test
or
cmps
xor
sbb
psllw
xchg
inc
jle
dec
xor
jbe
sahf
fsubr
push
mov
cmp
adc
aam
(bad)
cdq
dec
mov
xlat
jecxz
sbb
pop
mov
xor
cwde
xlat
fs
xchg
xchg
(bad)
rol
sahf
retf
mov
mul
jl
std
out
and
pop
or
sub
ds
in
xor
cmp
aad
je
xchg
jge
xlat
xchg
outs
pop
fldenv
(bad)
fsubr
icebp
add
jecxz
mov
out
pop
dec
xchg
pop
mov
icebp
fdivr
leave
sbb
cmp
les
loope
xor
mov
inc
push
pop
ins
add
or
push
push
fnstsw
and
mov
loopne
mov
dec
stos
aam
jo
mov
js
adc
(bad)
jmp
inc
cmp
xchg
loope
arpl
sub
cmp
test
sti
(bad)
xchg
in
cmps
mov
stos
ffree
(bad)
xchg
mov
pop
push
inc
sub
idiv
adc
mov
ret
xor
je
mov
test
hlt
shl
or
jae
aaa
sahf
adc
jl
inc
add
xor
shr
xor
mul
ret
sbb
mov
xor
retf
das
mov
push
es
lods
(bad)
xor
mov
not
sub
jmp
js
(bad)
mov
pop
jp
pop
in
les
mov
mov
fidivr
addr16
loopne
xor
(bad)
push
arpl
loop
les
and
mov
call
int
pop
cmp
xchg
movs
(bad)
cli
ins
and
out
dec
mov
mov
push
cdq
cs
test
pop
and
popf
repnz
pop
adc
es
in
dec
jle
jbe
mov
or
fcomip
cmps
inc
enter
pop
jb
inc
mov
mov
cmc
and
pop
(bad)
sar
cmps
hlt
jb
push
mov
ret
vcvtpd2dq
outs
push
call
cmp
imul
(bad)
jge
shl
push
imul
push
fs
or
(bad)
pop
inc
aas
and
test
pop
fdivr
dec
push
dec
inc
in
jge
xor
ss
pop
aas
(bad)
icebp
int3
lahf
lea
and
inc
sub
inc
psllw
dec
test
or
xchg
stos
push
call
jg
in
scas
dec
leave
sti
popa
and
push
lahf
mov
fbld
movs
nop
xchg
popa
jo
outs
push
add
push
fcom
sbb
aam
xchg
jne
cmc
sub
out
enter
aaa
cld
fldcw
dec
dec
lock
test
mov
mov
sbb
ror
out
push
fmul
cmp
iret
pop
pop
add
pushf
cld
cmp
sar
scas
or
sub
or
mov
mov
jg
sar
add
sub
mov
mov
aam
fwait
retf
mov
arpl
int
out
pusha
sub
dec
inc
xchg
ret
pusha
inc
in
adc
jmp
lds
icebp
int
mov
push
shl
fdivr
in
fcomp
sbb
or
xor
stos
inc
xchg
cmp
adc
mov
add
lea
xchg
(bad)
call
call
inc
sub
pop
in
ins
pop
inc
xchg
stos
jge
enter
repnz
imul
or
mov
lods
fdivr
(bad)
pop
jnp
into
dec
lock
ret
imul
push
(bad)
clc
adc
sbb
daa
mov
cmp
push
aad
xor
loope
jle
inc
inc
div
cmp
int
cmps
xchg
push
mov
jp
jmp
sbb
out
lods
and
pop
cmp
fsub
aaa
sar
test
pop
test
xchg
jmp
adc
sbb
mov
dec
gs
lahf
pop
mov
inc
dec
cmp
loope
push
xor
ja
xor
cmp
aas
outs
scas
push
xor
mov
bound
mov
stos
es
mov
push
inc
and
fld
mov
inc
cmp
sbb
jecxz
fsubr
xchg
cli
pop
test
sti
xor
or
jns
ja
or
(bad)
movs
pop
pop
fsubr
cld
ins
mov
aas
cwde
mov
daa
jg
mov
mov
cmp
jg
test
adc
shl
test
mov
pop
in
sub
fdivr
or
rcl
ins
test
js
dec
mov
mov
stos
hlt
hlt
call
out
mov
addr16
sub
not
shr
xchg
loope
dec
shl
(bad)
xor
sbb
cmp
add
push
aam
add
mov
pop
or
cdq
call
xchg
enter
cmps
fs
mov
int
pop
mov
out
enter
test
push
fisubr
inc
aam
cmp
cld
icebp
inc
out
fcom
push
push
adc
cmp
xor
xchg
psrlw
fwait
repnz
mov
adc
dec
ret
jg
in
mov
cmps
jo
or
aas
push
xchg
aaa
ds
mov
jae
sub
mov
inc
mov
iret
test
hlt
push
daa
lds
cmp
inc
add
dec
and
ror
mov
int
sbb
cwde
enter
mov
jno
pusha
push
dec
sbb
leave
stos
(bad)
xchg
icebp
xor
xchg
push
js
cmp
or
out
sub
lahf
adc
xchg
mov
jns
cmc
mov
aam
cmp
adc
ds
pop
sahf
jae
sub
js
jmp
cmp
sar
mov
fmul
jo
ds
retf
out
pop
jp
ret
test
movs
mov
sbb
and
jb
aas
inc
popf
mov
dec
imul
and
fidiv
sbb
push
cli
sbb
fisub
cmp
inc
popf
inc
fld
neg
cmps
mov
in
add
mov
pusha
xchg
stos
pop
adc
jno
popa
dec
dec
jp
mov
xchg
ins
(bad)
clc
jb
jo
pop
adc
dec
xchg
out
sbb
fild
xor
scas
cld
or
les
jo
adc
push
sub
popf
hlt
in
daa
bound
mov
or
aaa
es
fcomp
add
xor
(bad)
dec
test
jle
push
aam
into
cmp
jmp
xor
sub
pop
mov
popa
pop
fsub
test
setns
ret
retf
add
or
lds
mov
out
pop
fistp
ss
test
gs
xor
adc
ins
retf
popf
icebp
mov
xor
mov
stos
sbb
nop
aam
jge
adc
dec
out
xor
pop
jno
test
arpl
aas
push
gs
inc
mov
fs
mov
sbb
pop
mov
xor
xchg
inc
jns
jbe
or
cmps
imul
mov
jne
imul
lods
mov
mov
push
into
mov
retf
dec
(bad)
adc
in
fisttp
inc
or
fmul
neg
xlat
into
outs
xchg
scas
aad
or
pop
fsubr
popa
ja
enter
pop
mov
jb
mov
xor
sub
jnp
pop
and
bound
loopne
jmp
scas
out
or
lods
fldcw
xchg
xchg
xchg
cmp
cmp
hlt
aad
(bad)
or
(bad)
cmp
stc
cmp
pop
mov
or
add
mov
pop
pop
mov
add
add
loope
sbb
xor
repnz
mov
push
arpl
sbb
ins
xor
adc
iret
sbb
mov
std
int
pop
mov
imul
outs
xchg
repz
pop
into
out
gs
push
out
or
cmp
xchg
out
inc
jb
mov
mov
jae
cmc
mov
jmp
inc
ja
pushf
test
cld
sbb
jb
js
aas
cs
and
jp
sahf
jmp
add
mov
rcl
or
add
leave
mov
push
cs
push
ins
push
cs
inc
cmp
lahf
mov
adc
pop
push
lods
xchg
sbb
mov
mov
xor
scas
jecxz
mov
test
or
repz
fcomi
lods
jae
add
inc
mov
mov
sub
xchg
shl
push
je
call
rcr
mov
mov
lods
jl
jmp
jb
mov
dec
imul
aaa
xchg
push
pushf
nop
pop
fistp
ds
xchg
and
popf
lods
and
scas
lods
in
jnp
and
inc
stc
sti
and
and
(bad)
cwde
call
movs
(bad)
and
dec
push
jecxz
pop
imul
std
pop
push
pop
pop
mov
jo
mov
lahf
fdivr
fadd
ror
cmps
xchg
in
sub
mov
mov
or
(bad)
outs
or
call
adc
cmp
cmp
rcr
or
and
ja
pop
xor
mov
jns
mov
adc
xchg
clc
ficomp
cmp
adc
movs
mov
out
mov
adc
stos
jg
pop
in
xor
popf
int
and
or
jp
xchg
ror
push
stc
ror
dec
mov
jae
cmp
sbb
mov
lods
push
jae
add
xor
xchg
cmps
lods
xlat
jp
icebp
sbb
adc
cmp
ja
inc
int
mov
aaa
fwait
mov
cld
xchg
adc
into
out
pop
das
jns
inc
js
out
cmp
mov
sbb
pop
mov
ficomp
inc
popaw
mov
pop
je
fadd
out
jmp
inc
jae
(bad)
mul
std
hlt
xor
cdq
push
stos
push
jae
dec
xor
jb
out
push
dec
lds
(bad)
outs
scas
data16
std
mov
pop
in
je
jg
mov
loopne
xor
fmul
xchg
lods
sub
addr16
sbb
ins
or
aas
lods
or
jnp
sti
add
ret
(bad)
push
pop
sbb
mov
xchg
stc
xchg
popf
add
mov
adc
popa
frstor
(bad)
(bad)
cwde
mov
lods
and
cmp
cmp
sti
cmp
int3
lods
sbb
popf
fs
pop
push
sahf
mov
pop
sbb
mov
aas
mov
scas
and
(bad)
jns
sahf
cmp
pop
mov
div
push
mov
pop
fidiv
ficom
loopne
ins
shl
aas
pushf
add
pop
rol
push
loop
fmul
sahf
stos
movs
pop
sub
mov
test
nop
pop
xrelease
add
mov
jbe
loopne
adc
and
sti
aad
popf
(bad)
movs
inc
cmp
inc
fisub
lods
lds
pop
mov
or
daa
repz
popa
mov
out
pop
mov
mov
das
(bad)
rcl
sbb
aam
or
push
jl
xor
leave
sub
ret
sub
fadd
sbb
adc
xchg
jg
pop
imul
shl
xor
add
aam
mov
xchg
cs
mov
into
fwait
push
dec
daa
rcr
shufps
xor
pop
ja
push
mov
push
pop
sub
stos
cdq
mov
cwde
push
jge
sub
shl
rcr
dec
mov
popa
mov
js
bound
pop
and
out
outs
rcr
jnp
in
sbb
jno
lods
cmc
arpl
(bad)
xor
jle
xor
repz
xchg
repnz
inc
aad
lahf
aam
xor
ss
mov
jnp
or
or
push
sub
mov
push
adc
les
data16
repz
cmc
out
aaa
pop
xchg
jge
push
xchg
pop
jnp
iret
mov
add
jno
mov
xlat
mov
aaa
inc
dec
pop
aas
mov
stos
ret
pop
mov
popa
dec
push
fistp
popf
test
imul
mov
inc
pop
and
dec
or
adc
shl
push
and
cs
jg
(bad)
mov
inc
fs
(bad)
ins
jge
shl
out
aaa
sub
sbb
scas
jmp
(bad)
pusha
jle
push
pop
jno
mov
jb
mov
push
mov
enter
jo
arpl
dec
adc
in
out
push
inc
sub
test
xchg
mov
dec
and
inc
sub
jecxz
dec
cmps
into
or
pop
data16
inc
cs
push
dec
mov
fsubr
push
das
outs
jle
pop
stc
lea
mov
and
pop
mov
dec
mov
daa
imul
push
push
clc
lahf
mov
pop
mov
ja
jne
lock
lds
mov
jnp
(bad)
das
pop
sar
ins
push
xor
mov
xchg
push
inc
in
xor
fisubr
or
cmp
fimul
out
xchg
test
retf
xor
mov
rcr
popf
in
cdq
xor
add
mov
sbb
shr
mov
sbb
call
and
cmp
out
repnz
dec
cmp
fisttp
ss
jle
pushf
stos
xor
xor
rcl
std
xchg
inc
push
sbb
xor
mov
mov
push
adc
mov
test
imul
sbb
jmp
jp
and
xor
mov
xchg
jnp
sub
inc
push
rcl
xchg
addr16
xor
mov
and
sahf
into
popf
test
dec
enter
mov
cmp
inc
mov
mov
xor
call
setae
sbb
mov
es
inc
add
push
mov
and
jp
xor
dec
dec
rcr
fadd
retf
shl
inc
xchg
in
and
loope
add
xchg
enter
dec
adc
xchg
xchg
shl
clc
and
(bad)
cmp
mov
and
and
mov
es
cld
and
pop
add
lds
sub
fs
scas
inc
sub
cdq
or
pop
pop
rcl
mov
arpl
test
daa
mov
sub
sti
sar
repz
push
jae
das
enter
mov
clc
imul
or
(bad)
mov
xchg
(bad)
fldenv
sbb
call
jmp
sub
push
je
pop
push
pop
sti
mov
cmp
int3
mov
add
mov
stc
ret
sahf
push
pop
sbb
loope
sub
mov
je
fld
adc
dec
(bad)
aad
and
rcr
push
shr
out
aam
or
dec
mul
test
(bad)
hlt
jmp
hlt
aad
mov
cld
or
mov
sbb
rol
rcl
test
push
retf
fs
ret
push
out
inc
pop
pop
(bad)
mov
adc
sub
test
test
das
sub
pusha
mov
or
leave
stc
mov
adc
in
cmp
test
nop
movs
idiv
cmp
call
lock
idiv
inc
shr
les
pop
xor
adc
mov
mov
sub
inc
hlt
lahf
pop
mov
fsub
push
push
(bad)
loop
pop
or
stos
fs
pop
xchg
push
stos
popa
or
mov
sbb
outs
mov
inc
sar
ins
lea
les
inc
mov
push
adc
enter
xlat
lea
movs
lock
push
mov
imul
adc
test
inc
inc
add
ss
and
imul
jle
int3
sub
xchg
jmp
inc
adc
lahf
jnp
jne
test
jl
into
scas
or
movs
in
sub
adc
ss
or
cmps
stos
pop
mov
fnstcw
mov
xchg
xor
das
adc
or
stos
xor
setns
gs
jns
push
int
xchg
push
mov
push
int3
adc
xor
xchg
sub
ds
mov
jmp
rol
add
jg
fnstcw
mov
test
adc
sub
and
repz
mov
and
daa
cmp
popa
ins
and
mov
mov
pop
retf
daa
fst
ret
ja
iret
xor
(bad)
addr16
retf
adc
pushf
adc
into
mov
test
lods
add
cmc
mov
add
cmp
add
cmps
push
cld
repnz
popf
lds
test
ds
ss
and
popf
mov
pop
loope
pop
je
inc
mov
hlt
and
jnp
push
push
dec
dec
cdq
add
cmp
fidivr
pop
arpl
call
xchg
inc
jns
push
inc
dec
add
or
mov
and
leave
cmp
cmp
pop
xor
dec
xchg
xchg
pop
xor
push
xor
xor
lods
lea
fsub
and
mov
shl
popf
scas
dec
out
sub
cs
jne
out
xchg
scas
mov
adc
or
jmp
or
xor
add
xchg
pusha
jmp
int3
rcl
test
dec
mov
ret
or
mov
mov
shl
jg
adc
cld
dec
retf
push
xchg
inc
inc
xchg
out
sub
cmp
mov
pop
xchg
add
mov
sbb
lds
addr16
dec
out
adc
into
xor
mov
sahf
lds
mov
iret
loop
jge
test
shl
and
imul
or
xchg
sbb
arpl
scas
mov
sar
and
int3
jge
mov
adc
cmp
cdq
cdq
sbb
mov
sub
int3
xchg
mov
mov
and
jg
es
ds
fisub
xchg
(bad)
mov
sar
or
call
shr
pop
dec
jbe
loopne
call
jne
iret
rcl
sub
mov
jns
cmps
icebp
fadd
stc
(bad)
add
pop
push
in
push
sub
mov
out
push
mov
jp
call
xor
adc
add
in
loop
(bad)
xchg
and
sbb
sbb
in
xor
arpl
push
add
xchg
mov
iret
(bad)
stos
loop
dec
(bad)
mov
nop
xchg
jecxz
test
mov
and
or
das
loopne
inc
push
xor
xor
lock
dec
ins
jae
aam
xor
pop
mov
push
push
jmp
popf
mov
push
mov
mov
jnp
sub
(bad)
ror
mov
add
inc
pop
push
xchg
dec
stos
dec
ja
hlt
daa
jo
pop
addr16
test
into
sub
test
ss
cmp
iret
push
xchg
fidiv
ret
inc
xor
sbb
ds
(bad)
cmp
scas
kaddb
sbb
or
cld
out
leave
push
sub
dec
push
sbb
sar
(bad)
pop
(bad)
xor
dec
in
aaa
inc
inc
clc
idiv
dec
loop
rcl
cmp
xchg
int
and
cmps
mov
(bad)
push
jmp
and
cwde
arpl
outs
out
imul
push
fscale
sbb
cs
pop
mov
out
pushf
jecxz
fs
leave
jae
xor
dec
test
lds
xchg
lock
cld
dec
push
or
mov
data16
ffreep
dec
pop
cmc
pop
and
pop
mov
push
outs
adc
loopne
dec
out
inc
pop
inc
sbb
scas
lds
mov
mov
ret
ja
sub
mov
mov
retf
scas
and
iret
mov
ret
jo
push
adc
xor
xchg
dec
xor
cdq
cmps
data16
es
rol
stos
inc
loopne
jae
fwait
xchg
dec
in
adc
retf
loopne
ret
(bad)
test
sbb
jo
cmp
mov
loope
mov
scas
sti
lods
sub
add
out
movs
arpl
ucomiss
push
loop
mov
add
dec
ror
mov
aam
repz
movs
mov
loop
adc
jg
sbb
adc
popa
aam
xor
pop
mov
mov
dec
cmp
in
xchg
xchg
dec
sti
sar
enter
mov
or
inc
ins
(bad)
test
imul
lods
push
aad
dec
sub
mov
jb
mov
ins
sbb
imul
jl
rol
gs
push
loop
sbb
sub
stos
cli
rcr
int3
cmp
add
sbb
add
fdivrp
leave
xor
add
push
popf
inc
and
pop
fadd
lods
xor
push
cdq
push
xlat
inc
int
test
mov
pop
inc
jge
cmp
arpl
cmp
dec
ins
(bad)
jmp
pop
fs
push
dec
aaa
pop
pop
je
stc
ins
ins
ins
clc
jo
mov
push
adc
test
pop
pop
push
fcmovu
(bad)
aas
xchg
mov
jbe
ffreep
jge
out
lea
mov
inc
pop
(bad)
out
pop
dec
jnp
(bad)
cmc
pop
fidivr
into
pop
sar
mov
jb
scas
xchg
xor
pop
shl
jg
push
push
xchg
arpl
lods
gs
xchg
repz
mov
shr
mov
xchg
retf
pop
daa
jnp
inc
inc
sti
mov
xor
fnstenv
push
fstp
xchg
mov
popa
adc
sbb
mov
imul
pop
lods
les
cld
lock
out
push
dec
std
fbld
stos
ret
adc
cmc
xchg
(bad)
sbb
aaa
jb
or
(bad)
mov
adc
push
ret
jae
jbe
add
sar
(bad)
xchg
lock
add
ins
imul
aam
mov
jne
or
inc
or
test
lods
pop
retf
mov
mov
push
sbb
push
(bad)
push
push
cmp
(bad)
mov
inc
add
cmp
rol
dec
rol
aad
shl
jle
push
ins
xchg
iret
push
xchg
adc
mov
sub
in
adc
rcr
push
les
bound
mov
sbb
xor
dec
sbb
jg
mov
scas
push
jl
sub
out
shl
aad
mov
int
or
(bad)
jmp
adc
(bad)
adc
daa
inc
std
out
cmp
ret
in
add
mov
push
fmul
push
mov
jnp
mov
call
pop
push
fst
jns
scas
pop
(bad)
ss
nop
jb
lods
sub
jmp
in
mov
sti
ror
arpl
sbb
dec
mov
add
cmp
and
adc
(bad)
fmul
mov
cmp
or
iret
push
mov
jge
mov
xor
mov
ins
adc
mov
mov
xor
ret
lea
test
repz
mov
shl
std
push
mov
not
mov
jl
sbb
xchg
cmps
inc
int3
jmp
hlt
mov
dec
mov
fst
jne
retf
movs
dec
imul
rol
ror
mov
adc
aad
mov
aam
popf
outs
and
cmp
xlat
pop
imul
xor
shl
sahf
imul
push
jne
imul
in
inc
aas
loop
xor
xchg
aas
add
mov
jp
jmp
outs
mov
sub
test
inc
xchg
stos
aad
cld
in
rcl
dec
inc
push
mov
aam
rol
adc
repnz
push
fwait
cmp
int3
adc
into
pop
mov
movs
loopne
fcomp
movs
jmp
xor
jnp
fs
fadd
push
xchg
pushf
dec
dec
and
pop
adc
fld
inc
lock
test
add
push
dec
push
int3
dec
ss
mov
fisttp
in
(bad)
fld
lahf
jge
cdq
xchg
es
mov
xlat
fidivr
lods
nop
adc
inc
push
lods
and
lock
mov
popf
sti
popf
in
push
mov
mov
mov
pop
add
sysenter
(bad)
sar
cmp
aaa
pop
sub
xchg
(bad)
out
outs
mov
pop
cmp
repnz
xchg
mov
xor
fild
push
add
push
rcl
scas
pop
movlps
sahf
jl
enter
or
pop
xor
lds
inc
or
push
inc
out
fpatan
clc
leave
mov
dec
lahf
xchg
popa
ja
jnp
mov
daa
xchg
or
imul
stos
dec
fnstcw
nop
jo
jg
push
push
push
loop
and
das
int
(bad)
ficom
inc
or
adc
and
je
mov
popa
dec
int
std
add
(bad)
in
stos
ffreep
lods
(bad)
inc
inc
dec
and
pop
and
sub
out
or
bnd
mov
add
icebp
push
aam
and
dec
pop
fsub
ja
nop
push
dec
daa
and
push
mov
shl
and
jnp
ror
jmp
xchg
(bad)
lods
mov
lock
cmp
fdivr
xchg
or
push
movs
(bad)
xlat
cmp
add
xor
mov
test
das
test
push
pop
je
mov
cmp
(bad)
pop
fiadd
lods
les
lods
sar
in
add
cmp
xchg
add
aas
pusha
jb
popf
xchg
in
lods
and
out
scas
dec
pop
ins
mov
mov
cmp
mov
movs
cmp
dec
sub
das
int3
inc
jmp
jp
xor
lods
repnz
lock
dec
or
movs
ins
adc
dec
shr
mov
mov
stos
outs
push
push
cmp
xor
pop
call
pop
fs
pusha
inc
nop
mov
and
je
inc
mov
xchg
sub
xchg
bound
cmps
pusha
bound
movs
mov
push
gs
adc
push
jb
or
cld
inc
jp
icebp
std
jnp
pop
hlt
mov
inc
inc
clc
ror
sbb
push
inc
scas
test
repnz
in
xchg
loopne
jecxz
jge
add
adc
js
xor
fstp
mov
fdivr
ss
or
daa
movs
dec
retf
or
pop
mov
inc
in
mov
sub
cdq
adc
ja
fstp
mov
mov
lds
imul
icebp
inc
mov
das
xor
inc
pusha
and
mov
mov
loopne
cmp
popa
nop
leave
imul
mov
inc
in
mov
cmp
call
leave
clc
fcmove
les
pop
or
enter
sub
push
xchg
nop
xlat
jbe
jae
addr16
adc
or
cmps
sbb
adc
jg
daa
sub
cs
or
pop
pop
test
adc
bound
xchg
mov
mov
add
cld
rcr
push
cmp
popf
or
js
mov
dec
jl
dec
xchg
mov
inc
stos
stos
dec
fnsave
mov
test
data16
xor
mov
fnstenv
lods
(bad)
data16
or
xor
lahf
cmp
mov
mov
mov
adc
dec
shl
(bad)
sbb
dec
mov
aad
jmp
push
sbb
pushf
movs
lods
scas
sbb
sahf
imul
sub
and
clc
je
mov
not
cmp
mov
std
or
inc
mov
jg
stc
cmp
retf
scas
fisub
pop
retf
sub
mov
dec
ja
loopne
mov
jmp
data16
aad
mov
add
ret
imul
cmps
(bad)
jle
and
push
sub
sbb
retf
je
xchg
ss
mov
sti
pop
mov
or
mov
xor
loope
shl
mov
in
and
add
xor
or
push
jg
pop
loope
out
cmp
dec
(bad)
loope
xchg
or
inc
pop
and
movs
js
vsqrtsd
mov
fs
push
fld
js
lgs
push
jae
mov
add
aam
inc
into
bound
add
into
adc
fwait
dec
sbb
mov
jle
leave
movs
xchg
add
sub
inc
jp
cld
push
mov
arpl
imul
(bad)
addr16
aam
scas
dec
mov
mov
pop
dec
test
pop
fsub
out
pop
cld
inc
sar
mov
bound
bound
std
push
sub
adc
mov
fs
push
jno
jmp
cmc
dec
mov
add
mov
popa
ss
cmps
cmps
mov
dec
dec
adc
retf
ins
in
lods
scas
cwde
mov
rol
js
aas
pop
dec
aaa
push
mov
fwait
xor
out
es
xor
adc
out
sbb
retf
push
dec
push
rol
jmp
adc
lock
je
ins
loop
popa
inc
mov
cmp
les
mov
repnz
ret
mov
or
cdq
popa
xor
lock
cwde
inc
and
sub
mov
call
sbb
sbb
(bad)
lock
and
mov
adc
push
out
cwde
loopne
or
int3
sub
lock
jnp
popf
sub
rcr
mov
(bad)
adc
and
push
push
loopne
les
pop
leave
mov
xlat
sbb
jne
sub
pusha
imul
pop
sbb
mov
cmps
adc
out
or
(bad)
jbe
das
leave
daa
aad
mov
xor
les
clc
enter
out
repnz
inc
push
mov
inc
or
inc
aas
xor
fnstsw
cmp
aas
ror
ret
or
cdq
dec
dec
fld
popf
inc
or
dec
scas
or
jl
or
es
mov
mov
loopne
imul
and
mov
xchg
adc
retf
push
cmp
daa
inc
or
mov
mov
fst
push
sub
adc
sbb
mov
popf
stc
pop
clc
sub
jnp
inc
test
xor
repz
out
push
mov
data16
cli
sub
and
sbb
pop
mov
jae
in
mov
adc
jge
pop
imul
adc
das
or
aad
add
push
retf
mov
xchg
xchg
mov
ins
and
adc
mov
fstp
mov
pop
sbb
mul
sbb
sub
cmp
pop
popf
pop
ret
lds
push
dec
call
pop
adc
pop
mov
mov
cwde
enter
shl
inc
mov
call
and
stc
mov
movs
xlat
add
mov
mov
es
sbb
adc
sti
in
adc
cmps
or
sbb
dec
xchg
(bad)
loopne
push
inc
into
scas
xor
pop
push
(bad)
xor
inc
or
test
push
cmp
fistp
outs
cmp
jns
aaa
mov
rol
jns
add
ins
cmp
mov
dec
jns
repnz
add
cwde
dec
ror
outs
sub
pop
jne
fcmovnbe
push
out
xchg
rcl
jo
xor
jne
test
cdq
add
add
xor
push
push
test
into
cs
inc
push
aad
xor
xor
in
cmp
mov
popa
cdq
jmp
lods
jo
adc
sbb
out
sbb
jmp
sub
jp
in
jo
pop
mov
cdq
dec
jle
lds
clc
mov
and
sub
dec
aad
ins
adc
repz
movs
enter
out
mov
mov
jbe
out
adc
jo
jb
call
cmp
addr16
fwait
popa
pusha
(bad)
fiadd
dec
xor
ss
mov
rol
xor
(bad)
icebp
xor
daa
(bad)
jecxz
mov
sbb
aaa
jo
cwde
das
ins
mov
int3
loope
stos
adc
cmp
adc
inc
xchg
loope
hlt
or
movs
popa
and
xchg
adc
mov
sbb
dec
lahf
ret
mov
sahf
push
pop
ret
push
test
je
repz
adc
inc
sub
ds
push
call
sub
(bad)
(bad)
stos
mov
loop
mov
dec
movs
call
aam
loope
add
sti
or
and
int3
mov
mov
nop
mov
xor
bound
adc
inc
jnp
sbb
mov
cmp
sub
ss
arpl
push
or
aas
pop
stc
call
mov
mov
stos
int
imul
mov
mov
lea
outs
jne
mov
mov
sbb
xchg
arpl
add
ds
jne
in
cmp
ret
push
call
movs
sbb
sahf
cmp
fwait
loop
push
or
test
cli
pop
cmp
in
mov
add
mov
test
jle
pushf
jo
pop
dec
fucomi
pop
mov
and
dec
imul
xor
pop
pop
cmp
or
jmp
cmc
fcom
stc
rcl
test
dec
in
sbb
mov
or
push
xchg
in
not
sub
mov
aaa
retf
push
push
repnz
sbb
xor
jne
and
fmul
pop
shl
cmps
sar
mov
mov
xchg
inc
ds
inc
es
scas
push
mov
addr16
xchg
std
sbb
data16
ret
adc
sub
stos
mov
push
(bad)
push
cmps
jecxz
xor
test
call
jge
mov
mov
mov
dec
jae
imul
mov
mov
cmp
cmp
icebp
test
in
pop
inc
dec
jle
xchg
mov
or
movs
xchg
dec
xor
mov
push
cli
out
add
jo
xchg
rol
sbb
mov
or
test
pop
jg
mov
mov
lods
daa
adc
and
sub
ret
or
inc
mov
movs
loope
call
add
fistp
lods
push
or
repnz
das
adc
push
cmc
cwde
in
loopne
inc
push
ss
xchg
or
inc
mov
(bad)
adc
mov
(bad)
push
data16
aam
push
xor
mov
cld
movs
and
scas
scas
out
cmp
inc
ret
jns
lods
std
hlt
or
dec
outs
call
call
dec
sar
push
es
xchg
or
sbb
neg
inc
call
xchg
mov
cmp
mov
es
aas
dec
call
fcom
mov
es
stos
jmp
in
rcl
aam
out
push
xor
pop
out
popa
movs
rcl
add
cdq
xchg
cwde
aam
jmp
adc
mov
arpl
and
fcomi
in
lock
sbb
fcmovnbe
xchg
test
scas
push
jb
jo
(bad)
gs
ffree
cld
jae
into
jmp
inc
mov
adc
cmp
js
(bad)
or
sub
or
or
sub
cmps
int
sbb
clc
sar
pushf
jo
les
xchg
cmp
sub
shl
ret
jle
inc
push
ret
aas
and
lds
xchg
stos
fcomp
fstp
sub
add
call
add
or
popf
test
int
xor
pop
inc
or
xchg
scas
daa
xchg
enter
jbe
mov
adc
sub
xchg
ins
and
outs
mov
test
jp
(bad)
xor
cmp
xchg
mov
aad
mov
xchg
sbb
stc
sbb
ins
jl
push
pop
mov
iret
leave
mov
fdivr
js
cmc
jge
inc
inc
ja
dec
adc
sahf
std
push
es
xlat
fnstcw
scas
fnstsw
ret
mov
(bad)
ss
movs
es
jmp
mov
mov
daa
jg
pop
xor
sti
pop
or
inc
leave
jmp
cmp
lods
pop
test
fistp
in
xchg
test
inc
mov
jp
in
outs
iret
call
push
sub
xchg
push
jno
mov
out
clc
cmc
or
mov
jg
stc
aaa
fmul
bound
aaa
mov
add
pop
popf
and
jl
sub
repnz
loope
xchg
inc
mov
fcmovnu
ins
cld
adc
std
(bad)
dec
inc
jl
addr16
popf
dec
and
sahf
cld
xlat
ja
aaa
push
push
add
lods
pcmpgtb
imul
mov
icebp
add
mov
jge
hlt
punpcklbw
popa
jge
fld
fist
pop
sub
pop
mov
xchg
pop
or
les
je
ins
inc
sahf
int3
iret
dec
not
pop
and
xor
out
mov
(bad)
mov
lods
adc
add
ins
jmp
mov
scas
push
pushf
sbb
xchg
cmp
push
aaa
(bad)
cmp
xor
mov
pop
jmp
adc
sbb
push
push
(bad)
popa
fld
jbe
out
xabort
add
pop
mov
jp
jl
dec
test
lds
jg
pop
push
cmp
retf
ret
mov
xchg
inc
fs
pop
and
add
mov
xor
inc
out
pusha
cld
inc
sar
inc
test
out
imul
lea
adc
sub
scas
jg
fsub
popa
push
mov
dec
ins
nop
pop
bound
sti
mov
sbb
mov
or
popa
lock
lahf
mov
dec
pusha
push
aaa
pop
dec
and
out
scas
repz
test
dec
in
retf
jl
adc
call
mov
cmps
ss
push
icebp
xor
xor
(bad)
fcompp
daa
mov
dec
movs
mov
ret
imul
inc
outs
clc
cmc
add
aaa
stos
repz
int
mov
cmp
inc
mov
mov
in
xor
loope
sub
mov
aad
fsub
dec
jp
inc
inc
sti
cmp
jmp
sub
cld
test
out
icebp
hlt
jmp
sub
inc
sbb
sub
loopne
xlat
in
inc
push
jno
and
scas
movs
xchg
mov
and
push
ror
imul
jb
icebp
sub
pop
adc
(bad)
jg
sub
addr16
sbb
jae
sbb
mov
push
jmp
adc
pushf
int3
adc
sbb
xor
sahf
push
shl
or
mov
pop
jno
aas
and
out
inc
fstp
cmc
push
inc
inc
sub
(bad)
daa
das
pusha
enter
add
out
cmps
mov
adc
pop
jb
daa
inc
fistp
clc
ffreep
shl
ins
xchg
fidivr
(bad)
fsubr
inc
mov
mov
xchg
or
xchg
repnz
cli
arpl
cld
push
jp
shr
xchg
lods
and
mov
fwait
mov
inc
cmp
inc
cmps
test
fsub
adc
mov
push
fwait
aaa
sbb
xchg
dec
int3
repnz
xchg
lds
(bad)
aad
xor
mov
(bad)
stc
pop
sub
scas
inc
inc
aam
and
lock
cmps
adc
ficom
mov
sbb
outs
lds
test
ret
call
cdq
jnp
int3
ror
adc
mov
sbb
and
pop
xchg
cmp
add
mov
add
ja
fs
cmps
xchg
fnstcw
adc
mov
push
xor
stos
pop
and
rol
fld
mov
or
fisub
add
shr
inc
mov
dec
imul
xor
add
cdq
pop
ins
mov
push
lods
pusha
daa
push
or
and
stos
add
push
pusha
mov
cs
rep
xor
mov
ja
sub
mov
xchg
jb
(bad)
and
test
call
mov
idiv
adc
cmc
xchg
push
sub
mov
aad
sub
clc
iret
dec
fwait
pop
or
icebp
in
mul
and
pop
adc
ret
fstp
adc
sub
gs
xor
inc
or
movs
jns
mov
pop
mov
fxch
sub
call
mov
push
sbb
cmp
xor
stos
scas
loope
retf
mov
lds
(bad)
jmp
cmp
cli
fistp
js
sub
adc
jmp
jmp
sub
ror
adc
push
rcr
leave
clc
das
or
mov
(bad)
in
dec
mov
cmp
popa
ror
in
in
repz
clc
jl
shr
pop
sbb
mov
mov
xchg
or
mov
fistp
or
test
movs
inc
push
jmp
push
sbb
bound
adc
sbb
and
movs
add
gs
sbb
cmps
and
aas
adc
pusha
movs
mov
popa
in
loope
call
(bad)
out
mov
xchg
ins
push
adc
inc
popa
imul
mov
dec
je
fld
mov
pop
popa
and
xor
ret
lods
push
pop
pop
mov
mov
fdivr
sub
add
aad
fbstp
inc
cmp
imul
xchg
or
cs
(bad)
in
push
or
or
mov
imul
out
xchg
jb
pop
fbstp
idiv
aaa
retf
cmp
dec
lock
rol
cmps
jae
sahf
and
adc
inc
mov
pop
stc
add
sub
jns
imul
dec
push
fidiv
xor
sub
lea
sbb
shl
bound
je
stos
push
stc
ja
mov
bound
jp
xchg
mov
lods
xchg
clc
inc
cdq
or
mov
and
lods
dec
mov
call
dec
inc
xchg
push
(bad)
loop
xor
sbb
jbe
rcr
jmp
popa
add
sar
jnp
enter
daa
sub
sbb
call
push
aad
mov
outs
repnz
jmp
lea
fisttp
call
push
dec
iret
aam
push
fisttp
movs
popf
cld
cmp
jp
clc
xor
and
in
gs
rol
xchg
test
mov
lods
cwde
push
mov
cmp
pop
sub
(bad)
fwait
push
pop
(bad)
hlt
stc
hlt
es
leave
pop
cdq
ins
mov
push
push
xchg
retf
fwait
and
add
xchg
arpl
vmovntdq
or
shr
(bad)
out
ja
and
sbb
xor
(bad)
cmp
mov
jg
das
mov
sbb
imul
xor
retf
inc
mov
jle
clc
and
sub
add
jge
rcl
pop
dec
lahf
inc
loopne
in
call
int
addr16
or
imul
aas
push
and
cld
clc
(bad)
jecxz
rcr
mov
outs
mov
in
and
push
dec
shr
inc
xlat
add
and
mov
cmc
outs
sbb
(bad)
push
icebp
push
stos
xor
je
pop
test
inc
test
add
outs
jno
adc
push
cmps
add
push
fstp
stos
mov
cmp
(bad)
xchg
inc
mov
mov
popa
cmp
jnp
cmp
jne
dec
jb
inc
and
mov
add
out
pop
mov
xlat
and
retf
stc
rol
(bad)
push
jmp
int3
lods
movs
adc
rcl
pop
ret
jmp
adc
clc
mov
pushf
xchg
stos
or
ss
mov
pop
or
fadd
lods
sbb
pop
xchg
or
jb
aas
lods
xchg
aad
hlt
mov
enter
imul
ret
jle
mov
mov
push
sbb
js
adc
jo
mov
mov
ret
adc
lock
push
test
and
cmp
imul
inc
ror
add
dec
aam
out
xor
into
out
movs
mov
cli
lds
dec
lock
rol
hlt
pop
cwde
and
sar
sti
cmp
stos
aam
mov
inc
and
dec
or
inc
(bad)
cmp
outs
js
add
or
movs
popa
bound
test
jbe
xor
mov
sbb
pop
scas
mov
adc
fstp
imul
jl
js
xor
retf
dec
add
sbb
push
js
push
js
sub
in
ret
jno
js
pop
adc
cmc
loopne
stos
sub
inc
mov
cmp
mov
mov
push
fistp
scas
mov
or
stc
and
jle
lahf
stc
or
clc
mov
or
push
scas
pop
call
xor
jg
neg
cs
test
or
test
mov
call
scas
fisubr
jno
clc
sar
ins
cdq
out
xchg
(bad)
enter
setl
fs
xchg
imul
mov
jg
push
fdivp
sbb
adc
test
(bad)
enter
test
jbe
in
sar
sbb
sub
adc
mov
(bad)
fcmovne
les
inc
add
ja
in
stos
sub
hlt
pop
mov
and
pop
nop
dec
xchg
push
ret
fcom
push
push
mov
push
fwait
mov
iret
cli
sub
stos
pop
jno
xchg
inc
pushf
out
inc
jmp
push
outs
xor
cmp
repz
push
xor
repz
pop
inc
(bad)
push
pop
es
neg
mov
cld
cmp
shr
sbb
lods
cli
adc
xchg
fadd
and
lock
push
adc
mov
inc
xchg
and
push
cmps
in
jb
jmp
retf
scas
sub
icebp
add
test
icebp
ret
std
popa
pop
in
movs
in
int3
int3
retf
pop
ja
cmp
pop
add
call
outs
sub
pop
inc
add
adc
mov
(bad)
nop
cmps
ret
out
out
adc
jns
mov
mov
loop
mov
ret
cmps
(bad)
inc
mov
outs
mov
(bad)
std
test
pop
add
sar
pop
xchg
mov
loop
inc
and
xor
fldpi
in
mov
pop
adc
xchg
push
pop
in
std
outs
add
outs
mov
int
ins
mov
clc
into
pusha
jp
loop
shl
loop
and
inc
push
dec
imul
add
cmps
cmc
cmp
push
fbld
arpl
cmp
and
lock
xor
fwait
shl
push
lods
ret
mov
xor
retf
cli
sub
xor
sbb
(bad)
std
into
sar
push
shr
jg
and
cli
cmp
inc
cwde
dec
js
and
mov
pusha
push
xlat
push
jg
fbstp
test
ss
mov
fistp
lea
fisubr
sbb
shl
xchg
test
iret
mov
or
xchg
cdq
mov
into
aas
call
adc
fst
test
inc
fmul
shl
ins
shl
dec
push
(bad)
fisubr
popa
push
(bad)
push
sbb
(bad)
sbb
and
mov
(bad)
out
in
pop
out
inc
scas
mov
or
int
mov
cmp
pop
push
js
inc
fidivr
mov
or
or
or
popf
pop
test
cmp
test
ja
jno
and
dec
test
(bad)
pop
bound
in
mov
jns
stos
mov
sar
jmp
outs
xchg
mov
dec
mov
repz
or
pop
dec
das
push
dec
mov
inc
pusha
pusha
int3
lds
nop
jmp
(bad)
and
inc
test
fs
imul
lea
cmps
popf
push
fcmovne
push
retf
mov
pop
mov
in
fbstp
mov
sub
cmps
pop
xchg
std
push
adc
lea
in
sahf
add
pop
dec
ins
(bad)
fs
inc
cmc
add
fwait
cmp
sub
sbb
add
(bad)
cmp
xchg
or
sub
in
jnp
mov
fadd
sbb
daa
cli
(bad)
cli
pop
(bad)
lods
fdivr
call
add
push
or
push
in
push
jbe
dec
fs
(bad)
add
jo
movs
jae
mov
mov
mov
mov
xchg
dec
mov
rcl
jno
push
mov
leave
gs
mov
mov
enter
xor
cs
mov
xchg
iret
sbb
(bad)
jbe
lds
xchg
repz
not
(bad)
sbb
sbb
mov
lods
call
push
fwait
add
or
mov
cld
loop
loopne
or
sar
mov
pop
jp
push
sub
xchg
cmp
(bad)
jmp
push
xchg
sbb
xchg
scas
sub
inc
rol
gs
or
mov
cmp
jns
or
mov
les
or
mov
and
sbb
mov
or
sbb
push
xor
call
jp
add
mov
aas
call
lods
cli
sbb
popa
pop
xchg
jmp
je
in
sub
popa
repnz
leave
sub
sub
icebp
jns
das
sub
pushf
or
js
mov
mov
xor
push
test
(bad)
adc
xor
add
int3
cmp
(bad)
xor
scas
loop
stc
scas
test
loopne
mov
sbb
mov
add
push
fwait
test
xor
add
pop
inc
cmp
jmp
and
sub
xchg
addr16
ins
xchg
repnz
sub
pop
adc
out
and
out
dec
mov
xor
add
dec
cmps
push
push
jmp
les
cwde
cmp
xor
and
ins
push
xor
les
dec
ret
in
(bad)
sub
jge
pop
mov
(bad)
jle
data16
ret
test
scas
xchg
and
ror
leave
mov
enter
pop
arpl
push
jg
sub
stos
lods
call
pop
sbb
inc
or
xor
cwde
xor
das
xor
mov
push
pop
mov
std
mov
stos
mov
imul
shl
jb
jnp
sbb
push
jmp
fsubr
mov
repnz
sub
jo
ret
sub
fcomp
jl
jl
sbb
push
scas
out
inc
jp
fdivr
jo
mov
cmps
inc
into
push
mov
jl
cmp
jl
das
(bad)
cld
sbb
lods
sub
dec
mov
mov
or
ss
out
sub
mov
inc
std
es
pusha
into
pop
cmps
mov
dec
push
xlat
jne
and
popf
jnp
sbb
mov
or
mov
or
daa
and
lods
je
or
pop
and
pop
enter
and
test
out
test
shr
ror
add
push
popa
les
xor
outs
les
ret
and
(bad)
repz
pop
sti
out
aas
sub
test
cmp
call
mov
dec
sub
jecxz
jl
pop
scas
push
in
pop
loop
push
idiv
call
inc
and
sbb
sub
sub
lock
lods
(bad)
outs
mov
and
push
sub
mov
mov
sbb
mov
jns
or
(bad)
jge
xchg
retf
xchg
test
sub
retf
sub
or
add
add
repnz
and
sub
data16
hlt
ds
mov
out
(bad)
pop
pop
pop
pop
inc
sbb
cdq
or
add
sbb
dec
mov
push
leave
add
jp
pop
sub
out
or
xchg
mov
mov
mov
scas
jecxz
dec
dec
jno
pop
dec
nop
aas
sahf
lods
mov
add
or
jne
adc
adc
iret
fnclex
pusha
mov
cli
dec
inc
add
out
jmp
ror
int
xor
fsub
mov
push
js
add
or
cmps
sub
sbb
pop
xor
push
aam
dec
scas
or
mov
aad
inc
and
mov
repnz
lods
pushf
mov
cmc
cmp
and
mov
and
cmp
aaa
(bad)
sahf
scas
mov
retf
std
in
mov
mov
push
mov
sub
sbb
sbb
es
sbb
fwait
sub
nop
fwait
jmp
aas
fistp
aaa
dec
sbb
shl
cmps
push
pop
xchg
fwait
into
cmp
pop
pxor
pop
es
sbb
into
cmp
xlat
ret
call
or
fwait
shl
mov
(bad)
jmp
mov
and
jbe
(bad)
or
ins
push
add
and
popa
dec
mov
xchg
es
sahf
dec
sub
adc
outs
(bad)
cli
arpl
push
and
movs
jns
jo
and
inc
pop
(bad)
fsubr
adc
in
fimul
iret
inc
(bad)
mov
ins
inc
adc
pop
mov
call
and
mov
sub
xchg
dec
add
and
aad
sbb
into
fidiv
mov
out
ins
int3
sub
push
scas
sbb
aas
fs
jmp
xor
jbe
push
imul
jl
inc
push
lods
ret
loope
or
cmps
push
jae
push
adc
repnz
repz
popw
std
pop
fldenv
mov
into
es
(bad)
mov
in
ret
fbld
sbb
dec
jnp
sbb
mov
jo
mov
push
jno
jle
adc
ret
out
scas
pop
dec
scas
mov
sub
pushf
jae
push
sub
adc
mov
scas
iret
and
inc
imul
jg
adc
adc
add
or
cli
lock
gs
or
jl
jo
aas
inc
retf
mov
xor
mov
call
dec
ja
fxch
in
fwait
(bad)
pop
dec
dec
push
mov
loope
mov
xchg
or
fucom
daa
jg
sub
cdq
aam
xlat
call
pop
push
push
cli
push
adc
(bad)
adc
inc
cmc
and
xchg
ss
mov
scas
inc
aam
(bad)
push
stc
or
test
(bad)
rcr
aad
mov
mov
fxch
xor
and
pop
loopne
mov
stos
shl
dec
xlat
inc
not
icebp
arpl
dec
jg
dec
cmps
(bad)
test
sbb
sar
pop
lods
add
pop
and
mov
pop
jmp
fst
xor
adc
cmp
sbb
mov
xlat
xlat
mov
inc
(bad)
pop
rcr
mov
test
lods
jnp
nop
dec
or
mov
and
sub
mov
pop
mov
repz
outs
cwde
pop
call
cwde
jge
cwde
jge
mov
hlt
mov
lods
cmp
mov
and
pop
push
xor
outs
scas
dec
es
sar
test
or
xor
mov
arpl
xchg
lods
push
aaa
fs
jne
add
stos
xchg
lahf
inc
retf
xor
or
sbb
stos
push
jge
test
cwde
jne
and
xor
cmp
mov
ret
mov
cmp
outs
scas
loop
imul
lods
mov
add
ins
mov
ja
or
pop
arpl
pop
out
adc
out
sub
(bad)
jb
dec
push
pop
pop
or
mov
dec
in
adc
imul
mov
aad
cmps
pop
nop
jmp
int3
std
inc
xchg
ds
and
pusha
shl
mov
jns
pushf
fcom
or
in
jno
and
pop
enter
pop
mov
mov
loope
jae
cmp
jae
gs
pop
or
mov
lahf
adc
popa
int3
adc
add
xor
mov
fstp
jb
cmp
adc
jns
inc
or
xchg
cmp
sub
mov
and
int3
adc
outs
and
xor
clc
cli
int
pop
jmp
imul
inc
retf
call
mov
and
iret
iret
hlt
and
xor
repnz
jle
jns
and
ja
repnz
sar
cmps
xchg
jo
push
mov
ret
daa
ds
aas
adc
out
xchg
outs
cli
sbb
es
aam
mov
pop
movs
(bad)
xor
sar
into
sub
dec
push
aam
cmp
xor
push
jns
nop
gs
inc
scas
sub
xchg
std
adc
stc
push
pop
mov
cmp
out
xchg
outs
lods
in
xchg
pop
(bad)
dec
pop
icebp
mov
mov
out
cmc
dec
push
add
scas
mov
mov
aad
dec
dec
icebp
mov
mov
fadd
bound
inc
or
xchg
xchg
cmp
and
add
mov
or
mov
xor
pusha
adc
push
jae
retf
imul
add
ins
dec
inc
add
adc
popf
fld
leave
push
add
jnp
mov
mov
push
xchg
pop
pop
mov
jns
call
push
jmp
icebp
mov
and
scas
sbb
popf
icebp
inc
scas
and
imul
pop
ja
inc
add
push
mov
sbb
mul
mov
imul
fsubrp
scas
ss
push
das
gs
fcomp
or
push
or
movs
push
cld
sub
jmp
retf
xor
pop
ja
int
sub
test
cmp
mov
mul
jmp
mov
mov
cld
cmps
sub
out
adc
mov
sub
(bad)
push
adc
(bad)
jmp
jae
mov
push
repnz
fld
xchg
xchg
inc
add
(bad)
dec
mov
outs
dec
sahf
mov
jp
imul
rcl
jmp
mov
nop
mov
jmp
data16
cwde
sub
in
cmp
cld
jmp
scas
jmp
or
cld
xor
stc
sub
mov
xchg
and
icebp
xchg
mov
movhlps
add
or
xor
sbb
inc
out
(bad)
aas
in
test
push
mov
shl
jae
sbb
sbb
pusha
jne
js
jge
int
ret
aaa
stos
clc
cmp
stos
movs
push
xchg
xor
dec
sahf
pop
shl
mov
xchg
ror
dec
lods
imul
mov
jne
jno
cmp
cs
(bad)
sub
xor
xor
push
aaa
fwait
and
adc
push
inc
or
mov
sub
out
(bad)
sub
jne
mov
push
retf
dec
call
stc
shr
push
int
fnstenv
out
clc
dec
inc
dec
imul
and
inc
lahf
mov
scas
add
pop
pop
ret
loopne
cmps
imul
adc
outs
mov
mov
or
ret
and
jle
(bad)
jecxz
inc
push
push
mov
lds
jmp
jno
loop
jmp
adc
shl
jo
popa
mov
popa
ins
sbb
jl
pop
mov
xor
pop
mov
sbb
xor
aaa
xchg
fisttp
movs
adc
fs
dec
jne
pop
pushf
stc
cmp
pop
sbb
daa
xchg
sti
loop
xor
jecxz
je
xchg
int
je
fs
test
pop
sbb
das
sti
dec
call
mov
inc
jns
add
loope
xchg
ds
mov
pusha
mov
or
ds
ja
add
in
aad
xor
pusha
pop
adc
popf
ins
mov
clc
shl
movs
out
sbb
daa
inc
mov
hlt
(bad)
pop
imul
mov
dec
test
mov
jmp
push
and
repz
mov
mov
fwait
mov
jecxz
hlt
leave
les
inc
add
stos
push
pop
das
ret
das
inc
mov
xor
lea
mov
push
push
icebp
push
test
retf
les
jmp
sbb
imul
mov
(bad)
xor
inc
into
ds
mov
and
pushf
jle
and
dec
into
inc
push
pop
mov
push
stos
aam
fsubr
jb
in
jne
sbb
arpl
mov
bound
dec
movs
lea
dec
and
ins
(bad)
dec
enter
xor
jp
xchg
and
inc
or
loop
shl
sub
cmp
adc
jae
lahf
jmp
outs
ds
jns
mov
mov
mov
push
addr16
sbb
mov
cmp
fst
fdiv
lds
popf
jecxz
jl
xlat
jno
cwde
fs
retf
xchg
push
in
in
(bad)
movs
lods
or
cmp
stos
mov
inc
stos
cli
scas
shl
mov
cmps
fs
shl
dec
mov
xchg
jmp
mov
dec
lods
lods
xor
cmp
adc
or
ins
mov
add
repnz
aaa
test
mov
add
lahf
scas
je
sbb
call
(bad)
ficomp
js
(bad)
jnp
pop
mov
push
jle
loop
test
adc
shr
cmp
mov
and
mov
dec
and
jmp
in
ror
jno
outs
movs
loopne
pop
ret
push
mov
cmp
leave
add
inc
ds
ja
cmps
fist
cld
push
pop
jno
jo
lock
inc
dec
sar
inc
add
fistp
inc
inc
test
sahf
dec
rol
xchg
mov
push
xor
sub
xchg
dec
push
pop
stc
add
xchg
inc
adc
call
adc
xchg
std
aad
stc
(bad)
lods
arpl
xchg
or
xchg
(bad)
dec
adc
push
cmps
out
inc
stos
fdiv
adc
ret
test
cmp
jns
in
mov
adc
mov
std
jg
imul
push
ins
dec
gs
fldenv
sahf
dec
shr
xchg
pop
dec
pop
inc
and
or
push
js
nop
call
pushf
cmc
mov
retf
jo
cmp
inc
ror
std
test
push
inc
adc
pop
rcr
mov
pop
add
jmp
dec
xor
jecxz
mov
rcl
jae
sub
out
imul
(bad)
call
add
or
add
add
jg
fsubr
shl
cmp
lods
loop
pop
(bad)
outs
loope
jae
sbb
mov
sbb
les
mov
lods
cli
test
sar
or
xchg
inc
push
outs
xchg
sbb
clc
daa
jne
jmp
dec
adc
or
in
push
sub
and
dec
ins
pop
pop
adc
fwait
inc
fcmovnbe
pushf
jo
add
fdivr
xlat
push
aad
cmp
stc
add
(bad)
fisub
push
add
shr
mov
inc
lock
sub
into
cdq
icebp
mov
push
ja
cmp
jbe
mov
pusha
lods
push
inc
inc
jne
gs
xchg
sbb
mov
jo
mov
int3
iret
add
mov
scas
or
test
rol
mov
in
int3
es
or
js
inc
jmp
fistp
shl
dec
cmps
dec
jge
ins
and
sar
sub
jmp
iret
popa
sti
cmp
les
add
mov
push
cld
add
movs
xchg
jb
inc
ins
xor
aas
xor
test
(bad)
out
pop
sbb
mov
adc
add
jg
clc
call
adc
sbb
outs
add
dec
adc
inc
loop
push
out
into
outs
stc
outs
loopne
mov
imul
mov
movs
xchg
out
inc
add
mov
push
and
and
rcl
pop
push
mov
xor
and
retf
ins
lahf
adc
loop
jge
xchg
mov
jnp
push
push
ds
rol
cdq
xor
xchg
addr16
xchg
jmp
ror
dec
inc
into
pop
cli
lds
mov
jbe
sub
adc
jno
sub
fldenv
pop
retf
push
movs
sub
jns
mov
lods
mov
adc
imul
lods
movs
retf
xor
outs
pushf
mov
iret
xlat
pop
mov
pop
and
out
repz
xchg
or
push
sub
jno
lods
or
push
out
out
shl
xchg
cmp
dec
stos
sbb
aad
adc
cmp
jno
gs
aam
adc
pop
mov
call
inc
je
jecxz
add
rcl
jns
add
adc
jns
clc
rcl
(bad)
shl
enter
pushf
addr16
lahf
xor
outs
jb
neg
xchg
mov
test
out
adc
pop
je
jmp
adc
sbb
int
and
lea
mov
cmps
jg
push
js
xchg
outs
gs
xchg
cmp
mov
mov
retf
into
dec
test
and
cmovne
mov
cmps
mov
sub
popa
sti
pusha
js
xor
out
sub
xchg
mov
frstor
enter
test
sbb
pop
inc
dec
iret
nop
stos
daa
xchg
push
repnz
xchg
mov
jmp
shl
cmp
in
in
ins
int
(bad)
pop
repnz
sub
daa
adc
(bad)
dec
imul
(bad)
and
pop
loopne
cmp
and
dec
das
(bad)
push
sbb
imul
add
rol
jne
mov
sbb
inc
stos
dec
xchg
nop
sbb
fistp
inc
pop
xor
mov
loope
divps
addr16
icebp
mov
xchg
pushf
fld
out
cdq
jo
mov
fs
jge
je
iret
cmp
jge
inc
lock
push
into
mov
push
retf
xor
dec
and
imul
dec
add
or
jno
xchg
movs
jo
mov
pop
dec
cmps
add
mov
sbb
repnz
cwde
out
push
cmps
cld
sti
sub
mov
cmps
call
ror
call
jo
jp
out
dec
dec
add
sbb
sti
adc
mov
mov
nop
sbb
dec
mov
xor
mov
mov
mov
mov
push
or
add
xor
sar
in
sahf
cwde
sbb
rol
cmp
test
(bad)
xchg
jno
(bad)
pop
mov
aad
or
out
stos
xor
sbb
sub
pop
jne
cld
repnz
xchg
hlt
iret
fistp
sub
(bad)
dec
adc
dec
or
arpl
rol
std
int3
aad
xor
mov
stc
adc
pop
test
adc
int3
or
ror
or
cmp
nop
sub
or
(bad)
add
jbe
nop
mov
jg
sub
xchg
mov
ds
aaa
ror
jge
pop
int
sbb
rcr
test
mov
loope
pop
fldz
fprem
div
pop
mov
mov
cmp
mov
adc
pop
addr16
inc
and
mov
fisub
test
xor
sub
mov
mov
xchg
pop
sub
sub
ins
dec
cmp
loopne
xor
adc
sbb
cs
mov
sahf
cmp
adc
sbb
cdq
push
xchg
cmp
pop
adc
jge
sub
test
fcom
mov
pop
pop
dec
clc
lods
scas
inc
or
(bad)
xchg
jns
sar
das
dec
push
inc
jmp
xchg
sub
mov
or
sub
stc
(bad)
mov
pop
retf
call
pop
loop
jb
repnz
cmp
xchg
pop
xchg
jne
mov
xor
imul
out
in
sahf
dec
ret
and
(bad)
cli
or
mov
add
inc
(bad)
jg
xchg
outs
adc
jmp
ds
push
mov
sub
inc
idiv
pop
push
lahf
mov
ss
pop
jb
leave
retf
dec
in
cwde
ret
sub
shr
sti
outs
ret
lahf
sti
ja
pop
aas
dec
pop
aas
and
ja
retf
stos
add
mov
fcom
int3
jp
sub
aas
cmc
mov
pop
icebp
adc
repz
or
xor
iret
leave
xor
jne
xchg
cmp
push
or
add
add
iret
pop
or
mov
xchg
lds
adc
movs
dec
int3
push
neg
movd
add
cs
loop
mov
es
jl
xor
cmp
fbstp
nop
repz
add
lods
cmps
xchg
and
aaa
pop
xchg
or
or
push
lds
dec
test
pop
or
data16
inc
dec
in
xor
xlat
xchg
xchg
es
shl
out
add
dec
pop
sbb
dec
cli
pop
retf
icebp
sbb
loope
sar
not
enter
push
sahf
xchg
leave
shl
mov
popa
pop
jbe
icebp
stc
xchg
mov
in
and
call
in
sbb
sub
cmc
or
(bad)
aam
push
or
arpl
lea
fcmove
sub
and
repnz
mov
sar
ja
cmp
pop
inc
and
push
adc
sub
popf
add
mov
test
ret
call
cdq
call
test
push
xlat
ja
fs
aam
sahf
cmps
arpl
mov
add
dec
dec
les
out
retf
jmp
xchg
pop
pop
dec
and
pop
ds
inc
xchg
movs
mov
imul
mov
or
inc
add
push
ret
push
mov
fldcw
push
xor
xchg
adc
test
es
arpl
shl
fwait
mov
sbb
push
push
pusha
adc
and
test
adc
and
aam
push
ds
test
ror
cmp
cmp
cmp
out
adc
inc
mov
and
sub
outs
aad
test
sub
lods
int3
push
shr
adc
push
cdq
lds
jg
div
mov
fstp
data16
inc
mov
scas
sub
jo
lea
pop
cmc
shl
jbe
ins
mov
fst
mov
inc
xor
cmc
lea
ffreep
inc
or
stc
int3
dec
add
sti
lea
inc
cli
pop
repnz
add
shl
xchg
in
cmps
adc
outs
loopne
xor
pop
jmp
and
sub
cmp
ret
cs
sub
push
sub
outs
mov
cmp
xor
jnp
dec
mov
inc
pop
cmp
lahf
rol
fidivr
add
into
sbb
jmp
inc
inc
enter
stos
div
mov
sub
popa
sbb
retf
jg
lods
dec
sbb
push
ds
cmp
xor
loopne
dec
xchg
test
mov
cs
dec
and
and
test
je
outs
mov
add
loopne
fwait
xchg
hlt
rcr
add
popa
inc
inc
in
popa
rol
mov
adc
mov
push
jmp
fst
std
test
in
xchg
test
fiadd
fsub
mov
or
call
or
push
popf
cmc
mov
test
cmp
sub
loop
cmp
in
leave
jge
sbb
pusha
xchg
mov
push
test
mov
jns
add
out
jne
and
sbb
xchg
xlat
cmp
test
imul
add
into
pop
mov
and
or
sub
jbe
int3
pop
in
jg
sbb
push
icebp
mov
scas
mov
aam
rcr
push
movs
sbb
cmps
ds
pop
cmp
inc
add
mov
or
jno
test
sub
aaa
popf
enter
imul
inc
mov
push
dec
dec
xor
out
xchg
(bad)
imul
outs
movs
dec
sahf
sbb
cmp
mov
rcr
pop
xor
mov
test
test
ret
addr16
sbb
jmp
mov
pusha
and
xor
dec
push
mov
inc
hlt
or
push
sub
(bad)
and
pop
adc
adc
es
pop
mov
xchg
dec
jo
sub
retf
outs
pusha
sti
dec
popa
das
cmp
cmp
inc
popa
cmps
lea
out
add
sbb
cmp
test
inc
add
(bad)
loope
adc
lods
in
mov
vpcmpgtw
pop
jo
inc
test
ja
dec
jne
add
aad
dec
and
leave
jne
push
stos
es
(bad)
cmps
or
stos
jmp
sbb
daa
fcmovu
dec
cmp
sbb
std
push
call
or
inc
xchg
ss
enter
je
arpl
adc
iret
jl
enter
mov
fnstcw
sub
mov
jb
mov
test
add
cs
or
nop
push
jle
ja
or
repz
cmp
or
xchg
and
sub
xchg
test
pushf
sbb
xchg
sti
xchg
xor
(bad)
fisubr
jecxz
mov
out
addr16
and
cli
(bad)
in
das
jb
inc
jle
stos
leave
leave
fnsave
in
loope
aad
ror
fbstp
mov
and
dec
mov
push
jge
or
ins
ins
in
dec
jo
dec
or
mov
pop
jmp
and
mov
mov
fistp
xchg
xchg
or
(bad)
out
sub
ficomp
ficom
loope
or
dec
out
ret
popf
sti
lock
dec
xlat
aad
or
jmp
out
call
bts
lahf
hlt
les
cmps
or
xchg
clc
and
outs
push
mov
outs
sahf
inc
inc
jle
sub
imul
pop
pop
dec
ror
out
mov
mov
or
xchg
scas
cmp
gs
jo
stos
mov
mov
dec
xchg
mov
leave
pop
sbb
push
fmul
xchg
xchg
sub
lea
add
in
sub
movs
mov
inc
xchg
aad
addr16
in
sub
push
(bad)
sti
or
cmp
ss
add
sbb
or
sbb
jge
daa
mov
dec
xor
push
sub
push
mov
(bad)
cmps
jle
mov
jg
adc
dec
dec
xchg
xor
jmp
inc
jge
dec
fwait
and
mov
dec
push
xor
(bad)
call
adc
push
cmps
mov
push
sbb
and
ss
mov
inc
or
fdiv
lds
stos
sti
or
mov
hlt
push
xchg
nop
outs
cmp
jecxz
mov
fiadd
(bad)
jle
(bad)
mov
inc
cmp
pop
cli
jle
xlat
imul
mov
ficom
xchg
adc
jle
xchg
mov
cmp
adc
sti
mov
and
pop
mov
sub
jmp
add
inc
imul
xor
push
pop
lahf
and
scas
dec
int
push
movs
adc
mov
xlat
dec
jo
fs
ucomiss
sahf
jae
or
icebp
inc
sti
(bad)
movhps
in
arpl
out
push
dec
and
(bad)
out
out
mov
inc
data16
popa
pushf
xor
adc
jp
sbb
(bad)
or
bound
adc
and
lods
mov
not
mov
pop
mov
jecxz
dec
jecxz
loop
xchg
mov
sbb
(bad)
xchg
std
int
hlt
mov
(bad)
mov
dec
xlat
jns
adc
in
adc
add
sub
hlt
mov
jg
pop
retf
cwde
aad
aaa
cmp
icebp
jbe
push
ds
mov
fcomi
cmp
fisub
cmp
test
imul
mov
(bad)
in
into
das
jecxz
mov
inc
add
and
xchg
(bad)
pop
xchg
daa
or
fidiv
xchg
sbb
sub
ret
stos
adc
je
xchg
cmc
retf
xchg
or
out
shr
ja
add
adc
mov
fs
mov
mov
sub
push
and
cli
sub
cmp
loop
cmps
mov
mov
inc
add
or
adc
dec
mov
mov
adc
test
and
fdivr
mov
jb
lods
pop
inc
mov
push
das
push
loope
clc
in
pusha
cs
fcmovu
out
lock
cmc
xor
mov
ins
cs
das
retf
outs
fnstsw
or
adc
mov
mov
mov
bound
inc
jecxz
cwde
aad
jmp
call
add
cmc
and
jecxz
loop
add
rcl
repnz
adc
in
xor
jl
call
mov
sub
inc
xchg
push
pushf
xchg
retf
retf
xchg
fisttp
div
in
in
pop
cmps
adc
test
jmp
adc
sar
dec
daa
dec
push
cmp
xor
fsub
cmp
mov
rcl
xchg
retf
xor
scas
xlat
pop
loopne
fmul
adc
cmp
mov
xchg
popf
jmp
popf
mov
push
pusha
dec
or
inc
pop
fdivr
in
dec
inc
fcmovbe
movs
or
movs
nop
stos
outs
lods
shr
fmul
dec
xor
jmp
inc
xchg
outs
icebp
das
fs
icebp
arpl
push
jp
xor
scas
fwait
and
pop
mov
fmul
mov
cmp
aad
(bad)
rol
lea
call
stos
pop
xchg
mov
fwait
int3
movs
or
and
mov
out
jnp
repz
jp
rdmsr
pop
xchg
stos
mov
dec
repnz
sub
mov
mov
sub
clc
add
call
add
sti
adc
test
cld
push
hlt
(bad)
or
cmc
or
inc
add
leave
inc
dec
in
pop
fild
faddp
add
or
mov
mov
repnz
(bad)
mul
pop
mov
cs
jnp
outs
xchg
mov
movs
(bad)
sbb
push
mov
ret
cwde
pop
mov
je
dec
jle
dec
push
jo
lods
fisubr
lahf
rol
data16
outs
jge
or
xchg
and
cmc
xor
lea
lods
popa
arpl
xlat
or
imul
fisubr
push
out
mov
mov
out
sub
mov
loop
pushf
shr
(bad)
test
push
push
fsubr
stos
cwde
test
pop
jg
fucomi
(bad)
mov
pop
push
scas
lds
xchg
imul
outs
sub
popf
cmp
test
or
test
inc
adc
push
js
and
dec
pop
inc
push
clc
sahf
mov
clc
or
scas
push
xchg
mov
mov
lock
dec
lods
pop
lods
sub
ins
cpuid
dec
out
leave
dec
mov
not
fiadd
push
sar
out
jmp
es
xor
imul
and
cmc
sub
call
sbb
mov
and
sbb
mov
adc
outs
out
sub
arpl
bound
sbb
inc
(bad)
es
fisttp
inc
data16
jge
push
jb
test
dec
pop
call
or
lods
test
push
fcomp
xchg
xchg
(bad)
push
outs
and
call
sahf
(bad)
out
sub
aas
cmp
inc
jle
pushf
push
inc
icebp
mov
movs
add
fwait
xlat
mov
sbb
pop
movs
ins
or
cmps
ret
test
icebp
dec
dec
mov
mov
fisubr
loope
frstor
inc
jl
les
sbb
mul
mov
loope
jg
ins
push
mov
push
and
push
pushf
and
hlt
xlat
test
or
(bad)
call
jbe
sbb
sar
push
loope
in
daa
mov
mov
and
cmp
xchg
cli
sbb
lods
not
scas
sub
fucom
cld
jmp
cmps
iret
xchg
jmp
stos
in
cmp
fucomip
jg
dec
gs
mov
mov
sub
or
xchg
pop
sbb
sub
xor
jp
mov
push
inc
ins
mov
js
sbb
sbb
mov
sub
inc
ror
push
cmp
sub
push
loopne
stos
aas
das
or
jl
out
cdq
adc
fbld
xor
lea
cmps
mov
repz
jae
push
or
aam
mov
fwait
jno
or
add
fcomp
mov
loopne
cli
(bad)
mov
movs
push
mov
call
call
mov
jmp
sti
and
(bad)
icebp
xchg
rol
inc
loop
leave
mov
jecxz
xlat
dec
mov
mov
popf
jge
arpl
scas
push
mov
pop
jle
fwait
mov
pusha
mov
pop
pop
sub
dec
sahf
push
aas
call
add
icebp
test
fwait
test
stos
dec
stos
mov
mov
xor
fdivr
cmp
add
imul
dec
xchg
mov
aad
addr16
xor
ja
loope
xor
push
sbb
cs
(bad)
mov
ins
dec
aam
das
rcl
inc
daa
fst
sub
mov
xchg
in
xchg
lods
inc
add
loopne
or
movs
aaa
pop
sbb
enter
mov
xor
js
jne
jmp
(bad)
js
adc
loop
(bad)
loopne
mov
ins
pop
div
dec
call
add
call
call
jmp
in
and
ret
loope
ins
mov
pop
pop
dec
call
mov
push
push
ret
jae
shr
jno
push
bound
popf
stos
call
fdivr
sbb
inc
cmp
adc
add
push
imul
test
fisubr
mov
mov
add
(bad)
push
aas
sbb
dec
lods
jp
movs
and
mov
je
and
xchg
repnz
idiv
mov
cmp
jne
std
xor
push
pop
pop
pop
add
xor
ds
lods
xor
sbb
cmp
aaa
inc
xlat
mov
sbb
dec
in
data16
hlt
dec
pop
clc
dec
shl
popf
js
push
dec
dec
xchg
cwde
sti
fst
fild
retf
jmp
ds
dec
pop
sub
adc
sbb
in
pusha
out
sub
sub
sbb
pop
xchg
sbb
movs
enter
call
ins
int3
xchg
sub
mov
std
out
imul
leave
inc
push
xor
mov
into
inc
push
movs
in
xchg
adc
jecxz
dec
leave
xor
cmp
fs
or
dec
iret
enter
mov
adc
jp
ins
outs
jl
imul
push
rcl
jg
inc
js
gs
and
movs
sub
push
popf
inc
fsubr
jle
arpl
dec
es
jmp
sahf
pop
mov
mov
fimul
ins
popf
pop
ss
jb
sub
pushf
mov
xchg
aad
sbb
jecxz
push
pop
hlt
mov
repz
xor
data16
(bad)
(bad)
push
inc
das
mov
sbb
cli
aaa
ins
xor
dec
enter
in
pextrw
inc
sub
scas
xchg
sbb
inc
xchg
icebp
arpl
aas
mov
rol
jb
mov
inc
(bad)
lods
(bad)
loopne
rcr
sti
and
scas
fs
shr
(bad)
push
mov
inc
or
and
in
inc
mov
xchg
in
add
add
jmp
mov
call
cwde
aas
lds
dec
in
pushf
mov
dec
sub
aad
sbb
lahf
ret
cmp
jnp
into
popa
push
dec
imul
repz
iret
repnz
pop
inc
push
imul
outs
pusha
sbb
stc
or
add
pop
es
jp
call
adc
repz
in
push
and
cmp
jno
cmp
fwait
ret
es
or
xor
fidiv
(bad)
jg
and
retf
sub
and
push
gs
sbb
xchg
dec
mov
cwde
mov
gs
repz
bound
stc
mov
mov
adc
sbb
sbb
ins
ins
jno
xor
dec
aas
outs
inc
push
push
dec
push
popa
repnz
dec
cld
xor
or
sub
xchg
push
ret
shl
ret
xchg
cmps
sub
aam
jecxz
push
and
jmp
jne
sub
mov
xchg
mov
data16
out
fs
pop
add
cmps
inc
add
add
inc
pop
jecxz
pop
or
test
scas
in
fs
sub
push
fdiv
dec
jb
dec
xor
add
outs
arpl
and
jp
es
sub
mov
(bad)
out
mov
inc
in
ret
sahf
cld
mov
daa
jne
dec
aas
movs
das
jno
inc
mov
xor
xchg
aaa
cdq
and
ins
iret
sub
mov
test
jns
dec
retf
popa
push
stos
call
hlt
push
out
retf
ins
jno
pop
add
mov
or
bswap
inc
call
repz
and
(bad)
rcr
call
push
(bad)
or
lahf
sbb
mov
pop
mov
ss
jnp
outs
or
xor
mov
cdq
cld
xchg
mov
loope
xchg
jg
lds
js
pop
pop
add
addr16
fild
adc
test
arpl
sti
push
push
xor
lods
pop
mov
push
sbb
(bad)
fadd
push
jae
push
xor
inc
retf
pop
imul
jecxz
adc
ror
fwait
sbb
mov
cmps
adc
shl
jmp
pop
out
xchg
xor
retf
loope
mov
inc
test
stos
(bad)
mov
sub
push
imul
sar
mov
in
push
stos
jle
sti
mov
pop
bound
lods
inc
imul
adc
sbb
mul
mov
retf
nop
add
sbb
and
sti
sub
dec
stc
sub
jo
out
cld
ror
pop
aad
push
mov
icebp
add
jae
mov
jnp
or
sbb
mov
repz
pop
jno
xchg
dec
sbb
jl
mov
repnz
lock
pop
sub
push
mov
popf
and
mov
or
and
xchg
mov
aas
test
jns
push
enter
and
xor
mov
loope
ror
xchg
sbb
daa
movs
cmp
inc
or
pop
movs
push
inc
mov
inc
cmp
add
xchg
repz
sbb
dec
(bad)
cmps
pop
std
repz
and
add
mov
add
and
test
pop
aaa
js
iret
xchg
or
fsub
ins
sbb
daa
cmp
iret
das
test
pop
pop
sbb
mov
clc
push
rcl
xor
js
mov
arpl
outs
mov
into
inc
jo
repz
xchg
push
jb
pop
aas
push
call
fsubr
jecxz
je
pop
inc
jle
fistp
loopne
xor
jae
enter
pop
popf
push
jmp
sbb
ins
test
sahf
adc
cmp
je
or
push
dec
dec
sub
test
or
mov
addr16
in
fwait
or
cmp
aam
and
hlt
cwde
fisub
xor
pop
stc
ror
retf
pop
dec
das
ins
out
mov
mov
sub
test
mov
mov
xchg
mov
xchg
int
pop
loope
mov
and
rcl
inc
jmp
sub
pop
adc
in
dec
ss
push
fisubr
mov
mul
mov
aaa
rcl
mov
pop
mov
cld
int3
or
and
add
ficomp
mov
daa
xchg
sbb
or
in
(bad)
pushf
mov
aaa
mov
dec
sbb
add
ret
cmps
xor
adc
sar
add
dec
jae
xor
or
mov
push
jmp
stos
test
pop
push
mov
xchg
mov
mov
dec
sbb
aad
xchg
leave
call
cwde
push
std
pop
push
pusha
jl
jo
add
aad
jnp
cdq
dec
or
inc
pop
dec
sbb
mov
repnz
jb
daa
mov
xchg
sbb
fidivr
in
pop
mov
scas
fidiv
adc
adc
pop
inc
or
js
push
or
pop
pop
mov
aas
jl
push
mov
sub
cmp
adc
mov
sbb
adc
pop
(bad)
imul
(bad)
in
dec
ret
mov
sub
adc
mov
xchg
xor
(bad)
adc
mov
repz
fcomip
popf
ss
dec
and
mov
arpl
js
dec
or
mov
add
push
and
out
push
mov
xchg
cdq
push
jns
cdq
pop
cmp
loopne
push
inc
fcomp
ss
sub
(bad)
sub
cmc
dec
cld
loope
les
loop
push
ret
repnz
imul
xor
inc
sar
stc
xchg
lahf
inc
out
mov
cld
xchg
xchg
into
aad
inc
xor
(bad)
pop
sahf
ins
adc
sbb
xchg
cmp
push
stos
aad
jl
repnz
sub
mov
mov
clc
and
dec
jmp
(bad)
dec
cmp
shr
dec
rcr
icebp
dec
ds
ja
lods
jg
pop
imul
test
imul
aad
push
mov
xor
add
je
dec
jno
adc
call
dec
jmp
mov
jb
jecxz
rcl
int
sbb
inc
mov
push
int3
jno
jne
jle
inc
stc
dec
ss
pop
jns
imul
shl
dec
mov
cld
fisub
mov
add
aam
test
dec
xchg
int3
fild
mov
shl
push
jnp
js
leave
addr16
pop
push
or
add
push
jnp
mov
dec
mov
(bad)
mov
cwde
lahf
fldcw
xchg
dec
out
fs
les
xchg
inc
adc
jo
push
push
or
mov
cmp
js
sub
mov
cs
cmp
nop
mov
ret
xchg
not
les
cmp
ss
pop
aaa
retf
into
sbb
push
ins
ret
push
enter
ins
inc
sub
in
push
add
pop
inc
jo
push
hlt
ficomp
sbb
ficom
push
aas
jne
in
cmp
mov
jmp
repz
nop
jnp
pop
pmaddwd
rcl
sub
jne
jbe
xor
in
in
xchg
cld
data16
int3
(bad)
dec
push
push
loop
rep
mov
arpl
bound
cs
loope
in
fcom
dec
and
fmul
jge
shl
sub
pop
sar
xchg
mov
mov
repnz
jno
sbb
mov
test
xchg
dec
xor
icebp
int
xor
jb
pop
jp
pop
cld
addr16
iret
aam
fucomp
jmp
sbb
hlt
mov
dec
mov
pop
in
inc
test
pushf
bound
fst
pop
fidiv
lea
outs
idiv
dec
fdivr
repz
gs
sbb
loope
pop
pop
in
mov
lock
repnz
or
lds
sti
dec
sbb
cli
setns
cmp
repz
jo
pop
lods
and
pop
inc
loope
sbb
push
dec
shr
(bad)
in
jmp
jl
and
std
sub
add
and
push
add
(bad)
push
mov
mov
jg
ins
push
gs
les
js
call
jae
outs
pop
xor
(bad)
sub
iret
sub
lods
push
out
lahf
pop
xchg
ja
sub
std
fnstsw
leave
cld
mov
xor
push
add
stos
(bad)
(bad)
cli
dec
fs
test
dec
ror
outs
jecxz
ret
sti
ins
mov
mov
mov
or
mov
inc
mov
ret
int3
jns
pop
and
mov
or
sar
stos
dec
or
or
xchg
dec
les
and
or
cmp
ins
jle
in
xor
sub
out
dec
jmp
aaa
xor
clc
(bad)
sub
test
sub
or
rcr
xor
es
in
mov
imul
es
fs
pop
fmulp
les
fdiv
push
adc
(bad)
mov
xchg
inc
mov
xlat
push
xchg
les
out
sbb
shl
test
ins
sub
das
hlt
sbb
jge
and
or
ror
pop
and
scas
mov
dec
(bad)
add
push
std
shl
rol
cmps
sbb
icebp
call
push
(bad)
cli
sub
mov
sub
add
jmp
jg
pop
sbb
jmp
in
and
sub
in
xor
(bad)
fisttp
outs
mov
stos
stos
mov
nop
cwde
lods
cmp
push
dec
mov
fistp
pop
pop
pop
mov
gs
out
jmp
or
inc
leave
das
jmp
test
cmps
push
pop
cmps
cmp
pop
xor
bound
inc
cli
fidivr
pushf
stos
sbb
inc
inc
sub
sbb
je
jg
rcr
aas
add
adc
cmp
lock
cmp
push
add
icebp
or
loopne
mov
dec
adc
or
mov
mov
(bad)
mov
sbb
add
mov
inc
mov
(bad)
xchg
icebp
lock
push
sub
xor
and
clc
movs
iret
pop
shl
or
cli
dec
outs
ret
inc
in
and
adc
out
xor
adc
cmp
in
inc
dec
rol
out
and
into
xchg
movs
sbb
inc
loope
sti
call
jle
cmps
xchg
out
and
push
stos
mov
pop
dec
cmc
push
lods
cmps
das
stc
jns
lahf
mov
daa
js
sub
inc
cdq
mov
mov
test
int3
(bad)
sub
or
dec
(bad)
or
push
inc
xchg
(bad)
mov
or
mov
cmp
popf
(bad)
pop
xor
cdq
mov
inc
xchg
add
stos
imul
adc
loopne
out
mov
cmc
push
(bad)
(bad)
mov
dec
pop
adc
std
xchg
push
call
xchg
mov
add
retf
ins
jge
pop
sub
les
jns
jnp
and
mov
(bad)
retf
imul
cs
pop
leave
xchg
and
pop
jo
adc
(bad)
xor
add
xor
add
call
aam
push
dec
lds
mov
sub
mov
push
call
je
pop
clc
push
int3
xor
call
mov
inc
sbb
sbb
cmp
pop
add
pop
push
ins
rcl
lods
mov
mov
fwait
popa
cli
or
test
ss
add
retf
xor
dec
push
xlat
lods
sti
cmps
adc
scas
popf
dec
add
mov
stc
(bad)
outs
xchg
ds
pop
in
les
shl
cs
pop
add
dec
cdq
(bad)
hlt
not
repz
mov
push
add
push
test
shr
aam
xchg
push
adc
inc
pop
fld
mov
and
add
push
int
sbb
call
pop
cs
fidivr
push
ret
dec
fwait
lahf
push
stc
repnz
xchg
scas
push
cmp
jmp
(bad)
pop
call
cli
sti
aas
jo
mov
mov
jno
jmp
aad
adc
cmc
adc
(bad)
mov
xchg
retf
xor
adc
fsubr
dec
or
mov
sahf
mov
jne
imul
or
cmp
cwde
aam
fs
pop
or
mov
sbb
cs
mov
test
pop
jmp
lahf
add
xchg
enter
into
sar
pop
add
iret
int
bound
or
pop
jmp
lea
mov
push
add
repz
jmp
sti
std
pop
push
std
add
mov
sahf
pop
mov
test
push
dec
mov
icebp
enter
les
cmc
sub
sbb
adc
test
scas
xor
sub
pop
and
push
mov
push
lock
xor
sti
and
inc
jmp
push
jne
add
cs
popf
mov
sbb
iret
push
(bad)
test
std
xchg
cmp
jge
mov
inc
into
mov
push
mov
paddb
cmp
or
mov
je
dec
arpl
into
lahf
ror
ret
(bad)
call
bound
adc
push
pop
mov
adc
xchg
mov
adc
lods
pop
add
mov
and
mov
sub
aad
jnp
cmp
int3
(bad)
hlt
push
and
lea
sub
ds
sub
test
rcr
pop
pusha
mov
fwait
cdq
jl
std
push
add
sahf
mov
push
arpl
movs
pop
sub
jns
mov
lahf
iret
mov
lock
push
in
cmp
cmc
add
fisub
xor
mov
bound
cli
pop
mov
mov
cvtpi2ps
outs
sub
stc
in
sub
adc
xor
arpl
xchg
movs
(bad)
push
mov
mov
retf
or
pop
sbb
cmp
movs
fistp
jge
(bad)
inc
or
stos
cmp
sti
clc
fdivr
inc
imul
add
inc
fwait
das
outs
(bad)
out
push
inc
xchg
dec
scas
dec
js
in
into
fsub
scas
dec
test
dec
adc
push
pop
test
inc
or
fisub
push
mov
cli
lahf
ror
or
sub
outs
lock
(bad)
in
mov
push
sub
call
stos
lea
lea
inc
cmc
or
and
sahf
push
adc
push
in
pop
test
hlt
or
mov
call
sub
mov
cmp
hlt
mov
pop
push
fsubr
push
js
pop
popf
xchg
icebp
and
xor
cwde
(bad)
lods
hlt
jge
add
loope
test
mov
in
movs
dec
jno
and
lods
mov
lock
ret
aaa
push
inc
inc
mul
or
sub
pop
es
mov
out
out
sub
or
xchg
push
retf
xor
mov
xchg
push
inc
cmp
sub
pop
loope
test
(bad)
int
cmp
movs
stos
(bad)
xchg
pop
idiv
je
inc
inc
test
jge
out
mov
xchg
out
ss
jae
out
clc
scas
test
mov
cmp
aam
daa
loop
(bad)
mov
sbb
jo
mov
stos
int
adc
mov
ds
pop
test
inc
dec
adc
in
mov
jbe
pop
int3
js
mov
cmp
(bad)
in
xor
ret
gs
jl
dec
sbb
push
mov
jno
outs
cmovno
pop
int
inc
sbb
add
mul
fwait
adc
mov
mov
and
xor
dec
mov
sbb
ss
dec
fimul
push
dec
pop
cdq
mov
int3
xchg
cmp
xor
and
leavew
sar
push
lock
pop
cmp
xchg
mov
mov
scas
sub
jmp
xchg
inc
call
xor
fwait
in
sbb
add
or
pop
ins
dec
cmps
jns
out
mov
dec
mov
pop
lea
(bad)
push
pop
fild
and
push
outs
pop
fsub
ins
(bad)
mov
outs
adc
cmp
in
out
retf
jg
stc
or
jg
enter
(bad)
mov
retf
or
mov
aam
ins
dec
xchg
ret
mov
pop
gs
push
out
out
mov
outs
nop
jge
cmps
lods
mov
dec
mov
ins
mov
mov
sub
lds
or
or
(bad)
xchg
pushf
mov
sbb
test
mov
aas
jns
jl
inc
or
mov
sbb
pusha
xlat
pop
outs
pop
or
sar
jmp
sbb
mov
loop
pop
stos
movs
ret
mov
ror
jb
out
movs
mov
icebp
jno
out
(bad)
shl
movs
aaa
adc
ficom
cmp
fcmovnb
xor
outs
jmp
cld
repz
pop
call
addr16
mov
add
ins
popf
and
xor
xchg
(bad)
and
je
jnp
nop
test
gs
lock
mov
loopne
ins
xchg
(bad)
cdq
ret
add
je
mov
mov
xchg
mov
jg
fld
inc
pop
xchg
clc
(bad)
add
inc
jb
in
retf
xchg
stc
mov
(bad)
cld
in
rcl
push
mov
adc
push
out
test
xor
fstp
jp
sub
(bad)
hlt
pop
cmp
jne
xchg
loopne
add
sub
je
pop
xchg
jae
clc
shl
push
cld
imul
mov
dec
jae
and
ficom
leave
xor
pop
loopne
xor
xchg
cmp
adc
std
jnp
popa
lds
inc
div
and
pop
aam
loop
into
outs
jae
call
imul
outs
mov
leave
and
inc
sub
cli
repz
xchg
mov
and
and
push
push
sar
sub
pushf
fld
dec
daa
jge
add
adc
cmps
lock
adc
lods
xchg
add
js
cli
and
lea
pop
ja
jns
jns
push
jmp
adc
loopne
push
scas
add
imul
or
dec
sbb
fdivrp
ins
xchg
mov
jo
sbb
xor
fwait
ror
dec
je
aaa
mov
xchg
mov
shr
(bad)
(bad)
jo
int
bound
and
popf
retf
int3
lock
mov
call
jl
push
popa
xor
xor
out
and
enter
push
jmp
push
hlt
movs
bound
dec
outs
pop
call
pop
push
inc
les
imul
add
fs
mov
js
add
jne
and
pop
hlt
xor
les
aad
jp
cwde
add
loopne
add
out
sub
xchg
cmps
daa
xchg
add
xor
sbb
add
outs
fisttp
dec
aam
sub
push
jle
sub
icebp
pop
shl
jo
jbe
push
idiv
or
pop
retf
sub
inc
dec
xor
mov
adc
ret
lods
pusha
cli
jl
xor
aas
fcomi
mov
xchg
gs
mov
mov
sub
cmps
dec
pop
push
mov
aad
lahf
sbb
xchg
add
xchg
pop
call
sub
pop
dec
add
mov
add
pop
pop
push
lock
in
dec
mov
retf
mov
jecxz
adc
sub
add
pop
loop
cmc
inc
(bad)
cmps
dec
aad
clc
xor
pop
ret
xor
sbb
les
cmp
es
dec
mov
and
jg
call
push
mov
cdq
stos
mov
rol
or
fdiv
or
popf
sub
mov
in
fsubr
fsub
jne
rcl
(bad)
dec
pushf
or
sbb
adc
xchg
aad
ret
sar
inc
lock
hlt
ins
xor
pop
fadd
repnz
pop
xor
adc
xchg
and
mov
sub
sub
inc
inc
popa
mov
push
dec
xchg
jle
adc
ss
bsf
(bad)
fidiv
movs
dec
int
add
mov
or
add
popa
sub
inc
cmp
or
jecxz
adc
mov
dec
loopne
out
or
xchg
jmp
data16
pop
and
shr
out
mov
jno
push
mov
(bad)
clc
std
ds
xor
jno
mov
sbb
pop
mov
leave
sbb
loop
mov
data16
shl
cmps
and
pop
lahf
nop
enter
rcr
mov
(bad)
int3
test
inc
push
dec
dec
data16
xor
mov
js
jmp
addr16
jmp
sub
pop
xchg
loopne
xchg
loope
shl
lods
out
loope
pusha
(bad)
mov
push
stc
dec
out
js
mov
outs
ds
ins
add
sbb
shr
std
mov
mov
and
mov
inc
stos
pop
(bad)
pop
xor
jno
mov
dec
xor
jns
mov
fistp
pop
das
mov
outs
stos
cmp
push
das
cld
jnp
jp
add
push
adc
cmovs
out
jne
adc
and
mov
mov
dec
ror
push
sti
xor
adc
ja
xchg
aam
ins
pop
fisttp
and
repnz
aad
dec
mov
rcl
out
loop
fisttp
and
into
xor
ror
popf
sbb
rol
mov
movs
call
sub
(bad)
imul
test
pop
xor
pop
fild
mov
adc
div
call
mov
push
push
dec
call
sbb
nop
mov
and
(bad)
xchg
fs
pop
sbb
(bad)
ja
scas
jns
jecxz
popa
movs
and
jp
or
pop
cld
retf
repnz
xor
add
out
cld
into
into
mov
mov
xor
or
gs
or
stc
xchg
and
sar
add
mov
dec
dec
jp
(bad)
jg
or
cmp
les
cmps
mov
mov
mov
ss
pushf
sub
push
cmp
(bad)
mul
rol
nop
rol
pushf
or
mov
fistp
fdivr
into
in
xchg
out
jp
jmp
stc
ret
sub
out
or
jg
cld
jns
popa
outs
sbb
mov
inc
in
in
adc
pop
cmp
jae
adc
jg
or
mov
adc
jecxz
add
dec
sti
ret
adc
jae
mov
or
add
fwait
cmps
sbb
sub
mov
and
sub
mov
imul
cmp
ficom
in
test
jge
pop
mov
xor
sbb
in
cmp
mov
ja
push
mov
pop
mov
dec
movs
push
pop
call
fist
fcomp
mov
loope
ja
xchg
or
rcr
fnstcw
inc
cwde
xor
push
int
pop
repnz
setbe
push
and
mov
cmp
jecxz
movs
gs
int
xor
cld
pop
outs
add
cld
xor
dec
sub
dec
jle
out
sar
dec
stos
dec
sub
loop
sub
mov
in
fbld
mov
das
test
ficomp
mov
or
icebp
xchg
sub
daa
adc
pop
mov
das
movs
test
lds
data16
sbb
jle
daa
in
mov
icebp
popa
push
div
cmp
ja
dec
add
scas
push
add
pop
sub
retf
sahf
shl
inc
stos
rcl
mov
jmp
ins
lods
fnstsw
aas
lahf
cmc
mov
lock
pop
ins
dec
mov
mov
jmp
mov
mov
dec
pop
pop
xchg
and
repnz
fisub
out
push
lods
mov
mov
mov
leave
sar
call
adc
pop
add
xor
or
adc
xor
(bad)
xor
jp
xchg
jge
mov
fstp
lahf
retf
out
adc
xor
pop
push
mov
test
fisttp
pop
retf
test
push
push
(bad)
(bad)
leave
xor
pop
int
stos
sub
sbb
dec
stos
xlat
push
cmp
add
stos
retf
fild
(bad)
mov
jmp
aad
jbe
mov
cli
retf
iret
cmp
and
cmc
xor
jmp
ss
xor
mov
push
jae
pop
enter
inc
push
mov
mov
jecxz
nop
dec
push
out
lea
pop
adc
fbstp
jne
imul
gs
xor
in
sar
iret
pop
clc
and
cmp
adc
xor
retf
dec
jp
in
clc
jmp
mov
jecxz
or
and
xchg
adc
hlt
int
popf
out
xchg
ja
sti
or
and
int
out
mov
jb
mov
jle
xor
fidivr
call
in
sub
(bad)
rol
fmul
repz
stc
stc
cmc
popf
push
fild
repnz
not
mov
jns
or
rcl
loop
iret
icebp
ss
lods
and
sub
leave
repz
sti
fwait
stos
add
lock
mov
mov
mov
or
dec
and
pop
and
dec
stos
in
addr16
call
test
jge
xlat
imul
push
jnp
ins
jnp
mov
add
dec
sub
push
je
adc
and
fimul
cli
mov
adc
mov
sub
cmp
xchg
mov
pop
mov
mov
mov
cli
inc
mov
sub
mov
mov
inc
outs
add
xchg
pmulhuw
or
pop
inc
out
dec
inc
sub
arpl
test
mov
add
loop
shl
das
mov
add
mov
add
out
(bad)
mov
dec
loop
add
add
push
fisttp
lock
jecxz
mov
popa
call
xor
adc
std
stos
jns
pusha
pop
mov
cdq
cmc
adc
call
inc
mov
int
mov
test
adc
and
sub
jae
jp
push
fstp
ret
or
mov
inc
xchg
into
lods
add
pop
call
and
mov
push
in
addr16
lods
mov
push
movs
out
cmp
rcl
pop
jmp
mov
dec
iret
dec
jbe
rol
inc
sbb
push
mov
jbe
xor
sub
xchg
popa
jb
popa
xor
mov
mov
adc
and
inc
pop
pop
dec
mov
adc
jmp
sub
repz
leave
sar
test
push
int3
and
pop
pop
cwde
mov
leave
mov
adc
push
inc
sbb
fs
jmp
dec
push
jmp
inc
push
call
mov
outs
jmp
div
mov
jg
sub
sub
(bad)
mov
call
pop
daa
push
xor
push
loop
loop
push
loopne
pusha
js
xchg
fs
sbb
out
pushf
mov
push
pop
lahf
xchg
xor
push
dec
popa
push
push
jno
aaa
cmps
call
test
enter
pusha
(bad)
imul
loopne
pop
in
xchg
data16
mov
jl
cld
mov
aaa
pop
cmp
jecxz
das
and
repz
pop
jecxz
loopne
or
fcomp
ds
dec
and
sub
int
xor
enter
stos
cmp
cs
mov
pop
fiadd
aas
dec
loope
lds
imul
fstp
rcr
lahf
pop
jge
xor
mov
dec
(bad)
icebp
dec
xchg
mov
gs
mov
cwde
jnp
push
mov
adc
je
fldcw
push
mov
cmp
xor
hlt
les
xor
mov
ja
dec
cmps
xor
movs
dec
out
xchg
inc
js
scas
test
add
or
test
jne
sub
enter
sub
sub
jns
fisubr
jl
scas
xchg
loope
mov
mov
rcr
mov
mov
inc
repnz
test
jo
out
test
adc
ror
mov
sub
gs
mov
sti
cmp
inc
pop
xor
cli
push
inc
stos
ret
lock
and
xchg
ret
arpl
jg
call
pop
xor
fist
jne
test
xchg
push
nop
shl
fisttp
or
and
and
jmp
stos
xchg
cmps
daa
cli
cmp
shr
jmp
test
rcr
cdq
test
cwde
push
mov
int3
outs
ins
cdq
cli
repz
cld
cmp
loope
push
lods
xchg
pop
jne
jl
ja
pop
pcmpgtd
scas
inc
in
add
and
push
lahf
call
dec
jno
ss
lahf
jg
in
mov
in
pop
adc
adc
cmp
fsubr
pop
movs
imul
cmps
fwait
push
mov
ror
dec
std
pop
or
and
loop
and
dec
mov
in
xor
jle
iret
retf
in
rcl
jle
pop
sub
inc
call
push
stos
dec
outs
pop
in
sub
test
les
mov
pop
adc
push
sbb
imul
scas
lock
aam
pop
dec
mov
jo
call
fmul
loop
cli
daa
fdivr
inc
mov
retf
and
mov
or
arpl
(bad)
push
stos
mov
retf
das
cmps
hlt
lock
or
movs
pop
sbb
int
leave
adc
or
inc
dec
mov
push
pop
jge
or
pusha
mov
jmp
add
mov
xchg
adc
test
adc
shl
scas
add
std
ds
cmp
je
(bad)
stos
xchg
sti
xor
push
aas
xor
push
mov
mov
lea
mov
inc
addr16
jle
loope
je
xor
aaa
cmp
or
or
das
cmc
mov
fisttp
and
xor
leave
jle
out
adc
xchg
aaa
and
out
sti
js
sbb
sahf
xchg
jne
(bad)
sub
adc
sub
fcmovbe
or
adc
dec
(bad)
adc
adc
pop
push
xlat
int
aad
imul
fisttp
cmp
(bad)
arpl
jmp
in
cmp
dec
stc
cwde
(bad)
leave
test
outs
popf
(bad)
inc
aam
aam
xor
mov
dec
inc
retf
hlt
jns
fldcw
jmp
(bad)
call
popf
in
ins
add
push
scas
lahf
cs
bound
pop
sbb
mov
mov
adc
pusha
mov
push
or
or
sub
cmps
push
mov
scas
test
sbb
outs
mov
daa
jno
pushf
lock
or
jg
ja
repz
leave
add
adc
arpl
retf
xchg
sub
and
sbb
cmps
sub
aaa
shl
add
push
test
cmps
jmp
cmc
fdiv
hlt
xchg
pushf
test
jge
fisubr
nop
cmps
push
dec
push
adc
jb
cld
inc
div
popa
pop
adc
jmp
lods
mov
ins
cmps
jnp
shl
pop
cdq
popf
inc
xchg
das
cmp
out
mov
ja
dec
pop
pop
add
aas
mov
in
mov
lods
rcl
xchg
sub
pop
movs
cmps
mov
loope
sub
test
retf
ffree
mov
push
hlt
repnz
adc
jmp
mov
aaa
adc
sar
inc
test
cwde
cmp
jp
inc
mov
push
mov
out
(bad)
sub
inc
push
retf
cmp
js
jle
xchg
inc
jns
jmp
imul
pop
mov
into
aad
cmps
inc
jb
inc
int3
mul
pop
mov
cmp
scas
and
or
sub
adc
cs
xor
dec
mov
movups
mov
cwde
popfw
aas
xchg
or
jmp
jnp
idiv
jae
lods
push
hlt
lods
fisttp
jl
dec
mov
ret
(bad)
fiadd
dec
jae
nop
popa
push
std
and
repnz
pop
mov
sub
icebp
sub
pop
jbe
mov
test
mov
mul
mov
pop
push
(bad)
mov
retf
sahf
ret
ror
xchg
test
and
or
(bad)
mov
cli
push
adc
pusha
dec
fs
mov
push
nop
xor
sbb
jbe
adc
lds
fisub
sbb
pop
pushf
rcr
mov
inc
sub
fstp
std
xlat
xor
repz
out
mov
or
retf
fnstenv
push
push
push
inc
ins
ins
rcl
outs
inc
ret
mov
fidivr
ret
mov
and
imul
out
adc
dec
iretw
rcl
inc
hlt
mov
inc
pop
adc
add
jb
imul
mov
rcr
push
mov
xor
inc
cmp
sub
sub
adc
push
test
ficom
sahf
ror
mov
push
(bad)
pop
pop
cli
ds
lods
xlat
hlt
je
dec
push
mul
mov
add
fistp
sub
push
test
js
ins
out
nop
cmc
sbb
jmp
icebp
inc
pop
les
rcr
push
in
cmp
test
idiv
gs
xor
pushf
retf
mov
and
ja
(bad)
add
mov
iret
outs
adc
push
stos
mov
(bad)
bound
fwait
xlat
sbb
int
ds
xchg
dec
sbb
cmp
sbb
lock
dec
lea
push
pop
mov
xor
cli
arpl
xor
in
mov
add
setbe
fs
dec
div
nop
fs
pushf
movs
add
inc
mov
(bad)
shl
cmp
xchg
or
(bad)
stos
mov
test
out
or
leave
fld
cmp
jne
push
xchg
pop
test
movs
rcl
mov
(bad)
repz
fwait
js
out
jno
adc
gs
aam
test
outs
push
mov
dec
shl
xchg
rcl
push
cdq
xor
xlat
call
out
or
inc
mov
jp
sbb
mov
add
or
stc
jecxz
mov
imul
mov
aad
mov
pop
rcl
cmps
rcr
(bad)
jae
test
xor
pop
mov
inc
cdq
dec
and
push
fs
out
or
mov
push
jmp
mov
das
rol
adc
xor
loope
inc
call
pop
shr
pop
lock
daa
mov
repz
arpl
repz
push
fnstcw
adc
mov
(bad)
mov
(bad)
cmc
in
test
adc
stos
dec
sub
fs
push
fdiv
cs
ss
cwde
or
jle
and
shr
out
jo
dec
adc
fsincos
mov
mov
int3
icebp
lea
mov
adc
mov
enter
sub
lds
(bad)
lods
mov
pop
jmp
aaa
test
xor
jb
mov
adc
xor
int3
pop
pop
dec
dec
cld
loop
mov
mov
fsub
cwde
or
bound
fst
xlat
fucomp
push
mov
sub
sbb
adc
jge
jl
adc
mov
(bad)
pop
pop
lods
mov
call
dec
popf
lods
and
jbe
cmps
dec
retf
clc
repz
and
cmp
adc
out
xchg
sbb
jle
cmp
cmp
sti
es
add
fldcw
add
and
cmps
xor
outs
jo
in
les
xor
cdq
mov
fild
in
lea
cmp
loopne
and
pop
ror
js
sub
sahf
and
mov
outs
add
inc
push
adc
loop
sahf
dec
dec
xor
add
ret
inc
div
or
repnz
pop
(bad)
pop
and
hlt
xchg
mov
add
outs
xchg
xor
(bad)
call
mov
sub
inc
xor
dec
push
shl
pop
and
inc
mov
inc
xlat
push
and
push
movs
pusha
(bad)
cmp
or
cmps
cmp
sbb
cs
lock
not
mov
fwait
scas
fstp
outs
add
xchg
pop
(bad)
shr
push
(bad)
fstp
inc
adc
and
sbb
push
add
ins
mov
mov
call
es
push
add
inc
cmc
iret
test
dec
cmp
dec
mov
push
sbb
aaa
mov
ins
int
rcl
leave
mov
pop
push
or
mov
retf
sub
jnp
rcl
add
outs
push
scas
xchg
inc
int
sub
add
sub
cdq
xchg
mov
pop
inc
xchg
add
jle
pop
inc
jb
push
dec
repz
jns
mov
arpl
inc
adc
mov
or
rcl
enter
dec
ret
test
pop
jge
jae
aam
jne
add
loopne
adc
outs
shl
push
cwde
dec
rcr
scas
leave
arpl
mov
sub
shl
adc
test
loop
inc
ins
jns
mov
inc
scas
out
add
bound
xchg
call
push
into
in
or
mov
idiv
push
leave
shl
test
adc
pop
mov
mov
pop
cmp
inc
pextrw
jno
jg
stos
shl
inc
pop
leave
mov
lds
sbb
push
xchg
jge
add
xlat
(bad)
push
rcr
retf
je
push
fs
ret
or
and
(bad)
and
xor
or
addr16
popf
adc
mul
jnp
add
adc
out
adc
fdivr
adc
add
add
(bad)
out
fcomp
call
add
popa
(bad)
fsub
cwde
imul
xchg
mov
cwde
jge
cmp
lahf
pop
(bad)
sbb
fld
fnstcw
mov
xchg
jo
adc
ins
pop
add
push
in
and
fistp
mov
repz
jae
mov
and
sahf
and
(bad)
out
cmp
lahf
fcom
xchg
addr16
imul
dec
push
inc
das
loope
into
push
int3
mov
movs
pop
dec
push
arpl
sub
(bad)
push
nop
bound
hlt
jne
jne
aaa
cld
mov
out
add
cwde
jbe
push
pop
gs
cli
shl
mov
dec
sub
or
inc
sub
ss
mov
mov
xchg
inc
shl
mov
scas
retf
pop
xor
test
rcl
xchg
jae
je
add
movs
lods
and
jb
mov
xor
sbb
jae
xor
shr
jno
ds
jns
pusha
outs
sub
lds
lds
or
or
gs
jbe
inc
jmp
icebp
(bad)
div
outs
movs
push
enter
imul
into
fadd
test
arpl
bound
cld
mov
dec
pop
das
data16
dec
xchg
mov
lods
scas
adc
mov
cmps
jns
les
or
push
ret
jg
sar
cmp
sub
arpl
or
mov
ins
cmp
jg
call
loope
fstp
or
jnp
aas
out
enter
dec
ror
dec
jge
push
retf
into
jo
inc
cmp
dec
push
(bad)
mov
cs
cmp
cmp
or
xor
fsubr
dec
dec
loope
repz
clc
dec
data16
add
fisubr
sub
ret
push
idiv
lea
push
jnp
push
sub
mov
arpl
(bad)
sbb
xchg
cmp
mov
jae
xor
das
cmc
jb
test
stc
mov
push
aaa
mov
push
test
lds
out
hlt
cmp
pop
jmp
jno
add
xor
sbb
sahf
imul
mov
xor
daa
jne
push
or
pop
jl
adc
or
int
cld
test
loop
push
fs
imul
adc
add
pop
or
mov
call
xor
fidivr
xchg
and
xchg
push
stc
mov
sub
ins
jge
pop
ss
and
ret
jmp
jge
repnz
xor
xchg
pop
inc
and
mov
inc
fisub
add
sbb
enter
and
in
ret
cmps
pop
out
pop
repz
add
mov
mov
fwait
push
sbb
dec
in
arpl
outs
adc
cmp
push
std
cwde
retf
(bad)
fnsave
xchg
mov
cmp
or
aad
(bad)
out
sub
shl
shl
scas
push
or
and
jmp
ficomp
mov
mov
mov
mov
ret
mov
aas
jle
repnz
pusha
add
cli
and
or
leave
inc
fs
dec
mov
es
jle
movs
mov
jo
xor
adc
stos
in
dec
jge
int
(bad)
push
test
jo
inc
xchg
leave
stos
dec
or
push
aas
sbb
inc
(bad)
loope
ins
sub
cmps
je
shl
sahf
cmp
or
dec
dec
xor
fs
in
or
cmp
cmp
jae
mov
sub
js
xchg
(bad)
xor
es
push
pop
test
test
jge
xorps
out
fwait
sbb
add
(bad)
sub
mov
out
sbb
inc
push
jbe
or
xlat
mov
xor
jecxz
push
and
cmps
dec
clc
pop
cmp
cs
es
sbb
adc
outs
xchg
sub
arpl
rol
push
push
daa
push
sbb
jo
stc
ja
(bad)
jmp
jae
xor
add
dec
imul
ret
xchg
fsub
inc
sbb
or
sub
cld
test
mov
and
push
push
test
lods
test
mov
push
add
adc
imul
add
pop
jb
cmps
dec
and
or
stos
in
out
pop
jne
lea
sub
test
mov
xlat
mov
dec
lods
pop
out
mov
sub
adc
mov
cdq
ins
xchg
xchg
xchg
inc
pop
add
add
fild
bound
dec
mov
adc
inc
inc
sub
fldenv
sti
sub
or
rol
dec
pop
test
test
jo
arpl
or
adc
(bad)
sub
out
sbb
pop
mov
in
inc
xchg
gs
pop
lahf
shr
push
loope
enter
loop
lds
imul
stc
adc
inc
lds
adc
mov
hlt
sub
xchg
aad
or
stos
mov
adc
pop
clc
cmp
addr16
sbb
or
clc
dec
ret
out
cmc
push
aas
inc
rcl
jp
psraw
mov
push
arpl
retf
movq
ret
jmp
div
add
(bad)
rcl
push
cmovg
popf
xchg
mov
add
cdq
sub
aad
add
adc
das
lea
pop
in
mov
enter
xchg
or
add
add
outs
dec
xlat
sbb
out
jmp
jl
mov
and
mov
sbb
xchg
(bad)
out
inc
dec
fwait
adc
mov
(bad)
std
push
jecxz
(bad)
pusha
loope
pushf
dec
dec
xor
push
bound
loop
inc
rol
push
mov
sbb
fcos
and
ss
xchg
sbb
jle
inc
mov
test
inc
ds
clc
push
xchg
or
das
add
pop
xchg
xor
mov
es
mov
popf
bound
rol
xchg
mov
lds
fstp
ret
test
sub
call
mov
cld
xchg
pop
cvtps2pi
gs
sub
(bad)
push
js
xchg
sahf
cmp
std
mov
or
mov
push
mov
cmps
sbb
inc
je
sahf
push
ret
inc
into
inc
adc
inc
fs
add
leave
enter
repnz
xchg
je
jnp
fsubr
out
js
mov
mov
cmp
(bad)
xor
mov
test
sbb
fimul
ins
sbb
dec
sbb
adc
pop
js
test
pop
inc
das
push
movs
fst
xchg
sti
sub
mov
leave
sbb
mov
icebp
dec
data16
(bad)
inc
cmp
fs
outs
push
ret
sub
cmc
jg
aam
cmp
push
aam
js
es
jle
repz
xor
adc
jmp
cmp
inc
adc
retf
fist
mov
mov
mov
inc
retf
imul
mov
ss
dec
out
sub
jecxz
inc
mov
sub
imul
pop
inc
xchg
in
xor
loop
or
in
fldcw
inc
push
mov
cmps
dec
sub
inc
shl
add
mov
xor
sub
stos
test
sbb
fwait
cmp
and
loopne
clc
cmc
jno
test
xor
and
and
inc
retf
test
shl
mov
mov
rcr
ss
test
retf
imul
adc
cmc
dec
(bad)
mov
js
es
std
jbe
pop
push
jecxz
or
cmp
gs
test
jnp
push
pop
stos
stos
and
lea
out
mov
aad
pop
(bad)
cmc
cmp
push
cmp
idiv
mov
int3
cmp
pop
and
push
lods
fadd
(bad)
sbb
shl
mov
mov
xacquire
push
inc
je
pop
addr16
pushf
jbe
lds
iret
push
or
scas
movs
pop
aas
hlt
lock
sub
fadd
jg
test
das
adc
xor
outs
inc
test
mov
sbb
jnp
or
shl
enter
aam
mov
xlat
fwait
mov
outs
xor
xchg
mov
or
mov
pop
ds
push
fist
xor
enter
test
call
fxch
sub
or
mov
xor
sub
push
ficom
sbb
(bad)
aas
jb
push
jl
iret
inc
xor
push
lahf
xor
dec
adc
das
clc
mov
push
lock
mov
movs
enter
dec
jo
les
cmp
xchg
std
jne
fs
pop
push
stos
inc
jns
std
pop
in
xor
sbb
in
popa
mov
sub
inc
xor
adc
push
cmp
aam
jae
pop
jnp
dec
call
cld
fist
and
fistp
xchg
xchg
ret
sysret
cmp
call
mov
mov
outs
jmp
add
das
jmp
cmp
(bad)
mov
or
add
out
xchg
wbinvd
test
xor
lds
cmp
mov
inc
ins
push
cmps
clc
or
adc
out
sbb
xchg
xchg
mov
(bad)
inc
mov
sbb
mov
inc
fstp
push
xor
mov
mov
sbb
jb
ss
dec
dec
push
cmp
icebp
aaa
sti
mov
or
nop
out
dec
sbb
xchg
sar
mov
cmp
into
mov
pop
addr16
js
push
cwde
xchg
and
shl
push
sbb
mov
mov
inc
dec
xor
inc
mov
js
stos
pop
movhps
ficom
cmp
loop
aad
ret
shr
outs
lds
out
pop
jns
retf
out
(bad)
push
cmp
fs
ficom
psllq
mov
cli
shl
cmp
add
xchg
push
into
inc
fst
sbb
or
call
in
imul
mov
jae
sbb
das
or
fs
lahf
mov
mov
pop
sbb
and
fimul
jge
movs
aad
js
repz
push
idiv
lahf
cmp
cdq
mov
jns
and
cmp
inc
xchg
aam
xchg
jne
mov
aad
loope
dec
xchg
sbb
jo
mov
in
push
fild
adc
sub
sub
lods
int3
xchg
jo
jmp
(bad)
inc
push
and
(bad)
bnd
ins
and
push
push
sub
adc
add
mov
mov
dec
in
out
mov
jg
pop
inc
test
xor
jp
(bad)
ins
add
aad
(bad)
cdq
ins
jecxz
mov
cmp
fiadd
iret
add
arpl
out
xor
and
cwde
test
or
and
sar
(bad)
mov
adc
adc
adc
sbb
stos
out
sub
(bad)
aad
mov
sub
mov
test
inc
adc
inc
dec
(bad)
cmp
arpl
popf
mov
mov
(bad)
lods
cs
cmp
inc
adc
and
outs
mov
pop
addr16
inc
int
jnp
mov
push
xchg
or
mov
inc
data16
push
jmp
add
movs
sbb
sub
pop
cmp
add
or
mov
or
pushf
stos
std
ds
sub
add
scas
xchg
adc
fdivr
push
jnp
add
add
popf
xor
xchg
mov
pop
out
inc
xchg
adc
mov
fadd
shr
sbb
xor
sbb
loop
cld
mov
lods
loope
or
sub
mov
addr16
mov
(bad)
or
das
push
cdq
aad
pusha
mov
xchg
add
xor
cmps
test
stos
rcr
cmp
ficom
jns
mov
mov
aas
retf
outs
or
jl
dec
xchg
(bad)
leave
and
in
pop
(bad)
test
out
out
dec
mov
cmp
cmp
enter
ss
scas
adc
push
sub
push
inc
ss
mov
shl
cdq
mov
mov
cwde
dec
les
jns
mov
jmp
xor
movs
pop
add
into
add
fsub
lods
adc
pop
mov
sbb
gs
mov
ins
pop
test
jle
test
cs
fwait
pop
rcl
mov
ins
mov
retf
xor
xor
inc
inc
(bad)
xchg
dec
or
(bad)
lds
push
xchg
shl
adc
ins
and
test
inc
aam
test
rcl
and
xor
xor
imul
cs
xlat
outs
mov
jae
mov
mov
sub
hlt
adc
pop
push
pop
mov
jmp
outs
mov
fdivr
or
push
sbb
inc
cmc
dec
call
cmp
dec
adc
or
daa
frstor
sub
pop
fcomp
fwait
retf
add
mov
inc
xchg
add
mov
fnsave
xchg
imul
cdq
std
mov
shl
cmp
dec
mov
in
pop
mov
pop
add
lea
std
mov
lock
rcr
cdq
test
pusha
lock
or
fisubr
xor
inc
or
sbb
and
and
fidivr
ds
cmc
cmps
xchg
lods
mov
lods
mul
inc
call
xchg
(bad)
cli
std
mov
dec
call
lods
cmp
fs
rcl
test
dec
jl
(bad)
mov
sub
or
mov
test
pop
mov
cli
test
loop
dec
(bad)
(bad)
jl
pop
adc
int
mov
lds
repnz
jno
xchg
outs
sub
test
mov
lods
mov
jo
lods
aam
out
loopne
js
xchg
xor
adc
inc
or
dec
outs
(bad)
gs
into
push
loop
imul
dec
dec
and
pop
cmps
test
ja
sub
into
xor
enter
push
jp
loop
icebp
or
inc
xchg
mov
inc
scas
jno
mov
leave
add
pop
and
bswap
push
js
dec
pop
sub
xchg
(bad)
cld
in
push
test
jns
pop
out
ja
xchg
pop
gs
cmp
les
ins
jge
pop
fucom
mov
cmp
aaa
fadd
ins
fsubp
mov
mov
outs
daa
cmp
cmp
push
fldcw
adc
adc
sar
fistp
cmps
movs
sbb
sbb
pop
pop
fwait
sub
in
(bad)
xor
xchg
sub
ss
xchg
out
push
jle
scas
daa
popf
outs
ins
or
fs
in
cmc
das
pusha
xor
sub
sbb
test
add
in
jo
push
push
push
push
loopne
mov
mov
or
pop
mov
outs
inc
sbb
push
in
ds
stos
pop
mov
sub
stc
sbb
or
xchg
into
es
mov
xor
es
fwait
or
mov
push
mov
in
retf
push
leave
test
jge
inc
lea
(bad)
(bad)
rol
call
ret
mov
sub
fistp
mov
cmps
lds
inc
loopne
xor
fs
scas
sbb
outs
stc
jg
add
dec
adc
cmovns
or
outs
cli
out
adc
sbb
(bad)
jmp
nop
jecxz
sbb
les
pushf
addr16
test
rcr
mov
mov
dec
movs
aas
(bad)
int
gs
or
jg
or
neg
cmps
sbb
mov
cdq
sub
sub
jns
xor
lock
push
aaa
sbb
dec
out
mov
and
inc
cmp
ret
idiv
je
jns
aas
int
daa
push
push
pop
fwait
xchg
dec
clc
leave
rcl
lock
jecxz
pop
mov
or
ror
dec
push
xchg
imul
repz
xor
adc
inc
cmp
add
(bad)
lahf
xchg
dec
mov
sub
xchg
xchg
stc
inc
mov
lahf
mov
sub
loope
stos
lods
cmp
jp
sar
and
(bad)
mov
cdq
cmp
inc
mov
leave
or
adc
ret
xor
mov
jmp
or
dec
push
jae
inc
xor
lds
repnz
jae
jecxz
xor
mov
xor
in
add
pop
shl
or
rcr
adc
retf
xor
xchg
pushf
push
cmc
int
jbe
inc
sub
fsubr
jb
imul
push
mov
cmc
(bad)
dec
jb
ret
movs
mul
fwait
sti
into
out
push
mov
xor
aaa
ins
clc
cmp
lock
mov
jge
mov
mov
add
lds
arpl
fwait
nop
cli
jge
jl
(bad)
cmps
inc
dec
and
add
and
push
and
mov
sbb
inc
lea
cmp
xor
mov
je
adc
fcomp
inc
movs
setno
mov
xchg
scas
push
inc
sbb
jp
xor
shl
jnp
and
jg
repz
xchg
jle
bound
pop
je
inc
out
adc
xchg
jg
or
push
adc
and
fisub
mov
cmp
xor
sti
fwait
cmp
gs
retf
inc
xchg
loopne
mov
bound
nop
fst
push
inc
mov
inc
imul
call
push
stc
or
pop
lea
shl
dec
int3
add
add
sbb
ja
sbb
(bad)
push
loopne
sub
stc
push
or
jp
add
push
pop
or
jmp
fsub
dec
pop
adc
pop
mov
mov
mov
push
mov
jno
repnz
enter
dec
pop
mov
gs
cmp
cmps
xchg
js
imul
imul
clc
mov
test
pop
js
lods
push
arpl
jp
push
pop
arpl
loop
outs
cli
sub
rol
and
jne
mov
out
icebp
push
push
dec
bound
cmps
push
and
adc
imul
pop
push
mov
inc
fmul
imul
dec
fmul
aad
add
or
pusha
aad
pop
scas
in
mov
push
je
(bad)
fisttp
jb
retf
add
imul
stos
out
push
push
mov
in
lods
fcom
ss
imul
(bad)
aam
loope
cmc
push
mov
pushf
dec
out
cld
inc
retf
adc
int
addr16
pushf
jle
xor
adc
ret
test
cmp
cmps
cld
pusha
dec
gs
xor
xchg
lods
cmp
out
arpl
pop
sbb
push
sbb
lahf
adc
jns
inc
lea
outs
xor
xor
mov
jp
fsub
pop
(bad)
(bad)
push
popa
in
sub
jg
cmp
fld
ja
ret
rcl
push
mov
in
or
push
outs
call
and
out
adc
adc
(bad)
cmps
mov
mov
test
and
and
inc
aam
mov
mov
push
popa
cmp
ds
scas
adc
pop
mov
cmp
xchg
and
xchg
popw
xchg
cwde
mov
mov
repz
ja
xor
sbb
jmp
fadd
mov
push
pop
jns
jmp
push
cdq
inc
push
cmps
mov
push
push
jle
popf
inc
mov
out
call
pushf
mov
(bad)
in
mov
push
dec
lods
jne
ret
cmp
and
jbe
ins
xchg
pop
imul
push
pop
mov
inc
in
xor
add
call
rcl
push
in
imul
scas
mov
or
mov
dec
(bad)
fs
les
lds
jns
in
mov
jp
in
adc
mov
inc
sbb
sub
xlat
into
push
cmp
das
inc
xor
imul
sbb
lock
in
pop
dec
jnp
push
scas
sbb
aaa
push
sbb
(bad)
aam
leave
scas
fwait
jmp
stc
jp
sbb
iret
add
jb
ret
xchg
iret
sub
cmp
dec
sub
cmp
stos
sub
xor
dec
mov
cmp
adc
pop
push
stc
and
aaa
jp
sub
pop
daa
pop
jnp
inc
fucomi
pop
or
in
mov
cmp
push
and
sbb
jp
jo
jge
ret
and
dec
fs
lahf
repz
fdivp
cmp
pop
pop
dec
xor
popa
mov
add
xor
in
sti
xchg
inc
retf
xchg
mov
push
loop
cs
adc
add
jp
or
push
call
dec
dec
or
lock
or
sub
outs
stc
sub
gs
stos
mov
ins
mov
jae
loopne
dec
sbb
int
pusha
aaa
addr16
not
aaa
add
sti
es
xor
push
or
hlt
xchg
call
mov
mov
call
jle
mov
call
adc
cdq
cdq
sub
das
mov
ret
es
cmp
(bad)
and
jge
xor
retf
fldln2
sbb
lds
call
loop
push
sub
sub
out
xchg
xchg
xor
mov
pop
xor
sub
add
je
add
imul
js
test
xchg
add
es
pop
mov
mov
daa
shr
in
outs
push
mov
or
or
dec
cmp
add
xchg
jg
(bad)
inc
into
dec
or
mov
shr
pop
ret
mov
pusha
xchg
jge
aas
mov
push
mov
cli
jns
xor
shl
pop
test
push
shl
xchg
sti
dec
cmp
dec
into
push
and
cmc
jns
hlt
dec
repz
inc
push
jb
dec
ins
sahf
pop
das
sar
jecxz
pop
pop
(bad)
in
sbb
leave
(bad)
and
pop
(bad)
sbb
jbe
movs
into
add
fdivr
test
add
add
sub
int3
or
mul
test
mov
xor
lea
dec
enter
aad
jl
cdq
aaa
adc
js
push
push
xchg
in
loop
ins
addr16
push
cmp
(bad)
push
int3
cmc
icebp
mov
pop
xchg
das
xor
jae
push
fwait
icebp
loopne
imul
mov
pop
sbb
data16
popf
xor
sub
cmp
int3
add
or
mov
cmc
mov
js
lds
js
push
adc
inc
cmp
pop
pop
ret
xchg
sar
inc
adc
mov
loopne
(bad)
arpl
aaa
mov
cmp
popf
int
loop
popf
xchg
stc
mov
imul
icebp
(bad)
in
mov
pusha
lods
arpl
outs
nop
sub
push
mov
(bad)
(bad)
idiv
sub
inc
lsl
sahf
retf
mov
loop
add
dec
dec
gs
test
jne
xchg
ret
mov
jmp
dec
mov
lods
inc
mov
sub
dec
gs
add
dec
aaa
and
adc
pop
ds
push
mov
pusha
iret
push
add
mov
out
(bad)
mov
lods
jmp
shl
inc
mov
pop
adc
cmp
jo
inc
mov
int3
push
test
and
or
imul
xlat
jp
cmp
fnstcw
and
std
xchg
cmps
ins
push
or
dec
sar
addr16
mov
sahf
xchg
mov
and
inc
sti
push
lds
sbb
idiv
or
xchg
pop
mov
cld
add
sbb
retf
ins
movs
inc
sar
movs
xchg
je
cmc
cmp
mov
hlt
movs
or
pop
call
stos
aam
aad
jge
pop
inc
pop
mov
mov
pop
cmc
outs
cld
sahf
xchg
outs
jmp
push
xchg
push
jle
ror
(bad)
cdq
int
or
mov
cmp
icebp
xchg
not
mov
dec
jg
out
jns
pushf
clc
jmp
jns
xor
aas
ja
aad
movs
(bad)
hlt
inc
jae
call
xchg
adc
mov
imul
test
cmc
pop
lahf
mov
mov
ficomp
loop
and
xor
push
cmps
push
pop
dec
icebp
cmp
into
not
jle
inc
mov
es
mov
mov
push
sbb
or
inc
pop
jge
fisttp
popa
adc
xchg
pop
out
test
out
or
cmp
lock
dec
mov
push
xchg
cs
jae
and
adc
shl
fcomp
aas
lock
lock
xor
call
xor
cmp
push
and
scas
rol
sub
lea
sbb
adc
das
loope
jp
sub
scas
dec
jno
mov
loope
cmp
test
int3
loope
test
sahf
ret
mov
clc
mov
outs
push
mov
loopne
cmp
aam
mov
sbb
or
test
cdq
shl
xlat
enter
or
data16
pop
fwait
rcl
add
xchg
mov
inc
jmp
rcr
dec
aas
nop
mov
xchg
fdiv
stos
push
and
xlat
daa
cmp
out
mov
aam
xor
inc
daa
pop
mov
xchg
jp
push
in
retf
lock
fsub
(bad)
cmp
mov
repz
pop
pop
fcomip
rep
lds
mov
ins
xor
pusha
std
daa
mov
ret
mov
fidivr
or
and
mov
dec
inc
icebp
mov
cmp
pop
xor
or
dec
push
loopne
lock
pop
sahf
shl
inc
add
bound
cmps
test
sti
xor
fisub
ins
cmp
je
sub
cmp
and
add
(bad)
gs
inc
cmps
jns
jl
test
cmp
cmp
fcom
jmp
pop
pop
jl
aad
not
adc
add
push
adc
loopne
jmp
cli
repz
and
sahf
dec
xlat
test
jno
mov
or
das
push
dec
fs
sub
sub
sar
push
cmc
das
dec
jno
dec
test
fdivr
mov
ret
pop
js
mov
int3
push
jge
(bad)
jne
std
test
inc
stos
movs
test
retf
aad
addr16
inc
pop
rol
retf
xchg
mov
dec
adc
vpsllq
aad
or
enter
or
ja
jg
and
int3
xor
popf
pop
ficomp
lock
cmp
jle
mov
and
mov
aam
arpl
test
mov
cmp
mov
fadd
fist
data16
stos
arpl
add
cmps
push
fbld
mov
ds
or
add
loop
mov
(bad)
pushf
jl
rcl
jp
shl
add
mov
scas
xor
add
add
out
rol
mov
or
cmp
dec
mov
sbb
call
repnz
dec
fdiv
loope
jo
scas
pushf
ffree
loopne
mov
or
inc
aas
cs
ret
dec
sbb
jmp
xor
dec
jg
jnp
std
out
shr
and
push
and
repz
scas
push
fiadd
aas
adc
push
int3
pusha
jno
stos
push
aas
sti
inc
(bad)
loope
imul
je
in
cmp
repz
inc
inc
push
pop
sub
sbb
outs
stc
test
aaa
push
sub
jecxz
test
sahf
loop
sub
inc
movs
mov
jne
or
repnz
pop
ins
ss
icebp
(bad)
cs
cli
sub
pop
cs
cli
mov
dec
push
pop
aas
mov
sbb
ins
mov
mov
test
movs
cmp
and
dec
retf
sar
ins
jle
iret
call
mov
cmps
and
push
icebp
and
stos
ss
or
int3
arpl
pop
cmp
retf
inc
push
mov
jns
jns
(bad)
jg
xchg
pop
jo
adc
cmps
(bad)
je
inc
inc
xor
and
int3
sub
shl
mov
cli
adc
inc
(bad)
jge
(bad)
push
mov
push
sub
ja
jo
pusha
or
in
stc
shr
jle
stos
dec
clc
push
shl
mov
(bad)
ins
inc
fcmove
sar
mov
(bad)
aad
pop
inc
jo
lds
mov
xchg
xor
add
adc
push
xchg
aas
xchg
stos
mov
sub
pop
or
xchg
xchg
xor
xor
xor
out
xor
xchg
mov
popf
lods
pop
dec
and
repnz
push
scas
xor
and
sbb
pop
sub
outs
add
adc
imul
cmp
push
jns
imul
jo
out
clc
ret
sub
pop
inc
or
sbb
sbb
loope
sub
dec
ds
cmp
sbb
push
dec
jbe
cs
(bad)
out
xor
mov
sub
lods
push
call
inc
mov
hlt
xchg
div
add
dec
mov
nop
cmps
iret
and
push
gs
cmc
and
dec
mov
movs
jle
pushf
shl
mov
mov
test
mov
mov
add
cmp
and
cmps
std
xor
pop
fidiv
lock
retf
rcl
hlt
mov
fld
push
in
leave
xor
pmullw
out
ret
retf
pop
adc
cdq
into
adc
fstp
ja
std
cmp
in
pushf
bound
mov
pop
fist
add
mov
ror
pop
lods
pop
das
or
mov
push
mov
clc
jns
ja
xor
leave
xchg
add
(bad)
je
je
cld
dec
mov
cmp
gs
fwait
test
cmc
fisttp
(bad)
jge
pop
popf
or
xchg
jl
jno
pushf
ror
adc
mov
mov
stos
std
add
mul
jmp
into
sub
cmc
jmp
push
out
out
jnp
mov
mov
out
scas
and
sbb
test
out
aas
xchg
inc
addr16
movs
mov
cmp
in
cmp
outs
in
fisub
adc
inc
jbe
cmp
jl
push
xchg
push
mov
adc
mov
js
xor
lea
hlt
cmp
clc
cmp
out
std
inc
outs
rol
push
outs
mov
fucom
outs
and
gs
cmp
add
ficomp
cmps
jb
fimul
adc
mov
outs
mov
xchg
cmp
scas
es
in
cmps
adc
rcr
jmp
movs
xchg
push
imul
stc
cdq
add
jle
jl
bound
rcr
out
test
pushf
mov
sub
xlat
mov
xor
xchg
add
out
into
cld
push
and
mov
mov
fdiv
sub
jecxz
(bad)
rol
adc
inc
nop
mov
imul
scas
out
xchg
jbe
pop
cmp
dec
mov
sbb
and
hlt
mov
icebp
in
jo
cmp
leave
aam
mov
xchg
inc
ds
xor
jg
cld
sbb
fwait
sbb
(bad)
mov
mov
loop
dec
pushf
jge
mov
int3
js
icebp
dec
jl
leave
inc
push
stos
pop
or
xchg
nop
and
out
add
push
lea
ja
mov
shl
sar
mov
push
movs
dec
jmp
test
ret
gs
pop
in
inc
pusha
cmp
mov
aaa
inc
mov
test
fistp
imul
test
dec
jmp
sbb
xchg
jecxz
cmps
adc
adc
xor
sub
test
mov
and
push
repz
aam
push
mov
and
int3
sbb
popf
scas
int
jne
shr
cmp
xor
xlat
ins
fbld
jbe
push
(bad)
sbb
shl
leave
in
pop
int3
clc
adc
cmp
or
xchg
cmp
rcl
pop
pusha
arpl
clc
mov
xchg
jecxz
nop
hlt
add
cwde
mov
add
mov
into
test
pop
sub
inc
sti
xor
leave
shr
jmp
xchg
inc
xor
cwde
sti
aad
ins
loope
cs
(bad)
cld
jne
mov
imul
sbb
arpl
mov
les
pop
cwde
pushf
retf
jnp
sub
neg
mov
and
inc
sbb
cmp
popa
xchg
sahf
in
hlt
ret
adc
mov
shl
sub
ja
ficomp
mov
cmp
mov
pushf
xor
mov
xor
sub
pop
popa
outs
fiadd
vfrczsd
cdq
(bad)
rcl
adc
dec
xor
inc
push
daa
aad
pop
add
mov
push
(bad)
adc
dec
sahf
ret
imul
dec
gs
cmps
xor
pop
inc
lea
shr
sub
sub
popa
push
jg
pop
mov
outs
adc
jnp
jmp
xlat
push
mov
dec
push
sbb
xor
int3
sbb
sub
pushf
adc
xchg
jno
cdq
div
inc
sub
mov
sbb
or
outs
dec
shr
imul
mov
xchg
push
push
pop
xchg
cdq
mov
cmp
gs
adc
mov
xchg
stos
repz
outs
test
xor
(bad)
icebp
mov
cmp
inc
or
das
(bad)
xor
xor
fwait
adc
push
xor
push
hlt
cmc
icebp
mov
lea
jg
sub
jmp
mov
wrmsr
pop
mov
cmc
cmp
out
xchg
mov
dec
jg
rol
push
mov
int3
sbb
xor
aaa
mov
xchg
jmp
push
sti
mov
push
pop
mov
cmp
js
mov
stos
mov
rep
hlt
or
lea
ret
push
mov
cmovg
enter
sub
mov
inc
icebp
repz
dec
not
adc
pop
or
icebp
xchg
test
sbb
sti
aaa
adc
cmp
jl
jb
clc
ja
jg
mov
std
test
mov
push
mov
dec
dec
popf
pop
dec
pop
pop
adc
int
cmp
dec
and
fnstcw
cli
call
movs
cwde
xchg
jmp
lahf
xchg
pop
repnz
pop
nop
rcl
cmp
push
or
push
cs
std
mov
vsqrtsd
outs
cld
in
scas
inc
mov
fwait
cmp
ins
invd
mov
pop
int
mov
fst
hlt
mov
mov
repz
push
jns
mov
in
inc
pop
jae
dec
std
dec
xchg
mov
shrd
not
inc
dec
clc
jae
(bad)
retf
mov
(bad)
xchg
jb
adc
loopne
xor
fcmovnb
imul
pop
jmp
dec
vpmaxsw
xchg
int
push
mov
rcl
test
xchg
and
scas
add
cs
mov
push
mov
cmc
je
in
loop
add
mov
into
xor
mov
in
enter
lods
(bad)
loope
mov
lock
(bad)
cmp
std
ins
xchg
ins
add
fistp
push
push
xor
in
popa
icebp
push
out
push
or
inc
mov
adc
repz
mov
js
pop
js
imul
lods
pop
adc
jmp
addr16
and
sbb
jno
mov
sub
out
xor
popa
mov
mov
sahf
sbb
cdq
outs
add
cs
clc
fadd
test
jl
jle
fidiv
add
add
sub
mov
or
xor
sbb
mov
jbe
sbb
sub
add
sub
push
fs
repnz
dec
sub
inc
sub
pop
rcl
in
mov
dec
sub
jle
push
les
loopne
add
mov
xor
enter
or
ficom
ins
into
in
out
or
xor
dec
stos
outs
add
dec
mov
jecxz
push
sub
pop
leave
mov
(bad)
pop
mov
es
mov
xor
(bad)
mov
or
movs
push
arpl
je
adc
nop
sub
or
outs
mov
jmp
cmp
jp
pop
pop
add
dec
ja
and
and
jl
mov
add
dec
rcl
or
mov
cmp
(bad)
rcr
jmp
sub
adc
in
sub
or
in
jne
sahf
and
stos
dec
cmp
push
and
aas
fild
lods
aaa
or
div
shl
jmp
fadd
and
rcr
jno
icebp
stos
cdq
lahf
rcl
mov
popf
xlat
jmp
test
sub
xor
addr16
mul
std
clc
xchg
pop
jae
xor
jbe
pop
adc
(bad)
(bad)
xchg
ja
add
jae
fadd
inc
lods
dec
imul
xchg
in
imul
(bad)
repz
xchg
and
xor
popa
mov
adc
dec
sbb
xor
(bad)
cmps
add
dec
pop
cmc
xchg
shl
add
xor
mov
loop
movs
push
popa
test
jb
mov
xor
iret
popa
dec
arpl
test
clc
xchg
mov
sbb
mov
(bad)
push
out
popf
aam
and
inc
mov
mov
and
xchg
(bad)
adc
inc
je
pop
fbstp
or
inc
outs
icebp
push
and
(bad)
jge
fiadd
jns
xor
mov
mov
les
je
popf
and
mov
dec
fdivr
int
pop
mov
stos
cli
sbb
sbb
fcmovu
jno
das
imul
jmp
enter
cli
cwde
inc
fs
fstp
add
in
fs
mov
int
sar
push
bound
ror
iret
add
stc
es
outs
cmp
nop
aas
jo
fcomp
daa
int3
loope
ud0
xor
jle
xor
pop
mov
jne
outs
bound
sar
adc
test
(bad)
loopne
adc
dec
mov
inc
cmps
test
xchg
xchg
and
jo
jl
xor
loop
inc
and
int
jno
js
in
(bad)
lods
adc
and
push
fmul
jmp
addr16
enter
inc
cmp
cmp
xor
fwait
neg
hlt
es
scas
pop
enter
xor
xor
pop
arpl
or
jg
cmc
dec
int
movs
nop
add
xor
push
dec
call
mov
bound
dec
add
sti
gs
repz
fcmovnb
(bad)
jbe
jns
inc
dec
cmp
xor
movs
mov
pusha
lea
scas
cmp
pushf
in
je
cmps
adc
out
sti
and
mov
out
xchg
add
int3
ficomp
push
fmul
call
or
ja
cwde
fist
jo
jmp
pop
lods
inc
sti
test
or
lea
rcl
or
int
push
xchg
cmp
mov
add
adc
(bad)
std
fbld
sbb
(bad)
mov
dec
repz
dec
xchg
std
std
clc
xlat
sub
fsubr
test
xchg
cmp
repz
mov
mov
js
std
xlat
pop
popa
mov
test
mov
jp
sub
push
xor
cli
mov
sub
mov
call
aaa
and
jae
inc
inc
xchg
add
mov
scas
sub
das
(bad)
cmp
xchg
aaa
mov
jecxz
rol
fsub
retf
aas
push
adc
mov
in
jbe
dec
ret
add
retf
mov
lods
aaa
bnd
sbb
shl
adc
sub
scas
test
jmp
mov
inc
xor
imul
jb
inc
pushf
mov
cmp
push
xlat
sub
sbb
movs
push
in
mov
xlat
dec
es
bound
dec
or
lock
outs
jl
and
push
cmc
mov
rcr
aas
movs
in
cli
movs
xor
outs
pop
cwde
cmps
in
int
int3
popf
jne
cdq
stos
lods
mov
jo
add
rcl
jmp
test
mov
cmps
(bad)
add
dec
mov
pop
out
cmp
add
std
popa
add
add
mov
mov
arpl
sub
cdq
fwait
shl
scas
jmp
jmp
add
xor
movs
leave
lods
sar
loop
mov
das
out
xor
jo
out
cmp
(bad)
and
mov
and
jmp
outs
mov
fisttp
add
xor
bound
adc
aad
pop
pop
jle
jbe
jns
xchg
add
push
add
movs
dec
cdq
mov
mov
movs
sbb
pop
sbb
fsubp
xchg
ret
or
leave
push
cmps
out
and
push
pop
cmps
lock
daa
mov
jb
fcmovne
xchg
cdq
jno
retf
xor
push
jo
mov
fnstenv
imul
loope
shr
sbb
nop
adc
lock
out
ds
mov
jecxz
mov
pop
dec
mov
xor
dec
mov
pop
inc
mov
fstp
xor
je
shr
icebp
fisttp
adc
scas
mov
(bad)
pop
sti
shl
or
jae
adc
nop
mov
lahf
or
shl
in
std
jnp
sbb
mov
mov
int
pop
and
rol
cmp
pushf
jne
int3
test
shl
loop
sbb
xchg
xchg
movs
popa
sbb
in
add
jno
into
adc
push
mov
mov
ret
push
fbstp
popa
pop
cmps
cmp
test
imul
sbb
leave
add
fwait
mov
hlt
scas
mov
retf
sub
cmp
jbe
test
outs
jo
mov
jp
jge
ins
int3
sub
sub
mov
or
mov
cs
idiv
enter
aas
mov
jp
loope
dec
xor
cli
xlat
or
pop
xor
sbb
aad
sub
sub
dec
(bad)
or
or
test
jbe
ja
jp
sub
adc
inc
xchg
fisub
clc
mov
mov
jo
jae
xchg
out
scas
inc
cmp
stc
aaa
mov
ins
jp
mov
xchg
lar
inc
inc
jns
scas
push
loop
in
int
fcomp
xchg
jmp
out
rol
add
push
mov
jp
lea
pop
push
es
pop
out
pusha
fadd
push
xchg
div
int3
ins
fild
xchg
inc
push
mov
add
arpl
mov
ret
outs
mov
cmp
xchg
neg
fwait
inc
ja
mov
shl
ds
jb
repnz
or
shr
or
and
or
retf
out
cmp
jmp
(bad)
scas
mov
push
adc
dec
cmps
inc
cmp
repz
ret
scas
xor
xor
lods
push
pop
sub
xor
pop
inc
push
and
push
test
sub
mov
dec
scas
or
mov
repnz
lods
push
and
sub
push
cwde
or
in
movs
and
in
(bad)
das
mov
jmp
dec
shl
das
adc
outs
jo
cdq
mov
xchg
pop
push
jge
std
cmp
mov
out
test
scas
ret
sub
mov
outs
and
fidivr
test
or
call
call
shl
and
mov
ds
xchg
ror
jb
inc
aas
shl
and
inc
sbb
fnstsw
ficom
mov
xor
dec
add
int
popa
xchg
shl
dec
ret
das
adc
into
inc
and
pop
nop
sbb
fmul
js
sahf
or
das
nop
and
xor
inc
movs
or
and
hlt
add
adc
mov
mov
int
int3
outs
and
cmp
addr16
jp
daa
or
cmps
xlat
stos
push
pop
fild
jae
sub
call
xchg
callw
jl
outs
inc
jno
fisubr
out
rol
cli
mov
pop
mov
loopne
(bad)
push
fs
ror
jbe
xlat
lods
cs
mov
retf
imul
ins
sbb
sub
jle
mov
lea
shl
fcomp
pop
push
jg
cmp
out
adc
or
fimul
and
adc
xor
cwde
cmp
sub
ja
pop
icebp
xchg
sti
jmp
push
xor
mov
loope
xor
pop
cli
fldcw
jl
sbb
sub
or
adc
pop
cld
stos
jo
jl
pop
call
push
into
pop
ret
stos
cmps
inc
inc
inc
outs
cmp
inc
daa
mov
sbb
sti
lds
lahf
cmp
push
add
or
push
cdq
and
fiadd
call
sar
dec
mov
mov
dec
test
adc
sub
scas
add
int3
shl
ret
mov
xor
(bad)
mov
jl
outs
mov
mov
in
das
xor
and
xchg
mov
sar
add
(bad)
fmul
cmps
clc
xchg
retf
outs
or
pushw
jne
stos
fyl2x
(bad)
shr
xchg
mov
dec
lds
sub
lock
or
mov
out
xchg
les
cld
mov
mov
jmp
popf
xor
jp
inc
aam
add
gs
sub
push
je
mov
mov
lods
daa
mov
add
add
pusha
ds
or
out
mov
jl
add
jae
mov
mov
in
test
fnstsw
mov
push
test
xor
shrd
or
cmp
or
mov
sbb
mov
cmp
cmps
es
sub
mov
sbb
sub
arpl
sbb
fld
fisttp
add
xor
cmp
mov
mov
loope
sbb
pop
and
fild
xchg
xchg
push
xchg
(bad)
dec
popa
xlat
pop
outs
jp
outs
add
loope
pop
inc
sub
aas
popf
loope
xchg
lea
mov
inc
hlt
mov
movs
cmps
push
cmc
js
xchg
inc
pop
leave
add
fcom
add
stos
cmc
and
daa
mov
call
fs
push
add
and
ret
clc
hlt
fs
pop
jmp
mov
adc
bound
and
sbb
int3
out
cli
sbb
scas
clc
shl
xor
cmp
gs
test
mov
jae
push
(bad)
fcom
sahf
inc
xchg
ins
push
or
sbb
cmc
(bad)
push
push
retf
mov
push
ins
xchg
imul
in
mov
retf
or
sbb
ds
ror
repnz
imul
cmp
icebp
push
xor
push
inc
dec
fist
jp
or
ret
inc
jle
xchg
movs
aad
inc
pop
jo
rol
fidivr
adc
scas
push
out
pop
push
pop
int
dec
out
adc
pop
mov
or
jg
outs
imul
xchg
and
cmp
ficomp
mov
xchg
adc
ss
dec
and
pop
ja
das
sub
add
setnp
pushf
or
lods
jns
repz
out
stos
addr16
icebp
(bad)
cmp
cmp
push
xor
and
ror
fadd
call
jle
dec
jl
nop
popa
and
push
loope
addr16
jecxz
inc
and
sbb
mov
push
dec
xor
dec
call
xor
js
movs
pop
jo
shr
loope
stc
fs
stos
aaa
test
stos
sbb
add
daa
xlat
sti
addr16
inc
sbb
lods
mov
out
jl
out
fs
mov
mov
mov
sti
adc
mov
js
mov
and
jle
bswap
push
mov
jecxz
not
add
fisttp
popa
aad
adc
mov
add
out
sbb
jns
sbb
or
pop
mov
mov
lods
lods
or
iret
jmp
sub
rcr
sub
daa
sbb
sbb
leave
gs
mov
sub
and
adc
scas
sbb
sbb
ins
sbb
jecxz
xchg
pop
bound
cmc
sbb
pop
sub
mov
mov
sti
pop
adc
dec
int3
fisttp
lods
inc
inc
add
and
add
pop
ss
push
and
ret
inc
xchg
(bad)
jecxz
pop
and
dec
push
sub
in
cmps
ss
xchg
mov
sbb
movs
ror
dec
mov
pushf
lahf
scas
push
enter
dec
pop
xchg
mov
xchg
mov
scas
lea
jp
jbe
pushf
loop
xor
jbe
popa
cmps
test
xchg
adc
push
clc
jge
out
jbe
fwait
outs
mov
movs
stos
stos
retf
pop
adc
ror
push
inc
imul
jnp
and
xor
movs
sub
sub
push
fsubrp
inc
fadd
dec
in
xor
mov
push
xchg
or
(bad)
les
ins
jg
shr
jnp
xor
xor
inc
out
shl
jne
inc
(bad)
lea
iret
lahf
push
lahf
push
dec
rcr
and
and
mov
mov
mov
push
pop
fldpi
push
fld
lea
sbb
inc
test
leave
movs
mov
inc
mov
dec
fisub
dec
fsubr
ret
jg
out
xchg
(bad)
sti
jns
push
rcl
dec
or
gs
adc
sbb
ror
out
cmp
inc
cmp
test
adc
adc
and
mov
outs
cli
addr16
sahf
mov
adc
test
sub
or
jne
mov
and
outs
xor
mov
gs
pop
pop
loop
push
or
jbe
sub
jle
fild
sbb
and
and
fisub
sbb
push
xchg
mov
cmc
stos
gs
and
fdivr
push
jmp
fdiv
mov
jmp
jno
dec
mov
fwait
pop
xor
push
shr
or
and
test
sub
int
push
imul
test
out
scas
adc
pop
int3
mov
add
dec
mov
ret
jbe
cmp
jge
add
xchg
jmp
out
out
aas
ret
and
mov
mov
in
fcmove
inc
or
outs
adc
pushf
arpl
lock
mov
and
loope
rcr
mov
dec
scas
gs
fisttp
int3
and
mov
aad
fcomp
aad
inc
push
mov
mov
jp
dec
ja
lahf
adc
cmp
adc
xlat
inc
pop
cmp
mov
int
scas
cmp
mov
ds
scas
cmp
ror
mov
mov
sahf
jp
scas
(bad)
push
push
jo
cs
jae
cld
adc
loopne
ja
pop
cld
pusha
pop
pop
(bad)
sti
inc
push
aas
aam
test
and
rcr
pop
xor
shr
push
cmp
jbe
xor
xchg
bound
inc
in
inc
cmp
sbb
ret
xchg
xchg
xor
mov
adc
push
pop
adc
scas
fisubr
mov
sbb
mov
ins
jl
(bad)
rol
out
dec
fdiv
mov
test
add
push
sub
pop
imul
cmp
jmp
sbb
aaa
lock
sbb
popa
dec
adc
cli
cmp
pop
mov
fst
(bad)
sbb
les
pshufw
int
pop
in
jecxz
xchg
test
sub
cmp
xchg
ins
test
int3
jp
jle
mov
jno
jl
cdq
repnz
sbb
in
not
jnp
pop
fdiv
outs
adc
mov
iret
test
cmp
cdq
aam
icebp
adc
aaa
test
out
arpl
int
jge
xchg
ins
pop
and
test
repnz
adc
push
(bad)
lock
stos
jae
fldcw
or
adc
adc
nop
ficom
mov
mov
xor
ins
mov
test
mov
dec
ret
retf
lods
mov
cmp
ret
pop
sti
jmp
mov
fdivr
and
cmps
imul
inc
stos
hlt
adc
ins
movs
ins
stos
enter
xor
mov
aad
(bad)
jnp
dec
mov
and
cmp
xchg
xchg
pop
ret
mov
sbb
add
cmp
push
lea
mov
(bad)
hlt
pop
outs
fwait
dec
out
xchg
or
dec
sbb
(bad)
mov
mov
sbb
or
push
sub
adc
add
imul
retf
cmp
inc
sbb
xor
push
fistp
mov
add
dec
jge
mov
inc
shr
stos
jbe
inc
pop
in
adc
bound
adc
xor
xchg
hlt
pop
repnz
ror
push
add
pop
and
mov
test
and
adc
std
les
cwde
cmc
fwait
mov
(bad)
fist
adc
clc
push
pop
sub
out
sar
out
ret
jp
fsubr
imul
enter
lea
outs
fsub
bound
inc
or
dec
imul
inc
pop
push
fwait
cmp
dec
adc
int
retf
add
mov
bound
stos
jae
push
mov
push
sub
cmp
ins
test
aam
cmp
add
xlat
inc
push
adc
hlt
mov
mov
pop
mov
sub
fsub
dec
aad
imul
inc
pop
jbe
cld
mov
mov
xchg
sbb
shl
jns
mov
dec
or
lock
mov
push
push
pusha
fsubr
scas
push
pop
ja
mov
or
leave
push
ja
xchg
push
sahf
cli
ja
movs
inc
inc
sub
lea
cmp
xchg
pop
adc
int3
dec
push
jne
or
sbb
pop
ins
push
pop
or
cmc
daa
mov
and
xor
dec
add
inc
push
add
iret
dec
fisttp
ja
dec
jnp
pop
mov
mov
jmp
gs
xchg
inc
mov
mov
mov
add
jge
inc
and
ins
mov
out
dec
push
dec
enter
push
jl
xor
outs
lea
jl
sub
xchg
mov
retf
xchg
mov
mov
sbb
pushf
aas
xchg
or
push
xor
mov
test
push
xchg
mov
and
movs
inc
adc
inc
ss
add
inc
mov
pop
push
cwde
inc
fstp
or
sub
adc
sahf
xchg
out
rol
mov
addr16
jne
jge
push
test
stos
dec
cld
cmp
stos
scas
and
stos
push
pop
xor
xchg
or
adc
cmp
ucomiss
pop
popa
jmp
movs
ret
push
adc
fist
movs
lds
cmp
pop
enter
pop
fistp
dec
shr
js
xor
jo
jmp
sub
iret
jo
push
fiadd
sbb
scas
enter
dec
or
iret
(bad)
cdq
in
ss
shl
jge
xchg
arpl
sar
pop
out
retf
fadd
in
cwde
ror
mov
push
out
cmp
jo
jmp
in
ret
xchg
nop
sub
xchg
in
js
js
xchg
mov
repz
into
cmp
pop
mov
push
sahf
push
scas
movs
cmp
imul
clc
push
adc
ss
dec
popf
xchg
jno
adc
mov
xchg
retf
and
test
mov
(bad)
push
popa
push
scas
(bad)
xor
adc
ret
test
(bad)
arpl
cmps
retf
ret
pop
xor
hlt
fnstsw
ret
std
test
stos
sub
add
cmp
lods
loope
lods
(bad)
sbb
in
jbe
sub
mov
mov
test
jno
int
arpl
shl
push
jp
cmc
add
in
and
in
loopne
lahf
push
dec
(bad)
dec
repz
push
iret
cs
call
and
inc
jl
xor
pop
sbb
test
inc
pop
or
sub
lods
push
outs
shr
inc
mov
mov
mov
xchg
jp
xor
jbe
xchg
cmp
jmp
xchg
mov
jno
(bad)
out
cmp
push
inc
ret
sbb
xor
mov
jbe
aaa
dec
leave
pushf
fistp
jp
movs
xchg
ret
loope
mov
(bad)
aas
lahf
in
mov
imul
cli
pop
mov
adc
sbb
and
shl
sbb
xchg
or
icebp
in
inc
es
cmc
pop
(bad)
mov
fs
cmp
jl
arpl
mov
dec
out
(bad)
loop
fwait
jae
mov
jmp
in
mov
pop
push
sbb
shl
or
popf
stos
imul
das
jo
pop
or
sub
sub
sbb
mov
adc
sti
cmps
shl
sbb
mov
dec
enter
or
xchg
iret
inc
inc
into
hlt
xchg
test
aaa
cld
(bad)
fsub
or
mov
xchg
dec
mov
cld
in
cli
mov
test
mov
add
sar
pop
ins
push
dec
rol
xor
scas
pop
push
and
cmc
xor
(bad)
push
jbe
sub
xor
fst
cli
mov
in
mov
dec
inc
xor
mov
inc
test
pusha
je
lods
push
adc
movs
xsha256
cmps
xchg
sti
loopne
das
sar
loop
xchg
ss
mov
dec
push
nop
dec
out
lods
push
imul
out
xlat
push
fwait
outs
lods
cli
ret
jp
xor
inc
rcr
in
sahf
xchg
ss
or
cmp
pop
xchg
dec
push
outs
pusha
xor
add
stos
(bad)
mov
(bad)
pop
aad
cdq
leave
push
xchg
ins
das
test
dec
daa
(bad)
enter
cmc
sahf
push
pop
repz
jmp
cmps
test
lahf
adc
jp
arpl
pop
loopne
jb
in
inc
std
scas
and
or
mov
jae
fxtract
daa
es
ror
call
xor
jns
lods
mov
mov
inc
xchg
cmps
pop
(bad)
popa
(bad)
sub
or
adc
inc
lods
pop
and
xor
jg
mov
arpl
mov
xor
rcl
lock
sahf
repz
cmp
pop
sbb
cmps
out
jle
sbb
pushf
mov
mov
test
bound
mov
dec
inc
jnp
cmp
imul
shl
ja
lods
push
into
adc
mov
cmps
ficomp
and
pop
ja
arpl
push
fdivr
cmp
cdq
shr
rcr
xor
and
xor
or
test
adc
not
cmps
cmp
push
inc
mov
xchg
pop
jns
aad
xchg
jg
movs
inc
js
mov
inc
or
pop
sub
or
mov
out
nop
inc
or
cli
sbb
add
pushf
xchg
sbb
loop
rcr
add
in
inc
retw
sub
jno
jb
ret
daa
ror
inc
mov
jnp
inc
cmp
mov
retf
mov
(bad)
aas
push
les
or
int
pop
push
arpl
imul
and
mov
sub
cmp
jne
mov
pop
or
je
mov
xchg
add
xor
mov
cmp
sub
loopne
xor
xchg
cmps
movs
cdq
or
int
pop
pop
cdq
dec
out
add
shr
jmp
movs
mov
mov
push
cmc
les
retf
retf
(bad)
mov
pop
(bad)
outs
or
jb
popa
fwait
jecxz
pop
ins
sbb
sbb
cmc
jmp
mov
stc
xchg
push
stc
sub
enter
shl
retf
mov
je
ins
test
or
or
hlt
shl
push
push
das
scas
addr16
aaa
xchg
repnz
gs
iret
mov
jo
jb
xor
fs
and
outs
test
imul
inc
repz
(bad)
stc
(bad)
push
mov
repnz
add
out
push
mov
jnp
nop
iret
ins
inc
cdq
call
cmps
cmp
add
aaa
xor
ret
(bad)
sbb
test
iret
scas
mov
into
cld
adc
add
retf
jecxz
cdq
loopne
movs
ret
leave
out
dec
cwde
sub
xor
fadd
mov
mov
jo
jg
cmps
ror
inc
mov
add
pop
in
neg
dec
xor
dec
fwait
sbb
cdq
jp
outs
sub
mov
jb
inc
in
xor
leave
adc
dec
aaa
leave
xchg
test
or
adc
sub
retf
test
mov
mul
aam
push
mov
push
dec
xor
repz
imul
cmp
jle
and
inc
dec
jp
jbe
push
cmp
loop
mov
mov
aad
xchg
add
icebp
stc
adc
sub
mov
or
mov
jg
or
movs
test
adc
mov
mov
jp
nop
popf
or
mov
sub
sub
std
jo
lea
xor
xchg
retf
xchg
movs
cmp
jmp
nop
mov
adc
pop
jae
cs
ins
leave
mov
mov
int3
dec
inc
push
mov
mov
out
mov
pop
mov
xchg
mov
push
test
je
jns
mov
aas
push
and
jle
imul
cmc
cmp
nop
and
xchg
test
or
retf
daa
mov
push
add
or
cwde
fwait
xor
mov
dec
inc
or
gs
xor
cmp
in
and
sub
ror
push
pminsw
(bad)
inc
stc
jb
push
mov
pop
pop
mov
int3
ins
inc
adc
cwde
mov
ss
xor
and
push
outs
sub
js
dec
cmp
sub
and
test
adc
cmps
mov
popf
ret
mov
fnstenv
and
sub
add
fcmovnb
cmc
retf
push
lahf
xchg
mov
lods
jp
xor
test
xchg
and
loop
ret
mov
iret
pop
les
add
xor
xchg
xlat
add
xchg
scas
mov
scas
add
mov
or
mov
add
pop
popa
mov
push
jnp
sbb
sahf
inc
(bad)
movs
cmp
cdq
push
sbb
inc
xchg
pop
out
leavew
dec
lods
mov
cmps
or
push
scas
jo
xchg
cmp
mov
adc
out
mov
pop
cmp
adc
push
push
push
ss
jp
jp
xchg
xlat
push
add
xchg
mov
add
or
mov
into
out
sub
inc
outs
sti
mov
jae
stos
mov
mov
xchg
shr
sbb
test
and
repnz
mov
pop
nop
js
sbb
imul
inc
xor
pop
(bad)
xchg
mov
cdq
scas
sbb
arpl
mov
sub
pusha
sbb
adc
xlat
loopne
sahf
add
idiv
(bad)
(bad)
push
cmp
add
ror
or
cmp
loop
xchg
push
mov
fs
xor
enter
push
adc
sub
jne
stos
jo
adc
dec
mov
or
aad
mov
sbb
ja
jno
xchg
jns
movs
or
cs
rol
add
(bad)
push
mov
sub
adc
push
jbe
push
mov
adc
mov
push
sub
cmc
push
inc
adc
movs
push
jp
mov
dec
cs
fldenv
jmp
and
dec
icebp
cwde
mov
sub
add
test
repnz
xchg
cmp
xor
imul
inc
(bad)
mul
retf
sti
jle
pxor
push
arpl
inc
add
in
aam
lea
add
lea
mov
mov
pop
jp
lods
clc
xchg
add
scas
pusha
gs
jnp
icebp
ss
in
and
push
mov
sbb
dec
sub
mov
sub
sbb
inc
loop
push
ds
les
mov
mov
lods
adc
out
sbb
lods
sub
xchg
add
add
push
jnp
mov
adc
pop
xchg
fisubr
(bad)
out
xor
inc
mov
add
sub
push
jnp
out
jb
add
sbb
enter
(bad)
mov
mov
xor
xor
add
packuswb
fdiv
mul
je
add
cmp
(bad)
inc
mov
loopne
test
adc
in
mov
mov
mov
(bad)
ins
inc
popf
sub
cdq
call
hlt
sbb
inc
jg
xchg
and
je
es
fs
(bad)
scas
retf
mov
pop
retf
add
js
adc
test
imul
push
adc
mov
ins
or
xchg
cmp
jg
xchg
xchg
inc
add
imul
push
dec
and
pop
arpl
push
mov
dec
dec
clc
fs
cmp
mov
sub
or
xor
outs
(bad)
pushf
xchg
test
pop
stos
pop
or
call
mov
jecxz
ffreep
sbb
es
mov
pop
int
push
cmp
mul
je
xor
int
ins
cmps
pop
mov
push
xor
(bad)
iret
dec
lods
fsub
add
mov
sbb
mov
mov
pop
out
jp
add
jle
cmp
pop
ja
dec
xchg
or
sbb
(bad)
cdq
leave
cld
stos
sti
xor
lock
push
out
xchg
add
jnp
and
loopne
xor
loop
jp
(bad)
adc
xchg
nop
inc
cmp
or
and
mov
imul
adc
test
cmp
out
sti
lahf
fstp
sbb
cmp
or
loopne
jle
(bad)
ficom
and
fsub
mov
xchg
add
pop
sub
push
sub
hlt
xor
pop
adc
pop
(bad)
xchg
mov
adc
mov
dec
ret
movs
adc
int3
sbb
jmp
jae
or
in
dec
push
out
loop
mov
hlt
dec
inc
push
push
lds
pop
lock
rol
hlt
lds
pushf
rol
out
mov
xchg
jae
sbb
sub
xor
sub
xlat
outs
js
aas
adc
das
mov
mov
stc
fisttp
in
(bad)
mov
movs
inc
pop
mov
push
(bad)
sahf
arpl
sahf
cmp
pop
test
arpl
jo
push
fisub
or
std
sbb
(bad)
shl
loop
popf
dec
lods
mov
rol
jp
(bad)
in
mov
push
stos
cmps
xor
and
mov
(bad)
stos
out
cmp
loope
dec
pop
lods
inc
mov
scas
sub
adc
cmps
iret
inc
sub
jge
pop
(bad)
mov
aas
xchg
ja
pop
pop
test
popf
fmul
jbe
test
jp
sub
push
in
(bad)
fdivp
out
sahf
rcl
sub
fwait
bound
out
repnz
xor
pop
xor
xchg
in
mov
stc
fmul
mov
add
dec
movs
test
and
popf
lock
inc
jmp
aad
dec
push
sub
into
lods
loopne
jmp
adc
mov
icebp
xor
(bad)
push
pop
or
inc
neg
push
pop
sub
into
jmp
cld
hlt
adc
add
test
loope
lods
and
add
push
dec
iret
cmp
push
cmps
push
cdq
outs
add
inc
xor
pushf
dec
stc
xor
jnp
test
push
mov
pop
sub
call
xchg
and
xor
cmp
xchg
jl
out
xchg
add
mov
mov
sbb
adc
movs
aad
pusha
inc
and
mov
jmp
enter
mov
adc
pop
(bad)
test
jmp
cmp
dec
xor
ds
out
(bad)
ja
pop
push
das
loop
fstp
jae
sub
cld
push
mov
pop
push
mov
push
outs
sub
call
scas
xchg
xor
outs
xor
iret
adc
pop
pop
or
jge
xlat
mov
kmovb
dec
sub
inc
ret
or
mov
stos
xchg
dec
sbb
jmp
adc
fidiv
xor
add
fst
or
shl
jae
mov
jl
jle
lock
scas
scas
outs
mov
sbb
test
dec
xor
hlt
jge
mov
arpl
mov
lahf
mov
cwde
jae
js
stos
xor
xor
scas
movs
daa
(bad)
jecxz
add
cmp
sub
gs
push
out
mov
shl
xlat
jp
(bad)
call
mov
xchg
jno
fdiv
sbb
ror
ins
adc
das
das
pushf
in
dec
les
fld
cmps
mov
mov
imul
cmp
push
inc
inc
push
sub
call
mov
clc
add
in
ret
inc
inc
fisub
add
popa
or
jg
sbb
xchg
mov
into
sub
push
adc
jl
lock
lahf
dec
pop
cmps
dec
push
data16
push
aad
push
xchg
retf
cld
cmp
jmp
nop
jg
loopne
shl
aam
outs
pusha
jecxz
imul
jl
in
sbb
movs
aam
push
mov
push
jb
stc
ret
jp
pusha
push
push
ftst
sub
test
push
(bad)
or
sbb
repz
dec
aas
xchg
fdiv
mov
adc
add
sub
fdivr
xor
fisub
movs
push
enter
data16
shl
out
cdq
xor
imul
into
cwde
retf
ins
xchg
mov
je
mov
inc
pop
(bad)
movs
dec
es
enter
je
mov
mov
aam
cmp
sub
add
rcr
loope
rol
hlt
rcr
or
mov
or
dec
sbb
fst
repz
cwde
mov
inc
ja
test
cdq
stos
mov
adc
pop
stos
arpl
pop
pusha
aad
push
xchg
inc
loop
pop
xchg
imul
inc
xchg
push
icebp
movs
xchg
(bad)
and
xchg
jecxz
movs
int
hlt
pop
and
mov
jmp
ret
jecxz
stc
or
cdq
dec
out
arpl
jp
cmp
in
dec
inc
stc
das
dec
fdivr
mov
pop
ret
xlat
inc
xor
ds
addr16
mov
daa
sub
cld
sti
dec
in
push
sub
adc
jle
retf
pop
sti
push
cmp
loopne
rol
dec
push
js
jp
add
movs
push
cmc
fnstenv
mov
mov
into
dec
js
imul
xor
push
cmp
jmp
pop
arpl
sbb
sbb
icebp
add
in
jg
int
int3
sub
scas
mov
pusha
mov
xchg
sar
inc
cmps
call
mov
pop
movs
retf
pop
xor
idiv
mov
outs
add
mov
xor
mov
fs
pop
aaa
sbb
cmp
adc
(bad)
sub
mov
jmp
and
push
pop
mov
mov
jmp
jmp
loop
outs
movs
in
sbb
or
loope
aas
jmp
jnp
in
xchg
jp
shl
mov
sub
mov
loope
mov
enter
xor
cmp
scas
pop
and
inc
mov
es
icebp
push
daa
mov
mov
jle
jns
add
dec
pop
xlat
mov
cmp
lahf
and
stos
push
pop
(bad)
popf
jnp
into
xchg
and
xchg
stos
pop
(bad)
jnp
ins
and
addr16
rcr
fcmovnu
(bad)
sub
shl
dec
jle
and
arpl
repz
sub
add
inc
adc
enter
mov
std
pop
sbb
fdivr
inc
pop
je
ja
mov
fs
cld
pushf
or
mov
xor
mov
js
ret
mov
fadd
stos
(bad)
in
jns
outs
fiadd
mov
adc
cmp
or
lds
int3
pop
loopne
jecxz
pop
icebp
scas
ja
jl
jns
jae
cmp
pop
mov
fcomi
popa
mov
mov
pushf
adc
add
push
mov
jae
pop
call
sub
and
into
or
sub
js
call
cwde
aaa
das
inc
fcmovnbe
inc
dec
retf
and
(bad)
test
outs
shl
push
cdq
inc
int3
nop
push
int
retf
icebp
out
jb
lea
les
xchg
mov
jnp
pop
retf
sub
dec
xchg
test
hlt
cdq
or
mov
ds
into
cmps
in
xchg
out
(bad)
xchg
jo
dec
(bad)
test
cmp
dec
cmp
push
push
aas
pop
jg
(bad)
and
sub
test
iret
mov
les
jge
mov
or
imul
ror
fisttp
pop
sub
dec
fnstsw
outs
mov
fcom
mov
and
xlat
mov
cmp
adc
jno
call
xor
cld
ins
xor
(bad)
ja
fimul
adc
ror
inc
test
cs
fadd
fiadd
retf
inc
xchg
inc
add
xchg
push
dec
or
pop
loope
addr16
ficom
cmc
nop
and
mov
je
call
call
mov
ret
add
(bad)
iret
push
mov
push
dec
dec
mov
and
mov
out
xchg
xchg
in
sbb
(bad)
ins
shl
aad
push
or
pop
mov
pusha
test
add
ret
adc
hlt
mov
xchg
pop
aad
jnp
aas
sub
popf
in
jp
mov
pusha
clc
push
mov
mov
nop
xchg
xchg
cmp
or
pushfw
and
ror
xor
and
fiadd
pop
ja
sbb
inc
mov
hlt
les
shr
pop
popa
pop
es
xor
adc
leave
cdq
xor
lds
jno
sahf
or
outs
xor
and
dec
adc
jecxz
jae
fsub
jmp
push
pop
aam
or
jle
xlat
inc
cmp
dec
dec
and
add
pop
stos
pop
jecxz
pop
push
pop
xchg
push
test
inc
mov
scas
mov
mov
xchg
adc
out
cmp
xor
xor
mov
xor
lods
jnp
inc
mov
sbb
add
jne
inc
les
das
xchg
fisttp
adc
jmp
les
(bad)
sub
vmovdqa
adc
push
cmps
jmp
stos
pop
jo
dec
adc
repz
mov
ja
xor
add
(bad)
jmp
pushf
lahf
jg
pop
sbb
adc
int
mov
sti
mov
jle
retf
and
mov
popf
sti
pop
es
jl
cmc
arpl
fadd
or
dec
jle
dec
hlt
dec
test
ret
lock
mov
ret
leave
dec
adc
mov
out
aad
mov
cmp
int
mov
cmp
psubusw
test
ja
(bad)
or
mov
jl
(bad)
(bad)
cmps
std
push
out
sbb
ret
push
xchg
fs
lods
xor
xor
cmp
mov
inc
xchg
xor
shl
in
inc
push
push
dec
sub
sbb
and
sahf
mov
adc
shr
inc
test
jecxz
pop
or
pop
fnstenv
fisttp
dec
ja
adc
push
sub
repnz
mov
dec
or
sbb
out
cdq
jmp
add
mov
lods
inc
(bad)
pop
jl
ja
sar
leave
outs
mov
pushw
fmul
or
bound
retf
sbb
xchg
dec
xor
push
adc
mov
xor
test
jmp
pusha
ror
int
mov
in
jge
mov
pusha
mov
and
lds
popa
push
fsub
and
xchg
xchg
adc
inc
lahf
cwde
ret
push
add
call
icebp
and
jmp
call
pop
in
jl
adc
mov
fwait
add
cmp
mov
imul
xchg
and
jg
jb
mov
lahf
jbe
fwait
nop
(bad)
mov
fisubr
aas
ret
add
bound
(bad)
dec
hlt
xchg
leave
fdivr
(bad)
jmp
mov
clc
mov
sbb
adc
adc
pop
test
push
fwait
or
jnp
pop
jl
mov
xchg
aaa
bound
xor
repz
mov
add
test
mov
mov
push
pop
add
jns
shl
mov
cs
repz
es
fwait
ja
pop
enter
call
mov
jecxz
fscale
adc
add
out
popf
nop
aas
jns
inc
cdq
push
pop
mov
adc
pop
jae
adc
test
popf
jmp
dec
sub
das
in
mov
mov
xor
mov
jbe
cmp
pop
jne
js
xor
in
ret
cmp
clc
daa
mov
sbb
sub
fidiv
sti
addr16
retf
jecxz
pop
mov
inc
push
repz
ror
movs
dec
xchg
sub
pop
int
cmp
fadd
adc
in
jbe
or
xor
mov
sbb
jp
repz
out
je
mov
sar
pop
test
hlt
sbb
adc
arpl
sbb
cld
inc
cmp
add
jne
xchg
cmp
jnp
and
add
add
push
sbb
adc
add
sar
xor
and
out
sbb
mov
rcl
adc
mov
aas
rcr
and
xor
ins
push
imul
adc
xor
out
call
sub
cli
or
into
cs
out
int3
sbb
call
cmps
xchg
mov
cmp
mov
push
push
push
push
mov
or
aam
adc
jmp
ss
inc
jp
shl
inc
add
stos
xchg
dec
std
cli
js
cld
add
aam
addr16
adc
data16
xchg
gs
mov
xlat
or
pop
and
popa
sub
es
clc
adc
hlt
mov
xchg
inc
shl
adc
aam
xchg
out
inc
movs
fistp
ja
mov
mov
cld
xchg
aas
popf
inc
dec
adc
push
xchg
ins
inc
push
cmp
push
in
xchg
or
inc
mov
xor
(bad)
hlt
lods
jmp
stc
xor
push
xor
sbb
xor
jae
adc
int
xchg
int
(bad)
hlt
icebp
je
imul
adc
jne
fistp
xchg
lea
and
pop
ret
cmp
push
(bad)
scas
loopne
clc
adc
jecxz
xchg
repnz
data16
(bad)
jnp
fdivr
cli
add
xchg
(bad)
jno
jle
xchg
int3
mov
jnp
xchg
push
xor
neg
cmp
mul
fidiv
pop
mov
cmp
and
gs
push
mov
and
sub
sbb
cmps
ja
mov
out
jge
sub
cmps
cmc
inc
arpl
test
imul
test
pop
jnp
lods
sub
gs
cmps
enter
(bad)
add
mov
and
or
in
jmp
(bad)
push
mov
mov
jb
sbb
jmp
push
xor
push
mov
not
retf
popa
fsubr
jb
data16
dec
jns
xor
pop
sub
mov
mov
mov
fs
pop
pop
fsub
inc
sbb
inc
(bad)
pop
outs
and
rcl
hlt
retf
push
gs
cs
mul
retf
mov
sbb
xchg
push
cmps
ffree
daa
mov
cdq
dec
std
inc
sti
aaa
xchg
xchg
stc
neg
adc
ins
xchg
cmp
or
pop
pop
jl
mov
pop
sbb
test
sub
inc
push
jae
mov
dec
jge
xchg
fisttp
xchg
sti
sub
xor
sbb
or
push
cs
es
out
bound
repz
outs
cmp
in
jecxz
xchg
les
daa
sbb
push
stos
scas
iret
movs
adc
stos
pop
dec
push
out
fidivr
inc
das
jmp
test
lahf
scas
jmp
pop
push
hlt
xor
mov
inc
push
push
mov
in
push
jp
jmp
rcr
inc
mov
jge
mov
shr
bnd
adc
ds
xchg
ss
or
mov
test
daa
test
or
mov
sbb
sbb
jmp
fidiv
das
cmc
lods
cmps
data16
cmp
jo
pop
fadd
retf
lods
fs
jnp
(bad)
mov
adc
pushf
rcr
sub
nop
pop
into
rol
sub
lahf
sbb
in
dec
pop
(bad)
jnp
sbb
inc
mov
and
ret
pop
js
stc
xchg
stos
ds
fdivr
or
dec
test
in
pop
icebp
mov
rcl
test
(bad)
fisubr
jns
add
repnz
pop
mov
fs
into
push
pop
popf
sbb
mov
scas
ret
push
pusha
jecxz
xchg
out
daa
stc
pop
mov
sub
test
icebp
mul
fwait
stos
movs
push
inc
mov
cmp
inc
arpl
mov
enter
dec
sbb
inc
jbe
and
push
mov
pop
mov
push
xchg
mov
jmp
addr16
daa
add
xchg
in
in
pop
adc
nop
test
lods
aaa
xor
pop
test
fbstp
xor
out
inc
pop
xchg
sbb
clc
mov
and
mov
jae
adc
sbb
popf
xlat
retf
dec
je
xor
stos
mov
mov
jbe
push
call
mov
test
in
add
(bad)
mov
jbe
ins
push
shl
push
lock
fwait
test
push
repz
inc
add
(bad)
stc
cwde
pop
or
or
fist
ins
add
inc
in
xor
fstp
(bad)
sub
imul
in
pop
xchg
aas
mov
push
jecxz
push
push
add
xlat
add
add
xor
in
iret
scas
lds
push
push
jo
jl
fidivr
ins
movs
arpl
fisttp
jle
jle
add
mov
xchg
dec
js
push
inc
jle
xchg
ret
sbb
cmp
mov
test
retf
inc
cmps
(bad)
inc
popa
jmp
punpcklwd
mov
mov
out
ror
add
out
mov
or
aad
mov
xor
push
or
out
dec
rcl
adc
push
outs
push
popa
mov
jg
or
dec
jecxz
sbb
sub
push
jl
dec
ror
or
(bad)
adc
aam
fcom
stc
adc
cmps
pushf
es
xchg
clc
(bad)
ds
ins
repz
adc
es
addr16
pop
push
lahf
jo
and
mov
inc
mov
mov
lods
ret
sub
xchg
sar
jne
jl
mov
out
jmp
es
xor
cmp
pop
push
out
nop
jmp
jmp
and
std
inc
sub
aaa
fs
cmp
fwait
jmp
jae
xchg
and
cmp
mov
cmps
movs
and
mov
(bad)
stc
into
xchg
jecxz
sub
inc
fimul
sbb
retf
cmp
test
in
pusha
mov
mov
push
push
mov
test
sub
mov
dec
mov
pusha
push
xchg
jbe
and
jbe
jns
mov
(bad)
fisttp
mov
cdq
cmp
cmp
bound
push
test
ins
cmp
arpl
lock
xchg
inc
add
lahf
lahf
aas
aam
mov
jl
adc
xor
jae
packssdw
mov
add
fist
dec
mov
cmps
jb
retf
inc
jp
dec
ins
in
jnp
clc
mov
(bad)
jmp
rol
sub
push
push
setb
jne
aad
stc
iret
adc
and
clc
or
xchg
mov
pusha
inc
icebp
or
arpl
daa
pusha
sub
cmp
fwait
mov
fdiv
mov
(bad)
mov
jmp
jae
aad
dec
mov
push
leave
test
and
jmp
or
mov
mov
(bad)
loopne
pop
mov
add
push
dec
and
xor
add
fstp
cmp
retf
cmovne
jecxz
fwait
sbb
xor
pop
dec
enter
outs
fwait
sub
fmulp
mov
loop
call
push
pusha
pushf
sub
xchg
div
fdivr
loope
inc
xor
jne
xor
sbb
in
pop
outs
xchg
lods
unpcklps
adc
xchg
lea
jecxz
and
repz
push
xchg
test
add
inc
das
mov
ja
inc
dec
pop
(bad)
in
mov
not
nop
inc
(bad)
dec
sub
sub
call
aaa
ins
mov
in
not
iret
aam
iret
movs
sbb
sbb
les
(bad)
cmps
mov
pushf
ficomp
and
pop
arpl
pop
test
outs
and
mov
sbb
fisubr
stos
push
inc
push
ss
ins
iret
push
xchg
fld
mov
mov
jp
ret
sub
sbb
push
push
ror
enter
cld
mov
cmp
out
xor
outs
mov
jg
xor
push
retf
and
ins
mov
add
pop
mov
jg
imul
pop
jno
dec
iret
stc
jns
push
xlat
mov
pop
xor
pop
rcl
outs
pop
adc
shr
mov
(bad)
out
fimul
retf
and
pop
out
dec
loop
push
scas
adc
xchg
pop
out
fisub
inc
sbb
jae
cmp
mov
stc
das
daa
(bad)
sbb
clc
sahf
pop
(bad)
and
cmp
cmp
adc
push
je
dec
mov
stos
fdiv
cmps
mov
jmp
jnp
mov
mov
shr
sbb
and
out
pusha
call
or
mov
mov
mov
sti
cmp
mov
pop
(bad)
jecxz
aam
loopne
pop
mov
(bad)
mov
cmp
retf
and
(bad)
imul
cmp
mov
(bad)
jecxz
mov
sub
stc
cmp
ja
mov
pusha
(bad)
sbb
fidivr
push
retf
arpl
sbb
sahf
ins
xchg
jge
cmp
in
popa
inc
adc
stos
call
dec
fcom
inc
cmp
loope
shr
mov
sti
outs
outs
add
pusha
xor
sar
and
dec
test
add
jns
das
jno
push
jb
fisttp
sti
sub
loopne
aas
leave
mov
scas
xlat
lock
push
and
mov
mov
sbb
in
mov
and
pop
xchg
xor
popa
(bad)
xor
xor
add
test
jmp
xor
pop
jecxz
mov
xchg
or
iret
ins
ins
xchg
jno
out
das
mov
pushf
fs
std
inc
cmp
into
cmps
inc
jl
dec
mov
push
popf
js
jnp
add
sbb
adc
push
pop
outs
out
mov
add
jge
jo
cli
std
enter
add
mov
es
not
cmp
dec
ins
pop
inc
mov
(bad)
imul
sub
iret
mov
dec
stc
dec
xchg
cdq
lods
and
pop
hlt
sub
in
lds
inc
call
xchg
cmp
sub
dec
iret
jge
inc
bnd
ds
dec
les
mul
inc
jl
jp
mov
mov
xor
mov
mov
sub
gs
mov
popf
xchg
ja
out
ds
jmp
fnsave
pop
push
pop
adc
pop
lock
add
xchg
xchg
repz
xchg
cwde
enter
cmp
xchg
xchg
jae
add
and
jl
shr
or
ins
dec
xchg
xchg
ficom
xchg
(bad)
mov
arpl
stos
call
cmp
cdq
outs
mov
push
cmps
push
push
dec
pop
ret
dec
push
paddusb
pop
fdiv
jg
test
xchg
sbb
ds
(bad)
mov
xor
stos
mov
sahf
repnz
add
xlat
ja
push
fbstp
cli
pop
add
jne
add
add
data16
inc
mov
inc
js
xor
mov
and
stos
inc
fucom
push
sbb
sbb
out
arpl
lock
push
js
(bad)
and
xor
(bad)
and
repz
mov
sbb
push
fild
mov
xchg
fwait
cmp
and
push
movs
pop
sub
xchg
(bad)
push
adc
enter
cmp
sbb
nop
push
test
cmp
mov
(bad)
sub
and
hlt
pop
push
mov
lahf
push
sbb
xor
mov
add
fnop
cmp
or
push
xor
int3
or
mov
push
mov
repnz
jp
jno
jle
add
out
cmp
jmp
pop
sub
or
or
adc
dec
sbb
or
ja
jbe
jo
dec
add
mov
ret
mov
into
ss
dec
mov
dec
fwait
test
mov
and
or
add
sti
retf
shr
(bad)
sbb
mov
(bad)
add
xor
mov
nop
pop
or
into
ins
pop
mov
sub
jns
stos
popa
xchg
int
mov
push
iret
push
jmp
out
lods
nop
(bad)
int3
sbb
or
fcom
mov
mov
or
or
scas
fcom
adc
ret
arpl
push
jae
adc
jb
loope
add
cmp
xor
inc
repz
add
shl
mov
stc
push
push
imul
fisub
aad
push
shr
push
pop
dec
iret
in
and
(bad)
sbb
mov
cwde
or
cmp
clc
mov
cmp
pushf
call
and
cmp
test
sbb
pop
xor
xor
xchg
mov
and
xor
xchg
jns
mov
pop
or
or
xchg
cmc
xchg
adc
into
xchg
fisubr
adc
pop
jns
outs
dec
data16
sbb
dec
cmc
fsubr
or
les
pop
int
jmp
inc
sub
outs
push
sbb
ins
movups
push
shr
in
shl
xchg
mov
mov
dec
sub
inc
ins
xor
stos
int3
adc
cld
inc
cs
lahf
popf
mov
test
dec
inc
and
mov
arpl
div
mov
mov
dec
mov
ror
cmp
scas
or
imul
jnp
fiadd
sub
inc
cmp
add
leave
adc
xlat
cmp
mov
jg
xlat
(bad)
(bad)
fwait
cmp
xchg
pop
cdq
cs
dec
jmp
xor
add
and
scas
lods
mov
and
adc
xchg
loope
mov
repz
out
add
ins
push
lods
adc
stos
sbb
add
outs
mov
shl
push
mov
outs
jo
xchg
add
or
mov
cmc
xchg
repz
sbb
fcomp
fist
sub
sti
or
xchg
fsubr
or
mov
inc
lds
add
iret
xchg
test
add
sub
and
daa
xor
imul
or
inc
mov
or
mov
scas
out
xchg
jecxz
sti
cmp
or
adc
mul
lds
cmp
ss
pop
xchg
and
cmp
mov
mov
rcr
push
sub
jnp
push
shl
data16
inc
int3
pop
jle
adc
pop
cmps
and
cmc
pop
ja
pop
(bad)
inc
push
hlt
popf
jmp
push
inc
bound
cli
push
inc
inc
in
cmp
fcom
mov
mov
scas
pushf
inc
and
lods
std
or
inc
arpl
push
xor
iret
lea
xchg
mov
sub
jg
in
inc
push
lds
xor
inc
adc
sub
sub
xchg
out
xor
mov
fild
inc
sub
fldenv
pusha
dec
imul
push
cmps
mov
push
call
inc
cwde
xchg
sub
outs
es
cld
lods
dec
inc
mov
push
pop
or
sar
dec
xlat
out
test
hlt
adc
inc
les
sub
xchg
sub
xor
enter
fwait
arpl
xlat
push
mov
shl
outs
sub
sahf
lahf
in
cli
ret
imul
nop
icebp
lahf
mov
rcr
mov
and
mov
cdq
push
setno
ret
cwde
adc
jl
mov
sub
mov
push
inc
sub
shl
repnz
inc
mov
loope
xor
or
repz
and
shl
idiv
scas
adc
or
pusha
cdq
push
in
das
mov
or
es
ins
sub
xor
fs
pop
inc
je
out
xchg
das
sbb
jnp
das
lods
inc
push
push
pop
add
(bad)
cmps
push
mov
syscall
push
mov
xchg
jge
paddsb
jns
iret
test
imul
pop
mov
add
pop
cmp
(bad)
xchg
ja
pop
fild
enter
hlt
or
pop
leave
cmps
movs
scas
(bad)
xor
and
xlat
pop
pop
mov
dec
sub
xchg
rcl
sub
cmp
out
and
xchg
push
stos
jecxz
(bad)
and
in
cmp
rcl
sahf
out
into
jl
dec
scas
test
icebp
cmp
jb
inc
mov
push
retf
add
push
sub
mov
and
xor
fistp
hlt
mov
push
rcl
xor
out
add
outs
call
ficomp
daa
mov
clc
sbb
cwde
dec
aam
mov
pop
xor
movs
stc
ret
fadd
les
jae
mov
fcomp
rcl
popf
xor
fild
and
dec
xchg
cmc
mov
adc
mov
adc
pop
or
adc
mov
push
xor
xchg
inc
imul
cs
push
ins
stc
push
mov
cmp
test
adc
jb
(bad)
int
call
daa
mov
mov
cwde
js
popa
pop
mov
adc
push
mov
fsub
jbe
dec
popa
sbb
ror
add
xchg
push
retf
cmp
sub
(bad)
hlt
rcr
mov
aad
fisubr
push
or
shld
cld
imul
rcl
lds
outs
jg
dec
push
lods
jle
adc
mov
mov
cmp
and
jg
adc
ds
mov
pop
daa
and
add
into
xor
mov
ret
int3
xor
adc
sbb
retf
jmp
xor
add
popf
nop
mov
int3
imul
pop
mov
pop
add
mov
cwde
xor
cmp
cmps
jge
and
add
popf
xchg
mov
sub
push
scas
adc
lods
ret
call
pop
mov
scas
cmps
div
add
sbb
daa
mov
aas
xchg
push
pop
push
cmp
loopne
pop
push
pop
and
push
comiss
fucomip
pop
mov
shl
mov
sub
fisub
mov
cmp
dec
inc
rol
add
loopne
repz
or
or
rol
xchg
or
xor
imul
sbb
sub
std
adc
add
mov
outs
cmps
xchg
ss
mov
test
mov
rcl
sti
sbb
and
scas
mov
mov
rcr
push
push
nop
aaa
pushf
sbb
dec
push
mov
call
push
mov
mov
push
push
dec
sti
jno
mov
stos
xchg
iret
xchg
aad
std
add
mov
adc
mov
fimul
(bad)
push
jp
in
jmp
sar
aaa
cwde
xor
pushf
sbb
sub
shl
ror
fidivr
cmps
test
cmps
pop
repz
mov
lods
stc
jne
mov
leave
dec
mov
dec
lods
pop
mov
icebp
fld
fwait
push
lea
icebp
lock
pop
scas
jl
into
pop
clc
les
jne
mov
and
and
sub
pop
push
sbb
xchg
mov
popf
cmp
loope
loopne
scas
pop
(bad)
jbe
adc
push
push
out
jmp
push
mov
in
push
daa
push
lods
jns
stos
fcmovnb
mov
adc
lods
ss
pop
xor
xor
nop
out
lock
(bad)
dec
aam
(bad)
shr
cmp
hlt
inc
imul
jge
fs
push
dec
dec
xchg
aas
push
into
mov
scas
jge
xor
call
mov
test
stos
ret
fistp
xlat
add
mov
scas
(bad)
jmp
xchg
dec
mov
sub
out
int
xchg
repnz
mov
add
xchg
les
sub
cmp
rcl
sub
fst
js
mov
xchg
and
xchg
pop
xor
ja
or
mov
mov
gs
xchg
xor
fist
test
mov
mov
fisubr
jae
or
ds
xchg
in
call
adc
pop
cmp
mov
fdiv
test
xor
sti
test
(bad)
xlat
aas
sub
shl
nop
sar
sub
sub
pop
adc
inc
pop
pop
in
push
mov
dec
sbb
adc
push
das
pop
jnp
int3
cmps
fimul
inc
and
btc
int
fsub
xchg
pop
scas
dec
or
loopne
retf
test
lods
inc
fst
nop
sbb
rcl
push
scas
fisub
(bad)
push
or
fdiv
and
iret
repnz
push
sbb
jmp
daa
inc
sub
leave
push
or
outs
in
gs
hlt
xlat
loopne
and
movs
cmp
add
jo
add
clc
jge
pop
or
and
xchg
(bad)
cwde
xor
lahf
clc
aaa
scas
and
jl
js
cmp
je
xor
lods
mov
ss
xchg
xor
jmp
adc
adc
loope
xchg
sub
adc
push
in
jle
out
gs
push
in
sub
daa
dec
dec
lock
pop
xchg
pop
fwait
jp
add
add
add
inc
push
or
jecxz
cmp
pop
mov
aaa
test
sbb
out
std
std
dec
mov
dec
and
sub
dec
out
mov
mov
xchg
adc
sub
loop
push
jmp
mov
(bad)
adc
xchg
out
or
xor
pop
inc
retf
lock
arpl
in
add
(bad)
push
jne
inc
sub
cs
mov
popa
push
cmpxchg
sti
shr
jns
sub
pop
aad
push
sbb
xchg
sub
test
addr16
and
adc
pop
cli
retf
pop
hlt
add
pop
cmp
push
popa
mov
and
ins
push
add
std
or
jo
outs
mov
jge
dec
sub
inc
outs
arpl
inc
into
push
in
jae
or
pop
fdiv
iret
push
jle
push
mov
pop
xor
(bad)
cmc
movlps
fldenv
leave
xchg
pop
jns
sbb
push
clc
shr
xlat
mov
xor
icebp
ss
and
mov
jmp
scas
(bad)
push
ss
ret
mov
div
popf
hlt
add
imul
and
push
mov
lods
push
mov
mov
push
adc
mov
scas
pop
jg
add
sbb
shl
dec
xchg
push
fadd
push
fnsave
sbb
mov
mov
ror
clc
add
push
dec
pop
jmp
mov
adc
jo
out
in
xlat
ror
cmps
dec
push
fsubrp
ins
add
jg
inc
(bad)
xor
int3
cmc
jmp
push
jne
movs
lock
(bad)
fucomi
adc
or
icebp
pop
int3
and
pop
cmps
cmps
shl
mov
add
ror
adc
or
mov
arpl
lods
cmps
lahf
shr
pop
daa
xchg
xor
cmp
push
test
int3
sar
mov
jg
mov
xchg
rcl
push
call
xor
aam
xor
pusha
pusha
and
mov
or
call
or
cdq
xchg
fidiv
sub
(bad)
dec
repz
ret
loopne
pop
not
sbb
faddp
push
sbb
popa
xchg
fiadd
or
(bad)
nop
cmp
aaa
movs
cmps
pushf
inc
xchg
mov
out
out
js
imul
(bad)
cld
jmp
cmps
leave
loop
dec
(bad)
int3
out
(bad)
xchg
into
call
lods
and
int
cmp
sti
fwait
sub
push
lods
cmp
xchg
pop
shl
pop
fs
inc
shl
shr
xor
ret
test
dec
(bad)
call
jae
aaa
sub
adc
fwait
sbb
daa
xor
jns
xor
mov
push
and
or
test
call
pop
pop
dec
dec
aam
popf
xchg
ret
outs
test
fild
fst
cmp
adc
and
inc
adc
and
inc
fmul
hlt
in
dec
lods
dec
jae
psraw
and
xchg
xchg
cmp
test
cmp
ins
push
sbb
xor
shl
inc
test
sbb
sahf
popf
aam
pop
retf
rol
in
inc
ss
imul
mov
pop
into
iret
xor
call
sub
out
adc
push
add
push
cld
mov
loopne
lds
das
(bad)
retf
dec
dec
ss
scas
ret
jbe
jmp
mov
in
into
xchg
ds
ins
cmps
rcl
aam
test
jo
adc
idiv
call
jns
sar
sbb
mov
xor
inc
mov
fdiv
push
int
sbb
or
(bad)
(bad)
repz
xor
or
pop
dec
sti
cmp
fcmove
dec
add
mov
dec
sub
add
inc
es
xor
hlt
stos
shl
and
ja
inc
dec
int
mov
mov
jb
cmp
push
adc
test
nop
ret
fwait
popa
ret
jo
mov
ja
repnz
aam
jns
call
sub
dec
push
call
out
and
pop
popf
icebp
push
and
sub
mov
push
xlat
sbb
sahf
xor
or
jge
push
jge
(bad)
jp
sbb
sbb
dec
jl
repnz
mov
mov
(bad)
pop
mov
inc
int3
pop
pop
not
or
imul
push
cli
mov
push
sbb
aaa
lds
sar
sbb
xlat
xchg
mov
bound
pop
xor
add
call
inc
sahf
push
cld
pusha
sahf
call
(bad)
push
mov
test
out
aad
jmp
inc
add
mov
cli
inc
mov
retf
pop
hlt
mov
mov
std
mov
mov
popa
pop
lea
cmp
or
push
pop
call
jmp
ja
jnp
outs
loope
push
out
pop
inc
xor
cli
test
ins
stc
call
jno
jle
adc
out
inc
xor
sbb
push
or
daa
push
js
add
jge
and
leave
call
hlt
outs
inc
das
in
or
popw
cmp
mov
jp
dec
cmp
adc
gs
(bad)
jmp
add
ror
mov
pop
aam
icebp
int
es
pop
adc
std
cmc
js
jle
jecxz
push
(bad)
jmp
jo
test
(bad)
cdq
add
test
push
iret
push
int
xor
and
mov
iret
in
pop
jp
or
mov
retf
xor
pop
jp
sub
movs
xor
pop
lods
mov
push
arpl
push
push
out
inc
daa
xchg
ds
and
add
mov
and
shl
(bad)
mov
dec
and
ss
add
mov
mov
movs
ins
cmp
push
and
add
inc
jge
cmps
push
pop
mov
aam
xchg
scas
icebp
jnp
inc
loop
push
in
stos
ins
mov
xor
js
mov
fcomp
or
mov
mov
cmp
or
nop
mov
mov
sbb
movs
repnz
pop
xchg
cmp
xor
xor
xor
into
std
xchg
sbb
mov
and
jg
mov
fsubr
fisttp
(bad)
std
cmp
daa
(bad)
pop
mov
cmps
xchg
rcl
fadd
mov
xor
mov
shr
adc
push
xchg
aas
dec
loopne
mov
mov
sub
fdiv
adc
inc
adc
(bad)
sbb
retf
jge
sbb
and
add
clc
bound
sub
inc
or
sbb
and
pop
jnp
sbb
rcl
in
dec
icebp
sti
pop
and
mov
mov
retf
add
data16
mov
jb
xor
hlt
(bad)
mov
cmp
mov
jle
hlt
cmps
cld
mov
loop
das
rcr
sbb
xchg
out
aam
mov
sbb
sbb
sub
in
pushf
(bad)
popf
call
int3
inc
mov
hlt
aad
jbe
mov
popa
pop
jle
pop
mov
push
loop
(bad)
out
push
sbb
cs
rcl
aas
loopne
sub
inc
cwde
or
je
xchg
pop
pop
adc
lea
inc
(bad)
sbb
daa
or
rcr
clc
add
add
pop
fisttp
jecxz
loope
aad
stos
mov
ins
cmp
push
call
jns
jnp
inc
lahf
dec
cwde
hlt
cmps
aas
mov
mov
sbb
sbb
sub
stos
jge
in
nop
xor
push
pop
adc
pusha
pop
iret
inc
lods
test
xchg
out
test
sub
adc
shr
inc
shl
inc
xchg
jae
push
add
xchg
call
mov
add
ds
or
ins
mov
cmp
fnstsw
div
xchg
push
mov
and
retf
pop
movs
repnz
jmp
clc
stc
popf
int
cmps
enter
inc
add
gs
sbb
mov
ins
rcl
dec
div
xor
or
xor
pop
push
xor
popa
or
or
pop
xchg
or
jne
sbb
cdq
mov
adc
daa
pop
inc
cdq
fs
das
or
retf
jno
mov
jecxz
shr
xor
call
xchg
or
cmp
lds
mov
scas
fidiv
add
xor
push
or
push
bound
bound
and
and
mov
sti
inc
add
outs
out
or
pop
push
mov
imul
aaa
xor
mov
cmps
lahf
pop
loopne
pop
aam
xchg
push
ins
cld
add
(bad)
call
and
adc
call
mov
cli
pop
cmc
fisttp
(bad)
mov
(bad)
pop
test
or
sbb
shl
jecxz
pop
add
add
(bad)
or
cwde
lock
ja
jmp
cdq
adc
scas
cld
xchg
clc
jnp
cli
cmp
out
fiadd
push
push
xchg
inc
je
jae
clc
rcr
cld
mov
dec
mov
push
adc
enter
jns
sub
in
jb
mov
push
pop
int3
jb
dec
repnz
es
dec
int
sbb
sub
retf
dec
inc
mov
movs
dec
icebp
inc
jno
popf
adc
jl
adc
mov
test
push
mov
jmp
retf
xchg
mov
inc
sbb
repz
inc
cmp
popf
outs
sahf
int3
sub
or
cmp
popf
fcom
cmp
(bad)
cmp
mov
outs
data16
ds
dec
dec
dec
sahf
sub
outs
and
add
scas
and
nop
sub
(bad)
mov
xchg
adc
pop
and
and
dec
aaa
dec
or
mov
cmp
xchg
xchg
sub
add
cs
sbb
scas
push
fwait
push
stos
fld
sahf
xor
loopne
and
sbb
xor
jne
mov
sub
ds
loopne
pushf
pusha
sub
pop
xchg
mov
pop
adc
in
pop
into
shl
mov
leave
(bad)
add
jne
xchg
gs
inc
pop
in
sub
pop
pusha
div
push
(bad)
pushf
hlt
cmp
inc
jmp
mov
aam
fld
out
enter
push
jecxz
push
aam
mov
jp
mov
cmps
inc
mov
sahf
adc
gs
cmpxchg
in
ret
movs
xor
dec
sub
nop
imul
and
mov
sahf
scas
push
mov
imul
xchg
and
out
rcr
mov
pop
rol
out
jb
dec
push
retf
mov
jb
mov
xchg
pop
shl
pop
idiv
mov
sbb
in
addr16
push
in
xchg
add
push
out
in
outs
and
pop
pop
adc
and
mov
cmp
daa
lods
shl
push
imul
push
push
or
xor
pop
sub
fs
outs
ret
adc
mov
xchg
xchg
scas
(bad)
outs
xor
imul
jns
fs
ss
sbb
mov
cs
mov
jmp
shr
jp
xchg
push
leave
or
jg
lea
jno
es
les
mov
mov
ss
cmps
adc
jnp
push
shl
mov
std
inc
lods
loope
sub
fsubr
mov
jmp
cmps
repz
sbb
scas
adc
pop
rcl
cmc
push
or
mov
inc
ret
add
jl
sbb
lods
cld
cmc
jns
(bad)
(bad)
or
jge
xlat
jg
xor
dec
iret
mov
mov
ror
add
jb
jmp
(bad)
jns
(bad)
lea
inc
(bad)
pop
mov
out
(bad)
adc
dec
or
ins
pop
dec
sbb
ret
ins
pop
aaa
aam
dec
(bad)
out
enter
jmp
es
out
sbb
mov
jmp
call
mov
or
sbb
aaa
ins
out
or
xchg
icebp
js
ds
or
xor
and
sahf
lock
scas
cmovb
add
je
jecxz
in
xor
js
xchg
sub
pushf
aad
das
pushf
lds
outs
fs
ret
imul
xor
movs
movs
dec
mov
adc
bound
add
daa
icebp
aad
mov
outs
mov
pop
jnp
lods
xor
add
jns
jb
int
pusha
push
scas
mov
and
dec
loope
ja
nop
dec
addr16
out
mov
mov
jmp
xor
dec
rol
int
scas
xchg
mov
jno
dec
pop
mov
cdq
mov
dec
mov
jo
sub
rol
int3
in
push
fmul
ror
mov
outs
sbb
ss
aad
pusha
clc
fwait
sub
pop
mov
jge
adc
jecxz
inc
xchg
cmc
push
sub
mov
movs
or
arpl
mov
cdq
pop
sub
jle
into
icebp
add
cmps
jle
xor
std
stos
mov
arpl
aad
mov
jg
push
dec
loope
mov
xchg
add
dec
jns
inc
fidivr
xor
lea
add
scas
add
in
mov
(bad)
neg
in
xor
mov
ret
pop
stos
inc
mov
mov
fld
ret
sbb
repz
movs
leave
pop
cdq
dec
popf
mov
add
sbb
or
mov
out
shl
out
enter
add
jl
jmp
add
xchg
jo
xor
mov
stos
lods
or
imul
stc
inc
ret
xchg
out
movs
hlt
xchg
inc
ins
punpckhbw
ret
xor
loope
adc
lods
mov
ret
fmul
cdq
xchg
fadd
xchg
(bad)
shr
addr16
pop
(bad)
mov
adc
pop
xchg
inc
cmp
call
cmp
arpl
enter
xchg
pop
sub
(bad)
mov
mov
add
jecxz
gs
icebp
je
cs
sar
(bad)
xchg
shl
stos
retf
fsub
cmps
les
and
inc
aam
mov
iret
(bad)
in
(bad)
and
inc
call
adc
fdivr
mov
sbb
lods
inc
stos
jecxz
mov
xchg
sbb
pop
mov
retf
jns
pop
inc
sub
push
add
dec
jne
adc
fimul
js
mov
in
movs
push
pop
cmp
pop
clc
sbb
iret
jae
ret
arpl
cli
cs
ins
js
cs
movs
and
movs
xor
pop
icebp
cwde
in
ins
mov
leave
jp
cmp
in
scas
in
adc
xchg
js
retf
cmp
and
repnz
fisttp
lods
rcl
int
(bad)
xlat
les
out
mov
cmc
out
gs
jb
test
cmp
jecxz
jae
ins
sbb
add
mov
pop
xor
cwde
mov
mov
mov
sub
jne
adc
inc
in
cmp
bound
mov
inc
and
mov
out
pop
arpl
retf
inc
push
aad
outs
sub
mov
pop
jle
pop
lds
(bad)
arpl
xchg
out
and
and
imul
inc
mov
(bad)
gs
sbb
sub
(bad)
leave
mov
jnp
(bad)
in
shr
test
cwde
aaa
mov
lahf
vphsubdq
xchg
xor
int3
mov
fbld
xchg
sbb
jl
ins
jnp
dec
mov
(bad)
ins
ret
je
pop
add
(bad)
pmulhuw
rcl
push
xlat
fs
pop
pop
cmp
fcomp
mov
or
inc
addr16
add
push
inc
pop
dec
dec
jp
dec
xor
xor
movs
cdq
(bad)
cmps
sbb
loop
add
mov
outs
mov
inc
mov
push
js
and
gs
cmps
xadd
loopne
lods
inc
dec
fisubr
push
sbb
xor
xchg
add
jmp
jne
push
mov
xor
and
jmp
push
in
jmp
jl
inc
std
stc
push
ja
cmp
icebp
inc
pop
rol
jnp
frstor
(bad)
dec
lea
test
push
aad
jecxz
mov
mov
fimul
scas
repnz
pop
scas
out
ins
push
pushf
xor
mov
lock
jge
fwait
sub
cmp
push
or
push
push
cdq
in
xor
inc
sub
jno
push
cld
pop
ret
enter
or
test
push
and
movsx
sbb
dec
pushf
stc
sub
mov
(bad)
rcr
icebp
sar
js
loopne
xchg
xchg
test
pushw
add
mov
or
bound
pop
add
sbb
cmp
aad
push
xor
inc
pop
xchg
out
fstp
xchg
dec
mov
int
in
xchg
(bad)
(bad)
shr
xlat
into
pop
sahf
aaa
inc
cmp
out
xchg
(bad)
and
mov
xchg
pop
(bad)
stc
mov
sti
(bad)
mov
dec
aaa
adc
jne
ret
jmp
outs
add
push
sub
stc
nop
cmp
imul
loop
test
movs
xlat
pop
mov
and
sbb
jo
sub
mov
les
dec
push
jbe
xor
test
cmp
and
mov
frstor
push
pop
jnp
xlat
mov
clc
(bad)
fldlg2
das
or
clc
ret
fsubr
out
lods
or
shl
mov
movs
push
outs
xor
imul
push
inc
cli
cmps
std
or
lea
sub
retf
popf
div
cmps
pop
adc
in
out
or
and
sub
xlat
push
push
std
(bad)
loope
sub
aas
xchg
addr16
fs
scas
xchg
dec
inc
jns
adc
leave
test
inc
arpl
mov
push
in
adc
scas
dec
call
cmc
lock
pushf
dec
pop
sbb
pextrw
lods
and
pop
cmps
rol
cmps
jg
cmps
push
dec
fsub
imul
bound
dec
pushf
leave
arpl
pop
add
cmp
mov
jne
scas
sub
popf
in
cmp
out
and
mov
mov
imul
pop
sahf
lock
mov
cmc
fcmovu
mov
(bad)
cmp
jecxz
repz
cmp
adc
test
and
inc
dec
ja
ja
sbb
(bad)
iret
neg
sbb
and
int3
(bad)
and
scas
push
mov
sbb
cmp
rcl
test
das
xor
push
xchg
pmulhuw
jo
push
(bad)
aam
cmps
test
inc
and
dec
repnz
mov
mov
addr16
sbb
sub
cmp
pushf
inc
push
fdivr
xor
(bad)
mov
outs
jbe
scas
retf
test
inc
xor
xor
pop
mov
adc
pop
mov
arpl
dec
dec
push
fwait
dec
jl
xlat
add
adc
xor
push
mov
ficomp
loop
sbb
dec
mov
xchg
imul
ins
scas
pop
in
popf
push
(bad)
push
xchg
arpl
mov
call
repz
enter
aad
(bad)
jmp
aam
mov
xor
pop
xchg
jle
pop
lds
adc
outs
jg
outs
leave
xchg
fimul
out
mov
xchg
shr
or
je
cmps
adc
push
nop
(bad)
pusha
into
int
stos
outs
call
pop
enter
dec
icebp
cs
push
jp
fistp
push
mov
mov
pop
add
dec
cwde
inc
call
inc
cdq
cld
mov
push
mov
sub
xor
hlt
movs
int3
mov
mov
pop
hlt
xor
ret
push
jo
test
inc
imul
(bad)
shl
lahf
fiadd
mov
js
test
inc
adc
mov
xchg
sub
lods
push
mov
les
shl
adc
pop
mov
adc
jmp
xor
adc
and
jno
iret
lods
inc
hlt
clc
sub
adc
mov
and
dec
adc
pop
adc
(bad)
jle
push
into
inc
test
aam
push
push
jg
adc
dec
mov
test
ror
je
add
and
sbb
in
repz
sbb
jp
pop
push
mov
repz
psubusw
jle
dec
jnp
push
cmp
ins
nop
sbb
ja
leave
ret
imul
mov
ror
pop
inc
push
ret
mov
push
out
xlat
ds
push
mov
neg
pop
sbb
mov
pushf
sar
inc
test
mov
mov
mov
push
int
inc
pop
inc
fdivr
sub
jl
or
imul
cld
pusha
dec
ret
call
(bad)
xlat
pop
add
jecxz
ins
pop
jns
pop
dec
loopne
add
in
xchg
xor
adc
imul
into
into
movs
fbld
movs
fstp
nop
imul
adc
inc
lea
bnd
pop
bound
xchg
scas
push
shl
mov
not
mov
jl
add
push
pop
ret
rdpmc
out
popf
cdq
push
xor
retf
sbb
xor
sub
retf
sub
enter
mov
retf
clc
push
xchg
xchg
mov
xor
fldenv
in
or
shl
push
jmp
(bad)
sbb
jl
(bad)
adc
cmp
adc
inc
dec
std
sahf
add
aas
movs
xchg
in
dec
fwait
pop
jecxz
cmc
mov
sbb
inc
loop
cmp
jmp
pop
shl
ror
cld
dec
cmp
pop
add
and
jmp
push
cvtdq2ps
ret
idiv
push
xor
loope
push
mov
adc
sbb
xlat
mov
mov
mov
xchg
pushf
push
ret
mov
ins
das
das
loop
in
pusha
add
(bad)
ficomp
dec
popf
leave
cmp
jae
dec
mov
mov
adc
xchg
das
neg
in
mov
jne
aas
jnp
out
mov
jle
ror
push
push
cwde
stc
ins
xchg
mov
adc
shl
push
cwde
iret
mov
fstp
mov
push
push
inc
std
jno
mov
and
adc
retf
ja
gs
jecxz
inc
arpl
inc
dec
ret
dec
(bad)
push
xchg
fisub
ficom
mov
dec
jno
push
in
cmp
aaa
aam
sub
fsubr
jae
in
stc
dec
sub
iret
inc
sub
mov
leave
push
jle
lods
jns
retf
gs
stos
mov
cmp
mov
fisubr
sub
xor
popf
iret
inc
fdiv
add
addr16
aad
jge
out
and
aad
retf
adc
push
ficom
mov
and
push
jne
dec
or
inc
cmc
pop
and
xchg
or
aaa
mov
mov
cmp
dec
(bad)
in
pusha
std
and
lock
sub
lods
scas
pop
nop
test
cmp
or
adc
pop
xor
aaa
test
or
xchg
repz
clc
fucomip
int
mov
idiv
pop
outs
cmp
shl
mov
mov
jge
adc
ror
mov
sbb
inc
jmp
jae
mov
and
fsub
jo
int
add
ret
addr16
jbe
jle
mov
loope
push
(bad)
js
dec
(bad)
cmc
mov
(bad)
je
shl
call
xor
dec
add
mov
cmp
cmp
or
adc
(bad)
imul
test
and
int
jb
ds
lods
ret
mov
adc
push
mov
sub
das
mov
setl
outs
shl
xor
add
inc
sbb
ficom
mov
xchg
pop
in
push
aas
xor
cmp
ret
loopne
sbb
cs
xor
add
add
outs
jmp
dec
icebp
loopne
rcl
iret
jb
bnd
mov
ins
push
and
pop
pop
jl
out
cmp
dec
pop
pusha
mov
dec
out
mov
cmps
mov
dec
sub
mov
sti
push
sbb
adc
sub
mul
push
test
lods
in
ins
add
clc
mov
cmp
imul
imul
mov
out
fucomp
xchg
cli
movs
in
push
push
mov
imul
sti
xor
in
adc
mov
in
call
or
xor
and
lock
outs
fisub
(bad)
jge
fdiv
dec
popaw
loope
outs
mov
push
clc
scas
ret
inc
or
psubb
jg
push
mov
(bad)
mov
jae
jmp
or
in
aas
push
das
popa
ret
inc
xchg
clc
sbb
scas
ins
mov
sub
mov
inc
iret
sbb
sbb
test
outs
mov
popf
leave
and
dec
dec
pop
es
cmc
xlat
loop
sbb
mov
mov
les
pop
adc
jne
xchg
mov
inc
movs
cmp
mov
and
push
mov
pusha
inc
xchg
test
cdq
inc
stos
push
popf
mov
das
int
mov
add
xor
jmp
jle
push
out
or
cwde
sbb
adc
data16
add
daa
in
sub
(bad)
lods
pop
retf
js
add
xor
and
fimul
sub
ret
push
imul
jnp
movs
xor
pop
imul
push
or
dec
ds
imul
aaa
jnp
je
and
sbb
stc
or
and
jmp
lock
mov
call
repz
sbb
in
push
jnp
lods
loop
dec
hlt
xor
or
enter
mov
and
or
lea
stos
scas
inc
fadd
dec
xchg
test
sub
and
mov
fimul
inc
enter
xor
ror
gs
cmp
mov
cmp
jge
dec
stos
mov
push
mov
inc
out
mov
inc
mov
jge
call
es
xchg
popf
pop
mov
xchg
cmp
sbb
jp
lods
lods
inc
ret
pop
mov
or
mov
inc
lock
cmp
pop
dec
push
sbb
xor
push
push
adc
sar
mov
mov
inc
pop
loopne
aad
int
and
repnz
retf
fmul
cmp
sahf
hlt
ja
push
not
pop
mov
inc
les
xor
lds
mov
jae
movaps
in
push
ins
cmp
jns
ror
lock
fnstsw
enter
aaa
pushf
sub
add
add
push
out
sub
inc
test
sub
pop
cwde
push
popf
and
fldl2t
xchg
push
sbb
scas
push
shl
sub
add
jmp
lods
(bad)
mov
add
cmp
pop
xchg
mov
test
jb
aad
and
ret
and
jmp
mov
pop
retf
cdq
adc
push
inc
mov
movs
jbe
fwait
mov
dec
xor
in
cdq
lods
out
(bad)
adc
dec
lock
mov
adc
push
retf
mov
movs
fld
inc
daa
xrelease
mov
and
mov
mov
outs
push
ds
dec
data16
call
call
ret
pusha
sub
cwde
jmp
shl
mov
dec
int3
icebp
mov
sbb
inc
icebp
add
fwait
push
mov
fst
push
retf
sub
xchg
cld
sar
push
ret
xchg
push
fdivr
push
inc
add
jmp
inc
mov
scas
(bad)
fdiv
loope
dec
imul
inc
jmp
into
push
ins
inc
xor
xchg
loopne
xchg
sbb
inc
mov
cdq
mov
sub
test
aaa
cmps
adc
mov
push
dec
mov
daa
push
lods
test
std
loop
pop
in
add
fmul
xor
push
sbb
mov
mov
gs
das
cmp
dec
aam
sbb
mov
cmp
dec
and
jp
sub
cld
aad
add
imul
adc
inc
adc
dec
fidiv
arpl
jo
outs
and
xchg
and
retf
mov
cmp
xor
fisubr
adc
sti
in
fisub
das
jmp
sub
mov
ins
or
cmps
out
mov
pushf
cmp
stos
sar
xchg
stc
xor
or
fsubr
cmp
dec
stos
adc
mov
out
adc
cld
pop
movs
fidivr
inc
xor
mov
js
push
sub
xor
movs
retf
cld
xchg
adc
leave
jmp
mov
xor
div
jecxz
(bad)
mov
(bad)
out
jae
movs
push
fiadd
fs
inc
push
enterw
xchg
inc
add
jecxz
imul
adc
xchg
xchg
push
lahf
ds
popa
xor
inc
sbb
pop
xchg
dec
(bad)
lea
add
jb
inc
les
lds
aad
outs
not
push
and
dec
and
call
rcr
dec
inc
daa
mov
inc
ret
aas
mov
sbb
add
fidiv
not
xchg
ror
cmps
jbe
cld
fistp
jmp
jae
adc
imul
adc
mov
mov
jmp
pusha
sub
out
std
jns
popa
jmp
cmps
aas
cmp
push
in
ss
je
dec
ins
loopne
(bad)
pop
test
inc
xor
sub
adc
jmp
jae
push
inc
popf
es
daa
popf
lods
jnp
into
mov
clc
dec
lea
mov
cmp
cmp
mov
push
add
push
dec
not
push
xor
push
shr
out
(bad)
(bad)
pop
pop
push
outs
retf
mov
jne
xor
adc
jmp
aas
pop
loopne
push
loop
test
sub
in
setbe
sar
jmp
cld
ins
xchg
jl
adc
adc
pushf
sub
emms
add
adc
dec
ror
mov
jne
and
test
stc
sbb
and
jle
ins
dec
push
sub
fbstp
lock
cmp
push
mov
sub
push
iret
or
inc
jg
jnp
jle
mov
push
(bad)
sub
mov
jecxz
xchg
xchg
and
lock
int3
add
pushf
shr
(bad)
mov
addr16
lahf
xor
adc
or
cmp
cvtdq2ps
mov
hlt
xchg
lock
jp
test
mov
cmps
add
iret
xor
aam
call
enter
test
sbb
pop
jl
movs
lock
int
outs
scas
shr
add
cmp
cld
and
xor
pushf
aas
sub
push
ins
sbb
retf
mov
pop
bound
jnp
enter
popa
adc
adc
icebp
mov
mov
clc
leave
test
jle
fimul
mov
mov
and
sti
add
movs
xchg
adc
jae
lahf
mov
cs
dec
repz
stos
pusha
rcr
push
lea
lahf
inc
pop
xchg
dec
pop
mov
push
arpl
inc
enter
push
fisubr
pop
sub
fwait
jmp
sbb
ins
cmp
and
push
loope
add
push
pop
xchg
shld
popa
push
mov
lods
push
push
xchg
dec
stos
push
sub
mov
mov
fistp
and
jl
std
dec
ret
push
sbb
mov
or
pop
test
(bad)
int
sub
js
xchg
das
call
cdq
or
rol
unpckhps
aaa
call
gs
pop
scas
or
push
dec
dec
fcom
lea
xchg
fisttp
jge
pop
mov
movs
leave
jl
fisub
add
and
call
or
fwait
inc
or
ins
movs
push
cmp
fnstcw
jmp
cmp
cmp
sar
mov
in
scas
out
test
inc
imul
ficomp
inc
jge
out
or
es
int
(bad)
adc
mov
add
jnp
ror
pop
jmp
inc
shl
jle
into
js
jmp
mov
fbstp
leave
fs
movs
ins
add
sahf
mov
dec
lods
retf
adc
scas
xor
pop
jns
xor
dec
icebp
and
push
sub
dec
imul
pop
jmp
in
int
icebp
add
dec
fimul
stos
outs
jne
push
xchg
test
jg
(bad)
fist
mov
pop
push
jmp
(bad)
sbb
inc
pusha
cdq
jbe
cs
or
clc
(bad)
push
and
cld
xchg
adc
cmp
dec
mov
push
cs
(bad)
jl
mov
mov
adc
dec
mov
int
xchg
mov
cmp
xor
cwde
ds
jecxz
jbe
jg
pop
push
and
inc
push
in
enter
sub
enter
inc
repnz
or
dec
sub
loopne
adc
pop
mov
jge
mov
cmps
xor
mov
pop
add
dec
or
add
mov
aas
pop
out
adc
movs
and
xor
idiv
and
jmp
fistp
xlat
sub
mov
mov
and
movs
xchg
and
and
aad
popf
sub
push
lds
push
xchg
pop
mov
mov
adc
not
pop
add
lods
adc
jg
mov
mov
fbld
ds
push
leave
push
jl
js
xchg
repz
push
dec
mov
out
ins
test
or
inc
sub
aam
cmp
loope
dec
cmp
int3
sbb
xchg
xor
mov
popa
repz
call
xor
adc
(bad)
cmp
or
adc
icebp
xchg
sub
cmc
inc
sub
outs
scas
push
xchg
add
loope
and
or
sbb
mov
jnp
outs
or
cmps
rcl
mov
pop
lahf
xlat
icebp
sahf
xor
add
jo
jae
pop
xor
loopne
repz
add
jb
pusha
loop
movs
cwde
jp
icebp
sbb
call
inc
push
(bad)
stos
pop
inc
stc
adc
sti
and
pop
fadd
(bad)
push
loop
sub
das
push
xor
into
aaa
outs
mov
sahf
xchg
or
mov
cmp
mov
cmp
call
int
pop
push
cmp
jg
dec
cmp
stos
add
push
lahf
je
addr16
movs
lock
dec
addr16
xchg
or
jbe
dec
out
cdq
cli
fwait
cmp
xchg
push
test
loope
jno
ror
push
arpl
xchg
lea
daa
in
inc
rcr
out
ror
ins
dec
xor
mov
cmp
cmp
xchg
inc
xor
dec
(bad)
or
das
mov
and
push
or
outs
jo
inc
adc
push
jbe
ret
mov
outs
mov
push
js
sub
lods
inc
fcom
push
jae
jmp
ror
pop
mov
loope
(bad)
not
(bad)
pop
jnp
mov
inc
xchg
pop
and
cmps
out
pop
cmps
ds
into
lahf
mov
mov
pusha
ret
fs
(bad)
mov
nop
and
aad
(bad)
fmul
jmp
mov
jbe
popf
sub
in
push
inc
jecxz
in
xor
inc
or
loopne
sub
jae
and
cwde
adc
dec
into
sub
pushf
fnsave
adc
into
cs
test
(bad)
out
pop
cmps
xchg
int
push
pop
psubsw
push
loope
push
aad
daa
cmc
push
in
leave
mov
xor
movs
push
jecxz
add
scas
mov
sbb
les
xor
push
(bad)
mov
adc
jg
loop
sbb
and
test
jmp
push
les
popa
push
(bad)
in
(bad)
out
out
inc
sub
mov
dec
and
cwde
xchg
ins
xchg
xchg
inc
mov
sub
mov
hlt
jns
fstp
inc
jbe
loopne
push
sbb
inc
outs
pop
xor
daa
test
aad
call
out
jp
push
ins
psubq
and
shr
shl
mov
inc
pop
mov
leave
aad
cld
lods
mov
icebp
push
cdq
and
mov
adc
inc
xchg
stos
loope
or
mov
ret
jo
(bad)
and
jnp
jp
aas
pop
cmp
cmps
cmp
mov
push
push
mov
xor
stos
jo
dec
jmp
dec
cmp
pop
retf
add
in
xchg
jecxz
mov
call
or
fidiv
cmps
jmp
stc
inc
mov
dec
mov
pop
jmp
mov
icebp
add
cdq
jb
movs
jmp
mov
rol
ss
(bad)
or
jg
movs
data16
mov
cli
es
xchg
out
icebp
mov
push
push
ja
hlt
sub
inc
add
lock
(bad)
ror
mov
jb
cmp
mov
in
jne
mov
jg
es
(bad)
fs
sahf
js
and
mov
fs
jmp
push
iret
dec
adc
cmp
data16
pop
mov
(bad)
mov
rol
add
mov
or
xlat
cs
sbb
(bad)
stc
jmp
ret
sub
lods
loope
cmp
mov
adc
xchg
ins
pop
dec
jb
nop
mov
mov
popf
cld
pushf
(bad)
ins
fild
jmp
xchg
dec
push
data16
mov
mov
mov
jmp
retf
fst
scas
cdq
xor
rol
dec
cmp
gs
sbb
jbe
and
cmp
cwde
(bad)
(bad)
out
and
lea
xchg
jo
sbb
arpl
xchg
add
cmp
jmp
and
movs
cmp
aam
fadd
fs
enter
addr16
out
jnp
(bad)
or
mov
mov
mov
aad
ret
stc
adc
add
cmp
mov
push
pop
scas
repnz
jle
test
dec
(bad)
cmps
sti
xchg
cmps
ffreep
rol
dec
inc
adc
jp
pop
sbb
mov
dec
cmp
add
hlt
or
and
mov
xor
outs
pop
mov
mov
mov
cmc
and
push
xlat
pusha
sti
or
sbb
fmul
inc
jae
iret
sar
out
dec
cdq
icebp
push
mov
push
push
sbb
jb
imul
adc
or
faddp
pop
jmp
aas
mov
in
pop
jnp
pop
daa
and
sub
rol
mov
mov
pop
adc
mov
jnp
mov
leave
or
add
mov
outs
out
mov
xor
fadd
les
fmul
dec
pop
nop
mov
sbb
sub
push
stos
out
jb
sub
dec
pop
or
pop
jp
(bad)
ins
ds
mov
dec
sar
pop
mov
in
(bad)
call
sub
mov
cmp
xor
push
and
mov
ds
add
adc
mov
and
into
mov
adc
mov
cld
mov
jo
inc
dec
shl
mov
or
xlat
in
out
ror
repz
pop
fist
dec
xor
dec
inc
in
jae
test
cmps
add
pop
mov
pop
outs
sub
out
fdiv
mov
push
loopne
sti
arpl
scas
mov
dec
mov
add
adc
ret
lods
xchg
sub
das
outs
jae
(bad)
in
jb
push
hlt
lds
pop
dec
push
ins
into
push
mov
ror
add
jl
shl
int
mov
mov
or
adc
cmp
or
xchg
sbb
jno
ret
(bad)
(bad)
loop
jge
cmp
xchg
xor
(bad)
xor
xchg
cmp
call
mov
pop
sti
jno
sbb
push
nop
aad
sbb
pop
inc
push
(bad)
mov
jns
mov
push
(bad)
inc
(bad)
sbb
pop
dec
fidiv
dec
xchg
inc
sub
lods
addr16
adc
mov
sub
mov
lock
(bad)
fstp
sbb
mov
push
dec
add
adc
push
(bad)
push
iret
mov
dec
jnp
sti
cmps
and
sti
test
sbb
mov
pop
push
mov
cmps
mov
jmp
cmps
inc
ret
sub
lock
dec
xchg
pop
rol
aaa
(bad)
sbb
xchg
xchg
loop
outs
push
mov
lods
xor
out
fistp
inc
mov
pop
xchg
cmp
fcompp
add
mov
and
scas
loope
and
mov
outs
push
das
push
data16
ins
pusha
xchg
sbb
ret
cmp
xchg
ins
das
push
sbb
xor
fsubr
loopne
enter
sbb
icebp
adc
loope
jmp
(bad)
fst
fs
mov
into
movs
fwait
xchg
xor
and
fld
inc
inc
mov
das
mov
pop
loope
push
push
dec
jg
push
cld
sub
sar
ins
repz
add
sahf
pop
sub
loope
out
mov
imul
sub
shl
jle
ds
(bad)
sbb
arpl
std
add
dec
xor
sub
out
jmp
in
ror
nop
scas
iret
xchg
and
mov
xor
fadd
in
shl
mov
fisttp
push
sub
xchg
les
mov
inc
push
stc
adc
fadd
sbb
xchg
mov
mov
les
or
enter
int
and
mov
gs
jno
jecxz
sbb
jmp
adc
shl
dec
sahf
call
idiv
and
push
jbe
int3
or
xor
test
jbe
out
ds
push
clc
inc
mov
in
push
jecxz
inc
fs
movs
inc
repz
inc
outs
repnz
inc
adc
add
pop
popa
repz
mov
adc
mov
mov
push
pmulhuw
lods
jmp
call
pop
pop
xchg
mov
jns
sub
xor
push
push
jae
add
or
mov
xchg
cmp
and
leave
push
xlat
fstp
lock
inc
nop
xchg
gs
cmps
jmp
nop
xchg
ss
mov
mov
repnz
test
stc
add
pop
stc
scas
adc
adc
mov
jmp
xor
rol
fist
jb
mov
movs
cmp
jmp
jb
imul
mov
jne
sbb
inc
shl
xchg
jo
fadd
push
pop
sbb
imul
cmc
mov
sbb
jge
jmp
arpl
jb
xlat
into
loopne
xchg
mov
sub
or
jmp
out
test
mov
sub
sbb
popf
pop
xchg
cmp
push
mov
fdiv
lods
inc
pop
xlat
pusha
clc
lea
into
stos
movs
sbb
sub
adc
jmp
(bad)
sub
std
mov
mov
scas
xor
fisubr
pop
imul
in
mov
mov
(bad)
into
or
in
adc
jmp
pop
mov
xor
xor
retf
imul
cdq
or
outs
clc
push
pushf
(bad)
push
xchg
ins
jo
xor
test
mov
inc
adc
sub
and
aad
mov
add
and
cmps
cld
jns
out
or
stos
mov
hlt
loope
push
push
test
and
outs
jo
loope
out
mov
bound
movsx
shr
dec
mov
sbb
xchg
mov
inc
cmp
les
jmp
mov
or
push
and
shr
mov
in
js
addr16
cmp
push
cdq
aad
aas
gs
outs
or
add
lods
test
jns
mov
lods
call
dec
mov
loop
test
hlt
sub
pop
and
bnd
ja
into
mov
push
popa
xor
cmp
lahf
xor
dec
xchg
clc
mov
sub
mov
inc
cwde
pop
(bad)
dec
xlat
loop
ins
sbb
imul
sub
and
je
sub
das
fsubrp
or
mov
ror
lock
lds
jne
test
out
cli
pop
js
test
mov
loope
pop
fisubr
fldenv
xchg
lahf
adc
imul
dec
mov
nop
and
dec
shl
pop
sub
add
jns
mov
enter
cmp
cwde
and
dec
es
loopne
out
mov
retf
fnstcw
and
jb
fmul
push
arpl
rcr
loope
test
test
movs
xchg
jecxz
pusha
pusha
cmp
lahf
and
lahf
sub
(bad)
in
call
xchg
out
(bad)
and
aas
es
es
cli
fmul
shufps
mov
inc
arpl
fdivr
cmp
jecxz
adc
or
cmp
retf
inc
cwde
dec
test
cdq
add
lock
call
jge
xchg
push
sub
(bad)
aam
add
pop
cld
cmp
fldenv
and
and
cdq
mov
sbb
rol
shr
jae
cmp
mov
lods
mov
(bad)
test
ret
ins
push
jno
ja
jbe
das
sub
bound
sub
jl
ins
ret
pop
movs
push
fstp
stos
stc
movs
loop
cs
pop
sbb
pop
stos
cmp
pop
fwait
mov
inc
out
out
jae
into
dec
iret
inc
mov
fmul
cmp
inc
ins
lds
jle
xlat
lods
mov
mov
fcomp
aaa
out
pop
sbb
inc
nop
sbb
mov
adc
ins
push
sbb
pop
jns
jns
(bad)
xor
sub
ins
lea
and
cmp
test
shr
mov
test
mov
and
ins
lods
xlat
xlat
imul
and
stos
scas
cmp
xchg
xlat
mov
mov
in
sti
lods
mov
lods
dec
add
lock
or
cmp
sub
lock
ror
cwde
sar
ins
and
xchg
pop
ja
push
in
movs
mov
aam
pop
ja
mov
xchg
or
sbb
fcom
cmp
adc
add
lods
sbb
mov
sahf
xor
mov
(bad)
fstp
fchs
test
sub
jns
fnstenv
lods
push
lds
les
in
bound
lods
add
clc
dec
xor
add
bound
dec
sub
pop
fld
fnstenv
fstp
jne
mov
push
mov
push
popf
pop
push
add
scas
jg
add
sub
dec
test
or
inc
adc
js
fiadd
cwde
inc
test
push
mov
(bad)
clc
(bad)
xchg
nop
sub
cmp
mov
mov
inc
jmp
xchg
pop
data16
loop
cli
popa
adc
out
mul
xchg
jo
addr16
out
add
adc
fstp
rol
mov
movs
push
loop
cmc
inc
push
xchg
rcr
js
int3
xlat
loop
sbb
push
mov
adc
mov
rol
xor
lods
hlt
sar
and
xor
dec
dec
cmp
mov
mov
mov
push
push
xchg
out
and
loopne
mov
js
sbb
xor
sbb
cmp
inc
dec
jb
pop
fldenv
clc
loopne
and
jne
jmp
push
(bad)
cmp
in
mov
jmp
pop
aas
outs
pop
ja
xor
add
ss
jge
dec
adc
(bad)
icebp
daa
ins
cli
les
pop
push
cdq
jnp
xor
repnz
xor
shl
outs
addr16
inc
div
div
cmps
xchg
int
xor
ja
out
in
bound
cmp
jno
pop
inc
call
repnz
lahf
jecxz
mov
pop
retf
cmp
int
call
xchg
pop
add
aam
cwde
add
jb
arpl
mov
test
hlt
dec
fninit
xchg
pop
mov
out
jl
ret
into
push
pop
pop
or
adc
ins
iret
push
dec
xor
cmc
jae
mov
out
xchg
pop
ss
mov
ins
xchg
and
fstp
sti
add
shr
pusha
popf
test
ffree
loop
inc
push
scas
jb
sbb
xchg
arpl
jb
lea
and
or
leave
mov
cmps
je
cmp
daa
(bad)
push
pop
mov
lods
fcomip
inc
cmp
daa
int
push
div
mov
inc
data16
fcom
sahf
sbb
cmc
mov
repz
mov
je
ds
adc
cmp
or
pop
mov
call
and
adc
lock
mov
dec
sbb
or
push
in
fwait
or
sbb
or
dec
fidivr
(bad)
shl
pop
push
dec
scas
dec
xchg
mov
mov
xchg
lock
mov
xor
push
in
push
aad
mov
mov
push
ror
xlat
jle
jmp
mov
mov
rol
mov
in
inc
out
sbb
or
xchg
(bad)
jno
pop
mov
mov
rcl
daa
les
mov
mov
xchg
stos
mov
daa
jg
fmul
mov
pop
jg
adc
or
sub
and
pop
jne
sub
mov
and
fmul
js
std
outs
and
cmc
not
loope
icebp
call
or
inc
cmp
fxch
mov
pop
sbb
cmp
into
xor
pop
rol
dec
and
xor
xor
cmp
int
and
out
js
cmc
ja
cwde
or
push
mov
mov
test
and
xchg
fbld
jle
test
adc
jmp
jp
sub
sahf
sbb
(bad)
push
pop
mov
push
ja
dec
call
out
pop
jmp
mov
cmp
push
loop
push
clc
pop
pop
inc
or
popa
mov
and
retf
jecxz
xchg
adc
pop
jnp
sbb
add
mov
mov
jae
inc
vorps
lock
jno
sbb
xor
addps
push
(bad)
xchg
xor
xchg
lahf
ins
ror
hlt
pminsw
mov
pop
push
loope
ret
test
xchg
jge
addr16
iret
sar
or
mov
loop
into
jae
fcmove
push
out
jne
mov
aaa
scas
into
fwait
inc
jl
push
test
stc
int3
cmp
fstp
add
adc
fnstenv
push
inc
or
inc
aam
cmps
fcos
xchg
dec
clc
sbb
fs
cmp
in
mov
xchg
mov
mov
dec
nop
shl
add
and
xor
cmc
xchg
and
mov
fsubr
dec
inc
cmp
or
sbb
cmc
push
mov
mov
dec
enter
adc
scas
dec
xchg
jmp
pop
jmp
js
sbb
ret
jl
sbb
add
cmc
inc
xchg
ror
mov
dec
mov
cld
aad
pop
dec
push
mov
jno
lods
push
push
cmp
pop
stos
imul
mov
and
cmps
mov
hlt
aaa
pop
mov
jbe
arpl
ret
scas
int3
int3
sbb
scas
ja
ins
ficom
retf
lock
cmps
xchg
adc
xchg
rcl
cwde
sub
in
int
sbb
inc
and
lock
jno
test
daa
jb
lods
jge
and
jmp
fidivr
lods
stos
or
sbb
jecxz
pop
cwde
add
dec
dec
jbe
shl
cmp
out
and
dec
fisttp
jbe
retf
inc
and
frstor
ja
test
stos
cmp
call
cmp
bound
imul
inc
test
pop
sahf
or
add
shl
and
xchg
sub
inc
cdq
add
ds
xchg
mov
out
shr
inc
xor
fldenv
xchg
xor
sub
das
xchg
dec
ins
mov
ds
call
and
popf
adc
xor
cmps
pop
adc
(bad)
mov
or
in
add
xor
push
int
lock
add
xor
or
inc
and
out
call
cmp
and
add
mov
push
push
cli
mov
sar
inc
xor
inc
and
add
dec
push
out
in
cmps
in
push
and
cdq
mov
imul
jecxz
data16
cdq
sti
int
and
pop
pop
pop
clc
dec
sub
dec
stc
scas
jle
leave
push
fistp
pop
and
mov
jmp
aaa
(bad)
push
or
add
xchg
mov
addr16
lahf
loopne
or
push
out
daa
fwait
not
jns
inc
stc
sahf
sbb
push
or
sbb
adc
dec
or
repnz
jbe
mov
mov
call
and
sbb
hlt
mov
push
sub
(bad)
test
mov
enter
out
and
adc
dec
aaa
xor
xor
imul
jne
push
and
popa
std
sub
cld
mov
call
xchg
adc
es
sti
push
dec
rcl
jl
inc
xor
fnstenv
fsubr
pop
or
jmp
cwde
lods
adc
jmp
xor
sbb
lock
and
aam
div
push
adc
pop
aaa
scas
in
cdq
inc
mov
(bad)
sub
in
inc
cli
fdivr
mov
cmp
shr
and
fimul
std
adc
ins
lods
(bad)
nop
retf
cli
mov
add
(bad)
sbb
iret
pop
mov
cmps
jg
call
mov
(bad)
pop
xchg
sub
cmp
cmps
sbb
jbe
sbb
retf
cld
xchg
or
sub
xor
pushf
cdq
out
inc
enter
sub
out
lods
cli
and
xchg
enter
and
popf
jne
repz
bound
sahf
inc
cmp
mov
call
add
add
mov
imul
gs
js
and
push
xor
or
mov
push
and
add
arpl
inc
popf
or
inc
aad
mov
gs
add
dec
icebp
out
imul
loopne
mov
push
sbb
gs
test
add
dec
cmp
dec
sbb
or
cwde
fs
push
xlat
inc
pusha
inc
call
inc
inc
(bad)
xlat
cs
retf
outs
mov
stos
loop
out
icebp
popf
pop
lea
in
mov
sbb
cmp
mov
mov
lods
adc
aaa
lds
cmp
lea
(bad)
cmp
enter
fs
mov
out
inc
ret
or
push
dec
push
sbb
pop
imul
fucomp
mov
dec
jmp
cmp
jle
sti
pop
jp
in
pop
push
stc
adc
test
sbb
cmp
(bad)
jp
(bad)
sub
xchg
or
sbb
cmp
pushf
pop
loope
and
movs
lods
push
jbe
push
inc
idiv
sbb
aaa
and
fidivr
sbb
leave
rcr
cmp
mov
or
xchg
xchg
outs
loop
or
push
mov
arpl
out
int
das
mov
idiv
sub
mov
and
stos
jno
pop
repz
push
fnstsw
ficomp
cmp
leave
adc
rol
hlt
mov
push
fidiv
cmc
fld
pop
xchg
jo
cs
cmp
cmp
mov
inc
cmp
xor
push
mov
ss
lods
inc
push
jbe
push
adc
movs
sub
dec
jmp
adc
fcom
jecxz
pop
cmp
pop
inc
mov
mov
sub
xchg
es
adc
mov
or
mov
xchg
and
pop
push
mov
inc
jae
jmp
daa
cmp
lea
sub
icebp
xor
scas
push
int
or
aad
jmp
cdq
mov
add
idiv
std
and
movs
rcl
mov
scas
xor
lea
mov
test
(bad)
sub
cs
xchg
pusha
fsubrp
jns
dec
test
int
sub
outs
mov
xor
in
lahf
pop
sbb
mov
mov
jl
mov
test
test
jmp
xor
gs
jmp
add
or
and
jl
lea
mov
loope
jg
je
imul
test
cli
mov
adc
fwait
ret
push
jmp
imul
lea
(bad)
cs
sar
xchg
jo
mov
(bad)
and
add
push
fiadd
pop
inc
(bad)
jae
loopne
push
xchg
pop
sbb
lods
adc
fst
xchg
and
dec
ss
div
ins
jno
shl
push
rcr
and
push
and
sbb
repz
cld
push
xor
(bad)
jge
xchg
loope
into
push
sti
(bad)
gs
jno
retf
fldcw
push
mov
xlat
add
movs
adc
jbe
cmps
jl
stos
push
into
(bad)
push
inc
call
pop
pop
cmp
pinsrw
inc
je
mov
sub
(bad)
sbb
xor
sbb
xchg
add
int3
cmc
jge
ret
xor
icebp
xor
rcr
cmp
shl
push
imul
cmp
sub
push
in
pop
lods
adc
adc
ds
fcomp
(bad)
repz
xchg
loope
les
adc
gs
or
push
add
dec
jo
repnz
(bad)
std
mul
jnp
pop
rcl
xor
push
cmp
pop
sub
shl
inc
retf
adc
jmp
ret
mov
fnstsw
mov
icebp
push
call
data16
ss
lods
mov
add
sbb
pusha
mov
sub
inc
or
inc
xchg
mov
mov
push
lahf
or
inc
push
and
adc
ss
popf
fld
sbb
fcomp
push
jbe
adc
jbe
inc
dec
adc
mov
test
imul
(bad)
ins
mov
jns
jnp
(bad)
cs
call
or
push
sbb
imul
mov
inc
inc
popf
mov
mov
xchg
addr16
cdq
xor
dec
xor
jae
ror
imul
push
cmp
(bad)
sbb
add
adc
fld
imul
(bad)
sbb
cmp
pop
or
sub
cmps
jmp
aam
mov
loope
mov
std
enter
mov
addr16
pop
arpl
dec
fs
jns
out
mov
fidiv
or
and
cwde
out
push
pop
movs
nop
add
and
xor
mov
pushf
std
pushf
fcmovbe
push
stos
(bad)
in
push
adc
push
jmp
sub
ds
stos
shl
stos
xor
test
mov
xchg
je
(bad)
sti
std
mov
clc
data16
pop
sub
loopne
fadd
sti
push
mov
out
out
gs
in
and
xchg
ins
mov
xor
ss
stos
pushf
xchg
push
cmp
(bad)
push
mov
ret
cmps
outs
repnz
lds
sub
xchg
out
and
mov
aam
xchg
lea
jge
xchg
push
test
fwait
dec
fidivr
shl
xor
xchg
ins
sub
pop
ss
mov
cwde
and
xchg
lds
xlat
pop
mov
cmp
(bad)
xor
pop
and
push
xchg
mov
sbb
mov
fwait
sbb
imul
mov
mov
movs
(bad)
mov
mov
out
sbb
lahf
push
(bad)
adc
push
jo
bound
es
repz
inc
sbb
(bad)
jp
sbb
mov
dec
sub
test
adc
dec
dec
jl
js
pop
iret
fdivr
cdq
or
in
inc
mov
add
pop
jl
mov
call
into
sub
mov
int
fninit
iret
(bad)
pop
jp
scas
dec
cld
push
pop
(bad)
lahf
xchg
cmps
in
test
ss
popa
mov
mov
sbb
push
bound
cmp
dec
sti
retf
jmp
xor
aas
push
add
dec
inc
xor
iret
xor
rol
and
ins
mov
xor
pop
int3
mov
imul
sahf
add
adc
shl
outs
inc
dec
ins
jle
mov
pop
call
call
out
cmp
adc
ja
add
movs
cmp
fnstenv
shr
mov
ds
popa
stos
or
dec
dec
fcomip
popa
xor
gs
mov
mov
xor
dec
movs
adc
xor
jbe
mov
xor
loopne
(bad)
dec
xchg
aam
dec
stos
push
aaa
mov
sti
and
rol
ins
mov
pushf
inc
xchg
sbb
jne
cmp
rcl
push
mov
inc
aas
loopne
ret
fwait
inc
les
push
and
lock
cmp
and
push
xor
cmp
adc
or
daa
test
call
dec
in
test
push
and
retf
test
sub
or
in
push
sahf
jae
in
imul
adc
scas
(bad)
stc
(bad)
rcl
mov
(bad)
dec
jae
mov
xor
cmp
push
sub
cmp
mov
scas
loopne
pop
inc
(bad)
ja
or
in
loope
xor
dec
mov
adc
mov
inc
mov
pop
xor
js
scas
cmps
dec
jnp
mov
je
popa
mov
cmp
push
mov
and
xor
add
mov
xchg
out
jp
iret
neg
jcxz
sub
int3
jmp
les
dec
sbb
pop
lods
ret
or
inc
daa
adc
aas
pop
call
sbb
xor
retf
mov
or
nop
ror
pop
(bad)
sar
adc
lods
pop
sahf
fdivrp
imul
test
adc
popa
ins
jnp
rcr
cmp
add
mov
xlat
cmp
cmp
repz
add
mov
sbb
sub
mov
inc
retf
mov
xchg
mov
jbe
cmps
dec
mov
mul
pop
add
in
jns
push
inc
sub
sbb
cmp
jo
or
cli
and
mov
jge
or
sub
xchg
mov
movs
jo
pop
xchg
mov
outs
push
pop
clc
cmc
xchg
retf
cmp
push
dec
pop
jecxz
dec
mov
jmp
jmp
dec
cdq
scas
imul
pop
gs
rol
in
sahf
push
das
jge
shl
in
fiadd
ds
jmp
dec
sahf
xchg
sar
int
push
fmul
(bad)
dec
jge
jecxz
jmp
add
sub
ffree
movs
test
hlt
jge
ss
jnp
lods
fisttp
push
cmp
mov
(bad)
sub
mov
out
mov
lock
push
push
xor
fadd
ss
lods
rol
es
fwait
setae
je
fisubr
mov
jecxz
xor
call
mov
pop
popa
add
movs
pop
and
pop
rol
ror
call
push
dec
add
push
into
push
(bad)
addr16
sub
mov
cs
adc
ror
add
mov
push
aaa
sub
mov
mov
popa
push
jp
jnp
imul
outs
adc
mov
and
ret
repnz
daa
inc
sbb
pushf
push
or
mov
shr
cmp
push
xor
loopne
fist
sub
cmp
fcmovnbe
xchg
cmp
mov
and
arpl
add
sar
(bad)
cmp
scas
push
fcmovne
lahf
pushf
stc
sahf
mov
shr
loopne
in
adc
ret
jg
sar
sbb
sar
sub
mov
mov
jp
cmps
in
(bad)
test
adc
and
jmp
das
mov
adc
mov
xchg
repnz
xor
out
or
push
mov
clc
in
adc
shl
push
pop
loopne
pop
scas
cwde
sub
shr
imul
dec
sbb
jb
ret
mov
outs
pop
hlt
cs
pop
jle
sbb
mov
inc
je
(bad)
fcmovne
mul
or
mov
sub
fld
xor
jmp
adc
or
sbb
sti
ins
jle
jmp
(bad)
aam
sbb
dec
jae
inc
ret
retf
dec
sar
loope
push
push
fdivp
or
xor
(bad)
cmps
sub
mov
or
jns
push
dec
add
ffree
inc
aas
adc
and
pop
pop
adc
jmp
test
dec
add
jg
pop
mov
cmps
add
cli
lds
cdq
push
sbb
cli
dec
call
add
loope
cmp
cld
shl
(bad)
clc
jne
adc
jle
cs
adc
jns
add
ins
cmps
adc
stos
fwait
pop
xchg
and
cmps
jmp
sub
ins
stc
pop
sbb
mov
jbe
vmptrst
stos
or
fimul
call
imul
mov
sar
es
pop
and
xchg
mov
bound
xchg
cmp
scas
pushf
sub
mov
loopne
aaa
jl
cld
xor
xlat
adc
or
mov
movs
fs
mov
rcl
out
pop
mov
es
mov
mov
sbb
mov
jl
add
(bad)
fwait
dec
sahf
sbb
and
add
cdq
or
pop
fs
nop
es
xchg
aaa
imul
stos
ret
lods
mov
call
(bad)
enter
mov
cmp
and
xchg
fadd
sub
push
or
jnp
scas
lods
adc
(bad)
sbb
add
or
push
in
fs
add
int3
sbb
(bad)
mov
push
sub
nop
jl
sub
cmps
mov
adc
int
test
xchg
retf
loope
inc
in
int
mov
xor
fst
jge
xor
hlt
jle
or
loope
movs
sbb
nop
inc
cmp
cli
mov
loopne
(bad)
scas
int
test
call
adc
xlat
ret
(bad)
mov
xchg
cmp
retf
sub
neg
mov
retf
xchg
fist
fs
call
cwde
sahf
in
xor
pushf
in
xchg
or
cli
stc
aaa
test
es
sbb
lds
fsubrp
dec
push
mov
xchg
inc
stos
nop
cmp
cmc
fmul
ins
pop
dec
fwait
jl
fbld
cmp
and
neg
push
mov
dec
repz
sub
jb
inc
add
and
or
add
sub
mov
test
xlat
xchg
out
pop
sbb
jbe
iret
pop
out
jmp
cs
xchg
mov
(bad)
push
add
sahf
out
popf
xlat
jle
jno
dec
push
fwait
mov
xor
(bad)
add
and
rcl
jecxz
shl
push
and
xchg
push
and
or
in
sub
pop
aaa
call
sahf
dec
inc
or
pusha
inc
ins
xchg
add
data16
sub
jle
mov
sahf
or
mov
mov
sbb
pop
leave
jo
shl
xchg
push
mov
pop
popa
mov
mov
mov
inc
(bad)
retf
mov
xor
fdivr
ds
retf
out
dec
push
pop
adc
jmp
jo
pushf
and
dec
push
push
mov
cli
xchg
sbb
fiadd
call
ficomp
and
fcmovnbe
xchg
inc
pop
repnz
cmp
mov
mov
pop
cld
add
test
jp
xchg
jge
imul
enter
sahf
sahf
stos
mov
mov
sub
test
inc
sbb
xchg
mov
push
jp
mov
mov
jbe
xchg
sub
push
mov
mov
aad
lods
ret
out
pop
jge
cmps
push
push
cmp
test
fisub
loop
mov
arpl
lods
sub
fneni(8087
inc
sbb
and
push
es
pop
(bad)
loopne
and
add
sbb
adc
cdq
mov
pop
call
xlat
jl
push
cmps
and
ror
aas
pop
pop
cli
sub
aad
sub
mov
fadd
xor
pop
pop
pop
stos
dec
gs
aam
pop
adc
mov
jb
jns
les
mov
adc
cmp
mov
adc
fcom
push
push
jl
jmp
pop
push
and
mov
cmp
inc
xor
xor
aaa
jae
or
nop
cs
fstp
xchg
inc
push
je
pop
enter
fstp
push
sub
mov
mov
aam
pop
scas
hlt
xchg
push
cmp
jecxz
mov
xor
sahf
(bad)
ins
and
(bad)
and
lock
arpl
aam
cmp
add
shl
fs
popa
mov
sbb
(bad)
lods
pop
xchg
mov
ret
imul
retf
jle
push
xchg
ss
pop
std
cmp
xor
xchg
adc
test
das
inc
adc
movs
pop
hlt
(bad)
mov
lock
xchg
ja
sub
jg
add
mov
nop
in
add
cmc
adc
adc
loop
into
lock
or
push
lods
loop
lods
or
jmp
cli
sbb
add
inc
mov
xchg
mov
mov
or
push
repnz
mov
pop
ja
mov
pop
push
imul
into
or
into
(bad)
mov
pop
inc
mov
xchg
aam
and
or
enter
pop
ins
inc
or
sub
xchg
in
sti
mov
or
shl
mov
xchg
mov
les
call
pop
adc
ret
je
repz
xchg
cmps
adc
push
out
mov
add
xchg
into
xchg
dec
int3
add
sub
loope
pop
scas
jns
movs
add
cmp
pop
call
sbb
and
fld
jge
push
mov
xchg
movs
xchg
mov
xor
mov
fstp
inc
out
ret
retf
cmp
fisubr
pop
js
adc
jns
in
sbb
pop
sbb
dec
sub
mov
les
dec
push
fisttp
fistp
leave
scas
add
cli
stos
out
push
and
pushf
into
movs
inc
jb
sbb
pop
xor
dec
inc
xchg
adc
fstp
or
mov
push
jl
or
push
imul
jp
lahf
inc
xor
push
mov
inc
inc
mov
in
inc
add
fs
in
pop
imul
retf
jmp
add
cmp
xlat
mov
retf
das
sbb
push
sbb
adc
jb
out
enter
fcmovbe
xchg
sub
and
mov
mov
xchg
sar
pop
push
dec
cdq
mov
mov
stos
push
push
out
fldenv
cmp
jg
or
test
jnp
cmp
je
(bad)
clc
lods
lock
addr16
jne
cmc
popa
sub
addr16
nop
sbb
ret
pop
mov
jge
jno
scas
dec
sub
test
icebp
jmp
cmp
lods
test
add
(bad)
in
jmp
retf
adc
pop
or
enter
cmp
ror
aas
clc
dec
pop
dec
cmp
push
dec
shl
mov
push
bound
pop
loope
dec
sub
fisttp
add
xor
(bad)
dec
and
in
jne
add
mul
out
xor
neg
push
sub
je
inc
fld
repz
mov
scas
cs
popf
aaa
pushf
xor
leave
ja
jg
push
shl
sub
and
retf
adc
call
push
rcr
in
imul
xchg
push
jbe
push
jge
inc
inc
into
xor
mov
jo
repnz
call
(bad)
adc
pop
lahf
push
pop
out
mov
fwait
add
(bad)
jns
movs
xchg
dec
mov
das
inc
lods
inc
fmul
inc
or
dec
xor
enter
mov
push
sub
jmp
cld
xchg
xlat
scas
or
push
or
sub
fst
mov
push
or
sti
adc
push
test
jo
shl
sbb
repz
jno
mov
adc
and
push
cs
cmp
adc
xchg
scas
pop
jmp
add
pop
mov
ret
inc
and
pusha
lods
mov
call
mov
iret
lea
jmp
sub
das
push
(bad)
stos
or
aam
fcom
push
test
retf
test
or
pop
das
and
xchg
imul
sbb
push
jp
jnp
xor
fstp
sbb
sub
sahf
inc
popf
addr16
lods
into
and
mov
mov
push
and
sbb
mov
cs
hlt
ja
sbb
ss
in
pop
push
pop
fisubr
pusha
or
pushf
pop
adc
add
pop
fiadd
rcr
ror
jle
les
inc
stc
outs
mov
inc
dec
sahf
rcr
mov
dec
mov
sbb
and
pop
aaa
bound
push
shr
es
lea
xchg
pop
mov
sub
loope
loop
mov
daa
mov
leave
mov
lds
mov
mov
fidiv
test
(bad)
pop
in
mov
pop
inc
push
dec
int3
pop
jno
jp
movs
xchg
sub
jnp
adc
je
add
push
dec
nop
call
movs
pop
inc
pop
lods
pusha
jmp
jmp
push
mov
push
pop
add
jne
loopne
in
add
jo
(bad)
push
mov
xchg
add
scas
and
jle
push
in
sbb
cmc
pop
sub
scas
out
retf
mov
out
adc
and
xor
mov
lods
in
and
mov
in
push
pop
mov
lds
push
xchg
ins
or
out
addr16
dec
jle
dec
and
add
and
dec
scas
sbb
cmp
mov
(bad)
fisttp
sub
and
mov
sbb
adc
push
push
or
sub
pop
rol
xchg
jle
pop
test
inc
adc
popa
pop
push
in
mov
mul
xor
adc
ror
xor
mov
(bad)
xor
mov
popa
and
xor
out
inc
adc
mov
lods
jno
mov
push
je
inc
das
sahf
xor
ins
xchg
out
pop
xor
int3
es
cmp
into
movs
sbb
in
push
jle
ins
inc
dec
ja
sahf
or
xchg
sbb
fwait
ds
bound
lea
mov
pop
inc
pop
xchg
inc
jmp
fist
dec
add
pop
pushf
(bad)
outs
cmp
test
pcmpgtw
icebp
ins
bound
mov
pop
mov
aas
jecxz
inc
xchg
icebp
out
jmp
je
or
sub
iret
jge
pushf
daa
scas
nop
out
or
mov
xchg
jl
(bad)
push
adc
push
mov
add
movs
mov
sub
pop
xor
shl
mov
imul
jle
loopne
aaa
ret
in
in
cmc
and
cmp
cmp
(bad)
and
in
or
sbb
daa
or
dec
xlat
rol
sbb
mov
in
xchg
push
add
dec
jo
mov
sbb
arpl
popa
and
mov
xchg
in
mov
adc
cmps
push
neg
jge
inc
cli
sub
leave
shl
(bad)
(bad)
int3
fmul
mov
pusha
sub
aaa
stos
jo
add
mov
outs
fnstsw
and
es
jae
shl
inc
fs
push
mov
out
dec
xor
sub
(bad)
jnp
ss
fcmovne
mov
or
sbb
in
addr16
xchg
mov
xlat
ror
push
clc
and
(bad)
xchg
(bad)
push
mov
push
in
cmp
(bad)
mov
mov
data16
push
dec
inc
sti
push
stos
mov
in
gs
or
shr
cdq
xor
inc
mov
cmp
and
xchg
and
mov
lahf
mov
cmp
nop
xchg
idiv
movs
add
pop
jge
adc
in
cld
pop
lods
mov
aad
or
push
lock
jns
into
and
cdq
add
dec
dec
inc
xchg
lea
inc
(bad)
cmp
jmp
xlat
mov
ret
int
mov
adc
adc
push
cmp
leave
sub
xor
fisttp
dec
and
outs
bound
cs
pop
stos
push
mov
xor
call
shl
mov
les
sbb
retf
cmp
adc
frstor
mov
adc
mov
dec
shr
call
sti
cmp
and
ja
mov
push
stos
pop
push
inc
push
lods
push
bound
mov
aam
ror
das
mov
push
loop
loopne
rol
out
add
sub
xor
stc
retf
dec
leave
lea
mov
push
xlat
mov
jbe
lea
cmp
xchg
movs
pop
(bad)
and
inc
mov
loop
pop
not
dec
mov
shr
repnz
add
xchg
mov
int
cmp
pop
rcr
cmps
mov
jg
add
clc
jge
or
cdq
push
cmp
imul
leave
into
(bad)
adc
ror
cmps
mov
dec
shl
leave
or
cdq
(bad)
adc
clc
sub
and
mov
dec
fidivr
mov
add
imul
cmp
mov
sar
pop
cmp
in
(bad)
addr16
jp
add
and
cmp
jp
retf
fiadd
add
enter
cmp
push
or
jo
ins
and
mov
fadd
mov
fst
std
mov
xor
repnz
not
push
bound
adc
adc
and
(bad)
scas
repnz
js
sbb
jge
clc
in
int3
sbb
fnstenv
mov
pop
(bad)
cmc
xchg
cmp
mov
jge
add
adc
in
push
add
enter
xchg
scas
mov
pop
adc
movs
sub
arpl
aas
jl
aaa
int3
test
mov
add
jns
dec
pop
jmp
in
sub
nop
mov
cmp
test
gs
mov
add
inc
out
ja
and
in
add
or
cmp
mov
push
xchg
cli
hlt
cmp
pop
ja
pop
popf
jne
ror
jp
adc
jmp
int
xchg
push
xchg
jae
call
inc
pop
in
pop
dec
jmp
aam
cmp
nop
jo
push
in
daa
or
fimul
ja
cmps
sbb
sub
aas
pop
fxch
test
mov
cmp
jae
retf
and
int3
loop
cld
add
mov
repnz
es
dec
ror
and
cmps
pop
shl
sub
inc
gs
(bad)
aam
icebp
inc
jecxz
cmp
mov
call
popf
call
outs
cmp
retf
test
test
int3
lods
bound
ja
push
rcl
aaa
fwait
inc
es
das
sbb
retf
mov
in
or
fiadd
ja
pop
adc
xlat
data16
enter
mov
fwait
mov
xchg
inc
into
pop
mov
lahf
mov
add
jp
inc
fsub
mov
inc
das
int3
adc
bound
pop
and
and
and
jmp
outs
dec
ins
dec
push
xor
cmc
test
and
sub
pop
daa
xor
dec
das
jns
xchg
std
dec
xchg
sbb
xlat
clc
push
xchg
adc
and
cmp
pop
popa
push
xchg
in
push
pop
ins
aas
ret
ins
push
jmp
test
cld
mov
icebp
pop
xor
xchg
mov
mov
(bad)
fs
sbb
and
popf
jmp
ficomp
mov
leave
outs
out
mov
xchg
jnp
add
xchg
mov
out
cs
sahf
mov
fnstsw
sbb
inc
add
dec
scas
pop
push
fucom
mov
mov
mov
aaa
xchg
sbb
cmp
outs
imul
cmp
pop
sbb
imul
hlt
mov
adc
cmp
sbb
cmps
inc
retf
mov
enter
dec
fst
push
mov
repz
mov
bound
mov
lock
jle
inc
ss
loope
scas
dec
jp
inc
dec
leave
cwde
imul
mov
popf
ret
inc
test
int
in
imul
push
cwde
movs
in
js
or
cmp
cmp
lahf
pop
sar
jb
cmps
mov
inc
and
sub
add
ror
adc
and
fisttp
xchg
nop
jae
mov
mov
mov
test
sub
mov
cld
imul
popa
(bad)
mov
add
movs
pop
pop
xor
loope
cli
jp
pop
imul
xchg
(bad)
jp
inc
push
popa
jne
xchg
adc
std
sti
and
adc
mov
and
sbb
stos
adc
push
mov
mov
mov
jp
inc
and
outs
in
loope
or
jmp
and
add
cmp
fs
retf
mov
sbb
add
and
inc
xor
and
push
retf
(bad)
pop
xchg
lds
adc
cdq
sar
push
xor
pop
pop
vmovd
iret
dec
mov
adc
in
imul
int3
mov
cdq
mov
push
mov
jae
adc
(bad)
push
mov
mul
push
les
xchg
(bad)
adc
xchg
mov
add
shr
pop
mov
addr16
shl
int
xchg
sub
lock
into
addr16
dec
sbb
adc
iret
mov
mov
adc
and
xor
outs
cmps
pmaxsw
cmps
jecxz
je
push
mov
rcl
dec
dec
inc
push
in
leave
arpl
mov
xchg
pop
add
jae
jbe
mov
das
and
or
nop
cmps
mov
into
jb
inc
inc
lods
and
sbb
push
les
mov
xchg
sbb
jp
scas
stos
in
jb
ds
jg
push
mov
mov
dec
xor
fdivr
pop
into
add
adc
cmps
gs
(bad)
jp
ss
sub
ja
scas
repz
not
mov
xor
(bad)
mov
inc
adc
xor
mov
loope
dec
or
std
gs
adc
in
jbe
aam
ret
retf
jg
add
adc
push
ins
push
repz
clc
mov
imul
pop
bnd
std
and
xchg
pop
xchg
and
bound
or
loopne
adc
lds
popf
or
and
mov
addr16
lods
sahf
popf
daa
xlat
pop
xchg
in
(bad)
lods
mov
jbe
inc
xchg
add
mov
xchg
cmp
imul
pop
pop
mov
or
adc
arpl
mov
aad
outs
jae
sbb
add
sti
jmp
hlt
dec
jecxz
retf
int3
ss
jl
test
sub
jno
and
out
xor
call
lods
(bad)
cs
rol
fcom
pop
seto
xchg
jecxz
gs
lock
jb
jge
test
xchg
loope
mov
push
test
lods
arpl
sub
jecxz
dec
shl
adc
mov
sbb
sub
sar
test
or
lfs
push
cmp
cmps
xor
sub
stc
hlt
xchg
cwde
pop
push
and
add
imul
dec
pop
sbb
dec
daa
aaa
fdiv
push
out
adc
sahf
ror
mov
mov
adc
dec
(bad)
xor
add
inc
push
jo
mov
or
lods
adc
xor
outs
cmp
pop
test
pop
stos
sub
ja
push
and
fidiv
or
sbb
in
aas
push
pop
retf
add
aas
inc
in
mov
in
and
shl
out
push
xchg
jp
push
movs
fisttp
mov
xchg
cmc
cdq
popa
or
jnp
setae
fldcw
pop
dec
sub
daa
xchg
fild
test
leave
add
mov
or
mov
jbe
adc
mov
pop
aad
stos
es
lods
pop
adc
jne
(bad)
cli
jae
xchg
pop
jbe
jbe
mov
add
inc
and
jo
mov
dec
jmp
mov
out
into
mov
shl
add
cmp
out
or
into
or
push
mov
std
sub
jmp
jle
push
xchg
(bad)
mov
cld
imul
jns
sub
es
cmp
sub
imul
mov
adc
xor
int
jb
popa
xor
stos
mov
inc
popa
adc
outs
add
sbb
pop
dec
call
nop
imul
and
int
lds
test
repnz
lods
ds
fcmovnb
jo
popf
dec
inc
mov
fld
data16
sbb
sbb
es
addr16
and
je
mov
adc
mov
leave
mov
push
stc
js
movd
scas
mov
test
adc
and
fbstp
jmp
adc
pop
push
sbb
aas
or
add
fiadd
jge
adc
in
popf
stos
sti
dec
mov
sti
cwde
and
ins
in
ins
jnp
push
aas
test
cmp
adc
mov
shr
test
xchg
pushf
push
mul
sbb
jmp
xchg
mov
or
push
repnz
and
imul
cmp
pop
repnz
(bad)
pop
adc
cmp
and
mov
stos
inc
fist
test
sbb
sbb
std
stos
popa
and
dec
lods
xchg
jae
retf
push
test
scas
fisttp
xor
mov
sub
cmp
inc
test
dec
jb
fwait
sub
or
mov
imul
outs
push
push
cmps
dec
adc
and
lock
adc
push
jecxz
ret
push
ret
out
push
mov
daa
jo
ins
rcl
shr
(bad)
xchg
es
ss
mov
mov
js
sub
les
std
cwde
outs
movs
cmc
inc
scas
or
xchg
in
retf
cmp
nop
lock
sub
mov
cdq
xor
mov
sub
cmp
repnz
loop
and
and
enter
scas
pop
pop
cmp
xchg
fwait
outs
repz
iret
mov
aad
jae
in
add
hlt
push
aas
sub
sbb
push
xchg
sbb
and
mov
adc
pop
outs
pop
pusha
je
pop
xor
ins
lahf
rcr
lock
shl
adc
outs
fsubr
pop
xor
jp
mov
sub
push
scas
movs
mov
jbe
cmp
add
popa
pop
je
sub
fmul
(bad)
fild
aas
pop
pop
cdq
jns
inc
leave
nop
jns
push
pusha
xchg
arpl
xor
or
inc
cmc
loop
out
mov
and
add
jle
push
outs
add
xor
fwait
mov
push
push
dec
enter
xor
arpl
xor
xchg
cmp
(bad)
in
pop
cld
lahf
cmps
gs
cli
fcmovb
out
ficom
test
mov
add
dec
repnz
or
sub
into
and
dec
mov
add
dec
cs
iret
jg
jge
lock
popf
inc
or
pop
jno
mov
sbb
push
xchg
fsub
ins
into
int3
push
pop
push
inc
fisttp
xchg
stos
xor
cmp
enter
and
scas
mov
aad
add
out
xchg
mov
(bad)
arpl
adc
mov
fadd
push
xchg
(bad)
dec
imul
mov
xor
stc
fstp
cmp
and
mov
mov
arpl
jb
xor
sbb
xor
movs
inc
push
jp
jmp
mov
cmp
or
scas
mov
cdq
inc
mov
arpl
mov
in
nop
mov
out
push
ss
mov
or
xor
bound
inc
pop
jo
cs
and
call
sub
pusha
pop
aad
mov
fld
xchg
outs
iret
adc
dec
in
mov
pop
mov
std
mov
popa
mov
xor
js
test
iret
repz
add
aas
ficom
inc
and
fild
int3
ja
mov
(bad)
jg
cmp
push
(bad)
mov
cmps
cmc
or
les
cmp
sbb
xchg
inc
ret
pop
jno
mov
(bad)
retf
nop
dec
sub
mov
mov
mov
mov
or
ror
sbb
fisttp
and
daa
push
sbb
rol
inc
push
jno
adc
cmp
sbb
push
xchg
inc
rcr
sbb
lock
adc
cmp
push
pop
(bad)
loopne
clc
push
mov
ins
sbb
dec
xchg
pop
jb
mov
lods
fidiv
loope
push
mov
mov
jmp
mov
lods
add
dec
repz
neg
popf
into
sti
in
and
xchg
jae
out
pop
xor
fstp
leave
add
ss
xor
ins
popf
add
repz
sbb
in
addr16
and
or
in
sub
cmc
add
dec
sbb
stc
push
lahf
fdivr
in
mov
push
xchg
jo
cmp
cdq
pop
hlt
addr16
sti
sar
das
xor
pop
push
jae
jmp
add
xchg
cld
cmps
jg
jnp
sahf
dec
inc
sub
test
arpl
xchg
mov
prefetchw
inc
jle
jmp
pop
fidivr
cmc
into
popf
cmp
cmp
push
je
jno
nop
lods
mov
sahf
cmp
shl
ds
sbb
mov
jl
add
int3
mov
lea
movs
mov
push
stc
xor
mov
xchg
xor
mov
pop
int3
mov
aad
xchg
mov
cli
fwait
test
and
and
sub
es
adc
inc
and
and
sbb
ror
call
jns
sbb
retf
int3
and
pop
shr
aam
mov
(bad)
iret
adc
inc
movs
aas
inc
out
mov
and
cmp
ds
sub
aaa
mov
repnz
jns
xor
imul
xchg
pusha
xor
es
pop
inc
aad
cmp
or
sbb
adc
push
stos
ds
test
xchg
je
fiadd
repnz
and
neg
data16
sub
jne
retf
cmp
add
and
adc
out
inc
pop
xchg
mov
add
xor
leave
lods
std
pop
cdq
pop
movs
sub
(bad)
jns
xchg
(bad)
jae
adc
aam
cmp
je
jne
jl
push
mov
cmp
aad
js
push
xchg
fimul
push
cmps
ror
cmc
lods
loope
lock
test
mov
test
xchg
inc
imul
fidiv
popf
aad
push
mov
stos
mov
jmp
push
push
and
push
sti
aam
xchg
retf
nop
dec
mov
adc
dec
scas
icebp
pop
cmps
pop
arpl
jg
cs
(bad)
add
cwde
out
sbb
push
cmc
xchg
sub
mov
jecxz
(bad)
cmc
dec
sti
pop
ins
loopne
rol
fstp
cmp
pop
inc
and
or
call
lahf
je
and
push
push
aam
pushf
mov
mov
pop
out
mov
fwait
add
sbb
xchg
adc
or
push
stc
push
cmp
cmps
push
icebp
fst
push
jge
sbb
xchg
imul
mov
sub
frstor
or
ja
jns
gs
mov
mov
mov
test
jns
pop
iret
xchg
pop
clc
xor
sub
sbb
repnz
ret
cli
mov
jmp
scas
mov
and
call
lahf
and
icebp
dec
push
nop
lods
aaa
jns
dec
shl
sbb
sbb
jbe
(bad)
pop
jmp
jge
sub
add
fldcw
mov
and
push
clc
adc
mov
add
pop
ficomp
mov
aas
pop
adc
icebp
scas
(bad)
aaa
fwait
ja
push
repnz
cmp
jg
xchg
push
stos
cmp
xor
mov
jmp
sbb
div
inc
(bad)
jmp
jb
push
xchg
outs
inc
add
inc
cmps
out
push
arpl
mov
ja
sbb
pop
es
popa
xor
ret
mov
arpl
rcr
inc
cdq
sar
sbb
jo
mov
mov
mov
dec
dec
repz
xchg
fs
jbe
(bad)
fwait
adc
mov
push
call
(bad)
xlat
push
dec
adc
sub
loope
fstp
test
popf
mov
jno
fbstp
jb
sbb
(bad)
sti
sbb
ds
fwait
sub
shl
inc
mov
mov
leave
lock
lods
dec
rcr
ficomp
sub
dec
push
out
xor
outs
repnz
and
aam
add
push
mov
pop
imul
dec
test
cmc
test
hlt
int3
mov
add
fidivr
jbe
pop
dec
pop
xor
and
inc
out
inc
cmp
dec
xchg
fcmovb
sbb
xchg
cmps
dec
and
loopne
pop
xor
mov
mov
test
jbe
xchg
fwait
lahf
jecxz
stos
test
push
sbb
mov
cmp
es
je
lods
sti
push
fbstp
adc
pushf
xor
out
pop
imul
sahf
mov
push
or
or
pop
cmp
jbe
push
ds
pop
pop
and
xor
repnz
fidivr
jmp
ja
sub
dec
in
mov
(bad)
iret
out
mov
cmp
jmp
sbb
das
and
jmp
shr
loopne
sub
sbb
mov
retf
es
aas
and
mov
mov
pushf
mov
xchg
stos
imul
retf
gs
mov
ds
pop
cmp
push
dec
rcr
adc
dec
arpl
arpl
push
fbld
and
mov
je
dec
ds
adc
jns
mov
cmp
pop
inc
push
sahf
xlat
adc
jmp
mov
sub
mov
lock
loop
icebp
dec
outs
in
mov
aaa
dec
cmp
test
fcmovb
popf
lea
sub
call
mov
fs
popf
adc
dec
sbb
movs
daa
call
retf
jae
cmp
and
sbb
les
jbe
add
or
push
pop
js
lods
pop
push
add
push
fild
mov
in
inc
cmp
xchg
int
mov
inc
stos
xchg
push
mov
cmps
arpl
(bad)
in
test
push
lds
(bad)
lods
das
jge
leave
mov
into
sbb
and
sbb
xor
push
lahf
gs
call
les
jecxz
xchg
jecxz
mov
ja
in
jmp
push
popf
pop
and
cli
test
fs
mov
lds
popf
inc
add
inc
lock
sbb
push
inc
imul
jo
outs
fucomp
pop
push
int3
mov
push
xor
rol
in
sbb
xchg
out
nop
and
out
pop
pop
xchg
out
sub
imul
xchg
shl
shl
pop
mov
xchg
and
das
jge
aam
adc
mov
xchg
inc
cli
fstp
rcr
jecxz
shl
or
mov
push
inc
adc
jecxz
lea
inc
cmc
or
pop
dec
daa
stos
add
inc
mov
(bad)
jecxz
push
aam
add
push
in
jl
popa
repnz
iret
pop
dec
cmp
dec
dec
sahf
cdq
rol
and
es
(bad)
dec
mov
jmp
dec
mov
leave
fisubr
clc
aad
je
mov
aas
retf
lods
jp
or
xchg
mov
add
dec
mov
dec
sub
and
add
(bad)
inc
stos
movs
lahf
and
stc
cmps
xchg
in
and
push
jns
in
jne
iret
inc
adc
jge
fdiv
rcr
daa
jb
ins
add
lahf
mov
shl
int
mov
and
sub
push
daa
fs
inc
popa
fist
fldcw
jbe
xchg
cwde
and
(bad)
and
mov
cmc
mov
mov
jl
mov
jmp
add
and
pop
inc
and
sub
sahf
xor
xor
jmp
sbb
aam
cmp
dec
sub
bnd
out
clc
cmps
xor
lods
push
shr
icebp
ins
out
test
iret
das
xor
fwait
dec
add
je
push
loope
cs
es
popa
jmp
mov
nop
xor
stc
jne
xor
fld
pop
sub
or
mov
cmp
in
xchg
nop
lea
add
mov
push
push
mov
adc
call
jg
adc
and
jmp
jmp
outs
mov
jnp
(bad)
pop
mov
and
xchg
cdq
fs
test
or
je
mov
test
pop
(bad)
in
mov
mov
push
daa
jecxz
inc
jb
cli
or
xchg
js
sbb
mov
out
lds
push
gs
outs
rcl
(bad)
pop
int
sahf
mov
in
cld
jmp
xchg
fcom
test
call
fwait
push
or
xor
sub
cdq
fistp
mov
mov
(bad)
dec
inc
stos
cdq
xor
ds
mov
xchg
push
gs
xchg
scas
int3
sbb
mov
inc
test
inc
mov
jmp
pop
pop
fisubr
(bad)
push
out
add
mov
jnp
and
ja
mov
fidiv
push
lea
mov
pop
xchg
lea
rcl
(bad)
mov
movs
push
imul
mul
cwde
adc
inc
repz
xchg
iret
ss
inc
nop
(bad)
icebp
shr
mov
in
lods
retf
jbe
and
cmps
adc
in
sbb
jb
jg
ss
retf
and
or
xchg
mov
add
pop
dec
mov
push
or
clc
push
outs
stos
adc
push
mov
ret
jg
xchg
mov
and
jb
jo
adc
jns
pop
inc
ret
ja
and
test
scas
cmp
adc
outs
lahf
mov
mov
dec
mov
cmp
sub
(bad)
ds
jmp
push
xchg
jmp
rcl
(bad)
mov
mov
retf
arpl
push
(bad)
jge
pop
inc
pop
mov
fisttp
add
ret
sbb
dec
pop
stos
xchg
xchg
cmp
push
stc
jnp
push
pop
and
cmp
xlat
mov
prefetchw
pop
add
mov
loopne
sti
or
lahf
xchg
cld
test
push
fsub
test
outs
add
adc
mov
aas
rcl
bound
sub
adc
jbe
add
push
push
cmp
mov
jns
mov
int
stc
jmp
hlt
pop
xchg
cmc
ins
sub
mov
mov
out
jg
xchg
jbe
bound
mov
pop
lea
cmp
in
ja
lods
adc
xor
lods
inc
sbb
loopne
xchg
xor
loope
fsubr
outs
push
fisub
test
mov
sbb
inc
dec
jno
addr16
mov
and
ret
dec
mov
jne
mov
shl
mov
xor
xor
and
jecxz
or
fdivp
xor
and
push
xchg
push
xor
(bad)
hlt
mov
clc
in
(bad)
psubusb
push
xchg
and
call
scas
mov
pop
mov
mov
pop
mul
dec
popf
movs
clc
jb
push
adc
vsqrtpd
stc
jbe
pop
inc
xor
mov
jbe
mov
mov
pop
and
sbb
outs
fidiv
pop
add
std
cmp
test
(bad)
sbb
(bad)
mov
popf
ficom
cdq
jbe
jbe
inc
xchg
sahf
retf
pop
pushf
mov
ret
fs
movs
and
scas
mov
cmp
lahf
inc
test
add
lock
iret
test
test
inc
sub
js
iret
inc
scas
pop
ins
or
xchg
(bad)
fnstenv
not
inc
aaa
mov
push
adc
pop
iret
xchg
mov
adc
add
(bad)
fisubr
ss
inc
sbb
out
shl
clc
jne
cwde
jmp
add
test
lahf
xor
xlat
ds
cmp
mov
stos
aas
adc
xlat
mov
in
ss
fisub
leave
sti
mov
or
xchg
popf
cmp
je
iret
sub
sbb
outs
aaa
xchg
movs
xor
in
ins
jnp
test
jns
les
mov
fcom
mov
push
jge
xor
lea
int3
or
rcr
mov
data16
imul
adc
js
(bad)
in
neg
cmps
je
push
out
scas
clc
(bad)
push
je
out
inc
and
push
dec
pop
bound
pop
gs
lock
addr16
xchg
cmp
fs
or
fwait
sbb
sbb
inc
scas
dec
ins
pop
arpl
jge
jmp
fimul
int3
lods
push
retf
sbb
jno
dec
aaa
or
jns
mov
cmp
mov
cmp
mov
xor
bound
test
adc
cwde
into
xor
cmps
push
jne
imul
ret
inc
adc
xor
scas
test
(bad)
sbb
mov
xor
icebp
popa
jmp
lods
ins
mov
mov
mov
test
aad
aad
out
mov
dec
sahf
shl
xor
gs
adc
or
addr16
xchg
jb
and
adc
cli
in
xor
retf
adc
popa
mov
fwait
call
into
enter
push
mov
cld
dec
ror
pushf
mov
dec
add
out
ret
pushf
inc
js
out
cli
fmul
shr
cmp
push
mov
sub
(bad)
inc
hlt
mov
mov
push
dec
push
pop
sti
adc
push
jp
(bad)
sahf
mov
loope
xor
sbb
mov
jbe
mov
call
ficomp
call
inc
sub
ds
jns
(bad)
xlat
lods
or
xchg
xor
push
add
imul
dec
fcmovb
xchg
iret
cmc
pop
xchg
ja
fwait
and
test
(bad)
mov
data16
mov
pushf
inc
enter
jecxz
cmp
jge
aas
dec
adc
out
or
popf
movs
jne
ret
nop
add
(bad)
adc
push
mov
(bad)
in
pop
addps
xchg
jmp
mov
jl
add
stc
mov
stc
fmulp
call
cmps
pop
sub
dec
sub
dec
fist
mov
mov
jno
or
sbb
jge
jne
out
and
in
in
push
aad
ins
cmp
cmp
sbb
push
add
lea
int
rcl
in
jle
sub
pop
js
cmp
push
push
cmp
out
pop
or
mov
mov
lock
mov
xchg
pop
mov
cld
xlat
jl
retf
frstor
and
mov
imul
movs
jp
cmps
push
xor
out
and
adc
not
inc
dec
push
inc
sbb
mov
daa
stos
xchg
es
out
adc
outs
cdq
bound
push
stos
sahf
ret
or
mov
pop
cmp
jmp
sbb
popa
cmp
je
dec
std
out
(bad)
inc
xchg
jns
fmul
mov
pop
add
push
popf
mov
add
and
inc
pop
jle
movs
pop
mov
enter
mov
mov
add
mov
stos
shl
push
stc
jge
fimul
mov
addr16
arpl
mov
daa
sub
add
cli
iret
xchg
sub
test
into
and
sbb
scas
div
lods
and
icebp
cdq
and
dec
pusha
xlat
ds
sbb
xchg
jnp
js
fild
lods
mov
pop
cmp
inc
pop
aam
ret
(bad)
xchg
ficomp
jmp
mov
fdiv
and
int
cmp
sbb
adc
movs
in
mov
pop
or
outs
frstor
pop
pop
rol
out
adc
call
(bad)
xor
adc
frstor
std
inc
clc
mov
repz
mov
loopne
jle
out
adc
inc
mov
mov
test
mov
out
outs
mov
js
sti
push
test
shr
mov
adc
out
dec
popf
rcl
push
and
stos
movs
test
div
ins
daa
outs
pushf
inc
stc
jbe
(bad)
int3
stc
push
imul
aam
scas
(bad)
fsubr
retf
push
rcl
mov
mov
movs
in
std
pop
mov
cdq
dec
mov
sbb
out
data16
loopne
out
pop
inc
sub
pop
hlt
fnstenv
lahf
fist
or
inc
mov
mov
sbb
inc
cli
sub
loopne
sub
enter
ret
arpl
imul
adc
lea
jnp
mov
daa
dec
ss
(bad)
lods
aam
jle
arpl
jmp
hlt
stos
xor
sbb
pop
dec
repz
xchg
cmp
jmp
out
loope
outs
add
mov
add
xchg
mov
int3
cmps
pushf
stc
jae
and
xchg
dec
adc
inc
dec
enter
lds
jp
mov
movs
test
or
sbb
jmp
jg
jle
inc
push
scas
adc
mov
pop
mov
out
sub
outs
int3
mov
out
js
mov
mov
dec
pop
ror
ds
push
jae
push
imul
je
jae
add
push
add
aad
jmp
inc
(bad)
jp
iret
inc
adc
rol
ss
mov
stc
inc
call
daa
push
aad
cmps
mov
mov
outs
arpl
sub
jo
jmp
mov
jae
fsub
dec
lods
xor
sbb
lods
call
les
into
rcl
xor
pop
fwait
xchg
jne
mov
sub
mov
adc
sub
or
mov
sbb
push
sbb
stc
adc
pop
jae
aad
(bad)
xchg
sahf
scas
nop
popa
sub
dec
pop
xor
mov
fwait
pop
cdq
pop
jnp
inc
int3
jo
test
add
mov
mov
repnz
push
adc
repz
and
jge
sub
pop
cmp
repz
jb
test
cld
hlt
ss
and
fwait
outs
push
sub
dec
or
sbb
mov
adc
loope
mov
push
pop
dec
xor
xchg
pop
or
mov
ds
jmp
fsub
dec
ins
cmps
sahf
mov
mov
int3
sbb
in
adc
xor
sub
dec
xchg
rcr
jno
xor
push
inc
mov
xor
push
pop
out
xchg
jbe
xchg
sub
jmp
int
repnz
pop
dec
xchg
(bad)
addr16
stos
inc
test
dec
inc
lahf
jecxz
pop
pop
mov
(bad)
(bad)
repz
push
inc
std
(bad)
hlt
popa
jecxz
push
push
xor
movs
out
aas
hlt
hlt
repz
hlt
and
nop
inc
push
std
jno
jge
mov
mov
cdq
cs
push
push
aad
inc
mov
sbb
pop
shr
mov
mov
sbb
xor
cmps
es
xchg
sbb
dec
jne
adc
iret
ret
push
add
jnp
push
popa
sahf
movs
cdq
xor
and
push
cmp
xchg
jg
and
rcr
mov
jne
inc
mov
sahf
sbb
clc
mov
xchg
xchg
mov
sbb
scas
into
iret
cwde
fwait
ret
sbb
add
mov
push
and
hlt
pop
xchg
mov
push
out
jne
inc
push
xor
outs
lahf
(bad)
mov
aad
mov
or
inc
(bad)
nop
(bad)
cdq
mov
nop
sub
imul
aas
ins
pop
pushf
cmp
sub
push
jle
xchg
xor
dec
cmps
lods
dec
aaa
call
daa
pushf
fwait
stos
and
jae
das
test
imul
mov
xchg
shl
sti
in
push
xchg
repz
loopne
aad
shl
xor
push
xor
add
loope
jb
cmp
push
and
xchg
push
and
push
or
sti
mov
xchg
inc
pop
cmps
rcr
icebp
je
stos
loop
push
mov
addr16
dec
adc
push
adc
cmps
loopne
add
cmps
xchg
cmp
(bad)
lock
mov
xor
in
jle
mul
cs
enter
call
or
scas
cwde
adc
call
clc
aam
daa
xlat
mov
inc
or
dec
xchg
push
mov
adc
in
sbb
icebp
iret
mov
pop
ja
xor
lahf
loop
xlat
dec
movs
sbb
mov
inc
inc
inc
mov
xchg
sub
mov
aaa
repz
and
loope
cmp
xchg
lahf
jns
xor
ror
popf
retf
pop
cld
idiv
pop
jmp
cmp
stos
or
jnp
int3
out
lds
data16
ficom
jns
pop
cmp
aam
and
leave
out
xor
inc
jns
addr16
adc
jl
jo
aas
push
jmp
xchg
cmp
inc
inc
mov
and
lods
and
xchg
pop
jmp
mov
jecxz
arpl
or
fnstsw
aad
enter
cs
in
push
jg
pop
dec
pop
fwait
dec
fst
add
rol
add
push
mov
icebp
adc
push
in
lods
sti
inc
dec
repnz
movs
movs
pushf
ins
out
lock
sub
outs
inc
movs
xchg
scas
pop
sub
(bad)
(bad)
fbld
and
jl
nop
cli
lahf
xchg
jp
adc
arpl
sub
icebp
cdq
inc
sbb
xor
dec
inc
mov
adc
adc
popa
jge
push
popf
sub
mov
fidivr
shr
in
bound
cmps
stc
mov
into
lods
clc
add
fidivr
ins
addr16
ins
rcl
mov
fldenv
pop
jmp
mov
mov
xchg
test
ret
jns
dec
xor
xor
movs
push
jecxz
jp
mov
add
cmp
call
fwait
jno
fcmovbe
sti
leave
pop
out
pop
jp
push
adc
pop
mov
xchg
mov
xchg
mov
rol
sbb
pop
enter
push
xchg
push
xchg
dec
ds
pop
mov
sar
and
sub
mov
cwde
test
loop
and
int3
xlat
dec
popa
clc
xor
push
lea
adc
xchg
jecxz
neg
mov
icebp
cmp
add
xor
dec
sbb
aad
bound
loope
out
cmp
daa
xchg
test
add
cmp
mov
add
mov
or
fst
je
loopne
jno
push
xor
xchg
adc
test
test
sub
(bad)
popf
mov
pop
inc
addr16
cld
enter
mov
js
mov
xor
mov
sbb
pop
jmp
jmp
and
fwait
cmp
jmp
push
into
jno
mov
dec
xchg
cwde
sbb
add
sbb
jl
in
js
stos
lods
mov
jns
js
sbb
cli
xchg
mov
mov
jae
jl
mov
(bad)
cmp
stc
iret
sub
pop
xor
stos
icebp
sahf
jmp
mov
psrad
ja
lods
stos
test
pop
and
or
imul
mov
pushf
fnstsw
(bad)
js
ds
lods
arpl
sbb
mov
test
outs
or
ins
nop
cmp
xor
dec
out
or
inc
mov
push
shl
test
sub
jns
mov
and
enter
in
test
xchg
sub
scas
test
mov
fucomp
cmp
mov
int
aam
mov
jb
popa
pop
cmc
push
inc
jb
pop
jmp
dec
js
xor
cmp
lods
jbe
cld
sbb
xor
(bad)
sub
test
or
or
jo
or
jne
mov
xchg
cmp
mov
xchg
push
jl
sub
or
inc
xor
sbb
rcr
das
mov
xchg
popf
cmp
out
mov
arpl
mov
dec
adc
ja
or
out
cld
movs
rcl
in
std
push
xchg
retf
xor
aam
hlt
out
jbe
xchg
ret
add
mov
mov
xor
add
or
sub
jmp
and
cmp
jb
pop
jmp
ins
pop
lods
test
jge
mov
or
(bad)
bswap
mov
retfw
rol
pop
add
lods
push
sbb
mov
in
jle
xchg
jecxz
jmp
push
add
in
shl
add
adc
mov
call
jl
aaa
lock
or
sbb
test
adc
jecxz
pop
mov
sar
push
fchs
and
jg
ret
adc
(bad)
cmc
dec
test
sub
pop
xchg
adc
pusha
fstp
cmp
leave
sbb
loope
push
adc
out
mov
dec
test
and
clc
mov
cmc
cdq
jbe
fisub
mov
add
cmps
arpl
pop
bswap
push
push
sbb
out
dec
fsub
push
push
pop
jbe
push
gs
movs
pop
lock
shl
cld
repnz
pop
push
cwde
push
inc
adc
ret
jg
xchg
rcl
ins
in
aas
in
fidiv
fidiv
ja
sar
js
lock
add
retf
jle
push
pop
adc
std
out
adc
sbb
in
or
les
inc
add
in
test
push
call
sub
add
lea
cmps
std
or
sbb
dec
pop
xlat
adc
test
sub
je
lods
mov
pop
pop
fnstenv
adc
mov
cmp
adc
cmp
inc
ds
sub
mov
aaa
retf
xchg
leave
sub
dec
mov
shl
jl
or
xchg
adc
leave
sbb
inc
movs
pusha
xchg
aaa
or
push
push
lea
les
mov
les
mov
cmp
ror
xchg
jbe
sar
jmp
jmp
scas
inc
and
loopne
fs
xor
mov
mov
enter
aam
push
jo
pop
pop
repz
jns
and
ja
ds
pop
loop
or
push
cmp
dec
or
js
xchg
ror
sub
sbb
xlat
xor
mov
jl
jmp
jnp
hlt
out
cli
daa
dec
xor
inc
loope
add
push
fsubr
fsub
jmp
cmp
idiv
pop
sub
pop
mov
lods
loopne
push
push
mov
pop
jns
fld
sub
and
data16
or
pop
sub
inc
shr
inc
ret
scas
and
mov
push
mov
(bad)
mov
and
pop
mov
mov
add
repnz
fisttp
add
xchg
ret
push
stos
lea
es
xchg
test
xchg
ins
sub
mov
out
pop
mul
sbb
(bad)
jl
je
ja
adc
cmp
pop
je
mov
jae
xor
loop
and
pop
daa
sub
mov
lods
and
jg
lahf
mov
push
cmp
imul
xor
pop
(bad)
fiadd
pop
(bad)
ficom
jo
inc
mov
ins
adc
fiadd
mov
sbb
push
and
imul
jo
or
xchg
jb
fstp
mov
and
push
sbb
cmps
fsub
push
out
comiss
add
aaa
push
call
dec
lods
in
inc
mov
fcmove
dec
shl
stos
pushf
pop
jno
and
add
cmp
adc
(bad)
test
push
jno
cmp
jae
push
loop
cmc
movs
daa
sub
in
call
add
sar
outs
xor
sub
pop
push
std
pop
rep
cld
in
adc
cdq
fisubr
in
clc
pop
daa
sbb
sbb
xrelease
jne
xor
jbe
cmps
stos
or
in
imul
xor
outs
add
jmp
fmulp
fmul
adc
fadd
push
mul
and
cmp
aas
add
repz
mov
xchg
lahf
pop
and
sub
or
addr16
cmp
fcomp
outs
arpl
add
mov
adc
jmp
and
lock
jmp
push
fisttp
mov
inc
cmp
in
addr16
stos
retf
mov
sbb
add
int
mov
mov
movs
out
cmp
outs
(bad)
pop
rdtsc
pop
cdq
or
or
add
js
fsub
ret
or
and
test
pop
mov
and
iret
call
(bad)
sar
(bad)
cld
fild
xor
das
dec
jmp
fidivr
retf
xlat
js
mov
in
outs
fs
jle
inc
pop
sub
xchg
inc
add
and
pop
shl
imul
mov
dec
(bad)
add
outs
pop
mov
shl
mov
lea
push
cli
mov
xor
ja
fcom
and
cmc
nop
push
mov
mov
jns
fldenv
push
pop
in
pop
dec
push
es
sar
and
aaa
sbb
mov
mov
sti
push
pslld
popa
sbb
ins
push
movs
cmp
xor
lahf
stos
shl
loopne
pop
jo
in
cmp
xchg
cmc
into
or
mov
xor
mov
add
repz
es
pop
sbb
or
push
ja
ins
xchg
mov
aaa
pop
mov
lods
aas
sbb
push
push
cs
test
idiv
sbb
fisttp
dec
mov
and
mov
aas
pop
mov
mov
pop
dec
cwd
mov
mov
cmp
cld
inc
sahf
mov
(bad)
cld
xchg
push
out
dec
xor
sti
xchg
inc
inc
popf
pop
ror
jmp
mov
fisubr
out
xor
adc
fs
sbb
rol
or
popa
adc
jge
mov
in
jb
sbb
fs
mov
packsswb
inc
or
xor
sbb
mov
cmp
fwait
mov
mov
int
dec
xchg
jmp
sbb
cdq
add
aaa
hlt
shr
test
les
cmp
cmc
test
ins
inc
add
inc
pop
push
dec
fstp
dec
and
imul
fwait
imul
cmps
out
or
adc
ja
pop
mov
mov
sbb
mov
(bad)
aad
fild
cdq
in
and
sub
lods
sub
and
jmp
sbb
in
inc
pop
xchg
scas
mov
movs
xchg
xlat
sub
stos
sub
aas
mov
inc
lods
ror
xor
fiadd
outs
retf
inc
pop
sbb
fwait
add
loope
jl
shl
das
push
xchg
imul
jl
(bad)
je
jl
xchg
add
mov
mov
mov
idiv
daa
stos
mov
mov
ja
mov
sti
imul
pusha
int3
sub
(bad)
xor
test
pop
lods
mov
mov
push
or
mov
aaa
adc
jge
jl
mov
pop
adc
in
sub
xor
add
cmp
push
add
cmp
aaa
jb
cmc
add
std
in
jnp
mov
idiv
aaa
mov
or
adc
out
xchg
loop
test
aaa
add
movs
(bad)
bound
lock
cdq
aad
adc
xor
ja
sbb
call
(bad)
retf
retf
inc
mov
popf
cmp
mov
lahf
cdq
adc
inc
cli
xor
clc
adc
cmc
test
aas
or
jne
push
(bad)
loope
push
into
sbb
loope
ret
cmps
sbb
enter
(bad)
idiv
and
xor
inc
jge
(bad)
sbb
addr16
sub
jae
and
pop
je
pushf
xchg
adc
stos
aam
repz
(bad)
xlat
xchg
mov
cmp
mov
cwde
fisttp
shr
in
mov
jmp
mov
lds
leave
jns
dec
dec
cmps
mov
or
push
dec
jnp
adc
jb
dec
push
xchg
mov
aam
mov
dec
int3
add
jecxz
mov
lods
shl
imul
fs
pop
dec
cmps
mov
mov
mov
or
inc
leave
out
xlat
dec
jle
xchg
push
test
pop
push
shl
cmp
xor
cmp
addr16
mov
mov
in
cmp
push
push
sbb
data16
lods
add
lods
dec
mov
sub
sbb
jmp
in
mov
lock
xor
xor
pop
les
fcom
pop
mov
sbb
lods
or
div
out
sub
or
mov
bound
mov
out
gs
mov
inc
in
mov
lahf
dec
fimul
dec
and
rol
pop
nop
sub
(bad)
cmp
es
test
push
scas
or
retf
mov
xor
add
lods
mov
(bad)
pop
retf
stc
icebp
retf
pop
into
sub
outs
cld
xlat
mov
rol
mov
xor
int
stos
inc
and
cmp
movs
or
inc
mov
test
mov
cmps
mov
jp
sbb
and
(bad)
cmp
inc
jno
stos
adc
das
mov
jg
fwait
dec
shl
ss
and
dec
inc
sbb
pop
pushw
dec
jmp
aaa
fadd
repnz
pop
retf
push
fwait
pop
sar
movs
scas
mov
xchg
mov
clc
dec
sbb
call
mov
ja
sbb
in
iret
pop
es
lods
pop
push
push
cs
mov
mov
push
push
(bad)
loopne
popf
pop
nop
jg
ror
push
dec
dec
stos
jg
pusha
popf
call
imul
inc
ficomp
sub
test
loop
fdiv
add
int3
test
dec
add
sti
xor
adc
dec
mov
jg
pop
popa
lahf
xor
iret
movs
adc
sbb
jge
mov
ret
dec
out
in
sbb
into
jae
in
xor
dec
(bad)
mov
sub
imul
mov
aaa
mov
mov
xor
or
sbb
je
cmp
cmps
push
or
xor
test
dec
mov
push
inc
lea
sti
add
push
push
in
ror
fsin
sbb
arpl
add
sub
int3
stos
mov
test
add
iret
xor
dec
in
dec
sbb
jecxz
xor
icebp
cmp
dec
add
pop
push
lods
xchg
std
jbe
jl
cmp
pop
xchg
xchg
xor
xchg
jge
mov
push
mov
cmp
hlt
imul
std
push
cmp
push
inc
mov
repz
clc
mov
and
inc
outs
es
in
cmps
add
scas
cmps
retf
sub
test
push
sub
adc
push
rcr
mov
xchg
sahf
or
lahf
pusha
jno
shr
stc
daa
mov
and
xchg
addr16
fsubr
dec
mov
int
ja
mov
adc
out
mov
retf
and
repnz
test
cli
push
mov
add
stos
add
ins
(bad)
jle
jns
out
cwde
popf
cmp
fisubr
inc
pop
mov
out
jmp
jnp
push
aas
xchg
nop
jp
ins
jg
inc
das
or
out
cwde
fcomp
mov
inc
test
adc
shr
imul
xlat
pop
js
jmp
mov
xlat
cli
call
mov
dec
jecxz
(bad)
xchg
arpl
cmp
dec
sub
inc
mov
clc
add
pop
ror
imul
jno
(bad)
fcom
lds
aam
fidiv
shl
mov
nop
sub
(bad)
mov
ss
and
and
mov
push
or
inc
sub
mov
push
iret
jb
gs
sbb
dec
lods
push
popf
fiadd
sbb
fwait
dec
ja
inc
das
xor
scas
pop
dec
pop
xchg
test
push
icebp
ins
scas
data16
xchg
and
sbb
push
fstp
hlt
in
cmp
jne
dec
mov
dec
rcl
lods
mov
out
add
sbb
mov
pop
(bad)
mov
out
inc
dec
mov
pop
rcr
jno
inc
lods
outs
sbb
int
fmul
js
adc
inc
mov
pop
jnp
cwde
bound
rcl
jb
in
adc
add
out
aas
fbld
repz
add
aas
repnz
pop
sub
mov
fimul
inc
je
test
daa
dec
sub
pop
popf
xor
add
xchg
add
push
cmp
cmp
repz
fidiv
rcr
dec
pushf
add
adc
xor
stos
inc
jbe
int
and
jo
xchg
xchg
in
push
xchg
pushf
xor
call
out
push
int3
sub
ror
pcmpgtw
cmps
sbb
(bad)
push
gs
fsubr
jge
xchg
es
hlt
not
fcom
popf
test
test
xor
outs
pusha
pop
clc
jl
fistp
inc
adc
shl
loope
dec
jge
inc
aas
pop
adc
in
sbb
inc
xchg
out
xchg
je
push
push
lods
sbb
fsub
sbb
jne
(bad)
lea
pop
inc
jg
scas
ins
and
fbstp
sbb
xchg
xchg
ja
jmp
lock
mov
pop
jbe
or
enter
inc
mov
ins
fwait
jl
inc
and
mov
xor
mov
loopne
mov
sub
mov
mov
adc
mov
outs
arpl
mov
fmul
mov
sub
mov
add
and
adc
sahf
jmp
sti
xor
loope
ins
jnp
pusha
add
pop
outs
jb
or
push
loop
inc
test
gs
push
xchg
push
dec
mov
aad
and
sahf
jmp
jmp
jae
mov
pusha
adc
sub
movs
pop
sub
sub
scas
cld
call
pop
ror
out
ins
jmp
jp
inc
mov
ja
push
movs
pop
fs
out
(bad)
ss
fst
mov
inc
inc
add
fwait
jnp
fwait
das
adc
sbb
outs
ret
jecxz
and
or
std
dec
mov
sahf
inc
sub
popf
test
mov
in
lods
mov
daa
or
test
aaa
or
vpslld
mov
inc
in
punpckldq
pop
div
aad
ret
dec
jmp
xor
inc
popa
repnz
xchg
sub
dec
xchg
loopne
inc
or
shl
push
mov
es
sbb
jge
call
mov
int3
mov
rcr
inc
sub
or
add
test
jnp
in
mov
inc
mov
or
mov
adc
and
mov
sti
es
retf
inc
gs
xchg
shl
mov
and
hlt
adc
mov
call
cmp
jmp
mov
into
sbb
dec
sub
jns
pop
ds
stos
sahf
je
and
push
je
xlat
inc
jb
mov
cmp
clts
push
xor
dec
xchg
cmp
xchg
inc
xor
pop
mov
xchg
or
and
outs
or
fsub
sub
daa
mov
(bad)
pushf
cmp
dec
sub
jmp
repnz
inc
retf
call
test
(bad)
test
add
ins
mov
rcr
ja
mov
push
xchg
dec
jle
and
js
sub
call
push
push
pop
sub
in
adc
sbb
mov
add
pop
repz
shl
and
xchg
cmc
clc
adc
bswap
lock
je
movs
lods
pop
pop
sbb
lods
lahf
mov
add
jae
loope
fild
lods
cmps
jle
adc
add
stc
cmp
mov
sub
popa
pop
pop
mov
movs
enter
jge
push
(bad)
mov
mov
adc
xchg
movs
or
shr
ss
(bad)
mov
lds
sub
jle
push
add
xor
jle
arpl
out
in
sar
sub
mov
jg
imul
in
add
aaa
xor
test
pop
jg
dec
push
lods
xchg
movs
pop
je
jno
jg
aam
jns
movs
push
(bad)
lahf
mov
cdq
lock
je
ja
or
mov
fild
mov
lahf
push
mov
scas
jbe
lods
inc
dec
lock
arpl
jg
adc
mov
test
push
shr
pop
pop
add
pushf
inc
mov
add
xchg
sbb
sbb
push
adc
sub
sbb
pusha
sub
cmps
mov
loopne
mov
push
les
loopne
mov
cmps
into
loope
outs
in
sub
and
aam
shl
out
inc
or
enter
out
adc
rol
mov
push
mov
inc
(bad)
sbb
xchg
mov
pop
add
xor
mov
inc
mov
jo
mov
adc
aaa
add
dec
in
(bad)
(bad)
les
push
(bad)
inc
call
rol
jno
pop
xor
stos
xor
(bad)
xchg
movs
fucomip
push
or
std
xor
popf
jmp
push
mov
(bad)
xchg
sub
push
push
pop
xor
aam
mov
sub
adc
repz
adc
xchg
xchg
pop
shr
xor
inc
movs
test
adc
push
call
or
add
sti
push
scas
push
or
(bad)
jno
pop
inc
mov
and
adc
push
cmp
lods
push
inc
jb
jecxz
pop
xchg
add
xor
xchg
xchg
inc
aas
aaa
dec
ss
pop
in
sub
ins
inc
retf
dec
or
fst
dec
cs
add
xor
nop
xor
sub
bound
inc
aaa
mov
adc
jae
mov
daa
and
sub
test
adc
(bad)
jg
mov
and
ret
push
cmc
push
cmps
mov
add
sbb
xor
pop
adc
mov
cmp
clc
xor
xchg
sub
push
fild
sub
enter
bound
sub
jb
iret
fcmovu
(bad)
jp
aaa
jb
add
stos
mov
in
mov
nop
pop
jecxz
xor
sub
je
jecxz
xor
imul
push
(bad)
mov
mov
out
ins
jmp
ja
out
cmp
(bad)
lods
xor
add
shl
xchg
out
jmp
mov
pushf
and
and
shr
jmp
mov
out
pop
and
xor
sbb
inc
test
push
mov
mov
je
jmp
and
add
mov
mov
dec
jnp
daa
ret
pop
sahf
jl
jmp
sbb
ret
cwde
(bad)
add
out
dec
push
xor
fs
sub
cmp
shr
(bad)
sub
sub
test
enter
cmp
fsubr
repz
jp
mov
sub
jns
xor
inc
or
push
fiadd
rcr
push
xor
and
nop
sub
inc
pusha
add
outs
arpl
xchg
inc
cmp
push
inc
js
mov
jmp
push
call
fnsave
out
and
fld
mov
adc
and
sub
mov
xor
add
inc
in
lea
and
jle
popa
pop
mov
xchg
stos
adc
xlat
pop
and
sub
fild
push
adc
xchg
scas
xchg
ins
mov
in
mov
bound
shl
aaa
pop
sub
mov
push
inc
jp
sbb
jmp
mov
adc
ins
dec
sbb
lds
loop
stos
test
dec
(bad)
jo
and
ret
xlat
cmp
ds
fcom
mov
mov
fadd
outs
pop
fcom
nop
inc
mov
stc
jmp
scas
jle
stos
mov
mov
lahf
adc
jne
stos
arpl
das
test
or
push
mov
ss
push
popf
push
sub
adc
sbb
nop
jb
mov
into
mov
jecxz
and
gs
cmps
adc
rol
adc
push
into
cwde
sub
mov
add
in
cld
ret
mov
in
div
in
jp
gs
aad
mov
ret
adc
int
shr
lahf
pusha
push
cmp
test
stc
loopne
ja
lock
jo
cld
pop
xor
sub
cdq
out
adc
rol
rcr
rcr
retf
test
jge
dec
fwait
mov
xchg
xchg
(bad)
adc
aad
inc
dec
dec
sahf
imul
cld
cmp
cmp
xchg
ror
or
pop
dec
and
fbld
leave
test
mov
push
and
out
shr
add
cmp
rol
jg
call
(bad)
mov
ret
xchg
mov
xchg
cmc
adc
fidivr
imul
or
aam
in
and
mov
std
test
ins
inc
mov
and
lea
jae
ins
lock
jle
pop
xchg
xor
clc
mov
pop
ss
jmp
(bad)
sbb
mov
adc
(bad)
daa
pop
cmp
pop
stc
sub
(bad)
rcr
out
and
or
fiadd
jne
push
repnz
outs
xor
arpl
mov
loope
dec
fcom
pop
fsubr
das
test
dec
repnz
stos
add
iret
inc
pop
cli
sti
scas
out
in
jmp
lahf
icebp
in
mov
rcl
adc
mov
cmps
jecxz
push
cmps
test
fwait
xor
push
leave
pop
mov
fadd
mov
mov
sbb
stos
cwde
sbb
mov
mov
scas
mov
leave
mov
ds
cmp
xchg
and
leave
pop
cdq
jno
fadd
int3
or
pop
setb
bound
sbb
outs
inc
(bad)
test
push
jbe
jb
retf
pop
dec
cwde
mov
add
and
enter
inc
in
dec
fnstcw
xchg
jno
mov
ret
das
jg
mov
outs
adc
cdq
xchg
xchg
xchg
pop
into
mov
pop
hlt
jp
jp
(bad)
call
add
and
mov
jo
xchg
jmp
fwait
lods
sbb
aam
add
mov
cmp
enter
imul
(bad)
loopne
popf
add
gs
and
jnp
retf
jl
ins
pop
mov
fucom
imul
stos
sub
jae
push
std
sub
mov
mov
xchg
sbb
mov
add
jne
das
sbb
inc
rcr
jmp
xchg
sahf
and
lock
repz
push
add
cmp
push
test
sbb
cwde
popf
cmp
push
xor
aaa
or
and
push
out
repz
or
xor
jae
(bad)
fldenv
das
and
and
dec
adc
push
inc
xchg
push
and
mov
fwait
cwde
(bad)
je
test
mov
ror
mov
xchg
int
les
or
mov
imul
pop
dec
in
(bad)
scas
outs
pop
mov
sub
test
call
push
lods
push
xchg
sbb
push
cmp
outs
ins
stos
(bad)
rcl
int3
bound
hlt
cmps
cmp
sub
sub
into
inc
hlt
mov
pop
sbb
out
scas
(bad)
jo
or
popf
ret
imul
dec
arpl
arpl
lahf
std
pop
jne
sbb
xchg
inc
or
fst
or
ret
or
cmp
dec
faddp
dec
mov
(bad)
enter
scas
pop
mov
mov
(bad)
ret
or
out
enter
mov
pusha
das
mov
jl
jle
popa
je
out
xchg
adc
adc
int
xchg
push
inc
sub
sub
movs
xor
push
adc
outs
sti
popf
dec
cdq
js
inc
stos
test
cmp
and
sbb
cmp
push
sub
shl
mov
mov
dec
cmps
movs
in
js
add
nop
in
cld
or
pop
sbb
jae
ret
in
test
sbb
pop
add
shl
cmps
sahf
dec
push
xchg
adc
fcmove
and
ins
dec
neg
and
jb
fiadd
nop
mov
mov
sub
mov
sbb
adc
and
sar
lods
enter
fldl2e
mov
outs
xor
test
call
xchg
fst
push
mov
adc
push
std
pop
and
leave
rcr
mov
dec
jb
cmps
push
sti
push
adc
push
imul
(bad)
pop
js
mov
xchg
sbb
cwde
das
mov
cmp
or
and
test
cmps
jmp
add
sti
cmp
jae
or
inc
movs
cmp
in
ficomp
cdq
pop
xchg
pop
xchg
or
adc
cmp
inc
xchg
jae
cmp
add
movs
(bad)
enter
or
jmp
dec
call
ins
push
and
jns
clc
sti
xlat
and
xchg
js
fild
push
shr
iret
jle
mov
mov
push
leave
mov
sbb
mov
(bad)
push
pop
push
fisubr
mov
cmp
shl
cmp
cmp
mov
aas
adc
outs
movs
call
mov
ja
pop
arpl
out
dec
xor
push
test
add
fld
lea
adc
push
movs
cld
xchg
fcomp
lods
or
ins
repz
or
ss
jge
add
push
in
sub
xor
xchg
or
pop
add
cmps
(bad)
out
lds
repnz
inc
dec
ds
mov
sti
sub
fld
push
mov
mov
pusha
dec
ja
mov
pop
mov
clc
es
neg
add
(bad)
cld
jmp
pop
es
outs
xchg
jnp
and
in
xchg
retf
in
sbb
mul
stos
add
adc
mov
jmp
and
out
std
aad
push
clc
aas
push
pushf
mov
mov
popf
gs
pop
cmp
pop
sub
pop
inc
cld
push
mov
out
sbb
popf
fisttp
add
(bad)
mov
stc
cmc
sti
out
jp
movs
movs
(bad)
pushf
data16
or
xchg
push
das
mov
xchg
inc
jge
adc
xor
mov
push
test
xchg
pop
cmp
rcl
jmp
imul
mov
add
pop
xchg
into
icebp
cld
pusha
repz
es
or
inc
aam
or
pop
leave
pop
sub
into
pop
leave
sub
mov
push
mov
lds
sub
pop
fldcw
lock
push
sbb
sbb
cmps
xchg
test
leave
push
xor
js
and
inc
das
adc
mov
xor
aad
and
xor
add
fistp
xchg
imul
push
xchg
push
jle
test
sbb
pop
int3
or
sbb
ins
(bad)
aam
sbb
mov
aaa
outs
movs
pop
mov
jge
adc
sbb
cdq
sbb
int
cmp
mov
jns
and
aas
add
(bad)
call
int
std
cld
jmp
ja
mov
cmp
jae
stos
lahf
mov
not
or
fidivr
inc
movs
imul
or
leave
scas
pop
inc
xor
xchg
in
rcl
std
adc
movs
movs
and
inc
ror
xchg
je
lea
sbb
mov
into
push
add
sub
push
jecxz
fwait
mov
imul
(bad)
sub
sub
lea
cmp
lods
hlt
sbb
fs
mov
scas
loop
cwde
adc
jmp
jmp
mov
inc
addr16
add
push
xor
push
sbb
inc
retf
xchg
add
in
inc
push
sbb
pop
sbb
out
fdiv
inc
and
fldcw
sub
loope
aas
pushf
in
test
hlt
pop
mov
push
cmps
scas
xchg
lock
cmps
add
or
or
jg
push
push
aaa
call
jno
shr
xchg
cli
into
pop
fbld
inc
sti
dec
test
pop
mov
cmps
mov
inc
fcomp
add
pushf
push
mov
sbb
iret
and
dec
jecxz
jno
and
mov
loop
inc
and
sub
xlat
scas
(bad)
out
dec
and
or
mov
iret
xor
sub
outs
dec
fiadd
jp
rcl
jg
cmp
jnp
stc
cmps
retf
push
in
cli
cs
or
fidiv
xchg
ja
fwait
cmp
leave
in
mov
stc
lods
or
ror
cmp
js
cld
sub
mov
push
cs
xchg
add
xchg
out
(bad)
cmp
outs
retf
and
cmp
jns
(bad)
rcr
(bad)
(bad)
gs
pop
adc
movs
mov
inc
jbe
sub
or
repnz
mov
stc
push
inc
ret
jno
int3
mov
inc
xchg
ja
data16
or
scas
or
push
fstp
sbb
push
inc
loop
pusha
js
inc
ror
es
pop
push
or
cmp
jbe
dec
int
jmp
add
and
push
movs
enter
in
shl
call
mov
mov
fstp
adc
jmp
sub
in
inc
adc
stos
enter
xchg
fnstcw
stos
inc
mov
adc
popa
mov
and
xor
inc
lds
out
fmul
push
imul
scas
xchg
push
push
ret
fcom
dec
or
pop
mov
ins
(bad)
mov
loope
adc
ror
and
data16
cwde
pmaddwd
lahf
repnz
mov
xor
(bad)
shl
mov
in
mov
fucomip
cmp
hlt
fdiv
leave
pusha
adc
push
cmp
es
jns
adc
mov
das
xchg
mov
mov
or
popf
out
into
xor
test
in
adc
repnz
or
loop
(bad)
cmp
ret
out
add
repnz
inc
rcl
lock
mov
test
js
imul
inc
mov
dec
sbb
aaa
js
inc
mov
mov
mov
sbb
cmp
sahf
test
push
(bad)
out
xchg
jbe
pusha
imul
cmp
xor
leave
xchg
xchg
in
call
test
fstp
xchg
inc
and
sub
aad
js
cmps
ss
cmps
xor
add
pusha
aaa
lea
frstor
sbb
fwait
lods
jle
movs
push
cs
adc
mov
pop
jae
mov
dec
stos
lea
pusha
mov
repnz
add
push
mov
inc
mov
into
and
adc
pop
ins
push
arpl
out
or
and
aad
scas
mov
sub
sbb
cdq
push
xchg
sbb
pusha
mov
xor
dec
sub
mov
aas
sahf
pop
mov
and
fwait
push
out
mov
jo
retf
or
test
inc
xor
inc
je
sahf
dec
or
(bad)
fimul
add
inc
adc
mov
(bad)
mov
cmp
jmp
adc
xlat
jnp
jb
or
mov
mov
test
jmp
inc
xchg
mov
jp
(bad)
and
call
push
jb
lds
movs
daa
sub
daa
lods
out
mov
xor
or
xor
sbb
mov
sub
int3
mov
push
out
std
pop
jb
lods
jmp
lahf
push
inc
stos
neg
xchg
fnstcw
es
or
push
xor
sbb
fmul
mov
push
pushf
addr16
test
jbe
in
xchg
jns
and
jae
inc
or
loopne
dec
int
rcl
das
adc
or
add
mov
js
cmps
dec
push
mov
push
mov
ds
dec
sbb
cmps
pop
in
fimul
in
(bad)
cmc
(bad)
or
gs
mov
jl
and
mov
mov
fwait
mov
(bad)
xchg
iret
sbb
into
and
call
inc
cdq
jnp
mov
stos
mov
and
cmp
xor
and
rcr
repz
aaa
cmp
xchg
loopne
mov
sbb
cli
fisub
cwde
dec
into
ror
push
cmps
hlt
rcl
xchg
in
fiadd
les
idiv
mov
shr
les
dec
repnz
mov
fwait
inc
(bad)
gs
pop
mov
pop
jno
add
clc
retf
cdq
add
dec
and
xchg
addr16
fscale
lahf
ret
sub
movs
mov
fst
dec
or
fistp
adc
out
adc
cmp
mov
leave
out
dec
xlat
sti
lea
jb
jae
and
adc
jne
or
fmul
and
cmp
and
and
cwde
(bad)
sub
aad
xchg
in
xchg
(bad)
ret
add
cmp
mov
mov
ins
stos
cmp
pop
ss
addr16
sub
jl
fwait
ror
jg
jmp
ss
div
cld
fstp
mov
sbb
inc
dec
mov
aas
sahf
popa
rcr
jno
repnz
cmps
mov
fcmovnu
lea
lock
mov
pop
mov
add
idiv
xlat
imul
das
fwait
stc
xor
ins
jmp
add
push
xor
ins
mov
into
int3
adc
mov
movs
adc
xchg
mov
inc
stc
aad
fsub
das
loope
pusha
inc
jmp
iret
cmps
adc
cmp
scas
ficomp
mov
adc
pop
lods
fcomp
or
inc
sti
ins
xchg
fld
aas
xchg
popf
xlat
dec
or
adc
adc
add
cwde
in
and
xor
daa
iret
call
sub
xchg
lea
jb
shr
xchg
add
pop
sub
sub
and
pop
push
adc
or
cmp
in
adc
xchg
enter
jne
clc
fldenv
jns
add
repz
fnsave
retf
xchg
leave
pop
jno
or
xor
retf
std
cmps
dec
mov
cmp
imul
(bad)
push
aaa
(bad)
out
xchg
adc
sub
mov
pop
ins
icebp
addr16
enter
mov
movs
adc
rol
stos
inc
repz
mov
cmp
aas
pop
sub
out
push
cmp
fcomip
sub
arpl
cmc
repnz
cmp
mov
pop
xchg
xchg
in
cld
xlat
xchg
add
inc
pop
xor
scas
inc
pop
enter
pop
sbb
cmps
jno
pop
shl
mov
mov
mov
mov
jmp
push
push
pop
rcr
rcl
xor
lock
inc
inc
mov
mov
mov
sub
ret
pop
jo
mov
inc
jo
or
xchg
fsub
(bad)
ins
ds
mov
mov
call
push
std
push
bound
call
and
js
popf
dec
aam
xchg
inc
add
pop
pop
in
mov
data16
xor
int3
mov
stos
imul
add
arpl
gs
inc
out
int
popa
push
mov
out
out
fist
mov
mov
mov
enter
faddp
pop
mov
movs
es
add
dec
xor
cmp
outs
js
ret
cs
cmp
aas
in
loope
ret
xchg
pop
jb
sub
aas
gs
xchg
fidivr
sti
das
xchg
cmp
shl
movs
mov
aaa
push
adc
jno
push
idiv
daa
cmp
dec
test
inc
sub
jae
xchg
cmps
stos
inc
cmp
dec
shl
lahf
inc
js
push
jns
not
fwait
pushf
sub
clc
shr
(bad)
mov
xor
ds
cmps
adc
ret
or
mov
aas
ficomp
and
adc
inc
push
jg
or
gs
jnp
imul
ret
fisubr
xchg
out
into
cmp
mov
cmp
call
aaa
mov
in
mov
sbb
jl
pop
mov
cdq
pop
xchg
jnp
dec
imul
jo
rcl
xor
xchg
and
pop
mov
lods
nop
in
xchg
stos
scas
pusha
dec
(bad)
repz
(bad)
cmps
fwait
popf
cmp
fistp
mov
les
clc
aam
mov
xchg
leave
add
arpl
jle
hlt
jne
mov
js
push
xchg
js
and
jb
mov
arpl
add
(bad)
(bad)
jecxz
popf
movs
scas
inc
(bad)
into
mov
lds
cld
inc
xlat
xchg
xchg
push
jge
in
(bad)
(bad)
adc
daa
lea
dec
sub
aas
lahf
jmp
adc
or
inc
enter
mov
cmp
lds
mov
sti
pop
icebp
es
inc
sbb
inc
or
loopne
popa
jae
sub
and
mov
mov
repnz
sti
pushf
test
aas
call
jmp
xor
leave
dec
call
sub
daa
and
sub
push
mov
or
pop
or
inc
dec
mov
jl
stos
xor
push
pop
mov
dec
sar
out
mov
aam
iret
jo
and
fstp
lahf
xor
mov
push
(bad)
xor
mov
rcr
test
mov
cmp
sub
sti
push
cdq
mov
not
out
xchg
push
test
inc
outs
and
sbb
lea
mov
jmp
push
test
mov
call
mov
jle
adc
movs
pop
test
jmp
xlat
dec
add
jp
lods
(bad)
or
adc
xchg
inc
sub
sub
pop
jb
retf
outs
adc
lds
test
add
push
pushf
push
gs
jle
je
fistp
es
pop
mov
clc
sbb
or
shl
push
gs
mov
or
lds
jmp
sub
nop
cmps
or
or
sbb
sub
hlt
ins
pop
(bad)
scas
push
dec
cmp
mov
pop
sbb
test
test
add
xor
scas
adc
cmps
jo
mov
adc
ss
xchg
mov
push
mov
or
inc
pop
test
jo
(bad)
push
push
sub
cmp
aad
inc
sahf
pop
leave
int3
xor
sbb
sub
test
popf
(bad)
sub
mov
jb
loope
jge
inc
lods
jns
pop
dec
xchg
mov
imul
pushf
jne
mov
retf
mov
aam
das
inc
push
sahf
mov
pop
loope
cmp
into
into
in
repnz
movs
push
xchg
mov
sub
lods
add
es
push
call
mov
jl
mov
adc
add
mov
clc
and
sub
jno
retf
das
pop
adc
dec
ret
ins
add
xlat
sbb
xchg
xchg
(bad)
bound
std
add
call
xor
mov
rcr
push
mov
out
dec
push
in
pop
ret
imul
std
das
xchg
ret
sbb
sub
in
xchg
sbb
mov
sub
stos
mov
fmul
jl
mov
adc
leave
jbe
sbb
pop
in
jecxz
mov
or
dec
test
out
fimul
mov
mov
(bad)
enter
mov
in
(bad)
lods
inc
ins
and
leave
mov
push
imul
loopne
out
sbb
mov
or
jmp
jo
jmp
mov
xchg
mov
mov
rol
leave
mov
dec
push
aam
loope
push
cwde
mov
xlat
push
movs
xchg
dec
out
popw
xor
icebp
inc
adc
inc
ror
push
xor
adc
push
shl
jp
mov
fs
arpl
jne
mov
xchg
or
outs
sbb
or
cmp
ss
jbe
cmp
aas
and
and
sbb
stos
in
adc
mov
dec
and
mov
fst
repnz
js
aam
xor
push
push
sbb
mov
adc
sub
pop
jg
add
adc
sbb
jb
jle
dec
pop
mov
ss
dec
mov
lds
mov
xchg
sti
lahf
movs
pop
mov
pop
rcl
xchg
cdq
ja
xchg
rcr
mov
sahf
into
popf
(bad)
stos
sbb
enter
fucomip
mov
dec
test
cwde
sti
in
cmp
mov
jl
daa
lahf
into
test
adc
jecxz
fiadd
pop
bnd
sbb
pop
cmp
pop
fisttp
dec
imul
aad
pop
outs
fwait
es
jle
jns
clc
fbstp
(bad)
sbb
and
push
jmp
(bad)
xchg
imul
mov
scas
enter
or
stos
pop
sub
xchg
push
mov
add
mov
jmp
bound
shl
dec
and
cmp
or
inc
pop
aam
xchg
pushf
outs
cmp
xor
fwait
mov
xor
mov
sub
test
out
shl
and
(bad)
jmp
push
mov
test
mov
xor
fisubr
or
cmp
or
xchg
in
mov
mov
aaa
mov
sahf
push
ds
sbb
in
jp
les
rcl
xor
cwde
(bad)
mov
stos
repz
sub
repnz
or
dec
ins
(bad)
loopne
neg
das
dec
aas
sub
cs
add
xchg
inc
fcmovb
repnz
pop
push
fsubrp
pop
add
cli
mov
sub
dec
inc
fwait
sub
loop
repz
daa
pushf
ret
loop
jmp
xchg
div
out
loopne
movs
je
fwait
mov
inc
adc
push
js
jg
ret
iret
cs
adc
mov
pop
fnstenv
mov
mov
int3
es
jmp
sub
clc
cmp
mov
popf
adc
push
shl
pop
push
rcl
das
xor
fst
mov
push
pushf
dec
mov
cwde
ficom
dec
lods
mov
sub
loopne
clc
mov
xlat
setl
dec
mov
xchg
aad
iret
lahf
mov
jns
ins
clc
jbe
inc
fistp
push
stos
adc
leave
jnp
repnz
pop
test
jnp
push
scas
mov
popf
and
(bad)
stos
lods
icebp
mov
pop
(bad)
jmp
inc
sub
add
inc
pop
pop
call
es
sbb
pop
or
ror
out
sub
cli
push
iret
(bad)
test
and
ja
sbb
xchg
mov
clc
(bad)
hlt
es
pop
jmp
xchg
ss
lock
push
and
add
into
clc
retf
popa
mov
xor
pushf
xchg
push
addr16
mov
xchg
cli
xchg
add
inc
lods
adc
dec
outs
inc
inc
push
and
mov
scas
mov
adc
dec
(bad)
scas
dec
aas
jp
mov
adc
cld
stos
xor
adc
in
cmp
push
cmc
pop
out
cmp
jae
daa
aaa
mov
inc
(bad)
cmps
outs
icebp
sub
inc
daa
out
inc
push
in
mov
call
in
sbb
pop
jbe
push
jmp
inc
int3
mov
cmps
jl
adc
cmp
mov
xchg
test
inc
retf
es
movs
pop
bnd
out
sub
dec
jle
mov
fiadd
add
adc
push
outs
(bad)
pusha
out
and
pop
fiadd
jns
mov
sub
shr
cmp
and
sbb
mov
das
add
mov
push
pop
shl
xchg
cmps
sti
jns
cdq
ret
push
rcl
shl
clc
adc
mov
mov
or
rol
xor
call
xor
movs
jmp
imul
mov
hlt
stos
cmp
cmp
repnz
out
xchg
fucomp
repnz
lahf
xchg
shl
mov
idiv
or
xchg
push
push
retf
mov
adc
cwde
sub
sbb
(bad)
sub
mov
dec
sbb
nop
in
and
and
(bad)
enter
out
fwait
cmc
push
popf
push
xchg
dec
scas
jnp
scas
fwait
mov
jns
test
jmp
hlt
int3
add
movups
or
xchg
retf
fwait
mov
jnp
inc
rol
jns
xchg
jae
(bad)
mov
dec
adc
into
jmp
mov
jno
or
inc
outs
and
and
mov
mov
adc
mov
cmc
aad
jns
mov
xchg
dec
cwde
cmp
jbe
rol
adc
inc
gs
mov
and
or
ss
(bad)
sub
hlt
shl
xor
lea
scas
add
jl
inc
push
lock
mov
repz
jl
xor
adc
sbb
cwde
mov
adc
push
or
loop
in
xor
mov
ret
pop
xchg
pop
call
retf
and
inc
sub
pop
pop
mov
dec
jle
sbb
jae
xchg
xor
xchg
sub
inc
push
test
fmul
adc
cmp
shl
jmp
inc
aam
ins
repnz
mov
(bad)
into
dec
dec
push
jns
mov
cli
adc
aaa
lahf
push
jmp
sub
mov
jno
into
call
out
test
or
pop
adc
mov
inc
movs
in
dec
pop
popf
idiv
call
js
mov
jl
in
repnz
mov
popa
push
adc
dec
sbb
inc
pop
sub
cs
mov
retf
dec
xchg
(bad)
adc
and
fwait
cmp
xchg
retf
dec
cdq
mov
mov
add
push
cmc
xor
xlat
iret
dec
repnz
pushf
and
push
imul
sbb
xchg
pop
mov
or
mov
hlt
pusha
jae
aam
inc
mul
enter
mov
xchg
paddusb
jecxz
jle
mov
in
lds
cmp
clc
outs
lock
mov
push
mov
push
inc
aas
loope
std
sbb
mov
pusha
adc
mov
jb
adc
(bad)
aam
ficom
sbb
pop
jp
sub
add
xchg
push
xchg
retf
rcr
jp
fmul
or
bound
ds
jmp
pusha
xchg
scas
dec
xlat
inc
fs
sbb
cdq
aaa
retf
or
cmps
cmp
test
or
test
push
aad
ret
mov
fdiv
loopne
or
ret
adc
cwde
xchg
cwde
dec
(bad)
pop
cmp
dec
dec
fdivr
fmul
pop
lea
inc
jecxz
sti
test
mov
mov
aaa
and
int
scas
fdiv
sbb
fcmove
popf
imul
cli
fadd
or
cmp
cmps
test
into
dec
jecxz
dec
aam
cmc
jmp
or
jbe
test
sbb
mov
stos
xor
and
ret
repnz
push
test
js
xor
popa
test
test
cmp
enter
xrelease
sar
mov
dec
cld
in
dec
cmp
cmp
outs
je
sbb
shr
jo
pop
xchg
ret
and
mov
adc
ss
test
mov
nop
pop
add
or
cld
cmp
pop
mov
out
in
sti
iret
jmp
test
push
aas
shr
ja
and
jg
mov
xor
sub
les
es
scas
fadd
ins
test
retf
lods
mov
inc
dec
mov
inc
xchg
bound
scas
and
inc
ret
and
call
mov
retf
mov
xchg
mov
ins
push
jbe
inc
ss
xchg
dec
fdiv
jle
(bad)
ret
ins
in
push
mov
or
and
dec
jnp
ins
sahf
int3
clc
fs
es
or
push
jle
cmps
out
call
sub
adc
int3
inc
into
mov
cmp
jmp
mov
jg
cmp
inc
(bad)
rol
cs
add
movs
add
mov
fld
mov
dec
pop
ins
dec
and
push
sysexit
lahf
xlat
mov
pop
pop
bound
lods
inc
lods
jmp
arpl
jle
jo
or
push
sbb
imul
adc
jmp
mov
xor
jle
or
sahf
loop
mov
movs
fcom
bound
cmp
mov
add
push
xor
mov
imul
loope
out
mov
xchg
rol
in
cld
inc
sub
mov
add
add
xchg
shl
push
pop
out
enter
add
mov
jb
iret
xchg
mov
adc
stos
mov
inc
nop
aas
mov
imul
out
add
adc
jle
fwait
pop
cmp
jge
add
inc
arpl
cmp
je
pop
jg
das
cmc
adc
jo
and
in
and
push
adc
cmc
jae
shl
and
push
mov
push
pop
jno
jae
sub
mov
(bad)
jne
in
cmps
aam
xchg
or
cmps
dec
xchg
sub
mov
mov
sbb
jb
inc
pop
fcomp
adc
lock
mov
rcl
sub
jge
stos
leave
shl
adc
mov
dec
jp
lock
je
or
push
xchg
push
pop
test
jo
clc
jle
mov
dec
sbb
gs
xchg
and
push
and
xor
pusha
stc
in
dec
aad
mov
pop
mov
ja
lods
js
jmp
push
pop
push
add
imul
mov
xchg
cmp
inc
xchg
pop
call
mov
aam
cld
sbb
sub
xchg
int
test
pop
fistp
jecxz
mov
mov
or
test
jp
ins
and
mov
and
mov
mov
jge
inc
push
push
es
cmp
call
ss
test
inc
mov
fsub
mov
iret
sbb
shl
adc
rol
xchg
add
mov
push
sbb
add
sbb
test
cmps
pop
jmp
outs
mov
xor
pop
call
mov
or
(bad)
mov
fsubr
jbe
dec
addr16
movs
mov
mov
sub
mov
into
aam
leave
inc
pop
push
push
and
jo
pop
fsub
dec
scas
pop
movs
mov
adc
iret
sub
pop
xor
push
dec
add
daa
jl
dec
ffreep
sbb
inc
xchg
xchg
and
pop
sbb
pop
mov
adc
cmps
mov
ja
fild
mov
cwde
rcl
bound
lods
xlat
pop
in
mov
or
cmp
mov
hlt
push
xor
ret
jmp
movs
fld
loop
cmovae
or
sub
int3
dec
test
jbe
push
out
in
mov
mov
cmp
mov
aaa
xchg
aad
pop
scas
jns
mov
in
int3
push
adc
jne
jl
push
push
cmps
adc
push
imul
pop
nop
psubw
fs
icebp
adc
ret
cmc
test
xor
retf
or
cmp
jne
mov
fst
movs
dec
sub
jg
adc
leave
aad
es
pop
push
(bad)
loope
aas
sbb
retf
pop
pop
fist
test
imul
imul
inc
pop
jmp
mov
adc
pop
call
pop
ja
cmp
push
fnsave
or
mov
dec
and
aad
aad
aad
movs
mov
push
mov
daa
lods
leave
mov
mov
add
jmp
fdiv
or
dec
push
call
hlt
fcomp
mov
xchg
jl
dec
adc
sbb
in
or
ins
pop
aaa
das
adc
cmps
mov
retf
add
sahf
xor
stos
out
retf
sbb
dec
push
sbb
mov
mov
or
pusha
movs
and
adc
jno
stos
and
mov
xchg
ins
or
jnp
mov
jge
rcr
sbb
push
push
and
in
push
mov
aam
xchg
jg
adc
ret
fist
sub
sub
push
fidivr
(bad)
call
popa
gs
mov
xor
rol
shl
repz
sar
mov
mov
xlat
add
add
mov
rcl
nop
pop
ins
adc
pusha
iret
sbb
pushf
add
popf
data16
add
xor
fucom
or
push
lahf
adc
mov
cmp
or
sbb
fistp
rcl
inc
mov
(bad)
jns
loop
into
adc
xlat
aas
or
cli
dec
(bad)
or
push
push
iret
leave
jb
sub
mov
jb
outs
or
jne
mov
mov
jecxz
sbb
cmp
and
dec
add
movs
retf
in
cmp
sub
jnp
mov
fldenv
lods
xor
sub
pusha
mov
out
cdq
adc
dec
cmps
sub
in
add
mov
rcr
inc
mov
retf
pushf
inc
jno
es
inc
sbb
cs
out
mov
icebp
xor
push
sub
cmp
pusha
(bad)
jmp
mov
fs
lahf
sub
pop
stos
lods
pop
and
push
sbb
pop
std
popf
cmc
mov
sbb
jl
inc
int3
and
and
ret
movs
adc
cdq
inc
xchg
add
xchg
leave
sbb
lock
cmp
mov
arpl
push
dec
in
rcr
inc
lea
clc
inc
and
mov
pop
push
daa
sub
lock
xchg
pop
and
jecxz
sbb
push
(bad)
inc
xor
jno
cmp
pop
or
sbb
ss
jg
pop
stos
test
mov
out
push
fs
cs
sub
mov
cmc
imul
xor
scas
ret
mov
ror
fstp
jl
pop
out
add
xor
adc
push
(bad)
shl
sub
stos
icebp
dec
xlat
js
out
push
pop
jmp
ins
mul
mov
xor
es
and
pop
mov
jge
sbb
or
add
pop
(bad)
push
movs
dec
jmp
inc
imul
lock
mov
mov
test
cmp
fs
js
stos
pop
cmp
and
dec
mov
ret
ret
jg
jecxz
ins
inc
sbb
cmps
scas
xor
pop
call
mov
shr
mov
or
das
data16
add
mov
(bad)
sub
das
sub
mov
cli
fimul
cmps
in
loopne
push
sub
inc
ret
push
push
test
or
push
sahf
mov
cld
dec
pushf
jae
daa
and
sbb
or
adc
call
cmps
xchg
or
dec
cmp
dec
cmp
aas
int
add
and
out
jne
cmp
enter
(bad)
into
pop
loope
push
(bad)
repnz
or
pop
and
icebp
cmc
pushf
push
ficomp
xchg
fild
aaa
jmp
mov
jp
mov
lods
pop
lea
pop
cmc
out
cld
mov
pop
in
loop
paddusw
and
repnz
mov
sub
sub
jp
jge
(bad)
stos
xchg
jae
clc
pusha
inc
xchg
daa
data16
out
shl
push
call
pop
shr
dec
inc
and
inc
retf
and
mov
dec
cmp
inc
pop
xchg
sub
dec
cmps
cmp
pop
mov
lods
(bad)
pop
in
hlt
ins
adc
mov
mov
fild
jl
cmp
retf
fldcw
sub
ret
(bad)
cmp
mov
mov
sub
rcl
ss
pop
jmp
xchg
aaa
(bad)
add
fs
jmp
or
dec
jmp
js
data16
mov
inc
clc
mov
xchg
mov
in
leave
jne
ins
push
ins
or
loopne
mov
nop
cmps
sub
mov
outs
mov
jl
ret
stc
adc
jmp
pop
mov
int3
add
jns
jmp
fcom
sbb
add
les
(bad)
adc
imul
cmc
xchg
xor
sti
xchg
shl
pop
shl
xlat
jecxz
stos
sub
(bad)
in
ds
dec
(bad)
fiadd
outs
push
add
enter
sub
pusha
jle
pop
jo
mov
sbb
ins
shl
inc
xor
and
outs
dec
sub
sub
into
aam
mov
sub
push
fdivr
into
mov
push
dec
dec
out
inc
mov
in
dec
fadd
scas
imul
call
aaa
cmc
jl
ds
inc
or
fucom
shl
or
cld
jecxz
(bad)
ins
fucomi
xor
mov
dec
imul
sbb
xor
sub
fistp
das
cmps
sbb
xor
cs
les
cmps
mov
inc
fistp
fild
fst
ja
inc
fsub
xchg
(bad)
loope
outs
mov
mov
repnz
es
hlt
mov
in
cmp
(bad)
in
sub
pop
(bad)
xor
cmps
dec
push
adc
bound
jns
mov
push
inc
mov
mov
jmp
or
cmp
mov
pop
mov
fmul
in
jmp
shr
jmp
cmp
fwait
inc
lock
clc
dec
scas
(bad)
cmp
jnp
lea
adc
sti
add
out
ficomp
jl
lea
cld
or
data16
jnp
sub
fcom
xor
retf
jmp
dec
retf
adc
push
or
push
clc
mov
and
xchg
pop
cdq
repz
test
loop
movs
aad
nop
or
pushf
into
fild
mov
mov
mov
icebp
sbb
jbe
dec
cmc
inc
jo
ror
sub
pop
pop
(bad)
popf
sbb
jmp
dec
sub
cmps
out
sahf
jp
(bad)
mov
sub
xlat
jnp
cmp
neg
jno
cmps
stc
mov
push
mov
inc
scas
repnz
aas
mov
stc
sbb
pop
out
fst
test
jge
dec
mov
jnp
test
sub
out
ror
xlat
bound
(bad)
sbb
or
pushf
addr16
int3
adc
jmp
add
xor
mov
push
rol
cmp
(bad)
cmp
jno
ret
aas
push
cmps
cmp
jge
ins
imul
(bad)
out
push
or
fsub
inc
outs
imul
jno
jge
jns
repz
dec
outs
jns
dec
push
arpl
dec
mov
ret
and
fs
test
xor
xor
sbb
sub
es
sub
jmp
in
bswap
jb
popa
sub
dec
mov
stc
jg
push
fucomi
idiv
in
jne
adc
sti
inc
mov
inc
pop
pusha
call
push
or
add
push
adc
sar
mov
mov
int3
xchg
ror
cdq
cmp
push
cs
(bad)
jecxz
dec
inc
mov
in
in
in
xchg
jne
es
jb
and
ins
push
ror
mov
leave
and
xlat
mov
sbb
cs
jge
call
jp
dec
mul
and
repnz
xlat
lods
add
fldcw
add
xor
dec
pop
nop
cmc
push
in
call
ret
inc
and
xchg
ss
push
jno
enter
add
sub
or
aad
push
add
ds
mov
popa
mov
push
es
sbb
mov
adc
shl
retf
jecxz
xlat
jmp
into
add
dec
push
sub
pop
or
pop
and
mov
adc
pop
jns
push
fxch
pop
ret
push
sbb
movs
arpl
ret
in
xchg
dec
js
aaa
pop
fcmovbe
ret
iret
stc
add
add
or
(bad)
cmp
ja
adc
movs
cmp
das
xchg
ret
pop
add
repnz
shl
add
adc
or
pop
inc
dec
mov
inc
(bad)
mov
add
loop
loopne
dec
jae
adc
outs
adc
mov
jns
xor
jl
push
repz
jbe
fldenv
push
sub
cmc
mov
outs
cmp
inc
dec
jg
stc
jb
and
cmps
add
sub
inc
dec
int3
sbb
pop
(bad)
ds
add
enter
mov
add
lock
and
add
aam
jle
daa
sbb
pop
scas
aad
and
(bad)
(bad)
aas
sub
jge
push
arpl
aaa
in
movs
mov
xchg
das
sahf
sbb
push
xor
inc
mov
iret
push
lock
movs
arpl
push
dec
scas
test
jns
int
ins
xor
jae
mov
and
popa
adc
pop
ins
and
cmp
mov
cmp
fdiv
cmps
movs
stc
out
pop
push
sahf
cmp
xor
test
fnstenv
sub
dec
mov
(bad)
lea
ins
cwde
pop
les
xchg
push
inc
jmp
jbe
lock
xchg
fs
leave
test
scas
stos
mov
mov
and
jns
xchg
sbb
ss
or
jb
and
mov
data16
add
sub
and
lods
int
push
sti
aad
xchg
pop
jno
test
aas
aam
(bad)
pushf
xchg
in
mov
sub
fbstp
dec
add
or
push
inc
popa
mov
enter
xor
sbb
mov
in
push
adc
jl
fld
push
mov
(bad)
loop
popf
mov
jbe
mov
mov
and
mov
dec
movs
frstor
dec
arpl
push
lock
sbb
mov
shl
scas
rcl
inc
and
shr
jp
jecxz
out
jge
inc
push
aam
mov
retf
xchg
dec
imul
out
and
xchg
int3
sti
shl
cwde
into
in
retf
out
jp
in
mov
fdiv
lock
aam
mov
sti
and
mov
sub
cmp
test
mov
ret
jno
shl
push
mov
xor
aaa
scas
je
xor
in
inc
add
mov
lahf
mov
lahf
daa
mov
ret
sub
add
into
jo
call
pop
div
int
mov
lods
push
call
and
cmp
jae
jmp
outs
push
add
hlt
ins
jmp
dec
sub
pop
mov
pop
inc
imul
mov
(bad)
and
sbb
cmp
cmp
ror
mov
pop
leave
dec
inc
mov
cmp
stos
call
or
cmc
push
pop
enter
ror
loop
jns
adc
leave
jbe
and
arpl
and
and
fld
test
sub
std
xchg
xchg
cmps
outs
sbb
in
pop
rcr
push
test
cmps
dec
ins
mov
push
or
ds
call
fist
clc
jp
adc
xor
add
pop
or
clc
not
jecxz
push
sti
mov
lods
mov
sub
mov
out
adc
fstp
popa
call
int3
mov
push
add
outs
ret
push
jl
lea
clc
and
in
sbb
inc
mov
test
xor
xchg
xchg
mov
push
repz
mov
popf
js
xchg
xchg
add
mov
pop
xor
cmp
clc
fnstenv
mov
push
hlt
or
xchg
loope
stos
dec
sbb
cmp
mov
in
icebp
mov
out
and
mov
pop
mov
loope
pop
test
nop
mov
ins
jecxz
outs
fwait
pop
pop
push
sub
repnz
daa
xor
int
and
mov
(bad)
out
outs
pushf
stc
mov
dec
retf
and
add
push
jmp
add
lock
inc
sub
mov
inc
pusha
imul
scas
add
or
xchg
test
mov
mov
dec
mov
imul
or
cmc
xchg
call
movs
shl
sbb
mov
xchg
mov
cmps
mov
mov
dec
movs
imul
xor
inc
pushf
pop
ja
jle
xchg
enter
scas
les
sar
push
lods
sub
je
ret
outs
imul
push
movs
or
adc
mov
xlat
cwde
call
inc
imul
out
xor
fdiv
xchg
xchg
sbb
jecxz
call
mov
in
xor
mov
sub
pop
cmp
sub
and
imul
stc
xchg
mov
ins
push
adc
daa
xchg
mov
push
ret
inc
push
gs
std
cmp
mov
fisubr
test
dec
frstor
arpl
jns
pop
aaa
leave
mov
ret
mov
shl
cld
cld
lahf
aas
call
and
es
mov
ret
cmp
icebp
jmp
sbb
sub
cmp
out
or
push
jmp
pop
fdivr
jbe
rcr
sti
xchg
mov
addr16
xchg
dec
adc
xor
mov
nop
mov
repz
xor
add
mov
jge
daa
cdq
inc
fidivr
popf
(bad)
bnd
jne
xor
nop
adc
cdq
cwde
test
cmp
sti
fwait
mov
jne
mov
movs
int
aas
int3
int3
mov
pop
pop
retf
xchg
sub
mov
(bad)
or
xor
js
sahf
xchg
lahf
fs
retf
test
out
mov
and
jl
cmp
mov
lahf
adc
test
adc
retf
out
push
mov
jmp
push
sbb
and
cmps
adc
mov
dec
clc
push
add
cdq
js
sti
data16
cdq
clc
sub
push
xor
cwde
rcr
sbb
aad
rcpps
sub
sub
sbb
inc
push
(bad)
rcl
mov
and
jns
xlat
cli
or
xchg
dec
and
fiadd
sub
pop
mov
gs
jbe
jle
push
rcr
adc
call
pop
mov
repnz
jmp
cli
loop
popf
icebp
cmp
imul
cmp
(bad)
push
das
or
pop
push
les
addr16
inc
mov
sbb
nop
and
sub
inc
push
sub
push
adc
scas
ins
mov
xchg
out
and
mov
fiadd
and
push
cmp
(bad)
and
mov
mov
add
mov
mov
push
ret
loopne
fisub
lods
or
out
mov
fcomp
dec
gs
gs
xor
jle
es
out
jecxz
arpl
cmps
cmc
dec
pop
fs
jmp
je
pop
test
call
fcmove
fbld
and
outs
(bad)
call
add
retf
iret
add
les
xchg
(bad)
sub
scas
dec
sbb
repnz
push
jbe
dec
cmps
frstor
stc
mov
mov
mov
push
arpl
in
cmp
pop
jle
push
popf
sub
add
adc
cmp
inc
cld
xor
test
scas
retf
shl
or
in
push
mov
xor
js
mov
and
jae
stos
and
mov
and
pop
test
mov
add
cmp
dec
cld
retf
cmps
xchg
sbb
scas
fucomip
mov
sbb
or
mov
stc
xchg
stc
rcr
or
and
mov
jbe
push
out
aad
xor
dec
lds
retf
push
add
call
int3
aad
add
mov
xchg
dec
and
jl
sbb
xchg
ins
nop
xchg
neg
mov
pusha
mov
and
movs
mov
cmp
out
pop
(bad)
sub
push
dec
lods
shr
pusha
mov
mov
mov
cmp
sbb
cdq
and
cmp
mov
imul
xor
idiv
imul
cmp
mov
sub
sub
dec
cmp
aad
xor
pop
leave
mov
pop
clc
pop
mov
pop
xor
ins
adc
push
add
lods
rcl
fwait
retf
and
push
dec
hlt
mov
jb
push
pop
sbb
test
jg
xchg
movs
mov
test
popa
and
push
cwde
cdq
or
bound
push
jle
jbe
cmp
add
sbb
or
mov
jmp
pop
aaa
cmp
xor
jl
cwde
pop
or
jmp
repnz
push
and
jne
pop
bound
pushf
add
mov
enter
add
pop
xor
aaa
sbb
xor
mov
dec
or
xchg
inc
sahf
push
scas
sub
mov
adc
inc
cmps
jo
xchg
add
sub
ret
repnz
xchg
sbb
movntq
enter
mov
inc
or
push
call
xor
jl
movs
fild
xor
shr
mov
imul
cld
jo
jo
ret
lahf
rcr
hlt
mov
imul
(bad)
sahf
xor
test
add
inc
mov
dec
ds
pop
dec
ret
loop
lods
sub
fcmove
pushf
inc
xor
scas
lea
cs
test
fwait
pop
or
add
nop
gs
fucomp
arpl
xchg
cmp
std
das
ror
rcl
adc
push
sub
fidiv
jnp
(bad)
fwait
repnz
fisttp
jecxz
sar
jnp
int3
jp
aam
fmul
lods
jmp
xchg
cmp
and
push
or
(bad)
fsub
fisub
pop
retf
cmp
nop
xor
cmp
cmc
popa
mov
jo
or
or
xlat
idiv
jmp
cmp
xor
mov
mov
sub
leave
mov
loopne
add
and
cmp
xor
dec
aas
sbb
stos
add
test
mov
std
clc
xchg
xchg
pop
lahf
mov
mov
into
and
in
sbb
cmp
inc
cs
addr16
mov
xadd
pop
cmp
jp
xlat
stc
xchg
mov
movs
adc
clc
mov
xor
add
xor
or
pop
dec
mov
out
sbb
cli
repz
std
or
sub
add
(bad)
adc
das
leave
jbe
out
xor
and
cwde
add
adc
jbe
jo
test
sbb
mov
lods
mov
adc
adc
xchg
push
rcl
or
fisttp
cmp
or
loop
(bad)
iret
popa
fiadd
scas
sbb
imul
mov
push
mov
adc
test
in
cmps
jae
or
sbb
mov
stos
xor
in
cmp
daa
scas
pop
das
mov
or
(bad)
mov
mov
jno
adc
gs
adc
loop
inc
and
idiv
(bad)
mov
in
jbe
mov
nop
mov
inc
shr
sbb
or
lock
cmps
repnz
call
test
push
(bad)
add
mov
enter
or
jp
xor
inc
dec
adc
nop
dec
out
sub
push
jo
mov
ss
push
pop
and
push
jns
jae
stc
dec
pusha
inc
stos
stos
fcom
fnsave
push
cmovg
mov
mov
sub
dec
imul
fwait
and
cmp
pushf
in
sub
cmp
lock
add
and
sub
cli
mov
push
mov
push
mov
loop
mov
or
push
andps
sahf
ds
ss
xchg
and
add
test
xchg
sar
cdq
jne
cmp
iretw
adc
and
adc
and
lods
mov
cmp
cld
xchg
jmp
add
sub
add
das
mov
push
out
dec
shr
cld
mov
(bad)
cmp
shr
sti
std
pop
mov
mov
or
cwde
mov
adc
and
sbb
ss
mov
cmp
push
mov
ins
jns
jle
and
lock
push
or
jb
pop
in
cmp
xchg
and
pop
jmp
sub
inc
push
jmp
ret
xchg
sub
mov
cdq
cs
dec
mov
jns
jo
nop
sar
mov
test
fstp
pop
push
jge
aas
test
lods
repnz
push
xor
or
repz
xor
fwait
jns
adc
aas
stos
fimul
push
or
inc
stos
and
xor
test
mov
mov
fidivr
mul
ror
mov
push
mov
mov
adc
movs
(bad)
int
js
cs
mov
rcr
xlat
push
sbb
or
and
(bad)
jg
je
or
adc
fcomp
rol
dec
mov
loopne
in
stos
stc
movs
mov
lds
mov
mov
mov
pop
xor
iret
(bad)
imul
cmp
cmp
cdq
(bad)
dec
xchg
mov
jge
or
repz
xor
cs
test
push
push
sbb
addr16
xor
popf
outs
bound
sti
inc
sti
outs
mov
jecxz
outs
aas
push
xor
jecxz
pop
loop
in
rol
add
or
sbb
(bad)
cli
mov
leave
ins
jmp
xchg
in
sub
mov
cmp
cmp
sub
jle
xchg
call
sub
aad
ss
adc
jmp
dec
mov
jecxz
push
int3
mov
xor
push
mov
mul
scas
jne
or
mov
fld
sbb
xor
dec
xchg
sbb
mov
dec
jp
test
out
cmp
out
jb
into
fnstsw
lods
xchg
xor
jb
xor
and
(bad)
push
je
inc
push
test
and
xchg
fsubp
pop
in
aad
xchg
fstp
repnz
out
lods
sbb
stc
xchg
mov
repz
sub
ins
dec
ret
cmp
icebp
retf
add
mov
cli
movs
xor
sti
mov
sbb
sub
lea
jecxz
inc
inc
dec
popa
xor
add
pop
or
mov
adc
ins
adc
in
cmp
pop
and
xchg
fild
xchg
sbb
mov
pop
sbb
cmp
dec
cmp
xchg
addr16
inc
add
retf
mov
sar
fld
jb
mov
aas
hlt
pop
dec
and
inc
and
and
push
retf
dec
mov
mov
repnz
sub
xchg
xor
aas
test
in
and
cmp
popa
in
cmp
fst
addr16
call
add
cmc
test
inc
icebp
js
loopne
xchg
push
xchg
cmp
fadd
fld
add
(bad)
daa
or
test
pop
ret
xchg
mov
cmp
repz
in
lock
gs
popa
xor
inc
aad
rcl
mov
inc
lock
retf
mov
pop
pop
sub
push
out
or
xor
bound
faddp
mov
test
sbb
xchg
jp
mov
pop
cmp
popa
push
mov
outs
ins
sub
cmp
in
out
jecxz
adc
xchg
cli
int3
pop
fcom
push
jle
inc
xor
add
mov
popf
mov
outs
les
push
es
test
dec
mov
stos
cmps
(bad)
mov
push
and
or
in
mov
jnp
in
mov
dec
xor
mov
adc
xchg
clc
cmp
rol
aas
cmp
jo
neg
pop
jg
int3
pop
and
into
push
xor
into
jne
retf
mov
push
mov
repnz
xchg
int
(bad)
cmc
cli
(bad)
mov
ins
inc
imul
lea
das
inc
jno
sar
jb
pop
sti
das
sub
push
jno
cmps
mov
das
mov
sub
or
call
movs
fidivr
jmp
sbb
cdq
mov
jo
dec
(bad)
lahf
out
and
std
and
and
in
mov
push
adc
mov
cdq
xchg
cli
xchg
jmp
lea
push
dec
aad
mov
xchg
dec
mov
push
mov
push
sbb
xchg
aas
jle
outs
movs
xchg
mov
aam
or
inc
pop
add
mov
or
das
jns
push
mov
pop
inc
or
xchg
mov
inc
inc
mov
jns
mov
daa
mov
frstor
adc
fwait
lahf
push
loopne
mov
cmp
cdq
imul
and
xor
mov
test
inc
add
push
sahf
adc
sbb
das
xor
je
loope
sbb
pop
mov
(bad)
mov
sbb
jmp
ficom
adc
aas
imul
retf
mov
or
test
add
xchg
sub
xchg
movs
inc
cmps
dec
lods
and
push
mov
fmul
neg
mov
scas
sahf
push
out
dec
push
add
call
std
jmp
out
leave
jb
cmp
repz
push
sbb
inc
xor
xor
jg
pop
xor
les
std
cs
les
je
push
cmp
add
add
mov
xlat
ret
les
jbe
je
mov
stos
xchg
jge
sbb
inc
push
mov
jmp
push
loop
pop
inc
or
mov
jnp
ffreep
jo
jle
(bad)
xchg
and
call
xrelease
xchg
sub
dec
into
mov
pop
jne
scas
mov
sbb
mov
mov
adc
jg
add
dec
shl
call
sub
out
sbb
fbld
fwait
adc
iret
inc
rcl
fld
test
pop
fiadd
shl
pop
mov
sub
pop
cmp
js
neg
sub
jbe
enter
daa
sbb
ins
cdq
fwait
pusha
and
inc
jge
retf
ds
inc
(bad)
mov
sub
mov
fdiv
jmp
xchg
movs
adc
in
popf
movs
pusha
push
aas
or
dec
or
xor
pop
cmc
inc
shr
clc
mov
jae
pop
aaa
push
mov
sub
ret
adc
iret
(bad)
push
adc
fsub
enter
sbb
loop
retf
adc
mov
lds
shr
imul
repz
(bad)
lahf
jg
xor
cmp
jmp
and
scas
jmp
(bad)
jno
dec
dec
(bad)
bound
inc
ret
cmp
aad
mov
jp
add
pop
xchg
or
std
inc
push
retf
btr
cmps
cmp
(bad)
aam
pushf
mov
fstp
ja
mov
mov
(bad)
pop
fdiv
lds
inc
(bad)
push
xchg
jns
pop
iret
fs
add
pop
sub
push
test
adc
xchg
xor
add
push
ds
rol
idiv
test
retf
(bad)
push
out
inc
cmps
imul
fbld
rcr
cmc
push
or
jle
vpshufhw
push
retf
xchg
cmp
movs
push
push
xor
mov
dec
or
mov
dec
in
fcmovne
cmp
shl
std
cmps
xchg
sub
mov
test
pop
fnstsw
jecxz
push
imul
pushf
and
lahf
dec
adc
test
adc
pop
sahf
sbb
dec
fadd
add
mov
into
pop
std
test
and
out
test
scas
mov
nop
mov
popa
pop
(bad)
outs
repz
push
xchg
add
les
call
fistp
shr
outs
cmp
adc
cmp
xchg
mov
test
xchg
loopne
call
les
xor
lods
shl
lea
in
popa
mov
or
sub
inc
call
mov
xchg
xchg
ins
pop
or
push
pop
les
std
jmp
xor
xchg
repnz
fsubr
(bad)
leave
loopne
jmp
loop
xchg
or
dec
daa
lods
mov
in
addr16
in
das
inc
mov
pushf
pop
test
xor
bound
mov
data16
jmp
or
int
and
stc
daa
out
mov
fld
lods
cmp
je
xchg
dec
pop
dec
mov
loop
dec
jno
add
or
jle
stc
mov
xor
mov
inc
or
retf
aad
das
sbb
js
inc
inc
inc
pop
repnz
or
add
das
xchg
call
arpl
adc
inc
xchg
loopne
and
pop
pop
mov
(bad)
fucomip
pop
push
mov
pushf
push
rcl
rcl
sub
test
dec
(bad)
mov
pop
sub
cmp
add
outs
add
in
inc
or
or
and
xchg
pop
cwde
and
cmp
inc
mov
pop
mov
jl
mov
bound
mov
mov
xor
mov
mov
adc
mov
fwait
addr16
push
mov
stos
mov
cmp
inc
sub
scas
pop
sub
mov
pop
push
std
imul
xchg
dec
jecxz
dec
sbb
pop
fisubr
mov
cli
mov
rol
aad
sub
ds
(bad)
dec
jne
mov
xor
in
sbb
in
add
sub
sub
adc
hlt
pop
adc
jae
cwde
add
sbb
jnp
retf
fnstenv
sahf
mov
jo
leave
and
fwait
push
gs
into
imul
fwait
pop
cmp
movs
inc
push
pop
aam
(bad)
push
sahf
retf
icebp
cmp
(bad)
cld
cmp
inc
pop
arpl
xor
mov
ins
in
(bad)
shl
bound
mov
jl
xor
or
xor
aad
pop
push
sub
(bad)
fidiv
push
lahf
jmp
in
add
mov
jno
(bad)
pop
fmul
test
shr
dec
cmps
xor
arpl
adc
fmul
loopne
and
aam
push
fsubr
fdiv
mov
mov
add
ret
cmps
fs
cs
aad
pop
mov
imul
rol
es
dec
out
sub
push
fwait
aaa
rcr
aam
icebp
pop
inc
leave
lahf
push
loopne
leave
inc
int3
xchg
lods
imul
push
ds
mov
fld
loopne
repnz
pop
cmp
add
or
push
out
cmp
fcomp
pop
add
cwde
scas
cmc
test
imul
repz
mov
adc
push
movs
dec
inc
adc
mov
push
sbb
outs
pop
mov
(bad)
fld
lahf
sbb
adc
mov
xchg
xchg
mov
mov
sub
add
aas
sbb
imul
dec
sub
pop
inc
(bad)
clc
out
sub
cmp
pop
pushf
in
mov
dec
or
jp
aaa
xchg
fdivr
push
scas
stos
mov
in
mov
pop
dec
xchg
and
cmp
jle
je
mov
cmp
push
repnz
mov
in
aam
imul
test
ret
retf
xor
dec
inc
dec
mov
jmp
loop
xchg
call
ja
inc
(bad)
shl
mov
pop
popf
add
mov
sbb
dec
mov
xor
repnz
pop
data16
mov
jne
in
xor
(bad)
and
ins
adc
cdq
mov
mov
adc
or
dec
addr16
aaa
int3
les
sahf
sub
stos
xor
add
lods
inc
jmp
cwde
movs
fiadd
xchg
cmp
clc
adc
hlt
jne
sbb
fdivr
fst
mov
mov
and
mov
dec
jp
push
jae
call
jecxz
dec
pop
inc
jnp
es
mov
push
mov
cs
icebp
fistp
loopne
xor
cwde
out
add
push
cmc
xor
cli
cmp
popa
push
push
repnz
rcr
ins
or
popf
inc
push
retf
rcr
pop
xor
inc
add
mov
jne
rep
dec
fsubrp
ror
cmps
fsub
stos
cmp
or
test
push
repz
or
push
xchg
push
rcr
and
lock
mov
cmp
jno
fstp
mul
sbb
das
inc
cli
cld
outs
jae
in
in
push
movs
cmc
out
pop
ror
lds
add
and
call
(bad)
(bad)
popa
dec
imul
lods
popa
stos
jg
jp
mov
inc
ret
xchg
(bad)
inc
lods
jns
pop
aas
dec
pop
jecxz
push
inc
xchg
ja
pop
cmp
dec
enter
pusha
jmp
and
mov
out
jmp
out
shr
jp
xor
cmps
(bad)
jmp
popf
and
mov
adc
xchg
sbb
sbb
test
in
jl
aad
retf
mov
pusha
add
dec
cwde
xchg
xchg
push
xchg
pop
mov
fiadd
pop
adc
out
sbb
push
jns
jmp
pop
pop
aaa
leave
cs
icebp
cmp
push
mov
push
rol
pusha
adc
and
dec
and
push
cmp
cmps
(bad)
push
and
test
fnstenv
xor
inc
leave
aaa
push
loop
jmp
out
cwde
push
inc
push
stos
xor
dec
add
loop
aas
push
push
aam
push
add
shr
in
push
inc
xor
mov
cmp
dec
pushf
jecxz
cmps
sbb
or
or
arpl
cmp
sbb
clc
(bad)
cli
ins
les
push
call
(bad)
inc
xchg
push
xchg
inc
inc
dec
ror
jl
pop
jo
sbb
xchg
lea
pop
fstp
inc
imul
cmps
sub
arpl
sbb
icebp
pop
in
or
add
adc
cmp
aas
mov
mov
cld
lahf
int3
sub
mov
cmp
call
push
sbb
inc
jne
mov
idiv
sub
jge
mov
aam
sub
in
add
cmp
es
cmp
add
nop
dec
sbb
sub
cmp
mov
jmp
clc
in
mov
and
xchg
mov
dec
inc
into
out
and
mov
mov
mov
cmp
jno
cwde
push
and
test
sbb
loope
dec
mov
xchg
test
mov
std
dec
mov
enter
xchg
int
mov
jmp
movs
loop
out
iret
stos
aas
mov
xchg
adc
mov
mov
out
cmc
jb
in
ins
mov
cdq
push
jmp
and
xchg
movs
jo
in
adc
and
mov
add
mov
add
ds
mov
dec
xchg
mov
jno
sahf
sbb
cmp
xchg
popf
sub
push
fwait
and
adc
stos
inc
sub
inc
je
rcr
mov
(bad)
mov
pop
aaa
push
cmp
pop
sub
adc
ss
pushf
mov
ja
inc
push
cwde
test
adc
sbb
cmps
cwde
push
lahf
mov
sub
jns
stc
rcr
cld
xlat
sbb
cmp
ins
xchg
ins
out
adc
fucomp
sub
mov
fnstcw
add
xchg
cdq
fmul
inc
aaa
call
add
or
sub
mov
(bad)
push
jge
mov
mov
dec
(bad)
jne
arpl
jbe
fdiv
in
xchg
call
jl
mov
mov
mov
int
std
pop
movs
imul
outs
in
out
inc
fs
scas
push
lock
(bad)
call
inc
mov
cmp
hlt
pop
shr
fwait
into
add
cs
test
mov
dec
and
and
jmp
pop
shl
or
addr16
mov
mov
imul
inc
enter
fs
pop
out
in
push
sahf
ja
fdivr
and
addr16
xor
fwait
(bad)
out
xor
add
jne
sbb
add
jle
imul
cmp
sahf
cdq
mov
not
out
or
pop
retf
xor
stc
mov
push
xor
mov
mov
or
dec
adc
into
test
int
shl
mov
mov
fwait
mov
shr
push
sbb
scas
lds
idiv
lods
int3
aas
arpl
xchg
mov
pop
jae
lock
jecxz
outs
xor
arpl
call
xlat
enter
inc
pop
jb
int
push
repz
fwait
imul
xor
lahf
push
inc
xor
jo
stos
mov
out
inc
js
ret
lods
and
and
xor
outs
stos
push
das
xor
lea
es
or
and
test
xchg
pop
shr
and
pop
imul
es
jno
jle
pop
cdq
sbb
adc
adc
(bad)
mov
rcl
cdq
pop
addr16
inc
loop
push
outs
inc
fisub
mov
(bad)
aas
ss
sbb
ds
mov
ins
pop
stc
data16
loope
inc
push
inc
jg
shr
setno
jno
lahf
jns
std
pop
push
mov
pop
pop
dec
test
push
out
loope
imul
out
imul
dec
xchg
es
push
mov
xchg
out
jno
push
mov
hlt
mov
push
adc
fsubp
mov
cdq
shr
mov
add
push
mov
ret
inc
cmp
xchg
or
inc
stos
(bad)
bound
add
cwde
fwait
push
test
aad
fnstenv
mov
push
xchg
cwde
movs
fcom
jns
sub
sub
xchg
ins
xchg
mov
sbb
ja
add
jmp
or
inc
mov
add
xchg
mov
xor
outs
cld
repz
pop
ja
pop
ins
(bad)
stc
stc
aam
push
outs
retf
retf
mov
xchg
cmp
xor
xchg
retf
xchg
xor
sbb
ret
jno
cld
mov
adc
cdq
in
push
ins
pop
and
out
mov
loop
inc
and
in
xchg
jbe
jge
xchg
call
dec
cmp
imul
jmp
popf
(bad)
or
jb
dec
dec
movs
mov
push
mov
mov
(bad)
push
pop
inc
loop
call
dec
shr
jb
cmp
adc
xor
adc
jae
mov
mov
scas
cdq
gs
outs
sub
jnp
sar
mov
sahf
push
xor
in
jge
movs
jns
inc
jae
stc
pop
adc
scas
xor
sbb
mov
mov
xchg
cmc
push
repz
pop
pop
in
lahf
xor
imul
push
pop
fcomp
leave
or
pop
sub
dec
pop
xchg
sar
neg
shr
mov
jb
jae
sub
dec
fwait
mov
(bad)
mov
gs
loopne
or
jne
or
sahf
or
sbb
test
jmp
cs
xor
push
pushw
repnz
push
jg
sbb
out
pop
mov
aas
jns
mov
fst
pop
xor
xchg
retf
pop
xor
ins
jns
mov
in
sbb
fst
inc
inc
adc
xchg
and
pop
cmc
cld
arpl
mov
adc
shl
jae
cwde
sbb
jmp
add
adc
(bad)
push
cmc
xor
push
xchg
push
ret
int3
dec
dec
stc
mov
cwde
ds
movs
je
ds
cmp
aas
(bad)
rol
cmp
jmp
dec
sbb
adc
aad
out
scas
and
cmps
push
test
in
dec
(bad)
sub
psrld
punpcklwd
push
fadd
push
or
iret
leave
sub
mov
sbb
and
sbb
(bad)
fsub
xor
push
mov
data16
sub
shr
into
aas
dec
and
movs
cmp
mov
(bad)
lods
imul
dec
xor
out
imul
test
jo
ins
clc
xchg
test
pop
outs
lea
in
je
add
shr
inc
gs
movs
and
ins
dec
cmp
imul
pop
add
adc
mov
aad
int3
cmps
cmc
pop
imul
xchg
jbe
rcr
cdq
rcr
ins
icebp
mov
repnz
push
fcomp
sar
mov
push
inc
push
movs
push
out
repnz
pusha
inc
adc
stc
sub
mov
call
loope
jb
repz
cmp
adc
cmp
sbb
xor
sbb
add
cld
rol
ja
jmp
mov
(bad)
imul
daa
out
sahf
jecxz
lods
adc
sub
dec
push
sahf
push
mov
pop
mov
cmp
(bad)
rcl
icebp
mov
js
cli
sub
sbb
adc
stc
dec
push
xchg
xor
shl
outs
pop
ins
retf
cmp
aad
push
out
aas
rol
jmp
mov
pop
xchg
xchg
mov
sub
fdivr
in
xlat
stos
pop
pusha
xlat
pop
fstp
dec
or
xchg
push
shl
xchg
or
xor
sbb
outs
adc
stc
mov
xor
cld
(bad)
jmp
xchg
mov
add
ins
frstor
mov
jg
sbb
pusha
adc
int3
sbb
nop
aaa
mov
stc
out
fs
jmp
cmp
ja
cwde
call
ins
mov
(bad)
sahf
retf
xchg
jb
sub
cmp
cmc
mov
mov
popa
mov
and
in
add
leave
pop
mov
ret
mov
sub
inc
inc
enter
(bad)
jmp
paddsb
in
jnp
adc
xchg
cmp
mov
test
push
cli
push
enter
xchg
jo
(bad)
adc
mov
jle
push
inc
pop
mov
sbb
or
mov
imul
and
jno
xlat
mov
fadd
ret
xor
cmp
mov
ret
inc
mov
push
mov
loopne
pop
dec
inc
cmp
xchg
ret
nop
adc
pop
mov
cmp
out
in
hlt
inc
sbb
mul
cmp
adc
sti
nop
mov
pop
fwait
or
add
out
jne
mov
or
ins
test
sbb
sub
loop
call
sbb
or
loop
cmc
xlat
loop
cli
out
cmps
loope
mov
lahf
sub
sub
mov
shr
jg
mov
cli
movs
mov
sub
cld
xchg
ror
xchg
imul
out
cmps
call
loopne
cmp
mov
inc
push
pop
stc
adc
sbb
xor
cmps
test
pop
jg
sahf
iret
sub
(bad)
mov
(bad)
xchg
test
or
xchg
jle
push
stc
mov
jae
sbb
or
inc
lahf
stos
or
test
or
das
sub
sub
fld
jbe
les
iret
xlat
cmp
dec
jp
mov
sub
add
pop
movs
and
add
ret
mov
adc
pop
mov
jmp
xlat
xor
xchg
ror
sub
adc
inc
fnsave
and
and
(bad)
jmp
test
int3
outs
ins
mov
xchg
jo
cmps
mov
bound
mov
stc
xchg
sbb
add
mov
sbb
sbb
out
jo
xor
shl
jnp
arpl
arpl
out
inc
je
pop
shl
std
mov
push
fiadd
jle
mov
pop
mov
jmp
outs
mov
in
sbb
mov
xchg
xor
sbb
push
add
shl
jno
popf
mov
addr16
loopne
ret
lahf
lods
clc
adc
fild
xchg
out
push
in
sub
xor
cli
inc
jl
mov
fdiv
cdq
jnp
adc
add
xchg
fisubr
add
sbb
cli
cmps
adc
in
cmp
push
pop
mov
cmp
rol
or
push
cs
aam
xchg
mov
inc
icebp
jnp
sub
aam
or
mov
cmp
stos
and
mov
jbe
cwde
xor
ror
dec
and
and
stc
mov
arpl
icebp
rcl
add
push
add
inc
mov
and
pop
ins
cmps
scas
in
mul
cs
jge
mov
or
dec
sub
xchg
and
jg
xchg
push
mov
aas
add
jno
test
dec
xchg
inc
daa
fiadd
inc
inc
push
add
and
(bad)
popf
cmp
mov
mov
sahf
outs
sub
xchg
mov
add
mov
repz
ds
pusha
sahf
pop
adc
pop
mov
test
rcr
lock
fwait
xchg
pop
pop
lds
test
cwde
xlat
xchg
push
sbb
jmp
dec
adc
mov
ins
in
sub
dec
sar
call
sti
and
not
xchg
add
cmc
aam
ins
xchg
and
jns
sbb
dec
(bad)
jmp
leave
pusha
mov
inc
jg
pop
outs
imul
ret
jmp
or
mov
fwait
jg
dec
dec
outs
iret
push
es
jg
fnstenv
mov
push
iret
shl
adc
or
sub
mov
adc
push
mov
(bad)
loopne
cmp
stc
dec
mov
ret
xadd
dec
pop
or
and
nop
sbb
rcr
xchg
mov
xchg
mov
call
sbb
into
fstp
adc
push
sbb
pop
inc
daa
or
push
clc
(bad)
mov
inc
cmc
cmp
sub
adc
mov
cwde
sbb
push
out
mov
ud1
inc
das
jp
cmps
mov
lods
xchg
jl
cmp
stos
mov
mov
into
daa
imul
fld
inc
add
sbb
lods
lds
pushf
lock
es
mov
xor
aad
dec
push
jmp
ins
outs
scas
pop
xchg
stos
mov
ins
iret
(bad)
retf
xor
jl
mov
xchg
js
retf
cmps
js
sub
mov
xchg
jmp
ficom
jno
mov
test
in
(bad)
rcr
mov
scas
hlt
or
sti
popf
dec
pop
add
aas
jo
outs
mov
not
ret
mov
ret
clc
adc
fisttp
loope
cmps
(bad)
retf
fldcw
repz
test
jno
stc
jg
mov
add
mov
mov
fcom
int3
push
out
fcomp
pop
jl
jle
or
in
pop
sub
mov
add
mov
and
dec
mov
xor
fbld
icebp
push
mov
inc
into
lahf
push
pop
pop
add
pop
cld
outs
lods
ficomp
and
adc
cmp
fistp
mov
inc
out
retf
push
outs
sub
mov
sbb
push
movs
ins
add
mov
and
imul
sub
pop
jno
push
jnp
fisttp
mov
stos
pop
out
test
ss
fsub
loopne
or
ja
xor
mov
sbb
xchg
dec
sub
mov
mov
sti
jmp
mov
lock
mov
rcr
aaa
(bad)
je
mov
shr
daa
fiadd
push
xchg
add
stos
add
jl
inc
push
add
test
add
dec
popf
scas
mov
or
dec
push
inc
dec
jo
in
fisub
stos
sub
push
aam
in
dec
repnz
lods
out
dec
setnp
sub
out
sar
sar
(bad)
jne
fld
(bad)
bound
fld
xchg
pop
test
pop
sub
(bad)
shl
dec
sbb
gs
scas
ret
and
push
jmp
imul
(bad)
ret
xchg
or
popa
punpckhbw
push
ins
xor
cmp
jle
pop
fdivr
dec
in
mov
fcmovu
movs
xchg
sub
xor
(bad)
retf
int
jmp
lods
mov
data16
loope
(bad)
out
mov
sub
out
ds
data16
adc
inc
push
xor
pop
xlat
push
jae
(bad)
jmp
ins
cmc
lahf
jno
inc
cli
jnp
cmp
xor
ret
mov
fadd
stc
ss
jne
pop
inc
push
cmp
popa
xchg
xchg
(bad)
lock
lds
sub
mov
clc
popf
sub
es
sbb
fild
lods
push
bswap
retf
lods
ret
rol
jnp
jae
arpl
cli
dec
sar
lea
mov
shl
pop
add
push
and
push
pop
(bad)
frstor
pop
out
sahf
sbb
jne
add
xchg
into
lock
cmc
pop
ds
repnz
add
lds
add
xor
in
dec
xor
pop
out
pop
sar
sbb
mov
push
and
arpl
pop
clc
and
sbb
mov
cli
mov
push
(bad)
push
push
fucom
movs
dec
pop
pop
aad
cmp
pop
cld
(bad)
clc
out
adc
test
test
imul
cmc
adc
(bad)
sbb
or
test
(bad)
xlat
mov
cmp
cdq
or
(bad)
dec
cmp
add
push
add
dec
jmp
xchg
cdq
in
inc
mov
push
fimul
addr16
xor
pop
(bad)
mov
or
sbb
sbb
mov
(bad)
aaa
pop
jno
vpshaw
jb
push
sub
call
jmp
imul
call
mov
repz
inc
push
and
mov
gs
xlat
mov
js
fcom
arpl
inc
xor
dec
xchg
(bad)
cmp
mov
cmps
push
xchg
xlat
paddq
push
(bad)
jne
in
fisubr
enter
cs
pop
and
mov
lods
mov
cmp
push
lea
pop
add
xchg
mov
(bad)
jb
sub
sbb
xlat
sub
cdq
sahf
clc
out
push
div
push
xlat
(bad)
icebp
test
dec
cdq
sar
push
and
add
and
cmp
into
pushf
ficom
fld
cs
aaa
mov
sub
sbb
mov
sbb
ror
jp
lods
cmp
add
(bad)
xor
ins
and
dec
fld
sub
inc
stos
iret
pop
sti
mov
test
ds
inc
pop
out
jmp
daa
psubusb
add
aas
sub
mov
movs
jae
adc
inc
or
lock
lea
(bad)
cmps
cmc
out
lods
(bad)
mov
fld
sti
pusha
cmp
push
or
call
stos
and
ins
pusha
sub
add
retf
push
dec
test
or
inc
sbb
cdq
add
aam
add
ret
pop
ja
dec
xchg
mov
cli
data16
xor
outs
punpcklwd
sbb
popf
jmp
sahf
inc
(bad)
xchg
mov
stos
mov
xor
sub
test
adc
mov
mov
push
inc
xchg
adc
pusha
add
mov
cdq
or
(bad)
arpl
mov
sbb
jecxz
mov
mov
dec
xchg
add
addr16
push
inc
icebp
pop
pop
jb
in
mov
cmps
sti
loope
into
aaa
test
push
stos
xor
mov
xchg
inc
pushf
fadd
pop
test
or
add
sub
push
sahf
out
(bad)
jg
sub
inc
test
jle
and
jecxz
(bad)
sbb
in
sti
jb
fisttp
cwde
inc
sbb
pusha
push
aas
push
pop
sub
repnz
psubq
push
cmp
lock
mov
xor
xchg
leave
push
inc
mov
pop
repnz
popa
pop
and
repz
xor
add
retf
(bad)
jle
sub
lods
xchg
scas
add
fdiv
popf
jmp
loop
or
mov
inc
sbb
jmp
mov
lods
aas
dec
cmp
icebp
jbe
test
add
add
shl
sub
xchg
xor
cmps
aas
aaa
add
jg
sub
push
das
jmp
gs
dec
and
mov
pop
push
jl
ss
xchg
or
div
mov
mov
or
js
add
cmps
ficom
cmc
inc
push
ins
out
sub
cmp
or
outs
pop
pop
js
sbb
js
pop
pop
or
and
pop
stos
cld
cmp
push
lods
gs
jle
bound
scas
sbb
sbb
add
dec
repz
mov
adc
(bad)
or
mov
inc
jae
xchg
mov
arpl
fiadd
xor
jnp
cmp
mov
das
cmc
cli
jns
fimul
ins
or
inc
jecxz
in
std
rcr
jle
test
(bad)
inc
scas
push
repz
test
sar
xor
add
mov
mov
xor
jle
add
or
pop
add
iret
mov
jmp
inc
mov
dec
mov
repnz
cmp
test
ja
pop
inc
push
dec
out
adc
mov
jae
adc
mov
inc
or
ins
je
dec
adc
jae
pop
fild
shr
arpl
or
rcr
jnp
scas
lock
adc
jbe
jg
push
ja
adc
inc
inc
leave
cmp
pop
js
movs
das
outs
sub
stc
mov
outs
stos
pusha
adc
mov
push
scas
retf
lds
mov
adc
mov
stos
loopne
dec
je
inc
stos
cli
das
mov
outs
jnp
sbb
xor
retf
or
out
inc
mov
ds
bound
jecxz
loop
retf
dec
dec
cmp
clc
xchg
sbb
mov
pop
outs
retf
mov
loope
cld
call
xor
test
and
lods
sub
push
mov
push
or
fmul
fisttp
loopne
fdiv
das
push
mov
jne
addr16
call
lock
hlt
add
pop
fwait
rcr
std
xlat
dec
out
mov
sbb
push
dec
lods
popf
xchg
test
jae
sbb
push
pop
cld
es
mov
lds
xchg
sub
xor
xor
nop
into
mov
lea
xchg
(bad)
cmp
cs
iret
js
bound
(bad)
fiadd
cmp
add
mov
cdq
inc
sbb
pop
sbb
push
mov
fsubrp
xor
stos
ret
pushf
sub
out
out
xchg
inc
daa
push
xor
mov
ret
mov
cmp
xchg
imul
fdivr
dec
mov
mov
push
dec
scas
mov
or
push
lods
ss
and
mov
xor
aaa
xlat
out
retf
in
cld
xor
addr16
sbb
inc
data16
(bad)
sbb
inc
lea
pop
push
je
cmps
sbb
imul
inc
cmp
push
daa
(bad)
test
fimul
push
or
mov
xchg
stos
gs
mov
rdtsc
jnp
addr16
popf
fwait
iret
test
inc
jno
std
add
fdivr
call
ret
cmp
pop
lods
xchg
arpl
shl
popf
sti
pop
cmps
ins
add
scas
adc
add
lods
mov
test
int3
mov
scas
aam
pcmpgtd
shl
fsincos
xlat
retf
test
cmp
or
mov
aam
ins
clc
cmps
mov
pop
mul
ins
dec
mov
sahf
int
daa
and
jno
sub
div
add
gs
mov
jge
int3
mov
sub
ret
ret
nop
pop
sub
jns
cmp
fs
std
mov
fist
scas
and
ss
retf
dec
cli
mov
add
jnp
jno
sbb
in
loop
inc
mov
rcl
mov
jp
ja
cmp
sbb
mov
mov
cs
pop
aas
mov
push
aaa
out
push
cmp
push
dec
out
pop
pop
mov
call
jns
ins
arpl
add
add
mov
imul
xor
cmp
retf
jbe
jmp
(bad)
jl
mov
cmovbe
lods
es
sub
mov
pop
test
hlt
sub
jnp
add
clc
add
and
jno
jns
lods
xchg
pop
or
jae
pop
push
retf
sbb
inc
sbb
dec
or
repz
ss
sub
mov
mov
xchg
sub
xchg
xchg
xchg
aam
retf
mov
imul
iret
in
mov
inc
xchg
aas
jne
adc
xor
xchg
fwait
sahf
jmp
out
or
cmp
pop
fcmovnbe
xchg
xchg
scas
jl
mov
in
ss
xchg
or
daa
pop
mov
shl
push
out
jecxz
bswap
xchg
fidiv
stos
xchg
xchg
xor
outs
mov
pop
jl
jb
sub
test
dec
dec
test
xchg
(bad)
or
push
jo
loope
cmps
mov
cld
or
scas
mov
add
arpl
cli
mov
shr
cwde
stc
repz
jno
cdq
inc
cdq
sub
test
mov
pop
sbb
cmp
dec
aad
jbe
dec
shl
loopne
lods
push
mov
cmp
or
arpl
mov
hlt
inc
xchg
push
mov
sahf
xchg
or
ja
jle
xchg
xor
jle
inc
leave
sub
jl
push
jo
loope
nop
and
sbb
int
sbb
and
push
cld
mov
pop
push
shr
push
icebp
xchg
outs
xchg
mov
add
(bad)
pop
psubsw
cmps
repz
cmps
and
cmp
ror
frstor
aam
xchg
mov
xchg
mov
jns
cdq
retf
rcl
xchg
mov
xor
(bad)
jecxz
int
ss
jns
retf
fcom
sahf
aad
mov
nop
sub
sti
mov
or
push
adc
in
(bad)
cmp
gs
dec
or
out
fs
bts
or
(bad)
retf
mov
hlt
fisubr
pop
cwde
inc
mov
sbb
cwde
pop
inc
xchg
scas
or
mov
(bad)
mov
cwde
(bad)
bndldx
adc
aam
inc
std
fadd
jns
test
add
mov
(bad)
jg
stos
fmulp
xchg
inc
or
xchg
mov
(bad)
into
sub
out
movs
fadd
adc
mov
xchg
pop
outs
mov
jae
sbb
loopne
cli
push
pop
loope
push
inc
pop
fcomip
sbb
mov
push
repz
(bad)
ret
out
add
xchg
push
xchg
in
out
ins
dec
push
cmp
js
mov
popa
ret
sbb
cld
(bad)
jmp
dec
mov
xchg
std
cwde
sub
xchg
(bad)
push
jne
xchg
retf
sbb
cmps
dec
jmp
fdivr
jne
pushf
push
xor
adc
popf
jg
add
pushf
xchg
aaa
add
enter
mul
add
ins
add
sbb
cmp
pop
sub
out
out
mov
xchg
jp
(bad)
or
ds
xchg
iret
sub
jno
cmp
add
adc
repnz
imul
mov
sub
mov
and
je
push
cmp
add
arpl
pusha
fs
jl
(bad)
out
adc
sub
daa
push
mov
adc
push
mov
mov
int
repz
and
test
mov
inc
or
cli
mov
das
jl
dec
icebp
jae
ret
jns
mov
mov
pop
push
mov
pop
jb
lock
fiadd
in
ror
xchg
arpl
ret
xor
les
repnz
jns
sub
xor
or
xchg
shl
pop
aad
adc
sbb
mov
mov
inc
sbb
inc
inc
dec
std
cmps
test
or
push
mov
lods
or
(bad)
out
loope
aas
inc
mov
stc
cmps
test
pop
cmp
push
adc
cmp
dec
xchg
and
ud1
arpl
xchg
lds
movs
and
push
mov
mov
adc
scas
scas
pushf
pop
dec
in
rep
add
and
xor
jne
or
or
push
adc
mov
add
and
mov
je
loope
pusha
outs
mov
xlat
std
push
jmp
aas
xor
mov
cli
xlat
lea
xchg
and
xchg
ss
push
sbb
outs
mov
test
xchg
sub
cdq
or
es
mov
add
jnp
xchg
or
sahf
pushf
test
scas
call
imul
or
cwde
fdivr
inc
imul
mov
pop
dec
push
mov
test
push
sbb
shl
loop
xchg
out
push
(bad)
ret
stos
mov
jl
imul
jmp
add
dec
dec
nop
inc
mov
xchg
mov
icebp
push
adc
mov
pop
or
inc
jge
cmp
dec
push
pop
pop
push
mov
clc
dec
mov
cmps
(bad)
das
mov
out
xchg
mov
add
mov
mov
addr16
mov
cmp
mov
mov
mov
push
pop
repz
arpl
shr
test
cdq
cwde
mov
ins
mov
fcomp
repz
mov
call
mov
lds
icebp
cdq
push
pop
mov
in
movs
mov
addr16
inc
data16
cs
sub
adc
mov
cmp
ja
hlt
xlat
test
fwait
adc
mov
dec
cmc
dec
gs
addr16
mov
ret
cwde
push
xlat
sbb
aam
xor
xor
outs
jecxz
enter
dec
push
and
jecxz
jecxz
test
loop
sub
sub
dec
pop
xor
push
out
or
mov
xchg
xchg
pop
aad
rcr
fbld
or
fcom
xor
int
cmp
xor
ss
mov
pop
or
and
(bad)
fstp
push
das
add
adc
int3
xor
mov
pop
mov
xor
je
cmp
rcr
push
scas
dec
jnp
movs
push
mov
xchg
and
sbb
shl
jmp
jbe
jo
(bad)
in
or
pop
pop
fild
bound
scas
or
pusha
rol
dec
mov
or
lods
push
xchg
dec
call
dec
(bad)
jne
fcmovb
jmp
iret
push
retf
stc
(bad)
and
inc
mov
pop
shl
inc
dec
pop
cmp
daa
aas
add
movs
dec
adc
nop
in
mov
hlt
or
mov
das
scas
test
lods
pop
popf
fistp
ret
es
xchg
lds
xchg
inc
push
fdiv
pop
cmp
add
ror
sti
pop
scas
enter
adc
ret
sbb
push
leave
loope
mov
out
sub
mov
mov
xor
pop
into
and
xchg
mov
xchg
pop
call
mov
and
fcmovnu
test
inc
les
movs
xor
xor
xor
mov
mov
sahf
faddp
mov
pop
xchg
ss
stc
shr
sahf
pop
pop
pop
xchg
in
xchg
add
loope
and
sbb
fmul
xchg
mov
xor
pusha
ret
sub
movs
mov
sbb
inc
bound
out
cmp
rcr
mov
xor
or
jmp
or
push
cmp
test
mov
or
shr
sub
inc
and
jno
and
call
das
(bad)
pusha
movs
pop
popa
int
mov
push
mov
ins
pop
push
lods
sub
mov
shl
mov
push
popf
out
(bad)
in
sub
mov
add
add
sbb
fldcw
cmp
inc
sbb
sbb
xor
xor
dec
inc
movs
call
cdq
jne
int3
xchg
adc
cli
dec
sar
imul
test
fadd
fistp
pop
adc
das
je
fwait
leave
fild
inc
adc
icebp
sbb
xchg
in
daa
(bad)
xor
cmc
stc
sub
or
or
cmps
test
leave
pop
sub
mov
add
xor
push
and
adc
push
imul
jge
jle
jae
mov
jp
mov
push
pop
xchg
mov
(bad)
add
rcl
push
xlat
popa
inc
add
adc
pop
pop
cmps
(bad)
mov
cmps
cmc
pop
(bad)
rcr
adc
inc
test
cmp
and
mov
xor
or
iret
push
inc
out
stos
xor
lea
aam
fist
or
loope
mov
push
fld
dec
mov
mov
sti
pop
pop
push
sbb
(bad)
pop
jne
xchg
or
push
das
and
outs
mov
add
repz
dec
jmp
mov
push
xlat
ret
inc
sar
push
out
out
pop
sub
test
push
sbb
dec
imul
je
or
sub
and
lods
xchg
cs
or
je
mov
add
jge
or
jl
mov
adc
lods
in
xchg
dec
sbb
pop
dec
adc
les
(bad)
iret
stc
sbb
imul
(bad)
adc
mov
xor
sbb
jmp
add
icebp
inc
stc
inc
pop
pop
jl
packssdw
int3
clc
adc
out
cli
mov
pop
cs
cwde
or
inc
push
test
inc
xchg
mov
jbe
shl
jb
push
add
loope
test
out
cmp
xor
adc
fs
lods
loopne
out
aaa
xor
in
cmp
call
cmp
dec
loopne
into
into
movs
push
jge
add
dec
xor
sbb
lds
push
or
xchg
mov
lahf
pop
jns
in
dec
and
adc
js
cmp
fild
mov
(bad)
retf
adc
xor
xor
out
dec
js
ins
test
leave
stc
cs
sbb
sbb
dec
mov
jno
rcr
scas
mov
xchg
jge
adc
mov
cwde
das
jns
xchg
dec
jge
mov
sar
repnz
mov
clc
cmp
cmps
loope
sub
push
add
cmp
xor
push
dec
dec
cmp
arpl
aad
scas
popf
push
ja
iret
jge
lock
inc
push
adc
sti
mov
push
mov
popa
and
lods
(bad)
mov
sub
neg
and
cwde
in
dec
xchg
or
sub
adc
fcomp
iret
and
idiv
test
pop
repz
jbe
mov
retf
xor
enter
sub
dec
bound
mov
push
stc
mov
push
xlat
mov
mul
mov
loop
jo
movs
retf
xlat
push
mov
in
jmp
dec
cwde
mov
int3
mov
push
test
movs
push
(bad)
repnz
ja
mov
mov
ret
cmps
push
jmp
repz
sbb
repz
int
cmp
dec
dec
inc
pop
jmp
sbb
xchg
inc
cmp
mov
std
lea
aaa
push
or
xchg
adc
pop
xchg
adc
bound
xor
scas
imul
cmp
cmp
mov
sbb
sbb
sbb
inc
inc
cmp
sbb
daa
push
inc
jl
jns
leave
test
mov
retf
sbb
mov
or
pop
jae
or
(bad)
jle
(bad)
mov
mov
fidiv
inc
adc
jp
nop
xchg
pop
xchg
call
ja
dec
(bad)
test
push
and
ret
xchg
fistp
inc
retf
out
cld
loope
xchg
loop
xacquire
or
aaa
(bad)
cld
aad
sub
test
xchg
icebp
out
out
push
adc
out
adc
jecxz
sub
sbb
xor
loop
fmul
mov
and
dec
ret
rcr
add
sbb
and
cmps
ja
test
pop
sahf
cli
and
mov
sub
cld
(bad)
sti
in
xor
jg
in
outs
mov
push
sub
mov
xchg
out
cmp
fs
pop
aam
mov
cmp
cmp
mov
xchg
push
and
xchg
pop
add
mov
es
adc
sub
pop
cmp
retf
cmp
lods
lods
clc
and
inc
adc
push
in
push
or
arpl
push
dec
xor
pop
mov
mov
daa
stos
aad
test
inc
push
xor
adc
sbb
dec
pop
into
iret
jae
shl
movs
dec
or
sub
sub
lods
popf
rcr
mov
movs
xor
loopne
xchg
hlt
add
sub
fiadd
jmp
mov
jmp
mov
add
sti
push
jae
fbld
jbe
lods
cmp
mov
xor
jns
pop
hlt
clc
outs
cdq
lds
and
adc
fsubr
xchg
mov
test
mov
pop
pop
loopne
mov
cmp
add
aaa
cmp
pop
(bad)
mov
jge
loop
sbb
jo
mov
mov
jnp
sbb
push
not
sar
mov
cmp
fwait
arpl
sub
ret
or
pop
loope
xchg
mov
jle
or
setp
int
and
bound
sahf
push
lgs
jmp
and
into
imul
test
or
inc
jae
pop
sub
dec
test
cmp
xchg
mov
in
adc
dec
sub
adc
fbstp
xor
or
lods
pop
mov
sbb
xor
jge
push
fistp
and
mov
aaa
cmp
in
adc
or
sbb
imul
gs
pop
cmp
imul
and
scas
mov
dec
stos
mov
scas
cmp
xchg
sub
ds
mov
pop
out
cmp
jg
or
iret
sub
cmps
jmp
daa
mov
cmp
in
xchg
fiadd
int
pop
mov
lods
and
xor
mov
jne
inc
sahf
add
icebp
or
cmp
in
shr
call
sbb
aaa
mov
loop
push
pop
xchg
sub
mov
push
pop
cmp
xlat
cmps
and
and
ret
or
jnp
cld
aam
or
clc
dec
fnstsw
cwde
jg
pop
cld
rcl
jmp
xor
inc
and
leave
mov
pop
jg
lds
xlat
stos
sub
daa
jbe
xchg
mov
add
lahf
ret
jge
xchg
cmp
cld
mov
jmp
mov
aad
out
mov
lahf
outs
and
pop
add
(bad)
jbe
in
xchg
(bad)
lods
movs
lods
add
jb
cmc
adc
js
jbe
xor
ins
popa
sub
sub
mov
(bad)
cmp
add
test
sbb
sub
ins
mov
pop
imul
iret
dec
mov
xchg
push
cmp
jp
test
push
dec
retf
jmp
cmp
mov
sbb
pop
fcmove
fcom
shl
dec
mov
call
jle
aad
sub
test
in
repnz
sub
adc
push
mov
sub
aad
mov
pop
popf
xchg
adc
push
sub
cmps
stos
push
(bad)
push
cmp
out
(bad)
fild
mov
mov
aas
xchg
sub
std
cli
pop
pop
inc
pushf
xchg
(bad)
cmp
je
xchg
xchg
adc
stos
sbb
sbb
call
sbb
clc
adc
mov
retf
cmp
pop
or
ja
stos
dec
jmp
(bad)
pop
mov
icebp
mov
jb
shl
outs
or
inc
enter
mov
dec
mov
add
pop
jbe
xchg
not
jp
xor
(bad)
push
or
mov
cld
sahf
clc
(bad)
ss
stos
xchg
cdq
pop
int3
mov
pusha
mov
hlt
add
in
dec
push
ror
shr
pop
lea
mov
cmc
xlat
sbb
call
pop
inc
mov
push
scas
xchg
lock
push
mov
cld
mov
mov
jmp
in
scas
movs
sub
push
enter
scas
xor
sbb
int3
int
loope
pop
out
pop
mov
sub
add
or
mov
ds
cmp
aad
and
nop
test
or
sub
push
sbb
inc
sbb
inc
jno
mov
jno
imul
outs
dec
add
fsub
(bad)
cs
and
xor
inc
sbb
dec
in
mov
movs
mov
or
and
cmp
pop
inc
add
fistp
xchg
cmps
fs
mov
and
icebp
into
scas
xchg
mov
aad
dec
mov
call
mov
xor
push
outs
and
repz
lock
cwde
addr16
call
inc
in
out
lahf
push
sbb
pushf
loopne
xchg
arpl
and
cmp
pop
mov
add
adc
sub
xchg
pop
mov
and
outs
jmp
xchg
pop
sub
mov
mov
xchg
and
jae
xor
ja
in
xor
scas
sbb
cs
adc
dec
ret
dec
jg
ret
push
ror
rol
push
xchg
lods
hlt
ins
test
aad
cmp
fadd
aaa
jmp
stos
mov
call
push
(bad)
std
(bad)
jns
scas
mov
add
pop
ins
jp
mov
or
ins
fidivr
js
mov
fisub
xlat
dec
xchg
test
arpl
(bad)
cmc
mov
(bad)
dec
mov
add
or
pop
nop
xor
cmp
adc
fist
rcl
inc
pop
out
push
push
jae
push
pop
push
fdiv
mov
add
mov
sub
sbb
pop
popa
popa
fdivr
xchg
mov
xchg
cmp
jmp
movs
mov
dec
jmp
push
nop
inc
or
mov
and
sub
(bad)
shr
imul
aad
fs
dec
sti
push
retf
into
aad
js
sub
out
ror
xchg
jne
shl
inc
psllw
(bad)
imul
pop
cmp
xor
fimul
and
push
pop
and
pop
add
out
out
cmp
imul
mov
dec
push
xchg
scas
cmc
jge
in
push
out
or
and
lahf
push
dec
add
push
jle
es
pop
or
sbb
lods
inc
dec
cld
bound
inc
fild
mov
mov
mov
add
into
dec
movs
push
mov
xchg
out
(bad)
jmp
cli
outs
popf
sub
or
shr
call
popf
push
ins
jne
fcomi
hlt
mov
lea
shl
xor
fisubr
cmp
shr
xchg
mov
dec
in
sbb
inc
xchg
and
mov
sub
loopne
jnp
cmp
fcmove
les
sahf
and
popf
mov
xchg
xchg
push
lds
jl
add
into
retf
addr16
(bad)
lock
rep
out
out
mov
popa
addr16
dec
push
sbb
aas
push
pop
(bad)
(bad)
std
sub
movsx
enter
imul
mov
outs
cwde
fdivr
ret
sub
repnz
test
pop
mov
je
sbb
pushf
popf
xor
jns
data16
sbb
movs
jg
push
add
adc
sbb
sbb
dec
inc
inc
ret
fnstcw
jg
xchg
leave
out
ins
mov
pop
cli
cmps
imul
push
cmp
cmp
mov
push
fidiv
fild
push
adc
jl
dec
adc
sub
fstp
adc
imul
mov
push
mov
dec
pushf
movs
sbb
dec
adc
sub
adc
sbb
mov
imul
test
lea
adc
adc
mov
xchg
fld
repz
(bad)
push
inc
jnp
jae
mov
or
sub
adc
sbb
in
cmp
mov
test
das
inc
jno
dec
mov
add
xor
outs
addr16
(bad)
xchg
shl
inc
sub
jmp
push
cmp
push
lock
shl
shl
push
sbb
mov
sub
inc
scas
pop
mov
imul
and
inc
cmp
and
es
dec
jecxz
lahf
stc
fs
shl
jns
lock
je
or
cs
mov
pop
sbb
sbb
sub
fsubr
popf
add
adc
xchg
lock
popa
and
jno
test
in
dec
sbb
add
sub
(bad)
push
mov
sbb
je
sbb
jmp
dec
xor
ja
mov
dec
sbb
add
out
(bad)
(bad)
sub
in
pop
leave
xor
repnz
arpl
out
inc
and
jb
inc
jge
push
and
mov
sbb
dec
inc
inc
add
inc
je
das
aaa
pushf
fidivr
minps
pop
xor
adc
push
rcl
xor
mov
dec
mov
jns
or
mov
pop
cmp
push
mov
jp
(bad)
in
mov
sbb
ja
popf
or
test
inc
fwait
jecxz
xor
push
pop
mov
mov
xor
adc
imul
sbb
mov
int3
mov
lock
fdiv
mov
sub
push
mov
arpl
mov
lds
and
push
sub
cmp
mov
gs
dec
fisttp
fcomp
ficomp
xchg
in
jmp
ja
mul
int
lahf
jno
shr
mov
sub
imul
jl
out
aas
mov
ficomp
(bad)
fidiv
iret
fcomp
ss
pop
mov
adc
sub
xor
or
cli
(bad)
dec
adc
outs
retf
push
ds
xchg
jecxz
out
inc
or
dec
jmp
jecxz
mov
pop
and
ds
jo
mov
rcl
shr
das
pop
adc
pop
sbb
sbb
in
or
cs
loopne
mov
jne
cmps
jp
mov
or
mov
arpl
out
and
push
jmp
movs
out
and
mul
rol
cmp
cmp
test
push
mov
mov
not
push
cwde
jg
(bad)
out
sub
mov
out
sbb
cmps
mov
pop
nop
bound
imul
mov
arpl
jge
sub
test
aas
mov
add
ret
es
jb
repz
in
fmul
add
imul
fdiv
cwde
div
xchg
and
(bad)
adc
adc
out
jb
rcr
sbb
jb
dec
or
sbb
push
cmp
xchg
inc
push
sar
dec
push
imul
mov
rcl
xor
inc
mov
mov
movs
xchg
in
push
inc
das
icebp
popa
adc
scas
pop
stos
and
push
retf
or
out
scas
or
jns
sti
mov
jp
scas
jle
daa
loopne
xor
sbb
bound
or
mov
sub
mov
ror
lea
push
adc
cwde
push
aas
mov
clc
cmp
fld
dec
dec
vorps
(bad)
rcr
mov
daa
stos
and
xchg
ss
xchg
jne
fucomp
push
cmp
je
inc
not
mov
loope
mov
xlat
add
aaa
add
int
aam
(bad)
fdivr
ds
int3
pop
add
fs
add
cmps
js
in
or
aas
xchg
dec
loope
neg
data16
mov
add
pop
xchg
mov
pop
es
cmp
pop
mov
in
stc
js
xchg
imul
add
fisubr
xchg
xor
xlat
hlt
fcmovb
ror
pop
inc
mov
sbb
xchg
cmps
and
add
rcr
sub
lock
push
stos
xchg
xchg
xor
mov
jg
xor
jne
outs
dec
jne
outs
xchg
push
popf
cmp
in
ret
in
push
fadd
xor
add
jl
pop
inc
(bad)
jge
cmps
hlt
push
inc
ins
sbb
push
aaa
dec
pop
jp
movntq
hlt
mov
lock
loop
push
mov
pushf
outs
sub
add
(bad)
lds
out
fnstenv
dec
rol
jmp
push
push
icebp
fcmovnb
retf
aam
sbb
xor
push
adc
in
xor
repz
sbb
dec
mov
jg
shl
retf
popf
repnz
icebp
xor
pop
fcom
pusha
fucomp
loope
xor
fadd
enter
aad
push
int3
imul
add
sahf
add
sbb
fstp
dec
ss
popf
je
into
sbb
dec
repnz
scas
cmps
shl
xchg
xchg
ds
mov
retf
out
out
iret
push
lods
cwde
push
adc
push
fld
mov
test
xchg
jne
test
rol
in
fdiv
cwde
inc
mov
lds
sahf
fimul
mov
ror
inc
mov
fwait
retf
jge
mov
mov
dec
sub
add
in
jmp
shl
ja
cmp
int
mov
icebp
push
clc
inc
loop
cs
xchg
div
stc
mov
out
out
add
xlat
push
or
bound
mov
jae
sar
jae
mov
cld
and
arpl
jp
xlat
iret
dec
out
add
scas
mov
add
add
dec
loopne
pop
mov
sahf
mov
(bad)
ret
mov
xor
mov
xchg
cld
je
push
movs
xor
jp
or
jle
retf
mov
pusha
mov
mov
jecxz
mov
fs
stos
adc
cmps
shl
sahf
xor
(bad)
sbb
and
add
lods
imul
push
nop
dec
(bad)
jnp
jb
cmp
cwde
adc
addr16
inc
mov
nop
bound
lds
scas
push
fiadd
std
inc
dec
mov
xor
in
ins
rcr
sub
ss
mov
pop
mov
fidivr
xor
call
fs
ret
psubusw
popf
jle
mov
or
dec
inc
add
lods
aas
add
pop
aam
in
add
jnp
dec
cmps
jecxz
inc
je
imul
retf
xchg
out
mov
iret
arpl
inc
pop
add
inc
adc
ins
and
aad
jecxz
sbb
fbld
jmp
mov
pop
pop
push
xor
cmp
lea
jmp
ja
mov
push
push
lods
pushf
neg
loop
popf
cli
fmul
bswap
pop
cmp
mov
jbe
pusha
inc
out
cmp
push
xchg
stc
xor
repnz
pusha
test
cmps
xchg
aam
cmpxchg
pop
jae
inc
(bad)
xor
cdq
add
push
push
out
adc
adc
into
and
pcmpgtd
jge
sub
hlt
pop
fistp
inc
add
fdiv
push
lock
stc
(bad)
jmp
jne
inc
das
xchg
dec
dec
ds
out
movs
pop
mov
jp
push
sbb
mov
add
dec
mov
into
hlt
sbb
or
xchg
shr
fistp
jns
fsubrp
aaa
int3
shl
jb
mov
retf
enter
cmp
inc
xor
repnz
lods
sub
cmp
push
xchg
(bad)
add
mov
adc
jne
cmc
aad
lods
sub
sbb
mov
xchg
clc
pop
jle
iret
jb
sub
cmp
mov
jg
push
mov
dec
mov
shl
daa
cmp
repnz
pop
scas
sbb
jmp
pop
or
into
ficom
jno
inc
adc
stos
sub
and
jl
mov
sahf
rcr
pop
jae
and
xor
ins
sbb
lds
(bad)
imul
pop
jo
xor
dec
ja
cdq
nop
lock
jmp
mov
mov
mov
inc
push
push
aam
push
cdq
push
lea
repz
add
jo
mov
mov
xchg
aas
in
outs
sbb
sub
push
cmp
adc
pop
sub
clc
push
or
or
scas
pop
ins
rcr
mov
ins
jbe
outs
in
loopne
adc
in
or
cld
out
dec
inc
imul
pop
adc
adc
das
dec
outs
or
sub
or
add
adc
loope
dec
sahf
jae
or
xchg
outs
stos
push
nop
fadd
setbe
pushf
out
sub
jge
add
or
jp
dec
call
leave
repz
or
and
add
mov
data16
dec
jo
arpl
add
push
int
into
push
sahf
adc
call
pop
(bad)
retf
clc
pop
daa
in
icebp
mov
pop
mov
jecxz
xchg
pop
xchg
push
mov
ins
scas
xor
mov
ja
mov
(bad)
rcr
cwde
or
scas
jbe
push
sti
je
push
cmp
cmps
(bad)
cmps
ss
adc
js
ret
sbb
je
push
dec
cmc
and
xchg
xchg
adc
jae
mov
retf
pop
loope
jp
pop
jne
pop
pop
xor
dec
pushf
inc
pop
cdq
in
stc
out
sbb
scas
loopne
sbb
mov
push
in
push
sbb
xchg
xor
clc
ja
fwait
mov
mov
les
and
pop
or
cli
pusha
pop
int
icebp
fisub
mov
call
arpl
movs
test
lods
xchg
daa
jne
push
jle
nop
push
or
retf
mov
jp
pop
and
(bad)
hlt
pop
pop
fxch
stos
inc
dec
scas
lds
cli
arpl
mov
mov
xor
xchg
push
inc
lods
lods
mov
or
pushf
xchg
int3
stc
mov
add
sbb
adc
pop
push
daa
in
iret
fimul
shl
sub
ror
jbe
mov
xor
dec
dec
icebp
cld
sahf
jmp
mov
std
movs
shl
aaa
mov
push
xchg
in
add
mov
cwde
stos
rcr
or
or
and
dec
test
dec
lock
xor
lds
pushf
xchg
aam
fidivr
jo
bts
xor
rol
addr16
push
xchg
add
and
(bad)
nop
push
ja
and
xchg
leave
ret
xlat
ss
les
jnp
mov
test
test
sbb
adc
xor
mov
push
pop
scas
test
outs
(bad)
jle
(bad)
mov
out
mov
inc
in
aaa
pop
dec
jmp
xor
pop
test
call
rol
jbe
(bad)
das
mov
(bad)
pop
mov
sbb
shl
jmp
rcl
inc
(bad)
rcr
test
jge
xchg
mov
inc
sar
mov
cs
inc
out
jb
push
dec
add
mov
sbb
push
movs
scas
int3
addr16
repnz
sahf
add
jmp
inc
das
js
cmp
mov
sbb
lods
push
xchg
cwde
imul
push
(bad)
adc
jns
rcl
cmps
or
mov
push
test
out
neg
push
iret
xchg
movs
push
jge
pushf
jnp
pop
shl
in
les
in
push
leave
sbb
mov
sub
cmp
xchg
mov
jl
mov
push
or
mov
inc
inc
xchg
add
or
xor
lods
xchg
mov
dec
jne
(bad)
rcl
leave
or
sbb
jg
test
lea
or
jo
repz
xor
movs
mov
sub
or
mov
sbb
lods
inc
mov
shl
jne
outs
lods
cmp
pop
inc
shl
js
dec
xchg
push
gs
retf
jle
lods
int
ror
lock
dec
xor
xor
iret
adc
add
out
aas
jle
push
and
jmp
dec
not
xor
pushf
jle
push
sub
data16
mov
sbb
popf
or
xchg
fdivr
add
push
repnz
xor
test
into
dec
(bad)
sbb
scas
sub
loope
int
dec
push
out
bound
xchg
pop
lock
cwde
sbb
retf
loopne
push
lods
mov
pop
imul
test
inc
push
je
pop
lea
inc
(bad)
int
mov
mov
js
mov
cmp
dec
gs
test
pop
test
hlt
mov
adc
fidiv
in
mov
mov
lods
js
or
repnz
xchg
inc
loope
hlt
(bad)
fs
sbb
jmp
mov
xlat
fwait
dec
inc
and
mov
inc
push
and
popa
cmp
cdq
dec
xchg
adc
dec
pushf
pop
fild
jne
int
xor
push
mov
dec
pop
das
mov
inc
dec
call
mov
adc
jo
fimul
or
add
mov
add
sub
popa
js
add
inc
rcr
aaa
out
jb
loopne
gs
push
rol
xor
mov
and
les
bnd
cmp
and
arpl
fwait
push
jg
push
scas
outs
lahf
test
hlt
mov
push
push
out
in
fisubr
lds
js
cmc
(bad)
mov
int
jne
fld
jp
rcl
or
mov
les
stos
mov
add
pushf
jae
mov
push
add
shl
mov
int3
outs
adc
mov
(bad)
fs
loop
ret
cmp
mov
xor
mov
jl
and
in
add
and
cwde
aad
leave
sub
ja
lds
cmp
cmp
dec
cmp
jne
jnp
arpl
or
cwde
dec
pop
pop
addr16
dec
pop
jne
dec
sahf
movs
aam
test
repnz
dec
sub
inc
(bad)
jno
and
fcmovnu
test
pop
sbb
xchg
mov
cmpxchg
dec
sbb
mov
xor
mov
xchg
gs
fs
outs
cwde
cmps
imul
arpl
data16
sti
inc
add
jmp
xor
mov
dec
icebp
and
sbb
aaa
jo
cmp
sub
jnp
mov
mov
lods
push
jecxz
xor
out
mov
clc
jp
mov
jle
stos
rcl
gs
sub
dec
pop
xor
sbb
xor
ret
in
stc
movs
mov
jmp
jae
cmp
(bad)
in
mov
addr16
pop
aas
mov
inc
xor
xor
jno
pop
jecxz
sub
addr16
adc
mov
call
and
out
mov
(bad)
adc
aam
xor
stos
retw
sub
cmp
out
and
push
data16
lods
lds
inc
pop
ss
retf
dec
xor
mov
inc
es
sti
out
mov
fisub
mov
push
jp
clc
fs
lods
xchg
adc
push
movs
cmp
jo
mov
dec
scas
mov
aad
xchg
cmp
jg
lea
inc
jbe
fidivr
call
fdiv
daa
push
xchg
inc
cmp
rcr
test
xor
sbb
loop
dec
js
push
aas
imul
adc
push
cmps
pop
add
or
js
jl
stc
push
mov
sbb
jg
and
outs
ins
add
arpl
aaa
add
out
pop
mov
xchg
sub
pop
dec
xor
sbb
(bad)
dec
fcmovnb
mov
popf
in
pushf
enter
xor
dec
push
retf
pusha
jp
inc
xchg
add
jnp
mov
mov
loopne
neg
cmp
mov
mov
call
and
arpl
or
and
push
adc
xor
leave
ss
inc
aam
sbb
jns
mov
mov
push
cmps
adc
imul
(bad)
addr16
fwait
dec
inc
sub
xor
icebp
imul
mov
xchg
cmps
mov
ret
xchg
xchg
ds
xor
stos
pop
sbb
loop
xchg
ret
fwait
enter
inc
mov
pop
cli
pop
es
std
ss
ds
repnz
mov
mov
add
gs
movs
inc
adc
mov
mov
inc
fmul
dec
mov
inc
mov
add
push
fistp
pop
sub
or
ret
adc
mov
mov
add
pop
loop
call
gs
outs
fstp
inc
push
mov
xchg
(bad)
into
repnz
js
add
xchg
or
xor
xchg
icebp
out
faddp
inc
push
mov
addr16
mov
xchg
sbb
cmc
movs
ret
scas
cmp
out
sub
sub
outs
or
addr16
or
mov
lods
jb
cmps
inc
fwait
cs
ror
pushf
bound
push
rcl
fiadd
js
movs
leave
scas
or
mov
mov
clc
xchg
jnp
movs
leave
xor
fst
in
jecxz
mov
outs
push
jae
mov
adc
(bad)
cmp
xor
rdtsc
out
int
mov
sar
cli
sbb
pop
adc
xchg
out
push
xchg
(bad)
sbb
pop
mov
xor
ss
fidivr
imul
inc
cld
pop
inc
xchg
neg
add
inc
add
(bad)
sub
inc
jns
stos
vpbroadcastb
loopne
fcomp
out
jnp
shr
dec
xchg
sub
adc
test
jp
dec
ja
stos
(bad)
mov
lods
cwde
inc
nop
mov
lock
outs
movs
sahf
push
mov
or
push
xchg
xchg
xor
mov
jge
cmp
jle
fld
xlat
push
pop
lods
add
nop
jne
ins
stc
repnz
sbb
pop
xlat
in
dec
mov
or
inc
div
cmp
adc
out
aad
(bad)
neg
mov
mov
daa
ins
clc
inc
or
mov
pop
ret
push
int
xchg
sbb
xchg
mov
mov
lea
call
xchg
test
inc
(bad)
(bad)
mov
sub
cs
aaa
push
test
jg
xchg
xor
sub
pusha
das
leave
(bad)
jnp
cwde
cmp
pop
sub
push
jb
adc
fmul
mov
ror
call
add
push
pop
xor
push
js
shr
push
pop
std
sub
sahf
cmp
cmp
xor
test
jmp
add
xor
mov
add
pop
dec
and
sbb
out
jae
(bad)
xchg
imul
rcr
push
add
xlat
ins
fdivr
xchg
dec
fld
stos
xor
gs
or
cs
sub
neg
dec
dec
icebp
fimul
out
or
or
add
rcl
and
jl
mov
or
push
iret
pushf
or
inc
aas
inc
loope
(bad)
jno
jg
xchg
push
mov
shl
sbb
and
add
fs
cmc
rcl
mov
cmp
in
adc
jmp
dec
sbb
in
cli
jae
pop
xchg
add
movs
sbb
and
dec
in
push
pushf
mov
add
push
jns
sahf
leave
out
ret
not
jno
adc
mov
sbb
out
icebp
popa
sub
iret
clc
push
dec
jle
ja
adc
jae
add
jmp
fsub
into
pusha
inc
pop
xchg
lods
cmp
data16
mov
xchg
xchg
inc
mov
in
add
out
ret
loopne
inc
adc
jmp
xor
arpl
or
(bad)
xchg
adc
sub
sti
xlat
popa
test
dec
cmp
sub
out
sbb
mov
and
call
(bad)
sub
or
inc
data16
retf
pusha
int
pop
sbb
iret
ret
(bad)
mov
mov
inc
mov
std
dec
fcomp
add
stos
fstp
fwait
std
aam
mov
cdq
pop
mov
push
aaa
arpl
and
or
and
pushf
pop
and
out
scas
ins
sbb
(bad)
retf
lock
ins
inc
add
popa
pop
cmps
out
fisubr
ins
adc
ds
push
mov
cmp
loope
aaa
bound
pop
gs
imul
mov
jae
jbe
ds
inc
jne
clc
sbb
test
or
xchg
adc
dec
stos
mul
loope
cli
add
ja
cmp
push
scas
or
out
or
inc
(bad)
(bad)
jp
push
sbb
inc
mov
mov
fnstsw
outs
push
shl
and
mov
and
dec
or
fcom
fwait
add
lea
into
push
sbb
add
jo
cmp
push
stos
and
es
(bad)
scas
pop
pusha
cmp
movs
mov
pop
imul
dec
std
push
jmp
mov
or
ins
cmp
scas
repnz
int
call
push
adc
sahf
repnz
push
retf
xchg
enter
movs
vcmpss
(bad)
mov
push
inc
je
dec
push
and
dec
not
inc
aas
in
jle
addr16
sbb
retf
mov
add
popa
mov
rcr
jecxz
loop
imul
lahf
cmp
inc
and
add
and
inc
mov
xor
pop
xchg
push
mov
into
call
cmp
dec
loope
movs
inc
ins
call
sti
or
mov
adc
shr
popa
xor
and
sub
mov
xor
lahf
push
mov
jno
scas
fadd
cmp
xchg
push
push
mov
mov
mov
cmps
jg
into
jl
call
ret
xchg
add
pop
and
mov
cmp
xor
push
ror
outs
leave
mov
mov
imul
hlt
add
push
lods
xchg
fs
push
dec
mov
int3
push
call
fiadd
imul
xor
sub
push
pop
repz
(bad)
sub
frstor
out
aad
dec
mov
jle
jb
out
mov
mov
jmp
xlat
and
adc
sbb
mov
inc
xor
ror
add
cli
push
mov
in
lds
call
pop
xor
cmc
sub
retf
or
in
ret
xchg
xchg
fs
add
push
mov
daa
je
push
out
test
sub
cmp
xchg
retf
outs
retf
mov
in
cdq
inc
in
cld
jmp
jmp
push
mov
push
sub
dec
outs
jp
xor
pop
rcr
scas
jmp
or
cs
loope
dec
out
imul
cmp
cmp
sbb
mov
mov
dec
mov
aam
cld
fs
fcom
pop
sbb
jmp
xor
in
sub
std
dec
cli
jno
jle
push
gs
jb
sbb
xor
cmp
jecxz
fistp
rol
or
push
sbb
xchg
jbe
sahf
jecxz
push
xchg
(bad)
imul
ins
aaa
popa
in
dec
lea
out
and
and
(bad)
mov
retf
sbb
outs
jbe
ja
sti
cwde
cmps
xrelease
push
pushf
lods
shl
test
push
fs
add
dec
jge
cld
sbb
fs
lods
jo
xor
jecxz
call
bound
mov
in
mov
(bad)
or
mov
xchg
ins
repz
leave
mov
jge
mov
das
mov
push
mov
push
(bad)
sar
or
xchg
push
bound
aad
out
cmp
imul
call
push
pop
gs
clc
mov
xchg
pop
mov
push
(bad)
sbb
pop
sti
jns
das
(bad)
mov
sbb
bound
push
sahf
pop
test
xor
fst
ja
dec
jmp
ficomp
aad
xchg
xor
ins
repz
cmp
ja
clc
clc
shr
sbb
mov
lahf
fwait
outs
xor
scas
leave
popa
out
std
data16
test
ds
xchg
add
mov
xchg
(bad)
shl
dec
hlt
cmps
in
mov
sub
pop
jb
pop
jns
inc
dec
xchg
shr
out
fadd
fcomp
jae
test
les
mov
pushf
jb
xchg
jecxz
jmp
in
inc
imul
add
(bad)
mov
and
movs
ja
adc
stc
sahf
pop
adc
xlat
push
into
call
adc
aam
pop
inc
adc
nop
je
sbb
jge
push
push
push
ins
cs
adc
jp
test
gs
mov
sub
imul
stos
add
sbb
pushf
repz
in
and
mov
int
mov
jb
adc
push
std
out
in
cmc
mov
ret
call
out
or
inc
push
out
sub
sbb
jp
jns
out
lahf
adc
mov
fidivr
je
pop
cmps
xchg
bound
jle
push
loope
(bad)
aas
mov
clc
mov
leave
mov
or
push
inc
cmc
sub
xchg
sti
dec
inc
sbb
xchg
out
jnp
add
add
in
cwde
(bad)
xor
push
xchg
shl
ins
cwde
jae
push
hlt
leave
mov
int
pop
mov
int
sub
(bad)
aaa
xchg
xor
je
aam
out
xchg
xchg
sub
neg
inc
dec
pop
adc
push
into
aas
movs
fsub
sar
jae
fstp
adc
sbb
pushf
xchg
fsubr
repnz
int3
nop
sub
in
push
xchg
and
mov
inc
push
sbb
jbe
push
sbb
dec
mov
adc
jecxz
mov
sbb
xchg
sbb
bound
cwde
sub
xor
jl
pop
mov
xor
jge
jl
jnp
leave
mov
ins
mov
dec
jl
sti
imul
sbb
out
inc
mov
std
bound
push
inc
(bad)
add
daa
outs
fwait
push
call
int
push
sub
ret
sbb
cmp
fidiv
daa
std
jmp
scas
ret
mov
sub
mov
ins
or
test
sahf
(bad)
pop
popf
inc
jb
int
cmp
xor
jo
jbe
mov
aas
jne
ins
xchg
cdq
ss
rol
pop
fbstp
jnp
jp
fmulp
or
ins
adc
ficom
fiadd
scas
and
xor
adc
loope
loope
xchg
inc
and
inc
nop
sub
arpl
jnp
ja
pop
sub
push
lea
xchg
test
jge
fldcw
sbb
test
or
mov
fisttp
(bad)
xchg
sbb
js
nop
jne
not
jg
arpl
add
and
dec
push
xchg
shl
mov
nop
mov
push
stos
dec
adc
and
bound
neg
jp
retf
adc
stos
push
mov
jl
cmp
dec
gs
inc
jp
aaa
xchg
int
fwait
mov
xlat
arpl
mov
mov
enter
mov
leave
push
leave
cdq
pop
cmps
lds
test
ins
push
cmp
mov
jg
pop
shl
dec
mov
mov
sbb
les
or
adc
cmp
movs
inc
jo
or
rcl
std
int
test
xor
and
inc
js
jb
ds
xchg
iret
push
xor
ret
push
cmps
add
into
test
test
popa
fwait
mov
push
push
les
lods
or
test
es
daa
mov
jmp
jge
js
lahf
dec
cmp
mov
mov
sub
sbb
into
dec
gs
and
dec
add
jo
fwait
mov
or
div
push
xchg
cmp
fs
stos
push
mov
inc
push
ins
sahf
mov
mov
fidivr
pop
into
je
cmp
add
neg
push
push
push
iret
retf
add
jns
add
call
div
movs
mov
mov
pop
into
popf
mov
cmp
xchg
pusha
aam
aaa
or
test
cmp
js
loop
dec
je
imul
jbe
adc
mov
out
stos
xor
repz
mov
ficom
shr
(bad)
pop
mov
gs
icebp
dec
add
mov
push
cdq
repnz
cmp
ins
cmp
pop
idiv
test
sbb
xchg
aad
mov
dec
add
pop
out
push
fimul
loopne
jl
jo
cmp
pop
imul
add
inc
sub
ds
aam
nop
getsec
or
add
hlt
icebp
or
test
dec
add
fstp
add
jbe
push
sub
mov
mov
and
rol
mov
sbb
adc
sub
call
lock
sbb
cli
lods
add
(bad)
pop
xchg
scas
jmp
bound
xor
aam
inc
ds
ins
repz
or
out
push
or
sar
jo
mov
cmps
mov
or
(bad)
rcl
mov
adc
or
pop
repnz
xchg
out
loopne
xchg
repz
lods
pop
pop
fldcw
adc
push
sbb
add
adc
pop
push
mov
jle
push
jne
call
sbb
imul
xor
push
sub
loope
frstor
mov
and
scas
or
cld
cmc
and
hlt
add
pop
cmp
and
pop
mov
adc
mov
xchg
nop
pop
push
or
cmp
lods
arpl
cs
adc
(bad)
repnz
adc
jg
and
xchg
mov
pop
mov
mov
inc
xlat
imul
pop
gs
popf
and
ins
sbb
std
mov
das
sub
dec
cwde
xchg
dec
sahf
(bad)
cld
cmps
pop
scas
test
pop
cdq
and
ds
jp
out
dec
sbb
add
lahf
mov
aam
push
dec
push
cmp
sti
stos
pop
add
fidiv
mov
fwait
mov
ds
or
fwait
cmp
and
leave
movs
movs
cmp
xchg
and
xor
out
sub
into
xlat
xor
imul
int
push
not
nop
(bad)
dec
or
in
imul
rol
cmp
imul
sbb
test
arpl
hlt
rcl
mov
sbb
fist
loop
adc
cld
test
inc
(bad)
js
mov
aad
popa
push
mov
and
sub
aad
sar
pop
add
xchg
xor
mov
xchg
xchg
pop
or
(bad)
and
push
mov
fsubr
les
sub
fcmovb
fdiv
jno
cli
push
retf
xchg
je
jp
jmp
ins
add
das
dec
mov
into
and
mov
fadd
mov
adc
sbb
pop
out
nop
xchg
aam
sub
(bad)
jb
repnz
pop
neg
ror
(bad)
call
xchg
cli
cmp
aam
(bad)
jne
adc
adc
xchg
pop
fwait
lock
int3
mov
dec
jno
int
(bad)
loope
push
adc
ins
movs
into
pop
ja
mov
test
inc
pusha
jl
es
sbb
rcr
daa
pop
mov
cmp
push
lods
jge
jp
sbb
push
add
mov
(bad)
stos
cld
aad
adc
add
jbe
clc
popa
pop
pop
mov
mov
cmps
jbe
fwait
mov
sub
jno
and
adc
dec
add
sub
retf
mov
popf
xor
xor
fs
jns
test
mov
xchg
mov
out
push
push
add
fcom
and
mov
gs
dec
leave
jl
push
xchg
inc
push
mov
add
ror
fistp
(bad)
mov
jo
mov
popa
dec
cmps
pop
inc
test
shr
and
vunpcklps
lods
cmp
shr
fcomp
cs
mov
dec
jg
mov
pop
fcom
dec
add
jecxz
adc
(bad)
dec
nop
push
cld
loop
pop
(bad)
cmp
mov
not
ins
shr
int3
popa
cli
int
inc
call
sbb
outs
xor
and
adc
xor
es
in
mov
mov
push
push
xor
(bad)
fild
pop
lods
fist
call
and
jecxz
sub
mov
jb
arpl
push
rol
mov
pop
mov
bound
lods
push
xor
ret
and
or
xchg
loope
mov
push
loope
stc
mov
lahf
rcr
stc
arpl
push
xchg
rol
push
test
repnz
mov
pop
lock
and
mov
dec
push
add
push
icebp
aad
idiv
lods
ins
inc
fs
and
pop
cli
jmp
xor
in
ins
adc
ins
call
pcmpeqd
and
ins
aad
arpl
ret
xor
mov
ins
iret
call
jo
(bad)
addr16
popa
xchg
sub
(bad)
pop
add
jae
gs
push
frstor
ja
ss
imul
jl
push
or
movs
push
enter
js
xchg
fcom
add
lods
pop
test
repz
push
pop
cmp
out
mov
sti
add
mov
imul
lea
xor
shl
jg
xchg
mov
ins
or
dec
stos
lea
or
pop
popf
or
sub
mov
inc
repz
sbb
cmp
pop
idiv
cmp
jnp
adc
ins
int
fdiv
push
dec
and
lods
cmp
mov
and
jno
inc
dec
enter
pop
leave
mov
pusha
mov
add
int3
and
jmp
das
inc
in
(bad)
popf
pop
pop
dec
mov
inc
test
jnp
push
sub
add
xchg
mov
lea
repz
ss
mov
call
pop
sub
jo
inc
jge
add
mov
add
imul
xchg
or
pop
lock
cmp
fldenv
addr16
les
add
jl
inc
or
fwait
xlat
push
dec
aaa
jb
push
outs
movs
xchg
add
out
push
or
mov
mov
dec
add
jl
(bad)
push
jmp
movs
push
std
jmp
adc
push
dec
outs
adc
xor
sbb
test
mov
test
ss
mov
std
or
jns
pop
push
ds
dec
movs
fstp
repz
jno
push
cmp
add
call
add
cmp
sbb
lock
dec
lds
ret
add
and
or
and
and
lock
jno
and
mov
push
les
xchg
pusha
cmp
hlt
loop
mov
clc
(bad)
pop
cmp
dec
push
hlt
jmp
stos
xchg
sbb
cwde
loopne
pop
pusha
mov
inc
xor
jb
lahf
jl
cld
rol
repz
or
fdiv
sti
mov
out
pop
stos
div
push
jmp
(bad)
sti
inc
(bad)
jns
xchg
imul
test
call
xchg
cmps
adc
dec
enter
(bad)
repnz
scas
ins
pop
add
mov
fiadd
push
mov
ror
mov
pop
mov
mov
shl
dec
bound
ins
mov
in
(bad)
fucom
dec
in
jl
in
and
mov
pop
sub
(bad)
fcomp
hlt
and
inc
in
out
outs
pop
loopne
jns
fs
mov
add
xchg
ja
fs
ret
xchg
mov
movs
and
sub
fld
fistp
aam
in
jne
adc
sub
shl
push
rcr
jbe
jnp
loop
jns
je
jae
dec
pop
cs
sbb
push
ficomp
gs
jae
xor
jb
mov
mov
pushf
add
xor
es
jg
mov
dec
shr
cmps
mov
(bad)
mov
stos
jbe
sub
sbb
or
(bad)
imul
mov
cwde
pusha
jne
mov
adc
inc
push
aam
add
push
add
adc
ret
inc
ror
xchg
adc
dec
and
mov
mov
or
test
int
jmp
adc
ja
jp
jbe
adc
and
and
sub
out
sar
out
pop
mov
shl
out
movs
xor
pop
mov
test
mov
ss
movs
ja
pop
addr16
icebp
push
and
retf
ja
push
test
div
and
ret
lahf
daa
int3
mov
dec
dec
pop
inc
add
pop
hlt
cdq
mov
mov
push
fnstcw
sub
cmp
jge
aad
aas
or
sub
dec
push
cmc
nop
cmp
fstp
add
inc
and
popf
add
mov
call
fdivr
inc
mov
in
lea
cmp
call
lea
jno
clc
cmp
popa
hlt
scas
repz
jmp
adc
loop
add
outs
movs
cmp
icebp
dec
jae
dec
and
and
in
cld
scas
and
fidivr
in
add
ins
jno
shl
test
retf
lods
in
sti
sbb
jmp
pop
sti
jp
test
pop
and
push
int
jp
sbb
imul
pop
jmp
push
mov
sub
dec
outs
test
and
sub
xchg
inc
push
dec
es
dec
xor
cmp
and
ffreep
ret
or
arpl
lods
push
and
dec
ss
xchg
xor
out
lock
mov
in
les
jp
aam
dec
loope
dec
retf
mov
push
xchg
fs
cmp
mov
pushf
adc
xchg
div
(bad)
arpl
adc
xor
lods
pop
adc
mov
mov
push
into
fs
push
retf
popf
ret
push
int
out
push
add
jb
mov
pop
mov
dec
shl
scas
(bad)
sahf
repnz
stos
sbb
push
sub
add
retf
push
and
add
add
ret
scas
loop
push
jmp
jg
jae
and
jae
mov
push
add
mov
cmp
push
icebp
into
popf
and
adc
fnstsw
dec
and
ja
add
mov
xor
inc
nop
lahf
xchg
sti
cwde
cmp
add
call
mul
pop
ja
mov
js
cs
xchg
xchg
loop
cmp
xchg
jb
movs
daa
scas
movs
movs
sub
adc
loopne
or
(bad)
cmp
xchg
xor
data16
xor
into
lahf
rcr
xor
mov
imul
jo
dec
mov
fmul
sar
mul
lahf
adc
dec
cmp
push
std
mov
jae
push
sub
(bad)
and
icebp
aad
jle
outs
xchg
sahf
adc
push
(bad)
movs
cmp
cdq
ins
inc
hlt
xchg
neg
clc
xor
inc
inc
sub
push
mov
push
sbb
jno
mov
sbb
mov
cmp
push
dec
aaa
adc
lds
and
sub
xchg
test
push
lahf
pop
call
dec
mov
add
xchg
or
and
jne
mov
push
aaa
pop
push
ds
pop
mov
jecxz
jae
dec
dec
ins
xchg
jbe
mov
cdq
push
sbb
add
sub
xchg
in
and
jmp
sti
std
xchg
sub
pop
sub
repz
rcr
and
push
inc
daa
cmps
inc
in
mov
dec
pop
(bad)
sub
les
fisubr
shl
(bad)
imul
cwde
sub
jp
sahf
daa
fs
sub
fwait
push
imul
xchg
gs
ret
je
dec
xchg
call
outs
scas
or
int3
sbb
retf
stos
imul
push
faddp
jne
xchg
sub
ins
into
dec
cwde
les
mov
and
push
ins
sub
adc
out
adc
pop
sbb
jge
mov
sbb
cmps
push
inc
jp
xor
xchg
xor
out
mov
pop
cmp
into
mov
lock
mov
add
mov
loopne
xchg
push
pop
cmp
(bad)
es
cmps
imul
add
mov
cmp
enter
dec
add
out
and
mov
xlat
das
stos
fidiv
xlat
inc
jns
ja
fidiv
fsub
dec
loope
mov
ins
inc
test
fxch
or
xor
pusha
or
addr16
jl
ins
(bad)
test
je
test
jg
imul
outs
mov
xchg
jl
adc
test
and
or
mov
sub
jmp
nop
loop
dec
inc
adc
iret
int3
fdiv
retf
jmp
inc
stc
xchg
outs
cmp
retf
cmps
push
lods
adc
mov
scas
or
pop
fmul
outs
add
bound
jne
pop
(bad)
sar
mov
or
cmp
mov
jo
pop
fadd
in
xchg
mov
idiv
outs
pop
xchg
cmp
mov
rol
xchg
xor
popf
pusha
push
movs
adc
imul
mov
pop
test
xor
add
or
adc
sub
inc
jns
mov
jns
in
pushf
add
lods
arpl
daa
add
push
ret
and
adc
enter
push
cmp
jle
xchg
daa
sbb
add
sub
imul
call
add
jne
jno
xor
mov
pusha
jmp
mov
adc
add
fs
(bad)
push
mov
xor
call
int3
rcl
dec
add
sub
jne
(bad)
lods
test
adc
mov
test
in
mov
xor
mov
jp
mov
leave
jmp
stos
stos
fs
mov
call
shl
ins
mov
rcr
mov
mov
add
xor
inc
aad
jno
sar
mov
mov
and
fistp
push
pop
cdq
push
mov
push
sub
cli
bound
cwde
fst
call
je
sub
jp
pop
inc
retf
mov
and
fsubr
cmp
and
mov
popa
pop
push
es
inc
ja
rcl
and
cmp
sub
sbb
pop
es
or
push
mov
repnz
and
aas
nop
jge
imul
sub
out
xchg
mov
mov
ins
sub
stos
stos
push
popa
xchg
cmp
bound
loopne
aam
(bad)
pop
stc
sar
js
out
adc
in
cmc
outs
or
adc
add
ds
mov
or
pop
add
ins
bound
or
imul
fcmovbe
cmps
out
dec
fst
jmp
add
add
pop
inc
repz
sub
cmp
into
cmp
call
hlt
aas
or
pop
adc
lock
or
in
jae
xlat
inc
enter
stos
or
sub
push
jp
in
lea
hlt
fsubr
sub
cld
out
jae
nop
test
dec
or
push
push
add
pop
cdq
dec
pop
outs
jo
sbb
leave
aaa
int
fwait
xchg
adc
mov
sub
cmp
js
cmp
mov
xor
xchg
scas
jge
push
stos
adc
repnz
aaa
iret
out
emms
and
gs
out
addr16
test
mov
scas
test
sbb
inc
push
cmps
xor
mov
imul
jp
shl
into
dec
fst
xchg
mov
lock
(bad)
scas
jnp
lds
inc
xor
(bad)
mov
cmp
je
in
xchg
adc
rcr
pop
(bad)
std
and
or
or
push
clc
or
xor
xchg
xor
movs
add
sti
aas
xchg
jecxz
push
fwait
jnp
xchg
or
cli
sar
sar
jns
cmp
jg
jmp
mov
nop
leave
mov
mov
or
dec
adc
shl
mov
jl
adc
jo
add
pop
pusha
and
enter
adc
retf
jmp
xor
xor
mov
call
mov
cmps
retf
out
sub
pushf
pop
hlt
lock
inc
retf
cmps
inc
lock
leave
(bad)
or
test
enter
test
adc
imul
lock
ds
arpl
fist
out
(bad)
fs
push
cli
jmp
mov
rcr
or
push
mov
sbb
and
jo
and
xchg
cmc
mov
aaa
add
inc
cmp
(bad)
or
mov
pop
ss
cmp
mov
push
fidivr
sar
xchg
cli
push
pop
(bad)
shr
mov
and
xchg
test
pop
call
push
add
hlt
les
test
dec
clc
stos
pusha
ret
movs
jge
mov
nop
sbb
bound
shl
and
int
jmp
out
dec
and
mov
sub
je
cmps
rol
mov
xlat
inc
cmp
mov
push
push
bound
pop
pusha
es
cmp
popf
sbb
fwait
mov
jo
test
push
stos
imul
sub
lds
cmp
cli
jl
out
xor
inc
mov
and
test
sahf
mov
mov
xchg
sbb
xor
out
icebp
dec
das
push
retf
scas
jmp
in
inc
test
clc
rol
and
pusha
movs
es
gs
mov
fcom
and
les
ss
sbb
(bad)
sbb
push
adc
repnz
ds
and
dec
mov
xchg
sub
cmp
mov
inc
and
cmp
mov
adc
or
cmps
in
mov
cmp
add
mov
stc
jp
xchg
or
aaa
jne
cmp
in
xor
fistp
clc
or
adc
mov
out
or
arpl
ds
pop
and
xor
pop
adc
xor
sub
(bad)
aam
popf
popa
loopne
mov
dec
stos
and
jnp
jge
(bad)
ss
jb
xchg
lods
ins
mov
into
call
jo
icebp
pop
enter
or
jg
lahf
aam
int3
push
mov
xchg
stos
pop
outs
xlat
movs
push
outs
adc
int
pop
and
outs
mov
ret
jmp
cmp
cli
clc
sub
in
paddusw
add
dec
mov
mov
cmp
retf
sub
fdivr
dec
xchg
pop
outs
retf
lock
jae
lock
or
dec
xor
xchg
push
add
add
pop
jb
xchg
cld
int
or
cdq
dec
sbb
arpl
jle
jae
ss
enter
push
(bad)
fisubr
in
jne
jbe
or
jle
adc
add
push
(bad)
sbb
leave
or
pop
stos
wbinvd
idiv
sub
sub
cdq
sbb
mov
not
movs
sbb
repz
clc
fisttp
and
lods
add
addr16
fild
jmp
inc
push
loope
adc
ror
xchg
cmps
mov
inc
dec
pop
add
mov
mov
pop
jmp
paddd
int3
shr
sbb
inc
test
push
leave
xor
inc
gs
in
xor
pop
fwait
(bad)
test
sbb
fst
dec
mov
push
leave
out
mov
push
pop
cmps
push
adc
mov
and
push
shl
or
inc
inc
push
xor
aam
mov
jo
cmp
jecxz
mov
cld
pop
xchg
inc
pop
in
clc
sub
shl
cmc
in
daa
adc
mov
adc
int3
or
je
aas
jo
std
ds
fcomip
dec
jl
xchg
sub
add
stos
fmul
xchg
ins
rol
jmp
or
js
mov
dec
fxch
dec
cs
fadd
push
mov
pusha
mov
xchg
inc
or
jl
push
pushf
(bad)
sub
test
mov
jge
xor
repz
inc
mov
lahf
icebp
jge
adc
and
imul
mov
adc
je
in
arpl
mov
push
pop
xor
test
xchg
or
sbb
stos
call
add
out
and
push
cmp
icebp
sub
jg
mov
icebp
int
aam
loop
sbb
mov
(bad)
data16
retf
sub
or
sub
push
sub
out
push
mov
js
jbe
cmp
xchg
cmp
js
retf
jmp
mov
iret
push
aad
retf
or
sbb
add
xor
je
mov
stos
outs
sub
jne
lds
fistp
lods
xor
mov
mov
enter
call
inc
add
jo
loope
mov
mov
scas
jae
cmp
test
dec
test
adc
adc
push
les
shr
sub
mov
mov
sub
jbe
lea
adc
sub
jns
js
stos
sub
nop
adc
lea
mov
fisttp
cmps
jl
xor
mov
ins
mov
(bad)
pop
test
cs
dec
push
dec
sti
jne
test
add
pop
jmp
jle
sbb
sub
loopne
jb
clc
sub
mov
xor
(bad)
fdiv
cmc
test
(bad)
sbb
pop
ret
bound
imul
inc
xor
sbb
(bad)
loop
mov
inc
cmps
repnz
out
in
push
dec
outs
sub
push
xlat
or
mov
mov
add
adc
xor
jno
dec
dec
lods
and
jbe
hlt
pop
(bad)
in
mov
mov
lods
push
sbb
pop
mov
lahf
add
push
or
xor
js
retf
test
xchg
add
mov
rol
pop
hlt
orps
push
fisttp
push
loopne
dec
xchg
cmp
aas
or
stos
dec
jp
cmc
sub
pop
ss
pop
les
pop
dec
sbb
xchg
mov
or
je
adc
pop
dec
(bad)
jbe
(bad)
adc
cld
sbb
pop
mov
ror
or
xor
shr
adc
jno
mov
lock
mov
sbb
add
fidiv
shl
sub
mov
ror
iret
out
mov
or
push
rol
jo
rcl
ins
pop
lods
sub
xor
pop
mov
std
xchg
cmps
test
push
xchg
loopne
test
sbb
cli
mov
and
into
add
cli
shr
cmp
mov
sbb
xor
pop
loope
mov
(bad)
call
outs
or
fnstcw
out
sub
ss
mov
ins
pop
loope
aam
vshufps
dec
movs
push
jle
jo
jecxz
push
dec
(bad)
mov
loop
fsub
jae
imul
movs
pop
aad
data16
jmp
std
pop
mov
xor
mov
shl
fisub
xchg
enter
cdq
sbb
fincstp
ja
pusha
xchg
mov
adc
pop
fwait
sbb
bnd
idiv
cmp
test
shr
cmp
or
cmp
aas
xor
arpl
mov
inc
rcr
mov
imul
dec
add
mov
add
sti
xchg
push
dec
icebp
inc
movs
xchg
pop
sbb
loope
dec
test
lea
jbe
mov
stos
mov
push
adc
add
aaa
pop
ror
jmp
and
inc
std
call
jmp
cs
or
ss
jbe
clc
add
push
inc
aaa
pop
test
jmp
push
pop
out
ds
adc
pop
int
dec
and
jae
cmps
movs
cmp
cmp
push
dec
sahf
ret
mov
jle
mov
jg
lahf
mov
xchg
and
or
sbb
xor
test
loopne
push
jle
push
xchg
lods
ja
xchg
jns
add
lods
lea
fwait
sahf
lods
test
lods
jle
mov
or
or
mov
add
addr16
mov
cmp
mov
mov
dec
loope
sbb
sbb
pusha
and
cmp
inc
xor
and
adc
arpl
add
in
add
cmp
dec
dec
xor
imul
or
iret
in
imul
ret
cmp
cmp
mov
das
xchg
xchg
data16
mov
test
adc
lods
popa
les
lods
cmp
les
test
test
leave
scas
xchg
or
jno
in
movs
daa
sub
ror
shr
movs
repnz
out
sbb
xchg
adc
popf
jl
xchg
and
ss
icebp
xor
in
out
cmp
cmp
inc
dec
xchg
mov
pop
stos
out
stos
adc
xor
lahf
xchg
ficomp
inc
(bad)
test
dec
js
in
inc
inc
sub
mov
or
popf
jo
jl
cmp
fsub
or
dec
nop
add
loop
lds
mov
lahf
imul
imul
cmp
loopne
in
(bad)
mov
dec
test
test
cmp
sub
sbb
mov
inc
xor
pusha
ss
aam
push
(bad)
xchg
scas
cmp
dec
std
movs
xchg
shr
cmc
cmp
add
pop
xlat
adc
lea
data16
cwde
add
xor
pop
sub
add
shl
fldcw
mov
pop
push
mov
aaa
xchg
hlt
xor
popa
xor
leave
in
ret
loopne
mov
xlat
mov
adc
pop
popf
xor
push
cmp
mov
ins
cmps
jbe
dec
mov
es
ins
cs
inc
lahf
lods
dec
xchg
outs
cmp
jae
xor
gs
dec
call
mov
sahf
retf
pop
dec
pop
pop
jle
outs
aas
jp
lds
in
and
clc
xlat
fdiv
mov
inc
pop
rcr
push
xor
cmps
cmps
cmp
in
push
sti
call
leave
loope
outs
fs
pop
mov
mov
jb
test
jno
movs
out
fabs
pushf
xor
outs
mov
std
add
loop
rol
inc
xchg
mov
push
add
test
push
das
inc
std
adc
sahf
dec
std
popa
mov
lea
jno
rol
jne
push
push
pop
iret
jg
(bad)
and
adc
sbb
pop
and
fdivr
mov
(bad)
jmp
jbe
rol
mov
inc
imul
inc
sub
jecxz
mov
hlt
test
mov
sub
mov
into
pop
mov
cdq
rcl
mov
and
xchg
add
call
mov
jmp
mov
lea
call
jmp
call
add
push
mov
call
mov
or
mov
mov
mov
ret
mov
ret
mov
jmp
mov
lea
call
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
mov
call
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
mov
mov
push
lea
call
mov
mov
lea
call
mov
mov
mov
mov
lea
call
movzx
test
jne
lea
push
lea
call
push
call
lea
push
push
lea
call
push
lea
call
push
push
call
mov
xor
cmp
setne
xor
cmp
sete
and
je
mov
lea
call
mov
push
push
lea
call
mov
mov
push
lea
call
lea
push
lea
push
call
add
lea
push
mov
call
mov
or
mov
mov
lea
call
mov
.byte
