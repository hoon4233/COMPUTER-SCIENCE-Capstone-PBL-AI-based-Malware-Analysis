push
add
add
pop
in
pop
mov
xor
add
adc
xor
div
sbb
adc
hlt
xor
jmp
in
and
loope
dec
and
in
int3
or
arpl
add
cs
pusha
clc
mov
xor
ret
test
mov
icebp
and
cld
mov
inc
out
push
add
call
pop
retf
fwait
mov
sub
mov
add
sub
(bad)
fmul
pop
sub
add
fdiv
stc
jl
ins
sbb
and
mov
scas
mov
sbb
cmp
fadd
mov
pusha
sbb
push
jmp
sti
test
pusha
adc
les
loop
xchg
add
and
mov
mov
hlt
in
inc
push
add
lea
sub
popf
push
ins
xchg
out
mov
bound
xchg
inc
adc
frstor
or
add
and
in
push
xor
fs
pop
push
cli
out
push
push
mov
(bad)
sub
push
das
sbb
jae
fcom
push
add
inc
push
and
jo
push
inc
inc
in
jae
add
aad
mov
jg
push
mov
xchg
and
je
push
stc
jbe
sub
dec
or
adc
push
test
push
arpl
cwde
sbb
add
sbb
(bad)
fld1
dec
movs
mov
and
dec
and
xchg
and
or
push
fldcw
cmp
fsave
and
jp
and
out
pop
xchg
sub
mov
inc
sub
pusha
imul
jmp
outs
adc
jae
out
adc
add
je
xchg
jae
push
adc
nop
jge
or
ja
inc
in
lea
push
push
dec
ret
push
dec
mov
retf
adc
push
adc
inc
xor
dec
fadd
sub
loopne
push
cmp
sbb
sbb
(bad)
in
push
sbb
sbb
sbb
or
arpl
loope
or
pop
adc
push
and
push
lds
cmp
mov
mov
sub
sbb
fistp
inc
cwde
les
cmp
loopne
xor
jae
and
xor
or
jnp
mov
rol
mov
aad
enter
add
xchg
aaa
xchg
gs
nop
cmc
adc
jmp
or
pop
or
mov
push
or
dec
mov
hlt
ins
jb
and
cs
sbb
pop
push
test
inc
repnz
cmp
fcom
add
in
cmp
inc
push
cmps
(bad)
rol
fcom
push
push
and
inc
outs
iret
jecxz
mov
mov
popf
lds
mov
and
stos
sub
into
mov
xchg
je
inc
xchg
sbb
inc
add
call
adc
and
push
push
sub
xor
dec
ja
push
(bad)
sub
dec
or
enter
sbb
adc
jle
int3
xchg
sbb
add
inc
pop
sub
mov
hlt
popa
push
or
push
or
adc
xor
add
nop
or
sub
pusha
pushf
mov
clc
pop
adc
call
fwait
adc
mov
adc
mov
test
sbb
dec
jge
add
pop
xor
jmp
lods
popa
loop
dec
or
je
mov
sub
sbb
xchg
pop
add
jecxz
outs
into
inc
js
les
sub
jmp
push
hlt
inc
sti
and
mov
push
cmp
or
xor
adc
dec
push
add
fwait
xor
cs
add
cli
or
cmp
test
adc
ret
lock
adc
push
mov
inc
(bad)
mov
adc
cmp
jne
push
adc
sbb
lds
hlt
pop
retf
jp
retf
jmp
xchg
mov
xchg
sub
lods
xchg
scas
push
push
or
adc
mov
adc
sbb
fcom
push
fsub
push
dec
inc
mov
mov
or
dec
and
add
push
xor
cli
or
push
push
push
push
push
(bad)
icebp
mov
test
es
jle
inc
shl
adc
xor
cwde
rcl
test
adc
mov
or
loope
(bad)
adc
and
inc
in
add
jg
out
add
adc
mov
(bad)
cwde
and
xchg
and
int3
call
imul
jae
sbb
pop
in
cmp
jb
js
or
cmc
or
push
ret
adc
dec
test
sbb
mov
jno
jge
loope
lahf
or
inc
fcom
or
aaa
retf
pusha
aam
icebp
or
fdivr
mov
or
adc
pop
add
sub
adc
es
sbb
in
inc
adc
pop
pop
mov
ret
sbb
test
inc
sub
jg
adc
lods
sbb
lea
push
push
adc
xchg
inc
dec
adc
mov
mov
bnd
stos
push
push
hlt
test
and
push
and
jle
stos
call
pop
mov
and
adc
mov
ret
push
in
fdivr
push
inc
(bad)
fisttp
dec
mov
retf
sbb
int3
inc
and
xor
jno
sbb
jmp
jl
cmc
or
es
sbb
fsubr
pop
cld
ss
adc
dec
ror
in
dec
xchg
int
or
or
push
dec
aaa
leave
cmp
into
dec
test
dec
inc
rsqrtps
rdmsr
dec
leave
pop
bnd
popa
inc
mov
arpl
sbb
mov
or
test
push
push
pusha
outs
sbb
jge
mov
movs
pop
mov
adc
outs
imul
mov
adc
or
fcmovbe
sbb
adc
inc
lea
xchg
or
pop
repz
push
pushf
sub
mov
pop
sub
and
nop
addr16
fistp
xchg
cmp
and
test
sbb
xchg
aas
sbb
sbb
cmp
mov
push
xor
inc
inc
mov
mov
pop
je
shr
and
mov
dec
(bad)
gs
lock
or
push
adc
inc
icebp
mov
mov
push
jb
pop
stos
in
test
cld
push
and
ret
cmp
jmp
hlt
je
icebp
lea
xor
pop
mov
sub
xor
pop
out
shl
and
lods
sub
adc
inc
push
es
mov
or
xchg
rcr
fstp
xchg
test
jecxz
rol
clc
mov
xchg
not
inc
loope
pop
fdiv
mov
mov
inc
pop
inc
cs
gs
and
inc
sbb
sbb
add
pop
and
xchg
jl
retf
inc
in
mov
and
push
mov
neg
and
sbb
addr16
inc
pop
mov
jmp
add
mov
sbb
and
(bad)
stos
aaa
inc
pop
or
jle
push
and
iret
in
and
dec
pop
cld
pop
(bad)
mov
cli
push
push
mov
mov
pusha
pop
inc
sub
add
jae
scas
stc
xchg
add
and
(bad)
jl
(bad)
push
mov
movs
shl
adc
adc
or
das
test
sub
inc
dec
and
and
xor
add
xor
xchg
inc
fsub
jmp
adc
jl
or
mov
add
and
xchg
xor
mov
fst
xor
xchg
pop
int3
iret
mov
mov
xor
dec
cmp
pop
inc
inc
dec
push
dec
or
call
adc
push
jg
or
dec
retf
push
arpl
sbb
cmps
cmp
lock
xor
sbb
mov
aaa
push
retf
pop
dec
je
mov
xor
mov
std
sbb
inc
cmp
sbb
int
psrlq
cmp
ds
les
bound
and
ja
inc
mov
adc
cmps
lea
dec
adc
fiadd
sub
cmp
or
(bad)
fcomp
sbb
sub
adc
jo
xchg
xchg
pop
xchg
cld
aas
test
das
jno
push
inc
fs
es
rcr
adc
test
sub
imul
pop
aas
int3
dec
cwde
dec
test
hlt
std
inc
inc
ror
leave
fcom
jno
pop
push
les
pusha
les
and
mov
test
in
and
add
sbb
or
iret
aam
icebp
sar
and
or
mov
and
or
aaa
sub
leave
call
retf
popa
(bad)
mov
mov
adc
repz
ret
pop
or
jl
sbb
sub
xor
xor
add
shr
dec
pop
bound
fcom
dec
fmul
mov
scas
mov
call
call
add
popa
add
sbb
jne
sub
push
test
jne
pop
xchg
push
mov
sbb
sub
and
push
push
and
call
int3
loope
aaa
dec
adc
xlat
aaa
push
in
into
add
mov
arpl
dec
jns
push
add
xchg
sub
fs
jnp
jle
loop
gs
xor
add
adc
addr16
add
add
dec
adc
and
pop
dec
cmp
movs
or
arpl
pop
ret
xchg
push
aas
xchg
sbb
mov
sahf
and
push
mov
push
pop
hlt
xor
les
call
test
mov
sub
rcl
jae
pusha
(bad)
test
jne
add
xor
jo
jae
cld
movs
inc
mov
and
mov
mov
mov
jb
leave
adc
xchg
push
sub
or
leave
mov
inc
or
push
mov
pop
xchg
mov
xor
cmps
call
cmps
nop
xor
pop
push
out
cli
jle
jb
mov
call
ficom
les
jo
ret
out
xchg
hlt
std
push
pop
fbld
sbb
inc
inc
inc
mov
imul
pop
pop
adc
(bad)
pop
repnz
(bad)
icebp
cmp
pop
adc
or
mov
jne
push
add
repz
add
adc
aam
cmps
cmp
in
xchg
aam
push
movs
mov
fsubr
xchg
fld
xchg
mov
or
icebp
les
lods
sbb
mov
xor
pop
int3
in
or
enter
je
xchg
sbb
cmp
enter
fs
inc
dec
pop
ja
sub
inc
pusha
outs
or
push
mov
xor
cmp
sbb
neg
movs
or
dec
add
lods
lock
mov
loope
mov
adc
and
and
stos
sub
mov
sbb
sbb
popf
lods
cmps
test
pop
inc
mov
aam
adc
test
pop
cmp
mov
comiss
inc
mov
aam
mov
jno
xlat
cmp
dec
dec
loopne
(bad)
mov
inc
add
ja
sti
and
cdq
pop
sub
or
call
jl
adc
xchg
inc
ror
push
leave
mov
jecxz
test
fadd
mov
and
in
lods
rep
mov
cs
inc
pop
inc
or
repnz
adc
and
xchg
dec
mov
mov
popf
sub
mov
push
lea
int3
jb
gs
imul
fs
xor
cmp
sub
push
loope
fisttp
fsubr
loopne
adc
adc
jge
mov
or
xor
push
pop
push
cmp
mov
dec
nop
enter
scas
jnp
inc
xor
test
test
adc
js
pop
mov
xor
mov
ret
pusha
pop
in
fist
enter
loope
inc
test
(bad)
call
loop
dec
nop
mov
jle
xor
lock
lods
push
lea
fbld
jb
dec
stos
pop
aas
int
xor
loop
nop
jb
movs
push
add
and
push
push
enter
loope
jo
sub
inc
xchg
push
nop
js
cmps
add
call
les
xchg
push
add
ins
mov
rcl
ins
mov
popf
sbb
sub
inc
dec
xchg
mov
mov
xchg
int3
cmps
mov
push
dec
xor
jae
sub
rcr
call
jge
push
sub
shl
stos
dec
xchg
push
or
xchg
add
pop
cmp
retf
scas
imul
enter
inc
and
loop
mov
adc
cmp
call
xor
mov
sbb
dec
fdiv
xchg
jge
cdq
pop
adc
and
test
enter
push
ins
add
mov
das
inc
inc
mov
xor
jns
xchg
imul
pushf
shl
sub
test
and
xor
inc
div
test
and
sub
(bad)
cmps
imul
or
in
in
cmc
add
bound
or
(bad)
mov
mov
movs
adc
jae
cs
adc
mov
aas
mov
inc
je
dec
and
sub
inc
or
pushf
mov
cmp
sub
push
bts
lods
retf
lds
dec
pop
out
retf
push
or
lods
test
mov
adc
fwait
adc
push
xchg
adc
pop
nop
mov
ja
out
iret
jmp
sub
js
and
inc
outs
inc
mov
push
or
mov
push
push
pop
jecxz
cmp
push
iret
xchg
xchg
mov
repz
addr16
xor
das
push
push
scas
jcxz
stos
xor
imul
aam
fst
loop
xchg
sub
and
into
push
in
lock
int
and
jbe
or
je
pop
adc
jmp
or
jns
xor
ins
jo
and
sub
inc
push
xor
sub
inc
add
xor
and
inc
jae
inc
xor
mov
sub
into
sahf
xchg
add
xchg
rcr
jb
cmp
xchg
cmp
dec
adc
iret
jp
sbb
add
arpl
add
mov
call
sbb
push
cmps
enter
jl
int3
pop
add
xchg
mov
mov
push
test
cld
sub
inc
sub
push
imul
jae
shl
jo
pushf
(bad)
lahf
hlt
popa
or
cmp
dec
ins
mov
push
add
sbb
test
rol
repnz
cwde
xor
xchg
cmp
repz
scas
and
stos
and
in
sbb
cmp
jmp
jmp
scas
push
cmp
jl
fdivr
mov
xor
dec
xchg
dec
sub
add
loope
adc
mov
call
in
(bad)
stc
ret
push
push
xchg
add
adc
push
sub
je
cmp
or
hlt
sub
push
lahf
push
push
std
aaa
xor
scas
pop
repz
mov
jbe
ins
pop
inc
fst
and
pop
je
loope
popf
inc
mov
jo
dec
(bad)
xchg
mov
push
mov
cld
repz
pop
sub
mov
outs
xor
push
inc
or
mov
pop
push
std
xchg
test
imul
push
add
inc
cmps
cmp
fs
jae
mov
dec
fmul
dec
xor
aam
push
adc
add
ss
or
cmp
pop
cmp
mov
xchg
repz
ret
fild
jmp
loope
dec
(bad)
push
pop
iret
call
or
xor
mov
add
in
aas
inc
sbb
sbb
fwait
mov
int3
aaa
bnd
lds
das
fs
xchg
in
into
adc
and
pop
add
arpl
mov
dec
stc
repz
fs
cs
popa
cmp
push
mov
jp
add
(bad)
(bad)
push
mov
sbb
test
into
lods
pusha
inc
mov
outs
mov
in
test
pop
pop
pop
into
jmp
jl
popa
sub
call
add
xchg
js
daa
std
xchg
xor
sbb
ret
call
xchg
jb
adc
or
push
push
cld
add
mov
mov
cmp
dec
call
adc
add
jne
jmp
in
adc
cmc
mov
adc
sbb
xchg
enter
int3
retf
sbb
inc
mov
ds
loopne
or
test
scas
jne
(bad)
bnd
sub
jmp
add
push
sbb
pushf
jns
or
ror
xchg
mov
cmps
push
scas
in
mov
call
shr
inc
and
cmp
in
mov
call
lods
add
pop
cmps
ficomp
xchg
or
aaa
dec
test
int3
add
mov
push
adc
aad
pop
cwde
xchg
inc
das
add
loope
imul
push
or
xchg
call
ja
into
adc
outs
ds
gs
sub
loopne
and
add
jge
and
mov
sub
nop
dec
outs
or
add
jmp
lahf
xor
sub
pop
movs
push
xor
lea
pop
dec
or
sti
cmps
jns
xor
sbb
push
xor
out
cli
dec
addr16
hlt
cmp
xchg
call
inc
nop
inc
sub
ins
and
push
ja
xor
stc
ins
xchg
test
mov
jge
xchg
mov
xor
test
out
(bad)
loopne
sub
ins
js
sbb
jmp
xor
sbb
sbb
ins
outs
push
pusha
mov
and
aas
xor
adc
or
cmp
int3
or
mov
daa
pop
add
and
outs
sub
call
jle
xor
ror
jle
js
add
scas
xchg
repnz
inc
jecxz
inc
or
push
adc
pop
jg
mov
dec
adc
push
jg
jp
xor
dec
xor
dec
loop
fwait
add
adc
and
sbb
mov
fsub
or
repnz
(bad)
fcomip
iret
mov
push
and
(bad)
gs
inc
(bad)
stc
and
pop
push
movs
loopne
add
xor
inc
push
in
std
jp
and
xor
sub
mov
sub
mov
in
and
pop
dec
leave
nop
pop
call
stc
jae
gs
adc
std
adc
call
cmp
shl
mov
push
inc
pop
movs
pushf
pop
call
mov
in
cmp
xchg
push
cmp
pop
shr
popa
popf
shl
jmp
dec
int
ins
sbb
movs
sub
mov
sub
repz
ins
das
mov
sub
repz
scas
dec
and
(bad)
lods
loop
stos
xchg
das
ja
outs
xor
(bad)
inc
cmp
aaa
enter
cmc
cmp
loopne
addr16
mov
inc
jmp
push
dec
clc
adc
dec
jae
xlat
(bad)
sub
fadd
mov
add
test
pop
add
sub
dec
jo
jne
mov
push
xor
aam
inc
xor
jbe
jmp
jmp
xor
scas
cmps
gs
cs
pop
cmp
push
dec
in
jo
inc
and
lock
sbb
sub
ins
jo
mov
rcl
cli
adc
into
dec
push
cli
xchg
mov
push
mov
or
xchg
or
sub
mov
add
xchg
cs
xor
lahf
pop
sbb
movs
adc
and
movs
and
or
sbb
out
repnz
sbb
add
mov
imul
enter
mov
sbb
add
sbb
icebp
add
hlt
adc
pop
ins
shl
and
shr
inc
int
mov
lahf
xchg
mov
xor
aas
clc
mov
add
dec
jp
xchg
add
push
les
jno
mov
std
dec
mov
out
cwde
pop
in
cs
ss
call
adc
push
inc
adc
adc
pop
sub
mov
mov
mov
pop
(bad)
jmp
aam
fdivr
push
fdivr
imul
dec
pop
rcr
mov
pushf
jo
test
push
pop
add
pushf
std
mov
test
call
iret
mov
sbb
or
dec
(bad)
add
cmps
test
lock
sbb
inc
mov
cmp
and
std
push
pop
ret
xchg
jmp
mov
adc
cs
xchg
sub
inc
fsubr
push
(bad)
and
and
jb
sar
fs
test
add
mov
inc
adc
test
xchg
or
mov
push
cmp
int3
repnz
es
mov
mov
and
cmp
call
and
test
in
ficom
sub
xchg
push
dec
icebp
mov
xor
das
aad
pop
cmps
xchg
jnp
in
and
jmp
(bad)
mov
nop
pop
and
pop
sbb
clc
mov
push
lea
dec
sbb
loope
or
xor
xor
jge
call
mov
jne
sub
clc
or
dec
adc
imul
call
call
push
sub
lock
adc
xchg
xor
mov
repnz
push
and
dec
push
lods
push
xchg
ja
(bad)
out
sbb
sub
lock
popa
movs
sub
dec
imul
bound
push
shr
out
jnp
fcom
dec
sub
dec
dec
adc
inc
and
cmp
adc
sub
stc
mov
arpl
and
sub
adc
les
push
xchg
dec
fs
fnstcw
outs
mov
mov
jne
cmp
rol
lods
or
rol
and
sub
data16
leave
xchg
int3
enter
ret
adc
mov
fiadd
cmp
add
popf
into
adc
out
sbb
mov
es
add
and
test
mov
pop
cmp
mov
or
int3
scas
or
push
dec
inc
xor
push
xchg
sub
inc
sub
cmp
dec
push
cmp
jbe
sub
les
jg
fsub
dec
int3
or
and
out
iret
inc
int3
push
imul
or
retf
inc
or
repz
pop
cmps
fisttp
hlt
and
or
mov
cmp
pop
fst
jge
aam
movs
ret
mov
add
mov
por
cmp
lods
cmp
mov
xor
enter
scas
sub
mov
push
mov
cmp
hlt
pop
mov
cs
xchg
test
in
push
test
lahf
imul
sbb
enter
push
lds
mov
push
jbe
ins
(bad)
sub
jmp
fnsave
inc
idiv
(bad)
ret
mov
ror
fmul
mov
std
sahf
pop
adc
cli
or
lock
jl
jne
jne
out
cld
mov
test
inc
aaa
mov
mov
dec
add
jmp
push
scas
dec
xor
sub
adc
clc
jg
jmp
outs
loop
rcl
and
xchg
enter
mov
sub
jmp
mov
int3
addr16
sbb
adc
mov
mov
sub
add
sbb
dec
daa
xchg
inc
cmc
ins
sbb
and
mov
inc
mov
pop
sbb
push
jne
push
inc
mov
in
stos
xor
xchg
and
repz
cwde
push
aaa
test
pop
jb
push
jno
cmp
jae
in
push
call
(bad)
cmp
inc
aad
xchg
mov
repnz
xchg
and
add
into
push
mov
(bad)
lds
leave
xlat
hlt
dec
push
int3
add
inc
imul
shr
sub
in
jne
dec
pop
(bad)
mul
jecxz
sub
push
sub
push
jmp
leave
mov
and
add
inc
mov
rol
adc
lods
xor
and
inc
mov
add
jmp
inc
or
xchg
xchg
add
add
cmp
mov
sbb
xchg
sub
and
sbb
ret
imul
mov
push
daa
push
ds
cs
aam
inc
out
xchg
cmp
jb
(bad)
dec
in
cdq
xlat
jl
sub
cmp
stos
jae
rcl
ret
inc
cmps
test
loop
dec
test
add
clc
pop
sub
sub
sbb
adc
popa
push
sub
lea
rcr
sahf
pusha
in
dec
jmp
pop
sbb
lock
inc
and
fdivp
xchg
movs
test
addr16
pavgw
sbb
add
and
adc
fld
bound
pop
sub
or
inc
xchg
or
and
and
push
fld
movs
shr
sbb
cmp
mov
or
icebp
loope
call
and
movs
sub
push
xchg
leave
mov
push
add
or
loopne
xor
shl
adc
fmul
dec
mov
sub
mov
sbb
and
mov
es
neg
push
cmps
inc
mov
(bad)
push
push
(bad)
test
or
add
push
mov
ret
mov
and
push
repnz
dec
or
xor
sub
mov
pusha
jne
stc
stc
icebp
nop
mov
cmp
adc
out
add
loopne
(bad)
jmp
inc
adc
pop
xor
or
lea
cmc
dec
dec
push
shr
test
das
movs
arpl
xchg
int3
stos
push
movs
lock
xlat
jne
stc
inc
push
cld
jns
add
dec
outs
mov
and
sub
or
cmp
mov
add
xor
sub
repnz
or
out
xchg
mov
imul
sub
rol
stos
call
add
dec
push
movs
ins
jl
sbb
jecxz
mov
pop
pop
ss
mov
push
js
push
mov
mov
addr16
xor
mov
or
test
cdq
xor
cmp
mov
cmp
cmps
adc
jp
les
pop
call
mov
lods
enter
adc
push
je
jo
cdq
push
and
es
fwait
push
fsub
add
mov
push
xchg
sub
sub
lea
lea
push
cld
aad
out
pop
sbb
jmp
push
mov
push
mov
mov
fstp
cwde
cmp
dec
inc
cmp
cmps
fisubr
cmp
mov
mov
into
add
ret
loope
loope
adc
add
lds
mov
pop
add
inc
adc
adc
jecxz
in
adc
fild
mov
cdq
(bad)
lds
cs
lods
and
mov
out
ror
pop
jno
mov
sbb
fimul
clc
sbb
xchg
mov
pop
mov
into
jns
or
push
and
pop
fisubr
test
pushf
mov
lods
lods
adc
nop
pop
add
pop
cld
jae
add
cmps
adc
je
fcom
or
sub
xor
je
inc
lea
and
aad
push
lea
mul
data16
jnp
mov
call
ret
sub
or
sub
jmp
(bad)
jmp
add
dec
jmp
stos
fbstp
jnp
sub
xchg
ja
sbb
xchg
cmp
nop
sti
cmp
test
cli
mov
sbb
jmp
lds
not
cmp
cmp
ret
inc
add
add
call
cmp
bound
cmps
sbb
inc
rcl
dec
inc
hlt
(bad)
std
cmc
movs
ss
pop
and
dec
dec
icebp
test
mov
xchg
sbb
jle
push
cwde
ins
jno
or
xchg
arpl
test
cwde
mov
push
sbb
sub
add
inc
fisub
xor
int
sub
push
inc
shr
xor
pop
dec
imul
dec
push
hlt
mov
movs
ret
cld
mov
cdq
mov
shr
outs
hlt
and
inc
fcomp
push
test
std
jnp
push
ror
cmps
call
push
repnz
pusha
cmps
mov
jle
add
test
pop
loop
imul
inc
jp
rol
out
dec
sbb
(bad)
cmc
gs
mov
loopne
test
nop
mov
movs
repz
add
mov
sub
cmp
ss
mov
push
ret
repnz
jbe
and
aam
je
dec
je
adc
adc
sub
mov
test
sub
jmp
stos
add
push
add
mov
sbb
cld
xor
fnstcw
ffreep
jo
xor
xchg
iret
dec
mov
cmc
add
dec
sbb
aam
cmps
mov
xchg
fwait
and
pop
sbb
(bad)
push
dec
icebp
mov
push
int
mov
mov
ficom
ror
adc
add
jp
aam
lds
in
adc
dec
xchg
stc
adc
xor
and
jmp
aaa
mov
nop
dec
mov
test
arpl
dec
data16
dec
in
repnz
sahf
mov
inc
push
push
pop
jmp
xor
out
shl
add
mov
xor
movs
sub
xchg
jb
xchg
test
retf
or
pop
hlt
leave
int3
cli
ds
add
inc
sub
xor
adc
fisub
inc
jo
clc
jnp
repnz
mov
repnz
ja
mov
jmp
jbe
neg
cmp
pavgw
jge
mov
leave
inc
repz
test
outs
sbb
out
xor
mov
es
(bad)
sub
leave
mov
inc
shl
repnz
add
cwde
inc
repz
add
adc
jnp
mov
ins
mov
dec
lea
lock
test
(bad)
pushf
test
pop
rol
sub
jmp
or
rol
push
aas
mov
ja
add
test
lock
pop
xor
pop
add
inc
iret
loope
sbb
fs
jns
shl
xor
cli
push
sub
jbe
push
enter
xchg
cmps
sbb
inc
idiv
adc
cwde
mov
jns
neg
ror
cmp
dec
jge
cmp
loope
sbb
xlat
retf
or
cmp
pop
sti
adc
and
sahf
dec
cmp
cmp
je
in
jmp
jge
cmps
xchg
pminsw
push
mov
sub
mov
(bad)
jo
adc
mov
test
clc
jmp
into
or
leave
call
jbe
shl
movs
aam
daa
loop
jbe
mov
xor
inc
or
xor
or
jmp
mov
push
xor
(bad)
inc
punpckhbw
xchg
add
std
pop
and
fidiv
jb
call
dec
(bad)
and
or
pop
mov
cmp
jnp
and
add
push
or
add
jmp
or
in
aad
mov
sub
pop
test
mov
cmps
stos
jecxz
arpl
fild
fldcw
mov
push
push
retf
dec
dec
scas
or
ret
psrlw
shl
cmc
fmul
cmp
jl
and
rcl
mov
repnz
(bad)
not
mov
jmp
jnp
jb
add
rcl
lds
jmp
fadd
(bad)
adc
sub
xchg
adc
in
cwde
repz
jle
pop
mov
mov
sbb
fcmovnb
add
sbb
or
lahf
stos
sub
rcr
push
inc
imul
or
add
(bad)
cmps
cmps
and
cmp
mov
sub
sbb
je
daa
mov
cdq
xchg
and
lock
or
push
push
xchg
xchg
leave
test
jp
fst
imul
out
fnstsw
mov
jnp
push
jmp
hlt
dec
rol
rcr
(bad)
call
adc
and
les
cmp
(bad)
pop
sbb
add
(bad)
rcr
cld
sbb
enter
jl
jns
sbb
adc
in
pushf
in
sahf
dec
jecxz
adc
xor
dec
fs
psubsw
cli
or
push
imul
popa
add
push
mov
mov
and
repnz
pop
adc
stos
xor
sub
jbe
gs
adc
scas
je
jmp
outs
leave
push
mov
or
and
add
(bad)
jb
jb
dec
in
lds
push
mov
jmp
xchg
sub
xor
jne
jmp
inc
inc
mov
call
sahf
add
iret
test
inc
or
jmp
lock
ins
pop
loopne
ror
lock
and
mov
retf
mov
int
xchg
mov
nop
leave
jge
sbb
adc
repnz
dec
cmp
inc
push
adc
push
(bad)
call
inc
fild
adc
dec
inc
push
dec
rcr
or
icebp
xor
outs
adc
mov
mov
lds
test
retf
push
mov
pop
mov
loop
dec
dec
(bad)
dec
dec
mov
or
shl
pusha
or
add
jo
in
add
stos
imul
adc
pop
retf
mov
mov
aam
fs
or
mov
test
add
add
push
dec
jns
lea
pushf
push
dec
adc
je
ficom
sub
and
fst
jg
push
ficomp
xchg
dec
mov
mov
aam
test
sub
mov
dec
lahf
pop
enter
test
int
outs
mov
jno
mov
imul
xor
jne
xchg
shr
movs
repz
ret
test
in
test
loop
push
sub
cmp
inc
sub
push
push
ins
outs
or
mov
pop
jle
or
jbe
inc
mov
aam
gs
push
movs
dec
leave
cmp
pop
inc
mov
hlt
jb
cmp
dec
std
inc
sbb
push
or
rcl
mov
inc
sbb
add
and
jl
cmc
mov
mov
in
fs
and
(bad)
cmp
cld
and
push
xor
ss
repnz
push
ins
mov
sub
jns
dec
mov
add
imul
enter
in
ret
jno
or
inc
and
push
scas
scas
cmp
popa
mov
bound
push
inc
push
xor
pusha
xor
push
xor
pushf
les
add
adc
sahf
cwde
inc
jp
add
or
daa
jl
iret
push
pushf
push
jb
fs
add
jne
sbb
mov
dec
mov
jg
mov
outs
rcl
adc
mulps
inc
cmp
push
(bad)
mov
jmp
inc
pop
(bad)
stos
mov
push
(bad)
pop
or
cmc
stos
mov
pop
adc
mov
mov
or
daa
test
mov
rol
lds
sbb
jmp
cdq
daa
xor
pop
jne
pushf
cs
jmp
pop
out
fwait
scas
and
inc
popf
outs
mov
jg
and
inc
or
mov
adc
rcr
sbb
adc
cmc
adc
xchg
cs
add
scas
xor
cmps
pop
cld
js
jnp
jl
pushf
ss
inc
clc
lea
or
cmp
test
mov
or
mov
retf
cld
jmp
out
mov
and
pop
sbb
sti
sub
adc
pop
retf
cmps
push
fsub
jecxz
lock
js
mov
lea
jo
xor
xchg
add
je
adc
mov
fcomp
sti
addr16
push
dec
push
and
xchg
loope
and
clc
(bad)
xchg
add
mov
cmps
xchg
inc
les
aas
sbb
pop
loopne
jb
sbb
sub
sbb
pop
std
bound
xchg
xchg
inc
test
clc
adc
xchg
jmp
mov
mov
and
xchg
xlat
mov
call
cmp
sbb
inc
addr16
les
repnz
shl
xlat
push
mov
sahf
jnp
lock
pop
retf
fwait
dec
mov
lods
xchg
push
add
call
cdq
mov
xchg
hlt
lock
jb
adc
loopne
rcr
mov
adc
jne
sbb
pop
xor
push
out
push
or
adc
stos
int
jnp
js
ror
mov
jmp
imul
add
dec
or
jmp
(bad)
mov
sub
push
pop
ins
aaa
inc
cmp
fs
jl
cmp
sbb
add
push
hlt
xchg
push
outs
adc
xchg
pushf
das
call
bound
test
pop
stos
mov
push
dec
sub
dec
lahf
mov
jmp
mov
push
dec
rcl
xor
stos
jne
sbb
imul
adc
mov
cmps
mov
mov
mov
mov
push
dec
das
jmp
or
push
mov
outs
cwde
ds
or
jns
xchg
add
fst
(bad)
xchg
adc
out
dec
xchg
dec
inc
fs
or
test
pop
cmp
xchg
mov
jns
inc
mov
sub
cld
scas
jp
inc
cdq
cmp
les
or
fisub
mov
mov
cmp
nop
add
cmp
xchg
adc
or
and
adc
xchg
pusha
je
les
cld
leave
idiv
and
jecxz
jbe
or
shr
pop
ins
scas
pop
in
idiv
fst
cmp
push
mov
sbb
lds
rol
or
pop
pop
pop
ss
cdq
fist
inc
dec
scas
pop
jne
adc
pop
mov
shr
push
cld
and
pop
add
inc
add
jmp
sub
enter
je
and
aad
in
mov
call
sbb
xor
push
pushf
call
cmp
sub
sub
inc
test
dec
(bad)
cld
push
mov
loope
jns
stos
push
pop
mov
mov
push
jl
cmp
jl
dec
(bad)
mov
fdivr
or
div
fsubr
or
popa
iret
int
or
adc
sti
in
mov
nop
xor
adc
mov
inc
jns
dec
fdivr
mov
jae
xor
not
and
popf
sti
mov
sar
in
xor
push
jle
or
retf
push
jo
call
xchg
inc
mov
adc
jo
test
mov
sub
jl
test
mov
sub
and
dec
outs
clc
int
fdiv
and
sar
push
out
sub
movs
push
sub
test
pushf
xchg
mov
pop
mov
pop
cmp
jl
ins
js
cmp
sbb
mov
push
aam
push
or
cs
aaa
dec
dec
add
mov
dec
lea
cmp
call
ret
cmp
and
clc
stc
loope
or
cwde
pop
push
in
sub
enter
cmp
movs
mov
jae
adc
out
(bad)
mov
movhps
or
xlat
cld
aad
or
dec
rcl
fxch
dec
push
and
jne
xchg
sbb
mov
or
popa
inc
jmp
lds
jle
in
cld
sbb
and
jmp
pop
cmp
dec
(bad)
sub
jmp
jmp
xchg
test
adc
and
pop
or
fstp
and
pop
and
daa
ficomp
xchg
(bad)
les
dec
adc
dec
lds
call
adc
out
mov
mov
push
xchg
ins
aam
push
rcl
scas
sahf
fwait
inc
loope
dec
retf
mov
dec
scas
ret
(bad)
and
and
test
mov
dec
fnstenv
jmp
gs
movs
stos
nop
xor
fiadd
gs
sbb
pop
daa
pushf
std
mov
lods
in
outs
jmp
je
scas
pop
xor
out
out
pop
add
shr
aas
adc
in
das
cdq
nop
in
mov
push
adc
in
call
aam
sub
add
mov
imul
cmp
mov
outs
xchg
imul
push
jo
pop
sub
push
call
ins
sahf
mov
adc
ja
in
scas
in
push
pop
push
mov
pop
enter
xor
cld
ss
test
daa
rol
jno
xor
sub
ins
sub
pop
loop
mov
push
dec
lock
push
sub
jmp
retf
inc
jge
mov
and
or
pop
out
add
out
call
int3
adc
fwait
sbb
push
dec
and
dec
mov
nop
js
push
ret
sub
icebp
or
cmps
std
sbb
xchg
sti
test
and
push
out
sub
sub
or
imul
fs
fidiv
nop
pop
mov
and
outs
daa
or
sub
and
adc
or
cmp
in
das
call
inc
dec
(bad)
hlt
dec
in
retf
or
aam
xor
push
mov
scas
pop
and
les
test
ss
sub
adc
adc
leave
xlat
not
sahf
add
add
(bad)
jmp
adc
dec
cli
cld
stc
mov
mov
push
hlt
sbb
out
and
xchg
ja
or
and
or
pop
scas
cmp
iret
pop
sbb
call
out
es
adc
mov
xchg
clc
mov
pop
cmp
hlt
loope
add
pop
dec
jmp
adc
loope
(bad)
adc
mov
in
(bad)
sub
lds
mov
sub
xlat
repnz
sub
mov
cmp
enter
dec
movs
cli
sub
daa
daa
push
int3
jp
mov
and
dec
adc
mov
and
and
add
add
lds
push
dec
or
(bad)
cwde
inc
cmp
adc
(bad)
(bad)
adc
out
cli
dec
repz
and
std
mov
push
xchg
add
ins
or
cmp
movs
xchg
dec
shr
inc
jno
call
mov
loopne
push
inc
outs
leave
and
jae
aam
bound
cmp
xor
mov
or
dec
outs
movs
test
mov
add
add
loop
adc
cli
pop
nop
and
jns
xchg
jp
cdq
stos
call
cmp
popf
in
pop
loopne
or
ret
and
sbb
xor
test
out
ret
pusha
inc
jns
sub
mov
xor
push
jbe
sbb
dec
pushf
cmp
dec
mov
fstp
xchg
adc
mov
or
dec
ffreep
movs
fadd
xchg
iret
scas
pop
pop
int
xor
movs
stos
aaa
dec
fld
dec
adc
rol
sub
jl
aad
push
les
and
add
or
xchg
sbb
sub
add
test
or
push
push
scas
push
cdq
inc
in
(bad)
(bad)
aaa
or
mov
push
je
rcr
movs
push
push
int
pop
mov
sub
movs
mov
movs
adc
xchg
dec
leave
jne
leave
aaa
adc
push
lahf
dec
arpl
enter
ja
or
xchg
dec
lea
bound
xor
sub
dec
and
mov
rcr
and
(bad)
(bad)
jae
dec
dec
add
shl
inc
in
cmp
gs
add
inc
push
aam
and
adc
js
fdivr
mov
and
xchg
push
jno
or
dec
std
and
ret
pop
inc
nop
xchg
cmp
test
idiv
addr16
sbb
call
iret
fimul
ror
mov
pop
fnstenv
inc
inc
cmp
inc
loop
xlat
mov
jg
xchg
sti
nop
shl
add
ds
xchg
ja
jp
mov
pop
pop
xchg
mov
xchg
xor
inc
out
das
xor
sbb
add
add
inc
in
je
push
xor
sar
dec
or
ds
xchg
pop
inc
add
or
or
or
mov
jmp
pusha
repnz
loop
pop
aaa
mov
xchg
or
pushf
and
in
test
repz
mov
and
jb
mov
outs
or
or
sbb
stos
js
mov
xor
into
pop
dec
or
lods
lahf
ins
mov
test
or
cmps
push
and
shr
and
xor
dec
and
and
inc
(bad)
imul
mov
scas
mov
ins
lds
rol
inc
mov
add
xchg
loope
scas
sqrtps
ja
mov
jbe
push
xor
mov
sub
jl
loop
mov
pop
mov
jno
sahf
fcmovb
clc
jmp
push
lock
xor
aas
shl
cld
lock
out
dec
imul
sub
adc
shr
and
std
in
pusha
sub
sar
add
ins
jno
mov
and
aam
lahf
inc
and
or
movs
lds
mov
fwait
(bad)
sbb
scas
mov
xor
sti
imul
or
push
inc
push
jae
or
lods
push
xchg
loope
xchg
bound
xor
rol
push
push
(bad)
enter
les
rcl
adc
call
aaa
test
outs
sti
and
popf
or
jns
sub
test
or
cld
std
fadd
add
jl
inc
scas
call
es
retf
nop
pop
pushf
hlt
inc
inc
cmp
mov
or
inc
jmp
enter
retf
mov
fwait
dec
stc
shl
mov
xchg
mov
and
inc
xor
cmp
xor
sbb
mov
popa
sar
dec
or
jl
das
or
push
push
pusha
(bad)
cli
xor
push
mov
inc
xchg
pop
and
bnd
jp
xchg
lds
mov
ret
out
inc
sub
cmp
pop
and
mov
std
jmp
dec
in
jg
adc
xlat
loope
cmp
inc
adc
les
add
jecxz
pop
sub
xchg
sbb
rol
popf
out
sub
lods
xchg
cld
into
push
das
xor
enter
mov
(bad)
mov
mov
call
adc
std
movups
rol
loope
jbe
and
iret
js
push
or
sub
rcr
add
add
jmp
fiadd
dec
or
jg
cmc
push
fimul
ja
add
(bad)
std
cmp
push
add
mov
sti
mov
add
leave
hlt
cmps
out
jne
sub
pushf
and
in
jne
xor
dec
pop
int
mov
dec
fst
add
push
xchg
lods
fxch
push
aad
push
hlt
shl
xchg
adc
ret
or
or
mul
push
test
adc
repnz
je
aaa
pop
cdq
add
jge
shl
mov
xchg
out
mov
fwait
loopne
ret
xchg
adc
adc
and
movs
(bad)
enter
enter
and
in
xchg
ret
mov
cmps
push
inc
loop
push
ret
mov
loope
dec
or
out
mov
ret
dec
jg
or
add
jo
mov
and
jle
fild
popa
fnstcw
mov
jo
inc
je
(bad)
sub
mov
aam
jle
lock
mov
lea
out
adc
pop
adc
pop
push
mov
ins
movs
imul
xor
std
ret
mov
fistp
rcr
pop
push
cs
cmp
out
mov
loope
rcl
inc
movs
je
enter
lods
out
call
into
fdiv
rcl
test
mov
pop
aad
repz
sbb
jmp
add
test
lea
lock
into
adc
xchg
in
push
xchg
fild
(bad)
retf
adc
lock
stc
sahf
nop
hlt
dec
cwde
adc
clc
jg
xor
fiadd
xor
pop
sub
imul
push
jne
push
and
mov
xchg
mov
ja
inc
cwde
and
cmp
test
mov
xor
ins
imul
cmp
xor
push
xchg
adc
sub
call
stos
pop
mov
(bad)
std
sub
sub
cli
xchg
sub
outs
out
sub
addr16
call
sahf
sub
cwde
sbb
push
push
cli
xor
or
retf
fsub
mov
jns
imul
add
adc
shl
mov
push
sub
jo
mov
jecxz
mov
cld
push
mov
mov
lock
or
enter
xor
icebp
sbb
test
jl
std
add
inc
int
adc
sbb
pushf
adc
(bad)
les
xchg
sbb
loop
or
mov
adc
adc
adc
and
popa
and
and
dec
and
pusha
and
jns
into
lods
mov
and
and
and
and
and
and
and
and
and
and
push
xor
or
sub
pop
mov
push
jae
jl
test
mov
loope
loopne
(bad)
mov
add
push
pop
or
or
or
lea
or
push
dec
add
and
call
retf
adc
mov
stc
jmp
(bad)
sti
inc
cmp
scas
test
dec
stc
push
cdq
push
out
xchg
or
sbb
jnp
call
rcr
imul
sub
mov
cmp
lds
and
push
mov
pop
fnstenv
mov
mov
lea
sti
jbe
mov
dec
or
xchg
mov
xchg
mov
adc
test
xchg
dec
mov
call
icebp
(bad)
aam
xchg
loope
sub
movs
mov
adc
push
mov
push
lods
jle
cdq
jbe
sbb
push
add
mov
xchg
mov
pop
xlat
inc
shr
push
pop
mov
je
popf
inc
pop
lock
call
test
pop
loopne
int
lahf
xchg
fimul
fild
cli
adc
pop
push
js
iret
dec
or
setge
cwde
mov
pop
sub
and
mov
pop
jmp
push
jle
call
and
mov
dec
pop
inc
retf
outs
xchg
mov
dec
add
movs
cmp
imul
sbb
lea
mov
cmp
mov
jp
es
je
xchg
cmps
or
xor
out
mov
push
stc
loopne
std
jne
cmps
arpl
pop
call
ror
sbb
movs
(bad)
jnp
push
sub
sub
or
or
mov
ret
div
adc
or
mov
pop
pmulhw
cmp
in
lea
and
jae
cs
add
xchg
dec
add
retf
cli
and
fbld
retf
inc
imul
xchg
mov
imul
xchg
ins
popf
outs
adc
jne
cld
and
adc
pusha
push
or
add
xchg
rol
and
fwait
cmp
sub
es
push
and
and
xor
and
adc
mov
(bad)
xchg
into
movs
jmp
push
repnz
inc
xchg
jecxz
js
call
or
rcl
imul
ss
test
cdq
test
push
xor
icebp
jmp
and
and
and
out
and
into
ins
fst
(bad)
adc
sbb
mov
lods
xor
mov
dec
sti
and
mov
sbb
xchg
adc
or
bswap
jge
fcomp
or
fst
xchg
xchg
xor
push
xor
int
nop
dec
xchg
nop
xchg
sub
inc
push
or
and
push
cmp
ins
btr
sub
icebp
test
xchg
test
dec
call
mov
sbb
sub
iret
loopne
jnp
jo
out
push
ds
and
dec
push
rcr
xchg
sub
outs
out
and
mov
out
pusha
sub
jnp
and
adc
movs
stos
adc
sbb
addr16
pop
mov
xchg
jl
jno
mov
out
cli
lods
jne
jae
mul
cmps
call
xchg
je
jp
outs
lea
mov
stos
push
adc
mov
sub
call
sub
es
push
pop
in
std
mov
push
(bad)
sbb
mov
mov
add
aaa
int3
sub
add
fnstenv
mov
or
pop
test
cli
fmul
adc
cmp
das
mov
fcmovb
mov
aas
imul
ret
mov
ja
xlat
xchg
push
test
mov
fwait
out
gs
fcom
mov
fcomip
push
add
in
sbb
inc
and
inc
pop
xchg
aam
sub
inc
nop
jnp
jae
jbe
loop
repz
mov
cs
and
push
mov
pusha
loop
repz
and
or
mov
adc
inc
mov
das
or
jecxz
inc
movs
sbb
popa
and
cwde
adc
mov
jne
push
ds
mov
mov
jno
iret
dec
cmp
mov
pop
and
lods
aam
out
imul
mov
xchg
xor
adc
ret
push
clc
lods
cmp
shr
pusha
fcom
fldenv
inc
movs
ja
dec
or
jbe
pop
jmp
jmp
jb
and
push
xlat
jmp
jp
jnp
push
mov
push
or
sub
stos
jne
cmps
dec
push
call
push
cmp
cmp
adc
adc
mov
outs
mov
dec
lock
jle
pop
aaa
test
inc
out
adc
jno
mul
out
lea
sbb
call
pop
push
dec
rcl
or
js
adc
cmp
xchg
and
and
into
dec
leave
mov
cmc
mov
push
or
pop
shl
sub
adc
inc
mov
fimul
dec
repz
pop
push
adc
jb
push
dec
fidiv
mov
ror
lds
adc
push
jge
test
sub
daa
sub
or
std
and
adc
cld
std
ror
add
ds
out
mov
mov
jno
add
dec
pop
xor
mov
outs
aad
xor
ret
int3
cmp
xchg
xchg
add
pusha
or
mov
dec
sar
frstor
pusha
std
cmp
lods
pop
test
lds
je
push
div
sti
xor
mov
sbb
aas
shl
push
(bad)
push
outs
aam
adc
xchg
pop
push
std
sub
adc
ss
and
sub
sbb
or
push
cmc
jmp
push
lods
sti
cmp
dec
jl
outs
retf
gs
gs
jge
fild
adc
mov
push
xor
xor
mov
sbb
sbb
rcl
(bad)
sbb
cld
mov
or
stos
inc
fwait
je
push
lods
(bad)
daa
lock
adc
iret
push
mov
push
mov
ss
pop
pushf
dec
ret
jle
mov
outs
or
push
sbb
sahf
xchg
and
adc
jne
cmp
fldenv
add
inc
push
jg
es
call
mov
lahf
sar
add
mov
sub
int3
xor
adc
push
nop
repnz
in
and
mov
jbe
xchg
fwait
test
add
imul
pushf
sar
push
jbe
ja
or
adc
sbb
cmp
(bad)
pop
je
or
push
fild
shr
in
das
test
add
jmp
push
shl
mov
dec
imul
inc
fist
lahf
pop
sbb
cmps
xchg
mov
in
jmp
xchg
inc
push
jb
lock
add
cmps
push
(bad)
retf
mov
imul
pop
aam
and
movs
int3
daa
fsub
mov
js
mov
aas
aam
jns
or
add
mov
dec
or
push
nop
cdq
fdiv
add
loop
scas
push
mov
fsubp
iret
xchg
mov
and
ret
xchg
jmp
jmp
popf
mov
shr
pop
lea
ror
loope
push
inc
mov
push
and
lock
cwde
pop
push
pop
push
loope
jmp
and
popa
rol
adc
push
jb
push
pop
in
dec
pop
cmps
test
jmp
add
or
mov
mov
cmps
mov
inc
test
ja
mov
xchg
stc
call
outs
lea
xchg
xchg
xchg
cmp
mov
adc
(bad)
pop
xchg
xchg
jmp
das
enter
push
adc
cld
mov
call
and
outs
movs
jno
ins
in
sbb
and
lock
stc
rcr
mov
mov
popf
pusha
mov
pop
call
mov
shl
std
push
les
popf
push
nop
mov
cmp
mov
in
jns
inc
jecxz
add
stos
int
xor
fsub
mov
push
xor
pusha
inc
retf
add
stos
dec
fild
inc
inc
mov
mov
cwde
add
unpcklps
jmp
lea
inc
cmp
adc
in
adc
or
loope
(bad)
xor
dec
ret
movs
das
sbb
icebp
jns
int
inc
adc
jnp
and
dec
xor
sub
jb
push
je
leave
jb
lahf
inc
push
jnp
sar
push
mov
xor
cld
sti
cwde
or
leave
inc
aas
push
fst
push
cmp
fwait
adc
outs
(bad)
push
clc
or
sub
jg
neg
mov
out
xor
icebp
cmp
xchg
xchg
push
test
in
pop
inc
loopne
push
pop
cmp
mov
add
lea
xchg
fiadd
pop
in
lods
movs
dec
mov
inc
xchg
jle
or
push
jle
loop
pop
jns
aaa
jae
iret
sbb
iret
push
test
xchg
je
outs
cmc
sub
sbb
cmp
ins
mul
jmp
push
or
call
and
sqrtps
jle
xor
lods
or
and
mov
push
add
push
push
dec
rol
loop
mov
push
pop
ja
xor
sub
not
mov
mov
inc
add
rol
jno
xor
or
add
sub
dec
sbb
shl
movs
aas
sub
push
jge
test
(bad)
and
data16
nop
pop
outs
adc
(bad)
adc
lods
sbb
nop
scas
mov
inc
mov
into
mov
scas
sbb
daa
add
or
call
mov
or
and
adc
and
or
dec
push
scas
pop
daa
sub
add
adc
xor
dec
inc
int
add
scas
adc
mov
outs
fs
hlt
scas
mov
inc
enter
adc
test
push
and
adc
daa
scas
inc
push
cmp
dec
mov
int3
add
and
xchg
inc
std
xchg
rol
daa
enter
cmc
stc
frstor
xchg
or
cld
mov
cwde
sub
scas
sbb
daa
(bad)
movs
fsub
and
adc
test
push
and
pushf
data16
add
and
hlt
and
mov
pop
scas
mov
call
and
and
add
inc
mov
int
add
mov
lods
hlt
and
xor
add
adc
rcl
mov
cld
sbb
cmp
in
sbb
mov
pop
add
or
retf
jmp
dec
pop
xchg
aas
or
hlt
fwait
inc
inc
mov
xchg
inc
mov
shr
xchg
repnz
(bad)
push
lea
mov
pop
mov
retf
cld
(bad)
popa
ins
and
cmp
cmps
lock
int3
call
or
les
push
inc
fadd
adc
add
in
rol
sub
js
rol
lods
aam
or
int
and
xchg
call
ret
sbb
adc
leave
adc
icebp
sbb
and
test
adc
int3
add
xor
ds
in
or
lock
mov
add
inc
sbb
xor
imul
mov
inc
or
adc
retf
movs
add
popa
popf
ins
sub
sbb
fcom
inc
sub
cmp
std
push
pop
or
lea
inc
jmp
or
dec
retf
ins
cmp
lahf
test
fdiv
jo
and
add
jle
sub
mov
mov
push
push
inc
or
jmp
add
inc
aam
cmp
in
push
mov
inc
xchg
cmp
pop
adc
jmp
les
cmps
mov
xor
vexp2pd
(bad)
cli
loop
out
stos
or
nop
sbb
into
or
sub
(bad)
(bad)
add
xchg
cdq
ja
les
pushw
movs
lea
or
leave
jge
inc
inc
inc
hlt
cmps
adc
xchg
stos
fisub
in
mov
aam
(bad)
repnz
xchg
cld
adc
adc
dec
stos
cli
adc
or
mov
sbb
data16
sbb
pop
sti
fild
mov
and
inc
or
jo
adc
pop
test
cld
mov
in
cmp
jge
out
jmp
mov
stos
dec
ror
(bad)
rcr
jns
test
or
test
loop
and
call
push
jg
or
ror
outs
add
loopne
sub
adc
or
test
daa
stos
call
fisubr
mov
inc
xor
sub
xchg
movs
leave
fsqrt
xchg
stos
lock
fwait
lods
add
and
dec
cmp
adc
idiv
and
add
les
inc
sub
aam
outs
int3
aam
mov
mov
dec
inc
adc
jbe
pop
mov
adc
jns
hlt
or
xchg
inc
retf
push
xor
push
dec
add
hlt
stos
sub
sub
pop
adc
sub
jo
push
cld
imul
popf
pop
mov
dec
popf
jnp
mov
inc
add
js
lods
xor
mov
and
cmps
ss
add
dec
dec
cmp
jmp
mov
pop
(bad)
jmp
outs
call
rol
rol
and
cli
inc
stos
adc
inc
add
lea
rcr
sti
pop
ins
hlt
arpl
rcr
clc
jae
cmps
sar
push
je
in
adc
jmp
cmp
add
(bad)
je
out
add
sbb
sub
in
mov
xchg
sbb
into
mov
adc
sub
xchg
and
jmp
neg
sub
push
popf
push
jb
pop
sub
mov
arpl
shr
cmp
xchg
mov
stos
popf
mov
and
push
add
jbe
sub
fisttp
jp
(bad)
xor
das
xchg
add
adc
into
inc
lds
cmps
int3
ret
loop
hlt
push
fs
xlat
xor
loop
not
into
rol
out
fdivrp
push
push
cs
add
mov
test
or
and
(bad)
mov
jmp
cmp
cmp
not
add
js
pop
and
mov
mov
push
les
nop
daa
push
pusha
sub
das
in
push
popf
jno
dec
push
mov
xor
out
push
enter
xchg
es
outs
push
add
ds
neg
xor
mov
sub
stos
daa
xor
push
xchg
movs
jle
test
pusha
ss
mov
cwde
daa
loopne
mov
call
sub
les
in
shr
xchg
xor
cmp
int
dec
xor
mov
push
and
mov
pop
push
dec
push
scas
jp
push
es
aam
mov
aas
das
(bad)
cmp
push
aad
dec
cli
in
mov
and
pop
loop
lds
adc
mov
(bad)
sbb
push
popa
push
in
jnp
xor
arpl
mov
adc
stos
jne
and
push
adc
retf
or
inc
or
xor
add
mov
scas
cmps
mov
push
pop
lahf
push
(bad)
outs
sbb
fild
ja
rcl
pop
clc
push
add
add
inc
mov
fdivr
add
jge
out
sub
cmp
test
inc
push
retf
and
ret
dec
pop
adc
push
div
xlat
out
retf
pop
push
pop
push
ror
xchg
pop
adc
fmul
inc
add
inc
aad
test
call
out
out
cld
cli
adc
jl
mov
sub
or
popf
or
or
and
pop
inc
dec
xor
inc
imul
xchg
inc
fadd
and
sbb
xchg
call
cli
ins
call
cmps
fisttp
retf
pop
retf
mov
sub
mov
adc
fs
das
cmp
xchg
push
out
retf
cwde
inc
and
cli
retf
dec
and
adc
inc
call
or
and
sbb
mov
es
or
adc
adc
test
fwait
xor
jmp
cmp
mov
or
mov
xchg
les
add
adc
retf
outs
add
pusha
enter
stos
sbb
pop
push
movs
sub
mov
jo
pop
mov
jmp
movs
lahf
or
mov
movs
std
xor
int
retf
cmc
add
test
cdq
retf
xor
cmps
mov
push
adc
adc
sbb
cmps
push
sub
test
xlat
jae
push
fcom
inc
add
stc
pop
or
cmp
or
popf
jp
aas
mov
daa
sahf
pop
mov
mov
push
push
fnstcw
aas
pop
lahf
adc
xor
mov
push
and
push
xchg
cmp
mov
inc
enter
dec
dec
aad
and
mov
dec
mov
jmp
shr
xchg
stc
(bad)
and
movs
push
or
shl
ins
dec
and
or
add
add
sbb
fstp
and
and
add
sbb
add
lea
and
or
out
(bad)
and
mov
into
cs
cmc
jbe
xchg
mov
pusha
and
out
jne
sub
stc
sbb
cmps
das
cmp
or
dec
es
in
sub
cmp
cld
sub
cmp
cld
mov
cli
dec
push
sbb
fldenv
icebp
push
xchg
xlat
cmp
call
push
sub
or
cld
add
data16
test
adc
(bad)
mov
pop
inc
call
or
(bad)
jbe
mov
and
mov
jbe
mov
and
nop
pop
dec
mov
jne
jns
stos
or
sbb
shl
push
leave
ret
mov
inc
cmp
stos
mov
cdq
test
popa
or
ins
enter
test
(bad)
adc
test
push
scas
and
jbe
and
loopne
mov
daa
inc
int3
jle
push
inc
popf
loope
add
ret
fimul
(bad)
repnz
stos
xchg
cmps
test
pop
and
or
movs
sahf
mov
inc
push
xchg
shl
(bad)
iret
imul
loopne
jl
daa
dec
add
dec
mul
jmp
dec
lock
mov
lock
pop
mov
pop
xchg
jnp
les
call
addr16
adc
jle
clc
pop
xchg
shr
pop
jle
(bad)
sahf
pop
test
mov
shl
add
mov
and
jne
mov
rcr
sbb
pop
popa
pop
adc
mov
mov
pusha
pop
jmp
fsubr
adc
(bad)
jp
loopne
dec
mov
lea
or
xor
outs
arpl
push
jb
movs
adc
test
and
jne
mov
or
jae
pop
sub
ins
lods
int
push
movs
and
mov
test
and
(bad)
mov
dec
ror
jns
xchg
aad
in
fcomp
pusha
jnp
in
sbb
ds
(bad)
and
adc
cmp
das
mov
inc
ins
adc
shl
lea
stc
test
mov
and
adc
sbb
out
ror
xchg
(bad)
(bad)
gs
lea
adc
add
adc
mov
inc
cmp
push
pop
data16
mov
ss
mov
fwait
or
sbb
jmp
cmp
mov
xor
dec
xchg
and
dec
test
xchg
xor
dec
mov
hlt
inc
adc
inc
idiv
or
jns
push
fbld
pop
ror
hlt
push
dec
lds
test
sub
or
jmp
sub
add
xchg
dec
rol
xor
dec
sub
push
and
sub
inc
add
dec
sti
or
inc
xchg
test
push
cld
aam
ja
int3
dec
and
push
xor
xchg
shr
xor
cwde
adc
lock
cmp
jl
(bad)
mov
push
les
mov
test
movs
and
push
mov
pop
dec
mov
and
push
add
call
enter
jmp
aad
pop
adc
dec
fnstsw
push
movs
dec
enter
push
push
rol
add
jp
sub
mov
or
xor
mov
jo
ficomp
in
ins
mov
push
sub
loopne
inc
rcr
cmp
push
int3
push
rcr
adc
pop
rol
jmp
and
xchg
popa
test
lods
dec
jmp
or
pop
and
push
pop
jle
and
dec
stos
xor
push
add
jge
mov
jg
aam
loope
or
push
or
push
or
adc
or
adc
mov
dec
loop
push
mov
sub
mov
repz
sub
xchg
xor
sbb
or
mov
mov
imul
pop
sbb
(bad)
rcl
mov
test
sti
pushf
sbb
rcr
scas
aaa
inc
mov
rcl
call
push
imul
xor
in
pusha
outs
mov
js
push
leave
mov
pusha
adc
add
out
mov
shr
test
adc
or
int3
movs
loope
cwde
adc
mov
scas
xor
cmp
sbb
jnp
icebp
adc
and
in
iret
scas
inc
jo
fadd
in
xchg
scas
sti
and
shl
and
or
mov
push
in
push
or
iret
add
popa
push
lods
fcmove
inc
and
adc
cmp
mov
adc
in
test
xor
push
push
adc
movs
cmp
ret
or
ins
mov
xchg
mov
or
cld
lahf
fldcw
cmps
inc
dec
mov
out
test
mov
std
and
mov
ins
mov
xor
xor
adc
icebp
pop
xchg
sbb
dec
jns
sbb
imul
and
push
and
hlt
jl
inc
(bad)
pop
(bad)
cld
adc
mov
sbb
hlt
pop
out
sbb
xchg
push
cmps
jle
cmps
cmp
call
enter
test
adc
cmp
je
jecxz
imul
rcl
daa
mov
push
pop
dec
lahf
adc
and
adc
enter
(bad)
or
in
ror
mov
or
pop
add
sub
inc
test
push
adc
dec
ss
dec
add
cwde
pop
xchg
cwde
push
xor
cmc
sub
das
bound
xlat
pop
add
call
pop
aas
cmp
out
loopne
xor
pop
mov
adc
or
sub
nop
inc
sahf
adc
push
jbe
cmps
cdq
pop
scas
jecxz
fs
fsubr
aam
pushf
mov
leave
inc
cmp
hlt
xchg
and
sub
mov
test
dec
inc
adc
mov
and
mov
xchg
adc
add
push
xor
push
and
movlhps
jno
mov
cmp
je
pop
outs
inc
xchg
retf
pop
or
das
mov
push
sub
pop
sbb
je
xchg
xor
add
xor
xchg
and
cdq
fiadd
sar
std
adc
push
je
test
add
mov
daa
add
adc
cwde
fadd
ficomp
push
mov
or
clc
and
jge
ins
in
jns
mov
out
cmp
sub
mov
and
add
sub
or
add
and
cmc
cdq
shr
inc
(bad)
adc
pop
ss
sbb
shl
pushf
shr
sti
retf
hlt
int3
cmps
dec
xchg
or
mov
dec
jns
call
jmp
out
fs
add
and
out
(bad)
cmp
imul
out
cmp
push
adc
add
pop
inc
sub
or
jmp
inc
ret
add
in
adc
push
retf
in
cmp
je
inc
or
cmp
test
test
sbb
hlt
and
(bad)
std
mov
pop
mov
xchg
fadd
sahf
mov
ss
push
sub
jg
call
jecxz
call
mov
cmp
push
rcr
sbb
ficom
adc
movs
bound
(bad)
jns
pop
mov
dec
cmp
mov
fnstenv
cs
lods
retf
jge
cmp
ror
cmp
das
xchg
pop
inc
(bad)
enter
enter
jmp
push
test
mov
push
or
test
push
cmps
lods
call
sbb
mov
(bad)
jmp
and
cmp
xor
enter
aam
sub
clc
or
xor
pop
lods
pop
rol
sete
push
into
push
jnp
mov
loope
pop
ror
xor
add
lea
fadd
(bad)
inc
mov
sub
xchg
jbe
std
jno
cmp
mov
stos
push
or
sub
xlat
mov
jno
inc
xchg
fs
add
jle
or
ss
js
test
pop
mov
(bad)
cmps
jno
xchg
push
or
jmp
sbb
and
ss
inc
imul
push
ret
pushf
mov
xchg
inc
sub
inc
ins
or
jp
outs
xchg
dec
mov
xor
push
mov
cmp
inc
inc
rcr
xchg
add
xor
cmps
jmp
or
les
add
out
jne
lds
jb
scas
in
movs
aaa
mov
leave
dec
das
sub
fisub
dec
daa
dec
fisub
fdivr
cmps
xchg
cmp
test
and
adc
inc
fiadd
shr
mov
movs
mov
int
jge
or
mov
icebp
inc
add
sub
mov
dec
pop
mov
fs
sti
sub
test
sbb
or
ins
test
nop
mov
ret
lock
nop
aam
or
adc
cs
test
popa
inc
sbb
scas
adc
movs
jl
jg
add
add
in
pusha
lock
adc
enter
cmp
add
jb
push
jle
idiv
xor
push
scas
sub
stc
xchg
movs
mov
push
fcom
cmp
cmp
clc
clc
retf
xor
int3
dec
and
sub
jmp
push
rcr
adc
repz
adc
push
pop
add
mov
xchg
or
or
sbb
fnstenv
test
dec
cmp
cmp
xchg
and
jg
cmp
dec
and
popf
sbb
mov
push
mov
mov
cmp
nop
adc
ret
mov
sbb
lods
sub
dec
cmps
or
scas
sub
(bad)
jo
inc
fmul
pop
mov
sub
xchg
adc
push
add
shl
jne
xchg
dec
loop
or
out
scas
ja
dec
inc
mov
test
sub
or
inc
adc
call
and
inc
mov
and
cli
mov
mov
test
and
repnz
mov
out
test
inc
into
dec
cmp
and
retf
sbb
mov
daa
loope
inc
sub
hlt
jg
inc
push
jle
push
test
int3
or
add
dec
sub
mov
mov
push
ja
mov
xor
ins
mov
mov
or
fimul
scas
cwde
(bad)
mov
and
add
sbb
adc
data16
mov
(bad)
sub
mov
dec
dec
push
fcom
test
dec
movs
and
leave
aaa
lods
das
xchg
dec
nop
dec
shr
aad
add
mov
dec
bound
xchg
jo
call
add
push
push
mov
or
bswap
dec
mov
mov
sbb
adc
add
ror
inc
pop
mov
and
mov
aas
pop
mov
sbb
fs
jmp
adc
add
and
adc
mov
lods
aaa
stos
inc
xchg
or
xor
pop
add
dec
ss
adc
mov
loope
jmp
fldenv
test
mov
test
xchg
dec
mov
out
sahf
scas
mov
jbe
jae
dec
jbe
and
mov
push
sub
xchg
dec
or
ss
ins
mov
test
mov
or
ret
daa
add
add
call
scas
dec
mov
push
je
or
pop
retf
mov
leave
lods
sub
out
shl
jl
push
and
not
call
cli
aaa
addr16
dec
push
mov
jl
or
scas
enter
fdivr
and
xor
cmp
sub
sahf
iret
test
mov
cmps
xchg
push
test
or
mov
adc
sti
cmp
xchg
(bad)
adc
sub
scas
movsx
lds
mov
mov
fdivr
xor
adc
call
cld
aas
lods
clc
or
bound
test
gs
and
add
push
nop
adc
jae
in
pop
test
test
call
add
mov
mov
(bad)
or
outs
loope
adc
pop
jmp
imul
push
or
jne
imul
add
dec
fwait
pusha
js
pop
ins
push
push
leave
cmp
xchg
jae
pop
adc
les
in
inc
mov
stos
data16
enter
adc
xchg
test
push
pop
xchg
cwde
adc
and
sub
ins
dec
pop
xor
push
adc
add
ret
inc
lds
leave
inc
dec
pop
cmp
ror
add
jno
cwde
push
enter
mov
call
mov
and
push
mov
and
ss
mov
leave
adc
stos
pop
jo
add
(bad)
adc
mov
gs
outs
fsubr
(bad)
jmp
in
test
mov
(bad)
mov
sub
lock
add
loop
adc
push
sub
and
jo
and
xor
push
jge
(bad)
ins
adc
mov
mov
mov
adc
inc
aad
dec
(bad)
xlat
mov
sar
mov
jge
pusha
stos
add
xchg
popf
mov
call
jmp
mov
and
mov
add
test
outs
inc
and
ror
push
cdq
add
sti
scas
outs
mov
jns
cdq
rcr
adc
stos
inc
xchg
mov
mov
ret
or
cs
fnsave
enter
mov
imul
stc
cmp
out
sub
adc
mov
nop
sbb
test
and
or
in
jo
shl
xchg
or
mov
jp
jg
test
test
aaa
scas
js
sbb
xchg
dec
(bad)
xor
cmp
les
xor
fs
int
les
je
pop
cli
(bad)
pop
inc
mov
push
nop
or
xor
pop
mov
ins
adc
sub
sbb
cwde
pop
sbb
jmp
adc
cli
or
lods
sbb
loop
test
fcom
fcomp
outs
mov
xor
jp
inc
adc
and
data16
(bad)
jmp
mov
inc
mov
inc
sbb
sub
mov
test
adc
fnstcw
arpl
or
imul
lods
dec
pushf
fisub
(bad)
test
cvtps2pi
or
mov
mov
push
or
ror
cli
cmp
add
je
movs
lds
and
and
or
jle
sbb
push
je
add
mov
push
pop
ss
dec
test
or
jp
popf
stos
shl
loop
add
lsl
sar
sbb
repnz
aam
enter
push
inc
inc
mov
inc
push
(bad)
scas
jecxz
fs
shl
add
bnd
push
enter
push
stos
dec
jne
inc
add
jbe
or
and
loopne
(bad)
adc
ins
cld
cmp
and
and
je
sub
push
push
push
mov
pushf
shr
in
sar
xor
mov
sbb
daa
fsubr
fs
call
mov
pop
test
fmul
push
adc
hlt
lea
push
(bad)
div
aaa
push
mov
in
icebp
cmp
call
in
jl
mov
fs
in
out
dec
test
scas
sub
sub
or
repz
adc
mov
call
addr16
and
test
and
add
ror
les
stos
mov
das
jne
xlat
dec
rcl
add
dec
and
retf
aam
jle
bound
adc
stc
jg
or
(bad)
push
icebp
out
mov
call
sti
cmps
ror
jns
pop
xlat
inc
or
aas
sar
call
pop
aad
cmp
pop
aam
in
pop
sbb
lds
sahf
ret
fsubr
aad
xor
cmp
sub
push
cmp
out
repz
mov
sub
adc
enter
pop
imul
fwait
arpl
cdq
pop
sub
popa
fcmovb
fistp
arpl
xchg
mov
loopne
out
push
pushf
sub
add
add
outs
dec
jl
xor
dec
dec
mov
add
add
push
nop
rcr
push
mov
add
xor
mov
mov
ror
mov
sub
xchg
outs
aas
adc
fisttp
jl
xchg
mov
cmc
(bad)
ins
(bad)
mov
in
dec
cmp
out
es
lahf
push
push
xchg
stos
lds
mov
xchg
xchg
(bad)
out
adc
pop
fimul
jno
sbb
ss
mov
dec
xchg
mov
ins
sub
inc
pop
add
push
dec
jnp
outs
cwde
inc
xlat
mov
unpckhps
cmp
and
jb
sbb
test
push
add
xor
test
movs
push
push
ins
push
(bad)
(bad)
(bad)
(bad)
and
sub
and
sbb
xchg
adc
xchg
stos
into
imul
add
push
lea
adc
add
push
push
dec
cli
retf
stos
retf
sbb
jle
cld
ins
movs
or
outs
xchg
cdq
jns
inc
or
adc
ja
adc
test
push
sub
sub
sbb
cmps
xlat
lock
pop
les
loope
mov
jnp
cmps
lods
retf
jae
inc
cmc
mov
push
and
std
sbb
(bad)
pop
sub
jnp
(bad)
ja
fcomp
or
cmp
(bad)
and
fsubr
push
add
sahf
fnstenv
adc
test
call
lods
nop
sahf
fs
daa
sar
push
add
stc
cmp
push
out
and
icebp
pop
jg
das
lds
xor
(bad)
push
mov
or
add
mov
cdq
add
aas
xchg
outs
sar
getsec
clc
fcomp
iret
lods
(bad)
in
leave
call
mov
ds
push
add
cli
bound
pop
xchg
adc
jo
adc
(bad)
push
xchg
scas
outs
push
aas
and
or
push
mov
jl
aaa
jne
daa
jno
and
ins
call
dec
push
mov
adc
test
add
xchg
jp
fcmovbe
(bad)
mov
fild
push
test
fild
jmp
add
ret
(bad)
jmp
lods
pop
mov
sbb
cmp
jbe
push
ret
cwde
jne
pop
adc
ss
enter
and
xchg
cmp
mov
adc
aad
hlt
das
mov
ret
mov
call
jg
xchg
inc
mov
and
jnp
fwait
int3
mov
std
iret
ror
out
cmp
push
sub
and
outs
add
push
xor
and
inc
aam
dec
sub
jge
push
mov
inc
sbb
xlat
add
(bad)
(bad)
shl
fild
mov
inc
sbb
sub
repnz
inc
push
add
cdq
push
pop
jmp
test
call
cmp
jb
repnz
mov
mov
jecxz
mov
mov
test
add
fstp
sbb
and
es
add
popf
push
add
pop
call
mov
mov
aam
pop
(bad)
fcmove
jbe
pop
cmp
push
xchg
inc
xchg
cmp
(bad)
(bad)
cld
cmp
jo
test
(bad)
shl
out
cmp
lds
sub
add
lahf
out
jp
xchg
mov
or
loope
and
mov
std
(bad)
ss
mov
sbb
sbb
ret
lock
add
jno
in
(bad)
(bad)
(bad)
fwait
xchg
inc
mov
push
jo
aam
out
mov
mov
outs
dec
sti
bound
xor
jmp
ret
xchg
aam
pop
adc
scas
adc
mov
cmp
jo
jmp
js
test
pushf
push
cmp
pop
addr16
scas
aam
movs
neg
bnd
mov
pop
iret
fdivr
xchg
push
test
sbb
in
in
call
arpl
and
out
mov
adc
cli
imul
shl
dec
or
daa
cmp
in
loope
fs
push
mov
and
pusha
js
mov
cmp
dec
enter
xchg
xchg
test
push
push
fs
inc
jns
sbb
mov
pop
add
sbb
xchg
mov
jb
push
test
push
push
inc
sbb
cmps
movs
cmp
adc
inc
or
xchg
push
adc
dec
or
test
inc
dec
xor
adc
mov
retf
imul
or
mov
fadd
mov
pslld
lea
nop
push
iret
dec
or
cmp
or
or
dec
jecxz
cmp
dec
pop
push
rcr
aas
in
out
test
mov
or
jmp
sbb
bound
and
clc
adc
sub
mov
test
pop
sub
xchg
xchg
jb
lods
push
mov
xchg
push
pop
sub
leave
ror
dec
mov
or
xchg
(bad)
in
mov
xchg
mov
js
imul
addr16
sub
xlat
repnz
mov
aaa
push
movs
js
imul
popa
out
in
in
adc
dec
mov
and
inc
(bad)
jo
push
cmp
cmp
lods
sahf
std
(bad)
push
lods
pop
lock
xchg
setge
outs
lods
movs
movs
stos
cmps
test
mov
aad
test
xor
rcl
rcr
(bad)
ja
pop
jecxz
fs
xlat
mov
push
or
ds
jmp
cli
jnp
in
dec
test
adc
in
not
fstp
push
inc
test
push
test
cdq
out
aam
js
(bad)
shr
cli
pop
pusha
gs
cmp
mov
xchg
je
inc
js
and
mov
and
shr
mov
push
mov
mov
or
and
leave
push
aam
lea
sub
ror
jae
mov
enter
cmp
out
inc
adc
in
ins
scas
adc
retf
and
xchg
mov
(bad)
mov
cmp
pop
pusha
frstor
loop
repz
fistp
lods
jne
popf
cmps
xor
das
cmp
call
mov
xor
adc
mov
(bad)
sub
call
lock
retf
stc
data16
int
cmp
xor
sub
add
in
xor
(bad)
sub
ins
mov
mov
mov
xchg
and
arpl
add
jbe
pop
mov
cwde
or
xor
lods
clc
pop
add
inc
add
sbb
or
jae
sahf
lods
pop
cmc
test
jb
loope
jae
test
(bad)
lock
add
add
data16
jmp
adc
cmp
mov
outs
in
mov
add
les
jmp
cwde
dec
mov
stc
call
ins
mov
ret
aaa
mov
or
and
inc
fmul
or
in
es
mov
pop
gs
xor
into
rcl
jp
enter
enter
dec
jne
mov
xchg
in
dec
mov
test
frstor
sbb
outs
push
std
stc
xor
dec
adc
mov
(bad)
in
push
mov
jbe
jecxz
in
test
xchg
int3
pop
ins
xor
mov
js
sbb
sti
das
jmp
fmul
mov
cmp
cmp
out
cli
xor
or
das
and
jo
add
test
int3
ins
in
jne
test
jmp
test
sti
mov
lods
inc
and
hlt
inc
push
mov
xchg
inc
jne
rcl
test
dec
mov
es
jle
das
push
or
xchg
test
ins
and
pop
push
push
mov
daa
add
inc
push
sub
pushf
adc
sbb
aam
(bad)
cmc
(bad)
and
inc
and
aas
into
test
mov
mov
cmp
and
mov
mov
sbb
sbb
sbb
jne
mov
dec
push
fldenv
pop
popf
ins
push
js
dec
push
and
ret
int3
and
dec
add
nop
mov
adc
jae
popa
lds
pop
push
push
mov
cdq
xchg
adc
nop
jno
cdq
mov
adc
mov
inc
sub
aad
inc
dec
push
jp
push
mov
leave
inc
add
outs
ss
mov
aad
xor
lahf
in
int
jl
inc
and
xchg
repnz
sub
test
adc
sti
sub
outs
mov
jno
adc
jne
jae
fs
mov
mov
cmp
vpaddsb
add
cli
push
and
add
clc
scas
pusha
xor
mov
xchg
icebp
shl
add
push
cmps
scas
sub
gs
xchg
bound
je
bound
ret
mov
call
jb
xor
mov
jmp
xchg
push
adc
and
adc
pop
adc
cld
fisttp
xchg
sbb
mov
push
add
stos
dec
xchg
push
gs
fdiv
jnp
inc
ficomp
icebp
in
test
adc
test
xchg
and
icebp
movs
(bad)
aaa
les
in
mov
or
and
nop
fld
lea
or
dec
dec
push
in
mov
inc
mov
pop
sub
shl
pop
pop
scas
sub
jae
mov
ss
push
jo
stc
test
pop
je
push
sbb
and
jbe
xor
cmp
out
addr16
cmps
and
imul
add
cmp
or
pop
sub
inc
dec
cmp
sbb
loopne
sti
sahf
stc
mov
fcmovne
push
int3
mov
shl
pop
add
scas
ss
dec
mov
loopne
mov
sbb
xor
cmp
pop
(bad)
jl
std
mov
inc
jb
xlat
stos
add
jne
mov
push
xor
add
fstp
adc
cmp
ss
das
rol
not
adc
add
adc
cmp
add
jecxz
and
xor
xor
jl
cmp
adc
popf
cmp
inc
cmps
(bad)
jmp
ror
pop
ror
(bad)
out
push
lock
call
jb
xor
sbb
pusha
loopne
adc
xor
pop
jle
out
mov
push
sti
pop
mov
sti
jle
retf
add
and
(bad)
iret
cmp
outs
push
cdq
xchg
jmp
out
cdq
sbb
adc
push
add
push
fs
fwait
aaa
es
shl
aam
out
gs
frstor
inc
in
movs
loopne
ret
jg
adc
mov
pop
hlt
std
or
ja
fsubr
and
and
cmp
(bad)
es
cmp
mov
adc
and
in
mov
mov
inc
push
out
mov
fwait
adc
imul
mov
sbb
and
movs
sbb
test
inc
xor
call
mov
fldenv
neg
pop
xor
push
mov
call
inc
sub
inc
push
xchg
cmp
push
inc
adc
sar
or
dec
call
pop
dec
add
jbe
test
retf
inc
popa
mov
xor
lock
add
scas
and
clc
pop
popf
in
mov
xor
lea
xchg
ret
adc
sub
and
leavew
test
jbe
cmovge
arpl
mov
sub
pop
add
shl
loope
in
ret
sub
ja
es
mov
nop
adc
adc
inc
xchg
fmul
or
mov
stos
fldcw
inc
cmp
xchg
(bad)
mov
daa
mov
add
mov
mov
dec
and
lea
push
icebp
es
jne
lea
push
and
push
adc
xor
nop
cs
and
push
pop
mov
fcomp
add
xor
popa
cdq
hlt
(bad)
push
fmul
xchg
(bad)
adc
stc
das
adc
and
mov
das
sub
adc
push
xlat
sub
fmul
sub
dec
daa
jl
or
je
dec
adc
imul
xchg
pusha
inc
in
adc
movs
and
push
fmul
je
push
adc
sbb
jns
mov
adc
jnp
xlat
and
or
add
retf
xchg
sbb
push
sub
arpl
imul
push
retf
push
or
mov
sbb
addr16
jno
test
and
jns
push
mov
jmp
xchg
inc
cmps
cmp
lea
inc
movs
out
aam
fsubr
inc
mov
xchg
sbb
test
sti
or
mov
mov
cmp
fistp
movs
aad
jo
test
je
cmp
pop
iret
or
jmp
xchg
mov
in
jmp
add
fistp
(bad)
sar
sbb
jg
push
rcl
ja
mov
xchg
shl
mov
(bad)
enter
mov
outs
call
fistp
pop
into
xchg
jmp
inc
js
out
cs
jbe
sub
pop
jl
dec
test
aam
xchg
fwait
in
mov
mov
jg
mov
xchg
xor
and
sub
loopne
mov
jmp
ror
cmc
jp
adc
in
adc
ss
push
adc
or
xchg
fs
mov
leave
and
add
bound
enter
rcr
mov
std
icebp
pop
and
cmp
or
into
jmp
dec
je
dec
fist
jmp
mov
or
shl
push
lea
(bad)
test
fild
ja
mov
scas
add
rcl
in
pop
sub
xchg
xchg
jle
mov
xchg
je
or
push
popa
jp
or
sar
adc
and
ss
and
cdq
adc
inc
xchg
inc
cmps
rcl
push
and
test
and
aad
adc
mov
rol
es
pop
in
dec
inc
push
push
cmp
call
popa
fsubrp
into
mov
push
pop
ja
dec
push
push
mov
mov
mov
push
jno
lea
jp
or
jl
fnstsw
add
or
cmp
add
add
jae
ret
dec
mov
pop
ror
sub
xchg
adc
pushf
sbb
shl
add
hlt
adc
fwait
jle
jbe
inc
(bad)
adc
clc
out
sbb
cwde
lds
mov
call
sbb
aad
mov
mov
sub
cld
cmp
pop
daa
jg
jne
fs
and
push
add
mov
pop
add
je
or
inc
fbstp
inc
add
add
and
add
add
add
xchg
add
adc
retf
add
icebp
jle
pop
fsub
mov
jg
jmp
fist
mov
pusha
aam
lods
adc
xchg
or
mov
mov
adc
(bad)
das
mov
jg
repnz
or
fwait
inc
ins
repz
mov
lds
hlt
push
xor
xor
outs
test
mov
cwde
push
mov
in
inc
int3
push
or
sub
xchg
pop
mov
cmovne
movs
cmp
push
ror
push
shr
ins
jmp
mov
dec
push
and
dec
push
leave
mov
imul
adc
mov
das
jecxz
imul
adc
lods
xchg
test
or
hlt
je
mov
ins
call
push
ins
in
outs
push
xor
das
mov
cmps
pop
push
sbb
pop
push
inc
pushf
push
adc
arpl
call
dec
cdq
cdq
jmp
retf
cwde
and
call
sbb
sbb
mov
test
inc
cmp
mov
push
out
pop
inc
shr
adc
inc
dec
adc
sbb
sbb
ror
xor
xlat
or
sbb
sbb
das
push
imul
movs
daa
in
sbb
or
or
in
sub
das
es
adc
dec
push
ror
repz
fcom
push
clc
adc
sbb
cmp
jp
jno
jnp
jno
adc
repz
sub
loopne
and
mul
xor
out
fdiv
push
cmps
mov
inc
add
and
scas
leave
or
fisub
cmps
mov
push
test
or
push
sub
movs
mov
adc
pop
mov
xchg
and
aam
cmps
cdq
add
adc
(bad)
and
in
sbb
sub
or
pop
xchg
hlt
in
dec
dec
pop
bound
sbb
test
xchg
xchg
xor
leave
and
rcl
(bad)
aad
test
add
sbb
mov
lods
in
sbb
repz
nop
pop
xchg
fild
lods
sbb
imul
mov
mov
xlat
and
xor
cmp
cld
sub
ds
cmp
stc
loope
adc
mov
shl
sbb
xlat
pop
xor
shl
xchg
fs
aas
dec
or
dec
jo
push
in
inc
lock
xchg
and
jo
mov
popa
daa
push
pushf
inc
push
inc
sub
shl
and
push
fucomip
fstp
mov
pushf
lea
daa
call
int
inc
pop
ret
jmp
cld
xor
mov
les
xchg
jle
inc
mov
sbb
addr16
dec
ret
dec
rol
push
jo
test
rcl
inc
jl
xchg
add
dec
sbb
cmp
inc
sbb
adc
sbb
pushf
aaa
cwde
rcl
push
por
jecxz
fcmove
push
js
inc
mov
sub
mov
ds
mov
loop
xor
(bad)
call
icebp
repz
xor
ds
or
ds
daa
test
pop
cli
cmp
dec
push
dec
pop
imul
enter
or
enter
lock
ss
cmp
in
mov
imul
test
cwde
or
lea
mov
adc
mov
pop
ins
add
enter
push
push
test
pusha
popf
inc
xor
rcr
cld
ds
das
mov
fdiv
sbb
mov
sbb
test
ja
push
fdiv
adc
sub
pop
mov
dec
dec
aad
add
adc
dec
dec
or
mov
pop
pusha
xchg
push
icebp
popf
dec
ret
xchg
fmul
in
jne
(bad)
mov
mov
sub
cli
popf
adc
fisubr
adc
push
leave
sbb
mov
cmps
push
stc
pop
loop
xchg
fnstcw
xchg
retf
test
xchg
mov
add
inc
xchg
or
jmp
clc
sub
inc
add
dec
lods
fsubr
xchg
xchg
xor
xchg
push
hlt
or
add
cmc
test
leave
add
adc
push
hlt
or
mov
adc
ret
call
jecxz
ins
pop
or
inc
inc
jge
mov
retf
mov
cmp
sbb
jbe
xor
movs
inc
or
jb
scas
and
aam
inc
imul
rol
inc
add
movs
fs
nop
xor
sub
adc
mov
aaa
push
dec
es
dec
mov
cmps
mov
clc
or
nop
movs
add
sbb
or
pop
pop
mov
test
or
loop
test
mov
in
(bad)
jae
dec
sub
inc
adc
dec
cmps
les
sbb
adc
sub
cmc
aam
out
push
and
adc
cld
bound
(bad)
dec
adc
lea
pop
xchg
rcl
les
xchg
jb
push
lods
or
pop
in
nop
inc
ror
pushf
test
rol
enter
or
mov
pop
and
movs
add
data16
xor
frstor
xchg
test
jbe
add
mov
aad
nop
push
fcmovu
xchg
fnstcw
cmp
pop
daa
sub
bound
dec
adc
rcl
jmp
call
mov
dec
mov
and
push
mov
inc
push
hlt
jmp
inc
arpl
jl
fs
push
dec
mov
mov
aaa
sub
ss
jecxz
adc
sar
das
aad
push
mov
or
pop
call
adc
and
outs
cmp
push
jp
adc
setg
outs
loop
adc
pop
xchg
pop
add
call
(bad)
sbb
adc
dec
or
dec
and
daa
bound
sub
xlat
rol
sub
pop
xor
xor
add
mov
xchg
stos
push
hlt
stos
mov
ficom
test
(bad)
push
jmp
jmp
adc
jg
ja
xor
add
nop
dec
adc
xchg
js
mov
cli
and
inc
imul
xor
cmc
mov
jbe
mov
inc
cmp
and
pop
jecxz
(bad)
lahf
sub
outs
mov
dec
cmps
into
inc
loopne
ret
adc
pop
pop
out
xor
jb
inc
call
sub
inc
fwait
inc
jmp
in
loopne
jmp
sbb
mov
movs
sti
hlt
inc
pop
inc
jle
imul
loope
stc
movs
mov
pop
loop
cmc
scas
movs
fcomip
jge
jo
mov
es
out
jbe
cld
cmp
push
sti
inc
xor
mov
cli
(bad)
idiv
psubq
(bad)
xchg
cmovo
adc
cs
mov
(bad)
int
cmp
xor
mov
sub
push
jno
or
cmp
sbb
xchg
int3
pop
sub
push
cmps
popa
push
dec
xchg
jae
adc
test
inc
in
sbb
repnz
mov
lock
inc
mov
or
test
xchg
fwait
pushf
jnp
cld
cli
sub
jl
iret
(bad)
xor
adc
sbb
(bad)
or
sub
inc
adc
jl
pop
mov
add
hlt
push
inc
mov
clc
adc
sahf
loopne
popw
xchg
jmp
rcl
dec
push
add
inc
das
dec
add
inc
fs
mov
adc
pop
xchg
push
dec
xchg
jns
nop
or
jle
add
push
movsx
and
ds
loop
dec
test
cmps
jne
in
sar
mov
out
and
dec
xor
and
mov
mov
xchg
add
xor
cli
cmp
xor
xchg
test
adc
xchg
mov
mov
les
or
or
sbb
sbb
popf
retf
mov
inc
mov
mov
inc
jb
fadd
mov
mov
cmp
xchg
pop
sub
test
mov
into
add
mov
xor
call
mov
adc
adc
lods
in
or
adc
jae
lahf
mov
mov
inc
(bad)
lock
lds
inc
movs
pop
and
mov
add
loopne
enter
cmp
ror
push
popf
or
mov
or
xchg
push
and
test
push
repnz
les
mov
in
mov
adc
push
add
inc
sub
mov
and
sbb
enter
and
or
adc
scas
pop
inc
add
fcom
adc
fwait
leave
sub
dec
inc
push
and
test
xchg
adc
outs
adc
add
(bad)
les
or
and
aam
sbb
test
mov
dec
ss
sbb
dec
or
js
adc
loopne
into
aad
jne
test
and
push
fs
lock
jmp
jl
jmp
in
push
jecxz
mov
hlt
and
movs
or
add
push
add
xor
jmp
sub
cmp
movmskps
ins
outs
sbb
push
stos
mov
xchg
add
ret
iret
jo
sub
sub
icebp
jecxz
push
(bad)
push
adc
leave
fnstsw
mov
stos
imul
xor
xor
mov
or
ss
stos
imul
push
mov
mov
(bad)
clc
js
sub
(bad)
push
pop
(bad)
mov
repz
ja
mov
jl
cmps
push
in
(bad)
rol
and
mov
sub
popa
add
dec
xchg
cld
in
les
jg
jge
xchg
lods
dec
in
(bad)
mov
xchg
in
pop
pop
lea
mul
ror
adc
cli
retf
fcmovnbe
mov
adc
mov
pop
rcl
aad
mov
push
mov
jmp
mov
push
pop
je
jmp
lods
outs
and
push
inc
scas
xor
cmp
enter
or
mov
sbb
sub
xor
push
pop
inc
cmp
and
sub
test
adc
test
jbe
data16
shr
mov
out
hlt
(bad)
sbb
repnz
cmp
pop
and
in
sub
into
mov
push
inc
ja
(bad)
enter
daa
test
mov
sbb
call
add
adc
mov
out
mov
jg
jp
retf
sbb
inc
adc
ret
push
test
pop
push
retf
push
push
ss
push
fst
xor
push
mul
jg
jmp
rol
adc
(bad)
or
dec
or
inc
pop
repnz
inc
repz
rep
ss
imul
outs
clc
inc
je
inc
cs
std
add
pop
add
and
in
mov
fbld
xchg
cmp
pmuludq
cmc
movs
add
adc
mov
test
cmp
mov
clc
arpl
lods
mov
sbb
jb
or
cmp
push
adc
push
sub
mov
and
test
cmp
inc
ret
cmp
and
daa
stc
adc
pusha
and
cmp
adc
jae
leave
inc
add
imul
dec
dec
mov
pop
sbb
mov
mov
push
push
ds
clc
and
sbb
lahf
gs
nop
cmp
cld
rcl
cmp
fild
test
and
cmps
inc
mov
std
ins
mov
pop
xchg
inc
and
xchg
shl
xchg
and
nop
movs
jl
push
and
and
pop
js
add
and
and
sub
and
dec
mov
or
sti
mov
or
jo
mov
pop
pop
mov
sar
mov
stos
jmp
xchg
addr16
jmp
pop
mov
xor
or
call
inc
or
add
out
mov
add
scas
and
mov
sub
jb
mov
fsub
and
daa
jg
sti
cmp
dec
xlat
pushf
mov
pop
idiv
ins
jbe
or
iret
inc
cdq
and
ss
fld
push
dec
daa
mov
and
stos
mov
jo
stos
add
pop
xor
test
push
add
inc
mov
retf
movs
stos
cwde
push
add
xchg
pop
mov
inc
mov
inc
rep
call
push
adc
inc
mov
rcr
sub
jne
daa
sar
and
mov
mov
xchg
adc
dec
or
xor
push
idiv
adc
dec
and
push
adc
ror
cs
mov
xchg
cli
xlat
inc
adc
adc
xchg
push
(bad)
mov
loopne
mov
(bad)
out
push
xchg
jnp
lea
add
ja
pop
xchg
or
pop
or
jae
and
fsubrp
mov
adc
loopne
and
shr
enter
add
cmp
pop
lock
dec
in
cmc
mov
nop
sbb
enter
enter
dec
xchg
fstp
fisubr
mov
mov
cmp
xchg
xor
in
cli
je
adc
mov
xor
xlat
lods
jmp
dec
es
dec
dec
frstpm(287
mov
sbb
and
inc
call
sub
sub
je
xor
add
pop
pushf
xchg
sub
sbb
imul
sbb
out
gs
adc
adc
mov
inc
mov
es
mov
test
mov
fiadd
sub
mov
mov
mov
cmp
(bad)
pop
mov
sub
and
cs
adc
xchg
mov
cmp
and
push
and
lock
mov
xor
jne
bound
and
xchg
stos
les
push
cwde
sub
fwait
adc
mov
cmp
jbe
sbb
jmp
out
or
lea
jle
sbb
mov
sbb
test
inc
js
sub
retf
xor
or
jnp
pop
xlat
jge
jle
loop
jne
cmps
inc
sub
or
mov
call
dec
pusha
cld
or
xor
dec
cdq
or
and
and
xchg
and
sub
jmp
hlt
lea
fld
data16
retf
retf
pop
stc
sub
sbb
pop
dec
mov
aaa
inc
fild
sbb
loope
lods
adc
mov
test
jb
cmp
xor
adc
add
pop
call
shr
adc
sub
imul
sub
or
push
add
adc
push
cmp
scas
(bad)
mov
push
int3
je
mov
(bad)
xlat
xchg
sbb
or
cmps
mov
fs
cmps
stos
inc
leave
adc
dec
adc
sbb
xchg
xor
mov
xchg
in
cmps
retf
mov
xlat
test
xchg
js
fidivr
cmp
mov
mov
test
push
or
les
(bad)
and
xchg
add
mov
(bad)
jmp
mov
mov
jno
mov
xchg
jle
pop
push
cmp
shr
mov
movs
add
in
(bad)
fsubrp
inc
dec
or
inc
inc
test
jne
jbe
cmp
je
xchg
clc
xchg
data16
add
xchg
mov
inc
mov
test
test
cmps
sbb
ror
jne
cld
and
sbb
inc
and
lock
cdq
out
xchg
xchg
adc
(bad)
jge
and
mov
shl
out
popf
aam
loope
sub
xor
mov
dec
lock
ins
xchg
mov
jg
mov
mov
dec
sub
xchg
adc
cmc
add
repnz
add
es
inc
repnz
xlat
mov
cmps
adc
adc
pop
mov
icebp
pop
ds
pop
fistp
cdq
cmp
aaa
xlat
push
and
push
mov
sahf
(bad)
(bad)
adc
fisttp
rol
call
pop
jp
data16
sub
jmp
call
or
in
push
rcl
dec
push
(bad)
adc
dec
lods
out
lea
mov
movs
inc
jecxz
push
loopne
pusha
movs
xchg
adc
inc
into
movs
cmps
xor
adc
or
loope
lea
rol
cmp
loope
mov
add
adc
(bad)
fild
movs
xor
repz
lods
cli
mov
adc
test
xchg
inc
push
test
xlat
repnz
sub
movs
dec
push
cmp
call
repnz
in
xchg
mov
jb
mov
popf
cmp
pminub
pop
clc
adc
push
jmp
je
or
ds
mov
mov
rcl
das
jmp
adc
sub
loope
cmps
cmp
lahf
call
or
aam
push
push
sub
dec
add
test
sub
jae
add
pusha
daa
and
add
sahf
es
jecxz
adc
mov
retf
out
loope
sbb
jae
or
test
xchg
gs
and
adc
inc
xchg
outs
or
mov
add
fsubr
sub
ds
xor
mov
lods
out
loop
xchg
adc
imul
call
mov
pop
cli
jbe
loop
mov
xor
cmp
push
adc
pop
sub
adc
je
cdq
and
idiv
pop
xor
cmp
mov
sub
ja
shl
ds
mov
retf
out
dec
or
fcom
(bad)
and
jns
outs
lahf
and
adc
sbb
cmp
scas
test
adc
sub
pushf
in
sub
cwde
out
test
inc
call
or
(bad)
adc
sub
test
retf
push
sub
push
cmp
and
scas
mov
inc
les
adc
dec
(bad)
and
pop
xor
ins
adc
int3
fstp
pusha
rcl
add
or
iret
jns
ficomp
inc
sub
lea
bound
pop
(bad)
int3
pusha
cs
mov
push
mov
int
jno
in
push
cmp
pop
lods
or
fsub
pushf
movs
ins
inc
dec
std
dec
(bad)
sub
stos
stos
or
inc
jle
xchg
push
cmp
push
adc
pop
and
out
jecxz
inc
addr16
pop
xchg
dec
test
adc
fst
adc
sub
popf
mov
gs
add
call
sti
xchg
scas
pop
adc
xchg
aas
and
and
fcom
movs
push
test
jbe
popf
jno
push
test
sbb
daa
pop
les
fsubr
sub
pop
icebp
fstp
imul
mov
and
(bad)
adc
fs
enter
add
je
jae
je
arpl
popa
add
outs
push
enter
push
jo
push
dec
sub
addr16
es
fst
cmc
pop
mov
and
lock
sbb
pusha
and
mov
mov
(bad)
mov
push
ror
fbld
wrmsr
sbb
in
das
adc
pop
and
mov
popf
xchg
and
rcr
mov
aam
sbb
scas
fs
adc
mov
sbb
dec
pop
(bad)
xchg
cld
pop
call
add
jle
dec
add
popf
xchg
adc
jbe
xchg
addr16
leave
les
popf
retf
xchg
sub
and
aaa
pop
adc
push
dec
push
pop
je
lods
xor
add
pop
adc
call
(bad)
and
adc
mov
jle
sbb
push
movs
xlat
outs
scas
push
push
inc
dec
out
jno
test
mov
call
nop
cmps
into
outs
push
retf
inc
daa
jmp
icebp
pop
jmp
xor
xchg
xchg
adc
adc
nop
add
cmp
loopne
jne
aam
sbb
pusha
in
cmp
lods
and
cmp
in
inc
das
out
mov
sub
stos
cdq
daa
cdq
loopne
pop
mov
pop
pop
jo
add
pop
int
jl
adc
es
pop
push
mov
int3
mov
cld
dec
xchg
xchg
inc
daa
push
loop
and
imul
mov
stos
aas
aas
inc
cmp
ds
push
add
and
maskmovq
idiv
mov
scas
pop
xchg
ror
mov
psubb
xchg
jmp
nop
imul
cmp
xchg
adc
push
int3
les
sub
cld
sub
xchg
pushf
dec
hlt
inc
je
and
xchg
jne
scas
mov
into
ins
push
call
jmp
adc
inc
loop
xor
dec
ror
enter
(bad)
adc
repz
sar
sub
xchg
sbb
xchg
test
(bad)
jl
ins
adc
jnp
nop
cmp
mov
and
inc
stc
xlat
xor
ss
push
push
jmp
test
adc
cmp
sbb
test
rcl
dec
mov
ret
sub
cld
rol
das
jne
adc
mov
nop
dec
cmps
dec
popf
ret
adc
adc
mov
dec
and
aas
je
xchg
std
xor
and
add
fst
enter
sti
call
ficom
inc
xor
xchg
mov
mov
sbb
(bad)
or
pop
pop
mov
addr16
xchg
das
cmp
cs
or
dec
or
dec
jae
xlat
in
push
je
shr
mov
cmp
fsub
inc
hlt
out
inc
mov
mov
shl
frstor
xchg
cdq
adc
jne
push
ins
rcl
cs
jg
aad
cli
loop
mov
rcr
stos
inc
pop
dec
(bad)
cld
test
clc
inc
sar
(bad)
cmp
stos
pop
fwait
push
and
jmp
mov
add
out
idiv
pusha
fwait
jmp
mov
xchg
mov
add
mov
loopne
cmp
lock
movs
mov
mov
das
mov
inc
inc
adc
loop
mov
cmp
jae
add
rol
mov
lock
loop
shl
adc
fcomp
push
sub
mov
(bad)
enter
scas
sbb
or
sbb
and
scas
(bad)
jmp
pop
popa
sub
icebp
pop
xor
call
cmp
stc
scas
sub
and
jo
out
cmc
add
push
dec
call
jmp
mov
movs
stos
push
xchg
aam
imul
test
push
xchg
sbb
and
dec
cmps
test
test
or
mov
call
sub
cmp
cmp
push
ffreep
cmp
pop
pop
sbb
xor
push
jecxz
hlt
and
ret
nop
sbb
mov
sbb
stos
sbb
repnz
sub
and
jno
das
fdiv
(bad)
mov
xchg
fs
push
sti
hlt
xchg
pop
mov
loope
add
ror
movs
and
ins
push
fwait
aas
or
xor
sbb
test
out
cs
dec
cmps
mov
xor
outs
mov
jl
inc
cld
das
loope
cli
add
cmp
xchg
call
sahf
loope
fcom
xchg
pop
and
cmp
adc
cmp
sub
cmp
jmp
adc
xor
push
sbb
js
jmp
js
mov
mov
pushw
cmp
(bad)
inc
xor
int3
je
loope
mov
mov
or
and
or
enter
loopne
out
xlat
call
xor
mov
push
pop
sti
(bad)
out
xor
aas
sub
adc
scas
or
mov
sbb
or
test
dec
shr
mov
sbb
mov
lods
push
dec
loopne
lea
cmp
add
and
or
mov
das
add
push
xchg
jl
and
ficomp
pushf
pop
inc
in
je
adc
test
push
std
push
sti
sub
add
inc
clc
sub
(bad)
(bad)
in
dec
cld
sub
cmp
inc
jne
dec
sbb
icebp
jo
dec
xor
movs
das
push
inc
mov
loopne
or
call
ins
push
cmps
sbb
out
pop
shr
adc
mov
lea
(bad)
and
test
mov
jmp
hlt
and
xor
aas
pop
stos
sub
popa
xchg
scas
int3
pop
call
mov
inc
and
stos
movs
(bad)
int
or
add
sti
ins
and
adc
das
je
adc
retf
adc
jp
xchg
ins
rol
pop
out
sar
daa
rcr
jp
sbb
push
adc
mov
fmul
sub
test
inc
les
mov
adc
mov
sub
mov
pop
xlat
inc
xor
mov
out
adc
add
cs
cmc
cmp
or
push
push
push
stc
scas
fcom
adc
(bad)
jo
xchg
aad
imul
sbb
das
sbb
fiadd
ins
dec
xor
xor
jmp
sbb
sub
mov
inc
or
popw
pop
jno
push
jo
cmp
(bad)
icebp
pushf
sub
les
cmp
test
movs
sub
and
test
jns
push
adc
xchg
push
pop
push
mov
add
xchg
test
and
and
and
(bad)
ds
sub
rol
and
je
scas
int3
cmp
(bad)
cs
hlt
cmc
pop
adc
xchg
lea
push
jg
mov
xchg
add
inc
and
and
sbb
fist
inc
push
pop
sbb
in
enter
adc
stos
push
(bad)
pop
adc
sbb
(bad)
sbb
mov
dec
or
mov
pop
and
xor
pop
xchg
dec
sbb
adc
inc
mov
cmp
test
or
mov
xchg
lods
dec
adc
mov
popa
(bad)
mov
jae
mov
dec
ja
int3
mov
cmp
and
sbb
dec
fiadd
add
xor
jne
in
clc
mov
mov
cmp
push
(bad)
mov
(bad)
stos
lea
xlat
in
sbb
or
cli
retf
jmp
and
mov
xchg
inc
cld
push
mov
jmp
add
push
(bad)
stos
(bad)
not
mov
and
inc
inc
dec
outs
inc
js
cs
ja
mov
test
pop
sub
cmp
je
mov
pop
dec
jb
lahf
inc
test
inc
mov
mov
je
adc
mov
idiv
push
xor
ror
cmp
mov
shld
es
cld
jl
pop
aam
pop
sub
push
and
and
sbb
sbb
data16
loopne
nop
leave
popa
or
fcmove
pop
cmc
lods
out
jle
ret
pop
call
adc
out
xchg
stc
inc
inc
jmp
test
push
stos
xor
call
adc
sub
sub
mov
retf
adc
xor
mov
mov
mov
xlat
mov
pop
not
dec
stos
daa
push
xchg
rcl
(bad)
lock
push
sbb
test
sbb
cmp
inc
or
retf
enter
and
call
pop
ret
mov
ret
sbb
xor
sbb
mov
mov
cli
or
push
xor
push
push
(bad)
xor
das
mov
cmps
repnz
inc
nop
and
sub
push
xor
add
loop
pop
das
jno
jne
mov
icebp
mov
mov
mov
sbb
ret
cmc
xchg
in
xchg
fisubr
mov
add
cwde
out
xchg
pop
bound
bound
ret
lahf
and
stos
xchg
push
lods
sub
je
pop
mov
ret
mov
pop
ret
sbb
fimul
call
push
hlt
rcl
hlt
loop
or
or
pop
or
inc
mul
inc
daa
sbb
inc
aaa
and
lea
cwde
inc
mov
loopne
or
ret
and
xor
in
pop
cwde
out
push
daa
cdq
dec
movs
pop
and
je
out
jno
mov
dec
inc
aas
adc
or
stc
inc
push
mov
xchg
das
repz
mov
arpl
shl
xchg
cli
or
into
repnz
add
popa
ins
push
pop
adc
add
shr
aaa
dec
and
out
mov
push
xor
mov
mov
or
lods
and
(bad)
pusha
(bad)
jnp
out
adc
cmp
jnp
jnp
push
inc
jg
and
add
cmp
jb
lea
inc
jmp
nop
rcr
shl
add
dec
push
push
movs
mov
push
cmp
and
int3
mov
cmp
adc
cld
das
(bad)
fxtract
clc
cmps
inc
or
dec
or
jecxz
lods
dec
dec
push
xchg
out
jnp
mov
inc
inc
adc
arpl
push
or
retf
jmp
fadd
jmp
pushf
adc
ret
and
leave
dec
push
adc
cmp
popa
daa
xor
adc
les
and
xchg
pop
sub
sub
sub
rcr
adc
push
shr
xchg
rcr
or
or
aaa
dec
mov
cmc
nop
jp
push
xor
or
out
and
xor
loopne
cmp
cs
sub
or
cmp
jne
mov
push
sbb
sbb
jo
or
into
cmps
imul
mov
and
push
addr16
lods
hlt
aaa
ror
push
in
test
adc
push
inc
call
mov
add
jle
fisttp
jne
cmp
or
pop
movs
mov
nop
adc
movs
js
jecxz
mov
(bad)
or
adc
push
aad
xor
sbb
inc
lea
call
fcmovnbe
mov
(bad)
bound
clc
jl
adc
loopne
ret
push
int3
fcmovnbe
jl
push
cdq
test
xor
inc
pop
add
or
add
rol
xchg
sub
iret
das
imul
inc
pop
or
pusha
jne
sbb
inc
bound
sbb
add
in
int3
enter
push
call
cmp
jae
mov
inc
mov
jne
mov
dec
jge
pop
test
lds
loopne
call
cmp
gs
test
dec
js
cwde
cmp
adc
aas
xchg
jecxz
cmp
push
ret
and
add
xor
les
inc
leave
rep
and
sbb
cdq
addr16
jle
sub
fnstsw
aas
sbb
aas
inc
cmps
ror
lea
inc
add
jmp
mov
push
cwde
adc
shl
cmp
mov
cwde
sub
test
aas
je
or
jmp
fcom
pop
lock
xor
cmp
push
movs
jb
add
inc
adc
aas
cmps
dec
ins
push
icebp
push
mov
push
mov
lea
icebp
jae
sbb
and
mov
jnp
fcom
push
sub
xchg
dec
add
fdivr
lea
cdq
fcomp
cmp
mov
mov
retf
into
mov
dec
ret
jp
inc
sub
xor
arpl
jecxz
pop
shr
inc
sbb
movnti
(bad)
mov
enter
jo
mov
jne
push
inc
(bad)
xor
scas
xor
mov
jmp
mov
out
sahf
dec
cld
cs
in
push
jbe
popa
loop
mov
push
xchg
(bad)
mov
xor
dec
and
test
jb
scas
or
xchg
inc
sub
sbb
push
rcl
and
jbe
push
int3
out
popa
cmp
xor
cmp
mov
int
fst
jae
or
pop
dec
ins
lods
jmp
inc
and
jne
add
mov
push
rol
div
dec
enter
cmp
add
adc
sbb
add
cmp
inc
test
sub
ret
adc
test
pop
pusha
aas
xchg
inc
inc
movs
and
sti
xor
loope
push
and
ror
mov
ret
adc
fldenv
int3
dec
std
leave
or
or
shl
lea
loopne
mov
enter
cmp
lock
iret
repz
rol
inc
loopne
dec
mov
sub
jg
fidivr
cdq
pop
mov
sub
or
inc
cld
cmp
je
test
loope
push
fsub
shr
adc
adc
loope
arpl
(bad)
mov
and
and
and
push
shl
inc
or
or
push
dec
pop
sub
mov
xchg
sbb
stos
or
or
inc
add
push
addr16
inc
add
mov
inc
xor
jmp
jge
adc
push
adc
mov
xchg
mov
push
rcl
imul
jb
sbb
adc
ret
or
sub
dec
add
dec
fwait
push
jbe
xchg
or
rol
dec
stc
add
mov
pop
cmp
(bad)
std
ror
and
jmp
aas
pop
pop
xchg
rcr
rol
inc
das
int
outs
inc
in
sti
idiv
ret
fucom
or
stos
add
fisub
(bad)
std
pop
jno
xor
mov
lods
dec
dec
xor
mov
mov
icebp
call
jae
adc
add
rcl
movs
fs
repz
jecxz
mov
movs
retf
dec
mov
mov
fwait
mov
xor
sbb
mov
movs
sub
pop
clc
sar
or
shld
pop
nop
jns
xor
mov
fadd
dec
dec
loopne
imul
xor
push
movs
mov
outs
lock
hlt
or
mov
mov
js
mov
cdq
ins
clc
dec
sahf
and
adc
clc
in
out
and
aam
scas
adc
push
cmps
mov
sar
dec
out
imul
in
jge
fdiv
iret
push
int3
and
bound
loopne
jmp
push
mov
xchg
or
jmp
(bad)
rol
sbb
adc
(bad)
mov
adc
imul
or
sub
(bad)
imul
call
sub
test
pop
call
jl
cmp
js
call
add
dec
lea
fs
outs
mov
sub
cmp
or
pop
or
clc
dec
dec
cmps
call
dec
inc
adc
aam
push
stos
pop
and
add
lock
nop
push
mov
lock
(bad)
cmp
retf
mov
ins
pop
dec
xchg
or
icebp
test
xchg
je
add
jle
das
xor
push
push
push
outs
aam
or
test
and
lea
mov
sub
dec
mov
xchg
add
jmp
and
add
jmp
fs
mov
xchg
test
hlt
or
or
inc
imul
push
sbb
pushf
ror
xor
icebp
arpl
inc
add
or
das
jp
cdq
or
jge
mov
pop
outs
or
hlt
xchg
dec
sbb
in
popf
movs
out
jns
mov
stos
test
and
mov
dec
sub
mov
pop
sub
xchg
push
mov
mov
(bad)
in
inc
push
stc
cmp
add
sub
je
sub
mov
add
dec
sub
cmp
push
pop
adc
or
add
rep
ja
dec
sub
shr
and
jo
push
push
jmp
and
(bad)
cmp
clc
pmulhuw
pusha
sbb
cdq
movs
int3
stc
or
jb
rep
jmp
adc
mov
mov
test
test
cwde
int3
aas
nop
adc
data16
fmul
loope
sbb
lea
scas
inc
jns
add
mov
pop
int3
or
mov
cld
movs
mov
and
inc
inc
inc
or
mov
jg
(bad)
or
and
dec
dec
xchg
inc
inc
popa
cmps
in
ins
pop
mov
adc
mov
dec
lock
dec
clc
mov
mov
rcr
clc
or
or
mov
and
pop
add
xchg
sahf
sbb
mov
sub
je
xor
mov
sbb
or
icebp
and
add
pop
dec
call
sub
sub
and
sbb
sbb
and
out
adc
imul
test
dec
out
jle
mov
pop
nop
dec
sub
lods
pop
mov
inc
mov
mov
jbe
mov
sbb
in
in
adc
and
dec
add
pop
jmp
add
and
adc
cs
and
adc
cs
and
push
push
and
xor
test
mov
adc
adc
mov
cs
xor
pop
jle
loopne
jne
or
mov
mov
lods
add
out
or
cmp
loopne
xchg
jg
out
add
imul
sub
xor
fiadd
sar
fstp
test
(bad)
test
mov
call
sbb
ret
loop
cmp
mov
dec
dec
movs
xchg
xor
ja
xor
dec
jne
or
cmp
mov
and
adc
dec
dec
mov
fbstp
mov
mov
adc
ret
(bad)
jno
cmp
aas
dec
mov
xor
cmp
loop
or
or
jne
pop
pop
pop
fadd
adc
cmp
add
dec
pop
mov
jne
xchg
inc
add
sbb
and
shr
jmp
popa
sbb
(bad)
(bad)
or
sub
cli
sub
loop
push
jecxz
loope
es
adc
adc
cmc
push
into
(bad)
call
push
fwait
jno
jmp
jg
cmp
push
(bad)
xlat
xchg
or
mov
xor
loopne
adc
repnz
in
fiadd
ror
mov
ins
out
and
(bad)
imul
add
or
test
sub
aas
aam
jmp
test
mov
and
xor
pop
mov
xor
xchg
leave
jmp
sbb
stos
sub
sub
add
fs
and
sbb
dec
push
loop
push
jbe
pusha
cmp
jle
aad
jmp
aas
daa
sbb
mov
rol
das
add
push
mov
jmp
mov
xor
out
cli
js
dec
sub
inc
or
add
add
inc
or
inc
sub
test
inc
xor
iret
and
ret
jne
xor
mov
adc
loop
sub
dec
xchg
call
add
cld
sbb
in
jae
push
adc
test
add
push
sbb
call
js
stc
lods
adc
add
aaa
or
daa
call
xchg
rol
iret
stc
test
out
popa
mov
adc
fs
addr16
or
enter
jae
mov
dec
and
pop
jne
push
jno
fild
dec
jmp
mov
es
ins
sub
xor
in
adc
hlt
xor
stc
ins
adc
mov
out
adc
xor
sbb
xchg
loop
test
mov
fucomi
dec
dec
fistp
inc
int
test
adc
je
sub
adc
dec
movs
pop
mov
or
loope
retf
sub
movs
and
fcom
clc
push
out
ss
mov
sbb
add
mov
jge
jmp
cmp
test
and
cs
imul
mov
or
jle
mov
mov
aad
inc
std
fwait
mov
sbb
jecxz
push
ds
sub
movsx
sbb
pop
inc
mov
cs
dec
inc
cld
mov
pop
loop
fisttp
jg
popf
cwde
fs
inc
or
and
adc
jb
imul
(bad)
lods
mov
lods
sbb
sbb
aam
inc
retf
sub
and
loope
shl
mov
cmp
dec
stc
adc
mov
lea
xor
aaa
cmp
movs
dec
mov
xchg
sbb
inc
movs
lods
pop
jnp
fadd
xchg
or
fsubr
enter
call
inc
or
cld
adc
xchg
iret
dec
or
ficom
lods
dec
lods
data16
sub
dec
adc
sub
add
imul
fadd
les
retf
xor
jg
inc
sub
and
pushf
fsub
inc
out
loop
adc
in
pusha
packsswb
mov
test
pushf
rcl
inc
rcl
xlat
push
imul
adc
cmp
adc
mov
dec
inc
rcl
sub
call
das
outs
call
inc
or
add
movs
(bad)
sar
shr
push
inc
push
jmp
cmp
ins
in
sahf
dec
aas
adc
xor
fnstsw
add
pop
inc
clc
pop
fdivr
adc
pop
sar
pop
mov
pop
push
or
mov
mov
cmp
(bad)
mov
or
mov
cmp
aad
(bad)
call
pop
add
das
clc
jbe
jbe
adc
movs
mov
mov
aaa
push
sub
mov
retf
retf
inc
jmp
or
push
push
lea
mov
fs
push
dec
or
punpckldq
dec
aaa
push
cmp
sub
out
jl
out
hlt
jbe
cwde
repnz
pop
add
push
xor
retf
sbb
fcom
inc
mov
push
loope
inc
dec
mov
test
arpl
push
dec
mov
sub
add
jne
retf
add
and
sbb
outs
pop
mov
sub
cwde
jbe
call
mov
jo
data16
je
cwde
stos
xor
jbe
and
lods
adc
imul
mul
nop
or
dec
clc
div
js
fstp
mov
add
retw
nop
inc
xchg
sbb
sub
push
push
lods
pop
mov
lock
ret
sbb
mov
or
adc
ja
cmps
test
inc
inc
jp
loope
or
mov
shl
mov
or
or
and
or
inc
pop
push
mov
js
cmp
sub
mov
ret
in
test
mov
pop
push
xor
cmp
rcl
and
aad
mov
enter
sub
add
inc
inc
mov
clc
lea
imul
xor
sbb
push
mov
repnz
inc
aaa
dec
les
pop
jmp
push
sub
or
dec
retf
jb
icebp
daa
jne
cmps
sbb
std
or
dec
add
or
inc
jbe
xor
pop
ss
adc
loopne
popa
jo
push
or
cmp
scas
rol
in
and
dec
pop
ret
(bad)
in
and
outs
inc
or
fxch
add
(bad)
cdq
and
and
pop
dec
lods
test
jmp
mov
je
jecxz
clc
jae
mov
mov
and
je
movs
and
cmp
cmp
shl
call
xchg
sub
out
cmp
ins
xor
cli
push
jno
cmps
in
retf
enter
xchg
jmp
adc
push
jb
xor
lds
stos
(bad)
xchg
adc
repz
push
push
fldenv
lods
or
loop
mov
mov
movs
dec
xor
retf
fstp
shr
(bad)
scas
inc
or
adc
inc
cmp
je
cmp
and
shl
adc
inc
imul
dec
ins
(bad)
ins
je
loope
push
push
cmp
adc
adc
loopne
mov
sub
mov
mov
add
jae
in
movs
sbb
mov
call
add
push
jmp
(bad)
scas
or
aam
aam
sbb
and
mov
enter
pop
cmp
(bad)
jb
sbb
popf
sub
mov
gs
pop
push
and
sar
jnp
push
fst
or
jmp
lea
outs
in
pop
scas
hlt
or
and
mov
xchg
call
scas
and
and
scas
xchg
test
aam
or
add
adc
(bad)
adc
(bad)
lods
out
mov
inc
in
int3
les
shr
and
adc
and
(bad)
jo
lea
and
and
mov
int3
mov
aas
cmp
ret
(bad)
inc
(bad)
sub
jp
fisttp
push
dec
test
xlat
inc
xor
mov
or
and
movzx
cmc
in
js
out
and
adc
xor
inc
ret
les
dec
or
out
mov
adc
jecxz
icebp
mov
push
call
inc
test
repnz
inc
mov
sub
js
ret
mov
movs
cmp
std
stos
and
or
ja
call
sbb
and
in
cmps
jmp
pop
sti
mov
jns
sbb
mov
cmps
cdq
sub
nop
mov
ret
mov
jno
leave
in
sub
adc
push
cdq
aam
sbb
das
cmc
sub
jbe
dec
pop
imul
fs
pop
cmps
out
dec
iret
jecxz
les
xchg
and
lea
mov
mov
lock
ror
mov
sbb
rol
test
add
xchg
adc
sbb
push
imul
pop
clc
dec
push
gs
xor
lock
and
retf
vmovlpd
push
cmp
xor
cmc
mov
ds
mov
and
adc
or
ins
jmp
pop
cmp
stc
pop
lods
out
jge
pushf
jmp
push
pop
mov
ja
iret
push
mov
pop
adc
mov
call
add
push
jmp
push
xchg
imul
jne
add
fmul
and
fnstsw
xchg
clc
pusha
repnz
sar
repnz
fwait
push
je
test
(bad)
loop
xchg
inc
inc
pop
dec
(bad)
outs
push
mov
inc
ror
push
iret
sub
xchg
or
mov
cmps
std
add
sahf
dec
je
pop
cmc
aam
jae
xor
mov
pop
sbb
popa
push
les
sbb
jne
enter
int
push
sub
jmp
sbb
push
dec
xchg
mov
jb
mov
push
imul
push
inc
jle
(bad)
mov
and
xchg
fisttp
test
imul
aas
(bad)
cmp
data16
shl
add
dec
fisttp
add
inc
enter
cmp
aad
test
xor
inc
in
shl
mov
push
push
cmp
std
and
cmp
jne
pop
test
xor
inc
sbb
add
cld
adc
jmp
data16
mov
pop
adc
retf
and
jmp
scas
int
int3
loopne
(bad)
div
daa
xor
je
mov
add
in
fcom
test
aas
out
mov
dec
test
jg
aaa
popa
dec
or
rcl
add
mov
(bad)
aam
lods
jmp
inc
inc
pop
inc
int
sub
enter
ins
sbb
xor
xchg
mov
pop
sub
call
adc
mov
ret
je
cmp
sbb
xchg
int3
mov
mov
test
jmp
scas
mov
sbb
mov
adc
and
pushf
add
dec
test
pop
mov
inc
lea
test
push
js
popa
and
pop
fbld
pop
stc
or
inc
cmp
inc
movs
adc
pop
lds
and
add
not
leave
or
adc
sbb
xor
add
add
les
pushf
fdiv
cmp
add
dec
or
or
ja
xchg
jns
dec
in
dec
xchg
inc
loopne
xchg
movups
adc
inc
ror
add
shl
inc
fisttp
inc
(bad)
je
pushf
scas
xor
inc
mov
inc
fwait
arpl
sub
and
add
ror
inc
leave
dec
cmps
retf
add
hlt
xchg
jge
enter
mov
sub
scas
jecxz
movs
fldcw
cdq
cmp
adc
adc
mov
call
cmps
cmp
xor
mov
pop
fidiv
or
dec
add
ins
mov
adc
mov
push
mov
in
inc
push
test
or
mov
and
sub
shl
mov
inc
inc
imul
movs
retf
cmp
daa
inc
cmp
sub
cmp
mov
and
jge
repz
loopne
cmc
test
aas
shl
shl
js
mov
sbb
call
adc
adc
mov
add
xchg
inc
mov
push
fs
shl
inc
inc
add
fdiv
movs
cmp
mov
loope
xor
aas
lds
ins
lahf
repnz
(bad)
iret
or
mov
shl
jae
repnz
(bad)
punpckhwd
lods
push
out
imul
sbb
popf
(bad)
pop
cld
or
ror
retf
aam
push
sbb
rcl
call
pop
or
ret
pop
popf
mov
sub
mov
push
mov
xor
cs
or
and
pop
js
lock
rcr
xchg
and
mov
arpl
or
adc
jne
mov
inc
xchg
push
pop
aam
rcr
int
jo
push
call
pop
cmp
jne
push
ins
xlat
jle
out
shl
out
mov
cmc
jmp
test
mov
cwde
push
push
call
push
and
jle
dec
out
aas
add
icebp
hlt
mov
dec
adc
out
mov
inc
arpl
fwait
pushf
inc
icebp
adc
es
inc
cdq
sub
dec
ds
push
lea
les
jae
and
ds
sub
pop
fld
loope
cmp
pushw
xchg
sub
xchg
push
mov
scas
or
int
mov
fadd
push
cmp
out
push
lock
dec
mov
mov
and
push
mov
call
sub
pop
inc
loop
leave
and
sbb
and
aam
jno
cs
addr16
or
pop
lahf
ds
and
inc
add
stos
jnp
adc
xor
jne
sbb
loope
jne
adc
pop
mov
call
jo
popf
not
pop
mov
jne
in
enter
cmc
dec
mov
inc
dec
jae
pop
push
stc
and
popa
pop
aad
xchg
mov
shr
enter
lock
jp
or
push
out
addr16
data16
mov
or
jp
jg
popf
jnp
pop
ja
inc
adc
in
cmp
popa
adc
jle
outs
jbe
popf
mov
dec
adc
clc
jle
ss
xor
fsubr
mov
sbb
dec
clc
push
sbb
shl
in
adc
jmp
push
pop
in
jecxz
sub
mov
mov
aaa
add
dec
(bad)
dec
nop
ret
adc
imul
adc
jno
and
loop
daa
dec
stos
fs
mov
inc
movs
jo
jmp
jmp
push
push
inc
cwde
movs
mov
push
int3
mov
dec
fisttp
mov
xchg
jae
ja
pushf
sub
bound
xor
or
cmp
jmp
xchg
dec
adc
inc
add
push
xor
add
xor
jle
push
outs
ret
call
jmp
dec
pop
fstp
inc
hlt
mov
dec
out
xor
(bad)
or
ret
shl
dec
daa
or
and
xchg
or
and
push
add
ret
mov
add
sahf
or
ja
dec
cmp
mov
dec
mov
ins
retf
mov
and
or
dec
in
add
adc
scas
and
cmp
fild
mov
fwait
cli
lock
movs
or
push
and
(bad)
jmp
cld
add
or
(bad)
mov
cmps
pop
(bad)
imul
mov
je
jo
adc
cs
daa
cwde
inc
pop
cmp
cmp
loop
mov
cmp
pop
inc
add
call
ss
and
adc
outs
psadbw
xchg
jno
xor
sub
mov
xor
pop
dec
adc
into
pop
push
push
leave
out
fstp
outs
lods
test
sbb
sbb
fwait
aam
enter
add
adc
fsubr
push
add
mov
mov
xor
loopne
clc
enter
cmp
jmp
adc
push
dec
stos
jne
cwde
jl
stos
mov
cs
fisubr
and
pop
sbb
movs
ins
inc
outs
(bad)
aam
adc
je
push
lods
or
cld
dec
iret
mov
mov
pusha
push
jns
in
test
loopne
cmp
cmp
and
mov
in
cwde
inc
mov
shr
mov
add
adc
sbb
mov
aas
inc
sar
and
mov
adc
je
xor
dec
ja
std
cmp
sti
adc
jg
inc
jmp
(bad)
rcl
inc
ins
sub
pop
sub
adc
ret
cmp
lahf
and
push
es
mov
jae
call
fwait
shl
sub
fidiv
xchg
pop
lods
pop
mov
scas
pop
and
mov
retf
or
push
jmp
xor
loope
push
jne
cmp
inc
inc
retf
add
jbe
and
lea
jg
ret
addr16
pusha
jmp
jmp
mov
dec
cli
jbe
sahf
mul
loope
stos
sbb
inc
lea
sbb
(bad)
mov
mov
fs
xlat
mov
pop
xor
push
adc
cmps
lods
ret
xchg
mov
mov
mov
jmp
pop
or
push
shr
shl
nop
sbb
setne
xchg
inc
cmp
outs
leave
jmp
jl
xchg
xor
test
mov
mov
push
mov
ins
in
loop
rcl
fstp
ret
fdivr
sub
nop
pop
push
call
pop
add
ret
not
dec
sub
mov
in
imul
cs
push
add
fld
mov
mov
nop
lahf
push
xor
mov
mov
test
or
add
mov
pop
pop
lods
pop
xchg
and
mov
push
cmovns
pushf
mov
or
(bad)
call
push
ins
jo
inc
cmps
mov
test
cmp
imul
dec
(bad)
sub
mov
stos
repnz
push
cmp
pusha
adc
xchg
mov
and
sbb
jmp
xchg
(bad)
lods
jl
add
jmp
mov
cld
xor
sar
vcvttpd2dq
jmp
xchg
push
fwait
dec
in
imul
pop
adc
sahf
jo
cmpxchg
or
adc
fiadd
dec
or
cmp
sbb
mov
and
sub
loopne
xchg
(bad)
or
and
or
mov
pop
xor
dec
jnp
xchg
xchg
add
je
xchg
xor
push
mov
dec
dec
loope
inc
pusha
jle
xor
xor
inc
leave
xchg
pop
popa
mov
push
lods
stc
add
xchg
sbb
call
pop
inc
mov
call
mov
sbb
(bad)
mov
paddsb
nop
adc
push
push
push
cmp
jge
pop
je
enter
mov
dec
iret
pop
hlt
sbb
movs
mov
movs
inc
dec
add
leave
fist
mov
xor
in
push
shl
sub
in
and
loope
push
jmp
xor
adc
jae
mov
inc
or
jl
push
jg
and
stc
shl
lods
and
test
fstp
push
clc
mov
arpl
pop
add
(bad)
cwde
sbb
jne
sub
jmp
adc
clc
test
retf
fdivr
or
inc
sub
dec
cld
adc
sbb
xor
jmp
pop
inc
js
mov
retf
adc
in
or
push
sub
mov
pop
inc
lods
movs
or
add
mov
mov
ja
xor
push
jmp
pop
outs
inc
repnz
mov
and
inc
pop
inc
shr
push
cmp
sbb
aas
jmp
mov
mov
nop
adc
jmp
cld
ja
mov
adc
(bad)
and
iret
add
adc
push
inc
ror
std
mul
jmp
les
push
ss
push
push
xchg
div
lods
fsub
pop
ins
push
inc
ret
xchg
add
ins
sbb
ins
loop
pop
pop
movs
pusha
(bad)
aad
mov
xchg
gs
(bad)
xchg
adc
pop
and
adc
call
sub
sub
sub
fsub
ret
call
jle
xchg
(bad)
(bad)
inc
jmp
das
pop
mov
or
mov
rcr
mov
mov
test
sub
sbb
out
inc
adc
out
inc
rol
and
ins
pop
in
mov
ror
call
dec
add
mov
mov
icebp
jecxz
aas
jmp
pop
lock
xchg
xor
enter
sub
aas
pop
je
or
push
lds
or
call
mov
dec
xor
dec
xchg
jle
jmp
xor
retf
pop
movaps
sbb
shl
jecxz
jmp
inc
in
jns
cmps
push
push
les
inc
call
movs
ficomp
jmp
cmp
jle
add
dec
jns
enter
add
jmp
shl
dec
clc
cvtps2pd
xchg
push
call
sbb
mov
dec
mov
xchg
push
pop
imul
or
mov
and
test
(bad)
in
jbe
pop
mov
jo
mov
mov
inc
and
pop
iret
imul
mov
adc
and
leave
adc
inc
adc
push
adc
dec
xchg
xlat
or
and
mov
jg
mov
int3
daa
in
cmp
rcl
and
add
inc
inc
push
ds
je
in
push
std
inc
xor
dec
jmp
or
movs
ds
dec
test
cs
lahf
sub
add
xor
adc
add
mov
nop
or
fcom
call
and
or
mov
in
call
add
(bad)
jmp
sbb
cmps
jge
or
cmp
inc
pop
jmp
cmp
and
or
call
addr16
jne
lods
aad
push
or
out
bnd
or
aam
cmp
loopne
int3
or
xor
sbb
je
mov
in
jae
jo
cmp
or
lock
in
push
sbb
sub
push
sub
or
push
xchg
xchg
clc
idiv
inc
and
loopne
aam
sub
fdivr
iret
mov
test
outs
(bad)
pop
mov
or
aas
adc
pop
cdq
mov
aam
push
mov
mov
and
out
mov
fsincos
cmp
mov
aaa
hlt
mov
mov
jmp
int
jbe
dec
pop
push
imul
jg
cmp
jmp
and
mov
aaa
cmp
into
rcr
js
mov
cld
test
cmp
cmps
(bad)
bound
mov
mov
ror
pop
pop
movs
out
test
and
nop
xchg
cmp
sub
int3
push
lock
adc
and
sub
xor
inc
adc
rcr
inc
nop
cmc
es
pop
jmp
xchg
or
mov
call
pop
mov
lods
mov
sbb
lea
nop
clc
xor
inc
xchg
mov
cmp
xor
jle
push
(bad)
(bad)
jle
jae
iret
ds
(bad)
retf
imul
and
je
rcr
cwde
sbb
(bad)
movs
dec
sub
sbb
jo
xchg
push
ins
adc
stos
dec
push
in
fs
js
jle
xchg
fs
jmp
ins
enter
lods
jle
xchg
cmp
ror
or
dec
add
push
sub
pop
or
cmp
xor
lahf
adc
add
inc
aas
(bad)
adc
pop
and
in
sbb
sub
adc
lods
jmp
push
and
jbe
push
ds
jns
fisttp
jb
es
sbb
out
rol
fild
adc
or
(bad)
adc
ret
sbb
inc
(bad)
sbb
mov
call
fisttp
imul
mov
adc
aam
dec
(bad)
enter
or
add
add
xchg
lahf
enter
cmp
adc
imul
mov
sbb
aad
adc
test
jno
mov
rol
popf
sub
(bad)
xor
adc
push
inc
inc
push
push
push
fimul
sbb
movups
sub
mov
push
call
push
aas
fdiv
inc
cmp
jae
jo
mov
in
jno
pop
sub
ret
sub
loope
push
xor
push
mov
jne
cli
mov
out
inc
pop
cmp
or
push
call
rcr
push
daa
and
xor
fdivr
(bad)
jl
das
xchg
(bad)
in
pop
mov
sub
(bad)
jmp
jge
out
js
adc
dec
push
mov
cwde
data16
add
cmp
sub
adc
add
mov
and
dec
mov
call
cmps
inc
xchg
mov
adc
es
arpl
fidiv
mov
pop
test
out
das
retf
push
inc
adc
jnp
test
and
cmps
add
je
adc
aad
mov
mov
jne
xchg
add
mov
loop
and
mov
outs
push
mov
inc
jmp
rcr
iret
push
cmp
ss
ss
inc
jmp
test
js
cmp
dec
inc
xor
fdiv
or
stc
pinsrw
and
or
mov
iret
sbb
test
test
mov
add
mov
shr
popf
cmps
imul
daa
xchg
mov
xor
lods
jbe
cmp
sbb
sub
clc
add
popf
inc
ud0
inc
sub
sbb
dec
leave
pop
and
push
daa
push
xchg
push
jmp
iret
adc
cmp
and
cwde
pop
jne
xchg
push
or
push
jmp
mov
retf
cmp
xchg
jmp
aad
mul
cwde
sbb
(bad)
adc
fisub
mov
adc
mov
xor
scas
fs
lock
or
or
sub
call
loopne
ins
mov
aas
fmul
pop
sbb
dec
test
sub
pop
scas
sub
pop
fistp
fcom
arpl
and
out
push
adc
aam
xor
imul
stos
inc
jnp
inc
sbb
adc
pop
jae
aas
jecxz
inc
(bad)
sbb
jb
not
dec
test
sti
xor
push
pop
sbb
jae
jnp
jnp
sub
shr
call
inc
push
push
lock
call
pop
xchg
test
lods
or
and
ins
and
data16
shl
mov
lods
or
dec
mov
adc
mov
mov
xor
std
xor
jbe
inc
mov
or
sub
and
sub
pop
and
cwde
dec
ja
lahf
in
jp
mov
sbb
ret
enter
or
pop
sar
test
pop
je
mov
es
int
or
sbb
or
and
dec
or
(bad)
sub
sbb
xor
adc
inc
add
test
or
out
rcl
mov
sahf
adc
popa
enter
or
jl
sbb
loop
(bad)
push
into
test
and
loope
rcr
aaa
mov
adc
icebp
pop
cdq
pop
pop
stos
or
push
pop
push
jge
adc
sbb
std
das
std
sub
fidivr
or
outs
xchg
or
add
sbb
add
rcr
xor
mov
mov
ja
test
and
or
pusha
inc
sbb
(bad)
jmp
ret
pop
and
mov
xlat
xor
not
add
retf
or
rol
inc
sbb
rcr
ret
call
dec
cmp
(bad)
mov
jbe
enter
imul
or
pop
cmp
adc
scas
clc
add
loopne
les
inc
cmc
mov
data16
clc
adc
or
nop
movs
fldcw
or
inc
push
mov
loop
arpl
cmp
xchg
or
xchg
fcomp
cld
mov
push
cmp
je
mov
imul
mov
xchg
or
out
or
or
xchg
adc
add
pop
mov
inc
xchg
or
mov
hlt
push
jg
ja
sub
sub
xor
sbb
ss
push
adc
repnz
pop
and
mov
adc
add
and
scas
adc
loope
mov
fs
cmp
aas
ins
push
add
call
adc
and
jne
inc
test
mov
or
jmp
mov
and
and
cmp
pop
inc
pop
mov
adc
das
ja
jns
xor
inc
xchg
cmp
mov
mov
adc
jl
xchg
enter
retf
jge
inc
(bad)
sbb
rol
mov
test
loope
sbb
stc
dec
outs
lea
retf
not
mov
inc
(bad)
pop
and
push
mov
je
and
and
std
test
inc
pop
pop
nop
push
adc
pop
(bad)
and
jo
(bad)
jmp
sbb
inc
push
shl
sub
sbb
dec
push
push
mov
es
and
mov
xchg
pop
enter
push
dec
sti
cmp
dec
ror
add
xchg
pop
or
mov
push
jb
pop
xchg
data16
pop
gs
pop
test
ror
pop
sub
mov
add
sbb
std
push
jge
adc
or
ret
mov
in
push
je
popf
cmp
(bad)
cwde
jne
cwde
add
mov
ret
pop
mov
inc
outs
sbb
icebp
jl
jle
imul
cmp
in
lods
sbb
ret
inc
movs
sbb
mov
push
call
mov
cmps
dec
mov
inc
ins
sbb
add
in
fcomi
add
or
sti
inc
aas
aam
jmp
or
loop
and
dec
aam
loope
ss
dec
pop
mov
fnsave
push
jne
jecxz
(bad)
mov
scas
pop
jge
mov
loope
lock
enter
add
or
loopne
cmp
xor
or
push
das
fs
mov
rcr
mov
push
mov
or
sub
push
dec
call
cmp
sub
cmps
call
fisttp
fsubr
adc
(bad)
loopne
adc
mov
lock
lea
bound
sbb
fmul
push
and
push
(bad)
in
xor
xor
bound
hlt
add
push
in
(bad)
inc
adc
pop
fisubr
mov
inc
nop
add
push
pop
loop
dec
add
inc
sbb
adc
cwde
or
test
jo
and
and
push
push
ds
and
cmps
sub
cld
pushf
out
sub
cwde
xchg
and
mov
sbb
pop
(bad)
pop
(bad)
mov
dec
inc
sbb
jns
cmp
ror
movs
lock
call
rcl
add
pop
ds
cmp
sahf
and
jb
mov
mov
push
inc
sbb
or
sub
lea
daa
shr
push
(bad)
or
test
mov
adc
adc
jne
pop
fwait
jl
add
bound
shl
push
mov
sub
les
and
sbb
push
pushf
sbb
push
dec
clc
sahf
add
cmp
jl
mov
sub
mov
cmp
adc
aaa
adc
xchg
fcomi
xor
or
jmp
dec
adc
mov
adc
pop
adc
mov
xchg
inc
fild
jo
(bad)
pop
fs
push
sbb
inc
mov
ins
and
bound
jne
mov
sbb
cmp
repnz
sar
clc
add
sti
push
add
inc
mov
call
out
xor
pop
push
fimul
fldenv
jb
jmp
fcom
into
inc
jl
mov
call
std
mov
jne
or
call
out
dec
mov
sbb
or
pop
xchg
movzx
adc
mov
daa
push
(bad)
mov
js
in
cs
and
pushf
xor
sub
mov
inc
call
test
mov
adc
jae
lods
gs
sub
cmp
mov
add
sar
inc
pop
int3
xor
push
xchg
fmul
jns
shr
loop
imul
pusha
jg
pusha
push
fbld
push
dec
pop
idiv
nop
push
adc
sbb
in
add
jo
call
jne
sar
dec
push
mov
cmp
push
pop
mov
cmp
popa
daa
int3
sub
mov
add
jmp
dec
add
fsub
pop
add
sub
imul
pop
ret
pushf
mov
push
and
(bad)
adc
jmp
mov
cmp
mov
ins
and
retf
sbb
imul
in
inc
dec
sub
leave
inc
dec
fild
clc
fld
dec
pop
cmp
jbe
mov
xchg
sub
mov
and
(bad)
xchg
retf
mov
sti
or
pusha
retf
shr
not
add
adc
jbe
mov
push
pop
dec
sbb
sbb
call
jns
mov
jmp
lds
hlt
std
cmps
jmp
les
test
mov
cmp
pop
or
jne
mov
and
mov
inc
xlat
adc
jae
push
test
or
push
in
jmp
scas
aas
mov
dec
adc
adc
push
and
cdq
mov
jb
jl
jbe
adc
dec
inc
cmp
adc
inc
fdivr
mov
xor
mov
or
loope
push
push
call
and
push
xor
push
or
cld
fldcw
mov
pop
int3
and
sub
or
cmp
or
and
adc
mov
mov
adc
adc
rcr
sbb
mov
data16
or
shl
ret
scas
adc
(bad)
test
push
test
mov
leave
outs
mov
xor
mov
test
jbe
push
push
dec
cmp
cmps
push
ins
inc
mov
movs
jle
cmp
sub
pop
arpl
cmp
push
pop
pop
(bad)
inc
xor
sub
and
xlat
inc
and
cld
into
call
jne
aaa
mov
jmp
not
call
mov
ffreep
cwde
or
mov
stc
in
and
xchg
pop
pop
movnti
pop
cld
xor
jb
adc
mov
push
fsub
adc
jmp
imul
adc
sub
adc
mov
xchg
out
pop
push
call
imul
pop
mov
inc
test
inc
jns
dec
and
push
sbb
cld
mov
daa
mov
jl
inc
sub
jo
and
and
popf
mov
sbb
repz
stos
xchg
aam
movs
lea
js
cmp
xlat
je
lea
movs
jmp
or
arpl
add
pop
test
jl
shl
or
jmp
in
push
push
mov
pop
icebp
cmps
pop
(bad)
pop
dec
add
enter
or
and
jmp
test
mov
push
iret
and
cmp
and
fild
mov
fs
dec
in
and
jmp
retf
adc
dec
lahf
(bad)
dec
xchg
push
test
cdq
loopne
movs
push
cmp
rol
jp
repnz
sbb
adc
test
icebp
aam
test
into
stc
push
xchg
push
and
xor
rol
inc
ret
jle
nop
js
mov
shr
or
mov
jl
or
das
sub
lea
dec
loopne
leave
push
sbb
cs
sub
clc
stos
xchg
loopne
or
rol
sub
out
ja
add
cld
xchg
mov
lea
fcomp
cmp
adc
popa
push
ja
jg
sub
sub
add
imul
shl
pop
mov
jo
in
cmps
lds
ins
loopne
test
leave
xor
add
push
mov
inc
test
repnz
out
repz
call
pop
mov
cli
push
mov
mov
sub
lods
repz
push
xor
loop
(bad)
int
xor
(bad)
jb
jle
sub
and
pushf
lds
loope
push
hlt
jno
push
jno
xor
ror
push
loopne
and
ret
cmp
enter
stc
dec
xor
or
pop
add
pop
dec
movs
inc
jae
xchg
out
fnstsw
or
and
adc
mov
shr
pop
jmp
test
popa
jb
cmp
inc
sub
dec
repz
mov
imul
fstp
cld
(bad)
inc
in
lock
add
test
mov
sub
(bad)
or
test
mov
mov
outs
or
rol
xor
mov
mov
inc
inc
cmps
enter
cmps
(bad)
jl
adc
mov
or
mov
not
and
popa
and
jae
mov
add
cmp
push
pop
sub
jmp
ret
and
dec
cmp
pop
loop
int3
iret
or
cmp
iret
leave
test
adc
fnstcw
repz
mov
push
pop
sbb
pop
adc
mov
in
popa
dec
sub
jae
bound
lea
repnz
or
nop
iret
cmc
sbb
mov
push
jg
xor
adc
into
pop
add
inc
mov
gs
add
or
inc
aaa
mov
xor
hlt
(bad)
sbb
sti
add
cmp
test
bound
push
jne
ror
dec
repnz
push
loope
xchg
jae
mov
iret
jmp
movs
and
les
mov
mov
rol
dec
push
or
sti
dec
inc
fimul
retf
das
je
adc
cld
inc
fsub
sub
jmp
sar
lea
jmp
dec
outs
pop
xor
movs
in
mov
and
in
nop
push
mov
adc
adc
add
jne
test
repnz
mov
mov
jp
push
sub
dec
loope
add
sub
ja
jno
xor
push
pop
out
mov
out
inc
jnp
xor
jbe
xor
pop
xchg
out
pushf
scas
dec
sbb
scas
pop
jecxz
or
sbb
inc
into
and
sub
cmp
and
dec
jmp
dec
adc
cld
stos
xor
cmp
pop
stos
pop
add
arpl
pushf
and
pop
xchg
jmp
sub
adc
sub
aad
clc
adc
call
pop
push
add
mov
xchg
scas
sub
jne
in
or
es
cmp
mov
mov
jmp
and
lea
(bad)
cmp
sbb
dec
add
mov
shr
aas
cmp
setge
dec
inc
mov
test
nop
xchg
cmp
push
ret
mov
mov
cmp
arpl
inc
or
lock
movs
mov
jmp
mov
mov
jg
test
or
int
or
dec
lods
je
paddsw
dec
pop
xchg
mov
cmp
and
inc
(bad)
and
out
int3
xchg
mov
mov
mov
pop
or
xor
fbld
imul
jge
push
jmp
mov
inc
sub
xor
bnd
test
psubw
jp
mov
fs
mov
bound
jl
scas
or
sub
test
jge
jb
dec
ror
add
jnp
push
jns
cdq
hlt
inc
jmp
leave
add
les
add
inc
mov
xchg
or
adc
call
xor
je
pop
je
jg
push
push
mov
push
cmp
jbe
or
adc
idiv
je
push
add
xchg
xor
loopne
lahf
adc
loopne
cmp
dec
jb
(bad)
push
(bad)
ror
fsub
lods
mov
sbb
pop
into
inc
or
fsub
push
(bad)
xor
stc
or
dec
xchg
pop
icebp
call
and
cmp
add
pop
jne
pop
inc
pusha
jo
cmp
test
sub
mov
jns
mov
popa
inc
lahf
lock
cwde
push
sbb
adc
dec
fwait
cmp
out
rol
xor
or
ret
xchg
lock
mov
js
clc
retf
add
pop
add
dec
push
push
jge
popf
mov
or
push
mov
jb
mov
dec
test
and
retf
mov
xor
sbb
adc
cmp
xor
cdq
out
jg
cmp
pop
jge
jb
rol
ss
mov
je
jmp
mov
aad
(bad)
jno
in
xor
sahf
pop
jg
xor
push
or
test
(bad)
(bad)
jmp
mov
leave
sub
shr
test
dec
out
ja
add
(bad)
push
jo
(bad)
jl
or
mov
aas
cmp
add
push
push
push
mov
jne
jne
or
fs
fs
mov
mov
call
(bad)
outs
push
sbb
mov
adc
inc
xchg
sti
repz
(bad)
add
jne
mov
dec
aaa
cmp
enter
cmp
add
jp
adc
rcl
dec
mov
add
pop
mov
test
jmp
out
sar
push
or
and
push
sbb
fcmovu
and
rcr
push
nop
and
sub
push
sbb
push
call
push
addr16
or
cmp
(bad)
loope
and
jns
gs
call
cmps
jae
add
adc
mov
or
pop
pop
mov
mov
cmp
or
xor
mov
jae
cli
and
int3
pop
sbb
xchg
inc
sbb
mov
dec
sub
mov
das
movs
mov
(bad)
mov
cmp
mov
cdq
pushf
pop
ret
jmp
inc
mov
jb
mov
push
jno
sbb
jae
not
mov
mov
dec
inc
movs
pop
out
test
inc
push
(bad)
sbb
jl
mov
sub
cdq
cmp
xor
in
mov
jmp
add
jae
sub
sbb
sahf
outs
test
jmp
scas
(bad)
rol
frstor
ret
shl
scas
imul
lods
add
and
and
in
push
xchg
push
inc
mov
inc
nop
inc
pop
inc
and
loopne
adc
pop
jnp
inc
(bad)
ss
mov
add
cmc
inc
and
push
jmp
jae
sub
and
push
neg
add
jae
mov
hlt
sbb
push
div
and
and
cdq
sti
xor
dec
inc
cmp
pop
ret
xchg
stos
arpl
cwde
or
aad
xor
in
out
xor
aam
pop
data16
adc
and
mov
xor
sbb
fistp
add
mov
ds
stos
add
addr16
ror
clc
pop
test
test
lea
std
push
mov
push
jne
fmul
push
call
pop
xchg
lahf
xchg
ss
ret
mov
jns
movs
je
imul
jmp
hlt
and
ja
add
imul
inc
jno
stc
pop
nop
xor
jb
je
jbe
add
or
jne
mul
out
enter
and
shl
cmp
push
ja
xor
dec
call
sbb
jo
inc
xlat
lahf
ret
jae
mov
cmp
pop
push
cmp
xchg
xchg
(bad)
jmp
test
and
sbb
mov
or
push
div
out
mov
adc
inc
ja
call
int
sub
ror
fs
push
push
iret
mov
sbb
adc
clc
popa
jl
or
jg
fdivr
fild
jnp
sbb
push
test
sbb
push
retf
sub
fimul
adc
stos
xor
cmp
mov
xor
or
cmp
xchg
mov
push
cmp
xchg
mov
sahf
jge
jmp
(bad)
cmps
mov
bnd
add
cmp
pop
inc
sub
sub
mov
mov
adc
das
loope
scas
pop
dec
out
loop
or
dec
or
call
adc
rcr
iret
movs
jg
std
push
out
mov
sbb
je
test
push
dec
call
or
sbb
loop
inc
sbb
ja
pop
pop
loop
sub
arpl
hlt
mov
jne
call
test
sub
fisub
nop
rcl
xchg
pop
adc
call
loopne
mov
(bad)
dec
data16
ds
pushw
or
pop
pop
jno
aad
nop
jle
aaa
je
sahf
jg
or
mov
pop
mov
or
push
or
mov
lds
test
push
dec
mov
dec
repnz
sbb
mov
or
xchg
dec
inc
adc
xor
mov
pop
bound
and
stos
inc
les
push
adc
add
push
mov
push
rcr
(bad)
loope
add
retf
sbb
(bad)
rol
and
pop
and
ins
stc
bound
lock
fdiv
js
jle
sbb
fdivp
cmps
cmp
addr16
dec
and
and
mov
mov
inc
jae
outs
jmp
mov
inc
xlat
xchg
and
xor
or
ins
pop
ds
sti
inc
or
mov
add
xchg
push
lds
out
dec
pop
test
or
or
add
in
ret
ret
aas
lea
setge
and
aam
and
cmp
or
rcl
stos
rcl
in
adc
lds
push
or
dec
jmp
sbb
add
daa
inc
jno
adc
inc
jg
pop
movs
jbe
pop
adc
aaa
push
enter
movs
cmps
or
mov
cmp
adc
push
dec
test
cmp
xchg
popf
fs
bound
inc
jbe
jge
push
sub
sub
dec
mov
xlat
inc
inc
aam
and
mov
(bad)
test
sti
pop
(bad)
std
sbb
rol
into
nop
popf
dec
jbe
cmp
sbb
jae
dec
inc
add
xor
fld
pop
loope
and
pop
movs
adc
pop
mov
xor
stos
test
cmp
mov
push
stos
(bad)
js
ret
pop
and
sub
aam
mov
outs
mov
nop
sbb
sbb
arpl
add
(bad)
pop
clc
adc
pop
lods
ds
mov
push
ins
jg
outs
call
mov
sahf
jbe
loope
retf
out
jl
outs
add
retf
je
mov
mov
push
cmp
ret
jmp
mov
hlt
pop
cmp
sub
popf
pop
(bad)
xor
shl
(bad)
fnsave
inc
(bad)
mov
mov
or
fcmovnu
ds
sti
jne
push
popw
(bad)
adc
and
push
pop
xchg
cdq
ror
aad
sbb
daa
or
dec
paddsw
push
jmp
mov
pop
inc
lods
or
mov
mul
adc
mov
pop
jno
(bad)
xchg
lods
mov
std
and
and
mov
xchg
push
daa
icebp
and
sbb
mov
add
jmp
push
sub
push
jns
or
sbb
sub
push
inc
cmps
push
sub
call
arpl
retf
test
lahf
rol
nop
retf
ins
mov
adc
ror
sub
(bad)
fiadd
xor
cmp
sbb
mov
movs
nop
jg
outs
or
mov
das
ror
mov
jbe
into
sbb
mov
pusha
test
ja
sbb
adc
push
sub
dec
sbb
cmps
or
rcr
pop
jbe
test
xchg
out
xchg
xchg
dec
mov
mov
jl
lahf
loop
inc
dec
stc
inc
adc
in
add
dec
jns
neg
sub
mov
sti
fs
movs
cmp
dec
push
fisubr
or
push
(bad)
popf
jle
push
popf
and
pop
das
lahf
stc
jl
lock
and
daa
sbb
pop
inc
sub
push
jns
mov
popa
lock
xchg
mov
das
inc
mov
ds
loopne
push
mov
push
retf
test
xor
loope
mov
nop
add
outs
(bad)
scas
imul
aas
lds
xor
cmp
or
daa
xchg
mov
pop
sbb
add
gs
fsubrp
pop
sub
cmp
stc
cmp
(bad)
cld
cmp
and
mov
adc
pop
daa
mov
not
clc
dec
mov
inc
sub
cwde
outs
and
sbb
cmp
push
setl
add
jl
mov
jp
sar
mov
cmp
(bad)
pop
xor
jecxz
or
jmp
adc
jne
sti
sar
fst
jge
push
xor
or
popfw
imul
adc
loopne
push
(bad)
xor
adc
adc
repnz
les
test
cmc
jg
mov
push
(bad)
not
clc
scas
mov
inc
pop
inc
or
ror
adc
sbb
ds
cli
or
mov
or
and
and
fistp
jge
cmp
mov
and
fnstcw
inc
and
bound
cmp
push
push
mov
mov
or
repnz
cld
pushf
inc
push
mov
ret
adc
scas
cmp
mov
xchg
mov
cmc
ret
test
add
xchg
xchg
bound
(bad)
dec
sbb
sub
push
mov
inc
popa
add
loop
test
stos
movs
xchg
or
lods
adc
into
popf
pop
inc
sub
mov
ins
mov
xchg
push
cmp
jge
add
add
loope
fs
mov
cmp
inc
add
cmp
jl
mov
pop
cmp
ret
mov
arpl
in
mov
sbb
adc
mov
and
sub
shl
inc
xchg
and
inc
mov
jae
or
repnz
xor
pop
fucomip
adc
or
cmp
mov
or
test
cmp
ret
scas
movs
popf
push
popa
in
ins
push
mov
(bad)
jae
mov
fbld
pop
mov
test
bound
and
sub
sub
jl
aam
pop
jl
pop
and
outs
das
add
jg
ds
ja
lea
push
add
shl
jmp
and
or
and
std
sbb
ja
xchg
int
or
jnp
call
cwde
mov
mov
rcl
je
adc
push
in
sbb
add
jnp
in
add
mov
xchg
mov
add
cmp
mov
sbb
inc
add
pop
je
push
jo
xor
jne
rcr
aas
(bad)
bnd
add
jecxz
ror
push
push
das
jle
inc
xor
pop
call
add
jo
leave
cdq
test
imul
dec
push
push
dec
cld
cmps
inc
stos
sub
pop
fld
mov
jecxz
jns
daa
push
sbb
pop
xor
cld
mov
add
clc
sub
ror
jo
and
mov
rol
loope
add
push
mov
push
stc
xor
sub
ss
aam
dec
mov
sub
and
sbb
mov
adc
inc
mov
loopne
les
test
ror
jmp
sub
loopne
inc
repnz
mul
dec
(bad)
add
and
jl
cwde
ss
add
jnp
mov
mov
inc
push
or
push
inc
sub
and
mov
inc
adc
add
mov
cld
or
adc
inc
add
or
enter
adc
dec
adc
lock
loope
sahf
push
enter
sbb
or
adc
xchg
enter
mov
repz
adc
fcom
lea
sub
movs
and
ror
jl
sub
(bad)
in
test
ret
push
push
cmp
pop
inc
sbb
(bad)
xchg
ret
shr
mov
pop
dec
mov
mov
jne
test
or
dec
outs
add
aas
mov
ins
cs
sbb
inc
aas
sbb
sbb
jne
popf
fsubr
test
pop
inc
lar
add
test
sti
xor
xchg
push
add
sub
stos
cld
push
sbb
popf
mul
test
xor
and
pop
xchg
dec
sub
sub
or
mov
sbb
adc
vpmacswd
fmul
inc
xchg
push
ret
cmp
or
inc
jo
sbb
movs
pop
push
repnz
or
movs
inc
mov
pop
push
pop
xor
mov
add
cmp
je
pusha
xor
inc
mov
dec
push
jle
mov
mov
inc
mov
push
dec
movs
and
pop
xor
mov
mov
sbb
sub
je
mov
lock
in
or
(bad)
push
jl
(bad)
into
aam
leave
and
stc
pop
push
or
mov
loop
jp
jl
inc
(bad)
in
mov
iret
and
ins
mov
int3
mov
inc
frstor
xor
dec
xchg
and
das
push
loopne
cmp
movs
cli
add
test
add
mov
add
fimul
jmp
pop
sar
retf
in
jp
inc
(bad)
in
cmp
pop
cmp
fcmove
call
add
push
mov
or
mov
call
je
lea
inc
dec
inc
and
sbb
jge
or
and
rol
dec
jl
cmp
pushf
dec
or
jle
outs
in
or
add
mov
test
xchg
sbb
adc
and
jne
inc
push
cmp
mov
in
mov
idiv
popa
in
push
and
retf
cmp
dec
jnp
nop
(bad)
pusha
add
push
pop
jmp
xchg
ret
dec
cs
dec
jns
jle
test
into
sbb
leave
or
adc
ds
in
push
or
test
scas
sub
or
jns
add
sti
add
xor
and
pop
ds
xchg
daa
push
pusha
sub
shl
sbb
push
sbb
mov
pop
cmps
ds
gs
test
cmc
xchg
jge
or
push
cmp
dec
(bad)
inc
cmp
icebp
jne
rol
or
int3
xchg
push
gs
or
cmp
cmp
cli
mov
icebp
mov
xchg
aam
lea
(bad)
fsubr
clc
add
add
sub
iret
or
cmp
sub
dec
push
mov
push
sub
dec
push
push
aas
dec
push
mov
scas
push
imul
adc
xchg
inc
adc
stos
loopne
loop
mov
mov
xor
adc
add
sub
push
pop
jmp
xchg
xor
les
hlt
es
jnp
inc
xchg
xchg
pop
sbb
into
xor
je
jmp
inc
inc
arpl
ss
test
mov
sub
add
in
adc
jmp
icebp
pop
xchg
push
sub
xchg
loopne
push
ja
inc
or
rcr
or
add
fsub
push
pusha
push
fisttp
inc
mov
jnp
(bad)
retf
mov
xor
bound
cmp
enter
neg
test
mov
pop
shr
xor
add
ds
add
sub
pop
jne
pop
sbb
sbb
out
jmp
(bad)
ins
and
jb
xchg
inc
jmp
jl
or
call
ja
push
in
(bad)
arpl
daa
sbb
or
pushf
or
stc
aad
sub
aas
fucomip
cmp
(bad)
dec
sub
gs
pop
ja
xor
pop
dec
cmp
retf
retf
stos
aad
mov
inc
cmp
mov
mov
mov
test
std
push
xchg
add
hlt
add
popf
mov
dec
or
(bad)
int3
clc
les
jmp
inc
xor
bound
xor
dec
mov
test
add
adc
cs
loopne
mov
fnstenv
mov
and
mov
inc
into
ss
imul
and
cli
pop
xchg
or
sub
popa
enter
out
sub
mov
jne
mov
jb
je
adc
add
lea
pop
sub
enter
outs
or
lds
lods
inc
mov
dec
dec
push
and
call
sub
dec
jo
push
cmc
sub
outs
adc
xor
dec
or
sub
inc
jbe
mov
inc
stos
in
xor
or
fisubr
pop
and
jbe
sub
or
sbb
adc
ror
push
fnstsw
pop
cli
pushf
adc
pop
xor
mov
dec
les
mov
and
xchg
jg
sar
ja
or
sub
jo
push
sbb
xchg
(bad)
sub
bnd
aaa
add
stos
dec
push
push
or
lods
jl
rcl
xor
dec
lahf
jb
xchg
sub
and
fcom
sub
mov
mov
xchg
sub
stc
and
dec
fbld
dec
cmp
data16
and
clc
adc
jo
fmul
shl
arpl
dec
call
dec
or
es
cmp
fisttp
adc
inc
lea
xchg
pusha
add
inc
call
in
(bad)
aad
les
pop
push
shl
xchg
mul
iret
aaa
lods
xchg
inc
or
call
inc
adc
sub
mov
inc
sub
ret
xor
mov
xchg
add
pop
(bad)
adc
pop
sub
inc
ret
lods
(bad)
jle
adc
xlat
enter
call
(bad)
(bad)
call
test
inc
in
fiadd
adc
lds
fdivr
add
push
add
dec
push
mov
pop
inc
fwait
sub
mov
mov
dec
pusha
adc
jmp
or
cmp
sub
out
pop
and
or
mov
jmp
scas
mov
sub
cmp
dec
clc
pop
test
and
in
add
enter
sub
iret
pop
sbb
clc
jg
push
out
pop
std
setne
inc
xor
adc
mov
data16
add
leave
adc
pop
int
and
or
sub
pop
mov
jne
retf
lods
scas
mov
mov
mov
test
movs
jmp
xor
aaa
push
add
xchg
adc
lock
adc
cmp
mov
inc
push
xor
shr
adc
and
push
or
call
jg
iret
cli
fnstcw
inc
sub
mov
lahf
pop
jno
and
push
mov
push
test
push
mov
fbld
in
fdiv
or
jecxz
ss
icebp
xchg
test
cdq
outs
push
jge
jnp
jmp
vorps
or
dec
or
pop
pop
fbld
or
leave
dec
add
mov
and
in
dec
cld
dec
xor
sbb
sbb
dec
mov
push
push
mov
jne
call
cmp
inc
repz
cmp
push
movs
push
into
or
xchg
mov
ins
mov
and
xchg
push
lods
cmp
sbb
sbb
jb
(bad)
imul
jge
xchg
shr
xchg
je
repnz
mov
lea
ss
dec
mov
push
popf
or
int3
jmp
sbb
clc
loope
inc
aad
mov
or
test
jmp
cld
rol
add
jne
cmp
adc
push
sahf
push
cli
lea
jp
(bad)
fdivr
push
cwde
adc
loop
pop
lea
sub
and
ds
pop
mov
inc
xchg
ret
cdq
pop
loopne
mov
pop
cdq
idiv
mov
test
sub
sub
xor
js
adc
cmp
inc
jl
dec
mov
shl
or
mov
sbb
out
pop
sbb
mov
(bad)
por
shl
out
or
push
push
adc
out
inc
dec
push
xor
push
sub
jae
pop
shl
cmp
or
or
xor
aad
dec
dec
iret
jae
adc
push
push
jmp
or
popa
fwait
xchg
or
lea
mov
shl
jmp
adc
shl
retf
rol
nop
add
pop
(bad)
mov
pop
cmps
mov
cmps
mul
pop
mov
enter
push
jne
cmc
push
adc
or
ins
dec
call
dec
push
pop
mov
repnz
jmp
loope
rol
push
cmove
push
add
outs
push
cmc
gs
pop
cmp
rcl
neg
xor
mov
add
push
lock
cdq
iret
push
jns
sbb
test
push
sbb
shl
int3
pushf
cmp
dec
fld
ds
loope
jge
or
and
jecxz
cmp
and
into
add
int3
xchg
mov
cmp
adc
adc
test
mov
inc
pop
sti
lds
cmp
fidiv
and
xchg
les
bound
xlat
test
dec
adc
mov
les
jmp
jae
mov
jge
je
jne
mov
mov
bound
mov
dec
mov
cmp
push
cwde
ins
ins
add
and
inc
cdq
jle
repnz
cmp
fstp
mov
movs
jmp
lods
popf
js
adc
imul
fcom
pop
ret
mov
std
fbstp
push
in
xor
fs
bound
jmp
mov
pop
push
xor
and
mov
pop
jno
pop
outs
jnp
imul
scas
popa
sub
data16
lods
jne
sub
fidiv
mov
cs
ror
sub
push
xchg
(bad)
fs
add
cmp
pop
xor
mov
mov
mov
mov
pushw
xlat
add
pop
lea
add
mov
loopne
pop
(bad)
cmps
jmp
mov
jecxz
retf
cmp
rol
pop
fst
mov
in
xchg
and
push
call
mov
pop
mov
sahf
cmp
mov
fwait
xor
clc
jae
lahf
mov
outs
or
jmp
or
mov
ja
arpl
adc
add
xchg
into
mov
sbb
or
inc
jmp
xor
xchg
jns
lods
sahf
sti
cmp
inc
inc
cmp
xor
adc
jmp
or
mov
jae
retf
mov
je
sub
inc
or
dec
inc
out
dec
and
sub
sbb
pop
adc
or
imul
pop
add
cmp
enter
jmp
pushf
retf
in
test
mov
repnz
pop
and
mov
pop
pop
and
xchg
je
or
test
in
add
lahf
cmp
push
mov
xchg
hlt
mov
call
adc
inc
cdq
pop
mov
arpl
ja
addr16
es
into
cmp
call
enter
inc
mov
cwde
sbb
aad
gs
dec
lock
test
sbb
mov
xor
mov
push
and
or
sar
cmp
pop
mov
adc
sbb
push
and
inc
jb
je
mov
test
sub
adc
sbb
jne
pop
sbb
lea
or
sub
sub
xor
push
dec
mov
xor
mov
sbb
mov
xchg
jo
mov
and
nop
or
inc
and
inc
ds
(bad)
jl
fmul
xchg
fs
add
mov
jmp
push
inc
xor
mov
(bad)
jmp
(bad)
sbb
hlt
(bad)
mov
in
outs
pop
cmp
mov
movs
pusha
inc
fcom
loope
push
adc
mov
inc
fldcw
add
cmps
stos
imul
ret
sbb
clc
(bad)
dec
pusha
int3
inc
test
bound
imul
test
and
jno
sub
ret
jl
lock
jg
inc
jmp
push
jne
dec
pop
popf
push
dec
adc
dec
inc
ret
sbb
dec
jb
sub
jp
adc
neg
sbb
mov
xor
push
test
call
xor
mov
sbb
adc
inc
jmp
fsub
xchg
jae
es
ins
movs
and
push
fsubr
int3
mov
xchg
mov
jne
xor
gs
pop
fadd
adc
add
adc
sub
add
cli
mov
sub
push
data16
mov
push
jl
adc
js
jne
sbb
adc
inc
iret
sahf
adc
adc
dec
adc
push
call
add
enter
or
add
sub
adc
xor
push
adc
in
hlt
inc
adc
pop
inc
fild
loop
and
push
add
add
sbb
nop
pop
sbb
mov
push
repz
mov
int3
or
sbb
sar
add
jl
pop
xchg
adc
cmp
jle
loope
sbb
push
adc
not
and
repnz
or
and
sub
mov
icebp
xor
jne
xor
ins
jge
and
jmp
cli
retf
sbb
add
adc
jno
movs
clc
ss
sbb
(bad)
les
cs
mov
out
arpl
iret
imul
inc
add
sar
xor
push
add
test
ret
je
mov
sbb
push
sbb
push
add
sub
add
aad
add
jmp
mov
push
mov
jne
mov
push
(bad)
mov
inc
popa
push
jnp
sar
aas
jmp
nop
add
test
jg
add
jge
or
jne
inc
and
rcr
jno
imul
pushf
cmp
sub
bound
xor
test
push
add
call
jmp
dec
test
add
add
inc
cdq
(bad)
enter
outs
push
push
ja
(bad)
jl
out
mov
xor
fmul
shl
invd
pop
adc
jmp
mov
mov
mov
jno
daa
mov
(bad)
inc
call
xchg
out
cwde
das
pop
push
or
shr
adc
add
jae
mov
or
mov
pop
iret
retf
add
mov
or
rcr
jge
inc
mov
(bad)
mov
mov
adc
adc
daa
(bad)
and
iret
mov
cmc
inc
pop
int3
add
and
pop
je
cmp
xchg
inc
dec
outs
add
stos
sar
and
sub
lahf
cli
jnp
mov
add
xchg
lea
(bad)
(bad)
int3
mov
mov
ins
ret
(bad)
or
or
or
out
xchg
pop
push
ret
jmp
je
popa
dec
push
jne
or
jb
ret
and
adc
imul
jge
mov
adc
pop
bound
adc
push
cli
adc
call
jle
add
test
jne
sbb
adc
pop
adc
scas
push
sbb
cmc
mov
jl
mov
or
inc
and
mov
xor
cs
pop
mov
movs
rcr
inc
loop
call
cmp
dec
js
pop
sub
ins
sbb
test
add
or
xor
mov
arpl
dec
mov
add
and
xchg
enter
or
fadd
mov
pop
mov
or
fadd
mov
retf
ja
push
cmp
mov
or
dec
dec
push
cld
jmp
sub
add
inc
loope
out
mov
sub
sub
push
mov
fsub
push
ins
push
cmp
ins
adc
push
dec
dec
pop
jbe
dec
iret
call
movs
leave
es
or
or
cmc
push
inc
in
ret
adc
push
cdq
nop
test
iret
daa
pop
stc
inc
or
fsubr
pop
mov
jae
or
loope
mov
into
fcmovnb
and
or
hlt
pop
stos
cmps
dec
push
cmp
scas
adc
mov
cdq
xchg
shl
pop
in
div
or
fistp
mov
add
xchg
js
xor
mov
jno
clc
jns
mov
xor
lea
jmp
cmp
jne
pop
xor
inc
xor
jecxz
lods
jbe
jmp
aas
push
clc
xor
loopne
sti
addr16
cwde
sbb
push
mov
not
push
stc
jno
sub
sbb
push
add
je
sub
stos
jmp
xchg
ja
push
and
pop
call
mov
xor
dec
mov
(bad)
push
xchg
lea
cmp
jg
sub
xlat
dec
nop
enter
adc
sub
cli
fstp
test
xchg
test
jmp
pop
retf
xchg
push
xor
or
dec
neg
adc
add
inc
mov
pop
and
jg
add
repz
adc
cmp
cmp
nop
xchg
lahf
inc
mov
pop
pop
mov
sub
icebp
xchg
stos
sbb
addr16
cmp
outs
or
and
jg
xor
inc
mov
test
dec
cli
jns
and
dec
sub
imul
push
cs
xchg
mov
dec
dec
cdq
loopne
bound
mov
test
jle
mov
aas
test
mov
fs
outs
and
lock
sbb
inc
add
pop
mov
pop
inc
mov
outs
ret
lods
sbb
aad
and
hlt
test
ficomp
add
jmp
(bad)
ror
inc
add
adc
(bad)
jbe
xchg
jle
push
lods
fld
and
test
or
xchg
inc
dec
mov
adc
or
sbb
and
adc
xor
call
push
jge
mov
stc
add
lea
std
push
aas
lds
into
(bad)
xor
jle
in
sub
hlt
dec
push
xchg
sti
shr
pop
les
and
mov
iret
xchg
xchg
xchg
mov
or
mov
sbb
dec
clc
rcl
adc
fistp
mov
loope
and
out
mov
dec
or
bound
dec
enter
gs
or
scas
adc
enter
bswap
loop
stc
aam
ret
daa
into
pop
xchg
add
(bad)
lea
adc
jge
hlt
retf
jmp
xor
or
call
add
adc
repnz
dec
(bad)
sbb
sub
fbld
mov
stos
add
mov
jns
data16
mov
adc
daa
jae
bound
or
mov
pushf
pop
scas
mov
cli
adc
push
in
dec
les
mov
sub
mov
mov
mov
and
ds
(bad)
and
mov
lods
rol
call
out
popf
xchg
pop
retf
cmp
mov
xor
or
cld
sar
arpl
xor
and
cdq
out
ror
movs
mov
test
jg
mov
mov
add
rep
stos
mov
and
sbb
jb
mov
out
(bad)
xchg
mov
inc
dec
jmp
xchg
mov
test
out
rcl
test
psllw
xchg
cmp
mov
sub
and
mov
popf
stc
cmp
lods
ficomp
xchg
jo
or
sub
inc
sbb
adc
in
jecxz
jnp
scas
push
rcr
add
fist
movs
movs
sub
into
call
inc
inc
pop
jmp
push
mov
test
sti
and
dec
cmp
add
add
push
mov
std
push
and
dec
dec
add
cmp
(bad)
and
in
push
mov
pop
push
xchg
push
jp
imul
pop
movs
sahf
mov
pop
(bad)
push
test
jg
mov
enter
clc
or
daa
jne
fs
test
and
sub
sbb
test
dec
mov
(bad)
jbe
push
adc
icebp
or
adc
adc
jb
mov
pop
adc
out
inc
xchg
cli
xor
or
add
fs
in
mov
cmp
push
add
inc
mov
jb
sbb
test
daa
and
pop
aaa
mov
push
cmp
mov
loopne
mov
imul
inc
stos
sbb
inc
pop
mov
cdq
aaa
jb
inc
xlat
jg
call
jmp
push
inc
mov
xchg
call
dec
and
adc
cli
test
jmp
and
pop
sub
pop
cmc
mov
and
adc
dec
dec
je
fwait
add
adc
movs
nop
pusha
inc
jmp
adc
je
mov
dec
fbld
jl
add
or
mov
ds
(bad)
sbb
dec
pop
mov
dec
cmp
sahf
cmps
jge
mov
popa
jb
or
jp
push
dec
int3
cmp
jmp
mov
inc
dec
or
pop
nop
std
and
stos
cmps
jno
or
xchg
popa
inc
push
dec
cmp
fnstcw
adc
push
jmp
je
sti
cwde
daa
adc
clc
sub
sbb
test
cmp
scas
aad
sub
push
push
adc
call
adc
aad
pop
add
push
jmp
jmp
sbb
fist
mov
xchg
inc
add
repnz
or
punpcklbw
cli
cs
pushf
inc
sbb
add
add
(bad)
adc
and
mov
dec
jo
adc
mov
sar
push
and
add
and
pop
cmps
mov
btr
dec
enter
pop
jmp
fnstenv
adc
dec
cld
jmp
nop
mov
sbb
cmps
xchg
pop
(bad)
pushf
clc
out
jmp
or
add
sbb
out
ficomp
lds
pop
lahf
shr
push
and
hlt
xor
or
pop
or
rcl
adc
push
daa
nop
push
fs
mov
pop
add
add
jl
jmp
out
push
mov
stc
(bad)
ficomp
call
adc
mov
scas
and
or
jl
bound
hlt
adc
push
mov
icebp
jb
aas
xchg
xchg
xor
add
cmp
leave
sub
(bad)
adc
call
add
xchg
addr16
inc
fisubr
out
mov
test
sbb
adc
enter
fs
mov
jmp
je
push
inc
out
jns
ds
fmul
in
xor
cwde
add
sti
mov
jge
and
push
das
ja
mov
jge
dec
sbb
data16
sub
cmp
adc
and
push
and
push
dec
jge
push
adc
mov
mov
adc
leave
std
mov
idiv
(bad)
fcom
dec
shr
mov
mov
inc
adc
mov
in
dec
cmp
inc
inc
fs
mov
dec
loop
gs
xchg
cmp
hlt
sbb
pop
and
bound
mov
shl
push
enter
adc
add
cmc
ins
adc
push
jno
js
and
xorps
sub
or
xchg
sub
ror
imul
js
pop
add
out
nop
lods
cmps
cmp
xor
retf
test
jae
mov
xor
test
mov
aad
cdq
fisttp
pushf
mov
mov
call
mov
pop
pop
div
push
ret
lahf
push
add
mov
xor
js
in
into
add
call
shr
or
div
cwde
dec
cli
jmp
pop
or
push
mov
mov
mov
and
out
cld
jmp
pop
xchg
not
xchg
movs
mov
mov
jge
lods
arpl
aaa
sbb
push
or
push
push
pusha
out
mov
push
lea
movs
aas
stc
xchg
call
push
stos
loope
dec
sbb
add
inc
pop
sub
mov
movsx
loope
shl
(bad)
cmp
dec
jb
in
inc
jnp
dec
lods
in
lods
adc
scas
rol
inc
inc
test
or
out
cld
loope
inc
rcl
ja
jae
add
movs
jl
adc
mov
mov
loop
add
ins
push
fucomi
mov
xchg
jge
nop
movs
and
lods
sbb
fdiv
call
xchg
mov
jg
movs
and
and
cld
pop
mov
jo
pop
or
jle
add
sbb
add
jl
sub
test
xchg
scas
and
shr
inc
mov
xor
push
ds
pop
clc
xchg
jmp
pop
jl
cdq
jne
add
and
sub
adc
sub
ffree
xchg
or
add
cmps
and
and
sahf
lahf
and
jns
enter
mov
mov
or
dec
push
add
mov
jle
out
xchg
lock
es
jb
push
push
jmp
ud2
xadd
cmps
xchg
or
xchg
cld
ds
mov
xchg
mov
ret
mov
adc
loopne
ret
mov
sti
sbb
iret
push
pop
pushf
(bad)
xor
jae
das
hlt
push
xor
hlt
xor
loop
cmps
push
jmp
jnp
mov
pop
fdivr
or
dec
dec
scas
jbe
lahf
cs
xor
mov
add
mov
or
adc
push
jmp
icebp
outs
mov
dec
inc
mov
enter
fs
pop
ins
cmc
push
arpl
loopne
int
movs
and
jl
ins
(bad)
arpl
adc
or
sub
push
es
push
cli
dec
add
dec
jmp
jne
inc
jmp
scas
inc
mov
(bad)
mov
(bad)
pop
cmp
call
pop
jmp
and
sub
and
popa
int3
add
xor
jmp
xchg
add
js
jno
test
xchg
sub
shl
out
jbe
sar
mov
adc
mov
add
stc
mov
cmc
neg
repnz
cmp
add
add
imul
xchg
adc
clc
cmps
adc
movs
mov
cmp
cld
sbb
repnz
mov
std
xchg
lock
xchg
xlat
mov
xchg
mov
dec
retf
adc
or
adc
sbb
cmp
fsub
or
adc
mov
das
and
mov
icebp
mov
lds
fs
push
jmp
sar
dec
fld
mov
adc
xor
sti
jmp
icebp
jne
pusha
mov
data16
jl
inc
cvtps2pi
or
dec
sub
or
add
sub
jbe
neg
mov
shl
idiv
rol
or
inc
test
mov
out
adc
cmp
or
jnp
scas
pop
ror
enter
xchg
mov
add
into
mov
or
mov
adc
and
dec
jmp
out
inc
sti
out
dec
aas
adc
inc
add
popa
jle
xchg
add
sbb
(bad)
seta
hlt
inc
and
add
jmp
fisttp
mov
shr
cmps
aas
clc
dec
repz
or
test
fs
push
jmp
xchg
test
test
pop
and
push
int
stos
pop
or
push
mov
adc
add
outs
mov
push
sahf
pop
call
mov
and
sbb
aaa
adc
xchg
out
or
push
dec
mov
adc
jp
cli
imul
in
jge
idiv
mov
xchg
in
mov
(bad)
out
add
psubusw
mov
daa
adc
adc
add
in
inc
sbb
fld
rol
nop
cmp
in
ficomp
pop
je
call
lock
jg
or
icebp
in
jge
loop
jne
xchg
push
(bad)
inc
sbb
call
dec
sbb
pop
jne
mov
test
mov
jle
test
sub
repz
add
cli
jge
fs
xchg
call
sbb
aaa
push
xchg
adc
or
push
sti
sahf
adc
(bad)
(bad)
rol
dec
add
or
lock
jne
bnd
mov
out
add
xor
fsub
cwde
setge
icebp
cmc
and
inc
test
mov
sub
sub
mov
push
pop
push
cmp
loop
cdq
popa
or
xor
es
add
and
and
fsub
icebp
mov
cmps
dec
push
or
out
imul
push
or
hlt
out
mov
in
and
test
push
enter
sbb
or
mov
inc
sbb
ror
pop
jg
das
push
xchg
pop
mov
stc
jb
stc
pop
xlat
jmp
xchg
ret
inc
lahf
mov
push
jle
add
add
paddsw
pop
mov
fchs
mov
leave
test
pop
test
xchg
inc
mov
mov
jbe
xchg
or
inc
pop
je
cmp
push
sbb
cmp
push
fistp
clc
adc
les
lds
xlat
mov
fwait
adc
fnstcw
and
int3
sti
outs
and
mov
inc
mov
mov
jmp
pop
add
je
mov
popf
mov
clc
dec
or
xor
ret
jno
sub
add
repz
push
out
jbe
add
in
jge
push
mov
xor
and
mov
enter
push
sub
and
or
jne
popf
loope
jmp
xor
jl
jecxz
jl
cdq
ror
sub
mov
and
add
mov
adc
mov
xchg
aad
not
loop
push
cld
in
stos
fsubr
jg
std
in
(bad)
cmps
ins
pop
aad
shr
lock
dec
(bad)
sbb
add
adc
mov
das
push
in
das
outs
jl
inc
das
ds
push
push
inc
adc
mov
add
fist
pushf
std
dec
mov
lods
mov
cmc
pop
xchg
add
xchg
jmp
or
fisttp
(bad)
mov
pushf
dec
mov
and
enter
out
xchg
and
lea
les
or
mov
stc
and
inc
lods
psubd
mov
mov
jmp
mov
xor
aad
scas
push
arpl
dec
jmp
loope
jg
dec
popa
and
enter
pop
xor
adc
adc
aaa
jecxz
push
jmp
cwde
cld
sbb
mov
sub
mov
fimul
stos
jecxz
pop
std
xchg
pop
mov
call
pop
mov
lahf
ret
push
call
push
mov
mov
add
push
call
sti
(bad)
jmp
pushf
adc
and
add
rcr
popa
lods
dec
inc
push
jg
and
cmp
sub
push
xor
ror
sbb
jl
test
gs
dec
add
in
xchg
ret
enter
(bad)
mov
pop
push
xor
jbe
jbe
mov
adc
in
ret
dec
push
test
lods
lea
das
sbb
scas
fisub
mov
cli
loop
outs
(bad)
fimul
sbb
(bad)
sti
cmps
or
ret
out
push
push
cld
popa
mov
in
push
push
inc
fldpi
sbb
(bad)
mov
pop
mov
cmp
out
into
inc
add
stos
pop
(bad)
mov
add
arpl
or
les
jge
jmp
jno
je
or
push
test
sub
imul
cmps
add
cmp
push
jb
jo
hlt
movs
push
add
or
pop
lods
or
(bad)
lods
inc
inc
pop
bnd
fld
or
xor
xor
cld
dec
xchg
rcr
pop
jne
push
mov
jle
and
and
cwde
clc
cmp
and
adc
in
xchg
(bad)
arpl
jmp
loope
adc
je
jle
mov
adc
xor
sbb
jmp
dec
clc
sub
sbb
ja
push
and
and
push
push
daa
dec
popf
mov
fwait
mov
sub
cwde
cmp
or
js
sbb
fbld
loop
cmp
jg
lea
ret
xchg
jge
fsubr
mov
les
jb
ds
cmp
je
test
pop
mov
call
pop
test
cli
retf
lods
inc
mov
add
movs
xchg
mov
add
jp
nop
adc
or
xchg
sti
xor
pop
mov
or
movs
(bad)
pop
enter
push
adc
mov
fisttp
push
stos
pushf
jne
mov
sbb
jae
popa
jmp
push
in
inc
je
(bad)
jp
loopne
sub
or
mov
out
daa
sub
jnp
fld
mov
push
sbb
dec
test
push
cs
sub
add
and
sub
dec
push
stos
movs
push
add
dec
adc
push
pop
inc
(bad)
cld
add
ret
adc
mov
or
xor
mov
sub
sub
test
es
dec
mov
cmp
pmulhw
clc
add
adc
add
push
dec
inc
test
jne
push
mov
call
out
stc
cmp
lods
(bad)
mov
xor
push
jmp
(bad)
ja
cld
and
je
mov
movs
xor
jne
aaa
clc
call
dec
xlat
sti
addr16
cdq
ins
pushf
shr
fisub
loopne
inc
cmp
dec
fadd
mov
cmp
mov
rcr
jge
dec
or
not
jmp
in
add
cmp
popa
in
mov
pop
fld
loope
lea
cwde
js
and
test
in
sub
cmp
add
mov
and
mov
pop
cmp
pop
pop
cdq
ja
push
das
shl
push
jmp
int3
ret
jle
outs
sub
xchg
(bad)
push
pop
inc
neg
sbb
adc
fsubr
jae
xchg
push
pushf
shr
retf
xchg
jge
fs
mov
rol
adc
cmp
mov
int3
xchg
ins
jb
bound
and
xchg
jo
pop
push
cmp
jno
mov
xlat
adc
sub
sti
ror
movs
retf
pop
outs
mov
test
inc
rcr
xchg
sbb
and
mov
or
xchg
cli
(bad)
mov
les
adc
fist
adc
dec
ret
pushf
push
not
add
jmp
lds
dec
and
add
mov
stc
mov
call
xchg
mov
xor
movzx
jmp
adc
test
loopne
test
retf
js
add
loope
or
movs
xchg
jns
iret
and
dec
inc
adc
jnp
mov
hlt
inc
and
fidivr
sbb
sbb
mov
les
les
mov
and
mov
les
in
inc
lock
xor
cwde
and
jns
cmc
xor
sub
sub
and
and
xchg
and
nop
inc
enter
and
push
(bad)
cmps
xchg
push
cwde
mov
adc
adc
inc
out
mov
xor
inc
add
sbb
dec
pop
std
mov
add
call
push
cmp
jbe
mov
sbb
popa
mov
call
enter
mov
mov
sub
or
mov
cmp
sub
push
cmp
cwde
xchg
dec
dec
push
inc
or
mov
cld
pop
les
mov
pop
ja
xchg
adc
adc
sbb
and
je
push
sbb
in
adc
pop
or
cwde
sub
out
mov
fmul
inc
lock
ret
retf
mov
je
pop
sbb
test
enter
and
adc
enter
js
outs
adc
mov
fnstcw
movups
xor
jmp
sub
neg
ja
mov
call
(bad)
sbb
aas
jl
adc
and
and
jns
ds
ins
or
pop
mov
pop
(bad)
mov
ret
push
or
test
dec
outs
adc
loopne
bound
sub
inc
xor
repz
push
scas
mov
call
mov
dec
mov
add
sbb
cmp
push
and
call
mov
enter
and
cmp
or
and
fmul
sahf
loopne
call
and
xchg
and
dec
xchg
enter
dec
pusha
adc
mov
call
mov
and
adc
mov
jb
push
cmp
repz
into
mov
lods
stos
cdq
and
iret
jno
inc
bound
inc
sub
mov
or
xor
icebp
mov
cld
inc
push
dec
inc
pusha
inc
mov
push
add
ss
scas
or
or
adc
nop
pop
or
and
cmc
cmp
and
pop
push
sub
dec
push
in
retf
xchg
and
movs
nop
cld
sub
clc
jl
fisubr
mov
and
xor
retf
xchg
push
and
pop
mov
mov
out
fwait
mov
mov
push
(bad)
pop
pushf
ins
sub
adc
cmp
jle
nop
xor
sub
adc
cmp
scas
ja
cld
cmp
addr16
cmp
sub
and
pop
test
inc
push
push
popf
or
movs
lock
inc
jbe
xchg
in
test
loopne
repnz
push
mov
jo
test
cmp
inc
mov
popa
xchg
jmp
sub
xor
mov
stos
sbb
or
xchg
xchg
push
mov
adc
jle
mov
pop
dec
jge
push
adc
mov
add
cmp
jb
dec
cld
(bad)
ret
lods
test
xor
jno
daa
rep
dec
inc
and
icebp
(bad)
fs
dec
inc
mov
lods
push
(bad)
das
bound
adc
add
fst
js
nop
push
mov
ins
jp
loope
push
sub
xor
push
sbb
dec
lahf
sub
