inc
scas
or
add
add
dec
add
add
add
add
add
add
add
push
dec
push
add
loopne
or
adc
or
rol
add
add
add
sub
es
sub
es
sub
or
add
cmp
add
and
add
add
sub
add
and
inc
add
and
add
add
add
sub
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
jmp
add
and
add
add
aad
(bad)
jmp
or
add
cmp
add
add
and
add
sub
mov
mov
(bad)
jmp
dec
add
add
add
add
and
add
add
add
xor
add
push
add
add
cmp
sub
add
push
and
cmp
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
and
add
add
dec
add
add
or
xor
sbb
and
mov
popa
cmp
add
add
push
adc
adc
or
add
push
and
add
add
and
add
and
test
mov
pop
or
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
cmp
add
add
pop
or
sldt
push
and
add
add
cmp
add
add
adc
pop
adc
or
add
cmp
jae
add
or
push
sub
add
cmp
add
add
and
add
add
cmp
adc
and
sub
mov
repnz
(bad)
(bad)
(bad)
call
or
mov
and
cmp
(bad)
push
add
push
or
add
add
cmp
add
imul
add
imul
adc
and
inc
add
add
adc
add
pop
aas
pop
bound
and
add
cmp
add
add
or
jae
mov
pop
and
adc
cmp
(bad)
(bad)
call
push
push
adc
ret
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
push
(bad)
call
add
ja
add
cdq
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
mov
push
add
add
mov
(bad)
call
push
pop
jae
add
or
pop
push
outs
add
add
pop
or
cmp
add
and
add
add
mov
(bad)
call
or
fdivr
cmp
(bad)
(bad)
inc
sub
add
push
adc
add
data16
(bad)
jmp
mov
mov
(bad)
call
add
aas
pop
add
add
sldt
add
or
inc
(bad)
(bad)
jmp
adc
and
mov
inc
push
and
(bad)
call
sub
add
push
or
or
lods
aam
aas
pop
and
dec
sbb
cli
std
(bad)
inc
or
sbb
add
or
and
add
add
add
(bad)
jmp
bound
push
add
add
mov
or
and
(bad)
call
push
sub
xor
add
add
sub
es
and
add
sub
add
cmp
add
adc
repnz
pop
pop
and
cmp
add
add
adc
add
add
or
push
add
add
cmp
add
add
adc
xchg
es
pop
and
mov
rol
add
pop
adc
pop
adc
sahf
and
add
add
or
add
cmp
add
add
adc
jne
pop
xor
push
mov
mov
or
int
xchg
int3
pop
and
cwde
mov
popa
cmp
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
mov
or
pop
dec
mov
in
movs
popa
cmp
add
adc
sbb
pop
sbb
sahf
and
add
add
or
nop
add
add
adc
adc
and
adc
rcr
cmp
add
adc
scas
xchg
adc
pop
and
pusha
mov
add
push
sbb
sub
add
push
adc
and
add
cmp
add
adc
sbb
or
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
push
cmp
pop
adc
and
add
add
pop
add
add
or
xor
pop
pop
and
cmp
add
add
or
xor
jno
and
xor
mov
add
adc
or
add
and
cmp
add
add
scas
jbe
dec
and
add
adc
sbb
pop
sbb
sahf
adc
mov
xchg
inc
pop
and
dec
in
adc
jne
add
or
pop
sbb
or
pushf
mov
pop
and
cmp
add
adc
add
add
mov
add
adc
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
add
js
add
and
xchg
ins
and
add
xchg
jo
jle
cmp
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
add
sub
inc
add
add
add
add
or
icebp
or
add
mov
popa
cmp
add
add
or
or
popa
or
add
sbb
add
adc
jmp
and
fmulp
push
popa
cmp
add
add
or
movs
inc
daa
xchg
pop
and
cmp
or
adc
in
add
and
loope
add
adc
mov
scas
fstp
push
jne
popa
cmp
pop
pop
or
pop
pop
or
or
or
popa
sahf
adc
and
mov
cmp
add
adc
sbb
pop
sbb
or
add
add
xchg
add
add
or
adc
movs
pop
and
mov
popa
cmp
add
add
add
adc
add
add
or
jo
add
adc
movs
pop
ds
pop
and
push
popa
cmp
add
add
or
push
and
adc
pop
sbb
adc
cmp
pop
and
cmp
add
add
or
jno
call
movs
popa
cmp
add
add
adc
sahf
and
add
add
sbb
add
adc
pop
adc
iret
(bad)
(bad)
jmp
and
add
dec
or
add
add
add
add
add
(bad)
call
cld
(bad)
jmp
add
cmp
(bad)
inc
(bad)
(bad)
dec
(bad)
call
cld
(bad)
(bad)
jmp
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
or
add
jmp
(bad)
push
add
add
(bad)
(bad)
call
add
mov
add
inc
add
add
add
add
std
(bad)
call
std
(bad)
jmp
add
add
add
add
inc
add
add
(bad)
(bad)
call
add
aaa
std
(bad)
inc
add
add
sbb
add
pop
cmp
(bad)
jmp
adc
test
and
cmp
add
add
or
sbb
and
add
add
cmp
(bad)
(bad)
jmp
and
std
in
cmp
add
add
or
pop
adc
cmp
(bad)
(bad)
jmp
and
add
add
adc
(bad)
jmp
dec
jno
ret
add
add
or
adc
xchg
std
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
or
or
shl
add
add
or
adc
add
add
add
and
or
add
cmp
(bad)
(bad)
jmp
push
adc
sub
add
sub
xchg
(bad)
(bad)
jmp
and
add
add
test
(bad)
call
or
mov
mov
sub
cmp
add
push
adc
and
add
add
mov
(bad)
call
or
sbb
jno
pop
and
cmp
add
add
pop
pop
movups
pop
setne
pop
setne
and
add
add
pop
(bad)
(bad)
call
adc
add
add
and
add
push
add
push
or
loopne
ret
push
and
pop
inc
sub
add
ins
(bad)
(bad)
jmp
dec
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
sti
(bad)
push
sti
(bad)
jmp
add
push
add
add
(bad)
dec
(bad)
call
(bad)
(bad)
dec
add
call
add
(bad)
push
add
call
sti
(bad)
(bad)
mov
sti
(bad)
call
std
(bad)
inc
cld
(bad)
(bad)
jge
(bad)
push
cld
(bad)
jmp
add
mov
(bad)
call
(bad)
jmp
cld
(bad)
call
add
add
(bad)
inc
std
(bad)
jmp
lods
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
or
add
cmp
(bad)
jmp
adc
imul
cmp
(bad)
(bad)
call
adc
add
add
adc
adc
mov
out
xchg
pop
cld
popa
cmp
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
adc
sub
or
pop
and
test
popa
cmp
(bad)
(bad)
call
pop
adc
xchg
adc
and
add
add
or
add
cmp
std
(bad)
jmp
adc
adc
and
adc
pop
adc
and
add
add
repz
(bad)
jmp
cmp
or
(bad)
(bad)
call
adc
add
fdivr
(bad)
jmp
push
(bad)
cmp
and
add
ja
or
and
(bad)
call
or
push
and
adc
push
rcr
cmp
pop
or
pop
pop
or
popa
sahf
adc
not
stos
pop
and
cmp
(bad)
call
adc
adc
add
cmp
(bad)
call
or
cmp
and
pop
and
cmps
inc
stos
popa
cmp
(bad)
(bad)
jmp
dec
movs
je
or
add
pop
cld
(bad)
call
adc
and
add
add
dec
cld
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
xor
(bad)
jmp
fs
(bad)
std
(bad)
call
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
adc
(bad)
jmp
push
repz
cmp
add
add
xor
cmp
or
pop
adc
adc
arpl
mov
pop
pop
sbb
popa
cmp
pop
pop
or
xchg
or
or
or
test
cmp
pop
shl
(bad)
dec
adc
pop
jno
add
add
or
add
pop
add
add
lahf
sti
(bad)
jmp
add
adc
push
add
add
adc
add
push
add
fild
sub
lods
sbb
add
pop
push
or
js
add
mov
pop
adc
adc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
test
add
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
xor
loopne
and
push
popa
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sub
js
dec
popa
cmp
(bad)
(bad)
call
add
add
sub
push
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
cwde
mov
and
cmp
(bad)
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
cmp
lea
add
sbb
mov
pop
push
popa
cmp
add
adc
adc
and
sbb
js
popa
cmp
(bad)
call
push
movs
add
add
or
pop
and
and
push
popa
cmp
(bad)
call
pop
and
and
jne
mov
(bad)
inc
sbb
add
pop
and
icebp
sub
and
jl
scas
popa
cmp
(bad)
(bad)
call
pop
and
fwait
jo
and
or
(bad)
(bad)
jmp
or
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
or
pop
xchg
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
aam
test
and
mov
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
in
mov
pusha
inc
popa
cmp
(bad)
inc
outs
pop
push
or
add
and
or
cmp
add
add
ins
sar
and
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
and
and
std
popa
cmp
std
(bad)
inc
outs
push
push
or
add
and
sbb
and
add
cmc
or
cli
cld
(bad)
inc
sub
add
adc
push
add
add
adc
add
push
add
popa
dec
retf
pop
and
adc
add
push
or
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
and
jp
and
fcomp
aas
popa
and
pop
inc
or
add
inc
add
add
add
rol
add
mov
add
add
add
add
add
add
add
xor
add
repz
add
and
sbb
add
outs
push
push
or
add
and
jns
xchg
add
into
imul
and
enter
pop
popa
cmp
and
and
cmp
cmp
(bad)
dec
push
mov
or
pop
and
and
fdivrp
popa
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
outs
mov
adc
aam
popa
cmp
(bad)
(bad)
call
add
add
sub
push
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
and
cmp
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
and
add
adc
cmp
es
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
fld
(bad)
pop
and
cmp
(bad)
inc
outs
pop
push
or
add
and
cmp
add
add
sub
pop
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
and
pop
and
cmp
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
or
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
pop
popa
inc
pop
and
popa
icebp
xor
xchg
std
(bad)
inc
sub
adc
push
add
add
add
add
push
add
ins
sub
cmp
out
popa
adc
and
inc
add
mov
adc
pop
push
pop
inc
push
add
add
add
loop
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
lods
and
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
jnp
sbb
fwait
aam
retf
popa
cmp
(bad)
(bad)
call
pop
and
xor
cmp
(bad)
(bad)
jmp
or
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
mov
in
popa
cmp
(bad)
(bad)
call
lea
add
sbb
nop
fbld
mov
mov
(bad)
(bad)
inc
outs
sbb
or
add
and
sar
and
add
pop
ins
das
push
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
and
test
pop
jmp
popa
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
add
cdq
or
popa
popa
cmp
add
add
sub
push
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
imul
pop
into
loop
cmp
std
(bad)
inc
pop
push
or
pop
and
and
cmp
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
outs
pop
push
or
add
and
add
add
and
adc
and
aaa
(bad)
jmp
std
(bad)
inc
outs
sbb
or
add
and
adc
cmp
add
add
les
cmp
(bad)
inc
sub
add
adc
push
add
add
add
add
push
add
outs
pop
push
cmp
and
push
xor
sub
popa
and
pop
inc
adc
add
sahf
add
add
add
add
add
add
add
and
add
pushf
add
add
add
jbe
add
mov
add
or
add
cmps
(bad)
(bad)
inc
add
add
add
call
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
add
push
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
ret
test
mov
(bad)
(bad)
dec
push
mov
or
pop
and
adc
fld1
popa
cmp
outs
push
push
or
add
and
retf
bound
add
stos
sub
out
adc
and
pop
push
pop
popa
cmp
(bad)
(bad)
call
pop
and
and
scas
jmp
cmp
(bad)
(bad)
call
pop
and
fist
and
movs
outs
jge
cmp
push
movs
add
add
or
pop
and
sbb
sbb
cli
cmp
popa
cmp
lea
add
sbb
push
add
test
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
sbb
cmp
and
cmp
add
add
or
(bad)
sbb
add
sbb
or
add
adc
and
into
cmps
push
fs
cmp
(bad)
(bad)
inc
sbb
add
pop
and
hlt
mov
pop
and
cmp
std
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
or
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
sar
std
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
adc
and
aas
les
popa
cmp
inc
outs
sbb
or
add
and
jg
lea
add
push
cmp
inc
pop
push
or
pop
and
neg
mov
cmp
pop
push
or
add
and
cmps
test
cmp
add
add
mov
lods
shl
(bad)
inc
sub
add
xor
add
add
add
add
push
add
test
and
push
lea
pop
push
or
ja
test
and
and
pop
inc
adc
add
add
add
add
add
add
add
add
mov
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
cmp
mov
and
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
mov
xor
cmp
popa
cmp
(bad)
(bad)
call
pop
and
aas
pop
mov
pop
and
adc
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
mov
pop
and
addr16
(bad)
(bad)
jmp
or
add
jle
add
add
or
add
or
or
add
movs
add
add
or
pop
and
stos
sub
out
in
test
(bad)
call
push
movs
add
add
or
pop
and
push
shl
(bad)
(bad)
inc
outs
pop
push
or
add
and
ss
inc
and
add
cmp
cmp
push
mov
or
pop
and
(bad)
jo
and
in
pop
inc
popa
cmp
(bad)
inc
outs
push
push
or
add
and
xchg
lock
add
sahf
jmp
jo
adc
and
popa
cmp
call
add
adc
adc
and
outs
jo
pop
and
xchg
adc
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
rol
sahf
xor
cmp
std
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
and
cmp
outs
sbb
or
add
and
cli
jns
cmp
add
add
scas
xchg
sub
std
(bad)
call
pop
and
mov
pop
and
add
shl
std
(bad)
call
add
add
sub
push
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
add
pop
and
daa
inc
mov
cmp
std
(bad)
inc
sub
add
sub
es
add
in
add
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
scas
add
add
add
adc
add
push
sbb
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
add
or
or
imul
and
scas
outs
loopne
popa
cmp
add
add
add
bound
jnp
add
add
or
shl
push
add
add
sub
pop
and
lods
mov
test
popa
cmp
add
add
add
pop
jge
add
add
or
adc
and
add
bound
add
add
int3
sbb
inc
sldt
add
add
lods
(bad)
(bad)
push
add
inc
(bad)
(bad)
dec
add
push
add
add
add
push
add
add
(bad)
dec
add
add
add
add
add
add
or
mov
add
jnp
add
add
add
add
xor
sbb
add
add
(bad)
(bad)
jmp
xchg
dec
xchg
and
cmp
and
and
pop
popa
cmp
add
add
push
jge
add
add
cmp
(bad)
inc
and
add
bound
add
add
cli
(bad)
(bad)
jmp
push
cmp
inc
and
and
cmp
pop
popa
cmp
sub
or
mov
add
add
jnp
add
add
bound
jnp
add
add
or
shl
push
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
or
add
jnp
add
add
add
add
xor
sbb
add
(bad)
(bad)
jmp
pushf
push
test
and
es
and
mov
pop
popa
sub
add
add
add
add
add
add
add
sbb
add
add
cmp
imul
and
int3
call
pop
inc
or
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
dec
cmp
(bad)
jmp
push
mov
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
call
push
cmp
inc
and
mov
pop
and
xchg
mov
sub
add
add
pop
jge
add
add
cmp
(bad)
(bad)
inc
and
add
jnp
add
add
fs
jge
add
add
or
jmp
(bad)
and
call
pop
and
popa
cmp
(bad)
call
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
fld
add
push
add
adc
add
push
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
pop
or
sub
movs
add
add
jnp
add
add
loopne
add
add
sub
add
push
sub
sbb
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
aad
or
sub
and
and
outs
pop
add
add
add
pop
pop
bound
ds
inc
add
add
idiv
(bad)
call
and
psrlq
cmps
dec
les
and
add
add
mov
(bad)
(bad)
(bad)
fdivr
(bad)
call
add
sbb
and
popf
pushf
dec
and
psrlq
es
sub
add
adc
or
dec
add
add
add
adc
add
push
pop
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
cmps
add
add
or
jnp
add
add
cmp
add
sbb
mov
add
and
xchg
mov
jecxz
and
push
add
add
add
add
add
into
add
add
(bad)
(bad)
dec
add
sar
call
dec
pop
mov
sub
and
sahf
repnz
and
sub
or
mov
pop
bound
jnp
add
add
loopne
add
add
add
adc
add
and
sub
or
or
and
sub
pop
inc
add
add
idiv
(bad)
jmp
movs
sbb
add
sub
add
sldt
add
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
(bad)
(bad)
cmp
add
sbb
sub
add
add
(bad)
(bad)
jmp
pop
pop
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
sub
add
add
(bad)
(bad)
jmp
and
or
(bad)
inc
pop
add
add
add
pop
pop
bound
adc
or
xchg
add
add
add
adc
add
push
pop
or
retf
add
add
add
dec
icebp
rol
jg
popa
cmp
add
add
jnp
add
add
loopne
add
add
add
adc
add
and
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jle
add
cmp
add
add
add
add
add
dec
sbb
add
add
idiv
(bad)
call
sub
pop
bound
cmp
add
add
sbb
sbb
add
and
inc
add
add
idiv
(bad)
jmp
pop
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
and
es
and
data16
or
pop
pop
pop
bound
pop
or
invd
pop
pop
or
cmp
(bad)
call
or
add
add
add
(bad)
(bad)
(bad)
cmp
add
inc
add
add
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
inc
add
add
(bad)
push
add
sub
and
and
mov
cmp
and
inc
or
add
and
add
or
add
xor
add
sbb
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
sub
stos
sub
push
or
sub
pop
scas
rcr
sti
cmp
sub
push
dec
ss
and
and
call
or
pop
or
push
(bad)
(bad)
call
add
mov
mov
pop
and
push
neg
sub
adc
or
popf
add
add
add
adc
add
push
push
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
or
or
jmp
add
adc
fidivr
push
jmp
mul
imul
push
pop
loopne
add
add
add
adc
add
and
ret
add
add
sahf
pop
dec
dec
pop
and
pop
popa
sub
pop
pop
or
sub
add
push
and
add
sbb
add
(bad)
(bad)
jmp
sbb
add
or
push
and
add
and
pop
bound
sbb
jne
add
and
dec
push
test
adc
or
or
add
sbb
add
mov
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
mov
or
or
xor
add
into
es
mov
ret
sub
adc
(bad)
adc
mov
pop
pop
bound
sub
push
adc
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
inc
add
cmp
(bad)
(bad)
jmp
sbb
ret
or
xor
dec
(bad)
(bad)
dec
add
call
inc
add
add
idiv
(bad)
call
sub
or
pushf
pop
or
push
sub
sbb
add
(bad)
(bad)
jmp
adc
add
or
and
sbb
(bad)
inc
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
and
add
xor
pop
add
or
add
sub
es
push
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
popa
add
add
push
jge
add
add
cmp
add
add
and
push
xor
cwde
mov
call
add
pop
and
fiadd
and
call
add
add
sbb
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
sbb
int
add
add
jge
add
add
cmp
add
add
or
or
cmp
inc
add
add
idiv
(bad)
jmp
pop
and
not
mov
inc
mov
sub
add
jnp
add
add
bound
jnp
add
add
and
add
and
push
add
add
or
js
add
and
sbb
adc
add
sub
jbe
xor
or
popa
and
or
add
aaa
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
(bad)
(bad)
jns
add
int3
(bad)
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
call
in
pop
repz
pop
pop
or
pop
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
(bad)
call
(bad)
inc
add
add
sub
pop
and
and
inc
iret
fisub
pop
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
add
add
add
or
add
adc
or
push
add
add
add
adc
add
push
sbb
int
add
and
sub
and
clc
outs
jmp
jnp
add
add
bound
add
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
add
add
add
bound
jnp
add
add
and
add
and
push
add
add
inc
sbb
imul
and
clc
outs
jmp
and
add
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
mov
mov
add
add
add
inc
dec
(bad)
(bad)
call
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
or
inc
pop
add
add
(bad)
(bad)
dec
jmp
(bad)
dec
push
(bad)
(bad)
inc
add
add
sub
push
and
mov
xchg
sub
data16
(bad)
jmp
add
adc
or
cmps
add
add
add
adc
add
push
sbb
add
add
and
add
add
sbb
add
(bad)
(bad)
call
sub
add
es
bound
and
sub
and
(bad)
dec
cmc
into
pop
popa
sub
or
pop
or
add
pop
or
and
add
and
add
sbb
add
(bad)
(bad)
jmp
push
or
or
lds
add
and
and
dec
das
popa
and
pop
inc
or
add
int
add
cmp
add
mov
(bad)
(bad)
call
add
pop
add
add
add
add
add
add
add
jne
add
test
jge
add
and
mov
jl
sub
and
sub
or
add
and
add
and
adc
movs
pop
and
cmp
mul
mov
or
inc
sbb
add
add
idiv
(bad)
jmp
and
add
(bad)
inc
push
pop
pop
pop
adc
or
and
add
mov
lds
dec
(bad)
(bad)
inc
pop
jge
add
add
dec
sbb
push
adc
inc
adc
add
add
add
jnp
add
in
(bad)
(bad)
(bad)
ds
(bad)
call
(bad)
(bad)
(bad)
mov
add
add
add
sti
add
add
(bad)
(bad)
(bad)
fiadd
add
into
(bad)
(bad)
inc
(bad)
call
add
push
sub
xor
mov
retf
cmp
(bad)
(bad)
inc
push
jge
add
add
add
sbb
mov
dec
popa
cmp
(bad)
(bad)
inc
pop
or
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
add
push
cmp
sbb
add
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
inc
(bad)
(bad)
inc
jnp
add
add
sbb
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
bound
adc
pusha
or
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
push
adc
pop
pop
pop
or
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
je
xor
idiv
(bad)
inc
push
bound
pop
movhps
stos
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
inc
pop
and
pop
and
popa
cmp
std
(bad)
dec
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
add
rcr
add
add
add
cmp
add
add
sub
add
push
pop
or
stc
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
pop
jb
lea
add
add
add
add
adc
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
pop
and
and
mov
mov
add
add
add
add
pop
add
add
push
add
push
add
or
cmp
add
sbb
add
add
idiv
(bad)
jmp
add
or
lea
add
add
add
add
or
pop
add
add
jae
add
push
jge
add
add
cmp
add
add
loopne
add
add
jge
add
add
cmp
add
add
rol
add
lea
add
add
add
add
movhps
sbb
add
sbb
add
(bad)
(bad)
jmp
add
jae
add
push
jge
add
add
cmp
add
add
and
jmp
rcr
mov
jmp
popa
cmp
add
pop
pop
or
and
cmc
xor
pop
and
sub
or
adc
rol
add
add
or
lea
add
add
add
add
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
pop
and
or
cmp
sub
push
push
push
add
add
inc
add
add
idiv
(bad)
call
adc
cmp
inc
add
add
idiv
(bad)
jmp
and
sbb
and
and
or
add
push
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
or
xor
add
and
inc
add
add
idiv
(bad)
jmp
sub
pop
or
lea
add
add
add
add
stos
(bad)
(bad)
jmp
sbb
adc
jae
add
push
jge
add
add
stos
(bad)
(bad)
call
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
ds
(bad)
(bad)
cmp
add
lods
(bad)
(bad)
inc
add
cwde
(bad)
(bad)
dec
std
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
jmp
inc
(bad)
(bad)
call
(bad)
jmp
add
pop
adc
cmps
add
rol
add
lea
add
add
add
add
das
add
push
and
add
and
(bad)
call
idiv
(bad)
jmp
pop
or
inc
pop
or
lea
add
add
add
add
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
adc
sub
and
fdivr
and
(bad)
jmp
add
adc
or
and
add
push
add
adc
add
push
sbb
lds
add
pop
and
dec
int3
pop
pop
and
sub
adc
add
sub
add
push
push
cmp
add
add
add
add
add
cmp
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
push
push
sub
sbb
add
add
(bad)
(bad)
jmp
and
xchg
test
lea
popa
and
add
add
jne
(bad)
(bad)
jg
add
fdivr
(bad)
dec
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
jnp
add
add
sub
add
push
and
add
das
sbb
inc
or
add
mov
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
inc
add
add
(bad)
(bad)
call
add
add
sub
add
add
add
add
add
sub
add
push
and
mov
dec
pusha
pop
and
pop
sub
(bad)
(bad)
(bad)
jmp
adc
or
adc
add
add
add
sub
es
add
add
add
add
xor
add
sub
add
xor
add
add
add
add
adc
add
push
sbb
pop
add
pop
pop
jge
add
add
sub
add
pop
pop
bound
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
add
outs
inc
add
push
sbb
adc
outs
add
add
add
outs
inc
add
push
sub
sbb
inc
or
add
add
add
add
add
and
add
mov
(bad)
(bad)
jl
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
fsub
fimul
outs
and
mov
sub
or
pop
inc
add
add
loopne
(bad)
call
(bad)
(bad)
jmp
mov
pop
and
jns
pop
and
sti
mov
adc
or
mov
adc
add
push
pop
movaps
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
sbb
add
and
aas
xchg
mov
movmskps
jmp
and
inc
sbb
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
sbb
add
cmp
add
call
add
add
add
add
add
add
and
add
jle
add
xchg
add
add
add
cmp
add
cmps
add
add
add
add
adc
xchg
add
or
sbb
adc
jo
popa
cmp
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
pop
cmp
add
push
push
(bad)
(bad)
inc
pop
pop
or
or
inc
add
add
and
and
and
popa
cmp
(bad)
(bad)
inc
sbb
add
pop
inc
add
add
idiv
(bad)
call
pop
cmp
and
mov
pop
and
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
or
mov
and
xchg
popa
cmp
(bad)
(bad)
inc
pop
or
adc
add
(bad)
(bad)
jmp
ret
aas
xchg
mov
sub
and
push
test
es
(bad)
(bad)
inc
jnp
add
add
add
push
pop
push
push
cmp
inc
add
add
idiv
(bad)
jmp
or
fs
mov
jns
popa
cmp
or
adc
das
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
or
aad
(bad)
xor
sbb
popa
cmp
(bad)
inc
jl
add
add
pop
add
push
sbb
push
add
add
jnp
add
add
loopne
add
add
sub
add
push
or
ret
fs
sub
sbb
popa
cmp
pop
pop
or
or
daa
add
add
mov
jns
cmp
(bad)
(bad)
inc
pop
jb
cli
add
add
inc
add
add
idiv
(bad)
call
cmp
and
mov
push
pop
and
mov
(bad)
dec
and
(bad)
ficomp
sbb
in
(bad)
inc
add
add
add
adc
inc
add
add
idiv
(bad)
jmp
xchg
test
in
sub
and
cmp
pop
pop
or
cmp
inc
add
add
idiv
(bad)
jmp
and
cs
popf
std
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
pop
adc
xor
add
and
add
sbb
add
(bad)
(bad)
(bad)
cmp
add
cmp
add
add
jnp
add
add
dec
add
push
push
or
pop
cmp
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
xor
or
cmp
inc
add
add
idiv
(bad)
jmp
or
leave
dec
ds
and
cmp
std
(bad)
call
or
lods
std
(bad)
jmp
pop
adc
add
add
and
sbb
cmp
cld
(bad)
inc
jnp
add
add
add
push
pop
adc
add
and
pop
ss
and
xchg
lods
popa
cmp
cld
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
adc
lahf
add
add
and
mov
pop
and
xor
nop
cld
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
add
add
add
loopne
add
add
sub
add
push
pop
or
or
arpl
add
(bad)
aas
adc
(bad)
inc
sbb
pop
or
sub
and
and
cmp
cld
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
sbb
or
and
jbe
scas
and
(bad)
inc
pop
pop
or
(bad)
std
(bad)
call
movlps
add
sbb
add
and
(bad)
call
std
(bad)
call
push
cld
(bad)
call
std
(bad)
(bad)
js
(bad)
call
std
(bad)
push
cld
(bad)
call
(bad)
(bad)
jns
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
jns
(bad)
push
(bad)
(bad)
(bad)
aas
cld
(bad)
push
(bad)
(bad)
call
add
add
sub
add
sub
add
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
and
sub
and
cmp
jmp
add
xor
add
add
or
add
sub
es
pop
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
add
add
jnp
add
add
sbb
add
and
das
cmp
and
push
and
adc
and
add
or
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
and
stos
add
add
jnp
add
add
sub
add
push
and
add
push
cmp
add
idiv
(bad)
call
pop
cmp
or
add
inc
add
add
idiv
(bad)
jmp
adc
and
and
ret
mov
pop
add
add
jnp
add
add
add
push
and
add
add
mov
sbb
pop
pop
and
cmp
adc
push
pop
pop
pop
bound
pop
or
loope
add
and
jb
and
mov
and
sar
add
add
add
add
add
jnp
add
add
add
jnp
add
add
sub
add
push
and
add
and
sbb
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
adc
and
cmp
pop
and
ret
cmp
push
add
or
add
mov
pop
cld
and
sub
call
popa
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
lea
and
sub
jnp
add
add
jnp
add
add
or
cmp
add
and
or
and
cmc
or
add
mov
fdiv
les
into
popa
sub
add
jnp
add
add
outs
pop
add
push
and
add
pop
and
lds
add
and
das
ins
cld
mov
pop
cmp
add
push
std
(bad)
call
add
add
add
imul
add
push
add
add
push
add
inc
add
add
push
add
dec
(bad)
(bad)
dec
push
add
fadd
add
mov
add
add
add
pop
or
add
add
push
add
add
add
(bad)
(bad)
inc
std
(bad)
jmp
add
add
add
add
lea
add
ins
add
add
pop
add
pop
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
add
add
std
(bad)
call
push
add
xchg
add
add
add
add
add
call
push
add
sub
(bad)
call
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
adc
sub
add
pop
adc
test
add
adc
and
fwait
daa
and
(bad)
(bad)
call
add
add
push
pop
sub
add
mov
out
fwait
rcr
or
pop
popa
cmp
or
cmp
add
and
outs
and
adc
and
inc
mov
mov
(bad)
call
add
add
push
pop
xor
inc
pop
add
adc
and
and
xor
popa
cmp
(bad)
inc
or
and
das
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
sub
pop
loop
add
aas
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
adc
add
and
add
add
inc
add
add
idiv
(bad)
call
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
lea
in
(bad)
inc
add
add
add
adc
jnp
add
add
push
sub
add
push
and
fsin
(bad)
jmp
sbb
jp
add
or
add
adc
add
mov
lods
add
mov
(bad)
call
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
push
cmp
add
pop
inc
add
add
idiv
(bad)
jmp
adc
and
movs
call
dec
dec
popa
cmp
call
add
add
add
and
dec
std
(bad)
call
add
pop
inc
add
add
idiv
(bad)
jmp
mov
fist
mov
cmp
std
(bad)
call
add
add
push
sbb
fadd
xor
jmp
or
daa
cmp
add
test
loopne
(bad)
cld
(bad)
call
or
add
sbb
add
add
(bad)
(bad)
call
and
cmps
add
and
inc
pop
cmp
mov
cmp
cld
(bad)
call
mov
(bad)
xchg
push
pop
and
cmp
cld
(bad)
call
mov
sub
nop
pop
and
enter
cmp
jnp
add
add
or
aas
add
push
and
add
add
jnp
add
add
sbb
add
and
adc
inc
add
jnp
add
add
jnp
add
add
or
cmp
add
and
pop
sub
das
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
and
lds
and
enter
adc
and
jle
pop
popa
cmp
cld
(bad)
inc
add
add
add
push
sti
(bad)
call
idiv
(bad)
call
cmp
add
add
add
push
adc
and
and
pop
or
popa
cmp
cld
(bad)
call
or
adc
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
pop
sub
xchg
add
add
addr16
mov
int
(bad)
call
add
add
add
inc
add
add
idiv
(bad)
call
or
jae
add
and
sti
(bad)
call
or
adc
and
and
add
cmp
adc
or
movs
cmp
or
jns
rcr
call
mov
movs
test
add
fs
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
mov
push
and
retf
and
cmp
cmp
sti
(bad)
inc
or
sbb
das
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
and
mov
push
and
adc
and
popa
cmp
cli
(bad)
inc
jnp
add
add
pop
add
push
adc
and
rcr
pop
and
dec
out
cmp
cli
(bad)
inc
outs
adc
call
inc
add
add
idiv
(bad)
call
and
add
cmp
in
cli
cmp
mov
rcl
pop
and
mov
popa
cmp
add
add
add
push
sbb
cmp
sbb
or
pop
cmp
add
add
test
sub
and
cmp
(bad)
inc
jnp
add
add
cmp
add
pop
adc
or
add
and
xlat
mov
call
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sbb
fld
add
and
adc
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
adc
add
and
and
and
lds
(bad)
(bad)
call
add
adc
add
add
add
(bad)
(bad)
jmp
and
mov
push
and
clc
add
sub
push
mov
popa
cmp
add
add
add
adc
pop
sub
das
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
and
xchg
pop
and
(bad)
shr
inc
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
adc
add
and
inc
add
add
idiv
(bad)
call
sub
test
add
mov
add
mov
stc
(bad)
inc
jnp
add
add
jnp
add
add
add
aaa
add
push
and
cs
add
add
mov
rsqrtps
pop
and
out
clc
(bad)
call
add
or
sub
movs
add
add
mov
lock
pop
and
sub
sar
(bad)
call
mov
xor
pop
and
mov
jnp
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
xor
repnz
push
and
fcmove
and
std
dec
mov
jo
(bad)
inc
jnp
add
add
adc
outs
pop
add
push
pop
sbb
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
and
and
inc
outs
popa
cmp
(bad)
call
or
mov
sub
cmp
loope
cmp
popa
cmp
clc
(bad)
call
add
arpl
add
pop
es
add
add
jae
cmp
mov
cmp
add
data16
push
pop
adc
mov
add
and
sub
and
sbb
and
cmc
jo
mov
popa
cmp
idiv
inc
adc
add
add
idiv
(bad)
call
or
add
mov
dec
inc
or
sub
cmp
adc
or
imul
and
jp
or
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
adc
add
and
inc
add
add
idiv
(bad)
jmp
push
jae
mov
sub
and
xor
cmp
(bad)
inc
jnp
add
add
or
cmp
add
cmp
push
adc
adc
inc
xor
add
jne
(bad)
jmp
cli
(bad)
call
(bad)
dec
cmc
(bad)
inc
stc
(bad)
push
clc
(bad)
inc
cld
(bad)
call
clc
(bad)
push
(bad)
push
(bad)
call
(bad)
dec
idiv
jmp
(bad)
inc
hlt
(bad)
call
std
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
push
cld
(bad)
push
(bad)
jmp
(bad)
inc
clc
(bad)
jmp
(bad)
push
(bad)
push
idiv
call
sti
(bad)
jmp
stc
(bad)
inc
cmc
(bad)
push
(bad)
(bad)
call
add
mov
(bad)
dec
(bad)
(bad)
jmp
stc
(bad)
(bad)
mov
add
add
(bad)
call
(bad)
inc
cli
(bad)
dec
pop
cmp
(bad)
(bad)
call
mov
and
sub
(bad)
call
add
add
(bad)
(bad)
call
add
adc
pop
or
add
(bad)
call
mov
sub
add
shl
in
cmp
jnp
add
add
jnp
add
add
push
sub
add
push
and
jnp
add
add
pop
sub
add
push
adc
add
mov
inc
add
add
idiv
(bad)
jmp
adc
and
lods
pusha
pop
and
jmp
jp
cmp
cmc
(bad)
jmp
add
xor
in
add
add
add
push
sbb
lahf
add
add
mov
add
add
add
add
sbb
add
(bad)
(bad)
call
sub
add
es
push
sub
sbb
add
add
(bad)
(bad)
jmp
adc
and
and
cmp
add
add
sub
add
push
pop
or
and
out
and
add
popa
cmp
add
push
adc
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
adc
cmp
(bad)
call
pop
adc
inc
push
add
add
(bad)
call
add
jne
add
add
add
xchg
add
add
add
add
(bad)
(bad)
call
add
and
(bad)
(bad)
cmp
add
add
or
mov
inc
or
sub
add
push
sbb
scas
and
pop
xor
pop
sbb
and
add
pop
sbb
pop
sbb
push
sub
or
sbb
xchg
push
and
and
shl
jnp
add
adc
pop
adc
push
pop
pop
pop
pop
bound
add
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
and
fld
dec
pop
and
std
add
adc
daa
add
push
pop
or
das
(bad)
(bad)
call
push
and
xor
xchg
popa
sub
push
adc
jmp
push
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
xchg
pop
or
and
xor
scas
sbb
pop
or
or
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
inc
cmp
add
add
xor
add
add
add
add
adc
add
push
push
sub
and
xor
or
pop
inc
add
add
test
add
pop
add
add
(bad)
(bad)
jmp
and
or
inc
push
add
add
add
add
add
add
add
mov
add
add
xor
sbb
fld
sbb
or
add
das
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
scas
sub
sbb
adc
add
idiv
(bad)
call
sub
and
stos
js
and
ins
mov
pop
popa
cmp
inc
sub
and
outs
pop
adc
and
cmp
(bad)
call
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
sldt
or
xor
add
add
add
add
sub
es
add
outs
push
add
push
sub
xor
add
add
add
add
push
add
add
dec
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
outs
push
add
push
sub
xor
add
add
add
add
push
add
add
pop
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
adc
add
add
add
sub
es
add
add
outs
dec
add
push
and
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
pop
add
push
sub
xor
add
add
add
add
add
add
push
add
add
inc
add
push
and
xor
add
add
add
add
add
add
push
add
outs
pop
add
push
and
adc
or
add
add
add
add
push
add
add
push
add
dec
add
push
and
adc
or
push
add
add
add
add
add
push
add
outs
and
add
and
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
mov
pop
adc
lea
add
add
add
add
inc
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
jae
add
push
jge
add
add
sub
pop
adc
lea
add
add
add
add
add
sbb
cmp
jl
add
add
adc
sbb
inc
add
push
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
jl
add
add
adc
sub
add
add
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
sub
sub
adc
or
movs
add
add
add
adc
add
push
push
sub
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
pusha
fistp
add
push
pop
pop
or
cmp
mov
and
imul
jmp
jnp
add
add
loopne
add
add
sbb
add
push
add
cmp
add
add
and
and
bswap
mov
mov
add
push
add
inc
sbb
add
add
(bad)
(bad)
jmp
sub
sbb
inc
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
sbb
sub
add
add
(bad)
(bad)
jmp
and
sub
and
jmp
and
jnp
add
add
loopne
add
add
sbb
add
push
add
dec
(bad)
(bad)
call
add
add
(bad)
call
(bad)
(bad)
call
add
mov
(bad)
(bad)
dec
(bad)
inc
sub
push
and
inc
add
add
idiv
(bad)
jmp
and
add
cmp
cmp
pop
popa
and
pop
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
outs
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
inc
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
and
and
mov
add
add
add
or
cmp
(bad)
call
add
(bad)
(bad)
jmp
sub
xor
add
add
adc
add
push
pop
or
sbb
into
mov
xor
call
or
and
add
pop
or
inc
or
add
loopne
add
mov
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
add
sub
and
inc
cmp
jl
add
add
adc
add
pop
or
scas
and
sub
and
cmp
add
add
add
pop
add
push
sbb
lea
jnp
add
add
loopne
add
add
sub
add
push
push
cmp
(bad)
(bad)
cmp
add
add
add
add
add
rcr
add
add
idiv
(bad)
call
sub
add
sbb
dec
(bad)
(bad)
inc
jl
add
add
adc
add
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
(bad)
jmp
ins
mov
cmp
ins
cmp
sbb
add
bound
add
pop
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
pop
or
jmp
(bad)
inc
pop
pop
or
cmp
(bad)
(bad)
inc
and
mov
(bad)
shl
scas
add
add
add
loopne
add
add
sub
add
push
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
cmp
stos
push
popa
cmp
(bad)
jmp
adc
or
mov
add
adc
add
push
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
cmp
popa
call
test
popa
and
or
add
inc
add
add
add
int3
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
sub
sbb
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
and
pop
mov
push
or
sub
sbb
sub
popa
sub
add
add
sub
add
push
and
push
pop
or
inc
or
add
add
add
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sub
add
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
gs
lods
pop
and
imul
shl
(bad)
(bad)
call
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
loopne
add
add
add
sbb
add
and
cmp
jmp
dec
sbb
push
and
cmp
jnp
add
add
loopne
add
add
add
sbb
add
and
or
xchg
sbb
cwde
mov
popa
cmp
push
pop
or
or
add
pop
inc
jns
cmp
(bad)
inc
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
dec
add
push
sub
adc
or
xchg
add
push
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
or
add
and
fisubr
adc
and
inc
or
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
pop
cmp
inc
add
add
idiv
(bad)
jmp
and
xor
sub
and
or
(bad)
out
xor
xchg
add
loopne
or
add
jge
add
add
and
int3
push
pop
and
cmp
(bad)
(bad)
inc
pop
add
pop
pop
bound
pop
jge
add
add
sub
add
add
or
or
pop
or
push
out
sub
in
ret
pop
sahf
popa
cmp
inc
jnp
add
add
xor
add
idiv
(bad)
call
sub
pop
pop
pop
or
sub
cdq
into
dec
in
sbb
or
cli
ficomp
xor
push
lock
popa
cmp
(bad)
(bad)
inc
add
add
add
inc
pop
or
add
push
add
add
add
mov
add
add
add
push
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
cli
add
add
or
mov
call
jnp
add
add
adc
inc
add
add
idiv
(bad)
jmp
out
push
sub
ret
jg
cdq
and
sbb
int3
pop
popa
cmp
add
add
add
jnp
add
add
pop
pop
pop
bound
sbb
inc
jnp
add
add
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
dec
(bad)
(bad)
inc
add
and
add
cmp
(bad)
(bad)
dec
and
inc
push
pop
and
push
(bad)
(bad)
dec
and
call
jg
popa
cmp
(bad)
(bad)
inc
push
xor
sbb
add
(bad)
(bad)
call
or
dec
and
push
jecxz
(bad)
popa
cmp
std
(bad)
inc
jnp
add
add
loopne
or
add
sub
add
pop
or
dec
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
sub
and
mov
int3
and
(bad)
jmp
add
adc
or
add
add
push
add
adc
add
push
sbb
cdq
add
add
add
add
add
jnp
add
add
pop
pop
pop
bound
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
push
or
test
add
es
sub
pop
or
sub
cwde
dec
leave
or
pusha
pop
pop
adc
add
add
add
loopne
or
add
sub
add
sbb
daa
cmp
and
and
aas
dec
in
sub
aaa
retf
add
add
idiv
(bad)
jmp
mov
or
add
add
add
js
(bad)
(bad)
jp
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
ja
and
and
add
add
add
(bad)
(bad)
push
(bad)
(bad)
fdivr
(bad)
call
sub
or
shr
add
adc
or
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
and
add
add
add
sub
es
add
add
add
add
sub
add
and
add
add
sub
add
and
xor
and
add
adc
add
push
add
add
add
add
sub
add
and
add
add
push
add
push
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sbb
add
and
bound
pop
pop
and
sub
push
pop
pop
or
data16
or
add
add
add
jae
add
add
add
mov
add
add
add
add
add
sub
and
gs
pop
and
test
sbb
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
mov
add
sbb
sub
pop
inc
add
add
idiv
(bad)
jmp
pop
and
and
aam
pushf
popa
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
or
mov
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
sar
and
dec
mov
ins
(bad)
(bad)
inc
jnp
add
add
pop
add
add
adc
add
sbb
jmp
dec
or
(bad)
jmp
add
adc
or
sbb
add
push
add
adc
add
push
push
sub
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
repz
cmp
and
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
(bad)
(bad)
jmp
cmp
add
add
pop
bound
jnp
add
add
loopne
add
add
add
adc
add
and
and
or
inc
pop
add
add
add
sbb
add
mov
add
add
(bad)
(bad)
jmp
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
and
jecxz
ret
mov
pop
inc
add
add
fdivr
(bad)
call
(bad)
inc
add
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
idiv
(bad)
jmp
pop
or
cmp
(bad)
jmp
addr16
push
and
xchg
and
es
and
andps
sub
add
xor
add
add
add
add
adc
add
push
pop
or
push
add
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
sub
and
or
xchg
fmul
xchg
cmp
add
add
and
and
dec
or
or
pop
(bad)
add
or
jns
add
and
popf
mov
and
mov
stos
and
add
push
and
add
add
add
add
inc
add
add
idiv
(bad)
call
cmp
add
sbb
add
add
(bad)
(bad)
jmp
cmp
and
add
add
rcr
add
add
idiv
(bad)
call
cmp
add
add
pop
bound
pusha
or
and
test
or
xchg
popa
cmp
sbb
sbb
std
add
add
pop
aaa
cmps
stos
cmp
add
or
jmp
and
xchg
popa
sub
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
adc
add
and
ret
add
or
push
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
or
sahf
add
add
mov
test
sbb
or
loop
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
add
and
enter
and
inc
or
add
dec
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
sbb
add
and
mov
sub
jnp
add
add
loopne
add
add
add
adc
add
and
or
(bad)
call
or
add
add
or
add
adc
(bad)
(bad)
dec
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
dec
(bad)
dec
(bad)
(bad)
inc
add
add
sub
or
les
mov
cli
pop
popa
cmp
(bad)
(bad)
inc
shr
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
bound
add
sub
adc
or
dec
add
add
add
adc
add
push
sbb
mov
add
and
sub
leave
sub
add
jge
add
add
adc
add
es
sub
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
hlt
and
fsub
or
pop
inc
add
(bad)
(bad)
jmp
add
fdivr
(bad)
(bad)
fiadd
add
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
cs
inc
add
add
idiv
(bad)
call
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
and
out
and
mov
sub
add
add
sub
or
inc
or
add
inc
add
add
add
add
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
sub
add
and
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
add
loopne
add
add
and
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
and
sub
and
cmp
(bad)
(bad)
inc
push
jge
add
add
cmp
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
push
cmp
add
add
push
jge
add
add
cmp
sub
add
push
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
add
add
add
add
sub
and
push
cmc
xchg
pop
and
pop
stos
in
popa
sub
add
lahf
add
add
inc
add
add
idiv
(bad)
call
sub
cmp
shr
cmps
outs
jp
and
add
(bad)
(bad)
call
add
add
add
lods
(bad)
(bad)
inc
(bad)
(bad)
call
jne
pop
xor
xor
sub
add
jge
add
add
sub
or
inc
or
add
and
(bad)
call
(bad)
(bad)
call
(bad)
inc
add
add
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
ud0
jmp
sbb
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
and
sub
and
fist
and
pop
push
lock
popa
cmp
(bad)
jmp
add
adc
push
add
add
add
add
adc
add
push
sbb
adc
add
jle
add
add
sub
add
push
sbb
pop
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sub
and
mov
mov
in
fild
popa
and
add
add
adc
(bad)
(bad)
(bad)
fdivr
(bad)
call
mov
push
and
rol
movs
pop
and
ret
adc
popa
sub
add
add
add
cld
add
push
and
add
push
and
add
add
add
add
add
cld
add
push
and
add
push
sbb
cmp
call
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
push
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
sbb
aaa
(bad)
(bad)
inc
and
out
sub
mov
dec
(bad)
(bad)
jmp
adc
or
imul
add
sub
es
sbb
add
pop
xchg
in
cmp
add
add
jnp
add
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
loop
add
and
jns
inc
and
or
add
dec
movs
or
sub
push
jge
add
add
das
es
sub
add
and
add
sbb
add
add
idiv
(bad)
jmp
push
cmp
inc
add
add
idiv
(bad)
call
cmp
and
or
and
(bad)
clc
ds
sub
add
jnp
add
add
sub
add
or
jb
jnp
add
add
jnp
add
add
or
sub
mov
cmp
fimul
inc
popa
and
push
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
sub
sub
aam
mov
and
mov
add
add
add
jnp
add
add
jnp
add
add
sub
add
cmp
(bad)
(bad)
call
add
add
(bad)
inc
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
(bad)
inc
add
add
sub
sub
add
adc
push
add
add
push
add
adc
add
push
pop
or
fild
add
and
push
and
mul
rol
add
add
pop
dec
add
pop
or
mov
jnp
add
add
pop
pop
pop
or
sub
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
call
and
cmp
add
add
add
iret
add
add
inc
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
push
add
add
add
add
add
sbb
add
(bad)
(bad)
call
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
sub
add
add
(bad)
(bad)
jmp
and
sbb
add
add
pop
add
push
cmp
(bad)
call
or
add
pop
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
jmp
(bad)
(bad)
jmp
add
sldt
add
add
push
(bad)
(bad)
jmp
add
add
sub
add
add
(bad)
(bad)
jmp
or
lock
fadd
out
jbe
popa
cmp
and
lahf
idiv
ins
cmc
popa
cmp
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
sub
sbb
cmp
call
inc
add
add
idiv
(bad)
jmp
or
xchg
idiv
adc
scas
cwde
jge
popa
sub
inc
jo
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
cwde
add
add
inc
add
add
idiv
(bad)
call
or
sti
(bad)
(bad)
jmp
xchg
aaa
or
and
inc
popa
and
inc
or
add
sub
(bad)
jmp
add
add
std
(bad)
push
inc
(bad)
(bad)
call
(bad)
(bad)
call
add
scas
(bad)
(bad)
inc
(bad)
inc
add
add
push
push
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
jno
and
add
jnp
sub
add
add
or
push
cmp
inc
add
add
idiv
(bad)
jmp
and
pop
xor
and
test
and
(bad)
jmp
add
xor
fld
add
push
add
adc
add
push
push
sub
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
inc
add
add
add
jnp
add
add
lahf
add
add
inc
add
add
idiv
(bad)
call
sub
shl
call
sbb
add
add
loopne
(bad)
call
add
jb
add
sub
or
inc
pop
add
add
add
add
add
add
add
das
add
add
add
add
sub
fcomp
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
pop
sub
pop
add
push
sbb
movs
pop
and
ss
pop
and
add
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
pop
inc
add
add
idiv
(bad)
jmp
and
adc
or
pop
inc
add
add
add
add
add
add
(bad)
(bad)
jmp
daa
sbb
inc
pop
add
add
add
add
add
xor
add
mov
add
add
add
add
add
sbb
fsubr
push
push
add
add
add
or
into
add
add
add
pop
pop
pop
or
push
sbb
pop
add
push
and
inc
add
add
idiv
(bad)
jmp
push
add
add
add
pop
sbb
add
add
(bad)
(bad)
call
sub
mov
sahf
sbb
(bad)
inc
jnp
add
add
loopne
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
jle
add
add
add
sub
es
sbb
xor
and
and
sub
jnp
add
add
or
add
sbb
add
add
idiv
(bad)
call
sub
add
sub
or
inc
or
add
rol
add
mov
add
add
add
add
add
mov
add
add
add
add
into
add
add
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
shr
ins
mov
or
inc
push
add
add
add
mov
(bad)
(bad)
jmp
add
mov
add
aam
(bad)
jmp
push
add
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
sub
add
and
(bad)
call
idiv
(bad)
jmp
add
add
add
inc
sub
(bad)
call
inc
add
add
idiv
(bad)
call
jmp
push
and
icebp
mov
jmp
ja
(bad)
inc
and
add
pop
jge
add
add
cmp
(bad)
(bad)
jmp
jmp
add
pop
jge
add
add
cmp
(bad)
jmp
movs
dec
jb
and
aaa
iret
fisub
(bad)
jmp
push
and
and
sub
popa
cmp
(bad)
(bad)
inc
push
jge
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
xor
add
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
idiv
(bad)
call
sub
add
es
or
add
add
adc
or
sub
add
add
add
sub
es
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
jge
add
add
adc
or
sub
add
adc
add
push
add
jnp
add
add
aaa
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
or
add
add
add
add
xor
add
add
add
add
adc
add
push
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
sub
es
add
jb
add
sub
adc
or
and
add
add
add
sub
es
sub
add
and
add
and
add
and
outs
add
push
and
or
or
add
add
add
push
add
xchg
add
push
and
add
xor
add
add
add
add
add
add
push
add
sub
push
and
adc
or
adc
add
add
add
sub
es
add
add
cdq
add
push
and
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
jg
add
sub
sbb
or
into
add
add
add
adc
add
push
push
sub
sub
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jle
add
and
inc
add
add
idiv
(bad)
jmp
push
jle
add
add
or
and
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
sbb
fnstsw
add
add
jnp
add
and
int
sub
add
push
and
add
and
add
add
add
add
and
add
push
or
or
and
add
and
add
push
and
add
and
add
add
adc
cld
and
and
inc
push
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
inc
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
add
(bad)
je
sub
lods
mov
jmp
and
rcl
pop
and
pop
popa
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
cmps
ins
mov
or
cmp
(bad)
call
sub
push
and
add
fcom
adc
and
inc
xchg
mov
fbld
adc
pop
inc
add
add
add
add
add
add
xor
add
xlat
(bad)
(bad)
jmp
push
pop
adc
and
inc
xchg
rol
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
lods
leave
aam
and
dec
push
fbld
pop
inc
push
add
add
add
or
add
or
add
pop
add
add
mov
fldcw
test
sub
add
and
add
fcomp
adc
and
mov
ja
fbld
adc
pop
inc
push
add
add
add
add
add
add
add
sbb
add
sar
(bad)
(bad)
cmp
add
adc
pop
ss
and
adc
and
mov
add
and
inc
add
add
idiv
(bad)
jmp
int3
dec
jae
and
pop
inc
scas
and
or
add
add
add
add
add
add
add
add
(bad)
(bad)
mov
fsub
cmp
cmp
(bad)
call
or
xor
xor
pop
and
in
popa
cmp
(bad)
call
or
cwde
add
add
mov
sub
add
and
add
fmul
sub
add
and
inc
dec
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
add
add
adc
or
jl
add
adc
add
sub
es
jle
add
add
jle
add
add
add
not
sar
pop
popf
sbb
popa
and
inc
or
add
cdq
add
add
add
add
(bad)
(bad)
push
add
add
add
pop
add
add
add
add
xchg
add
add
or
pop
and
push
jmp
pop
and
sub
popa
pop
mulps
popa
inc
add
add
outs
add
add
mov
lahf
push
or
mov
jl
xchg
push
or
lea
cmp
lea
and
add
xchg
pop
and
adc
and
inc
cdq
pop
and
jo
sbb
(bad)
dec
inc
or
add
adc
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
xor
jmp
(bad)
dec
pop
inc
xchg
sub
or
mov
add
add
push
push
pop
pop
or
add
pop
sbb
daa
pop
inc
add
add
idiv
(bad)
call
sub
add
adc
rol
add
xchg
and
mov
cmp
(bad)
call
add
arpl
add
in
adc
ins
add
add
add
cmp
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
add
jne
add
sub
loope
(bad)
call
xor
add
add
add
add
adc
add
push
jle
add
add
push
and
iret
ins
or
cmp
dec
popa
and
pop
inc
or
add
cwde
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
arpl
add
cmp
add
add
adc
adc
mov
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
and
je
push
cmp
(bad)
call
or
aam
add
in
sti
popa
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
and
fs
popa
cmp
(bad)
inc
add
pop
addr16
push
popa
inc
add
add
pop
add
add
fbld
(bad)
(bad)
call
jbe
add
sbb
add
outs
cmp
(bad)
(bad)
call
push
and
fs
adc
cmps
xor
pop
and
cmp
(bad)
(bad)
call
or
xor
aas
pop
and
in
(bad)
call
or
pop
xchg
call
cmp
(bad)
(bad)
(bad)
jle
add
add
adc
and
and
adc
inc
mov
add
sbb
jp
add
and
pop
pop
xchg
and
adc
inc
pop
pop
or
mov
add
or
and
pop
inc
xchg
adc
dec
or
or
pop
sub
add
add
(bad)
(bad)
call
sub
add
adc
and
add
add
add
add
call
or
cmc
pop
sub
sub
push
and
add
add
xchg
pop
adc
inc
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
push
add
add
add
adc
add
push
add
add
sub
add
adc
or
or
add
adc
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
add
cmps
add
push
and
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
add
push
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
pop
or
pop
add
add
push
pop
fwait
movs
cmp
add
add
sub
add
push
and
sub
add
add
pop
movaps
es
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
daa
push
push
xor
push
cmp
add
push
sub
add
push
and
cmp
add
jmp
add
and
xor
or
xchg
add
adc
arpl
and
jbe
popa
sub
or
sbb
xor
add
adc
bound
add
and
daa
push
sub
add
push
and
or
add
inc
add
add
inc
add
add
idiv
(bad)
jmp
and
mov
adc
shl
adc
adc
inc
adc
add
call
add
(bad)
(bad)
call
add
jo
add
add
add
(bad)
call
inc
add
sub
add
and
(bad)
call
add
mov
add
add
and
add
icebp
add
add
(bad)
(bad)
call
add
add
add
add
sub
es
add
add
add
(bad)
(bad)
jmp
and
jge
(bad)
jmp
adc
push
das
mov
pop
and
cmp
(bad)
call
test
add
es
add
add
or
ficomp
cwde
push
sahf
mov
(bad)
call
dec
sub
add
push
and
add
add
mov
add
xor
add
sub
add
push
and
sub
cmp
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
add
sub
add
push
and
and
add
add
add
idiv
(bad)
jmp
adc
jp
mov
pop
and
xchg
cmc
popa
cmp
(bad)
(bad)
inc
sub
add
push
and
or
add
add
adc
loopne
and
pop
and
pop
(bad)
popa
cmp
sub
add
push
and
sub
adc
lea
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
xchg
lods
sub
pop
and
(bad)
mov
(bad)
call
add
add
adc
popa
(bad)
(bad)
call
add
mov
loop
pop
and
cs
popa
cmp
(bad)
dec
and
add
add
add
push
sub
cmp
(bad)
call
add
(bad)
(bad)
jmp
pop
sub
xor
add
add
push
and
inc
add
add
idiv
(bad)
jmp
cmp
sub
add
push
and
add
push
sub
sbb
add
add
idiv
(bad)
jmp
adc
fcompp
add
pop
and
mov
fscale
(bad)
call
or
dec
(bad)
(bad)
call
or
add
add
add
(bad)
jmp
(bad)
inc
add
add
add
(bad)
(bad)
jmp
cld
(bad)
dec
(bad)
jmp
(bad)
(bad)
mov
std
(bad)
dec
(bad)
push
(bad)
(bad)
push
std
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
add
add
push
sub
and
xchg
aam
and
sub
std
(bad)
inc
sub
add
push
and
pop
add
popf
and
std
(bad)
dec
pop
cmp
ins
(bad)
(bad)
jmp
inc
mov
std
(bad)
dec
inc
or
add
(bad)
std
(bad)
(bad)
mov
cld
(bad)
call
(bad)
(bad)
(bad)
mov
cld
(bad)
inc
(bad)
call
cmp
(bad)
(bad)
call
add
add
rcl
push
popa
cmp
cld
(bad)
jmp
add
xor
add
add
adc
add
push
add
adc
es
and
add
and
add
add
add
add
and
add
adc
or
add
add
adc
add
push
pop
or
lea
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
cmp
add
add
mov
add
and
sub
cmp
add
sbb
add
(bad)
(bad)
jmp
cmp
add
add
or
pop
xor
inc
add
add
idiv
(bad)
call
sub
cmp
add
sbb
add
add
(bad)
(bad)
jmp
push
adc
pop
adc
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
pop
or
pop
pop
pop
adc
cmp
nop
xchg
sbb
lock
pop
add
push
and
add
and
cmp
add
add
sub
add
push
and
or
sbb
pop
popa
or
or
retf
add
add
push
pop
pop
pop
adc
and
inc
add
arpl
pop
adc
and
add
add
push
cmp
add
adc
pop
and
adc
inc
add
add
idiv
(bad)
call
push
cmp
add
add
or
pop
punpckldq
or
lar
push
and
pop
pop
adc
adc
pop
sbb
push
aad
mov
pop
add
add
add
add
or
es
call
add
add
(bad)
(bad)
call
adc
cmp
sub
jle
add
add
or
es
or
sbb
add
and
push
adc
sub
add
push
and
pop
xchg
adc
inc
add
pop
or
adc
adc
add
add
std
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
(bad)
inc
add
add
(bad)
dec
add
push
add
add
add
add
add
add
add
pop
(bad)
(bad)
call
dec
add
add
(bad)
(bad)
(bad)
mov
add
add
add
sar
call
(bad)
(bad)
jmp
add
or
add
sbb
mov
or
pop
add
push
and
adc
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
sub
sub
cmp
add
add
inc
add
add
idiv
(bad)
jmp
pop
push
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
pop
or
add
add
or
lar
push
and
add
and
pop
sbb
or
(bad)
call
adc
sbb
(bad)
(bad)
(bad)
(bad)
cmp
add
or
add
and
or
pop
add
push
and
pop
pop
adc
pop
xchg
popa
adc
sub
add
push
and
or
pop
adc
or
popa
shr
mov
add
and
and
and
adc
sub
or
pop
adc
sbb
call
adc
jmp
test
pop
and
sbb
popa
cmp
add
push
es
adc
lea
add
and
(bad)
call
idiv
(bad)
jmp
and
pop
add
add
adc
xor
inc
pop
and
xor
add
adc
inc
adc
add
ja
(bad)
dec
add
push
(bad)
(bad)
call
add
add
(bad)
push
(bad)
inc
cld
(bad)
push
(bad)
inc
(bad)
(bad)
call
add
bound
add
(bad)
(bad)
jmp
add
mov
std
(bad)
inc
add
pop
adc
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
pop
sbb
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
std
(bad)
jmp
cmps
jo
icebp
and
ds
and
add
pop
movlps
and
cmp
movs
add
add
push
sub
sub
add
and
lar
push
and
add
lar
push
and
adc
adc
pop
adc
jge
(bad)
jmp
adc
fisubr
outs
pop
or
push
and
inc
pop
xchg
sub
adc
cmp
pop
mov
push
xor
push
pop
adc
pop
push
pop
cmp
(bad)
call
idiv
(bad)
jmp
adc
pop
adc
sti
(bad)
jmp
pop
(bad)
std
(bad)
(bad)
cmp
(bad)
(bad)
call
or
pop
adc
pop
sub
cmp
std
(bad)
call
idiv
(bad)
jmp
and
cmp
xchg
pop
or
inc
or
add
fs
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
mov
cld
(bad)
call
(bad)
cmp
(bad)
dec
push
(bad)
(bad)
call
adc
cmps
cmp
adc
pop
aad
popa
sub
out
popa
add
pop
or
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
jle
add
add
nop
cmp
sub
(bad)
dec
sub
add
push
and
add
xor
add
add
add
add
sub
es
jle
add
add
push
and
xchg
dec
and
inc
in
popa
and
pop
inc
or
add
add
add
add
add
sbb
(bad)
(bad)
jmp
add
pop
add
jl
add
jecxz
add
or
add
rol
add
cmp
add
add
add
pop
push
pop
push
popa
inc
add
add
cmc
add
add
sar
popf
and
adc
and
add
add
add
add
add
jle
add
add
xchg
jle
add
add
pop
add
add
popf
pop
adc
and
ins
(bad)
(bad)
call
xchg
add
and
daa
js
cmp
(bad)
call
adc
mov
jo
and
sbb
(bad)
call
or
(bad)
mov
or
stos
add
xor
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
add
add
add
add
rol
add
pusha
add
add
ret
imul
(bad)
(bad)
call
or
jno
vcvtpd2ps
pushf
xor
jne
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
mov
pop
and
cmp
(bad)
(bad)
call
or
add
and
mov
sub
jle
add
add
adc
and
pop
ja
adc
inc
mov
add
sbb
mov
add
and
and
add
xchg
adc
pop
inc
xchg
pop
adc
inc
pop
pop
or
adc
add
or
add
sahf
adc
add
or
or
xor
add
idiv
(bad)
call
sub
add
adc
pop
fs
and
cmp
add
add
call
sub
sbb
add
inc
sub
add
and
add
call
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
push
add
add
add
adc
add
push
add
outs
push
add
or
adc
or
or
add
adc
add
push
add
add
or
add
xor
add
add
adc
add
push
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
sldt
add
add
adc
add
push
sub
es
add
xchg
add
push
sub
adc
or
sbb
add
add
add
sub
es
and
fiadd
add
add
add
and
add
add
xchg
add
push
sub
xor
add
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
sldt
add
add
adc
add
push
sub
es
add
push
add
or
add
xor
add
add
adc
add
push
and
add
and
add
sub
add
add
add
add
add
push
and
mov
and
test
add
sub
add
and
sbb
add
and
add
add
add
and
add
and
add
and
popf
add
push
and
add
jle
add
add
and
add
add
and
add
jl
pop
and
add
add
sub
adc
or
jmp
adc
add
push
sub
sub
cmp
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
cmp
call
or
pop
pop
xor
pop
inc
add
add
idiv
(bad)
call
pop
pop
adc
add
add
pop
and
and
sub
push
adc
and
fwait
jbe
cmp
or
or
aas
and
xor
xchg
add
add
adc
sbb
cmps
shl
add
add
or
mov
add
add
add
pop
sub
pop
or
add
add
push
adc
adc
inc
adc
add
movs
add
add
add
add
add
xchg
add
sub
(bad)
jmp
add
jns
add
or
add
je
(bad)
inc
add
add
add
add
add
movs
add
add
(bad)
(bad)
(bad)
fiadd
add
pop
or
scas
pop
or
add
and
push
shl
or
or
inc
or
add
add
add
(bad)
inc
add
add
add
add
add
add
(bad)
jmp
add
add
(bad)
inc
(bad)
call
add
add
cmp
(bad)
call
inc
or
(bad)
(bad)
call
add
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
push
cmp
xchg
sub
pop
push
popa
inc
add
add
idiv
(bad)
call
adc
push
(bad)
(bad)
(bad)
jle
add
add
push
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
pop
or
or
(bad)
cmp
or
jae
jns
pop
and
cmp
(bad)
(bad)
call
adc
jge
int3
pop
and
pop
popa
cmp
(bad)
(bad)
call
or
cmp
les
in
adc
cmp
(bad)
(bad)
call
add
add
(bad)
call
(bad)
push
add
add
add
push
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
call
(bad)
dec
add
jge
(bad)
jmp
sti
inc
cmp
cmp
push
and
and
fadd
add
add
pop
cmp
and
fild
xchg
fsubr
(bad)
call
cdq
add
push
es
(bad)
(bad)
jmp
pop
or
and
(bad)
(bad)
cmp
(bad)
inc
sub
or
cmp
(bad)
(bad)
cmp
(bad)
inc
sub
add
push
and
and
add
add
pop
adc
mov
es
std
(bad)
call
add
(bad)
(bad)
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
xor
add
add
adc
add
push
pop
or
add
or
add
cmp
add
sub
or
add
or
lods
cmp
in
sar
add
push
or
cmp
add
adc
and
add
add
and
pop
or
pop
jle
add
add
push
push
sub
and
add
add
push
and
add
add
add
adc
stos
add
add
or
inc
icebp
jae
pop
and
(bad)
hlt
push
popa
cmp
call
adc
push
sbb
add
add
adc
adc
inc
adc
add
rol
add
lahf
(bad)
(bad)
jmp
(bad)
call
add
xchg
add
add
add
add
(bad)
(bad)
inc
add
sbb
add
push
add
add
(bad)
(bad)
call
add
add
(bad)
call
(bad)
inc
(bad)
jmp
(bad)
(bad)
call
add
add
or
scas
adc
and
add
add
push
pop
pop
or
or
fwait
and
add
add
adc
and
add
add
add
inc
(bad)
(bad)
(bad)
jle
add
add
pop
push
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
es
int3
out
cmp
int3
add
add
add
add
add
add
call
add
add
add
add
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
inc
add
push
add
sub
es
adc
adc
xchg
mov
jl
test
add
adc
and
retf
xchg
pop
and
sub
push
and
adc
and
pop
adc
(bad)
(bad)
jmp
xor
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
or
add
call
pop
pop
push
add
pop
sub
pop
sub
add
push
and
pop
cmp
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sbb
mov
(bad)
jmp
sub
sub
addr16
or
popa
and
pop
inc
or
add
sbb
(bad)
(bad)
call
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
sti
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
(bad)
cmp
add
pop
pop
push
popa
inc
add
add
cmps
(bad)
(bad)
call
sub
cmp
inc
add
add
idiv
(bad)
jmp
pop
or
sbb
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
adc
or
or
add
adc
add
push
add
add
sbb
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
xor
add
add
add
add
adc
add
push
add
outs
sbb
add
and
adc
or
or
add
add
add
sub
es
add
outs
sbb
add
sub
xor
add
add
adc
add
push
add
sbb
add
and
add
xor
add
add
add
add
sub
es
sub
sub
xor
add
add
add
add
push
add
scas
add
push
and
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
add
outs
push
add
or
adc
or
sldt
add
add
adc
add
push
sub
es
add
stos
add
push
sub
sbb
push
add
add
add
add
adc
add
push
push
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
add
sbb
popa
and
jno
jg
and
inc
pop
add
add
add
dec
add
add
add
add
(bad)
(bad)
inc
add
add
sub
es
add
add
(bad)
(bad)
jmp
and
and
pop
add
push
and
add
and
add
sub
sub
adc
adc
inc
or
add
jle
add
retf
add
add
add
add
add
add
push
add
add
add
add
test
sub
es
add
add
(bad)
(bad)
jmp
sbb
mov
and
dec
(bad)
(bad)
inc
sub
add
push
and
sub
add
push
and
pop
sub
push
add
sub
add
add
pop
sub
add
or
xchg
mov
test
cmp
(bad)
(bad)
inc
and
add
add
xchg
add
add
pop
add
sub
pop
(bad)
(bad)
call
or
daa
repnz
pop
and
sub
mov
cmp
(bad)
(bad)
dec
inc
push
add
add
(bad)
dec
(bad)
(bad)
(bad)
jns
(bad)
(bad)
cmp
add
push
(bad)
(bad)
(bad)
jns
(bad)
call
sub
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
call
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
xor
jp
mov
(bad)
(bad)
fnsave
adc
addr16
jno
jg
and
inc
push
add
add
add
push
add
add
add
add
add
add
add
(bad)
(bad)
jmp
outs
adc
add
add
add
add
add
add
pop
add
add
add
add
add
mov
xor
sub
push
and
inc
add
add
idiv
(bad)
jmp
loope
dec
push
pop
fstp
sub
xchg
add
int3
cmp
(bad)
(bad)
call
adc
or
addr16
(bad)
call
sub
push
sub
add
push
and
add
fcomp
adc
sub
sbb
or
or
add
add
add
add
std
(bad)
dec
add
add
add
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sub
cmps
add
push
and
std
(bad)
jmp
sbb
mov
add
and
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
adc
add
push
add
add
pop
add
or
add
add
xor
add
add
add
add
adc
add
push
add
lods
add
push
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
sub
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
mov
es
add
add
(bad)
(bad)
jmp
inc
add
and
add
pop
sub
es
add
add
(bad)
(bad)
jmp
and
push
mov
push
retf
popa
and
add
add
dec
add
add
add
add
(bad)
(bad)
jmp
and
or
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
adc
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
mov
add
sbb
mov
outs
adc
lea
xchg
popa
sub
or
push
add
add
add
adc
add
push
sbb
add
adc
or
sub
add
add
add
sub
es
sub
push
and
add
and
add
sub
add
push
and
add
sub
add
xor
add
add
adc
add
push
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
movs
int3
sub
add
and
mov
add
add
cld
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
inc
or
add
scas
add
add
add
add
add
xor
add
sub
add
add
add
add
add
add
add
add
lahf
(bad)
(bad)
jmp
add
add
sub
cmp
add
add
inc
pop
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
pop
or
fwait
add
sub
or
mov
es
add
add
(bad)
(bad)
jmp
and
mov
pop
xor
or
add
add
add
mov
(bad)
(bad)
cmp
(bad)
inc
add
sub
(bad)
call
(bad)
(bad)
call
cmp
dec
and
add
xchg
and
jp
add
cmp
(bad)
call
sub
add
add
add
add
mov
add
sbb
and
(bad)
jmp
(bad)
and
add
and
and
ins
xchg
xchg
pop
and
sub
and
cmp
(bad)
(bad)
inc
jl
add
add
add
add
stos
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
sub
cmp
inc
add
add
idiv
(bad)
jmp
push
cmp
add
add
sbb
test
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
push
add
mov
add
and
add
add
sub
add
push
and
add
adc
or
xor
add
adc
add
push
jle
add
add
sbb
and
or
add
popa
and
inc
pop
add
add
add
add
add
iret
(bad)
(bad)
call
add
pop
add
add
jnp
add
sbb
push
and
pop
imul
popa
sub
lods
sbb
sub
add
jle
add
cmp
add
push
add
add
add
ja
add
dec
add
add
add
add
add
add
add
add
and
add
(bad)
call
or
iret
pop
test
cmp
(bad)
inc
push
popa
inc
add
add
or
add
and
sbb
push
(bad)
(bad)
call
sub
add
sub
pop
pop
or
pop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sbb
addr16
(bad)
dec
and
add
add
out
sbb
push
(bad)
(bad)
jmp
sbb
add
add
add
add
add
add
add
add
add
mov
add
sub
ins
(bad)
(bad)
inc
add
adc
or
out
add
sbb
add
sub
es
jle
add
add
push
and
sbb
popa
and
pop
inc
or
add
xor
add
scas
add
add
add
add
add
jb
add
bound
add
call
add
add
(bad)
(bad)
inc
add
add
add
cmp
add
add
add
add
pop
adc
and
aaa
inc
pop
and
sub
pop
push
popa
inc
add
add
xlat
add
add
stos
and
or
add
cld
cmp
(bad)
call
push
pop
pop
xchg
and
adc
add
call
(bad)
(bad)
call
mov
add
and
xor
mov
dec
(bad)
(bad)
call
add
add
add
add
add
call
(bad)
(bad)
(bad)
call
add
add
add
xchg
add
add
add
ja
(bad)
jmp
xor
(bad)
(bad)
call
or
inc
loope
cvtps2pd
aaa
and
(bad)
call
or
ds
ss
pop
and
xchg
fdivr
cmp
(bad)
(bad)
call
or
test
std
sbb
add
cmp
(bad)
(bad)
call
or
push
and
add
xchg
and
adc
call
cmp
(bad)
(bad)
jle
add
add
adc
pop
and
add
inc
mov
add
sbb
sub
or
adc
inc
pop
pop
or
fadd
add
or
and
add
or
add
sbb
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
adc
pop
dec
xchg
pop
daa
pop
adc
call
pop
and
add
add
add
jmp
add
and
adc
inc
adc
or
into
add
add
add
push
jle
add
add
add
xor
add
add
arpl
cld
and
cmp
xchg
popa
and
pop
inc
or
add
call
add
add
add
add
(bad)
(bad)
push
add
add
add
add
adc
jecxz
add
adc
and
mov
pop
and
jno
add
scas
pop
or
loope
movs
push
or
add
add
and
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
sti
add
add
loopne
cmp
cmp
(bad)
dec
add
popa
pop
jne
push
popa
inc
add
add
bound
add
and
enter
xor
(bad)
call
push
and
test
daa
pop
and
cld
sbb
popa
cmp
(bad)
(bad)
call
push
and
or
cmps
pop
and
cmp
mov
add
and
mov
stc
cmp
(bad)
(bad)
call
add
or
and
add
pop
or
mov
retf
add
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
jle
add
add
sbb
inc
mov
add
sbb
mov
add
sbb
mov
or
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
pop
push
add
sbb
sbb
inc
add
add
idiv
(bad)
call
sub
add
sbb
call
add
add
in
adc
add
add
cmp
(bad)
(bad)
inc
sub
add
inc
xchg
and
add
pop
or
inc
add
xor
add
add
add
add
adc
add
push
add
add
or
add
xor
add
add
add
add
adc
add
push
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
adc
add
push
add
sub
sub
add
xor
add
add
add
add
adc
add
push
add
add
and
add
and
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
test
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
outs
and
add
sub
xor
add
add
add
add
add
add
push
add
outs
sbb
add
and
adc
or
adc
add
adc
add
push
sub
es
add
leave
add
push
add
ret
push
sub
add
adc
or
jge
add
push
add
adc
add
push
sbb
add
and
add
add
add
sub
cli
add
add
add
les
add
sbb
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
xchg
(bad)
stc
sub
cmp
inc
add
add
idiv
(bad)
call
cmp
add
add
and
push
add
sub
pop
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
mov
pop
cmp
add
jle
add
add
push
sub
add
and
or
pop
and
jns
out
and
adc
popa
and
push
add
add
(bad)
(bad)
push
(bad)
jmp
add
add
add
add
retf
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
sbb
sar
test
sbb
sub
sbb
inc
or
add
jo
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
inc
add
add
(bad)
dec
(bad)
(bad)
call
push
(bad)
(bad)
(bad)
aas
add
add
sub
or
mov
and
cmp
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
mov
(bad)
call
add
(bad)
(bad)
call
sub
sbb
add
(bad)
(bad)
jmp
sub
add
adc
or
add
add
adc
add
push
pop
cmp
sub
add
push
and
add
cmp
add
push
and
hlt
cwde
mov
and
and
and
and
int3
add
push
and
add
sub
es
sub
ds
push
and
xor
popa
and
add
add
loopne
(bad)
inc
(bad)
(bad)
jmp
add
sbb
sub
add
push
jle
add
add
push
xchg
jle
add
add
jb
popa
pop
dec
pop
pushf
sbb
add
sub
add
push
sub
pop
or
inc
or
add
scas
(bad)
(bad)
dec
(bad)
call
(bad)
call
(bad)
inc
(bad)
(bad)
dec
add
add
sub
add
push
and
(bad)
call
add
(bad)
(bad)
call
sub
add
es
mov
adc
or
jnp
add
pop
add
adc
add
push
jle
add
add
add
repnz
stos
mov
jecxz
and
pop
inc
or
add
(bad)
(bad)
(bad)
dec
add
add
add
mov
add
mov
add
sub
add
add
add
cmp
and
mov
add
add
add
adc
and
and
sub
push
pop
push
popa
inc
add
add
jae
add
and
xchg
inc
or
add
arpl
add
jbe
add
cwde
add
add
add
add
add
inc
add
add
add
add
imul
(bad)
call
or
adc
xor
cmp
(bad)
call
pop
and
or
js
popa
cmp
(bad)
(bad)
call
or
and
push
and
fistp
cmp
(bad)
(bad)
call
cmp
(bad)
call
add
mov
add
xchg
and
cld
add
pop
or
inc
mov
add
sbb
enter
push
pop
pop
or
pop
or
or
inc
sbb
sbb
inc
add
add
idiv
(bad)
call
sub
add
sbb
call
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
ret
add
push
sub
idiv
(bad)
inc
adc
or
or
add
add
add
sub
es
add
int
add
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
outs
add
or
adc
or
or
add
add
add
sub
es
add
iret
add
push
sub
adc
or
or
add
add
add
sub
es
add
daa
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
xchg
add
and
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
dec
add
add
cmp
outs
cmp
sub
es
add
pop
and
jp
add
rol
add
and
and
and
jp
add
rol
add
and
pop
sub
out
sub
add
push
and
pop
pop
sbb
repz
add
rol
add
and
pop
and
and
jp
add
xchg
add
and
pop
jo
and
jp
add
rol
add
and
and
add
add
and
jp
add
xchg
add
and
and
add
add
and
jp
add
rol
add
and
add
add
pop
sbb
mov
add
and
mov
cmp
xchg
jne
and
pop
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
aas
add
add
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
cmp
or
or
sub
sbb
add
add
(bad)
(bad)
jmp
and
pop
inc
add
add
add
(bad)
(bad)
dec
add
(bad)
jmp
inc
sbb
add
inc
add
add
(bad)
inc
add
fwait
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
(bad)
push
add
sbb
push
and
inc
add
add
idiv
(bad)
jmp
and
push
hlt
ja
sub
(bad)
(bad)
jle
add
add
inc
sub
add
jae
add
or
or
add
and
add
and
add
sub
mov
and
outs
aam
popa
cmp
(bad)
(bad)
jmp
rol
add
sar
add
rol
add
and
add
cmp
jmp
jbe
test
leave
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
sub
add
adc
or
adc
add
add
add
sub
es
add
add
xchg
add
and
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
sub
es
pop
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
push
pop
xchg
lds
popa
and
add
add
push
add
add
add
add
(bad)
(bad)
jmp
cmp
or
inc
push
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
pop
sub
add
add
(bad)
(bad)
jmp
add
fld
add
sub
sub
add
xlat
add
push
sbb
mov
movs
or
sub
mov
add
add
xor
add
add
adc
add
push
sbb
cmp
and
mov
pop
and
sub
popa
cmp
add
inc
pop
add
add
add
pop
add
add
add
arpl
add
adc
add
test
add
lea
add
sub
adc
add
or
add
outs
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
xor
add
push
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
test
sub
add
add
add
fld
add
sbb
out
js
mov
or
push
mov
add
or
pop
add
xchg
pop
sub
jmp
add
lds
idiv
(bad)
call
or
popa
(bad)
(bad)
jmp
fld
sub
add
add
(bad)
(bad)
jmp
xor
sbb
cmp
(bad)
call
add
(bad)
(bad)
jmp
jle
add
add
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
sbb
(bad)
jmp
mov
hlt
inc
and
pop
jno
and
and
and
jge
outs
popa
sub
sbb
sbb
hlt
(bad)
(bad)
inc
add
loopne
add
pop
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
and
or
inc
popa
and
pop
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
cmp
adc
or
rol
add
add
add
sub
es
pop
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
fild
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
pop
sub
add
push
sbb
sub
sbb
add
add
idiv
(bad)
jmp
add
fiadd
add
and
add
push
sbb
fild
add
and
inc
add
add
idiv
(bad)
jmp
and
push
and
dec
and
and
add
add
loopne
(bad)
push
add
movs
(bad)
(bad)
jmp
sahf
sbb
pop
inc
push
add
add
(bad)
(bad)
(bad)
jle
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
sub
push
and
out
push
mov
mov
adc
or
fld
add
and
add
sub
es
jle
add
add
push
and
fwait
cwde
cmp
pop
popa
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
jae
add
inc
add
cmp
add
add
or
cmp
xchg
cmc
pop
and
cs
popa
sub
sub
push
popa
inc
add
add
fadd
add
and
xchg
adc
pop
adc
and
div
cwde
pop
and
dec
xchg
cmp
(bad)
call
fadd
add
and
mov
(bad)
(bad)
call
or
pop
and
and
adc
dec
cmp
call
or
(bad)
ja
(bad)
pop
and
sti
xchg
sub
(bad)
call
or
add
and
pop
clc
popa
cmp
(bad)
(bad)
call
or
add
sub
sbb
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
add
pop
add
add
(bad)
call
add
add
add
add
add
and
inc
sub
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
and
pop
inc
popa
cmp
(bad)
(bad)
call
pop
pop
or
add
nop
jle
add
add
sbb
add
add
add
sub
add
push
and
and
add
xchg
and
add
add
add
inc
pop
pop
or
inc
or
add
js
add
or
add
sbb
pop
xor
sbb
add
(bad)
(bad)
call
sub
add
es
adc
call
push
pop
cmp
inc
add
and
add
inc
add
adc
or
or
add
add
add
sub
es
add
loope
add
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
jecxz
add
and
add
xor
add
add
add
add
add
add
push
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
call
add
xor
add
add
add
add
add
add
push
sub
add
push
fiadd
fiadd
sub
add
add
add
add
pop
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
or
add
xor
add
add
add
add
add
add
push
sub
es
jae
add
or
sub
sbb
or
fild
add
and
add
sub
es
sub
add
push
outs
xor
add
and
add
and
add
and
ins
push
jb
add
jo
repnz
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
pop
or
repz
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
and
or
inc
pop
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
inc
add
add
add
add
(bad)
inc
(bad)
(bad)
jmp
add
sub
sbb
(bad)
and
add
repnz
push
and
inc
add
add
idiv
(bad)
call
sub
fiadd
push
sub
sub
add
add
add
add
aam
add
or
xor
add
add
add
add
add
add
push
sub
add
push
adc
push
out
add
push
jae
add
or
add
or
add
fiadd
sub
adc
add
add
sbb
add
xor
add
add
adc
add
push
pop
push
cmp
add
cli
add
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
adc
add
test
adc
jnp
add
add
clc
add
push
and
add
and
or
cmp
add
test
pop
sub
add
push
and
add
and
inc
add
add
adc
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
call
pop
sbb
pop
pop
push
cmp
add
add
add
jo
sub
add
push
and
adc
pop
sub
adc
outs
cmp
add
and
add
or
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
adc
pop
pop
sub
add
push
and
or
jp
cld
add
push
and
push
inc
adc
add
push
cmp
or
std
add
push
and
aas
xchg
add
pop
inc
add
add
idiv
(bad)
call
add
cli
add
push
and
add
add
idiv
(bad)
call
pop
sub
add
add
(bad)
(bad)
jmp
adc
or
pop
sub
add
push
and
adc
push
adc
or
std
add
push
and
aas
push
add
add
idiv
(bad)
call
ss
add
add
adc
inc
add
pop
pop
sub
add
add
cli
add
push
and
inc
add
add
idiv
(bad)
(bad)
cmp
call
push
adc
adc
inc
sbb
add
add
add
movs
add
add
add
sgdtd
add
add
add
std
(bad)
call
call
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
out
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
(bad)
jmp
(bad)
push
(bad)
call
add
add
add
add
or
xchg
adc
pop
je
cmp
add
and
push
inc
adc
pop
or
jge
(bad)
call
add
sub
add
push
and
add
sbb
push
sar
(bad)
call
or
pop
adc
pop
sub
add
push
and
(bad)
call
add
(bad)
(bad)
jmp
pop
or
hlt
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
dec
adc
pop
pop
call
(bad)
(bad)
(bad)
cmp
(bad)
dec
adc
call
and
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
call
adc
cmp
adc
call
and
(bad)
call
inc
add
add
idiv
(bad)
dec
adc
pop
pop
call
(bad)
(bad)
call
add
sub
add
push
and
jge
(bad)
call
inc
add
add
idiv
(bad)
call
add
pop
sub
add
push
and
adc
xchg
(bad)
(bad)
call
adc
pop
cmp
push
sub
add
push
and
cmp
(bad)
(bad)
jle
add
add
add
cmp
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
cmp
add
and
aad
add
sub
add
push
and
add
add
and
or
mov
add
sbb
add
add
(bad)
(bad)
call
or
add
or
adc
add
add
and
or
or
add
add
and
sub
sbb
add
(bad)
(bad)
call
or
push
and
lods
add
add
push
adc
sub
add
add
(bad)
(bad)
call
or
or
or
pop
adc
fiadd
es
adc
fiadd
adc
cmp
add
add
inc
add
add
idiv
(bad)
push
add
jo
add
add
and
add
adc
pop
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
(bad)
(bad)
jmp
adc
adc
cld
add
push
and
add
push
sbb
dec
adc
adc
jnp
add
add
push
add
jo
push
add
push
and
sub
adc
sub
add
push
and
es
and
adc
sub
add
push
and
adc
adc
or
add
and
mov
adc
add
(bad)
(bad)
call
add
add
add
add
add
scas
(bad)
(bad)
jmp
(bad)
push
add
add
or
retf
adc
adc
sub
add
push
and
sub
add
push
push
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
push
and
add
fiadd
jle
add
add
add
push
outs
add
or
push
adc
fimul
or
adc
or
add
fcom
adc
sub
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
cli
add
add
add
add
add
add
xor
add
add
add
add
push
add
aas
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
adc
add
and
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
inc
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
or
add
and
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
sub
add
or
adc
or
or
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
outs
cmp
add
and
adc
or
sldt
add
add
add
add
push
add
add
inc
add
or
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
push
add
dec
add
or
add
xor
add
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
adc
add
add
add
sub
es
add
add
outs
add
add
and
or
push
add
add
add
add
add
push
add
sub
add
push
and
adc
or
or
add
add
add
push
add
dec
add
or
add
xor
add
add
add
add
add
add
push
add
add
dec
add
or
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
add
sub
add
and
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
sub
add
and
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
sub
es
sub
es
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
adc
adc
sub
jle
add
add
add
add
or
sbb
pop
push
sub
add
push
and
add
jmp
add
sbb
inc
adc
add
stos
add
add
call
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
jb
add
jo
push
add
push
and
inc
add
add
idiv
(bad)
inc
pop
push
outs
dec
add
or
add
jge
add
add
or
(bad)
(bad)
(bad)
(bad)
cmp
add
add
jb
add
jo
push
add
push
and
inc
add
add
idiv
(bad)
call
or
cmp
rol
add
jb
add
jo
push
add
push
and
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
(bad)
inc
pop
pop
movaps
add
push
and
add
adc
add
(bad)
inc
jle
add
or
add
add
jle
add
or
add
add
adc
in
(bad)
jmp
imul
jge
add
add
(bad)
(bad)
(bad)
inc
jle
add
or
add
add
or
inc
jnp
add
add
pop
add
jo
sbb
add
and
inc
add
add
idiv
(bad)
inc
jle
add
or
add
add
cmp
or
add
or
sub
or
call
sbb
ja
(bad)
call
add
pop
adc
cmp
(bad)
call
add
sub
add
push
and
sbb
add
add
(bad)
(bad)
call
adc
dec
(bad)
(bad)
inc
pop
sub
add
push
and
pop
sub
or
add
or
adc
add
and
inc
add
add
idiv
(bad)
jmp
pop
cmp
(bad)
(bad)
inc
jnp
add
add
add
jo
sbb
add
and
inc
add
add
idiv
(bad)
call
or
cmc
std
(bad)
inc
jle
add
or
add
add
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
std
(bad)
jmp
add
adc
or
(bad)
add
add
add
push
push
cmp
add
push
jb
add
jo
adc
add
and
add
add
pop
or
adc
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
cmp
add
add
add
add
add
adc
add
and
adc
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
push
jb
add
jo
adc
add
and
cmp
add
add
inc
add
add
idiv
(bad)
jmp
jae
add
or
sbb
mov
add
push
jb
add
jo
adc
add
and
adc
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
add
xor
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
test
adc
add
and
(bad)
call
inc
add
add
idiv
(bad)
call
or
adc
add
and
inc
add
add
idiv
(bad)
jmp
push
add
add
add
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
adc
add
and
pop
push
add
add
add
push
add
or
(bad)
(bad)
call
or
inc
or
add
or
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
sub
push
add
add
add
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
jo
adc
add
and
sub
add
and
adc
or
push
add
add
add
add
add
push
add
outs
push
add
or
adc
or
sldt
add
add
add
add
push
add
add
sbb
add
and
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
outs
pop
add
or
adc
or
push
add
add
add
add
add
push
add
outs
dec
add
or
adc
or
sldt
add
add
add
add
push
add
add
adc
add
and
xor
add
add
add
add
add
add
push
sub
es
add
pop
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
pop
add
or
add
xor
add
add
add
add
adc
add
push
sub
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
or
jmp
inc
add
add
idiv
(bad)
call
sub
pop
sub
add
push
and
pop
inc
add
add
idiv
(bad)
call
or
daa
add
and
add
and
add
and
pop
sub
add
add
(bad)
(bad)
jmp
push
or
test
or
add
xor
add
mov
(bad)
push
dec
(bad)
(bad)
jmp
add
test
(bad)
call
add
outs
add
add
add
add
add
jp
add
sbb
int3
pop
jle
add
add
add
jle
add
add
add
inc
sbb
add
add
(bad)
(bad)
call
and
es
add
add
(bad)
(bad)
jmp
add
and
add
and
add
and
sub
sbb
add
add
idiv
(bad)
jmp
push
sub
sub
sbb
add
add
(bad)
(bad)
call
cmp
(bad)
call
sub
pop
pop
or
sbb
(bad)
jmp
pop
cmp
(bad)
call
sub
add
xor
add
add
daa
add
adc
add
push
jae
add
or
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
adc
add
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
sub
add
sub
es
jae
add
or
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
push
and
add
sub
add
push
and
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
adc
add
fadd
sub
add
add
add
or
das
cmp
adc
add
add
xor
add
add
adc
add
push
pop
sub
sub
sub
add
push
and
pop
push
add
es
pop
cmp
add
add
sub
add
push
and
or
add
push
and
sub
cli
add
add
adc
cld
add
push
and
add
push
and
jae
add
push
adc
adc
adc
adc
sub
add
push
and
adc
pop
adc
adc
adc
aas
fwait
add
add
inc
add
add
idiv
(bad)
call
sub
add
adc
sbb
add
add
idiv
(bad)
call
adc
add
pop
add
or
cmp
sub
jae
add
push
or
push
cmp
add
adc
sbb
add
add
(bad)
(bad)
call
sbb
and
cmp
add
sbb
add
(bad)
(bad)
jmp
adc
pop
sub
cmp
add
add
inc
add
add
idiv
(bad)
jmp
adc
jnp
jge
inc
loopne
add
sbb
add
(bad)
(bad)
call
cmp
add
add
add
jo
pop
add
or
sub
add
push
and
cmp
add
add
or
add
add
and
and
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
push
cs
sbb
add
add
idiv
(bad)
call
and
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
or
add
push
and
sub
add
and
sbb
add
push
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
or
push
adc
adc
sub
add
push
and
or
or
cld
add
push
and
add
push
and
cmp
add
cmp
add
add
add
sbb
nop
cmp
add
add
add
push
dec
add
jmp
add
idiv
(bad)
call
sub
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
sbb
or
sub
add
push
and
sbb
push
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
adc
add
add
and
add
add
or
add
adc
pop
pop
cmp
add
add
movhps
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
mov
add
or
add
or
add
push
and
add
add
and
sbb
xchg
add
add
sub
add
push
and
or
add
add
add
cld
add
push
and
sub
add
and
sbb
push
and
adc
adc
inc
add
add
idiv
(bad)
call
sbb
xor
add
fdiv
add
jo
pop
add
or
outs
push
add
or
and
xor
sub
add
push
and
push
sub
sbb
add
(bad)
(bad)
jmp
or
or
adc
sub
add
and
(bad)
(bad)
call
sub
push
adc
inc
sub
add
xchg
(bad)
(bad)
inc
add
dec
std
(bad)
(bad)
jle
(bad)
call
(bad)
push
cld
(bad)
push
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
mov
add
add
add
sbb
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
add
add
cld
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
sub
(bad)
inc
std
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
inc
std
(bad)
(bad)
ds
(bad)
call
cld
(bad)
call
add
add
(bad)
(bad)
call
cmp
(bad)
call
sub
add
push
and
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
adc
cmp
dec
sub
add
push
and
sub
add
push
and
or
and
es
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
push
and
push
cmp
(bad)
(bad)
jmp
sub
add
and
cmp
(bad)
call
inc
add
add
idiv
(bad)
inc
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
call
es
cmp
inc
add
add
idiv
(bad)
jmp
adc
nop
bound
add
or
call
adc
add
add
and
cmp
(bad)
dec
adc
cld
add
push
and
add
push
and
popa
(bad)
(bad)
call
push
adc
pop
sub
add
push
and
sbb
sbb
sub
add
push
and
outs
pusha
add
or
sbb
xor
add
and
adc
sub
pop
inc
add
add
idiv
(bad)
call
sbb
xor
add
fcom
nop
std
(bad)
call
add
(bad)
(bad)
call
adc
add
add
and
add
add
das
add
push
adc
pop
or
jmp
add
push
and
and
cmp
std
(bad)
call
idiv
(bad)
jmp
adc
push
dec
add
stos
sti
(bad)
call
idiv
(bad)
call
and
mov
(bad)
call
sub
add
push
and
add
add
das
add
push
adc
pop
sbb
xchg
std
(bad)
call
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sub
add
push
and
add
add
or
add
adc
pop
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
adc
pop
sub
add
push
and
(bad)
std
(bad)
(bad)
jle
add
add
or
add
push
and
(bad)
call
idiv
(bad)
(bad)
cmp
std
(bad)
call
or
ds
cld
(bad)
call
idiv
(bad)
call
cmp
cld
(bad)
call
or
xor
sbb
add
add
(bad)
(bad)
call
or
add
add
and
adc
push
adc
sub
add
and
(bad)
cld
(bad)
call
adc
add
add
and
cmp
sub
add
add
add
add
or
add
add
push
add
add
adc
or
adc
add
add
add
sub
es
add
adc
test
xor
sub
xor
adc
add
add
add
sub
es
add
add
and
add
and
or
adc
add
add
add
sub
es
add
add
xor
sub
xor
add
add
add
sub
es
jae
add
push
or
cmp
add
add
idiv
(bad)
call
sub
add
es
add
push
or
popa
add
or
sub
add
and
add
pop
pop
jg
pop
sbb
add
arpl
add
and
pusha
adc
sub
or
pusha
adc
sub
add
and
pusha
adc
sub
add
and
adc
sub
add
and
outs
or
add
add
add
and
add
add
or
add
adc
adc
push
adc
add
cld
add
push
and
sub
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
fstp
add
(bad)
(bad)
call
push
adc
and
add
add
push
push
pop
adc
aaa
add
push
push
push
outs
icebp
add
push
push
push
outs
icebp
add
push
push
or
repnz
push
push
adc
outs
repnz
push
push
sub
adc
push
push
sub
add
push
push
add
cld
add
push
and
add
push
sub
add
push
and
add
cmp
add
and
adc
sub
add
push
and
add
push
push
push
sub
add
push
push
adc
push
adc
sub
add
push
and
add
push
pop
add
cmp
add
sub
add
add
sub
add
push
and
adc
sub
add
and
or
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
adc
add
pop
outs
xchg
add
push
and
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
sub
add
push
and
adc
push
and
push
push
xor
sbb
add
add
(bad)
(bad)
inc
adc
cmp
add
pop
sub
add
push
and
inc
add
add
idiv
(bad)
inc
sub
add
push
and
and
add
sub
add
push
push
pop
adc
icebp
add
push
push
pop
adc
aaa
add
push
push
push
outs
icebp
add
push
push
push
sub
add
push
push
or
add
push
push
adc
sub
add
push
push
adc
imul
push
add
cld
add
push
and
add
push
push
adc
sub
add
push
and
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
outs
repnz
push
push
push
outs
repnz
push
push
adc
push
adc
sub
add
push
and
add
push
push
and
add
add
push
push
sub
add
push
push
push
outs
icebp
add
push
push
pop
sub
add
push
push
pop
sub
add
push
push
pop
adc
sub
add
push
and
add
push
push
pop
push
adc
sub
add
push
and
adc
pop
imul
push
push
sub
add
push
push
adc
push
outs
push
es
adc
imul
cmp
pop
inc
mov
add
sbb
add
add
idiv
(bad)
inc
and
jge
sub
add
push
push
add
cld
add
push
and
add
push
push
adc
cmp
add
add
(bad)
call
add
sub
add
push
and
pop
sub
add
and
add
and
adc
adc
push
adc
sub
add
push
and
add
push
push
sub
adc
push
push
outs
repnz
push
push
adc
sub
add
push
and
add
push
jae
add
push
adc
adc
adc
sub
add
push
sub
add
add
add
and
adc
adc
cmp
add
and
adc
inc
add
add
idiv
(bad)
inc
adc
adc
push
adc
sub
add
and
inc
add
add
idiv
(bad)
call
adc
cmp
xor
add
add
add
and
adc
push
sub
add
and
pop
push
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
adc
outs
adc
add
adc
sub
add
push
and
inc
add
add
idiv
(bad)
inc
sub
adc
push
adc
sub
add
push
adc
sub
add
push
and
add
push
push
adc
sub
add
adc
adc
sub
add
push
and
adc
adc
sub
add
push
and
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
cmp
add
add
sbb
js
inc
add
add
idiv
(bad)
inc
and
jge
sub
add
push
add
adc
test
xor
adc
add
push
sub
add
push
and
sbb
sbb
adc
sub
add
push
and
add
push
and
adc
push
adc
sub
add
push
and
add
push
fisttp
sbb
sbb
add
add
idiv
(bad)
call
sbb
xor
add
fadd
sbb
jne
inc
add
add
idiv
(bad)
inc
and
jge
sub
add
push
add
adc
stos
add
add
and
add
and
add
add
and
sbb
sbb
cld
add
push
and
add
push
and
adc
push
adc
sub
add
push
and
add
push
ficom
adc
add
add
idiv
(bad)
call
sbb
or
push
sub
push
push
sub
add
push
sub
add
and
push
adc
jb
add
jo
pop
sub
add
and
add
and
add
sbb
and
add
inc
dec
add
add
add
add
add
xor
add
add
add
add
add
jle
add
sub
add
add
add
add
aad
add
fld
add
sub
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
push
add
and
xor
add
add
add
add
add
add
push
add
add
imul
or
xor
add
add
add
add
push
add
dec
add
or
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
adc
add
add
add
sub
es
add
add
outs
add
add
and
or
or
add
add
add
push
add
add
or
add
xor
adc
add
add
add
sub
es
add
add
outs
dec
add
push
and
or
or
add
add
add
push
add
add
or
add
sub
add
adc
or
adc
add
add
add
sub
es
add
add
sbb
sub
xor
add
add
add
add
add
add
push
add
sub
add
push
and
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
sbb
add
and
or
adc
add
add
add
sub
es
add
add
outs
pusha
add
or
or
adc
add
add
add
sub
es
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
repnz
push
sub
xor
add
add
add
add
sub
es
add
outs
icebp
add
push
sub
xor
add
add
add
add
push
add
or
add
and
add
xor
add
add
add
add
add
add
push
add
outs
inc
add
or
adc
or
push
add
add
add
add
add
push
add
add
outs
adc
add
sub
add
xor
add
add
add
add
sub
es
add
outs
xchg
add
push
sub
xor
add
add
add
add
add
add
push
add
outs
cwde
add
push
and
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
add
ins
add
or
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
outs
add
or
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
add
or
add
and
xor
add
add
adc
add
push
sub
es
pop
cmp
add
add
add
add
push
add
cld
add
push
and
add
push
sbb
jge
add
add
sub
jae
add
push
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
sub
add
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
add
add
push
jge
add
add
sub
or
inc
or
add
test
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jp
(bad)
call
add
add
jne
(bad)
jmp
sbb
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
sub
add
adc
or
in
add
add
add
adc
add
push
sub
es
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
sbb
push
and
add
add
or
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
pop
push
sub
es
add
pop
add
push
add
sub
or
inc
pop
add
add
add
add
add
add
add
cdq
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
sbb
fcomp
sbb
push
and
add
add
pop
add
push
add
add
js
(bad)
jmp
sbb
mov
add
push
and
add
add
pop
add
push
add
add
sub
adc
or
repz
add
add
sub
es
pop
pop
cmp
sub
adc
push
add
add
adc
dec
add
add
movaps
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
cmp
add
push
jge
add
add
jnp
add
add
jnp
add
add
push
add
push
and
cmp
add
add
add
add
xchg
jge
add
add
push
cmp
add
add
jnp
add
add
ds
add
add
inc
add
add
idiv
(bad)
call
adc
add
add
add
add
push
add
push
and
cmp
add
add
sub
jle
add
add
xchg
jge
add
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
sub
jnp
add
add
jnp
add
add
push
add
push
sbb
stos
add
add
push
das
stos
sbb
add
add
idiv
(bad)
call
push
sub
add
and
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
push
add
push
and
das
stos
sbb
add
add
(bad)
(bad)
jmp
pushf
es
adc
inc
add
add
idiv
(bad)
jmp
add
or
add
add
adc
inc
or
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
jnp
add
add
push
add
push
add
add
pop
jge
add
add
pop
or
add
add
stc
add
add
pop
adc
add
add
add
loope
(bad)
inc
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
add
std
(bad)
(bad)
mov
add
add
add
add
(bad)
dec
(bad)
dec
add
add
(bad)
dec
(bad)
(bad)
call
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jns
(bad)
dec
add
arpl
add
sbb
add
xlat
add
add
sub
add
and
add
add
jge
add
add
jnp
add
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
cmp
add
add
add
add
outs
imul
push
pop
sbb
inc
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
adc
sub
sbb
add
add
sbb
pop
(bad)
(bad)
call
sub
jnp
add
add
jnp
add
add
push
add
push
and
add
(bad)
call
lods
pop
inc
add
add
idiv
(bad)
call
or
out
(bad)
(bad)
inc
and
add
pop
jge
add
add
pop
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
and
add
add
add
add
inc
add
add
idiv
(bad)
inc
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
and
(bad)
call
idiv
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
push
add
push
pop
adc
jae
(bad)
inc
pop
pop
and
add
cmp
(bad)
(bad)
call
idiv
(bad)
call
call
add
pop
inc
add
add
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
sub
jle
add
add
and
add
add
jge
add
add
cmp
jnp
add
add
jnp
add
add
push
add
push
and
repz
(bad)
inc
add
add
add
or
or
jecxz
(bad)
inc
sbb
add
and
add
add
inc
add
add
idiv
(bad)
call
sbb
cmp
inc
add
add
idiv
(bad)
jmp
pop
sub
adc
or
inc
add
sub
add
push
pop
push
sub
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
adc
add
push
sbb
pop
add
add
pop
pop
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sbb
add
(bad)
(bad)
jmp
sbb
sub
jnp
add
add
adc
push
add
push
and
cmp
add
add
sbb
add
add
or
add
sbb
add
add
(bad)
(bad)
jmp
sub
add
add
push
jge
add
add
sbb
inc
add
add
sub
add
add
add
adc
push
add
push
and
jge
add
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
cmp
push
das
push
sbb
add
add
(bad)
(bad)
call
sbb
call
inc
add
add
sub
jnp
add
add
push
add
push
and
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
sbb
add
add
(bad)
(bad)
call
or
push
add
add
sub
jnp
add
add
sub
push
pop
adc
dec
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
cmp
jnp
add
add
push
add
add
inc
add
add
idiv
(bad)
inc
pop
or
inc
add
add
cmp
add
add
sbb
add
adc
cli
add
add
add
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
pop
arpl
add
or
push
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
sbb
cmp
inc
add
add
idiv
(bad)
jmp
cmp
jle
add
add
dec
add
add
or
xchg
add
push
sub
add
add
add
pop
add
push
and
add
add
add
add
mov
add
and
add
adc
pop
add
add
add
mov
inc
add
add
idiv
(bad)
call
adc
dec
add
add
jnp
add
add
jnp
add
add
push
add
push
and
jnp
add
add
pop
jge
add
add
sbb
push
add
add
add
push
add
add
(bad)
(bad)
(bad)
call
push
adc
adc
inc
sbb
add
dec
(bad)
(bad)
push
add
add
add
add
std
(bad)
call
add
iret
std
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
push
add
in
(bad)
(bad)
dec
add
fdivr
(bad)
call
(bad)
(bad)
push
std
(bad)
dec
std
(bad)
push
std
(bad)
push
(bad)
inc
(bad)
(bad)
push
(bad)
call
(bad)
call
add
add
pop
push
sub
sbb
add
(bad)
(bad)
jmp
or
pop
inc
or
add
sbb
(bad)
jmp
(bad)
call
std
(bad)
inc
std
(bad)
call
add
add
add
add
add
add
sbb
inc
(bad)
(bad)
inc
jnp
add
add
sbb
xor
(bad)
inc
sbb
add
add
push
cmp
inc
add
add
idiv
(bad)
jmp
adc
add
(bad)
(bad)
dec
sbb
(bad)
inc
jnp
add
add
popa
add
push
pop
push
cmp
(bad)
(bad)
call
sub
jnp
add
add
adc
push
add
push
add
jge
add
add
test
(bad)
jmp
pop
or
int
(bad)
call
sub
jnp
add
add
sub
add
and
cmp
sub
add
and
push
sub
add
xor
push
add
add
add
adc
add
push
sbb
dec
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
add
inc
add
add
idiv
(bad)
call
or
aas
add
add
add
pop
add
push
and
add
add
inc
add
add
idiv
(bad)
jmp
(bad)
es
or
sub
sbb
add
(bad)
(bad)
jmp
add
add
cmp
add
add
or
inc
or
add
jo
add
mov
add
add
add
add
add
mov
(bad)
dec
add
add
add
add
add
(bad)
call
sub
push
pop
pop
or
push
sub
sbb
add
(bad)
(bad)
jmp
add
add
add
add
outs
jb
add
and
pop
dec
add
push
sub
add
and
(bad)
call
add
(bad)
(bad)
jmp
sbb
inc
sub
sub
push
and
inc
add
add
idiv
(bad)
call
cmp
(bad)
call
or
cmp
(bad)
inc
jnp
add
add
or
aam
inc
add
add
idiv
(bad)
call
or
inc
(bad)
(bad)
inc
add
add
idiv
(bad)
call
sub
sub
add
adc
or
or
add
add
add
sub
es
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
outs
jge
add
and
adc
or
push
add
add
add
add
add
push
add
outs
pop
add
push
and
adc
or
or
add
add
add
sub
es
add
outs
pop
add
push
sub
xor
add
add
add
add
push
add
add
ins
add
push
sub
add
adc
or
sldt
add
add
add
add
push
add
add
outs
add
push
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
add
outs
xchg
add
and
adc
or
or
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
sldt
add
add
add
add
push
sub
es
add
imul
adc
ltr
add
adc
add
push
sub
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
sub
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
and
or
inc
pop
add
add
(bad)
jmp
add
cmp
inc
add
add
add
add
(bad)
push
add
add
and
pop
sub
add
add
add
jnp
add
add
ins
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
add
adc
push
add
add
sub
add
pop
add
pop
pop
bound
pop
push
imul
xor
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
sub
add
add
add
sub
es
add
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
adc
or
adc
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
adc
add
push
pop
or
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
xchg
add
add
add
pop
pop
dec
add
add
add
add
pushf
pop
or
xor
sub
jnp
add
add
jnp
add
add
or
or
inc
add
add
idiv
(bad)
jmp
add
add
add
idiv
(bad)
jmp
rcr
or
add
movs
(bad)
(bad)
jmp
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
cmps
add
add
add
add
add
add
add
push
(bad)
push
add
sbb
mov
jnp
add
add
xor
add
idiv
(bad)
call
sub
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
push
sub
add
and
(bad)
call
idiv
(bad)
jmp
push
or
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
movhps
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
fs
add
add
or
xor
(bad)
inc
add
push
pop
pop
or
or
push
(bad)
(bad)
inc
push
jge
add
add
adc
adc
(bad)
inc
and
add
pop
jge
add
add
pop
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
pop
inc
add
add
idiv
(bad)
inc
dec
add
pop
push
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
pop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
sub
add
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
add
xor
add
add
add
add
adc
add
push
add
add
push
and
add
and
add
and
add
jge
add
add
add
xor
add
add
xor
add
sub
es
sub
add
and
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
out
add
add
jge
add
add
or
fadd
add
jae
add
or
add
cmp
add
add
idiv
(bad)
jmp
add
jge
add
add
or
scas
add
add
add
push
add
add
cmp
push
xor
inc
add
add
idiv
(bad)
inc
add
cld
add
push
and
sbb
add
add
(bad)
(bad)
call
or
jbe
add
add
add
add
jnp
add
add
xchg
sbb
add
add
(bad)
(bad)
call
sub
jb
add
jp
pop
pop
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
xor
sbb
add
add
(bad)
(bad)
jmp
(bad)
es
sub
and
add
add
pop
pop
dec
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
push
sbb
pop
inc
or
(bad)
(bad)
(bad)
out
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
call
add
add
(bad)
(bad)
jmp
add
add
or
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
pop
jge
add
add
sub
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
push
and
add
sub
add
sub
add
adc
or
fadd
add
add
adc
add
push
push
sub
push
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
xor
inc
add
add
idiv
(bad)
jmp
inc
sbb
add
add
or
pop
jge
add
add
jne
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
je
add
and
inc
add
add
idiv
(bad)
jmp
jae
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
push
or
inc
pop
add
add
(bad)
jmp
(bad)
push
(bad)
mov
(bad)
(bad)
inc
add
add
add
add
sub
add
add
(bad)
jg
add
push
add
add
sub
sub
xor
add
add
add
add
adc
add
push
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
inc
add
add
(bad)
jg
add
push
add
add
sbb
sbb
sub
add
push
xor
inc
add
add
idiv
(bad)
call
adc
and
jg
add
or
add
fistp
or
inc
pop
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
pop
sub
add
and
inc
add
add
idiv
(bad)
jmp
leave
sub
add
and
add
or
pop
jge
add
add
add
add
add
and
add
xchg
pushf
sbb
popf
sub
adc
push
add
add
add
add
adc
add
push
sbb
mov
add
add
add
ins
add
push
pop
or
add
jnp
add
add
das
out
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
or
cmp
add
sbb
add
add
(bad)
(bad)
jmp
sub
jnp
add
add
and
add
or
add
add
add
add
add
and
pushf
push
sub
and
add
pop
jge
add
add
sub
add
pop
or
pop
cmp
pop
inc
add
add
idiv
(bad)
call
or
sbb
add
fild
add
sbb
add
add
(bad)
(bad)
jmp
inc
sbb
add
add
push
add
add
(bad)
(bad)
call
add
add
(bad)
call
add
stos
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
push
add
jge
(bad)
jmp
add
add
das
es
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
pop
and
add
push
sub
sbb
add
add
idiv
(bad)
jmp
add
add
add
add
add
add
jnp
add
add
sub
add
pop
or
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
add
sbb
add
add
(bad)
(bad)
call
or
dec
(bad)
(bad)
push
add
or
jnp
add
add
pop
and
jg
add
sbb
inc
and
add
push
cmp
sbb
add
add
(bad)
(bad)
call
sub
add
and
(bad)
call
add
(bad)
(bad)
jmp
sub
adc
push
add
add
adc
add
push
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jnp
add
add
jnp
add
add
sub
add
and
push
push
pop
xor
inc
add
add
idiv
(bad)
(bad)
cmp
or
inc
or
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
out
add
add
add
call
add
add
add
add
add
add
pop
or
mov
add
pop
jge
add
add
or
mov
add
add
add
pop
and
jg
add
push
add
add
or
sub
pop
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
jnp
add
add
sub
add
and
jne
(bad)
inc
add
jnp
add
add
add
pop
sub
add
and
daa
(bad)
(bad)
jmp
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
ds
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
add
pop
add
add
sub
add
and
add
push
and
add
and
add
jne
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
cmp
(bad)
(bad)
call
idiv
(bad)
jmp
and
add
add
add
add
or
cmp
(bad)
(bad)
inc
sub
xor
add
add
adc
add
push
pop
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
and
add
pop
pop
dec
add
sbb
push
and
add
dec
add
sub
or
inc
or
add
sldt
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
xor
inc
add
add
idiv
(bad)
call
add
add
add
add
push
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
push
add
add
pop
sub
add
add
(bad)
(bad)
jmp
jae
add
or
and
add
xor
add
idiv
(bad)
(bad)
cmp
pop
cmp
jmp
add
xor
add
add
add
add
add
add
push
and
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
add
add
add
xor
add
add
adc
add
push
sbb
fwait
add
add
push
add
add
add
jnp
add
add
add
add
pop
or
or
or
jbe
add
add
add
add
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
or
jnp
add
add
mov
inc
add
add
idiv
(bad)
call
sub
add
add
pop
jge
add
add
sub
or
or
add
sub
push
dec
add
sbb
sbb
jnp
add
add
add
add
sub
add
sub
or
add
jo
(bad)
jmp
add
and
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
jmp
add
xchg
(bad)
(bad)
jmp
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
or
sub
add
add
(bad)
(bad)
jmp
add
add
add
push
sub
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
pop
or
push
(bad)
(bad)
inc
jnp
add
add
or
add
push
add
or
sub
adc
or
adc
add
adc
add
push
add
push
and
add
jge
add
add
add
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
add
ins
add
or
xor
adc
add
add
add
sub
es
add
add
outs
arpl
add
and
or
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
mov
add
xor
add
sub
es
sub
es
pop
or
daa
pop
and
add
add
fwait
add
add
inc
add
add
idiv
(bad)
call
sub
add
cmp
add
pop
or
inc
adc
add
popa
add
add
(bad)
(bad)
call
add
add
add
iret
add
add
add
and
add
adc
add
add
add
cmps
add
add
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
push
or
jp
add
es
sub
add
aas
add
add
sbb
add
(bad)
(bad)
(bad)
cmp
(bad)
inc
pop
and
pushf
sbb
jae
(bad)
inc
and
add
add
aaa
pop
inc
add
add
idiv
(bad)
call
or
pop
(bad)
(bad)
call
or
push
push
pop
and
pushf
sbb
inc
and
jmp
idiv
(bad)
jmp
rol
and
or
jmp
clts
pop
and
pushf
pop
or
inc
pop
and
in
sbb
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
jmp
and
add
sub
add
push
and
in
(bad)
(bad)
inc
jae
add
push
sbb
add
(bad)
(bad)
(bad)
call
and
add
add
and
jle
add
and
(bad)
call
idiv
(bad)
jmp
sbb
cmp
inc
add
add
idiv
(bad)
jmp
push
jae
add
push
sbb
add
push
cmp
(bad)
(bad)
inc
pop
and
pushf
push
cmp
add
xor
add
add
add
add
add
add
push
sub
es
add
add
push
add
sub
push
sub
add
xor
add
add
add
add
adc
add
push
pop
and
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
pop
or
cmps
add
add
idiv
(bad)
inc
adc
xchg
and
adc
pop
movaps
add
and
add
sbb
add
add
idiv
(bad)
jmp
adc
add
add
inc
add
add
idiv
(bad)
call
or
pop
adc
pop
adc
sbb
add
adc
add
adc
pop
adc
add
or
add
or
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
adc
push
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
pop
cmp
add
add
push
pop
pop
adc
pop
push
cmp
adc
adc
pop
add
add
inc
add
add
idiv
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
pop
adc
mov
add
adc
sbb
adc
pop
adc
jge
add
adc
sub
sbb
add
add
(bad)
(bad)
call
push
cmp
add
push
or
and
add
pop
or
dec
add
add
adc
add
or
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
cmp
add
add
push
pop
pop
adc
adc
add
cld
add
push
and
add
add
inc
add
add
idiv
(bad)
call
sub
add
and
add
sbb
add
(bad)
(bad)
jmp
push
adc
add
add
adc
or
add
adc
add
add
aas
out
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
add
jmp
cmp
add
or
adc
cmps
add
add
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
sbb
mov
add
adc
pop
adc
pop
or
pop
pop
bound
or
and
jae
add
adc
pop
or
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
inc
adc
xchg
adc
pop
and
cmp
inc
add
add
idiv
(bad)
jmp
cmp
add
add
adc
adc
pop
and
add
movlps
sbb
add
add
cmp
add
or
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
cmp
or
mov
inc
add
add
idiv
(bad)
call
or
rol
add
cmp
(bad)
(bad)
inc
jnp
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
or
test
add
pop
adc
xchg
adc
or
fwait
add
add
add
cmp
add
or
pop
cmp
add
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
and
jle
add
and
inc
add
add
idiv
(bad)
jmp
adc
pop
adc
pop
pop
pop
bound
adc
fwait
std
(bad)
jmp
pop
or
dec
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
xor
inc
add
add
idiv
(bad)
jmp
cmp
cld
(bad)
inc
jnp
add
add
or
push
and
sbb
or
popf
cmp
(bad)
call
and
adc
adc
add
add
add
add
(bad)
call
add
std
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
add
add
cld
(bad)
push
cld
(bad)
call
cld
(bad)
push
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
add
add
std
(bad)
(bad)
mov
std
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
jmp
(bad)
call
std
(bad)
call
(bad)
dec
add
add
sti
(bad)
call
std
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
cld
(bad)
call
(bad)
(bad)
jmp
sbb
pop
(bad)
(bad)
call
add
adc
xchg
pop
adc
or
pop
pop
bound
add
sbb
aas
(bad)
(bad)
dec
pop
pop
or
add
cld
add
push
and
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sbb
sbb
(bad)
call
adc
add
or
or
sbb
or
(bad)
call
or
or
(bad)
(bad)
call
push
pop
(bad)
iret
std
(bad)
call
idiv
(bad)
inc
adc
push
and
add
add
add
adc
pop
adc
int
(bad)
call
or
or
inc
add
add
idiv
(bad)
call
adc
sbb
mov
(bad)
jmp
add
xor
sbb
add
sub
add
push
push
sub
add
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
pop
maxps
add
add
inc
add
add
idiv
(bad)
inc
pop
pop
maxps
add
push
pop
adc
sbb
add
pop
pop
maxps
add
add
add
add
idiv
(bad)
call
or
add
adc
push
and
out
add
add
jnp
add
add
xchg
or
cmp
add
add
jnp
add
add
push
pop
or
xchg
or
mov
pop
adc
enter
add
sub
es
add
add
inc
add
add
idiv
(bad)
call
cmp
pop
pop
maxps
add
push
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
pop
push
push
cmp
inc
add
add
idiv
(bad)
jmp
add
or
add
push
and
aas
aad
add
pop
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
push
pop
or
xchg
or
or
inc
pop
sbb
pop
sbb
or
or
sub
add
add
(bad)
(bad)
jmp
pop
pop
maxps
sbb
add
test
add
and
adc
pop
add
push
and
(bad)
(bad)
call
adc
adc
inc
adc
add
add
add
pop
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
add
add
movntps
sbb
add
add
(bad)
(bad)
call
sub
pop
sub
sbb
adc
add
push
and
cmp
(bad)
inc
jnp
add
add
xchg
and
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
pop
pop
maxps
add
push
pop
or
push
(bad)
(bad)
inc
sbb
adc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
outs
pop
add
push
and
adc
or
or
add
add
add
sub
es
add
outs
pop
add
push
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
mov
add
sub
adc
or
cmps
add
add
add
adc
add
push
sub
es
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
sub
pop
adc
add
es
add
or
add
sub
add
sub
add
and
add
add
xchg
add
push
sbb
add
and
or
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
test
sbb
fstp
sub
es
add
xchg
add
push
sbb
sbb
ret
adc
or
add
add
sub
es
pop
or
mov
add
add
jge
add
add
sbb
mov
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
das
add
add
add
outs
add
add
add
add
add
add
adc
popa
add
add
or
add
push
and
sub
cmp
add
sbb
add
add
idiv
(bad)
jmp
cmp
add
add
add
sub
es
add
add
jnp
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
add
add
pop
jge
add
add
or
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
pop
adc
data16
add
cmp
add
add
pop
jge
add
add
cmp
add
add
sbb
mov
add
sbb
pop
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
jge
add
add
sbb
add
add
sub
cmp
inc
add
add
idiv
(bad)
jmp
add
add
add
cmp
add
add
add
(bad)
(bad)
call
push
cmp
add
jle
add
add
jnp
add
add
or
(bad)
(bad)
(bad)
jmp
pop
and
push
add
add
jnp
add
add
add
adc
pop
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
add
jnp
add
add
imul
push
push
rcr
add
pop
jge
add
add
and
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
jnp
add
add
jge
add
add
and
loop
add
add
sub
cmp
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
adc
mov
push
cmp
add
add
add
(bad)
(bad)
call
(bad)
add
add
add
add
add
jnp
add
jge
add
add
jle
add
add
pop
add
add
push
pop
cmp
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
or
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
sbb
add
add
and
add
jnp
add
add
jnp
add
add
jo
inc
add
add
idiv
(bad)
call
sbb
cli
add
add
add
sub
es
add
add
jnp
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
adc
pop
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
sbb
mov
add
pop
or
popf
add
add
sub
jnp
add
add
sub
es
cmp
add
inc
add
add
idiv
(bad)
call
sbb
mov
add
and
add
sbb
add
(bad)
(bad)
jmp
add
jnp
add
add
add
add
and
add
sbb
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
sbb
add
push
and
add
sbb
mov
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
push
cmp
add
add
inc
add
add
idiv
(bad)
call
adc
add
sub
pop
adc
cli
cld
(bad)
call
add
(bad)
(bad)
call
or
add
push
jge
add
add
or
cmp
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
sub
add
(bad)
(bad)
call
sub
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
mov
add
sub
add
sub
or
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
sbb
push
and
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
movs
(bad)
(bad)
inc
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
pop
push
sub
sub
sbb
add
push
cmp
cld
(bad)
call
or
or
or
add
add
cld
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
jmp
(bad)
call
cli
(bad)
call
(bad)
jmp
(bad)
(bad)
push
(bad)
inc
add
add
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
fdivr
(bad)
push
add
add
sti
(bad)
(bad)
mov
(bad)
(bad)
call
add
out
cld
(bad)
inc
sti
(bad)
inc
std
(bad)
jmp
sti
(bad)
call
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
sti
(bad)
dec
sti
(bad)
inc
sti
(bad)
jmp
(bad)
call
add
push
cmp
(bad)
inc
pop
adc
add
add
and
add
and
inc
(bad)
(bad)
call
sub
and
add
pop
jge
add
add
cmp
(bad)
(bad)
call
sub
or
mov
add
or
add
add
jnp
add
add
pop
or
adc
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
add
xor
add
add
push
add
add
add
add
add
and
pop
add
add
push
push
add
add
add
jae
add
push
jae
add
push
sub
add
adc
or
add
add
push
add
add
add
add
add
and
pop
add
add
jnp
add
add
push
add
add
add
nop
add
push
push
jae
add
push
sub
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
outs
pop
add
push
and
adc
or
or
add
add
add
sub
es
add
outs
pop
add
push
sub
xor
add
add
add
add
add
add
push
add
outs
jge
add
and
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
lds
add
sub
add
sub
es
sub
es
sbb
adc
jae
add
push
jge
add
add
and
or
inc
pop
add
add
add
and
add
iret
(bad)
(bad)
inc
add
add
add
iret
(bad)
(bad)
dec
pop
es
sub
es
add
add
(bad)
(bad)
call
sub
add
es
jnp
add
add
into
add
push
jge
add
add
sub
es
add
add
(bad)
(bad)
jmp
add
push
add
or
sub
es
add
add
(bad)
(bad)
jmp
sbb
cdq
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
adc
add
add
cmp
(bad)
jmp
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
xor
add
add
add
add
sub
es
add
add
or
jge
add
add
adc
or
xor
add
add
add
sub
es
add
add
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
fwait
add
push
and
add
add
xor
add
add
add
add
add
add
push
add
add
add
pushf
add
push
and
adc
or
adc
add
add
add
sub
es
add
add
add
sub
add
add
xor
push
add
sub
add
sub
es
pop
push
cmp
add
add
pop
push
jge
add
add
adc
out
add
cmp
add
add
jnp
add
add
sbb
sbb
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
cmp
inc
add
add
idiv
(bad)
jmp
adc
or
add
add
cmp
sbb
add
add
idiv
(bad)
inc
pop
adc
add
add
cmps
sbb
test
add
pop
or
cmp
add
add
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
or
pop
add
add
jnp
add
add
mov
(bad)
add
add
pop
pop
sub
jnp
add
add
adc
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
add
add
add
out
add
and
pop
adc
cmp
add
add
or
sbb
push
add
add
and
add
push
jge
add
add
or
clc
add
add
or
pop
cmp
add
inc
add
add
idiv
(bad)
jmp
call
cdq
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
rol
add
or
cmp
jnp
add
add
push
pop
sub
es
add
add
repz
(bad)
inc
jnp
add
add
pop
or
mov
adc
cdq
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
sub
add
add
(bad)
(bad)
jmp
add
cld
add
push
and
sub
jnp
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
sub
cmp
(bad)
call
add
(bad)
(bad)
jmp
xchg
pop
push
adc
add
add
(bad)
jmp
(bad)
(bad)
jmp
std
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
or
sub
add
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
dec
pop
pop
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
sub
es
add
outs
(bad)
add
push
sub
xor
adc
add
add
add
sub
es
add
add
outs
jmp
adc
or
sldt
add
add
add
add
push
add
add
aad
add
and
xor
add
add
add
add
push
add
add
call
add
add
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
loop
add
xor
add
sub
es
sub
es
pop
movhps
jge
add
sbb
add
add
idiv
(bad)
call
sub
add
es
or
or
pusha
add
add
pop
push
aas
sub
add
sbb
add
(bad)
(bad)
call
adc
add
and
add
add
cmp
add
sbb
add
(bad)
(bad)
call
push
sub
add
push
and
add
push
cmp
inc
add
add
idiv
(bad)
jmp
push
and
add
add
out
add
sbb
add
(bad)
(bad)
call
sub
es
add
add
inc
add
add
idiv
(bad)
jmp
push
or
adc
fadd
add
pop
adc
add
es
add
or
add
sub
add
pop
cmp
add
add
idiv
(bad)
jmp
cmp
add
add
add
pop
xor
pop
push
bound
mov
add
and
xchg
add
add
push
sub
add
push
and
add
or
jge
add
sub
js
add
and
add
add
pop
sbb
add
and
sub
push
add
add
or
add
and
add
sub
add
add
add
add
and
add
add
add
xor
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
movs
add
push
and
add
add
ud2
pop
inc
push
add
add
(bad)
call
(bad)
(bad)
call
add
imul
inc
add
inc
add
add
(bad)
(bad)
push
add
outs
add
add
(bad)
(bad)
inc
(bad)
call
inc
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
jmp
add
add
add
add
adc
lahf
jle
add
add
sbb
push
sub
add
push
and
add
add
mov
add
sub
add
or
outs
(bad)
(bad)
(bad)
jle
add
add
and
or
(bad)
jle
add
add
and
pushf
push
and
cdq
(bad)
(bad)
call
add
(bad)
(bad)
call
adc
xor
(bad)
(bad)
cmp
std
(bad)
(bad)
jle
add
add
push
pop
or
mov
add
and
(bad)
(bad)
jmp
sbb
cmp
(bad)
(bad)
call
idiv
(bad)
jmp
cmp
js
add
pop
test
pop
push
bound
mov
add
and
add
add
and
pushf
sub
sub
es
add
add
(bad)
(bad)
jmp
pop
adc
mov
jns
add
and
pushf
push
cmp
add
xor
add
add
adc
add
push
sub
es
sbb
add
add
adc
sbb
push
jge
add
add
push
cmp
add
add
idiv
(bad)
call
sub
add
es
and
add
add
add
add
pop
(bad)
mov
jno
add
push
sub
sbb
add
add
idiv
(bad)
jmp
add
add
add
or
add
and
add
pop
sub
add
add
(bad)
(bad)
jmp
add
jge
add
add
scas
sbb
scas
add
push
and
inc
add
add
idiv
(bad)
jmp
add
pop
push
pop
pop
(bad)
mov
jb
add
pop
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
sub
es
sbb
add
add
idiv
(bad)
jmp
add
add
add
add
add
and
add
or
test
sub
add
or
sub
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
xchg
add
xor
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
outs
add
add
sbb
maxps
outs
add
add
push
arpl
maxps
outs
add
add
pop
or
xchg
pusha
push
add
add
add
add
add
add
push
add
jge
add
add
push
jge
add
add
add
xor
add
add
add
add
adc
add
push
sbb
mov
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
das
inc
sbb
add
add
(bad)
(bad)
call
arpl
or
add
scas
add
push
and
inc
add
add
idiv
(bad)
jmp
add
inc
add
xor
inc
add
add
idiv
(bad)
call
sub
sub
sub
or
inc
or
add
sar
(bad)
call
(bad)
(bad)
inc
add
add
add
add
add
add
popf
es
sub
and
and
add
add
push
sub
es
sbb
add
add
(bad)
(bad)
jmp
push
pop
sub
add
add
(bad)
(bad)
jmp
push
add
add
adc
or
add
add
sub
es
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
sub
push
sbb
pop
sub
pop
inc
add
add
idiv
(bad)
call
or
pop
arpl
or
add
and
or
inc
pop
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
shl
sub
push
or
sub
push
add
add
add
xor
mov
add
adc
add
push
push
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jnp
add
add
mov
add
push
sub
pop
pop
or
sub
add
cmp
add
sbb
add
add
(bad)
(bad)
call
or
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
add
mov
add
sbb
jb
add
jnp
add
add
mov
add
pop
or
inc
add
add
idiv
(bad)
jmp
push
or
inc
push
or
inc
push
add
add
(bad)
(bad)
call
add
add
add
add
add
jno
add
pusha
add
add
(bad)
jmp
(bad)
jmp
add
add
movs
add
add
pop
or
sub
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
jg
add
pop
sbb
mov
add
add
add
add
sbb
outs
call
mov
add
and
add
and
inc
add
add
idiv
(bad)
jmp
pop
or
arpl
(bad)
inc
jnp
add
add
rol
push
sbb
push
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jg
add
add
add
pop
sbb
mov
add
sbb
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jge
add
outs
add
add
xchg
xchg
sbb
mov
add
pop
or
out
(bad)
(bad)
inc
jnp
add
add
rol
push
sbb
(bad)
(bad)
jmp
add
xor
add
add
push
pop
or
ja
add
push
or
sub
es
add
add
(bad)
(bad)
call
sub
add
es
sub
es
add
add
add
add
add
sub
adc
scas
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
cmp
or
push
adc
inc
adc
add
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
add
(bad)
dec
add
add
dec
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
adc
adc
or
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
push
cmp
(bad)
call
add
fild
add
pop
inc
add
add
idiv
(bad)
call
push
(bad)
(bad)
inc
jnp
add
add
sub
and
sbb
add
adc
cmp
(bad)
(bad)
call
add
(bad)
(bad)
jmp
sub
jnp
add
add
xchg
and
add
add
add
add
add
xchg
or
sub
es
(bad)
(bad)
call
idiv
(bad)
jmp
or
pop
sbb
add
add
(bad)
(bad)
call
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
jnp
add
add
sub
pop
pop
or
add
add
add
xchg
sbb
add
add
idiv
(bad)
call
push
cmp
add
add
idiv
(bad)
jmp
add
add
add
add
push
pop
or
test
(bad)
inc
or
cmps
add
push
and
fbld
sbb
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
xor
sbb
add
add
(bad)
(bad)
call
sub
es
add
add
(bad)
(bad)
jmp
sbb
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
add
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
jmp
add
xor
repnz
add
add
adc
add
push
sbb
add
jnp
add
add
add
outs
in
add
sbb
pop
add
add
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
pop
sbb
mov
add
sbb
sub
add
add
(bad)
(bad)
jmp
add
add
add
sub
add
push
sub
add
add
add
data16
cwde
sbb
add
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
add
add
add
add
(bad)
jge
(bad)
call
add
sbb
mov
add
and
inc
add
add
idiv
(bad)
jmp
add
movs
add
push
push
sub
add
mov
add
sub
sub
es
add
add
(bad)
(bad)
jmp
pop
push
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
xor
add
add
push
sbb
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jl
add
add
add
(bad)
add
add
pop
push
add
cmp
jnp
add
add
pop
adc
mov
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
cmp
add
cmp
add
add
add
add
add
jl
add
add
add
add
adc
pop
or
add
sbb
add
add
(bad)
(bad)
jmp
add
aas
stos
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
pop
or
pop
add
add
cmp
add
or
jnp
add
add
jl
add
add
jle
add
add
add
pop
pop
or
add
add
jnp
add
add
jnp
add
add
les
add
push
sub
es
sbb
add
add
(bad)
(bad)
jmp
pop
movaps
es
add
add
inc
add
add
idiv
(bad)
jmp
add
test
sbb
lods
add
add
add
pop
adc
push
cmp
add
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
pop
cmp
jnp
add
add
mov
jnp
add
add
mov
push
cmp
add
add
arpl
add
add
add
(bad)
(bad)
call
or
dec
add
add
push
push
sbb
add
add
add
mov
es
add
add
add
mov
es
add
add
add
mov
es
add
add
add
or
sbb
cmp
inc
add
add
idiv
(bad)
jmp
or
aas
mov
inc
add
add
idiv
(bad)
call
or
jmp
add
add
push
sbb
fld
add
or
sbb
cmp
add
add
idiv
(bad)
jmp
add
movs
add
push
pop
sbb
add
push
sub
sub
cmp
inc
add
add
idiv
(bad)
jmp
pop
pop
pop
or
adc
add
or
inc
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
mov
add
add
add
add
js
add
jns
add
mov
jnp
add
add
jp
add
jnp
add
mov
sub
pop
push
cmp
sbb
add
(bad)
(bad)
call
adc
sub
sbb
add
add
(bad)
(bad)
jmp
push
adc
call
adc
adc
inc
push
add
add
std
(bad)
(bad)
std
std
(bad)
push
(bad)
(bad)
inc
add
add
cld
(bad)
(bad)
jge
add
int3
(bad)
(bad)
dec
std
(bad)
push
add
add
add
add
(bad)
(bad)
jmp
std
(bad)
jmp
add
ss
(bad)
push
(bad)
(bad)
jmp
(bad)
call
(bad)
jmp
add
add
(bad)
dec
(bad)
(bad)
(bad)
jmp
call
std
(bad)
(bad)
mov
std
(bad)
inc
add
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
mov
jnp
add
add
mov
or
pop
(bad)
(bad)
call
adc
sbb
push
(bad)
(bad)
inc
sub
sub
cmp
(bad)
(bad)
call
or
adc
cmp
(bad)
(bad)
inc
jnp
add
add
jge
add
outs
add
add
xchg
xchg
push
ds
call
inc
add
add
idiv
(bad)
inc
pop
pop
or
adc
push
(bad)
(bad)
jmp
add
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
add
push
sbb
(bad)
(bad)
call
add
push
add
add
mov
inc
add
add
idiv
(bad)
call
adc
ret
jmp
adc
or
adc
add
add
add
push
add
add
add
add
add
add
inc
sub
add
adc
or
mov
add
xor
add
sub
es
push
cmp
add
jnp
add
add
jl
add
(bad)
add
add
pop
push
add
sub
jnp
add
add
jnp
add
add
popf
push
sub
es
pop
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
push
or
inc
push
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
dec
add
add
(bad)
(bad)
(bad)
jmp
sbb
fiadd
sub
sub
add
adc
or
mov
add
das
add
adc
add
push
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
leave
add
add
and
add
and
sbb
jge
add
add
cmp
and
add
sbb
pop
pop
jge
add
add
or
mov
add
and
add
sbb
add
add
idiv
(bad)
(bad)
cmp
add
pop
sbb
sub
add
sbb
add
add
(bad)
(bad)
jmp
mov
add
pop
pop
sub
or
jnp
add
add
jl
add
(bad)
add
add
pop
push
add
sub
add
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
sbb
stos
sbb
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
add
data16
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
pusha
(bad)
(bad)
(bad)
cmp
add
mov
(bad)
call
(bad)
dec
add
add
add
jnp
add
sbb
les
jnp
add
add
jl
add
(bad)
add
add
pop
push
add
or
scas
add
push
and
inc
add
add
idiv
(bad)
jmp
add
pop
sub
or
or
jl
(bad)
inc
and
add
add
or
(bad)
call
idiv
(bad)
call
cmp
(bad)
inc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
inc
sub
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
sub
add
adc
or
push
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
push
add
add
call
add
add
xor
add
add
add
add
sub
es
add
outs
lds
add
sub
xor
add
add
add
add
sub
es
add
outs
mov
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
in
add
sub
xor
add
add
add
add
add
add
push
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
outs
les
add
sub
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
mov
add
add
xor
add
add
add
add
adc
add
push
sub
es
sbb
enter
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
inc
sbb
push
inc
or
add
push
add
add
add
inc
add
add
add
retf
(bad)
cmp
add
add
add
adc
add
add
add
add
es
add
add
sub
add
or
add
and
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
mov
push
push
sub
add
add
jge
(bad)
jmp
sbb
xchg
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
sub
add
push
and
(bad)
call
idiv
(bad)
jmp
sub
adc
or
sub
add
add
add
sub
es
add
add
add
jo
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
push
sub
adc
or
adc
add
add
add
sub
es
add
jge
add
add
add
jge
add
add
xor
add
add
adc
add
push
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
add
sbb
add
(bad)
(bad)
jmp
push
adc
pop
(bad)
add
add
pop
adc
add
pop
pop
pop
bound
dec
add
add
sub
jnp
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
sbb
jnp
add
add
in
add
pop
inc
add
add
idiv
(bad)
call
movntps
movs
add
add
or
sahf
pop
or
mov
sub
add
add
(bad)
(bad)
jmp
push
or
add
or
inc
adc
add
jg
add
lea
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
ja
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
jg
add
cmp
(bad)
(bad)
mov
sub
add
push
adc
pop
xchg
sub
add
push
and
sub
or
add
idiv
(bad)
call
lea
pop
pop
or
pop
pop
or
add
add
add
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
(bad)
inc
jnp
add
add
xchg
adc
or
inc
(bad)
(bad)
call
or
cmp
(bad)
inc
jnp
add
add
add
or
call
and
(bad)
inc
add
add
add
or
add
and
add
push
and
add
or
or
add
(bad)
jmp
add
adc
push
add
add
add
adc
add
push
pop
adc
inc
add
add
push
add
add
sbb
add
adc
add
inc
add
add
idiv
(bad)
call
sub
add
sbb
adc
add
adc
cmp
add
sbb
add
add
idiv
(bad)
call
and
enter
and
add
sbb
add
(bad)
(bad)
jmp
add
adc
add
and
or
pop
pop
sbb
sub
add
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
pop
or
mov
add
adc
add
push
sbb
movs
add
add
jnp
add
add
adc
adc
rcr
or
adc
mov
add
or
add
add
(bad)
(bad)
call
pop
cmp
add
sub
jnp
add
add
pop
adc
pop
or
arpl
add
add
add
add
pop
pop
pop
(bad)
add
add
pop
or
cmp
add
add
add
add
jnp
add
add
pop
(bad)
add
add
pop
or
pop
adc
pop
push
cmp
add
or
jnp
add
add
je
inc
add
add
idiv
(bad)
call
sbb
cli
add
add
or
or
add
or
rol
add
inc
add
add
idiv
(bad)
call
or
fadd
add
adc
add
add
add
inc
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
pop
sbb
mov
add
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
push
cmp
add
add
sahf
pop
adc
xchg
add
or
pop
or
add
add
or
pop
adc
pop
sbb
outs
add
add
jnp
add
add
or
pop
and
lock
add
add
idiv
(bad)
inc
jnp
add
add
or
and
add
pop
or
add
pop
pop
and
add
add
add
pop
or
cmp
pop
pop
adc
add
push
sub
adc
add
pop
pop
push
sahf
pop
or
add
jnp
add
add
jnp
add
add
pop
(bad)
add
add
pop
or
int3
add
add
add
add
add
or
add
and
add
push
and
add
(bad)
add
add
jnp
add
add
or
mov
(bad)
inc
jnp
add
add
or
pop
xchg
adc
pop
push
cmp
pop
pop
or
add
sbb
add
add
adc
adc
and
or
mov
sub
add
add
(bad)
(bad)
jmp
add
or
pop
xchg
adc
add
inc
add
add
idiv
(bad)
call
adc
cmp
jnp
add
add
sbb
add
adc
and
and
add
adc
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
call
adc
push
adc
inc
and
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
jns
(bad)
push
std
(bad)
call
cld
(bad)
call
(bad)
(bad)
call
std
(bad)
inc
(bad)
(bad)
(bad)
jns
(bad)
push
add
add
cld
(bad)
call
(bad)
inc
add
add
std
(bad)
call
add
iret
cld
(bad)
inc
std
(bad)
jmp
(bad)
(bad)
call
add
(bad)
jmp
add
pop
cld
(bad)
(bad)
jmp
inc
std
(bad)
dec
(bad)
(bad)
(bad)
(bad)
cld
(bad)
call
(bad)
(bad)
jnp
add
pop
or
ins
(bad)
(bad)
jmp
adc
add
or
xchg
pop
adc
cmp
(bad)
call
or
xor
sbb
add
add
idiv
(bad)
call
sbb
call
or
jnp
add
add
pop
aas
(bad)
(bad)
call
inc
add
add
idiv
(bad)
dec
push
cmp
sbb
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
sbb
or
(bad)
(bad)
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
jmp
adc
or
add
add
adc
add
push
sbb
dec
add
add
add
adc
pop
adc
push
sub
add
push
and
add
sbb
add
add
idiv
(bad)
call
sub
add
cmp
add
add
adc
pop
adc
pop
sub
mov
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
sub
or
or
cs
add
add
or
adc
pop
pop
pop
adc
pop
das
cmp
add
add
adc
jbe
add
sbb
add
add
(bad)
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
sbb
add
add
(bad)
(bad)
call
push
cmp
adc
pop
sub
xchg
add
add
or
add
sbb
add
(bad)
(bad)
call
pop
cmp
add
adc
pop
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
inc
add
add
idiv
(bad)
call
cmp
add
pop
adc
cmp
add
pop
pop
or
add
add
inc
add
add
idiv
(bad)
call
adc
cmp
add
add
idiv
(bad)
jmp
adc
adc
push
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
jmp
pop
adc
adc
sahf
pop
and
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
inc
add
add
idiv
(bad)
inc
adc
adc
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
adc
add
push
push
xor
sbb
add
add
(bad)
(bad)
call
(bad)
add
add
adc
add
add
or
pop
add
add
add
retf
add
push
and
add
sbb
pop
add
add
cmp
jnp
add
add
add
adc
std
(bad)
call
inc
add
add
idiv
(bad)
dec
and
push
sbb
push
and
add
sbb
add
(bad)
(bad)
jmp
adc
xor
sbb
add
(bad)
(bad)
call
adc
add
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
sbb
add
(bad)
(bad)
call
or
loop
add
cmp
add
add
adc
pop
adc
xchg
sahf
pop
and
cmp
add
add
inc
add
add
idiv
(bad)
jmp
pop
or
pop
and
pop
sub
add
sbb
add
add
(bad)
(bad)
jmp
adc
sbb
adc
setle
and
cmp
inc
add
add
idiv
(bad)
jmp
adc
adc
xchg
adc
cmp
adc
pop
adc
xchg
sahf
pop
sbb
outs
add
add
adc
adc
adc
pop
pop
pop
adc
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
sub
or
xor
add
idiv
(bad)
call
sub
or
and
or
sbb
add
(bad)
(bad)
call
adc
mov
sub
add
add
(bad)
(bad)
jmp
push
adc
cmp
adc
adc
inc
xor
add
test
(bad)
(bad)
cmp
add
lods
std
(bad)
call
add
add
add
add
add
add
add
add
sti
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
add
add
add
add
(bad)
dec
std
(bad)
call
add
add
(bad)
(bad)
jmp
sti
(bad)
call
add
add
std
(bad)
inc
cld
(bad)
call
std
(bad)
dec
add
das
add
add
(bad)
push
add
add
(bad)
inc
add
add
cld
(bad)
jmp
(bad)
(bad)
jmp
add
adc
(bad)
(bad)
frndint
(bad)
call
add
add
add
mov
add
jle
add
push
(bad)
(bad)
call
add
add
(bad)
jmp
(bad)
jmp
daa
cmp
(bad)
inc
adc
pop
adc
xchg
sahf
pop
sbb
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
dec
pop
cmp
sbb
add
add
(bad)
(bad)
call
sub
out
(bad)
(bad)
cmp
(bad)
inc
adc
pop
adc
xchg
sahf
pop
adc
cmp
(bad)
(bad)
call
idiv
(bad)
jmp
sbb
pop
sbb
add
adc
pop
or
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
and
cdq
cld
(bad)
call
inc
add
add
idiv
(bad)
call
and
enter
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
xor
imul
call
or
pop
sub
adc
pop
cmp
(bad)
call
or
or
add
push
xchg
push
bound
sub
cmp
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
or
add
sbb
add
(bad)
(bad)
call
or
adc
(bad)
inc
jnp
add
add
or
add
and
and
cli
std
(bad)
inc
push
xchg
adc
pop
xor
out
std
(bad)
call
or
sete
inc
add
pop
adc
adc
and
add
add
int3
add
push
and
or
adc
or
sete
or
adc
pop
adc
adc
sahf
pop
sbb
cmp
inc
add
add
idiv
(bad)
jmp
or
or
fwait
std
(bad)
call
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
pop
adc
pop
and
outs
std
(bad)
call
or
pop
xor
(bad)
std
(bad)
inc
push
xchg
adc
pop
cmp
(bad)
inc
adc
adc
sahf
sbb
dec
std
(bad)
call
adc
aas
clc
cli
(bad)
call
inc
add
add
idiv
(bad)
call
or
mov
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
adc
cmp
(bad)
(bad)
call
adc
pop
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
cld
cld
(bad)
call
adc
pop
sbb
repnz
(bad)
call
or
or
sub
add
push
and
(bad)
call
idiv
(bad)
(bad)
cmp
cld
(bad)
(bad)
cmp
(bad)
inc
adc
or
adc
adc
sbb
or
sahf
pop
push
cmp
adc
sub
add
push
pop
xor
cmp
inc
add
add
idiv
(bad)
jmp
push
or
sbb
xchg
(bad)
jmp
add
adc
or
leave
add
add
add
adc
add
push
pop
cmp
add
pop
add
add
add
or
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
or
shl
sbb
aaa
push
or
sub
push
or
mov
sub
add
add
(bad)
(bad)
jmp
sub
add
add
xchg
add
add
add
xchg
pop
pop
or
sub
or
inc
or
add
sar
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
push
add
add
mov
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
enter
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
adc
or
clc
add
add
add
push
pop
adc
enter
and
inc
add
add
idiv
(bad)
call
sub
add
sub
cmp
add
pop
adc
pop
pop
and
add
add
inc
add
add
idiv
(bad)
call
adc
pop
pop
adc
aam
adc
push
adc
inc
pop
add
add
add
xchg
(bad)
(bad)
call
add
xor
add
add
add
sbb
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
pop
adc
fwait
push
or
sub
jg
add
adc
inc
add
add
idiv
(bad)
call
or
dec
pop
cmp
add
add
inc
add
add
idiv
(bad)
call
adc
arpl
(bad)
call
or
movaps
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
add
idiv
(bad)
jmp
mov
add
or
or
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
add
add
add
pop
push
add
cmp
(bad)
(bad)
call
adc
mov
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
or
xlat
(bad)
(bad)
call
add
(bad)
(bad)
dec
adc
add
add
idiv
(bad)
call
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
or
jnp
add
add
add
cmp
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
cmp
jnp
add
add
adc
and
add
pop
push
add
adc
pusha
(bad)
(bad)
(bad)
cmp
add
add
pop
or
pop
inc
add
add
idiv
(bad)
call
adc
inc
(bad)
(bad)
(bad)
cmp
or
jnp
add
add
add
adc
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
adc
and
add
pop
push
add
or
idiv
(bad)
inc
jnp
add
add
(bad)
add
add
push
add
add
inc
or
js
(bad)
call
add
(bad)
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
add
add
adc
and
add
pop
push
add
add
jnp
add
add
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
push
cmp
(bad)
call
ins
std
(bad)
(bad)
cmp
or
or
pop
std
(bad)
jmp
adc
or
cmp
add
sub
add
push
pop
or
fiadd
add
cmp
add
add
adc
int
add
sbb
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
pop
cmp
jnp
add
add
jo
add
pop
or
sub
add
push
push
cmp
pop
add
sub
add
push
or
xor
pop
inc
add
add
idiv
(bad)
jmp
adc
cmp
add
add
inc
add
add
idiv
(bad)
call
adc
bound
add
jnp
add
add
mov
add
sbb
add
add
idiv
(bad)
call
sbb
mov
sub
add
add
(bad)
(bad)
jmp
add
add
add
add
adc
add
pop
or
pop
and
add
add
idiv
(bad)
(bad)
cmp
add
add
or
push
adc
inc
sbb
add
xor
add
out
add
add
(bad)
jmp
(bad)
jmp
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
dec
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
int
add
pop
adc
test
pop
adc
int
add
pop
adc
enter
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
cmp
(bad)
(bad)
dec
pop
or
sbb
add
add
(bad)
(bad)
call
push
cmp
(bad)
call
or
mov
or
or
cmp
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
pop
adc
sbb
add
pop
adc
adc
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
jnp
add
add
xchg
add
add
inc
add
add
idiv
(bad)
dec
add
add
add
add
les
inc
add
add
idiv
(bad)
call
sbb
aam
(bad)
call
adc
push
(bad)
call
or
enter
and
add
and
(bad)
call
add
(bad)
(bad)
jmp
pop
or
movs
(bad)
(bad)
dec
adc
add
add
idiv
(bad)
call
movhps
mov
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
add
push
and
(bad)
call
add
(bad)
(bad)
(bad)
cmp
dec
pop
cmp
std
(bad)
call
idiv
(bad)
call
cmp
(bad)
call
inc
(bad)
(bad)
jmp
mov
add
or
or
aaa
(bad)
(bad)
inc
jnp
add
add
jo
add
sbb
sub
add
push
pop
push
pop
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
add
jo
add
sbb
outs
call
push
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
push
push
or
adc
push
and
(bad)
call
add
(bad)
(bad)
jmp
adc
call
inc
add
add
idiv
(bad)
call
pop
cmp
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
call
add
add
xor
add
add
add
add
add
add
push
add
sub
sub
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
ins
add
or
xor
add
add
add
add
sub
es
add
outs
mov
adc
or
or
add
xor
add
sub
es
sub
es
sbb
mov
add
add
pop
and
add
jge
add
add
or
pushf
add
add
and
add
sub
add
push
and
add
cmp
jae
add
push
jge
add
add
cmp
add
add
fadd
add
sub
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
add
add
add
push
and
add
sub
add
jge
add
add
sub
add
add
add
sub
add
push
and
add
xor
or
inc
or
add
dec
(bad)
(bad)
push
(bad)
(bad)
push
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
xor
(bad)
jmp
sbb
fld
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
xor
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
add
adc
or
iret
add
add
add
adc
add
push
sbb
fld
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
sbb
adc
jnp
add
add
add
add
add
popf
sub
or
inc
pop
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
add
pop
sub
add
jge
add
add
sub
push
and
inc
add
add
xor
add
add
adc
add
push
sbb
fld
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
add
inc
add
add
idiv
(bad)
call
push
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
add
add
lea
add
and
add
sub
add
push
pop
or
mov
or
or
push
and
add
sbb
add
(bad)
(bad)
jmp
or
pop
or
cmp
add
sub
jnp
add
add
xchg
and
inc
add
add
add
add
pop
and
add
das
or
add
idiv
(bad)
call
sub
pop
and
add
pop
push
inc
add
add
add
xchg
add
and
add
add
mov
add
sub
and
add
xor
add
idiv
(bad)
(bad)
cmp
add
add
adc
add
sldt
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
cli
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
inc
add
inc
(bad)
(bad)
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
or
add
popf
cmp
(bad)
(bad)
jmp
push
cmp
(bad)
inc
pop
pop
or
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
inc
and
add
add
mov
add
cmp
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
xchg
and
inc
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
sbb
adc
(bad)
call
or
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
sub
add
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
es
sub
jnp
add
add
jnp
add
add
ret
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
aas
imul
add
add
idiv
(bad)
inc
sub
add
push
pop
or
rol
add
pop
sub
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
push
cmp
or
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
push
add
add
sub
add
add
add
cli
inc
add
mov
inc
add
add
idiv
(bad)
call
or
mov
add
add
add
add
add
add
add
add
add
or
or
test
and
add
pop
jge
add
add
cmp
(bad)
inc
and
add
pop
jge
add
add
fsub
sbb
pop
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
inc
(bad)
(bad)
inc
add
add
add
jnp
add
add
ds
(bad)
(bad)
call
idiv
(bad)
call
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
or
push
(bad)
(bad)
inc
jnp
add
add
push
add
add
(bad)
(bad)
call
add
(bad)
(bad)
call
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
adc
or
inc
add
add
adc
add
push
pop
adc
add
sbb
add
(bad)
(bad)
call
sub
add
es
add
add
pop
pop
and
lea
add
add
pop
and
out
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
lds
add
sbb
add
add
(bad)
(bad)
call
pop
cmp
add
or
add
add
add
jnp
add
add
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
pop
push
sub
add
push
and
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
pop
pop
and
lea
add
add
pop
and
dec
add
add
inc
add
add
idiv
(bad)
call
add
jnp
add
add
pop
pop
and
lea
add
add
pop
and
and
add
sbb
add
add
(bad)
(bad)
call
cmp
add
add
jnp
add
add
pop
or
fiadd
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
add
add
add
adc
pop
xchg
adc
inc
mov
inc
add
add
idiv
(bad)
call
push
cmp
sbb
add
or
ja
add
add
add
add
sub
add
push
and
cmp
add
add
add
add
add
add
pop
pop
pop
adc
pop
or
dec
add
add
pop
pop
and
inc
add
add
idiv
(bad)
inc
adc
add
add
add
fld
add
and
add
pop
cmp
jnp
add
add
cli
jle
add
sub
add
push
and
adc
add
add
add
add
add
add
or
adc
in
add
add
add
add
add
add
add
pop
push
cmp
add
add
add
(bad)
jg
add
and
inc
add
dec
add
adc
xor
add
idiv
(bad)
call
or
scas
add
add
jnp
add
add
pop
pop
and
lea
add
add
pop
and
fiadd
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
mov
add
sbb
add
add
idiv
(bad)
call
or
inc
add
add
idiv
(bad)
jmp
add
add
add
xchg
add
add
add
xchg
inc
pusha
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
adc
inc
and
add
cs
(bad)
inc
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
(bad)
call
std
(bad)
(bad)
add
add
(bad)
(bad)
call
(bad)
inc
add
add
std
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
xor
add
sbb
(bad)
call
std
(bad)
dec
add
push
add
add
std
(bad)
call
add
mov
add
pop
sbb
jmp
add
add
pop
sbb
addr16
(bad)
call
push
push
aas
stc
add
add
inc
add
add
idiv
(bad)
call
(bad)
(bad)
(bad)
inc
jnp
add
add
add
cmp
sbb
pop
adc
xor
(bad)
inc
jnp
add
add
cmp
(bad)
jmp
pop
adc
push
(bad)
(bad)
inc
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
xor
(bad)
call
inc
add
add
idiv
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
push
sbb
push
cmp
(bad)
(bad)
dec
adc
aas
retf
cld
(bad)
call
inc
add
add
idiv
(bad)
dec
adc
call
inc
add
add
idiv
(bad)
inc
add
add
add
sbb
xchg
(bad)
(bad)
dec
add
add
add
adc
adc
pop
cmp
std
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
or
sbb
data16
(bad)
inc
add
add
add
mov
(bad)
call
add
(bad)
(bad)
call
cmp
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
jne
(bad)
call
add
(bad)
(bad)
inc
jnp
add
add
pop
pop
and
lea
add
add
pop
and
dec
(bad)
(bad)
call
add
(bad)
(bad)
call
cmp
std
(bad)
inc
jnp
add
add
inc
inc
sub
add
xor
add
add
adc
add
push
pop
adc
fld
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
es
add
pop
jge
add
add
or
fld
add
and
add
sbb
add
add
(bad)
(bad)
jmp
push
sub
jnp
add
add
inc
add
add
add
(bad)
(bad)
inc
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sbb
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
jge
add
add
and
and
add
push
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
fild
add
add
jnp
add
add
mov
add
or
loop
add
add
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
and
adc
add
adc
inc
add
add
idiv
(bad)
inc
sbb
add
add
sbb
mov
inc
add
add
idiv
(bad)
call
and
fld
add
and
add
sbb
add
add
idiv
(bad)
jmp
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
cmp
add
add
add
add
loope
add
and
add
sbb
add
add
idiv
(bad)
call
(bad)
add
add
sub
add
push
and
and
add
add
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
fild
add
pop
adc
fld
add
and
add
sbb
add
(bad)
(bad)
jmp
add
add
pop
jge
add
add
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
call
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
add
add
add
jnp
add
add
pop
push
pop
pop
sub
add
push
and
pop
or
and
add
pop
jge
add
add
and
add
pop
jge
add
add
or
push
add
add
add
inc
sub
jnp
add
add
push
add
add
inc
add
add
idiv
(bad)
(bad)
cmp
pop
push
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
push
sub
jnp
add
add
cli
inc
add
pop
add
add
inc
add
add
idiv
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
pop
pop
push
cmp
add
add
inc
add
add
idiv
(bad)
jmp
add
add
pop
jge
add
add
push
cmp
add
add
cmp
inc
add
add
idiv
(bad)
call
add
jnp
add
add
pop
and
jle
add
sbb
add
add
idiv
(bad)
call
sbb
fld
add
and
add
sbb
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
fiadd
add
and
dec
add
add
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
fiadd
add
and
sub
add
push
and
add
pop
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
jnp
add
add
stos
add
add
add
(bad)
(bad)
call
push
cmp
add
add
jnp
add
add
push
add
add
(bad)
(bad)
call
idiv
(bad)
call
pop
cmp
add
add
jnp
add
add
jnp
add
add
or
mov
inc
add
add
idiv
(bad)
jmp
add
rol
add
add
add
add
add
add
add
add
add
add
aas
stc
cld
(bad)
call
inc
add
add
idiv
(bad)
call
and
jg
add
add
add
add
cmp
sbb
add
add
(bad)
(bad)
call
sbb
sub
sbb
add
add
idiv
(bad)
jmp
add
ds
(bad)
call
inc
add
add
idiv
(bad)
call
adc
fiadd
add
and
inc
add
add
idiv
(bad)
jmp
xor
jnp
add
add
adc
(bad)
call
inc
add
add
idiv
(bad)
call
adc
sbb
and
add
pop
jge
add
add
loop
add
pop
adc
add
add
add
sti
(bad)
push
(bad)
dec
(bad)
(bad)
inc
add
add
cli
(bad)
push
std
(bad)
call
cld
(bad)
dec
std
(bad)
dec
add
dec
std
(bad)
dec
(bad)
push
(bad)
push
(bad)
(bad)
push
(bad)
call
cli
(bad)
(bad)
aas
add
add
(bad)
call
cld
(bad)
push
add
add
(bad)
dec
cld
(bad)
push
sti
(bad)
(bad)
in
std
(bad)
jmp
add
add
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
dec
add
add
adc
pop
(bad)
(bad)
inc
pop
pop
and
cld
(bad)
call
inc
add
add
idiv
(bad)
inc
and
add
pop
jge
add
add
and
xor
(bad)
inc
pop
jge
add
add
or
and
(bad)
inc
push
jge
add
add
sbb
push
(bad)
(bad)
inc
jnp
add
add
xor
add
idiv
(bad)
call
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
(bad)
dec
pop
pop
or
(bad)
(bad)
cmp
jnp
add
add
sahf
sbb
add
add
(bad)
(bad)
call
adc
inc
sub
add
push
and
cmp
cmp
(bad)
call
inc
add
add
idiv
(bad)
call
and
call
sub
add
xor
add
add
add
add
sub
es
pop
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
inc
add
rol
add
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
push
sub
add
add
(bad)
(bad)
call
nop
add
add
jnp
add
add
add
add
or
pop
add
aam
add
and
sbb
inc
or
add
xchg
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
sub
add
sbb
add
(bad)
(bad)
call
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
loop
add
and
inc
add
add
idiv
(bad)
(bad)
cmp
(bad)
jmp
sbb
sub
add
add
(bad)
(bad)
jmp
push
sub
add
adc
or
xchg
add
add
add
adc
add
push
sbb
sub
add
add
(bad)
(bad)
call
sub
add
es
jge
add
add
fld
add
and
add
and
inc
add
add
idiv
(bad)
jmp
push
sub
add
sub
add
push
and
add
add
sub
push
jge
add
add
and
or
inc
push
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
ret
sbb
fiadd
add
and
inc
add
add
idiv
(bad)
jmp
retf
add
xor
add
add
add
add
add
add
push
add
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
add
je
add
and
xor
add
add
add
add
add
add
push
add
add
ins
add
or
xor
add
add
add
add
add
add
push
add
outs
lods
add
push
and
adc
or
add
add
add
add
push
add
add
push
add
stos
add
push
sub
xor
add
add
add
add
add
add
push
add
add
scas
add
push
and
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
push
add
add
push
and
add
xor
add
add
add
add
add
add
push
sub
es
add
add
add
sub
add
push
and
add
sub
add
push
sub
add
adc
or
cmp
add
xor
add
sub
es
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
sub
adc
or
add
add
add
add
push
add
jnp
add
add
jnp
add
add
sub
add
push
add
add
pop
jge
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
xor
jmp
add
adc
add
push
sub
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
jne
add
add
jge
add
add
sub
jnp
add
add
xor
add
idiv
(bad)
call
sub
push
jge
add
add
xlat
es
dec
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sbb
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
inc
or
add
ins
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
add
add
cwde
add
add
ds
(bad)
call
inc
add
add
idiv
(bad)
call
sub
adc
or
add
add
adc
add
push
pop
cmp
jnp
add
add
adc
sgdtd
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
add
sbb
add
add
(bad)
(bad)
jmp
sbb
pop
add
add
pop
jge
add
add
sub
and
add
adc
add
add
sub
add
add
adc
cwde
add
add
or
and
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
sub
pop
or
inc
or
add
ds
(bad)
(bad)
cmp
add
jns
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
add
sub
es
push
and
inc
add
add
idiv
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
jnp
add
add
add
add
add
pop
pop
bound
xchg
add
add
cmp
(bad)
jmp
add
xor
add
add
add
add
add
add
push
add
add
add
inc
sub
add
xor
add
add
adc
add
push
push
cmp
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
pop
cmp
push
jge
add
add
cmp
jnp
add
add
xor
sbb
add
(bad)
(bad)
call
sub
add
es
or
mov
add
add
add
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
or
jo
and
add
pop
jge
add
add
or
jmp
add
and
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
dec
add
sbb
add
add
jnp
add
add
jnp
add
add
add
sub
add
push
sbb
sbb
jnp
add
add
jnp
add
add
add
sub
add
push
cmp
(bad)
call
or
inc
or
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
stos
(bad)
(bad)
call
add
in
(bad)
(bad)
jnp
(bad)
dec
add
add
sub
add
add
fs
add
add
and
add
pop
jge
add
add
jmp
add
and
add
and
inc
add
add
idiv
(bad)
jmp
sbb
sub
sbb
add
add
(bad)
(bad)
jmp
add
jge
add
add
cmp
(bad)
jmp
pop
or
push
(bad)
inc
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
sub
es
add
stc
add
push
sub
adc
or
adc
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
and
add
add
add
sub
es
add
and
add
add
sub
add
push
add
push
arpl
inc
add
pop
shr
cmc
add
push
sub
adc
or
push
add
add
add
add
add
push
add
sub
add
push
add
pop
adc
icebp
add
push
sub
add
xor
add
add
add
add
add
add
push
add
clc
add
push
and
add
push
and
sub
xor
add
add
add
add
add
add
push
add
repz
push
and
add
push
and
pusha
sub
add
adc
or
or
add
add
add
sub
es
add
outs
jne
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
add
or
add
xor
add
add
add
add
add
add
push
add
adc
add
sub
adc
or
or
add
add
add
push
add
add
add
add
sub
add
push
add
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
sbb
push
add
sub
add
add
sub
add
add
sub
add
push
add
add
push
add
sub
add
add
add
and
add
jbe
add
sub
add
push
add
add
sub
add
pop
add
sbb
push
add
sub
add
sub
add
push
add
add
sub
add
add
add
push
add
add
add
push
add
add
sub
add
add
js
add
sub
add
add
add
sub
add
add
add
push
add
add
sub
add
add
sub
add
sub
add
sub
add
push
add
add
add
push
add
sub
add
add
add
push
add
add
sbb
push
add
add
sub
jge
cld
push
sbb
sub
adc
xchg
lahf
cmp
mov
push
jmp
mov
mov
sti
std
pop
int3
xor
dec
and
inc
pop
js
xchg
sub
mov
or
dec
jns
jnp
dec
inc
jecxz
movs
scas
call
or
mov
and
adc
pusha
push
cmp
sub
mov
fisub
into
stos
mov
cmps
push
fidivr
sbb
hlt
ds
ret
ror
xor
loop
and
mov
mov
ins
inc
push
fwait
stos
call
cdq
or
aad
push
mov
mov
mov
mov
mov
pop
mov
push
mov
sub
adc
es
jecxz
add
ss
mov
inc
add
sub
xlat
push
in
loope
daa
jo
push
daa
inc
xchg
push
mov
popa
inc
jecxz
cld
sar
jmp
(bad)
and
lods
ds
add
mov
out
push
push
pop
fistp
inc
scas
pop
inc
hlt
pop
int
pop
mov
jmp
icebp
inc
cmp
fcom
scas
xchg
xchg
jge
mov
in
xor
fs
ja
cmp
mov
loope
mov
into
dec
jecxz
and
sub
movs
std
xchg
pushf
mov
inc
fwait
or
test
(bad)
xor
cmps
loop
xchg
ret
jg
inc
jae
stos
scas
ror
mov
ss
lock
cmps
mov
mov
mov
repnz
das
mov
jp
ins
push
push
fcomp
nop
bndstx
retf
push
mov
mov
test
inc
sbb
push
jbe
retf
bound
sbb
inc
push
ret
and
lahf
inc
jnp
rcl
sahf
stos
fcomp
ins
jle
das
mov
sub
not
in
jp
jg
push
in
mov
xchg
int
mov
hlt
mov
xchg
fadd
adc
cmp
xchg
and
sahf
fwait
loopne
fbld
fwait
pop
lods
push
imul
xor
or
sbb
xchg
jecxz
bound
xchg
push
mov
xchg
rcr
(bad)
bound
popa
lea
jecxz
ss
cmc
sbb
adc
push
sub
das
adc
dec
fwait
cmp
inc
bnd
pop
sub
add
leave
push
sar
shr
jge
int
lahf
mov
aas
or
ins
mov
in
mov
push
mov
or
and
lahf
sub
jmp
lods
pop
outs
std
pop
mov
rcl
xchg
pusha
push
adc
xor
icebp
loopne
shl
dec
xchg
push
dec
and
dec
dec
inc
les
mov
les
mov
sub
sbb
jno
int
gs
adc
adc
sub
sub
mov
push
xor
test
rol
add
sub
cmp
(bad)
mov
ja
and
es
mov
xor
dec
sbb
or
scas
leave
inc
sub
sbb
cli
test
lods
and
sar
out
in
push
inc
sbb
add
das
loop
mov
mov
out
stc
jae
xchg
mov
jp
enter
outs
dec
lea
mov
es
sbb
xchg
fmul
or
adc
fwait
or
cmp
xchg
xchg
xchg
repnz
xchg
jge
mov
sahf
add
bound
repz
xor
popa
ficomp
and
xchg
pop
loop
xor
scas
jne
fbstp
xor
or
mov
mov
jmp
dec
add
dec
aaa
or
jnp
and
mov
pusha
test
pop
xor
test
outs
loopne
and
mov
out
xchg
add
inc
fsqrt
rcr
inc
xlat
xchg
stos
mov
or
push
pop
mov
out
sbb
and
add
jle
sub
sub
xor
jmp
cmp
fst
cmp
cmc
(bad)
pop
movs
loopne
clc
sub
in
ins
pusha
cmp
inc
push
loopne
lock
ret
fdiv
mov
stos
outs
mov
(bad)
iret
fcmovnbe
or
(bad)
cmp
js
sar
push
retf
xor
aaa
lock
fst
sub
jmp
xlat
sub
popa
cs
into
popf
add
or
xchg
mov
push
test
ins
inc
inc
dec
outs
jmp
fld
jne
lds
scas
mov
and
retf
push
mov
jmp
adc
and
mov
ja
inc
jmp
sahf
fwait
xchg
xchg
(bad)
dec
sub
movs
dec
push
out
mov
nop
xor
inc
fisttp
push
xchg
add
push
aam
mov
cwde
fdivr
(bad)
jl
js
inc
daa
or
aas
adc
cmp
push
sub
jne
jne
call
es
adc
call
scas
arpl
lods
popf
inc
jbe
add
aam
scas
bound
mov
inc
mov
retf
(bad)
sub
retf
and
cmps
lock
or
cwde
lods
jmp
or
fcomp
sbb
cld
and
stos
mov
(bad)
or
add
cmp
cli
push
mov
push
std
push
mov
pop
xchg
cmovo
sbb
lds
pop
pop
jg
test
jle
sbb
stos
adc
push
pop
dec
out
jns
mov
shl
jnp
mov
sub
mov
or
xchg
xor
jno
pop
call
cli
ret
sub
pop
js
mov
and
add
inc
xchg
xor
add
ja
nop
inc
mov
pusha
les
and
ins
adc
ss
dec
(bad)
pop
out
or
jnp
mov
out
jns
push
and
mov
lea
outs
outs
adc
and
int3
retf
cwde
cwde
call
mov
(bad)
aas
cmp
aam
aam
int3
push
retf
(bad)
aad
pusha
les
pop
aam
cmp
pop
mov
hlt
sbb
add
outs
pop
xchg
pop
jno
jo
jb
dec
ins
pusha
cs
adc
push
in
in
std
push
outs
aam
stos
pop
shr
pop
jns
cmp
jbe
mov
dec
inc
jo
ret
push
inc
inc
lahf
or
dec
xor
lods
jne
inc
jmp
loope
push
mov
sar
daa
and
add
xchg
jno
xchg
fist
inc
mov
xchg
dec
cmps
cmps
mov
fcomp
loope
jno
div
sub
nop
jmp
scas
retf
les
jbe
test
and
repnz
in
sbb
cmp
cmps
loope
jb
mov
scas
imul
in
cmps
mov
lods
sub
(bad)
xchg
cmp
sub
ds
ror
nop
xlat
sbb
mov
xchg
xor
sub
pusha
cld
sub
cld
sub
cmp
aaa
adc
stos
repz
inc
sar
xchg
aad
xor
int
mov
pop
sub
std
cmps
adc
jb
jnp
call
xchg
or
stc
and
mov
mov
pop
in
push
mov
ja
dec
loopne
pop
dec
fs
cmc
dec
pop
mov
xor
sbb
mov
sbb
fld
dec
sub
in
sbb
lods
fcmove
scas
or
mov
bound
mov
push
jp
or
das
ficomp
ret
add
imul
adc
inc
jl
jge
pop
or
jge
jmp
jmp
sub
enter
gs
(bad)
mov
push
jmp
ss
enter
add
and
mov
sbb
pop
mov
or
sar
fadd
pop
in
sub
ss
jg
es
inc
mov
pop
repnz
sub
scas
jle
leave
stos
retf
push
ins
fist
cwde
inc
test
and
mov
dec
mov
call
mov
push
stc
jp
ret
mov
fild
dec
jnp
ret
inc
std
add
or
ins
push
hlt
jecxz
repnz
push
or
sub
imul
mov
mov
cmps
push
jl
push
sar
sub
fnstenv
xchg
dec
xchg
mov
jns
mov
jl
cld
mov
mov
cwde
jecxz
pop
loop
sbb
arpl
sub
push
lock
jmp
arpl
mov
bound
jo
inc
repz
mov
sar
pop
xchg
sub
or
jle
(bad)
cmp
clc
and
ficom
mov
fsubr
lock
add
mov
addr16
pusha
test
(bad)
dec
cmps
sti
arpl
add
xchg
mov
add
jle
nop
jns
sbb
or
sub
pop
mov
push
fstp
popa
(bad)
sbb
add
ficomp
push
sub
mov
dec
repz
aaa
movs
mov
sbb
sar
pusha
push
and
sub
test
and
cvtpi2ps
pop
dec
ins
dec
retf
bound
cwde
outs
mov
inc
jp
imul
aad
(bad)
outs
and
outs
dec
scas
sbb
or
and
repz
mov
inc
sub
adc
adc
add
mov
je
(bad)
repz
cli
(bad)
imul
sbb
mov
fwait
retf
xchg
xlat
lock
dec
(bad)
xor
lock
xchg
dec
pop
mov
das
(bad)
jb
and
lea
push
inc
push
fisub
xor
xchg
adc
das
sahf
test
jno
add
push
xor
adc
inc
add
(bad)
in
dec
mov
mov
rcr
movs
cld
push
dec
int
jmp
ffreep
arpl
movs
in
adc
jge
fnsave
sbb
and
push
cmp
jg
cli
cmp
(bad)
mov
cli
lea
jnp
jecxz
outs
xchg
in
aam
fimul
ins
add
or
outs
mov
cmc
xor
xor
inc
cld
mov
data16
mov
push
adc
imul
mov
push
inc
add
or
ret
jmp
adc
aas
(bad)
arpl
hlt
adc
xor
pop
dec
hlt
adc
out
fild
nop
icebp
sub
call
retf
cld
dec
mov
leave
push
fnsave
mov
ret
cmp
ins
aaa
aam
ror
setge
scas
in
idiv
jae
sub
movs
sub
punpckldq
fwait
lods
mov
in
sbb
imul
cmp
(bad)
mov
cmc
and
enter
test
mov
stc
in
push
mov
and
push
mul
jnp
xor
mov
xchg
jg
stos
jae
adc
adc
mov
cwde
and
pop
imul
fld
out
xor
imul
mov
sbb
push
lods
pop
fcomi
or
jns
daa
xchg
sbb
retf
or
nop
in
mov
retf
out
pop
(bad)
stos
xor
mov
xchg
hlt
rcr
or
(bad)
push
mov
dec
push
cdq
push
mov
mov
jle
lock
movs
movs
aaa
xlat
ret
inc
mov
retf
mov
cmps
mov
(bad)
xor
stos
outs
add
(bad)
(bad)
into
jae
cmc
mov
inc
adc
push
sub
mov
sub
rcr
test
aaa
test
mov
sbb
shr
(bad)
adc
sahf
pop
jecxz
mov
add
jnp
xor
cli
sub
push
jns
clc
ret
jge
mov
xchg
mov
into
or
jmp
loop
daa
jo
(bad)
sub
js
shr
stos
popa
shl
push
mov
data16
rcr
popa
push
scas
xchg
mov
sbb
push
out
imul
jb
xchg
or
mov
js
xchg
sbb
inc
mov
popf
pusha
jmp
add
push
hlt
dec
dec
aam
test
(bad)
mov
xor
jmp
retf
xor
lds
push
mov
dec
xchg
fnstsw
adc
push
mov
test
in
and
movs
jne
mov
push
(bad)
mov
(bad)
jl
inc
movs
jmp
int
xor
(bad)
xor
dec
test
aaa
and
jae
jbe
pop
call
in
xlat
ins
sub
dec
inc
js
lahf
pop
xor
mov
leave
nop
daa
xchg
out
lods
push
loope
icebp
pop
ret
jmp
lea
mov
aad
xchg
xor
xor
fs
dec
adc
dec
imul
int3
or
lea
jle
xchg
jecxz
pop
sahf
icebp
pop
sahf
xlat
xchg
dec
jge
push
(bad)
call
sbb
push
or
add
into
or
mov
pop
cwde
dec
mov
imul
inc
and
cmc
dec
cs
int
adc
adc
(bad)
dec
cmp
cld
out
and
push
mul
push
jno
pop
jo
cmp
and
cdq
sbb
push
or
dec
push
adc
sbb
stos
pushf
pushf
outs
jecxz
mov
push
xlat
jle
sbb
daa
push
movs
add
adc
jno
or
or
cmp
les
dec
loope
push
lods
mov
push
cmp
nop
cmp
sbb
fst
cmp
cmp
cli
xchg
popa
jae
(bad)
fild
push
repz
xlat
inc
mov
sbb
nop
add
pop
push
mov
cli
into
jl
pop
inc
(bad)
je
clc
dec
out
sub
mov
inc
sub
jg
jp
sbb
push
push
and
idiv
ins
jb
arpl
call
fmul
inc
nop
jbe
mov
inc
movs
xor
jecxz
or
or
call
sub
inc
aad
mov
jbe
lds
jo
in
stos
sbb
(bad)
(bad)
dec
pusha
cmp
call
and
xor
mov
sbb
inc
cmp
xor
or
mov
mov
loopne
into
nop
(bad)
std
mov
add
test
stos
sub
not
ins
fwait
push
xor
and
(bad)
xor
stos
or
push
sub
ins
push
xchg
les
pop
cmp
mov
fnstcw
(bad)
pop
pop
je
add
es
lods
xchg
cmc
or
sbb
mov
cmpxchg
in
push
push
das
fld
ins
lahf
call
inc
xor
xor
or
and
ret
xor
push
jns
mov
sub
enter
push
sub
pop
rol
cs
loopne
jp
jmp
pop
stos
fs
stc
aam
mov
push
cmp
ins
pop
pop
repz
rcr
js
loope
mov
cmp
jmp
inc
imul
fist
stos
add
sbb
push
imul
popf
out
mov
xlat
repnz
jmp
ror
mov
out
jmp
inc
adc
ret
dec
jne
or
pop
add
mov
cld
fs
dec
xchg
out
mov
cmps
mov
lds
sar
sbb
or
fsubr
retf
jnp
cmc
push
xor
test
loopne
pop
or
out
xchg
inc
mov
mov
push
or
mov
leave
xlat
mov
fild
cmps
sbb
lahf
aas
mov
mov
dec
and
inc
(bad)
(bad)
into
pop
shr
dec
xlat
shr
in
jno
call
and
clc
aaa
pusha
in
repz
out
inc
add
jnp
adc
hlt
xlat
cwde
ds
in
and
xchg
push
pushf
fsub
in
nop
int3
stos
mov
sub
fs
xor
xchg
in
xor
xchg
clc
add
jp
pop
loopne
mov
jne
or
mov
sbb
ins
addr16
repz
aad
xor
dec
push
push
sub
adc
push
mov
push
movs
or
retf
arpl
pop
rcr
xor
xchg
pusha
ins
inc
ins
pop
sbb
dec
imul
aas
xchg
call
adc
lds
idiv
dec
sub
test
inc
xor
xor
xor
sahf
popf
jo
inc
int3
mov
pop
call
sub
jle
sbb
ficom
sub
pushf
jnp
mov
xchg
push
ror
jns
mov
and
mov
adc
out
jecxz
inc
lahf
sbb
inc
adc
out
in
arpl
dec
inc
jmp
sar
js
push
outs
fs
dec
cmp
cli
outs
and
push
pop
aam
jnp
outs
nop
mov
retf
lds
add
je
pop
das
enter
fdivr
popf
push
or
xchg
mov
test
(bad)
cmps
lds
(bad)
dec
sub
xor
imul
ins
(bad)
jne
dec
addr16
fdiv
int3
aas
pushf
mov
adc
ss
add
inc
out
ret
mov
movs
mov
lods
xchg
pop
(bad)
sub
jmp
lahf
push
in
jns
inc
inc
fdivr
dec
mov
mov
test
movs
sub
xor
add
enter
not
push
clc
add
cwde
pusha
aas
ins
xor
nop
dec
mov
clc
adc
ss
pop
xchg
jl
and
xchg
(bad)
imul
test
aaa
movs
dec
das
das
xor
inc
mov
mov
mov
cld
je
mov
mov
test
je
(bad)
out
in
xchg
cmp
(bad)
mov
dec
fcomi
push
retf
push
test
aad
cmp
jl
xchg
ds
cmps
adc
in
cwde
sub
aad
scas
ret
adc
addr16
fnstsw
out
inc
push
inc
loope
mov
adc
jne
mov
repz
jns
mov
mov
mov
xor
xor
lahf
stos
cmps
lahf
mov
stos
xchg
mov
(bad)
mov
or
pop
pushf
mov
mov
inc
out
or
mov
sub
loop
push
out
xor
mov
nop
out
nop
xchg
cmp
jge
sub
xchg
sahf
jecxz
pop
xor
sub
in
inc
dec
xor
mov
retf
adc
imul
and
push
in
pushf
(bad)
jnp
add
jbe
outs
repz
ret
push
fdiv
ds
dec
sub
mov
or
sub
int3
and
jnp
add
xchg
ds
mov
ins
outs
xor
shl
repnz
xchg
push
in
mov
loope
out
xor
xchg
push
add
iret
mov
push
cmp
push
or
xor
idiv
jae
stc
dec
es
dec
movs
into
cmp
movs
stc
mov
daa
loope
into
or
mov
imul
pop
xor
add
jmp
push
mov
and
(bad)
repz
dec
add
in
xor
gs
(bad)
fdivr
jl
stos
push
dec
pushf
arpl
(bad)
cld
fidiv
inc
rcl
sub
sub
add
sbb
push
dec
dec
xor
test
pop
lahf
bound
xlat
stos
ja
std
scas
retf
adc
xchg
mov
sbb
xchg
outs
inc
xchg
shr
lahf
adc
fbstp
fs
jno
mov
or
loop
sub
mov
nop
cmps
clc
je
imul
(bad)
push
and
test
outs
xor
loopne
jbe
xor
int3
cli
xchg
sbb
sar
xchg
push
gs
out
mov
(bad)
test
pop
mov
in
mov
xor
cmc
mov
fwait
add
test
enter
aas
sbb
pop
add
pusha
jle
js
dec
push
and
mov
movs
push
push
fidiv
lods
inc
mov
out
pusha
rol
sub
xchg
jo
fcmovnb
sub
or
fwait
adc
popa
(bad)
outs
aad
adc
sti
test
push
and
mov
js
fldl2t
mov
(bad)
(bad)
shl
push
dec
push
pop
das
or
or
shl
arpl
ds
cwde
hlt
add
jmp
mov
mov
lahf
iret
movhps
pop
cmp
arpl
jae
xchg
ret
mov
jge
adc
scas
sub
dec
icebp
dec
mov
fisubr
shr
cld
(bad)
fldpi
jne
push
mov
mov
in
aad
cmps
imul
jge
stos
mov
imul
imul
imul
push
xchg
(bad)
fld
loopne
cmc
xor
sbb
test
ja
js
or
mov
add
add
repz
js
push
push
ror
shl
xchg
ror
sar
bound
xchg
push
dec
out
dec
(bad)
in
popa
jg
inc
mov
je
xchg
mov
push
jb
jg
push
jl
std
loope
sub
sub
daa
dec
pop
scas
push
adc
push
mov
popa
sbb
rcl
add
lods
add
movs
daa
mov
movs
mov
ficomp
or
and
fist
out
stos
pop
cwde
daa
ins
jle
inc
jg
div
ret
jae
dec
sub
cmp
jmp
sub
cdq
hlt
mov
sub
and
jb
or
add
pop
cmc
cdq
pop
sub
enter
xlat
sbb
fiadd
sbb
imul
(bad)
mov
xchg
push
int3
mov
mov
inc
test
inc
xor
mov
(bad)
je
cli
xchg
outs
push
cmp
aas
or
push
mov
imul
fchs
and
in
scas
imul
dec
and
dec
mov
arpl
stos
sbb
rol
cmps
xor
sbb
push
das
and
cmp
pop
pop
in
stos
cs
add
mov
jecxz
jmp
jl
and
sbb
push
pop
pop
cmp
loop
push
cpuid
push
xor
in
xor
sbb
ret
shr
ds
push
popa
loop
push
retf
mov
pop
dec
into
daa
stos
mov
adc
mov
xor
inc
add
xor
int3
(bad)
std
sbb
jmp
fmul
mov
in
mov
and
adc
(bad)
out
pop
out
cmp
cli
and
sbb
mov
pushf
or
test
cmc
repz
push
pop
jne
retf
mov
in
in
add
jmp
iret
into
aad
cmp
xor
jmp
cmps
mov
or
xchg
ds
fstp
and
mov
ins
lea
or
sub
cmp
dec
hlt
adc
adc
fimul
hlt
or
or
xor
fcmove
push
pop
lds
jecxz
push
enter
imul
jns
mov
xor
or
xchg
int
cmp
xchg
and
pop
jg
(bad)
sbb
cmp
pop
jmp
adc
dec
leave
or
icebp
mov
dec
lods
xor
out
jmp
ds
aaa
test
mov
cld
and
ror
push
and
pop
jne
dec
add
cdq
sub
mov
mov
loop
mov
mov
aam
or
push
repnz
xchg
inc
repnz
ret
jge
mov
sub
cmp
mov
mov
ins
dec
xchg
out
pop
push
push
sub
cmp
mov
stc
pop
adc
das
mov
jge
aam
out
and
lods
inc
stos
jp
je
sub
dec
jecxz
fnstsw
cmp
xor
mov
jge
add
sub
sub
aas
add
inc
pusha
add
hlt
xor
or
dec
test
repz
mov
cmp
rol
dec
daa
push
(bad)
retf
cld
dec
pop
aaa
adc
imul
cmp
(bad)
nop
retf
and
fisttp
cmp
mov
mov
(bad)
call
pop
push
add
stos
jno
cmp
ja
mov
inc
sahf
das
pop
test
call
lods
lods
pop
mov
xchg
jno
jmp
cmp
leave
add
gs
and
clc
mov
jo
and
cmp
dec
sbb
push
add
icebp
jno
das
sbb
test
inc
mov
(bad)
out
xor
imul
sbb
or
cmp
push
xchg
repz
les
lea
jg
clc
int3
inc
sti
call
sub
or
lods
or
or
loop
adc
ffreep
fwait
test
in
sbb
popa
mov
std
xlat
das
imul
sbb
popa
add
in
ficom
push
jae
jg
push
into
and
fwait
push
int3
dec
or
arpl
xchg
mov
popa
in
or
mov
scas
add
pop
dec
jecxz
xor
retf
add
and
inc
test
and
ins
dec
adc
dec
jne
sbb
mov
inc
lods
cdq
xchg
inc
jbe
sar
int3
aam
mov
sbb
(bad)
das
fxch
dec
inc
pop
aam
scas
sub
rcl
test
cmp
ficomp
cs
push
xor
xchg
cmp
outs
dec
or
jo
pop
out
pop
retf
(bad)
neg
xor
retf
cdq
call
cwde
xchg
sub
jb
pop
or
aaa
rcl
mov
ja
loopne
test
inc
jns
xchg
inc
inc
pop
nop
ins
xchg
ja
ins
stos
(bad)
mov
push
daa
out
xchg
repz
and
xchg
sbb
pop
daa
pop
lods
not
cld
scas
out
sbb
je
jmp
imul
jge
add
in
ror
enter
jp
outs
scas
cmp
pop
sub
add
sub
mov
push
mov
hlt
xchg
jmp
push
push
or
or
mov
push
xchg
mov
xchg
into
cli
add
jae
xchg
jg
sbb
outs
jle
inc
mov
sub
and
repnz
jle
iret
aam
imul
mov
cs
jp
pushf
push
mov
lods
aam
add
test
xor
push
lods
cli
sti
stos
retf
std
cmp
xor
not
data16
out
ret
mov
jns
iret
sbb
nop
xlat
shr
out
pop
xchg
pop
or
fwait
repnz
mov
dec
adc
push
ds
dec
xchg
(bad)
pop
cmp
lods
test
or
dec
jecxz
pop
pop
push
xchg
dec
(bad)
in
jecxz
xchg
fcomip
gs
or
fstp
movs
iret
push
into
push
imul
call
loope
mov
xchg
push
movs
add
xchg
add
jle
outs
test
popa
dec
scas
mov
rol
imul
sbb
xchg
mov
jl
or
nop
lds
jle
outs
push
pushf
mov
inc
inc
push
shl
call
xchg
fdiv
popa
push
xchg
mov
call
outs
adc
dec
scas
jl
or
mov
into
or
sbb
jge
enter
mov
pop
lock
scas
mov
movs
lods
inc
adc
aas
outs
xor
jbe
xlat
mov
dec
not
test
repz
pop
std
cmp
ja
daa
rcl
mov
push
fst
mov
cmp
ret
sbb
movs
and
or
test
inc
xor
mov
and
gs
in
frstpm(287
jns
or
cli
mov
stos
sub
movs
ret
push
movs
js
xor
in
push
push
pop
in
jns
sbb
jmp
std
mov
jbe
aas
data16
push
test
adc
gs
mov
sbb
pop
js
ror
fdivr
iret
jmp
pop
and
rcl
fmul
not
inc
sbb
div
or
adc
lahf
xchg
loopne
mov
pop
hlt
mov
jae
popa
daa
mov
shl
xor
mov
adc
jmp
mov
xor
lds
dec
popa
push
and
std
xchg
jae
mov
dec
xor
mov
mov
and
repz
movs
outs
fwait
imul
cs
fwait
dec
test
ins
fmul
pop
hlt
loopne
xor
mov
pop
stos
mov
sbb
ret
xchg
imul
dec
add
pop
icebp
xchg
int
cmps
imul
clc
(bad)
in
movs
xor
lahf
loop
sub
out
xlat
mov
rcr
rcr
push
fsubr
jo
xor
mov
xor
inc
mov
jle
ja
and
lsl
(bad)
cmc
dec
and
or
or
fsubr
adc
push
or
cmps
fwait
mov
dec
movs
xchg
push
adc
ins
loope
mov
repnz
aam
sub
popf
repz
dec
retf
pop
retf
mov
mov
pop
pop
and
js
dec
fstp
cmps
push
aad
out
test
push
cmp
jg
mov
xlat
in
mov
adc
movs
inc
sbb
add
pop
and
inc
test
xor
sbb
loope
ins
(bad)
jb
mov
adc
out
xchg
scas
xor
pop
pop
sub
aas
push
add
pushf
mov
adc
in
inc
sub
cmp
xor
loop
sub
inc
retf
adc
int3
and
fidiv
retf
dec
enter
pop
out
mov
sahf
inc
sub
mov
mov
xor
sub
adc
adc
retf
push
jae
mov
das
outs
loop
(bad)
dec
pop
sti
cmp
push
cmp
add
pop
rcl
dec
push
sbb
and
and
imul
jae
sub
repz
inc
add
sub
or
ja
dec
cld
adc
je
pop
sbb
fiadd
jbe
cli
pop
cmp
not
or
stos
jno
or
add
xor
nop
xchg
ror
adc
xchg
mov
ror
mov
imul
aad
mov
outs
push
mov
hlt
and
shl
pushf
aad
test
cmp
push
js
pop
enter
cmc
and
pop
jb
mov
xchg
push
mov
into
and
jae
and
out
int3
sbb
call
sbb
add
cmps
cmc
jecxz
movs
leave
rol
addr16
sub
fwait
jge
lock
add
pop
mov
add
pop
and
sub
ficomp
xchg
jecxz
dec
or
push
arpl
and
mov
stos
add
add
movs
shl
sub
or
into
or
dec
or
mov
mov
pop
arpl
sub
fmul
rol
push
or
inc
cmp
outs
pusha
dec
sbb
or
(bad)
fwait
stc
je
sub
ret
aad
(bad)
int3
loope
aaa
jp
add
xchg
jle
outs
inc
lods
and
ins
jbe
jno
lods
push
js
outs
test
adc
mov
aad
xchg
cmp
jmp
cdq
jno
ins
xchg
loope
or
push
pop
push
imul
fadd
fiadd
inc
popf
test
out
imul
rol
adc
not
or
inc
xchg
or
xchg
int3
mov
mov
jg
icebp
mov
lds
xor
and
mov
mov
xchg
or
int3
push
div
xlat
add
sti
pop
cmp
xchg
mov
and
add
cmp
add
pop
mov
pop
stos
push
ret
and
in
outs
int
repz
adc
or
jmp
outs
fwait
iret
ss
ins
cmovge
neg
ss
inc
pop
or
add
call
fs
cmp
mov
sbb
push
jmp
jae
jno
cmp
cmp
push
adc
xchg
es
jmp
cli
lods
enter
push
xor
jl
adc
cwde
sar
dec
mov
add
sti
int3
push
inc
jb
and
cli
loope
jns
inc
mov
repnz
in
xchg
add
imul
lods
arpl
jmp
mov
lock
jo
jmp
jle
dec
loope
jo
adc
cmp
clc
out
pop
mov
icebp
adc
adc
repz
mul
inc
stos
xchg
jns
test
in
aas
and
fidivr
or
mov
ret
inc
ds
enter
mov
dec
out
inc
(bad)
aad
push
pop
iret
loop
inc
mov
sub
push
imul
sbb
mov
fdiv
int3
dec
sub
mov
lea
jl
mov
out
call
in
stc
(bad)
sbb
xor
adc
scas
outs
nop
arpl
fbld
add
fwait
dec
inc
sti
stos
(bad)
xchg
cld
stc
xor
push
sbb
leave
mov
pop
sub
into
xchg
ss
xor
loopne
test
push
fnstsw
pushf
and
jmp
data16
adc
sub
std
cmp
xchg
int3
je
sbb
pop
bnd
mov
mov
xor
pmaxsw
mov
lds
clc
xchg
jne
rcl
or
mov
mov
or
outs
mov
dec
mov
lock
sahf
std
adc
aam
mov
xchg
pop
and
ret
jno
mov
jmp
mov
and
jg
bound
push
and
and
inc
mov
pop
sub
(bad)
inc
shl
jp
pop
mov
int3
mov
mov
xor
pop
test
jne
and
mov
stos
cmp
test
sbb
xchg
lods
xor
add
jg
sub
fbstp
(bad)
mov
cwde
cmps
jg
and
mov
sti
jmp
div
push
adc
or
mov
or
sbb
stos
mov
and
jbe
mov
cwde
cwde
and
xor
loope
sbb
pusha
fstp
jp
fstp
cmc
adc
arpl
sahf
pop
or
xor
lods
ret
fmul
scas
push
data16
vmwrite
leave
mov
shr
inc
or
jo
imul
add
push
or
mov
sub
adc
mov
les
nop
enter
inc
and
and
pop
push
or
(bad)
mov
sub
add
pop
(bad)
pop
cmps
mov
fisttp
enter
xchg
jns
dec
mov
pop
dec
sbb
mov
or
pushf
enter
xchg
das
ja
loope
test
inc
(bad)
rol
push
retf
xor
cmp
push
loop
pop
retfw
cmc
repnz
ror
inc
inc
xor
add
jno
sub
mov
test
retf
jb
xor
sbb
aas
jle
mov
(bad)
fcomi
pop
imul
xchg
clc
jns
out
fistp
scas
push
popf
jmp
nop
outs
ret
mov
call
or
int3
fsub
retf
stos
sub
test
xchg
push
dec
in
cdq
mov
es
loop
dec
add
ds
jno
lock
xor
test
push
push
cmp
pop
mov
iret
pop
in
adc
push
sub
inc
sbb
int
jnp
pop
and
pop
mov
scas
push
pop
std
sub
arpl
les
ror
adc
mov
sub
or
xor
fst
cdq
mov
xchg
icebp
xchg
sti
sub
jmp
mov
mov
adc
add
cmp
out
cmp
push
push
cs
xchg
pop
add
add
stos
ja
icebp
jno
push
add
movs
aad
rol
fwait
scas
jecxz
fsubr
cmps
jp
ret
mul
jno
pop
aad
add
imul
pop
mov
ss
stos
stos
push
loopne
jg
(bad)
ror
retf
iret
iret
inc
pop
retf
mov
pop
push
pop
aas
sbb
add
enter
dec
scas
mov
cdq
call
or
sub
daa
cmps
ins
cdq
scas
lods
mov
sbb
(bad)
test
inc
(bad)
call
inc
mov
iret
sub
fpatan
push
push
test
mov
icebp
movs
mov
mov
cmp
pop
mov
mov
inc
test
jnp
dec
popf
std
(bad)
vprotb
test
or
add
cmp
popf
out
loopne
js
shl
mov
xor
and
xchg
cmc
test
movs
lock
stos
cli
xchg
jmp
icebp
push
maxps
mov
and
add
lahf
stc
cdq
std
(bad)
cdq
mov
and
icebp
mov
cmp
cmp
push
not
or
sub
sahf
xor
iret
cmp
pop
pop
imul
sti
dec
jno
jbe
push
stos
es
test
xchg
lods
popa
or
cmp
mov
pop
mov
out
das
(bad)
ds
sub
stc
out
mov
dec
xchg
ror
in
jg
jmp
fs
cli
stc
fcom
adc
ds
mov
mov
and
in
fbstp
mov
arpl
mov
imul
cmp
ret
imul
cmp
dec
clc
or
xor
jnp
cwde
fs
mov
pop
and
cmp
int
or
shr
mov
and
fbld
mov
mov
in
add
loopne
ror
psubusw
and
bound
cmp
sub
push
cmp
call
fs
sub
mov
xchg
and
out
aam
sbb
cmp
push
pop
sbb
mov
movs
rcr
and
jecxz
jne
xchg
fs
test
add
mov
pop
ins
test
mov
add
movs
dec
jmp
pop
rcl
int
addr16
and
sbb
push
xor
xor
test
pop
inc
pop
ins
push
sub
fstp
in
ss
inc
inc
mov
inc
adc
mov
inc
and
aam
add
bound
push
and
je
(bad)
(bad)
cs
setp
xor
aaa
scas
stos
cli
cmp
call
cld
(bad)
jbe
fisubr
dec
dec
add
inc
pop
cld
push
pop
xor
adc
rol
mov
mov
cli
aad
adc
sbb
dec
sbb
test
sahf
add
and
xor
push
(bad)
int3
jne
xor
fwait
sub
pop
mov
sbb
ror
jecxz
jg
inc
pushf
jge
sbb
push
cmp
gs
xchg
push
and
sub
and
data16
cmp
mov
cld
cli
sahf
rcl
add
push
retf
daa
cmps
mov
adc
add
popa
repnz
movs
mov
rcr
mov
pop
jns
pop
loope
pop
mov
and
jp
mov
pushf
inc
and
sbb
jp
cmp
stos
ror
pop
sbb
cwde
jmp
push
pop
scas
sti
ss
stos
icebp
sbb
daa
imul
inc
bound
ja
xchg
sahf
ja
mov
js
sbb
js
fimul
add
stc
aam
sti
mov
fwait
mov
jo
mov
sbb
retf
data16
outs
inc
pop
sub
jecxz
or
xchg
sbb
lock
loop
sbb
mov
rcl
mov
xchg
cmp
mov
xor
pusha
aaa
sub
stc
dec
push
inc
mov
ins
sub
xchg
dec
in
push
add
or
js
adc
jge
in
adc
stos
jns
mov
repnz
mov
cmps
push
sahf
rcl
xor
outs
jbe
shl
leave
push
sub
sbb
fld
stos
pop
jae
je
sub
sub
adc
ret
mov
mov
mov
mov
popf
xor
and
sub
cs
loop
cmp
add
push
or
mov
gs
(bad)
jae
pop
xor
enter
push
std
dec
call
retf
inc
push
mov
loope
(bad)
mov
ja
cli
in
in
dec
sbb
adc
fs
sub
retf
mov
xlat
jns
ret
(bad)
(bad)
stos
push
cmps
int
pop
aad
mov
adc
out
mov
into
xchg
repz
add
sbb
loop
repz
jle
sbb
and
hlt
pop
in
mov
mov
arpl
mov
add
imul
sbb
mov
jmp
xchg
jbe
and
jl
lea
mov
test
fnstsw
mov
mov
dec
(bad)
stc
sbb
jp
loop
xor
add
xchg
outs
mov
smsw
sbb
sub
fwait
pop
std
ret
mov
repz
and
std
jg
in
xchg
lods
mov
lods
pusha
cmp
ins
cmp
in
scas
into
in
mov
adc
das
and
outs
in
(bad)
loope
(bad)
(bad)
fstp
mov
test
xchg
sub
adc
mov
cdq
jmp
sub
fwait
and
xlat
sbb
es
arpl
js
and
cmp
hlt
mov
pusha
mov
outs
fucomip
xor
fild
add
dec
movs
rcl
outs
adc
mov
jecxz
call
fistp
js
sahf
(bad)
xchg
sbb
and
xchg
jbe
test
jno
adc
cmp
mov
neg
outs
adc
je
mov
dec
add
(bad)
nop
ja
out
mov
test
jne
popf
lods
movs
je
xchg
adc
inc
in
fnstcw
(bad)
jbe
mov
push
xchg
or
loop
mov
mov
aam
jb
repnz
adc
inc
loope
mov
(bad)
leave
rol
pop
aaa
or
loopne
and
imul
dec
loopne
outs
or
lahf
adc
mov
push
add
xchg
mov
dec
cdq
inc
enter
push
ss
xor
and
js
js
mov
push
jg
(bad)
gs
inc
push
or
sbb
pop
jbe
aaa
adc
test
cmps
sbb
jg
aad
imul
mov
sbb
lods
aaa
fist
dec
shl
loopne
push
mov
ja
leave
add
and
mov
icebp
inc
push
rcl
add
popf
lock
in
add
xor
add
inc
xchg
mov
xchg
outs
jle
mov
mov
jns
cdq
push
cmp
jge
cmp
push
(bad)
lahf
in
nop
imul
int
push
dec
stc
xchg
push
and
inc
fmul
cmp
clc
(bad)
dec
test
aaa
and
fnsetpm(287
dec
sti
xchg
push
cmp
inc
xchg
movs
loope
mov
jmp
pusha
push
std
jmp
mov
inc
inc
lds
pop
push
jns
shr
cmp
sbb
aaa
ja
inc
mov
ins
jnp
inc
sbb
and
or
xor
adc
pop
cli
sbb
mov
imul
scas
fidivr
mov
out
inc
jge
call
jmp
out
xor
outs
scas
out
dec
mov
stos
ins
jmp
mov
jo
push
retf
imul
xor
div
mov
push
leave
rol
add
int3
bound
mov
and
fmul
adc
add
mov
mov
dec
fild
fsubr
xchg
xlat
or
fs
hlt
retf
sub
push
lahf
mov
jge
pop
cld
retf
xchg
pop
les
mov
mov
(bad)
test
aad
push
and
ret
mov
mov
sub
loope
cmps
test
mov
jae
and
mov
leave
(bad)
std
out
sub
mov
or
sub
aam
retf
cmps
mov
or
lea
push
jmp
dec
in
jb
mov
mov
mov
rcl
das
in
mov
inc
outs
call
ret
push
ins
mov
lds
xor
cwde
sar
sbb
(bad)
mov
ins
je
lea
popa
sbb
xor
mov
call
in
call
fwait
and
rcl
xor
dec
(bad)
xchg
inc
mul
imul
xchg
jo
xor
cs
lock
push
jnp
xor
stos
call
pop
add
stos
int3
mov
xchg
cmp
sbb
push
movs
jmp
and
inc
in
scas
in
cmc
(bad)
std
or
add
test
fs
pop
mov
or
xchg
loop
mov
mov
xor
sbb
pop
fwait
push
cdq
jns
jmp
add
and
sub
jecxz
xlat
xchg
repnz
push
pop
call
into
inc
dec
dec
mov
mov
jnp
aaa
cmp
xchg
movs
repz
xor
xor
jl
scas
xlat
mov
stos
push
pop
adc
scas
shl
aam
mov
nop
xor
push
sti
call
mov
in
fdivr
dec
jne
or
(bad)
scas
add
push
inc
aad
push
mov
mov
mov
stc
call
sar
(bad)
gs
push
mov
shl
jg
mov
arpl
test
mov
add
outs
sbb
ja
jg
rcl
dec
push
out
mov
or
xchg
adc
mov
imul
mov
bound
imul
sar
lahf
inc
mov
cmp
loop
stos
(bad)
lock
xchg
mov
popa
cmp
xor
and
adc
into
test
pushf
sar
mov
lock
inc
jmp
add
mov
fcmovb
jmp
pop
xor
inc
das
mov
and
test
shl
adc
imul
iret
repz
sub
scas
xchg
dec
jns
shr
jmp
pop
inc
loop
sbb
out
xchg
jl
xchg
dec
stos
dec
shl
hlt
gs
test
aas
or
pop
mov
rcl
mov
mov
dec
push
in
lahf
scas
mov
cmp
clc
mov
inc
loope
sbb
dec
inc
cmp
dec
pop
cmp
xor
lods
or
stos
stos
test
es
push
rcl
dec
jne
out
dec
fwait
cdq
addr16
out
or
adc
sub
mov
outs
jecxz
inc
loope
cmp
dec
test
ins
fbld
pop
(bad)
jecxz
pushf
jne
(bad)
es
dec
shl
mov
push
cmp
sbb
stc
inc
cs
clc
sub
or
sbb
and
mov
pusha
mov
ror
mov
add
mov
push
fstp
fimul
push
inc
ror
add
fbstp
stc
adc
sahf
mov
mov
mov
dec
add
and
dec
mov
pop
adc
cmp
iret
neg
imul
mov
ss
mov
imul
test
sbb
out
(bad)
xchg
call
adc
les
jl
test
jmp
mov
out
xchg
sub
mov
js
mov
dec
or
in
xor
icebp
rol
imul
inc
fwait
xchg
mov
cmp
loope
pop
xchg
dec
sub
pop
leave
adc
jecxz
rol
dec
sahf
(bad)
(bad)
fldcw
push
ret
or
pop
in
xor
les
sbb
xor
push
shr
mov
fwait
pop
das
push
and
fsub
sub
mov
mov
push
sbb
popa
xor
scas
cmp
sbb
sub
aas
(bad)
jle
fcomp
push
not
sub
in
inc
mov
ror
mov
dec
xchg
std
dec
in
neg
inc
sti
sar
xchg
lds
jae
xor
enter
(bad)
sti
ins
jmp
and
pusha
or
ret
inc
adc
iret
push
stos
(bad)
inc
repz
dec
jle
mov
into
push
xor
adc
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
adc
fst
sub
push
adc
fst
sub
push
adc
fst
sub
jo
sub
jno
sub
jb
sub
jae
sub
je
sub
jne
sub
jbe
sub
ja
sub
jl
sub
jge
sub
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
inc
fwait
push
push
dec
fwait
push
push
dec
fwait
push
push
sbb
push
sbb
push
test
push
push
xchg
push
push
mov
push
push
mov
fwait
push
push
mov
fwait
push
push
movs
fwait
push
push
movs
fwait
push
push
cmps
fwait
push
push
cmps
fwait
push
push
test
push
push
test
fwait
push
push
rcr
push
ret
fwait
push
push
les
push
push
(bad)
fwait
push
push
(bad)
fwait
push
push
int3
fwait
push
push
int
push
push
loopne
push
push
loope
push
push
loop
push
push
jecxz
push
push
in
push
push
in
push
push
out
push
push
out
push
push
jmp
push
add
push
add
push
add
push
push
add
pushf
push
push
pop
pushf
push
push
push
pushf
push
push
setl
pusha
pushf
push
push
popa
pushf
push
push
bound
push
fs
push
push
gs
push
push
pushfw
push
push
addr16
push
push
outs
pushf
push
push
outs
pushf
push
push
les
push
enter
leave
pushf
push
push
retf
push
retf
pushf
push
push
int3
pushf
push
push
int
push
push
into
pushf
push
push
iret
pushf
push
push
and
push
push
and
popf
push
push
sub
push
push
sub
push
push
sub
popf
push
push
das
popf
push
push
jo
cmp
jno
cmp
jb
cmp
jae
cmp
je
cmp
jne
cmp
jbe
cmp
ja
cmp
jl
cmp
jge
cmp
xchg
mov
cmp
add
add
add
dec
add
add
add
add
add
dec
add
add
add
movs
add
add
add
mov
add
add
add
add
add
add
add
add
or
add
or
add
add
add
cmps
or
add
or
add
or
add
or
add
add
jae
add
(bad)
or
add
test
add
jp
add
mov
push
add
push
push
add
int3
push
add
cmc
push
add
push
add
inc
or
add
add
push
or
add
or
add
add
aaa
or
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
ds
add
or
add
or
add
or
add
or
add
add
xor
add
or
add
lahf
pop
add
and
add
dec
pop
add
rol
add
sti
push
add
add
add
pop
add
icebp
pop
add
fiadd
add
mov
add
cmp
add
call
add
add
push
add
pop
push
add
dec
adc
add
add
stos
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
lea
add
adc
add
jmp
adc
add
adc
add
add
inc
sldt
ror
add
or
add
or
add
add
pushf
or
add
add
add
add
add
add
cwde
add
add
adc
add
sldt
mov
pop
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
cmp
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
pusha
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
mov
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
rol
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
aad
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
sti
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
lock
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
and
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
into
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
sbb
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
das
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
push
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
scas
jl
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
mov
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
pop
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
sub
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
in
push
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
mov
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
inc
mov
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
movs
fld
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
data16
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
retf
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
es
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
xor
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
ss
dec
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
aaa
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
cmp
test
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
cmp
js
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
scas
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
ret
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
aad
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
call
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
cld
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
syscall
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
and
add
add
cmp
aaa
add
sub
add
add
add
add
add
ss
add
add
cmp
aaa
add
sub
add
add
add
add
add
dec
add
add
add
cmp
aaa
add
sub
add
add
add
add
add
pop
add
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
test
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
stos
add
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
mov
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
xchg
rol
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
or
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
pop
push
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
inc
push
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
push
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
push
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
shl
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
loopne
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
push
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
sbb
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
inc
pop
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
pop
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
push
jl
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
mov
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
pop
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
fadd
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
pop
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
pop
or
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
xor
add
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
cmp
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
push
push
or
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
js
add
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
or
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
sahf
or
and
add
data16
add
cmp
aaa
add
sub
add
add
add
add
add
add
add
or
and
add
add
add
add
add
add
add
xor
sub
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
inc
xchg
or
out
xchg
xchg
adc
mov
sar
cwde
je
xchg
aam
outs
imul
movs
jae
and
mov
cmps
xchg
call
in
mov
or
adc
xor
test
jg
stos
xchg
mov
sbb
pusha
and
ja
mov
out
pop
in
pop
pop
nop
mov
(bad)
movs
jge
mov
loope
sbb
aad
mov
cli
dec
mov
shr
jbe
gs
out
mov
cli
(bad)
fs
imul
jmp
loop
dec
and
dec
stos
iret
sub
repz
test
repz
jae
test
(bad)
out
cmp
xchg
lods
ja
je
repnz
or
test
add
push
adc
retf
fcmovnu
mov
addr16
jnp
call
dec
stc
push
inc
adc
popa
adc
mov
int
jb
ja
jmp
pop
fcomip
mov
and
xchg
mov
push
mov
(bad)
adc
sbb
int3
repnz
loopne
add
sub
sub
dec
int3
jge
pop
mov
dec
dec
aam
neg
ja
cli
out
lds
mov
outs
(bad)
out
lods
test
aas
and
scas
jp
push
daa
(bad)
xor
jnp
jmp
and
and
rcl
and
scas
and
cld
pushf
jmp
pushf
fiadd
dec
outs
pop
pop
cmp
jae
rcr
fisubr
fsubrp
mov
cmps
add
stc
scas
ror
lods
inc
and
les
jmp
pop
sar
xor
sbb
pop
add
pop
out
mov
inc
sahf
movs
sub
dec
adc
fld
mov
lahf
push
dec
jb
outs
dec
or
aad
xor
mov
adc
add
inc
call
push
mov
pop
jnp
ds
adc
adc
shl
jns
adc
div
mov
sbb
mov
mov
test
addr16
cmp
loope
lds
dec
sub
jnp
jmp
ds
(bad)
hlt
repnz
mov
or
inc
in
sub
inc
xlat
aaa
popa
or
mov
or
ror
jne
imul
mov
sbb
jmp
lds
(bad)
out
mov
xchg
repz
sub
jb
cmps
or
mov
shl
popa
push
or
cld
(bad)
ins
inc
imul
out
ins
inc
jb
jne
fld
mov
mov
imul
cmp
retf
xchg
loope
push
mov
pop
jnp
mov
mov
int3
iret
inc
mov
mov
inc
rcl
adc
pop
ins
ret
loope
inc
dec
dec
pop
imul
dec
mov
sbb
(bad)
xchg
mov
aaa
fisub
fldz
cmp
fistp
imul
pop
xor
lds
add
cmps
ds
jne
dec
(bad)
mov
push
inc
stos
sbb
lods
in
loopne
jge
dec
je
iret
jae
pop
(bad)
rcr
push
out
ja
es
push
popa
cmp
ins
pop
pop
fcomp
nop
mov
aam
mov
sub
fs
test
adc
mov
sbb
icebp
sbb
(bad)
int
lock
push
pop
cmps
sahf
les
and
dec
lock
jbe
dec
mov
dec
ds
push
mov
loopne
jne
out
daa
std
xchg
addr16
test
pop
mov
rcr
adc
xor
fisubr
das
xchg
sbb
dec
mov
and
or
in
mov
cdq
xor
pop
jecxz
xor
popf
out
mov
jp
push
and
fnstcw
not
stos
ins
daa
stc
dec
aam
cmps
stos
cmc
jno
sbb
push
mov
jp
push
adc
xchg
addr16
je
or
imul
scas
outs
inc
les
dec
xor
out
fadd
ins
jmp
test
cmp
outs
pop
push
push
push
(bad)
hlt
mov
pop
shl
mov
pop
sbb
cmp
das
out
inc
daa
loop
inc
jle
out
mov
leave
cld
cli
fld
imul
stc
jmp
push
call
int3
jne
cmp
ins
rcr
repnz
mov
cdq
(bad)
rol
aas
cmc
fidivr
repz
test
pop
nop
loop
aad
enter
rcl
in
fild
xor
xchg
stc
sti
mov
adc
stos
or
cmc
mov
push
mov
xchg
popa
cmp
out
mov
arpl
rol
inc
sbb
out
mov
ja
jbe
pop
xor
dec
jae
icebp
xchg
cmp
add
xor
dec
es
jle
jmp
or
rcr
jb
mov
and
out
lods
jae
in
out
sbb
mov
jmp
cdq
out
cmp
push
jb
mov
push
cwde
dec
aas
jp
imul
xchg
adc
fwait
sub
push
loope
sahf
fild
test
sub
lds
ret
movs
mov
cmp
fwait
ror
jmp
jmp
test
sti
lods
sbb
pop
xchg
into
xor
cmp
aas
ror
fisub
mov
loope
cmp
mov
dec
cmp
ja
lock
test
jg
dec
fist
les
test
inc
std
mov
(bad)
pushf
dec
nop
rcr
mov
mov
and
call
in
aad
lods
pop
xchg
fdivr
sahf
inc
test
cli
xor
xchg
xchg
adc
mov
int3
jae
mov
mov
jp
lds
daa
pop
adc
cmp
and
jg
movs
ret
cmps
mov
test
(bad)
leave
retf
je
scas
and
mov
daa
cmp
mov
pop
repz
push
sbb
and
test
mov
xor
movs
and
jno
bound
xlat
jnp
cmp
retf
outs
jbe
std
imul
mov
stos
mov
(bad)
mov
mov
or
stc
dec
loopne
or
xchg
jae
pop
pand
dec
jg
addr16
in
mov
add
jge
dec
dec
mov
(bad)
pop
push
(bad)
cmps
jbe
sbb
aaa
in
xor
dec
or
dec
mov
test
mov
aas
test
xchg
mov
push
pop
mov
or
adc
cmp
dec
xchg
jge
jns
mov
(bad)
hlt
or
ja
jle
(bad)
(bad)
push
loopne
dec
mov
js
data16
jge
loop
std
icebp
imul
test
xchg
lock
jmp
inc
pop
jnp
inc
push
in
inc
xor
ins
ror
mov
mov
bound
ss
dec
ja
sbb
lods
sub
(bad)
loopne
popa
mov
xchg
sbb
pop
clc
mov
lods
push
mov
xchg
dec
rol
hlt
mov
push
fstp
sar
sbb
cmp
ror
ins
mov
cmps
ds
popa
ins
add
dec
jg
push
int
aad
push
neg
mov
je
jno
jb
pop
pop
adc
inc
call
pop
cmp
fstp
std
sub
test
pop
pop
pop
not
mov
mov
dec
push
mov
adc
movs
xchg
cli
ins
jb
iret
int
pop
cmp
dec
or
xchg
jne
pop
mov
aaa
bswap
mov
ret
push
inc
mov
inc
loopne
mov
imul
clc
xor
fwait
pusha
xor
mov
rcr
or
cld
or
in
mov
mov
in
outs
(bad)
stos
ficom
stos
inc
adc
cld
xchg
ret
in
dec
mov
add
pop
sti
js
scas
jl
int
sub
retf
scas
(bad)
mov
idiv
mov
and
ins
cmp
ds
into
in
nop
fsub
cli
jae
pushf
mov
mov
sub
xor
fstp
mov
or
xor
xlat
inc
hlt
lahf
and
into
mov
fs
retf
cmp
push
xor
(bad)
iret
outs
and
xchg
adc
sbb
mov
pop
add
je
cmp
cld
shr
in
sbb
cld
scas
push
inc
or
inc
(bad)
and
jae
mov
pand
mov
adc
mov
cmp
xor
mov
retf
stos
push
sub
shl
popa
test
in
es
lods
lds
sti
xchg
je
or
test
push
retf
ja
mov
mov
cmp
retf
mov
add
into
jbe
cmp
add
pop
rcl
dec
dec
pop
fistp
repz
test
inc
mov
and
js
jmp
push
dec
pop
push
iret
adc
lods
xor
mov
mov
and
jmp
scas
jae
push
cmp
imul
mov
das
shr
lods
ins
dec
jmp
xchg
fs
xor
fld
test
jge
mov
loop
es
sub
enter
scas
mov
xlat
xchg
add
jo
jl
add
sbb
stos
mov
and
cmp
call
(bad)
pop
cmp
ja
pop
out
inc
inc
icebp
rcr
in
outs
dec
hlt
retf
hlt
mov
(bad)
jne
clc
mov
xchg
adc
lds
dec
hlt
int
rol
mov
loope
lods
add
and
loopne
cwde
ins
mov
and
out
out
(bad)
jl
pop
(bad)
retf
(bad)
push
dec
scas
jmp
mov
xlat
sar
add
inc
ds
add
int3
add
pop
sub
or
xchg
cmps
jp
adc
out
cmp
pop
scas
inc
enter
loop
or
xor
(bad)
addr16
(bad)
jmp
sbb
xor
sbb
mov
pop
out
popf
mov
dec
repz
out
lods
pop
movs
daa
call
sub
inc
mov
in
lock
fwait
add
sbb
mov
and
sub
push
scas
sub
add
add
je
bound
lds
int
mov
fidivr
and
inc
jno
cmp
xchg
lds
adc
cmp
lock
(bad)
mov
enter
repnz
cld
arpl
push
loop
repz
mov
fs
call
push
xor
mov
out
imul
cmps
shl
inc
xchg
test
es
bound
dec
push
jmp
or
retf
jl
ja
daa
bound
and
dec
test
arpl
adc
adc
and
fistp
mov
push
xchg
loope
push
mov
inc
xchg
cld
sbb
sub
test
mov
enter
loop
sbb
xchg
or
ins
shr
hlt
loope
add
dec
lock
push
sti
ficom
icebp
jge
push
sbb
dec
shr
and
loopne
les
loope
call
fsubr
aaa
xchg
out
cmp
push
inc
pop
xlat
xchg
ss
je
pop
xchg
push
jg
or
test
cmc
data16
movs
pop
and
inc
fadd
or
cdq
aaa
lds
mov
cli
js
adc
outs
imul
pop
push
sbb
fnsave
popa
jae
(bad)
aam
test
push
iret
clc
jle
add
pop
jecxz
or
mov
fucomip
sbb
ds
shl
pop
mov
sub
mov
adc
lds
movs
add
inc
sbb
cmp
or
stos
jmp
add
pop
and
cmp
bound
cli
mov
sahf
pop
inc
and
cli
iret
cmc
pop
repz
in
dec
inc
(bad)
sbb
sub
dec
pop
mov
mov
push
sahf
sub
cmps
pop
lods
test
or
xor
xchg
dec
es
outs
cli
and
or
cmp
movs
lahf
repnz
sub
xor
push
in
shl
sbb
pop
or
sbb
mov
cmp
js
sbb
fbld
mov
pop
sub
stos
jmp
mov
mov
mov
outs
and
cmp
pop
je
xchg
jbe
call
mov
ret
das
mov
aaa
sub
mov
inc
dec
imul
in
cdq
retf
enter
mov
mov
jl
jno
xchg
or
movsx
fisub
neg
cld
std
mov
(bad)
hlt
adc
outs
mov
pop
repnz
(bad)
cwde
mov
std
xchg
mov
in
pop
push
aam
in
push
mov
jbe
fcom
pop
xor
adc
jg
cs
jmp
inc
xchg
xchg
sti
mov
int3
dec
mov
mov
fwait
mov
sbb
xor
sbb
dec
jmp
inc
sbb
mov
(bad)
adc
clc
cmp
inc
and
or
jle
jmp
out
and
gs
pop
movs
push
adc
cld
dec
(bad)
add
jnp
retf
idiv
xor
dec
mov
ja
dec
movs
and
mov
xor
pop
(bad)
inc
mov
inc
mov
xchg
pop
ds
mov
arpl
push
inc
mov
mov
mov
enter
jge
fild
ss
jnp
rcl
leave
push
int
mov
pop
popa
inc
mov
dec
inc
jp
mov
mov
xor
repz
push
popa
call
in
adc
aad
fsubr
cdq
sar
mov
iret
ds
lahf
adc
cmp
popa
mov
pop
inc
in
xchg
jns
mov
ror
stc
inc
push
jge
jmp
fild
push
pop
jns
sub
sbb
and
std
test
dec
dec
jae
pop
lea
repnz
call
movs
jge
retf
fst
test
mov
fbld
sub
mov
lods
loope
mov
xchg
and
fs
fmul
cmp
clc
in
mov
hlt
js
ins
and
fdivr
xor
cmp
xchg
sahf
cs
ss
mov
clc
xchg
cdq
fwait
mov
dec
stc
retf
jnp
sub
test
sub
into
jae
lahf
bound
pop
cwde
loopne
mov
xor
dec
jmp
jnp
mov
imul
mov
dec
out
stos
sub
dec
outs
mov
cli
and
outs
repz
dec
cmp
cmp
push
aad
cmp
in
into
bound
ror
mov
cmps
xchg
clc
push
cmp
dec
xor
(bad)
(bad)
sti
cmp
inc
jno
sar
in
outs
imul
mov
stos
xchg
fs
cmp
mov
mov
add
outs
inc
cmp
xor
cld
mov
cmp
gs
xchg
loop
das
cmp
and
jp
ficom
push
dec
dec
mov
rcr
cmc
push
push
(bad)
loopne
cmps
or
xor
addr16
rcr
cmp
popf
out
mul
clc
dec
cmps
loope
fild
sub
sub
jmp
pop
xchg
adc
in
adc
fidivr
pop
mov
adc
push
pop
push
pop
lods
mov
push
pop
or
xor
mov
jge
leave
cld
popf
jl
mov
lods
outs
mov
sahf
cmp
push
aam
ins
push
push
or
adc
pop
lods
mov
leave
pop
bound
outs
sar
push
push
mov
adc
fidivr
dec
(bad)
sub
sub
sub
repz
jp
ins
ins
mov
aaa
jmp
push
inc
inc
(bad)
mov
lds
daa
sbb
shr
mov
adc
test
test
ret
dec
push
test
mul
movs
rol
fsubr
cwde
stos
int3
push
xchg
jl
xor
xor
mov
popf
inc
cdq
call
int3
js
inc
fnstcw
xchg
pusha
mov
jbe
add
jne
in
pop
stos
xchg
push
mov
loopne
jg
stc
out
jg
stc
out
xor
mov
neg
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
jecxz
jmp
cmps
cmp
mov
cdq
popf
push
cmps
in
cmp
data16
fcomp
cmps
mov
sti
cmp
add
mov
cld
js
jl
pop
aad
fidiv
ficomp
xchg
dec
xor
jmp
xchg
push
inc
push
leave
inc
cdq
pop
fcomp
jae
popa
mov
and
push
call
test
jmp
cmc
ds
sub
sar
cmp
pop
in
fs
and
loopne
jns
jae
rcl
das
dec
lea
push
push
cmp
mov
test
daa
repz
mov
lock
loopne
sub
repz
movs
pop
js
js
popf
push
pop
sbb
sbb
pop
sub
cdq
jno
cmp
fsub
cli
ret
mov
jb
pop
dec
jmp
xchg
xor
push
inc
mov
ins
mov
ja
or
dec
fisttp
(bad)
rol
sbb
jmp
addr16
fsubr
repnz
push
out
in
mov
push
popf
sbb
mov
cmp
add
jns
push
jmp
ins
fnstcw
or
add
xor
sub
sbb
inc
adc
test
sub
ins
lds
(bad)
sub
add
mov
dec
daa
jns
add
je
test
int3
cdq
inc
xor
knotw
jmp
data16
(bad)
in
test
dec
jmp
mov
std
enter
test
clc
dec
popa
enter
mov
outs
push
push
jb
mov
mov
jle
jnp
push
loope
aam
cmp
repnz
mov
dec
lods
cmp
addr16
loop
fmul
mov
sub
int3
aad
or
or
push
inc
pop
mov
and
mov
(bad)
ret
scas
mov
push
pop
sti
dec
mov
aam
dec
cwde
mov
imul
mov
ins
or
stos
stos
lahf
cmp
xchg
arpl
dec
leave
cld
lods
inc
pop
scas
aam
lods
or
push
in
ins
call
inc
test
mov
pop
mov
inc
xchg
es
mov
xor
es
les
addr16
push
imul
pop
cmp
movs
and
shl
repz
es
inc
sub
jle
pushf
test
lock
out
sub
cmp
xchg
mov
push
into
sub
cmp
inc
xor
mov
aaa
xchg
push
das
xchg
xchg
(bad)
xor
mov
loope
or
pushf
jne
scas
fistp
and
xchg
and
outs
fdiv
jl
adc
xchg
lock
out
ins
or
pop
xlat
xchg
inc
push
dec
sbb
push
aaa
(bad)
mov
dec
and
jl
loope
sub
cdq
in
xchg
pop
mov
and
lock
(bad)
stc
fisttp
dec
add
cmps
cmp
and
fstp
and
sbb
popf
pushf
rcr
popa
adc
imul
push
mov
pop
mov
fs
hlt
retf
repz
push
mov
loope
lock
fcomp
cmp
cmp
mov
mov
test
jecxz
ins
aas
jmp
inc
pop
ds
aad
test
mov
dec
add
mov
fld
sbb
xchg
jmp
movs
or
call
sbb
pop
cmp
push
mov
addr16
mov
retf
xchg
xor
in
out
mov
xchg
push
jecxz
inc
out
shr
mov
std
add
fist
jge
pop
pop
dec
or
sbb
in
out
(bad)
movs
mov
and
pop
cdq
int3
jae
ins
aam
cmp
jne
cs
daa
dec
cmp
(bad)
cmps
test
retf
cs
cmp
shl
pop
push
(bad)
push
js
test
movs
pop
inc
add
jp
add
pop
push
je
cmp
jge
inc
ins
pop
or
add
mov
inc
and
test
pop
test
stos
je
ud2
inc
push
ss
repnz
pop
retf
push
je
add
int3
sub
hlt
stc
inc
jmp
sbb
add
rcl
cmp
mov
div
and
push
sub
xchg
or
jbe
pop
mov
(bad)
call
dec
js
inc
inc
(bad)
nop
sbb
fdivr
or
sahf
adc
or
pushf
pop
fisubr
lods
je
and
and
inc
inc
out
popa
xchg
mov
cmp
push
xchg
pop
mov
sub
retf
cs
push
xor
or
mov
add
out
xor
gs
and
ret
pusha
pop
and
and
dec
adc
push
scas
sbb
pushf
mov
adc
sub
loopne
ins
or
jae
jo
aad
les
adc
jecxz
sub
mov
push
mov
sub
xor
sub
popf
cmp
lahf
sub
out
jbe
pushf
mov
sub
js
push
aas
(bad)
imul
mov
cmp
mov
push
movs
les
stos
pop
ret
push
xchg
rcl
aam
test
leave
inc
mov
ss
adc
movs
pop
or
jecxz
sti
and
jecxz
dec
test
push
lods
inc
iret
jb
pushf
les
imul
add
iret
and
sti
fild
jbe
jns
imul
js
xor
ins
pop
mov
data16
mov
inc
addr16
xchg
inc
inc
or
add
cmp
ins
inc
jg
(bad)
(bad)
imul
mov
sbb
pushf
mov
jno
sub
mov
call
cld
inc
adc
dec
push
in
into
repz
sub
std
stos
push
add
inc
int3
jp
mov
aas
mov
jns
inc
mov
adc
ret
paddd
push
sub
xchg
sub
inc
sbb
dec
cmp
lods
repnz
push
add
mov
mov
jmp
jne
rol
jl
pop
cmp
pop
js
jnp
xchg
pop
pop
fcmovnb
mov
dec
dec
pop
data16
sahf
jmp
mov
hlt
iret
icebp
fwait
cdq
test
mov
and
les
cdq
add
scas
xchg
ror
cwde
ficom
rdpmc
loope
mov
arpl
sbb
stos
test
sub
ret
das
or
xchg
inc
fimul
(bad)
int
movs
jne
xchg
es
or
cmps
cmp
mov
sbb
push
sub
xchg
rol
leave
arpl
shr
idiv
cwde
or
ins
ret
cmp
jmp
mov
in
cmps
das
push
sub
ffreep
neg
mov
pusha
push
push
fcom
mov
out
sub
jmp
mov
cmp
sub
jns
mov
xchg
(bad)
pop
retf
mov
xchg
xchg
sub
mov
in
mov
iret
fwait
pop
sbb
(bad)
and
scas
jb
out
out
add
sbb
clc
dec
inc
jbe
lds
xchg
repz
mov
push
jg
sbb
inc
imul
add
fsub
pop
out
dec
fistp
in
pop
fistp
cmp
in
dec
aaa
mov
neg
inc
and
mov
aas
std
sahf
cmps
cmps
dec
lods
or
call
aam
retf
(bad)
mov
push
mov
je
mov
adc
xor
xchg
loop
xchg
jl
mov
aad
xlat
lds
inc
mov
add
fwait
xchg
in
xchg
inc
xchg
push
fstp
push
mul
mov
arpl
ss
imul
xchg
dec
pop
outs
(bad)
jmp
imul
mov
adc
xchg
mov
jmp
iret
call
or
mov
test
inc
mov
jmp
lahf
adc
in
movs
cmp
cmp
out
mov
fwait
inc
int3
retf
sub
xchg
adc
in
ins
test
data16
add
cmp
ins
cmps
jecxz
push
and
fdivr
pop
or
dec
pusha
aam
icebp
pop
(bad)
in
dec
add
mov
mov
pop
push
mov
lahf
sti
cmc
int
dec
imul
test
sbb
sbb
loopne
push
push
popa
arpl
imul
add
fs
out
and
and
into
push
pop
inc
jle
repz
sub
and
cmp
mov
in
clc
ja
lods
sti
test
pushf
icebp
mov
aad
retf
add
out
pop
out
mov
lods
int
mov
test
or
inc
shl
jb
imul
sbb
clc
mov
(bad)
lods
test
jne
test
ja
or
xor
in
sub
scas
inc
add
sub
repz
sti
test
daa
jp
dec
cdq
add
fcomip
aaa
sub
dec
and
fwait
or
mov
jge
push
pop
mov
cmp
jmp
inc
shl
mov
cmps
stos
push
mov
mov
jmp
push
mov
scas
cdq
ret
or
cmp
adc
fucomi
dec
fstp
cld
scas
jo
mov
jg
adc
loope
lods
jo
ret
jb
inc
mov
fstp
sub
shl
mov
rcr
cmp
outs
inc
imul
xor
mov
push
loopne
mov
xchg
ret
xor
jae
sub
fdiv
ret
ja
jmp
inc
popf
sub
ds
cmp
cmp
stc
mov
repnz
imul
xchg
in
arpl
in
pop
aam
(bad)
and
jns
int3
push
or
jecxz
fchs
xchg
test
pop
mov
iret
(bad)
idiv
jbe
rol
ret
push
retf
call
call
shl
xchg
inc
xchg
call
push
mul
ss
clc
xchg
es
(bad)
xchg
mov
ds
cld
and
jge
mov
jle
push
push
ret
fimul
cmp
leave
sub
(bad)
xchg
and
jb
inc
push
cmps
cld
out
lock
jle
jne
lea
xchg
test
push
push
sub
lods
push
cmps
inc
push
mov
mov
cmp
push
add
jmp
sub
loope
adc
xchg
mov
jb
jnp
aas
fidivr
and
pop
pop
retf
dec
shl
fsubp
test
ficomp
sub
call
adc
rcr
inc
mov
fwait
mov
inc
mov
daa
ficom
mov
mov
add
cli
sbb
sub
adc
push
ds
lds
rcr
and
ja
idiv
fcomp
sbb
mov
leave
sub
bound
mov
in
or
bound
cmp
push
shl
test
mov
xor
adc
push
sbb
add
jmp
jns
pushf
sub
xor
xor
enter
xchg
daa
mov
mov
iret
and
std
cmp
and
outs
fisubr
les
daa
mov
or
mov
aaa
dec
xchg
sbb
ret
scas
(bad)
push
test
test
das
push
ins
jb
adc
xchg
push
mov
jge
data16
pop
outs
pop
jbe
ror
mov
icebp
shl
dec
add
mov
retf
pop
cld
(bad)
jb
into
and
dec
in
in
adc
in
xlat
jnp
mov
xchg
fbld
loope
jno
cmps
pop
xchg
loope
jmp
mov
adc
js
pushf
or
dec
sbb
(bad)
pop
add
daa
cmp
hlt
sub
repz
repnz
call
cmp
mov
repz
not
repnz
sbb
stos
push
and
ss
cmp
into
pop
or
(bad)
inc
jmp
cmps
jo
push
fisub
jmp
imul
fld
in
mov
mov
call
push
sbb
jg
mov
adc
out
cwde
dec
fild
arpl
cmp
dec
test
jnp
dec
test
add
dec
sub
int3
push
fistp
push
xchg
pop
lock
pop
mov
lahf
push
and
adc
or
clc
addr16
push
rcr
fs
jo
jge
inc
popf
push
stos
inc
sub
outs
pop
cmp
adc
nop
push
xor
mov
mov
jnp
shr
sbb
or
test
adc
add
out
cmp
call
sbb
sub
mov
fidiv
arpl
loop
test
mov
mov
xchg
leave
cmps
pushf
lods
les
xchg
dec
sub
fsub
add
xchg
add
jmp
mov
mov
sahf
and
dec
jmp
jb
in
inc
cmc
dec
xchg
push
popf
fucomi
pop
dec
loop
mov
inc
pop
jbe
retf
push
aad
stos
xor
sbb
mov
dec
test
dec
lea
jl
fst
retf
fimul
push
dec
adc
xchg
(bad)
div
cli
out
pop
mov
xlat
jne
bnd
adc
sbb
repnz
int3
(bad)
jmp
inc
in
jmp
mov
call
mov
in
jg
pop
aad
jne
mov
hlt
popa
rcl
xor
ins
das
jno
fdiv
in
mov
jp
push
hlt
fmul
dec
shl
lock
imul
jbe
cwde
xchg
lock
and
push
push
mov
inc
dec
fild
(bad)
enter
push
div
stc
and
jns
sub
mov
mov
jp
movs
jno
push
loope
retf
xchg
and
pop
and
out
movs
jp
push
call
mov
nop
mov
ror
jnp
sub
jmp
loope
leave
(bad)
call
aas
xchg
jbe
jbe
fisttp
adc
and
pop
call
aaa
mov
xor
push
iret
arpl
(bad)
push
inc
fild
scas
push
mov
call
call
pop
enter
xchg
stos
mov
push
mov
jp
xchg
push
rcl
inc
mov
cmp
je
mov
imul
lods
and
repnz
mov
xor
in
shl
popa
dec
jbe
cmps
clc
inc
cmps
cmps
mov
cmp
inc
or
sub
aaa
or
adc
jno
or
cs
cli
push
mov
inc
call
mov
fist
icebp
pop
stos
jno
sub
enter
test
stos
rol
mov
adc
fs
jl
clc
or
adc
lods
mov
cmp
retf
stos
push
or
jo
jl
pusha
fcom
cmc
shr
rol
popf
inc
jbe
sbb
stc
xchg
sbb
retf
mov
add
or
push
inc
xor
(bad)
out
sti
sahf
repnz
xchg
sub
movs
pop
sar
xor
xor
push
mov
push
leave
stos
int
and
mov
dec
and
gs
sbb
xchg
xor
cs
or
repz
sti
mov
icebp
cmp
dec
mov
xchg
push
xchg
cmp
out
sahf
mov
js
pop
aad
popa
loope
jg
call
scas
jp
out
shr
imul
adc
sar
movs
sbb
cmps
and
push
jmp
fisttp
mov
inc
(bad)
stos
xchg
sahf
cmp
les
daa
sbb
addr16
jne
jge
stc
add
xlat
adc
adc
xor
push
xlat
push
mov
and
jne
add
ja
lods
lahf
mov
jmp
aad
jecxz
sar
push
and
adc
test
leave
movs
retf
mov
fs
int
push
mov
mov
push
(bad)
ret
arpl
mov
(bad)
dec
icebp
push
adc
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
aas
pop
(bad)
imul
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
mov
mov
hlt
sbb
cmps
pushfw
ss
ror
dec
dec
out
out
out
cwde
call
push
shr
mov
icebp
add
push
and
sbb
fcmovu
adc
sbb
cmps
loopne
lods
aam
sbb
mov
jmp
jbe
in
cmp
mov
jae
outs
inc
xchg
fidivr
shr
fisubr
fnsetpm(287
and
or
push
cli
ja
std
mov
ins
test
xchg
fdiv
push
xchg
mov
and
dec
mov
lods
mov
mov
jp
btc
and
jg
leave
jl
out
repnz
mov
out
ins
nop
(bad)
dec
and
and
cmp
js
in
mov
fidiv
mov
enter
js
push
mov
and
arpl
jbe
xchg
mov
bound
xor
rcl
mov
jg
leave
rol
mov
mov
add
cdq
test
repz
cmp
mov
adc
jmp
in
xor
sti
inc
lock
daa
call
loopne
jnp
dec
adc
dec
mov
dec
fisub
cmp
xchg
or
fcmovbe
xchg
pop
sub
fild
retf
jo
aam
push
lods
(bad)
in
mov
out
imul
inc
cmp
neg
enter
pop
push
push
mov
popa
pop
je
cdq
pop
jge
cmp
icebp
xlat
pop
aam
inc
vpsrlw
mov
out
mov
add
mov
and
fwait
repnz
or
cmp
sbb
sahf
cli
ret
mov
shl
aas
inc
dec
into
scas
dec
xor
inc
jp
es
pop
int
ja
and
mov
mov
imul
test
mov
stc
repnz
aad
in
push
sbb
jg
xor
mov
call
jl
pop
cmp
and
sar
daa
dec
sbb
ins
repnz
mov
adc
cmps
adc
cli
arpl
cmp
or
adc
pop
mov
xchg
mul
inc
cmc
sbb
imul
imul
test
clc
jnp
cmps
inc
mov
in
out
fist
sub
mov
cmp
jmp
jnp
jo
and
and
sub
lea
in
imul
cdq
ret
int3
jp
push
retf
loope
frstor
pop
ror
add
cmp
cmp
fisubr
xor
mov
push
int
or
ss
(bad)
mov
fwait
out
and
adc
lods
mov
cmp
push
rcr
lea
nop
(bad)
retw
pusha
(bad)
out
sub
mov
ret
pop
add
sub
mov
dec
jno
in
adc
mov
nop
adc
mov
jmp
xor
mov
sub
jae
fsubr
call
dec
xchg
pop
bound
lds
sub
nop
lahf
call
in
scas
mov
icebp
shr
fstp
add
test
xor
scas
in
sub
push
sbb
call
add
loope
arpl
call
inc
push
(bad)
xor
sub
test
div
xchg
xchg
and
imul
adc
jbe
push
cmp
cdq
leave
faddp
mov
fsub
fisttp
cmp
lea
scas
pushf
mov
cmps
mov
push
pop
and
enter
xlat
or
jb
lsl
fwait
mov
test
dec
ss
lahf
loopne
nop
xchg
out
or
hlt
arpl
ror
(bad)
ss
gs
dec
xlat
lock
into
jnp
push
or
mov
xor
jp
fstp
dec
fst
loopne
adc
adc
jbe
bound
sbb
jo
adc
sbb
ins
bound
repz
ja
lea
jno
inc
adc
inc
cmp
sbb
jno
push
sbb
xchg
xor
xchg
retf
sub
add
test
lock
in
inc
fld
or
add
sbb
aad
in
loopne
jnp
jecxz
xor
or
cli
push
mov
dec
cmc
xchg
pop
cmp
(bad)
jp
push
fisttp
push
mov
(bad)
dec
xor
das
mov
inc
push
test
cmps
pop
pop
sbb
xor
cmp
fisubr
push
add
add
dec
fucomip
int
pop
xchg
lds
(bad)
mov
inc
jae
jns
pop
lahf
jno
mov
mov
jno
dec
in
popf
push
scas
xor
cmp
sti
push
out
sbb
loopne
(bad)
int3
popa
jo
add
mov
test
std
es
and
mov
xor
dec
dec
int3
mov
or
(bad)
jb
mov
adc
lea
pop
std
cwde
pop
movs
push
aaa
xchg
lods
adc
pushf
cmp
mov
repnz
imul
cs
bound
push
lahf
or
into
popf
in
fcomp
(bad)
(bad)
push
scas
push
out
push
xor
mov
ds
iret
mov
push
inc
dec
dec
loope
or
cmp
sbb
dec
dec
icebp
jb
ret
mov
mov
and
pushf
dec
sub
add
lea
pop
hlt
cmc
sbb
rcr
pop
imul
jne
cmp
rcl
mov
mov
fstp
push
cmp
sbb
dec
inc
mov
jae
inc
mov
ja
and
sbb
mov
jle
addr16
test
jecxz
stc
out
add
scas
daa
mov
and
pop
dec
lds
loopne
sub
ror
loope
fnstenv
mov
pop
adc
xchg
inc
test
lods
pusha
xchg
mov
stos
adc
aaa
data16
sti
cdq
mov
xchg
call
push
mov
xor
sahf
ret
lods
jo
adc
repz
xchg
or
fcos
ds
inc
aas
push
push
stos
fmulp
or
movs
push
cmp
xchg
cld
cs
sbb
aam
leave
push
(bad)
into
adc
iret
add
in
dec
cmc
mov
repnz
and
sbb
jnp
(bad)
and
push
jnp
mov
cwde
test
add
add
mov
xor
add
push
int3
cwde
or
inc
and
clc
sub
gs
aaa
pop
mov
dec
xchg
inc
cli
and
call
xchg
sub
fwait
outs
dec
int3
pop
retf
lahf
dec
inc
mov
jae
cmp
(bad)
inc
push
in
jge
adc
(bad)
push
mov
sub
sbb
mov
sbb
pop
je
pop
repz
fild
clc
(bad)
fcmovne
jns
sete
icebp
fdivp
ja
cs
mov
sub
fs
loop
arpl
jbe
js
daa
xchg
leave
sbb
pop
ds
js
jg
mov
imul
inc
dec
(bad)
xor
and
push
dec
xlat
mov
push
push
dec
jmp
sbb
and
cmp
in
jnp
mov
cmp
mov
mov
sub
rcr
popa
dec
fwait
lahf
xchg
lods
js
xlat
cmp
push
stc
mov
aas
pop
jnp
addr16
mov
lds
mov
repz
arpl
int3
sar
push
std
ss
(bad)
sbb
test
jl
test
mov
dec
xchg
clc
pop
mov
xor
leave
or
imul
sbb
cmp
pop
mov
pop
xor
hlt
popa
and
jo
sti
das
pop
cli
cs
inc
xlat
shr
push
cmc
xor
fisubr
imul
jbe
fstp
pop
in
popf
int3
cld
push
jno
sub
out
mov
ss
pop
inc
test
mov
arpl
pop
loope
jnp
enter
(bad)
out
je
mov
mov
ror
xchg
iret
jmp
adc
fnstenv
lods
test
in
clc
inc
out
mov
arpl
ficomp
ret
lock
cmp
test
push
mul
aad
call
stc
xchg
lds
lods
lods
jle
push
xor
push
in
cmp
and
fnop
jb
inc
lods
add
cmp
xchg
xor
je
int
aad
int
inc
xor
test
sbb
scas
and
loopne
push
retf
js
(bad)
xchg
sub
pop
cmp
pop
jmp
adc
aad
mov
pushf
sub
push
mov
fist
aaa
aaa
mov
movs
fs
inc
adc
(bad)
bound
scas
popf
sub
sbb
dec
aas
push
pop
xor
xchg
mov
int
adc
sbb
fwait
jnp
and
clc
sbb
mov
das
popa
mov
(bad)
repnz
cdq
inc
dec
js
outs
retf
movs
mov
popf
pop
fiadd
jnp
dec
adc
pop
dec
mov
inc
cdq
xchg
jb
pop
xor
(bad)
jmp
sbb
sub
sub
inc
cmp
retf
pop
mov
xchg
das
inc
jmp
ds
pop
jbe
jno
lahf
in
xor
pop
or
mov
sbb
retf
push
mov
pop
push
jbe
lock
repz
pop
imul
std
adc
int3
inc
push
push
test
jg
das
mov
mov
or
in
adc
addr16
aaa
cmps
daa
cmp
add
nop
pop
jge
(bad)
test
call
loopne
mov
pop
sar
mov
pushf
mov
dec
push
cmps
test
and
sub
mov
jo
and
and
aaa
out
int3
(bad)
loop
fist
stc
loopne
jae
xor
(bad)
xor
jnp
(bad)
cmp
pushf
les
inc
push
jno
fsub
add
pop
daa
xor
scas
data16
in
out
cmp
addr16
call
ins
push
jg
pushf
(bad)
aam
or
sbb
call
sbb
push
fisttp
enter
dec
out
dec
out
fnstsw
fbstp
scas
adc
movs
sbb
inc
ins
in
popa
sar
aaa
sbb
pop
adc
leave
fstp
retf
cmps
fcomp
pushf
nop
inc
sbb
or
pop
mov
mov
nop
popf
(bad)
(bad)
into
xchg
aas
push
fldlg2
pop
or
and
lahf
test
mov
inc
retf
call
lods
pusha
lea
ja
les
jno
repz
mov
imul
cmp
inc
push
sahf
push
dec
pop
jmp
aaa
dec
dec
cli
ror
mov
xchg
pusha
sub
rol
gs
(bad)
call
cmps
pop
outs
push
xor
or
ret
aas
iret
dec
push
repz
int
mov
mov
xchg
stos
mov
addr16
ins
sub
adc
jg
cdq
stos
jge
jp
dec
into
pop
or
fimul
int
cli
repnz
mov
jmp
dec
pop
push
xchg
cwde
and
shl
mov
test
in
cdq
in
dec
retf
mov
lock
es
(bad)
sub
add
popf
sub
push
ret
push
cmp
mov
cmp
and
jo
jbe
int
or
scas
aad
lods
enter
mov
add
test
pop
aas
bound
pop
std
mov
inc
leave
sbb
cli
lock
ds
cdq
xchg
cmp
cwde
ret
pop
dec
fs
and
push
dec
js
call
std
add
test
lods
xor
inc
dec
popf
ss
pop
push
push
xchg
dec
in
mov
data16
mov
jg
adc
jo
xchg
test
stos
xchg
pop
xlat
sub
push
ins
stc
adc
dec
fwait
xor
es
das
fwait
push
sbb
jge
stos
movs
int3
xor
cmps
dec
popf
mov
inc
ss
cmp
inc
mov
xchg
pusha
or
pop
or
adc
into
cwde
lods
xchg
push
xor
and
imul
pop
fwait
mov
adc
lds
loopne
gs
dec
lds
fsub
fs
pop
out
mov
std
jnp
test
inc
cdq
sub
out
lods
shl
fild
out
push
push
aas
and
cmps
inc
xor
enter
fcmovu
add
nop
mov
mov
inc
movs
addr16
fimul
xor
lahf
jecxz
push
push
js
seta
inc
lds
dec
int
lahf
int
fstp
in
outs
cmps
sbb
outs
push
inc
stos
jg
sub
movs
or
lods
shr
lea
and
mov
pushf
or
dec
inc
sub
jmp
daa
inc
cs
xchg
(bad)
push
(bad)
sahf
shl
dec
out
test
inc
sbb
sbb
imul
jb
lds
mov
test
out
outs
ja
push
pop
mov
mul
cmp
repnz
loopne
cmps
aam
adc
(bad)
push
arpl
sbb
jle
out
mov
jl
mov
pushf
push
js
jmp
fld
push
out
movs
ja
mov
fwait
push
cmps
or
jle
and
enter
mov
pop
pop
pusha
and
jae
pop
mov
push
sbb
scas
repnz
inc
dec
add
sub
imul
jno
test
adc
dec
ja
(bad)
push
sub
in
leave
jg
xor
jge
cmps
or
mov
xor
ds
loope
inc
(bad)
lods
jnp
sub
sub
push
jmp
out
and
aas
loop
xchg
jl
mov
cmovae
xchg
mov
mov
xchg
repz
xchg
(bad)
ja
leave
push
jno
pusha
jno
cmp
sbb
xchg
jb
cmp
(bad)
(bad)
or
sub
jmp
add
call
(bad)
movs
push
ret
icebp
mov
adc
fwait
sahf
push
inc
or
and
mov
or
ins
js
in
push
dec
add
pop
stos
and
addr16
sub
jb
cmp
(bad)
fst
in
inc
iret
fwait
jle
movs
push
(bad)
adc
xchg
push
and
sub
leave
pop
leave
xor
jb
or
pop
int
push
ret
or
jecxz
idiv
cmp
fwait
addr16
xor
xlat
sub
lock
loope
out
mov
and
ror
dec
cmp
mov
mov
sti
pop
pop
gs
fidivr
outs
stos
push
and
dec
arpl
push
and
jne
clc
and
jmp
outs
xlat
dec
arpl
mov
jecxz
ror
inc
xchg
and
movs
in
mov
call
push
hlt
pop
or
pushf
mov
mov
add
mov
iret
pop
nop
aaa
inc
and
push
bound
aas
jno
cmp
mov
loope
ins
xchg
dec
mov
jae
loop
daa
xchg
jg
cmc
mov
test
mov
pop
add
pop
or
(bad)
in
jg
xchg
aam
sub
outs
xchg
and
sbb
imul
pop
cmp
xchg
cmc
test
and
(bad)
inc
sub
and
imul
data16
jmp
mov
adc
iret
pop
adc
sbb
xor
imul
jae
dec
les
cmp
ja
xor
(bad)
clc
pop
xchg
fwait
(bad)
cmp
dec
jmp
lods
dec
dec
inc
movs
imul
sbb
cmc
in
jne
lahf
aaa
aad
pop
sti
rcl
mov
int
daa
mov
cdq
add
dec
(bad)
mov
fwait
mov
jmp
test
jnp
std
shl
movs
xor
pop
mov
gs
cwde
lea
mov
xor
ins
push
call
and
addr16
or
pop
sub
inc
dec
cdq
jecxz
pop
jae
es
data16
push
mov
call
into
mov
mov
jecxz
ja
not
mov
xor
inc
gs
and
ds
cmp
cli
cli
cmc
xor
mov
lahf
pushf
xlat
call
imul
idiv
cli
pop
cmp
daa
scas
neg
mov
in
std
lock
jnp
out
loope
mov
and
leave
test
loop
movs
inc
bswap
aas
(bad)
pop
xchg
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
sbb
mov
add
loop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
call
jmp
sbb
ret
cmps
stc
xor
mov
cmps
mov
les
in
repz
loope
push
pusha
mov
movs
retf
adc
adc
cmp
sub
pop
jnp
stos
add
aad
cmp
in
shl
movs
add
jecxz
addr16
mov
sbb
or
adc
sbb
scas
std
or
sar
in
mov
mov
fucom
js
mov
xchg
scas
mov
shr
pop
nop
sti
dec
push
in
mov
ds
clc
addr16
daa
aaa
xchg
aam
jg
xchg
xchg
dec
out
nop
ret
and
lds
inc
cmp
pop
clc
add
pop
jne
(bad)
stos
ins
shr
test
adc
addr16
xor
sahf
mov
and
jns
and
xchg
stc
hlt
mov
adc
popa
inc
mov
repz
pop
sti
dec
mov
es
stc
push
jnp
xchg
out
or
adc
and
lds
mov
xor
(bad)
xlat
jmp
call
in
es
aad
rcl
jp
and
hlt
dec
mov
inc
jge
push
push
jnp
icebp
sub
add
push
ds
dec
xor
pop
adc
sar
adc
mul
pop
call
pop
mov
xchg
cmp
sub
cmps
and
es
pop
movs
pop
push
test
outs
pop
cld
lea
outs
out
ror
jne
dec
or
push
outs
fs
dec
jae
dec
test
(bad)
leave
mov
retf
jge
movs
(bad)
xchg
xchg
add
adc
xchg
and
dec
xchg
hlt
or
fld
xchg
or
retf
pop
mov
inc
push
dec
and
ds
sub
push
sbb
cli
popf
into
loope
adc
imul
aas
loope
inc
out
fdiv
sub
jnp
inc
not
sub
jmp
arpl
push
jne
ds
hlt
inc
inc
pop
nop
xor
cdq
mov
xor
pop
nop
push
pushf
test
jae
dec
cmc
lahf
mov
push
adc
outs
jns
js
sbb
cld
xchg
mov
push
xor
mov
fwait
mov
les
cld
sahf
das
es
xor
cmp
adc
xlat
inc
gs
daa
mov
push
jne
mov
call
fcomp
inc
mov
jg
out
push
xchg
aad
add
sub
pop
xor
push
add
push
mov
out
jg
jle
mov
add
pop
jecxz
push
add
(bad)
ror
mov
mov
aaa
arpl
mov
js
lds
xchg
and
dec
mov
mov
sub
jg
jno
xchg
sub
or
cs
cmp
mov
rcpps
es
mov
xchg
into
aaa
sbb
and
test
out
out
aam
iret
aad
xchg
push
xor
cmps
xchg
test
call
jne
pop
cmps
(bad)
popa
inc
push
test
sub
mov
xchg
fwait
lods
mov
fimul
sub
(bad)
pop
mov
jne
jl
xor
cmp
into
or
jae
stos
pop
out
jbe
test
call
fcomp
or
sbb
neg
pop
ror
cmp
mov
test
loope
jne
iret
sub
push
mov
cli
xchg
pop
aam
sub
jg
pop
mov
mov
mov
cld
hlt
or
es
or
xchg
mov
hlt
imul
in
dec
retf
(bad)
icebp
sbb
out
mov
xor
mov
mov
sbb
sub
out
ds
or
inc
or
sub
cmp
jb
jle
xchg
xchg
cli
adc
outs
cmp
sbb
mov
addr16
mov
lahf
in
push
mov
mov
sub
dec
xor
rcr
jae
push
pop
repz
dec
mov
cmc
aam
pop
leave
pop
and
out
xchg
push
jbe
fstp
(bad)
or
stc
loop
test
das
adc
jae
push
xor
mov
fmul
lods
adc
adc
push
or
test
sub
inc
shl
mov
std
cs
rcl
bound
mov
xchg
outs
call
dec
cmp
repz
push
mov
leave
push
sub
(bad)
fdivr
stos
jge
xchg
jo
fdivr
and
loop
mov
jne
arpl
sub
push
retf
test
leave
ja
sar
out
add
jbe
push
and
xchg
shl
xchg
sahf
jp
mov
mov
mov
xchg
and
dec
fwait
push
add
test
cmp
cs
mov
rcl
test
fisttp
xor
dec
fcmovne
xlat
mov
sbb
lds
imul
data16
int3
and
mov
loop
jecxz
test
mov
dec
mov
mov
pop
cmp
jno
std
ins
xlat
popf
mov
retf
dec
jle
inc
cmp
int
dec
and
(bad)
xchg
sbb
lods
les
stos
mov
rcr
aad
mov
aas
push
mov
aas
std
lods
jae
push
add
retf
les
sub
cld
pop
das
repz
or
jmp
dec
shl
fstp
sub
inc
jecxz
inc
xlat
push
jno
cmp
out
or
push
cmps
jmp
sbb
xchg
pusha
aam
leave
fst
sub
sub
lea
lods
mov
enter
dec
cmps
rcl
inc
dec
in
fnstenv
pop
dec
ja
out
pop
in
pusha
nop
mov
sti
data16
cmp
ds
jle
ins
test
xchg
pushf
cmc
das
mov
fcomp
bnd
movs
imul
mov
or
nop
(bad)
cmp
mov
retf
lods
xchg
stc
cmp
imul
push
add
push
or
ret
or
mov
int
loope
add
sub
xchg
(bad)
fst
shl
mov
sub
call
outs
aas
xchg
push
mov
neg
cmp
and
mov
mov
jge
push
inc
push
daa
lods
shl
xchg
ficom
xlat
mov
cmp
js
push
xlat
jle
jg
jmp
aad
stos
push
iret
in
mov
xchg
jl
jne
call
popa
retf
mov
stos
cs
mov
ror
dec
mov
mul
das
xchg
pop
out
ror
xchg
stos
mov
int3
(bad)
xor
les
mov
fisub
inc
imul
imul
cmps
dec
ss
jno
mov
lds
das
jmp
mov
or
inc
sbb
out
mov
mov
dec
jmp
bound
leave
into
rcl
mov
dec
mov
int
jmp
dec
scas
jle
imul
fimul
scas
xchg
jmp
iret
add
xchg
out
cmp
iret
inc
cmp
xchg
sub
xchg
mov
icebp
aam
pop
mov
fdivr
(bad)
retf
push
xchg
test
inc
jns
in
and
gs
add
ds
xchg
sbb
ffree
xchg
jns
add
ret
dec
adc
sub
jg
xor
mov
out
and
inc
ret
xchg
aam
mov
lds
popf
pop
mov
pop
mov
(bad)
and
std
popf
mov
loop
pop
inc
sbb
dec
pop
dec
dec
and
mov
sti
addr16
mov
inc
push
test
mov
lods
paddw
mov
(bad)
dec
cmp
call
pop
push
out
mov
(bad)
pop
sbb
xchg
mov
sub
mov
sti
xchg
popa
in
push
xchg
jge
adc
ins
(bad)
adc
mov
pop
jns
pop
sub
dec
or
retf
(bad)
iret
hlt
jo
xchg
out
or
(bad)
pop
ret
icebp
les
rcl
hlt
in
xchg
and
test
(bad)
div
push
retf
cdq
fisub
sar
dec
out
nop
sub
scas
mov
lods
and
lds
aaa
or
iret
in
inc
pop
mov
lds
(bad)
cli
pusha
sti
rcl
jmp
retf
daa
into
stos
mov
loope
call
adc
cmps
sbb
bnd
leave
push
cmp
jle
je
cmp
pop
push
sub
jmp
scas
jge
repz
cld
out
pop
pop
lahf
jmp
inc
mov
mov
pushf
aas
dec
fbld
ret
in
inc
fwait
xchg
xchg
dec
out
add
in
loop
and
sbb
inc
pop
(bad)
(bad)
imul
jno
push
sar
into
dec
int
repz
das
dec
push
push
fidivr
fistp
bound
cmp
into
sub
mov
add
inc
lds
(bad)
popa
pop
pop
gs
xchg
lahf
imul
ins
adc
mov
sti
sbb
push
push
fcom
fisttp
push
pop
push
sbb
jp
ret
add
scas
aaa
push
adc
int
scas
jne
and
ins
aas
and
test
xchg
inc
jg
and
pop
push
cli
fld
rol
loope
dec
pop
ret
ret
push
outs
inc
mov
push
push
add
(bad)
les
mov
retf
retf
jmp
shl
(bad)
pop
mov
push
cmp
imul
loopne
jmp
pop
sbb
push
inc
bswap
adc
sti
dec
fistp
fcmovu
adc
and
retf
(bad)
sub
ror
sbb
stc
push
mov
inc
mov
cmps
shl
shl
(bad)
jbe
sub
(bad)
in
cs
lds
dec
jns
pop
adc
fldcw
dec
popf
call
enter
jbe
pop
or
outs
and
lds
push
jmp
pop
lock
pusha
xchg
pop
lahf
sub
fisubr
and
sar
cmp
inc
xchg
arpl
cmps
aam
scas
inc
and
test
test
mov
pop
inc
mov
xchg
xor
inc
lods
or
icebp
inc
int
push
push
mov
les
xor
dec
push
xlat
mov
and
stos
lahf
sti
mov
std
mov
jle
daa
mov
mov
jne
xchg
cmp
lods
mov
lods
inc
add
(bad)
call
pop
mov
loope
dec
pop
lahf
fadd
push
(bad)
mov
fcomp
mov
rol
mov
add
jnp
xor
mov
aam
or
xor
cmp
ins
mov
mov
mov
mov
or
xor
sbb
mov
jp
clc
loope
sbb
push
xor
and
mov
push
leave
cmc
repz
jl
in
jmp
je
cmps
mov
pop
sub
pop
jmp
xchg
pop
mov
es
fbld
inc
mov
and
bound
lea
fistp
sbb
xor
mov
retf
dec
call
xchg
shl
cdq
rcr
pop
xlat
jle
dec
xchg
adc
xchg
not
sbb
xchg
inc
leave
and
or
ins
in
imul
mov
push
and
mov
xlat
jg
push
sub
xchg
xchg
mov
aaa
dec
loop
mov
scas
push
pop
into
ins
into
sbb
data16
repz
div
sar
addr16
pop
retf
push
or
cmps
or
mov
cmp
lods
fistp
clc
retf
mov
fist
pop
xchg
outs
outs
(bad)
sar
inc
std
jns
jnp
loope
ins
mov
les
aad
add
in
dec
fimul
push
fidivr
xor
inc
lea
dec
mov
push
ror
shl
xchg
scas
xor
xchg
push
ss
ret
int
ins
sahf
stc
stos
mov
bound
jp
in
and
inc
cmp
(bad)
pop
ficom
in
test
fist
into
mov
xlat
jo
cs
cld
pop
test
jp
loop
add
dec
popa
adc
xchg
int
mov
pushf
fucomp
shl
jb
fnstenv
push
jno
dec
add
(bad)
fcomp
pop
xor
jmp
std
aas
das
movs
mov
loop
adc
addr16
(bad)
fwait
xchg
scas
nop
or
loope
ror
mov
sbb
and
and
daa
das
stos
jb
add
ret
mov
cdq
rcl
cli
retf
fstp
push
sbb
fstp
icebp
add
xor
mov
mov
xchg
mov
mov
or
sbb
lea
push
test
inc
xchg
mov
dec
xchg
dec
jnp
(bad)
xchg
lea
xchg
imul
loopne
jnp
push
jmp
cmp
cld
pop
lods
je
dec
in
xchg
scas
xchg
clc
in
and
aas
dec
sbb
cmp
adc
(bad)
retw
dec
push
adc
xor
jp
stos
stc
add
into
mov
pop
mov
add
mov
(bad)
mov
jl
dec
jecxz
popw
cmc
xor
jnp
sub
fwait
cmp
mov
dec
adc
dec
or
hlt
mov
cmps
jno
retf
test
inc
out
shr
or
xchg
mov
sub
adc
push
or
cmp
repnz
and
mov
pop
repnz
or
aam
repz
sub
shr
add
add
sub
add
out
dec
in
pop
xchg
pop
(bad)
pop
and
xchg
mov
add
jp
cmps
or
jae
sbb
adc
push
or
repz
movs
adc
enter
inc
mov
addr16
push
inc
test
sub
std
sub
inc
ret
mov
cmps
in
into
push
retf
inc
out
retf
in
in
pop
sbb
jp
push
mov
mov
add
retf
mov
push
movs
adc
cli
cmp
mov
pop
in
xchg
popa
push
je
sbb
fild
es
push
jg
iret
mov
or
jbe
lock
loopne
pop
lods
and
cmp
mov
data16
adc
pushf
mov
inc
mov
es
cmp
mov
sar
jmp
and
addr16
lahf
imul
xlat
mov
call
sbb
hlt
int3
mov
mov
nop
xor
dec
mov
jmp
mov
sbb
leave
movs
push
leave
ret
mov
movs
mul
push
jle
int3
test
pushf
out
cs
push
ins
push
xor
ins
hlt
aaa
cs
xchg
repnz
or
xchg
ret
adc
fstp
int
fiadd
push
int
inc
fnstenv
ror
jmp
adc
outs
std
add
fwait
jmp
ja
fmul
lods
int
sub
imul
fcomp
xchg
fnsave
or
mov
inc
ror
mov
sub
dec
les
cdq
js
test
jb
dec
push
and
(bad)
addr16
loopne
ss
xor
shl
sbb
inc
sub
or
jmp
mov
inc
add
in
jmp
jmp
xchg
xchg
ror
push
sar
fisttp
mov
pop
pop
into
pop
jmp
ins
loop
popf
shl
std
ins
add
dec
dec
inc
movs
mov
and
mov
dec
adc
into
or
call
push
fs
fisub
scas
test
mov
call
xchg
adc
pop
mov
cld
pusha
stos
div
xor
icebp
xor
pop
test
sbb
add
fcom
xlat
xor
jb
sbb
aad
inc
mov
mov
xchg
xor
jmp
es
mov
ins
xchg
dec
ret
aam
pop
idiv
jle
jecxz
cmp
call
xchg
out
jl
cmps
dec
movs
stc
icebp
sub
ret
ret
or
push
mov
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
add
xor
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
jg
fstp
fnsave
jns
bound
cmps
cmps
popf
popa
dec
out
cwde
cwde
call
rcr
ret
sti
inc
fidivr
mov
push
ds
mov
inc
push
push
xchg
(bad)
icebp
pop
dec
sub
jge
mul
loopne
fs
pop
shr
push
and
add
fs
cs
cmc
repz
in
inc
mov
and
adc
(bad)
xchg
das
dec
pop
enter
add
out
bnd
rol
mov
mov
stos
xchg
dec
ds
push
sbb
pop
mov
mul
jg
mov
out
mul
dec
cmc
sub
out
sbb
mov
add
ja
stos
ds
arpl
call
sahf
jge
mov
cdq
xchg
jns
(bad)
jne
dec
jne
mov
(bad)
xlat
call
mov
pop
fld
mov
cmp
imul
ins
mov
push
sbb
dec
push
out
fisubr
je
loop
inc
mov
outs
inc
jge
pop
rcr
sbb
aas
pop
bnd
enter
push
cli
pop
sub
dec
mov
cmp
sar
daa
in
adc
dec
daa
push
mov
jo
in
or
pop
fs
sub
jo
or
bound
inc
ins
scas
test
hlt
sbb
int3
inc
fistp
sbb
inc
mov
xor
int
test
retf
dec
and
sub
arpl
lahf
dec
not
cmp
dec
pop
pop
dec
mov
dec
xor
adc
adc
out
into
pop
jo
push
jns
mov
or
cmp
add
jno
xor
rcr
xor
jo
lea
fisttp
mov
movs
movs
xchg
sbb
xchg
push
lea
in
pop
inc
sbb
xchg
cmp
sub
pusha
pop
mov
int
sti
adc
xchg
and
jb
pop
push
fnstcw
mov
xchg
ss
pop
push
cmp
mov
dec
ret
mov
cmp
xchg
jb
xchg
rol
mov
ficom
shl
pusha
lock
cmp
mov
call
push
mov
es
fidiv
add
mov
inc
test
pop
sub
cmps
push
dec
push
sbb
sub
aas
movs
jmp
fcomp
xor
fs
je
xor
ins
xor
cmp
std
inc
fistp
in
and
je
out
dec
pop
stos
or
adc
adc
mov
adc
iret
icebp
sbb
in
inc
(bad)
cmp
push
mov
shl
mov
push
pop
leave
adc
push
retf
(bad)
hlt
scas
enter
in
cmps
(bad)
xchg
lds
cmp
arpl
push
gs
jmp
ds
add
dec
push
or
add
call
pop
sub
(bad)
ror
mov
xchg
in
xor
sub
and
(bad)
mov
dec
test
jmp
stos
in
das
std
jmp
dec
ja
ins
cmc
shl
sbb
sub
push
jo
mov
nop
xor
lds
mov
dec
push
inc
ret
mov
adc
daa
inc
ret
adc
fadd
push
inc
daa
ds
lods
fstp
mov
and
clc
mov
mov
loop
(bad)
movs
test
mov
mov
les
pop
ins
xlat
adc
sub
sahf
lock
jmp
add
(bad)
pushf
jne
or
cmc
pop
dec
cmp
std
adc
and
push
sahf
inc
(bad)
cli
inc
lods
cmps
dec
cmc
mov
mov
aad
les
mov
cmp
ficom
push
out
std
push
fsubr
sub
and
popa
mov
inc
rcl
or
add
inc
dec
inc
std
push
arpl
dec
pop
loop
jmp
jp
push
sbb
out
hlt
cmp
push
or
push
pop
pop
icebp
push
add
(bad)
fiadd
test
jl
or
fidivr
jnp
sub
nop
pushfw
push
push
setnp
imul
and
stc
adc
popa
mov
pop
lods
xchg
fistp
adc
stos
ret
mov
pop
aad
add
sti
shl
pop
fild
out
ret
xchg
cmc
arpl
jge
(bad)
mov
push
in
aas
fist
das
sbb
jle
jne
test
dec
jb
mov
inc
inc
fucomp
outs
shl
scas
bound
addr16
stos
xchg
mov
pop
stos
mov
cmps
jno
stos
cmp
mov
dec
das
fs
or
pop
fbld
jg
(bad)
stc
(bad)
in
mov
enter
fs
add
aam
mov
push
jno
inc
adc
addr16
pop
shr
or
hlt
popa
adc
dec
adc
xchg
pop
or
cwde
bnd
ficomp
fcomip
push
sub
push
aad
stos
mov
mov
into
mov
xchg
call
call
sub
mov
sbb
mov
jne
mov
cmps
mov
mov
test
fs
jb
jecxz
push
dec
shl
pop
outs
loope
mov
pop
mov
clc
push
xchg
out
pop
xchg
and
js
fild
movs
lods
rep
enter
sbb
stc
stos
shl
ret
stos
or
xor
sbb
lds
push
cdq
adc
sbb
lock
fisttp
push
clc
or
cmp
mov
pop
test
in
mov
lods
lahf
pop
and
clc
pop
into
or
mov
fild
jno
jg
ds
std
jne
stos
sbb
pop
addr16
xchg
sbb
shr
lock
xchg
repz
sbb
xchg
ficomp
and
in
repnz
test
popf
cld
in
jb
push
xchg
ss
pop
inc
cld
push
(bad)
loop
std
push
imul
xchg
add
ja
xor
mov
jns
add
inc
inc
or
(bad)
pop
out
pop
and
push
add
imul
adc
jbe
movs
pop
sahf
add
lahf
dec
inc
mov
(bad)
retf
add
cmp
int3
sbb
and
sub
lods
adc
jecxz
xlat
add
cmps
add
call
mov
pop
or
mov
inc
(bad)
adc
and
imul
daa
pop
push
test
outs
out
cmc
pop
add
sbb
jmp
cmp
cdq
out
adc
nop
pop
les
push
in
in
inc
jl
xchg
out
ds
hlt
fs
outs
or
adc
jmp
aad
into
aam
ja
cwde
jecxz
add
test
(bad)
hlt
lods
lahf
mov
rcr
mov
pop
mov
mov
push
sbb
xor
aas
(bad)
jp
jns
push
and
sub
mov
mov
fwait
loope
push
or
xchg
(bad)
sbb
xchg
in
mov
xchg
inc
retf
dec
(bad)
scas
adc
cmp
adc
pusha
push
dec
sub
fs
push
lds
sbb
push
xchg
xchg
je
xchg
xor
imul
fisubr
adc
mov
rcl
clc
pop
cmps
push
loop
jmp
jnp
shl
or
and
nop
in
fmul
mov
stos
cmp
lods
outs
dec
push
out
data16
mov
push
rcl
dec
test
mov
jle
out
cmp
mov
fst
scas
leave
pop
lahf
iret
dec
cli
mov
lea
into
fwait
mov
dec
cmps
or
pop
or
fidiv
push
nop
shr
add
xchg
aas
fs
scas
adc
sub
cmp
push
cs
xchg
stos
mov
inc
jmp
cmc
jnp
jo
scas
jnp
ret
aas
repnz
mov
(bad)
(bad)
rcl
cs
sub
dec
and
dec
scas
cmp
in
cmp
imul
xchg
pop
or
mov
dec
stos
movs
sub
xchg
jl
and
loop
xchg
sub
out
mov
pop
sub
cmp
icebp
jno
inc
pop
push
xor
xlat
nop
cs
and
xchg
mov
jmp
ss
add
add
not
sbb
or
outs
push
loope
in
into
dec
jno
call
xlat
adc
and
das
add
pop
push
dec
add
cmp
mov
and
push
mov
xchg
xchg
(bad)
jmp
sahf
mov
mov
and
push
aas
sbb
jg
or
test
sbb
adc
push
mov
pop
push
ins
fistp
int3
retf
fist
lahf
mov
retf
pop
adc
(bad)
clc
and
fimul
arpl
push
setl
imul
dec
das
cmc
pop
mov
imul
retf
adc
ss
mov
(bad)
jl
pop
(bad)
(bad)
clc
mov
lods
clc
inc
aaa
mov
rcl
(bad)
nop
cmp
sbb
ret
pop
fsubr
leave
cmp
mov
nop
dec
inc
cli
mov
pushf
int
add
xchg
add
adc
jne
(bad)
or
inc
mov
xchg
cmp
js
xlat
cmp
xchg
mov
cmp
pushf
pop
push
test
js
out
ins
push
cmps
movs
mov
cmp
fistp
fidiv
daa
fs
mov
rcl
sub
xchg
push
sbb
xchg
imul
outs
and
mov
pop
lods
imul
mov
xlat
jl
repz
add
fwait
xchg
inc
int3
xchg
js
data16
adc
call
and
out
dec
lds
xor
push
clc
cmp
sub
dec
xor
sbb
or
je
shl
pop
mov
pop
push
fmulp
adc
pop
inc
mov
push
dec
mov
rcl
sbb
or
iret
test
(bad)
dec
fistp
jmp
jnp
add
ror
pop
call
cdq
or
sub
ss
shl
sti
adc
shl
jnp
inc
lds
stos
in
fucomp
sbb
inc
test
or
adc
not
xchg
push
push
sbb
push
and
mul
mov
jns
(bad)
cmp
jp
stos
mov
movs
cmps
pop
cs
out
mov
pushf
out
or
dec
push
popf
aam
sbb
int3
mov
xchg
inc
gs
mov
add
mov
fist
(bad)
push
imul
pop
ds
jbe
(bad)
loopne
retf
shl
or
(bad)
add
in
test
or
xchg
imul
mov
clc
sbb
out
lea
jmp
add
mov
push
push
bound
mov
addr16
jp
mov
xchg
inc
(bad)
jg
add
add
out
fisub
jo
loop
xor
sbb
popf
mov
xchg
xor
xor
add
inc
mov
pop
xchg
ds
lahf
int3
jge
sti
xchg
stos
jb
out
popa
add
aam
inc
mov
pop
push
cdq
jle
(bad)
push
push
mov
jl
mov
add
(bad)
jnp
hlt
ret
and
std
or
call
and
loope
mov
fwait
sub
dec
les
in
and
(bad)
sbb
jg
mov
cmp
stos
outs
mov
out
and
icebp
shl
and
int3
xchg
imul
mov
sti
mov
daa
pop
jbe
jmp
inc
push
jno
jl
mov
shr
enter
mov
or
movs
cmc
sbb
add
xor
sbb
test
push
dec
add
mov
loopne
xor
and
call
xlat
push
push
push
cwde
lods
jl
scas
push
xor
dec
push
gs
sti
je
jns
pop
cwde
mov
pop
mov
dec
std
dec
jmp
xor
pop
sub
jo
(bad)
mov
jp
sub
fidivr
dec
lds
xchg
xchg
fwait
push
stos
leave
lock
xchg
sti
push
lods
aas
push
or
dec
movs
frstor
mov
push
int
test
fisub
ja
sbb
jns
cmp
rol
xor
fs
loope
xchg
jmp
mov
xchg
shl
pop
pop
in
mov
jmpw
cdq
xchg
jp
sahf
mov
test
pop
imul
or
popf
inc
mov
sub
sbb
lock
mov
das
btc
or
jl
mov
push
or
jmp
jo
loopne
cmps
es
imul
out
xchg
out
pop
inc
pop
sub
test
cmovp
retf
sub
mov
and
adc
hlt
hlt
in
(bad)
pop
js
mov
or
test
sar
jmp
jg
add
jb
pop
shl
popa
jbe
retf
cmps
pop
pcmpeqd
mov
xchg
mov
das
psraw
mov
repz
add
xchg
repz
test
dec
push
std
sar
fist
cmc
dec
fdivr
push
loop
out
cmps
xor
xor
mov
cdq
sub
mov
add
ret
out
outs
mov
xchg
cpuid
or
push
or
mov
fcmovbe
iret
pushf
push
pop
jnp
push
sbb
outs
mov
scas
xchg
inc
repz
xchg
adc
push
push
neg
pop
fnstsw
push
jp
(bad)
jmp
stos
enter
ins
jecxz
mov
mov
out
and
test
or
fwait
pop
repz
or
pop
pop
sub
cmp
addr16
mov
push
ror
sysenter
loope
sub
mov
test
in
jnp
test
mov
add
pop
cli
jle
inc
movs
xchg
mov
jb
jge
aam
sub
mov
mov
jg
bound
cmp
ss
daa
adc
pop
rol
dec
dec
leave
jmp
push
dec
jae
mov
ins
ds
and
jno
int
in
imul
clc
pop
cmp
ins
lock
sub
xchg
ja
fnstenv
cld
popa
ds
aas
shl
mov
out
rol
inc
dec
jae
arpl
cmp
repz
cmp
call
repz
test
pop
jl
and
lea
inc
sub
sbb
pop
xor
enter
cmps
pop
je
pop
jl
mov
(bad)
xchg
add
mov
mov
push
aaa
adc
pop
std
mov
xchg
jbe
or
(bad)
outs
pop
fs
mov
stc
pop
jae
inc
xor
pop
and
pop
loop
mov
in
adc
addr16
bound
lods
pop
xor
add
jbe
inc
stos
rcr
pop
push
pop
lods
in
outs
xchg
test
jmp
cmp
loope
mov
sub
in
and
jmp
imul
stos
cli
and
std
cdq
lods
mov
jb
mov
mov
xchg
add
out
aam
sti
loopne
ret
fidivr
sbb
mov
cld
cs
rol
clc
mov
into
mov
or
call
mov
push
mov
dec
shl
mov
cmps
or
add
adc
(bad)
cld
cdq
xor
stc
xchg
stc
jl
std
and
popa
sbb
jp
mov
jmp
clc
or
sahf
mov
cmp
movs
in
das
in
jge
ins
push
cmp
ret
arpl
lock
add
mov
dec
and
fucom
lock
cdq
sti
sbb
sub
pop
hlt
sub
push
imul
imul
stos
or
mov
enter
movs
das
jl
cmp
push
enter
aad
imul
cmps
scas
cmp
icebp
or
sub
popa
xchg
inc
stos
dec
pop
sbb
psubb
lahf
jg
stc
out
jg
stc
mov
call
xchg
inc
fadd
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
out
les
rcr
cmp
fwait
outs
shl
cmp
mov
mov
dec
dec
fsubrp
cdq
sbb
ret
in
sbb
sti
aas
out
jecxz
out
jl
cmp
or
shl
int
and
call
push
cli
aad
cdq
out
shr
out
(bad)
jmp
pop
js
xchg
dec
add
mov
out
jns
ins
lods
mov
(bad)
xor
std
jno
xor
xchg
pop
inc
daa
outs
inc
xchg
ja
xchg
xchg
cmp
call
push
addr16
add
cmp
mov
pop
xchg
jo
or
jns
jae
(bad)
iret
out
sbb
loop
add
xchg
ins
pop
div
cmp
mov
out
and
shl
jp
cli
mov
xor
or
sti
mov
push
iret
(bad)
dec
fnsave
clc
sbb
adc
in
mov
mov
dec
sub
xor
push
les
jl
test
inc
xor
and
stc
ret
neg
cmp
mov
mov
movs
std
dec
into
(bad)
aam
enter
aaa
in
cdq
popa
mov
cmp
jle
and
dec
jge
pop
ds
cli
inc
mov
pop
or
ds
jne
jmp
xchg
jbe
mov
sahf
push
push
mov
shl
xchg
and
daa
(bad)
xchg
jb
in
pop
popf
retf
or
fcom
test
jmp
(bad)
(bad)
icebp
cmp
call
cld
fwait
mov
test
jle
sub
xchg
not
xor
gs
pusha
xchg
fimul
mov
adc
pop
scas
mov
add
adc
adc
ret
jne
jge
sbb
movs
mov
das
mov
es
std
jnp
sub
mov
dec
push
dec
in
xlat
and
test
fucomip
jo
repnz
jecxz
push
fcomi
push
cmp
or
mov
(bad)
pop
aad
pop
add
addr16
cmps
jno
ins
sbb
cmp
in
out
push
mov
ret
aaa
or
ins
push
xchg
sbb
push
mov
xor
enter
dec
test
sbb
ror
sub
outs
imul
jmp
and
inc
fnstenv
mov
sbb
push
mov
std
add
mov
add
push
add
lock
scas
fstp
call
arpl
sbb
js
icebp
pop
cld
cmp
xor
adc
mov
pop
(bad)
dec
xchg
mov
std
fs
ror
std
scas
jmp
ins
loopne
dec
sbb
cmp
leave
mov
xchg
sbb
daa
popa
aaa
movs
popf
sub
fs
dec
mov
stc
stos
sbb
mov
ins
jp
cmp
retf
sbb
fs
call
mov
or
xchg
retf
adc
lds
lahf
cli
in
adc
movs
or
xchg
mov
aad
mov
jb
cwde
or
rcr
xlat
pusha
dec
das
push
ins
ins
jmp
lahf
outs
adc
jb
jne
mov
movs
add
inc
lds
rcr
les
iret
dec
mov
clc
(bad)
in
dec
mov
add
arpl
mov
les
cdq
loopne
out
cmp
push
sub
add
repnz
jl
mov
jp
xor
push
inc
adc
out
xchg
mov
fimul
aaa
mov
inc
fiadd
xchg
ss
pop
pop
lahf
repnz
or
outs
icebp
xchg
push
cmp
xchg
inc
je
cmps
jns
mov
mov
popa
imul
les
push
popa
mov
xchg
test
jne
(bad)
(bad)
(bad)
out
add
sbb
out
test
add
push
push
stos
cmp
mov
ja
daa
jae
cmp
rcl
cmp
cmp
repnz
jb
bound
pop
or
mov
xor
xchg
daa
inc
pop
scas
test
test
push
push
sbb
stc
mov
sahf
aas
repz
je
pop
(bad)
scas
ja
jne
mov
or
dec
cwde
sbb
bound
jno
pop
or
push
scas
dec
sbb
shl
shr
or
cmps
sahf
ss
jecxz
sub
pushf
add
xor
stc
je
xchg
shl
xor
push
es
xor
xor
jnp
mov
stos
push
jge
in
jl
std
xchg
mov
in
jnp
jecxz
in
sti
sahf
mov
pop
fwait
sub
pop
stos
mov
mov
loop
jae
and
adc
sar
cmp
jmp
jp
retf
or
clc
cmp
mov
sub
adc
inc
fidiv
mov
loopne
jae
data16
and
adc
stos
pop
jmp
inc
pop
adc
push
pop
repnz
cmp
arpl
pop
out
(bad)
pop
(bad)
push
not
outs
pop
adc
adc
bound
mov
popa
adc
lods
cmp
push
nop
fwait
xlat
stos
push
jb
mov
cwde
test
and
mov
stos
mov
imul
mov
jns
leave
out
repnz
popf
(bad)
inc
add
and
jne
pop
repnz
jne
not
or
lods
sbb
shl
ja
push
ds
jb
setnp
push
ins
rcr
loopne
push
pop
pop
cld
and
retf
shl
fsub
sbb
add
in
mov
outs
dec
jle
adc
cmp
out
sub
lods
dec
shr
adc
cmp
jne
cmp
repz
test
jmp
ins
(bad)
test
xor
dec
out
xor
lahf
outs
movs
in
das
push
bound
aad
inc
add
out
push
mov
jbe
fcom
cmp
pop
mov
sub
pop
mov
and
jmp
pop
sbb
jne
xchg
imul
push
jnp
jne
clc
inc
ret
out
mov
push
retf
out
mov
pop
ret
add
fcom
push
lock
out
and
sbb
or
sub
in
jae
cwde
daa
imul
dec
cs
jae
outs
(bad)
mov
xchg
pop
jl
aad
push
addr16
ret
adc
adc
xchg
sar
mov
scas
pop
xor
jmp
stc
scas
dec
mov
aad
ja
and
std
ins
loop
pop
sti
cli
xchg
mov
sub
xchg
mov
aad
mov
mov
mov
adc
int
fs
sub
sub
push
push
mov
repnz
pusha
jmp
mov
push
inc
mov
xor
cmp
dec
jl
mov
pop
mov
nop
shl
sbb
daa
gs
loope
and
test
cld
cld
sub
inc
imul
and
sbb
imul
pop
imul
bound
pop
loop
adc
jae
or
adc
xchg
or
mov
or
dec
add
push
enter
and
addr16
xor
test
or
sub
shr
cdq
lock
sbb
pop
jge
mov
rcl
xchg
bound
in
cmp
fiadd
jg
inc
fcom
lods
mov
pusha
(bad)
sbb
int3
iret
sahf
inc
imul
sbb
jne
and
popf
(bad)
or
push
pop
fnsave
in
jp
xor
push
popf
stos
xor
pop
stc
add
cmp
lods
loopne
out
test
popf
mov
lods
jmp
(bad)
mov
push
sub
sub
jae
xchg
xor
mov
repnz
sub
lahf
jb
ret
cmp
pop
hlt
gs
sbb
or
mov
mov
loopne
ret
push
in
stos
nop
push
(bad)
xor
cmove
aad
aad
scas
sar
push
out
and
add
fistp
cmc
cmp
in
adc
sub
jns
cmp
mov
or
mov
dec
and
mov
xor
and
sub
mov
cmps
scas
inc
cld
xor
push
jbe
cmc
and
push
pop
pop
fcom
fdivrp
ret
inc
imul
mov
inc
mov
push
pop
(bad)
jp
mov
or
and
cmp
mov
and
mov
idiv
pop
icebp
jp
in
retf
ins
mov
add
inc
(bad)
data16
pop
dec
xor
mov
add
mov
cmps
inc
mov
fs
pusha
scas
cmp
cwde
stos
and
jns
cmc
repnz
faddp
jae
mov
in
data16
jecxz
cmp
gs
outs
fs
jb
cmp
cli
and
push
rcl
adc
sub
inc
push
dec
lea
test
pushf
sbb
inc
movs
sbb
aaa
push
outs
mov
pop
xor
sbb
mov
push
out
mov
adc
pop
push
jl
repz
and
cs
sbb
add
jge
pop
test
adc
xlat
js
push
dec
out
nop
ins
adc
sub
or
cld
imul
cmc
in
popf
jle
inc
clc
sbb
(bad)
cld
mov
lods
out
sub
cs
mov
into
(bad)
adc
inc
pusha
out
inc
jp
add
cs
aaa
xchg
rcr
or
lock
mov
mov
sti
pusha
or
retf
arpl
stos
inc
outs
(bad)
sbb
pop
cmps
sbb
inc
ret
stc
dec
arpl
(bad)
aad
mov
cmp
jnp
rcr
mov
cli
aas
(bad)
test
mov
and
test
bound
loop
mov
mov
mov
jle
movs
(bad)
xchg
xchg
mov
scas
xchg
pop
gs
jg
outs
jmp
add
nop
aaa
adc
dec
jbe
mov
clc
sar
lds
pop
imul
sub
movs
mov
sub
sbb
push
(bad)
scas
jmp
retf
(bad)
out
cmc
xor
mov
mov
movs
adc
in
push
idiv
or
call
jecxz
or
sbb
jbe
pop
jns
xor
xchg
les
movs
sub
sbb
pop
or
mov
mov
xchg
(bad)
jne
cmp
cdq
imul
pop
push
retf
in
push
adc
and
mov
dec
adc
mov
cli
push
add
adc
retf
cld
in
xor
fisubr
or
in
mov
or
enter
sub
std
loope
pushf
stc
or
mov
and
or
adc
addps
cmp
push
mov
jns
push
sub
in
into
jns
sub
fistp
jp
pop
popa
pusha
leave
(bad)
loope
adc
pop
mov
cs
cmp
pop
jnp
repnz
call
sub
adc
loopne
adc
aad
stos
xor
mov
add
adc
push
dec
jecxz
je
cmp
cdq
stos
push
mov
es
pop
mov
push
xor
sbb
mov
cmp
xor
popa
es
loope
imul
dec
mov
sbb
(bad)
adc
or
push
in
sti
lea
inc
int3
mov
push
push
xor
xlat
mov
fs
in
and
jp
out
dec
add
lds
test
in
mov
or
leave
push
bnd
sbb
xor
test
xchg
sub
lods
test
es
cmp
mov
leave
dec
inc
or
or
add
adc
pop
pop
adc
add
movs
je
pop
xlat
mov
jl
cmp
xor
cwde
mov
or
dec
in
(bad)
mov
fld
dec
cmps
mov
adc
mov
jg
sub
dec
jp
enter
stos
gs
mov
shr
shl
imul
inc
clc
mul
dec
sbb
gs
mov
lods
dec
sub
jmp
fisttp
sahf
xchg
adc
or
lods
adc
iret
jecxz
dec
sbb
pop
xor
xchg
fmul
stos
xchg
adc
int3
movs
push
or
add
dec
mov
iret
fdivrp
test
in
adc
(bad)
cli
das
popa
jmp
add
scas
pop
xor
popa
push
xor
jne
(bad)
lock
cmps
xchg
mov
not
jecxz
pop
in
aaa
mov
mov
lea
mov
jp
xchg
jmp
lods
sub
imul
and
movs
cld
adc
push
sar
and
fsub
inc
stos
lods
ret
shr
jnp
mov
jb
fwait
and
inc
mov
mov
ins
and
mov
pop
out
mov
mov
cmp
test
pop
mov
sub
(bad)
sahf
fld
arpl
gs
xchg
ins
sar
sbb
movs
idiv
in
mov
mov
lock
outs
pusha
mov
cmp
fistp
mov
iret
loop
inc
push
js
adc
jne
adc
pop
icebp
repnz
or
(bad)
(bad)
movs
or
sub
mov
(bad)
scas
ret
pop
jmp
enter
ror
lock
pop
pop
repnz
add
stc
adc
outs
cdq
jns
ftst
mov
jmp
ficom
loopne
or
fdivr
into
loop
stos
ret
push
sub
sbb
shl
(bad)
shr
jns
call
shl
std
mov
mov
sub
neg
jmp
int3
out
loope
inc
retf
pushf
inc
jge
cwde
push
pop
push
rol
xchg
icebp
mov
cmp
bound
cmp
inc
ins
sub
jmp
loopne
mov
pop
enter
arpl
stc
xchg
mov
adc
loop
les
push
aaa
push
in
(bad)
sahf
rcl
xchg
push
stos
xchg
dec
push
iret
outs
inc
leave
test
or
retf
ret
aam
outs
jl
test
pop
test
pop
popf
adc
movs
xor
inc
inc
(bad)
mov
cmp
mov
shl
mov
sub
movs
dec
mov
adc
cmp
and
sub
xor
jns
in
sub
out
mov
and
push
pop
in
repnz
aad
xchg
pop
inc
pop
std
repnz
push
test
sti
(bad)
cmps
mov
cmp
int3
mov
xchg
in
pop
aaa
xor
cmc
stos
cdq
test
ret
lea
pop
mov
in
adc
test
mov
ins
enter
je
mov
push
(bad)
mov
dec
mov
sub
xor
adc
iret
xchg
das
jo
push
push
loope
inc
nop
pusha
xor
mov
imul
lea
cmp
cmp
repnz
cdq
vmovntps
mov
sti
fld
imul
(bad)
clc
and
adc
aam
pop
push
mov
dec
mov
aam
jmp
sahf
jno
call
dec
dec
lods
cwde
test
hlt
into
jecxz
jmp
mov
jp
(bad)
scas
dec
jb
ins
and
add
cmps
sti
add
leave
scas
loop
scas
or
cwde
or
dec
div
movs
dec
sub
vpmaddwd
(bad)
mov
rcl
sbb
shr
stos
and
and
loopne
out
call
push
outs
pop
add
mov
jnp
push
xor
push
cld
or
leave
sub
cdq
stos
mov
(bad)
rol
push
arpl
shr
cwde
vpmaxsw
fs
sbb
ins
repnz
push
inc
and
loopne
pop
adc
fdiv
popf
cmp
outs
sub
xor
add
cmp
pop
imul
sbb
loop
add
out
mov
inc
pop
fld
stos
cmps
popa
xchg
and
add
xchg
and
test
mov
cmps
jno
rcl
add
imul
push
mov
mov
and
xchg
mov
sti
jp
test
mov
add
cmc
into
push
jg
push
out
sbb
or
loopne
push
or
loopne
jg
stc
out
jg
stc
out
xor
xor
jne
xchg
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
les
repz
jecxz
(bad)
je
xlat
cwde
out
cmp
mov
push
sar
mov
cmps
jae
dec
div
inc
mov
cmp
mov
das
es
mov
cmps
dec
sar
sbb
in
or
sub
jecxz
inc
outs
rcr
mov
push
sbb
jnp
xchg
adc
mov
sahf
cmps
mov
in
jmp
adc
pop
sbb
(bad)
push
dec
sbb
cs
inc
sub
xchg
jns
movs
mov
mov
cld
retf
bound
adc
mov
jl
adc
call
out
test
(bad)
div
pop
pop
pop
stos
adc
test
shr
cmp
pushf
sbb
cmps
mov
popa
sti
ja
enter
mov
mov
outs
aam
ds
adc
and
nop
dec
mov
and
and
movs
shl
or
in
mov
sbb
mov
inc
xchg
js
call
inc
ins
push
sbb
push
stos
or
es
pop
xor
cmp
leave
fimul
adc
jmp
dec
je
in
push
das
pop
xor
loope
inc
xor
(bad)
fisub
repnz
fadd
rcr
and
adc
out
pop
cli
pop
ins
mov
shr
jecxz
fist
(bad)
call
push
pusha
push
loope
xchg
sbb
jb
xor
jecxz
sti
pop
mov
xor
fadd
mov
sub
pop
movs
shl
sub
add
push
int
mov
ds
stos
and
push
or
jmp
dec
sbb
xchg
sbb
jl
dec
xchg
mov
rcr
sbb
dec
popa
mov
addr16
add
fwait
jo
ins
cwde
mov
call
add
sbb
cmp
dec
pop
add
xor
cmp
xor
cmp
xchg
in
test
pop
xchg
adc
mov
xchg
jle
sti
jb
enter
inc
in
add
hlt
ins
sbb
imul
fwait
out
push
cld
dec
leave
adc
stc
mov
jp
inc
xchg
sub
or
out
sahf
inc
inc
sahf
test
pop
nop
mov
mov
movs
push
sbb
aas
adc
bound
pop
sbb
out
xor
inc
sub
stc
mov
sti
sbb
inc
add
mov
push
and
add
cmp
loope
fild
cmp
nop
(bad)
and
xor
jge
rcl
shl
add
and
mov
dec
out
jnp
cmp
xlat
mov
stc
adc
dec
data16
inc
pop
in
daa
loop
adc
and
aam
fstp
fist
rol
test
push
into
mov
sub
fcom
cmp
stos
aas
cmp
cmp
mov
jbe
xchg
add
pushf
ficom
cli
xchg
inc
inc
mov
inc
les
fisttp
out
shr
inc
adc
ffreep
fld
sub
mov
ss
cmovne
pop
cmp
inc
mov
sbb
sbb
outs
jecxz
push
pop
hlt
jb
pop
or
jns
(bad)
and
hlt
nop
mov
sub
(bad)
fisubr
fs
xor
(bad)
mov
call
push
lea
movs
sub
fidiv
hlt
xchg
scas
adc
rcl
mov
dec
fild
pop
jecxz
rcr
or
add
cmp
xchg
add
mov
mov
out
adc
addr16
into
je
imul
cmp
mov
aad
adc
jecxz
cmc
lea
imul
push
outs
imul
pop
out
ret
imul
clc
int
mov
cld
add
pop
pop
ss
cmp
adc
leave
in
mov
fs
ror
(bad)
retf
fcomi
jg
cmp
mov
mov
adc
xchg
jno
fwait
in
fadd
test
iret
pop
stc
xor
fst
retf
gs
pop
ja
sbb
out
xchg
rol
in
out
and
pop
jns
cld
es
aam
movs
scas
lahf
fiadd
shr
fstp
xchg
xchg
push
pop
popf
cmp
cmp
sbb
das
jnp
popf
xchg
jmp
jg
push
(bad)
shr
in
dec
scas
inc
xchg
and
fimul
out
mov
nop
push
or
add
js
mov
stos
cld
ror
fwait
test
xchg
sbb
fcomp
dec
fild
or
push
cmp
xchg
pop
cwde
add
xor
mov
clc
jae
out
stos
lahf
or
mov
inc
movs
shr
cmp
jo
xchg
cmp
popf
push
adc
inc
aaa
push
xchg
jae
addr16
imul
sbb
push
push
push
dec
cwde
fcomp
sbb
and
xor
adc
das
mov
clc
mov
(bad)
cld
gs
sbb
or
cmp
mov
gs
or
add
out
out
das
loop
or
jmp
inc
mov
mov
sbb
inc
add
mov
mov
out
test
inc
lock
dec
pop
mov
call
hlt
in
sub
test
pop
in
aad
inc
add
sub
and
mov
mov
(bad)
mov
ret
fild
mov
fidivr
xchg
or
cmc
pop
mov
stos
inc
jne
int
inc
or
mov
pop
cmc
pop
jecxz
sub
xor
xchg
jle
iret
mov
xchg
mov
mov
push
mov
jb
int
scas
adc
fisttp
xchg
adc
xchg
call
jmp
xchg
push
push
mov
push
pop
jmp
in
xor
xchg
lds
es
xchg
jmp
dec
pop
jns
fwait
lods
mov
jbe
lock
lea
jecxz
pop
rol
inc
and
in
cmp
and
sti
dec
leave
pop
fsubr
jle
in
push
(bad)
scas
cmps
mov
mov
xor
push
popf
in
sahf
jmp
mov
adc
mov
shl
xchg
push
mov
xor
dec
jbe
cs
retf
sar
push
xor
(bad)
movs
xlat
fwait
inc
repnz
neg
jnp
xor
ja
addr16
dec
and
enter
mov
xchg
sub
pop
(bad)
fdiv
sub
add
mov
push
jmp
rcr
cmp
lods
inc
xchg
aad
dec
push
mov
ret
push
jg
lods
mov
into
stos
sbb
stos
cmp
add
ins
in
cmp
mov
lahf
pop
rcr
out
push
sbb
mov
xor
fimul
iret
fwait
lods
bound
retf
retf
add
icebp
mov
dec
popa
xor
xchg
adc
mov
cmps
adc
faddp
in
daa
daa
xchg
or
pop
or
push
jnp
mov
out
add
pushf
(bad)
xchg
mov
cmp
xchg
test
mov
mov
or
hlt
cld
iret
js
dec
pop
mov
test
dec
push
call
jo
out
inc
mov
xchg
inc
mov
dec
into
repnz
scas
dec
stos
xor
mov
rol
adc
mov
cld
pop
ds
fwait
jecxz
cld
adc
call
ja
inc
add
repz
add
adc
arpl
repnz
pop
push
aas
shl
pop
cmp
xor
out
imul
call
or
in
or
cmp
enter
push
xor
inc
sub
add
xor
jmp
movs
add
call
fidiv
mov
fdiv
adc
dec
mov
mov
jge
add
xor
mov
movs
sbb
outs
aad
sbb
push
jb
or
(bad)
je
push
and
adc
stc
xor
pop
xchg
xor
sub
imul
push
mov
cli
pop
addr16
aaa
dec
xchg
mov
in
dec
fmul
std
into
into
mov
xor
push
in
push
push
inc
mov
inc
inc
ret
sqrtps
push
jns
xor
jle
out
jg
xor
xor
mov
icebp
jae
imul
std
out
mov
jp
mov
call
repnz
sbb
cmp
fstp
hlt
int3
es
out
cmc
adc
sub
shl
jecxz
mov
imul
pusha
scas
jae
sbb
push
jmp
fdivrp
sbb
or
adc
stos
dec
push
dec
pop
inc
lods
cmp
mul
pop
popf
push
pop
push
add
and
or
sub
inc
ret
jmp
in
cmc
(bad)
cmc
jae
test
mov
jg
sub
mov
xor
adc
mov
ins
add
xchg
inc
xchg
mov
inc
(bad)
sub
mov
mov
jns
scas
movs
sub
xchg
maskmovq
test
cmp
in
xchg
jbe
push
movs
xchg
sbb
movs
dec
retf
cmp
xor
mov
stos
push
or
sbb
sub
pop
push
mov
rcr
xchg
xchg
sub
mov
sub
sbb
es
scas
ins
adc
inc
pop
pushf
jmp
icebp
cs
cs
into
pop
inc
mov
mov
xchg
xor
fnsave
hlt
movs
rol
or
dec
ret
dec
push
mov
jmp
xchg
retf
inc
push
xor
call
dec
pushf
into
test
and
test
mov
rol
cs
test
je
(bad)
xor
shl
(bad)
add
rcl
cmp
pop
addr16
jnp
inc
inc
pop
imul
aad
movs
xchg
mov
or
pop
sub
retf
cdq
dec
dec
mov
arpl
push
dec
mul
stos
lods
inc
xor
add
inc
aaa
sub
scas
enter
add
fdiv
xchg
dec
mov
aaa
ja
mov
(bad)
mov
adc
ficomp
add
(bad)
or
daa
(bad)
fidiv
out
cmp
push
out
cmp
push
fadd
in
fwait
jmp
repz
loope
and
jp
in
cwde
sti
out
jge
or
stc
loope
xchg
out
mov
push
jne
inc
cmp
gs
test
jmp
add
push
add
aam
cmps
cld
mov
imul
sbb
push
add
(bad)
sbb
outs
adc
dec
imul
mov
or
mov
enter
idiv
je
fiadd
mov
stc
scas
(bad)
cmps
repnz
fst
fs
inc
and
mov
inc
rcr
iret
test
jg
pop
adc
out
mov
daa
add
mov
in
pop
or
sbb
jg
fs
scas
mov
jae
repz
and
movs
xchg
pop
pop
cmp
loope
adc
pop
cmp
ret
pop
adc
das
loope
mov
xor
in
pop
inc
add
aaa
adc
adc
jecxz
loope
xor
xlat
imul
loopne
mov
das
mov
fs
xchg
(bad)
cli
(bad)
push
in
int3
clc
mov
ins
and
mov
(bad)
push
outs
push
sub
ficomp
je
mov
sub
sbb
mov
(bad)
outs
sbb
pop
stos
push
sub
and
mov
rol
add
lods
inc
jnp
dec
mov
scas
std
add
imul
mov
sbb
enter
pop
nop
(bad)
iret
mov
sahf
pop
test
mov
ss
pop
dec
jecxz
test
pop
jo
adc
jmp
imul
mov
cmp
xchg
std
inc
push
push
or
fwait
mov
pop
cdq
mov
std
push
ss
popf
ins
ins
mov
add
dec
call
mov
hlt
sbb
jnp
mov
sbb
enter
cdq
out
or
pushw
cld
cmp
cdq
gs
sub
fistp
cwde
add
pop
rcr
div
inc
pop
cmp
stos
and
mov
bound
mov
xchg
mov
clc
mov
cmp
pop
jmp
leave
cmp
aaa
out
test
jg
cld
fs
jne
(bad)
iret
xchg
jbe
in
xlat
ss
(bad)
pop
sbb
push
jge
hlt
std
jb
jmp
push
pop
push
push
shl
pop
std
mov
in
pop
out
int3
push
ja
sbb
stos
adc
mov
or
imul
loop
iret
cmp
(bad)
ins
or
mov
sub
mov
int
pop
cmp
xor
jns
xor
jnp
pop
jo
dec
scas
cmp
mov
xchg
aas
ja
mov
sbb
xchg
jbe
lods
pop
dec
movs
call
or
cmps
mov
sub
mov
fisttp
xchg
dec
lea
jge
scas
sbb
sub
test
mov
mov
(bad)
outs
jnp
imul
ss
jb
inc
or
int
or
cs
xor
mov
mov
cmp
jecxz
and
xchg
jo
out
clc
test
xor
jns
enter
lods
sub
fcmovnb
adc
mov
sub
shr
mov
mov
movs
dec
cmps
xor
sbb
sbb
sub
in
int
stos
popf
ins
sti
pop
(bad)
xchg
and
sub
and
mov
fwait
stc
fist
mov
stos
(bad)
arpl
mov
pop
cmp
test
pop
in
rcr
push
test
popa
mov
mov
add
mov
jg
add
mov
push
ss
popf
pop
push
xchg
fwait
adc
bound
fimul
retf
inc
cmp
mov
pop
iret
cmp
dec
(bad)
cmp
ret
add
add
in
pop
xor
add
jg
stos
cs
popw
xor
inc
stos
push
(bad)
jmp
pop
and
es
stc
inc
pop
into
sub
lods
xor
mov
sahf
outs
fwait
dec
mov
lods
mov
lahf
push
and
int3
mov
ret
loope
jo
int
xchg
lods
lock
jecxz
cmp
fild
scas
js
cmp
ret
xchg
in
retf
lock
inc
push
(bad)
fist
cld
dec
mov
loop
dec
sbb
push
popf
xchg
add
vminss
call
adc
arpl
in
jmp
rcl
xchg
or
repz
jp
or
cmp
ret
inc
jecxz
retf
mov
rcl
sub
cli
sbb
aaa
aaa
and
inc
xor
scas
xchg
pushf
out
mov
call
int3
test
cmc
movs
dec
xchg
cvtps2pd
mov
stos
in
bnd
mov
push
and
sub
dec
outs
(bad)
and
outs
sub
cmc
push
iret
and
loopne
mov
xor
aad
inc
repz
lock
pop
and
mov
pusha
sub
out
push
push
inc
adc
jg
adc
outs
inc
jmp
pop
std
cld
fimul
aam
test
mov
xchg
stos
hlt
lock
jmp
sbb
rcr
dec
xchg
inc
mov
pop
test
pop
jo
dec
imul
imul
sub
leave
dec
sub
xchg
sbb
xor
test
leave
mov
fnstsw
scas
imul
enter
cdq
mov
mov
jae
int3
sub
ins
das
mov
inc
in
sbb
dec
xchg
jb
xchg
add
push
push
adc
mov
dec
outs
shl
cmps
clc
fidiv
inc
stos
lods
add
lock
xor
jecxz
cmp
mov
cs
mov
ja
jno
(bad)
mov
(bad)
jns
test
stos
cli
add
(bad)
jmp
dec
(bad)
sar
push
nop
scas
sbb
int3
aad
adc
xor
sar
sahf
mov
jl
or
fwait
cmp
sti
or
and
jl
cli
push
clc
out
jg
stc
out
jg
stc
mov
xchg
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
cmp
xor
int
out
cld
xor
fst
popf
jae
jmp
je
mov
call
cdq
cdq
js
enter
add
je
or
cmp
(bad)
pop
call
mov
scas
dec
adc
mov
mov
dec
movs
dec
push
inc
ret
rol
jmp
pop
xchg
lods
fcom
call
icebp
push
outs
jp
lods
sahf
sub
xor
jmp
imul
cmp
push
mov
jae
cmp
mov
cli
(bad)
rcl
repnz
adc
call
and
test
ja
sbb
or
mov
add
xchg
mov
cdq
or
loop
adc
mov
sbb
adc
mul
or
repnz
int3
in
mov
xchg
mov
adc
fcom
jno
(bad)
test
inc
pop
dec
and
movs
xor
dec
xor
sbb
jno
call
pop
or
outs
xor
das
mov
ret
sub
push
xchg
xor
leave
push
imul
enter
arpl
sahf
leave
loopne
dec
je
jbe
push
jb
pop
cli
arpl
fmul
cdq
cmp
jnp
and
dec
aad
lea
push
movs
jno
rol
adc
cdq
aaa
iret
loop
dec
call
imul
push
sbb
mov
pop
and
xor
sti
jmp
sti
pop
push
lds
mov
scas
mov
cli
(bad)
pop
(bad)
cmp
xor
jae
jo
and
jmp
push
push
fs
jae
jl
xchg
dec
jmp
jmp
push
sub
iret
pop
xchg
(bad)
in
int3
dec
in
add
jge
test
movs
sub
jno
dec
cmp
repnz
dec
das
inc
scas
leave
cmc
loop
pusha
ja
pop
out
pop
aad
inc
sbb
mov
mov
iret
adc
jle
or
cmc
mov
mov
xor
ja
rol
mov
xchg
lods
cld
nop
jne
sti
lea
add
pop
shr
or
out
push
jo
push
and
adc
shr
scas
(bad)
mov
imul
ins
xor
icebp
rcr
sub
dec
sbb
retf
sub
jbe
ins
fisub
add
neg
out
mov
push
push
jne
daa
sbb
dec
jbe
mov
jae
and
call
push
mov
dec
push
add
xchg
mov
loope
ret
sub
adc
lods
repnz
mov
cmp
or
xor
jns
cli
cmps
add
scas
ret
pop
or
sbb
sub
lods
out
sbb
xchg
xchg
dec
mov
adc
pusha
pop
pushf
mov
push
xchg
xchg
test
sub
and
fist
pop
inc
push
adc
add
(bad)
(bad)
rcr
movs
cmp
or
iret
leave
add
or
mov
out
pop
fincstp
mov
xchg
xor
aad
rcl
pop
bound
(bad)
mov
data16
cld
mov
(bad)
mov
aam
sar
test
cmp
shl
pusha
arpl
lahf
rcr
adc
jmp
inc
jbe
fadd
imul
popa
sub
jmp
inc
retf
adc
call
mov
cmp
je
and
data16
mov
sbb
test
lods
dec
mov
dec
mov
mov
lea
ins
mov
cmps
test
imul
(bad)
retf
inc
mov
pop
mov
pusha
adc
popf
push
out
sti
fild
sbb
cmps
adc
in
mov
jmp
pusha
popa
adc
xor
xchg
enter
xor
loope
sti
or
mov
push
mov
test
jmp
adc
push
mov
pop
dec
sbb
das
hlt
push
jnp
fdivr
add
test
les
scas
js
mov
mov
push
scas
jbe
xchg
jle
dec
mov
dec
addr16
push
sar
fadd
add
mov
ficomp
por
fs
pop
jns
push
dec
sbb
jl
sub
in
repnz
xchg
pop
jp
xchg
xor
sar
outs
lods
adc
adc
jg
mov
xor
dec
jbe
pop
cmp
ins
push
cmp
retf
push
adc
cli
adc
test
cmps
push
mov
sti
mov
call
jge
mov
rcr
not
scas
stc
add
jae
mov
ror
cmp
ins
das
add
retf
and
cmps
sar
outs
mov
xor
cmps
push
jecxz
test
test
sbb
jae
pop
xlat
test
push
mov
sbb
xlat
leave
sub
cmp
jns
sti
mov
repnz
lea
sbb
(bad)
out
fild
cmps
dec
pop
stc
mov
jae
ins
das
mov
fnstcw
fldenv
jecxz
sub
xor
sub
jbe
(bad)
cmp
mov
cld
aad
icebp
xchg
ret
pop
adc
add
sub
jle
xchg
lock
leave
push
xchg
std
out
push
popf
mov
in
adc
xrelease
inc
and
(bad)
mov
mov
add
imul
lahf
sub
sub
mov
jp
jno
xchg
inc
mov
pop
or
clc
outs
add
icebp
pop
loopne
mov
leave
cmps
or
scas
cmps
jge
sti
outs
xor
in
xlat
inc
mov
shl
push
push
mov
jl
pop
xlat
or
cmp
dec
sub
retf
mov
xchg
cmp
xor
jle
dec
ds
dec
call
and
dec
pop
xchg
dec
mov
push
sub
pusha
retf
push
(bad)
push
push
push
pop
cld
cmp
in
add
cmp
push
push
lea
jmp
sbb
repz
sahf
sub
hlt
inc
pop
outs
lahf
imul
jns
loope
jmp
gs
push
movs
test
add
aad
xor
cld
daa
scas
call
cld
mov
lods
rcl
retf
int
hlt
add
mov
bnd
dec
sub
adc
dec
lds
stc
push
pushf
push
in
sbb
and
dec
or
pop
xchg
sbb
inc
stos
sbb
adc
popf
fbld
jl
sbb
push
push
(bad)
loop
pusha
call
jbe
pop
stc
nop
sub
mov
sbb
test
clc
test
cmps
repz
jp
js
lahf
and
mov
mov
cmps
mov
pop
jmp
std
mov
imul
daa
ja
jmp
sbb
mov
stc
cs
rcr
scas
das
cmc
nop
into
mov
or
daa
adc
stos
mov
push
and
xor
adc
shl
sbb
sub
idiv
retf
outs
into
sbb
adc
repz
mov
test
push
pop
and
mov
into
aam
pop
into
test
add
or
push
xor
xor
out
jb
imul
inc
lds
xchg
clc
idiv
add
sub
stos
and
in
fcom
repz
push
neg
aas
das
sar
pop
mov
add
call
mov
or
outs
ret
xor
mov
lods
mov
mov
sbb
sub
mov
adc
dec
adc
or
sahf
pop
cmp
pop
mov
mov
ja
sub
ror
cmps
fidiv
nop
push
imul
aaa
loope
in
lods
fst
cs
das
push
mov
or
int3
(bad)
loopne
push
pop
imul
loopne
mov
movs
mov
pop
cmp
into
push
xor
mov
dec
mov
shl
repz
jns
xchg
dec
jo
in
dec
jmp
jle
into
inc
adc
add
(bad)
dec
dec
add
hlt
call
jb
jae
movs
in
out
int3
fild
jo
lock
adc
inc
call
cli
xchg
jbe
add
dec
fild
std
inc
mov
mov
mov
ret
jne
jno
stos
or
jp
movs
mov
push
xor
ret
jecxz
shl
cmp
jno
xchg
out
mov
cmp
inc
mov
pop
data16
xchg
adc
dec
(bad)
jmp
cmp
scas
sbb
xchg
mov
xor
out
push
pop
mov
jo
jns
mov
or
cmp
pop
sbb
repnz
adc
js
mov
jg
and
std
jle
xor
arpl
movs
rol
cmp
ins
ja
xor
idiv
fwait
repnz
fwait
icebp
xor
sbb
dec
pusha
data16
bound
in
add
gs
xchg
in
xchg
fsub
and
iret
inc
mov
xchg
(bad)
call
mov
pop
lods
xchg
fdivrp
pop
cmps
inc
scas
out
retf
xor
or
rol
push
in
jbe
cmp
mov
sub
sar
sub
out
into
sbb
lea
or
in
pop
ss
adc
sub
cmp
daa
fcomp
mov
add
mov
dec
in
arpl
ret
xchg
xchg
fldcw
cmps
cmc
(bad)
cld
(bad)
test
add
sub
add
sar
jbe
mov
xor
mov
shl
fdivp
(bad)
sbb
and
ret
mov
xchg
scas
iret
lea
adc
aam
pop
push
ins
adc
pop
mov
out
xor
inc
inc
cmp
test
mov
mov
mov
fmul
outs
sub
adc
out
or
jp
sub
xchg
std
adc
stc
and
dec
jle
pop
pop
(bad)
out
inc
push
fbstp
xor
mov
dec
jge
and
mov
push
repnz
xchg
pop
xchg
mov
imul
or
sbb
cdq
mov
rol
daa
int3
mov
cmp
add
jbe
push
xchg
lods
mov
call
iret
out
mov
inc
dec
push
mov
pop
inc
adc
push
popa
dec
(bad)
sub
push
jns
in
inc
fcmovnbe
or
pop
mov
jl
outs
xchg
xchg
xchg
ins
fst
cmp
pop
addr16
inc
mov
inc
(bad)
retf
addr16
imul
xor
xor
cmps
inc
pop
inc
loopne
bound
jbe
sbb
inc
jecxz
mov
in
enter
fisub
mov
dec
mov
push
(bad)
ficomp
frstor
clc
fwait
mov
jmp
cwde
imul
pop
add
mov
lds
jo
ret
dec
xchg
mov
jb
or
(bad)
cs
cdq
sbb
mov
(bad)
icebp
dec
cli
ret
inc
cdq
mov
(bad)
pop
loope
scas
jmp
pushf
and
xor
xchg
mov
inc
push
fnstcw
or
cmps
dec
inc
and
or
pop
xchg
dec
in
jg
cld
pop
mov
scas
xor
pop
or
div
mov
xchg
inc
icebp
cwde
mov
shr
mov
repz
mov
cli
in
fcomp
and
push
mov
or
jge
loop
jbe
pop
adc
mov
mov
and
pop
mov
leave
and
mov
je
bound
imul
add
aad
bound
cld
test
sbb
mov
mov
das
fwait
push
xchg
and
push
sbb
lock
mov
and
xchg
adc
push
xchg
retf
jle
fstp
mov
in
cmps
mov
mov
es
ret
pop
or
ds
std
pop
push
and
icebp
jecxz
sub
cmp
dec
stos
rol
mov
je
mov
xchg
xchg
sti
or
(bad)
mov
in
cmp
in
push
adc
mov
add
pop
pop
lahf
leave
rcr
int3
or
sub
scas
cmp
ins
lds
out
rcl
mov
xor
or
jecxz
mov
jne
or
mov
cs
ja
inc
mov
addr16
movs
pop
adc
enter
dec
push
sub
dec
jo
pop
bound
jnp
xchg
(bad)
mov
pop
xchg
sbb
mul
xor
mov
(bad)
aas
fdivp
mov
push
sbb
mov
mov
mov
imul
test
movd
sbb
call
ins
push
movs
mov
mov
scas
lods
in
adc
push
shr
pushf
repnz
jbe
out
cmp
fwait
stc
add
xor
and
outs
and
sub
xchg
sub
test
xchg
fistp
or
frstor
jp
sbb
sbb
jp
lock
inc
inc
cdq
cmp
rcr
aam
nop
idiv
inc
sbb
adc
xchg
push
int3
dec
out
pop
sub
sub
mov
sar
mov
xchg
movs
in
fs
mov
jle
sub
loope
cld
jb
leave
ins
mov
dec
lahf
in
scas
jb
aaa
pop
test
cmps
ins
stc
push
jno
mov
maskmovq
mul
or
pop
push
inc
loope
inc
ret
mov
scas
sub
test
ret
sub
repnz
fadd
mov
push
data16
mov
clc
movs
xchg
jnp
adc
push
sbb
jge
xchg
jbe
std
or
adc
adc
cs
xchg
xchg
cmp
jle
fs
mov
mov
pop
js
push
mov
fisubr
es
js
xor
pushf
cmp
inc
jmp
dec
rcl
test
mov
fnsave
leave
or
shl
sbb
aam
(bad)
add
hlt
pop
repz
xchg
mov
(bad)
pop
retf
int3
mov
mov
sub
cs
retf
cmc
ja
pop
popf
jne
retf
loop
inc
xor
xor
mov
sahf
fdiv
jl
js
shl
out
or
cwde
(bad)
cmp
nop
cmp
sbb
dec
inc
nop
and
push
and
ds
push
in
std
stos
dec
(bad)
mov
aad
mov
jmp
and
(bad)
cwde
xchg
je
cli
int
add
pop
and
adc
push
call
xor
shr
imul
pop
sub
mov
outs
jb
dec
mov
add
mov
dec
push
dec
push
mov
jmp
dec
retf
(bad)
bound
pop
cwde
fisubr
fs
xchg
adc
or
adc
jnp
or
jmp
(bad)
iret
jo
repnz
call
jmp
fiadd
js
mov
test
mov
(bad)
sub
retf
xor
sub
lahf
pop
retf
adc
jmp
cmp
outs
sub
mov
ficom
cld
push
daa
xchg
sbb
ins
sub
pop
ins
push
xchg
neg
aad
jmp
lea
call
sbb
aam
xchg
pop
push
dec
jnp
add
jmp
lock
cmp
movs
out
aas
sti
inc
inc
inc
(bad)
xchg
mov
mov
or
cmp
rcr
jns
int3
test
fucomi
stos
mov
mov
mov
jno
repz
sbb
mov
cmp
jmp
call
stos
push
mov
xor
test
dec
cmp
push
aas
aam
xor
push
pushf
mov
popa
inc
loop
inc
xor
pop
imul
mov
sub
enter
cmp
inc
fldl2t
out
jns
fsub
movs
jp
outs
jnp
inc
aam
cmp
jge
int
repz
das
push
stc
ins
clc
xchg
sub
cmp
aaa
das
lods
sbb
adc
pop
fs
adc
dec
jne
ins
test
xlat
(bad)
sbb
in
jg
push
mov
retf
cld
jmp
movs
call
test
xor
cmp
xor
hlt
test
xchg
jmp
lods
push
lods
sahf
cmps
idiv
out
jg
stc
out
jg
scas
add
inc
add
mov
xchg
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
fsubr
jno
cmp
push
aaa
popf
daa
(bad)
adc
bound
push
mov
jecxz
cwde
sahf
jmp
aas
enter
add
out
scas
xchg
mov
dec
xchg
packssdw
xchg
cmp
imul
push
ss
push
cmp
and
das
aam
arpl
idiv
mov
and
or
adc
pop
jmp
data16
adc
iret
and
xchg
pop
stos
sub
inc
les
fimul
inc
loopne
mov
test
into
or
pop
movs
jecxz
shr
jmp
push
js
push
imul
jo
loope
movaps
rcr
xchg
and
sub
and
pop
dec
retf
pop
jmp
add
mov
test
xchg
ins
push
fld
sbb
mov
jecxz
rol
mov
mov
clc
mov
dec
sbb
jbe
pop
fidivr
dec
jne
sbb
gs
jnp
cmp
mov
mov
dec
push
xchg
push
adc
ret
xchg
mov
js
ss
movs
mov
into
and
sbb
xchg
movs
add
jns
hlt
cwde
or
leave
or
mov
sub
push
stos
(bad)
lahf
fnsave
leave
rol
ins
adc
hlt
ins
or
jmp
jg
popa
pop
sub
push
inc
aam
pop
mov
adc
daa
pusha
mov
mov
sbb
mov
pop
mov
shl
mov
arpl
sbb
stos
inc
mov
test
dec
dec
outs
mov
pop
xchg
jnp
les
lods
or
std
adc
add
daa
mov
push
and
cmps
sbb
xchg
(bad)
iret
adc
movs
dec
xor
(bad)
jb
lds
dec
fadd
call
icebp
dec
xor
ret
lods
ret
push
jp
lds
outs
or
in
int
rol
lods
ins
mov
inc
imul
xchg
xchg
scas
outs
xchg
cmp
cwde
jge
inc
stos
or
jecxz
imul
mov
fistp
xchg
rcl
out
xor
shl
stos
mov
ins
sub
mov
push
add
pop
ds
and
cmp
mov
jecxz
mov
out
xchg
call
mov
dec
mov
inc
fsubp
xor
or
cmps
fimul
idiv
jae
call
pop
add
adc
adc
dec
pop
sub
je
fild
inc
fisttp
outs
inc
fdiv
jecxz
clc
arpl
jg
fwait
aas
push
add
leave
ins
into
xor
lods
test
pop
pusha
ss
mov
jmp
lods
pusha
fidivr
inc
mov
fcmovnu
jge
mul
jmp
ficomp
sbb
and
(bad)
and
jge
pop
in
adc
push
mov
jb
outs
div
push
sbb
jns
sahf
cmp
sbb
push
xchg
pop
loopne
sub
js
out
js
dec
dec
outs
cmps
xchg
xor
push
stos
(bad)
push
fldenv
inc
test
lock
mov
lahf
mov
iret
push
mov
mov
sub
pop
mov
jmp
les
shr
mov
ja
inc
mov
inc
jnp
mov
sub
push
mov
iret
js
xchg
(bad)
js
or
pusha
sbb
data16
adc
int
lods
add
gs
fld
test
rcl
mov
dec
mov
(bad)
jecxz
or
cmp
outs
dec
out
and
nop
push
fcomp
in
push
xor
nop
jecxz
out
icebp
add
xchg
cli
jno
mov
sbb
sub
push
mov
imul
dec
and
fs
or
outs
dec
pop
mov
sar
inc
loope
pushf
xchg
loop
or
pop
scas
mov
jmp
gs
lock
inc
dec
repnz
(bad)
pop
add
(bad)
fidivr
cli
or
adc
jmp
ja
scas
ret
inc
lock
or
lea
or
aad
mov
mov
cli
pop
fbld
inc
jecxz
pop
imul
scas
outs
sbb
jmp
in
fwait
std
retf
xor
dec
(bad)
push
ss
adc
mov
ins
mov
cmp
pop
push
sbb
call
dec
in
pmaddwd
out
lock
(bad)
xor
movs
jbe
or
and
push
out
mov
xor
sar
xchg
aas
(bad)
fidivr
jb
ins
scas
das
mov
inc
push
aas
nop
xchg
adc
mov
shl
mov
jb
sbb
test
and
ret
or
and
xlat
into
int3
stos
hlt
je
cmp
xor
psrad
stc
ret
xchg
xlat
lea
lods
sub
mov
push
mov
arpl
movs
mov
std
sbb
test
add
fistp
out
(bad)
je
xor
cmp
jecxz
pop
jno
dec
ret
dec
(bad)
xor
and
push
outs
shr
pop
add
fisubr
cdq
pop
adc
test
adc
lea
inc
daa
(bad)
idiv
imul
pop
or
add
push
mov
in
add
arpl
jg
sbb
pop
and
es
mov
call
and
jle
push
sbb
jmp
ins
xlat
sbb
cwde
lods
dec
fist
sbb
or
test
popf
xchg
pop
ja
cmps
mov
push
cmc
dec
xchg
fucom
daa
sti
jge
fcom
xchg
test
xchg
jmp
ja
lahf
out
lock
imul
cdq
mov
mov
mov
dec
sbb
hlt
ficom
mov
jge
cdq
sar
mov
inc
jbe
fbstp
push
neg
in
jmp
call
xor
mov
xchg
enter
stc
mov
movs
push
je
lds
adc
test
jb
lea
dec
jg
push
jno
jo
cmc
xchg
out
repnz
sub
out
pop
inc
imul
cmc
jo
mov
aas
inc
add
(bad)
dec
rol
mov
inc
push
add
cmc
bswap
das
daa
aaa
pop
sub
xchg
je
adc
inc
je
outs
out
jae
jle
sahf
sahf
fidivr
push
neg
xor
mov
sub
fwait
dec
xor
mov
xchg
lock
xlat
dec
imul
scas
mov
popf
icebp
mov
cmps
dec
ds
xchg
jp
rcr
addr16
aad
sbb
cmove
ret
rcr
scas
pop
shl
pop
sahf
popa
jmp
aad
movs
mov
sbb
mov
out
add
sar
aad
loopne
or
cdq
icebp
xlat
(bad)
sbb
ins
mov
push
fstp
pop
iret
cmp
mov
mov
lea
call
jo
adc
dec
fsub
and
cmp
mov
fdivr
pop
dec
out
cmps
in
push
jno
pop
cmc
sub
xchg
xor
fdiv
mov
jb
push
inc
jnp
sub
and
sub
shl
adc
sbb
jb
inc
ret
jmp
cmps
mov
sub
ja
pop
jge
shr
or
ror
push
pop
les
les
push
lahf
ds
mov
mov
popa
popa
xor
cld
cdq
stos
add
push
mov
enter
jo
xchg
or
jbe
imul
ret
(bad)
sahf
xchg
cmp
test
aam
fistp
mov
xor
dec
cmc
xchg
mov
mov
jnp
shr
jmp
repz
sahf
adc
sub
icebp
outs
(bad)
or
cmp
or
cmp
and
lea
jno
xor
push
fnstsw
shr
pop
sub
dec
gs
xchg
xchg
mov
mov
pop
retf
dec
inc
ins
push
sbb
sub
icebp
push
les
push
lods
and
sahf
mov
push
mov
push
test
xlat
test
xor
mov
mov
pop
or
fisub
call
int3
add
xchg
stos
cmp
pop
lock
cs
or
sbb
xor
xchg
xchg
shl
pop
adc
sub
arpl
xor
repnz
mov
sbb
jbe
pop
fnsave
and
lds
frstor
inc
mov
cdq
ins
dec
idiv
sbb
sub
int3
les
xor
pop
dec
ror
push
out
mov
ret
retf
push
mov
ds
leave
loop
mov
mov
fiadd
aam
js
xchg
push
fucompp
xchg
and
out
jns
jbe
fwait
sbb
add
enter
cli
(bad)
and
aam
dec
add
pushf
push
shr
mov
aas
cmp
out
data16
stc
push
or
in
out
out
pop
mov
jbe
jg
sahf
cmps
repnz
rcl
mov
lods
cmp
(bad)
xchg
(bad)
sbb
loopne
(bad)
jns
mov
push
int
pop
add
hlt
int
dec
js
mov
mov
pop
mov
push
mov
lahf
fisttp
icebp
lods
shr
dec
(bad)
cmp
jne
call
test
(bad)
sbb
cmc
xlat
mov
mov
xchg
jne
pop
ror
std
cmc
cli
dec
pop
jge
arpl
and
add
lahf
in
mov
sub
or
pop
dec
mov
pop
sbb
fs
xor
sti
push
and
clc
inc
ret
xchg
fwait
push
and
pop
mov
cmc
ss
add
sbb
ficom
aas
ror
scas
loope
(bad)
cmp
es
bound
out
mov
pop
(bad)
ds
inc
aas
hlt
test
hlt
mov
cmp
loope
mov
pop
and
sub
adc
jmp
out
xchg
mov
mov
pop
mov
mov
orps
add
push
cmps
mov
jne
inc
jle
pusha
pop
inc
lods
mov
(bad)
pop
retf
test
ret
jns
jbe
add
sbb
stos
pop
mov
pushf
stos
cli
mov
mov
call
ds
cmp
(bad)
movs
pop
in
inc
pop
pop
loopne
(bad)
sbb
(bad)
fs
jno
retf
stos
test
xchg
xor
retf
scas
pop
std
mov
int
dec
dec
ret
adc
adc
fcom
dec
fild
jle
rol
(bad)
movs
mov
dec
xor
jb
ror
in
cmp
push
push
pop
or
cld
pop
jo
ds
add
xor
clc
or
and
mov
xlat
in
push
mov
fmul
sbb
pop
fdivr
add
popf
fidivr
(bad)
and
add
jmp
out
or
leave
xchg
push
fwait
lds
aad
dec
mov
pop
xor
stc
sub
imul
xchg
dec
jnp
sbb
ss
lahf
xor
xchg
fwait
scas
sbb
xchg
xor
in
fwait
int
mov
xchg
aam
sti
jecxz
cmps
jno
in
(bad)
mov
test
push
ins
js
inc
je
xchg
pop
pop
dec
loope
not
out
jb
call
xrelease
gs
and
sub
adc
popa
std
mov
rcl
scas
test
mov
call
push
ss
sti
into
out
frstor
cmp
jb
outs
or
leave
cs
and
ins
cmp
retf
test
scas
add
mov
not
movs
xchg
sub
dec
sti
mov
mov
movs
jne
or
call
ret
(bad)
mov
push
cmp
enter
fist
loopne
xchg
inc
leave
or
mov
(bad)
out
or
clc
in
ja
or
pop
inc
ss
rol
neg
push
in
scas
sti
ror
jg
test
test
or
cmp
scas
mov
pop
ins
pop
push
adc
cli
or
not
(bad)
cdq
push
(bad)
jmp
nop
es
pop
and
or
mov
jmp
ficom
shl
cmp
cs
mov
sbb
aas
int3
rcr
test
jge
inc
lods
push
dec
cmp
imul
test
inc
jns
cs
fcmovne
ret
xchg
push
ds
jecxz
(bad)
jmp
dec
jne
rcl
retf
ins
jo
jne
dec
leave
mov
push
pop
imul
pushf
and
push
mov
inc
jg
mov
popf
inc
inc
xchg
dec
dec
xor
jo
jmp
lods
pop
mov
mov
(bad)
outs
pop
jmp
int3
sti
mov
int
jns
push
push
dec
imul
fidiv
push
fist
fist
repz
inc
jae
test
neg
movs
(bad)
cmp
aaa
cmp
mov
inc
pop
outs
test
dec
xchg
cmp
adc
fmul
mov
mov
out
pop
sub
nop
dec
sbb
dec
pop
mov
cmp
outs
imul
int
(bad)
lods
jl
scas
sub
pop
(bad)
aaa
push
xchg
mov
cmc
or
retf
mov
scas
jns
das
cmps
out
adc
adc
aas
sbb
outs
cwde
and
fild
mov
adc
(bad)
sub
sub
test
stc
sbb
xchg
sar
pop
inc
add
mov
or
mov
push
pop
data16
iret
call
ja
mov
jl
(bad)
inc
cmp
movs
mov
xchg
pop
fldcw
adc
cmps
dec
mov
mov
sti
in
test
pop
sub
jnp
pop
fidiv
jecxz
clc
or
push
xbegin
nop
mov
out
dec
rep
mov
mov
mov
sbb
ins
lock
cli
add
cs
js
cmp
and
outs
sbb
or
aas
stc
je
xor
stc
rcr
addr16
mov
push
inc
add
add
sbb
jge
call
imul
in
jbe
dec
stc
(bad)
lock
in
sahf
or
jno
jg
gs
jo
retf
inc
adc
pop
stc
or
mov
push
icebp
xchg
or
cli
jns
mov
repz
add
je
cwde
sub
mov
test
jbe
sbb
call
hlt
push
movs
adc
and
rcr
scas
xchg
loopne
mov
movs
jg
mov
cmp
retf
test
cli
lods
push
lods
cmp
ins
out
mov
out
sar
pushf
mov
cmp
jne
inc
jp
push
sbb
std
jb
jg
sbb
sub
adc
sbb
sar
pop
enter
lds
mov
sub
fidivr
pop
dec
out
stos
sar
(bad)
enter
ins
xchg
dec
mov
cld
leave
js
cwde
ror
loope
out
popf
scas
push
adc
test
rcl
xor
jle
jns
cmp
mov
push
fcmovne
call
sti
dec
aaa
out
not
out
rcr
scas
pop
jmp
lds
push
dec
jp
push
jno
(bad)
xchg
add
out
pop
cmps
sbb
cmp
cs
jo
cmp
loop
ret
jecxz
xchg
movs
mov
push
sub
and
xor
jnp
sbb
retf
in
cld
cmp
neg
jns
mov
cvtps2pi
aas
or
jle
popf
push
lea
into
mov
into
xchg
outs
xor
hlt
push
dec
leave
lds
jae
loopne
iret
add
xchg
add
add
pop
ins
js
mov
mov
adc
xchg
data16
pusha
sbb
xchg
adc
jmp
cmp
std
xor
cmp
push
repz
enter
bndstx
push
inc
xchg
adc
in
stos
mov
cld
test
jg
mov
int
mov
jmp
jmp
cmp
inc
pop
loope
sbb
inc
pop
pop
push
cmp
pop
std
lods
ds
addr16
xchg
addr16
push
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
mov
cdq
or
mov
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
ret
add
rcr
sbb
cmps
mov
out
mov
out
pushf
cmps
cmp
cmps
mov
jnp
jnp
les
add
iret
mov
add
loopne
ret
in
pushf
xor
ja
xor
mov
jl
add
call
sub
mov
jecxz
mov
or
adc
or
pop
cmp
xchg
std
adc
cmp
jmp
es
rol
pop
sub
repnz
in
inc
mov
pop
cwde
dec
in
sub
in
dec
retf
je
push
push
leave
and
lods
pop
sti
or
jnp
sub
mov
sub
ins
pop
retf
loop
outs
mov
dec
movs
repnz
test
in
lfs
popa
pop
out
rcl
jb
arpl
push
push
xchg
test
cld
out
and
inc
ret
mov
xor
adc
aam
jbe
dec
and
and
sub
xor
aas
jmp
xchg
arpl
ret
fcomi
int
hlt
ds
add
sbb
xchg
(bad)
mov
sbb
(bad)
(bad)
lock
pop
add
arpl
call
xlat
(bad)
fidivr
ror
(bad)
mov
xchg
add
and
mov
adc
sbb
jg
aaa
dec
push
jg
sub
aam
(bad)
(bad)
js
jbe
sub
cmps
and
ins
pop
xor
sub
iret
inc
sbb
jbe
add
inc
test
pslld
pop
data16
in
xchg
xchg
xchg
jle
mov
vmread
fmul
mov
dec
sbb
inc
jecxz
out
mov
jb
imul
sar
pop
mov
loopne
mov
mov
jb
ss
shr
push
adc
mov
cld
jbe
fistp
cmp
out
xchg
mov
mov
rcr
xchg
in
data16
mov
in
sub
xchg
mov
or
daa
inc
dec
add
push
or
pushf
and
loopne
and
sub
add
mov
sub
add
repnz
leave
loope
jp
inc
push
sbb
mov
mov
dec
retf
mov
pop
fistp
mov
inc
fdiv
into
sahf
(bad)
aam
add
inc
jae
cdq
(bad)
(bad)
dec
sbb
push
fild
cmp
mov
xchg
fcomp
out
adc
mov
(bad)
out
cmp
int3
push
fisttp
mov
jmp
xchg
in
add
xlat
psubq
or
mov
int
pop
ret
mov
sub
ret
retf
cld
add
test
sahf
dec
lock
ins
ret
sub
sbb
(bad)
out
ds
popa
mov
push
xchg
cwde
inc
cmp
cmp
push
inc
cmp
aad
jp
int3
bound
mov
in
(bad)
sub
pusha
retf
stos
repnz
xchg
mov
mov
mov
clc
stc
xchg
jmp
or
sbb
pop
movs
retf
xchg
(bad)
xchg
fcomi
xchg
mov
jmp
or
loop
hlt
ficomp
or
popa
int3
adc
fld
outs
pop
and
enter
inc
fsubr
cmp
and
out
jmp
mov
dec
loopne
jmp
fwait
retf
xchg
push
pop
repz
mov
(bad)
or
sbb
mov
inc
lahf
shl
call
out
xchg
loope
and
call
mov
clc
in
ror
jno
pop
out
lods
ficomp
push
repz
inc
pop
aad
in
cmc
das
add
cld
fnstsw
test
loop
jo
push
inc
es
adc
cli
out
call
xchg
mov
mov
mov
xor
scas
pushf
test
fisttp
sbb
nop
sub
or
in
or
jge
mov
jmp
or
stos
pusha
pop
rep
mov
cld
jp
mov
les
popa
cmp
aad
xchg
jmp
and
loope
dec
adc
popf
nop
(bad)
xor
call
data16
mov
aad
and
ins
sub
jmp
sbb
fldcw
pop
xor
xlat
rol
sbb
push
popf
leave
xchg
imul
icebp
xor
mov
xlat
xchg
sub
stc
adc
loope
cmps
clc
in
or
pop
mov
leave
cld
pusha
dec
out
or
add
jno
push
xchg
and
add
cmp
test
xchg
pmaxsw
repnz
lods
mov
(bad)
out
popa
pop
push
cwde
pop
fadd
inc
cmp
ins
cmp
and
pop
jae
jne
in
fwait
push
imul
xor
jmp
imul
ds
push
mov
es
pop
pop
es
cmp
lea
push
(bad)
mov
mov
add
(bad)
dec
(bad)
pushf
and
cmp
ror
cmp
aaa
fnstsw
or
ss
mov
dec
mov
pop
(bad)
push
xchg
dec
pop
add
int3
xor
repnz
and
repz
(bad)
mov
inc
fwait
mov
jb
add
push
mov
inc
lods
cli
scas
xchg
ret
stos
and
aaa
loop
and
dec
xchg
jae
loop
push
(bad)
sahf
pop
outs
and
popf
ja
dec
xchg
pop
fdiv
push
ret
cwde
ret
xor
imul
dec
xor
data16
jne
xchg
jns
push
inc
cwde
adc
fidiv
push
pop
in
gs
dec
sub
jecxz
inc
movs
mov
loope
loopne
loopne
pop
vpsadbw
push
fisub
xlat
xor
clc
fld
dec
stos
pushf
imul
sbb
and
jmp
jmp
mov
fmul
shr
not
ret
jno
push
sub
data16
fmulp
add
jmp
lods
push
cmc
mov
cdq
or
je
(bad)
sub
pop
jno
loopne
fwait
jp
movs
mov
movs
loopne
clc
cdq
cmp
push
sbb
sub
pop
(bad)
out
data16
(bad)
mov
std
clc
push
pop
sbb
mov
push
pop
inc
lahf
les
pusha
jecxz
xor
mov
sub
xlat
(bad)
fidivr
pop
out
mov
jmp
pop
sub
dec
mov
xchg
xor
nop
xor
ror
loope
inc
lods
xchg
push
gs
dec
loopne
in
adc
fld
das
test
mov
push
cli
add
scas
cmp
out
sbb
(bad)
mov
pop
sub
sub
add
xor
movs
jb
push
movs
pop
adc
inc
or
pop
pop
sbb
aad
sti
out
adc
push
repz
cmps
sbb
(bad)
(bad)
stc
ret
retf
jno
mov
ret
in
(bad)
and
add
adc
int3
adc
mov
mov
sahf
mov
mov
enter
cs
cmp
adc
fisubr
xor
retf
and
xchg
add
cld
add
inc
mov
inc
gs
in
cmc
mov
int
push
add
sub
das
and
sub
and
leave
inc
push
pop
rol
inc
je
jo
jnp
andps
cmp
pop
rcl
adc
sbb
xor
inc
leave
mov
fstp
enter
jge
mov
adc
jno
hlt
pop
fdivr
push
inc
or
rcr
adc
fdivp
jnp
call
loope
jmp
mov
push
add
and
pop
or
jae
adc
jge
and
mov
movs
mov
or
pop
add
sbb
xchg
cmp
xchg
out
lahf
arpl
mov
pushf
add
xchg
mov
fistp
push
retf
loope
xor
aas
lods
mov
pop
sub
ins
(bad)
ss
ds
mov
stos
mov
add
out
fcomp
clc
jo
lock
lods
aad
xor
and
scas
loope
(bad)
xor
add
je
cmc
cwde
test
adc
jns
imul
mov
(bad)
adc
xlat
out
xor
mov
dec
aam
lea
cmp
ds
fild
pop
adc
push
sbb
push
cdq
fs
cld
jo
stos
pop
leave
mov
sub
movs
scas
sbb
fld
aaa
pop
push
ret
jmp
cli
fdivr
nop
icebp
js
daa
cmps
pop
int3
pop
stc
sub
inc
aaa
cmp
mov
dec
ins
adc
addr16
push
xchg
shr
xchg
scas
or
lahf
cld
repnz
repnz
enter
mov
push
in
(bad)
in
(bad)
jbe
or
mov
push
cmps
fimul
cmovs
cmp
cmp
(bad)
xchg
div
sub
jp
mov
enter
ins
adc
repnz
call
cmp
inc
sbb
jno
dec
test
call
xor
cli
neg
loopne
xchg
add
stos
xchg
mov
imul
sbb
icebp
add
jecxz
inc
or
stos
cmp
retf
mov
enter
mov
stos
sub
ret
ins
das
leave
ror
ss
aad
push
sahf
imul
lahf
and
imul
arpl
mov
mov
dec
rcl
fild
(bad)
mov
sbb
pop
push
sub
(bad)
fbstp
add
scas
push
ficom
enter
mov
jecxz
lods
inc
les
push
cmp
mov
out
xchg
in
cmps
je
mov
je
mov
pop
stos
aad
and
mov
or
sti
aam
ins
and
mov
pop
(bad)
mov
ja
(bad)
imul
pop
inc
(bad)
jl
adc
sbb
bound
jbe
jno
imul
cmps
jp
xor
in
loop
test
and
xor
inc
sbb
add
mov
or
stos
mov
xchg
dec
cs
inc
pop
lods
cmps
fisub
cmp
sub
add
xchg
xor
cli
fwait
mov
cmp
pop
dec
mov
xchg
sub
test
out
or
add
cmp
xor
mov
cli
and
jle
jbe
mov
add
in
fs
push
jl
jne
jno
gs
ficomp
cli
pop
lods
cli
ss
movs
iret
dec
cmp
adc
sbb
pop
or
jp
dec
dec
dec
repz
hlt
mov
cmp
mov
sub
sbb
mov
ret
leave
and
pop
lock
and
pop
mov
xchg
xchg
xchg
mov
jl
lahf
mov
shl
cmp
repz
ds
mov
push
dec
xor
retf
(bad)
cwde
leave
push
je
enter
cmp
repz
leave
and
test
in
fisub
test
cwde
mov
movs
mov
arpl
mov
push
shl
and
mov
or
jg
scas
xchg
adc
daa
sti
jmp
loope
sbb
pop
in
and
retf
mov
int
sub
mov
mov
sar
inc
cmp
(bad)
fidiv
and
into
dec
ret
adc
pop
call
dec
adc
hlt
int
xor
sub
cmp
inc
push
std
mov
jbe
adc
jp
lods
lock
in
cmc
xchg
mov
scas
lea
jecxz
outs
ss
jnp
pusha
push
push
pop
cdq
repnz
ror
int3
sahf
rol
and
mov
fst
xor
sbb
cli
nop
xor
xor
mov
adc
sbb
test
adc
add
push
scas
es
xchg
jno
or
sub
jne
outs
(bad)
fdivr
inc
in
pusha
test
in
fstp
push
ss
fild
jmp
add
ret
jmp
jbe
icebp
popa
sbb
imul
jmp
or
xchg
xor
pop
imul
pop
div
sub
adc
pop
jbe
ficomp
xchg
ret
mov
aaa
fwait
stos
in
scas
push
push
xlat
ss
clc
retf
imul
in
push
lds
ficom
jmp
sub
mov
mov
push
test
mov
jle
cmp
jb
(bad)
dec
mov
in
shl
sbb
jb
dec
adc
out
nop
aaa
rol
mov
xor
pop
and
or
rol
jae
in
xchg
xchg
mov
fimul
bound
xchg
sbb
push
adc
retf
push
xchg
sbb
nop
push
pushf
repnz
repz
and
imul
int3
xchg
push
aad
push
sub
int
(bad)
in
ficom
(bad)
mov
rcr
loop
or
sahf
inc
xor
inc
pop
xor
pop
sub
loop
jge
add
xchg
dec
iret
dec
jl
sahf
daa
test
xor
and
dec
test
in
scas
ja
dec
xchg
scas
mov
fmulp
push
mov
popa
mov
add
cmc
ins
pop
or
push
inc
xor
aad
mov
in
xor
addr16
push
(bad)
jb
mov
xchg
fld
jecxz
addr16
lahf
pushf
pop
rcl
aaa
ds
mov
mov
fs
push
imul
pop
fucomi
or
sbb
and
mov
pop
mov
pop
add
jge
push
inc
adc
stos
fs
and
adc
gs
test
cmps
int3
jecxz
xor
rcl
scas
imul
aas
push
mov
das
xor
fidivr
fwait
pop
sub
lods
sub
mov
push
sbb
inc
inc
xlat
jmp
jo
push
mov
sti
adc
xor
jbe
mov
sbb
nop
loop
mov
add
add
sbb
in
out
pop
(bad)
ficomp
rol
xchg
sti
sub
inc
int3
jae
jb
lods
leave
nop
jnp
(bad)
ja
stos
mov
je
je
xchg
push
push
or
sbb
cdq
pop
dec
jno
fstp
mov
add
outs
xchg
cmp
jge
fisub
loope
stos
out
xchg
push
lahf
aad
pop
push
neg
mov
lock
jne
hlt
cdq
sbb
inc
lods
jae
hlt
sbb
(bad)
dec
xchg
out
or
hlt
mov
sbb
xchg
sbb
mov
jns
lods
jne
call
retf
in
sub
js
push
arpl
mov
xor
push
adc
dec
dec
outs
mov
rcl
das
push
jp
mov
jecxz
or
nop
and
cmp
in
popa
clc
mov
mov
pop
mov
movs
call
cmp
lock
pop
test
ja
int3
jp
aas
popa
push
sbb
xor
mov
or
ds
mov
push
les
in
loop
push
jmp
sbb
(bad)
adc
mov
ins
addr16
mov
sub
mov
adc
mov
(bad)
stc
jns
repz
ins
jbe
loopne
mov
pop
push
jne
aas
sbb
pop
outs
sub
in
lea
pop
mov
push
mov
jmp
sahf
out
repnz
mov
or
pushf
push
jnp
retf
mov
or
cmc
bound
arpl
lds
adc
add
mov
xor
pushf
cwde
pop
in
cwde
pop
xchg
lahf
pop
sbb
ret
in
pop
ja
dec
xor
iret
mov
add
es
push
inc
scas
loope
xchg
out
aaa
inc
scas
aam
lahf
repz
sbb
shr
pop
ja
imul
fistp
ss
and
imul
arpl
jle
out
clc
loopne
mov
push
xor
and
adc
les
mov
pop
into
(bad)
cmp
out
pop
pop
retf
sbb
lahf
(bad)
repz
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
shl
jmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
pop
cmps
imul
sahf
scas
jmp
fstp
jne
std
pop
rcr
xor
dec
out
std
and
sahf
pop
add
cmps
mov
or
push
mov
aad
xchg
push
mov
ret
sub
jmp
lea
xor
push
inc
mov
adc
idiv
add
adc
push
pop
int3
outs
popa
shr
mov
jle
in
mov
dec
sub
push
test
mov
sub
cmp
xor
pop
sti
in
xor
cmp
mov
(bad)
push
int
xchg
mov
cmps
jns
mov
jmp
jo
jne
adc
xlat
std
call
pop
push
test
pop
rcl
test
inc
xchg
mov
out
jg
mov
popf
(bad)
xchg
bound
mov
sbb
aaa
ja
lea
mov
shr
(bad)
outs
cmc
std
retf
pushf
ret
cmp
mov
ja
jns
ret
sub
movs
push
xor
cmp
test
(bad)
sub
sti
sub
add
push
out
lock
cmps
fs
dec
retf
push
icebp
les
imul
mov
jecxz
aas
xor
add
push
xchg
xchg
cmp
push
addr16
js
cli
inc
lds
mov
xor
fcom
js
(bad)
mov
and
setg
cmp
mov
aaa
dec
sbb
loope
inc
jo
xchg
lahf
icebp
test
push
stos
add
push
dec
jle
or
or
mov
cmp
cdq
dec
aam
push
ss
lods
call
dec
lds
test
sub
fadd
out
shl
fs
pop
call
(bad)
adc
jae
and
xchg
xor
rep
jnp
fsubr
into
adc
xchg
pop
repz
inc
je
mov
out
fwait
jmp
push
pop
movs
js
cmp
mov
pop
sub
xchg
aas
push
gs
ins
(bad)
jle
mov
out
(bad)
bound
jnp
fadd
ins
sbb
js
xchg
xor
cmps
jb
ins
and
sub
mov
popf
push
fs
dec
sar
push
gs
mov
movs
fwait
mov
mov
xlat
dec
rcl
xchg
push
push
retf
push
(bad)
sahf
push
imul
mov
cdq
sub
lods
shl
addr16
dec
je
sbb
sub
into
jmp
nop
fcomp
mov
test
fdiv
inc
inc
stos
or
dec
mov
sbb
cs
arpl
aam
adc
and
mov
imul
add
rcl
cmove
call
sahf
add
mov
call
pop
add
fsub
cmp
jne
mov
fwait
push
or
ror
imul
add
(bad)
and
out
mul
ins
xchg
sub
xor
cmp
push
out
mov
retf
and
arpl
outs
dec
mov
out
out
adc
jbe
imul
xchg
repnz
out
pop
jne
ja
cld
(bad)
pop
inc
aas
cmp
pop
sbb
mov
sub
lods
das
mov
sub
dec
fmul
call
xor
dec
movs
(bad)
and
js
mov
rol
test
mov
in
fdivr
or
adc
jge
cwde
mov
lods
ds
rcl
outs
or
(bad)
cmps
push
dec
jge
test
push
push
inc
out
cmps
or
cmc
jne
ja
xchg
pop
pop
stos
push
pushf
(bad)
cmp
fadd
adc
dec
mov
sub
cmp
sub
js
iret
xor
pop
outs
lods
xchg
dec
into
and
adc
xor
fnstcw
(bad)
ret
and
scas
sbb
pop
jmp
add
hlt
test
clc
jmp
xchg
(bad)
into
cmp
adc
mov
pop
(bad)
shl
inc
fidiv
lea
mov
xor
jae
cwde
jmp
cld
imul
iret
(bad)
out
xchg
dec
arpl
(bad)
adc
mov
inc
rcr
xchg
test
cmp
popf
mov
dec
cmp
enter
aam
mov
jbe
push
push
and
pop
in
stos
pop
xchg
(bad)
movs
ror
bound
mov
cmp
daa
in
or
dec
jb
push
mov
cmps
xor
adc
repnz
mov
mov
add
cmp
push
int
outs
cwde
test
mov
inc
xor
jns
xchg
imul
jb
std
pop
add
pop
ror
inc
sbb
in
mov
dec
push
mov
mov
push
adc
cmp
icebp
imul
stc
sub
sub
mov
(bad)
or
jle
scas
(bad)
stc
xchg
jmp
jnp
sbb
imul
call
inc
hlt
pop
popf
mov
and
fstp
sub
pusha
aad
mov
pop
imul
cwde
mov
bound
pop
or
xor
(bad)
addr16
mov
dec
scas
or
mov
push
lea
mov
test
push
(bad)
int3
sbb
adc
inc
and
bound
xchg
fs
mov
mov
adc
lods
cmp
mov
std
cwde
ret
and
nop
shl
xchg
sub
icebp
scas
pop
push
cdq
push
cld
outs
dec
jge
or
ds
sbb
cmp
shl
push
int3
xor
sub
bound
mov
pop
add
or
xchg
mov
sbb
mov
sbb
xchg
xchg
pushf
jmp
pop
xor
mov
pusha
adc
iret
adc
addr16
stos
or
bound
enter
mov
and
test
cld
push
mov
cmp
push
repz
fld
mov
cmp
jb
sub
ficomp
jb
lock
ficomp
push
daa
mov
mov
xchg
ins
add
out
adc
movs
out
pop
ret
(bad)
ins
inc
jnp
add
jns
push
adc
into
sub
lea
imul
xchg
push
jb
push
clc
enter
movs
dec
dec
mov
mov
mov
jmp
mov
cld
and
retf
push
mov
xor
mov
mov
xchg
js
dec
cld
push
hlt
xchg
mov
mov
sbb
mov
mov
jo
pop
ja
clc
cmp
mov
jno
aam
sub
in
sbb
sbb
adc
rol
jg
dec
mov
dec
sbb
cld
call
sbb
mov
cmp
xor
and
push
aas
(bad)
scas
cmps
push
push
pop
popf
(bad)
lds
jnp
imul
ds
mov
div
jp
lods
pop
(bad)
jge
jl
xchg
test
in
pop
mov
fwait
or
imul
in
mov
std
gs
into
push
sub
add
push
out
(bad)
ds
lea
outs
sbb
xchg
xchg
xchg
dec
xor
pop
aaa
shr
in
mov
outs
scas
dec
das
or
cmps
rcr
and
loope
sub
stos
adc
int
pop
fisttp
xchg
ins
mov
and
xchg
pop
inc
stos
pop
jno
cmps
jns
jp
bound
pop
push
mov
icebp
dec
mov
scas
rcr
sbb
lock
adc
mov
stos
adc
aam
test
fs
mov
jb
movs
jbe
cs
xchg
adc
data16
xchg
xchg
pop
sti
out
scas
mov
pop
or
mov
mov
xchg
fstp
shl
fild
mov
fldln2
adc
rcl
call
push
push
push
je
inc
jno
jmp
sbb
cmps
jo
inc
movs
movs
cmp
pop
inc
movs
jl
jg
jecxz
pushf
mov
inc
fcom
push
inc
mov
(bad)
scas
frstor
cli
inc
loopne
loopne
fwait
inc
dec
sar
mov
mov
pusha
js
sub
inc
jae
ret
and
mov
cmps
das
dec
cmp
mov
inc
stc
sub
dec
and
push
pop
mov
jle
mov
jle
xchg
in
xor
mov
das
sahf
pop
adc
jnp
xchg
(bad)
push
lock
xchg
jecxz
mov
pop
out
inc
xor
push
in
test
fisttp
xor
das
mov
jmp
bound
xchg
in
xchg
outs
jne
cmp
mov
lahf
and
cmp
xchg
lock
cwde
push
jp
cmp
push
out
push
aas
xlat
xchg
movs
test
icebp
stos
packsswb
push
idiv
sub
cmp
mov
jecxz
mov
icebp
add
mov
shr
fld
mov
pushf
and
int3
jno
lahf
adc
lods
aam
jns
cmp
xchg
mov
imul
je
inc
jmp
inc
mov
adc
nop
cwde
jp
and
lahf
or
into
mov
movs
xchg
jns
(bad)
xchg
out
loopne
and
repz
fisubr
scas
imul
jmp
leave
in
rcr
jg
pushf
fdiv
xor
aas
popa
push
call
ret
clc
cld
sub
adc
xchg
xor
sbb
or
shl
cmp
mov
idiv
adc
cmp
pushf
xor
outs
or
in
fsubr
inc
retf
mov
xchg
lods
test
pop
icebp
daa
jns
cmp
retf
add
imul
fimul
in
xchg
add
cmp
hlt
mov
mov
cmp
or
bound
(bad)
mov
ins
int3
mov
hlt
test
paddusw
mov
ror
adc
adc
shr
dec
js
pushf
sub
push
in
xor
jg
and
mov
sbb
mov
mov
add
imul
or
fnstcw
lea
cs
cmovge
out
and
je
cmp
ficom
repnz
ins
imul
jmp
push
push
inc
jle
push
clc
add
xor
andnps
and
jecxz
imul
icebp
repz
mov
sbb
fldenv
dec
lods
jnp
xor
and
mov
(bad)
mov
fcmovbe
jge
outs
adc
repz
sub
xlat
repnz
xchg
je
fwait
and
xchg
lods
test
pop
dec
adc
in
or
fist
retf
or
sbb
push
adc
ja
test
xchg
xor
add
pop
or
sub
or
cmp
cmp
std
xchg
or
addr16
sub
cmps
pusha
shl
sub
mov
push
outs
pop
das
xchg
or
dec
std
push
popf
es
or
adc
sub
dec
mov
mov
fwait
outs
cli
xchg
sahf
ret
and
ret
inc
ret
xchg
lods
inc
bound
lahf
pop
cmp
das
mov
rol
cmp
daa
out
sti
shl
imul
add
pop
push
dec
or
and
dec
and
gs
lods
mov
cmp
pushf
int3
fcmove
(bad)
cmp
or
cmp
mov
mov
jae
fs
xor
bound
int
(bad)
sub
and
rcl
into
pushf
cmc
add
inc
aam
add
(bad)
in
adc
jmp
inc
mov
mov
lahf
popw
sub
mov
dec
or
arpl
out
out
rcr
retf
push
sub
out
inc
scas
add
popf
jmp
pop
mov
call
test
call
retf
push
and
imul
jg
adc
pop
aaa
jle
jmp
or
sub
and
xchg
pop
and
cmp
ret
(bad)
repnz
push
adc
bound
int3
sbb
sub
fld
inc
push
pop
dec
enter
sbb
mov
movs
std
imul
stos
sub
sbb
call
out
dec
or
ja
xchg
pop
gs
inc
fwait
mov
pusha
test
fs
adc
daa
fst
out
inc
push
leave
cmove
mov
mov
pushf
aas
mov
data16
ins
cmp
push
and
jge
fwait
rcl
pop
shr
arpl
inc
mov
add
xor
pop
jge
pop
jnp
lock
cmp
xchg
hlt
fwait
or
mov
adc
(bad)
jns
(bad)
sahf
push
push
imul
std
dec
scas
pop
xor
std
pop
ss
cmp
imul
push
mov
mov
push
pop
and
sub
mov
pop
cmp
fcomi
dec
stc
sbb
inc
mov
hlt
cmp
mov
lods
xor
cmps
aas
imul
hlt
dec
and
cmp
in
pop
outs
add
push
int3
mov
or
out
dec
pop
jns
cli
out
pop
inc
sub
icebp
js
icebp
hlt
movs
inc
stc
outs
arpl
dec
jmp
mov
call
shl
in
jnp
or
lods
pop
(bad)
mov
mov
rol
cmp
adc
sub
inc
sar
jnp
and
in
inc
xchg
pushf
sti
inc
ret
sbb
int
pop
in
enter
push
cli
aad
and
in
stc
shl
dec
ins
mov
cwde
aad
dec
ficomp
ss
dec
mov
mov
jo
ins
mov
(bad)
inc
clc
mov
loop
aas
push
stc
mov
outs
mov
xlat
mov
addr16
je
ins
aam
jp
push
shr
cmp
pushf
mov
add
jmp
xlat
and
xor
fcom
(bad)
fsubr
mov
movs
jb
push
mov
or
(bad)
xchg
jl
repz
mov
outs
jecxz
in
cwde
shl
rol
aas
xchg
icebp
lods
cdq
stc
xchg
shl
pop
cmps
into
call
and
dec
lock
out
ins
mov
add
mov
sbb
dec
clc
jne
cmp
fdivr
call
(bad)
sbb
push
icebp
pop
sbb
pop
push
popf
add
add
cdq
cld
mov
data16
lahf
and
cwde
fucom
push
pop
out
fs
push
push
inc
cmp
pusha
push
enter
mov
out
cmc
pop
fimul
jo
sbb
add
icebp
push
out
push
mov
(bad)
cld
test
adc
and
cli
rol
jecxz
push
ja
sahf
cwde
pop
sbb
lods
in
adc
xchg
xchg
push
push
retf
dec
xor
sub
das
aam
iret
cli
and
or
ret
cld
xor
push
dec
cmp
or
mov
out
inc
lods
sub
jbe
mov
jmp
pusha
push
jge
lds
jecxz
sti
lods
dec
xor
daa
cmp
pop
mov
gs
retf
aam
test
outs
mov
xchg
daa
xchg
mov
push
loope
jbe
xchg
sbb
cwde
test
aas
jp
push
lahf
xor
in
add
xchg
jl
jnp
int
cwde
in
mul
mov
xchg
pop
xlat
movs
mov
int
jmp
in
cmp
cwde
xchg
call
jmp
loope
out
fbstp
pushf
mov
scas
out
fsub
std
cs
push
fwait
cmp
jl
rol
push
nop
mov
cdq
cmp
cmp
(bad)
pop
(bad)
daa
inc
sbb
jg
sbb
push
add
mov
jge
shr
shl
sub
scas
sbb
dec
imul
sub
mulps
dec
dec
xchg
in
psubb
jp
pop
(bad)
fistp
stc
jmp
sar
mov
in
xchg
pop
pop
push
or
mov
pop
adc
adc
leave
sbb
(bad)
in
jl
js
out
or
rcl
adc
inc
jmp
jmp
stos
push
mov
jne
add
jle
loop
jmp
fbstp
jbe
lea
(bad)
cli
cdq
pop
pop
cmp
sbb
cmp
xor
es
daa
(bad)
push
push
ds
mov
outs
xchg
mov
mov
sbb
fst
cli
inc
add
out
jg
stc
out
jg
stc
mov
test
icebp
xchg
stc
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
repnz
mov
ja
mov
dec
ja
imul
jae
repnz
popf
xchg
cmps
or
cmp
add
hlt
sub
add
adc
push
frstor
aaa
sbb
mov
add
mov
loopne
push
into
repnz
pop
shl
adc
pushf
icebp
jb
adc
arpl
mov
jl
pop
jno
loope
inc
xlat
popa
pop
hlt
aaa
push
push
sub
mov
sahf
pusha
ss
inc
test
sbb
adc
dec
xchg
cwde
in
xor
mov
sub
pop
mov
in
unpcklps
xor
inc
pop
xor
mov
mov
test
gs
add
pop
int
fwait
dec
call
ja
ins
fiadd
adc
scas
cmp
sbb
mov
out
xor
std
cli
leave
fnclex
fsub
stos
add
mov
call
pop
pop
jbe
ds
inc
push
arpl
in
push
in
ret
(bad)
sbb
or
mov
repz
ins
mov
jb
or
int3
and
xchg
jb
pop
jnp
mov
cld
push
test
enter
bound
int3
mov
sbb
nop
mov
addr16
inc
jl
mov
jecxz
adc
adc
repz
sbb
les
popf
sub
inc
pop
aam
mov
repnz
adc
sub
sub
(bad)
xchg
daa
sub
out
setnp
cmp
mov
push
xchg
jb
out
xor
adc
sub
dec
jno
ss
outs
push
jmp
cmp
not
xor
pop
sar
fcmove
mov
mov
adc
cmp
aas
dec
and
pop
retf
in
jo
jle
(bad)
sub
movs
cmps
xchg
fidivr
pop
dec
daa
mov
scas
sbb
shl
ins
je
and
mov
movs
fcomp
das
lahf
push
inc
pop
jnp
pushf
push
mov
int3
add
idiv
xchg
in
mov
rcl
push
inc
movs
inc
adc
scas
mov
out
mov
jl
shr
jo
outs
adc
cld
sbb
fneni(8087
movs
call
sub
xor
lds
repnz
or
cmp
jmp
push
mov
popf
push
mov
mov
idiv
mov
bound
inc
jo
aam
lods
clc
pop
pop
mov
mov
shl
xor
push
in
rcr
sbb
clc
mov
bound
scas
push
pop
imul
dec
mov
mov
cmp
add
ror
lds
dec
sub
mov
push
mov
sahf
cmp
add
sub
ins
and
xchg
sahf
jecxz
fisub
(bad)
mov
jmp
jg
push
mov
dec
mov
ds
nop
cld
sar
push
idiv
add
into
mov
fs
shl
imul
dec
sar
jae
lea
jge
call
or
out
xchg
pop
aas
jae
cld
in
loopne
jbe
scas
add
jg
stos
iret
inc
inc
fistp
arpl
push
pop
cmps
sbb
aaa
and
shr
je
mov
aaa
xchg
jbe
xchg
retf
xchg
js
in
mov
dec
sbb
retf
stc
test
daa
sub
push
add
cld
sub
inc
xor
jnp
sti
push
cmp
(bad)
ror
jmp
test
popf
push
cli
test
enter
(bad)
sbb
iret
push
repz
push
in
sbb
les
jecxz
xchg
sub
sbb
fadd
dec
sub
imul
aas
pop
pop
int3
add
rcr
ret
rcl
jle
scas
pushf
sub
xor
ds
pop
cld
mov
xlat
pop
cdq
cmp
mov
sbb
inc
xchg
aaa
out
arpl
iret
retf
mov
repz
push
mov
loopne
scas
xchg
add
pop
dec
call
jg
push
mov
(bad)
retf
cld
push
sbb
(bad)
cmp
mov
ins
mov
out
mov
popa
inc
jae
stc
or
pop
adc
jne
iret
inc
dec
arpl
sahf
imul
arpl
and
pop
adc
adc
cld
imul
or
and
clc
pop
cmp
mov
jecxz
aaa
rcl
out
popf
adc
pop
cmp
adc
inc
add
popf
int3
ror
scas
lds
call
sbb
mov
sahf
jnp
and
shr
mov
and
xor
outs
lods
std
xor
ss
push
add
inc
xor
inc
out
movs
(bad)
ja
dec
clc
mov
imul
std
mov
xor
out
aaa
mov
dec
xlat
push
lods
or
jg
repz
in
mov
dec
jmp
mov
enter
adc
std
push
pusha
test
mov
lahf
sbb
push
setle
or
pop
push
pop
out
sbb
ret
push
xor
pop
loope
and
push
inc
push
mov
ret
lds
seto
jecxz
fcom
dec
xchg
ret
adc
sti
push
push
adc
adc
pop
xchg
cmp
cmp
xor
fidivr
jl
xchg
(bad)
retf
es
loop
sub
mov
imul
outs
ins
adc
or
jmp
stos
dec
sub
jg
fadd
outs
imul
sub
iret
mov
jo
cdq
outs
pop
xor
lods
cmp
loop
cmp
jae
ja
loope
leave
rcl
div
sub
int
int
rol
sbb
pushf
pop
add
cwde
lds
pusha
aam
fwait
push
xchg
push
sub
es
scas
sbb
add
loop
cmps
xchg
cld
mov
icebp
fmul
lea
out
sbb
adc
sar
stos
mov
jne
int
jl
leave
adc
mov
mov
adc
arpl
in
jne
test
jp
mov
not
leave
jge
pop
stos
mov
sub
mov
xchg
pop
icebp
xchg
not
pop
repnz
add
pushf
bound
mov
test
arpl
sub
push
std
xor
repz
mov
stos
loope
out
mov
mov
push
or
xor
popf
ror
mov
lods
mov
loope
es
iret
sbb
inc
iret
push
cmp
jns
in
les
test
in
push
mov
mov
es
xchg
movs
outs
mov
gs
call
sti
in
(bad)
sbb
scas
test
pop
lds
repz
mov
into
xor
push
xchg
scas
push
hlt
call
push
gs
xchg
rcr
mov
cmp
or
xchg
(bad)
mov
nop
test
(bad)
push
aad
aaa
aaa
mov
or
push
das
adc
cmp
jle
lods
and
and
cmp
cdq
fidivr
sbb
movs
(bad)
cmp
sbb
or
mov
bound
loopne
cmps
and
pop
push
retf
(bad)
int
xchg
(bad)
(bad)
cld
add
cmc
xchg
jns
jmp
pop
pop
out
mov
jmp
iret
icebp
or
adc
gs
and
xchg
and
arpl
(bad)
out
xor
sub
xchg
cmc
mov
movs
aas
pop
(bad)
pusha
cmps
(bad)
sub
ret
and
push
test
data16
jne
out
adc
and
cmc
or
jp
(bad)
aas
xchg
imul
fld
xchg
inc
add
sbb
out
add
xor
rcr
push
and
in
and
xor
je
xor
inc
sahf
add
mov
pop
mov
add
retf
fidiv
fs
lea
jns
lock
mov
dec
outs
aas
inc
sbb
sub
xor
iret
pop
sbb
lahf
add
out
xchg
pop
scas
pop
(bad)
fstp
cmp
xchg
gs
sub
daa
ja
inc
ror
js
push
mov
xchg
faddp
cli
shl
or
dec
call
xchg
cmps
adc
cmp
sbb
xchg
mov
sub
mov
lahf
pop
push
addr16
jb
stos
(bad)
out
rol
aad
in
aad
lds
adc
pop
fs
and
rcl
mov
dec
les
std
mov
movs
add
idiv
out
push
xlat
xor
in
sahf
mov
addr16
dec
xchg
js
ror
gs
dec
push
sub
xor
ss
std
(bad)
mov
add
ss
sub
ja
adc
xchg
call
ja
and
xchg
or
in
sbb
shr
in
fidivr
call
lea
adc
dec
mov
aad
fbstp
xchg
int
popf
inc
outs
jnp
clc
and
test
enter
cmp
jno
mov
sub
push
bound
sbb
mov
sbb
pop
loopne
xor
adc
mov
adc
mov
and
jl
xor
mov
aaa
add
cmp
mov
jl
xor
sub
aam
cwde
adc
sub
dec
loope
and
mov
mov
add
adc
fmul
jmp
add
js
(bad)
jmp
retf
mov
ficomp
jg
lods
sar
xor
mov
pop
push
out
mov
es
mov
mov
and
pusha
scas
inc
cmp
fcmovu
cli
rol
inc
push
aas
and
adc
mov
adc
push
dec
mov
js
les
jno
fs
pop
fstp
jg
pop
clc
in
popw
pop
adc
mov
pop
mov
fldlg2
sbb
int3
jo
add
mov
dec
(bad)
fwait
dec
push
push
scas
jno
fild
sub
xlat
jo
inc
pop
push
sbb
movs
in
gs
cld
fistp
in
cmps
icebp
ret
or
inc
inc
pusha
dec
jge
scas
adc
outs
ret
ret
fsub
cmps
pusha
pop
jp
mov
sub
add
ror
imul
imul
popf
out
and
jbe
add
push
(bad)
stc
and
in
push
dec
jge
xor
mov
xchg
in
fucomip
lds
jmp
push
das
jnp
ja
xor
jp
addr16
pushf
pop
fisub
stc
mov
dec
sub
pop
in
xor
push
push
dec
sbb
cwde
xchg
mov
xor
sar
bound
sbb
in
dec
test
ins
call
cdq
mov
mov
aad
add
shl
and
or
imul
out
mov
mov
add
jge
mov
mov
mov
pop
daa
mov
retf
sub
popa
lea
mov
jge
je
sti
std
pop
mov
lods
lahf
call
pop
retf
and
(bad)
retf
jne
jmp
xor
lahf
in
(bad)
add
and
mov
enter
mov
(bad)
imul
loopne
test
mov
sub
bound
int
repnz
push
jl
push
int
dec
cmp
fst
jecxz
xor
movs
lea
pop
clc
jmp
rol
fcomp
pop
cdq
popa
and
xlat
test
pop
ror
cmp
xor
adc
mov
call
jl
scas
mov
sbb
mov
jbe
rcr
add
jecxz
js
ins
xchg
xor
out
mov
mov
out
mov
aad
je
pop
or
out
repz
xor
jmp
mov
push
jnp
in
in
inc
and
adc
inc
pop
cmp
movs
leave
in
rcr
cmps
lahf
xlat
sub
or
mov
pusha
test
call
mov
adc
or
fdiv
dec
pop
out
add
jecxz
test
push
adc
test
xor
(bad)
jg
mov
aad
rcl
lds
push
mov
jo
scas
nop
sbb
mov
jmp
fld
push
or
outs
fwait
test
sub
imul
push
xor
mov
inc
inc
cld
(bad)
fldcw
out
mov
inc
pop
pmaxub
imul
sbb
xor
loop
sbb
inc
shl
jb
gs
int
and
inc
data16
pop
aam
xchg
ret
jmp
repnz
fst
std
int
in
mov
cwde
xchg
xchg
push
dec
sub
cmp
scas
clc
fmulp
daa
push
imul
add
ret
push
dec
call
push
jmp
repz
push
cmp
xor
fs
loopne
push
xchg
jmp
push
mov
sbb
push
cmp
mov
fcom
loop
outs
cmp
sub
xor
(bad)
mov
xor
adc
fmul
aaa
sub
enter
call
popf
pop
mov
and
dec
inc
(bad)
out
fld
mov
sbb
loopne
sub
stc
stos
(bad)
xchg
mov
sub
rcl
es
loope
test
dec
jp
int3
pop
jnp
mov
fucom
stc
jo
sub
into
sbb
mov
cwde
push
push
dec
and
mul
jb
sbb
mov
mov
sub
pop
add
jb
call
stos
and
wrpkru
aad
push
loopne
push
lods
ja
(bad)
push
mov
inc
add
jmp
ins
add
ffree
cwde
imul
or
or
movs
xchg
push
mov
repnz
or
clc
movs
cli
ss
lea
adc
fmul
inc
cmp
aaa
push
(bad)
retf
cmp
cmp
ss
enter
repz
mov
pop
sbb
pop
jg
mov
jl
ins
std
es
dec
call
repz
rcr
mov
sub
mul
sub
inc
inc
sbb
fbld
sbb
adc
(bad)
lock
xchg
outs
aad
stos
inc
out
push
outs
nop
push
jnp
pop
mov
imul
sbb
pop
push
xchg
mov
pop
adc
(bad)
xor
and
xor
xchg
stc
jmp
fwait
jl
enter
dec
call
pop
or
aam
mov
pop
enter
test
dec
sub
data16
in
mov
xor
xlat
add
fwait
push
cwde
push
or
mov
pop
call
call
loope
loope
rcr
push
mov
int3
cmc
out
les
and
dec
lahf
push
xlat
cmp
div
cmps
pop
rol
js
enter
or
xchg
cmps
inc
out
loopne
movs
push
(bad)
ret
test
test
jmp
ins
lea
leave
dec
es
push
call
add
movs
imul
jge
mov
jne
inc
jle
(bad)
stc
stc
in
out
xchg
movs
mov
push
mov
aaa
xchg
loop
xchg
and
enter
push
inc
cdq
and
pop
arpl
fld
xchg
je
out
mov
and
mov
adc
imul
shr
imul
mov
jg
ret
jns
in
pop
std
cmp
inc
les
cdq
fdivr
fld
mov
push
neg
pushf
iret
inc
fidiv
add
fwait
add
add
xchg
loop
(bad)
cdq
ret
test
add
lahf
ror
retf
jnp
push
(bad)
mov
lock
call
scas
or
xchg
mov
cmp
sbb
mov
sbb
dec
sahf
and
pop
jge
mov
inc
iret
push
pop
loop
fstp
aaa
nop
movs
push
pushf
into
dec
adc
pop
push
jecxz
les
cs
hlt
sub
jg
jne
nop
dec
sbb
mov
fist
clc
pushf
clc
mul
sub
call
cld
repz
aas
(bad)
cld
repz
add
pop
dec
pop
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
xchg
test
(bad)
cdq
cmp
dec
aaa
ror
cdq
imul
dec
push
cmps
mov
repnz
lea
and
fisttp
push
jns
mov
inc
pop
(bad)
dec
push
jg
jmp
iret
pusha
sub
dec
jbe
movs
call
push
imul
sub
repnz
cmp
push
mov
mov
std
or
lds
shr
in
repz
data16
mov
cmp
sbb
and
jns
(bad)
jp
adc
cli
js
mov
retf
in
dec
inc
adc
jb
jg
mov
dec
adc
sub
inc
pop
push
bnd
call
sbb
and
stos
pop
aas
pop
adc
lds
jge
repz
cmc
repnz
cmp
inc
pop
ret
pop
dec
rcl
jmp
imul
or
(bad)
mov
cmc
or
push
or
ret
mov
cmc
pop
sbb
std
sbb
add
das
mov
jmp
dec
int3
and
loopne
or
jb
stos
hlt
call
fwait
(bad)
lahf
scas
add
xor
xlat
dec
jle
ins
sbb
iret
pop
add
ror
inc
sbb
xchg
mov
js
or
mov
add
mov
jae
sbb
hlt
mov
inc
jecxz
stc
daa
jno
in
inc
mov
call
repz
inc
rcr
pusha
mov
(bad)
lods
rcr
inc
push
adc
and
jb
cs
jecxz
daa
sbb
push
mov
retf
xor
inc
ja
jmp
pop
mov
xchg
cwde
in
mov
loope
mov
mov
cmp
jmp
push
jl
mov
xchg
in
bound
xor
mov
xor
jecxz
ds
lea
adc
(bad)
ss
mov
loopne
rol
sbb
fadd
sti
movs
mov
(bad)
pop
push
mov
int
fisttp
push
loop
lock
cmc
pop
pop
popa
xor
mov
inc
sbb
push
pop
push
(bad)
fadd
es
push
rcr
mov
ja
add
sahf
mov
fst
dec
jle
sbb
lods
sahf
stos
out
sbb
mov
pusha
cmp
jns
loope
dec
cmp
push
imul
popa
sub
fist
or
adc
xchg
and
mov
mov
int3
in
stc
or
je
jmp
cmps
mov
fsub
pop
xchg
mov
and
or
mov
hlt
pop
out
cli
push
nop
sub
push
cwde
loopne
push
or
or
pop
pop
imul
enter
int
lods
pop
mov
in
jmp
out
or
(bad)
cmps
in
jb
fistp
xchg
enter
cmp
in
add
cld
mov
add
push
outs
adc
xchg
dec
and
mov
ss
pop
mov
mov
ins
mov
or
iret
jp
mov
test
push
inc
rcl
scas
and
jmp
shl
mov
fs
(bad)
stc
ja
push
sub
aaa
sub
or
scas
ret
lahf
(bad)
call
cmp
add
add
push
ins
stc
jg
xor
mov
movs
push
or
ss
pushf
fwait
in
mov
out
jge
fwait
inc
mov
stos
out
not
pop
push
pop
retf
dec
fs
pavgb
sbb
movs
pop
jae
aas
jg
jns
pop
mov
jmp
xchg
adc
js
push
in
jmp
outs
hlt
cmp
jbe
out
pop
sub
scas
pop
ja
xchg
inc
aam
shr
clc
int
das
into
in
sub
xchg
int3
out
or
int
in
pop
into
push
pop
inc
jmp
mov
sahf
popf
xchg
sub
out
cmp
sub
adc
xor
test
ins
dec
jp
fucomip
and
xor
popa
jle
sub
mov
stos
jne
cmp
mov
xchg
sub
repz
imul
cmp
adc
test
adc
(bad)
sub
in
out
sub
push
lahf
call
jp
sub
imul
or
mov
or
jns
pop
sti
mov
xchg
mov
rcr
retf
ja
rcl
cs
add
repnz
sub
in
fidivr
les
or
add
scas
adc
retf
(bad)
repz
sti
jbe
and
icebp
ret
jbe
mov
stc
aas
dec
ficomp
out
test
mov
movs
imul
mov
cli
aad
mov
repz
pop
or
dec
cdq
popf
and
or
ficomp
inc
iret
xchg
sub
setl
cmps
cdq
xchg
outs
pop
int3
mov
imul
push
scas
inc
jmp
fwait
cmp
pusha
scas
lahf
ficom
stos
ret
sbb
push
mov
nop
mov
cli
in
movs
(bad)
inc
icebp
or
gs
push
sub
inc
or
mov
enter
pop
adc
push
popa
ja
inc
daa
out
mov
cld
test
cdq
pop
mov
pop
cmc
mov
shl
pusha
pop
in
sbb
mov
sub
inc
mov
and
xchg
cmp
fsubr
cmps
mov
sbb
enter
xchg
add
fisubr
and
and
inc
cwde
sar
cs
out
lods
xor
xchg
pop
xlat
dec
mov
retf
lahf
pushf
xor
sbb
mov
jge
cmp
sar
popa
pop
mov
push
gs
jnp
(bad)
mov
retf
sbb
pop
adc
stc
fisttp
out
outs
pop
es
outs
xor
xchg
jo
xor
xchg
push
lea
outs
es
(bad)
ret
xchg
push
mov
pop
xor
add
or
(bad)
sub
adc
stc
mov
push
xchg
xchg
push
je
mov
pop
xlat
jae
neg
xlat
ficom
or
dec
mov
add
push
inc
xchg
mov
ins
lods
xchg
cmp
sti
lods
add
push
shl
cwde
pop
(bad)
(bad)
sti
dec
loopne
sub
repz
(bad)
mov
dec
lods
(bad)
inc
js
inc
sbb
movs
push
xchg
(bad)
cld
fcomp
in
xchg
aaa
out
movs
add
pop
les
push
lahf
cmp
mov
cmp
adc
pusha
push
out
repz
sbb
xchg
iret
ins
icebp
cmp
lods
icebp
and
adc
fs
(bad)
call
aas
mov
out
mov
js
fisub
add
cmp
inc
fwait
cmps
data16
add
mov
adc
in
xchg
nop
and
push
and
leave
stc
test
bound
jl
cdq
fcomip
std
mov
retf
xchg
xchg
std
sbb
cmp
push
cmp
sti
std
loop
mov
xchg
cmp
int
cli
test
xchg
or
fsubr
sbb
cmp
das
sub
ror
inc
cld
gs
mov
jns
outs
in
ret
outs
test
xchg
mov
shr
xor
(bad)
jmp
mov
pop
xchg
std
mov
dec
adc
push
fcmovbe
mov
dec
xlat
mov
adc
hlt
jl
jp
lock
cmp
ds
dec
jnp
cli
loope
stos
push
adc
dec
mov
lds
stc
mov
gs
xchg
mov
loopne
xchg
cld
dec
enter
push
xor
ins
retf
rcr
movs
out
sbb
lods
dec
mov
dec
ss
sti
dec
cmc
jmp
or
inc
outs
(bad)
(bad)
dec
sbb
inc
adc
mov
scas
scas
shl
outs
(bad)
mov
jle
rcr
jmp
jmp
pop
bound
repnz
scas
mov
mov
fmul
xchg
sar
es
mov
(bad)
mov
inc
inc
mov
jae
fsubr
mov
jae
and
out
cmps
in
iret
sub
jns
mov
inc
sbb
ss
pop
sbb
hlt
inc
enter
push
xchg
mov
pop
nop
ds
mov
mov
jno
fild
jnp
and
(bad)
in
out
lock
dec
mov
mov
pop
mov
inc
lock
pop
inc
addr16
sub
push
aas
mov
and
sub
jl
mov
jge
leave
call
mov
cld
push
xchg
sub
sub
xchg
or
add
je
(bad)
mov
push
inc
cs
dec
mov
sbb
je
push
dec
scas
dec
xchg
mov
or
out
outs
xor
or
mov
jp
dec
js
(bad)
les
retf
ret
lahf
ss
cmp
add
sub
imul
into
jmp
inc
aad
mov
push
jmp
sub
mov
je
addr16
int3
in
xchg
or
adc
ror
push
getsec
jnp
jmp
cwde
fs
sbb
js
xchg
inc
fiadd
ficom
push
xor
shr
jnp
nop
add
retf
ja
lods
push
jmp
ds
sti
push
(bad)
loope
push
daa
daa
push
pop
push
les
mov
mov
mov
(bad)
jmp
sbb
outs
jbe
mov
push
das
adc
sub
hlt
lock
test
ficom
(bad)
pop
fcom
ds
mov
sub
call
stos
fidivr
sbb
cmp
lods
pop
shl
imul
xchg
jo
dec
jnp
cmp
fbld
jo
xor
pop
inc
inc
mov
clc
iret
sub
rol
add
xchg
enter
mov
in
popa
cmp
fdiv
add
push
jl
test
icebp
fs
inc
fldcw
(bad)
jns
aaa
add
fcomp
int
shl
jae
jo
js
cmp
xor
push
stos
mov
push
or
ftst
stc
lods
stos
repz
push
imul
lds
pop
or
xchg
arpl
(bad)
mov
push
mov
push
push
shr
bound
ja
addr16
call
outs
adc
xor
xor
cmp
jecxz
rcl
cmps
or
adc
mov
icebp
xor
pop
in
ss
ficomp
int
mov
shl
jle
cmps
fadd
ficomp
mov
add
dec
and
xchg
das
xchg
jle
mov
cmp
scas
mov
mov
stc
dec
push
call
jne
mov
dec
ss
les
(bad)
and
xlat
sub
and
mov
mov
pop
icebp
push
adc
lods
jns
sbb
ins
and
pop
into
push
xchg
pop
add
sbb
xor
ja
popa
gs
mov
hlt
pop
retf
enter
and
xor
mov
lea
cmp
cld
in
dec
daa
rcr
jp
or
jp
mov
mov
outs
dec
mov
mov
cmp
inc
push
les
std
push
push
imul
jno
in
and
jbe
and
push
adc
clc
out
test
in
sbb
mov
mov
icebp
sbb
dec
sub
mov
idiv
push
pushf
inc
add
cmc
movs
cmps
pop
retf
and
sti
jb
dec
or
lea
push
dec
sbb
inc
mov
mov
jb
ror
xchg
addr16
out
cmp
addr16
sub
and
mov
outs
sbb
adc
jae
pop
fstp
(bad)
not
inc
ret
dec
pop
hlt
pop
dec
jge
test
aaa
sub
jp
pop
gs
or
imul
and
dec
sub
inc
xchg
iret
sbb
fisubr
push
call
jno
cmp
(bad)
call
aad
popa
inc
or
pop
and
sub
icebp
hlt
push
xor
sti
mov
dec
xchg
aas
fwait
(bad)
sbb
mov
fist
jl
repz
dec
std
sub
iret
jno
pop
and
cwde
push
xlat
mov
sbb
addr16
(bad)
push
mov
sahf
add
jg
inc
mov
mov
inc
add
cld
mov
sub
bound
icebp
xor
daa
cmp
or
sbb
aas
or
mov
push
les
adc
xchg
(bad)
push
mov
or
xor
cdq
repz
inc
into
fwait
cmp
test
aad
stc
les
xlat
xor
jmp
addr16
push
xchg
leave
je
and
push
cwde
sahf
addr16
cmps
rcl
mov
and
aas
mov
or
sub
fimul
inc
xchg
ins
fldenv
adc
add
imul
ds
push
mov
jne
clc
jae
inc
ds
out
mov
push
imul
add
xor
aaa
jnp
movs
adc
sti
inc
retf
dec
and
xor
or
cmp
xor
xor
xchg
call
pop
loopne
loop
mul
(bad)
mov
sbb
add
or
cs
ror
out
out
pop
pop
push
aaa
jae
xchg
add
mov
add
out
ficom
xchg
dec
and
aaa
mov
scas
in
cmp
mov
cli
cmp
imul
pop
movs
scas
or
into
sub
pop
cmp
add
clc
push
das
mov
int
sar
push
not
dec
jae
xchg
test
or
es
cmps
pop
sub
cmp
lock
iret
inc
scas
inc
jbe
gs
shl
loopne
sub
sub
xor
pop
mov
mov
jecxz
inc
sbb
repnz
lods
add
aam
sbb
cmp
div
lock
xchg
das
lahf
jae
and
aaa
jg
pushf
emms
retf
push
push
outs
pop
test
xchg
es
pusha
bound
mov
and
loopne
mov
out
inc
jb
add
call
inc
je
std
ds
mov
fwait
pop
scas
xchg
mov
test
push
leave
cmp
call
mov
mov
test
cmc
fldcw
retf
mov
pop
daa
xor
les
mov
xlat
sbb
lods
js
lahf
in
cs
jae
xor
push
add
xor
or
mov
mov
push
adc
in
xor
push
ret
ret
ja
loop
sub
cmp
lods
xchg
cld
and
pop
mul
cmps
or
mov
aaa
lods
fwait
int3
mov
mov
fnstsw
call
ss
imul
jmp
test
inc
push
movs
add
cmp
sahf
mov
out
dec
mov
adc
stos
xchg
and
(bad)
mov
test
cmp
add
aaa
js
jmp
jns
fdivr
push
out
mov
sub
fisubr
sahf
dec
jns
sub
arpl
out
xor
xor
xchg
shr
mov
dec
gs
push
xor
push
jb
popf
cli
cli
and
mul
and
pop
test
sub
push
dec
mov
addr16
imul
(bad)
ror
push
retf
adc
test
xchg
ret
imul
test
jb
mov
cmps
add
inc
fs
out
jge
lods
mov
jno
xchg
xor
jmp
and
bound
push
js
data16
outs
mov
adc
mov
cmp
pop
icebp
push
add
mov
ins
loope
mov
pushf
mov
pop
inc
xor
in
push
mov
sub
cmp
push
jecxz
xchg
adc
mov
cmp
adc
mov
and
jp
pop
ja
retf
jge
dec
mov
scas
outs
test
pop
bound
dec
imul
jbe
neg
aad
jle
sub
scas
enter
sbb
adc
xchg
call
js
loope
add
cmc
pop
(bad)
xchg
adc
xchg
into
mov
add
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
inc
xor
adc
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
add
add
scas
ss
cmp
jb
data16
fnsave
mov
(bad)
popa
cwde
ss
aam
daa
data16
dec
std
lahf
div
in
repz
sbb
jmp
cdq
fsubr
dec
pop
pop
pop
or
add
inc
sbb
pushf
ds
std
sub
hlt
push
jbe
dec
mov
cli
mov
jnp
test
daa
sbb
cmp
or
popa
jae
scas
xchg
ror
or
adc
sti
push
les
jle
repz
(bad)
sbb
add
and
inc
imul
aaa
lahf
or
and
outs
dec
cmp
in
pop
popa
sahf
aaa
pop
mov
adc
xchg
push
leave
les
retf
and
xchg
mov
repnz
jmp
ins
jecxz
mov
jmp
pop
call
pop
int
adc
iret
jp
xlat
sbb
push
add
jg
jbe
pop
mov
push
leave
stos
jecxz
add
mov
cmp
or
cmp
clc
into
mov
nop
movs
pusha
sar
cld
mov
fnstsw
xlat
dec
cmc
dec
sub
cmp
push
in
ret
push
fsub
add
icebp
pop
pop
ds
out
js
es
add
mov
mov
test
dec
cld
enter
fldcw
and
clc
lods
ror
popa
cmps
fiadd
add
dec
and
fwait
jp
xchg
pop
jecxz
fwait
or
xchg
mov
add
inc
cmp
pop
ret
lock
xlat
sti
(bad)
add
push
mov
jecxz
popf
popf
(bad)
mov
xchg
xchg
adc
inc
outs
enter
lahf
xor
add
call
enter
mov
jbe
sub
push
adc
test
pop
aam
call
sub
push
dec
add
xor
sahf
sbb
stc
mov
push
push
out
ror
adc
fiadd
leave
call
xor
jmp
xor
jmp
scas
pop
cmp
ds
adc
dec
pop
adc
cs
dec
loopne
lea
fisubr
pop
jmp
adc
(bad)
(bad)
xor
pop
jl
stos
pop
adc
and
sub
fisubr
movs
fisub
outs
cld
mov
cmp
push
cmp
das
push
pop
dec
cmps
fs
fidiv
mov
xchg
scas
sbb
dec
mov
or
push
out
in
xor
jp
cmp
inc
jmp
call
or
push
arpl
mov
xchg
jnp
mov
add
out
xchg
mov
mov
cmp
lea
imul
iret
test
add
stos
push
nop
out
stos
mov
outs
add
mov
pusha
loopne
inc
push
mov
add
jbe
push
std
sbb
stc
imul
jl
out
xchg
jb
repz
sub
fdivr
mov
cwde
dec
lods
std
clc
xchg
test
jle
test
sbb
mov
xchg
stos
int3
add
jg
iret
pushf
jne
push
xchg
inc
cmp
add
sbb
or
ror
imul
and
mov
ret
pushf
cmp
push
es
retf
cld
pop
xlat
lahf
xor
add
xor
scas
pop
data16
cmp
pop
mov
dec
push
mov
imul
scas
cs
arpl
pop
xchg
test
mov
xor
push
nop
mov
ja
mov
les
call
pushf
jbe
loope
sub
pop
xor
xor
or
scas
sbb
ret
mov
test
(bad)
adc
jno
and
lods
cwde
scas
(bad)
fist
push
jmp
inc
xor
nop
xor
cmp
inc
fwait
bound
push
fs
inc
pop
aaa
adc
push
popf
test
and
fmul
xor
mov
pop
leave
push
in
mov
out
aaa
js
push
retf
xchg
lods
dec
call
loop
in
push
scas
adc
lahf
mov
pop
cmps
cmps
mov
scas
pop
sub
ret
xchg
(bad)
fiadd
xchg
fst
mov
sub
pop
mov
lods
mov
bound
pushf
mov
mov
push
cmps
pop
xchg
sbb
ficomp
aad
inc
mov
mov
aam
stc
cmp
pop
cli
outs
test
add
daa
std
call
push
pop
jmp
mov
cld
out
inc
mov
pop
daa
adc
inc
sub
data16
call
loop
dec
sbb
mov
fimul
stc
push
mov
loop
xor
or
or
fadd
aas
outs
jmp
repz
test
jmp
or
dec
bound
and
mov
add
jno
adc
lahf
push
jp
adc
(bad)
push
loop
data16
test
sar
stos
nop
push
fcomp
gs
ja
movs
mov
dec
lock
or
xor
loopne
daa
and
or
cdq
xor
mov
xchg
lahf
in
mov
int3
adc
xchg
add
retf
sub
mov
jmp
mov
sbb
xchg
je
jnp
test
push
cmps
xor
adc
dec
in
cmp
push
int3
jno
int3
pop
jb
jb
lods
dec
adc
inc
ja
hlt
aaa
fild
(bad)
lahf
mov
out
fcmovu
adc
call
call
retf
xor
in
mov
shl
jmp
push
stc
pop
imul
pop
fs
jns
pop
repz
stos
cmp
sar
mov
xchg
push
repnz
das
lock
shr
mov
test
leave
imul
sbb
cwde
scas
xchg
outs
stos
sti
pusha
and
mov
push
les
mov
dec
scas
outs
test
jo
dec
jp
fscale
sub
mov
dec
xchg
mov
movs
jle
mov
gs
fistp
inc
xchg
jmp
push
in
arpl
mov
xor
stos
movs
inc
mov
push
inc
adc
lock
add
jns
scas
pop
mov
fs
in
test
sub
das
es
jcxz
and
(bad)
ror
in
xor
sub
or
xchg
sub
rcl
push
and
movs
mov
dec
adc
mov
shl
lods
jno
data16
push
cmp
xor
ins
movs
cmp
les
icebp
sti
sub
je
xchg
jecxz
in
stos
mov
cmp
lahf
test
fchs
loope
xchg
imul
sbb
es
(bad)
loopne
repnz
add
push
adc
dec
inc
dec
cmp
mov
push
push
call
ret
mov
(bad)
push
or
rcr
push
and
push
loop
pop
fdiv
stos
or
mov
mov
mov
iret
inc
shl
retf
sub
or
cmps
leave
push
cmp
sbb
sbb
pop
retf
sub
sahf
ror
pop
push
icebp
call
push
mov
ret
and
scas
call
inc
mov
push
mov
dec
lock
mov
push
pop
mov
add
jmp
xchg
adc
pop
in
sbb
adc
xor
jne
xor
les
jmp
aaa
jno
cdq
in
ins
sbb
sbb
pop
sbb
xor
test
jmp
out
loopne
les
cmp
push
imul
(bad)
inc
inc
and
fwait
mov
cmp
das
std
dec
add
sar
mov
lock
or
jbe
dec
jo
rcr
lods
xor
clc
daa
pushf
sbb
mov
mov
adc
xchg
test
cmp
inc
cmps
call
add
push
cmps
icebp
jne
jae
mov
leave
push
pmuludq
ror
xor
in
fnsave
(bad)
enter
loopne
std
mov
adc
sbb
dec
sub
dec
out
pop
pop
jns
mov
mov
mov
test
adc
mov
test
dec
xchg
test
cmp
jmp
(bad)
xchg
push
and
inc
out
inc
call
mov
jg
sbb
arpl
es
xor
stos
mov
mov
push
xor
ss
int
inc
pop
xor
mov
adc
inc
mov
popa
or
dec
sbb
call
fsubr
mov
or
mov
push
je
test
add
inc
or
inc
call
(bad)
push
fucomp
inc
mov
movs
adc
jmp
daa
xchg
or
test
ror
js
jmp
call
jo
dec
xchg
scas
cmps
fisttp
sub
aaa
and
adc
out
int
adc
mov
shr
shl
cmc
or
loope
push
jecxz
lods
aaa
sub
inc
test
stos
dec
xchg
sbb
sub
inc
test
pop
mov
sti
aad
fisubr
or
and
sbb
jb
call
or
mov
fwait
xchg
jae
repnz
xchg
jno
fimul
push
inc
xchg
sub
gs
cmp
adc
in
pop
adc
(bad)
popa
stos
mov
lahf
call
idiv
mov
imul
lds
popa
mov
and
push
jl
push
(bad)
dec
mov
hlt
jp
mov
ret
mov
mov
adc
in
adc
jbe
mov
es
cmp
dec
in
dec
push
scas
adc
mov
xor
cmp
cdq
jmp
jmp
and
fisttp
shr
push
cld
mov
aad
sub
jno
adc
rcl
inc
pop
sbb
pop
cmp
pop
adc
imul
ja
mov
stos
mul
pop
in
ins
or
mov
cmp
movs
ins
out
in
fcomp
xor
push
pop
cmp
scas
push
add
or
mov
popf
push
inc
fmul
jno
(bad)
or
(bad)
popa
jp
je
sbb
sub
cmp
mov
test
mov
sti
lock
mov
pop
cmps
hlt
popf
mov
pusha
pop
(bad)
fnsave
sub
dec
pushf
mov
inc
mov
dec
bnd
mov
cld
ja
pusha
call
pop
lock
test
cmps
lock
xlat
imul
jne
add
lea
stos
inc
xchg
pusha
xor
mov
int
mov
add
ror
pop
mov
sbb
and
jp
jl
shr
xchg
test
in
icebp
xchg
movs
cmp
arpl
sti
sbb
pop
jo
(bad)
push
add
es
push
mov
cmc
cli
repz
xchg
dec
sbb
mov
lods
dec
in
sbb
push
jae
xabort
dec
adc
pushf
push
sub
mov
pop
sbb
nop
mov
popa
into
sti
inc
pop
inc
cmp
repnz
and
or
int3
push
fimul
dec
mov
mov
frstorw
pushf
lds
rol
fwait
jl
dec
leave
pop
xchg
fcomp
lods
sbb
xchg
scas
cli
test
pop
call
jb
fstp
push
jmp
dec
jb
dec
out
dec
loope
sahf
stos
pop
push
mov
dec
mov
mov
or
repz
sub
xchg
jns
lea
test
movs
and
lds
(bad)
and
mov
(bad)
call
call
aaa
lods
mov
xchg
(bad)
movs
or
inc
fiadd
bound
test
mov
aam
sub
daa
xchg
not
movs
xchg
mov
mov
test
mov
in
xchg
addr16
sti
and
fsubr
imul
inc
loope
cld
imul
out
and
and
shl
ret
test
push
test
icebp
xchg
inc
mov
jp
and
xor
add
jmp
mov
sbb
das
xchg
and
xchg
dec
lds
push
fst
xchg
aam
mov
or
cdq
pusha
adc
dec
lods
mov
mov
es
cmp
add
jge
xor
jb
pop
sub
inc
or
gs
es
xlat
fcomp
jmp
jno
(bad)
mov
outs
ja
ficom
outs
jo
lods
ja
push
cld
xchg
jmp
aas
pop
push
int3
in
lock
retf
mov
test
sbb
scas
das
add
dec
cdq
stos
push
and
adc
sub
add
xchg
pop
in
out
enter
dec
in
add
xchg
test
int
sbb
jp
lea
bound
cmp
pop
mov
ins
sub
outs
movs
test
fmul
adc
jle
inc
dec
jns
jg
jb
mov
out
adc
pop
cmp
data16
pop
mov
ins
mov
shr
cmp
dec
mov
sbb
push
popf
test
sbb
iret
mov
cmp
xor
out
aad
je
add
jmp
aam
inc
shl
sahf
push
aam
sub
loope
sbb
and
xchg
jmp
mov
clc
xor
jle
in
out
pop
pop
add
(bad)
adc
jb
fwait
cmp
jl
enter
lahf
xor
(bad)
sti
or
test
xor
(bad)
clc
imul
sbb
lods
(bad)
xlat
(bad)
cld
cli
(bad)
push
dec
xchg
popa
sbb
or
fist
test
xchg
(bad)
cmp
cmp
xor
adc
jg
sub
mov
ret
lahf
out
test
leave
push
ret
dec
and
(bad)
div
jnp
sti
add
(bad)
(bad)
and
mov
cmc
shl
cld
movs
push
or
sbb
mov
mov
mov
push
shl
(bad)
es
ss
xor
and
cwde
(bad)
jmp
pop
mov
mov
enter
xchg
and
jne
push
sbb
test
jge
(bad)
ds
int
test
lods
and
push
ins
loop
stc
add
fadd
mov
jmp
pop
(bad)
jecxz
cmp
inc
inc
ins
add
shl
inc
cmp
push
cmp
jg
inc
sub
enter
loop
sahf
jmp
mov
mov
imul
pop
cmp
sbb
inc
pop
pop
inc
arpl
xor
xor
add
xor
cmp
outs
push
in
fsubp
pop
imul
js
es
push
push
add
cs
push
test
test
sar
enter
test
jecxz
repnz
jmp
sub
xchg
jge
arpl
jnp
mov
loope
aas
bnd
not
and
(bad)
(bad)
jb
mov
mov
out
mov
in
or
cmp
sti
pop
mov
sbb
inc
rcr
push
cmp
pop
and
jne
mov
dec
mov
das
adc
xor
pop
repnz
and
stos
inc
or
cli
sub
ja
or
cmp
adc
push
xchg
dec
aad
in
cdq
mov
sub
and
jg
cmc
mov
push
fisubr
mul
test
pop
cmc
mov
xchg
mov
sub
xchg
ror
jle
add
add
scas
test
fisub
pushf
stc
mov
mov
sub
ds
dec
adc
cmp
mov
cmp
mov
(bad)
mov
or
dec
int3
add
out
mov
cmp
cmp
cdq
jmp
stos
movs
jae
test
push
sub
push
clc
je
xor
int
mov
jne
pushf
push
add
jnp
fwait
shr
push
sbb
jno
fisttp
int3
in
add
(bad)
leave
pop
inc
jge
fwait
mov
test
ds
enter
imul
cmp
cmp
adc
std
cs
aam
enter
jns
dec
add
cwde
cmc
movs
lahf
sbb
outs
cli
jo
loop
loopne
jg
stc
out
jg
stc
out
xor
dec
sti
inc
test
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
mov
arpl
imul
dec
ja
ja
xor
cmp
jmp
jb
(bad)
mov
out
clc
mov
sbb
add
jg
jbe
loopne
or
(bad)
out
inc
loope
mov
aam
fstp
sub
pop
stos
mov
mov
ret
or
dec
fs
push
out
add
arpl
jnp
cmp
jp
adc
pop
or
push
cmp
jge
movs
xchg
or
push
jmp
inc
setno
add
pop
inc
adc
cmp
ret
jmp
aaa
sahf
mov
out
push
imul
pushfw
inc
pop
sar
add
mov
jbe
test
(bad)
adc
mov
xchg
sti
popa
inc
inc
daa
ins
push
out
jge
repnz
int
mov
push
sbb
in
rcr
xchg
cmp
pusha
dec
pushw
(bad)
hlt
ins
into
sbb
xlat
xor
icebp
cmp
push
mov
mov
jmp
mov
pop
sub
adc
sub
sub
sbb
push
dec
ins
jo
inc
(bad)
cmps
inc
push
inc
inc
out
mov
push
add
into
mov
or
outs
push
fldl2e
out
ficom
cmc
dec
mov
fcom
lea
xchg
lods
cs
jb
imul
cwde
adc
mov
inc
fst
retf
sub
mov
retf
pop
mov
test
leave
pop
sub
push
dec
test
neg
inc
pop
xchg
xchg
xchg
pushf
sbb
ins
shl
pop
scas
repz
imul
imul
inc
imul
std
test
pop
dec
push
in
push
adc
sbb
xchg
and
dec
fs
jbe
test
icebp
ins
fcomp
inc
into
xchg
(bad)
stos
push
pop
lods
cmp
not
dec
shl
mov
(bad)
outs
(bad)
cdq
out
jp
out
xor
xor
pop
cmps
xor
scas
mov
test
mov
or
mov
out
loop
cld
in
mov
repnz
mov
and
sub
aam
mov
push
lock
push
push
sub
push
xor
push
(bad)
sbb
add
xchg
enter
outs
loop
cmp
dec
pop
sbb
xchg
sbb
(bad)
daa
sub
mov
popa
mov
pop
mov
cli
out
add
push
gs
jnp
add
mov
xor
pop
movs
shrd
lock
xchg
shl
bsr
in
into
dec
jecxz
stos
(bad)
ja
or
dec
sub
mov
rcr
sahf
sub
mov
mov
push
ret
sbb
add
movs
xor
xor
fwait
jns
cmp
(bad)
(bad)
call
push
ds
adc
scas
ss
outs
or
test
push
aam
xchg
pop
pushf
xchg
enter
cmp
nop
sub
imul
or
dec
adc
adc
aam
test
pop
sbb
sbb
fadd
mov
jp
xchg
out
xchg
or
mov
fst
fild
and
les
call
ja
pop
mov
or
pop
lahf
push
add
adc
push
mov
call
sbb
adc
add
or
mov
sbb
mov
popf
neg
adc
cli
mov
sub
into
jnp
add
int
mov
push
jg
loopne
dec
ja
dec
inc
jae
push
mov
(bad)
in
mov
mov
or
pop
movs
push
and
ds
outs
(bad)
cwde
(bad)
xor
ja
outs
jp
in
push
mov
xor
xchg
mov
jbe
push
mov
out
mov
lea
push
xor
jl
inc
lahf
pop
jo
xor
xor
aam
push
adc
out
setae
ja
in
fnsave
stos
ficom
jg
dec
mov
xlat
fcmovnbe
test
push
mov
sub
aam
inc
mov
mov
mov
push
pushf
fidivr
mov
bound
sub
(bad)
pop
push
mov
repz
fs
add
cmp
mov
ja
cmp
ret
ins
push
data16
jg
out
sub
aaa
jg
lahf
aam
add
jne
sti
and
sub
in
aam
les
pop
mov
shl
retf
add
pop
mov
push
test
bound
(bad)
fsub
dec
stos
pop
test
xchg
mov
xchg
popa
(bad)
sub
cs
pop
std
and
daa
loopne
mov
cmp
or
dec
xor
ret
pop
cmp
xor
xor
out
push
add
push
xchg
push
sbb
mov
sbb
lods
sub
dec
daa
in
pop
cmp
mov
std
dec
pop
aam
inc
popa
test
mov
inc
fldl2e
xchg
in
outs
cli
push
lods
mov
in
push
push
ja
leave
dec
xchg
pop
sbb
add
js
repz
sbb
cli
inc
ss
retf
fld
sar
sar
mov
es
push
loopne
xor
xchg
test
ret
pusha
adc
mov
push
push
fsub
lods
jns
fstp
mov
xchg
inc
fist
stc
ret
jae
add
enter
sub
pop
dec
data16
cmp
mov
sub
scas
outs
pop
jmp
cld
call
enter
adc
fistp
jmp
cmp
iret
pushf
test
cs
xchg
adc
popa
fsub
mov
push
pop
das
mov
fwait
xchg
jbe
loope
mov
adc
imul
mov
and
stos
sahf
xchg
push
pop
test
xchg
cdq
sbb
lds
(bad)
dec
inc
sbb
mov
pop
gs
fucomi
add
sar
jnp
jge
(bad)
rcl
scas
add
pop
pusha
sti
enter
ret
aaa
(bad)
ins
pop
fisubr
outs
push
mov
(bad)
fist
jmp
cmp
js
stc
xor
xor
adc
out
popf
cmp
mov
call
in
les
jb
add
xchg
inc
push
icebp
cli
inc
loopne
adc
fcomp
push
ss
loop
pop
sbb
or
aam
and
mov
xchg
sbb
aam
inc
push
retf
pop
adc
fimul
retf
inc
cdq
pop
arpl
xchg
loope
cmps
int3
pop
xchg
arpl
in
push
push
iret
sahf
dec
cmp
mov
jb
in
mov
(bad)
ja
cdq
call
and
or
hlt
adc
ret
(bad)
add
loop
or
dec
or
mov
dec
cmp
cdq
in
inc
mov
popa
pop
or
pop
mov
dec
sbb
dec
jne
addr16
jmp
sti
test
js
cmp
enter
loope
enter
(bad)
push
push
loope
pop
imul
sti
cmp
push
jne
shr
dec
or
in
out
mov
cmp
ffreep
inc
dec
fadd
call
out
adc
add
cmp
adc
mov
aad
dec
loopne
push
ret
iret
fadd
pop
sbb
sbb
ret
cmp
jmp
xchg
(bad)
cmc
dec
movs
xor
push
mov
dec
hlt
pop
rcl
or
push
jo
pop
jecxz
lods
push
push
xchg
fdivr
pushf
push
cmp
adc
push
mov
jno
cmp
mov
and
outs
jmp
cli
repnz
jno
jge
push
je
and
bnd
pop
loop
sbb
dec
add
(bad)
fdiv
mov
(bad)
(bad)
jns
jae
stos
outs
les
jle
jo
mov
sub
out
retf
push
add
std
ja
imul
outs
xor
mov
bound
pop
pop
pop
add
(bad)
jmp
sbb
xor
repnz
pop
mov
fsub
mov
mov
(bad)
clc
xchg
mov
xor
xchg
sub
les
iret
rol
fnstsw
repnz
(bad)
and
pop
pop
fucom
outs
lock
inc
fist
sbb
inc
ss
jno
mov
bound
aam
int
pushf
push
mov
outs
call
stc
retf
call
dec
adc
jo
in
and
pop
mov
loop
imul
mov
loop
int3
aam
sbb
and
mul
add
scas
enter
aaa
or
inc
imul
xchg
outs
jge
mov
aam
in
push
cmp
xchg
pop
pushf
test
inc
adc
out
nop
sub
mov
cmp
dec
pop
mov
push
int3
xor
xor
and
mov
jne
stos
sub
mov
bswap
inc
pop
ffree
cmps
dec
(bad)
pop
xchg
add
hlt
and
inc
arpl
mov
icebp
movs
out
sbb
popa
or
movs
outs
(bad)
not
mov
or
mov
or
jns
das
dec
loop
in
mov
in
xchg
push
fs
les
fsubr
xor
pop
and
inc
(bad)
ds
xchg
cmps
adc
imul
outs
inc
inc
rcl
jle
mov
mov
das
aas
es
push
pop
and
(bad)
cdq
imul
pusha
push
ret
das
inc
push
lahf
cmovp
push
and
fs
cmps
repz
inc
loope
pop
or
xor
data16
sub
sahf
pop
xchg
cld
sub
jae
mov
js
mov
in
js
out
scas
lds
mov
pop
or
fcomp
inc
aaa
jl
cmp
dec
pop
and
xchg
movs
mov
retf
fmul
stc
fisubr
xor
icebp
or
out
jne
push
int3
jle
pop
loop
std
lds
leave
jno
hlt
js
dec
xchg
push
mov
in
test
movs
cmp
cmp
jle
nop
inc
lods
retf
jo
js
iret
inc
std
data16
xor
ss
adc
les
add
call
loopne
call
mov
push
mov
test
es
mov
xor
add
cli
(bad)
int3
cli
int
pushf
ja
inc
cmp
and
iret
jb
and
imul
movs
cmps
addr16
(bad)
dec
jle
inc
and
inc
das
icebp
jae
test
inc
clc
cdq
jp
in
ret
mov
xchg
neg
xchg
leave
jecxz
rcr
jmp
mov
stos
leave
xor
and
sti
test
adc
ja
test
iret
adc
mov
repnz
sbb
xor
ins
add
stc
push
cmp
and
push
jo
cmc
jne
add
inc
adc
jecxz
addr16
lahf
or
dec
je
es
inc
bound
sbb
mov
cmp
nop
(bad)
push
icebp
dec
out
xor
push
dec
test
push
es
stos
call
jne
and
test
fidiv
test
loopne
sbb
jbe
or
clc
js
adc
loop
test
dec
cli
outs
and
dec
or
inc
ss
push
stos
retf
out
test
jbe
lahf
mov
ins
rcr
push
in
mov
scas
inc
shl
dec
(bad)
rcl
jmp
xor
push
xchg
aam
repnz
sahf
inc
push
stc
cmp
repnz
jg
std
fmul
pop
push
xchg
cli
cmp
fwait
inc
out
stos
add
test
xchg
das
cmp
fstp
out
jno
cmp
imul
or
inc
cmps
pop
mov
lahf
mov
ucomiss
or
jno
jns
adc
out
repnz
movs
fcomp
ret
and
push
cwde
dec
cmp
retf
dec
rol
xor
inc
stos
dec
xor
adc
fcmovnb
dec
loopne
mov
xlat
ins
sub
push
ins
inc
stc
mov
sbb
lods
(bad)
hlt
pushf
lea
bound
push
rcr
fdivr
adc
xchg
mov
xchg
sub
add
aad
bound
xor
cmps
xor
or
stos
call
or
retf
pop
or
shl
mov
aaa
dec
adc
ss
add
cmp
daa
mov
hlt
dec
add
push
dec
sbb
fstp
lock
stos
repnz
(bad)
inc
mov
mov
jg
leave
std
not
push
jmp
shl
mov
adc
mov
jmp
enter
call
pop
arpl
fwait
xor
mov
pop
sub
cwde
outs
cli
xlat
(bad)
aaa
or
adc
retf
in
jle
jecxz
and
dec
test
pop
test
in
(bad)
sti
ins
jmp
fld
pop
dec
fbstp
call
fadd
xchg
add
inc
mov
and
test
sahf
xor
sub
rcl
mov
cmp
in
pop
popf
jbe
scas
dec
sahf
(bad)
mov
sub
retf
push
sbb
adc
(bad)
sbb
repnz
dec
jge
pop
cmp
mov
shl
iret
imul
cmp
add
sbb
repnz
jo
push
aam
cmc
inc
out
xchg
pop
(bad)
fbld
jnp
push
lock
adc
cmp
add
inc
push
xor
pop
jl
outs
icebp
js
ret
mov
and
je
bound
daa
dec
jb
mov
xchg
jp
out
push
push
dec
jns
push
pushf
daa
pop
and
icebp
or
loop
cli
out
(bad)
sub
inc
sub
cmp
imul
addr16
push
mov
pop
(bad)
ins
lock
es
(bad)
cmp
or
xor
loop
mov
fsub
cli
out
mov
out
fnstenv
and
loope
std
and
and
adc
and
xor
fcomp
cmp
lds
test
stc
and
push
xor
add
call
imul
into
cs
ds
loopne
in
data16
xlat
adc
sbb
sub
bound
mov
xchg
cld
neg
enter
aas
cmp
stc
jns
fld
call
jno
push
cmp
icebp
rcl
xchg
(bad)
mov
ds
cli
test
add
sbb
dec
mov
shl
out
sar
mov
adc
dec
sub
pop
jg
leave
or
mov
sbb
xor
jmp
jle
sub
xchg
adc
push
cli
or
fist
fldcw
daa
inc
cmps
sub
stos
dec
in
xor
or
push
cmps
xor
mov
fwait
aad
dec
and
or
or
ins
xchg
adc
mov
stos
pusha
and
fmul
in
sar
push
cwde
int3
pop
pop
jb
es
xchg
mov
loopne
sub
adc
mov
xor
push
and
repnz
jg
adc
cmp
ficom
mov
aad
cs
cdq
in
lods
arpl
xor
iret
call
popa
data16
fdivr
pop
jmp
and
inc
pop
mov
jno
sar
js
icebp
xchg
jg
fldl2e
scas
add
dec
sub
popa
jns
fisub
sub
pop
sbb
pop
pop
dec
jl
inc
call
add
dec
inc
stos
xlat
setge
push
mov
pusha
in
ss
xchg
addr16
cs
pop
nop
ss
into
jno
repnz
out
pop
sub
or
mov
dec
mov
(bad)
adc
pop
(bad)
imul
iret
icebp
adc
jo
inc
push
mov
xchg
movs
aaa
out
and
leave
mov
mov
movs
adc
mov
add
and
movs
pop
addr16
add
cmps
mov
xchg
in
nop
xor
mov
in
cdq
cmp
push
inc
pushf
ins
push
call
add
imul
loop
rcr
stos
sbb
ja
or
jns
sti
jle
call
fs
adc
adc
xor
and
sbb
push
xor
test
adc
dec
outs
adc
sbb
ret
rcr
sbb
pop
mov
adc
dec
lea
pop
das
leave
stos
push
das
mov
sbb
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
popf
dec
lock
imul
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
inc
push
dec
ja
dec
mov
inc
mov
xchg
shl
sbb
loopne
movs
adc
out
movs
(bad)
jae
out
scas
loop
add
sub
stos
ins
adc
pop
mov
imul
icebp
xchg
sbb
mov
push
jp
mov
ins
pop
fst
rcl
mov
(bad)
mov
das
jo
hlt
loopne
push
shr
cwde
adc
fwait
xor
dec
test
sbb
mov
pushf
adc
lahf
inc
shl
mov
lods
hlt
push
or
les
stos
push
cmp
in
in
idiv
test
inc
mov
mov
std
pop
shr
mov
arpl
ss
and
rol
or
mov
das
add
fst
movs
xlat
jp
or
cmps
stos
xor
mov
pop
cld
imul
push
out
jae
mov
jmp
inc
inc
add
out
in
adc
inc
mov
cmp
mov
mov
mov
cmp
lods
xchg
jae
lds
mov
sbb
push
sub
add
(bad)
pop
sbb
inc
loopne
jnp
fld
je
xor
sti
xlat
loopne
mov
mov
addr16
lods
mov
sahf
mov
ret
sub
mov
push
jge
call
mov
adc
add
adc
or
adc
jns
adc
adc
and
sub
adc
add
pop
inc
pop
jb
cmp
jg
push
jne
inc
or
sbb
sub
test
ins
fist
xlat
adc
pop
sahf
adc
scas
aaa
push
call
cs
sbb
sub
pop
or
jmp
sbb
mov
mov
(bad)
xchg
mov
mov
or
dec
in
dec
push
mov
loope
jae
mov
xor
add
jnp
pop
test
mov
lahf
addr16
inc
and
popf
mov
adc
pop
fwait
dec
repnz
push
adc
addr16
stos
add
xlat
repnz
lahf
sbb
dec
or
jecxz
pop
dec
jmp
jge
data16
add
int
rcr
sub
mov
nop
xor
dec
scas
std
push
mov
lock
cs
pop
inc
inc
jo
pop
and
ret
push
cmp
clc
shr
ja
lock
fdiv
jae
jle
mov
and
sbb
dec
(bad)
push
dec
mov
pop
cmp
and
data16
sbb
dec
adc
cwde
dec
push
ficom
mov
js
sub
add
pop
adc
mov
inc
mov
mov
aas
in
add
mov
call
stc
aas
popa
js
sub
mov
dec
jbe
in
xchg
mov
cmp
sar
in
sbb
sub
inc
mov
outs
inc
test
pushf
data16
int
xor
pop
sbb
ficom
sti
xchg
xor
dec
(bad)
loop
ret
(bad)
pushf
dec
out
stc
dec
push
add
xchg
inc
xor
sbb
xchg
cmp
int3
dec
in
(bad)
loop
icebp
dec
add
adc
cs
pop
pop
mov
dec
sti
ins
das
popa
jo
sub
and
mov
scas
xchg
aas
mov
int
jo
lock
pushf
dec
push
fidivr
jb
jmp
mov
ja
and
call
mov
call
dec
gs
aas
sbb
cmc
and
push
(bad)
lods
ret
hlt
das
scas
add
pop
xchg
cmps
lahf
dec
mov
add
add
into
inc
div
push
xchg
adc
sub
cmp
push
lahf
int3
mov
sub
fdivp
(bad)
ja
outs
outs
pop
jp
add
sbb
push
loop
pop
loop
jns
call
ja
pop
arpl
cld
ret
xchg
sar
and
in
push
jge
and
add
xor
fdiv
sub
cwde
cli
or
push
sti
cld
addr16
ins
push
mov
pop
retf
scas
sbb
fcomp
aad
ja
dec
gs
aaa
ins
push
xchg
daa
rcr
les
pop
inc
sbb
and
sub
arpl
(bad)
push
div
je
inc
cmp
test
cld
xchg
mov
xor
push
movs
xchg
inc
cmp
jl
cmp
outs
aam
dec
push
and
jle
arpl
xor
push
sbb
fwait
(bad)
jno
sbb
add
ins
out
pop
xchg
and
push
test
or
xchg
adc
call
sub
enter
cmc
push
not
ins
mov
inc
arpl
push
lahf
pop
shl
xchg
imul
cld
xor
test
(bad)
dec
sti
sbb
popf
out
pop
cli
repnz
ins
push
push
(bad)
mov
scas
fcomp
sbb
adc
xchg
mov
jge
lock
xor
mov
mov
outs
sbb
push
add
xchg
jns
push
movs
dec
xor
mov
js
jecxz
ret
sbb
mov
cmp
lods
cmps
rcl
inc
fwait
mov
add
repnz
xchg
std
mul
call
sti
push
sub
and
dec
xchg
arpl
push
rcl
and
rcl
mov
pop
out
movs
push
fsubr
rcl
jl
dec
leave
push
jns
(bad)
leave
mov
fsubr
jge
aam
inc
sub
and
pop
mov
sbb
mov
movs
inc
jb
xor
hlt
jge
out
loop
jo
mov
sub
xor
(bad)
cmp
xchg
add
imul
sub
jb
inc
jmp
aad
fimul
mov
jmp
xchg
in
and
sahf
ret
jnp
inc
jmp
out
mov
aas
cmp
leave
sahf
or
jno
sbb
or
mov
dec
sahf
(bad)
cmc
jnp
sti
sbb
adc
(bad)
in
inc
jl
inc
out
push
xlat
xlat
fld
cmps
test
add
(bad)
mov
sar
retf
test
mov
(bad)
(bad)
jae
xchg
pushf
jns
adc
adc
xor
nop
cld
aam
and
pop
jle
adc
cdq
aaa
jmp
loope
idiv
push
loope
sbb
inc
sbb
into
mov
add
dec
movs
cmps
loopne
pop
icebp
rcl
outs
inc
daa
jp
or
lods
jecxz
sub
sub
(bad)
xchg
ins
std
out
test
pmaxub
int3
mov
jbe
adc
xor
adc
int3
rcr
push
scas
xchg
xchg
cmp
jne
mov
pop
out
xchg
xor
push
sbb
mov
push
mov
call
xchg
jo
push
ficomp
lea
pop
and
xor
shl
cld
add
mov
xchg
in
loopne
jae
repz
les
scas
push
lahf
add
fnsave
rol
xor
mov
sbb
pop
in
fucomip
into
mov
aaa
cdq
push
sti
push
rcr
dec
fldcw
stc
cmc
pop
sub
fdiv
xchg
jmp
dec
lods
mov
int
mov
std
jg
fbstp
cmp
adc
pop
(bad)
jo
test
iret
mov
call
hlt
and
movs
int3
pop
outs
add
push
cli
and
fstp
int3
aas
sub
xor
popf
fisttp
test
or
lock
out
(bad)
gs
sbb
push
mov
ss
lods
add
jb
xor
(bad)
push
lods
add
sub
shr
mov
mov
mov
(bad)
pop
fiadd
lods
inc
pop
cmp
inc
ret
or
mov
push
in
mov
inc
loop
mov
mov
sub
mov
(bad)
hlt
or
sbb
cmp
(bad)
and
(bad)
jns
es
pop
aaa
fwait
(bad)
rcl
mov
cli
cmp
out
adc
pop
movs
fld
scas
out
mov
jb
add
sub
and
jno
int
mov
or
xlat
jno
and
pop
and
inc
arpl
in
jno
clc
mov
movs
ror
loope
stos
lahf
outs
mov
dec
jnp
ins
adc
push
push
pop
mov
jge
test
shl
push
int
ss
lock
shl
jns
mov
sub
sub
cmps
pop
lods
fcmove
jb
mov
sahf
lock
pop
out
test
xchg
mov
or
mov
jns
in
sub
in
sbb
in
imul
mov
sub
jp
test
cmp
dec
shl
mov
pusha
mov
daa
lds
adc
xchg
ds
ss
lahf
xor
loope
rcl
movs
mov
(bad)
sbb
mov
icebp
loope
inc
cmps
sbb
mov
cwde
pop
jb
mov
adc
jmp
movs
mov
mov
add
in
xchg
in
ret
cmc
ror
sbb
cmp
mov
inc
cdq
cwde
jg
rol
jne
xchg
adc
icebp
outs
ret
or
dec
dec
outs
test
sar
jo
inc
xchg
sub
mov
in
jno
pop
fcom
mov
mov
fdiv
add
xchg
jmp
mov
lahf
mov
cmp
push
inc
pop
int3
pop
outs
cli
fiadd
pusha
in
adc
and
jmp
mov
into
call
fwait
movs
test
cmp
adc
aas
cmps
sub
or
cmp
cwde
test
arpl
pop
add
and
push
cs
shl
sahf
sub
xchg
ficom
test
xlat
inc
sub
fsubr
vpaddsb
ja
repz
ret
stos
cwde
xchg
pop
mov
xchg
jle
cwde
mov
in
iret
cmp
inc
test
cmc
pop
jae
push
mov
push
arpl
shl
in
test
cmp
inc
rol
inc
sub
rcl
push
inc
test
cmp
dec
test
push
push
xor
sub
jmp
mov
add
stc
push
(bad)
stos
sbb
or
xor
stos
aaa
fadd
xlat
in
stos
cmc
imul
ret
movs
fild
fs
xchg
pop
push
imul
mov
in
icebp
xchg
aas
cld
or
popf
push
shr
mov
nop
and
stos
movs
mov
stos
push
in
rcr
rcr
js
movs
popa
sub
add
outs
clc
or
fldenv
and
cmps
xchg
or
les
arpl
std
pushf
dec
fst
stos
push
pop
mov
into
in
mov
mov
xor
pop
mov
push
xor
pop
in
gs
mov
out
mov
add
repz
xchg
sbb
adc
mov
push
adc
mov
cmps
(bad)
jae
push
xor
fisubr
add
jmp
es
bound
mov
xchg
jnp
jle
mov
rcr
pop
inc
std
js
das
pop
sub
bound
adc
test
cli
mov
mov
mov
pop
mov
lods
(bad)
jae
cmp
(bad)
cli
ficomp
jae
lods
aad
fsubrp
dec
popa
xchg
nop
scas
ror
ins
aaa
inc
jno
sub
in
cmps
xchg
stos
xlat
js
in
pop
lods
and
loope
stc
call
loope
loope
sti
cld
sub
adc
sbb
test
js
push
ret
mov
inc
fs
jmp
inc
push
jns
and
mov
pusha
gs
pop
adc
lock
pop
lds
pushf
ds
xlat
loopne
gs
das
lods
lods
imul
xchg
fidivr
call
mov
cmp
fld
mov
jl
sub
jns
push
push
cmps
aaa
xchg
shl
test
cld
mov
add
aaa
stos
cmp
sub
cmps
cmps
sbb
mov
sub
xor
sbb
inc
push
or
dec
push
inc
shl
xlat
jge
push
jbe
adc
jecxz
xchg
ja
push
cwde
pop
pop
fnstcw
and
jle
cmps
dec
retf
iret
and
lea
push
add
mov
(bad)
std
pop
add
inc
or
lds
mov
xchg
adc
lods
mov
push
pushf
add
mov
cwde
pop
jl
cli
mov
pop
sbb
iret
jno
xchg
les
dec
ss
or
or
sbb
lods
xor
(bad)
rcl
dec
sub
pop
fstp
mov
sbb
retf
or
xlat
or
bound
pusha
fisubr
jmp
popf
(bad)
mov
cmps
in
stc
sub
cmp
jmp
sub
(bad)
mov
xlat
es
push
lods
jp
or
les
(bad)
jg
outs
inc
inc
and
mov
cwde
int
adc
jmp
sub
push
sbb
nop
adc
mov
test
fstp
adc
xor
imul
cmc
fbstp
adc
push
sub
pop
lods
cmp
push
popa
mov
adc
stc
(bad)
and
fidiv
test
mov
arpl
or
idiv
icebp
fisubr
(bad)
popa
sbb
idiv
dec
mov
mov
addr16
add
mov
push
into
loope
mov
enter
xor
fsubr
sub
sahf
(bad)
pop
xor
sbb
xchg
ret
inc
(bad)
pushf
xchg
adc
add
inc
pop
adc
xor
cmc
sub
ja
jmp
and
ret
ds
mov
mov
xor
mov
xor
mov
dec
int3
jmp
scas
or
xchg
in
cmps
std
outs
jns
push
(bad)
cs
sar
dec
aam
push
repnz
or
not
pop
sbb
std
or
movs
shr
mov
cdq
je
mov
aam
sub
pop
jp
xor
pop
push
xor
shr
pop
lahf
lods
cmp
repz
mov
push
jae
js
dec
inc
cmc
push
pop
das
mov
out
repnz
imul
fnstenv
cmp
and
mov
fild
dec
mov
mov
mov
push
addr16
or
xchg
xor
add
sub
xchg
jae
mov
xor
mov
dec
jle
in
(bad)
loopne
js
fs
(bad)
mov
xlat
dec
cdq
or
xchg
sbb
jl
push
jl
pop
mov
retf
mov
pop
or
cmp
pop
or
push
and
adc
retfw
xor
mov
add
dec
rcl
jg
(bad)
movs
or
outs
cmps
aam
mov
inc
fsubr
les
mov
fs
sbb
jp
ror
mov
fisttp
adc
dec
sub
add
jle
ins
pop
push
adc
jne
jo
jae
aam
ficomp
imul
jl
sbb
xor
adc
inc
and
pusha
mov
fcmovnbe
popa
into
out
mov
jmp
clc
out
aad
push
scas
mov
pop
lds
pop
imul
xchg
mov
pop
mov
mov
cmp
or
xchg
push
mov
mov
xchg
pop
and
cld
push
addr16
cld
add
icebp
or
adc
or
ins
xor
adc
out
jnp
in
and
call
mov
mov
push
cmp
sub
and
mov
adc
les
out
mov
jge
cmp
dec
into
pop
dec
pop
shl
ins
jmp
push
xor
scas
mov
movs
pop
jle
and
xchg
dec
adc
in
xchg
dec
sbb
(bad)
das
push
pop
jle
pop
push
xor
fimul
daa
jmp
es
jmp
imul
fstp
jne
mov
iret
scas
iret
sahf
dec
push
das
ja
adc
not
add
test
add
or
jg
repz
(bad)
cld
out
jmp
lods
jns
push
shl
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
ss
jg
popf
aaa
or
dec
popf
out
out
cwde
mov
mov
mov
ja
cmps
arpl
fimul
repnz
jns
and
sbb
sar
loopne
xchg
sbb
add
cmp
jo
xchg
jp
arpl
mov
call
je
mov
pop
xlat
jns
ss
sub
jg
movs
xchg
xchg
jmp
(bad)
std
xchg
jmp
addr16
adc
icebp
cmp
jb
jno
cmc
dec
lea
pusha
dec
out
add
je
jle
aas
and
(bad)
pop
imul
pop
dec
ja
inc
xor
or
inc
inc
fwait
mov
cmp
loopne
lods
bound
jb
clc
scas
xchg
and
xchg
or
in
mov
test
daa
jae
adc
sbb
sbb
arpl
pop
mov
outs
push
xchg
call
pop
test
inc
fsubr
daa
int
fsubr
outs
std
push
ins
bswap
or
pop
mov
loopne
mov
(bad)
sub
movs
fs
out
sbb
mov
retf
add
xor
std
pop
push
mov
aam
inc
scas
data16
cmp
div
inc
sbb
addr16
add
jb
push
ins
jge
ret
lods
lods
or
xor
pop
jbe
pop
(bad)
pop
or
jl
and
push
sub
mov
ds
xor
cmp
lods
shr
and
mov
push
loop
pop
dec
or
fst
ja
xchg
sbb
xchg
sub
js
in
mov
sub
icebp
push
xor
pop
aad
dec
xchg
jo
pusha
xor
pop
sub
test
mov
or
dec
jle
mov
inc
lods
mov
shr
sub
addr16
arpl
adc
mov
push
nop
int3
inc
sub
rcl
movs
cld
test
(bad)
pop
int
add
outs
shl
mov
sub
pop
xor
jge
lods
push
dec
aaa
mov
adc
mov
sbb
xor
aas
dec
xlat
add
jnp
mov
sbb
in
cmp
pop
and
jae
dec
jno
out
jmp
cli
inc
out
loop
pop
dec
test
sahf
fucomip
je
pushf
add
push
mov
sbb
test
jmp
clc
mov
sbb
stc
pop
pushw
test
repz
cld
xchg
das
pop
sub
add
bound
mov
xchg
outs
add
xchg
dec
push
adc
jns
xor
fmul
xchg
sbb
aas
jnp
push
in
pop
fisttp
mov
ins
scas
jg
push
jno
mov
int
mov
and
and
jg
out
mov
mov
xor
mov
fsubrp
dec
inc
test
add
jbe
or
fnstcw
inc
and
test
xchg
fisub
sub
adc
xor
std
push
jnp
sbb
lods
pop
add
imul
ret
xchg
in
imul
jae
js
sbb
test
mov
jbe
in
mov
icebp
jno
push
icebp
fsubr
stos
outs
push
mov
pop
fwait
push
mov
and
test
jecxz
addr16
popf
mov
movs
adc
add
inc
dec
sub
sti
add
xchg
clc
jmp
fmul
lock
scas
shr
mov
stc
gs
adc
fsubp
popa
inc
inc
arpl
mov
xchg
push
test
jnp
in
pop
icebp
xchg
jbe
mov
mov
test
movs
sbb
int
cmps
inc
pop
lods
inc
xchg
or
movs
inc
rol
push
(bad)
xchg
and
icebp
cmps
push
test
outs
xchg
mov
loopne
push
adc
loope
push
test
mov
push
xchg
ror
xor
lock
imul
and
xchg
aaa
daa
push
fisubr
jmp
inc
push
in
adc
cmp
cmps
(bad)
mov
shl
imul
push
jb
or
imul
jecxz
(bad)
xchg
push
ds
test
cmp
cmp
cdq
ror
out
jle
mov
inc
pop
sub
push
mov
cli
retf
cwde
jne
dec
ret
into
cmp
ret
add
inc
jp
xchg
movs
js
pop
jb
dec
xor
inc
push
dec
cmc
scas
mov
jae
fwait
int
je
push
jo
inc
jle
fldenv
out
adc
pop
scas
pop
mov
xor
xchg
push
push
imul
mov
mov
lea
xchg
jo
daa
xchg
sbb
mov
cdq
fucomip
push
outs
cmps
jns
imul
ds
and
lods
sub
dec
dec
or
push
lahf
das
push
push
(bad)
xlat
enter
mov
ins
in
ficom
mov
jns
sti
pop
and
mov
adc
sub
sti
adc
dec
mov
jle
adc
enter
movq
add
cdq
fidivr
jl
(bad)
xchg
push
pop
xor
daa
sbb
cs
sub
pop
das
outs
xor
mov
push
pop
push
inc
mov
bound
loop
lock
xchg
(bad)
ds
xor
loop
pushf
hlt
test
cmp
outs
out
scas
and
sbb
mov
out
add
outs
(bad)
aad
push
mov
inc
inc
call
out
inc
ja
xchg
retf
rcr
cdq
mov
in
xor
in
iret
xor
inc
mov
scas
stc
fistp
icebp
jmp
cwde
xchg
lds
fdiv
movs
test
xor
cmp
pop
ins
stos
push
inc
ins
iret
mov
out
sub
xchg
cli
out
loop
pushf
push
out
dec
clc
cmovne
ds
xchg
sti
cmp
mov
dec
call
je
push
inc
xor
fimul
add
pop
push
and
(bad)
push
pusha
stos
rol
xchg
cmp
jp
int3
mov
mov
mov
inc
xchg
mov
pop
or
mov
jmp
out
sbb
or
pop
jg
xchg
test
adc
es
mov
ja
lods
not
icebp
ins
sti
fist
jg
cwde
jns
iret
mov
iret
dec
js
ins
loop
and
push
repnz
push
lock
and
dec
add
aaa
sbb
jbe
cmps
pusha
imul
pushf
test
test
push
daa
fstp
fwait
loope
dec
addr16
mov
adc
and
mov
inc
das
fst
lahf
mov
popa
jle
push
mov
stos
stc
cmp
sbb
scas
or
cmc
neg
jl
mov
int3
adc
mov
sub
push
mov
ja
gs
shl
inc
pop
int3
outs
fisttp
jb
push
mov
dec
test
jo
ins
xor
xchg
rcl
dec
cmps
pop
xor
sub
lea
outs
stos
pop
push
out
pop
adc
sti
add
lahf
push
popfw
mov
jb
and
retf
and
cli
dec
jbe
cld
in
mov
and
ins
fld
cdq
in
cs
mov
sub
inc
int
mov
cmp
dec
pop
xchg
xor
mov
add
mov
cwde
invd
cmp
fsubrp
out
pop
adc
pop
das
daa
xchg
dec
arpl
sti
xchg
ror
mov
sbb
loope
push
jecxz
xchg
stos
and
sahf
addr16
call
and
(bad)
mov
test
mov
stos
popf
pop
std
inc
sub
aad
cmp
int
aaa
push
inc
lea
pop
xchg
sub
cmp
icebp
bound
xor
dec
fmul
aad
and
jl
adc
sub
scas
ror
les
(bad)
into
movs
dec
(bad)
in
in
push
push
cmp
pop
(bad)
aaa
aam
pushf
cmp
ins
sub
test
cli
push
cmp
in
test
cmps
cmp
inc
cdq
iret
je
arpl
inc
fwait
scas
jo
adc
cld
and
popf
mov
fmul
(bad)
call
push
lahf
rcr
rcr
outs
fiadd
mov
enter
out
(bad)
sub
sub
mov
cld
arpl
mov
sub
cmp
dec
pop
dec
sub
push
ret
mov
stos
add
cmp
into
mov
sub
inc
jne
into
push
sbb
scas
in
jmp
xor
lods
xor
lods
cmps
aad
dec
push
push
jmp
dec
sbb
mov
fisttp
or
pop
mov
or
sub
and
aad
xchg
add
ror
add
push
loopne
repz
pop
xchg
ret
loopne
push
pusha
inc
lea
push
and
jno
sbb
mov
rcr
add
fs
retf
jb
sti
(bad)
push
addr16
sub
mov
or
stc
fwait
mov
or
mov
imul
int3
mov
or
push
push
das
out
jp
ins
and
jmp
and
pushf
pop
cmp
cmp
xor
mov
mov
or
ficomp
or
xor
jl
push
rcr
das
shr
and
imul
xchg
stos
sbb
loopne
sub
lods
repz
ret
shl
mov
dec
aam
cmp
cmp
push
jmp
int3
mov
sub
out
cld
add
lds
cmp
mov
push
dec
xor
sub
or
and
daa
adc
mov
fild
(bad)
push
fcomi
xor
push
push
mov
dec
xor
dec
xchg
ja
inc
jg
call
lods
jp
mov
jmp
and
cmp
push
xchg
adc
addr16
mov
xchg
adc
ss
adc
cmps
nop
js
pop
fadd
sub
mov
cli
push
nop
(bad)
(bad)
inc
(bad)
mov
inc
and
sbb
jo
push
ins
jo
lods
in
arpl
xor
les
jl
ss
cmp
fnsave
inc
sbb
lea
lods
bound
pop
jmp
mov
add
ds
sbb
mov
inc
sbb
movs
hlt
outs
inc
es
(bad)
in
test
and
jne
out
add
xor
sbb
pop
or
movs
(bad)
sbb
push
aas
sbb
cmp
jmp
movs
loope
hlt
inc
add
jno
clc
sub
in
add
in
cld
sbb
in
sub
movs
add
adc
cmp
jecxz
xchg
nop
pop
pop
push
xchg
cmps
das
cmc
lea
sbb
inc
test
ret
pop
dec
adc
sub
(bad)
shr
je
inc
cmps
cmp
imul
push
push
outs
retf
jle
stos
(bad)
push
xchg
out
pusha
sar
in
pop
fmul
call
xor
cmp
into
scas
or
xchg
inc
xchg
pusha
xchg
pop
sub
stc
pop
fcmovbe
adc
movs
int
repnz
loopne
inc
mov
popf
sub
jp
push
jns
pop
sub
imul
repz
ins
rcl
lds
inc
mov
nop
push
xor
sar
push
gs
hlt
push
in
fwait
mov
jb
in
jg
fsub
inc
adc
retf
xlat
xor
inc
inc
aam
pop
leave
mov
cwde
xchg
data16
fst
mov
mov
jmp
cmp
sbb
and
jb
(bad)
mov
mov
movs
add
repnz
scas
cmps
and
pop
les
leave
mov
mov
mov
movs
(bad)
loopne
loop
je
popf
(bad)
int
sub
xor
dec
fnstenv
mov
arpl
mov
(bad)
xor
mov
hlt
pop
repz
and
push
dec
test
ss
ja
push
jmp
and
cwde
fwait
sbb
mov
cmp
loope
mov
jno
cli
rcl
jp
ins
and
xchg
mov
or
sub
sub
bts
mov
push
cs
push
jecxz
or
out
mov
cmc
imul
fldcw
add
and
cli
lods
sar
or
daa
bound
ins
retf
push
mov
(bad)
sbb
inc
jl
(bad)
out
ds
mov
aas
pusha
inc
jmp
mov
jae
repz
and
xchg
mov
ret
clc
pop
inc
(bad)
rcl
das
pop
pop
mov
scas
out
mov
dec
mov
(bad)
push
lock
and
sub
or
ret
xor
mov
out
jmp
movs
ret
xchg
mov
je
mov
in
shl
int
jmp
call
lods
mov
dec
lds
jle
jmp
pop
pusha
aad
inc
iret
lods
cld
push
inc
mov
addr16
inc
std
enter
(bad)
hlt
mov
in
sbb
cli
ss
ror
jnp
mov
mov
int
xor
(bad)
sahf
hlt
test
shl
sub
mov
ss
test
sti
lds
out
cld
pop
in
push
movs
iret
sti
cmps
xchg
pop
scas
test
mov
iret
inc
adc
dec
mov
ins
mov
xchg
lods
sbb
es
mov
popa
xor
nop
mov
out
or
push
mov
out
cmp
add
sti
lock
inc
xchg
add
int3
xchg
xchg
aas
fisttp
test
or
pusha
push
ins
push
in
mov
popa
or
sub
shr
test
iret
mov
push
cmp
pop
sbb
scas
fmulp
push
repz
loop
inc
or
aaa
ss
std
(bad)
push
mov
or
es
pop
dec
push
stos
pushf
test
adc
stos
inc
ret
xlat
and
xchg
mov
mov
mov
aad
mov
sbb
stc
sub
pop
dec
repnz
pop
sbb
xor
fcmovne
pop
inc
add
xor
jl
jp
jp
(bad)
mov
or
xchg
adc
nop
in
xchg
xchg
sub
sbb
int
push
add
xchg
fistp
xor
adc
call
pushf
mov
into
push
pop
aaa
jbe
mov
cs
(bad)
push
ins
jo
gs
pushf
pop
jl
fsubr
sahf
fdiv
iret
out
ret
and
sar
dec
ss
sub
fs
pusha
or
and
add
sbb
test
push
(bad)
cmp
xrelease
and
xor
retf
(bad)
mov
sub
and
lods
cmp
pop
leave
fiadd
pusha
out
or
xchg
bnd
sub
sbb
out
xchg
bound
jp
jecxz
fbstp
ins
sub
inc
mov
mov
mov
jb
pop
jb
or
jg
div
xchg
ins
cdq
dec
sti
dec
push
cmp
(bad)
movs
mov
push
jge
add
scas
sub
ja
lahf
ins
clc
jmp
lock
dec
mov
dec
bound
mov
inc
loopne
int3
jg
lods
test
xchg
jae
push
and
jmp
cdq
sbb
call
mov
movs
mov
jbe
push
scas
std
mov
loopne
loope
mov
pop
jns
jnp
adc
add
and
add
sahf
sbb
pop
fldl2e
jo
mov
push
rol
out
mov
scas
xchg
push
into
test
push
fild
in
or
push
out
mov
arpl
dec
retf
sahf
inc
out
add
ret
fdiv
jae
mov
retfw
(bad)
pop
shl
pusha
sbb
inc
imul
imul
and
cwde
shl
in
fcomp
adc
or
or
jno
movs
test
js
push
mov
not
pop
popf
or
adc
mov
cmp
push
aaa
scas
mov
mov
out
dec
mov
iret
cmp
or
aam
int
daa
iret
test
sub
inc
pop
xchg
neg
(bad)
lods
movs
fs
pop
aas
cli
(bad)
sub
hlt
xor
leave
dec
mov
pop
out
jb
and
lods
inc
adc
mov
adc
rol
mov
jnp
adc
push
sub
fstp
xor
pusha
clc
arpl
xchg
retf
imul
loop
mov
sahf
popf
add
enter
sti
add
pop
mov
rcl
lahf
jg
stc
out
jg
stc
out
sbb
cld
js
inc
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
das
jmp
or
sbb
sub
pop
fld
cmp
or
and
fstp
out
mov
repz
ds
loop
add
icebp
movs
cs
push
cmps
hlt
xor
push
inc
ror
(bad)
mov
pop
cmp
push
dec
in
dec
jo
mov
lds
adc
cld
div
jg
out
cmps
push
jmp
fnstcw
loope
xor
ret
repz
mov
(bad)
add
test
test
dec
call
test
jns
mov
xor
cmp
(bad)
iret
or
in
es
and
jg
ins
inc
(bad)
inc
sti
cli
loop
cli
cmc
mov
jno
jbe
sbb
cmp
push
xchg
mov
xor
xor
addr16
pop
cwde
stos
sub
mov
retf
stc
and
or
imul
ret
or
xor
xchg
jb
iret
sub
push
div
fcomp
es
and
retf
mov
sub
push
cmc
fcmovu
jle
into
or
mov
add
or
inc
jae
sti
lock
mov
xchg
push
push
lods
xor
mov
jge
stos
retf
rcr
ss
pop
sar
pop
dec
daa
pusha
push
in
push
cmp
adc
push
cmp
aas
icebp
dec
xchg
cmc
push
rcl
cmp
(bad)
out
xchg
push
xor
das
enter
mov
pop
push
xor
mov
mov
pop
xchg
jmp
mov
mov
or
lds
or
outs
pop
fadd
dec
repz
adc
cmc
std
ror
sbb
jmp
ds
xor
push
out
(bad)
movs
repnz
aad
retf
xchg
cmp
(bad)
bound
leave
and
das
(bad)
retf
out
aam
out
mov
loope
cmp
popa
mov
mov
adc
mov
xchg
xchg
out
cmp
mov
mov
pop
int3
cwde
xchg
leave
add
cs
mov
test
fsub
push
outs
(bad)
pop
xchg
outs
cwde
xchg
jno
mov
shr
lods
mov
xchg
mov
(bad)
daa
pop
ins
(bad)
jecxz
pop
aam
vphaddbq
dec
pop
push
cld
mov
or
xlat
inc
push
xor
sti
and
or
jmp
and
mov
xor
and
test
mov
imul
loope
and
ins
sbb
inc
test
and
adc
out
pusha
push
ins
cmp
mov
enter
(bad)
and
sub
cdq
xor
dec
adc
add
jne
call
je
inc
pop
sbb
push
sub
jo
jo
sbb
das
fs
test
mov
sub
adc
pusha
dec
dec
mov
xchg
mov
xor
and
xchg
lds
iret
push
mov
jmp
xchg
xor
push
push
mov
pusha
and
push
mov
sahf
icebp
xchg
cmp
or
fst
xchg
mov
nop
imul
jno
jnp
push
sub
call
ror
les
(bad)
fidivr
aam
mov
hlt
(bad)
jmp
and
xlat
mov
loop
add
add
mov
xlat
xlat
stc
mov
repz
mov
test
jb
pusha
iret
push
mov
(bad)
scas
xor
inc
jl
sub
fild
les
jmp
in
mov
inc
mov
mov
shl
(bad)
outs
cmp
mov
cdq
mov
push
push
popf
mov
push
push
scas
xor
mov
lea
push
xchg
inc
cld
fs
jno
inc
idiv
sub
repnz
lods
dec
mov
sub
aam
les
xchg
mov
das
inc
jl
into
aam
jmp
jne
and
mov
jns
dec
not
push
cld
jbe
(bad)
cmp
xchg
or
add
jge
push
fild
xchg
push
repnz
ins
dec
jne
addr16
pop
dec
rcl
mov
cdq
pop
pop
mov
popa
les
push
sbb
mov
jmp
rcl
es
push
pop
neg
outs
iret
mov
mov
scas
and
adc
xchg
outs
rcl
push
lods
fs
mov
ficom
idiv
adc
adc
loopne
and
sbb
xlat
inc
and
cmp
jb
mov
xor
rol
repz
cmp
pop
xchg
popf
sbb
mov
dec
add
jp
or
cmps
cmps
in
mov
push
test
mov
and
out
out
mov
and
inc
nop
pop
mov
mov
xchg
jge
jb
ins
add
hlt
xchg
ins
xor
adc
push
lahf
push
movs
popf
int
bnd
and
pop
fmul
(bad)
cmp
inc
pop
dec
mov
and
xlat
pop
js
adc
pop
shl
xor
lods
sub
lahf
sub
enter
sub
cmp
cmp
push
push
call
mov
pop
adc
sbb
daa
call
pop
add
or
sti
and
sbb
pop
push
sbb
inc
fiadd
clc
data16
dec
movs
mov
mov
push
loope
add
int3
mov
mov
adc
adc
addr16
inc
ret
scas
sub
frstor
aam
das
outs
loopne
movs
dec
mov
pop
mov
cmc
adc
aas
cmp
push
pop
rcl
adc
mul
fistp
scas
sbb
cdq
pop
mov
push
mov
shl
enter
pop
inc
test
mov
pop
xor
ins
faddp
sub
sbb
aas
(bad)
sub
cmps
test
pop
cmp
mov
repnz
fwait
jno
bound
call
ins
and
push
mov
push
cmp
imul
repnz
ins
or
movs
mov
pop
movs
mov
cmc
out
adc
inc
popa
dec
jns
jle
sbb
out
jns
add
jne
(bad)
daa
adc
mov
sub
repz
jbe
in
xchg
dec
pusha
test
cmp
mov
cdq
jl
lods
jmp
or
sbb
sub
lods
inc
int
pop
xor
adc
test
repz
repz
sbb
pop
pop
xchg
popa
(bad)
sbb
xor
or
push
fist
(bad)
in
add
(bad)
cs
imul
inc
xchg
leave
sbb
pusha
xchg
jnp
lds
push
mov
sub
xor
or
loop
repz
sub
fwait
push
loope
fisttp
ins
add
sub
repnz
and
adc
mov
aas
pop
jo
repz
jo
lods
xor
add
push
call
xchg
xor
mov
add
cmp
loope
ins
(bad)
mov
jbe
sbb
sar
adc
stos
push
mov
push
xchg
pusha
pop
jmp
inc
stc
stos
rcr
(bad)
rcr
fsub
jo
or
jo
add
add
push
mov
fs
jle
cdq
inc
mov
cmp
dec
and
ds
cli
call
xchg
push
gs
push
adc
ret
nop
cmp
sub
add
mov
xchg
ins
ins
stos
gs
int
sbb
or
dec
jmp
invd
mov
cmp
jmp
mov
xor
aas
outs
push
sbb
shl
jae
pop
shr
xor
aaa
das
cwde
sbb
mov
sub
sub
daa
jns
call
sbb
cmp
lahf
repnz
inc
push
xchg
call
aas
in
push
stc
into
add
not
jg
xchg
sbb
mov
sub
shl
daa
or
mov
xchg
dec
(bad)
sub
push
rcl
ror
mov
sbb
bound
cmc
jnp
js
les
mov
int3
stos
mov
aas
jmp
pop
inc
shl
jmp
arpl
mov
sub
or
aaa
cmp
rcr
pop
ror
push
bound
cmps
xor
fcmovnb
mov
add
int
or
and
add
int
mov
or
sbb
call
adc
stos
outs
dec
adc
hlt
pop
jecxz
lock
xlat
movs
cmps
cmps
mov
dec
ja
clc
hlt
dec
movs
push
in
dec
pushf
cdq
pop
inc
xchg
in
ja
and
dec
loope
std
ret
add
jmp
pop
add
or
mov
rol
push
cmp
jmp
imul
les
das
shl
cmps
je
jmp
retf
fnstenv
jne
push
cmps
scas
sbb
jo
cmps
lods
loop
xchg
xchg
int3
movs
cmp
cmp
lock
cmp
iret
push
mul
push
movs
test
pop
cmp
pop
gs
mov
or
push
sub
sar
test
push
xor
mov
push
ins
shl
mov
add
inc
fwait
jbe
call
push
ds
inc
xchg
test
xchg
sub
mov
sub
add
inc
sbb
scas
(bad)
out
ds
push
(bad)
and
addr16
(bad)
xchg
sub
sub
push
mov
retf
nop
in
sub
xchg
(bad)
lock
stos
jle
iret
cmps
cmc
mov
jl
pop
mov
repnz
shr
in
in
(bad)
pop
xchg
fwait
xchg
pop
inc
xor
fwait
rol
jg
add
xchg
ds
xchg
mov
mov
(bad)
push
pop
in
mov
out
int3
je
xchg
sbb
sbb
sub
fcmovnu
clc
cmc
pop
push
adc
lahf
mov
jns
jbe
(bad)
pop
push
mov
das
icebp
(bad)
das
test
test
add
jmp
xchg
inc
push
mov
inc
test
out
dec
pop
sahf
pushf
adc
js
cdq
jne
mov
in
mov
jcxz
pop
neg
xchg
vunpcklps
in
in
call
push
inc
rcl
xchg
inc
test
int
ins
imul
and
idiv
dec
mov
les
mov
aaa
jns
bound
pop
sbb
fld
shl
jmp
mov
cmp
xchg
mov
push
mov
stc
sti
loopne
(bad)
cmps
mov
jge
jbe
mov
mov
pusha
(bad)
int3
lods
fidivr
popa
loop
ds
push
inc
or
mov
cli
(bad)
fwait
push
imul
lds
out
xor
jp
mov
repnz
sbb
and
in
out
les
cmp
mov
addr16
jge
mov
aas
and
mov
cwde
xlat
fnstsw
xchg
frstor
icebp
in
jne
push
mov
std
pop
sub
popf
mov
or
dec
cmp
jno
or
shr
sub
test
sbb
push
jae
or
icebp
add
shr
fwait
aas
add
push
call
ins
or
popf
nop
movsx
adc
jmp
pop
jge
mov
(bad)
mov
loope
rcr
jg
mov
test
mov
sub
push
stos
mov
shl
sub
(bad)
aas
gs
inc
push
aad
mov
ins
data16
push
and
add
std
inc
mov
jae
inc
outs
fbld
adc
enter
movs
pop
aad
mov
dec
adc
and
sbb
adc
movs
mov
shl
xor
mov
inc
jle
push
in
jo
mov
test
pop
scas
fist
mov
add
mov
push
pop
iret
fbld
push
sub
sub
pop
jb
aaa
push
imul
jo
adc
ds
in
leave
movs
cmp
test
popf
je
ret
test
jp
pop
sahf
cmp
scas
nop
dec
push
call
sub
movs
fwait
test
mov
push
cmc
inc
pop
xlat
mov
add
ret
icebp
inc
push
test
mov
addr16
xchg
loop
popf
fdiv
sub
out
mov
add
fistp
call
add
rol
std
fs
mov
jle
or
push
adc
stos
jnp
xor
clc
jle
jle
mov
cmc
je
fwait
or
sahf
adc
retf
setbe
sti
xchg
in
fisubr
pop
mov
pop
fwait
data16
jmp
stc
pusha
popf
cmp
aad
add
movs
mov
in
and
xchg
mov
jg
push
clc
mov
mov
out
sbb
add
stc
and
mov
jnp
pop
lock
inc
mov
aaa
jp
mov
sti
sti
xchg
pop
mov
or
mov
cmp
call
dec
mov
ja
adc
retf
outs
sub
fs
cmps
fistp
cmp
cmp
cld
jl
pop
pop
xchg
jge
xchg
js
mov
mov
inc
mov
push
fwait
add
scas
push
add
jg
retf
dec
mov
pop
sub
push
aam
inc
adc
pushf
pop
nop
cld
sbb
je
xchg
rcr
jecxz
fwait
ret
xchg
out
leave
dec
(bad)
cmp
pop
rcr
or
test
pop
retf
sahf
(bad)
lods
cs
lds
or
or
push
push
outs
loope
mov
ss
scas
push
mov
mov
xchg
ins
daa
scas
pushf
data16
pop
retf
xchg
add
push
xchg
scas
dec
aam
dec
and
clc
inc
cmps
aam
cmps
cld
outs
je
out
xchg
pop
les
xlat
and
or
push
cs
push
addr16
(bad)
ficomp
aas
in
stc
movs
ds
stc
les
xchg
inc
xchg
out
and
sbb
mov
aas
out
je
adc
push
ss
and
push
les
mov
sahf
pushf
(bad)
mov
cmp
mov
call
xor
fdiv
push
sbb
pop
or
mov
mov
mov
xor
out
push
push
pusha
jnp
and
int
xor
pop
iret
cmp
repz
jbe
xchg
jge
xchg
lods
shl
nop
inc
xlat
std
sub
mov
sbb
shr
retf
mov
xor
push
data16
xchg
mov
repz
push
ss
jge
icebp
in
mov
stos
or
dec
sbb
das
xor
movs
and
pop
mov
jae
ins
hlt
ins
repnz
inc
cmps
pop
fwait
push
pusha
xor
xchg
inc
xchg
fbstp
pop
mul
loopne
xchg
jmp
fadd
ffree
xchg
cmps
push
xchg
pop
push
push
jg
xchg
pop
cmps
(bad)
out
inc
cli
and
mov
pop
xchg
jb
stos
int3
mov
add
je
outs
lahf
fnstcw
inc
xchg
mov
mov
jle
sub
jp
xlat
push
or
cmp
cld
sub
ret
sar
iret
sub
mov
mov
or
dec
leave
mov
inc
jl
jge
inc
fimul
inc
shl
test
lock
sbb
mov
mov
jb
or
ds
stc
retf
hlt
stos
push
pop
daa
pushf
fcmovb
xchg
push
jge
and
dec
jp
xchg
stc
jecxz
shr
retf
and
out
movs
sar
gs
or
and
mov
sub
outs
repz
xor
fldenv
lahf
fidiv
lahf
repnz
ins
out
(bad)
jb
and
leave
and
shl
sub
icebp
xchg
(bad)
stc
ss
pop
dec
dec
lahf
int
pop
push
pop
mov
aad
jno
sbb
sbb
cli
add
jb
pop
mov
test
cmp
dec
inc
mov
out
sub
sub
mov
mov
inc
popf
lds
test
mov
rol
mov
or
or
jmp
test
shl
loop
sub
leave
fstp
in
les
cmps
retf
inc
rcr
push
shl
push
xchg
movs
and
imul
in
test
or
out
iret
fmul
movs
adc
std
dec
scas
add
pop
xor
xchg
push
and
pop
mov
(bad)
retf
pop
or
repz
aas
(bad)
cld
repz
jmp
lock
and
add
adc
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
aam
and
pop
add
scas
mov
dec
sub
retf
gs
call
int3
ds
ins
xor
enter
retf
dec
enter
and
ja
ds
(bad)
mov
clc
add
fnstsw
nop
push
pusha
int3
mov
jbe
mov
loop
lds
jecxz
mov
movs
inc
lods
pop
(bad)
cld
lods
outs
sub
jbe
aas
outs
push
or
repz
add
neg
jp
pop
int3
sub
sahf
mov
int3
xor
arpl
push
or
pop
inc
sbb
ror
in
sub
pop
push
ret
sbb
sbb
jecxz
retw
out
jge
xchg
lods
jmp
pop
out
inc
arpl
xchg
es
adc
inc
push
mov
repnz
mov
pop
inc
loope
mov
mov
das
cmp
mov
inc
inc
mov
icebp
or
mov
test
in
or
mov
jnp
mov
mov
xor
mov
pop
aaa
fist
add
scas
fdivr
cmps
lods
mov
push
mov
mov
jg
sbb
mov
xor
pop
stos
cmp
frstor
cmps
shr
push
lock
out
mov
fwait
xchg
std
aaa
sbb
pop
adc
shr
nop
add
scas
lock
cmp
pop
mov
push
mov
(bad)
nop
jnp
hlt
push
fcmovnbe
sbb
mov
adc
sahf
stc
mov
xlat
(bad)
scas
aas
test
in
and
jge
and
cmp
and
mov
dec
daa
in
inc
inc
dec
aam
out
sub
int3
js
push
retf
jbe
lods
mov
(bad)
or
dec
shl
pop
xlat
cmp
retf
adc
push
and
and
or
test
fbld
pop
xor
sbb
out
sbb
push
xchg
sar
mov
(bad)
and
jne
push
adc
add
fwait
sbb
and
fs
push
out
push
fimul
jecxz
jnp
add
loop
scas
mov
xor
cmps
out
out
mov
stc
ficomp
xchg
jns
cmp
mov
inc
(bad)
dec
out
(bad)
loop
jbe
adc
outs
push
mov
div
pushf
stc
push
add
jo
xor
xchg
inc
xor
inc
lods
push
fwait
shl
mov
das
(bad)
loope
mov
mov
stos
jo
jmp
mov
mov
pop
fiadd
mul
leave
pmullw
or
push
sbb
out
push
(bad)
jmp
pusha
push
out
cld
cmp
push
jns
test
sub
push
xchg
cdq
mov
leave
inc
cwde
call
stos
adc
clc
dec
out
or
das
outs
das
mov
mov
shr
mov
lea
sub
lds
jmp
cmps
icebp
pop
daa
sub
(bad)
outs
mov
mov
jae
pop
cmp
cmp
mov
jg
loopne
add
fcom
not
push
call
jge
data16
dec
ins
sbb
fs
imul
(bad)
sub
jbe
mov
mov
xor
out
imul
cld
push
(bad)
(bad)
pop
je
cmc
scas
sub
pop
or
ret
xchg
mov
add
or
imul
cwde
fld
(bad)
cmove
cwde
and
jne
enter
jne
js
stos
dec
cdq
pop
popf
cdq
xor
sbb
stos
push
aaa
in
sbb
mov
test
pop
adc
dec
push
mov
or
add
clc
push
sub
jnp
or
dec
cmps
jmp
sub
add
adc
popf
fild
fsub
xor
pop
mov
cs
je
aas
cmp
xor
cmps
repz
mov
xor
dec
js
test
in
adc
dec
and
xchg
push
imul
jb
mov
and
mov
ss
xchg
adc
loope
lds
push
loop
mov
ret
jle
or
iret
cdq
cmp
xor
jns
mov
je
xchg
xchg
cmp
movs
jp
and
mov
cmp
xlat
(bad)
shl
mov
scas
addr16
test
(bad)
mov
cwde
hlt
out
adc
inc
ja
add
xchg
jo
or
rcr
pop
add
outs
sub
sahf
dec
mov
lahf
shl
cs
das
push
or
xlat
xor
push
arpl
push
test
out
movs
outs
jmp
mov
hlt
or
call
jle
dec
stos
xchg
mov
fwait
dec
int3
outs
add
lods
lods
jbe
or
or
push
shl
dec
xchg
shr
jo
das
lds
sbb
movs
inc
xchg
xchg
in
and
fld
inc
fisubr
cmp
sbb
fidivr
fisub
jg
loop
mov
jae
pop
call
pop
pop
mov
(bad)
call
nop
adc
pop
dec
sbb
jecxz
test
stos
mov
(bad)
es
xchg
xchg
test
stc
pusha
cmp
dec
iret
sub
out
jl
inc
adc
repnz
jo
or
cmps
loopne
adc
(bad)
ret
jb
out
mov
mov
mov
jecxz
lea
inc
inc
dec
sub
adc
cld
repnz
sar
imul
mov
and
(bad)
and
loope
jecxz
dec
jae
adc
mov
cmc
loope
xor
jg
pop
pop
je
ds
jmp
(bad)
sbb
popf
push
popa
js
aad
mov
repz
idiv
xor
dec
call
push
xchg
pop
lods
stos
or
add
xor
mov
jecxz
dec
sbb
xchg
or
icebp
or
and
inc
jne
push
cli
cmc
sbb
arpl
fist
mov
lahf
mov
mov
mov
pop
mov
popa
mov
call
or
cs
sbb
jl
xor
js
dec
pop
inc
sbb
mov
dec
xor
xor
mov
aam
inc
mov
mov
or
sbb
call
push
mov
retf
and
aad
inc
daa
inc
pop
adc
call
popf
mov
sbb
pop
rol
pop
xor
or
mov
fisttp
fld
pusha
adc
jnp
test
and
cmp
jge
cmp
cmps
clc
dec
jmp
xor
mov
movs
dec
retf
or
repz
xor
neg
leave
jle
push
mov
in
fmul
(bad)
ficomp
mov
pushf
cmp
push
retf
lahf
inc
dec
in
xlat
pop
mov
aad
cmp
jl
pop
sbb
in
sbb
push
(bad)
(bad)
jl
inc
inc
inc
out
cmp
stos
xchg
in
adc
and
pop
jo
fucomp
add
call
xlat
jmp
mov
fcomp
lds
pop
mov
into
mov
fwait
mov
cli
jmp
mov
or
out
jno
jno
aad
je
xchg
out
mov
fcomip
xor
pop
inc
test
dec
aam
repnz
cdq
adc
in
mov
mov
stos
pop
scas
out
jmp
or
scas
aas
push
inc
mov
and
sbb
ficom
les
in
sub
in
and
sub
call
stc
outs
jl
lods
pop
xor
sahf
and
mul
leave
push
dec
mov
pop
es
mov
pop
call
fbstp
and
mov
pop
out
mov
pushf
bnd
and
and
bound
stos
mov
xchg
push
mov
mov
in
add
dec
scas
pushf
add
dec
add
sub
mov
adc
and
sub
xchg
cs
aad
out
retf
add
jne
jmp
(bad)
ret
dec
clc
pop
movs
aam
or
mov
pushf
ror
neg
iret
repz
sub
stc
sti
ficom
test
adc
es
rcr
mov
mov
stc
inc
outs
mov
outs
xchg
xchg
js
adc
xchg
inc
pop
xchg
jle
dec
test
cld
sar
out
fidivr
sub
xor
sub
mov
push
xchg
test
or
jle
mov
enter
imul
les
jnp
movs
jns
xchg
xchg
sub
xor
sbb
fild
test
mov
gs
mov
jl
fstp
stos
mov
repz
test
movs
mov
dec
push
retf
call
(bad)
cmp
inc
mov
jbe
mov
nop
jno
(bad)
adc
mov
add
pop
rcl
test
mov
leave
pushaw
pop
ds
repz
pop
cmps
and
sub
or
fwait
pop
cli
sub
push
push
or
aam
mov
mov
dec
push
sbb
call
sbb
daa
ret
jecxz
scas
mov
mov
inc
xchg
movs
das
imul
and
push
outs
push
sbb
pop
push
rcl
jns
nop
sub
pushf
push
xchg
sti
push
ds
jns
pop
jmp
mov
in
mov
jmp
dec
and
repz
mov
cs
adc
popa
call
scas
and
mov
test
(bad)
pop
jecxz
outs
mov
loopne
movs
inc
pop
xor
js
jbe
lea
fs
push
adc
jge
neg
cmp
cli
sub
gs
mov
je
fmul
push
adc
sbb
sar
adc
jb
cmps
aaa
out
mov
pop
js
cmp
std
call
lds
lods
inc
and
fcom
loop
jmp
fs
cmps
call
sub
movs
jmp
sbb
pop
inc
mov
(bad)
stos
mov
jl
frstor
fmul
sub
jl
test
jl
dec
push
ret
stos
icebp
cmp
(bad)
fstp
cmp
retf
mov
hlt
cli
arpl
push
loope
or
int3
dec
adc
mov
and
jge
outs
dec
mov
test
call
dec
xchg
into
jmp
xchg
xor
cmp
sub
in
fisttp
(bad)
lahf
shr
jmp
out
jecxz
pusha
jo
sahf
dec
repz
or
pop
fimul
retf
mov
test
pop
jb
sbb
mov
out
mov
mov
js
dec
sahf
inc
std
dec
stos
test
push
push
pop
ret
mov
cld
inc
pop
cld
adc
pop
or
pop
mov
inc
mov
or
ins
fwait
mov
fdiv
stc
xchg
cmp
add
pop
push
xchg
repz
cmps
inc
test
leave
cs
das
test
jmp
push
mov
iret
scas
imul
push
jnp
aam
fmulp
jp
lea
pop
sahf
imul
ror
ins
leave
pop
test
adc
and
fidiv
dec
fimul
jp
push
stc
push
repz
cmps
push
mov
inc
and
sbb
(bad)
int3
pop
leave
(bad)
mov
ins
bound
je
pop
adc
add
sti
push
mov
mov
jbe
int3
add
xchg
pop
mov
popf
push
jno
pmaxsw
jl
ret
adc
lds
sub
shl
shl
cwde
not
ficomp
or
inc
sub
mov
mov
sub
push
ror
sti
cmp
jmp
out
jb
out
rcl
rcr
jmp
push
jl
adc
xor
push
scas
jnp
mov
popa
cmp
std
inc
xchg
pusha
fsub
pop
ins
inc
sub
mov
and
and
mov
dec
outs
ret
adc
mov
pop
call
pop
addr16
out
mov
xchg
lods
push
push
ds
adc
sti
pop
jg
and
pop
loopne
movs
xor
inc
(bad)
into
out
cmp
(bad)
imul
sub
out
mov
stc
icebp
iret
icebp
adc
aaa
imul
shr
imul
in
in
cwde
leave
add
std
popa
out
jecxz
pop
jge
sub
lods
xchg
out
dec
inc
fistp
leave
sbb
jnp
je
or
test
jbe
sbb
mov
and
cli
outs
adc
push
pushf
popa
test
loopne
add
push
outs
jmp
in
lahf
outs
sub
jp
imul
out
xor
fild
mov
mov
or
mov
add
(bad)
jmp
retf
(bad)
push
loope
jl
jecxz
xor
inc
jns
(bad)
sti
cdq
mov
adc
idiv
xor
inc
cmp
dec
mov
xchg
scas
mov
movs
stos
add
jbe
mov
mov
mov
imul
test
ja
arpl
imul
imul
lahf
jne
int3
mov
mov
sub
push
dec
push
jp
ficom
jnp
and
add
pushf
mov
imul
add
push
mov
call
or
mov
movs
imul
stc
xor
test
sti
ds
push
jb
loopne
fwait
sbb
dec
jmp
ins
lahf
jl
movsx
inc
bound
inc
cmp
xchg
lock
add
aaa
inc
mov
mov
stos
dec
push
adc
xchg
lds
push
cli
mov
cwde
mov
jg
and
lods
pop
pop
mov
ins
and
xor
mov
xchg
add
or
inc
push
loop
add
scas
movs
aas
pop
push
jmp
xchg
sub
cmps
out
mov
sbb
push
push
movs
mov
out
cmps
adc
ins
push
mov
sbb
cmp
adc
jmp
mov
test
cmps
test
or
jecxz
pushf
pop
shl
jae
lock
pop
xchg
pop
adc
lock
sub
mov
or
and
cmc
jo
sbb
test
rcr
xor
fwait
push
add
(bad)
movs
addr16
dec
adc
xor
mov
(bad)
push
add
sbb
pop
cmps
sbb
adc
in
cdq
jo
fwait
dec
dec
imul
sbb
loopne
pop
jmp
jmp
push
sbb
adc
and
jae
pop
push
outs
shl
adc
push
rol
push
xchg
int
movs
mov
loopne
and
bound
and
jnp
aam
test
(bad)
cwde
outs
xchg
scas
add
or
cmp
sbb
jbe
into
imul
inc
jmp
dec
jge
fild
cmp
jae
fnstsw
cmp
cmp
into
dec
jo
xor
inc
fsubr
dec
sbb
or
jne
mov
adc
bound
sahf
mov
and
test
sub
jo
int3
div
scas
cmp
dec
xchg
jo
(bad)
icebp
xor
jno
in
dec
test
push
push
inc
dec
or
and
lods
loopne
inc
retf
inc
lods
in
ja
or
cmp
repnz
push
addr16
jne
cdq
and
mov
cmp
loopne
mov
enter
fisub
dec
xor
ss
push
ret
(bad)
ss
lahf
ss
ror
call
inc
(bad)
pop
inc
cmp
cmp
xchg
sub
mov
push
fnstcw
popa
mov
out
sti
push
sbb
push
mov
xlat
jo
inc
(bad)
add
cmp
add
es
xchg
ja
lods
push
test
or
fldcw
icebp
nop
call
mov
fmulp
xor
daa
repnz
jae
fdivr
jo
or
cwde
lods
gs
stc
inc
inc
cmps
push
mov
mov
fcmovbe
xlat
lahf
inc
add
pop
ss
and
and
loop
(bad)
push
sub
pop
test
js
retf
xor
loopne
ret
call
stc
sbb
pop
pop
mov
int3
inc
dec
dec
test
mov
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
cvtps2pd
loopne
gs
imul
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ror
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
packsswb
inc
push
pop
inc
in
aam
aas
aam
ret
add
femms
and
xor
pushf
popf
xor
and
and
into
ficomp
mov
jge
retf
retf
mov
mov
sahf
mov
fiadd
inc
xor
adc
sar
pop
xlat
dec
mov
xor
jno
or
sar
loop
push
enter
adc
jge
mov
inc
repnz
xlat
arpl
dec
sbb
cmp
jmp
xor
fcmovbe
loopne
stc
(bad)
retf
repnz
loopne
mov
xchg
icebp
call
xor
in
ss
xor
js
and
arpl
dec
in
and
sbb
pop
xchg
mov
xchg
hlt
mov
retf
pop
js
xchg
add
xchg
push
sub
jno
jg
imul
scas
(bad)
sti
push
xor
movs
imul
ins
xchg
bnd
daa
lahf
cmp
push
les
call
fs
fcos
test
mov
out
ret
mov
cli
(bad)
ret
xchg
(bad)
pushf
sub
js
je
test
sbb
jg
fsubr
mov
in
dec
(bad)
rol
das
frstor
inc
gs
bound
icebp
aaa
scas
sbb
call
mov
or
pop
cmps
inc
mov
inc
shl
dec
imul
xchg
outs
mov
and
xchg
add
nop
lock
jb
xchg
int
sub
js
push
(bad)
xchg
mov
sbb
inc
adc
in
add
jne
stc
xchg
push
mov
stos
in
mov
push
mov
sbb
sti
mov
mov
jle
push
mov
mov
dec
mov
ins
xchg
fimul
and
cli
jnp
sbb
xor
mov
loope
(bad)
fs
div
cmps
sahf
adc
in
mov
mov
cmp
jb
hlt
add
fnstenv
xor
mov
ss
jmp
mov
ss
and
xchg
xor
stc
(bad)
pop
jecxz
xor
jmp
cmp
lea
ins
sti
push
call
mov
push
arpl
nop
int3
loopne
loop
sub
inc
jmp
mov
aas
addr16
lahf
push
add
nop
mov
or
jb
sbb
fdivr
push
outs
inc
mov
in
cwde
pushf
iret
inc
lods
repz
xor
push
jae
shl
pop
mov
pop
mov
and
mov
bound
xor
mov
add
mov
cwde
mov
repz
sbb
sti
push
test
in
jns
mov
jmp
(bad)
pinsrw
jg
enter
fs
push
cmp
mov
(bad)
inc
push
sbb
out
enter
adc
leave
jecxz
shl
cmp
pop
mov
dec
les
mov
in
adc
in
cmp
dec
push
ret
or
xchg
inc
cld
loop
jnp
inc
xlat
ret
fistp
daa
jnp
push
or
leave
fstp
aaa
adc
pop
mov
mov
std
rol
xor
and
add
aas
mov
frstor
pusha
hlt
ins
jle
paddw
test
sub
(bad)
test
xchg
ins
(bad)
and
xor
in
int3
mov
inc
xlat
cwde
pop
xchg
mov
adc
lock
es
loope
push
pop
push
pop
icebp
in
push
pop
movs
mov
mov
jae
xor
xor
test
jle
mov
rcl
push
int3
test
rcl
or
push
rol
and
aad
ror
mov
pop
cmps
aas
inc
pop
push
xchg
jnp
clc
dec
aaa
or
jge
pop
cld
shr
mov
or
pop
xchg
pop
sub
int
cli
dec
(bad)
mov
inc
jbe
loopne
out
sub
dec
add
mov
(bad)
scas
ret
lods
retf
jmp
in
in
sbb
mov
ss
rol
mov
or
dec
test
push
mov
lods
in
jl
add
mov
add
or
jb
gs
jo
lock
dec
push
aad
imul
sbb
pop
arpl
push
jp
cdq
push
inc
inc
bswap
daa
mov
(bad)
ins
or
fbstp
iret
lahf
jp
test
jb
std
or
mov
adc
xchg
pop
jne
dec
mov
icebp
aaa
add
jae
sub
shr
push
ins
push
and
shl
xor
pop
xchg
fwait
add
int
rcl
ds
sub
sahf
retf
aas
jne
jle
pop
mul
in
ror
inc
ficom
jno
je
fistp
dec
push
inc
mov
xchg
mov
add
movs
pop
retf
pop
add
(bad)
rcl
sub
cwde
dec
sbb
and
cwde
loope
in
push
cmp
lods
push
cld
add
adc
pop
pop
out
imul
jg
xchg
fs
imul
mov
cmp
inc
and
icebp
rol
loop
shr
js
dec
shl
add
cmps
mov
call
xor
and
loop
out
jbe
jle
or
push
sbb
push
pusha
pop
lods
xchg
mov
cld
sahf
movs
mov
adc
ficomp
pop
rcl
dec
adc
push
adc
(bad)
(bad)
pushf
sub
imul
cs
lea
sbb
call
xlat
dec
pop
cwde
push
shl
dec
dec
or
mov
es
adc
dec
loop
xlat
ins
and
or
xchg
pushf
aam
ret
cmps
mov
clc
mov
pop
ss
mov
sar
nop
hlt
mov
mov
mov
xor
sub
or
call
punpckhdq
or
inc
mov
not
mov
inc
ds
jl
inc
inc
xchg
out
movs
xor
es
cdq
mov
std
push
pop
out
pushf
mov
out
add
sub
out
lods
dec
fldenv
idiv
sahf
mov
or
inc
xchg
mov
ss
xchg
jle
push
daa
int
pop
or
stos
retf
mov
cmp
cld
inc
mov
xor
and
jbe
push
or
cdq
fcomp
pop
pusha
cwde
sti
pop
dec
shl
push
xor
out
retf
push
fst
xor
adc
or
pop
icebp
pusha
and
sub
cmp
outs
stos
fisubr
aas
sbb
in
out
ja
aas
cdq
jle
jbe
(bad)
inc
pop
push
test
dec
cmp
pushf
sub
mov
push
ret
lahf
out
sub
aam
sub
out
inc
int
mov
mov
jl
mov
ror
mov
aad
cmp
call
gs
cmps
scas
sar
sahf
dec
ins
pop
and
add
lea
push
inc
(bad)
xchg
(bad)
imul
psllq
int3
xchg
inc
sub
(bad)
aam
adc
xchg
clc
mov
rol
rol
mov
and
mov
push
inc
mov
mov
std
mov
adc
adc
dec
jno
int
jmp
sub
fimul
std
mov
or
adc
div
std
jbe
mov
fucomi
frstor
cli
inc
ss
nop
loope
push
xchg
mov
lods
or
inc
enter
jno
add
adc
push
ds
push
jns
pop
out
dec
sub
pop
imul
add
xor
outs
call
push
call
xchg
call
and
adc
pushf
jb
push
ror
arpl
cli
or
popa
arpl
std
fimul
add
jecxz
jge
in
std
cmp
jg
imul
jmp
and
add
imul
scas
ss
icebp
ret
fwait
rcl
push
shl
ja
ret
pop
aas
popa
cmc
dec
dec
ss
mov
adc
mov
push
dec
or
jns
(bad)
cmc
(bad)
cmp
lea
jno
sbb
fnstcw
shl
outs
mov
adc
adc
cmp
icebp
hlt
adc
adc
jb
dec
sbb
and
pop
loopne
push
(bad)
dec
addr16
xchg
dec
push
inc
inc
adc
neg
pop
ficomp
fs
mov
js
jl
loope
cs
aad
aad
pop
not
pusha
js
push
repnz
jl
mov
xchg
pop
lock
inc
aam
or
cmp
je
hlt
pop
sub
popf
outs
shl
sti
retf
mov
jp
fmul
jno
stc
js
jbe
(bad)
rcr
jp
mov
fild
ret
and
retf
stos
mov
pusha
inc
sbb
mov
cmp
rol
sar
jae
fldcw
xchg
out
jmp
pusha
and
out
mov
jp
addr16
(bad)
aad
call
nop
push
jecxz
and
fsubr
aas
and
mov
pop
aas
xchg
dec
jl
pushf
shl
inc
push
mov
mov
rol
(bad)
ins
out
rol
das
sub
(bad)
arpl
push
dec
lock
push
mov
mov
jbe
mov
retf
add
cmp
je
or
push
push
add
jae
xsha256
cmps
push
ins
fstp
mov
in
scas
sub
pop
sbb
pop
or
jno
call
je
dec
es
cmp
sbb
fdivr
in
adc
jo
icebp
add
test
push
and
xchg
ins
(bad)
enter
mov
lea
push
(bad)
mov
nop
sbb
sub
xor
repz
jbe
and
rcl
repz
or
sub
sbb
sbb
cmps
pop
mov
imul
push
mov
xchg
push
imul
mov
push
push
dec
push
sahf
inc
push
movs
cmp
loopne
repnz
push
or
scas
mov
fisttp
(bad)
add
sbb
loop
fs
adc
scas
fidivr
call
ins
(bad)
pop
push
mov
mov
(bad)
addr16
call
test
cmc
repnz
sub
icebp
add
inc
imul
xlat
in
imul
xor
fld
ins
xchg
xor
ja
mov
sahf
inc
ffree
cmp
xor
in
sar
hlt
dec
mov
lea
loope
sub
mov
or
pop
xor
push
pusha
jle
ins
js
ret
rcr
aad
sub
gs
and
inc
int
imul
add
iret
cmp
mov
push
pop
mov
pop
les
jb
gs
adc
sti
jbe
sbb
sbb
cwde
sbb
enter
in
jp
repnz
into
repz
ja
sar
and
dec
lock
xor
mov
xor
sub
imul
cmc
pop
mov
sahf
in
stos
and
and
into
fdiv
adc
push
ins
adc
pop
out
popf
imul
inc
jmp
push
scas
mov
jmp
std
and
lods
pushf
xor
retf
pop
(bad)
fcmovne
push
add
add
les
sub
sub
lods
cmp
test
mov
aam
fcomp
(bad)
cmp
repz
in
fwait
popa
lds
push
jp
jle
jns
es
add
push
add
mov
aaa
fimul
aaa
int
push
lock
pop
icebp
cwde
jns
mov
mov
mov
into
push
dec
sbb
jg
out
push
scas
lods
sub
sbb
mov
out
mov
or
jg
adc
mov
fnstcw
or
in
mov
cmp
mov
pop
xchg
aad
dec
add
out
dec
mov
fcmovu
stos
sub
inc
jg
pop
das
(bad)
pushf
das
adc
jns
sti
mov
mov
dec
cmp
out
inc
stc
jb
xchg
adc
test
mov
mov
scas
xchg
je
sbb
fwait
jge
push
(bad)
fmul
ja
(bad)
ds
retf
mov
jmp
movs
scas
inc
dec
jmp
lds
jnp
in
jecxz
iret
aam
add
outs
sub
cdq
scas
(bad)
iret
popa
push
sbb
xor
mov
outs
pop
dec
bnd
xor
pop
jno
push
and
sub
aas
lea
mov
cmp
mov
add
stos
out
les
dec
mov
or
cmc
test
dec
popa
mov
stc
and
cmp
fdivr
jge
frndint
leave
lods
mov
mov
mov
pop
and
cmps
push
and
push
jo
fcomp
arpl
sahf
ficom
(bad)
fldenv
lea
push
cmps
imul
popa
mov
or
and
ret
repnz
fadd
push
sar
movs
ret
call
pop
adc
retf
sub
sbb
lds
mov
sar
and
dec
std
popa
jmp
dec
mov
dec
out
ret
fimul
bound
retf
mov
in
sbb
mov
sbb
adc
ins
stc
retf
jge
fdivr
retf
mov
cmp
fdivr
add
pop
int3
retf
test
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
daa
or
xor
and
xchg
outs
nop
into
xor
nop
outs
and
cmp
adc
aas
div
out
push
add
cwde
jae
add
or
xor
repnz
mov
jp
mov
fldenv
push
div
stos
retf
std
and
fcom
sub
mul
pop
arpl
scas
aas
pop
mov
retf
fild
inc
int
pushf
xlat
mov
cld
cmp
call
xchg
sbb
adc
test
mov
cs
fisttp
outs
jbe
push
or
cwde
mov
stos
push
mov
xchg
(bad)
jnp
or
jecxz
icebp
ss
jnp
clc
fild
(bad)
and
ret
mov
in
sub
xor
stos
les
test
mov
cmp
jno
jle
pop
push
inc
mov
loop
hlt
or
popf
sbb
add
cld
gs
dec
gs
pop
xchg
ret
and
jecxz
push
inc
or
mov
jmp
adc
stos
pushf
xor
pop
cdq
bound
aas
fs
xchg
mov
mov
sbb
and
outs
xchg
cmp
test
int3
cwde
or
jno
inc
scas
ret
adc
loopne
imul
mov
and
ja
pop
sub
ins
(bad)
adc
jo
in
sub
imul
test
xor
leave
push
mov
sub
mov
pop
or
cmp
cmp
rcr
xor
pop
add
mov
fsqrt
push
xor
lock
das
imul
mov
(bad)
lea
pop
movs
add
and
cmc
(bad)
xchg
inc
jne
test
mov
sbb
push
and
enter
popf
retf
inc
out
add
jecxz
pop
cmp
aam
push
mov
add
cmp
and
arpl
ror
js
adc
mov
fidivr
repz
and
(bad)
pusha
dec
cmp
call
sub
lods
pop
aad
repnz
fdivr
fistp
js
shl
pop
mov
mov
lods
aaa
cmps
push
push
pop
stos
dec
test
(bad)
cdq
cmp
lock
test
movs
or
(bad)
into
addr16
(bad)
popf
xlat
mov
inc
fs
jo
jbe
pop
cmps
gs
xor
mov
mov
or
mov
call
mov
xchg
gs
inc
or
or
inc
and
push
inc
jne
fisttp
xchg
fist
sub
int3
in
scas
push
fdiv
ins
dec
dec
push
dec
sub
dec
call
daa
repnz
push
sar
imul
cli
dec
add
stos
push
fnsave
inc
bound
inc
pop
movs
jno
xchg
aas
sbb
and
cmp
dec
aas
jle
push
stos
push
test
push
xor
test
mov
lahf
les
mov
jl
push
mov
scas
jmp
pop
dec
jne
mov
iret
xor
push
ja
pop
test
sbb
call
pop
das
shr
pop
jle
xor
pop
out
sahf
cmp
push
movs
sbb
ins
mov
(bad)
sbb
cmp
fnstcw
and
icebp
enter
ins
adc
movs
dec
dec
test
les
imul
lods
adc
nop
ds
push
leave
inc
cmp
out
cdq
push
sahf
sub
sbb
nop
xchg
test
xchg
cmps
mov
mov
cmp
xor
sub
and
mov
leave
and
test
cmp
xor
arpl
xchg
ins
mov
test
mov
fsubr
movs
xchg
rcr
sub
jge
fdiv
jno
icebp
add
pop
les
sub
xor
nop
retf
nop
int
lahf
rol
mov
loopne
mov
push
ins
jb
push
push
jecxz
xchg
sbb
leave
mov
test
or
les
push
lds
stos
inc
shr
sub
pusha
or
dec
push
cmp
pushf
cmp
sub
and
push
sub
ret
test
inc
push
jp
inc
adc
aaa
dec
test
lods
pop
xor
iret
pop
sbb
mov
mov
sub
(bad)
loopne
mov
div
jmp
ss
out
adc
mov
pop
push
mov
cmp
add
mov
push
mov
jge
div
xor
jnp
mul
cmps
cmp
push
jg
out
push
push
movs
inc
rcr
not
inc
push
add
or
popa
int3
movs
daa
adc
in
dec
imul
leave
pop
sbb
inc
sbb
aam
shl
xlat
pushf
cmp
jne
stos
enter
push
fistp
movs
cdq
inc
mov
cld
in
push
jo
pop
xor
mov
out
dec
ins
cmc
aam
test
lods
xchg
sbb
dec
fidiv
push
sti
mov
and
out
jle
lds
xor
inc
jg
xchg
xor
jmp
in
xchg
xor
fld
pop
sbb
loope
sahf
push
jge
dec
add
mov
jbe
adc
push
push
(bad)
xlat
pushf
push
fmul
mov
cmps
mov
mov
mov
sub
jg
dec
mov
(bad)
in
ja
fsubr
ss
xor
mov
fninit
int3
sbb
or
jnp
adc
mov
jne
xchg
out
test
cld
je
and
fsub
sub
shr
lods
scas
aaa
cli
and
int
loope
xor
inc
fcmovnu
pop
pusha
pop
push
stos
push
icebp
ja
push
adc
nop
xchg
cmps
and
(bad)
cdq
mov
ret
pop
and
call
or
cld
push
dec
(bad)
fisubr
sbb
fidivr
inc
mov
lds
mov
cmps
xchg
cmp
icebp
fmul
aaa
xchg
arpl
jmp
xchg
mov
jae
mov
pushf
lahf
in
repnz
push
or
xchg
push
dec
jle
daa
iret
push
mov
mov
pusha
outs
std
adc
jmp
cwde
aas
mov
cmp
jae
mov
faddp
sub
sub
dec
fs
lds
sub
jb
mov
je
cmp
push
and
pop
jle
mov
test
stc
out
pop
stos
push
call
mov
push
push
or
popf
fcmovnb
fiadd
xchg
adc
test
xchg
aam
loope
mov
cmps
fcom
jmp
xor
sbb
adc
lods
outs
fisubr
iret
in
add
push
xor
(bad)
cld
stos
in
lods
sti
mov
mov
vmwrite
and
iret
mov
jl
pop
pop
daa
add
jge
bound
sti
push
scas
fwait
int3
or
das
cmps
mov
add
dec
scas
sbb
out
in
pop
rol
xchg
inc
inc
mov
pop
pop
sbb
xor
leave
daa
test
inc
jl
jmp
stos
and
ds
out
int3
mov
xor
pop
jnp
ret
add
xchg
in
hlt
mov
inc
push
adc
loopne
in
cmps
push
clc
jno
jns
xchg
test
or
xchg
aam
push
and
jl
mov
fsubp
dec
lods
mov
push
ficomp
sub
fwait
pop
add
and
aaa
fnsave
and
jne
pop
fimul
test
stos
jecxz
sar
mov
aad
mov
push
mov
inc
enter
lahf
pop
adc
push
aas
pop
test
dec
push
hlt
mov
pop
sub
jmp
xchg
push
es
mov
adc
stos
mov
and
jl
aaa
xchg
sbb
pop
sub
sub
(bad)
std
repnz
arpl
pop
fisubr
cmps
push
daa
call
outs
pop
pop
dec
jo
inc
test
xor
dec
stos
fidiv
fst
push
cwde
mov
push
in
and
in
aad
mov
out
in
(bad)
stc
cmps
jmp
mov
cmc
loope
xchg
or
rcl
lock
loopne
xchg
out
sub
mov
mov
fnsave
jns
je
mov
sub
das
je
sub
and
jl
mov
adc
push
stc
mov
xor
mov
lahf
rcr
xchg
(bad)
cmp
xor
cs
cmp
jnp
jmp
out
adc
add
nop
or
or
or
scas
ins
adc
sub
gs
sub
sbb
or
sub
push
xor
aas
inc
pop
xchg
test
cld
pop
retf
lods
mov
push
pop
icebp
in
cmps
fcmovnbe
and
mov
fdiv
inc
bound
xchg
scas
push
js
not
pop
jmp
fs
lock
jns
sbb
xor
and
shl
pop
fldln2
adc
test
sub
fwait
popa
out
adc
sbb
ss
xchg
je
or
inc
inc
(bad)
and
addr16
clc
inc
dec
and
xchg
sub
push
fxch
push
sub
lock
fisub
lods
xchg
lods
or
cmps
xlat
(bad)
mov
test
fcom
and
jle
mov
stos
and
out
mov
aad
loopne
xchg
mov
les
sbb
repz
sub
mov
test
push
gs
cmp
dec
cmps
mov
clc
dec
push
out
(bad)
sbb
in
(bad)
popf
mov
(bad)
xor
xor
stos
int3
das
rol
cmps
push
(bad)
(bad)
call
mov
sub
shufps
repz
mov
jb
add
or
cld
cmp
jbe
iret
test
adc
and
out
mov
test
push
sahf
in
jmp
stos
fisttp
ret
push
dec
push
call
loopne
clc
rcl
sahf
mov
inc
out
mov
push
push
shl
movs
jecxz
add
out
mov
and
sub
xchg
ret
jp
mov
(bad)
mov
adc
in
fisttp
imul
(bad)
mov
out
(bad)
ret
stos
mov
jne
lock
mov
mov
pop
xor
cmp
mov
scas
push
sbb
sbb
(bad)
xor
je
inc
or
push
pop
repnz
(bad)
xchg
scas
jno
out
jae
in
in
pop
sahf
dec
inc
(bad)
stc
pop
mov
mov
les
jecxz
dec
sbb
jg
sbb
shl
mov
sub
pop
ret
dec
fwait
mov
pop
aaa
das
(bad)
call
rol
pop
fcmovb
lahf
mov
inc
pusha
pop
in
imul
jo
mov
imul
ins
jno
dec
pop
(bad)
hlt
and
sbb
adc
inc
sbb
loopne
movs
pop
add
push
fimul
sar
or
sbb
mov
rol
pop
repz
push
(bad)
iret
sub
retf
mov
loope
mov
test
cmc
sbb
gs
(bad)
repz
and
or
and
mov
mov
retf
fs
and
sbb
xchg
inc
test
mov
(bad)
and
stos
adc
inc
aaa
fiadd
pop
mov
rcl
mov
leave
imul
pop
(bad)
stos
dec
out
jno
lods
lock
cs
nop
xchg
push
lods
push
outs
cli
push
outs
cmp
stos
call
ja
call
pop
aad
cs
popa
mov
imul
lds
(bad)
push
push
jg
ret
mov
repz
je
jecxz
pop
pop
ret
jno
in
and
loopne
test
dec
imul
jbe
ja
mov
xor
fstp
ss
xor
add
push
or
enter
lahf
sbb
pop
mov
mov
les
leave
pusha
xchg
mov
mov
cmc
sbb
cmp
movs
iret
cmps
popf
fnsave
push
loopne
pop
repnz
xchg
or
pop
pop
ja
pop
daa
mov
repnz
push
addr16
sub
mov
jge
lahf
jne
lds
adc
xor
movs
jbe
and
xchg
sub
xchg
push
or
cmp
idiv
pop
add
lahf
gs
xor
ret
xor
mov
test
fcmovne
add
cmp
xchg
(bad)
sub
jge
into
ficom
sub
dec
sub
and
cli
stc
jle
lods
dec
mov
fadd
sub
sti
sub
jl
xor
adc
cs
(bad)
pop
popa
lea
mov
fdiv
out
ret
jmp
retf
loope
stos
jg
arpl
sbb
test
xchg
or
fistp
dec
cs
xchg
pop
int3
or
dec
mov
and
aas
dec
fistp
jbe
mov
test
shr
rol
dec
repnz
xchg
test
mov
out
or
mov
test
jl
jbe
sbb
lds
or
mov
cmp
or
sub
xor
xchg
aaa
xor
movs
jne
mov
cld
sbb
(bad)
cdq
cmc
mov
cmp
call
dec
mov
loopne
(bad)
xlat
ins
xchg
fstp
and
fbld
test
adc
mov
add
adc
lea
mov
xchg
sahf
sub
push
(bad)
and
lods
mov
inc
and
xchg
(bad)
jne
fstp
rcl
mov
outs
into
(bad)
lods
js
popf
(bad)
fcom
adc
inc
addr16
lahf
mov
jmp
test
fsubr
pop
sbb
test
sbb
sub
cmp
push
inc
fmul
or
mov
lods
xchg
imul
repz
stos
sub
adc
repz
and
fsub
pop
ret
xor
push
sub
xchg
mov
ja
or
std
stos
mov
add
mov
pop
lea
sbb
jle
dec
pop
(bad)
push
in
jno
mov
dec
pop
push
jle
lds
pop
push
sbb
rol
popa
push
pushf
retf
popa
jecxz
lods
mov
or
pop
cli
cdq
outs
cmps
mov
retf
loopne
mov
movs
ds
xchg
dec
push
or
cmc
add
xchg
int
xchg
mov
jmp
gs
cmp
jmp
fistp
pop
test
lea
inc
cli
jle
push
outs
rcl
and
mov
out
cmp
repnz
add
or
inc
and
push
push
out
iret
(bad)
inc
dec
inc
iret
call
out
cwde
inc
das
sub
dec
jge
icebp
mov
jo
dec
cmp
fist
movs
ja
xor
(bad)
jmp
pop
iret
adc
add
or
add
movs
in
mov
mov
fcom
popa
ficomp
add
jecxz
or
xlat
sbb
call
mov
add
xchg
shr
xchg
push
dec
sar
jle
aam
pop
push
jge
jo
sub
bound
pop
mov
out
push
ins
inc
divps
popa
inc
clc
aas
repz
(bad)
mov
cmp
(bad)
jl
xchg
or
pop
leave
mov
pop
jg
test
mov
push
daa
rol
xchg
stos
retf
xchg
or
jo
jo
pop
ins
push
lahf
pop
add
sub
jmp
jnp
pop
je
sbb
sub
rcr
mov
adc
fistp
fs
repz
adc
(bad)
lds
sub
lods
xor
jmp
sti
and
fstp
xchg
stos
dec
and
or
mov
xor
push
scas
mov
pop
push
mov
adc
pushf
mov
stc
and
adc
push
aam
sub
out
jmp
cmc
jg
mov
dec
cli
js
dec
push
call
ins
jae
mov
xchg
jecxz
jo
fs
xor
es
(bad)
xchg
cli
fsubr
aas
or
fs
push
adc
ss
mov
imul
and
jae
cmc
popf
cdq
cmp
(bad)
je
or
inc
pop
or
mov
cdq
jns
iret
jae
add
out
(bad)
stc
iret
jg
repz
(bad)
cld
mov
mov
test
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
xlat
add
add
das
shl
cmp
out
ss
je
in
aaa
shl
jo
hlt
dec
ja
data16
popa
arpl
adc
cmps
stc
aas
out
jecxz
out
jl
xor
push
(bad)
ins
call
mov
cld
addr16
hlt
lock
adc
bound
sub
ficomp
xor
pop
xchg
sbb
(bad)
sbb
mov
mov
push
pop
ins
add
dec
jg
mov
jb
fdiv
cld
ror
jl
in
jg
scas
xchg
lahf
xlat
addr16
gs
push
jo
mov
dec
mov
sub
push
xchg
cmp
jmp
sahf
hlt
mov
jo
xchg
push
sub
(bad)
arpl
mov
mov
adc
dec
fmul
cmps
xlat
mov
lds
cmp
dec
jp
sub
mov
push
mov
scas
jmp
inc
mov
repz
cs
and
std
call
jae
dec
pop
repz
mov
ja
mov
jmp
xchg
mov
or
dec
test
dec
test
imul
leave
sahf
out
dec
ins
retf
cmp
mul
pop
inc
aaa
inc
test
cmp
mov
and
inc
xor
test
cs
inc
jge
jecxz
push
lods
jmp
shr
(bad)
js
fldenv
add
mov
xor
cmp
sub
sbb
daa
in
sbb
sub
dec
pushf
dec
mov
mov
push
dec
in
add
dec
jno
push
add
dec
xchg
jl
lods
js
push
cmp
(bad)
jg
dec
fstp
xlat
and
sub
daa
dec
popa
out
stos
and
cli
imul
jae
mov
mov
rcr
neg
arpl
or
cmp
sub
xchg
in
fimul
mov
fisub
aad
jb
fwait
or
in
fbld
retf
int3
neg
js
call
xor
ret
scas
xchg
call
in
ins
mov
jg
icebp
inc
in
jno
and
jp
pop
lahf
scas
jge
outs
dec
xchg
movs
mov
sub
push
cmp
push
dec
mov
push
iret
cmc
jmp
ror
sub
sub
fldenv
mov
fisub
or
into
retf
or
ins
push
int3
outs
nop
mov
inc
aaa
nop
ins
xchg
leave
sbb
daa
mov
scas
aaa
sti
push
retf
inc
(bad)
test
sahf
cld
mov
rol
int
xchg
cwde
push
mov
std
xchg
sub
inc
dec
aam
sub
jae
jb
enter
daa
jae
push
and
ret
clc
push
(bad)
and
xchg
into
push
lahf
push
xchg
mov
adc
movs
jge
cmp
repnz
push
scas
out
xchg
sub
test
lods
cli
cs
sub
mov
cs
mov
aad
jmp
loop
lea
sahf
mov
xchg
xlat
mov
xchg
imul
push
(bad)
jo
fistp
ja
pop
leave
adc
hlt
dec
loopne
jmp
mov
sti
loopne
mov
pop
push
fs
push
(bad)
xlat
repz
inc
ja
jg
adc
mov
aam
sar
mov
(bad)
daa
push
aad
mov
adc
cmp
aad
out
inc
popa
call
pop
inc
xor
cmp
outs
jns
ret
div
push
push
cmps
in
jmp
adc
pop
in
das
or
(bad)
sub
call
hlt
repz
jmp
les
mov
retf
cmps
dec
pop
mov
fdiv
shr
cmps
aas
cmps
xor
jbe
stc
cmp
test
out
data16
call
xchg
sbb
lahf
popa
push
pop
aas
add
outs
xor
sub
movs
jp
ret
inc
push
pop
sti
das
int
adc
jecxz
push
bound
out
mov
jne
push
jl
stos
mov
xor
mov
mov
aam
jno
cwde
or
mov
jbe
or
and
mov
adc
arpl
sub
and
xor
(bad)
scas
sub
mov
mov
dec
gs
mov
mov
loop
hlt
(bad)
adc
push
jb
(bad)
scas
loope
mov
sti
clc
and
push
imul
sar
call
lods
mov
fwait
maskmovq
idiv
daa
repz
imul
push
icebp
dec
ror
shr
stos
sub
call
pop
ret
xchg
xor
test
push
rol
jno
sub
or
push
popa
push
in
repnz
push
lahf
div
jmp
pop
mov
ja
cmps
daa
dec
stos
add
inc
inc
call
movs
ins
and
dec
iret
xor
mov
and
lds
retf
sbb
mov
jge
cld
add
lock
or
mov
cmp
jg
inc
cmps
cld
aam
(bad)
mov
mov
jb
outs
jg
jo
adc
adc
outs
in
and
mov
jbe
xor
stos
add
inc
and
sbb
in
and
mov
pop
push
out
(bad)
(bad)
adc
xor
cmps
push
xchg
call
push
push
movs
or
and
jnp
or
xor
das
dec
test
bound
pop
les
sbb
lahf
inc
lahf
mov
fcom
xor
dec
mov
push
cmc
cli
cmp
outs
jo
ins
bound
pop
jp
stos
pop
inc
dec
sbb
movs
fs
xor
cmp
pop
ins
jnp
dec
sbb
adc
ja
shl
push
fimul
mov
pop
loop
inc
dec
adc
jo
mov
out
cmp
lea
movs
push
pop
addr16
out
ins
into
std
inc
mov
fisttp
jmp
sub
mov
mov
mov
jge
push
repnz
or
jle
jmp
dec
sub
outs
rcr
mov
sub
outs
test
scas
fimul
push
retf
jmp
mov
pop
inc
(bad)
adc
xor
mov
popa
cmp
mov
leave
into
fdivr
xor
repnz
or
pop
cwde
or
in
or
les
adc
and
fist
dec
or
iret
enter
nop
mov
and
inc
std
mov
sti
mov
aaa
out
stos
daa
shr
in
dec
or
pop
pop
xchg
mov
jbe
std
pop
mov
push
push
lock
jno
mov
js
fld
fisttp
and
dec
daa
cmc
push
and
cmp
and
mov
mov
rcr
dec
aas
int
push
lea
inc
ins
or
mov
add
push
dec
mov
jbe
sub
push
fstp
lods
xor
fucom
out
(bad)
adc
sti
sub
retf
sbb
lea
jae
bound
dec
fnstsw
push
mov
jmp
adc
mov
xchg
cmc
adc
pop
mov
cmps
pop
call
jmp
(bad)
loope
leave
stmxcsr
scas
cmps
clc
dec
fsub
sbb
and
cmps
xor
sti
xor
imul
addr16
jecxz
adc
push
jns
or
jle
push
xchg
mov
test
fucomi
jl
stos
aam
push
xchg
xor
(bad)
mov
adc
mov
pop
dec
sbb
add
(bad)
add
inc
xlat
in
cld
clc
fwait
sub
jne
xchg
mov
cmp
sbb
fisub
sub
je
pop
mov
ds
lea
stos
pop
pop
jmp
imul
arpl
fcomp
cdq
lods
dec
adc
std
add
push
(bad)
push
sti
sub
(bad)
jge
stos
movs
cmp
mov
add
nop
cmp
xor
and
js
ins
xor
ror
inc
pushf
inc
cld
ret
addr16
(bad)
push
hlt
and
loope
(bad)
pusha
inc
add
and
mov
push
loopne
and
push
imul
test
pop
jp
pop
jl
jns
out
jge
pop
jb
mov
inc
and
xchg
jo
push
sbb
cmps
push
pop
adc
shr
and
xlat
sbb
inc
xchg
es
and
inc
(bad)
cld
(bad)
jp
push
ret
xor
(bad)
xchg
sub
push
cmps
adc
sbb
add
and
xchg
jecxz
xor
jp
(bad)
retf
mov
out
push
xor
in
xchg
dec
outs
push
cld
or
fs
inc
cmp
fcomip
inc
mov
shr
outs
sbb
cmp
rol
or
mov
mov
jns
sub
cdq
test
comiss
cmps
mov
dec
lea
mov
pop
shl
es
cs
xor
jbe
adc
outs
jno
jge
mov
xor
retf
arpl
enter
adc
push
mov
call
xor
pop
add
daa
sub
pop
cmp
xor
or
cli
mov
call
pop
push
and
(bad)
and
in
mov
test
addr16
inc
test
and
(bad)
and
movs
pushf
test
(bad)
mov
lods
lahf
fst
xchg
dec
xor
sub
clc
loope
mov
lods
data16
mov
popa
cmp
jp
ret
xchg
lods
pop
jnp
pop
pop
dec
(bad)
jle
loopne
jbe
stc
das
ja
adc
mov
sbb
(bad)
idiv
xlat
inc
xchg
jecxz
push
push
cmp
nop
rcl
iret
sub
mov
cmp
imul
and
sub
mov
enter
or
sti
push
sub
and
addr16
mov
fmul
repz
pop
xchg
lea
loopne
mov
scas
push
call
fld
sti
call
fs
mov
dec
daa
aas
jp
fucomp
and
sub
add
outs
push
shr
adc
aaa
mov
dec
xchg
adc
jl
push
jb
popf
pop
jbe
ret
jg
cdq
pop
in
xchg
scas
fcom
dec
push
cmp
into
mov
out
shl
div
sbb
dec
push
das
adc
xchg
ja
jno
rcr
ror
cld
sbb
xlat
fmul
or
sbb
jo
not
addr16
aaa
fisubr
imul
call
inc
test
fst
and
lods
in
or
popa
pop
mov
xchg
movs
mov
sub
sbb
mov
mov
cmp
jge
stos
fsub
scas
and
cmp
and
(bad)
out
pop
push
jp
push
push
ss
pop
xor
popa
movs
push
cmps
cmp
outs
rcl
lds
adc
xor
cmp
xchg
setbe
xchg
mov
jns
add
jmp
xchg
mov
in
repnz
dec
adc
dec
ret
out
adc
(bad)
jae
or
pusha
mov
xor
or
sub
rcl
fisubr
jae
sub
dec
mov
call
test
cmp
inc
mov
call
jle
adc
repnz
cmp
mov
sub
push
lods
or
lds
fs
fwait
pop
adc
inc
dec
mov
sar
inc
pushf
ret
inc
nop
cwde
(bad)
test
cmp
lahf
xchg
xlat
sbb
jmp
adc
and
sar
mov
cmp
pop
pop
push
mov
and
jge
sub
movs
imul
pop
mov
push
dec
mov
add
dec
pop
pop
js
out
jmp
test
xchg
stos
mov
jge
add
fucomp
addr16
push
into
cdq
push
push
and
ins
fimul
jmp
out
sbb
movs
test
cld
mov
scas
sti
call
jno
(bad)
pop
or
mov
mov
cs
cwde
inc
loope
not
in
int
jno
call
sub
pop
mov
mov
jne
test
jo
arpl
pop
push
push
jb
out
aad
(bad)
in
push
imul
icebp
repz
popf
pop
mov
pop
call
sbb
jae
sbb
mov
xchg
dec
inc
dec
dec
dec
push
movs
int
cmp
sub
sar
push
icebp
or
mov
xchg
ret
pop
or
xor
dec
adc
into
pop
sub
jp
fcom
ins
hlt
jnp
in
or
xchg
ret
outs
jp
icebp
pcmpeqb
pop
daa
test
dec
(bad)
mov
enter
sbb
fst
dec
add
fiadd
dec
jne
in
pop
cmp
pop
or
cwde
and
int
int
sar
mov
push
push
or
mov
xor
int3
je
das
pushfw
iret
or
popa
fwait
repnz
fild
sbb
fs
and
inc
and
xor
pushf
push
pop
retf
(bad)
add
mov
bound
jg
(bad)
xchg
jne
clc
gs
cmp
and
xchg
xor
or
xchg
out
in
mov
out
pop
test
loopne
push
jae
outs
fmul
and
xchg
es
mov
sbb
and
test
leave
stos
jmp
mov
adc
push
test
xchg
xor
mov
xchg
leave
dec
in
mov
stos
ins
inc
out
xor
xlat
bound
(bad)
(bad)
jge
clc
and
cmps
or
and
in
pop
xor
js
inc
fild
add
outs
mov
mov
cs
mov
ja
gs
loope
fmul
dec
sti
mov
retf
mov
xchg
stc
jmp
cli
mov
mov
fmul
jmp
inc
mov
jg
mov
lock
sub
jbe
mov
jge
mov
leave
jne
(bad)
jmp
daa
mov
dec
cwde
push
scas
bound
fistp
xchg
rcl
loopne
xchg
sub
sub
and
pusha
jae
mov
rcr
jnp
imul
cmps
push
div
mov
ret
mov
daa
and
arpl
pop
push
cmps
dec
jl
js
neg
fadd
dec
outs
scas
and
mov
das
aaa
into
out
out
in
call
mov
fwait
pop
xchg
cmps
mov
or
rol
xlat
fstp
mov
sbb
pop
(bad)
cwde
ss
mov
cmps
xchg
ins
aam
sub
arpl
or
outs
mov
lods
xchg
xor
add
test
pop
push
fcom
(bad)
push
fstp
aas
mov
mov
mov
js
xchg
imul
jnp
add
in
xchg
outs
mov
and
mov
jns
inc
sbb
jmp
xchg
lds
ja
loop
xor
inc
rcr
or
mov
test
test
mov
push
sub
enter
jae
rcr
in
cli
sti
fwait
call
nop
sub
cmp
popa
mov
nop
sti
mov
test
stos
out
mov
inc
int3
fldcw
popf
sbb
cld
lea
stos
pop
mov
jg
sub
jbe
mov
(bad)
outs
out
idiv
pop
inc
mov
jg
nop
out
aas
xor
cwde
xchg
inc
add
ja
jns
push
popf
dec
cmp
or
inc
ret
ret
inc
and
inc
sub
adc
jns
mov
cs
mov
ret
movs
push
fwait
mov
cmp
in
mov
pop
scas
in
push
cmps
arpl
stos
mov
add
xor
jnp
inc
pop
add
jl
fstp
add
xor
xor
cdq
sar
pop
outs
hlt
and
xor
xchg
data16
cmps
aas
adc
mov
mov
lea
xor
jl
add
fwait
cmp
mov
mov
and
mov
imul
arpl
(bad)
push
hlt
sbb
je
lock
scas
mov
jg
mov
xchg
mov
cmp
ret
adc
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
lds
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
dec
ja
xor
mov
xor
cmp
outs
shl
cwde
mov
xchg
idiv
ja
add
add
fcomp
xchg
sbb
fdivr
jl
push
movs
mov
xchg
mov
cmp
xor
das
repnz
ins
xor
jle
out
int3
les
jmp
sbb
and
mov
jae
dec
movs
test
int3
dec
xchg
mov
inc
test
shl
popa
pop
xchg
jns
cmp
rcr
retf
imul
push
push
stos
and
sahf
aad
mov
jmp
add
xchg
jo
push
or
cmps
pop
clc
xlat
and
pavgw
inc
mov
stos
enter
pop
add
hlt
mov
ins
call
jp
js
mov
dec
dec
stos
mov
jne
inc
pop
aad
xchg
fwait
cmp
inc
add
dec
cmp
add
mov
out
outs
fild
lahf
push
mov
adc
mov
movs
mov
iret
ins
punpckhwd
pop
or
imul
mov
sub
jg
and
jge
(bad)
lea
push
ds
das
sar
sbb
mov
addr16
or
mov
xchg
jb
jp
mov
(bad)
stc
loopne
xor
mov
cmp
xchg
jb
in
imul
call
push
(bad)
adc
int3
dec
js
xchg
sub
jl
inc
cmp
cmp
and
mov
loope
jg
sub
or
lahf
xchg
enter
add
arpl
dec
push
(bad)
mov
mov
int
or
or
leave
and
xor
add
or
(bad)
jo
dec
jne
push
scas
(bad)
int
imul
call
stos
les
and
mov
fs
in
fcmovb
in
sub
inc
mov
sbb
hlt
cmp
gs
rol
(bad)
out
mov
call
push
arpl
movs
cmps
shl
jbe
mov
pop
bound
arpl
jp
repz
(bad)
xlat
jo
into
mov
fimul
jno
jg
enter
ins
mov
cmc
cmp
test
push
push
dec
inc
mov
xchg
fdiv
ss
(bad)
iret
pop
aas
lods
sub
and
jnp
shr
dec
(bad)
pop
xchg
push
mov
mov
jmp
les
fsub
aaa
jb
ret
dec
or
sub
jbe
aam
sub
ss
inc
test
xor
mov
sbb
popf
push
(bad)
call
jmp
inc
adc
mov
or
sar
cwde
sub
sub
scas
or
jge
(bad)
sub
data16
xchg
stc
and
and
push
sar
aad
inc
sbb
xor
test
add
imul
mov
xor
nop
push
aad
dec
repnz
xchg
int
mov
addr16
test
shl
imul
dec
sbb
int3
lahf
sub
mov
stos
rol
mov
cmp
add
into
push
imul
mov
lahf
rcr
pushf
mov
mov
jo
xor
mov
sbb
cmp
cmp
sbb
mov
in
das
out
lahf
(bad)
mov
pop
mov
std
mov
dec
ror
gs
in
sub
(bad)
mov
xchg
test
mov
pop
aaa
push
cmps
adc
inc
mov
nop
inc
in
push
into
iret
lods
adc
inc
jle
mov
push
loopne
addr16
jno
int3
push
ret
inc
and
and
fwait
xchg
pop
dec
in
or
sbb
pop
call
mov
test
sub
push
int
cmp
cmps
sub
mov
(bad)
xor
packuswb
xchg
fucomp
dec
hlt
or
cmp
and
jbe
adc
imul
or
test
xchg
je
je
sbb
aaa
jno
cmp
and
cmp
dec
or
jo
jns
bound
dec
cs
test
out
in
xor
arpl
or
xor
inc
cmps
outs
pop
add
push
xor
sbb
sub
cmps
xlat
jo
cmc
mov
mov
jmp
outs
mov
dec
cmp
out
imul
pusha
dec
js
bound
xchg
dec
cld
adc
and
nop
into
call
push
cld
les
jmp
push
mov
inc
outs
adc
push
lea
jb
or
aad
call
fcmovnbe
loopne
ret
outs
jg
xlat
bound
cdq
add
mov
pop
shl
shl
lds
mov
aas
xor
or
ss
add
daa
push
(bad)
in
inc
mov
arpl
inc
add
call
pop
sub
inc
fs
rcl
inc
sub
xchg
int3
jb
cld
xchg
mov
pop
inc
inc
loopne
add
mov
xchg
jg
push
aam
cmps
mov
cmp
ds
shl
and
ins
lods
ds
add
xor
sbb
cmp
push
and
rcr
repz
xor
ficom
mov
cmps
push
and
lds
adc
(bad)
mov
sub
fcom
das
das
ret
add
jb
add
and
inc
in
pop
ficom
mov
je
fcmovb
jecxz
add
test
imul
in
rcr
cmp
leave
cmc
lea
popf
mov
pop
xor
pop
jnp
pusha
mov
ror
test
pusha
sub
daa
clc
xor
ret
repz
add
mov
scas
jo
mov
add
cdq
(bad)
cmp
fwait
pop
outs
xchg
shl
movs
adc
ret
mov
push
and
xor
je
xchg
loopne
xchg
movs
(bad)
jb
mov
sbb
jmp
outs
xlat
mov
cdq
test
xchg
xchg
adc
mov
mov
mov
mov
xor
mov
retf
es
lock
push
mov
movs
les
stos
jae
inc
jmp
fwait
div
sub
sbb
jmp
adc
pop
mov
cmps
lds
adc
cwde
jg
scas
retf
nop
fimul
sbb
adc
stos
fninit
mov
and
fs
call
int
pop
cs
shl
loop
stos
cld
inc
icebp
pop
adc
or
aad
dec
push
mov
push
dec
mov
push
pop
fdiv
push
pop
sub
test
mov
not
aas
aaa
scas
sbb
gs
add
mov
jae
lods
in
ins
enter
jbe
in
xchg
xchg
repnz
int
outs
lock
sub
jl
popf
rcr
pushf
jnp
enter
jno
(bad)
ins
aas
jecxz
pop
in
inc
rcl
and
inc
xchg
jmp
sub
ret
push
mov
or
mov
sub
push
lock
jp
shr
cmp
adc
inc
xchg
aas
fdivr
jge
cmp
xor
es
popa
stc
pop
xor
dec
jle
push
add
out
pop
ins
scas
mov
xor
not
sar
les
loop
lods
daa
fcom
outs
sbb
mov
test
sbb
lods
jmp
daa
sbb
adc
das
xchg
jge
add
xchg
pop
and
outs
cld
jno
pop
out
add
add
sbb
jp
pop
stos
dec
fadd
lds
inc
dec
or
sbb
xor
ret
adc
xlat
(bad)
sbb
adc
or
lods
clc
fimul
out
imul
adc
popf
cmp
push
popa
push
jne
pop
xchg
xchg
xchg
add
icebp
mov
or
jmp
mov
push
pop
rol
cmp
popf
es
jb
adc
clc
push
xor
aaa
jb
retf
push
push
mov
or
clc
or
repnz
inc
dec
adc
mov
inc
popa
jmp
aad
sahf
repz
das
jle
push
faddp
and
aas
mov
sub
clc
pop
aad
imul
or
sub
jmp
pop
pop
push
les
xor
and
fist
jg
dec
aam
neg
sbb
aaa
sbb
imul
and
scas
sub
pusha
mov
mov
dec
fnstcw
mov
(bad)
cli
lock
sti
or
or
dec
out
dec
cmps
ss
push
shr
out
or
and
scas
nop
in
mov
rcr
jmp
mov
jl
mov
jbe
mov
mov
stos
mov
fistp
fs
push
jmp
cmp
aad
and
mov
frstor
mov
inc
shl
(bad)
call
int3
imul
ds
daa
div
jae
push
ret
das
pop
repnz
addr16
fnstenv
and
sbb
(bad)
loop
pop
ret
jge
shr
jmp
push
fldcw
inc
mov
sar
mov
movs
stc
inc
ror
inc
xor
xor
pop
loopne
mov
popa
cld
sbb
outs
push
ins
test
ins
push
mov
push
outs
loopne
lods
xchg
fwait
xor
ins
adc
rcl
mov
jg
and
sbb
lds
nop
jae
jge
std
add
jmp
mov
in
inc
icebp
ret
mov
jnp
fnstenv
ins
sti
push
sbb
jno
xlat
loopne
mov
xchg
clc
and
mov
faddp
xchg
xor
mov
pop
xor
inc
xor
outs
mov
loope
sbb
in
(bad)
loop
fsubr
cld
je
cmp
fiadd
inc
loopne
mov
call
mov
adc
jp
call
mov
add
mov
scas
aaa
and
shr
pop
sub
cmp
push
pop
fcomp
mov
mov
loop
mov
jo
pop
lock
cmps
je
popa
dec
cmp
or
mov
pop
out
sbb
test
pop
or
jge
lods
or
pop
gs
shl
dec
sub
hlt
mov
shl
jo
cmp
lea
fimul
lock
popf
push
test
adc
out
mov
pop
mov
pushf
fadd
xor
dec
shr
ret
sub
add
pop
jle
jmp
mov
push
cmc
jae
sti
push
(bad)
ja
push
push
mov
popf
jmp
hlt
or
or
jnp
cmp
je
add
and
dec
xchg
and
xor
jns
sub
pop
mov
mov
or
dec
mov
inc
hlt
in
sahf
xchg
inc
xorps
je
adc
fdivp
mov
call
mov
inc
pop
fidiv
sbb
(bad)
and
add
movs
loop
cmp
mov
js
mov
jne
push
and
dec
fwait
call
mov
nop
in
int3
mov
adc
lahf
mov
push
repz
xor
push
daa
es
mov
mov
push
adc
jge
inc
mov
in
xchg
repz
mov
ins
ja
cmps
fdiv
xor
aam
xor
cmp
bound
cmc
or
mov
iret
cmc
into
or
dec
in
jge
gs
shl
mov
xchg
movs
pop
js
enter
out
inc
fwait
gs
loope
mov
adc
ja
or
sub
iret
inc
lahf
mov
ror
shr
(bad)
repz
ror
and
jb
fild
ss
ret
(bad)
in
fimul
sbb
dec
or
jae
lea
xchg
cmp
das
(bad)
mov
stos
aas
dec
xor
movs
adc
mov
dec
daa
das
jbe
fist
ds
xor
sbb
jle
dec
mov
add
and
inc
ss
iret
jno
adc
xchg
push
das
adc
xor
mov
cld
jp
mov
and
sar
mov
mov
adc
pushw
loop
cmp
fmul
(bad)
into
mov
(bad)
mov
inc
jo
in
mov
in
lea
int3
sub
cmp
xchg
scas
xchg
adc
adc
inc
cmp
cmp
rcl
sahf
pop
sbb
rcr
aad
jmp
mov
stos
mov
sbb
pop
add
sub
aaa
jle
jo
outs
fld
in
psllw
jno
in
mov
sub
cmc
xchg
clc
xchg
pushf
push
ins
cs
ins
les
ffree
or
outs
imul
in
xor
fcomi
icebp
(bad)
sbb
xlat
lock
jmp
add
rcl
cmps
sahf
dec
out
push
icebp
inc
pop
std
jmp
xchg
ret
and
jl
jae
dec
add
(bad)
and
cmp
inc
les
mov
(bad)
arpl
push
or
cwde
or
or
dec
icebp
gs
enter
in
mov
sbb
jmp
movs
out
add
sahf
jae
xor
clc
add
mov
mov
sar
dec
mov
mov
les
adc
sub
jg
cs
mov
je
(bad)
jnp
cmp
jmp
jmp
cwde
scas
dec
adc
ret
mov
jo
sub
test
int3
rcl
out
shr
push
push
pop
mov
sbb
out
and
add
jle
or
stos
dec
and
inc
mov
dec
gs
iret
icebp
cmp
mov
(bad)
fisubr
jecxz
sub
movs
inc
movzx
mov
push
mov
rcr
ins
jmp
pop
jecxz
sar
iret
xlat
mov
imul
in
mov
xchg
add
shr
sbb
lods
lock
enter
add
cmp
sti
mov
fs
(bad)
push
loopne
jmp
call
sub
sbb
not
hlt
push
mov
les
hlt
jne
(bad)
and
jns
sbb
dec
test
mov
test
stc
push
jl
ja
rcl
arpl
dec
xlat
rol
lock
(bad)
ja
int3
add
add
pop
(bad)
or
leave
sbb
arpl
cld
and
sbb
cs
test
pop
movs
loope
jl
pushf
or
cmp
mov
ins
out
cmp
lds
rol
ja
push
mov
push
xchg
xor
push
neg
xlat
sub
retf
jbe
dec
add
inc
inc
outs
stc
(bad)
or
cli
aaa
shl
popf
mov
xor
mov
test
mov
out
fwait
sub
int
push
xor
xor
mov
dec
ret
sub
inc
retf
shl
loope
jge
mov
(bad)
retf
das
xor
ror
cmc
stc
push
ret
in
push
push
ins
shl
std
xchg
jo
cdq
stos
aas
out
xchg
pop
test
aam
lock
xor
jnp
inc
enter
aas
mov
add
sbb
jo
or
clc
test
test
mov
aas
jno
into
movsx
mov
ror
scas
movs
out
xor
xchg
or
adc
add
push
fistp
pop
into
pop
jae
aas
sbb
push
popf
mov
mov
lock
add
adc
fmul
test
int
sar
hlt
prefetch
test
add
out
in
sar
cld
mov
in
or
push
in
shl
cmp
cmp
push
cmps
push
adc
out
cmps
sahf
mov
call
dec
cmp
dec
add
mul
in
ss
cmps
cld
test
add
mov
sub
sbb
(bad)
aas
mov
jns
stos
aaa
addr16
cmp
inc
ss
cmp
and
push
push
stos
fs
std
cs
jl
cmp
xor
ins
sti
out
aam
cwde
outs
sbb
push
dec
add
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
test
out
cmp
inc
hlt
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
into
ror
xor
xchg
cmps
cmps
cmp
xor
into
test
sbb
dec
(bad)
jne
jmp
ja
add
test
(bad)
adc
arpl
je
cdq
(bad)
pushf
mov
(bad)
sbb
sti
pop
(bad)
jno
dec
arpl
pop
aaa
and
pusha
and
ds
and
clc
push
push
shr
out
adc
aad
loopne
xor
sahf
ret
or
xchg
mov
cmc
inc
fild
repz
jg
outs
sbb
cdq
push
mov
and
int
ds
loopne
test
das
adc
push
mov
adc
cdq
push
fs
not
lea
les
outs
or
jge
sub
sub
cmp
pop
mul
adc
sub
jno
sub
ds
retf
das
mov
push
xchg
jg
cmp
adc
jge
inc
jmp
pop
mov
sti
fisttp
fadd
fst
add
xchg
xor
fisub
iret
and
pop
icebp
fist
bound
push
xor
sub
and
sub
cmp
adc
or
stos
enter
xchg
sub
imul
je
bound
push
sahf
es
adc
pusha
pop
js
lock
lods
mov
push
aad
sbb
inc
push
cld
push
test
fbstp
sub
mul
neg
push
inc
retf
repnz
imul
dec
inc
dec
jae
ror
icebp
pop
mov
inc
pop
test
popf
xchg
push
push
jb
add
jge
cmp
dec
xor
je
cmp
jg
inc
jmp
and
dec
out
and
cmps
dec
stos
outs
addr16
pusha
mov
xchg
dec
movs
test
fld
cmp
lock
or
in
add
es
stos
mov
cmp
js
inc
jg
xor
fldenv
cld
dec
lock
cwde
push
pushf
cdq
adc
xchg
mov
in
cmp
shl
push
pushf
dec
pop
xor
int3
dec
push
imul
test
sar
mov
mov
adc
cmp
mov
lea
add
arpl
pusha
ret
nop
xchg
aaa
push
mov
repz
sbb
test
dec
mov
lock
sbb
shl
mov
or
pushf
aam
push
pusha
adc
mov
sti
(bad)
arpl
push
aas
inc
or
ds
sub
hlt
jnp
cmp
pop
xchg
(bad)
jge
xchg
fdivr
jbe
dec
loop
jne
xchg
inc
lds
inc
aas
inc
mov
cmp
jne
mov
inc
and
xor
mov
cmc
push
xor
in
add
push
add
lds
(bad)
test
push
lods
xor
xor
test
dec
retf
mov
adc
mov
test
or
fstp
jns
xlat
ins
cmp
push
ss
mov
dec
les
(bad)
not
aad
pop
inc
(bad)
dec
push
stc
mul
xor
mov
or
leave
je
mov
xchg
or
mov
cmp
fs
into
sti
lds
lock
jb
int
sbb
nop
cmps
xchg
cmp
mov
jae
adc
pop
push
fcmovu
out
jge
sbb
lea
mov
bound
mov
push
dec
sub
xchg
cmps
mov
sbb
dec
push
test
add
test
aas
push
call
and
or
pop
sti
adc
jp
into
mov
ror
cmps
js
mov
jp
cmp
cmp
je
xlat
xchg
and
dec
and
hlt
iret
fdiv
push
dec
mov
addr16
add
arpl
pop
frndint
data16
push
(bad)
adc
push
mov
mov
stos
jmp
push
outs
(bad)
and
out
xchg
mov
add
ffreep
xchg
mov
add
cli
mov
mov
push
push
dec
pop
inc
add
ja
or
out
movs
add
sar
daa
mov
ret
xchg
inc
add
cwde
xchg
xor
(bad)
(bad)
loopne
test
popa
fnstcw
out
xchg
inc
int3
out
test
xchg
and
mov
xor
xchg
mov
scas
sbb
ins
jmp
imul
aam
cdq
push
js
jp
or
sbb
int3
outs
sahf
jno
pop
add
js
data16
push
mov
(bad)
movlps
fistp
in
inc
icebp
push
sbb
ds
cvtdq2ps
inc
aaa
dec
pop
sub
test
mov
sub
mov
daa
jmp
ficom
hlt
fsubr
xchg
xor
cmps
int
jmp
outs
xor
loope
inc
in
sbb
inc
popf
xchg
movs
pop
inc
inc
pop
dec
push
jl
mov
cmp
adc
cmc
movs
jbe
lods
inc
inc
lahf
mov
sub
lahf
jmp
sbb
cmp
dec
push
lods
xchg
mov
inc
clc
push
ret
sbb
lods
cld
aaa
cli
push
and
jns
and
fdivp
inc
dec
in
mov
jne
and
outs
lahf
popa
mov
add
retf
in
adc
gs
mov
ficomp
mov
out
lds
dec
icebp
inc
cmp
shl
cli
push
call
mov
sbb
xor
(bad)
jp
jle
add
xlat
das
(bad)
mov
shr
(bad)
jl
push
jp
xlat
inc
push
retf
stc
cdq
sub
mov
xchg
test
dec
push
sub
mov
xchg
fs
fchs
imul
cdq
push
lea
mov
cmp
shr
dec
sub
test
fidiv
or
ja
stc
add
jae
shl
ds
fimul
scas
in
test
jne
clc
call
loop
xchg
push
mov
push
lods
hlt
fdivr
push
or
(bad)
push
inc
jp
bound
mov
push
mov
int
dec
cmp
pop
(bad)
call
and
ret
sub
call
mov
call
push
mov
xchg
sbb
sbb
xor
mov
je
loop
push
call
pushf
push
inc
jg
sbb
clc
sbb
xchg
push
mov
cmps
ds
and
in
std
xor
pop
mov
inc
sbb
cwde
hlt
test
ds
inc
mov
imul
xor
push
fistp
test
es
mov
pushaw
and
xchg
sbb
mov
mov
mov
loop
cdq
cmc
or
out
push
jo
je
in
call
(bad)
xor
adc
pop
cmps
ja
aaa
fprem1
out
int
pop
mov
cdq
adc
rcl
retf
dec
das
int
mov
mov
and
scas
leave
cmp
das
jle
push
mov
push
push
adc
cmps
(bad)
jns
fwait
adc
push
cmp
adc
mov
push
fwait
es
xor
popf
pop
shl
xchg
arpl
rcl
pushf
retf
push
iret
(bad)
mov
cmp
leave
data16
sbb
imul
shl
fdivr
call
mov
jge
lds
jb
jnp
lahf
inc
mov
inc
dec
pop
ja
ds
in
lods
out
mov
loope
es
sbb
into
stos
stc
loop
cli
inc
inc
xchg
stos
in
ret
or
fiadd
push
or
adc
dec
jbe
push
mov
cmps
jnp
fadd
cmp
fisubr
sub
mov
(bad)
xchg
pop
sbb
xchg
jb
mov
sbb
in
and
add
and
loop
lahf
in
add
gs
retf
jne
lods
jne
std
outs
pop
pop
les
and
movs
dec
mov
imul
sbb
(bad)
sub
mov
xchg
sbb
int3
mov
or
dec
mov
jg
or
retf
icebp
mov
shl
addr16
push
adc
adc
pop
jmp
out
adc
sti
xchg
mov
cmp
pushf
in
mov
test
out
push
mov
(bad)
mov
gs
xor
fs
push
out
and
xlat
(bad)
fcom
mov
std
and
rcl
mov
movs
pop
inc
dec
aad
mov
dec
cmp
jle
aam
(bad)
push
mov
mov
lods
ret
pop
mov
adc
or
int3
pop
sbb
or
or
cs
jae
push
lods
adc
pop
mov
cmp
jo
inc
add
push
sahf
and
inc
cmp
xor
repz
repz
and
cmps
lds
jmp
inc
cs
cmp
sbb
outs
ss
dec
(bad)
ss
dec
add
shl
or
in
mov
mov
mov
aaa
cmc
push
pop
ret
shl
mov
or
xchg
(bad)
xor
mov
int
scas
xor
adc
mov
pop
mov
ss
push
mov
pand
(bad)
xchg
rcl
xchg
loope
arpl
pusha
xlat
popf
(bad)
outs
pusha
xor
gs
mov
retf
push
shl
adc
mov
nop
(bad)
lods
mov
cmps
lods
sub
neg
loop
shl
xchg
or
cmp
cs
ret
xchg
out
stos
sub
not
add
adc
adc
push
sbb
sub
xor
out
cmp
and
inc
dec
enter
push
clc
outs
daa
or
jmp
dec
mov
and
test
scas
ret
repz
leave
adc
call
fs
sbb
popa
mov
push
mov
pop
popa
xchg
jmp
mov
jno
leave
(bad)
adc
hlt
retf
dec
mov
add
sar
sbb
(bad)
xor
idiv
sub
aad
pop
(bad)
mov
mov
loope
fld
xchg
(bad)
rcr
js
sbb
in
pop
adc
(bad)
push
(bad)
xor
into
rcr
sbb
ins
dec
pop
loop
push
retf
jmp
out
loope
jge
call
sub
call
call
sti
enter
pop
fnsave
ss
(bad)
mov
xchg
pop
jb
mov
aam
inc
imul
inc
outs
icebp
outs
in
and
jne
call
test
mov
mov
cdq
cld
cmp
inc
outs
inc
ret
in
cli
ins
mov
push
xor
in
cmp
adc
pop
xchg
mov
out
das
imul
ins
add
sbb
fld
iret
xchg
and
pop
and
arpl
repnz
fs
lahf
add
sub
or
inc
sub
adc
in
sub
xchg
mov
ret
add
mov
aam
movs
lahf
mov
stos
mov
xor
fucomp
pop
mov
xlat
cwde
jp
inc
push
jmp
aaa
add
adc
xor
push
loopne
lods
dec
cmp
popf
(bad)
hlt
adc
mov
dec
jb
les
xchg
xchg
push
xchg
jbe
rol
retf
push
sar
mov
stos
add
repnz
jecxz
dec
scas
ins
bnd
fisttp
es
jle
and
gs
mov
ds
or
hlt
arpl
and
mov
or
mov
mov
call
cwde
push
sbb
mov
add
call
adc
fcomp
inc
ret
sub
adc
sub
cmp
rol
sbb
aad
fisub
sbb
aad
loop
sahf
movs
push
movs
call
push
pop
sbb
mov
fstp
int
pop
stos
hlt
out
mov
ins
mov
scas
sub
dec
adc
(bad)
out
(bad)
cmp
push
out
cld
or
sbb
into
push
sbb
inc
and
rcr
dec
cmps
pop
icebp
lea
loop
add
das
call
push
mov
retf
fimul
push
push
xchg
jns
jnp
pop
sub
push
and
xor
retf
pop
test
mov
jb
inc
(bad)
mov
enter
daa
push
out
sbb
rcr
pop
adc
sbb
jb
ret
mov
xor
dec
xchg
popa
mov
ret
fist
in
xor
mov
or
in
add
clc
or
repnz
(bad)
dec
shl
and
int
loop
call
ficom
loope
mov
bound
stos
aas
jle
inc
cld
stos
add
ja
cmp
xchg
jbe
mov
xchg
ret
dec
pop
sbb
push
or
test
in
push
in
fstp
dec
inc
and
jno
cli
hlt
push
and
ja
xor
sub
scas
mov
xor
xor
push
xor
std
add
jne
inc
sub
fcmove
adc
sub
adc
mov
jecxz
dec
es
(bad)
cmps
xlat
inc
sahf
out
push
pop
sahf
sar
leave
cmp
sbb
ret
xchg
sbb
add
stos
stos
das
fldenv
mov
xchg
cmp
hlt
mov
fdiv
scas
clc
sbb
daa
sub
cdq
jne
sbb
cmps
in
vrcpps
pop
cmp
int3
pop
mov
xor
add
outs
inc
dec
test
cmp
push
lea
add
pop
rcl
or
mov
inc
je
fld
retf
xchg
push
pop
or
mov
sar
push
shl
std
push
mov
push
sbb
sub
ret
dec
sti
mov
popf
cmc
cwde
retf
arpl
scas
jno
dec
pusha
dec
cmps
jno
scas
ins
ret
dec
sbb
in
xor
sub
ret
out
js
push
and
call
mov
mov
xlat
ins
push
xor
mov
(bad)
stc
jecxz
sbb
xor
push
rcl
ins
hlt
inc
jno
mov
ret
pop
adc
add
jnp
mov
dec
ins
ja
jbe
or
fisttp
mov
mov
es
pop
jle
add
sub
fbld
lods
push
dec
enter
vmulpd
sub
mov
inc
lahf
mov
push
adc
std
nop
cmc
in
adc
sbb
xchg
pop
mov
cli
xchg
xchg
push
push
jne
cmp
sbb
xchg
mov
cmp
out
outs
into
int3
mov
test
(bad)
cdq
cmp
add
movs
lods
mov
cmps
int3
xchg
pop
loope
enter
sub
aad
or
ja
adc
add
xor
in
(bad)
inc
cmp
popf
in
test
inc
lds
or
ror
sbb
pop
pop
ins
dec
mov
sbb
stos
cmps
sahf
dec
aas
(bad)
push
mov
dec
lahf
cs
xlat
das
clc
cmc
jno
imul
in
adc
mov
retf
mov
xchg
push
mov
and
push
xor
mov
ret
add
and
fcom
hlt
push
sahf
pop
push
ret
hlt
and
jg
repnz
imul
sub
in
or
iret
imul
loopne
test
sub
iret
out
dec
aas
pop
add
dec
sbb
data16
mov
push
mov
(bad)
fwait
rcr
xchg
loop
xchg
add
xchg
pop
daa
icebp
pop
shl
cli
xchg
mov
mov
je
push
gs
xor
mov
dec
int3
mov
fbstp
shl
mov
fild
adc
mov
xor
bound
jns
scas
jne
pop
(bad)
shl
enter
sbb
lds
inc
jns
dec
jnp
daa
pop
or
xchg
lock
(bad)
mul
sub
call
xor
and
or
fbstp
pushf
mov
loopne
jmp
sub
lea
loope
sub
cwde
lods
pop
iret
add
(bad)
push
loop
mov
bound
sahf
ret
cwde
mov
xchg
call
mov
add
test
push
outs
push
(bad)
jmp
and
inc
sub
xor
fld
jmp
or
add
popf
xchg
pop
popf
shl
call
out
sbb
sbb
retf
mov
cmps
cmp
data16
jmp
add
and
xchg
cmp
push
xchg
jp
inc
icebp
fbld
shr
pop
call
jle
mov
loopne
(bad)
dec
out
jbe
inc
scas
or
addr16
mov
jg
stc
out
jg
stc
out
jmp
lock
and
(bad)
in
xor
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
sahf
mov
sbb
cmps
outs
call
cmp
or
test
ss
test
push
jg
mov
mov
mov
push
call
xchg
loopne
dec
in
mov
arpl
mov
pop
pop
jmp
movs
sub
xlat
pop
mov
jne
jo
xchg
push
sub
fldcw
popf
cmp
add
clc
test
push
call
cmp
jns
sbb
movs
test
sbb
pushf
ror
adc
push
ret
out
(bad)
cmp
shl
push
fistp
add
ja
add
aaa
icebp
pop
ret
or
jle
ins
repz
enter
pxor
scas
(bad)
jmp
daa
cmp
sbb
xor
or
mov
add
iret
movs
add
dec
mov
mov
fnstsw
lds
pop
(bad)
(bad)
cld
xchg
loop
je
lods
mov
xor
dec
mov
(bad)
sub
and
adc
jmp
outs
es
shr
mov
jne
inc
push
add
shr
pop
shl
shl
dec
sahf
call
(bad)
mov
out
loop
jg
xor
sar
pusha
aam
lea
test
gs
mov
fdiv
dec
push
stc
mov
mov
xchg
xor
ins
out
jmp
std
retf
icebp
cmps
xor
div
or
lea
pop
data16
les
jno
cmps
mov
out
sub
icebp
sbb
cs
add
icebp
das
push
(bad)
xor
add
out
sar
jg
cmp
lea
stos
fcmovnb
xchg
test
adc
xor
enter
dec
cs
push
jg
(bad)
push
xchg
nop
in
in
push
push
lock
hlt
and
add
into
inc
push
inc
les
mov
in
popf
mov
in
push
gs
cmp
popf
mov
repz
inc
rcr
jmp
fwait
loope
jbe
pushf
sub
push
icebp
adc
sbb
jmp
mov
sbb
je
fnstsw
inc
cld
(bad)
popa
loope
mov
aas
and
cs
xchg
retf
(bad)
or
xchg
gs
sbb
daa
pusha
sub
cmp
mov
push
jo
mov
in
ss
or
push
dec
cmp
(bad)
or
pop
and
in
ret
je
or
sub
jge
dec
data16
imul
adc
ins
popf
mov
imul
dec
out
std
and
cmp
mov
or
ins
mov
outs
pop
push
sub
loopne
ss
mov
add
dec
shr
das
sbb
ins
lds
mov
cwde
push
mov
sahf
mov
pop
mov
mov
adc
pop
cmp
sub
xchg
mov
ss
shl
(bad)
nop
dec
in
mov
jg
in
test
icebp
leave
sub
iret
push
pop
mov
test
mov
gs
std
das
ins
xor
scas
(bad)
in
scas
aas
xor
outs
jnp
ins
pop
sbb
mov
mov
stos
dec
loope
ins
in
je
fucomip
dec
inc
cmp
push
add
xor
stos
pusha
adc
aam
cdq
pop
ins
add
sbb
or
dec
scas
daa
sbb
sahf
out
mov
inc
mov
cmp
xlat
int
lods
jge
daa
push
arpl
in
pushf
test
and
push
retf
jo
pop
out
sub
arpl
jmp
pusha
cmp
xlat
mov
pop
push
je
add
mov
push
stos
(bad)
push
mov
loope
or
popf
sbb
fsubr
and
js
fldenv
pop
(bad)
xor
aaa
mov
xor
sub
xchg
rcr
sbb
(bad)
xor
cmps
jmp
pop
cmp
imul
push
jl
lods
sub
and
and
pusha
sbb
iret
dec
mov
add
dec
jg
jl
xlat
jle
ficom
sub
cmp
aam
sahf
jecxz
and
sub
pop
daa
mov
add
out
sti
(bad)
aas
neg
icebp
movs
test
cmp
jns
mov
jne
push
data16
dec
jge
pcmpgtb
cmp
cmp
es
sti
ins
repz
aas
daa
jl
ret
xor
fucomp
mov
xor
cmp
sbb
xlat
mov
add
push
std
jmp
sub
retf
je
test
mov
and
enter
enter
cmp
jne
xor
outs
pop
mov
(bad)
cld
push
pop
jmp
sbb
outs
fidivr
int
jns
ja
idiv
cmps
dec
sub
ss
ds
addr16
xor
xchg
fisubr
fild
loope
fdivrp
mov
cmc
mov
retf
mov
sub
jae
stos
push
ficomp
adc
aad
fiadd
mov
inc
in
fcomi
mov
fucomp
jb
cmp
xor
cs
xchg
movs
mov
fmul
loop
lods
je
push
loopne
arpl
add
sub
push
outs
mov
out
mov
lods
cmp
imul
xor
xor
repz
pop
mov
pushf
lock
pop
cmp
aas
pop
inc
push
cmp
jp
outs
iret
arpl
xchg
xchg
adc
pushf
push
add
lds
loopne
mov
ja
adc
jbe
and
pop
push
test
mov
or
xor
outs
out
in
push
mov
xchg
cmp
xchg
mov
(bad)
adc
nop
ds
inc
(bad)
jle
or
stc
fs
dec
cmp
adc
jle
and
fs
sub
xor
pop
cmp
jo
ret
bnd
push
jecxz
sub
rcl
push
shl
pop
call
jmp
jnp
or
jae
mov
push
bound
mov
adc
int3
aaa
push
sub
sub
(bad)
gs
popf
xchg
enter
out
out
test
push
mov
cmc
shl
test
adc
push
or
leave
mov
repnz
sbb
inc
inc
std
inc
mov
jns
xor
pop
jnp
xchg
hlt
xor
lock
xlat
dec
or
and
sbb
bound
sub
ror
pop
adc
mov
push
sbb
loopne
xor
shr
cmc
aas
nop
jecxz
xor
push
mov
push
cmp
out
xor
push
xor
scas
daa
mov
retf
xchg
adc
out
xlat
sbb
pop
pop
adc
cmps
repz
jo
mov
mov
pushf
lahf
and
das
push
shr
xchg
cmp
test
adc
(bad)
stos
out
lods
xchg
ds
jbe
mov
iret
sub
cmp
sbb
in
dec
adc
test
dec
lahf
adc
fild
adc
jle
mov
addr16
fsubr
xchg
stos
fld
cmp
stos
xchg
icebp
pop
call
outs
mov
mov
out
sub
dec
pop
pop
out
push
fistp
jne
xchg
outs
sub
pop
not
pusha
mov
cmp
mov
push
mov
adc
inc
xor
data16
loopne
lods
dec
pop
test
imul
fdiv
mov
stos
aaa
sub
sti
mov
repnz
cmp
mov
pop
push
fsubp
std
jbe
lea
xchg
cmps
jle
jno
mov
xor
pop
jge
inc
scas
push
cmp
pop
es
dec
retf
or
dec
pop
xchg
cmp
(bad)
stc
adc
cmp
sub
test
sbb
lahf
ja
inc
mov
daa
or
cmp
jno
dec
ss
cmp
lods
add
pop
mov
es
push
xchg
cmp
mov
cmc
scas
in
dec
pusha
loope
stc
and
mov
mov
mov
pop
mov
sub
cmps
jne
pop
mov
mov
mov
mov
sti
jp
hlt
sahf
jmp
dec
push
repnz
cmp
cmp
aaa
jns
fild
movs
mov
mov
jl
mov
in
ss
mov
bound
pusha
data16
sub
push
sbb
cmps
movs
loop
out
inc
mov
aam
ret
mov
xchg
xor
pop
push
call
(bad)
(bad)
xor
not
sahf
jge
sub
mov
inc
in
addr16
and
adc
retf
adc
dec
cmp
call
and
test
aas
ss
mov
jo
sbb
mov
repnz
inc
jmp
mov
repz
cld
pop
jmp
mov
nop
sti
xor
push
fld
cwde
ret
mov
jbe
pop
mov
cmc
inc
pop
es
ds
xchg
retf
push
cmps
lods
cli
(bad)
mov
add
dec
jb
or
pop
test
pop
jbe
call
mov
test
sub
sub
mov
stos
or
lea
movs
(bad)
fisubr
jmp
dec
lea
sbb
add
shl
sbb
jo
push
rcl
adc
jmp
scas
(bad)
xchg
xor
push
and
je
cmp
jl
inc
xchg
mov
lea
jb
cwde
xor
repnz
sbb
hlt
dec
jnp
(bad)
jmp
adc
sbb
xchg
xor
test
jo
push
xchg
fimul
push
dec
cwde
les
sbb
(bad)
std
sbb
adc
popa
repz
pusha
shl
xchg
fild
das
mov
mov
mov
add
pop
out
dec
or
push
ja
je
ss
jns
imul
in
icebp
pop
sbb
repnz
jmp
test
(bad)
jae
push
push
out
std
outs
mov
outs
jl
sub
mov
mov
adc
adc
mov
repnz
movs
mov
xor
cld
pop
and
jb
pop
mov
inc
xchg
aam
cmp
scas
xor
xchg
mov
jno
in
test
push
mov
in
xchg
pop
shl
pop
arpl
dec
test
sbb
xchg
pop
push
or
inc
mov
or
mov
xchg
pop
mov
pshufw
lods
dec
dec
cwde
xor
retf
inc
push
pushf
mov
sbb
pop
movs
xor
out
jmp
ds
adc
sbb
sbb
sub
popa
pushf
repz
mov
mov
adc
mov
xchg
xchg
(bad)
(bad)
mov
add
push
jmp
push
outs
ret
push
dec
(bad)
sub
cmp
bound
adc
enter
xor
mov
push
popa
mov
ins
pusha
cdq
nop
mov
rcr
adc
call
scas
stos
rcl
fmul
mov
gs
jae
xchg
cwde
cld
mov
inc
mov
and
inc
hlt
lds
sti
adc
mov
push
pop
lods
xchg
mov
pushf
push
mov
push
test
mov
xor
ins
scas
or
xchg
fs
in
cwde
retf
sbb
test
push
adc
mov
cmps
rdpmc
mov
aad
out
mov
ins
or
jp
mov
inc
add
sub
lods
loopne
cmp
inc
push
gs
add
xlat
and
std
add
mov
std
pushf
rol
or
adc
push
(bad)
mov
lods
outs
neg
(bad)
jle
add
mov
nop
sahf
mov
jo
shr
test
xor
adc
imul
sub
test
out
or
and
dec
dec
jbe
dec
dec
(bad)
mov
mov
xchg
aas
jl
cs
in
mov
xchg
lods
or
xchg
sbb
inc
lahf
test
sbb
adc
aaa
dec
fidivr
loope
fucomip
inc
imul
cmps
add
inc
repnz
addr16
test
shl
mov
and
xor
in
mov
rcr
jle
jb
aaa
lods
in
ret
mov
in
ds
jne
int
mov
mov
shr
cmp
(bad)
movs
pop
mov
addr16
jge
jbe
adc
shld
jecxz
mov
sbb
sti
cs
push
dec
pop
push
push
sub
mov
rcr
adc
scas
ss
sbb
leave
sub
out
jecxz
adc
sar
jge
in
xor
mov
imul
and
jp
lock
cmp
int3
mov
int3
dec
mov
pop
fwait
xor
inc
outs
push
jns
jmp
add
inc
sbb
xchg
rcr
(bad)
(bad)
mov
pop
stc
ss
repnz
adc
jp
int
std
(bad)
jle
(bad)
div
mov
dec
cmp
fcom
imul
sub
int3
mov
jg
fwait
int
dec
adc
sbb
gs
aaa
lds
fdiv
sub
in
add
add
sub
ds
inc
retf
and
test
ds
lock
sbb
push
or
cmp
jae
cmps
fsubr
and
push
mov
inc
or
sahf
imul
ins
inc
mov
lods
imul
test
loop
out
pop
lea
dec
dec
jno
push
push
jle
xor
push
out
pop
gs
icebp
(bad)
cmp
outs
loopne
addr16
inc
fwait
push
in
jae
mov
ins
add
adc
cmp
outs
or
sbb
push
adc
arpl
push
fs
lahf
test
mov
inc
popf
xchg
add
xor
mov
std
ficom
cmc
push
jmp
aaa
stos
cli
jns
cwde
jge
out
pop
fyl2xp1
cmp
add
jp
mov
loope
add
lds
cdq
and
mov
push
(bad)
shr
pop
xlat
retfw
int3
mov
jns
outs
inc
in
mov
push
mov
mov
nop
mul
imul
pop
aam
call
adc
bound
cmp
sbb
stos
je
cmps
rcr
mov
jg
repz
cwde
in
mov
mov
out
scas
scas
mov
push
bsr
jb
cmps
sbb
mov
cmps
cmp
repnz
jb
push
ja
jb
outs
in
jmp
int
adc
xchg
add
aaa
dec
xchg
adc
and
popa
ss
out
xchg
xor
mov
push
dec
sar
pop
int
call
cli
dec
adc
in
xchg
add
add
sahf
retf
cs
scas
push
dec
push
iret
lds
jnp
sbb
push
repz
aaa
shl
repz
enter
mov
mov
das
imul
pop
push
out
(bad)
shl
sbb
ja
mov
lds
and
or
sti
add
stc
jecxz
xchg
jno
pop
jl
neg
fisub
xor
in
pop
aad
cmp
ret
mov
mov
and
(bad)
icebp
(bad)
mov
mov
into
sub
pop
cmp
jne
aam
popf
bound
popf
mov
adc
out
imul
and
mov
pop
push
mov
pop
sar
jb
xor
or
aad
out
shl
fnsave
iret
xchg
sahf
jg
mov
data16
out
mov
retf
mov
cwde
cmp
and
imul
repz
repnz
jg
repnz
push
push
adc
cdq
mov
mov
(bad)
mov
mov
push
add
add
inc
cmc
in
sbb
ss
mov
lahf
std
inc
movs
sti
ins
icebp
cmc
inc
ror
ds
xchg
xor
loopne
sbb
lahf
mov
push
mov
sbb
pop
sub
imul
loop
(bad)
out
out
or
or
dec
and
push
cmps
lahf
sub
mov
(bad)
stc
iret
jg
repz
(bad)
cld
out
call
add
jg
out
jo
in
dec
je
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sahf
mov
data16
cmc
xlat
fwait
ss
jae
dec
mov
rcl
int
je
ja
je
jo
fidiv
out
pop
jns
cmp
inc
xor
ret
or
cmp
scas
(bad)
rol
shr
fldcw
pop
dec
int
sbb
push
cmp
xor
rcr
js
jl
stc
daa
pop
retf
mov
retf
into
inc
es
jnp
das
mov
add
stos
cdq
or
push
push
jae
jge
icebp
ret
xchg
add
or
ficom
sbb
aas
cmps
mov
push
ffree
les
call
push
ja
cs
dec
add
lds
test
outs
cs
aaa
rcl
jnp
loope
xchg
imul
mov
pop
adc
jle
(bad)
sbb
cmc
scas
mov
cli
jmp
(bad)
xchg
jbe
push
fsubr
xchg
sub
xchg
push
inc
ins
add
cli
add
fs
sub
and
sbb
test
xlat
jno
sub
es
push
ds
retf
mov
push
fdiv
mov
mov
inc
call
dec
mov
add
test
push
fs
inc
mov
(bad)
xor
push
(bad)
mov
repnz
pop
mov
repz
retf
mov
cmc
xchg
sub
mov
das
imul
fisttp
cmp
movs
dec
sub
mov
inc
cmps
imul
frstor
jg
adc
sbb
(bad)
jmp
mov
(bad)
sar
gs
imul
sub
and
pop
mov
add
adc
pop
sub
jno
stos
outs
into
ja
adc
xchg
addr16
push
jns
scas
in
outs
add
jbe
es
add
dec
mov
ins
and
pop
push
test
mov
rol
std
call
xchg
outs
addr16
arpl
sar
enter
shr
push
aam
add
cmp
sbb
and
jo
adc
mov
ins
in
inc
aam
(bad)
ret
and
inc
dec
jnp
push
sbb
loope
or
jmp
cwde
push
idiv
int
mov
jmp
stos
aas
dec
sub
shr
xor
inc
or
aam
ficom
jle
addr16
(bad)
fild
lods
mov
add
retf
retf
lea
(bad)
sub
cmp
adc
xchg
stc
sahf
test
mov
jns
jo
push
les
inc
pop
dec
sub
std
test
mov
clc
je
push
out
push
loopne
xor
xchg
jmp
iret
xchg
aaa
xor
cs
fcom
push
cdq
xor
xchg
lea
or
mov
mov
cs
inc
mov
enter
adc
xchg
jno
retf
cmps
ins
movs
adc
gs
call
test
mov
mov
das
sbb
outs
pop
out
xchg
clc
cmp
addr16
dec
cmp
ret
call
sti
int
mov
mov
mov
inc
popa
xchg
and
add
add
std
gs
cdq
fld
(bad)
int
mov
retf
(bad)
int
aaa
jg
fcomp
mov
repz
(bad)
xlat
shr
push
imul
movs
and
sub
pop
or
sub
pop
in
movs
push
pop
lea
sbb
mov
mov
into
repz
sbb
int
std
and
mov
repz
(bad)
popf
cmp
rcpps
adc
mov
pop
iret
jmp
or
sbb
xlat
jbe
inc
gs
(bad)
xchg
out
and
ins
call
cld
outs
xchg
adc
and
cmp
sahf
fidivr
loope
nop
inc
add
mov
jae
scas
fstp
ins
shl
std
mov
jle
lods
lahf
inc
frstor
in
adc
test
es
int3
xchg
out
repnz
imul
cmp
lock
loope
jecxz
arpl
xor
pop
or
repz
out
lods
or
(bad)
mov
pop
shl
cmp
inc
jo
xchg
xchg
aam
mov
popf
jmp
xchg
lods
sar
fnstcw
pop
cmp
xchg
pop
jno
jno
cdq
mov
dec
jbe
(bad)
push
outs
sub
pop
cdq
(bad)
out
test
daa
sbb
aaa
pusha
(bad)
sub
mov
cmp
test
adc
arpl
std
call
lea
cmp
jbe
inc
pop
jecxz
fstp
or
xor
in
sidtd
mov
loopne
fadd
icebp
pop
dec
push
inc
sbb
push
leave
mov
popf
xor
vmovsd
push
cs
xor
in
jecxz
scas
dec
inc
out
sbb
mov
pop
push
push
stc
sbb
fsubr
inc
and
sub
stc
and
sbb
push
mov
xchg
xchg
push
lods
leave
add
xchg
jns
ja
das
lods
or
enter
mov
in
dec
repnz
dec
and
pushf
fistp
jmp
jmp
loope
mov
cld
cwde
out
mov
test
pop
mov
and
(bad)
add
mov
lods
idiv
inc
adc
add
stos
add
push
add
idiv
adc
dec
cld
xor
loop
pop
cs
xor
shl
scas
movs
xchg
loope
sub
xchg
call
cmp
or
push
sti
mov
cmp
(bad)
std
or
sub
sub
inc
imul
retf
and
or
push
hlt
jmp
shl
jmp
cmps
cmp
fiadd
daa
sub
mov
cmp
aas
shr
push
jge
in
sar
sti
ds
repnz
mov
sub
loop
loope
icebp
pop
dec
fwait
push
int
test
sbb
mov
clc
jge
loope
into
sub
stc
mov
fldcw
xchg
test
jno
clc
in
or
mov
std
xchg
lock
mov
mov
mov
fwait
lods
mov
scas
call
xchg
sub
adc
ficom
mov
enter
adc
into
mov
dec
push
test
arpl
inc
xchg
or
gs
or
xchg
push
cmp
out
xchg
xchg
add
adc
add
pop
jg
stc
ret
addr16
outs
jecxz
xor
xor
sub
pop
sahf
xchg
xchg
jg
xchg
ins
push
pop
(bad)
aam
inc
xlat
sbb
test
pop
aad
jns
push
popa
sbb
pop
jge
enter
pop
or
sbb
jo
(bad)
xor
add
in
mov
mov
jmp
cmps
mov
test
clc
xchg
test
aaa
popa
imul
push
push
pushf
add
jecxz
lahf
fst
rcl
dec
lods
clc
std
loopne
cld
ret
inc
mov
sub
hlt
jmp
lahf
out
ret
xchg
imul
(bad)
adc
jp
pop
jne
fimul
mov
xchg
cdq
les
cmp
mov
sbb
stos
in
imul
test
mov
mov
xor
call
jb
adc
mov
jmp
nop
lods
sbb
jge
lods
inc
and
nop
fistp
loop
sub
pop
pop
sti
mov
mov
shl
mov
mov
cwde
shr
adc
ja
dec
and
sub
fiadd
sub
xor
cmp
enter
outs
pop
in
aas
sbb
scas
shl
ret
add
ss
aad
pop
loope
push
fwait
sbb
mov
mov
inc
mov
jg
push
(bad)
arpl
imul
enter
sub
push
or
aam
sar
in
inc
fld
push
jbe
mov
adc
jecxz
push
xor
lods
shl
enter
lahf
loop
push
inc
fnsave
and
push
hlt
jle
jae
jmp
and
or
adc
dec
inc
sbb
fwait
xchg
push
icebp
inc
(bad)
sahf
stos
aaa
mov
outs
test
adc
or
add
inc
mov
ret
sbb
(bad)
movs
adc
(bad)
cmp
in
stc
dec
xchg
movs
push
rcr
retf
in
outs
jge
mul
push
fisttp
js
out
jmp
lds
fist
push
or
outs
xchg
jmp
or
ja
sub
into
into
or
stos
adc
jle
dec
dec
iret
xor
lods
fucomip
dec
cmps
(bad)
xor
das
sub
mov
cld
ins
call
push
mov
jne
xor
or
mov
add
xchg
mov
push
jns
sub
arpl
addr16
hlt
scas
sbb
mov
stos
int
pop
scas
xchg
rcl
cmp
rcl
leave
cmc
lods
adc
mov
mov
arpl
cld
fisub
xchg
or
gs
inc
(bad)
cmp
(bad)
ret
fst
gs
pop
add
movs
pushf
pop
and
stos
fnstcw
push
repnz
js
imul
sub
iret
cmp
lahf
into
into
add
pop
sahf
and
int3
adc
je
mov
out
push
push
mov
stc
adc
nop
ja
js
mov
inc
ret
fucomip
push
inc
lahf
pop
pop
pop
or
xchg
imul
adc
popf
pop
lock
les
or
sub
dec
push
fimul
in
cmp
out
mov
push
(bad)
frstor
stos
mov
mov
xchg
pop
fs
mov
cmps
ins
in
cmp
jmp
adc
mov
cwde
test
shl
dec
pop
cmps
stos
fnsave
pop
and
js
cmps
stos
shl
test
retf
loop
retf
push
jp
in
stos
mov
stc
dec
bound
mov
cli
bnd
push
xchg
xchg
sbb
daa
mov
sar
mov
add
repz
cmps
add
jmp
das
mov
ss
neg
inc
rsqrtps
add
dec
push
popf
gs
sbb
test
mov
sbb
push
xchg
pop
sub
sbb
pushf
xor
push
sbb
xchg
pusha
pop
repz
cwde
mov
mov
xchg
adc
dec
pop
cmc
out
std
ja
inc
xchg
mov
(bad)
out
push
(bad)
xor
mov
inc
add
sub
das
sbb
inc
sub
mov
or
push
jge
jge
fldenv
imul
mov
in
js
loopne
mov
movs
adc
out
popf
jo
idiv
popf
sub
addr16
jp
lods
scas
sub
push
lods
lds
and
popf
aaa
ret
sub
test
sub
in
mov
or
daa
mov
xor
clc
lds
mov
in
push
xchg
push
cmp
loopne
cs
(bad)
repz
mov
ins
mov
xchg
adc
mov
daa
mov
inc
iret
call
jb
inc
or
cmp
jmp
xchg
imul
gs
dec
rcl
out
aad
and
mov
sub
mov
xchg
sub
push
pop
push
mov
xor
or
sbb
push
cdq
push
rol
mov
sbb
daa
scas
fldcw
lods
aad
cdq
ja
popf
mov
adc
cs
sub
pop
addr16
xchg
xchg
mov
arpl
in
pop
mov
lea
xchg
jnp
outs
dec
cwde
jge
fs
xor
cmc
cmp
les
dec
xor
add
cmps
and
adc
adc
push
push
and
sbb
mov
and
stos
cmp
push
fucomp
xor
in
add
sub
add
aaa
popf
or
arpl
pop
jns
mov
mov
rcl
mov
sbb
outs
or
pop
ja
ss
pop
inc
(bad)
movs
popf
and
std
push
je
ins
fnstsw
daa
cld
aad
inc
sahf
test
and
push
fbld
lahf
mov
out
push
or
bound
pop
les
cmps
or
lahf
mov
arpl
mov
pusha
rcr
jno
add
stos
stc
inc
ficomp
cmp
std
cmps
and
icebp
cli
push
jbe
mov
rcl
inc
jmp
mov
sbb
or
lahf
jp
or
sub
cdq
(bad)
ins
in
push
xchg
and
xchg
xchg
fdivp
popf
push
retf
xor
or
cdq
dec
repz
and
out
jmp
xchg
shl
std
pop
out
data16
mov
ins
dec
xchg
icebp
addr16
xor
mov
js
out
xchg
xchg
cmp
hlt
mov
adc
arpl
xor
xor
aaa
mov
or
push
sub
mov
sub
fldenv
cdq
into
pop
jmp
jbe
stos
test
or
div
push
jo
mov
les
gs
and
xor
and
cmp
sar
inc
xchg
jmp
pop
xchg
push
retf
mov
std
push
xchg
sbb
rcl
xor
inc
xor
outs
mov
xor
adc
push
in
cwde
mov
adc
sbb
imul
dec
jo
adc
dec
sbb
mov
cli
dec
mov
or
mov
(bad)
cdq
mov
(bad)
stos
cs
(bad)
enter
add
push
rcl
scas
push
rcl
xchg
cdq
es
or
xor
jge
int
out
cmp
in
fnstenv
sub
xchg
in
xor
mov
inc
sahf
jg
popa
push
or
adc
stos
jne
cmp
pop
shl
mov
dec
inc
sbb
jle
jp
inc
add
(bad)
xlat
hlt
fs
push
and
or
and
push
(bad)
fld
fnstcw
jb
mov
jecxz
or
sbb
test
ja
repnz
test
outs
mov
fcmovne
stos
test
push
in
in
and
pushf
data16
cmp
push
pop
lahf
stc
mov
cmc
stc
add
enter
adc
inc
mov
ins
movs
jl
adc
repz
cli
sub
pop
movaps
popf
xor
push
inc
(bad)
stos
lock
cwde
inc
bound
add
int3
es
dec
xchg
iret
sbb
jmp
out
test
dec
mov
mov
sbb
mov
pop
inc
mov
sbb
push
add
sub
loopne
stc
test
cmp
pop
(bad)
in
daa
movs
dec
inc
cmps
inc
sub
(bad)
cld
inc
outs
cmc
pop
dec
movs
std
cdq
adc
jne
pop
scas
jl
in
stc
mov
ror
or
add
bound
mov
inc
repz
dec
sbb
push
xchg
(bad)
sbb
ins
(bad)
imul
push
out
add
push
xchg
(bad)
or
cmp
xchg
xchg
fild
inc
jb
mov
add
cmp
dec
or
mov
cmps
scas
jle
xor
push
std
cli
enter
jecxz
cld
jp
jo
aam
in
fdiv
inc
cmps
stos
sub
cwde
rcl
mov
xchg
fcomp
pop
std
ret
mov
fiadd
repz
and
cmps
and
aad
or
sub
scas
push
lods
sahf
push
js
jle
inc
sub
push
bound
das
je
inc
sub
std
aam
cmp
sub
stos
loop
popf
test
or
inc
pop
call
mov
lods
cmp
gs
pop
inc
mul
cmp
jle
mov
cmp
jmp
(bad)
ja
rol
lock
xor
cmp
jae
loop
jns
xor
xchg
fidiv
repz
ffreep
inc
les
retf
add
mov
loop
jbe
jae
xchg
and
lods
mov
sbb
inc
mov
icebp
outs
fisttp
shl
arpl
jae
scas
mov
cmps
push
xchg
push
loope
xor
jne
ror
xor
ins
fwait
jb
cmps
es
mov
int
xor
(bad)
mov
mul
in
movs
scas
push
jns
pop
ds
cdq
pop
int
sub
outs
sub
jle
mov
jmp
or
fldcw
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
add
xchg
scas
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fdivr
dec
out
out
xor
movq
fstp
sbb
cmps
repz
dec
test
sbb
iret
add
add
test
rcl
retf
mov
rol
in
(bad)
int3
int3
mov
shl
std
das
inc
imul
xchg
outs
push
test
jbe
clc
mov
jbe
cmp
pop
pop
inc
sbb
dec
dec
(bad)
enter
jg
xchg
add
outs
pop
test
scas
and
push
mov
jmp
dec
(bad)
in
and
mov
jnp
shr
popf
into
xor
test
rcl
scas
scas
aad
(bad)
fs
adc
jl
test
ins
rcr
mov
pop
(bad)
outs
sub
add
imul
and
dec
(bad)
test
rol
adc
mov
aaa
out
fwait
pop
pop
rcr
sub
push
adc
retf
xchg
cmp
push
pop
jno
ins
aad
jge
jno
adc
fidivr
mov
and
cwde
shufps
fsubr
out
mov
idiv
cmp
xor
cmp
or
mov
es
out
mov
popf
loope
or
cdq
add
add
inc
add
or
fwait
push
cmp
push
pop
leave
mov
pop
call
stc
jge
xor
aaa
add
adc
pop
adc
xchg
call
stc
rol
push
mov
ins
les
and
mov
lods
fs
jp
mov
daa
not
pop
adc
and
or
scas
stos
das
mov
lock
sahf
repnz
pop
mov
or
mov
stc
inc
add
fadd
sar
icebp
sub
arpl
(bad)
cld
xor
mov
iret
mov
jb
and
jbe
movs
mov
cli
sar
push
ss
fstp
jp
pop
mov
int
out
jns
adc
retf
pop
ror
and
std
pop
(bad)
xchg
(bad)
div
movs
adc
out
(bad)
jl
inc
imul
loope
cmp
enter
fstp
and
imul
ds
out
or
jae
outs
ds
rcr
mov
cmps
mov
push
xor
xlat
loope
fdivr
inc
sbb
sub
ficom
inc
lahf
add
or
pop
push
pop
in
fistp
es
push
add
sub
pop
in
cld
jmp
sti
mov
sub
pop
mov
aaa
inc
int
loope
repnz
jle
cmps
scas
and
sub
(bad)
and
scas
push
pop
jmp
out
bound
and
ds
lods
cwde
xchg
(bad)
and
imul
fdiv
xor
jnp
shl
(bad)
cwde
leave
pop
sub
cmps
xor
(bad)
es
popa
pop
mov
sbb
sar
jnp
mov
xor
xchg
mov
jnp
jecxz
mov
fwait
mov
icebp
push
add
repnz
cmc
test
aas
push
mov
sbb
xchg
sbb
mov
dec
xchg
mov
icebp
dec
or
lods
push
repz
sub
(bad)
in
xchg
cld
pushf
scas
add
fsubr
je
aaa
lods
lods
xor
sub
daa
mov
cmp
retf
cdq
lds
(bad)
out
cld
les
(bad)
jecxz
test
mov
inc
scas
adc
jo
jno
xchg
daa
fimul
jno
fld
test
jne
inc
jmp
jbe
dec
adc
xor
mov
push
fldenv
sar
inc
xchg
out
jle
jmp
adc
sbb
push
fstp
enter
les
adc
sbb
loope
jl
call
fbld
retf
fs
ins
lock
loop
mov
xchg
xchg
cmp
outs
and
xchg
(bad)
sub
cmp
stos
mov
cld
mov
add
aaa
mov
xchg
shl
jmp
adc
inc
ss
fimul
cld
ficomp
pop
(bad)
scas
movs
fisttp
inc
lds
aam
les
jbe
add
int3
(bad)
out
dec
cmp
mov
loopne
fbld
jmp
push
dec
jp
push
aam
inc
ins
cmp
jmp
into
cmps
mov
repz
(bad)
repnz
xchg
or
dec
jnp
xor
jp
enter
aam
les
aam
jmp
or
mov
jecxz
push
sbb
aaa
xor
fsub
(bad)
xor
outs
pop
jne
retf
sbb
and
adc
xchg
push
in
sub
fisub
scas
cwde
repz
mov
popa
pop
xor
aad
xchg
ja
xor
sbb
push
jecxz
add
test
adc
cmp
and
mov
outs
jnp
stos
jle
cld
cmps
fwait
dec
xor
xchg
dec
mov
out
aad
fcomp
mov
int3
in
ds
push
hlt
call
jmp
sbb
push
push
sbb
push
outs
test
repnz
pop
aad
arpl
mov
mov
mov
(bad)
xor
mov
jb
stc
stos
outs
dec
popa
pop
jge
mov
push
rcl
xlat
pop
je
cmp
jmp
add
test
aas
(bad)
push
enter
sbb
leave
cmp
mov
outs
mov
ja
out
rol
cmp
enter
scas
push
adc
lahf
mul
mov
test
out
sbb
dec
mov
xchg
lock
push
das
dec
enter
(bad)
fldcw
stc
fimul
adc
lock
loopne
scas
push
jle
std
mov
shr
sti
xchg
les
inc
and
ret
mov
add
(bad)
es
pop
push
cmp
dec
adc
out
inc
cmp
in
mov
inc
or
mov
sar
push
jge
or
sti
jbe
sahf
cmc
rcr
pop
jl
push
outs
arpl
pop
lds
cmp
out
push
movs
xchg
sub
push
jmp
nop
xchg
sti
jle
cmp
xor
and
gs
xor
mov
aad
mov
int3
jb
gs
ins
repz
das
pop
mov
gs
cli
std
call
mov
stos
(bad)
outs
dec
and
xor
das
adc
mov
mov
lea
ret
pop
inc
pop
in
in
imul
or
cli
sahf
pop
add
pop
push
iret
mov
mov
out
and
in
xchg
fild
sub
aaa
jae
lock
(bad)
push
retf
push
and
dec
mov
jne
retf
sub
into
je
fnstsw
mov
clc
mov
lea
inc
int3
call
jge
pop
pusha
xchg
push
repz
test
fs
daa
loopne
inc
pop
jae
loop
jnp
jns
sub
mov
pop
sub
cld
cs
(bad)
mov
mov
push
and
adc
sub
(bad)
pop
sbb
push
imul
or
scas
dec
xchg
mov
adc
adc
cmp
mov
stos
(bad)
fstp
aas
mov
aam
aas
cmc
xchg
add
mov
into
pushf
ret
scas
fiadd
sbb
cwde
fnstenv
adc
test
test
fdiv
xchg
and
stos
or
jmp
es
addr16
dec
jmp
xchg
movs
jo
call
popf
lds
imul
je
das
cli
xchg
ins
sbb
dec
add
test
in
movs
stos
add
mov
in
jp
hlt
(bad)
pop
mov
pop
cmp
cwde
ja
push
adc
add
adc
pop
les
sub
idiv
loop
pusha
jp
xchg
shr
(bad)
sbb
and
dec
retf
adc
repnz
or
outs
movs
pop
rcr
mov
mov
dec
push
mov
mov
arpl
std
imul
cld
mov
add
mov
gs
xor
rcr
adc
dec
xchg
imul
mov
cmp
scas
imul
cmp
test
mov
outs
ret
inc
daa
jnp
mov
ins
dec
pop
add
ds
mov
into
inc
out
jmp
lds
test
in
fidivr
stos
sub
mov
adc
jb
and
mov
or
xor
retf
shl
push
mov
jecxz
retf
mov
mov
out
movs
fsubr
xchg
dec
inc
dec
xchg
ins
rcr
sub
movs
cmp
adc
mov
push
cli
or
arpl
adc
in
in
mov
mov
xchg
push
sbb
cdq
push
sbb
mov
test
sahf
sbb
mov
adc
cmp
js
jo
sbb
adc
cmps
dec
add
dec
mov
sbb
shl
(bad)
push
imul
cmp
sbb
mov
cmps
pop
and
xchg
jge
push
inc
into
rcl
ror
adc
jg
inc
test
and
lahf
ins
add
aam
enter
(bad)
ss
pop
sub
dec
jl
pop
push
imul
sbb
mov
and
and
cmp
(bad)
xchg
sbb
test
dec
sbb
jecxz
sub
add
xor
test
adc
jae
mov
xchg
sub
jb
das
push
pop
pop
call
sub
int3
pop
aad
icebp
xchg
out
fld
inc
jl
aaa
mov
ja
dec
mov
and
xchg
dec
cmp
dec
jl
mov
push
adc
arpl
jo
jmp
daa
pop
pop
push
into
xchg
dec
jb
popa
and
or
xchg
jl
cmp
popa
sub
iret
xlat
lahf
inc
das
call
pop
imul
aam
imul
pop
cmp
leave
push
ss
mov
or
mov
mov
add
xor
arpl
movs
sbb
cmp
movs
test
xchg
gs
cmp
cmp
mov
sbb
xor
mov
jo
dec
nop
inc
mov
cmp
fdiv
sbb
inc
inc
push
pop
mov
fidiv
aas
adc
into
or
fwait
les
jnp
push
lahf
push
pop
(bad)
stc
push
repnz
or
mov
jns
mov
mov
cld
call
push
jnp
inc
out
add
push
add
bound
cli
ins
jno
and
int3
mov
ins
mov
enter
push
stos
je
cli
jecxz
xchg
pop
pop
lock
je
jo
ret
arpl
pop
out
jae
jbe
ins
inc
daa
rcr
add
addr16
jno
add
fnstenv
lahf
jnp
mov
enter
lods
mov
xchg
adc
xchg
(bad)
pop
in
jnp
xor
adc
stos
or
aad
lods
sbb
mov
leave
loop
push
xchg
gs
inc
loop
imul
loopne
movs
jbe
dec
cli
xor
adc
sti
pop
pushf
(bad)
outs
movs
test
retf
dec
xor
lods
(bad)
or
cmps
sub
cmp
cmp
mov
enter
jb
sbb
dec
xchg
cmp
rcr
inc
push
pop
iret
or
jbe
push
mov
gs
lods
mov
pop
rcl
pusha
jecxz
adc
test
out
add
jl
adc
mov
mov
(bad)
push
xlat
or
fwait
sbb
jnp
mov
jae
inc
add
add
pop
ret
xlat
aad
pop
dec
ins
out
and
jne
ss
inc
mul
pop
cmc
and
inc
call
and
lock
dec
das
in
test
xor
aam
(bad)
pop
mov
or
pop
pop
imul
mov
aaa
lods
mov
pop
fsubr
clc
sbb
push
push
xchg
loopne
jae
ds
pop
jnp
push
add
add
out
and
sbb
push
out
jns
imul
icebp
fidiv
jg
in
rcl
fs
add
pop
jb
std
or
in
not
lock
push
les
and
pop
les
movs
retf
add
sub
mov
stos
cmpxchg
ret
cwde
jb
ror
mov
mov
cmc
push
leave
fwait
adc
pop
and
cwde
mov
ins
jae
idiv
call
iret
pop
xor
push
xchg
adc
pop
add
not
out
adc
jge
loopne
mov
adc
xor
fld
(bad)
aad
inc
mov
mov
add
cdq
pop
stos
xchg
xchg
cli
jmp
inc
mov
ins
inc
sub
leave
push
add
mov
dec
dec
jmp
cmp
or
rcl
jp
xchg
sbb
nop
xchg
jp
stc
cmc
popf
dec
mov
imul
inc
repz
or
dec
mov
cmp
hlt
pop
jno
jmp
shr
ret
(bad)
(bad)
push
push
sub
ins
xor
in
mov
shl
in
aas
ror
retf
(bad)
outs
add
neg
outs
js
popf
jae
add
mov
in
int3
data16
push
adc
inc
retf
add
(bad)
aad
shl
lock
dec
loope
adc
movs
ficomp
aaa
icebp
mov
fwait
or
pop
(bad)
(bad)
fnstenv
mov
mov
js
pop
pusha
pop
pop
inc
sbb
jmp
push
call
pop
enter
mov
sub
ret
test
ins
jnp
dec
out
mov
jo
push
fucom
add
arpl
ins
jne
pop
(bad)
fild
stos
scas
ret
scas
xor
and
mov
cmps
pop
sbb
inc
stos
lea
fcmovne
call
adc
(bad)
imul
pusha
es
ins
fadd
outs
cmp
or
ss
mov
pop
in
inc
xor
aad
iret
ret
into
fwait
sti
pop
xchg
push
outs
inc
nop
dec
aad
imul
mov
rcr
mov
enter
sbb
jmp
out
pop
cmp
fdiv
jne
add
inc
jmp
gs
inc
aad
icebp
xor
add
push
or
xlat
scas
push
fstp
mov
jecxz
add
or
repnz
inc
repz
sti
(bad)
not
repnz
push
pop
loopne
aaa
stc
pop
cwde
jmp
mov
loop
pop
cmps
movs
mov
ror
arpl
(bad)
push
xor
sahf
sbb
jp
ret
sub
rol
mov
cld
mov
xor
nop
add
ffreep
nop
mov
sub
lahf
loope
in
inc
sub
(bad)
in
xor
pop
test
jmp
cmc
outs
cmp
sub
retf
pop
aam
icebp
aam
sahf
xlat
xlat
xchg
lods
jae
cmp
ds
add
jg
xchg
rcr
mov
cld
(bad)
dec
inc
sbb
jbe
sbb
cld
cmc
call
mov
dec
addr16
pop
cmp
pop
sub
cld
mov
xor
add
adc
jns
xor
rcl
xchg
(bad)
repnz
cli
mov
rol
not
aad
mov
xchg
pop
test
test
test
inc
mov
mov
or
push
lock
sub
mov
xchg
fstp
icebp
ds
xor
push
sub
mov
std
xor
sub
push
fst
(bad)
xchg
pusha
inc
outs
mov
pushf
push
cmp
pop
mov
inc
jno
aad
leave
cmps
and
in
(bad)
jo
mov
rcr
push
jno
jne
sub
or
dec
lods
adc
int3
push
ja
push
cmps
inc
dec
inc
jle
int3
stos
cmps
xchg
retf
xor
cli
mov
aaa
fmul
push
jno
cli
bound
xor
sub
push
jmp
(bad)
sbb
pop
and
xchg
cmps
popf
cmps
enter
iret
les
xchg
stc
(bad)
ins
pop
mov
cmp
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
ins
hlt
jnp
sub
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
xchg
cwde
mov
daa
cmps
cmp
cmps
in
xchg
arpl
ja
jnp
fstp
fstp
mov
psubw
cmp
add
test
mov
ja
cmc
mov
outs
pusha
rcl
push
je
xor
add
stc
fld
jae
mov
add
mov
inc
aaa
sub
mov
in
div
lock
xor
add
loopne
movs
aas
sbb
dec
add
in
outs
push
out
fild
inc
movs
adc
fiadd
and
cmp
push
jmp
xor
hlt
inc
repnz
imul
adc
rcl
fdiv
shr
test
cmp
ds
bound
xchg
mov
mov
dec
out
in
jl
mov
dec
bound
scas
(bad)
adc
mov
out
fild
mov
scas
jecxz
(bad)
push
iret
test
pop
ret
scas
mov
or
jo
mov
daa
inc
daa
aad
gs
inc
mov
mov
xchg
add
jmp
sbb
or
jmp
addr16
les
and
jmp
mov
scas
leave
push
repz
out
out
cmps
fnstcw
mov
int3
rol
dec
retf
aam
mov
icebp
adc
push
jp
sub
mov
push
push
pop
je
mov
jp
sbb
and
dec
jle
mov
lock
imul
aas
xchg
xchg
jle
push
adc
ror
and
add
std
mov
jns
loop
rcl
xor
cmp
or
mov
rcr
cld
int
shl
inc
fdiv
push
push
pusha
sub
fisubr
sub
or
cmps
add
pop
inc
pusha
int
daa
inc
push
push
movs
pop
sub
mov
ret
daa
mov
test
cmps
mov
push
cmp
dec
addr16
sub
xor
repnz
pop
xor
es
xchg
and
mov
gs
fsubr
stos
std
mov
rol
imul
fs
cmps
adc
push
daa
push
cwde
dec
pop
mov
pop
test
(bad)
aad
push
int
sbb
xor
xor
gs
popa
in
or
or
mov
imul
std
shr
cmp
(bad)
adc
adc
shl
sub
retf
out
dec
dec
pop
shl
pop
retf
or
cmp
das
(bad)
and
xchg
mov
push
in
int
pop
fwait
push
mov
sub
leave
(bad)
jne
cmp
adc
repnz
iret
mov
movs
inc
pop
jge
cwde
sti
mul
sbb
fcmovbe
iret
cmp
leave
mov
and
shl
jmp
sbb
pop
inc
loopne
enter
or
cmps
loope
sahf
iret
jle
out
int
cmp
ds
arpl
test
shl
xchg
and
sub
popa
cdq
and
(bad)
add
xchg
cdq
sar
mov
jge
xor
jb
xor
js
push
out
test
mov
cmp
sub
fisub
int
or
cmp
(bad)
bound
or
xchg
rdtsc
lods
fiadd
adc
jle
in
xchg
mov
mov
sahf
mov
int
xchg
ins
ret
js
les
ins
xor
mov
xchg
test
xor
cmp
pop
push
mov
movs
dec
cmp
add
test
mov
repnz
retf
xchg
inc
les
xchg
ins
add
push
add
pop
xor
fnstenv
push
or
pop
loope
(bad)
push
les
test
xor
int
inc
rcr
inc
mov
(bad)
lock
mov
inc
push
add
push
dec
loope
jp
cmp
add
ss
test
adc
fadd
aas
data16
mov
add
ret
inc
adc
stos
scas
push
fcmove
xchg
xchg
test
xchg
inc
shl
jb
jge
leave
call
push
ins
or
out
out
scas
mov
cmp
inc
push
sbb
sub
jnp
imul
shl
scas
pop
and
push
loop
int3
cmp
xchg
ins
(bad)
out
cmps
mov
sahf
and
rcl
(bad)
ins
inc
cmp
retf
push
dec
fwait
cmp
into
mov
sub
ret
mov
adc
aaa
mov
or
js
or
lea
inc
fbstp
mov
mov
xchg
retf
addr16
sub
mov
sbb
or
hlt
test
arpl
mov
scas
es
push
jge
push
cmp
jl
adc
cmp
push
xchg
push
push
aad
(bad)
pusha
inc
idiv
lods
adc
lock
pushf
popf
sbb
cdq
or
sub
cmp
inc
shl
xchg
movs
sbb
pop
ficom
sbb
xchg
inc
arpl
add
loop
adc
or
inc
sahf
movs
fistp
mov
mov
jecxz
mov
sahf
xor
cmp
jae
adc
push
sub
fst
pusha
in
fist
xor
data16
ret
lds
movs
xchg
enter
call
jnp
outs
and
sbb
cmps
sub
jnp
cmp
gs
jg
mov
pop
fmul
dec
rcl
mov
adc
mov
test
mov
ins
mov
cmp
hlt
fwait
cli
js
out
adc
mov
pop
aas
popa
sub
mov
mov
xlat
cmp
(bad)
int3
add
sbb
push
push
jb
push
(bad)
cmps
in
jg
pop
sub
xor
pop
xor
sti
js
jbe
push
pop
cld
dec
outs
leave
pop
add
pop
mov
mov
or
js
pop
(bad)
mov
inc
adc
dec
xchg
xor
hlt
fistp
mov
push
pusha
sbb
rcl
cmps
inc
mov
jne
push
dec
push
cmp
ret
in
jle
loop
cld
bound
(bad)
sub
fucomip
(bad)
pop
pop
xchg
dec
jl
push
out
jne
adc
lahf
xchg
es
cmp
mov
dec
pop
and
fiadd
inc
or
mov
xor
cmp
jne
popa
or
imul
jge
icebp
call
xchg
cmps
jno
mov
hlt
hlt
lea
mov
xchg
and
push
pop
jmp
jmp
mov
imul
std
in
sub
popa
icebp
ss
lods
lock
jo
xchg
shl
sub
or
and
mov
sub
jns
daa
and
pop
jle
jns
ja
popa
cwde
mov
mov
pop
stos
int3
jmp
adc
test
movs
je
or
call
xchg
rcl
add
(bad)
xor
les
xchg
stos
sar
sub
fadd
xchg
and
and
hlt
adc
jmp
arpl
lahf
push
jns
repz
dec
mov
dec
retf
ficom
and
cli
test
inc
arpl
push
cwde
push
mov
and
jmp
in
jae
mov
(bad)
mov
push
add
adc
imul
sbb
and
dec
fistp
into
push
aas
jo
or
ds
jmp
(bad)
jecxz
jb
add
or
cmp
jae
cmp
aaa
or
jnp
mov
movs
dec
cmp
test
pop
push
and
adc
mov
jl
das
shl
popa
mov
mov
xchg
xlat
mov
rcl
xchg
test
test
icebp
std
stos
daa
fcom
add
movs
adc
jmp
dec
pop
mov
out
cmc
cwde
les
pop
es
fist
mov
sub
dec
cmp
mov
xchg
mov
sub
lock
in
mov
jle
adc
jmp
cld
push
(bad)
clc
xchg
push
mov
or
ss
jp
xchg
retf
push
cmc
push
es
sub
push
sub
rcl
cdq
dec
fld
jmp
pop
test
and
cmps
imul
sbb
sbb
leave
push
jmp
push
xchg
mov
pop
int3
rcr
inc
popf
push
(bad)
in
gs
nop
cmp
int
outs
es
add
mov
mov
data16
ja
shl
xor
imul
or
xchg
sub
std
jae
aam
dec
pop
hlt
mov
cmp
and
mov
pop
push
mov
leave
sub
rcr
lock
leave
ds
iret
and
dec
lods
scas
mov
sbb
pop
out
inc
ins
xlat
pop
and
sahf
or
push
add
mov
(bad)
(bad)
shr
sbb
dec
pop
mov
ret
xor
fisttp
add
test
jmp
add
js
mov
mov
inc
add
mov
iret
fisttp
sub
adc
cmp
pop
pop
sub
sub
dec
pop
arpl
adc
inc
movs
int3
or
sbb
fist
loop
cs
outs
push
out
adc
sub
imul
fdiv
mov
jmp
inc
inc
sbb
xchg
ror
enter
lea
pusha
mov
ins
call
dec
pop
push
retf
and
test
inc
pop
loop
sti
jnp
scas
lods
test
aas
xchg
mov
sbb
ficomp
(bad)
mov
or
dec
test
inc
mov
mov
inc
inc
in
sti
mov
jb
es
jno
leave
mov
add
test
je
add
ins
push
out
inc
sti
dec
or
xchg
(bad)
jne
outs
inc
rcr
mov
mov
or
mov
lods
mov
pop
aad
jge
jge
dec
test
sub
ror
fdivr
mov
(bad)
xor
stos
and
xchg
or
jge
int3
and
and
dec
(bad)
out
inc
push
test
and
xor
out
xchg
retf
jnp
daa
aas
xor
fsubr
add
jp
mov
xchg
icebp
jne
cmp
cmp
mov
xchg
cli
rcl
add
std
lods
call
arpl
mov
mov
scas
push
add
push
mov
push
inc
mov
inc
cmp
cmp
sbb
jl
ds
inc
sti
and
lods
xor
sahf
fwait
dec
dec
dec
in
sahf
popa
pop
stc
rcr
xchg
jne
lods
inc
jecxz
xchg
fmul
mov
jbe
adc
in
ja
inc
or
pop
aas
fmul
outs
jmp
or
idiv
mov
pop
in
mov
cmps
inc
jbe
mov
mov
sbb
iret
mov
mov
sbb
repnz
cdq
mov
je
loop
jmp
stc
adc
jb
mov
test
sbb
add
mov
and
clc
outs
das
push
cmp
jge
(bad)
pusha
fldcw
leave
outs
cmp
loope
mov
pop
pop
jecxz
pop
adc
fiadd
mov
mov
xchg
sub
stos
test
push
mov
int
mov
pop
test
add
scas
push
lea
mov
pop
xchg
add
jge
ins
out
mov
out
outs
dec
dec
cli
std
ret
mul
stc
test
test
fisttp
cli
pop
fldenv
sbb
sahf
les
fbstp
out
cmp
loopne
aam
(bad)
pop
jecxz
fsub
jp
add
adc
or
in
mov
dec
xchg
pop
js
mov
inc
mov
dec
add
pop
add
push
stos
inc
es
sub
lods
imul
or
add
lahf
inc
mov
jo
xor
mov
xor
adc
or
mov
jae
inc
inc
test
xchg
jecxz
lahf
addr16
ins
int
cmp
out
lock
sbb
test
add
or
(bad)
shl
inc
add
fild
out
pop
test
aas
sar
stos
dec
in
rcl
sbb
dec
loop
data16
inc
fs
adc
add
pop
(bad)
in
(bad)
cld
xor
in
mov
pop
jl
and
mov
cmp
mov
add
jb
lea
cld
jnp
daa
jmp
test
ins
cdq
je
fidivr
cmc
dec
cld
pop
or
addr16
add
jmp
mov
inc
mov
inc
leave
sbb
addr16
loope
add
ret
shl
ret
or
outs
sti
push
sub
fwait
sbb
std
loop
rcl
(bad)
ja
lea
addps
jecxz
inc
sub
mov
push
in
inc
int3
in
je
xchg
js
pop
cmp
outs
mov
inc
pop
jmp
out
sbb
arpl
mov
iret
jbe
mov
jo
lea
mov
add
stc
test
jbe
les
popf
pop
push
fld
inc
addr16
jg
lods
push
hlt
xchg
sub
xchg
ds
pop
aam
es
jbe
pop
mov
stos
xor
inc
dec
mov
xor
cmp
test
adc
fcmovnu
push
in
mov
and
sbb
fwait
pop
iret
retf
aam
ds
es
inc
mov
(bad)
mov
jmp
xchg
mov
and
jl
clc
add
(bad)
mov
sti
cwde
pop
leave
add
pop
adc
sub
mov
sbb
pop
mov
aad
int3
mov
dec
push
call
(bad)
lods
fs
sbb
ret
sbb
fdivr
fmul
jmp
mov
cmp
(bad)
repz
stos
mov
shl
jno
jae
jbe
sbb
and
(bad)
mov
push
cmp
scas
call
aad
push
cmp
in
and
sub
arpl
stos
lock
loop
jmp
lods
mov
pusha
cli
outs
dec
test
jae
std
mov
xchg
mov
add
xlat
(bad)
jmp
loopne
inc
cmps
jbe
cmp
sub
or
cmc
pop
or
aaa
inc
or
adc
mov
or
mov
shl
fs
and
or
out
repnz
dec
ret
movs
or
fbstp
test
pop
inc
add
call
fs
dec
push
mulps
add
and
fiadd
mov
out
sbb
in
retf
call
push
arpl
sbb
and
neg
or
test
dec
pop
rol
out
fcom
pop
daa
mov
mov
xchg
push
sahf
nop
aad
xchg
jns
aam
aas
cmp
pop
cmp
mov
xchg
leave
out
jae
mov
adc
int3
pusha
inc
ins
(bad)
xchg
into
xor
bound
xchg
or
mov
les
add
das
popf
add
dec
xchg
mov
test
ss
imul
jmp
push
int
sbb
push
jg
(bad)
out
xor
inc
jmp
push
or
pop
mov
and
inc
fisttp
sti
push
iret
add
in
push
or
aas
adc
jge
mov
mov
mov
cmc
out
clc
leave
lock
jb
shl
leave
xchg
rcl
outs
mov
(bad)
popa
push
ficomp
ins
fisubr
push
cmp
jb
jecxz
cmp
lock
aaa
inc
xlat
jmp
xor
or
shl
cmc
jmp
xchg
test
(bad)
loop
sbb
scas
imul
xor
mov
cs
cmp
aaa
push
jbe
or
pop
add
inc
popf
mov
or
pop
mov
push
mov
xor
push
add
iret
test
mov
xor
rol
aad
mov
mov
pop
out
jecxz
je
dec
adc
pop
cmp
push
cdq
aas
fpatan
sub
adc
dec
fs
daa
leave
aaa
xchg
imul
xchg
sub
fsub
push
outs
(bad)
and
bound
jg
mov
sbb
jmp
jp
mov
arpl
hlt
scas
test
jnp
fucomip
outs
push
xchg
jp
xor
bound
mov
add
push
out
imul
daa
jnp
cmp
rcl
pop
xchg
clc
les
push
sar
cld
repz
aas
(bad)
cld
repz
push
mov
jl
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jmp
pop
shl
cmp
(bad)
je
(bad)
in
fucomp
out
out
data16
jns
cmp
addr16
xor
ret
sti
inc
fdivrp
repz
fnstenv
xor
xchg
xchg
xchg
(bad)
xchg
jmp
fild
movs
enter
pushf
jge
addr16
push
dec
in
cs
sbb
test
in
xchg
cmp
into
sahf
nop
cli
lock
shl
xchg
cli
mov
gs
or
cs
and
ds
mov
repz
fdivr
repz
enter
cwde
in
mov
mov
mov
stc
cmp
inc
cdq
int3
ss
mov
fidiv
sbb
jae
imul
jecxz
aaa
and
inc
idiv
mov
jp
pushf
sub
mov
sub
ret
xchg
loope
xchg
popf
retf
imul
pop
fist
cmps
es
push
addr16
repz
jle
in
mov
sbb
xor
pop
inc
pop
dec
cwde
std
mov
ss
sbb
fmul
xor
jp
xchg
(bad)
mov
sub
pop
aas
outs
in
cmc
dec
and
aam
ret
xor
sbb
pop
sub
rol
sbb
xchg
sub
mov
daa
je
add
dec
jmp
leave
mov
mov
out
out
jp
stc
inc
jmp
in
stos
jae
sbb
jecxz
adc
fnop
cmp
ss
rol
push
je
(bad)
lods
mov
and
pop
retf
mov
mov
sub
sub
enter
aad
mov
mov
adc
scas
shr
shl
mov
mov
hlt
icebp
jecxz
mov
cmps
mov
popf
cdq
pop
or
js
jmp
jecxz
jnp
ret
mov
mov
ror
stc
xchg
jne
and
outs
mov
mul
mov
xchg
imul
jnp
jnp
push
pushf
lds
lock
test
loope
aaa
dec
cmc
xchg
cmps
dec
lock
out
xchg
ja
or
mov
push
mov
dec
into
mov
push
loopne
in
add
out
jnp
icebp
loop
mov
lds
fwait
movs
jg
mov
xor
push
mov
cmp
jb
or
jg
das
xchg
in
push
in
jno
dec
sub
ja
sbb
jne
dec
jmp
add
aam
mov
out
cli
mov
inc
jns
mov
js
aas
movd
mov
and
loopne
popa
and
xchg
and
sub
lods
adc
mov
popf
xor
add
shl
xchg
ret
sub
mov
jl
inc
in
fldenv
fnstenv
movs
in
or
sub
fnstcw
jbe
jle
scas
mov
xor
and
mov
push
ins
in
femms
push
and
sub
inc
and
retf
dec
cmc
jns
push
add
xor
stos
ret
pop
or
mov
mov
pop
mov
cmp
lds
adc
cwde
out
in
int3
shl
add
call
xchg
leave
loopne
repnz
lods
cwde
add
mov
std
mov
dec
pop
ins
pop
and
outs
lods
push
jp
and
sub
add
aaa
les
fdiv
outs
retf
repnz
sbb
xor
lods
sti
adc
push
jge
dec
xchg
sub
sub
xchg
dec
jge
das
xor
sub
jmp
dec
push
ss
mov
jg
or
shl
icebp
retf
outs
cmps
imul
addr16
push
sar
pop
xor
data16
pop
or
scas
std
fwait
enter
fstp
mov
xor
call
cmps
inc
sahf
imul
jl
cmp
idiv
push
out
into
mov
arpl
fs
pusha
repz
mov
loope
call
and
cmp
mov
xor
or
jmp
gs
push
addr16
pop
mov
(bad)
push
popa
imul
lock
(bad)
jns
cmp
retf
inc
jno
test
test
add
aam
lea
rcr
pop
aad
cwde
add
or
mov
sub
dec
fbstp
mov
sbb
mov
imul
xchg
fidivr
(bad)
mov
or
xlat
outs
mov
lahf
mov
int3
ret
xchg
add
mov
in
in
imul
inc
fiadd
push
mov
lods
and
fwait
cmp
fcmovbe
(bad)
pop
xchg
and
adc
popf
pop
mov
mov
repnz
int
into
test
mov
and
mov
rcr
pop
sub
sbb
repz
cdq
xchg
dec
pop
fnstcw
cwde
int3
fmul
(bad)
sbb
out
mov
mov
(bad)
out
mov
and
jle
sub
push
or
push
sub
movs
ins
jne
and
popf
out
sub
xchg
mov
out
jo
(bad)
cld
xchg
aam
mov
pop
je
sub
in
pop
push
stc
mov
pop
retf
(bad)
fwait
xchg
lsl
push
jmp
sbb
jb
imul
fs
ins
or
repz
or
shl
imul
fstp
ficomp
sub
inc
mov
xchg
imul
scas
xor
jbe
dec
adc
mov
jle
and
push
sub
pop
cmp
sub
or
(bad)
dec
(bad)
jg
popa
mov
inc
inc
push
sbb
mov
cwde
icebp
loop
xchg
sub
dec
scas
je
(bad)
popa
fs
test
push
enter
test
mov
mov
das
xor
mov
fnstenv
fs
fdivp
(bad)
mov
mov
mov
fstp
shr
sbb
cmp
xchg
xor
xor
or
fwait
sub
mov
push
jge
jae
mov
sbb
xchg
pop
mov
lods
cld
jl
add
mov
mov
gs
(bad)
out
jb
add
(bad)
push
lods
or
(bad)
(bad)
call
jns
pop
bound
sahf
cwde
addr16
outs
mov
push
fnstsw
(bad)
aad
addr16
iret
popa
sub
pushf
fidiv
sahf
push
loope
mov
xchg
fnstsw
out
push
mov
das
jno
and
and
cdq
push
mov
sti
out
movs
sbb
xchg
jg
mov
pop
jge
shr
shl
lds
shr
cmp
frstor
retf
arpl
push
repz
movs
push
adc
push
xor
mov
in
or
into
scas
and
mov
in
stos
mov
imul
jmp
xchg
jp
popa
outs
and
add
cmp
repnz
cmp
add
(bad)
mov
dec
adc
push
cmp
shl
es
inc
call
pop
iret
inc
adc
lds
xchg
fs
xor
stos
jmp
mov
xchg
mov
test
jnp
or
fcomp
xor
and
in
test
mov
xor
pop
jle
imul
nop
iret
ror
imul
ja
loopne
outs
cmps
mov
clc
add
dec
jae
and
jo
ret
mov
mov
retf
or
stos
push
or
push
jno
inc
aad
sbb
fwait
adc
sub
cmc
sbb
out
push
nop
das
popf
jle
aad
std
push
mov
mov
cmp
pop
xchg
scas
in
outs
mov
(bad)
jne
push
mov
adc
xchg
test
jno
ins
mov
mov
in
mov
imul
(bad)
rcr
jbe
mov
sub
(bad)
adc
or
mov
sbb
and
leave
push
mov
jne
mov
dec
fnsave
sub
sbb
jns
ret
adc
xor
in
sub
enter
repz
nop
dec
mov
shl
pop
repz
adc
sub
push
outs
pop
inc
int3
pushf
mov
sahf
(bad)
cs
jb
cmp
cmp
xor
xchg
push
jmp
(bad)
stos
int
push
add
leave
dec
in
lods
and
pop
mov
fld
jmp
pop
retf
dec
jne
xlat
loope
cli
retf
pop
sti
idiv
iret
ss
sbb
cmp
add
jne
mov
or
mov
loop
(bad)
fsubr
or
push
lahf
out
sub
test
repz
dec
xor
sub
push
inc
into
mov
or
clc
xchg
xor
jno
pop
jg
mov
shl
jmp
fdivrp
out
pop
xchg
inc
and
push
mov
jmp
mov
or
mov
test
jnp
imul
ror
xor
std
rcl
sahf
stc
mov
test
cmps
xchg
jno
xchg
xor
fistp
and
add
sbb
mov
(bad)
repnz
xchg
idiv
mov
js
and
pop
pop
mov
or
or
rcl
sbb
xchg
push
stc
pop
aaa
jle
in
(bad)
sub
pop
(bad)
daa
(bad)
sub
int3
cmps
xlat
mov
jle
push
xor
and
cli
push
cmc
add
ins
in
lea
jg
iret
fdiv
(bad)
and
lds
xchg
sbb
push
inc
sub
jbe
dec
jb
cdq
(bad)
ret
mov
dec
seta
add
in
mov
bound
nop
push
cmp
mov
dec
shl
mov
sbb
mov
and
aam
movs
sar
jg
std
(bad)
jge
xchg
icebp
xchg
mov
dec
mov
rcl
rol
je
sub
dec
test
mov
test
in
aad
push
and
dec
cmpxchg
add
pop
movs
and
je
cmps
sbb
sbb
pop
js
dec
ret
in
mov
push
outs
movs
inc
push
mov
and
(bad)
cmp
mov
(bad)
mov
repnz
sbb
sbb
mov
repz
xchg
pusha
aad
mov
cdq
cmps
sub
xor
pop
mov
sti
es
rcl
loopne
shl
push
outs
stos
inc
mov
push
push
push
push
cmps
(bad)
mov
pop
fiadd
outs
mov
or
adc
cmc
adc
sub
(bad)
pop
and
jb
cdq
in
jle
push
stos
mov
popf
ss
push
mov
push
jbe
inc
sub
fcmovne
push
dec
mov
push
repz
sbb
jecxz
ficomp
(bad)
sbb
bound
jl
(bad)
out
mov
sbb
je
pop
gs
cmps
jle
xlat
adc
pop
cs
in
sub
es
inc
xor
mov
fcom
push
push
fwait
cmp
cmp
in
jecxz
jne
or
ss
dec
pop
pop
shr
push
dec
and
in
fstp
or
jmp
sbb
fisub
push
(bad)
shl
pop
mov
sub
aam
fldenv
ret
movs
jbe
(bad)
push
inc
aaa
dec
fdivr
icebp
addr16
movs
cmp
jecxz
in
xor
jp
sbb
jl
jns
adc
pop
std
rcl
mov
dec
je
(bad)
icebp
test
add
loop
push
pushf
xchg
icebp
out
sub
and
dec
cmps
je
mov
gs
jle
inc
daa
add
loopne
sub
addr16
dec
and
mov
and
cli
xchg
dec
mov
mov
xor
cmps
rcl
outs
gs
ss
pop
mov
jbe
loopne
mov
mov
adc
jg
jge
movs
inc
dec
xor
cmp
lea
out
in
in
cli
inc
xchg
push
push
xchg
xor
fisttp
loope
or
out
push
mov
das
adc
fisubr
xchg
mov
ins
jmp
adc
jae
mov
xchg
(bad)
fucomp
add
fidivr
xor
repz
inc
pop
aas
loop
popa
jl
pop
std
fs
pop
and
dec
nop
xchg
imul
test
fcomp
mov
cmc
retf
bound
lock
jne
in
lods
loop
adc
inc
jmp
adc
inc
cmp
and
pop
lahf
aas
leave
xchg
push
ret
fsubp
jle
fistp
cmps
push
enter
cdq
xchg
int3
sti
sbb
movq
add
call
cmp
repz
inc
pop
fidivr
sub
sbb
arpl
ret
push
mov
mov
inc
stos
and
and
lock
pop
mov
icebp
dec
scas
(bad)
fiadd
mov
lahf
push
neg
xchg
shl
mov
xchg
adc
(bad)
popa
idiv
shl
jge
and
or
dec
test
inc
test
loopne
neg
cmp
sbb
cmp
and
leave
lea
retf
xor
cld
test
sub
push
or
sar
xchg
in
or
sbb
pop
mov
mov
ret
lds
push
mov
test
jl
sbb
(bad)
mov
ds
mov
ss
mov
push
add
in
mov
cdq
fucom
pop
xchg
cmp
push
jg
xor
lods
ret
add
jl
out
and
cmps
(bad)
scas
push
pop
push
cld
into
cli
test
push
nop
or
sub
jns
and
mov
vpand
aam
push
push
cmp
xchg
adc
xchg
data16
les
mov
cmp
hlt
repz
pop
pop
xor
cmps
fild
mov
sub
xchg
fs
fs
clc
jmp
enter
lahf
je
mov
jle
adc
inc
(bad)
sub
xchg
xchg
xchg
fbld
sti
movs
adc
std
aam
into
mov
stc
out
leave
push
and
stc
add
push
cmp
xchg
xor
and
in
inc
jbe
jle
or
js
sti
aaa
jg
repnz
shl
xchg
cmps
and
jb
sahf
imul
pusha
cmp
movs
jmp
jecxz
xchg
fstp
push
lods
ss
jne
adc
shl
pop
data16
daa
adc
dec
(bad)
leave
ds
cdq
mov
iret
out
add
jne
xchg
in
or
fidivr
mov
add
mov
stos
cmp
jl
es
ror
std
lea
jne
push
pop
cmp
xchg
and
xchg
addr16
rcl
rol
mov
and
outs
fwait
add
mov
dec
shr
loope
cmp
mov
out
xchg
push
sar
leave
jae
pusha
add
adc
inc
mov
scas
(bad)
cmp
int3
adc
pop
ror
movs
and
xchg
int3
xor
fsub
out
mov
sbb
loope
(bad)
dec
fild
aas
out
dec
jge
(bad)
mov
stc
or
movs
pop
pop
inc
ja
(bad)
xchg
adc
cs
in
ret
dec
sti
mov
ds
mov
daa
stos
pop
sbb
cmc
movs
int
aas
cwde
cld
out
popf
push
loopne
out
sbb
cmp
pop
dec
jle
fsubr
bound
mov
jp
sbb
inc
adc
or
imul
neg
enter
bound
bound
arpl
cmp
mov
inc
mov
xlat
pop
call
or
push
ror
xchg
jae
xor
or
xor
fnstcw
mov
hlt
in
adc
and
dec
or
movs
xchg
inc
xchg
xchg
cmp
jbe
arpl
(bad)
and
cmp
mov
pusha
inc
xchg
xchg
dec
mov
pop
stc
mov
mov
mov
mov
dec
or
and
bound
sub
jo
sub
xchg
loopne
adc
jae
repz
test
mov
jbe
xchg
into
idiv
xor
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
pop
fild
repnz
mov
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
addr16
cmps
imul
fwait
ret
xor
cmps
imul
out
out
sahf
sahf
fisub
sbb
cmps
mov
and
sahf
pop
add
mov
ret
dec
retf
sub
repz
mov
ins
fistp
fwait
inc
imul
(bad)
retf
mov
add
push
mov
rcr
pop
xor
mov
mov
or
push
test
mov
sub
fst
cmp
test
push
repnz
xchg
cmps
xor
jl
mov
cld
int
dec
call
mov
mov
pop
xor
js
jnp
mov
or
jecxz
loopne
test
test
loop
xchg
aas
mov
fcomp
popa
leave
retf
shl
out
mov
mov
xor
mov
bound
push
fsub
jns
outs
dec
mov
scas
jle
in
test
jecxz
int3
sti
in
icebp
inc
cmps
xor
arpl
loopne
repnz
xchg
test
mov
pop
push
xor
ins
xchg
mov
cdq
ins
mov
xchg
imul
and
adc
int3
push
dec
div
idiv
inc
sub
mov
fld
jmp
push
fdiv
test
scas
popa
sbb
cmps
xchg
adc
inc
inc
out
sub
xor
std
call
into
mov
add
sub
mov
shl
add
mov
sahf
das
xchg
mov
dec
mov
push
xor
jb
pop
lock
repnz
jle
and
popa
(bad)
mov
cmp
rcr
mov
daa
cmp
jl
div
push
xor
and
mov
xchg
les
cmc
pop
ins
inc
jle
repnz
pop
xchg
or
cld
xchg
jmp
mov
jl
cmp
sub
mov
inc
sub
scas
daa
aas
dec
ins
fsubr
das
inc
or
and
icebp
adc
faddp
stos
add
mov
add
cmc
pop
jle
fadd
push
sbb
out
and
dec
ja
stc
sbb
dec
pushf
jg
mov
mov
mov
mov
and
and
jmp
push
lods
les
call
sbb
push
inc
mov
cld
mov
sbb
mov
cmps
inc
in
test
xchg
cmp
rol
in
sub
test
daa
fnsave
pop
xchg
cmp
cmps
icebp
loop
ficomp
cmp
mov
mov
and
xchg
sub
fnstsw
mov
inc
push
lahf
cmc
ds
and
xor
fwait
cdq
and
pop
inc
mov
mov
lea
push
mov
push
mov
dec
leave
jl
pushf
movs
jmp
ret
push
scas
sub
or
push
popa
cmps
mov
dec
shl
popw
shl
cmp
push
xor
jmp
enter
scas
inc
push
lahf
fldenv
xchg
push
sub
sub
adc
adc
cmp
jns
fcmovne
jno
fwait
movs
cmp
popf
and
lea
ins
sbb
lahf
cdq
adc
repnz
mov
xor
jmp
retf
call
aaa
fdiv
pop
and
out
(bad)
out
xchg
retf
sbb
(bad)
push
aas
mov
loop
js
pop
mov
push
shl
bound
mov
xor
test
sub
sahf
jmp
push
and
push
mov
in
mov
mov
xor
mov
scas
pop
mov
push
sub
pop
xor
scas
pop
cs
cdq
and
sub
retf
fcmovnu
cmps
dec
sub
ins
mov
fmul
lea
push
or
fmul
or
bound
mov
mov
mov
(bad)
jmp
xchg
arpl
xor
ficomp
(bad)
enter
mov
fnstcw
mov
lods
mov
xor
sti
xchg
ja
xor
or
xlat
cdq
sar
dec
mov
xchg
or
fst
dec
ss
cmp
lods
fstp
sbb
sbb
iretw
mul
cdq
mov
retf
mov
and
xlat
cmp
sbb
jle
cld
cmp
jg
dec
hlt
jecxz
mov
mov
es
sub
mov
jne
pop
mov
dec
repnz
jo
add
out
int3
ja
not
fwait
xchg
jge
push
jl
mov
cmc
mov
sti
imul
mov
sub
inc
rcl
int
jmp
imul
stos
in
ins
mov
mov
fistp
pusha
(bad)
dec
mov
fst
test
xor
fnsave
hlt
jmp
and
sub
sbb
fadd
jle
in
push
cmp
xor
dec
lods
call
fwait
mov
les
jle
cwde
mov
bound
push
ret
sbb
out
and
fidiv
clc
xor
mov
lds
jecxz
xchg
stc
(bad)
sbb
mov
push
shl
cdq
mov
test
add
dec
adc
sahf
(bad)
addr16
gs
out
lock
jmp
stos
sbb
daa
sub
cld
jp
jbe
dec
loope
data16
mov
(bad)
bound
mov
test
in
int3
das
rol
lea
int3
or
imul
jns
fwait
mov
mov
jle
int
(bad)
xlat
ja
cmp
jmp
(bad)
in
add
addr16
xor
add
add
cld
jbe
mov
cmp
push
cmp
fdivr
jb
jmp
test
leave
mov
pop
mov
dec
dec
adc
pop
and
stos
add
jle
push
fld
ret
mov
cwde
mov
pop
add
sbb
test
add
ins
xchg
lock
mov
int
cmp
test
add
cdq
pop
dec
aas
sub
iret
push
inc
adc
xchg
(bad)
iret
mov
out
add
lock
iret
inc
mov
mov
mov
ins
jb
ins
stos
outs
or
mov
ret
leave
xchg
xchg
int3
jae
pop
sbb
pop
xchg
xchg
sub
and
imul
mov
fstp
push
push
dec
fs
or
rol
in
pop
and
xchg
add
in
out
fcomp
into
pop
pop
ret
jae
mov
mov
mov
mov
fisttp
dec
or
(bad)
xor
retf
mov
cmp
loope
fdiv
lock
mov
int3
sub
cld
retf
mov
bound
pop
push
imul
cmp
arpl
mov
scas
in
pop
repnz
(bad)
(bad)
add
or
mov
(bad)
mov
dec
xor
inc
jle
mov
jns
das
adc
(bad)
lods
into
add
ds
pop
adc
int
popf
movs
dec
cmps
imul
(bad)
pop
dec
ins
arpl
dec
daa
leave
in
inc
lea
fld
xor
xor
xor
jge
bound
shr
cmp
in
dec
push
enter
out
push
mov
loope
or
jb
out
imul
enter
mov
push
xor
fbld
enter
je
bound
inc
gs
sub
mov
frstor
push
add
ret
pop
fsub
cmp
add
sub
outs
clc
sbb
ficomp
push
adc
xchg
and
xor
dec
(bad)
adc
frstor
jae
data16
sbb
jno
hlt
inc
mov
cmps
aad
jne
ret
fwait
push
loopne
arpl
repz
fdivr
push
(bad)
shl
mov
or
cs
xchg
gs
push
iret
push
std
out
cli
xor
cli
js
add
fcmovne
mov
mov
jmp
test
or
jbe
ss
xchg
mov
mov
cmp
push
or
xchg
xor
push
data16
(bad)
xchg
mov
std
xchg
xchg
(bad)
popa
loop
mov
dec
lods
ins
fwait
shr
cmp
pop
(bad)
jg
sbb
pop
lods
ror
pop
(bad)
sti
loope
mov
inc
add
pop
(bad)
rcl
test
and
jle
dec
jo
pop
jmp
inc
fidiv
jbe
push
adc
mov
or
mov
push
std
popf
js
jb
scas
sti
mov
(bad)
fdiv
cmp
xor
pop
cmp
mov
and
sub
jg
icebp
in
or
retf
mov
jns
adc
xor
repnz
mov
test
mov
mov
scas
das
addr16
mov
push
xor
mov
jmp
frstor
cdq
iret
xor
les
pop
int3
jmp
push
mul
lock
mov
sbb
mov
repnz
inc
adc
pusha
gs
jnp
sub
daa
and
and
ja
add
ins
hlt
add
(bad)
outs
(bad)
xchg
cmp
test
rol
sti
dec
fld
adc
imul
mov
loopne
scas
std
std
lds
inc
cmp
xchg
and
div
adc
clc
cld
jbe
jmp
test
scas
call
mov
pop
and
es
sti
lss
jg
stos
(bad)
aad
adc
leave
and
xor
mov
pop
inc
rcl
jbe
adc
mov
cwde
loopne
lea
jle
push
arpl
mov
ret
mov
call
outs
ds
test
popf
js
or
and
push
loopne
call
les
sbb
mov
leave
movs
int3
popa
jns
cmp
push
xor
jp
or
jns
cdq
xchg
cmp
mov
cmc
xchg
mov
cmps
and
test
jecxz
aad
repnz
sti
sub
sub
retf
fild
jbe
in
mov
xchg
pusha
pop
jae
leave
jo
shl
fsub
in
inc
daa
loop
push
stc
loope
(bad)
iret
enter
pop
mov
push
icebp
cmp
cmps
cmp
xchg
(bad)
mov
imul
mov
adc
int
addr16
jns
sub
sti
ss
stc
xchg
lods
ja
push
xchg
aad
add
and
push
jae
sub
test
xchg
loope
mov
je
dec
out
retf
xlat
mov
stos
lods
mov
mov
gs
inc
mov
repnz
lods
dec
xchg
aas
test
fimul
cmp
dec
std
mov
outs
pop
sti
sub
data16
popa
retf
arpl
js
cmp
xchg
ret
xchg
pop
mov
int3
repnz
push
out
dec
in
fistp
sub
sub
fcmovbe
sub
xchg
mov
iret
ret
sti
ror
jecxz
fadd
(bad)
imul
pusha
sub
or
pop
pop
and
je
push
add
or
adc
fbstp
xchg
je
sub
push
mov
dec
call
xor
xchg
in
imul
push
xchg
icebp
int3
mov
fwait
sbb
cmc
stos
je
push
sub
repnz
fs
dec
and
and
popf
stc
je
popa
mov
outs
movs
iret
stos
xchg
push
test
push
and
into
pop
dec
nop
call
icebp
push
out
fsubr
mov
shl
pop
lods
stos
mov
popf
mov
push
stc
sub
loopne
icebp
(bad)
retf
(bad)
xchg
and
out
cmp
pop
xor
aaa
jmp
mov
pop
sti
cwde
mov
sub
les
xor
lahf
inc
dec
lods
inc
adc
push
jne
js
std
mov
in
jmp
dec
popa
sub
inc
ds
push
fbld
mov
cmp
jo
out
movs
mov
int3
add
pop
jno
dec
(bad)
imul
xlat
sar
sahf
pop
cmp
cmps
out
(bad)
cmps
inc
loopne
daa
add
fs
(bad)
out
cwde
mov
xor
push
inc
aas
adc
lea
xchg
or
cs
stos
out
test
inc
mov
sbb
out
fsubr
adc
inc
or
mov
mov
sub
sbb
jmp
nop
or
jmp
xchg
sahf
(bad)
scas
out
imul
addr16
das
add
call
pop
ficom
rcl
test
sti
daa
fiadd
jmp
mov
stos
dec
pop
mov
cmp
mov
imul
(bad)
int3
jne
cmp
pop
dec
mov
sbb
inc
fstp
mov
jbe
and
jle
push
xor
mov
dec
outs
mov
push
daa
adc
popa
in
inc
fwait
add
mov
mov
push
data16
ds
jno
mov
xchg
jmp
sub
pop
icebp
dec
pop
jmp
cmp
dec
sub
dec
mov
cmps
mov
dec
bndstx
lea
mov
cmp
push
ret
mov
inc
out
fwait
sub
dec
call
daa
inc
or
sbb
dec
jle
inc
neg
sbb
mov
push
js
out
dec
ss
test
in
loopne
shr
mov
enter
or
popa
inc
sbb
adc
cwde
mov
out
mov
sub
cmp
mov
fmul
call
pop
jmp
xchg
loop
mov
and
and
add
call
adc
fwait
cmpps
push
jecxz
mov
fimul
push
pop
sbb
pop
dec
mov
push
mov
dec
sbb
jb
jl
arpl
sub
cmps
mov
adc
xor
add
out
mov
repz
add
xor
test
or
out
and
cmp
movs
aam
jge
xor
xor
jnp
and
imul
div
jnp
lods
lods
jbe
pop
push
xor
shr
mov
aaa
int3
cmps
(bad)
aad
(bad)
inc
xor
es
xor
popa
xor
cld
icebp
and
lock
mov
lods
loop
retf
pop
(bad)
arpl
dec
je
adc
jns
sbb
xor
or
jle
jae
adc
enter
popf
(bad)
stos
xchg
inc
jne
and
retf
add
sbb
sbb
dec
lds
pushf
pusha
out
and
push
or
cmp
and
mov
push
add
sub
xchg
mov
stos
cmp
in
out
clc
vpmulhw
imul
adc
xor
sub
lods
dec
js
jp
jnp
sub
(bad)
repz
std
sti
and
xor
pushf
scas
or
jmp
dec
mov
or
test
or
push
and
push
in
pop
outs
dec
js
or
add
(bad)
popa
ret
jmp
(bad)
aaa
xlat
add
das
repnz
inc
push
stos
mov
retf
rcr
aad
lods
jecxz
cmps
adc
mov
outs
sbb
fdiv
ror
adc
xchg
call
or
xchg
data16
inc
nop
je
cmp
pusha
mul
jp
push
in
jae
push
std
and
ficomp
shl
sahf
xor
shr
jge
dec
jle
bound
xchg
aaa
cwde
mov
push
jae
mov
mov
cdq
pop
popa
dec
xor
mov
sub
lods
dec
fnsave
cs
push
daa
jg
or
pop
xchg
cwde
(bad)
pop
loop
jno
mov
rcl
mov
int
inc
xor
mov
call
inc
test
inc
mov
aam
ror
jae
and
retf
sbb
jecxz
xchg
inc
int3
sbb
mov
in
jnp
or
inc
nop
retf
adc
adc
scas
loope
dec
push
sti
jo
and
hlt
scas
pop
cmp
jno
(bad)
cmps
iret
cdq
mov
jnp
sar
shl
push
mov
lds
mov
test
cmp
aaa
aad
mov
(bad)
xchg
jge
sbb
xlat
mov
jnp
mov
pop
inc
mov
jle
or
mov
ja
out
cmp
mov
dec
jb
dec
cmp
pop
es
pop
lahf
aaa
lods
lds
dec
pop
movs
mov
or
(bad)
fnstcw
hlt
mov
pushf
clc
std
adc
outs
popf
fisttp
stc
out
jg
stc
out
jg
scas
add
inc
mov
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
pushf
sar
cmps
cmp
cmp
jge
cmps
fucomi
cmp
fidiv
xor
jne
in
ja
ins
push
in
jle
ja
add
adc
or
test
or
mov
das
mov
cmp
mov
fiadd
cmp
div
push
xchg
sub
pop
retf
cld
fwait
loopne
pusha
pop
rol
mov
sbb
outs
mov
scas
int3
sub
repnz
sbb
ins
sti
add
(bad)
(bad)
cmc
imul
loop
dec
test
sar
lds
dec
es
js
dec
das
cmps
xor
inc
pop
pop
sbb
into
iret
out
jle
aas
inc
mov
arpl
imul
xchg
dec
das
sub
out
vpmulhw
xor
push
xor
stos
popf
xchg
stos
call
xchg
sbb
retf
out
out
es
out
clc
lods
fld
xchg
inc
pop
dec
adc
imul
jbe
pop
add
stos
xor
dec
cmp
test
pop
push
lods
clc
in
pop
fbld
mov
int3
jno
dec
mov
jp
adc
movs
add
retf
sub
dec
add
cmp
and
and
test
cmp
call
call
aaa
mul
loop
adc
pop
mov
mov
shl
ins
mov
pop
mov
iret
out
xor
jnp
dec
(bad)
cmp
bound
jge
neg
sahf
ja
hlt
fstp
ret
dec
dec
xor
js
inc
xor
pusha
das
(bad)
sar
lods
pop
inc
sbb
jle
add
pop
sub
(bad)
in
ror
push
jmp
mov
pop
push
xchg
lea
rcr
ds
faddp
xor
mov
pop
into
leave
rdpmc
inc
imul
fwait
pusha
loopne
shl
xlat
icebp
sub
(bad)
cli
ret
adc
imul
xor
in
push
push
loop
xchg
aas
inc
mov
xor
in
retf
rcr
inc
movs
aad
adc
pop
das
and
mov
push
push
sbb
shl
(bad)
std
inc
xchg
pop
xor
pop
pop
push
push
hlt
daa
std
mov
call
call
adc
and
jae
lahf
sub
jns
icebp
sub
daa
clc
add
dec
xor
lds
and
xor
out
retf
mov
dec
xor
rcr
mov
push
out
jecxz
sbb
fs
jne
sbb
outs
adc
mov
pushf
sub
lock
sbb
in
in
clc
jns
dec
outs
inc
arpl
push
mov
pop
mov
mov
adc
nop
push
sbb
cld
call
js
and
js
sbb
xor
inc
jb
xor
pop
xchg
xchg
xchg
xor
outs
push
hlt
sbb
push
mov
push
jle
ins
mov
mov
mov
movs
or
stos
fiadd
jg
lock
fisubr
mov
or
shl
add
dec
pop
leave
outs
rcl
loopne
xchg
stos
pushf
data16
sti
xchg
push
cmp
cmc
cmc
sahf
add
xchg
mov
sub
mov
xor
in
cmps
pop
aas
inc
movs
clc
xchg
mov
popf
jns
or
pop
aas
sbb
stc
and
cmp
test
pop
rol
sbb
retf
cmp
mov
repnz
(bad)
xor
cs
add
add
push
loope
lods
mov
rcr
imul
cmp
dec
fmul
jmp
add
mov
inc
inc
dec
pop
pop
imul
(bad)
xchg
mov
mov
jo
mov
mov
pop
movs
push
push
call
jmp
loope
pop
jno
das
cli
imul
sbb
sub
into
cmp
and
adc
in
not
(bad)
jmp
sbb
fdivr
shl
(bad)
int3
loop
pop
call
fadd
addr16
push
adc
or
iret
push
ins
mov
stos
pop
repnz
cmps
mov
stos
dec
xchg
dec
cwde
or
cmp
xor
mov
jno
enter
mov
cmp
out
push
in
cmps
(bad)
std
or
pop
test
add
les
outs
push
inc
scas
pop
mov
cmp
jp
aas
outs
push
pop
xchg
stos
popa
test
mov
int
mov
scas
add
and
stos
aam
adc
xchg
dec
mov
mov
adc
ja
adc
loop
and
sub
mov
jmp
cli
and
mov
mov
cmp
sbb
imul
lods
lea
cdq
pop
pop
inc
stc
adc
loop
jmp
adc
cmc
jecxz
mov
lods
fsubr
jbe
(bad)
int3
and
jmp
addr16
xlat
mov
cmc
test
dec
mov
imul
ins
lds
jg
adc
bound
aas
push
imul
jg
addr16
outs
fwait
into
and
sub
inc
mov
(bad)
loopne
mov
sub
or
add
inc
(bad)
aam
js
adc
(bad)
loop
ja
bound
loop
jle
ret
fsub
cwde
mov
jle
xchg
sbb
push
data16
mov
dec
cdq
ret
aaa
cmc
test
inc
call
jmp
jb
push
ret
lahf
cmps
or
lods
adc
and
arpl
and
shr
xchg
and
imul
data16
push
pushf
mov
loop
cmps
dec
rcr
cmps
ror
push
shr
ins
cmp
aas
pop
outs
jno
lods
mov
mov
icebp
fbstp
and
sti
dec
push
cmps
dec
xchg
dec
cdq
dec
pop
(bad)
mov
ret
fwait
and
int3
push
loop
scas
pop
hlt
(bad)
dec
or
xlat
aam
les
mov
xchg
shufps
or
mov
outs
mov
imul
cdq
scas
imul
jne
mov
sub
sub
mov
dec
mov
xchg
fadd
xchg
or
iret
out
jge
(bad)
aaa
and
lahf
(bad)
jle
sbb
push
pop
cld
das
xor
mov
ss
ins
retf
fistp
mov
add
push
(bad)
mov
cli
xor
sub
stos
bound
cmps
xchg
mov
adc
mov
and
cld
fisttp
adc
out
js
ins
mov
mov
ret
xchg
cld
jl
js
mov
dec
data16
popa
out
daa
ret
mov
adc
stos
mov
dec
mov
xchg
cdq
sahf
retf
dec
xchg
fidivr
inc
inc
mov
repnz
pop
push
mov
pop
fdiv
mov
stos
pusha
fwait
mov
hlt
cmp
jge
push
adc
imul
sbb
add
or
mov
lahf
mov
mov
je
movs
pop
jg
in
jae
jno
mov
mov
cdq
in
cdq
cmp
sbb
xor
sub
jecxz
movs
pop
pop
ficomp
push
push
mov
les
fmul
sbb
xlat
pop
inc
add
jle
(bad)
mov
int
jl
call
mov
stc
pop
dec
pop
lahf
inc
pop
push
pop
jne
jmp
adc
jmp
fdiv
xchg
int
scas
xor
fs
mov
(bad)
jmp
add
test
mov
pop
mov
popa
or
loopne
push
add
mov
aad
lea
loopne
cli
jo
dec
xchg
loop
scas
std
aaa
fnop
adc
push
xchg
sub
mov
and
inc
jne
push
mov
sbb
push
mov
test
dec
neg
or
and
push
call
aaa
xor
sub
dec
sub
xchg
fwait
xchg
cmps
(bad)
xor
cmp
(bad)
adc
xchg
outs
int
jmp
call
and
dec
add
jge
cmp
xor
dec
add
lds
cdq
ins
scas
and
fs
fld
and
rcr
push
(bad)
leave
daa
xlat
rcl
ins
ror
clc
aad
mov
retf
cmp
lds
pop
inc
nop
sbb
jae
popa
push
fidiv
movs
mov
cmp
mov
mov
jge
push
sub
call
or
int
imul
in
daa
xchg
and
push
loopne
inc
or
pusha
cmp
outs
out
sbb
xchg
out
data16
or
xchg
fcos
inc
ds
(bad)
mov
mov
in
sahf
rcl
adc
and
fidiv
mov
xor
in
aas
outs
call
movs
mov
arpl
fwait
and
dec
and
iret
outs
pop
fadd
jmp
or
cmp
(bad)
aas
mov
pop
cmove
inc
sub
jb
xchg
xchg
dec
adc
and
or
and
jmp
outs
push
or
dec
repz
int
push
jle
cmps
adc
adc
in
ja
ret
mov
mov
jno
push
inc
cmc
pop
(bad)
fnstsw
adc
fdivr
dec
cmps
xor
sub
or
arpl
or
fwait
or
push
dec
out
sbb
call
xor
leave
data16
xor
fst
xchg
retf
popf
mov
push
sub
in
retf
xor
jb
add
adc
adc
lea
inc
mov
and
arpl
add
in
adc
sti
xlat
loop
scas
test
jg
inc
faddp
fucom
xchg
fild
ficomp
call
dec
push
ret
inc
movs
or
jl
clc
in
adc
mov
xor
lea
pop
adc
pop
dec
adc
test
xor
aas
jp
sbb
xor
push
cmp
ror
cmp
lds
mov
or
ins
stos
repnz
neg
dec
jo
jae
sbb
dec
fidivr
fimul
xchg
retf
test
dec
xchg
ficom
push
xchg
mov
leave
xchg
fsubr
jo
jl
pop
in
xor
das
lds
and
ins
xchg
pop
(bad)
in
or
jmp
jl
and
sub
sub
or
ror
call
xor
mov
mov
or
xchg
mov
fstp
shl
shl
jecxz
cwde
sbb
neg
enter
jl
inc
fistp
and
ret
add
dec
mov
xor
pop
adc
mov
jne
or
mov
xchg
pop
xchg
call
or
gs
jp
mov
adc
and
mov
xor
popa
outs
lock
retf
push
xor
jbe
push
out
(bad)
jns
in
fcmovnbe
sbb
data16
jnp
(bad)
mov
test
inc
add
add
out
xchg
in
sbb
mov
xor
pop
lods
mov
ficom
or
cmps
into
ror
jp
stos
popf
outs
mov
aas
test
ja
or
dec
inc
or
repz
hlt
and
call
cld
icebp
cli
fwait
cld
and
fs
pop
xor
adc
fisub
clc
xchg
fwait
int3
test
push
mov
and
cli
daa
out
and
cmp
add
sub
cmps
jg
(bad)
pop
jne
add
adc
jge
(bad)
not
pop
sub
pop
iret
or
scas
mov
xchg
test
push
fbld
push
and
(bad)
out
dec
aas
adc
(bad)
or
mov
pop
call
cmp
scas
fcom
leave
lea
mov
fist
push
jnp
in
push
call
add
adc
outs
sahf
lahf
lods
arpl
test
out
jle
out
xor
ret
jecxz
or
mov
enter
stos
mov
inc
scas
push
mov
push
mov
cmps
pushf
xchg
aas
outs
push
jge
push
fwait
dec
sbb
int3
adc
fisttp
lds
mov
xor
sahf
push
push
daa
xchg
push
loopne
add
cmp
cli
cli
icebp
push
rol
xor
xor
jb
les
aas
in
adc
inc
jb
popa
mov
scas
clc
sbb
cmps
mov
das
add
and
int3
aad
call
data16
pop
adc
cmc
mov
xor
loopne
or
inc
mov
retf
addr16
mul
popf
cli
sbb
js
dec
cld
xor
pop
(bad)
fcomp
retf
sahf
sbb
clc
rcl
lea
loope
out
sbb
ins
enter
int
push
push
jmp
into
idiv
call
imul
int3
or
jo
jle
mov
ins
stos
xor
xor
out
push
iret
inc
adc
mov
movs
call
out
cmp
or
iret
sahf
pop
add
pop
jmp
loop
cdq
mov
xor
fidivr
call
fs
mov
icebp
push
test
shl
jnp
or
outs
sbb
adc
popa
out
pusha
loopne
cmps
(bad)
call
adc
ret
push
fcmovnu
lahf
jno
push
push
jmp
cmp
push
xchg
pop
push
ficomp
mov
or
fwait
or
addr16
pusha
iret
fisub
retf
loopne
into
xor
jmp
in
mov
sub
inc
xor
xchg
or
repz
shr
fmul
mov
enter
or
ja
shl
rol
pop
cmp
pop
fstp
add
inc
nop
or
sbb
scas
(bad)
stc
mov
mov
xchg
cmp
cmp
test
in
pushf
popf
stos
jl
dec
fidivr
mov
int
sbb
int
mov
or
outs
lods
add
push
xchg
out
mul
(bad)
dec
jns
pop
push
pop
xor
ins
add
dec
sbb
scas
inc
popa
hlt
retf
int3
lds
cmp
mov
movs
cmp
clc
dec
das
dec
sbb
adc
mov
xchg
int3
fiadd
cwde
hlt
fimul
fmul
ret
mov
(bad)
leave
xor
pop
adc
lds
sti
or
shr
das
imul
fsubr
push
(bad)
fwait
daa
ins
cmp
loop
dec
aad
or
mov
mov
into
cmps
or
aad
push
cmp
sub
or
retf
lock
and
push
dec
and
daa
in
and
(bad)
aaa
sti
cmps
(bad)
imul
sbb
fucom
es
scas
dec
lea
div
mov
mov
int3
inc
jle
adc
cmp
mov
inc
retf
xchg
add
xchg
loopne
cmp
sbb
push
xchg
stos
rol
xchg
inc
or
mov
arpl
inc
int
jbe
movs
cmp
movs
imul
push
inc
cdq
add
inc
mul
xchg
psrlq
arpl
and
jmp
mov
xchg
outs
add
push
cmp
mov
outs
call
mov
mov
jle
xor
lahf
pop
call
test
imul
fistp
out
nop
das
pop
icebp
mov
(bad)
test
cmp
mov
in
nop
adc
pop
(bad)
cmp
mov
loopne
jnp
mov
call
fcmove
and
dec
lock
sub
cmps
pop
jb
fidiv
popf
jp
mov
cs
shl
and
repnz
pop
fisubr
mov
mov
pop
inc
jg
sub
dec
into
jp
adc
dec
retf
and
pusha
inc
mov
xchg
iret
stc
stos
inc
jecxz
lahf
sub
(bad)
add
fisttp
cwde
rcl
sbb
mov
arpl
pop
xchg
cmp
jp
aam
mov
out
cmc
ror
xchg
and
and
jno
sbb
les
popa
pushf
cmp
xor
sub
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
mul
loopne
sahf
sub
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
data16
xor
cmps
(bad)
fwait
out
rcr
mov
cmps
fst
xor
les
dec
out
in
lahf
sbb
jg
(bad)
mov
stos
clc
add
jmp
test
int
xchg
inc
adc
cmp
inc
sbb
cwde
jmp
push
fs
mov
xchg
mov
(bad)
lock
add
shl
ss
clc
pop
mov
or
bound
pop
movs
loopne
loopne
dec
cmps
cmp
popf
ins
daa
in
mov
and
pop
js
shl
bound
shl
dec
mov
xor
sub
jg
and
push
(bad)
cmp
cmp
jge
inc
cmp
and
inc
inc
xor
popa
mov
gs
jmp
xor
mov
lods
xchg
in
jle
cmp
push
adc
outs
bound
nop
xchg
fs
and
out
push
push
inc
sbb
test
mov
cwde
xchg
sahf
imul
inc
add
ins
push
jmp
xor
scas
jmp
daa
aas
pop
movs
sahf
ins
inc
je
jne
movs
and
scas
push
fs
jmp
fwait
xchg
jge
test
cli
out
sbb
ss
pop
cmp
adc
push
in
cmp
jmp
xor
test
pop
mov
adc
inc
jae
aas
fnstsw
popf
repnz
pop
mov
popa
jmp
test
or
xchg
int
xor
jnp
ficom
pop
inc
jbe
pop
les
jnp
aaa
or
mov
mov
pop
out
out
daa
mov
xlat
xor
pop
imul
adc
or
xor
fstp
loopne
dec
jg
or
adc
mov
jmp
int3
pop
push
cmc
ins
lahf
(bad)
mov
clc
inc
dec
jbe
shr
call
test
ds
scas
call
mov
or
sbb
xor
(bad)
scas
push
xchg
dec
mov
(bad)
rcl
mov
inc
mov
repz
(bad)
mov
clc
cwde
hlt
movs
in
pop
lea
clc
es
pop
cmc
inc
mov
push
push
iret
das
sub
dec
pop
loope
mov
cmp
inc
mov
(bad)
dec
outs
mov
xchg
jecxz
gs
enter
mov
cdq
adc
mov
std
or
in
or
add
rcl
add
das
or
dec
fnstenv
mov
inc
out
call
mov
sar
fcmovb
je
lods
push
jg
mov
mov
scas
stos
mov
pop
outs
in
scas
lahf
jcxz
pop
cmp
adc
adc
das
jle
leave
adc
fild
cmp
pushf
jmp
sahf
inc
in
mov
mov
(bad)
mov
pop
mov
dec
shr
mov
stc
jno
sbb
push
retf
xchg
lds
adc
xor
retf
aaa
mov
nop
dec
xchg
nop
or
jg
fidivr
jmp
pop
cmp
sub
shl
cwde
sub
lea
jbe
frndint
sbb
add
fldenv
cmp
push
into
inc
pop
mov
fs
pop
shl
lds
jp
mov
cmp
and
mov
xchg
fwait
cli
js
and
or
int3
sti
ret
stos
test
sub
mov
stc
clc
push
aam
aad
js
js
scas
xchg
in
popf
(bad)
xchg
aad
pop
and
into
jo
push
and
or
ja
mov
mov
sbb
dec
into
popa
sub
stos
stc
popa
js
dec
jns
sub
jbe
jle
dec
adc
dec
std
push
dec
repnz
lds
lods
dec
in
pop
ins
lahf
xchg
push
aaa
xchg
fdiv
sbb
test
dec
jo
pushf
fs
jle
push
ror
inc
hlt
dec
mov
sbb
dec
adc
(bad)
mov
mov
data16
inc
add
out
sub
aad
out
pop
(bad)
mov
fadd
jo
and
rcl
pop
in
push
paddusb
imul
xor
add
(bad)
pop
dec
and
cmps
cmps
dec
cmp
push
sbb
mov
jmp
pop
mov
xor
mov
xchg
daa
xchg
cmps
int
shl
dec
pop
scas
clc
lea
push
pushf
xlat
popa
jle
data16
aas
dec
mov
jge
js
leave
push
push
jno
mov
jg
ins
dec
sbb
mov
push
repnz
add
pop
les
lods
cmp
mov
mov
repz
inc
jl
aaa
repnz
retf
int
div
rcr
(bad)
jo
cdq
xor
mov
pop
mov
int3
out
dec
mov
daa
pop
jmp
push
jb
gs
in
pop
jl
cdq
(bad)
xor
movs
mov
sub
xor
sbb
sbb
add
push
xchg
mov
or
mov
addr16
outs
and
fisttp
sub
iret
jb
repnz
mov
arpl
test
imul
mov
mov
jp
push
dec
fwait
jmp
add
xor
es
and
movs
sub
cdq
or
push
imul
retf
push
mov
push
push
dec
(bad)
das
pop
push
rcl
test
stos
mov
loop
rcl
outs
jmp
inc
shl
sub
inc
jmp
call
data16
(bad)
(bad)
jo
frstpm(287
(bad)
rol
mov
mov
fidiv
sub
jo
js
aas
xor
push
inc
xchg
in
sti
dec
test
or
nop
xlat
jno
mov
pop
inc
test
mov
es
adc
inc
cmp
mov
adc
dec
pop
sub
aaa
mov
sub
add
test
push
jnp
xchg
fld
(bad)
sbb
retf
push
add
push
call
shl
fcomp
mov
gs
daa
adc
out
sub
jmp
push
mov
mov
out
jb
pushf
or
and
push
sub
inc
sbb
aam
mov
scas
in
sub
sahf
aaa
pop
sub
sahf
ficomp
ret
mov
pop
psadbw
jnp
cwde
mov
or
and
scas
jmp
loopne
(bad)
pop
pop
inc
jmp
adc
js
fs
pop
out
mov
das
xchg
mov
adc
fldenv
or
jecxz
inc
hlt
and
int
inc
cs
dec
adc
adc
lahf
mov
pop
loope
test
(bad)
mov
mov
lods
jb
das
push
or
xor
lds
test
lock
jo
lds
mov
ret
cmps
xchg
push
(bad)
mov
in
call
push
sahf
mov
xchg
sbb
inc
aad
mov
pop
call
div
mov
ins
ja
iret
xor
xor
jne
(bad)
retf
mov
aad
and
pop
sbb
mov
out
sbb
push
out
cwde
sbb
adc
jbe
jno
inc
leave
xor
xchg
jns
xor
adc
hlt
es
hlt
push
xchg
int3
jmp
in
sbb
sub
push
cld
dec
xchg
dec
shl
xor
push
sub
repnz
jg
or
cmp
cwde
in
or
push
adc
lea
pop
sub
popa
fistp
xor
lods
inc
(bad)
dec
mov
jge
leave
(bad)
adc
xchg
cmps
sub
xchg
popa
and
sub
inc
fbld
jl
fcom
or
pop
lds
ds
fcmovbe
retf
inc
add
mov
data16
retf
inc
inc
mov
mov
adc
cmc
pop
xor
or
gs
les
lea
nop
or
add
enter
mov
arpl
jnp
mov
repz
sbb
sbb
aam
out
and
and
popa
push
cmp
(bad)
movs
enter
mov
mov
mov
stos
or
clc
mov
inc
pop
pop
cli
and
mov
pushf
loop
jp
cld
retf
(bad)
fimul
inc
stc
scas
pusha
call
scas
and
push
outs
push
loopne
fistp
es
inc
dec
outs
out
dec
out
mov
in
fldcw
and
jmp
(bad)
xchg
cmp
aam
cmps
pop
sbb
nop
shl
shr
dec
test
sbb
xor
adc
scas
mov
cmp
inc
push
jl
movs
push
xor
pop
enter
outs
push
imul
mov
or
xchg
mov
cmp
dec
inc
sub
outs
(bad)
bound
cmp
or
push
gs
pop
adc
mov
and
iret
loop
xor
test
test
xor
stos
js
movs
lods
xor
jbe
das
jbe
xlat
xlat
sbb
or
fidiv
imul
bound
mov
les
xor
jne
add
(bad)
loop
sbb
outs
mov
dec
arpl
lods
pop
add
in
push
pushf
fld
mov
mov
or
cmps
adc
pop
push
ficomp
dec
sbb
xor
push
push
and
cmp
xchg
inc
fdivrp
pop
jne
mov
call
in
cmps
shl
push
or
push
mov
jns
stos
mov
and
das
movs
out
fst
retf
fnstsw
ins
stc
mov
pop
sbb
push
repz
in
cmp
adc
shl
and
rcr
add
fcmovnu
outs
in
arpl
ja
inc
push
add
shl
pop
dec
sub
dec
jne
clc
xchg
ss
ret
outs
mov
sahf
mov
jmp
or
repz
jnp
arpl
outs
mov
mov
fisub
mov
sbb
test
ror
test
jnp
cwde
data16
mov
(bad)
nop
div
or
mov
retf
scas
cmp
sbb
jg
inc
lds
mov
push
outs
cmp
cwde
outs
add
leave
fwait
aas
shr
mov
stos
add
mov
and
mov
lds
scas
ror
xchg
es
hlt
or
cs
js
rcr
or
pop
mov
imul
je
in
jb
fisubr
in
jo
xchg
dec
add
adc
loop
(bad)
sub
xlat
add
ret
mov
add
mov
xor
mov
fdiv
cmc
gs
jl
lock
(bad)
fst
or
ficom
sbb
dec
and
hlt
imul
cmp
xchg
xchg
mov
dec
pop
and
or
out
mov
lock
stos
xchg
pop
jnp
jno
adc
loopne
sub
dec
dec
mov
inc
mov
imul
xor
inc
iret
or
jnp
mov
stos
mov
jae
mov
or
fiadd
lea
jnp
(bad)
jmp
add
fwait
sbb
mov
test
dec
mov
pop
or
and
or
inc
lea
push
xchg
gs
mov
sbb
pushf
lahf
xchg
repz
xlat
mov
call
leave
repz
jp
xchg
jg
aas
xchg
test
add
and
pop
sub
and
shl
(bad)
out
or
sbb
js
mov
inc
dec
ja
lds
loope
ret
(bad)
cwde
in
adc
in
pop
jl
or
fadd
add
mov
enter
inc
jecxz
out
mov
rcl
push
cmc
pop
leave
pop
or
(bad)
mov
arpl
xchg
out
push
jns
inc
pop
aas
sar
call
xor
lea
xchg
jns
or
arpl
xchg
mov
adc
mov
and
cld
push
or
std
sub
xchg
mov
cwde
(bad)
(bad)
pop
mov
(bad)
cmp
ins
cmc
(bad)
push
cli
fadd
imul
cli
mov
mov
ror
in
mov
loopne
sub
jmp
add
push
pop
sub
sub
into
sbb
cmps
test
push
repz
jle
sub
scas
sub
mov
fld
imul
push
retf
pop
dec
add
scas
std
pop
test
pop
out
or
xor
nop
jmp
movs
mov
rcl
fwait
cmp
les
jno
sahf
pop
fiadd
dec
sbb
adc
(bad)
ror
(bad)
call
sbb
fcomp
or
sbb
icebp
mov
push
cmp
push
imul
xor
(bad)
fucomi
inc
in
add
leave
imul
out
xlat
jmp
pop
sti
daa
inc
les
jmp
jb
retf
adc
cmp
sbb
(bad)
loope
mov
cmp
(bad)
xchg
push
gs
xor
mov
(bad)
cli
lea
mov
xor
and
xor
adc
fistp
jbe
call
cmp
jns
sbb
jno
push
sbb
push
cmp
loope
in
ficomp
jmp
sbb
push
gs
movs
les
dec
sub
test
mov
sub
cmc
retf
ja
stos
cmp
sahf
scas
mov
ret
fld
cmp
sub
fsubp
ja
or
fiadd
ficomp
scas
scas
fcmovnbe
sbb
mov
dec
int3
mov
push
xchg
mov
shl
mov
sub
jae
aad
jecxz
push
popa
xchg
mov
xlat
daa
retf
jecxz
mov
adc
cmp
fcom
mov
push
dec
inc
js
add
mov
fiadd
fwait
mov
and
into
cli
cmp
jmp
fcomp
add
enter
outs
jge
or
ret
push
pop
dec
(bad)
sbb
lahf
jnp
inc
into
fild
aad
jmp
popf
scas
mov
mov
cs
jae
xchg
adc
sbb
cs
sub
shr
pushf
jl
pop
mov
inc
int
cmp
sbb
mov
add
pop
jns
dec
cmp
push
add
or
mov
inc
les
sahf
lahf
or
inc
jns
out
push
or
pop
shl
test
mov
add
or
push
imul
mov
outs
pop
jo
jns
inc
outs
dec
mov
cmp
dec
fnstsw
add
lds
pop
mov
jmp
cmps
push
jp
retf
mov
cli
mov
test
add
lds
and
sbb
leave
lock
cmps
mov
ret
cmp
pop
ss
mov
adc
inc
jo
loope
mov
dec
dec
fwait
adc
jmp
xchg
sub
add
cmp
sub
sti
dec
test
addr16
sub
daa
pop
(bad)
(bad)
cmps
or
or
nop
sub
cmps
pop
lea
cmc
call
jle
dec
pop
lds
outs
sbb
sbb
and
jmp
div
ret
retf
jecxz
dec
cwde
push
mov
sbb
(bad)
gs
ja
call
and
int3
fiadd
mov
xlat
call
mov
mul
push
stos
out
bound
cld
xchg
add
clc
daa
clc
jl
retf
jae
add
jmp
dec
jg
and
jbe
xchg
js
(bad)
pop
into
scas
daa
addr16
xchg
mov
push
stc
test
mov
addr16
sub
mov
dec
icebp
mov
push
ret
sub
rol
mov
ins
dec
ret
rol
push
lods
fcomp
pop
xor
out
xchg
mov
pop
cmps
pop
(bad)
aad
inc
xchg
xor
stos
in
sub
lods
test
xor
cmp
mov
dec
cld
je
jne
sbb
pop
loopne
jg
stc
out
jg
stc
out
xor
sub
push
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
(bad)
add
and
sbb
pop
shr
sbb
and
mov
sbb
test
lea
or
or
jg
out
pop
icebp
pop
lldt
sub
lds
mov
add
popf
inc
loope
pop
xchg
daa
and
in
js
adc
jae
lahf
(bad)
rol
xor
pop
push
stos
sub
dec
mov
(bad)
cmp
push
hlt
stc
cmp
xchg
rol
adc
and
adc
js
movs
ret
push
sub
jnp
pop
fucomp
sub
mov
mov
imul
movs
fsubrp
push
idiv
jns
cmp
jg
stos
adc
pop
popf
inc
xchg
push
cld
js
jl
pop
xchg
jns
push
sub
retfw
jmp
mov
xchg
cli
jae
jl
or
out
sbb
add
aas
push
cld
jge
mov
cwde
push
push
mov
mov
popa
adc
cmps
lahf
and
jle
cmp
cmp
adc
adc
sub
add
push
xor
ret
pop
cmps
jae
jmp
std
and
push
sub
add
test
cdq
adc
fist
lock
cmp
lods
sbb
bound
lock
aam
cmp
call
jmp
mov
cld
pop
movs
shl
mov
and
add
shl
mov
add
cwde
sub
inc
mov
ins
xchg
movs
push
(bad)
adc
and
jno
add
das
aaa
dec
sbb
addr16
mov
repz
fstp
lea
add
jle
inc
add
cs
pop
dec
or
cmps
sahf
inc
xor
dec
dec
adc
mov
jecxz
xlat
cmp
and
fsub
inc
adc
aaa
dec
cmp
aam
sbb
push
cmp
sub
int
cld
gs
test
(bad)
fsubr
push
cmp
jne
jnp
xchg
cmps
and
and
lods
adc
retf
jmp
je
pop
fsub
mov
rcr
xchg
adc
iret
lds
xlat
jb
(bad)
int3
inc
jmp
or
add
sub
push
repnz
xor
inc
lock
adc
mov
addr16
fs
pushf
push
push
or
push
add
in
es
dec
retf
jmp
(bad)
cmp
mov
outs
mov
lods
nop
ds
sub
inc
mov
ret
ds
inc
pop
ja
push
das
cmp
push
idiv
gs
mov
inc
popf
xchg
mov
push
lock
into
mov
(bad)
xor
stos
jbe
hlt
sub
pop
scas
push
push
dec
jge
sub
push
add
out
push
in
push
pop
into
bound
sbb
iret
gs
sar
jle
neg
sbb
mov
and
icebp
gs
sbb
lods
loop
aad
xchg
ds
int
sbb
fdivr
int
push
adc
das
sbb
les
cmp
cmp
pop
(bad)
xor
xor
fist
pop
push
add
push
pusha
(bad)
jbe
(bad)
fbstp
inc
les
push
sub
mov
mov
add
mov
je
mov
mov
pop
leave
es
iret
call
jl
mov
inc
and
test
xor
ret
iret
je
xlat
imul
jmp
sbb
push
cmp
rcl
or
enter
cmc
mov
push
cmps
jl
cmps
xchg
mov
push
pop
jmp
repnz
lods
lods
or
jo
movs
jl
mov
xor
outs
lods
push
xor
push
pusha
push
into
mov
mov
inc
or
test
in
sub
aaa
add
jl
xchg
call
mov
and
or
or
pop
std
ss
sahf
into
ja
out
mov
and
ret
scas
push
in
xlat
sub
movs
mov
mov
into
mov
cs
cmc
out
mov
inc
mov
ucomiss
push
mov
jl
ret
jbe
scas
xchg
ins
aam
call
xor
adc
test
fucom
cmp
mov
in
arpl
out
in
mov
push
loopne
(bad)
pusha
xor
ret
xor
sbb
test
xchg
xchg
mov
outs
push
sbb
les
aas
out
or
test
jl
pop
imul
jae
mov
mov
ret
cmp
push
fs
jle
mov
jg
int3
fdiv
adc
xor
sbb
push
xor
dec
cmp
ins
fisub
xchg
cmp
dec
ins
loop
inc
xor
in
jno
jge
aas
ret
jo
stc
mov
push
adc
dec
xor
rol
cmc
sub
cmps
adc
push
shl
les
dec
popf
cli
mov
popa
ins
out
(bad)
retf
test
xchg
jo
scas
enter
repz
or
es
mov
aaa
iret
cli
imul
inc
mov
ror
or
ins
div
out
into
stc
cmp
pop
mov
mov
jmp
outs
xor
outs
inc
cdq
arpl
rol
push
sti
rcr
fst
inc
pop
sbb
xchg
sub
call
add
mov
pop
ja
push
in
aaa
jae
xchg
iret
mov
xchg
loopne
and
stc
jbe
inc
push
aad
lahf
les
dec
push
imul
inc
in
lods
stos
daa
jno
jo
mov
jmp
mov
add
jae
mov
mov
sub
sbb
jg
retf
ds
retf
in
sub
mov
out
push
pop
into
call
mov
pop
dec
stos
add
test
pop
daa
popf
push
adc
fwait
push
add
adc
mov
(bad)
out
sub
mov
jno
sbb
lea
add
addr16
fcom
fld
or
sub
and
cmp
out
daa
fidiv
aad
cmps
add
or
adc
xlat
mov
jnp
inc
mov
scas
es
mov
inc
fisubr
cwde
popa
cmp
jl
(bad)
out
pop
xchg
je
dec
dec
cwde
or
je
inc
pusha
(bad)
or
lea
aaa
shl
rol
mov
out
aam
lock
cdq
dec
jns
ss
cld
sbb
fdivr
sub
jle
loopne
push
retf
dec
jo
mov
push
pop
(bad)
mov
sbb
adc
bound
adc
movs
cmp
in
movs
movs
mov
loopne
fdivr
fucomi
scas
push
mov
adc
inc
mov
pop
cmp
pop
(bad)
js
shr
icebp
(bad)
aam
test
shr
enter
jge
push
xchg
int3
call
lds
lods
mov
(bad)
push
add
jb
fiadd
cmp
mov
mov
jle
dec
aam
sbb
push
in
in
in
in
fdiv
jle
iret
shr
xor
mov
or
hlt
ror
(bad)
loopne
or
or
or
div
ins
push
sub
xchg
(bad)
retf
rol
in
in
cli
ret
jno
dec
mov
and
in
cmp
inc
push
and
cmp
adc
fistp
cmps
mov
shl
dec
icebp
addr16
inc
jp
fnstsw
cmp
push
(bad)
repnz
pop
mov
mov
popf
rcl
cwde
mov
and
es
add
push
les
or
dec
leave
lods
imul
(bad)
outs
inc
imul
jae
lock
movs
test
adc
out
stos
das
fidiv
in
ja
or
fbstp
call
jno
sub
clc
hlt
mov
mov
pop
leave
pop
aaa
lock
sub
int3
dec
icebp
je
sub
movs
ret
cmp
shl
popa
jmp
mov
push
and
xlat
pop
sti
xlat
cmp
into
jl
in
outs
cmp
pop
mov
inc
jmp
xlat
fdivr
cmps
jb
fstp
bound
mov
call
(bad)
or
push
cmp
clc
imul
push
cmps
dec
js
push
or
outs
inc
sbb
movs
mov
ret
add
sbb
xchg
push
dec
dec
lock
ret
ret
dec
(bad)
repnz
into
not
in
pop
lods
dec
imul
pop
ret
loop
ret
je
pop
popf
cmp
or
outs
xchg
dec
(bad)
mov
pop
lea
mov
jmp
fidiv
cmps
inc
inc
pushf
clc
(bad)
test
scas
pop
jae
mov
xor
xor
jno
movs
pop
adc
jle
push
add
sahf
push
inc
inc
stos
jp
jno
add
test
popf
arpl
ins
iret
imul
inc
aas
cdq
out
xchg
jbe
into
inc
lods
std
hlt
imul
add
out
cdq
xchg
sbb
ins
cmp
pop
fs
push
nop
movs
adc
or
or
dec
cmc
sub
popf
pop
ins
cmps
loope
dec
jecxz
ds
fstp
dec
fs
xlat
mov
stos
imul
sub
fdivr
gs
hlt
ja
aas
mov
daa
jle
mov
lods
inc
out
in
inc
jmp
mov
and
popf
mov
push
scas
cmp
adc
cmp
es
inc
fs
add
sub
cmp
add
inc
enter
push
sub
sbb
inc
xor
fucom
lahf
cdq
pop
mov
mov
aam
out
mov
stos
dec
dec
jle
push
jl
jnp
xchg
mov
sub
sub
pop
sbb
jl
nop
int3
movs
imul
push
xor
mov
jp
and
mov
ror
mov
mov
call
sbb
dec
add
mov
int3
mov
jmp
mov
mov
mov
inc
dec
adc
test
push
adc
push
pop
mov
xchg
add
aas
mov
xchg
pushf
xchg
inc
arpl
push
pop
or
inc
xor
mov
xor
aad
mov
lods
adc
mov
jns
neg
mov
cmps
outs
inc
(bad)
cwde
fucom
cmp
fs
call
pop
dec
pop
xor
scas
hlt
into
js
sbb
pop
ins
ds
jp
imul
sar
inc
xchg
jle
xlat
add
mov
aaa
fs
xor
sbb
ror
pop
and
xor
(bad)
xchg
cmp
jne
icebp
adc
mov
les
adc
pop
loop
das
outs
or
test
pop
sti
jmp
or
out
and
fld
(bad)
or
push
inc
cmp
jmp
pop
jnp
lock
or
test
lds
jmp
mov
es
jl
mov
fstp
push
sub
xchg
jno
xor
mov
imul
add
jbe
outs
aad
push
push
sub
pop
pop
div
call
je
lea
inc
fwait
leave
xor
mov
xchg
and
(bad)
mov
push
xchg
frstor
cmps
test
stos
leave
sub
fs
pop
std
cmc
out
mov
xor
xchg
xchg
xor
jg
(bad)
jbe
adc
pop
sbb
xor
cld
dec
adc
repz
fld
add
mov
jl
repz
mov
aas
mov
jecxz
pop
cmp
into
lock
or
in
mov
cmp
jno
push
jge
enter
je
push
mov
jno
adc
ret
mov
(bad)
jns
jmp
pop
cmp
(bad)
in
inc
mov
or
push
dec
fdivr
icebp
nop
push
adc
psrlq
out
add
sbb
daa
dec
mov
movs
cmc
adc
pop
rcr
or
cmp
out
cmp
inc
mov
in
push
push
(bad)
fisttp
hlt
imul
outs
push
add
cli
jb
fnstenv
push
push
imul
loope
jb
call
jb
add
xor
pop
loopne
test
repz
ss
inc
jnp
sub
retf
inc
mov
cmps
aas
lods
std
inc
xchg
or
push
or
sub
mov
pop
rol
or
inc
jns
push
cmp
mov
in
jmp
cs
ds
and
sbb
out
rcl
mov
mov
and
mov
aam
cmps
add
dec
outs
repz
scas
mov
sbb
ret
stos
inc
sub
fwait
(bad)
xor
jle
cmp
icebp
jb
(bad)
aaa
mov
jg
std
xchg
inc
add
sti
lods
push
add
ins
inc
aam
loopne
fidiv
mov
(bad)
(bad)
and
out
repz
xchg
and
xor
sbb
jge
fldcw
pop
xor
es
sub
add
cmp
lock
ins
aaa
push
fdivr
dec
sub
cdq
das
neg
dec
cmp
mov
test
test
inc
mov
push
mov
mov
rcl
hlt
out
push
fisub
pop
xor
pop
push
test
ss
jecxz
mov
push
inc
out
lea
xor
div
imul
shl
in
dec
out
ud2
sbb
xchg
repnz
mov
sub
xchg
mov
or
js
xor
(bad)
sub
xchg
pop
push
pop
pushf
stos
(bad)
xor
in
std
cdq
mov
scas
in
add
and
ret
and
retf
aam
jmp
cmp
pop
and
int
dec
out
in
sbb
cmps
ss
ret
sub
xchg
shl
in
data16
test
or
push
or
sbb
xor
ror
jnp
test
data16
jmp
push
popa
mov
retf
cmps
inc
call
sub
cli
mov
sub
push
fild
adc
mov
(bad)
cmp
out
push
sbb
outs
mov
es
sub
xor
retf
inc
dec
call
mov
xchg
push
jp
pop
adc
iret
fcomp
bound
fisubr
test
sbb
mov
test
push
mov
aad
aas
imul
sub
jg
xor
jne
sub
ret
push
iret
movs
sar
std
mov
nop
shl
mov
cmp
mov
adc
je
pop
pop
stc
pop
jno
out
scas
ins
xchg
xor
add
imul
push
lods
scas
xchg
rol
push
out
adc
xlat
pop
stos
jg
int
push
xchg
xchg
mov
int
popa
or
adc
jge
not
cli
in
or
repz
js
clc
out
lahf
add
jge
js
fst
or
retf
mov
jae
cmp
ror
lods
jne
mov
int
pusha
mov
nop
in
inc
in
or
cld
(bad)
mov
sbb
or
scas
ror
adc
cmps
pop
mov
ins
pop
in
cmps
popa
repz
shl
leave
inc
add
inc
jl
shl
jbe
jmp
mov
xor
xor
adc
pop
imul
repnz
add
jmp
jmp
sbb
or
das
pop
pop
fsub
pushw
xchg
inc
cmp
jmp
and
ret
sar
jmp
dec
and
jmp
mov
pop
jbe
scas
hlt
mov
dec
mov
jl
pop
ret
mov
sysenter
xchg
dec
inc
xchg
aad
and
gs
adc
xchg
xchg
sub
pop
cmp
test
xchg
je
retf
mov
(bad)
cld
ror
retf
jle
ret
ret
fwait
cmp
push
jmp
int
std
leave
pop
loopne
es
inc
xchg
pop
cmc
xchg
data16
loop
dec
xor
fdiv
pop
add
fistp
retf
push
xchg
jmp
or
into
sti
mov
jp
add
adc
sahf
push
stos
test
clc
dec
das
dec
call
xchg
in
adc
or
int
adc
pop
mov
int
ror
dec
jg
scas
mov
rol
jns
xchg
adc
xor
stos
fldcw
xor
push
neg
out
jg
stc
out
jmp
lock
adc
jle
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
add
das
dec
jae
in
aaa
rcl
xor
call
xor
mov
or
mov
frstor
iret
sti
js
lahf
mov
add
xchg
icebp
pop
jp
adc
sti
enter
icebp
loop
and
imul
lods
mov
jbe
cmps
mov
xchg
fisubr
xor
cmp
cmps
sub
ins
aam
sub
test
adc
mov
push
push
mov
movs
(bad)
pop
pop
mov
cmp
outs
cli
int3
and
repz
mov
movs
pop
les
pop
push
mov
repz
fwait
or
(bad)
addr16
popf
dec
in
add
lea
data16
inc
xor
push
and
daa
idiv
cmp
popa
dec
jo
adc
pop
push
loopne
ret
xchg
cwde
jmp
mov
(bad)
in
out
fidivr
cld
inc
cmp
ror
test
out
lods
xchg
push
dec
dec
fs
or
mov
pop
mov
dec
movs
sbb
sti
adc
dec
sub
cmc
jp
sahf
fimul
test
aas
test
aad
jle
jecxz
jne
rcr
stos
or
xchg
fs
mov
dec
sub
cmp
push
test
xor
fwait
cmps
retf
shr
pop
js
in
call
xchg
adc
loope
lods
mov
adc
outs
xchg
mov
push
repz
mov
out
and
pop
lods
cmc
popw
cmp
or
mov
test
hlt
dec
pop
fs
push
cmp
inc
xchg
pop
popaw
in
xchg
ret
js
dec
(bad)
call
push
movs
inc
dec
cs
scas
or
add
or
cs
data16
mov
xchg
mov
imul
call
sub
aam
sub
mov
mov
push
cmc
pop
mov
xor
inc
popa
call
neg
outs
sub
cmp
in
mov
cmp
mov
pop
fisub
xchg
call
test
pop
rol
je
push
std
aad
pshufw
leave
je
sbb
lea
inc
not
jp
test
aam
leave
mov
cmp
addr16
sub
es
pop
enter
lock
aam
in
pop
pop
test
xchg
clc
xor
jecxz
and
(bad)
(bad)
and
sar
cmp
shl
test
pop
mov
movs
push
(bad)
dec
push
cmc
dec
not
int
and
jmp
stos
sbb
jne
iret
das
(bad)
cld
sub
mov
frstor
and
jno
push
mov
xor
daa
jne
lods
inc
(bad)
hlt
mov
mov
sub
shr
xchg
xchg
xor
enter
add
pop
cmp
adc
push
push
push
imul
inc
cvtps2pi
sub
xchg
fisub
loope
or
repz
pop
or
mov
fdiv
fdivr
fcomp
imul
jge
sbb
retf
or
(bad)
jbe
leave
div
sbb
push
push
popf
ret
jle
pop
dec
mov
jl
add
xlat
das
jns
or
ins
xchg
cdq
mov
mov
das
je
shr
sub
fild
aaa
fisttp
jae
mov
push
fcmovnbe
mov
xor
add
stc
jl
mov
and
jbe
mov
and
inc
out
movs
pop
call
addr16
icebp
ins
fidiv
leave
or
or
sub
mov
sub
dec
das
test
repnz
pop
inc
ret
loope
fadd
cmp
push
lahf
out
test
pop
inc
std
loop
jnp
and
xchg
(bad)
xchg
inc
int
addr16
inc
out
test
ins
and
cli
imul
cmps
gs
cmc
pusha
icebp
dec
test
mov
adc
icebp
sbb
mov
dec
imul
xchg
in
test
out
mov
jb
jae
ldmxcsr
and
jmp
sub
push
imul
not
mov
out
jmp
shl
cmc
mov
fisub
cwde
pop
stos
adc
js
push
mov
sub
ds
leave
jno
sub
jnp
ss
ins
ins
sub
xor
inc
pop
cmp
fdivr
jg
jmp
xor
cld
sti
dec
lds
or
jmp
mov
inc
femms
jnp
or
pop
jmp
loop
pop
outs
cs
cmp
test
lahf
mov
push
sti
popa
repz
dec
add
dec
xchg
fldpi
mov
stc
sub
or
aad
inc
adc
mov
sbb
jl
aas
rol
add
imul
inc
stos
mov
xchg
pusha
lock
aad
aad
out
mov
mov
jne
loop
stos
test
pop
jno
jg
mov
in
leave
in
xor
cld
(bad)
aaa
popf
leave
mov
daa
scas
lods
push
mov
sub
out
jnp
pop
mov
cmc
adc
jns
repnz
out
mov
xor
in
mov
xchg
imul
push
sub
mov
and
xlat
stos
xor
push
sub
push
xchg
add
sar
scas
iret
les
dec
mov
retf
test
ja
fisubr
rcr
or
fbld
in
outs
adc
sar
inc
fwait
es
jg
pop
xchg
dec
mov
inc
les
and
adc
add
pop
mov
push
push
jle
loop
adc
jmp
sar
rcl
lahf
jnp
pop
sbb
pop
jge
(bad)
push
loope
pop
outs
sbb
jecxz
ret
jge
xchg
adc
jae
or
jno
adc
pop
mov
mov
and
movs
ins
sub
pushf
dec
fld
addr16
in
dec
loope
mov
std
(bad)
pop
dec
jecxz
fwait
nop
xor
and
add
(bad)
(bad)
fisttp
xchg
mov
sbb
push
push
repz
dec
lahf
cwde
neg
mov
lock
mov
aam
xchg
pop
outs
ins
call
adc
or
adc
pop
adc
int
ret
cmp
fucomi
ror
push
aam
add
mov
outs
stc
outs
dec
test
push
leave
jbe
loopne
lods
mov
mov
jge
arpl
pop
icebp
jle
pop
sbb
retf
fadd
test
data16
daa
lods
dec
mov
sbb
dec
cmp
xor
imul
push
cmp
adc
icebp
or
bound
popf
mov
mov
out
fisub
xchg
pop
neg
mov
das
dec
call
jno
retf
jle
add
adc
imul
add
lds
or
ss
mov
ds
cmp
clc
fcom
or
shl
xor
push
jmp
xchg
lahf
hlt
call
cmc
sbb
fisubr
ins
mov
mov
fimul
dec
scas
lahf
cmp
(bad)
in
inc
mov
jl
nop
iret
int
pop
xchg
jmp
mov
dec
retf
leave
cmp
cwde
gs
adc
cmp
fwait
call
or
jb
in
cmps
xlat
test
mov
iret
jbe
xor
mov
std
or
sub
jg
jmp
xor
push
in
rcl
push
ja
mov
ret
test
mov
dec
dec
or
rcl
outs
out
scas
xor
fdivr
cmps
add
inc
enter
adc
inc
xchg
xchg
and
jmp
cmp
add
add
dec
add
cmc
and
lea
add
shl
nop
test
xor
pop
movs
retf
pop
pusha
shl
cs
cmps
dec
scas
out
mov
gs
and
mov
fstp
mov
jnp
mov
jg
retf
jo
pop
jmp
fcmovnbe
and
pop
aam
pop
cmp
xor
ret
adc
push
(bad)
repz
adc
fild
fcmovnu
scas
cmps
push
out
pop
pop
push
dec
fwait
pushf
mov
std
sbb
cld
fs
pop
mov
jmp
and
jle
dec
sub
dec
aad
mov
call
and
(bad)
jnp
xchg
stos
fst
xor
lock
inc
ja
add
lods
adc
sti
(bad)
ror
mov
clc
xchg
jb
jmp
jmp
in
sub
or
cld
mov
jae
shr
daa
call
fwait
inc
fiadd
sub
daa
movs
les
dec
add
or
gs
cdq
int
pop
inc
mov
mov
int
ret
push
cmc
mov
out
sub
imul
inc
sub
cmps
pushf
pop
repz
sbb
inc
(bad)
mov
sub
mov
(bad)
dec
in
mov
mov
sbb
sbb
test
out
js
sbb
mov
callw
xchg
les
test
jecxz
fild
mov
adc
push
push
sbb
imul
jle
dec
(bad)
mov
mov
mov
sub
xchg
lock
std
cmp
or
enter
fiadd
fiadd
xchg
popf
iret
xchg
out
pop
mov
jbe
jnp
out
call
or
jecxz
cdq
popa
jge
xchg
int
in
pushf
cmp
pushf
retf
xor
jp
mov
pop
(bad)
ror
jmp
pop
dec
and
jo
jmp
mov
aad
test
jge
pusha
(bad)
push
add
movs
mov
xchg
cwde
sub
fnstenv
aam
sar
gs
push
mov
push
jb
jo
pop
pop
in
mov
mov
dec
lock
mov
adc
mov
les
aas
dec
jp
pop
(bad)
iret
shr
sub
(bad)
mov
ror
mov
(bad)
mov
fwait
cvtps2pd
cmp
or
adc
mov
pop
(bad)
sbb
sub
daa
xchg
mov
outs
adc
loop
fld
and
int3
fnstsw
pop
sbb
out
out
mov
push
and
mov
and
mov
test
fmul
retf
shr
rol
add
cs
mov
in
dec
mov
mov
xchg
mov
push
ss
fistp
inc
test
jge
imul
dec
retf
mov
dec
loope
mov
shl
outs
test
test
and
lods
mov
je
sub
retf
or
push
cmps
ret
inc
mov
int3
cdq
xor
jne
xchg
mov
xchg
adc
gs
xlat
lods
cmps
sub
sbb
out
cmp
adc
cmp
ja
jae
inc
add
jbe
into
xchg
pusha
cmc
dec
int
loope
aas
cmp
xor
stos
es
ss
in
xor
xor
(bad)
cld
push
pop
pop
jnp
rcr
add
ror
mov
outs
or
jmp
pusha
dec
mov
in
xchg
and
pop
mov
and
(bad)
cmp
xor
das
and
test
in
in
in
and
mov
inc
fwait
mov
dec
pop
mov
dec
fld
loope
lock
daa
push
(bad)
or
sbb
cmp
imul
sub
mov
adc
cmp
sub
cmp
adc
xchg
neg
mov
xchg
out
mov
lock
pop
and
call
inc
neg
mov
stos
jb
push
shl
add
lahf
inc
lods
mov
xchg
adc
mov
(bad)
inc
jmp
jbe
ret
cmp
fcmovnbe
xchg
pop
jg
sub
sub
push
mov
mov
test
loopne
adc
add
ss
mov
mov
mov
jns
arpl
call
ret
sbb
rcr
push
je
shl
repz
cs
jae
and
jmp
cmp
mov
sub
push
cdq
lods
xchg
movs
inc
push
les
(bad)
les
add
push
push
fwait
or
mov
pop
mov
add
adc
push
adc
mov
lea
push
stc
rol
or
adc
cmp
adc
in
fdivr
call
add
(bad)
out
xchg
mov
loope
jo
mov
imul
mov
push
push
cmp
mov
sub
gs
jb
fcomi
xchg
lods
shr
imul
fcmovu
fdiv
and
idiv
xor
out
das
ja
in
daa
jno
mov
xor
jg
sbb
mov
sbb
push
sahf
jle
jns
pop
aaa
popf
mov
push
mov
es
ins
das
arpl
std
dec
cmc
cld
jmp
out
cld
mov
and
es
(bad)
xor
or
ds
outs
pop
dec
and
cmps
aas
std
dec
ret
data16
repnz
push
pop
(bad)
jp
push
and
ret
and
dec
jns
xchg
jae
xchg
fld
jl
adc
jmp
dec
push
icebp
mov
mov
mov
mov
or
adc
mov
jb
sti
xlat
mov
pop
std
push
data16
sub
outs
pop
jnp
test
xor
pop
sub
mov
mov
push
adc
lods
xor
in
jg
(bad)
inc
or
jl
and
dec
push
imul
dec
jg
movs
jp
mov
dec
icebp
pop
pop
jnp
jb
lods
in
repz
dec
sub
push
and
mov
jmp
out
leave
mov
push
stos
xor
and
pop
mov
and
fidivr
mov
std
sbb
jb
sbb
enter
cmc
xchg
sub
ret
jnp
mov
adc
jbe
movs
lock
das
fcomi
inc
mov
cli
lods
imul
dec
jae
xlat
lahf
ret
ins
inc
dec
mov
mov
dec
pop
jp
jge
pop
rcr
push
nop
mov
mov
stos
pop
inc
nop
call
adc
daa
xor
pusha
(bad)
(bad)
pop
daa
imul
jb
inc
jg
add
jne
or
jo
push
retf
sbb
cmp
test
stos
xor
pusha
in
add
lahf
inc
inc
pop
fs
mov
mov
out
test
stos
and
and
cdq
scas
xor
addr16
jg
out
xor
lahf
mov
pop
cld
(bad)
fst
xchg
xchg
arpl
sub
pop
xor
(bad)
xor
adc
xchg
xlat
gs
stc
test
mov
jae
dec
mov
mov
fistp
and
mov
inc
outs
mov
push
scas
push
out
int
xchg
das
dec
pop
xchg
mov
ja
retf
mov
fdiv
pop
das
retf
xor
pop
outs
mov
fsub
fistp
inc
mov
pop
sub
xor
adc
call
mov
daa
xchg
add
stos
xchg
js
jns
(bad)
aad
push
ret
test
jbe
pop
ret
aad
cmc
into
jg
int
into
ret
xor
fdiv
mov
cs
cdq
mov
adc
sbb
mov
push
push
jo
(bad)
pushf
xchg
imul
stc
adc
aam
sbb
daa
dec
xchg
push
sbb
xchg
xchg
ins
repz
push
jmp
sub
jge
jle
mov
out
xchg
mov
nop
jns
inc
rol
clc
stc
aam
mov
xchg
das
aas
cmc
push
adc
dec
loop
cli
in
in
sub
xor
ja
mov
out
jmp
call
cmp
sar
push
jmp
out
repz
repnz
and
sbb
xchg
inc
test
loopne
mov
xchg
lea
pop
ret
sub
(bad)
cmovl
cmps
add
leave
add
nop
pop
fst
fld
lds
into
gs
dec
mov
mov
mov
jo
sub
xor
pop
das
popa
mov
sahf
repz
jnp
aad
fisub
mov
mov
sbb
ret
nop
xchg
repnz
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
xor
ja
(bad)
jo
retf
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
aas
sbb
ret
shl
dec
ja
xor
es
cmps
jmp
pushf
dec
lahf
mov
je
aaa
ror
int3
mov
sar
dec
dec
xor
mov
outs
clc
mov
test
aaa
sar
jge
clc
scas
sbb
je
cmp
sti
cld
push
shl
shl
dec
add
add
ret
mov
cli
inc
mov
push
mov
xchg
push
cs
sbb
aas
in
call
mov
sbb
sbb
mov
iret
jmp
das
sbb
mov
cmps
add
stos
int
mov
out
pushf
(bad)
cmps
xchg
add
repz
repnz
pop
das
shl
rcr
(bad)
mov
inc
in
movs
jbe
retf
dec
mov
mov
jle
rol
cmc
rcl
mov
je
aas
test
bound
jns
out
xor
pop
(bad)
(bad)
cmp
sbb
in
(bad)
scas
int3
add
adc
and
add
iret
xor
mov
cmps
mov
mov
mov
cwde
xchg
movs
test
mov
sub
mov
jecxz
pop
es
ins
adc
addr16
mov
rcl
push
or
fistp
inc
pop
mov
xor
sub
pop
int3
(bad)
ds
fnsave
sub
cmp
push
mov
into
js
cli
ds
scas
addr16
pop
(bad)
push
xor
in
jbe
push
outs
int
dec
xchg
outs
adc
xchg
xchg
jno
sbb
mov
arpl
sbb
dec
fwait
inc
xchg
sub
mov
lods
call
inc
inc
cmps
arpl
and
int3
loop
fucomip
stos
mov
jp
sbb
mov
jmp
add
xchg
push
pop
fnstenv
sub
fdiv
in
cmp
(bad)
repz
std
std
addr16
lock
or
loopne
and
mov
repnz
nop
cmp
rol
adc
scas
inc
into
out
stos
xchg
inc
mov
outs
xchg
push
inc
mov
add
clc
mov
cld
inc
mov
or
mov
and
fwait
dec
mov
jbe
or
inc
inc
xchg
popf
or
pop
sub
pop
jbe
loopne
fsub
add
push
jae
xchg
dec
call
sahf
inc
addr16
add
out
mov
pop
mov
push
retf
imul
inc
sub
cmp
test
dec
pop
mov
ja
ds
push
mov
adc
in
out
lods
push
std
sti
ret
jle
jl
mov
adc
fwait
stos
in
dec
dec
cmp
popa
cli
enter
(bad)
mov
std
loop
(bad)
mov
ss
adc
clc
pop
push
(bad)
pop
sar
or
scas
xchg
mov
stos
pop
sbb
cmp
sub
call
cdq
push
add
pop
call
retf
mov
push
pop
mov
mov
push
sub
jbe
sub
mov
test
aam
dec
and
jae
xchg
jnp
ins
fdiv
jmp
jnp
popa
push
cld
or
xor
adc
xchg
out
dec
mov
popa
xor
cld
jmp
jmp
mov
add
pop
pushf
and
sbb
sbb
push
inc
fmul
in
leave
jp
jg
out
fist
or
jecxz
xchg
jg
lods
sub
mov
push
cmps
jp
aaa
mov
cs
test
(bad)
xchg
pop
fcom
mov
lea
ja
hlt
xchg
or
sti
hlt
push
cmp
push
mov
int3
sbb
dec
inc
test
pop
mov
pop
xchg
jae
(bad)
cld
and
add
cmp
stos
call
mov
(bad)
and
sub
push
pusha
xchg
fimul
mov
cmp
jmp
cmp
aas
push
jns
hlt
gs
push
jno
pop
call
out
xor
addr16
or
or
les
push
out
mov
out
fsubr
pop
call
ror
in
data16
ror
cmc
jg
push
(bad)
and
jl
push
sub
mov
jae
add
gs
jecxz
loopne
popf
lods
mov
pusha
pop
les
nop
add
stos
and
mov
xchg
test
bound
ins
cmps
call
sub
shr
lahf
xchg
mov
xor
test
fsub
ret
sub
imul
fcmovne
sysexit
xchg
push
icebp
sub
xchg
push
xchg
mov
xchg
adc
in
xlat
daa
xor
dec
pushf
push
sbb
and
cwde
and
sbb
cmps
outs
xchg
pushf
data16
clc
cmp
lock
retf
jge
and
jmp
xchg
xchg
pop
mov
hlt
inc
lock
loopne
push
mov
pushf
neg
mov
mov
ins
(bad)
iret
mov
gs
jp
imul
mov
out
push
push
xlat
xchg
mov
mov
mov
or
sub
adc
dec
mov
aaa
pop
or
push
pop
mov
jp
lods
stos
retf
(bad)
repnz
rol
in
leave
or
(bad)
sub
xor
jmp
nop
mov
sbb
jg
xchg
mov
dec
enter
mov
inc
inc
and
test
fcmovnb
popf
jecxz
sub
xchg
sti
or
mov
out
mov
cld
mov
repz
loop
sbb
sbb
adc
call
sahf
cmps
rcl
cwde
add
cmp
arpl
std
stos
pop
jl
jbe
and
add
je
and
add
inc
jp
jae
push
cdq
bound
mov
repz
sti
(bad)
and
push
add
inc
outs
adc
adc
pop
in
inc
or
mov
or
(bad)
je
inc
test
xchg
lock
push
test
xor
sahf
xor
(bad)
push
sub
int
adc
adc
(bad)
in
in
or
(bad)
cs
jns
dec
test
and
lahf
sbb
or
(bad)
std
outs
xor
pop
pusha
push
scas
lods
add
sbb
std
cwde
fwait
addr16
je
xchg
xchg
push
ficomp
add
sub
jmp
pop
call
or
ja
stos
fldcw
push
mov
jo
jo
mov
ins
dec
fisub
jo
fs
adc
jne
sbb
js
jne
push
push
adc
icebp
lods
lods
(bad)
out
mov
daa
xchg
mov
imul
(bad)
enter
jl
cmps
int
cmps
ret
jbe
cmp
movs
jae
jne
sub
stc
std
ror
mov
retf
xchg
psubsw
and
mov
out
xor
mov
mov
shr
or
inc
jg
or
inc
jmp
xchg
add
push
pusha
or
mov
push
aam
out
(bad)
adc
cmps
jns
fstp
mov
pop
mov
gs
xchg
mov
jp
inc
sahf
shr
fwait
test
xchg
bound
pop
sub
mov
mov
retf
not
cmp
add
pop
or
jg
lods
mov
mov
jnp
cvtps2pi
mov
or
cmp
mov
hlt
jo
mov
test
ja
inc
in
mov
pop
jne
loop
mov
mov
push
push
jae
pop
stos
bnd
pop
add
fcomp
mov
ss
jbe
aas
xor
mov
mov
xchg
ds
mov
fsub
pop
enter
(bad)
repnz
dec
xor
repz
sbb
inc
popf
test
in
or
jae
sbb
aaa
push
icebp
and
lock
ds
fcompp
or
and
mov
push
mov
xor
xlat
scas
cmp
xor
(bad)
jge
dec
adc
inc
(bad)
cmp
push
movs
or
add
fidiv
mov
pop
fmul
cmp
jg
bound
leave
in
xchg
sub
mov
(bad)
xchg
xchg
pop
ins
data16
stos
and
mov
repz
(bad)
ficom
xchg
xor
mov
jmp
mov
leave
xor
daa
aad
lock
jg
pop
ins
pop
leave
fnstsw
loope
retf
sbb
imul
mov
sbb
sbb
ficomp
mov
xor
jl
cli
stos
and
iret
mov
sbb
jb
int3
repz
imul
test
in
xor
mov
fcomp
and
(bad)
not
push
loope
cmps
xchg
fiadd
pop
sub
push
js
(bad)
add
xchg
lahf
jmp
and
mov
outs
pusha
xchg
fiadd
mov
out
scas
mov
ja
add
push
std
ret
clc
cdq
js
sbb
sub
push
push
fsubr
aas
rcr
pop
ret
sahf
jnp
add
mov
cmp
ins
inc
add
hlt
mov
push
pop
xchg
jo
sub
out
outs
xchg
sub
mov
movs
xchg
pushf
dec
jge
lods
(bad)
lahf
retf
jl
sbb
cwde
sub
das
mov
adc
not
dec
mov
fnstcw
nop
push
aam
adc
mov
sub
fldcw
aas
loop
js
mov
mov
jne
enter
add
test
xchg
push
add
test
push
daa
inc
jae
arpl
lock
sbb
sbb
iret
scas
adc
dec
imul
mov
(bad)
cmp
mov
js
push
push
retf
xchg
loop
pop
adc
and
movs
and
sti
jmp
aad
and
sub
jecxz
dec
xchg
loop
xlat
outs
cmp
sub
int3
je
mov
add
xchg
rol
imul
jecxz
mov
xchg
or
inc
repz
xor
lods
xchg
dec
mov
pusha
mov
sbb
outs
jno
bound
add
lds
stos
in
int
std
pop
add
sub
out
xor
clc
mov
call
cmp
jo
dec
xchg
aam
dec
dec
jae
dec
inc
or
sub
mov
fnsave
pop
lahf
mov
rol
or
pop
jg
mov
and
inc
stos
or
mov
ss
inc
aas
jae
fs
xor
jmp
bound
pop
pop
repz
in
mov
in
out
dec
aas
mov
sub
dec
adc
jp
dec
add
fstp
pop
nop
in
(bad)
cmc
aad
add
test
mov
imul
ret
lea
repnz
adc
call
(bad)
mov
sqrtps
add
hlt
mov
push
outs
repz
and
jmp
sub
add
es
pop
cwde
or
inc
dec
push
push
fdivr
mov
fwait
popf
xlat
push
mov
adc
fsub
push
mov
addr16
sub
pushf
push
dec
jno
stos
xchg
fistp
xchg
je
xor
pop
jmp
std
cmp
stc
loopne
mov
popf
cld
daa
ins
addr16
add
xor
mov
rcl
mov
sub
je
dec
in
std
sub
mov
lock
xchg
in
jb
jmp
inc
jmp
fcmovnbe
lahf
out
loope
jmp
mov
(bad)
(bad)
pop
adc
ror
push
test
inc
fxch
call
das
or
push
cs
or
pop
add
mov
call
jle
inc
es
pop
push
ins
movs
sahf
clc
movs
adc
ds
xor
inc
(bad)
mov
add
enter
push
pop
test
leave
ins
popf
sbb
xor
mov
test
sar
mov
fst
pusha
rol
loope
in
jmp
sub
mov
and
sub
inc
stos
mov
mov
xlat
jne
cmp
leave
dec
inc
loope
cdq
cmp
std
sub
outs
test
ror
aaa
xchg
into
mov
(bad)
(bad)
pushf
dec
dec
inc
scas
dec
adc
shr
pop
sbb
aaa
add
xor
cmp
aaa
and
adc
push
inc
fucomip
mov
hlt
pop
shl
cdq
pop
popf
ds
adc
out
cdq
popa
mov
sub
xchg
sub
sub
outs
out
cmps
in
mov
and
mov
dec
xor
xchg
scas
lds
mov
adc
mov
pop
loopne
dec
push
and
jecxz
cmps
stos
(bad)
test
jg
xchg
mov
dec
sub
cmps
xchg
imul
ds
movs
in
cdq
pop
fist
cmp
adc
sub
push
mov
or
dec
mov
xor
dec
in
mov
dec
and
jns
ds
xor
sbb
jnp
data16
mov
xchg
outs
div
mov
mov
pop
inc
(bad)
cmp
lods
cmps
dec
mov
gs
xchg
popf
test
shl
in
inc
enter
je
push
out
scas
dec
scas
push
pop
sbb
cmp
pop
sub
out
push
das
mov
jmp
adc
xrelease
xchg
sub
les
and
daa
mov
call
inc
pop
pop
mov
lds
sub
mov
mov
mov
push
mov
or
and
adc
mov
pop
mov
cli
dec
jb
xor
cmp
gs
aad
jle
mov
shl
ja
pop
outs
enter
loop
sub
push
mov
push
out
or
or
sub
stos
out
dec
call
pop
and
and
retf
cmps
xlat
dec
push
jmp
or
dec
imul
test
pop
pop
call
jl
jae
cdq
dec
mov
sbb
in
jns
mov
inc
iret
jo
test
mov
ds
cmp
shl
inc
call
nop
ficomp
test
lahf
xor
xchg
dec
popa
aad
adc
repnz
adc
jp
out
(bad)
loopne
pop
push
xchg
loop
ds
cmp
add
out
adc
mov
pop
pop
xor
(bad)
xor
xchg
dec
mov
sub
js
pop
out
inc
ss
sub
fisub
and
fcom
dec
push
aaa
inc
adc
cli
adc
dec
popa
push
sbb
in
lods
aas
(bad)
out
call
test
sub
sub
clc
test
rcr
ret
cwde
addr16
lock
and
not
popa
data16
push
jmp
dec
mov
jae
sbb
sub
xor
fiadd
lahf
lea
adc
test
push
mov
sti
(bad)
outs
fbld
(bad)
xor
add
data16
push
mov
outs
sbb
rcr
inc
push
dec
loopne
xchg
pop
mov
sub
and
ficom
dec
sahf
imul
xchg
dec
into
add
or
ds
int3
inc
das
cmps
pop
aas
add
ficomp
lods
int3
pop
cdq
push
ret
or
das
jns
fdiv
dec
sbb
and
xor
jmp
pop
dec
mov
jne
pop
add
add
sbb
adc
mov
aaa
jle
xor
test
fadd
push
shr
cwde
mov
pop
jge
fcomip
jne
jno
ds
scas
sub
cmp
xor
mov
call
mov
jmp
pop
test
lds
mov
and
or
lds
out
repnz
dec
and
xor
stos
popf
aad
pop
mov
push
sbb
nop
ins
mov
int3
outs
mov
dec
xchg
out
push
dec
add
clc
pop
daa
pop
mov
xchg
icebp
and
test
xchg
xchg
call
adc
jae
mov
stc
jns
dec
cmp
inc
rcl
addr16
mov
mov
loop
and
inc
and
sar
pushf
mov
fs
sub
add
mov
adc
scas
mov
and
movs
inc
jle
push
jg
and
mov
ficom
adc
push
or
push
pop
test
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
push
inc
out
out
dec
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
inc
xchg
or
inc
ja
dec
dec
mov
inc
xchg
rol
je
and
or
popa
je
ja
nop
movs
push
mov
xor
out
mov
inc
cmp
inc
clc
jmp
add
loopne
ret
or
push
popf
aas
sbb
je
cld
mov
or
sub
xchg
rcl
mov
inc
dec
bswap
dec
sar
jns
ins
fld
cmp
jne
or
call
jmp
std
sahf
add
sub
cdq
pop
mov
xor
lock
xchg
mov
in
les
jmp
gs
push
adc
sbb
ins
cwde
mov
lock
xchg
pop
jne
pop
jne
xlat
mov
out
or
xchg
clc
xchg
mov
jnp
loop
(bad)
sbb
sub
mov
lods
(bad)
cmp
jnp
push
ja
lahf
mov
imul
stos
in
adc
in
xchg
xor
pop
out
and
xchg
adc
inc
iret
pop
fst
mov
loope
dec
je
and
ret
sbb
mov
ret
add
cmp
inc
lock
inc
cvtps2pi
adc
in
(bad)
add
into
and
fist
nop
jecxz
mov
aam
pop
stos
push
push
ins
test
fisub
push
xor
shl
dec
shl
mov
cs
std
jecxz
arpl
xchg
xchg
fmul
sub
in
dec
sub
std
ret
fadd
cmc
pop
add
fs
mov
sar
mov
mov
out
mov
cld
rcl
test
iret
and
mov
dec
gs
gs
imul
dec
out
loop
sbb
inc
and
push
pop
fs
into
ss
xor
jp
mov
cs
inc
sbb
dec
xlat
jp
bound
movs
jmp
std
dec
sub
hlt
mov
jl
dec
push
loope
mov
fwait
pop
(bad)
jle
mov
pop
xor
sti
call
scas
fucom
ins
jmp
lahf
mov
and
xchg
jbe
ret
jg
fild
jnp
call
into
or
jmp
test
and
jg
or
adc
in
js
dec
inc
pop
push
sub
jmp
lds
arpl
jae
rol
mov
out
call
movzx
mov
and
ret
pop
mov
jb
dec
mov
scas
xchg
nop
retf
inc
lods
cmovbe
inc
ret
or
daa
shl
iret
mov
xchg
inc
fisttp
mov
rcr
sbb
sti
lds
sar
or
out
fnsave
jmp
shr
aam
ret
cmc
adc
lods
xchg
mov
(bad)
div
sahf
popf
xlat
push
mov
push
add
sbb
mov
aam
sbb
pop
xchg
add
dec
xlat
inc
mov
popa
dec
pop
xchg
sub
(bad)
dec
rol
xor
adc
mov
js
retf
mov
dec
(bad)
xor
xor
mov
xchg
mov
pop
outs
iret
cmp
sti
or
movs
leave
cmp
into
mov
and
jns
or
sub
dec
jecxz
dec
jnp
stos
jmp
adc
xchg
call
call
sub
mov
jmp
fidivr
cmc
mov
adc
mov
sub
je
scas
ins
pop
xchg
xor
ds
push
loope
jae
jmp
sub
cmp
sbb
in
std
or
fsubrp
and
bound
sub
pop
and
sbb
mov
lods
dec
mov
mov
loopne
and
mov
push
dec
mov
xchg
out
mov
dec
imul
sbb
clc
mov
jne
nop
mov
cmps
pushf
in
mov
enter
fdiv
jg
js
les
popf
and
and
jp
dec
cmp
test
pop
int
pop
repnz
dec
lock
mov
pop
and
in
push
pop
jno
stc
cmp
jp
jmp
mov
je
pop
lock
inc
and
add
mov
lods
hlt
pushf
jle
sub
pop
mov
cmp
fadd
jo
pop
jbe
inc
jl
fidiv
mov
xor
outs
lock
cmps
or
popf
xchg
inc
stos
mov
mov
sbb
sub
or
sub
pop
outs
xlat
mov
cld
xor
cmp
adc
pop
cmc
movs
adc
les
dec
(bad)
test
pop
out
loope
sub
gs
mov
dec
addr16
enter
adc
sbb
mov
cmp
addr16
leave
adc
cmp
lahf
xchg
cs
mov
xor
fldenv
adc
push
retf
ins
stc
jns
ja
push
xchg
push
(bad)
inc
frstor
(bad)
inc
call
es
std
test
jnp
ret
or
in
jmp
dec
retf
xchg
stc
mov
js
sti
out
push
div
std
jae
push
mov
cmp
dec
mov
out
jp
test
sbb
or
mov
imul
push
paddb
sahf
fnstcw
push
sahf
cmc
mov
adc
push
jp
dec
addr16
mov
mov
(bad)
fcomp
jle
aam
jmp
pop
add
or
pusha
psubusw
ja
sub
sbb
sub
mov
(bad)
out
cmp
xchg
jae
add
add
inc
lds
inc
lds
test
jle
inc
pcmpeqd
xor
jnp
jmp
sbb
cmp
out
mov
mov
xchg
inc
retf
mov
cmc
inc
aaa
aad
dec
call
cmp
aas
mov
inc
dec
stos
cli
out
sub
out
sbb
add
test
loop
imul
pop
add
xchg
test
fsub
imul
mov
dec
aas
repnz
sar
mov
addr16
in
data16
cmp
push
sbb
call
mov
bound
xlat
cmp
gs
retf
hlt
push
xor
mov
cmp
push
xchg
xchg
test
inc
mov
mov
mov
idiv
scas
leave
int
sbb
add
mov
xchg
iret
jge
cmp
inc
jbe
arpl
loop
sub
lfs
outs
fisttp
sbb
repz
mov
jmp
push
pop
push
dec
(bad)
fstp
aam
jnp
shl
sar
mov
mov
sahf
cs
jge
lods
xchg
ror
sbb
retf
inc
shl
and
in
ja
sar
cmps
das
sti
shr
push
dec
adc
xor
idiv
loope
adc
push
movs
out
mov
jnp
(bad)
sahf
push
or
ret
stos
hlt
bound
sub
inc
xor
and
mov
mov
push
dec
adc
in
sbb
sbb
in
inc
rcl
jp
fbld
movs
mov
(bad)
(bad)
pop
mov
jmp
les
pop
sub
and
pop
push
add
call
test
std
arpl
xchg
ret
push
add
inc
adc
mov
mov
cmp
mov
cmc
inc
pop
hlt
inc
xchg
lods
cmp
int
mov
fdiv
es
jns
fdivr
pop
lahf
leave
in
mov
inc
scas
fsubr
jo
retf
call
inc
in
adc
mov
pushf
mov
ret
pop
push
ret
mov
and
repnz
xor
mov
popf
es
jnp
pop
mov
pop
cdq
arpl
push
lods
aad
ss
call
icebp
mov
std
xchg
xlat
mov
and
pop
xor
mov
cs
mov
out
call
and
aam
gs
sbb
test
test
imul
dec
sahf
rcl
je
test
into
jae
mov
xor
adc
jbe
iret
clc
mov
mov
pop
div
out
lds
lods
adc
pushw
fdiv
mov
scas
adc
mov
ja
fistp
sub
dec
out
and
lods
jne
stos
aas
scas
pushf
push
pop
les
jp
sti
loopne
sub
ins
push
push
fs
xor
in
scas
cs
packuswb
jmp
xor
rol
sub
lea
sbb
or
in
or
cmp
aaa
repnz
sti
pop
xchg
fwait
leave
xor
(bad)
fstp
mov
and
nop
movs
or
dec
lahf
or
das
cld
jne
jns
outs
(bad)
ja
jmp
sbb
stc
pop
xchg
bound
dec
sub
ret
enter
push
xor
sbb
out
es
xor
mov
pop
inc
(bad)
in
adc
shl
inc
sbb
popf
out
call
push
ror
pop
cli
push
sti
shl
or
fimul
aad
adc
sahf
ja
ja
add
clc
mov
shl
sahf
push
out
jecxz
or
add
mov
mov
mov
stos
xor
and
or
das
cmp
adc
(bad)
jp
and
into
mov
inc
je
mov
aam
aaa
mov
scas
inc
icebp
pop
pop
pushf
jp
xchg
mov
sbb
rcl
mov
sbb
mov
ja
in
dec
and
push
cli
inc
adc
cmp
test
mov
and
shl
jmp
test
fsub
fdivp
icebp
stos
and
(bad)
mov
xchg
pop
adc
mov
fst
mov
sub
ret
xor
mov
push
inc
out
or
add
mov
xor
mov
sti
or
lods
add
xchg
adc
sbb
or
xor
or
(bad)
xchg
or
outs
mov
jb
inc
add
jno
add
add
shl
jmp
into
test
(bad)
retf
jmp
fnstcw
cmp
dec
push
dec
clc
idiv
pop
push
(bad)
jg
mov
jle
adc
data16
sbb
ja
xchg
inc
arpl
addr16
sbb
rcr
and
pop
pop
add
les
repz
mov
xor
rcr
or
sbb
xchg
sbb
out
push
or
adc
mov
add
dec
jbe
mov
pop
xlat
lods
push
sub
idiv
invd
push
xchg
pop
pop
jmp
mov
xor
imul
ds
xor
adc
not
xor
or
hlt
iret
leave
xor
inc
cmp
(bad)
fisubr
aas
and
or
loop
(bad)
(bad)
mov
jle
sti
jp
test
adc
xchg
jmp
fs
pop
stos
cmovbe
inc
aas
xchg
enter
scas
mov
test
repz
shl
mov
xchg
nop
es
push
or
sbb
dec
fldenv
and
push
xchg
fisub
sub
nop
(bad)
iret
(bad)
ret
mov
in
inc
int
mov
inc
(bad)
cwde
(bad)
push
mov
int
lods
aam
shl
mov
dec
dec
inc
pop
jo
fsubr
(bad)
int3
addr16
cmp
dec
pop
adc
movs
sub
pop
fnstenv
sbb
(bad)
(bad)
xor
jmp
rol
add
test
int
aaa
jne
mov
popf
sbb
push
in
pop
gs
and
mov
les
ins
dec
pop
sahf
sar
sub
ret
mov
cmp
and
mov
icebp
pop
dec
int
cmp
bound
xlat
call
and
xor
mov
aaa
sbb
push
mov
mov
jb
xchg
dec
rcl
repz
inc
idiv
sub
dec
xchg
and
xchg
shl
ja
idiv
daa
gs
fidivr
aad
cmp
sbb
hlt
push
pop
je
mov
inc
mov
sbb
mov
xchg
lods
mov
sub
cmps
push
lock
jmp
mov
pop
xor
xor
outs
into
into
push
add
inc
jne
inc
(bad)
mov
mov
loopne
or
ins
(bad)
fwait
sbb
jno
push
mov
sub
mov
lods
cld
cmp
mov
jp
iret
lds
inc
mov
mov
fistp
addr16
push
or
jge
mov
pop
add
dec
sub
mov
popf
rcr
jge
cmp
and
nop
test
les
push
mov
pusha
inc
push
iret
jbe
outs
pop
and
xchg
mov
xor
es
jae
pop
aad
popf
and
push
sbb
sbb
jno
xlat
push
cmp
mov
arpl
cs
mov
out
or
std
in
loop
and
and
mov
push
cmp
and
shr
dec
dec
and
add
push
lahf
cmp
push
out
shl
into
pop
jne
data16
jg
dec
lds
push
in
outs
dec
inc
repnz
jmp
pop
aaa
push
mov
repnz
cli
jbe
mov
sbb
dec
(bad)
xlat
inc
call
cmp
(bad)
and
clc
jbe
pushf
mov
(bad)
or
jne
fnstenv
into
(bad)
sbb
(bad)
icebp
js
mov
fprem1
pop
cmc
nop
(bad)
fwait
inc
fwait
pop
cmps
or
lea
sub
sbb
fiadd
push
movs
shr
push
retf
jno
jno
cmp
or
pop
and
ret
test
mov
dec
sub
jp
add
fld
cs
and
mov
push
lea
xchg
lods
sti
scas
and
push
ins
dec
jge
(bad)
std
mov
push
cmp
das
mov
lods
stc
mov
dec
lods
mov
sub
jae
sbb
dec
imul
jp
dec
dec
fcomp
dec
shl
ins
imul
inc
xor
xor
adc
mov
les
call
pop
movs
xchg
pop
popf
ffreep
mov
rol
xor
lds
or
aas
icebp
iret
mov
sbb
loope
cmp
repnz
popf
clc
cs
inc
and
hlt
(bad)
lock
jmp
cld
jae
or
xchg
pop
mov
call
ss
call
jmp
jns
(bad)
loope
mov
test
out
cwde
dec
jl
shl
push
sub
sahf
lods
cwde
dec
mov
call
cmp
mov
call
addr16
retf
mov
lahf
mov
push
mov
push
adc
push
inc
xor
not
xchg
(bad)
rcl
push
fs
ret
jge
jmp
mov
test
test
(bad)
xchg
enter
es
repnz
mov
sar
dec
inc
imul
jmp
lods
jle
push
mov
mov
stos
shr
retf
aas
push
(bad)
mov
push
and
out
xchg
mov
mov
mov
xchg
xchg
int3
pop
xor
js
and
jne
cmp
fistp
js
lods
in
adc
rcr
in
and
cs
push
sar
dec
sub
push
(bad)
mov
mov
inc
jo
mov
cdq
inc
or
pop
or
rcr
test
add
repnz
push
cmps
loopne
xchg
sbb
(bad)
cs
retf
xchg
cdq
nop
test
ja
add
and
pushf
daa
or
xor
outs
not
mov
lea
mov
push
ja
push
aad
rcl
dec
cmps
out
pop
into
cmp
mov
push
or
pop
bound
clc
mov
push
movs
inc
xchg
push
les
(bad)
cmp
call
push
(bad)
stos
push
daa
cmp
(bad)
stc
out
jg
stc
out
jg
pop
add
or
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
int3
test
or
dec
jmp
cmovns
nop
out
push
jmp
adc
(bad)
push
dec
out
adc
jae
(bad)
out
push
add
lahf
ss
or
imul
test
pop
ficom
daa
mov
mov
call
mov
ds
enter
xchg
mov
cmps
jne
push
cmp
ret
repnz
mov
(bad)
test
xlat
(bad)
lea
arpl
mov
inc
movs
jl
(bad)
retf
pop
inc
or
adc
or
movs
cmp
js
xchg
or
test
(bad)
leave
push
or
outs
and
ss
push
in
aaa
xlat
movs
or
js
pop
movs
pop
dec
outs
xchg
ins
movs
test
addr16
fisubr
xor
jo
stc
sti
and
sti
in
pushf
mov
xchg
(bad)
les
mov
das
in
loope
xchg
iret
pop
rol
sahf
out
inc
mov
scas
adc
dec
or
in
stos
xor
aam
mov
push
mov
repz
loope
loop
ret
(bad)
mov
loop
cmp
ret
cmps
mov
inc
or
jg
lock
xchg
clc
sbb
xor
xor
bound
aam
(bad)
cli
jnp
ins
ds
dec
jae
inc
js
dec
fcmovnb
cmc
lock
leave
out
mov
lods
repnz
outs
mov
(bad)
mov
aas
and
sbb
adc
and
sbb
inc
cmp
ins
mov
pushf
mov
or
xchg
and
jns
es
jns
sbb
js
mov
jmp
test
leave
push
mov
in
(bad)
retf
adc
iret
dec
jge
fnstenv
outs
aad
loopne
adc
daa
ss
aas
sbb
stos
(bad)
retf
imul
dec
mov
popa
rcl
loop
cmp
cmp
xchg
inc
sub
push
cld
popf
int
sub
sub
sub
int3
jae
push
mov
ja
mov
push
pop
movs
inc
int
push
xchg
mov
pushf
aad
bound
sbb
ja
(bad)
test
and
je
xchg
pop
mov
popf
test
int3
push
ja
adc
scas
les
xor
out
pop
popf
idiv
or
(bad)
lock
sub
rol
push
adc
movs
jp
dec
popa
ins
add
stos
pushf
sub
popf
sub
(bad)
stc
inc
mov
ins
popa
push
(bad)
mov
test
in
fsubr
jns
push
adc
loopne
add
in
repnz
(bad)
jae
(bad)
mov
cmps
lahf
sar
cmp
das
(bad)
ss
rcr
add
add
inc
loopne
sbb
fsub
mov
mov
sub
adc
pop
iret
jmp
jbe
fdivr
ja
inc
push
jmp
push
movs
call
repnz
scas
mov
and
pop
test
pushf
loope
imul
(bad)
xchg
ret
inc
jnp
call
cwde
retf
cmp
xchg
or
cmp
cmc
add
loop
push
iret
(bad)
retf
sub
aam
jne
jmp
mov
gs
xlat
imul
sahf
jge
and
in
pop
or
add
mov
mov
cmps
mov
cmp
ins
gs
fcmovnbe
ja
jl
xor
dec
fs
cwde
jp
inc
mov
inc
pop
adc
dec
jae
(bad)
lock
mul
pop
repnz
cs
dec
xchg
dec
aaa
push
neg
daa
addr16
iret
jp
stos
inc
fcomi
xchg
push
jle
mov
sahf
jmp
test
fidiv
dec
adc
shr
jbe
lea
inc
scas
test
adc
test
ror
retf
adc
jae
jo
cld
clc
jne
adc
fisubr
ja
xor
or
pop
ret
dec
pushf
xchg
mov
push
pusha
sbb
aam
add
sub
xchg
pop
loop
sub
je
cmp
mov
call
ret
jb
jnp
xlat
mov
rcl
sbb
lods
stos
sahf
sub
lahf
mov
and
ins
dec
rcr
jle
push
jle
lods
outs
dec
pushf
xchg
pusha
xlat
fwait
adc
sahf
add
icebp
mov
xchg
push
out
mov
xor
popf
call
adc
loop
sbb
push
jg
pusha
sub
dec
sub
inc
dec
repnz
shr
loopne
cmp
push
call
mov
mov
(bad)
stc
scas
or
push
sbb
mov
xor
das
stos
or
int3
in
loope
aas
arpl
dec
div
add
popf
jl
xor
pop
mov
(bad)
mul
xchg
pop
jmp
rol
adc
fwait
in
adc
fst
mov
mov
cmp
jge
jl
pop
mov
add
cmp
cs
mov
(bad)
push
fidivr
sub
mov
mov
repz
fcomp
lds
hlt
sbb
iret
adc
aad
sub
sbb
jb
loop
(bad)
ss
dec
xchg
movs
movs
push
cmp
movs
cdq
xor
gs
imul
(bad)
retf
jmp
repnz
pop
icebp
add
int3
(bad)
jae
fiadd
mov
popa
sub
cld
pop
popa
or
dec
mov
mov
mov
or
pop
pop
fsub
nop
(bad)
stc
jae
aad
pop
in
das
outs
loope
ss
jae
mov
add
adc
or
loopne
mov
(bad)
pop
fistp
stc
mov
push
sub
add
(bad)
adc
movs
xor
pop
rcr
pop
stc
int3
cdq
fisubr
pop
mov
add
mov
pusha
dec
rcr
(bad)
push
jg
jo
aam
jmp
les
mov
ins
arpl
mov
shl
cs
sbb
inc
lea
popf
mov
mov
inc
add
retf
daa
pop
push
test
sahf
lods
test
out
iret
add
jecxz
fld
adc
xchg
popa
aam
call
push
cmp
pop
pop
loop
sbb
push
sbb
into
sar
pushf
sbb
call
mov
loopne
outs
fnstsw
jge
imul
clc
(bad)
xor
out
shr
or
xchg
cld
ret
xor
retf
dec
cmps
cmps
cdq
inc
dec
cs
xchg
xchg
ss
iret
xchg
jg
adc
mov
inc
or
dec
mov
mov
jns
out
mov
sbb
sahf
inc
jmp
mov
fnstsw
mov
gs
push
sbb
mov
push
cmp
and
(bad)
or
pop
ins
aam
mov
push
rol
jg
lea
adc
mov
push
mov
xchg
ror
xchg
fdiv
mov
pop
mov
je
pop
nop
add
mov
iret
mov
cli
cmp
sbb
jge
jo
cmps
and
jns
stos
in
shl
add
cmp
cli
fwait
cli
xchg
mov
mov
inc
inc
lods
lahf
push
outs
aam
sbb
inc
(bad)
(bad)
and
adc
rcr
sti
stos
mov
shl
pop
xor
xchg
fld
xor
ins
push
mov
dec
mov
rcr
adc
cmp
sbb
or
inc
mov
in
nop
or
and
fsubr
rcr
xor
repnz
inc
retf
test
sbb
es
dec
lock
adc
and
aas
cmp
sbb
sub
movs
inc
lods
sti
pop
cmp
loopne
bound
movs
mov
adc
sbb
retf
push
cmps
cmp
jmp
inc
repz
pop
and
push
lahf
aad
or
push
in
fnstcw
xlat
dec
aad
data16
shl
add
or
vmovmskpd
jp
jae
loop
lods
xchg
mov
sysenter
js
ret
push
jne
mov
das
fwait
sbb
sub
mov
dec
jg
xchg
popa
loope
adc
cdq
jmp
(bad)
into
popa
idiv
cwde
inc
(bad)
mov
movs
xchg
jmp
sti
loope
shr
shr
jg
adc
jb
and
cmp
fwait
cld
xchg
shl
rcr
push
mov
and
xchg
xor
stc
adc
scas
xchg
(bad)
retf
leave
(bad)
fwait
push
enter
repz
mov
test
mov
mov
pop
cmps
pop
sbb
jne
jg
xor
xchg
ret
shr
jg
mov
int
shr
mov
jne
cmp
mov
dec
mov
xchg
out
jmp
rcr
out
xor
mov
fistp
outs
das
jg
imul
xchg
mov
jmp
adc
push
je
aam
mov
jg
xchg
les
cs
test
dec
stos
pop
cmp
iret
scas
adc
mov
xchg
mov
add
outs
cmp
addr16
mov
mov
iret
add
jmp
inc
inc
pop
cdq
mov
push
mov
fmul
gs
add
or
daa
(bad)
lods
je
xchg
enter
lds
mov
loopne
enter
dec
(bad)
sahf
push
js
pop
sbb
inc
mov
rcl
push
mov
hlt
int
clc
mov
jne
and
mov
fild
mov
pop
repnz
cs
ins
and
int3
pop
pop
xchg
push
mov
xor
dec
aas
cmps
adc
jmp
xor
call
xchg
xchg
or
jp
xor
cwde
push
mov
jae
mov
and
scas
lahf
ins
pop
or
in
add
fld
out
push
pop
mov
shl
mov
call
xchg
xchg
std
fcomp
dec
xor
xchg
sbb
dec
jp
lods
ja
neg
pop
ret
(bad)
ja
xor
iret
or
jmp
call
adc
or
pop
rcl
mov
pop
shr
fwait
push
iret
jge
daa
sbb
retf
out
imul
aaa
or
call
add
sbb
stc
sbb
pop
push
movs
xchg
pushf
jmp
pminub
cmps
in
push
dec
lea
push
push
sbb
mov
dec
(bad)
das
pop
sti
iret
sub
add
out
ja
and
imul
std
out
or
je
cld
ds
mov
je
into
push
pusha
fwait
jge
loope
mov
pop
pushf
test
lock
je
(bad)
jge
mov
jno
retf
ja
sti
lock
cmps
cmp
ins
xchg
xchg
dec
push
fsubrp
push
icebp
mov
int3
movs
jmp
jbe
and
cmc
jp
xor
mov
int3
arpl
test
popf
das
movs
jmp
mov
dec
ret
jae
cmps
adc
out
push
pushf
loop
xchg
push
clc
fmul
adc
out
jl
sar
lods
sub
push
inc
fimul
pushf
mov
mov
mov
fisubr
sub
xor
jecxz
dec
mov
jge
sub
ins
sub
hlt
aaa
jp
ret
mov
mov
stc
mov
fcmovu
rol
jns
mov
mov
imul
cmp
aam
(bad)
jns
out
jne
adc
jo
aaa
sub
je
sbb
adc
fbstp
in
mov
push
fs
lds
ror
mov
cdq
test
sahf
iret
pushf
push
mul
pop
add
xchg
jp
rol
gs
mov
mov
(bad)
jl
imul
sti
xor
adc
pop
lahf
push
add
inc
sub
ror
mov
mov
jno
jno
popf
(bad)
or
sahf
test
and
test
iret
mov
push
imul
fs
xor
div
dec
and
push
fucomip
push
adc
or
cdq
push
xor
repnz
xor
mov
cmc
push
sbb
push
jbe
mov
mov
jmp
inc
jnp
sub
dec
outs
enter
pop
dec
lods
vorpd
aad
stc
xchg
cdq
test
sub
push
(bad)
dec
xchg
jnp
pushf
retf
sub
fwait
pop
mov
fistp
in
hlt
xor
sbb
add
jle
mov
fmul
xlat
shl
and
(bad)
and
xor
jg
ret
dec
adc
pusha
ror
mov
and
leave
test
aas
loope
shl
scas
inc
or
test
jl
sbb
(bad)
aad
and
out
test
dec
data16
in
mov
out
iret
push
cmps
jle
mov
jmp
pop
scas
fdivr
sub
adc
(bad)
int
jp
xor
in
bound
jle
adc
rcl
fsubr
pop
xchg
lods
ds
mov
fldcw
in
cmp
test
lock
addr16
in
jg
lds
rol
dec
outs
dec
sub
in
movs
mov
neg
cli
bound
push
(bad)
cmp
add
fcmovu
mov
(bad)
dec
ins
cmp
push
pop
aaa
xor
sbb
out
sbb
ss
sbb
adc
cmp
aad
push
pop
inc
loope
pop
dec
xchg
(bad)
push
or
dec
enter
fistp
mov
movs
sar
in
xchg
leave
jle
in
std
fisubr
outs
dec
mov
mov
jnp
iret
xlat
popa
int
dec
cmps
mov
fmul
neg
mov
xor
push
loop
xor
mov
out
cli
fstp
mov
or
repz
cmc
lea
cmc
jmp
cmp
test
jg
ror
data16
fs
jl
aaa
dec
aas
cmp
or
jno
adc
clc
and
or
xor
add
mov
sub
mov
aas
add
jns
mov
fwait
and
aad
cmc
mov
xor
test
cwde
(bad)
jae
rol
ret
xor
sub
dec
jge
push
cmp
or
jge
jb
mov
fcom
dec
dec
pop
pop
mov
mov
pop
(bad)
mov
xor
jmp
into
out
xchg
cmp
jl
shr
lds
(bad)
(bad)
in
jbe
shl
in
(bad)
jecxz
cmp
mov
pop
lds
xlat
cmp
mov
sbb
sub
mov
jns
pop
jl
cmp
jmp
or
fnstcw
push
xor
fs
mov
std
cmp
jmp
inc
adc
call
in
rcr
jl
retf
jnp
pop
jecxz
push
aas
pushf
pop
pop
cmps
inc
dec
jnp
(bad)
cwde
das
sub
inc
je
push
mov
push
loopne
js
and
push
inc
sbb
jecxz
sti
inc
popf
sub
movs
out
sbb
and
mov
push
outs
add
sbb
dec
(bad)
sbb
xor
call
cmp
jmp
sbb
das
mov
mov
xchg
mov
sar
fisttp
or
loope
jmp
jl
cmp
mov
xor
dec
aam
stos
imul
and
or
sti
push
enter
add
mov
xchg
cmps
xchg
add
dec
mov
add
pop
xlat
iret
mov
jmp
sbb
fmulp
cmp
dec
shr
xor
sbb
aas
loope
loop
mov
or
lea
jb
js
imul
cmp
sbb
leave
mov
xchg
cs
cs
outs
pop
fadd
and
inc
jb
mov
cmps
sbb
push
jecxz
ficom
fldenv
ins
xor
pusha
lock
aaa
lahf
outs
leave
jp
iret
jbe
and
sub
mov
jae
stc
clc
or
shr
mov
(bad)
inc
in
xor
xchg
jne
mov
ret
dec
scas
iret
xchg
xor
dec
mov
outs
nop
fs
add
in
mov
stos
repz
ja
in
sub
popf
je
lock
neg
cmp
ret
ins
pop
jno
cmps
inc
sbb
adc
iret
aas
(bad)
cld
repz
aas
(bad)
cld
mov
xchg
cmp
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
cmps
(bad)
dec
dec
neg
pushf
out
out
mov
gs
cmp
out
sbb
loope
pop
repnz
jns
add
add
jae
jmp
cmp
div
cmp
cmp
loopne
dec
cld
adc
push
mov
add
xchg
in
pop
xchg
mov
sub
sbb
call
sub
in
and
pop
sub
and
jnp
leave
lock
cli
mov
mov
(bad)
into
mov
mov
xchg
jb
call
cmp
retf
fld
js
stos
cmp
(bad)
jmp
cwde
call
repz
push
fild
test
pop
lahf
fwait
ss
mov
fadd
mov
inc
je
cmps
daa
mov
(bad)
cmps
push
shl
sub
out
jo
jns
lahf
out
rol
outs
sub
call
fld
loope
(bad)
ror
or
dec
mov
psadbw
pop
mov
sub
fs
jl
sub
es
fwait
cs
mov
dec
pop
jb
ds
sbb
jmp
loope
mov
shl
add
stc
mov
xchg
icebp
rcr
test
xor
pop
cmc
cmp
mov
adc
(bad)
xor
retf
push
mov
jg
xchg
rol
adc
push
pop
lea
push
xor
movs
ds
aas
sub
lahf
cmp
cld
fidiv
adc
aad
psubq
xchg
cs
or
add
add
xchg
out
jbe
inc
mov
pop
mov
inc
dec
xlat
xchg
std
pop
cwde
dec
leave
out
jbe
xor
loope
sti
lea
xchg
pop
add
in
jmp
pop
mov
cmp
aad
cmp
fcom
cld
aad
mov
pop
dec
leave
pop
push
or
jno
mov
inc
jo
fbstp
cmps
jmp
cmp
cs
mov
mov
sub
(bad)
mov
(bad)
mov
inc
(bad)
dec
sbb
mov
push
lods
retf
or
ret
xor
mov
cld
addr16
(bad)
and
(bad)
scas
sub
xor
cmp
repnz
jg
push
inc
test
dec
xor
pop
push
std
pushf
pop
jmp
lds
cli
fild
and
push
int
lods
push
xlat
lahf
xchg
mov
loope
je
sub
ins
jb
pop
sbb
sub
int3
push
lock
xchg
and
or
mov
and
lods
cmp
jne
and
xchg
fucomip
popf
dec
inc
add
and
cwde
mov
fld
mov
loop
add
push
aaa
cmp
mov
hlt
inc
mov
sbb
movs
fistp
jmp
mov
jmp
shl
popf
inc
mov
inc
adc
sub
mov
jo
lods
cmps
mov
js
mov
sub
stos
xor
hlt
rcl
vunpcklpd
test
and
lea
aad
or
xchg
cmp
sbb
(bad)
push
push
mov
adc
push
mov
xchg
fwait
ror
mov
out
ja
hlt
aad
jmp
or
sub
in
je
test
cmps
(bad)
cmp
std
pop
jg
neg
pushf
loope
ins
fld
xchg
scas
push
dec
int3
cwde
xchg
push
mov
fisubr
and
and
je
popa
xor
mov
inc
mov
popf
lods
std
sbb
lea
nop
xor
sub
or
call
daa
nop
and
into
ss
xor
daa
pusha
jbe
sub
leave
xor
into
fbld
inc
sub
leave
ins
mov
cmp
js
mov
mov
ds
adc
dec
xchg
in
and
push
mov
dec
jmp
das
sub
adc
mov
mov
sar
bound
dec
movs
enter
cmp
rcl
add
and
ds
outs
ret
xlat
cmps
adc
ret
xlat
fnop
xchg
add
cli
lahf
(bad)
jnp
cli
lods
shl
mov
mov
mov
stos
in
ret
test
mov
mov
inc
and
mov
and
or
jmp
dec
inc
in
jg
js
mov
hlt
jmp
adc
dec
add
retf
mov
rol
nop
pop
shl
mov
test
or
out
fs
rcr
arpl
iret
or
cmp
mov
lods
add
imul
sbb
mov
mov
fsubr
icebp
xchg
ds
sbb
xchg
adc
out
push
mov
cmp
push
sahf
arpl
dec
sbb
xchg
xor
add
adc
xlat
jo
sti
jmp
xchg
xchg
cs
sbb
cmp
dec
cmp
and
cmp
cmps
sahf
movs
dec
shl
clc
fwait
push
xchg
fs
cwde
stos
sub
xchg
sbb
in
mov
xchg
leave
fsubr
and
jl
arpl
xchg
and
dec
cmp
xchg
or
sub
int
xor
out
mov
xor
sbb
pusha
ror
jb
retf
cmp
(bad)
les
sbb
mov
fmul
add
or
retf
xor
(bad)
jmp
mov
movs
xchg
sbb
enter
jge
pusha
stos
mov
gs
add
call
xor
movs
add
nop
xchg
test
sbb
push
jae
pop
aaa
jl
xchg
adc
cs
add
lahf
inc
sub
sub
sti
sahf
add
pop
cmp
xchg
xchg
rcl
rcr
lods
jmp
push
mov
xchg
and
sub
retf
popa
popa
or
js
lods
bound
xchg
pushf
cmps
fadd
scas
mov
push
gs
std
dec
pop
mov
fstp
sub
add
popf
test
lock
out
cwde
dec
pop
ret
lahf
repz
push
repz
push
arpl
jo
xor
ds
jmp
cmps
add
jo
ja
dec
xchg
mov
fisttp
sub
pop
lods
add
sbb
jb
stc
je
mov
arpl
stos
mov
push
rcl
pop
or
popf
mov
jne
mov
jp
cmp
out
mov
test
lods
xchg
mov
xor
inc
out
out
xchg
xchg
addr16
xchg
pop
jle
inc
fwait
les
call
retf
retf
or
jbe
jno
mov
add
mov
inc
mov
(bad)
std
sub
cmps
fldenv
clc
xchg
inc
movs
and
mov
out
pop
rcl
push
(bad)
fidivr
lds
sti
hlt
push
or
pop
or
out
cdq
sbb
mov
add
inc
fwait
dec
xchg
mov
ja
add
add
pusha
lds
pop
jnp
sub
aas
repnz
mov
std
lahf
mov
int
(bad)
(bad)
das
fs
jg
pfrsqit1
jns
mov
ins
sub
xor
sbb
add
hlt
addr16
lods
and
movs
test
movs
jp
add
dec
sbb
daa
or
jecxz
pop
mov
pop
adc
loope
out
jae
pop
add
sub
nop
out
int3
xchg
xchg
in
out
pop
rcl
imul
mov
gs
aam
jmp
dec
or
aam
xor
or
std
jb
in
xchg
inc
pop
xchg
icebp
xchg
cmc
mov
out
imul
sbb
test
and
mov
jmp
or
mov
mov
inc
and
mov
jmp
iret
inc
xlat
mul
fs
rol
mov
push
cmp
call
fisub
repnz
mov
sub
cmp
lea
cs
fucom
adc
jns
nop
jl
push
test
cmps
es
retf
jns
mov
xchg
inc
push
fst
lods
inc
out
into
lahf
sbb
fld
inc
jne
mov
and
movs
mov
xor
lahf
rcl
xchg
fmul
add
(bad)
sar
add
mov
xor
ins
cmps
cmp
push
dec
ins
and
lahf
retf
test
pop
mov
push
mov
loop
aam
aam
push
or
sbb
xchg
out
rcr
aas
xor
loop
fisttp
mov
jp
jno
aam
jno
arpl
push
and
in
sub
mov
jge
pop
mov
shl
push
outs
lock
iret
pop
call
jbe
mov
retf
xchg
mov
mov
inc
inc
mov
outs
lods
js
cmp
imul
mov
clc
mov
jo
mov
mov
mov
sub
pop
mov
jns
mov
mov
cmps
mov
dec
xchg
aad
jb
popf
call
dec
inc
inc
out
fdivr
mov
xor
xor
ds
pop
xchg
mov
aad
sbb
mov
cld
adc
jge
adc
das
pop
inc
dec
call
popa
dec
mov
mov
in
push
add
sub
nop
adc
sbb
jbe
mov
cmps
add
add
cdq
icebp
sub
mov
cld
repz
jg
test
jae
jge
sar
xor
inc
call
push
mov
jl
pop
push
mov
pop
push
cmp
rcl
dec
mov
dec
ss
lock
fucomip
arpl
bound
jbe
push
ins
dec
adc
in
jnp
sbb
imul
add
dec
enter
or
jae
and
sbb
push
cmp
xchg
adc
nop
and
inc
movs
shl
imul
xor
inc
push
mov
xor
ror
repz
lock
rcl
in
pushf
in
scas
lds
out
jo
lea
mov
scas
xchg
push
cmp
mov
mov
mov
jmp
jecxz
mov
clc
push
dec
xor
inc
loope
push
dec
sub
outs
mov
add
jno
push
sti
jnp
ins
sbb
adc
xor
sub
cmp
and
mov
popa
es
xor
dec
jb
dec
and
xchg
sub
scas
cmovns
mov
popf
out
outs
call
daa
loop
pushf
ds
fcomp
out
and
imul
add
mov
aam
das
push
xchg
mov
popa
gs
(bad)
jge
dec
xchg
xchg
mov
mov
push
mov
jecxz
enter
inc
xor
rol
(bad)
sub
fisubr
jle
pop
icebp
ja
mov
cmc
loopne
ficomp
xchg
or
cmp
mov
ja
adc
push
jge
mov
loope
ins
aad
les
fild
pop
retf
dec
aam
sbb
and
mov
scas
test
ja
mov
sti
shl
push
mov
arpl
fwait
push
mov
out
ja
aam
pop
ja
aad
data16
addps
loope
ret
mov
jmp
sub
test
sub
mov
ret
xchg
sahf
lahf
jmp
jb
jo
out
data16
jle
loop
inc
neg
pop
mov
pop
dec
pop
aas
iret
adc
stos
(bad)
mov
bound
(bad)
push
xor
sub
shl
(bad)
fcomp
enter
mov
jnp
leave
repnz
in
mov
dec
jne
ds
dec
fs
add
sub
mov
aad
imul
fwait
outs
mov
mov
je
hlt
test
jmp
sub
pop
aaa
jl
stos
inc
ret
inc
and
leave
dec
add
bound
call
je
inc
sub
shr
push
sbb
call
inc
and
adc
jno
retf
seto
xchg
pop
add
jecxz
mov
or
and
sbb
mov
repz
sbb
or
int3
ds
cmp
ror
mov
mov
outs
jb
mov
xor
test
in
cld
shl
sahf
push
cmp
sbb
jb
mov
hlt
sub
pusha
pop
jbe
push
hlt
loope
jns
jno
loope
adc
push
jmp
ror
repz
pusha
fwait
and
xchg
inc
xchg
or
sbb
adc
add
out
cmc
xor
mov
out
rol
xor
stc
(bad)
push
test
int3
(bad)
sub
add
icebp
cs
sti
cmp
push
cmp
jno
add
call
push
jle
or
aas
in
add
mov
pop
rcr
jne
push
sub
or
icebp
jo
jl
sub
adc
mov
sub
jge
lods
sbb
cmps
mov
add
inc
aas
mov
xchg
push
inc
sbb
stos
add
mov
xchg
adc
inc
sub
int
arpl
mov
add
fdivr
mov
hlt
bound
adc
inc
push
push
xchg
push
and
dec
mov
push
fisttp
and
or
test
mov
dec
xor
add
adc
arpl
call
push
aaa
inc
xchg
sahf
das
(bad)
and
sub
cmp
shl
and
pop
ja
xchg
das
loop
mov
jmp
ds
xor
movs
cdq
stos
cmp
inc
pop
fisubr
and
or
aam
cmp
rcr
dec
cmp
or
movs
inc
shl
icebp
dec
pop
out
mov
mov
fisubr
pop
nop
clc
(bad)
ds
cmp
mov
call
bound
and
pop
fdivp
pop
test
push
dec
xchg
fistp
jnp
or
js
jle
pushf
mov
push
push
(bad)
out
mov
mov
adc
push
jg
call
fwait
addr16
aaa
clc
jle
stc
xchg
sahf
idiv
retf
xchg
xchg
pop
sub
arpl
in
pop
loop
data16
mov
xor
mov
jne
ds
loopne
mov
arpl
std
xchg
dec
ins
daa
sub
test
dec
pop
adc
test
ret
outs
aas
repz
adc
(bad)
test
mov
ret
xchg
xor
stc
sub
in
pop
mov
test
outs
xchg
icebp
cmp
mov
adc
xlat
lods
ins
or
mov
push
and
movs
lods
js
cmp
inc
test
xor
sub
push
xor
bswap
inc
inc
lods
jmp
mov
imul
pop
mov
popa
mul
and
xor
loop
mov
(bad)
mov
hlt
lods
cmp
mov
mov
sub
and
lahf
or
jnp
mov
loope
xchg
dec
cwde
dec
adc
(bad)
sub
adc
pop
gs
outs
fst
ret
mov
bound
retf
ins
es
push
(bad)
push
loop
cdq
mov
stos
lock
sub
cld
lds
popa
push
ss
jmp
dec
outs
and
cmps
xor
dec
cmp
lds
and
fs
into
pop
cwde
call
mov
xchg
xchg
mov
jp
cmps
sub
lock
jg
test
add
scas
int3
cmp
push
adc
loope
div
cs
pop
add
jp
jae
or
les
popa
(bad)
and
out
inc
mov
jno
hlt
test
sub
enter
add
push
in
aad
outs
fs
fs
xor
rcr
cs
repnz
mov
jbe
push
shr
ja
call
clc
or
dec
outs
loopne
data16
mov
fsubr
mov
icebp
or
ret
xchg
stc
jge
loopne
xchg
gs
mov
push
pop
jg
cmp
mov
cmp
mov
xchg
xchg
xor
cwde
jns
adc
inc
adc
push
loop
dec
lock
jp
lds
(bad)
dec
sub
cmp
xchg
mov
cmc
add
int3
test
jg
mov
cdq
fcomp
lahf
jg
retf
scas
sti
jae
sub
mov
xchg
jmp
loopne
jg
stc
out
jg
stc
out
sbb
lock
outs
inc
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
mov
xchg
push
adc
cmps
sbb
jae
jmp
or
mov
adc
cmps
jnp
popf
sahf
idiv
nop
outs
iret
add
nop
lea
add
mov
adc
fdivr
ret
repz
in
data16
sub
mov
(bad)
cli
les
mov
cli
or
push
dec
xchg
scas
cdq
sub
ins
repnz
stc
xchg
clc
popf
dec
inc
push
xor
jo
xchg
jp
aad
add
movs
dec
data16
or
mov
cmp
lods
lahf
test
in
mov
xchg
movs
bound
loopne
ret
inc
xor
sar
jle
sbb
add
add
jge
lods
dec
ss
iret
inc
push
pop
mov
push
mov
icebp
sar
aaa
or
ja
cmc
in
imul
pop
test
xor
popf
jno
test
test
scas
xlat
add
push
sub
add
retf
add
push
call
push
out
ins
enter
loop
outs
fcomp
and
xchg
mov
xor
fs
sbb
pop
je
mov
repnz
pop
loopne
int
inc
mov
aas
fisubr
daa
icebp
push
icebp
xchg
push
hlt
push
out
retf
mov
cmp
dec
daa
cmps
mov
mov
mov
add
pop
fs
repz
xor
aas
jle
mov
mov
lods
add
ror
call
js
pop
sub
leave
jmp
ficom
add
out
sub
sbb
pop
mov
retf
stos
mov
add
inc
in
call
dec
icebp
cwde
xchg
push
test
sub
cmp
xchg
ins
(bad)
or
ret
xlat
inc
sub
scas
sub
in
xchg
pop
xor
mov
dec
pop
popa
lods
sbb
and
(bad)
dec
mov
jecxz
push
fistp
aad
and
or
(bad)
jmp
ins
rcl
out
out
or
jns
sub
and
imul
cmps
sbb
cmp
mov
dec
pop
outs
mov
add
(bad)
sbb
(bad)
bnd
dec
or
sbb
inc
add
or
xor
out
outs
addr16
pop
cmp
mov
dec
(bad)
popf
mov
xor
pop
push
in
mov
(bad)
dec
popa
mov
fmul
call
stc
mov
addr16
int
scas
push
pop
ins
pop
jne
mov
mov
fxch
test
jns
aam
sub
or
arpl
cdq
or
pop
test
xchg
mov
jmp
sti
or
jae
cmps
ret
mov
test
jge
pop
pop
test
cmp
or
sahf
cmp
or
xor
jle
fstp
popf
or
cmc
mov
mov
mov
loop
data16
arpl
xor
pusha
adc
data16
jle
jne
jle
cmps
sahf
ficomp
jb
repnz
and
lds
shr
call
pusha
in
add
xchg
adc
xchg
ins
cld
push
test
lock
ins
loopne
inc
pop
mov
movs
js
mov
loop
fidiv
into
scas
jns
nop
mov
cwde
out
repz
aam
push
push
outs
in
mov
dec
jge
fisttp
inc
lock
sub
rcl
and
sub
sar
xor
cmp
sahf
imul
or
add
imul
imul
push
jge
inc
xor
dec
jne
jnp
pop
test
jne
in
aam
aas
lock
ss
dec
sar
add
leave
outs
dec
lds
push
shl
pop
mov
xor
jnp
push
mov
sub
sbb
loop
jge
rol
push
fdivrp
xchg
aad
gs
and
aam
loopne
fcom
and
arpl
pop
jno
je
mov
sysenter
ss
sti
xchg
int3
inc
cdq
punpckhwd
iret
bound
dec
jno
int
xchg
lock
int
xlat
xchg
loop
mov
push
inc
or
mov
jne
and
push
sub
add
jae
push
inc
pop
sub
shl
mov
in
pushf
xchg
out
push
push
xor
mov
pop
mov
aas
sub
mov
push
mov
xor
cmp
jb
sub
fsub
arpl
jge
stc
loop
dec
and
sub
adc
shl
(bad)
fcmovnb
mov
in
sbb
je
jmp
inc
add
shld
xor
mov
mov
mov
std
cmp
add
push
stc
ins
push
ret
cmp
inc
adc
pop
cmp
js
mov
(bad)
enter
jno
std
sbb
aaa
call
cdq
or
jecxz
and
jp
loopne
inc
sub
push
xor
dec
fnstenv
(bad)
cmps
in
loop
mov
sub
xchg
fcmovnu
adc
cdq
(bad)
stc
sub
xchg
mov
xchg
cwde
rol
push
jmp
jl
out
int3
test
dec
sbb
iret
or
xchg
push
jo
lock
bound
hlt
hlt
into
mov
inc
mov
movs
popa
mov
push
adc
inc
inc
inc
xchg
jns
outs
int
jns
clc
fld
cdq
shr
js
dec
inc
adc
mov
add
pop
scas
adc
ss
sub
mov
std
push
fs
jge
push
mov
shr
les
xchg
shl
xchg
repz
add
out
movs
arpl
pop
inc
repnz
pop
dec
clc
popf
xchg
add
xor
jb
popf
push
fsubr
pop
aaa
les
data16
mov
jge
add
add
cmp
data16
push
cdq
pop
shr
add
shl
lods
dec
push
mov
clc
lods
and
jns
or
xor
sbb
int3
xor
mov
cs
add
mov
xchg
inc
in
out
jmp
adc
sbb
mov
call
push
adc
mul
adc
es
sub
stos
jl
cs
cmps
sub
cmp
ret
sbb
sbb
lods
mov
retf
mov
outs
sbb
mov
inc
inc
ds
stos
jp
mov
mov
and
sub
shr
xchg
js
lahf
cli
std
jb
add
dec
and
cmp
or
ins
retf
xchg
mov
jge
inc
xor
nop
mov
sbb
inc
mov
fbstp
lds
inc
or
dec
xchg
push
popa
push
and
mul
fcmovu
outs
mov
clc
gs
and
pop
push
dec
int3
dec
outs
inc
mov
aas
sahf
out
and
or
push
(bad)
out
pusha
test
cmps
fcomp
xor
scas
jge
push
jmp
jmp
mov
mov
xchg
add
scas
mov
shl
dec
aad
and
xor
add
adc
ds
jle
xchg
mov
cmp
mov
mov
aaa
cli
popa
out
mov
imul
test
and
mov
xor
xor
or
inc
inc
pop
adc
xor
loopne
aaa
scas
cwde
hlt
push
mov
xor
int3
cmps
dec
es
jmp
call
shr
lahf
cld
push
test
outs
mov
ret
or
sub
mov
mov
and
mov
sub
stos
je
xlat
sub
cdq
outs
cwde
pop
mov
mov
xlat
paddsw
adc
adc
or
fdivr
jp
jecxz
xchg
inc
fld
add
xor
loop
lods
xor
jne
dec
imul
mov
cli
cmps
popa
in
dec
loopne
sub
jne
in
aam
mov
sar
imul
inc
pop
loope
cmp
v4fmaddps
ficomp
push
mov
or
in
push
push
scas
xor
sub
test
mov
cmp
cmp
add
and
fwait
mov
out
mov
mov
(bad)
into
and
inc
xor
pop
repz
lea
data16
add
test
(bad)
imul
js
mov
dec
pop
in
in
loop
cmps
mov
xchg
(bad)
xchg
cmp
sub
jnp
inc
imul
stos
sub
sub
in
out
xor
pop
sbb
xchg
sub
jmp
or
jl
nop
sbb
mov
dec
pop
aaa
rol
or
imul
ins
ins
lea
jmp
inc
addr16
and
push
(bad)
inc
(bad)
cld
mov
out
pop
jbe
movs
push
stos
cmp
fcmovb
fwait
mov
sbb
mov
cmp
xlat
mov
mov
sub
leave
out
or
shl
aam
ins
ds
icebp
mov
cli
and
iret
inc
and
ss
xchg
pop
cmps
fidivr
xchg
mov
bound
outs
push
(bad)
jp
inc
fdivr
(bad)
sbb
dec
ret
pop
or
(bad)
movsx
shr
push
push
jnp
cmp
retf
pop
scas
(bad)
mov
rcr
dec
jle
fmul
loopne
jnp
push
add
mov
jne
xor
in
test
aaa
cmp
adc
dec
scas
push
mov
push
inc
fcomp
repnz
xor
push
xor
ss
sub
test
jmp
rcl
int
js
jae
and
pop
mov
cmp
push
hlt
neg
mov
xor
in
inc
js
push
(bad)
ficomp
hlt
leave
mov
sbb
jno
and
push
add
jg
lods
hlt
bound
ret
inc
fstp
daa
cs
fcomp
mov
lods
mov
movs
or
test
dec
repnz
loop
dec
or
outs
ja
adc
xchg
mov
int3
sub
mov
add
mov
dec
or
nop
bound
cmp
stos
push
dec
pusha
sub
mov
popa
xor
or
mov
div
fisttp
sbb
mov
cmps
sub
ret
lds
outs
xchg
cmc
xchg
jb
fisubr
adc
jmp
(bad)
cmp
cmp
daa
jmp
dec
mov
xor
(bad)
dec
dec
clc
stos
addr16
push
xchg
cmp
inc
out
dec
je
lea
fistp
mov
add
inc
rcr
and
pop
xor
ret
mov
cmp
jno
dec
sbb
sbb
pop
and
and
not
add
ins
test
stos
fdivrp
movs
cli
js
sub
enter
xchg
lea
jnp
outs
aaa
push
mov
mov
sub
imul
mov
stc
add
xchg
mov
es
idiv
cmps
cdq
inc
movs
dec
out
cs
fild
call
or
fucomp
sub
daa
loope
adc
outs
out
imul
dec
gs
and
rcl
leave
add
push
scas
ss
jmp
cs
cmp
inc
inc
jge
mov
loopne
xchg
stos
add
sub
push
rcr
mov
loope
call
sar
add
fmul
mov
pop
xchg
inc
or
xchg
retf
cmp
and
cmp
out
div
jo
test
pop
sub
and
(bad)
push
mov
or
sub
xchg
push
das
outs
std
push
and
stc
aad
push
cmp
jbe
inc
in
div
xor
pop
jecxz
cmp
daa
adc
push
rcr
xchg
test
lock
sbb
and
adc
and
cmp
lds
fwait
pop
mov
outs
sbb
add
sbb
mov
sar
idiv
jg
mov
shl
out
sub
push
hlt
mov
push
jno
cmp
dec
push
in
iret
aaa
or
mov
jno
outs
xchg
jb
jp
mov
int
pop
bound
pop
sti
sub
sub
shr
movs
ret
je
rol
pop
jne
and
mov
test
mov
jmp
inc
xor
in
cld
loopne
in
and
xor
pop
cmp
cmp
sbb
ret
rcr
dec
mov
or
shl
std
cmps
movs
mov
mov
aas
dec
sbb
loop
and
cmp
inc
stos
nop
cmp
cmp
nop
push
sahf
call
mov
adc
jle
int3
into
push
jns
cmps
mov
xor
je
cwde
test
jb
loopne
mov
cmc
mov
push
jbe
dec
and
repz
retf
mov
or
ins
dec
xchg
sub
mov
adc
mov
popa
mov
mov
jmp
aad
adc
cmp
mov
sbb
(bad)
clc
lahf
rcr
in
push
in
push
cmp
out
cdq
xor
sbb
push
clc
jbe
dec
jg
sar
arpl
js
daa
cmp
stc
xor
out
into
xchg
fsubr
xchg
mov
pop
cs
sbb
ds
test
cmp
add
jecxz
rol
inc
rcr
ds
clc
cdq
mov
mov
add
jp
xchg
jne
mov
pop
fdivr
cmp
std
dec
outs
sub
mov
movs
imul
std
push
xchg
hlt
push
jge
mov
movs
int
imul
cmps
call
push
lods
mov
xor
adc
add
push
jle
jno
test
mov
rcl
hlt
scas
scas
pop
lock
xor
out
mov
data16
movs
pop
mov
ss
pop
ds
cs
ret
hlt
cmps
sbb
inc
icebp
mov
sbb
fwait
cmp
into
jno
ins
and
jbe
scas
out
retf
pushf
mov
jmp
fimul
sar
push
rcl
xchg
mov
mov
stos
mov
addr16
nop
bound
sub
jnp
mov
scas
cmp
mov
call
and
lahf
fisttp
push
out
inc
adc
sbb
ss
loope
dec
stos
xchg
xchg
pushf
fs
out
add
stc
mov
movs
je
call
and
xchg
into
inc
inc
mov
dec
ficom
xchg
pop
dec
push
jb
nop
popa
xchg
sti
test
into
test
imul
(bad)
in
hlt
dec
adc
test
aad
add
pop
loopne
mov
fst
jns
cmp
inc
cmp
xchg
adc
bound
ror
inc
jae
cmc
pop
scas
sbb
mov
in
and
loope
push
out
mov
mov
adc
jb
das
ds
pop
test
idiv
ret
ss
push
xor
mov
mov
daa
data16
mov
jns
dec
retf
clc
aad
jno
mov
lock
sbb
push
push
push
repnz
scas
mov
js
inc
mov
mov
fisub
push
sahf
(bad)
aad
xor
xor
mov
mov
nop
mov
stc
or
mov
cmp
ror
cmps
sub
cli
int3
cmp
fdivr
das
in
sub
sbb
mov
xchg
(bad)
fsub
icebp
fld
mov
add
nop
aaa
cli
dec
or
mov
adc
jo
xchg
pusha
jge
xchg
movs
mov
(bad)
sbb
test
lods
ret
xor
push
cmp
je
xor
out
xor
xchg
mov
xor
xor
sub
sub
movs
or
and
pop
mov
nop
jp
js
jnp
adc
movs
mov
(bad)
lea
sbb
or
and
dec
mov
mov
push
shl
mov
xchg
jo
movs
iretw
sub
nop
retf
push
arpl
xchg
lods
and
cmp
cmp
mov
pop
lock
cmp
mov
mov
repz
cdq
mov
call
out
jg
stc
out
sbb
lock
icebp
mov
jge
ffree
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmps
fucomi
jbe
jmp
fidiv
mov
bound
call
fstp
jno
jno
(bad)
push
xchg
fwait
popf
popa
mov
std
and
sahf
pop
add
out
iret
adc
cdq
mov
xlat
test
push
fcom
shl
mov
rcl
outs
sub
sub
xor
adc
mov
imul
neg
es
sar
or
jp
mov
push
cdq
popf
xor
mov
movs
mov
in
ror
cmp
rcl
mov
outs
retf
ins
push
stos
lods
pushf
fidiv
gs
popa
jmp
test
cmp
pop
cmp
aam
or
dec
sbb
shr
jns
(bad)
xor
mov
test
popa
or
fmul
icebp
dec
mov
fs
repz
iret
(bad)
bound
inc
jno
push
mov
fwait
fwait
mov
aaa
mov
lods
call
dec
dec
jbe
(bad)
test
fcmove
jno
aad
pop
mov
retf
pusha
push
addr16
out
mov
adc
arpl
adc
les
retf
jle
sti
ret
xor
pop
nop
daa
pop
dec
aad
(bad)
addr16
push
cmps
mov
pop
loope
dec
jmp
ss
(bad)
aam
mov
sub
into
mov
test
sub
popf
sub
xchg
mov
(bad)
in
xor
aaa
cmp
aas
scas
mov
mov
mov
mov
xlat
hlt
ss
rcr
and
xchg
or
jno
cmp
test
(bad)
into
out
dec
jl
fwait
sar
or
dec
call
jo
scas
lods
mov
iret
jecxz
les
add
sahf
mov
add
mov
or
js
(bad)
push
xor
bound
retf
es
mov
mov
jmp
xor
jecxz
aas
int3
xchg
sub
(bad)
nop
mov
cmp
mov
xchg
jle
hlt
inc
aas
push
arpl
call
mov
(bad)
sahf
cmp
int
xor
xchg
retf
xchg
out
xchg
out
jbe
cmps
fldenv
and
push
sbb
(bad)
adc
ror
test
repz
jb
xchg
jmp
mov
adc
or
jecxz
add
pop
jl
pushf
sub
retf
in
stos
mov
lea
push
dec
fnop
shr
shl
arpl
icebp
lods
and
mov
lods
shl
pop
fsubp
outs
jns
pop
repz
sbb
stc
adc
and
fwait
cdq
mov
jecxz
sub
neg
lds
mov
jne
leave
add
retf
rol
fld
or
pop
cmp
fidiv
adc
call
add
cmps
and
pop
hlt
das
xchg
sbb
out
cmp
scas
ss
xchg
jmp
pop
enter
fnstsw
dec
int3
mov
int3
jl
jle
mov
push
sbb
fwait
loop
and
adc
arpl
in
scas
cmps
outs
sahf
xchg
push
jl
test
jp
jno
(bad)
mov
add
inc
rcr
(bad)
xchg
pop
movs
imul
out
div
iret
push
icebp
sbb
in
test
movs
fwait
movs
ds
in
xor
xlat
retf
mov
adc
ja
jne
or
out
shl
inc
mov
fiadd
cmp
mov
aaa
jno
adc
(bad)
jbe
sbb
ret
(bad)
xor
div
xor
ja
sbb
mov
(bad)
call
arpl
outs
lds
in
in
mov
cmp
pop
imul
sub
adc
push
mov
pop
fbld
test
hlt
lahf
adc
mov
mov
in
pop
pop
movs
call
push
pop
xchg
or
mov
lock
and
cld
mov
dec
adc
inc
imul
mov
out
push
and
fisttp
push
ffreep
jge
test
cli
bound
and
push
push
cmp
aad
adc
add
cmc
inc
add
test
xor
pop
or
cmp
jmp
out
(bad)
lahf
pop
pop
add
adc
fstp
inc
(bad)
jecxz
loop
popf
jle
jbe
cs
xchg
xor
or
xor
(bad)
loope
imul
ror
push
out
cmc
push
lds
push
hlt
icebp
dec
mov
lock
or
jmp
out
jns
push
stos
outs
lods
arpl
jo
ret
mov
lock
std
pop
pop
ret
jnp
cmps
data16
fucom
int3
and
nop
pop
cld
mov
jb
arpl
adc
repnz
xlat
push
dec
popf
rcr
push
jo
loop
in
aaa
fst
lds
dec
mov
jp
retf
pusha
jl
mov
out
test
xor
sub
lods
xchg
aad
sbb
jge
mov
and
mov
enter
pop
fist
(bad)
ja
sub
js
push
xchg
push
sub
std
out
cmps
mov
add
cmp
scas
pop
shr
lea
cmp
sub
cmps
sbb
cmc
inc
jae
sub
jnp
pop
xchg
jmp
lahf
add
out
ins
push
sbb
cmc
mov
mov
(bad)
adc
not
loope
call
mov
enter
pushf
inc
addr16
(bad)
inc
dec
fsub
jg
enter
inc
out
inc
(bad)
push
dec
ins
ror
shr
imul
sub
pop
push
aaa
mov
and
ret
xchg
rcl
loopne
dec
jmp
ins
retf
and
adc
xchg
lods
mov
sbb
jbe
cs
loope
popf
push
xor
aad
cmp
pushf
cs
or
mov
ror
retf
xchg
icebp
bound
add
pushf
dec
ds
mov
jno
pop
xchg
jge
std
fldcw
aam
retf
icebp
(bad)
fst
mov
fadd
cmp
add
push
bnd
retf
(bad)
push
cmp
arpl
lock
and
mov
mov
xor
xchg
lods
or
lock
xchg
sub
call
mov
fdivr
arpl
add
cmc
push
jmp
mov
shl
loop
cmp
sti
push
je
mov
pop
add
fadd
cmp
adc
dec
out
lea
es
not
shr
xor
lods
stos
(bad)
imul
sub
ins
scas
xchg
fistp
mov
mov
mov
add
inc
call
in
mov
jns
cmps
std
repnz
test
add
sbb
rol
sbb
pop
inc
rcr
arpl
out
xlat
sub
dec
mov
pop
pop
in
mov
push
and
add
loopne
and
int3
or
jno
stos
pop
mov
dec
call
mov
popa
ret
cmc
jle
std
inc
ja
jno
sub
addr16
sbb
jl
mov
ss
sbb
imul
mov
pop
xor
loope
cs
cmp
or
sbb
mov
sub
or
mov
clc
push
cmp
daa
dec
dec
jo
rol
or
xchg
mov
or
pop
das
arpl
ret
scas
jecxz
cmc
cwde
push
in
or
ins
pop
mov
pop
lods
ins
sbb
push
adc
add
test
out
mov
xor
out
arpl
movs
movs
lods
pop
mov
push
jg
outs
cli
inc
or
mov
int
jl
jnp
ficom
lods
add
push
mov
fdivr
int3
push
neg
in
ins
retf
mov
popf
sub
dec
cwde
loopne
pop
sub
cld
(bad)
adc
dec
adc
mov
les
cli
int3
ds
cmp
add
aas
pop
pop
icebp
rol
fnstenv
icebp
dec
cwde
cmp
mov
or
adc
add
push
ficomp
ret
test
mov
xor
aad
bound
call
retf
xor
jnp
mov
mov
mov
(bad)
test
mov
cmp
mov
retf
push
mov
jno
dec
les
mov
dec
imul
test
jp
mov
dec
mul
pop
aad
mov
enter
lods
jge
cmp
push
aad
xchg
push
sbb
jp
mov
and
pop
lea
aam
ret
dec
push
popa
ins
inc
push
mov
adc
out
bnd
push
or
sub
push
and
and
xchg
retf
inc
xor
dec
and
sub
xchg
ret
ja
sub
add
or
and
and
mov
mov
cmp
faddp
repnz
fwait
shr
mov
ds
sbb
(bad)
jl
hlt
mov
imul
pop
cli
mov
dec
adc
setnp
pop
and
je
ja
fldcw
sub
shl
sub
outs
popf
fisttp
gs
sbb
add
mov
mov
sub
jae
mov
aas
xlat
(bad)
jmp
xor
mov
pusha
pushf
xchg
pop
mov
jno
jae
mov
adc
push
je
dec
das
inc
scas
scas
add
icebp
mov
out
adc
pop
not
ret
loopne
sbb
and
dec
repz
clc
loope
std
in
mov
xchg
mov
mov
push
ficom
mov
retf
pushf
inc
(bad)
stos
add
sub
or
mov
cdq
cvttps2pi
sbb
test
jae
mov
or
mov
cli
test
cmp
shr
sub
lds
in
sub
sub
call
mov
sbb
cmp
inc
fcmovu
(bad)
mov
mov
fstp
push
hlt
push
mov
xor
jg
int
dec
sub
jle
sar
lock
ds
fist
outs
xchg
rep
stos
iret
cmps
jb
and
jb
and
push
xchg
push
adc
sub
mov
push
xchg
fisttp
aaa
push
sub
push
sub
test
xor
mov
ret
hlt
aas
mov
out
jae
neg
mov
push
inc
adc
mov
jmp
jecxz
push
lahf
mov
dec
popf
jb
push
inc
mov
push
(bad)
int
pop
dec
sbb
(bad)
popa
(bad)
mov
(bad)
adc
les
mov
jg
push
push
adc
xchg
push
cmp
pop
or
jnp
xchg
je
dec
mov
adc
hlt
cmps
cmp
jge
push
pop
cmps
into
mov
or
push
mov
aam
sti
retf
loopne
xchg
push
push
or
fidivr
loopne
jp
ret
xor
std
shr
repnz
jmp
push
add
aad
sub
fnsave
stos
(bad)
jle
push
jmp
call
sbb
(bad)
idiv
aaa
xchg
sbb
dec
(bad)
les
loope
xchg
outs
loop
jmp
loop
push
mov
das
aaa
cmp
or
add
fs
xchg
jmp
in
mov
jae
icebp
sub
jae
sub
push
mov
les
iret
nop
das
sbb
jmp
loope
jp
cmp
stc
cld
add
or
test
inc
in
pop
cmp
aad
jecxz
sub
inc
fisubr
add
enter
jne
inc
mov
sbb
arpl
jo
(bad)
cmp
ret
push
into
gs
iret
or
push
mov
rcl
cmp
jmp
jl
jno
(bad)
adc
dec
mov
dec
stc
(bad)
pop
outs
out
daa
idiv
fld
jne
jge
pop
(bad)
cmps
es
inc
xor
fs
xchg
rol
das
int3
scas
xor
ins
aaa
ret
add
shr
mov
and
jmp
jmp
push
inc
fcomp
aad
add
mov
aaa
sub
test
test
inc
sub
mov
loop
mov
cli
(bad)
bnd
push
jmp
data16
bnd
jg
stos
js
ret
aaa
pusha
jno
mov
push
xchg
mov
adc
cld
inc
pop
add
jmp
jbe
sbb
jmp
and
aas
adc
xor
or
sub
std
xor
cmp
ins
test
test
and
mov
daa
rcl
xor
mov
mov
xor
movs
aad
push
cs
fwait
test
add
and
and
call
loope
adc
xchg
out
(bad)
push
xor
into
ret
dec
inc
movs
pusha
jmp
xchg
adc
ins
retf
mov
pop
pop
dec
enter
cmp
mov
outs
mov
jl
lods
mov
(bad)
pop
cmp
jne
dec
ja
clc
popa
push
jecxz
lock
test
mov
fild
inc
(bad)
cmc
sub
add
arpl
pop
adc
push
into
inc
sbb
jmp
push
mov
in
inc
mov
not
jmp
cs
call
int3
jae
nop
mov
dec
jp
xchg
push
aas
cmp
sub
data16
sti
lahf
(bad)
inc
pop
rcr
adc
mov
scas
adc
add
leave
idiv
pop
push
ret
call
call
xchg
ror
stc
jg
xor
(bad)
lahf
mov
pop
sbb
shl
cs
dec
(bad)
repz
clc
push
push
sub
das
(bad)
mov
popf
arpl
test
in
or
push
vpsllw
inc
ins
imul
jle
(bad)
mov
out
xor
dec
mov
xchg
rcl
lock
aad
jnp
cmps
mov
(bad)
lods
das
dec
sbb
xchg
sub
test
hlt
jl
xor
cmps
push
mov
cmp
or
pop
aas
cs
jns
into
movs
int
or
ins
pop
sti
sar
cmp
cmp
lods
jbe
fisttp
mov
mov
and
push
cld
push
sets
cmp
movs
out
sbb
out
and
fst
sbb
inc
in
add
dec
pushf
or
out
mov
sahf
jge
mov
sahf
pop
(bad)
iret
pop
shl
mov
and
neg
std
adc
idiv
xchg
enter
jnp
adc
pop
or
xchg
push
mov
adc
jmp
test
stos
(bad)
ss
xchg
xor
adc
jne
ret
jne
mov
mov
jecxz
sbb
out
ss
(bad)
in
call
loopne
mov
retf
add
pop
mov
popa
sbb
imul
hlt
dec
mov
jns
aam
dec
imul
loope
stos
sbb
adc
pop
mov
or
adc
mov
and
adc
cmp
jo
xchg
dec
mov
or
or
mov
cs
mov
adc
push
in
mov
daa
pop
sbb
sbb
push
mov
xchg
or
enter
adc
xchg
imul
sub
mov
jne
pushf
fisubr
lods
sub
shr
fs
fdivr
and
ss
sub
push
stos
aas
mov
nop
fcomi
sbb
in
jecxz
dec
test
jnp
push
or
movs
sti
dec
rol
mov
aaa
jne
imul
ffree
adc
mov
xchg
(bad)
mov
lahf
lds
icebp
je
pop
pop
dec
jno
daa
(bad)
mov
xor
sub
pop
or
mov
jmp
adc
push
xlat
jno
xchg
into
loope
inc
inc
adc
int
cmp
bound
stos
cld
and
add
nop
mov
jnp
adc
mov
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
rcr
aaa
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fisub
dec
fwait
jbe
jmp
cmps
pushw
ins
(bad)
cld
xor
out
fnsave
imul
jmp
(bad)
sti
inc
fidivr
rcl
repz
dec
and
mov
sbb
outs
xchg
popf
aas
lock
es
add
lahf
xchg
push
fst
xchg
sub
ror
in
out
sbb
sahf
mov
xchg
das
rcl
fs
adc
pop
(bad)
cdq
mov
add
dec
iret
xor
or
sub
aam
add
js
gs
jp
push
and
xchg
jbe
repnz
fld
imul
das
mov
retf
pushf
sub
iret
dec
jnp
pop
test
add
cdq
stos
xor
inc
cmp
push
and
jb
push
jnp
cwde
scas
sbb
in
fist
jno
or
aas
pop
xchg
pop
mov
pop
gs
xor
xchg
idiv
ds
add
pshufw
jmp
fcomi
vsqrtps
mov
cmc
or
jecxz
mov
fadd
push
mov
and
cmp
cld
aad
jbe
push
jno
lahf
inc
dec
mov
hlt
(bad)
rcr
inc
mov
fistp
jmp
shl
mov
cs
dec
pop
(bad)
and
cmp
aam
jne
sbb
fdiv
inc
cmc
loope
stc
shr
cmp
mov
jg
mov
jge
inc
dec
xor
(bad)
jb
lahf
call
mov
jg
mov
pop
adc
mov
aaa
push
movs
in
xor
or
add
or
push
mov
sar
iret
movs
jnp
repz
test
rcr
xchg
cli
pop
inc
or
repz
arpl
rcr
jecxz
push
(bad)
bound
test
repnz
push
aas
out
fucom
in
xchg
scas
out
hlt
fdivr
sti
loopne
dec
sub
sahf
jp
cli
xchg
xor
push
pop
retf
xchg
leave
(bad)
scas
ins
xchg
cmps
(bad)
rcr
cmp
xchg
jecxz
movs
jmp
ss
dec
xchg
jbe
cmp
xchg
sub
mov
mov
call
mov
std
daa
pop
add
pop
xor
push
fwait
jecxz
pushf
jge
and
and
mov
aaa
mov
mov
data16
xchg
enter
pushf
mov
jbe
in
dec
scas
push
into
pop
inc
jle
jns
(bad)
and
arpl
in
push
xchg
lds
scas
mov
jmp
mov
clc
bound
xchg
and
dec
leave
mov
mov
and
cmp
push
or
jnp
or
cs
mov
cmp
sub
jg
aad
sbb
(bad)
pop
xchg
mov
xchg
jns
pop
iret
(bad)
xor
adc
test
jg
not
push
test
pushf
mov
lea
inc
sub
(bad)
sbb
ja
cwde
aaa
bound
mov
dec
cmp
inc
jmp
jae
call
daa
inc
and
scas
cmp
popa
aad
cld
les
add
and
xchg
stos
fdivr
sub
jecxz
stos
pop
mov
call
icebp
leave
and
ins
jbe
ja
call
enter
sbb
or
dec
loope
xchg
adc
xor
das
pop
div
test
cmp
lods
pushf
and
sbb
add
cmp
in
mov
jge
ficom
xchg
xchg
lds
adc
xchg
stos
push
mov
add
je
xor
jnp
xor
dec
repz
sahf
(bad)
jmp
fimul
adc
jmp
std
dec
adc
aaa
add
pushf
and
push
and
add
(bad)
xchg
arpl
push
es
dec
mov
jb
xlat
aad
ins
js
std
(bad)
test
js
dec
push
dec
mov
test
add
ret
and
pop
sbb
int3
or
mov
lds
jnp
das
ins
mov
repnz
or
cmp
xor
retf
cmps
xchg
arpl
inc
mov
es
jecxz
push
cmp
xchg
ja
pushf
outs
out
add
jne
cmc
mov
mov
mov
dec
inc
push
ror
sub
das
inc
push
call
xor
movs
mov
mov
in
pop
sahf
(bad)
neg
int
into
dec
cmp
sar
js
movs
mov
inc
push
push
adc
cld
aad
sub
popf
and
je
fs
dec
mov
call
imul
dec
mov
and
or
inc
(bad)
pop
retf
adc
or
sub
dec
adc
stos
idiv
mov
int
popa
push
psllq
sub
and
xor
mov
xchg
cmps
aad
cmc
pop
aad
cmp
(bad)
cs
sbb
test
scas
mov
aad
push
and
fdivr
rol
out
mov
inc
xchg
clc
icebp
ja
fcmovbe
pop
jl
imul
push
in
fld
adc
mov
hlt
adc
jle
xchg
cmp
aaa
dec
pushf
mov
(bad)
ds
xor
(bad)
imul
sbb
jne
jnp
mov
(bad)
loope
jae
xchg
scas
(bad)
fcmove
stos
pop
xchg
jns
cmps
adc
call
or
dec
ss
(bad)
retf
cmp
ins
cmps
mov
cmp
push
inc
js
push
sub
push
lock
sub
aam
jmp
pop
dec
or
std
pushf
mov
cmp
pop
daa
sub
jl
jmp
and
and
lock
inc
pop
and
xchg
dec
mov
ret
mov
dec
cmp
adc
xchg
mov
pop
sub
jno
leave
pop
(bad)
loope
jnp
adc
out
in
mov
adc
mov
jo
push
dec
dec
rol
xor
fwait
pop
xchg
cmc
scas
hlt
test
loope
out
and
mov
aas
sub
xor
jecxz
mov
lods
xchg
and
daa
cmps
pusha
out
in
and
cmp
div
cdq
pop
scas
push
aas
push
or
sahf
call
and
mov
dec
sti
les
push
enter
sbb
in
sbb
jge
add
je
data16
or
xchg
dec
popf
cmp
adc
sub
scas
push
popf
dec
aam
cdq
pusha
ja
mov
out
rol
cmp
inc
mov
push
cmp
hlt
pop
ret
mov
xlat
scas
or
in
or
or
sbb
inc
pop
hlt
cmp
nop
sbb
les
pop
jno
test
push
sbb
lods
mov
nop
lea
push
nop
js
jbe
gs
pop
jge
cmp
repz
jae
arpl
push
xchg
inc
stos
mov
xor
sub
scas
rcr
js
adc
mov
loop
icebp
inc
outs
stos
dec
dec
pop
sub
and
(bad)
(bad)
cdq
mov
mov
push
(bad)
mov
cmp
(bad)
push
mov
mov
fldenv
adc
push
shl
in
test
jns
clc
and
dec
dec
cmp
mov
rcl
push
fld
jns
jnp
add
and
lahf
xchg
push
pop
jmp
cmps
shr
pop
push
pop
les
dec
into
jbe
mov
mov
push
out
mov
fisubr
shl
add
push
mov
rcl
pop
in
mov
or
fadd
inc
mov
cld
test
sub
add
pop
or
push
loope
pop
push
mov
xchg
dec
shr
push
icebp
cli
mov
shl
sti
mov
imul
sub
inc
out
or
sahf
mov
es
dec
int
fwait
add
popf
pop
es
and
popa
or
mov
fistp
or
outs
(bad)
and
fld
lods
ss
repnz
xchg
imul
xlat
mov
test
pop
outs
fst
lock
jge
inc
jb
das
enter
es
rol
call
sbb
inc
fwait
sub
xor
or
pop
ss
mov
mov
call
bnd
cmp
ret
sub
xchg
aas
add
adc
je
dec
sar
mov
js
fistp
mov
xchg
sbb
mov
mov
sbb
add
mov
or
mov
test
sub
je
hlt
dec
xor
aaa
or
(bad)
xlat
and
gs
cmp
stc
mov
adc
pop
push
dec
loope
rol
jg
sub
inc
or
clc
cwde
enter
out
ds
jle
sub
mov
adc
jne
mov
push
or
addr16
addr16
mov
dec
jbe
leave
or
les
int
cmps
or
inc
push
dec
fldenv
ret
sbb
or
and
or
es
movs
mov
cmps
ja
jno
icebp
out
or
sbb
push
mov
or
add
movs
scas
popw
push
push
dec
push
test
or
push
mov
iret
std
lods
mov
pop
out
sbb
push
imul
inc
js
push
pop
add
retf
sub
dec
lods
and
jmp
in
dec
jns
push
xor
movs
add
add
pop
sbb
and
ss
jae
imul
jno
sbb
pop
sub
movs
add
jae
imul
pop
or
jne
mov
cmp
cmp
mov
cmp
pop
xchg
jb
pop
dec
cmp
cmp
push
inc
(bad)
mov
jl
xchg
ins
jp
add
jo
sbb
xor
pop
sub
fsub
mov
xor
ds
mov
sub
dec
mov
adc
mov
call
jbe
(bad)
lods
call
mov
and
scas
sub
add
cmp
push
push
int3
pop
xor
(bad)
retf
mov
xor
dec
data16
test
dec
push
xchg
je
and
(bad)
adc
jl
cmc
pop
mov
stos
xchg
cmps
sahf
inc
pop
inc
pop
(bad)
push
xor
fwait
add
aas
or
test
adc
in
cmp
fscale
dec
mov
hlt
xor
push
dec
ins
(bad)
jg
(bad)
(bad)
popf
sub
or
and
arpl
push
and
dec
fdivr
xchg
ins
xchg
fisub
pop
xchg
ret
lods
ja
jmp
pop
clc
into
cmp
ds
mov
or
aad
jae
add
inc
pop
hlt
mov
sub
out
pop
and
pop
cmp
les
and
(bad)
fcmovnu
xlat
aam
stos
dec
cmp
enter
xor
retf
pop
outs
out
push
xchg
leave
inc
outs
mov
and
lahf
adc
sbb
dec
xor
xchg
movs
jbe
sub
inc
sahf
adc
in
imul
test
pop
dec
push
adc
mov
or
out
cmp
jmp
mov
or
mov
into
rcl
and
icebp
fcom
lods
inc
cs
mov
mov
sub
cs
fnsave
das
in
lods
mov
setb
stos
das
jb
leave
rcl
bnd
repz
rcr
scas
test
stos
add
psubsw
gs
sbb
ficomp
inc
push
(bad)
loope
mov
daa
movs
imul
bound
call
sbb
xchg
push
cmp
dec
in
arpl
jb
xchg
adc
xor
dec
ja
shl
jl
xchg
rol
mov
js
(bad)
in
dec
inc
inc
sub
pop
dec
push
aaa
jmp
mov
inc
fcom
cwde
dec
adc
and
or
pop
sub
jmp
popf
imul
add
mov
ja
repz
pop
aad
mov
(bad)
enter
mov
outs
jnp
shl
adc
push
fcom
retf
rcr
iret
retf
mov
add
jp
dec
fnstsw
fwait
shl
daa
cdq
repnz
retf
xor
jp
int3
stos
jb
and
jp
call
in
mov
(bad)
dec
js
add
adc
enter
ret
inc
leave
call
dec
popa
lds
mov
cli
mov
mov
or
pop
pop
and
cli
sub
frstor
repnz
pop
xor
test
mov
cmp
jmp
std
dec
cs
push
sbb
push
sar
mov
ss
mov
push
push
push
cs
cmp
fcmovu
jg
retf
movs
lock
push
fisubr
mov
xor
push
xchg
push
or
adc
fs
sub
repz
jb
xor
inc
add
jno
addr16
call
mov
cmc
jl
and
inc
xchg
dec
stc
sti
mov
xchg
repnz
pop
test
dec
out
and
jnp
gs
add
mov
nop
mov
xchg
and
cmc
fldcw
aad
mov
dec
jnp
sbb
test
jnp
jle
cmps
cmps
lock
inc
add
cmp
ja
jo
not
movs
add
sub
lods
repnz
int
fcom
addr16
in
jae
mov
call
pop
push
jl
cs
cwde
sub
test
int3
pusha
ret
jne
out
mov
loopne
mov
stos
ror
inc
cmp
addr16
xchg
lds
sub
push
popf
cmovno
jmp
sahf
xor
add
movs
xor
gs
mov
pop
dec
inc
aad
xor
(bad)
in
xchg
mov
push
push
pop
arpl
pop
xchg
rcl
popf
aad
ss
xchg
(bad)
adc
inc
cli
and
hlt
lods
inc
add
xchg
movs
cdq
retf
mov
stos
push
stos
and
leave
mov
aas
mov
int
jae
sbb
jmp
add
jno
aad
jecxz
int3
add
cmp
(bad)
enter
(bad)
mov
shl
scas
dec
mov
lahf
mov
iret
scas
cmps
mov
adc
pop
lods
dec
jae
cmp
not
jne
jmp
fdivr
mov
sbb
neg
inc
ja
hlt
push
pop
mov
push
popf
sbb
adc
inc
call
lds
pusha
cmp
in
pushf
(bad)
or
sbb
ss
ss
test
adc
sbb
pop
dec
ds
jg
mov
in
xchg
loopne
in
popa
mov
movs
dec
cli
xchg
mov
push
call
jmp
stos
push
ins
(bad)
fucomip
pop
pop
jecxz
shr
test
(bad)
out
pop
addr16
sub
arpl
sub
call
mov
pop
dec
dec
cs
enter
out
aaa
je
push
cmps
aam
es
test
jb
mov
into
xrelease
push
sub
inc
xchg
in
out
mov
sbb
adc
cmps
mov
adc
add
out
xchg
int3
dec
sar
pop
push
inc
mov
cmp
push
push
repnz
adc
push
cli
sub
pop
sub
sbb
and
scas
adc
sti
std
push
shr
sbb
(bad)
push
jmp
inc
call
lods
push
int
mov
imul
aad
dec
out
retf
cmp
lea
mov
(bad)
push
xchg
(bad)
clc
inc
int
mov
adc
mov
pop
(bad)
xchg
dec
jge
mov
inc
mov
scas
lahf
xchg
popf
repz
push
push
(bad)
cmp
jae
mov
mov
jo
cmp
pop
mov
sbb
loop
fnstenv
fdivr
adc
in
test
sbb
pop
pushf
sbb
imul
push
sub
sbb
ins
ret
ds
fstp
xchg
aas
xor
daa
mov
pop
and
mov
retf
out
pop
es
lock
push
stc
xchg
sub
push
mov
fisub
inc
jge
and
pop
shl
mov
daa
pop
fmul
lahf
jg
stc
out
jg
scas
add
inc
pop
in
lock
add
jp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jmp
dec
dec
iret
pop
mov
outs
fwait
cmp
(bad)
dec
xor
cwde
leave
fwait
mov
fnsave
int
arpl
mov
cmp
je
test
ins
sahf
mov
add
sub
xchg
xchg
adc
cdq
xchg
int3
pusha
add
repz
movs
addr16
rcr
and
rcl
dec
dec
push
dec
test
cs
adc
fdiv
pop
mov
sbb
lahf
arpl
outs
mov
jg
xor
jo
aad
ja
lds
sar
push
mov
test
stc
cli
mov
jle
and
adc
in
add
das
xor
sbb
jg
push
int3
daa
dec
push
cmps
xor
jle
fsubr
mov
sar
aaa
xchg
pop
ins
inc
xchg
lods
pop
jmp
fstp
and
aam
iret
inc
dec
shr
jmp
dec
mov
mov
xor
dec
cmp
jl
ins
adc
not
mov
push
jae
xchg
inc
jecxz
dec
scas
pop
cwde
test
(bad)
sti
jmp
test
adc
scas
repnz
lock
in
dec
jle
jge
pop
lock
out
idiv
imul
loop
popf
pop
retf
dec
fild
cdq
add
std
into
mov
jns
mov
jmp
mov
fmul
dec
ror
jg
aaa
and
add
push
aam
xchg
jle
xor
sbb
jmp
xchg
data16
inc
cwde
mov
in
mov
retf
push
or
sbb
mov
ret
fwait
mov
enter
push
inc
femms
repz
sbb
inc
cwde
inc
das
inc
(bad)
xchg
push
int
lods
and
data16
and
dec
(bad)
jmp
outs
mov
push
std
jle
sub
ja
test
xchg
xor
sti
mov
fisub
(bad)
xchg
out
mov
adc
jns
add
sbb
loop
gs
jg
sbb
and
sbb
scas
mov
fnsave
sub
mov
(bad)
inc
mov
out
and
test
xchg
sahf
lahf
dec
mov
(bad)
lea
aam
fwait
mov
dec
enter
mov
and
jl
out
shl
mov
cdq
jmp
mov
fsubr
or
xchg
xor
pop
mov
loop
jno
sahf
push
mov
adc
cmc
xchg
inc
cmc
iret
sbb
popa
out
in
and
and
push
shl
xchg
imul
mov
ret
in
or
mov
push
pop
popa
jecxz
out
stos
cdq
sub
pusha
fcom
fimul
ret
xor
stos
lds
sub
jl
hlt
lahf
pop
jl
xchg
mov
addr16
adc
pop
xchg
cs
sahf
xor
push
imul
rcr
lods
stos
push
sahf
outs
mov
je
aas
inc
mov
xlat
xor
mov
add
mov
mov
mov
jb
cmps
outs
out
push
ret
inc
sub
cmp
or
push
mov
sub
mov
retf
or
(bad)
cli
pushf
cmp
fld
std
cld
out
cmps
out
add
(bad)
mov
mov
inc
(bad)
jg
(bad)
(bad)
ret
and
cmc
cld
addr16
add
stos
sub
adc
mov
mov
out
inc
mov
(bad)
aaa
cmp
pop
mov
pop
imul
mov
out
fwait
sbb
test
push
sbb
daa
inc
mov
shl
xor
je
daa
jns
repz
push
test
mov
jae
fs
dec
push
sub
movs
xor
push
jno
cli
mov
mul
imul
icebp
dec
(bad)
div
ret
lods
stos
dec
xchg
pop
enter
xchg
dec
call
ficom
ja
lds
leave
pop
cs
imul
ins
or
stc
adc
in
sub
leave
jmp
cmp
sbb
pushf
or
arpl
ins
jp
cwde
inc
sbb
cmp
mov
sub
pop
mov
adc
lock
retf
and
cli
sub
movs
xor
jp
inc
push
mov
add
add
(bad)
jns
jb
imul
push
jecxz
in
test
mov
cmp
add
adc
frstor
out
(bad)
das
and
mov
fs
dec
int3
movs
in
aas
cmc
cmc
int3
fs
xor
movs
repz
push
gs
mov
mul
ret
bound
push
jo
push
and
mov
add
fist
xchg
js
fst
int
cmp
js
add
inc
std
mov
lods
add
pop
pop
inc
jbe
sub
(bad)
push
mov
pop
das
push
jno
ins
retf
test
mov
js
sub
(bad)
sbb
mov
jnp
mov
mov
push
sbb
fbld
(bad)
mov
sahf
mov
xlat
xor
push
sub
mov
and
inc
fwait
lods
gs
fcomp
sbb
xchg
pushf
cmps
jg
int3
or
xchg
retf
int
push
ret
gs
cmp
mov
repnz
mov
or
adc
cld
nop
sub
into
cmp
jns
into
rcl
js
pop
push
jbe
pop
dec
fwait
call
bound
enter
xchg
fwait
(bad)
mov
jb
lahf
xchg
retf
sti
mov
pop
test
aam
das
ret
mov
mov
mov
jmp
in
or
fisttp
pusha
ffree
pop
and
mov
xchg
mov
sub
jns
xchg
mov
(bad)
addr16
mov
in
hlt
mov
sbb
sbb
cmps
loopne
mov
inc
and
mov
mov
je
dec
dec
repz
jmp
adc
add
aam
mov
ret
cwde
xor
mov
or
pushf
std
fmul
push
sbb
outs
inc
mov
cdq
xchg
loop
imul
popf
cld
mov
mov
jmp
add
and
push
test
ret
fist
cmp
mov
inc
xor
scas
sbb
outs
out
or
das
hlt
cmp
sub
cs
and
adc
mov
fdivrp
dec
xchg
sub
xor
cmp
xor
mov
pop
clc
test
gs
adc
dec
sub
push
jbe
jns
mov
mov
popf
rcr
std
xor
dec
and
mov
dec
retf
(bad)
repnz
dec
add
or
push
add
xchg
pushf
cmps
(bad)
pop
fsubr
sbb
pop
(bad)
call
jmp
or
jp
nop
pop
inc
xchg
xchg
and
(bad)
cld
(bad)
in
xchg
dec
xchg
xor
cld
mov
push
clc
popa
loope
lahf
sub
jp
cmc
in
cdq
clc
pop
pop
int3
mov
push
sar
mov
xor
sbb
or
or
test
(bad)
int3
(bad)
push
adc
xchg
sbb
sub
inc
leave
push
add
pop
jo
je
xchg
dec
clc
sar
add
or
aas
sar
loope
rcr
mov
and
mov
in
adc
stos
dec
push
das
fist
arpl
cwde
cmp
cmc
sub
mov
mov
dec
fdivp
or
neg
pop
and
or
(bad)
lea
cmps
fdiv
xchg
adc
mov
jo
lods
dec
cli
in
lock
sbb
jmp
icebp
mov
mov
div
cwde
xchg
lods
dec
adc
mov
mov
leave
dec
xor
jae
jl
mov
jae
jbe
(bad)
pop
add
(bad)
mov
inc
repnz
jmp
mov
bound
xchg
mov
jnp
xor
sub
jb
daa
std
dec
sub
add
je
inc
cli
or
mov
imul
push
push
hlt
shl
daa
std
call
sbb
loopne
jle
pop
aaa
inc
mov
sub
stos
mov
(bad)
cmp
push
or
retf
loopne
and
mov
jecxz
jl
xchg
bound
cmp
xor
bound
loopne
and
sbb
push
lods
not
cmps
xor
mov
loop
fsubr
into
rol
es
nop
sub
inc
dec
sub
shl
push
dec
jo
lea
dec
sub
dec
je
in
pop
adc
add
es
(bad)
jb
(bad)
clc
mov
mov
add
push
retf
(bad)
fs
arpl
mov
pusha
xchg
xor
adc
jno
mov
sub
out
addr16
fnstsw
ins
cmp
mov
cmc
aas
mov
scas
jno
int
xor
fidivr
inc
mov
iret
add
fidivr
outs
rol
jbe
loope
push
or
jmp
xor
clc
inc
movs
sbb
mov
es
ficom
icebp
lock
and
stos
xchg
data16
popa
dec
adc
clc
rol
pop
cmp
inc
je
scas
popa
lahf
in
pushf
test
push
cmp
mov
and
sti
cmps
jmp
hlt
xchg
mov
push
xor
pusha
dec
enter
mov
ss
es
hlt
cdq
cwde
cs
repz
and
jmp
sub
dec
inc
push
adc
stc
movs
jmp
jmp
aam
lock
dec
out
in
ins
ffree
stos
pop
sbb
leave
test
hlt
ret
std
jmp
or
inc
xor
fadd
push
push
adc
int
or
sbb
repnz
nop
mul
sbb
add
pop
lock
rcl
stos
mov
daa
icebp
inc
dec
fdivr
popa
shr
xchg
xchg
test
xchg
or
push
(bad)
dec
fwait
dec
in
fisttp
in
jle
jne
xor
xor
jmp
icebp
ss
fmul
sub
push
mov
xchg
in
outs
test
shr
xor
xchg
xchg
pop
aaa
push
js
(bad)
sti
mov
sub
fdivr
inc
and
sub
mov
mov
cmp
dec
lahf
xchg
mov
mov
or
add
repz
mov
mov
pop
ins
enter
xlat
cmps
and
sbb
or
sar
retf
fstp
push
loope
sub
xor
in
loope
in
aad
cmp
cmp
mov
lea
mov
repnz
retf
mov
xor
mov
in
jp
(bad)
out
adc
jle
out
push
mov
jmp
cli
lahf
xchg
inc
push
into
int3
into
adc
int
pop
mov
pop
push
not
retf
gs
sub
xchg
xor
xchg
inc
enter
mov
clc
repz
test
mov
pop
cmps
hlt
out
xor
push
push
mul
call
leave
mov
test
mov
push
jp
xor
int3
out
mov
or
pop
imul
jge
cli
pop
xchg
push
in
shl
(bad)
sub
int3
push
fcomp
mov
cmp
xchg
cwde
out
mov
push
in
and
icebp
pop
mov
int
xor
and
ja
(bad)
aad
jge
pop
ret
lods
jns
adc
bnd
(bad)
push
ds
ss
mov
call
and
adc
(bad)
ins
outs
adc
ret
je
mov
pop
mov
pop
jns
cmp
test
es
push
add
sti
sub
in
dec
jge
inc
jno
cmp
jo
xchg
in
(bad)
ss
xchg
frstor
jg
and
push
jae
scas
dec
icebp
pop
ret
cld
sbb
inc
seta
mov
push
xlat
(bad)
ins
mov
das
push
or
mov
mov
out
repz
sahf
int3
pop
mov
mov
xchg
ins
mov
imul
and
je
or
mov
int3
mov
movs
data16
data16
or
cmp
ja
inc
lock
push
dec
test
int3
(bad)
adc
xchg
data16
(bad)
push
in
pop
cli
pop
xor
inc
mov
not
xchg
not
retfw
or
fisub
loope
mov
jecxz
mov
push
mov
scas
scas
push
and
(bad)
shl
xchg
push
xlat
cld
nop
popa
js
aas
dec
enter
sar
call
jmp
jle
adc
jne
jl
push
mov
add
cdq
sub
cmp
das
les
(bad)
mov
(bad)
(bad)
pop
fwait
cli
jp
sub
mov
aam
cmp
mov
inc
mov
gs
repz
jo
jne
call
xchg
jl
icebp
cmp
rcl
cmc
ss
es
mov
js
mov
xchg
push
in
retf
jae
pop
mov
mov
dec
(bad)
lock
cmp
ret
pop
lods
cmp
hlt
dec
cmp
(bad)
mov
and
icebp
in
inc
daa
and
pushf
jmp
pop
icebp
cli
xor
push
inc
jno
ss
ss
call
in
cld
test
out
loop
icebp
mov
(bad)
or
or
inc
mov
add
mov
inc
xchg
adc
mov
int
mov
and
inc
mov
loopne
mov
cmp
push
cmp
clc
dec
jbe
(bad)
fisttp
dec
inc
mov
pop
in
ret
dec
fcomp
inc
and
add
popf
scas
(bad)
dec
ret
adc
jne
or
in
dec
push
adc
pop
imul
jae
sahf
cmp
xchg
arpl
sub
mov
aad
pop
(bad)
repnz
imul
sbb
inc
ret
inc
pusha
in
sub
mov
push
add
inc
sbb
sub
fs
dec
cmp
cmp
fwait
dec
dec
ja
pop
pop
mov
pop
sbb
outs
arpl
pop
sub
or
popa
pop
clc
push
mov
push
arpl
or
loop
stos
cmp
and
jne
jns
aaa
xlat
sbb
jne
(bad)
pop
sti
int3
mov
jg
ret
sbb
and
fimul
pop
jo
scas
xchg
xchg
adc
jge
pop
pop
xchg
pop
or
cmps
sub
adc
fs
rol
sub
pop
jmp
jp
jmp
add
or
inc
jbe
movs
add
lods
mov
dec
jae
pop
aaa
and
arpl
pop
dec
inc
cdq
aaa
xchg
dec
cmp
cmp
and
pop
cmp
push
jbe
or
sar
shl
popa
push
imul
dec
jb
pop
add
mov
inc
xor
es
fidiv
sahf
and
xchg
xchg
mov
ret
jnp
add
daa
cmps
adc
push
ret
mov
mov
rcr
xor
add
pop
or
add
out
ret
mov
xor
or
call
(bad)
xlat
cmp
scas
les
pop
mov
cs
mov
and
popf
add
ins
jge
xlat
push
cdq
xchg
cmp
je
xchg
retf
xchg
(bad)
ins
mov
pop
ins
fnstcw
sub
add
cmp
stc
lahf
pusha
sbb
retf
in
adc
int
out
push
hlt
mov
icebp
and
lods
xor
mov
jp
int
xchg
mov
imul
sbb
adc
lock
out
jmp
mov
sbb
aas
or
jne
adc
test
cmp
lahf
push
xchg
dec
dec
mov
pop
scas
loop
fcom
sti
in
(bad)
pop
adc
fisttp
inc
pop
jb
jae
dec
enter
scas
in
add
icebp
push
imul
into
xchg
jae
sbb
in
mov
jle
jae
inc
fisttp
sub
or
ds
test
ins
mov
xchg
dec
push
retf
aaa
ss
clc
hlt
into
push
push
mov
pop
loop
je
xchg
dec
fcmovnb
sbb
cwde
sub
in
sub
nop
jg
enter
icebp
pop
out
push
and
into
jmp
xchg
adc
ficom
mov
lahf
pop
fwait
int3
icebp
pop
sbb
inc
mov
or
out
xchg
xchg
cmp
cmp
out
jg
stc
out
jmp
lock
stos
or
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
into
add
add
cmp
in
in
test
pushf
cmp
xor
dec
ja
sbb
int3
ins
push
rcr
jno
data16
(bad)
leave
ret
(bad)
out
idiv
jl
pop
add
lods
sbb
add
and
inc
pop
jne
jl
sub
and
fcmovnu
xchg
jmp
sub
icebp
push
xchg
das
xchg
ss
hlt
push
jno
mov
fist
jg
sub
inc
mov
dec
or
adc
or
daa
int3
pop
jecxz
int
adc
aaa
imul
dec
je
mov
test
out
ret
ret
adc
sub
mov
and
mov
hlt
test
(bad)
cmp
test
ins
xlat
fldcw
cmp
cmp
inc
mov
cld
pop
(bad)
adc
fwait
or
mov
es
mov
mov
push
adc
out
fmul
mov
or
xchg
enter
lea
adc
and
push
xor
adc
ds
jmp
cmps
cmp
push
in
mov
loop
and
mov
mov
mov
ja
pop
movs
sahf
test
lods
lds
cmps
sub
pop
push
sbb
xor
adc
or
mov
xchg
jno
jne
test
sub
ret
mov
(bad)
cmp
mov
(bad)
jl
push
inc
add
push
adc
push
jb
jle
jb
mov
test
mov
cld
sbb
sub
(bad)
mov
in
ins
sbb
sub
clc
loopne
js
test
sbb
bound
mov
fcom
add
or
call
pop
or
stos
mov
jg
sub
jne
jne
and
(bad)
hlt
inc
mov
push
adc
std
pop
sti
mov
das
cmc
mov
jbe
or
fild
fimul
inc
(bad)
mov
pop
loop
pop
mov
and
sub
loop
sar
daa
mov
(bad)
pushf
pop
in
mov
mov
fs
out
not
dec
addr16
movs
jge
dec
popa
sub
push
clc
lahf
mov
inc
imul
jne
not
repnz
pop
test
lahf
jb
sub
mov
lock
clc
mov
push
stos
lods
cmp
mov
fdiv
mov
jecxz
pop
je
fs
iret
mov
mov
mov
push
jg
fimul
pop
stos
add
cmp
xor
inc
lods
(bad)
jecxz
xchg
into
xchg
mov
and
in
or
mov
add
out
shr
mov
mov
pop
shl
add
or
mov
stos
mov
sbb
mov
mov
xor
shr
push
fwait
xor
add
fs
pop
jb
bound
aad
mov
and
dec
jmp
xlat
mov
pop
aad
lahf
and
std
mov
test
(bad)
mov
aaa
mov
daa
sbb
sub
xchg
sbb
jmp
adc
repnz
popa
add
sub
pop
cmp
push
push
ja
or
xor
xchg
in
push
lock
rcr
movs
cmp
out
mov
push
aas
xchg
sbb
inc
div
pop
rcr
xor
je
arpl
(bad)
movs
mov
push
jle
(bad)
imul
fbstp
fnstenv
mov
lods
js
jge
fnstsw
aam
in
out
sub
mov
or
inc
jge
icebp
fnstcw
clc
pop
jbe
test
lds
mov
fmul
shl
shl
inc
push
out
cmps
add
les
xor
sbb
mov
cmps
test
mov
sbb
fs
call
ror
sahf
(bad)
push
sub
xchg
and
scas
stc
out
loope
sub
push
std
pop
cs
xor
std
dec
jae
or
and
and
xor
fld
xchg
inc
sub
mov
mov
sub
jnp
ja
xchg
adc
xchg
push
push
cmps
ror
push
mov
push
push
or
adc
mov
jne
ror
inc
lahf
inc
mov
add
mov
cmp
cmp
icebp
jle
cld
push
jmp
cmp
movzx
sub
adc
jo
adc
aaa
das
mov
mov
pusha
fwait
jns
cmps
shl
xchg
mov
adc
imul
loope
arpl
push
mov
xchg
dec
sbb
daa
or
mov
mov
mov
(bad)
(bad)
xchg
mov
sub
rcl
fist
int
ja
clc
mov
repz
cmps
iret
out
(bad)
bound
jmp
(bad)
sbb
push
xor
mov
add
and
and
inc
out
push
push
mov
clc
add
mov
pop
ins
xchg
xchg
sbb
push
call
popf
pop
imul
dec
sbb
mov
mov
push
cvtdq2ps
mov
movs
addr16
scas
jno
inc
add
hlt
sub
sbb
dec
cmc
push
jmp
int
inc
lea
adc
xchg
mov
aam
scas
ins
in
sbb
aas
sbb
adc
imul
lock
xchg
(bad)
mov
jo
mov
jg
cld
out
fucomi
in
test
mov
enter
sub
pop
int3
pop
fst
das
xchg
lods
pop
ins
cmc
call
xchg
in
bound
xor
popf
and
pop
mov
stos
(bad)
mov
(bad)
mov
repnz
and
pusha
sub
inc
shl
daa
mov
call
arpl
jecxz
cmp
and
pop
mov
add
push
mov
xchg
and
xchg
dec
xor
xchg
std
mov
fsubr
in
ja
data16
mov
cld
add
or
mov
xor
and
sbb
inc
lods
xor
cmp
inc
out
(bad)
retf
in
mov
inc
loop
ins
fnsave
push
push
xor
rcr
popa
les
mov
push
sub
fwait
mov
fbstp
sar
cmc
(bad)
or
ins
jnp
cli
mov
sub
test
push
mov
aas
clc
test
mov
xchg
pop
mov
adc
imul
sbb
jns
inc
enter
mov
sar
(bad)
(bad)
jo
aam
out
or
pop
adc
arpl
xchg
sahf
xchg
pop
out
adc
into
mov
loope
fstp
pop
push
adc
push
(bad)
and
dec
rol
or
mov
iret
dec
and
inc
cli
sbb
dec
inc
out
das
cmp
mov
out
das
inc
imul
pop
cs
mov
(bad)
dec
cld
mov
stos
mov
jne
mov
jmp
sbb
add
inc
xchg
adc
pop
lods
add
jle
lock
js
movs
jmp
add
sub
sti
mov
movs
ficom
xchg
mov
div
mov
jnp
xchg
sti
lock
aas
mov
retf
fstp
js
inc
repnz
and
scas
cmps
es
jmp
sbb
and
aad
jnp
xor
repz
cwde
cmp
or
sub
mov
test
(bad)
stc
jae
inc
(bad)
mov
fdivr
out
clc
ja
sbb
popa
fadd
xchg
(bad)
sahf
sbb
xchg
jle
or
imul
ja
sbb
(bad)
int
test
sub
mov
outs
bound
in
push
scas
je
idiv
sub
add
cmps
cmp
cld
popf
dec
mov
pop
rol
push
pop
xchg
out
out
leave
rcl
shl
sub
sub
mov
cs
aam
in
shl
jge
mov
jmp
xor
shl
lahf
lods
ficomp
arpl
jmp
inc
xchg
xor
jno
pop
scas
cdq
mov
jp
daa
xor
mov
mov
add
mov
push
shr
jecxz
dec
adc
sbb
jmp
cmp
aam
lahf
cmp
jnp
xor
test
xchg
mov
mov
ret
fistp
mov
lods
jl
rcr
aam
dec
int3
sbb
mov
sub
aas
aam
aas
aad
jle
cmp
imul
jo
inc
inc
jae
ja
int
and
ret
jecxz
test
or
mov
sub
add
scas
and
inc
sub
or
xchg
jns
mov
inc
cmp
pusha
adc
call
dec
dec
cs
and
jle
lea
aas
mov
in
add
lods
das
rol
xchg
and
imul
stc
lods
ret
or
aam
fdiv
out
mov
cmp
add
or
jmp
add
arpl
pop
in
pop
add
lods
scas
jge
sbb
ret
adc
adc
add
sub
sub
out
mov
ret
mov
outs
pop
mov
mov
leave
cli
ret
or
jecxz
(bad)
xchg
or
sti
or
cmps
movs
mov
fs
push
shl
cmps
cmp
addr16
sbb
test
mov
stc
inc
pop
inc
and
loop
pop
sbb
clc
shr
ret
sub
ss
shl
cmp
or
and
push
(bad)
hlt
lock
mov
dec
push
cmc
les
leave
sbb
cmp
push
mov
cmps
ror
cmps
dec
xchg
stc
xor
cmp
cmc
sbb
test
cmp
je
stc
jge
mov
retf
xor
fdiv
sbb
push
jne
pop
mov
dec
add
outs
inc
push
cli
loopne
gs
pop
pop
popa
mov
mov
enter
sti
add
pusha
xchg
cmps
pop
test
and
pop
mov
shl
or
sbb
mov
or
or
mov
retf
test
adc
aas
sti
xor
outs
xor
test
cmp
aas
mov
out
cmp
call
inc
int3
fs
jp
imul
es
xchg
pop
out
inc
sbb
inc
fidivr
ret
retf
leave
and
inc
lods
and
sbb
imul
cmps
ret
and
jno
je
jle
inc
push
pop
test
inc
push
lea
sbb
adc
bound
movs
jle
ja
push
cdq
xchg
fmul
fisubr
pop
and
icebp
adc
sbb
loopne
inc
in
into
call
jb
mov
gs
out
push
rcr
jb
lsl
iret
popf
arpl
je
sub
or
fwait
xchg
rol
js
jle
inc
jecxz
dec
mov
test
jbe
data16
rcl
xchg
es
xchg
mov
xor
ins
adc
(bad)
js
popa
mov
out
fwait
inc
adc
mov
inc
popa
mov
cdq
mov
dec
sub
sub
mov
push
sahf
scas
sub
fild
cli
sub
stos
cmps
xor
stos
call
inc
pop
iret
and
xchg
fcom
xor
mov
inc
jl
movs
jne
inc
out
xbegin
jg
and
adc
es
jb
xlat
scas
lods
mov
btc
ret
call
adc
leave
stos
in
jg
dec
pop
pop
fs
push
loope
ja
cmp
sbb
(bad)
mov
(bad)
dec
xchg
es
xlat
pusha
jb
add
sub
cs
adc
cmc
push
imul
xchg
push
dec
lahf
or
mov
popa
jp
adc
xor
mov
loop
(bad)
retf
cmp
daa
push
push
or
push
(bad)
vminss
mov
sahf
(bad)
adc
out
push
dec
stos
rol
ret
mov
test
push
push
sub
pop
mov
leave
and
(bad)
sub
jg
xlat
cli
push
xchg
popa
in
hlt
sub
test
test
mov
push
mov
mov
in
inc
not
or
cmpxchg
cld
sbb
mov
scas
fwait
loopne
test
test
stc
in
rcl
mov
mov
push
inc
aad
push
out
in
ins
pop
cmps
daa
fs
xchg
popf
idiv
cmp
add
mov
addr16
mov
cmp
movs
adc
pop
mov
cmc
push
xchg
push
add
mov
jbe
mov
sub
pop
and
inc
(bad)
pop
js
push
xchg
lods
retf
ret
cmp
adc
dec
or
ins
test
cmc
inc
cmp
icebp
loopne
push
and
cs
shr
cmp
leave
cmp
adc
cs
mov
mov
adc
outs
test
jns
jle
aam
cmp
adc
push
or
out
sbb
mov
jne
imul
cmps
and
outs
jns
fwait
mov
js
cwde
cmps
mov
sti
(bad)
(bad)
jnp
scas
jne
ins
jecxz
or
xstore-rng
cmps
ret
test
xchg
push
lods
jp
movs
(bad)
push
adc
mov
rcr
daa
cwde
sub
push
mov
daa
es
pop
aas
cmp
sti
stos
xchg
rcr
and
and
xchg
sub
adc
dec
shr
xor
fadd
push
sub
popf
cli
push
retf
cmp
push
adc
xor
xlat
inc
push
cmps
cwde
shr
sbb
and
ja
add
cld
sar
jmp
or
sahf
(bad)
out
xchg
imul
pop
and
and
mov
fdiv
add
call
test
pop
cwde
jl
adc
mov
int3
dec
cmps
cld
sub
rol
stos
xchg
test
inc
lods
sbb
(bad)
fcom
cmps
dec
inc
mov
push
jbe
inc
pop
add
push
push
cmp
add
lahf
cmp
test
nop
retf
in
cs
pushf
(bad)
call
jmp
nop
clc
inc
mov
in
rol
mov
xchg
jmp
xor
xor
or
pop
imul
xchg
xor
scas
ror
mov
dec
test
and
cmps
xchg
fxch
or
cmp
fstp
int3
jo
push
xlat
dec
dec
(bad)
xor
jo
dec
push
das
retf
adc
dec
adc
cmp
xor
adc
cmp
std
retf
jo
xchg
sub
sub
pushf
loop
jp
(bad)
jne
adc
and
call
push
data16
test
pop
pop
cmc
push
mov
sub
(bad)
or
pop
mov
mov
dec
fwait
xor
adc
sub
xlat
mov
sbb
sbb
imul
sbb
ret
sbb
scas
cmp
pop
jno
jmp
mov
ja
mov
mul
arpl
push
mov
fnstcw
test
stos
mov
push
jo
imul
dec
into
add
cmp
call
pop
xchg
bound
lods
cmps
ja
enter
dec
cs
out
test
aad
test
sub
jns
(bad)
into
pop
mov
into
ficomp
pop
mov
(bad)
test
pushf
or
(bad)
push
aad
stos
mov
sar
and
jo
dec
cmp
dec
stos
popf
ficom
adc
mov
fcomip
into
call
cld
int
push
dec
lahf
mov
mov
ins
jae
arpl
mov
cmp
jbe
addr16
ret
cmp
clc
test
mov
in
clc
aaa
dec
repnz
cmps
pop
test
pop
cmps
or
push
pop
rcl
push
jb
mov
sub
add
aad
pop
rol
xchg
push
stos
mov
in
adc
leave
adc
into
push
call
jl
xor
mov
movs
mov
inc
cs
lahf
jg
stc
out
jg
stc
jg
add
pop
fmul
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
jmp
movs
xor
mov
sub
add
dec
dec
dec
dec
mov
out
pop
jo
out
sbb
loop
cs
rol
mul
dec
jle
mov
imul
mov
out
aaa
rcr
jae
push
(bad)
dec
fnstcw
adc
cli
(bad)
cld
fild
add
retf
pop
inc
mov
fadd
addr16
sub
and
xlat
cmp
and
stos
inc
fcmovb
adc
call
pop
gs
add
mov
out
mov
lock
fwait
ror
jp
pop
scas
ins
mov
cmp
mov
mov
repz
stc
jno
sbb
mov
dec
out
cs
pop
pop
aas
push
out
aam
jl
or
push
jle
outs
push
sub
pop
fchs
push
ins
in
(bad)
mov
fild
sbb
(bad)
mov
jl
popf
push
in
push
test
add
pushf
dec
push
adc
ja
aas
(bad)
adc
jg
and
cli
jae
xor
stc
not
xchg
cli
pop
sbb
sbb
mov
cld
call
mov
ins
dec
arpl
cmp
sbb
mov
adc
xchg
dec
and
ins
cmc
pop
and
fs
out
fadd
xor
dec
fisubr
push
cmp
out
div
das
cvtdq2ps
jg
mov
ins
sbb
test
outs
fisub
xchg
or
ds
pop
sbb
dec
(bad)
mov
mov
out
movs
mov
mov
lods
xchg
aas
test
add
mov
call
ror
dec
push
sub
sti
jbe
lds
shl
dec
pop
jae
push
ds
push
fsub
mov
mov
mov
xlat
pop
pusha
data16
xchg
sub
mov
fdiv
repnz
and
adc
mov
push
cmp
retf
add
call
test
movs
push
idiv
mov
cmp
fwait
movs
cmp
add
popf
xor
sbb
dec
movs
fsub
je
int
jle
scas
push
scas
movs
xor
push
xchg
in
sar
lds
pop
or
pop
dec
aas
mov
and
mov
or
push
mov
loopne
int3
out
je
cwde
push
mov
mov
mov
cmp
xchg
jl
stos
cmps
mov
pop
icebp
out
mov
push
dec
mov
sub
clc
and
inc
dec
add
ins
push
fnop
fincstp
pop
push
mov
cmp
mov
mov
lds
ret
xchg
cmps
aas
fld
cmp
xor
push
or
xor
dec
sar
aam
dec
in
mov
fmul
(bad)
pushf
push
xlat
inc
pop
out
movs
call
repnz
inc
push
es
in
mov
or
push
bound
fidiv
or
push
jb
cmp
and
or
std
mov
cmp
fs
cdq
(bad)
call
adc
mov
loop
data16
and
and
jecxz
mov
ficom
sti
mov
stc
jg
lahf
lahf
hlt
dec
mov
cmp
inc
sub
in
xor
dec
push
push
adc
loop
outs
cld
and
std
add
test
sahf
sbb
mov
xchg
sar
hlt
popf
lds
cmp
(bad)
rcl
fild
dec
mov
mov
repnz
call
cwde
cli
int
adc
jns
sbb
and
push
and
xor
or
or
adc
fs
push
mov
js
test
and
add
adc
and
pop
cmovb
btc
fisttp
xor
xchg
jmp
xor
cdq
or
dec
mov
push
js
pop
dec
test
iret
add
mov
inc
inc
addr16
jg
push
lea
shl
or
inc
mov
out
mov
inc
pop
pop
mov
repnz
mov
inc
and
and
mov
inc
stos
test
imul
test
push
inc
or
arpl
in
lods
dec
(bad)
push
or
mov
js
fsub
cmp
dec
mov
pop
xchg
aam
push
cmc
aaa
mov
cli
arpl
mov
pop
push
jmp
imul
jl
mov
sub
xor
cld
fdivr
add
xchg
movs
cmp
mov
add
push
psrad
inc
out
(bad)
xchg
push
xchg
mov
les
(bad)
dec
sar
nop
call
scas
inc
lahf
ins
mov
(bad)
lods
add
iret
sbb
mov
mov
into
and
enter
xor
in
and
mov
sahf
push
sub
std
imul
cmps
adc
cmps
fidiv
scas
mov
scas
enter
in
popf
iret
lahf
push
dec
cmp
xchg
dec
xor
mov
jl
sbb
fucom
sub
dec
xor
ret
jb
lea
clc
ds
push
pop
clc
pop
inc
add
mov
adc
xor
add
fld
and
jbe
imul
jo
ins
sbb
mov
aad
add
(bad)
adc
cmp
pop
dec
call
jbe
inc
cmc
xor
cmps
int
mov
int3
pop
inc
xchg
xchg
mov
in
sub
sete
mov
and
sbb
bound
call
rol
retf
imul
ficomp
push
bound
cmp
loope
ret
cmps
inc
xchg
jle
dec
sub
call
shl
inc
(bad)
js
xor
mov
jg
rol
out
aas
sub
cmp
jge
loopne
scas
hlt
xor
jle
pop
dec
jno
xchg
movzx
dec
xlat
add
dec
mov
sbb
mov
sbb
mov
call
movs
mov
dec
icebp
add
(bad)
sub
add
aad
mov
(bad)
out
dec
mov
cwde
out
pop
ja
xchg
xor
or
je
call
repnz
xchg
lahf
(bad)
arpl
repnz
(bad)
in
cmp
push
or
ret
push
pop
xchg
push
in
cmp
fcom
aaa
lss
xor
stc
mov
mov
sbb
sub
rcr
jmp
xlat
sub
cmp
aas
pop
fld
popa
loopne
mov
push
mov
jo
push
jg
sub
pop
add
ret
movs
sub
pop
loop
into
pop
aaa
cwde
lea
das
cmc
pmullw
adc
dec
(bad)
cld
fiadd
push
mov
(bad)
dec
and
sbb
aam
jbe
int
and
xor
pop
jno
dec
out
jge
pop
mov
or
jne
loop
cmp
push
leave
mov
and
cdq
and
fcomp
jmp
sti
push
jmp
lahf
xor
(bad)
das
sbb
adc
iret
ret
(bad)
mov
fld
mov
inc
push
dec
cld
scas
outs
pushf
dec
mov
and
xor
nop
xor
mov
cmp
xor
rcl
arpl
fwait
icebp
xchg
ret
pop
push
adc
(bad)
fisubr
jmp
(bad)
pop
and
icebp
dec
mov
add
jb
pop
mov
and
push
aas
xchg
dec
aam
enter
fbld
mov
inc
rcr
mov
or
jae
fbld
(bad)
in
inc
mov
sub
into
pop
pop
shl
cmp
sar
dec
retf
sti
mov
test
lock
mov
(bad)
int
daa
adc
push
popf
test
outs
push
lock
adc
xor
cld
or
cmp
lds
push
xchg
call
mov
out
mov
xchg
or
cmp
add
(bad)
mov
or
inc
sti
out
imul
adc
dec
je
aas
xor
test
repz
pop
push
cmps
xchg
xor
dec
inc
lahf
out
loop
dec
in
fdiv
data16
mov
mov
jle
out
cli
lods
loopne
mov
mov
mov
and
inc
neg
scas
aam
aaa
mov
dec
ds
retf
add
dec
cs
popa
cmp
push
fbld
jp
daa
(bad)
mov
mov
xor
dec
sbb
or
sub
xor
xchg
mov
xchg
cmps
pop
loopne
pop
inc
ret
and
cmp
inc
sbb
mov
(bad)
test
cmp
pop
cmps
dec
cdq
dec
sti
scas
dec
scas
ret
xchg
rcr
(bad)
xlat
ss
aaa
imul
sub
das
out
push
and
add
inc
outs
shl
ret
jmp
in
push
sub
std
xchg
mov
dec
sbb
jl
(bad)
test
in
ficom
stc
pop
mov
dec
or
dec
xchg
outs
inc
and
or
jns
jecxz
dec
pop
dec
call
sub
cs
popa
imul
test
or
mov
xchg
sbb
mov
sub
sar
(bad)
fldenv
jp
(bad)
xor
push
mov
cmp
sub
pusha
fisubr
mov
leave
mov
sbb
jno
fwait
inc
aas
clc
xchg
fadd
inc
das
int3
cmp
dec
jmp
mov
add
xchg
mov
xchg
retf
xor
sbb
or
mov
xchg
pop
jb
push
es
aas
dec
sbb
fyl2x
xchg
in
or
xchg
retf
jno
or
mov
jl
loopne
cmps
fisub
retf
cs
fisubr
mov
ss
pop
cmps
loop
mov
sti
mov
outs
ret
fimul
call
and
inc
les
or
push
pop
fldenv
outs
sub
pop
jo
xor
aas
out
sub
cmp
(bad)
repz
xor
mov
sbb
cmp
(bad)
hlt
mov
adc
dec
imul
into
pop
rol
push
movs
sti
xchg
lods
std
push
(bad)
mov
and
shr
cwde
call
fld
or
cmp
mov
push
and
push
outs
aas
mov
idiv
in
in
jl
addr16
sbb
dec
arpl
jmp
dec
data16
sar
and
fdiv
js
inc
pushf
or
jp
outs
mov
xchg
gs
out
mov
ins
int
pop
ja
xor
push
push
sti
cld
cmps
mov
iret
test
push
shl
add
xchg
repz
nop
mov
adc
loop
sub
jnp
sub
and
mov
sbb
iret
jmp
repnz
test
add
fistp
xlat
call
xchg
les
scas
shl
jl
outs
push
je
cmp
nop
test
mov
iret
mov
jmp
sub
push
sbb
fidivr
sub
jp
(bad)
fmul
or
and
push
lods
push
jl
fdivr
or
inc
jle
cwde
xlat
xor
les
jmp
scas
mov
mov
movs
jmp
ja
push
ins
imul
push
cdq
and
and
aaa
lahf
push
mov
add
cmp
jmp
xchg
jg
cmp
repz
jecxz
int
push
jle
fmul
jae
lea
push
inc
mov
stos
or
adc
fidivr
push
add
dec
or
in
ins
pop
sar
dec
fdivr
aaa
and
std
mov
popf
icebp
dec
rcl
das
jb
fld
fistp
xor
fwait
not
sahf
and
fcomp
push
sub
jmp
mov
push
jns
sbb
bound
push
scas
jmp
mov
mov
lods
out
xchg
cmp
jno
add
std
addr16
in
retf
test
lods
xchg
cmp
enter
aaa
(bad)
ficomp
icebp
push
and
jns
icebp
lea
or
push
mov
cdq
jg
dec
add
lds
xchg
sbb
in
mov
push
cdq
xchg
jge
scas
jb
pop
jmp
pusha
cdq
aas
in
push
ret
xchg
cmps
sub
sar
inc
fisubr
adc
mov
mov
or
outs
add
push
icebp
xor
inc
leave
fwait
ins
ds
rol
loope
not
mov
xor
jge
dec
sub
sub
add
repz
shl
ins
data16
sub
test
cli
retf
xchg
mov
fimul
inc
mov
gs
aad
inc
push
(bad)
push
mov
loope
retf
jmp
cmps
mov
xor
push
add
mul
xor
inc
or
fmul
jle
cmps
aad
mov
inc
jmp
pop
pop
repz
inc
mov
cmp
mov
sub
cmp
(bad)
int3
aad
push
jae
xchg
adc
ja
xor
retf
pop
stc
sbb
jae
ja
sbb
in
or
jae
jne
dec
(bad)
movs
sar
or
cs
inc
push
sbb
dec
(bad)
das
push
push
inc
xchg
iret
add
push
inc
sub
retf
clc
movs
(bad)
jns
and
sbb
sbb
int3
dec
jecxz
shr
pusha
jnp
enter
pop
pop
pop
xchg
xchg
stos
fs
ficom
mov
inc
inc
dec
test
mov
sbb
pop
sahf
dec
test
jp
mov
lea
xor
push
inc
ret
xchg
xor
mov
stos
lods
imul
xor
push
ret
inc
mov
popa
pop
fmul
jne
cmc
fucomp
cmp
test
adc
xchg
pop
mov
sbb
jae
imul
jge
aam
push
gs
iret
stos
dec
push
push
mov
call
dec
lahf
cmp
or
xor
cmps
pusha
sbb
inc
lahf
pop
call
ins
test
imul
or
fstp
rol
(bad)
adc
inc
aam
rcl
xchg
mov
inc
adc
sub
outs
jecxz
sbb
jne
aaa
cmovl
cdq
mov
cmp
and
mov
sub
mov
jno
jbe
cmp
add
pop
mov
lds
fistp
xchg
hlt
mov
enter
mov
sub
xor
sbb
fsub
mov
ret
stc
ins
pop
jl
in
mov
cmp
sub
test
pop
jne
outs
rol
loop
adc
mov
mov
jbe
xchg
push
ins
out
popf
cmps
mov
ins
dec
ja
and
mov
fstp
or
jmp
push
add
popf
pop
cdq
and
xchg
scas
pop
xor
mov
adc
jecxz
dec
test
jmp
jnp
stos
pusha
cmp
sub
push
cmps
adc
pop
stos
scas
jmp
pop
jmp
popa
in
add
xor
fwait
sub
jle
in
xchg
xchg
or
rol
push
adc
sub
in
mov
loop
test
push
(bad)
retf
add
aaa
inc
dec
std
inc
pop
lea
mov
xor
fstp
stos
fimul
push
xor
xor
adc
mov
test
mov
inc
add
fst
pop
rcr
(bad)
dec
push
pmovmskb
sub
loop
add
nop
ficomp
sub
clc
adc
push
mov
cmp
xchg
mov
stc
mov
jmp
and
test
mov
push
cld
loop
dec
dec
cmp
inc
xchg
cdq
mov
leave
xchg
add
or
stos
das
sbb
inc
in
lds
cld
jge
jns
fimul
dec
popa
ins
push
or
ficomp
stos
inc
shr
mov
ss
mov
jo
enter
jp
das
sub
dec
sbb
cmp
es
jle
aad
xchg
mov
mov
add
push
inc
aas
push
mov
jae
sub
scas
push
fnsavew
sbb
sbb
cmp
in
mov
lods
inc
mov
jne
dec
scas
das
je
and
fld
lahf
jg
stc
out
jmp
lock
xchg
or
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
arpl
mov
fstp
dec
ja
ja
call
imul
add
lahf
cmps
add
push
out
pop
push
mov
or
gs
mov
xchg
inc
fnstcw
push
inc
sub
nop
or
xlat
pop
jle
push
dec
shr
(bad)
dec
pop
ins
shr
mov
(bad)
pop
sbb
cmp
stos
mov
das
push
arpl
xchg
popf
adc
fstp
xchg
sub
aas
imul
adc
xor
xlat
scas
jmp
or
or
fldcw
xor
loop
jg
outs
int3
ret
stos
js
mov
pop
push
xchg
ror
sti
dec
retf
movs
sbb
mov
(bad)
jmp
arpl
add
xchg
xor
xchg
push
movs
mov
rcr
dec
fnstenv
fsubp
es
xchg
shr
mov
int3
addr16
jmp
and
jle
inc
lods
inc
push
mov
cli
xchg
repz
mov
(bad)
mov
push
cmp
dec
sbb
inc
jbe
ror
int
data16
movs
cmp
mov
add
xchg
(bad)
in
jge
pop
xchg
cmp
lock
imul
bnd
jmp
xchg
aas
xor
inc
adc
not
aad
in
jecxz
test
not
scas
div
in
je
in
jmp
sub
adc
aas
pop
lock
or
(bad)
and
mov
xchg
jb
adc
cmc
imul
xchg
pop
clc
aam
neg
leave
mov
mov
pop
pop
or
pop
ror
adc
cmp
enter
or
xor
cs
add
mov
push
ss
(bad)
bound
pop
mov
jnp
retf
cmp
add
arpl
loop
mov
sbb
fs
in
cmp
je
sub
xor
js
(bad)
jl
mov
jg
pop
add
and
push
mov
ret
mov
mov
xor
mov
dec
dec
xlat
pop
(bad)
loope
ret
mov
jnp
in
push
sbb
cmps
dec
(bad)
mov
paddq
mov
(bad)
lods
inc
pop
cdq
pop
je
shl
retf
push
sbb
jle
das
pop
mov
xchg
dec
mov
adc
sahf
cmp
mov
dec
loope
ja
sub
mov
and
std
xchg
adc
cmp
xor
jge
pop
loop
enter
not
jle
fisttp
lods
cmp
xlat
test
or
sar
leave
pop
mov
imul
adc
out
add
jb
stos
(bad)
fnstcw
inc
sbb
out
(bad)
sbb
cmp
sbb
cmp
inc
retw
jnp
ss
pushf
fistp
jecxz
sbb
inc
jp
jb
outs
push
or
mov
cli
loope
das
inc
mov
ret
popa
add
jl
cmp
xor
ret
psubusw
sub
lds
inc
xchg
mov
push
ins
addr16
pop
ds
push
retf
and
test
fsub
xchg
push
rcr
loope
or
call
inc
data16
pop
pop
add
mov
jb
hlt
dec
clc
add
mov
ds
pop
scas
int
ins
test
sub
mov
(bad)
out
push
pop
jle
cmp
and
gs
enter
jl
ss
into
fwait
and
jle
mov
adc
xchg
pop
cmp
jmp
mov
push
cmp
add
jg
fmul
out
pop
ins
jo
inc
pop
mov
shr
popa
mov
loope
adc
loopne
mov
push
dec
enter
cdq
jmp
lea
mov
push
(bad)
push
cmp
out
shr
add
sbb
adc
pop
pusha
les
ffree
je
movs
stos
in
mov
iret
fisttp
mov
dec
push
dec
cmp
inc
out
or
imul
xchg
mov
sbb
sub
test
fcomp
and
js
call
mov
mov
dec
neg
sbb
std
mov
sbb
adc
or
(bad)
cmps
test
cmp
ror
cli
jl
dec
push
mov
cmp
sbb
add
das
stos
mov
or
pop
lods
jo
sbb
push
mov
mov
xchg
mov
inc
jb
fwait
inc
aaa
mov
mov
arpl
nop
inc
call
int
mov
test
mov
and
sbb
mov
dec
push
sbb
bound
pop
push
test
and
push
or
test
out
xlat
mov
cs
add
xor
add
inc
in
sti
sub
push
adc
jo
dec
retf
pop
inc
add
shl
lds
push
in
sbb
int3
pop
or
xchg
inc
cmp
iret
lock
mov
sti
push
push
or
mov
mov
into
and
inc
and
pop
sahf
adc
outs
mov
lea
(bad)
nop
dec
out
cmp
xchg
xor
ret
sbb
aaa
ja
movs
xchg
xor
xor
fisttp
and
(bad)
aaa
clc
jmp
pop
clc
sub
ss
imul
inc
je
xchg
popa
mov
loop
fwait
int3
call
shl
repz
ss
or
dec
hlt
push
fcomp
ins
or
jae
add
je
and
fs
adc
mov
jne
xor
xchg
sbb
das
(bad)
(bad)
arpl
ror
shl
xchg
jecxz
pusha
int3
imul
push
out
mov
mov
mov
add
sbb
cmp
loop
(bad)
(bad)
and
sti
jne
sub
push
pop
pushf
lods
adc
xchg
fst
jmp
cmp
fwait
sub
jb
aad
xchg
push
ds
xor
xor
mov
aas
mov
pop
jns
pop
stc
inc
mov
int
int
js
or
ins
xor
stos
iret
cmp
rcl
ret
cmp
jb
jle
loopne
pop
and
out
repnz
(bad)
fcomp
inc
fiadd
mov
sbb
js
dec
pushf
and
rcr
sub
cmp
loop
push
sbb
xor
pop
mov
stos
pop
adc
add
push
xlat
dec
lahf
retf
sti
sub
pop
test
jo
sub
stos
mov
sbb
lock
pushf
dec
loopne
sti
xchg
mov
pop
xor
ret
sub
bound
mov
movs
in
cmc
fwait
pop
shl
xor
push
ja
add
cmp
cmp
lahf
xor
and
outs
jmp
das
imul
in
aas
mov
mov
(bad)
jecxz
je
push
adc
fdivr
adc
push
sbb
test
test
pop
mov
nop
stc
and
xlat
jge
push
in
push
inc
sbb
inc
sub
and
mov
cs
inc
ss
mul
jmp
movs
call
dec
addr16
add
xor
scas
lods
sbb
aam
xchg
mov
leave
bound
repz
dec
cdq
adc
mov
mov
loopne
xchg
lock
shl
xor
jecxz
imul
or
xor
fist
sti
sub
adc
scas
pop
xchg
hlt
(bad)
fs
fild
push
mov
mov
cmps
arpl
lds
stc
xchg
pop
and
in
inc
fild
es
outs
add
in
iret
dec
inc
inc
pop
push
dec
mov
pop
xor
mov
shl
jp
push
mov
aad
and
xchg
mov
into
sbb
sbb
int
dec
pop
(bad)
pop
mov
and
mov
scas
cs
jmp
xor
mov
fisubr
dec
xlat
and
fisub
dec
and
repz
push
std
and
lock
daa
movs
push
xor
push
scas
dec
call
xor
imul
idiv
test
mov
stc
mov
dec
outs
fsub
mov
push
movs
inc
xchg
inc
sub
(bad)
loop
movs
sti
(bad)
push
dec
xchg
push
push
add
and
cld
imul
push
js
mov
sub
or
loopne
xchg
push
xor
(bad)
sbb
scas
jnp
jbe
add
cld
stc
je
lods
xchg
ret
loope
xor
daa
repnz
cdq
(bad)
rcl
add
ret
popa
shr
mov
int3
jmp
stos
mov
cmps
test
pop
loop
test
in
push
inc
repz
dec
lahf
lea
(bad)
and
pop
mov
retf
retf
stc
rcr
sub
int3
inc
cwde
add
adc
std
sti
mov
in
loope
push
ja
mov
xor
repnz
fs
adc
pop
movs
push
inc
addr16
(bad)
fmul
(bad)
pop
pop
fwait
pop
mov
ror
push
lea
clc
fst
pop
lea
retf
ret
in
mov
in
out
push
popf
dec
sub
test
jnp
fisubr
enter
dec
int3
mov
es
fwait
xchg
xor
in
fwait
shr
out
sbb
jno
popf
fidiv
(bad)
in
pop
sar
adc
stc
es
and
retf
jmp
add
sub
ins
and
in
and
mov
out
mov
cmp
aad
mov
jo
sti
xchg
dec
pop
lock
dec
xor
push
and
out
pop
mov
int3
mov
adc
cmp
jecxz
cmps
cwde
mov
into
xlat
movs
jle
add
das
addr16
ins
(bad)
push
jmp
push
mov
inc
push
out
outs
je
sar
mov
js
cwde
(bad)
imul
popf
pop
mov
mov
(bad)
shl
ss
or
or
push
push
or
jmp
and
and
push
test
add
punpckhbw
idiv
mov
sti
xor
test
outs
mov
xor
sbb
push
pop
mov
dec
adc
jnp
adc
cwde
cdq
mov
inc
icebp
outs
pusha
ret
jecxz
dec
shr
cmp
or
cmp
daa
sbb
stos
in
mov
call
push
jbe
push
jmp
adc
jmp
cs
sub
mov
test
jg
rcl
inc
fs
xlat
je
iret
mov
loop
xchg
lock
not
(bad)
mov
jne
add
pop
rcl
arpl
sub
xchg
cld
dec
leave
cmp
and
imul
xor
in
mov
push
and
xor
dec
shl
addr16
dec
ins
out
nop
arpl
dec
mov
fxch
jb
rol
les
or
xchg
pop
and
retf
mov
cwde
test
or
adc
cli
push
cdq
ss
fisttp
(bad)
in
ja
add
(bad)
loop
jb
rcl
sub
mov
mov
mov
xchg
mov
lods
fst
jb
cmp
lods
cli
cmp
cmp
add
lahf
add
ret
or
pop
push
mov
dec
aaa
or
out
push
jb
rcr
stos
test
bnd
and
fs
gs
retf
push
xchg
shld
(bad)
ret
jge
imul
sar
or
in
mov
sbb
mov
ins
cmp
into
popa
dec
mov
xor
lds
adc
mov
dec
or
inc
sbb
sbb
ss
mov
ret
lahf
adc
inc
mov
movs
push
dec
xor
mov
jmp
(bad)
aaa
pop
sub
rdpmc
jp
mov
mov
mov
cld
popa
adc
ds
sbb
in
aaa
add
push
jo
pop
and
mov
xor
cmp
push
jns
or
xchg
out
sbb
pop
pop
xchg
nop
mov
or
pusha
mov
int3
pop
data16
and
xchg
arpl
int3
popa
pop
add
lods
arpl
mov
pop
or
int3
jmp
(bad)
in
ret
pusha
cmp
fnsave
jmp
xchg
nop
adc
pop
clc
mov
jg
xchg
sub
imul
push
nop
sbb
mov
in
mov
nop
inc
xor
mov
sbb
sti
push
push
cmc
push
sar
call
popf
aaa
add
les
push
sub
es
mov
mov
mov
sub
push
js
sti
pop
stos
adc
mov
sub
movs
push
mov
lock
dec
movs
xchg
dec
xchg
and
cmc
pop
or
test
sbb
and
mov
pop
stc
out
mov
mov
mov
mov
cmp
test
sbb
mov
stc
sub
les
daa
retf
mov
fcom
xchg
adc
fnstsw
push
leave
inc
adc
xor
and
jecxz
mov
rcr
std
js
fmul
call
mov
xchg
add
adc
pop
jnp
ins
adc
mov
jmp
repnz
test
daa
fwait
pop
(bad)
xchg
int
mov
test
cmp
in
pop
jmp
xor
ins
cld
int3
daa
dec
pop
xor
fwait
xor
nop
into
cmp
xchg
cdq
cmp
inc
rol
sti
mov
inc
cmp
cwde
adc
or
push
dec
out
dec
xchg
inc
into
jmp
pop
or
and
cli
add
ds
adc
int3
sbb
or
pop
aaa
push
jg
jecxz
repnz
mov
cmp
mov
mov
push
pusha
mov
stos
push
imul
add
jg
loop
cli
or
out
ds
sbb
dec
mov
adc
ret
in
jp
pop
mov
jg
dec
pushf
push
ds
pop
in
std
cmp
push
setg
int3
jp
in
sbb
mov
push
cvtdq2ps
std
rcr
cmp
xchg
adc
jmp
nop
hlt
jns
mov
adc
mov
jmp
aam
es
mov
cmp
out
and
mov
cmp
(bad)
scas
je
fadd
movs
sbb
or
ffreep
adc
adc
test
xchg
dec
inc
add
scas
xlat
pop
jp
fwait
jne
ja
shr
ror
pop
mov
inc
cdq
test
cmp
stos
test
(bad)
pushf
call
out
cmp
jp
popf
loope
mov
cmp
aad
pop
jmp
dec
jbe
xchg
jle
mov
repz
aam
out
in
lods
sar
lods
into
mov
or
dec
inc
push
mov
out
mov
sub
popa
push
(bad)
call
dec
je
call
add
jbe
push
push
ja
imul
pop
mov
inc
jge
inc
(bad)
jae
adc
aad
adc
cmps
psraw
mov
js
jge
leave
push
call
jbe
dec
jmp
mov
mov
fild
pop
dec
loope
out
std
ins
sti
adc
pop
jge
dec
(bad)
adc
ror
mov
sar
inc
inc
and
inc
jg
nop
fcom
arpl
hlt
mov
mov
push
ins
push
dec
inc
cld
xor
call
xchg
and
push
dec
cdq
daa
les
inc
call
mov
rcr
xor
jmp
lock
mov
outs
popa
mov
dec
outs
dec
mov
xchg
(bad)
std
ja
adc
or
aaa
(bad)
jb
pop
push
push
jno
fldenv
fisttp
or
mov
mov
test
ds
jg
out
mov
add
loopne
push
ins
int
or
mov
xchg
aas
outs
ss
dec
xchg
add
gs
jae
jp
data16
sbb
mov
mov
mov
add
(bad)
cmp
xor
adc
xor
push
dec
aad
aaa
daa
pop
or
and
popa
(bad)
std
test
jge
fs
out
jg
stc
out
jg
stc
mov
push
pop
aad
je
out
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
shl
aaa
cmp
cmp
(bad)
jmp
shl
cmps
imul
xchg
xlat
xor
cmp
jmp
fldpi
(bad)
js
add
add
sbb
sub
jbe
mov
retf
inc
push
xor
fs
mov
ret
(bad)
dec
addr16
jmp
adc
cmp
mov
aaa
cmc
movs
arpl
inc
or
in
fcomp
mov
push
and
hlt
jbe
idiv
sbb
adc
ins
rol
jmp
bound
or
nop
push
fcomp
lods
lods
adc
fist
dec
rcr
jle
test
push
push
cwde
cmps
lods
dec
jg
push
mov
push
loop
fmul
imul
push
push
cmp
(bad)
not
sub
fldcw
mov
add
cmps
cmp
cmc
push
adc
xchg
pop
les
je
sbb
in
call
jnp
mov
(bad)
in
retf
add
xchg
mov
dec
data16
call
inc
jbe
xchg
loopne
dec
pop
mov
sub
clc
dec
sti
inc
imul
(bad)
mov
mov
dec
daa
push
scas
xor
inc
xor
inc
addr16
mov
xchg
cli
mov
cmp
sub
mov
sbb
mov
shr
shr
ret
mov
jno
mov
call
pop
push
adc
loopne
es
push
mov
sub
lahf
jns
sub
movs
jne
cmc
jno
fnstcw
xchg
jnp
adc
icebp
cmp
outs
pop
sub
cwde
ret
dec
jge
sub
mov
imul
dec
push
fdivr
lahf
jp
jbe
pop
(bad)
(bad)
fucomi
dec
cmp
pop
ret
sub
sub
mov
cmp
movs
lock
mov
jecxz
loop
rol
pop
xchg
jns
pusha
mov
aad
outs
in
jnp
pop
in
leave
pusha
dec
test
or
in
inc
fxch
add
call
push
retf
inc
pop
dec
adc
pop
fabs
popf
out
test
and
test
mov
je
loop
cmc
push
sbb
inc
mov
dec
cmps
call
mov
cmp
mov
xchg
cmps
sbb
out
adc
mov
pop
mov
mov
mov
(bad)
xchg
inc
push
sti
das
sbb
cdq
pop
cdq
mov
push
outs
fisttp
fisttp
mov
loope
int3
cs
jle
cs
out
xor
fisttp
inc
daa
pop
push
js
mov
and
and
xchg
or
and
or
mov
mov
daa
(bad)
pop
xor
popf
psubw
jecxz
in
and
test
mov
inc
xor
das
movs
(bad)
retf
sahf
mov
cmp
xor
cmp
jmp
jb
ins
jg
scas
push
mov
in
jecxz
jnp
sbb
jo
jle
retf
jae
push
jle
and
in
in
ja
push
aaa
or
pop
jle
loop
mov
fcom
jae
ret
mov
or
xchg
inc
cmp
shr
faddp
jecxz
mov
(bad)
(bad)
scas
sbb
mov
mov
loop
sbb
cmc
std
cmp
pop
hlt
rep
movs
(bad)
enter
rol
mov
rcr
push
push
lea
xchg
and
inc
jbe
out
cmp
outs
fisubr
cmps
pushf
stos
retf
stos
sub
adc
jg
fnstsw
mov
push
(bad)
push
test
cmc
outs
push
push
or
push
pusha
mov
mov
int3
pop
or
sbb
enterw
inc
adc
ins
sbb
out
mov
jb
inc
popf
leave
adc
sti
mov
cmps
cdq
imul
(bad)
frstor
and
sub
inc
pcmpeqb
jae
and
pop
xchg
jp
jmp
shl
and
mov
rcl
or
movs
scas
fs
test
stos
fmul
ins
cdq
pop
xchg
pop
in
in
xchg
(bad)
mov
dec
cmp
sub
(bad)
jp
and
sbb
cmp
jecxz
nop
call
inc
dec
rol
mov
push
aad
inc
sbb
mov
and
xor
cmp
inc
xchg
inc
xchg
nop
test
nop
shr
seto
xchg
and
push
xchg
aas
cmp
popf
mov
rcr
out
cmc
push
mov
rol
gs
ins
xor
cmc
jno
or
mov
or
into
int
cmc
cmp
xchg
jo
(bad)
in
lds
sbb
jns
inc
mov
das
jecxz
xchg
pushf
mov
dec
fsub
sub
fcom
daa
fwait
mov
push
xchg
xchg
xchg
fld
icebp
inc
adc
int3
jnp
mov
push
retf
sub
fwait
dec
jg
and
dec
std
dec
xchg
iret
int3
push
test
enter
call
(bad)
pop
inc
dec
les
not
shr
lahf
ret
test
inc
retf
outs
xchg
push
call
dec
movs
test
pop
lds
cmps
mov
enter
mov
es
mov
bound
test
pop
pop
cld
and
jp
pop
ins
or
or
mov
shr
or
or
inc
sbb
dec
xchg
mov
push
stc
cmp
sbb
rol
(bad)
xor
ror
sti
ja
jno
mov
jecxz
cli
aaa
pop
pop
lods
and
jno
xor
or
std
(bad)
daa
pop
fisubr
cmps
xchg
jecxz
addr16
mov
push
xor
jge
lods
aas
ins
sahf
sbb
test
sub
mov
outs
sar
xchg
sub
aas
ror
mov
jae
push
fbstp
push
add
repz
or
or
inc
test
sub
mov
das
or
sbb
(bad)
imul
xchg
or
jno
cmp
stc
dec
mov
push
rcl
inc
mov
test
adc
bound
dec
pop
jae
xchg
fist
pop
lock
or
fwait
xchg
dec
push
add
mov
movs
sbb
and
mov
(bad)
push
xchg
mov
repnz
add
sub
and
fistp
jp
xchg
std
pop
pusha
pop
or
jl
mov
scas
sti
adc
mov
clc
fdiv
sub
ds
int
int
push
xor
std
adc
das
add
xchg
loope
lds
pop
add
fwait
jbe
test
lahf
das
add
cwde
add
pop
add
mov
sub
adc
sar
add
nop
mov
dec
bound
dec
fwait
cld
in
push
dec
xor
dec
xchg
mov
fwait
mov
out
cmp
jl
in
aad
mov
sub
retf
scas
jmp
sbb
sbb
scas
icebp
adc
inc
call
mov
jmp
xor
gs
mov
rcr
push
das
xor
retf
test
push
jnp
les
pop
push
mov
add
cs
imul
lahf
inc
push
stc
stos
popa
inc
mov
pop
cmp
jne
loope
add
mov
outs
mov
aad
popf
inc
xchg
daa
xor
rcr
jmp
mov
mov
jle
mov
ret
mov
push
jl
sbb
sub
adc
gs
or
add
outs
inc
mov
xor
mov
into
push
cmp
lods
popa
fwait
push
lahf
xor
cmps
adc
sbb
scas
mov
icebp
pop
add
aaa
mov
dec
stos
imul
and
fcom
imul
div
fdivr
xor
cmp
jnp
mov
sbb
(bad)
pushf
and
xchg
imul
sti
loopne
sub
dec
fwait
xchg
sbb
lock
sbb
js
cs
in
test
cwde
sahf
cmps
push
pusha
xor
faddp
fwait
(bad)
mov
into
xchg
aad
adc
jecxz
jbe
jl
scas
jbe
jbe
mov
xchg
fwait
sahf
not
ret
cmp
and
ret
aad
inc
pop
xlat
dec
sub
(bad)
out
test
jae
movups
lahf
sub
stos
and
jnp
pop
imul
clc
test
xchg
push
jne
xor
jp
cmp
pop
aas
dec
jae
lods
test
lahf
icebp
or
cld
jno
int3
mov
(bad)
mov
add
xchg
sub
inc
cmps
mov
sahf
out
jns
inc
lods
and
pop
nop
xchg
push
out
scas
adc
push
outs
xchg
ins
dec
fwait
lods
nop
xchg
inc
ficomp
cmp
movs
cs
xor
push
bound
clc
jp
push
cmps
leave
pop
cmps
xchg
and
push
ins
sub
adc
or
mov
rcr
jbe
push
iret
jl
mov
mov
pop
push
cmp
aas
mov
or
jecxz
fnstsw
das
int
fsincos
jo
pop
and
cmp
int3
inc
push
loop
jecxz
cmp
or
scas
jmp
popa
test
repnz
inc
les
dec
in
call
jbe
inc
psubsb
mov
inc
mov
add
ja
cmps
ja
jmp
pop
imul
(bad)
push
into
fcmovb
xchg
sbb
fistp
ins
pop
cli
outs
das
lea
pushf
jmp
add
test
dec
jb
mov
xor
sub
pop
and
arpl
sbb
mov
jbe
inc
rol
es
push
pop
add
in
inc
or
xchg
pop
and
hlt
shl
scas
sbb
inc
mov
repnz
bnd
sbb
jne
pushf
mov
push
inc
jb
push
jmp
push
sbb
xor
in
sbb
sar
sbb
jmp
ss
mov
xor
cmc
fmul
add
sti
shl
pop
or
(bad)
mov
gs
xchg
mov
js
out
stc
iret
mov
jg
mov
pop
sti
data16
cmps
sub
push
inc
scas
xchg
(bad)
and
xchg
adc
pop
aad
cmp
fild
push
jle
movs
add
cmp
(bad)
fst
dec
cmp
arpl
cmp
shl
jp
push
pop
mov
jo
xor
sbb
dec
out
adc
in
push
stos
jb
cmp
ror
xor
icebp
es
jle
outs
and
adc
ins
jns
mov
xor
jae
dec
bnd
in
andnps
xor
mov
fwait
test
sub
xor
lock
add
in
dec
jmp
xor
aaa
shl
jnp
xchg
mov
sbb
sahf
cmc
mov
pop
enter
daa
sub
pop
adc
pop
mov
mov
popf
das
pop
or
arpl
imul
inc
stos
rcr
push
or
outs
aaa
out
cmp
jne
adc
mov
popf
cmp
fist
pop
or
shl
daa
leave
cdq
retf
pushf
(bad)
push
scas
jle
xor
inc
xchg
pop
cmc
je
pop
(bad)
movs
mov
test
jno
jecxz
fcmovbe
sub
lods
mov
and
or
mov
inc
aam
xchg
or
mov
push
das
shr
jb
(bad)
fwait
jecxz
xor
push
sub
push
mov
into
(bad)
es
push
into
xchg
out
dec
push
mov
lahf
fs
nop
sub
xchg
mov
mov
pop
sub
popf
ja
ins
retf
mov
mov
and
test
jne
push
push
lods
mov
pop
call
imul
inc
imul
in
psrlq
cmps
ffreep
lods
xchg
lahf
fisub
sbb
xor
je
aam
jl
pop
dec
popf
lods
or
hlt
sbb
xchg
shr
call
cs
in
cs
fwait
xchg
shr
(bad)
sbb
popf
fnstsw
lods
sahf
push
stos
mov
aas
dec
adc
rcl
stos
push
mov
xchg
pop
imul
push
cs
lahf
sub
fs
adc
push
or
cmps
xor
popa
mov
clc
push
or
in
adc
pop
xor
dec
out
or
clc
cmp
daa
out
mov
fdiv
cmp
dec
int
pop
xor
arpl
jo
and
xchg
popa
les
xchg
add
das
mov
xchg
into
je
aad
cld
jge
aad
cli
movs
dec
dec
stc
ret
out
pop
sbb
stos
lock
mov
sub
mov
sbb
(bad)
mov
mov
pop
and
scas
std
fadd
or
cld
(bad)
dec
jmp
gs
sub
or
ins
mov
cmp
arpl
daa
push
fmulp
faddp
mov
and
ins
sbb
inc
daa
push
dec
outs
push
push
cmps
rcr
outs
dec
loopne
imul
bound
in
cmps
rol
test
xchg
mov
in
xchg
dec
ins
pop
call
ret
dec
cmp
sub
xchg
inc
or
call
rcr
xor
cmp
movs
pop
xchg
lock
(bad)
jl
push
(bad)
int
shr
push
jb
stc
movs
inc
mov
sub
int
push
jp
fsub
xor
pop
retf
cmc
into
shl
ins
(bad)
in
lods
test
xor
sub
jnp
and
add
ret
push
mov
sbb
(bad)
and
call
repnz
sub
inc
inc
xchg
test
cmp
push
xchg
es
and
add
push
repz
js
dec
dec
mov
in
and
fbld
(bad)
pusha
aad
fld1
fdiv
or
sti
sahf
ja
inc
out
inc
cdq
arpl
movs
fwait
aad
mov
jecxz
ret
(bad)
les
mov
mov
fcom
pop
dec
mov
aaa
mov
or
sbb
je
gs
int3
push
or
adc
mov
sub
popa
dec
xchg
and
jb
mov
dec
xor
inc
sub
or
outs
out
imul
and
(bad)
inc
mov
movs
ret
pop
scas
stos
add
cld
icebp
stos
dec
mov
add
or
mov
fld
in
xchg
div
jne
loope
jmp
call
aaa
(bad)
aam
js
mov
jg
scas
test
dec
loopne
pop
dec
int3
jae
xor
imul
mov
push
ret
pop
loope
pusha
xchg
dec
xchg
daa
out
fwait
call
lea
pop
or
shl
retf
adc
movs
fnstsw
out
arpl
movs
and
stos
inc
cmp
mov
iret
sub
wbinvd
enter
inc
aad
pop
imul
push
retf
or
data16
test
gs
stos
stos
call
cmc
add
lods
adc
jno
in
sub
imul
mov
icebp
dec
mov
dec
stos
dec
int3
imul
mov
mov
sub
xchg
pushf
mov
movs
int
pop
rcr
ficom
xor
cmp
outs
loope
mov
cmp
adc
fstp
mov
xor
pusha
mov
ret
(bad)
jo
jne
addr16
and
int3
retf
lods
mov
mov
arpl
or
and
test
adc
mov
gs
jns
sbb
rcl
test
sahf
cmp
inc
movs
mov
push
aas
cmp
xor
sub
xor
adc
push
cmp
push
std
mov
retf
sti
inc
sti
out
xor
and
jmp
mov
into
mov
iret
aad
arpl
and
mov
enter
sbb
loope
xor
mov
jg
movs
jbe
enter
mov
out
mov
xchg
adc
arpl
push
outs
pop
ja
scas
inc
adc
sbb
dec
ror
sti
pop
add
stos
ret
ret
shl
(bad)
into
aad
je
popa
scas
outs
jno
(bad)
pop
fistp
test
retf
idiv
cmp
(bad)
stc
out
call
add
inc
nop
and
(bad)
or
adc
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
out
ss
ja
sbb
(bad)
in
repnz
dec
dec
(bad)
sbb
mov
in
pop
ss
cmp
repz
(bad)
mov
mov
add
lds
mov
(bad)
in
push
popf
fld
sub
pop
out
int3
scas
test
xor
mov
sahf
lods
xchg
push
outs
pop
fidivr
cmp
mov
push
stos
mov
sub
movs
fstp
fisttp
in
xchg
jle
(bad)
or
sbb
js
into
mov
inc
mov
mov
fcomp
inc
fwait
add
mov
fstp
xor
clc
cmp
jns
pop
mov
cld
int3
cmp
retf
sbb
aas
pop
mov
hlt
inc
je
out
leave
mov
scas
adc
lds
sbb
clc
loop
in
retf
push
sub
cmp
sbb
push
repnz
sahf
pusha
out
ror
jmp
aad
sar
jecxz
loope
(bad)
into
daa
pop
test
mov
test
out
ss
xor
xchg
jno
mov
jge
or
inc
or
popa
lds
retf
inc
pushf
(bad)
mov
sbb
dec
push
jb
fdiv
cwde
or
jmp
lahf
cli
cwde
jbe
or
inc
xlat
mov
mov
push
mov
shl
jmp
fmul
push
dec
adc
push
(bad)
imul
cld
jbe
sbb
mov
fdivr
pop
sbb
ins
int
arpl
adc
arpl
ret
call
outs
mov
loope
jp
cmc
fisubr
mov
xchg
dec
mov
and
sbb
push
xor
inc
inc
movs
js
xor
xchg
xchg
mov
mov
mov
jne
call
int
xor
or
ja
jo
popa
lods
or
retf
push
pop
dec
stc
aaa
fwait
stc
dec
sahf
jg
push
rcr
sbb
pop
ja
and
mov
sub
xchg
push
inc
sub
sub
push
mov
cld
inc
int3
stos
cmp
ja
sub
nop
lahf
pop
dec
push
mov
or
mov
je
in
rcr
retf
or
sahf
push
js
push
jg
cli
sti
mov
lods
inc
mov
call
adc
fldenv
jmp
mov
jmp
in
in
jmp
jle
xor
and
out
in
xchg
dec
lods
cmp
xchg
mov
(bad)
and
adc
xchg
outs
add
jl
js
pop
out
pop
jl
inc
and
loopne
movs
cmp
ins
iret
push
sahf
adc
lahf
adc
mov
cmp
dec
cmp
mov
sub
pop
mov
stc
ss
push
ds
push
sub
js
clc
dec
iret
sub
dec
outs
adc
mov
dec
cmp
sbb
fld
(bad)
jl
dec
aad
add
out
in
cdq
pusha
jecxz
(bad)
lods
xchg
adc
dec
lock
mov
inc
movs
fild
(bad)
retf
xchg
pusha
adc
sbb
aaa
xchg
je
aas
pop
push
outs
sbb
ja
(bad)
cmp
inc
adc
pop
imul
(bad)
or
outs
ret
mov
adc
mov
js
(bad)
or
mov
xor
lods
jmp
jl
sbb
cmps
scas
or
(bad)
ins
push
cmp
cmp
dec
push
js
adc
inc
mov
mov
and
shl
mov
jp
cmp
cdq
mov
jno
popf
test
(bad)
lock
pop
jns
popf
dec
or
dec
add
data16
dec
xor
sub
jmp
sbb
sti
(bad)
lods
pop
mov
dec
jns
retf
inc
neg
or
les
jnp
jg
xor
lods
cmp
paddw
dec
test
mov
aad
sbb
push
mov
mov
int
in
mov
bound
pop
out
ror
mov
aas
inc
test
push
loopne
pop
fisubr
ja
sar
into
js
popa
ins
and
pop
or
sub
adc
retf
shl
inc
mov
sbb
pop
daa
cmp
push
cmp
dec
mov
hlt
ja
popa
clc
leave
inc
mov
mov
xchg
aam
cmps
pop
or
ins
xor
lods
dec
mov
stc
mov
cmp
mov
inc
cmp
rcr
mov
mov
dec
jns
icebp
or
pop
je
(bad)
mov
(bad)
int3
jp
int3
cmp
retf
retf
out
ficom
mov
mov
sbb
pop
retf
imul
xor
icebp
stos
inc
fsub
xchg
inc
push
mov
mov
call
js
pusha
in
mov
sbb
pop
stos
sbb
mov
adc
out
(bad)
jecxz
jo
retf
inc
pop
mov
aaa
pushf
push
xchg
retf
xchg
pop
loop
loope
mov
(bad)
or
sbb
jno
shrd
adc
jle
je
adc
push
jno
sub
popa
jmp
sar
and
xlat
and
test
cmp
sub
shr
cmp
sbb
dec
adc
gs
jo
mov
out
pushf
cmc
imul
loope
(bad)
pushf
(bad)
jbe
imul
jb
xchg
cmp
jl
or
cmp
push
sub
aad
mov
mov
dec
test
jp
(bad)
mov
icebp
adc
adc
pop
sar
mov
mov
cli
and
xchg
das
xchg
rcl
mov
aam
test
dec
dec
mov
(bad)
std
nop
cmp
push
inc
mov
test
retf
ja
adc
aaa
aaa
jcxz
and
and
jmp
jmp
ja
mov
jmp
push
xchg
ror
scas
test
dec
xchg
dec
rcl
fmulp
scas
dec
xchg
enter
and
sbb
(bad)
out
mov
sbb
add
ds
add
stos
mov
fwait
add
aaa
fsub
jb
and
sbb
les
in
mov
dec
sub
fwait
je
xor
arpl
retf
or
dec
mov
gs
inc
in
ds
pop
and
cmovo
ins
movs
mov
data16
fs
ret
shr
stos
xor
fstp
sbb
shl
(bad)
xor
lods
push
dec
sbb
dec
xor
push
stc
pop
mov
jmp
mov
cmps
jge
mov
jmp
lahf
popf
in
mov
out
mov
aaa
mov
inc
fcomp
push
xor
push
mov
sub
dec
stc
add
dec
out
add
pop
push
popf
pop
scas
stos
ss
jne
pop
out
mov
int3
mov
inc
sub
icebp
mov
xor
test
out
ret
adc
push
mov
push
dec
and
sar
out
inc
inc
jecxz
mov
pushf
inc
ss
mov
out
sbb
pop
pop
nop
cmp
pusha
and
or
outs
push
mov
stos
pop
or
test
cmps
(bad)
leave
mov
cmp
dec
dec
aaa
sbb
cld
ss
js
fnstcw
mov
sbb
mov
(bad)
stos
xchg
mov
test
lds
test
xlat
jae
cmps
inc
dec
es
mov
aam
xor
aam
(bad)
(bad)
dec
in
scas
jo
jl
jns
or
fisubr
push
xchg
sub
jge
xor
sub
adc
cdq
add
mov
jmp
xor
jmp
add
fistp
ds
test
dec
push
mov
sbb
mov
push
and
aam
dec
inc
mov
popa
mov
es
rcr
repz
es
mov
push
fmulp
mov
aas
adc
mov
sbb
inc
mov
les
rcr
(bad)
stc
shr
push
adc
aam
pushf
popa
push
add
pop
les
(bad)
dec
imul
adc
retf
mov
lea
ins
cmp
cmp
add
adc
lock
cmp
or
repnz
cmp
jmp
jecxz
jmp
dec
jbe
mov
ins
sbb
mov
or
mov
pop
jle
retf
call
fsubr
retf
jbe
xchg
add
stos
add
dec
push
nop
ds
repnz
lahf
out
sbb
lea
inc
int
pop
jmp
jle
mov
or
push
movs
xor
xchg
jg
and
add
outs
aas
xchg
retf
mov
stos
mov
stos
shr
into
fstp
dec
dec
(bad)
lock
pop
aam
ret
pop
sub
pop
(bad)
pop
data16
dec
fstp
ins
(bad)
cli
dec
xchg
lods
(bad)
aam
inc
and
mov
in
arpl
lock
aam
mov
(bad)
mov
ja
mov
ja
mov
nop
rcl
loop
nop
push
push
inc
cmp
jg
push
outs
rcr
inc
mov
xor
sub
loopne
mov
cld
sar
cmp
into
xlat
js
sti
cmps
inc
lahf
enter
push
aam
cmp
(bad)
sahf
je
inc
pop
cwde
mov
mov
dec
scas
xor
mov
fmulp
adc
xchg
jle
call
mov
rcr
push
popf
jb
fmul
icebp
adc
in
add
dec
es
cmps
inc
in
js
rcr
sub
rol
pop
retf
jnp
aas
(bad)
idiv
cmp
(bad)
iret
ins
fdiv
daa
mov
cmp
jne
shr
push
pop
mov
ds
xchg
repnz
or
rcr
std
add
out
popf
push
jecxz
lods
jmp
adc
in
push
xchg
popa
test
in
dec
pushf
repz
add
xor
out
imul
stc
pop
retf
in
mov
mov
adc
mov
sbb
shl
inc
cmps
lods
fcomip
add
mov
movs
fstp
ret
pushf
jge
test
jecxz
mov
pop
mov
adc
adc
xor
sbb
in
mov
call
lods
out
and
test
xchg
mov
push
test
pop
jae
and
adc
pop
xchg
cmp
(bad)
mov
mov
mov
mov
jmp
mov
dec
and
sahf
add
fwait
aaa
sbb
hlt
add
aad
neg
leave
pop
loopne
or
or
cdq
lsl
lods
mov
xor
sbb
mov
push
push
mov
iret
lods
mov
ret
xchg
aam
sahf
or
sbb
rcr
in
cwde
or
ficomp
ja
push
inc
adc
cmp
nop
(bad)
push
mul
int3
push
stc
rcl
jl
cdq
les
xor
leave
add
popf
retf
dec
popa
mov
push
int3
aas
pop
add
repnz
adc
pop
hlt
jae
dec
add
mov
mov
and
dec
fstp
cmps
mov
add
and
rcr
addr16
dec
shr
xchg
cdq
pop
push
std
mov
jns
test
or
fild
popa
out
cs
dec
lock
and
imul
ins
xor
xchg
push
jmp
mov
test
cmps
add
mov
call
ins
(bad)
loopne
mov
pop
or
or
mov
pusha
cmp
dec
mov
xchg
mov
jmp
xchg
mov
push
pop
push
mov
mov
or
jl
data16
mov
test
mov
jg
xor
push
cmps
leave
inc
push
push
and
repz
rol
mov
movs
movs
into
mov
cld
je
sbb
mov
fwait
int3
imul
xor
mov
mov
aas
int
neg
data16
jno
fidivr
retf
add
mov
mov
lea
shl
xchg
add
dec
pop
fsubp
daa
adc
sbb
int
cmps
retf
jle
mov
push
jns
mov
pop
jmp
les
test
or
lds
or
fnstenv
xchg
mov
popa
(bad)
mul
test
(bad)
lods
cwde
sub
bnd
mov
adc
ss
jge
packuswb
retf
call
sahf
mov
loope
xchg
fisub
cld
cmps
popa
mov
and
fadd
mov
mov
fucomip
jecxz
pop
pop
xor
xor
(bad)
stos
fstp
xlat
cmp
ret
push
js
lds
cld
cmp
pop
imul
retf
repz
and
sub
arpl
outs
out
imul
stos
mov
sbb
push
xchg
test
test
int
lock
xchg
sbb
inc
in
(bad)
mov
jne
xor
popf
call
test
scas
cdq
mov
xor
pop
mov
je
rcl
inc
adc
scas
mov
les
push
or
xor
and
and
movs
add
jbe
retf
xor
aas
aaa
jb
jge
in
push
adc
outs
loopne
call
adc
test
pop
dec
scas
jbe
pusha
adc
fimul
xor
loop
jmp
mov
ret
pusha
and
ror
pop
mov
mov
arpl
jecxz
mov
rol
add
js
mov
ins
loopne
lods
jbe
gs
jle
inc
ins
jmp
clc
mov
cmps
add
mov
push
dec
and
in
cmps
mov
scas
lds
enter
in
lds
shr
jg
std
int
fstp
shl
stos
cmps
push
inc
(bad)
stos
test
test
xor
jmp
pop
bndstx
gs
add
fdivr
imul
shr
icebp
call
iret
ja
jg
xchg
rcl
add
adc
adc
call
in
jge
(bad)
imul
ftst
push
sub
mov
cmp
out
jge
outs
inc
je
inc
jne
mov
fisubr
lds
jge
lea
pop
or
mov
ss
enter
fldcw
push
stc
adc
fsubr
dec
in
call
mov
ja
retf
xor
and
jbe
js
in
push
pop
pop
pusha
fmul
ss
adc
pop
shl
push
push
scas
adc
inc
shl
sti
repz
mov
pusha
jbe
xlat
dec
fcom
in
mov
ret
es
sub
mov
xchg
in
out
movs
leave
repz
cdq
fadd
icebp
push
push
jg
fild
xchg
and
xor
inc
std
scas
xor
sar
out
sbb
jmp
repz
push
retf
fwait
dec
test
retf
fsub
pop
ss
mov
clc
test
pop
push
movs
std
push
sbb
dec
daa
or
loopne
popa
aaa
push
add
add
clc
aas
and
mov
and
inc
and
loope
sbb
ds
scas
mov
xchg
cld
int3
xor
cmp
sbb
test
cmps
or
test
adc
and
push
pop
dec
stos
mov
dec
dec
jge
(bad)
ret
cld
push
jo
dec
mov
cmp
jb
movs
ins
sbb
daa
fisub
pusha
pusha
push
sbb
hlt
stc
ror
int
push
dec
jmp
push
int
jae
or
xchg
xchg
lds
cwde
sbb
mov
sub
xchg
lods
jmp
outs
ja
jns
sub
jp
xchg
pop
mov
dec
outs
(bad)
stos
jl
jnp
mov
(bad)
(bad)
mov
mov
sbb
sub
jbe
pop
sub
jl
inc
xchg
pop
aas
mov
loopne
lods
aas
ffreep
mov
enter
cmp
fstp
fstp
std
or
bound
or
add
dec
dec
mov
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
rol
cmc
imul
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
shl
fdiv
xor
dec
sahf
mov
cmps
arpl
cwde
into
fstp
mov
jg
mov
ins
bound
icebp
in
repz
cmps
inc
sbb
pusha
dec
fisttp
and
mov
mov
jmp
sub
mov
push
sbb
ja
out
jo
ja
jle
in
xlat
loope
hlt
push
std
pop
mov
ja
jne
xor
cmp
inc
adc
movs
sbb
loope
or
fist
push
mov
iret
cmps
stos
gs
leave
addr16
pop
xchg
jecxz
mov
cmp
jp
sub
cmc
retf
xchg
mov
mov
popa
test
scas
pop
fistp
cdq
retf
ret
and
xor
cli
cmc
sti
pop
outs
test
or
aaa
gs
(bad)
jmp
lahf
fisubr
fdiv
or
push
out
rol
test
in
ins
stc
pop
in
cmp
mov
jb
shr
enter
xlat
add
push
jb
ins
xchg
push
aam
or
cwde
sbb
out
add
pop
pop
adc
movs
ins
movs
mov
xor
clc
cli
lahf
inc
dec
cmp
ret
sahf
add
mov
lods
bound
rcr
pop
push
das
(bad)
pop
mov
sub
mov
int
ficom
fwait
shr
wbinvd
mov
lea
neg
inc
and
dec
push
outs
xchg
(bad)
sbb
push
sbb
mov
clc
mov
xor
push
loop
and
imul
pop
and
pop
adc
mov
push
cmp
dec
out
push
xchg
test
sbb
fstp
scas
ret
cmps
(bad)
or
pusha
jae
xor
add
sub
ret
stos
test
gs
clc
add
mov
jne
pushf
inc
cmp
xor
movs
mov
xchg
push
sub
jge
mov
xor
aam
(bad)
out
div
fwait
enter
jae
sub
add
ins
inc
lods
xchg
stos
xchg
fsub
cmp
ret
jnp
cld
popa
call
sub
popf
ins
call
push
mov
sti
clc
sti
mov
lds
adc
cwde
jae
mov
add
repnz
enter
mov
mov
pop
ins
mov
xchg
daa
ins
and
shr
xchg
aaa
out
xchg
mov
rcl
or
dec
jnp
std
mov
or
dec
dec
cld
mov
dec
add
ins
jle
out
imul
cmp
fcom
cs
pop
xor
pop
aam
scas
dec
dec
sub
mov
sbb
xlat
ret
mov
mov
cld
fistp
pop
mov
ins
iret
add
or
mov
(bad)
jb
pop
ret
fs
mul
add
push
adc
mov
aaa
inc
or
dec
sub
push
dec
js
fisub
xor
mov
push
pusha
call
daa
push
cmp
retf
pop
(bad)
ins
and
cwde
push
push
xor
popa
cmp
sub
ins
adc
dec
mov
(bad)
fmul
dec
pop
and
ds
shl
push
push
(bad)
rol
test
shl
out
mov
pop
sbb
push
jno
imul
ror
and
std
add
and
xchg
enter
shr
popf
sbb
push
dec
mov
into
mov
outs
retf
push
adc
cmp
sub
xchg
in
aaa
ja
leave
pop
sbb
inc
mov
cmp
pop
in
out
out
mov
cmp
icebp
dec
ss
adc
sahf
push
rol
mov
pusha
or
adc
pop
fcomi
dec
loopne
adc
adc
jno
idiv
out
and
add
arpl
ins
xchg
sbb
mov
popa
jb
cmp
mov
nop
pop
xchg
inc
xchg
push
push
xor
inc
(bad)
cdq
xor
cmp
data16
mov
test
das
lods
xchg
out
and
inc
fisttp
fxch
cmp
les
push
arpl
inc
sbb
push
jb
shl
test
and
(bad)
xor
pop
push
rcl
pop
jbe
xor
and
jmp
(bad)
lock
retf
popf
scas
ja
jge
fnstsw
(bad)
(bad)
jecxz
cs
fimul
and
jmp
push
(bad)
adc
pop
jle
pop
jo
mov
rol
stc
enter
je
push
sbb
in
add
in
add
std
adc
cmp
push
mov
push
inc
xchg
cmps
std
or
sti
xchg
cli
mov
pop
(bad)
xlat
pop
sub
jno
sti
jmp
mov
data16
iret
cmp
lds
mov
scas
pushf
push
add
and
pop
inc
inc
daa
movs
jns
and
sbb
sbb
mov
inc
xlat
or
jge
(bad)
sbb
sub
xor
jg
add
jge
daa
push
sub
mov
js
add
or
mov
mov
xchg
fst
sub
and
cmp
ins
mov
mov
cmp
ficom
xor
retf
int3
xor
lock
mov
xchg
stos
cmp
mov
dec
mov
js
push
mov
mov
cmp
mov
fild
and
xor
out
aam
sbb
lahf
loop
shl
shl
jl
dec
push
addr16
cmp
dec
or
(bad)
xor
retf
cmp
xchg
jmp
scas
mov
mov
cmps
sbb
pop
popf
sub
inc
xchg
or
scas
lds
(bad)
int3
ficom
fsubr
in
and
aaa
adc
xchg
jbe
rol
jno
inc
mov
or
jecxz
bound
fdiv
imul
cmp
mov
fst
jne
sbb
gs
outs
call
lea
gs
mov
jae
pop
mov
inc
fst
fmul
jno
stos
pop
mov
jl
iret
jp
aam
gs
push
mov
retf
pop
or
stc
mov
inc
dec
lods
jle
int3
fsub
mov
push
xor
pop
push
ja
les
push
xchg
or
imul
cmp
leave
mov
dec
add
pop
xor
or
imul
stos
adc
cmp
out
inc
jecxz
dec
pop
mov
and
movs
gs
ret
xor
mov
sbb
xchg
fiadd
mov
mov
(bad)
neg
xor
and
movs
mov
adc
add
hlt
in
mov
push
out
(bad)
push
jbe
test
mov
mov
mov
inc
inc
xor
lds
call
push
and
cmp
cmp
out
imul
mov
mov
sub
psllq
movs
pop
dec
lahf
adc
pop
cmp
movs
sub
scas
in
xchg
lahf
mov
clc
rol
icebp
sub
imul
xchg
hlt
mov
dec
sbb
sbb
hlt
mov
repz
repnz
dec
das
add
push
sbb
inc
adc
(bad)
(bad)
inc
mov
dec
lods
faddp
mov
enter
enter
hlt
mov
mov
bound
cld
jb
lock
cmps
inc
dec
(bad)
aas
or
mov
mov
add
pop
repz
cmp
adc
cmp
push
fist
fdivr
mov
mov
ja
sahf
jb
aaa
std
and
jge
les
inc
fsub
outs
dec
mul
inc
imul
mov
icebp
push
aaa
mov
loopne
jecxz
in
shl
mov
jo
enter
jge
jmp
xchg
test
xchg
add
jns
jb
lds
cdq
mov
mov
lods
jmp
aaa
pop
cmp
imul
pop
fidivr
retf
jp
xor
add
jl
loop
mov
add
int3
jle
ss
mov
pop
out
mov
ins
add
mov
pop
sub
xchg
jnp
out
test
mov
aam
adc
xlat
xor
std
out
or
mov
je
or
xor
(bad)
mov
mov
pop
sub
aam
dec
fimul
inc
cmp
jecxz
fistp
cmp
stc
sbb
inc
inc
test
mov
xor
adc
and
ret
push
mov
pop
pop
mul
addr16
jmp
jp
loop
sbb
pop
in
and
cmp
mov
jmp
xor
xor
fcom
jne
cmp
and
and
dec
mov
imul
inc
cmp
push
sbb
nop
xor
lea
dec
mov
xchg
mov
or
mov
mov
nop
lock
add
pusha
iret
push
sub
xor
shr
and
inc
dec
sub
mov
sbb
push
cmps
push
sahf
(bad)
ss
push
pusha
mov
or
sbb
or
lods
jmp
adc
jmp
(bad)
ds
test
adc
pop
fcmovb
dec
mov
mov
int
adc
pop
imul
add
or
repz
loope
popa
push
sahf
sbb
pushf
in
or
add
dec
lods
hlt
sbb
mov
out
mov
jno
pusha
sub
and
jb
push
bound
sar
jmp
fidiv
jg
or
push
mov
sub
jnp
push
inc
mov
(bad)
cmp
arpl
cs
mov
xchg
jae
cwde
cmp
lahf
cmp
sbb
mov
xchg
sti
aad
mov
or
inc
ja
xchg
mov
ins
sbb
mov
xor
jp
clc
push
mov
cmp
ins
push
das
xor
iret
sub
jge
clc
inc
shl
push
(bad)
mov
xor
stc
fisubr
ins
push
cwde
dec
push
lahf
or
inc
sbb
pop
sbb
fimul
xor
mov
sub
cli
xor
push
inc
cmp
fwait
daa
popw
xchg
mov
inc
in
push
jp
mov
in
out
sti
pusha
mov
fst
xor
call
shr
ror
data16
add
test
test
(bad)
sbb
in
jo
xchg
xchg
push
es
xchg
aam
daa
mov
push
cwde
(bad)
fld
or
out
xchg
cmovbe
inc
sti
adc
and
loopne
push
lods
int
imul
xor
rol
xchg
push
add
push
movs
pop
add
push
push
adc
and
mov
push
xchg
dec
or
or
jmp
mov
dec
icebp
adc
inc
fwait
test
inc
pop
mov
outs
(bad)
jecxz
shl
dec
jb
repnz
push
adc
dec
out
dec
es
xor
push
pop
jb
push
push
jl
ss
div
sbb
and
cdq
les
repnz
and
fisubr
(bad)
sub
xor
cmp
sub
jg
push
ins
sub
inc
inc
jno
push
cmp
add
outs
mov
push
push
(bad)
xor
aam
mov
lods
loop
inc
xchg
rcr
test
scas
lahf
cmc
mov
mov
mov
cmc
mov
or
add
clc
cmp
call
(bad)
in
pop
sbb
stos
and
loop
pop
mov
ins
cbw
mov
in
retf
pop
bound
pop
jo
int3
jb
xor
adc
pop
cmc
je
mov
adc
adc
shl
fnstenv
push
mov
inc
call
(bad)
sbb
push
dec
(bad)
or
mov
(bad)
or
(bad)
sbb
(bad)
pop
push
ss
xchg
stos
xor
push
stc
dec
arpl
lods
sbb
mov
out
mov
jge
lock
inc
and
adc
movs
lahf
dec
push
mov
mov
neg
in
into
mov
iret
inc
inc
in
push
sbb
fwait
std
cmp
aas
dec
or
or
das
ja
jle
pop
das
pushf
mov
lods
nop
xor
or
sahf
cmp
push
cmp
fistp
(bad)
in
fcomp
loop
in
mov
jbe
mov
sub
or
lods
ins
jmp
adc
xlat
mov
int3
dec
cmc
jl
dec
leave
shl
xchg
scas
add
(bad)
cli
loope
push
in
ret
sahf
mov
mov
les
cmps
cmps
repnz
fdiv
mov
call
outs
js
pop
pop
mov
test
jnp
sbb
xchg
test
pop
jnp
(bad)
(bad)
cmc
pop
jge
sahf
lock
pushf
(bad)
dec
xchg
xchg
fsub
minps
lods
shl
and
scas
test
pusha
xor
jbe
fistp
jmp
loopne
aas
bound
sub
lahf
sbb
mov
lahf
and
sub
xor
iret
lea
or
adc
push
and
push
rcr
or
pop
das
popa
out
fcom
popf
dec
js
jne
ja
jae
mov
shl
into
xchg
test
sub
pushf
ja
xchg
xor
leave
scas
stc
test
rcr
adc
fnstenv
imul
mov
mov
add
call
out
mov
xor
xor
stc
fimul
outs
push
add
ins
jg
push
(bad)
mov
adc
addr16
or
xor
cmp
es
sub
mov
cmp
sub
xchg
rcl
pop
push
and
lods
push
imul
add
in
xor
sub
(bad)
rcl
dec
push
push
add
mov
mov
popa
and
jbe
retf
clc
and
mov
cmp
test
cmp
sbb
ror
stos
bound
bound
mov
push
clc
and
mov
adc
sbb
adc
cmc
inc
cmc
outs
pop
inc
in
test
push
mov
sbb
sub
mov
or
pusha
push
push
cmp
lods
sbb
popf
jb
adc
aam
inc
test
(bad)
or
mov
inc
cmps
cmps
addr16
jge
mov
rol
jg
in
pop
jmp
pop
and
adc
sbb
and
call
xor
adc
xchg
or
in
jl
jl
outs
xor
fsubr
push
mov
adc
sub
addr16
clc
sti
jl
movs
js
adc
aad
inc
jg
in
daa
out
xchg
imul
je
cwde
ss
fstp
fidiv
lds
not
cmp
outs
pause
jge
sbb
cdq
mov
mov
lods
aam
or
add
xlat
and
mov
mov
and
cmp
or
fcmovu
das
sti
add
sti
add
in
rcr
push
jnp
clc
mov
cmp
int3
mov
shl
pop
push
jno
cmc
into
clc
ds
add
fcmovnbe
dec
stc
ror
sahf
sub
scas
call
push
inc
push
into
xchg
adc
adc
icebp
sub
fwait
pop
jo
pop
sbb
(bad)
cmp
push
rol
cwde
add
pop
pushf
cmp
repnz
(bad)
inc
jno
leave
cmp
mov
cmp
sahf
int3
xchg
aas
nop
sub
pop
imul
push
mov
mov
push
les
dec
or
and
jg
out
ins
or
fcomp
or
dec
stc
jmp
pop
jmp
fnstcw
xchg
iret
out
aam
and
std
push
sub
sub
std
push
add
adc
pop
das
jne
in
loop
popa
or
xchg
dec
adc
add
(bad)
push
mov
push
ins
adc
push
and
pop
cwde
(bad)
(bad)
jge
fbstp
repnz
or
or
stos
jnp
mov
je
xchg
ins
dec
loopne
fdiv
cmp
(bad)
push
neg
jo
daa
xor
aaa
leave
dec
push
fsubr
das
aas
stos
loopne
call
jecxz
mov
scas
(bad)
push
daa
mov
ss
addr16
sti
repnz
std
jge
sub
cmc
addr16
das
sub
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
stos
es
add
jge
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
xchg
nop
out
out
push
nop
outs
gs
movs
add
xchg
sbb
xor
inc
mov
cmp
or
jg
jecxz
pop
ret
movs
push
jle
rol
and
cli
repnz
out
leave
dec
packssdw
or
dec
and
mov
popf
pop
push
addr16
mov
int
(bad)
in
pop
lock
sub
les
aad
pop
push
push
ret
pop
in
in
sub
push
pop
jbe
and
jmp
push
cmp
cs
or
sahf
xchg
xchg
mov
cmp
or
adc
mov
pop
cdq
mov
nop
push
xchg
add
in
es
dec
cli
gs
jmp
jnp
shl
ins
lds
fsub
fist
bound
sti
pop
fsub
repnz
mov
pop
loop
sbb
or
mov
add
movs
test
aad
movs
or
(bad)
mov
pushf
enter
enter
pop
inc
movs
cmp
es
(bad)
mov
xor
ds
mov
adc
xchg
adc
sbb
out
fild
push
movs
neg
jbe
mov
lahf
sbb
jmp
scas
jge
jle
push
pop
lods
push
movs
ins
xor
xlat
push
loop
dec
mov
xor
adc
lds
cwde
cdq
(bad)
dec
and
jbe
xor
sbb
sub
rcr
loopne
push
shr
cmp
fidiv
fmul
fwait
sub
clc
mov
jo
ss
shl
ss
je
cmp
jl
imul
pop
xchg
jns
cld
je
ror
or
pop
mov
mov
inc
out
shr
rol
and
outs
test
adc
lods
xor
xchg
cmp
jle
pop
mov
rcr
mov
aas
gs
or
cmp
xor
cmps
hlt
das
pop
push
lea
aaa
or
and
loope
push
pop
sub
out
mov
cdq
loopne
add
sbb
and
call
std
jp
mov
cs
pop
mov
repnz
dec
enter
push
nop
outs
xchg
mov
mov
shl
out
inc
mov
sbb
pop
es
mov
inc
aam
and
ins
xlat
popa
sbb
jl
or
add
lods
xchg
call
xor
lds
cmp
cdq
movs
inc
mov
repz
mov
pop
mov
push
mov
jb
jg
pop
lods
stc
cmp
(bad)
ret
jmp
sub
scas
es
jbe
in
xchg
dec
sti
scas
arpl
xchg
mov
jnp
and
test
out
pop
mov
dec
or
cmps
push
inc
cmp
jne
xor
pop
mov
cmp
ds
jnp
je
mov
mov
(bad)
cld
cmp
cmp
clc
jno
retf
and
cmp
les
cdq
cmp
test
sti
and
pop
icebp
adc
mov
or
adc
ret
dec
loopne
xchg
scas
es
mov
loopne
fimul
lahf
aad
scas
xchg
jl
jae
jmp
fisttp
sbb
cmp
jmp
test
icebp
clc
out
mov
jecxz
sub
rol
into
jmp
lods
fsubr
xor
mov
jo
repz
push
aas
adc
stos
pop
jle
mov
inc
jg
retf
call
in
add
jb
cmp
adc
mov
stc
add
inc
adc
mov
dec
inc
jb
imul
fwait
mov
call
repz
pop
mov
jne
(bad)
push
int3
push
mov
pop
std
fst
cmp
cwde
arpl
(bad)
repnz
pop
cmps
fwait
jge
push
test
mov
(bad)
pop
cmps
add
clc
jbe
jmp
dec
jecxz
cmc
sar
mov
aam
test
dec
add
or
stos
das
or
jns
repnz
pop
xchg
sbb
sbb
test
mov
(bad)
xchg
push
push
das
xor
stc
push
lods
shl
jne
popf
pusha
jg
outs
push
pop
fdivr
(bad)
push
(bad)
fisub
jno
mov
cmp
inc
xor
cmp
push
retf
sub
jb
dec
stos
mov
out
fisttp
in
pop
enter
mov
cmp
jnp
mov
mov
imul
pop
imul
loop
dec
aam
sti
jmp
pop
test
cli
add
jno
pop
mov
out
inc
or
rcr
cmp
and
adc
push
xchg
add
sbb
jecxz
mov
ins
push
stc
fadd
pop
std
and
pop
hlt
repnz
clc
enter
fwait
jne
inc
cmp
mov
repz
mov
or
mov
sbb
inc
and
adc
pop
adc
mov
rcl
jnp
cmps
dec
daa
(bad)
(bad)
jo
(bad)
dec
inc
cmp
loopne
rol
mov
sub
push
or
cmps
pop
add
sub
leave
xchg
stos
mov
push
dec
dec
movs
xor
cmp
dec
cld
scas
sub
mov
mov
and
inc
(bad)
sti
pop
shl
jmp
aad
retf
addr16
enter
daa
dec
xor
mov
xor
fnstcw
and
adc
btc
xchg
in
push
push
jmp
fnstcw
ret
cmp
adc
loop
(bad)
inc
jne
dec
test
xchg
inc
mov
xchg
pusha
mov
jge
mov
dec
adc
rcl
fbld
mov
jne
aam
adc
es
mov
xchg
xchg
arpl
lock
add
jns
mov
daa
cmps
ss
mov
cmp
les
push
fs
enter
dec
scas
xchg
jp
daa
das
sbb
(bad)
sbb
xor
adc
scas
retf
mov
aaa
sub
mov
cli
int3
xchg
xor
sbb
out
pop
xor
pop
out
cmp
cmp
iret
and
jge
push
dec
mov
and
outs
jg
push
jp
cmps
mov
lods
dec
push
or
mov
sahf
mov
mov
mov
sbb
sub
add
mov
mov
cld
ficomp
sahf
push
out
jmp
pop
jg
clc
icebp
rcl
mov
lods
inc
cmp
mov
cmps
mov
cmps
ins
stos
mov
xor
std
daa
rcl
in
pusha
jmp
out
js
mov
xor
push
test
push
lods
aas
mov
push
inc
add
jb
ss
aam
in
cld
push
pop
call
shl
add
dec
dec
pop
nop
enter
or
(bad)
inc
sub
daa
imul
jne
xchg
int3
pop
sub
ret
jge
fs
cmp
jbe
sub
test
movs
xlat
sub
out
(bad)
sbb
add
cmps
pop
lds
and
cmp
inc
xchg
adc
movs
cli
pop
add
mov
aaa
hlt
xor
mov
and
lods
mov
call
add
sbb
test
mov
jle
add
(bad)
pop
test
es
adc
and
(bad)
dec
add
rcl
jnp
or
lods
popa
loope
sbb
dec
add
mov
gs
inc
es
or
xor
cmc
inc
ins
xchg
inc
data16
iret
aad
adc
mov
mov
stos
dec
mov
mov
push
jg
shr
retf
xchg
sbb
push
in
sbb
push
out
jmp
loopne
cmp
iret
icebp
cmc
repnz
cmp
cdq
(bad)
sub
enter
inc
jnp
mov
xor
mov
xor
sub
lock
and
or
ins
inc
sub
mov
jecxz
(bad)
pop
inc
cmps
hlt
pop
inc
movs
movs
pop
cli
loope
cmps
cmp
jno
icebp
mov
push
mov
dec
les
push
psrlw
xchg
sbb
pop
mov
xor
xchg
pop
inc
mov
sub
lds
div
repnz
mov
cmp
dec
inc
fistp
lods
lods
stos
jg
mov
mov
aam
mov
push
call
cmp
xor
ficom
popa
push
(bad)
jbe
pop
sbb
out
mov
call
dec
pop
push
repnz
cmp
arpl
and
imul
and
ss
fwait
mov
push
pop
and
movs
mov
sbb
pop
xor
mov
sbb
sbb
(bad)
mov
je
push
cwde
add
jmp
jmp
pop
xor
pop
jmp
mov
xor
jae
call
fcmovnbe
mov
add
push
pop
popa
sub
(bad)
xchg
mov
cmp
or
dec
aam
mov
jecxz
scas
sbb
in
cmp
and
in
std
shl
pop
shr
add
cdq
cmp
sub
sbb
pop
mov
fimul
cmps
add
addr16
popf
int
push
jl
adc
xor
and
jmp
cmp
jbe
dec
mov
jge
pop
movs
adc
(bad)
mul
mov
cmp
int
lahf
jno
adc
sub
jo
ins
neg
stos
push
inc
mov
ds
fbld
leave
shl
and
mov
(bad)
adc
adc
dec
pop
mov
inc
pop
mov
retf
mov
pop
cli
loopne
jnp
nop
xor
mov
xchg
test
mov
(bad)
cmps
clc
iret
cwde
ins
sbb
mov
dec
hlt
xor
call
pop
fcomp
jb
mov
clc
push
dec
add
jnp
push
pusha
icebp
scas
fisubr
sti
mov
ss
(bad)
dec
dec
push
xchg
retf
xor
mov
or
push
sbb
xor
icebp
or
int3
push
movs
test
lods
mov
lods
aam
repz
mov
or
adc
aas
cmc
xor
ja
ficom
mov
sbb
xchg
mov
aaa
and
mov
(bad)
mov
mov
icebp
sub
mov
inc
mul
push
clc
mov
mov
jmp
fist
test
das
jecxz
fisub
pop
mov
adc
ss
leave
cmp
ds
dec
jb
jmp
push
mov
inc
xchg
popa
or
jge
mov
sbb
int3
bswap
xor
mov
mov
pop
inc
rcr
adc
in
and
enter
scas
lock
rcr
add
fs
rol
test
ins
inc
pop
mov
xor
jecxz
push
stos
scas
aas
repnz
cmp
out
push
fnstcw
jg
cmp
pusha
jb
repz
out
mov
popf
add
lods
dec
sub
ins
fdivr
std
into
inc
jmp
popf
icebp
(bad)
jecxz
cdq
pusha
fs
shl
cli
aam
icebp
sub
psrad
aaa
test
xchg
jmp
mov
pop
ja
push
les
pop
mov
mov
movs
jecxz
jae
inc
jl
or
xor
imul
stos
jmp
rcl
dec
lods
push
pop
stc
imul
fnsave
into
adc
mul
mov
mov
add
scas
jl
cmp
fst
out
rcr
sti
xchg
aam
mov
ja
retf
repnz
mov
and
jbe
movs
mov
dec
shl
mov
adc
fst
mov
pop
test
adc
mov
loop
popa
sbb
inc
daa
scas
fimul
mov
push
mov
repnz
mov
lods
(bad)
jne
dec
(bad)
ins
push
cmp
sbb
icebp
push
or
push
ins
sti
mov
imul
ds
bound
and
push
and
push
mov
loopne
mov
mov
lea
ror
pop
jno
mov
pusha
retf
add
xor
pop
sbb
int
add
inc
jb
mov
mov
inc
fwait
push
rcl
cmp
xchg
push
fs
push
mov
fwait
sub
cmp
arpl
mov
push
aaa
pop
ss
cmps
and
out
lahf
jb
pop
xchg
fiadd
(bad)
in
pop
dec
fnstsw
sti
ins
jp
icebp
iret
neg
or
jb
les
ss
das
xchg
jnp
adc
adc
popf
xchg
mov
iret
xor
mov
retf
mov
mov
pop
retf
jbe
inc
sub
sbb
frstor
sbb
jge
push
call
sub
add
adc
in
push
or
pop
push
sti
pop
stos
mov
in
add
test
sbb
mov
mov
pop
lea
cmp
cdq
fild
nop
call
or
add
loop
hlt
push
pusha
push
movs
jae
hlt
inc
xchg
xor
call
mov
addr16
push
out
mov
bound
mov
cmp
cli
jle
xor
imul
lahf
lods
xor
or
loope
iret
mov
es
in
in
pop
mov
adc
mov
fist
(bad)
retf
dec
jecxz
inc
jle
mov
fwait
in
pop
ins
sar
xchg
jnp
sub
xchg
mov
outs
dec
or
and
fcmovnu
fisttp
and
ss
or
outs
jmp
and
and
rcl
push
add
(bad)
pop
sahf
pusha
mov
(bad)
jmp
cld
leave
sub
pusha
clc
cmp
mov
iret
repz
jns
sti
mov
into
test
jp
pop
sbb
or
adc
jae
sti
jae
(bad)
ret
leave
pop
jl
add
jle
pop
inc
in
pushw
adc
sbb
push
push
fidiv
push
mov
dec
push
movs
adc
pop
mov
(bad)
mov
arpl
int
outs
sub
into
rcl
and
cmp
outs
sbb
repnz
or
cli
sub
dec
test
mov
jns
jmp
(bad)
out
sbb
sub
push
(bad)
das
es
repnz
rcl
popf
push
stc
mov
mov
lea
push
bound
mov
inc
xor
out
js
ins
dec
push
test
scas
(bad)
and
sahf
inc
popa
jbe
fstp
sbb
pusha
movs
xor
sbb
lds
jl
movs
mov
leave
in
push
call
cmc
shl
dec
test
daa
fisubr
jp
(bad)
jmp
add
ror
cmp
sub
add
gs
popf
in
mov
mov
fadd
sbb
fstp
cmp
xor
in
cmp
test
xchg
mov
dec
in
dec
mov
mov
dec
out
pop
outs
pop
mov
cmps
adc
add
ds
push
pop
faddp
or
dec
mov
or
iret
pop
lods
daa
ins
adc
loop
inc
lea
xchg
pop
xchg
pushf
xchg
push
repz
hlt
pusha
(bad)
jge
push
rcr
cmp
ret
imul
fsub
mov
out
fcmove
sbb
popf
inc
data16
scas
push
loope
cmp
cmp
std
mov
iret
xor
fnsave
jl
frstor
mov
or
in
mov
pop
shr
fst
or
pop
mov
dec
mov
pop
add
mov
(bad)
mov
adc
or
sub
bound
mov
ret
call
xor
pop
imul
test
mov
idiv
cmp
inc
pop
cmc
dec
mov
call
call
mov
mov
jp
sti
inc
frstpm(287
cld
iret
xor
repnz
push
cmp
cmps
inc
sub
rcl
outs
sub
fadd
sub
xchg
and
scas
jbe
jae
mov
sbb
hlt
inc
(bad)
inc
jp
xchg
stc
out
leave
sbb
sti
sbb
stc
adc
imul
leave
xchg
mov
xchg
(bad)
es
sub
fcom
scas
mov
jmp
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
(bad)
(bad)
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
je
fwait
out
ror
mov
shl
sahf
mov
ja
cmps
dec
sbb
cwde
mov
(bad)
(bad)
lock
idiv
cmp
inc
cmp
cmp
mov
xor
inc
mov
cmp
jo
jp
inc
push
in
pushf
xor
dec
cld
mov
jp
mov
in
mov
push
scas
call
(bad)
mov
push
sar
inc
mov
sbb
jecxz
cmp
xor
test
cmp
mov
nop
scas
je
cmp
outs
xor
in
cli
jl
lods
cdq
out
popa
addr16
ret
push
jae
jg
lods
mov
ds
cmps
mov
push
cmp
mov
ins
ss
bound
les
push
inc
stc
adc
jg
mov
stc
in
bound
stos
jge
shl
loope
outs
(bad)
movs
repnz
imul
sbb
retf
je
mov
sub
fidiv
inc
mov
jae
mov
adc
push
pop
jno
jnp
into
push
dec
(bad)
movs
pusha
sti
mov
loop
xchg
fist
sbb
(bad)
(bad)
ror
jbe
je
outs
inc
ja
out
mov
out
xchg
ja
pop
inc
(bad)
jp
cld
sub
adc
xor
les
sbb
mov
mov
not
repz
retf
aas
mov
(bad)
out
mov
mov
push
jbe
jnp
jns
inc
jp
jp
sahf
xchg
cmp
in
cmp
jne
push
ds
call
rcl
pop
sar
sub
mov
shl
shl
pop
mov
add
xchg
fisubr
cli
dec
dec
pop
icebp
fucomi
popf
ja
fimul
mov
pop
cdq
sub
jge
cld
adc
pop
add
mov
xor
and
out
rol
cmp
and
inc
data16
int3
rcr
fild
push
fcmovnb
fdivr
btr
repnz
sbb
mov
adc
sbb
or
jmp
or
movq
push
call
rcl
push
rep
xor
cmps
sub
sbb
in
in
sub
jmp
jp
fstp
dec
cmp
(bad)
clc
sub
add
add
or
ss
mov
or
pop
int
cmp
mov
jle
sbb
fwait
out
sub
gs
test
mov
xchg
cwde
jne
sub
mov
test
out
xchg
mov
stos
js
xor
mov
inc
jg
xchg
pusha
sbb
xor
popf
mov
push
or
fstp
ror
mov
adc
pop
test
cmp
push
adc
pop
jmp
das
mov
pop
mov
daa
rol
xchg
jl
inc
jle
mov
mov
sar
and
test
pop
xor
popf
sbb
pop
call
aad
add
mov
call
call
and
xchg
inc
loopne
cmp
ret
(bad)
cdq
push
bound
pop
cmps
fwait
sahf
push
rol
fs
(bad)
icebp
dec
cmps
movs
sub
jp
lods
imul
or
pop
cli
mov
lea
aam
imul
fist
ror
push
mov
sub
out
inc
aaa
xor
add
in
loop
ins
sbb
dec
jne
xor
aad
inc
push
push
cs
mov
rcr
push
xchg
mov
es
mov
cli
leave
repnz
adc
loopne
iret
loope
mov
mov
mov
cli
dec
fild
outs
dec
ror
cmc
mov
popf
cmp
jns
div
adc
xchg
push
mov
mov
push
int3
jno
pushf
test
xchg
jae
adc
lds
movs
ss
in
sbb
shr
pop
cld
aam
xchg
repz
mov
dec
xor
test
mov
fistp
pop
add
fbstp
lock
ja
out
loope
xor
popa
jo
jb
ss
retf
popf
dec
push
push
cs
sub
icebp
idiv
enter
add
ins
pandn
xchg
adc
outs
neg
fsub
add
or
xchg
f2xm1
bound
ret
aad
loopne
test
jl
scas
jnp
add
test
lods
bound
imul
aas
ret
retf
or
pop
dec
and
pop
aam
lock
fsub
and
dec
rol
jmp
push
repnz
xor
repz
mov
gs
and
adc
mov
int3
push
jge
and
mov
add
rcl
aas
or
imul
xor
or
or
xor
pop
cmps
cmp
mov
push
ficom
iret
xchg
(bad)
pop
push
jne
and
push
and
jg
push
xchg
mov
pop
icebp
(bad)
add
push
addr16
ins
out
(bad)
or
aad
lods
test
add
es
xchg
je
mov
mov
push
fwait
cld
lahf
out
or
out
mov
sbb
adc
push
lods
xchg
fldenv
pushf
mov
jno
stos
int3
mov
add
jae
inc
rcr
sbb
clc
lahf
mov
out
pushf
ja
setg
(bad)
cmp
ret
dec
hlt
shl
jmp
test
addr16
dec
xchg
xchg
jecxz
call
and
mov
inc
add
mov
test
mov
out
inc
or
cmp
movs
test
sahf
jae
mov
cmps
xchg
dec
inc
dec
cmps
cmp
jb
ds
aaa
and
fs
push
fwait
(bad)
fadd
stc
pop
add
mov
addr16
push
add
icebp
pusha
sti
mov
cmp
mov
ror
mov
jmp
jle
push
repz
mov
or
(bad)
das
xchg
pop
loope
push
sbb
fistp
jne
sub
sahf
pop
inc
mov
inc
fmul
jmp
daa
dec
cmp
enter
mov
sub
movs
push
cmc
pushf
mov
shl
push
adc
call
fld
js
or
ins
pop
and
test
cmps
mov
cmp
les
imul
ins
cmp
jbe
mov
ins
mov
shl
mov
fist
in
(bad)
or
mov
test
int
and
rol
mov
aaa
jmp
xchg
xchg
mov
test
cmp
adc
out
cmp
add
jbe
mov
and
sub
xor
scas
call
bound
sbb
cmp
add
xchg
into
inc
dec
inc
cmp
jne
shl
fistp
xor
push
ror
fsubrp
movs
jb
sub
and
adc
pop
jl
fild
movs
clc
xor
sbb
pushf
mov
sahf
lods
xor
shl
mov
sub
add
inc
repz
icebp
inc
and
outs
movs
cwde
dec
bound
arpl
pop
jns
sbb
add
out
sbb
xor
mov
adc
ret
adc
jbe
xor
in
xchg
loop
in
sbb
push
mov
mov
lods
push
shr
dec
cmp
mov
in
dec
rol
sub
ret
push
ret
adc
(bad)
daa
jle
sbb
out
add
je
xor
mov
inc
dec
dec
and
das
pop
add
jne
add
or
psllw
jmp
xchg
sbb
das
nop
add
pushf
xchg
jne
rcl
jg
jp
add
dec
jecxz
fsqrt
jle
scas
sub
mov
dec
sti
mov
sub
popa
repz
das
in
xchg
mov
mov
lahf
imul
inc
nop
in
push
imul
xchg
mov
leave
popa
and
inc
iret
call
sbb
xchg
jmp
scas
cmp
test
neg
(bad)
mov
into
sbb
enter
mov
dec
pop
sahf
jo
repz
add
pusha
or
inc
push
fnstenv
out
xchg
ins
scas
push
xor
fnstcw
inc
je
(bad)
out
sub
mov
shl
fwait
xchg
cld
dec
(bad)
call
mov
jl
pop
(bad)
sub
ror
shr
and
jmp
cmp
fucomp
aad
(bad)
out
in
arpl
jmp
out
push
push
fld
ins
push
fsub
add
jbe
push
cs
sbb
js
inc
jp
aaa
fmulp
and
(bad)
les
push
push
cmp
mov
stos
enter
cmp
mov
les
pop
scas
mov
fidivr
sub
add
xor
pop
mov
das
jg
or
cmp
jb
div
mov
dec
and
push
(bad)
mov
mov
sub
push
xor
stos
retf
mov
loope
xchg
dec
idiv
cmp
mov
inc
add
and
xchg
dec
xchg
xchg
mov
adc
aad
movs
sub
fstp
pop
jae
stc
sahf
inc
fnstcw
iret
xchg
cmc
rcr
scas
outs
stos
nop
into
sub
xor
cld
enter
sub
outs
mov
dec
in
mov
jp
call
int
or
mov
inc
shl
inc
pusha
inc
movlps
stos
ficom
adc
xor
jb
data16
push
jbe
ja
push
stc
clc
push
jle
loope
hlt
add
stos
pop
scas
nop
cmp
pop
inc
pushf
pop
out
sar
push
ret
add
mov
jmp
jle
stc
push
shl
mov
ret
push
aas
mov
adc
out
cmp
call
sar
in
mov
icebp
add
pop
or
jp
pop
retf
shl
movs
cmc
lahf
scas
sbb
popa
lea
cmp
and
xchg
jp
or
enter
nop
fnstenv
jge
ret
das
fwait
pop
pop
mov
les
shl
addr16
cwde
jle
out
lods
daa
repz
fistp
and
mov
(bad)
push
in
or
mov
mov
ins
mov
mov
popf
out
xor
ins
mov
push
shr
and
out
js
mov
mov
ficom
pop
dec
pushf
mov
xor
std
movs
sub
and
ds
jnp
and
fld
pop
outs
stos
dec
fst
jecxz
fsubr
sbb
rol
pushf
cmps
ret
in
and
(bad)
fs
jb
popa
and
xchg
dec
aad
jb
(bad)
out
mov
(bad)
aaa
scas
mov
xchg
cmp
fidivr
xchg
cmp
cwde
pop
jno
(bad)
jl
lds
xchg
xlat
mov
test
fwait
mov
push
ret
aaa
aam
lea
dec
ss
jmp
inc
cmps
xchg
sub
pop
cs
shl
pop
inc
add
push
mov
into
fst
sar
cmp
and
mov
out
inc
into
sbb
ret
out
jp
jp
sbb
or
or
test
iret
cmp
mov
pop
xor
mov
xor
sbb
mov
movs
jge
cmps
aas
jnp
fstp
inc
sub
adc
test
out
fisub
hlt
cmps
jmp
pop
dec
out
imul
call
xchg
mov
adc
ret
iret
int3
and
dec
pop
mov
pop
mov
js
outs
and
clc
sbb
mov
or
mov
ins
in
xor
cmps
lock
cmps
repnz
cmc
popa
mov
mov
clc
dec
jge
sub
vmovq
out
xor
dec
xlat
xor
inc
repnz
push
jo
push
mov
in
scas
xchg
popa
ins
call
and
out
pop
aas
enter
daa
jmp
aaa
jae
shr
cwde
and
stos
ins
loopne
mov
or
push
xlat
dec
sbb
jmp
xlat
xor
push
sar
iret
xlat
mov
and
mov
sahf
fldcw
stos
cmps
jecxz
mov
in
sub
push
cmp
rcr
out
(bad)
aas
mov
xor
cld
into
pop
in
mov
hlt
xchg
mov
xor
fisttp
lea
mov
movs
mov
jmp
in
xor
fld
mov
cvtpi2ps
pop
or
sub
test
in
imul
lahf
mov
jecxz
in
or
pop
cmp
mov
pop
xor
les
outs
pop
jg
cmp
gs
inc
mov
in
sbb
mov
dec
out
mov
fdivr
scas
mov
xchg
fiadd
xor
jp
test
sub
hlt
inc
xchg
aad
int
inc
sbb
les
cmp
xchg
push
mov
push
dec
scas
push
popa
ins
mov
(bad)
(bad)
cmp
jo
ret
mov
dec
xor
push
push
and
in
jnp
(bad)
adc
jp
and
pop
and
sbb
shr
fwait
xchg
sub
mov
je
(bad)
cmp
cdq
xchg
mov
pusha
push
loope
cmps
and
loope
stc
scas
cmp
add
dec
loope
mov
mov
cmp
movs
mov
lock
sub
neg
test
and
(bad)
in
stc
push
fimul
mov
outs
(bad)
mov
pop
inc
iret
xor
and
cdq
pop
in
xchg
sbb
ins
or
xchg
xor
fcmovbe
pop
jo
dec
leave
pusha
or
cmps
bound
addr16
aam
aam
enter
mov
sub
repnz
dec
pop
and
movs
cs
adc
inc
in
push
cmps
ret
or
iret
mov
pop
scas
and
jnp
sahf
jns
lods
sbb
cwde
rcr
lods
sbb
in
movs
push
ins
jmp
stos
jmp
cmp
(bad)
jge
and
js
ss
inc
or
xor
cmp
clc
push
outs
mov
repz
add
jns
shl
dec
cmp
push
jbe
push
jecxz
jbe
inc
adc
jbe
dec
into
ins
push
mov
add
or
xchg
fdivr
cld
and
dec
lods
leave
sub
in
or
popf
popf
pop
addr16
adc
or
popf
and
push
pusha
or
in
adc
aaa
xor
pusha
adc
gs
adc
das
cmc
mov
les
out
popf
pop
add
dec
and
sub
xchg
popf
idiv
call
jne
inc
or
mov
sbb
das
hlt
je
sub
mov
sahf
popf
test
mov
mov
adc
pop
jb
mov
cmps
jno
add
out
inc
mov
ret
test
pop
push
dec
xor
das
das
test
jne
popf
jae
test
frstor
ins
and
mov
add
inc
cmps
push
dec
shl
add
outs
cld
leave
test
cmc
add
dec
xchg
xor
mov
push
inc
popf
aas
shl
mov
ss
xchg
or
mov
or
sbb
mov
ss
fcomp
add
into
pop
jmp
xchg
xor
mov
mov
mov
scas
sub
test
ins
push
out
aaa
jge
(bad)
movs
ins
call
pop
mov
test
arpl
jne
scas
mov
int3
mov
pop
loop
out
or
jbe
test
mov
aam
xlat
(bad)
cmps
xor
or
add
xor
dec
mov
inc
clc
jecxz
cs
mov
add
push
inc
ret
xchg
add
je
bound
and
xor
cli
dec
inc
stos
xor
aaa
(bad)
sub
sub
dec
bound
lds
leave
ja
out
or
sbb
pop
sbb
loopne
outs
and
sbb
push
aam
mov
cli
fwait
push
in
dec
(bad)
aaa
sbb
jmp
test
cwde
test
test
aaa
lahf
sbb
test
(bad)
(bad)
push
enter
cs
mov
pop
hlt
mov
inc
xchg
mov
push
pop
cmp
cs
loopne
stos
and
pop
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
rep
inc
lods
int
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
rcl
out
or
or
xchg
out
nop
out
nop
push
jmp
mov
push
dec
nop
nop
out
dec
inc
stc
ds
push
add
call
inc
aaa
scas
es
jnp
cli
xor
loopne
sbb
cmp
(bad)
push
dec
jo
or
fldcw
ja
sti
push
int
dec
repnz
loop
aad
outs
ror
mov
mov
call
cld
dec
call
aam
jns
mov
jle
out
rol
sbb
sub
jmp
stos
jle
add
xor
jae
and
add
ret
pop
mov
push
sbb
ret
add
add
mov
xor
jp
mov
xor
rcl
clc
or
std
cmc
mov
bound
jo
dec
add
dec
(bad)
cs
dec
sbb
push
int3
hlt
pop
outs
test
xor
jbe
and
push
hlt
pop
test
and
jbe
test
push
jmp
lods
xchg
je
shr
mov
pop
xor
mov
xchg
mov
cwde
es
ret
add
pop
cmc
test
ror
xor
test
push
or
(bad)
and
scas
push
fcom
loop
sbb
ja
lods
es
mov
mov
int
mov
idiv
daa
cmps
fsub
push
xor
scas
dec
xor
imul
jl
xchg
inc
outs
jg
mov
mov
push
movs
pop
push
push
mov
in
cdq
or
dec
jmp
sub
or
icebp
ror
sahf
(bad)
out
cwde
popf
fnstsw
sbb
jne
mov
test
pop
mov
pop
mov
or
test
fist
cmc
test
aas
adc
enter
cmc
or
stc
stc
mov
idiv
js
xor
das
and
lods
xchg
std
or
pusha
lods
adc
aam
cmp
lahf
mov
out
mov
aam
mov
retf
retf
and
fwait
mov
shl
fnstcw
xor
adc
pop
ins
push
and
sub
daa
pop
psubw
ret
sub
shr
or
sub
cli
fsubr
jnp
mov
push
and
(bad)
cmp
enter
jae
out
in
cmps
sub
(bad)
inc
shl
daa
rol
or
xchg
xor
sbb
ja
imul
sbb
mov
jae
add
push
and
test
loopne
cmc
pop
xchg
pop
cmp
xchg
test
sub
add
je
test
mov
sbb
jns
dec
xchg
jecxz
adc
js
dec
ja
repz
mov
xlat
adc
sub
inc
jl
jle
xchg
popf
and
adc
std
loop
mov
ins
or
adc
push
adc
sub
daa
jo
repz
out
stc
aaa
inc
sti
fsubr
xlat
ss
les
xchg
(bad)
int3
sahf
(bad)
mov
ficom
adc
or
jae
outs
ror
cmc
mov
cld
xchg
or
and
clc
cmp
sbb
sahf
sub
push
stos
fadd
lahf
test
jo
and
movs
jl
pop
add
loopne
dec
in
fdivr
mov
adc
mov
in
and
in
lods
cld
xchg
cld
xchg
(bad)
imul
sub
inc
sar
cld
xchg
push
cmps
repnz
or
cwde
sbb
pop
fwait
push
sbb
inc
cmps
xchg
add
mov
into
mov
jmp
push
pop
hlt
xchg
mov
arpl
cmc
(bad)
jmp
mov
push
sub
push
(bad)
fbld
cmp
sti
sub
test
(bad)
cld
ins
jae
lods
fbstp
push
neg
mov
dec
push
retf
xor
cwde
dec
fist
cmps
add
scas
rcr
das
aam
cdq
inc
mov
cmp
pop
xor
hlt
and
(bad)
stc
repnz
jle
out
lock
xlat
sub
jmp
mov
xor
neg
add
or
jb
push
sbb
mov
lea
div
push
cmps
cmp
xor
xor
cmps
cmp
adc
leave
shl
adc
(bad)
scas
imul
mov
fmul
inc
sahf
dec
mov
stos
push
jae
repz
and
mov
in
call
cmp
adc
lock
sub
cmova
movs
mov
clc
aad
inc
jno
push
cmps
iret
jp
loopne
cs
cmc
js
ins
inc
push
mov
add
push
xchg
ins
xchg
test
mov
out
xchg
test
mov
arpl
dec
rcr
add
mov
sti
fistp
je
sub
out
mov
(bad)
(bad)
and
shr
xor
int3
fucomp
rcl
add
ret
dec
sbb
pop
mul
xchg
add
ss
xchg
je
jle
(bad)
and
leave
imul
push
out
in
hlt
add
mov
add
and
mov
jmp
movs
mov
lds
enter
mov
sub
pop
(bad)
adc
addr16
push
aas
repz
inc
cdq
cvtdq2ps
jp
or
bound
jecxz
les
sbb
push
cmps
imul
jmp
or
(bad)
pop
iret
xchg
dec
sub
pop
hlt
mov
js
and
jb
test
mov
mov
xchg
cld
mov
mov
push
xor
fisttp
cmp
sbb
cmp
mov
mov
cli
ret
add
push
mov
xchg
into
sub
push
repz
jns
fcom
arpl
popf
fisubr
ins
adc
xchg
lds
js
xchg
jnp
ins
cmp
cmc
popf
mov
mov
fdivr
xor
in
cdq
mov
enter
cmp
test
jne
(bad)
sbb
(bad)
repz
inc
imul
mov
xchg
arpl
add
or
shl
or
dec
enter
adc
clc
mov
or
push
push
mov
inc
sub
sub
xor
dec
mov
ds
sbb
push
sub
int
inc
fild
fwait
nop
iret
leave
dec
jge
pop
mov
sti
bound
pop
fidiv
setns
inc
and
ins
push
push
inc
adc
in
jo
addr16
xchg
jno
dec
jp
sbb
lds
add
cdq
push
outs
dec
sub
fadd
jg
xlat
mov
push
jae
out
jp
push
rcr
mov
test
sub
push
dec
movs
int3
ficom
xor
in
jbe
cmps
aam
rol
test
fadd
stc
les
popf
mov
sbb
movs
imul
mov
shl
jmp
fiadd
sub
fwait
icebp
xor
scas
arpl
push
pop
inc
xor
cmp
pop
mov
ret
inc
adc
stos
clc
out
nop
inc
push
arpl
int3
pop
jecxz
movs
ret
ret
push
xor
mov
stc
out
(bad)
test
sub
retf
lods
jns
fidiv
inc
mov
imul
pop
cmp
adc
mov
in
lea
outs
into
sbb
fcom
test
(bad)
in
mov
retf
jl
das
cmps
outs
inc
sub
xchg
push
retf
ins
pop
inc
cs
cwde
pop
pusha
push
call
ds
sub
je
js
add
adc
movs
addr16
je
imul
jmp
pop
adc
xor
fdivr
loope
adc
add
stos
call
enter
fdivp
inc
push
dec
xor
push
sub
sahf
cmp
ja
cld
popf
mov
(bad)
cmc
push
(bad)
sub
pop
inc
ror
es
cli
mov
fdivr
adc
mov
jg
test
mov
pop
adc
addr16
clc
scas
daa
push
sub
int3
mov
cs
mov
or
inc
loop
jbe
les
push
mov
dec
jl
iret
shl
aad
lods
push
neg
out
rcr
jle
sar
push
or
call
popa
pop
and
adc
cmp
push
sub
movs
stos
mov
iret
dec
xor
pop
movs
mov
sub
fmul
push
outs
push
mov
in
xor
shr
pop
test
adc
lahf
inc
enter
inc
cmp
mov
fs
out
add
and
or
stc
mov
pop
das
scas
cmp
sbb
mov
and
test
aam
cmp
jp
stos
std
or
sub
push
and
mov
aas
add
sbb
das
(bad)
dec
ins
fstp
push
rcl
push
cmps
enter
push
and
jnp
inc
xor
lods
or
pop
sub
outs
jnp
mov
inc
lahf
mov
test
adc
(bad)
xchg
sub
out
imul
or
xchg
jbe
push
enter
xchg
call
out
or
inc
fwait
ret
lock
xor
jp
xchg
in
inc
test
in
bound
push
mov
sahf
fadd
jno
iret
pop
push
mov
hlt
lahf
jb
loope
dec
push
fisubr
mov
aaa
sub
test
ss
sub
xor
xchg
wbinvd
jmp
jne
movs
in
or
test
mov
sub
movs
fisttp
sub
aad
rol
mov
sti
sahf
(bad)
lock
test
sbb
pop
sub
scas
fsub
push
jecxz
or
sti
(bad)
clc
mov
repnz
xor
push
add
in
mov
mov
cmps
cmps
jle
mov
adc
leave
jb
lods
sahf
shr
pop
test
popf
or
mov
add
xchg
xchg
aam
cli
sbb
or
imul
mov
rol
mov
dec
cdq
xor
or
mov
cli
and
stc
lahf
fmul
inc
test
cmps
pop
repz
jecxz
xor
mov
sti
neg
xor
xchg
mov
outs
mov
aad
in
movs
inc
jle
mov
cld
or
pop
jecxz
int
sub
mov
inc
jp
sbb
call
mov
aam
mov
inc
inc
mov
push
and
and
in
in
mov
push
adc
push
adc
pop
adc
and
mov
push
push
mov
xchg
ror
imul
imul
add
daa
sbb
scas
das
cmp
lods
shl
out
push
repnz
dec
xchg
neg
pop
dec
sti
inc
sub
sub
das
adc
adc
stc
fdivr
idiv
cs
xchg
add
into
xor
mov
push
hlt
js
xchg
std
inc
in
add
rol
(bad)
repz
and
test
and
dec
mov
out
test
rcr
add
loope
aas
mov
push
or
pop
push
xor
ret
sub
jecxz
ror
pop
ror
pop
sub
(bad)
pop
(bad)
pop
add
xchg
lds
lods
fnstenv
inc
fiadd
add
fadd
retf
test
int3
out
mov
xchg
imul
xor
inc
push
mov
push
cmp
arpl
push
lock
cmp
jg
call
lahf
ins
push
and
and
sub
sbb
jb
enter
leave
retf
pop
mov
xchg
push
sbb
dec
jns
mov
pop
xor
jbe
xor
fcmovne
ja
xchg
addr16
jp
mov
sub
and
pop
psubsw
fild
or
sbb
ja
jbe
fbstp
pop
(bad)
test
add
sbb
lea
mov
test
push
shl
ja
mov
push
sbb
retf
test
(bad)
dec
cli
adc
sbb
push
sub
lods
fcom
pop
outs
pop
xor
mov
xchg
mov
inc
mov
mov
pop
sbb
loop
in
fcomp
ds
cmp
dec
sbb
shl
int3
push
jmp
inc
inc
in
dec
mov
adc
ret
repz
lods
adc
xchg
xchg
jmp
(bad)
in
cmp
leave
jo
pop
mov
pop
retf
add
push
fmul
jmp
lds
popf
fnstenv
push
clc
ret
fwait
je
sbb
mov
adc
fimul
addr16
mov
cld
aaa
cmc
mov
mov
cli
mov
ret
xchg
lock
test
jecxz
push
test
pusha
inc
aad
js
and
sub
cmp
dec
ins
push
std
loopne
ja
lds
clc
push
call
das
jnp
mov
sub
jp
and
inc
push
pop
pop
int
(bad)
push
test
push
shl
or
xchg
imul
pop
imul
test
push
sbb
aas
pop
fninit
mov
jbe
stos
nop
or
fstp
data16
out
rol
shl
lahf
imul
or
jecxz
push
mov
ret
stc
cmp
sbb
in
fld
pop
push
adc
sti
out
mov
add
repnz
push
pop
ins
leave
xor
mul
jo
pushf
jg
jno
ss
sar
inc
and
ret
stos
add
add
scas
dec
dec
shl
mov
shl
fisttp
dec
iret
push
stc
(bad)
fdiv
enter
pop
dec
mov
mov
xchg
mov
(bad)
jb
adc
inc
cmp
(bad)
fisttp
mov
(bad)
hlt
je
std
jmp
stc
neg
mov
or
cs
loope
mov
fst
adc
cmp
call
int3
dec
(bad)
dec
push
pop
xchg
aam
aas
div
push
adc
cmp
cmp
out
pop
retf
scas
cwde
fild
dec
ss
cmps
sbb
and
aaa
cdq
pop
movs
or
neg
enter
test
lea
jno
lods
(bad)
frstor
loop
outs
fstp
adc
jg
pop
mov
push
mov
popa
ret
push
jp
sub
(bad)
outs
xchg
inc
in
rcl
mov
imul
ja
shl
dec
or
pop
sub
add
jb
jbe
dec
xchg
stos
and
xchg
(bad)
mov
rcr
inc
repnz
jmp
adc
or
test
cs
in
das
es
xor
pop
cmp
leave
xchg
sub
jle
lahf
mov
jns
xchg
mov
rcr
xor
into
pop
cmp
imul
iret
popf
and
xlat
sub
lods
jl
les
push
inc
popf
mov
pushf
dec
mov
mov
fistp
cmc
sahf
fs
loopne
retf
popf
jmp
sub
cmp
imul
or
aad
jne
push
pop
inc
(bad)
popa
mov
mov
scas
fimul
into
les
ins
imul
adc
sub
cmc
xor
neg
xchg
lods
dec
push
pop
call
fwait
sub
or
ins
in
retf
push
or
neg
into
lods
sbb
inc
xchg
mov
clc
adc
xchg
into
or
dec
cli
add
repnz
jmp
mov
mov
adc
or
in
mov
inc
xchg
push
ins
xor
int
enter
je
shr
mov
xor
inc
mov
pop
dec
xor
in
cmp
dec
or
xchg
pop
inc
inc
shl
jmp
sub
in
xchg
not
aad
lahf
lahf
lock
outs
mov
dec
ret
cmps
cmp
lahf
jne
pop
xchg
test
xor
enter
inc
xor
or
out
jecxz
stos
fisttp
cwde
pusha
jecxz
or
mov
(bad)
add
stc
out
jg
stc
out
jg
scas
add
inc
sbb
fisttp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
pop
retf
pop
ss
xchg
imul
popa
jne
mov
gs
sbb
pop
mov
pop
pop
mov
pop
jns
cmp
inc
xor
mov
hlt
shl
mov
push
dec
inc
lods
xchg
xor
pop
mov
adc
mov
cmps
imul
pop
bnd
stc
sub
sub
pop
or
xchg
add
and
cmps
scas
and
xor
iret
dec
xor
outs
xlat
jl
stos
fimul
xchg
out
xor
daa
push
dec
mov
dec
fstp
jno
popa
mov
loope
stc
nop
xchg
xchg
nop
pop
adc
fsub
sbb
ror
lea
xor
jmp
sub
sub
add
cmc
fs
xor
pop
das
in
sub
inc
mov
cmp
add
mov
sub
js
cmc
(bad)
out
push
mov
outs
test
xor
inc
leave
es
(bad)
loopne
push
ss
imul
jnp
sub
sub
movups
jb
cmp
sbb
adc
out
and
xchg
pusha
mov
cmc
cmps
cli
or
fldlg2
aad
mov
cmp
lock
imul
add
inc
outs
jnp
sub
and
nop
jecxz
loopne
lods
pop
dec
outs
xchg
or
test
mov
dec
adc
(bad)
jmp
pop
cmp
cmp
mov
scas
pop
cmps
js
fwait
inc
add
jecxz
pop
icebp
ss
test
sbb
jecxz
mov
cmp
icebp
xchg
mov
hlt
add
pop
adc
hlt
adc
repz
inc
jmp
cwde
icebp
test
xchg
lock
pop
cli
add
shr
or
mov
sahf
inc
mov
ss
cmp
test
jmp
fild
test
xchg
mov
aaa
imul
jbe
mov
test
sbb
and
loop
xchg
mov
call
jmp
mov
mov
inc
addr16
mov
xchg
and
scas
retf
jae
(bad)
dec
mov
leave
jecxz
int
jg
pop
push
xchg
rcr
test
fisub
adc
sbb
scas
icebp
(bad)
retf
imul
jbe
or
mov
fisubr
xor
mov
xor
sub
sub
stc
or
rol
adc
sub
rcr
jg
popa
enter
adc
out
inc
jle
scas
jg
jb
xchg
ret
xor
cs
call
mov
lahf
jb
add
retf
lods
call
das
out
imul
mov
jmp
lods
jg
outs
call
inc
inc
and
add
sub
mov
scas
jmp
out
add
ror
and
push
mov
dec
and
cmp
sub
cs
movhps
imul
xor
pushf
add
pop
loopne
jne
enter
scas
cmps
test
(bad)
scas
loope
xor
shl
push
iret
mov
aam
mov
and
in
inc
mov
out
popf
pop
test
and
mov
cmp
push
jmp
cwde
sub
pusha
stos
fnstenv
jb
xor
jg
imul
adc
lahf
test
fsubrp
outs
push
add
aaa
cdq
mov
or
or
repnz
push
jae
sub
xor
sar
push
ins
and
test
xor
xor
mov
xlat
mov
stos
pop
push
icebp
sti
xor
mov
loop
mov
arpl
mov
inc
mov
cli
sbb
pop
ror
mov
(bad)
retf
xor
loope
shl
shl
ss
push
xchg
mov
jbe
push
push
inc
les
nop
sar
jp
or
inc
ret
mov
jecxz
das
(bad)
popa
add
jp
dec
sbb
xor
fcomi
jbe
push
jbe
xlat
mov
call
outs
out
jo
arpl
pop
mov
stc
pusha
mov
test
push
loope
push
and
jne
sbb
xor
dec
ss
or
scas
lds
ins
call
lahf
jno
(bad)
(bad)
jmp
push
mov
gs
jmp
adc
jae
mov
jecxz
sbb
cmp
push
and
mov
ins
push
shl
mov
or
cmp
jl
jl
cmp
out
jbe
mov
and
stos
or
pop
test
enter
popf
push
int3
enter
test
test
mov
xchg
or
retf
sbb
fcom
(bad)
cli
dec
aad
ret
in
pop
mov
add
pop
lods
out
dec
sbb
inc
hlt
mov
jp
fnstsw
stos
and
pop
pushf
push
cld
mov
repz
mov
push
cwde
mov
movs
inc
shrd
cs
pop
div
movntq
dec
sar
pop
adc
shl
sub
mov
movs
add
mov
movs
repnz
fistp
push
or
sub
add
movs
bound
jecxz
pushf
or
jne
mov
lahf
sbb
scas
mov
push
lahf
jmp
mov
or
lock
cmp
ins
stos
ins
jno
es
xor
aad
call
cmc
loopne
cmps
mov
xchg
call
fs
push
(bad)
jecxz
icebp
pop
pushf
(bad)
data16
push
test
xchg
xchg
retf
out
lahf
mov
add
mul
push
adc
scas
cli
mov
es
bnd
sti
jl
mov
cmp
xchg
dec
mov
xchg
and
loop
das
ss
aad
ins
push
jecxz
iret
mov
stos
dec
sub
cdq
fwait
addr16
out
push
sbb
cmp
mov
retf
ret
pop
outs
cld
mov
mov
sahf
dec
jmp
mov
icebp
in
fdivr
rcr
and
adc
xchg
mov
fst
xchg
pop
cmp
sbb
push
fwait
addr16
in
or
and
mov
adc
jno
and
sbb
in
out
push
ins
and
rol
ret
sar
xchg
imul
dec
iret
cmp
sti
test
jae
aam
dec
lods
inc
push
out
add
xchg
out
adc
cmps
cmps
lock
xor
sti
test
out
fadd
in
jno
fwait
das
cmp
push
jl
jo
xor
and
scas
mov
pop
out
int
sti
pop
and
pop
out
dec
cmp
icebp
cmp
repnz
out
push
pop
inc
jl
sub
rol
sti
jl
out
push
xchg
xor
cwde
xor
pop
fadd
xor
rcr
mov
and
inc
imul
push
retf
je
push
push
fbstp
(bad)
and
sub
out
jg
push
pushf
sbb
cmps
xchg
pop
dec
inc
repnz
jecxz
dec
push
xchg
and
std
iret
sub
adc
xchg
cld
ret
mov
aaa
ret
xchg
aam
sahf
sbb
cmp
out
out
fimul
loope
mov
push
jle
int
inc
adc
mov
jl
sar
and
dec
(bad)
xchg
mov
sub
iret
jae
pushf
aas
int3
jl
pop
xor
movsx
mov
shl
xchg
xchg
add
lock
mov
repnz
mov
inc
mov
or
mov
into
push
xchg
inc
cmps
ret
xchg
jno
xchg
push
jns
mov
add
clc
pop
push
adc
mov
push
movs
addr16
xchg
popf
sub
jecxz
cmp
test
ret
and
dec
adc
ds
repz
jge
xor
dec
mov
pop
and
cmp
mov
in
bound
cdq
pop
fsub
jp
mov
pop
mov
inc
test
std
in
mov
fucomip
push
dec
push
add
sar
in
pop
xor
sbb
fadd
and
push
ins
hlt
sub
mov
dec
mov
mov
adc
push
loope
cld
sub
sub
inc
or
add
ret
xor
imul
pop
jmp
rol
jmp
sti
and
sbb
repnz
jmp
jge
xlat
aam
bound
add
in
pop
sub
lods
push
fsub
les
loope
imul
inc
(bad)
hlt
lock
pop
leave
push
fwait
or
push
shl
jl
xchg
inc
sub
mov
push
jne
push
das
das
lods
aam
enter
jae
ret
cli
pop
inc
pop
inc
push
xor
add
int3
sbb
gs
repz
out
ja
ss
aam
cwde
adc
xor
js
movs
repz
jl
mov
popf
clc
adc
inc
frstor
imul
sub
xchg
aam
ret
inc
dec
mov
ss
out
rol
addr16
nop
sub
push
push
ret
mov
mov
push
inc
inc
adc
xchg
(bad)
adc
idiv
mov
mov
or
and
sbb
test
mov
lds
adc
jnp
out
and
xor
jno
cmps
lea
into
(bad)
into
xchg
and
arpl
jmp
fistp
dec
sub
xchg
cmp
pop
in
mov
retf
xor
call
sbb
aas
inc
inc
daa
xor
mov
pushf
and
mov
dec
dec
dec
and
out
jg
(bad)
test
test
fisubr
scas
ins
jae
push
add
js
mov
out
adc
and
loop
into
sbb
mov
hlt
lods
push
popf
push
xor
div
mov
cmps
adc
dec
hlt
mov
mov
jp
add
arpl
(bad)
out
movs
retf
mov
call
xchg
inc
xchg
sbb
jmp
dec
push
jmp
scas
pop
mov
ret
xor
mov
mov
cwde
mov
mov
sbb
dec
mov
lods
mov
cmp
push
(bad)
(bad)
and
loop
ds
inc
leave
or
ins
mov
enter
ret
inc
imul
mov
inc
jge
pop
push
xchg
out
inc
cmp
enter
cwde
in
jne
fsub
cli
pop
adc
jl
push
xchg
sbb
data16
cwde
ds
inc
ins
dec
or
jp
pushf
mov
cmp
repz
mov
addr16
dec
out
rcr
xlat
mov
mov
pop
mov
in
sbb
mov
cli
ret
adc
xchg
inc
and
mov
cmp
cmp
in
lods
mov
das
in
mov
or
or
es
push
inc
(bad)
imul
mov
mov
sub
inc
jno
popf
cmc
push
xor
push
mov
sbb
fild
lock
js
dec
mov
sti
mov
fdivrp
cs
cmp
dec
mov
test
xchg
xchg
pusha
xor
shl
mov
loope
or
and
add
xchg
loope
fdiv
mov
cmp
mov
xchg
sbb
call
pop
add
sub
mov
stc
and
inc
ins
std
mov
or
aam
(bad)
and
stc
rcr
sub
(bad)
xlat
mov
test
cdq
adc
and
imul
push
imul
cmp
in
cmps
adc
sub
retf
std
xor
div
adc
mov
data16
jbe
movs
jbe
into
mov
mov
cdq
xor
(bad)
in
repnz
push
call
sub
mov
cmp
call
push
jmp
(bad)
jbe
push
(bad)
pop
aam
or
sbb
and
mov
push
mov
es
mov
aad
sbb
dec
xor
int3
das
test
imul
lds
pop
xor
retf
xor
loopne
(bad)
out
mov
mov
lods
push
loope
ins
add
mov
mov
or
sbb
pusha
loopne
ins
fwait
or
add
inc
or
loop
add
ror
pop
dec
into
and
lahf
sti
retf
or
push
sbb
test
icebp
mov
ret
test
adc
dec
out
je
jae
test
in
ficom
push
call
cmp
inc
pop
mov
cmp
shl
dec
sbb
into
in
popf
mov
inc
test
xchg
in
sub
add
mov
dec
mov
in
(bad)
lds
fwait
sti
dec
add
dec
add
test
(bad)
xchg
mov
jp
adc
cmps
xchg
div
mov
push
push
xchg
fist
(bad)
out
mov
mov
sti
in
jae
push
(bad)
ror
jmp
addr16
addr16
dec
mov
mov
cmp
imul
cmc
add
mov
inc
or
fucom
pop
repz
dec
jbe
push
cmp
iret
pop
mov
fistp
cmp
mov
sub
mov
push
sbb
or
jno
addr16
push
sbb
pop
pop
pop
stos
and
xchg
imul
push
nop
pop
push
mov
push
adc
std
mov
inc
out
lods
jmp
inc
fmul
rol
cs
xor
and
ja
mov
ja
imul
fnstenv
pop
sbb
pushf
rcl
ins
push
mov
sar
out
cmp
shl
mov
push
xchg
mov
lock
test
inc
hlt
repz
cmp
jl
mov
xor
pop
imul
mov
sub
les
repz
inc
jae
mov
jg
ret
cmps
mov
jge
lds
fsubr
xchg
neg
mov
pop
std
cmp
sbb
adc
mov
and
dec
paddusw
jns
pop
hlt
enter
push
inc
mov
push
ss
push
lahf
pop
and
mov
inc
cmp
pop
pop
cmp
jmp
add
push
xor
fdivp
push
lods
retf
loop
fnstenv
ja
and
in
stos
jmp
mov
retf
ret
cmc
das
sub
repz
shr
(bad)
and
xchg
push
stc
mov
movs
inc
fcomip
ds
push
pop
les
or
pop
ret
sbb
push
ror
es
add
call
lea
jl
fsubr
or
dec
mov
lds
test
lock
daa
mov
push
inc
xlat
js
xor
xor
push
pop
cmp
sbb
and
lea
aam
push
nop
push
repnz
mov
push
and
pusha
fcom
mov
cli
ret
enter
add
sahf
push
push
bound
nop
stc
and
cmc
lods
xor
aam
inc
push
jne
sahf
clc
sbb
adc
inc
lds
stc
ficom
(bad)
out
call
fld
mov
adc
not
add
fidivr
daa
call
rol
imul
inc
or
dec
sbb
cmc
pop
push
sbb
test
test
sub
(bad)
pop
shr
loope
xor
popa
xchg
jne
xchg
jbe
popf
sbb
pop
jb
xor
cmp
inc
xchg
mov
call
fsubr
div
mov
movs
out
test
into
cs
dec
or
mov
ret
sbb
jle
jecxz
in
mov
push
sbb
jle
inc
shl
(bad)
data16
mov
inc
push
adc
pushf
rcr
pushw
test
jecxz
in
mov
add
mov
test
jmp
xor
ins
popf
pop
call
sub
xchg
pop
dec
int3
repnz
iret
popf
fdiv
call
test
(bad)
sbb
dec
pop
sub
ud2
aas
pop
mov
loop
xchg
add
sub
pop
retf
pop
jno
clc
(bad)
xlat
jecxz
cmp
sar
pop
mov
adc
aas
sub
or
(bad)
out
push
rcr
ja
adc
test
mov
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
and
out
mov
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
jmp
cmps
int
out
jmp
xor
call
cmp
cmps
int
xlat
cmp
pop
in
repz
rcl
lock
push
inc
fiadd
jg
add
vpshuflw
(bad)
jnp
arpl
push
inc
inc
jns
xor
into
jae
push
mov
adc
xchg
pop
adc
jg
mov
leave
addr16
dec
into
retf
mov
push
jmp
test
mov
std
std
push
mov
push
sti
jne
push
mov
icebp
out
and
or
adc
test
fstp
scas
gs
xor
push
jl
ficom
pop
pop
(bad)
hlt
js
dec
mov
imul
inc
mov
xchg
push
ret
push
jge
loope
mov
inc
mov
lods
lock
sbb
and
stos
mov
sub
xchg
in
pop
mov
(bad)
cmp
cmps
int
call
xchg
fbstp
adc
inc
fadd
in
jmp
push
mov
add
fild
mov
out
sbb
fadd
bound
fmul
inc
and
or
(bad)
aaa
mov
cmp
test
xor
xchg
jl
push
pop
push
sar
or
add
add
nop
test
rol
neg
stos
out
jp
cmp
sub
movs
jle
inc
mov
pushf
mov
sub
ja
mov
pushf
xor
push
arpl
(bad)
pop
retf
leave
dec
(bad)
into
xchg
mov
imul
scas
leave
jb
dec
pop
dec
rcl
mov
mov
retf
nop
pop
js
jae
pop
fisub
push
test
lods
std
ror
fstp
cmp
jecxz
mov
jle
xor
mov
in
fcmovnb
mov
aad
pop
ud1
add
dec
fdivr
xchg
push
rcr
jp
cmp
jae
into
leave
mov
or
or
push
adc
mov
inc
xchg
int
sbb
sar
pop
pushf
mov
retf
scas
jl
repz
dec
stos
push
fs
and
test
loop
push
mov
inc
xchg
push
stos
hlt
jno
(bad)
arpl
scas
out
and
lahf
fld
aas
mov
jg
rcl
add
dec
sub
pop
jmp
popf
sti
test
push
sbb
mov
popf
or
lea
stos
cmps
into
outs
popfw
lea
enter
sar
mov
movs
je
aam
out
cmps
loop
dec
jbe
mov
rol
pusha
dec
jmp
stos
arpl
mov
ins
mov
into
jp
push
ss
xor
sti
pop
repz
rol
mov
and
mov
xchg
ds
js
dec
sub
cmp
sub
adc
xor
in
inc
shr
mov
in
jle
lods
outs
push
xor
and
jmp
rcr
leave
cmp
sbb
ret
lods
adc
rol
(bad)
jle
test
xchg
pop
ret
gs
fimul
inc
sbb
mov
lods
xor
stos
and
xchg
push
int3
das
fucomip
mov
or
call
add
sar
mov
sub
push
pop
sub
mov
push
sbb
inc
popa
mov
enter
jae
dec
stos
imul
pop
inc
sti
push
or
xor
loop
(bad)
pop
iret
or
rol
aam
mov
dec
mov
xlat
int3
lods
mov
jge
mov
add
in
push
xlat
sbb
mov
sbb
nop
xor
jp
or
loope
mov
and
pop
xor
jnp
inc
pop
or
xchg
shl
mov
jg
xor
icebp
dec
stos
movs
fwait
cwde
jnp
xlat
cmp
push
(bad)
fimul
adc
dec
push
icebp
dec
(bad)
cld
xor
bound
ds
inc
sub
jge
dec
jb
gs
pop
shl
(bad)
gs
pop
mov
jg
jae
and
or
xchg
sahf
sbb
inc
mov
test
popf
push
or
push
(bad)
mov
sbb
in
push
fstp
call
scas
xor
dec
fdivr
xchg
adc
repz
cmps
retf
pop
xor
ds
mov
sub
call
mov
aaa
pop
test
mov
cmp
dec
repz
lods
sub
and
pop
push
ss
xchg
cli
and
dec
imul
add
mov
aaa
dec
sub
sbb
cmp
dec
jno
lods
adc
mov
aad
das
xor
jnp
adc
inc
adc
mov
aam
in
jne
jle
ficomp
sub
pop
cmp
push
push
cli
xor
adc
or
pinsrw
fld
fcomp
jne
lahf
pop
jne
arpl
mov
sub
mov
jecxz
lds
or
scas
adc
mov
or
mov
xchg
fisubr
sti
rcl
movs
xor
xor
out
push
and
fwait
or
xchg
jae
xchg
adc
icebp
cmp
lods
mov
arpl
enter
push
out
lahf
adc
ret
stos
into
xor
ins
xor
cwde
jge
adc
lahf
jmp
pop
dec
in
mov
xor
stc
sbb
imul
dec
(bad)
test
inc
xchg
test
sub
fmulp
lock
aas
mov
(bad)
cmp
cdq
shr
dec
pop
cdq
mov
dec
cld
push
pop
lahf
mov
sbb
movs
mov
sar
(bad)
or
mov
inc
pop
push
in
adc
fisub
pop
iret
mov
in
or
dec
sub
out
jmp
rcl
cs
ret
fld
icebp
push
fistp
aad
arpl
jmp
ret
lods
xor
add
rol
sbb
push
cmp
push
(bad)
lods
push
sbb
nop
mov
imul
in
xor
(bad)
cmps
dec
sub
xchg
mov
mov
cmp
stos
cmp
mov
cs
push
jmp
mov
(bad)
enter
sbb
mov
xor
adc
jae
inc
iret
icebp
jmp
jg
(bad)
cmc
test
div
cmp
aam
cmp
rcl
jle
int3
and
shl
sti
sub
dec
and
fdivp
mov
jecxz
pop
outs
fcmove
mov
test
push
xor
mov
xchg
fs
xor
mov
outs
xor
mov
pop
int
pop
xchg
fild
sub
mov
cld
jnp
test
push
clc
push
pusha
std
xchg
jae
inc
test
aam
mov
ds
inc
cmp
nop
fstp
mov
pop
cdq
pop
aaa
fwait
sbb
shr
pop
xor
push
cmps
sub
scas
sbb
jnp
xchg
rol
(bad)
(bad)
cmp
cmp
jno
cld
inc
fwait
ja
out
das
outs
jg
repnz
sbb
test
aas
in
mov
push
xor
and
dec
aaa
(bad)
fdivp
repz
outs
mov
repz
add
add
mov
es
pop
popa
push
lea
fdivp
or
aaa
andnps
movs
dec
enter
cmp
bound
iret
cmp
mov
sub
cmp
and
int
xchg
lea
ss
jns
cmp
push
retf
dec
test
xchg
mov
cmps
inc
inc
xchg
xchg
mov
sbb
outs
jmp
loop
mov
or
jle
icebp
jmp
add
cmp
imul
into
cmp
add
lea
mov
es
outs
adc
int
outs
mov
test
les
call
fdiv
imul
aam
call
mov
stos
hlt
mov
dec
inc
pop
mov
out
call
mov
jmp
sub
fisttp
push
xchg
(bad)
fcomp
dec
call
repz
jne
es
sbb
lods
xor
(bad)
and
sbb
or
mov
imul
mov
shl
and
xor
pop
je
and
inc
cmp
inc
dec
jg
les
pop
pusha
dec
loopne
mov
mov
cwde
leave
mov
jns
rcl
push
lods
push
jg
loope
mov
pop
gs
in
lock
lea
mov
inc
in
icebp
mov
xchg
cmps
outs
je
dec
mov
in
mov
jmp
xchg
sub
fdiv
mov
mov
mov
ins
lods
or
xchg
xor
jmp
test
mov
cmc
inc
and
addr16
mov
(bad)
aam
xchg
je
fwait
jle
and
add
mov
xchg
(bad)
repz
xor
imul
test
and
daa
inc
es
and
fsubr
and
call
pop
and
lahf
push
imul
gs
and
xor
cli
sub
add
mov
lds
in
loop
pop
sub
xchg
scas
or
or
mov
sub
or
(bad)
in
sub
push
inc
cmps
mov
mov
(bad)
jb
test
or
mov
ins
push
in
(bad)
retf
jo
stos
fisubr
jne
cmp
fadd
inc
aam
in
pop
fs
enter
enter
fs
jle
in
xchg
push
adc
xor
and
stos
jb
mov
int
adc
rcr
cmps
nop
mov
push
outs
or
add
and
xchg
shr
xor
rol
push
jns
mov
call
shl
or
jle
cmp
mov
push
not
adc
cmps
rol
inc
fldenv
xor
mul
in
mov
mov
lods
and
and
xor
test
xor
sbb
les
iret
(bad)
push
xchg
fimul
cli
ins
push
mov
push
inc
scas
sub
out
(bad)
mov
call
aaa
pop
fisubr
dec
rol
cli
pop
add
or
lods
fwait
gs
and
and
in
pop
test
leave
jb
ins
jns
nop
mov
cmp
dec
pop
inc
jecxz
or
or
loope
inc
retf
aad
xchg
xchg
leave
scas
and
adc
and
dec
push
and
pop
xchg
push
dec
cmp
inc
jp
and
into
mov
adc
xchg
js
pop
push
xchg
mov
mov
bound
out
push
xchg
mov
es
inc
push
scas
pop
cmp
xchg
icebp
add
sbb
xor
fsub
adc
ror
aas
inc
repz
(bad)
(bad)
lea
stos
xlat
call
sub
pop
jp
pop
sub
pushf
xchg
dec
jbe
jp
push
add
popf
aaa
adc
iret
loope
lahf
je
dec
jg
push
movs
int3
sbb
push
bound
out
std
retf
cmp
movs
inc
aaa
sbb
jl
not
test
iret
inc
mov
cmps
adc
and
icebp
jo
add
sbb
ret
dec
fisub
in
push
and
cli
inc
pop
call
sub
cld
fiadd
test
shr
fs
stos
sbb
adc
add
or
xchg
aad
call
and
(bad)
stos
xchg
add
xchg
sbb
sbb
nop
xchg
and
xchg
push
fcmovnbe
mov
jmp
mul
ret
and
jae
mov
xor
dec
inc
fimul
out
inc
test
inc
pusha
jecxz
and
pop
in
push
fcmovnb
push
dec
pop
pop
add
dec
xor
mov
add
ret
jo
jne
inc
(bad)
dec
scas
ja
fisttp
movs
ror
out
xchg
cs
adc
aas
cmc
dec
inc
xchg
pop
inc
int
dec
imul
sbb
jnp
ins
retf
pop
pop
hlt
mov
xchg
lods
lea
shr
int3
ret
ret
retf
fwait
data16
outs
ret
add
loope
cdq
fcomp
pop
mov
fdiv
push
pop
jle
and
or
les
jns
mov
jnp
fadd
dec
ds
adc
repnz
cmp
je
sbb
ffreep
sub
cmp
push
scas
push
into
push
out
fist
pop
js
jecxz
imul
add
imul
cli
data16
lds
in
jae
loope
mov
xchg
mov
mov
(bad)
push
out
test
ja
push
lods
dec
jae
lods
mov
iret
lods
stos
push
jne
inc
mov
pop
mov
out
jb
daa
and
xchg
dec
shr
cmp
jle
cmp
mov
aaa
push
call
idiv
dec
push
lods
mov
(bad)
xlat
xor
sbb
in
xchg
imul
int3
pop
ror
hlt
inc
call
(bad)
jmp
push
in
push
repnz
mov
xor
(bad)
pop
int
push
jb
mov
test
fucomp
pop
xchg
inc
int3
pusha
sub
outs
jne
jl
stos
pop
cmp
ins
test
popf
retf
imul
pop
jno
pop
shl
pop
das
lds
cmp
push
ret
(bad)
ror
call
pop
test
push
dec
mov
ret
scas
sbb
xor
mov
add
inc
cs
lods
inc
inc
jmp
arpl
xor
fs
shl
(bad)
scas
push
cmc
add
bound
neg
pop
stos
push
add
add
add
dec
pop
mov
repz
das
nop
mov
stc
pop
mov
arpl
leave
test
sub
push
mov
pop
push
shr
arpl
stc
and
adc
mov
je
mov
pop
cdq
push
or
bound
addr16
adc
pop
dec
sbb
pusha
cmp
daa
mov
jnp
out
bound
cdq
mov
stc
outs
fwait
mov
jg
jb
adc
movs
jmp
and
xchg
mov
push
xchg
popa
stc
push
or
push
jnp
fnstenv
jle
cld
mov
inc
(bad)
pop
mov
pop
ja
adc
(bad)
sub
scas
aas
sbb
(bad)
sbb
add
dec
out
test
fdiv
or
and
(bad)
inc
out
adc
cmp
call
stc
xchg
rcl
loopne
sbb
daa
adc
sbb
ror
cmp
cmp
jnp
gs
mov
sub
pop
mov
ins
call
pop
and
fisub
daa
jnp
push
sar
(bad)
cmp
aaa
(bad)
mov
cld
xchg
fmul
pop
inc
shr
ror
xchg
je
imul
dec
cli
xchg
and
repz
arpl
out
inc
fwait
xor
addr16
mov
loope
int3
jmp
and
jo
les
out
xor
(bad)
xor
mov
sub
mov
in
dec
mov
mov
jl
ret
mov
push
push
ret
js
popf
mov
out
(bad)
js
fmul
mov
add
mov
imul
mov
cmp
mov
mov
push
ja
cmps
push
mov
sub
popf
loope
scas
aam
cmp
inc
in
jmp
jns
xor
into
iret
clc
test
sub
sbb
mov
sbb
push
xchg
ja
test
push
out
mov
sub
popa
mov
push
test
sub
call
push
imul
fsub
and
stc
ret
stc
addr16
mov
stc
adc
inc
or
jne
cs
ret
mov
in
(bad)
psubd
adc
fld
sub
pop
sbb
fst
and
stos
cmps
jmp
jmp
push
rcl
popa
xchg
(bad)
test
cld
dec
sti
cmp
jno
sahf
lahf
lods
or
xor
in
call
rol
shl
pusha
sub
pop
xor
xchg
and
jne
add
mov
jmp
dec
outs
push
mov
mov
sbb
push
push
lahf
(bad)
bound
pusha
adc
jmp
call
jg
stc
out
jg
stc
mov
ins
mov
outs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
shl
into
mov
cmps
cmps
mov
cmps
(bad)
je
jae
dec
(bad)
jmp
mov
jmp
jecxz
std
pop
iret
pop
jg
sti
or
jnp
mov
popf
cld
cmp
jge
inc
cmp
adc
inc
icebp
fidiv
sub
push
xor
retf
xchg
jns
scas
repnz
mov
and
lods
add
data16
lea
in
rcl
or
cmc
hlt
imul
test
and
ror
sub
cmc
aas
dec
push
mov
leave
mov
scas
in
in
fwait
cdq
ds
fcmovbe
sti
lds
movs
(bad)
enter
mov
sbb
sbb
push
push
jmp
pop
or
gs
xchg
repnz
pop
sub
jno
jmp
shr
mov
sbb
jns
adc
ins
shl
pop
inc
push
popf
jl
js
xchg
icebp
xor
xor
(bad)
lods
shr
fldcw
pusha
(bad)
popa
mov
rcr
mov
jb
cmp
push
sub
call
test
push
mov
xchg
cs
cmp
ins
sbb
iret
sti
test
dec
xchg
mov
scas
xchg
sbb
ror
pop
rcl
xchg
or
xor
daa
pop
mov
test
(bad)
and
sub
dec
stos
dec
or
cmp
or
xchg
cmp
xchg
dec
lea
sahf
(bad)
mov
pop
and
push
dec
idiv
sub
in
sub
lea
imul
(bad)
lods
xor
adc
jl
cli
push
push
fbld
adc
and
xor
pop
pop
popf
push
movs
lds
daa
sub
sbb
out
jge
idiv
imul
clc
xor
int
popa
out
push
cwde
mov
sbb
sbb
retf
fst
test
sahf
call
movs
jl
xchg
cld
dec
nop
pop
sahf
js
dec
fwait
aad
nop
fucomi
rcl
or
aas
mov
mov
mov
scas
test
jl
jo
add
and
mov
xchg
or
or
rol
pop
add
jmp
fdivr
lahf
imul
jbe
inc
(bad)
(bad)
lahf
push
mov
cs
cdq
cmp
in
movs
xor
dec
in
sbb
xchg
xor
pop
ds
mov
mov
adc
shl
or
cmp
cmp
xchg
icebp
gs
push
not
sub
mov
adc
call
jle
lods
jns
lods
and
sbb
mov
cmc
cli
repz
fmul
mov
cmp
lods
rol
jbe
in
mov
xchg
push
out
pop
mov
mov
cdq
dec
or
loopne
and
ret
jne
ret
inc
jle
mov
and
addr16
lea
out
dec
fwait
jbe
inc
clc
xchg
inc
hlt
mov
mov
dec
cmp
or
fwait
aas
push
fs
addr16
scas
out
int3
jmp
sub
fild
sti
mov
ret
std
dec
(bad)
mov
cld
int
scas
ins
cmp
in
enter
pop
dec
fidivr
lods
inc
js
sbb
add
jmp
(bad)
js
inc
in
daa
loop
cmp
comiss
xor
mov
sub
std
mov
leave
jmp
fiadd
jp
(bad)
leave
cmp
ret
xchg
shr
outs
cmc
jne
inc
in
adc
retf
push
repnz
(bad)
dec
jecxz
packuswb
into
lea
shl
jbe
es
jle
mov
pop
inc
cmp
and
aam
dec
movs
rcr
ficomp
imul
and
push
icebp
lea
lods
xor
mov
repz
xchg
lahf
loope
test
xchg
jl
and
je
jge
xchg
xlat
dec
popf
sbb
push
push
cwde
movs
jbe
jge
cmp
push
push
mov
pop
leave
dec
daa
mov
jne
test
hlt
scas
int3
dec
bound
sbb
push
movs
iret
fcmovbe
mov
jmp
jbe
add
into
shr
shr
movs
sbb
cmp
cmp
and
loop
fld
cmp
or
push
popf
push
test
mov
xchg
in
xchg
aad
mov
jae
pop
cmp
push
pop
add
ror
push
stc
pop
dec
jmp
adc
popf
sbb
imul
mov
add
fadd
cdq
cmp
sbb
out
fs
mov
sbb
mov
inc
mov
xchg
pop
bound
scas
adc
sbb
pop
das
cmp
scas
test
in
call
push
xor
ret
jmp
pop
cmp
(bad)
repnz
dec
xor
sti
inc
test
test
adc
mov
lahf
push
not
pop
js
dec
push
mov
and
stos
rcl
jge
and
and
jb
fwait
mov
pop
or
adc
into
rol
or
dec
sub
push
jo
repnz
shl
out
mov
std
aam
and
add
xchg
fistp
xchg
cmp
jecxz
les
outs
adc
pop
pop
mov
idiv
cmp
sbb
pop
aaa
bound
clc
sbb
pop
fmul
lahf
shl
mov
call
xchg
xchg
mov
xor
mov
ds
adc
cmps
mov
adc
lahf
movs
std
ret
xor
add
cmc
test
push
test
jle
sub
push
loopne
leave
mov
or
sub
icebp
imul
adc
cmp
(bad)
or
outs
xor
enter
mov
loope
mov
adc
mov
push
push
rcr
mov
in
mov
out
push
lods
rcl
mov
add
sbb
(bad)
iret
(bad)
or
jne
repnz
in
xor
dec
rol
dec
or
adc
(bad)
idiv
or
or
repnz
add
jge
je
push
fucomp
(bad)
(bad)
in
outs
adc
pop
mov
(bad)
idiv
mov
pop
and
xchg
push
les
adc
lds
xor
(bad)
imul
sbb
test
jnp
enter
inc
lods
mov
xor
retf
dec
sti
fadd
inc
fcomp
fnstenv
jbe
lea
push
pusha
sub
mov
stos
xchg
inc
rcr
xchg
sub
clc
in
or
test
push
adc
mov
inc
icebp
pop
fnstenv
loope
cmps
xor
lahf
fstp
int
cli
lea
lahf
mov
xor
xchg
pop
out
sbb
mov
xlat
test
cdq
mov
xchg
jnp
call
jo
int3
pusha
arpl
cmps
into
aaa
xor
adc
rol
sub
aaa
and
mov
cli
xlat
fmul
cmp
dec
jno
aam
sahf
(bad)
cli
lahf
mov
lahf
pop
call
xor
adc
sub
cmovnp
lahf
out
or
dec
cmps
push
iret
inc
mov
pop
movs
push
inc
out
or
ja
pop
sahf
pop
call
icebp
clc
dec
sbb
scas
test
popf
into
jno
mov
inc
lahf
ss
shr
adc
fisttp
jmp
xor
mov
call
pop
push
sbb
cmp
inc
mov
mov
pop
stos
mov
shl
dec
(bad)
cli
sbb
or
mov
dec
ret
jae
rcl
pop
push
adc
cmc
lahf
stos
in
out
add
not
test
push
outs
and
cmp
xchg
into
dec
pop
repz
pop
jl
pop
int3
mov
pop
xchg
outs
(bad)
aam
sbb
sbb
jecxz
out
dec
cmp
mov
loop
(bad)
jle
je
mov
adc
push
and
sbb
sub
mov
ficom
pop
push
int3
mov
int
addr16
ss
cmp
fstp
movs
es
pop
or
cmp
(bad)
aam
ficomp
sahf
retf
ds
mov
loop
push
mov
or
pop
ret
inc
shl
sub
je
cmp
pop
js
(bad)
push
fstp
retf
dec
movs
aas
inc
leave
mov
or
xchg
xor
popa
(bad)
outs
fbstp
arpl
fnstcw
sahf
pop
shl
push
mov
push
repz
dec
inc
jmp
out
or
push
jb
sti
lock
lods
fidivr
dec
or
sub
xor
pop
pop
ret
(bad)
out
pop
call
push
repnz
pop
test
imul
jmp
mov
scas
fs
out
push
bound
jns
push
cmp
cmp
cmp
cmp
dec
mov
fldenv
push
xlat
loope
fistp
pop
int3
cmp
sub
mov
push
repz
imul
leave
sub
push
lds
nop
push
inc
daa
jle
jb
mov
xor
or
(bad)
bound
stc
cwde
std
push
dec
and
jne
jmp
lock
xchg
jp
xor
fwait
adc
int3
pusha
cmp
xchg
xchg
and
movs
aas
inc
jno
mov
inc
ins
daa
jmp
jno
xchg
inc
lahf
add
jns
mov
ret
into
pop
mov
scas
cwde
js
xor
lea
jmp
or
test
enter
mov
sbb
movs
ins
in
jo
cmps
mov
movs
cdq
xor
es
jno
xor
(bad)
jns
jl
clc
adc
daa
ret
imul
out
rcr
ret
std
dec
cmp
ins
mov
jge
fnstenv
cmc
inc
js
jge
xchg
xchg
hlt
repnz
dec
or
xlat
jnp
inc
or
inc
popa
xchg
xchg
xor
das
arpl
adc
mov
mov
or
imul
push
ret
inc
fadd
jecxz
inc
mov
mov
pop
jbe
mov
fisttp
aad
or
out
adc
xchg
mov
or
mov
test
sahf
pusha
push
sbb
add
cmp
popa
add
lods
jmp
(bad)
je
jmp
ins
out
movs
rcr
pusha
daa
mov
(bad)
or
sahf
xchg
pop
cld
scas
push
sahf
(bad)
aad
jg
mov
jle
test
pop
xlat
(bad)
mov
mov
into
dec
adc
gs
and
adc
in
and
and
mov
jns
xchg
and
inc
(bad)
jnp
jge
jmp
in
in
call
push
je
push
bound
cdq
jnp
xchg
xchg
sub
pop
fild
int
xor
jns
push
or
fisttp
jge
mov
test
push
in
mov
out
das
pop
mov
fndisi(8087
inc
push
pop
sbb
push
les
mov
push
or
cmp
jge
adc
dec
jmp
pop
into
repz
es
dec
iret
adc
nop
dec
inc
xor
jbe
push
loopne
push
xchg
sub
mov
and
and
mov
jmp
inc
retf
shl
jl
or
mov
mov
xor
out
fistp
idiv
jae
push
fidivr
sub
mov
in
ret
retf
jmp
and
lock
std
fs
jne
pop
pop
scas
mov
arpl
cli
out
add
pop
cdq
adc
inc
out
cmp
push
xchg
adc
stc
xor
pop
xlat
or
jg
xchg
mov
js
jb
inc
jecxz
iret
inc
les
sub
sub
and
push
mov
xchg
popf
push
dec
imul
or
pushf
cmp
jmp
popa
test
ins
sti
mov
push
lods
rol
xor
aam
mov
or
mov
mov
das
xchg
xchg
mov
fdivr
lods
bound
xchg
nop
(bad)
mov
dec
mov
dec
test
mov
inc
mov
pop
cmp
idiv
xchg
xchg
mov
mov
repz
xchg
pop
test
(bad)
lods
adc
(bad)
loop
jns
test
into
in
and
pop
loopne
mov
(bad)
ins
sub
not
sub
jo
int
call
mov
mov
out
and
out
mov
inc
loop
int
or
push
push
fcmovu
mov
xor
das
imul
mov
push
mov
adc
jne
mov
inc
iret
sub
ret
dec
sub
(bad)
loopne
lock
xchg
adc
fsub
cdq
pop
sbb
xchg
push
and
push
xor
sahf
sbb
outs
out
pusha
dec
jb
jb
arpl
xor
adc
lods
mov
xor
clc
lock
jne
sbb
retf
int
(bad)
cmp
sahf
ins
add
sbb
inc
cmp
jmp
fwait
sbb
and
xlat
push
inc
mov
jecxz
sahf
jmp
xor
out
mov
leave
jb
inc
push
outs
pushf
pop
lea
and
hlt
std
and
arpl
jmp
ficomp
out
sbb
loopne
pop
mov
adc
punpckldq
sub
shl
mov
jg
xlat
in
retf
sub
mov
xor
ficomp
xor
sti
sub
aam
shl
mov
push
add
pop
fsubr
push
inc
jmp
mov
mov
jne
inc
cmp
pop
retf
mov
adc
lea
mov
and
and
test
or
or
repnz
jp
dec
jg
stos
dec
mov
jl
shl
jne
pop
ret
clc
cmps
cmp
push
iret
mov
loope
push
mov
or
add
inc
iret
test
test
ja
loope
add
addr16
mov
mov
dec
int3
inc
push
adc
mov
je
mov
gs
cmp
in
jle
or
and
loop
dec
xchg
int3
call
mov
lock
xchg
cmp
pop
mov
xchg
cs
mov
dec
in
stos
push
pop
nop
push
ja
es
dec
retf
fcom
ins
sti
add
xor
sub
xchg
jno
in
and
pop
ret
repz
lods
vmwrite
adc
aad
and
mov
jecxz
out
hlt
in
sbb
stc
push
jmp
inc
shl
je
dec
or
add
adc
movs
jge
mov
int
fidiv
or
dec
push
sahf
ins
pop
sar
mov
cwde
add
cld
out
es
lods
mov
mov
adc
retf
lea
out
stc
cmps
(bad)
out
ret
mov
xchg
mov
mov
shl
cmps
push
daa
out
push
gs
xchg
push
xchg
stos
inc
dec
ss
jge
dec
cmp
ficomp
mov
jecxz
arpl
popf
xchg
inc
xchg
pusha
ret
jl
int3
inc
add
dec
daa
repz
sbb
ds
in
add
or
sub
repz
shr
ds
adc
xor
sub
out
add
cmp
pop
and
ret
and
test
fmulp
(bad)
ds
movs
dec
or
outs
mov
in
add
push
jae
aaa
(bad)
sbb
dec
pop
sub
mov
cmps
inc
mov
aam
or
mov
cmp
data16
pop
sub
adc
push
lds
xchg
and
pop
push
mov
repnz
popa
add
or
xchg
dec
fstp
push
dec
out
das
retf
pushf
mov
les
in
bound
adc
loop
test
mov
rcl
pop
push
daa
int3
cmp
mov
in
adc
out
mov
jno
sub
lea
sahf
outs
push
nop
cs
cld
imul
jecxz
push
lds
and
add
pop
sar
xor
or
or
dec
test
cld
repz
aas
(bad)
cld
repz
aas
jmp
cmc
sbb
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
mov
jns
fld
mov
scas
aad
mov
sub
fistp
push
in
lahf
xchg
jnp
enter
add
imul
pop
pop
ss
mov
(bad)
arpl
mov
sub
jecxz
icebp
jg
loopne
fild
jmp
aas
push
daa
mov
imul
cmp
xor
or
mov
sub
cdq
outs
fadd
mov
shl
mov
dec
arpl
pop
imul
and
loopne
call
fwait
mov
sbb
fnstsw
sub
sub
test
loop
retf
mov
popa
(bad)
mov
cld
sub
jge
repz
cmp
lods
popa
test
mov
lea
sub
es
(bad)
cli
into
add
sahf
mov
(bad)
jmp
std
and
cmp
sahf
lods
rdtsc
xor
and
mov
fiadd
mov
pop
test
push
cs
pop
pop
call
enter
mov
inc
sbb
adc
aam
mov
pop
loop
dec
adc
(bad)
xor
adc
dec
jmp
fmul
mov
push
aaa
dec
frstor
and
ins
ret
and
mov
push
arpl
cmp
sbb
xchg
jbe
das
clc
stos
addr16
cmp
or
jge
stos
(bad)
stc
inc
lahf
mov
ror
aaa
add
ins
stos
call
popf
mov
inc
jmp
aad
rcl
add
and
push
cld
jle
adc
cmp
int3
fcom
aad
mov
clc
enter
push
fnsave
jns
mov
int3
out
aaa
lock
inc
and
fiadd
or
cmp
xchg
inc
fwait
pushf
cmp
lods
test
xchg
in
jb
inc
mov
jnp
sbb
xchg
clc
sub
mov
xchg
sti
pop
push
inc
and
arpl
and
shr
out
lds
jnp
jge
out
pop
sahf
push
pop
inc
xchg
push
test
sbb
shl
mov
js
sub
loopne
pop
setge
inc
adc
push
pop
cmp
ret
mov
mov
shr
xchg
cli
mov
adc
cmp
jecxz
clc
pusha
cli
outs
and
out
test
out
bound
nop
add
sbb
leave
(bad)
dec
pop
jmp
cmp
hlt
jg
sub
jle
push
lods
jae
in
xchg
lds
out
mov
mov
push
out
shl
in
jno
(bad)
ficomp
rcl
int3
add
out
into
fisubr
cdq
or
mov
out
(bad)
mov
in
pushf
xchg
(bad)
out
outs
mov
jne
retf
call
icebp
push
nop
clc
mov
push
jns
sbb
in
ds
test
sbb
test
pop
pop
idiv
sahf
aad
mov
repz
xchg
dec
inc
fcmovnbe
fdivrp
popa
fsubr
mov
pop
mov
pop
pop
sbb
jbe
imul
pop
test
movs
leave
mov
mov
inc
call
or
cmc
gs
ret
sub
mov
jae
nop
cli
sbb
mov
jns
push
adc
and
aaa
loopne
in
xchg
pop
sti
repz
push
ficom
ds
ins
xchg
test
xor
mov
or
cs
xchg
xchg
test
mov
cdq
dec
jle
test
fidiv
out
sbb
or
movs
jmp
daa
lahf
push
xchg
js
rcl
enter
jle
pushf
data16
adc
sub
lock
adc
or
cmp
jbe
inc
fucomp
movs
adc
or
mov
mov
lahf
(bad)
stc
pusha
stos
leave
push
inc
mov
xor
and
(bad)
xchg
cmp
pop
mov
mov
inc
mov
(bad)
ds
stos
call
iret
add
add
mov
pop
and
test
push
sti
shl
adc
adc
jmp
jnp
(bad)
fcomp
out
mov
imul
xchg
add
mov
cdq
pop
jne
dec
cmp
xchg
xchg
std
test
jg
jae
nop
mov
cdq
mov
mov
test
adc
iret
repnz
scas
mov
jno
mov
enter
sbb
inc
repnz
sub
arpl
shl
or
lock
sub
movs
ds
retf
sub
mov
mov
movs
xchg
xor
iret
call
mov
jns
add
push
(bad)
mov
in
fs
aaa
or
mov
mov
stc
xchg
or
test
inc
dec
or
movs
cmp
fmul
pop
inc
jo
jno
clc
add
cmp
leave
or
loope
cwde
cmp
mov
mov
xor
jae
shl
add
add
sub
sub
or
mov
sub
js
xchg
sub
jns
cld
jns
push
lods
pop
or
xchg
cmp
or
addr16
jle
dec
add
add
pop
(bad)
add
test
or
jg
mov
leave
dec
ds
lea
pop
cli
add
in
and
imul
lea
push
dec
shr
mov
ds
mov
(bad)
lock
or
mov
pop
(bad)
aad
push
jmp
cmp
mov
(bad)
sar
xor
int
jg
stos
dec
and
mov
loop
addr16
push
xor
mov
cs
mov
pop
imul
add
repz
mov
sub
in
repnz
jb
sub
cpuid
xchg
ins
jle
daa
jne
nop
mov
jbe
push
mov
adc
pop
sub
adc
xchg
fs
adc
adc
cli
mov
xchg
(bad)
cmp
adc
ret
or
rcr
ins
repnz
mov
push
addr16
dec
cmp
fwait
mov
outs
xchg
stos
xchg
push
xchg
test
jecxz
add
add
out
pop
mov
adc
enter
outs
add
fimul
mov
or
enter
mov
fbld
inc
retf
imul
and
cmps
imul
loope
test
sub
test
gs
hlt
mov
fiadd
push
pop
cmp
and
push
inc
xbegin
rcl
sub
cli
cmp
mov
lods
rol
push
fisub
in
xor
pop
mov
std
aam
dec
jp
scas
pop
fsubr
pop
xlat
pop
mov
ins
(bad)
sbb
scas
dec
dec
les
or
fsub
sbb
dec
int3
xchg
xchg
and
aam
xchg
pop
mov
js
xchg
fs
scas
lods
add
fdiv
inc
push
ret
xor
push
sbb
pop
cmps
push
jmp
cmp
sub
cmp
cmps
xchg
xor
push
jp
push
ret
ss
cli
mov
push
in
cmp
mov
ins
push
mov
dec
and
xchg
retf
push
sub
pop
push
and
shl
stos
jg
repz
sub
mov
pop
adc
push
lock
inc
sbb
inc
jle
rcr
mov
or
(bad)
mov
lds
fwait
sub
jecxz
mov
or
ds
xchg
stos
dec
shl
imul
inc
xor
pop
sbb
dec
adc
call
cmps
or
sbb
ins
rcr
sub
fld
lods
or
loop
rcl
mov
inc
lock
and
mov
cmp
std
dec
repz
cmp
ror
cs
fcomp
add
ja
(bad)
cmps
stos
aad
loope
cmp
js
or
jle
and
cli
adc
je
(bad)
in
fiadd
div
lods
sbb
or
jbe
sbb
out
inc
mov
and
inc
pushf
pop
xor
imul
fs
loope
sbb
push
fstp
arpl
xchg
cmp
retf
dec
xchg
cmps
adc
int3
in
lahf
add
pop
fnstsw
fwait
lock
xor
xchg
gs
in
mov
neg
adc
mov
and
int
and
leave
push
mov
jns
stos
pop
in
ds
push
jmp
mov
test
dec
leave
sbb
push
jb
lea
and
out
dec
aam
push
and
das
cmp
or
push
aad
aam
xor
sub
ins
das
mov
into
and
jbe
(bad)
pop
push
rol
mov
cld
jno
xchg
lods
lock
push
or
jmp
dec
cmp
push
xor
push
loop
sbb
jns
std
xchg
cwde
or
sub
sti
hlt
aaa
inc
inc
movs
std
loop
(bad)
shl
inc
movs
scas
mov
xchg
fwait
test
dec
scas
sbb
add
jbe
addr16
jnp
fnsave
adc
push
or
adc
cmp
cmp
js
jle
pop
outs
sbb
out
jp
push
(bad)
jnp
sub
sub
cli
cmps
mov
ins
xchg
or
repz
xlat
push
or
mov
pop
scas
ret
push
cs
int3
cli
mov
pushf
repnz
jp
push
mov
push
cmp
add
push
scas
imul
repnz
push
icebp
cmc
push
pop
cmps
in
popa
(bad)
jno
arpl
jne
fnsave
mov
clc
xchg
dec
mov
push
stos
inc
rcl
popa
and
fldcw
lods
scas
inc
retf
jae
retf
mov
inc
mov
aam
(bad)
out
cmps
ds
and
jl
sbb
aam
push
pop
rol
cmc
jbe
add
ins
xchg
and
iret
inc
loopne
cmp
stos
fsub
push
sub
jp
js
or
cmp
(bad)
mov
cmp
pop
mov
sbb
mov
into
or
ins
je
or
daa
fsubrp
not
fwait
jbe
inc
shr
repnz
jmp
push
mov
(bad)
fdiv
jno
mov
fisubr
push
(bad)
scas
xchg
cmp
aam
sti
test
mov
call
lods
enter
pop
iret
outs
(bad)
icebp
movs
jne
stos
inc
or
adc
fld
(bad)
jp
test
call
neg
and
fistp
lods
lahf
mov
or
mov
cld
addr16
sub
xchg
push
icebp
mov
mov
loopne
aad
sbb
imul
cmp
stos
addr16
inc
adc
jno
push
xchg
or
test
xchg
cmc
call
push
(bad)
jg
adc
int
and
adc
or
jmp
ss
inc
xlat
sbb
jmp
jnp
dec
sub
fld
adc
hlt
cmp
mov
xor
lock
loopne
mov
test
or
in
pop
retf
out
movs
test
test
dec
pop
pop
test
adc
or
mov
out
xor
sbb
xor
mov
pushf
lods
xchg
out
pop
test
xor
dec
fs
in
div
pushfw
inc
fdivr
shl
mov
jae
sub
out
call
or
(bad)
rcr
and
loop
pop
es
or
mov
sub
psrlq
mov
inc
enter
lds
es
and
and
mov
push
in
(bad)
bnd
xchg
rol
or
jb
pushf
ins
jbe
add
outs
cld
sar
xor
mov
sub
inc
pushf
pusha
ret
sub
aam
mov
repz
scas
sub
mov
push
mov
jge
jmp
dec
jo
pop
imul
dec
lods
pop
mov
jp
sbb
jmp
test
sbb
jg
test
adc
mov
loopne
xor
push
xor
dec
xchg
jmp
or
push
inc
xor
stos
inc
or
xlat
mov
daa
lods
ret
pop
push
mov
mov
fwait
gs
push
les
(bad)
in
sbb
add
(bad)
sbb
push
movs
push
test
in
test
shr
mov
test
sub
push
pop
pop
in
test
dec
push
jmp
lds
push
jb
lock
(bad)
or
mov
push
in
in
in
mov
sbb
int
dec
inc
cdq
sub
(bad)
cmps
pop
cmps
iret
js
pop
pop
imul
sti
mov
stos
xor
push
aas
movs
mov
bound
test
std
mov
shl
in
(bad)
xchg
fld1
and
enter
bound
sub
pop
ficom
popa
xchg
mov
inc
jb
dec
(bad)
sbb
dec
outs
clc
jg
aam
adc
push
cmps
ss
outs
xchg
int
push
adc
test
mov
js
mov
adc
xchg
cmps
call
out
sbb
sti
xor
mov
mov
cwd
add
jae
push
cld
inc
pop
mov
lahf
jns
xor
and
sub
inc
inc
pushf
inc
shl
mov
adc
icebp
aaa
rcl
dec
not
and
jge
sub
popa
and
mov
sub
rol
cmp
es
jae
adc
xchg
jge
lods
mov
retf
jge
ret
xor
(bad)
icebp
mov
jp
push
pushf
mov
inc
rcr
ds
dec
xlat
cmp
cld
xchg
mov
cld
fs
and
scas
mov
mov
les
daa
jno
add
mov
sub
scas
adc
xchg
and
test
sbb
sbb
pop
mov
push
cmovbe
arpl
fidivr
lods
in
shl
mov
loopne
cmp
loopne
push
mov
inc
xchg
mov
jmp
dec
pop
(bad)
mov
ret
in
jae
pushf
push
adc
fcomp
test
in
in
ret
or
xor
mov
xor
xlat
outs
xor
test
repnz
movs
cld
and
push
js
icebp
enter
push
pop
cmp
pusha
call
das
test
or
push
addr16
test
add
fcmove
ins
lods
xchg
jo
mov
fld
and
addr16
sub
gs
clc
scas
loopne
xchg
or
out
stc
stos
jno
push
test
pushf
push
xor
outs
add
loopne
add
inc
xchg
fidiv
mov
into
ja
add
out
sub
sub
in
into
xchg
push
int3
addr16
mov
out
mov
ins
in
dec
stos
out
pop
add
mov
cmc
and
pop
(bad)
enter
mov
inc
mov
inc
loope
call
xor
dec
pop
jle
mov
lods
repnz
sbb
and
es
es
sub
rcl
popf
cld
inc
pop
mov
test
push
mov
ret
mov
cwde
scas
jecxz
pusha
and
pop
mov
fwait
or
xlat
mov
jns
mov
inc
jae
mov
cld
xlat
push
sub
cs
sahf
mov
lds
mov
leave
mov
aaa
sub
in
popf
adc
int
and
rcr
test
(bad)
cli
dec
aaa
pop
sub
add
sub
xor
jle
stos
inc
(bad)
arpl
fsubp
outs
out
inc
aaa
aaa
fisub
fwait
out
shl
aad
push
xchg
in
push
xchg
iret
jmp
std
cmp
jmp
mov
iret
in
movs
dec
dec
or
mov
jmp
adc
mov
fcom
jne
mov
push
repnz
mov
and
ds
movzx
call
fstp
fld
enter
add
adc
movs
adc
fadd
xchg
call
test
sbb
mov
mov
jno
mov
test
mov
leave
daa
or
cwde
ja
ficomp
les
in
xchg
stos
scas
movs
mov
mov
int
popa
mov
mov
jmp
mov
xchg
mov
push
jbe
daa
xlat
lods
test
cmp
pop
bound
inc
(bad)
cmp
cmp
out
jg
stc
out
jmp
lock
xchg
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
xor
sbb
rcr
xlat
cmp
jno
xor
dec
ja
ror
xor
fwait
imul
add
popa
or
lods
push
xchg
imul
gs
popf
out
xchg
bound
out
dec
mov
and
xchg
out
xor
dec
adc
sbb
jg
lock
ja
adc
loope
test
data16
cdq
rcr
cmp
fwait
stc
fmul
popa
mov
jge
mov
popa
iret
fwait
jo
(bad)
shr
cdq
mov
iret
mov
mov
movs
cmp
retf
shl
or
imul
jecxz
push
hlt
xor
pop
lds
mov
xadd
dec
stos
test
push
out
lods
adc
jno
dec
cmc
xchg
rcr
dec
aaa
ins
stos
mov
scas
call
cli
dec
jge
out
xchg
sti
(bad)
adc
pop
jns
mov
xor
outs
(bad)
outs
xor
mov
xchg
mov
jl
xor
sub
jmp
gs
mov
dec
fidiv
jmp
popa
push
dec
call
ins
push
lods
dec
adc
fwait
xchg
sbb
rcl
sub
pop
sar
stos
xor
out
xor
pop
and
call
repnz
aam
std
test
mov
xchg
pop
xchg
or
adc
mov
push
sub
sbb
das
mov
mov
jle
cmp
hlt
mov
jmp
cmp
cli
xor
outs
(bad)
pop
push
adc
outs
aas
inc
sahf
fiadd
adc
mov
aad
cs
sar
jmp
xor
xchg
or
es
popf
bound
lock
xchg
lods
out
ins
scas
cmp
adc
lea
daa
sbb
inc
push
push
push
sar
sbb
xchg
test
xchg
dec
cmp
dec
and
inc
out
popa
(bad)
hlt
xor
or
mov
ss
mov
mov
jne
xlat
scas
je
dec
fmul
jmp
mov
cwde
cmc
in
fnstsw
or
shr
mov
adc
adc
popf
xchg
mov
aas
mov
bts
mov
mov
cld
jmp
stos
std
mov
and
adc
call
inc
mov
push
xchg
jmp
gs
arpl
sbb
ins
fcmovne
out
mov
jae
sub
fst
les
xchg
sbb
push
push
fisttp
add
mov
ficomp
repz
mov
sub
xchg
cmp
xor
pop
cmp
in
jmp
clc
jge
jbe
cmp
(bad)
inc
add
push
mov
out
rol
in
push
data16
push
fs
sub
adc
loope
pop
xor
in
into
(bad)
jge
fnstcw
mov
pop
push
out
sbb
(bad)
stc
lods
ret
enter
call
call
lods
stos
jmp
xchg
add
adc
retf
test
(bad)
fidivr
rcl
data16
fcmovnb
push
lods
and
leave
adc
movs
out
sub
mov
test
dec
cmp
xchg
xor
int3
pusha
in
popf
shl
cdq
ret
jecxz
jno
bnd
int
std
in
cmps
mov
loopne
xchg
movs
xchg
mov
push
fs
pop
mov
or
xor
jg
cmp
movs
in
adc
xor
aas
hlt
icebp
push
mov
mov
bound
jp
out
jle
bound
jmp
pop
and
adc
mov
mov
sub
pop
mov
inc
dec
or
mov
in
xor
fiadd
enter
and
mov
in
push
adc
pop
dec
mov
ja
in
jmp
or
jg
xor
in
pop
or
xchg
jge
mov
out
enter
mov
clc
xchg
add
cmps
mov
frstor
or
inc
mov
and
dec
pop
repz
sbb
push
test
repnz
pop
jl
push
les
push
dec
sbb
add
push
add
xor
(bad)
mov
pop
adc
getsec
sub
adc
jmp
int3
jg
call
popf
ror
mov
pop
xchg
lock
inc
(bad)
fwait
lahf
and
mov
dec
pop
adc
repnz
xor
cdq
call
mov
jecxz
js
outs
xchg
sub
sbb
and
je
pop
and
lahf
mov
outs
daa
mov
fcmovu
adc
aas
aas
mov
out
sub
xchg
mov
xor
iret
imul
jno
adc
cmps
pushf
fcomi
repz
test
xor
sub
push
mov
ret
popf
inc
cli
dec
(bad)
push
fsubr
push
xor
and
and
push
imul
aaa
fdivr
mov
popf
test
and
test
pop
add
mov
lahf
stos
movhlps
es
lahf
or
or
or
sub
movs
add
push
dec
cmp
aaa
mov
call
icebp
lock
aam
jl
ja
jo
out
jg
stos
jae
sub
loope
pop
out
cmp
lahf
lock
out
pop
rcr
xchg
xor
jmp
pop
and
xacquire
xchg
and
jb
stos
mov
and
loope
in
hlt
pop
or
jp
inc
jmp
or
pop
push
push
mov
adc
(bad)
arpl
xchg
jge
xchg
and
sub
rol
lock
jg
sub
mov
pop
bound
pop
cdq
jmp
pop
dec
lods
in
add
cmps
mov
push
in
cmp
mov
sub
and
mov
popf
sbb
cwde
sbb
push
es
ss
fadd
mov
push
push
lds
jns
dec
push
dec
pop
push
repnz
test
ins
jbe
outs
int3
js
fcomp
outs
test
xchg
and
int
xchg
dec
ret
repnz
inc
pop
je
sub
pushf
push
aaa
push
lds
or
sbb
addr16
lea
pop
loopne
xor
pop
ret
xchg
and
cmc
sub
sbb
add
dec
cmp
int
clc
pop
int
stos
mov
sbb
mov
fdiv
lock
pop
cwde
es
inc
push
jne
and
cmp
cmp
shl
and
test
jmp
cli
cmps
in
jge
ja
outs
inc
mov
jmp
xchg
adc
inc
and
lock
push
daa
(bad)
jge
repz
rcr
mov
adc
and
outs
mov
loop
aas
dec
push
mov
or
jns
dec
int
gs
je
jb
rcr
retf
in
mov
icebp
aam
add
cmp
inc
movs
xor
push
int3
stos
icebp
dec
mov
clc
fucomip
movs
loop
inc
cwde
xor
mov
mov
pop
mov
loope
pop
aad
sar
stc
(bad)
enter
inc
and
test
mov
lahf
ss
inc
into
cmp
jge
dec
xchg
add
mov
test
int
sbb
push
je
mov
icebp
ficomp
dec
fs
dec
inc
cmc
sahf
dec
pushf
adc
ds
sub
ds
inc
mov
imul
mov
cmp
xor
push
repz
mov
inc
pop
repz
sbb
(bad)
shl
jmp
inc
loope
sbb
add
pusha
xchg
cmp
xchg
test
call
jmp
dec
cmp
dec
cdq
jne
push
pop
push
dec
movs
lahf
xchg
ins
cmc
jp
(bad)
nop
jae
gs
cwde
push
adc
mov
stos
jo
mov
call
(bad)
push
out
test
jp
outs
call
dec
dec
arpl
pop
(bad)
mov
outs
(bad)
or
stos
das
jns
loope
(bad)
xchg
jmp
xchg
fnsave
jmp
jle
cld
inc
cmp
push
(bad)
ja
dec
addr16
sbb
je
sub
cmp
and
mov
js
mov
pop
xchg
call
ds
test
mov
push
push
test
cmp
mov
add
data16
sbb
sub
mov
xchg
cs
ret
push
mov
stc
aad
dec
fcmovbe
jmp
xchg
or
sub
inc
cwde
or
xor
jecxz
dec
xchg
jne
jle
add
lea
push
mov
and
push
adc
xor
test
fwait
data16
rcr
adc
popa
or
mov
ffreep
sub
cmc
dec
sbb
mov
arpl
and
mov
imul
push
push
retf
loope
mov
in
mov
inc
aas
in
and
int3
hlt
lods
jp
xor
pop
enter
fcomp
dec
test
xor
push
inc
pop
jle
sbb
mov
dec
or
pop
pop
mov
sub
jno
pop
pop
retf
call
inc
cmc
hlt
pop
fld
cld
out
cs
adc
imul
test
hlt
adc
or
jno
mul
in
mov
jg
clc
clc
out
gs
mov
inc
shr
mov
inc
pop
mov
mov
cs
dec
mov
test
xchg
shr
imul
pop
inc
movs
jmp
push
je
pushf
adc
std
pop
out
adc
cmp
cmp
loope
cld
stos
je
xor
pusha
jb
addr16
aam
fidiv
rcr
mov
push
test
sahf
push
xchg
lock
adc
int
dec
mov
movs
aad
(bad)
fld
lods
add
and
sti
movs
ss
rcr
loopne
mov
mov
dec
mov
retf
pop
pop
push
push
xor
ror
xor
adc
mov
std
fwait
fs
mov
not
push
dec
inc
scas
jmp
popa
retf
xchg
cmp
mov
dec
addr16
ss
add
pusha
xchg
clc
loop
push
arpl
gs
or
not
sub
test
and
(bad)
gs
repz
bswap
ds
imul
fimul
cdq
sbb
jbe
fstp
icebp
movs
or
gs
lods
mov
xchg
push
or
aaa
imul
adc
dec
jbe
stos
dec
cli
clc
cmps
movs
cdq
(bad)
add
hlt
inc
add
pop
call
xchg
leave
jb
xchg
scas
cmp
dec
stos
lods
lea
pop
jns
mov
pushf
pop
or
call
std
and
inc
xor
lock
pop
mov
and
jmp
ret
adc
add
sbb
sub
nop
fs
sahf
into
repz
mov
int
xchg
adc
int
jp
inc
popf
loop
sbb
dec
(bad)
pop
xchg
sbb
addr16
sub
dec
and
movs
cs
sub
mov
or
retf
fild
mov
call
ds
std
lds
in
push
mov
pop
add
(bad)
movs
gs
dec
(bad)
cwde
aaa
loop
rcl
pushf
out
imul
retf
mov
test
xchg
jecxz
fidiv
fdiv
or
call
xor
test
or
popa
inc
(bad)
std
xchg
(bad)
loope
aaa
ins
sub
cli
fbld
movs
and
mov
xchg
mov
sbb
add
fdiv
pop
cmps
pusha
imul
fnsave
pusha
mov
not
jmp
int
xchg
mov
cs
xchg
jg
mov
into
xor
call
inc
stos
pop
push
stc
ins
call
cmp
aas
addr16
mov
mov
push
test
mov
cwde
or
repnz
mov
pop
clc
and
adc
shl
inc
scas
xchg
mov
fisubr
jge
(bad)
xchg
or
imul
mov
into
inc
dec
add
mov
pop
pop
int
push
into
and
sbb
sub
mov
dec
int
sub
pop
push
ja
aas
mov
icebp
xor
xchg
mov
inc
jmp
pop
into
jle
aam
js
aad
test
cmp
mov
jb
jo
cmc
xor
inc
(bad)
cdq
pop
lods
mov
ror
jae
lfs
loopne
fimul
div
jp
fwait
add
jno
jle
lods
sub
div
cld
sbb
(bad)
imul
jnp
int
pop
std
sub
jg
into
lea
jp
jmp
push
pop
xchg
test
dec
(bad)
and
jmp
lahf
inc
(bad)
lods
mov
sub
stc
call
enter
(bad)
(bad)
ror
dec
lea
add
sub
lds
(bad)
pushf
les
cmp
jne
jmp
mov
pushf
lods
sbb
fist
sub
aaa
inc
dec
pop
mov
lahf
adc
ins
sub
cmps
es
or
mov
dec
fs
jle
bound
sti
mov
neg
jmp
xchg
sbb
stos
jbe
sar
hlt
cmp
mov
leave
imul
clc
rcr
ja
shl
add
pop
sti
rcr
lock
cmc
lahf
(bad)
push
jp
hlt
xlat
(bad)
out
clc
cmp
mov
dec
(bad)
aad
jnp
or
idiv
sub
out
cmp
xor
jmp
(bad)
jnp
mov
cmp
mov
push
cmc
mov
inc
push
fnstsw
jns
jbe
jnp
push
fwait
mov
jecxz
out
adc
dec
shr
call
je
jmp
movs
jl
call
sar
pusha
out
ret
sub
push
xor
retf
inc
mov
inc
imul
lds
je
xlat
jne
xchg
fwait
pop
scas
push
ror
fstp
dec
dec
addr16
sbb
cmp
mov
cmp
loope
sbb
es
dec
call
mov
aaa
imul
cmp
cmp
adc
xchg
sbb
add
dec
sahf
push
xor
scas
cmp
inc
mov
sbb
and
out
ret
xor
outs
lahf
cmp
(bad)
mov
jb
clc
cmp
jbe
dec
mov
in
add
rcl
xor
push
xor
jae
adc
sub
sub
mov
(bad)
sysexit
mov
daa
retf
and
xchg
iret
(bad)
push
psubsb
sbb
addr16
xor
cmps
or
aam
jmp
xor
push
cli
repz
int
push
xchg
pop
xor
bound
dec
loopne
addr16
jle
xor
and
lock
mov
call
jl
add
in
iret
push
mov
push
adc
addr16
movs
bound
imul
stos
xor
in
xlat
jp
popf
sub
jae
jnp
push
(bad)
aas
inc
test
or
outs
lock
jnp
mov
dec
imul
mov
aas
dec
clc
retf
imul
dec
addr16
mov
loopne
jns
ins
adc
push
cdq
(bad)
dec
pushf
mov
or
xlat
pushf
das
mov
mov
xchg
adc
mov
test
inc
xor
or
pop
jns
(bad)
xor
mov
add
mov
pop
or
icebp
call
out
ds
cmps
test
push
inc
into
cli
lock
(bad)
cwde
popa
call
push
imul
lock
(bad)
mov
push
xor
jle
gs
repnz
fldenv
jbe
push
iret
fisubr
call
arpl
sub
sbb
mov
imul
mov
test
ror
stc
ja
in
cmc
pop
je
int
jg
inc
in
loopne
jns
icebp
dec
mov
ds
cwde
loope
lahf
(bad)
push
jae
xor
sbb
cmp
in
xor
clc
out
jg
stc
out
jg
stc
mov
dec
xchg
call
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
or
jmp
cs
mov
inc
dec
mov
je
dec
sbb
fld
xor
test
aam
and
xchg
fdivrp
call
fadd
sbb
aam
cmp
jae
add
mov
sub
mov
je
fucom
(bad)
arpl
aad
icebp
jno
push
(bad)
cmp
test
xor
dec
movs
popf
(bad)
mov
ds
sub
dec
cmc
sub
jo
out
outs
inc
pop
in
inc
add
xchg
mov
(bad)
nop
mov
int
leave
cmps
sbb
int3
stc
add
retf
cmc
mov
adc
in
mov
loopne
mov
jl
inc
mov
aas
ss
adc
jnp
jne
cmp
in
push
xchg
call
rcr
cld
popa
leave
add
xchg
test
or
bnd
mov
mov
js
add
xlat
inc
retf
cdq
(bad)
cli
jnp
(bad)
les
mov
retf
cmps
in
clc
mov
shl
jno
imul
xlat
retf
fwait
xchg
fbstp
jecxz
ret
cmp
adc
lods
cmp
mov
(bad)
jmp
inc
add
scas
add
retf
clc
sbb
jb
call
sbb
into
jnp
jmp
data16
mov
adc
addr16
popf
(bad)
out
fld
mov
mov
fistp
or
push
jns
jnp
(bad)
or
loope
icebp
das
shl
std
xor
loope
mov
outs
jp
cs
enter
adc
mov
adc
xchg
mov
xchg
pop
es
inc
dec
clc
dec
aam
mul
fsub
scas
pop
xchg
ja
clc
in
test
call
fcom
outs
mov
lods
pop
sar
inc
sub
mov
sub
sub
sub
xchg
sahf
mov
js
cli
xchg
cmp
xor
sbb
xor
dec
sbb
int3
and
push
cdq
retf
addr16
xchg
data16
cld
sar
xor
cmp
and
push
jns
imul
(bad)
push
(bad)
test
mov
sub
push
js
sbb
mov
mov
lods
fst
stc
(bad)
pusha
rol
scas
das
push
jge
mov
xchg
in
cmp
xor
push
outs
pop
shr
sub
pop
push
sar
sbb
sahf
xchg
jb
mov
push
push
cmp
out
push
(bad)
pop
enter
bound
test
dec
xchg
in
push
mov
mov
jp
loopne
mov
out
mov
out
mov
cmp
out
jb
int3
mov
mov
mov
imul
sti
mov
sahf
or
mov
push
dec
imul
xor
stos
and
aaa
xor
aaa
sbb
xchg
retf
sahf
xchg
xor
inc
inc
jbe
push
lahf
mov
inc
add
sbb
jge
dec
push
pop
cli
mov
xchg
ins
cwde
jmp
cmp
pop
cs
shl
push
retf
pop
or
(bad)
fcmovnu
cld
adc
cdq
cmps
test
add
mov
pop
loope
mov
xor
pop
fwait
jmp
cmp
mov
jmp
xor
mov
jae
sub
int
ret
adc
xlat
mov
xor
lahf
xchg
xlat
xchg
js
inc
xchg
push
(bad)
int
test
rol
add
jnp
scas
in
(bad)
mov
mov
sbb
mov
jmp
push
fadd
(bad)
ret
inc
loop
mov
push
mov
jmp
pushf
shl
xor
jo
(bad)
in
aam
int
add
xor
cdq
sti
test
mov
mov
ffreep
aam
sbb
inc
sub
pop
int3
add
pop
fsub
mov
xchg
(bad)
mov
movq
test
sahf
mov
movs
aas
jecxz
mov
inc
inc
ret
mov
jmp
inc
adc
xchg
cmp
adc
dec
inc
and
sub
xor
push
leave
jae
hlt
pushf
ds
mov
xchg
sub
dec
je
inc
cmp
ss
into
sahf
mov
jbe
fbstp
cld
push
sbb
push
into
call
idiv
mov
xchg
movhps
ins
mov
push
xor
ds
mov
dec
mov
sbb
call
cmp
jl
xor
imul
xchg
and
and
and
pop
fwait
stos
lea
pop
cmps
cmp
pop
ror
inc
lods
fdivrp
push
xor
stc
test
(bad)
into
xor
mov
(bad)
mov
pop
cmp
sub
cmp
push
inc
jb
cmp
xor
cmc
shr
dec
push
(bad)
pop
sub
and
stc
call
cmps
repz
int3
retf
fldenv
sbb
dec
pop
(bad)
shr
inc
jae
cmp
mov
push
test
mov
xchg
add
mov
mov
pop
je
in
aad
inc
stc
sub
loop
or
ja
out
sahf
and
cmp
mov
dec
fadd
mov
xchg
dec
leave
push
push
jle
xlat
cmps
ins
mov
or
cmps
out
or
stc
outs
rol
jg
cwde
xor
bound
mov
dec
push
(bad)
adc
fwait
cdq
pop
pop
push
test
clc
mov
and
push
jge
push
jmp
shl
dec
mov
(bad)
mov
das
pop
into
add
pop
adc
adc
fsubr
cmp
xor
in
movs
call
outs
sbb
adc
fild
bound
stos
push
and
loope
mov
and
shr
cmps
gs
jl
mov
imul
cmp
leave
into
stc
jg
sahf
bnd
fisub
and
adc
ja
sub
dec
mov
or
sbb
cli
test
dec
outs
in
in
iret
fxch
scas
shl
sbb
(bad)
sbb
cdq
rcl
xor
out
add
repz
mov
mov
in
push
mov
retf
add
fdiv
retf
out
test
fsubrp
jge
mov
dec
cmc
add
test
cmp
inc
sbb
xchg
or
dec
test
in
(bad)
fucom
mov
cmp
and
vmovd
push
lods
fucomip
lea
dec
sbb
retf
xchg
push
sbb
mov
ins
push
xor
mov
sti
inc
cmp
mov
ror
cmc
stos
out
sub
aam
dec
pusha
and
push
stos
fxam
jle
push
xlat
mov
xor
inc
dec
mov
shl
xor
add
call
jmp
add
sbb
pushf
in
sbb
adc
inc
repnz
inc
cdq
or
outs
or
test
mov
dec
scas
sahf
aad
cmps
jne
or
xchg
dec
dec
xchg
or
loop
out
aam
(bad)
popf
test
add
mov
cmp
xor
js
setl
mov
xor
sbb
xor
cs
movs
cmp
arpl
int3
ja
cmp
out
ret
stc
rol
enter
bts
xlat
daa
and
fldenv
fwait
test
mov
aam
add
pop
arpl
ss
xchg
rcl
aas
das
outs
adc
xchg
push
xor
push
ss
jb
repz
jg
sar
neg
loopne
pop
xor
outs
iret
outs
jae
jb
adc
add
cdq
mov
xor
leave
mov
mov
cmp
pop
cmp
sub
clc
inc
loope
das
xor
lahf
stos
stos
sub
iret
and
jo
(bad)
mov
and
repnz
cld
mov
into
mov
aaa
not
and
arpl
xchg
inc
popa
inc
mov
push
popa
mov
pop
fdiv
shl
in
xor
sahf
cmc
(bad)
xchg
push
mov
test
cmp
jb
sti
loope
cmp
ror
nop
mov
sub
jle
test
sub
sbb
mov
xchg
es
fbstp
add
adc
sub
call
push
popf
dec
or
stos
push
and
retf
cli
test
ret
jmp
push
lock
jmp
fldcw
cmps
lds
loope
mov
mov
fwait
xchg
jae
mov
mov
mov
test
mov
leave
mov
pop
stc
sbb
dec
repz
(bad)
rol
fwait
or
push
fmul
outs
ins
jmp
cmp
push
add
xchg
mov
mov
cmps
or
sub
mov
push
rcl
popf
stc
pop
xchg
xchg
inc
das
adc
fild
popf
jne
jnp
cmp
popf
cmp
jnp
cli
mov
lods
or
sbb
outs
mov
out
call
out
icebp
ret
jp
cmps
dec
push
inc
push
mov
dec
mov
add
stc
push
push
or
inc
push
cld
arpl
movs
imul
pop
scas
xchg
jne
inc
gs
int3
xor
imul
add
adc
push
jo
add
xchg
mov
jle
mov
mov
es
fdiv
je
addr16
adc
stos
jge
out
(bad)
fcmovnb
adc
les
add
(bad)
fsub
das
cdq
adc
iret
sbb
ror
ins
not
lahf
popf
add
jns
fimul
test
mov
retf
mov
inc
xchg
and
popf
adc
cmp
pop
jo
pop
push
aaa
or
push
fnstenv
div
or
push
ds
stc
adc
adc
lock
inc
dec
(bad)
inc
and
test
fs
dec
popa
inc
scas
cmp
imul
or
(bad)
adc
scas
sub
lock
pop
(bad)
loope
movs
jmp
jns
jp
cmp
inc
loope
js
xchg
or
mov
sub
push
test
out
cmp
out
shl
sub
adc
jl
push
or
into
mov
arpl
aad
icebp
and
in
xchg
push
pop
xchg
into
push
int
add
and
aaa
adc
(bad)
xor
gs
ret
outs
daa
jge
aaa
cmps
popa
xchg
mov
jb
fnstenv
sub
push
div
sub
fwait
pop
test
repz
jmp
mov
jne
push
pop
out
movs
add
leave
xor
sub
movs
adc
sbb
adc
xchg
xor
dec
xor
cmps
and
retf
mov
int3
inc
rol
cmp
test
outs
adc
pushf
div
mov
inc
jle
mov
pop
ss
(bad)
mov
daa
arpl
jmp
(bad)
out
push
retf
and
inc
test
std
cmp
add
sbb
jge
(bad)
mov
imul
or
push
mov
stos
jns
rol
into
cmp
jg
and
adc
js
movs
dec
jp
xchg
dec
retf
mov
cmp
push
lods
ss
movs
cmc
cmp
mov
dec
out
mov
push
cmps
inc
gs
retf
cmp
or
ja
inc
dec
or
shl
sub
cli
push
aad
add
test
push
pop
gs
cs
fdiv
xchg
aam
rol
dec
mov
xor
mov
sub
xor
push
popa
jmp
push
and
cmp
jp
sub
mov
loope
sbb
xchg
inc
(bad)
add
and
imul
into
movs
sub
xchg
jo
stc
arpl
pop
mov
xor
into
(bad)
ins
cmp
adc
sub
repnz
push
push
fisubr
push
retf
mov
sbb
popf
xchg
repz
arpl
call
xchg
and
push
xchg
mov
mov
mov
push
jmp
jb
loope
push
mov
imul
rcl
ret
push
xchg
dec
ins
push
inc
scas
ds
je
push
retf
jae
ja
out
retf
jl
jle
dec
std
js
mov
sbb
in
jns
neg
into
push
pmaxub
push
xor
repnz
xchg
push
div
push
in
mov
xor
call
mov
pop
jb
repz
and
cdq
cwde
ins
and
dec
outs
in
lock
out
es
je
push
fidiv
ins
mov
lock
jg
dec
in
enter
adc
adc
sub
dec
lds
and
push
dec
jecxz
iret
out
ins
mov
mov
dec
ds
sub
in
loop
cmp
in
fsub
cmps
rcr
mov
push
aaa
imul
repnz
adc
fcomi
fisttp
mov
sub
sbb
pop
je
or
push
and
inc
pop
cmp
fidivr
jmp
mov
mov
sbb
lods
fnstsw
rol
cmp
(bad)
pusha
sti
cmc
dec
test
das
mov
jmp
icebp
jge
xor
bound
cmp
cmps
jmp
cmp
cmp
adc
fs
xchg
test
(bad)
jg
out
inc
loopne
in
bnd
xor
mov
ror
in
rcr
xchg
(bad)
adc
push
mov
cmc
mov
adc
shl
sti
fstp
fcmovbe
cmp
push
ror
test
mov
push
outs
das
xor
(bad)
retf
out
mov
xor
add
ins
(bad)
jle
shr
cwde
inc
xchg
mov
xchg
outs
stos
mov
cmp
mov
fs
ret
fcmovnb
mov
popa
jne
jo
test
adc
or
mov
and
mov
cs
rcr
adc
adc
mov
jmp
mov
cmps
loop
jmp
repnz
cwde
push
out
mov
xor
mov
lock
or
js
sti
hlt
fdivr
loopne
dec
clc
xchg
addr16
mov
aad
pop
ss
lods
retf
test
mov
xchg
cmps
sbb
fidivr
test
xchg
arpl
adc
inc
pop
xchg
aas
sub
sub
add
and
addr16
movs
jecxz
aad
sbb
lods
fnsave
call
ret
retf
out
jg
inc
cs
xchg
ins
es
rcl
sti
in
mov
popa
push
mov
push
nop
cwde
mov
test
das
jle
mov
pop
push
hlt
pop
ss
cmp
jmp
mov
into
jno
ins
int
jnp
shl
popf
movs
mov
sub
pop
in
xlat
inc
cmp
je
dec
add
push
mov
jle
ds
sub
pushf
pop
jae
jle
cdq
jmp
test
add
push
lds
test
rcr
sub
inc
sbb
outs
sbb
add
mov
and
jne
cmc
pusha
daa
outs
xchg
repnz
jne
fucom
std
push
or
pop
cmp
stc
mov
mov
xchg
rol
pop
aam
lahf
mov
stc
movs
push
xchg
and
cmp
dec
xchg
(bad)
in
xchg
dec
adc
ss
mov
call
loope
movs
js
in
call
add
fwait
jnp
and
ret
and
popf
pop
mov
jnp
mov
mov
xchg
sub
mov
shl
cmc
push
mov
pop
(bad)
into
test
inc
in
movs
jae
ins
ja
iret
sbb
into
xchg
hlt
pushf
movs
add
inc
test
adc
mov
aas
xchg
cmp
sar
push
cdq
dec
(bad)
int3
in
imul
pushf
rcl
test
ret
sbb
movs
mov
in
pop
aam
mov
retf
test
xchg
pop
int
jbe
leave
in
jecxz
dec
or
idiv
es
loopne
jg
stc
out
jg
stc
out
sbb
cld
pop
or
pop
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
out
cmps
sti
pushf
cwde
jmp
rcr
in
je
cwde
push
ror
es
dec
iret
xor
leave
jmp
jmp
mov
icebp
add
repnz
xor
add
call
mov
jb
cmp
cmp
add
jge
or
cmp
arpl
repnz
cli
lods
add
ret
adc
push
imul
out
ins
mov
scas
adc
jmp
mov
leave
add
or
(bad)
ds
adc
ret
cmps
sub
pop
push
mul
mov
shr
dec
jecxz
and
cmp
jo
lea
add
cwde
(bad)
fimul
test
and
jns
lahf
iret
movs
fimul
xor
cmp
imul
mov
call
mov
shr
out
jmp
mov
js
xchg
adc
iret
rcl
jo
and
dec
gs
mov
pop
xor
push
and
shr
mov
adc
dec
cmp
pop
jbe
je
push
cs
mov
and
add
fs
mov
and
loop
data16
out
xchg
pop
dec
and
fdivr
push
mov
and
cmp
data16
or
inc
jne
dec
leave
and
jns
(bad)
sub
mov
mov
cmps
dec
bound
dec
jno
add
adc
outs
xchg
mov
leave
mov
icebp
pop
mov
shr
mov
adc
outs
jecxz
and
adc
xchg
aad
pusha
icebp
lea
or
lea
adc
fisttp
jnp
nop
xchg
sbb
jno
(bad)
enter
aad
inc
mov
call
jne
div
rcl
cmp
std
adc
cmp
push
stc
daa
mov
mov
push
scas
iret
call
addr16
into
jo
pop
fsub
add
pop
jbe
jne
pop
xor
mov
ja
xor
jno
or
and
test
cld
ss
rol
jns
xlat
lods
sub
xor
repz
sub
psubq
sub
sti
xor
cmp
jns
stos
mov
sub
inc
jno
sub
or
stc
push
adc
xchg
(bad)
loopne
xor
mov
sti
mov
adc
inc
stos
jbe
fsub
imul
hlt
and
ss
push
fild
adc
int
daa
and
mov
cs
dec
stos
push
in
ja
icebp
mov
mov
sbb
inc
mov
mov
adc
mov
xchg
iret
pop
push
add
test
aad
imul
jmp
cmp
pop
jmp
shl
rcr
jecxz
jnp
fidiv
mov
mov
add
mov
imul
imul
mov
pop
inc
mov
aas
test
sbb
push
mov
jne
mov
jbe
call
add
push
dec
and
test
dec
cmp
cmps
jl
and
ins
dec
stc
pop
(bad)
dec
sbb
sub
sub
scas
outs
fbstp
sub
ror
cmp
sar
dec
jbe
stc
mov
clc
les
das
jmp
jle
es
stos
jns
lds
sbb
jne
cli
mov
lods
lahf
sar
clc
or
mov
retf
mov
shl
hlt
gs
pop
jle
fsub
ss
mov
push
aam
iret
mov
jbe
mov
mov
add
bound
je
dec
test
adc
xchg
mov
add
cmc
mov
jmp
fist
xor
dec
push
imul
jno
hlt
sbb
sub
sub
xchg
sar
jmp
mov
mov
clc
jnp
aas
cmps
test
xor
sbb
stc
dec
call
ins
ficomp
not
sbb
mov
adc
push
xchg
inc
jg
lea
pusha
mov
jnp
mov
stos
fidiv
(bad)
popa
inc
adc
xchg
jle
add
or
test
xchg
dec
cmp
dec
shr
les
push
mov
xchg
ret
ins
fldenv
cmp
add
jl
lea
(bad)
xor
mov
pop
adc
pop
inc
and
xchg
jmp
pop
lds
repz
movs
xchg
jmp
or
mov
push
jns
xor
sti
mov
dec
mov
and
test
and
sub
cs
jbe
adc
div
pop
out
in
mov
pop
cmp
xor
or
pop
or
movs
nop
fnsave
mov
xchg
jecxz
fst
jecxz
jge
popf
retf
out
test
repnz
fstp
mov
mov
rcr
mov
cmp
jl
inc
push
test
hlt
jno
xor
jle
and
or
xchg
pop
push
xor
mov
sub
and
add
and
xchg
mov
adc
xchg
aaa
adc
jnp
sar
in
or
je
dec
inc
dec
or
sbb
shr
mov
shl
cld
dec
push
sbb
push
ret
adc
lock
es
sti
(bad)
xchg
mov
test
popf
cli
adc
dec
shl
pop
pop
pop
push
xchg
jle
add
jg
movs
aas
popa
add
cmps
push
daa
mov
jp
add
push
inc
lahf
lods
in
shr
mov
lods
xchg
fucomp
xlat
lods
jle
scas
outs
jge
rcl
lods
inc
mov
sbb
dec
sbb
pop
inc
icebp
fisub
mov
scas
and
lahf
mov
addr16
call
add
jecxz
dec
mov
mov
clc
push
sbb
sbb
shl
and
cdq
shr
cmp
add
retf
inc
mov
stos
jle
rcr
fisttp
dec
fcmove
xor
add
xchg
inc
jecxz
sti
in
lahf
mov
aas
(bad)
aaa
std
jbe
lea
jmp
movs
imul
jmp
cmp
imul
das
dec
cmp
es
arpl
adc
jecxz
mov
lahf
out
add
repnz
jmp
test
rcl
and
repz
leave
test
mov
and
sub
mov
jl
std
push
sahf
test
ins
adc
es
rol
idiv
dec
pushf
jg
and
sti
hlt
cli
cmp
mov
call
(bad)
inc
aaa
jmp
mov
aaa
lods
sub
fcom
ret
and
addr16
cld
sahf
mov
cmps
fistp
push
and
ror
add
loop
cmp
dec
pop
(bad)
pushf
add
arpl
cmp
xchg
bsf
repz
push
ror
ret
iret
jne
lea
ret
es
mov
cli
adc
fwait
add
mul
dec
in
pop
mov
sti
out
and
pop
pop
popa
mov
shr
outs
sbb
xor
push
call
loop
dec
jle
lahf
and
aas
retf
lods
cmp
leave
xchg
pop
(bad)
call
rcr
pop
dec
sahf
fstp
xchg
stos
gs
dec
mov
je
adc
ds
cli
fdiv
dec
sub
nop
rol
lahf
inc
ds
mov
dec
cmp
retf
sbb
mov
cmp
push
dec
mov
adc
retf
imul
in
retf
retf
popa
outs
mov
xchg
jecxz
sbb
jmp
push
push
or
mov
push
(bad)
out
dec
adc
stos
data16
xchg
inc
shr
sbb
mov
aaa
jae
cmp
jmp
lods
call
fldenv
rol
fs
(bad)
jns
lods
xor
jne
stc
in
xchg
aas
jb
pushaw
mov
adc
jecxz
or
mul
bound
inc
cmp
add
in
xor
pusha
ror
or
jecxz
sbb
mov
jbe
sbb
sub
(bad)
outs
mov
jbe
inc
jbe
push
in
sbb
or
test
gs
and
je
push
icebp
push
mov
pushf
repz
jmp
lahf
lds
das
xchg
sbb
fs
xor
sub
xchg
or
push
jg
fwait
and
jo
xor
sub
fbstp
xor
loop
test
cmp
mov
mov
sbb
jmp
add
jns
mov
sbb
dec
fnsave
mov
mov
cmp
or
bound
xlat
in
push
xchg
mov
mov
jl
mov
test
in
ins
das
stos
test
sbb
scas
add
cs
dec
xor
ins
sar
dec
mov
test
popf
nop
jne
fcom
cmp
sub
test
jb
xchg
neg
add
sub
pop
iret
(bad)
jle
mov
in
cmps
popa
cld
cmp
jae
neg
out
fnsave
arpl
call
push
jmp
mov
xor
mov
loop
jmp
ret
into
inc
push
mov
pop
jns
mov
push
into
mov
mov
push
push
mov
cdq
fldenv
sbb
sahf
mov
mov
jae
jp
and
retf
in
mov
ins
xchg
push
pop
mov
pop
cmp
movs
push
jnp
jo
xchg
mov
shl
outs
or
lods
or
jmp
lea
stos
push
xor
jbe
jl
imul
in
rol
pop
arpl
xlat
push
pushf
inc
pop
into
out
pop
es
or
mov
data16
sub
outs
adc
xchg
inc
pushf
mov
sbb
cwde
aam
jl
push
cmp
fs
jns
movs
mov
scas
cmp
sub
mov
mov
out
inc
call
cmp
mov
sub
(bad)
retf
shl
inc
adc
push
loop
nop
ret
hlt
rcr
jge
sbb
std
retf
fwait
les
xor
cmp
inc
shl
rcl
data16
push
movs
xchg
or
xor
fdivr
pop
dec
sbb
cmp
push
daa
ret
lock
mov
push
(bad)
cli
xchg
ret
mov
jecxz
pop
mov
stc
sub
inc
pop
mov
(bad)
cmp
add
shl
(bad)
fst
or
ja
cmp
xor
icebp
push
movs
out
call
mov
mov
or
add
jo
adc
mov
mov
jmp
and
push
cmc
mov
add
frstor
xchg
mov
sbb
xchg
popa
jb
xor
mov
sub
hlt
fs
test
les
loopne
cwde
mov
(bad)
adc
ss
movs
jmp
sbb
mov
call
stos
mov
push
gs
jecxz
jno
adc
pop
adc
pop
sti
or
xor
pop
push
jg
or
jecxz
mov
pop
jg
movs
loope
out
mov
jb
xor
je
stos
hlt
enter
and
das
xchg
mov
loope
sbb
cmc
mov
and
pop
push
fsub
fimul
orps
ret
or
dec
mov
and
push
scas
das
fwait
leave
cmovge
mov
loope
mov
mov
imul
jns
enter
cs
pusha
cmp
sub
loop
ficom
adc
cmps
daa
jbe
mov
inc
retf
je
xor
mov
mov
fwait
lods
push
dec
add
test
not
jno
mov
lea
jnp
scas
iretw
xchg
shl
leave
call
jns
jb
mov
iret
das
or
jecxz
dec
test
sbb
cdq
jno
mov
or
adc
les
(bad)
inc
cmp
mov
fiadd
mov
jmp
aaa
push
sti
add
adc
inc
mov
jae
mov
jp
fnstsw
hlt
xchg
movd
popf
loopne
pop
lahf
(bad)
mov
(bad)
jno
sub
jmp
cmp
jmp
add
iret
xor
icebp
in
loop
dec
cmp
xchg
inc
in
cmps
lahf
bound
xor
cdq
mov
cs
dec
sub
in
mov
ins
mov
dec
loopne
push
and
aaa
jg
and
add
mov
or
(bad)
mov
sub
mov
lahf
scas
push
cmps
aaa
cmp
and
loopne
jae
jne
dec
mov
inc
lds
cmps
xor
jl
push
imul
clc
dec
add
and
xchg
mov
mov
cwde
cmps
cdq
dec
call
xlat
cs
aad
fisttp
xchg
mov
aam
sub
sar
sbb
cli
rol
out
call
les
or
gs
loope
dec
fcom
adc
pushf
xchg
inc
clc
fidivr
es
push
jns
cmp
pop
mov
rcl
inc
xor
mov
xchg
jo
dec
das
xchg
nop
cmp
cmp
fcomp
adc
and
mov
sahf
test
loope
mov
stc
mov
stc
mov
cmp
sbb
lock
aaa
mov
outs
fsubr
mov
jp
repnz
cld
fs
mov
out
xchg
cmp
clc
lea
inc
ficomp
dec
sbb
jg
xchg
mov
das
dec
pushf
or
push
addr16
out
enter
movs
call
mov
popf
jns
adc
or
xchg
cmps
pop
fisttp
leave
leave
(bad)
les
pop
add
popf
jmp
scas
push
adc
xlat
and
jle
loope
popa
mov
adc
lock
test
das
push
std
icebp
lds
add
shl
lock
cmps
test
pop
leave
fist
push
int
mov
outs
xor
les
lahf
ja
sbb
or
lea
push
test
popf
mov
adc
fwait
push
(bad)
cli
repz
jmp
pop
ja
push
out
shl
jg
nop
inc
fcmovnb
sub
add
mov
mov
ror
(bad)
mov
out
or
ficomp
js
loop
and
push
(bad)
fld
fdivr
jmp
shr
dec
clc
adc
mov
sub
push
xor
(bad)
mov
(bad)
mov
stc
jecxz
jmp
pop
ret
out
jnp
das
rcr
hlt
stos
fucomip
push
jbe
mov
fcom
cdq
jmp
dec
mov
rcl
pushf
fistp
mov
cmp
mov
aas
mov
lock
jmp
test
fdivr
jnp
and
mov
xchg
lds
inc
sub
ret
jp
inc
js
int
cmp
sub
dec
jbe
push
jmp
pop
add
xlat
sbb
mov
ins
pop
mov
dec
xchg
inc
call
pop
popf
push
jecxz
add
xchg
mov
ja
mov
outs
mov
adc
adc
sar
cmp
call
out
bnd
neg
and
lock
mov
(bad)
(bad)
out
out
call
int3
dec
fadd
fldl2t
ins
dec
ret
sahf
or
dec
add
loopne
jbe
movs
jl
pusha
mov
add
fs
hlt
fist
xor
sbb
push
adc
shl
jno
add
xchg
stos
pop
jmp
push
mov
sub
pop
or
shr
int3
and
pop
mov
sbb
mov
adc
sbb
into
lea
int
sub
jp
cmc
pusha
test
jns
bound
call
fwait
dec
fld
xchg
xchg
loopne
lds
push
and
pop
mov
lods
lahf
scas
shl
pop
push
mov
(bad)
stc
out
jg
stc
out
xor
mov
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
jbe
cmps
cmp
mov
sub
xor
push
shl
fstp
(bad)
je
cld
or
cmp
mov
jns
xor
xor
mov
popf
outs
iret
cmp
clc
mov
sub
iret
add
(bad)
movs
mov
and
mov
ins
shr
mov
xchg
out
lods
mov
addr16
push
and
jmp
mov
xchg
(bad)
aaa
loop
das
nop
js
mov
push
aam
dec
pop
sub
push
adc
mov
(bad)
rcl
fwait
sti
aaa
dec
cmp
jae
cs
cmc
nop
xchg
push
inc
pop
int3
dec
cld
sub
push
adc
bound
pusha
scas
mov
adc
add
fisub
(bad)
xchg
add
imul
dec
retf
test
pop
dec
cmp
cmps
xchg
imul
cmp
cmp
mov
mov
not
in
std
add
xchg
movs
cdq
xor
loopne
ror
neg
imul
gs
rol
xchg
sub
cmp
jg
outs
xchg
push
mov
xchg
and
or
mov
xor
ret
or
sub
cmp
cmp
leave
das
sub
das
imul
(bad)
lock
ins
outs
sub
or
jecxz
and
sub
ss
fwait
jp
xor
pop
dec
mov
push
cld
pushf
and
pop
test
daa
xchg
ret
mov
sub
lods
sahf
dec
xchg
shr
(bad)
cli
or
xchg
adc
cmps
jl
adc
ds
fimul
out
pop
sbb
jle
pop
jmp
cmp
or
out
lods
pop
je
inc
pop
ja
push
push
jnp
sub
jns
int
pop
mov
jo
or
cmp
test
cmovno
jnp
retf
fldcw
or
outs
in
(bad)
loope
outs
pop
xchg
popa
dec
jecxz
in
inc
pop
(bad)
jmp
shl
mov
mov
outs
mov
or
fisubr
add
js
or
aam
add
(bad)
sbb
sub
mov
sub
retf
sahf
xchg
mov
inc
jnp
lea
adc
jbe
mov
(bad)
xchg
dec
cs
retf
daa
ds
(bad)
push
sahf
dec
les
xchg
jno
pop
push
jns
js
jp
push
pusha
xor
xchg
dec
out
fisttp
call
xchg
pop
sti
cmp
imul
out
(bad)
mov
jge
and
mov
and
clc
cwde
adc
push
mov
and
loopne
out
dec
stos
sbb
mov
add
and
or
pushf
push
ins
scas
in
cli
jge
cmps
add
data16
pop
data16
push
mov
xor
es
es
mov
leave
push
jmp
ja
lods
pop
mov
mov
push
sbb
jp
mov
sahf
dec
adc
push
inc
sbb
jnp
xchg
test
dec
mov
mov
mov
mov
inc
pop
inc
div
fnstcw
add
test
stos
lea
lods
fcomp
jae
je
mov
test
test
data16
mov
add
ins
cmp
mov
sti
cwde
mov
sub
ret
mov
sbb
cwde
sub
cmova
xchg
xchg
ss
dec
sub
gs
gs
xchg
sub
fistp
cmp
adc
in
sub
or
stc
lock
pop
call
inc
shl
pop
jb
(bad)
rol
cmp
scas
cmp
repnz
cmps
push
push
xor
push
jecxz
inc
sti
nop
(bad)
lods
lock
rcr
push
pop
xchg
cmp
ret
adc
movs
push
lds
push
dec
xchg
adc
or
out
pop
rcr
in
adc
popa
ins
xor
jae
push
jl
cli
inc
ret
cli
(bad)
enter
mov
imul
dec
push
ins
hlt
jl
adc
mov
outs
js
push
inc
push
push
stos
das
loopne
jns
push
aam
movs
xchg
push
mov
pop
mov
inc
retf
cmp
pop
aas
icebp
or
jno
add
push
mov
(bad)
cli
cmp
or
sbb
mov
mov
push
(bad)
fcomp
jl
mov
pop
sbb
ret
jo
mov
(bad)
test
sbb
cli
mov
aas
mov
or
xor
cmp
cmp
xor
or
mov
scas
not
or
or
pop
xchg
loope
cmp
sub
fcom
cdq
inc
clc
push
mov
xchg
sbb
add
sar
and
loopne
sbb
inc
jno
mov
pop
cmps
mov
jno
int3
and
adc
out
dec
shl
jbe
lea
xor
mov
inc
jecxz
aad
xor
sti
mov
idiv
sbb
loope
cmp
jno
xchg
pop
jecxz
inc
test
jl
lds
jbe
and
inc
sub
dec
jl
sbb
cmp
std
icebp
ror
adc
cmp
leave
mov
jb
test
jno
push
cmp
dec
push
dec
je
fcomp
call
in
das
cmps
test
adc
dec
xchg
mov
mov
xor
or
and
add
in
call
adc
cmp
push
push
imul
push
jl
jbe
inc
imul
xchg
mov
arpl
mov
int3
fld
push
mov
ins
push
inc
enter
sub
and
repnz
ret
mov
inc
pop
aam
or
mov
gs
push
es
gs
lock
push
inc
jbe
and
gs
stos
jo
and
retf
push
popf
mov
cmp
sahf
and
movs
mov
pop
add
xor
call
jno
add
popa
or
int
xchg
adc
and
and
xlat
sti
in
movs
jne
rcr
test
xor
cld
loop
or
mov
sar
inc
bound
nop
inc
cmc
jne
xlat
fisub
or
(bad)
loopne
xor
add
fild
rcl
pop
neg
sti
rcr
xlat
push
int
imul
jmp
jb
ins
daa
out
fbld
rol
out
call
mov
xor
push
into
les
shl
and
mov
adc
xchg
jge
push
inc
sub
sub
sbb
sub
out
fdiv
imul
push
test
inc
mov
adc
jmp
ja
rol
dec
or
mov
adc
dec
stc
inc
ret
cdq
outs
in
cmps
and
arpl
cmps
mov
sahf
les
fisttp
push
xchg
xor
xor
jmp
push
data16
cmp
(bad)
repnz
jge
retf
repnz
dec
out
leave
jecxz
(bad)
pop
repnz
sbb
cmp
sub
adc
sbb
ret
mov
mov
out
cmps
scas
jge
inc
sub
pop
pop
push
push
pusha
mov
out
dec
adc
popa
ret
push
sub
mov
jg
adc
cmc
in
test
xor
iret
repz
mov
call
mov
adc
jle
sysret
out
sbb
add
mov
jb
data16
in
pusha
loope
push
js
jb
outs
mov
mov
lds
lahf
sbb
mov
cmp
or
push
pop
jle
(bad)
xlat
movs
mov
jp
sub
push
dec
in
pop
call
setl
pop
fcmovbe
pop
and
or
sub
and
nop
bound
aas
mov
movs
jp
sti
xor
jns
lods
(bad)
neg
mov
dec
xchg
sti
push
outs
dec
jp
cld
ins
imul
inc
and
stc
sbb
aam
sub
div
xor
push
or
outs
mov
jns
aad
xchg
daa
mov
xor
xchg
cmps
addr16
retf
sub
sub
xor
aas
(bad)
jb
fwait
out
std
out
xor
test
mov
jne
cmps
or
push
aaa
xor
adc
adc
dec
jne
leave
and
pop
mov
mov
adc
jns
call
mov
push
dec
mov
jnp
retf
xor
dec
jmp
jnp
mov
stos
pop
ret
sbb
dec
test
pop
jb
popa
push
cmp
push
repnz
push
inc
adc
mov
adc
aas
jge
cmp
sub
into
add
adc
xor
push
jbe
and
nop
cmc
mov
hlt
jl
sbb
xor
xchg
pop
jle
loope
out
sti
jne
sbb
cmp
or
shl
add
xor
jp
jns
adc
xchg
xor
push
cli
test
cmp
push
test
xlat
jae
mov
les
ins
dec
pop
push
test
sub
(bad)
mov
sbb
and
popa
loop
jmp
cmp
sahf
or
mov
jp
push
cmp
fs
jecxz
pop
mov
hlt
mov
and
mov
stc
mov
mov
xchg
(bad)
jl
xor
or
div
outs
push
adc
shr
xor
(bad)
ror
and
adc
mov
gs
pop
jp
xchg
out
inc
cmp
cli
xchg
div
iret
mov
or
and
ret
cli
dec
in
cmp
or
cmp
jl
push
aaa
fild
xchg
pop
push
add
fdiv
xor
push
bswap
pop
pop
(bad)
outs
paddd
jbe
rcl
sub
lock
mov
inc
rcl
adc
aaa
mov
rcl
mov
xor
fwait
push
and
xchg
es
pop
loop
push
stos
cmp
mov
imul
or
mov
xor
mul
shld
call
jbe
in
xor
sub
inc
mov
mov
dec
sbb
xor
xchg
cmp
fwait
jecxz
cmp
fs
shl
or
call
mov
(bad)
imul
rcl
adc
push
out
idiv
push
push
in
xchg
repz
adc
lods
cmc
aaa
adc
lds
cld
lods
fmul
adc
and
cmp
in
pop
cwde
cwde
retf
jg
jnp
pusha
mov
call
push
jo
test
mov
mov
imul
dec
inc
std
jns
cdq
aaa
jg
xor
repz
add
or
fistp
or
pop
pop
xor
cmps
cmp
cmp
jae
jns
ja
fidivr
or
(bad)
cld
test
inc
cmc
cdq
adc
mov
or
sbb
int3
inc
test
sar
sub
stc
xor
inc
jmp
cmps
sbb
xchg
cmp
inc
fnstsw
xor
loopne
xchg
xchg
inc
cmps
sahf
push
jecxz
add
scas
fldcw
sbb
inc
push
fisttp
pushf
and
mov
test
dec
mov
and
shl
ja
mov
ja
mov
push
mov
mov
outs
dec
xor
jo
mov
mov
cmp
imul
mov
sbb
adc
test
repz
mov
mov
and
sbb
jnp
push
jp
mov
jp
lea
repnz
idiv
adc
inc
pop
dec
jp
pop
push
push
xor
repnz
je
cli
test
(bad)
retf
pop
xchg
jo
mov
dec
xor
sahf
outs
sbb
retf
sbb
inc
bnd
inc
mov
ds
pop
inc
xchg
jo
cmp
sbb
xchg
and
test
aaa
and
in
jns
data16
ret
in
add
mov
jo
fisubr
aad
scas
lock
add
fwait
nop
stos
in
mov
xor
pushf
into
or
xchg
push
pop
enter
push
gs
sbb
imul
arpl
dec
loopne
mov
imul
hlt
sub
inc
pop
or
xchg
dec
push
jns
(bad)
std
jmp
mov
xchg
jmp
test
mov
cwde
or
cdq
xchg
sub
ja
in
xchg
inc
clc
xchg
cdq
rcl
or
out
push
shl
in
xlat
push
jns
inc
pop
sbb
jmp
pop
int3
sub
jbe
cmp
jno
mov
inc
icebp
push
dec
repz
sbb
sub
rol
mov
sbb
call
jecxz
sbb
into
das
push
adc
or
push
dec
xchg
add
jmp
mov
(bad)
fcmovb
lods
pop
and
fcomp
inc
mov
push
xchg
sbb
iret
push
cli
jbe
dec
inc
xlat
push
adc
sub
iret
cmps
pop
out
or
cmp
sar
cmp
and
(bad)
ja
cwde
into
cmp
ficomp
das
out
add
inc
xchg
inc
fadd
lea
dec
aas
ja
xchg
push
pop
mov
pop
push
adc
mov
lods
pop
daa
mov
mov
pusha
jl
lea
fdivr
mov
cli
sub
mov
xchg
inc
dec
jl
aad
sub
js
lods
fs
sub
(bad)
or
mov
test
add
push
xchg
mov
adc
push
(bad)
jl
dec
stc
and
sahf
jle
mov
(bad)
into
mov
jmp
sub
cmp
sub
sbb
out
les
mov
mov
dec
out
call
mov
aaa
test
scas
fild
rol
pop
cmp
cmp
adc
and
dec
pop
popa
cmp
xlat
or
jbe
jmp
mov
push
retf
outs
rcl
push
push
int
mov
lock
push
mov
cmp
leave
mov
dec
lea
icebp
dec
fimul
xor
in
shr
sub
mov
movs
cmp
adc
jp
xchg
outs
shl
stc
mov
dec
fwait
mov
outs
or
hlt
ins
es
bound
dec
int
sub
lds
fld
xor
pop
dec
mov
dec
aaa
jecxz
fs
mov
inc
push
pslld
rcl
leave
ds
stc
adc
mov
call
mov
and
icebp
rol
scas
and
out
xchg
hlt
sbb
rol
call
pop
jbe
loopne
ja
inc
mov
jecxz
fdiv
into
inc
lods
and
sti
idiv
imul
fwait
das
icebp
scas
aas
test
push
lea
sub
and
jmp
mov
cdq
dec
sbb
pop
addr16
mov
lods
add
out
jl
aam
xor
idiv
mov
dec
out
sub
movs
icebp
push
mov
push
call
and
mov
add
push
sbb
lock
out
or
jmp
bound
jg
mov
and
inc
repnz
jae
mov
sbb
cmp
adc
mov
mov
arpl
in
scas
sbb
mov
bound
and
(bad)
aas
or
xor
jge
jp
repz
fimul
sahf
int
sub
add
push
les
out
adc
(bad)
xor
addr16
sub
int3
sbb
push
mov
sbb
xor
in
mov
jns
mov
adc
sub
cdq
mov
inc
movs
aam
cld
push
test
ret
jne
push
std
cmps
(bad)
mov
je
sbb
sti
popf
sbb
and
and
jmp
js
ins
or
adc
scas
nop
sub
dec
push
sub
xchg
sbb
jno
mov
mov
pop
or
push
pop
aam
cmc
sti
pop
fwait
mov
jnp
rcr
push
add
cmp
fnsave
xchg
aas
adc
jp
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
dec
mov
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
add
scas
cwde
pushf
fdiv
(bad)
dec
xlat
popa
call
je
jmp
xchg
mov
jmp
(bad)
jns
iret
out
repz
add
bound
pop
or
push
out
retf
xchg
fs
gs
pusha
sub
dec
mov
push
adc
ss
(bad)
sub
or
mov
mov
mov
jne
lock
push
inc
xchg
pop
lahf
jo
test
cmps
inc
(bad)
mov
mov
lahf
in
jle
cmps
and
push
sub
pushf
dec
jmp
int3
jg
mov
fisub
loop
pushf
dec
int
mov
cwde
mov
in
gs
cmp
(bad)
(bad)
(bad)
cmp
lods
add
xor
daa
adc
mulps
xor
inc
neg
adc
mov
enter
mov
int
pushf
xchg
ds
pop
push
std
fcmovbe
sbb
adc
sub
pop
call
sub
es
fucomi
xor
lods
scas
leave
jmp
dec
fs
pop
adc
dec
pop
lock
jno
mov
cmp
sub
sbb
test
int
movs
iret
out
cwde
xor
xchg
jge
mov
inc
or
lahf
inc
sar
xor
pop
test
xor
fadd
inc
jmp
fs
ja
nop
aaa
pop
(bad)
adc
or
sub
push
sbb
(bad)
xchg
sub
push
mov
and
retf
ins
jg
and
cmp
adc
sti
lock
sbb
cmp
adc
mov
sbb
mov
xchg
mov
sahf
jge
adc
mov
(bad)
ds
mov
pop
push
adc
ins
icebp
and
pop
fist
adc
test
rcr
sub
add
lods
pop
add
cs
xchg
cmps
loopne
push
fwait
ret
stc
inc
mov
and
mov
dec
sbb
retf
xor
jmp
and
mov
pop
mov
dec
sub
mov
add
imul
push
ret
inc
cmp
jnp
stc
sub
or
loopne
mov
cli
pop
sub
mov
aam
push
jns
pop
popa
scas
xor
inc
imul
inc
add
jae
xchg
call
mov
push
sbb
fcmove
and
sub
jle
jg
jb
ret
dec
mov
icebp
and
add
(bad)
imul
test
aas
hlt
adc
sub
xor
jns
sbb
jnp
addr16
pop
jl
scas
daa
pop
jns
mov
and
sti
dec
out
push
push
leave
mov
sar
adc
adc
mov
xlat
test
das
sbb
loope
sub
mov
mul
cwde
jge
mov
push
or
pushf
mov
push
stos
test
imul
or
cld
imul
mov
jo
xor
add
dec
xchg
out
cmp
push
mov
pop
test
(bad)
mov
jns
dec
jae
sub
sar
hlt
call
adc
aad
sar
mov
mov
xchg
xor
inc
ins
xlat
mov
lds
(bad)
imul
outs
pop
(bad)
outs
and
sbb
push
xlat
jmp
inc
mov
sbb
mov
mov
mov
loopne
mov
ss
sbb
add
sub
imul
stos
and
xor
movs
call
sub
aam
mov
sbb
sar
loope
mov
lahf
adc
adc
or
mov
push
xchg
test
jne
ror
dec
call
adc
adc
xor
fs
popf
dec
stos
dec
faddp
sets
push
push
inc
loop
pop
in
fisubr
(bad)
mov
aaa
inc
loope
mov
or
push
mov
jne
in
dec
jp
inc
scas
out
test
sbb
lods
xor
pushf
xlat
hlt
out
les
xor
shl
cmps
add
mov
imul
inc
dec
loop
std
jp
push
mov
lea
(bad)
mov
rcl
ret
inc
xchg
outs
sbb
cmp
fwait
adc
inc
fwait
cmp
aam
inc
mov
mov
pop
sub
jp
bound
inc
push
pop
pusha
add
jnp
lods
std
lahf
cld
daa
mov
out
sti
pop
jl
mov
in
inc
jmp
pop
add
adc
jg
in
and
cli
vpavgw
cmp
xor
icebp
enter
cmp
xchg
shl
inc
out
lock
jle
sbb
xchg
clc
repnz
in
dec
aas
(bad)
and
daa
sub
mov
test
shl
sub
xor
sbb
out
aas
aam
or
(bad)
repnz
pop
cmps
(bad)
pop
pop
mov
cmp
lock
(bad)
mov
pop
sbb
sub
push
fs
mov
in
(bad)
cmp
dec
mov
movs
sub
outs
stos
(bad)
jle
push
adc
das
fcomp
out
pusha
shl
push
sbb
neg
(bad)
xor
fld
sbb
pop
fistp
push
popa
mov
mov
lahf
ret
cmp
adc
jmp
fld
add
push
xlat
sub
in
retf
gs
ins
jge
jmp
push
or
xor
cmps
lods
push
cmp
inc
pop
mov
xor
xor
or
mov
add
scas
xchg
frstor
push
fnstenv
push
mov
icebp
jge
cwde
fcomp
pop
push
inc
(bad)
in
scas
aas
mov
addr16
xor
ror
repnz
or
retf
xchg
xchg
pop
iret
xlat
icebp
cmp
(bad)
mov
repz
sbb
push
cmp
mov
mov
push
and
push
fs
cmp
and
rcr
and
fstp
cmp
out
ret
(bad)
in
pop
mov
add
mul
dec
aam
adc
lds
(bad)
data16
lds
xchg
scas
pop
aad
cld
cmp
(bad)
js
fdivr
popf
adc
cmp
fcom
xchg
sbb
dec
fistp
clc
sub
cdq
xchg
ror
mov
mov
mov
push
cmp
pop
mov
xchg
push
div
rcr
hlt
mov
call
sahf
pop
fistp
sbb
adc
push
push
les
fidiv
arpl
sti
ror
std
test
lock
xchg
sbb
xor
(bad)
xchg
cmps
iret
ficomp
jno
mov
ds
mov
in
fucom
push
sbb
mov
shr
inc
fs
js
repnz
test
das
cmc
mov
scas
add
mov
dec
(bad)
sbb
jle
jle
(bad)
retf
cwde
cli
loop
aaa
gs
xchg
and
pop
popa
inc
push
mov
xchg
lods
cli
mov
out
(bad)
lock
and
jae
jns
push
rcl
ror
jmp
pop
mov
inc
rol
push
mov
out
jno
mov
mov
leave
(bad)
cmp
into
push
dec
xchg
stos
push
jae
in
sti
xchg
pop
add
call
dec
out
mov
(bad)
jbe
pushf
pop
call
inc
loop
aam
xor
nop
retf
fcomp
rcr
clc
mov
and
jae
popf
test
mov
sbb
lea
cmp
xchg
test
fwait
add
hlt
shr
fistp
mov
cmp
ds
pop
and
jns
cli
push
mov
fldenv
jge
test
addr16
sbb
js
pop
or
cmp
and
lods
mov
daa
int
shr
jns
in
mov
dec
mov
and
push
int
or
adc
into
loopne
out
mov
test
xchg
and
xchg
push
push
pop
pushf
cmp
pop
fisubr
pop
jg
jg
adc
pop
xchg
inc
adc
stc
ds
int
les
jmp
jnp
test
inc
ror
mov
pop
hlt
sbb
rcl
(bad)
dec
add
(bad)
call
sub
jle
mov
dec
jecxz
aad
push
sbb
jmp
inc
rcr
mov
mov
and
aaa
pop
maskmovq
not
mov
xchg
jp
mov
ret
push
adc
iret
or
push
jp
mov
mov
test
test
enter
pop
or
sub
div
pushf
xchg
outs
jecxz
sub
inc
mov
lds
mov
jl
pop
adc
jecxz
movs
int
unpckhps
sbb
push
nop
pop
mov
test
push
adc
loopne
jae
and
repz
jmp
dec
(bad)
(bad)
xchg
outs
nop
(bad)
test
ret
pop
int3
xor
sbb
pop
mov
dec
jo
mov
push
repz
xchg
popf
ret
push
mov
xor
lahf
add
fwait
in
pop
clc
xchg
and
inc
dec
dec
(bad)
lahf
imul
stos
jnp
add
sbb
sbb
cmps
push
pop
mov
scas
stos
adc
dec
adc
cmp
adc
aam
sbb
cwde
retf
mov
retf
pop
dec
aam
jle
mov
dec
aaa
push
outs
mov
in
fadd
rcr
int3
cmc
jg
pop
sub
ins
jns
dec
(bad)
or
push
hlt
ins
push
repnz
call
pop
(bad)
das
or
aam
ds
nop
push
data16
enter
lahf
ror
adc
xchg
cld
repnz
out
fimul
jmp
add
outs
push
fistp
sub
lods
call
add
cmc
jge
mov
fwait
adc
mov
dec
push
cwde
pop
lahf
je
pop
js
les
push
push
outs
in
sub
mov
pop
das
outs
sub
jg
ds
scas
in
sahf
(bad)
jo
pop
fdiv
ficom
mov
and
sub
pop
test
pop
imul
rol
sbb
mov
inc
mov
mov
mul
je
movs
xchg
mov
xor
fld
xchg
mov
jmp
(bad)
stc
stos
je
pop
int3
je
in
mov
and
jg
jle
cmps
je
(bad)
mov
and
pop
dec
mov
shl
xchg
push
je
dec
or
jne
shr
jmp
jns
clc
inc
xor
lods
mov
xchg
fdivr
adc
jge
fwait
inc
dec
cmp
pop
mov
add
outs
movs
add
add
shl
ja
or
je
xchg
jno
cmc
neg
xchg
dec
and
popa
add
cdq
jo
pop
scas
loopne
inc
push
scas
sbb
sbb
pop
bound
jae
aas
ja
ret
ficom
(bad)
sbb
xchg
mov
adc
push
iret
call
fist
nop
clc
popw
sub
test
mov
dec
fsubr
mov
jo
repz
dec
mov
xchg
lahf
xor
or
aas
and
sub
nop
repnz
mov
sbb
hlt
sbb
fistp
inc
xor
inc
dec
movs
or
retf
lea
adc
js
jb
inc
jne
imul
mov
je
popa
cdq
nop
mov
bnd
inc
fst
cld
fimul
and
cmp
jbe
sub
xor
sbb
and
push
jae
js
out
or
push
fild
nop
mov
setle
cli
add
ret
adc
jno
aaa
jge
into
mov
js
inc
cmp
loope
lock
or
mov
js
sahf
out
push
rol
dec
pop
jl
xor
(bad)
sub
shl
test
stc
cld
cmps
mov
adc
ret
aaa
imul
cmp
call
dec
pop
test
fs
sbb
push
popa
ficomp
in
daa
or
call
dec
ror
jmp
push
(bad)
daa
outs
stos
leave
inc
jge
xor
sub
pop
mov
in
nop
gs
out
pop
aaa
jl
mov
lahf
ss
add
imul
pushf
sbb
repz
push
pop
pop
ret
push
sbb
pop
movs
xor
sahf
xchg
sahf
out
push
and
mov
jge
(bad)
dec
mov
sbb
aam
das
add
(bad)
in
fimul
pop
mov
iret
ret
ds
xor
inc
jbe
int
jo
test
pop
cld
jbe
dec
jne
clc
adc
or
dec
and
pop
gs
jp
and
aaa
aam
jg
cmc
mov
mov
push
inc
test
jge
outs
iret
xchg
call
mul
aad
nop
(bad)
bound
jbe
call
xor
dec
leave
loopne
gs
stos
lods
xchg
loopne
pop
inc
(bad)
cmp
mov
adc
std
jl
add
jmp
je
rcr
dec
movs
rcr
pop
sbb
in
pop
mov
movs
inc
mov
repnz
mov
sub
ds
(bad)
popf
xor
in
movsx
mov
pop
stos
icebp
jae
jns
inc
fld
xchg
cli
cpuid
inc
add
jge
dec
(bad)
retf
mov
(bad)
push
jno
pop
pop
cmp
xor
test
push
ret
aad
inc
icebp
mov
fs
jnp
bound
jp
ror
or
clc
je
idiv
jge
or
jg
(bad)
in
sbb
jecxz
mov
out
adc
jmp
inc
rcl
fcomp
cmp
stc
and
jle
ror
mov
mov
shr
addr16
movs
bswap
jecxz
cli
cmp
cli
shl
out
clc
add
or
xor
pop
movs
and
adc
cdq
out
call
int3
or
adc
call
xor
mov
std
jnp
inc
or
sti
out
aad
sub
sub
inc
add
ror
outs
push
das
jo
lea
out
add
aam
xor
cmp
in
in
add
ret
adc
mov
rcr
ds
lods
mov
jne
adc
arpl
jp
sbb
movs
mov
or
xor
xor
movs
sub
outs
(bad)
and
sub
mov
cwde
dec
and
push
int3
mov
adc
popa
inc
retf
retf
pop
jg
aaa
pop
imul
out
push
gs
jge
jle
cli
mov
movs
out
scas
pop
ds
stos
ret
xchg
int
fwait
xchg
in
clc
fcomp
or
sub
cmc
setp
xor
pop
sti
stos
mov
sti
dec
xor
aad
xchg
aad
mov
dec
adc
in
data16
push
pop
shl
outs
inc
enter
add
inc
in
rcl
mov
pop
outs
into
hlt
inc
ins
lock
sti
inc
leave
xchg
js
jecxz
xor
mov
mov
cmp
cmc
cwde
mov
outs
int3
loope
mov
jl
outs
xchg
add
add
hlt
nop
in
movs
and
jne
scas
or
jne
call
fistp
stos
sub
loope
mov
ror
call
jecxz
js
int3
sbb
jnp
stos
in
movs
mov
ja
repz
xchg
sub
lahf
sbb
sbb
(bad)
push
loopne
imul
ins
xor
cmps
jmp
mov
jnp
rol
out
mov
bound
(bad)
sti
jmp
mov
ffree
movs
sbb
mov
jg
inc
inc
dec
or
fsub
cwde
sahf
test
movs
ins
not
xor
mov
cmp
movlps
mov
sbb
mov
js
pop
mov
sbb
jecxz
aam
jae
int3
fidivr
cli
stc
push
outs
adc
jmp
retf
(bad)
cld
out
fisttp
dec
ins
pop
fwait
or
ins
push
push
jns
jecxz
push
int3
popf
xchg
call
sbb
add
adc
jle
jns
mov
pop
fwait
shl
out
out
cmp
lods
pop
std
push
jae
and
aas
fadd
mov
jnp
aaa
aaa
mov
gs
sbb
jecxz
jnp
mov
mov
xor
lahf
shl
cld
mov
(bad)
cld
out
(bad)
stc
iret
jg
repz
call
add
jg
and
fwait
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
sahf
jbe
ja
outs
xchg
mov
sahf
mov
out
mov
cmps
mov
cdq
pushw
std
and
sahf
pop
add
sbb
lods
sub
mov
push
mov
inc
out
cmc
mov
pop
mov
cld
sub
popf
jle
adc
fwait
inc
sub
pushf
sbb
mov
movs
or
call
std
mov
imul
cdq
ins
lock
xor
mov
push
mov
(bad)
jl
retf
sub
fcomi
mov
jg
push
(bad)
mov
mov
fwait
std
movs
inc
ror
add
stos
pop
push
daa
dec
add
pop
sub
dec
clc
(bad)
cwde
movs
aaa
ins
mov
cmp
and
test
ja
test
mov
cld
pop
xchg
xor
addr16
sti
retf
(bad)
jmp
add
mov
and
push
inc
or
cdq
and
dec
or
bnd
push
in
out
xchg
pcmpgtd
mov
out
push
adc
jne
mov
mov
cmp
pop
enter
out
jmp
stos
push
(bad)
pop
mov
cld
fstp
js
lahf
(bad)
scas
dec
fmulp
int
inc
xchg
cld
jmp
fmul
mov
pop
lds
dec
xor
jae
in
cmps
ret
pop
outs
aam
inc
adc
out
mov
jae
mov
sbb
enter
cmp
dec
push
cmp
mov
mov
and
pop
pop
mov
adc
(bad)
sub
dec
test
cmp
cmp
xchg
rol
cmps
and
sar
or
mov
push
jle
ss
xor
or
mov
adc
jbe
mov
iret
call
xor
je
gs
test
std
jmp
aad
push
adc
xor
test
inc
not
jno
ret
divps
dec
pop
xchg
hlt
fwait
mov
sbb
dec
adc
popf
xor
ins
(bad)
fcom
mov
push
popf
mov
fcomp
mov
push
pop
pop
mov
push
bound
movs
(bad)
jecxz
test
imul
(bad)
int3
adc
mov
out
sbb
jl
dec
xor
cmp
ins
rcl
in
push
mov
inc
in
enter
outs
bound
test
jno
push
div
pop
inc
push
jne
retf
(bad)
inc
lock
repz
xor
sbb
jae
mov
jae
xchg
sbb
sbb
sbb
inc
(bad)
add
adc
mov
jae
pop
leave
push
aad
aam
ror
test
ror
add
xchg
shr
and
loopne
int
int
adc
and
std
and
cmp
rcl
mov
pop
fisub
int3
xor
dec
ffreep
dec
push
dec
imul
pop
jmp
pushf
cdq
popa
push
jg
popa
fstp
xchg
jge
jecxz
imul
nop
mov
xchg
rcr
sti
bnd
add
pop
cmps
scas
xor
and
js
xor
mov
dec
jmp
pop
xor
xor
push
fimul
jl
lock
mov
enter
stc
loope
in
int
dec
mov
lahf
push
push
jo
hlt
mov
cld
push
xchg
jmp
inc
pop
std
inc
nop
mov
mov
jge
dec
scas
inc
ds
adc
aam
or
xor
or
pop
mov
retf
inc
adc
mov
jecxz
ja
inc
cli
scas
mov
add
xchg
jp
addr16
mov
pushf
mov
fidivr
mov
jge
or
xchg
inc
loope
mov
add
inc
fdiv
iret
jmp
cs
and
sub
cld
(bad)
xchg
(bad)
push
pop
(bad)
in
jp
mov
jmp
mov
test
cwde
clc
sti
or
and
ins
xchg
xor
xchg
pop
xchg
pop
inc
pop
or
cmp
jmp
inc
xchg
xor
dec
pop
test
xlat
mov
dec
pop
jmp
mov
and
inc
sbb
cmps
mov
or
retf
ds
sbb
push
jb
jg
frstor
fwait
out
gs
cwde
push
mov
mov
cmp
aaa
fist
jne
idiv
jge
xor
push
dec
(bad)
leave
xor
xchg
mov
mov
popa
les
xor
dec
clc
adc
loopne
cmp
lds
daa
mov
add
adc
pop
xchg
cs
xor
iret
pop
repnz
jb
and
add
sti
xchg
arpl
jge
jns
push
fistp
sbb
adc
mov
je
mov
and
ret
adc
dec
jno
adc
stos
sbb
enter
stos
pushf
retf
inc
jae
mov
sub
sub
(bad)
and
daa
push
sbb
repz
aaa
push
mov
inc
fidivr
pop
les
push
add
cmps
jge
aam
loope
fs
(bad)
ficom
out
xor
xchg
out
leave
cmp
add
(bad)
add
and
sub
xchg
cvtpi2ps
loop
or
xchg
in
add
cld
xor
xor
(bad)
mov
(bad)
ja
sub
mov
mov
pop
push
call
popf
jl
xor
vmwrite
jmp
lahf
ins
ins
jle
mov
(bad)
fidivr
xor
in
sbb
stc
imul
das
xor
mov
in
call
in
xchg
(bad)
imul
pop
mov
sub
cmp
mov
and
loop
out
movs
push
sub
aam
adc
call
cmp
mov
cmp
mov
ficomp
pop
shl
cmp
mov
cmp
jb
loop
pop
mov
adc
push
fwait
jmp
in
dec
mov
push
add
ror
stos
jbe
or
inc
sar
and
mov
dec
mov
cmp
xor
int
sbb
mov
in
xchg
lds
jecxz
fwait
popf
pop
and
dec
mov
xor
lea
sbb
in
xor
inc
inc
push
mov
dec
sub
pop
cmp
pop
push
xchg
fs
jecxz
jns
mov
(bad)
lods
pop
aam
pop
mov
test
daa
and
mov
xchg
xor
pop
scas
ins
push
mov
out
mul
cmp
inc
adc
je
inc
ins
ret
mov
in
lds
sbb
(bad)
jge
mov
xor
ja
jb
mov
jns
xchg
sbb
sub
idiv
in
xchg
int3
sbb
test
es
and
out
retf
inc
ins
cli
xchg
jle
mov
sub
in
dec
popa
pop
jl
inc
jle
sar
sbb
in
lods
push
outs
inc
xchg
push
cld
jl
stos
stos
fldenv
sub
mov
xor
loopne
or
addr16
addr16
pop
add
push
mov
add
push
lods
or
mov
outs
js
ja
dec
pop
stc
add
fbld
nop
(bad)
fmul
or
rcr
fadd
cwde
xchg
dec
inc
push
das
jecxz
fs
pop
sar
ins
fdivr
repnz
mov
push
gs
iret
dec
(bad)
pop
cmp
pop
lds
cmps
xchg
out
mov
dec
out
mov
and
xor
sbb
(bad)
xchg
dec
mov
sub
retf
mov
sub
rcl
scas
inc
call
in
das
sbb
cmps
fild
cld
rcr
and
retf
arpl
mov
mov
retf
push
ins
and
jae
push
cmp
cmp
push
push
xchg
pusha
pop
inc
or
jl
loopne
aad
inc
or
xchg
mov
retf
xchg
ret
out
iret
nop
ins
aad
mov
inc
stos
dec
xchg
pop
sahf
(bad)
xchg
inc
fidiv
adc
cmp
pop
es
xchg
pop
loope
retf
addr16
xor
int3
dec
ret
sti
ror
dec
test
fs
lods
ffree
add
add
or
xchg
dec
xchg
add
xchg
inc
mov
mov
jecxz
xchg
cmp
push
aad
loop
loopne
(bad)
aad
mov
sub
popa
call
push
sbb
pop
mov
movs
imul
in
push
out
push
sbb
in
int
xchg
jecxz
cwde
repz
add
pop
xchg
fisttp
push
push
push
inc
jg
int3
lock
mov
jae
(bad)
stos
movs
ja
inc
sub
jo
add
push
bound
jge
push
cdq
xchg
inc
test
mov
vpunpcklqdq
jp
pop
mov
div
out
and
imul
ja
xchg
cmp
vcvtdq2pd
sub
xor
inc
ins
jge
inc
es
or
pop
fadd
sub
pop
cs
inc
mov
into
mov
jmp
push
pop
inc
inc
ficom
push
call
push
xchg
test
imul
xchg
jbe
lods
sub
lds
adc
in
sub
pop
in
fs
jge
inc
repz
xlat
into
cli
xchg
(bad)
loop
mov
sti
push
sbb
mov
rol
pop
jmp
inc
movs
stos
inc
ja
xor
scas
pop
fsub
dec
aam
pop
mov
dec
adc
addr16
sar
or
xor
push
aas
and
fsubr
pusha
loop
jbe
stos
sub
pushf
jp
leave
adc
sbb
js
aam
sar
mov
xor
cdq
scas
pusha
pop
xor
movs
push
icebp
xor
dec
and
std
mov
dec
xor
and
push
adc
inc
mov
mov
mov
sbb
fst
mov
sub
push
cmp
iret
lea
mov
aaa
lods
jmp
jge
gs
out
xchg
xchg
xchg
cmps
fiadd
mov
mov
cmps
mov
mov
inc
or
jecxz
popf
mov
sahf
loopne
sahf
sub
sub
call
push
pop
adc
sub
in
cmp
and
imul
scas
xchg
in
mov
sub
loopne
pop
aad
add
cmp
test
pop
enter
sar
rcl
mov
bnd
mov
mov
mov
inc
jmp
ret
dec
cmp
in
dec
lods
push
mov
jno
xchg
into
push
jb
xchg
cs
pop
leave
push
addr16
icebp
js
fnstcw
mov
xchg
gs
in
xlat
fld
scas
outs
add
or
cmp
mov
add
adc
arpl
sbb
fld
out
idiv
jae
iret
xchg
cmp
daa
mul
je
dec
sub
jecxz
xor
int3
pop
cmp
dec
cmp
pop
cmp
and
adc
xchg
popf
jge
inc
es
iret
ja
lock
or
scas
mov
outs
jp
aad
mov
outs
adc
pslld
(bad)
adc
inc
mov
push
push
xor
xor
sbb
jl
pop
mov
test
or
jmp
ja
pushf
cwde
mov
lods
xor
std
pop
xchg
sar
pop
xchg
xor
inc
dec
push
mov
hlt
test
jl
jnp
mov
jmp
popf
mov
inc
push
xchg
adc
std
add
xchg
push
dec
add
xchg
scas
fucomi
push
inc
div
pop
push
fisub
das
push
fsub
enter
sub
pop
jp
stos
push
ror
es
mov
out
cmp
and
ins
inc
test
xchg
dec
popa
cmp
inc
(bad)
fnstenv
pop
jmp
rol
fst
pop
pop
mov
fmul
push
xor
clc
sub
mov
adc
mov
leave
xchg
xchg
outs
dec
js
adc
shl
jb
dec
pop
mov
les
call
cmp
mov
lds
pop
mov
jbe
pop
or
js
push
add
xor
lock
cmp
sub
jns
daa
push
stos
lods
jge
sub
call
iret
mov
cmp
(bad)
mov
jne
lahf
iret
or
xchg
push
jge
ror
sub
mov
or
inc
inc
dec
dec
jmp
dec
pop
repz
and
mov
mov
test
arpl
adc
mov
ds
cmps
imul
sub
scas
add
pop
push
mov
pop
nop
into
mov
sub
and
mov
shr
inc
cs
pushf
add
es
scas
sub
repz
lods
and
fisubr
sub
ds
div
xchg
mov
cmp
pop
jae
pop
mov
rcl
ficomp
lods
adc
cmps
add
sti
in
movs
mov
shr
shl
sub
xchg
scas
cmp
cmps
es
sbb
adc
pop
and
mov
xor
pop
adc
imul
(bad)
jmp
push
mov
ja
mov
lds
(bad)
test
dec
fld
xchg
test
inc
ins
outs
xor
into
sub
pop
outs
jecxz
mov
cmp
sub
bound
cmp
dec
dec
dec
cmps
pop
cmp
mov
mov
cmp
push
sub
outs
dec
dec
ss
jbe
popf
mov
pop
inc
push
cmp
push
pop
repnz
int3
inc
in
add
clc
into
dec
pop
shl
push
fdivr
sbb
xor
mov
jl
or
fimul
mov
sub
adc
int3
adc
sbb
pop
mov
pop
pop
push
enter
inc
outs
addr16
and
mov
xchg
popa
pushf
xlat
sbb
and
ins
js
fisubr
push
mov
xchg
sbb
jecxz
clc
or
xchg
ror
icebp
les
sub
out
adc
outs
pop
mov
jl
push
cmp
mov
or
sub
shl
les
cs
pushf
and
xchg
cdq
fs
pop
mov
ins
pop
loope
sbb
or
inc
sbb
cdq
loope
fistp
enter
jo
mov
in
sbb
std
mov
mov
cmp
pop
daa
daa
push
inc
xlat
push
imul
or
aad
cmps
sahf
rcl
inc
mov
loope
out
fs
xchg
pop
add
xor
mov
cmp
inc
nop
mov
xor
pop
cmps
ss
loopne
call
mov
and
dec
out
out
mov
lahf
pushf
dec
aam
jmp
repz
out
in
jmp
pop
fistp
jnp
xor
addr16
xor
fs
bound
pop
add
cdq
xchg
xchg
jecxz
pop
pop
jg
sub
bound
mov
jns
scas
dec
mov
xor
mov
or
cmp
cmps
rcl
push
fwait
push
stos
(bad)
mov
mov
or
cmp
cmps
pop
and
or
adc
out
jp
movs
mov
mov
fsub
arpl
test
je
lods
(bad)
mov
rol
neg
in
jl
xchg
ins
inc
pop
dec
cmp
aam
popf
sub
out
sub
out
mov
adc
push
sahf
frstor
jecxz
je
leave
out
cdq
add
pop
inc
repz
xchg
outs
or
bound
mov
ds
repz
arpl
out
adc
(bad)
in
push
(bad)
sti
daa
out
xchg
loope
stc
ss
shr
jmp
adc
pop
sbb
scas
icebp
aaa
push
adc
jl
stc
aam
mov
rol
sub
mov
inc
dec
lods
xlat
shl
inc
lds
inc
in
adc
(bad)
stos
ficom
clc
arpl
les
movs
cmp
outs
or
test
dec
cld
inc
dec
adc
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
inc
and
mul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
fstp
dec
cmp
aaa
or
jno
call
mov
ds
popa
fidiv
imul
mov
cmp
inc
pop
jp
imul
mov
dec
adc
sub
mov
xor
sbb
pop
push
rcr
sub
test
repz
push
enter
sbb
mov
mov
xchg
pop
call
pop
js
popa
stc
cmp
stos
fadd
(bad)
in
or
dec
add
int
stc
push
inc
in
jecxz
xchg
mov
enter
out
loopne
loopne
and
push
and
mov
adc
jo
and
push
jns
into
xchg
aam
movs
xor
pop
adc
sub
cmp
test
sbb
loopne
ins
cmc
les
sti
mov
xor
xchg
dec
mov
sahf
xchg
add
imul
dec
les
retf
mov
push
sub
cmp
into
adc
mov
sbb
and
dec
pop
dec
push
and
(bad)
fisttp
test
push
rol
push
jmp
dec
jb
ret
pop
xchg
sbb
jmp
es
pop
cwde
in
jecxz
add
test
mov
test
inc
mov
mov
in
popf
mov
sub
(bad)
mov
push
call
xchg
pop
mov
retf
xchg
mov
(bad)
leave
push
jno
mov
mov
pop
add
mov
xlat
cmp
loopne
out
es
pop
es
fcom
sbb
lea
push
into
test
and
mov
inc
mov
cmc
and
lds
inc
aam
stc
xor
jp
and
push
mov
add
imul
hlt
cmp
push
les
test
sub
ror
iret
(bad)
pop
mov
mov
inc
repz
popf
fs
lods
jmp
lods
jle
mov
mov
pop
inc
jmp
nop
retf
xchg
mov
push
test
dec
bound
mov
pop
pop
push
mov
xlat
test
push
enter
xchg
cmp
lahf
jp
jg
mov
mov
xchg
or
out
int3
pop
hlt
popf
pop
sub
inc
pop
cwde
cmps
call
cmp
pop
icebp
lahf
cmp
ja
sbb
retf
mov
mov
pop
or
gs
into
push
fs
loope
cmp
(bad)
jge
leave
(bad)
sar
out
xchg
out
cs
mov
popa
mov
adc
and
(bad)
jnp
mov
push
sub
aad
fucomp
sbb
(bad)
loopne
push
push
cli
dec
mov
push
jae
sub
jl
mov
cmp
in
mov
jp
xor
mov
push
xor
rcl
sbb
pop
sar
jp
inc
hlt
xor
fwait
mov
int3
push
xor
dec
loop
inc
mov
scas
jo
jle
xlat
or
jno
pop
pop
idiv
sub
inc
jne
test
arpl
mov
mov
push
mov
sbb
push
fs
pop
ret
sub
adc
lods
shl
and
sbb
les
sti
cmc
jno
add
cmp
ror
fst
and
shl
call
aas
outs
nop
sub
aad
add
imul
(bad)
push
inc
dec
xor
mov
retf
xor
sbb
out
xor
int3
push
dec
mov
leave
daa
rcl
cmp
rcr
push
add
clc
cmp
test
mov
pushf
push
pop
and
xor
rep
lock
push
test
fs
pop
inc
mov
mov
dec
mov
mov
jno
inc
mov
jge
fadd
pusha
sub
sbb
add
fsub
ret
aad
in
arpl
ins
adc
test
push
dec
sbb
sar
outs
imul
fidiv
pusha
aas
sub
mov
push
cld
(bad)
in
add
mov
inc
cmc
shr
hlt
test
rcr
cld
nop
pop
mov
(bad)
pop
ret
adc
adc
das
je
sar
cli
pop
shl
popf
in
mov
sub
rcl
or
shl
movs
adc
mov
dec
repnz
mov
(bad)
cs
inc
pop
mov
mov
cwde
mov
xchg
sar
loop
call
fs
in
inc
loope
xchg
jmp
clc
ins
push
xlat
cld
push
jp
xor
push
and
dec
jecxz
or
pusha
iret
lea
pop
fstp
test
hlt
push
test
outs
xor
mov
or
sub
or
adc
xor
and
jno
retf
and
jmp
mov
sbb
test
adc
into
bound
xchg
fld
int
cmp
ficomp
jecxz
fmul
test
push
dec
pushf
add
sbb
dec
xchg
je
lods
xchg
mov
cmp
and
xor
adc
dec
push
in
test
cmp
js
clc
lods
jmp
sahf
mov
sub
jb
adc
or
and
lods
or
out
iret
lock
push
push
pushf
mov
test
push
cmps
or
pushf
and
cdq
add
popa
xor
icebp
loope
jmp
add
scas
sub
mov
push
outs
shl
test
mov
mov
pop
in
out
mov
xchg
imul
dec
leave
adc
mov
je
fcomp
push
dec
icebp
or
cs
jmp
xor
mov
sar
icebp
xchg
lahf
xor
into
or
dec
push
test
cmps
xlat
push
and
call
stc
push
lahf
imul
cmp
jl
js
adc
jg
cmps
fs
bound
in
out
and
pop
lock
(bad)
(bad)
enter
push
push
push
cwde
jbe
out
xchg
lock
mov
loope
jle
fwait
or
mov
xor
xchg
stos
fs
jge
shl
mov
cmp
and
dec
and
push
inc
sub
xlat
std
xchg
pop
nop
adc
mov
xchg
out
dec
sub
mov
and
loop
mov
aas
xchg
in
movs
ins
out
cmp
jmp
mov
mov
(bad)
rcr
ins
xchg
sub
pop
xor
cld
lods
ret
popf
jns
shl
mov
lea
xlat
xchg
xchg
push
mov
aam
fcmovne
jb
pop
retf
jg
inc
cmp
xor
mov
(bad)
dec
fild
adc
test
stc
ins
mov
fs
clts
sub
retf
enter
inc
fadd
call
popf
mov
std
mov
arpl
dec
mov
sbb
fstp
or
test
and
mov
mov
rcl
sub
leave
push
int3
les
outs
xor
cmp
jp
pop
mov
xchg
imul
call
push
mov
jge
call
dec
dec
lods
mov
mov
push
xor
jle
mov
out
and
cdq
lods
mov
jmp
aas
inc
mov
xchg
ret
jge
sbb
xor
push
cs
and
jmp
add
fwait
or
aad
arpl
xor
fmul
adc
pop
popf
mov
mov
cmp
in
js
push
xor
jl
shl
aam
push
cmps
mov
jbe
push
std
pop
cwde
fnstcw
dec
repz
or
jbe
xchg
lds
gs
mov
add
and
hlt
icebp
fmul
cmp
ja
or
jmp
(bad)
jp
cmp
(bad)
movs
out
mov
cmps
or
mov
cmp
xchg
aad
scas
xchg
pop
and
addr16
ret
(bad)
push
cmp
mov
xchg
aad
push
mov
sbb
inc
fadd
das
and
mov
int3
movs
pop
inc
stos
pop
push
in
sbb
fdiv
into
mov
xlat
rol
push
call
mov
xchg
shl
xor
mov
aas
test
sar
jae
sub
jp
mov
mov
mov
pop
(bad)
loop
sbb
mov
into
fild
inc
ss
dec
popf
ror
jb
(bad)
sub
cdq
out
mul
ror
sub
(bad)
je
shl
mov
out
cmp
outs
clc
push
out
not
mov
xor
aad
in
cmc
sub
push
call
jo
in
mov
fdivr
mov
(bad)
not
dec
xlat
add
mov
dec
test
jmp
cwde
retf
call
mov
pushf
push
cmps
mov
push
aam
test
rcr
sbb
mov
mov
inc
mov
hlt
jmp
mov
pop
xchg
lock
in
mov
xchg
ins
jno
ins
cs
dec
push
ds
xor
or
and
out
or
stos
shl
imul
mov
aas
int
retf
rcl
and
retf
pop
call
in
xlat
cmp
into
pop
cmp
pop
cmp
and
ins
fild
jns
push
mov
or
retf
aas
mov
hlt
pusha
sahf
ins
ds
push
dec
push
loop
test
xor
ffreep
xchg
sub
xchg
and
sar
inc
inc
adc
xor
mov
add
daa
movs
stc
jmp
fmul
int3
arpl
popf
push
fiadd
jecxz
in
scas
ins
stc
repnz
cmp
jae
fdivr
mov
inc
pusha
jg
inc
adc
les
es
sub
pop
loope
sahf
repnz
xor
and
test
or
adc
cmp
je
loop
pushf
and
shufps
dec
popf
xlat
mov
push
fistp
mov
push
sahf
lods
adc
and
cmps
cmp
jp
(bad)
cmps
xor
pusha
popf
inc
cmp
stos
jbe
mov
jmp
int3
movs
pop
jo
clc
cmp
sti
into
jmp
or
cmp
push
test
test
pop
jg
and
(bad)
les
jge
arpl
cmp
jbe
jg
push
imul
cmp
in
mov
and
into
mov
(bad)
outs
lea
test
syscall
xchg
repnz
mov
leave
dec
cmp
pop
or
sub
mov
jae
aas
sbb
(bad)
mov
pop
loop
or
das
adc
and
and
pop
and
cmp
arpl
imul
mov
adc
lea
pop
or
jmp
pop
inc
loope
lea
ds
adc
(bad)
mov
dec
push
add
arpl
shl
aaa
or
xchg
jmp
call
mov
test
mov
cdq
add
jge
mov
repz
cli
div
out
sbb
dec
inc
mov
mov
jno
mov
and
mul
sbb
arpl
ret
aam
out
sbb
and
mov
mov
xchg
xchg
(bad)
ficomp
data16
and
fucomi
loopne
xor
xchg
mul
or
lahf
mov
int3
dec
aaa
(bad)
retf
mov
pop
xchg
pop
stos
add
aam
inc
out
mov
dec
xor
test
(bad)
cmp
iret
mov
pop
xchg
(bad)
hlt
retf
cmp
mov
frstor
add
fimul
push
rcr
ret
outs
mov
or
sub
fstp
(bad)
cld
dec
or
mov
xor
pop
xchg
add
movs
fst
(bad)
fidiv
nop
push
outs
or
cmc
das
add
ror
cwde
aam
mov
stos
fsubr
test
xchg
lock
dec
and
aam
or
dec
push
retf
mov
adc
int3
gs
cmps
and
lods
push
cmp
stc
add
rep
jbe
jne
add
dec
sbb
fadd
shl
mov
(bad)
in
pop
ficom
push
ss
jl
das
mov
(bad)
lea
push
nop
leave
xchg
xchg
cmp
push
push
pop
xchg
or
mov
mov
add
pop
fisttp
sti
paddusw
cmovne
sbb
mov
adc
xor
stos
stos
outs
jae
cmp
jnp
sti
push
mov
test
adc
mov
inc
push
cli
mov
pushf
inc
(bad)
clc
mov
add
lea
pop
sbb
in
xchg
mov
push
sub
jle
or
loope
aam
fwait
das
jl
out
inc
es
lods
repz
ins
lods
sahf
mov
jl
mov
loopne
ins
fistp
push
or
mov
hlt
push
xchg
int3
clc
scas
lock
leave
shl
test
jmp
pop
nop
mov
sub
test
pop
sub
call
in
mov
mov
rcl
xor
cmp
call
sub
xchg
xchg
fs
pop
jge
test
or
cmc
lock
or
mov
mov
std
or
mov
or
push
hlt
movs
sub
in
int3
mov
aas
cmp
sub
leave
xchg
mov
or
fcomip
or
jb
in
imul
loopne
and
out
mov
jg
sbb
or
scas
jbe
push
pop
and
jge
inc
enter
iret
jo
xor
rcl
mov
mov
(bad)
jno
push
push
dec
and
loop
ds
sbb
lds
mov
dec
movs
pop
(bad)
dec
xchg
aas
xchg
jg
mov
bound
out
(bad)
stos
pop
test
imul
xor
jl
leave
dec
adc
jmp
sahf
add
mov
mov
add
sub
stc
movs
out
pop
or
test
push
(bad)
enter
js
cwde
mov
push
cmp
pop
mov
inc
pusha
ins
clc
pop
cmp
add
lods
in
push
fsubr
fstp
shr
ins
call
sbb
cmc
push
cmp
out
aad
mov
or
pop
pop
rcr
daa
jp
add
mov
mov
clc
in
inc
xor
mov
push
and
data16
icebp
dec
pop
inc
ins
rol
fcom
imul
or
call
ds
les
cmp
add
lea
jp
stc
(bad)
out
inc
mov
push
stos
xchg
aam
or
retf
lea
ds
push
push
xor
xor
mov
scas
push
adc
loopne
outs
pushf
jns
mov
and
dec
pop
shr
ret
mov
adc
sub
or
and
ins
sbb
cmps
adc
mov
sub
mov
xor
cmp
scas
pop
jmp
popa
xlat
out
inc
sub
push
loope
std
mov
push
push
cmp
fmul
sti
int3
rep
out
push
retf
jecxz
(bad)
and
mov
xor
jecxz
mov
pop
cmp
stos
test
shl
and
push
add
dec
xor
popf
or
fld
inc
pop
sub
popa
fwait
test
loope
xchg
and
cmp
xor
add
jle
mov
push
aas
jg
cwde
test
pop
mov
pop
pop
mov
inc
enter
jae
cmps
pop
pop
icebp
mov
int
push
(bad)
sub
pop
fisub
popf
std
cmp
jp
push
sub
aad
and
(bad)
or
(bad)
cmp
int
xor
iret
inc
add
adc
popf
cmp
sbb
and
push
popf
mov
xor
xor
push
xor
cmp
fwait
mov
mov
daa
daa
and
mov
cmps
nop
pop
shl
mov
xchg
cld
pop
pop
inc
or
pop
neg
ins
dec
mov
out
mov
and
add
fidiv
sbb
aas
adc
movs
hlt
jbe
add
popf
mov
lods
cli
movs
mov
scas
mov
leave
jl
out
(bad)
mov
pop
push
dec
or
in
int
xchg
jl
jge
std
push
scas
pop
in
loopne
ja
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
mov
jmp
test
daa
cli
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
inc
fmul
mov
lods
cmc
imul
ins
xlat
push
scas
in
mov
in
gs
retf
ss
ins
repz
retf
mul
cmp
mov
int
arpl
call
sub
add
push
ret
je
scas
sbb
push
dec
mov
push
and
or
xor
ins
push
cld
sbb
mov
and
gs
scas
sahf
mov
cmp
std
cld
imul
pop
sub
rol
mov
jmp
mov
aad
dec
cmps
std
movs
cli
inc
rcr
push
fnstenv
add
mov
stos
inc
ror
repnz
int
adc
jae
mov
mov
in
clc
mov
jns
mov
outs
out
inc
aas
out
xchg
push
ret
jbe
les
sbb
add
movs
int
pop
sbb
push
sahf
(bad)
mov
jg
mov
cld
in
xchg
(bad)
jb
popa
in
sti
imul
js
cmc
pop
(bad)
ror
adc
ss
mov
pop
xor
movs
jno
mov
dec
call
fisub
lds
push
dec
add
cld
push
dec
push
aam
cmps
sbb
pop
sub
test
push
jp
adc
mov
cld
mov
mov
arpl
loope
sahf
shr
pop
sbb
aad
bound
(bad)
pop
xor
dec
xchg
shl
(bad)
xrelease
stos
repz
lahf
lock
sub
data16
or
jns
(bad)
and
shl
fldenv
test
jae
push
outs
in
and
repnz
inc
out
outs
cmp
push
in
dec
arpl
js
jne
pusha
add
push
jp
push
push
push
int
ja
push
cmc
jecxz
xchg
mov
or
int
fxch
rcr
call
push
push
adc
xchg
and
pop
or
daa
data16
fnstenv
xchg
push
push
jmp
mov
clc
pop
retf
push
jbe
mov
pop
pop
imul
daa
iret
outs
ds
add
cdq
lods
nop
xchg
jae
scas
int3
cmp
leave
out
lds
xor
ja
mov
xor
rol
cmp
int3
mov
push
fstp
mov
imul
clc
xor
movs
push
movs
stc
cli
ret
mov
dec
dec
je
cmc
in
jo
jae
pop
pop
arpl
scas
jnp
test
inc
fisub
repnz
fisttp
pop
lea
ins
lahf
and
sbb
(bad)
in
out
test
ja
aad
(bad)
push
call
adc
outs
or
mov
dec
mov
sub
lea
fndisi(8087
push
into
loope
call
inc
call
lock
mov
add
ret
pop
(bad)
xor
scas
test
mov
ds
pop
add
sti
inc
sbb
jmp
xchg
or
mov
test
inc
mov
cmps
ret
scas
xchg
mov
cmp
loope
pop
ror
xor
xlat
int3
out
imul
das
mov
test
xor
pushf
imul
add
jg
test
lock
inc
(bad)
push
test
data16
mov
xor
data16
jns
sbb
mov
aaa
cmps
pushf
je
jge
cmp
call
clc
push
sahf
push
call
jae
ins
dec
rcl
push
xchg
xor
in
sub
inc
sbb
addr16
addr16
gs
and
xor
ins
aaa
sub
dec
sub
cmp
out
lea
lahf
xchg
push
cmp
addr16
add
popf
retf
push
call
push
inc
jl
ins
jo
sbb
popa
mov
mov
xor
mov
movs
iret
lods
jbe
popa
lock
push
pushf
push
add
retf
add
or
push
dec
cmp
lods
data16
(bad)
rol
xchg
ror
mov
cld
outs
inc
movs
and
out
inc
arpl
dec
(bad)
dec
outs
mov
xchg
pop
in
ror
push
jne
mov
mov
push
cmp
jns
xor
or
out
mov
fs
fbstp
cmp
je
xor
inc
and
scas
push
push
test
icebp
mov
scas
aam
dec
hlt
cmp
lods
dec
cs
jne
popa
jg
mov
cmp
adc
imul
leave
and
test
xor
add
popa
out
mov
jae
shr
jbe
fisttp
pop
dec
or
lea
cmp
call
adc
xor
sbb
ins
mov
and
sub
mul
and
add
mov
sbb
retf
cmp
push
cli
jns
sahf
fdivr
in
sub
mov
sub
cmp
mov
mov
xchg
push
popa
cmp
rol
out
mov
neg
xchg
jle
push
sub
dec
dec
mov
popf
mov
imul
jns
sbb
ret
fiadd
or
push
cmc
jae
mov
neg
(bad)
or
push
xchg
outs
ret
test
(bad)
cmc
jg
push
adc
mov
push
xchg
into
stc
shl
jb
adc
cwde
jp
inc
lods
(bad)
jmp
ret
and
xchg
mov
inc
hlt
push
adc
push
repnz
ret
imul
mov
xor
hlt
lahf
add
pxor
push
ja
ja
(bad)
rcl
outs
loope
mov
dec
and
add
push
jmp
test
inc
loop
jg
xchg
mov
pop
and
dec
out
cmp
pusha
movs
smsw
outs
adc
pop
shl
rcr
mov
mov
cmp
cmps
imul
arpl
lods
mov
mov
pop
movs
out
das
in
std
mov
call
es
push
jmp
out
inc
jns
nop
pop
mov
scas
push
into
pushf
addr16
adc
retf
jmp
push
cmp
cmp
repnz
sahf
lds
fnstcw
ret
jle
fwait
xor
cmp
cld
pushf
mov
repz
test
(bad)
mov
fstp
add
xchg
loopne
sub
ins
outs
inc
xchg
mov
sub
aaa
cmp
sub
outs
fs
xchg
cmp
cs
cmp
cs
clc
jmp
sbb
outs
sub
lods
mov
cli
jbe
dec
in
fucom
popa
jno
mov
xlat
mov
and
(bad)
sbb
pop
dec
mov
imul
xchg
test
add
out
inc
add
dec
mov
sub
xchg
cdq
sub
inc
pavgb
(bad)
lock
std
jecxz
push
jo
mov
sar
call
cmp
or
xor
imul
xchg
(bad)
retf
or
scas
(bad)
and
mov
pop
pop
xor
scas
ins
push
mov
mov
jno
adc
dec
les
sub
call
push
sbb
cmc
movs
mov
pop
xlat
stos
ins
into
sub
in
dec
aad
push
push
push
push
adc
and
add
fmul
mov
jl
(bad)
cmp
stos
ins
push
rcr
dec
jae
pop
push
mov
ret
inc
jg
repnz
iret
repz
push
(bad)
and
out
stos
mov
inc
xchg
(bad)
cs
cmps
push
dec
inc
jmp
enter
and
dec
push
pop
loop
aad
pop
jg
js
cmc
mov
or
mov
fcomi
int
es
sbb
pop
cmc
in
inc
movs
pop
xchg
data16
jne
jo
or
xchg
popf
mov
pop
jnp
jns
mov
add
test
or
cs
lds
sub
lods
mov
mov
call
jns
sbb
arpl
dec
ret
ins
imul
and
repnz
mov
sub
pushf
(bad)
dec
cdq
clc
inc
cmps
lahf
add
ins
call
fcom
call
lea
jl
add
xor
inc
(bad)
pop
xchg
test
and
popa
sub
jmp
pop
xlat
add
fs
push
(bad)
xor
mov
adc
call
iret
jnp
ds
pop
lahf
scas
movs
shl
push
add
outs
test
or
stc
jmp
push
imul
stos
pop
(bad)
loop
call
shr
sub
data16
sub
push
repnz
jne
inc
dec
mov
xor
mov
xchg
out
(bad)
or
mov
out
ins
int
adc
out
das
dec
inc
inc
cmp
cmp
mov
imul
call
aam
adc
push
pop
pop
xchg
sbb
mov
pop
repz
mov
mov
mov
and
xchg
or
lods
xor
mov
sub
add
mov
das
xchg
push
test
mov
pushf
loopne
icebp
(bad)
hlt
add
dec
jne
sbb
stos
push
xor
pop
fdiv
mov
add
test
int
js
sub
les
rcr
data16
jmp
pop
movs
shl
jecxz
xor
inc
ret
inc
push
mov
test
or
or
inc
mov
and
pop
and
xor
shr
inc
ret
and
imul
test
popa
pop
sahf
ror
dec
dec
dec
pop
data16
fbld
aas
sbb
enter
sub
retf
jnp
mov
jle
or
sbb
xor
cli
xchg
ret
arpl
das
ss
cs
mov
out
stc
pop
jp
sbb
mov
sub
iret
xchg
xacquire
xchg
into
pop
stc
cmc
or
inc
sub
cmps
jmp
pop
repnz
jge
sbb
les
sbb
inc
test
xchg
sbb
sub
out
xor
xchg
dec
aad
mov
test
clc
push
rcl
adc
lds
xchg
in
shl
sahf
mov
ret
mov
iret
into
dec
jb
in
or
or
cdq
gs
aaa
sub
call
fucomp
sbb
add
outs
retf
(bad)
jmp
cmp
das
push
adc
sub
not
push
bound
xor
stos
push
push
sbb
icebp
cmp
push
ins
and
inc
daa
clc
icebp
mov
shl
jne
test
scas
ins
push
jge
dec
jmp
popf
loopne
xchg
cli
pop
mov
cmp
or
jmp
repz
or
mov
(bad)
pop
rol
pop
add
jp
les
pop
jmp
in
inc
xlat
mov
cs
jmp
add
push
cmps
pop
outs
mov
dec
cmp
jno
(bad)
in
das
pop
mov
dec
repnz
jecxz
or
push
mov
mov
adc
dec
xchg
imul
mul
jg
pop
push
xchg
fistp
dec
call
adc
and
lahf
loope
dec
pop
inc
pop
adc
js
sti
fisubr
stos
inc
jp
fidivr
adc
jp
cmps
pop
inc
xchg
jo
and
scas
das
sbb
push
cmc
stos
inc
or
jne
scas
js
push
out
xchg
and
pop
bound
pop
movs
aam
fst
mov
psubw
dec
and
lods
in
xchg
dec
add
pop
xchg
dec
not
mov
inc
movs
fnstsw
inc
mov
mov
sub
scas
arpl
cmps
sub
dec
or
add
imul
out
sub
loop
fsubr
dec
test
mov
mov
movs
jp
leave
push
aad
and
jecxz
nop
aas
das
mov
mov
nop
inc
daa
ficom
les
cmp
ja
and
(bad)
pop
pop
add
push
push
mov
xchg
xchg
je
imul
mov
jnp
jnp
inc
pop
in
xor
outs
nop
and
shl
dec
inc
pop
push
mov
fst
rol
retf
bound
xchg
adc
rcr
cdq
pop
cmp
push
test
jg
rcl
enter
setl
loope
adc
mov
jg
fld1
ins
xchg
mov
push
mov
add
mov
aam
mov
cmp
movs
mov
mov
imul
scas
cmp
push
pushf
xchg
movs
inc
mov
cmps
or
(bad)
or
cld
fwait
ret
xor
mov
jmp
push
jecxz
test
and
push
ja
push
push
pop
push
test
jns
sub
mov
cmp
(bad)
bound
scas
xchg
mov
xchg
sbb
add
adc
ins
mov
retf
inc
int
push
in
lds
cmp
in
pop
mov
mov
popf
aas
ins
sbb
out
ds
mov
pop
jnp
out
xchg
ins
out
push
and
sub
push
iret
jo
lods
sub
lock
aam
shr
xor
jnp
xor
(bad)
cmp
int3
xor
adc
arpl
aam
ins
mov
cmc
fdivr
cli
push
ror
or
retf
cmp
add
jp
je
add
jecxz
adc
mov
and
mov
sub
daa
jp
xor
fst
push
push
mov
(bad)
in
in
daa
mov
retf
int3
jmp
std
pop
mov
or
adc
outs
add
dec
out
dec
inc
or
aad
rcr
aas
cld
and
jp
hlt
jmp
in
xchg
iret
cmp
stos
loopne
(bad)
lods
cmp
dec
push
out
mov
xor
add
cmp
(bad)
lds
sbb
ret
adc
sbb
and
test
(bad)
and
cmc
mov
aad
and
push
pusha
enter
dec
mov
mov
js
icebp
and
jmp
jmp
outs
xchg
nop
(bad)
hlt
sub
fstp
in
in
push
cs
daa
and
xchg
pop
(bad)
mov
mov
inc
movs
popa
out
je
mov
push
aaa
cmp
jl
js
adc
bound
dec
jg
add
std
cmp
and
aam
imul
ret
xchg
jnp
cmp
ins
mov
les
ins
mov
mov
push
xchg
lods
test
sub
test
movs
rol
sahf
sahf
ss
xchg
mov
(bad)
mov
ins
test
or
cmp
cdq
add
and
fwait
mov
adc
adc
xchg
xor
jge
sahf
dec
and
fidivr
daa
shl
jp
dec
pop
add
inc
in
fisttp
pop
outs
or
out
sub
test
or
fucomi
sub
in
pop
jbe
sub
inc
leave
mov
out
mov
popa
lock
dec
pop
cdq
cmps
push
dec
hlt
inc
mov
(bad)
xchg
lods
push
pop
adc
mov
retf
pop
xchg
adc
jmp
fcmovnb
sub
mov
loopne
and
xor
aas
sbb
pop
mov
mov
ss
add
inc
jo
mov
out
(bad)
mov
jge
jmp
or
mov
push
fbld
mov
cld
popa
adc
pop
aad
rol
xlat
out
test
sub
xchg
bound
dec
ret
cmp
jmp
push
adc
das
in
push
xchg
xor
add
jp
lock
hlt
hlt
arpl
adc
sub
daa
push
sbb
fdiv
push
push
pop
ins
js
or
mov
lds
push
and
cdq
jns
js
movs
sti
cli
dec
push
inc
(bad)
mov
loopne
fs
push
aaa
xor
push
push
add
inc
cmp
mov
stos
inc
and
dec
(bad)
out
test
pop
loop
mov
push
test
repnz
retf
retf
(bad)
add
pushf
(bad)
mov
push
pop
push
repnz
stc
scas
cld
cmps
cmp
enter
bound
pop
add
and
call
rol
mov
addr16
ret
lahf
jbe
in
inc
in
adc
jae
js
sbb
adc
pop
(bad)
stc
out
jg
stc
out
jg
pop
add
push
fsub
mov
mov
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
es
or
(bad)
jmp
mov
sar
popf
scas
imul
imul
out
add
imul
adc
mov
cld
(bad)
stc
sahf
pop
movs
pop
xchg
nop
push
call
cmp
pop
mov
xor
sahf
sbb
mov
sbb
jns
cmp
push
and
retf
dec
xor
into
push
pushf
repz
stos
push
mov
loope
dec
call
test
mov
fsub
xchg
shr
jmp
aad
jae
sbb
sbb
gs
mov
push
and
mov
mov
gs
sub
loopne
int3
icebp
fs
cdq
(bad)
jecxz
movs
in
shl
add
jle
aas
data16
(bad)
jle
stos
xor
(bad)
dec
xor
cdq
in
(bad)
mov
fdivr
mov
adc
das
sbb
(bad)
jl
fsub
cdq
jne
clc
fdivrp
or
add
or
jmp
adc
aam
cld
and
iret
je
cdq
and
mov
call
or
(bad)
dec
push
push
mov
aam
bound
inc
out
adc
arpl
jp
retf
or
bound
repz
cmp
inc
outs
xor
sub
adc
mov
push
(bad)
aad
mov
jns
xchg
push
pop
adc
sbb
push
int
and
mov
sub
shl
cmp
mov
psubw
mov
pop
hlt
out
sahf
shl
sbb
mov
xlat
sahf
cli
ficom
sbb
cmp
callw
test
loopne
pushf
(bad)
sub
pop
xor
mov
les
adc
std
imul
mov
imul
cmps
dec
or
add
mov
movs
mov
mov
movs
aas
xchg
pop
js
and
jae
clc
and
xchg
sub
jns
pop
mov
mov
jg
out
inc
(bad)
cmps
adc
or
sub
pushf
mov
jecxz
int
lods
(bad)
sub
push
scas
adc
pop
add
and
and
fadd
in
xchg
(bad)
std
fadd
mov
shl
and
sti
stos
dec
push
xchg
push
test
mov
call
adc
(bad)
repz
icebp
push
cmp
xor
jge
je
mov
scas
dec
mov
in
or
in
jae
mov
mov
dec
mov
cmp
clc
pushf
push
fnstsw
xchg
fs
mov
jo
jl
and
push
jmp
and
cmp
dec
les
lods
mov
cld
pusha
and
push
into
lods
adc
dec
push
dec
xchg
es
popf
dec
inc
sbb
xor
push
xor
outs
push
xor
inc
nop
or
sbb
jecxz
lods
push
outs
push
jne
mov
jae
mov
xor
jne
dec
hlt
(bad)
inc
inc
mov
arpl
inc
retf
jno
std
out
push
inc
not
test
dec
scas
xchg
fwait
mov
pop
jae
dec
jb
push
(bad)
aam
and
dec
cmp
ret
call
jmp
jmp
in
mov
in
pop
jecxz
nop
es
fldcw
out
sbb
sub
outs
out
lods
(bad)
movs
loop
in
add
cli
add
iret
ds
(bad)
aas
push
xor
fcom
leave
pusha
cmp
inc
in
and
out
lahf
les
push
xchg
push
and
adc
shl
std
bound
xor
pop
mov
cmp
push
sub
call
mov
xchg
inc
and
and
or
jmp
sbb
loopne
bound
mov
test
push
test
dec
pop
cmc
cmp
xlat
test
adc
inc
or
xor
mov
ret
mov
outs
mov
out
pushf
int
shr
iret
ja
push
loop
enter
push
jmp
sbb
jne
jg
adc
cwde
push
sbb
mov
fadd
xchg
in
jo
sbb
add
vshufps
imul
rol
sbb
sbb
es
into
out
outs
pop
div
mov
jl
in
adc
mov
scas
push
cmps
xor
out
fdivr
or
add
push
jle
mov
pop
(bad)
jge
xchg
sbb
xchg
xchg
btr
mov
scas
mov
jns
push
cmp
jbe
(bad)
fst
or
out
aaa
test
jmp
push
inc
adc
push
xlat
pop
inc
add
int3
mov
inc
jl
mov
sbb
stos
sub
or
push
test
jmp
fnstenv
or
sub
imul
push
test
(bad)
push
aas
rol
ins
mov
or
jns
cld
adc
and
lods
inc
pop
loop
aam
leave
popa
adc
data16
movs
jg
cmps
add
dec
sub
mov
dec
aad
sbb
das
xor
lods
outs
jns
inc
cmp
(bad)
lods
enter
cmps
sub
jmp
or
adc
into
add
pop
xor
jge
inc
pop
test
jb
adc
dec
movs
and
inc
mov
sbb
cmc
fwait
mov
mov
mov
pop
lea
in
or
leave
hlt
aas
enter
mov
je
adc
adc
test
jl
mov
std
add
xor
mov
adc
int3
sub
(bad)
data16
not
sbb
mov
repnz
icebp
add
mov
adc
jne
dec
repnz
xchg
clc
dec
sbb
sub
cmp
int3
dec
push
cs
jmp
aad
ins
push
shl
in
loopne
mov
or
ret
pushf
inc
movs
mov
xchg
mov
cmp
into
fcmove
clc
ret
push
inc
jl
cmp
(bad)
push
dec
cmp
lock
bound
movs
das
and
shl
push
ds
or
fiadd
ret
sub
mov
(bad)
clc
dec
xor
pop
jecxz
imul
pop
mov
mov
js
mov
jae
mov
and
(bad)
in
dec
jmp
mov
data16
into
cmp
push
mov
test
push
shl
test
rcr
ds
test
jb
add
mov
outs
scas
inc
pop
jp
dec
cmp
test
push
clc
movs
mov
jmp
int
dec
mov
mov
pop
pop
jl
pop
jmp
inc
push
sbb
and
jmp
mov
and
pop
adc
stc
cld
add
mov
pop
or
jmp
push
in
retf
retf
and
aad
(bad)
inc
xchg
je
cwde
cmp
shr
mov
push
xor
mov
xchg
in
lods
call
pop
pop
movs
adc
mov
adc
mov
mov
shl
movs
push
push
mov
or
imul
popf
outs
cmp
fwait
scas
or
outs
mov
and
add
push
pop
outs
pop
aam
add
inc
mov
push
shld
add
and
int
lahf
add
xor
in
and
or
push
ror
xor
arpl
test
jp
sub
mov
fistp
mov
xor
in
sub
inc
sub
mov
fild
and
retf
cmp
ja
test
(bad)
mov
mov
or
fwait
retf
add
popf
jno
mov
and
xchg
inc
out
daa
sub
push
cmp
das
leave
loope
cmp
ret
mov
fsubr
inc
push
enter
lahf
icebp
jle
call
mov
cwde
scas
jmp
cmc
pop
dec
ins
ins
js
jg
inc
xchg
test
jge
das
std
xchg
in
retf
lock
add
dec
adc
mov
outs
adc
mov
(bad)
mov
adc
mov
test
inc
out
or
sbb
add
pop
add
loope
mov
jg
aas
add
pop
and
rcr
mov
fwait
cmp
lahf
jmp
pop
mov
xor
cmps
xor
add
or
xlat
inc
loopne
cli
pop
mov
mov
pusha
pop
loopne
pop
inc
inc
xor
pop
sbb
std
shr
in
and
push
xchg
bound
sub
inc
jmp
mov
dec
mov
movs
pop
mov
push
xchg
jae
mov
out
das
xchg
test
in
add
neg
jae
lds
lahf
std
dec
sub
push
sub
imul
addr16
popa
jge
mov
mov
add
adc
fisubr
mov
adc
inc
jecxz
fs
cli
jo
jl
lods
or
sti
and
retf
cmp
cmp
mov
mov
out
(bad)
out
outs
(bad)
ds
xor
or
xor
mov
jmp
out
mov
push
daa
mov
sbb
adc
jmp
pop
cwde
imul
push
sub
neg
jnp
test
add
mul
jmp
and
jmp
and
mov
sub
mov
xchg
fadd
retf
add
test
cli
addr16
xor
in
es
(bad)
pop
cmc
inc
(bad)
mov
punpcklwd
out
clc
jmp
mov
push
gs
mov
jmp
aad
cmp
test
iret
push
dec
mov
add
and
pop
into
mov
pop
(bad)
sbb
icebp
inc
scas
push
cli
mov
data16
sub
mov
sub
movs
lods
test
cmp
cmc
cmp
jecxz
pop
mov
push
cmp
pop
fist
push
push
into
xchg
dec
mov
mov
push
xor
icebp
push
mov
ins
fbld
retf
cwde
les
repz
inc
pop
in
(bad)
inc
cdq
mov
pop
cmp
lahf
hlt
in
minps
jg
cs
cmps
cli
and
or
mov
jg
mov
jmp
xor
in
push
xchg
cli
jl
loop
xor
xchg
adc
retf
mov
sar
shr
pop
xchg
jo
repnz
cdq
ins
mov
retf
stos
inc
push
repz
sbb
pop
inc
pop
call
dec
adc
in
inc
std
xor
aaa
add
mov
jns
cmp
xchg
call
sub
push
imul
out
lock
mov
stc
and
leave
xor
sar
fdivrp
outs
aas
(bad)
dec
mov
mov
sti
daa
ss
mov
cmc
sub
jnp
mov
pop
test
push
jne
push
xor
fisubr
cmc
mov
dec
xchg
or
in
aam
or
cmp
adc
std
xchg
js
retf
push
adc
push
and
jmp
mov
call
aad
or
adc
pop
jne
dec
arpl
push
xchg
xchg
sub
pop
(bad)
(bad)
xchg
lahf
stos
mov
sbb
inc
mov
(bad)
sbb
xor
dec
xor
lods
cmc
mov
pop
xor
or
mov
(bad)
xchg
shr
(bad)
and
pop
cld
aam
jge
dec
jmp
in
(bad)
imul
inc
mov
inc
cdq
mov
daa
lea
mov
pop
mov
leave
addr16
pushf
mov
fwait
bound
mov
mov
int3
and
lahf
jecxz
adc
push
pop
pop
mov
mov
(bad)
gs
pop
fistp
adc
jns
xlat
lods
or
mov
(bad)
fidivr
cs
enter
and
inc
add
into
int
ficom
fld
adc
out
cld
lods
pop
loop
test
or
fnstsw
jno
mov
sub
cs
lahf
inc
xor
(bad)
packsswb
sub
sub
and
push
jg
test
dec
arpl
inc
mov
fnstcw
xchg
jmp
std
addr16
jle
fnsave
xor
inc
call
mov
in
out
jp
fst
pop
push
loop
dec
das
sti
in
stc
cmp
loopne
pop
out
adc
out
sar
fst
pop
in
in
movs
(bad)
cwde
sahf
data16
jecxz
jno
movs
sub
push
mov
faddp
xchg
into
mov
fcomp
aas
and
xor
mov
xchg
xchg
ret
fisubr
test
movs
xor
rol
add
mov
gs
ret
xchg
inc
cs
lahf
mov
(bad)
daa
and
add
(bad)
retf
cwde
cwde
das
xchg
in
dec
dec
mov
mov
mov
cwde
xchg
out
iret
or
imul
jae
es
sub
pop
push
push
pop
ins
int3
mov
xor
cmps
out
inc
mov
push
jg
push
and
shr
pop
mov
adc
xor
repz
div
imul
aad
pop
in
rol
enter
inc
mov
retf
mov
inc
pop
and
add
fucomip
dec
mul
lds
rcr
add
stc
scas
fwait
pop
dec
adc
bound
loope
xchg
rcr
mov
xchg
and
and
sahf
(bad)
daa
mov
popa
push
xchg
imul
inc
sbb
(bad)
cs
enter
movs
test
mov
inc
rol
hlt
mov
mov
jmp
cs
movs
cdq
ror
mov
mov
mov
loope
mov
loopne
xor
retf
retf
mov
or
sar
fsubr
and
or
xchg
out
fistp
mov
cmc
scas
or
fs
fs
and
mov
xor
jnp
cmp
(bad)
pop
cmp
addr16
pop
(bad)
pop
adc
jmp
xor
pop
fldcw
or
retf
in
cdq
int
jnp
mov
mov
mov
add
loope
stc
sub
push
pop
ss
imul
inc
aas
daa
pop
jmp
(bad)
push
lock
lock
cmp
mov
inc
loopne
in
jae
stos
pop
lock
addr16
or
retf
or
inc
push
int3
adc
fwait
adc
arpl
jl
dec
xor
dec
es
xor
lea
call
imul
dec
fld
mov
call
lods
loope
idiv
test
out
or
mov
add
mov
out
test
xlat
mov
mov
popf
xchg
(bad)
pop
test
imul
in
or
pop
mov
aas
xchg
lods
mov
les
sub
mov
xchg
and
push
add
jp
out
jecxz
add
sbb
ret
add
adc
outs
jno
arpl
xor
cmp
mov
movs
lahf
jne
aam
push
add
sub
mul
jmp
(bad)
pop
call
mov
pop
in
movs
mov
shl
sub
ds
xchg
add
mov
(bad)
repnz
jb
icebp
push
(bad)
popa
popf
push
sbb
call
sar
in
pop
frstor
mov
adc
outs
loopne
mov
xor
mov
mov
sub
fsub
jae
sbb
stos
test
addr16
pusha
pop
test
mov
mov
cmp
jecxz
loop
out
push
movs
fidiv
movs
in
int
xor
and
cld
xor
gs
adc
jge
add
cmps
outs
sub
sub
cwde
push
add
scas
stc
pop
lods
loop
push
shl
data16
add
stos
ja
mov
cmp
push
inc
inc
pop
xchg
clc
mov
imul
out
pop
stos
jae
js
push
(bad)
stc
mov
ror
and
sbb
das
scas
retf
pop
inc
enter
push
pop
repz
inc
mov
sub
aam
shl
popf
or
or
fnstenv
(bad)
out
loop
imul
repz
or
(bad)
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
mov
ror
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
aam
add
loopne
xchg
jge
fnstcw
(bad)
int3
and
cmp
cmp
push
sbb
xchg
jno
leave
xchg
mov
(bad)
int3
int3
test
jg
add
pop
and
movs
push
inc
arpl
jmp
lds
outs
in
lahf
jp
xchg
sbb
test
push
std
inc
jge
mov
xor
fisttp
(bad)
dec
aad
xchg
daa
mov
jp
scas
(bad)
adc
ins
(bad)
retf
xlat
jno
or
dec
sbb
movs
sbb
daa
xlat
cmp
pushf
clc
pusha
out
xor
jg
sbb
push
sub
aad
fwait
pushf
sbb
sub
pop
in
pop
shl
das
sbb
pop
pop
dec
fstp
adc
sar
jo
gs
push
mov
push
(bad)
xor
push
xor
bound
sbb
inc
xchg
jno
xchg
fbld
or
ffree
leave
(bad)
xchg
push
je
xchg
leave
and
dec
lahf
cld
(bad)
aad
pop
aaa
mov
test
shl
and
frstor
call
mov
cli
and
pop
add
xchg
mov
xchg
mov
lea
mov
inc
jp
dec
stos
repz
mov
es
add
leave
adc
test
mov
rol
mov
popa
das
pop
lahf
or
cmp
popa
pusha
sbb
js
repz
dec
jmp
push
or
into
fnsave
leave
pop
or
pop
xor
dec
ins
aas
mov
xchg
xor
(bad)
mov
sub
(bad)
scas
(bad)
shl
loope
ins
mov
and
xor
enter
lds
push
inc
dec
sbb
in
cmp
xor
dec
jp
loopne
sahf
mov
inc
stc
ins
pop
ins
cld
stos
and
retf
stos
mov
dec
in
mov
movs
xchg
pop
push
lods
(bad)
xchg
retf
sub
fstp
mov
repnz
lods
idiv
push
mov
stos
aaa
pop
fild
lods
or
enter
int3
cmps
xchg
dec
dec
dec
ret
push
mov
inc
push
ja
sub
retf
sbb
push
rcr
cld
ja
xor
add
lea
(bad)
adc
popf
pop
stos
jb
bswap
sbb
push
dec
call
xchg
js
fimul
adc
xlat
cmp
test
pop
pop
jmp
jl
fcmovbe
mov
and
adc
mov
dec
repnz
ror
mov
cmc
test
outs
inc
fsub
jmp
jecxz
cli
push
dec
push
sbb
lods
sub
jp
mov
xchg
bound
psrlw
mov
mov
and
adc
xlat
xchg
ja
mov
nop
bound
or
les
ja
fmulp
mov
inc
lock
scas
iret
call
aad
cmp
and
xchg
jb
jmp
mov
xor
pop
test
jle
ror
add
cmc
loopne
xor
arpl
stos
inc
inc
lea
lods
mov
jnp
icebp
pop
cmp
sbb
add
cmc
cmps
neg
inc
(bad)
ins
jnp
repz
jno
(bad)
loopne
jl
jl
(bad)
ror
dec
daa
pop
cmp
out
pushf
and
mov
push
dec
inc
push
imul
dec
(bad)
stc
adc
lds
cld
inc
fisub
call
push
pop
dec
mov
or
jo
sti
jns
sub
cmp
adc
in
mov
mov
dec
mov
pop
ror
xchg
fnstenv
inc
shr
(bad)
sub
and
clc
(bad)
js
movs
sbb
loopne
mov
cmp
out
jle
or
call
fucomp
test
int
sbb
sbb
xchg
(bad)
cld
cmp
fist
and
in
sar
daa
inc
dec
sbb
jg
mov
xchg
xor
pop
lods
ror
mov
dec
xor
xchg
addr16
repnz
enter
enter
and
lahf
pusha
loope
xchg
mul
jge
mov
(bad)
fst
cmps
jmp
daa
ins
lods
fistp
sahf
imul
dec
call
add
rcr
pop
ffreep
cwde
out
push
lea
mov
push
jne
pop
or
or
cmp
into
pop
adc
lods
rol
test
inc
push
inc
sbb
lock
popf
retf
jl
enter
mov
and
jmp
cld
cmp
gs
sub
pop
cmp
es
mov
mov
aas
push
xor
(bad)
pop
call
ins
push
lea
push
out
jg
jmp
out
ret
xor
icebp
retf
ret
sar
xchg
and
mov
xchg
call
add
movs
jb
jl
sub
inc
push
sbb
mov
and
inc
sbb
mov
cmp
xor
sti
or
sub
jns
movs
adc
xor
mov
cmc
lea
into
sbb
pop
pop
cmp
ror
fild
xlat
add
idiv
dec
xlat
test
in
into
cmp
mov
pushf
xchg
inc
sbb
je
xor
stc
mov
mov
mov
push
sar
pop
sbb
mov
leave
lock
aam
pop
push
sub
xlat
scas
mov
push
xchg
mov
jns
mov
cli
xor
imul
das
(bad)
(bad)
aas
pop
mov
jo
mov
out
hlt
shl
push
pop
xor
push
imul
fst
imul
fld
xor
cli
ins
ret
cmp
int3
sub
adc
jns
push
mov
cwde
push
jns
pop
in
lods
enter
jno
into
inc
adc
sbb
mov
int3
cmp
add
sub
cmp
fnstsw
adc
ja
rcl
adc
mov
lds
mov
and
clc
(bad)
addr16
adc
adc
hlt
addr16
in
cmp
je
mov
pop
mov
pusha
inc
pop
xor
lea
jg
repnz
shl
frstor
fwait
loop
push
(bad)
ror
lock
mov
xor
js
cs
ret
stc
(bad)
jecxz
pop
jmp
(bad)
sub
mov
inc
push
ja
lahf
cmps
sar
adc
mov
lods
jmp
dec
popf
loopne
(bad)
iret
fwait
add
or
clc
fdivr
and
cmps
(bad)
mov
and
inc
or
stc
cmp
mov
jo
(bad)
movs
add
adc
inc
mov
push
adc
xchg
or
adc
sbb
adc
(bad)
dec
push
scas
jl
test
xor
pop
outs
adc
push
test
dec
imul
mul
loopne
push
jl
les
and
retf
ins
jns
cmp
mov
jmp
sub
icebp
or
repnz
or
add
push
push
test
and
fidivr
mov
pushf
add
sbb
lds
xchg
or
and
outs
cmp
inc
movs
fdivr
push
mov
mov
mov
jge
jge
jne
gs
jmp
xchg
mov
jl
mov
ror
aad
inc
mov
push
mov
and
fild
nop
sub
stc
fmul
cmps
jecxz
mov
aad
or
add
jae
and
dec
sti
cmps
popf
out
ins
mov
push
cmps
sub
stos
or
addr16
fwait
popa
(bad)
hlt
sub
mov
out
or
ficomp
(bad)
push
push
in
mov
push
or
leave
ds
jmp
inc
xchg
pop
icebp
lea
mov
ja
ins
mov
pop
xchg
jg
mul
jp
or
ror
mov
gs
fcom
mov
sbb
cs
sbb
mov
das
cdq
jl
pop
mov
sub
fdiv
leave
cwde
mov
mov
push
mov
arpl
in
fsubr
lea
mov
jo
sub
mov
clc
jns
sub
out
jl
cld
push
dec
stos
and
lahf
cmp
inc
dec
mov
mov
bound
cmps
xchg
add
(bad)
and
popf
jecxz
adc
test
inc
pop
cmp
cs
(bad)
adc
sahf
add
out
inc
pop
cmp
pop
lods
pop
xchg
or
neg
and
xor
jmp
and
dec
pop
pop
mov
push
into
fisttp
into
or
jge
mov
push
nop
inc
loope
pop
jmp
xchg
sbb
in
out
(bad)
fcomp
dec
loope
or
out
lahf
aad
inc
retf
dec
xor
outs
jmp
push
dec
ja
loope
inc
ins
(bad)
or
jo
repnz
in
adc
fild
outs
mov
mov
aam
ficomp
xchg
mov
sti
xor
retf
inc
pusha
dec
fstp
(bad)
cmps
pushf
sar
xor
xor
movs
pop
fld
mov
mov
jecxz
outs
jmp
scas
enter
mov
cwde
or
out
rcl
(bad)
loope
fmul
ret
or
pusha
or
fild
aam
idiv
sbb
sub
pop
icebp
enter
neg
neg
xor
jae
adc
xchg
push
adc
(bad)
repnz
xlat
addr16
mov
jbe
scas
jp
dec
ins
or
add
or
jmp
retf
imul
or
jmp
jmp
into
add
test
jg
mov
call
or
movntps
dec
cmp
int
jecxz
xor
idiv
out
test
jle
les
fdiv
sahf
fldenv
push
outs
inc
in
dec
fcom
adc
loopne
sub
mov
xchg
cdq
shl
rcr
xchg
fucomip
mov
outs
inc
jp
gs
mov
adc
push
icebp
in
pusha
iret
bnd
in
bound
test
sub
mov
inc
pop
fstp
sahf
test
sub
mov
ret
out
pusha
fcmovbe
cld
lods
es
adc
dec
xchg
sub
out
addr16
icebp
pop
sub
stc
inc
ja
cmp
xchg
fidivr
push
lea
out
shr
pop
and
cmp
or
mov
sub
out
mov
sbb
inc
(bad)
mov
jmp
sbb
lods
fnstsw
aas
inc
push
in
cmps
jbe
icebp
fs
rcl
sbb
out
ins
mov
xor
call
mov
mov
aaa
fincstp
xor
std
or
lods
in
xchg
sub
xor
aad
sbb
sbb
cmp
dec
test
jmp
adc
adc
out
iret
ret
xor
in
jae
rcr
and
test
push
out
push
add
xor
popf
mov
rcr
retf
in
pop
les
aad
ds
dec
(bad)
adc
mov
dec
pop
js
sti
push
push
test
adc
push
mov
mov
in
inc
adc
xchg
shr
int3
inc
in
fidivr
add
xor
cmps
scas
jmp
stc
loope
arpl
jns
or
cmps
repz
jns
xor
aaa
dec
(bad)
ror
xlat
aad
push
test
outs
cmp
and
shl
test
dec
es
cmp
or
inc
movd
js
inc
in
sbb
mov
rcr
(bad)
cwde
div
mov
jp
leave
gs
and
inc
mov
mov
daa
cmps
push
sbb
push
push
lods
push
popf
or
cmp
jnp
pop
lea
add
leave
push
shl
xlat
enter
rcl
les
aad
jb
loop
or
push
stos
lea
packuswb
push
enter
and
clc
or
jecxz
std
es
iret
adc
xor
lds
pop
xor
push
mov
(bad)
leave
test
xchg
push
push
fmul
(bad)
iret
fcomp
stos
stc
lods
nop
imul
js
pop
ins
or
in
inc
mov
and
out
cli
xor
jg
call
lock
jnp
retf
in
(bad)
(bad)
out
or
and
xchg
and
shl
jb
iret
aaa
adc
push
inc
mov
jne
mov
mov
pushf
dec
enter
sbb
aas
jbe
sbb
out
movs
xchg
or
jo
outs
into
push
out
inc
call
dec
ja
mov
and
pop
das
cwde
call
retf
mov
idiv
jle
sub
jmp
hlt
inc
(bad)
jmp
adc
cmp
sub
sub
int3
add
xchg
adc
sub
cmp
add
sti
out
pop
fsub
in
test
jg
push
xchg
adc
add
scas
std
push
push
sbb
aas
sub
jns
dec
cmps
pop
ins
or
inc
inc
pop
(bad)
mov
jns
sbb
fisubr
mov
mov
movs
push
fstp
repnz
xchg
std
add
fild
add
ret
ret
in
(bad)
mov
mov
mov
(bad)
fst
lahf
int
(bad)
mov
pop
xchg
mov
shr
sub
into
movs
mov
add
mov
sub
mov
clc
cli
ds
jae
cmp
push
pop
and
cdq
aaa
je
inc
mul
test
pop
int
jmp
xchg
push
clflush
jmp
xchg
(bad)
mov
call
push
dec
xor
pop
mov
loopne
push
ja
push
fild
ja
xor
mov
jbe
pop
push
pop
mov
xchg
lods
cmp
xchg
lods
lahf
iretw
icebp
scas
pop
xchg
nop
das
sub
daa
(bad)
dec
jnp
out
or
xor
cmp
add
or
movs
pop
imul
cli
mov
and
test
mov
cld
adc
outs
imul
cmp
cwde
push
xchg
push
sub
sbb
xchg
lods
xor
imul
cmps
std
adc
inc
call
shr
ds
sub
pop
pop
cmps
add
jne
cdq
and
and
imul
movs
sub
fcomi
retf
(bad)
cmc
or
or
xchg
xor
sahf
mov
arpl
movs
add
mov
es
inc
ins
cdq
nop
test
test
sahf
jmp
dec
mov
sbb
jne
bound
mov
mov
push
sub
lock
xlat
jg
mov
mov
cld
lea
arpl
sbb
pop
jno
rcr
push
fs
pop
pushf
jb
xchg
retf
inc
cmps
adc
cmps
dec
push
mov
inc
dec
pop
in
mov
(bad)
popf
mov
call
js
mov
add
mov
xchg
(bad)
pop
ja
cmp
jno
sub
jb
xor
(bad)
mov
pushf
je
repz
xor
or
arpl
add
pop
pop
sub
jmp
retf
and
pop
xchg
scas
xor
jp
mov
lods
xor
xchg
cld
xchg
inc
lea
mov
or
cmp
jae
lods
push
lahf
adc
addr16
dec
cmp
mov
dec
retf
fsub
jecxz
pop
das
or
call
pop
xchg
jae
push
push
shl
js
xor
lods
test
rcl
cmp
add
fsubr
popf
es
fld
call
or
and
jg
test
lods
stos
in
stos
mov
mov
dec
adc
fmulp
clc
imul
mov
stc
adc
dec
cmps
aad
dec
enter
fcomip
pop
jnp
pop
aam
in
adc
int3
pop
sbb
jl
sub
lahf
fs
cs
mov
dec
or
pop
inc
dec
adc
dec
aam
add
movs
out
mul
sub
xchg
(bad)
cmc
add
lahf
fisub
adc
sub
imul
inc
cdq
xlat
mov
sub
mov
xchg
popf
jns
repz
repz
jp
inc
(bad)
je
retf
cmp
mov
jnp
add
mov
repz
enter
int3
jl
inc
pop
imul
loop
push
dec
mov
imul
pop
xor
retf
nop
(bad)
mov
lods
sub
out
(bad)
stc
iret
jg
repz
add
pop
xor
lds
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
rcl
outs
jecxz
ret
dec
(bad)
pushf
fdiv
cmps
(bad)
xor
arpl
fnstsw
es
fst
(bad)
cdq
pushf
pushf
popf
into
leave
icebp
std
nop
out
jge
add
push
cdq
mov
jns
inc
test
aad
imul
rcr
out
iret
jge
cwde
(bad)
jno
call
xchg
sbb
mov
sub
add
jne
gs
aam
adc
push
xchg
mov
inc
pushf
cdq
dec
cmp
call
adc
idiv
mov
cmps
lahf
adc
inc
dec
std
bound
dec
imul
jns
mov
sub
jp
daa
mov
aam
push
daa
fisubr
in
das
and
push
xchg
xchg
dec
mov
inc
cld
jnp
mov
xor
xchg
(bad)
iret
repnz
pop
mov
sub
sti
push
push
cmp
add
pushf
mov
iret
js
aam
(bad)
in
sub
in
lods
jmp
xor
int
imul
push
mov
dec
adc
clc
push
mov
out
idiv
pushf
fisubr
jmp
shr
jmp
lock
adc
retf
jecxz
adc
jnp
in
ds
outs
xchg
sar
je
imul
fdivr
ret
pop
xchg
fsub
pop
jle
or
jo
jecxz
punpcklwd
shl
scas
into
mov
push
in
inc
sbb
cwde
in
jnp
jb
aas
push
dec
retf
fnstenv
leave
or
sbb
test
and
test
mov
cmp
xchg
fcom
push
fisubr
mov
fidiv
add
lea
repz
or
sub
cmp
add
retf
cs
imul
fwait
bound
cli
mov
jae
xor
inc
sbb
(bad)
mov
mov
loop
test
mov
scas
pushf
stos
in
out
and
sysexit
pop
sbb
pop
xchg
adc
mov
mov
xor
or
mov
jmp
mov
mov
out
pop
pop
fwait
gs
pop
push
xor
inc
pop
pop
xlat
sub
fldcw
add
icebp
mov
mov
and
inc
sbb
mov
mov
sbb
mov
out
sbb
pop
stc
pusha
mov
aam
pop
adc
cmp
mov
push
sbb
dec
neg
pop
lds
dec
cwde
mov
xchg
mov
xchg
sbb
xchg
sti
and
push
xor
in
es
pop
cmp
(bad)
jbe
pop
pop
pushf
mov
jmp
dec
sbb
push
pop
dec
jno
and
ds
sbb
js
cmc
push
cs
shl
jns
aad
mov
jg
je
cs
loope
or
fdiv
xchg
inc
fcmovnbe
test
cmp
xor
shl
(bad)
sub
data16
imul
int
popf
xchg
cmp
mov
iret
jo
inc
mul
pop
cmpxchg
fldcw
(bad)
xchg
mov
and
ret
lods
sub
ins
mov
pop
adc
fild
aaa
add
and
lock
jmp
mov
mov
mov
jge
in
xchg
aad
cmp
pop
xchg
push
xchg
into
adc
es
(bad)
or
mov
dec
aam
nop
outs
add
ss
jbe
push
xor
outs
jo
mov
mov
sbb
sub
bound
call
les
add
call
cmp
enter
pop
dec
jnp
aam
xchg
out
int3
xor
jg
lahf
push
sbb
xor
inc
xchg
in
inc
test
cmp
mov
mov
xor
dec
jnp
inc
xchg
jecxz
fucomp
hlt
call
cs
mov
push
lods
sub
add
cmc
out
in
jo
scas
imul
dec
mov
ret
pop
popf
scas
pop
dec
push
mov
xor
or
fisub
movs
cmps
test
xor
ror
jmp
ins
pop
push
movs
scas
jmp
data16
jne
xor
out
pop
hlt
xchg
push
int3
lahf
clc
repnz
mov
xchg
adc
push
paddusw
jg
mov
push
sbb
arpl
outs
out
fldcw
pop
pop
dec
jb
hlt
les
mov
pop
cmp
inc
jge
stos
xlat
clc
adc
ret
pusha
add
cwde
stos
sub
mov
ja
inc
(bad)
sbb
dec
(bad)
(bad)
pop
jp
mov
pusha
fadd
sbb
scas
cs
cwde
dec
les
sar
(bad)
ss
mov
repz
fist
scas
fisttp
jge
jl
mov
mov
mov
push
mov
sub
outs
adc
adc
arpl
xchg
push
rcr
(bad)
mov
mov
repz
jecxz
imul
jp
ss
mov
pushf
and
mov
and
push
(bad)
lods
sub
and
ds
fmul
inc
pop
add
xor
add
sub
adc
ins
outs
lahf
lock
xchg
pop
imul
cmps
jne
icebp
inc
mov
lods
(bad)
xor
mov
pop
sub
sti
push
into
xor
jle
cmp
dec
movs
les
dec
aaa
mov
imul
pop
sub
jl
inc
in
fldcw
xchg
xor
imul
fwait
cwde
cmp
mov
dec
lods
retf
ins
sbb
xchg
fild
test
out
js
enter
leave
movs
in
(bad)
pop
jno
push
push
ficom
adc
imul
fsubr
mov
stos
dec
sbb
mov
or
pop
xor
jmp
(bad)
nop
daa
jnp
sbb
inc
sub
movlps
pusha
xchg
mov
stc
dec
repz
xchg
das
pop
pop
in
add
and
mov
xchg
cmp
push
sbb
pushf
xor
sub
pop
fistp
les
jno
dec
and
sub
xor
(bad)
xchg
loope
pop
jb
push
pushf
xchg
xor
push
adc
mov
xor
push
xor
xor
cmp
mov
call
out
fwait
pop
push
push
jp
push
arpl
jmp
xor
aas
or
jg
hlt
jae
test
mov
cmp
adc
mov
mov
arpl
stos
(bad)
in
adc
mov
pop
(bad)
push
cmp
xchg
nop
sti
je
jb
jg
push
xchg
inc
jne
int
mov
popf
sub
inc
mov
cmps
adc
in
mov
outs
cmp
rcl
dec
in
cmp
retf
add
jp
lahf
inc
jmp
je
sbb
imul
clc
or
pop
lds
gs
xor
xchg
adc
jl
imul
frstor
out
imul
xchg
es
sub
cdq
dec
clc
mov
fiadd
jl
add
(bad)
mov
inc
push
mov
sbb
sahf
popa
xchg
pop
xor
fistp
idiv
aas
adc
rcl
push
hlt
sti
sahf
int3
mov
fstp
fstp
gs
ins
or
cdq
xor
call
push
iret
bound
pop
ror
sbb
jl
dec
and
or
(bad)
adc
cmp
(bad)
mov
pusha
loop
cld
mov
std
dec
push
inc
sahf
fdivr
fmul
cmc
adc
bound
xchg
cmps
imul
imul
dec
lods
mov
fisttp
out
pusha
push
pop
pop
inc
push
adc
pop
imul
jne
pop
in
push
push
and
dec
sar
in
push
shr
mov
jmp
add
jge
add
add
mov
push
mov
pop
xor
lahf
sbb
sbb
mul
loop
sar
and
push
add
mov
sbb
xor
push
mov
mov
inc
fidiv
arpl
into
mov
dec
mov
jmp
cmp
cld
stos
clc
neg
shl
rol
or
mov
dec
mov
scas
lds
sbb
mov
push
cmp
mov
(bad)
in
mov
stc
(bad)
test
sub
arpl
shl
push
stos
push
xlat
fld
ja
popf
mov
jle
test
adc
retf
adc
xlat
das
mov
in
push
inc
mov
cli
sub
cmp
sbb
shl
xor
cmp
ins
les
cwde
mov
test
sar
adc
mov
mov
cmp
aaa
iret
cmp
cmovp
mov
push
mov
push
cmc
outs
call
addr16
mov
loopne
cmp
mov
pop
pop
xchg
or
shr
add
mov
scas
xlat
lods
xlat
hlt
cmp
int
loopne
out
cld
fild
push
pop
sbb
ror
xor
popf
pop
loopne
inc
xchg
dec
aaa
jg
call
xor
or
cs
retf
(bad)
scas
and
aam
loope
pop
and
mov
add
or
xchg
mov
retf
ja
and
sahf
adc
jmp
jnp
lea
enter
jno
int
int
(bad)
mov
out
jno
dec
jae
jne
cmp
sub
jbe
xor
cdq
idiv
and
pop
mov
cmc
in
pushf
and
cmp
fmul
hlt
lods
adc
sub
les
jl
pop
cwde
adc
and
jge
adc
mov
xchg
adc
sbb
sbb
xlat
mov
sbb
xchg
daa
mov
adc
in
xor
jmp
mov
test
xchg
fwait
aam
pop
dec
mov
aas
push
out
and
pop
sti
add
enter
inc
lahf
push
pop
sahf
scas
stos
cmps
xchg
add
inc
mov
imul
or
sbb
mov
mov
sub
test
loopne
push
mov
retf
pop
mov
add
and
rol
and
inc
mov
ins
dec
int3
xchg
xor
mov
jne
mov
(bad)
das
ja
fisubr
push
mov
adc
leave
por
retf
xchg
(bad)
out
jbe
jo
test
inc
sub
jl
pop
push
mov
push
xchg
fstp
mov
sbb
inc
je
pop
int
pop
cmp
inc
xchg
xchg
stos
daa
ins
(bad)
(bad)
cmc
xchg
xchg
inc
mov
jb
fsub
cmp
loopne
push
mov
sar
repz
retf
cli
je
jmp
sbb
(bad)
jnp
add
inc
xor
stos
sub
cmp
push
dec
in
mov
pop
jmp
inc
(bad)
or
repnz
pusha
sub
lods
dec
add
aad
imul
pop
pop
lock
push
leave
push
or
mov
daa
(bad)
sbb
(bad)
sub
sub
clc
mov
icebp
rol
adc
loope
add
mov
adc
sub
xchg
dec
mov
and
mov
sbb
daa
addr16
(bad)
into
call
aam
jmp
je
loop
leave
(bad)
cmp
pop
lea
das
xor
pop
lahf
adc
add
in
pop
call
and
shl
dec
neg
call
aas
in
or
test
push
jbe
movs
add
aad
pop
push
imul
lds
rol
test
pop
jg
add
scas
cmp
repnz
into
idiv
ins
and
out
push
jae
xor
das
mov
lods
xchg
xor
xchg
lea
sbb
ret
inc
ja
das
push
repz
dec
pop
mov
jp
and
mov
and
xor
jecxz
ret
adc
inc
or
in
sar
sub
psubusb
dec
or
enter
lds
add
pushf
mov
aaa
out
aaa
in
int
mov
push
nop
sub
cdq
mov
jmp
dec
dec
cmp
stc
jp
inc
add
mov
sbb
dec
cdq
pop
movs
int3
imul
jns
cmp
rcl
ficomp
jl
mov
sahf
popa
in
pop
pop
(bad)
pop
push
inc
cmps
fistp
jne
push
mov
mov
mul
(bad)
push
repnz
fcomp
dec
in
packuswb
jg
push
dec
movs
outs
(bad)
push
adc
dec
sbb
xchg
jae
scas
mov
cmp
pop
lock
jmp
xchg
icebp
xchg
jg
inc
div
mov
dec
sahf
mov
mov
movs
or
adc
cmp
or
adc
mov
push
lods
loope
enter
inc
lods
inc
pop
lahf
sub
sub
lods
(bad)
cmp
inc
sub
ins
mov
cs
adc
jle
cs
sbb
loope
or
push
push
cdq
inc
dec
mov
add
pop
sti
xchg
hlt
or
mul
and
dec
pop
jmp
dec
inc
sub
test
rcl
xchg
push
gs
scas
stc
inc
(bad)
push
lock
(bad)
jmp
sbb
mov
popf
mov
cmp
mov
(bad)
cmps
mov
lock
inc
xchg
mov
outs
sub
fstp
adc
(bad)
lods
cmps
mov
xlat
clc
fiadd
popa
xchg
jge
cmc
in
mov
pop
stos
and
loop
push
cmps
mov
add
adc
sub
out
retf
lds
cmp
cwde
sbb
pop
cmp
faddp
jb
mov
repz
jnp
adc
or
push
mov
clc
lock
lods
mov
movs
jbe
mul
mov
fsubr
test
xchg
push
lods
pop
inc
enter
or
mov
jmp
pop
mov
pop
mov
imul
rcr
jmp
shl
push
test
xchg
loopne
arpl
outs
shr
sahf
cli
test
xor
movs
pop
nop
push
sbb
mov
jmp
jns
gs
cmc
mov
xor
adc
leave
retf
xlat
inc
mov
pusha
fimul
xchg
les
and
xchg
add
fbstp
cwde
cmp
mov
test
xchg
adc
jp
sub
js
data16
inc
inc
xor
sbb
add
rcr
imul
mov
dec
sbb
in
(bad)
lods
push
or
test
ret
call
sahf
in
cmp
(bad)
je
movs
push
mov
sti
sbb
mov
sbb
sub
inc
xchg
pop
cmp
adc
xor
add
clc
(bad)
sti
sbb
sbb
iret
loop
sar
rcl
loope
mov
mov
push
sar
xchg
aad
dec
push
adc
inc
add
cmp
and
push
inc
(bad)
pop
outs
push
cli
inc
loopne
test
sar
shr
mov
js
mov
shl
mov
push
test
paddsw
bound
sar
xchg
push
lahf
mov
mov
or
jne
sub
retf
das
pop
adc
(bad)
jl
(bad)
and
sub
stos
stc
mov
test
inc
jmp
in
test
jno
inc
enter
rcr
sub
fdivr
jmp
mov
cmps
lahf
repz
sub
dec
push
push
jl
sti
xor
xor
jae
sbb
mov
mov
jnp
out
or
call
arpl
fwait
loop
jno
icebp
mov
inc
outs
adc
xchg
xchg
mov
pusha
lahf
pop
cdq
mov
lods
mov
movs
je
sub
scas
bswap
bound
jg
test
xor
jp
jg
in
pop
cwde
jb
pop
dec
jae
push
sbb
icebp
popf
ins
popf
stos
dec
stos
test
aam
xor
jg
mov
and
test
out
xchg
aas
and
mov
and
sub
aas
inc
in
mov
int3
pusha
xchg
mov
and
test
stos
sti
dec
pop
sub
gs
xchg
aad
fld
test
cmp
push
movs
sub
adc
jp
cli
xchg
push
js
ficomp
clc
mov
nop
mov
ror
xor
mov
fistp
aas
(bad)
stc
iret
jg
repz
(bad)
cld
out
sbb
lock
sub
repz
xchg
inc
loope
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
fmul
add
loopne
ss
(bad)
pop
ss
pop
out
ret
fldz
pop
xlat
push
fstp
sub
das
pop
js
enter
add
in
pop
or
xlat
imul
movs
popf
enter
jb
shl
add
(bad)
test
lods
mov
adc
inc
sbb
stos
pop
fstp
iret
leave
add
leave
jg
and
mov
push
pop
loopne
das
pop
sub
push
adc
inc
repnz
rcr
adc
cmp
cld
cmp
fmul
and
or
jne
nop
(bad)
shl
xchg
jne
neg
dec
stc
push
fs
or
addr16
movs
add
pop
loop
imul
or
sbb
inc
loop
mov
push
sahf
lods
shr
add
js
xor
mov
shr
pop
inc
push
mov
gs
dec
mov
dec
pop
sbb
add
or
mov
push
mov
test
sbb
into
int
inc
cwde
ja
push
pushf
mov
jno
loop
push
in
add
fbld
in
test
xor
mov
push
jns
cli
pop
fild
mov
call
sbb
xchg
push
mov
ror
dec
cmp
call
cdq
(bad)
sbb
pop
sti
cvtdq2ps
retf
dec
pop
xchg
add
call
xchg
mov
inc
pushf
sbb
ins
pop
mov
and
pusha
dec
jecxz
mov
jns
stos
in
ins
and
and
lods
cmc
imul
mov
stos
adc
push
mov
stos
std
xchg
call
push
fdivr
das
movs
pusha
loope
lods
pop
adc
mov
les
xor
sub
jno
xor
sbb
retf
je
jmp
shl
pop
dec
mov
pusha
xor
jg
sti
mov
and
sahf
sub
cmp
cmp
pop
hlt
clc
push
mov
je
test
add
inc
outs
int
hlt
scas
pop
lock
add
mov
imul
jge
xlat
movs
xor
cmp
shl
push
pop
mov
jl
ins
push
lahf
or
(bad)
ficomp
sbb
dec
mov
jl
in
pushf
and
cmp
dec
std
jle
sbb
sub
leave
jmp
sbb
mov
bound
nop
and
inc
dec
push
lahf
repz
lods
sbb
dec
popf
out
loope
dec
mov
js
bound
inc
sub
mov
les
cs
test
dec
and
out
mov
lods
add
lds
lea
bts
aad
push
nop
repz
lds
mov
xor
add
xchg
jne
pushf
stos
ficom
mov
imul
fucom
imul
icebp
movs
sti
or
adc
jnp
cmp
xor
adc
xor
rol
mov
int
xchg
jl
pop
add
hlt
jbe
shr
out
jb
repz
cmp
stc
lods
in
aad
in
and
pop
int3
fnstsw
hlt
mov
data16
pop
leave
inc
loope
std
stc
pushf
and
test
daa
jmp
xor
fist
sbb
or
rcl
push
sub
pop
dec
adc
out
les
lock
jge
test
jge
test
lds
dec
add
push
adc
or
loope
mov
xchg
jo
dec
lock
or
sti
pop
sub
call
in
xchg
pop
push
sbb
mov
xchg
arpl
aam
data16
(bad)
in
in
lock
and
mov
mov
jle
aad
ret
idiv
outs
push
loopne
cs
sbb
aaa
push
adc
popa
or
repnz
std
xchg
xchg
inc
jl
fs
dec
inc
stc
jae
jg
mov
fimul
fld
or
test
into
dec
scas
xchg
inc
and
push
mov
jmp
dec
mov
xchg
out
and
push
scas
mov
add
fld
fbstp
imul
hlt
adc
or
add
push
sbb
daa
out
out
adc
dec
mov
add
sub
sbb
das
add
sbb
push
xchg
pop
sbb
aad
dec
push
lock
mov
popa
push
cmps
aam
pop
movs
scas
cmp
inc
push
imul
fsubr
ins
test
hlt
int
pop
mov
test
sbb
loop
dec
test
xor
cwde
xchg
mov
mov
adc
jge
lods
mov
lods
fiadd
(bad)
pop
adc
sar
adc
out
cmp
into
adc
aad
adc
jnp
std
mov
add
cmp
cmp
call
test
fild
mov
iret
xchg
fisttp
sar
mov
scas
add
jmp
sbb
stos
stc
lods
shl
cmp
in
xor
push
cmps
jl
jl
cmp
jmp
and
(bad)
aad
cmps
mov
fdivr
pop
mov
imul
ror
sub
leave
mov
jle
mov
pop
(bad)
pop
retf
popa
(bad)
gs
add
repz
loop
call
xchg
call
and
xlat
mov
jmp
sti
xchg
aam
cld
mov
daa
stc
neg
and
(bad)
outs
push
xor
push
lea
jns
in
gs
(bad)
out
sub
jle
test
cmc
and
ja
addr16
cs
push
mov
in
mov
dec
loope
int
sbb
(bad)
jnp
clc
fmul
aad
or
jle
call
(bad)
stc
shl
sbb
imul
sub
and
and
clc
repz
xlat
xlat
add
adc
std
repz
in
je
mov
imul
push
inc
push
or
jnp
lock
sub
pop
div
push
dec
or
sbb
xor
xchg
mov
aaa
fistp
sub
out
or
mov
je
out
daa
sub
(bad)
iret
nop
test
leave
or
mov
xor
and
ja
cld
data16
mov
call
xor
adc
xchg
push
mov
aam
jmp
jae
addr16
add
mov
jbe
in
inc
popf
dec
xchg
rcr
gs
sub
imul
adc
inc
xchg
mov
pop
stos
xchg
xor
loopne
xlat
jmp
aam
adc
mov
adc
into
fisttp
ins
pop
sbb
xlat
sub
out
fwait
adc
or
xchg
mov
sub
ror
pop
mov
pop
xchg
pop
jne
dec
and
mov
inc
jecxz
mov
adc
xor
jb
out
ins
jg
mov
call
pop
mov
sub
out
jmp
out
and
in
pop
pop
inc
xchg
fsubp
retf
and
mov
add
es
push
jns
cmp
repz
adc
xchg
adc
and
jp
push
shr
jmp
fidiv
rcr
stos
out
mov
fwait
cwde
cwde
nop
imul
sub
dec
rcl
mov
test
jp
adc
sar
mov
fst
arpl
lock
repnz
adc
sbb
mov
data16
mov
je
addr16
cld
imul
mov
dec
add
fistp
sub
imul
into
push
jge
fisttp
gs
mov
add
cmp
aad
mov
sar
repnz
cmps
inc
jo
inc
pop
jg
imul
ins
jg
jmp
lods
pop
gs
cmp
xor
jge
cmp
jae
mov
sub
dec
add
mov
push
jmp
ins
jne
hlt
stos
inc
mov
ficomp
push
test
ret
mov
inc
les
jne
sbb
inc
push
shl
sub
ret
xor
cwde
loop
ret
popf
push
call
das
sub
sub
jnp
lock
sahf
push
stos
xor
int3
enter
and
enter
scas
repz
stos
inc
sti
rol
pop
add
mov
(bad)
dec
iret
ss
pushf
popf
mov
test
mov
mov
or
mov
leave
jne
outs
imul
add
pushf
enter
jae
pop
or
mov
pop
jle
call
sub
dec
sub
popa
mov
sbb
loop
mov
pop
sbb
retf
stos
ds
int3
dec
cli
stc
cmc
sub
xor
inc
in
imul
in
ret
or
out
aas
sub
fs
dec
mov
xchg
cmp
cwde
push
mov
jle
es
sbb
jae
xchg
ret
mov
add
pop
and
mov
stc
sbb
js
xor
push
mov
jb
and
movs
jmp
jecxz
mov
fdiv
mov
push
jecxz
clc
adc
ins
sub
outs
push
cs
pop
gs
(bad)
bound
(bad)
cmp
adc
dec
cmps
outs
pusha
mov
es
call
inc
into
imul
dec
cmps
cmps
test
push
or
pop
lods
xlat
dec
shr
ret
cs
mov
popa
sti
jmp
imul
lds
adc
mov
aas
cmp
push
popf
into
retf
cwde
pop
or
and
sbb
adc
dec
jl
loope
xor
sbb
imul
lods
sub
mov
mov
mov
xor
add
ret
or
je
xchg
and
sar
cli
jcxz
fsubrp
xor
mov
adc
push
sahf
adc
repnz
movs
nop
in
call
sub
stc
repnz
mov
and
sbb
mov
xchg
ret
sbb
inc
fwait
inc
cmp
retf
(bad)
jge
pop
xchg
mov
sub
or
push
lahf
jp
push
add
rcr
xchg
in
adc
sbb
sub
call
aam
movs
daa
lock
fsub
or
adc
sbb
fidiv
fwait
push
ret
shl
push
push
mov
cmps
fdivrp
inc
cmp
push
jbe
push
push
xor
das
fist
cs
sub
pop
mov
push
fwait
mov
dec
data16
mov
dec
leave
mov
adc
inc
xchg
ror
push
push
jno
jnp
push
fnstenv
xor
or
ror
popf
dec
or
rcl
out
add
cld
call
cdq
loope
into
clc
test
test
jle
fisubr
push
stos
pop
push
out
int
out
jl
pusha
cld
cmp
repnz
mov
leave
mov
out
lahf
push
enter
sar
outs
aas
jno
and
lods
or
out
mov
mov
mov
sbb
xchg
adc
cmp
dec
popa
outs
push
pop
mov
ds
fdivp
push
into
lods
test
dec
cs
jmp
aaa
popf
sbb
out
out
mov
adc
popa
mov
rol
dec
mov
enter
aad
jb
xchg
rcr
fstp
push
scas
xchg
mov
pop
(bad)
xchg
mov
enter
xor
or
ret
or
fs
pop
sbb
jmpw
add
popa
pop
push
shl
bound
pushf
jae
fwait
jg
mov
pop
outs
sub
stos
xchg
int
cmp
cwde
sahf
adc
in
cmps
and
jg
add
mov
loopne
in
xchg
repnz
or
popf
cld
and
push
rcl
rcl
jecxz
mov
repz
xchg
mov
movs
stc
stos
icebp
lds
cmp
scas
xor
mov
mov
outs
addr16
cwde
xchg
mov
sub
call
dec
adc
push
fimul
scas
xor
push
lods
(bad)
pop
sbb
ret
je
and
push
into
scas
outs
js
(bad)
out
jecxz
pop
jle
outs
cmp
mov
scas
hlt
ins
int
adc
fadd
(bad)
repz
cld
push
add
or
mov
mov
pusha
sub
xchg
jo
inc
loope
retf
adc
repz
mov
adc
push
xor
dec
xchg
int
mul
mov
xchg
dec
fild
pusha
ins
mov
clc
add
std
and
cli
sbb
out
cmps
sbb
inc
sar
mov
push
adc
cmps
xchg
fidiv
test
pop
aad
sub
pop
test
mov
pop
sti
inc
and
(bad)
mov
aaa
xor
mov
inc
test
(bad)
ins
push
fisttp
push
cmc
je
mov
lds
inc
and
pop
loope
into
in
mov
sahf
out
ret
or
adc
bound
adc
pop
fidiv
jg
sbb
mov
pop
cmp
pushf
push
pop
push
cld
xor
arpl
xor
repz
push
bound
jb
push
mov
inc
movs
loope
mov
xchg
dec
dec
add
icebp
mov
cmp
or
nop
cmp
dec
mov
jg
xor
add
stc
loop
lds
call
cs
ret
sti
xchg
jno
mov
arpl
add
in
sbb
aam
sub
lock
xlat
inc
push
enter
mov
adc
adc
cmps
pop
pop
sbb
pusha
into
jns
dec
out
popf
mov
je
jl
fnstcw
cmc
xchg
xchg
pop
inc
cmc
in
or
pop
cmp
xlat
jne
mov
push
scas
ins
xchg
jmp
mov
and
push
adc
sub
mov
sti
inc
stc
mov
pop
mov
(bad)
repnz
sub
pop
pop
push
and
gs
ret
mov
daa
arpl
std
mov
repnz
push
fisubr
or
inc
fsubrp
movs
in
push
cmp
ins
mov
jns
retf
push
int3
ins
aam
fild
mov
dec
cdq
xlat
ins
pop
xchg
push
fcomp
jmp
pusha
ss
sbb
aad
rcr
sub
movs
test
push
gs
shr
test
and
mov
mov
or
push
fisubr
mov
fistp
rol
add
pop
and
movs
dec
arpl
retf
xor
jmp
sub
inc
adc
or
stos
inc
adc
pop
xchg
and
or
adc
fstp
sbb
mov
cli
sti
lods
shl
or
or
dec
out
jae
or
pop
xchg
mov
cli
or
(bad)
fsubp
cmp
or
mov
pop
mov
gs
repnz
pop
imul
aam
enter
mov
pop
cmp
or
dec
fdivr
cdq
adc
or
mov
mov
imul
stos
jnp
out
xor
cli
mov
and
int
sub
inc
aad
fidiv
mov
ins
ins
(bad)
ror
mov
add
jmp
dec
out
cmc
mov
xchg
dec
mov
outs
push
cld
rcl
add
test
pop
mov
cld
inc
push
add
idiv
mov
jmp
sub
in
ss
stc
imul
aad
fldenv
cli
enter
fs
fmul
sbb
pop
std
pop
cli
fstp
pop
push
rcr
hlt
ret
fwait
xlat
leave
mov
lahf
fs
adc
test
mov
iret
icebp
jmp
rcl
jmp
cmp
pop
ins
test
sbb
jb
scas
cld
pop
cmp
adc
sub
fnstsw
fld
into
push
push
loop
fadd
call
or
xchg
movs
(bad)
bnd
xchg
jnp
(bad)
sbb
xor
xchg
(bad)
ins
push
repnz
xlat
and
sub
jb
outs
dec
push
mov
and
jmp
xchg
stos
add
inc
jne
and
push
and
xchg
jmp
imul
test
mov
enter
and
sbb
mov
test
dec
adc
push
(bad)
jmp
jnp
in
in
xlat
push
lds
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
pop
add
or
rol
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
hlt
dec
sahf
sbb
mov
outs
sar
jne
sbb
dec
jae
jecxz
xor
cwde
push
jecxz
les
bound
jmp
jnp
add
pop
icebp
repnz
retf
call
adc
mov
mov
xor
push
xor
push
das
rcr
test
imul
sub
sbb
(bad)
popf
bound
mov
mov
(bad)
jl
and
out
clc
cmp
out
xchg
push
call
jp
push
jmp
and
and
pmuludq
add
lea
xchg
jg
mov
dec
ret
add
bound
xor
lods
out
test
and
popa
push
fadd
cmp
sbb
rcl
movs
xor
movs
out
lds
push
xor
mov
add
mov
and
std
(bad)
nop
or
xchg
(bad)
sbb
retf
aaa
xchg
push
dec
xor
sub
jp
sbb
ja
in
and
xchg
lock
das
not
les
out
test
jecxz
ins
fsub
leave
xchg
add
jle
push
out
ins
xor
xor
inc
test
fstp
xor
outs
dec
dec
pop
ins
dec
inc
fisub
mov
dec
cmp
cmc
iret
pop
or
jne
adc
test
lods
(bad)
push
dec
adc
jb
int3
aam
pop
stos
je
xor
ja
mov
dec
stc
pop
test
loop
imul
std
(bad)
pop
ins
jg
pop
sbb
xlat
data16
mov
add
pop
mov
lahf
xlat
mov
mov
std
(bad)
into
sub
lods
jecxz
mul
sbb
cdq
push
inc
jge
or
mov
fistp
je
in
and
inc
cmp
adc
(bad)
xor
cdq
dec
xlat
fdivr
sets
jne
sub
nop
call
icebp
push
dec
retf
stos
movs
adc
into
clc
repnz
ins
jne
pop
pop
sbb
push
xchg
es
mov
mov
ds
or
pop
push
cmpxchg
test
or
xchg
rcl
jo
das
jne
xchg
sub
repnz
and
add
aaa
mov
mov
call
fcom
jne
inc
cli
mov
retf
cmp
xor
xor
lods
stos
and
cmp
out
xor
rol
out
bound
mov
mov
test
icebp
test
cmp
lock
pop
jo
iret
mov
test
(bad)
out
dec
sub
cdq
fs
cmc
inc
aaa
jae
popa
dec
dec
call
add
sbb
popa
out
pushf
fwait
pop
into
or
or
xor
pop
inc
out
dec
inc
adc
pop
mov
test
pusha
push
std
lods
cli
aaa
lahf
test
xor
enter
enter
push
fs
xchg
hlt
mov
in
dec
mov
adc
jno
inc
movs
ins
fidiv
(bad)
stos
mov
and
xor
pop
dec
(bad)
popa
jo
add
sbb
fs
gs
out
sub
imul
jle
(bad)
repz
or
iret
jmp
inc
cmp
push
and
test
enter
out
push
push
mov
shr
mov
jg
inc
inc
push
aad
cmp
add
sub
cmp
das
rdmsr
ins
(bad)
arpl
sbb
loop
inc
push
cmp
leave
data16
or
jbe
popa
xor
inc
mov
int
mov
xor
faddp
mov
cdq
out
sbb
push
adc
sbb
adc
aam
repz
mov
sbb
xchg
sbb
xor
mov
(bad)
dec
inc
push
xchg
mov
(bad)
(bad)
jo
mov
xor
addr16
popf
in
mov
pop
jge
movs
jb
movs
test
jnp
dec
cmc
push
je
add
sub
mov
aad
sti
xor
fisub
push
push
test
mov
das
pop
or
mov
addr16
push
xchg
movs
inc
fwait
sar
push
out
into
mov
test
movs
xchg
popf
stos
dec
jns
inc
dec
cmps
mov
cmp
sbb
sbb
rcl
dec
sub
popa
arpl
mov
add
icebp
sub
(bad)
test
sbb
pop
xchg
cmp
lahf
repz
push
call
push
adc
addr16
ret
inc
(bad)
or
jl
and
aas
cdq
fild
add
cmps
dec
dec
test
out
je
mov
or
add
pop
xlat
jp
or
xchg
mov
vsqrtss
push
sbb
push
imul
inc
daa
adc
push
mov
push
mov
or
repz
into
popa
jno
retf
xor
sbb
or
inc
mov
add
jno
scas
push
push
(bad)
xchg
lock
sti
jle
lds
retf
mov
js
dec
jae
frstor
fwait
les
jne
pop
jg
push
fistp
mov
aaa
les
loope
js
(bad)
xchg
cdq
mov
cmp
cs
cmp
jp
push
test
(bad)
pop
inc
and
shl
sbb
fidiv
xchg
xchg
xchg
mov
dec
ror
int3
test
jnp
out
sti
cmc
xchg
in
sar
mov
aad
loopne
push
stos
dec
clc
(bad)
(bad)
jle
dec
sub
xor
fs
push
cmp
push
das
pop
iret
xor
inc
cwde
lods
ins
(bad)
cmc
jecxz
mov
(bad)
xlat
or
outs
not
mov
mov
shl
sub
push
mov
sub
inc
add
fs
and
push
dec
cld
adc
dec
push
pop
mov
push
pop
popa
popf
sbb
jg
pop
arpl
outs
fstp
dec
jmp
ins
mov
inc
xchg
adc
push
or
mov
loop
mov
xchg
xlat
mov
sbb
icebp
retf
int3
or
dec
cmps
push
cld
pop
inc
xlat
fild
xchg
jle
ins
ins
pop
cmp
in
xchg
jmp
mov
dec
movs
push
loopne
imul
dec
into
in
inc
sbb
or
out
dec
(bad)
not
cmp
fisubr
js
adc
mov
jmp
xor
mov
sbb
rcl
and
cs
ficomp
jne
leave
mov
pop
fcmovnu
repnz
iret
xchg
fwait
scas
pop
shl
cdq
and
cdq
mov
mov
mov
test
dec
sbb
jl
popf
cli
sbb
jp
pop
imul
pop
outs
xor
(bad)
jnp
in
hlt
xor
mov
ror
or
dec
mov
ficomp
cld
(bad)
mov
push
out
cmc
mov
ret
cmp
sub
mov
ror
ret
(bad)
stos
leave
and
jecxz
xor
int
cli
test
add
nop
xchg
shr
fild
(bad)
bound
xor
retf
dec
or
shr
xchg
lahf
or
int3
jne
add
xchg
stc
mov
pop
inc
dec
xchg
push
data16
rcl
jecxz
aas
push
xor
inc
sub
test
adc
inc
jne
imul
jo
lahf
or
xor
fimul
xlat
add
pop
(bad)
movs
jnp
test
stc
loop
add
les
dec
sub
cmp
bound
push
jl
imul
dec
or
jg
retf
iret
jmp
jp
hlt
sbb
xchg
cmp
popf
jns
jmp
cli
xor
sbb
cld
and
mov
cmp
std
cmp
push
int3
int
cmp
cmp
lahf
rcl
dec
fisub
retf
adc
aaa
addr16
inc
js
push
mov
ja
cmp
and
add
sub
lea
inc
mov
fsubr
sub
dec
cmp
cmc
call
jmp
push
xchg
aaa
sbb
sub
fldenv
push
data16
cmps
or
jmp
sub
punpckhbw
lea
dec
xor
push
not
sub
push
push
ss
jb
inc
dec
rcl
adc
push
xchg
shld
sbb
xor
daa
xchg
out
mov
scas
pop
lds
xchg
fstp
out
aam
sub
push
arpl
call
push
fdivr
pop
enter
addr16
and
xlat
int3
or
sbb
adc
pusha
int3
cmps
pop
popa
in
ror
pop
inc
in
(bad)
cmp
pop
inc
js
imul
xchg
pop
adc
jno
jmp
xor
(bad)
cmc
dec
int3
mov
mov
jge
frstor
pusha
rol
(bad)
sbb
mov
push
lods
and
sub
fnstenv
dec
sub
jmp
push
ror
ins
jnp
(bad)
in
jne
fnstenv
cmc
ficomp
push
mov
les
dec
ins
neg
cmps
cmp
ret
jmp
fucomp
mov
fisttp
shr
(bad)
bswap
repnz
pop
fsub
dec
inc
dec
jmp
add
fsub
cmp
ins
js
cmc
mov
inc
cmps
imul
jl
test
push
xchg
ins
xchg
stos
(bad)
std
push
aas
loope
mov
outs
cld
into
arpl
movs
adc
je
outs
push
cmc
or
lahf
call
cld
sub
(bad)
xlat
nop
lods
es
scas
sbb
loop
aad
nop
bound
cmp
int3
mov
data16
lea
xchg
inc
cmps
sbb
adc
nop
jns
sub
jnp
adc
outs
cmp
mov
inc
popf
scas
jge
push
into
cmp
in
neg
scas
aad
aad
push
jg
mov
sbb
aaa
pop
repz
popf
sahf
loopne
sbb
dec
retf
dec
mov
xchg
lods
mov
sub
add
cmp
dec
hlt
sbb
mov
mov
pop
mov
into
jb
jmp
inc
(bad)
stc
cmps
mov
out
fnsave
fimul
(bad)
add
mov
call
and
stos
sbb
jp
mov
add
xor
adc
mov
push
xor
or
fcomi
aaa
mov
add
test
lahf
jp
jmp
sbb
cld
jne
adc
sahf
cli
iret
sti
xchg
cmp
xor
in
(bad)
std
ds
xchg
gs
inc
test
cmp
and
(bad)
mov
sahf
sub
jns
jecxz
ins
and
adc
xchg
pop
fild
popa
or
or
into
loope
repnz
pusha
aas
cmp
sub
or
or
mov
mov
xor
or
leave
test
out
cmp
xchg
dec
cld
dec
push
adc
adc
(bad)
dec
dec
fs
(bad)
jge
pop
cli
or
and
sub
xor
mov
icebp
xchg
push
jmp
cs
mov
push
xchg
mov
lahf
int
fs
in
pop
out
mov
or
or
sub
and
rcl
stos
jo
sti
call
push
push
sbb
push
adc
and
ret
loope
test
xor
jp
mov
mov
dec
inc
mov
or
mov
mov
and
cs
adc
outs
mov
loop
and
addr16
jae
in
cmp
fiadd
cwde
jp
cld
imul
dec
lods
push
mov
sbb
add
mov
xor
aaa
mov
loopne
call
fist
loopne
adc
fdivr
test
and
enter
and
fcom
fcom
xor
and
int
xor
(bad)
jbe
dec
popf
neg
mov
mov
iret
ds
jp
sbb
xchg
dec
les
jnp
test
and
fwait
sbb
shl
test
push
cmp
int3
lods
sub
bnd
enter
in
mov
mov
and
daa
inc
pop
rcl
(bad)
fcom
xor
xchg
dec
jno
aam
or
push
call
ins
fnstenv
ins
pop
dec
cli
xchg
mov
dec
inc
pop
stos
aaa
jg
pop
gs
xlat
dec
mov
stc
cmp
daa
cmp
in
dec
fisub
int3
xor
lods
gs
lea
xlat
test
adc
mov
jno
push
movs
mov
sbb
sub
out
test
fmul
das
ja
sub
inc
repnz
lock
push
dec
jb
cdq
dec
cmp
xchg
dec
in
fs
jb
sub
out
loop
jnp
add
pop
dec
xchg
js
jmp
mov
xor
xor
pop
fdivp
loopne
(bad)
xchg
pop
cmp
mov
jmp
ret
pop
stos
ins
daa
jae
inc
xor
jb
movs
inc
xchg
jno
sub
daa
mov
cld
and
dec
mov
pop
sbb
lock
xchg
sbb
mov
mov
scas
sbb
aas
or
mov
sbb
jge
cs
sbb
je
sub
in
pusha
loop
outs
pop
ins
xor
inc
xchg
les
mov
xchg
pop
or
or
test
adc
and
xchg
push
xchg
dec
dec
popf
dec
imul
mov
jmp
mov
fnstcw
mov
pop
inc
mov
jae
cli
repnz
ret
das
retf
xor
adc
cli
pop
xchg
mov
push
shl
jmp
data16
cmp
xchg
sub
leave
sbb
clc
adc
push
sub
fwait
xchg
mov
sub
and
retf
mov
pop
test
out
sar
xchg
ja
or
mov
pop
retf
mov
stos
aas
or
dec
retf
out
jmp
cld
sub
sar
sub
xor
mov
jns
cmp
mov
pop
mov
or
push
add
into
nop
add
into
out
fcom
aaa
mov
jmp
lock
das
daa
mov
mov
dec
push
fsubr
jmp
mov
popf
adc
xchg
cmps
out
stos
xor
test
xchg
push
push
loope
xlat
mov
stos
xor
jne
mov
jl
aas
retf
leave
sahf
movs
inc
mov
shr
cmp
bound
out
sbb
daa
int3
mov
int3
in
ja
jnp
mov
mov
in
inc
push
xlat
cmp
xchg
lods
add
pop
iret
jo
pushf
iret
mov
fldenv
sbb
ret
cmp
scas
mov
dec
es
(bad)
call
and
lods
add
iret
sbb
or
push
xchg
sub
jae
(bad)
jne
dec
lods
js
mov
jle
std
aas
push
ins
(bad)
aam
jg
jns
lea
lods
add
mov
movs
test
scas
sub
lods
mov
or
dec
lods
popf
sub
test
adc
(bad)
sbb
push
push
ret
pusha
lds
imul
dec
inc
aam
push
dec
mov
jmp
sbb
sahf
jbe
in
cmc
shl
pop
sti
mov
mov
xor
add
retf
sub
call
scas
out
sub
cmps
add
adc
push
rcr
mov
cs
or
out
aad
lea
fdivrp
sbb
add
mov
sub
sar
pop
jge
(bad)
call
fist
frstor
int
ja
adc
mov
xchg
test
sub
inc
popa
pop
xor
and
test
ss
mov
ficomp
in
mov
popf
and
jl
jae
outs
pusha
mov
xor
mov
scas
das
nop
pop
xor
lahf
and
mov
jmp
dec
jmp
ss
das
xchg
inc
mov
sbb
pop
dec
adc
dec
ja
stc
jo
out
and
out
mov
xchg
outs
push
dec
sahf
adc
imul
ror
(bad)
lock
(bad)
cld
repz
aas
(bad)
cld
repz
push
dec
cld
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
fst
fisttp
jno
leave
loope
dec
xor
cmps
mov
xor
dec
fwait
jmp
icebp
jle
ja
add
js
push
sti
or
push
push
or
rcl
push
jle
mov
ds
fwait
push
jmp
mov
xor
jge
and
xchg
aaa
sub
aas
inc
ja
mov
xchg
pop
retf
(bad)
test
xlat
les
push
fnsave
pop
fisub
or
je
inc
sbb
int
sbb
fimul
adc
mov
test
pushf
shl
les
jo
adc
inc
add
popf
jmp
xchg
(bad)
lock
mov
(bad)
pop
mul
shl
xchg
jbe
daa
mov
mov
add
inc
add
mov
mov
pushf
pushf
fld
and
mov
lock
scas
sbb
les
push
test
(bad)
mov
cs
sub
imul
ret
int3
fistp
mov
or
fsubr
dec
xor
shr
ret
aaa
and
jmp
xor
leave
cli
jmp
xchg
out
das
not
fsubr
out
out
dec
xchg
sbb
adc
iret
xchg
push
adc
scas
jae
clc
jb
lods
inc
push
mov
lods
sbb
ins
adc
repnz
cwde
adc
xchg
inc
pop
mov
js
ins
or
mov
or
adc
retf
outs
jns
shl
adc
mov
test
pushf
inc
in
aas
jb
push
in
fisub
daa
inc
test
rcl
jle
popf
out
pop
xchg
fisttp
out
pop
repnz
(bad)
(bad)
mov
cmp
(bad)
stos
call
(bad)
ja
inc
scas
in
mov
jns
rcl
inc
inc
dec
push
jbe
pop
or
and
dec
icebp
pop
mov
push
call
mov
cmp
stos
sub
es
test
cmp
fwait
mov
push
rol
adc
mov
and
xchg
test
cmp
movs
sbb
cmp
xchg
dec
outs
pop
mov
dec
sub
mov
pusha
or
sbb
push
fmul
inc
retf
sub
dec
out
pop
add
shl
sub
or
cmps
push
stos
pop
sub
or
mov
jl
aam
shl
push
psubw
dec
mov
mov
sti
cli
inc
gs
lods
mov
push
fiadd
pop
and
push
js
popa
jp
(bad)
test
push
pop
in
pop
mov
pop
imul
pop
sub
fnstsw
in
xor
xchg
cmp
cld
ror
das
xchg
push
add
inc
cdq
mov
dec
xlat
lea
mov
inc
adc
jbe
dec
(bad)
out
cld
mov
pop
neg
pop
cmps
mov
adc
pop
sti
repnz
nop
jns
jmp
dec
aad
ficom
xchg
mov
mov
retf
pusha
sahf
aad
(bad)
mov
push
lea
inc
xchg
push
cmp
in
inc
retf
cmps
icebp
cmp
je
sbb
jae
ja
push
icebp
jecxz
lds
adc
push
mov
sub
ins
xor
dec
pop
adc
dec
dec
loopne
add
push
lahf
movs
and
sbb
pop
mov
cmps
sti
(bad)
dec
xchg
repnz
jecxz
enter
dec
mov
pop
les
shl
ins
leave
mov
popa
pop
std
xor
jo
cld
and
shr
sub
xchg
pop
jo
movs
clc
jmp
xor
scas
mov
sbb
fisub
mov
fidivr
sbb
out
cmp
sbb
jl
neg
jne
out
nop
icebp
jg
cmp
inc
fbstp
cli
sub
pop
cmps
movs
push
jmp
cmp
aas
(bad)
mov
rcr
aas
pop
dec
pop
pop
sub
(bad)
push
cmp
push
fnsave
and
aam
mov
pushf
jb
fwait
push
jmp
mov
jecxz
sub
test
mov
jmp
cmps
pop
popf
mov
das
mov
imul
lahf
push
jmp
push
push
xchg
outs
div
dec
jno
cmc
sbb
and
stc
add
call
(bad)
and
mov
loope
retf
js
enter
mov
clc
ret
jp
cmp
xchg
sbb
inc
icebp
sbb
cmp
fidiv
inc
popf
and
xchg
jmp
iret
cmp
add
shl
push
xchg
push
and
pop
fisubr
xor
loop
jae
dec
das
stos
inc
into
in
in
jmp
ss
out
js
repnz
ror
dec
fs
and
pmuludq
adc
fisttp
push
cmc
inc
mov
mov
ficomp
and
jb
and
cmps
push
or
mov
cmp
ss
outs
outs
ins
or
sbb
adc
cmps
loop
mov
push
out
mov
outs
sub
ins
xchg
mov
pop
dec
mov
pop
sbb
inc
add
js
(bad)
cmp
shr
xor
push
and
ss
sahf
push
inc
in
call
ret
jno
or
mov
out
fidiv
out
ja
xchg
movs
call
ss
cmps
repz
outs
xchg
cdq
jbe
movs
mov
xor
lods
and
shr
das
arpl
neg
rol
retf
inc
shl
and
mov
test
cdq
rcr
mov
mov
inc
cmp
lods
arpl
loope
bound
in
fs
popa
icebp
pop
out
sub
shl
cmp
sub
sbb
sbb
leave
inc
movs
sub
jbe
lahf
adc
jmp
cmp
pop
jg
and
xchg
xchg
sub
sub
je
test
rol
xchg
add
jns
mov
aas
or
and
sub
xlat
lds
xor
(bad)
and
sbb
mov
sub
in
jmp
gs
ret
test
jecxz
imul
retf
retf
lea
jle
cmp
jae
mov
sbb
std
xor
test
dec
inc
cmp
arpl
enter
mov
mov
aas
mov
mov
sbb
neg
clc
jns
xor
xchg
ja
jns
lods
mov
out
or
or
pop
cmc
sub
enter
push
hlt
lar
clc
test
out
mov
aaa
mov
jmp
pop
rcr
jno
mov
stos
mov
jnp
out
outs
xor
cmc
xchg
xchg
inc
mov
mov
inc
xchg
jmp
jmp
clc
outs
outs
mov
cmps
shr
jmp
sub
push
(bad)
loop
ss
stos
xchg
push
arpl
push
pop
scas
pop
lea
scas
push
add
mov
aad
out
xchg
xor
push
push
scas
adc
xlat
fidivr
sar
scas
in
fs
jbe
cli
lds
arpl
pop
xchg
js
sbb
ret
repnz
sar
or
fmul
pop
aaa
and
xchg
iret
(bad)
lods
loop
jg
clc
jne
int3
jmp
retf
das
movs
ror
inc
fwait
push
xchg
out
inc
(bad)
(bad)
scas
xchg
dec
cmp
mov
xor
push
movs
jb
mov
dec
pop
xchg
mov
mov
not
sbb
dec
outs
sbb
mov
cli
adc
dec
pop
call
pop
in
cmp
movs
mov
mov
imul
ins
cmc
je
push
inc
sbb
add
sbb
aam
addr16
popa
lea
int3
jne
mov
sub
adc
in
adc
rcl
out
adc
push
xchg
pop
cmp
call
stos
adc
add
xor
pop
pusha
aaa
shl
lods
dec
dec
jge
sbb
ret
les
sbb
(bad)
test
sbb
mov
(bad)
ins
dec
push
pop
in
enter
push
mov
js
adc
stos
jmp
push
or
(bad)
idiv
out
fadd
test
fist
rcl
popa
jno
push
fs
sbb
mov
lea
(bad)
push
cmps
cmps
retf
retf
hlt
mov
inc
xchg
jbe
ja
mov
xchg
rol
cmps
test
retf
jecxz
fxsave
pop
btr
(bad)
pop
mov
mov
loop
les
jge
(bad)
xor
repnz
call
fwait
popf
xor
and
push
mov
pusha
xor
pop
sbb
ror
loope
stos
sbb
push
sbb
imul
and
dec
mov
loopne
les
iret
mov
mov
popa
(bad)
jbe
or
je
xchg
mov
and
cmp
push
add
out
pop
popa
setnp
cmp
mov
push
clc
pop
loop
mov
pop
pop
push
mov
mov
sti
test
fmul
sbb
(bad)
sub
retf
dec
dec
push
lods
inc
push
sub
add
imul
fnstenv
mov
repnz
push
xor
cmp
les
sti
pop
push
xchg
xor
inc
add
fld
sbb
fisttp
in
hlt
sar
mov
mov
push
ja
ror
xchg
add
fwait
xchg
lahf
cmp
out
xchg
aad
call
in
mov
push
mov
shr
adc
sbb
cmps
paddb
lahf
out
inc
test
aaa
pop
(bad)
xlat
dec
pop
mov
pop
fist
mov
jns
loopne
mov
jecxz
out
xor
xor
in
xchg
dec
mov
jmp
movs
scas
dec
mov
icebp
ret
push
data16
xchg
(bad)
jne
pop
mov
fisttp
jle
mov
mov
mov
sub
mov
jl
and
repnz
loop
leave
push
sar
push
mov
cmp
sub
fdivrp
lods
pop
mov
hlt
sbb
jmp
out
adc
sahf
dec
add
and
sahf
retf
jge
cmp
mov
hlt
aad
and
loop
pop
jle
mov
gs
push
jne
dec
into
fdivr
add
loop
stc
ret
int3
jp
add
inc
lea
dec
scas
bound
lock
movs
and
rcr
scas
inc
fisttp
in
lahf
je
push
mov
shl
lods
and
xchg
mov
popf
jo
dec
xchg
vminpd
arpl
lds
fild
fsub
(bad)
(bad)
(bad)
mov
das
xchg
push
rol
add
jne
xchg
shl
rcr
mov
gs
xchg
aas
jbe
fist
sbb
adc
imul
sub
(bad)
dec
movs
(bad)
js
fiadd
mov
lds
dec
pop
dec
rol
push
fucomi
ficomp
pop
data16
xchg
imul
or
aad
xchg
mov
mov
and
rol
and
mov
pop
pop
xor
add
mov
test
jns
call
jno
sub
xlat
mov
mov
aad
sbb
mov
adc
es
and
stos
and
xor
cmp
cmp
xchg
jg
push
nop
pop
fisub
xchg
out
xchg
adc
stos
jae
out
add
fld
leave
and
mov
and
sub
inc
mov
stos
adc
dec
xchg
scas
pop
cmps
pop
ror
lods
es
shl
fstp
xor
pop
jle
(bad)
call
je
adc
lds
jno
ja
or
out
lods
xchg
lods
out
stos
dec
ds
(bad)
(bad)
lods
shl
push
sbb
add
bnd
pop
pop
aas
adc
jle
leave
outs
cmc
sahf
test
pop
sub
adc
in
stc
or
push
cld
ror
sti
ja
repz
adc
aaa
xchg
jbe
mov
pop
in
inc
(bad)
mov
xchg
xchg
in
aam
cmp
jmp
or
jp
push
neg
dec
fmulp
retf
jge
mov
mov
std
outs
xor
jle
and
mov
popa
mov
mov
ficomp
or
mov
ins
jno
mov
mov
jno
mov
sbb
push
(bad)
je
fidivr
pop
cdq
add
inc
ror
shl
(bad)
and
and
mov
test
push
es
in
imul
cmp
mov
(bad)
adc
stos
dec
test
inc
out
popf
mov
(bad)
sti
dec
jbe
sbb
mov
and
sub
rcr
jmp
cmc
adc
jge
mov
and
mov
popf
ds
and
inc
adc
xor
test
(bad)
xacquire
clc
in
xchg
and
and
or
(bad)
cmp
or
in
and
and
jno
jge
mov
shl
sbb
fisub
and
test
cmp
and
pop
arpl
xchg
ja
cwde
loop
loop
mov
xchg
dec
mov
test
out
movs
test
pop
dec
call
sbb
(bad)
adc
scas
sbb
arpl
jmp
adc
inc
cwde
(bad)
es
nop
push
cmc
cmp
jecxz
test
mov
addr16
clc
es
retf
(bad)
inc
push
cmp
push
std
inc
sub
(bad)
inc
lods
mov
loop
fstp
cdq
sar
repnz
setbe
xchg
and
jnp
ret
gs
cmp
dec
das
or
rol
imul
ja
imul
loopne
js
jb
or
pop
cs
stc
mov
inc
cmp
adc
(bad)
jge
jo
mov
iret
mov
(bad)
pop
or
call
jg
(bad)
push
sub
mov
sbb
das
xor
je
repnz
loopne
popf
pop
cmp
mov
push
hlt
mov
cli
push
xchg
sub
sub
and
shr
mov
enter
push
adc
pop
lds
mov
sub
jp
pop
jp
xchg
test
dec
mov
in
cmp
(bad)
mov
or
push
lock
fdiv
scas
adc
adc
jle
push
fidiv
movs
std
push
xchg
mov
or
into
and
sbb
push
aaa
cmp
sbb
cmp
les
cli
adc
inc
jo
inc
xor
xor
les
(bad)
mov
(bad)
xor
mov
xchg
mov
pop
aad
out
les
lods
out
out
push
cmp
repnz
test
mov
sti
shl
push
inc
movs
jge
sbb
jno
fidivr
aam
(bad)
add
pop
adc
xchg
sti
retf
fimul
xor
fadd
mov
outs
pop
rsqrtps
mov
mov
popf
in
rcr
shl
ffreep
das
in
out
and
sbb
jg
leave
(bad)
mov
jae
mov
scas
adc
inc
ja
or
jb
ds
es
xor
and
adc
or
or
and
jl
push
aad
shr
test
or
dec
pop
sub
call
or
adc
sub
pop
inc
hlt
sub
inc
mov
mov
addr16
mov
dec
xor
pop
cmps
in
jg
adc
jno
xor
or
loop
scas
ss
lods
popf
int3
ret
imul
ret
inc
mov
jae
pop
add
rol
cmp
movs
mov
enter
mov
add
push
out
xor
imul
stos
jo
jge
arpl
fstp
in
jle
cmp
dec
push
add
in
sub
add
stos
outs
jecxz
cmp
mov
enter
adc
leave
xor
sbb
test
dec
dec
cmp
ds
pop
fbld
mov
jne
mov
xchg
movs
add
movs
call
out
jg
stc
out
jg
scas
add
inc
fs
push
hlt
cmps
aad
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
add
xor
cmps
mov
fnstsw
sar
mov
mov
mov
jmp
out
icebp
fidivr
xor
push
push
pop
or
xchg
jbe
mov
push
aas
pop
ds
sbb
pop
inc
sbb
scas
clc
or
dec
xor
push
popa
cs
setne
mov
mov
es
iret
pop
jmp
mov
mov
cmp
sub
call
(bad)
cli
and
mov
fwait
jge
aaa
into
push
pop
mov
pop
sub
xchg
out
inc
cmpxchg
cmps
fiadd
cld
sti
mov
test
fdiv
jo
push
test
fadd
mov
push
xor
dec
fwait
sbb
xor
(bad)
outs
push
xor
sbb
add
pop
push
aas
mov
xor
pop
mov
scas
or
inc
imul
sahf
popa
(bad)
lock
sbb
clc
mov
(bad)
pop
jle
cmp
lods
push
aaa
adc
dec
jnp
ficom
adc
inc
xor
(bad)
(bad)
mov
jnp
iret
clc
xchg
mov
sbb
js
pop
pop
cdq
retf
fwait
cmp
(bad)
aad
(bad)
pop
aam
cmp
xchg
mov
push
stos
mov
push
enter
pop
xchg
adc
inc
jg
push
adc
mov
loope
lds
jmp
cs
gs
dec
in
in
test
out
pop
push
mov
stos
adc
jle
jmp
adc
test
push
sbb
jnp
pushf
popf
adc
add
and
mov
xor
ins
add
stos
cs
add
inc
inc
arpl
daa
jmp
pop
fadd
push
iret
mov
pop
mov
xchg
test
and
addr16
and
adc
loopne
in
addr16
mov
sub
sub
push
or
mov
jne
push
cmp
mov
xor
int3
mov
movs
mov
sub
dec
sub
js
fbld
(bad)
neg
gs
jbe
mov
scas
inc
jno
lea
movs
and
(bad)
cmp
out
jg
rol
push
pop
dec
leave
add
xor
push
mov
mov
push
pop
jmp
ret
jbe
jo
push
repz
xor
call
into
out
fiadd
push
push
push
add
cmp
xchg
data16
mov
pop
cmc
push
cmp
fwait
add
test
mov
repz
cmps
loop
and
clc
xor
dec
sub
(bad)
push
mov
pop
jns
inc
imul
mov
sub
retf
sbb
lock
jecxz
inc
lds
xor
adc
ret
mov
pop
mov
sbb
sbb
or
and
xor
xchg
pop
or
fdivr
dec
clc
sub
fnstcw
aas
pop
arpl
fdivr
popf
inc
js
jmp
cmps
inc
imul
push
loope
mov
adc
and
(bad)
test
je
ins
jp
dec
jmp
pusha
jle
pop
ja
and
(bad)
dec
int
scas
add
cmp
scas
inc
call
(bad)
jmp
push
and
jmp
shr
ret
scas
test
ret
push
shr
in
cmp
aas
cmps
pop
mov
fsub
mov
dec
jp
cli
(bad)
mov
(bad)
mov
ret
and
stos
sbb
popf
in
in
in
sti
add
mov
jno
mov
pop
loop
and
sbb
mov
mov
xchg
adc
cmc
les
xchg
push
test
mov
jns
fucom
shr
pusha
xchg
and
daa
ror
add
jae
sub
lods
nop
fsubr
xor
das
les
xor
mov
adc
or
mov
test
stos
dec
pop
cmp
cmps
pop
xchg
cdq
scas
jb
pop
cmp
xchg
xlat
mov
shl
cld
cld
jge
push
test
and
add
int
ds
jnp
dec
cmp
es
pop
push
inc
call
adc
mov
mov
(bad)
or
inc
and
rcl
sar
stos
inc
adc
inc
xor
in
pop
rcr
add
inc
ja
je
adc
(bad)
mov
sub
push
or
stos
into
cld
nop
out
scas
std
js
add
idiv
fldenv
movs
cmp
test
fisub
mov
xor
sbb
xchg
add
mov
mov
es
in
js
cwde
fiadd
in
sbb
pop
fwait
(bad)
fnstcw
fisub
sub
call
dec
jge
test
(bad)
outs
mov
xor
shl
stos
lea
(bad)
cmp
imul
mov
or
pop
std
ds
das
sbb
movs
or
repnz
das
push
sti
outs
jns
pop
ds
and
cld
jb
lock
mov
icebp
movs
push
loope
and
fwait
dec
or
dec
pop
dec
retfw
loopne
mov
cmp
bound
pop
cmp
or
mov
fisttp
or
fisubr
jmp
neg
sar
pop
dec
repz
xor
or
xchg
cmp
pop
sbb
aas
jns
adc
imul
sub
les
mov
bound
jmp
push
fwait
mov
or
(bad)
push
pop
fs
cli
pop
and
fstp
xchg
push
xchg
xchg
test
mov
loop
mov
aad
lods
adc
test
mov
push
mov
loop
dec
clc
and
push
cmc
push
seta
outs
imul
jbe
mov
in
xchg
xlat
push
add
fimul
sub
sbb
aad
popa
sub
jmp
outs
(bad)
fld
jo
dec
call
adc
xor
out
jg
sub
add
xlat
jmp
test
xor
dec
inc
jp
jmp
test
or
mov
inc
sti
stos
adc
sbb
aad
xor
pusha
loop
cmp
lds
add
int
loope
push
shl
mov
pop
cwde
xchg
pushf
cmp
popf
jbe
fdivr
rcl
mov
aaa
jge
xchg
sbb
loopne
fstp
imul
add
sahf
in
out
outs
add
mov
xchg
fcom
pop
xchg
inc
cwde
mov
sub
mov
daa
cmp
gs
jo
test
xor
loope
in
div
adc
add
dec
(bad)
cld
in
cmp
pop
mov
jge
xor
xchg
ror
push
cmp
inc
and
leave
xchg
stc
inc
div
aaa
int
inc
es
cwde
pop
adc
das
pop
and
mov
stos
shr
fs
(bad)
(bad)
sbb
fwait
xor
scas
sub
dec
jecxz
inc
sub
test
dec
jmp
shl
adc
pop
xchg
sub
dec
repnz
fidivr
fidivr
ret
out
push
xchg
jae
sub
pcmpgtb
int
jo
cmps
lea
sub
add
adc
cld
imul
sbb
ja
or
pop
pop
mov
(bad)
push
adc
aaa
jnp
jmp
das
jecxz
ror
lea
dec
mov
ror
scas
rol
add
push
out
inc
std
mov
dec
sbb
sbb
jmp
inc
pop
xchg
jnp
jge
in
movs
dec
imul
dec
aam
ins
jae
adc
or
sbb
push
and
jmp
(bad)
sti
mov
enter
sub
and
mov
out
scas
in
cmp
into
idiv
fwait
ret
stc
test
fisttp
sbb
mov
mov
lock
ficom
pop
jns
push
or
lahf
ja
or
cmp
sbb
movs
xor
push
push
(bad)
push
mov
ret
push
and
or
shr
cwde
add
ds
lods
fistp
xchg
and
jnp
xchg
call
or
jbe
out
(bad)
out
xor
leave
fs
out
mov
cwde
repz
stos
inc
add
adc
or
fisttp
fisttp
stos
fidiv
in
mov
popa
xor
rcl
cmps
(bad)
std
stos
test
inc
jmp
inc
aas
pop
call
hlt
push
fdiv
ins
aam
cld
push
inc
pop
or
mov
mov
xchg
jp
jae
mov
movs
ret
jmp
fdivr
xchg
or
aam
retf
out
scas
pop
pushf
test
sti
pop
lea
std
mov
std
dec
js
pop
mov
movs
sub
loopne
pop
push
pusha
inc
sub
cs
push
sub
loop
stos
cmp
stos
out
std
cdq
clc
das
fidivr
in
jge
adc
imul
dec
inc
cmp
dec
push
loope
call
int
sbb
pop
leave
sub
(bad)
daa
das
dec
movs
xchg
inc
std
xchg
xchg
sbb
cs
mov
push
dec
jnp
mov
mov
add
cmps
je
adc
and
pop
sub
movs
xchg
ins
cmp
jne
out
adc
push
add
ds
pop
push
ss
lods
xchg
dec
retf
mov
push
retf
in
arpl
push
xor
daa
xchg
fdivr
out
movs
xor
std
popf
aas
sub
loope
push
daa
push
dec
cmp
ss
mov
lea
sbb
jb
sbb
xchg
and
js
int
jecxz
loopne
dec
je
nop
sar
or
loop
xchg
cwde
mov
sub
inc
rcr
aad
cdq
mov
rcl
jns
je
pop
jl
cmp
mov
mov
int
icebp
test
sbb
dec
pop
lods
dec
add
jecxz
jb
mov
mov
or
shr
add
adc
jecxz
sahf
xor
xor
lahf
jno
jno
sub
xor
pop
add
out
or
dec
sbb
lods
jg
out
and
sahf
push
jg
jmp
sbb
pop
inc
mov
repnz
and
mov
cmp
xor
jno
repnz
popa
ror
shl
xor
dec
mov
pop
mov
mov
gs
mov
mov
in
push
mov
or
xchg
mov
add
(bad)
out
mov
xor
std
push
nop
cwde
add
mov
mov
mov
jp
xchg
xor
adc
loopne
xchg
lea
cmp
outs
dec
mov
mov
les
mov
setg
sub
out
mov
or
jecxz
scas
test
fwait
adc
pop
add
sbb
loopne
mov
(bad)
jno
inc
lea
ja
scas
lea
xor
xchg
inc
adc
test
sti
inc
and
xchg
xchg
sbb
rcr
ret
dec
addr16
xor
sar
mov
cmp
std
dec
dec
out
pop
inc
mov
mov
in
xchg
xchg
adc
fistp
inc
(bad)
mov
into
mov
xor
adc
add
cmp
arpl
shr
jnp
cmp
shl
retf
and
ret
je
imul
xchg
push
adc
movs
loopne
test
jo
dec
jg
dec
in
pop
xchg
pop
retf
mov
rcr
lds
ds
call
xchg
sub
sub
xor
push
mov
std
ret
push
ss
add
out
dec
outs
out
jnp
je
jg
scas
sbb
fs
aad
sub
scas
leave
mov
aad
aas
mov
cdq
pop
fcom
sahf
fs
ficomp
in
pop
popa
add
jp
test
mov
inc
lods
or
fisub
clc
scas
mov
or
and
movs
test
and
cmp
add
jo
lods
outs
adc
ret
or
mov
inc
dec
and
pop
sbb
shl
cdq
adc
ins
pop
imul
add
mov
and
arpl
clc
mov
push
mov
in
pop
mov
scas
pop
test
jns
sub
out
outs
cs
dec
sbb
jno
sbb
dec
mov
cmc
or
ds
and
adc
aam
test
jg
lock
push
rcr
jp
nop
mov
push
dec
lahf
rcr
sti
add
pop
jae
in
lahf
leave
imul
and
pop
sub
lods
jmp
add
jmp
shl
js
xor
out
push
repz
and
shr
dec
cmp
lea
cmps
sbb
(bad)
aad
ins
stos
shl
xchg
and
scas
mov
ins
call
xlat
mul
fisubr
rcr
popf
sbb
sbb
cmp
gs
sti
ss
push
scas
arpl
dec
fucomip
ds
retf
out
in
test
out
rcl
or
xor
mov
pop
sbb
repnz
mov
sub
test
dec
lods
lea
sub
sbb
in
inc
dec
scas
mov
and
into
shl
and
push
xor
mov
lock
push
mov
jmp
in
sbb
shl
aas
jp
nop
lods
xor
mov
out
pop
push
das
xor
dec
mov
iret
call
or
push
test
sbb
mov
jo
mov
and
push
out
fild
mov
repnz
loopne
adc
add
fdivr
hlt
fsub
ret
popa
rcl
dec
je
jb
retf
das
mov
pop
dec
sub
jl
jae
xchg
pop
sbb
xlat
jne
enter
push
lds
jp
mov
or
movs
mov
jg
mov
aaa
sbb
cli
xchg
(bad)
cmp
push
sub
aas
jl
stos
xchg
inc
jge
imul
adc
ja
mov
and
scas
out
add
out
in
and
push
pop
push
pop
mov
push
mov
cli
enter
push
jae
mov
ds
fld
push
or
push
sahf
dec
cmp
sbb
xor
xchg
jmp
jle
sub
imul
dec
sbb
es
enter
hlt
xor
adc
xchg
and
mov
enter
mov
push
push
fnstsw
xlat
jae
xor
call
mov
cwde
fistp
pop
or
adc
inc
xor
sub
imul
jbe
iret
inc
xchg
ss
scas
push
pop
mov
xchg
lds
inc
sbb
shr
and
dec
push
sbb
mov
lods
jmp
xor
test
out
movs
push
in
dec
imul
test
and
pushf
mov
mov
ins
dec
call
dec
sbb
retf
mov
nop
cwde
cmp
int
and
loop
clc
popf
inc
add
xchg
jmp
cli
xor
mov
popa
sbb
(bad)
ds
ret
jbe
sub
(bad)
cmc
push
jb
je
shl
leave
(bad)
cwde
push
pop
dec
loopne
movhps
test
loop
add
push
and
aaa
ins
aad
lds
mov
sub
pusha
sar
mov
lahf
ret
loope
lahf
push
dec
sub
or
xchg
cmp
mov
xor
cmps
pop
retf
mov
jne
inc
lods
mov
dec
in
mov
out
aam
or
lock
mov
lea
repz
mov
jo
movs
cli
rcr
addr16
test
out
adc
add
pop
inc
arpl
cwde
repnz
rcl
sbb
sbb
cld
and
pop
out
dec
sahf
outs
pop
mov
pop
inc
in
fadd
mov
imul
add
pop
stc
jge
sub
dec
pop
jecxz
rcl
xor
or
in
ins
sahf
cmp
mov
mov
ficomp
test
cwde
mov
inc
test
xchg
inc
leave
iret
arpl
dec
lock
mov
jecxz
sti
mov
lock
push
mov
les
and
test
dec
cmp
sbb
mov
addr16
sub
xor
in
cs
cmp
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
pop
into
(bad)
cmc
fimul
arpl
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
push
(bad)
cdq
pushf
scas
push
cmps
cmp
xor
test
sbb
ins
(bad)
je
fwait
pushf
scas
rcr
pushf
out
out
out
jle
enter
add
pop
(bad)
xor
jl
sahf
push
xchg
in
into
adc
data16
add
dec
fidiv
loop
into
out
call
pop
add
in
fidiv
push
mov
jmp
xchg
sub
repnz
pop
dec
call
fidivr
xchg
jbe
xor
mov
aad
cmc
dec
fisub
pop
in
fistp
out
jne
xor
test
xor
jnp
jmp
cmp
bound
scas
lahf
sbb
neg
and
sub
jg
mov
push
retfw
pushf
test
sti
nop
jns
std
scas
and
aaa
xchg
xchg
adc
stos
stos
mov
jbe
sbb
sti
xor
dec
stos
jns
pop
mov
cmp
dec
xchg
fistp
and
retf
push
jne
js
jns
dec
push
(bad)
mov
jge
xor
scas
jge
in
into
(bad)
jne
test
adc
add
sub
push
mov
xor
imul
mov
mov
loopne
sub
(bad)
sub
dec
out
push
rcr
mov
sub
pop
int
daa
cmp
pop
cdq
movs
sahf
iret
mov
xchg
and
rol
out
mov
push
mov
xchg
inc
inc
ror
ret
stc
mov
mov
leave
(bad)
test
fs
and
sar
pop
and
and
sub
mov
aas
and
test
call
popf
mov
sahf
mov
ins
sbb
fsub
push
retf
xchg
mov
jne
mov
(bad)
dec
adc
stc
jo
dec
iret
aad
loope
stc
pop
or
push
sahf
and
scas
mov
ss
in
int3
xor
daa
cmps
and
xchg
jecxz
jb
ret
or
pop
dec
pop
pop
out
adc
and
adc
sub
push
jne
or
mov
in
iret
cmps
jle
or
fadd
inc
(bad)
in
int3
dec
push
xchg
dec
cld
not
sti
adc
addr16
test
in
push
cmps
(bad)
repnz
arpl
xchg
and
shl
aas
in
add
mov
test
jns
xor
lods
inc
movs
ror
jno
jae
cld
shr
das
je
add
push
loopne
jb
bound
cs
scas
out
add
cmp
push
stc
cmp
rcl
scas
push
cmps
pop
push
fsubr
cwde
loopne
push
dec
and
mov
out
nop
dec
hlt
mov
cwde
stos
or
mov
sbb
daa
(bad)
in
xchg
pop
icebp
(bad)
mov
mov
pop
xor
scas
cmp
cmps
push
inc
loope
hlt
stos
and
sub
mov
sub
push
add
in
shl
push
pop
int
push
or
in
fcmovbe
push
sbb
mov
or
scas
pop
inc
mov
mov
add
mov
fiadd
and
or
xchg
sub
add
mov
add
fwait
repnz
movs
das
bound
jge
mov
jo
popa
aam
pop
(bad)
jo
outs
sub
mov
stos
xor
mov
mov
pop
imul
dec
lock
out
(bad)
dec
push
jns
lods
sbb
jae
movs
mov
loopne
add
jg
xor
scas
daa
and
inc
push
lds
daa
popf
or
mov
out
jmp
mov
retf
repnz
mov
icebp
mov
add
into
push
fild
or
dec
jmp
xchg
pop
adc
clc
out
or
popa
cmp
jp
inc
push
mov
(bad)
addr16
pop
jle
pop
repnz
and
jmp
mov
stc
les
inc
pop
retf
jmp
(bad)
loopne
stos
ins
mov
in
jae
sar
retf
mov
(bad)
fsubr
jmp
out
mov
jae
pop
dec
pop
inc
jecxz
stc
inc
rcr
imul
cmp
push
jmp
jle
push
(bad)
out
add
shl
sub
enter
push
test
test
pop
fisubr
ror
lahf
jl
outs
call
enter
(bad)
pusha
cmps
mul
mov
and
jb
in
jg
ficomp
add
or
outs
adc
cmps
cdq
das
xlat
rcl
xchg
jp
and
ins
repz
sti
mov
xor
xlat
mov
mov
fnstsw
cmp
repnz
pop
lods
and
aas
adc
pop
lea
pop
mov
cmps
les
jp
pop
cmc
mov
test
enter
sub
sub
shr
xchg
movs
fstp
push
clc
inc
add
out
mov
loope
stos
call
add
mov
mov
addr16
fs
adc
lods
and
and
ja
(bad)
stos
idiv
leave
jae
in
jnp
sbb
data16
pop
pushf
push
mov
add
hlt
in
jns
les
jmp
lea
(bad)
aaa
ss
xchg
push
fscale
lods
push
push
add
add
loope
lods
cmp
repnz
lods
(bad)
mov
mov
jmp
sahf
call
mov
jnp
movs
(bad)
cmps
push
fisttp
cmp
pop
mov
add
or
mov
cmp
mov
retf
pop
jmp
out
push
out
(bad)
xor
bound
dec
inc
or
mov
outs
mov
lods
cmp
shl
mov
jmp
pop
clc
repnz
popf
inc
test
ss
cmps
cmps
mov
xor
xor
jmp
mov
shr
sbb
les
and
cmp
adc
aas
mov
iretw
imul
in
mov
aas
aad
xchg
in
inc
test
pop
and
fcomp
imul
or
in
mov
sub
daa
shr
repnz
xor
mov
add
cmp
mov
add
inc
stc
adc
ss
inc
jp
stos
or
pop
out
int
dec
push
out
dec
mov
add
add
jmp
imul
xor
movs
and
xlat
shl
lods
cmp
lods
int3
stos
fcom
inc
xlat
js
div
pop
rcl
cmp
push
push
nop
popa
out
aas
scas
inc
loop
inc
aaa
push
xchg
xor
cmc
jle
cmp
sti
mov
xchg
std
push
(bad)
mov
(bad)
cdq
jnp
sub
cli
push
and
(bad)
gs
jno
stc
mov
je
mov
mov
loopne
cmp
int
dec
lds
cmps
jno
lods
std
xchg
xor
je
mov
ins
sub
sbb
pop
movs
lods
fimul
xchg
inc
sbb
aad
outs
rcl
repz
rcr
sahf
test
pop
mov
adc
dec
call
stos
mov
pop
xor
stos
sub
in
mov
xchg
dec
pop
jmp
jmp
lods
arpl
pop
fwait
movs
cmc
shl
mov
jmp
adc
inc
(bad)
jns
sbb
inc
sbb
ja
mov
icebp
dec
sbb
dec
(bad)
push
ja
jg
out
or
push
repz
inc
out
test
add
cli
cmp
sub
mov
lods
mov
sti
mov
mov
cmp
retf
ins
sub
clc
dec
push
sbb
dec
ficomp
adc
test
out
in
cmps
pop
push
or
inc
enter
fsub
mov
xor
mov
arpl
push
jl
pop
mov
fld
dec
js
pop
push
lea
cmp
aam
mov
mov
mov
mov
sbb
push
cmp
fisub
xor
(bad)
xchg
repnz
sub
sbb
mov
in
test
mov
leave
xchg
shr
push
(bad)
push
cwde
out
js
jns
xchg
jae
pop
ja
int
cmp
icebp
(bad)
movs
outs
inc
cwde
xchg
std
fwait
outs
dec
sbb
mov
dec
xor
ins
les
add
mov
push
out
pop
(bad)
mov
inc
imul
push
sub
xor
aad
(bad)
retf
in
push
addr16
xchg
mov
cdq
(bad)
mov
xchg
xchg
pop
push
shl
and
rcr
sbb
imul
inc
pop
pop
imul
push
fist
minps
aam
mov
cmp
sbb
and
adc
retf
add
sti
gs
sub
int3
or
ret
jno
loopne
enter
mov
dec
mov
out
sbb
sub
xchg
es
ror
add
push
dec
inc
xchg
xlat
scas
jecxz
or
arpl
leave
jb
xor
mov
sbb
out
adc
jae
mov
(bad)
into
int3
mov
mov
ror
add
add
jae
in
mov
ficomp
les
(bad)
ins
cmp
in
or
add
daa
repnz
ret
inc
inc
pop
xchg
mov
pusha
lock
xor
mov
pop
pop
jmp
mov
sahf
repnz
inc
jmp
cs
addr16
jnp
xlat
imul
mov
push
adc
inc
mov
je
and
in
out
pop
push
fsubr
jmp
call
sbb
sbb
mov
xor
repz
ror
test
sub
mov
mov
movs
mov
add
dec
push
mov
sbb
rol
adc
push
push
ss
mov
xchg
add
les
push
fmul
add
inc
mov
mov
hlt
mov
sbb
pop
xor
xlat
ror
jmp
js
mov
popf
jecxz
adc
adc
idiv
cs
pop
mov
pop
mov
lea
shl
scas
test
mov
adc
push
int3
sub
les
in
pop
stc
lock
mov
rol
ins
pop
inc
xchg
ins
int3
ja
(bad)
mov
imul
cdq
stc
xor
adc
push
push
cmc
outs
test
dec
jmp
ja
ss
addr16
(bad)
push
std
sub
mov
mov
mov
dec
cmp
mul
out
dec
sti
push
scas
adc
mov
push
aad
sbb
sbb
in
bound
push
and
dec
cmp
out
sbb
inc
mov
fincstp
xchg
cmp
cli
inc
sub
stos
cmp
mov
mov
and
push
fldz
ss
mov
ss
push
ins
mov
js
js
adc
int
sbb
das
dec
(bad)
cdq
das
add
cmp
js
ins
sahf
frstor
mov
xor
test
adc
outs
lods
mov
je
iret
sahf
push
or
push
jmp
jno
jmp
pop
jnp
stos
inc
repz
aaa
push
push
fmul
ins
scas
daa
lea
mov
xor
test
popa
xlat
mov
pushf
pop
mov
shl
dec
lea
out
push
lods
iret
lods
xchg
sahf
test
sub
scas
leave
lods
xor
je
nop
or
das
lods
or
ret
or
add
mov
out
cmps
cmp
jg
leave
or
mov
jmp
add
mov
das
and
in
pop
ins
adc
stos
jno
sti
in
sub
dec
fwait
inc
cld
adc
es
sahf
push
push
cmp
imul
mov
pop
sub
call
ins
mov
cmp
pop
jl
cmp
jae
mov
fisttp
out
xlat
scas
or
out
and
cmps
ret
mov
lds
cmp
inc
xchg
dec
fst
imul
fcom
je
jne
cmp
sub
push
push
cmp
adc
leave
and
ins
sub
jl
out
pop
xlat
sub
outs
arpl
and
push
mov
mov
ss
sbb
cdq
cmp
cli
add
loope
cmp
mov
dec
stos
and
(bad)
loopne
aam
push
add
mov
pusha
cmp
shl
dec
mov
(bad)
and
movs
or
faddp
pop
test
lds
cmp
out
xor
sbb
(bad)
call
and
(bad)
adc
adc
adc
pop
mov
fild
scas
or
les
push
pop
out
cmp
jmp
or
mov
sub
mov
cs
cmc
xor
xchg
or
imul
mov
outs
out
out
adc
xchg
loope
into
adc
mov
pop
jg
push
call
nop
adc
pop
call
test
mov
xor
retf
popa
jns
push
pusha
inc
mov
jmp
adc
or
mov
add
or
not
jecxz
fstp
ja
push
jo
or
(bad)
jae
imul
or
sub
push
mov
dec
popf
(bad)
iret
mov
(bad)
mov
cdq
and
cmp
enter
mov
hlt
jnp
jl
out
(bad)
hlt
mov
in
loopne
cmp
pop
fs
mov
mov
cmp
sub
pop
sub
push
sub
scas
test
popa
sub
cmp
or
jno
sub
jno
imul
inc
ret
add
xchg
fsub
ror
add
mov
cmc
xchg
push
leave
sbb
hlt
bound
inc
fstp
scas
out
int3
xchg
xor
jo
aaa
sub
daa
nop
imul
fisub
or
or
or
push
(bad)
xor
std
xor
push
sub
jl
mov
xchg
pop
out
movs
loop
(bad)
int3
popf
and
sub
or
inc
loope
cwde
sbb
jne
fs
inc
and
inc
ucomiss
jne
adc
mov
stos
cld
dec
add
and
push
mov
sub
pop
mov
mov
lods
xchg
xchg
mov
retf
cmp
push
mov
and
test
into
or
ror
jae
cwde
stos
test
mov
pushf
xor
test
pusha
xchg
je
mov
cmp
pop
inc
call
push
adc
cmp
add
mov
push
push
mul
xor
push
mov
gs
int3
(bad)
in
mov
mov
xor
add
xchg
scas
pop
sti
mov
mov
sub
ficom
mov
repnz
gs
mov
jg
sbb
loopne
mov
iret
loop
les
je
adc
jl
xor
js
jno
lods
push
out
adc
or
mov
sub
jl
xor
call
ss
xchg
cmps
dec
or
daa
les
xor
mov
mov
push
or
hlt
cli
mov
xchg
cwde
mul
cmp
inc
inc
pop
push
pop
dec
push
mov
movs
fnstsw
fisub
sbb
pop
ror
stos
mov
xchg
push
mov
cmp
ret
addr16
pop
add
dec
repz
retf
stc
add
dec
cli
rol
dec
(bad)
shl
repz
outs
dec
imul
push
cmp
sbb
out
pushf
mov
xchg
add
mov
push
mov
and
pop
push
push
mov
data16
push
call
push
sbb
inc
scas
ret
loop
lahf
mov
movlps
sbb
je
ret
ret
neg
cmps
(bad)
dec
jne
sbb
aaa
pop
or
jno
pop
mov
xchg
push
mov
jmp
mov
ret
enter
icebp
pop
inc
imul
(bad)
aas
push
stos
ret
pop
repnz
outs
cdq
les
fidivr
jp
push
sti
inc
mov
jno
ret
ret
cmp
daa
call
xor
cmp
ds
data16
dec
mov
jnp
xchg
in
mov
mov
sub
cli
push
mov
fsub
repz
and
xchg
push
fldcw
jnp
popa
mov
xor
(bad)
gs
or
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
mov
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
add
push
xor
aas
pushf
cwde
ds
fdiv
outs
cli
jo
mov
cwde
call
cwde
cwde
pushf
xor
cmp
push
rcr
repnz
jle
ja
xchg
add
sbb
fmulp
and
sti
cmp
sbb
lods
mov
in
jbe
sub
fistp
mov
or
push
arpl
stos
sbb
test
cmp
cdq
out
mov
jmp
xchg
dec
inc
div
jno
xchg
jecxz
push
xor
js
jnp
xor
test
cmp
mov
scas
sub
jnp
xchg
push
clc
xchg
xcrypt-cbc
cmps
(bad)
scas
jb
ret
sub
push
xor
bound
bound
aaa
jge
test
nop
sub
ds
inc
scas
sti
mov
outs
fcmovne
dec
(bad)
mov
jne
mov
jl
mov
mov
cmp
mov
loop
loopne
nop
jns
shr
xor
cdq
into
pop
fisubr
cli
push
mov
mov
in
mov
adc
neg
(bad)
mov
int3
int
fcomp
mov
out
ror
adc
in
enter
jo
jle
sub
(bad)
cld
rol
loopne
and
mov
fiadd
pop
hlt
sbb
mov
xchg
xor
mov
mov
pop
ds
out
mov
cmp
in
je
pop
imul
pop
stos
jecxz
xchg
int3
aam
lahf
jns
xor
pop
push
movs
lock
ja
sub
xor
mov
outs
(bad)
or
cmp
out
and
inc
imul
int
popa
lds
js
ret
push
fld
mov
lock
xchg
iret
cld
jge
rcr
dec
aam
imul
xor
pop
push
sub
add
xchg
leave
pop
xor
out
xchg
not
sbb
xchg
gs
push
adc
add
ret
(bad)
cld
or
cwde
jo
add
mov
jno
out
cmc
scas
pop
jnp
(bad)
mov
jp
icebp
cmps
jmp
clc
add
push
cmp
fdiv
jge
push
cmp
mov
push
push
sbb
movs
pop
fiadd
(bad)
push
xchg
loope
jmp
jmp
push
cmp
mov
fdivp
xor
jae
pop
push
loope
test
cs
div
push
push
sbb
outs
adc
jne
fsubr
adc
pop
mov
sub
arpl
ss
push
sub
push
stos
rcr
and
mov
retf
xchg
sbb
jecxz
xchg
add
test
in
aaa
repz
test
(bad)
(bad)
popf
inc
mov
pop
sbb
xor
ror
jne
inc
push
imul
jmp
pop
pop
push
pop
mov
jns
leave
mov
outs
jo
dec
push
sub
and
cmps
stos
and
inc
out
cmp
xchg
outs
push
out
les
mov
cli
shr
je
sbb
mov
jns
stos
iret
aaa
dec
out
add
inc
in
add
cs
cmp
sub
jmp
sub
repz
out
outs
addr16
push
push
push
pushf
xor
es
cmovbe
mov
pop
pop
outs
cs
dec
and
mov
xor
pop
nop
jmp
retf
(bad)
bound
mov
add
dec
xchg
fistp
fisttp
cmc
out
mov
or
rcl
stos
imul
mov
push
pop
mov
push
pop
imul
in
adc
out
lods
pop
push
inc
test
sub
stos
push
mov
adc
loopne
lds
mov
aaa
loope
rcl
add
inc
mov
aam
cli
pusha
ins
jo
jnp
enter
std
push
dec
mov
mov
mov
shr
jb
(bad)
pusha
add
mov
jmp
lods
push
rcl
sbb
xor
cs
aaa
aad
movs
jmp
dec
in
loopne
cmc
add
add
pop
cmp
jg
mov
frstor
(bad)
or
xchg
ret
sub
sub
ss
(bad)
jg
cmp
and
jns
jge
cmp
mov
pop
outs
push
adc
int3
sub
adc
xor
sub
stc
shl
push
jp
cmp
mov
retf
pop
mov
call
add
cmp
pusha
sti
shr
lea
loop
push
push
add
adc
push
jo
fwait
mov
mov
xor
nop
adc
stos
xor
aad
int3
inc
not
inc
jae
in
arpl
hlt
in
inc
xchg
mov
sbb
xor
mov
in
loop
ss
fwait
aaa
movs
bound
xor
cmps
adc
and
and
push
cmp
mov
sbb
lds
and
or
adc
xchg
int3
scas
dec
xor
sar
lds
fs
xchg
call
fisubr
imul
das
out
ficomp
add
not
jb
lods
xor
data16
movs
mov
ds
xlat
out
or
inc
addr16
dec
push
mov
fnstsw
repnz
shl
(bad)
mov
mov
xchg
es
inc
cmp
xchg
dec
jl
(bad)
inc
sbb
movs
push
mov
movs
stc
mov
pop
sub
aad
mov
movs
ja
int3
xlat
shr
outs
pop
ins
fcomp
jae
cmp
jns
adc
(bad)
vcvtpd2qq
mov
retf
mov
sbb
dec
neg
mov
jp
das
dec
sbb
mov
imul
mov
cmps
shl
pop
sbb
or
ret
push
cmp
into
imul
fs
out
and
inc
hlt
addr16
shl
outs
xor
pop
adc
or
adc
data16
imul
mov
ins
aam
cmp
sub
mov
push
hlt
mov
sub
enter
cld
retf
mul
sbb
jge
fdivr
test
push
rcl
jnp
inc
aam
in
mov
repnz
call
into
mov
or
jge
and
sub
mov
add
cmp
jne
mov
loop
mov
pop
call
cmc
scas
jle
dec
add
shl
je
sbb
jne
jg
ins
iret
fstp
jb
cbw
xchg
data16
xchg
stos
adc
cmp
int3
addr16
ins
inc
out
ins
mov
daa
loop
cld
inc
xor
or
mov
cmps
dec
push
rol
mov
icebp
sub
dec
sub
(bad)
jnp
sti
pusha
retf
outs
into
dec
repz
jne
inc
iret
add
sub
imul
push
push
(bad)
cmp
mov
repz
movs
mov
jp
sbb
xchg
cmp
adc
xchg
pop
and
xlat
push
sbb
mov
cmp
(bad)
cli
mov
loopne
push
inc
ins
fs
(bad)
jp
xchg
jb
and
cs
aad
fbld
xor
ds
call
mov
jae
imul
js
mov
cmps
iret
ret
mov
and
outs
cwde
xchg
and
sbb
mov
pushf
mov
jle
pop
loopne
add
ret
jmp
mov
aad
iret
stc
pop
enter
icebp
in
mov
dec
jmp
jne
xchg
ficomp
outs
jle
popf
jle
pushf
ds
(bad)
mov
aam
(bad)
out
rcr
int3
aaa
(bad)
movs
pop
push
mov
pop
scas
pushf
call
and
hlt
mov
or
retf
xchg
sti
stos
popf
std
movs
cmp
retf
sbb
mov
fst
test
xor
jne
ficom
jmp
dec
dec
cli
(bad)
inc
cmp
lods
push
xchg
lods
push
xchg
sub
sub
dec
retf
xor
(bad)
rcl
cmps
dec
mov
hlt
dec
int3
test
xchg
mov
xor
hlt
xor
shr
sahf
mov
jmp
xchg
ret
mov
popf
push
sub
or
pusha
and
pop
clc
inc
mov
sahf
inc
loopne
std
imul
push
jno
stc
rol
lods
test
mov
xchg
ret
aam
outs
xchg
aas
push
and
mov
dec
fidivr
cmp
(bad)
sbb
xchg
fadd
sahf
xor
cmp
cs
imul
js
mul
outs
dec
inc
jge
cmc
fwait
das
jecxz
mul
retf
lods
cmp
sbb
retf
jl
enter
mov
and
xlat
loopne
std
pop
outs
mov
ret
imul
sub
pop
test
mov
popf
jecxz
push
pusha
adc
adc
push
sar
imul
mov
mov
sar
pop
in
movs
push
dec
jmp
retfw
jbe
add
mov
imul
sti
mov
cmp
mov
mov
add
sbb
test
dec
enter
(bad)
mov
aam
xor
in
add
addr16
shr
mov
push
sbb
cmp
std
cmp
or
mov
(bad)
sub
jge
cs
ins
xchg
ret
pushf
mov
loop
fldenv
enter
mov
push
mov
xchg
lods
test
lods
aas
dec
mov
jge
add
dec
fdiv
or
sbb
pop
stos
fdivp
or
xchg
rol
push
test
fstp
xchg
rcr
das
mov
mov
in
and
into
in
loopne
push
inc
or
xor
xlat
div
retf
outs
or
jecxz
(bad)
retf
aaa
cmp
xchg
lods
(bad)
push
add
mov
jg
ins
les
movs
fadd
inc
hlt
mov
std
sbb
lahf
pop
push
das
nop
call
bound
sbb
xchg
xor
leave
dec
test
dec
icebp
int3
stos
test
xchg
gs
fcom
daa
inc
hlt
popa
mov
sbb
cmp
xchg
mov
mov
fs
jne
or
sub
cmps
xchg
or
daa
mov
add
dec
xor
pushf
push
jo
outs
xor
jmp
xchg
jmp
jmp
inc
mov
pop
add
sahf
adc
rcr
push
and
jb
jno
pop
push
pop
fisttp
inc
enter
enter
add
xchg
subps
adc
push
hlt
jge
fisub
out
in
ja
scas
xchg
iret
cmc
aam
stc
xor
push
test
xlat
mov
iret
push
in
push
cmp
jbe
lock
pop
pop
add
add
outs
cli
mov
popf
sub
mov
scas
mov
iret
mov
and
frstor
aad
xlat
jae
shufps
push
add
push
jle
dec
leave
pop
bts
cmp
sub
fs
push
push
xor
push
hlt
mov
ret
es
adc
nop
jl
loopne
rcr
(bad)
or
jae
fdivr
aad
and
lds
xchg
loop
and
fstp
dec
adc
iret
sub
jmp
aas
arpl
imul
inc
outs
or
into
dec
sub
setno
lock
push
sti
jae
imul
lods
das
sbb
loope
loopne
pop
retf
and
cdq
push
push
mov
sub
adc
div
mov
mov
and
ja
inc
ja
imul
jns
sub
out
jne
out
int
xchg
mov
and
mov
(bad)
mov
mov
gs
in
in
mov
in
jno
jp
cmp
inc
jmp
fcom
lea
push
push
lods
cld
jns
jnp
xor
rcr
stc
(bad)
cmp
iret
sbb
movs
mov
or
out
fiadd
dec
cmps
xor
dec
fnstcw
ret
scas
pop
adc
pusha
iret
dec
sub
pop
imul
xor
aaa
stos
fsubp
cld
(bad)
xchg
jg
dec
popa
pusha
mov
xchg
mov
mov
or
pop
idiv
dec
sub
(bad)
outs
(bad)
jmp
push
mov
retf
test
xchg
push
out
in
xchg
pop
leave
bnd
fnstcw
or
repnz
ins
test
cmp
xchg
mov
add
rol
aaa
xchg
iret
sub
dec
loope
fld
add
jae
aam
(bad)
add
sbb
ins
adc
test
cmc
mov
lahf
out
bound
xchg
(bad)
fmul
call
sub
ret
dec
xchg
xor
jp
in
adc
std
xor
sub
or
cwde
fbstp
push
movs
fs
iret
or
or
jae
xchg
push
cli
cmp
cmps
fsub
inc
pop
jbe
adc
(bad)
or
push
mov
cmps
dec
icebp
jmp
dec
xor
movs
rcr
aas
fld
cmp
pop
mov
sub
sbb
add
rol
fcom
sbb
loop
(bad)
fisubr
mov
ja
sub
lea
fyl2x
loop
pop
push
or
push
or
or
add
add
and
ds
test
push
ret
push
push
jmp
outs
popa
imul
jp
ror
ficomp
pop
movs
push
push
mov
pop
or
sub
jb
xor
(bad)
adc
sub
sbb
pop
les
add
xchg
push
add
arpl
xlat
jmp
lods
add
pop
sub
sub
in
mov
cmps
in
mov
lods
std
inc
test
adc
js
lods
retf
call
dec
std
out
inc
(bad)
mov
std
and
ss
jmp
movs
and
push
push
push
fwait
cdq
js
pop
dec
lds
ret
xor
xchg
pop
push
retf
ret
int
out
lods
ja
push
push
lock
push
pop
pop
xor
js
sar
cmp
dec
jge
mov
adc
sti
mov
jbe
mov
jae
cmc
jb
inc
xchg
arpl
movs
movs
cs
fnstcw
sub
pop
std
fst
ins
std
dec
cld
inc
mov
pop
sub
data16
pop
jl
sub
pushf
hlt
inc
outs
cmp
iret
xchg
and
cmp
leave
sar
mov
std
fsubr
les
stos
xchg
in
shr
ds
(bad)
cmps
retf
sbb
dec
adc
sahf
or
sbb
push
call
mov
push
xchg
aam
mov
cmp
add
jno
pop
jecxz
dec
sbb
aas
pop
stos
xchg
dec
dec
inc
sbb
push
loopne
mov
in
jl
jl
fld1
dec
pop
int3
inc
or
adc
outs
scas
mov
loop
adc
inc
aaa
daa
add
xchg
mov
lahf
cdq
dec
into
(bad)
push
fdiv
dec
out
bound
or
cmp
ret
and
aaa
pop
(bad)
sbb
loopne
clc
adc
dec
xlat
ss
jmp
xchg
xchg
xchg
pop
and
iret
out
test
sub
test
cwde
pusha
sbb
dec
clc
jno
mul
imul
aam
mov
ror
jns
stc
mov
fwait
mov
add
out
shl
retf
cmps
add
jb
pop
in
cli
and
dec
jne
xor
push
push
mov
into
dec
xchg
cmp
lock
int
loope
mov
fcmove
adc
lahf
call
(bad)
sub
data16
les
xchg
cmp
ins
dec
jp
sbb
or
mov
mov
mov
jmp
into
push
mov
pop
mov
outs
outs
fstp
mul
sbb
out
ds
xor
mov
or
xlat
test
bound
push
fwait
jns
adc
pop
and
or
cmc
ret
dec
aad
(bad)
push
cmp
xchg
mov
mov
in
jmp
or
inc
jmp
xchg
push
or
sbb
pop
sti
in
jecxz
inc
test
mov
sub
jmp
mov
pop
sub
mov
sar
pop
loopne
add
jmp
and
pop
lock
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
jne
imul
into
push
add
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
fmul
sahf
cwde
outs
xchg
hlt
sbb
aam
ds
fcmovb
cdq
call
out
cmps
cmp
imul
loope
std
aas
jle
(bad)
adc
nop
xor
rcr
int
or
jecxz
dec
cwde
jbe
dec
xchg
bound
sbb
inc
xor
(bad)
push
jle
adc
cmp
gs
into
pushf
xchg
scas
xor
mov
or
pop
neg
jge
mov
push
in
sub
inc
stos
sub
push
push
(bad)
stos
daa
cli
dec
mov
loopne
or
lahf
sbb
sar
cmc
push
gs
or
cmp
or
xchg
mov
pusha
hlt
jae
retf
fidivr
stc
aaa
test
stc
outs
pop
repnz
and
enter
adc
stos
jg
and
dec
in
jmp
ja
fsub
mov
hlt
adc
jg
dec
add
push
jecxz
(bad)
movs
rol
int
cwde
pop
push
repnz
loop
adc
arpl
outs
dec
jmp
pop
push
mov
add
xchg
jbe
jmp
or
xor
xchg
jmp
sub
sub
enter
xchg
or
loope
mov
in
lds
inc
es
fldcw
es
mov
popf
jb
test
cld
addr16
cdq
mov
repz
sbb
repz
xor
outs
xchg
xchg
nop
xchg
out
lods
imul
cmp
sub
(bad)
movs
jns
jnp
mov
mov
or
mov
mov
adc
xor
shl
mov
ror
sbb
out
mov
mov
add
mov
mov
xchg
jne
or
sbb
pusha
and
(bad)
pop
fwait
bound
(bad)
sbb
stos
push
jne
stc
ret
es
jo
mov
jno
daa
and
adc
jp
xchg
out
je
pop
repnz
movs
les
xor
xchg
jmp
loop
std
dec
in
int
adc
out
int
cmp
pushf
movs
xor
ret
cld
stos
adc
sar
pcmpgtb
xor
clc
into
dec
daa
mov
pop
test
shl
sbb
ss
adc
xor
sbb
leave
pop
cmp
mov
sub
inc
inc
cmps
sbb
jle
into
adc
or
xchg
nop
jl
data16
jl
xor
dec
stos
mov
inc
cmps
add
out
out
cmp
jmp
mov
gs
mov
dec
call
call
xchg
and
outs
addr16
xor
push
test
mov
add
clts
(bad)
mov
and
ret
jnp
adc
int3
sbb
fild
imul
hlt
pop
fnstsw
rcl
fldcw
js
cwde
jecxz
ret
pop
jmp
inc
xlat
call
int3
fst
jne
mov
pusha
xor
lea
shl
push
neg
inc
lock
popa
loopne
sub
scas
add
not
or
fistp
in
fldenv
fmul
and
lock
dec
adc
dec
das
jnp
pop
add
shl
cwde
cdq
(bad)
outs
into
movs
popa
arpl
out
pop
nop
inc
mov
adc
dec
(bad)
dec
pop
dec
outs
jp
jns
movs
cmp
ins
mov
cmp
jmp
ret
lea
out
lods
add
sub
mov
clc
sbb
cwde
std
add
adc
aad
rol
mul
hlt
imul
dec
mul
hlt
(bad)
rcr
mov
cmp
cmp
repz
push
and
pop
stc
stos
retf
cdq
cmp
inc
and
(bad)
mov
mov
lea
mov
adc
fiadd
fbstp
push
mov
iret
jo
mov
(bad)
fist
test
mov
mov
scas
jmp
js
mov
stos
leave
jg
jle
push
scas
fadd
in
shr
aas
cdq
jle
sti
dec
repnz
mov
xchg
dec
fidiv
push
jmp
arpl
shr
jae
(bad)
xor
out
dec
push
retf
xlat
movs
dec
jp
xchg
call
mov
aad
dec
aad
aas
mov
call
xor
cmp
push
sub
push
cmp
popf
xchg
ficomp
inc
mov
fisttp
dec
movs
cmp
leave
aad
ror
adc
fs
push
icebp
mov
dec
xchg
jmp
out
lods
scas
fwait
out
leave
shr
xor
mov
push
xchg
cwde
and
clc
in
mov
movs
mov
mov
pop
std
hlt
push
dec
add
ins
pop
push
rol
push
xchg
fcomp
fiadd
jmp
push
jle
movs
enter
into
outs
test
add
jmp
jb
fdiv
out
pop
outs
adc
gs
fwait
call
out
cmps
dec
cmp
sub
in
and
cmp
(bad)
jl
arpl
and
pop
cs
mov
push
push
mov
mov
xchg
jl
popf
push
fisttp
jbe
fucomip
cmp
xchg
fisub
call
pop
push
pop
add
push
pop
(bad)
cs
lds
xchg
rcl
test
jmp
sbb
das
pop
pushf
push
call
daa
jge
inc
xchg
pop
sub
clc
pop
xor
or
pop
jno
in
mov
cs
cwde
xchg
inc
mov
mov
daa
add
(bad)
out
arpl
imul
fbld
dec
xchg
pop
rol
sbb
jmp
addr16
or
xor
rol
cmp
jp
sbb
jo
cli
lods
inc
and
enter
cmp
dec
ret
pop
std
xchg
jne
in
ret
or
sub
jp
mov
adc
(bad)
sti
test
mov
pop
out
(bad)
push
aaa
and
jl
dec
pop
mov
xor
or
dec
loopne
adc
push
adc
jns
cmp
jnp
imul
test
out
xchg
gs
xchg
(bad)
nop
pushf
test
aaa
push
xchg
scas
test
and
sbb
dec
adc
ret
mov
(bad)
and
(bad)
push
mov
scas
sti
add
sbb
out
(bad)
push
mov
in
dec
sub
cmp
add
cmp
dec
in
jge
sahf
test
push
push
out
pop
or
(bad)
(bad)
outs
in
cdq
gs
mov
ja
(bad)
mov
shl
sbb
out
bound
out
in
mov
push
adc
push
cli
cmp
call
cmp
movs
int3
mov
ja
cli
clc
xor
cmp
or
add
push
jnp
xchg
pop
mov
fisubr
inc
call
inc
sti
clc
sub
aad
sub
out
daa
add
jmp
jmp
mov
(bad)
and
sti
js
xchg
sar
cmps
push
inc
sbb
fsubr
in
dec
popa
outs
push
retf
mov
xchg
jp
rcl
and
imul
fidiv
loopne
(bad)
fcomp
clc
call
pop
sbb
mov
in
cmp
mov
push
pop
fmul
gs
inc
fild
and
adc
push
inc
dec
(bad)
aaa
int3
mov
sub
pop
mov
hlt
mov
adc
dec
sub
mov
repz
arpl
iret
jb
movs
jo
sbb
sbb
inc
stc
mov
mov
daa
out
and
in
fild
cmc
(bad)
dec
or
adc
sbb
mov
sbb
call
adc
xchg
std
jmp
push
push
xor
push
sub
outs
or
push
dec
jns
aas
pushf
jecxz
jmp
push
enter
cmp
xor
mov
leave
call
clc
pop
xchg
jmp
pop
xchg
mov
mov
ret
cmps
push
add
push
sbb
and
pop
xor
test
std
push
jno
out
(bad)
pop
das
dec
sub
iret
cmp
cmps
call
jnp
cmp
sbb
mov
sbb
out
lods
mov
xchg
scas
inc
jle
shr
test
adc
pop
jmp
(bad)
leave
and
inc
sub
sbb
shl
and
adc
pop
mov
cmp
xchg
add
ins
adc
fld
xchg
out
fldenv
mov
jecxz
inc
mov
leave
fistp
xchg
xchg
lock
or
enter
and
bound
push
leave
nop
fsubr
ret
in
fld
cs
cmp
mov
int3
aaa
jnp
push
xor
ret
mov
into
jae
movs
cmps
mov
mov
idiv
repnz
xchg
add
into
push
aam
retf
push
inc
inc
loop
pop
neg
and
ror
jb
daa
imul
cmps
xchg
clc
dec
(bad)
leave
lods
addr16
movs
inc
lods
mov
sub
outs
outs
sbb
jl
adc
inc
imul
daa
pop
cmc
imul
sub
mov
out
mov
inc
test
sub
test
out
xchg
xchg
adc
and
lods
xlat
mov
add
mov
sbb
adc
push
ds
jmp
aas
dec
cmp
mov
sub
push
scas
clc
(bad)
je
cmp
stc
leave
out
and
xlat
cmps
int
jl
hlt
mov
loop
rcl
gs
iret
pop
dec
xor
mov
dec
enter
clc
xchg
mov
lea
push
jp
aad
fs
shr
adc
dec
cmps
push
mov
cmp
hlt
push
nop
cdq
cmp
mov
dec
(bad)
add
xchg
inc
add
adc
push
adc
or
dec
test
inc
dec
pop
bound
std
rol
or
jno
push
rcr
scas
mov
movs
dec
xor
sub
inc
fmul
pop
sub
les
lahf
dec
sti
sub
mov
ret
jl
lds
add
scas
adc
sub
test
xchg
mov
hlt
fs
fldcw
dec
sub
sub
pusha
sbb
sbb
cli
mov
pop
fs
push
loop
shr
(bad)
loop
push
sub
dec
cs
out
add
ins
mov
cmp
(bad)
jno
int3
inc
(bad)
into
mov
scas
mov
xchg
mov
add
xchg
les
sub
or
mov
test
cmc
mov
add
ja
pop
in
scas
jecxz
jle
inc
aad
shl
pop
sti
(bad)
push
xchg
jecxz
push
cwde
mov
push
(bad)
push
mov
mov
add
cmc
imul
jmp
out
aam
retf
sti
lods
adc
push
jecxz
mov
mov
out
(bad)
pop
or
mov
call
mov
adc
movs
adc
mov
cdq
push
ficomp
(bad)
les
pushf
sub
into
push
aaa
daa
lock
push
pinsrw
cmp
jecxz
lods
dec
sbb
stc
lods
in
lahf
add
jnp
or
arpl
xchg
cmp
test
push
and
push
xchg
data16
mov
mov
ins
(bad)
push
dec
stos
ss
mov
fistp
dec
(bad)
imul
arpl
(bad)
and
call
lods
pop
mov
lahf
dec
cwde
daa
js
pop
(bad)
frstor
and
fmul
push
icebp
push
pop
js
jae
out
std
shr
inc
jno
cmp
lock
add
xchg
add
lods
fadd
xor
not
scas
jb
pop
std
push
mov
pop
loopne
jb
mov
pushf
aad
jmp
ds
cwde
xchg
inc
scas
loop
mov
cmps
push
ret
test
mov
or
sbb
jg
push
xor
aad
arpl
mov
int3
jnp
(bad)
ja
and
cmc
lods
cmp
sbb
add
dec
xor
shl
sbb
cmp
add
jmp
pop
jmp
xchg
pop
retf
mov
pop
xlat
fcom
bound
movs
add
sbb
ins
loopne
aad
icebp
or
mov
add
dec
jnp
stc
adc
movs
dec
cmp
loop
lahf
fmul
cmps
shr
jae
mov
scas
fdiv
cmp
pop
pop
(bad)
or
sub
int3
stos
push
adc
fs
retf
push
adc
add
imul
and
sub
lds
and
pop
sbb
inc
adc
dec
mov
in
push
popf
movs
(bad)
fs
sub
repnz
ins
out
mov
add
add
inc
out
mov
stos
fist
in
mov
cdq
fild
xchg
fwait
mov
shl
movs
into
or
mov
shl
jmp
mov
or
jle
sub
sar
mov
adc
shl
mov
into
push
push
test
cwde
sub
mov
fwait
scas
cmps
mov
scas
mov
in
sub
repz
iret
lods
pop
mov
sahf
ins
(bad)
push
xchg
push
dec
mov
pushf
test
mov
push
pusha
push
sub
out
inc
mov
in
sbb
in
ins
mov
rcl
cmp
mul
or
nop
adc
std
cld
xor
sub
push
xlat
mov
adc
xchg
pop
lahf
int
pushf
inc
cmp
or
pusha
pop
in
cmp
sbb
int
cmp
(bad)
add
or
data16
aaa
mov
jmp
inc
cmc
inc
sub
(bad)
mov
fistp
mov
xchg
out
dec
xor
sub
mov
jne
frstor
fnstcw
imul
sbb
mov
push
xchg
or
imul
sar
repnz
push
mov
das
inc
lock
dec
dec
sub
cli
sti
mov
push
inc
push
into
or
scas
xor
std
es
lahf
stos
fwait
inc
xor
and
stc
pop
xchg
and
test
loop
cwde
xchg
lds
mov
aaa
pop
fidivr
fnsave
loop
push
pop
xor
mov
jbe
or
scas
xor
scas
push
jbe
xor
lods
and
mov
xor
cdq
push
outs
push
enter
jg
test
mov
jne
pushf
cdq
pushf
loope
es
mov
(bad)
push
ds
movs
xchg
sbb
mov
inc
loopne
pop
push
out
je
cmp
js
in
pop
leave
lds
es
leave
(bad)
xchg
dec
out
sbb
loope
rcr
push
or
lds
jmp
sbb
(bad)
stc
mov
or
loope
adc
ficomp
mov
(bad)
lock
or
int
mov
mov
cmps
fcmovnbe
add
bound
or
aaa
fist
test
adc
lods
pop
push
pop
jae
lods
inc
imul
xor
repz
out
add
sub
sub
ins
test
jl
jns
xchg
lahf
repnz
ja
movs
pop
fwait
shl
jmp
out
clc
push
(bad)
rcr
mov
mov
jo
mov
cli
and
mov
addr16
test
mov
sahf
aad
cmp
push
fucom
ins
call
clc
lods
xchg
cmps
mov
sbb
repz
mov
jnp
jno
jns
pop
push
out
mov
mov
gs
push
pop
pop
retf
mov
xchg
xchg
lock
loopne
cwde
pop
sahf
sbb
fs
test
clc
sub
data16
(bad)
in
jnp
push
dec
jp
lock
push
jno
adc
add
push
pop
int
xchg
pop
or
jmp
dec
jb
stc
leave
add
cmc
and
cmp
ss
ins
add
push
adc
add
ins
ds
mov
xchg
jno
in
stos
sub
pop
pop
or
(bad)
(bad)
sbb
in
sub
adc
std
sub
xchg
in
jmp
rol
movs
outs
pop
sbb
scas
fnstsw
jnp
mov
addr16
mov
pop
mov
inc
or
sub
mov
pop
and
iret
lahf
or
sahf
fwait
jno
pop
and
nop
mov
mov
and
pop
(bad)
stc
out
jg
stc
out
jg
pop
add
pop
sti
fwait
push
push
fiadd
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
(bad)
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
jne
xchg
or
xchg
pushf
aam
push
imul
movs
adc
test
pop
add
je
dec
mov
(bad)
jecxz
and
pop
add
push
pop
bt
sbb
daa
aam
std
popf
sbb
pop
pop
cli
les
add
(bad)
or
nop
or
call
push
mov
in
or
add
adc
push
fwait
and
les
mov
xor
sbb
int
fucomi
pop
leave
dec
adc
dec
mov
loop
lahf
pop
xor
mov
je
jo
rol
test
push
(bad)
jmp
cmp
dec
cmp
mov
mov
rcr
popf
mov
dec
sbb
idiv
mov
into
jg
dec
fcmovnb
data16
sbb
push
frstor
dec
test
sahf
cld
ret
sti
add
in
jno
out
fmul
cmp
xor
jne
(bad)
dec
cmp
sbb
dec
push
jmp
add
jecxz
mov
adc
mov
jbe
pusha
repz
sbb
mov
mov
mov
repz
and
in
and
in
ins
iret
xchg
ins
mov
mov
in
xchg
prefetchnta
das
sahf
cdq
dec
adc
lods
out
inc
sub
jmp
inc
sti
bound
jge
xor
xchg
in
sti
jbe
sahf
(bad)
mov
je
outs
jae
jg
fnstenv
std
cmps
xor
aas
mov
sbb
stos
xor
xlat
pop
and
repnz
jmp
stos
mov
adc
ss
mov
les
mov
cdq
xchg
push
sbb
xchg
sbb
sbb
dec
mov
ds
pop
test
or
retf
pop
mov
retf
std
mov
in
xchg
cmp
or
(bad)
fs
cli
stc
mov
sub
sub
stos
inc
ror
jo
sub
(bad)
jecxz
push
dec
adc
mov
adc
sahf
stc
dec
cmp
sbb
add
pop
mov
and
push
gs
mov
ins
arpl
ss
scas
outs
xor
test
in
dec
std
add
ud0
or
and
das
jae
push
or
add
mov
add
mul
jmp
pop
jb
stos
jb
outs
jne
mov
mov
sub
cmp
fs
sub
(bad)
out
repz
rcr
jo
mov
aas
std
mov
gs
fidiv
sbb
cmc
push
outs
mov
mov
pushf
cmp
pop
sahf
out
cmp
pop
sub
inc
(bad)
hlt
xchg
jns
out
fist
adc
out
mov
adc
fist
xchg
pusha
std
xchg
xor
in
fwait
jmp
imul
std
cmp
pop
mov
cmp
inc
rcr
and
mov
pop
xchg
scas
popa
push
mov
sub
and
cmp
and
movs
call
and
mov
iret
jle
mov
mov
xor
cs
push
push
stos
xor
sub
call
mov
xor
or
js
fld
test
sub
ins
shl
jp
push
or
dec
mov
jecxz
(bad)
outs
rcr
cmp
shl
shl
cmp
jae
test
push
and
adc
lds
int3
fcom
pop
or
sub
fild
idiv
lods
mov
je
inc
loope
dec
jnp
or
test
add
adc
xchg
sub
ins
into
pop
cli
xor
rcl
ja
ret
loop
mov
mov
out
rcl
push
aaa
xor
cld
je
jmp
sub
dec
out
loopne
dec
inc
mov
mov
mov
std
mov
popa
xor
sbb
mov
cs
sbb
xlat
popf
mov
mov
or
(bad)
xchg
js
aaa
push
sti
out
into
popa
adc
xchg
out
mov
sub
push
push
sub
fsub
daa
outs
mov
xor
cld
outs
jnp
lahf
or
xor
std
jb
xchg
push
push
outs
dec
cmp
or
imul
or
pop
jae
sub
mov
mov
xchg
ffree
and
push
in
jnp
pop
test
loope
ins
enter
xor
push
push
push
jecxz
in
pop
cmp
pop
rcl
cli
sbb
sbb
imul
push
das
ret
xor
int
cmps
aad
pop
mov
xor
mov
dec
dec
push
cmp
xchg
cmc
sbb
(bad)
push
adc
sub
fnsave
xor
or
mov
pushf
push
in
mov
cmp
ins
test
or
or
jne
gs
cld
jecxz
dec
sbb
cmc
in
push
sub
and
in
sbb
into
je
ds
jb
enter
out
xor
retf
xchg
js
lods
test
daa
pop
int3
loopne
xor
jg
inc
sbb
and
pop
jmp
aas
xchg
aad
sbb
rcl
jnp
stos
(bad)
cli
repnz
hlt
mov
dec
dec
xadd
sahf
xchg
fdiv
xor
repnz
inc
(bad)
iret
addr16
cdq
inc
xor
jnp
(bad)
jg
js
jmp
inc
je
or
push
pop
ds
dec
jp
es
xlat
test
std
mov
(bad)
inc
cld
retf
js
or
sub
dec
pop
pop
mov
xchg
and
fadd
adc
jae
xor
dec
jl
sub
lea
test
jns
add
adc
sub
cmps
push
jns
pusha
inc
jno
mov
mov
xor
ret
scas
mov
xchg
or
into
mov
dec
fiadd
test
ins
dec
inc
inc
test
ins
pusha
mov
sar
jg
dec
cmps
addr16
aas
lds
fstp
pop
fmul
cli
mov
repnz
cdq
shl
ds
push
mov
pmuludq
pop
add
movs
outs
sbb
mul
hlt
mov
mov
jns
inc
xchg
dec
addr16
aam
sub
movs
mov
xor
push
clc
mov
sbb
sbb
adc
sbb
rol
ins
dec
xchg
push
sbb
xchg
int3
lds
in
pop
inc
je
outs
pop
sub
lods
rcl
sbb
adc
push
fdivr
loope
and
xchg
enter
sub
lods
jb
(bad)
repnz
inc
xor
in
jge
ss
mov
mov
ficomp
inc
dec
fidivr
and
icebp
and
jp
push
int3
xchg
fs
addr16
add
sbb
es
aas
daa
and
loopne
ret
cmp
xchg
xchg
mov
cmp
inc
push
jb
sar
mov
es
pop
xor
adc
pop
and
jle
cld
mov
mov
pop
adc
pop
fbstp
call
sub
fbstp
fcmovb
mov
in
xchg
xchg
dec
call
push
adc
(bad)
imul
(bad)
push
leave
test
dec
jnp
sub
out
pop
loop
addr16
repnz
fdiv
push
dec
sbb
inc
(bad)
call
outs
ds
lds
fistp
loope
sub
jp
sub
mov
mov
sbb
sub
dec
stc
jne
mov
and
mov
or
in
inc
mov
adc
xchg
xchg
sbb
mov
cld
fprem
popa
ins
adc
inc
rcl
adc
loop
dec
inc
ds
aad
aaa
leave
dec
in
pop
mov
in
fnstenv
clc
push
mov
fwait
loop
jmp
pop
sbb
(bad)
jge
pop
call
push
fistp
mov
scas
xchg
cmp
cmp
mov
jmp
jae
adc
push
sbb
dec
mov
loop
pop
arpl
mov
mov
(bad)
fwait
or
repz
dec
comiss
scas
(bad)
lods
sub
mov
sub
cmp
xchg
push
push
test
add
xchg
jge
das
pop
pminsw
(bad)
out
mov
cmp
in
dec
fisttp
popf
hlt
cdq
cmps
cli
inc
or
xor
scas
cmp
js
mov
pop
std
repnz
data16
popf
lods
inc
imul
mov
xchg
in
std
pop
push
cmp
mov
push
pop
add
bound
out
push
and
push
add
aas
jp
enter
sti
shl
mov
pop
sbb
xlat
inc
pop
call
inc
das
mov
jns
dec
push
movs
es
mul
sub
sbb
ds
cmps
jnp
add
fadd
pop
push
cmp
cmc
fstp
mov
in
in
sti
mov
and
dec
and
mov
daa
or
mov
fst
dec
mov
popf
outs
xor
frstor
jge
mov
daa
mov
test
call
push
mov
xchg
push
mov
dec
mov
and
sbb
xchg
gs
adc
jo
xchg
fisubr
mov
popf
adc
pop
mov
stc
mov
loopne
in
js
rol
adc
lea
fwait
(bad)
jmp
dec
into
cwde
jp
data16
test
mov
bound
std
jle
test
imul
mov
outs
push
jmp
sbb
fisub
xor
test
jmp
and
pop
or
fldenv
push
scas
stos
mov
pop
test
stc
test
(bad)
call
or
jmp
ror
movs
jnp
mov
cld
xor
inc
shl
xor
rol
add
dec
xchg
inc
mov
and
(bad)
pop
out
call
inc
mov
add
pop
shr
push
jns
out
cmp
sahf
mov
retf
mov
stos
pop
sahf
shl
adc
fwait
retf
fisubr
mov
daa
xlat
xor
and
mov
inc
stos
xchg
mov
jle
int
arpl
repnz
xlat
mov
or
enter
xchg
out
daa
xchg
not
cwde
sbb
mov
cmps
bswap
in
cmps
mov
mov
pop
lahf
mov
outs
cmp
retf
dec
retf
movs
dec
outs
repnz
pusha
test
dec
jg
test
in
out
mov
mov
xchg
mov
dec
push
sbb
pop
adc
pop
inc
popa
js
or
in
add
stc
ror
aad
sahf
add
cli
icebp
adc
in
pop
push
test
pop
lods
lahf
dec
push
push
outs
push
stos
in
icebp
jmp
dec
adc
ins
mov
out
sbb
inc
movs
in
nop
mov
xor
mov
adc
in
cmps
ds
and
sub
out
out
sbb
outs
gs
pop
mov
jl
mov
(bad)
mov
lahf
popa
adc
xor
push
xlat
sbb
loop
bound
or
in
sahf
jg
sahf
xor
mov
xchg
je
dec
scas
mov
jp
outs
gs
push
gs
dec
repz
lock
js
gs
dec
xchg
rcl
neg
xor
std
(bad)
int
fiadd
mov
pop
cmps
mov
cmc
imul
test
scas
sti
cdq
xchg
jmp
mov
mov
retf
icebp
sub
cdq
shl
inc
pop
push
dec
shl
gs
add
repnz
subps
pop
jae
repz
icebp
sti
add
mov
mov
fidiv
xor
mov
sub
cmp
and
(bad)
cli
das
rcr
mov
or
push
pop
(bad)
outs
(bad)
pop
movhps
mov
mov
leave
pop
mov
and
and
push
add
and
xor
inc
pop
scas
mov
dec
inc
popa
sub
pop
mov
sbb
shr
xchg
pop
pushf
les
fwait
push
lods
nop
cmp
sahf
gs
and
cmps
pop
mov
push
jmp
push
fdivr
test
jle
jbe
mov
xchg
mov
jecxz
dec
loop
std
ret
inc
adc
sbb
lahf
enter
push
dec
scas
inc
js
mov
hlt
pop
shl
dec
mov
push
aaa
arpl
(bad)
xchg
add
rcl
cmp
xchg
sbb
ss
imul
outs
or
jb
xchg
retf
adc
mov
fs
shr
bound
int3
test
xchg
dec
cli
movs
add
je
sbb
mov
cs
jno
and
pop
out
inc
rcl
lock
out
jb
add
jo
jp
jb
in
mov
mov
pop
push
sub
not
mov
cmps
xchg
add
inc
sbb
xchg
push
clc
fdivrp
xchg
xor
cmps
jmp
sbb
aaa
ss
inc
gs
test
mov
sbb
retw
mov
mov
lods
int3
xchg
mov
jp
lock
das
daa
fiadd
(bad)
out
js
dec
mov
ds
out
stos
adc
nop
aad
add
loope
sbb
xchg
jne
cld
movs
out
dec
inc
not
mov
inc
clc
push
sub
xchg
movs
arpl
jnp
(bad)
jne
mov
jne
mov
sar
sar
ss
shl
xor
dec
fldcw
mov
sbb
jnp
sub
xchg
hlt
mov
lahf
jg
mov
jb
jmp
mov
sbb
push
outs
dec
ret
mov
(bad)
mov
inc
rol
es
out
pop
in
xchg
mov
jnp
shr
mov
sti
fild
mov
aam
mov
fadd
jo
ds
sub
mov
lods
adc
pop
sahf
sub
mov
mov
pop
repz
fs
push
mov
xchg
sub
pushf
jp
jo
jns
mov
popf
push
mov
cs
inc
pop
and
xlat
ret
pop
es
xchg
dec
lahf
cli
sbb
cmp
shl
pushf
fwait
in
fdiv
repz
pop
cmps
pop
dec
fild
xchg
adc
fild
xchg
shl
in
jne
loopne
jge
dec
mov
mov
les
sahf
lahf
imul
inc
mov
sti
dec
fs
jns
dec
pop
dec
cmp
int3
or
sbb
pop
add
xchg
mov
lahf
cmp
imul
in
mov
jecxz
pop
mov
das
in
mov
jb
int
retf
dec
sub
movs
push
mov
pop
jmp
loope
imul
(bad)
pop
pusha
xchg
loope
sbb
jmp
cmp
xor
mov
dec
cvtpi2ps
mov
mov
pop
loop
and
mov
pop
enter
repz
mov
aas
mov
inc
pop
mov
scas
lea
inc
loop
adc
(bad)
popf
mov
inc
push
or
inc
fs
xor
test
into
aad
lahf
and
adc
pushf
cmp
ret
jnp
addr16
push
call
cmp
sbb
adc
movs
cld
push
repz
mov
jmp
aam
dec
pushf
mov
and
retf
sub
jbe
jle
cmp
mov
xor
xor
inc
js
or
cmp
std
outs
pop
cwde
test
arpl
inc
ja
xor
lods
shrd
sub
mov
jle
cmps
or
jns
int
loope
sbb
addr16
in
cmp
ins
fwait
push
icebp
sbb
mov
sub
aaa
xor
xor
xchg
repnz
aaa
bound
xor
push
sbb
fs
call
imul
loope
xchg
jg
and
pop
sub
sub
xor
add
imul
scas
pusha
test
fs
in
mov
and
push
(bad)
daa
push
add
and
fsubr
push
mov
aad
adc
enter
mov
adc
mov
mov
jae
lock
adc
xchg
lods
ret
sub
dec
out
loopne
(bad)
mov
shl
mov
icebp
mov
cmps
pop
in
mov
cmp
mov
stc
arpl
pop
jp
fsubrp
jns
mov
stc
out
jg
stc
out
call
add
inc
pop
or
xchg
arpl
lods
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cwde
out
cwde
push
cmps
cmp
icebp
xchg
shl
fstp
imul
cwde
xchg
push
(bad)
sbb
cmps
mov
aaa
addr16
and
sahf
pop
add
and
gs
inc
jp
xchg
inc
daa
or
leave
neg
dec
out
xlat
addr16
fwait
lock
and
jmp
imul
sub
mov
jmp
hlt
into
(bad)
mov
fs
sbb
rol
lods
dec
cdq
xchg
jo
jnp
cmps
fadd
and
es
fistp
sub
push
(bad)
mov
call
cmp
pop
clc
shl
fcom
xor
bound
stc
stc
xor
or
xchg
xor
push
aas
inc
pop
push
inc
mov
xchg
je
xor
add
aas
cld
inc
cld
rcl
sbb
or
pop
out
cmp
les
out
lds
or
inc
cdq
fdiv
or
dec
mov
dec
lods
xchg
mov
dec
cmp
inc
ja
les
cmp
rcr
jle
sub
xchg
mov
test
or
push
test
cmp
popa
out
test
data16
cmpxchg
movs
inc
jmp
les
or
dec
es
push
mov
or
mov
and
or
pop
sub
stc
out
ja
jp
loop
jo
addr16
cmp
and
cli
jb
outs
fldcw
mov
ds
mov
cmps
pop
mov
imul
imul
xchg
sbb
dec
jmp
aaa
sub
mov
arpl
jo
adc
loope
push
mov
push
push
inc
push
cmp
or
nop
in
and
adc
aaa
xor
jns
inc
mov
jmp
fild
mul
(bad)
rcr
test
sbb
push
addr16
sub
pushf
mov
imul
ins
(bad)
xchg
mov
cli
repnz
jmp
daa
dec
jne
jle
fwait
dec
cmps
nop
lahf
icebp
xchg
push
adc
pop
sar
repnz
out
sub
int
cmps
push
es
loope
sbb
xlat
fdivr
dec
cli
arpl
pop
pushf
scas
dec
cmp
call
lea
dec
pop
mov
scas
pop
out
pop
jmp
mov
or
cmp
and
xchg
ins
xor
call
xor
retf
mov
sbb
jbe
and
pop
div
cli
mov
dec
jno
mov
pop
rol
jo
popa
leave
cmp
dec
stc
(bad)
mov
jg
xchg
shr
mov
add
fsub
dec
inc
add
jmp
in
mov
or
mov
sar
pop
jnp
inc
es
call
in
shl
pop
dec
mov
add
ins
add
call
inc
add
sub
ds
aam
inc
ss
jno
xchg
adc
jne
arpl
(bad)
push
shl
or
xor
dec
in
fsub
mov
add
ret
pop
into
nop
arpl
jb
mov
and
or
adc
jl
sbb
dec
rcl
(bad)
icebp
das
jp
in
pop
mov
int3
pop
shl
sub
and
jne
je
test
mov
dec
xor
fsubr
inc
ror
sti
mov
dec
lahf
repz
pop
lods
sub
lahf
jae
or
jno
mov
fmul
push
mov
ss
stc
sbb
dec
mov
push
cwde
rcl
push
cdq
add
clc
pushf
fcom
mov
xor
sub
(bad)
adc
jne
aas
movs
fisubr
add
adc
(bad)
mov
std
mov
lods
fld
push
in
push
jb
test
jno
jb
add
pop
call
and
dec
or
cdq
cmc
mov
mov
mov
add
mov
cs
mov
popa
jl
mov
or
mov
push
fisub
cwde
pop
push
cmp
in
pusha
mov
xchg
sub
or
push
mov
pop
gs
xor
inc
and
jbe
xchg
ins
mov
test
pop
lds
jb
lods
push
mov
into
in
stos
sub
jg
cmp
div
sbb
jl
inc
sbb
les
repz
test
sbb
sub
or
inc
(bad)
sar
enter
jmp
sub
push
fs
fsubr
sub
movs
and
mov
ret
fsub
push
sbb
sbb
pop
jmp
(bad)
push
(bad)
xor
inc
dec
cmp
or
cs
repz
mov
sbb
and
ja
jno
fmul
dec
mov
dec
jb
push
cmp
popf
aas
lods
inc
jp
jge
ret
adc
inc
test
cli
mov
cmp
adc
jl
jb
int
aam
jb
or
jno
jns
dec
mov
sbb
cwde
sub
icebp
xchg
loop
mov
inc
adc
data16
add
pop
into
gs
popf
je
hlt
mov
dec
cli
push
cli
shl
push
mov
sub
in
(bad)
mov
xor
fistp
outs
into
mov
mov
jl
hlt
sbb
(bad)
dec
jg
mov
scas
pop
mov
inc
xor
dec
cld
ror
and
imul
mov
into
push
mov
bound
mov
xchg
retf
(bad)
mov
stos
outs
xchg
xchg
jecxz
adc
lds
adc
xchg
leave
repz
shr
out
xlat
repz
cmp
add
add
icebp
inc
mov
push
dec
jge
das
iret
or
retf
imul
mov
jae
and
vmptrld
or
xchg
loope
sbb
hlt
popf
xchg
jg
mov
dec
stos
lods
out
dec
sub
mov
or
retf
mov
xchg
aad
and
stos
ret
popa
xchg
jmp
shl
push
jbe
mov
mov
cmps
sub
adc
in
jp
pop
or
inc
int
notrack
and
dec
icebp
cdq
fiadd
in
gs
mov
lea
ret
pop
and
shl
push
outs
and
push
push
popa
xchg
pusha
xor
hlt
xchg
outs
and
adc
mov
loopne
cmp
popf
cmp
sub
rcl
push
das
dec
aaa
pop
and
test
adc
into
je
leave
jg
rcl
inc
int3
and
aad
daa
cmp
jmp
jne
adc
icebp
push
xor
popa
cwde
not
in
mov
pop
sub
mov
cmps
cmps
and
adc
sub
call
jle
stos
popa
mov
mov
pop
pop
xor
cmp
adc
mov
out
mov
jecxz
clc
sub
or
mov
push
popa
out
jo
pop
pushf
jo
sbb
dec
inc
mov
push
nop
push
xchg
mov
sbb
loop
data16
stc
jne
rcl
stos
and
(bad)
jo
loopne
pop
sub
adc
dec
mov
fidiv
push
(bad)
xor
dec
or
test
data16
and
icebp
xchg
loop
mov
(bad)
out
add
(bad)
mov
jmp
shl
jge
dec
pop
daa
sub
push
mov
imul
cmps
and
jmp
jne
imul
ja
add
bound
add
inc
aas
pop
and
or
int3
retf
xchg
push
shl
mov
sub
push
hlt
fwait
jnp
das
jmp
dec
mov
into
out
retf
pop
mov
test
fbld
into
(bad)
mov
aam
ds
adc
or
or
mov
adc
or
xor
loop
shr
add
int
scas
(bad)
cld
pop
outs
fbstp
pop
movs
sub
(bad)
scas
pusha
imul
mov
stos
sbb
movs
xchg
xchg
dec
jecxz
xlat
mov
and
xchg
xchg
inc
cwde
mov
nop
xchg
sub
cmp
sub
test
leave
mov
jnp
faddp
daa
leave
push
and
push
xor
mov
iret
dec
or
adc
mov
fwait
div
int
lock
imul
loopne
pusha
inc
nop
outs
mov
stos
push
js
or
nop
jg
mov
inc
and
call
sub
retf
aaa
hlt
add
or
shl
sahf
sar
jg
jb
leave
dec
jnp
jle
ret
pop
xor
out
cwde
int
hlt
das
push
lock
leave
pop
pop
das
fbstp
jns
cmc
loopne
ret
imul
xchg
repz
stos
cdq
shl
pop
push
jmp
scas
fs
rcl
adc
inc
and
sbb
out
retf
inc
imul
test
pushf
jnp
scas
cmp
adc
(bad)
push
std
lea
xor
push
sbb
pop
pop
jb
sahf
lea
mov
ins
in
pop
mov
fsubp
add
mov
pop
sub
cmp
sbb
bound
(bad)
outs
jb
push
mov
mov
mov
push
pop
pop
mov
pop
mov
xchg
ficomp
jecxz
mov
push
push
cwde
pushf
lods
jno
push
inc
jne
fimul
jae
cwde
hlt
inc
or
inc
adc
sbb
xchg
pop
sbb
aaa
test
(bad)
pop
pop
out
mov
(bad)
mov
js
mov
xor
stos
scas
mov
mov
hlt
test
mov
adc
push
aas
rol
cmp
popa
pop
adc
xchg
mov
movs
retf
push
mov
pop
mov
mov
pop
mov
outs
adc
int
or
pop
jbe
test
in
push
(bad)
push
mov
ins
daa
mov
lods
movs
in
imul
or
test
adc
arpl
xchg
sti
mov
push
xor
(bad)
data16
inc
test
aas
rcr
imul
ret
inc
loope
inc
in
add
int3
shr
je
pop
daa
jnp
test
das
push
push
repnz
push
sbb
enter
sub
in
mov
hlt
sub
pop
jmp
into
jle
ret
das
test
(bad)
jnp
movs
dec
cs
in
dec
je
push
adc
in
repz
(bad)
jb
or
push
lods
pop
jo
popf
rol
icebp
add
(bad)
iret
inc
pop
movs
jnp
pop
retf
nop
xor
lds
mov
gs
push
pop
call
lods
xchg
jecxz
and
rol
lds
call
pushf
data16
add
mov
sbb
and
ins
sar
xchg
pop
out
repnz
ins
adc
call
test
data16
mov
std
adc
(bad)
jno
inc
mov
pop
out
jp
and
or
aad
pop
leave
xchg
(bad)
sbb
rol
adc
ffree
je
pop
xchg
sahf
loopne
mov
bnd
add
ja
enter
je
dec
push
mov
or
jmp
mov
push
mov
xor
inc
ja
and
fstp
iret
retf
xchg
(bad)
gs
das
ret
dec
(bad)
nop
gs
clc
adc
mov
loope
addr16
in
dec
ins
inc
mov
mov
or
pop
jp
or
push
sub
pop
xchg
(bad)
idiv
ins
dec
ins
pop
add
push
cmps
sub
sub
push
aaa
cld
call
push
mov
push
ja
std
or
adc
inc
push
out
shr
arpl
add
es
int
add
inc
mov
in
clc
(bad)
and
leave
int3
scas
cli
inc
stos
mov
cmp
in
sbb
xor
xchg
pop
aad
aas
xchg
adc
adc
jns
dec
xchg
aaa
sub
cmp
jns
fwait
pushf
inc
outs
mov
inc
hlt
outs
cmc
push
out
add
and
mov
and
iret
fxam
push
dec
cmc
cmc
sub
sub
iret
jb
cmps
out
push
mov
loop
xchg
jae
cmp
les
pop
jns
pusha
and
pop
neg
enter
and
call
sbb
movs
(bad)
adc
ror
adc
xchg
(bad)
pusha
fcomp
stc
into
xchg
xchg
sbb
mov
iret
mov
test
dec
fild
push
stos
pushf
pop
inc
dec
push
sbb
aas
cmps
push
clc
cs
in
inc
xor
ds
mov
es
test
sti
leave
push
icebp
sbb
leave
(bad)
cmp
cld
dec
loop
or
xor
adc
xor
shl
(bad)
in
or
inc
test
(bad)
push
daa
adc
sub
jnp
cmp
clc
(bad)
iret
clc
shl
retf
push
xor
xchg
mov
mov
ins
add
movs
div
std
inc
lea
jno
mov
mov
add
fwait
out
dec
scas
or
mov
dec
inc
stos
inc
mov
or
push
inc
xchg
dec
gs
into
cld
fs
dec
jnp
mov
test
shr
sbb
and
mov
popf
lock
jb
jb
retf
int3
xor
and
adc
xchg
xor
aas
ficomp
dec
cmp
sbb
inc
pop
inc
mov
mov
mov
clc
cmp
lds
mov
xchg
ins
(bad)
imul
xchg
out
(bad)
jecxz
scas
cli
aas
repz
mov
jmp
push
xchg
js
mov
pop
dec
retf
loopne
jno
jnp
push
mov
scas
add
repz
adc
das
loop
div
fist
sbb
out
movs
cmps
xor
jne
call
add
rol
push
mov
sar
mov
mov
pop
mov
mov
shl
and
test
or
xor
cmps
mov
add
xchg
sub
and
test
jns
sbb
sbb
dec
in
mov
adc
jbe
ss
rol
push
stos
mov
lea
stc
test
mov
push
xchg
in
lods
cmp
shr
cmps
pop
ja
das
xchg
leave
sub
mov
std
call
sub
aad
add
sub
adc
es
data16
cmps
mov
cmps
les
push
mov
in
mov
cs
daa
add
retf
xchg
ins
scas
das
idiv
retf
lahf
jg
aad
sbb
xor
or
sub
mov
push
jno
cdq
mov
inc
fcomp
push
sub
sbb
lods
mov
out
xor
cmps
xchg
pop
fs
xor
add
push
cmp
jg
loop
sar
jecxz
and
mov
rcr
loope
adc
sbb
sub
xchg
sar
sbb
lahf
and
mov
pop
clc
fistp
adc
pop
xlat
sub
mov
bound
iret
pminsw
sub
pop
inc
sbb
outs
push
fisub
imul
stos
sub
pop
add
dec
xor
cmp
lds
mov
test
leave
bound
cmp
xor
jae
mov
addr16
fcomp
call
mov
movs
imul
and
jb
dec
mov
and
aaa
aad
in
jp
test
sti
inc
push
pop
int
cmps
or
cs
retf
ins
or
inc
lock
push
pop
push
xchg
cli
push
jg
adc
or
dec
jecxz
lea
fld
xchg
sbb
sbb
xchg
xor
sub
xchg
mov
mov
pop
fst
aam
rcl
lods
cdq
aaa
dec
aaa
fbld
outs
outs
push
rcr
outs
nop
cmp
cmps
(bad)
sbb
mov
jmp
cli
push
shl
push
cdq
cmc
enter
xchg
loop
jecxz
lods
iret
mov
iret
push
retf
and
pop
xor
(bad)
(bad)
(bad)
sti
loopne
lea
mov
out
jg
stc
out
jg
stc
mov
dec
mov
sub
inc
aaa
sbb
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
test
ins
cwde
loope
ja
sbb
ins
adc
xor
mov
daa
cmps
mov
je
jmp
jge
add
pop
cmp
stc
les
sub
xchg
cwde
xchg
ss
(bad)
int3
aam
shr
and
sub
sub
inc
movups
in
and
leave
icebp
out
adc
mov
aas
jl
jmp
jge
loop
stos
idiv
call
outs
pop
std
js
out
lods
aas
mov
jns
ret
add
jnp
mov
fdiv
fdiv
test
int
ins
jp
es
cld
dec
loopne
sub
pusha
sub
adc
push
push
push
pop
loopne
ror
fisub
popa
mov
add
cmc
inc
sub
sti
sub
into
cmps
rcl
fnstenv
jne
movs
push
pop
jns
sub
das
mov
sub
nop
hlt
cmp
adc
aam
fist
das
adc
xchg
jecxz
mov
mov
ds
cmc
mov
or
pop
cwde
push
xchg
mov
or
repz
sub
cld
xchg
repnz
jnp
stc
daa
call
call
stos
mul
xor
ins
mov
in
js
adc
dec
test
rcr
fld
cmp
add
adc
jns
cmp
pop
pop
adc
sbb
mov
xor
cld
dec
cs
jge
or
repnz
xor
pop
mov
popa
jg
jge
jmp
xchg
adc
add
fiadd
in
pop
nop
std
and
jae
hlt
jb
fimul
(bad)
xor
sub
and
and
push
xchg
js
and
and
xor
in
in
lods
push
stc
cmps
out
cmp
(bad)
pusha
ds
imul
xchg
mov
outs
nop
add
pop
imul
test
pop
shl
hlt
sub
pop
and
repz
or
fimul
or
out
loopne
sub
jmp
sbb
inc
dec
mov
retf
in
out
loope
pop
push
sub
or
cmp
fbstp
sub
ja
sbb
dec
jl
push
test
stc
imul
inc
adc
fld
sub
call
jne
int
(bad)
js
jecxz
out
mov
sub
mov
add
test
push
push
jne
sbb
push
cmp
mov
inc
leave
and
jmp
or
jg
pop
jmp
arpl
sbb
adc
pop
cmp
cli
jb
(bad)
sub
mov
xor
push
jnp
std
test
or
jbe
stc
les
mov
sar
fnstsw
dec
mov
cmc
jo
bound
loope
mov
and
int
cmps
xor
mov
js
cwde
in
fwait
pop
ftst
fst
adc
test
fwait
pushf
test
xchg
out
xchg
mov
sahf
(bad)
aad
mov
call
jbe
adc
lods
lock
(bad)
ss
mov
outs
jl
or
aam
lods
pop
xor
pop
mov
pop
add
pop
xor
jo
mov
mov
sub
test
mov
loopne
pusha
les
xchg
fcomip
and
pop
or
dec
loopne
(bad)
gs
inc
in
fcom
inc
xor
mov
test
mov
out
mov
xchg
cdq
and
lea
imul
outs
mov
(bad)
ficom
xor
std
pop
cli
ror
or
dec
jno
push
imul
popf
fdivr
pusha
or
inc
mov
popf
sahf
add
stos
jecxz
jbe
push
and
shl
jno
mov
ds
adc
retf
es
out
es
out
push
(bad)
pusha
adc
dec
aas
add
shl
int3
or
xor
xor
add
sahf
ror
pop
fwait
cmp
add
lea
aad
mov
jne
mov
icebp
dec
xlat
sub
jle
push
jns
call
aas
popf
push
test
inc
pop
or
mov
test
cdq
push
int
fisttp
mov
test
mov
fld
pop
mov
cmp
(bad)
rol
cmp
je
cld
call
or
xchg
jbe
xor
fs
pop
inc
jge
mov
xor
xchg
imul
in
clc
shr
arpl
cld
mov
mov
xor
xchg
je
mov
(bad)
xor
push
mov
inc
add
sub
jg
(bad)
fdivr
jns
loop
jp
mov
mov
cmp
xor
jl
sbb
xchg
lods
fmul
je
jg
xchg
jne
jb
icebp
cmp
push
cmp
jle
sbb
adc
sub
xchg
and
sbb
or
hlt
jnp
pop
inc
(bad)
out
bound
(bad)
out
sbb
fnstsw
movs
sub
xchg
fwait
mov
movs
mov
pop
ss
pushf
jmp
pushf
mov
and
xor
nop
nop
adc
xor
ret
call
dec
xchg
dec
pop
mov
sub
pop
add
xchg
sar
fistp
(bad)
jmp
or
mov
rol
jmp
add
hlt
icebp
mov
xchg
inc
out
mov
xchg
add
jae
or
mov
mov
es
xchg
int3
outs
and
pushf
in
push
jbe
test
data16
sbb
or
out
sub
mov
aas
rcl
js
ds
sub
sbb
shl
xchg
sub
and
push
call
jne
int
ja
inc
in
push
pop
(bad)
jne
sbb
pop
xor
retf
push
out
sti
bnd
inc
std
cmp
ss
loopne
push
or
pop
call
sub
(bad)
push
loop
dec
xchg
jmp
cmp
rcl
xor
xchg
add
popa
mov
cmc
mov
fisttp
repz
cmc
inc
mov
int3
rcl
mov
popf
int
mov
iret
idiv
scas
cmc
fcmovnu
fdivr
sbb
push
jge
jg
or
jne
fidiv
test
test
inc
pop
cs
dec
idiv
pop
repz
retf
or
push
push
sub
loop
sbb
out
mov
mov
xchg
or
xor
and
mov
fmulp
add
test
xor
int
in
outs
popf
xor
arpl
adc
arpl
(bad)
fmul
pop
pop
ja
in
mov
sub
xor
inc
ret
xchg
push
(bad)
sbb
scas
or
adc
aam
push
push
jecxz
clc
sar
into
(bad)
jae
jmp
and
daa
inc
call
cmp
push
stos
aad
and
fisub
add
dec
sbb
and
fwait
jae
push
xchg
inc
into
jns
add
xchg
data16
loope
(bad)
stos
xchg
inc
add
mov
in
inc
xchg
clc
scas
ss
addr16
mov
cmc
iret
mov
mov
(bad)
mov
mov
fldcw
adc
jne
push
fcmove
adc
cmp
mov
cmp
xchg
mov
retf
cld
ret
dec
loopne
nop
shr
fcom
aam
clc
dec
mov
adc
nop
sti
inc
mov
sbb
xor
ja
cmps
cmps
sti
mov
adc
pop
mov
dec
inc
adc
inc
popf
cmps
cli
mov
pop
movs
test
retf
pop
movs
dec
and
daa
movs
cmp
stos
lahf
not
sahf
iret
xor
adc
mov
dec
push
xchg
xchg
cmp
inc
push
iret
lahf
pop
push
mov
out
mul
jo
clc
push
in
xor
inc
call
add
enter
dec
call
inc
(bad)
xor
ss
sbb
push
outs
jge
pop
pop
aad
cmp
pop
fsub
jmp
rol
retf
lea
inc
retf
(bad)
push
xchg
aaa
inc
push
jge
rol
cmp
cli
mov
stc
xchg
adc
retf
pop
sub
in
jecxz
mov
ja
fcomp
sbb
ret
aas
xchg
mov
xor
cmps
daa
adc
jl
jbe
cmc
call
jg
jl
imul
rcl
ret
bound
fbstp
ret
jmp
jo
cmps
imul
sub
(bad)
fdivp
cmps
out
stos
xchg
mov
dec
rcl
sbb
scas
cli
pop
pop
mov
ins
mov
dec
jo
mov
sbb
jne
out
scas
lock
and
sbb
pop
pop
cmp
lods
pop
out
ficomp
rcr
sbb
test
addr16
enter
and
je
mov
movs
lods
inc
out
jae
cwde
xor
add
mov
call
xor
out
mov
xor
pop
int
xchg
into
cmps
dec
mov
pop
add
mov
pop
mov
inc
pop
mov
sahf
fcomp
jae
hlt
xchg
fwait
inc
cmp
sahf
dec
jl
mov
add
pop
jns
xchg
mov
popf
mov
sub
test
das
test
jno
lahf
cli
jb
(bad)
and
cmp
fidiv
in
xor
cmc
mov
mov
cdq
fst
fild
pop
ins
xchg
pop
push
push
cld
rol
ja
ins
cmps
jg
sbb
lods
xchg
mov
outs
lods
and
xchg
or
inc
cmp
jmp
push
add
dec
xchg
add
in
push
and
imul
cdq
mov
dec
or
mov
inc
out
cli
push
cmp
outs
jge
ficom
and
dec
fst
mov
clc
stos
push
sbb
jle
cmp
xchg
xchg
push
lods
test
ds
in
lahf
jmp
stos
xchg
dec
push
jle
hlt
in
lods
sbb
mov
movs
dec
and
add
xchg
push
ins
mov
lahf
inc
aas
invlpg
daa
retf
jmp
cmp
jmp
sahf
jmp
inc
pop
clc
inc
test
clc
xor
mov
test
cmps
dec
sbb
sti
xchg
cmp
mov
dec
mov
cmp
and
retf
sub
pop
mov
push
int
dec
jbe
test
jecxz
lds
pop
inc
fwait
adc
jl
ror
or
cld
sbb
adc
xlat
adc
push
add
fmulp
test
push
or
xchg
push
jo
pand
scas
sbb
jg
push
mov
pop
das
pop
bswap
inc
xor
dec
add
scas
ret
dec
(bad)
dec
jno
mov
cmps
shr
inc
xchg
add
and
repz
sub
xor
and
jb
int3
mov
xchg
in
mov
sub
xor
stos
shr
div
in
out
je
pop
cmp
sti
and
mov
test
aaa
adc
xchg
sub
pop
aaa
cmp
lea
push
mov
push
lock
aas
xchg
inc
jg
stc
fwait
hlt
repz
ret
test
inc
add
or
bound
mov
dec
int
loope
stos
out
inc
dec
add
jecxz
sbb
or
push
jb
out
add
aas
(bad)
xor
jo
sbb
aad
in
jno
pushw
dec
in
pop
pop
jnp
adc
adc
ror
lock
sbb
fcom
mov
test
retf
shl
iret
js
pop
jg
push
sbb
jp
out
push
(bad)
arpl
add
jno
popf
stos
shl
fisttp
pop
mov
inc
hlt
int3
or
jmp
xchg
imul
push
mov
push
js
shr
xchg
mul
push
dec
mov
cmp
sbb
ds
inc
inc
mov
mov
dec
push
dec
jb
loop
cmps
lea
test
push
rcr
sub
loope
dec
es
cli
fs
mov
xchg
in
test
fs
jge
call
sbb
scas
add
icebp
mov
mov
das
inc
faddp
out
aam
fisub
mov
jl
out
dec
cmp
clc
add
add
adc
pushw
les
les
sub
mov
push
gs
jns
js
jg
pusha
mov
or
cdq
das
cmp
mov
scas
movs
pop
lahf
cmp
sar
or
jae
mov
mov
outs
mov
pop
pop
add
cs
repz
sub
popf
outs
enter
fsubr
stos
dec
xchg
mov
xchg
or
adc
push
sub
ficomp
sub
jns
adc
push
test
je
push
or
or
push
loop
mov
and
or
xor
add
add
xor
int3
push
push
or
jns
mov
aas
and
adc
mov
in
test
xor
vmwrite
xchg
mov
jne
push
aad
dec
push
dec
adc
mov
inc
pop
rcl
dec
ret
push
add
call
mov
in
jno
es
clc
(bad)
iret
ret
inc
jbe
push
push
jb
imul
and
cld
into
in
mov
xor
aaa
mov
push
sahf
test
int3
call
stos
xor
cmps
shr
sub
mov
outs
dec
sub
sub
pusha
jmp
lds
scas
int3
ret
into
jb
xchg
xor
popf
test
mov
mov
mov
push
pop
cli
ins
sbb
lods
jnp
ins
mov
push
ins
xchg
inc
aaa
test
test
inc
cmc
cmps
xor
pop
imul
or
repz
ja
out
ret
cmp
outs
mov
bsr
mov
outs
mov
xchg
jmp
cmp
xor
mul
adc
sti
(bad)
out
dec
cmp
jp
in
xchg
jecxz
add
stc
call
fwait
cwde
movs
int3
test
rol
movs
shl
jne
or
stc
popa
mov
movs
fidivr
pop
fisttp
and
dec
and
pusha
shr
mov
cmp
sbb
sub
inc
shl
mov
call
fiadd
and
int3
push
sub
or
in
mov
push
sahf
(bad)
out
aaa
sti
retf
mov
mov
cmp
cmc
pop
xchg
xchg
pop
cmp
call
jno
or
pop
(bad)
mov
lods
(bad)
int3
sub
lods
mov
lods
adc
add
stos
shl
jno
imul
inc
add
test
dec
or
mov
leave
das
aad
data16
sub
or
sbb
neg
jno
stc
int3
fwait
adc
scas
jns
sbb
mov
mov
ror
cdq
inc
sysexit
mov
ss
out
or
iret
into
mov
mov
cmps
aas
mov
and
sar
push
movs
adc
enter
fld
test
and
mov
inc
xchg
fist
jp
jne
shl
aas
and
in
add
and
xchg
movsx
adc
and
xor
pop
and
stos
sar
cli
mov
cmp
cld
sub
cmc
jecxz
dec
ja
test
inc
mov
fadd
popa
mov
cli
daa
repnz
cmp
xor
push
les
xchg
div
add
lock
cli
mov
and
or
mov
push
mov
data16
add
cmp
loopne
sbb
lock
fidivr
scas
sub
mov
mov
lods
bound
jnp
or
cdq
(bad)
sbb
gs
iret
mul
mov
loop
pop
xor
out
cmp
call
jmp
add
mov
sub
pop
inc
fsub
xchg
jge
fwait
xchg
jb
dec
push
fisub
or
pop
lds
test
shl
and
or
sbb
hlt
shl
jg
or
add
fistp
cwde
sbb
or
dec
retf
mov
nop
dec
aaa
(bad)
jae
rcr
jmp
lock
test
movs
ds
popf
in
cli
imul
movs
mov
dec
ss
popa
mov
adc
fstp
mov
out
xchg
(bad)
pop
iretw
or
inc
in
xor
mov
scas
jle
sub
dec
lods
mov
in
sub
stc
dec
sub
push
fcmovb
sub
xchg
mov
and
cmp
sub
test
cmp
repz
xchg
jbe
ja
fwait
xchg
jmp
sar
lahf
(bad)
cld
out
(bad)
stc
iret
push
jge
popf
inc
ret
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
adc
xchg
xor
imul
loop
cmps
dec
outs
mov
adc
int3
cmp
(bad)
xor
int
fsincos
xchg
and
sbb
push
repz
aaa
adc
inc
ret
jne
mov
jp
daa
loopne
and
sbb
inc
jecxz
icebp
xchg
mov
ins
adc
add
jmp
pop
inc
cmp
mov
cld
xchg
scas
push
dec
xor
ror
lock
cmc
cmps
mov
gs
and
sti
and
addr16
and
add
xchg
inc
cld
dec
mov
mov
(bad)
lea
xchg
fs
sahf
lock
jmp
jecxz
mov
retf
(bad)
mov
xor
dec
cmps
loopne
inc
push
xor
mov
or
sub
setae
mov
push
pop
lods
cmp
mov
test
setnp
sar
retf
or
inc
xlat
jnp
(bad)
lods
pop
loop
fbstp
push
sbb
stos
inc
outs
jbe
ret
lock
das
xor
inc
lds
fs
sbb
imul
(bad)
(bad)
not
or
std
pop
dec
add
jge
or
div
aaa
mov
and
pop
or
out
dec
jp
pop
test
in
mov
push
fst
jb
lods
test
dec
sub
sbb
mov
clc
clc
sahf
and
push
push
or
int3
xor
jmp
mov
les
xchg
inc
rol
xor
gs
fldcw
paddsb
imul
idiv
shl
cmp
or
mov
cli
aas
add
and
in
jecxz
xchg
test
and
xchg
sbb
add
out
in
sbb
les
test
lods
lods
mov
mov
jl
push
ins
dec
icebp
push
pop
mov
or
popa
sbb
mov
lea
push
xor
or
fist
mov
pop
jmp
jmp
lea
(bad)
adc
rcr
adc
fcmovnbe
(bad)
js
iret
hlt
int
jmp
cwde
sub
fadd
mov
mov
and
mov
dec
mov
mov
mov
xchg
xor
cmp
adc
xchg
mov
inc
inc
push
pop
popa
(bad)
sahf
mov
fstp
push
in
adc
sub
cmps
inc
xlat
outs
pop
popf
es
cmp
sbb
fmul
mov
scas
or
rol
(bad)
movs
push
les
test
and
pop
pushf
pop
sahf
jg
popa
inc
jnp
test
push
clc
scas
push
xchg
pop
xchg
pop
jmp
jge
pusha
mov
mov
mov
pop
int3
jae
or
movs
cmp
mov
(bad)
test
in
xchg
jmp
and
xor
add
push
mov
jl
jnp
daa
xor
aam
jns
mov
and
(bad)
mov
adc
sbb
ror
mov
sqrtps
mov
mov
inc
jbe
jmp
nop
cmp
std
pop
sar
loopne
cmp
cdq
seto
ror
mov
pop
jg
ds
test
cs
in
push
movs
jmp
scas
mov
fist
mov
test
and
mov
data16
dec
icebp
sub
ins
mov
jg
jg
jg
sbb
in
xchg
(bad)
repnz
mov
jne
mov
movs
nop
pushf
leave
or
sub
inc
fwait
pop
(bad)
pop
stc
xchg
adc
sbb
xor
lahf
cdq
pop
jecxz
jae
jbe
cld
pop
bound
test
test
arpl
sti
push
int
aaa
repnz
sar
(bad)
enter
or
nop
xchg
jae
sub
cmp
out
(bad)
out
sahf
inc
cld
retf
mov
push
mov
aaa
mov
dec
xchg
sti
push
fild
and
js
push
sysenter
outs
lds
call
inc
push
fadd
cmps
retf
sbb
cmp
enter
sahf
jno
jb
jb
jle
jae
xchg
sbb
xlat
ret
fidivr
mov
push
jmp
cwde
imul
rcr
nop
jmp
out
test
adc
mov
cmp
sahf
fild
lock
sti
test
gs
sbb
aaa
leave
mov
inc
sub
mul
daa
sub
cmp
sub
aaa
add
int3
push
jno
push
pushf
pop
mov
cmp
leave
and
mul
test
fisttp
outs
int3
or
xchg
sub
mov
jmp
call
popf
ins
pop
jae
dec
sub
ficomp
das
arpl
sub
stos
push
xchg
xor
int
inc
icebp
neg
xlat
mov
jmp
mov
test
idiv
xor
xchg
div
shl
pop
pop
xor
mov
scas
stc
rcl
mov
hlt
jmp
add
movs
outs
imul
in
add
ins
stc
xor
stos
ins
je
(bad)
(bad)
sbb
dec
mov
dec
mov
movs
aad
mov
jecxz
rcl
retf
add
(bad)
aad
(bad)
cmp
adc
and
jg
out
int
mov
in
mov
xor
ss
test
mov
adc
jge
jmp
and
int
stos
or
adc
neg
jmp
nop
add
add
jno
mov
test
arpl
sub
sbb
inc
push
pusha
push
mov
sti
es
(bad)
mov
sbb
and
jmp
inc
sbb
icebp
popa
pop
sbb
xchg
push
ja
mov
addr16
dec
sub
sub
pop
pop
lock
jp
out
xor
out
shr
mov
jg
in
inc
loop
pop
jp
inc
cli
dec
gs
pop
push
mov
sbb
push
into
jle
test
jno
dec
dec
js
push
mov
cmps
aad
popf
mov
push
jp
pusha
adc
sahf
ficom
int
lahf
fisub
out
rol
movs
lea
cld
jl
push
add
jl
xchg
and
enter
or
xchg
dec
mov
push
dec
cmc
cmp
adc
test
leave
or
(bad)
pop
and
xor
pop
jbe
sub
(bad)
xchg
jo
push
push
and
xchg
int3
adc
rol
clc
inc
imul
cmps
popf
sahf
jno
pop
dec
shr
push
mov
or
mov
jp
or
(bad)
mov
sbb
in
xchg
aaa
push
add
sbb
lds
adc
pop
pushf
ror
sub
jg
pop
add
(bad)
das
push
mov
sahf
not
cmps
sbb
pop
or
into
call
adc
stos
mov
call
leave
dec
mov
mov
es
leave
stos
cmps
nop
arpl
call
adc
push
adc
add
addr16
imul
dec
enter
and
adc
cmp
js
inc
mov
fs
call
and
jge
shl
dec
enter
push
mov
arpl
cmps
push
push
xor
xchg
mov
mov
and
or
aas
mov
loop
mov
xchg
cmp
xor
cmc
aam
push
cmc
or
stc
dec
jmp
xor
out
cwde
pop
ror
aas
into
test
push
cmp
clc
mov
mov
shl
push
push
mov
rcr
sbb
xchg
imul
addr16
int3
add
iret
int3
ret
out
jns
loop
out
xchg
sub
outs
adc
adc
push
xchg
retf
sbb
pop
je
shr
sub
fidivr
in
(bad)
sbb
popf
pusha
cmc
nop
addr16
pop
dec
jl
jbe
outs
mov
test
jb
int3
jae
inc
cmps
pop
retf
in
push
push
sahf
scas
(bad)
ds
xlat
cmp
or
loop
xchg
es
js
into
xchg
repnz
sti
bound
add
adc
mov
mov
out
jmp
sbb
scas
xchg
mov
or
mov
xchg
xor
call
jp
call
enter
jbe
pop
in
xchg
xchg
mov
cmc
push
xchg
jno
dec
adc
add
sti
int3
inc
jmp
push
out
mov
mov
mov
leave
test
in
neg
or
and
sbb
and
and
dec
sub
add
cmp
adc
cmp
gs
jp
and
test
cmp
xchg
in
lods
ins
jge
xor
shl
lock
jge
xchg
imul
push
and
push
pop
cmp
dec
xor
ins
fwait
pop
xchg
aad
push
outs
adc
scas
je
jo
leave
fsubr
sub
jns
cmp
jge
mov
jae
mov
add
pusha
sbb
jecxz
out
pusha
inc
mov
iret
jmp
xchg
aaa
int3
sub
cmp
inc
mov
fst
or
mov
pop
not
and
and
push
cld
jge
xchg
jns
sub
in
mov
(bad)
pop
popa
shr
scas
cmp
shr
out
cs
cmps
hlt
inc
fistp
xchg
pop
jp
mov
fstp
call
imul
int3
addr16
push
inc
dec
cs
mov
push
aaa
lods
dec
push
shr
cmps
add
pop
add
jae
(bad)
enter
cli
pushf
jmp
and
(bad)
jae
test
and
arpl
fbstp
mov
inc
imul
enter
out
and
cmp
add
imul
dec
fidiv
ret
sti
js
sbb
cwde
ins
das
push
fcomp
inc
cmp
(bad)
in
cmp
fdivr
xchg
rcr
adc
cdq
movs
rol
jg
sbb
shl
jge
jmp
pop
jnp
(bad)
dec
in
pushf
sar
stos
and
imul
mov
jae
jo
jne
xor
test
mov
push
je
adc
mov
xchg
test
jae
ds
ja
fdiv
es
xchg
inc
shl
dec
or
nop
dec
cmps
out
(bad)
cwde
cmp
sbb
retf
in
mov
ins
push
imul
jecxz
push
add
test
and
std
mov
sub
jb
fisttp
mov
sbb
sub
addr16
fcomp
ins
repz
popf
shl
and
test
popf
test
es
sub
pop
mov
mov
inc
jecxz
setge
lea
repnz
nop
xchg
mov
push
mov
push
push
add
not
sti
imul
add
aam
pushf
sbb
out
cmp
xor
xor
sbb
mov
scas
push
xchg
xchg
mov
cs
sar
adc
loopne
jg
out
(bad)
mov
sbb
jle
pop
mov
jmp
cld
mov
fsub
fs
fisub
lahf
or
xchg
test
retf
adc
(bad)
jno
popf
mov
inc
inc
data16
inc
in
sbb
loop
addr16
loop
lods
add
push
inc
jle
mov
out
nop
sbb
adc
sbb
aad
adc
test
mov
retf
push
dec
loopne
push
ins
xor
arpl
xchg
ins
ins
(bad)
pop
add
pop
xchg
xor
sbb
xor
jge
jae
ret
movs
fdivr
(bad)
lea
out
mov
jmp
or
sub
jae
jmp
xchg
ficom
push
(bad)
in
or
mov
call
pop
cld
sbb
jns
arpl
sbb
adc
jle
or
out
ret
fnsave
push
iret
into
cs
bound
mov
inc
pop
in
iret
rcr
pushf
mov
xchg
stos
sbb
fwait
enter
jns
jle
mov
ja
cmp
(bad)
(bad)
cmps
xchg
xor
ret
repz
std
test
sub
push
push
in
add
sbb
push
bound
cmp
or
mov
xor
sbb
pop
es
xor
int3
mov
in
call
fisttp
sub
xor
in
jbe
dec
jmp
and
jbe
ret
mov
inc
loopne
hlt
sbb
inc
xor
mov
lea
(bad)
sbb
adc
imul
or
push
sub
ret
test
mov
fidiv
call
or
dec
aad
shl
sbb
call
(bad)
jnp
pushf
xchg
addr16
out
and
pop
pop
add
jp
mov
sub
repz
inc
sub
jbe
aam
ds
xchg
sub
or
outs
fxch
call
mul
push
push
inc
and
imul
mov
ror
arpl
fld
xchg
cmps
fdiv
xor
in
sub
jl
jle
push
nop
and
push
jo
les
mov
xchg
jecxz
push
outs
movs
lea
clc
add
mov
test
push
(bad)
dec
iret
sbb
jle
leave
jge
repnz
(bad)
ins
sub
data16
push
push
sbb
stos
jne
ret
mov
loop
sub
in
js
(bad)
mov
in
(bad)
das
iret
xlat
mov
js
cli
ss
hlt
jg
sub
push
ja
jle
add
push
(bad)
push
shl
mov
mov
adc
arpl
jne
out
pop
lock
cmp
imul
jnp
rcl
push
cmp
inc
cs
popa
inc
xor
jne
inc
shl
icebp
lahf
imul
mov
adc
pushf
or
xchg
int3
ror
cld
xor
(bad)
sahf
js
mov
sub
fidivr
ja
outs
inc
mov
mov
nop
jp
outs
lahf
sbb
mov
std
mov
cmp
bound
mov
fcom
or
out
pop
push
jle
int
pop
fwait
stos
mov
xor
cdq
fcmovnbe
dec
fdivrp
xchg
jnp
fiadd
adc
push
test
int
jmp
pop
sbb
stos
add
push
or
fnsave
push
or
jmp
les
add
jg
push
movs
dec
jno
mov
fwait
jns
push
dec
cmp
dec
mov
pop
cld
jo
xchg
xchg
xor
lds
mov
pop
stos
arpl
rcr
mov
cmp
(bad)
in
aam
inc
es
pop
dec
mov
pop
loope
cmps
fcomp
popf
sub
jo
xor
jecxz
mov
add
ret
push
fwait
std
mov
hlt
enter
test
retf
mov
pusha
popa
addr16
lods
jg
or
jmp
lods
xor
add
jp
loope
xor
add
pop
fwait
mov
inc
retf
ins
sbb
jo
inc
inc
xlat
retf
lods
inc
jb
ins
sti
xor
lock
mul
xchg
sbb
les
xchg
xlat
stos
in
sub
in
retf
mov
push
dec
ret
push
retf
js
pop
vpsubusw
xchg
jmp
repz
loope
test
adc
aam
fs
inc
sub
in
pop
pop
test
sub
mov
outs
sub
jmp
add
rol
sbb
or
in
jmp
repnz
cmovp
std
fisub
shl
jg
inc
adc
loop
aaa
inc
push
shl
mov
out
sbb
das
fscale
pop
pop
mov
ret
mov
push
in
lds
xor
sbb
sub
cmp
lds
lods
xor
and
sub
mov
mov
jno
imul
jns
(bad)
iret
in
cmp
repz
xchg
test
push
push
das
xor
dec
cmps
es
push
loopne
popa
pop
pop
in
pop
adc
popa
push
or
sbb
jle
jbe
(bad)
mov
(bad)
data16
int3
cmp
cmps
cdq
sahf
mov
inc
scas
pop
mov
xlat
not
add
and
sbb
sub
mov
adc
in
nop
sbb
xor
push
call
lahf
jg
stc
out
jg
stc
out
xor
mov
dec
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
ss
cdq
test
shl
arpl
jge
fnsetpm(287
(bad)
(bad)
cmp
(bad)
aam
fwait
sahf
cmp
mov
jae
dec
(bad)
je
pop
in
repz
in
pushf
adc
pop
idiv
outs
lea
dec
sbb
test
das
sti
movs
push
jns
sub
aaa
xor
(bad)
sti
sub
repnz
sbb
pop
(bad)
jbe
int
loopne
icebp
cld
fiadd
mov
stos
xchg
pop
ret
out
adc
mov
(bad)
ds
(bad)
sbb
(bad)
stc
dec
ja
cmp
leave
xor
scas
jnp
mov
cmp
inc
sar
jne
lahf
test
adc
(bad)
movs
(bad)
jle
and
adc
dec
loop
cld
adc
lahf
jmp
and
call
mov
jae
push
cmp
fiadd
xor
add
pushf
push
adc
fwait
shl
lea
scas
jl
daa
ds
jp
cmp
int3
repnz
jo
retf
jmp
fisubr
icebp
mov
dec
xchg
iret
inc
jb
xor
outs
or
pop
stos
jno
clc
sbb
int
retf
push
adc
scas
push
mov
frstor
imul
rcr
cs
ret
xchg
push
push
cmp
cld
lea
push
daa
es
jb
cs
retf
ret
sti
in
ret
ror
fist
ret
xlat
push
mov
(bad)
clc
retf
mov
cli
stos
mov
lock
sbb
mov
inc
mov
(bad)
sbb
icebp
shr
js
in
push
pop
jmp
pop
xchg
in
push
enter
xchg
jp
mov
shl
inc
xor
bound
push
pop
ret
and
push
loope
cld
mov
push
outs
(bad)
cmp
mov
in
outs
scas
push
sahf
jmp
test
ja
daa
dec
jmp
shl
xor
mov
xchg
push
int
popa
push
arpl
(bad)
sub
sahf
xchg
repz
or
xchg
loopne
sub
js
xor
jne
mov
or
ja
cs
adc
addr16
pop
cmp
sti
dec
push
mov
movs
sbb
cmp
jmp
mov
jne
push
jae
and
mov
mov
retf
cmp
mov
das
and
xor
mov
lock
icebp
ret
pop
and
jmp
stos
out
mov
scas
lods
sahf
jg
sub
sub
(bad)
je
mov
je
daa
inc
(bad)
xchg
js
stos
es
sub
out
pushf
ficomp
push
(bad)
outs
ins
mov
imul
int
cld
adc
js
(bad)
and
sbb
addr16
shl
int3
into
dec
xor
or
jge
imul
stos
data16
or
mov
push
push
mov
retf
retf
jmp
fs
imul
jae
push
jmp
dec
dec
pop
fs
mov
cld
arpl
sub
rol
out
mov
jo
jns
out
js
popf
add
xor
xchg
outs
and
mov
mov
popa
shr
aas
pop
retf
cli
call
cmp
mov
cmp
sub
sbb
mov
mov
jb
jo
shl
cmps
push
loop
lods
fstp
pop
push
int
jecxz
pushf
stc
pop
and
inc
mov
pop
inc
jae
xchg
sub
xchg
aaa
pusha
mov
iret
mov
(bad)
push
push
add
es
int3
aad
pop
or
aas
dec
mov
ror
xor
vunpckhps
jns
test
imul
push
jmp
and
mov
sbb
retf
add
cmp
mov
xchg
nop/reserved
pop
add
xchg
adc
loopne
cmps
dec
mov
or
mov
jne
fstp
out
fisub
fcomp
mov
add
mov
xchg
jne
mov
inc
jmp
mov
xor
jl
sbb
xchg
push
cmp
into
or
sbb
ds
jbe
data16
dec
xchg
aaa
sbb
jbe
aas
shr
cmp
retf
xor
inc
retf
int3
push
aad
xchg
mov
outs
stos
cmp
aad
adc
in
movs
mov
leave
and
sbb
jns
sti
es
jnp
cmp
cmps
push
test
out
fwait
iret
and
add
sbb
gs
jmp
or
fwait
loopne
and
cwde
je
or
jno
out
pop
fwait
push
cmp
cmp
test
pop
retf
jb
inc
movs
mov
lock
adc
js
das
sbb
push
leave
push
or
cs
xchg
push
cmps
inc
pusha
push
sub
popf
mov
push
and
mov
xchg
dec
aad
aaa
adc
push
sbb
js
(bad)
ror
int
inc
lods
push
jns
nop
add
mov
(bad)
cmp
cld
ins
fcmovnbe
mov
xor
push
add
(bad)
sahf
imul
js
pop
out
xchg
iret
xchg
fsubr
sar
repnz
mov
out
lods
push
and
(bad)
(bad)
fistp
or
test
and
xchg
pop
test
jmp
scas
arpl
les
rcl
in
ins
in
sti
sbb
sub
shr
imul
or
aam
mov
mov
xchg
xchg
xor
iret
sub
das
adc
mov
pop
jns
ror
ss
jg
cld
and
jge
cmp
pop
stos
(bad)
xchg
lock
fadd
pop
pop
das
cli
icebp
test
scas
cmp
in
add
fst
jle
dec
push
inc
pop
mov
mov
dec
ds
mov
or
out
pop
mov
sbb
sar
push
fst
pop
int
mov
cmp
jle
outs
adc
sub
imul
or
movs
int
xchg
fs
mov
mov
inc
dec
cwde
outs
mov
cmp
push
jbe
add
iret
dec
mov
sub
dec
xchg
sbb
ds
movs
jecxz
retf
xlat
lds
pop
or
in
add
mov
adc
popf
loop
add
xor
push
les
dec
jl
jno
push
push
add
add
test
div
push
push
dec
push
cmp
mov
or
fs
hlt
or
fist
(bad)
scas
jmp
sbb
scas
mov
es
jae
jno
xor
stos
neg
(bad)
cmp
sti
movs
ins
rcl
mov
repz
lahf
xor
retf
icebp
shl
fdivr
jno
lock
fwait
lahf
fs
cld
icebp
dec
int3
out
xor
jo
int3
and
int
ds
repnz
into
das
test
js
mov
adc
out
mov
push
xchg
xchg
jg
push
mov
or
cmp
xchg
sub
add
dec
mov
push
jg
push
pop
stc
and
jne
sbb
mov
nop
xor
pop
inc
imul
mov
test
(bad)
dec
out
imul
enter
pusha
sahf
lods
cs
lea
push
into
in
cmps
loopne
jae
mov
pop
fiadd
psrad
pop
fcmovnu
push
mov
cmp
repnz
test
mov
fld
jmp
ficom
sti
inc
in
clc
movs
fs
pushf
sub
movs
pop
gs
push
mov
je
cld
loop
and
add
push
mov
push
ja
dec
jne
jb
jmp
and
div
add
add
cmp
imul
loop
aas
je
leave
and
dec
jle
sub
sub
daa
cmp
mov
sub
push
cld
fidiv
ror
cmp
aas
pshufw
xor
ds
sbb
sbb
xor
ficom
push
add
ja
stos
out
cmps
test
xchg
mov
(bad)
mov
je
inc
std
jl
adc
daa
sbb
in
jmp
inc
sub
(bad)
mov
mov
cmps
xchg
loope
lods
idiv
daa
retf
cmp
(bad)
int
xchg
pop
mov
gs
mov
dec
(bad)
adc
fcom
mov
xor
sub
mov
and
hlt
inc
shl
jmp
es
mov
cdq
jnp
jne
pop
xor
sbb
in
fld
cdq
jle
nop
cdq
mov
gs
pusha
jbe
xor
and
test
cvtps2pd
js
pop
xchg
push
ds
pop
sub
cdq
mov
ret
(bad)
mov
loop
push
cmp
imul
push
pusha
lods
sbb
cmp
icebp
sub
lahf
push
(bad)
jg
mov
fidiv
xor
aam
(bad)
cmps
mov
xor
fld
jmp
sub
retf
push
in
int
frstor
je
sub
in
xlat
ins
lds
xchg
jnp
nop
mov
inc
(bad)
push
div
cmc
pop
fs
mov
inc
xchg
inc
lods
mov
nop
cmp
(bad)
pop
xchg
xchg
sahf
xchg
inc
cmp
jnp
ret
jle
aas
pop
test
shl
or
rcr
bound
int3
jbe
xchg
stos
jmp
dec
sbb
mov
push
and
cmps
sbb
jbe
cmp
mov
addr16
cmp
ds
cs
push
mov
lods
inc
dec
call
or
mov
push
add
sub
shl
mov
sbb
and
inc
jge
xchg
fistp
mov
mov
mov
cmps
xchg
and
dec
xchg
ret
in
in
test
icebp
ja
std
adc
sti
ret
cmp
mov
lods
scas
enter
or
adc
inc
push
mov
rcl
fbld
mov
mov
jmp
pop
jmp
lds
cmps
fcomp
mov
pop
mov
sti
cdq
mov
xchg
inc
ins
or
add
pop
jp
xor
mov
fmul
cmp
das
aas
xchg
movs
cli
fs
mov
jle
mov
sub
push
cdq
out
ins
lock
rcl
push
sub
pop
bnd
js
push
mov
adc
lods
mov
sbb
lock
add
xchg
data16
cld
and
push
call
loop
add
sbb
adc
sbb
icebp
xor
sub
arpl
(bad)
js
scas
xchg
lahf
pushf
jae
lods
test
fnstcw
cmp
xor
fucom
jo
lock
xchg
out
mov
daa
cmp
mov
fisttp
push
inc
test
xchg
in
sub
mov
les
ds
cli
das
aaa
addr16
test
iret
int3
xor
lea
and
or
add
sbb
xor
push
or
jo
push
dec
mov
or
adc
(bad)
scas
sub
mov
mov
push
push
inc
out
mov
sub
mov
jmp
cld
call
or
cmp
(bad)
mov
sub
mov
cmps
xchg
pop
and
adc
test
jne
in
pop
mov
dec
mov
mov
test
leave
sbb
mov
mov
stos
mov
jmp
sbb
sub
cmp
xchg
mov
rcr
xchg
cmp
scas
xor
imul
and
daa
add
enter
adc
push
push
clc
stos
pop
push
mov
imul
push
outs
pop
inc
inc
sar
ret
ins
add
(bad)
cmc
pop
jns
mov
push
popf
mov
scas
lds
js
into
sub
addr16
ficom
inc
jo
data16
lods
(bad)
mov
ret
cmps
scas
adc
mov
jp
and
mov
and
xchg
ror
sbb
arpl
pusha
outs
test
push
lds
and
aas
push
aaa
retf
or
pusha
jecxz
push
dec
add
aaa
jnp
data16
jge
and
cmc
mov
popf
je
mov
and
bt
hlt
add
mov
aam
cdq
xchg
mov
out
test
cmp
fadd
(bad)
cli
cdq
stos
shr
sbb
aas
mov
loopne
inc
mov
xchg
test
ss
sub
lock
hlt
out
call
leave
add
mov
neg
out
fwait
(bad)
(bad)
pop
dec
cs
ret
out
or
xchg
cmp
xchg
(bad)
inc
sub
dec
mov
pop
stc
in
jnp
mov
jl
cmps
addr16
mov
add
adc
ds
repz
nop
mov
cmp
or
fdivr
out
sar
xchg
arpl
sar
xchg
xor
push
sub
(bad)
cs
or
mov
jmp
xchg
mov
fidivr
fcom
mov
je
test
mov
mov
mov
movzx
movs
popa
inc
xlat
stc
dec
push
lods
push
push
mov
cs
movs
cmps
dec
mov
pop
inc
or
mov
pop
xlat
or
push
into
sti
out
sub
sti
inc
loop
lock
sub
mov
and
pop
retf
and
sbb
xor
gs
iret
or
sbb
fistp
call
push
push
outs
aaa
xchg
fiadd
xlat
jl
mov
es
das
push
mov
jmp
mov
cli
pop
dec
nop
aaa
cmp
push
call
cwde
dec
enter
in
sbb
jecxz
repnz
xchg
cmp
int
sbb
jbe
inc
iret
std
in
mov
dec
icebp
push
push
icebp
stos
pop
iret
jo
lods
sub
sar
rcl
mov
cmp
jae
cmp
push
push
xchg
rcr
repnz
push
into
inc
xchg
mov
dec
cmps
adc
dec
jae
and
dec
out
dec
inc
lea
lods
push
dec
xchg
mov
stos
sbb
cmp
das
js
cmp
cmp
mov
mov
push
loop
scas
pop
jmp
push
push
ins
mov
out
cli
jb
test
dec
out
cdq
loope
js
inc
mov
rcl
or
xchg
mov
scas
test
or
xor
mov
xor
mov
ja
out
jo
push
xchg
xchg
inc
and
adc
ins
ss
pop
enter
(bad)
jnp
mov
hlt
daa
mov
pop
loop
lods
xchg
sbb
sub
addr16
mov
push
aas
xchg
dec
icebp
aad
add
mov
int3
sbb
jp
mov
inc
mov
jg
jns
in
das
test
(bad)
cdq
aad
test
cmpps
mov
std
jne
add
out
out
cmps
xor
pop
pusha
popa
out
pop
retf
adc
mov
(bad)
pop
loop
push
add
xchg
add
pop
mov
popf
aaa
loop
sti
ret
pop
shr
fst
inc
jl
and
push
pushf
and
pop
add
les
leave
std
lock
aaa
mov
lea
pushf
shl
inc
mov
sub
mov
cmp
inc
test
xchg
les
push
jb
aaa
xchg
sub
inc
fdivr
pop
loope
add
dec
iret
adc
fs
push
inc
mov
movs
sub
clc
pusha
jg
sub
imul
or
and
fcmovne
mov
test
cmc
and
iret
rcr
push
call
cli
mov
sub
ins
xor
(bad)
sbb
push
mov
pop
jg
sti
jge
je
pop
xchg
fdivr
xchg
cwde
dec
sub
inc
nop
push
push
add
adc
and
imul
pushf
rcr
shr
xchg
sar
add
sbb
das
jbe
mov
add
and
and
dec
shl
fld
sub
jmp
xor
add
push
frstor
ret
adc
int
cmps
inc
int3
jmp
or
in
sahf
add
fstp
int3
adc
mov
sbb
stos
xchg
ficomp
mov
jge
in
add
gs
test
pop
mov
fld
(bad)
sbb
popa
test
std
mov
hlt
bound
gs
xlat
pop
loopne
jg
stc
out
jg
stc
out
sbb
cld
sets
mov
push
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
jbe
popf
out
into
jmp
loope
fwait
jmp
fwait
mov
xor
cmp
jno
cmp
xor
cmps
jnp
jmp
jge
sti
mov
into
mov
push
xchg
sbb
lods
stos
cli
shl
push
fwait
pusha
and
hlt
call
in
push
dec
sbb
into
xchg
or
pusha
enter
mov
and
mov
cwde
inc
inc
sbb
mov
or
and
xor
jge
xchg
in
mov
mov
fwait
jg
xchg
call
cmp
push
test
inc
mov
outs
inc
cli
enter
popf
fild
imul
loopne
push
pop
inc
retf
mov
push
imul
(bad)
pop
jmp
(bad)
std
mul
fisub
test
stos
imul
int
sub
repnz
sub
cmps
mov
mov
fcmovnu
out
mov
sbb
pop
adc
pop
xor
dec
mov
push
fwait
retf
xlat
in
sti
or
sub
mov
leave
aad
xor
(bad)
nop
cwde
je
sbb
adc
push
into
pop
pop
add
(bad)
out
sub
xchg
loopne
sbb
fcmovnu
ss
rep
cmc
cmps
dec
jle
jle
(bad)
jle
pop
xchg
test
mov
imul
cs
sbb
or
les
mov
movs
(bad)
push
(bad)
xchg
leave
ins
in
aaa
popf
int3
adc
lods
push
popf
fmul
out
cwde
aaa
popf
jno
out
adc
adc
loope
les
icebp
mov
repz
jo
jge
cld
rol
mov
push
aad
movs
sub
ds
(bad)
xchg
hlt
or
push
dec
cmp
sbb
lea
shr
(bad)
stc
movs
and
jne
fisubr
xchg
xchg
mov
sub
push
xchg
jmp
inc
lea
fisttp
cli
and
mov
les
mov
cli
(bad)
adc
ds
lods
pushf
lahf
scas
jbe
inc
(bad)
fnsave
fisttp
xchg
inc
call
and
or
mov
xchg
or
and
hlt
dec
jp
fwait
shr
js
inc
xor
aaa
adc
not
push
pop
sub
rol
out
sbb
out
ror
enter
mov
fcom
fld
bound
add
pop
in
jmp
out
es
mov
ds
mov
movs
xor
jo
inc
mov
(bad)
adc
push
mov
dec
int3
pop
outs
stc
(bad)
(bad)
jp
pop
fs
call
cmc
dec
aaa
(bad)
std
movs
test
jo
inc
test
stos
jb
add
ss
jo
push
adc
and
add
cwde
push
sbb
clc
(bad)
retf
inc
leave
movs
adc
pop
sub
retf
sbb
mov
mov
inc
and
ds
pop
es
ins
push
cmp
inc
xchg
cmp
aaa
bound
test
(bad)
fisttp
in
addr16
sti
push
lahf
and
or
out
cmp
pop
std
dec
inc
test
pop
das
pop
mov
(bad)
fsub
shr
or
rol
push
jns
push
xchg
fcom
sub
sub
aas
pusha
test
fild
jno
jns
imul
sbb
pop
das
loope
and
ins
mov
ja
add
sbb
popf
dec
mov
sbb
ret
movs
retf
sbb
jl
adc
(bad)
nop
sbb
outs
ror
out
sub
cld
xchg
or
cs
mov
hlt
lahf
mov
mov
jle
sbb
add
repz
xchg
nop
mov
mov
mov
sahf
scas
xchg
retf
arpl
inc
xchg
idiv
sahf
pop
call
mov
jecxz
jmp
fist
out
sbb
adc
popf
aam
ins
cs
dec
in
daa
or
pop
pop
lahf
dec
jne
nop
out
push
or
sbb
out
ss
ror
ins
cli
test
cwde
xchg
or
jb
or
idiv
xlat
sub
jl
fdecstp
out
fnsave
(bad)
push
add
mov
mov
xchg
repnz
fadd
xchg
add
jp
jl
call
lahf
js
aad
xchg
xchg
add
add
nop
icebp
test
xor
mov
or
div
pop
jmp
retf
imul
inc
data16
or
arpl
add
fild
xor
sub
mov
add
mov
jg
sub
sti
xor
int3
fld
ffreep
mov
out
ins
xor
fst
stos
adc
push
popf
(bad)
sahf
mov
and
daa
cmp
sar
lds
call
xor
push
push
ret
shl
jge
(bad)
cmps
and
mov
mov
adc
gs
test
dec
nop
(bad)
push
or
retf
pop
jmp
clc
push
mov
add
(bad)
lods
scas
mov
fwait
mov
mov
in
sti
push
ds
mov
xor
inc
inc
movs
addr16
iret
jmp
scas
cs
es
push
test
jl
out
pop
out
adc
fdivrp
stc
mov
shr
ffreep
bound
jnp
inc
repnz
mov
xchg
xor
mov
mov
xchg
out
in
inc
add
or
sub
arpl
or
scas
mov
in
inc
push
call
push
dec
jnp
mov
push
cmp
inc
frstor
xor
sub
in
pop
xor
dec
dec
inc
add
mov
sar
in
mov
inc
fbld
popf
inc
sub
adc
push
sub
fs
retf
mov
(bad)
fcom
jl
out
adc
punpckhwd
jo
mov
dec
icebp
std
out
lods
add
cmp
inc
out
cmps
mov
sar
and
rcl
or
pop
xchg
xchg
mov
xor
es
(bad)
gs
out
je
das
ret
or
fisttp
jmp
daa
or
or
mov
in
out
and
mov
imul
pushf
mov
lahf
out
push
push
nop
cld
push
mov
jbe
push
ror
push
out
and
mov
jno
and
push
aam
fsub
mov
cmc
jb
sub
adc
sbb
jnp
das
ficomp
rcl
retf
fmul
xor
repz
sub
mov
xlat
pop
pop
mov
mov
inc
mov
loope
push
mov
push
cmp
sub
adc
out
mov
jmp
mov
sub
int
add
pop
add
add
sub
fdivp
dec
xor
call
push
mov
(bad)
and
or
popa
dec
std
inc
jecxz
pop
adc
lock
adc
fcomip
mov
or
call
xor
leave
nop
mov
xor
cwde
xlat
and
addr16
adc
iret
or
xor
xor
cmps
ficom
je
or
xor
in
fdivr
retf
fisttp
icebp
add
(bad)
cmc
(bad)
xchg
or
mov
cmp
cmps
je
pop
addr16
in
mov
adc
(bad)
pop
ret
and
sbb
push
loopne
int
popa
pop
push
loopne
aas
jecxz
aas
pop
scas
mov
pop
and
mov
mov
push
mov
jle
fcmovne
loope
mov
add
leave
jb
push
pushf
pop
dec
inc
(bad)
daa
dec
rcr
sub
test
scas
mov
sbb
(bad)
mov
sub
movs
aaa
ins
or
and
test
mov
xchg
pusha
movs
stos
call
pop
push
jecxz
and
ret
inc
into
xor
and
(bad)
xchg
push
xlat
mov
jl
xor
jl
dec
(bad)
cld
and
out
int
scas
dec
adc
or
dec
adc
int3
push
inc
mov
(bad)
xchg
movs
out
call
mov
mov
push
mov
retf
xlat
xor
in
push
push
mov
mov
push
lds
pop
pop
stos
out
(bad)
pusha
push
mov
cs
pusha
jp
iret
inc
int3
(bad)
rol
movs
cmp
ds
xor
push
sub
pushf
shr
fimul
dec
dec
push
sbb
pop
add
sbb
inc
int
xchg
inc
repz
cld
xor
jae
cli
adc
cmps
lock
cli
loop
add
fsub
push
cmp
fs
scas
in
dec
bound
mov
cli
jge
xlat
out
jl
pop
jns
sub
push
ins
(bad)
cmps
daa
mov
je
add
in
adc
sbb
mov
jp
jp
push
sub
xchg
xchg
push
xlat
ficom
shr
push
jae
jno
jg
das
adc
cmp
dec
sub
lahf
or
inc
in
lods
inc
fwait
(bad)
jnp
imul
push
aam
in
(bad)
jmp
dec
mov
imul
or
psubq
ja
into
fwait
push
xchg
mov
sub
jecxz
imul
call
fdiv
stos
pop
popf
inc
je
dec
push
stos
sub
mov
addr16
fbld
dec
scas
cmc
enter
sbb
or
dec
cmp
cs
shl
or
push
ss
cld
inc
in
inc
mov
outs
mov
adc
jmp
ins
fsubr
or
cmp
movs
ds
out
loop
cli
xor
mov
sub
jb
imul
push
sub
adc
mov
adc
fst
mov
nop
jmp
ret
hlt
ins
fwait
push
jns
mov
mov
jb
mov
cdq
rol
test
repz
ror
or
shl
(bad)
aad
push
enter
push
cmp
ins
fisttp
add
stos
fwait
loope
adc
mov
xor
push
push
and
sbb
pop
inc
js
adc
call
cdq
add
shl
pop
and
mov
pusha
push
mov
adc
fsubr
rcl
jl
dec
shr
push
mov
imul
aad
cmp
(bad)
nop
outs
mov
adc
fdiv
lock
sub
xor
add
pop
pop
jg
push
and
add
dec
ins
imul
sub
mov
add
jns
ret
sahf
sub
pusha
aad
(bad)
mov
(bad)
je
lods
repnz
sar
adc
fst
dec
out
cmp
call
ret
push
mul
out
and
call
mov
sar
sbb
push
inc
xchg
mov
rcr
loopne
out
shl
xchg
lock
cmp
js
and
mov
mov
sbb
xchg
add
or
cwde
inc
push
mov
ins
add
and
xor
mov
ret
dec
xchg
sbb
rcpps
xchg
addr16
cmps
or
mov
pop
jbe
and
pusha
jno
jnp
stos
jo
jmp
cmp
add
xchg
jbe
popa
test
pop
mov
push
cmp
inc
adc
sbb
jbe
nop
adc
jo
or
in
scas
sti
mov
add
(bad)
adc
inc
daa
jg
add
jmp
sbb
mov
or
loope
aam
fist
out
pop
mov
adc
xchg
pop
in
aaa
rcl
push
mov
ins
mov
cmp
pop
dec
add
scas
add
cmp
in
ret
jbe
outs
mov
movs
shr
push
or
cmps
fdivr
or
jo
jl
sub
adc
outs
sar
xor
ficom
stos
hlt
mov
cmp
ret
lds
popa
add
stos
dec
sbb
jae
rcr
xlat
std
cmps
in
jecxz
xor
les
lods
jnp
or
mov
mov
aas
push
jecxz
fucom
nop
les
lods
pshufw
fs
jno
sti
lods
enter
lds
pop
mov
push
jge
mov
rcr
mov
es
mov
pusha
cmc
int
sub
cmp
popf
icebp
dec
and
cmps
iret
xor
xor
fs
rcr
adc
out
mov
xchg
ror
mov
adc
dec
mov
dec
xor
or
out
dec
jno
dec
jne
in
fcom
push
pop
sbb
push
pop
retf
retf
pop
outs
into
xchg
sub
push
and
mov
leave
cmp
bound
or
mov
dec
cmp
mov
ins
(bad)
(bad)
outs
sub
adc
mov
pop
(bad)
jecxz
push
pusha
(bad)
fidivr
jmp
and
fcomp
test
sub
or
mov
xor
or
test
movs
mov
cmps
or
mov
or
xchg
mov
(bad)
cmp
(bad)
jecxz
bound
gs
sbb
in
cwde
leave
add
shl
cmp
push
imul
dec
in
fidivr
adc
cmps
(bad)
fbstp
in
in
or
mov
jmp
test
dec
ror
dec
or
cdq
mov
adc
in
outs
adc
adc
retf
fxch
adc
push
pushf
in
sub
sub
mov
imul
xchg
fiadd
jge
js
lods
push
ins
ror
sub
adc
jecxz
imul
jmp
xchg
mov
call
mov
stos
fdiv
pop
dec
das
movs
xchg
adc
jmp
dec
nop
pop
xor
ret
lahf
icebp
test
mov
out
pop
mov
mov
jae
sbb
add
xor
popf
add
in
jne
pop
nop
jo
rcr
sbb
xor
repnz
stc
fstp
mov
scas
pop
xor
dec
sbb
in
and
rcr
or
mov
retf
sbb
pop
mov
pushf
cmp
pop
in
pop
jmp
je
pop
mov
inc
push
and
rcl
jp
movs
and
jp
(bad)
div
shl
jle
imul
(bad)
sub
inc
cmp
stos
neg
(bad)
pop
call
xor
sub
sbb
(bad)
lods
js
add
and
pop
or
arpl
adc
(bad)
and
aam
gs
mov
retf
leave
(bad)
lods
(bad)
sbb
cdq
pop
(bad)
icebp
lea
repnz
push
jp
rol
mov
dec
mov
and
push
popf
dec
or
or
test
or
shr
xor
repnz
cmp
(bad)
mov
cdq
mov
push
mov
pop
and
and
sub
cmp
ja
or
mov
popf
ins
jmp
or
(bad)
stc
push
sbb
xchg
mov
fwait
cld
dec
jo
call
out
imul
adc
pop
scas
cmp
and
ret
push
fdivp
call
push
adc
shl
mov
sub
add
xchg
jo
inc
sub
ins
xor
fs
lds
pop
inc
mov
fnsave
in
shl
int
adc
call
stc
mov
jmp
mov
sub
push
shl
shr
dec
loop
int
sahf
add
loope
jmp
test
fld
jge
movs
div
jno
mov
ror
pop
push
mov
inc
stc
jo
mov
in
fild
inc
stos
outs
fwait
lods
bound
sbb
pop
shr
push
sub
dec
ror
and
and
xor
leave
icebp
pop
push
cmps
jmp
dec
cdq
mov
lds
loop
fdivr
pop
retf
mov
mov
push
mov
xchg
jecxz
movs
outs
in
push
sbb
shr
stos
scas
sbb
jae
cmp
sahf
push
loopne
(bad)
in
add
mov
fwait
cmp
jb
pop
dec
push
and
pop
(bad)
push
loopne
fwait
leave
mov
test
add
cld
repz
aas
(bad)
cld
repz
aas
jmp
or
sahf
in
fsub
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
(bad)
gs
xchg
or
out
xchg
nop
sbb
dec
and
sbb
and
sub
cmp
xchg
dec
(bad)
push
add
jmp
icebp
jp
xchg
ret
or
and
ficomp
popa
dec
sar
test
mov
test
fucomip
repnz
(bad)
pop
int3
lahf
ins
pop
ret
sbb
rcl
jle
es
push
xlat
jp
popa
addr16
test
(bad)
jo
jb
aaa
cmp
cmc
jnp
int
nop
in
call
pop
xor
mov
xor
push
in
inc
mov
ins
mov
mov
iret
movs
mov
iret
enter
xor
xor
xchg
pop
or
xor
mov
ret
mov
retf
dec
dec
loop
sar
or
arpl
ret
xchg
cli
mov
mov
jge
(bad)
(bad)
repnz
mov
cmp
mov
iret
pop
lock
mov
mov
jge
or
sbb
dec
ins
aaa
in
loopne
pop
add
push
sub
mov
add
nop
sbb
scas
xchg
bound
neg
out
addr16
data16
push
or
or
cmp
ss
aad
xchg
adc
mov
cld
repnz
idiv
ins
push
add
and
outs
jb
sub
sbb
sbb
(bad)
mov
cli
push
mov
mov
call
int3
test
scas
pop
aad
xchg
sub
push
push
cwde
arpl
jb
sub
xchg
iret
dec
mov
into
outs
enter
xor
xchg
sbb
dec
ja
(bad)
xor
jle
ret
mov
add
clc
mov
mov
xor
push
lfs
test
jb
cmp
mov
xor
stos
cmp
ret
test
es
jmp
xor
shl
pusha
adc
push
std
popf
call
std
dec
xchg
out
and
(bad)
out
pop
mov
lods
xchg
mov
es
dec
fistp
adc
imul
jo
push
dec
mov
mov
stos
fadd
and
jmp
(bad)
mov
sbb
repnz
retf
mov
fnstsw
gs
call
inc
pop
outs
lods
and
push
mov
adc
loope
(bad)
out
dec
mov
xor
sub
hlt
scas
aad
push
cmps
and
dec
fwait
add
(bad)
icebp
mov
sub
mov
ror
arpl
mov
ret
inc
enter
(bad)
mov
bound
sub
call
mov
adc
jbe
or
(bad)
add
movs
(bad)
scas
outs
adc
inc
in
cmp
cmc
push
in
sub
pop
movs
in
(bad)
xor
xchg
mov
punpckhdq
or
mov
pop
mov
retf
aad
xor
and
ret
or
mov
lock
mov
and
xor
cmc
es
shl
outs
push
mov
xchg
shl
cmp
xor
popf
dec
or
cdq
scas
movs
xor
cmc
jnp
int3
enter
sub
cmp
pmaxub
cmp
mov
rcr
push
fcomp
xchg
out
aaa
mov
push
mov
pusha
xchg
and
cmps
out
cli
outs
cmc
adc
push
inc
dec
mov
cmc
sub
out
xchg
mov
sbb
xchg
(bad)
xchg
adc
shl
dec
call
cld
xor
or
jle
test
and
xlat
mov
sub
shl
add
mov
push
dec
and
inc
push
stc
movs
mov
mov
aas
call
ret
enter
scas
mov
xor
aaa
inc
mov
les
adc
test
xchg
lds
sub
arpl
scas
movs
movs
jp
pop
xchg
or
sti
and
imul
sti
xor
imul
adc
inc
and
repz
cmp
sbb
mov
jmp
or
pusha
mov
scas
out
xchg
les
cmp
std
retf
cs
popf
aam
cwde
cmp
push
mov
inc
xor
adc
loop
dec
loope
or
int
ret
sub
call
out
dec
les
popf
es
cmc
sub
dec
sub
int3
fimul
cmp
push
pop
call
call
(bad)
stc
adc
jg
setae
shr
mov
xchg
mov
in
mov
pop
pop
push
loopne
int
jne
xchg
(bad)
mov
mov
push
dec
lock
jge
ss
jg
bound
sbb
(bad)
add
test
in
jae
sbb
cmps
pop
or
movs
sti
dec
sub
loop
sbb
aas
pop
add
(bad)
pop
sbb
add
stos
aam
ror
push
into
pop
call
dec
enter
adc
test
jno
ins
int
popa
icebp
retf
(bad)
and
aad
gs
jmp
test
in
cmp
into
adc
aam
sbb
(bad)
mov
loopne
out
loop
push
add
clc
test
in
or
push
dec
ds
sbb
push
mov
mov
in
xor
arpl
jnp
mov
xchg
cwde
aaa
into
mov
arpl
sbb
shl
bnd
xor
popa
mov
nop
clc
stc
push
sbb
sbb
push
xchg
jns
das
cwde
sbb
shl
push
movs
iret
call
ret
dec
cmp
stos
nop
mov
inc
inc
fmul
pop
inc
or
inc
repnz
mov
xchg
push
or
lahf
xchg
ror
mov
push
push
mov
aaa
test
in
xchg
lock
push
arpl
push
and
dec
add
jge
into
push
les
pop
xchg
enter
pop
popa
out
adc
data16
pop
fidiv
(bad)
lea
xchg
popf
pop
retf
sub
push
aam
xchg
(bad)
retf
push
pop
rcr
outs
in
xor
sahf
pusha
loope
cli
push
outs
ins
xor
cmps
in
scas
or
sub
outs
cmp
adc
retf
pop
add
xchg
mov
pop
mov
or
adc
jae
push
mov
xchg
ja
xor
arpl
cwde
mov
adc
inc
fcomp
pop
pushf
int3
addr16
jnp
sub
popf
arpl
gs
test
enter
add
lds
daa
cmp
fadd
shr
cmps
mov
pushf
(bad)
xor
ficom
fldenv
idiv
dec
fidivr
leave
enter
inc
stos
scas
xor
lds
(bad)
ror
cld
rcr
jle
add
mov
jbe
test
dec
push
loopne
jl
sahf
bound
cmp
xor
test
dec
loope
mov
mov
fs
fnstenv
mov
and
dec
loop
adc
fld
xchg
sbb
or
sub
pushf
aaa
push
mov
sub
(bad)
mov
sbb
sub
xchg
sub
lods
jo
sti
movs
fcom
xor
in
push
int
and
lahf
mov
loop
lods
pop
ss
adc
dec
mov
sub
sub
cld
das
out
hlt
push
cmps
inc
cmp
stc
shl
imul
dec
sub
repnz
push
aam
push
call
out
lods
push
in
aas
test
sahf
nop
outs
mov
test
and
inc
scas
iret
(bad)
and
mov
outs
inc
(bad)
dec
pop
lahf
cmp
jmp
fisubr
cli
xchg
sahf
pop
jmp
in
dec
add
mov
cdq
xor
movs
fimul
cmp
mov
cmps
xor
ret
gs
adc
aaa
mov
xor
movs
and
ss
pop
lds
out
jmp
jnp
jl
xor
fst
xor
nop
xchg
sub
cmp
ss
(bad)
call
lods
clc
movs
push
repnz
cwde
pusha
cdq
or
jns
mov
hlt
in
push
dec
and
popf
adc
add
cmps
add
pushf
pushf
outs
in
iret
in
psadbw
test
mov
jp
and
adc
loope
xchg
out
push
pusha
or
push
pop
mov
into
aas
shr
stc
out
sbb
mov
in
test
sub
ins
arpl
or
cmp
push
stos
xlat
cli
cmps
out
add
jecxz
test
hlt
and
push
cli
jg
cmp
nop
push
add
push
outs
cs
test
mov
lahf
std
std
adc
icebp
dec
(bad)
xlat
mov
dec
jne
enter
dec
fisub
pop
bound
mov
sbb
adc
and
dec
or
or
sub
out
xchg
movs
std
je
push
movs
push
fisttp
ret
or
mov
cli
je
pushf
cmp
jae
xchg
outs
cmp
adc
push
jge
mov
mov
jp
arpl
or
pop
movs
jne
retf
(bad)
pop
jp
in
gs
cmp
cmp
into
mov
xchg
cmp
mov
xor
mov
inc
cdq
sbb
or
ins
mov
rol
push
pop
push
inc
sub
ss
push
add
inc
pop
jmp
or
imul
push
rol
pop
pop
das
fild
inc
fs
imul
push
pop
div
push
push
div
mov
jmp
xor
pop
into
retf
jb
adc
repnz
add
xchg
lea
cli
(bad)
pushf
and
popa
add
xor
popa
xchg
mov
xor
popa
shr
pushf
mov
call
fmul
or
sub
jne
jnp
in
lock
xchg
mov
les
xchg
and
outs
adc
sbb
inc
xor
push
mov
in
jmp
dec
rol
push
seto
push
xchg
imul
(bad)
std
addr16
dec
std
mov
fmul
mov
iret
jnp
aam
cmps
and
icebp
sbb
pop
out
or
lahf
stos
pop
movs
out
test
xlat
ret
jg
cs
clc
call
adc
jle
add
dec
xor
leave
fucomi
adc
in
jo
pop
xchg
pop
or
stc
mov
retf
sbb
sub
clc
adc
pop
sbb
push
dec
mov
push
es
mov
(bad)
sar
sbb
xchg
inc
arpl
pushf
cmp
sub
sbb
fsubr
ror
push
hlt
repnz
mov
sub
push
cld
je
cli
mov
jbe
nop
mov
adc
cwde
jae
mov
xchg
fwait
xchg
arpl
cmp
jp
mov
fwait
mov
push
cmps
cbw
pop
sbb
jb
and
inc
jmp
maskmovq
div
sbb
pop
jae
xchg
mov
xchg
mul
fnstsw
jmp
or
pop
sbb
retf
mov
or
icebp
call
shr
fbld
enter
and
imul
xor
jg
jbe
push
outs
jns
stos
repz
or
mov
jnp
and
push
sbb
jl
sub
mov
jno
stos
and
stc
dec
ror
sub
loopne
idiv
jle
dec
pop
push
pop
xor
sbb
aam
fcmovnb
arpl
fwait
repnz
mov
int3
inc
adc
inc
lea
mov
xchg
adc
imul
cmps
scas
mov
mov
or
neg
or
jp
mov
pop
icebp
sbb
mov
stos
daa
std
sub
pop
mov
shr
and
js
cdq
adc
xchg
aad
sbb
outs
dec
or
icebp
xchg
inc
cld
adc
mov
popf
rcr
icebp
int
cmps
hlt
push
jmp
xor
xor
pusha
(bad)
jle
cld
(bad)
lock
jg
mov
leave
cmp
loop
imul
cs
or
mov
adc
push
sub
lock
aad
cdq
cmp
in
mov
mov
cmp
ret
pop
add
pushf
inc
mov
jnp
fiadd
repz
push
sbb
push
out
aas
loop
adc
das
adc
mov
call
neg
and
out
hlt
mov
xchg
mov
aad
test
dec
pop
mov
aaa
xchg
push
push
test
or
jge
add
aam
nop
xchg
mov
and
mov
cwde
and
pop
aaa
cmp
mov
push
test
mov
fwait
std
data16
mov
pop
bnd
or
dec
jp
cld
nop
xchg
ins
inc
shl
xor
mov
mov
mov
out
aas
in
aaa
cmc
xor
inc
sub
xor
stc
and
loopne
scas
inc
cld
push
cmc
xor
mul
jl
out
fstp
iret
cmp
add
loope
sar
push
out
out
mov
pop
pop
mov
add
rcl
jmp
cwde
xlat
mov
xchg
ja
mov
retf
popf
adc
mov
sub
dec
cdq
push
imul
lds
inc
xchg
iret
mov
sbb
dec
xor
cdq
xchg
jbe
mov
(bad)
frstor
and
movs
cmp
test
aad
(bad)
pushf
cwde
stos
lock
pop
fcom
cmps
mov
mov
aaa
stc
pop
mov
and
hlt
mov
jne
adc
inc
daa
mov
mov
test
dec
aaa
dec
stos
test
sbb
(bad)
pop
hlt
fist
dec
xchg
lahf
mul
mov
mov
and
or
mov
push
cmp
mov
lock
sbb
pop
inc
test
and
aas
icebp
aaa
mov
jb
add
daa
je
ds
push
mov
push
pusha
mov
cmc
fwait
mov
iret
add
sahf
das
xor
das
and
int3
cmp
xor
bsf
loop
mov
and
sub
lods
jne
(bad)
jnp
cwde
sbb
(bad)
adc
mov
mov
aam
mov
sbb
push
push
and
jnp
pop
jno
dec
jg
pop
sub
retf
mov
fild
call
adc
mov
mov
and
loop
dec
lods
in
leave
dec
addr16
das
add
add
rol
mov
call
dec
jne
int
inc
aas
xor
(bad)
sbb
ins
xchg
enter
pop
retf
outs
movs
mov
and
gs
adc
mov
inc
daa
sub
lahf
fcmove
sahf
add
dec
xchg
or
imul
and
cmc
ins
inc
out
inc
dec
inc
mov
lea
jmp
fwait
test
mov
sub
(bad)
popf
mov
dec
sub
cmps
and
fild
cdq
cmc
(bad)
lock
sub
fisub
add
imul
adc
push
lea
push
push
cmp
ret
ds
cli
rcr
dec
or
es
clc
les
enter
mov
or
(bad)
in
pop
mov
fbstp
out
nop
imul
push
dec
lahf
push
jo
lea
dec
sbb
cwde
repz
into
adc
int
jle
(bad)
outs
dec
lock
mov
pop
out
inc
pop
(bad)
mov
dec
xor
jle
or
lods
int3
dec
pop
sbb
rcr
leave
(bad)
out
dec
adc
fidivr
mov
and
cld
mov
ss
sbb
mov
add
(bad)
bound
in
and
sub
pop
pop
addr16
jne
cmps
inc
inc
or
push
mov
xchg
test
pop
call
es
es
(bad)
cmp
xchg
cmp
dec
mov
jae
push
aad
push
stc
sbb
lea
icebp
stos
xlat
push
push
frstor
push
std
(bad)
repnz
jl
ret
clc
mov
or
jb
out
jmp
and
add
(bad)
dec
loop
mov
out
shl
std
mov
mov
and
push
dec
xor
fsubr
sbb
dec
je
clc
xchg
sub
jo
sbb
adc
and
xchg
call
dec
cld
repz
aas
(bad)
cld
repz
aas
(bad)
cld
mov
in
or
arpl
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
rol
jmp
cmps
cdq
ss
jmp
fst
xor
arpl
cmp
and
sti
cmp
add
add
push
mov
lods
push
(bad)
mov
adc
pop
and
push
aas
jp
mov
iret
mov
mov
pusha
shl
mov
aad
add
cmp
jp
sbb
push
jg
pop
xor
fs
in
sbb
jp
repz
loop
repnz
mov
out
sti
jo
mov
jg
mov
mov
push
aad
loopne
adc
dec
or
lods
sahf
mov
jnp
lods
outs
push
in
add
repz
inc
(bad)
pextrw
adc
stos
lahf
pop
mov
in
cmp
addr16
rcl
mov
adc
mov
rcr
jecxz
imul
pandn
dec
inc
sub
iret
out
(bad)
jne
or
fsub
sbb
ds
mov
and
shl
aaa
sbb
jle
add
push
ror
les
mov
fldcw
(bad)
clc
push
sbb
xor
in
int3
dec
(bad)
and
lds
cs
inc
hlt
and
sbb
lods
(bad)
and
sbb
push
loope
in
fs
sbb
xor
xchg
mov
jp
or
nop
repnz
sub
in
push
ds
jp
xor
adc
sbb
jge
pop
fs
jge
retf
jns
mov
loopne
int
jge
stos
call
ficom
inc
daa
fs
scas
xor
or
cmps
or
dec
mov
aad
lock
into
nop
(bad)
(bad)
ins
out
fs
jp
sbb
out
add
jp
pop
pop
mov
dec
xchg
mov
cdq
sub
out
stos
mov
outs
add
scas
das
test
mov
jae
jp
cmc
in
in
icebp
push
cwde
(bad)
add
xor
pop
bound
jb
adc
add
in
clc
fldcw
pop
add
stos
leave
jl
aam
fdiv
iret
aaa
retf
push
(bad)
mov
cmp
mov
pop
mov
inc
cmps
sbb
shr
xchg
in
(bad)
loope
ret
addr16
neg
aad
dec
fidiv
inc
das
mov
sub
dec
lahf
jg
or
dec
pop
cmps
pop
lods
lahf
mov
sub
cmp
mov
outs
push
das
cli
ja
daa
pusha
mov
lods
push
inc
shl
jmp
mov
or
imul
lea
pop
dec
retf
test
or
xor
xchg
mov
inc
push
inc
outs
push
lea
push
ins
ins
hlt
dec
test
jl
cmp
test
lods
ret
pop
jnp
aad
adc
lods
dec
mov
hlt
pusha
or
push
aas
adc
iret
mov
movs
ss
cmps
rol
leave
xchg
xor
js
jo
in
mov
out
imul
shl
adc
mov
add
shl
mov
adc
dec
repz
ja
shl
fldenv
inc
out
imul
(bad)
in
mov
pop
loop
je
repz
and
cmps
scas
pop
bnd
cmc
add
jae
xchg
ret
rcl
ja
add
ret
xor
(bad)
ja
mov
mov
mov
imul
sbb
pop
adc
nop
sub
outs
mov
pop
movs
push
in
movs
ss
loop
jmp
push
cmp
loope
pop
sub
ror
push
and
(bad)
push
mov
fbstp
mov
cdq
popf
aam
aas
fsubr
dec
add
cwde
repnz
jnp
outs
out
inc
mov
or
adc
adc
mov
fidivr
jb
add
pop
mov
jmp
sbb
inc
scas
inc
jnp
xor
adc
and
pop
addr16
shl
push
push
cmp
ins
sub
retf
xor
scas
mov
out
push
int3
push
scas
stos
cs
lahf
aam
rcl
mov
sbb
jecxz
gs
cli
sub
pop
enter
mov
icebp
movs
les
push
mov
or
cmp
retf
cdq
or
push
inc
xor
mov
push
sub
jl
fsubr
(bad)
sbb
enter
loope
lahf
sub
idiv
imul
std
jl
out
jecxz
add
xor
xchg
or
retf
inc
mov
ins
lods
sbb
repnz
dec
aas
mov
or
mov
daa
mov
test
cmp
cwde
fdiv
pop
in
repnz
pop
push
jp
mov
pop
inc
pop
in
enter
xchg
daa
mov
idiv
into
jle
pop
jnp
sub
std
add
add
lods
jl
cmc
mov
shl
in
loopne
mov
shl
(bad)
mov
lods
mov
stos
faddp
ret
sar
cmp
jg
inc
js
cvtps2pd
xor
inc
add
and
fcmovnbe
cmp
mov
int3
imul
out
ret
retf
mov
shl
jle
sbb
jecxz
xchg
out
cmps
ins
sbb
inc
pop
aad
mov
int3
mov
cld
push
dec
scas
pop
loopne
push
and
dec
jne
mov
add
add
ret
test
in
and
in
push
push
xor
xor
mov
or
jbe
daa
pop
push
idiv
leave
daa
sub
retf
and
call
mov
sub
test
jle
and
out
jns
sub
pop
inc
movs
pmuludq
dec
pop
mov
mov
std
fmul
pop
stc
in
push
dec
stc
test
repnz
sbb
sbb
jae
push
jl
mov
sbb
xor
cmps
and
cmp
push
pop
or
loopne
cmp
ss
inc
mov
lods
sbb
daa
test
mov
outs
pop
sub
push
es
ja
(bad)
jb
retf
pusha
arpl
inc
movs
loopne
xlat
add
xor
lahf
adc
ss
jmp
fisub
sub
(bad)
lds
push
(bad)
xor
dec
pop
xor
jo
fwait
loope
sbb
push
shr
cmp
scas
sub
fistp
arpl
dec
repz
fdivp
stc
xlat
jp
cwde
stos
or
xchg
mov
pop
or
and
mov
jmp
mov
jecxz
jno
fwait
sbb
fisttp
push
xor
jecxz
jle
dec
iret
xchg
mov
mov
push
inc
pop
fnstsw
mov
(bad)
clc
push
push
dec
in
xchg
shl
int3
mov
xchg
iret
and
add
xchg
(bad)
xor
outs
imul
fwait
cld
fdivr
xchg
fmul
in
out
mov
inc
dec
test
imul
jb
jg
mov
dec
jle
dec
inc
leave
jg
sbb
sbb
mov
inc
mov
les
cwde
sbb
cmp
into
je
rol
cmp
js
(bad)
retf
int3
das
test
jnp
xchg
ret
stc
clc
push
arpl
enter
cmp
mov
jmp
sub
repz
ss
inc
cmp
in
mov
pusha
xchg
into
jnp
add
adc
push
sbb
lds
mov
jae
jmp
in
pop
sahf
xor
adc
or
pushf
mov
test
inc
cmc
out
dec
lea
xchg
test
cwde
dec
jp
xchg
ds
jle
xchg
loopne
aaa
push
cdq
mov
xchg
sub
pushf
clc
sahf
jmp
into
fistp
inc
aas
adc
pop
lds
fcmovnu
out
jns
cmps
scas
cwde
fwait
xchg
dec
pop
lea
outs
cmp
or
inc
lahf
adc
xlat
dec
mov
push
fiadd
mov
addr16
mov
hlt
cmp
mov
sub
je
test
push
shr
out
xchg
shr
rcr
jns
cwde
movs
mov
xor
jne
sbb
mov
lods
cs
js
in
sbb
xor
add
rol
rol
aas
stos
xor
jecxz
scas
lock
sahf
ss
mov
push
mov
sahf
push
mov
pop
lods
xor
xchg
in
ret
xchg
xor
rol
lds
aad
ss
push
dec
inc
mul
and
cmp
pop
sub
iret
mov
loop
jp
jmp
pop
and
mov
xlat
mov
xor
leave
addr16
add
inc
loope
shr
pop
(bad)
sub
cmp
mov
sub
out
cmc
push
inc
fidiv
xor
pop
stos
xchg
jae
hlt
or
mov
cmp
iret
or
and
dec
rcr
loopne
pop
mov
dec
outs
(bad)
mov
jmp
fbstp
call
pop
or
mov
icebp
mov
fldenv
fild
jae
scas
push
push
cmp
out
jnp
mov
(bad)
sub
inc
adc
icebp
loope
xor
mov
push
sbb
pop
bswap
aad
mov
call
scas
(bad)
push
sub
nop
idiv
dec
ja
sbb
push
push
mov
mov
cmp
mov
daa
ret
xchg
lahf
aam
or
clc
xor
sbb
jl
scas
and
mov
sub
js
and
jno
mov
and
mov
dec
pop
lds
fstp
adc
test
mov
jl
push
movs
iret
lods
cs
sub
ror
mov
pusha
jns
mov
jge
lahf
mov
fstp
ret
pop
cmc
dec
ret
pop
xor
rcl
push
sbb
ds
sbb
cs
dec
cmp
adc
mov
mov
hlt
cmp
xchg
inc
cmp
sbb
stos
out
push
cwde
or
mov
dec
dec
inc
dec
dec
out
jbe
je
imul
scas
mov
mov
mov
hlt
lahf
cmc
iret
mov
enterw
dec
sub
lods
adc
(bad)
loopne
(bad)
mov
cmp
bound
mov
lods
xor
mov
and
popf
inc
sbb
push
(bad)
scas
sub
pop
repz
inc
jnp
or
jmp
xchg
pop
and
inc
and
jbe
aaa
add
add
pop
mov
fwait
push
and
or
push
enter
and
jb
xchg
ss
adc
aad
jmp
pop
sahf
add
(bad)
sbb
fsubr
call
inc
enter
das
add
mov
pop
cmc
nop
pop
icebp
push
cwde
clc
clc
jle
stc
ins
mov
push
popf
push
mov
js
lods
mov
sbb
lea
add
retf
mov
cdq
or
add
cwde
inc
pop
lahf
cmp
mov
mov
jne
xchg
push
mov
in
xor
pop
xor
push
rol
in
pop
jl
sahf
jp
adc
ror
adc
cs
xchg
xor
pop
es
add
mov
push
in
mov
mov
dec
xchg
mov
cmova
xchg
nop
rcr
and
and
mov
(bad)
xlat
push
or
test
cmp
mov
int
xchg
out
mov
mov
lahf
adc
inc
or
push
rcl
pop
shl
call
and
ins
xchg
adc
je
inc
into
sbb
sub
inc
popa
mov
jne
loope
stc
dec
jmp
ds
mov
xchg
adc
outs
push
aam
sub
pushf
adc
test
rol
pop
jecxz
dec
aas
fsub
pop
dec
xor
inc
hlt
adc
aam
cwde
(bad)
jg
push
push
and
push
das
pop
les
(bad)
cmp
adc
shr
into
jle
mov
pop
sti
and
popf
cli
fsubr
jns
adc
pop
rcl
mov
or
jg
mov
or
sub
push
mov
(bad)
aaa
add
pop
mov
icebp
fwait
dec
adc
dec
pop
or
jp
push
lss
cmp
jge
xor
out
pop
scas
pop
mov
jmp
lahf
xchg
dec
add
pop
and
jae
loope
or
addr16
jne
jmp
inc
dec
push
sbb
ficom
push
(bad)
dec
jmp
adc
xchg
aaa
mov
adc
test
cld
dec
mov
not
das
sbb
scas
lods
repz
fbld
inc
and
jp
jecxz
push
mov
fs
mov
hlt
dec
and
gs
mov
or
push
out
or
rcr
(bad)
sbb
out
mov
xchg
aaa
pop
sbb
mov
popf
sbb
enter
add
pop
sub
movs
ss
cmp
jo
inc
jno
sub
cmps
mov
pop
dec
sbb
pop
and
(bad)
jmp
loopne
push
out
mov
push
call
push
mov
icebp
xor
add
retf
in
mov
pop
test
imul
repz
js
imul
xchg
push
popa
imul
aam
scas
icebp
test
fwait
(bad)
retf
pop
sbb
mov
sbb
jle
cli
cmp
arpl
mul
(bad)
lea
add
adc
imul
pop
cli
add
fisubr
xor
das
and
sbb
adc
and
loope
mov
loopne
fidiv
aas
outs
jae
add
repnz
pop
call
push
pusha
mov
sub
dec
jl
cmp
fmul
int3
xchg
fs
cld
ja
fwait
outs
out
iret
cmp
imul
push
mov
shl
xor
push
(bad)
in
pop
jg
add
test
sbb
repnz
pushf
mov
xlat
pop
mov
push
push
clc
out
xchg
shl
jns
or
adc
imul
adc
repz
nop
test
fild
add
mov
mov
test
div
and
cli
push
or
loop
ins
psrld
mov
jno
push
and
dec
mov
mul
dec
mov
int3
stc
sub
aas
mov
push
fst
jnp
std
scas
mov
dec
sub
fbld
sbb
les
ins
mov
jns
(bad)
es
cmp
cmp
jle
lods
xchg
(bad)
push
cmps
and
sti
inc
repz
repz
or
inc
cli
adc
icebp
xchg
nop
sub
(bad)
mov
push
sbb
sub
adc
mov
mov
cli
dec
inc
call
jmp
sub
xor
movs
cmc
and
ins
mov
xchg
int
sub
or
pushf
jne
imul
sbb
cmp
nop
sub
xor
lds
sbb
mov
out
add
ret
icebp
data16
pop
push
test
mov
cwde
repz
mov
je
retf
stos
ror
fist
les
mov
pusha
jmp
mov
pop
lahf
xor
dec
(bad)
xchg
push
mov
mov
retf
test
jo
arpl
mov
outs
add
push
fcomp
add
jmp
pop
lds
cdq
jp
inc
fs
fwait
pusha
pop
push
jae
or
mov
mov
mov
mov
inc
pop
inc
(bad)
pop
sub
movs
xchg
stos
arpl
mov
addr16
jae
xchg
jne
rol
gs
mov
pop
(bad)
clc
imul
jne
sbb
test
outs
xchg
shr
mov
popa
jle
push
push
sbb
mov
mov
add
mov
cmc
cwde
and
dec
add
dec
cs
mov
fild
inc
aam
mov
push
addr16
cmp
mov
in
push
and
mov
loopne
gs
repnz
jmp
fldenv
push
(bad)
clc
(bad)
imul
pop
clc
or
pop
push
fidivr
mov
add
push
mov
mov
repnz
daa
dec
and
jp
cmp
jmp
mov
loopne
sti
xchg
mov
xor
jmp
and
jg
repz
(bad)
cld
out
(bad)
stc
iret
push
mov
cs
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
aam
add
loopne
loope
push
push
neg
repz
mov
int
jno
nop
in
adc
push
inc
push
(bad)
(bad)
xchg
mov
outs
pop
inc
dec
idiv
inc
ficomp
scas
sahf
add
ss
rol
mov
js
mov
adc
push
mov
xchg
fdiv
xchg
mov
adc
sub
movs
sbb
aas
movs
ror
fadd
cs
and
xor
(bad)
sbb
sbb
scas
shl
xor
dec
xchg
inc
jne
aam
in
retf
pop
ja
mov
sar
cmp
add
cs
leave
jo
jp
jecxz
out
dec
movs
cli
cmp
cmps
dec
cmp
mov
movs
and
pop
imul
inc
imul
jo
(bad)
xchg
adc
(bad)
push
test
sbb
mov
mov
xchg
cmps
xchg
jno
sub
push
pusha
sub
inc
mov
mov
ds
stc
(bad)
lds
popa
mov
frstor
adc
nop
pop
add
inc
loopne
fbstp
mov
jo
jae
sbb
cmp
cmps
int3
js
mov
arpl
pop
add
jge
ror
lds
cli
dec
inc
shr
mov
sbb
mov
jnp
and
pop
iret
cmps
dec
lods
das
enter
inc
xor
xor
outs
ret
lods
das
shl
in
ds
data16
sbb
fs
xor
mov
fs
jmp
(bad)
xor
add
mov
jo
mov
popa
push
inc
(bad)
mov
sti
cmp
cmp
scas
cmp
repnz
test
cmp
xchg
bound
scas
push
es
iret
push
jl
mov
aam
call
pop
xor
dec
push
sbb
test
daa
ss
add
icebp
push
xor
test
and
in
dec
mov
mov
shr
ret
push
jle
sub
fs
retf
les
aam
jb
imul
retf
pop
and
push
mov
out
and
je
outs
daa
and
jnp
sbb
lods
push
mov
(bad)
adc
jbe
sub
scas
rcr
push
outs
(bad)
mov
push
pop
jg
inc
je
cdq
mov
in
and
cmp
sar
cmp
ins
jae
cdq
or
pop
inc
(bad)
mov
push
pop
adc
cmp
fisubr
xchg
pushf
mov
push
cmp
jnp
jl
(bad)
fstp
and
rol
pop
out
in
aaa
xor
ds
shl
paddq
dec
scas
test
retf
ins
dec
xchg
cmp
pop
xor
cli
push
cmc
shl
adc
leave
ror
stc
fistp
dec
or
push
add
mov
aam
sbb
icebp
in
xor
mov
dec
xor
outs
xor
xor
das
mov
jnp
sti
lods
movaps
dec
fs
into
cmp
jne
push
ins
xchg
(bad)
sub
sti
xor
fist
lods
(bad)
cli
xlat
gs
adc
cmp
mov
leave
aam
leave
cmp
xor
imul
mov
ja
jmp
dec
repz
(bad)
mov
push
cmc
js
outs
popf
dec
pop
pushf
out
cwde
xor
outs
jmp
in
push
inc
push
mov
test
mov
cmp
ss
push
outs
xchg
call
aaa
out
leave
cmc
inc
mov
mov
jge
sub
fdiv
ins
sub
sar
add
jne
and
xor
mov
bound
stos
aaa
mov
sub
cmp
mov
cmp
jmp
movs
jo
push
adc
mov
and
cli
jmp
retf
add
iret
cmp
and
xor
into
push
jbe
out
cmps
mov
lahf
mov
hlt
push
or
add
retf
test
or
cwde
jle
sub
add
adc
mov
inc
sti
ret
xchg
push
or
dec
int
popa
xchg
mov
popf
(bad)
pushf
inc
daa
sbb
stos
int3
add
es
and
mov
push
iret
out
dec
adc
shl
add
pop
lods
jns
das
sub
fwait
sbb
ds
xor
mov
fwait
mov
adc
popf
les
mov
(bad)
cmp
mov
push
fsub
fs
mov
xlat
push
mov
shl
fidiv
xchg
popa
shr
js
mov
cmp
sub
in
mov
mov
add
test
popf
xchg
mov
pop
ins
rcr
movs
adc
jle
mov
jle
retf
sbb
bound
daa
inc
aad
outs
ds
ss
scas
mov
pop
ficomp
cmp
fcmovb
dec
add
and
mov
and
and
out
lahf
fpatan
ss
int3
sub
aad
cmp
clc
push
int3
popf
xchg
lock
retf
sbb
mov
idiv
pusha
iret
mov
jp
vdivpd
mov
int3
sub
inc
and
cmp
in
mov
sub
sahf
call
sub
repnz
push
sub
mov
in
inc
push
push
ja
dec
test
and
add
outs
xchg
and
dec
scas
ror
mov
loopne
pushf
mov
lds
pushw
repz
and
inc
repnz
movs
xlat
js
(bad)
imul
adc
mov
icebp
int3
or
jo
dec
ficomp
ss
pop
in
rol
leave
xor
or
bound
clc
outs
cmps
cwde
out
cmp
scas
xchg
sbb
dec
mov
loopne
mov
in
mov
mov
loop
es
inc
or
jns
fcomp
fs
pop
cmc
iret
xchg
shr
cmp
mov
in
mov
xor
jmp
es
jo
jl
mov
jbe
imul
push
xor
push
sbb
xchg
leave
icebp
sub
push
cmc
adc
cmps
add
inc
inc
mov
mov
out
xchg
nop
jl
jle
sahf
or
pusha
xor
xor
xor
dec
movnti
ins
out
pop
add
dec
dec
(bad)
sub
ja
push
mov
fisubr
popa
push
outs
in
add
cmps
xor
jge
cmp
pop
movs
fwait
imul
sbb
pop
inc
mov
dec
pop
aam
pushf
cwde
je
jmp
and
xchg
into
sub
sbb
sahf
(bad)
jecxz
sub
cld
jmp
jns
push
sbb
and
push
mov
jnp
push
in
dec
push
ss
xchg
sbb
mov
sbb
out
push
and
movs
mov
fst
mov
repz
lods
in
pop
adc
push
out
jp
test
pushf
iret
outs
pop
sub
inc
pop
stc
jbe
scas
push
jno
cmps
repnz
fwait
add
out
pop
std
int
into
cmp
setg
sbb
(bad)
rcr
adc
push
push
mov
push
adc
sub
lods
jge
and
jo
stc
mov
stc
ss
pop
pop
ss
inc
jmp
jle
outs
add
push
pop
shl
arpl
push
dec
dec
(bad)
push
or
call
je
(bad)
(bad)
lods
les
mov
adc
add
dec
xchg
lods
inc
sub
xchg
iret
cmp
pop
push
adc
jae
xchg
inc
repnz
out
inc
xchg
xchg
lods
js
retf
shr
adc
pop
cmp
es
mov
push
dec
and
mov
bound
std
xchg
loopne
xor
popa
inc
ss
push
fnstcw
inc
loope
jns
push
sar
and
adc
int
push
lea
add
call
mov
jl
repnz
mov
jae
and
inc
pop
(bad)
jmp
push
pop
pop
mov
push
mov
push
jmp
dec
std
mov
pop
cmp
retf
cmps
jnp
and
inc
or
pop
cmp
inc
fisubr
mov
movs
iret
mov
inc
outs
loope
cmp
nop
cmp
dec
cld
daa
jmp
jae
(bad)
add
and
adc
mov
jo
inc
sbb
mov
push
(bad)
ds
int3
out
inc
std
jbe
movs
mov
add
jg
cmp
dec
lds
fsubr
inc
ss
fnstsw
lea
mov
mov
pop
xchg
std
push
adc
pop
sti
sahf
into
inc
push
scas
loop
lahf
jne
adc
xchg
mov
fdivp
(bad)
xchg
iret
add
outs
and
lods
xchg
mov
inc
push
push
sub
mov
mov
movs
push
pop
fwait
xlat
lods
mov
out
xchg
push
sbb
inc
cmp
jnp
xchg
mov
loop
or
inc
push
jl
mov
out
pop
gs
test
inc
jecxz
mov
cmps
icebp
mov
xchg
je
pop
scas
movs
ja
(bad)
dec
pop
mov
xor
xchg
ficom
ret
cmps
call
pop
xchg
mov
sbb
mov
push
out
and
outs
std
adc
push
jae
fnsave
mov
xchg
rol
mov
dec
popa
mov
scas
pop
rcr
imul
bound
pop
sub
cmps
mov
jle
sbb
out
dec
stos
aad
add
inc
fcomp
mov
iret
out
pop
cs
sbb
cld
dec
sbb
mov
add
mov
test
xor
push
xlat
into
mov
lahf
inc
add
das
push
cld
mov
test
fdiv
pushf
add
in
(bad)
pop
add
mov
dec
adc
jle
cli
jmp
lds
mov
push
xlat
std
add
movs
jne
inc
mov
cli
outs
push
pusha
mov
pop
jb
jae
mov
jge
sub
jne
sbb
dec
xor
div
pop
stos
fs
mov
sub
out
imul
xor
mov
push
data16
test
into
jns
inc
lds
fcmove
sti
sub
jecxz
pop
mov
cmp
test
call
mov
lds
fist
and
xchg
retf
fld
stos
push
sub
push
(bad)
jmp
or
dec
adc
pop
ror
in
pushf
and
std
cld
das
xchg
pop
into
iret
push
pop
dec
lock
loope
shl
sub
loopne
outs
inc
(bad)
aad
out
push
sbb
or
pushf
in
dec
(bad)
jmp
cwde
or
fistp
lahf
sti
jno
in
adc
mov
pop
(bad)
jmp
das
neg
add
idiv
inc
movs
fs
pusha
or
jge
ficom
cwde
cmps
pop
xchg
add
shl
fmul
xchg
call
pop
ds
jmp
ja
dec
mov
repz
imul
inc
sbb
daa
out
scas
xchg
xchg
dec
xor
mov
mov
adc
xchg
sbb
sbb
cmp
jns
dec
jge
dec
cdq
pop
pop
xor
dec
dec
cmp
outs
mov
lds
outs
or
pop
data16
pusha
pop
jmp
jo
mov
repnz
push
pop
popf
jmp
lea
cmps
sub
repnz
ja
loope
add
lods
es
jno
dec
mov
adc
jmp
mov
out
div
aas
pop
popf
sub
or
push
mov
std
mov
sbb
and
mov
xor
and
dec
test
jmp
pop
jns
cmp
test
scas
sub
push
lods
cwde
or
lods
cmp
or
push
nop
std
and
out
ins
sbb
add
mov
aaa
push
inc
imul
pushf
sub
push
push
int
xchg
fild
icebp
(bad)
hlt
(bad)
jae
jnp
xchg
add
call
out
inc
sti
aas
stos
ins
ins
or
xchg
xchg
mov
scas
cli
in
pop
test
mov
pop
scas
dec
pop
mov
stos
pop
adc
fwait
sub
mov
mov
cmp
xor
into
sahf
mov
loopne
jg
or
sub
div
neg
stos
push
icebp
cmp
pusha
xchg
jmp
je
sbb
ret
add
ror
loopne
hlt
or
sub
fisubr
xchg
jmp
xchg
cmp
sub
inc
push
mov
out
xchg
test
cli
mov
add
(bad)
aas
push
adc
addr16
adc
(bad)
xor
sbb
lock
xchg
jno
inc
mov
call
jae
jmp
imul
aaa
or
add
jmp
adc
ror
leave
xchg
movs
cmp
clc
in
push
scas
push
adc
push
pusha
aas
xlat
retf
xchg
and
out
mov
stc
push
bound
daa
lahf
cs
loope
cmp
cmps
mov
fimul
cs
out
popf
js
gs
mov
enter
push
inc
dec
jl
adc
(bad)
outs
and
loop
push
jg
xchg
test
adc
xor
or
in
xor
inc
std
data16
out
out
or
inc
dec
mov
sbb
dec
or
xor
ss
dec
or
lods
pop
mov
retf
icebp
es
shr
rcr
adc
out
add
fistp
xchg
mov
icebp
leave
dec
aam
jle
enter
cli
bound
add
push
xchg
push
ds
in
mov
leave
out
dec
test
xor
iret
jg
mov
std
ins
xchg
xor
das
leave
into
sahf
mov
daa
and
push
leave
mov
jno
mov
add
or
test
ja
pop
mov
mov
int3
cmps
adc
sub
pushf
pushf
push
movs
or
(bad)
adc
enter
jb
mov
mov
movs
push
das
and
pushf
inc
dec
stos
inc
ins
cli
mov
pop
adc
mov
pop
sbb
in
stos
adc
xor
out
pop
pop
adc
push
xor
xchg
fstp
jge
and
or
imul
xchg
gs
(bad)
cmp
ror
mov
dec
es
push
mov
cmp
jge
xchg
nop
das
imul
push
out
daa
xor
rol
clc
aaa
mov
ror
enter
jl
bound
(bad)
loopne
in
sti
dec
outs
stc
arpl
lea
in
or
sti
cwde
into
(bad)
mov
mov
sbb
or
mov
mov
mov
nop
cmp
pop
ins
addr16
gs
and
rol
and
cmp
or
mov
les
cmc
dec
fimul
and
xor
sbb
or
(bad)
lahf
fsubr
(bad)
scas
push
xor
mov
xor
sub
cmc
loop
cmp
sar
call
(bad)
out
movs
jecxz
cmp
sbb
sub
or
sbb
std
mov
sahf
lods
imul
pop
push
or
fs
ss
mov
dec
stc
xchg
pop
mov
leave
bound
aad
cs
dec
mov
out
pop
mov
ja
cli
ins
les
movs
xchg
mov
popf
xchg
ds
lock
pop
rol
push
cmp
add
out
out
mov
push
jb
adc
pop
retf
test
popf
and
out
pop
jno
and
call
xchg
xor
idiv
imul
call
push
je
in
sti
dec
sbb
jno
imul
mov
clc
mov
cs
dec
sti
add
push
inc
scas
idiv
sub
into
dec
push
adc
jbe
data16
push
repz
cmps
mov
jno
push
les
sub
add
mov
sub
test
add
and
pop
and
push
sbb
jo
mov
jbe
inc
sti
jo
fwait
pop
adc
cmp
sbb
not
or
lock
lds
iret
mov
out
sub
pop
xor
lods
mov
xor
stc
pop
and
ss
dec
mov
test
mov
cmp
mov
cdq
loopne
adc
arpl
(bad)
stc
out
jg
stc
out
sbb
cld
pmullw
cmps
fisttp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
xor
rcr
fstp
sub
and
sub
and
sub
jb
out
nop
mov
add
jg
or
loopne
shl
(bad)
sub
and
inc
dec
mov
not
into
int
es
cli
lods
nop
retf
mov
stos
jle
iret
inc
inc
jmp
mov
mov
aas
mov
cmp
mov
mov
in
pushf
repz
imul
retf
js
ins
js
and
jo
repz
retf
and
cmp
cs
sbb
push
scas
aad
pop
xchg
mov
inc
cmp
and
les
mov
pop
lods
sub
outs
dec
sub
inc
out
aad
lods
je
dec
sbb
out
stos
and
outs
dec
push
inc
dec
cmp
popf
(bad)
push
shl
icebp
sub
cmps
ins
jg
sbb
pop
jge
in
xchg
ret
and
cwde
out
les
fldenv
(bad)
sbb
mov
mov
arpl
add
xor
aam
(bad)
inc
loop
and
inc
pop
cmc
mov
push
or
xchg
mov
fwait
mov
les
mov
les
mov
push
xlat
xlat
inc
(bad)
aam
push
inc
fst
pop
test
fs
pop
outs
dec
jbe
arpl
ds
test
and
les
test
retf
lods
inc
test
nop
cld
push
(bad)
loopne
pop
outs
pop
div
push
sbb
lahf
jle
out
mov
loop
jnp
mov
les
repnz
adc
sbb
xchg
or
mov
loope
add
aad
and
ret
lds
pop
and
adc
into
outs
mov
inc
and
cmp
pop
ret
inc
adc
add
sub
cmp
cmp
aam
movs
int3
ds
xchg
bound
cmp
fst
sub
daa
ret
cld
lds
fmul
sub
mov
push
in
jae
ficomp
ret
or
cmp
repz
xchg
xchg
push
pop
pop
or
dec
xor
or
pop
inc
not
add
fiadd
retf
out
cmp
sub
add
push
xor
repnz
mov
das
stc
xchg
mov
pop
inc
rep
push
mov
out
xchg
sahf
jb
frstor
aam
jnp
rcl
movs
mov
sar
cmp
inc
mov
xchg
mov
pop
ins
rcr
push
xchg
stos
scas
sbb
sub
fnsave
xor
scas
push
jns
mul
call
dec
test
cmp
jns
lds
xchg
cs
or
push
cmp
popf
sti
jns
jecxz
add
mov
jno
(bad)
adc
mov
out
pop
push
jp
cmp
(bad)
mov
fsubr
push
(bad)
popf
stc
dec
mov
inc
and
and
int3
push
fisub
(bad)
add
mov
xlat
mov
loop
fstp
jp
mov
loope
add
jbe
lods
in
fnclex
aaa
sti
cmp
adc
in
jnp
cld
dec
mov
je
sub
and
scas
jae
retf
xor
aam
stc
outs
sbb
cmps
loop
lds
popa
enter
sbb
adc
pop
sub
loop
ja
xchg
sahf
mov
push
xchg
cmp
or
or
ret
pop
ret
es
out
in
imul
cmp
cdq
jo
fucomp
daa
push
mov
lds
adc
push
mov
outs
cdq
cmp
das
and
test
mov
cmp
jp
(bad)
(bad)
loopne
(bad)
pop
add
xchg
movs
pop
mov
mov
inc
pop
int3
mov
xchg
cmp
out
movs
mov
inc
out
cmc
inc
inc
xchg
cmp
lods
fwait
mov
xchg
push
lods
in
cli
push
stc
sub
shl
cmp
sbb
jne
adc
in
inc
or
or
or
stos
push
mov
ins
mov
rcr
push
push
(bad)
imul
cmps
fsubr
sahf
add
fst
dec
aas
mov
inc
push
or
xchg
dec
mov
inc
out
pop
fsubr
dec
and
stos
dec
xor
and
movs
ja
fild
sub
mov
in
mov
push
push
jl
daa
jmp
cwde
mov
xchg
sub
push
loope
jl
sub
sti
mov
das
fwait
fwait
(bad)
xchg
inc
lds
xlat
enter
ret
scas
fsubr
mov
mov
psubusb
jmp
mov
mov
dec
mov
sti
sbb
xchg
cdq
mov
sub
retf
fxch
pop
stc
call
popf
jecxz
cmp
mov
cmp
ins
or
cmp
pop
call
sar
adc
mov
inc
rol
mov
push
cs
sub
push
add
mov
jl
loope
cmp
dec
mov
mov
sti
in
call
and
fs
push
mov
pop
pop
rcl
fnstcw
cmc
push
jb
jns
adc
push
jmp
test
fimul
push
jnp
sti
sbb
sti
js
jns
adc
sub
mov
mul
pop
inc
pop
mov
cmp
push
mov
nop
and
pushf
inc
pop
lock
mov
inc
mov
adc
icebp
adc
inc
loop
xor
rcr
fwait
and
iret
pop
popa
out
xor
and
xchg
aad
pop
out
js
cmp
sahf
pop
mov
push
mov
movs
mov
xchg
or
cmp
fbld
xchg
cdq
or
or
stc
out
lea
mov
sbb
lods
clc
add
jbe
inc
div
call
xchg
lock
mov
mov
int
mov
sbb
add
lock
jne
mov
(bad)
loope
jnp
pop
xor
jl
mov
push
push
xor
sbb
cmp
sbb
pop
rol
hlt
or
sub
jl
imul
or
jge
test
shl
out
pop
add
jp
sahf
cmc
inc
je
fnsave
mov
pop
push
jno
(bad)
retf
sar
aad
pop
sbb
cmp
dec
ror
push
ja
inc
pop
or
sbb
retf
and
xor
popf
mov
cmp
add
xor
ret
push
xor
xor
and
cmp
or
xor
mov
test
mov
call
pop
scas
dec
add
push
loop
aam
ret
out
pop
cs
lahf
jecxz
lock
xchg
push
in
mov
ss
icebp
retf
out
lds
out
push
mov
nop
fiadd
ds
fbstp
in
xchg
add
inc
jnp
je
cmps
out
popa
mov
lock
cmp
push
pushf
in
data16
xlat
xlat
dec
inc
push
test
fwait
ins
into
pushf
in
xchg
mov
pop
cli
aaa
jle
or
retf
(bad)
out
push
push
leave
push
push
pop
mov
cmp
push
dec
mov
cmp
inc
mov
push
mov
loope
pop
mov
pop
lds
mov
or
inc
push
and
or
mov
outs
cmp
js
sar
mov
cwde
psrlw
ins
jbe
stos
std
imul
xchg
push
mov
mov
shr
jle
xchg
sahf
and
push
pop
xchg
mov
ret
ficom
stos
int3
mov
rcl
adc
movs
mov
mov
ret
sbb
outs
bnd
mul
scas
test
js
test
or
in
jmp
(bad)
adc
cmp
jo
add
jb
sbb
stc
xor
jmp
sub
pop
xchg
loop
je
mov
xlat
adc
cwde
sbb
adc
ror
cwde
and
mov
xor
adc
dec
mov
mul
lahf
pop
jbe
push
mov
call
mov
das
jae
inc
cmp
jecxz
sub
sbb
jl
out
add
sub
xchg
lea
outs
test
les
lock
popf
pop
cdq
mov
inc
push
cmp
mov
dec
sbb
cmp
ficom
push
(bad)
loop
inc
mov
cmp
je
fist
mov
cld
or
mov
sub
(bad)
movs
push
push
rcr
sbb
(bad)
idiv
sar
leave
ret
jle
inc
repnz
fcomp
push
jge
mov
cmp
outs
leave
pop
shr
lods
push
imul
mov
inc
test
push
jge
cmps
mov
ret
xchg
shr
push
push
mov
nop
jle
and
adc
mov
push
cdq
in
cmp
mov
or
sbb
neg
out
jge
jne
or
xchg
push
stos
jae
sbb
cmc
dec
xor
mov
loopne
cmp
cli
mov
inc
mov
iret
or
pop
out
mov
lods
not
lds
sbb
sub
(bad)
ss
inc
test
enter
lods
into
in
add
test
scas
loopne
mov
popf
repz
sti
fcmovbe
div
push
push
mov
int
add
cmp
fstp
sti
mov
out
cmps
push
pop
sbb
push
(bad)
and
dec
sbb
or
cld
xor
mov
mov
cmp
adc
mov
imul
add
pop
stc
xchg
xor
dec
movs
push
mov
xlat
mov
and
lods
mov
inc
ret
mov
aas
mov
sub
in
pusha
push
cld
mov
push
clc
shl
and
movs
popa
icebp
lods
ins
sub
inc
ss
xchg
std
(bad)
jne
bound
in
mov
xor
daa
jb
pop
sbb
push
mov
mov
push
lds
sub
cmp
dec
push
pop
mov
sub
lds
jne
in
cli
stc
or
(bad)
bound
out
arpl
test
pop
test
cmp
jmp
(bad)
fistp
xlat
sbb
sub
lahf
jns
das
scas
les
jmp
loopne
jnp
ds
lea
mov
data16
ror
cmc
or
dec
cmp
mov
mov
xor
cmp
into
adc
stc
pop
call
xor
icebp
and
mov
mov
add
lods
scas
mov
fs
jo
aam
adc
jmp
ja
jmp
dec
fs
or
jb
out
jne
inc
cmp
std
fmul
adc
scas
sub
inc
ror
mov
jbe
rol
push
dec
and
dec
es
and
mov
push
mov
mov
mov
std
mov
add
sbb
inc
in
mov
sbb
adc
test
or
loope
push
inc
dec
push
jle
or
jecxz
mov
jne
fcom
sub
cmp
je
dec
xchg
lahf
mov
sti
ret
and
mov
adc
in
rol
lock
cmc
sbb
loop
bound
lods
cmp
sub
xor
and
mov
mov
(bad)
xor
xchg
(bad)
in
leave
adc
ins
xor
movs
lods
sbb
loope
cld
std
lock
sti
out
sar
adc
or
mov
push
movs
mov
(bad)
xchg
xchg
jg
add
lds
addr16
(bad)
sub
adc
rcr
and
or
and
pop
fst
outs
clc
bound
aam
mov
jp
std
stos
add
add
jmp
test
test
fiadd
xchg
jno
shl
lea
stos
(bad)
rol
imul
dec
pushf
sub
jns
mov
ins
fstp
jo
stos
lock
jge
add
mov
cmp
sbb
std
pop
aas
mov
push
fnsave
lds
iret
popa
fs
stc
arpl
retf
mov
push
bound
fisttp
daa
jmp
cmp
call
mov
pop
mov
test
jnp
call
pop
pop
fbld
jbe
jbe
fldl2t
or
call
cmps
adc
nop
jmp
sti
pop
add
in
inc
mov
mov
jbe
jno
cli
sar
push
and
adc
aad
pusha
add
and
xchg
fcomip
mov
xchg
and
mov
or
iret
mov
mov
pop
pop
pop
mov
adc
lods
pop
jbe
inc
rcr
fistp
jne
repnz
mov
scas
mov
pop
jnp
mov
adc
xor
aas
in
loope
rcr
xor
or
xor
into
test
sbb
sbb
rcr
enter
xor
cmp
movs
in
js
movs
stos
fnsave
pop
push
mov
(bad)
out
mov
push
(bad)
adc
js
mov
lea
aas
ja
pop
mov
icebp
scas
sbb
pop
mov
mov
or
std
out
(bad)
push
pop
add
xchg
jbe
sti
int
les
js
or
popa
mov
dec
mov
push
inc
mov
ret
cmp
jg
rcl
test
xchg
xor
cs
jne
test
sar
loopne
(bad)
dec
cmps
push
xchg
arpl
sub
cli
sbb
outs
xchg
jge
out
or
js
js
dec
aas
stos
(bad)
(bad)
sti
inc
mov
adc
repnz
jmp
add
dec
test
sub
and
mov
jle
push
xchg
xlat
jbe
shl
xor
or
and
jae
int
test
retf
imul
add
arpl
push
loope
dec
jle
(bad)
push
(bad)
in
adc
outs
or
jb
jmp
fldpi
cld
(bad)
pushf
mov
jl
mov
fistp
sub
sbb
jmp
and
loopne
out
push
cmps
fld
adc
dec
aad
ret
mov
cmp
mov
xchg
and
arpl
push
jo
mov
cld
fiadd
mov
(bad)
jns
and
mov
pop
icebp
xchg
jae
nop
loopne
fcmovnb
mov
lds
pusha
in
dec
ror
into
cmps
pop
push
ins
and
aas
(bad)
(bad)
mov
jecxz
ja
sub
sbb
dec
mov
mov
xchg
fdiv
out
int3
pop
sbb
fidiv
int
lds
push
mov
retf
and
test
mov
jmp
add
dec
xor
hlt
inc
and
push
sbb
cmp
into
and
mov
inc
xchg
cli
xchg
mov
cmc
jae
pop
sbb
stc
fst
sbb
fist
inc
and
or
jo
mov
lea
push
xchg
mov
jae
jmp
shr
stos
xchg
mov
jmp
daa
jg
sbb
out
push
dec
adc
popf
leave
loope
pop
cmc
loope
mov
inc
dec
or
das
sbb
fnstsw
loop
mov
(bad)
aam
push
and
dec
shr
xchg
int3
je
test
(bad)
je
test
(bad)
mov
sbb
xlat
mov
fist
cwde
int
outs
or
shr
push
in
push
imul
test
das
pop
mov
and
push
and
bound
jmp
lahf
sub
jg
inc
pmaddwd
mov
xchg
movs
rol
lea
cwde
sahf
or
enter
ror
mov
je
jmp
mov
shl
nop
fsubr
out
movs
pop
pop
inc
push
fcmovbe
fsubp
setl
shr
iret
jne
ficom
cmp
ins
xchg
call
xchg
movs
aaa
push
and
nop
fsubr
xchg
or
shl
cmp
shl
icebp
and
adc
cmp
cmp
xchg
xchg
repz
mov
gs
jb
add
mov
mov
sub
jo
daa
(bad)
ftst
gs
(bad)
add
ror
cmp
mov
xchg
mov
into
dec
push
xlat
pop
scas
inc
xor
pop
dec
outs
test
imul
inc
xor
rcl
jo
ret
in
repnz
sti
ret
mov
mov
test
lods
scas
cmp
out
(bad)
stc
iret
jg
repz
jmp
lock
jae
push
lahf
adc
retf
pop
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
aam
add
loopne
adc
jecxz
into
push
or
adc
pushf
in
mov
mov
push
cdq
dec
push
sub
and
out
xchg
cmp
inc
(bad)
xchg
test
jns
mov
push
inc
adc
scas
leave
push
ficom
xchg
push
mov
jae
sahf
mov
or
test
cmp
repz
les
adc
mov
out
(bad)
shl
mov
std
sahf
ins
int
div
mov
out
in
imul
dec
jb
imul
into
call
fbld
imul
call
outs
retf
mov
aas
fdiv
nop
outs
imul
out
add
push
outs
mov
mov
dec
bound
mov
adc
inc
js
mov
sub
cmc
fst
pop
mov
div
fs
je
ror
push
or
adc
inc
arpl
or
fstp
jp
dec
xchg
jmp
dec
xchg
rol
loopne
and
iret
sub
xchg
push
jnp
sahf
pop
jg
mov
idiv
dec
shr
aam
ss
xor
sbb
add
push
addr16
retf
or
mov
xchg
leave
std
fwait
stos
dec
and
or
jb
jmp
test
push
aas
pop
aad
cmc
mov
pushf
jl
or
pop
daa
mov
jmp
retf
daa
cld
sbb
and
in
jmp
push
jo
rol
ret
dec
jle
adc
push
mov
dec
enter
mov
mov
ficomp
pop
xor
mov
mov
loopne
das
mov
loopne
lds
mov
ss
jecxz
ins
cmp
push
retf
mov
shl
cdq
cs
xor
mov
sbb
fnstenv
mov
ins
sub
dec
and
fistp
mov
in
xchg
test
in
ds
pop
jmp
aaa
sbb
mov
mov
mov
mov
repz
loop
mov
loope
in
or
movs
or
mov
setb
mov
or
rcr
add
rcl
in
lods
popa
mov
mul
cdq
or
add
xchg
xchg
pop
pushf
jecxz
push
jge
mov
xor
mov
retf
in
pop
jnp
fs
out
cmp
out
jmp
or
pop
mov
cli
push
idiv
push
adc
push
cmp
or
out
mov
dec
iret
or
imul
inc
scas
push
xchg
xor
inc
dec
jns
repnz
and
sar
fs
mov
pop
aad
out
pop
sbb
lahf
pop
dec
lea
pop
adc
push
jle
add
push
leave
ret
or
imul
or
call
call
fst
(bad)
push
lds
push
not
mov
fs
mov
not
xor
mov
stos
add
push
leave
pop
cmp
(bad)
xchg
pusha
(bad)
popa
sbb
cmp
gs
aaa
cli
retf
leave
or
lahf
stos
imul
xchg
in
iret
out
push
sub
mov
bound
jns
dec
call
imul
std
es
fist
or
dec
mov
inc
fprem1
pop
lods
cmp
(bad)
std
gs
aad
retf
and
(bad)
pop
and
addr16
mov
test
xchg
dec
sub
(bad)
adc
dec
jae
test
leave
fyl2xp1
inc
stos
cmc
jae
sub
inc
sbb
loop
mov
(bad)
sar
inc
xchg
jmp
fisub
(bad)
jb
gs
aad
xchg
or
imul
je
pop
outs
test
cmp
ror
leave
adc
mov
aad
cwde
out
add
retf
ds
mov
aad
jge
lahf
cs
rcl
gs
push
scas
cld
test
mov
dec
xor
xchg
arpl
rol
push
cmp
inc
ja
sub
mov
das
cmc
add
pop
leave
in
xchg
jmp
cwde
or
pop
inc
packuswb
dec
clc
imul
sahf
retf
jl
lahf
xchg
dec
sub
neg
out
pop
mov
std
std
mov
cs
mov
dec
nop
xor
loopne
mov
sbb
and
arpl
call
cmp
inc
mov
(bad)
sub
not
xchg
je
out
sub
pop
hlt
jmp
test
loopne
ss
pop
lahf
out
sub
pop
jl
pop
xor
ror
jbe
push
pop
adc
inc
scas
inc
dec
mov
test
and
push
mov
xchg
ja
mov
int3
nop
test
sbb
outs
mov
pusha
(bad)
fstp
and
add
dec
ja
dec
stos
sub
mov
sbb
iret
pop
xchg
xlat
daa
cmp
dec
xor
push
pop
movd
sub
pop
mov
test
call
js
xchg
sar
in
pop
repnz
hlt
fidivr
mov
cpuid
ret
sbb
dec
xchg
lods
cmc
or
xor
adc
pushf
pop
jg
jae
xor
cmp
cdq
(bad)
jmp
push
push
adc
adc
aas
pop
cmp
adc
and
adc
outs
xor
sar
std
aad
hlt
and
pusha
jb
(bad)
mov
stos
mov
lods
jl
fldcw
ret
sub
add
lock
rcl
repz
pop
sbb
idiv
enter
div
sbb
add
test
lds
fwait
pusha
or
jne
xchg
inc
mov
jbe
jns
call
lds
les
rcr
jmp
push
mov
cmp
retf
lods
retf
mov
jae
fcom
fwait
push
mov
shl
out
leave
xor
xchg
(bad)
loopne
std
cmp
int
and
sub
icebp
dec
xchg
arpl
in
fs
lods
shr
and
mov
mov
fild
div
push
cli
or
xchg
std
mov
(bad)
popa
les
rcl
nop
mov
add
test
loop
and
iret
xor
arpl
hlt
iret
add
out
xor
inc
lds
xor
dec
adc
push
rcr
(bad)
jge
fsubr
fsub
and
pusha
mov
inc
pop
jg
inc
lds
mov
push
sbb
cmps
cdq
fnsave
jg
int
mov
push
loopne
mov
into
imul
sbb
xchg
int3
xor
xchg
(bad)
cmp
mov
outs
jnp
ss
cmp
shl
adc
stos
out
jb
fistp
retf
outs
lea
jge
sub
mov
fiadd
lea
xor
jne
out
mov
xchg
popa
aas
stos
xchg
push
repnz
cmps
sbb
fmul
cmp
ss
rcl
adc
aad
shl
das
std
ficom
cli
ret
in
cli
mov
inc
cdq
sar
cli
ja
(bad)
test
cwde
xchg
fsub
mov
cmps
(bad)
std
(bad)
mul
jnp
(bad)
hlt
jb
js
mov
push
fisub
xchg
sub
iret
xlat
jb
pop
cmps
dec
mov
in
and
fwait
gs
mov
push
cli
sbb
sbb
cdq
cmp
mov
mov
outs
pop
jecxz
mov
cmp
bound
xchg
cmps
pop
jp
add
clc
mov
jp
(bad)
push
xchg
inc
jne
out
test
ror
inc
mov
sub
inc
sub
test
iret
in
(bad)
fs
and
mov
inc
shl
sti
sub
add
(bad)
stc
add
std
lea
rcr
pop
jmp
outs
popf
xor
stos
rol
fnstenv
lds
pop
or
ja
stc
mov
ss
cmp
ficomp
mov
scas
test
int3
inc
aaa
call
sti
mul
sub
imul
xor
dec
(bad)
jecxz
xchg
ret
and
jne
ja
jl
(bad)
popf
int
je
xchg
dec
js
xchg
sub
stos
jae
int3
ret
gs
cwde
ret
(bad)
jns
std
cmp
(bad)
jle
mov
pop
mov
push
xlat
adc
inc
inc
cmp
lods
rol
in
or
inc
std
ins
sbb
adc
push
mov
inc
imul
adc
mov
sbb
rol
scas
iret
sub
arpl
dec
sbb
xchg
pop
scas
imul
stos
add
add
cmp
inc
popa
add
ret
cmp
inc
pop
retf
ss
daa
inc
lods
loope
xor
lea
lock
mov
mov
out
popf
xchg
stos
loop
xor
retf
mov
or
daa
adc
jns
sbb
je
cmp
xlat
push
inc
xchg
jno
pop
sbb
mov
repz
jle
xchg
test
hlt
jl
jl
and
jns
and
loope
lahf
push
push
fld
push
mov
ja
es
dec
push
aaa
cmps
sbb
cs
jmp
out
mov
aad
jl
pushf
sub
stos
jl
(bad)
and
cmps
cmp
rcr
out
data16
dec
dec
mov
fstp
push
xchg
cmp
xor
aam
push
pusha
(bad)
in
sbb
sbb
pop
mov
int
test
xchg
fisubr
repnz
sub
or
mov
popa
sub
test
aaa
add
jnp
stos
ret
repnz
sar
lods
pop
in
shr
cmc
ret
inc
jne
push
gs
mov
mov
retf
shl
or
mov
out
(bad)
mov
sar
pop
leave
xchg
and
iret
das
call
jmp
das
call
inc
rcl
ins
add
mov
mov
in
hlt
pop
cmc
jbe
push
inc
dec
add
jecxz
xchg
inc
mov
push
movs
pop
or
xchg
xchg
aad
sbb
inc
daa
xchg
les
fnstenv
sbb
cmc
les
mov
fwait
pop
jmp
pop
leave
push
das
std
ds
stos
ins
add
xchg
adc
cmps
mov
add
out
loopne
lahf
push
imul
(bad)
dec
int
dec
fcom
mov
lahf
loop
sbb
jmp
dec
add
jmp
xchg
push
aas
mov
jmp
push
pusha
out
scas
loope
sub
push
jno
bswap
pushf
cli
inc
in
ins
out
cld
ins
ins
sub
inc
clc
mov
jmp
sbb
cwde
rol
pop
loope
shl
jmp
(bad)
jg
dec
mov
inc
dec
ja
repz
xor
out
sbb
jmp
push
out
mov
mov
cmovp
sbb
outs
aad
push
xchg
mov
mov
jg
sub
bound
(bad)
popf
push
sbb
pusha
push
and
std
div
ins
movs
std
jns
aas
jl
xchg
dec
pop
enter
repnz
retf
push
mov
in
out
movs
mov
inc
call
inc
lea
mov
adc
sub
mov
out
push
or
or
in
mov
and
mov
ins
(bad)
or
dec
sbb
(bad)
sti
je
into
arpl
xchg
outs
int3
js
(bad)
fld
cld
in
add
in
xchg
or
test
push
xchg
bound
mov
das
outs
mov
inc
adc
cmp
gs
jbe
sub
sar
movs
cmp
hlt
jle
pop
idiv
mov
repz
fild
xchg
cs
mov
dec
inc
mov
pop
clc
adc
fdiv
aaa
push
jge
or
aaa
adc
jmp
mov
add
cmps
es
pop
adc
mov
adc
adc
ret
xor
xor
dec
ror
jecxz
setle
test
mov
iret
mov
cmc
mov
sbb
lods
mov
movs
xchg
pop
add
mov
stos
pop
pop
shl
mov
mov
or
movs
mov
add
cmps
retf
retf
add
js
lds
mov
fistp
es
pop
push
jne
rol
test
push
retf
jo
aas
jge
jl
test
cld
mov
dec
lahf
push
not
pop
leave
xchg
shl
add
jae
inc
(bad)
push
fxch
test
movs
push
fnstsw
scas
mov
test
int3
push
fidiv
ss
mov
dec
xor
fdiv
jno
movs
xchg
xor
sbb
les
cmp
mov
sbb
mov
push
xor
nop
xlat
jnp
mov
arpl
pop
and
pop
xor
popf
xlat
mul
mov
cs
or
or
aam
push
xchg
js
jmp
mov
mov
sahf
stos
imul
sbb
fdiv
iret
stos
fistp
jb
mov
popf
out
push
dec
test
mov
and
icebp
jmp
jmp
mov
sub
std
xor
stos
mov
mov
cmp
sbb
sbb
repz
out
lods
gs
and
cmc
into
inc
aaa
xchg
adc
inc
fwait
xchg
adc
mov
in
in
sub
push
ss
sahf
lock
xchg
sbb
mov
push
bound
cmp
jg
or
and
fsubr
pop
outs
ss
shl
mov
lock
sti
mov
mov
xlat
enter
rol
test
mov
scas
scas
mul
imul
add
sbb
stos
mov
aas
mov
xor
push
cmp
or
mov
push
sub
imul
xchg
das
push
ss
cli
pop
or
sub
sbb
test
fucomi
xor
mov
add
pusha
in
push
push
mov
into
arpl
or
lods
inc
cmps
and
jno
aaa
mov
push
and
cmp
(bad)
fisubr
outs
xchg
mov
jmp
and
scas
or
loopne
sub
pop
push
cmp
into
retf
stos
(bad)
sbb
lds
adc
aas
test
sar
popa
cmp
xor
cs
mov
repnz
data16
mov
stc
mov
retf
lock
mov
inc
jbe
push
fcmovb
pusha
cmps
pop
jb
or
inc
(bad)
or
dec
ds
retf
or
(bad)
dec
pop
push
js
mov
movs
test
or
jmp
movs
xor
jmp
(bad)
ds
rcr
mov
add
mov
je
jbe
(bad)
in
stos
fdivr
scas
jl
inc
and
rcl
loop
loope
inc
xchg
and
hlt
or
leave
and
xchg
cwde
lock
or
push
jmp
aas
in
jg
xchg
shl
jb
mov
xchg
sbb
enter
pop
cmp
cmps
mov
in
cmp
xor
pop
imul
inc
xchg
out
retf
sbb
pop
shl
fidivr
fwait
ret
jge
lods
jg
adc
push
sahf
(bad)
sbb
mov
lds
cs
aam
xchg
sbb
dec
adc
sub
jmp
pop
not
xor
and
loope
sbb
push
xlat
mov
xchg
outs
nop
or
sub
les
adc
das
rcr
imul
mov
out
sahf
cmp
test
xor
mov
imul
mov
push
cmp
sbb
jne
jae
sub
mov
sahf
sti
mov
lods
jbe
retf
xor
or
ss
pop
mov
push
inc
inc
je
test
mov
push
and
out
into
repz
mov
sub
sahf
mov
and
and
mov
add
mov
fld
cmps
stc
inc
cmp
push
sbb
dec
cmp
or
xor
or
cld
out
(bad)
stc
iret
jg
repz
jmp
lock
push
and
lods
punpckhwd
popf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
int3
add
add
scas
ss
pop
jecxz
jae
(bad)
jo
imul
jns
cmps
mov
fstp
mov
sahf
cld
aas
out
jecxz
out
jl
sub
pop
fdivr
stos
sub
mov
and
shr
adc
push
cmp
mov
mov
js
gs
pop
daa
mov
adc
jp
pop
test
test
lahf
fnsave
sbb
ins
jne
int3
mov
(bad)
sti
adc
and
mov
or
cmp
iretw
sbb
jbe
mov
and
cmp
(bad)
add
xlat
pop
mov
push
inc
mov
(bad)
jg
(bad)
fiadd
into
dec
std
jmp
(bad)
inc
(bad)
inc
push
and
pop
jo
cmp
shl
pop
aam
xor
out
fistp
sub
ret
bswap
inc
das
scas
pusha
xchg
inc
cli
jno
les
aaa
mov
outs
ins
imul
pushf
jns
call
dec
jle
scas
adc
push
lods
iret
mov
cmps
adc
dec
mov
das
cdq
(bad)
(bad)
xchg
cmps
cmp
push
lds
adc
and
or
mov
adc
dec
mov
mov
pusha
adc
bound
stos
xchg
mov
(bad)
sbb
xchg
mov
mov
cmp
jnp
cmp
dec
xor
push
and
xchg
test
(bad)
repz
ins
rcr
xchg
mov
rsqrtps
sbb
mov
jg
pop
xlat
jle
push
mov
cli
sbb
jmp
inc
popa
xchg
push
aad
aad
inc
call
mov
imul
es
rol
dec
retf
dec
dec
mov
push
(bad)
loopne
jl
iret
into
sbb
cdq
mul
adc
inc
xchg
pop
push
push
in
pop
jg
cmps
or
sbb
cmp
cdq
push
gs
jecxz
pop
sub
mov
jns
xchg
jg
(bad)
jecxz
data16
test
xor
in
adc
popa
fwait
cmp
cmp
mov
sahf
and
jbe
cmps
ins
mov
bound
jmp
je
xor
xchg
cmp
imul
mov
jg
mov
and
scas
xchg
push
inc
inc
clc
mov
inc
jbe
dec
shl
mov
xor
repz
clc
push
mov
pop
jae
scas
jns
jb
add
sub
xor
xchg
arpl
xchg
rcr
push
shl
xchg
int
mov
ret
mov
out
xlat
xchg
mov
or
xchg
push
daa
jno
pop
push
popf
outs
sti
pop
(bad)
pop
stos
addr16
cwde
inc
and
ficom
or
jmp
push
push
push
stc
jle
push
fcomi
sub
and
out
nop
mov
test
jnp
inc
sub
pop
lea
in
push
add
lock
fsubr
(bad)
out
call
scas
sbb
scas
pop
std
(bad)
mov
add
fidiv
xchg
cmps
xchg
addr16
daa
aad
jbe
mov
lahf
hlt
dec
cmps
cmps
pop
jne
(bad)
ss
fstp
push
sub
xchg
xchg
push
clc
fldcw
inc
js
outs
dec
dec
sbb
test
mov
iret
daa
(bad)
cmp
push
xlat
and
pop
adc
retf
jno
mov
mov
les
add
xor
sub
jecxz
fild
inc
mov
enter
mov
inc
and
inc
lock
jp
inc
dec
sbb
idiv
fldcw
mov
cmc
mov
int3
nop
stos
jns
mov
mov
ret
scas
adc
inc
pop
or
mul
(bad)
jp
lahf
es
loopne
lods
mov
mov
mov
or
retf
lods
xchg
ret
test
mov
jae
sbb
stc
add
call
movs
push
sbb
xor
outs
push
sub
or
aas
dec
and
and
fdiv
or
mov
rcl
cmp
enter
sbb
dec
push
bound
mov
imul
xchg
sbb
out
cmp
pop
jns
fnstsw
inc
cmp
test
sbb
pop
mov
into
fs
jmp
cmp
inc
mov
ss
xchg
int3
add
xlat
mov
push
mov
ss
add
and
outs
push
cmp
add
mov
xlat
adc
ds
imul
pop
iret
nop
imul
gs
sahf
sub
mov
mov
test
out
lds
test
push
stos
sub
push
imul
sbb
adc
adc
outs
in
jle
add
scas
shl
mov
scas
(bad)
mov
enter
cmc
xlat
cld
add
ja
pop
movs
ficom
scas
pop
cmp
xor
rcl
sbb
cmp
push
pop
movs
mov
xor
jae
xor
test
lahf
dec
scas
and
inc
mov
fnstcw
xchg
iret
cmp
or
outs
icebp
push
enter
mov
jg
fwait
push
xor
loope
lods
push
enter
stos
std
sbb
xchg
jne
retf
push
sub
and
sub
xchg
jnp
xor
aaa
or
fiadd
scas
push
pop
pop
xor
rcr
stos
mov
jbe
sub
and
je
pop
adc
and
jmp
adc
ds
dec
add
stos
mov
sti
cmp
fs
xor
jns
mov
mov
push
jmp
shl
mov
cs
test
pop
movs
adc
inc
loope
xchg
retf
inc
test
cld
sbb
xchg
sub
or
addr16
cmps
je
movs
xchg
push
xchg
shr
rcl
dec
and
loop
ins
mov
and
or
dec
xor
pop
inc
outs
or
add
xchg
ja
mov
ja
mov
pop
out
pop
ret
or
inc
inc
loope
jne
sar
aas
cmps
iret
ss
cmps
jl
cmp
mov
dec
out
cmc
inc
cs
and
add
mov
retf
mov
mov
stc
xor
mov
scas
int
cmps
gs
out
inc
pop
(bad)
cwde
sbb
stc
jbe
xor
mov
jb
int3
stos
out
pop
aad
xchg
xlat
fwait
dec
outs
dec
(bad)
aaa
leave
rol
push
in
movs
and
in
inc
and
int
retf
jmp
cld
mov
pop
and
xchg
dec
iret
mov
xor
push
xchg
mov
sub
loop
jp
ret
jmp
stos
jmp
push
aam
jp
mov
call
loope
cmp
xor
pushf
xor
cmp
div
retf
pop
sbb
and
addr16
lock
cli
add
ffreep
mov
adc
imul
pop
jb
scas
daa
sub
cmp
popf
push
and
pop
jle
hlt
adc
add
out
push
into
fdiv
ror
scas
sbb
icebp
add
pop
inc
cs
nop
pushf
push
pop
cmp
loopne
stos
pop
push
nop
fisttp
into
out
jecxz
xchg
sub
xlat
dec
sti
aam
or
inc
and
mov
lods
repz
loopne
xchg
dec
sub
je
xchg
cs
imul
push
jnp
cwde
ins
shr
inc
lock
jmp
inc
(bad)
adc
inc
dec
std
das
rcr
movs
sbb
and
push
fstp
mov
sbb
js
les
mov
mov
xchg
sbb
mov
and
sbb
aaa
inc
cwde
test
loop
rcl
jb
daa
adc
mov
sahf
pop
dec
aaa
icebp
xor
ds
adc
sub
lds
jbe
scas
(bad)
sub
pop
dec
call
and
int
xchg
hlt
adc
cmps
popa
cs
mov
cmp
mov
jl
sti
(bad)
arpl
leave
mov
shl
jge
push
sbb
aam
sbb
pop
loopne
mov
mov
jl
icebp
add
mov
lods
and
ret
sbb
push
dec
xchg
xlat
xor
hlt
nop
dec
lods
pushf
shl
mov
sub
push
jmp
hlt
or
rcl
outs
pop
cwde
lock
jne
stos
ss
shr
data16
xchg
sub
jns
and
cdq
cmps
test
jecxz
lds
stos
xlat
add
in
out
add
xchg
out
stos
call
iret
lahf
inc
jns
mov
out
xor
xor
dec
mov
add
(bad)
(bad)
(bad)
push
sbb
push
and
cwde
test
mov
fsub
iret
jmp
xchg
fs
mov
pop
sub
es
mov
test
shl
push
dec
mov
stos
sbb
test
jge
pop
mov
sub
jp
pop
loopne
xchg
clc
or
adc
cld
or
sub
sub
fsub
imul
les
push
loop
jo
adc
stos
cs
les
shr
popw
sbb
addr16
jbe
jbe
sti
stos
and
test
lds
pmulhw
xchg
or
cs
jecxz
mov
clc
push
or
jecxz
adc
int
push
call
or
clc
pop
in
mov
dec
adc
mov
sbb
adc
(bad)
cmp
xchg
xor
outs
stos
push
cli
(bad)
outs
addr16
xchg
adc
xor
mov
dec
les
or
out
jg
aad
mov
sbb
cmps
jnp
jl
test
xor
or
ja
inc
xchg
mov
and
fcom
sbb
fist
shl
adc
loop
sub
call
cs
out
clc
mov
mov
sbb
jno
retf
repnz
ins
jno
imul
and
aas
dec
push
push
jbe
ins
clc
pop
cwde
fnstenv
mov
mov
out
(bad)
pop
jecxz
stc
icebp
lahf
cmp
sub
(bad)
ss
sar
push
test
int
mov
dec
call
mov
test
and
mov
iret
ss
repz
sbb
sbb
jbe
xor
jle
push
aad
xor
fs
dec
rep
cmp
cdq
cmc
scas
dec
out
aas
sbb
sub
out
arpl
add
iret
popa
xchg
mov
mov
fiadd
mov
inc
nop
sbb
dec
mov
or
add
sbb
mov
mov
inc
push
mov
lds
and
sbb
sub
out
fisub
xchg
mov
imul
push
pop
fcomp
jo
mov
hlt
repz
xor
adc
lds
jns
out
into
or
and
adc
in
mov
inc
mul
mov
cmp
push
add
or
mov
mov
loope
jge
pop
xor
pop
inc
(bad)
pop
fnstenv
fnstcw
(bad)
enter
jecxz
xor
daa
sbb
cmps
or
test
sub
xor
mov
enter
aad
cmp
jbe
iret
dec
cmp
loopne
mov
fldcw
mov
imul
mov
dec
jl
rol
jmp
daa
outs
cmp
mov
and
pop
cli
cmp
or
out
movs
je
stos
mov
mov
add
mov
or
mov
(bad)
je
stos
shl
repnz
rcl
xchg
ret
cli
call
je
ss
fistp
loopne
imul
sub
push
dec
jp
xor
rcr
rcr
(bad)
xchg
push
cli
fstp
inc
(bad)
stos
movs
cmc
mov
xchg
mov
jns
test
repnz
mov
adc
add
lahf
jo
sbb
mov
adc
or
or
pop
dec
into
sub
(bad)
push
sar
rcr
data16
lock
scas
sar
sar
ins
xor
inc
bound
stos
ror
mov
jne
fisub
jae
push
pop
or
cmp
call
pop
pop
aaa
cmc
pop
sbb
loope
imul
aaa
pop
popf
push
dec
pop
(bad)
fstp
cdq
dec
adc
ins
sti
jne
mov
add
and
mov
rol
dec
std
xchg
les
add
(bad)
pop
neg
fnstenv
dec
xor
xchg
shr
mov
adc
(bad)
sub
gs
in
mov
inc
mov
(bad)
ds
pop
dec
fimul
retf
push
cmp
cmps
jb
cmc
loopne
jae
jb
(bad)
mov
scas
dec
cmps
(bad)
mov
inc
push
in
or
xchg
jbe
xchg
dec
mov
bound
ret
test
mov
stc
inc
ror
or
retf
(bad)
in
mov
and
add
loop
cmp
jb
or
imul
or
(bad)
mov
fstp
adc
pop
mov
scas
es
lods
fadd
sbb
dec
cwde
clc
push
xchg
push
test
dec
aad
repnz
or
adc
aad
xor
mov
in
fnstcw
inc
pop
mov
sub
xchg
sbb
push
aad
pop
pop
scas
xor
sbb
add
mov
stos
xor
lahf
repz
mov
and
dec
push
add
push
push
mov
hlt
pop
jns
ds
lea
stos
mov
adc
xor
(bad)
sub
xchg
lds
shl
jmp
mov
sbb
lahf
sar
dec
fsub
mov
out
add
jns
popf
add
xor
xor
mov
leave
rcr
dec
call
push
loopne
mov
ins
or
arpl
xchg
addr16
inc
cmp
dec
mov
jo
mov
les
movs
shr
mov
jbe
xor
fcomp
jl
jmp
adc
inc
bound
mov
sahf
pop
shl
mov
cmp
in
mov
mov
addr16
addr16
cli
ins
outs
jp
adc
stos
not
ror
hlt
or
fdivr
rcr
inc
or
jae
jg
popf
mov
xchg
mov
lock
pop
cmp
stc
cmp
and
mov
(bad)
mov
call
pop
dec
cmps
in
cmp
cli
mov
add
int3
mov
(bad)
xor
mov
idiv
ss
xchg
push
lds
inc
loop
jmp
test
push
xor
sbb
inc
mov
popa
sbb
jne
fild
pop
sub
sbb
xchg
scas
mov
pop
das
jo
stos
xor
neg
dec
ins
cmp
sbb
ins
rol
aaa
jnp
fwait
dec
ja
les
shl
icebp
inc
sub
mov
mov
out
jecxz
jg
ins
mov
adc
cmp
or
les
dec
out
sbb
dec
sar
icebp
mov
pop
inc
out
sar
es
aad
fs
add
adc
jge
jmp
mov
cmps
mov
cdq
loop
sbb
test
inc
inc
jp
gs
sub
inc
popf
push
ret
and
or
in
aaa
fs
add
fisub
dec
test
repnz
lds
out
dec
ins
cdq
ds
mov
mov
call
stos
test
cmp
mov
cmps
cmp
xor
shl
push
gs
mov
pop
icebp
or
and
inc
mov
mov
stos
(bad)
sar
sbb
jmp
mov
(bad)
cmc
mov
mov
rdmsr
movs
out
mov
les
and
pop
rcl
stos
ds
test
or
sbb
ins
mul
push
pop
scas
jmp
sub
sar
(bad)
hlt
ins
neg
mov
adc
mov
fimul
jbe
test
not
adc
mov
lds
loope
fistp
adc
leave
out
push
loop
adc
aaa
adc
jmp
cmps
ins
idiv
ds
aaa
mov
sub
mov
jg
xor
sub
add
inc
push
cmp
xor
ficom
not
or
dec
or
fwait
add
cs
cmp
(bad)
stc
out
call
add
jg
mov
xor
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
ss
push
addr16
test
fwait
into
mov
push
mov
dec
ja
xor
rcr
dec
ja
dec
mov
pop
jns
cmp
inc
xor
add
mov
xchg
adc
and
in
pop
lods
or
sti
ja
mov
jb
(bad)
pushf
test
(bad)
pop
pop
outs
ins
cmp
xor
push
jecxz
and
(bad)
outs
leave
aas
sub
dec
sub
aam
ror
pop
dec
jle
inc
fistp
stos
addr16
sub
cs
ins
cmp
xchg
cmp
inc
and
leave
fimul
add
(bad)
push
or
int
hlt
aam
push
shl
jge
push
inc
aad
mov
loop
inc
dec
std
rcr
cmc
and
repz
ins
jecxz
ret
and
mov
mov
pop
cmp
ins
dec
js
mov
mov
out
in
pop
test
popa
test
sar
xchg
push
not
push
push
push
or
pop
int3
jp
int3
dec
test
push
cmps
leave
mov
pusha
adc
icebp
(bad)
fld
lahf
movs
or
dec
xchg
nop
iret
xor
sub
cmp
mov
neg
mov
fbstp
ds
pop
jge
sti
jmp
cmp
scas
lock
stos
pop
mov
and
(bad)
cld
mov
xor
xchg
xor
fldenv
lock
or
adc
mov
and
leave
div
rcr
aad
sub
(bad)
lods
mov
or
sbb
shl
loopne
cmp
cdq
test
jmp
ror
stc
jmp
jnp
and
aad
std
jmp
aad
mov
inc
data16
ror
test
push
mov
lods
pop
push
adc
sub
dec
clc
(bad)
lds
ret
fcmovnu
push
ja
leave
ds
or
push
xchg
jp
and
(bad)
cmc
xchg
aas
sbb
jns
popa
xchg
int3
repz
scas
jbe
jp
xchg
repnz
rcr
pop
std
or
push
test
rcl
sbb
adc
imul
js
xchg
or
jmp
retf
and
sub
and
lods
or
jmp
jmp
dec
dec
cmp
inc
retf
addr16
in
int3
xchg
xchg
sub
arpl
mov
sub
jne
xor
das
mov
pop
bound
push
jle
adc
js
repz
jmp
shl
repnz
rol
popf
retf
cwde
imul
leave
pushf
mov
jae
dec
xchg
sahf
mov
mov
pop
imul
shr
mov
xor
shl
and
pop
ss
daa
leave
push
fwait
jo
xor
jge
cmp
xchg
not
repz
(bad)
mov
mov
pop
cwde
mov
fsubrp
loope
push
cmp
mov
xlat
mov
ins
into
aas
or
inc
clc
and
stos
or
pusha
fsubr
push
enter
mov
test
scas
dec
fldenv
inc
cmc
sbb
cmp
jp
(bad)
and
int
das
int
(bad)
out
imul
jecxz
mov
aad
add
sti
mov
xchg
imul
(bad)
out
pop
push
dec
aam
scas
pop
fs
pop
out
xor
(bad)
sub
sti
jg
xchg
mov
and
push
xor
push
loopne
popf
push
mov
xor
(bad)
cmps
mov
push
jbe
(bad)
out
fisub
or
mov
mov
sub
cmp
pop
je
cmp
adc
mov
scas
aaa
xchg
mov
mul
cmc
cmps
aam
mov
in
inc
xor
mov
and
adc
jae
and
sti
mov
xchg
cmps
mov
cmp
jb
or
xor
(bad)
fist
les
lds
dec
mov
das
inc
pushf
jb
cmp
jae
mov
push
in
jl
sbb
xor
ffree
mov
out
pop
mov
in
or
dec
xlat
jmp
ss
and
sahf
into
jp
adc
loope
adc
bound
(bad)
jecxz
jae
pop
out
adc
ftst
test
clc
repz
mov
inc
inc
pop
dec
add
test
ins
push
pop
inc
mov
icebp
je
and
shl
stos
stc
pop
xlat
gs
mov
and
nop
loop
mov
push
add
mov
or
(bad)
ins
iret
movs
xor
sbb
xchg
add
inc
pop
mov
xor
mov
dec
push
mov
cmp
(bad)
aam
jns
pop
in
(bad)
push
sar
xchg
adc
hlt
pop
xor
lods
fwait
pop
xor
test
pop
aas
adc
push
jno
out
outs
lods
add
icebp
ror
scas
jb
jecxz
push
xor
in
js
push
outs
pop
mov
clc
fwait
or
fadd
lea
xor
jae
mov
xchg
push
adc
cdq
aas
clc
aad
xchg
test
test
in
mov
sub
or
xchg
mov
scas
hlt
mov
push
rcr
adc
mov
(bad)
aas
push
mov
mov
and
loopne
jmp
xlat
sub
fstp
shl
fisubr
iret
dec
mov
(bad)
imul
rcl
das
cli
xor
aam
out
inc
xor
arpl
pop
mov
jb
call
pop
mov
dec
fs
call
sti
ins
pop
pop
mov
push
scas
mov
loop
inc
xor
pop
sbb
cdq
mov
inc
sub
pop
add
mov
xor
pop
push
pop
jecxz
into
jnp
rol
aas
enter
dec
clc
dec
inc
mov
pop
pop
cmp
repnz
dec
mov
jne
mov
xchg
sub
int
push
sbb
pop
ins
push
inc
data16
movs
fstp
(bad)
and
adc
les
jmp
add
call
(bad)
jbe
xor
aad
movs
loope
dec
push
leave
movs
fbld
push
mov
mov
cs
fwait
mov
push
mov
inc
add
pop
xor
js
fs
das
pop
into
push
or
add
pop
ret
or
pop
xchg
mov
cmp
mov
jno
test
add
ins
outs
out
sub
es
js
in
mov
jmp
or
sbb
test
mov
fisttp
in
pop
out
sbb
sub
inc
fisubr
ja
xor
push
ja
xchg
(bad)
dec
arpl
(bad)
dec
push
enter
es
in
in
mov
das
lea
test
movs
mov
and
leave
daa
outs
adc
mov
or
pop
add
and
pop
bound
and
pop
pop
into
fstp
clc
ins
iret
shr
jmp
lock
in
rcr
sbb
add
pop
or
jb
xchg
cmps
dec
les
xor
das
repz
add
xchg
loope
push
or
das
xchg
inc
clc
cmp
adc
xchg
out
xchg
iret
sahf
loope
stc
loope
push
dec
inc
popa
sbb
leave
daa
mov
mov
(bad)
(bad)
mov
mov
call
jbe
sbb
je
and
xor
inc
mov
ss
in
imul
xchg
push
push
fwait
popa
sbb
rcr
jae
jnp
add
mov
ret
cmp
fistp
pop
cmovl
cmp
aaa
dec
lahf
mov
(bad)
cmc
sahf
mov
repz
iret
xchg
mov
push
sbb
fmulp
fidivr
sub
test
sub
(bad)
addr16
std
fld
pop
jecxz
inc
vsubsd
xor
div
loopne
mov
shr
retf
repnz
dec
jge
(bad)
aad
or
aad
js
fstp
xchg
out
bound
call
scas
lds
jl
leave
xchg
jns
jge
mov
xchg
int
(bad)
mul
movs
fldcw
mov
push
mov
test
aaa
push
(bad)
(bad)
movs
push
out
loopne
imul
adc
out
mov
push
stc
pop
ins
xor
mov
adc
sub
cld
and
shl
mov
jne
ins
cmp
fiadd
sub
mov
test
mov
xchg
clc
pop
jns
fidivr
(bad)
dec
xchg
cmp
pop
loopne
or
adc
lock
jle
ins
dec
scas
aad
(bad)
jnp
xchg
pop
xlat
xchg
out
jecxz
lods
(bad)
aaa
jmp
cmp
out
jbe
xor
(bad)
jmp
dec
cmp
push
xlat
add
fnstcw
aad
stc
in
cwde
xor
(bad)
sti
movs
mov
in
push
mov
loop
push
dec
xor
shl
mov
shr
sbb
and
push
jmp
dec
fimul
mov
ret
pop
mov
shr
imul
fisubr
hlt
push
cdq
push
xchg
inc
push
mov
mov
data16
clc
arpl
test
loopne
adc
dec
mov
jmp
and
mov
sbb
inc
mov
je
lds
push
idiv
jae
push
movs
mov
mul
xchg
imul
mov
inc
sbb
(bad)
retf
popa
(bad)
in
mov
shl
jb
jns
(bad)
pop
lock
stos
dec
cmps
test
mov
lock
xchg
in
mov
mov
inc
aam
cmp
jbe
iret
das
mov
push
mov
mov
sbb
pop
out
sbb
add
jge
ds
stos
pusha
dec
cmc
ja
call
ror
push
adc
mov
xchg
movs
or
pop
into
pop
(bad)
jecxz
stc
mov
sub
daa
xchg
enter
(bad)
add
(bad)
in
cmc
xchg
in
je
fdivr
mov
lea
jecxz
cmp
out
xchg
xor
mov
mov
dec
pop
mov
ss
test
mov
push
mov
jns
nop
dec
sub
mov
pop
inc
xchg
std
push
xchg
xchg
inc
mov
shl
neg
inc
or
xchg
pop
dec
xchg
(bad)
imul
xchg
test
adc
xor
mov
adc
cld
cmp
in
(bad)
out
(bad)
jb
bound
popa
inc
in
and
mov
jle
xlat
xchg
xor
pop
fistp
inc
das
scas
ins
dec
icebp
dec
es
adc
mov
(bad)
mov
test
addr16
sub
(bad)
push
sbb
sub
mov
lods
or
shr
sbb
jle
xchg
push
push
add
xor
and
xchg
call
pop
int
mov
mov
or
inc
xchg
retf
(bad)
push
cmps
pop
call
aaa
out
in
test
mov
jmp
push
pop
sbb
push
and
inc
jb
jbe
lods
inc
or
dec
ja
push
fcmovne
mov
mov
inc
cmps
mov
ins
in
ja
jp
pop
push
(bad)
cmps
sbb
cmp
mov
push
cmp
fmul
je
dec
arpl
gs
pop
sbb
cwde
push
mov
mov
arpl
test
jmp
cli
xor
pop
xor
jge
ja
mov
pop
es
shr
mov
jmp
sahf
iret
mov
and
cmp
(bad)
jno
pcmpgtw
cmp
xor
jb
call
adc
push
je
adc
add
aas
sbb
int
or
call
jg
xchg
pop
adc
fadd
and
add
das
push
(bad)
dec
mov
jp
inc
mov
xchg
out
mov
dec
in
dec
jp
pop
push
repnz
ds
xor
xor
mov
pop
repnz
(bad)
(bad)
in
int3
xchg
jo
dec
bound
mov
icebp
or
in
dec
cmp
xor
xor
loopne
dec
fmul
mov
push
pop
loope
pop
in
jno
in
mov
pushf
mov
sbb
popa
je
jb
cmps
dec
xchg
push
mov
jb
cs
add
std
dec
add
fs
or
retf
movs
dec
(bad)
ficom
mul
lahf
stos
xor
jno
mov
scas
leave
repz
pusha
mov
outs
add
aam
loop
sub
int3
cmp
dec
mov
jns
xchg
pop
in
mov
mov
dec
push
arpl
pop
fbstp
inc
xor
std
inc
inc
retf
icebp
sar
popa
out
mov
addr16
mov
add
js
ja
and
dec
jnp
xchg
inc
xacquire
and
xor
sub
ret
inc
pop
(bad)
dec
hlt
pop
mov
sbb
and
push
inc
idiv
idiv
fnstsw
xor
sbb
sub
dec
jo
xchg
into
(bad)
xchg
call
or
out
les
or
sti
dec
nop
outs
cmps
in
arpl
loop
sbb
je
in
aad
xor
add
(bad)
sahf
jns
push
sti
jne
pop
jno
and
or
leave
ins
mov
fcmovb
hlt
adc
call
fs
sub
jmp
ud0
or
xchg
jecxz
addr16
jb
lahf
sub
jmp
pop
pop
sbb
cmp
hlt
mov
ins
cmp
jae
inc
jns
xchg
test
call
jnp
sub
dec
repnz
sub
push
cmp
lds
lea
cmps
in
(bad)
cmp
fdiv
scas
sti
and
adc
cmc
fucomip
jp
sub
cmps
ds
mov
sbb
mov
hlt
fsubp
mov
imul
rcr
jp
mov
and
jns
icebp
jp
or
in
nop
mov
outs
retf
fwait
(bad)
aaa
sbb
popf
pop
or
lahf
movs
pop
ins
inc
mov
xchg
mov
in
or
jle
xor
std
sbb
gs
imul
test
xchg
in
and
and
push
push
or
(bad)
nop
loop
cmc
inc
sbb
xor
push
sbb
or
icebp
lods
or
test
stc
call
mov
in
mov
inc
mov
and
es
in
sub
dec
fmul
and
test
test
mov
aad
(bad)
aam
cmp
daa
jecxz
fcmovb
add
mov
lods
int
mov
bound
repz
ss
sbb
cmp
and
pop
add
test
jae
(bad)
mov
repnz
push
pusha
or
jmp
in
mov
daa
inc
(bad)
icebp
mov
dec
push
gs
and
sahf
das
clc
sub
mov
push
xchg
jno
push
xor
cdq
push
into
data16
or
cmp
mov
inc
mov
jb
popa
adc
inc
cdq
pop
retf
jg
fcomp
mov
int
nop
mov
mov
dec
aaa
fcmove
jecxz
(bad)
xlat
cdq
bound
xchg
fnstenv
in
cld
cdq
stc
in
arpl
pusha
fstp
xchg
imul
push
fst
pop
loop
mov
lods
jbe
mov
pop
aaa
mov
fcmovb
push
scas
jbe
test
stc
xor
xchg
sub
sahf
clc
js
fisttp
cmp
ror
movs
xchg
adc
hlt
retf
xchg
inc
adc
call
fbstp
lahf
das
cmp
mov
or
mov
dec
mov
push
aam
jmp
aas
mov
lock
clc
ins
test
or
daa
or
rcr
outs
test
fwait
cli
lods
jecxz
sti
int3
arpl
ficom
lods
sti
jecxz
xchg
mov
rcl
scas
push
adc
repz
or
cmp
(bad)
xor
cmp
out
jmp
(bad)
(bad)
mov
and
stos
cmp
push
cmp
mov
xchg
sbb
(bad)
mov
aad
outs
test
in
pop
(bad)
fwait
pop
sub
sti
nop
mov
fbld
aas
stos
mov
lods
enter
fdiv
icebp
jns
jb
push
cmps
jg
pop
sahf
xchg
rcr
jbe
push
pop
mov
inc
jp
mov
lods
and
lea
lock
pop
imul
inc
test
mov
repnz
lahf
jg
stc
out
jg
stc
out
sbb
cld
ja
jo
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
rcl
sub
inc
bound
adc
or
push
pop
shl
mov
sbb
adc
xor
xchg
je
mov
add
sar
xchg
mov
sbb
mov
scas
push
in
and
out
fldl2e
push
jns
jecxz
test
cmp
repz
mov
pop
adc
jnp
cmp
jo
fnstenv
and
cld
inc
jbe
mov
fisttp
fcmovne
cli
fisttp
mov
mov
xor
scas
pop
inc
fxam
pop
scas
xchg
retf
pop
pop
sahf
retf
(bad)
movs
pop
inc
pushf
lods
stos
sbb
cmp
mov
(bad)
and
jae
out
cmps
fcom
jno
mov
fwait
sbb
cmc
push
ror
cld
cmps
ja
jns
cmp
adc
mov
mov
(bad)
rcr
(bad)
xlat
adc
cmp
or
or
jmp
sub
(bad)
cs
jbe
stos
bound
cmp
cmc
test
add
(bad)
dec
jle
shl
inc
cmp
fwait
cli
add
push
mov
xor
test
pop
ja
stos
retf
out
add
cmp
inc
mov
das
dec
je
cs
(bad)
cmp
test
push
and
pop
jl
push
push
or
xchg
les
dec
popa
retf
es
(bad)
xor
pop
jb
jb
out
cld
out
gs
mov
ret
lds
ins
jns
push
pusha
xchg
sbb
mov
imul
push
push
xor
dec
repz
cmc
ins
scas
and
ss
jnp
xchg
cwde
inc
popa
fadd
shr
popa
retf
xchg
dec
(bad)
fidiv
shr
inc
call
dec
repz
aam
inc
push
lods
inc
aas
add
jle
xor
imul
xchg
dec
loope
mov
xor
mov
adc
and
es
pop
sub
inc
mov
scas
and
leave
clc
fs
js
lock
xor
jne
out
pop
aaa
jae
inc
cmp
dec
xchg
ret
mov
lods
ret
pop
pop
pop
bound
shr
scas
and
inc
leave
and
sahf
inc
fist
mov
(bad)
pop
retf
imul
push
test
test
sub
xchg
add
nop
dec
nop
jae
push
aas
test
jge
cmp
sub
sahf
dec
movs
jl
call
in
adc
mov
sub
pop
push
fsub
sub
int
inc
call
dec
or
adc
test
pop
jne
lock
xor
pop
stos
add
pop
iret
mov
sub
mov
test
mov
and
push
(bad)
int3
scas
adc
pop
or
mov
jge
and
ja
sbb
enter
sbb
push
push
dec
rol
mov
pop
adc
push
xchg
mov
in
in
push
xchg
loope
(bad)
call
ins
rol
dec
dec
sub
(bad)
es
push
in
aaa
xchg
or
jb
push
scas
jbe
pop
push
hlt
push
mov
sbb
add
or
ret
push
cmps
pop
pop
xor
xor
and
outs
cld
inc
push
hlt
aaa
inc
push
call
ins
test
sbb
ss
ds
jns
mov
cli
mov
pop
add
inc
int
pop
push
inc
in
dec
pop
call
mov
in
(bad)
(bad)
push
jno
test
jl
mov
imul
pusha
test
std
fsubrp
cmc
int3
xchg
push
cli
ret
mov
(bad)
retf
mov
pop
adc
pushf
push
cmp
lds
fdivrp
xor
sub
cmc
imul
in
mov
loope
lahf
hlt
pop
cmc
pop
lods
and
nop
or
test
jge
fisubr
add
jns
out
in
test
fidivr
cmps
pop
lock
(bad)
call
mov
lods
and
or
mov
pop
pop
pop
mov
movs
mov
dec
ret
aam
div
add
adc
xchg
inc
pop
add
pop
int3
inc
not
inc
jmp
shr
daa
add
adc
out
ins
pop
in
das
inc
aam
les
movlps
inc
loop
cmc
xor
scas
push
mov
out
cli
stos
movs
cmp
adc
and
mov
jp
into
bound
enter
add
pop
ds
aaa
dec
retf
addr16
mov
adc
test
hlt
lods
out
fwait
dec
xchg
mov
push
mov
stos
inc
sbb
fild
adc
rcr
lea
add
popf
add
or
cmp
popf
pushf
sbb
movs
mov
cmp
retf
cli
sbb
mov
pop
ja
adc
pop
in
aaa
inc
push
pushf
push
(bad)
adc
jns
fild
test
and
repnz
mov
fmul
push
add
fbld
push
in
mov
add
pop
jl
push
inc
sahf
pop
in
mov
ret
xchg
dec
int3
fist
adc
cmp
mov
(bad)
ins
sbb
mov
adc
dec
hlt
jl
movs
aas
and
jg
cmp
jl
nop
jbe
fistp
xor
enter
and
pop
inc
jecxz
push
jg
cmp
adc
jge
loopne
xchg
mov
xchg
test
mov
inc
dec
sub
gs
mov
stos
mov
mov
mov
mov
rsm
jae
xlat
inc
mov
(bad)
cli
cmps
dec
test
scas
scas
mov
xchg
mov
inc
xor
mov
and
imul
idiv
push
sub
cmp
loope
scas
mov
aaa
popf
test
add
and
push
xor
ins
(bad)
in
xor
aam
sub
mov
sub
pmullw
test
jmp
repz
mov
hlt
aaa
int3
add
dec
in
(bad)
ds
jne
push
daa
push
adc
xlat
aas
mov
retf
icebp
xor
xchg
in
inc
(bad)
cmc
pop
ror
jmp
arpl
ss
fs
shl
xor
inc
stos
push
aaa
jbe
repnz
int3
pop
push
dec
pop
mov
jl
arpl
sub
pop
iret
enter
popf
into
pop
mov
mov
test
in
mov
cmp
push
add
(bad)
mov
sub
mov
cmp
scas
inc
xchg
adc
cmp
lds
pop
int
retf
mov
test
mov
test
mov
out
jl
mov
call
sahf
retf
addr16
dec
sub
lea
cmp
(bad)
jge
xor
shl
stos
in
in
lods
test
ror
leave
(bad)
pop
jo
cli
add
pop
in
mov
and
iret
popa
fidiv
mov
dec
cmp
sub
jmp
(bad)
sub
arpl
cld
mov
sahf
fst
movs
movs
push
jne
jo
and
pop
ficom
or
cli
push
sub
out
xor
cld
jae
xchg
cmc
xchg
cs
dec
pop
test
push
jmp
shr
pop
fincstp
(bad)
jl
push
neg
cdq
jb
add
inc
add
iret
das
(bad)
int
adc
int
adc
fld
xchg
popf
push
xor
imul
aas
(bad)
je
popa
int
xchg
fwait
hlt
mov
cmpps
outs
icebp
aas
aaa
(bad)
jmp
mov
dec
mov
add
cdq
pop
xor
or
jbe
jbe
push
sub
fsubr
int
jno
call
add
repz
enter
int3
add
es
loopne
je
jg
xor
pop
(bad)
jae
test
cld
sbb
add
inc
and
cmc
jbe
or
sbb
jmp
xchg
test
add
retf
jo
push
hlt
test
sbb
xor
sar
mov
push
xchg
mov
pusha
push
outs
iret
or
mov
stos
mov
rdpmc
ret
test
pop
mov
jns
jp
fadd
jo
push
scas
rcl
sub
loopne
test
ja
out
loop
(bad)
lock
sahf
jne
hlt
or
mov
out
inc
loop
sbb
or
mov
cwde
mov
out
test
cmp
pop
mov
out
push
sub
jmp
das
shr
xchg
sbb
(bad)
fs
xor
pop
lds
repnz
into
mov
ds
test
pop
xchg
in
inc
mov
js
call
mov
mov
sub
rcl
pop
stos
jmp
stos
sbb
out
es
push
fdivr
xor
pop
clc
(bad)
or
xor
xchg
mov
fsub
(bad)
xor
pop
enter
mov
std
test
push
hlt
jnp
jmp
fmulp
pop
adc
pop
enter
and
mov
shr
jge
and
mov
in
sub
and
test
sbb
inc
xlat
adc
dec
loope
mov
cmp
aaa
sub
fucompp
pop
jnp
fisub
pop
fmulp
ss
ins
mov
(bad)
push
jle
pop
mov
add
dec
sub
or
jecxz
sub
cmp
cmp
push
(bad)
push
fs
test
push
sbb
mov
int
adc
add
(bad)
ins
rcl
(bad)
iret
les
into
cs
cmp
scas
cmp
sub
retf
enter
call
(bad)
dec
pop
jecxz
xor
adc
cdq
cmp
inc
ds
mov
push
call
jnp
call
mov
fstp
push
sub
inc
in
sub
rol
dec
loop
xor
int
ror
pop
nop
loop
pop
fcomi
inc
enter
sub
outs
lahf
hlt
xchg
jbe
pushf
and
je
jg
cmps
test
xor
jp
jmp
mov
sar
xor
dec
mov
outs
imul
in
dec
jno
mov
scas
fwait
sub
pop
add
push
jmp
xchg
hlt
mov
call
sbb
push
and
or
in
or
adc
mov
test
jno
fsub
adc
(bad)
sub
rcr
xchg
pop
ins
hlt
dec
imul
jecxz
mov
mov
push
pop
dec
dec
push
fcom
mov
mov
xchg
lahf
lea
mov
and
xchg
int3
sub
or
xor
push
mov
mov
inc
fidivr
es
ja
dec
xchg
inc
mov
shr
stos
mov
shr
lds
inc
les
arpl
xchg
leave
call
push
cdq
cmp
cmp
add
sub
and
cmp
stos
int
inc
stc
popf
mov
aam
loopne
sub
cmp
xor
pop
in
sbb
movs
xor
inc
jl
sti
mov
pop
push
cmp
sub
and
ret
xor
push
popa
pop
jb
sbb
icebp
shr
push
cmps
xor
daa
pop
mov
aas
ins
test
(bad)
les
sub
sub
xchg
scas
jle
popa
push
cdq
jns
mov
and
ror
mov
push
out
or
push
sub
mov
and
dec
mov
adc
int3
mov
dec
sub
inc
push
aam
nop
cmps
call
repnz
or
inc
dec
add
jle
loopne
push
test
movs
ja
xor
inc
mov
mov
gs
inc
xor
xchg
pop
ins
pop
scas
dec
aaa
jns
mov
or
adc
rcr
in
xor
xor
fmul
push
std
frstor
pop
cwde
dec
in
sbb
jmp
sti
xchg
lea
adc
out
enter
fist
pop
sub
and
cmp
inc
jmp
pop
or
neg
mov
(bad)
xor
xchg
jno
dec
cmp
jmp
stos
movs
(bad)
or
dec
repnz
jl
push
cmp
push
test
adc
test
xor
sub
mov
addr16
mov
xor
mov
in
jmp
stos
sbb
cli
lds
popf
sbb
push
mov
dec
and
push
add
adc
pop
mov
sub
cdq
dec
shr
jns
push
lahf
mov
(bad)
movs
jg
fld
xchg
push
cmp
fimul
std
xor
inc
cmp
pop
clc
adc
ins
pop
loopne
call
das
repnz
dec
mov
mov
push
pop
pop
xchg
xchg
dec
jecxz
sub
retf
jp
add
aad
out
jne
push
test
rcr
(bad)
cmp
(bad)
sub
es
sbb
sbb
dec
mov
inc
xchg
jmp
inc
push
test
pop
jnp
dec
outs
xchg
lods
movs
gs
andps
sbb
loope
sbb
shl
sub
mov
inc
sub
test
rcr
sbb
push
mov
mov
cmp
xor
call
outs
mov
push
mov
jbe
(bad)
or
cmps
lods
xor
hlt
cld
sbb
cmc
test
movs
(bad)
call
repnz
inc
push
fimul
xor
out
mov
clc
push
imul
loope
jae
repz
mov
mov
cdq
jmp
test
push
ret
sub
or
pop
xor
cli
sbb
test
in
cmp
out
(bad)
in
cmp
pusha
dec
pop
stos
shr
(bad)
adc
pop
cmc
jb
sub
cmp
outs
xchg
push
push
pusha
sbb
mov
jne
std
popa
stc
jg
and
push
es
dec
cdq
lds
arpl
mov
out
mov
xor
xchg
scas
enter
sub
outs
mov
pop
ins
xchg
lahf
mov
inc
jae
gs
cmps
jp
xlat
cli
int
lods
out
ja
pop
pop
jle
cmp
mov
pop
icebp
clc
mov
fisub
pop
mul
cmp
mov
sub
(bad)
xchg
adc
xchg
faddp
fld
ror
std
push
mov
jle
pop
das
mov
or
dec
sbb
dec
and
enter
mov
es
jnp
xchg
leave
js
add
cdq
lods
push
xor
mov
pop
pop
movs
push
retf
fistp
mov
aas
scas
ja
aaa
push
push
inc
sbb
sub
(bad)
adc
call
cmps
clc
ret
aas
sbb
popf
ja
aas
call
mov
dec
jp
adc
inc
push
loopne
nop
mov
imul
lahf
das
ins
std
pop
add
push
cmc
ja
dec
dec
pmaxsw
scas
xchg
xor
or
inc
aad
add
adc
clc
mov
sahf
int
retf
sub
push
test
mov
(bad)
cmc
mov
clc
outs
dec
aas
sub
xchg
cmp
(bad)
pop
xchg
jbe
inc
sbb
adc
ja
sbb
in
xor
popa
push
sar
lods
inc
sbb
aam
inc
cmp
xor
mov
mov
dec
pusha
fisttp
inc
retf
push
dec
cmp
and
xlat
idiv
stos
dec
jmp
movs
and
mov
std
movs
push
add
xchg
ss
or
ins
push
not
movs
ret
ficomp
mov
jg
and
out
leave
push
mov
cli
dec
mov
clc
loop
pop
ret
xor
dec
fist
push
mov
test
inc
mov
fisub
add
addr16
arpl
rcr
jle
leave
mov
lods
jb
sbb
dec
sbb
inc
cld
rol
imul
sub
ins
loop
fisttp
cld
and
xor
adc
mov
(bad)
sti
cmp
sub
or
sbb
(bad)
dec
movs
jmp
jno
jmp
int
adc
xchg
test
add
outs
dec
sub
ins
in
jae
xchg
pushf
popa
test
jbe
int
jno
cli
push
inc
movs
or
aad
jnp
loop
sub
push
sub
mov
inc
xchg
jge
mov
in
push
cdq
mov
or
mov
(bad)
mov
cs
ret
jo
daa
in
adc
lock
push
inc
loopne
shr
repz
(bad)
cld
out
(bad)
stc
iret
jg
scas
add
inc
dec
in
or
adc
out
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
and
pop
add
scas
into
sbb
rcr
mov
(bad)
les
push
aas
pushf
jmp
bnd
cld
lahf
div
in
repz
(bad)
jmp
sub
movs
push
lods
leave
lods
out
stc
fwait
retf
dec
mov
push
mov
lods
pop
inc
mov
mov
iret
sub
in
scas
pop
or
gs
sbb
sub
sar
stos
jns
mov
mov
add
repnz
ror
ins
enter
(bad)
fnsave
sbb
sub
jmp
loopne
movs
jno
lods
icebp
push
scas
in
out
sub
xchg
scas
jp
sub
jle
sar
xchg
ret
cmc
cmp
pop
and
icebp
jns
xor
cwde
push
and
scas
xchg
sub
adc
cli
retf
dec
pop
sar
or
xor
sbb
movs
pop
add
jmp
fisttp
push
mov
cmp
pusha
aas
inc
lods
inc
outs
lahf
test
push
cld
ds
mov
jmp
es
retf
pop
retf
cmp
xor
out
in
lock
push
xchg
test
std
cdq
and
xchg
fld
bound
inc
mov
mov
loop
add
ret
inc
test
sti
out
jle
mov
jno
xchg
mov
xchg
leave
into
jne
push
pop
rol
arpl
or
test
sub
push
ins
push
push
outs
jg
call
cmp
fadd
mov
(bad)
pusha
retf
pop
jge
bound
lods
xchg
lods
inc
test
push
xlat
shr
fld
out
cmp
xchg
loop
inc
(bad)
int3
enter
or
ror
mov
rcl
adc
loope
mov
sahf
mov
(bad)
dec
out
and
aad
retf
shl
bswap
popa
fimul
inc
daa
xchg
cmp
push
into
fmul
(bad)
je
mov
jmp
repnz
xchg
or
push
rcr
sar
push
in
mov
mov
jb
fiadd
and
mov
add
xor
inc
popa
mov
movs
in
loop
xchg
stc
add
loopne
mov
hlt
fidiv
inc
(bad)
push
mov
lods
test
cmp
aad
hlt
repnz
aaa
dec
fadd
cmp
repnz
retf
cmps
or
adc
jnp
dec
retf
mov
push
imul
and
gs
mov
adc
cmps
or
dec
mov
bound
cmc
out
jp
pop
pop
jno
mov
lock
and
js
push
push
and
sbb
sub
retf
adc
mov
pop
movs
add
push
lods
leave
pop
call
or
push
dec
push
mov
and
rcl
pop
ja
sbb
sar
clc
cmp
sahf
loop
out
mov
push
cdq
ror
imul
(bad)
dec
imul
mov
adc
jmp
repnz
in
retf
or
jmp
jo
leave
pop
movs
ret
jns
push
and
rcl
mov
pop
mov
bound
fcmove
lahf
xor
sbb
movs
lea
pop
cs
cs
fistp
cmp
cs
xchg
mov
gs
push
and
ss
nop
pushf
cmps
cdq
lahf
repz
pushf
fidiv
cmp
jmp
mov
sahf
xchg
xchg
jne
xlat
scas
mov
xor
xor
movs
pop
xor
adc
mov
scas
mov
das
push
sub
inc
pop
fild
adc
or
sbb
cmps
outs
movs
sub
fwait
push
and
inc
sub
push
mov
mov
in
xchg
mov
leave
push
add
pop
pop
jl
(bad)
xlat
sar
das
pushf
pop
ror
lds
push
aas
pop
xor
loope
jecxz
jno
sbb
xor
adc
pop
je
nop
sub
stos
ja
and
mov
and
mov
(bad)
out
mov
call
cmp
movs
out
rcr
mov
sbb
enter
and
mov
popa
adc
fst
pop
sub
xor
adc
add
jl
and
ss
cmp
xchg
xor
xor
and
mov
jp
(bad)
outs
or
sbb
bound
fcomip
iret
std
data16
inc
dec
jnp
ret
pop
jo
cs
cld
fwait
or
push
push
inc
in
(bad)
xor
jl
mov
cmps
pop
inc
dec
cmp
outs
out
in
add
in
sbb
xchg
rcr
push
retf
ins
mov
xchg
xchg
fdiv
das
pop
jns
pop
inc
ss
inc
lea
jne
ret
add
lods
xchg
add
gs
sbb
xchg
ds
pushf
mov
sar
xchg
aam
pushf
data16
dec
cmp
movs
jle
jle
pop
adc
push
outs
xlat
xchg
out
mov
sbb
jno
rol
or
sub
push
int3
or
xchg
dec
jb
daa
and
push
adc
rol
fldenv
not
cmp
stos
add
leave
adc
dec
add
fsubr
stos
dec
repnz
dec
aam
add
sbb
(bad)
rol
and
fstp
vcvttss2si
inc
dec
dec
adc
xchg
aas
xchg
idiv
arpl
cmp
loope
jae
mov
in
pusha
icebp
(bad)
loope
fimul
lods
dec
or
mov
ja
jle
popa
js
mov
aam
ror
xchg
add
stc
and
cmp
push
cmp
in
ss
jne
xchg
cmc
sbb
lea
mov
add
call
lods
rol
out
sub
pop
sbb
fwait
or
retf
adc
ins
stos
push
pop
or
fxch
push
mov
push
jge
call
movs
ret
enter
push
js
jns
(bad)
xlat
fs
out
mov
dec
pop
xor
pop
in
dec
push
das
test
inc
and
fwait
sbb
mov
mov
jecxz
push
jno
or
mov
ds
icebp
cmp
add
scas
outs
cdq
push
enter
sub
dec
dec
mov
and
fsubrp
dec
xchg
sbb
stos
int
mov
sbb
mov
pop
lods
mov
dec
repz
into
lods
fdivrp
ins
hlt
lea
inc
test
imul
jo
fisttp
mov
sbb
inc
pop
bound
mov
in
sub
fptan
inc
sar
mov
shr
mov
mov
in
nop
mov
(bad)
imul
and
jnp
pushf
xor
jmp
lds
jno
jae
cmps
mov
mov
cli
mov
mov
(bad)
sti
ss
pop
push
stc
test
mov
test
push
xor
push
inc
ds
cmps
imul
into
ror
out
dec
arpl
dec
cli
sub
push
sub
test
out
test
sar
pop
rol
in
or
loopne
test
xchg
sbb
sti
in
call
mov
faddp
rcl
or
sbb
ficomp
pushf
loopne
(bad)
stos
leave
sbb
(bad)
cmp
fld
sbb
sub
test
xchg
push
lock
xor
repz
ret
push
cli
jne
push
jns
jl
inc
jo
int3
adc
inc
add
cmp
push
bsf
add
lahf
out
jg
jo
lods
adc
jns
xchg
mov
jbe
aaa
movs
mov
ror
jae
add
lods
mov
and
xchg
adc
mov
gs
clc
and
mov
retf
aas
pop
xlat
out
rcl
sbb
xor
mov
xchg
push
pop
xchg
and
gs
int
push
push
pop
mov
and
dec
push
sahf
xor
adc
pop
shr
mov
js
popf
jge
fld
cdq
stos
sub
cdq
sahf
cli
stos
scas
stos
retf
(bad)
in
addr16
jbe
(bad)
mov
adc
rcl
imul
(bad)
jge
jecxz
xchg
sub
cmp
je
aaa
and
mov
(bad)
mov
cmp
lods
cmp
fdivrp
sub
add
scas
mov
sbb
sub
sbb
pop
jmp
and
enter
scas
mov
cmp
mov
call
(bad)
pushf
pop
push
cdq
sbb
or
cmps
cmps
cmp
sub
cs
mov
ins
leave
mov
mov
out
or
fwait
cmps
push
sub
bound
mov
into
rcl
arpl
pusha
ds
pop
xchg
sbb
mov
push
pop
or
cmp
xchg
jmp
push
sub
loope
inc
add
mov
out
test
test
cdq
daa
je
sbb
loopne
cmp
sbb
or
ja
add
dec
xor
ds
and
pop
stc
stc
sbb
add
imul
out
mov
rcr
mov
retf
cmp
out
lods
sahf
xchg
add
sbb
xor
mov
or
jnp
or
into
pop
push
and
mov
xchg
scas
xor
add
lods
inc
sub
or
xchg
pop
dec
cmp
retf
inc
int
pop
cmp
cdq
xchg
and
mov
out
das
mov
sbb
mov
dec
out
ret
xchg
rcr
push
pop
(bad)
jno
cmc
test
nop
dec
in
in
arpl
pop
push
dec
or
sub
sub
pop
cmp
mov
ja
stos
stos
pop
(bad)
call
shl
iret
cs
lods
cmps
cmp
inc
shl
inc
jge
mov
inc
aas
data16
fld
jle
dec
sbb
or
xchg
fs
dec
xor
outs
in
cmp
mov
xor
in
ds
(bad)
pop
or
sub
repnz
or
add
frndint
cmps
int
ss
mov
movs
or
mov
pop
push
mov
mov
scas
inc
jecxz
sub
mov
addr16
jns
retf
cmc
mov
outs
push
movs
xchg
mov
shr
mov
push
lds
test
sti
jge
cmp
and
push
jb
les
lea
stos
add
mov
stos
(bad)
fcomp
cmps
iret
push
push
repz
pop
push
push
(bad)
call
or
mov
imul
jno
inc
pop
int
jecxz
and
cmps
(bad)
(bad)
adc
add
(bad)
dec
les
in
nop
pop
mov
data16
lea
ds
dec
stos
or
sti
jae
jbe
inc
xor
adc
cmp
mov
pop
push
outs
mov
jb
outs
test
push
or
movs
lea
in
mov
fld
add
cmp
mov
mov
mov
cmps
xlat
mov
fcomp
mov
mov
std
ror
lahf
imul
push
std
not
das
jle
ror
lods
in
mov
jbe
xchg
pop
jl
ins
std
jecxz
xor
pop
xchg
xor
cmp
jg
mov
xchg
pop
dec
jnp
sbb
adc
ins
mov
mov
fild
add
es
dec
inc
pop
adc
in
jno
mov
icebp
aaa
nop
xor
test
clc
adc
add
shl
dec
inc
sub
int
(bad)
fwait
hlt
jns
popa
pop
(bad)
fisttp
and
and
push
leave
sbb
xor
neg
mov
shr
xchg
retf
xor
inc
js
dec
pop
cld
mov
sbb
or
lahf
xchg
xor
xor
fld
mov
xchg
push
ret
mov
loopne
in
mov
mov
in
xor
int3
jl
adc
mov
push
inc
xor
retf
lahf
les
xchg
dec
or
je
hlt
pop
jmp
mov
popa
retf
xor
push
push
jge
xor
or
mov
ret
out
out
out
icebp
fsubr
xor
call
cwde
call
movs
mov
sti
fistp
push
add
cli
pushf
jge
and
cli
aad
sub
and
(bad)
jbe
loop
jge
movs
popf
aaa
rcr
ja
bound
retf
and
sahf
jge
xchg
xchg
into
mov
dec
xor
mov
xor
pop
(bad)
and
pop
stos
(bad)
xchg
sbb
retf
sbb
inc
xor
cmp
mov
fnstsw
mov
pop
outs
sbb
pop
aam
or
cmc
push
sub
pusha
mov
sbb
push
pop
repnz
sub
test
push
pop
mov
hlt
lahf
sub
popf
dec
ds
mov
sbb
loope
mov
mov
sbb
push
xchg
test
xchg
retf
cld
in
mov
ficomp
neg
or
mov
out
add
inc
and
sub
and
jno
retf
aas
movs
sbb
pop
pop
mov
push
in
iret
sub
mov
pop
jecxz
outs
bound
ficom
push
out
push
mov
or
lods
in
or
test
pop
pop
clc
pop
addr16
popa
cli
push
fistp
dec
imul
or
call
or
adc
cmp
gs
les
mov
add
jle
enter
(bad)
xchg
jno
sbb
xor
pop
cld
and
sbb
jmp
mov
and
data16
fild
jnp
(bad)
pop
jbe
pusha
(bad)
sub
pop
jb
out
bound
mov
jns
ret
sub
xor
js
(bad)
fwait
adc
mov
and
int3
jns
xor
mov
popf
lds
pusha
mov
inc
in
lds
xchg
jmp
jmp
mov
test
xor
call
jmp
in
pusha
xor
mov
ja
jnp
sub
call
enter
stos
push
(bad)
mov
scas
xlat
movntq
out
sbb
stos
mov
stos
mov
push
inc
push
or
lods
jl
aad
js
ins
mov
adc
sahf
jmp
cmps
retf
dec
mov
cmp
jp
xor
xchg
gs
(bad)
loope
inc
std
sub
jl
sub
(bad)
cmp
sub
ja
xor
sub
sub
mov
xor
ret
retf
jns
(bad)
push
lods
cmp
and
mov
or
addr16
adc
(bad)
fabs
movs
ja
jg
push
mov
and
sbb
ins
outs
inc
dec
imul
mov
not
cmp
into
sete
rcl
or
das
dec
shufps
inc
and
fistp
dec
(bad)
xchg
ret
push
nop
mov
sub
call
or
mov
sbb
repz
mov
mov
popa
push
popa
ret
arpl
cmps
test
xor
sbb
dec
pop
mov
leave
cmps
imul
jae
hlt
add
inc
adc
inc
test
ror
rcr
jns
add
xlat
mov
inc
(bad)
jmp
cld
ret
sub
sub
mov
push
dec
cmp
jbe
mov
mov
sti
mov
jp
add
inc
mov
push
shl
mov
cmp
fwait
cmp
outs
sbb
dec
lahf
mov
popa
fisttp
retf
xchg
lods
fdivr
jge
pop
sahf
mov
mov
lock
mov
pop
aaa
ins
inc
data16
test
aas
sub
add
scas
push
ss
repnz
leave
sub
inc
sub
pop
ss
mov
jbe
xchg
scas
inc
es
mov
mov
cdq
mov
call
pop
mov
retf
sub
add
in
js
mov
mov
and
aaa
popf
lds
sahf
shr
data16
mov
retf
cld
ds
ss
cs
dec
mov
clc
in
movs
sub
aas
cmp
out
jg
stc
out
call
add
jg
scas
out
scas
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
pop
and
pop
add
scas
cdq
int
jb
sub
mov
dec
pushf
dec
(bad)
pop
xchg
mov
addr16
and
into
into
es
sub
jns
dec
lahf
ja
add
rol
pop
aaa
inc
push
or
cmc
test
pop
mov
(bad)
mov
push
push
out
push
aad
xor
sbb
push
lods
inc
hlt
fsubr
sbb
pop
xor
pop
lods
rcr
cmp
(bad)
lods
test
sub
into
data16
in
jb
popf
cld
sub
dec
dec
xchg
sti
ja
adc
pop
pushf
sub
imul
enter
stos
int3
push
fucomi
inc
int3
adc
pop
jmp
jo
sar
or
scas
sub
test
lea
mov
out
dec
pop
je
mov
adc
cwde
adc
jne
sti
shr
adc
fdiv
out
sbb
mov
cdq
and
loope
ds
jnp
daa
shl
ja
popa
ins
xor
cld
dec
push
xor
cmp
sbb
inc
jl
inc
dec
or
and
test
or
jmp
mov
fmul
sub
test
adc
inc
add
pop
popa
mov
fnsave
(bad)
push
jnp
mov
cld
xchg
pop
or
das
jnp
ret
sub
and
jne
jl
xor
(bad)
(bad)
call
xchg
xchg
std
pop
push
test
in
in
in
in
stos
pop
(bad)
ror
sbb
sub
out
aaa
push
jae
scas
xchg
xchg
jle
xchg
sub
adc
cmp
jne
dec
retf
pusha
or
or
jno
pop
and
adc
cmps
adc
dec
imul
adc
retf
xchg
scas
dec
sbb
pusha
add
add
ja
test
movs
xchg
push
imul
fcomp
jo
mov
and
ja
stos
ret
cmps
inc
sbb
movs
clc
inc
shr
icebp
cmp
fadd
or
sar
and
in
adc
inc
mov
or
call
jge
movd
lahf
push
pop
fwait
idiv
jg
pop
adc
je
cmp
jmp
inc
ins
call
adc
cmps
fcomp
outs
mov
mov
pushf
inc
pusha
test
dec
fldl2e
rcl
mov
ror
sub
sub
sub
xor
pop
ss
mov
push
imul
fs
pop
mov
mov
stos
jnp
icebp
sbb
push
repz
jae
loopne
mov
cld
ss
stc
cmp
sbb
int3
ja
das
mov
les
(bad)
lods
ins
addr16
mov
or
idiv
xor
sub
mov
fdiv
into
push
fsubr
dec
les
xor
cmp
inc
adc
sbb
outs
pop
mov
sti
cdq
mov
push
cmp
adc
jl
fld
dec
mov
clc
lds
icebp
fsubr
iret
push
push
fisub
and
xchg
sub
mov
adc
push
add
push
(bad)
ficom
mov
mov
cmps
mov
cmps
xchg
das
mov
xchg
imul
and
dec
pop
test
test
mov
or
xchg
je
jmp
int3
sub
cmp
sub
mov
std
ds
push
mov
pop
imul
and
shl
pop
aam
mov
std
bound
(bad)
xor
xchg
or
cmp
lods
lahf
sub
xor
mov
mov
int3
imul
and
(bad)
ja
(bad)
ins
mov
nop
cmp
fcomp
adc
aas
popa
in
sub
push
xchg
out
push
movs
sub
mov
rcr
outs
mov
inc
cmp
cmps
jns
xor
and
sbb
and
fdivr
xchg
mov
xor
pop
xor
(bad)
jmp
sti
mov
inc
test
adc
std
mov
mov
xlat
dec
cmps
cmp
xchg
lock
stos
jmp
int
xlat
push
sbb
ficomp
clc
jb
sub
stc
jecxz
mov
inc
(bad)
jge
cld
aad
mov
cmp
mov
mov
sub
inc
and
cdq
sub
fnstenv
push
or
and
int3
dec
pop
mov
ins
mov
and
push
jnp
arpl
and
mov
jl
stos
inc
jl
mov
or
dec
jmp
push
push
inc
retf
sbb
push
ds
test
mov
sahf
fs
jbe
test
stc
inc
je
jmp
iret
push
iret
icebp
cmps
shl
mov
dec
iret
jle
(bad)
outs
mov
ret
mov
xlat
pop
mov
or
push
dec
gs
es
mov
jge
mov
or
mov
add
xchg
pushf
jecxz
sbb
test
into
int3
popa
dec
(bad)
fiadd
imul
sti
outs
ss
jbe
jno
inc
ins
xchg
pusha
jno
das
jecxz
dec
(bad)
pop
xchg
xor
jno
test
rcl
test
les
in
sar
mov
sti
jae
retf
adc
retf
repnz
add
xor
into
pop
icebp
mov
mov
dec
fisttp
and
push
push
fs
pop
xor
adc
xchg
add
mov
pop
push
sub
or
pushf
jbe
push
leave
loope
mov
push
fst
jnp
or
mov
shl
cld
shl
mov
ror
pusha
cmp
je
cmp
pusha
mov
repz
jmp
test
bound
mul
ffree
xchg
imul
push
fs
cmp
add
xchg
and
fist
fdiv
mov
test
xchg
mov
pop
out
jns
test
in
fs
ins
jnp
ret
in
inc
push
jle
jno
in
mov
out
out
mov
push
stc
in
cmp
xchg
aam
adc
pop
inc
sub
cld
xchg
mov
inc
outs
in
hlt
mov
push
addr16
pop
imul
sub
and
dec
sar
pop
pop
push
hlt
pop
cs
in
int3
lahf
retf
or
inc
test
mov
fs
or
stos
outs
std
push
cmc
out
sahf
mov
lock
outs
add
adc
cmps
adc
cdq
add
mov
pop
iret
in
(bad)
pop
int3
aaa
fistp
add
xchg
(bad)
sti
jp
adc
ds
fld
adc
gs
xor
sbb
sbb
je
xor
dec
and
imul
inc
call
mov
jge
sub
out
in
fidiv
xor
mov
aas
pushf
and
retf
jns
dec
rol
daa
ret
push
push
into
sub
adc
dec
dec
lds
cmp
and
mov
push
lods
lea
cmp
and
lods
bswap
test
mov
pop
dec
(bad)
popa
popf
cmp
push
sub
(bad)
sub
inc
pop
ret
call
push
sahf
call
dec
mov
adc
mov
add
ja
jmp
and
imul
jmp
add
sub
data16
mov
mov
inc
adc
(bad)
dec
or
pop
or
int3
pusha
jecxz
idiv
les
ds
mov
pop
out
cmp
loop
adc
mov
jnp
(bad)
out
jg
out
cmc
nop
xor
jno
inc
retf
out
aad
sub
cmps
push
(bad)
adc
shr
xor
leave
leave
jbe
dec
pop
or
sub
(bad)
adc
cmp
sti
xchg
pop
jp
ficom
into
adc
leave
push
add
inc
jecxz
xchg
fldcw
daa
neg
fldcw
cmp
sbb
mov
mov
cmc
sbb
loop
jb
jo
call
loop
dec
mov
int
stc
cdq
iret
out
sbb
jo
fucomi
enter
xchg
ins
add
cmp
std
sahf
or
daa
ret
pushf
nop
pop
sbb
push
mov
shr
sub
stos
mov
daa
dec
jne
cmp
out
ins
int3
imul
jmp
push
cmp
pop
cwde
aam
jp
xchg
fs
mov
call
mov
mov
mov
stos
ins
or
addr16
pop
or
mov
aas
sbb
jl
add
inc
test
push
mov
sbb
cwde
push
lahf
xor
mov
fs
fist
ja
lea
add
sbb
cmp
test
dec
sbb
cmp
das
pop
in
ja
jl
fxch
in
add
inc
cmp
inc
cmp
repz
fstp
fist
jp
cmc
scas
hlt
outs
mov
(bad)
sti
jg
push
mov
dec
cmc
movs
call
xor
scas
out
lock
dec
mov
fwait
dec
jmp
dec
je
in
clc
pop
xchg
mov
ret
dec
imul
sahf
sahf
dec
sub
popf
leave
jle
lea
(bad)
push
push
xor
popa
cmps
xor
xor
nop
push
sti
das
xchg
mov
loopne
call
push
fld
in
dec
dec
push
push
mov
inc
aad
add
jae
sub
or
sbb
retf
mov
scas
(bad)
imul
ret
cmp
loop
mov
add
push
clc
ins
fisttp
outs
int3
and
in
push
sub
mov
cld
icebp
scas
fs
jbe
jnp
sti
cmp
push
cmp
dec
cwde
cmp
xchg
push
pop
fs
rcl
cmp
stc
hlt
hlt
adc
fsubp
out
or
dec
jbe
in
ins
or
cmc
jae
mov
xchg
retf
and
dec
rol
ror
rol
in
adc
add
xor
dec
pop
xor
jle
cwde
lea
(bad)
push
dec
popf
push
data16
in
inc
ds
adc
inc
xchg
bound
mov
or
scas
mov
out
add
fs
out
push
(bad)
sub
mov
(bad)
pop
mov
xchg
mov
xlat
cmps
cld
cmp
mov
cwde
sahf
adc
and
ret
push
cdq
push
ret
je
ret
dec
pop
(bad)
loopne
iret
inc
lods
jmp
aad
fistp
dec
outs
jmp
mov
sbb
loopne
frstor
dec
fwait
das
cmp
sti
in
adc
mov
add
xchg
xchg
sub
enter
or
clc
fcmovu
cmc
add
sub
push
xchg
push
ss
hlt
adc
in
sbb
pop
add
and
adc
xchg
fisttp
mov
xchg
cmps
(bad)
pop
jnp
pop
pop
lock
sub
fldcw
inc
mov
pop
aas
xchg
jmp
enter
lahf
xchg
ins
xor
jmp
test
xchg
enter
ret
mov
sbb
mov
inc
or
enter
and
sar
cmp
test
xor
lods
rcl
or
aaa
not
js
nop
xchg
aas
aaa
xchg
xor
ror
xor
call
loopne
xor
push
mov
mov
jne
pop
xchg
(bad)
dec
gs
ds
push
out
dec
and
ja
jl
out
mov
inc
and
xchg
mov
bound
adc
aam
imul
push
mov
pop
mov
mov
fadd
ret
repnz
fisttp
cld
stos
sbb
popf
dec
xchg
gs
retf
test
sub
(bad)
gs
xor
mov
int3
push
push
aad
scas
push
xlat
pop
fistp
jmp
ret
push
mov
add
movs
and
mov
adc
mov
adc
xor
mov
pop
cmp
inc
ror
xchg
push
xchg
in
fimul
mov
popa
test
retf
pop
test
inc
das
xchg
and
in
(bad)
std
sti
push
lea
in
jns
sbb
add
es
cli
(bad)
shl
in
mov
jmp
xlat
jno
lsl
test
mov
jecxz
fistp
jmp
xor
fdivr
in
jge
push
movs
sbb
add
mov
xor
fucomp
mov
xchg
push
xor
mov
xchg
mov
lds
pop
mov
addr16
mov
jno
xor
xchg
loope
cwde
loopne
icebp
enter
stos
ins
outs
mov
inc
mov
sub
rcr
jno
(bad)
sbb
cwde
aad
retf
int3
pop
iret
outs
shl
xchg
push
mov
int
xor
mov
xor
sub
cli
mul
ror
and
scas
dec
jbe
scas
test
inc
jno
or
jae
mov
aam
ins
cmp
inc
inc
mov
inc
mov
stos
sbb
out
fsubr
lds
pop
dec
aaa
pop
div
push
adc
sub
push
push
push
cmp
xchg
int
fld
out
xchg
andps
fsubr
pop
leave
jne
or
cwde
and
fcom
xor
pop
push
lock
push
shl
pop
pushw
int3
sahf
push
je
or
lock
aaa
mov
imul
les
shl
or
dec
mov
ja
mov
sbb
xor
mov
inc
or
adc
mov
inc
or
call
xchg
fxtract
xor
pop
pop
cmps
shl
inc
aas
jg
mov
ret
and
aas
call
fxch
sbb
repz
ds
pop
mov
add
or
(bad)
sub
not
lods
inc
jg
jb
test
fs
rcl
pop
sub
adc
sbb
ror
fidivr
add
ret
xor
in
loope
jo
mov
sar
xchg
sub
neg
and
ja
xchg
inc
xor
cmp
iret
push
add
adc
or
jae
jb
icebp
sbb
lahf
push
stos
push
jns
aam
xchg
and
in
mov
xchg
xchg
jle
loopne
mov
das
lods
push
mov
ror
dec
daa
push
ins
sub
aam
inc
and
(bad)
push
pop
mov
cli
stc
aad
shl
fucom
mov
out
ficom
push
push
(bad)
ss
cli
dec
mov
push
mov
imul
add
shl
(bad)
out
and
jns
enter
jmp
push
mov
or
fcomp
aas
add
adc
lock
jnp
fsub
dec
mov
cmp
mov
inc
shl
xchg
aaa
pop
pop
fidiv
data16
in
aad
xor
cli
ret
js
psubq
pop
shl
addr16
cmps
xchg
in
sbb
ret
adc
sub
ins
popf
xor
sbb
and
cmp
jbe
or
cmp
mov
test
cli
xor
test
stc
fmul
dec
cwde
ds
push
push
mov
cmp
lahf
call
dec
loope
dec
loop
xlat
pop
sbb
jmp
hlt
and
sbb
pop
addr16
scas
mov
add
push
jecxz
mov
or
fs
lds
xchg
inc
stc
fwait
iret
or
jg
mov
inc
ret
mov
(bad)
out
ins
fyl2xp1
outs
scas
shr
jb
(bad)
lea
xor
nop
inc
add
inc
sbb
iret
mov
mov
retf
mov
out
push
mov
mov
add
cli
scas
dec
adc
test
mov
and
int3
data16
gs
lods
js
add
cmp
outs
fisttp
mov
jnp
xlat
cwde
push
pop
push
arpl
jecxz
dec
sub
dec
loopne
stos
cmps
out
jno
sbb
ret
pop
cmps
adc
or
pop
pop
and
pop
dec
xor
imul
jae
xor
ds
mov
aaa
out
mov
movs
dec
cmp
push
jge
ins
cli
test
xor
or
shl
addr16
cmp
out
jg
stc
out
call
add
jg
ret
in
xchg
and
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
outs
sar
in
xor
jge
mov
dec
mov
shl
cmps
mov
ins
int3
les
rol
hlt
les
mov
std
and
sahf
pop
add
cmps
push
scas
arpl
or
addr16
mov
mov
jb
stos
ins
xchg
jmp
push
mov
ds
inc
dec
dec
adc
clc
mov
mov
ds
mov
jle
push
outs
jb
idiv
or
scas
fnstsw
cmps
repz
sbb
jbe
iret
aaa
xlat
out
retf
lock
inc
ins
pop
lds
dec
outs
shl
cs
mov
iret
mov
or
cmps
in
jae
adc
popf
leave
mov
movs
mov
push
in
out
test
push
mov
(bad)
int
pop
shr
xor
jle
pop
xor
ror
retf
pop
in
mul
push
pop
scas
bound
dec
adc
icebp
js
je
fdiv
lods
jp
movs
jns
sbb
dec
fisttp
push
xchg
jg
jo
xchg
ret
out
call
fwait
push
adc
stc
dec
mov
pop
loop
std
out
jl
fsubr
push
cdq
mov
dec
push
aaa
push
cmp
mov
cdq
xchg
or
das
in
sar
mov
aaa
jle
pushf
ret
xchg
fwait
xor
lds
sbb
dec
ins
(bad)
push
inc
cdq
cmp
dec
sbb
(bad)
pop
call
dec
mov
pusha
aad
cmps
(bad)
lock
jae
or
int
outs
or
fcmovne
mov
pusha
xchg
push
idiv
inc
xchg
idiv
adc
cmp
into
jb
loop
test
lds
hlt
xchg
loopne
jl
(bad)
arpl
dec
pop
test
sti
inc
inc
loope
sub
mov
inc
sahf
pop
daa
mov
call
fld
jns
pop
mov
inc
lods
nop
in
aad
mov
repnz
aas
sbb
jp
(bad)
scas
sub
loop
inc
test
push
sub
mov
call
daa
jle
pop
add
xlat
dec
out
or
xchg
or
add
aaa
shr
push
push
jne
or
xor
and
sahf
call
pop
xor
pop
xor
(bad)
repz
sub
dec
pop
sbb
mov
or
lock
jae
mov
js
popa
les
pop
scas
call
das
jbe
mov
iret
aaa
cmp
adc
push
daa
mov
gs
sub
pushf
dec
adc
imul
je
(bad)
jle
push
dec
loop
fmul
sar
retf
popf
(bad)
adc
xchg
mov
jbe
jmp
lahf
and
push
sbb
jecxz
cmps
in
scas
cdq
imul
push
test
jns
xchg
add
cmp
or
xor
mov
mov
icebp
pop
add
shr
sub
(bad)
pop
and
pushf
ja
lea
or
pop
sub
mov
mov
movs
sub
add
mov
cli
ja
xor
sub
pop
mov
ror
sub
mov
inc
pop
lea
and
call
cwde
add
imul
jge
loop
jmp
shr
mov
punpckhwd
cmc
mov
(bad)
(bad)
retf
jle
or
or
cmp
pop
adc
jo
scas
loop
and
jno
lea
test
ficomp
test
sbb
cld
movs
aaa
imul
imul
call
imul
inc
or
cmp
sbb
daa
and
sbb
popa
or
sub
in
mov
cld
jno
pop
mov
cmp
adc
push
mov
leave
inc
(bad)
test
jns
mov
les
xchg
pop
add
xchg
mov
retf
mov
and
mov
adc
pop
aaa
retf
mov
shl
mov
add
or
sbb
mov
ret
mov
cwde
fs
pop
push
or
sbb
mul
push
fild
xchg
pop
(bad)
push
mov
xlat
jecxz
sbb
aad
sbb
add
add
xchg
lods
cmp
fnstenv
sub
pop
or
icebp
(bad)
fdiv
je
(bad)
into
imul
mov
jne
xchg
cmp
sti
aad
call
inc
jns
in
aaa
sub
add
cmc
popf
lahf
or
imul
mov
into
inc
int
jno
fwait
add
test
lea
ror
ja
and
jmp
lods
fistp
xchg
jmp
add
outs
xor
add
fstp
loope
xor
shl
fidivr
ins
sbb
mov
ss
xor
mov
ss
fcom
movs
dec
mov
fisttp
cmp
in
movs
mov
repz
mov
gs
(bad)
repz
jns
mov
push
in
das
pop
leave
mov
or
mov
mov
cmp
jmp
jnp
jnp
cmp
lods
(bad)
mov
div
and
rcr
sub
xlat
arpl
sahf
cmp
inc
xlat
pop
xor
sub
jle
scas
xchg
and
(bad)
jmp
out
jmp
fs
mov
out
ins
add
mov
jbe
std
or
jo
imul
inc
mov
dec
jnp
das
ror
cs
and
pop
inc
pop
(bad)
jecxz
call
jle
dec
xchg
sar
inc
js
icebp
pop
mov
ror
out
xchg
adc
xlat
and
data16
inc
inc
sbb
arpl
cmp
dec
pop
and
add
aam
adc
gs
leave
outs
pop
mov
ds
jmp
dec
mov
in
push
dec
xchg
or
(bad)
mov
push
jge
imul
xchg
clc
imul
sub
addr16
xor
out
push
loopne
dec
arpl
mov
or
jmp
scas
adc
(bad)
js
mov
push
(bad)
fild
inc
test
push
or
pop
out
mov
cwde
(bad)
lea
push
xor
stos
xor
adc
out
les
adc
push
or
mov
mov
mov
xchg
mov
movs
xchg
sub
xchg
fstp
retf
mov
into
mov
movs
mov
dec
ret
xchg
pop
aas
adc
pop
sar
sar
cs
mov
sbb
dec
inc
jge
push
sub
daa
cmp
aaa
ss
xor
stos
clc
lods
sar
xchg
retf
addr16
mov
outs
mov
das
and
frstor
jne
rcr
test
jmp
ror
pop
sbb
mov
enter
stc
fld1
sbb
loopne
into
scas
dec
push
js
stos
push
test
rcl
lock
mov
xchg
pop
les
xor
clc
sbb
cld
jmp
sti
jno
add
bnd
pop
int
xor
sub
rcr
je
lock
sysret
cli
mov
int3
cmc
dec
in
push
rcr
pop
jbe
loop
sub
push
adc
or
jl
jg
dec
cs
pusha
jl
scas
mov
add
int3
repnz
repz
mov
outs
mov
push
movs
fmul
jge
sbb
es
in
jecxz
sbb
mov
stc
mov
pop
cmp
mov
mov
test
cli
add
sahf
outs
mov
mov
es
or
xchg
dec
xchg
dec
sbb
mov
inc
sub
mov
outs
mul
xor
loopne
xchg
sbb
mov
rcr
adc
in
add
es
and
sub
sbb
mov
adc
xchg
and
mov
in
mov
push
mov
sub
cmp
cmp
pop
push
scas
sub
daa
inc
and
cdq
pop
inc
(bad)
cmp
mov
ins
shr
cdq
push
xor
adc
cmc
jl
rcl
jb
adc
push
cmp
jnp
mov
fdiv
outs
inc
xor
movs
mov
test
repnz
jo
dec
sbb
cdq
jp
fnstsw
cmp
add
add
sti
les
and
add
inc
and
inc
enter
jo
daa
push
es
push
or
and
pop
ins
dec
inc
cli
cmp
out
into
sub
or
loope
bnd
std
(bad)
push
and
bound
inc
push
lds
scas
(bad)
call
shl
push
jnp
fnstenv
inc
call
xchg
mov
int3
arpl
rdmsr
rol
cmp
int
mov
int3
jns
out
mov
mov
lock
inc
push
cmp
or
lock
pop
xchg
test
mov
dec
ret
dec
xor
xchg
loop
jb
jbe
sbb
sub
(bad)
inc
xlat
pop
mov
into
lods
xor
adc
gs
or
out
clc
(bad)
retf
stos
repnz
xchg
dec
dec
es
sbb
out
or
retf
add
aam
inc
pushf
daa
out
fdivr
sub
out
popa
dec
mov
pop
jle
push
adc
(bad)
into
add
ret
lock
xor
dec
into
cmp
cmp
daa
cmp
mov
int3
cmp
mov
dec
jp
jp
push
icebp
data16
jp
inc
sub
jl
dec
dec
xor
mov
inc
jo
pop
dec
cmps
xor
push
xor
imul
lahf
repnz
leave
push
stos
adc
icebp
outs
add
arpl
ins
movs
mov
xlat
leave
pusha
adc
test
mov
cmps
adc
mov
mov
(bad)
mov
movs
mov
mov
or
es
pop
out
fist
lahf
fiadd
xchg
and
mov
lahf
and
xchg
adc
es
leave
test
xchg
icebp
enter
xchg
dec
and
lods
add
inc
dec
cmp
adc
cmp
and
aaa
mov
fiadd
cmp
adc
out
mov
cwde
pop
int3
push
(bad)
add
or
lods
ja
ds
cmp
mov
arpl
pop
ss
jmp
jge
pop
push
es
fst
and
jecxz
bound
imul
cli
movs
mov
add
shl
mov
xchg
adc
jbe
scas
push
imul
cdq
pop
retf
or
sub
gs
repnz
retf
pop
js
int3
sub
mov
pop
mov
mov
mov
shl
or
push
mov
(bad)
scas
add
fnstsw
jno
cli
push
sbb
dec
jb
daa
mov
xor
leave
adc
clc
ds
rcr
xchg
pusha
stos
icebp
dec
scas
cmp
xchg
outs
mov
not
fild
add
scas
movs
aam
repz
test
(bad)
repnz
mov
mov
int
mov
dec
ds
jmp
ins
xchg
lock
stos
jae
and
int
bswap
mov
clc
mov
daa
xchg
test
aaa
inc
push
push
stos
mov
test
fisttp
scas
or
xchg
sbb
sbb
inc
pop
(bad)
imul
jg
nop
lods
cmp
iret
mov
aam
stc
enter
adc
pop
popa
cmp
push
popa
and
mov
sbb
push
pextrw
unpcklps
mov
fst
xor
enter
adc
in
dec
mov
inc
sbb
xor
movs
pop
aaa
cmps
(bad)
sti
call
jg
int3
pusha
sar
pop
sub
mov
int3
add
sub
dec
jne
jbe
(bad)
out
inc
mov
stos
pushf
das
test
jns
hlt
cwde
or
pop
xor
mov
movs
lods
mov
mov
clc
in
je
aas
lods
mov
dec
jb
xchg
dec
ds
sti
mov
daa
rcl
into
mov
ins
sbb
sti
mov
xor
or
jle
shl
and
sub
xlat
add
push
loop
push
data16
shl
mov
xor
xchg
fisttp
idiv
jno
push
dec
sub
mov
jp
fisubr
push
push
adc
xchg
cwde
xchg
xchg
xor
inc
lods
jg
pop
in
out
push
mov
cmps
pop
push
dec
iret
mov
ins
mov
mov
adc
in
push
scas
aaa
fistp
fnstcw
jle
(bad)
jnp
ror
cmps
out
mov
imul
rcl
mov
add
xchg
sub
(bad)
stos
push
or
les
in
(bad)
hlt
out
hlt
mov
pop
or
bound
push
pusha
fldenv
movs
ror
jmp
jne
mov
or
adc
outs
fdivr
stc
aas
mov
xchg
add
ins
dec
addr16
sub
sub
jge
xchg
jnp
mov
push
adc
mov
or
xor
pop
mov
outs
add
retf
pop
in
vpunpckhqdq
inc
xchg
in
movs
fld
je
(bad)
xchg
fmul
mov
in
sub
mov
aas
sub
mov
add
ss
push
imul
xchg
push
aad
cmp
adc
gs
cmovp
push
mov
popf
int3
jns
test
sar
adc
int3
scas
addr16
ret
repnz
in
jp
mov
test
clc
and
in
call
fidiv
test
sbb
add
adc
(bad)
mov
push
movs
(bad)
es
adc
cmp
mov
push
les
mov
cmp
cmp
and
out
lock
pushf
inc
inc
cmp
jmp
inc
push
ds
sub
shl
xchg
push
pop
mov
call
adc
es
dec
shr
cmp
xor
mov
push
pop
aas
pop
enter
(bad)
(bad)
cmps
pop
rdpmc
cmps
mov
loope
out
sar
daa
pop
shl
fldcw
jmp
outs
push
xchg
xchg
mov
cmps
adc
pop
add
fldcw
jge
dec
cwde
sahf
bound
push
stc
xlat
rol
popa
xor
fs
adc
mov
ror
lea
pop
movs
popf
fsub
popa
xchg
xor
mov
mov
data16
cmp
ffree
and
movs
out
cmp
jg
pushf
xor
popf
ds
push
stc
and
retf
dec
mov
adc
add
dec
pop
jae
xor
sub
cdq
cmp
lea
sti
push
nop
cli
(bad)
mov
mov
mov
icebp
add
fisub
pop
test
(bad)
popa
ja
cmps
mov
rcr
push
in
clc
adc
push
cli
fistp
and
fwait
test
(bad)
(bad)
arpl
sbb
in
movs
inc
pop
stos
loop
nop
ss
sbb
lahf
sahf
push
lds
jge
mov
xor
shl
retf
fldenv
stos
mov
dec
jno
mov
mov
inc
xchg
jbe
jae
cmp
xchg
xlat
mov
(bad)
les
leave
push
imul
xor
xchg
jp
mov
mov
dec
jne
ja
xchg
(bad)
popf
xchg
push
lea
std
popa
mov
mov
jb
adc
pop
cmp
cmp
dec
stos
(bad)
jp
test
xchg
mov
push
dec
sbb
add
mov
cld
aad
out
xor
retf
push
cdq
retf
sub
aam
fwait
mov
ds
pop
adc
jne
and
sub
enter
clc
(bad)
aad
jae
int
shr
out
not
cmp
xlat
mov
add
push
mov
imul
into
jno
adc
retf
mov
lock
jbe
cmp
or
enter
leave
mov
ret
mov
pop
jl
mov
popf
test
inc
jo
sbb
mov
in
mov
stos
and
lea
push
test
jge
popa
test
call
ins
cwde
pop
push
mov
mov
push
(bad)
jp
sbb
xchg
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
pop
cmp
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
inc
xchg
or
adc
xchg
je
sub
push
inc
popa
mov
push
or
mov
or
xchg
mov
out
jecxz
fadd
add
fs
movs
inc
add
or
jnp
inc
mov
cdq
or
cld
xchg
xchg
scas
xchg
aam
retf
cmp
mov
sbb
dec
xchg
mov
std
lods
pop
leave
push
or
adc
stos
jnp
out
movs
dec
fs
hlt
lds
shl
stos
jne
jl
push
fnstcw
inc
dec
out
inc
add
shl
mov
cwde
ds
pushf
jbe
cmp
push
arpl
jno
fwait
inc
xor
(bad)
xor
jmp
xchg
or
mov
sbb
mov
fsub
mov
hlt
dec
movs
push
das
mov
sbb
cmp
fsub
fistp
and
ins
out
inc
cmps
inc
pop
cdq
mov
mov
clc
loop
in
sbb
cld
push
test
dec
fstp
xchg
lahf
or
jnp
xor
mov
das
or
ds
pop
test
fisttp
fs
mov
in
rol
dec
pop
aaa
mov
call
cmps
push
mov
retf
das
or
daa
icebp
mov
adc
sub
jmp
fstp
pushf
lock
pop
sub
neg
sub
mov
mov
lods
xlat
inc
ins
pop
and
packsswb
xor
sbb
jle
stc
xchg
fs
inc
cmps
enter
ds
mov
sbb
dec
jb
xor
imul
xchg
js
dec
in
jno
in
pop
mov
in
test
pop
cmps
int3
addr16
movs
(bad)
out
ret
dec
push
adc
sub
sub
popf
sar
jmp
adc
and
nop
cmp
inc
cmp
push
and
pop
fidivr
push
stc
daa
idiv
sbb
jne
test
aam
(bad)
into
pop
push
daa
scas
jae
dec
call
ja
adc
or
(bad)
cmps
and
mov
(bad)
adc
mov
jne
cmp
mov
outs
jb
or
inc
mov
out
mov
jbe
adc
dec
in
cs
sub
(bad)
cmp
mov
mov
arpl
pop
(bad)
push
call
fstp
add
mov
jbe
repz
movs
loop
jb
sahf
nop
mov
leave
mov
mov
jb
push
mov
fdiv
in
jne
test
dec
fwait
loopne
out
push
sbb
inc
in
out
inc
xchg
sbb
stc
mov
push
mov
sbb
cli
sbb
in
add
fstp
pop
les
int3
bound
dec
jae
inc
dec
jge
movs
cmp
daa
loope
(bad)
shl
jbe
lods
and
retf
pop
pop
shl
not
dec
pop
mov
lods
jns
push
mov
sub
lds
mov
stos
mov
push
push
xlat
pusha
inc
xor
xchg
arpl
jle
jmp
daa
scas
and
rol
gs
jb
leave
jmp
mov
test
arpl
mov
sti
ss
cmps
mov
sbb
cmp
test
js
cmp
mov
mov
or
cmp
jecxz
(bad)
sub
in
aam
jo
jmp
mov
popa
fcom
lods
retf
dec
pop
iret
(bad)
mov
mov
mov
movs
mov
jp
sub
cmps
pop
lea
sub
jecxz
ror
and
inc
aam
imul
push
jbe
je
mov
dec
cmp
mov
jmp
stos
or
test
dec
enter
pop
pusha
into
cmp
fdiv
xchg
imul
xor
jmp
aad
push
jecxz
xor
cmp
push
dec
icebp
inc
xchg
sub
pop
dec
shl
dec
sbb
dec
fnstsw
xor
mov
jb
mov
jge
jmp
xchg
aaa
push
ins
cmp
pop
push
mov
inc
inc
sub
mov
xor
push
int3
pop
loopne
icebp
xchg
sti
xlat
xchg
xchg
pop
hlt
in
mov
fwait
mov
sub
dec
retf
les
sbb
cmp
cmp
dec
(bad)
xchg
fidivr
cmp
jnp
and
test
imul
dec
loop
bound
cmp
mov
scas
and
adc
mov
imul
jno
(bad)
ins
sub
test
add
cmc
popf
sbb
cmp
ror
test
jp
not
push
(bad)
scas
popf
or
sbb
xor
cmp
std
out
cwde
je
vmread
iret
cmps
and
sbb
sbb
inc
and
fwait
xchg
test
mov
jb
xchg
loop
or
push
fst
cmp
loope
into
(bad)
mov
aad
inc
add
mov
sti
xchg
adc
les
hlt
shr
jae
push
imul
repnz
mov
and
pop
mov
mov
sbb
fs
fcomp
fadd
xchg
jne
es
jae
jl
xor
push
fisubr
pop
mov
mov
and
popa
bound
jg
fisubr
stos
adc
pop
(bad)
dec
clc
mov
and
dec
in
xchg
fiadd
aam
(bad)
mov
das
sbb
sbb
icebp
out
sub
mov
int
jge
sbb
and
(bad)
ds
push
pop
cmps
and
xchg
retf
mov
test
sub
nop
jae
out
inc
mov
jae
fwait
mov
gs
aad
xor
cs
dec
adc
jmp
mov
scas
mov
lods
sti
xchg
pop
add
and
pop
fistp
adc
and
fsub
mov
mov
fidiv
mov
push
mov
push
mov
or
mov
xor
pop
out
adc
pop
inc
sbb
ret
mov
(bad)
loopne
pop
pop
pop
and
pop
cmp
mov
adc
mov
xor
sub
mov
or
iret
out
add
cmp
test
inc
cmps
jbe
popa
inc
daa
adc
mov
mov
iret
inc
xor
and
push
sbb
int3
xor
or
icebp
jmp
push
xor
xor
and
sub
pop
sbb
sbb
fdivr
pop
sbb
jmp
dec
in
cmp
fisubr
inc
pop
stc
cmp
cmp
dec
push
into
aaa
ja
push
in
retf
sub
mov
ds
test
xchg
inc
mov
inc
or
std
hlt
daa
xchg
sbb
in
mov
or
(bad)
or
fs
cmps
les
aaa
cmp
shl
lds
pop
push
data16
push
pop
push
stos
add
lea
sbb
xor
and
sub
pop
cmps
call
jge
cmps
adc
cmp
outs
in
int3
repnz
lds
jmp
jb
nop
mov
sub
loop
push
fs
imul
sub
add
iret
dec
out
pop
add
jns
repnz
idiv
aaa
imul
push
(bad)
rol
sahf
pop
sub
push
fnstsw
idiv
jns
mov
sbb
push
xor
neg
push
push
out
lea
call
ret
lds
dec
xchg
inc
pushf
sbb
popf
push
sub
int
movs
scas
(bad)
ins
jg
or
dec
adc
push
inc
gs
rcr
movs
sbb
cwde
ret
sbb
jno
aad
cdq
push
repz
push
mov
pop
mov
jl
push
outs
retf
into
adc
js
inc
mov
cmc
push
enter
push
popa
hlt
mov
popa
sub
ror
xchg
fadd
mov
jae
ins
mov
push
addr16
aad
outs
mov
inc
inc
dec
mov
or
ins
out
test
cdq
xor
sbb
push
mov
fldcw
(bad)
mov
cmp
add
mov
popa
nop
sbb
mov
xchg
(bad)
movs
jb
xor
pop
sahf
push
popf
inc
pop
push
fs
pop
xor
jbe
addr16
sub
or
dec
xchg
or
scas
jno
scas
ret
sbb
(bad)
pop
sbb
lods
pop
pop
push
xor
js
push
test
shr
(bad)
mov
enter
sub
test
and
movs
push
mov
es
repnz
loop
loope
pusha
or
ins
ss
jae
call
cmp
outs
jae
dec
cmp
sar
xchg
(bad)
push
jmp
cmp
sub
outs
loope
push
jbe
xchg
std
mov
sub
cmc
cwde
test
jmp
cmp
or
mov
sahf
xor
sbb
push
push
movs
inc
popf
out
sbb
in
stc
(bad)
std
fdivr
ss
mov
xchg
xchg
and
jge
test
sbb
jo
mov
fs
int3
ja
cmps
inc
mov
inc
mov
dec
pop
or
push
add
mov
aad
adc
pop
mov
and
inc
mov
adc
or
xchg
test
push
push
mov
mov
call
hlt
jnp
mov
mov
mov
mov
sbb
mov
and
(bad)
popa
sti
mov
gs
push
add
and
leave
push
ja
cmp
and
das
jae
fwait
mov
aaa
pop
out
xor
gs
movs
mov
js
jmp
or
scas
sub
jae
or
hlt
cmp
je
jmp
pop
dec
clc
(bad)
cmc
retf
ins
cld
sub
stc
mov
popf
and
mov
mov
fisubr
loop
xor
outs
leave
cs
or
pop
and
cdq
mov
cmc
mov
jl
jecxz
cmp
les
pop
(bad)
in
loopne
xchg
imul
addr16
mov
not
out
or
xor
jge
movs
inc
dec
call
(bad)
jnp
inc
xlat
mov
jno
jmp
fmul
fbstp
add
loopne
fwait
das
bound
inc
push
push
push
mov
addr16
iret
out
sub
(bad)
leave
ret
xchg
les
lahf
and
xchg
add
pop
cdq
rcr
mov
test
js
sub
cs
pop
mov
mov
push
neg
adc
lods
ja
ret
pop
add
sbb
xchg
cwde
and
xor
jmp
ret
sub
push
push
inc
(bad)
repz
sbb
repnz
out
retf
or
rcr
xor
test
ins
bound
push
movs
rcr
mov
mov
push
push
movs
aam
mov
jbe
ss
icebp
and
loopne
lods
imul
cmp
jecxz
in
es
sti
cmp
dec
pop
inc
xlat
push
retf
pop
adc
hlt
jmp
xbegin
dec
es
sub
jae
ja
or
shr
repnz
loope
sub
lea
ds
mov
mov
mov
pop
test
mov
mov
xlat
int
inc
push
(bad)
pop
imul
cmp
and
(bad)
mov
mov
scas
dec
or
or
ret
retf
mov
push
jns
call
ror
lea
and
outs
(bad)
and
jmp
arpl
adc
or
jg
nop
fwait
xchg
fadd
xor
cmc
mov
cs
mov
xor
out
cmps
mov
ror
cmp
inc
or
loop
adc
sub
clc
xchg
hlt
addr16
mov
push
cdq
jle
cli
and
lds
mov
xchg
mov
dec
push
adc
out
mov
xchg
xchg
xor
inc
dec
retf
push
ret
sbb
retf
cld
adc
les
inc
(bad)
xchg
sbb
and
ins
ins
mov
cmc
jmp
mov
xor
and
dec
out
push
mov
or
lods
test
push
fwait
cmc
int3
ins
(bad)
cmps
adc
or
inc
mov
push
ret
mov
cmps
mov
mov
outs
les
adc
mov
cmps
add
test
or
mov
add
mov
(bad)
mov
int3
test
push
mov
neg
movs
out
hlt
xchg
mov
inc
cs
loop
sbb
call
pop
mov
pop
dec
push
ja
inc
ficom
cmps
call
and
js
mov
cdq
in
sbb
jle
jge
call
es
cli
sbb
mov
xor
cli
and
cld
mov
cmc
dec
icebp
sti
add
cmps
imul
hlt
pop
call
or
sbb
jl
cmp
jo
loopne
or
mov
leave
iret
cmp
ja
adc
scas
push
pop
dec
daa
mov
mov
arpl
inc
push
add
sub
pop
inc
(bad)
push
aas
mov
inc
push
xchg
push
dec
push
xor
imul
mov
pop
sub
clc
gs
loopne
adc
inc
retf
mov
gs
sbb
push
lds
pop
dec
les
pop
xchg
sub
or
ror
(bad)
sub
mov
lea
stos
push
shr
aam
sbb
adc
mov
aas
or
cmc
(bad)
aam
ret
or
fisub
jmp
out
jae
adc
jmp
sub
jg
lods
mov
adc
ror
push
bound
test
dec
test
mov
test
mov
les
fs
adc
pop
(bad)
ins
mov
jnp
arpl
sbb
clc
int
scas
jnp
dec
fild
inc
movs
jne
bound
inc
dec
mov
inc
jle
jmp
sub
rcr
fsub
push
test
ins
(bad)
pop
pop
push
push
test
and
and
fisub
add
and
jmp
push
mov
push
mov
lahf
xchg
mov
dec
sub
or
cmp
cs
inc
jno
adc
gs
inc
sbb
and
xchg
std
cmp
jns
mov
out
pop
mov
dec
and
scas
dec
jb
cmp
mov
in
fdivp
int3
xor
jmp
jo
inc
or
icebp
enter
jbe
and
ins
jp
(bad)
fbstp
(bad)
mov
imul
shl
adc
mov
mov
sub
lock
(bad)
xchg
push
jmp
scas
mov
cmps
xor
fmulp
pop
mov
movs
dec
sahf
aaa
and
das
cli
xor
aas
or
jb
dec
dec
lahf
(bad)
xchg
jp
cmp
je
repnz
dec
add
add
ficomp
or
cmp
xchg
(bad)
jmp
jb
inc
push
ret
mov
fild
add
push
sbb
je
and
aad
in
push
mov
mov
out
mov
int3
out
adc
push
jbe
or
sbb
push
push
push
and
adc
mov
arpl
push
cli
scas
inc
(bad)
loope
out
pushf
add
cmc
sti
cmp
out
mov
push
sub
push
daa
test
dec
in
and
jl
lahf
aam
call
ja
ret
pop
and
and
adc
leave
or
inc
adc
sbb
pop
jmp
fsub
les
sub
cld
pop
std
lods
jno
add
stos
cmp
div
loope
add
mov
pop
push
retf
arpl
test
mul
je
adc
rcl
fisub
ja
cmp
pop
inc
pushf
retf
cmp
mov
push
jle
pop
sub
xor
adc
pop
xor
ins
cdq
ret
and
movs
and
mov
(bad)
inc
lock
(bad)
cs
das
push
mov
inc
fistp
xor
xchg
retf
test
arpl
dec
and
int
ds
shr
mov
adc
(bad)
stc
out
jg
stc
jg
add
pop
pop
push
in
movs
jmp
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
retf
fmul
jecxz
out
cmp
div
fnsave
fnsave
cmp
fnsave
rcr
int
rcr
idiv
aas
sahf
mov
rcr
jl
shl
out
enter
xor
ds
idiv
xchg
dec
mov
je
(bad)
lods
and
mov
fistp
push
xor
pushf
and
movs
jg
in
jae
loopne
or
lahf
mov
fwait
ins
nop
fild
sbb
fnstsw
test
or
dec
stos
cmpxchg
dec
fsubp
sbb
xchg
inc
retf
popf
dec
adc
aaa
test
out
wrmsr
imul
or
ss
call
stos
into
dec
sub
jle
pop
mov
faddp
out
pop
jecxz
xor
push
push
repz
sub
jmp
xchg
je
jnp
int
mov
xor
lahf
push
cli
add
ffree
rcr
jl
fbld
add
xchg
inc
pop
movs
lahf
jg
(bad)
aaa
pop
out
jb
push
jge
gs
sbb
sbb
push
mov
in
outs
add
cmp
dec
dec
ins
call
test
lods
xchg
and
push
xor
sbb
mov
ret
stc
fwait
dec
ins
inc
popa
jbe
pop
sub
adc
fcmovnb
fld
test
outs
in
lods
lahf
cdq
ffreep
push
and
cmp
jmp
mov
mov
mov
enter
fwait
mov
and
loope
cmp
push
movq
cmp
dec
xlat
mov
push
inc
jp
xchg
nop
push
scas
fimul
call
js
scas
popa
push
mov
push
cwde
push
stc
imul
popf
ins
xor
dec
dec
loopne
pop
pop
lods
cmc
xchg
or
pop
push
loope
cmp
lods
mov
int3
outs
mov
aas
mul
lods
fwait
ss
leave
xor
and
inc
adc
dec
pushf
retf
jecxz
sbb
cmp
sub
push
rol
jnp
(bad)
test
and
jmp
cli
cmp
jmp
popa
(bad)
jl
int3
cmp
inc
mov
stos
jg
iret
jbe
inc
push
cld
sub
push
rol
mov
loop
or
inc
mov
jo
and
and
lds
adc
cdq
js
add
add
popa
arpl
push
cld
out
xchg
icebp
aam
xchg
jbe
inc
je
adc
test
loop
mov
sbb
cmp
ret
mov
mov
ret
das
or
ja
popf
push
xor
jb
es
test
into
fdiv
call
lock
cmp
shl
jmp
scas
rol
sub
test
mov
jmp
sbb
cmps
mul
pusha
xchg
mov
scas
push
cmps
cld
jmp
sti
mov
sbb
cmp
mov
fs
push
xor
pop
loopne
icebp
cwde
cmp
push
cli
fst
mov
xor
dec
movs
mov
fisub
test
into
mov
das
or
mov
ja
push
adc
push
sub
test
xor
ret
mov
pop
mov
pop
pop
hlt
cmc
aam
loope
int
jo
out
or
mov
xchg
rcr
daa
mov
fst
mov
aas
mov
jmp
sub
pop
shr
push
movs
jmp
lods
pop
sahf
sar
mov
pop
sbb
cmp
xchg
dec
pop
mov
xor
les
shl
fldcw
pop
cli
push
loope
cli
pop
ret
lds
mov
mov
push
mov
sub
adc
call
jp
mov
bound
xor
stc
outs
scas
shrd
rcl
mov
jne
jg
add
or
mov
mov
(bad)
push
or
js
sub
test
xchg
jg
aas
setp
addr16
les
jecxz
adc
outs
push
aam
xchg
aaa
pop
ret
xor
push
out
push
cmps
sbb
test
jl
loop
and
or
hlt
inc
test
xchg
std
xchg
out
push
or
jl
js
mov
cs
retf
jmp
repz
xor
push
mov
shl
mov
mov
cmp
call
adc
pop
jb
scas
leave
xchg
pop
cmp
xchg
xchg
pop
scas
sub
mov
scas
mov
add
test
xor
repz
(bad)
(bad)
sti
stos
mov
jl
cs
shl
shr
fbld
mov
sbb
bswap
unpcklps
mov
and
add
mov
repnz
in
push
test
mov
cmp
sbb
push
into
lods
imul
pushf
mov
xor
lea
jno
pop
loop
jnp
pop
not
pop
cmp
push
loope
pushf
jmp
sti
cmp
sub
mov
fs
or
sbb
stos
fnstcw
call
jbe
xor
xor
mul
fs
jns
push
shl
ins
iret
data16
mov
xchg
inc
pop
pop
sti
or
sbb
jo
icebp
rcl
dec
repnz
or
cdq
sub
fnsave
sbb
iret
lock
(bad)
jge
add
jns
xchg
in
push
jnp
add
or
not
jmp
lds
sub
jle
dec
pop
mov
and
jmp
cmp
lds
std
scas
jl
add
xor
popf
add
cmp
and
ds
pusha
fdivr
and
mov
mov
and
ins
sub
adc
mov
div
mov
dec
lods
stc
addr16
fdivr
jb
jl
mov
mov
mov
jb
sub
sub
pop
ss
cs
pop
cli
pop
sbb
inc
xchg
jmp
cmp
and
ins
pop
or
dec
or
leave
lods
ins
jne
in
jno
cmp
mov
jne
jg
or
(bad)
rcl
dec
cmp
sub
adc
xchg
adc
mov
stos
mov
mov
cmc
mov
rcl
mov
scas
lods
mov
out
shl
sbb
push
push
jp
hlt
iret
cdq
dec
ret
rcr
movs
sbb
or
fwait
fs
push
and
xchg
daa
or
and
adc
and
shl
or
stos
jge
cmp
shl
aam
test
sti
movs
and
jnp
push
xor
imul
sbb
push
outs
jp
int3
jg
jg
mov
pop
xor
(bad)
outs
dec
cmc
cmc
adc
push
and
mov
pop
outs
and
into
ror
(bad)
lods
dec
jae
sbb
jl
iret
pop
jae
fiadd
in
dec
pop
push
ins
sub
retf
push
cmp
cmp
xor
pushf
std
test
call
jb
leave
jnp
jbe
mov
cmp
in
or
jmp
int3
cs
push
sti
sub
in
push
sbb
cdq
adc
add
inc
dec
sti
mov
jmp
hlt
leave
and
(bad)
jl
pop
sbb
lods
pop
cmc
outs
lods
repz
data16
lahf
sub
lods
ins
cmc
hlt
fsub
adc
popa
iret
lock
xor
ret
add
fcomp
xchg
adc
(bad)
jae
push
fistp
aas
push
adc
jmp
mov
push
xor
jmp
lea
fadd
repz
int
pop
cli
inc
xor
outs
mov
fdiv
xchg
sub
mov
inc
cmp
push
lea
jl
mov
pop
push
jnp
add
inc
add
call
xor
dec
(bad)
xor
mov
or
aaa
enter
sub
sub
mov
sbb
push
adc
loopne
jbe
sti
arpl
push
cmps
test
mov
inc
sub
xor
cmp
jmp
inc
je
loope
shl
dec
mov
(bad)
int
sbb
push
(bad)
fidiv
in
popa
jle
and
push
ja
ret
cmps
xlat
add
shl
aam
jmp
dec
adc
push
cld
clc
bound
pop
adc
ds
enter
je
mov
mov
mov
push
in
pop
(bad)
lods
sbb
inc
push
dec
mov
push
inc
sbb
dec
mov
pop
add
mov
mov
push
rol
ret
leave
ret
rol
mov
(bad)
adc
mov
mov
push
xchg
xor
and
sahf
push
arpl
push
jp
leave
push
xor
cwde
pop
(bad)
dec
popa
setg
push
xor
repz
add
inc
jmp
loop
call
sbb
mov
jne
stc
pop
sti
push
repnz
mov
inc
fistp
loop
arpl
jg
jl
lahf
rol
aad
jl
cmps
pop
xchg
pop
mov
ja
sub
movs
iret
sub
push
xchg
mov
push
pop
rcr
ja
ja
add
push
xchg
push
clc
mov
mov
in
fucom
out
mov
in
mov
add
js
imul
mov
xor
inc
into
xchg
fisttp
(bad)
and
(bad)
inc
pop
popa
add
leave
or
jg
and
iret
scas
js
push
std
icebp
hlt
jge
call
(bad)
jo
cmps
das
fild
and
(bad)
iret
sub
mov
inc
inc
xor
cmp
push
push
js
sub
fistp
mov
push
test
test
mov
pop
shr
adc
mov
les
xchg
adc
add
cmp
add
sbb
push
int3
or
sahf
pop
adc
mov
pop
cdq
xchg
push
cmp
jns
mov
dec
push
sbb
mov
mov
mov
loop
adc
adc
or
pop
push
xchg
fwait
idiv
arpl
xor
push
jno
push
inc
fstp
cld
xchg
daa
rol
bound
sub
xchg
arpl
push
out
hlt
test
jmp
sub
test
scas
xlat
inc
loopne
inc
adc
or
mov
dec
mov
jae
xlat
loope
xchg
and
cmp
sbb
mov
and
pop
repnz
inc
push
icebp
cld
or
adc
dec
adc
xchg
and
scas
mov
dec
mov
daa
inc
xlat
jmp
adc
pop
loopne
sbb
pop
(bad)
aaa
scas
pop
cmps
sbb
leave
xchg
test
out
inc
jmp
pop
and
lods
pop
fistp
mov
push
loop
enter
xor
jnp
or
mov
data16
lds
adc
loopne
push
mov
or
sbb
adc
lods
add
int
xor
sub
fstp
call
xchg
mov
push
loop
sub
cmp
mov
inc
xchg
stc
cmp
inc
mov
aaa
scas
and
xchg
pop
push
mov
inc
jno
inc
mov
jnp
stos
ret
shl
adc
adc
repnz
lea
cmp
xor
and
rcl
and
jmp
mov
cmps
jp
inc
pusha
jmp
add
sbb
mov
xchg
loopne
lods
ds
mov
in
sub
ror
push
cmp
mov
inc
cmp
repz
push
and
aam
push
or
mov
jmp
sub
(bad)
into
cmc
dec
adc
cmp
shl
sub
dec
int
dec
push
jmp
push
inc
mov
jno
xchg
iret
lods
imul
in
das
dec
ss
(bad)
mov
add
fsubr
fnstsw
repnz
(bad)
push
jle
sbb
repnz
dec
ins
mov
es
jo
dec
dec
lods
das
mov
popf
mov
sbb
cmp
test
mov
ja
jp
mov
mov
mov
and
in
dec
not
mov
loope
cmc
sub
cmc
fbstp
sbb
cld
jno
adc
push
ja
in
inc
jecxz
fs
mov
push
mov
fisub
push
leave
cmp
sbb
int3
push
fild
lock
inc
gs
enter
pop
cmp
sub
bound
cmp
call
cs
mov
retf
xchg
inc
dec
pop
jp
cdq
mov
sub
xchg
adc
cli
daa
mov
push
jl
mov
call
loop
shl
out
inc
scas
dec
daa
cmp
dec
jecxz
test
sti
mov
mov
and
(bad)
jp
sar
jecxz
rol
mov
fs
leave
sbb
or
cld
int
int
imul
pop
cmc
sub
mov
push
fbstp
adc
mov
mov
fdivr
lods
loope
lods
mov
sahf
cmp
pop
inc
dec
mov
jne
jle
loope
jnp
imul
xchg
fsub
or
call
jle
(bad)
cli
jns
lahf
sbb
fwait
call
mov
mov
mov
cmc
clc
shr
mov
lods
push
rcr
sbb
cmp
xor
ss
adc
aas
add
cmp
jnp
ss
pop
push
pop
cwde
xor
call
popf
jns
pop
xchg
(bad)
mov
gs
jmp
cmps
inc
mov
es
or
gs
ret
sar
pop
push
jp
(bad)
jne
shr
adc
push
xchg
out
cmc
repnz
dec
popa
xor
out
mov
push
mov
jecxz
pop
in
out
leave
iret
cli
push
xor
inc
push
add
shl
ficomp
dec
cs
(bad)
or
pop
inc
xchg
push
iret
push
mov
xchg
sub
inc
cmp
sbb
cmp
jmp
dec
ror
sbb
xchg
push
or
cmp
mov
jb
sbb
(bad)
repnz
mov
call
xor
test
jb
sub
fcomp
sti
sbb
inc
mov
std
stos
push
inc
movs
sub
iret
sahf
and
jb
fs
jg
push
sub
push
add
jp
push
add
mul
jae
mov
ret
xchg
fucomip
sbb
inc
pop
jnp
mov
cmp
mov
repz
cmp
repnz
pushf
jp
mov
push
in
leave
cmp
in
pop
or
dec
adc
lods
dec
jb
sbb
(bad)
mov
sub
fwait
scas
lods
push
mov
dec
daa
mov
jmp
movs
in
dec
fmul
fisub
sub
jmp
push
loopne
xchg
leave
inc
push
mov
repz
cs
cmp
xchg
cmps
xchg
push
enter
cld
fs
inc
add
inc
test
mov
mov
les
movs
ror
es
jns
xchg
sbb
inc
push
ds
and
mov
retf
xor
cs
sar
retf
cmp
out
dec
test
xchg
pop
adc
xchg
jl
movs
mov
popa
sbb
fnstcw
push
jmp
push
pop
jo
std
jne
movs
cwde
test
and
scas
mov
and
push
fld
mov
and
mov
sbb
jb
mov
pop
cmc
pop
mov
das
inc
push
xor
into
push
ret
cmp
mov
dec
inc
test
into
xchg
inc
repz
ins
fstp
xchg
push
mov
shl
mov
in
pop
(bad)
push
test
sub
xchg
jo
out
cwde
sub
fwait
scas
scas
add
xor
add
jg
cmp
mov
mov
inc
dec
fidiv
call
(bad)
sbb
into
fist
imul
cmc
pushf
jmp
cmps
mov
test
mov
mov
adc
mov
mov
test
adc
dec
xchg
or
dec
push
popa
inc
mov
aas
push
pop
(bad)
or
pop
loop
adc
mov
push
xchg
rcl
xchg
push
out
mov
inc
inc
mov
iret
add
jmp
sbb
pop
mov
add
dec
fwait
movs
adc
push
inc
sar
cld
repz
aas
(bad)
cld
repz
jmp
lock
xor
loop
push
cmps
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
fstp
pushf
ss
push
xchg
ror
mov
cmp
xor
fstp
dec
out
out
sbb
sti
inc
fidivr
arpl
add
retf
arpl
movs
mov
loop
aaa
je
mov
mov
sub
and
jecxz
push
pop
xchg
jle
sahf
cmps
and
pop
(bad)
cmp
outs
out
repz
add
jae
xchg
retf
gs
or
pop
cdq
adc
(bad)
cli
test
sbb
(bad)
in
(bad)
cmp
pop
dec
xlat
jbe
loopne
aas
punpckhdq
outs
cmp
lea
xchg
call
cdq
jae
xchg
push
push
push
push
adc
sbb
add
push
jo
dec
hlt
mov
xchg
sub
out
neg
jmp
xor
hlt
ds
jl
and
sub
pop
stc
mov
pop
cmp
in
shl
pop
idiv
xor
jno
ja
mul
dec
pop
or
inc
or
ss
dec
(bad)
xor
fild
lods
daa
das
mov
push
mov
xor
aas
mov
or
pushf
mov
dec
xor
sub
mov
pop
loop
pop
outs
and
icebp
shl
scas
jne
dec
cmps
xor
int
jne
fisttp
jbe
stos
dec
sahf
inc
ffreep
in
pop
pusha
sti
cli
movs
movs
cmp
xchg
xchg
xor
es
stc
sbb
sub
mov
imul
mov
dec
ins
mov
repz
imul
pop
mov
cmp
call
inc
jge
or
repnz
and
and
cli
cmp
xchg
pop
pop
add
sub
lea
cmp
push
cdq
cmc
pop
dec
mov
daa
push
cs
outs
retf
cwde
sbb
sahf
fsubr
cli
xchg
lea
fistp
add
mov
pop
jle
cmp
sub
jmpw
xchg
fcomip
inc
add
lods
ins
xchg
int3
jmp
ret
mov
clc
fwait
xor
aas
or
xchg
test
add
sbb
retf
mov
scas
cld
je
xchg
mov
repnz
jne
movs
adc
push
fs
or
mov
stos
and
(bad)
outs
jae
and
out
sub
call
pop
loop
or
icebp
inc
clc
pop
lahf
add
out
jbe
mov
fimul
pop
cs
inc
xchg
mov
cmp
lea
outs
clc
inc
mov
ret
adc
push
jge
cmp
outs
sub
ds
pop
inc
push
xor
je
add
or
adc
push
mov
outs
rcl
or
and
aam
jg
mov
xlat
fsubr
retf
addr16
iret
dec
xor
cmp
cmp
popa
add
mov
xchg
into
push
lahf
sbb
(bad)
outs
imul
fisttp
jbe
jae
lds
cmp
jbe
jns
xor
neg
fstp
inc
shl
cmovge
aad
push
scas
ret
pop
std
mov
mov
mov
outs
int3
jbe
lods
stos
mov
ror
or
icebp
push
cs
mov
sbb
and
cmp
lods
pop
push
jecxz
pop
idiv
xor
sahf
aaa
mov
cmp
push
inc
inc
inc
addr16
ja
xor
mov
cli
ds
aaa
cdq
retf
xlat
adc
xor
mov
push
adc
popa
outs
mov
mov
ins
cmps
inc
lock
mov
add
mov
jns
mov
sbb
fistp
outs
pop
xchg
lds
test
pop
cmc
mov
imul
test
test
xor
xor
inc
ds
hlt
pop
sbb
jbe
pop
je
stos
fnsave
pop
repz
mov
ret
jmp
in
lods
out
xor
sbb
mov
jbe
and
xchg
jmp
sub
lock
je
jg
out
(bad)
dec
pop
mov
jmp
fs
scas
xlat
xchg
rcl
mov
pushf
cmp
fxch
jbe
cmp
mov
movs
(bad)
push
xor
adc
mov
sar
mul
pop
mov
rol
movs
imul
xor
jne
cmp
mov
sbb
test
mov
lods
jno
add
or
lea
clc
dec
cli
inc
mov
pop
punpcklbw
pop
mov
cdq
cmp
sub
scas
or
fcom
xor
adc
ins
or
dec
push
mov
neg
push
adc
(bad)
aam
shl
sbb
inc
push
cld
std
pop
pop
arpl
mov
(bad)
shl
pop
lock
arpl
xor
lods
xor
sar
jmp
scas
inc
ss
cmp
and
push
shl
cmp
cli
push
and
daa
or
jp
xchg
add
sbb
data16
jne
scas
jg
ret
xor
sbb
idiv
pop
stc
popa
push
adc
outs
test
ret
mov
pop
jo
imul
je
cli
inc
cmp
test
(bad)
(bad)
sbb
jecxz
push
inc
repz
sub
sbb
add
mov
cmps
aas
(bad)
std
cmps
inc
ret
pop
stos
mul
mov
enter
ins
das
popa
pop
dec
pushf
jae
test
mov
addr16
cmp
int3
rcl
mov
adc
mov
hlt
jo
add
push
into
sub
fwait
xor
pop
xlat
cmp
or
les
mov
inc
inc
bound
test
shl
sub
loopne
cli
outs
leave
or
add
js
pop
retf
inc
fild
ins
mov
sub
jle
and
sahf
mov
sbb
lods
xchg
or
sub
adc
ror
es
or
push
cmp
xchg
mov
inc
or
add
adc
adc
sub
or
int
push
test
xchg
hlt
data16
push
inc
push
xchg
dec
in
imul
outs
push
shr
test
jg
retf
sbb
adc
loopne
xchg
mov
out
nop
jmp
inc
ss
xchg
fwait
mov
push
jecxz
jg
dec
pop
shl
aam
cmp
jge
ins
pusha
xchg
push
mov
test
fidivr
sbb
sbb
jge
cmp
push
or
mov
sti
not
xor
ins
and
mov
cmp
jmp
ins
jecxz
pop
das
xchg
xchg
push
imul
cmp
dec
loopne
fimul
cmp
jmp
xchg
pop
jne
mov
das
xchg
rol
lock
dec
ins
mov
dec
lea
sub
mov
cmp
pop
fisubr
mul
jns
mov
ja
xor
mov
movs
xor
mov
push
jns
push
bswap
push
jmp
inc
icebp
es
lds
fild
adc
movs
inc
lock
cmp
out
test
mov
loop
stos
(bad)
xor
xchg
push
out
imul
sbb
inc
adc
mov
mov
xchg
inc
lods
xor
and
clc
aas
push
cmp
xchg
or
ins
pop
add
add
stos
shl
hlt
jmp
push
out
push
dec
pop
in
pop
mov
add
push
and
fnop
out
ins
addr16
sbb
mov
jo
and
aam
cmp
data16
xchg
fnstenv
xchg
dec
iret
xchg
xor
push
cmp
iret
fistp
xchg
cmp
into
sub
nop
ret
mov
mov
ins
dec
mov
xchg
jns
sub
sahf
movs
idiv
push
xchg
jmp
in
cmc
jmp
mov
cmp
cmp
aam
adc
test
jbe
inc
add
shl
mov
pop
leave
pop
add
jmp
add
push
test
daa
lods
push
adc
inc
call
daa
mov
xlat
xchg
mov
pop
add
jns
out
sbb
mov
mov
pop
pop
in
mov
imul
push
jge
lar
mov
sub
cmp
or
iret
fsub
dec
fdivr
hlt
sahf
dec
cwde
xor
(bad)
or
pop
jb
add
lods
adc
mov
jne
xlat
sar
fist
ja
(bad)
imul
(bad)
mov
mov
into
add
and
out
js
and
das
ror
mov
test
push
xchg
push
xchg
mov
mov
clc
pushf
push
mov
xchg
test
push
in
int
mov
push
sbb
xchg
jne
jle
adc
adc
pop
xor
or
sahf
pusha
add
call
ret
xchg
jle
cmp
jae
test
div
pop
cmps
mov
inc
xchg
pop
cmps
(bad)
out
sub
cmp
push
(bad)
fcomi
int3
iret
ds
int
test
or
fcmovbe
loop
out
les
adc
push
xor
adc
dec
mov
pop
push
mov
and
ficom
pusha
sbb
pusha
cld
mov
adc
mov
sub
jne
mov
xchg
pushf
stos
rcr
out
in
ret
pop
jno
test
mov
popf
sub
add
jp
ins
inc
(bad)
sti
imul
shl
cmp
aas
sti
out
mov
out
jle
lock
jnp
mov
out
iret
je
ffree
add
leave
fdiv
sub
push
push
aaa
fmul
jb
cmps
dec
mov
mov
and
fldenv
setg
(bad)
cmc
les
stos
sti
and
aam
sub
stos
or
xchg
mov
outs
sti
pop
add
cwde
pop
rcl
int
xchg
mov
sahf
mov
lods
or
aam
and
(bad)
sti
in
cmp
retf
pop
scas
cmp
jmp
mov
imul
and
mov
mov
call
xchg
push
pop
adc
fnsave
dec
xor
rol
popa
lods
cmp
stos
sti
paddd
adc
push
jmp
js
out
jb
imul
jl
cdq
retf
jmp
hlt
dec
sbb
je
outs
dec
cwde
sub
imul
fcom
cs
push
fdivr
ins
xor
mov
popa
pslld
mov
rcr
(bad)
out
retf
das
(bad)
mov
xchg
fidiv
sub
cdq
sqrtps
scas
jmp
pusha
add
nop
repnz
repz
mov
push
cdq
rol
call
jge
and
into
test
test
lods
xlat
lahf
mov
addr16
iret
sub
bnd
cmps
adc
ficom
data16
mov
inc
xor
jbe
mov
mov
jl
retf
cmps
adc
inc
fld
push
cmp
cli
push
pop
cmp
shl
xchg
popa
enter
push
xchg
lods
jo
repz
mov
jg
lods
mov
fdiv
cmc
das
pusha
cdq
(bad)
(bad)
cmc
daa
cmp
mov
push
lahf
adc
push
mov
pushf
add
fidivr
fcomi
inc
mov
add
call
fwait
clc
push
jns
in
and
sub
mov
out
nop
cmp
add
jp
mov
dec
mov
ret
stos
cvtps2pd
dec
int3
sar
inc
adc
dec
lds
outs
mov
jns
xchg
jb
retf
inc
ret
mov
cmps
or
add
loop
pop
in
and
retf
inc
pusha
jns
aam
outs
and
aas
(bad)
loop
mov
push
inc
mov
ror
stc
cwde
jp
(bad)
or
push
das
xor
pop
adc
or
jmp
lods
dec
inc
xchg
mov
push
pop
cmp
aad
icebp
je
xor
call
adc
fist
cs
cwde
or
push
add
aad
aad
inc
lods
aad
xlat
sub
push
jae
lods
push
fwait
loope
fstp
test
fdiv
repz
out
or
(bad)
loop
sti
pop
sahf
push
inc
jmp
out
mov
fstp
or
add
aad
sbb
mov
ret
adc
ficom
iret
jmp
jo
xor
adc
push
dec
js
mov
jbe
std
adc
idiv
out
xor
sub
inc
xor
mov
sbb
push
lods
jae
mov
dec
dec
jmp
icebp
sub
mov
or
fs
dec
nop
xchg
jns
xchg
jle
sub
and
push
inc
mov
inc
int
mov
push
jmp
(bad)
or
cld
push
sbb
inc
cmp
mov
call
call
xchg
mov
and
xor
fild
add
or
(bad)
xchg
lahf
test
adc
xchg
imul
test
jnp
xchg
jle
stos
ret
jmp
enter
sar
push
inc
aam
xchg
jns
aad
fs
daa
je
retf
gs
sbb
add
(bad)
jno
jo
mov
cs
hlt
push
out
push
adc
pop
sbb
xchg
lds
mov
mov
dec
mov
adc
cmps
xchg
outs
cmp
inc
push
mov
inc
push
imul
in
arpl
mov
test
jmp
adc
or
rcr
mov
dec
jmp
(bad)
add
or
jge
out
stos
dec
mov
gs
scas
es
(bad)
nop
pop
cmp
arpl
push
xchg
ss
mov
fsubr
daa
and
sub
cmps
lahf
int
push
dec
sbb
mov
mov
fisttp
adc
shl
(bad)
mov
mov
aam
jo
ds
jle
sub
les
repz
cmp
scas
cli
mov
pop
mov
xlat
sbb
pusha
sub
xchg
data16
xchg
movs
stos
and
and
popf
pop
jae
shl
xchg
ret
stos
test
push
dec
retf
jmp
add
retf
mov
jl
cmps
das
mov
jge
loope
or
int3
dec
aam
pop
and
sub
push
sbb
stc
ficomp
jp
mov
fisubr
sub
mov
fwait
gs
push
mov
aaa
shr
cmp
adc
clc
mov
jmp
rcr
(bad)
fdiv
cli
mov
cld
pop
sar
cmps
xchg
les
fiadd
inc
xchg
mov
retf
retf
sar
jb
leave
jmp
(bad)
adc
adc
(bad)
xchg
pop
xchg
je
cdq
movs
inc
stos
out
xchg
adc
xor
int
stc
repz
fcmovu
push
data16
leave
sub
inc
xchg
pop
sub
and
inc
repnz
mov
xor
lods
(bad)
push
repz
test
retf
data16
pushf
(bad)
sbb
arpl
xchg
movs
adc
aam
lea
rcr
ins
mov
mov
push
push
xor
xchg
(bad)
shl
xor
mov
push
in
ret
aas
hlt
scas
mov
sub
(bad)
arpl
jmp
leave
rol
mov
push
out
sbb
xchg
xor
add
adc
jl
arpl
jb
je
or
mov
outs
sbb
gs
mov
mov
cli
add
cmp
addr16
inc
cmp
aam
jno
xor
add
sar
sub
lea
add
test
lds
xlat
mov
les
sahf
push
leave
in
jmp
sbb
aam
inc
pop
das
fs
neg
inc
dec
pusha
out
cmp
inc
mov
sub
xchg
shr
loopne
out
inc
test
inc
enter
aad
xor
jmp
cli
and
mov
mov
and
popa
cmp
out
add
aaa
cmp
test
add
dec
repz
sti
mov
push
cwde
inc
sbb
push
or
imul
out
push
retf
xor
hlt
mov
jb
push
sub
and
scas
or
jbe
mov
addr16
ret
jb
sub
mov
dec
je
loopne
mov
xor
rcr
int
outs
xor
shl
xor
mov
popa
fcom
retf
mov
out
mov
fcmovnu
clc
int3
dec
rol
sti
jge
and
(bad)
sbb
jo
push
imul
das
jmp
aas
mov
pop
xor
and
rcl
adc
sbb
bound
push
std
out
cmps
xor
stos
in
xchg
ja
rcl
fsub
jl
or
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
daa
or
pop
xor
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
iret
add
add
shr
je
jmp
cmps
jnp
ins
cmp
sbb
aam
xor
ins
jle
cmps
cmp
pushf
out
cwde
ret
aam
int3
(bad)
(bad)
std
push
out
sahf
outs
lock
adc
sbb
lods
push
dec
jl
jmp
mov
sub
fbstp
xor
call
pop
jl
push
jae
xchg
push
cmps
push
aad
fidivr
and
and
jbe
int
es
adc
push
adc
mov
dec
fbld
std
mov
sub
push
jno
in
stos
jmp
mov
fild
pop
dec
cmp
loope
out
in
outs
pop
or
les
int
jle
imul
out
sahf
jge
in
in
js
pop
xchg
mov
out
adc
xor
xchg
fbstp
imul
pop
shr
ins
inc
jmp
out
jg
or
or
sbb
or
dec
hlt
adc
dec
mov
hlt
ror
mov
mov
mov
(bad)
loope
retf
test
lahf
jle
outs
cmp
dec
ss
aas
div
jl
in
mov
lods
push
mov
cli
sahf
ins
pop
ret
mov
das
push
or
jno
out
sub
fsub
add
mov
adc
adc
fidivr
inc
sub
loop
stos
sub
shr
push
jmp
out
inc
lods
outs
mov
mov
and
pop
xor
push
cmps
(bad)
pop
mov
icebp
or
test
cmp
in
cmc
xchg
mov
jno
pop
out
xor
adc
movs
ja
jns
xchg
jmp
call
fcomip
jnp
add
clc
out
outs
add
test
retf
outs
lods
cmps
ins
and
xor
nop
inc
icebp
fwait
sar
mov
fs
push
std
jmp
shl
cmp
pop
cld
clc
dec
or
cmp
es
movs
add
jnp
clc
repz
nop
dec
addr16
and
fs
cmc
icebp
sub
push
xchg
cmp
pop
cmp
fs
mov
jb
inc
fwait
movs
test
cwde
pop
jle
mov
icebp
lods
movs
cdq
inc
lods
push
or
scas
mov
push
inc
shl
stos
push
xchg
lods
dec
ficomp
jmp
sbb
or
inc
xor
js
js
mov
clc
mov
stc
pop
or
mov
or
mov
sar
jnp
xchg
and
sub
repz
and
cmp
jo
into
fstp
jmp
js
retf
mov
rcr
push
mov
loopne
sub
cmps
dec
outs
jae
inc
add
pop
call
loop
cmps
pop
xchg
jl
mov
cmp
ja
mov
inc
xchg
lea
adc
jb
and
ins
mov
imul
in
retf
mov
into
pop
call
call
inc
xor
int
dec
pop
mov
mov
xchg
aam
out
sbb
jmp
test
jg
xor
gs
and
repnz
shl
xchg
inc
into
jnp
into
test
movs
adc
jb
hlt
fcom
push
and
ja
dec
jbe
clc
fisttp
lods
push
pop
in
mov
mov
sar
call
ret
js
pop
add
jmp
push
xchg
jle
xor
mov
push
test
out
xor
inc
cmps
jo
sub
sub
lea
ret
xor
ja
dec
scas
cli
xchg
cmps
jg
movs
lods
mov
or
ja
mov
cmp
jmp
xchg
sahf
(bad)
repnz
into
dec
leave
aad
cli
push
adc
adc
mov
mov
hlt
popf
and
int
cs
cmp
mov
mov
mov
icebp
sti
mov
or
xor
xchg
test
add
into
movs
xchg
or
call
adc
aaa
inc
sti
or
inc
jl
jnp
scas
fwait
(bad)
pop
aad
mov
neg
nop
test
add
retf
ret
sub
movs
pop
mov
sahf
dec
or
(bad)
sbb
mov
(bad)
sub
push
cld
or
dec
mov
(bad)
addr16
lods
push
cmp
shl
xchg
or
cmp
fld
push
mov
adc
sbb
cdq
std
nop
neg
fcomp
jo
jge
cmps
mov
das
movs
stos
lods
dec
div
movs
dec
sub
scas
and
cld
pop
(bad)
jmp
jecxz
arpl
jp
cld
push
arpl
js
cwde
movs
and
ins
xlat
xchg
mov
cmps
mov
sahf
sbb
xor
cmps
shr
into
loopne
inc
bswap
cmp
xchg
(bad)
mov
fisttp
imul
bound
pop
mov
out
jno
lahf
push
adc
fdiv
std
ror
sub
add
shl
(bad)
rcr
sti
jg
push
cmp
ja
dec
xchg
pop
(bad)
lods
popa
ins
jp
icebp
jl
xor
add
sar
dec
jae
xor
mov
inc
rcl
lea
(bad)
loop
dec
adc
add
fnsave
mov
dec
sub
pop
jp
xchg
pop
push
fcom
adc
mov
mov
dec
push
jbe
sub
js
int
cmp
stc
into
aaa
inc
adc
sub
clc
xlat
push
mov
test
or
stc
jns
dec
xchg
pusha
ret
call
aam
mov
pop
out
jns
mov
adc
adc
adc
(bad)
xchg
pop
stos
movs
xlat
test
push
and
bound
mov
push
in
(bad)
mov
lods
popf
sahf
test
xchg
jge
test
adc
and
lgs
pop
retf
adc
test
sub
ss
imul
mov
movs
(bad)
pop
outs
retf
rcr
cmp
loopne
push
retf
mov
shr
adc
cmc
je
pop
in
dec
(bad)
xchg
mov
pop
sbb
or
shl
stos
sbb
jle
push
xchg
or
inc
pop
xor
or
cmps
xor
sti
sub
xchg
into
xor
enter
movs
in
enter
ins
mov
int3
mov
jb
pop
mov
mov
add
nop
(bad)
push
pop
mov
dec
mov
dec
test
pop
in
fsub
dec
hlt
gs
aam
sbb
int
push
pop
data16
movs
push
push
enter
xchg
sub
sti
mov
push
xlat
mov
mov
and
xor
push
jl
cmp
cmp
adc
fs
daa
mov
das
sub
daa
sub
push
or
in
stc
inc
jg
fcmovnb
cli
ss
sbb
push
and
js
hlt
mov
sub
push
push
(bad)
cmps
out
jle
in
out
sahf
or
addr16
xor
sahf
jne
loop
mov
mov
adc
mov
mov
and
xor
rol
popa
xchg
aas
jmp
jmp
mov
mov
inc
add
fsub
cld
popf
xchg
cmps
call
daa
jno
shr
jnp
xor
xchg
mov
fimul
adc
jmp
dec
(bad)
adc
stos
push
ins
scas
call
popf
arpl
and
std
imul
sub
xchg
mov
icebp
mov
adc
fs
adc
movs
push
push
scas
sbb
mov
dec
ffreep
inc
cmp
cmp
sub
mov
jae
xchg
and
mov
retf
dec
xchg
aam
jle
ds
pop
pusha
(bad)
mov
or
ins
mov
jmp
call
or
repnz
dec
call
sbb
mov
sbb
inc
cmp
loop
(bad)
call
or
call
dec
(bad)
fnstenv
call
test
fsub
pop
(bad)
lock
inc
arpl
scas
in
cmp
push
scas
mov
aad
xchg
sub
fcomp
scas
sbb
mov
mov
inc
cmp
dec
jmp
pop
jge
xchg
xchg
shl
cmp
enter
(bad)
loop
into
cmp
ds
sahf
adc
cli
sub
cmp
ficomp
lahf
push
mov
popf
loop
add
in
jmp
(bad)
mov
sti
retf
movs
sub
mov
jb
xchg
idiv
sub
xor
out
sbb
iret
pop
mov
add
lods
mov
dec
out
ss
ja
call
mov
sbb
mov
sbb
dec
adc
popaw
(bad)
fisub
jae
daa
cmps
in
inc
mov
mov
or
adc
jmp
shr
mov
pusha
inc
repz
out
in
push
ret
mov
mov
int
or
out
cmps
xchg
dec
push
pop
fnsave
repz
mov
pusha
jnp
and
and
jb
jo
shr
mov
sar
loopne
mov
fild
les
or
and
xchg
dec
mov
enter
mov
sub
and
pushf
sub
push
jb
int3
mov
mov
je
out
add
in
daa
jle
nop
int
call
(bad)
fld
push
pop
test
(bad)
xor
mov
jge
(bad)
ins
ret
sbb
or
cmps
sahf
(bad)
lods
into
dec
inc
test
pop
xlat
into
lea
push
sti
mov
int
push
mov
mov
stos
test
retf
xchg
cmp
pop
div
test
into
in
sub
mov
in
or
add
mov
retf
stos
pop
adc
mov
inc
push
clc
xor
pop
sti
cmp
jg
loop
and
stos
loop
push
daa
es
push
dec
jae
int3
jnp
or
in
xchg
sbb
jge
sbb
cwde
adc
xor
scas
jmp
setl
es
or
mov
add
fiadd
ja
daa
mov
ins
add
pop
imul
hlt
mov
in
xor
push
inc
stos
jp
inc
dec
dec
test
dec
leave
(bad)
push
outs
neg
push
lds
sub
test
loope
movs
icebp
in
pop
xchg
push
pop
push
mov
loope
imul
lock
adc
push
sub
mov
xor
or
push
cmps
outs
ja
das
inc
mov
(bad)
dec
push
mov
(bad)
cmps
add
mov
mov
aas
inc
add
ss
shr
repz
icebp
or
jne
sub
and
jo
mov
dec
icebp
mov
cmp
sti
sub
mov
push
sbb
and
cmp
mov
mov
cmc
lods
push
mov
jmp
mov
inc
loopne
dec
dec
adc
cmp
nop
data16
in
xor
mov
xor
xor
shr
xchg
fimul
push
retf
sbb
inc
cdq
mov
dec
dec
inc
loopne
fcomip
pop
jecxz
cmp
mov
jne
data16
sbb
lahf
pop
mov
ss
cli
clc
jle
sub
pusha
xchg
cmp
lahf
movs
sub
mov
jg
push
mov
sub
push
out
mov
jmp
pop
adc
ret
or
(bad)
out
hlt
mov
push
lahf
or
(bad)
(bad)
mov
cmp
inc
mov
xchg
les
arpl
pop
xchg
sti
cmc
add
stc
movd
outs
push
mov
mov
enter
sub
push
scas
test
pop
bound
(bad)
push
lds
xchg
jge
imul
fdiv
dec
mov
repz
stos
(bad)
sbb
call
xchg
stos
loope
sub
inc
fwait
inc
jp
push
xlat
stc
mov
mov
cmps
dec
cmp
sbb
mov
adc
daa
(bad)
lods
cmp
add
xchg
push
sti
push
ss
int3
cmp
and
(bad)
dec
adc
jae
rol
and
jg
movs
mov
retf
add
pop
sahf
aad
aaa
clc
stos
and
dec
jae
sahf
test
test
push
sbb
jge
mov
cmp
ss
mov
or
push
jnp
xor
pop
jo
lock
lea
push
jns
jl
outs
add
stos
sub
dec
and
cld
rcr
mov
test
mov
(bad)
mov
add
aaa
fcomp
pop
outs
sbb
test
dec
test
(bad)
imul
adc
mov
repz
inc
scas
jbe
(bad)
fucomp
sbb
bound
in
aam
jnp
stos
out
unpcklps
push
or
les
sti
push
fistp
(bad)
sub
mov
inc
lds
inc
ret
not
ds
ret
and
aam
mov
push
inc
push
movs
inc
dec
rcr
and
fwait
mov
arpl
jnp
pop
mov
in
cmp
lahf
push
es
push
push
sbb
jle
aaa
loopne
sub
dec
in
and
jmp
adc
or
cdq
mov
pop
inc
jne
or
(bad)
repnz
cli
xor
add
dec
sub
rcl
rol
test
sub
adc
push
inc
xor
lahf
pop
fidiv
rcr
sahf
ficomp
pop
xchg
or
data16
scas
pop
ret
jae
dec
stos
ds
in
popa
ror
inc
jmp
lods
(bad)
cmp
in
fistp
cmp
shl
lock
daa
jmp
push
jbe
call
jmp
add
retf
xchg
idiv
(bad)
imul
in
das
stos
jmp
xor
aas
sub
dec
sub
rol
inc
cmp
mov
push
push
xlat
aad
sbb
pop
xchg
inc
enter
out
jns
jp
mov
shl
xlat
stc
sub
stos
pushf
inc
outs
pop
mov
test
push
push
clc
pop
fcmovbe
cmp
adc
jno
ins
sar
jnp
mov
cdq
fist
sbb
adc
xchg
jmp
dec
mov
out
lea
bound
mov
pushf
push
pop
adc
ss
xor
jle
and
repnz
and
sub
and
jbe
pushaw
xor
jae
imul
rcl
push
aas
push
sub
sti
xlat
sbb
hlt
int
aad
imul
inc
cmp
or
cmc
pop
mov
pop
push
shl
or
pop
mov
fwait
ss
popf
xor
jno
adc
push
aaa
dec
imul
mov
pop
add
jbe
inc
push
setg
xchg
(bad)
xlat
xor
nop
cs
cld
(bad)
stc
and
sub
enter
adc
pop
push
(bad)
aad
mov
fs
arpl
pop
scas
sub
push
sti
push
sbb
push
fdivr
mov
xor
cdq
adc
sub
icebp
push
call
gs
sbb
xlat
sbb
aad
adc
fs
pop
push
inc
popf
ins
sbb
fsub
sbb
out
pop
ins
sub
mov
and
daa
push
stc
mov
sbb
push
xor
lods
mov
cmp
pop
sti
pop
xor
cld
mov
ds
cmp
xchg
push
outs
mov
xchg
pop
out
push
scas
push
or
fwait
add
lods
jmp
inc
loop
ja
call
shr
(bad)
adc
loope
mov
pop
add
scas
mov
dec
iret
xchg
mov
mov
adc
sbb
jne
ss
stos
sbb
xor
shr
pushf
fcmovne
fcom
jnp
out
into
pushf
jno
clc
js
test
or
xor
add
loope
(bad)
call
dec
sub
jp
cld
mov
ds
jns
sbb
fld
les
cmp
(bad)
pop
stos
jmp
loop
xor
mov
or
xchg
cmp
jb
jb
dec
enter
stc
out
jg
stc
out
jg
pop
add
inc
clc
add
jl
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
dec
ja
adc
dec
ja
jbe
jmp
daa
dec
xlat
in
addr16
jecxz
ins
cld
xor
xchg
xor
iret
add
in
leave
sbb
mov
bound
fstp
xchg
je
xchg
jp
xchg
and
shr
aad
cmp
adc
lods
ins
pop
sub
dec
pop
ret
loopne
sub
mov
cmovle
inc
in
inc
mov
out
test
jae
cmp
popa
cdq
dec
inc
xchg
and
mov
mov
jae
sbb
sbb
lds
fisubr
cmc
jge
dec
cmps
in
call
ds
xor
psllq
xor
xor
mov
pop
inc
out
rol
lea
daa
call
fs
fdivr
xor
pop
adc
push
fincstp
popf
lods
mov
scas
push
adc
pop
in
jne
sub
sbb
adc
sub
or
sub
loope
gs
mov
or
xchg
(bad)
jle
dec
mov
enter
add
dec
ds
(bad)
call
pop
test
push
dec
add
adc
stc
mov
cmp
sub
and
mov
lods
les
sahf
add
sbb
jnp
not
push
cmp
xchg
les
sti
mov
shl
call
xor
mov
and
sub
cmp
jecxz
scas
jg
mov
out
nop
pop
out
leave
shl
pop
and
cmps
add
enter
hlt
mov
mov
inc
inc
ret
xchg
lahf
mov
fucomip
pop
fdiv
popf
push
cmp
outs
loope
xor
std
imul
movs
adc
dec
mov
xchg
dec
(bad)
jmp
das
(bad)
out
cmp
cld
xchg
sub
das
mov
xor
sbb
jne
ret
sbb
and
jmp
cdq
mov
pop
in
cmps
je
jne
xchg
jl
hlt
mov
mov
mov
cs
adc
or
mov
push
xor
lahf
pusha
ja
call
test
loop
add
fisubr
imul
movs
jbe
loopne
sti
es
inc
lea
test
addr16
cmc
pop
pushf
jl
mov
pusha
xchg
pop
out
shl
jo
cmp
enter
xchg
fisttp
fisttp
mov
xchg
adc
push
test
pushf
sub
cmp
fisubr
jge
or
jbe
lds
shl
adc
xchg
mov
pop
(bad)
and
dec
jmp
addr16
nop
iret
pop
clc
repz
xchg
jnp
(bad)
xchg
nop
adc
and
loope
repnz
mov
jecxz
cmps
and
mov
loop
das
mov
jo
pop
mov
fcmovnb
adc
dec
popa
(bad)
sub
in
icebp
enter
add
fdecstp
jns
dec
and
mov
mov
in
xchg
cli
je
or
dec
push
adc
lds
pop
and
repz
push
mov
mov
les
xor
or
nop
sub
addr16
xchg
and
sbb
lods
es
cli
add
imul
jbe
sub
sar
fistp
push
ret
adc
in
(bad)
pop
pop
sti
sar
or
jnp
aad
push
test
push
ja
pop
pop
into
(bad)
jg
and
mov
ins
inc
sub
repnz
imul
jmp
dec
cmps
xor
test
mov
cmp
stos
fdivr
cmp
aam
xchg
add
call
and
ja
mov
push
pop
lea
int
fwait
dec
lock
mov
iret
push
fs
mov
movs
fcom
pop
pop
stos
push
cs
add
not
dec
addr16
sub
call
test
inc
fwait
or
dec
push
imul
inc
and
push
adc
loopne
outs
in
retf
pop
(bad)
xor
in
enter
jnp
sub
pop
stc
imul
or
mov
pop
mov
inc
sahf
jns
ss
out
pop
xchg
out
popf
clc
push
ret
fbld
mov
dec
es
iret
pop
dec
test
and
scas
and
loope
jle
aad
ror
jae
sub
jne
pop
popf
(bad)
imul
push
enter
add
enter
jp
out
pushf
dec
repnz
js
pop
jmp
movs
jle
repnz
into
push
out
test
xor
dec
sahf
sar
mov
mov
arpl
cli
pop
lahf
sub
sbb
jne
xchg
push
retf
call
push
(bad)
(bad)
aad
cmp
cmp
movs
aaa
sub
test
xlat
xor
out
jecxz
push
fidiv
xchg
cmp
mov
ins
mov
fwait
leave
icebp
mov
into
add
aam
jle
dec
xchg
imul
(bad)
enter
aad
loope
call
push
push
jp
mov
in
jecxz
out
in
sbb
test
xchg
mov
imul
jnp
mov
xchg
lea
icebp
jp
inc
inc
jp
xchg
lock
rcl
ror
mov
and
repz
scas
cmp
push
mov
sub
and
or
jp
push
push
sti
jge
mov
adc
loop
retf
(bad)
fsubr
dec
or
scas
mov
retf
aas
jl
daa
in
fcom
(bad)
icebp
in
xchg
sbb
dec
sbb
fwait
and
xor
xor
mov
jno
mov
jecxz
gs
xor
imul
jo
mov
fist
lods
pop
(bad)
fdiv
js
sti
jge
adc
iret
std
pushf
dec
dec
shl
mov
xor
xor
push
je
mul
loopne
ja
adc
push
aas
push
sbb
push
mov
idiv
sbb
sbb
inc
fistp
fucom
dec
pusha
in
(bad)
adc
mov
and
add
mov
jmp
or
js
fs
adc
push
mov
fwait
retf
mov
movs
or
call
rcr
push
jle
inc
icebp
lods
(bad)
stc
nop
pop
adc
aaa
sti
nop
sbb
add
sub
out
call
dec
mov
xchg
mov
xchg
jmp
fimul
mov
pop
add
pop
pop
(bad)
outs
pop
push
aam
inc
(bad)
jp
popa
cs
rcl
jb
into
test
sub
xchg
cmp
or
ss
xchg
xchg
daa
jg
inc
xchg
sbb
sti
push
jno
test
push
(bad)
or
aaa
pop
xchg
out
sahf
and
mov
imul
dec
dec
mov
in
stos
hlt
sub
enter
adc
sbb
mov
in
addr16
loop
and
cdq
inc
adc
(bad)
mov
sar
jmp
jg
pop
retf
mov
scas
les
mov
pop
mov
mov
xchg
xchg
and
xor
dec
addr16
test
out
mov
sbb
push
pusha
nop
aad
push
xor
mov
xor
lods
dec
clc
sbb
inc
push
out
out
retf
aam
pop
pop
xor
mov
sbb
mov
xchg
push
sbb
mov
not
inc
xchg
lock
lods
fcmovu
cmp
xchg
ret
or
les
ds
jl
xchg
retf
repnz
jmp
adc
inc
das
ficom
ret
dec
fwait
or
dec
ins
pop
push
jne
adc
loopne
loope
ja
test
sub
push
add
movntq
cli
pop
aad
cmps
push
sahf
jns
add
sti
retf
pop
js
movs
adc
push
lods
stc
fbld
jmp
outs
cmp
aam
xchg
push
sub
fdivr
call
cli
leave
push
jp
ja
or
sbb
adc
sub
daa
stc
rcl
jecxz
xchg
shr
mov
cld
adc
xor
and
pop
adc
pop
xchg
inc
push
mov
loopne
imul
cmps
or
sbb
push
dec
sbb
xchg
mov
dec
and
dec
stos
cwde
fnsave
mov
fnstsw
and
cmp
test
loope
and
in
inc
dec
hlt
int
pop
lds
movs
std
mov
adc
in
inc
pop
aas
cdq
inc
ret
test
mov
fild
cmp
pop
jnp
aas
js
inc
dec
mov
mov
ja
fisub
xchg
stos
add
out
inc
div
movs
pop
loopne
mov
movs
mov
jl
fstp
(bad)
in
ja
les
(bad)
jno
retf
mov
(bad)
sar
sub
mov
retf
ret
xor
ins
sbb
xchg
arpl
sub
and
fchs
ret
popa
int3
xchg
shr
mov
sub
sub
jnp
mov
sub
lods
vprotb
mov
jmp
js
test
iret
dec
popf
mov
cmps
mov
dec
mov
ror
mov
xlat
jp
mov
hlt
test
bound
retf
push
xor
inc
jg
cs
fidiv
sbb
adc
adc
push
adc
jmp
(bad)
nop
icebp
adc
sbb
js
xchg
repnz
outs
ja
xchg
out
push
neg
pop
ins
mov
jge
gs
popf
push
xor
mov
call
fcomip
xor
pop
sub
lods
rcr
pop
fsub
out
jb
mov
inc
sub
stc
je
and
dec
test
sub
loopne
icebp
(bad)
jbe
repz
inc
daa
addr16
shl
mov
pop
ret
sti
sbb
mov
pop
pop
repz
push
fsub
mov
imul
mov
push
dec
mov
popa
cmc
es
add
mov
in
repnz
and
xchg
cmps
dec
sub
mov
jne
call
sbb
mov
cmp
loope
or
cmp
(bad)
adc
jl
dec
mov
imul
(bad)
mov
loope
ja
int
or
jp
test
xor
jmp
js
sub
std
or
push
and
outs
sbb
dec
sub
dec
shr
pop
fisub
push
or
inc
imul
add
jns
mov
retf
retf
clc
leave
xor
or
repnz
fs
pop
call
(bad)
mov
fst
das
fldl2t
jg
or
xor
jl
cmp
xor
jle
arpl
xchg
adc
inc
ja
adc
inc
pusha
leave
dec
fsubr
jbe
sar
idiv
sbb
cmps
push
lds
int
dec
cmp
cmp
add
iret
fsubr
dec
xchg
xchg
mov
fisubr
mov
fild
test
sub
or
mov
mov
sar
jns
es
cmc
xchg
xchg
ja
pop
inc
aad
push
scas
ss
test
sub
mov
jae
loope
std
es
inc
add
jp
leave
in
or
and
sti
mov
outs
xor
dec
movs
and
ja
int
sar
sti
arpl
sub
lods
jbe
jbe
adc
push
mov
lahf
mov
outs
pop
push
loopne
dec
push
data16
(bad)
sub
test
xacquire
or
adc
or
jae
add
xor
loop
popf
xchg
loope
xor
sub
ror
pop
iret
jbe
jecxz
mov
mov
adc
test
mov
arpl
pushf
xchg
cmp
int3
ret
mov
into
popf
mov
call
gs
jne
(bad)
imul
jo
bound
and
test
sar
sbb
and
mov
xchg
xchg
inc
pop
stos
aas
push
sbb
mov
stc
jnp
leave
jae
pop
loope
and
cmp
inc
in
fbstp
push
fidivr
xor
adc
inc
loop
jnp
aaa
icebp
pop
clc
inc
std
test
bound
mov
dec
idiv
pop
xchg
jo
cmp
push
jne
mov
arpl
mov
pop
ret
js
jge
out
in
daa
sbb
dec
xor
add
or
sub
les
leave
jns
push
xor
push
inc
lea
mov
dec
sub
sbb
lock
pop
pop
sub
xchg
repnz
cmp
sbb
cwde
fs
mov
das
sahf
in
mov
call
clc
loop
and
movs
adc
iret
fsubr
(bad)
push
adc
mov
push
push
dec
js
mov
mov
sub
mov
mov
mov
cld
gs
repnz
dec
adc
or
js
arpl
das
out
outs
add
and
jl
push
lea
adc
sbb
sbb
loope
pusha
fbstp
mov
add
inc
scas
mov
scas
fcmovne
and
fidivr
mov
push
mov
test
cmp
shl
test
out
mov
mov
adc
stos
repz
mov
clc
aad
int3
ja
push
push
cmp
movs
sti
dec
les
std
(bad)
push
sub
cmp
loopne
je
cmp
add
repz
pop
xchg
xor
pop
push
je
add
(bad)
sti
loope
jbe
jbe
es
push
mov
inc
rol
xchg
cmp
out
mov
std
xor
retf
loopne
cmp
loop
cwde
(bad)
fs
dec
jg
inc
mov
pusha
jno
add
sub
inc
ret
cmps
xchg
adc
int3
nop
cwde
and
retf
out
fbstp
pop
mov
sbb
xor
mov
(bad)
mov
movs
das
and
arpl
add
je
xor
inc
xor
or
push
jae
iret
inc
cmp
lods
stc
xchg
test
cmp
push
dec
or
push
je
xchg
je
xchg
sahf
sbb
jl
test
jno
sub
jecxz
fimul
movs
das
mov
push
ret
(bad)
mov
xor
jmp
shl
fs
sub
call
icebp
and
iret
xchg
inc
data16
cmc
pop
imul
mov
cmp
cmps
pop
xor
das
or
jmp
mov
jg
pushf
inc
sub
imul
ret
xchg
jge
rcr
xor
pop
sbb
ret
call
push
fwait
and
clc
int3
mov
stc
cwde
stos
mov
fstp
stos
repnz
movs
adc
mov
xchg
repz
movs
add
jno
sbb
inc
mov
push
cwde
jle
and
push
xchg
dec
jl
adc
scas
mov
inc
xchg
rcl
push
sti
icebp
mov
aas
scas
je
mov
mov
jmp
in
aad
lods
push
popa
xchg
nop
jno
out
push
mov
xor
add
(bad)
mov
int3
fld
imul
out
push
jmp
adc
cmp
dec
sbb
icebp
push
pop
out
mov
or
jne
js
aad
push
push
mov
and
xlat
cmc
fwait
pop
bound
shr
out
pusha
test
pop
and
outs
cmp
lods
cmp
outs
fcom
push
xor
cdq
pop
inc
jns
cmp
push
imul
ss
ss
lods
test
fsubr
call
retf
(bad)
je
pop
jmp
adc
popa
mov
inc
das
dec
push
repz
pushf
pop
pop
mov
(bad)
dec
mov
dec
cld
dec
call
popf
fs
(bad)
loopne
test
sar
push
ins
mov
or
sub
pop
cmp
cmc
inc
xor
stos
div
sub
frstor
das
fnstcw
xchg
lds
ja
in
pusha
add
pop
out
repz
sar
mov
sbb
cmp
cld
pop
pop
sbb
mov
out
jg
stc
out
jmp
lock
jns
fld
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
inc
fmul
mov
mov
mov
xchg
mov
push
dec
stos
std
jb
(bad)
jmp
mov
xlat
(bad)
jns
iret
ds
loope
add
sar
fadd
adc
sub
cmp
inc
fsub
ins
push
xor
xchg
movs
dec
xchg
test
cmps
fld
bound
call
push
jbe
pushf
lods
xor
fcomi
xchg
jecxz
inc
adc
jg
fidiv
push
dec
popa
pop
addr16
xchg
out
call
or
push
mov
adc
or
inc
imul
cmp
sahf
lea
dec
push
scas
cmp
cmps
dec
sub
fimul
xchg
mov
das
push
inc
and
fidivr
stos
xor
(bad)
stos
(bad)
idiv
inc
pusha
cli
fstp
cs
pop
aas
sbb
(bad)
adc
dec
fdiv
fisub
xor
test
(bad)
cs
mov
(bad)
mov
mov
pop
stc
mov
add
jg
jge
inc
movs
jp
sub
xchg
sbb
jmp
push
push
fld
and
fadd
xlat
push
and
outs
xchg
push
or
test
jno
outs
add
cmps
mov
fs
std
inc
div
stos
fsubr
xchg
call
pushf
das
jno
cmps
pop
xor
push
dec
in
cmp
data16
pop
xlat
jb
shr
inc
clts
imul
jge
xchg
(bad)
mov
cmp
jae
lds
ja
and
mov
mov
jae
mov
aaa
mov
pop
ds
xchg
mov
(bad)
sbb
mov
mov
push
adc
cdq
popf
sbb
repnz
aam
add
stos
arpl
inc
in
adc
in
fidivr
push
jnp
jbe
enter
ds
movs
inc
mov
push
(bad)
les
gs
ret
pop
cmps
push
sub
adc
fwait
xchg
test
ss
push
movs
inc
xchg
ins
push
in
popa
pop
mov
cmp
shl
aas
sbb
cmp
mov
lds
das
dec
jle
mov
neg
dec
cli
push
out
add
and
inc
mov
(bad)
sub
mov
dec
cmps
fnstsw
daa
add
dec
std
pop
xchg
aaa
gs
and
out
cmc
mov
aaa
rcl
mov
inc
enter
mov
es
arpl
mov
pop
ret
push
js
or
jns
mov
arpl
push
mov
add
jge
and
mov
push
xchg
adc
es
dec
pop
call
jmp
mov
outs
mov
lahf
ins
daa
addr16
sbb
cmp
in
mov
xchg
popf
outs
jb
out
xchg
mov
push
xor
mov
mov
xchg
fcomi
and
out
add
mov
mov
jg
xchg
inc
mov
sbb
vpmulhuw
mov
sub
inc
icebp
sbb
nop
and
mov
sti
ret
mov
(bad)
enter
stos
inc
icebp
sti
shr
js
imul
sub
mov
leave
dec
inc
outs
adc
xchg
jmp
test
fdivr
shr
mov
lahf
fstp
ds
dec
dec
pop
retf
das
lods
loopne
sub
pop
xor
add
ins
popf
imul
pop
dec
bound
cmc
xchg
aad
pop
in
cmps
loope
pop
fisttp
xor
and
sbb
sbb
aad
repnz
aaa
pop
lods
mov
or
cli
mov
fmul
sbb
or
mov
fiadd
and
or
mov
add
test
and
pop
pushf
imul
outs
addr16
mov
addr16
daa
cmp
push
and
or
test
inc
or
stos
inc
(bad)
cmp
in
out
clc
call
std
xchg
fbstp
js
ja
ror
mov
shl
ds
lods
stc
xor
out
data16
xchg
in
into
mov
push
add
add
nop
lahf
xor
(bad)
jns
daa
inc
inc
mov
sar
jnp
sbb
shl
adc
xlat
add
mov
popf
call
pop
push
xor
sbb
push
pushf
inc
dec
ds
aam
cdq
sbb
es
loopne
mov
enter
shl
sub
and
imul
mov
(bad)
inc
mov
test
xor
cli
xchg
fild
fwait
sbb
neg
test
cmp
sbb
push
imul
dec
xchg
or
jbe
(bad)
jmp
or
dec
mov
ficom
icebp
(bad)
(bad)
adc
in
fst
iret
xchg
data16
jbe
add
ja
xchg
xor
pushf
push
mov
mov
mov
adc
xchg
loop
dec
stos
int
xor
xor
adc
loop
lods
imul
push
mov
mov
xchg
nop
loopne
push
cwde
mov
out
xor
popf
ds
scas
xor
push
inc
neg
addr16
mov
and
jne
dec
pop
fsubr
jmp
call
jp
mov
pop
outs
mov
lods
aad
mov
mov
(bad)
mov
mov
clc
aaa
scas
push
jne
add
mov
mov
inc
adc
pop
jl
cmp
popa
sti
cdq
fmul
ins
repnz
adc
push
push
adc
sub
and
gs
rcl
inc
das
setnp
les
into
sbb
cmps
rcr
push
dec
pop
jnp
mov
int3
ja
pushf
cmp
test
popa
mov
xor
jmp
je
sub
movs
out
cmps
or
ds
pop
fild
xor
fistp
(bad)
mov
je
pop
icebp
addr16
arpl
dec
imul
sbb
test
cli
popa
ins
mov
shr
stc
and
lea
xor
mov
fsubr
and
and
and
arpl
mov
fadd
push
addr16
(bad)
cmp
repz
xchg
xchg
test
mov
shl
adc
jno
pop
lods
test
loopne
sub
pop
in
jp
rcr
adc
out
aaa
jno
add
aad
pop
pop
xlat
(bad)
push
pop
retf
pop
sbb
and
cmp
adc
cmp
sbb
lds
test
inc
mov
(bad)
movs
sub
int3
fimul
mov
push
std
jg
pop
lods
fs
mov
push
fcom
fisubr
pop
cld
(bad)
in
ds
js
loope
cmp
nop
out
je
jne
daa
rcl
inc
add
push
dec
add
inc
xlat
ror
pop
mul
adc
out
jecxz
add
sub
sbb
xchg
inc
call
es
jns
scas
and
pop
enter
or
int
(bad)
cmp
inc
mov
inc
xor
sub
sbb
adc
cdq
gs
bound
pop
es
outs
push
adc
cmp
inc
loopne
add
cs
mov
(bad)
dec
enter
outs
dec
jmp
(bad)
mov
xor
neg
mov
adc
and
je
mov
sub
cmp
pop
adc
sahf
xor
popf
popf
popa
push
mov
jmp
xor
out
push
test
retf
out
hlt
ds
popa
ret
mov
(bad)
mov
imul
hlt
xor
retf
cmp
mov
add
scas
xlat
mov
(bad)
fst
call
mov
adc
out
arpl
aam
add
cs
into
aam
cmp
je
ins
mov
dec
inc
test
and
mov
mov
aas
jg
pop
xor
push
pop
jae
cld
daa
mov
cmc
into
pop
xor
ror
push
inc
lea
lock
ins
dec
call
cmp
mov
inc
push
bound
inc
lods
(bad)
fdivr
nop
mov
push
jo
retf
loope
daa
ds
icebp
jo
ins
ins
in
enter
dec
lds
cs
lds
xchg
cmp
(bad)
in
pop
push
add
sub
mov
pop
dec
mov
add
mov
sti
dec
xchg
xchg
xchg
(bad)
xchg
jb
sbb
or
dec
data16
mov
cmp
out
retf
adc
or
jl
pop
or
and
pop
sub
or
sbb
xchg
push
out
cmps
push
imul
dec
fiadd
inc
xor
arpl
pop
scas
add
lock
scas
mov
xchg
lds
scas
data16
(bad)
inc
bound
leave
aam
jp
mov
sbb
std
fist
call
sar
pop
(bad)
push
xor
jp
or
loop
jbe
popa
mov
mov
sbb
inc
and
in
into
xor
shl
(bad)
mov
or
or
shr
ret
adc
push
mov
scas
scas
adc
mov
das
pushf
std
aaa
lds
in
in
sbb
pop
inc
pop
sbb
xlat
sbb
mov
dec
jns
ret
scas
leave
sar
cli
add
cs
sbb
xchg
mov
lahf
xor
std
dec
imul
push
movs
dec
pop
into
cmps
sub
imul
out
in
xor
fcom
jbe
out
push
cmp
pop
(bad)
out
aas
or
jle
int
push
pop
or
or
push
push
movs
mov
mov
ja
retf
out
fdiv
sbb
ins
pop
add
push
rcl
(bad)
out
imul
jge
rcl
mov
xlat
jo
cwde
xchg
cmp
rol
cmps
leave
inc
mov
mov
hlt
cmp
sbb
or
(bad)
push
out
fisubr
push
sahf
(bad)
in
sub
cmp
test
jecxz
inc
cdq
xchg
(bad)
xchg
les
icebp
daa
xchg
dec
and
cmp
pop
mov
jmp
bnd
or
xchg
inc
and
lods
enter
jns
arpl
sub
cmps
push
add
xor
jp
dec
jp
xchg
mov
sbb
mov
stos
pop
inc
fwait
jae
aaa
inc
mov
cld
test
fstp
rcl
push
add
movs
xchg
int
cs
push
out
int
dec
aam
(bad)
push
(bad)
mov
xchg
test
cmp
pushf
movs
(bad)
and
jp
scas
or
cmps
js
jno
sbb
xor
inc
dec
aad
and
clc
les
inc
jmp
dec
das
jecxz
into
adc
sub
sbb
(bad)
cmp
mov
scas
inc
or
or
out
cld
adc
ins
cmp
or
mov
fsub
loopne
mov
ret
lahf
xchg
outs
pop
pop
push
adc
pop
movs
add
div
sub
test
mov
test
paddb
jne
add
sub
inc
xchg
add
mov
mov
stc
aad
push
mov
pop
inc
sub
cwde
adc
mov
xchg
cmp
xchg
xchg
pop
push
je
stc
out
xchg
pushf
sbb
push
cmps
inc
pop
xor
xchg
and
imul
cmp
(bad)
push
repz
jnp
and
inc
mov
cmp
mov
pop
pop
or
aad
cmps
xor
jne
jg
cmp
imul
push
mov
ficomp
addr16
ficom
pop
push
jns
mov
mov
ret
mov
cmp
sar
clc
sar
sbb
retf
jno
hlt
sub
lock
loopne
jae
(bad)
cdq
lds
mov
mov
xchg
popf
or
jbe
push
bound
imul
or
pop
cli
mov
xor
push
jecxz
cmps
push
push
arpl
jle
xor
cmp
jo
(bad)
add
stc
adc
cmp
sub
inc
ror
pop
stc
pop
mov
inc
clc
xchg
movs
xchg
mov
or
lds
and
fidiv
sub
hlt
pusha
int
retf
xchg
fistp
or
popf
xchg
pop
inc
stos
fsubr
fbld
mov
jae
bnd
in
mov
mov
push
pop
mov
jge
fist
pop
and
pop
adc
xor
arpl
jnp
sbb
bound
aas
lahf
push
dec
fcmovnbe
clc
popf
mov
pop
push
inc
shl
push
int
iret
aas
stos
stos
shl
or
sbb
sub
push
les
in
imul
and
shl
or
jg
out
mov
(bad)
adc
jmp
and
jns
and
mov
mov
ret
jg
and
and
or
sbb
mov
xchg
add
mov
ret
xchg
loope
ja
jg
popf
xor
push
dec
inc
mov
arpl
dec
or
inc
sub
inc
sti
cdq
adc
rol
mov
cmp
sbb
mov
aas
push
loope
nop
inc
ret
aam
xchg
mov
xchg
leave
pushf
cmp
mov
cs
leave
fwait
push
add
jbe
jmp
and
cli
test
xchg
push
cmp
loopne
popa
push
pop
jae
ss
cdq
mov
sub
adc
cmc
lods
loopne
movs
pop
pop
fcom
sti
out
push
(bad)
retf
cmp
imul
cmova
nop
stc
ror
enter
pusha
dec
(bad)
jecxz
push
repnz
sub
cmp
jns
xchg
inc
add
shr
test
adc
iret
mov
icebp
ss
cmp
add
loopne
pop
fist
push
or
sbb
xchg
in
test
ret
sbb
sub
mov
scas
test
dec
and
aam
push
fld
mov
dec
xor
mov
mov
arpl
xchg
push
inc
cmp
mul
shl
loop
xchg
pusha
jl
cmps
mov
aam
inc
push
mov
test
jmp
(bad)
push
not
mov
or
mov
and
jmp
stc
mov
test
mov
addr16
mov
xor
inc
jnp
dec
je
fisub
and
xchg
dec
lods
xor
or
xor
or
mov
jns
pop
lods
ss
aaa
or
call
bound
call
and
sar
cmp
ins
xor
xor
loop
or
push
cmp
sbb
pop
mov
lds
jg
dec
pop
(bad)
cli
aad
sbb
aas
cmp
xchg
and
psubusw
xlat
repz
ja
outs
cmp
xchg
pop
fwait
pop
push
rol
in
xor
and
adc
mov
fld
sub
ds
out
xchg
mov
push
add
sbb
mov
xchg
mov
cmp
inc
loope
jg
xchg
fwait
enter
stos
sub
lock
outs
pop
test
mov
jp
inc
leave
cs
stc
popa
dec
xchg
das
jmp
(bad)
jae
adc
(bad)
out
leave
or
ficomp
cmp
imul
and
dec
xchg
out
fst
jb
xchg
push
mov
rol
les
jns
rol
dec
das
lods
js
fisttp
xchg
stc
outs
and
xchg
pop
mov
scas
js
mov
cmps
lods
dec
aam
and
mov
leave
enter
and
mov
ins
fisttp
aam
std
adc
into
mov
div
mov
cmp
jae
dec
pushf
in
popf
cmps
jb
push
mov
cmps
loop
and
dec
retf
out
in
pop
inc
rcr
or
push
cs
inc
test
popa
cld
popf
leave
sub
fs
clc
outs
call
ss
cmp
mov
pop
daa
xor
pop
add
cdq
fmul
pop
mov
not
out
fcmovu
fxch
dec
mov
cmp
adc
pop
pop
dec
mov
cmp
stc
(bad)
mov
cmp
lods
pop
mov
(bad)
fst
jg
cld
leave
ret
call
xor
mov
stos
stos
sbb
fst
xor
addr16
ja
cmp
popa
add
sub
test
xor
jno
call
(bad)
cld
repz
aas
jmp
and
jno
jne
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cmp
in
mov
cmp
fwait
call
mov
cwde
cwde
cwde
scas
jmp
jle
enter
add
sbb
stos
add
jne
mov
ret
add
scas
pop
jle
pop
aas
inc
sbb
or
and
inc
dec
rol
mov
aaa
cld
aaa
scas
ins
xchg
pop
jp
lea
dec
sub
(bad)
jnp
cmps
outs
movs
outs
lock
cmp
mov
pop
mov
sti
(bad)
push
push
mov
hlt
lods
xlat
cmps
out
cmc
sub
mov
enter
sbb
xchg
cmp
mov
outs
sub
push
add
dec
arpl
(bad)
dec
int
out
(bad)
cmp
movs
xchg
push
movs
call
jmp
cdq
mov
dec
cmp
xor
or
iret
mov
cmp
test
xchg
aas
cmps
mov
pusha
aaa
cmc
jmp
popa
imul
cmp
push
sbb
int3
cli
dec
fcom
push
ins
sbb
cmc
push
rcl
movs
inc
vcomiss
int3
retf
push
push
pop
xchg
fs
addr16
add
ja
repnz
lock
jno
and
mov
add
std
jmp
push
jle
fstp
or
mov
jmp
jp
mov
(bad)
xor
inc
sbb
je
movs
dec
mov
and
add
pop
ret
bound
call
sub
xor
push
clc
and
sub
or
inc
xchg
mov
pop
into
sub
add
popf
jae
out
add
mov
loopne
jo
js
into
dec
jne
pop
or
addr16
call
xchg
push
sub
cmp
mov
mov
mov
dec
push
or
push
xlat
inc
inc
js
retf
(bad)
jge
aaa
sbb
adc
stc
das
ins
dec
leave
popa
cmp
lahf
dec
fadd
ja
sub
cmps
mov
test
mov
inc
dec
loop
das
xchg
add
inc
fucomip
lock
les
icebp
and
fsubr
pop
mov
push
aad
ins
test
scas
pop
int3
add
mov
sahf
adc
fs
stos
pop
and
(bad)
xor
adc
and
test
aad
xchg
ds
ss
and
in
pop
data16
sub
rcr
jge
retf
imul
sbb
call
jns
cwde
jge
ja
or
sahf
mov
mov
dec
fs
sbb
addr16
fnstenv
jmp
xchg
jmp
jne
xchg
shl
clc
cs
dec
test
sub
lahf
cmps
nop
jbe
popa
pop
cmps
sbb
cwde
jno
or
xor
outs
test
sbb
push
pop
mov
nop
jge
out
inc
push
(bad)
mov
xchg
sahf
mov
idiv
fnstsw
mov
sub
cdq
mov
xor
and
mov
shr
je
daa
mov
inc
jo
(bad)
cmps
pop
loope
loop
mov
imul
(bad)
in
jno
xor
and
mov
mov
aad
pop
aaa
cmp
fadd
xor
and
frstor
frstor
fcmovnb
nop
dec
xchg
adc
movs
mov
cmp
sub
dec
sar
cmps
rcl
mov
add
dec
mov
daa
jb
daa
bnd
sbb
pop
out
mov
cdq
and
lahf
test
test
xor
cmp
gs
outs
rol
lahf
push
pop
movs
icebp
xlat
sbb
call
clc
fwait
mov
adc
jmp
and
out
mov
(bad)
rol
icebp
dec
out
dec
dec
jmp
rcr
int3
jl
mov
mov
sbb
cmc
mov
ss
and
popa
mov
scas
mov
movs
nop
cmp
aad
fcom
imul
scas
cmp
inc
push
xchg
ins
sar
popf
jbe
popa
test
xchg
std
stos
loopne
in
jns
jno
(bad)
xor
xchg
dec
rcr
xor
ret
inc
rcr
jo
stos
push
mov
adc
inc
mov
pop
lods
push
add
pop
pop
pushf
stos
dec
push
cmp
popa
fwait
test
xchg
mov
mov
mov
lock
jb
push
ss
push
leave
in
in
sar
pop
push
mov
repz
jecxz
sbb
pop
lods
jp
sub
leave
test
add
aaa
arpl
or
cmp
stc
packssdw
mov
mov
clc
push
xchg
(bad)
cmovp
mov
add
scas
xchg
(bad)
shr
pop
mov
pop
sub
retf
(bad)
adc
es
add
mov
fnstcw
ret
mov
iret
test
or
pop
dec
adc
fild
mov
push
adc
add
jmp
imul
and
dec
mov
sti
outs
lock
mov
loop
lods
mov
jno
and
shr
push
push
adc
mov
fcomp
jns
pop
mov
pop
pop
rol
in
lods
ret
ss
jae
out
inc
or
lea
and
outs
mov
imul
test
dec
fcomi
jmp
lahf
outs
jnp
popa
dec
mov
fwait
hlt
fdivr
cmp
gs
add
and
xor
sub
or
sbb
pop
add
jb
ficomp
cmps
nop
repnz
sub
sti
dec
es
xlat
repnz
enter
aas
mov
enter
ffreep
dec
push
adc
sbb
mov
imul
xchg
cs
inc
(bad)
and
in
adc
addr16
push
add
sub
repz
xchg
cld
gs
xor
lods
loop
gs
cmp
jae
adc
adc
and
aad
jmp
pop
jbe
dec
jns
or
test
lahf
mov
(bad)
cmp
das
mov
nop
sub
sbb
sbb
mov
pusha
sahf
scas
lock
jns
sub
xor
pop
mov
push
mov
adc
mov
mov
lds
rcl
jl
or
fdivr
mov
adc
int
fstp
mov
loop
xchg
or
xor
xor
nop
push
retf
cs
int
dec
dec
cld
lock
adc
ss
sbb
call
inc
mov
test
in
out
xchg
sbb
xor
push
and
outs
sub
cld
cmp
inc
inc
mov
xchg
mov
fwait
mov
fwait
mov
adc
add
adc
mov
ret
push
test
dec
and
fistp
es
jge
test
dec
(bad)
jp
popa
into
cmp
jno
gs
push
and
das
cli
xchg
jno
sub
or
inc
pop
add
cli
jg
xor
into
jbe
add
adc
xchg
call
inc
push
inc
ja
dec
pop
mov
stos
dec
jmp
xchg
inc
mov
aad
data16
mov
retf
mov
fadd
dec
imul
fs
nop
(bad)
pop
or
mov
jb
push
inc
sbb
mov
test
ins
jecxz
sub
sbb
clc
pop
or
hlt
mov
sbb
cmp
js
xor
pusha
sahf
in
pop
int3
mov
pushf
in
loopne
and
repnz
xlat
fstp
and
push
outs
cmp
cs
je
add
jne
mov
loope
push
pop
inc
jo
sqrtps
adc
push
jnp
jmp
call
mov
dec
fidiv
mov
inc
dec
mov
ja
in
mov
push
xchg
jb
and
sahf
and
call
mov
fdivr
add
std
cwde
xlat
push
xchg
leave
or
cli
jnp
loopne
cmc
or
lahf
leave
shl
pop
cwde
mov
aas
mov
cmp
(bad)
ret
ins
mov
xor
call
mov
push
in
mov
mov
mov
pop
push
inc
call
sbb
sbb
mov
or
ret
cmp
cmp
call
sub
dec
cld
xchg
mov
pop
adc
push
mov
jae
xchg
mov
dec
gs
inc
es
mul
call
sub
and
stc
or
xor
(bad)
jnp
iret
cmp
retf
sub
in
jmp
mov
sub
shl
mov
inc
inc
out
push
popa
xchg
aas
xor
xor
(bad)
data16
sbb
neg
repnz
and
jmp
jmp
sub
int3
sbb
push
cld
loopne
out
fdivr
xor
xor
cdq
(bad)
into
sub
loop
das
push
fdiv
int3
pop
and
mov
sbb
(bad)
add
aam
(bad)
or
call
push
and
cmps
push
inc
std
xchg
push
dec
arpl
xor
jge
out
mov
jg
(bad)
xor
out
stos
cmps
(bad)
movs
fwait
out
mov
fs
jge
mov
retf
enter
gs
jl
pop
icebp
enter
mov
mov
push
test
cmp
cmp
icebp
pop
hlt
out
and
movs
jmp
inc
stos
jmp
push
mov
and
movs
xchg
mov
sub
daa
mov
std
mov
xchg
inc
(bad)
lods
mov
push
and
es
jmp
push
es
xchg
sti
dec
jg
jmp
or
shr
bound
aaa
(bad)
icebp
(bad)
mov
add
cmp
pop
mov
cmp
in
mov
dec
jb
lods
xchg
(bad)
xor
aad
rcl
ins
sub
pop
out
lods
punpcklwd
add
fidiv
xor
not
mov
inc
pop
sbb
shl
outs
xchg
pop
fdivr
sub
push
xchg
mov
jmp
test
xchg
out
sbb
cmp
dec
xchg
sub
jmp
rcr
xchg
fld
outs
movs
add
loope
jne
lods
mov
pop
sub
sar
mov
loope
and
push
fmul
scas
push
(bad)
fistp
push
sbb
sub
inc
push
ins
mov
into
pop
inc
push
stos
imul
mov
mov
jmp
dec
sahf
in
imul
ds
movs
xchg
dec
shl
ret
mov
or
std
jmp
mov
bound
xor
fcmovbe
sub
inc
xor
gs
imul
je
jno
out
es
adc
aad
enter
(bad)
jno
dec
in
pushf
fistp
cld
int
mov
ss
adc
stos
dec
das
mov
jns
jae
sti
mov
jb
cmp
jp
aas
cmp
pushw
or
and
icebp
(bad)
xchg
mov
ins
dec
mov
or
and
int3
(bad)
sti
popa
pop
stos
xchg
xchg
push
sbb
mov
dec
pop
movs
jo
add
jg
out
cmps
dec
fcomi
bound
lea
or
push
lds
xchg
pop
push
mov
cdq
dec
rcr
jmp
push
std
add
or
lock
and
call
imul
xor
das
xchg
xchg
mov
outs
mov
add
and
jae
or
aas
call
pop
rcr
fisttp
jp
outs
mov
mov
mov
add
mov
daa
add
(bad)
sti
cmp
jg
stc
mov
mov
addr16
mov
sbb
or
sbb
cli
loope
dec
push
adc
mov
data16
mov
arpl
scas
not
pop
daa
ins
test
sbb
dec
inc
xchg
dec
lds
pop
jnp
jge
sub
imul
dec
cmps
jecxz
xor
pop
in
push
add
mov
jl
or
push
and
inc
mov
dec
ja
mov
out
add
mov
je
lds
xchg
(bad)
sti
cdq
shl
mov
stc
lods
mov
cwde
and
or
and
pop
lds
ret
xchg
add
or
jecxz
adc
push
pop
push
push
mov
pop
imul
inc
cli
loopne
fidivr
movs
imul
or
mov
mov
lds
aas
and
fild
adc
movs
out
fcomp
leave
outs
mov
cmc
jbe
(bad)
jns
imul
fisttp
outs
ja
cli
xor
leave
es
xor
js
inc
xchg
mov
std
imul
mov
fninit
fisubr
pop
neg
loop
inc
pop
jae
cs
dec
jbe
xchg
fadd
aam
int
mov
pop
jle
loopne
jle
cmps
jne
mov
lods
loope
scas
(bad)
xor
mov
sbb
iret
add
jne
cmc
jle
clc
mov
cmp
cmps
dec
mov
imul
cwde
lock
mov
sar
and
pop
adc
xor
sub
shr
xchg
inc
jns
xchg
mov
popf
mov
sbb
lods
icebp
in
push
int
cld
mov
(bad)
sahf
mov
mov
push
imul
push
in
ins
lds
mov
icebp
mov
outs
imul
rol
in
gs
push
iret
mov
adc
pusha
aaa
retf
test
cmp
xchg
mov
cmps
imul
jg
mov
mov
sub
jbe
pop
jo
mov
mov
into
mov
sbb
jmp
or
loopne
sar
shl
xlat
dec
fdivr
(bad)
sub
mov
push
test
mov
adc
cld
mov
mov
inc
jg
cmp
ss
fmul
ja
jb
dec
call
out
adc
pop
fcomp
test
push
adc
leave
sbb
(bad)
mul
cli
push
jl
jge
push
retf
pop
or
push
xor
sar
sub
inc
std
test
add
and
out
xchg
mov
push
or
sub
addr16
push
xor
popf
shl
rcr
outs
xchg
enter
xchg
arpl
rol
and
adc
sub
inc
push
xchg
push
dec
adc
repnz
or
in
mov
lods
sar
mov
std
dec
aas
pushf
sub
mov
jmp
leave
sub
mov
jl
xchg
sbb
xchg
dec
xor
fst
icebp
in
xor
sti
xchg
(bad)
dec
stc
or
pop
(bad)
inc
out
mov
lds
mov
dec
rep
push
int3
(bad)
cmp
addr16
cmp
cmp
mov
pop
mov
sar
sub
sbb
paddd
or
push
outs
or
mov
ret
jmp
outs
and
outs
lods
sub
loop
cmc
movs
jle
or
sub
femms
test
(bad)
mov
movs
loope
pusha
and
scas
push
aam
xor
add
and
enter
sbb
loopne
(bad)
or
psubw
dec
mov
repnz
mov
and
adc
and
adc
lahf
rcl
out
xor
(bad)
push
pop
leave
pop
(bad)
adc
push
cmp
jo
call
fst
inc
inc
xor
dec
nop
lods
sbb
(bad)
jno
fdivr
dec
mov
adc
pushf
cmp
adc
xchg
cdq
sub
stos
cdq
fnsave
hlt
and
and
(bad)
mov
popa
mov
push
(bad)
not
inc
ror
mov
push
jle
pusha
lods
fidiv
pusha
push
rol
pop
jbe
scas
sbb
xchg
add
cli
sub
(bad)
cld
out
(bad)
stc
iret
jg
repz
jmp
lock
mov
cmp
retf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
shl
dec
int
out
sbb
mov
sbb
imul
mov
fisttp
stc
fsubp
add
dec
addr16
les
pop
std
mov
jecxz
cmp
xor
mov
mov
pop
ss
xor
xchg
cmp
not
pusha
sbb
pop
adc
fs
loope
sub
mov
loope
cmp
sub
xchg
in
push
and
cmp
scas
aam
imul
(bad)
mov
sub
sub
mov
ins
rcr
and
repz
lea
inc
mov
jb
into
sub
out
mov
scas
cmp
pop
mov
ss
fisttp
clc
lds
cli
in
xor
cmp
cmc
inc
push
or
movs
popa
test
(bad)
rcl
mov
add
push
leave
sar
adc
sub
xchg
call
(bad)
lods
cmp
popf
push
or
int
loop
mov
out
popa
push
dec
mov
dec
mov
mov
push
sahf
cld
test
mov
pop
test
(bad)
pop
xor
push
ret
adc
cmp
push
lock
add
pop
fadd
iret
pop
jae
adc
aad
adc
pop
sub
cmp
lods
mov
adc
mov
push
jl
in
std
pop
inc
(bad)
xor
sti
mov
sbb
sub
push
pusha
jmp
aad
fisub
pushf
xor
ret
movs
in
lahf
mov
xchg
inc
cwde
jge
cwde
mov
movs
adc
jp
jmp
cld
and
in
sub
daa
rol
popa
sbb
ret
sbb
popf
pop
cmovl
enter
cmp
data16
pop
ins
push
push
ss
jl
mov
dec
xchg
jno
cmps
call
jmp
mov
cmc
pushf
and
sub
mov
jl
retf
mov
mov
(bad)
in
mov
pushf
fbstp
mov
mov
inc
cmps
xchg
in
clc
(bad)
stos
mul
mov
ror
mov
fidivr
pop
leave
jo
pushf
mov
stc
cld
pop
jp
add
pop
(bad)
cmps
fstp
das
in
jecxz
push
jge
adc
mov
xlat
jp
mov
inc
stos
(bad)
jmp
cmps
and
or
ja
push
sbb
xor
or
rcl
adc
sbb
push
mov
push
mov
out
xchg
push
push
push
jo
or
dec
lock
outs
adc
mov
xchg
icebp
sbb
mov
xor
jb
adc
arpl
lds
add
(bad)
rcr
and
out
cmp
movs
fwait
cwde
mov
lods
mov
sti
scas
cmps
cs
push
outs
and
in
mov
movzx
pop
aad
(bad)
push
imul
pop
sbb
lods
ja
das
xchg
icebp
cmp
sub
mov
popa
stos
fst
push
mov
cmp
mov
sub
aaa
test
dec
nop
sub
and
dec
ja
popa
pop
push
sbb
jnp
idiv
outs
cld
pop
test
push
jno
sub
pusha
cmp
push
lods
sbb
cmp
mov
pushf
pop
push
ins
das
out
inc
ss
sbb
out
xchg
xlat
ror
inc
test
pop
outs
lock
mov
xchg
jl
and
lds
sbb
push
or
ret
rcr
cmps
jmp
bound
mov
mov
test
jecxz
leave
mov
or
fs
fcmovnb
or
das
jno
and
xchg
enter
test
mov
scas
xor
push
jecxz
push
or
out
mov
fwait
or
lods
pop
hlt
xor
mov
daa
push
fld
xor
dec
jle
xchg
js
retf
jle
(bad)
(bad)
sbb
mov
add
test
inc
mov
mov
jecxz
cdq
mov
(bad)
in
ja
cmp
iret
out
mov
xchg
mov
push
sub
stos
push
cs
(bad)
pop
scas
pop
fbld
inc
fld
sbb
ja
mov
shr
mov
or
call
adc
dec
or
mov
mov
xor
fldln2
jmp
mov
cdq
sar
mov
mov
test
fsubr
shl
je
scas
mov
xor
addr16
hlt
pop
sub
push
test
inc
pop
retf
xor
push
xchg
outs
imul
jge
dec
mov
sahf
or
int
jmp
daa
gs
sbb
stos
mov
dec
nop
pop
pop
pusha
daa
jle
xchg
lods
popa
retf
cmp
jno
xchg
je
repnz
push
cmp
jmp
sub
adc
inc
push
jno
dec
idiv
and
int
aad
aas
lods
popf
ds
int
outs
sbb
repnz
mov
jecxz
out
or
dec
stos
lea
or
ds
inc
xor
pop
and
daa
call
nop
push
movs
jnp
push
sbb
test
cld
push
fldenv
add
jp
dec
test
movs
std
jns
mov
mov
adc
mov
aas
or
clc
test
add
(bad)
sar
cmps
add
dec
mov
(bad)
out
add
jp
mov
xor
jle
ja
nop
mov
stos
xchg
push
inc
mov
add
ja
dec
scas
or
and
retf
retf
pop
xchg
cwde
lea
(bad)
cwde
outs
int3
lock
repz
and
push
mov
xchg
mov
pop
es
or
sub
inc
or
push
pop
nop
in
xor
xchg
and
mov
retf
jp
mov
xor
mov
mov
clc
dec
adc
jmp
inc
rcr
retf
push
ins
cmp
dec
mul
xchg
lock
movs
inc
test
adc
leave
sub
jmp
mov
mov
fist
test
in
mov
mov
mov
ret
mov
and
shr
or
sbb
xchg
outs
or
add
enter
stc
test
dec
mov
cs
dec
and
add
(bad)
inc
sbb
add
aad
test
in
inc
cmovne
add
adc
je
xchg
pushf
mov
mov
push
xchg
adc
push
or
push
lahf
pusha
sub
test
sub
ror
leave
cmp
jnp
sub
push
icebp
pop
and
(bad)
popa
pop
adc
push
test
lods
std
das
bound
jecxz
int3
mov
inc
mov
stos
xor
push
adc
adc
xor
adc
mov
clc
mov
xor
mov
pop
mov
or
std
jb
sbb
pop
or
sub
adc
sahf
dec
push
xor
fsubr
out
mov
jnp
sahf
sub
clc
mov
xchg
and
cdq
or
cli
stos
add
dec
stc
jl
call
pop
jbe
inc
cdq
cld
mov
sbb
clc
push
inc
adc
xor
jne
sbb
imul
xor
mov
dec
dec
xchg
stos
mov
and
rcl
cmp
ins
ja
pcmpeqb
jo
fwait
push
retf
call
cmps
adc
scas
add
cmp
lods
push
cmp
sbb
or
jmp
and
sub
nop
cmp
mov
ja
cmp
pop
mov
xor
in
jg
fcomp
sub
or
cmp
mov
(bad)
(bad)
mov
and
ret
test
push
pop
pop
jge
push
mov
dec
inc
mov
xor
in
(bad)
jo
movs
out
cmc
lea
mov
or
test
sbb
xor
xlat
popa
xchg
xor
xor
sub
es
and
sahf
xchg
sbb
sbb
xchg
stos
(bad)
jbe
push
xchg
repnz
(bad)
pop
movs
push
sub
jmp
mov
cmp
aad
push
leave
aaa
jge
icebp
mov
add
jle
sbb
enter
pushf
movs
sub
aad
test
cwde
scas
and
bound
dec
jge
mov
mov
std
clc
sbb
xchg
loop
xor
ret
mov
mov
out
jle
add
hlt
adc
popf
dec
ja
sbb
(bad)
xor
inc
es
jbe
imul
imul
outs
iret
gs
mov
add
mov
lock
sbb
dec
call
fiadd
shl
pop
xchg
inc
cli
lahf
cli
sahf
mov
cmps
cmps
jae
lds
pusha
jne
sub
cmp
out
or
pop
icebp
pop
mov
retf
add
aas
retf
mov
and
fnstsw
test
shl
push
inc
cli
nop
dec
in
mov
test
sbb
call
fucomip
dec
outs
sub
cwde
or
pusha
adc
add
jecxz
int
inc
pop
into
xor
fldenv
pop
push
mov
inc
test
mov
fild
xchg
sub
mov
mov
jbe
mov
nop
push
dec
(bad)
or
dec
sub
mov
mov
push
fld
add
arpl
sahf
or
push
add
jecxz
and
jmp
jmp
jae
call
ret
pop
aad
pop
out
out
mov
push
pop
pop
retf
sbb
ja
push
fs
mov
aaa
dec
xor
adc
in
(bad)
lods
nop
div
cmp
jp
and
jp
(bad)
dec
pop
fcomp
(bad)
fcomi
jae
xchg
retf
pop
add
mov
mov
leave
mov
scas
adc
rol
mov
cmp
ret
push
movs
lahf
cmp
(bad)
jnp
jp
fcomp
stc
mov
pop
fiadd
sbb
out
fld
mul
mov
fimul
sbb
mov
sbb
icebp
xchg
mov
aam
hlt
jmp
and
movs
or
dec
sbb
sbb
(bad)
and
push
stos
fcom
fwait
int3
sar
pop
out
mov
repnz
dec
mov
jg
push
mov
sub
cmp
scas
dec
sub
adc
adc
inc
cwde
fmul
(bad)
jo
loope
cmp
mov
push
push
in
mov
addr16
dec
fbld
loop
push
jns
mov
outs
fucomp
inc
out
(bad)
pop
push
loope
(bad)
dec
sar
mov
inc
mov
jnp
sub
inc
faddp
jmp
mov
cmc
push
scas
inc
loop
leave
mov
cmps
xor
int3
pop
fimul
mov
cmps
jge
mov
gs
mov
and
xchg
(bad)
das
loop
cmp
fwait
dec
cmp
inc
sub
(bad)
fild
cmp
inc
test
or
pop
lods
pop
cs
or
push
mov
adc
xchg
rcr
xor
cmc
div
mov
add
fnstsw
(bad)
dec
add
fld
daa
cdq
sub
retf
out
fidiv
in
pushf
das
lea
mov
in
lods
xchg
adc
cmp
scas
cdq
xor
pop
mov
xchg
dec
test
mov
(bad)
imul
add
mov
add
popf
and
mov
or
cmp
enter
or
mov
adc
arpl
push
in
outs
test
pop
mov
bound
ror
test
test
mov
bnd
cmp
cmp
dec
adc
clc
dec
mov
push
js
adc
data16
cmp
mov
es
out
mov
jb
xchg
add
shl
mov
mov
aam
push
daa
xor
aaa
push
lock
pusha
mov
cmp
mov
daa
std
clc
(bad)
out
xor
inc
or
pushf
cmp
aas
push
popf
sti
hlt
jns
jae
mov
(bad)
adc
push
mov
mov
or
mov
lods
ror
in
icebp
enter
lahf
xor
fbstp
sti
(bad)
frstor
sbb
loop
cmp
lods
jb
or
std
loop
in
push
test
inc
jecxz
ror
sub
jmp
dec
call
sbb
dec
jb
shl
movs
or
fmulp
repz
mov
(bad)
fnstsw
scas
mov
jne
loope
mov
mov
push
retf
dec
and
aas
scas
add
outs
addr16
dec
cli
or
jbe
and
xor
or
das
or
popf
dec
dec
push
rcl
pusha
xor
aad
push
jo
cmp
sub
not
pusha
ss
jb
push
add
mov
push
jo
sbb
retf
out
xchg
fld
sbb
repnz
mov
pop
cs
out
mov
add
xor
retf
mov
nop
jnp
xchg
loope
jb
js
dec
das
adc
push
adc
mov
sti
xlat
and
jmp
lods
push
out
lea
int
dec
adc
xchg
mov
or
mov
sbb
push
lahf
lock
sub
shl
scas
jbe
pop
sbb
jle
pop
out
(bad)
pop
call
push
stos
call
adc
lea
mov
dec
push
fld
xchg
clc
dec
addr16
dec
dec
out
popf
adc
in
cmps
pop
cmp
push
sub
aaa
adc
inc
sub
sbb
loope
jg
nop
je
and
sub
das
push
icebp
mov
jg
test
js
jge
les
add
or
es
jbe
int3
push
int
sub
ins
dec
ds
jg
ss
jns
les
mov
mov
je
or
rol
push
mov
mov
add
sahf
pop
aas
xchg
xor
in
and
jecxz
pop
cli
and
or
cmp
adc
inc
mov
push
icebp
ror
scas
in
and
xor
cmp
scas
mov
sbb
cmps
mov
imul
cwde
loop
mov
jge
sbb
jbe
in
push
arpl
out
sbb
call
idiv
add
cld
fst
lahf
fimul
mov
sbb
mov
lea
push
pop
shl
(bad)
xchg
add
pushf
mov
sbb
loope
jo
stos
cmps
sar
xor
ret
cmp
inc
jge
loope
pop
popa
push
test
mov
(bad)
dec
jnp
aas
mov
pop
rcr
popf
adc
dec
xchg
add
or
addr16
cli
das
pop
lods
ret
inc
fs
or
fsub
push
into
(bad)
mov
shl
sub
test
xchg
mov
int3
sub
(bad)
mov
imul
and
neg
push
jecxz
cld
xchg
xor
(bad)
pop
xchg
sbb
out
xchg
mov
enter
mov
sub
aas
repnz
repz
mov
sbb
mov
jo
mov
xchg
loop
outs
sahf
and
in
mov
sbb
lahf
pop
out
mov
pop
or
ret
dec
xchg
daa
call
(bad)
outs
sbb
rol
add
xor
stos
stos
adc
sub
sbb
or
nop
mov
(bad)
jns
jecxz
sub
mov
(bad)
ss
(bad)
jmp
shl
dec
loop
pop
add
(bad)
fsub
nop
shl
shr
movs
test
cwde
push
aad
cmp
das
xchg
jle
sub
div
int3
sbb
pusha
and
mov
stc
loopne
(bad)
pusha
adc
dec
mov
addps
xor
xchg
and
inc
xchg
mov
sbb
mov
inc
sbb
std
cli
cmp
dec
mov
pop
(bad)
cmp
xor
stos
cmps
nop
idiv
aam
cmps
pop
cs
ficomp
rol
cdq
adc
mov
push
xor
sub
fwait
sub
test
inc
rcr
leave
movs
sub
jbe
into
(bad)
fstp
mov
xor
cmp
mov
sbb
mov
dec
in
sahf
int
sbb
pop
pop
jne
inc
mov
xor
push
sbb
out
push
cmp
les
into
cmp
jmp
loopne
(bad)
stc
iret
jg
repz
(bad)
cld
out
sbb
lock
stc
jne
adc
ret
in
outs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
aaa
in
xor
sar
int
aas
cmps
cmps
jmp
(bad)
sbb
int
je
outs
rcr
cmps
arpl
dec
aaa
xor
sbb
cmp
inc
cld
std
add
loopne
movs
cmp
(bad)
popf
xor
push
ror
das
leave
out
dec
fnstsw
mov
mov
test
ret
pop
xchg
push
stos
adc
das
enter
cdq
pop
repnz
out
mov
mov
add
outs
in
dec
dec
jp
cmps
cwde
or
jecxz
sub
xor
push
inc
fst
xor
ret
cmp
mov
stos
icebp
lahf
mov
retf
xchg
jg
loop
xchg
push
arpl
scas
pop
in
(bad)
pop
and
mov
xor
or
mov
xchg
dec
dec
push
add
sbb
(bad)
mov
scas
mov
jae
sbb
(bad)
jne
stos
call
fimul
push
enter
mov
jns
dec
sbb
fstp
dec
sbb
test
sti
aad
dec
and
shl
sub
inc
int3
push
sahf
call
int3
mov
mov
pop
aam
jns
dec
faddp
push
data16
push
lds
pusha
cmp
stos
cmc
call
imul
test
mov
fdiv
nop
dec
fimul
into
sub
test
int
or
cmp
jo
xchg
in
jp
popf
sbb
jb
(bad)
clc
imul
and
mov
mov
loope
jbe
pop
jl
shl
loop
es
xchg
and
div
or
sub
int
in
fild
imul
jg
(bad)
jne
cmps
in
and
pushf
pop
jmp
mov
adc
je
outs
xchg
push
mov
and
jp
inc
mov
clc
imul
mov
int
xor
mov
xchg
push
lea
jne
cld
hlt
sub
jl
and
mov
in
ins
ret
sahf
bound
pop
lods
(bad)
in
push
sti
lahf
mov
iret
push
rcl
jnp
fwait
mov
push
mov
fwait
test
stc
in
or
add
mov
push
xlat
enter
inc
sub
stc
(bad)
cmp
sub
test
inc
(bad)
ins
sub
loop
loop
loop
inc
das
jb
inc
mov
call
(bad)
mov
or
into
dec
xchg
or
cmp
lods
adc
mov
scas
jge
cdq
or
xchg
cmp
xchg
aas
sub
imul
xor
lock
or
xor
mov
mov
mov
lock
push
sbb
pop
fs
jecxz
cmp
in
mov
pusha
sbb
sbb
xor
cmps
in
push
or
mov
js
mov
xchg
pop
or
dec
call
sub
mov
out
xchg
adc
and
mov
xchg
pop
ret
arpl
pop
aaa
mov
pop
scas
xchg
rol
div
pop
cmp
cmp
push
test
xchg
mov
pop
das
pop
jecxz
xchg
or
jno
pop
imul
pop
imul
ror
stos
or
popa
cmc
call
test
call
mov
jg
fnstsw
mov
jg
ret
sbb
xchg
add
and
mov
in
mov
or
dec
sbb
int
jb
pop
scas
mov
loopne
pop
mov
out
xor
(bad)
inc
daa
mov
add
or
mov
and
jae
aas
add
lods
(bad)
js
mov
or
test
inc
out
add
lods
lahf
sti
cmp
add
pop
mov
and
imul
xor
or
(bad)
mov
es
jge
aas
push
dec
out
std
popa
out
in
aas
scas
rol
sub
sbb
out
mov
mov
pop
mov
cdq
mov
cmps
(bad)
jle
inc
sbb
adc
(bad)
imul
xor
adc
dec
mov
xlat
adc
and
mov
idiv
out
fsubr
daa
fldl2e
movs
mov
fbstp
gs
movs
cmp
pusha
pop
out
fs
jg
jb
rcl
(bad)
cmp
sbb
fisttp
dec
lock
and
push
push
adc
cmp
pop
imul
aad
gs
movs
cdq
inc
pop
pop
mov
dec
(bad)
pop
ja
mov
jne
inc
and
push
fs
int3
xchg
pop
pop
mov
add
lahf
aas
stc
mov
or
popf
(bad)
hlt
in
ret
fadd
in
cmp
addr16
xor
xor
outs
add
int
pop
cld
loope
xor
sub
xchg
gs
xchg
or
jle
arpl
fstp
sti
pushf
xor
in
out
(bad)
mov
std
cmp
mov
in
xor
outs
cld
lahf
mov
inc
int
inc
shl
je
test
fild
sub
jge
mov
mov
retf
cmp
leave
popf
push
inc
mov
aad
adc
adc
stos
adc
jbe
xchg
int3
adc
push
or
mov
and
sub
push
test
cli
push
lds
mov
cmps
mov
jl
hlt
mov
int3
fwait
mov
test
mov
push
or
bound
mov
gs
xchg
jmp
jne
mov
cmp
mov
jge
and
or
sti
cs
aad
leave
fcmovb
ror
mov
adc
push
scas
out
fs
ss
lock
je
jmp
pop
mov
or
mov
mov
mov
push
add
fstp
dec
(bad)
or
adc
jbe
jmp
(bad)
rcr
add
ret
and
mov
add
fnstsw
int
or
and
in
fild
mov
add
(bad)
nop
(bad)
push
mov
mov
dec
jmp
in
mov
sbb
scas
mov
mov
stc
loope
cwde
js
mov
adc
mov
push
bound
dec
sahf
retf
xor
cli
les
lods
and
out
sar
sbb
stc
mov
retf
test
mov
leave
push
jae
fxam
shl
cmps
sti
pop
or
sbb
call
xor
jecxz
or
and
fistp
inc
jb
es
out
jmp
loopne
test
repz
push
mov
or
jo
jae
outs
jns
dec
pop
in
mov
or
or
dec
jl
jne
sub
cmp
jmp
cmp
and
and
fadd
inc
or
mov
aaa
mov
in
cmp
test
(bad)
jmp
cmp
sub
adc
in
adc
pop
cmp
retf
cs
and
imul
out
inc
popa
clc
loope
(bad)
ret
dec
cmc
and
and
xor
xor
test
movs
inc
mov
xchg
les
aad
(bad)
mov
adc
in
data16
ja
aas
call
or
call
aas
mov
test
call
mov
add
and
arpl
add
lea
retf
iret
jo
stc
push
mov
jmp
test
jo
aam
or
les
addr16
or
inc
sub
sbb
dec
xchg
in
cmps
cwde
fwait
test
mov
mov
mov
xor
hlt
ins
mov
sub
dec
mov
sti
adc
push
pushf
xor
mov
xlat
pop
dec
mov
mov
add
sahf
and
xchg
retf
pushf
inc
jmp
aaa
faddp
sbb
mov
adc
bound
mov
or
sar
stc
push
lods
push
dec
or
ja
stc
js
addr16
(bad)
sbb
imul
loop
xchg
aas
outs
out
cwde
pop
pop
jl
mov
jle
adc
dec
leave
adc
push
daa
retf
scas
push
inc
aas
xchg
hlt
mov
outs
les
mov
cli
mov
call
xchg
aam
inc
pop
or
mov
pop
sub
test
sahf
movs
xchg
adc
jo
mov
or
outs
enter
aam
xchg
aam
test
xchg
jns
std
mov
cmps
ror
fst
aaa
push
cld
in
cmp
mov
and
jp
pop
lods
jle
daa
mov
xor
mov
popf
push
pop
dec
sbb
jge
mov
jnp
adc
gs
in
sbb
fdiv
mov
fstp
inc
cmp
push
cdq
cmpxchg
cmps
mov
inc
xor
and
(bad)
std
ss
gs
pop
mov
inc
dec
lods
es
inc
ins
pusha
outs
mov
rcr
(bad)
sbb
jne
loop
xor
jnp
cmp
cmp
push
mov
ss
sub
xchg
pop
cwde
pop
sbb
enter
sbb
cmp
out
out
out
stc
adc
outs
mov
and
iret
dec
sbb
repz
ret
jmp
mov
enter
pop
call
jl
mov
xor
hlt
popf
jp
cmp
cmp
ins
sbb
mov
sub
nop
shr
sub
cs
cs
sbb
shr
pop
cmp
xor
aaa
stc
pusha
mov
stos
jmp
cld
xor
jle
jb
sbb
jne
sub
mov
mov
ins
shl
shl
mov
(bad)
stos
loopne
sbb
outs
mov
push
outs
jp
sar
scas
mov
pushf
mov
fucomi
inc
mov
xor
add
not
dec
jp
cmc
push
rcl
loope
xchg
cmp
retf
sbb
sub
dec
push
cmp
dec
fisttp
push
xor
pop
or
(bad)
loop
mov
inc
jnp
dec
push
data16
fld
jmp
ret
mov
mov
lods
fmul
nop
nop
loop
repnz
out
push
mov
aas
add
cmc
push
sbb
sub
repz
arpl
loopne
xchg
xchg
call
fwait
jmp
add
mov
jecxz
jmp
mov
push
in
scas
hlt
or
adc
sub
inc
xor
test
adc
ins
fucomp
fcmovu
movs
sbb
push
out
repnz
push
test
mov
rcr
xchg
cmp
cmp
aas
rcr
mov
xor
inc
adc
cmps
(bad)
push
jecxz
aam
push
or
and
xor
jecxz
pop
scas
sbb
out
add
adc
int
jae
cli
inc
sbb
ins
pop
inc
popf
xor
inc
mov
dec
adc
repnz
and
es
inc
leave
pusha
out
and
aam
daa
jecxz
arpl
dec
xor
aad
dec
arpl
(bad)
dec
out
dec
dec
dec
push
sar
ror
mov
adc
push
mov
push
pop
sahf
fbstp
ja
push
push
out
xor
mov
das
cmp
sbb
cdq
pop
or
fnsave
jle
div
leave
add
loopne
fld
and
retf
pop
or
pop
cmp
mov
in
loope
shr
fwait
sub
dec
push
xchg
dec
movs
inc
adc
sub
stc
imul
mov
pop
in
enter
in
cmps
sub
fs
fwait
call
movs
pop
xlat
leave
sar
mov
mov
mov
pop
rol
push
popa
sti
jmp
gs
jge
sub
and
jae
xchg
fs
sub
jnp
add
jle
cmp
cmp
sti
icebp
fwait
dec
push
jge
mov
sub
mov
xchg
lahf
mov
aam
dec
clc
fild
ja
inc
in
sub
lods
pushf
data16
adc
(bad)
out
xlat
mov
xlat
push
push
repz
push
scas
xor
adc
dec
outs
mov
ret
xor
add
in
call
sub
loope
(bad)
popf
jb
sar
ret
fild
pop
mov
pop
test
pop
(bad)
pushf
loopne
pop
test
out
sub
dec
int
in
cmp
addr16
mov
leave
or
sub
or
push
inc
sub
mov
push
repnz
dec
dec
mov
push
add
or
jb
bound
cli
not
push
adc
sub
clc
adc
in
cmc
sar
std
es
sbb
xchg
or
inc
mov
xor
adc
adc
les
sub
icebp
mov
mov
mov
hlt
inc
and
jne
leave
inc
fist
cmp
mov
xchg
push
cmp
(bad)
popw
in
and
shl
mov
movs
adc
push
xor
in
jg
les
scas
mov
mov
ins
out
xor
pop
test
sbb
adc
mov
sub
push
or
mov
cmps
repz
xchg
fsubr
sbb
scas
mov
mov
xor
aam
cmps
dec
out
out
dec
sub
cmps
std
jns
out
jno
rcl
(bad)
es
pushf
jg
test
or
mov
inc
mov
mov
cs
jo
push
in
add
and
or
jbe
in
cs
sbb
cmp
xlat
int
jne
neg
mov
nop
or
ret
pushf
pop
ds
inc
dec
imul
xchg
test
stos
xlat
xor
mov
aam
stos
add
pop
mov
sub
cmps
nop
inc
adc
xor
jno
lahf
or
push
ins
xor
and
shl
jns
dec
pop
dec
xchg
les
addr16
push
dec
lods
dec
push
sbb
out
jmp
dec
fiadd
sti
shl
mov
imul
fild
fcomi
int
imul
aas
inc
push
test
cmp
adc
pop
add
lds
jno
adc
ss
cmc
mov
jne
icebp
inc
pop
or
cmp
test
daa
loopne
les
popa
cwde
in
mov
mov
mov
mov
icebp
je
mov
or
push
outs
(bad)
jne
xor
mov
mov
add
ss
pop
aaa
pop
cmp
xchg
int
lods
into
lods
les
push
push
or
cs
add
xchg
mov
call
daa
mov
add
push
xchg
mov
lock
mov
inc
inc
sub
and
add
test
dec
xor
xor
xor
mov
xor
mov
sub
add
inc
or
and
fimul
nop
lods
xor
mov
cmp
adc
cmps
loope
mov
mov
es
or
pop
pop
xchg
pop
lea
inc
mov
cwde
lods
neg
mov
iret
push
popf
jl
mov
leave
(bad)
jns
adc
jl
or
stos
sti
pop
push
aas
sub
xor
loopne
not
out
cmp
fimul
jne
push
cmps
jns
pop
xchg
retf
out
les
js
nop
jmp
mov
bound
xor
ss
cli
push
push
mov
retf
push
out
aas
les
mov
dec
dec
popa
or
mov
jle
test
xor
jle
ret
fmul
jl
cmp
lods
inc
mov
pop
adc
sbb
jmp
in
(bad)
jmp
out
or
dec
fisub
stos
je
and
test
jnp
add
and
hlt
jo
stc
push
je
inc
call
adc
cmp
(bad)
into
aaa
mov
mov
and
in
inc
dec
pop
mov
adc
sahf
sub
xor
imul
test
ss
push
pop
cmp
mov
sub
inc
rcl
imul
repnz
lods
aam
scas
test
clc
pop
inc
push
push
iret
xlat
add
repz
dec
ss
cmp
adc
jo
xchg
fisubr
ins
pop
sub
out
dec
loop
mov
in
add
xchg
sbb
dec
mov
fld
mov
bound
(bad)
stc
out
jg
stc
out
jg
scas
add
inc
push
sub
(bad)
out
not
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
inc
adc
add
and
dec
aaa
and
mov
call
and
cmp
mov
add
xchg
(bad)
out
jnp
iret
dec
sbb
xor
push
push
adc
in
std
pop
(bad)
popf
xor
cmps
xlat
imul
sbb
dec
xchg
and
push
imul
cmp
popf
in
mov
out
scas
mov
or
pop
mov
sahf
mov
imul
jg
add
dec
dec
xor
lods
add
mov
test
lods
stc
lahf
pop
pop
xor
out
add
shl
sbb
jl
pop
(bad)
fwait
sub
into
xor
xor
mov
sar
xchg
out
sbb
mov
mov
mov
xchg
inc
jmp
stc
aam
cmp
or
hlt
iret
mov
cmp
pop
or
hlt
add
sbb
gs
aam
in
push
enter
dec
call
xor
pushf
ret
or
cdq
mov
pop
jge
pop
inc
outs
xor
mov
mov
mov
mov
jp
stos
and
sbb
mov
call
adc
mov
fwait
jmp
sub
rol
pop
jl
arpl
js
jge
call
push
adc
xor
cmp
mov
lea
das
sub
(bad)
or
sub
jle
sub
adc
pop
dec
xchg
std
test
push
xchg
xchg
push
jmp
and
sbb
call
cmp
stc
call
popa
popf
or
aaa
pop
and
retf
cmps
mov
mov
enter
popf
cmp
mov
les
rcr
pusha
das
inc
jb
cwde
add
pop
add
fcmovu
inc
mov
stos
bound
test
mov
(bad)
sbb
mov
push
inc
cmps
adc
jmp
data16
inc
push
and
push
push
dec
stos
cmps
sub
sti
xchg
mov
mov
mov
jmp
sbb
popa
mov
mov
push
test
mov
jg
or
jecxz
mov
fcom
sub
loope
jecxz
test
xor
clc
push
jne
add
cmp
test
sti
ret
mov
push
dec
dec
jle
mov
imul
(bad)
clc
dec
mov
inc
jmp
adc
and
and
mov
fisub
adc
jns
pop
(bad)
scas
mov
add
pop
ins
cli
and
xchg
inc
push
ret
sti
fsubr
out
sub
retf
dec
jo
outs
std
push
xchg
jbe
popf
and
fistp
cmps
in
xor
sub
xchg
int3
sbb
mov
sbb
xlat
addr16
mov
inc
and
push
aad
dec
fnsave
mov
sbb
add
sbb
fdiv
std
repz
test
pop
cmc
in
sub
in
cmps
and
push
gs
jle
push
push
sub
inc
cmp
imul
jg
or
xor
adc
push
arpl
dec
test
or
imul
fcom
pop
ss
lea
push
hlt
inc
adc
pop
out
ffreep
mov
or
addr16
add
push
jbe
cmp
xchg
pop
mov
(bad)
jmp
fstp
xchg
pop
mov
cmps
add
call
pop
or
call
es
pop
shr
mov
ds
arpl
jns
int
lds
je
mov
je
popf
or
sar
adc
enter
pop
add
sub
and
mov
xchg
icebp
mov
jle
mov
cmps
cmp
mov
scas
mov
ds
daa
gs
dec
or
cmps
xchg
call
nop
inc
clc
mov
mov
dec
test
imul
shl
cwde
mov
xchg
jo
sbb
iret
(bad)
adc
cwde
mov
lods
pushf
pop
pop
inc
dec
sbb
push
test
add
fdecstp
nop
xor
add
adc
mov
jmp
pop
jl
call
add
pop
sub
xchg
lock
xor
lods
cs
xor
sub
movs
or
iret
ja
sbb
inc
xchg
inc
add
(bad)
scas
dec
push
dec
aad
jbe
inc
test
adc
add
js
daa
push
les
push
into
popf
inc
and
ins
ja
mov
ja
xor
mov
repnz
jae
mov
cmp
push
xor
mov
jg
mov
push
push
les
push
out
sub
daa
sbb
(bad)
cli
xchg
retf
les
adc
(bad)
stos
jle
mov
inc
mov
jg
pop
movs
and
scas
mov
stos
inc
out
push
js
adc
xchg
jl
fcom
fwait
mov
lock
lods
lock
dec
test
stos
mov
mov
hlt
call
inc
xor
call
dec
dec
inc
cmp
ror
jno
(bad)
shl
mov
in
add
xor
xor
into
cli
repnz
jecxz
int
inc
loopne
pop
pusha
sbb
pop
sti
pop
shl
shl
repz
add
movs
sar
jnp
and
sbb
dec
adc
mov
or
(bad)
and
jns
add
cli
inc
xchg
inc
xchg
cmp
push
adc
retf
stc
popf
call
cmc
pop
std
xor
adc
inc
(bad)
pusha
sub
xor
ja
dec
cld
dec
ret
jl
sbb
cmc
mov
ds
int
ret
mov
jge
mov
cmps
dec
fdivrp
cmps
mov
loopne
push
mov
jmp
dec
cmp
xchg
pop
xchg
jno
les
xchg
jle
dec
sti
cdq
cs
lods
div
rcl
imul
fisub
aaa
push
jge
sbb
pop
out
mov
int
fstp
movs
mov
xor
inc
fnsave
xor
fmul
pop
add
mov
idiv
jg
sbb
movs
push
sahf
imul
lods
es
mov
inc
push
icebp
out
mov
xlat
(bad)
jae
dec
ficomp
cmp
out
mov
lds
add
loop
adc
leave
loope
jp
jns
inc
test
(bad)
and
fistp
shl
xor
fdiv
xchg
js
or
dec
test
mov
movs
cmp
sub
retf
adc
pop
jge
sub
rcr
cmps
pusha
dec
ret
fisub
nop
daa
mov
or
lods
shl
out
jnp
pop
pop
cmps
and
pop
cmps
pop
arpl
mov
leave
xchg
push
or
pop
dec
mov
jno
push
sub
pop
xchg
xchg
aam
pop
add
addr16
mov
cmp
mov
add
sub
push
fwait
or
inc
rcr
fnstenv
dec
mov
jle
outs
inc
(bad)
loopne
out
ins
jo
xor
and
iret
arpl
dec
sub
xchg
int
push
adc
out
jae
xchg
xchg
sub
pusha
cdq
gs
mov
mov
pop
xchg
inc
push
cwde
mov
movs
shr
test
inc
aad
jne
add
mov
imul
jbe
and
cli
jnp
mul
outs
cmps
popf
or
mov
cmp
leave
or
bound
dec
(bad)
lods
mov
add
or
cmp
fisttp
test
or
(bad)
ins
adc
mov
add
dec
ins
inc
jae
mov
aaa
shl
iret
scas
mov
dec
and
enter
pop
ds
jl
ret
xor
(bad)
jmp
add
gs
fbld
push
pmullw
push
cmp
fistp
iret
gs
cmp
into
cld
loop
test
mov
push
jmp
fwait
dec
cmc
outs
sbb
xor
sbb
push
(bad)
in
popa
lea
mov
cld
nop
stos
add
stc
add
(bad)
and
fwait
pop
xor
(bad)
ss
inc
rcl
xchg
(bad)
cmp
jb
aad
xchg
ss
dec
adc
test
sbb
jb
dec
or
into
ins
stc
push
test
jb
sbb
push
test
mov
bound
test
enter
mov
loopne
test
or
aaa
xchg
rcl
es
and
jmp
sbb
xchg
cmp
(bad)
iret
adc
adc
shr
movs
push
gs
adc
out
mov
(bad)
fist
jl
push
pop
movs
or
push
ret
popa
or
mov
jge
xacquire
jp
sub
inc
jno
icebp
cld
enter
cwde
sbb
or
ror
fwait
int3
repnz
sub
pop
iret
sub
inc
ret
sub
pop
sti
in
sub
lods
mov
or
jp
jmp
mov
add
cmp
sub
cmps
ffree
mov
mov
and
mov
and
mov
dec
adc
sub
add
jb
mov
mov
lea
push
cmp
lods
jae
adc
loop
stc
repnz
daa
add
adc
das
cmp
(bad)
jle
(bad)
adc
cs
cwde
sar
clc
mov
or
movs
push
add
or
dec
pop
sbb
push
adc
add
xor
fdivr
cmp
loopne
xor
aaa
xor
mov
jmp
mov
xchg
clc
out
adc
les
xchg
inc
push
or
dec
(bad)
test
sub
mov
fidiv
sub
aas
ins
into
mov
fwait
dec
cmp
add
mov
movs
mov
repz
test
xchg
push
push
inc
in
pushf
inc
add
lahf
pop
cmc
push
inc
and
jne
popa
add
sbb
push
ins
scas
mov
mov
out
mov
inc
das
push
icebp
cmps
xor
pop
mov
jb
push
pop
hlt
mov
mov
push
aam
js
movs
je
and
cmp
and
mov
lds
les
movs
and
fnstenv
lea
mov
sti
jmp
xchg
div
xchg
rol
jne
dec
icebp
inc
or
push
test
jmp
dec
fwait
dec
cmp
adc
stos
cmp
pop
mov
mov
adc
jge
sar
dec
imul
mov
ror
leave
rcl
push
add
ja
inc
rol
cmp
adc
sub
div
arpl
pushfw
xchg
pop
mov
repnz
aad
mov
popa
(bad)
push
scas
into
or
aam
push
mov
inc
out
sbb
adc
into
inc
add
push
inc
sbb
xor
repz
push
scas
jge
fsub
mov
aas
jmp
pop
cmp
daa
mov
test
mov
push
jecxz
(bad)
outs
inc
sub
in
lds
dec
pop
pop
mov
mov
ds
movs
hlt
dec
adc
(bad)
repz
shr
outs
(bad)
retf
outs
pop
push
outs
or
dec
add
(bad)
lock
mov
jecxz
lahf
popa
sbb
push
jns
jne
sbb
pop
xchg
and
stc
inc
mov
sub
pop
jg
seta
xlat
pushf
sub
pop
mov
test
cmp
xor
mov
mov
dec
mov
outs
mov
jae
push
xchg
cs
sub
xor
push
sub
xlat
mov
movs
xlat
into
jle
lea
mov
ss
fistp
rol
les
out
jg
dec
inc
sub
xor
jmp
dec
xchg
mov
lahf
fnstcw
inc
push
repnz
loop
(bad)
sahf
int
jb
cmp
out
movs
repz
rcr
loopne
mov
repnz
mov
ret
dec
ffreep
add
add
adc
test
add
dec
add
int
and
jge
aas
fwait
mov
adc
and
out
or
repz
xchg
jmp
or
gs
inc
icebp
jns
leave
sub
std
and
cwde
popf
or
fwait
pushf
dec
sbb
cs
xchg
cwde
mov
fisubr
neg
mov
aam
ja
mov
xchg
cmps
jbe
das
xchg
adc
out
out
dec
fstp
outs
xchg
push
in
or
dec
mov
inc
xor
dec
and
xchg
jle
inc
inc
mov
cmp
add
ins
jmp
push
fwait
push
(bad)
call
mov
cmps
out
dec
out
jne
sbb
cdq
outs
adc
outs
cmc
sub
xor
pusha
sub
mov
jg
scas
jmp
mov
(bad)
push
push
es
inc
and
mov
add
loop
mov
sub
mov
dec
dec
dec
sbb
retf
jae
rcr
cmps
enter
pop
push
in
sbb
arpl
push
in
mov
lods
shl
jge
inc
xor
leave
mov
push
lods
(bad)
sub
cmp
ss
jmp
add
ror
jns
pop
or
bound
bndldx
in
xor
sub
mov
(bad)
test
rcr
in
or
mov
(bad)
jo
push
inc
test
mov
or
shr
mov
mov
jecxz
sub
popf
and
push
xor
mov
cmps
enter
add
cmp
cmc
cmps
shl
fwait
dec
out
jmp
cmp
retf
out
sub
push
mov
adc
jmp
mov
iret
sbb
push
sub
mov
jb
mov
mov
dec
mul
mov
popa
pop
jecxz
jo
mov
lea
fcom
aam
jne
jnp
mov
test
mov
mov
dec
dec
retf
fwait
dec
adc
mov
sub
int
xchg
pop
cmps
jns
adc
xchg
sbb
sahf
jnp
sub
movs
fsub
js
test
mov
pop
sub
add
jg
pop
stos
push
rcl
(bad)
das
fwait
shr
es
inc
popf
pop
repz
or
into
int
adc
fwait
sbb
imul
(bad)
js
mov
ds
out
add
into
sbb
lahf
xchg
ins
int3
mov
loop
cmp
cli
dec
repnz
mov
xor
or
(bad)
mov
push
fdivr
imul
aaa
pop
mov
jg
jmp
shl
sbb
adc
sbb
mov
fadd
sar
and
in
cmp
lea
and
ja
shr
ss
stos
pop
or
xchg
std
ins
lds
push
imul
shl
mov
adc
mov
sub
or
or
fwait
iret
mov
jbe
cmp
push
mov
addr16
int3
xor
xchg
cmp
dec
(bad)
test
push
out
aas
rcl
pop
int3
pusha
push
push
cmp
sbb
loope
inc
jle
adc
mov
lock
sbb
adc
adc
jle
jne
fmul
(bad)
not
ret
cmp
xchg
mov
rol
repnz
mov
dec
dec
inc
scas
or
xor
inc
iret
and
cmp
cmp
dec
inc
sub
scas
es
add
movs
sar
(bad)
xlat
mov
pop
lock
xchg
add
pop
mov
ss
xchg
jae
sub
repz
mov
jbe
xchg
jmp
xlat
dec
push
mov
add
jno
mov
pop
push
mov
cwde
mov
and
dec
inc
sub
dec
push
mov
adc
xor
in
clc
jae
sbb
xor
lods
lds
adc
dec
mov
into
test
test
and
rol
sbb
stc
test
pop
shl
pop
push
sbb
test
jg
cs
cmp
pop
sar
pop
xchg
hlt
test
mov
pop
ss
jp
inc
sbb
lahf
jg
stc
out
jg
stc
out
xor
or
add
test
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
cdq
mov
cmp
out
outs
addr16
cmps
imul
cwde
ds
jg
jbe
xor
jmp
std
and
sahf
pop
add
std
sbb
mov
inc
adc
inc
test
sbb
int
mov
(bad)
jmp
mov
jnp
icebp
xchg
leave
sub
jae
sub
mov
jne
fnstcw
xchg
sub
test
lods
mov
cmp
xor
or
rcr
cmp
mov
fild
pushf
sub
sbb
setl
vpmuludq
and
pop
aam
(bad)
out
inc
shl
scas
xor
jae
int
jae
push
cdq
repnz
jne
popf
or
or
mov
jmp
les
(bad)
std
bt
dec
and
xor
push
xchg
xor
cs
push
hlt
mov
mov
fldz
imul
sbb
and
into
fdivr
xor
cmp
cmp
shr
imul
pushf
mov
out
inc
add
jae
fisttp
popf
mov
or
retf
xor
push
pop
or
movs
out
adc
in
call
cmp
sbb
clc
test
cdq
hlt
mov
xchg
pop
jp
cmp
mov
add
sbb
test
push
call
sub
hlt
call
fwait
pop
mov
pop
push
pusha
pushf
xchg
inc
fnstsw
push
cdq
iret
and
arpl
mov
xor
jb
push
daa
in
ja
push
lock
test
pop
fldcw
test
hlt
out
mov
ret
nop
je
pop
retf
push
sub
xchg
jno
imul
sti
jo
push
add
dec
jge
in
cmp
popf
fistp
mov
lea
inc
stos
loopne
dec
fld
inc
out
cs
call
iret
cmps
adc
lods
cs
push
ss
push
sahf
jae
aad
jns
and
xor
cmp
pop
pushf
dec
mov
popa
mov
inc
rol
addr16
push
push
or
pop
arpl
ds
xor
mov
xchg
sbb
fsub
jmp
xor
dec
repnz
add
add
mov
cld
rcl
fmul
dec
jge
jb
mov
cmp
fldenv
push
into
cwde
retf
dec
pop
das
or
stc
and
adc
stos
xchg
scas
mov
lods
cdq
push
(bad)
loope
sti
js
popf
stc
arpl
lahf
mov
icebp
das
or
dec
push
test
mov
test
cmps
push
rcl
loope
aaa
stos
xor
inc
lock
scas
mov
das
rol
add
sbb
aad
dec
cmps
mov
jmp
xchg
and
in
addr16
mov
sbb
sub
fst
in
cmps
push
mov
jp
idiv
xlat
or
imul
mov
pop
fnstenv
ins
vcvtps2dq
les
inc
push
xchg
inc
xlat
push
aaa
jo
std
imul
mov
lahf
sub
pop
xchg
fdiv
fisubr
test
in
adc
sbb
into
and
adc
xchg
push
add
jno
ss
dec
and
xor
aaa
test
lock
loope
mov
dec
outs
mov
mov
fstp
xchg
add
mov
xchg
mov
jae
mov
ret
and
pop
or
test
js
xchg
adc
mov
fnstsw
push
xchg
push
mov
data16
mov
push
in
mov
adc
and
xor
xchg
inc
cs
push
repz
iret
(bad)
push
adc
fist
jp
in
or
inc
mov
(bad)
in
dec
xor
cmp
adc
add
push
push
push
ret
adc
jae
cli
shl
mov
xchg
dec
sub
xlat
and
add
pop
mov
int3
leave
test
xor
jle
stc
sti
fadd
pop
xchg
push
pop
les
cmp
push
or
push
and
loope
aam
cwde
(bad)
mov
jecxz
popf
cld
test
pop
scas
in
pushf
xchg
(bad)
and
sti
push
sub
mov
lea
cwde
xchg
(bad)
sete
popf
mov
retf
mov
xchg
or
inc
addr16
push
repz
(bad)
jl
mov
adc
popa
(bad)
cld
fisub
stc
push
outs
dec
push
xchg
(bad)
jmp
lods
mov
jne
outs
pop
xchg
rol
in
fsubr
mov
fwait
push
in
xchg
pop
sbb
pop
mov
hlt
mov
and
jo
ins
and
inc
in
sub
pop
jmp
stos
jmp
fstp
adc
jle
test
loopne
push
icebp
dec
out
jne
add
nop
mov
pop
mov
test
sub
xchg
cs
inc
push
xlat
dec
push
jnp
(bad)
(bad)
xor
sbb
icebp
adc
mov
pop
dec
nop
or
cmp
mov
push
dec
jge
xchg
iret
sbb
fisttp
jne
dec
mov
push
add
jno
mov
mov
(bad)
xlat
push
std
mov
(bad)
fdivrp
mov
sub
les
cmp
cmp
in
mov
gs
adc
int
mov
aad
iret
(bad)
cmp
inc
shl
push
sbb
ror
rcl
out
xor
cwde
cdq
cwde
fwait
not
jle
sbb
arpl
fst
popf
xchg
in
sbb
mov
cdq
dec
sub
add
and
xchg
(bad)
cli
fnstenv
ss
imul
daa
pop
jecxz
(bad)
jno
sub
sbb
xlat
ins
and
inc
mov
out
pushf
hlt
loope
dec
xchg
cmp
sub
rep
stos
fcmovnb
scas
and
pop
xchg
pusha
jl
dec
(bad)
fcmovnu
or
pop
fstp
pop
push
repnz
xchg
call
xor
mov
inc
cli
mov
sti
vpsrld
ja
shr
xchg
mov
movs
leave
pop
scas
push
out
mov
xchg
xchg
stos
lock
push
mov
shl
sti
cs
sbb
mov
xor
mov
pop
mov
int3
cmp
push
inc
push
pop
push
jge
inc
push
test
out
mov
aaa
aam
outs
add
sbb
dec
leave
jle
out
fstp
and
push
mov
or
xchg
push
stos
mov
mov
sbb
popf
push
mov
aaa
mov
sub
stc
jnp
mov
ins
add
push
repnz
or
push
inc
and
sub
cli
push
mov
dec
cmps
in
cmps
lods
sti
mov
ficom
shl
jecxz
mov
and
cmp
lea
xlat
cwde
jnp
push
lea
add
imul
push
sbb
push
sbb
xchg
inc
xor
sti
outs
(bad)
adc
adc
jno
rcr
cdq
and
(bad)
sbb
arpl
popf
mov
pop
imul
sbb
mov
and
dec
adc
pop
or
js
push
cmp
(bad)
sti
fild
jl
je
mov
xchg
xchg
in
(bad)
mov
cs
push
cmp
xchg
mov
retf
leave
cmp
ret
sub
push
push
inc
loop
outs
or
ss
fist
xchg
push
mov
cmp
or
push
xlat
xchg
ret
rcl
pushf
mov
xlat
jmp
xchg
adc
rol
shl
mov
cmp
push
dec
int
inc
pop
xchg
call
cmp
add
jp
cmc
ss
cmp
xor
arpl
hlt
outs
push
mov
mov
sbb
and
push
fldenv
xchg
dec
cmp
not
std
xor
add
sbb
push
ds
mov
pop
(bad)
loop
jmp
addr16
lds
fidivr
neg
adc
mov
inc
sub
repz
and
cwde
adc
xchg
dec
jnp
xchg
les
sbb
xor
out
jbe
icebp
in
inc
scas
out
nop
xchg
daa
mov
cmp
adc
xchg
in
icebp
sub
add
imul
(bad)
lahf
xchg
out
clc
bound
inc
xchg
xchg
cmp
out
mov
mov
je
and
dec
bound
push
imul
mov
cmp
bound
jle
cli
push
call
repnz
mov
xchg
bnd
sbb
mov
aas
xchg
pop
mov
data16
xchg
das
pop
xchg
jge
in
dec
adc
stos
sub
mov
cmp
sbb
mov
repz
mov
and
jmp
xlat
scas
aaa
fstp
sti
mov
or
sbb
add
in
inc
lock
ja
sub
mov
dec
ret
lods
dec
hlt
stos
sbb
js
xor
sbb
scas
pop
sub
push
xor
mov
push
lahf
popa
arpl
int3
in
fadd
(bad)
int3
ss
sti
jmp
ret
dec
fwait
call
mov
inc
adc
and
xchg
sbb
cmc
ins
rcl
sub
dec
jp
fwait
pop
lods
push
pop
or
test
push
inc
push
sub
bound
cmps
(bad)
mov
inc
loop
add
mov
iret
(bad)
dec
adc
mov
push
enter
ins
fwait
inc
jecxz
ret
add
rol
xor
call
into
mov
je
pop
or
mov
push
push
aad
bound
repz
push
(bad)
rcl
xor
mov
mov
mov
ror
clc
cmps
popf
push
ins
xlat
bound
in
repnz
cmp
cld
adc
fbstp
mov
fcomp
and
xor
outs
inc
xor
test
xchg
mov
mov
or
div
out
fmul
out
mov
imul
into
loop
jno
loope
inc
xor
lds
or
shr
je
push
inc
mov
mov
arpl
fwait
mov
cld
mov
scas
in
(bad)
adc
in
shl
adc
iret
test
data16
nop
dec
xchg
add
add
jge
push
xor
(bad)
paddd
inc
cmp
mov
xor
cmp
rol
jae
xchg
lds
outs
scas
adc
neg
add
movs
div
xor
mov
les
and
jp
pop
in
repz
xor
mov
mov
aam
xlat
adc
add
je
jecxz
imul
mov
out
or
scas
push
pusha
xchg
dec
jle
fiadd
in
hlt
addr16
repz
iret
outs
loope
mov
push
mov
mov
scas
out
pusha
ja
push
icebp
push
sbb
popa
jno
push
dec
pop
fwait
aaa
cmp
(bad)
cmp
cli
mov
xor
lds
xchg
xor
fcomip
imul
jl
jmp
xchg
mov
dec
rcl
(bad)
push
pop
ss
mov
in
test
sub
mov
int3
aad
mul
sbb
xchg
sub
xchg
into
std
jl
jne
movs
and
mov
fstp
pop
lea
mov
mov
call
inc
and
xor
ret
stos
mov
rol
psrlw
imul
outs
aam
mov
xor
fimul
stos
mov
cmp
stos
mov
pusha
mov
sub
aam
addr16
and
or
(bad)
xchg
(bad)
das
(bad)
pop
mov
mov
xor
jns
fistp
jg
hlt
out
push
cdq
scas
in
(bad)
jmp
pop
push
or
push
lea
dec
cdq
sbb
mov
cmp
(bad)
sti
sub
mov
cmp
pop
lds
push
dec
hlt
inc
push
retf
fidiv
sbb
fs
and
push
shl
js
xchg
mov
cmp
ins
and
out
and
call
xchg
mov
shr
mov
pop
cs
fstp
sti
push
xchg
(bad)
cmps
push
clc
in
dec
cli
mov
rcl
ds
js
jae
push
push
push
jge
cmp
push
mov
xchg
les
mov
jo
cwde
outs
jle
inc
inc
mov
cli
je
movs
(bad)
bound
jo
cdq
and
lds
pop
js
cmp
sbb
pop
ins
lahf
mov
xor
loopne
push
movs
popa
pop
hlt
add
movs
ror
sbb
inc
enter
jl
push
gs
cmp
push
fisubr
or
or
leave
sahf
sbb
aas
push
mov
sbb
sbb
sbb
pop
cmps
xchg
add
mov
adc
cdq
sub
jmp
push
adc
popf
jg
push
div
adc
pop
outs
movs
in
push
lods
mov
jl
ins
xchg
cwde
ror
xor
loope
std
lds
jle
data16
jb
leave
cmp
sub
xchg
or
inc
or
inc
xchg
ins
or
and
push
ins
jo
pop
push
mov
in
mov
push
jns
and
xchg
inc
mov
inc
lds
cmc
iret
jg
mov
xor
push
or
ds
shr
in
mov
and
and
pusha
arpl
(bad)
pop
adc
inc
push
test
test
nop
mov
inc
popa
jge
jmp
daa
out
mov
mov
mov
mov
or
cmp
in
mov
sahf
sbb
retf
jno
stos
sub
sub
mov
xor
les
mov
or
out
test
sbb
js
jg
(bad)
rcr
jmp
in
adc
lds
cwde
lds
cmps
jmp
cld
mov
div
outs
sub
dec
push
lods
mov
or
cmps
jge
stos
or
fnstenv
data16
pop
nop
imul
dec
hlt
push
xchg
sbb
ins
adc
xor
outs
mov
cwde
cmps
jmp
cli
adc
jno
mov
imul
popf
into
jns
push
sbb
ss
out
dec
outs
ret
adc
mov
mov
and
cwde
ror
fwait
sbb
lds
ret
adc
cmp
ror
test
jmp
fistp
xor
sbb
push
sub
push
pop
movs
cmps
mov
push
mov
fld
fprem
or
aad
ror
cld
mov
jecxz
jnp
push
not
jnp
adc
mov
jmp
and
mov
pop
pop
pop
mov
fmul
aas
out
(bad)
shl
xor
mov
and
cld
ss
lds
sbb
enter
jae
sbb
lock
scas
mov
(bad)
clc
repz
loopne
clc
sub
fucom
aas
sbb
xor
cmps
mov
mov
cli
jae
fsubr
pop
xchg
sub
push
mov
inc
inc
dec
(bad)
daa
cli
dec
pop
repz
mov
repz
push
mov
sub
add
aas
sub
imul
rcl
shr
fnstenv
aaa
dec
sub
push
lods
(bad)
pop
les
cmps
mov
aam
adc
mov
lock
rcr
xchg
imul
jg
fcomp
fwait
hlt
dec
lods
mul
pop
in
mov
jo
mov
in
in
push
mov
xor
pop
aas
ss
xchg
es
test
dec
xor
add
movs
xchg
out
mov
mov
je
loopne
scas
pop
pop
pop
ins
sbb
push
mov
xlat
sbb
xor
rcl
shr
movs
inc
rcl
arpl
mov
sbb
xor
mov
(bad)
call
and
mov
jne
xchg
fisubr
jbe
adc
(bad)
xor
mov
jl
shr
xchg
arpl
xchg
push
jmp
popa
int3
retf
xor
scas
into
loop
adc
ins
push
js
cld
fisub
ficom
mov
cdq
fnsave
fstp
ss
xchg
arpl
stos
lods
call
cmps
aam
push
fdiv
test
cs
adc
pushf
dec
dec
push
or
aas
idiv
pop
jne
pop
push
mov
in
shr
push
ss
add
cld
repz
aas
(bad)
cld
repz
aas
call
add
jg
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
rcl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
shl
fwait
jmp
push
push
ja
dec
(bad)
xor
(bad)
cmps
ins
arpl
(bad)
jp
mov
xor
pushf
fidiv
jle
mov
add
adc
add
dec
push
hlt
push
push
addr16
rol
and
aam
(bad)
pop
push
inc
lods
icebp
jb
add
jns
cwde
sbb
jmp
ror
mov
cmp
inc
shl
mov
mov
xor
retf
push
push
xor
pop
dec
pop
cmp
repnz
pop
nop
xchg
xchg
mov
adc
idiv
sub
loopne
mov
mov
push
(bad)
push
or
jmp
cmp
int3
repz
sub
sub
std
inc
out
fwait
xor
shl
mov
adc
ret
pop
xor
inc
in
jns
aad
adc
les
out
push
movs
sbb
gs
les
imul
ins
test
pusha
outs
adc
jmp
mov
lods
or
xchg
fidiv
mov
pop
in
add
xchg
mov
(bad)
xor
mov
cmps
mov
dec
pusha
xor
gs
idiv
jmp
sbb
cmps
pop
push
sub
aad
js
push
lock
add
adc
movs
pusha
stc
mov
cmp
mov
mov
mov
retf
xor
adc
pop
xchg
fld
push
inc
sbb
push
and
mov
push
pop
inc
xlat
mov
or
cwde
cli
retf
sbb
mov
sub
je
mov
pop
pop
cmp
arpl
pushf
sbb
test
add
scas
mov
sbb
push
imul
or
jecxz
dec
lds
dec
hlt
ret
add
movs
xor
loope
lea
inc
mov
sub
ins
sbb
fnstcw
xchg
mov
jp
and
cmp
loop
xchg
sar
sub
int
jbe
ret
and
cmp
fwait
call
ret
mov
or
fdiv
rcr
mov
sub
push
pop
pop
and
mov
fs
add
and
mov
cmp
(bad)
leave
or
aas
adc
mov
push
ins
mov
std
daa
rcr
dec
aas
lea
adc
adc
push
ret
push
sub
push
inc
pop
pop
out
loopne
(bad)
push
inc
ins
pop
mov
jg
bound
dec
shr
mov
push
sbb
dec
ss
(bad)
mov
mov
adc
cli
mov
icebp
and
xchg
movs
dec
ins
mov
mov
dec
(bad)
jbe
jge
jae
(bad)
xor
or
jg
xor
(bad)
retf
cmp
mov
imul
mov
ins
mov
movs
packuswb
addr16
mov
inc
pop
xlat
push
dec
jg
repz
scas
dec
mov
push
and
stc
scas
retf
out
add
xchg
and
mov
in
(bad)
jns
imul
pop
inc
ud2
jnp
push
mov
rcr
push
dec
adc
sbb
add
mov
xchg
loop
adc
cmps
addr16
xchg
push
and
inc
add
ja
div
out
fisubr
add
in
xchg
cmps
adc
cmp
xchg
mov
cmp
(bad)
out
in
mov
test
(bad)
pop
aam
popa
outs
mov
jecxz
pop
test
cmp
shl
fcom
ds
inc
jg
unpckhps
in
adc
aad
adc
jp
adc
jl
out
fwait
xlat
mov
cmp
pop
push
cmp
xlat
sub
mov
aam
pusha
inc
add
jle
push
pop
test
push
sub
jl
pop
jmp
cmp
cwde
sar
(bad)
mov
inc
jecxz
imul
cld
loop
enter
xchg
sub
shl
xchg
cmp
setae
aaa
(bad)
mov
sub
cmp
addr16
jmp
cmp
ins
(bad)
xchg
(bad)
and
hlt
mov
cmp
or
out
out
lds
cmp
cdq
cwde
cdq
mov
xor
cmp
je
adc
cwde
cmp
fidiv
mov
call
and
in
pusha
shl
xchg
cwde
sub
(bad)
(bad)
pop
cmp
pop
test
loopne
mov
jnp
movs
mov
mov
sbb
sbb
in
jecxz
mov
outs
addr16
add
sub
cmc
shl
dec
pusha
and
cmc
sub
dec
retf
(bad)
push
pop
push
cwde
loope
mov
jg
sub
imul
mov
lock
jmp
pop
jne
add
aad
test
mov
pop
push
hlt
mov
call
daa
gs
cs
ret
out
rcl
pusha
outs
push
mov
mov
inc
pop
scas
fdiv
ss
lahf
(bad)
jmp
inc
out
pop
inc
push
push
ss
(bad)
sbb
push
push
in
jmp
shl
in
es
or
dec
dec
push
sub
xchg
sub
or
add
pop
ins
cmp
sti
sbb
arpl
pusha
cli
gs
pop
add
mov
addr16
xlat
add
ret
stc
popa
in
(bad)
rcr
inc
pop
fld
mov
add
cmps
fcom
jge
sub
adc
push
lods
lock
fcomp
mov
sub
mov
jmp
mov
daa
pop
scas
in
cmp
ror
fcmovbe
inc
dec
fistp
xchg
mov
hlt
cdq
jno
fisub
movs
sahf
in
je
repnz
sti
xchg
jae
and
xor
adc
add
fdivr
mov
rol
pop
push
ds
jmp
push
xchg
mov
or
cmc
retf
sbb
sub
lods
lods
mov
lea
jp
cmc
pop
jecxz
(bad)
sub
pop
mov
dec
std
add
or
rcl
jg
icebp
dec
stos
scas
xchg
pop
pop
adc
fnstsw
inc
inc
dec
mov
out
jl
fnstsw
jg
lea
ds
ror
ins
in
inc
loope
jmp
add
ss
jp
pushf
mov
sar
hlt
cmp
iret
sbb
cmp
mov
les
sub
les
icebp
cmp
ret
adc
add
mov
add
or
es
dec
test
cmp
jno
mov
jg
adc
dec
ss
mov
add
sbb
pop
pop
adc
dec
cld
jp
imul
out
xchg
sbb
xor
sti
xchg
inc
adc
js
xchg
sub
rcr
mov
in
fcomp
cmp
ret
inc
fistp
cmp
push
cli
mov
xchg
mov
aad
test
pushw
cmp
pusha
pushf
(bad)
les
fs
cld
jmp
pop
mov
inc
jbe
clc
fs
pushf
adc
loop
bound
dec
xchg
les
jmp
jmp
jmp
fs
sbb
fwait
sub
add
cmps
mov
fld
popa
sub
pop
lock
clc
and
jmp
iret
add
push
mov
pop
dec
mov
pop
lock
mov
in
mov
arpl
jecxz
mov
cmp
dec
cmc
fwait
xor
test
mov
adc
cdq
pop
push
in
mov
shl
xor
pop
ins
jg
cmp
xor
jle
xor
xor
cmp
adc
xor
nop
movs
pop
cld
cmc
fstp
retf
add
inc
push
or
xchg
fwait
dec
jno
inc
jne
in
jg
or
cmps
in
sti
scas
adc
jmp
icebp
test
in
lods
ret
or
call
retf
jbe
fadd
shl
sbb
jnp
pop
rcl
gs
repnz
adc
rcl
pop
pop
sbb
and
sub
xor
jo
popf
or
xchg
mov
pop
adc
retf
test
sub
and
add
iret
fadd
mov
sti
mov
adc
push
fist
inc
daa
sub
(bad)
mov
mov
out
loope
mov
jae
mov
pop
icebp
jmp
shl
and
mov
cwde
(bad)
dec
ss
jmp
pop
outs
cmps
inc
push
daa
ror
jno
inc
mov
fwait
jno
inc
inc
outs
and
in
sub
inc
imul
add
xor
or
pop
loopne
sahf
nop
or
sub
adc
sbb
cmp
rol
xchg
ficomp
or
jno
push
mov
pop
cmp
stc
or
stos
xor
lahf
dec
rol
jmp
adc
(bad)
jae
cmp
clc
inc
jo
mov
and
in
xor
add
and
repnz
mov
sbb
mov
sub
addr16
xchg
fld
push
outs
and
pushf
cmp
test
stc
addr16
cs
mov
sbb
idiv
xor
cmp
retf
inc
cmps
sub
std
psubsw
loop
stos
mov
(bad)
mov
cdq
push
inc
push
jo
dec
inc
fdiv
push
push
sbb
push
adc
scas
js
and
repz
adc
test
leave
xor
cdq
jl
retf
or
push
out
jnp
pop
std
loopne
adc
dec
push
mov
loop
cmp
mov
fisubr
imul
inc
xchg
mov
jmp
xlat
pop
pop
aad
sbb
outs
fisubr
and
stc
lods
pop
data16
jmp
cli
int3
clc
adc
in
add
into
xor
int3
bound
sahf
iret
add
scas
test
cdq
js
test
sub
adc
into
stos
cmps
lods
sti
xchg
call
and
adc
adc
sbb
ja
mov
pusha
xchg
lahf
movs
fwait
push
popf
or
pushf
xor
cs
retf
adc
inc
inc
aam
ret
adc
dec
arpl
std
jbe
sar
push
loopne
jecxz
push
ret
push
jl
or
aas
ret
icebp
cld
inc
mov
and
imul
ret
cmc
and
add
in
push
cmp
push
mov
and
xor
inc
int3
adc
pop
mov
inc
fdivr
cmps
lods
xchg
push
test
mov
sub
push
push
push
adc
repnz
fs
icebp
adc
iret
cs
push
add
call
sub
inc
mov
pop
ror
xor
leave
and
into
mov
or
ret
daa
in
shl
popa
mov
dec
cmps
mov
movs
cld
pop
mov
(bad)
sbb
pop
xor
dec
test
repz
ficom
cld
out
add
loop
mov
mul
xchg
push
inc
scas
idiv
enter
add
jmp
adc
jno
dec
dec
scas
aaa
cmp
inc
fwait
jmp
pop
mov
xchg
mov
xchg
jmp
and
cmp
push
jmp
imul
jg
inc
adc
rol
adc
(bad)
je
dec
pop
imul
into
enter
inc
loop
loope
add
fld
or
sbb
dec
clc
or
or
pop
or
cld
cmp
sub
ins
xor
iret
in
clc
add
loope
add
jnp
fiadd
push
mov
cmc
cmp
ins
or
or
fild
cmp
sbb
movs
fs
imul
test
mov
mov
cmp
push
inc
cmp
dec
push
test
jnp
repnz
xor
loop
xchg
mov
test
mov
lds
add
je
sbb
jmp
mov
mov
test
mov
xchg
fwait
mov
or
leave
(bad)
test
xchg
(bad)
nop
mov
add
mov
xlat
ins
aas
nop
movs
inc
sub
ficom
test
cmp
push
add
stos
lahf
inc
hlt
and
add
mov
ror
xcrypt-cbc
xor
ds
out
jno
cmp
push
add
clc
and
scas
sbb
fistp
mov
fldcw
scas
icebp
xrelease
movs
xlat
mov
add
xchg
push
mov
mov
pop
push
ret
(bad)
cmp
xchg
push
daa
adc
lea
mov
and
inc
mov
xlat
fild
cmc
dec
xchg
or
mov
cmp
stos
aas
xchg
inc
push
stc
in
or
jg
aad
neg
xor
and
mov
mov
push
ror
mov
jmp
jbe
sbb
(bad)
cld
mov
(bad)
fimul
repz
mov
ins
jmp
popf
data16
sub
cmc
nop
xor
ss
test
xor
in
push
popa
in
mov
in
stc
outs
mov
mov
mov
(bad)
movs
cmp
movs
inc
not
out
xlat
fisttp
sub
push
sahf
fadd
das
xchg
stc
shl
mov
dec
sbb
and
loopne
test
and
mov
mov
xor
dec
mov
jae
call
or
xchg
ins
js
xchg
jae
xor
mov
fwait
push
cmp
hlt
xchg
cmp
in
sbb
(bad)
loop
jo
xchg
pop
fnsave
mov
ds
jg
pop
sahf
xor
call
xchg
(bad)
in
das
cmp
push
and
pop
std
cmc
pop
cli
mov
pushf
clc
call
sub
jmp
push
inc
ds
jl
test
js
out
mov
sbb
jmp
lahf
sub
popa
fsubr
push
sbb
add
popf
ja
mov
mov
cmps
outs
push
out
push
adc
push
es
adc
lea
adc
sbb
xor
and
mov
cmc
test
test
or
lahf
jmp
adc
fcom
js
fistp
inc
mov
inc
clc
imul
mov
push
mov
popf
ds
pop
jo
sbb
shr
scas
jecxz
adc
mov
xchg
mov
sar
in
mov
mov
push
xor
xchg
push
aad
std
cmc
push
mov
sbb
adc
add
retf
or
(bad)
pop
nop
pop
test
loop
rol
fsubr
cmps
add
xor
fs
fidiv
pop
adc
popf
xchg
or
mov
enter
xor
pop
ja
mov
test
mov
mov
sub
pop
fldcw
push
shr
movs
imul
push
mov
and
push
movs
inc
or
call
fyl2x
xchg
fst
outs
cmc
shr
push
ret
sbb
neg
bound
mov
iret
out
jmp
mov
mov
dec
cmp
dec
xbegin
retf
add
xor
stos
and
jne
out
mov
pop
int3
cs
push
sbb
fsubr
pop
jmp
xchg
add
mov
mov
icebp
repz
mov
pop
mov
and
test
push
hlt
into
out
jle
mov
push
ins
call
(bad)
adc
aaa
cmps
and
imul
add
int
daa
int3
and
outs
inc
je
(bad)
mov
test
xor
pop
xchg
adc
cdq
test
iret
sub
jae
xor
pop
in
xchg
out
fld
movs
test
mov
mov
(bad)
xchg
jnp
sub
mov
fs
jmp
sbb
push
xchg
retf
sub
sub
and
jno
ss
stos
add
icebp
inc
bound
bound
or
das
jbe
xchg
cs
push
and
or
frstor
in
retf
cwde
scas
push
sbb
jne
sub
xor
leave
dec
jnp
mov
arpl
jnp
aam
pop
pop
xlat
mov
jne
jbe
mov
int3
inc
test
es
outs
sbb
das
push
mov
push
clc
out
jg
stc
out
jg
stc
mov
mov
data16
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
add
call
loop
(bad)
jmp
cmp
(bad)
je
dec
ja
cmp
jmp
data16
(bad)
jnp
sti
jge
out
add
es
add
lods
inc
xchg
fnstsw
mov
test
cli
ror
inc
sbb
jne
jmp
mov
jp
leave
mov
mov
aas
pop
in
outs
mov
or
stc
ja
fwait
inc
xlat
in
push
add
pop
or
inc
pop
(bad)
xor
stos
test
lea
inc
gs
pop
lods
mov
call
mov
in
xor
aad
inc
or
dec
push
sbb
mov
xchg
into
jno
inc
(bad)
jne
dec
cli
jp
loope
mov
add
or
scas
dec
lods
hlt
sub
icebp
cmp
clc
pop
push
sbb
cmc
mov
sbb
or
movs
aas
ins
push
arpl
pusha
cmps
mov
jns
cmp
dec
scas
adc
mov
dec
sub
or
scas
pop
and
jo
sahf
mov
cmc
test
xor
mov
pop
sbb
mov
movs
jno
xlat
(bad)
out
sbb
outs
mov
jae
(bad)
loope
stos
sbb
shl
push
push
aam
and
retf
inc
or
daa
jg
cwde
mov
pop
xchg
rol
push
pop
fwait
inc
jb
mov
xor
xchg
mov
leave
sub
ds
jge
fadd
xor
xchg
sbb
sub
rcl
pop
push
rcl
shr
(bad)
jp
pop
mov
cwde
bound
and
fcom
xchg
ins
fdiv
popf
div
pop
adc
popa
aad
sbb
mov
inc
fimul
xchg
push
inc
imul
imul
push
sahf
jg
jmp
shr
pop
repnz
out
jns
pop
iret
adc
outs
xlat
pop
jmp
std
out
je
aam
outs
repz
jmp
jo
fnstcw
push
pop
cwde
sar
in
dec
ret
cli
mov
cmp
fwait
stos
sub
dec
std
xchg
(bad)
fwait
push
aas
sbb
and
inc
iret
jbe
into
mov
jle
ret
xchg
jno
xchg
jle
dec
(bad)
and
js
enter
jbe
mov
cmc
cmps
dec
xor
jae
pop
adc
xlat
cld
cmp
push
scas
(bad)
ret
mov
jmp
or
aas
inc
pop
jp
fisttp
ins
cmp
stos
clc
out
or
in
xchg
jne
hlt
(bad)
ins
(bad)
leave
out
inc
push
imul
sub
sub
dec
fs
cmp
jo
bnd
cmp
jne
push
gs
sub
jo
inc
adc
xchg
mov
in
sbb
aaa
fisub
or
ror
xchg
pop
or
pop
or
mov
mov
jg
cmp
imul
cmp
mov
(bad)
pusha
stos
in
jno
leave
push
push
mov
sub
(bad)
sub
mul
adc
rep
and
mov
xchg
scas
fadd
rol
ins
arpl
xor
mov
cmp
stos
sbb
(bad)
icebp
mov
fimul
pusha
clc
scas
cmp
(bad)
and
ret
add
imul
mov
adc
push
fdivr
addr16
mov
jl
inc
add
push
call
mov
xchg
inc
popa
cmps
adc
dec
fadd
sbb
cmp
ins
or
cmps
inc
mov
cmp
sub
mov
sub
imul
xor
(bad)
mov
iret
mov
rcr
cmp
or
js
cli
shr
cdq
cmps
mov
ret
dec
mov
ins
push
jg
jmp
xchg
pop
push
idiv
inc
in
mov
repnz
xlat
int
fidiv
pusha
inc
mov
call
sub
inc
mov
xlat
icebp
cmp
fild
jl
mov
pop
retf
inc
sbb
push
idiv
cmp
cld
call
and
lock
sbb
mov
jg
push
inc
xor
int
retf
fs
sbb
pop
retf
shl
fld1
scas
les
jle
fwait
scas
(bad)
mov
cdq
inc
mov
cmp
hlt
jp
dec
stos
mov
fiadd
pushf
mov
mov
sbb
arpl
sub
sti
fldcw
test
inc
adc
xchg
scas
lahf
lods
leave
out
lock
(bad)
loop
popf
sbb
and
fidivr
ffree
sbb
and
ret
test
xchg
mov
mov
pop
xchg
push
pushf
and
jns
ror
mov
add
(bad)
in
push
sar
stos
lods
add
sbb
mov
popf
out
dec
cmp
shl
shr
or
xor
leave
sub
jmp
inc
test
stos
stos
xchg
jnp
inc
fild
repz
jb
or
push
pop
xor
add
mov
sti
xchg
or
xlat
aad
repnz
jne
int3
push
lahf
cwde
ss
and
push
jnp
pop
sti
in
mov
or
out
push
pop
imul
mov
ror
inc
or
outs
sub
xchg
popf
fwait
push
and
sti
sub
mov
sub
rcl
push
inc
gs
(bad)
jno
jl
stc
cmp
dec
and
outs
in
sbb
popa
shl
call
in
lock
inc
out
(bad)
jmp
jnp
mov
cmps
jnp
sbb
mov
imul
test
xchg
imul
inc
repz
inc
jnp
fdivr
or
xor
add
int
adc
and
dec
xor
or
pop
add
cmps
retf
addr16
push
gs
leave
ret
xor
lds
pop
dec
push
xlat
mov
fnsave
aam
xor
in
ret
out
sahf
mov
push
xchg
mov
jmp
or
inc
push
test
fld
mov
xchg
dec
mov
mov
jmp
adc
aas
dec
mov
ss
lea
xor
adc
or
sub
repz
inc
mov
dec
mov
cs
lock
mov
jo
inc
pop
pop
jle
jle
retf
jbe
pop
push
aad
ins
enter
repnz
jl
mov
nop
sub
test
(bad)
into
jecxz
mov
mov
rcr
icebp
mov
jg
cdq
mov
pusha
jns
cdq
clc
outs
adc
int
scas
cmp
gs
sbb
or
push
push
dec
cdq
inc
ret
mov
imul
mov
test
clc
sub
jnp
dec
sub
stos
lods
popa
(bad)
loopne
movs
ins
mov
xor
cmps
inc
push
das
jecxz
cs
push
inc
sbb
xor
loope
push
les
and
bound
cs
add
rcr
push
shr
cld
push
sub
xchg
sub
aam
not
mov
push
sar
push
sub
mov
mov
out
fwait
add
lock
ret
test
push
push
ins
je
sahf
test
popf
fild
addr16
sbb
dec
ja
pop
cmps
aad
and
mov
mov
scas
mov
mov
idiv
xor
repz
mov
adc
fld
fidiv
(bad)
cmp
ds
or
(bad)
and
imul
shl
inc
ret
pop
pop
cdq
mov
adc
inc
push
push
(bad)
nop
push
js
outs
add
in
mov
pop
std
adc
scas
sti
test
gs
mov
mov
add
js
jl
xchg
fcomp
mov
mov
mov
rcr
pusha
cmp
and
push
push
xchg
or
mov
test
mov
push
aam
sbb
test
dec
adc
loope
xchg
aaa
not
adc
xchg
imul
or
imul
and
aam
mov
lahf
dec
add
(bad)
fdiv
xchg
adc
fmul
stc
xchg
loopne
mov
push
daa
cmp
stos
adc
and
mov
mov
(bad)
pop
repz
mov
xor
movs
sbb
imul
(bad)
sti
pop
push
mov
retf
shr
(bad)
aam
test
cs
xchg
xchg
movs
mov
push
(bad)
rol
adc
(bad)
jg
scas
imul
push
stos
aam
dec
mov
popa
ds
mov
mov
popa
lahf
lods
aad
jle
das
inc
cmp
lods
pop
jbe
je
mov
xchg
sub
push
je
mov
hlt
outs
idiv
in
add
(bad)
ds
or
repnz
ds
(bad)
ss
mov
xchg
adc
and
jp
mov
hlt
lods
sub
test
pop
aad
ss
shr
mov
push
std
loop
cs
fcomp
pop
aam
fbstp
mov
add
push
fdivr
xchg
xchg
pop
or
mov
mov
retf
add
fsubr
mov
fcomp
test
jae
sbb
cmp
sub
or
xlat
or
call
in
js
mov
mov
mov
pusha
shl
mov
lods
rol
fisub
clc
mov
cmp
sbb
cmp
lock
outs
das
jl
and
ret
adc
pushf
out
pop
xor
bnd
mov
mov
ja
test
test
and
test
xchg
call
add
in
shl
fs
test
popa
add
and
aad
cs
(bad)
out
inc
rcr
pop
sub
stos
out
fs
push
imul
daa
sbb
popf
in
pop
retf
add
daa
stos
xchg
std
inc
in
pandn
cdq
test
xchg
inc
pop
sar
test
out
js
(bad)
fsin
ficom
sar
push
ret
jg
rcl
popf
in
daa
mov
sar
adc
shr
jbe
pushf
mov
or
fisubr
enter
push
rcl
adc
loopne
pop
sbb
aaa
test
xchg
mov
mov
push
retf
sbb
movs
cmp
dec
mov
jno
mov
xor
aas
add
(bad)
(bad)
sbb
sti
stos
or
and
cwde
je
out
(bad)
(bad)
imul
sub
push
push
imul
or
adc
lds
jbe
or
xchg
xchg
nop
rcl
cmps
add
jnp
loope
xchg
imul
sub
adc
sub
dec
push
call
jne
dec
sub
xchg
jmp
enter
push
nop
inc
jae
mov
pop
cmp
sahf
mov
(bad)
pushf
inc
mov
sti
retf
(bad)
(bad)
jl
xor
pop
xchg
retf
push
loop
mov
cwde
xor
inc
jnp
mov
adc
les
jns
cmp
cmp
sbb
sbb
ror
push
frstor
mov
mov
inc
js
sub
test
pop
xchg
mov
jnp
mov
arpl
dec
sub
jp
and
outs
sub
ror
jae
dec
addr16
movs
sbb
loop
dec
adc
in
lea
scas
fmulp
cld
and
xchg
mov
pop
cmp
inc
pop
pop
aad
scas
or
jp
inc
mov
or
lock
cmps
leave
push
pop
mov
mov
inc
fxch
add
xchg
inc
xor
xor
jb
scas
movs
repnz
adc
out
les
in
push
xor
mov
ret
or
sub
cdq
xchg
es
stos
sbb
ss
dec
mov
mov
inc
ja
mov
out
xlat
fmul
test
repnz
(bad)
mov
jb
and
out
sbb
(bad)
rcr
adc
ret
daa
pusha
fist
dec
pop
inc
in
(bad)
jg
add
sub
mov
sub
push
retf
sbb
(bad)
and
cmp
push
mov
shr
push
mov
cmp
retf
xchg
dec
aas
dec
test
data16
movs
shr
mov
mov
clc
jae
jno
out
cmp
pop
lds
mov
ja
pop
in
jnp
sub
sahf
mov
rcr
dec
(bad)
iret
xlat
jb
jmp
jne
not
inc
int
lock
sub
add
lahf
hlt
inc
mov
mov
in
ret
(bad)
mov
push
cmc
xor
repz
xor
(bad)
scas
xlat
call
xchg
inc
js
inc
inc
adc
imul
data16
mov
scas
std
cmp
sbb
xchg
in
or
stc
(bad)
dec
cmp
push
in
imul
dec
hlt
xor
ja
jne
push
sbb
repnz
not
xchg
cmc
fs
xchg
iret
pop
lods
sub
xor
std
inc
push
lock
loop
push
popa
jle
outs
test
sahf
dec
cmp
rcr
stos
mov
mov
cmc
cmp
xchg
aaa
nop
rcr
dec
call
es
pop
pop
enter
div
push
fnsave
leave
ss
mov
mov
adc
movs
sbb
lahf
push
nop
retf
arpl
sub
(bad)
pusha
ins
test
(bad)
pop
stos
xchg
retf
lock
retw
mov
mov
repnz
dec
mov
lods
adc
repnz
cdq
fsubp
mov
sbb
clc
test
(bad)
mov
adc
mov
icebp
in
loopne
push
inc
stos
jecxz
test
imul
xchg
xor
mov
add
ins
frstor
outs
mov
mov
je
pop
xor
fwait
sub
call
jae
int3
sub
add
mov
xchg
inc
scas
sbb
leave
mov
pop
jb
repnz
or
neg
outs
cmp
pop
bound
out
sbb
jmp
jecxz
mov
cli
sbb
mov
icebp
retf
std
mov
(bad)
jno
test
neg
xor
mov
fstp
mov
stos
push
sub
outs
adc
mov
pusha
inc
leave
ss
pop
adc
outs
jg
(bad)
inc
test
jl
pusha
imul
mov
fsubr
ins
xor
jle
ds
xchg
test
fsub
mov
pushf
cmp
and
data16
push
or
lock
mov
push
sbb
cmp
adc
pop
arpl
push
fnstcw
ins
shr
scas
adc
pusha
mov
pusha
imul
mov
and
push
(bad)
jmp
les
or
or
inc
outs
in
pop
cmp
test
sub
fstp
ds
jnp
clc
mov
fldln2
leave
test
pusha
(bad)
sti
sub
das
in
dec
in
pop
retf
jns
cli
test
sub
popf
jb
ds
clc
cmp
dec
arpl
(bad)
out
fcomp
pop
xor
stc
in
and
mov
rcr
lds
fiadd
cmc
cmc
add
or
das
daa
dec
in
test
in
cmp
mov
pop
sahf
mov
jbe
out
inc
(bad)
je
dec
dec
les
mov
jb
xchg
push
nop
fcom
mov
stos
(bad)
ficomp
nop
cmp
mov
rcl
leave
mov
mov
cmps
in
idiv
and
pop
stos
loope
push
mov
cs
ftst
xchg
sbb
iret
push
sahf
ins
jp
fst
and
xor
mov
int
and
inc
inc
lahf
pop
cmc
pop
cld
lods
inc
ins
adc
nop
ja
mov
std
add
nop
pusha
sub
mov
xor
stos
cmp
and
into
sub
adc
in
fmul
pop
cmp
sbb
or
mov
je
jb
mov
lea
aas
(bad)
cld
repz
aas
call
add
hlt
ja
lods
movs
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
das
cmp
cmps
es
(bad)
dec
ja
xor
mov
jmp
cmps
fcmovnb
aam
loope
sbb
repz
jge
ret
pop
add
xchg
mov
mov
(bad)
mov
mov
pop
(bad)
mov
push
jmp
mov
sub
xor
leave
rol
mov
mov
leave
in
or
leave
push
outs
mov
idiv
jae
cld
sub
dec
icebp
lods
mov
sub
leave
repnz
adc
push
ret
cmc
dec
push
mov
leave
add
lahf
cmp
icebp
jmp
fadd
ret
aaa
cmp
mov
xchg
mov
shl
sub
and
jnp
push
sahf
aam
push
outs
push
test
aas
jmp
fmul
lods
xchg
sti
add
ins
(bad)
sar
sbb
add
jnp
and
sub
push
push
clc
sbb
loop
into
pop
leave
(bad)
pop
addr16
ss
sub
fild
mov
(bad)
inc
fisub
clc
pop
mov
mov
inc
retf
mov
test
sub
jo
or
or
in
inc
retf
ret
ret
lock
add
jg
into
pop
stos
cmp
or
xor
pop
sar
sub
int3
aam
jg
es
xchg
mov
lahf
out
xchg
sub
pop
adc
mov
es
clc
mov
mov
(bad)
jmp
adc
stc
xor
adc
push
retf
push
and
sub
test
xchg
call
inc
and
ins
adc
sbb
pusha
ins
hlt
xchg
inc
out
mov
jl
mov
cmp
sub
stos
mov
jge
dec
jg
jo
into
dec
mov
and
add
pop
gs
cmp
fstp
mov
inc
dec
je
mov
or
mov
mov
dec
adc
or
dec
dec
scas
out
sub
pushf
(bad)
mov
pop
shr
push
out
push
out
dec
add
repz
or
cwde
fbstp
imul
inc
push
pop
adc
push
push
out
jbe
cwde
push
dec
cmp
pop
mov
dec
xor
jb
xchg
aas
push
jmp
test
fadd
add
test
fdivp
pop
jmp
mov
push
jg
aaa
xchg
sti
loop
mov
cmp
cmp
lods
mov
out
idiv
inc
ds
dec
out
xor
mov
mov
fsub
adc
push
mov
push
ret
je
mov
jbe
xor
ds
pop
xchg
xchg
je
test
mov
xor
add
mov
cwde
test
dec
pop
mov
xchg
or
jns
xchg
mov
and
gs
cmp
push
mov
stc
adc
push
sbb
jp
out
mov
loope
jg
push
inc
test
mov
repnz
mov
jle
int
pop
ret
inc
lea
mov
mov
ret
mov
retf
enter
mov
lea
cmovne
adc
add
xchg
cdq
and
gs
sub
data16
xchg
or
pop
xchg
sub
mov
xchg
mov
and
js
or
pop
mov
rcr
xor
loope
(bad)
aaa
mov
hlt
mov
mov
stos
dec
or
mov
jl
jecxz
sbb
into
scas
jnp
daa
pop
push
and
add
cmp
sub
inc
jg
mov
test
push
mov
mov
test
daa
mov
cmp
call
sub
rep
pop
in
add
jg
scas
and
out
jmp
dec
adc
fmulp
mov
jbe
mov
mov
ss
test
stos
jb
cmp
xchg
add
mov
sub
in
push
mov
jmp
pop
out
loopne
es
sbb
inc
sub
sub
int
mov
mov
out
jae
popa
push
push
pop
adc
hlt
sbb
sub
stos
or
push
sbb
xor
aam
pop
inc
dec
js
mov
sbb
mov
and
jmp
sbb
cld
fidivr
dec
xchg
stc
imul
ja
imul
(bad)
jge
ret
sahf
or
xchg
sti
inc
mov
pop
call
rol
sbb
dec
push
dec
inc
push
(bad)
(bad)
adc
or
mov
sub
bound
pop
cmp
xchg
iret
pop
aam
mov
shr
mov
dec
(bad)
fcom
jl
outs
push
ret
lds
sub
mov
lahf
movs
pop
mov
jecxz
(bad)
mov
(bad)
(bad)
xor
shl
bound
div
add
mov
in
retf
imul
shr
mov
pop
(bad)
test
xchg
pop
(bad)
es
lds
mov
fsubr
sub
jnp
jge
imul
fadd
repnz
retf
xor
mov
xor
xor
leave
iret
adc
test
sub
into
dec
xchg
sbb
lock
pop
dec
pop
xchg
jge
or
mov
mov
stos
xchg
mov
neg
les
mov
fcmovnu
mov
mov
inc
dec
xchg
aas
(bad)
pop
lea
sbb
cmc
loop
fadd
jne
xor
sub
jecxz
inc
jl
mov
add
dec
add
in
jae
outs
rcl
xor
push
(bad)
cmc
fucomi
(bad)
sub
mov
mov
movs
add
ins
stc
push
lods
push
pop
sbb
ror
pop
adc
adc
push
pop
popa
xchg
idiv
and
mov
mov
push
fdiv
fbld
int3
xlat
mov
movs
sub
icebp
jecxz
ret
jg
add
addr16
mov
xchg
xor
inc
sub
sub
xchg
mov
xor
int
pop
add
sub
dec
data16
iret
call
pop
cld
ins
inc
in
mov
movs
loopne
jle
loope
push
outs
das
push
xchg
and
outs
pop
inc
inc
pop
dec
cdq
sbb
fisttp
repnz
xchg
out
test
stc
mov
adc
out
loop
dec
mov
xchg
pop
mov
sar
cmc
je
sbb
loope
xchg
mov
lock
aad
mov
pop
sar
test
inc
adc
mov
cmc
out
jno
leave
lock
jbe
sub
loope
leave
and
jo
or
xor
mov
(bad)
sub
mov
mov
pop
cmc
and
hlt
mov
or
fnsave
xchg
push
aam
imul
jmp
test
sub
inc
clc
xor
cmp
add
fwait
pop
in
stos
and
sub
mov
int3
out
sbb
or
push
sahf
loope
cwde
stc
imul
test
dec
push
fdivr
aaa
stos
push
dec
xchg
test
pop
clc
enter
mov
scas
push
outs
add
mov
fs
test
je
push
xlat
sbb
in
mov
cmp
aad
dec
mov
aas
out
fist
pop
scas
sti
bound
mov
mov
mov
call
and
daa
cmp
enter
fwait
sahf
stc
aam
in
push
or
pop
mov
les
in
add
add
xor
std
in
jae
scas
or
cmp
sub
pusha
push
int
retf
jb
dec
mov
push
mov
mov
mov
cld
cs
aam
jge
push
cli
cmp
mov
out
dec
int
ret
cmp
(bad)
sbb
call
or
jecxz
shl
iret
push
ins
dec
push
dec
xchg
mov
out
push
xchg
or
xchg
push
adc
adc
adc
xor
imul
bswap
jl
ret
mov
sbb
xchg
xor
xchg
pop
fist
in
ins
dec
loope
jmp
ja
(bad)
aam
ret
xchg
lea
iret
mov
xor
push
pop
shl
add
lods
outs
xchg
inc
dec
sub
sbb
cmp
mov
rdpmc
dec
cmps
out
or
pushf
sub
bound
adc
cmp
dec
shr
xor
mov
enter
ds
lahf
xor
jmp
push
ror
lock
out
out
test
inc
arpl
jo
or
inc
xchg
stc
add
jg
xchg
fimul
jne
loop
or
repnz
inc
push
dec
fwait
scas
imul
loop
push
inc
fs
rol
jmp
ret
fwait
mov
cmp
std
inc
mov
mov
mov
cmp
loope
ror
jp
dec
cs
movs
enter
icebp
cwde
pop
sbb
push
mov
cli
cli
out
pop
sahf
out
mov
ds
push
and
sbb
ins
add
push
fcom
add
loope
xchg
ret
lods
rcl
mov
or
jle
cmp
mov
xor
(bad)
mov
jae
cmp
mov
int3
adc
sbb
dec
imul
inc
jmp
jg
iret
lea
sbb
popa
cmp
in
mov
cmps
enter
lods
add
mov
sub
dec
mov
loope
adc
shl
mov
add
in
push
jmp
pop
mov
pop
(bad)
xchg
jl
test
stos
fadd
jb
movs
sub
adc
sbb
sub
fmul
mov
xchg
sahf
cs
jne
inc
dec
push
jae
sub
aaa
xchg
sbb
(bad)
cmp
push
lock
(bad)
in
sbb
jmp
movs
retf
lods
aam
arpl
imul
or
std
rol
lea
out
mov
and
imul
(bad)
xchg
loop
inc
aam
xor
xor
rcl
test
ret
in
mov
xchg
cs
cmps
mov
jnp
jne
cmp
int3
cmp
scas
loop
adc
shl
dec
(bad)
mov
jne
push
or
jp
in
(bad)
jbe
dec
cli
or
popf
xor
leave
shl
xor
cmp
movs
cld
int3
mov
aad
xor
(bad)
mov
mov
push
cs
scas
add
icebp
mov
je
out
xchg
sub
std
call
loopne
sbb
int3
je
retf
add
and
mov
test
push
push
cmp
add
pop
icebp
mov
ins
xchg
lds
cdq
in
adc
shl
mov
pop
(bad)
sub
sub
std
pop
gs
out
ret
jmp
jle
jecxz
push
cmp
cmp
push
bound
adc
test
outs
repz
rcl
repnz
xchg
int
shl
add
cld
cwde
or
jb
xchg
daa
int3
pop
(bad)
xor
dec
mov
pop
xor
cmp
mov
pop
cmp
pop
mov
cmp
test
test
jg
mov
sbb
imul
mov
inc
nop
xor
jns
jnp
mov
scas
out
inc
or
stc
inc
jbe
(bad)
xchg
call
test
clc
fst
ins
pop
(bad)
mov
sbb
add
inc
dec
inc
test
add
pop
mov
fdiv
lods
movs
inc
fs
jo
shr
push
int3
shl
fcmove
push
adc
jmp
jle
(bad)
call
mov
pop
neg
push
adc
mov
mov
fiadd
pop
push
in
out
cmp
mov
aad
jbe
pop
sub
cmp
pushf
test
dec
push
mov
stc
repnz
inc
push
jecxz
add
cmc
jmp
ins
xchg
mov
sbb
adc
daa
iret
(bad)
out
imul
mov
je
adc
imul
add
mov
push
icebp
and
ret
xor
fisubr
dec
rcr
mov
mov
dec
imul
nop
retf
xor
dec
in
enter
mov
nop
retf
xchg
or
cdq
cli
or
sub
adc
and
push
jge
sub
xchg
cdq
pop
mov
push
mov
aas
shr
in
out
fs
lods
push
ficom
sub
ins
stos
rcl
(bad)
add
push
mov
stc
stos
imul
in
mov
mov
jae
cmp
ds
les
cli
rcl
test
ins
retf
add
data16
sbb
leave
xor
nop
mov
addr16
outs
sub
jg
push
div
mov
sahf
fwait
push
imul
repz
popa
push
das
sbb
(bad)
retf
and
push
push
mov
or
or
repnz
out
stc
movs
lock
ficom
bound
sub
adc
sub
add
pop
lods
xlat
xchg
or
pop
mov
aas
(bad)
push
mov
fldcw
imul
pop
mov
mov
std
popa
hlt
js
in
cdq
ss
inc
aaa
sbb
test
pop
movs
and
mov
mov
push
xlat
push
sub
xchg
(bad)
(bad)
mov
call
cmp
xlat
fisttp
inc
push
xor
push
mov
gs
out
and
fisub
fs
add
iret
jb
into
jle
dec
test
or
les
pusha
jns
gs
inc
and
aaa
test
int3
repnz
movs
test
and
mov
mov
sbb
in
repnz
xor
push
aam
retf
div
pop
ret
pop
mov
sub
not
mov
dec
jl
push
mov
addr16
(bad)
cld
outs
xchg
pop
push
jp
retf
mov
adc
jne
mov
jns
cmp
je
jae
les
jmp
mov
in
aad
out
lock
(bad)
movs
call
xchg
fld
pusha
pop
fisttp
in
je
and
fild
int3
jge
retf
(bad)
jo
adc
jmp
inc
jo
inc
add
ret
ins
push
sub
push
jle
mov
jp
pushf
xchg
fcmovu
out
mov
iret
stc
xchg
add
dec
jmp
aas
rcr
stc
push
sbb
jno
cdq
push
xor
sbb
sbb
lods
pop
xlat
mov
sbb
mov
clc
mov
mov
fcomp
lds
(bad)
sar
mov
ror
clc
xchg
je
ins
hlt
inc
sbb
xlat
(bad)
cli
xchg
mov
inc
daa
out
pop
aas
and
push
jmp
rcr
fimul
les
outs
arpl
in
pop
dec
inc
bound
or
in
js
sub
and
push
jp
xor
aad
sbb
(bad)
push
or
out
mov
adc
lods
outs
jge
push
fldenv
fwait
sub
cmp
xchg
jae
stos
inc
nop
stos
push
popf
sub
jmp
mov
mov
or
stos
int3
dec
loope
gs
in
adc
cmp
and
retf
inc
push
int
sbb
(bad)
adc
mov
mov
sti
ret
cmp
cmp
push
cmp
fcomp
movs
mov
call
loope
mov
std
adc
mov
push
lods
xlat
fs
push
sahf
lds
repz
mov
mov
or
sub
int
fld
sti
jl
fimul
dec
jnp
(bad)
test
push
pop
dec
das
pop
mov
aad
mov
jg
xor
fwait
jbe
mov
cmp
leave
dec
adc
std
or
jg
jnp
add
out
jo
movs
adc
out
repz
fst
std
mov
mov
(bad)
test
hlt
scas
enter
jp
sti
ds
les
xor
mul
cmp
push
lods
out
jo
push
std
pushf
(bad)
cld
push
in
into
test
xor
nop
add
mov
out
icebp
in
shl
sbb
aaa
pcmpeqw
jo
xor
es
pop
mov
mov
rol
add
mov
cmp
mov
mov
jg
fdivp
mov
cwde
push
movs
data16
inc
loopne
das
js
pop
sub
enter
lods
das
pushf
jo
xor
iret
push
mov
cmp
std
add
push
pop
call
das
inc
or
into
mov
sbb
dec
out
dec
sbb
loop
rol
in
mov
addr16
icebp
add
jg
stc
out
jg
pop
add
stc
int3
xchg
pushf
enter
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
push
pop
inc
in
rol
add
scas
arpl
imul
mov
cmp
int
in
xor
cmps
addr16
push
ret
data16
imul
lldt
mov
cmp
(bad)
stc
cmps
loope
outs
outs
jns
mov
rol
sub
pusha
fimul
pushf
push
pop
and
mov
cmp
out
cmp
and
pop
pushf
repz
mov
in
sbb
mov
ins
bnd
out
lds
inc
cmp
dec
jbe
es
jnp
gs
iret
inc
stos
fistp
fcom
inc
jae
retf
call
jb
adc
push
dec
adc
mov
rcr
lea
ja
adc
fmul
mov
pop
sub
mov
dec
cld
mov
inc
cld
mov
sub
sahf
test
adc
in
pop
lock
or
shl
sub
fld
mov
jbe
xchg
hlt
data16
retf
(bad)
retf
loopne
in
rol
(bad)
inc
inc
aam
movs
repnz
(bad)
mov
pop
int3
xchg
mov
jmp
xchg
push
xchg
imul
ins
pop
out
test
cmp
nop
jae
jne
adc
test
and
cmp
aad
adc
add
shr
fld
xlat
fsubr
sti
fild
xlat
sub
int
cwde
loopne
cmp
mov
and
push
mov
push
cmps
out
call
inc
loope
mov
retf
adc
out
pop
ja
pop
jmp
inc
(bad)
or
mov
inc
jmp
(bad)
pop
rol
pop
loopne
(bad)
fs
lea
rep
dec
or
fwait
sbb
add
int3
out
xlat
pushf
imul
mov
ins
and
xchg
mov
dec
sti
retf
out
xor
push
ins
loope
lahf
ins
daa
cmp
(bad)
cdq
pop
add
pop
retf
jle
adc
sbb
add
(bad)
retf
lods
add
sub
jmp
std
sub
mov
(bad)
shl
add
pop
aad
jecxz
ins
add
ror
push
sti
(bad)
jp
xchg
push
cmps
pushw
inc
aad
ss
test
addr16
outs
sub
clc
les
dec
xchg
outs
jo
sti
std
cmc
push
xchg
push
push
cmp
call
mov
sub
in
or
mov
aaa
std
ds
mov
inc
gs
pop
push
test
adc
dec
or
sbb
mov
(bad)
stos
pushf
push
scas
(bad)
das
inc
sub
inc
fcomi
push
adc
repnz
leave
nop
sub
hlt
jns
shl
jmp
mov
xchg
dec
scas
jnp
sub
movsx
and
bound
sbb
fist
mov
mov
mov
popa
lock
fwait
xor
ins
lods
add
jo
(bad)
in
xor
jae
dec
mov
lods
mov
int3
loop
outs
in
das
mov
cmp
push
or
inc
scas
or
cmp
mov
mov
js
jbe
dec
mov
or
inc
out
inc
shl
scas
mov
(bad)
mov
(bad)
(bad)
clc
and
cmp
dec
or
xor
(bad)
rcl
lock
mov
dec
sub
loope
outs
mov
cmp
je
sbb
jecxz
and
(bad)
jo
mov
sbb
data16
inc
jo
jp
mov
loop
ins
cmp
retf
xlat
repz
fstp
movs
lods
xlat
js
inc
repnz
cmp
fst
mov
push
test
sub
stc
xor
add
push
(bad)
jbe
push
jecxz
movs
mov
(bad)
int
push
jbe
xchg
sti
popf
fistp
in
sbb
(bad)
aam
inc
pop
push
adc
cmp
dec
test
out
clc
or
in
mov
or
inc
pop
xlat
clc
cdq
(bad)
mov
aam
jge
arpl
pop
push
jb
xor
imul
pusha
xchg
scas
lods
mov
addr16
xchg
in
jo
add
inc
ins
xchg
clc
dec
sub
cmp
daa
sbb
outs
xchg
adc
sub
lods
sub
cli
jns
(bad)
out
js
data16
stc
lods
or
lods
rcl
(bad)
cmp
adc
ret
jmp
cmps
pop
js
out
test
inc
ins
into
aas
stos
scas
aaa
push
popf
outs
nop
pop
iret
mov
mov
cmc
sub
cmc
cwde
inc
push
jmp
bound
and
push
cli
aad
xchg
dec
addr16
fsubr
or
(bad)
xor
vmwrite
push
mov
pop
or
pusha
stos
std
pop
lds
mov
rcr
xchg
loope
lock
sahf
push
xchg
les
cmc
mov
scas
adc
pop
jns
inc
lock
dec
dec
lods
cs
dec
pop
test
(bad)
retf
movs
test
out
dec
lea
push
and
out
cmp
push
or
mov
rol
or
fistp
les
arpl
cmp
icebp
shl
(bad)
sbb
xor
lahf
jl
out
pop
nop
dec
iret
push
cmps
push
aam
lea
mov
xlat
mov
rcl
movs
movs
leave
sub
push
adc
mov
das
mov
test
mov
xchg
sti
clc
sti
push
sub
inc
dec
xchg
div
mov
lods
out
xchg
nop
jl
inc
xlat
push
js
sbb
push
call
cmps
inc
push
adc
mov
cdq
pusha
scas
je
fmul
push
jae
aad
xchg
and
dec
and
push
xchg
popf
popf
(bad)
push
(bad)
fidivr
sub
mov
mov
pushf
push
ret
out
je
cmp
jb
xchg
jno
in
xchg
dec
mov
aam
es
fidivr
cmp
(bad)
and
xor
push
jg
cmp
push
aaa
lea
jne
nop
jbe
and
idiv
jbe
cmp
push
add
pop
jbe
dec
dec
sbb
adc
fcmovnbe
ins
ficomp
xor
xchg
inc
aaa
mov
popf
dec
(bad)
push
dec
cmp
pusha
fnsave
aaa
adc
ins
cmp
cmpps
ja
retf
pop
idiv
call
xchg
stos
adc
mov
sbb
jp
and
repnz
pop
(bad)
push
lods
adc
stc
mov
scas
test
or
inc
out
popf
dec
(bad)
(bad)
jns
xchg
cmp
xchg
bound
mov
mov
xor
popf
ds
cmp
or
sbb
push
dec
shl
adc
(bad)
mov
add
mov
or
loope
out
inc
loope
not
stc
cmp
(bad)
lea
sbb
outs
mov
or
cli
sbb
movs
push
mov
dec
add
add
mov
std
push
inc
jle
ret
sub
rcr
es
adc
fwait
movs
dec
push
mov
fild
sbb
or
adc
repz
fld
cmps
fs
(bad)
jb
mov
jbe
rcl
add
(bad)
icebp
data16
dec
jmp
fsubr
addr16
ins
mov
adc
int
scas
push
fdiv
ja
repz
sti
mov
out
aas
sbb
fisttp
mov
mov
or
xor
and
les
cmps
mov
pop
inc
xchg
aaa
cld
mov
mov
xlat
jne
inc
sbb
dec
(bad)
call
dec
cmps
inc
ffreep
mov
test
inc
or
and
dec
or
rcr
scas
mov
sbb
fadd
(bad)
fbld
fldenv
out
xchg
mov
xor
mov
out
ror
lea
adc
sbb
(bad)
cmp
sti
clc
sbb
xor
ja
sub
scas
push
jne
and
gs
sub
push
pop
jnp
inc
lock
test
mov
les
dec
mov
fcom
pusha
mov
mov
jb
cmp
push
push
jno
add
add
rcl
out
sub
mov
xchg
retf
cdq
inc
lock
mov
sbb
ret
ror
retf
fld
inc
sub
cdq
pop
cmps
cmp
aas
scas
dec
cld
dec
sub
sbb
jmp
adc
inc
pop
or
inc
jbe
retf
sub
ins
out
sub
inc
aad
inc
mov
or
pop
pop
jmp
mov
or
faddp
cmp
inc
stos
adc
jns
mov
dec
adc
sbb
add
arpl
cwde
mov
mov
inc
aam
leave
xor
push
das
jne
repz
mov
loope
das
loope
cmp
mov
add
mov
mov
outs
loope
ficom
pop
adc
movs
les
mov
std
push
(bad)
and
xchg
je
dec
stos
stc
les
pop
imul
xor
cmp
test
mov
cmps
test
push
imul
leave
js
xor
das
cmp
ins
in
mov
add
(bad)
arpl
sbb
pop
dec
xor
push
cmp
jge
jnp
fld
cmp
add
xchg
mov
loopne
mov
shl
enter
cmp
xor
xor
mov
loop
test
js
push
jae
mov
cld
idiv
mov
iret
sbb
adc
and
pusha
add
int
push
add
sub
retf
clc
mov
push
stc
cwde
aam
jae
xlat
lds
ret
imul
cmps
imul
retf
ret
inc
mov
test
cmps
sub
xor
aas
xlat
mov
push
push
jns
xchg
lock
mov
sbb
mov
fild
call
or
lahf
adc
loopne
sti
fsub
das
(bad)
cld
lods
mov
dec
in
out
cld
sti
loope
jmp
out
mov
aam
xchg
imul
jbe
jmp
mov
mov
push
xor
addr16
mov
ret
xchg
jo
add
icebp
adc
push
pop
pushf
mov
mov
jp
push
(bad)
iret
dec
mov
or
cs
jno
nop
jge
mov
lods
cld
cli
mov
mov
dec
popf
jl
or
pop
inc
push
loop
je
aas
movs
add
xchg
das
cmp
ret
retf
pushf
dec
inc
cld
test
inc
push
pop
aaa
xor
rcr
out
inc
aaa
mov
mov
dec
mov
rcr
push
cmp
push
pop
jl
cmp
jnp
repz
sub
push
or
ss
clc
es
sbb
dec
adc
cmc
inc
xchg
stos
dec
cmps
xor
stos
mov
add
adc
and
int
imul
fild
jo
and
inc
lods
outs
xchg
add
jbe
hlt
mov
jle
push
(bad)
fstp
xor
aad
sub
enter
imul
movs
(bad)
mov
(bad)
es
(bad)
shr
cmps
sub
icebp
loope
pand
sar
pop
movs
jnp
inc
mov
push
ret
out
int
inc
enter
mov
sbb
iret
loop
xchg
or
ret
fist
adc
cmp
inc
mov
push
xchg
shr
dec
cmp
dec
mov
mov
jae
mov
scas
cmps
lds
enter
outs
dec
cdq
je
in
stc
ds
cmp
daa
push
imul
mov
jl
pop
jae
into
shr
lods
js
lods
push
pop
or
sbb
in
push
fst
jne
dec
int3
icebp
xor
dec
push
add
jl
xor
or
cmp
push
xor
mov
imul
push
repz
push
in
cmps
sub
cmp
mov
mov
or
fsub
stos
mov
adc
pop
xor
lods
cli
arpl
xor
bsf
into
pop
in
dec
and
jbe
xchg
pop
neg
pop
ror
or
out
loopne
mov
adc
sub
inc
inc
mov
es
adc
dec
xchg
sub
or
sub
adc
aaa
xchg
pop
mov
pcmpgtb
inc
sbb
mov
shl
adc
push
xchg
mov
push
(bad)
lahf
or
retf
and
lods
(bad)
stos
mov
mov
xchg
mov
jp
sbb
aad
push
popf
jae
ret
mov
mov
imul
lahf
out
dec
jne
es
jmp
cs
cmp
rcr
and
push
cwde
jmp
test
inc
(bad)
pmuludq
mov
push
jmp
call
sbb
nop
dec
(bad)
jbe
adc
repnz
dec
and
imul
cld
jno
xor
cld
dec
leave
out
daa
xchg
add
mov
repz
sub
xchg
add
or
retf
bound
push
and
push
loope
dec
movs
hlt
mov
neg
sub
mov
inc
jle
es
sub
(bad)
inc
scas
test
or
xor
xchg
aad
xchg
int3
in
out
and
lods
and
out
(bad)
xor
and
aas
leave
xchg
mov
imul
retf
fisub
mov
pop
and
lock
jno
pushf
popf
sub
and
pop
in
fiadd
mov
sbb
or
popf
mov
mov
mov
jbe
sbb
mov
cmp
adc
inc
in
imul
xchg
inc
mov
sub
fidivr
pushf
jne
pop
shl
xchg
cwde
mov
call
inc
and
add
mov
(bad)
ds
js
xchg
mov
stos
sahf
sbb
push
sub
dec
stos
cmp
enter
pop
fiadd
jecxz
push
mov
out
or
pop
ins
ficomp
lock
pand
fwait
cwde
aaa
lahf
aam
add
nop
daa
ss
inc
out
sbb
call
xchg
imul
ja
mov
ja
sub
xchg
xor
mov
jmp
fistp
mov
mov
mov
lock
adc
push
(bad)
imul
dec
jge
dec
push
imul
fist
cmp
aam
adc
fldcw
repz
adc
pop
rcr
dec
cmps
loop
mov
daa
pop
loop
cld
stos
pop
das
int
stc
pop
cmp
cmps
sub
and
out
jmp
pop
jae
jg
punpckhdq
in
daa
fcom
in
or
popf
mov
test
in
cmp
xor
push
test
or
inc
out
aas
call
loopne
inc
int3
pop
icebp
xor
lods
ficom
add
stos
adc
jnp
lods
xor
and
push
in
ds
outs
leave
ja
pop
mov
dec
js
dec
push
cld
inc
ins
add
cmc
movs
xchg
mov
out
daa
fisttp
sahf
xor
add
mov
pop
or
sub
mov
in
mov
retf
shl
mov
mov
jne
push
cmp
and
jge
movs
test
inc
mov
pushf
push
mov
push
nop
jmp
cmp
xchg
rcr
cli
pop
ins
std
retf
outs
aaa
jmp
mov
mov
adc
clc
(bad)
mov
sbb
xchg
mov
(bad)
retf
div
mov
test
aaa
sti
jns
and
sbb
add
inc
sub
or
lods
out
ret
cmp
or
cmp
daa
jg
cmc
pop
scas
pop
jle
or
cld
jno
jbe
mov
(bad)
aad
stos
mov
ficomp
and
mov
lds
sti
push
sub
xchg
adc
fcompp
xchg
enter
cwde
rol
jnp
out
stos
adc
cmps
gs
(bad)
stos
xchg
sub
cdq
push
jo
adc
mov
cmp
ds
cmp
jle
outs
xlat
xchg
aad
movs
pop
mov
adc
icebp
mov
sub
xor
push
mov
pop
mov
into
gs
sub
mov
pop
inc
and
mov
not
push
mov
arpl
dec
xchg
push
gs
mov
aas
xchg
mov
pop
push
cmp
pop
inc
retf
(bad)
mov
sub
sbb
clc
out
jg
stc
out
jg
stc
jg
add
pop
sahf
mov
fcomp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
shl
adc
and
shr
out
outs
inc
mov
shl
and
ja
and
and
dec
aaa
mov
movs
inc
lahf
idiv
out
add
and
mov
push
in
mov
push
jae
nop
cmps
dec
es
xor
sbb
out
retf
(bad)
mov
mov
std
out
push
xlat
or
cmp
test
dec
sub
ins
fcom
dec
mov
out
fcmovb
xchg
adc
rol
stos
xchg
and
aaa
pop
add
lahf
jmp
mov
out
fnsetpm(287
xchg
mov
push
or
(bad)
jnp
sub
jns
add
dec
mov
sar
push
and
dec
stos
stos
sbb
inc
mov
mov
aam
pop
cwde
jecxz
aad
fild
cli
retf
mov
sub
retf
cld
in
jnp
mov
push
push
sar
xchg
jecxz
mov
add
fnstcw
xchg
mov
cmp
mov
push
out
dec
and
es
sbb
(bad)
pop
rol
or
xchg
clc
jl
xlat
and
js
mov
div
and
jns
xchg
cmp
mov
test
push
jb
sti
cmp
jns
nop
sub
add
xchg
pop
inc
cwde
adc
js
mov
jecxz
sbb
arpl
iret
jo
pop
out
mov
mov
pop
mov
cdq
lods
(bad)
in
jle
sbb
rcl
xchg
mov
pushf
movs
jns
push
xor
mov
fst
xchg
gs
out
pop
loopne
in
dec
jbe
stos
inc
in
push
mov
mov
(bad)
jmp
mov
clc
cmp
out
jae
sbb
mov
sbb
sub
push
cs
std
push
shl
ins
pop
jne
test
dec
push
inc
add
cmps
push
(bad)
int3
ret
cmp
mov
inc
adc
out
jno
jae
pop
sub
and
cdq
push
ds
imul
aaa
out
test
pop
fst
push
xchg
sub
(bad)
adc
adc
push
lock
sbb
imul
hlt
push
jecxz
les
ror
push
stos
retf
je
jl
sub
cmc
iret
xchg
scas
test
int3
xchg
ss
mov
mov
std
or
mov
pusha
mov
sub
jge
rcl
jge
xchg
xchg
fidivr
inc
jo
fld
xor
test
and
mov
push
mov
inc
scas
mov
sub
and
mov
pop
xor
adc
inc
dec
push
ret
add
test
test
clc
jge
fadd
test
pushf
mov
jecxz
addr16
fstp
jae
leave
loop
cld
cmp
scas
gs
cs
jae
loope
mov
in
call
push
or
shl
or
and
rol
xchg
ins
sbb
inc
enter
add
and
jmp
mov
retf
push
out
push
int
data16
jl
or
in
std
xchg
loopne
pop
loope
inc
sbb
cmp
adc
cld
ror
mov
adc
(bad)
call
adc
sbb
mov
repnz
jge
xchg
repnz
adc
and
mov
ins
rcl
pop
jge
pop
sub
sbb
into
rcl
loopne
test
pushf
pusha
xor
add
ins
in
mov
adc
and
push
lea
sub
xchg
cmps
dec
int
xor
ror
pop
int
fdivr
jp
jge
jmp
jns
cld
xor
mov
js
icebp
ret
ds
das
pop
pop
mov
mov
aas
inc
sbb
test
add
aad
dec
pop
xor
jne
movs
adc
test
jecxz
nop
out
sub
jg
ds
loopne
cwde
dec
and
cmp
mov
cli
les
pusha
outs
adc
xchg
jmp
jmp
pop
sti
aad
pop
pop
data16
inc
daa
mov
dec
fisttp
adc
xor
pop
and
sbb
mov
mov
mov
jns
out
mov
imul
jp
pop
xchg
cmp
push
retf
mov
jecxz
sub
push
hlt
out
cdq
inc
cmp
sti
icebp
sbb
(bad)
cwde
lods
scas
jno
adc
jae
fsub
push
push
ja
in
arpl
cli
xor
(bad)
xchg
rcl
mov
and
icebp
imul
mov
inc
cmp
stos
xlat
jge
out
adc
cmp
push
out
unpckhps
jno
lock
leave
pop
repnz
dec
mov
je
test
imul
lods
sbb
sub
test
xchg
fdiv
fsubr
mov
push
pop
mov
xchg
in
add
cmp
mov
cmp
jae
loop
dec
cld
cmp
std
into
xchg
jmp
pop
(bad)
lahf
out
dec
loopne
mov
lods
enter
(bad)
pop
push
adc
not
cmp
outs
sahf
xor
lods
pop
rcl
cmp
or
and
mov
mov
push
pop
icebp
mov
gs
in
sbb
mov
sbb
push
push
sub
cs
jmp
mov
out
mov
adc
imul
inc
mov
pop
fcom
mov
inc
inc
sbb
jg
add
scas
pop
sar
cmps
fcmovb
push
loope
jle
mov
mov
add
retf
imul
sbb
xor
xor
nop
mov
or
call
dec
dec
push
mov
inc
push
cs
mov
paddusb
(bad)
cmp
or
push
je
retf
push
adc
mov
scas
out
push
out
mov
xchg
cmp
xchg
xchg
test
mov
dec
out
sub
sar
mov
and
stos
mov
sbb
push
add
in
pop
stc
ror
mov
icebp
mov
pusha
pop
arpl
jle
out
xor
mov
popa
imul
bound
push
mov
aas
loop
sub
(bad)
lds
cmp
in
push
fnstenv
jmp
sub
mov
pop
or
aaa
rcl
retfw
mov
sbb
jns
jne
or
sbb
int
jp
mov
adc
and
inc
sub
cmp
gs
jmp
and
mov
mov
ret
xchg
test
jecxz
and
xor
jge
lods
mul
mov
jae
sahf
stos
ss
mov
jno
inc
rcl
out
jns
loope
js
mov
push
push
cdq
inc
sahf
pop
sub
popa
ror
jmp
fs
adc
popa
mov
push
lea
xchg
xchg
sbb
jl
push
push
jmp
or
fdivr
push
ficomp
int3
pop
push
inc
pusha
sar
inc
std
push
push
(bad)
repnz
outs
aaa
es
jmp
push
rdpmc
in
xchg
sub
mov
stos
idiv
test
jno
jno
inc
dec
ucomiss
push
adc
sbb
dec
hlt
jbe
jp
ss
pop
mov
sbb
imul
ja
adc
add
jg
mov
inc
mov
dec
sub
pop
out
mov
or
int
in
fisubr
dec
pop
pop
mov
dec
cdq
hlt
bnd
ins
(bad)
mov
xor
dec
out
sahf
lods
mov
xor
inc
icebp
imul
into
out
(bad)
out
mov
scas
ret
xchg
xchg
sbb
and
adc
and
cmps
mov
cmp
stos
std
cli
mov
cmp
xor
and
and
jge
loop
push
jb
mov
test
out
or
inc
mov
push
js
cmp
sbb
or
mov
add
pop
xchg
add
shl
into
popa
fwait
and
xchg
and
inc
cmp
push
mov
push
dec
jmp
push
pop
mov
sbb
movs
cmp
adc
call
or
lds
lds
inc
ds
jp
(bad)
fwait
sti
jmp
inc
stos
push
cmp
cmc
mov
pop
lods
xchg
mov
je
sti
out
xor
xchg
std
repnz
call
lock
pop
push
mov
mov
retf
mov
(bad)
scas
aam
ins
lea
xchg
(bad)
and
les
jne
stos
push
xchg
stos
cli
ficomp
stos
stos
fst
popf
loopne
scas
je
sbb
fiadd
dec
sbb
imul
jo
add
inc
jae
stos
jno
or
movs
mov
loop
inc
sub
or
xor
ja
mov
(bad)
test
enter
in
loope
and
popf
add
out
lds
mov
cld
mov
cwde
scas
push
retf
loopne
mov
mov
(bad)
adc
mov
jmp
(bad)
imul
test
ds
xlat
adc
xchg
outs
sbb
into
push
lods
movs
sbb
and
add
repnz
push
mov
out
std
adc
out
mov
popf
aaa
inc
sbb
push
xor
cwde
add
(bad)
jbe
sbb
(bad)
xlat
pop
dec
shl
push
mov
add
imul
fs
jge
mov
pop
lods
mov
cmp
jmp
test
push
scas
xchg
hlt
mov
mov
mov
inc
jp
loope
xlat
shl
dec
and
cli
fnstsw
cmp
pop
jle
cmp
adc
ret
push
shl
jae
mul
pop
test
cmp
xor
das
cld
into
popa
or
cdq
mov
test
sub
xor
pop
push
je
sahf
test
lods
fwait
pushf
loop
cs
cmps
jge
xlat
sbb
adc
shl
push
imul
and
in
xlat
or
outs
cmp
pop
out
loope
jmp
aaa
add
fcom
sub
fisubr
iret
outs
add
jae
lods
cs
pop
add
into
mov
scas
xor
xlat
and
and
adc
sub
jg
dec
adc
lods
fisub
ins
iret
sti
out
repz
xchg
xor
(bad)
xor
jmp
pop
mov
lods
xchg
push
cld
or
ja
xlat
out
pop
cmp
(bad)
ins
int3
push
pushf
jp
test
cmp
retf
push
js
iret
xchg
call
pop
mov
in
mov
neg
xor
jns
dec
inc
(bad)
lods
push
out
cwde
daa
pop
push
mov
push
in
jns
call
pop
xlat
push
dec
int
call
and
imul
pop
jno
push
fisubr
fadd
inc
xor
test
std
jl
icebp
mov
outs
jbe
jge
mov
mov
mov
or
and
push
loop
bound
cld
(bad)
and
mov
cmps
sbb
je
loope
dec
push
or
cmpxchg
lods
cmp
(bad)
xor
lods
icebp
push
into
outs
in
inc
(bad)
lea
mov
jle
xchg
aad
pop
mov
fidiv
clc
push
inc
mov
call
cld
xor
and
in
mov
mov
pop
xchg
daa
sti
test
ss
cmps
hlt
mov
test
gs
cmp
shl
push
xor
push
jmp
lds
inc
iret
adc
adc
mov
dec
push
mov
pop
jp
xor
popf
loop
(bad)
hlt
ins
int3
push
xchg
mov
call
xchg
retf
mov
sub
cmps
rcr
mov
(bad)
jmp
lods
jle
aad
clc
push
nop
rcr
adc
or
pop
loop
scas
dec
std
push
(bad)
mov
mov
mov
loop
or
sar
sti
std
cdq
fstp
jnp
cmps
adc
fld
(bad)
cmp
jo
retf
push
cmp
repz
sbb
call
xchg
stos
xchg
push
mov
jmp
in
xlat
js
stc
sub
and
push
js
std
daa
dec
dec
(bad)
xchg
adc
pop
inc
(bad)
(bad)
lock
xor
xor
addr16
mov
pop
aam
adc
add
push
and
xchg
push
xor
loop
cmp
mov
js
jb
inc
std
mov
(bad)
inc
cmp
stos
data16
(bad)
or
imul
out
jmp
rep
xchg
cmp
arpl
xor
adc
bnd
and
add
pop
xor
cld
cmp
in
jmp
sbb
rcr
adc
outs
pop
les
fcomp
ds
add
in
push
jns
daa
mov
loope
aad
test
outs
into
sub
cmps
mov
jge
xchg
mov
fldcw
xor
lods
pop
outs
neg
inc
in
(bad)
scas
icebp
sti
mov
mov
jle
cmc
sti
cmps
sub
and
stos
retf
mov
xchg
dec
ss
(bad)
mov
mov
pushf
add
fsubr
lds
and
jb
in
adc
leave
(bad)
mov
mov
mov
(bad)
arpl
aaa
jl
test
inc
and
mov
ins
xor
call
and
sbb
adc
in
aas
cmps
and
scas
rol
sar
sbb
popa
je
fld
lods
test
pop
test
xchg
pop
jecxz
test
xchg
in
dec
mov
adc
test
not
mov
sub
cmps
sub
mov
sbb
mov
push
jnp
and
xchg
mov
push
sbb
iret
mov
sti
fisttp
xor
jp
cmp
sar
int3
(bad)
enter
push
jmp
iret
sbb
jl
psubw
fldenv
mov
jo
out
mov
xlat
push
sbb
out
pushf
jno
in
push
pop
and
bound
sbb
popa
mov
fsub
ja
add
loopne
jae
hlt
lock
pop
gs
or
mov
iret
cmc
lock
push
and
sahf
aas
push
add
inc
fnsave
jns
ss
push
outs
ins
ret
lods
mov
jp
call
cs
cmps
push
out
push
pop
aaa
out
dec
jne
fs
icebp
push
lock
(bad)
mov
mov
es
jp
mov
or
fwait
inc
adc
and
inc
mov
(bad)
test
test
ja
or
test
cmps
xor
inc
fbstp
dec
add
cwde
fldcw
retf
add
cmp
push
push
test
and
dec
dec
xor
int3
mov
push
imul
pop
jmp
xchg
popa
xchg
pushf
mov
fwait
cmps
outs
loope
data16
test
push
cmp
xchg
std
fcmovnu
or
je
call
sar
inc
fld
sbb
pop
ss
mov
push
fsub
push
mov
push
dec
mov
inc
cmp
xor
pushf
cmps
stc
lods
sub
addr16
xor
add
or
mov
mov
mov
pop
sbb
jmp
stos
cli
clc
xchg
and
mov
call
imul
call
sbb
loop
sbb
cld
cmp
sub
loopne
xor
retf
gs
cmc
or
sub
daa
sub
ins
pop
jnp
xor
call
jmp
pushf
outs
movs
mov
sub
aaa
(bad)
pusha
pop
and
dec
push
mov
je
push
leave
pop
scas
xchg
std
sub
ins
push
xchg
dec
inc
adc
test
jbe
pop
(bad)
mov
sub
inc
pop
shr
(bad)
jo
in
das
stos
(bad)
bound
cli
scas
sub
mov
mov
xor
in
dec
xor
aad
cmp
les
xrelease
mov
test
adc
(bad)
mov
int
push
aaa
cmc
add
cli
xchg
fwait
pop
jg
sbb
mov
xor
test
out
data16
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
aas
jns
repz
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
add
leave
dec
add
outs
inc
mov
xor
movs
xchg
outs
sbb
sub
call
xchg
xchg
sbb
cmp
out
ja
loope
add
in
add
jbe
or
xor
ret
shl
cdq
lea
pop
(bad)
(bad)
xor
dec
mov
push
xchg
in
inc
push
in
jno
and
sar
mov
mov
sub
jns
mov
mov
scas
nop
mov
xchg
movs
adc
jns
jb
pop
mov
cmps
mov
pop
in
mov
in
xchg
dec
inc
sbb
xchg
cmp
fcmovb
out
jmp
pop
int3
pop
mov
sbb
push
push
cmp
cmp
scas
or
mov
mov
jne
icebp
imul
dec
imul
sbb
div
(bad)
ror
push
stos
dec
jne
cld
push
ret
or
pop
mov
aaa
out
pop
mov
out
jmp
retf
inc
leave
cmp
fistp
scas
nop
(bad)
sti
cli
mov
xor
mov
arpl
pusha
xor
(bad)
out
imul
lock
ss
sbb
mov
shl
push
add
mov
jecxz
mov
addr16
xchg
mov
cmp
sub
test
mov
xchg
cmps
pop
pushf
and
mov
test
scas
test
adc
into
or
mov
mov
neg
out
imul
fs
retf
and
jb
fnstcw
iret
and
mov
xchg
cli
outs
jmp
fsubr
pop
xchg
pop
repz
loope
movs
jecxz
hlt
lock
jl
sub
mov
test
iret
pop
pop
jge
inc
clc
stc
fnstcw
inc
cmps
and
push
(bad)
sub
lods
add
(bad)
pop
stos
or
call
popf
mov
out
fild
jae
jae
sti
cmps
repz
adc
ins
cli
nop
xchg
sub
repnz
pop
(bad)
add
scas
jo
pop
push
jb
mov
sub
test
cmps
ficom
push
push
adc
jo
arpl
lds
aas
sti
aaa
daa
adc
shl
(bad)
or
inc
retf
stos
xor
hlt
sub
push
sti
repz
fst
lods
push
push
scas
aas
repnz
xchg
nop
cmp
xor
or
rol
pusha
stos
aad
in
int
int3
pop
mov
mov
out
dec
mov
xlat
les
(bad)
das
cmc
push
js
(bad)
data16
ja
outs
lahf
pop
jnp
adc
pop
lea
fdiv
int
mov
repz
fmul
xchg
cmp
adc
fisttp
cmp
mov
stos
add
les
test
jle
retf
jmp
(bad)
ret
or
repnz
(bad)
mov
xlat
mov
cwde
or
out
dec
adc
aad
(bad)
pop
xor
fst
std
cmps
or
fisub
dec
jnp
dec
or
pushf
rcr
mov
(bad)
fwait
mov
sbb
ret
xchg
mov
in
mov
push
dec
(bad)
sub
ror
cmp
jmp
push
stos
or
imul
jnp
push
xchg
ret
retf
mov
test
add
fnstenv
(bad)
cli
dec
sub
ror
fcmovnu
ret
loopne
xchg
outs
repnz
ins
push
imul
int
add
shl
jmp
daa
lock
std
mov
xchg
jecxz
mov
stos
addr16
or
test
sbb
repnz
lds
arpl
sub
xor
push
sub
xor
lods
push
xor
adc
jge
dec
push
push
retf
ds
mov
push
repz
and
aam
mov
call
push
bound
test
fs
jp
out
xor
pop
popf
mov
sub
test
in
dec
out
mov
inc
and
sbb
adc
(bad)
xchg
mov
cwde
(bad)
(bad)
ds
pop
ror
mov
fadd
aaa
outs
retf
ror
add
mov
lahf
iret
(bad)
(bad)
jmp
xchg
push
outs
cwde
rcr
and
mov
xchg
call
dec
es
(bad)
adc
imul
out
loop
push
cmps
or
jne
ffree
fst
and
addr16
dec
dec
idiv
fild
adc
lds
adc
sbb
pop
jmp
test
fcmove
mov
sahf
jl
xchg
ret
mov
adc
not
cwde
in
sub
push
cld
adc
fmul
jecxz
loopne
inc
ins
mov
adc
cli
in
push
mov
dec
(bad)
bound
inc
hlt
dec
jns
jnp
dec
pushf
cmc
std
cmp
sub
xor
sti
jle
cmp
add
jecxz
int
cmps
ds
mov
push
imul
pop
xor
pop
cmp
sub
rol
or
clc
movs
out
push
push
push
inc
mov
sbb
mov
cli
popa
add
and
jno
cmp
or
je
mov
fcom
add
or
add
repz
sti
jecxz
cmp
inc
push
pop
scas
dec
sbb
out
les
xchg
push
jmp
push
(bad)
mov
mov
mov
mov
add
add
out
outs
xor
inc
adc
adc
adc
xor
das
in
iret
or
pop
add
pop
sbb
mov
xchg
jo
sub
inc
iret
push
shl
dec
jns
dec
and
sbb
ins
stos
bound
pop
cmp
jp
fistp
push
retf
jp
jg
lock
jmp
jnp
jp
(bad)
scas
in
arpl
sahf
in
mov
loopne
fldenv
mov
outs
mov
push
cli
test
aaa
pop
sub
scas
std
pop
sub
cmp
mov
jns
and
sar
jmp
xchg
mov
aas
and
pop
add
popa
fwait
lea
ds
xchg
fnstcw
mov
lods
mov
pop
xor
cmp
pop
popf
add
sub
pop
pusha
test
stos
loopne
repnz
cli
popf
and
jle
dec
sub
fsub
addr16
ror
mov
jb
cmp
pop
xchg
icebp
dec
nop
lods
(bad)
mov
push
stc
aaa
inc
mov
cld
cmp
jle
jmp
repnz
adc
dec
(bad)
mov
aaa
dec
stos
or
xchg
cld
jo
push
out
rcl
jl
mov
les
cmp
cdq
dec
fwait
call
popa
xchg
adc
mov
add
jmp
dec
repnz
ss
dec
jecxz
cdq
sub
xchg
xor
(bad)
xor
arpl
test
or
push
aam
cld
mov
sub
test
add
test
(bad)
ja
inc
stos
dec
loopne
test
sbb
sub
(bad)
or
paddd
mov
push
or
mov
(bad)
sbb
call
fnstenv
dec
push
in
stos
adc
aad
or
cmp
mov
adc
push
xor
mov
or
stc
pop
sub
stos
pop
or
cmc
xchg
jae
cld
mov
std
(bad)
push
shl
pop
xor
push
leave
cmp
cdq
outs
xchg
or
lahf
enter
test
test
outs
arpl
pop
cmp
loope
adc
cmc
cmp
outs
dec
jmp
add
pop
pop
sub
adc
cmp
xor
sbb
mov
cmp
cld
and
mov
mov
out
aaa
or
jb
mov
les
cmp
adc
inc
int
in
dec
(bad)
cmp
dec
into
sbb
stc
arpl
lahf
int3
in
es
aas
stos
pop
xchg
(bad)
xchg
mov
into
cmps
inc
sbb
in
cmp
mov
mov
hlt
dec
xor
outs
mov
mov
fcmovu
popf
loope
pop
cmp
gs
ins
cli
inc
int3
mov
inc
icebp
sti
rcr
pushf
xor
sbb
cs
dec
push
jae
stc
dec
adc
sbb
cmps
add
pop
mov
inc
(bad)
push
push
cmp
imul
rcl
add
dec
sub
mov
mov
nop
arpl
add
cmp
xchg
dec
push
ins
and
sub
ins
push
add
lock
and
xlat
fwait
in
or
sub
dec
cmps
inc
adc
xchg
xor
(bad)
mov
jbe
in
inc
int3
dec
xchg
sti
in
int3
xor
imul
fucom
aaa
loope
dec
dec
call
inc
dec
out
cmp
gs
sbb
xchg
outs
cmc
retf
pop
mov
fs
sub
icebp
and
outs
or
arpl
dec
pop
pop
fwait
add
in
out
scas
push
or
lds
sbb
rol
nop
pop
(bad)
xchg
xor
movs
pop
or
out
jo
mov
and
jl
adc
and
je
mov
in
jnp
lea
push
out
adc
jno
cld
sub
mov
sub
jae
aam
call
sub
inc
fucomi
fist
dec
cmp
inc
test
xchg
out
sahf
int3
or
les
mov
(bad)
xor
sahf
in
cmp
rcr
pop
add
popf
xlat
(bad)
push
cmp
push
pop
mov
push
xor
jp
and
lods
dec
mov
cwde
jle
sub
sbb
ins
adc
hlt
(bad)
cmps
ss
inc
cmp
inc
add
movs
push
adc
pop
cmp
mov
pop
or
mov
inc
loopne
repz
movs
mov
pop
fcmovu
push
sar
int
pushf
aad
xor
mov
add
fbld
fadd
out
and
ret
lea
push
mov
jo
std
jb
call
repz
inc
popa
and
adc
cld
out
add
push
xchg
mov
movs
mov
add
mov
xlat
inc
pop
dec
call
push
and
jecxz
icebp
add
lods
cld
(bad)
ss
pop
inc
push
pop
xchg
mov
aas
inc
fs
mov
mov
sub
sbb
cli
ins
pop
pop
les
sbb
mov
js
stos
das
inc
mov
jo
inc
dec
mov
xchg
push
sbb
or
addr16
icebp
aad
mov
(bad)
cld
outs
mov
loop
dec
adc
xchg
dec
pop
(bad)
pop
pop
call
inc
fimul
inc
or
dec
call
adc
nop
lahf
mov
shr
sub
cwde
outs
xor
mov
dec
cmp
inc
add
mov
pop
push
and
adc
dec
test
fsubr
pop
bound
cmp
push
adc
idiv
movs
add
sub
loopne
ss
push
pop
repz
mov
packsswb
and
iret
push
cmp
sub
push
sbb
sbb
or
clc
out
jge
add
inc
mov
js
cmp
sub
mov
jbe
call
jo
sbb
adc
fstp
cmp
cmc
push
push
bnd
scas
xor
cmp
xchg
inc
scas
xor
push
fadd
mov
enter
xor
repz
and
dec
fisub
cmp
jo
out
cmc
or
out
mov
sbb
movs
pop
cmp
gs
adc
jle
jb
mov
icebp
cmp
dec
rcr
popa
je
cmc
jo
or
fisubr
and
pop
pop
xchg
and
or
mov
inc
push
aaa
jbe
stc
xchg
push
stos
ds
push
(bad)
fidiv
arpl
shr
daa
mov
dec
cmp
or
ret
loope
fcmovnu
popf
pusha
dec
rol
frstor
jmp
dec
(bad)
pop
(bad)
xchg
inc
and
ret
jp
adc
mov
add
cmps
movs
sbb
dec
add
fnstcw
sub
pushf
pusha
adc
aaa
retf
test
pop
xchg
loop
cmp
push
fcomp
jmp
repz
leave
in
dec
and
jno
imul
jl
in
add
and
xor
mov
pop
aas
dec
cmp
das
mov
add
mov
sbb
js
cmps
lds
test
pop
cli
add
push
mov
pop
cmps
sub
mov
pop
stc
cmp
pop
inc
pushf
push
adc
rol
xlat
scas
fadd
sbb
mov
std
cdq
out
ret
(bad)
fisttp
jle
test
mov
jbe
cmp
mov
push
or
xor
std
jbe
js
daa
div
cdq
daa
psrld
idiv
icebp
cmp
stos
sbb
inc
lahf
dec
ret
jecxz
add
and
cmc
(bad)
pusha
in
xchg
jae
pop
idiv
(bad)
loop
xor
repnz
fwait
mov
xchg
call
loope
or
or
scas
(bad)
inc
in
push
and
mov
clc
movs
sbb
pop
adc
push
mov
dec
iret
pop
ret
add
sbb
dec
push
jo
sbb
push
push
dec
fadd
push
push
and
sbb
aad
add
int
in
imul
lea
xor
cdq
ja
add
add
cdq
outs
out
leave
retf
pop
pusha
dec
dec
in
hlt
hlt
loope
loopne
jmp
mov
outs
sbb
jne
jp
cli
pop
in
xor
int
and
fisubr
outs
adc
adc
scas
mov
movs
mov
pop
fcom
std
fmul
jl
and
arpl
ss
sbb
loopne
call
cdq
inc
fstp
std
add
or
dec
(bad)
cli
scas
jmp
adc
pop
mov
or
nop
scas
sbb
adc
repz
and
push
jg
cmp
jnp
inc
push
shl
push
jge
mov
sub
outs
int
addr16
loopne
je
into
mov
xchg
inc
or
sub
mov
mov
rol
mov
out
or
xchg
mov
movs
add
xchg
pop
pushf
jbe
xchg
call
or
bound
sbb
cmps
outs
sub
call
aam
js
ds
mov
add
pop
mov
mov
mov
sub
sbb
movs
mov
xor
daa
adc
retf
aad
ds
and
jbe
fcomp
jae
pop
ins
data16
sbb
(bad)
and
outs
lahf
jne
dec
sub
das
mov
dec
mov
test
int
add
xchg
mov
cmp
jo
jle
movs
cmp
sub
sub
xchg
repnz
xchg
push
inc
push
mov
inc
aad
fiadd
mov
mov
push
push
stc
inc
jae
adc
ins
fwait
jne
lahf
and
dec
pop
sahf
dec
lods
dec
mov
loope
jo
mov
xor
fstp
cmp
mov
push
or
pop
or
loop
inc
lods
add
and
and
les
(bad)
int3
adc
icebp
int
outs
push
inc
mov
mov
(bad)
scas
lahf
stos
or
cs
lods
dec
leave
push
out
jbe
mov
leave
ror
enter
push
push
xchg
data16
pop
inc
dec
dec
push
scas
mov
pop
mov
add
mov
mov
fnstenv
rcr
test
imul
fsub
pop
fcom
xchg
pop
(bad)
out
jbe
and
mov
push
push
fist
dec
and
imul
fs
fsubr
xor
inc
pop
test
inc
xchg
not
(bad)
rcl
dec
je
imul
je
pop
xor
out
cdq
mov
imul
ret
add
xchg
dec
jb
xchg
shr
dec
cmps
icebp
cmp
loop
mov
jbe
jge
mov
push
push
enter
xor
(bad)
lods
fiadd
cmp
pop
push
test
adc
arpl
pop
or
mov
pushaw
or
ss
xchg
jg
mov
fild
xlat
lds
mov
test
movs
cmps
xchg
lahf
scas
mov
mov
xchg
dec
push
fdivr
xchg
xchg
das
leave
sar
cmps
nop
pop
fwait
cmp
push
fdivr
push
fwait
sbb
xlat
cmp
xor
cmp
es
sar
ret
(bad)
jns
pop
push
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
add
aas
add
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
out
outs
(bad)
jae
jno
mov
mov
cmp
popf
xor
fnsave
jge
call
and
sahf
pop
add
mov
inc
leave
scas
(bad)
outs
and
aam
add
add
(bad)
lock
shl
aaa
cld
push
xchg
pop
mov
jo
sub
es
not
mov
cdq
or
pop
stos
dec
mov
sbb
(bad)
inc
jecxz
retf
ret
scas
jbe
(bad)
ret
and
pmuludq
loopne
xchg
push
or
xchg
stos
push
adc
call
adc
repnz
(bad)
rcr
pusha
or
or
int3
fild
jbe
pop
aaa
int
(bad)
stos
lock
les
inc
push
outs
pop
nop
sub
int3
xor
inc
das
sub
aas
outs
shl
cmps
mov
outs
pop
push
xchg
and
xor
lds
adc
iret
mov
jl
adc
fwait
loope
sbb
fdivr
push
mov
mov
lds
xchg
xchg
out
popa
call
and
xor
mov
rcl
fcomip
push
inc
ror
push
adc
loope
pushf
es
xchg
loop
or
mov
inc
js
movs
xchg
loope
sti
bound
fild
pop
vmwrite
mov
or
test
mov
je
sub
bound
dec
mov
dec
push
inc
das
or
dec
test
call
pop
inc
pslld
imul
in
ins
mov
jo
pop
(bad)
or
dec
fnstenv
pop
sbb
out
jae
test
pusha
sbb
push
mov
jo
jne
sub
(bad)
and
lock
fs
out
xor
iret
pop
std
pop
sbb
call
adc
add
push
and
pop
retf
jp
rcr
mov
lea
jbe
adc
sub
jbe
cmp
and
out
imul
mov
stos
movs
mov
(bad)
(bad)
inc
xchg
mov
xchg
sbb
xor
cld
mov
pop
pop
xchg
js
addr16
cdq
pop
xor
add
std
and
mov
rol
jmp
inc
sbb
xor
in
sbb
es
cmp
mov
int
pop
aam
sub
xchg
fnsave
jbe
stos
test
or
and
sti
shl
jle
loop
jmp
pop
lds
mov
pop
jno
das
lock
enter
div
push
cmovge
xor
out
cmp
inc
jno
jae
std
jecxz
and
pop
ret
push
mov
sub
mov
lea
ds
adc
std
jecxz
sbb
xor
push
icebp
and
xchg
pop
mov
mov
xor
call
push
mov
imul
inc
fstp
inc
push
mov
ret
pop
pop
out
cwde
dec
mov
mov
xchg
scas
clc
inc
fsub
loope
sub
sbb
fistp
inc
fmul
pusha
hlt
inc
scas
pop
xor
mov
rol
cmps
inc
add
cmp
mov
sbb
mov
mov
mov
inc
xor
mov
dec
cwde
pushf
mov
cld
xchg
or
push
daa
xchg
pop
adc
pop
fwait
dec
jge
into
inc
mov
repnz
inc
pop
adc
jno
cdq
cmps
adc
sub
cs
mov
mov
cmp
scas
scas
ins
push
xchg
jmp
fisttp
sbb
je
mov
mov
shr
clc
mov
pop
xor
div
xor
or
retf
loop
adc
xor
in
(bad)
jns
aad
pop
mov
hlt
inc
push
fcom
pop
ficom
imul
mov
or
fnsave
xlat
xor
dec
pusha
mov
jge
scas
retf
fimul
pop
cmc
or
scas
or
scas
or
lods
cmp
jne
test
fdivrp
pop
mov
daa
(bad)
cmp
mov
(bad)
scas
and
xor
sub
pop
dec
test
(bad)
call
jbe
jne
inc
add
sbb
and
call
pushf
std
imul
adc
or
sti
jge
inc
(bad)
aad
fisub
aas
int3
dec
stc
sub
sub
mov
mov
nop
sub
pop
push
or
adc
push
xchg
(bad)
mov
repnz
jnp
aad
push
jnp
xor
aas
dec
test
fidivr
es
xchg
test
in
imul
test
sbb
cmp
lds
mov
xchg
es
pop
jo
out
sbb
dec
test
pusha
xchg
push
stos
iret
repz
adc
sub
test
pop
add
repnz
cmc
in
dec
jns
mov
dec
in
add
into
or
mov
xor
fldcw
and
mov
and
jmp
idiv
call
mov
inc
loop
sti
ins
pusha
pop
leave
pop
lds
mov
ins
les
ins
cli
xchg
push
mov
xor
adc
dec
shl
loope
or
test
retf
cdq
mov
sub
mov
push
popf
enter
mov
fwait
or
cmp
nop
dec
pop
mov
mov
add
or
add
push
or
push
sbb
fisttp
rcl
nop
and
outs
inc
lock
add
ins
mov
stc
push
mov
ret
jb
out
dec
jmp
test
(bad)
cmp
mov
lds
movs
jb
adc
popa
mov
enter
addr16
push
std
or
jmp
(bad)
mov
and
or
xor
ss
js
push
arpl
movs
(bad)
in
inc
out
jbe
js
pop
enter
jecxz
data16
jg
test
xlat
sub
fsubrp
or
lods
mov
(bad)
rcr
stos
mov
aaa
scas
jbe
(bad)
(bad)
sbb
ds
lods
neg
sbb
(bad)
pop
or
mov
push
(bad)
cmp
popa
or
sub
cdq
idiv
inc
cwde
(bad)
gs
dec
add
ins
icebp
jecxz
inc
(bad)
jbe
call
stc
jne
ss
test
pop
fnstenv
mov
imul
call
xchg
cmc
cmp
pop
outs
xor
cmc
aam
(bad)
mov
mov
cmp
pop
sub
mov
shl
push
aad
xchg
xchg
aad
xor
lods
xor
fwait
xor
ins
outs
pop
push
popa
push
rcl
jge
add
cmp
hlt
push
sahf
(bad)
mul
addr16
aad
sti
jp
mov
xchg
inc
(bad)
jne
mov
dec
mov
ret
sub
pop
sbb
idiv
mov
inc
js
out
outs
sahf
mov
sbb
mov
setge
ret
imul
or
loope
js
mov
add
mov
jno
dec
movs
push
sub
xchg
pop
test
sbb
dec
xor
and
(bad)
pop
cmp
das
mov
push
sar
jg
pop
push
jmp
sbb
mov
dec
sub
and
jne
ja
jo
mov
ret
xor
lock
sbb
(bad)
lea
mov
pop
push
cwde
sub
mov
(bad)
lods
retf
scas
push
mov
mov
sahf
sbb
ja
mov
lds
imul
std
call
jnp
mov
adc
rol
push
scas
outs
and
push
neg
mov
dec
or
adc
or
xor
xchg
jae
push
xchg
mov
or
dec
in
and
jmp
adc
xchg
mov
mov
out
xchg
and
or
fdiv
xor
jns
pop
test
icebp
jo
xchg
sbb
jp
jbe
gs
mov
or
push
(bad)
(bad)
adc
add
or
scas
sti
mov
mov
mov
in
mov
mov
lds
mov
(bad)
aad
pop
inc
cmps
aam
pop
sahf
dec
lds
sub
cld
gs
sbb
lds
dec
jbe
lods
gs
cli
aad
fdiv
ret
or
fs
stc
(bad)
lods
ret
jg
add
cmc
add
dec
(bad)
and
push
xchg
jle
clc
mov
fistp
jmp
icebp
lock
xor
or
faddp
jns
les
test
jp
cmps
in
in
cmc
or
mov
sar
or
cs
icebp
dec
out
sahf
jmp
cmp
dec
dec
push
push
jp
mov
aaa
in
mov
mov
addr16
xchg
mov
es
and
lods
jbe
or
cmps
xchg
mov
daa
pop
adc
inc
js
loopne
inc
(bad)
fisubr
lock
jle
push
outs
push
ret
add
or
or
pop
nop
in
imul
in
xchg
xlat
mov
push
pop
mov
inc
retf
xor
out
mov
sbb
in
rcr
xor
aaa
adc
dec
add
xchg
mov
shr
aaa
inc
jns
repnz
std
jmp
outs
dec
shl
push
retf
mov
jecxz
outs
jmp
pop
fs
sub
in
pop
lods
test
bswap
mov
jp
xchg
ins
lea
pop
outs
jecxz
repz
and
int
ror
push
xchg
cli
mov
ret
popa
in
daa
in
xor
fcomp
ss
fs
movs
mov
loopne
pop
lahf
lock
sbb
xor
and
fldenv
in
ss
sub
frstor
jg
dec
xchg
push
lahf
and
int3
or
jo
jmp
cmps
shl
ins
jecxz
add
dec
mov
push
cmp
jmp
in
sub
dec
jge
rcl
imul
call
cdq
or
inc
jb
bound
ret
sahf
arpl
mov
push
(bad)
imul
mov
or
loopne
test
hlt
and
push
cdq
pop
adc
arpl
jbe
out
xchg
mov
pop
test
mov
xlat
shl
push
int
shr
push
into
xchg
call
jle
lds
aas
jmp
cmp
rol
jno
xor
jo
cmp
out
in
mov
adc
mov
test
xchg
mov
cmc
dec
xchg
or
xor
mov
mov
mov
push
ins
neg
aam
add
mov
jne
adc
cmp
repz
push
dec
adc
cs
sbb
dec
int
pop
push
sbb
cmp
and
push
xor
popa
fadd
pop
rol
mov
popf
push
mov
mov
pop
lods
mul
ror
push
jno
repnz
mov
mov
xor
sub
push
add
mov
dec
je
jmp
ret
aad
lods
push
inc
push
and
cs
push
fcomp
outs
call
in
push
imul
(bad)
out
and
xchg
hlt
pop
jge
sbb
or
xchg
pop
loope
bound
jecxz
int
or
test
es
cdq
jg
inc
inc
mov
pop
cmp
loop
push
popa
das
xlat
pop
mov
scas
xchg
inc
lahf
cmp
jmp
in
dec
js
rcr
jb
push
sti
cli
lea
inc
mov
dec
pop
dec
aaa
xchg
sbb
inc
mov
repnz
jo
popa
ret
inc
retf
lods
retf
inc
in
push
pusha
sub
std
mov
outs
stos
stos
js
sti
pop
pop
xchg
sbb
out
int3
pop
loopne
lods
inc
mov
cwde
pop
pushf
leave
push
cmp
adc
fwait
arpl
jg
lods
xor
or
adc
movs
mov
and
push
pop
pop
mov
jmp
inc
or
mov
cdq
xor
imul
cmp
jecxz
fs
inc
and
out
push
mov
imul
rcr
addr16
stos
push
jb
xor
cld
sti
sbb
fcom
cmp
add
(bad)
sbb
aad
and
retf
aas
loop
pop
or
mov
adc
xchg
sub
ins
adc
movs
or
cmps
(bad)
dec
mov
inc
mov
cmc
pinsrw
mov
mov
jle
cld
sub
inc
add
inc
push
(bad)
mul
mov
lods
fbld
nop
xchg
out
mov
or
pusha
mov
fdiv
push
mov
adc
scas
ret
fsub
test
push
and
(bad)
mov
retf
sbb
fild
adc
add
jnp
mov
lods
aam
or
rol
mov
or
iret
adc
addr16
(bad)
(bad)
in
cli
and
clc
xor
push
mov
mov
ror
repz
jg
fnstcw
jp
sar
add
xchg
jno
std
adc
mov
outs
mov
adc
pusha
int
cmp
xchg
mov
mov
cmc
rcl
mov
fiadd
mov
outs
xchg
stc
psrad
mov
sub
hlt
xor
cmps
(bad)
addr16
loop
mov
or
cmp
mov
add
lock
stc
in
sub
sahf
test
lahf
cs
test
or
pop
dec
pop
js
mov
loop
dec
enter
test
mov
cmp
or
or
xchg
pop
sahf
test
xor
inc
cmp
pop
popf
sbb
lock
popa
fld
mov
push
int3
pushf
in
mov
sub
call
lods
lea
inc
aam
sub
jns
and
inc
fwait
(bad)
xchg
fbstp
neg
mov
dec
jae
into
pop
adc
(bad)
lea
pop
(bad)
xor
aas
sub
mov
dec
or
push
int3
jne
mov
cmp
push
(bad)
mov
xchg
mov
mov
icebp
lea
mov
test
dec
push
bound
ss
inc
iret
lds
lods
pushf
mov
jp
cmp
dec
and
jmp
push
pop
and
retf
movs
pop
aaa
xchg
add
and
mov
imul
adc
lock
dec
pop
jmp
and
cmc
mov
dec
icebp
ret
mov
pop
lea
xor
(bad)
popa
mov
fnstcw
or
jle
jecxz
in
loopne
mov
pushf
jl
pop
inc
inc
cld
fcmovnu
dec
std
mov
push
sbb
ret
mov
push
xor
mov
xor
rol
jbe
sbb
imul
cmc
in
pop
stc
dec
jns
loopne
lea
mov
call
xor
add
fmul
fsubp
or
dec
hlt
retf
fist
mov
dec
in
jmp
scas
mov
lods
sub
mov
jo
cs
xchg
out
mov
test
jmp
scas
cmp
bnd
in
cmps
or
xor
cmps
cmps
dec
push
mov
push
cmp
aas
add
cmc
je
call
out
daa
in
mov
in
xchg
cdq
(bad)
aam
rol
inc
ss
hlt
imul
mov
stos
xchg
pop
push
ins
sub
add
xlat
sti
pop
jge
add
sub
xor
test
in
inc
pushf
mov
ins
mov
xchg
shl
and
cld
mov
xchg
cmp
in
enter
movs
cmp
lods
es
inc
and
bound
push
shl
jle
(bad)
(bad)
aas
or
rol
sti
mov
mov
xor
mov
popa
jmp
xchg
adc
xor
sbb
setae
aad
dec
sbb
pop
(bad)
sub
je
movs
movs
sbb
jns
xchg
xchg
fnstsw
cmps
or
adc
xchg
xor
test
lods
push
pop
pushf
lahf
ds
lea
mov
repnz
out
in
popa
and
push
cdq
mov
(bad)
adc
jle
sub
repz
pop
push
or
clc
mov
gs
xor
rcr
std
fwait
retf
das
fcmovnb
aas
(bad)
cld
repz
aas
(bad)
cld
repz
push
mov
(bad)
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
sbb
add
loopne
outs
pop
jbe
mov
mov
push
mov
sub
retf
jne
out
sub
sub
jge
in
repz
shr
add
call
(bad)
ret
add
sbb
xor
or
outs
jnp
mov
xchg
aaa
movs
retf
and
xor
enter
popa
pop
aam
sbb
mov
and
mov
into
sbb
and
cmc
dec
sbb
in
popa
xor
sub
bound
add
jne
into
push
dec
sbb
je
hlt
jge
sti
stc
arpl
and
xor
xchg
jecxz
xchg
je
fistp
jno
push
arpl
push
push
mov
mov
jge
scas
push
outs
and
leave
jle
je
loop
cmps
mov
pop
jl
test
sub
cmps
or
mov
jg
and
addr16
imul
mov
mov
push
adc
repnz
lds
cmp
sahf
sub
cmp
xchg
pop
add
fld
sub
jmp
sbb
fmul
es
in
xchg
into
xor
loope
jo
mov
ja
bound
neg
cmp
push
dec
push
pop
xchg
jge
cdq
cld
(bad)
sar
xor
push
repz
jmp
out
test
xor
shr
(bad)
daa
push
loop
je
adc
mov
mov
mov
iret
push
aas
std
outs
pop
jmp
int3
sbb
icebp
inc
push
and
jo
rcl
(bad)
ja
repnz
mov
aad
in
test
dec
jg
repnz
add
push
jg
mov
sub
sar
mov
inc
dec
pop
outs
push
push
jl
and
mov
(bad)
push
dec
jecxz
inc
(bad)
dec
cmps
pop
lods
aam
daa
jo
(bad)
popf
mov
imul
pop
lock
xor
pop
push
leave
aas
dec
pop
inc
pushf
in
inc
and
inc
jle
cmc
cmps
repnz
(bad)
shr
jge
pusha
xchg
jmp
or
mov
mov
fcom
lahf
cmp
push
and
adc
cmps
sub
push
mov
adc
adc
jo
fcomp
test
push
xor
sti
je
gs
out
xchg
in
jae
mov
pop
jp
adc
test
push
inc
xchg
mov
pop
sbb
stos
push
inc
outs
sub
adc
pushf
push
mov
mov
cmc
sbb
push
out
inc
push
fstp
inc
out
fwait
mov
push
mov
mov
sbb
popa
cmp
in
jo
sub
ret
jae
(bad)
push
mov
fadd
push
push
mov
ja
in
jne
jbe
xor
jmp
data16
call
cdq
lock
jbe
mov
movs
and
jle
clc
and
xor
mov
add
pop
in
rol
pop
and
or
test
(bad)
mov
cwde
in
inc
or
xchg
popa
xchg
jge
add
jae
xchg
int3
test
dec
mov
ret
mov
and
gs
and
or
mov
(bad)
out
lods
repz
dec
add
mov
and
mov
mov
mov
pusha
add
fidivr
int
ficomp
sub
(bad)
pop
gs
pop
xor
cmp
or
into
cmp
std
xchg
adc
jo
sar
push
push
jg
xchg
fmul
push
dec
push
sbb
sub
pop
inc
call
xchg
jmp
out
cli
scas
mov
sub
jle
addr16
retf
jne
push
imul
xchg
cmp
rcr
repz
mov
idiv
pop
mov
mov
rol
dec
sub
cwde
fs
retf
lock
mov
sub
lods
inc
loop
shl
loope
add
push
imul
cwde
mov
inc
xchg
(bad)
push
add
mov
aam
es
pop
and
stc
mov
mov
xchg
mov
xlat
lods
add
and
and
popa
rcr
and
jle
pop
xchg
fincstp
aam
pop
fdiv
mov
lahf
into
and
jne
pushf
push
mov
jp
cmp
rcl
or
(bad)
js
in
sbb
adc
xchg
js
and
shl
push
movs
or
retf
cmp
fistp
or
clc
xor
jmp
pop
ret
pop
sub
ret
push
jbe
inc
lea
push
rcr
(bad)
pop
pop
test
shr
push
ins
jle
dec
dec
test
cmp
mov
and
int
inc
aad
adc
out
mov
push
stc
iret
add
outs
pop
sub
cmp
adc
shl
inc
adc
sbb
jge
and
hlt
mov
int3
push
enter
pop
sbb
int
pop
jbe
jp
call
ret
js
repnz
leave
sbb
pop
xchg
lock
mov
and
popf
movs
sub
dec
movs
mov
lahf
(bad)
dec
mov
jbe
mov
xlat
mov
imul
movs
cmps
inc
mov
pop
test
adc
aad
lods
push
outs
nop
sub
xchg
cli
inc
cld
sbb
stc
adc
ret
jno
pushf
hlt
in
call
mov
lock
cmps
mov
inc
mov
loop
rcl
ja
mov
mov
xchg
pop
iret
or
push
mov
sbb
out
jge
sub
adc
xchg
les
pop
(bad)
imul
dec
push
test
inc
mov
cwde
jno
add
cmp
jge
mov
pushf
std
test
and
cwde
enter
scas
cmp
and
xchg
pop
mov
or
stos
sub
test
add
retf
inc
dec
popf
retf
dec
cmc
int
js
scas
rcl
fwait
jge
mov
cdq
and
fcomp
pushf
push
mov
int
mov
mov
fld
test
cwd
adc
inc
inc
xchg
xchg
mov
inc
imul
cmp
dec
jnp
clc
repnz
mov
test
fst
xchg
ss
mov
aam
fnstenv
mul
outs
shl
ror
xchg
cwde
adc
rcr
cmp
stos
lods
mov
mov
fld
mov
shl
pop
pop
mov
adc
aaa
sub
mov
popf
das
(bad)
xlat
adc
stc
sbb
mov
mov
or
sbb
mov
mov
and
repz
jno
or
inc
adc
mov
sub
cmp
sti
test
cmps
or
stos
inc
movs
addr16
imul
cmp
mov
pusha
xchg
pop
mov
or
fadd
push
std
lods
call
sbb
pushf
clc
lock
xchg
cmp
mov
cmc
lock
imul
(bad)
jbe
mov
aaa
dec
pop
cmps
xchg
ja
clc
cmp
pop
pushf
inc
mov
cmp
mov
xor
into
mov
test
mov
dec
pop
fdivr
and
arpl
rcl
adc
mov
mov
pop
in
retf
jb
add
jb
scas
jl
mov
ja
retf
test
outs
xor
retf
xchg
add
sbb
push
sub
mov
sahf
adc
sub
xchg
push
data16
dec
fisub
dec
(bad)
or
pushf
xchg
push
(bad)
cmp
out
push
ret
ret
push
ins
sahf
in
or
jmp
fs
hlt
jp
mov
xchg
cli
push
push
mov
movs
mov
dec
fild
or
aam
pop
(bad)
cmc
jle
hlt
or
loope
shl
outs
mov
inc
jle
out
std
sub
mov
popf
popf
and
fbld
adc
cs
mov
sti
mov
add
stc
mov
mov
mov
(bad)
jmp
mov
repnz
adc
mov
sbb
push
adc
bound
push
nop
mov
into
mov
xchg
(bad)
mov
and
(bad)
outs
imul
(bad)
fcom
or
movs
das
das
mov
pop
lock
adc
pop
pop
push
sub
push
js
inc
fsub
leave
lock
pop
fnstcw
ins
sbb
stos
rcr
push
loope
xor
mov
stos
lds
push
(bad)
stc
xchg
xchg
mov
fsubr
test
pop
jno
cmp
xchg
int3
aas
repz
jle
dec
dec
int3
dec
jo
mov
sti
push
pop
push
xchg
lods
(bad)
call
ss
es
and
shr
mov
movs
push
cmps
(bad)
mov
xchg
jg
call
std
mov
mov
pop
scas
adc
imul
(bad)
call
jnp
mov
sbb
push
sub
adc
pop
inc
push
loope
stos
out
adc
xchg
sub
jne
jns
sbb
sub
pop
mov
lods
xchg
inc
mov
repnz
(bad)
aam
ficom
test
push
repz
addr16
mov
std
sub
dec
add
pop
mov
out
out
or
inc
shl
sar
pop
jno
xchg
push
push
mov
inc
cmp
jl
cmp
add
aad
push
sbb
mov
push
pop
pop
dec
test
call
push
mov
out
xchg
cdq
fsin
dec
lock
aaa
outs
mov
mov
mov
cld
and
push
and
ret
and
and
jnp
dec
shl
adc
mov
iret
lods
into
push
es
cdq
mov
mov
mov
push
ret
or
ins
push
(bad)
jle
call
inc
adc
(bad)
in
push
out
add
mov
xchg
mov
lock
int
les
ins
enter
mov
adc
cmps
dec
fs
jne
popf
out
outs
ins
sbb
(bad)
push
push
mov
aaa
fisttp
xor
mov
jge
das
cs
mov
xchg
data16
cmp
aaa
xchg
addr16
jno
aad
fistp
ficom
call
(bad)
(bad)
fisttp
aaa
inc
cmps
jle
jo
mov
(bad)
adc
nop
fs
fwait
stos
imul
sahf
dec
mov
sub
or
and
lods
out
fstp
and
mov
jge
mov
int
dec
mov
imul
aam
and
mov
xchg
ret
cs
mov
pop
jmp
sub
cs
inc
sub
mov
xchg
test
xor
sub
add
mov
dec
push
mov
jle
push
pop
add
ficomp
mov
out
jmp
shl
xchg
and
push
push
lods
and
pop
or
sub
mov
add
mov
mov
iret
pop
fcom
outs
and
or
and
int3
rcl
cmp
jmp
pop
test
fcomi
inc
push
push
pop
inc
sbb
push
aaa
ja
pushf
cmps
fwait
inc
popf
lods
add
jmp
mov
or
sti
lea
popa
adc
mov
push
adc
cmp
hlt
cld
loope
dec
popf
ret
aas
xchg
out
mov
mov
(bad)
mov
es
imul
ins
rcr
push
test
nop
xchg
in
stc
mov
call
cmp
gs
scas
sub
dec
add
lods
pop
xor
cdq
cwde
inc
adc
cmp
dec
pop
add
sbb
(bad)
jb
les
pop
push
xor
fwait
imul
inc
popa
inc
pop
aam
sub
xor
pop
dec
dec
jp
scas
and
rcr
fstp
sbb
push
std
cmp
or
xor
jmp
xchg
fcom
xchg
inc
xlat
adc
jg
inc
adc
mov
mov
aad
push
or
sub
jno
fadd
adc
jl
push
jo
mov
js
lds
or
imul
adc
ins
test
jl
fwait
adc
jecxz
les
inc
std
inc
icebp
xchg
inc
jbe
imul
lock
out
daa
rcr
xchg
ror
les
out
mov
and
pop
aas
dec
xlat
cld
jmp
dec
call
sbb
and
lods
adc
dec
sbb
dec
mov
pop
adc
mov
and
in
xor
sbb
js
repnz
arpl
ret
sub
push
and
into
bound
dec
xor
jae
loop
fdiv
(bad)
stos
inc
pop
imul
sbb
jge
adc
mov
sbb
mov
pop
lock
dec
cli
cmp
cmc
cld
adc
jmp
outs
lea
dec
push
(bad)
dec
xor
or
shl
push
pop
xor
push
adc
pop
fdivr
sub
and
aam
lahf
ficom
imul
movs
shr
xor
lea
sub
pop
inc
xlat
or
dec
lahf
mov
(bad)
cld
dec
pusha
int3
fcom
mov
mov
dec
jne
xchg
cwde
ror
dec
xchg
ss
dec
cmp
mov
lea
add
cs
xor
out
std
and
sbb
mov
cdq
rcl
movs
shr
xrelease
or
mov
call
data16
inc
xchg
cmp
cmps
into
repnz
jo
mov
xchg
and
and
pusha
mov
mov
push
pop
pop
and
sub
mov
js
hlt
mov
enter
push
mov
jb
mov
jbe
scas
not
cmc
mov
scas
ins
ins
add
sbb
pop
in
mov
cld
sub
stos
mov
ror
pop
xchg
inc
push
cmps
push
mov
rcr
xchg
(bad)
iret
push
fisttp
and
fwait
lea
std
jmp
push
pushf
lods
call
pop
into
cmp
push
add
jae
out
and
jp
inc
scas
je
and
(bad)
int
cdq
push
dec
xchg
(bad)
shl
add
add
mov
out
cmps
or
jne
clc
dec
ss
cmc
or
xchg
mov
cli
and
xor
jb
pusha
inc
mov
dec
shl
iret
cmp
pop
or
xchg
pop
(bad)
jnp
add
xor
cmp
retf
pushf
cs
sbb
mov
popa
or
cmp
and
test
outs
xchg
test
mov
aaa
nop
mov
jbe
and
pop
mov
icebp
fidiv
in
jae
stos
lahf
jg
mov
leave
fcmovnbe
stos
or
into
push
dec
mov
ja
adc
dec
add
imul
or
pop
inc
int3
mov
dec
xor
cmc
sub
adc
enter
sbb
pushf
xchg
jmp
dec
xchg
cs
rol
add
inc
ins
mov
or
neg
mov
into
imul
sub
out
int
fwait
mov
push
push
addr16
jle
mov
aad
cmp
in
jecxz
inc
mov
aad
jmp
mov
iret
repz
or
sbb
add
(bad)
add
jge
jle
dec
mov
nop
pusha
push
(bad)
rcr
cmovp
enter
mov
mov
xor
xchg
out
jp
inc
mov
fistp
std
lock
and
dec
pop
jnp
and
movs
cmp
ja
dec
mov
in
fs
pop
fimul
outs
cmp
call
cdq
sbb
movs
in
dec
and
shl
movs
jecxz
ds
jge
aam
not
das
pop
jp
push
movs
mov
xchg
test
push
lock
popf
gs
out
(bad)
jle
hlt
(bad)
pusha
xor
fst
cmps
inc
adc
ficomp
adc
dec
sar
dec
push
repnz
cmc
ror
cmp
out
jg
stc
out
jmp
sar
pop
dec
add
cmps
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
pop
add
scas
cmp
sbb
ja
in
cwde
ds
dec
aaa
adc
outs
cmp
ins
aas
xor
imul
ins
bound
fisub
dec
sti
js
jns
pop
add
(bad)
xor
add
gs
ret
mov
inc
dec
pop
push
inc
iret
mov
inc
lds
mov
or
cs
les
pushf
pop
add
inc
push
mov
push
xor
out
push
dec
pop
neg
outs
xor
inc
push
pop
inc
int
mov
je
jge
and
mov
iret
into
fdivr
push
adc
push
outs
cmp
aaa
cmp
mov
and
jnp
add
dec
enter
call
lock
dec
inc
out
test
repnz
and
out
in
aad
test
mov
inc
aas
ins
push
shr
ror
cmps
xchg
psrlq
cwde
hlt
cmp
out
sahf
cmp
(bad)
cwde
cmps
fwait
xor
out
xchg
xor
push
cmps
ins
daa
mov
mov
ins
mov
hlt
or
add
push
shl
out
jo
inc
inc
cmps
xor
xchg
and
nop
or
imul
ret
mov
cmp
xor
push
mov
mov
jae
imul
xor
cmp
retf
fwait
out
bound
pop
cmp
inc
loope
repnz
out
jg
hlt
sub
jnp
rol
test
lds
push
and
cwde
mov
cld
cmp
movs
push
inc
sbb
dec
jns
jne
dec
mov
outs
fisttp
push
and
jle
stc
stos
or
sbb
mov
add
sbb
pushf
es
jo
or
mov
int3
dec
imul
mov
adc
mov
call
push
enter
adc
jns
mov
xor
add
push
jge
clc
push
ror
mov
inc
(bad)
adc
push
imul
clc
mov
sub
(bad)
call
loope
mov
mov
cmp
xor
aam
dec
xor
fld
jne
mov
cmp
sbb
push
out
mov
sub
sbb
xchg
and
mov
mov
outs
repnz
sbb
xchg
and
push
out
inc
cwde
mov
jbe
or
fild
xor
das
mov
jbe
lea
inc
pusha
mov
jle
and
mov
scas
out
scas
xchg
in
in
add
jge
enter
cmp
dec
mov
sahf
and
retf
sub
cmp
cmp
test
retf
cmp
movs
xchg
jbe
jbe
xor
mov
adc
fimul
stos
imul
mov
push
add
ins
add
adc
in
jmp
mov
iret
movs
mov
jns
dec
jbe
inc
aad
sbb
adc
addr16
push
(bad)
das
sti
mov
aas
xlat
push
fmul
push
cld
mov
mov
inc
jmp
aas
and
mov
stos
xor
scas
mov
jmp
in
jp
pop
mov
mov
pop
mov
jmp
ja
repnz
xor
cmp
mov
mov
movs
adc
imul
add
push
mov
rcr
call
cmp
ss
or
sub
out
fs
jmp
fistp
mov
(bad)
clc
pop
jb
fs
inc
fs
bound
adc
cdq
pop
sbb
stos
mov
cmps
iret
inc
rol
or
mov
add
neg
mov
sbb
xchg
pop
vmovsldup
and
popa
fstp
pop
sbb
mov
or
cmp
mov
adc
js
fsubr
xchg
inc
adc
fwait
outs
cs
mov
sbb
add
mov
or
xor
stc
jp
pop
mov
fcmovnu
mov
jecxz
retf
xchg
repnz
popa
gs
or
or
jle
fmul
inc
lea
mov
push
outs
push
pop
sar
mov
mov
fstp
or
shl
mov
daa
mov
cmp
loope
adc
inc
pop
retf
idiv
pop
retf
pop
icebp
aad
data16
js
aam
or
mov
push
lea
adc
cli
fld
jp
inc
idiv
mov
push
sub
mov
jle
mov
mov
pushf
jbe
add
adc
pushf
sub
clc
(bad)
in
dec
adc
jg
adc
mov
les
loopne
icebp
xchg
jae
shl
pop
xor
aas
xor
xchg
test
hlt
jb
jge
imul
and
jno
xchg
xor
mov
mov
mov
pop
not
int3
mov
adc
imul
(bad)
sbb
adc
sbb
xchg
add
push
rcl
or
add
daa
lds
mov
ret
leave
and
mov
mov
stos
sub
in
sub
and
mov
inc
out
in
push
push
push
mov
or
or
push
cmp
jo
sbb
outs
xchg
cmp
(bad)
xor
cmp
fsubr
pop
and
retf
loope
sti
icebp
mov
sbb
jmp
xlat
(bad)
into
sub
jmp
shl
mov
icebp
pop
rcr
addr16
dec
out
fld
movs
sar
or
dec
sub
xor
push
fadd
stos
mov
or
fmul
jl
or
fmul
es
jp
add
setne
jno
aam
inc
repz
dec
lods
frstor
psubw
sbb
pop
cmps
ret
ret
xchg
jge
pushf
push
call
(bad)
xor
and
mov
ins
ins
aas
(bad)
mov
int
jno
movs
and
inc
into
icebp
ins
shl
sbb
sbb
rcl
dec
(bad)
pop
push
or
in
or
(bad)
cmp
aas
and
jae
or
inc
hlt
mov
inc
repnz
ror
fisttp
pop
or
mov
sbb
jae
in
lock
mov
cmc
push
jae
movs
clc
arpl
xlat
fdivr
jbe
jl
imul
dec
fldcw
and
arpl
sub
aam
cmp
push
mov
push
gs
pop
adc
(bad)
push
imul
pop
jp
lds
jae
xchg
add
jmp
out
loop
repz
pushf
push
mov
push
fild
sahf
sbb
(bad)
jns
and
mov
into
xor
and
in
dec
lea
ss
add
inc
lds
rol
repz
(bad)
imul
xchg
sahf
or
pusha
(bad)
sbb
call
xor
xchg
call
jmp
xchg
xchg
pop
dec
mov
pop
daa
adc
imul
das
neg
pop
add
lods
jle
jae
pop
add
mov
jmp
retf
cmc
daa
clc
retf
xchg
or
ror
add
and
sbb
cwde
mov
popa
cmp
out
adc
or
sahf
test
xor
mov
xchg
sub
sbb
adc
jp
out
xchg
cmc
outs
add
lock
sbb
out
sub
daa
mov
clc
cwde
movs
mov
and
and
mov
iret
sbb
pusha
sbb
jbe
fcmove
fwait
jnp
stc
and
add
push
xchg
enter
shl
sbb
ins
mov
mov
jb
call
out
xchg
addr16
bound
mov
dec
sbb
gs
and
jmp
shr
sbb
cwde
dec
adc
stc
std
int
inc
pusha
int
mov
jmp
retf
(bad)
jp
adc
push
push
mov
sub
xchg
enter
dec
out
repz
pop
out
push
dec
jecxz
or
test
mov
stc
and
adc
or
idiv
lds
cmp
mov
ins
daa
sbb
and
call
les
push
adc
clc
pop
test
mov
jnp
scas
xor
into
call
aad
and
aam
dec
aaa
adc
pushf
inc
psubusb
sub
pop
jbe
fdiv
xchg
dec
inc
xor
xor
dec
and
imul
xchg
push
ss
adc
add
mov
sahf
dec
and
xchg
xchg
call
stos
push
shl
push
pop
inc
inc
adc
daa
retf
fdiv
inc
clc
push
mov
pop
sahf
pop
fldcw
test
out
mov
retf
in
scas
pop
and
test
(bad)
jmp
(bad)
ja
mov
mov
and
call
sub
jmp
lods
sar
xor
in
in
sub
dec
jo
dec
das
jae
add
dec
enter
dec
ror
(bad)
ds
mov
es
pop
cld
xor
jnp
stos
jno
pop
mov
gs
mov
xchg
and
lods
call
or
stos
int
in
push
aad
cli
movs
ja
or
inc
xlat
jnp
mov
ret
fstp
pop
lahf
jle
gs
rcl
dec
scas
retf
sub
cmp
stos
sbb
shl
push
ja
cmc
jbe
mov
ins
adc
mov
or
in
mov
adc
inc
push
bound
mov
mov
mov
sahf
imul
int
popf
(bad)
jnp
aas
fstp
xor
mov
sar
scas
mov
mov
inc
ja
and
stos
dec
jns
enter
rcl
aaa
jne
mov
push
xchg
lds
pop
xchg
out
pop
fisttp
lods
cs
pop
dec
xor
sti
call
jge
jne
xor
xor
das
jns
stc
pop
inc
das
pop
mov
call
test
mov
imul
pop
fidivr
push
xor
push
pop
or
das
mov
mov
push
pop
push
cmp
(bad)
mov
and
dec
ss
outs
loopne
push
stos
inc
je
mov
lods
sbb
sbb
xlat
and
jae
sbb
pop
cwde
or
daa
sbb
(bad)
js
(bad)
ficom
sbb
jns
push
fcom
pop
addr16
fsubr
div
jg
iret
rcr
rol
xchg
jmp
xchg
xlat
pop
push
ins
int3
lods
in
cmp
mov
div
xchg
ins
xor
jle
or
xor
jbe
loope
and
(bad)
loope
in
dec
pop
dec
mov
daa
loop
popf
dec
mov
and
lock
sahf
add
gs
cwde
out
adc
call
mov
mov
test
bound
int3
pop
xchg
jg
push
sbb
pop
or
cmps
xchg
mov
mov
js
xchg
cmps
in
lods
call
add
pop
add
add
pop
aad
adc
int
dec
pop
cmp
stos
call
outs
mov
sbb
repnz
call
lods
out
js
pushf
lock
lahf
mov
loopne
sub
cmp
mov
mov
test
(bad)
adc
mov
sub
dec
in
inc
shl
aaa
int3
retf
mov
out
adc
leave
and
mov
imul
cld
mov
and
dec
addr16
ret
xchg
dec
inc
mov
cli
rcl
loope
jne
sar
rcl
cmp
icebp
push
inc
pusha
lock
inc
mov
cmp
and
popf
mov
adc
pop
push
fstp
in
cmps
addr16
pop
push
mov
dec
xchg
sbb
jmp
mov
pop
cs
add
xchg
repz
leave
cmp
add
push
jbe
mov
lods
sbb
mov
or
dec
sub
(bad)
sar
shr
cld
int
pusha
fst
jmp
ss
mov
cmc
cmp
xor
lahf
rcl
ror
inc
stc
mov
sar
test
cmp
inc
repz
push
pusha
sbb
sub
push
pop
iret
mov
das
adc
ret
test
sti
movs
mov
or
(bad)
jb
(bad)
sahf
xchg
sahf
sbb
retf
ror
mov
adc
ja
int3
mov
xor
ja
lea
in
cmc
xor
adc
leave
out
jb
test
icebp
ret
sbb
push
and
call
jl
push
into
cld
les
xchg
pop
adc
div
cmp
pushf
push
pushf
adc
scas
inc
lods
(bad)
xor
push
mov
and
cmps
movs
push
sbb
xor
jb
adc
popf
mov
sub
pop
pop
or
mov
lds
dec
jns
cmp
dec
inc
dec
xchg
movs
push
push
ds
scas
cmps
jmp
es
mov
push
lea
stos
sub
jo
das
fdivr
mov
fidiv
pop
mov
sahf
cld
cmps
or
dec
stmxcsr
pop
retf
cli
push
ds
sti
movs
loop
push
fstp
mov
add
xor
stos
icebp
shl
pop
je
jp
xor
js
or
rcl
jecxz
inc
adc
fs
mov
xchg
mov
sbb
lea
fild
nop
mov
inc
ficomp
(bad)
clc
cmp
hlt
(bad)
mov
data16
add
(bad)
sub
data16
xor
jge
call
mov
adc
cmp
adc
(bad)
jno
push
lods
push
call
fisubr
jge
cmp
sub
in
out
add
scas
fild
int
and
inc
in
and
cmp
ins
xor
pusha
mov
je
jp
ret
out
out
test
add
ins
and
mov
xor
push
dec
push
mov
inc
sub
and
dec
(bad)
iret
push
mov
fldcw
mov
dec
inc
mov
lea
dec
ja
mov
sub
sahf
icebp
cmc
pop
call
dec
enter
sar
mov
jae
adc
pushf
adc
es
sub
push
std
or
adc
dec
xchg
xchg
sub
push
mov
out
pop
popf
xchg
fst
mov
out
or
push
push
pushf
jns
pop
jno
mov
rcl
in
sar
call
mov
(bad)
les
popf
mov
jno
sub
push
adc
jg
repz
jne
in
sbb
(bad)
mov
jp
mov
cwde
fsub
scas
iret
jb
mov
shl
data16
mov
xchg
push
dec
rol
jns
cmp
push
lahf
mov
push
or
(bad)
fistp
or
fist
cmps
jp
lds
dec
or
xlat
push
add
mov
push
mov
and
jp
shr
fwait
ins
(bad)
lock
scas
xor
sar
adc
and
ins
lods
into
sbb
stos
xor
lds
stos
or
cmc
fsub
rcr
inc
call
dec
imul
jmp
popf
mov
add
leave
push
xchg
test
add
es
lods
sbb
bnd
push
out
add
dec
mov
je
inc
std
cmps
(bad)
sub
test
mov
sbb
xor
pusha
cmp
or
(bad)
fistp
lods
imul
jge
xchg
movs
icebp
stos
shr
test
fldln2
movs
xor
iret
mov
in
shl
inc
xchg
or
pop
push
repz
mov
cmps
mov
(bad)
lahf
sbb
stos
lahf
popf
outs
aas
ins
sbb
or
into
movs
xchg
push
out
add
popf
xor
inc
xor
ins
sbb
retf
ror
and
jl
mov
cmc
pop
mov
mov
icebp
dec
test
pop
mov
jl
outs
outs
pop
movs
xor
iret
aas
(bad)
cld
repz
aas
(bad)
cld
repz
add
movq
out
lock
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
ror
xor
jae
dec
mov
je
or
sbb
xchg
dec
or
jmp
jle
call
sti
and
jae
and
push
xor
pop
out
or
idiv
inc
cmp
ja
cmp
icebp
lahf
ins
jae
push
adc
fisttp
xlat
mov
mov
jnp
pushf
push
cmp
mov
shr
xchg
jmp
and
mov
jmp
lahf
es
add
lods
push
aad
mov
mov
mov
jmp
(bad)
push
push
xchg
fcom
scas
out
cmp
push
inc
jne
and
add
xchg
sub
popw
adc
and
ret
arpl
xchg
sub
dec
xchg
cwde
mov
mov
popa
cmc
inc
imul
popf
adc
cmps
sub
mov
push
xor
xchg
adc
jl
or
inc
xor
xchg
bound
div
mov
or
inc
cmp
sub
jl
cmp
pop
ret
cmp
jns
imul
and
mov
retf
inc
xchg
sub
(bad)
jmp
jbe
pusha
call
sahf
push
in
sub
inc
xor
pushf
aaa
ret
xchg
faddp
jo
cli
rcr
cmp
aaa
addr16
dec
vpmaskmovd
iret
mov
dec
sbb
xchg
movs
push
sub
test
pop
push
in
ss
mov
rcl
call
add
mov
xchg
lods
fnstsw
jecxz
sbb
loope
mov
mov
cld
mov
fsub
mov
sti
jae
lahf
adc
mov
dec
xor
inc
stos
mov
das
jno
jle
and
fnstsw
mov
fs
jo
popa
retf
inc
mov
pop
not
cmp
ret
dec
(bad)
jp
jb
push
dec
scas
in
dec
pop
inc
xor
sub
bound
ja
out
cmp
pop
scas
push
jecxz
mov
xor
mov
or
push
cmp
in
dec
mov
inc
push
mov
sar
repz
int
shl
jl
dec
call
inc
sub
inc
jo
push
cli
sub
cmp
test
mov
sub
xchg
je
pop
mov
cmp
push
sub
hlt
and
in
xor
or
popa
aas
inc
xor
(bad)
clc
scas
jle
dec
imul
and
mov
mov
jmp
inc
dec
add
cs
mov
adc
cmps
sar
or
leave
push
push
int3
jb
cmova
lods
in
mov
jmp
or
xlat
sti
in
push
test
inc
mov
test
aaa
pop
cdq
fisttp
mov
dec
cdq
inc
xchg
rcl
add
jg
stos
mov
fistp
iret
mov
push
and
rcl
xchg
and
mov
out
call
loope
cs
std
xor
pop
icebp
pop
cmp
xor
das
sbb
rcr
sbb
mov
push
sub
dec
ror
adc
sar
mov
scas
aad
push
cdq
cmp
jmp
cli
sub
or
lock
leave
pop
outs
cmp
(bad)
cs
loope
sub
mov
test
cmp
iret
outs
pop
and
add
jmp
hlt
mov
sbb
add
hlt
int3
in
push
addr16
pop
jb
retf
jae
fnstenv
aas
pop
xor
sub
inc
sub
sub
add
inc
aad
out
inc
and
mov
jmp
mov
in
push
sar
mov
scas
inc
pop
jnp
test
iret
sahf
inc
cmp
push
vcvtsi2ss
pop
jp
aaa
in
jne
imul
pop
or
pop
inc
add
ficom
jns
pop
pop
bound
adc
sub
mov
stos
jmp
xor
mov
enter
adc
test
push
or
mov
inc
xor
inc
push
call
mov
rcl
jmp
imul
xchg
ret
daa
mov
movs
cmps
mul
dec
cmp
popa
repnz
mov
mov
fsub
sahf
xchg
or
(bad)
(bad)
fild
pop
pop
(bad)
std
pushf
je
fistp
add
adc
mov
lods
inc
pop
fadd
inc
push
cs
fist
icebp
fmul
pop
xor
mov
adc
clc
jno
xor
xor
popa
pusha
outs
out
rcr
sub
out
cli
inc
cmps
out
fst
(bad)
pop
mov
xor
out
in
or
lea
and
pushf
ds
mov
fwait
movs
or
push
cmp
dec
in
xchg
xchg
jg
popa
retf
inc
mov
xchg
jge
ss
lods
(bad)
out
out
add
or
stc
js
jp
push
xor
dec
int3
xchg
xor
ja
js
xchg
xor
push
iret
lds
out
cmp
mov
push
mov
test
mov
sub
jns
repnz
dec
pop
cmp
mov
bound
rcl
lods
push
es
mov
push
add
and
gs
lods
jnp
cmp
ja
sbb
outs
or
scas
dec
or
jle
sub
sub
loop
sahf
imul
(bad)
cdq
lds
bnd
repnz
mov
leave
lahf
(bad)
push
jmp
lds
jmp
add
pop
sbb
mov
das
test
out
out
pop
cmp
imul
repz
mov
aaa
mov
(bad)
std
(bad)
std
xor
iret
jmp
ret
std
aas
dec
inc
retf
sub
fld
fwait
shr
xor
popf
aad
inc
outs
xchg
retf
movs
sti
ret
arpl
mov
xchg
adc
setns
ror
scas
mov
test
lods
jb
in
lock
xor
xchg
mov
or
arpl
stc
iret
in
js
jnp
mov
scas
jecxz
fwait
sub
data16
shl
add
cmp
mov
mov
enter
ds
mov
cmp
bound
mov
pop
fnstsw
cli
icebp
cdq
mov
inc
int3
rcr
and
add
mov
and
mov
popf
mov
fucomi
lods
jnp
cli
mov
inc
and
cmp
push
addr16
adc
xrelease
jmp
addr16
arpl
mov
movs
call
shl
xor
hlt
pop
inc
(bad)
mov
retf
and
(bad)
arpl
jecxz
sahf
(bad)
(bad)
(bad)
jae
push
into
cmps
dec
inc
mov
jbe
lahf
or
jmp
xchg
push
pop
aam
mov
inc
aas
jmp
xchg
jne
jne
retf
(bad)
cli
pop
out
test
inc
add
outs
ds
add
pop
or
dec
ins
inc
ror
outs
scas
xor
sbb
dec
adc
xlat
jge
pop
xchg
imul
inc
pop
int3
nop
pop
lods
jg
push
sub
(bad)
cld
adc
outs
je
mul
or
push
xchg
mov
dec
dec
fild
push
jle
hlt
gs
pop
adc
jge
jl
mov
jb
or
pop
fnstsw
aaa
icebp
sub
jge
or
jp
gs
iret
scas
in
js
icebp
out
(bad)
lea
push
push
out
mov
lods
mov
out
push
addr16
sahf
push
pop
outs
sahf
jg
(bad)
cli
imul
add
(bad)
loopne
mov
(bad)
loope
shl
ret
push
rcr
lods
adc
(bad)
ins
test
hlt
mov
push
stos
mov
dec
push
jg
sar
cdq
jno
loopne
fcomp
fadd
js
(bad)
gs
in
jae
jecxz
stos
mov
into
(bad)
repnz
retf
inc
push
inc
sbb
mov
xchg
mov
imul
mov
xchg
fxch
pop
ins
xchg
shr
mov
mov
mov
sbb
adc
test
add
mov
outs
jmp
movs
fidiv
push
ins
mov
das
mov
push
clc
cmp
mov
push
out
in
mov
scas
inc
nop
aaa
inc
loopne
clc
mov
add
imul
es
fadd
push
outs
popf
leave
dec
push
and
mov
jle
and
mov
inc
test
repz
sub
jae
mov
mov
std
adc
cmc
mov
push
jg
jno
inc
add
push
lock
push
icebp
imul
xchg
pop
in
dec
or
ret
sub
mov
out
cdq
or
test
icebp
rcr
jo
add
push
lock
stos
sub
mov
popa
sbb
jns
xchg
push
fs
cmp
gs
push
mov
and
into
mov
pop
dec
dec
or
or
and
test
imul
add
movs
(bad)
fst
je
add
sar
mov
push
mov
popa
mov
mov
nop
sbb
mov
movs
cmp
cmp
shl
xchg
scas
test
jge
mov
test
mov
push
push
dec
or
in
iret
lock
push
movs
sbb
test
jb
icebp
and
jno
movs
or
sub
cmp
lods
les
cmc
adc
retf
int
jecxz
pop
in
dec
movs
xor
icebp
pop
push
and
sbb
(bad)
sahf
sub
and
mov
daa
mov
ja
(bad)
pop
fwait
cwde
and
ror
sahf
xchg
xchg
rcr
(bad)
fsub
jno
add
jns
pop
ror
lds
lods
or
jp
jnp
aas
call
add
add
mov
cdq
mov
popf
xor
inc
push
or
and
push
mov
(bad)
cli
call
test
test
jns
clc
jg
fwait
data16
mov
scas
sbb
cmc
lods
inc
xor
(bad)
call
mov
cli
cmp
dec
(bad)
loop
std
mov
out
ret
popf
(bad)
mov
jbe
into
test
pop
movs
inc
mov
xlat
dec
xchg
add
sbb
inc
aaa
add
xrstor
sbb
jo
fist
shl
pop
cmps
lods
cmp
push
jl
mov
fisttp
das
jp
fs
mov
stos
jg
in
rcr
retf
aas
add
xor
jns
lods
test
push
mov
inc
push
pop
ret
dec
pop
mov
fidiv
add
and
push
fwait
cmc
test
inc
push
mov
pop
int
jmp
in
xor
cmc
int3
sub
xchg
and
mov
push
out
das
dec
mov
pop
push
dec
pop
cmp
stos
aad
js
adc
std
and
imul
push
(bad)
xlat
or
sbb
mov
mov
stos
jmp
cmp
lds
inc
lods
mov
sbb
or
push
add
lahf
rcr
and
ins
repz
sub
inc
inc
cli
adc
pushf
loop
scas
icebp
mov
push
imul
cmp
dec
(bad)
imul
sti
push
bsr
ja
dec
cdq
sbb
cld
cmp
xor
jb
mov
popf
and
add
fbld
imul
cmps
enter
push
js
sar
les
xor
lods
jbe
enter
fist
and
outs
dec
leave
imul
leave
add
iret
mov
mov
push
push
rcr
dec
xlat
gs
add
repnz
mov
inc
mov
sahf
shl
fidiv
daa
pusha
or
dec
sub
in
nop
(bad)
(bad)
xor
shr
xlat
sub
jp
sub
imul
pop
retf
jcxz
mov
dec
test
scas
jle
ret
stos
ja
pop
jecxz
pop
add
lods
es
jbe
test
push
add
add
mov
test
je
dec
iret
and
add
bound
sahf
mov
mov
aad
xchg
xchg
fucom
pop
xor
ins
add
daa
sub
stos
fdiv
dec
mov
mov
out
sub
ret
lea
pop
xchg
xchg
iret
sar
or
int
push
push
ror
dec
addr16
mov
dec
xor
cmps
ror
retf
je
sbb
(bad)
mov
mov
mov
jmp
outs
(bad)
ret
dec
call
mov
push
dec
loop
(bad)
sti
imul
movs
aas
movs
popa
repz
leave
xlat
pop
out
jmp
mov
cmp
xchg
outs
xor
es
sub
enter
std
sbb
sbb
mov
rcr
out
xchg
sub
mov
sahf
in
nop
add
adc
mov
leave
xchg
or
jmp
popf
pop
inc
mov
or
adc
imul
mov
inc
or
mov
mov
rcr
or
out
dec
push
jmp
pop
dec
jmp
sbb
mov
aam
into
fnstenv
stos
adc
cli
vmwrite
cdq
xchg
mov
(bad)
or
cwde
icebp
adc
push
or
jl
xchg
jb
jno
dec
(bad)
jae
fisttp
stc
inc
pop
nop
xchg
sbb
xor
stos
test
sub
xlat
mov
sub
jae
and
cmp
ins
sub
mov
mov
xchg
in
jp
leave
ror
inc
jo
adc
push
pusha
mov
add
jno
inc
push
push
dec
scas
cmp
test
mov
jg
jecxz
ret
mov
pmulhw
sub
je
test
jbe
jmp
clc
movs
pop
fnstcw
repz
xchg
cmp
leave
movs
sahf
dec
xchg
mov
cmp
jbe
int3
jne
mov
sub
out
mov
jg
jle
bound
jle
sbb
imul
pop
mov
push
mov
popf
push
mov
sub
imul
shr
inc
aad
outs
retf
gs
int
inc
add
lock
pop
pop
sub
hlt
mov
push
adc
jmp
test
pop
add
retf
inc
dec
mov
sub
mov
sbb
fsqrt
in
js
and
(bad)
push
lahf
lods
mov
xor
outs
je
call
push
add
mov
xchg
mov
out
sub
cmps
mov
or
mov
inc
movs
lahf
sar
or
(bad)
test
lock
jnp
jnp
sbb
mov
je
mov
mov
and
icebp
mov
add
mov
sbb
jno
dec
xchg
sub
push
sub
sbb
outs
xchg
inc
call
stos
push
xchg
out
or
adc
dec
outs
push
lods
push
jle
pop
stc
push
outs
inc
mov
xchg
push
xchg
cmp
or
imul
jecxz
inc
movs
sbb
mov
jns
pusha
lock
ja
mov
lock
jo
in
leave
and
pop
dec
mov
(bad)
dec
push
pop
(bad)
int
imul
mov
sbb
imul
js
imul
imul
xchg
cmps
fnsave
js
xor
pop
push
push
cwde
and
or
bound
in
or
ficomp
stos
add
scas
xor
mov
inc
dec
add
push
arpl
sbb
xchg
sbb
add
lods
jbe
push
sar
adc
div
stos
mov
push
stc
inc
inc
rcr
or
outs
xchg
dec
xchg
out
pushf
mov
hlt
lahf
mov
or
mov
cmp
xor
pusha
loope
inc
imul
push
mov
ret
shl
adc
lods
jne
cmps
jae
add
or
mov
nop
movs
push
ins
pop
mov
in
into
push
xor
pop
xor
pushf
shl
(bad)
cmp
ror
les
outs
mov
jp
adc
xchg
adc
test
pop
or
aaa
cmp
das
or
cmp
jle
mov
leave
dec
inc
or
mov
xchg
or
xchg
dec
dec
inc
jbe
ja
repnz
sub
ret
mov
movs
dec
movs
(bad)
adc
adc
out
pop
mov
and
mov
sti
push
(bad)
mov
jb
(bad)
addr16
cs
stos
psubb
lahf
jg
stc
out
jg
stc
mov
scas
xchg
pop
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lds
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aam
and
ret
add
sbb
in
cmp
addr16
(bad)
jmp
xor
sbb
dec
ja
jne
cmp
pop
jae
fwait
xchg
adc
(bad)
jle
ja
xchg
add
jno
sbb
inc
sbb
cmc
jmp
pop
sbb
xor
fs
call
iret
cld
loopne
retf
lock
dec
fdivr
xor
es
mov
mov
movs
mov
js
jmp
ja
sbb
jg
mov
sub
jmp
cmps
ret
inc
out
xchg
inc
js
cmp
pop
test
sub
cmp
push
(bad)
test
jns
call
fstp
sbb
scas
fwait
sub
(bad)
out
gs
aaa
mov
cs
mov
stos
xchg
sub
into
aas
call
pop
sahf
xor
jns
mov
sub
cmp
push
retf
xor
cdq
push
inc
mov
popa
jae
loope
cmp
(bad)
jns
sub
sbb
jmp
test
dec
outs
mov
cmp
idiv
lods
jne
(bad)
lods
xchg
jb
in
mov
stos
add
int3
xchg
les
xchg
outs
inc
dec
addr16
aad
fild
inc
sbb
xchg
stc
mov
mov
stc
sub
scas
or
pop
cs
add
lea
xor
sbb
dec
pop
repnz
lods
and
daa
push
stc
in
shr
aas
bound
iret
aam
pop
sub
push
dec
push
data16
and
sahf
out
inc
cld
jbe
out
popa
mov
rcl
lods
push
xchg
add
jb
fst
cmp
xor
sbb
ret
std
sbb
fs
pop
mov
add
out
data16
gs
and
cmc
repnz
mov
push
shl
cli
call
or
mul
ds
mov
push
mov
mov
retf
fsub
aaa
xchg
push
call
xor
xor
dec
push
repz
and
in
jns
jp
stos
xchg
test
xchg
mov
xchg
lock
(bad)
aas
mov
mov
push
es
into
lods
push
jns
mov
mov
hlt
mov
fwait
pop
addr16
add
xchg
jp
mov
jg
dec
imul
and
retf
mov
and
hlt
sbb
repz
pop
movs
pusha
adc
es
pop
xlat
push
cmp
sub
sbb
lods
(bad)
inc
push
mov
cli
ret
jmp
push
cdq
idiv
inc
sbb
dec
jmp
pop
or
pop
inc
sub
sub
cmp
repnz
out
and
ret
or
jmp
sbb
or
push
(bad)
lods
mov
sahf
fwait
pop
xchg
sub
addr16
stc
ins
out
cwde
rcl
movs
addr16
loop
cmp
jbe
cmp
icebp
pop
cmp
xor
in
mul
or
in
and
jne
inc
cli
push
(bad)
out
fwait
pushf
dec
jno
inc
xchg
mov
int3
dec
dec
sbb
(bad)
or
ja
cmp
dec
ins
imul
xor
test
sar
mov
and
mov
(bad)
cmps
stos
dec
inc
pop
pop
ret
imul
in
lea
or
int3
pop
dec
inc
sti
repz
movs
loopne
test
inc
jecxz
mov
cmp
pushf
loope
sbb
xchg
adc
push
mov
pop
dec
dec
or
into
out
dec
xlat
add
sbb
lahf
pop
xor
jo
mov
fs
pop
mov
sahf
popa
lods
pop
or
popf
enter
sub
or
test
(bad)
lea
aam
inc
pop
mov
outs
xor
push
sbb
aaa
mov
lods
imul
mov
bound
sub
push
inc
not
mov
xchg
and
std
sbb
sub
mov
int3
hlt
jge
pushf
adc
and
jbe
neg
loope
nop
dec
imul
jecxz
xor
stos
lods
fiadd
movs
and
mov
adc
lods
cld
xchg
jmp
imul
nop
sub
xchg
ret
jae
and
(bad)
enter
inc
jb
shr
fiadd
push
repnz
cmps
pusha
mov
jne
pop
shl
mov
add
push
repz
aam
lods
fnstcw
sbb
stc
jb
dec
daa
mov
aad
movs
stc
ss
pop
xor
pop
ins
push
mov
push
dec
pop
sub
movs
aam
xchg
or
xor
adc
mov
push
or
jmp
mov
and
int
mov
sbb
dec
jg
jne
(bad)
mov
fwait
ror
inc
retf
out
pop
xor
mov
push
mov
pmulhuw
std
xchg
or
dec
jae
dec
popa
arpl
push
adc
es
push
or
and
test
push
cmc
jmp
outs
test
cmps
mov
mov
cmps
out
(bad)
inc
sti
lahf
and
mov
outs
xor
nop
ds
inc
movs
shr
xor
retf
push
in
push
jecxz
cmps
push
das
xchg
sub
xchg
pushf
adc
pop
shl
xchg
mov
xor
mov
jae
loopne
aad
dec
test
mov
mov
loope
jo
fnstsw
imul
dec
mov
out
idiv
(bad)
add
loope
sbb
push
cmps
dec
loope
xchg
push
out
adc
jmp
out
outs
mov
lock
mov
dec
inc
adc
mov
xchg
cli
jae
sub
adc
adc
imul
xor
or
xchg
mov
xchg
scas
add
mov
cmps
dec
add
aam
inc
add
ss
pop
xchg
push
lods
dec
stos
fild
loop
sahf
sbb
stos
lods
cmp
pop
xchg
ja
in
jmp
sti
call
inc
xchg
pop
jns
shl
loopne
sub
aas
jp
into
mov
ja
mov
(bad)
std
sbb
mov
js
iret
jl
mov
shl
jae
and
mov
ret
pop
add
xor
pop
cmp
frstor
cmp
enter
iret
stc
mov
test
jmp
cmp
and
pop
aaa
scas
xor
pushf
sbb
(bad)
out
pop
cdq
daa
push
scas
push
push
cmps
inc
xchg
sahf
pop
loop
adc
add
mov
movs
jae
push
mov
pop
rcl
out
sbb
mov
out
dec
cmp
into
sub
push
sub
xlat
shl
out
mov
pop
lea
mov
push
mov
fild
fs
xor
adc
mov
jnp
pop
aaa
scas
and
ins
xlat
sbb
rol
or
cmp
adc
mov
push
arpl
sub
adc
ret
hlt
cs
jmp
push
mov
stc
inc
xchg
popa
xor
xor
jle
data16
xchg
or
pop
xor
push
lods
jbe
cmp
lea
inc
adc
hlt
pop
aas
inc
inc
jns
movs
mov
shl
push
and
fild
ins
jge
out
call
jb
out
push
sbb
jo
leave
xor
loop
(bad)
sahf
in
and
mov
loope
mov
jl
retf
out
sub
out
inc
xchg
mov
cmp
xor
mov
dec
repnz
jo
jl
cwde
retf
mov
outs
ret
jae
in
jle
fwait
dec
retf
jmp
int3
add
mov
repz
jp
mov
xor
dec
push
in
and
nop
hlt
xor
daa
pop
push
test
jbe
pusha
cmps
jl
push
push
rcl
loop
push
in
test
int3
aam
movs
mov
push
jno
movs
sbb
sub
cmp
lods
sub
lods
push
pop
(bad)
push
mov
adc
add
shl
sub
sbb
hlt
mov
xchg
ret
inc
test
and
push
mov
jno
add
sub
cwde
das
add
and
and
jg
xor
sbb
sub
xchg
mov
and
int3
pop
push
push
outs
movs
mov
xor
and
add
xchg
push
mov
loope
clc
push
test
pop
in
js
push
sub
sub
out
call
cmp
enter
scas
mov
jno
bound
div
stos
adc
shr
out
ds
mov
sahf
mov
xor
sbb
iret
sub
lds
mov
sbb
aam
fisub
mov
xlat
lahf
jmp
sbb
inc
ret
jle
icebp
cmps
xor
mov
mov
fild
daa
and
fs
xor
jnp
dec
pop
(bad)
in
stc
movs
push
jno
xchg
popf
mov
push
mov
xchg
push
adc
push
ja
mov
mov
xchg
test
sub
test
sub
(bad)
cmp
aaa
adc
(bad)
mov
stc
xlat
cmp
or
loope
adc
test
lahf
fs
ret
popa
jae
shr
dec
add
rcl
mov
test
mov
daa
mov
xor
jp
(bad)
add
jmp
cmp
repz
mov
jns
outs
cmp
jne
fcom
cmp
cmp
sbb
jmp
and
push
fld
push
cmp
sub
adc
icebp
sar
jl
xor
loopne
sar
movs
clc
movs
push
aaa
fwait
sbb
push
dec
out
pop
pop
iret
daa
fsub
dec
inc
push
imul
scas
sbb
fcom
inc
shl
cmp
adc
aaa
pop
pop
sub
adc
pop
lahf
lock
pop
adc
dec
push
mov
fiadd
and
sub
and
out
shl
push
mov
sub
adc
jle
pop
jns
and
push
addr16
xor
enter
mov
sbb
push
cmp
and
fwait
arpl
adc
stc
in
push
push
dec
xorps
mov
ja
nop
push
mov
(bad)
xor
ds
hlt
pop
out
xchg
inc
mov
daa
push
or
test
jge
ret
into
out
xor
imul
fadd
into
xchg
arpl
mov
pop
pop
out
jmp
xor
sub
pushf
popa
mov
mov
cmp
xor
faddp
inc
in
mov
jb
push
mov
push
jge
pop
dec
je
push
pushf
and
loope
inc
(bad)
fdivr
push
pop
ins
xor
inc
es
(bad)
xor
aad
std
pop
icebp
sub
fsubr
mov
inc
xor
mov
ja
mov
mov
iret
push
mov
and
push
mov
repnz
int3
and
ret
sub
out
mov
xor
jl
loope
mov
retf
jmp
lods
out
xor
retf
loope
ja
pop
adc
cs
cmps
or
jmp
loopne
pop
stc
push
push
add
sub
jbe
aad
mov
lods
jecxz
adc
pop
pushf
push
cmp
pushf
data16
jae
fsub
in
imul
int
dec
push
loop
sub
dec
sbb
cmp
push
daa
mov
push
add
jno
xor
lods
cmp
push
pop
sbb
add
bound
cmps
js
pop
sub
daa
outs
sub
dec
dec
sub
cwde
or
outs
into
adc
xchg
inc
jecxz
je
daa
loop
xchg
xchg
pop
inc
ds
cli
dec
mov
popa
dec
scas
lods
mov
sub
jl
or
fstp
fcmovb
repnz
jecxz
add
fistp
lds
fsub
repz
bnd
ret
pop
arpl
dec
lods
jecxz
sub
inc
xchg
nop
xchg
mov
push
ret
loopne
push
sbb
add
xlat
pop
(bad)
xor
push
lea
dec
popf
cs
jns
cmp
sbb
add
retf
les
loope
push
mov
lods
adc
push
mov
loopne
out
dec
les
dec
sub
inc
das
rol
jae
rol
iret
mov
fbld
movs
aas
imul
mov
push
ret
(bad)
jle
int3
aas
mov
push
scas
pop
xor
outs
and
cli
sub
call
jg
and
lea
mov
pop
fcomp
mov
cmp
adc
fwait
push
xchg
sub
retf
add
push
nop
fwait
lahf
push
arpl
dec
gs
add
adc
into
repz
push
ret
inc
aam
in
ror
dec
xor
mov
imul
dec
shr
push
scas
mov
aas
mov
or
fcomp
ja
cmp
and
pop
shl
cs
shl
push
xor
imul
js
and
nop
rcr
in
mov
mov
out
sub
mov
aas
mov
sbb
or
fcomp
cmp
call
pop
pop
push
arpl
scas
add
pop
sub
push
inc
dec
sub
and
sbb
jl
add
ficomp
jp
adc
sbb
sub
fwait
sub
pop
imul
inc
bswap
xchg
jbe
push
jns
retf
popf
fst
adc
outs
out
mov
mov
std
rcl
ja
stos
mov
pop
sbb
jg
mov
iret
(bad)
xchg
and
neg
mov
daa
mov
mov
jne
pop
and
sub
cmp
repnz
mov
push
mov
lahf
mov
movs
mov
xlat
inc
iret
mov
popa
(bad)
(bad)
sti
inc
fsubr
fwait
dec
outs
(bad)
jmp
sti
push
jle
cmp
sub
jle
cli
xchg
sbb
push
int3
shl
int
lahf
cmp
jecxz
cmp
into
push
jecxz
stc
ds
sbb
rcl
das
lods
push
ror
inc
icebp
mov
shl
fidivr
push
adc
xchg
or
pop
scas
adc
inc
std
or
sub
push
xchg
es
jl
addr16
popa
and
xor
nop
(bad)
sbb
xlat
and
fidiv
sub
mov
ret
je
fs
(bad)
aaa
pop
cmps
aas
mov
das
jecxz
xor
cmp
push
xchg
shl
rcr
cmp
aaa
sbb
and
(bad)
xchg
adc
in
adc
cld
fdivr
sahf
cmp
push
mov
lea
enter
mov
aam
sti
inc
hlt
sbb
pop
into
mov
inc
xchg
pop
pop
inc
outs
int3
jb
cld
les
retf
jnp
sbb
bound
push
xchg
push
lahf
ret
cmp
outs
jmp
enter
pop
sbb
cmc
jo
ins
je
push
fidiv
test
adc
pop
fsubr
jmp
push
push
shl
mov
test
cmps
std
data16
jecxz
jne
(bad)
sbb
inc
jnp
xchg
add
sti
mov
fwait
mov
inc
stc
mov
push
sbb
lods
test
mov
and
xor
mov
stc
fcomi
add
pop
js
jge
pop
test
mov
int
mov
repz
popf
leave
scas
pop
and
test
adc
add
inc
sbb
mov
push
mov
rcl
pop
cmp
adc
sbb
(bad)
cdq
(bad)
in
and
cli
adc
adc
cmp
out
nop
add
stos
jbe
inc
js
in
dec
daa
daa
adc
pushf
loopne
sar
in
push
add
cmc
pop
or
lods
sub
or
sub
or
mov
and
sti
out
test
clc
pop
clc
pop
stc
loope
outs
(bad)
hlt
xchg
sbb
ret
lods
out
jg
sub
aas
addr16
iret
mov
cmp
clc
jbe
cmp
div
fwait
ret
jl
sub
jo
mov
and
rcr
xchg
jns
jmp
jne
daa
bound
mov
stc
out
jg
stc
out
jg
pop
add
inc
sbb
adc
jno
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
(bad)
test
or
add
push
rcl
call
sbb
xor
add
push
sbb
ja
xchg
push
dec
adc
and
cmc
cmp
add
sub
in
add
mov
test
cmp
ficom
hlt
cwde
fimul
bound
iret
pop
iret
std
jp
inc
div
mov
loopne
fwait
movs
jno
jg
data16
mov
les
js
fisubr
jo
ins
jle
fild
popa
and
leave
cmp
pop
xor
pop
sub
fmul
jecxz
push
inc
out
push
sub
bound
shl
and
test
in
push
mov
inc
(bad)
rcr
xor
pop
rcr
push
test
push
cmp
cmp
or
je
out
cld
out
mov
adc
mov
shl
xor
mov
cmp
dec
cld
lods
adc
push
add
xor
call
mov
cmps
ins
sub
or
pop
xchg
icebp
push
xor
and
aas
data16
inc
mov
test
aas
neg
arpl
push
adc
inc
jbe
sub
call
mov
lods
mov
lods
scas
sbb
hlt
mov
xchg
(bad)
jmp
cmp
nop
cmp
or
pop
sahf
outs
push
aas
cli
sbb
jl
je
or
dec
bsf
xchg
out
div
adc
adc
or
(bad)
std
retf
xchg
call
and
lock
in
sti
add
sahf
pushf
cmp
in
mov
(bad)
pop
ins
aam
xchg
pop
fldenv
ds
add
mov
frstor
mov
push
jmp
cmp
cmps
jmp
jmp
push
sbb
mov
cli
popa
cs
aad
dec
int3
fsubr
mov
ins
fneni(8087
scas
stc
jp
mov
mov
imul
dec
cmp
mov
dec
mov
out
pop
pop
and
mov
add
xchg
in
xchg
sub
add
dec
push
sar
jne
cmp
lods
push
fisttp
add
lahf
shl
xor
sbb
mov
xor
les
push
pop
mov
cmp
push
pop
aas
in
call
cmps
pminub
gs
pop
mov
mov
jb
fcomip
push
call
mov
jns
sub
mov
scas
adc
iret
and
in
push
lods
cmp
sahf
idiv
cmp
mov
adc
(bad)
imul
inc
into
and
cdq
jns
cmp
mov
jae
jns
lahf
push
and
cmps
inc
sub
or
xor
loope
jmp
add
aas
pop
fidiv
imul
gs
lea
add
aad
iret
jmp
pop
jg
ror
mov
add
or
into
out
lods
scas
imul
cmp
sbb
fcmovu
push
and
pop
or
pop
scas
enter
pop
xor
jns
dec
idiv
and
test
push
mov
push
mov
imul
mov
push
pop
leave
lds
popa
imul
pop
xchg
dec
xor
fucomip
add
pop
push
mov
push
pop
cdq
enter
jle
push
push
imul
dec
in
and
aaa
mov
mov
addr16
cmps
mov
pop
fs
ret
pop
scas
test
das
ret
inc
dec
data16
mov
es
mov
das
bound
xchg
adc
das
ret
in
sub
test
sub
loop
sub
int
and
aad
cwde
jns
push
dec
test
sub
mov
mov
ins
arpl
jns
and
fcomp
movs
pop
retf
xchg
inc
jmp
mov
push
mov
push
das
add
adc
xchg
jno
xchg
jne
adc
imul
fnstsw
fcom
cmps
jl
xor
push
movs
cld
clc
cmp
bound
jmp
imul
push
(bad)
xor
fsub
adc
test
aad
mov
icebp
mov
lock
mov
push
daa
or
std
js
dec
adc
push
es
scas
dec
pusha
ds
inc
mov
xor
dec
inc
ret
or
mov
and
pop
sub
adc
mov
dec
ja
adc
ret
into
popa
jmp
in
ds
and
out
jns
lds
xchg
(bad)
jmp
cs
jle
sub
popa
jbe
mov
aam
fs
xchg
push
xor
cwde
xor
arpl
inc
dec
sub
xor
clc
call
mov
repz
mov
loopne
xor
push
es
pop
push
jle
and
sub
pop
xchg
into
adc
sub
in
loop
cmp
xlat
mov
xchg
imul
popa
cmp
dec
(bad)
sub
and
popa
out
ret
aad
fidivr
neg
inc
in
cdq
cdq
nop
adc
ds
dec
and
push
dec
mov
clc
inc
mov
dec
cmps
and
pop
sahf
rcl
add
int3
xor
(bad)
jns
adc
cmp
adc
add
cmp
js
xchg
or
je
jbe
outs
sub
push
and
sti
lods
inc
pop
ds
sub
bts
jmp
call
fdivrp
sbb
push
adc
scas
adc
xchg
mov
pop
jbe
loope
es
das
stc
aam
xchg
dec
enter
(bad)
enter
int
ret
mov
lahf
pop
js
ret
or
xchg
adc
inc
mov
add
rcr
fadd
test
popa
sub
les
sub
xor
sbb
mov
or
and
xchg
and
shl
or
loope
push
jb
sbb
es
xchg
mov
je
sub
push
imul
lock
jp
arpl
add
rcl
add
and
pop
mov
xchg
cld
stos
add
aad
pop
fist
aaa
mov
stos
rcr
lea
push
and
pop
sub
push
jge
fwait
imul
div
push
ret
popf
mov
enter
mov
aaa
sbb
adc
or
rcl
ins
scas
imul
mov
xchg
enter
in
add
mov
or
adc
xchg
inc
sbb
or
mov
mov
pop
cli
push
retf
jle
icebp
int3
or
bnd
xor
mov
add
inc
sar
add
std
daa
(bad)
xor
mov
fld
je
pop
rcr
ins
and
ss
aam
in
push
loop
mov
add
jmp
push
stos
inc
in
inc
inc
cmps
push
cmps
adc
mov
jmp
scas
stc
mov
jmp
pop
pop
and
cwde
imul
les
push
cmp
cmps
adc
mov
sbb
jp
mov
mov
es
in
dec
mov
adc
mov
sar
mov
aaa
loope
cs
stos
mov
div
in
test
mov
mov
js
cmp
imul
stos
ficomp
cmp
push
inc
jmp
pusha
inc
fdiv
mov
jb
scas
sub
push
js
sub
fistp
sub
inc
fcom
mov
and
ins
xchg
jecxz
mov
xchg
adc
cli
dec
push
mov
test
test
test
fcmovnb
and
jne
mov
jge
dec
lods
pusha
aad
mov
test
and
push
mov
aam
adc
lahf
mov
inc
cmps
sub
popa
lahf
sbb
movs
sub
jle
jg
pop
lods
mov
mov
mov
dec
sub
scas
or
and
enter
(bad)
ins
lods
cld
lock
xor
pop
dec
push
ror
jmp
mov
push
jnp
mov
movs
cdq
mov
pop
sbb
movs
and
push
jmp
repnz
xchg
xchg
loop
xor
nop
push
mov
aad
fucomip
or
dec
dec
add
xchg
rcl
adc
dec
and
xlat
cli
xor
cli
mov
nop
push
mov
and
inc
clc
mov
mov
in
in
jnp
jnp
jmp
push
xchg
xchg
mov
gs
stos
mov
jp
(bad)
jmp
js
and
in
gs
push
idiv
aaa
push
sbb
test
imul
mov
cmp
adc
fst
movs
jmp
add
sub
repnz
xor
inc
iret
(bad)
pop
sub
test
dec
xchg
popa
lahf
xchg
fs
pop
push
push
dec
pushf
mov
jg
xchg
retf
daa
imul
sub
in
dec
in
jno
imul
xchg
cmps
dec
pop
ja
mov
dec
xlat
or
push
cwde
call
ins
xchg
popa
js
sub
aaa
xor
hlt
mul
ficom
jmp
mov
jle
ins
bsr
pop
sub
jns
fisttp
pop
cmp
jo
pop
and
std
hlt
mov
mov
fistp
cs
xlat
xor
imul
int
retf
cmp
aad
pushf
adc
arpl
cmp
mov
fisttp
(bad)
frstor
loope
clc
test
arpl
push
mov
push
mov
scas
mov
stc
into
or
add
pop
pop
std
inc
cdq
in
imul
js
(bad)
cld
jae
push
jmp
mov
xchg
push
inc
es
cmp
pop
jp
pop
mov
inc
mov
jbe
mov
xchg
and
daa
dec
sbb
imul
xchg
and
fsub
sar
das
das
inc
dec
(bad)
xchg
retf
movs
push
push
xchg
mov
in
imul
pop
xor
adc
inc
pop
mov
and
movs
pop
dec
fcom
jle
adc
pop
icebp
lahf
xor
sub
pushf
mov
pop
push
xor
or
xor
mov
(bad)
dec
lea
outs
xchg
sub
jp
rcr
mov
add
jbe
ret
fisubr
mov
push
sub
xor
xchg
push
push
mov
stc
fwait
call
ins
outs
jmp
movs
sub
mov
inc
xchg
mov
pop
test
mov
mov
loop
movs
xchg
clc
sbb
mov
retf
fwait
rep
test
push
jmp
test
leave
pop
pop
pop
rcl
mov
dec
cmp
fldcw
rcr
jp
pop
lahf
(bad)
push
xor
test
pop
mul
clc
dec
jnp
stc
repnz
aas
jno
aaa
bound
rol
pop
sar
jl
sbb
out
push
pop
fidiv
sbb
mov
cld
or
pop
jge
test
out
int
xor
sub
dec
jmp
cs
fisttp
xor
inc
xlat
aad
bswap
loopne
or
pop
in
dec
inc
push
sub
adc
mov
jb
mov
rol
add
(bad)
and
mov
jae
adc
cdq
mov
lea
call
sbb
mov
rcl
retf
cmp
(bad)
cmc
addr16
scas
das
outs
and
cmps
mov
adc
xor
ins
sbb
mov
or
das
cmp
push
mov
cmp
xor
mov
xchg
mov
xchg
iret
loope
repz
lahf
pop
jo
(bad)
into
mov
sub
cmp
ins
and
call
pop
jmp
scas
cmp
sub
sbb
scas
and
retf
iret
imul
in
inc
mov
xchg
fdiv
pop
test
pop
push
sbb
adc
(bad)
lock
and
out
repz
pop
daa
mov
(bad)
test
call
mov
aas
lea
dec
cwde
aaa
ds
not
xor
cwde
xor
lods
jns
int
cmps
dec
cmp
fst
scas
mov
jmp
sar
sub
jae
scas
out
lahf
jne
call
lea
or
push
xchg
in
je
lahf
test
ds
stos
jno
mov
cmp
inc
or
jo
mov
lahf
xchg
daa
ds
cld
fistp
push
inc
xchg
pop
aad
(bad)
pop
mov
xchg
std
inc
or
idiv
inc
movzx
mov
stos
mov
into
mov
(bad)
mov
pop
mov
cmp
jns
sti
adc
pop
dec
pop
dec
jecxz
imul
xchg
xchg
push
(bad)
mov
push
pop
mov
in
stc
mov
not
xlat
iret
jp
mov
movs
lds
pop
fild
mov
stos
inc
sbb
lock
fisttp
push
sbb
jne
lahf
jp
jecxz
mov
pop
stos
jmp
mov
push
lahf
arpl
adc
sub
mov
xor
or
add
add
and
add
adc
jmp
pop
push
or
inc
(bad)
adc
sub
jae
call
push
fmul
sub
sbb
jnp
call
outs
das
or
cli
inc
mov
dec
dec
mov
test
mov
xchg
pop
and
xlat
test
outs
inc
dec
push
ins
(bad)
leave
lea
xor
push
ds
mov
(bad)
jne
xor
xor
jp
out
pop
(bad)
retf
or
dec
mov
test
dec
lock
out
movs
(bad)
sar
add
adc
lods
mov
fisttp
jge
rcl
(bad)
dec
and
jmp
test
js
(bad)
jle
imul
fsub
fild
cs
daa
and
dec
arpl
repnz
je
or
js
dec
in
cmc
push
mov
add
inc
das
imul
pop
mov
dec
out
or
stos
das
stos
arpl
cld
imul
mov
sbb
pop
pop
adc
push
adc
add
or
ret
and
adc
inc
xor
lahf
cmp
sub
addr16
inc
xchg
imul
lds
and
or
adc
xchg
cmp
push
add
mov
push
mov
adc
sub
jne
fsubrp
mov
cmp
xchg
mov
js
nop
lock
inc
je
push
call
fidiv
push
(bad)
idiv
lods
dec
mov
inc
gs
push
mov
fucomip
pop
cmp
je
cmp
mov
mov
fimul
push
cld
data16
and
arpl
pop
repnz
xlat
rcl
sub
cmps
inc
(bad)
in
xor
loop
fidivr
cmp
fnstcw
dec
pop
mov
arpl
xchg
(bad)
mov
int3
mov
ss
sub
jmp
jge
fs
and
pop
cmps
(bad)
fs
inc
xchg
repz
jne
sbb
xchg
ins
aam
mov
ins
push
xor
add
pop
repnz
sub
sbb
icebp
lds
scas
mov
in
pushf
sbb
jle
retf
and
push
aad
cs
jmp
rcr
adc
xor
call
mov
mov
adc
jge
and
popf
dec
inc
or
movs
iret
movs
or
mov
lods
imul
mov
push
push
scas
test
iret
push
push
cdq
sbb
cmp
jne
das
sub
in
pop
push
adc
mov
mov
in
pop
scas
dec
maskmovq
jno
lea
cmps
push
mov
mov
in
fsub
stc
ja
jmp
(bad)
sti
mov
jns
cmp
mov
mov
daa
neg
xchg
(bad)
test
ins
in
push
icebp
sub
fnstenv
rcr
mov
mov
(bad)
cli
bswap
mov
add
fild
mov
mov
gs
lahf
shr
pop
test
dec
inc
push
hlt
pop
fdivr
das
and
dec
ins
fdiv
shr
enter
and
(bad)
cld
repz
aas
(bad)
cld
repz
aas
jmp
das
ret
or
repnz
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
rol
loopne
(bad)
cld
(bad)
es
pop
rcr
int3
xor
xor
jmp
mov
pushf
cmps
dec
(bad)
test
repnz
jns
sub
push
mov
jo
pop
sub
push
inc
dec
in
das
hlt
leave
cdq
push
jbe
hlt
xchg
jo
mov
adc
xor
jl
icebp
scas
aad
dec
mov
arpl
or
push
mov
shl
dec
ret
inc
and
push
or
jno
test
lea
es
mov
xor
aas
mov
mov
fadd
call
scas
push
in
jae
push
dec
loope
push
xchg
idiv
and
pop
xchg
cmp
xchg
les
pop
pop
cmp
xchg
push
dec
int3
shl
xor
jp
jg
jmp
push
aam
popa
out
jnp
mov
scas
ja
fsub
push
add
cmps
mov
lds
mov
pop
lock
mov
mov
popf
and
mov
push
fnstsw
ss
movs
pop
inc
dec
test
mov
push
xchg
mov
cmp
inc
mov
out
pop
cmp
ja
add
out
dec
(bad)
out
loopne
sub
push
mov
sbb
repz
daa
loop
movs
adc
adc
and
or
mov
mov
js
add
sub
mov
jbe
retf
xchg
(bad)
fwait
mov
retf
pushf
jp
pop
and
mov
cmps
loope
or
push
mov
cmps
xor
mov
nop
inc
or
cmps
repz
aad
adc
push
xor
scas
adc
sbb
push
jmp
pop
sbb
mov
mov
lods
push
leave
(bad)
lds
fwait
(bad)
leave
movs
int
pop
xchg
fwait
gs
test
ret
fistp
push
inc
sbb
pop
sub
rcl
pop
jnp
outs
mov
adc
in
loop
or
cli
mov
lock
sub
(bad)
push
pop
cmp
daa
imul
pop
cmc
gs
das
xchg
neg
mov
dec
in
or
stos
xor
sub
(bad)
es
xchg
adc
int3
sahf
add
fadd
dec
dec
sub
hlt
sub
push
rol
(bad)
pop
push
imul
movs
push
sar
jnp
mov
mov
dec
ja
mov
int3
adc
imul
push
mov
sti
jp
mov
or
nop
loopne
ss
jge
or
out
out
xor
fs
xchg
sub
aam
mov
out
gs
ret
inc
cmps
mov
(bad)
int
mulps
or
xchg
push
rol
pop
push
cld
jmp
adc
mov
jmp
xchg
ins
jle
or
sbb
sbb
outs
cli
in
into
out
outs
cmps
popa
mov
ss
ror
xor
sub
jg
pop
gs
arpl
ds
mov
push
and
mov
add
(bad)
dec
add
mov
pop
lahf
fnstsw
xor
or
adc
lods
mov
xor
iret
(bad)
xchg
inc
push
pop
addr16
inc
dec
lods
xlat
ds
jmp
mov
cld
adc
sahf
sbb
push
int
mov
xchg
cmps
les
push
mov
mov
and
add
jb
jl
scas
ret
sti
pop
sub
sub
pusha
in
pop
dec
xchg
jmp
mov
scas
data16
ja
adc
das
jnp
pop
ins
lds
dec
pop
call
sbb
fistp
in
xchg
retf
push
mov
stc
stos
ins
daa
xchg
xchg
pop
xchg
imul
(bad)
push
(bad)
movs
push
push
pushf
or
jle
aas
push
push
inc
mov
sbb
sahf
ret
adc
shr
sub
xchg
in
popa
out
or
mov
mov
adc
rcl
shr
cmp
les
jg
es
ja
js
xchg
inc
ins
xchg
xchg
aad
cmp
push
cmp
push
inc
dec
movs
inc
xchg
rcr
mov
outs
pop
jmp
pop
fwait
or
push
pop
lods
xchg
jnp
xor
or
aas
(bad)
push
fcom
mov
cmps
ret
mov
(bad)
cmp
jge
popa
sub
gs
shl
jmp
dec
sbb
int
inc
xor
pop
adc
aas
or
jnp
aam
ds
adc
and
sbb
in
(bad)
mov
jno
push
xchg
lods
mov
sti
jne
jecxz
call
(bad)
xor
std
add
imul
loop
and
add
test
test
cmp
mov
mov
xchg
inc
inc
sbb
in
out
repz
je
(bad)
call
mul
loop
in
loope
push
jle
(bad)
mov
leave
pop
lahf
sub
mov
leave
push
data16
test
movs
test
push
icebp
popf
mov
loope
lods
mov
push
gs
lock
sub
push
push
mov
xchg
imul
add
push
or
pop
test
sbb
or
add
pop
ins
xor
ror
or
jne
sub
outs
test
and
(bad)
ins
mov
or
sub
pushf
ss
add
jo
leave
shr
mov
fimul
ins
(bad)
push
cs
mov
fcomp
cmp
sar
push
lods
in
add
mov
lock
mov
pop
out
cmp
push
fcomp
fcomp
stos
jl
lods
ret
ins
imul
or
inc
and
out
fwait
nop
call
pop
push
loope
in
mov
arpl
inc
imul
in
mov
out
fwait
loope
dec
xchg
jmp
outs
and
loop
cmps
mov
fild
outs
push
in
ins
and
pushf
fnsave
jmp
pop
pop
loopne
cmp
dec
outs
dec
inc
in
xchg
push
fsubr
xchg
jge
aas
(bad)
int3
cwde
in
jo
fs
mov
ret
daa
(bad)
ins
and
or
pushf
pop
cmovo
xor
sbb
out
mov
mov
leave
sbb
jmp
dec
cmp
sub
dec
ja
loop
push
bound
jo
jge
jnp
popa
cdq
sahf
ja
cli
aad
test
jmp
xor
jl
clc
js
inc
stc
pop
push
sar
std
fstp
pop
std
xor
mov
mov
test
xor
ins
aaa
cmp
ins
xchg
lods
gs
into
(bad)
not
shl
and
pop
stc
and
out
mov
shl
or
inc
mov
outs
inc
sbb
sbb
mov
sub
xchg
aam
jns
or
jae
movs
mov
out
fcomip
popf
cmps
sub
fnsave
push
retf
data16
dec
(bad)
mov
mov
xchg
inc
jle
add
sub
sub
jmp
push
cmps
mov
into
push
int
ficomp
push
ja
je
out
sbb
scas
cmp
icebp
inc
jmp
sub
sbb
or
iret
repnz
gs
arpl
and
xor
jmp
mov
jnp
inc
imul
in
pop
cmp
dec
test
xchg
nop
sub
inc
add
adc
cmps
iret
dec
dec
cmp
push
pop
mov
sar
in
mov
pop
icebp
adc
in
fcmovnbe
sti
dec
sbb
xchg
bnd
add
push
adc
bound
enter
lahf
push
mov
sbb
jp
sar
mov
adc
into
lock
and
fwait
push
push
mov
jbe
or
call
call
mov
std
in
ss
fnsave
sti
mov
pusha
cdq
in
sar
cmp
ficomp
rcl
mov
in
cmp
pop
add
lods
adc
cmc
dec
fs
push
mov
push
(bad)
int
add
out
xor
rol
icebp
xor
cmp
movs
fist
iret
cwde
sbb
xor
push
clc
fnsave
push
sub
xchg
jge
outs
test
add
outs
cmp
xchg
jl
test
adc
dec
cmp
inc
dec
ret
mov
aad
mov
adc
mov
push
(bad)
mov
call
mov
dec
pop
inc
retf
outs
inc
mov
js
ins
jg
inc
mov
repnz
mov
and
mov
xor
add
mov
ins
jb
and
fimul
sti
xchg
mov
gs
ret
jb
or
dec
xor
sub
cli
loopne
retf
mov
xchg
aaa
mov
popf
mov
stos
inc
lods
xor
sbb
fstp
xor
sub
xor
sbb
sbb
fdivr
pop
lods
pop
mov
sub
mov
sub
pop
rep
push
mov
ins
sar
jl
and
mov
nop
push
jo
(bad)
adc
mov
sbb
(bad)
xor
(bad)
adc
out
in
(bad)
stc
in
jo
xor
rcr
push
jae
jecxz
jae
or
call
mov
add
call
lahf
mov
clc
sub
mov
sbb
mov
sar
and
xchg
aad
sub
(bad)
lds
and
or
mov
mov
(bad)
iret
or
cmp
test
jno
adc
imul
cmp
pop
pop
jmp
pop
adc
leave
xchg
and
jmp
cld
movs
and
stos
or
stc
pop
or
pop
(bad)
pop
jge
xchg
cmp
and
ret
mov
dec
sub
lea
in
repnz
aad
add
in
xor
mov
jbe
outs
out
and
mov
lahf
mov
aam
xchg
shl
fadd
in
js
xchg
mov
(bad)
and
rol
or
xlat
push
adc
adc
mov
movs
add
std
mul
pushf
ror
xchg
push
push
cmc
xchg
push
jmp
rol
in
fistp
and
(bad)
into
rol
enter
cld
lahf
arpl
mov
aas
sub
mov
mov
jle
mov
mov
cmp
leave
ret
jnp
push
pushf
and
jo
jns
outs
pop
add
pop
xchg
mov
(bad)
retf
cmp
mov
(bad)
test
rcl
push
pop
pop
test
fidivr
mov
push
jno
(bad)
mov
sbb
movs
shr
(bad)
movs
cwde
jg
push
ficom
mov
mov
movs
fstp
xchg
push
xchg
mov
or
pop
or
sahf
inc
psubusb
jne
movs
dec
xor
mov
dec
inc
xchg
jge
cld
xor
cmp
mov
daa
sub
xchg
add
outs
aam
adc
jb
dec
sahf
mov
imul
hlt
cmps
cmp
push
mov
loopne
leave
jno
iret
cli
repz
sbb
fisttp
pop
jmp
add
xlat
sub
sbb
fidivr
xor
lods
ins
adc
mov
scas
je
inc
scas
pop
push
iret
nop
cmps
out
jne
add
stos
jge
xchg
stos
aad
lods
rol
push
xchg
add
jmp
mov
pop
aad
js
pop
call
mov
xchg
dec
aas
movs
sub
fwait
aad
pop
clc
adc
jnp
or
mov
mov
shl
jb
in
mov
(bad)
leave
data16
in
and
cmp
dec
je
lock
inc
xchg
call
inc
hlt
popa
jns
jno
(bad)
pop
sbb
frstor
js
cmp
mov
push
cld
std
pop
stos
inc
scas
mov
mov
outs
xchg
add
pop
adc
nop
cld
movs
and
test
add
or
adc
mov
push
mov
imul
jns
outs
push
out
pushf
mov
shr
or
in
stc
xchg
and
clc
movs
inc
iret
push
pop
jg
or
aas
jl
mov
cmp
add
mov
ret
push
jbe
sbb
xchg
add
jmp
test
cdq
dec
sbb
mov
mov
or
mov
iret
mov
retf
ins
mov
test
into
scas
clc
xor
xchg
scas
xchg
jnp
inc
pop
cmp
and
int
or
(bad)
jecxz
stos
sbb
inc
(bad)
cmp
(bad)
in
ins
xchg
imul
out
lds
or
mov
leave
in
aas
scas
pop
mov
out
ret
jnp
icebp
or
test
in
repz
ret
(bad)
pop
cmp
mov
xor
adc
xor
jle
mov
rol
push
jo
pushf
mul
movs
loope
or
and
cmp
adc
and
xor
inc
cmp
(bad)
fs
scas
push
ret
mov
inc
jbe
adc
and
mov
mov
xchg
repz
std
fstp
pop
cmp
add
inc
add
je
dec
popf
cmp
add
out
or
jae
adc
add
jl
daa
bound
xchg
add
mov
fwait
push
imul
neg
pushf
clc
clc
bound
inc
jmp
mov
fbstp
jnp
add
fdiv
test
sbb
mov
inc
xor
div
push
pusha
dec
adc
or
pop
int3
(bad)
cld
add
jns
mov
shl
mov
push
xor
icebp
pop
(bad)
mov
and
push
push
outs
inc
mov
sti
jmp
dec
jecxz
not
arpl
pushf
add
or
cli
cmp
into
jno
(bad)
call
mov
xor
xchg
ret
jmp
adc
outs
xchg
mov
mov
retf
ins
push
push
jle
repnz
data16
loop
pusha
mov
pop
arpl
test
fild
lods
xchg
je
sti
sbb
pop
ret
data16
cmp
xchg
cmp
outs
inc
imul
pusha
call
cld
sub
sbb
sbb
mov
les
pusha
pusha
jo
add
mov
clc
xor
daa
mul
movs
xchg
imul
xor
lea
sub
inc
stc
jl
push
mov
aam
test
xchg
popa
push
cli
xor
lock
dec
sub
push
lds
dec
ficomp
push
dec
adc
mov
popf
mov
push
xchg
sbb
ret
mov
clc
mov
add
add
dec
fisub
jecxz
mov
inc
xchg
loopne
xchg
mov
pop
and
or
bnd
js
adc
sub
in
fld
dec
popf
and
popa
lds
rcr
xchg
inc
dec
ret
imul
int
adc
cmp
jecxz
dec
dec
mov
mov
shr
scas
jo
fbstp
in
les
push
cmps
mov
inc
jno
in
push
in
out
push
(bad)
call
test
and
push
scas
cmp
jle
sti
fs
pop
jmp
dec
mov
retf
out
jp
nop
or
rcl
ret
mov
jb
jnp
adc
pop
and
mov
and
xchg
pop
cmp
leave
jecxz
sub
mov
ret
mov
mov
imul
push
rcr
stc
xor
loop
iret
imul
shr
rcr
mov
pop
dec
jg
ds
add
push
mov
xchg
mov
stc
and
loop
lds
fnstenv
rcl
leave
ins
push
mul
ret
(bad)
cmc
and
hlt
and
jecxz
pop
ficomp
int3
mov
lahf
cmp
or
ins
jmp
mov
lahf
push
xor
enter
mov
jge
into
pusha
test
xor
mov
mov
xchg
pop
in
adc
and
ss
test
out
sahf
out
and
jmp
dec
cmp
stos
popf
imul
ins
mov
mov
push
xchg
mov
sub
sub
sar
cld
repz
aas
(bad)
cld
repz
push
and
dec
sub
(bad)
jge
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
les
add
add
or
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
aad
aas
sbb
ret
shl
cwde
call
cmp
(bad)
mov
jmp
ret
jo
mov
mov
jl
leave
xor
(bad)
icebp
in
std
aas
jl
pop
add
call
sahf
fmul
adc
ins
mov
lea
mov
sub
arpl
(bad)
imul
call
mov
mov
aas
cmp
test
test
psubsw
test
(bad)
cmps
and
add
(bad)
sub
and
push
jno
cs
dec
sub
ins
push
push
mov
aas
jns
sub
shl
mov
fild
adc
jno
push
into
and
cmp
out
cmp
das
pop
xchg
pop
cdq
shl
add
addr16
mov
xchg
pushf
pop
mov
js
and
mov
and
loopne
sbb
je
in
imul
nop
dec
cmp
inc
aas
clc
pop
icebp
iret
cli
sbb
cmp
jbe
dec
retf
pop
int
test
push
fucom
sbb
rol
xor
mov
mov
jg
pop
dec
mov
dec
ins
cmc
xchg
add
leave
arpl
add
jmp
nop
or
dec
adc
or
pusha
fdivr
call
cmc
cmp
dec
add
xchg
jmp
lods
repnz
and
push
lahf
dec
or
icebp
mov
mov
das
pop
into
test
sbb
mov
sbb
pop
mov
push
lock
or
push
out
jmp
fidiv
lds
sub
aaa
arpl
sahf
adc
ficomp
cmp
add
(bad)
sub
mov
fldenv
jecxz
call
in
push
jns
daa
call
push
push
or
pop
push
fwait
pop
jp
rol
push
or
fwait
inc
or
paddsb
shr
xor
cmps
cli
dec
dec
(bad)
adc
iret
shl
sub
popa
pop
pop
add
dec
mov
mov
xor
push
mov
and
or
and
sub
push
iret
sar
cs
dec
mov
sti
add
cmp
std
and
sub
xchg
xchg
or
jno
lds
leave
test
mov
push
rol
inc
out
adc
or
mov
and
or
or
xchg
std
adc
mov
les
add
call
in
cmc
xchg
lea
ins
add
push
sar
stc
mov
mov
push
out
mov
fnstcw
sbb
sti
xor
scas
xor
scas
cwde
int3
or
dec
mov
and
sub
pusha
lods
cmps
js
xor
fsub
inc
cld
icebp
push
and
pop
icebp
repnz
shl
cs
xchg
and
push
mov
and
outs
ret
loope
sti
mov
sar
xchg
pop
aad
es
(bad)
pop
mov
out
loope
cs
inc
lahf
les
lahf
push
mov
in
stos
jge
cmp
daa
cld
or
pop
(bad)
xchg
retf
sbb
cmp
fst
ins
push
sbb
loop
fdivrp
sub
jbe
je
pop
mov
cmp
call
pop
test
push
cmc
xor
arpl
pop
repnz
retf
xchg
and
adc
pop
aam
fmul
xchg
popa
adc
lock
fsub
dec
ss
add
mov
aam
ret
xchg
add
sub
loop
sub
popa
xor
in
ins
fimul
or
loopne
pop
movs
stos
stc
xchg
mov
clc
scas
(bad)
call
ss
inc
and
aas
idiv
jmp
jle
xor
nop
mov
fsubr
mov
ins
adc
repnz
pop
scas
cld
xor
nop
stos
push
cdq
inc
js
and
arpl
clc
adc
lods
mov
sbb
add
cdq
mov
mov
jg
stos
outs
xor
lahf
cli
repz
xor
pop
inc
les
sbb
cmp
mov
sbb
ror
sbb
inc
jmp
xor
lods
mov
(bad)
in
aaa
dec
add
fcom
out
mov
js
cmp
fiadd
pop
push
xchg
add
and
xchg
cwde
jge
sub
(bad)
sti
push
mov
repz
jge
mov
jecxz
js
repnz
and
test
retf
and
jae
cmp
pop
pop
js
sbb
mov
and
loop
pop
sub
repnz
dec
xchg
shl
leave
add
xor
data16
punpcklbw
out
sti
xchg
and
shr
es
xor
out
icebp
test
xchg
ret
mov
ins
xor
retf
fst
sti
leave
ret
push
jmp
push
call
(bad)
cmps
xchg
and
xchg
js
pusha
mov
iret
out
mov
out
dec
mov
fucom
cdq
mov
mov
or
idiv
add
sahf
aaa
(bad)
lds
and
jecxz
and
mov
mov
stc
ftst
cmp
add
mov
pop
xchg
pop
jns
stc
dec
cdq
jmp
ret
and
aaa
or
rcr
ror
add
push
sub
xchg
bound
popf
mov
xlat
inc
in
sar
nop
dec
jae
movs
and
sub
call
add
pop
lock
xchg
push
out
fsub
outs
(bad)
push
pop
and
jns
push
mov
pop
mov
jl
fistp
aad
addr16
bnd
xor
aad
push
xlat
push
jp
lahf
inc
fisttp
addr16
adc
jnp
xchg
call
call
mov
push
shr
mov
jmp
adc
adc
inc
punpckldq
loopne
adc
shr
or
imul
sti
lods
(bad)
sbb
and
dec
push
fidiv
xor
mov
hlt
pop
daa
daa
in
cmps
movs
call
retf
test
sbb
mov
dec
sbb
(bad)
rol
lods
test
xor
pop
mov
std
push
pushf
pop
mov
add
ds
sbb
push
ja
and
sbb
cwde
aas
mov
aam
mov
stos
hlt
in
ret
sbb
xor
mov
mov
popf
sub
into
jae
and
pop
mov
sub
or
stc
ret
xor
pop
xor
inc
pop
imul
jnp
aaa
std
inc
pop
xchg
sti
xchg
push
ins
pop
pop
inc
stos
call
aaa
mov
xchg
int
push
in
sub
and
mov
arpl
xor
dec
je
fidiv
repnz
mov
or
arpl
stc
into
ror
fadd
test
cwde
stc
fiadd
fild
dec
xchg
cld
(bad)
push
out
mov
popa
pop
data16
mov
push
jae
sbb
jle
clc
and
sub
adc
in
add
sub
mov
add
fcmovne
push
inc
push
xor
clc
push
or
push
ror
mov
jp
outs
mov
fstp
shl
xor
jns
push
xor
and
movs
mov
push
fdivr
sub
cwde
cld
ja
mov
mov
xchg
cmps
scas
test
movs
ins
sub
rep
dec
pop
stos
test
and
jp
mov
mov
cmp
or
faddp
mov
fsub
sbb
mov
daa
es
xor
dec
out
stc
bound
dec
hlt
call
shl
je
les
scas
cs
jne
pop
pop
or
loope
movs
jbe
xor
xor
shl
dec
icebp
aas
xchg
data16
leave
push
(bad)
mov
fs
jge
fst
leave
mov
mov
repz
sbb
cld
sub
and
and
xchg
ss
lods
pop
fsub
push
leave
adc
je
jne
adc
in
lahf
call
fwait
mov
add
imul
popa
fwait
and
and
int
mov
das
cld
cmps
fwait
aad
jp
lock
jmp
mov
sub
inc
mov
fimul
dec
cli
sahf
sub
mov
sar
cld
xor
fxch
cmp
or
in
aam
mov
and
jae
dec
xor
in
addr16
inc
pop
mov
xor
movs
movs
mov
(bad)
mov
adc
in
cmps
mov
mov
dec
(bad)
mov
mov
iret
adc
cmps
xor
std
cmc
scas
jne
(bad)
pop
dec
sub
jp
mov
into
fsubr
lds
retf
mov
(bad)
mov
stos
mov
add
fdivr
dec
test
sbb
sub
test
pop
neg
jb
jle
mov
add
arpl
fidiv
pop
pusha
hlt
sti
pop
jno
sbb
fs
stos
push
imul
inc
jle
mov
jno
pop
dec
stos
ucomiss
xor
ins
addr16
jg
or
imul
pop
(bad)
pop
out
test
mov
xchg
scas
cld
(bad)
ss
mul
loope
or
dec
out
jbe
xor
jns
xchg
jbe
or
(bad)
ror
mov
mov
pop
les
push
jbe
push
mov
and
or
jmp
push
sub
pop
mov
and
fstp
outs
invd
add
mov
(bad)
into
cli
push
cmp
out
test
sbb
cmp
fmul
xor
out
ss
lahf
ss
adc
lods
or
sbb
or
icebp
in
xchg
pop
int
ret
xchg
xchg
xor
std
jle
inc
(bad)
sbb
push
aaa
or
sti
mov
xchg
jmp
out
jl
mov
inc
mov
pusha
fidiv
stc
popa
push
and
retf
add
ins
mov
outs
das
int3
adc
inc
out
mul
seta
mov
mov
cmps
jbe
stc
cld
fisttp
inc
jl
or
add
add
pop
mov
(bad)
repz
push
(bad)
sbb
addr16
adc
mov
xchg
mov
mov
mov
bound
add
aas
add
ins
mov
loop
outs
clc
or
jg
sbb
push
retf
adc
and
xchg
mov
cmps
sar
stc
cmp
sub
out
adc
call
adc
aaa
inc
mov
mov
mov
imul
inc
push
int
imul
jg
cmp
inc
cmp
push
or
mov
js
ss
(bad)
int3
mov
push
mov
int
outs
sub
or
sub
push
adc
xor
xchg
ret
jo
fs
dec
inc
imul
popf
jbe
ins
add
sub
adc
mov
scas
dec
into
cmps
int
xchg
adc
repnz
pop
adc
loope
ror
std
popa
inc
aas
lods
loop
sbb
arpl
sbb
in
mov
outs
rcl
cmp
lea
sub
mov
mov
push
mov
inc
cmp
xor
jb
mov
dec
mov
mov
hlt
out
ja
out
std
pushf
aaa
dec
mov
cmp
cmp
movs
jecxz
push
and
xor
mov
xor
push
adc
sbb
ja
ja
scas
or
cmp
dec
cld
sti
rcl
cs
std
or
nop
xchg
inc
leave
push
sub
jne
(bad)
fsub
cmp
mov
mov
(bad)
stos
je
jmp
mov
inc
push
sbb
out
adc
pop
mov
adc
pop
inc
repz
mov
and
adc
sub
dec
les
dec
ds
shl
popf
pop
adc
fs
das
cs
or
adc
push
dec
fcom
push
cmp
ja
dec
mov
cdq
stos
cld
sub
in
or
dec
push
push
add
sti
adc
test
mov
sbb
rol
mov
leave
popf
in
cld
daa
mov
ds
aaa
jns
scas
sbb
int3
ss
fs
frstor
ins
rol
or
into
jmp
pop
pop
adc
cmc
cmps
cmp
add
lods
loope
data16
mov
out
lods
nop
shr
add
dec
jne
mov
cdq
pop
cmp
xchg
cmps
pop
jl
mov
xlat
mov
popf
and
dec
arpl
or
inc
cli
inc
sub
adc
out
leave
mov
mov
retf
adc
mov
mov
fld
pop
mov
sub
jmp
mov
imul
add
ficom
dec
or
mov
mov
xchg
sub
jb
jecxz
mov
dec
lahf
fsubp
xchg
mov
repz
lods
(bad)
pcmpeqb
pop
fadd
push
cmp
sub
(bad)
mov
daa
xchg
sbb
inc
jg
add
movs
fnstcw
pusha
xchg
out
loope
fcmovne
cmp
pusha
movs
mov
and
sti
cmp
push
lods
sbb
fcomi
bound
vmwrite
pop
jg
stos
cwde
inc
add
mov
xor
push
cmps
xchg
mov
lahf
(bad)
sub
(bad)
lods
bound
movs
cmp
dec
or
sub
jg
dec
mov
sub
out
(bad)
imul
cmps
adc
inc
push
mov
aam
sub
xchg
in
je
and
repnz
xchg
pop
inc
fmul
xchg
xchg
sar
fwait
sub
pop
stc
js
rcl
inc
xchg
fs
mov
in
inc
aad
sub
sub
sbb
push
cld
dec
movs
ficomp
imul
lea
push
dec
loopne
pop
jp
adc
xchg
pop
cmp
fprem1
aam
jb
pop
out
xor
cmps
lahf
mov
add
in
cwde
dec
sahf
mov
xchg
jecxz
mov
dec
pop
bound
mov
and
in
dec
cwde
int3
jo
add
cmp
xor
sub
mov
add
imul
cs
lods
cmp
imul
jne
ins
sub
add
add
retf
jo
sbb
neg
mov
data16
push
in
push
stc
loopne
push
or
sub
cwde
cmps
fwait
scas
or
sub
adc
int3
cs
leave
inc
push
sti
fwait
lahf
pop
and
push
add
and
loope
sub
dec
xchg
adc
add
and
arpl
push
dec
inc
jp
test
mov
add
mov
arpl
in
repz
lods
shl
int3
and
and
dec
into
push
jno
pop
inc
mov
int3
dec
push
cli
jl
(bad)
out
xchg
cli
rcr
xor
push
add
jno
xchg
xchg
mov
pop
jne
or
add
nop
push
or
cmp
xlat
fcomp
xchg
pop
push
aaa
ficom
push
push
xchg
jno
(bad)
jns
xchg
retf
stos
xlat
push
or
pop
hlt
fisubr
jg
lods
add
push
xchg
fisttp
cmp
jge
lds
inc
gs
stc
or
dec
jp
call
je
sub
jb
rcr
mov
outs
dec
mov
jno
enter
add
(bad)
repnz
stc
add
dec
mov
jg
arpl
cmps
mov
xchg
cmps
lods
or
fist
sbb
pop
mov
sub
ins
cmc
push
inc
inc
mov
hlt
inc
push
imul
jae
daa
or
mov
jbe
fnstcw
(bad)
xchg
out
pushf
fadd
xchg
jg
fimul
mov
inc
pop
nop
or
mov
mov
aad
jae
int
xsavec
and
and
push
retf
xchg
lods
nop
add
repnz
fstp
jnp
pop
fadd
call
mov
jge
push
stc
psrlq
adc
(bad)
addr16
out
cld
push
mov
call
jl
fistp
shr
jl
mov
arpl
stc
fxch
jmp
sbb
or
pop
pusha
in
test
out
push
jns
add
stc
out
jg
stc
out
xor
mov
sti
bound
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
adc
add
mov
inc
or
add
or
add
add
add
add
or
add
add
pusha
outs
rol
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
adc
inc
inc
push
pop
inc
in
xlat
test
fisttp
add
lock
push
jp
pop
jno
imul
pop
pop
fwait
sbb
je
in
dec
ja
xor
(bad)
xor
out
repz
cmp
cmp
cmp
add
ret
bound
fpatan
cmp
xor
rol
jl
xchg
mov
add
jl
add
pop
jae
jbe
mov
push
jg
sbb
sbb
int3
in
daa
into
jno
push
bound
fild
ret
ds
push
push
clc
mov
in
shl
loop
das
outs
or
add
test
cdq
in
retf
repnz
cmps
cmc
test
mov
ds
and
push
cmc
pop
and
mov
call
mov
lds
xor
jmp
sub
clc
scas
xchg
add
ds
lahf
test
and
jnp
or
push
sbb
jno
(bad)
repz
sti
dec
push
int3
xchg
xchg
fdivr
sahf
dec
sub
jl
xchg
inc
cmp
mov
in
mov
(bad)
std
jbe
adc
ss
adc
pop
inc
and
xchg
add
aad
dec
dec
mov
xchg
sbb
mov
aas
xchg
sbb
cwde
mov
arpl
xchg
sub
outs
cmc
ss
clc
push
cmp
push
stc
xor
pop
test
mov
or
pusha
dec
aaa
mov
mov
stos
mov
fldenv
scas
push
rcl
inc
pusha
xchg
je
scas
jmp
mov
in
push
xchg
bound
cmp
mov
adc
lock
retf
xor
retf
pop
(bad)
adc
addr16
pop
mov
enter
inc
push
test
iret
add
add
and
push
mov
cmp
imul
inc
sub
out
mov
test
ret
mov
std
sbb
pop
mov
cli
xchg
scas
jg
sbb
(bad)
inc
push
popf
iret
in
pushf
xchg
and
sub
or
push
pop
jne
xor
sub
jg
leave
xchg
mov
int
xchg
xor
or
pop
inc
out
and
cmc
ret
rcl
or
popf
loopne
cmp
dec
jb
cld
xchg
ror
enter
ret
mov
movs
fs
dec
aaa
data16
xchg
test
xor
in
lods
push
and
lds
pop
cmp
push
pop
sub
inc
fsubr
cs
lahf
das
mov
fs
jns
mov
inc
scas
dec
aam
lods
in
nop
in
xchg
das
ins
add
add
ror
inc
pop
jle
adc
pop
mov
and
js
sbb
inc
and
out
xor
int
(bad)
lods
cmp
xchg
fwait
cmp
daa
jnp
mov
push
sub
sub
dec
cdq
xchg
(bad)
xchg
cmps
cmp
es
leave
test
loope
jg
xchg
scas
mov
fnstcw
fisub
ffreep
pop
fs
fld
xchg
bound
inc
loop
loopne
sub
and
xor
dec
mov
outs
ficomp
test
stos
mov
aam
inc
pop
cld
stos
jp
inc
xchg
sbb
fwait
pop
loop
push
pop
cwde
neg
dec
shr
sub
mov
and
dec
pop
xlat
neg
or
out
cwde
pop
pop
(bad)
mov
mov
fstp
cld
retf
in
idiv
icebp
int
adc
xor
les
and
aas
jmp
jecxz
mov
arpl
adc
xor
mov
dec
inc
adc
push
jnp
or
inc
pusha
pop
jnp
adc
daa
push
stos
repnz
dec
dec
lds
fisub
inc
ja
pop
or
aas
out
pop
sub
cdq
cmc
ins
mov
mov
std
outs
xor
mov
or
jle
inc
stos
enter
mov
push
repz
outs
inc
mov
aaa
in
inc
sub
adc
mov
mov
cmps
xchg
rcr
and
loopne
sbb
fwait
imul
pop
mov
aam
imul
in
mov
fnstsw
mov
mov
outs
out
and
inc
and
(bad)
cmps
sar
jo
push
div
inc
or
pop
xlat
aad
jno
(bad)
mov
cmp
rcl
cs
pop
push
aas
test
jno
jnp
imul
jge
adc
add
sbb
fwait
leave
int3
sub
sub
or
loop
sub
pop
data16
out
aad
mov
xor
cli
xchg
inc
adc
push
repz
push
inc
sbb
push
mov
retf
inc
scas
pop
jne
(bad)
xchg
out
mov
rol
mov
push
scas
(bad)
mov
cmp
mov
ror
icebp
cmp
jecxz
sub
lds
mov
sbb
pusha
cwde
out
mov
dec
pop
mov
enter
mov
jb
jl
jge
xchg
cmps
push
(bad)
sub
mov
jge
jno
dec
or
and
inc
clc
sbb
push
in
rcr
xchg
push
mov
cmp
ds
into
adc
push
imul
inc
cmp
pop
movs
xor
add
xchg
dec
dec
adc
jl
fnsave
ret
cmp
in
jns
std
push
mov
ror
pop
mov
enter
or
lahf
mov
and
sub
lock
cmc
in
fidiv
jae
stos
scas
(bad)
sbb
scas
sbb
pop
jecxz
fadd
add
add
scas
shr
jmp
std
cmp
mov
xchg
inc
in
stc
add
pop
adc
jns
mov
retf
into
test
inc
xor
jo
and
cmps
push
enter
sbb
mov
outs
sub
call
push
movs
inc
xor
bound
stos
rcr
ror
xchg
dec
xor
test
mov
pop
push
mov
jnp
adc
in
pop
shl
nop
jp
xor
mov
xchg
jbe
cmps
push
mov
xchg
or
xchg
imul
add
outs
or
inc
es
dec
inc
mov
jae
add
(bad)
retf
int
adc
nop
add
scas
movs
enter
iret
call
or
enter
clc
test
inc
adc
mov
adc
imul
rcr
adc
dec
jmp
faddp
test
jb
(bad)
popa
ja
cmp
and
fst
loope
inc
and
bound
sub
jp
in
inc
inc
mov
clc
mov
stc
sti
xchg
(bad)
mov
fwait
sar
sub
out
in
test
pop
loopne
mov
shl
mov
push
pop
push
push
mov
test
out
(bad)
mov
jne
push
repnz
das
push
push
lock
xlat
xchg
pop
not
jg
mov
cld
jp
cmc
xor
pop
add
sub
in
mov
inc
xchg
cmp
(bad)
sti
sbb
pusha
cld
xchg
loop
ss
cmp
fldl2t
jmp
pushf
inc
cmp
pop
and
aaa
dec
iret
xor
xchg
sub
(bad)
jl
cmc
(bad)
push
sbb
ja
lock
cmp
aaa
add
rcr
cs
adc
xchg
outs
add
mov
(bad)
jae
mov
inc
cli
add
fstp
dec
test
retf
aas
in
xor
pop
ja
mov
dec
cwde
ror
std
push
inc
and
sub
jnp
add
sub
push
cmp
scas
mov
fldcw
outs
xchg
aad
rcl
jae
push
push
stc
cs
mov
mov
xchg
and
xchg
push
and
outs
jecxz
pop
pop
movs
lock
mov
push
xor
ins
sbb
dec
jle
outs
out
cs
jl
dec
leave
xor
add
scas
and
pop
pop
es
stc
ins
push
add
(bad)
fidivr
sti
cli
rcr
dec
test
jg
xchg
lahf
cmp
and
push
repz
rol
dec
push
cmp
js
jmp
cmp
clc
dec
mov
lds
jne
adc
in
out
jl
daa
retf
add
mov
outs
dec
xor
sbb
ret
js
add
pinsrw
inc
cmp
or
push
or
mov
ss
or
xchg
adc
mov
repnz
mov
add
ficom
cmp
jb
mov
ficom
fcomp
in
sub
fcmovbe
ja
jns
iret
sbb
hlt
lea
inc
jo
aam
dec
add
xlat
mov
ret
mov
push
test
jns
adc
or
jns
in
push
fs
sahf
(bad)
xlat
adc
movs
lods
mov
cwde
cmp
jge
aam
mov
in
test
mov
out
into
in
xchg
mov
ins
retf
fild
cmps
jle
cwde
call
daa
jmp
fst
in
lds
cmps
jnp
jp
ror
enter
pusha
test
fdivr
mov
sub
outs
outs
lods
fcom
dec
sti
cmp
mov
xor
adc
push
cmp
xchg
xchg
scas
in
push
mov
jmp
loop
mov
adc
pop
(bad)
cwde
je
popa
cmps
pusha
mov
xor
jno
rol
mov
stos
clc
adc
pop
push
cmp
mov
push
dec
cmp
into
pop
sbb
jns
dec
xor
imul
push
cmc
int
test
xchg
cvtps2pi
pop
jo
mov
jnp
cmps
fisttp
dec
push
sar
in
sub
les
inc
adc
fisubr
dec
dec
mov
mov
jp
inc
xor
(bad)
loop
adc
stos
adc
mov
int
mov
ret
gs
pushf
stos
(bad)
in
cmps
(bad)
sbb
jne
add
and
sbb
and
push
ss
faddp
pop
outs
sub
mov
cwde
ja
fcomp
in
dec
in
xor
pop
jns
cmp
scas
out
adc
fidivr
inc
add
dec
mov
push
iret
fnstenv
xor
adc
jns
jo
scas
jg
sub
sub
pop
(bad)
adc
pushf
fistp
jg
mov
test
push
cs
stc
xor
and
xchg
cmp
(bad)
and
outs
loope
hlt
inc
or
cdq
shl
mov
lock
adc
cmp
daa
adc
pop
mov
in
aam
adc
jge
mov
cmps
dec
cmp
out
out
ins
mov
xchg
ins
jno
in
adc
add
outs
sar
jne
cmps
jmp
mov
lds
xchg
adc
cmp
loop
jne
lods
cld
pop
sub
add
adc
jb
aaa
test
cld
lods
test
inc
xor
cmp
movs
popa
jge
push
fst
xlat
add
jne
dec
jmp
movs
lods
adc
lods
pop
pop
aam
bound
fmul
jnp
xchg
pop
cmp
fwait
adc
sub
sbb
or
ret
mov
inc
jp
xchg
inc
cmp
in
retf
adc
iret
sub
pop
xchg
add
inc
sbb
pop
retf
xor
movs
cdq
xor
stc
jg
repz
mov
push
adc
adc
out
pop
xor
jne
into
inc
mov
xlat
gs
inc
out
jmp
jl
mov
ret
ret
repnz
jecxz
test
dec
int3
push
sti
and
xchg
jge
fcom
pop
movs
and
aas
sbb
shl
xchg
popf
xchg
push
push
aaa
stc
add
test
dec
sub
inc
mov
mov
xor
movs
ja
dec
movs
addr16
mov
ret
addr16
xchg
jge
mov
mov
dec
mov
imul
fstp
icebp
imul
aad
xchg
(bad)
jl
pop
pop
dec
jge
xor
xchg
add
(bad)
lds
cmp
xchg
repnz
inc
xchg
add
mov
mov
bound
pop
push
mov
leave
push
xchg
push
pop
mov
mov
loope
hlt
jnp
push
out
(bad)
pop
scas
add
ss
jb
pop
cmp
cmp
aaa
out
(bad)
xchg
add
pop
retf
mov
fst
outs
mov
cmp
push
and
lea
jmp
(bad)
movs
popa
das
div
cld
adc
xchg
pusha
or
mov
call
cmps
test
push
mov
mov
pop
jo
push
lea
sahf
push
jne
sbb
sbb
cmps
das
in
jecxz
mov
add
repnz
and
(bad)
and
jmp
(bad)
push
push
idiv
xchg
push
add
or
adc
xchg
daa
out
sub
mov
shl
in
out
in
mov
fist
xchg
cwde
int
or
sub
js
jmp
xchg
dec
pop
loope
pop
idiv
lock
adc
movs
and
test
inc
or
call
xlat
and
fistp
jl
push
in
int
inc
mov
add
iret
sahf
xchg
adc
aas
and
popf
nop
push
stc
adc
stos
mov
lds
lds
push
push
pop
call
dec
push
xchg
loope
lods
mov
enter
xor
ficom
aaa
mov
aaa
movs
rcr
adc
adc
sahf
lds
popf
(bad)
(bad)
shl
or
femms
shl
or
sti
inc
add
pop
in
fdivr
out
dec
aas
push
sub
inc
adc
push
imul
fild
sbb
mov
cmc
push
cmp
adc
loope
cmps
mov
xchg
push
mov
inc
mov
sbb
in
ins
mov
daa
scas
mov
and
pushf
mov
hlt
mov
mov
or
sbb
or
lea
fsub
sti
sbb
mov
mov
xor
jp
cwde
mov
outs
jnp
dec
test
pop
and
leave
lods
call
xchg
mov
int
arpl
in
daa
(bad)
dec
jg
jmp
push
fcomp
ins
mov
(bad)
cmp
xor
mov
retf
pop
xchg
lds
retf
std
sbb
in
jecxz
push
pop
sub
retf
jge
test
xchg
lahf
adc
lods
xor
and
cld
adc
cmp
dec
or
pop
fidivr
addr16
ins
retf
xchg
lds
ss
outs
and
and
dec
push
push
mov
fdivr
sbb
xor
fistp
test
and
jl
lods
fcomp
mov
push
cs
mov
adc
std
pop
lods
aad
test
test
mov
movs
pop
dec
in
lods
(bad)
ret
mov
adc
nop
loope
test
dec
xchg
test
shl
lds
dec
push
dec
test
cli
addr16
mov
test
pop
data16
popf
sbb
add
xchg
mov
xor
add
test
pop
lock
or
loop
bnd
add
cmp
popa
or
icebp
sbb
sub
cli
mov
or
mov
pushf
scas
xchg
aaa
adc
adc
lods
fwait
lea
fdivr
ret
push
stos
jns
in
cmp
or
jae
(bad)
inc
shr
add
out
mov
mov
int
dec
out
sbb
pop
out
sub
xor
stc
mov
shl
stc
inc
movs
pop
push
jle
aas
jmp
(bad)
sbb
mul
int
adc
sti
sbb
cdq
push
ss
hlt
cmps
inc
mov
iret
ss
pop
shl
loopne
cld
movs
sub
fwait
movs
in
stc
adc
mov
fcmovbe
es
xchg
dec
or
mov
sub
cmc
aam
ds
dec
push
mov
js
mov
cmp
loop
or
xchg
imul
mov
fwait
daa
dec
(bad)
stc
aad
rcl
sar
cld
repz
aas
(bad)
cld
repz
push
push
adc
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
jae
add
inc
arpl
mov
add
push
in
jl
and
jo
jge
mov
and
repnz
ja
inc
in
cmp
and
gs
shr
test
push
mov
js
cmp
push
repz
adc
add
jmp
scas
push
les
loopne
dec
sbb
or
pop
push
lods
mov
std
dec
jle
jp
int3
lahf
imul
sbb
rol
shl
stos
les
addr16
lahf
out
jnp
stc
mov
mov
ins
adc
and
aad
cmps
repz
aad
lea
add
xor
cmp
sbb
mov
push
mov
pop
lea
outs
(bad)
xor
lods
cs
ins
in
js
dec
(bad)
jmp
push
sti
add
and
pop
sbb
ret
(bad)
xor
xchg
jmp
mov
and
cmps
xor
push
in
inc
mov
add
mov
out
add
fsubp
cmp
ficomp
xchg
adc
iret
mov
adc
push
add
push
or
int3
pop
jl
retf
mov
mov
cmps
test
mov
xor
push
mov
mul
pop
push
ret
mov
push
outs
nop
ins
push
imul
jne
popa
ins
cmps
ins
rol
int3
mov
cmp
jb
fwait
(bad)
(bad)
neg
jns
test
test
mov
cmp
inc
cmps
push
jl
mov
out
xchg
pop
cmp
(bad)
rcr
pop
call
adc
int
cmp
fisttp
mov
pop
pop
adc
repz
das
mov
ja
ja
into
push
arpl
mov
mov
dec
jb
add
add
call
in
jle
mov
imul
movs
xor
mov
addr16
add
adc
or
out
and
icebp
dec
sub
fnsave
lods
cli
fs
pop
push
dec
out
push
xlat
ins
ret
mov
sub
retf
rcr
into
adc
test
pop
dec
add
dec
test
and
mov
jne
popa
ins
adc
xor
xchg
aaa
jns
retf
(bad)
in
test
ins
mov
xchg
fcomi
les
dec
stc
in
lods
imul
or
jae
jmp
cwde
ficom
rcr
fcomi
adc
mov
add
mov
or
retf
pop
and
imul
cdq
js
xchg
and
push
lahf
vmread
sar
sahf
sub
push
xlat
pop
cmp
cmp
inc
mov
pop
mov
sub
js
aad
xchg
cmp
sbb
or
(bad)
xor
sbb
push
xor
inc
out
dec
pop
adc
cmp
jae
xor
xor
pop
jle
pusha
sub
lea
adc
adc
stc
dec
inc
dec
fcmove
push
(bad)
jg
test
fist
mov
jecxz
xor
adc
loop
fmul
mov
cmp
fisttp
mov
mov
gs
mov
mov
mov
dec
mov
jle
ret
cmp
jl
fcmovu
jecxz
ins
add
pop
pop
lods
adc
dec
cmps
movs
or
add
or
cld
mov
leave
mov
idiv
ficomp
jmp
leave
(bad)
(bad)
ins
sar
shl
fisub
fisub
fidivr
lock
out
std
push
std
paddw
icebp
in
out
out
scas
or
cmp
bnd
in
repnz
std
fdiv
into
push
cli
push
cli
push
cli
mov
(bad)
inc
xlat
in
out
jecxz
hlt
test
inc
in
loope
stos
cmp
jb
(bad)
pop
(bad)
adc
aad
add
(bad)
sti
mov
mov
clc
mov
(bad)
or
sub
mov
dec
in
add
movs
lods
test
clc
sbb
dec
pushf
ss
xchg
or
fild
push
rol
stc
add
adc
jecxz
xchg
add
mov
mov
pop
retf
shr
ror
pop
or
xchg
nop
sar
in
fstp
mov
and
aaa
cmp
sar
pop
cli
repnz
imul
xchg
popf
inc
pop
mov
cs
push
lods
push
leave
fsubr
or
sti
ror
addr16
ret
add
movs
lea
outs
(bad)
in
mov
repnz
call
dec
mov
bnd
mov
fdiv
addr16
(bad)
lds
push
int
adc
dec
pushf
pop
aam
jnp
dec
enter
inc
xchg
outs
sbb
mov
repnz
test
add
jp
adc
sub
rol
retf
mov
repnz
hlt
add
inc
repnz
mov
cmps
push
or
mov
cmp
cmp
push
jl
lahf
adc
sbb
push
jnp
les
cmp
sti
jecxz
cld
sti
fadd
mov
imul
sbb
aam
(bad)
lea
cmp
rol
outs
or
push
mov
pusha
cld
(bad)
pop
mov
loopne
or
and
jne
pop
adc
(bad)
cmp
xchg
repz
mov
jns
jnp
addr16
xchg
test
push
or
jmp
cdq
sub
les
add
aad
pmaxsw
out
dec
into
cmp
xacquire
fidiv
pop
dec
pop
cs
xchg
or
fwait
pushf
mov
lds
lds
cs
clc
or
fist
mov
scas
out
fmul
mov
cmps
int
repz
adc
je
fistp
cmps
dec
cli
inc
jmp
and
push
push
mov
vcvttss2si
pushf
push
jl
cmp
sbb
inc
repz
jo
leave
loopne
in
retf
icebp
aas
imul
sti
pop
push
sbb
call
push
inc
lock
pop
jp
lods
icebp
enter
loop
sub
test
es
ds
jnp
inc
jge
sbb
inc
mov
fisubr
in
jns
jl
fcomp
fidivr
adc
mov
mov
push
lods
mov
xlat
sbb
cwde
lahf
mov
push
or
xchg
adc
pushf
add
sbb
xchg
xchg
mov
retf
mov
dec
pop
pop
xor
mov
hlt
stc
and
retf
sbb
jmp
pusha
mov
cmps
mov
mov
sbb
add
(bad)
ins
mov
nop
adc
lock
cmp
ss
mov
bound
cmp
inc
push
iret
mov
sub
adc
rcr
jl
mov
(bad)
xchg
retf
fs
pushf
xchg
and
(bad)
call
xchg
sahf
test
cmps
mov
add
inc
frstor
and
mov
mov
adc
lgs
icebp
or
pop
cmp
mov
add
push
vpaddsb
fidivr
dec
xchg
pushf
pop
outs
or
nop
or
dec
mov
jnp
neg
rcr
repz
xor
dec
outs
ss
pop
retf
xchg
xor
adc
push
jb
jo
shl
arpl
(bad)
push
retf
test
bound
fld
mov
inc
inc
sub
mov
and
add
cmp
int3
shl
sub
add
mov
scas
and
push
mov
sbb
adc
or
xor
cmps
clc
add
test
inc
aad
jae
cmp
cmp
lock
stos
mov
jno
cmps
test
aad
xor
dec
cmps
or
(bad)
int
arpl
repz
loopne
bound
call
mov
dec
push
jle
inc
imul
cmp
pop
and
push
and
inc
pop
or
jge
repnz
(bad)
push
mov
call
push
pop
rcr
sbb
or
pop
cmps
mov
ja
mov
fstp
ds
pop
enter
jno
scas
push
add
scas
(bad)
fidiv
jmp
and
cmp
ins
(bad)
mov
aaa
mov
or
aam
mov
test
outs
mov
push
jl
add
mov
sub
push
loope
idiv
pop
pop
adc
loopne
adc
imul
xor
iret
inc
scas
cmp
ja
push
std
icebp
repnz
xchg
loope
lea
movs
call
clc
push
adc
test
or
test
xor
or
add
pop
imul
sar
fwait
out
jg
mov
sub
dec
nop
mov
mov
nop
xlat
sbb
mov
dec
les
jp
shr
dec
imul
xor
icebp
mov
imul
popa
add
movs
pop
pop
jne
retf
dec
bound
mov
popf
adc
popa
cmps
movs
enter
jns
daa
imul
into
leave
mov
fnstcw
cmps
dec
push
pop
popf
(bad)
test
mov
movs
dec
inc
jge
iret
jnp
dec
or
jmp
stos
or
loopne
sahf
dec
cmp
mov
retf
add
jbe
clc
or
jge
or
mov
push
test
sbb
jl
daa
inc
in
sbb
add
stos
jmp
cmp
pop
jb
adc
addr16
push
dec
shl
imul
test
push
cmps
jecxz
fwait
push
add
das
outs
jp
inc
lock
dec
scas
add
sti
bound
pop
jno
push
jp
cmp
inc
xor
cdq
mov
das
iret
adc
dec
and
cmp
dec
mov
pop
ret
jne
push
cmp
into
push
cmp
mov
sbb
in
imul
adc
out
aas
cld
push
cmp
adc
pusha
mov
aaa
inc
dec
aas
pop
lds
cmps
dec
(bad)
lods
inc
test
xchg
push
and
pusha
stos
cld
dec
cmp
cmc
retf
mov
inc
cmc
push
test
call
in
jmp
push
lahf
mov
pop
dec
ror
fidivr
iret
loope
leave
sbb
add
inc
stc
and
jbe
fistp
fnstenv
xchg
add
enter
push
push
cmp
or
(bad)
xor
fild
test
mov
fbld
adc
xchg
mov
push
repnz
shr
fld
sub
mov
mov
out
das
add
sbb
sub
mov
adc
loopne
aaa
adc
push
nop
cmps
jb
pop
sub
pop
and
outs
push
and
sbb
jo
jge
stos
(bad)
xchg
jmp
jp
(bad)
mov
mov
adc
aaa
pop
and
and
neg
add
mov
xchg
sbb
or
cmp
lods
rcr
mov
aam
pop
lea
outs
das
inc
mov
xchg
(bad)
and
into
mov
xor
sti
jbe
leave
xor
stos
pop
int3
clc
or
(bad)
adc
out
xlat
popa
sub
fidivr
and
gs
mov
inc
pop
imul
fisubr
aaa
lods
hlt
bound
push
jae
int
fcomp
lock
xchg
fwait
ins
fldenv
sahf
cmp
add
mov
dec
retf
inc
fs
addr16
clc
setl
in
das
push
mov
mov
sub
xor
jg
mov
les
push
jno
sub
outs
pusha
loopne
or
mov
mov
mov
imul
gs
mov
xor
rcl
jmp
push
and
ret
and
arpl
push
cwde
cmp
sbb
mov
neg
push
imul
fild
push
dec
cmp
inc
and
clc
loope
xchg
adc
repz
pop
aas
mov
push
fisttp
xchg
mov
push
and
xchg
push
sbb
iret
lds
cli
daa
sahf
sub
int
mov
mov
popf
sahf
cld
aad
mov
jmp
mov
mov
mov
not
xor
lds
pop
iret
mov
pop
nop
mov
fsub
loopne
in
cmps
cmp
rol
stos
add
pop
sbb
pusha
or
test
adc
mov
adc
retf
lea
mov
pop
pop
addr16
sti
jns
ds
mov
(bad)
hlt
adc
xchg
cmp
mov
xor
cmp
or
push
pop
sub
and
pop
(bad)
dec
xor
loopne
xchg
pop
jle
pop
pop
cmc
gs
sub
adc
imul
mov
adc
(bad)
cmp
dec
mov
adc
xor
cmp
stc
sbb
pop
sub
push
in
jg
sbb
clc
cmp
adc
xchg
sbb
gs
sub
sub
mov
xor
jns
clc
jnp
jb
mov
push
movs
jb
xor
test
mov
mov
push
cmp
adc
pop
jmp
mov
in
call
jl
and
das
mov
sti
fwait
jb
add
mov
jbe
adc
dec
in
not
call
cmp
out
ja
or
cmp
pusha
inc
ds
xchg
xchg
push
inc
jg
scas
mov
pop
inc
lods
fisttp
(bad)
jecxz
add
cli
mov
push
in
nop
mov
add
(bad)
and
lock
lods
or
pop
sub
adc
fcom
mov
aas
jo
repnz
in
into
in
cmp
mov
jmp
jns
xlat
(bad)
std
mov
aad
loop
add
inc
mov
sub
scas
aas
test
xor
ins
fld
lahf
mov
mov
cmp
in
mov
in
lahf
inc
xor
jb
mov
mov
inc
mov
and
sti
sub
or
sbb
pop
and
or
adc
imul
out
dec
imul
(bad)
shl
push
xor
sar
sub
add
or
sbb
xor
mov
and
div
cmp
in
fdivrp
int
mov
push
push
dec
xor
iret
cmps
faddp
sub
retf
mov
cmp
shr
mov
sub
and
rcr
mov
jb
test
push
add
mov
jl
add
(bad)
and
sub
test
addr16
sahf
mov
cmp
mov
cmp
in
imul
daa
or
popa
push
imul
lds
retf
inc
retf
test
cmp
push
(bad)
test
in
icebp
mov
pusha
in
push
enter
inc
enter
mov
ss
loope
push
aas
push
fdiv
lahf
loop
adc
test
fiadd
scas
fcmove
push
les
int3
dec
fcom
mov
in
loope
pop
mov
dec
inc
stos
jle
fst
scas
in
arpl
or
add
nop
es
cld
dec
pop
dec
sub
out
fistp
dec
gs
and
repz
idiv
popa
mov
sbb
push
dec
shl
xlat
jb
bound
(bad)
jecxz
mov
ret
aaa
add
test
inc
mov
pop
mov
dec
dec
out
or
pop
push
lods
mov
in
cmp
loop
mov
sti
inc
in
xlat
stos
mov
fnstsw
rol
or
mov
clc
retf
xchg
das
icebp
test
(bad)
push
inc
mov
test
(bad)
mov
loope
shr
mov
adc
xor
and
mov
adc
test
adc
push
(bad)
(bad)
adc
test
fdiv
or
or
imul
gs
repnz
movs
xlat
mov
test
stos
imul
or
xor
loopne
pop
std
jmp
dec
or
mov
inc
pop
mov
arpl
sbb
sbb
dec
jmp
imul
xchg
clc
sub
data16
addr16
or
push
inc
xchg
or
jns
mov
mov
inc
ins
inc
(bad)
xchg
cmp
loope
ja
out
test
into
lock
pop
jbe
xchg
sub
xchg
push
scas
mov
pop
ret
mov
mov
fidivr
lods
clc
xchg
push
cmps
jmp
push
out
jle
dec
lock
loopne
pop
xlat
shl
jl
movs
jno
add
out
push
and
sbb
mov
aad
jg
inc
sub
jge
lods
mov
lds
(bad)
aaa
push
adc
leave
ret
shl
fwait
adc
xor
lahf
push
pop
pop
lods
stos
mov
lds
ds
or
add
or
add
mov
mov
mov
and
mov
xchg
add
add
jecxz
cdq
pop
cmps
mov
inc
add
mov
jbe
rcr
cli
mov
ja
scas
jae
and
cmp
call
adc
stc
dec
arpl
call
fist
sub
loopne
mov
js
and
int
popf
int
sub
dec
clc
fwait
xchg
sub
cmp
and
ret
fld
mov
sbb
into
push
pop
aaa
pop
and
mov
push
and
inc
pop
sbb
and
mov
push
repz
add
xor
jmp
mov
and
cld
repnz
sub
arpl
mov
repz
mov
shr
lods
in
inc
mov
or
mov
mov
lea
stc
cmp
into
and
mov
rcr
in
pop
mov
punpckhwd
pushf
leave
pushf
gs
xchg
adc
gs
dec
mov
jmp
push
pop
pop
sub
adc
adc
cs
dec
ds
dec
cmp
jg
adc
jge
xchg
adc
jecxz
movs
lock
lock
push
pop
or
cmp
mov
pop
sub
sar
pop
stos
xchg
pop
call
aam
jo
push
add
iret
mov
vcvtdq2pd
mov
daa
or
mov
ins
pushf
aaa
xor
sbb
adc
fild
in
mov
leave
sbb
or
nop
clc
out
aas
ret
xor
imul
inc
lahf
sbb
add
retf
mov
sbb
fcom
inc
addr16
sub
push
mov
or
(bad)
jge
adc
xor
shr
adc
test
mov
outs
or
ja
ret
lea
stos
pop
mov
nop
add
jecxz
addr16
hlt
add
scas
mov
push
iret
mov
and
jno
imul
jg
sbb
mov
jle
mov
arpl
sub
or
out
dec
or
fiadd
cmp
mov
push
sub
cmp
jl
sub
push
or
mov
pop
fnstcw
adc
mov
push
inc
xor
mov
push
js
aam
(bad)
adc
sub
adc
sub
or
mov
mul
jns
call
or
pop
xor
and
mov
mov
mov
add
fisubr
mov
add
mov
mov
xor
dec
jb
in
fnstenv
cmps
pop
add
adc
push
popa
mov
mov
add
jno
call
inc
fiadd
cmps
cmps
outs
cld
loopne
pop
imul
(bad)
clc
test
sub
icebp
(bad)
pop
shl
jecxz
(bad)
or
fsub
inc
aas
movs
loopne
dec
cmp
cmp
xchg
mov
cmp
idiv
test
and
loope
xchg
add
movs
jmp
sub
in
push
push
xchg
pop
(bad)
push
lock
imul
mov
adc
fdivr
xor
xor
leave
js
jo
mov
cmp
dec
not
mov
lock
sub
mov
dec
sub
icebp
jmp
cmp
aad
mov
inc
neg
mov
mov
xor
or
adc
push
loopne
xor
js
stos
mov
mov
ins
xchg
sub
or
addr16
ja
jae
stc
sete
cld
dec
aam
or
imul
in
xchg
sub
mov
(bad)
fidivr
xchg
mov
out
sar
fs
jb
adc
les
pop
and
retf
lods
lods
loopne
gs
sub
inc
in
push
sub
jne
sub
mov
repz
ja
push
aad
pop
aaa
add
mov
cmp
scas
loope
loop
in
jge
iret
push
repnz
or
(bad)
mov
jne
push
cmps
(bad)
cld
adc
mov
xchg
and
xor
stc
dec
mov
jbe
jns
or
xor
lock
cli
xchg
into
pop
adc
test
into
and
dec
sub
mov
repz
lods
push
outs
sub
fdiv
mov
jmp
in
or
sahf
xlat
xor
sub
test
lods
sub
fidiv
mov
push
push
xbegin
and
jb
and
cmp
adc
test
add
ret
fdivr
push
cmp
nop
arpl
stc
dec
sub
retf
and
xchg
in
gs
inc
int3
inc
ds
or
mov
(bad)
into
fdivr
stc
out
mov
call
push
into
adc
cmp
xor
xchg
mov
int
or
add
cmp
adc
adc
call
mov
pop
cmp
sahf
les
int3
rcl
add
cmp
pushf
push
xor
add
or
stos
shl
sbb
inc
sbb
pusha
les
pushf
xor
cwde
cmp
or
loopne
sbb
xor
add
cmp
ds
fcom
inc
jnp
sub
icebp
mov
xor
add
fscale
aaa
mov
imul
push
sbb
(bad)
data16
pushf
or
(bad)
mov
mov
pop
add
jns
bound
in
or
std
je
movs
cmp
cli
hlt
mov
adc
and
mov
xchg
out
sbb
test
adc
jp
xor
sbb
retf
fild
daa
adc
scas
mov
xchg
jb
mov
pop
inc
inc
es
adc
or
(bad)
adc
aas
ds
mov
ret
add
call
aam
inc
lahf
mov
mov
gs
rol
dec
push
fdiv
sbb
sti
or
mov
dec
mov
xchg
mov
nop
mov
xor
cmp
fadd
pop
cmp
cmc
jno
xchg
mov
cmps
xchg
xchg
jnp
in
das
ins
addr16
(bad)
sub
sbb
sub
ds
jne
aad
scas
leave
sar
mov
out
cmp
enter
(bad)
retf
ret
jae
and
inc
jmp
cmps
lahf
push
out
add
push
mov
dec
in
inc
push
lea
js
iret
mov
cs
lods
mov
adc
pop
fisttp
jne
mov
enter
icebp
jmp
in
jmp
ins
cld
in
shr
inc
out
stos
(bad)
hlt
inc
add
cmp
pop
popa
or
jmp
or
dec
push
and
inc
jle
jne
push
dec
mov
xor
and
out
inc
retf
sbb
adc
mov
xlat
int3
rcr
repz
std
inc
xor
sbb
fidivr
in
dec
jnp
frstor
inc
aad
rcr
dec
or
dec
push
scas
repz
leave
lahf
in
ror
jl
sbb
xchg
mov
adc
fcom
jp
dec
loopne
mov
pop
pop
or
bound
jp
bound
sti
repnz
enter
xchg
sub
lods
jle
mov
movs
xor
leave
inc
sub
(bad)
imul
fcom
sbb
and
jno
or
fmul
jge
test
out
arpl
mov
sbb
je
(bad)
(bad)
push
pop
xchg
inc
lods
movs
or
add
push
or
sahf
mov
push
push
dec
and
in
cmp
clc
loope
int3
es
or
test
or
lds
adc
pop
out
repz
mov
inc
xor
add
shr
inc
jbe
dec
adc
or
mov
dec
mov
dec
ret
inc
aaa
and
cdq
cmp
inc
sti
scas
jmp
out
arpl
not
and
popf
and
arpl
jnp
fcom
jp
push
cdq
mov
gs
xor
fadd
cli
shr
int3
cmp
or
push
ret
xchg
hlt
dec
fwait
hlt
push
out
inc
and
cmp
and
ins
ins
mov
push
sbb
rol
inc
out
pop
int
arpl
shr
movs
mov
mov
mov
xchg
retf
jmp
add
push
popf
fmul
dec
ss
and
(bad)
iret
pop
loopne
pop
out
pop
cld
int
mov
dec
inc
fmul
std
xchg
(bad)
pop
cwde
loopne
xchg
add
jl
dec
cli
cli
adc
inc
inc
out
test
jnp
retf
xor
lahf
fsubr
push
mov
fcomp
mov
into
arpl
cmps
cmps
stos
mov
rcr
add
inc
pop
and
pop
adc
pop
sbb
sar
sub
mov
idiv
pop
(bad)
sub
imul
scas
shr
inc
test
std
shl
fs
adc
cmp
add
sub
jns
or
mov
sbb
add
jmp
daa
push
push
aas
push
mov
pop
sbb
mov
jmp
xor
xor
and
push
and
pusha
test
xchg
and
xor
mov
inc
pushf
pop
lods
xchg
sub
mov
or
dec
fdiv
cs
and
xchg
lods
cld
cmc
in
movs
dec
(bad)
mov
sbb
mov
iret
jle
mov
mov
test
(bad)
(bad)
clc
mov
je
xchg
movs
add
mov
and
mov
pop
aad
dec
(bad)
icebp
gs
inc
popf
xchg
sbb
inc
sbb
sbb
repnz
das
sbb
and
sbb
repz
aad
int
imul
cmp
unpckhps
mov
cmp
xchg
sti
in
push
dec
xor
push
ds
jecxz
mov
mov
mov
jno
repnz
mov
xchg
add
std
jno
pop
and
dec
fisubr
in
call
and
mov
xor
addr16
pop
leave
sbb
cdq
dec
jp
mov
in
dec
iret
(bad)
test
test
mov
int3
cld
mov
push
push
fisubr
sbb
imul
mov
fdiv
mov
loop
popf
imul
(bad)
enter
jo
in
sbb
xor
fs
gs
adc
add
push
test
mov
sbb
push
or
xchg
test
out
add
mov
xor
push
jp
movs
inc
sub
retf
aam
xchg
out
mov
dec
(bad)
fwait
lea
and
lea
cli
or
dec
or
fisttp
pop
mov
xor
add
sbb
push
jle
sbb
popf
mov
sbb
xor
and
mov
adc
call
data16
scas
fwait
jae
xchg
lahf
idiv
push
dec
add
test
aam
mov
cmp
xor
les
jg
mov
retf
dec
sbb
outs
mov
pop
sub
adc
(bad)
popf
call
adc
cmp
ret
cwde
sub
cmp
aad
sbb
xor
lods
dec
cmp
into
out
test
jmp
lea
jo
cwde
pop
cli
add
inc
xchg
les
xchg
sbb
rcl
xor
push
les
or
add
mov
test
arpl
scas
repnz
inc
lods
jge
mov
addr16
mov
int3
mov
xchg
push
sahf
aad
adc
cmps
cmp
jae
xor
dec
mov
retf
(bad)
call
mov
xchg
add
fild
ja
sub
jne
push
mov
or
fwait
or
pop
out
mov
mov
icebp
mov
std
sti
in
mov
adc
out
mov
mov
jp
xchg
sub
adc
movs
xor
cmc
sbb
movs
jmp
xchg
lds
pop
dec
ds
sub
fwait
stc
add
jnp
xor
mov
movs
mov
stos
scas
pop
push
inc
data16
aam
outs
push
scas
repz
mov
inc
(bad)
and
shl
dec
cmp
fcomp
cdq
inc
nop
lea
add
lods
push
pop
mov
sbb
push
or
(bad)
adc
aas
jne
xor
in
inc
mov
mov
ret
mov
jecxz
add
movs
jo
adc
cmc
push
clc
movs
mov
out
popa
pop
pop
add
cmps
(bad)
and
mov
mov
push
clc
mov
call
jne
mov
jmp
scas
sbb
rcl
cli
(bad)
jecxz
mov
cwde
loop
lods
mov
jo
out
jns
lahf
mov
mov
adc
out
or
popf
xor
std
dec
and
fs
or
or
mov
ds
retf
mov
arpl
fcom
xor
imul
fisub
pop
cmps
jns
cmp
push
jbe
cmc
mov
jno
jne
inc
xlat
adc
jp
cdq
shl
call
push
jbe
jnp
rcl
into
mov
repz
jmp
mov
mov
movs
shl
lods
ds
out
adc
mov
in
dec
jle
add
aas
bound
mov
xor
cs
adc
ins
pop
rcl
rcl
mov
add
fistp
stos
sub
(bad)
xchg
and
bound
dec
test
pop
pop
xchg
pushf
xchg
xchg
js
sar
loope
mov
add
lahf
(bad)
movs
xchg
or
ins
inc
in
jp
or
mov
mov
mov
pandn
mov
mov
cmc
test
sbb
push
ds
mov
xchg
mov
mov
inc
lea
sub
out
pop
nop
sub
dec
loopne
jne
int
popa
ror
je
in
or
sahf
push
and
test
inc
inc
imul
jae
or
daa
bound
pop
imul
mov
cmp
mov
(bad)
sub
ja
mov
das
cdq
ret
shl
sub
idiv
enter
jl
std
rol
test
add
retf
and
fcomi
dec
ret
stos
stos
rol
ja
js
ja
add
(bad)
ins
stos
add
hlt
cmp
lds
xchg
push
loope
push
jb
cli
xchg
pop
sub
movs
xchg
stc
pushf
pusha
in
inc
push
ja
arpl
inc
ficom
ja
pop
(bad)
xor
clc
pusha
xchg
aaa
jg
out
lock
and
imul
add
dec
enter
inc
lahf
mov
or
push
mov
mov
xchg
cmp
ins
(bad)
mov
mov
pop
fxch
adc
mov
test
cmp
pop
or
add
sbb
inc
fild
gs
cdq
dec
xor
bound
ficomp
xchg
mov
sbb
aaa
sbb
add
xor
mov
imul
adc
scas
mov
call
xchg
pop
add
in
sub
adc
call
leave
pop
call
lahf
pop
and
or
movs
popf
cld
sub
adc
out
test
adc
and
mov
xor
xor
xchg
add
sbb
cs
add
inc
ja
fsub
and
call
xchg
push
dec
cmp
in
adc
sbb
add
mov
cmp
cmp
dec
fadd
adc
push
sub
retf
inc
inc
xor
(bad)
addr16
test
mov
sbb
pusha
add
pop
outs
movs
mov
cmp
push
imul
jmp
jb
mov
retf
add
test
(bad)
jae
mov
sbb
retf
movs
xchg
push
daa
fsub
jno
xor
xchg
push
jge
pop
(bad)
jmp
fsub
ins
adc
or
jmp
or
das
das
xchg
pop
or
jl
adc
pop
dec
mov
jp
xchg
sbb
cmp
cld
pop
cmp
sub
adc
add
movs
shr
fstp
enter
xor
pushf
cmp
pop
xchg
stos
rcr
lock
or
(bad)
repnz
jbe
in
mov
imul
mov
push
gs
mov
retf
rcr
xchg
xchg
xchg
outs
sbb
fucomip
jne
in
cmps
sbb
in
mov
stc
rol
dec
ds
sbb
lea
push
add
sub
out
jmp
mov
xchg
hlt
sti
or
test
aaa
fwait
fs
jae
mov
test
mov
in
aad
imul
icebp
cmp
ret
scas
or
out
int3
inc
jecxz
mov
leave
push
mov
aam
inc
xchg
xor
sar
fldenv
xchg
xchg
lahf
mov
mov
fidivr
push
cmc
xchg
xor
pop
fsubr
push
(bad)
cld
arpl
mov
fbld
daa
xchg
sub
clc
sub
push
and
fadd
(bad)
fmul
int
popf
and
mov
pop
dec
cmp
pop
movs
outs
push
in
(bad)
cli
lock
jge
sub
pop
popa
in
cmp
shr
ins
out
or
cmps
pop
inc
ret
sbb
add
sbb
(bad)
mov
inc
xchg
jecxz
gs
jbe
ror
inc
cld
cmp
into
inc
dec
xor
jle
rcl
ret
mov
(bad)
xchg
sub
jg
dec
adc
cmps
xor
(bad)
movs
cs
inc
lahf
int
inc
mov
adc
jecxz
cmp
lods
imul
adc
arpl
jl
retf
jmp
cs
adc
mov
xchg
jbe
mov
popf
pop
dec
push
sub
pop
into
aaa
sub
dec
mov
retf
rol
inc
cmp
ficom
retf
xor
fdivr
repz
lods
dec
ja
pop
inc
cs
retf
xchg
movs
out
add
dec
xor
adc
pop
push
bound
enter
loopne
inc
add
gs
inc
xchg
int3
nop
iret
sbb
(bad)
das
ds
xchg
mov
ror
cmp
in
icebp
push
mov
cli
xlat
ins
cmp
imul
or
sbb
sub
jns
cmp
fidiv
outs
dec
mov
add
xor
or
add
iret
ret
aas
add
add
adc
(bad)
cmp
xor
mov
pop
ja
cmp
les
and
push
daa
sub
xchg
(bad)
sub
out
les
mov
sub
push
push
cmps
aam
ins
adc
scas
cmp
xchg
jbe
stos
lahf
or
stc
jge
xor
clc
vmovq
sub
mov
mov
in
addr16
mov
jo
out
ret
es
call
cmc
sar
movs
dec
mov
ss
xor
inc
daa
arpl
das
jnp
xchg
stos
mov
adc
outs
movs
cmc
pop
cmp
and
stc
pop
ins
inc
mov
lock
repnz
pop
shr
repnz
shr
iret
or
ja
jle
push
shl
icebp
in
xchg
lock
stos
in
data16
fsub
je
or
jmp
or
push
inc
pop
loop
loopne
retf
inc
movs
dec
push
mov
mov
jecxz
rol
call
sub
add
cmp
not
xor
mov
daa
and
gs
xchg
stc
jmp
dec
pop
xchg
push
out
cmp
pusha
add
lock
and
add
dec
sbb
fwait
out
retf
sbb
pop
cli
popf
push
mov
movs
sbb
inc
cmc
(bad)
into
lahf
push
mov
std
outs
xor
mov
test
add
xor
test
call
dec
add
mov
push
aam
jp
cli
in
jno
cmc
pop
and
push
pop
adc
pop
adc
movs
stos
jp
(bad)
ror
mov
arpl
aam
xchg
mov
imul
add
adc
dec
dec
jecxz
stos
mov
sbb
xlat
mov
nop
(bad)
push
iret
push
pusha
cld
mov
data16
ds
sub
lahf
(bad)
clc
jo
jecxz
shr
call
pop
js
mov
xchg
ret
xchg
pop
(bad)
mov
out
clc
iret
cmp
(bad)
cld
popa
or
adc
stos
outs
mov
xchg
jge
jmp
add
retf
mov
sbb
sub
test
cs
ins
pop
mov
sbb
sbb
retf
pop
and
loop
repnz
mov
push
mov
cmp
pop
adc
scas
fldcw
scas
jo
adc
jp
adc
xor
jmp
sahf
pop
lds
icebp
mov
xor
ficomp
sbb
stos
loope
mul
into
jg
jle
xor
clc
aas
ins
sbb
popa
jl
jo
jge
push
xchg
rcl
scas
scas
rcr
div
arpl
imul
fucom
inc
or
dec
push
jl
ficom
arpl
pop
jo
jle
in
add
call
push
cdq
pop
mov
xchg
es
aaa
icebp
(bad)
jno
ret
mov
and
push
gs
or
hlt
adc
add
xor
cmp
ror
gs
mov
jp
mov
pusha
repnz
dec
popa
ja
cli
xchg
pop
cmp
push
cmp
sub
dec
push
iret
popf
mov
int3
psllq
out
inc
rcl
jnp
mov
les
jns
mov
shr
jle
mov
jno
xchg
es
icebp
pop
ins
outs
push
mov
out
xchg
inc
xchg
mov
cwde
fsubr
inc
mov
cmp
daa
(bad)
pusha
pop
add
sbb
jecxz
inc
sbb
stos
repz
push
inc
iret
sub
jae
jmp
leave
(bad)
enter
mov
mov
iret
push
hlt
in
ins
out
jb
pop
int
xchg
push
leave
inc
mov
dec
xchg
bound
xlat
push
inc
lods
mov
push
pop
mov
mov
inc
fwait
or
add
popf
xchg
jo
push
pushf
or
add
stos
shr
popf
jns
jno
shl
pop
push
stos
xchg
outs
sub
fldcw
pop
fcomp
push
pushf
popa
stc
pop
push
icebp
and
daa
pop
xor
mov
aam
push
jnp
dec
fmul
sti
push
jo
pop
ss
fs
jp
test
in
or
adc
stos
inc
test
dec
retf
xor
xchg
push
aaa
inc
xor
add
int3
ins
dec
push
xchg
fwait
and
jne
jmp
or
shl
daa
add
mov
pop
pop
jg
jmp
mov
dec
jge
scas
popf
xchg
scas
stos
enter
fwait
outs
jbe
mov
lods
ret
arpl
loop
aaa
dec
dec
aaa
stc
loope
nop
mov
imul
jle
dec
pop
sahf
mov
and
fild
jno
add
inc
shl
call
fwait
and
out
int3
addr16
repnz
les
inc
repnz
xor
pusha
xchg
dec
sbb
div
mov
xor
sub
in
push
leave
jmp
call
add
inc
in
dec
loope
in
jmp
or
add
or
mov
or
and
sub
movs
lock
adc
nop
cmp
(bad)
mov
lods
stc
mov
ins
pushf
clc
dec
mov
stos
add
and
mov
inc
shr
add
cmp
lock
nop
cdq
pop
arpl
(bad)
mov
or
push
mov
ret
mov
not
pop
jecxz
shr
push
out
xlat
ja
dec
cmp
std
das
mov
sbb
cmp
out
in
popa
std
cdq
fwait
jmp
inc
std
pop
jg
push
mov
js
jmp
stos
das
mov
imul
cmp
push
mov
mov
push
jp
jb
aam
mov
jne
rcl
adc
frstor
push
push
jp
in
popf
adc
addr16
inc
pusha
(bad)
test
xor
jmp
inc
cli
rcr
das
out
cmp
paddsw
sar
fs
xchg
xchg
or
inc
test
jl
loop
std
mov
test
dec
pop
test
(bad)
cmp
mov
ret
cmc
jl
cmp
pop
xor
ss
daa
mov
sub
es
sbb
push
in
jno
mov
or
into
nop
push
stos
call
aad
ss
test
inc
cwde
add
shld
or
adc
fnstenv
movs
xor
sub
dec
pop
jle
jbe
shr
xchg
add
retf
sbb
and
call
iret
mov
mov
jp
mov
and
lds
add
in
stos
xlat
(bad)
stos
push
and
push
jl
push
mov
adc
xchg
mov
pop
push
push
ins
je
push
repnz
xor
test
cdq
push
push
stc
scas
push
and
add
dec
or
adc
jmp
js
sbb
ins
inc
mov
popf
pop
pop
sbb
cdq
repnz
dec
into
push
imul
sub
cld
or
call
xchg
pop
in
stc
dec
sbb
out
mov
xor
les
push
loope
bsr
aad
sub
inc
outs
aam
inc
and
stos
nop
sbb
sub
pusha
or
push
mov
clc
and
sbb
imul
mov
ret
(bad)
out
cmps
mov
jbe
add
push
not
mov
bound
loop
std
jge
sahf
(bad)
mov
or
jo
add
push
jbe
add
ins
adc
mov
(bad)
popa
sbb
stc
sbb
mov
out
ret
and
and
pushf
add
mov
jp
(bad)
xchg
inc
ror
jns
mov
nop
dec
xor
mov
jmp
or
std
les
repnz
adc
push
hlt
dec
repz
or
sub
pop
push
mov
xor
jle
xor
push
pusha
lea
(bad)
cmp
push
jnp
cmc
(bad)
pop
mov
or
js
pop
sbb
jmp
sbb
repz
mov
xchg
xchg
fld
xchg
dec
sub
inc
adc
xchg
sub
ret
or
fst
mov
imul
imul
popa
mov
mov
or
or
adc
jmp
(bad)
jnp
mov
or
jne
pop
pop
and
js
fnstsw
or
data16
push
inc
(bad)
xchg
jmp
movs
jnp
and
daa
scas
mov
dec
and
rcr
xchg
cli
imul
and
cmp
daa
je
sub
sub
sbb
addr16
mov
and
mov
jae
call
add
sub
push
je
repz
fist
loope
xor
pop
mov
out
push
es
mov
dec
add
loope
je
jp
stos
cmp
out
mov
push
iret
gs
sub
jns
mov
in
fsub
or
jae
shl
div
les
sub
push
mov
xchg
jge
fs
mov
mov
cmp
xchg
sbb
cli
in
adc
cmp
dec
pop
cld
push
das
jnp
xchg
jb
push
sbb
leave
jmp
xchg
popf
mov
jecxz
call
fild
mov
out
shl
xchg
push
add
sub
push
push
pop
dec
sub
addr16
pushf
xchg
int3
test
jl
ror
hlt
mov
aaa
dec
call
cs
call
fisub
or
push
popf
sbb
int3
jp
ss
jmp
adc
push
jae
or
lock
pop
cmp
xchg
es
push
mov
mov
shl
scas
cmps
xor
pop
xor
outs
jp
mov
pop
jmp
sbb
xor
je
cmp
(bad)
xor
xor
pushf
mov
jle
test
into
jp
cmp
retf
or
or
popf
jecxz
or
scas
inc
aaa
fild
push
out
fldenv
movs
mov
pop
xlat
adc
pop
arpl
adc
pop
fwait
add
and
retf
mov
pop
lea
aad
int3
ror
jo
jecxz
ret
mov
ret
jmp
cmp
jne
retf
stc
cmp
mov
or
jns
fldenv
enter
cli
idiv
hlt
pop
fidivr
cli
sub
shr
add
xchg
shl
add
xchg
(bad)
dec
int3
dec
(bad)
cmp
xchg
xchg
shr
and
(bad)
jns
daa
hlt
stos
mov
xor
or
cmp
adc
pop
aad
enter
test
pop
jle
stos
mov
push
xor
cmp
mov
(bad)
aas
cmp
int3
imul
fistp
mov
sar
scas
dec
sub
retf
add
xchg
lock
std
push
out
cmp
pop
or
sbb
shr
jmp
jecxz
rcl
mov
mov
pop
cmp
aas
test
call
push
dec
jmp
mov
inc
(bad)
push
jns
xchg
sbb
mov
mov
pop
(bad)
and
sbb
mov
push
adc
lea
lock
inc
ja
adc
add
in
outs
lds
clc
aad
enter
xchg
cdq
(bad)
fiadd
dec
retf
adc
mov
xor
pop
sbb
data16
xchg
scas
mov
(bad)
cmp
pop
push
lahf
je
mov
mov
pop
rcl
push
xchg
addr16
sbb
add
xchg
aad
sub
jl
mov
enter
outs
push
outs
xor
jno
xchg
xlat
mov
in
icebp
adc
and
adc
ret
dec
mov
dec
mov
jmp
neg
push
out
icebp
inc
mov
mov
cld
inc
adc
sub
lahf
pop
ret
in
mov
inc
stos
xchg
fdivp
jmp
(bad)
mov
add
gs
(bad)
mov
in
rcl
fidiv
shr
adc
call
xchg
sbb
loope
xchg
loop
jp
push
call
aad
lea
aaa
pop
test
int
repnz
sub
bound
jns
sub
push
or
fdivr
jno
ror
jno
jecxz
mov
leave
jns
dec
pop
rol
mov
and
sbb
pop
add
or
pop
imul
(bad)
sub
sub
cdq
push
xchg
fimul
inc
retf
pop
xor
(bad)
mov
jl
jo
mov
(bad)
xor
fwait
mov
(bad)
ins
stos
sbb
loope
int3
cld
mov
cmps
imul
iret
dec
cmp
mov
jo
ins
pusha
(bad)
rol
repnz
lods
mov
sar
mov
cmp
push
jle
fistp
jbe
mov
idiv
(bad)
adc
fistp
jae
dec
ins
jnp
mov
push
xor
(bad)
mov
call
std
add
adc
movs
fist
popf
out
cmp
pop
jo
jecxz
mov
push
add
sub
adc
mov
mov
(bad)
mov
shl
pop
cld
mov
mov
std
outs
sub
imul
xchg
call
shld
push
sahf
arpl
inc
pusha
mov
(bad)
mov
adc
lds
pop
add
fidiv
call
test
pop
push
mov
inc
ins
xor
das
enter
adc
mov
add
ror
adc
adc
ins
shr
adc
fisubr
subps
inc
scas
adc
jmp
push
retf
arpl
sub
das
adc
jge
xor
cmp
xor
inc
push
mov
dec
fiadd
sbb
ins
aas
push
jle
sbb
aam
inc
and
add
les
loopne
lea
push
es
and
mov
call
adc
lock
adc
repnz
cmp
iret
adc
and
das
int3
or
or
out
jmp
push
jp
mov
cmp
mov
aam
dec
sbb
pop
(bad)
shl
mov
andnps
add
pop
xchg
or
enter
pop
pusha
lods
loop
sub
out
push
or
and
bound
jo
mov
(bad)
cmc
and
mov
dec
dec
or
mov
push
sbb
cld
dec
xchg
call
cmps
push
adc
cld
imul
sub
jne
(bad)
aas
xchg
mov
cmovno
sbb
js
inc
es
sub
cmp
mov
pop
jecxz
call
retf
aam
push
pop
jno
jae
cmp
mov
and
repnz
lods
push
loope
std
push
(bad)
shr
je
adc
aam
imul
or
or
add
mov
pop
mov
xor
out
jl
mov
cmp
cdq
pusha
dec
out
mov
sbb
daa
jb
stos
es
(bad)
clc
call
pop
pop
loop
fidiv
iret
pop
aam
push
push
pop
pop
test
push
scas
loope
jne
sbb
pusha
cld
push
pop
dec
ins
inc
rol
dec
push
dec
sub
add
dec
int
scas
popa
or
add
and
repnz
data16
mov
mov
movs
cmps
stc
jmp
push
fnstcw
sar
or
retf
dec
and
mov
(bad)
inc
add
push
or
in
ret
ror
sbb
sub
test
push
ret
(bad)
adc
adc
loop
call
jno
call
(bad)
aam
pop
cmp
les
aad
xor
jmp
stos
stos
or
pusha
xor
cdq
add
jne
lahf
das
mov
arpl
inc
out
in
shl
sbb
or
ja
stos
xchg
add
adc
sbb
outs
mov
iret
jbe
lahf
test
adc
daa
jmp
push
stos
out
shr
cmp
pop
out
xor
lods
fcmovbe
add
or
add
bound
xchg
fisttp
sahf
xor
mov
cmp
cmp
cdq
(bad)
mov
dec
lds
mov
push
fwait
push
icebp
push
sub
out
mov
cld
imul
cmc
dec
in
lahf
jmp
out
sbb
push
ja
lahf
adc
inc
mov
inc
loope
xchg
dec
add
stos
dec
(bad)
sti
aam
jno
sbb
loopne
test
(bad)
push
shl
fndisi(8087
cli
enter
iret
repz
clc
cwde
jnp
pop
jno
jbe
fld
sub
scas
fs
sbb
test
mov
dec
lods
xchg
popf
test
imul
daa
inc
lea
ret
data16
and
mov
pop
fadd
xchg
or
sbb
sub
mov
repnz
cmp
aad
cmp
add
leave
jle
test
inc
jne
scas
pop
sbb
jns
push
out
adc
sbb
push
in
jecxz
in
outs
addr16
cmps
xor
out
sub
xchg
and
jge
mov
cdq
aam
pop
outs
jo
xchg
adc
outs
int
add
bound
xor
push
xchg
inc
jne
cmp
enter
adc
(bad)
rcl
jb
cwde
and
movs
sub
jbe
pop
sbb
push
fld
(bad)
push
popf
mov
mov
xchg
mov
pop
jmp
test
mov
sbb
test
xor
(bad)
lea
jnp
mov
dec
jno
mov
neg
dec
or
and
inc
push
mov
test
scas
xchg
push
out
ins
mov
hlt
cmp
data16
mov
hlt
int
jb
push
or
(bad)
fwait
gs
dec
adc
dec
das
test
ja
shr
sbb
out
xor
xor
xor
sbb
push
lock
fs
xor
fimul
add
jmp
mov
mov
add
sub
push
test
sahf
fld
fisub
fsincos
repz
push
addr16
ret
xor
loop
int3
pop
sub
aas
stc
(bad)
cmp
xlat
fldenv
call
ja
pop
xlat
mov
repz
and
xor
mov
xor
fsubr
and
mov
and
sahf
stos
xchg
pop
shl
hlt
sub
aad
popf
push
hlt
sbb
jmp
jp
mov
mov
mov
jno
sar
aaa
leave
inc
xchg
xchg
mov
in
loop
or
scas
or
ds
xchg
outs
jns
fsubr
sbb
mov
gs
jne
dec
daa
aad
xchg
xchg
sub
and
pop
xor
dec
add
add
push
push
int
sahf
jo
test
push
mov
das
sub
stos
fistp
outs
(bad)
xchg
jb
(bad)
(bad)
xor
mov
cmp
add
mov
cmps
fsub
test
push
gs
dec
or
scas
and
shr
scas
icebp
jg
pop
les
(bad)
loop
lea
aam
mov
cli
lea
mov
add
push
xchg
repnz
xchg
adc
or
mov
mov
sub
fwait
out
dec
(bad)
lods
mov
and
or
mov
mul
(bad)
mov
je
sbb
and
call
es
push
mov
push
inc
loopne
inc
sbb
or
xor
pop
sub
int3
dec
es
sahf
in
jbe
mov
(bad)
add
mov
pop
leave
bound
dec
call
ja
dec
arpl
mov
xor
jg
jno
ds
dec
push
mov
cmp
fisttp
icebp
arpl
movs
movs
fadd
shr
inc
test
and
pop
inc
stc
and
push
inc
sub
jae
jge
mov
xor
scas
mov
push
imul
mov
pop
sub
js
test
stos
icebp
pop
pop
test
and
mov
(bad)
imul
mov
xor
aad
push
(bad)
push
mov
add
out
das
xor
push
jg
sbb
ins
ja
mov
mov
out
es
sbb
icebp
ins
stos
mov
cmp
jecxz
in
retf
cmps
(bad)
rol
dec
ss
push
fwait
popa
jae
shl
lods
adc
inc
mov
(bad)
leave
add
sar
popf
mov
cmc
cmps
hlt
cwde
inc
adc
pop
push
jns
jne
loope
sub
push
mov
mov
mov
jmp
cmp
loopne
inc
lock
lods
cmp
rcl
js
outs
dec
sub
push
js
enter
jnp
jmp
fcom
out
cmps
dec
lea
ret
add
mov
rcl
or
gs
mov
in
mov
and
into
and
aam
leave
out
out
call
mov
mov
es
es
xchg
(bad)
cli
push
dec
int
(bad)
test
icebp
xchg
push
popa
jne
mov
lea
inc
je
dec
or
jno
jecxz
cmp
jl
add
nop
sub
lds
dec
std
xor
test
inc
jmp
inc
sahf
jb
push
mov
xor
or
imul
push
or
(bad)
leave
aam
es
popa
push
dec
push
int3
pop
dec
int
out
mov
cmp
adc
sub
cmc
push
into
aam
dec
add
stc
mov
cwde
gs
movs
mov
ret
inc
(bad)
xchg
or
les
and
push
pop
xor
icebp
add
js
xchg
and
sbb
jb
jge
or
pusha
in
loope
xor
inc
ss
sti
xor
inc
arpl
int3
cmps
out
adc
xor
xlat
xchg
sub
pop
xchg
(bad)
jmp
sub
dec
inc
fist
xor
and
repnz
clc
cmp
mov
mov
xlat
retf
fild
xor
xchg
xor
pop
push
jbe
imul
mov
or
add
fbstp
jle
sbb
xchg
pushf
icebp
adc
mov
repnz
sub
icebp
out
mov
push
sbb
mov
sbb
outs
mov
test
mov
dec
ins
jnp
ss
ins
ficom
jnp
loopne
xchg
cld
mov
mov
out
push
cdq
pop
cmps
xchg
jl
push
repnz
sub
cmps
cmp
jmp
xchg
lods
pop
pop
sbb
cmps
(bad)
sahf
stos
lods
movs
xchg
push
retf
jno
pushf
retf
call
(bad)
stos
sbb
xor
idiv
xor
repnz
aaa
jge
and
es
dec
and
out
inc
jns
sbb
mov
(bad)
les
ja
in
xchg
bound
scas
test
inc
cmp
adc
inc
inc
das
jge
popa
xor
and
das
dec
out
mov
xchg
ror
xchg
sbb
mov
ds
es
in
xchg
cmp
cmp
xchg
bswap
pop
pop
adc
jp
dec
push
push
shl
pop
sub
or
sub
lds
std
mov
push
jo
adc
rcr
sbb
or
inc
dec
out
test
int3
aaa
sbb
sub
jecxz
inc
dec
leave
jno
pop
xor
nop
mov
pushf
dec
adc
(bad)
nop
xchg
push
jle
test
iret
imul
adc
fst
jno
xor
xor
push
inc
ret
mov
push
inc
sbb
enter
in
sbb
mov
(bad)
xchg
dec
popa
cmps
fidiv
fld
mov
bound
clc
push
outs
mov
xor
test
(bad)
or
or
mov
push
push
lahf
jecxz
cmp
inc
pop
mov
add
cdq
(bad)
repnz
or
fdivr
iret
fsub
daa
sub
data16
and
dec
jb
ret
xor
or
dec
add
cmc
hlt
lahf
xchg
push
or
(bad)
in
push
sbb
call
rcr
add
call
ins
ja
fisubr
mov
sbb
mov
pop
(bad)
pushf
scas
mov
pop
xor
xchg
jmp
push
in
cmp
jle
pop
pop
fadd
popa
outs
mov
mov
aad
pop
dec
push
jle
test
push
jbe
test
dec
sub
jns
sub
xor
mov
out
inc
clc
sar
ja
pop
jl
sahf
daa
inc
retf
(bad)
out
mov
jns
enter
mov
mov
and
mov
mov
xrelease
pop
push
mov
idiv
push
fcomip
cli
jmp
xchg
inc
repnz
jb
jae
jmp
adc
(bad)
retf
es
into
test
pusha
scas
or
push
movs
mov
sub
pushf
pop
push
sub
lea
movs
add
mov
add
call
mov
mov
sub
fisttp
daa
ins
mov
add
in
mov
jnp
retf
mov
imul
mov
cmps
ja
push
dec
arpl
mov
mov
aam
jge
rcl
test
cmp
adc
out
pop
test
dec
ins
sbb
repnz
push
test
sti
ror
icebp
imul
shl
shl
adc
inc
fisttp
mov
push
sti
adc
xor
mov
xchg
or
cmp
fs
mov
mov
shl
fs
ffreep
stos
inc
jae
xchg
dec
and
enter
jo
mov
push
shl
dec
cmp
mov
pop
dec
call
fiadd
es
dec
cmps
in
retf
jecxz
movs
retf
movs
or
aas
hlt
push
ds
add
and
sub
in
xchg
lahf
out
shl
dec
xchg
xchg
daa
pop
mov
and
xor
es
inc
inc
retf
and
xchg
and
pushf
scas
cmp
pop
push
mov
clc
fcom
lock
rcr
sub
outs
mov
je
cli
js
clc
mov
ins
mov
cmp
mov
dec
mov
or
in
cli
xchg
dec
test
(bad)
ret
dec
xor
pop
neg
add
mov
pop
xor
push
cmp
add
jge
loope
loope
cld
mov
mov
cmps
mov
cli
dec
out
or
and
retf
jne
mov
or
sbb
lods
shr
les
rol
dec
(bad)
mov
adc
pushf
aas
test
cld
mov
fisub
push
cmps
and
sbb
(bad)
movs
movs
pop
mov
aad
popa
rcr
add
xchg
cwde
mov
lea
daa
sub
adc
mov
(bad)
and
aad
out
sbb
mov
inc
xchg
jmp
cmps
xor
into
sbb
add
jmp
mov
inc
pop
sub
(bad)
and
clc
sbb
mov
gs
add
or
push
push
test
stc
xchg
adc
jp
inc
cmp
pop
dec
out
sbb
daa
sbb
movs
dec
repz
(bad)
call
gs
xchg
push
xchg
int
jmp
mov
xor
sub
lods
and
mov
add
fcmovnbe
pop
cli
scas
push
sbb
js
add
mov
mov
loopne
cmps
xchg
pop
sahf
add
mov
mov
arpl
rol
dec
ss
cmp
push
imul
jecxz
adc
test
dec
(bad)
xchg
ss
and
sbb
jbe
in
sub
adc
shl
cwde
cmp
xchg
ret
mov
test
jne
pop
retf
mov
push
dec
jmp
or
adc
mov
and
pop
mov
lock
dec
jo
clc
data16
mov
dec
out
mov
(bad)
mov
test
mov
mov
push
inc
test
pop
repnz
cmp
cs
or
sbb
inc
dec
vpaddsb
dec
out
jno
fisubr
xchg
dec
jmp
jmp
aad
pushf
xchg
dec
inc
add
cmp
mov
ror
into
xlat
into
std
mov
cmp
(bad)
fld
sub
xor
cs
dec
out
push
mov
xlat
inc
jge
push
sbb
dec
(bad)
ror
int3
add
stos
fdiv
pusha
inc
or
test
adc
mov
and
xor
test
dec
xchg
icebp
mov
loope
fs
push
xor
fadd
pop
jmp
mov
loope
rcr
cli
jns
adc
push
push
inc
sub
xor
xor
jge
pushf
into
sbb
sub
jg
mov
std
mov
test
movs
push
dec
jp
leave
mov
adc
call
cmp
xchg
inc
and
pop
mov
lahf
mov
in
jp
push
sub
movs
cwde
add
clc
scas
jmp
pop
(bad)
or
ins
xchg
mov
dec
jne
les
cmps
dec
aaa
sub
push
iret
scas
adc
mov
adc
arpl
pop
sub
ret
cmps
mov
mov
xchg
stos
xor
out
ror
sub
fnstsw
pop
mov
(bad)
jo
jmp
jmp
call
cmps
mov
jp
test
addr16
gs
repnz
fdivr
outs
xor
ficomp
sar
lea
inc
xchg
stc
fsubrp
push
adc
std
xchg
add
jo
js
shl
imul
pop
gs
es
mov
ror
repnz
mov
rcr
xor
sti
(bad)
iretw
sub
sbb
imul
out
mov
lock
scas
and
in
ja
pop
xchg
xchg
addr16
ficom
push
into
mov
fs
adc
sbb
pusha
popa
push
cmp
mov
dec
and
je
enter
add
push
xor
or
fwait
repnz
push
xchg
daa
cmps
bound
mov
jo
mov
xor
xchg
inc
test
pop
xor
fistp
cmp
fdivp
xchg
dec
lahf
push
push
in
test
push
int
xchg
cmp
jns
jle
bound
jle
mov
(bad)
je
(bad)
xchg
mov
mov
push
add
sbb
cmc
rol
mov
jmp
imul
pop
cmps
int3
stos
ret
sbb
cdq
pop
and
mov
pop
add
add
in
imul
pop
fwait
test
dec
cmps
rol
pop
cmps
sahf
repz
pop
leave
jmp
aad
fisubr
mov
jns
jb
int3
cmp
xor
mov
mov
aas
xchg
mov
rcr
in
jo
lods
add
pop
jecxz
cmp
xchg
leave
shr
xchg
cwde
enter
jge
hlt
fcomi
fldcw
sub
dec
and
inc
push
adc
aas
fistp
call
js
dec
cmp
xchg
inc
ss
daa
pop
jle
xor
loopne
mov
aam
jno
lock
add
ja
push
sti
xchg
xchg
addr16
pop
mov
inc
out
das
mov
push
sbb
mov
add
out
in
mov
fnstsw
cld
std
mov
fst
dec
mul
aas
in
jmp
sbb
ret
mov
jnp
adc
sub
xor
outs
aas
dec
aas
dec
pusha
ja
imul
jnp
outs
mov
dec
pushf
jbe
movs
adc
fist
sbb
(bad)
push
(bad)
xlat
sub
mov
(bad)
repz
xor
(bad)
pusha
ret
mov
xchg
pushf
mov
lds
dec
cld
retf
sar
(bad)
lahf
mov
mov
std
push
mov
push
pop
pop
xor
rcl
mov
mov
pusha
pop
mov
xchg
(bad)
pushf
(bad)
jne
mov
pop
cmps
imul
into
outs
sub
ins
cmc
pop
xchg
xchg
fs
rol
xchg
pop
mov
xor
shl
rcr
jmp
and
repz
dec
pop
sbb
push
pop
call
xchg
ins
jns
mov
dec
jle
ins
pop
mov
sbb
sbb
fwait
mov
lock
pop
into
aam
mov
mov
out
cmp
adc
add
jle
jne
ror
mov
pop
movs
lahf
pop
mov
xchg
mov
imul
inc
push
shr
scas
pop
dec
lock
jne
and
jnp
mov
mov
lods
cmp
dec
dec
xchg
mov
stos
sbb
xchg
jmp
aad
div
(bad)
xchg
fdiv
sbb
jmp
outs
dec
std
adc
imul
add
jle
loop
ret
or
fadd
cmps
push
iret
push
lods
vprotw
mov
(bad)
sbb
adc
cmp
adc
add
in
sub
mov
adc
test
mov
lahf
ret
into
outs
shl
jecxz
xor
lds
popf
mov
and
mov
add
xchg
aam
lods
test
ins
xor
adc
sub
mov
ja
iret
jecxz
cmp
retf
arpl
into
adc
or
sbb
mov
loop
sub
ds
add
imul
or
imul
cmp
dec
add
int
das
out
sbb
fsub
cmc
xor
push
dec
sti
and
sub
mov
xchg
rol
pop
mov
loope
cmps
pop
pop
mov
lods
mov
adc
inc
push
idiv
add
dec
mov
xchg
mov
(bad)
test
sahf
inc
(bad)
pusha
xchg
lods
push
xor
aaa
in
cmps
cmp
add
(bad)
xchg
adc
cmp
mov
lock
add
outs
dec
xchg
icebp
nop
push
add
lahf
adc
ins
jmp
shl
movs
(bad)
daa
mov
(bad)
lahf
xchg
jl
pop
dec
add
fdiv
push
fsubr
jmp
addr16
sub
mov
and
push
and
retf
and
and
aas
add
pop
cmc
nop
aad
std
jnp
(bad)
jp
jle
cs
out
mov
test
and
pop
and
inc
xor
imul
bound
push
xor
push
stos
outs
xchg
ret
aaa
cmp
jle
xor
(bad)
mov
inc
xchg
and
jg
addr16
ret
jno
and
xchg
ret
mov
ret
inc
icebp
inc
dec
cmp
push
mov
mov
sbb
sub
inc
icebp
ret
adc
out
xchg
pop
add
mov
sbb
(bad)
ja
in
or
jmp
inc
rcl
sar
ins
xor
dec
or
mov
mov
sbb
retf
dec
dec
sub
clc
mov
xchg
(bad)
jg
xchg
addr16
imul
xlat
or
dec
mov
jae
test
es
mov
mov
jge
jno
test
push
out
sub
inc
daa
mov
sti
push
sbb
or
(bad)
jae
sub
fst
cmp
sbb
es
bswap
mov
ds
xor
imul
dec
push
ret
add
push
pop
push
imul
fidivr
dec
rcr
push
loopne
retf
test
test
sbb
iret
push
pop
loop
push
iret
adc
mov
fimul
dec
test
enter
xchg
fidivr
push
mov
or
aad
bound
test
sbb
jbe
sbb
scas
xchg
fcmovne
ror
pop
cmove
pushf
lea
mov
push
jp
retf
jbe
sbb
repz
das
rcr
cmps
mov
push
jmp
retf
das
jns
call
cwde
jg
add
ret
jo
test
push
jg
fwait
mov
ror
test
cmp
enter
inc
into
cmp
loop
cmp
and
jo
lods
jnp
cmp
aaa
ror
rcr
pop
pop
into
or
pop
gs
push
sar
je
xor
jmp
test
mov
pop
pop
add
mov
fsubr
ret
(bad)
enter
ficom
fstp
ins
and
xchg
ficomp
xchg
aam
cli
sbb
sti
xchg
das
inc
xchg
outs
jle
bound
or
dec
pop
enter
scas
imul
adc
xchg
jecxz
sbb
out
cmp
std
fucom
push
or
jl
gs
test
test
pop
add
pop
pop
adc
cmp
jmp
cmp
adc
mov
jge
and
adc
(bad)
jge
in
xchg
mov
jecxz
mov
mov
mov
retf
dec
retf
and
jl
pop
jae
fwait
inc
int
xchg
mov
mov
cld
shr
mov
mov
call
and
dec
loopne
call
rcr
outs
sub
mov
mov
jle
mov
xor
xchg
adc
jmp
call
lods
push
in
cmp
pop
fwait
in
rcr
xchg
icebp
lahf
mov
iret
mov
pop
lods
pop
pushf
(bad)
or
adc
shl
test
add
sbb
and
pop
out
ss
int3
cmp
jl
jmp
in
xchg
inc
xchg
test
mov
jbe
xor
push
nop
mov
cmps
xchg
fiadd
sub
pop
(bad)
ins
cmp
push
mov
(bad)
fbstp
outs
std
ret
pop
pushf
into
stc
or
aas
ja
inc
in
jecxz
dec
cli
test
les
xchg
retf
sub
(bad)
xchg
icebp
inc
dec
and
stos
cdq
mov
outs
test
push
test
scas
mov
call
mov
ds
movs
inc
inc
pop
cdq
das
test
lods
sbb
out
fsubr
outs
aas
xchg
mov
int
inc
adc
lods
push
pop
ds
std
out
mov
mov
test
std
pop
and
jmp
cdq
imul
inc
inc
popa
adc
repz
sub
shl
dec
in
sbb
or
ret
add
mov
fisub
(bad)
lock
aam
scas
cmc
pop
jo
and
mov
out
xchg
adc
inc
das
ins
adc
xchg
iret
xor
mov
mov
loopne
push
dec
js
lea
or
movs
jnp
rol
ins
stos
outs
movs
imul
xchg
jno
sbb
push
ins
stos
test
lods
and
and
fisub
push
xor
mov
adc
mov
push
push
jmp
sbb
jg
(bad)
pop
movs
push
dec
dec
outs
rol
push
sbb
sbb
(bad)
jmp
and
cdq
ins
(bad)
js
sub
lods
ret
lds
push
out
xchg
je
pop
and
and
iret
fisttp
mov
call
ja
mov
add
pop
or
sub
push
sbb
sub
adc
adc
push
sahf
lock
jae
and
and
xor
inc
ror
adc
jno
push
mov
rcl
hlt
cmps
in
mov
jmp
mov
adc
add
fmul
(bad)
call
test
or
loope
lds
add
shl
push
add
pop
bound
mov
inc
jae
sbb
ss
addr16
or
xchg
push
aas
stos
loop
sub
pop
xor
sub
sub
or
ins
adc
pop
and
sub
pop
sti
mov
nop
pushf
movs
dec
stos
repz
xchg
(bad)
mov
gs
mov
sbb
lahf
cmc
jl
cmp
mov
push
leave
push
jo
sbb
sub
repnz
pusha
shl
sbb
lods
push
push
fs
dec
xor
or
push
aaa
mov
xchg
pushf
ffree
sub
leave
scas
rol
sar
std
sub
in
out
outs
mov
and
std
mov
stos
arpl
push
pop
ins
push
inc
mov
das
xor
imul
outs
lods
and
cdq
test
or
xchg
sti
push
inc
ds
stc
dec
(bad)
mov
and
fdiv
xor
imul
adc
push
xor
mov
shl
mov
(bad)
cmp
push
mov
dec
sub
and
jo
and
mov
sub
aam
inc
call
and
popf
pop
es
mov
(bad)
lea
es
test
push
mov
pop
rol
pop
in
rcr
dec
stc
jns
cld
mov
aad
jae
into
sbb
clc
lea
mov
add
lods
ins
cmps
mov
fs
pusha
rol
cmc
out
adc
in
lock
mov
pop
rcl
rol
xchg
mov
mov
out
push
dec
jae
std
ret
adc
fsub
aaa
scas
repz
sub
sbb
sbb
imul
push
and
push
and
sbb
mov
and
sti
dec
or
sbb
adc
pop
xor
pop
inc
pop
enter
mov
pop
icebp
xor
mov
jmp
rcl
add
daa
xor
mov
push
cmp
dec
(bad)
arpl
fild
imul
ja
sbb
retf
loope
mov
ins
pusha
cmp
sahf
adc
clc
(bad)
xor
arpl
push
jno
dec
or
call
xchg
rcr
mov
sub
mov
enter
pushf
fmul
scas
fild
jl
xor
mov
test
call
ins
sub
mov
(bad)
fldcw
sub
mov
mov
sub
jmp
out
dec
les
into
jmp
xchg
cmp
stos
arpl
xchg
outs
mov
mul
pop
in
jnp
test
lods
mov
and
xor
jecxz
mov
sub
add
outs
or
cdq
and
int3
ror
mov
shl
xchg
mov
data16
sti
dec
pop
js
xor
out
iret
jae
lahf
pusha
fsubr
rcr
ss
mov
sar
cld
sub
lock
sub
add
xor
scas
in
jp
imul
pop
lock
lds
jmp
jge
pop
mov
push
aas
jmp
xchg
and
pop
jnp
shl
mov
fs
push
pop
imul
movs
add
(bad)
mov
add
xchg
jns
mov
mov
push
lea
sub
call
rcl
pop
xlat
pop
jmp
iret
jnp
xchg
aas
dec
repz
xor
icebp
punpckldq
cmps
or
int
out
inc
ja
(bad)
push
mov
cmp
sti
xchg
stc
inc
shl
jns
hlt
lods
sub
jnp
retf
jno
rcl
repnz
mov
cwde
stc
inc
arpl
lods
out
sub
xchg
imul
mov
mov
sti
mov
inc
imul
mov
mov
inc
xchg
ja
fld1
jmp
jmp
(bad)
in
mov
sbb
aas
fisub
aas
pop
pop
inc
rol
jno
push
imul
js
hlt
adc
xor
sbb
clc
out
mov
repnz
movs
inc
add
inc
test
jno
mov
nop
jl
ret
xchg
xor
mov
in
ss
in
and
repz
enter
imul
sbb
or
mov
inc
jp
lods
mov
inc
sbb
pop
icebp
pop
xor
cli
repnz
push
xor
jno
pop
inc
fst
ret
in
inc
push
test
shl
loopne
jmp
xor
xchg
cli
push
shl
mov
pop
clc
int3
jb
cmc
out
sub
mov
cmps
js
fisub
fistp
(bad)
je
int3
loop
xlat
jle
sbb
cmp
mov
retf
sbb
dec
cld
push
push
in
ja
retf
mov
pop
test
fs
cmp
stos
shr
sti
adc
jne
jb
pushf
jmp
lods
jmp
ficomp
push
loopne
outs
out
and
mov
push
mov
adc
dec
pop
in
xor
push
test
test
retf
aad
and
js
xchg
mov
aad
lahf
outs
jl
sub
xlat
hlt
xor
mov
mov
repnz
mov
ins
sbb
(bad)
hlt
xchg
or
aas
pop
dec
jp
adc
push
or
in
stos
fadd
ds
inc
and
test
jno
sbb
scas
cmp
in
xchg
lock
xor
and
dec
push
push
cmp
(bad)
les
push
mov
adc
ds
cmp
cwde
xchg
aas
cdq
js
mov
mov
add
or
dec
add
test
xchg
cmp
or
add
xchg
fstp
pop
xchg
cmp
jmp
fidivr
mov
(bad)
push
pop
cli
lea
fldenv
mov
push
jnp
stc
dec
popf
mov
movs
push
mov
and
cmp
aam
jnp
push
or
ficomp
jge
stos
sub
cs
push
(bad)
mov
xchg
pop
xchg
cmp
fs
retf
clc
test
rol
enter
pushf
jge
mov
(bad)
(bad)
mov
stos
loop
mov
shl
xchg
js
por
sti
jl
fwait
xchg
adc
jb
push
cmp
cmp
and
cmps
mov
pop
jbe
sub
inc
sbb
cmp
scas
mov
(bad)
(bad)
mov
nop
fdiv
loope
or
enter
call
test
mov
add
call
ins
fistp
sub
cmp
sahf
int3
test
sbb
fnsetpm(287
xchg
ret
mov
test
ja
and
xor
sbb
fdiv
add
lahf
out
jns
inc
pushf
jg
cmp
daa
dec
cmps
cld
loop
mov
mov
clc
pop
sub
lock
jne
setp
ss
call
call
jecxz
loopne
mov
repz
push
cmp
aas
xchg
or
or
(bad)
and
cmp
repz
aad
mov
mov
loop
not
inc
std
inc
std
lahf
cmp
cli
xor
xlat
fistp
xor
dec
call
fcomp
push
sbb
aam
inc
stos
in
imul
in
dec
aas
dec
jl
add
jns
stos
ss
loop
mov
pop
retf
and
pop
xor
stos
cld
inc
and
mov
sbb
out
jge
xchg
popf
jle
xor
pop
aam
imul
push
addr16
mov
inc
ja
iret
ret
cmp
cli
repnz
jg
dec
std
cmp
clc
push
fdivp
sbb
stos
std
aas
mov
cwde
rcr
pop
add
ins
xor
xchg
jl
mov
jno
arpl
or
pop
lods
in
jnp
int3
nop
push
push
push
fcmovne
std
or
popa
fldcw
je
xor
jmp
or
(bad)
mov
jl
inc
mov
inc
mov
retf
outs
aad
xor
mov
push
adc
mov
(bad)
cwde
retf
clc
rcr
ins
xchg
jg
jmp
xor
stc
fst
xor
aad
sub
pop
imul
idiv
popf
add
mov
jbe
cmp
cwde
cmc
jecxz
hlt
fs
and
ja
cmp
mov
dec
cmp
inc
repz
clc
call
push
cmps
cwde
mov
cs
ret
push
or
int3
sbb
movs
add
push
cwde
into
cmp
jecxz
adc
sar
and
push
adc
cmp
std
test
addr16
cwde
imul
sub
loopne
or
adc
adc
sbb
and
jmp
pop
cld
pop
mov
hlt
lea
and
js
xchg
and
mov
push
rol
mov
test
xadd
cmp
imul
pop
mov
cmp
mov
xchg
ins
inc
jmp
adc
inc
jne
(bad)
xor
sub
shl
xchg
lea
or
mov
lds
adc
fisttp
pop
dec
adc
fsubr
test
mov
ins
inc
test
xor
jg
mov
in
cmp
mov
adc
daa
je
cmp
outs
xchg
cmp
les
dec
stos
cmp
or
hlt
loop
loope
sbb
and
adc
add
add
loop
mov
data16
adc
not
test
dec
stos
lods
adc
pop
in
imul
inc
and
and
mov
pop
inc
test
push
xchg
adc
mov
int3
pop
pop
dec
loope
push
mov
xor
sbb
sub
cmp
mov
jle
jg
neg
push
hlt
stc
stos
movs
xchg
adc
lahf
sub
(bad)
mov
in
xchg
or
(bad)
jmp
ficom
imul
mov
cmp
dec
aam
repnz
mov
dec
std
push
cwde
inc
sbb
fbld
mov
pop
sahf
xchg
dec
fnstsw
inc
mov
adc
or
pop
lahf
mov
adc
and
add
mov
pop
xchg
xchg
mov
and
dec
addr16
(bad)
(bad)
mov
(bad)
fwait
or
sub
pop
nop
scas
js
push
test
mov
xchg
test
cmp
ret
adc
iret
not
cli
popf
or
mov
(bad)
xor
adc
pop
xor
or
cmp
mov
xor
mov
jae
mov
xlat
push
add
call
and
dec
push
inc
xchg
jbe
out
dec
mov
jns
inc
fwait
leave
pop
mov
add
fs
pop
into
cs
dec
mov
xor
in
xchg
(bad)
mov
jb
pop
test
std
xchg
dec
jbe
push
dec
ins
ror
fmul
mov
fidiv
lahf
lds
ds
shr
mov
stos
jbe
adc
or
jg
clc
adc
xor
std
imul
push
ss
adc
jmp
jg
cmp
js
(bad)
mov
jns
push
push
push
mov
cwde
mov
cmps
lods
pop
inc
fstp
in
mov
addr16
xchg
push
loop
jno
ret
sub
jne
repz
enter
js
es
das
pusha
mov
pop
pop
lock
int3
push
gs
jns
ss
mov
out
sub
add
shr
jmp
fisubr
sbb
ja
push
inc
ds
dec
mov
lods
jo
hlt
rcr
cmovb
rol
cdq
dec
retf
movs
div
mov
push
jno
dec
xor
outs
(bad)
call
in
stos
sbb
scas
les
push
outs
pop
cmp
mov
push
mov
loope
sbb
ja
daa
and
dec
xor
jmp
add
mov
mov
scas
adc
mov
push
add
add
retf
jno
loope
into
mov
jbe
ds
jns
aam
mov
mov
es
adc
jp
movs
stc
ins
or
ins
imul
gs
shr
cwde
mov
dec
mov
js
dec
jae
popf
jmp
sbb
stos
movs
in
arpl
(bad)
mov
sti
jo
jnp
dec
scas
inc
xchg
mov
cli
arpl
add
mov
pop
and
xlat
sbb
add
sbb
aaa
inc
dec
ja
movs
adc
or
sbb
xchg
iret
jae
mov
adc
in
outs
dec
inc
out
ja
jns
ds
mov
mov
mov
enter
push
mov
fistp
or
cmps
fnstsw
or
(bad)
loopne
pushf
sar
movs
push
mov
adc
pop
adc
jge
iret
iret
sbb
jge
xor
lds
push
pop
(bad)
retf
iret
retf
lea
loope
xchg
dec
and
jl
imul
shr
ror
aas
mov
sub
mov
lock
or
inc
pop
scas
adc
sbb
or
mov
call
add
shl
in
or
iret
fsubp
orps
jg
mov
dec
inc
push
xchg
scas
fmul
mov
(bad)
jl
les
jae
aaa
mov
addr16
fs
aam
mov
push
stc
popa
repnz
shl
cdq
repnz
fsub
push
movs
jae
in
test
pop
or
icebp
test
mov
push
push
xor
outs
outs
cdq
dec
sbb
bound
aas
(bad)
cmp
pop
std
jb
adc
fst
pop
outs
lock
test
sti
sub
mov
push
add
frstor
pop
loop
outs
test
int3
xor
xchg
mov
jae
retf
out
fdiv
cld
scas
shl
aas
clc
adc
pop
cmp
aad
sub
in
(bad)
imul
mov
mov
iret
call
loope
loopne
test
gs
mov
aam
pop
push
push
rcl
jp
addr16
fwait
pusha
test
push
cwde
idiv
arpl
hlt
or
mov
cdq
icebp
xchg
mov
cmp
out
imul
push
and
and
out
mov
dec
inc
scas
and
push
xor
popa
int
jb
mov
mov
loop
js
jmp
hlt
fs
retf
bound
dec
and
cmp
lock
adc
call
cs
daa
sbb
outs
pop
adc
xchg
add
rcr
fdivp
pop
popf
inc
sar
in
cs
jge
pop
cld
xchg
loop
cmp
pop
out
jbe
cmp
pop
mov
jmp
stc
jns
ins
je
into
retf
sub
adc
adc
xchg
mov
dec
int3
arpl
add
adc
popa
adc
pop
add
enter
inc
clc
loopne
push
pop
into
out
mov
loopne
leave
jno
in
inc
inc
xor
xchg
loop
mov
jmp
dec
cwde
dec
pop
nop
push
dec
fcomi
mov
lds
cmp
call
jo
fidivr
cmp
cli
call
loope
and
adc
movs
jmp
jne
stc
or
retf
push
inc
mov
jl
fst
pushw
adc
loope
push
enter
cmp
cwde
les
jo
adc
hlt
add
cmp
das
sub
add
and
jbe
arpl
fld
jg
rol
aam
in
dec
fs
inc
push
mov
out
sbb
(bad)
cmp
pop
(bad)
outs
call
bound
pop
and
mov
dec
lods
sub
fld
add
imul
test
nop
inc
ret
or
popf
popf
in
sbb
(bad)
jge
pushf
call
rol
(bad)
jne
sbb
jne
mov
mov
sub
pop
lea
xor
mov
stos
imul
cs
cld
sub
ins
test
cmp
mov
or
and
mov
or
call
jge
sbb
mov
mov
into
rol
pop
inc
cmp
or
jg
stc
dec
lods
ret
outs
cmps
es
out
imul
jae
push
ret
idiv
mov
jg
outs
movs
xchg
push
inc
inc
add
dec
(bad)
(bad)
aad
fst
frstor
jmp
and
xchg
jmp
xor
or
enter
ss
jbe
jp
push
xor
sbb
loopne
loop
(bad)
aam
jmp
sub
cmp
sbb
jp
test
mov
imul
push
mov
mov
bnd
retf
jge
jae
pop
je
ja
jg
dec
daa
jecxz
xchg
fldenv
movs
add
je
mov
aas
inc
mov
or
ins
stos
dec
push
inc
(bad)
pop
repz
adc
sub
(bad)
lods
push
pop
mov
cmp
pop
dec
ins
out
aas
jge
mov
xor
mov
push
in
and
movs
or
fwait
mov
in
push
test
cwde
mov
sar
fstp
std
sbb
and
movs
sub
test
enter
retf
mov
(bad)
cdq
out
shl
xchg
push
into
std
dec
fwait
push
scas
popf
test
jbe
in
sbb
sub
(bad)
pop
arpl
imul
not
jle
xor
push
jns
call
mov
ret
loope
test
sub
xchg
and
pop
dec
shr
js
scas
pop
xor
lahf
rcl
aam
push
fdivr
sub
dec
int3
inc
pop
jmp
sub
xchg
loop
or
out
xor
dec
adc
les
mov
scas
cmps
(bad)
or
outs
cli
cmp
adc
push
clc
in
sbb
mov
aaa
xor
or
frstor
(bad)
fistp
shl
mov
push
and
and
xchg
dec
retf
push
push
push
std
mov
mov
jl
xor
jno
mov
stos
in
push
outs
arpl
sbb
lea
xchg
aam
push
xchg
fadd
mov
ret
dec
retf
test
cmp
inc
adc
pop
push
iret
lods
inc
out
push
and
out
inc
cmp
in
pop
mov
shl
les
mov
dec
mov
(bad)
mov
fldenv
xor
cmps
ror
enter
outs
(bad)
icebp
mov
es
lds
pushf
shl
ror
je
jg
pop
popa
movs
adc
adc
fld
enter
pop
hlt
mov
pop
inc
aaa
ret
pop
add
repz
mov
pop
imul
loope
push
mov
inc
sbb
push
ds
adc
shl
adc
scas
imul
lods
(bad)
(bad)
push
pop
std
out
call
fucomi
aaa
jmp
sub
push
int
pop
pop
xabort
and
sbb
lahf
mov
dec
sub
sub
push
or
div
leave
or
int3
jnp
jp
sub
mov
adc
push
stos
mov
sti
add
jae
in
mov
xor
cmp
sbb
jns
dec
jno
scas
je
push
cdq
pop
fcomip
(bad)
loopne
add
popa
adc
stc
push
mov
xlat
mov
(bad)
adc
dec
loope
(bad)
pop
mov
rcl
pop
stos
imul
loopne
in
es
push
push
pop
in
mov
mov
(bad)
rcr
mov
ins
cmps
bound
nop
jmp
pop
(bad)
mov
cmc
fcom
jg
jbe
outs
and
clc
mov
add
push
push
in
push
icebp
daa
mov
retf
add
mov
loop
in
popf
and
leave
loopne
mov
jecxz
add
and
and
jmp
adc
ja
inc
mov
je
or
lods
in
mov
mov
push
ret
pusha
xchg
out
adc
jle
pop
mov
pop
and
in
adc
dec
iret
adc
cmp
in
cwde
push
ret
cmp
(bad)
(bad)
fistp
retf
xlat
lods
sbb
add
jb
sbb
push
cmp
fadd
mov
mov
ds
icebp
xchg
shl
push
cmp
retf
out
add
daa
cmp
and
jl
outs
inc
ins
jecxz
rol
pop
int3
mov
(bad)
and
call
jecxz
scas
(bad)
xor
retf
cld
fcom
shl
add
inc
out
jge
push
aam
lahf
rcr
or
retf
fadd
leave
mov
push
dec
dec
jnp
adc
jns
out
lea
iret
mov
lods
hlt
xor
ror
jo
pop
push
loopne
fdivr
fbld
data16
xor
(bad)
sbb
repz
mov
fcomp
(bad)
jl
sahf
fcmovnu
ins
in
ret
mov
pop
mov
mov
mov
pop
lods
imul
and
jns
inc
xlat
jae
jge
popf
call
fisttp
pop
js
jp
(bad)
xor
push
fld
xchg
test
adc
movs
cmp
adc
jno
stos
mov
mov
(bad)
jo
les
xor
lds
movs
aam
mov
repnz
gs
in
movs
pop
mov
push
sbb
mov
hlt
pop
xor
mov
jle
jno
std
int3
sbb
ja
mov
jb
aas
cli
test
rcl
iret
fst
mov
mov
or
je
xchg
lea
mov
cwde
nop
inc
mov
rol
mov
test
xchg
inc
(bad)
jo
and
sub
aaa
jmp
js
sbb
xor
ds
test
daa
add
mov
xchg
jl
in
in
mov
push
xchg
sahf
sub
mov
ret
and
movs
int
rol
test
mov
aam
fld
arpl
cmp
loop
dec
mov
lahf
and
or
pop
ds
in
sub
jns
cmp
xor
add
loop
push
stos
mov
pop
inc
sub
jae
pop
xlat
repnz
and
shl
cmp
push
imul
mov
jg
mov
xlat
movs
jle
cmps
adc
push
dec
adc
test
pop
fwait
xchg
iret
add
pop
jbe
sahf
dec
push
jbe
lock
cmc
lods
lahf
inc
xor
mov
add
shr
mov
mov
cdq
lock
xor
outs
inc
sub
xor
push
inc
xchg
jmp
test
data16
adc
aam
fist
clc
xchg
mov
mov
in
jge
in
fsub
xor
or
cmp
out
or
push
dec
ror
lahf
mov
mov
push
or
xor
rcr
enter
push
outs
sahf
sub
jmp
(bad)
push
data16
mov
push
ds
cmp
xchg
lahf
xchg
sub
push
cmps
scas
ins
mov
(bad)
int
aas
push
out
dec
fwait
in
add
js
push
jl
push
imul
std
sub
mul
mov
arpl
inc
rol
jecxz
inc
dec
ror
adc
sub
cmp
outs
(bad)
xlat
or
xchg
dec
call
faddp
sbb
add
xchg
in
fdiv
sub
inc
mov
movs
cmp
jns
int3
and
pop
into
addr16
scas
fld
mov
inc
pop
stos
add
mov
in
int
cmp
and
out
ret
scas
shl
scas
call
or
mov
push
xchg
mov
xchg
push
add
das
dec
inc
addr16
sub
mov
cwde
fwait
in
push
int
pop
and
push
fs
bound
clc
pop
icebp
fs
sbb
sub
in
sbb
pop
pushf
push
rcr
inc
push
imul
push
sub
push
shl
inc
push
sti
xor
mov
pop
std
lahf
mov
scas
adc
mov
test
test
mov
mov
xor
clc
pop
ror
je
retf
hlt
jae
pushf
add
mov
jne
(bad)
aam
loope
cld
mov
mov
(bad)
scas
mov
xchg
loop
xchg
stos
mov
psrad
fcom
mov
dec
fcom
ins
fld
int3
sti
mov
xchg
push
and
bound
stos
push
mov
push
shl
test
mov
test
mov
mov
inc
(bad)
pop
cmc
les
enter
sbb
push
ds
add
nop
stc
stos
lods
bound
jno
fs
repnz
hlt
mov
dec
xor
outs
add
ror
xchg
rol
cmp
dec
adc
jno
adc
repnz
imul
xchg
pushf
stos
push
mov
rcr
shl
popa
or
and
sub
cwde
jp
push
sbb
or
xchg
push
mov
enter
pusha
mov
pop
cmps
inc
add
cmps
pushf
dec
cmp
inc
(bad)
and
sahf
xor
pop
pop
jp
loop
scas
add
add
pushf
or
fs
xor
adc
jg
(bad)
pop
loopne
into
or
adc
mov
lods
mov
jp
push
(bad)
jp
pop
icebp
dec
(bad)
jge
call
scas
xor
mov
enter
dec
mov
outs
out
ret
pop
jo
imul
pop
pushf
jo
jmp
mov
sub
dec
test
rcpps
xor
ret
sub
imul
and
pop
mov
test
shl
sbb
cwde
pushf
fidivr
cli
cmp
cwde
xor
mov
fild
mov
sub
pop
sub
jmp
inc
push
mov
push
dec
movs
icebp
cmps
sub
mov
cwde
cmps
pop
dec
(bad)
ror
and
popa
xchg
jl
out
pop
push
push
aaa
jmp
int
sbb
pop
and
and
lea
fcom
test
nop
addr16
std
xchg
sti
imul
xlat
inc
push
add
sbb
dec
mov
movs
mov
adc
push
xor
jno
sub
and
pushf
xchg
add
pusha
les
popf
lods
jae
mov
sahf
push
inc
sub
sbb
popf
test
and
jle
xor
dec
xchg
cdq
rcl
(bad)
lds
loope
scas
mov
addr16
jp
ins
jmp
jb
imul
inc
fiadd
push
into
dec
addr16
jecxz
adc
movs
repnz
shr
test
pop
in
fsubr
(bad)
stos
pop
pop
add
xlat
jo
push
sub
mov
inc
xor
(bad)
or
sub
arpl
and
mov
cmp
clc
jae
inc
call
hlt
iret
clc
cmps
or
pop
mov
into
ret
test
pop
cmp
cmp
es
dec
push
sub
aaa
dec
add
repz
pop
dec
ffreep
mov
ror
adc
jne
adc
inc
icebp
cmc
xor
sub
les
hlt
xor
jno
sub
les
push
xor
mov
xor
in
mov
pop
fs
jge
jp
mov
loop
hlt
adc
ss
cmc
sbb
mov
push
or
(bad)
sbb
mov
add
leave
sub
addr16
std
popf
jg
ins
shr
popf
test
dec
xchg
mov
and
mov
in
retf
and
std
es
mov
or
push
pusha
and
rcr
pop
xor
push
test
xchg
seto
jmp
jge
cld
repz
mov
xor
lock
mov
jnp
jl
and
add
test
outs
and
sbb
push
int3
imul
and
(bad)
and
nop
movs
or
jg
inc
push
ss
fdiv
es
jne
pusha
push
iret
loopne
push
lods
jge
inc
mov
xchg
mov
pop
cvtps2pi
mov
dec
xor
ror
scas
aam
cmc
push
push
pusha
dec
lods
jne
push
(bad)
xor
mov
push
dec
push
mov
inc
cmps
mov
stos
mov
push
mov
jle
sub
fimul
jb
mul
xor
test
xchg
and
sub
mov
adc
inc
mov
(bad)
cmc
mov
scas
and
push
sahf
lds
retf
in
(bad)
push
into
add
das
pop
int3
(bad)
sbb
test
mov
push
iret
xchg
push
cmp
out
jae
mov
xor
mov
push
outs
ds
jbe
stos
sti
retf
retf
pop
pushf
jp
xor
movs
xlat
cmp
xchg
ret
mov
jmp
or
in
(bad)
scas
pop
lahf
sub
pushf
iret
movs
add
mov
mov
pushf
adc
mov
cmp
push
add
push
fcom
mov
xchg
mov
adc
stos
aas
je
neg
in
push
jb
fwait
das
dec
pusha
adc
and
sbb
ret
pop
iret
pushf
loope
mov
into
jae
ret
out
or
mov
mov
add
sub
sbb
loope
adc
fistp
in
xor
or
test
loope
ret
cli
sub
imul
xor
sub
(bad)
into
rcr
push
mov
imul
xchg
sbb
xchg
clc
jno
int3
dec
scas
and
adc
sbb
in
lods
cmps
not
popa
pop
repnz
ds
jne
cmc
cmp
int
out
adc
addr16
jo
fwait
cmc
fadd
xchg
pop
cmp
mov
cmps
repnz
lock
or
outs
out
mov
mov
inc
or
dec
in
dec
jns
aas
enter
shr
sbb
retf
pop
loop
in
add
lods
push
mov
push
rol
push
add
sub
jo
es
int
dec
outs
mov
aad
and
stos
and
add
ins
push
and
and
iret
xchg
add
fnstcw
ins
inc
dec
mov
(bad)
sub
mov
int
adc
loope
arpl
dec
daa
xchg
push
xchg
add
nop
test
mov
cmp
xor
cs
cmp
rcl
out
movs
jge
mov
adc
jmp
daa
xchg
add
ja
call
lods
sti
lods
mov
addr16
add
popa
push
mov
arpl
test
repnz
cmc
out
push
enter
adc
fild
(bad)
cmp
lods
xchg
or
xchg
sbb
or
aam
mov
inc
(bad)
call
pushf
sahf
outs
mov
inc
test
mov
mov
add
add
xchg
mov
stos
dec
push
retf
fisttp
add
fstp
dec
or
mov
cmps
and
sbb
jg
ret
jb
push
mov
fidivr
mov
pop
test
(bad)
fist
mov
std
jg
sbb
push
outs
jmp
and
jmp
int3
outs
mov
ror
inc
in
out
xchg
mov
push
push
(bad)
mov
or
ins
cmp
imul
jmp
inc
outs
(bad)
cmc
js
sub
push
lods
mov
cmp
js
pop
xlat
popf
sbb
or
dec
mov
xchg
out
out
jnp
outs
mov
call
and
mov
outs
xchg
ret
jg
xchg
cmps
sbb
shr
sub
or
jg
popa
mov
jl
sahf
je
jo
movs
pop
push
js
sbb
mov
jb
sbb
pusha
inc
mov
in
add
int
(bad)
jbe
nop
dec
push
inc
mov
test
cdq
mov
aam
adc
mov
push
push
xlat
dec
mul
xchg
jns
xchg
mov
popa
push
pushf
jo
pop
add
and
mov
(bad)
sub
aam
sbb
(bad)
cmp
ins
sub
push
daa
shl
jbe
adc
popf
lock
jecxz
xchg
push
iret
fs
and
(bad)
pop
xchg
inc
or
dec
mov
jnp
(bad)
(bad)
dec
jmp
ret
ja
(bad)
pop
mov
lahf
or
inc
cmp
dec
pop
pop
data16
(bad)
ins
mov
push
and
mov
test
xchg
add
adc
push
addr16
into
mov
test
add
mov
pop
and
pop
adc
shr
and
fcomip
pop
nop
sti
sbb
pop
fdiv
aaa
xlat
lock
cmp
clc
or
mov
adc
outs
cmp
xor
and
push
icebp
shl
mov
cmp
mov
push
push
out
fadd
pop
into
(bad)
adc
test
aam
mov
xor
lahf
xor
and
out
xchg
into
sub
or
jns
call
das
in
movs
scas
pop
mov
scas
inc
ror
pop
jmp
mov
mov
in
lock
call
sbb
push
pusha
or
nop
mov
jae
imul
jne
movs
repz
lock
inc
cmp
mov
in
jge
aam
xor
or
icebp
pop
mov
ins
ret
das
scas
dec
add
cmps
popa
inc
inc
repz
inc
mov
in
xchg
cmp
into
ds
cmp
and
(bad)
xor
dec
cmp
retf
push
(bad)
retf
ins
test
out
jl
xchg
push
and
and
adc
xchg
jg
js
xlat
jp
xchg
push
imul
dec
scas
pop
xor
cli
idiv
or
xor
xor
jmp
xchg
movs
fild
add
sbb
ins
out
sub
xor
pop
jl
add
lock
dec
jae
out
pop
fcmovnu
in
aas
test
mov
cmp
push
ret
and
aaa
pop
in
stos
push
ins
cmp
push
push
retf
xor
les
mov
test
mov
adc
inc
fwait
cmp
addr16
dec
dec
daa
mov
std
jmp
inc
or
mov
cwde
xlat
and
out
js
push
xchg
fs
jmp
test
and
repz
std
imul
enter
cmc
out
jbe
sbb
inc
push
fst
mov
imul
mov
int
gs
scas
and
xor
and
ror
and
movs
leave
or
mov
into
push
outs
fstp
out
push
adc
add
cs
cmp
pop
hlt
and
sbb
dec
lods
mov
mov
jns
cmp
daa
repz
or
sub
xchg
and
aam
dec
push
add
scas
stos
sub
cmp
xor
pop
retf
lock
pop
push
lock
sbb
mov
cli
cmp
add
xchg
or
pop
fcomp
mov
push
enter
int
mov
mov
xlat
push
mov
xor
jg
jmp
adc
std
inc
std
aaa
call
in
jae
test
jge
data16
and
cmp
int3
fimul
mov
out
ins
sbb
scas
out
jb
sub
sbb
loope
or
loop
(bad)
jmp
xchg
add
adc
hlt
xor
cmc
stos
cmpps
imul
addr16
jmp
pop
retf
out
mov
sbb
dec
inc
lods
mov
and
and
dec
add
push
jecxz
mov
inc
xlat
and
out
adc
(bad)
push
movs
push
xchg
and
sub
lahf
call
lds
outs
xchg
lea
in
mov
cmp
jae
cmps
push
sahf
dec
fldcw
jno
dec
daa
xchg
adc
mov
mov
js
shl
inc
jno
mov
or
mov
int3
xor
and
leave
cwde
mov
or
inc
mov
xchg
cli
outs
arpl
adc
into
push
lea
(bad)
shl
xchg
sub
push
getsec
sahf
xchg
and
retf
ficomp
mov
xor
cdq
or
std
pop
mov
jb
add
sub
mov
mov
fwait
in
pusha
imul
dec
(bad)
fcom
or
or
add
push
inc
mov
mov
push
sti
lods
mov
aaa
or
pusha
cdq
mov
or
adc
lds
pop
jmp
inc
sti
adc
mov
outs
xchg
mov
push
leave
pop
outs
cld
jle
(bad)
into
push
cmp
cli
mov
mov
and
retf
or
stc
mov
mov
pop
imul
push
loopne
mov
sub
shl
cmp
jg
test
sub
arpl
test
xchg
(bad)
rcl
lea
sbb
mov
dec
sub
mov
push
push
fnstenv
ficom
inc
ja
cli
sub
dec
sti
int3
xor
nop
push
inc
ds
xchg
xlat
leave
das
aad
mov
popf
push
retf
loop
loope
cmp
nop
push
or
imul
ja
add
loop
inc
enter
push
outs
jl
push
mov
pop
xor
mov
loopne
and
jmp
loopne
xchg
daa
cmp
lock
push
rep
mov
repz
push
addr16
sub
out
and
jp
loopne
pop
fsubp
mov
lods
aam
out
clc
sub
jb
lods
mov
pop
mov
push
mov
(bad)
jl
cmps
scas
lea
adc
nop
call
dec
mov
ror
rcr
sbb
out
pop
xchg
in
je
cmp
mov
or
or
div
sbb
fidiv
leave
imul
ret
or
inc
dec
ror
dec
rcr
in
bound
pop
push
mov
mov
and
gs
call
lds
or
sub
add
(bad)
pop
lods
fisttp
test
xchg
mov
push
cwde
jno
(bad)
pop
movs
scas
xchg
(bad)
and
rol
lahf
arpl
mov
gs
mov
out
jp
push
mov
jmp
lods
pop
pop
mov
add
sbb
jp
mov
scas
loop
sbb
dec
les
mov
add
mov
pop
cmp
dec
aaa
fucom
cmc
adc
adc
jmp
imul
push
mov
cmp
xlat
pop
mov
push
test
ins
cdq
jbe
fmul
jg
imul
sbb
mov
xchg
mov
jge
push
mov
or
lea
xor
outs
fwait
mov
retf
inc
movs
sub
adc
sti
add
out
sub
sbb
loope
bound
mov
adc
sub
or
neg
ret
sbb
pop
movnti
aam
and
loope
xor
cmc
(bad)
or
outs
mov
setle
ror
inc
xor
jp
jg
mov
pop
mov
push
mov
inc
out
retf
sbb
imul
sub
push
mov
inc
add
mov
(bad)
mov
mov
and
outs
push
cwde
aaa
inc
jbe
aaa
scas
loopne
pusha
rep
xor
aad
out
in
iret
jmp
cmp
xor
mul
push
shr
jmp
jecxz
and
and
shl
jg
data16
jae
mov
fnstcw
adc
jno
mov
cmp
cdq
jmp
neg
loope
cmp
mov
mov
xor
pop
outs
cdq
add
gs
sbb
sbb
dec
pushf
sbb
mov
xchg
add
jns
jns
sar
cs
and
cmp
mov
mov
push
pop
xchg
mov
cmp
imul
mov
shr
ds
aam
jb
gs
adc
xchg
sbb
cmp
dec
xchg
push
add
add
xchg
sub
lahf
lahf
shl
cmps
push
(bad)
jo
mov
test
je
sbb
cwde
mov
std
loopne
pop
sub
cmps
lods
mov
out
mov
in
int
sub
mov
or
adc
cmp
fidiv
popa
pop
dec
es
hlt
test
add
mov
sbb
push
inc
xchg
inc
fwait
std
dec
fistp
and
jno
xor
stos
xchg
pushf
into
xor
xchg
inc
jo
push
js
ja
pushf
test
fwait
mov
or
xor
sbb
xor
test
mov
dec
ins
mov
add
into
mov
xor
js
aas
sbb
and
in
clc
enter
addr16
cmps
prefetchw
or
scas
push
sub
(bad)
xor
jae
jne
push
arpl
cs
cmps
mov
test
adc
(bad)
jnp
clc
pop
scas
loopne
push
push
mov
addr16
xchg
xchg
int3
jae
sahf
push
and
push
es
fisttp
cmp
ror
in
adc
gs
inc
mov
xlat
xor
pop
movs
inc
es
pop
cmps
cmps
mov
in
mov
adc
dec
shl
add
sub
cld
movs
dec
je
or
pop
retf
cmp
mov
xor
ret
popa
(bad)
fmul
inc
test
sbb
mov
aas
push
in
jae
dec
or
std
mov
inc
mov
in
mov
xchg
cwde
ja
or
(bad)
cmp
pop
adc
jbe
add
cmp
jg
sbb
push
mov
push
std
hlt
ror
jae
xchg
lock
pop
mov
xor
rcl
inc
adc
aam
jno
push
fnsave
dec
or
aas
mov
rol
movs
outs
mov
lods
leave
sar
push
sar
inc
call
pop
mov
scas
in
test
pop
into
push
cmc
cmp
fistp
xor
aad
inc
add
aad
adc
jo
pushf
dec
dec
fs
int
mov
enter
xor
push
push
inc
adc
aam
sahf
aas
add
add
dec
pop
lods
in
push
mov
cmp
mov
cmp
sbb
dec
sub
and
ds
mov
movs
ins
cmp
mov
movs
mov
fnsave
mov
push
sbb
in
adc
mov
cmp
hlt
aas
cmp
outs
aad
lods
stos
sub
and
iret
mov
pop
or
mov
and
mov
xor
or
mov
xor
mov
cmc
daa
jae
sbb
push
ret
dec
dec
pop
adc
in
aad
and
add
jp
cli
dec
(bad)
pop
push
inc
or
ja
pop
(bad)
mov
(bad)
lods
les
cmp
mov
xchg
into
arpl
loope
pop
xchg
inc
inc
(bad)
jns
push
lahf
loope
cmps
lahf
xchg
jns
bound
push
push
dec
call
pop
inc
cmp
pop
aas
sar
inc
fisubr
je
mov
(bad)
sti
call
push
clc
sbb
sbb
scas
adc
out
and
mov
xchg
iret
pop
jp
jmp
push
cmp
pushf
out
inc
or
cld
aas
clc
sbb
add
sub
pop
inc
icebp
mov
jg
jmp
and
mov
inc
jno
mov
cmp
(bad)
push
and
nop
adc
iret
ins
clc
mov
aaa
jae
jmp
outs
cwde
out
je
add
mov
dec
out
push
pop
xor
adc
js
add
mov
sub
test
push
repnz
lock
adc
nop
movs
dec
jae
jno
test
pop
(bad)
sahf
xor
mov
push
mov
pop
or
je
or
cmp
or
retf
push
push
dec
sahf
mov
repnz
xchg
sub
dec
cmp
pop
xchg
push
hlt
mov
test
not
inc
jns
sub
xchg
mov
mov
rcr
sahf
sbb
sti
sti
data16
jecxz
not
scas
imul
test
cmp
inc
fisub
loop
ss
adc
test
movs
xor
sbb
retf
stos
dec
jg
xchg
mov
xor
push
ret
pop
outs
out
dec
xor
ret
rcr
xacquire
outs
jge
push
inc
scas
inc
pusha
mov
imul
mov
ret
(bad)
pop
out
cmps
xlat
movs
outs
js
scas
adc
test
rol
fsubr
mov
jmp
sub
push
xchg
add
fnstsw
ss
test
xchg
sub
sahf
push
sbb
adc
fidiv
test
inc
repz
cmp
es
and
mov
js
jae
fcmove
mov
sbb
mov
cmps
lock
out
add
test
mov
xchg
mov
mov
jg
mov
jl
sbb
mov
dec
(bad)
js
les
lods
nop
outs
gs
ret
hlt
xor
scas
xor
sub
mov
xchg
jecxz
mov
sbb
pop
xor
inc
sbb
(bad)
lea
lods
fdiv
adc
push
mov
xchg
pop
movs
sbb
xor
xchg
scas
and
cs
jmp
rcr
test
popf
gs
push
jno
addr16
mov
adc
xor
inc
xor
ins
xchg
in
das
data16
cwde
cmps
or
jno
jmp
inc
mov
and
or
cmps
arpl
inc
pop
xor
pop
(bad)
inc
loopne
test
lods
cmp
popf
aad
or
sub
inc
cmp
(bad)
jle
jno
shl
mov
fdivr
in
cmp
xchg
stos
ror
sahf
mul
es
push
leave
xchg
mov
xchg
push
int
(bad)
cli
adc
mov
cld
ja
cmc
and
xor
xchg
loop
inc
test
cmp
in
dec
pop
daa
aas
mov
inc
out
retf
push
nop
or
shl
sar
ins
imul
xor
pop
fwait
outs
and
mov
into
and
outs
dec
dec
mov
lahf
add
adc
fsubr
stc
cmp
(bad)
test
cmc
sub
mov
stos
mov
xchg
inc
mov
gs
rcl
pop
not
mov
imul
icebp
add
pop
jmp
mov
cmp
imul
push
jae
nop
fstp
call
in
test
xchg
jb
cmp
mov
in
lea
xor
add
daa
fistp
cli
lods
mov
mov
je
dec
loop
aas
or
or
shl
mov
and
and
dec
jo
test
push
mov
ret
pushf
(bad)
(bad)
shl
shl
mov
nop
sbb
in
scas
stos
and
mov
icebp
lods
add
or
mov
dec
scas
outs
jnp
and
and
push
push
mov
rcr
sti
pop
mov
adc
sahf
aam
mov
fdivr
xor
and
or
leave
push
push
popf
test
adc
ja
sub
pusha
fstp
test
add
out
rcl
or
xchg
aam
add
in
aas
cmp
popa
in
sbb
or
xchg
cdq
cld
ja
repz
addr16
mov
push
jnp
jae
pushf
test
sbb
inc
mov
sbb
(bad)
retf
pop
sbb
enter
sub
sahf
add
mov
ret
or
ror
jno
mov
hlt
mov
or
jl
inc
lea
xor
jmp
xchg
inc
and
in
jbe
std
inc
inc
push
fiadd
dec
cdq
les
push
jl
movs
lahf
add
xchg
fs
dec
loop
js
jbe
dec
pop
sti
pusha
xchg
jecxz
adc
or
into
test
(bad)
call
mov
mov
enter
xor
(bad)
pop
std
mov
push
mov
mov
xor
in
in
ret
jge
xchg
ret
das
lahf
test
aam
imul
push
dec
int
(bad)
xchg
mov
push
adc
pop
or
(bad)
mov
arpl
mov
mov
or
push
into
test
stos
into
pop
leave
jp
loop
outs
and
add
jbe
(bad)
loop
add
outs
shl
inc
jne
cmps
mov
cmp
repz
out
pop
or
call
push
sbb
mov
pop
lods
or
push
sub
xor
push
adc
mov
sub
and
cmp
add
or
lahf
retf
pop
jmp
mov
pop
sahf
fistp
mov
jmp
mov
mov
jle
push
push
cmp
fisttp
inc
cs
das
outs
inc
mov
(bad)
cmp
mov
sbb
fs
jmp
retf
sub
cmp
xor
mov
inc
and
push
sub
arpl
rcr
mov
fimul
xchg
(bad)
aaa
xor
sbb
std
repnz
int3
in
mov
icebp
out
aaa
add
stos
mov
test
push
mov
xor
sub
mov
dec
xor
es
dec
xchg
rcr
inc
test
into
movs
daa
add
mov
pusha
iret
popf
mov
(bad)
push
mov
cld
lods
fs
out
push
inc
pusha
leave
retf
jge
mov
dec
adc
int3
or
and
pusha
pop
mov
(bad)
aam
pop
xlat
in
enter
jno
fdiv
aaa
inc
std
sub
xchg
imul
jo
cli
xchg
add
outs
rcl
xchg
mov
retf
push
mov
fild
xchg
xor
fs
push
(bad)
mov
aam
mov
mov
and
cmp
pop
arpl
jge
inc
int3
imul
jns
out
out
sar
fiadd
mov
imul
and
mov
add
inc
and
inc
inc
push
add
in
jp
mov
xchg
loope
and
dec
or
rol
shr
loop
jle
inc
cmp
movs
addr16
sahf
or
test
aam
dec
mov
loope
fimul
out
sub
pop
shr
mov
adc
mov
inc
jmp
cld
(bad)
jnp
pushf
in
ror
jns
cmp
out
mov
in
xchg
fist
xchg
fdivr
or
(bad)
hlt
imul
add
sub
or
mov
xchg
pop
cmp
cwde
call
xor
sub
adc
iret
jne
xchg
pop
movaps
or
inc
mov
outs
mov
mov
test
loope
(bad)
scas
mov
in
push
pop
sbb
mov
(bad)
mov
cli
fbstp
aam
xor
xchg
gs
sbb
clc
dec
ror
jns
push
(bad)
dec
out
pop
push
sub
xchg
in
dec
xchg
mov
inc
xor
lock
mov
xchg
dec
xor
arpl
push
out
call
je
dec
(bad)
fistp
int3
xor
and
push
scas
add
call
pop
daa
rol
mov
jmp
jmp
jne
test
in
addr16
in
ins
jae
(bad)
call
push
adc
mov
xchg
mov
sub
cmp
call
xor
movs
sub
jp
sti
pop
dec
cmp
sar
leave
pop
xor
neg
jbe
jo
pusha
dec
sahf
aas
outs
xor
bound
addr16
pop
mov
imul
push
xor
in
std
push
push
pop
mov
popa
xor
adc
out
dec
cmp
cmp
cld
aas
or
jmp
inc
mov
xor
sub
pop
and
pop
inc
pop
cmp
call
xor
std
cmps
or
jge
xor
pop
push
loop
leave
or
lods
sahf
sbb
mov
(bad)
fsubr
sbb
call
jp
inc
or
fimul
or
imul
fisubr
gs
aad
loope
inc
xchg
lock
push
cmp
lahf
cmp
ja
pop
mov
fmul
inc
mov
add
jl
sbb
mov
cmp
adc
cld
lock
fld
hlt
mov
jb
and
outs
(bad)
out
inc
nop
adc
or
(bad)
cmp
retf
and
aas
jle
mov
adc
scas
add
mov
mov
cld
out
push
(bad)
push
xchg
adc
and
pop
push
hlt
push
xor
jge
test
pop
hlt
and
dec
or
and
jae
call
repz
int3
or
pop
lahf
outs
hlt
pop
sbb
pop
mov
(bad)
adc
and
(bad)
sub
push
pushf
das
(bad)
les
and
mov
arpl
adc
dec
and
jno
xchg
repnz
dec
xor
push
or
sbb
dec
or
push
xor
add
movs
jno
fxch
xchg
cmp
mov
outs
sub
push
gs
in
sahf
add
call
dec
mov
mov
lahf
and
fist
aam
in
fs
fistp
mov
call
fidiv
cmp
add
in
jmp
xchg
add
dec
std
test
xor
sub
addr16
push
cmp
add
mov
lods
lods
sub
jle
scas
add
in
pop
push
out
jp
scas
fucomp
hlt
inc
aad
loop
pop
iret
mov
neg
or
outs
ins
xchg
xor
sbb
pop
xor
push
cmp
repnz
inc
push
xchg
sub
mov
push
inc
dec
push
or
sub
mov
repz
xchg
(bad)
adc
loope
push
mov
pop
mov
hlt
xchg
pop
call
movs
call
out
cmp
mov
pop
push
adc
loopne
or
loopne
inc
stos
or
sbb
or
pushf
aad
mov
out
sbb
pop
add
hlt
xlat
daa
scas
and
fist
mov
jle
retf
gs
ror
fcmovnbe
push
cmp
mov
int3
and
neg
mov
dec
(bad)
aas
addr16
jns
jp
mov
pop
dec
inc
mov
mov
aad
test
clc
pop
imul
sub
ins
fdiv
sbb
loopne
ins
int3
in
xchg
jmp
lods
fcomi
xchg
test
icebp
repnz
into
push
in
add
ins
xchg
cmps
(bad)
cmc
ss
adc
xor
jo
mov
cmps
mov
leave
lea
and
mov
loop
mov
enterw
push
pop
addr16
pop
push
not
clc
ss
xchg
rcl
fwait
mov
les
sbb
pop
pop
fidiv
xchg
mov
mov
jmp
cwde
aad
fld
dec
fild
ret
dec
out
in
outs
mov
mov
les
pop
cmps
ins
mov
hlt
pop
lods
call
push
push
lods
jmp
mov
adc
cs
pop
jno
xchg
ret
xchg
mov
rcr
mov
push
inc
jl
outs
inc
or
jmp
push
cmp
stc
addr16
loope
sub
retf
jae
fidivr
pop
inc
fwait
movs
or
dec
pop
repnz
lahf
aam
ffreep
jl
frstor
sbb
fnstcw
inc
and
and
and
inc
push
inc
arpl
out
sahf
mov
pushf
nop
pop
in
sub
fwait
sub
retf
ffreep
pop
inc
mov
fwait
jns
push
mov
adc
out
sbb
aas
int3
add
sbb
mov
fucomip
xchg
and
mov
jnp
xchg
push
jg
addr16
pop
cwde
cli
shl
lock
cmp
pop
test
ss
jmp
or
pop
add
sbb
jne
into
jnp
dec
lea
push
aaa
fst
add
nop
scas
lea
jmp
(bad)
xor
clc
mov
imul
outs
mov
(bad)
test
sbb
mov
in
mov
sahf
inc
out
repnz
daa
jl
xor
es
idiv
shr
pop
test
test
sbb
xchg
adc
xor
dec
push
call
pop
pop
movs
sbb
add
cmp
mov
mov
lods
stos
cmp
call
and
adc
aam
or
or
inc
movs
dec
mov
cmp
cmp
adc
xlat
push
and
fidivr
(bad)
and
ins
push
aad
jbe
js
(bad)
mov
cmps
ss
js
js
mov
rol
push
xor
sub
(bad)
jb
scas
dec
and
mov
mov
sbb
cmp
nop
jmp
mov
xor
adc
or
sbb
int3
retf
jecxz
or
cld
jbe
push
add
shl
std
mov
mov
cmovp
xchg
imul
sub
xchg
(bad)
cmps
jg
xchg
adc
jl
jne
stc
mov
call
clc
add
popa
mov
aas
int
jl
sub
inc
sub
mov
out
ds
sbb
and
shl
dec
lea
shr
xchg
pop
ins
inc
push
xor
enter
pop
xchg
xchg
jnp
gs
jle
into
jl
and
jno
jne
fistp
sub
fdiv
pop
pop
mov
ret
lahf
push
xchg
ja
sub
in
pop
test
mov
fnsave
or
jb
(bad)
hlt
fcmovbe
fsubp
ss
out
call
leave
add
mov
sbb
(bad)
out
dec
es
out
jg
dec
loop
inc
dec
xor
fcmovne
enter
movd
ins
outs
pushf
jno
imul
or
mul
jmp
bound
enter
jp
push
jae
mov
jno
ss
int3
fisttp
lods
mov
aaa
or
jae
ss
imul
push
sbb
inc
repnz
ds
test
and
dec
test
js
dec
(bad)
xchg
push
or
bound
cmp
ret
and
addr16
mov
aam
lahf
mov
adc
cld
psrlw
je
and
xor
jle
mov
xchg
call
push
push
dec
xor
js
sub
sbb
xchg
enter
inc
gs
lds
aas
jmp
or
mov
mov
sbb
test
test
iret
jo
adc
pop
xor
pop
jnp
sti
cmp
xchg
aad
sbb
pop
inc
inc
fldcw
into
push
add
cmp
dec
sahf
enter
ins
dec
cmps
jb
sar
out
std
in
xor
not
mov
xchg
mov
cdq
dec
icebp
out
rcr
xchg
fnstcw
jl
ror
pop
test
test
inc
daa
mov
xchg
stos
test
add
push
sahf
shl
and
ja
or
mov
mov
xchg
adc
mov
cmp
sbb
mov
hlt
cs
jno
data16
or
ins
out
xchg
sbb
clc
sub
add
int3
push
lea
shr
fild
fist
cmc
into
jg
jmp
and
aaa
popa
fscale
inc
clc
push
fisubr
jo
push
or
mov
nop
pop
pop
std
cmp
(bad)
dec
xor
add
dec
out
jno
inc
mov
cmp
sub
ds
push
push
sbb
inc
outs
gs
shl
jns
xchg
cwde
fild
daa
dec
ficomp
mov
pop
mov
dec
fiadd
cmps
mov
jae
jo
neg
pop
mov
push
push
xor
les
sahf
ficomp
mov
jo
push
cld
(bad)
adc
push
int3
cmp
jmp
jecxz
cmc
rol
sub
ins
ds
jo
sub
mov
push
push
xchg
out
(bad)
inc
and
ins
bswap
iret
out
mov
and
sub
retf
jge
jmp
pop
jmp
push
rol
dec
fnstenv
xchg
fdivr
popf
adc
sbb
(bad)
mov
aas
pop
and
call
pop
mov
or
cmp
dec
lods
lock
xchg
mov
xor
and
test
sub
sbb
sub
iret
and
or
mov
and
imul
pop
jmp
push
xchg
inc
jmp
cli
push
sbb
jle
into
push
mov
sub
out
xlat
dec
inc
mov
sbb
sahf
das
stos
enter
add
and
cmp
jns
and
fdivr
push
sub
jle
jg
cmp
ss
xor
movd
jmp
jb
push
mov
hlt
add
xor
push
xor
mov
iret
into
push
xor
loopne
in
sbb
gs
xor
shl
jecxz
cmc
jns
popa
push
xchg
ret
adc
rcl
sbb
jo
push
shr
adc
imul
and
popf
mov
ret
dec
pop
fsubr
or
and
inc
mov
sbb
iret
repnz
lods
cmp
pop
not
sub
enter
or
(bad)
sub
js
(bad)
andnps
jnp
cli
cmp
clc
adc
lods
leave
push
gs
mov
test
push
int3
mov
retf
arpl
dec
mov
repz
repnz
es
push
adc
(bad)
hlt
imul
mov
pop
sbb
popf
int
xor
jp
or
dec
push
paddusb
aad
lock
sub
adc
(bad)
jmp
fild
mov
ficomp
inc
mov
sub
add
cmp
jecxz
rol
dec
std
inc
jo
jns
jp
adc
cwde
lahf
mov
nop
push
inc
sbb
jecxz
pop
adc
dec
lahf
aad
adc
jmp
inc
pop
call
jge
adc
sbb
lods
mov
jo
add
sbb
mov
ins
ror
and
iret
xor
adc
or
enter
sbb
dec
cmp
(bad)
movs
sub
out
sub
in
jb
push
mov
jp
cwde
lds
mov
xor
outs
inc
jmp
fistp
xchg
cs
sahf
rcl
jp
imul
(bad)
mov
xor
push
mov
dec
lods
fbstp
pop
jbe
out
loopne
mov
mov
adc
cdq
jb
mov
retf
shl
sbb
xchg
push
mov
mov
mov
shl
lock
inc
mov
jle
jmp
push
cs
add
xchg
inc
adc
ds
mov
adc
out
mov
mov
sbb
pop
xchg
(bad)
in
xchg
inc
xchg
mov
mov
rcl
cwde
inc
mov
sbb
in
push
bound
test
into
jo
std
sub
or
jae
jg
pop
pop
push
test
and
popf
cmps
gs
dec
adc
push
mov
pop
scas
mov
test
lds
iret
fistp
enter
add
sbb
iret
loope
not
push
in
(bad)
stc
cmps
out
scas
aad
loop
inc
cmp
mov
mov
mov
mov
bsr
sbb
or
xchg
mov
cmc
fimul
add
pop
ins
jmp
scas
inc
mov
jp
cmp
mov
leave
out
stc
sub
jne
loope
mov
add
jns
inc
lods
mov
adc
xchg
jns
scas
shr
cld
les
push
sbb
sbb
cmp
and
mov
pop
je
lods
cwde
out
rol
ret
dec
fs
js
adc
push
add
adc
sub
adc
repz
leave
cld
jl
shl
and
push
addr16
test
mov
pop
or
mov
stos
stos
xchg
aaa
repnz
xchg
mov
lods
sbb
sahf
mov
loopne
sti
imul
fdiv
mov
(bad)
push
fistp
rcr
fwait
sahf
or
ss
loop
jmp
pop
mov
js
mov
jg
mov
sbb
xor
shl
inc
or
data16
lods
and
(bad)
jne
pusha
pop
fs
inc
retf
xor
jmp
dec
adc
retf
fdiv
adc
xor
mov
fdiv
xchg
push
sbb
int
or
leave
neg
(bad)
mov
jge
fwait
cld
shl
jbe
mov
dec
lock
repz
addr16
outs
dec
test
xchg
inc
mov
loopne
ja
(bad)
in
loopne
data16
xchg
inc
mov
jg
ins
add
xchg
xor
mov
mov
adc
std
adc
push
sub
and
inc
adc
add
bound
sub
je
xchg
aaa
mov
popf
push
dec
pop
aaa
data16
mov
in
cli
jo
stos
or
ja
gs
pop
dec
(bad)
xchg
icebp
push
jnp
xchg
rol
stos
std
into
sti
loopne
xor
pushf
cwde
in
and
lds
adc
inc
(bad)
jmp
mov
jecxz
and
cli
retf
xchg
sbb
jb
cmps
dec
ja
or
scas
add
push
or
stos
xor
jg
dec
and
addr16
jno
mov
and
aaa
and
push
js
mov
mov
mov
movs
jmp
lods
xchg
shl
sub
dec
shl
pop
inc
pop
jecxz
dec
fisub
imul
mov
sbb
push
in
mov
(bad)
jmp
mov
retf
sahf
(bad)
inc
and
mov
cmp
jb
pop
shl
jecxz
je
mov
outs
pop
adc
lar
cwde
mov
xchg
dec
je
outs
mov
mov
cmps
dec
inc
dec
imul
sbb
push
inc
gs
pop
xlat
outs
sti
jnp
push
ret
lahf
icebp
scas
xor
sbb
scas
dec
fs
xlat
push
cmps
and
aad
push
sbb
aam
mov
add
sbb
pop
adc
or
out
cld
xchg
ror
jmp
daa
jmp
pop
lods
mov
inc
push
clc
(bad)
in
aam
xchg
call
lods
ins
jae
and
xchg
adc
ret
mov
ret
inc
mov
cmp
not
push
mov
out
shr
push
rol
and
ins
mov
es
dec
(bad)
lods
ret
push
(bad)
stc
cmc
div
and
push
repnz
dec
sbb
mov
inc
movs
(bad)
repz
dec
clc
jp
(bad)
jnp
sub
inc
stos
add
aam
leave
mov
pop
out
jb
jmp
sub
mov
mov
add
mul
mov
xor
inc
push
fwait
sbb
rcr
fwait
jno
sbb
or
sub
xor
std
pop
and
iret
jb
mov
ror
add
mov
xchg
test
ret
pop
cdq
cmp
cmp
nop
out
fcom
or
jecxz
add
outs
dec
xchg
scas
mov
loopne
lds
mov
das
push
sbb
(bad)
push
ret
aaa
movs
in
sbb
lods
cmp
call
idiv
call
xor
cmp
fwait
pop
xor
call
or
add
jae
ins
mov
in
push
sti
out
cmc
xchg
pop
loopne
ds
out
fwait
cdq
jmp
out
fiadd
iret
adc
jnp
push
movs
(bad)
and
adc
mov
mov
or
mov
(bad)
(bad)
pop
jae
(bad)
call
jbe
or
out
dec
xor
and
je
clc
lock
mov
adc
push
cmps
scas
jge
mov
jno
stc
jle
leave
in
mov
add
xor
lods
pop
js
push
push
sbb
clc
mov
push
adc
int3
mov
sbb
or
stc
rcl
rcr
test
ficom
xor
mov
stos
loop
stc
int3
out
or
(bad)
fisubr
xchg
aas
mov
add
fistp
xchg
out
hlt
adc
mov
mov
lods
or
jne
das
retf
sub
loope
mov
or
std
or
jmp
add
ins
in
sbb
mov
fs
aad
repnz
cmp
popf
adc
into
dec
push
aad
hlt
or
out
pop
push
push
mul
pop
pop
pop
mov
inc
sbb
ja
test
stc
xchg
sub
bound
hlt
sub
sub
movs
(bad)
(bad)
pop
aad
call
jbe
pop
and
test
mov
and
loop
(bad)
and
cmp
into
inc
hlt
test
cmp
(bad)
ja
cmp
dec
lock
sbb
fimul
xor
inc
scas
sti
xor
fisubr
sub
pop
jne
stos
dec
push
cmps
dec
movs
and
sbb
adc
in
loopne
and
lock
sbb
sbb
mov
push
add
pop
jnp
loop
push
enter
das
cld
jl
add
jo
aad
inc
jns
stos
xchg
xor
(bad)
in
fisttp
jmp
lds
ja
add
bound
xchg
call
popf
mov
push
dec
xor
sub
outs
imul
(bad)
scas
mov
and
sub
lods
(bad)
adc
xchg
int
jmp
dec
jge
mov
rol
cld
push
in
pop
xchg
and
test
ret
sub
scas
sub
lods
push
ror
sub
in
mov
dec
cld
push
sub
and
je
jl
(bad)
cmps
test
dec
mov
call
xchg
push
pop
into
mov
jl
add
mov
push
xchg
xchg
sub
mov
inc
jl
hlt
inc
adc
inc
xchg
xchg
shl
(bad)
test
mov
add
sub
in
scas
add
or
mov
imul
(bad)
mov
fist
pushf
push
test
push
mov
pop
add
pop
hlt
xchg
pusha
mov
and
out
fcmovnbe
add
inc
pop
jp
ret
adc
adc
hlt
cld
in
jo
sahf
fldenv
cmp
mov
outs
push
int
jecxz
sar
test
lahf
inc
into
xchg
not
(bad)
fcom
dec
pop
pop
repz
aad
bswap
xor
add
mov
lahf
jne
repz
xor
cmp
inc
out
add
jmp
lods
dec
pop
aaa
call
sub
std
push
mov
pop
adc
xchg
addr16
dec
pop
and
int
inc
sahf
repnz
fsub
and
fst
(bad)
hlt
vpsubusb
repz
test
mov
add
in
adc
hlt
xchg
clc
je
and
push
xor
add
pop
retf
repnz
ss
dec
int3
fst
ins
movs
in
test
dec
movs
loop
sbb
sar
shr
test
bound
sbb
cld
frstor
cld
int
std
scas
push
mov
add
addr16
(bad)
or
test
push
xchg
inc
sub
push
cmps
or
es
mov
push
(bad)
push
or
cmp
into
push
mov
fst
push
retf
idiv
add
test
arpl
jns
icebp
push
(bad)
mov
(bad)
mov
mov
or
cmc
popa
and
inc
imul
cmp
in
mov
aas
adc
pop
nop
push
xor
icebp
adc
and
dec
(bad)
aad
inc
retf
int
dec
fdivr
mov
aaa
popa
jmp
cmps
in
cli
arpl
mov
pop
push
push
repnz
and
fwait
iret
clc
dec
mov
cmp
xor
outs
hlt
push
add
loop
xchg
adc
aaa
lock
xchg
jp
mov
mov
sbb
jno
push
jg
out
loope
adc
out
out
sti
test
push
mov
pushf
fs
mov
and
div
inc
pop
xlat
repz
and
shr
stc
add
xchg
xor
and
arpl
cmp
lahf
pop
out
mov
stc
adc
scas
mov
mov
lods
iret
addps
aad
stos
imul
dec
stos
loopne
das
loopne
and
mov
xor
sbb
ror
inc
sbb
(bad)
xor
cld
adc
(bad)
int3
in
mov
sbb
retf
(bad)
ret
cmp
add
and
mov
cdq
mov
ror
lock
mov
inc
jno
mov
outs
mov
out
ror
cmps
xor
leave
mov
sub
popf
xchg
js
pop
mov
or
inc
dec
(bad)
repz
xchg
mov
xchg
dec
cmps
pop
cmp
repnz
cmps
daa
neg
cmps
sbb
mov
push
inc
fnstenv
mov
stc
add
(bad)
xor
pop
mov
mov
(bad)
je
test
mov
movs
popa
(bad)
pop
add
jnp
xor
sub
sbb
enter
xchg
outs
or
lds
sub
sub
xchg
mov
mov
retf
xor
test
xchg
std
call
mov
popf
jo
sub
push
ins
pop
dec
pop
(bad)
jle
ds
sbb
and
test
mov
(bad)
clc
aas
dec
xchg
inc
add
in
xor
cdq
aas
aaa
xchg
mov
dec
jb
adc
das
jmp
rcr
imul
push
ret
pop
jae
fs
jbe
sub
mov
pop
and
pop
adc
test
outs
iret
mov
(bad)
ret
fdivr
stos
sbb
movs
fld1
aad
movs
mov
jb
ja
scas
out
pop
mov
xchg
jp
mov
mov
xchg
not
fst
add
outs
neg
ins
jle
xor
mov
stc
adc
fidivr
push
ins
xor
cld
(bad)
fisub
push
rol
dec
mov
fsubr
and
jecxz
mov
add
mov
sti
mov
sbb
or
stos
xchg
dec
mov
cmovg
lea
and
adc
push
les
sub
mov
xor
mov
icebp
or
daa
mov
call
dec
shr
popf
or
push
mov
fbstp
jae
fiadd
aad
lea
imul
std
or
sti
das
mov
xor
pop
rcr
mov
fistp
sub
dec
(bad)
aad
ret
rcr
mov
xchg
and
push
or
clc
cmps
mov
(bad)
(bad)
mov
push
lock
sub
sub
inc
or
jbe
pop
loope
rcr
cmps
jns
inc
(bad)
dec
es
movs
cs
jge
pop
jae
pop
(bad)
std
push
arpl
xchg
xor
lahf
mov
rcr
xchg
push
test
cmp
dec
clc
nop
fisubr
test
push
cmp
movs
jmp
fs
mov
cmp
rcl
lods
shl
in
loop
mov
mov
cli
push
in
pop
sbb
outs
cdq
sbb
stos
mov
inc
inc
xchg
or
mov
inc
and
imul
loopne
jns
push
pusha
xchg
ror
mov
aad
xchg
xchg
mov
in
add
xor
xor
push
rcl
scas
mov
xchg
test
push
out
push
add
push
and
sub
add
retf
add
dec
xchg
dec
xor
jp
test
cmp
loope
sub
loope
aam
dec
pop
pusha
fdiv
fisttp
daa
or
or
scas
mov
cdq
dec
sar
arpl
inc
aad
mov
add
mov
adc
out
xchg
push
aad
or
dec
jg
ins
in
lods
xlat
xchg
sub
fidivr
adc
arpl
cmc
hlt
movs
int3
(bad)
jne
mov
mov
push
push
repz
mov
gs
mov
scas
pop
fnstcw
mov
inc
xor
xchg
jo
and
call
ret
out
xchg
mov
xor
push
sub
popf
pop
jb
rol
sahf
data16
ja
xchg
xchg
cmps
icebp
push
dec
adc
stos
stos
call
adc
pusha
ret
rcl
jb
sahf
xlat
pop
cmp
dec
sub
pop
or
setl
push
lods
jl
mov
out
pop
xor
xchg
xchg
stos
xor
std
jecxz
jg
std
push
or
xchg
repz
int
cmp
pushf
sbb
xor
repz
cld
mov
repz
push
fist
iret
das
adc
or
xor
add
inc
jg
push
jl
inc
or
aad
xor
(bad)
xor
xchg
pop
xor
sub
ret
aam
stos
ja
lahf
sub
outs
push
retf
fld
xor
arpl
loopne
(bad)
sub
push
(bad)
xor
jg
ret
bound
ror
mov
xchg
scas
mov
xchg
mov
iret
(bad)
pop
jle
je
and
call
loop
pop
pusha
jnp
cmp
in
sbb
mov
sub
add
push
xchg
les
outs
ret
cmps
daa
ins
push
mov
jmp
stos
sbb
jno
jo
xchg
test
clc
stc
shl
pop
jnp
lahf
push
lds
nop
push
xlat
stos
out
add
sub
or
dec
xor
and
retf
sbb
mov
aas
rcl
outs
cmp
std
jle
out
pop
xor
adc
inc
dec
pop
ja
sti
push
aaa
mov
cmc
mov
mov
xchg
int
pushf
in
mov
movs
fwait
mov
mov
dec
pop
sub
pushf
fldl2t
(bad)
in
retf
(bad)
jge
inc
fcmove
fsubr
call
jmp
ins
inc
dec
(bad)
int3
xor
add
push
xchg
or
les
and
mov
test
call
fdivr
call
adc
adc
sub
sbb
cmc
sbb
jmp
inc
dec
or
cwde
inc
lods
(bad)
and
pop
fiadd
sbb
mov
adc
sbb
xchg
xor
ss
lahf
mov
adc
lods
cs
cdq
ss
dec
add
jb
ins
xchg
leave
test
mov
mov
sub
pusha
sar
mov
mov
push
lods
or
or
icebp
cmc
aad
push
jmp
jle
ja
and
mov
mov
mov
hlt
and
ret
add
arpl
mov
clc
cld
stc
or
pop
mov
test
ret
mov
xor
arpl
sbb
xlat
data16
xchg
dec
dec
push
arpl
cli
add
jns
cmp
in
out
add
bound
jecxz
ror
add
scas
mov
das
mov
xor
data16
(bad)
arpl
xchg
sti
xchg
cs
inc
push
ss
inc
jns
ins
js
cmp
ret
out
mov
(bad)
pop
inc
push
shl
outs
inc
or
mov
add
adc
jo
out
dec
test
xor
push
pop
mov
nop
bnd
xchg
xchg
lock
test
inc
inc
orps
xor
xor
call
sti
mov
sub
sub
out
cmp
stos
xor
jmp
shl
cwde
ret
jp
mov
cdq
outs
mov
inc
sub
cmp
sbb
pop
sub
jne
int3
jp
dec
jb
loop
std
sbb
push
xor
mov
fdiv
gs
push
mov
inc
sub
or
mov
xor
out
pop
test
es
repnz
iret
jle
add
jle
sub
fsubr
lahf
xchg
icebp
push
cmp
xchg
arpl
out
js
add
xor
cmp
and
jbe
mov
pop
add
push
inc
sub
in
stos
pop
aad
repz
push
mov
cmp
inc
ds
xor
lahf
je
popf
xchg
jle
fimul
mov
adc
add
loope
icebp
loope
pusha
sbb
mov
stos
ins
pop
sar
sbb
or
push
xor
vpavgw
sahf
fstp
jb
cmp
in
xlat
xor
jmp
ret
inc
ret
data16
adc
xchg
dec
add
xchg
pop
add
fimul
mov
icebp
or
push
daa
dec
shl
mov
push
les
jge
sub
pop
pop
fild
push
(bad)
int
mov
fdivr
sti
ficomp
or
popf
jp
aas
jns
gs
xchg
enter
outs
jmp
mov
mov
call
mov
dec
jmp
iret
(bad)
and
imul
cmps
jle
(bad)
inc
add
mov
addr16
cmp
jmp
pusha
xor
stc
mov
dec
mov
xchg
aaa
ds
test
inc
cmp
nop
fmul
jo
jmp
adc
test
dec
aam
aad
mov
cld
cmp
dec
(bad)
shl
mov
loop
add
mov
inc
push
pushf
loopne
cmove
push
jo
mov
xchg
pop
sub
xor
adc
ja
inc
loop
je
sahf
imul
popf
inc
inc
stos
or
sbb
mov
and
xor
sbb
adc
sbb
or
das
hlt
rcl
lds
data16
mov
lods
in
mov
ror
pop
lea
fs
xchg
push
call
mul
dec
jl
mov
fst
(bad)
mov
movs
push
stos
sbb
xchg
repz
pusha
gs
sub
inc
add
cs
dec
ds
fmul
out
mov
pushf
loop
jecxz
mov
jl
shl
mov
xchg
mov
jg
lods
test
adc
mov
jno
xor
or
clc
mov
xchg
mov
arpl
xor
dec
add
bound
fwait
call
cmp
sar
mov
xlat
ss
mov
fisub
sbb
imul
(bad)
lods
mov
xor
mov
mov
ins
mov
popf
sub
movs
into
mov
dec
sar
push
add
sbb
xchg
push
out
mov
jecxz
punpcklwd
repnz
mov
test
in
lock
out
int3
jbe
stc
adc
xchg
cmp
xchg
rcl
pop
mov
ss
icebp
adc
(bad)
popa
sbb
xchg
fstp
inc
push
jmp
arpl
mov
mov
outs
in
enter
retf
mov
push
push
stos
fist
push
cdq
xchg
sub
xor
gs
add
xchg
inc
and
(bad)
call
sar
in
mov
xor
xchg
pushf
dec
nop
mov
daa
sub
adc
daa
test
aam
xchg
adc
inc
clc
sub
fwait
push
dec
cmp
out
mov
iret
push
push
and
shl
clc
pop
pop
cmp
jle
bound
sub
cmc
out
mov
(bad)
in
call
retf
jl
test
test
call
mov
jae
jne
push
test
jmp
movs
add
xchg
loope
(bad)
cld
sahf
sub
xchg
stos
or
and
lahf
push
pop
jns
cmp
pop
fstp
fdiv
sbb
inc
std
pop
loop
loop
adc
mov
out
push
or
xchg
clc
iret
sub
jecxz
ja
jb
test
pop
push
xchg
push
jnp
and
test
out
aas
sbb
mov
imul
lods
push
mov
es
sub
shr
mov
sbb
mov
push
pop
retf
ja
push
pop
inc
jbe
test
mov
pop
gs
loop
test
mov
add
and
cmp
dec
ja
les
adc
xor
cmp
repz
sahf
xor
mov
mov
es
das
call
mov
int
xchg
jno
imul
bswap
jno
out
fadd
fs
push
sti
jp
and
(bad)
(bad)
popf
jl
jne
push
pop
mov
scas
sub
pop
jae
inc
stos
mov
mov
xchg
out
xchg
enter
fdiv
leave
retf
daa
sub
sbb
popf
ins
sub
adc
jne
mov
sahf
sbb
mov
cmps
jns
inc
pop
shl
shl
repz
jp
xchg
sub
pop
inc
in
jmp
push
xor
xchg
xor
mov
int3
push
pop
sar
mov
sbb
outs
ins
push
dec
cmc
nop
sbb
out
sbb
dec
mov
ffree
push
jl
scas
adc
xor
or
adc
mov
or
clc
test
mov
bound
(bad)
movs
int
mov
in
cmp
in
loopne
repnz
xchg
mov
scas
mov
enter
sbb
mov
leave
mov
cmps
push
int
(bad)
mov
iret
into
xchg
setg
fcom
inc
sahf
adc
dec
rcl
lock
vmovshdup
cmp
xchg
sbb
ss
jo
in
pop
hlt
xor
outs
xchg
pop
ror
push
cmp
push
ja
popf
inc
call
mov
cli
test
jo
pop
jne
adc
inc
mov
mov
add
stos
cmp
(bad)
mov
sbb
fwait
and
lahf
call
jo
loop
mov
push
jae
mov
add
rcl
fwait
test
or
call
jno
inc
sub
or
lods
fsub
mov
pop
jns
loope
scas
add
(bad)
ds
xlat
(bad)
mov
loopne
cmp
lea
(bad)
(bad)
loop
mov
outs
jo
movs
jnp
call
mov
lds
shl
or
pop
push
cmc
xchg
(bad)
std
mov
cs
xchg
mov
pusha
stos
jo
sub
ret
lods
ss
ret
imul
sbb
dec
jl
lods
sub
push
in
inc
call
xor
lods
fist
sub
(bad)
cmp
stos
mov
popf
mov
out
cdq
push
add
shl
dec
js
jmp
add
cmps
xchg
scas
sbb
jns
(bad)
lahf
or
sub
cwde
rcr
pop
xlat
fnstenv
mov
pop
je
cmps
xor
cmc
mov
js
push
xor
push
stos
cdq
out
xchg
pop
enter
mov
adc
xor
data16
xchg
(bad)
push
cld
cmp
addr16
pop
add
sbb
fucom
or
inc
adc
pop
(bad)
mov
jb
or
xchg
dec
inc
pushf
les
popa
dec
test
loopne
loopne
pop
ror
dec
jg
push
or
jge
inc
xor
(bad)
xchg
xor
dec
mov
loope
xchg
xchg
sbb
inc
xchg
add
popf
adc
jns
std
mov
adc
jns
push
loopne
pushf
sub
mov
pop
out
cmps
mov
test
(bad)
les
adc
cdq
dec
out
cmp
cmp
nop
je
push
lock
cwde
adc
add
aas
(bad)
sub
or
outs
xchg
clc
bound
test
out
xchg
and
pop
mov
fst
ins
inc
mov
iret
mov
aam
into
dec
mov
in
out
inc
push
cmps
jle
sub
cmc
jo
xchg
mov
pop
fistp
ret
pop
test
xor
cmc
dec
loopne
stos
mov
test
out
sub
mov
add
xor
pop
sbb
pop
adc
ss
cs
cmp
jne
mov
retf
adc
cmps
and
pop
xor
dec
mov
aas
out
aam
in
inc
dec
dec
cmp
sar
call
and
cmc
jae
lahf
in
push
sbb
bound
test
sbb
xchg
cmc
cmp
xor
repnz
addr16
push
jl
ins
pop
aas
add
mov
adc
cld
(bad)
push
ss
xor
pop
mov
aad
push
iret
xor
sub
pop
fisubr
pop
cmp
cmc
mov
ret
sbb
mov
mov
not
int
imul
aam
sbb
fild
pop
aad
xlat
stos
sbb
sub
add
jmp
xchg
jo
pop
mov
cmps
sub
dec
pusha
mov
enter
dec
xor
mov
cmps
hlt
cmp
adc
cdq
scas
adc
jp
das
adc
xchg
aaa
push
sbb
adc
loopne
gs
fwait
cmps
out
ret
cmp
test
pop
mov
adc
push
scas
mov
add
jb
mov
jle
lds
shl
push
xor
mov
aad
xchg
push
push
xor
jb
xchg
call
inc
hlt
test
lahf
push
in
inc
pop
xor
jl
push
dec
fidiv
scas
dec
dec
mov
mov
inc
pop
(bad)
sahf
adc
mov
popa
mov
push
pop
das
inc
xchg
cmp
adc
or
sahf
cmp
stc
test
sbb
xchg
stos
retfw
mov
push
fimul
adc
rcr
push
dec
push
mov
adc
sbb
or
aad
(bad)
and
rcr
adc
das
sbb
idiv
dec
arpl
pop
aaa
out
sub
stc
push
or
jle
cdq
(bad)
out
out
jae
call
xor
ds
sub
xor
sbb
sar
cmps
mov
(bad)
sbb
enter
jmp
inc
in
jp
or
add
jb
dec
test
fisub
xchg
sbb
sub
sbb
fldenv
mov
ret
(bad)
dec
adc
sub
lods
xor
pop
push
pusha
aam
loopne
rcl
mov
icebp
cmps
add
in
jle
es
mov
popa
aaa
sbb
imul
hlt
fidiv
fsubr
ins
sbb
aam
es
inc
fldcw
jb
dec
pop
mov
and
int3
fcomip
fiadd
or
call
arpl
mov
loop
xlat
(bad)
xchg
push
(bad)
int3
stos
pusha
iret
add
jle
dec
pop
cwde
jge
hlt
repz
into
in
sbb
movs
addr16
push
xchg
cmps
es
mov
or
int
cmp
fdiv
jl
test
fldl2t
mov
sbb
jbe
push
pop
push
rcl
in
mov
es
jns
push
mov
xchg
icebp
cmps
jecxz
fwait
stos
mov
jp
jge
xor
inc
jo
xchg
xchg
arpl
fiadd
adc
ss
pop
loopne
push
in
aaa
add
test
lahf
dec
leave
jmp
adc
sub
mov
leave
bound
out
push
stos
fxtract
jb
jnp
mov
mov
inc
cmp
adc
cwde
pop
cmp
aaa
dec
inc
mul
sub
jle
add
xchg
repz
xchg
inc
arpl
out
call
mov
ds
fisub
fist
push
pop
fld
mov
pop
pop
cmp
clc
dec
pop
lahf
imul
mov
sbb
or
test
mov
dec
fs
cmc
cmp
lods
push
add
ror
cmps
cmp
pop
inc
repnz
cmp
frstor
(bad)
fs
dec
dec
mov
(bad)
sub
and
(bad)
pop
das
ss
xor
sub
and
hlt
imul
loopne
call
pop
jle
or
push
fwait
mov
add
fnsave
retf
jne
pop
sahf
inc
popa
(bad)
lods
mov
jl
icebp
add
jbe
adc
int
sub
dec
popf
ins
dec
aas
jmp
push
stos
icebp
sub
xchg
ins
sub
mov
ret
movs
push
enter
(bad)
(bad)
dec
mov
mov
xor
sahf
push
leave
inc
sbb
add
cmps
xchg
sbb
cld
mov
cmps
cs
and
add
xchg
aaa
sbb
jl
push
scas
add
aaa
hlt
or
mov
cdq
adc
or
stos
and
jnp
pop
xchg
cwde
shr
imul
popf
xchg
inc
xchg
out
xor
in
sbb
stos
daa
cmp
fwait
sbb
rcr
loope
jne
mov
ret
es
aas
mov
jle
mov
aad
xchg
jmp
pop
and
iret
ror
jp
jle
or
xchg
pop
or
test
mov
int3
adc
mov
push
cli
or
fldenv
ret
jp
push
sbb
push
dec
lods
xchg
jl
inc
inc
out
push
inc
arpl
xchg
gs
call
xchg
call
ss
adc
push
jne
jbe
dec
out
push
in
mov
ja
pop
jo
xchg
in
inc
out
(bad)
push
pop
(bad)
dec
dec
mov
xchg
loope
mov
push
rcr
loope
xor
pop
jbe
loop
retf
bound
fld
jne
ret
int
push
cmp
iret
lds
dec
mov
dec
nop
daa
ret
xchg
mov
lds
add
dec
aas
jmp
fisub
cmp
cmp
fsub
sub
sbb
cmp
inc
jle
push
dec
mov
mov
cdq
mov
jmp
retf
xor
cmp
ds
cli
(bad)
adc
clc
mov
cdq
jmp
aam
outs
mov
sub
add
lahf
fcmovbe
adc
mov
mov
fnsave
dec
sbb
(bad)
cmp
mov
sbb
adc
(bad)
fcom
jbe
mov
test
push
add
mov
cwde
sbb
adc
mov
mov
mov
jns
push
xchg
iret
mov
mov
sbb
pop
repz
iret
imul
fs
or
arpl
arpl
pop
mov
inc
popa
or
adc
xor
xor
imul
unpcklps
retf
mov
cmp
xchg
pop
sub
dec
sub
mov
adc
mov
icebp
cdq
cmp
pusha
repz
pop
imul
out
ds
mov
mov
xchg
dec
ret
jge
inc
retf
das
and
mov
(bad)
pusha
scas
js
lea
fsub
push
or
mov
add
xchg
mov
xchg
sub
push
mov
cwde
dec
sbb
es
inc
(bad)
or
shl
sub
jmp
inc
dec
test
xor
(bad)
dec
xor
cmp
push
sar
mov
sahf
int3
sub
shl
cs
cmps
pop
inc
cmp
retf
mov
clc
arpl
inc
push
mov
test
push
cli
pusha
add
clc
pop
or
popf
test
loopne
fidiv
or
sbb
or
jmp
cmp
pop
adc
sub
xchg
repnz
adc
push
mov
jbe
xor
pop
int
in
inc
pop
cmps
mov
cmp
mov
cmp
(bad)
mov
dec
cdq
mov
sbb
fld
pop
sbb
jno
cmp
xlat
mov
adc
fwait
dec
mov
dec
into
shl
sub
fcomp
inc
push
sahf
mov
adc
imul
push
(bad)
xchg
mov
int
loopne
imul
sub
div
loop
xor
in
pop
mov
es
jmp
pusha
iret
xchg
mov
mov
in
fcomp
lods
pushf
test
addr16
jmp
retf
in
inc
lea
mov
int3
mov
push
or
and
sbb
xchg
popa
dec
(bad)
xchg
sub
push
aam
daa
push
loop
cld
mov
cmc
cs
xor
sub
jg
or
push
xor
xchg
sbb
repz
fisubr
jmp
inc
inc
mov
rol
inc
jp
enter
xchg
mov
push
cmp
jge
es
imul
jecxz
push
xchg
jle
push
inc
mov
cmp
retf
sbb
in
(bad)
jp
lods
into
fisub
jb
into
fsub
sbb
cld
std
jmp
inc
inc
dec
pusha
inc
(bad)
cli
sbb
dec
push
xchg
sub
or
dec
outs
gs
cmp
mov
stos
sbb
sbb
loope
sti
int3
sub
popa
push
inc
in
sub
movs
mov
mov
bound
push
inc
arpl
dec
mov
into
adc
int
out
ror
(bad)
scas
or
je
xor
push
push
arpl
div
mov
xchg
je
cs
jo
push
cli
ins
aam
jne
push
push
add
push
and
mov
mov
out
aam
xor
jmp
and
jl
add
jl
outs
aaa
and
ret
aaa
jp
(bad)
(bad)
lea
out
sub
fisub
lods
and
cld
push
xchg
dec
cli
xchg
sub
or
cld
es
and
retf
movs
ret
and
adc
xor
xor
inc
clc
outs
pop
sub
sbb
nop
inc
inc
mov
enter
jle
(bad)
cmp
lods
lahf
dec
or
(bad)
and
outs
push
out
mov
or
sub
std
cmp
call
sbb
jmp
adc
pop
ret
mov
adc
not
inc
test
test
mov
dec
jae
outs
sub
mov
sub
ja
ds
push
data16
pop
mov
fwait
mov
push
mov
cdq
out
hlt
cmp
and
jmp
cdq
jmp
es
jbe
(bad)
cmps
pop
or
lods
jae
mov
(bad)
loopne
inc
jp
xchg
xchg
cwde
js
sub
pop
push
pop
or
adc
jle
outs
sbb
cmp
(bad)
sbb
lds
clc
push
adc
inc
sub
cmc
call
mov
cmps
or
mov
leave
dec
mov
push
push
aas
sub
iret
imul
xchg
mov
cwde
push
inc
ja
not
add
aam
jns
in
mov
test
push
pop
icebp
idiv
push
pop
inc
xchg
out
pop
push
daa
mov
fisubr
ins
jg
inc
hlt
(bad)
(bad)
out
test
bound
pop
mov
loope
fdiv
jnp
or
or
loope
sub
jmp
cmp
jecxz
mov
mov
cld
stc
imul
mov
stos
int
mov
cwde
sub
test
shr
jmp
pop
mov
push
mov
jmp
out
and
xor
sub
pushf
mov
mov
sbb
add
out
xor
dec
mov
in
mov
dec
pop
mov
nop
push
aaa
jbe
aam
call
lods
push
mov
push
loope
lds
pop
lock
leave
cmp
sbb
fidiv
jns
add
dec
(bad)
call
mov
mov
stc
fwait
xchg
leave
aaa
lea
jae
mov
sbb
iret
fsubr
adc
das
xchg
mov
sbb
data16
mov
out
jb
mov
outs
mov
cmp
or
mov
test
jp
inc
jg
popf
out
std
fild
and
ror
and
cmp
and
int
mov
mov
mov
sub
push
mov
(bad)
xchg
pusha
jnp
ss
sahf
adc
lods
int3
shl
sub
popf
outs
rol
lea
ins
aam
mov
and
jecxz
aaa
fimul
xor
pop
mov
pop
fidivr
inc
mov
sub
jp
cwde
inc
and
hlt
xchg
sub
xor
sub
je
rol
xchg
inc
into
push
dec
mov
into
pop
std
idiv
repz
push
test
and
mov
inc
dec
sbb
icebp
push
jno
or
pop
iret
add
pop
and
mov
mov
stc
hlt
out
imul
data16
arpl
mov
mov
out
push
sbb
arpl
in
mov
shl
push
mov
and
test
cmp
ja
add
jmp
scas
lahf
add
dec
imul
jmp
idiv
fnstsw
mov
pop
or
repz
lds
out
popa
pop
adc
ins
jmp
mov
push
dec
xor
popa
cmps
pop
pop
es
mov
xor
aad
ret
fcom
mov
or
jge
adc
adc
or
not
mov
mov
out
inc
and
push
jp
inc
pop
fisttp
jp
adc
xor
dec
ficom
dec
inc
nop
mov
test
daa
sti
push
cmp
add
or
dec
fcmovne
cmps
push
xor
stc
stos
call
pop
push
ret
xchg
test
shl
pop
test
stos
rcr
in
cmp
fdiv
popf
stos
cmp
stos
jnp
xchg
pop
jecxz
aam
mov
jle
jbe
int
adc
inc
push
stc
mov
mov
test
outs
(bad)
mov
jecxz
lock
dec
ja
scas
(bad)
(bad)
mov
cmp
fisttp
mov
mov
adc
xchg
shl
cli
call
retf
xchg
jnp
cmp
push
daa
push
dec
pop
jp
xor
loopne
xor
inc
xor
sahf
imul
jne
call
fiadd
xchg
xchg
adc
cmp
ret
jmp
xor
adc
mov
nop
retf
shl
call
gs
fsubr
or
(bad)
xchg
jnp
leave
pop
stc
mov
and
or
(bad)
mov
adc
fnstenv
clc
dec
outs
repnz
lds
(bad)
inc
daa
sub
jle
pop
xchg
fisub
rcl
sub
out
ins
mul
jo
scas
mov
les
clc
push
xchg
rol
into
and
dec
repz
mov
sbb
(bad)
push
jg
(bad)
std
fcom
dec
push
shl
and
jnp
test
cmp
das
and
sbb
cdq
adc
xlat
(bad)
pushf
div
push
pop
(bad)
leave
scas
push
movs
push
shr
mov
call
jg
stos
jp
out
add
add
fisttp
lods
out
in
stos
(bad)
push
outs
je
mov
jg
enter
mov
js
xchg
out
mov
mov
mov
and
pusha
mov
pusha
jp
cs
pop
retf
xchg
adc
mov
jl
cmc
jl
or
int
ret
dec
pop
push
pusha
push
jge
ja
xchg
push
data16
ret
mov
mov
mov
addr16
mov
and
mov
jmp
lods
xchg
out
repz
lock
adc
rcr
jmp
out
scas
inc
push
cli
cs
imul
std
ret
loop
pop
test
les
popf
(bad)
fcmovnbe
jb
lea
(bad)
lds
int
sub
imul
and
xchg
into
imul
cmp
leave
jo
in
int3
sub
push
inc
ins
mov
sub
dec
out
in
(bad)
xchg
sahf
outs
pop
mov
hlt
call
(bad)
mov
cwde
xor
cld
imul
jmp
lahf
push
cmp
loop
mov
not
sub
loope
push
lahf
cmps
cdq
mov
(bad)
adc
out
ins
rcl
test
cli
mov
cmp
mov
rcl
dec
push
push
nop
inc
fisub
and
xor
daa
add
sub
scas
(bad)
test
test
inc
jnp
lock
outs
dec
(bad)
or
inc
out
push
sub
pusha
je
(bad)
cmc
xchg
outs
cmp
dec
push
sbb
fld
mov
lods
add
es
mov
mov
and
sub
mov
mov
add
cwde
(bad)
push
xor
aad
cmp
xor
mov
cmc
add
push
dec
leave
pop
outs
stc
push
dec
in
sub
mov
xlat
adc
fisttp
les
movs
test
cmp
movs
mov
push
ret
dec
sub
call
jb
sahf
inc
icebp
nop
and
mov
push
or
cmp
push
ins
mov
retf
test
scas
fwait
jl
sbb
inc
pop
mov
mov
daa
scas
stos
stos
or
pop
mov
mov
dec
mov
pop
push
(bad)
pop
inc
gs
mov
jg
pop
bound
fidiv
dec
call
fistp
jns
push
loope
std
es
mov
xor
data16
pop
shl
inc
push
mov
int
leave
xchg
mov
jg
mov
ins
sbb
mov
movs
cmp
cmp
leave
test
clc
adc
mov
mov
xchg
xor
add
scas
int3
imul
inc
dec
ficom
(bad)
mov
retf
mov
xchg
stc
outs
xchg
es
mov
int
pop
mov
cs
or
cdq
jo
(bad)
jne
cli
mov
ss
loop
mov
(bad)
clc
jns
(bad)
sbb
mov
cmp
mov
mov
add
popa
fisub
scas
es
xchg
stc
jle
repz
jo
mov
sub
or
sbb
outs
lea
cli
jnp
(bad)
int
xor
mov
retf
cld
jb
sar
js
mov
mov
repz
jne
lods
xor
push
xor
scas
fcmovb
push
or
xor
das
sub
mov
in
fs
push
aas
mov
mov
leave
xor
idiv
out
pop
push
xor
xchg
mov
scas
aam
outs
push
imul
fcmovne
xor
test
pop
add
bound
mov
mov
lods
(bad)
sbb
repnz
add
cwde
xlat
mov
sub
data16
jns
arpl
ins
inc
add
push
call
fs
test
push
pop
dec
fnstsw
inc
popa
ins
pop
cli
xor
loop
cmps
inc
inc
sbb
int3
xchg
fnsave
lahf
sbb
ins
jae
mov
cmc
stc
pop
data16
mov
jbe
adc
pop
pop
mov
cmp
mov
xlat
stos
repz
push
das
fdiv
call
sub
push
int
test
cmp
rol
arpl
or
rcl
add
and
retf
mov
call
adc
sbb
push
test
js
es
and
test
mov
mov
stos
mov
mov
imul
mov
and
fdiv
int3
lock
enter
mov
cmp
shl
not
dec
sbb
xor
cmp
outs
push
pop
and
cmp
std
cmp
inc
movs
mov
or
push
pop
stc
das
xchg
lea
retf
mov
ret
push
mov
mov
cmps
ss
add
out
mov
dec
mov
out
sbb
mov
jo
push
je
mov
mov
repz
xchg
cmp
(bad)
mov
and
ror
jle
cmps
xchg
scas
retf
lock
jae
push
xchg
outs
daa
jmp
pop
xchg
or
dec
test
mov
cmps
mov
dec
std
push
test
xchg
int
and
ja
inc
mov
add
test
daa
and
in
fimul
jno
std
ret
sahf
push
test
mov
out
rcr
(bad)
into
pop
loop
repnz
std
inc
js
dec
jnp
clc
test
dec
jecxz
dec
pop
mov
inc
lods
out
movs
out
stos
jb
loopne
ss
imul
ficom
adc
xor
lahf
lods
adc
out
movs
pop
jg
xchg
outs
push
jnp
push
jae
nop
adc
pop
rcr
mov
push
(bad)
cmp
dec
pushf
mov
lock
jmp
loopne
rol
xchg
cmp
in
out
jbe
and
or
je
jge
out
inc
inc
icebp
neg
mov
loopne
mov
mov
and
out
sub
lea
mov
mov
add
adc
mov
jge
dec
or
xchg
test
inc
inc
mov
and
in
jmp
xor
and
pop
call
cmps
lahf
cmc
and
xor
lahf
cwde
retf
jo
adc
and
jg
cli
cld
jp
dec
push
sub
scas
push
cmp
cmp
mov
or
fcomp
daa
pop
mov
mov
aam
jecxz
or
add
or
in
or
add
inc
mov
scas
lods
xchg
rol
fmul
mov
mov
mov
and
mov
enter
aad
pop
inc
ss
sar
lock
inc
in
aaa
test
push
push
test
xor
imul
xchg
nop
dec
ret
(bad)
loope
fsubr
sbb
add
and
(bad)
(bad)
out
js
inc
stos
stc
adc
imul
in
push
mov
sbb
popf
inc
inc
data16
ja
mov
loop
loope
out
fisttp
sar
shl
jae
test
test
push
mov
mov
test
jmp
movs
xchg
and
loope
add
jmp
das
inc
inc
and
ins
cwde
xchg
stos
adc
mov
jecxz
push
lds
pop
mov
fist
inc
fidivr
pop
xor
sbb
mov
scas
or
and
fwait
push
sbb
lods
cld
int3
xor
neg
icebp
in
pop
inc
add
mov
push
adc
xchg
adc
jmp
scas
pop
mov
and
sub
dec
dec
in
lock
mov
dec
ret
sbb
mov
mov
cmp
inc
(bad)
stc
mov
out
push
and
jle
fld
test
jb
addr16
das
xchg
sbb
sub
repnz
dec
sbb
jno
mov
mov
nop
xchg
and
cmp
adc
mov
jle
cmp
cmp
mov
add
int
popa
inc
mov
pop
fsub
xor
dec
aad
jns
xchg
cmps
retf
enter
sub
sbb
cli
dec
fsubr
stos
adc
test
outs
mov
fst
lea
xchg
nop
and
repnz
jmp
fbstp
stos
pusha
pop
xor
push
sar
aad
iret
ins
test
sub
out
dec
std
ds
xor
dec
sub
mov
lea
mov
or
adc
jmp
dec
jno
sbb
mov
cmc
add
ficom
inc
cdq
mov
cld
xchg
inc
mov
push
or
clc
pop
inc
mov
cmp
adc
or
dec
loope
scas
mov
lea
retf
popf
xor
data16
xchg
loopne
pop
inc
(bad)
std
and
xor
jg
inc
cmp
sub
scas
xor
out
sbb
mov
aaa
test
outs
mov
inc
mov
and
fisttp
xchg
adc
mov
fild
mov
mov
icebp
ds
xor
(bad)
mov
(bad)
movs
sbb
dec
mov
and
push
add
pop
cmp
adc
into
inc
dec
xchg
outs
dec
aam
ds
or
jb
sub
jle
fs
rol
xchg
les
xchg
pop
push
mov
aaa
call
sbb
loopne
sahf
call
retf
xor
cwde
jp
jp
sub
push
and
pop
inc
enter
lock
inc
(bad)
or
stc
ins
pop
and
mov
popa
movs
in
lods
or
pop
or
cld
xchg
push
add
push
(bad)
clc
jmp
lahf
push
pop
mov
js
inc
sbb
in
aaa
mov
sub
icebp
and
add
xchg
sbb
cmp
xchg
stc
nop
push
pop
fwait
pop
enterw
jb
into
adc
push
sbb
(bad)
adc
mov
mul
outs
jb
daa
mov
test
or
cmp
movs
repz
xchg
fidivr
loope
(bad)
pop
(bad)
ja
inc
xor
add
pop
xor
and
ins
xchg
jbe
mov
fwait
retf
mov
cmp
push
clc
inc
add
jle
out
inc
stos
aam
adc
test
fbld
retf
fwait
dec
inc
push
mov
dec
jne
push
push
push
push
pop
out
dec
ds
in
dec
test
cmp
fwait
lods
fist
(bad)
push
loop
or
imul
sub
sbb
rol
call
fstp
jg
movs
mov
xor
mov
ins
and
loopne
in
test
dec
cmp
push
(bad)
pop
sbb
mov
xchg
add
mov
mov
enter
fcomp
inc
rol
imul
ficomp
adc
repnz
sbb
das
(bad)
in
and
test
push
imul
mov
mov
ret
mov
push
jbe
sub
in
outs
xchg
mov
std
jne
inc
retf
push
mov
xchg
sbb
inc
inc
jmp
js
push
arpl
fcomp
or
sub
loope
sub
and
fs
fcomp
adc
pop
fistp
into
iret
mov
gs
push
push
dec
xchg
dec
push
pop
bswap
mov
push
push
push
sahf
or
jne
mov
push
cmp
ds
or
cs
dec
fadd
aam
(bad)
mov
cmps
jle
out
clc
stc
inc
push
jge
stos
leave
adc
xor
in
in
cmp
mov
mov
lods
in
into
neg
cmc
aad
dec
mov
mov
push
push
pop
and
cmp
ror
push
dec
xor
dec
mov
lds
mov
lods
test
sbb
cdq
cmps
std
ja
sbb
test
lahf
test
inc
sub
cmp
sbb
push
mov
lds
int3
ret
sbb
mov
lea
fidiv
jno
cmp
lock
jge
sbb
sbb
into
outs
ins
adc
leave
xchg
inc
shl
cmps
shl
pop
sbb
jg
dec
rol
ja
and
sbb
and
lods
jnp
pop
pop
das
push
call
sub
adc
das
mov
in
sub
lea
add
push
sbb
test
sub
or
push
mov
std
ror
neg
and
sbb
and
scas
div
rcl
shl
ret
push
std
rcl
(bad)
push
mov
sbb
icebp
sub
pop
push
and
push
dec
neg
retf
iret
jmp
pop
popf
push
test
push
fisubr
pop
push
add
jecxz
das
cld
lea
mov
dec
dec
push
(bad)
retf
pop
pop
int
(bad)
(bad)
and
and
xchg
or
(bad)
mov
outs
jp
sbb
jne
lods
stos
jge
mov
(bad)
outs
inc
push
or
pusha
test
adc
dec
or
cmps
shr
adc
in
ja
nop
pop
push
cmp
ror
int3
cmp
out
fnstsw
push
ror
jmp
or
mov
neg
ret
adc
popf
imul
dec
lock
or
add
movs
in
pusha
mov
pop
out
jmp
aas
adc
or
stos
push
xor
adc
mov
ins
retf
fwait
shr
call
jnp
pop
push
pop
jne
sbb
mov
pusha
push
arpl
jb
pusha
mov
jb
cmps
sub
cmp
pusha
mov
pop
mov
test
adc
or
pop
scas
pop
mov
test
je
inc
call
inc
dec
sub
pop
repz
xchg
jl
bound
adc
mov
scas
mov
dec
mov
sbb
dec
shr
call
adc
cmps
xlat
rcr
xor
call
jg
ror
mov
das
aaa
stos
jo
ret
sub
mov
rcl
int3
jp
or
xor
sub
jle
mov
or
inc
ins
in
stc
in
and
xor
jmp
pop
mov
call
cmp
mov
mov
adc
xor
jl
add
into
icebp
fcmovb
mov
jb
or
jo
adc
xor
outs
mov
imul
xchg
cmp
or
pop
sub
(bad)
push
sub
xchg
test
loop
mov
mov
mov
cmps
ror
pop
(bad)
pop
out
ror
mov
mov
mov
and
das
mov
(bad)
mov
lods
test
aad
pop
and
xchg
lods
addr16
leave
pop
setbe
jp
push
mov
es
lahf
retf
jmp
dec
add
push
adc
mov
imul
jp
dec
push
jb
cmp
std
push
and
imul
push
arpl
pop
mov
fs
push
fdiv
je
mov
pop
pop
xchg
mov
jg
dec
xor
jp
lahf
loopne
ins
(bad)
js
or
dec
mov
add
imul
ds
mov
and
das
xor
pop
out
int
(bad)
xchg
cmc
aad
aas
test
or
inc
mov
stc
mov
and
scas
mov
lds
or
sub
out
push
cli
pop
test
sbb
gs
mov
cli
out
add
ss
push
push
add
dec
sub
pushw
or
emms
popf
inc
enter
pop
jmp
xor
iret
mov
stos
mov
loop
mov
lods
sbb
test
ins
push
sub
fldcw
and
dec
mov
push
pop
pop
inc
cmp
fist
(bad)
sub
mov
xchg
fwait
cmps
cmp
ins
add
adc
cmp
push
repz
pop
test
(bad)
xor
sub
fwait
test
mov
xor
arpl
push
imul
pop
push
std
mov
(bad)
cli
pushf
shl
jmp
sub
(bad)
ficom
das
mov
mov
ins
sub
mov
cmp
mov
jle
pushf
jne
push
ficom
xlat
sub
xchg
jne
or
or
dec
cmc
fadd
and
mov
fisub
push
inc
mov
sbb
sub
popa
cdq
xor
mov
stos
arpl
inc
out
fimul
push
sub
pop
pop
pusha
loopne
(bad)
mov
add
xchg
xchg
sbb
retf
les
or
imul
test
push
pop
xchg
cmp
or
sub
cmp
pop
cmps
mov
inc
jge
jge
and
dec
sahf
push
or
and
xor
inc
rcl
daa
or
test
jg
jg
stos
test
adc
inc
or
cs
sub
repnz
jle
mov
mov
sar
sbb
(bad)
push
mov
mov
loop
cdq
(bad)
fs
js
push
movs
sbb
push
cwde
movs
xor
xor
mov
and
inc
out
pop
sbb
or
ja
sub
xchg
mov
xor
push
xchg
cmc
mov
jnp
jno
(bad)
pop
popf
bound
inc
xchg
xchg
mov
jnp
enter
mov
(bad)
daa
or
add
mov
mov
ins
cdq
loopne
and
push
xlat
popa
pop
push
repnz
stos
xor
daa
mov
lods
(bad)
aad
test
mov
daa
call
stc
xchg
fild
jb
mov
fwait
jne
frstor
mov
add
(bad)
sub
xor
loop
ins
xlat
in
sbb
aaa
movs
out
leave
sar
neg
out
retf
stos
jmp
inc
test
sub
call
adc
push
push
dec
dec
mov
dec
fdivr
or
ds
sub
into
jp
mov
imul
sub
ret
ror
pop
(bad)
(bad)
or
mov
inc
lds
xchg
pop
mov
aad
xlat
xor
cmp
(bad)
jae
add
je
dec
bound
jge
or
and
lods
cmp
dec
or
clc
mov
mov
int
pop
jns
jbe
adc
retf
retf
sbb
cmp
mov
fisttp
push
imul
jns
pop
push
jp
sub
retf
push
xlat
xor
mov
in
xor
aad
pop
scas
or
stc
sahf
mov
xchg
stc
xchg
pop
je
and
xor
stc
std
bound
cmps
test
mov
or
div
ror
mov
and
leave
imul
cmp
jo
fdivr
icebp
js
mov
xchg
fwait
das
test
std
pop
in
xchg
fs
add
dec
push
xchg
out
out
sub
or
loope
neg
sub
inc
cs
int
clc
ins
lods
sub
xor
lds
lahf
loopne
push
or
test
pop
scas
xor
jl
clc
sbb
out
or
xor
cmps
idiv
loope
mov
add
shr
xor
cmp
add
inc
scas
sub
(bad)
push
and
out
mov
mov
stc
or
or
or
xchg
and
shr
call
int
fld
xchg
jle
inc
ror
fld
js
in
aam
xor
les
call
sub
mov
push
gs
inc
fisttp
in
xor
sbb
fnstsw
or
(bad)
pop
dec
sub
jg
neg
shl
icebp
aaa
inc
sbb
add
inc
mov
out
fcomp
fist
push
and
sbb
jle
adc
cmp
out
je
in
pop
movs
ins
fbld
mov
retf
cmps
mov
sbb
movs
loop
xchg
mov
rcl
mov
xor
sub
out
adc
leave
mov
hlt
test
push
sub
cld
inc
jbe
mov
push
or
stos
repnz
daa
inc
(bad)
cdq
push
loop
or
mov
or
and
sub
mov
xchg
mov
inc
into
adc
mov
xor
mov
dec
pop
pop
ret
icebp
mov
std
mov
cmp
jmp
ss
shl
popa
push
xchg
mov
scas
xchg
ret
and
pop
test
inc
test
out
lahf
ins
sub
out
inc
sti
inc
jmp
cwde
nop
sub
mov
jns
ds
push
pop
mov
call
js
fild
sahf
repz
cmps
mov
lahf
mov
adc
addr16
xchg
and
cld
sahf
imul
mov
fnstsw
outs
ins
in
mov
push
aaa
ins
jge
mov
cdq
test
call
inc
and
popf
mov
pushf
das
sub
push
stos
pusha
dec
adc
fild
adc
retf
fdivr
(bad)
cmp
push
mov
jbe
jle
sub
je
pop
mov
repnz
arpl
fist
cmp
mov
mov
retf
pop
test
sub
or
mov
sub
fnstsw
pusha
pop
and
mov
add
add
push
push
ins
lahf
pop
imul
sbb
pusha
scas
pop
mov
dec
pop
push
outs
or
mov
fild
popf
mov
out
in
mov
adc
(bad)
jno
adc
mov
in
jp
or
xor
fidivr
and
cli
(bad)
adc
xchg
or
jnp
call
cli
xchg
shr
ins
and
aam
mov
sbb
pop
scas
sub
push
xor
out
ins
adc
loope
jmp
xchg
mov
loop
(bad)
in
jmp
movs
repnz
out
pop
and
push
jmp
outs
push
shr
fst
nop
pushf
out
sti
sbb
xchg
fisubr
and
inc
mov
or
xchg
sub
add
adc
sub
or
jb
mov
pop
inc
and
in
fcomp
jle
mov
mov
xchg
mov
push
out
adc
dec
xchg
mov
popa
push
lods
push
jmp
mov
xor
mov
mov
pop
inc
ffreep
jns
mov
mov
mov
add
xor
jmp
xor
add
pop
fsub
retf
daa
pop
loop
mov
push
cmps
dec
nop
sti
fsubr
int3
inc
pop
dec
loopne
sub
lods
mov
pop
into
xor
inc
push
aam
rol
fcomip
pushf
loopne
outs
movs
mov
push
lock
jg
loop
push
add
jae
cmc
dec
adc
bound
xchg
div
popf
cmc
inc
imul
bound
pop
jns
ins
xchg
pop
mov
and
dec
pop
repz
ret
sbb
sub
jb
ret
cmc
mov
mov
movs
cmp
pop
xabort
push
mov
ins
jp
cmps
adc
ins
cwde
inc
jge
in
hlt
cmc
enter
mov
cli
xchg
mov
sbb
mov
sub
fucomp
cmp
es
pop
clc
adc
mov
mov
ja
int3
icebp
pushf
stos
mov
gs
dec
sub
ins
mov
(bad)
jp
jg
rcl
mov
sar
imul
mov
rol
xor
std
mov
mov
pop
mov
cmps
or
xor
fisub
lods
or
jge
mov
stos
loope
leave
jns
jmp
jp
add
mov
mov
ror
popf
dec
sub
add
nop
xchg
and
jbe
idiv
xor
stos
inc
stos
jnp
mov
pause
(bad)
iret
out
xor
mov
nop
retf
sbb
inc
fs
inc
push
fcom
and
cmps
movs
inc
dec
xchg
int3
inc
jmp
div
and
fs
dec
xor
out
dec
ficomp
icebp
dec
test
into
sbb
pop
in
dec
icebp
popf
dec
xchg
inc
ficomp
std
fcmovb
and
test
stos
dec
out
jmp
mov
sti
mov
aad
stos
dec
mov
mov
fild
(bad)
gs
(bad)
icebp
push
dec
rol
push
ret
movs
iret
inc
inc
add
hlt
push
(bad)
aam
mov
shl
fisubr
mov
mov
mov
das
adc
cli
int3
in
xor
cmp
sbb
ja
xchg
cmovbe
call
pop
add
arpl
and
cmp
mov
fst
pop
mov
mov
mov
call
rcl
jecxz
mov
and
xor
ins
fst
xchg
nop
mov
test
(bad)
xlat
add
cdq
xchg
sub
push
xchg
(bad)
jmp
scas
mov
mov
mov
imul
es
mov
fwait
rol
les
icebp
rol
pop
inc
dec
mov
pop
jo
fndisi(8087
push
ficom
xchg
add
daa
fcmovnbe
add
fs
cli
shl
xor
gs
mov
adc
bound
inc
repz
push
or
jae
ss
ins
cs
adc
jae
push
inc
and
mov
arpl
push
ror
mov
imul
mov
cmps
push
lock
das
test
mov
add
and
and
xor
jnp
shl
js
sbb
cmp
movs
nop
xchg
sbb
pop
xchg
aaa
leave
mov
in
mov
and
pop
shl
ret
sub
repz
aam
cs
mov
push
add
out
ins
jne
mov
and
dec
inc
push
stos
or
sub
std
movs
xchg
out
mov
adc
push
push
ret
add
mov
js
push
cmps
int
push
cli
push
mov
cmp
add
jl
push
lock
jnp
retf
les
jne
push
mov
ror
push
inc
in
dec
mov
repnz
dec
jmp
imul
dec
cmp
stos
mov
sti
inc
mov
pop
xchg
or
jmp
push
in
ret
mov
repnz
sbb
and
add
dec
jle
fbstp
mov
jg
mov
mov
lea
jne
xor
adc
mov
test
rcr
(bad)
cmc
jo
daa
sub
push
sbb
adc
popf
mov
fnstenv
cmp
ins
stos
jne
and
stos
jmp
je
adc
shl
and
ins
iret
xchg
cmp
sbb
push
rcl
or
loope
jle
add
adc
fidiv
movs
mov
(bad)
mov
int3
dec
imul
scas
sub
fwait
jbe
fisubr
(bad)
jns
fwait
std
(bad)
sbb
lds
xchg
sbb
sti
imul
cmps
mov
push
add
mov
inc
lods
test
clc
xchg
pop
int
call
mov
dec
push
shr
aaa
pop
pop
(bad)
jns
pop
loope
xchg
sub
shl
add
call
mov
(bad)
aaa
aam
scas
fimul
leave
mov
in
adc
xchg
sbb
jne
push
inc
cmps
in
adc
movs
std
adc
inc
(bad)
fdivr
arpl
jns
inc
lock
lods
cmp
in
push
jmp
stc
cdq
push
cmps
xchg
shr
jg
pop
or
or
mov
das
inc
cli
jo
pop
or
mov
mov
adc
popa
rcr
gs
jbe
test
test
xchg
out
jno
test
aam
and
dec
sar
repnz
outs
ds
les
mov
test
and
lods
test
mov
in
dec
clc
inc
mov
jmp
wbinvd
sub
or
out
adc
mov
mov
push
and
cwde
ins
jg
das
push
jecxz
adc
(bad)
dec
test
imul
pop
mov
pusha
icebp
jge
bound
cmc
push
rcl
out
mov
(bad)
shr
mov
cmp
pushf
xchg
xchg
ret
ffree
or
push
dec
mov
cmp
adc
cmp
push
and
movs
sub
adc
add
fild
jle
xor
jne
sub
cli
pop
mov
sbb
je
inc
mov
lock
sub
jle
dec
movs
fdivr
scas
mov
push
add
cmp
and
scas
(bad)
mov
inc
fstp
inc
inc
push
das
and
mov
jae
jo
dec
cmps
jne
add
in
shl
jp
inc
add
outs
and
adc
cmc
adc
loop
pop
sub
pop
xor
jnp
call
cmp
sahf
rcr
mov
sahf
push
xlat
and
out
xchg
xor
or
es
mov
int3
xor
test
jno
push
fisttp
popa
into
dec
push
pop
xchg
jo
adc
es
xor
shl
movs
mov
callw
gs
bound
data16
popf
movs
arpl
shl
add
or
(bad)
ins
push
inc
push
or
push
mov
outs
and
inc
inc
mov
imul
outs
jg
mov
inc
sub
add
dec
sbb
imul
je
movs
push
add
mov
mov
and
jmp
fnstenv
ficom
sub
popa
or
adc
or
inc
cmp
jmp
lds
test
(bad)
int
lahf
adc
mov
sbb
xchg
cmp
sbb
adc
cld
call
shl
js
add
out
dec
sbb
in
inc
in
aam
push
push
inc
inc
les
xor
(bad)
dec
push
sbb
jns
xchg
sar
jns
cmp
outs
jno
test
cmp
add
mov
mov
jmp
sbb
cmp
out
sub
std
mov
addr16
xor
adc
lods
iret
pop
cmc
addr16
xchg
ds
das
jno
inc
jl
into
and
adc
adc
inc
out
popf
dec
mov
jmp
or
mov
xor
das
sbb
loopne
das
aam
cld
imul
jmp
pop
push
pusha
sahf
mov
push
pusha
ret
push
mov
jmp
test
test
sub
lds
xor
add
add
scas
test
add
out
push
xchg
or
scas
in
dec
cmp
xchg
neg
sub
xor
movs
inc
cs
test
ret
push
aam
int
inc
loopne
pop
sbb
mov
jnp
ins
xor
xor
ja
stos
pop
sbb
dec
mov
ret
out
and
data16
xor
push
and
pushf
test
fsubr
movs
out
jmp
xchg
fs
jle
xchg
ins
sets
(bad)
imul
retf
retf
mov
fwait
inc
mov
dec
scas
mov
aaa
ret
jmp
or
jl
jno
sub
rcr
addr16
imul
repz
cs
pop
call
xor
sbb
cmps
test
pushf
mov
out
dec
sbb
pop
clc
rep
or
inc
inc
xor
fcmovnb
jmp
adc
jo
and
hlt
mov
push
or
rcr
(bad)
in
outs
lds
in
xchg
jno
adc
sbb
inc
jbe
ffreep
pop
add
adc
retf
and
or
fdiv
inc
ins
push
xchg
out
push
push
call
sbb
cli
(bad)
or
imul
call
jp
nop
sti
jae
shl
(bad)
xchg
and
aas
add
in
cwde
loope
xor
ja
imul
nop
xchg
inc
aam
shr
mov
or
cmps
inc
call
add
xchg
aad
loopne
mov
cmp
sbb
arpl
fs
retf
aam
scas
jp
or
not
mov
xor
add
or
pop
stc
lods
fsubr
aas
clc
mov
mov
jecxz
inc
inc
pushf
out
bswap
mov
adc
rcl
clc
arpl
xor
test
out
fisub
test
push
xor
xchg
add
call
loopne
push
mov
sbb
ror
mov
jnp
(bad)
cmp
xchg
cmc
inc
clc
out
in
sbb
pop
jo
(bad)
and
in
mov
test
fsub
ret
dec
or
aas
or
loopne
ret
and
push
lahf
rol
(bad)
(bad)
cli
sub
ds
cmps
xchg
inc
mov
push
cmp
jle
inc
cwde
jbe
sbb
sub
cmps
imul
mov
je
push
push
push
das
mov
jb
xchg
cmp
cwde
and
add
mov
mov
test
inc
test
sub
fidiv
push
shl
xor
dec
bound
int
call
mov
cmp
retf
in
call
rol
lock
arpl
jae
push
imul
test
addr16
mov
mov
aas
setns
mov
cmp
pop
nop
out
sahf
jl
cmp
mov
aas
mov
sub
pop
arpl
jge
enter
push
hlt
aad
stos
lods
rcl
dec
addr16
jp
dec
cmc
or
mov
mov
in
pop
push
or
out
scas
in
xchg
cmps
push
fsub
std
sbb
cli
repz
or
inc
stos
push
loopne
out
bound
pop
popf
xor
mov
outs
mov
rcl
inc
or
cli
sub
aas
in
inc
and
(bad)
fs
pop
add
aam
push
cld
into
(bad)
outs
add
mov
mov
dec
mov
sub
pop
push
(bad)
adc
cld
sti
jmp
lods
and
jp
push
test
sahf
mov
idiv
scas
shr
jl
xchg
cmp
addr16
mov
cmc
jne
rol
sub
neg
mov
jl
xchg
or
mov
out
mov
fidivr
dec
add
or
in
scas
xchg
cmp
add
repz
push
inc
mov
sbb
mov
jne
stos
iret
mov
stc
jno
inc
jge
push
call
mov
ret
dec
add
xchg
inc
(bad)
out
dec
add
cmp
dec
(bad)
movs
addr16
sub
mov
ficomp
nop
and
jo
xchg
shr
push
cmp
mov
xchg
xchg
add
jne
dec
mov
pop
popa
and
pop
cdq
imul
dec
pushf
mov
in
(bad)
jae
adc
jno
test
lahf
adc
jge
jno
pop
inc
inc
js
sub
cmp
pop
in
xor
or
stc
inc
dec
jne
pop
pop
or
aam
mov
pop
ror
loopne
in
pop
sub
mov
icebp
(bad)
out
pop
div
js
mov
mov
arpl
sub
ins
dec
aad
ds
and
addr16
push
jg
hlt
lds
and
push
sbb
jl
xor
dec
xor
in
imul
aam
pop
push
pop
add
jae
jnp
jns
jno
(bad)
jg
cdq
jmp
mov
stos
or
adc
and
jae
push
cmp
jbe
sub
repz
pop
fnstsw
dec
in
fistp
mov
ins
loop
push
jne
and
cmp
scas
jno
clc
test
jne
cmp
lods
call
dec
add
jmp
test
jge
stos
fisttp
div
pop
movs
aas
ins
and
sbb
lea
pusha
hlt
shl
lds
lock
movs
pop
test
es
(bad)
cmp
lock
(bad)
and
imul
dec
dec
nop
jle
js
sub
jmp
fs
scas
ret
mov
(bad)
shl
adc
fldcw
fbstp
sti
adc
or
xor
xor
shr
addr16
cdq
mov
clc
xchg
inc
mov
push
ds
bound
pop
adc
add
dec
jae
cs
xchg
push
mov
fistp
sti
inc
jne
data16
test
nop
dec
call
inc
add
cmp
(bad)
or
cmp
aas
mov
je
cmp
aas
test
std
(bad)
or
and
jb
cmc
fistp
adc
and
sbb
dec
dec
je
mov
push
or
test
scas
sub
sbb
and
(bad)
(bad)
or
push
outs
inc
jns
fs
aas
out
xor
nop
dec
daa
or
and
test
xor
pop
fcmovnu
xlat
lock
xchg
aam
loope
loopne
push
icebp
dec
push
adc
fdivr
or
jb
or
adc
mov
fiadd
scas
mov
xor
or
pop
mov
je
ja
rcl
sbb
movs
fisubr
fs
cs
popf
(bad)
dec
scas
add
fist
jne
rcl
push
jno
mov
add
stc
add
mov
fwait
aas
cmp
(bad)
mov
mov
sahf
outs
adc
cmps
sti
fsub
pop
pusha
xchg
dec
gs
mov
aad
imul
pop
outs
movs
ja
scas
pop
adc
call
jge
fild
mov
mov
add
sbb
mov
pop
sahf
in
xchg
dec
inc
clc
jo
ins
jnp
adc
imul
mov
dec
xor
in
repnz
adc
(bad)
push
(bad)
jmp
test
mov
mov
add
and
add
mov
rep
adc
ja
rcl
adc
dec
int
inc
cld
cmp
lock
in
push
out
cmp
mov
stos
jbe
push
jg
bound
rcr
jge
out
pop
xlat
cmp
cli
pushf
dec
pop
push
xchg
clc
test
jl
imul
mov
das
mov
xchg
lods
inc
ja
mov
iret
int3
stos
call
jle
psadbw
ins
out
or
test
cmc
pop
es
mov
mov
test
retf
cmp
jne
mov
inc
mov
sub
clc
sti
xchg
mov
cld
retf
ret
or
mov
in
inc
inc
inc
stc
test
mov
cli
sbb
lahf
or
inc
or
retf
loope
jle
out
xchg
xchg
cmp
mov
or
push
cmps
or
dec
and
ret
mov
syscall
in
in
add
ins
dec
jns
outs
in
mov
inc
repz
mov
imul
pop
pop
addr16
jno
cmp
push
inc
or
cmp
and
mov
adc
loope
mov
in
fcomp
cmp
and
xchg
(bad)
retf
cmp
cdq
ss
pop
retf
mov
out
mov
mov
cmp
mov
xchg
cmc
pusha
pop
aas
jo
xchg
(bad)
and
cmps
sbb
and
retf
sbb
call
and
push
retf
cmc
xlat
retf
movs
inc
daa
(bad)
js
fdiv
int
mov
inc
paddq
aaa
test
adc
jge
or
out
mov
mov
inc
xor
(bad)
mov
or
adc
cs
shl
adc
retf
ins
jae
pop
pop
cwde
jl
cmp
sbb
rcl
or
pusha
push
push
pop
or
and
lods
out
xchg
mov
xor
push
xlat
lea
sar
repnz
repnz
jbe
pop
fsub
out
jns
scas
adc
mov
add
pop
int
mov
leave
mov
outs
xor
inc
mov
cmc
in
sub
mov
dec
jmp
jl
push
xlat
xor
mov
hlt
jne
push
or
pop
pop
scas
cmc
imul
inc
cmp
cmp
push
in
dec
stos
xor
in
xor
(bad)
hlt
inc
in
in
mov
mov
and
push
lods
hlt
xchg
inc
in
xchg
mov
out
js
and
clc
icebp
fdivr
cld
dec
lds
jecxz
add
dec
fcomip
mov
pop
rcl
pusha
push
(bad)
in
in
sbb
test
fild
dec
or
inc
adc
pusha
or
dec
jg
ror
aam
mov
aam
sub
sahf
fsub
ds
mov
push
push
ss
mov
inc
fistp
xor
push
or
je
mov
mov
pushf
imul
(bad)
mov
mov
into
inc
mov
mov
pop
push
dec
jl
add
jnp
retf
(bad)
pop
pop
sub
inc
in
sub
xchg
(bad)
stos
bound
cmps
and
mov
mov
dec
les
inc
icebp
dec
xchg
mov
retf
ret
or
lock
repz
jno
xor
or
mov
aam
out
test
out
pop
xchg
and
cmp
mov
and
inc
sub
push
push
pushw
retw
or
repnz
cmp
out
sbb
xchg
add
call
mov
push
int3
neg
cs
and
dec
dec
pusha
push
xor
dec
jnp
sbb
add
pop
adc
xchg
in
inc
xor
aas
sbb
pop
sub
jecxz
mov
out
ss
mov
bound
repz
cli
sbb
mov
fstp
inc
(bad)
jg
push
stc
das
call
retf
mov
cmp
in
adc
push
test
cwde
dec
repnz
(bad)
sub
mov
loop
js
sbb
fild
int
es
imul
sbb
mov
pop
fcomp
inc
push
push
fistp
dec
xor
and
fwait
push
stos
sub
es
xor
mov
inc
or
cmps
mov
mov
fwait
sub
dec
xchg
jmp
mov
cmp
aaa
and
ror
and
and
cli
cmp
aas
out
fdiv
cwde
cdq
stc
inc
jmp
mov
cld
out
lea
out
add
cwde
and
jbe
jle
mov
rcr
shrd
sbb
dec
jns
cld
shr
jb
pop
sbb
jbe
inc
(bad)
daa
mov
mov
mov
adc
aad
adc
pop
sti
inc
stos
or
jge
adc
fst
shr
and
mov
jne
or
div
test
js
push
adc
mov
fsubr
popf
jp
mov
out
fld
push
jecxz
gs
and
mov
in
scas
or
cli
ret
push
sbb
out
push
lahf
leave
mov
rol
daa
imul
in
test
mov
popa
push
dec
call
rcl
sub
pushf
inc
cmp
sub
jp
pop
sahf
jmp
int
sub
in
xchg
aaa
dec
push
xchg
addr16
aam
inc
addr16
adc
test
push
pop
jnp
dec
pop
mov
jo
repz
lea
outs
push
sub
aad
es
dec
jmp
sahf
jbe
inc
or
pop
jmp
cmp
ja
je
xchg
push
xchg
lahf
push
daa
push
and
xor
(bad)
ficom
cmp
sub
nop
outs
aad
jge
mov
cmp
dec
stos
ror
loop
in
call
pop
cdq
inc
xchg
adc
or
daa
fwait
jne
pop
jno
fdivr
and
test
repz
pop
mov
inc
imul
xor
(bad)
ret
sub
out
es
and
les
daa
or
cmp
dec
les
mov
jo
in
loop
ins
mov
sub
je
cli
and
mov
xlat
loopne
or
(bad)
pop
test
push
or
in
mov
arpl
push
pop
std
repnz
cmp
outs
call
out
dec
icebp
movs
sub
add
add
adc
mov
sbb
pop
pusha
neg
fiadd
adc
mov
sbb
dec
test
dec
icebp
mov
pop
sbb
adc
mov
popf
ss
jmp
xchg
inc
mov
inc
push
ins
and
pop
xchg
mov
out
pop
jae
clc
mov
pop
xchg
mul
mov
jmp
lods
cwde
hlt
aam
inc
xchg
push
sbb
push
jp
mov
push
retf
or
push
xchg
retf
push
stc
stos
js
movs
xor
jnp
jg
int
dec
jmp
xor
fidiv
mov
inc
call
sti
xchg
sar
mov
out
xchg
and
les
lds
adc
or
jle
push
push
mov
inc
daa
sbb
iret
out
pop
xor
cmp
push
popa
movs
rcr
mov
ss
movs
xor
into
inc
push
add
pop
fidiv
call
jl
jl
std
inc
imul
jmp
pop
and
cmp
and
addr16
jns
pop
or
xchg
loope
cmc
nop
sahf
repz
cmp
mov
mov
fcomp
cld
out
and
sbb
pop
test
mov
adc
cwde
mov
iret
dec
ja
fisub
jo
xor
add
mov
shl
loopne
not
jg
pop
jo
xchg
pusha
dec
jg
jge
loopne
rcl
jo
repnz
mov
dec
lock
push
adc
lahf
xchg
inc
dec
in
arpl
cmp
fild
push
minps
sbb
pop
mov
xchg
pop
jle
clc
pop
aam
out
xchg
mov
repnz
or
pop
enter
push
hlt
inc
sub
mov
outs
mov
xor
dec
jge
cmp
jg
inc
xchg
test
xchg
(bad)
jno
inc
int
sub
pop
jmp
mov
cmp
or
fstcw
mov
mov
leave
sub
jge
scas
jno
(bad)
mov
inc
and
movs
lods
retf
sub
je
cmp
(bad)
adc
and
cwde
stos
xchg
test
nop
xchg
int
xchg
mov
xchg
fnstcw
clc
xchg
jle
repz
mov
jg
shl
enter
(bad)
hlt
pop
inc
jae
sub
stos
ret
scas
cmps
cwde
jae
and
ds
dec
into
repnz
es
dec
fiadd
cli
lea
add
fst
shl
(bad)
div
inc
arpl
fbld
movs
xchg
xchg
(bad)
sbb
sti
adc
xchg
dec
ss
daa
inc
adc
lock
rcr
fist
jmp
call
sbb
sbb
stc
mov
xchg
and
mov
sbb
mov
mov
mov
aam
add
call
repnz
fidiv
and
cmps
shl
mov
jb
xchg
jge
cmps
or
mov
outs
cdq
xor
mov
xchg
sbb
and
retf
pop
push
imul
mov
lods
jl
and
jmp
add
xchg
scas
mov
pop
mov
xor
into
outs
xchg
(bad)
pop
dec
jg
cmp
fsub
pop
pop
call
push
es
imul
push
cmp
not
pop
aad
xor
adc
add
aam
pop
out
cs
add
cmp
movs
stos
cwde
pop
sub
push
adc
popa
enter
ins
cmp
push
dec
popf
sub
jecxz
sbb
xor
add
sbb
pop
add
adc
pop
xchg
xlat
in
and
xchg
sahf
xchg
and
mov
inc
adc
cmp
adc
add
call
sbb
addr16
jbe
or
jg
shl
pop
retf
sbb
adc
push
cdq
pop
sub
mov
cmp
mov
jns
int3
inc
inc
or
out
mov
test
mov
mov
pop
xor
enter
rol
jle
and
loop
cdq
xchg
cdq
scas
out
jns
movs
sbb
pop
xchg
adc
inc
fs
mov
(bad)
and
pop
(bad)
jmp
imul
sar
int
shl
add
mov
sbb
cwde
add
jecxz
repz
idiv
pop
mov
fstp
lds
mov
loopne
fisttp
pop
in
mov
test
das
icebp
sub
cmp
or
test
or
mov
enter
sti
xor
lahf
xor
jmp
cli
and
mov
gs
dec
jns
in
cmps
retf
cmp
mov
rol
fdiv
(bad)
pop
inc
fsubr
mov
add
jno
or
cwde
fcomp
(bad)
sbb
push
sbb
pop
stos
mov
sub
xchg
push
xchg
inc
sbb
mov
sbb
mov
mov
xchg
push
cld
xchg
jge
sbb
sub
mov
mov
(bad)
sbb
icebp
xor
in
dec
sbb
lods
xor
jmp
jmp
addr16
mov
or
or
adc
ret
xlat
dec
mov
inc
sub
dec
mov
dec
jg
xor
fsub
ins
xchg
test
nop
dec
mov
dec
in
adc
jmp
jb
int
dec
adc
js
pop
xchg
mov
push
push
xor
and
mov
imul
xchg
mov
or
les
aad
push
faddp
or
push
repz
aaa
add
(bad)
mov
shr
adc
loope
retf
jno
or
xor
or
adc
pop
push
sahf
xor
(bad)
push
push
fwait
and
xchg
cmp
stc
jge
or
mov
mov
fyl2xp1
ret
test
jp
push
sbb
je
xor
mov
push
pop
push
ret
loopne
iret
and
pop
xor
xchg
jecxz
jbe
xor
mov
rcl
or
jns
pop
lea
pushf
jnp
(bad)
cli
imul
call
out
(bad)
aad
xchg
cmps
xor
into
lock
aaa
repz
fiadd
mov
mov
in
sub
push
lods
loope
mov
repz
or
in
(bad)
movs
jb
retf
xor
stc
jae
push
loope
push
sub
test
jmp
setl
imul
jmp
inc
ins
cmp
fstp
stos
cmp
iret
sbb
sti
cmps
cwde
jle
retf
fstp
fadd
dec
sub
rcl
sbb
xchg
sbb
sbb
es
inc
mov
ret
cmp
adc
fsubr
sub
cli
cmp
imul
push
jl
fs
lea
outs
div
sub
mov
ds
sar
sti
cmc
sbb
jecxz
aam
and
lahf
aad
pop
cmp
xor
call
test
imul
retf
adc
pushf
in
loopne
jg
cmp
adc
mov
je
(bad)
pop
cdq
sub
cmp
pop
test
sar
cmps
sbb
mov
mov
sub
mov
sub
cmc
fisubr
(bad)
aad
gs
gs
sub
adc
cmc
retf
fisttp
sub
lds
xchg
jae
ret
push
movs
js
inc
shl
rol
jb
dec
and
jae
fistp
imul
xlat
xor
sbb
push
inc
cs
(bad)
pop
out
and
xchg
hlt
adc
ucomiss
pop
mov
rcl
nop
je
mov
pusha
nop
test
jbe
mov
sub
out
enter
xchg
add
fistp
jne
jns
sbb
pop
jns
gs
push
ins
repnz
xchg
popa
mov
push
loope
imul
js
jle
mov
inc
adc
mov
mov
imul
xchg
mov
ds
fisub
push
imul
ret
xchg
xor
mov
push
gs
lods
into
(bad)
pop
fadd
pop
imul
and
sbb
sub
sti
test
cmp
sbb
iret
in
outs
leave
mov
into
shr
sbb
mov
lahf
call
fwait
and
push
loope
dec
sub
shr
js
add
arpl
or
push
cmp
sbb
icebp
sti
jbe
loopne
cmp
inc
jbe
inc
dec
stos
aad
loop
mov
scas
bound
mov
push
mov
hlt
pop
int3
add
out
adc
cmp
bound
or
push
add
xor
mov
and
dec
out
and
into
add
sbb
dec
cwde
shl
sti
mov
rol
hlt
ret
push
shl
dec
push
das
push
push
sbb
out
repnz
jecxz
iret
xlat
fwait
ds
ds
jae
sub
cmp
xchg
xor
xchg
enter
cli
adc
mov
mov
iret
mov
mov
popa
dec
push
mov
repz
clc
out
std
bound
in
ror
mov
cmps
xchg
sub
sub
test
test
mov
add
ret
outs
inc
dec
mov
mov
inc
into
sbb
xor
dec
xor
xor
sub
adc
mov
pop
dec
pushf
popa
data16
inc
call
adc
fs
dec
mov
xchg
movs
push
xchg
in
cld
stos
repz
adc
pop
loop
sbb
fisubr
rcl
mov
(bad)
cmps
cmp
mov
stos
je
aad
jne
jo
ss
adc
mov
sub
pop
pop
xchg
jmp
fisubr
mov
mov
xor
sbb
dec
sbb
pop
into
in
test
mov
mov
fistp
lahf
outs
fucomp
imul
adc
ficom
or
(bad)
and
xlat
xor
sub
cli
or
in
lods
test
jo
mov
pop
in
out
ins
mov
and
in
repz
imul
into
sti
sbb
sub
int3
jb
movs
pop
xor
inc
jp
mov
cmp
daa
mov
hlt
dec
pop
scas
jno
xor
nop
fisttp
jmp
inc
ds
ret
cli
mov
sbb
xchg
fwait
mov
int3
int3
sar
sub
xlat
cld
mov
sub
rcr
int3
mov
mov
pop
jmp
stc
in
shl
dec
enter
fmul
imul
rol
cs
cmp
jmp
sar
sbb
fnstenv
add
add
sbb
loope
push
sub
loop
push
je
dec
int3
adc
or
repz
test
adc
add
inc
push
cld
mov
add
mov
jo
lahf
xchg
jns
fxch
gs
pop
ret
(bad)
pop
jle
jo
int
addr16
pop
lods
mov
retf
sahf
(bad)
mov
movs
mov
retf
pop
cwde
lock
or
test
pop
(bad)
scas
sbb
mov
add
inc
imul
icebp
jmp
xchg
xor
xchg
mov
outs
and
aad
jmp
adc
fldl2t
push
sbb
call
daa
adc
shl
loopne
mov
ret
mov
pop
dec
and
mov
cld
dec
movups
adc
sub
outs
push
adc
call
fdivr
fidivr
les
and
jmp
dec
aad
push
(bad)
repz
inc
loop
xchg
pop
xor
in
and
and
call
dec
jmp
repz
push
mov
shl
mov
push
dec
xor
add
mov
pop
lea
mov
(bad)
fs
xchg
mov
(bad)
and
cli
push
xor
in
add
fdiv
ror
and
ficom
adc
cmp
(bad)
adc
mov
scas
mov
cmp
inc
sub
xchg
or
xchg
mov
bound
add
xor
push
mov
scas
jge
lods
ret
adc
pop
pop
add
jnp
push
in
stos
mov
inc
push
scas
mov
rcr
mov
xor
mov
xchg
lods
inc
jns
xchg
push
scas
mov
inc
xlat
sbb
das
es
inc
fmul
out
xlat
cwde
xor
das
xchg
sbb
push
movs
xor
daa
in
scas
mov
adc
sbb
js
cmp
nop
js
retf
cwde
movs
jg
cmp
pop
add
shl
dec
xchg
ins
dec
fcomp
jmp
jmp
inc
jecxz
push
stc
sub
sbb
fnstenv
popf
sahf
jbe
(bad)
xor
ret
std
imul
sub
push
push
rcr
cmp
retf
in
ror
lods
ret
outs
dec
pop
pop
js
dec
dec
cmc
push
test
imul
imul
rcr
lods
mov
les
adc
sbb
pop
jbe
jl
jne
push
fdivr
push
cld
xchg
add
push
jbe
xchg
push
and
ins
retf
mov
test
int
pop
xlat
push
addr16
call
cwde
ror
cmc
pop
lahf
sub
and
mov
push
stos
cmp
fsubrp
aad
pop
stos
cmp
push
cwde
add
mov
inc
sub
hlt
mov
or
cld
mov
pop
in
addr16
jne
inc
out
inc
add
scas
je
js
inc
(bad)
pop
xlat
pop
es
push
pop
retf
xor
push
aaa
mov
mov
test
mul
mov
mov
(bad)
enter
and
push
dec
cmp
jnp
push
push
cmc
ss
or
mov
call
xor
xchg
out
or
aam
sbb
pop
jb
out
pop
retf
sbb
ja
sub
add
or
in
xor
mov
cmp
(bad)
push
sub
mov
lods
cmp
add
out
mov
jne
daa
fstp
test
stos
into
es
fst
xchg
push
popf
je
lds
xchg
cmp
in
ins
dec
pop
jp
and
mov
aad
mov
push
mov
lods
dec
fbld
jl
aad
mov
xlat
xchg
fdivr
or
sahf
xor
and
sar
rcr
popf
pop
mov
mov
cmc
xchg
ins
jp
fbld
arpl
sub
cld
xor
xchg
jmp
rcl
lds
cmp
xchg
leave
out
add
cdq
add
jo
push
call
adc
ror
mov
daa
icebp
std
xor
repnz
jb
shl
std
push
dec
aaa
outs
sub
div
add
fcom
inc
in
mov
hlt
sub
pop
jae
aam
xchg
mov
pop
loopne
fcmovbe
fbstp
test
jbe
sbb
mov
ins
or
mov
call
aad
lahf
adc
mov
out
loope
and
mov
scas
pop
jge
les
sbb
add
call
(bad)
in
jbe
aas
or
inc
add
cdq
add
lea
fld
add
out
movs
es
sbb
xchg
sti
dec
dec
movs
test
sbb
mov
out
out
loope
xchg
call
lea
test
in
lods
pusha
jb
jge
xchg
pop
cmp
out
test
and
adc
lods
das
xor
mov
je
xchg
sbb
es
in
gs
stos
pushf
test
inc
mov
inc
push
fistp
scas
dec
outs
ds
in
xchg
out
add
pop
cmp
aad
xchg
adc
sub
mov
push
sub
stos
adc
call
(bad)
lar
daa
(bad)
xchg
adc
call
sub
push
add
add
fidivr
in
lahf
adc
in
repz
jmp
stc
(bad)
loope
inc
shl
adc
ret
ins
repnz
cmp
bound
retf
jns
sub
adc
add
jg
pop
xchg
pop
pop
push
out
shl
cmc
test
mov
or
jns
hlt
pop
inc
or
outs
add
or
sub
test
scas
jbe
adc
cmp
inc
mov
scas
inc
add
add
xor
push
int
jp
mov
in
dec
add
stc
xor
sub
jne
(bad)
js
jb
inc
xchg
or
xor
mov
mov
cmp
push
ins
test
daa
ja
fdivr
push
nop
sub
cmp
sub
ins
loopne
outs
daa
mov
and
mov
pop
retf
add
in
xor
in
inc
repnz
add
retf
adc
sahf
sub
mov
mov
push
push
daa
ja
aad
shr
loop
cmp
dec
inc
test
out
xor
jmp
sbb
jns
xor
daa
sub
cmp
xor
comiss
sbb
stos
dec
dec
mov
push
aaa
out
push
in
and
scas
inc
pushf
daa
and
int
push
push
sub
je
or
sbb
dec
cmp
das
sbb
sbb
(bad)
scas
add
scas
push
mov
and
lods
mov
aas
cmp
and
rcl
outs
addr16
fld
pop
dec
cmps
aam
xor
(bad)
mov
push
andnps
pop
xchg
rcl
sbb
retf
test
sub
pop
inc
mov
cmp
repz
sahf
pop
mov
dec
loope
pop
mov
ret
cmp
scas
ficom
pop
jbe
lods
dec
ds
(bad)
mov
ds
cmpxchg
frstor
outs
or
sti
xor
ret
inc
sbb
mov
jecxz
mov
dec
xchg
adc
cmp
hlt
aaa
popa
loope
push
rol
(bad)
and
mov
xchg
aad
push
test
jae
mov
ins
cwde
jno
pusha
sahf
aam
sbb
ret
ins
jle
inc
ror
dec
cmp
dec
push
xchg
lock
mov
repnz
lahf
jb
clc
movs
xor
pop
adc
ror
in
adc
hlt
ret
js
das
push
pop
test
ss
out
ret
repz
jmp
pusha
push
adc
mov
rcl
mov
outs
icebp
cmps
xchg
xchg
cs
push
fld
stc
push
imul
rcr
add
jl
out
fisubr
xor
xchg
xchg
outs
movs
aam
aaa
inc
xchg
and
add
jnp
(bad)
push
xchg
in
lea
push
loope
and
sbb
xchg
sbb
xchg
mov
push
test
xlat
inc
pop
in
call
mov
xchg
cmps
arpl
xchg
jl
or
fstp
jecxz
pop
ret
inc
mov
mov
mov
mov
ins
test
cmp
and
mov
cmp
dec
loop
mov
adc
dec
mov
out
ss
push
fwait
xor
dec
lds
mov
imul
in
add
in
rcr
test
dec
leave
retf
cmp
xchg
and
sbb
sbb
por
jmp
repz
cli
xor
mov
inc
sub
mov
mov
cld
nop
sbb
dec
or
dec
xchg
pop
and
inc
push
xchg
retf
xchg
push
cwde
ins
retf
and
jle
test
js
call
das
iret
mul
adc
xlat
lock
mov
(bad)
mov
mov
mov
aaa
movs
inc
jo
add
pop
xor
xchg
xchg
lods
mov
cmps
fadd
inc
mov
xor
repz
loope
pop
push
sbb
cld
jmp
into
psubw
cmps
gs
das
inc
jb
jg
adc
mov
scas
ins
(bad)
sub
jns
xor
or
push
ret
jae
dec
mov
int
cmp
retf
imul
mov
xlat
mov
enter
xchg
fs
dec
sub
add
pop
or
std
cli
dec
es
lods
mul
mov
in
xorps
mov
xchg
ds
jle
out
cs
mov
mov
enter
lock
mov
xor
jmp
and
mov
mov
iret
sbb
xchg
xchg
mov
int
mov
mov
jp
adc
enter
push
jl
das
add
sub
aam
ins
cmp
popa
mov
iret
sbb
in
cmp
xchg
rcl
mov
add
scas
xor
mov
dec
sbb
xchg
inc
je
shl
int3
push
fistp
sar
aaa
fldcw
jle
gs
dec
or
jp
rcl
push
pop
test
icebp
int
sub
lds
xchg
clc
ins
rcr
pop
shl
mov
inc
jnp
lds
popa
inc
mov
(bad)
imul
add
fcmove
jbe
cwde
and
mov
loop
adc
inc
jb
jo
add
inc
test
(bad)
test
and
ja
sti
cld
fdivr
pop
or
cmp
inc
dec
int
xchg
fdivr
std
xor
pop
mov
dec
shl
xor
mov
hlt
gs
cdq
mov
mov
mov
and
out
push
cmp
fs
xor
xchg
das
popf
lea
retf
fcmovb
add
scas
das
add
movs
push
movs
jp
aas
mov
jae
loopne
into
and
jbe
or
sub
test
aad
pop
add
repz
imul
jge
rol
add
(bad)
mov
popa
repz
cld
in
xor
ins
mov
mov
(bad)
jo
int
outs
mov
ins
xor
inc
or
jns
(bad)
not
adc
fld1
push
cli
xor
rcr
pop
pushf
in
or
movs
jecxz
push
pop
cdq
ror
fwait
movs
or
outs
in
cmps
sbb
cmp
push
outs
mov
inc
jo
loopne
or
mov
cdq
cmps
mov
fsubr
fwait
sbb
popa
push
xor
sbb
mov
movs
ins
ins
js
jne
pop
mov
sahf
(bad)
pop
ret
es
sti
push
(bad)
inc
icebp
mov
in
pushf
mov
xor
mov
sahf
pop
xchg
add
push
jno
icebp
addr16
scas
inc
aam
retf
dec
rcr
adc
call
test
pop
in
std
rcr
and
cmp
(bad)
add
int3
and
imul
(bad)
push
mov
std
add
add
xchg
add
fwait
icebp
or
in
xchg
adc
lock
clc
test
jo
sar
push
push
movs
sahf
xchg
dec
jno
sbb
aad
inc
je
out
add
sbb
jno
and
ins
or
cmp
call
cmp
mov
lods
outs
lock
and
out
jae
retf
dec
out
aas
(bad)
mov
imul
ret
mov
ret
mov
jecxz
fidiv
push
(bad)
call
cmps
xchg
mov
pop
push
data16
add
jecxz
push
add
ret
mov
(bad)
outs
cwd
sbb
mov
mov
and
push
loope
out
lods
int3
sub
inc
xchg
shr
cs
fs
dec
ins
jnp
test
inc
and
push
loope
dec
jnp
mov
push
xchg
xchg
jecxz
jmp
xchg
out
adc
or
popf
jecxz
mov
fs
test
dec
rcl
sub
hlt
or
out
arpl
and
mov
jl
adc
mov
loope
pop
push
test
add
xchg
enter
and
inc
jecxz
push
push
lods
sar
pop
ds
cmps
aad
add
jmp
pushf
push
fcomp
xor
inc
in
adc
retf
cld
lock
in
stos
push
mov
sbb
mov
hlt
inc
pop
test
mov
cdq
sbb
jge
dec
stos
inc
out
mov
lds
(bad)
std
mov
ror
rol
pop
sahf
pop
and
mov
ret
inc
fidivr
or
repnz
call
xchg
hlt
test
add
sbb
fbstp
lods
sbb
out
xchg
sbb
aas
rcr
out
arpl
cmps
cli
mov
in
add
fidiv
out
or
sbb
cld
or
push
addr16
mov
jecxz
pop
idiv
or
ret
repnz
repnz
js
ins
inc
fisub
es
test
xchg
and
lods
mov
push
in
or
scas
cmps
push
fs
sbb
mov
or
iret
aad
out
and
jnp
and
pop
and
popf
imul
pop
cmps
xchg
or
sbb
mov
push
pop
inc
push
add
shl
ret
popa
rol
or
sbb
sahf
adc
cld
fmul
adc
jp
jbe
movs
mov
mov
stos
dec
add
and
push
sbb
mov
or
stos
mov
mov
pop
jbe
scas
jmp
inc
push
cmps
pop
jl
bound
adc
retf
xor
and
mov
inc
add
addr16
sub
fld
xchg
ds
mov
imul
sbb
lock
movs
inc
push
push
test
mul
jge
movs
mov
jmp
lahf
(bad)
pop
mov
enter
mov
sbb
frstor
pushf
pop
dec
(bad)
in
jmp
cli
and
movs
mov
(bad)
fnstcw
mov
in
fistp
xchg
ret
cdq
mov
repnz
fcmovnu
js
out
jecxz
and
and
rcr
movs
inc
mov
stc
outs
sub
pop
dec
cld
ss
(bad)
xor
in
inc
out
(bad)
outs
sub
(bad)
sbb
or
jge
or
cdq
and
push
xor
sub
sub
sub
fisubr
cmc
repz
hlt
loop
(bad)
push
jns
in
xchg
imul
loop
add
cmp
mov
and
add
mov
popf
jno
and
jmp
cmps
scas
popa
js
sub
push
ret
ror
xchg
push
mov
jo
lock
stos
enter
sbb
sbb
cmp
jb
(bad)
xor
cmp
pusha
rcr
push
cmp
add
dec
sbb
sahf
cs
mov
fist
push
xchg
(bad)
sbb
jl
out
int3
(bad)
mov
sbb
xor
fisubr
aas
add
jae
cmps
scas
(bad)
ins
push
sahf
inc
mov
rcr
scas
test
sub
ins
fwait
dec
add
addr16
pop
dec
sbb
mov
mov
xchg
pop
push
pop
dec
scas
mov
cwde
clc
pop
nop
cmp
out
shl
repz
adc
(bad)
rcr
repnz
lods
inc
scas
push
mov
xor
add
xchg
and
ins
jb
push
out
mov
inc
xchg
inc
push
or
pop
cmps
or
xor
out
aam
into
lahf
aam
pop
hlt
adc
outs
push
or
jp
ret
daa
ds
jnp
xchg
inc
push
inc
sti
cwde
pop
xchg
out
add
in
cwde
mov
pop
pop
push
(bad)
fdiv
ds
mov
in
arpl
xchg
les
push
in
test
test
aas
sbb
push
pop
leave
aaa
cwde
mov
mov
mov
xor
shl
cmps
push
mov
cs
mov
popa
ficom
aaa
fadd
pop
push
ss
dec
imul
push
cld
mov
out
jb
mov
daa
(bad)
movs
push
jge
iret
movs
mov
sub
push
push
pusha
jne
lds
mov
push
jmp
cs
jns
inc
mov
xchg
fld
loope
sbb
add
mov
out
cdq
xlat
cld
xchg
stos
data16
push
call
xchg
dec
sbb
adc
and
repnz
or
or
ret
lock
jmp
jp
push
xor
inc
add
test
cwde
iret
repnz
shr
scas
sub
or
sar
icebp
popa
icebp
lods
xor
xor
push
punpckhwd
pop
ja
pop
out
mov
mov
push
mov
dec
fnstcw
mov
cmps
add
(bad)
mul
cli
and
hlt
and
mov
shl
aaa
(bad)
mov
test
into
mov
adc
pop
mov
sbb
sub
mov
mov
jg
ror
jmp
adc
ja
fisttp
shl
jl
daa
aad
shr
dec
or
test
test
adc
inc
imul
sbb
push
fisubr
cld
jl
mov
movs
sub
push
adc
xchg
pop
or
mov
inc
fld
inc
or
sub
ja
fadd
aaa
pop
xor
jmp
mov
push
adc
aaa
cmp
or
jp
into
add
je
cld
sahf
stos
or
mov
push
xchg
retf
test
adc
cmp
inc
mov
xchg
or
jg
test
push
retf
jmp
test
leave
dec
inc
ins
mov
not
xchg
lods
ret
xchg
sub
adc
inc
stc
push
sub
fiadd
ds
in
push
das
or
mov
cli
fs
inc
mov
(bad)
out
ficom
and
sbb
js
test
test
jecxz
rcr
(bad)
add
pop
xchg
mov
jle
xchg
(bad)
jbe
sbb
rcl
enter
cmps
sbb
inc
sbb
sti
xchg
in
xchg
xor
in
pop
outs
dec
mov
add
fucomp
rol
ja
in
clc
and
mov
daa
movs
mov
push
xlat
in
sar
out
xor
int3
cmps
nop
rol
xchg
aas
jno
shl
and
scas
addr16
mov
scas
mov
movs
pop
adc
cdq
daa
cmp
xchg
mov
das
(bad)
ss
and
push
adc
mov
(bad)
stc
mov
outs
(bad)
xchg
dec
mov
iret
fisub
xor
call
mov
lods
bswap
scas
push
fistp
inc
fst
mov
adc
push
cmp
in
loop
push
xchg
leave
inc
mov
inc
cmp
(bad)
(bad)
shl
ret
cs
pop
out
jb
cmps
lods
sub
xchg
and
or
mov
lock
or
lods
enter
nop
pop
fidiv
fistp
cld
popf
sbb
jge
addr16
rcl
adc
(bad)
cmps
xchg
or
and
push
in
jge
or
in
sub
lock
inc
xchg
jno
stos
jo
test
cld
cmps
mov
fdiv
dec
dec
dec
ins
jnp
iret
mov
jae
push
xchg
jbe
push
push
xor
leave
xchg
cmc
cwde
test
push
push
jle
sub
sub
outs
mov
adc
adc
mov
mov
addr16
xor
fnstenv
sub
or
jecxz
call
xchg
(bad)
lea
ins
scas
jo
add
xchg
pop
fcomp
out
jmp
fistp
push
xchg
arpl
clc
cmp
jg
enter
inc
push
xchg
jns
mov
mov
pop
cmp
or
inc
cmp
jecxz
mov
mov
repnz
pop
aam
inc
xor
cwde
out
retf
dec
adc
leave
pop
lahf
mov
mov
sub
cmps
scas
call
das
cmp
pushf
adc
mov
stos
xor
pop
inc
dec
xor
jge
add
adc
cmp
out
cmp
out
jbe
inc
movs
jmp
inc
xchg
or
pop
mov
int
sbb
dec
mov
inc
add
cmp
shr
lods
push
gs
daa
adc
jno
popa
call
les
test
arpl
aaa
clc
rep
mov
cmps
pop
movs
popa
pop
adc
shr
jae
jno
outs
je
jmp
in
into
push
std
outs
fimul
in
mov
jg
call
cmp
xchg
retf
mov
dec
xor
fcom
jno
fiadd
inc
jp
pop
test
das
xor
or
and
push
js
mov
jecxz
aas
in
and
xchg
push
sub
stos
pop
cdq
outs
nop
cmp
inc
sub
inc
pop
dec
shl
add
sub
push
fmul
xchg
and
neg
add
sbb
add
push
push
sbb
lds
ins
dec
jno
push
sub
outs
mov
and
mov
loope
xchg
sub
pop
adc
cmps
jo
xor
lock
jb
mov
ret
dec
cmps
mov
cld
out
iret
outs
jle
adc
mov
(bad)
clc
pop
es
jecxz
mov
jnp
push
push
fsub
or
jle
jle
sbb
push
cmp
xchg
pop
jg
repnz
jmp
loope
inc
cwde
push
push
movs
das
mov
int
mov
push
fs
mov
icebp
inc
lock
enter
and
out
retf
jp
cmp
fcmovbe
fnstcw
fwait
sub
jle
cwde
leave
jne
cmps
movs
mov
xor
sar
scas
cmc
out
(bad)
(bad)
fimul
(bad)
sub
test
fcomp
jecxz
add
test
imul
jmp
aaa
sbb
adc
jbe
in
loop
adc
ds
adc
pop
out
enter
ret
(bad)
push
test
out
fcmovne
xchg
xor
xor
das
jnp
pop
push
push
loopne
pop
inc
mov
mov
fld
and
push
pop
xchg
mov
pusha
retf
popf
xchg
mov
mov
push
dec
xlat
jl
pushf
xor
cmp
shl
adc
xor
aad
outs
fsubr
outs
(bad)
cwde
test
ds
mov
jecxz
cmp
jle
sub
iret
lds
gs
aaa
test
push
rcr
(bad)
dec
xor
test
mov
jmp
repnz
xchg
ds
jo
cwde
sbb
shl
add
sbb
dec
aam
mov
lea
add
mov
int
inc
sahf
arpl
fiadd
xor
out
mov
out
pop
icebp
cli
aad
icebp
popa
lahf
cli
dec
leave
dec
mov
xlat
push
or
push
enter
mov
cmc
aam
push
lock
mov
and
int3
ret
repnz
push
ret
retf
ror
jecxz
xor
mov
xor
push
pop
xchg
cmp
inc
loope
(bad)
pop
fwait
xchg
xlat
add
in
xchg
mov
mov
jb
push
in
mov
lea
test
cmps
xor
ins
cmp
mov
enter
add
push
(bad)
icebp
dec
jle
pop
das
and
cmps
lds
gs
jno
js
sbb
js
cmp
adc
pop
call
jbe
(bad)
cmp
ins
retf
jl
push
iret
jmp
dec
out
outs
cmc
js
(bad)
(bad)
inc
(bad)
ret
cld
repz
shl
cmpxchg
push
daa
mov
test
out
xchg
add
movs
lods
test
dec
fs
pusha
sub
je
and
push
ret
mov
shl
out
dec
lods
pushf
stos
jnp
pop
mov
push
inc
popa
fimul
cli
callw
push
adc
cmc
int3
test
jl
inc
mov
loope
aam
or
xor
push
cmps
bnd
sub
loop
fstp
test
lods
add
push
inc
in
inc
aam
pop
hlt
cld
jns
dec
and
cld
scas
and
mov
das
pop
or
push
mov
pop
icebp
int
iret
call
in
fdivr
dec
outs
fistp
jmp
outs
arpl
in
and
xchg
cmp
push
popa
cmc
lahf
(bad)
jo
lods
nop
movs
mov
les
rcl
push
arpl
mov
mov
rcr
sbb
out
jbe
adc
stos
adc
lock
sub
outs
xor
sbb
and
dec
sub
cld
call
cwde
shl
add
scas
stos
pop
out
mov
xchg
push
push
push
(bad)
xor
div
sbb
pop
sub
enter
xchg
dec
mov
push
mov
pop
ja
pop
and
fnstcw
pop
add
loop
mov
test
ins
mov
loop
fwait
stos
cli
mov
inc
inc
dec
mov
xchg
push
ins
adc
sti
into
jno
jg
retf
xor
mov
movs
js
dec
stos
sbb
out
lea
leave
sbb
xchg
dec
ret
jns
push
clc
mov
xchg
jle
cmp
or
push
ins
cmp
mov
mov
sti
sub
jbe
out
sub
ins
call
or
inc
xor
sbb
and
loopne
div
idiv
sub
cwde
scas
lods
loop
rcl
sbb
cld
adc
inc
inc
mov
pop
fsubp
imul
sar
add
inc
call
mov
mov
push
push
mov
cmp
ins
jnp
movs
dec
fist
or
aas
in
sbb
daa
jl
ficom
pop
dec
adc
mov
stc
mov
cmps
out
mov
cli
(bad)
sbb
mov
cmc
mov
cmp
gs
xlat
out
or
pop
jnp
cmp
push
add
push
pop
test
clc
fisttp
or
imul
xor
mov
stc
adc
dec
(bad)
int
xor
cmp
mov
jl
inc
iret
stos
ds
mov
push
pop
sbb
push
and
fcmovnu
sbb
div
out
loop
push
mov
push
fdiv
xchg
push
jnp
xlat
ret
aam
fwait
lahf
dec
pop
push
ja
inc
or
jmp
sub
mov
aas
cmp
ret
and
enter
out
cli
loop
mov
cmps
xlat
dec
fadd
in
mov
les
ins
mov
ror
adc
and
pop
push
imul
mov
inc
inc
sub
push
sub
mov
push
inc
mov
(bad)
int3
push
ins
iret
pop
fadd
clc
add
inc
imul
(bad)
or
dec
mov
dec
(bad)
(bad)
imul
xchg
jnp
into
std
or
sar
sub
sub
mov
int3
mov
xlat
int3
repz
(bad)
ins
push
rol
and
out
mov
cmps
push
and
hlt
add
or
dec
xchg
aam
stc
jge
loopne
push
(bad)
fld
push
push
loopne
dec
pop
iret
dec
pop
add
xchg
pusha
clc
and
xchg
pop
(bad)
adc
test
adc
and
dec
outs
pmuludq
push
adc
cmps
add
inc
pop
jb
sub
ficomp
push
jmp
adc
fincstp
pop
cmp
arpl
push
push
add
shr
xor
ret
mov
cli
xor
xchg
jmp
es
add
les
jo
adc
jns
and
cmc
test
push
xchg
jmp
fnstcw
xor
fcmovnu
iret
scas
jp
dec
pop
inc
push
outs
loopne
pop
jp
pop
sub
adc
pop
adc
je
jp
cwde
pop
scas
fidivr
xchg
ficom
(bad)
pushf
mov
and
aaa
inc
test
sub
push
sub
or
adc
mov
dec
pop
(bad)
xchg
sbb
gs
addps
mov
mov
js
jnp
sub
lods
dec
(bad)
sar
inc
dec
dec
stc
xchg
es
or
test
imul
push
xor
push
or
mov
cmp
xchg
add
lods
out
ds
repz
mov
inc
sti
aaa
pusha
mov
sbb
lods
shl
jns
add
add
mov
mov
test
cli
lds
lds
jne
shl
out
call
test
retf
and
stc
add
mov
fs
test
rcl
pop
pop
jle
sub
mov
mov
dec
test
loope
jl
daa
cmps
hlt
sbb
adc
fisubr
dec
ror
sbb
and
in
and
cmp
iret
out
cmp
adc
loopne
mov
mov
imul
hlt
rcr
in
and
shl
push
mov
and
into
std
cli
sbb
adc
imul
fidivr
dec
push
test
inc
mov
dec
test
fwait
xor
mov
stos
and
ror
aam
push
lahf
sahf
lock
or
sbb
jmp
push
mov
mov
sub
jl
pop
lock
cs
dec
pop
lds
rcr
mov
out
loopne
scas
imul
pop
sub
aas
jl
gs
fmul
ds
mov
mov
outs
(bad)
ror
movs
mov
or
dec
mov
stos
cwde
mov
dec
sti
jo
rcl
lds
and
jae
sub
mov
pop
cs
cld
pop
arpl
fistp
sbb
retf
jle
cld
pushf
and
retf
enter
sub
(bad)
inc
dec
mov
sti
repz
pop
mov
jmp
fstp
xor
and
cmp
cmp
inc
cmp
cmp
(bad)
jne
dec
(bad)
pop
and
arpl
mov
xlat
mov
popa
mov
xchg
add
mov
ror
push
pop
push
daa
fwait
jbe
(bad)
and
or
pop
leave
push
inc
loope
jg
or
out
pop
pop
or
pop
cmp
xor
pop
fnsave
inc
xchg
stos
xchg
mov
jnp
mov
rcr
cwde
mov
push
jae
or
aad
or
and
or
dec
push
test
ins
pop
push
jg
adc
inc
dec
pop
int
xchg
mov
cld
adc
add
(bad)
in
dec
outs
aam
dec
enter
scas
shr
jmp
mov
sub
fisubr
push
push
(bad)
adc
adc
jp
jae
lods
test
pop
adc
mov
nop
lock
pusha
std
sub
sbb
scas
mov
mov
fwait
xor
pop
(bad)
cdq
retf
sbb
cmc
or
das
imul
mov
sbb
mov
fsub
sbb
enter
out
mov
adc
xchg
bound
cmps
out
loope
or
shl
fwait
bound
std
jmp
and
dec
sub
xor
cmp
inc
pop
dec
stos
dec
or
bound
xchg
test
outs
add
mov
xlat
out
ja
or
sbb
cmp
or
push
rcl
or
lea
fadd
cmp
les
mov
sbb
iret
mov
mov
and
repnz
fisub
mov
sub
pop
ficomp
enter
out
xchg
mov
xchg
jnp
push
test
jmp
xor
push
mov
pop
clc
leave
or
push
sub
stos
inc
push
arpl
fwait
sar
xchg
push
in
push
or
or
outs
out
aam
mov
xchg
push
sbb
adc
je
sub
lods
ret
cs
jg
sub
sbb
mov
stos
loopne
xlat
sbb
popf
sbb
push
outs
adc
dec
or
cmp
cmps
js
mov
pop
pop
ins
pusha
imul
add
int
pushf
inc
sbb
ins
add
in
fcomp
out
in
xchg
pop
pushf
dec
pop
pop
sub
jae
ret
rcl
cdq
inc
cdq
adc
call
or
sbb
out
dec
(bad)
ins
sub
dec
mov
push
xor
mov
cli
loopne
ficomp
xchg
sahf
popa
std
loop
sbb
std
sub
dec
pop
cmp
std
pusha
push
mov
nop
dec
out
jb
inc
adc
dec
adc
mov
lods
xchg
push
mov
data16
dec
mov
arpl
loop
jg
cmp
push
ror
hlt
mov
sub
aaa
mov
sti
add
mov
arpl
icebp
es
add
mov
leave
imul
push
fistp
outs
inc
add
loope
push
ret
xor
adc
es
movs
push
mov
cld
cdq
sti
pop
cwde
cwde
popf
mov
adc
xor
inc
jno
pop
out
fucomp
mov
mov
dec
cmps
scas
and
aaa
aam
xchg
popf
mov
(bad)
sbb
xchg
mul
ficom
cdq
adc
add
enter
das
pop
sbb
cmp
cli
and
mov
rol
xor
sbb
sbb
inc
sti
add
es
call
push
(bad)
push
in
cmp
cmp
in
jg
das
ror
mov
in
cmps
pop
sub
jmp
sub
pop
call
xchg
push
jmp
aas
push
jmp
sub
sub
nop
or
aad
sti
ss
or
inc
lock
call
rol
in
clc
push
and
add
movs
sti
sbb
dec
in
jp
shl
mov
test
push
or
or
or
call
cmps
cmp
mov
cwde
ins
xchg
pushf
leave
bound
xor
pop
fst
xchg
adc
sbb
rcr
aas
jno
push
adc
jl
(bad)
mov
fist
imul
out
fcom
aam
adc
jle
adc
push
xor
dec
scas
xor
out
add
or
lock
mov
jmp
cdq
in
or
xor
or
lds
cld
fild
sub
pushf
frstor
mov
pusha
int3
ds
inc
jmp
sub
jle
mov
jbe
mov
hlt
ds
push
pop
out
sub
lods
dec
test
sahf
(bad)
icebp
daa
push
outs
lea
jmp
loope
pushf
xchg
ja
fnstcw
pop
inc
pop
test
adc
and
push
cdq
fbld
jno
push
push
lods
fldenv
xor
jae
fisub
lea
shl
outs
arpl
dec
test
xor
lahf
push
cmp
adc
dec
popf
cmp
stc
rol
mov
jecxz
sub
mov
fcom
sub
lds
xor
out
mov
xor
mov
ret
call
add
jae
(bad)
xor
nop
js
rol
jp
push
pop
xchg
aam
neg
inc
sub
push
jo
clc
xor
scas
in
sub
dec
mov
adc
mov
xchg
xadd
push
xchg
fwait
adc
icebp
add
pusha
call
mov
dec
fcmovnb
mov
jmp
pop
mov
add
push
cmp
pop
pop
pop
dec
mov
mov
cmps
das
les
pop
pop
pop
ds
mov
out
sbb
sti
out
pusha
sar
out
xor
es
xchg
retf
ds
xchg
and
pop
mov
daa
pop
js
ret
(bad)
rol
xchg
daa
leave
push
or
and
xor
ins
call
cmps
aaa
out
scas
mov
mov
mov
repnz
cs
scas
test
jl
sbb
or
les
push
jecxz
push
nop
rol
and
daa
jnp
push
jae
cmp
leave
pop
cmp
test
loope
loop
out
dec
sub
das
push
xor
out
rcl
sub
push
leave
shr
inc
mov
or
or
sbb
inc
xor
pusha
shl
mov
cmps
xchg
subps
std
mov
enter
(bad)
mov
in
retf
jb
ret
(bad)
aam
ds
xchg
and
sbb
int3
mov
push
mov
xor
rcl
add
and
sti
das
shl
inc
add
lock
jl
fld
test
and
pop
sbb
add
clc
(bad)
and
mov
test
das
nop
fmul
pop
int
dec
les
fimul
jp
sbb
inc
pop
retf
ins
aas
or
cmp
mov
lahf
ror
aad
inc
cmp
call
push
call
aad
repnz
and
inc
sahf
in
add
sub
push
sbb
mov
xor
(bad)
push
xor
push
mov
loop
lock
in
mov
lea
addr16
push
xchg
out
xor
sbb
push
mov
jl
popa
mov
mov
cmp
push
stos
pop
mov
pop
jle
pop
ins
mov
dec
inc
in
lock
pop
pop
push
push
dec
mov
pop
mov
sub
in
(bad)
data16
(bad)
retf
in
sbb
jge
retf
sahf
cmc
int
push
fbld
std
xchg
mov
repnz
push
adc
xchg
and
mov
sbb
aam
lock
rcl
js
jne
ins
pop
inc
imul
nop
pop
js
popf
xchg
pop
stc
or
mov
and
dec
out
aas
xchg
(bad)
jns
fcomp
push
aas
clc
retf
and
sub
sbb
cmps
outs
xchg
jnp
cdq
addr16
(bad)
out
int3
(bad)
(bad)
loop
add
cmp
(bad)
cmc
xor
push
test
lods
cld
jle
inc
lahf
popa
cwde
stos
out
mov
and
shl
push
adc
ja
push
xor
push
sub
mov
fwait
inc
sbb
ja
movs
cmp
sbb
sbb
add
(bad)
cmc
(bad)
mov
out
cmp
jmp
gs
out
inc
(bad)
loope
push
aad
test
sbb
jnp
test
cmp
ret
stos
or
and
jno
sub
cli
stc
pop
pop
fwait
sbb
in
retf
retf
mov
dec
enter
mov
mov
sub
dec
xchg
xlat
mov
pop
push
adc
scas
test
mov
xchg
dec
nop
leave
push
in
push
push
push
cmps
cmp
xor
dec
and
or
in
mov
std
jmp
mov
adc
mov
fbld
mov
pop
and
push
and
mov
(bad)
fist
in
xchg
xor
(bad)
and
xchg
mov
and
xchg
shr
push
es
cmps
sahf
frstor
dec
stos
mov
adc
aaa
inc
lds
jae
or
pop
jmp
jbe
xchg
icebp
xor
jb
xchg
xlat
xchg
push
mov
sar
xor
bound
jnp
call
push
shl
(bad)
out
push
lods
xchg
xchg
inc
push
jl
test
mov
retf
xor
js
jp
add
adc
popa
and
and
pop
xor
stc
daa
ret
das
cld
lods
cmc
cmp
sbb
pop
daa
pop
xchg
adc
test
mov
es
pop
ds
jo
loope
loope
pop
inc
cld
adc
push
inc
mov
fld
pop
add
and
cmp
xor
sub
mov
xchg
pusha
xor
pop
inc
sbb
int3
push
repnz
adc
int
cmp
lock
popa
das
dec
sbb
movs
xchg
xlat
jecxz
pushf
in
xor
mov
call
pop
sub
fiadd
sahf
cmp
cmp
iret
inc
sub
(bad)
gs
push
xor
sbb
int3
cmp
rcr
sub
loope
dec
add
sbb
sbb
je
push
adc
loopne
sahf
(bad)
xchg
add
ret
pop
fild
push
scas
mov
or
iret
inc
imul
cld
daa
lea
mov
test
xchg
or
pop
inc
lahf
add
sti
pop
mov
adc
arpl
fmul
mov
dec
leave
pop
mov
mov
cld
mov
shl
icebp
mov
movs
xchg
cwde
pop
mov
rcl
inc
pop
sub
cs
loop
sbb
fs
test
mov
adc
aad
add
icebp
pop
ins
shr
fwait
lods
xchg
test
mov
call
and
cwde
xchg
dec
mov
mov
mov
jl
in
xchg
mov
pushf
gs
fnstcw
pop
jo
mov
sbb
jbe
or
jecxz
sar
imul
push
pop
pop
repnz
xchg
or
pop
xchg
or
fisub
pop
cmc
scas
sbb
dec
fwait
mov
cmp
xor
pop
push
jns
sbb
loopne
mov
cmp
rcr
div
cli
and
and
xor
push
nop
or
ins
push
add
das
or
imul
inc
mov
aaa
mov
xchg
popf
int
xor
ja
pop
jae
push
push
enter
mov
imul
jne
and
and
push
mul
loop
into
cmp
ins
xchg
(bad)
movs
add
jecxz
mov
outs
adc
xor
out
mov
outs
dec
adc
(bad)
inc
hlt
loope
ret
push
retf
pop
ret
retf
add
inc
mov
or
add
xchg
mov
jp
in
mov
mov
add
sbb
mov
add
push
mov
xchg
inc
movs
cld
cld
pop
xchg
addr16
mov
and
(bad)
mov
mov
xlat
enter
jbe
shld
push
std
(bad)
adc
das
test
nop
(bad)
fdiv
mov
cmps
push
xor
jl
mov
pop
mov
test
adc
dec
(bad)
push
iret
pop
sub
xor
jp
jmp
inc
mov
push
ror
pushf
cli
mov
mov
pop
pop
mov
xchg
and
or
cmp
xor
jns
pop
repz
adc
rdtsc
mov
imul
jmp
aad
loope
dec
aas
or
jl
pop
bound
or
mov
mov
sbb
call
pop
push
jl
ret
sub
xchg
xor
outs
shl
es
cmp
mov
xor
push
mov
pop
cmp
xchg
popf
daa
jb
shl
mov
mov
add
inc
(bad)
sbb
mov
or
aad
mov
mov
and
push
daa
int
xchg
xchg
ret
ret
sbb
(bad)
pop
push
ret
inc
pop
xor
mov
stos
jne
scas
pop
stos
movs
xor
inc
mov
iret
or
sub
sbb
mov
dec
das
cld
push
aas
jae
jle
jb
dec
fadd
push
mov
not
(bad)
(bad)
mov
sbb
jmp
xor
or
pusha
or
dec
fcom
xor
xlat
js
pop
aad
push
xchg
outs
mov
std
sub
sbb
fiadd
push
imul
mov
jns
in
add
aaa
dec
into
in
inc
mov
inc
cld
fisubr
dec
pop
dec
jnp
jmp
xor
push
mov
jle
and
dec
and
pop
in
xor
jp
(bad)
push
jp
inc
stos
je
ins
inc
stc
pop
jp
jecxz
inc
jg
pop
adc
ds
push
outs
loope
mov
pop
cmp
dec
dec
xchg
cmc
inc
sub
jae
adc
sub
dec
push
push
xchg
stos
leave
outs
adc
aad
jge
add
jg
cmp
adc
sbb
out
in
aad
(bad)
les
es
icebp
jmp
cmp
hlt
fld
pop
cmp
cmp
jb
cmp
mov
xchg
adc
jge
lea
(bad)
and
ins
iret
neg
mov
lock
mov
cwde
or
into
pop
gs
repnz
fadd
xchg
test
in
or
xor
iret
ret
dec
pop
and
ss
cli
fidiv
push
(bad)
xlat
jno
fisub
ds
mov
push
push
repz
jb
data16
pop
mov
and
cmp
mov
sbb
jecxz
clc
and
sub
call
fidiv
jp
mov
push
xchg
in
and
scas
std
movs
stos
push
test
cmp
in
and
clc
cdq
sahf
cld
leave
cmp
jns
stos
mov
push
mov
or
mov
neg
and
jle
xchg
shl
in
or
lds
arpl
adc
mov
adc
jl
je
call
mov
and
mov
les
mov
iret
mov
jp
vdivps
dec
imul
call
neg
and
sub
dec
rcr
das
inc
loopne
pushf
leave
and
add
aas
cmp
sbb
push
cmps
inc
or
ret
adc
add
rcr
div
outs
in
adc
dec
stc
pusha
mov
inc
pop
faddp
stos
xchg
fcomp
(bad)
in
repz
jae
mov
out
idiv
adc
out
sahf
sub
leave
dec
out
add
inc
add
jbe
gs
xchg
rcl
jge
ja
mov
call
lods
sahf
mov
xchg
cmp
push
test
daa
(bad)
out
dec
cmp
inc
cmp
push
xor
xchg
(bad)
mov
and
add
test
cmp
ret
fimul
xchg
xor
adc
stos
xchg
mov
enter
or
mov
sub
sub
jae
jb
(bad)
call
fs
sbb
sbb
in
cli
inc
xlat
jo
out
jnp
mov
inc
in
stc
(bad)
push
push
test
ret
mov
and
cmps
ret
inc
lods
popf
pop
cmps
add
dec
fiadd
lods
pop
xor
jae
pop
pop
test
popa
sbb
sbb
sar
and
push
mov
out
cmp
mov
cmps
add
jno
fild
scas
in
out
cli
std
or
pop
jge
cli
stos
enter
sbb
jbe
mov
int
cmps
stc
and
dec
sub
jecxz
pop
scas
jecxz
push
inc
push
cmps
leave
inc
mov
fldcw
push
repz
(bad)
cmp
imul
aad
add
cmps
push
cmc
push
aad
mov
dec
mov
lods
addr16
xchg
jo
call
cmps
shl
push
xchg
xor
dec
mov
scas
push
mov
inc
ficom
dec
cwde
inc
(bad)
dec
mov
mov
mov
push
mov
mov
push
jecxz
mov
sub
clc
shl
fisub
neg
aaa
jge
lea
std
out
add
ins
(bad)
aam
ds
jno
xchg
adc
dec
mov
fsubr
jecxz
mov
inc
jmp
btr
add
jp
stos
psllw
je
add
adc
test
retf
outs
and
inc
outs
push
add
add
and
jae
fld
adc
sbb
ds
push
fsincos
mul
icebp
nop
or
cmp
and
out
mov
retf
sbb
cwde
idiv
pusha
cli
out
sbb
es
test
or
sub
inc
popf
mov
frstor
arpl
mul
or
stos
mov
jns
jmp
inc
sub
pop
xchg
(bad)
(bad)
clc
add
test
sub
out
adc
xor
ror
cmps
aaa
jle
and
cld
in
in
sub
xchg
dec
cmp
cmps
pop
pop
fnstcw
pushf
test
test
add
or
cdq
mov
ins
data16
sti
mov
add
(bad)
icebp
jne
int
sbb
das
test
enter
inc
pusha
jno
lods
push
aas
mov
popf
pop
mov
xchg
mov
pop
mov
rol
sub
or
int3
dec
dec
mov
daa
sti
cwde
sub
sbb
add
jno
mov
outs
xlat
cmp
pop
imul
(bad)
ds
push
adc
hlt
fist
cmc
pop
inc
sub
adc
push
cmp
lds
imul
sub
mov
clc
sub
sub
lds
inc
inc
adc
xchg
test
ja
xchg
shl
dec
sub
lahf
cmp
cwde
xchg
stc
or
enter
jae
jae
jmp
push
jnp
leave
data16
adc
and
inc
sub
push
xor
scas
jl
lods
ret
adc
test
clc
rcl
scas
ds
(bad)
pop
ss
shr
lock
(bad)
cmp
jl
test
icebp
jle
por
movs
jmp
inc
mov
xor
dec
fisttp
fisttp
and
adc
push
inc
outs
jnp
adc
aas
test
cmp
ins
xchg
mov
or
fnstcw
mov
or
nop
loop
and
and
fstp
xchg
xchg
test
loopne
fstp
leave
into
sbb
cmps
fild
ror
lds
rcl
inc
stos
pop
cmp
mov
cmc
shr
iret
cmps
retf
jno
pop
jbe
div
push
shr
les
mov
mov
jle
pop
js
lock
sar
repz
stos
test
cs
or
loope
xlat
lock
cli
inc
lods
fdivr
mov
adc
das
dec
scas
mov
aam
inc
pop
ss
sbb
mov
enter
leave
fcomp
lock
call
push
sti
inc
iret
cli
pushf
jb
pusha
jp
xchg
adc
xor
inc
in
xor
out
pop
dec
sub
out
and
xor
std
dec
es
adc
loope
idiv
test
inc
jle
imul
scas
loop
lods
jl
je
jl
ds
mov
imul
push
add
cmp
pop
mov
xchg
or
pop
mov
dec
or
repz
aaa
fmul
(bad)
jge
fwait
vpaddusw
imul
ins
out
leave
ds
rol
aam
loop
ins
pop
stos
mov
pop
cmp
std
(bad)
xor
jp
pushf
dec
je
sbb
scas
aaa
test
mov
sar
(bad)
or
inc
mov
cmp
mov
adc
pop
mov
jmp
inc
idiv
fistp
rcl
(bad)
test
mov
sbb
jecxz
jo
mov
mov
lock
inc
jg
fild
nop
inc
shl
and
push
mov
fld
sub
aaa
mov
xlat
mov
jo
pcmpeqw
or
imul
jg
sbb
push
test
popf
xor
and
ret
popa
int
nop
leave
fadd
adc
(bad)
mov
xchg
sub
shr
or
mov
popf
and
cs
loope
gs
jecxz
test
daa
scas
jge
stos
fs
hlt
xchg
(bad)
push
mov
or
bound
or
jle
jnp
retf
(bad)
add
push
hlt
sar
adc
and
(bad)
or
scas
pop
adc
cdq
jmp
(bad)
jmp
loope
loopne
gs
cmc
aaa
cs
pop
or
pop
sub
sub
xchg
or
jne
inc
retf
lock
cmp
and
jnp
in
sbb
inc
sti
(bad)
jge
je
ret
lea
mov
mov
xchg
inc
push
movs
rcr
jmp
arpl
es
mov
push
scas
out
rcr
cs
mov
retf
stos
hlt
ficom
pushf
mov
and
adc
inc
adc
ss
ja
or
or
pop
pushf
clc
or
pop
dec
into
hlt
xor
(bad)
sbb
mov
adc
out
retf
fist
or
inc
mov
push
fwait
mov
cld
push
test
push
in
mov
add
inc
call
(bad)
pop
lods
mov
dec
arpl
(bad)
int
(bad)
cld
inc
(bad)
in
adc
and
arpl
callw
sub
inc
and
test
call
jns
inc
ins
pop
outs
int
aaa
dec
fld
iret
jecxz
jne
pop
fstp
pushf
xor
sub
add
cmc
push
repnz
(bad)
adc
jb
out
daa
call
retf
pop
movs
push
shr
jno
and
mov
push
xchg
cs
das
jle
mov
or
stc
mov
and
fnsave
cdq
add
xchg
sti
popf
icebp
cmp
cmp
sbb
push
aaa
mov
pop
out
adc
jne
aad
ins
add
lahf
dec
mov
imul
mov
imul
sbb
lods
or
sbb
xor
push
sub
not
fild
es
jb
shl
outs
shl
aas
sub
frstor
sbb
push
cs
and
adc
dec
leave
(bad)
bound
fcom
mov
mov
and
out
add
nop
fdiv
fisttp
sub
and
push
add
adc
aas
das
ret
inc
in
std
and
arpl
sahf
retf
shl
inc
imul
test
pusha
fadd
out
dec
cs
mov
imul
je
movs
xchg
repnz
mov
jl
call
sbb
or
jo
cmps
inc
test
and
cmp
pop
movs
addr16
(bad)
mov
inc
das
jb
outs
dec
push
mov
dec
fsubr
inc
lock
hlt
fwait
cli
lock
js
jp
int3
es
ins
xor
adc
lea
lods
mov
pop
xchg
adc
add
pop
xchg
stos
add
adc
mov
mov
cmps
scas
add
jb
mov
stos
xchg
add
mov
mov
icebp
sbb
(bad)
pusha
pop
add
inc
push
mov
jmp
outs
jg
ffree
mov
push
jmp
inc
call
mov
retf
cmc
jg
mov
push
add
mov
pushf
or
push
pop
cmp
jo
xchg
lea
add
and
int3
mov
pop
aad
push
and
jnp
inc
std
das
iret
repz
je
loope
int3
add
add
jp
and
ror
xchg
pop
xchg
xchg
stc
jnp
retf
jns
xor
je
aas
lods
rol
in
es
(bad)
hlt
xchg
loopne
push
(bad)
stos
fcmovbe
aas
aaa
inc
into
mov
mov
sbb
gs
add
mov
test
push
popa
cdq
adc
pop
and
not
xor
out
int
lea
push
hlt
cwde
jle
popf
rcr
dec
or
movs
stos
(bad)
jge
movs
mov
sbb
dec
jmp
dec
test
cs
push
shr
add
sbb
scas
fwait
std
fdivr
out
inc
xchg
cdq
out
pusha
push
xchg
sub
xlat
std
sti
inc
jp
adc
sub
jno
ss
pop
sbb
stc
lods
aam
out
add
jl
rcl
push
sub
and
jmp
lahf
lods
sbb
movs
push
inc
jmp
loop
sbb
stc
adc
shl
mov
repz
mov
(bad)
push
fdiv
inc
fs
retf
mov
or
lock
call
pop
sbb
inc
mov
xor
out
mov
push
clc
mov
dec
les
jb
aaa
or
cmp
inc
add
sti
out
push
mov
mov
mov
test
jno
sub
push
int3
mov
js
mov
fcom
sub
lods
dec
and
mov
or
sub
shl
xchg
leave
lahf
sti
jbe
push
sbb
xor
and
fsubr
xchg
mov
pop
movs
pop
dec
(bad)
(bad)
pusha
add
inc
cmps
je
push
mov
jmp
xor
mov
sbb
outs
add
rcr
cli
outs
dec
fwait
jbe
movs
pop
mov
mov
test
(bad)
adc
ja
jae
xchg
ins
inc
add
shr
mov
xchg
inc
push
dec
rcl
mul
cwde
lahf
inc
inc
loopne
mov
add
in
jp
mov
call
les
pop
jp
push
inc
push
pop
ins
mov
dec
in
js
or
sahf
push
mov
add
and
stos
cmp
ror
arpl
mov
jmp
cmp
cmp
xor
out
or
fs
and
rol
repz
and
ja
mov
sub
rcl
xchg
or
push
dec
iret
(bad)
sti
bnd
pop
sti
cwde
inc
and
jno
movs
aad
sub
jbe
ret
jp
pop
fisub
rcl
push
pusha
cmp
loop
sub
xor
test
adc
scas
fs
push
ds
cmp
and
sbb
push
ds
xchg
fisub
sub
inc
cmp
adc
push
add
in
imul
jnp
jge
add
sub
mov
pop
sbb
xlat
mov
div
sbb
in
das
(bad)
int
jne
add
push
push
add
and
jnp
rol
jle
mov
adc
shl
push
popa
add
leave
out
ins
stos
ss
xchg
xchg
sub
js
add
pop
sub
pop
push
jae
add
sbb
repz
outs
lock
test
xor
mov
pop
wrmsr
pop
(bad)
(bad)
out
cwde
fmul
int3
mov
cwde
sub
inc
push
inc
shl
xor
mov
sub
or
in
mov
xchg
enter
mov
jge
jl
mov
adc
or
jno
or
cmp
mov
pushf
cmp
inc
pop
sub
icebp
cdq
cmp
in
stc
jle
cwde
rcr
in
(bad)
jp
jge
and
add
stc
jmp
(bad)
push
cmp
mov
cmp
pop
cmp
jmp
lea
adc
push
mov
out
aas
je
adc
cmps
movs
popa
out
add
mov
xchg
mov
mov
dec
sub
int3
cmp
out
push
pop
movs
or
out
cmp
lods
mov
dec
xchg
nop
mov
inc
or
xor
repz
jb
outs
mov
pop
jb
pop
sti
out
inc
mov
add
mov
shl
mov
popf
cld
imul
push
xor
lea
daa
or
cs
cmp
mov
cmp
(bad)
int3
scas
and
and
xor
ja
push
sar
imul
pop
outs
add
mov
test
mov
popf
push
cmp
inc
sbb
cli
fdiv
fcmovne
nop
aam
and
xlat
mov
mov
pop
pop
mov
adc
dec
sub
xor
sar
cmps
dec
cdq
or
adc
ret
cmps
mov
mov
mov
and
je
fdivr
not
cdq
mov
aaa
xor
leave
es
in
popa
ret
dec
mov
stc
icebp
mov
clc
jge
mov
ror
fcom
xchg
jp
sub
fs
xor
sub
int
mov
lods
xchg
dec
push
or
div
scas
mov
lock
cmps
pop
and
jb
stos
mov
lods
cmp
xor
or
cli
sub
xor
retf
push
cmp
push
lds
loopne
or
(bad)
pop
xchg
jne
stos
mov
sbb
push
fld
arpl
sti
fist
div
push
push
xor
xor
out
(bad)
int
jge
mov
add
aaa
xchg
repz
fmul
dec
mov
adc
jnp
add
push
cld
push
je
pop
dec
rol
or
dec
aas
ja
pop
cmp
rol
add
mov
fsub
pushf
jb
xchg
mov
inc
fninit
mov
mov
sti
mov
inc
cdq
or
push
cmp
inc
movs
jno
mov
movs
pop
div
pop
mov
or
in
adc
std
mov
aas
cwde
repz
je
out
ficomp
out
mov
call
xor
xor
cmp
xchg
xor
mov
faddp
pop
inc
or
arpl
lahf
mov
xchg
push
mov
sub
pop
pop
dec
adc
dec
sahf
push
mov
ret
jmp
stos
and
fdiv
sbb
in
inc
pop
push
add
sahf
mov
pop
ffreep
add
(bad)
dec
idiv
inc
je
scas
pop
enter
jbe
sbb
mov
scas
push
imul
sub
or
mov
dec
jl
add
dec
mov
out
or
mov
dec
sbb
pop
sub
mov
shl
sub
adc
fistp
das
popf
rol
jb
pop
nop
ins
arpl
fidivr
push
ins
sub
out
(bad)
int3
lds
fistp
mov
dec
sbb
sti
xor
dec
xor
shl
movs
mov
push
inc
pop
mov
adc
pop
push
sub
sti
inc
xor
cmp
sbb
sub
popa
fimul
lds
cdq
cmp
pop
hlt
jg
(bad)
xchg
and
cdq
jno
loopne
not
jb
data16
(bad)
adc
gs
out
fld
pminsw
sti
ret
push
cmp
loop
popa
out
xchg
fucomip
cmp
(bad)
xor
imul
or
dec
inc
out
xchg
mov
retf
inc
outs
adc
push
retf
jnp
jecxz
icebp
sub
in
lock
stos
movnti
jne
popf
push
pop
call
inc
pop
push
cs
jbe
push
mov
xor
push
or
loopne
sub
imul
mov
inc
or
iret
add
xchg
inc
stos
nop
movs
shr
pop
cmovg
ss
inc
mov
add
clc
iret
jge
in
mov
xchg
cmp
es
cmc
test
cmp
cmp
xor
cmp
js
retf
sub
stos
hlt
and
push
push
jne
inc
jl
mov
sub
lds
cmp
inc
shl
inc
(bad)
fisub
scas
test
cld
in
dec
and
pushf
setns
test
std
and
leave
aam
retf
outs
ss
mov
cwde
js
mov
repnz
fbstp
lea
repnz
pop
xor
adc
lods
mov
inc
scas
ja
jmp
add
xchg
fcom
(bad)
and
test
aas
in
jmp
gs
ds
std
jns
jge
xor
inc
pop
adc
dec
lods
mov
jmp
nop
clc
jns
sbb
arpl
sbb
leave
ss
test
(bad)
cvtps2pd
lods
out
fistp
and
jae
jecxz
mov
(bad)
push
dec
in
test
lods
push
ret
and
dec
outs
mov
dec
cmp
inc
aam
mov
adc
xchg
cmps
int
vphaddudq
adc
cmp
cmc
fcomip
hlt
mov
and
pushf
xor
out
loopne
dec
xchg
aas
jl
jbe
inc
cld
adc
jb
xor
fiadd
mov
and
jle
mov
cli
fstp
adc
mov
jl
push
mov
adc
lods
or
dec
mov
jecxz
xor
dec
lock
popw
xchg
imul
jbe
fwait
xor
xor
ins
dec
js
and
add
mov
test
push
in
mov
push
push
in
adc
mov
xor
sub
sbb
sbb
fs
mov
mov
sahf
push
or
(bad)
loopne
jbe
mov
mov
cmps
call
neg
pop
cmp
xor
pop
and
inc
sub
pop
mov
add
mov
stos
fist
xchg
sahf
movs
call
out
lahf
mov
sub
je
imul
lods
push
sbb
push
or
pusha
push
sar
cmp
push
imul
aaa
push
cmp
jp
clc
push
sub
and
pop
xor
aaa
dec
jle
popf
xchg
jns
pop
or
mov
dec
dec
cmps
js
xchg
sub
in
cmps
out
outs
leave
mov
push
xor
mov
cli
mov
mov
ret
push
(bad)
les
mov
sub
fwait
std
ja
stos
sub
push
push
dec
icebp
push
mov
mov
push
or
inc
sbb
or
jmp
int3
inc
mov
lock
rcr
popa
repnz
mov
sbb
or
ret
and
mov
jge
ret
inc
(bad)
ds
and
and
push
loop
cmp
fwait
and
std
loope
dec
cmp
or
pop
cmp
sbb
cwde
and
rcl
lock
repz
pushf
cmp
mov
mov
frstor
out
and
stos
popa
sbb
jns
cwde
inc
or
data16
cmp
(bad)
(bad)
xor
sbb
mov
movs
add
sub
cmps
fdivp
mov
nop
and
mov
xchg
les
xor
and
retf
pop
or
sar
inc
stos
jp
aad
or
test
cmps
xchg
aam
sub
ret
and
out
adc
sar
stos
lods
sbb
cmps
cmp
push
test
in
inc
das
mov
idiv
lock
ins
in
or
fwait
sar
mov
fcmovbe
cmp
cmc
sbb
inc
cwde
jecxz
cdq
xchg
rcr
xchg
out
add
inc
xchg
je
sbb
ins
adc
push
je
lea
imul
push
or
mov
(bad)
sub
out
or
add
push
push
mov
add
in
sub
push
loope
out
or
(bad)
jmp
adc
cld
std
sub
mov
xchg
pop
push
xor
fstp
sbb
mov
movs
je
push
cmp
aad
out
mov
bound
in
xor
dec
and
jg
jbe
shr
fs
mov
call
cmp
es
or
fwait
int3
push
or
repnz
dec
push
test
push
xchg
lds
nop
(bad)
rcr
in
and
pop
push
stos
cwde
(bad)
in
pop
jb
xchg
stos
mov
scas
ja
mov
fs
cmc
in
icebp
or
leave
ins
sbb
das
sbb
pushf
and
inc
dec
aad
test
inc
or
ds
ja
push
(bad)
loope
cmp
pusha
xchg
cmp
test
jg
mov
pop
add
adc
push
test
or
cmp
push
xchg
pop
cli
pusha
stos
fcmovne
xchg
xchg
xchg
jp
shl
mov
add
dec
shr
call
(bad)
and
loope
jae
out
dec
inc
rol
enter
fild
cdq
leave
pop
xchg
repz
cmps
call
fwait
cli
pop
cmc
outs
(bad)
cmp
dec
stos
lods
loope
(bad)
mov
jp
sbb
out
mov
lods
pop
sub
pop
cmp
jbe
ds
mov
push
call
aam
(bad)
sbb
test
repz
xor
sbb
fiadd
mov
retf
lods
js
test
stos
movs
lods
ss
mov
fcmovnb
mov
aaa
sbb
aaa
jno
push
mov
ja
push
aam
cmp
test
sbb
inc
jmp
cs
cmp
stc
les
nop
mov
xchg
push
in
mov
push
mov
mov
cmps
out
xchg
or
dec
mov
sub
dec
ret
test
out
shr
push
test
jns
sub
dec
dec
adc
push
jmp
push
push
js
cmp
fwait
sub
push
(bad)
mov
cld
mov
jnp
cmps
cmp
sbb
jns
stc
mov
jns
jns
mov
scas
cmps
mov
push
test
dec
xchg
jae
cld
jge
fld
and
sti
(bad)
mov
mov
push
pusha
scas
inc
jae
jo
sbb
inc
inc
mov
dec
dec
pusha
(bad)
loopne
mov
enter
cdq
cmp
push
pop
hlt
lea
test
jmp
jge
ins
int
mov
sbb
dec
mov
bound
jnp
pop
repz
scas
arpl
loope
sahf
jno
ret
jbe
pop
dec
pop
dec
adc
sub
push
fidiv
pop
adc
data16
gs
inc
repz
sti
dec
into
std
(bad)
fimul
cmp
mov
(bad)
fdivrp
or
jle
leave
mov
xchg
lods
int
ds
push
dec
int3
pushf
mov
das
stos
loope
jbe
das
fistp
test
cmc
imul
jns
and
xchg
and
inc
inc
(bad)
call
xchg
push
lods
and
or
scas
and
adc
xlat
mov
or
jp
ss
test
cld
dec
mov
xor
mov
adc
pop
es
pop
ja
xchg
mov
lock
lods
arpl
and
je
xchg
sub
sub
fldlg2
xchg
xchg
sbb
es
mov
jg
test
and
in
pop
pop
inc
std
cmp
mov
mov
fmul
icebp
popa
xchg
hlt
in
sub
adc
and
inc
mov
stc
xor
pop
call
or
mov
idiv
repz
clc
int
mov
add
cmc
mov
pop
pop
jmp
jae
xor
push
ds
fs
xchg
xchg
ret
cmc
mov
out
mov
or
hlt
or
xor
stos
cmps
mov
xchg
ss
jle
pop
pop
loop
add
add
sti
sub
leave
out
mov
push
mov
rcl
iret
lods
add
xchg
les
(bad)
in
inc
dec
dec
cld
retf
or
popf
sub
movs
movs
(bad)
adc
xor
cli
push
sub
jle
sbb
and
or
push
repz
pop
call
xchg
icebp
mov
ror
repnz
dec
push
into
imul
aad
mov
jl
inc
jns
addr16
or
fs
jbe
sbb
call
test
dec
cmp
jle
rcr
sbb
test
mov
sub
ss
pushf
mov
test
ss
sbb
aam
jbe
fisttp
sbb
pop
cmp
xchg
(bad)
aad
mov
mov
pop
xchg
push
das
and
xor
inc
xlat
aas
hlt
adc
cli
sub
sub
dec
adc
mov
movs
xchg
enter
pop
loopne
leave
sbb
push
les
js
fnsave
int3
mov
dec
daa
mov
outs
and
arpl
mov
into
scas
cwde
dec
and
cmovne
loop
mov
jnp
jnp
xchg
iret
ins
aas
and
ja
sar
jl
inc
mov
rol
lock
in
mov
cs
xchg
mov
push
cmp
imul
js
push
rol
inc
mov
pop
bound
add
xchg
xchg
dec
jle
ficomp
mov
(bad)
leave
xlat
(bad)
jmp
gs
js
(bad)
mov
push
pop
outs
inc
lea
outs
jo
jmp
aam
lds
adc
or
lods
mov
dec
mov
and
fwait
(bad)
mov
jl
je
outs
adc
pushf
ins
xchg
mov
rcr
test
pop
lahf
daa
in
das
(bad)
xlat
jno
cmp
(bad)
lds
arpl
pminub
dec
popa
jle
ucomiss
iret
cmc
and
xor
mov
in
test
jmp
ins
pop
push
mov
pop
in
out
fst
das
in
pop
in
imul
sti
push
mov
pushf
imul
clc
cmps
mov
aaa
jecxz
cmp
stc
push
leave
xor
mov
into
jo
add
jno
je
ss
imul
stc
or
xchg
xor
inc
pop
or
rol
dec
sub
int
dec
mov
xor
or
lahf
int
jno
ins
ins
pop
imul
and
adc
push
mov
es
add
retf
cmp
enter
retf
pop
xor
xor
xor
mov
js
xchg
stos
inc
sbb
cmp
aas
jnp
xchg
(bad)
jp
lds
mov
pop
ins
push
and
sbb
adc
push
push
mov
scas
pop
jmp
movs
jo
hlt
inc
and
neg
std
jnp
xchg
jmp
lea
dec
xor
and
loope
loope
loope
jne
rcl
mov
adc
pop
dec
mov
jp
lea
ins
addr16
sti
and
push
in
in
adc
stc
rcl
push
imul
sbb
add
loop
inc
push
inc
bnd
and
ret
pcmpgtd
xor
dec
lock
outs
(bad)
fild
push
fidiv
pop
xor
(bad)
cld
and
aaa
jmp
js
push
fs
call
jns
sar
shr
std
add
pushf
add
arpl
lock
mov
clc
xor
push
pop
ins
data16
adc
lea
adc
mov
rcl
shl
inc
loopne
jb
sar
inc
push
xor
retf
dec
jecxz
xchg
popa
scas
sbb
mov
xchg
aam
loope
inc
dec
xor
das
mov
ins
aaa
pop
popa
fst
and
jo
xor
out
lea
pop
enter
inc
mov
or
(bad)
jle
pusha
in
loope
outs
mov
inc
loopne
daa
lods
in
lods
mov
icebp
lods
addr16
rcl
sbb
xchg
inc
add
lods
jl
cmps
xor
adc
or
popa
call
ins
push
ja
or
ficomp
xor
pop
into
ja
and
loop
jl
cwde
mov
sub
dec
(bad)
xor
fisubr
mov
test
pop
xor
mov
jb
mov
ret
inc
test
dec
cmp
push
xor
jmp
or
popf
outs
sbb
cdq
ret
dec
cld
or
add
push
outs
jns
hlt
out
dec
pop
cs
aaa
shl
outs
add
sbb
mov
xchg
loop
cli
mov
ret
movs
push
jae
test
(bad)
add
sbb
pop
xor
test
jb
jecxz
adc
dec
sub
dec
(bad)
outs
jl
adc
mov
pop
int3
cmp
cld
in
cwde
add
jmp
dec
ret
adc
add
pop
ds
mov
pop
int3
xor
xchg
movs
sub
xor
ficomp
jp
jmp
in
mov
pop
loop
or
inc
movs
sbb
adc
pop
pusha
fidivr
cmp
rol
das
jp
ins
mov
jl
ror
ret
jno
push
cmp
test
cli
mov
jg
mov
scas
xchg
jbe
data16
xor
and
lods
ficomp
dec
out
cmp
movs
clc
jns
xor
movsx
into
iret
inc
aaa
shl
and
and
jbe
mov
ror
or
ror
mov
add
sbb
push
cmp
outs
sti
outs
movsx
mov
xchg
pop
mov
cmp
dec
or
(bad)
ja
pop
jmp
bound
int3
mov
iret
and
into
movs
nop
in
inc
xchg
test
jle
out
cmp
or
and
pushf
adc
mov
jmp
not
and
pop
pop
les
cmp
cmps
fld
cmp
adc
sbb
out
pop
js
leave
xor
mov
stos
dec
jle
loope
push
enter
dec
xchg
mov
aad
inc
mov
cmc
adc
repz
sbb
js
push
xchg
aam
int3
std
ins
and
mov
les
aad
iret
es
mov
xor
xchg
jno
cmp
mov
and
jne
in
movs
push
scas
sbb
jge
push
shr
mov
dec
adc
icebp
mul
and
jecxz
fistp
xchg
movs
stc
data16
jmp
enter
xor
cld
add
retf
xor
js
out
and
ror
xor
adc
xchg
dec
xchg
pusha
cmp
pop
or
pop
fistp
pop
jbe
jecxz
or
out
push
jne
es
cmp
inc
test
neg
and
hlt
outs
push
xchg
and
sub
adc
iret
xchg
jae
push
gs
sbb
in
jo
push
pusha
xchg
or
and
add
icebp
sub
(bad)
mov
and
imul
scas
mov
mov
sbb
mov
aam
xchg
sbb
cmps
pop
xchg
(bad)
jge
(bad)
cmp
repz
out
mov
call
sub
loope
in
xchg
xchg
fild
arpl
pop
mov
movs
jns
mov
jge
shl
es
sbb
popa
loopne
mov
mov
fmul
stos
inc
fwait
and
xchg
adc
mov
push
mov
push
mov
ins
es
aas
mulps
fsubrp
pop
sbb
sbb
les
sar
neg
out
in
sub
mov
imul
push
xor
ins
es
lods
xor
sbb
idiv
push
frstor
lock
nop
loopne
scas
jmp
out
pop
and
call
in
mov
sub
nop
mov
scas
test
dec
stos
pop
aam
fisubr
int
mov
gs
stos
dec
adc
fs
cmp
cmps
dec
push
pop
sahf
imul
bound
jnp
jnp
mov
pushf
repnz
cmp
in
cdq
add
push
enter
shl
psubq
mov
icebp
sub
jbe
and
sbb
inc
sub
hlt
mov
rcl
adc
mov
cs
xor
mov
out
test
loope
jno
adc
imul
sti
inc
jo
sub
sub
in
retf
inc
daa
mov
(bad)
mov
retf
push
dec
mov
int3
out
icebp
aad
xchg
ror
push
pop
sbb
stos
jg
xchg
add
ret
or
cld
dec
xchg
fwait
jl
iret
cdq
xchg
mov
mov
ja
sbb
or
and
loop
mov
mov
outs
pop
pop
cdq
lods
mov
jg
mov
inc
add
add
popf
rol
jmp
pop
xchg
push
pop
ja
inc
test
in
pop
cmp
xor
mov
mov
stos
fst
lock
aaa
rcl
dec
shl
jp
repz
out
pop
cmp
lock
icebp
stos
cvttps2pi
pop
stos
jb
ins
or
sbb
xchg
mov
fsub
imul
xchg
jl
mov
jbe
cdq
aas
inc
jmp
sahf
into
xchg
add
dec
pop
xor
add
inc
aam
add
pop
rcl
or
and
scas
xchg
pop
rcl
cmps
and
push
nop
xchg
dec
mov
fmul
jl
cmp
popa
pop
or
aad
mov
sbb
arpl
hlt
sbb
or
pop
sbb
cs
dec
jecxz
lock
jp
mov
movs
cmp
or
mov
hlt
cmp
push
cmps
mov
xlat
xor
fcom
aam
or
push
xchg
hlt
idiv
adc
lock
dec
ins
pop
xor
adc
inc
xchg
imul
(bad)
sbb
add
sbb
and
dec
sahf
pop
call
inc
pop
push
hlt
lods
push
lahf
pop
jmp
add
les
in
pop
call
test
cdq
jg
lods
mov
rol
std
mov
imul
jle
into
gs
shr
push
neg
scas
mov
mov
(bad)
rcr
mov
inc
push
sbb
hlt
pop
push
and
in
push
pop
cdq
xchg
push
ret
pop
xchg
cwde
fs
cmps
jecxz
lods
mov
sbb
hlt
je
repz
mov
rcr
fs
ret
and
inc
sub
mov
fistp
loop
sti
pop
loop
ss
jmp
xchg
pop
sub
loopne
popf
mov
lea
shl
cli
sub
scas
iret
mov
repz
out
(bad)
aad
das
lods
lea
or
push
cs
or
iret
xor
aas
std
mov
clc
push
dec
mov
in
jne
frstor
cmp
test
cwde
sub
sbb
mov
push
cmp
mov
sub
popf
mov
dec
popf
cmp
rcl
gs
mov
add
cli
xor
mov
shr
lods
aam
fsub
(bad)
dec
shl
mov
es
jl
xor
cmps
xor
bound
ret
or
lods
pushf
push
test
push
jns
fadd
fsubr
sbb
ret
mov
xchg
xor
lahf
(bad)
je
inc
sbb
jne
dec
std
nop
test
push
sbb
fs
pop
cmp
aad
loop
mov
sbb
in
mov
add
or
mov
retf
and
neg
dec
(bad)
jbe
lahf
dec
mov
and
lods
(bad)
cmp
clc
mov
inc
ret
mov
fsub
mov
mov
imul
xor
(bad)
jmp
cmc
mov
inc
aas
inc
es
es
and
daa
jl
aam
push
mov
mov
outs
xor
add
pop
add
rcr
or
xchg
pop
std
push
test
repz
push
mov
xchg
shr
and
xor
scas
cmp
hlt
test
mov
inc
mov
jns
hlt
(bad)
cs
ror
mov
lods
test
(bad)
cmp
inc
nop
bswap
adc
mov
xchg
bound
iret
pxor
xchg
into
and
adc
in
jo
and
aaa
mov
jg
stos
cmp
adc
mov
jno
shr
out
add
les
jmp
mov
jns
inc
addr16
xchg
jmp
cmp
push
js
int
xor
mov
jns
push
fst
jmp
inc
rcl
mov
jns
mov
or
nop
adc
scas
movs
inc
dec
and
cmps
data16
call
sbb
fimul
scas
fild
pop
adc
aas
jb
shl
xor
jb
xor
cmp
jle
mov
push
fcom
scas
adc
cwde
dec
sbb
inc
add
or
mov
fisttp
ins
je
xchg
add
push
pop
les
pop
das
or
ret
icebp
movsx
sbb
dec
in
shl
xchg
mov
push
addr16
movs
sub
push
and
or
outs
xchg
lock
movs
xor
dec
in
jno
test
xor
popa
jno
pop
cwde
dec
(bad)
test
dec
loop
icebp
cld
ins
test
xchg
(bad)
push
sub
mov
sub
cmps
xor
push
mov
fisttp
movs
pop
mov
jp
xchg
std
pop
xchg
in
sbb
pop
mov
mov
les
shr
push
pop
leave
fbld
inc
pop
arpl
mov
ds
xchg
ja
mov
inc
mov
(bad)
popa
pop
sbb
ss
cmp
leave
mov
cmps
mov
cmc
mul
out
push
leave
das
push
fs
mov
int3
dec
inc
push
fcom
push
aam
xchg
cdq
push
cmps
add
fst
in
dec
test
ror
or
push
dec
in
mov
and
js
add
lds
push
int3
inc
popa
out
inc
fwait
icebp
cmps
cmps
sub
dec
adc
sub
push
nop
aaa
(bad)
pop
or
mov
dec
cmps
mov
call
dec
pop
retf
js
mov
lock
or
fidiv
xchg
cmp
push
leave
adc
cwde
cmps
fsubr
mov
inc
or
xor
dec
(bad)
sub
jb
push
cmp
call
lea
popf
jnp
jecxz
mov
dec
sti
lahf
out
(bad)
adc
(bad)
shl
test
daa
push
pop
sahf
mov
imul
jmp
xor
xchg
std
and
pop
add
inc
aaa
xor
loop
jb
dec
aad
aam
or
stos
mov
sar
and
sbb
xor
dec
sbb
outs
jne
das
test
pop
lea
aad
aaa
inc
dec
mov
add
aad
xchg
cmp
mov
and
sti
pop
adc
adc
shr
mov
mov
call
xor
mov
and
(bad)
pop
imul
lods
and
movs
mov
mov
ins
imul
cld
ret
shl
add
xchg
push
imul
sub
(bad)
cmc
xor
fisub
xchg
call
fucomp
xchg
mov
in
in
fmul
dec
adc
mov
and
arpl
push
mov
(bad)
(bad)
inc
iret
in
pusha
pop
inc
dec
or
jge
cmp
dec
popa
out
dec
ror
xchg
inc
clc
mov
or
adc
out
arpl
fyl2x
dec
jae
and
movs
gs
arpl
test
leave
(bad)
jno
sbb
jno
or
pop
sub
inc
ret
jl
jb
and
rcl
sbb
pusha
jp
rcr
rcl
mov
retf
std
ja
es
call
clc
and
jl
loopne
outs
xor
sti
cmp
xor
inc
leave
sub
mov
(bad)
(bad)
xor
shl
das
dec
jp
call
int3
sahf
ret
push
pusha
fldenv
jge
stos
xor
mov
adc
popf
xchg
test
xor
jmp
hlt
(bad)
call
xadd
daa
repnz
pop
in
jl
fld
mov
cmp
loopne
faddp
enter
jne
pop
nop
fs
outs
push
lods
mov
aam
xor
mov
push
mov
push
out
fst
gs
mov
icebp
xor
pop
jns
aaa
das
jle
mov
lahf
ds
cmp
sbb
das
sub
call
jge
jno
out
out
add
inc
nop
cdq
sbb
test
pushf
mov
xor
or
test
popf
jne
int3
adc
mov
cmp
stc
je
xchg
mov
stos
sbb
stos
push
cld
fld
adc
pushf
lock
es
call
inc
sub
mov
or
xchg
pusha
sbb
cs
mov
xchg
jno
dec
aas
mov
jg
mov
lods
jb
scas
cwde
shl
xor
adc
fmul
inc
jae
inc
xchg
sub
jae
pop
outs
aaa
xchg
cdq
mov
mov
retf
xor
dec
pop
jmp
clc
cld
xchg
inc
bound
nop
out
cs
in
pop
pop
mov
xchg
inc
mov
ret
xchg
push
cmp
pop
je
add
std
ret
and
test
lea
jmp
js
dec
pop
xlat
inc
(bad)
das
das
push
arpl
jp
cmp
pusha
fs
push
mov
fsub
mov
in
aas
hlt
add
rcr
inc
xor
out
cmp
jbe
cmp
int
mov
stos
es
div
outs
shl
clc
adc
dec
fldenv
xor
in
sub
ins
xchg
aaa
push
or
lea
and
dec
setne
in
and
sahf
iret
lahf
out
cld
dec
push
not
pop
ret
es
or
pop
push
mov
shl
cli
lds
in
fld
sbb
mov
xchg
sahf
mov
cwde
cdq
add
stc
cld
cmp
jg
fstp
into
mov
xchg
and
inc
icebp
out
dec
(bad)
cmp
lock
and
inc
test
mov
fstp
push
pop
scas
xchg
pop
sahf
push
aam
mov
cmp
xchg
inc
jl
imul
push
nop
xor
mov
pop
sbb
xchg
add
stos
cdq
inc
(bad)
push
pop
mov
pop
xchg
and
mov
push
sbb
cld
daa
sub
push
and
stos
adc
xor
(bad)
adc
xchg
jmp
and
in
daa
adc
cmp
push
xor
xchg
ja
pusha
clc
and
push
or
mov
ret
popf
adc
retf
add
in
and
jns
mov
outs
adc
cld
mov
and
xor
jmp
xor
jbe
or
or
lods
mov
aad
arpl
or
sbb
add
mov
mov
lods
or
retf
xchg
xchg
sti
pop
jge
xchg
mov
imul
test
repnz
sub
mov
cmp
mov
(bad)
push
jae
mov
outs
repz
arpl
inc
add
outs
push
adc
push
out
sbb
ficomp
iret
in
ins
cli
add
add
pop
adc
(bad)
push
mov
stos
cmps
xchg
lods
mov
fwait
push
and
dec
jno
inc
in
inc
sub
stos
retf
call
mov
hlt
mov
push
lods
jmp
ds
push
push
test
mov
not
cmp
cmp
mov
sub
sbb
shl
add
push
(bad)
push
cmp
or
arpl
cmp
push
sar
(bad)
cdq
or
or
in
call
cmp
idiv
xor
mov
adc
jmp
enter
cs
dec
adc
das
js
sbb
cwde
rcl
mov
mov
jl
pop
test
mov
(bad)
jl
sbb
xchg
xchg
xchg
sub
movs
jno
push
rol
jne
fwait
scas
jp
mov
sub
lods
sub
outs
push
cmps
xchg
push
add
ror
jnp
add
xor
sbb
push
stc
xor
test
mov
dec
mov
sbb
mov
or
xlat
loopne
adc
dec
push
sbb
mov
fld
into
mov
jnp
pop
imul
xchg
imul
out
ds
mov
and
cmps
sub
cmp
call
inc
add
popf
jnp
mov
scas
or
test
sub
(bad)
jb
stos
jp
jo
fcmovnbe
gs
push
mov
mov
ror
sub
test
out
in
sub
and
fidiv
mov
sahf
mov
and
arpl
ror
ins
jne
aaa
iret
(bad)
retf
mov
mov
pop
inc
pop
cmp
cmp
adc
sbb
push
mov
jp
push
push
movs
fs
mov
jecxz
or
and
add
ins
and
jle
cdq
xor
push
and
cmc
cmp
popa
mov
or
lods
out
xor
dec
jmp
daa
xchg
or
fistp
xor
sti
add
adc
fidivr
mov
jmp
add
movs
push
call
mov
dec
rcl
stos
sbb
retf
aaa
enter
jmp
cmp
dec
ss
sbb
dec
lahf
cmp
add
test
and
jl
adc
xchg
push
pop
bnd
jle
mov
inc
pop
(bad)
les
clc
call
jnp
hlt
aas
fs
mov
push
cmps
sbb
xchg
xor
sbb
nop
or
sbb
dec
inc
xchg
adc
and
cwde
xchg
inc
cmp
sub
ds
jb
mov
add
icebp
jg
dec
dec
fadd
cmp
sbb
iret
(bad)
push
xor
mov
sbb
xor
adc
sbb
and
cmp
stc
and
mov
inc
shl
les
mov
in
or
adc
xchg
and
stos
jp
sub
cwde
dec
push
and
std
xor
mov
or
sti
aad
push
inc
add
cmp
(bad)
and
mov
jo
es
and
cmps
push
aas
mov
test
and
sbb
aas
add
iret
outs
es
das
loopne
aad
xor
push
aad
jmp
mov
xchg
ret
cmps
popa
xchg
(bad)
and
sbb
(bad)
(bad)
cmc
inc
and
mov
mov
xchg
(bad)
ja
ja
dec
or
in
test
dec
pop
push
inc
jno
jg
stos
stos
lock
mov
bswap
call
neg
adc
push
pop
jg
push
pop
je
mov
imul
pop
add
mov
stos
add
adc
mov
scas
push
push
loope
and
or
lock
mov
jle
mov
lds
fnstenv
mov
or
sti
fcmovu
jmp
or
ins
dec
dec
xor
test
daa
jmp
sub
mov
add
ret
inc
loope
pop
add
cdq
ffreep
leave
mov
push
pushf
cwde
dec
adc
dec
retf
das
test
out
xchg
fldz
jo
pop
inc
mov
sub
jmp
fimul
mov
mov
lea
cmps
test
movs
int
mov
fwait
jp
lods
mov
jle
jmp
mov
fimul
stos
ja
dec
sbb
xchg
or
push
out
jg
cmp
mov
pushw
inc
push
(bad)
sub
fist
mov
setnp
(bad)
in
xor
push
in
fs
fstp
cmp
jnp
int
test
xchg
dec
pop
jmp
inc
push
(bad)
cmc
bound
mov
push
into
leave
push
mov
adc
mov
cmp
and
ss
scas
call
repz
jge
aad
push
xchg
data16
push
add
scas
sbb
mov
(bad)
cmp
stos
cmc
out
adc
mov
adc
cmp
lods
(bad)
mov
mov
movs
mov
lds
in
dec
jno
lds
jmp
and
rcl
jle
sub
imul
fsubr
jnp
mov
inc
inc
mov
mov
sbb
dec
test
ins
push
sub
xchg
mov
pop
mov
xchg
or
int3
mov
mov
mov
inc
adc
les
add
add
cmp
mov
xchg
pop
pop
push
scas
ret
xor
push
mov
imul
es
sar
mov
fdivr
push
je
loop
int
or
push
push
push
jb
mov
push
loopne
xchg
push
mov
dec
sbb
(bad)
pushfw
aam
sub
push
dec
jbe
cmp
jmp
call
fimul
lods
aaa
or
(bad)
cdq
sahf
dec
iret
fs
(bad)
movs
jmp
mov
jmp
inc
dec
cs
std
jl
ror
or
cwde
stos
dec
cmc
retf
rol
gs
mov
outs
into
mov
out
(bad)
ss
add
leave
xchg
aam
jle
jo
out
in
imul
push
sti
sbb
(bad)
sbb
mov
adc
dec
stos
mov
inc
out
adc
test
or
add
mov
sub
mov
cmps
and
clc
out
ret
inc
bound
sbb
and
push
xor
add
xchg
call
idiv
jo
mov
nop
sbb
dec
and
in
xchg
ffree
jae
fwait
mov
test
iret
cwde
add
mov
les
test
and
add
add
test
sub
sub
xchg
fs
jae
cld
scas
sahf
clc
call
adc
cmps
mov
adc
je
in
inc
xchg
jne
inc
in
sbb
mov
push
mov
adc
adc
popa
pop
jg
jo
ss
gs
lock
mov
out
jno
ret
cmp
push
or
xchg
inc
xchg
mov
cmp
int
lods
rol
mov
cmps
dec
push
jl
or
push
into
retf
repnz
sbb
sub
repz
mov
leave
cs
mov
in
test
xor
or
inc
idiv
in
push
xor
jl
movs
js
inc
test
jg
mov
sub
push
xchg
xchg
and
cmp
mov
daa
(bad)
mov
lds
mov
fimul
inc
jno
adc
inc
pop
dec
stos
push
fdiv
jmp
mov
mov
or
mov
in
sbb
je
scas
clc
ds
dec
adc
cmc
popa
lahf
xchg
and
or
add
mov
aaa
sub
arpl
adc
loope
xor
pop
bound
or
aad
sub
push
jmp
sahf
xchg
out
jno
pop
push
retf
sbb
mov
push
jb
sbb
jmp
sbb
outs
idiv
adc
mov
out
mov
rol
push
push
xor
fsubr
mov
mov
cs
aad
cmp
ret
xchg
outs
dec
addr16
mov
imul
sub
int3
mov
mov
push
cmp
idiv
mov
lds
repnz
mov
xor
xchg
stos
std
xor
jge
mov
jg
fs
mov
inc
into
scas
aas
push
adc
push
xlat
rol
jg
test
ret
jl
pop
pop
in
lock
mov
xor
gs
popa
mov
xchg
xor
dec
sub
lods
mov
pusha
push
and
cli
dec
iret
mov
(bad)
push
add
mov
add
pop
xchg
in
jo
and
pop
mov
jecxz
stos
sbb
cmps
das
mov
push
aad
mov
ss
sbb
add
push
das
sbb
(bad)
fcomp
cs
nop
je
mov
inc
and
add
outs
ins
ficomp
icebp
push
xor
(bad)
out
jmp
mov
cmp
jge
jns
movs
adc
cdq
les
xchg
mov
lock
jg
stc
and
cwde
fdiv
ins
pop
adc
scas
add
imul
adc
sbb
je
dec
sbb
sbb
movs
or
loopne
aaa
jno
daa
mov
inc
shl
pusha
test
stc
pushf
sbb
push
cli
sti
ja
leave
inc
retf
pop
push
pop
pop
sbb
ins
xlat
(bad)
sub
clc
sub
and
pusha
(bad)
hlt
pop
xchg
dec
(bad)
and
fnsave
shl
mov
sbb
std
mov
das
data16
leave
pusha
xchg
arpl
ret
or
dec
imul
bound
cwde
sub
sbb
les
lea
and
pop
test
add
sar
rcl
cmp
(bad)
mov
cwde
(bad)
enter
in
adc
push
std
adc
fnstenv
das
cmp
into
in
pop
xchg
out
mov
mov
stos
fstp
mov
fmul
aas
cmp
or
in
sub
sbb
mov
aam
sahf
jmp
add
(bad)
jbe
call
dec
rcl
in
cmp
adc
mov
int3
inc
sbb
test
dec
push
or
lea
push
push
sub
inc
pop
fiadd
enter
jmp
inc
test
cli
xchg
sbb
inc
loope
jmp
xchg
cmp
adc
mov
and
in
inc
jb
adc
cld
inc
mov
add
mov
cmp
jno
adc
dec
dec
popf
add
and
cmp
adc
xchg
test
add
clc
sub
loop
mov
lds
inc
je
loop
push
aad
test
(bad)
daa
gs
jmp
mov
jmp
or
adc
xor
or
xor
mov
xchg
out
cld
mov
ror
add
adc
pushf
jmp
add
inc
mov
fisub
or
inc
mov
add
mov
dec
mov
xchg
cmp
loope
mov
pop
mov
mov
lods
(bad)
(bad)
inc
xchg
and
sbb
iret
xrelease
mov
jle
mov
daa
cwde
loope
or
mov
mov
fldenv
and
rol
aas
push
xor
aad
imul
add
and
loopne
(bad)
mov
jae
ja
(bad)
in
pop
in
xchg
les
iret
int
sbb
cwde
ret
pushf
push
or
push
mov
js
adc
jae
mov
inc
mov
lock
(bad)
sti
in
aas
inc
dec
lods
addr16
inc
xor
xchg
mov
and
jle
push
or
(bad)
int3
or
adc
xchg
test
sub
jge
ret
mov
dec
pushf
aam
out
push
(bad)
repz
add
jmp
add
adc
pop
movs
movs
mov
std
arpl
dec
add
repz
cmp
movs
cmps
sbb
jno
mov
xchg
adc
fadd
dec
pop
jo
mov
fwait
inc
push
cli
hlt
jmp
ud2
push
movs
mov
(bad)
adc
ds
movs
xchg
pop
xor
imul
mov
push
mov
or
add
inc
jp
enter
sub
add
sub
push
cmp
jle
add
mov
dec
xor
jb
or
push
ret
xor
sbb
outs
imul
mov
xor
xchg
adc
mov
lds
ins
(bad)
rol
pop
jb
and
pop
lods
mov
test
repz
mov
lods
push
xor
pop
sbb
ficom
xchg
lds
xchg
lods
sbb
bound
fsubr
ror
outs
popf
push
sar
dec
loopne
pop
add
push
jb
lea
sbb
add
setns
loop
fcomp
cmp
xchg
ins
stc
push
xchg
stos
bound
add
xor
dec
xchg
cmc
iret
mov
cmp
pop
cli
fiadd
lahf
inc
out
xor
sbb
(bad)
retf
idiv
jle
xor
or
(bad)
mov
stos
mov
mov
movs
fsub
test
xchg
xor
jge
and
ja
sbb
add
push
lds
rcl
sub
inc
mov
dec
aam
sbb
adc
stc
jmp
or
sub
out
(bad)
mul
jne
(bad)
retf
dec
int
xchg
mov
push
test
or
push
sbb
cmp
pop
pushf
add
or
push
mov
pop
xor
fstp
nop
ja
add
pop
int3
into
fisttp
addr16
fdiv
xchg
addr16
enter
or
and
pusha
bnd
dec
xchg
cld
outs
push
or
adc
push
(bad)
push
xchg
sbb
add
mov
mov
outs
dec
push
jo
dec
loopne
xor
into
mov
cmp
in
jmp
push
mov
and
add
iret
stos
lock
ja
add
and
aad
mov
arpl
aaa
or
ins
ds
sub
mov
mov
cs
xlat
or
push
popa
sbb
sbb
pop
inc
xchg
and
xor
mov
sar
stos
sbb
enter
mov
ret
xor
test
scas
int
jge
test
push
mov
adc
daa
jg
loopne
add
xchg
jmp
jae
inc
fwait
lea
gs
(bad)
lea
pop
imul
ds
xor
push
scas
mov
mov
dec
mov
inc
jnp
mov
mov
mov
repz
dec
mov
pop
xor
lahf
ins
inc
movs
jg
push
scas
hlt
lea
stos
xor
mov
ja
adc
je
xchg
push
push
mov
jmp
mov
int3
outs
popa
adc
mov
cmp
mov
(bad)
pop
mov
jne
loopne
and
push
mov
jle
out
popa
mov
scas
stos
movs
cmps
cwde
or
xchg
int3
inc
rol
fst
add
cld
call
xchg
cmp
repnz
jge
or
sbb
loopne
test
jle
cmp
inc
out
pop
shl
lock
xchg
add
push
dec
sbb
outs
xor
popf
xor
outs
xor
adc
adc
dec
out
movs
mov
out
in
mov
inc
cmps
push
and
mov
call
lea
inc
lods
xor
push
sbb
pop
ja
out
sbb
mov
mov
call
ror
gs
test
inc
fstp
add
shr
cwde
fdiv
mov
(bad)
inc
push
push
mov
cmc
mov
int3
cmp
mov
push
fstp
cmps
mov
loop
xor
les
daa
mov
adc
or
jp
fistp
stos
dec
bound
mov
aas
and
push
cmp
inc
inc
clc
mov
out
leave
inc
daa
jnp
test
cli
inc
sbb
mov
scas
mov
imul
test
xchg
fisubr
out
ror
cwde
fild
fs
adc
xchg
nop
or
aas
outs
lods
rcl
je
dec
mov
xor
(bad)
sub
mov
dec
or
mov
stos
mov
cmps
enter
push
jns
jecxz
push
daa
inc
popa
and
lods
mov
mov
movs
jb
(bad)
out
inc
adc
mov
mov
outs
test
and
pop
and
push
sub
inc
jo
aad
mov
dec
jb
mov
xor
in
add
rcl
inc
rcl
test
add
imul
push
lods
cld
and
sar
fld
fimul
mov
mov
adc
jae
mov
paddusb
mov
ins
(bad)
cwde
pusha
int
or
clc
push
mov
outs
lods
pop
xchg
cdq
sub
pop
mov
aas
xor
jo
dec
cmp
and
lods
sub
pop
add
push
lahf
lahf
les
daa
ins
sar
mov
aad
mov
into
push
dec
rcl
xchg
and
fidivr
push
pop
pop
movs
mov
xor
jmp
lock
xor
lds
sbb
xchg
jl
rcl
xor
pop
popa
ins
xchg
xor
stc
(bad)
ret
push
jmp
pop
xchg
mov
push
fdiv
jae
sbb
inc
pop
and
cmps
pop
mov
jle
mov
sahf
inc
into
jecxz
ins
jle
sbb
rcr
ret
lods
mov
adc
fcmovnb
sbb
clc
mov
xchg
ror
mov
xchg
inc
xchg
xchg
pop
pop
and
fsin
into
mov
adc
aas
sbb
push
jae
add
ret
pop
cmp
inc
or
inc
jmp
das
(bad)
mov
mov
test
pop
gs
and
movnti
jno
inc
or
adc
jbe
cmp
mov
cwde
fisub
jmp
adc
mov
sbb
add
xchg
mov
add
out
ins
mov
rol
mov
std
push
mov
xor
cmc
popf
add
loopne
inc
mov
cmc
rcl
pop
adc
cmp
mov
cli
and
mov
add
inc
std
fnstcw
pusha
mov
out
cdq
xchg
xchg
cmp
dec
popf
push
dec
fstp
inc
movs
dec
int3
jmp
repnz
xchg
les
sahf
sub
fcomp
mov
cmps
(bad)
loope
push
imul
push
inc
dec
shl
mov
fnsave
push
mov
ins
div
mov
mov
repnz
jecxz
sub
xor
ds
mov
iret
and
dec
add
loopne
popa
jne
imul
jmp
pop
cmps
movs
mov
adc
xor
cs
cli
mov
mov
sbb
add
cld
or
sbb
fcomi
cdq
pop
cmp
mov
mov
hlt
ins
hlt
mov
xchg
push
ins
jne
fist
push
call
and
sub
mov
out
lods
retf
sar
loopne
jbe
enter
in
jecxz
mov
popf
hlt
mov
popa
pop
mov
dec
sub
adc
cmp
pop
push
(bad)
stc
pushf
pop
iret
xchg
cmp
mov
loopne
test
cmp
mov
xor
daa
pop
cmp
add
sar
push
mov
movs
(bad)
adc
jo
cmp
xor
mov
xor
ins
test
clc
mov
pop
sub
out
test
inc
and
scas
push
retf
shr
pop
or
sub
dec
push
sbb
push
shl
leave
shl
lods
xchg
les
dec
and
test
inc
ja
adc
dec
mov
loopne
push
enter
into
dec
je
aas
test
mov
push
mov
cmp
nop
mov
jnp
cmp
jo
or
jecxz
sub
mov
pop
mov
mov
out
jp
sub
in
jnp
test
push
repz
nop
scas
(bad)
mov
(bad)
push
push
int3
fadd
pusha
pushf
jns
or
dec
test
jp
in
loop
fisttp
xchg
adc
xor
(bad)
dec
push
mov
daa
cmp
pop
mov
pop
lods
fldcw
or
out
mov
in
xchg
mov
int
xor
mov
sar
mov
gs
scas
and
sub
add
or
cdq
jae
ret
es
and
lock
push
and
cmp
sbb
(bad)
sub
cmps
jge
and
idiv
or
popf
scas
rcr
test
fistp
mov
jg
ror
(bad)
jo
xchg
mov
stos
out
test
pop
dec
sbb
pop
inc
lock
(bad)
mov
xchg
pop
inc
xchg
xlat
loop
arpl
fdivr
in
xor
jp
not
addr16
cmp
popa
add
icebp
push
sub
xchg
jmp
movs
sbb
sub
clc
inc
sbb
cdq
movs
cli
xor
xchg
xchg
xlat
push
inc
outs
xchg
out
ror
lods
sbb
inc
jne
dec
inc
sub
jp
or
cmp
enter
loopne
sub
jle
xchg
push
sahf
movs
and
cmp
xor
add
pushf
mov
gs
xchg
jmp
jmp
dec
das
imul
cdq
xor
popf
fwait
push
call
imul
mov
neg
popa
push
mov
stc
out
add
or
xor
test
fldenv
sub
pop
sbb
adc
pop
ja
mov
std
jle
loopne
xchg
sbb
jp
into
dec
jmp
iret
repnz
cld
pushf
inc
ja
pop
inc
mov
adc
sbb
in
repz
mov
je
in
in
push
stos
inc
jp
arpl
fcom
add
fisubr
movs
jmp
push
les
or
inc
ret
ins
(bad)
pop
ins
inc
mov
mov
sbb
sub
add
mov
inc
cmp
popf
ja
stos
add
inc
jno
pop
imul
rcl
sbb
shr
inc
inc
or
push
add
test
loop
sbb
daa
dec
stc
scas
cmp
inc
cmp
int
(bad)
push
loopne
and
in
inc
mov
not
and
jno
loope
pop
lds
std
neg
call
mov
gs
sbb
aaa
es
(bad)
mov
test
inc
stos
push
int
aas
mov
dec
sbb
add
aad
pop
mov
and
adc
in
in
xor
arpl
cwde
push
in
scas
mov
sbb
adc
arpl
mov
or
mov
shl
add
and
inc
cmps
push
mov
loopne
inc
and
pop
ds
push
xor
jg
add
lods
dec
cdq
and
pop
ret
nop
or
(bad)
bound
jne
cmp
mov
(bad)
push
lds
fwait
inc
ret
sbb
xor
jae
push
shr
cld
sbb
add
cs
push
or
xchg
mov
test
ins
cld
stc
rcl
dec
fidiv
push
pop
inc
ror
scas
xlat
sub
movs
aad
ror
mov
int
xor
dec
les
inc
push
sub
ja
mov
(bad)
lods
cmp
dec
(bad)
fisub
imul
popf
je
fnstenv
lds
leave
gs
pusha
inc
repz
fwait
daa
in
cmp
push
pop
test
xchg
dec
int
cmp
push
cmps
mov
les
(bad)
sahf
test
inc
mov
in
call
(bad)
sbb
ficomp
aaa
pop
xor
xor
lds
iret
cmps
ret
out
call
adc
ret
std
cmp
in
shr
not
inc
daa
pavgw
fisub
pop
mov
adc
jle
movs
ror
jmp
and
pop
jns
cmp
mov
add
sbb
inc
cmp
movs
mov
cmp
jb
and
daa
mov
sub
pop
dec
push
jge
js
xchg
stc
push
fnstcw
das
push
in
js
cmp
int
(bad)
cmp
or
sbb
scas
(bad)
pusha
lahf
stos
xor
mov
leave
sbb
ss
pop
or
jg
pop
jle
in
shr
cs
loopne
push
push
push
shl
sahf
call
test
shl
imul
cld
aad
enter
das
jmp
jb
push
push
lds
ja
int3
cmp
sub
fmul
stos
and
xchg
mov
cmps
test
popf
xchg
adc
repz
retf
mov
jl
jmp
xchg
int3
loope
cs
out
ret
dec
and
(bad)
in
push
xchg
cmp
(bad)
xlat
in
pop
icebp
inc
fxch
push
add
mov
mov
pop
mov
sbb
fsubr
fistp
cmp
jecxz
mov
mov
add
sar
pop
repz
pop
dec
ja
dec
les
pop
cmp
push
ret
pop
push
das
or
push
mov
add
jge
scas
loopne
into
or
(bad)
stos
pop
popa
ja
aas
inc
shr
cmp
or
dec
pop
icebp
int
xor
scas
adc
mov
or
or
inc
int3
sub
lock
test
pop
bound
mov
xor
imul
pop
repz
je
xor
cdq
sar
test
scas
aas
cld
test
xor
rol
and
retf
dec
pop
pusha
imul
mov
call
call
xor
retf
aaa
loope
push
es
xchg
dec
xchg
xor
into
sbb
sbb
nop
cmp
xchg
sbb
pop
(bad)
sti
inc
jecxz
fdivr
mov
idiv
xchg
dec
mov
xchg
sahf
inc
pop
xor
or
dec
pop
add
or
mov
or
sub
out
fadd
enter
pusha
dec
les
xor
cld
mov
pusha
push
mov
and
sbb
mov
or
mov
test
movs
jne
mov
popf
sub
push
shl
jg
sbb
enter
ret
sbb
dec
mov
cmc
or
shr
inc
cli
rcr
ds
add
icebp
int
ja
pop
jmp
xchg
xchg
das
jecxz
xchg
dec
xlat
stos
add
xor
or
mov
xor
xchg
adc
ins
xor
les
jl
push
or
test
pop
(bad)
test
jecxz
test
pop
mov
inc
sub
mov
push
and
mov
js
inc
data16
jmp
push
aad
int
xor
sub
add
jg
sar
pop
or
iret
jb
loope
lea
icebp
cmp
dec
inc
or
push
popa
test
sub
shl
sbb
repnz
cli
cwde
outs
test
icebp
dec
in
rcl
mov
add
icebp
cld
push
and
out
cmp
stos
mov
cmps
out
sbb
mov
cmp
iret
add
mov
aaa
dec
daa
movs
out
mov
int3
dec
mov
cmps
inc
cdq
rcl
xchg
shl
aad
sbb
push
push
ins
imul
bound
push
and
mov
pushf
cmp
jecxz
cs
add
jmp
fwait
mov
rcl
not
cmp
outs
lods
add
mov
mov
out
rcr
or
sahf
xor
push
and
imul
push
stos
icebp
and
dec
pop
adc
xor
xchg
loopne
sbb
xlat
out
cmp
xor
pop
mov
sbb
sbb
add
or
xor
pop
mov
loope
dec
paddw
jg
push
aaa
enter
loope
loope
cdq
push
daa
ins
jnp
lock
out
fadd
xchg
and
push
fucomi
fwait
add
inc
sub
xor
lea
and
out
sub
shr
push
mov
test
xchg
cwde
loopne
mov
aam
cld
(bad)
xor
stos
sbb
mov
cmp
and
call
xchg
or
add
sbb
and
xchg
fisubr
cmps
and
pop
xchg
mov
push
icebp
test
sbb
pop
rcl
jmp
pop
push
test
or
or
sbb
clc
jne
dec
fs
jle
add
mov
mov
fcomip
clc
rcr
ficomp
and
hlt
fiadd
(bad)
adc
and
adc
dec
mov
shl
(bad)
leave
sbb
push
fisub
daa
aas
mov
push
retf
and
inc
ret
pop
movs
int3
adc
outs
int
pop
out
stos
cmps
in
aam
or
daa
mov
push
and
ret
mov
inc
in
push
xor
pop
xchg
leave
outs
hlt
adc
and
lock
cmp
or
push
test
ror
jns
and
call
fyl2xp1
cmp
xor
push
sub
push
hlt
sahf
fsubr
test
mov
and
mov
xchg
sti
pop
jge
adc
sbb
adc
aad
hlt
jecxz
popa
arpl
aad
pop
sub
inc
ret
mov
sahf
ins
in
test
xor
mov
push
retf
jno
pop
pop
push
(bad)
ficom
mov
jecxz
and
es
xchg
dec
dec
ret
fs
imul
sbb
cwde
adc
int3
loope
cmps
xor
daa
fistp
fld
das
pop
mov
call
mov
ja
xor
inc
push
lahf
lock
pop
sar
test
xchg
xor
je
shl
or
or
cmp
nop
xchg
jb
xor
stc
push
scas
outs
sbb
cmp
neg
adc
imul
jg
push
jmp
imul
sbb
shr
call
or
sbb
div
or
hlt
stos
xchg
jge
jo
add
das
stos
xchg
push
popf
fidivr
pop
sbb
daa
cmc
es
or
lods
call
addr16
ss
cmovs
push
mov
pop
in
inc
loope
cmps
lods
and
mov
iret
idiv
xchg
ret
mov
push
xchg
or
push
jbe
cmp
inc
pop
shr
test
sub
mov
icebp
test
das
out
and
inc
mov
fcomp
scas
inc
jl
cwde
ja
xchg
pop
or
gs
xchg
jnp
movs
ss
mov
lea
xor
(bad)
stos
aam
fcmovb
xchg
(bad)
mov
push
fwait
out
dec
mov
jmp
jle
sub
add
scas
test
xor
mov
dec
inc
hlt
inc
dec
sbb
iret
pop
out
and
sti
jo
repnz
jle
aas
pop
mov
xchg
sbb
iret
(bad)
mov
aad
push
push
sbb
adc
cmp
mov
inc
daa
xchg
xlat
int
(bad)
and
cmp
mov
mov
fld
jecxz
mov
(bad)
sub
das
loopne
daa
sbb
adc
jno
cmp
inc
retf
push
fist
jo
scas
sbb
add
fisttp
add
xor
sub
pop
and
mov
and
sbb
pop
sub
out
lahf
inc
aam
mov
adc
jmp
popf
pop
mov
jns
rcr
in
popa
hlt
push
int
and
jp
add
popa
retf
sti
pop
inc
mov
xchg
sbb
sahf
ret
rcr
neg
xchg
cmc
imul
sbb
lea
(bad)
mov
mov
mov
stos
and
adc
(bad)
adc
aaa
mov
add
scas
mov
shl
in
add
add
in
cdq
das
lock
xor
les
(bad)
xor
mov
inc
sub
sub
sub
outs
int3
inc
rol
stc
test
mov
adc
push
pop
mov
xor
shl
mov
xchg
lahf
xchg
(bad)
push
rcr
enter
add
sub
int3
sbb
out
sbb
lods
int
ret
fdiv
push
jmp
mov
jne
xor
bound
ret
jmp
xchg
push
adc
mov
sbb
aaa
out
bound
add
mov
jns
(bad)
call
dec
loop
sbb
inc
xchg
xor
push
pop
test
idiv
imul
dec
fcomp
jbe
dec
pushf
stc
jne
jnp
ror
sub
dec
sub
dec
dec
in
sbb
test
mov
cmps
mov
and
jle
xchg
sub
jmp
ins
sub
push
and
mov
sub
add
(bad)
push
add
xor
dec
adc
rcr
(bad)
call
xor
(bad)
iret
or
js
cwde
loop
imul
xor
xchg
sbb
retf
or
popa
sub
push
(bad)
inc
mov
test
jno
jns
or
out
shl
inc
pop
push
xor
and
ret
jmp
scas
sbb
or
ins
mov
gs
lea
enter
cdq
hlt
xor
adc
xor
mov
pop
sub
inc
jp
call
int
sub
gs
xor
scas
xchg
test
ja
mov
xchg
sbb
ins
mov
or
ins
sbb
sbb
jl
or
jo
pop
mov
xchg
pop
or
pusha
inc
call
mov
sti
sbb
daa
inc
mov
pop
test
pop
and
inc
xchg
mov
sub
pop
mov
xor
fisttp
clc
cmps
outs
in
add
pop
add
jmp
lods
icebp
and
mov
push
jbe
pop
in
in
movs
and
adc
pop
or
pop
add
iret
cmc
xchg
daa
adc
xchg
in
xor
lods
or
lock
aam
scas
sbb
icebp
popf
pop
fistp
cmp
sub
sbb
fs
iret
shl
jg
mov
push
add
icebp
(bad)
jnp
inc
in
aam
and
xor
xchg
call
jle
mov
mov
arpl
es
dec
pop
mov
aam
xchg
xchg
cmp
and
rcr
dec
ror
das
loopne
out
inc
and
js
pop
(bad)
jmp
jb
xor
imul
enter
or
inc
(bad)
and
inc
dec
xor
cmp
lods
adc
or
dec
cmps
xchg
mov
push
cmp
pop
and
popa
aaa
js
adc
mov
out
jb
dec
stos
cmps
ja
push
pop
jmp
call
mov
cld
xchg
push
push
add
lods
in
sbb
and
out
mov
push
mov
stc
lods
adc
jge
clc
mov
xor
or
aam
sub
jb
cs
or
cwde
xchg
sar
dec
pop
pop
add
push
xor
fadd
push
lds
pop
shl
pop
pop
out
inc
mov
dec
cmp
lock
(bad)
inc
sbb
push
into
push
retf
addr16
mov
fisttp
or
or
mov
mov
xchg
sub
sub
inc
dec
pop
inc
add
icebp
rcr
pop
loopne
aaa
lds
sub
add
shl
popf
imul
retf
imul
xchg
dec
jns
jg
(bad)
aam
cmps
hlt
outs
nop
add
add
mov
inc
jecxz
mov
pushf
cmps
jb
ret
imul
jmp
add
mov
nop
mov
in
shr
xor
add
sbb
test
aas
je
inc
add
or
(bad)
iret
out
or
inc
sub
cmp
push
hlt
pop
dec
mov
or
push
jns
popa
js
jecxz
(bad)
inc
mov
sahf
mov
jbe
push
xchg
dec
outs
(bad)
or
cli
pop
xchg
mov
cmc
jo
lods
jne
lds
dec
sahf
inc
repnz
ret
popa
into
jmp
jne
out
jmp
pop
(bad)
push
bound
cmc
sub
lahf
fisttp
arpl
push
aas
push
daa
xchg
xor
mov
sbb
push
ret
jo
test
stc
into
and
xor
jo
jmp
lahf
adc
pusha
loope
push
mov
in
jmp
ins
leave
or
xchg
inc
das
rcr
adc
fucom
hlt
jno
sub
mul
push
mov
dec
arpl
adc
add
jge
test
mov
mov
in
pop
and
leave
mov
xor
stc
xor
cmps
add
or
dec
mov
inc
xor
push
cmp
stc
call
pop
dec
xlat
inc
jno
pop
outs
pop
cmp
jp
push
xchg
xchg
std
nop
clc
ins
or
jmp
lahf
jle
icebp
aaa
adc
cmp
or
int
xchg
in
xchg
cmps
cli
mov
fs
movs
test
loope
test
es
xchg
push
ss
xor
and
(bad)
data16
fwait
sub
retf
aaa
rcr
loope
in
loop
add
pop
sbb
push
cmps
xor
jno
mov
push
adc
dec
retf
dec
cmps
sub
pop
pop
xchg
dec
int3
sub
pop
mov
mov
hlt
into
sahf
lea
jnp
das
test
std
clc
sub
xchg
imul
xchg
mov
mov
xor
in
leave
int3
out
call
mov
cdq
add
out
ss
or
lock
out
cmps
(bad)
fdiv
mov
add
push
jp
xor
pop
dec
push
mov
ret
stos
rcl
and
jb
jecxz
or
cdq
(bad)
inc
push
push
push
cld
test
addr16
pop
mov
push
pop
stos
jns
mov
les
jbe
xchg
pop
fistp
cwde
push
aam
adc
cmps
outs
icebp
adc
or
dec
bound
inc
cmp
cmps
push
sti
repnz
push
inc
or
in
or
(bad)
and
and
out
inc
add
jecxz
in
xlat
and
jbe
or
mov
mov
loop
cmp
and
(bad)
or
sbb
xchg
(bad)
and
call
daa
cmp
ror
(bad)
hlt
pusha
sub
or
push
jnp
lock
push
lods
adc
pop
dec
dec
repz
int
or
scas
sbb
add
cmps
jg
dec
int
xchg
inc
jp
sub
iret
movs
jmp
xchg
cmp
jmp
test
sti
pop
pop
sub
out
ret
scas
dec
sub
ja
cmp
sbb
sbb
pop
retf
mov
sub
jl
div
jns
push
pop
sbb
cwde
fmulp
xor
mov
jo
add
fstp
sbb
dec
add
aad
cmp
outs
xchg
repnz
cld
mov
xchg
sub
push
inc
popa
pop
dec
sti
mov
jl
jmp
mov
inc
cmps
add
xchg
dec
ds
test
shl
or
adc
xchg
out
enter
pusha
push
cmovb
adc
pop
dec
loope
lds
int
arpl
inc
repz
into
je
mov
clc
xchg
pop
xor
inc
adc
push
jnp
inc
mov
inc
pop
add
jae
sub
dec
push
ficomp
mov
or
out
cmp
cmc
push
and
mov
rcl
in
stos
push
ret
lea
xor
es
cmps
rcl
xchg
rcr
mov
fisub
out
jnp
mov
inc
pop
fdiv
leave
mov
sub
sub
xchg
push
ret
xor
pop
jo
or
test
mov
inc
hlt
ret
dec
push
jae
push
pushf
xor
jg
sbb
mov
sub
int
mov
push
add
push
add
or
aaa
movs
ss
cmp
and
xor
or
xchg
ret
dec
add
push
push
fwait
mov
pop
sbb
sub
(bad)
xchg
fistp
push
dec
push
adc
sbb
repnz
sbb
outs
or
ret
retf
leave
push
jmp
mov
sti
test
xchg
jns
ins
popf
repz
xor
test
xchg
arpl
dec
mov
adc
xchg
popf
scas
fsubr
and
mov
cmp
push
leave
jmp
dec
pop
xor
loope
lock
movs
loopne
fmul
mov
ret
mov
daa
mov
out
fmul
cwde
test
ss
jle
int
sahf
add
(bad)
fdivr
push
int3
pop
add
cmp
pop
cwde
jge
push
mov
sub
ins
sahf
out
icebp
test
out
fs
fistp
inc
mov
jae
call
pop
adc
sbb
ret
sbb
add
(bad)
dec
hlt
xchg
sub
inc
int
pop
adc
outs
jp
jo
movs
addr16
jle
in
aas
jecxz
inc
cmp
jp
cwde
jae
push
mov
push
jg
mov
sbb
cmps
iret
jle
shr
adc
in
rol
xor
outs
jo
push
cmc
mov
cli
add
test
repnz
pop
pop
or
loope
mov
in
test
jno
gs
cmc
sbb
xor
push
push
dec
outs
out
sbb
add
xor
xchg
stc
test
jmp
inc
cld
mov
push
in
outs
pop
sti
xchg
inc
dec
push
jl
loope
pop
mov
sbb
retf
bound
sub
jle
icebp
adc
add
mov
push
jnp
or
movs
or
ds
out
jp
cmp
pop
mov
enter
xchg
xchg
jbe
imul
push
(bad)
dec
xchg
push
enter
fist
loop
inc
test
jl
aas
fwait
clc
shl
or
jb
jecxz
mov
xchg
retf
dec
fistp
mov
sub
stos
mov
fst
xor
inc
xor
inc
pusha
or
lods
pop
(bad)
in
xchg
outs
(bad)
into
push
fmul
jbe
in
add
mov
stc
dec
and
data16
out
mov
add
icebp
sub
std
not
adc
pop
out
ins
mov
inc
sar
data16
in
aas
lahf
push
ror
push
dec
sbb
int
push
jmp
jle
xchg
(bad)
imul
jmp
and
pop
or
pushf
leave
mov
or
out
add
add
test
and
(bad)
cmp
cld
and
loopne
add
xchg
cmp
stos
popa
adc
inc
mov
push
cmp
clc
(bad)
push
aam
xchg
mov
push
sub
add
push
out
dec
sub
scas
sbb
adc
(bad)
jae
mov
mov
push
stos
retf
inc
out
(bad)
or
cmp
fsub
pop
movhps
push
addr16
mov
and
jecxz
inc
pop
jae
cwde
or
and
mov
cmp
and
ror
bnd
cdq
popf
mov
add
arpl
sahf
pop
jg
les
outs
jl
clc
fst
(bad)
push
mov
mov
mov
lods
cli
mov
adc
in
addr16
xchg
dec
inc
js
add
nop
iret
push
retf
push
xchg
xchg
mov
cdq
das
fwait
sbb
and
adc
jne
cmps
dec
mov
ja
movs
lahf
cld
add
mov
in
pop
xchg
in
dec
mov
jns
fisubr
xchg
out
fstp
fldcw
and
xchg
dec
adc
dec
add
push
push
imul
dec
(bad)
imul
sar
push
test
sub
punpckldq
lea
dec
(bad)
(bad)
stc
loopne
mov
mov
adc
add
daa
inc
nop
pusha
test
sub
hlt
nop
lods
mov
neg
frstor
adc
outs
adc
push
cli
loope
call
jne
and
or
push
cmps
xchg
fwait
mov
adc
jbe
jae
pop
mov
xor
adc
jecxz
fcom
sub
std
int3
mov
mov
fwait
test
jnp
ror
sbb
push
dec
int3
test
adc
jmp
(bad)
movs
sbb
loopne
inc
mov
mov
push
stos
out
in
out
aad
and
dec
jp
mov
in
push
push
mov
dec
out
sti
mov
pop
cmp
mov
inc
mov
dec
or
push
std
adc
pop
jnp
clc
jmp
cmp
mov
into
pop
rcr
push
test
sub
adc
in
fcmovu
adc
add
dec
sub
stos
inc
or
mov
clc
mov
movs
fs
mov
jmp
dec
mov
mov
fild
sahf
push
ins
fist
push
aam
stos
(bad)
mov
add
jbe
xchg
lea
idiv
(bad)
jge
inc
mov
in
scas
pushf
or
stc
iret
div
xchg
adc
adc
mov
repnz
mov
lods
and
ds
test
xor
pop
jl
iret
jecxz
jg
lea
mov
xchg
xor
push
mov
sbb
movs
js
mov
(bad)
lea
cmp
fiadd
arpl
xor
(bad)
jmp
lds
je
loop
sbb
push
pop
popf
out
fst
sub
jl
sub
dec
(bad)
xor
jns
pop
xor
add
cmp
and
cmps
jnp
and
or
push
pop
data16
out
cli
nop
ins
xchg
sub
sub
popf
in
push
inc
lahf
dec
in
bound
rcr
inc
xor
push
mov
adc
out
push
add
test
jo
test
and
int3
icebp
loop
sbb
sub
mov
repz
pop
mov
mov
adc
push
jno
push
adc
jmp
mov
retf
mov
cmc
dec
dec
lahf
xchg
fwait
xor
or
dec
popa
dec
push
adc
xchg
fdiv
(bad)
cmp
dec
ficomp
or
adc
adc
push
cmp
pushf
loopne
mov
inc
or
pop
xchg
test
xchg
dec
xchg
or
sub
add
pop
imul
lahf
arpl
iret
and
loop
jb
pop
or
loopne
pop
cmps
ja
xor
adc
pop
xchg
push
sbb
jo
test
add
adc
xchg
jo
mov
push
cmp
or
fsub
cwde
add
retf
movs
nop
(bad)
sti
xor
push
push
push
inc
push
je
xchg
repz
mov
ficomp
lea
enter
adc
mov
xchg
jne
into
xchg
mov
test
scas
mov
sar
es
sub
pop
push
push
ds
sub
in
out
outs
pushf
jecxz
imul
xchg
push
pop
clc
mov
xor
mov
push
dec
cld
xlat
(bad)
lea
xchg
fwait
mov
jmp
push
pop
pop
jecxz
shl
mov
adc
sti
aas
add
lock
jbe
das
push
xchg
xchg
dec
daa
(bad)
mov
jg
cmc
into
pop
inc
test
retf
icebp
(bad)
test
add
imul
loop
pop
adc
in
mov
pusha
cmps
mov
in
cdq
loope
into
repnz
out
mov
imul
das
das
ret
leave
mov
(bad)
aas
int
cmps
mov
cli
ins
push
cld
mov
ss
fbld
(bad)
cmp
in
pushf
push
lods
jp
jmp
inc
and
mov
aam
xchg
outs
out
jmp
call
sbb
call
(bad)
fimul
int
push
fimul
mov
outs
push
lds
(bad)
cmp
xlat
sub
and
fistp
mov
popf
dec
pushf
out
jo
addr16
sub
fcom
icebp
mov
sub
les
cmps
adc
inc
repz
scas
jb
call
fs
dec
leave
pop
das
mov
cmp
js
xchg
dec
lea
sbb
dec
pop
sub
sbb
adc
inc
fadd
loope
mov
adc
(bad)
xor
das
lock
and
sub
jecxz
sti
loope
out
adc
cmp
cmp
and
and
scas
cmps
sbb
cmovb
xchg
popa
movs
loope
add
icebp
(bad)
popf
dec
or
ins
mov
retf
in
ja
mov
scas
sub
mov
or
movs
retf
xchg
cmp
cwde
jle
xor
add
jae
dec
repz
inc
push
aas
neg
loop
outs
scas
out
xchg
xor
or
dec
inc
rol
push
outs
lahf
push
and
sti
cmp
xor
retf
lds
adc
sbb
inc
out
out
mov
cs
pusha
inc
adc
std
adc
xor
push
call
gs
sbb
or
cld
loop
call
call
mov
or
nop
ins
in
or
lahf
xchg
ret
cld
fwait
xor
xor
jae
sbb
push
adc
in
mov
cld
push
daa
shr
inc
dec
sar
and
mov
dec
in
call
test
or
jbe
(bad)
adc
and
push
push
xchg
lods
adc
popa
sbb
push
hlt
dec
leave
aad
jmp
cmp
cmp
cwde
mov
push
sbb
ja
pop
dec
mov
mov
and
loopne
dec
rol
cwde
retf
ins
mov
nop
sub
adc
or
pop
es
mov
mov
mov
push
cmc
and
nop
fbstp
ret
add
cmc
iret
jle
adc
addr16
in
and
mov
mov
outs
movs
sub
cmps
jo
pop
lods
push
daa
push
loopne
mov
mov
test
in
cwde
push
inc
push
rcl
fwait
ins
jmp
sahf
mov
repz
mov
movs
inc
and
or
pop
imul
imul
ja
ins
push
push
push
retf
es
sub
lods
imul
push
sbb
mov
jg
scas
icebp
loope
in
out
and
xchg
or
xchg
cmp
adc
shl
cmp
data16
sbb
mov
and
push
pop
cmp
fisttp
test
cmc
inc
cmp
cmp
in
fcom
cs
xor
mov
adc
xor
mov
in
and
pop
loop
stos
and
ret
cli
ret
push
adc
adc
sbb
inc
sub
cmp
xchg
or
outs
and
fmul
inc
push
push
(bad)
sbb
movs
shr
add
or
or
ret
push
and
mov
ror
test
jae
xlat
sbb
fistp
pop
mov
movs
adc
sbb
xchg
add
push
cmps
ja
test
xor
ret
pop
clc
dec
jle
add
test
inc
sbb
loopne
cmp
fs
mov
cmp
addr16
xor
repnz
cmp
dec
fimul
mov
test
cmp
scas
xlat
push
imul
loopne
xchg
adc
cmp
dec
inc
sti
inc
push
jae
add
retf
dec
ds
push
inc
movq
out
div
xchg
lahf
push
pop
push
jmp
cli
xchg
add
arpl
sub
cwde
imul
aam
(bad)
ret
add
xchg
call
sbb
jae
jmp
mov
sub
jmp
and
mov
adc
daa
sbb
icebp
add
dec
loopne
dec
dec
inc
adc
add
inc
pop
xor
push
rol
lea
(bad)
and
sub
or
repz
ds
cdq
out
idiv
xor
or
mov
jl
daa
cs
and
mov
in
imul
jb
jnp
push
pushf
scas
sbb
gs
iret
ret
xchg
jb
mov
dec
add
(bad)
(bad)
sbb
daa
sub
dec
call
push
push
dec
icebp
cld
pop
out
stos
xchg
xor
mov
cmp
and
fisttp
call
es
jno
lds
jp
and
fidiv
jnp
and
push
ss
loopne
(bad)
fld
bound
jge
arpl
cmps
dec
mov
popa
or
into
retf
leave
aas
clc
xor
in
int
xor
mov
in
fiadd
jle
(bad)
xor
out
call
ret
or
inc
inc
inc
mov
not
adc
cs
sbb
xchg
das
inc
outs
aas
mov
test
movs
dec
sbb
inc
mov
pop
in
pushf
leave
adc
pop
dec
jb
mov
push
ss
adc
outs
push
fld
mov
lahf
dec
lea
inc
ret
dec
jne
test
mov
fisttp
jno
rcr
mov
sbb
cmp
pop
xor
out
cmp
jge
adc
(bad)
mul
jno
adc
or
imul
leave
ror
and
xchg
enter
jl
sti
in
pop
loope
push
cmps
push
or
dec
dec
dec
stos
pushf
dec
cmp
cmps
mov
jecxz
retf
cmp
xchg
enter
cmp
pusha
or
mov
mov
pop
cmp
aam
dec
out
int
test
sub
cmc
mov
(bad)
call
repz
mov
pushf
xchg
xchg
add
test
cmp
imul
(bad)
cmp
mov
out
jo
in
outs
cld
mov
mov
pop
mov
sahf
popf
push
cmp
stos
mov
mov
das
aas
das
pop
sbb
inc
jge
cmp
inc
adc
pop
cmp
xor
jmp
shl
retf
mov
jo
js
(bad)
adc
and
push
pop
jge
dec
pop
out
xchg
pop
cmp
mov
push
cmp
lea
mul
gs
clc
xchg
jecxz
int3
popa
bound
cs
inc
or
out
push
cmps
ss
ret
mov
cmp
(bad)
ret
inc
pop
mov
movs
rol
jne
aam
ret
cld
repnz
call
stos
sbb
test
or
jecxz
jae
clc
rol
add
mov
xchg
jl
push
sbb
sbb
cmp
push
sahf
std
dec
imul
jne
jo
movs
push
hlt
in
dec
push
push
add
sub
loopne
mov
mov
test
or
jo
pop
pop
fistp
pop
xor
scas
iret
add
fimul
jno
sub
les
adc
mov
push
adc
out
xor
push
repz
int
mov
mov
ss
pushw
shl
mov
xchg
add
movntq
out
jmp
sbb
icebp
imul
sti
inc
jae
adc
jo
int3
(bad)
(bad)
iret
(bad)
leave
fistp
or
xor
pop
ins
sar
repz
(bad)
mov
inc
mov
icebp
cmp
aam
pusha
inc
mov
sub
xor
jg
mov
xor
sbb
repnz
push
cmp
mov
in
test
add
inc
adc
std
rcr
adc
ss
scas
data16
adc
push
mov
cs
pop
test
jmp
mov
pop
out
mov
fidivr
enter
sbb
jle
aam
or
add
mov
push
(bad)
jge
div
pop
adc
in
pushf
mov
mov
cwde
pusha
loopne
fnstcw
or
fstp
sbb
pop
jmp
mov
mov
cld
out
jg
adc
sti
mov
ja
mov
sbb
jmp
cmp
or
sbb
xor
daa
(bad)
cmp
mov
leave
adc
fcomp
xacquire
mov
minps
push
outs
cld
repz
mov
xor
aaa
jne
mov
push
aaa
jae
stc
and
ins
add
sub
push
cmps
sub
dec
cmp
call
or
ja
sub
jns
pusha
jbe
mov
dec
arpl
pop
stc
popf
sub
xchg
mov
xchg
popf
adc
jle
push
adc
mov
jmp
cmps
add
jmp
cwde
dec
dec
lahf
cmp
cli
dec
mov
xor
dec
sbb
adc
fst
enter
ins
push
push
(bad)
and
ret
shl
adc
jle
sub
enter
stos
dec
sahf
loopne
popa
jo
ss
shl
add
mov
xlat
cs
and
cs
fadd
jns
in
jl
(bad)
std
sti
push
mov
push
in
stos
xor
icebp
out
stc
cdq
or
sub
sbb
adc
push
jne
adc
mov
mov
and
adc
movs
inc
xor
popf
cmp
in
or
pop
push
push
lods
ror
jge
xchg
(bad)
dec
xor
add
mov
ret
mov
adc
pop
inc
int
mov
push
out
adc
mov
or
ds
and
repnz
nop
push
fbstp
lods
js
and
pop
mov
mov
pop
test
mov
or
mov
fisttp
rcr
xor
scas
into
call
xchg
jle
mov
jp
push
sbb
or
sbb
adc
imul
cmp
ror
stc
xor
push
sbb
aaa
inc
xchg
stos
pop
retf
push
jl
or
or
mov
cmp
fnclex
adc
cld
nop
lock
ss
data16
dec
cmp
(bad)
jge
pop
and
sbb
addr16
rol
mov
inc
sbb
xor
iret
ds
cmp
pushf
popa
pop
jbe
sti
xchg
pop
xchg
in
fiadd
imul
addr16
mov
imul
test
lds
inc
add
sub
jbe
arpl
cmp
fwait
pop
loope
sti
dec
jmp
pop
aad
jmp
in
inc
cdq
neg
dec
push
xchg
mov
jge
add
xchg
scas
mov
mov
lahf
push
fnstsw
ss
inc
add
retf
xchg
fnstenv
cs
(bad)
(bad)
pushf
pop
mov
cs
mov
call
mov
pop
or
xor
adc
icebp
sub
mov
rcr
or
fwait
jg
mov
sbb
xchg
push
(bad)
(bad)
lods
jp
call
jl
xchg
fwait
jno
imul
dec
not
mov
mov
xchg
daa
adc
call
div
les
and
cmp
add
scas
inc
scas
mov
test
inc
push
sbb
mov
retf
frstor
pop
sti
cmp
jecxz
cdq
retf
repz
add
fdivr
mov
add
aaa
cld
outs
push
out
scas
sar
(bad)
xor
mov
inc
les
fdiv
cmp
sbb
cli
cmc
adc
and
dec
cmp
fs
sti
jmp
sub
fld
push
shr
cwde
adc
ins
sbb
sbb
loop
imul
scas
mov
(bad)
push
icebp
adc
es
test
movs
adc
jb
ficom
add
lock
nop
push
ss
xor
jmp
outs
mov
sub
ss
test
in
xor
mov
mov
cmp
inc
sbb
sbb
add
dec
xchg
repz
mov
xchg
mov
pop
stos
push
mov
push
(bad)
xor
cmp
add
pop
or
in
jecxz
mov
and
loope
sub
stc
and
or
push
pop
add
push
pusha
ja
cmps
push
and
fwait
call
popf
jne
mov
adc
call
out
mov
hlt
add
push
push
jns
push
xor
shr
test
xchg
das
(bad)
out
lods
das
push
pop
mul
cld
(bad)
add
push
jno
iret
hlt
or
in
stos
iret
jb
push
mov
mov
ds
repnz
outs
les
mov
xor
or
dec
fdiv
mov
fwait
mov
cmps
jmp
lods
retf
xor
dec
ret
mov
or
leave
test
and
cmc
mov
inc
(bad)
inc
mov
xchg
mov
cmp
cmp
stos
jp
xchg
xchg
test
jne
loopne
push
stos
mov
mov
jle
test
shl
out
mov
retf
loope
fild
mov
inc
cmp
dec
sbb
push
push
cmp
int3
ss
mov
jp
cmps
sub
(bad)
mov
sub
(bad)
call
ins
mov
cli
sub
cmps
jns
jg
in
neg
xchg
enter
sbb
das
push
ror
adc
add
inc
fld
add
xor
in
mov
jbe
call
jmp
js
cmp
shl
shl
jp
je
data16
push
sbb
aam
push
outs
push
cs
push
inc
sbb
xor
or
pop
das
dec
retf
mov
jns
nop
jo
jo
or
mov
in
cmp
pop
test
mov
lods
scas
or
gs
or
pop
(bad)
repz
movs
and
sbb
pusha
fs
or
adc
gs
mov
dec
je
mov
jno
mov
adc
stc
fbstp
iret
repz
mov
and
fld
sbb
jmp
(bad)
test
xchg
addr16
xchg
fmulp
and
cs
push
call
in
mov
out
ret
sar
repz
cs
movs
test
jns
aaa
gs
mov
jmp
imul
push
adc
test
and
cmp
inc
popa
fnsave
fs
ret
cmp
push
(bad)
imul
loopne
ret
sbb
cmp
cmp
out
les
mov
jo
and
mov
lock
mov
and
pop
ss
mov
mov
out
and
jns
sbb
mov
ret
mov
popa
push
xor
vmovntps
icebp
sub
mov
cmp
ins
sub
dec
mov
mov
adc
cli
mov
outs
repz
iret
dec
xor
xor
adc
or
mov
add
xchg
and
ror
xchg
mov
and
popf
movs
pop
lock
loopne
and
xor
(bad)
movs
stos
inc
inc
(bad)
adc
ret
ins
or
idiv
fist
pushf
outs
pop
test
dec
xor
pop
cmc
clc
pop
and
dec
mov
std
iret
imul
(bad)
mov
jb
mov
(bad)
adc
xor
call
test
aad
popf
sar
jbe
fs
cmp
ins
mov
outs
adc
mov
and
adc
mov
mov
or
inc
fstp
icebp
mov
ds
xor
pop
mov
cs
inc
jp
rol
aad
fisttp
push
pop
and
popf
inc
xor
imul
xor
ret
dec
arpl
xlat
stos
push
es
pushf
jge
arpl
stc
(bad)
lahf
mov
inc
test
call
or
jb
xlat
sbb
mov
and
stc
div
(bad)
push
jae
sbb
inc
mov
icebp
aaa
aas
mov
ja
jbe
mov
add
mov
int3
adc
sbb
mov
aam
sbb
rcl
rcr
mov
shr
jbe
inc
std
xor
loopne
stos
sub
int
test
test
dec
mov
in
pusha
jae
jno
pop
mov
inc
popa
push
push
mov
fidivr
mov
in
mov
lock
mov
add
shr
jbe
leave
loopne
movs
lods
or
aas
das
int3
retw
aaa
push
mov
pusha
fwait
adc
inc
sub
jmp
jecxz
mov
inc
adc
xchg
push
stc
popa
add
fst
shl
xchg
pop
ror
push
rcr
in
mov
arpl
retf
je
in
leave
repz
push
ret
push
adc
fs
dec
shl
cmp
out
push
retf
xor
rcl
jns
outs
mov
and
out
fwait
and
in
call
add
jmp
sub
cmp
int
inc
gs
inc
loopne
(bad)
xor
inc
sbb
mov
outs
mov
pop
dec
add
sbb
and
inc
(bad)
cmp
mov
pop
leave
add
imul
and
retf
cmp
in
jp
and
push
dec
jmp
push
sub
aaa
ret
push
inc
imul
enter
cs
mov
outs
lods
adc
enter
or
add
xor
popa
add
inc
fwait
sbb
push
pop
(bad)
in
and
cmps
retf
shr
sbb
jno
inc
cmp
or
push
rcl
xor
fidivr
xor
call
jae
mov
daa
cdq
cmp
aad
sbb
clc
mov
sub
leave
(bad)
arpl
pause
retf
popf
sub
pop
xchg
fnstsw
sub
sbb
and
xor
cmp
ss
sahf
pop
dec
popf
data16
sbb
fdivr
cdq
enter
cmc
ja
dec
popf
fcmovb
push
mov
jp
or
inc
out
ret
xor
or
ss
inc
into
cld
xor
std
out
(bad)
sbb
aaa
mov
arpl
inc
mov
adc
sub
mov
xchg
pop
in
out
psrlw
(bad)
add
xchg
arpl
sbb
imul
mov
xchg
test
mov
cmp
cmp
and
ins
(bad)
retf
fmul
jnp
ins
inc
dec
imul
jmp
mov
jl
and
gs
cmp
inc
and
jo
daa
or
in
xchg
lock
mov
sbb
jecxz
cmp
xlat
jo
pop
jmp
mov
imul
ds
shl
sbb
popa
pop
add
jnp
addr16
sub
ja
pop
clc
push
popf
fisub
mov
jge
inc
jge
sbb
leave
inc
test
test
push
xchg
and
inc
retf
sbb
daa
mov
mov
xor
js
in
dec
jne
test
cmp
cmp
aaa
in
adc
push
loope
fst
test
scas
clc
adc
dec
xchg
jnp
or
xchg
pop
mov
into
push
mov
add
and
inc
or
outs
mov
jno
mov
and
sbb
mov
lds
sar
sbb
ret
push
fdivr
sub
pop
jl
movs
cs
mov
xchg
imul
adc
push
jo
retf
int3
mov
pop
(bad)
jns
mov
mov
add
sub
or
jl
fadd
ss
into
add
xchg
cmps
and
or
cmp
int3
dec
xor
popa
push
fimul
inc
mul
cdq
out
pop
xchg
sbb
add
imul
cli
les
or
mov
inc
add
mov
(bad)
mov
aad
jmp
mov
neg
dec
push
pusha
pop
fsub
ficomp
fwait
xor
retf
aam
pop
enter
sbb
rol
cmp
clc
out
mov
cdq
(bad)
loope
cdq
popf
add
js
cmp
sub
das
(bad)
xor
jo
jle
or
sahf
out
or
xchg
popa
or
lods
mov
adc
pop
jp
xor
inc
ret
ret
or
or
jo
leave
or
jo
test
movs
xor
frstor
js
or
mov
enter
nop
fnstenv
push
cmp
test
or
or
xor
and
nop
mov
inc
or
dec
add
adc
xchg
lahf
jb
cdq
adc
fild
xor
xor
ffree
xabort
and
jo
adc
or
mov
out
cmc
lahf
sub
jnp
push
ins
or
push
ss
retf
push
enter
in
icebp
mov
lock
out
mov
lock
lock
clc
push
adc
sub
mov
das
xor
cli
mov
jno
icebp
in
push
(bad)
ds
pop
outs
stos
adc
das
adc
dec
inc
and
mov
lea
push
xchg
fiadd
rol
sbb
aad
cdq
jnp
imul
jmp
xchg
lea
jecxz
jp
icebp
and
pop
std
nop
add
(bad)
fadd
inc
dec
ret
shr
xor
ds
mov
xor
cmp
sbb
test
push
(bad)
and
mov
mov
shr
jb
xor
xor
cmp
add
ins
arpl
mov
mov
xchg
dec
dec
hlt
out
add
xchg
mov
ja
pop
xchg
push
dec
jg
into
pop
or
xchg
adc
xchg
std
pushf
in
arpl
popa
mov
in
iret
mov
test
jbe
pop
mov
clc
aas
shl
pushf
call
cli
test
add
sub
push
jl
xchg
popa
in
rol
or
mov
ret
popa
fs
adc
push
in
cld
sbb
es
into
stos
pushf
push
cmovo
cmps
iret
jmp
inc
test
in
mov
aaa
addr16
into
(bad)
xor
mov
xchg
mov
fiadd
mov
mov
(bad)
mov
ret
daa
int
stos
test
sub
cmp
push
outs
dec
mov
inc
enter
fst
inc
jns
call
push
mov
(bad)
cld
sub
(bad)
lock
div
mov
loop
(bad)
jle
ja
cmps
cmp
int3
fwait
gs
dec
xchg
adc
clc
xchg
stc
xor
inc
cmp
add
daa
repz
lea
dec
mov
retf
lock
call
and
jno
jbe
push
inc
add
popa
pop
pop
pop
mov
fxam
ret
lock
pop
rcr
xlat
mov
repz
cwde
mov
sti
push
or
fild
movs
xor
inc
add
jno
sub
pop
xor
jb
fbld
or
jae
imul
shl
xor
inc
mov
mov
jmp
xor
fdivr
jmp
jbe
(bad)
addr16
ins
push
dec
sub
pop
test
ss
sub
mov
stos
inc
add
outs
add
push
(bad)
mov
pop
lahf
jecxz
sub
nop
icebp
int
cwde
xor
mov
mov
aam
in
ja
xor
test
xor
enter
push
inc
cmp
jg
outs
mov
rcl
xor
pushf
(bad)
sbb
xchg
mov
add
jp
mov
mov
es
(bad)
cs
push
arpl
cwde
es
sbb
stc
fsubr
pop
sbb
jnp
gs
outs
mov
pusha
dec
movs
aaa
dec
pop
mov
scas
cli
push
lahf
repz
ins
cld
inc
cmps
dec
inc
jge
lea
and
jbe
repnz
adc
cmp
cwde
dec
pop
clc
sbb
jmp
push
mov
and
dec
and
data16
xor
mov
fist
jle
adc
sar
inc
push
inc
retf
fild
or
xchg
stos
mov
movs
mov
or
add
loopne
cli
pop
ja
popf
nop
xor
mov
jbe
inc
ins
sahf
aad
fld
lods
int
ins
sub
cmp
and
pop
test
mov
fadd
xchg
(bad)
movs
mov
rcr
into
mov
mov
mov
jbe
data16
cld
push
add
(bad)
rcl
push
dec
movs
cmp
mov
xchg
or
fnstenv
adc
add
pop
icebp
pop
xor
sbb
xlat
mov
mov
sbb
aam
imul
push
retf
pop
lods
in
test
mov
sub
jae
fwait
xor
repnz
jnp
jne
sub
xlat
iret
ins
shl
imul
call
dec
jecxz
sbb
mov
cwde
iret
imul
inc
and
mov
inc
fwait
push
xlat
lods
pushf
and
aas
mov
ror
outs
jmp
lea
(bad)
and
push
imul
(bad)
mov
data16
jle
inc
cwde
out
(bad)
add
push
out
test
loopne
aam
je
mov
bound
mov
out
lock
jnp
hlt
push
test
sbb
ret
inc
mov
out
sub
add
mov
pop
mov
mov
out
fs
iret
and
addr16
test
ret
jno
and
jp
mov
inc
mov
mov
or
add
icebp
and
rol
(bad)
ss
fisub
jbe
pop
push
xor
aas
push
dec
fisttp
es
inc
adc
ja
add
stc
test
mov
lods
inc
mov
test
adc
cmp
test
mov
stos
arpl
(bad)
movs
addr16
arpl
and
(bad)
mov
jl
test
es
push
retf
arpl
jae
out
push
(bad)
push
fcom
inc
repz
push
and
jge
fsubp
cwde
xor
cs
sbb
scas
mov
mov
mov
mov
jecxz
jecxz
xchg
es
cmps
dec
inc
rol
test
sub
imul
push
push
repnz
out
gs
scas
lods
lock
nop
out
iret
test
arpl
adc
add
stos
and
clc
fidiv
cmp
mov
shl
lods
hlt
push
push
cmp
or
ss
push
cmps
loop
pushf
mov
jge
pop
push
pop
out
out
sbb
icebp
jbe
in
loope
jl
into
test
fnsave
mov
jo
gs
loope
stos
test
addr16
scas
arpl
cmp
dec
cmc
pop
and
cwde
and
or
cwde
loope
cli
jle
in
fild
fcomp
into
out
dec
(bad)
iret
imul
sbb
pop
inc
call
add
mov
fmul
xchg
dec
std
or
jae
mov
cmps
xchg
jbe
and
xor
add
xchg
fnsave
sbb
call
ds
dec
inc
adc
add
cwde
repnz
popa
mov
push
cld
aam
pop
je
bound
das
add
xor
aam
xchg
iret
mov
enter
dec
sub
xor
out
xchg
sub
aas
lds
std
inc
xchg
repnz
fsubr
mov
(bad)
stos
cmp
aaa
retf
mov
vpperm
mov
xor
jo
test
xchg
add
cmp
jne
jl
test
jg
or
mov
mov
xchg
call
outs
(bad)
xor
adc
xchg
mov
dec
fdivp
push
rcl
sub
test
mov
cmp
loope
mov
cmp
mov
icebp
daa
pop
jnp
ror
push
and
sahf
pop
mov
mov
jne
push
je
push
clc
sub
sub
sbb
adc
mov
loop
cmc
mov
fadd
ret
popa
jmp
ins
pop
dec
push
pop
xor
int
sub
ror
sti
test
sub
mov
test
add
sahf
ja
pop
repz
xchg
push
int3
ss
sub
fnstcw
inc
mov
loope
push
scas
push
or
push
sbb
popa
pop
push
dec
pusha
pop
lahf
adc
test
imul
mov
xor
fstp
xchg
data16
mov
jp
ss
and
add
imul
lods
rol
cmps
lahf
push
inc
retf
cmp
int3
push
jns
ds
dec
std
in
sti
mov
daa
dec
test
cwde
(bad)
xlat
outs
jecxz
pop
bound
pusha
fdivr
cmp
or
aas
xchg
mov
retf
clc
mov
mov
jne
stos
scas
jno
lock
mov
cli
sub
ds
popa
(bad)
stc
mov
add
fdiv
push
out
or
imul
cmp
pop
aad
test
addr16
add
pop
xor
dec
bnd
push
sahf
cli
(bad)
jmp
aaa
dec
push
xchg
adc
mov
leave
dec
sti
ins
cmps
cmp
sbb
mov
cwde
fldcw
cmp
or
push
in
mov
sbb
inc
lea
loopne
sahf
shr
lahf
int3
in
mov
retf
xchg
jl
lea
clc
mov
or
inc
dec
pop
popa
or
sbb
mov
ret
xor
jl
xchg
leave
dec
mov
(bad)
enter
(bad)
inc
adc
outs
jl
repz
nop
adc
xchg
jl
into
cmps
pop
idiv
sub
ret
mov
neg
xor
dec
mov
ret
sub
sbb
mov
jle
leave
ret
cmp
adc
mov
adc
cmp
jmp
enter
test
push
push
xor
cmp
sub
sub
inc
lahf
dec
pop
retf
mov
movs
test
add
add
aam
xor
pop
xor
mov
in
and
push
inc
lods
imul
in
jae
jl
ins
not
js
dec
fldenv
pop
mov
push
xchg
add
retf
test
xchg
cwde
in
pop
mov
out
push
xor
add
(bad)
loop
or
xchg
loop
outs
sub
and
xor
cwde
fs
dec
pop
int
sti
imul
fcomp
sbb
lods
iret
(bad)
or
jmp
sbb
mov
sub
adc
mov
jmp
shl
ja
test
shl
mov
fst
retf
xor
pop
adc
inc
xor
adc
cmp
fcomp
mov
jp
sbb
sbb
mov
xor
lods
jns
adc
jle
jge
and
mov
cmps
inc
cmp
cmp
out
inc
inc
int
dec
std
in
rol
punpckhdq
bound
aad
mov
jae
pop
sub
outs
mov
pop
fdivr
sbb
shl
jne
fs
inc
pushf
cli
fiadd
jecxz
pop
jne
outs
xchg
sub
pushf
mov
retf
stc
jmp
jmp
sbb
mov
fwait
mov
fstp
xchg
cmc
sub
xchg
and
mov
int
fisttp
mov
fld
pop
and
neg
or
(bad)
imul
into
jnp
mov
dec
fwait
xor
xchg
mov
mov
xor
mov
and
cld
ds
stc
mov
jns
sti
imul
jmp
inc
iret
add
push
push
aaa
inc
cmp
mov
cmp
add
or
dec
xor
adc
xchg
xchg
mov
test
mov
rol
adc
cmp
mov
push
add
inc
sub
data16
mov
jmp
inc
sub
mov
bound
pusha
rcl
jb
mov
jmp
adc
and
sub
lods
dec
dec
mov
scas
ror
fmul
inc
adc
cmc
inc
mov
cmp
cmp
push
nop
popf
sbb
mov
je
dec
sbb
lods
xchg
xchg
ja
fwait
and
(bad)
int
sub
mov
scas
mov
pop
push
jae
sahf
mov
push
sub
mov
pop
pop
pop
sbb
loop
and
call
ins
jbe
pop
inc
sbb
std
pop
lahf
outs
ins
mov
clc
lock
movs
je
fst
and
pop
adc
dec
dec
sub
shr
jnp
xor
pop
imul
ret
push
movs
sub
mov
adc
outs
int
arpl
sahf
in
mov
test
push
mov
mov
jae
enter
popa
pop
xchg
(bad)
sti
div
inc
xchg
imul
mov
(bad)
jmp
xchg
push
not
shl
and
and
sub
rcl
cdq
xchg
pop
loope
xor
and
add
adc
enter
ins
int
jo
cmp
mov
inc
sub
push
and
mov
adc
(bad)
push
xor
and
sbb
daa
pop
stc
(bad)
das
xor
pop
sbb
xlat
and
pop
les
jmp
mov
or
jg
adc
nop
pop
lea
add
ss
inc
mov
add
dec
in
jp
sub
loope
cmps
in
xchg
and
dec
or
ja
aad
or
push
or
cmp
outs
aaa
loop
pop
pop
icebp
and
mov
push
inc
adc
lods
and
lds
mov
neg
push
ror
stc
lods
lahf
test
sbb
pusha
lea
(bad)
mov
or
pop
push
rcr
or
jbe
in
and
popf
jo
sbb
lock
xchg
cmp
cmp
mov
push
sti
test
add
outs
(bad)
cmp
jle
dec
ror
sub
adc
aaa
mov
ret
aaa
cmps
xchg
(bad)
int
pop
sbb
cmp
pop
push
int
add
push
push
adc
loopne
in
push
jmp
lahf
add
jne
cmp
loope
imul
fidivr
fwait
dec
xor
aam
pop
loope
jbe
xchg
call
in
dec
enter
cmc
sti
mov
pop
cld
cmp
xchg
or
cmp
aad
pop
rcl
dec
pop
fld
push
aad
mov
jo
xor
push
mov
gs
fwait
add
pop
sbb
xchg
pop
or
loope
rcr
ins
jmp
mov
ucomiss
adc
cs
scas
mov
mov
sbb
or
aaa
xchg
mov
out
les
inc
cs
xor
enter
push
pop
dec
popf
inc
mov
pop
lea
sbb
inc
xchg
arpl
xor
in
fs
sub
xchg
sbb
dec
gs
lods
mov
fmul
mov
jno
pusha
inc
fisttp
push
adc
dec
movs
ss
and
in
stos
jns
push
leave
retf
inc
pop
out
push
or
js
xor
and
clc
sti
fst
dec
sub
inc
retf
push
xchg
or
inc
scas
mov
mov
and
pop
movs
nop
jo
sbb
(bad)
jmp
dec
sub
(bad)
out
xchg
sbb
push
call
jns
fld
pop
stos
and
jnp
stos
jno
jmp
sub
or
(bad)
in
xor
mov
mov
jmp
in
mov
push
dec
xor
shl
sub
das
clc
mov
out
xchg
mov
and
sub
jl
scas
add
out
pop
ins
push
pusha
mov
imul
clc
push
mov
add
inc
xor
adc
xchg
outs
in
xchg
in
pop
inc
out
mov
in
mov
jg
test
mov
mov
pop
leave
call
mov
idiv
jbe
rcr
repz
and
adc
mov
cwde
test
call
iret
fwait
je
dec
mov
and
outs
push
cmp
cmps
arpl
dec
enter
push
sbb
cmps
jo
cwde
loopne
pop
pop
push
mov
test
dec
icebp
clc
nop
dec
lods
mov
cmp
jge
xchg
mov
mov
jle
push
push
add
pop
jl
and
cli
xchg
jg
adc
pop
xor
sbb
adc
outs
adc
retf
jmp
xor
int
in
lds
dec
jnp
mov
(bad)
retf
or
xor
mov
das
leave
test
push
movs
cmp
fs
jmp
mov
shr
xchg
or
fisubr
fnstcw
pop
xor
sbb
es
xor
ror
cmps
push
mov
into
(bad)
pop
cwde
mov
je
popa
mov
imul
inc
and
fisubr
clc
int3
ins
or
fs
ret
pop
push
xor
(bad)
popf
push
shl
es
out
out
cmp
and
dec
jae
adc
sbb
cmp
or
mov
cmps
cmps
inc
es
push
or
in
test
test
and
xchg
and
jg
imul
dec
fnstenv
cmp
push
xchg
dec
xchg
gs
addr16
mov
add
test
or
pop
mov
call
(bad)
test
jbe
inc
mov
cs
sti
popf
push
add
push
lods
jmp
jp
jbe
retf
in
xor
jecxz
jo
xchg
jns
pop
or
inc
repnz
mov
add
sub
xchg
retf
fidivr
adc
rcr
cmp
in
(bad)
(bad)
stos
sbb
pop
pop
and
mov
inc
out
mov
add
nop
loope
sub
push
mov
out
cmp
add
test
add
movs
push
cmps
into
adc
dec
push
xor
pmullw
(bad)
cld
adc
mul
inc
test
adc
shr
ror
xor
mov
in
mov
loop
adc
mov
push
xchg
xchg
les
push
pop
aaa
dec
adc
push
vmovaps
cmps
scas
stos
mov
push
arpl
loop
inc
jl
fadd
pusha
sbb
mov
ins
mov
movs
mov
out
add
push
push
sub
ret
fs
dec
xor
push
sub
cmps
mov
cwde
adc
das
xchg
or
rcr
int
jb
adc
cmp
imul
or
cld
push
imul
addr16
xchg
sub
test
mov
nop
jecxz
out
iret
fdiv
mov
mov
imul
push
add
adc
jb
jle
and
lods
mov
sub
popf
dec
add
push
push
pavgb
and
inc
cdq
ins
fcmovnbe
std
cmps
pop
enter
or
or
scas
jns
mov
push
dec
sub
fistp
xor
inc
or
cld
push
shl
lock
imul
push
xchg
mov
in
add
mov
cmps
int
call
cmps
lods
dec
xor
sbb
mov
sbb
rol
adc
lea
cdq
cmp
in
mov
(bad)
xchg
jg
out
push
cmp
lods
mov
aad
xlat
pop
bound
lds
xchg
cmp
push
cmp
cmp
inc
xor
fistp
or
scas
jno
ror
fs
xor
retf
(bad)
sbb
push
cmp
aad
loop
lea
cmp
scas
add
lods
hlt
call
push
cmp
sub
mov
repz
fs
add
loopne
ror
or
pop
dec
fwait
jns
imul
sub
add
xchg
push
lods
icebp
push
inc
cmp
xor
or
lds
jb
xchg
xchg
in
icebp
fistp
sbb
int3
(bad)
mov
cmp
push
ins
sti
add
lods
adc
aas
ror
jbe
stc
aam
sbb
pop
jmp
or
pop
(bad)
(bad)
jle
inc
and
(bad)
jl
cmp
gs
and
push
call
adc
and
stos
and
xchg
inc
int
das
fidivr
shr
outs
stos
and
cmp
scas
les
push
sub
cmp
adc
mov
inc
jo
cdq
dec
imul
inc
inc
pop
bound
or
popf
jbe
scas
push
ficom
add
xchg
xchg
(bad)
jle
dec
inc
mul
lds
mov
mov
sbb
mov
mov
push
mov
adc
rol
test
push
pop
xchg
ins
jne
daa
(bad)
loop
idiv
pop
gs
dec
jmp
sbb
out
and
mov
pop
ret
sub
fisttp
cli
pop
push
add
mov
add
jmp
int3
xor
or
xor
movs
fwait
sbb
cmp
outs
add
mov
sahf
fst
scas
dec
mov
adc
inc
push
inc
mov
jno
aad
sub
add
mov
repz
pushf
test
sti
clc
ins
adc
sub
jl
add
xchg
adc
adc
mov
lahf
sub
pop
and
dec
iret
push
xor
test
popf
and
mov
mov
imul
movs
std
(bad)
test
inc
inc
or
mov
ss
mov
inc
lea
xor
aad
ficom
sbb
adc
cwde
jp
push
or
test
cmp
aas
jo
cmp
dec
cdq
mov
loop
mov
sub
fwait
test
cmp
(bad)
pop
jecxz
popf
aaa
push
jmp
and
pop
movs
nop
out
mov
ins
das
fisttp
xor
(bad)
dec
and
mov
mov
mov
jnp
sub
sub
std
shl
jne
std
retf
div
outs
xor
and
cmp
push
and
add
cwde
and
mov
add
iret
mov
mov
repz
lods
(bad)
or
mov
fwait
data16
repz
pop
stos
stc
loope
and
retf
xor
sbb
sbb
pop
push
test
test
jmp
test
and
add
sbb
dec
sbb
push
jb
sbb
out
mov
sar
scas
xor
jp
(bad)
cmp
nop
mov
stc
jle
adc
sub
arpl
push
enter
clc
addr16
and
mov
sbb
and
mov
adc
pop
test
mov
mov
loope
paddusb
push
test
(bad)
fisttp
shl
arpl
lods
arpl
push
shr
out
int3
or
mov
add
das
sti
pop
sub
sahf
stos
cmp
cmp
jp
sbb
test
ret
pop
mov
cli
lods
aas
add
iret
dec
jbe
(bad)
dec
sahf
xchg
xchg
sbb
pop
adc
(bad)
jg
(bad)
fucomi
in
es
ins
mov
bound
lea
cdq
test
inc
adc
imul
lods
fidiv
xor
dec
push
lods
mov
lods
out
loope
jno
pushw
movs
cmp
fsub
ins
xor
dec
cdq
cmp
sbb
(bad)
out
xor
jns
dec
pop
jno
ror
(bad)
sti
add
push
mov
add
clc
cmp
pop
repz
hlt
es
xchg
fdivr
inc
sbb
xchg
push
mov
fwait
arpl
inc
sti
imul
jnp
lock
shr
cwde
dec
leave
lods
test
add
aas
mov
lods
mov
dec
jno
mov
xchg
dec
divps
pop
fiadd
push
mov
dec
call
shl
xchg
xor
pop
fst
inc
or
imul
push
out
mov
pop
int3
repnz
adc
xor
adc
mov
rol
popf
rcr
push
and
stos
xchg
jmp
sbb
pop
sub
not
cmp
js
adc
jge
xor
push
inc
or
movs
pop
not
mov
scas
adc
pop
sahf
mov
ret
pop
xlat
mov
aad
mov
test
jne
sar
cld
pop
(bad)
pop
push
push
sbb
jbe
shr
rcr
push
addps
push
mov
dec
mov
sub
idiv
call
es
dec
push
jae
aaa
dec
js
popa
rol
sub
and
loopne
pop
in
jno
cdq
ret
movs
hlt
xchg
cmp
enter
call
sub
int
inc
into
mov
adc
popa
es
inc
sbb
fwait
or
rcr
and
xchg
xlat
leave
inc
cmps
inc
pop
mov
xchg
jge
dec
ret
mov
mov
sahf
mov
sbb
mov
popf
mov
and
mov
dec
scas
mov
jmp
sub
fidiv
dec
int
mov
ds
mov
mov
xchg
xor
mov
cs
cmp
add
imul
jecxz
mov
sbb
and
or
out
cli
push
and
stos
aad
pop
sub
adc
push
xchg
sub
test
iret
add
push
and
jno
mov
add
sbb
icebp
scas
jo
ins
(bad)
fwait
mov
sbb
dec
retf
sahf
jnp
mov
in
(bad)
cdq
cli
rcr
(bad)
jle
int3
xor
mov
gs
mov
push
sub
dec
mul
xchg
retf
jge
pop
cli
in
sub
add
(bad)
sbb
stc
and
jge
dec
add
(bad)
xchg
lods
aaa
push
(bad)
(bad)
or
mov
adc
add
icebp
push
or
xor
xchg
jb
mov
test
dec
punpcklbw
and
(bad)
das
ss
popa
aam
inc
les
xchg
mov
inc
sbb
jae
fiadd
xchg
inc
mov
(bad)
cmps
stos
mov
stc
outs
pusha
dec
jl
inc
outs
cmc
icebp
int3
jp
stc
ss
cmps
scas
add
pushf
fld
sub
(bad)
cmp
in
cld
aad
jae
sub
and
jne
push
popa
in
jmp
push
enter
and
outs
std
sbb
sar
fidivr
adc
inc
icebp
lods
push
outs
push
outs
add
mov
cs
mov
adc
or
xchg
inc
mov
or
pushf
inc
rcl
pop
xor
in
(bad)
int
mov
std
sub
pop
sub
inc
aaa
hlt
xchg
(bad)
fcomp
pop
sub
or
enter
jmp
loopne
shr
pushf
aaa
mov
mov
repz
js
test
mov
push
(bad)
mov
xor
pop
imul
iret
(bad)
lock
mov
xchg
dec
pushw
mov
dec
cmp
(bad)
int3
push
and
sub
(bad)
or
sbb
push
leave
into
popa
in
out
or
les
(bad)
loopne
outs
dec
idiv
pop
or
imul
mov
into
cmc
outs
fs
mov
outs
dec
add
ret
fld
add
mov
or
pop
lds
dec
mov
sti
add
ja
jg
jno
jmp
jl
fbstp
enter
into
pop
xchg
and
out
dec
(bad)
mov
xchg
lahf
sbb
mov
cmc
or
xor
mov
gs
sbb
cmp
fiadd
test
jnp
adc
nop
dec
out
stos
je
mov
inc
jg
inc
gs
repnz
xchg
inc
mov
aaa
xor
popf
frstor
out
inc
stos
sbb
repnz
stos
cmp
cmp
mov
push
mov
test
(bad)
mov
sub
cld
cmps
sti
xor
sahf
cmp
adc
out
out
mov
out
cmc
test
jnp
mov
jno
loop
jmp
inc
and
mov
shl
adc
scas
mov
leave
cmp
lods
inc
adc
imul
add
mov
and
and
cld
xchg
and
or
sub
add
mov
dec
xchg
fisubr
push
(bad)
(bad)
sbb
dec
push
dec
and
scas
pop
push
lahf
call
inc
pusha
xchg
in
fist
bound
mul
outs
cdq
hlt
jo
and
adc
and
dec
aas
mov
(bad)
push
clts
pop
pop
sbb
loopne
sub
and
push
lods
les
dec
aam
jne
push
push
dec
rol
pop
jp
or
and
pop
cmc
mov
or
std
daa
stos
mov
ins
sub
aad
test
push
jecxz
clc
push
mov
sbb
jmp
fcmovnb
xchg
push
out
pop
idiv
stos
adc
(bad)
mov
pusha
jo
jo
outs
stc
pop
mov
ss
pop
mov
push
xor
imul
mov
pusha
add
popa
pop
add
jge
push
pop
cmps
mov
cmps
push
scas
gs
lahf
call
xchg
xchg
add
jg
or
xchg
xlat
test
dec
popf
or
or
xchg
jg
jbe
(bad)
mov
jbe
enter
push
xlat
scas
mov
cmp
clc
jbe
rcr
dec
jp
cmp
(bad)
xlat
jmp
cmps
push
jge
icebp
mov
pop
mov
pop
fldcw
sahf
hlt
das
push
outs
cmp
adc
xchg
fisttp
push
add
stos
jae
dec
cmc
shl
mov
cmp
xor
inc
imul
cmps
xor
popa
repnz
aad
imul
mov
or
dec
int
popf
jns
dec
cmp
push
test
fstp
outs
iret
movs
into
fdiv
xor
rol
mov
je
cwde
sbb
bndstx
imul
sub
sbb
arpl
outs
test
fmul
(bad)
enter
xor
cmps
pop
nop
ficom
mov
cmp
or
or
int
and
mov
jne
loopne
data16
call
jecxz
lods
cld
and
pop
stos
pusha
test
mov
loope
xchg
mov
test
in
(bad)
cmp
cmp
mov
dec
push
ss
cmps
les
or
cmp
fisubr
sub
test
int
jl
xchg
scas
push
mov
iret
push
jle
dec
cdq
dec
xchg
in
mov
scas
popa
jmp
shr
jae
cmp
mov
test
jle
inc
push
add
add
mov
mov
pop
push
mov
xchg
add
cdq
(bad)
int3
ficomp
sbb
or
adc
inc
inc
cmp
pop
mov
gs
pop
and
inc
or
and
pushf
js
movs
add
or
sub
pusha
mov
add
stos
loopne
loopne
pop
cdq
xchg
xor
adc
inc
not
enter
ficom
jmp
fimul
pop
xor
jecxz
add
retf
mov
retf
(bad)
jae
xchg
mov
aas
add
outs
pushf
pop
pushf
xchg
adc
push
bound
outs
adc
cwde
lahf
cmp
cdq
dec
inc
mov
cdq
or
test
inc
addr16
pop
cmp
mov
pop
mov
sub
movs
mov
sub
std
jmp
out
and
dec
addr16
mov
push
dec
xchg
push
jae
sbb
adc
pop
outs
pop
push
inc
fdivr
div
pop
dec
xchg
cmps
aad
mov
je
je
mov
adc
add
pop
rcr
xchg
test
cmp
sub
mov
popa
jns
popf
in
cld
je
adc
bound
mov
dec
dec
push
call
sbb
gs
adc
test
mov
pop
inc
inc
rcl
xchg
cmp
ins
(bad)
sbb
mov
das
outs
dec
cmc
gs
jnp
fldcw
(bad)
outs
lea
or
jle
jl
dec
inc
fmul
not
dec
fcom
fwait
(bad)
adc
dec
fadd
enter
(bad)
mov
push
xor
sub
jle
cwde
sbb
stc
jae
cld
sahf
pop
jbe
fidivr
popf
test
push
dec
addr16
jmp
movs
mov
jge
ins
and
in
repnz
mul
mov
lahf
jmp
inc
xor
cdq
push
jmp
sbb
mov
fcom
pusha
call
bound
xchg
les
and
inc
lock
dec
lods
ss
xchg
out
or
push
in
(bad)
imul
aaa
stos
shl
add
js
cmp
push
jmp
test
cwde
adc
repz
cmp
adc
adc
inc
mov
or
xchg
cli
gs
dec
push
sbb
fnsave
add
sbb
into
(bad)
in
ror
in
js
adc
cmp
sub
les
ins
dec
ins
jae
test
jno
(bad)
movs
fsubr
repnz
push
jl
xor
loope
ins
(bad)
lahf
iret
adc
jae
push
adc
bound
sti
xchg
jae
(bad)
aas
(bad)
fmul
inc
xchg
sbb
add
jb
movs
clc
inc
ins
pop
mov
out
jp
jns
sete
js
jno
add
mov
data16
nop
data16
ror
fcomp
inc
lods
out
retf
cmp
dec
test
mov
dec
fidiv
in
cli
lods
fwait
sbb
mov
ins
mov
cmp
jne
xchg
cdq
stos
inc
inc
push
push
and
cld
cmp
inc
(bad)
loope
pop
cs
lds
cli
xor
and
movs
int3
add
push
fisttp
movs
arpl
push
pop
dec
jge
into
pushf
inc
cmp
(bad)
mov
ret
idiv
cmp
les
fisub
mov
xchg
mov
xchg
xchg
jmp
xor
in
or
lods
shl
das
adc
mov
test
jge
(bad)
xchg
pop
data16
push
stos
and
pop
cli
fist
hlt
fisttp
dec
jne
pop
pop
or
xor
fild
sar
or
bound
imul
mov
ret
mov
jge
sub
xor
loope
inc
rcr
scas
out
or
enter
mov
dec
cmp
fnstsw
adc
call
mov
lahf
sar
cmp
lahf
test
cmp
jbe
push
imul
lds
mov
mov
mov
enter
jno
xor
loopne
lahf
push
xor
(bad)
cli
dec
repz
ja
push
xchg
inc
jo
sub
js
shr
inc
test
xchg
inc
pop
jnp
ins
mov
in
ficom
mov
test
sbb
mov
clc
add
popa
jno
call
shl
or
dec
inc
inc
ffreep
sbb
push
adc
leave
jns
mov
pop
cmps
icebp
(bad)
mov
mov
mov
jmp
test
jge
pop
cmp
cmps
aad
or
xor
xor
repnz
xchg
mov
adc
imul
xchg
sub
or
ret
push
cwde
pushf
inc
inc
rcr
jbe
mov
mov
mov
push
push
nop
xor
push
mov
mov
cdq
pop
mov
ror
rcr
daa
and
mov
mov
cmp
addr16
lock
jmp
call
adc
adc
sbb
inc
jb
ins
mov
xchg
popa
cmp
rol
nop
push
xchg
mov
xor
fstp
retf
xchg
repz
test
fisub
aad
inc
mov
mov
fsub
xor
fbstp
cld
imul
sbb
add
outs
inc
scas
or
fdivr
retf
movs
cdq
addr16
popf
ja
mov
shr
enter
push
sub
test
add
ret
cmps
mov
outs
add
je
dec
jne
and
or
xor
je
popf
fcomp
xor
ja
lods
and
jle
mov
inc
or
jp
repz
sbb
cmps
out
or
cmp
icebp
mov
cmp
pop
or
jb
sub
inc
pop
iret
cwde
push
stos
es
xchg
popa
into
jle
data16
mov
test
repnz
push
xchg
in
pop
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
sldt
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
clc
inc
add
loopne
add
and
jb
outs
addr16
add
add
dec
add
cmp
add
and
add
dec
add
adc
add
and
dec
inc
add
add
dec
add
pusha
or
add
inc
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
add
add
jbe
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
int
or
jl
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
or
jg
xchg
or
pop
add
add
add
lds
add
add
add
add
add
add
adc
sub
push
add
add
cmp
bound
js
xor
push
add
add
add
add
jecxz
jmp
or
or
add
push
sub
push
add
push
sub
push
add
out
push
add
sub
push
add
add
add
push
sub
push
add
pop
inc
pop
push
add
add
add
add
pop
out
push
add
pop
sub
push
add
or
add
add
or
add
add
or
add
add
int
push
add
add
push
add
add
push
add
add
or
add
add
or
add
add
sub
push
add
add
add
or
add
add
or
add
add
add
or
push
add
or
add
add
or
add
add
or
add
add
or
add
add
int
push
add
add
add
lea
push
add
leave
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
ss
add
add
aaa
add
add
add
add
add
lods
add
add
add
add
add
cmp
in
adc
add
mov
add
xor
cmp
in
adc
add
mov
add
xor
cmp
in
adc
add
mov
add
in
add
adc
mov
add
in
add
adc
enter
xor
add
pop
add
xor
cmp
add
add
add
stc
add
sbb
add
adc
inc
or
add
add
sbb
add
add
add
xor
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
lea
add
xor
add
add
add
add
add
xchg
or
add
add
add
add
add
add
cdq
or
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
or
adc
mov
pop
add
add
add
add
add
add
and
add
add
add
add
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
cwde
cmp
add
add
add
add
xchg
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
or
xchg
add
rol
add
cmp
add
or
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
sbb
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
dec
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
inc
add
or
xchg
add
add
add
or
sbb
add
add
add
inc
add
or
add
add
inc
add
or
add
add
add
add
inc
add
or
add
add
add
add
add
or
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
dec
add
or
xchg
add
add
add
or
xchg
add
add
add
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
add
pusha
add
or
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
mov
add
add
add
arpl
add
add
add
add
arpl
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
ins
add
or
xchg
add
add
add
add
add
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
sbb
add
add
cld
add
or
add
add
cmp
lods
add
or
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
imul
or
xchg
add
add
add
or
sbb
add
add
ins
imul
or
add
add
inc
add
outs
add
or
add
add
add
adc
add
add
add
inc
outs
add
or
add
add
add
outs
add
or
add
add
add
test
add
or
xchg
add
add
xchg
add
add
outs
add
or
xchg
add
add
outs
add
or
add
add
add
jo
add
add
add
jno
add
add
add
jb
add
add
add
test
add
or
xchg
add
add
xchg
add
add
je
add
add
add
in
je
add
add
add
dec
jbe
add
add
add
test
add
add
add
mov
add
add
add
add
add
add
add
mov
or
add
add
add
jge
add
add
add
push
add
add
jl
add
or
xchg
add
add
add
add
mov
add
or
xchg
add
add
jle
add
add
add
in
add
or
add
add
add
cld
jle
add
add
add
mov
add
add
add
rol
add
add
add
or
add
add
add
xor
add
or
add
add
add
add
or
xchg
add
add
add
add
add
js
add
or
xchg
icebp
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
icebp
add
add
je
add
or
xchg
add
add
adc
mov
nop
add
and
add
or
adc
mov
mov
ins
add
mov
add
add
add
add
mov
add
add
add
add
add
or
adc
mov
mov
add
add
add
add
add
add
add
pushf
mov
add
add
add
mov
add
add
int3
mov
add
add
add
loopne
add
or
xchg
add
add
mov
add
add
add
adc
xchg
add
add
add
or
xchg
add
add
add
or
xchg
icebp
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
mov
xor
test
in
add
or
adc
mov
cmp
mov
cld
xchg
add
or
adc
mov
inc
add
add
add
add
add
add
or
adc
mov
pop
add
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
mov
cmps
add
add
add
add
add
popf
add
or
adc
mov
mov
sahf
add
or
adc
mov
int3
add
add
add
add
add
add
or
adc
mov
aam
movs
add
add
or
adc
mov
fild
movs
add
add
or
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
mov
sbb
add
mov
adc
mov
rol
add
add
or
xchg
add
add
mov
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
ins
movs
add
or
adc
mov
dec
add
add
add
add
add
adc
mov
jle
mov
add
add
add
add
add
add
add
add
add
add
stos
add
or
adc
mov
int3
add
add
stos
add
or
adc
mov
mov
stos
add
or
xchg
add
add
add
or
xchg
add
add
stos
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
mov
ss
add
add
or
add
iret
add
scas
add
or
adc
mov
fadd
add
add
add
add
scas
add
or
adc
mov
mov
add
scas
add
or
adc
mov
in
rol
add
adc
mov
hlt
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
in
call
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
icebp
add
add
add
mov
xchg
sbb
add
add
add
add
mov
xchg
or
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
rol
or
xchg
add
add
rol
or
xchg
add
add
ret
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
push
add
add
add
add
push
add
pushf
ret
or
xchg
add
add
add
add
add
ret
or
xchg
add
add
ret
or
xchg
add
add
ret
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
push
push
add
ret
add
or
xchg
add
add
ret
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
les
add
add
add
add
add
or
xchg
add
add
add
or
xchg
icebp
add
add
add
mov
or
xchg
mov
mov
and
fmul
add
or
xchg
add
add
enter
add
push
and
adc
add
or
xchg
add
add
leave
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
add
add
add
push
sub
nop
leave
add
or
xchg
add
add
xchg
add
add
leave
add
or
xchg
icebp
add
add
add
leave
add
or
xchg
icebp
add
add
add
retf
or
xchg
add
add
add
add
push
xor
mov
add
or
xchg
add
add
add
or
xchg
add
add
rol
add
add
add
add
rol
add
add
pop
cmp
or
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
add
add
add
fld
add
add
add
fld
add
add
add
fld
add
add
add
adc
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
push
dec
add
add
pop
push
add
xchg
add
add
add
add
aam
add
or
xchg
add
add
fiadd
add
add
add
or
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
pop
arpl
jl
add
or
xchg
add
add
xchg
add
add
xchg
add
add
fild
add
add
push
imul
fild
add
add
add
add
add
or
xchg
add
add
fadd
add
add
pop
jae
xor
add
or
xchg
add
add
add
add
push
jbe
push
add
pop
ja
test
add
or
xchg
add
add
add
add
rcr
add
add
push
jg
(bad)
add
or
xchg
add
add
fadd
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
add
push
xchg
js
add
or
xchg
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
call
xchg
add
add
call
xchg
add
add
add
or
xchg
add
add
jmp
xchg
add
add
add
add
pop
xchg
add
add
add
add
or
xchg
add
add
xchg
add
add
add
push
fwait
add
jmp
xchg
add
add
jmp
xchg
add
add
add
or
xchg
add
add
jmp
icebp
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
add
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
icebp
add
add
add
add
or
add
retf
add
add
add
or
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
or
add
xchg
add
add
add
add
add
pop
rol
call
add
add
add
add
or
xchg
icebp
add
add
add
add
add
add
add
add
add
add
add
or
add
xchg
mov
lods
or
add
or
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
pop
xlat
add
add
add
pop
fld
or
add
add
add
add
xchg
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
xchg
mov
cmp
loop
jo
add
or
xchg
mov
mov
push
add
or
xchg
add
add
push
add
or
xchg
add
add
sgdtd
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
add
or
add
add
add
add
xchg
add
add
sgdtd
or
xchg
sbb
add
xchg
icebp
add
or
add
adc
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
test
adc
xchg
mov
repz
add
add
add
add
add
or
xchg
mov
fmul
clc
add
add
or
xchg
xchg
add
or
add
add
or
xchg
mov
dec
add
add
add
add
or
add
and
add
add
or
add
and
add
add
add
add
add
or
xchg
add
add
and
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
and
add
add
pop
lar
and
add
add
add
add
and
add
add
add
add
add
or
xchg
add
add
and
add
add
or
add
add
or
add
add
or
xchg
mov
repz
je
add
or
xchg
mov
push
or
add
add
add
add
add
or
add
pop
add
sub
add
add
add
add
xchg
mov
retf
add
add
add
or
add
add
or
xchg
xchg
add
and
sar
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
or
xchg
add
add
cmp
add
add
pop
daa
add
add
add
pop
sub
jo
add
or
xchg
add
add
add
or
add
add
add
add
cmp
add
add
add
add
add
cs
cmp
xchg
xchg
add
add
add
add
add
add
or
add
dec
add
or
xchg
xchg
add
add
dec
add
or
xchg
mov
cmp
xor
ins
dec
add
or
xchg
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
pop
cmp
or
add
add
pop
cmp
and
add
or
xchg
add
add
add
or
xchg
add
add
add
add
or
js
add
or
xchg
add
add
xchg
add
add
add
add
loopne
add
or
xchg
mov
repz
sub
add
add
add
pop
dec
add
or
xchg
mov
add
je
add
or
xchg
mov
fild
dec
add
add
add
add
mov
add
add
mov
add
add
push
push
add
or
xchg
add
add
add
add
add
js
add
or
xchg
add
add
add
add
mov
add
or
xchg
icebp
add
add
int3
push
add
or
xchg
icebp
add
add
in
push
add
or
xchg
mov
repz
sbb
add
or
xchg
xchg
add
add
inc
push
add
or
xchg
mov
retf
add
add
add
add
push
add
or
xchg
add
add
xchg
add
add
add
add
int3
push
add
or
xchg
add
add
push
add
or
xchg
add
add
push
add
or
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
push
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
or
dec
push
add
add
xchg
add
add
add
add
or
pop
push
add
add
xchg
add
add
add
add
or
ins
push
add
add
xchg
add
add
add
add
or
jl
add
add
xchg
add
add
add
or
mov
add
xchg
add
add
add
or
cwde
push
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
or
mov
add
or
mov
add
or
enter
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
inc
add
add
add
xor
sbb
add
mov
or
dec
add
add
add
add
add
add
add
add
retf
add
add
add
scas
add
add
xchg
add
add
add
add
add
add
add
push
fiadd
mov
icebp
add
add
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
add
add
add
add
add
ss
add
add
add
add
add
add
add
add
add
fild
xor
push
add
icebp
add
add
cmp
pop
add
fild
sbb
bound
ss
add
add
add
add
fild
and
icebp
add
add
inc
icebp
add
add
mov
push
jmp
push
add
icebp
add
sbb
clc
add
std
add
add
jns
cwde
push
aam
and
popf
push
or
jns
loope
sbb
add
push
add
pop
dec
add
push
mov
add
adc
add
add
and
add
pop
dec
push
push
add
pop
push
push
rol
pop
xor
jns
pop
pop
pop
add
ins
pop
pop
push
leave
add
cwde
pop
outs
push
rol
test
add
pop
jl
loope
rol
xchg
and
fld
fild
jns
jecxz
lea
rol
pop
xor
jmp
add
add
add
add
pop
dec
add
add
mov
add
add
add
add
push
or
push
or
adc
icebp
add
add
add
add
add
mov
pop
add
add
add
add
add
add
or
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
xor
add
fiadd
and
inc
or
pop
and
push
or
add
pop
or
cmp
icebp
add
add
icebp
add
add
add
add
add
or
add
or
or
dec
or
or
or
jmp
or
icebp
add
add
icebp
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
test
cs
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
push
add
add
push
mov
add
add
push
mov
popf
add
adc
adc
adc
push
mov
popf
add
mov
popf
add
add
mov
popf
add
sbb
popf
add
sbb
add
add
or
add
nop
add
add
add
add
fiadd
add
add
add
add
sbb
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
xor
add
dec
add
add
add
add
add
add
outs
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
in
push
inc
push
pop
push
pop
pop
or
or
push
or
or
or
or
or
or
pop
or
jp
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
bound
or
add
xchg
add
add
add
add
add
add
add
add
add
add
adc
add
add
jle
jnp
sub
sbb
sub
add
xlat
add
add
or
add
push
add
ins
or
xor
push
add
add
dec
or
cdq
add
dec
or
call
add
dec
or
pushf
add
dec
or
popf
add
push
or
sahf
add
or
lahf
add
push
or
mov
add
add
add
add
movs
add
or
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
imul
add
xchg
mov
add
add
mov
mov
mov
jle
push
add
add
xchg
cmc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
or
pop
add
add
add
add
add
test
mov
mov
(bad)
mov
gs
add
test
mov
mov
(bad)
mov
ins
jae
outs
jb
imul
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
popa
jae
dec
outs
popa
add
jae
gs
cs
outs
jb
add
jb
gs
xor
add
ss
cmp
ss
sub
sub
sub
fs
aaa
xor
xor
cmp
popa
popa
xor
xor
sub
sub
gs
jne
arpl
cs
jae
jne
arpl
add
xor
xor
add
add
arpl
outs
jb
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
arpl
add
jb
popa
ins
add
je
dec
outs
addr16
add
popa
add
outs
je
xor
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
imul
gs
add
add
add
push
xor
push
xor
inc
aaa
inc
jno
inc
ja
jns
xor
inc
push
dec
je
bound
pop
push
addr16
ins
add
dec
push
push
push
bound
xor
bound
add
xor
xor
dec
xor
outs
push
push
xor
ins
imul
imul
gs
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
bound
push
xor
push
dec
dec
inc
outs
outs
push
add
pop
outs
inc
dec
jb
cmp
jno
xor
pop
popa
add
popa
fs
jns
add
dec
push
dec
pop
xor
xor
push
push
push
inc
xor
add
je
jo
push
inc
push
popa
dec
jbe
add
add
ins
jne
push
jns
add
add
push
arpl
and
or
or
dec
popa
je
add
js
and
add
imul
and
or
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
and
dec
inc
imul
ins
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
outs
fs
popa
jae
add
je
outs
fs
outs
outs
add
jo
jae
add
je
inc
outs
je
jns
outs
imul
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
and
push
je
imul
fs
inc
jo
outs
add
je
imul
jb
popa
jns
or
add
and
push
and
inc
gs
jbe
inc
jns
gs
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
push
imul
add
arpl
cmp
cmp
imul
jae
inc
gs
jns
gs
jae
je
dec
push
add
xor
xor
inc
jb
popa
je
add
fs
add
je
dec
gs
pop
and
inc
jb
jo
outs
push
je
gs
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
ins
jo
outs
outs
je
addr16
and
inc
outs
outs
je
imul
jbe
imul
gs
push
popa
fs
inc
outs
jb
add
outs
je
imul
je
outs
ins
add
je
push
arpl
gs
outs
fs
outs
je
outs
ins
add
je
push
gs
add
je
inc
jne
outs
push
arpl
gs
outs
fs
jne
push
ins
inc
ins
outs
arpl
add
add
je
add
jb
add
outs
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
push
inc
push
push
inc
je
jb
bound
add
and
push
jae
jb
outs
outs
je
outs
ins
add
gs
je
inc
arpl
jo
outs
jb
or
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
and
sbb
add
and
or
add
arpl
je
outs
outs
add
and
inc
imul
jb
pusha
xor
dec
outs
jbe
inc
imul
outs
arpl
jae
push
jns
je
ins
cs
imul
imul
pop
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
jo
inc
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
ins
gs
je
gs
ins
add
outs
jbe
jb
add
popa
jae
ss
je
imul
imul
add
fs
data16
outs
je
imul
addr16
dec
je
ins
add
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
addr16
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
dec
popa
ins
add
je
inc
push
push
jne
jae
jb
outs
add
outs
imul
je
ins
cs
push
imul
gs
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
add
je
gs
jo
popa
je
add
jb
popa
je
inc
imul
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
ins
add
imul
outs
push
jb
je
add
outs
jae
add
fs
imul
add
and
push
gs
imul
ins
add
popa
jb
jae
imul
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
and
or
jae
ins
bound
popa
ins
add
je
jne
ins
imul
imul
dec
popa
outs
popa
gs
push
inc
jb
jo
outs
push
gs
imul
imul
inc
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
outs
jae
outs
jb
inc
imul
arpl
inc
popa
je
push
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
imul
gs
imul
popa
ins
add
gs
je
inc
outs
arpl
jo
outs
jb
addr16
push
outs
jae
je
outs
outs
add
outs
add
je
push
outs
jae
je
outs
outs
add
jne
push
pop
dec
gs
popa
add
and
adc
je
or
popa
ins
imul
imul
jo
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
jns
adc
add
je
xor
or
add
add
add
dec
outs
je
add
and
and
add
add
push
add
push
jb
je
inc
jns
add
add
sbb
add
add
or
add
add
sbb
add
add
add
add
push
add
add
add
add
add
popa
jb
add
add
add
push
add
add
pop
push
add
add
or
add
push
add
add
femms
add
add
adc
add
push
add
add
adc
add
outs
arpl
add
add
adc
add
add
add
push
push
add
pop
inc
jno
popa
ins
imul
push
add
add
sbb
add
add
sbb
add
push
add
add
add
push
add
pop
dec
outs
gs
popa
ins
imul
push
add
push
add
add
or
add
push
add
add
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
add
add
ja
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
or
add
dec
add
push
add
cmp
push
add
add
xor
push
add
add
push
add
pop
add
add
pop
add
push
add
add
ins
add
jae
dec
add
inc
add
add
dec
add
popa
add
dec
add
add
ins
add
bound
xor
je
ins
add
push
xor
jne
add
js
jae
sub
pop
add
pop
add
data16
add
add
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
adc
add
jae
imul
cmp
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
add
add
add
ins
add
movd
add
je
jb
popa
add
adc
inc
add
ins
add
add
add
add
add
add
jae
imul
cmp
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
fcomp
dec
jg
dec
xchg
jl
jns
inc
or
add
mov
pop
push
sbb
mov
push
sbb
sub
pop
add
or
add
add
pop
add
pop
add
add
add
or
or
or
or
or
add
add
sbb
add
pop
and
or
add
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
push
add
adc
adc
sbb
add
adc
add
adc
add
and
sbb
add
push
push
push
adc
add
add
add
add
push
add
add
or
sbb
and
or
add
sbb
add
sbb
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
add
or
adc
pop
pop
or
or
or
or
add
or
add
sbb
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
adc
adc
adc
sub
or
or
or
or
or
or
and
adc
adc
or
or
or
or
or
or
or
add
or
or
or
add
add
or
add
add
add
add
add
add
sbb
or
or
add
add
or
add
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
adc
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
add
add
add
adc
push
sbb
adc
push
add
sbb
or
adc
adc
adc
or
sbb
or
add
inc
or
or
or
sbb
or
or
add
add
add
add
add
add
pop
or
adc
or
or
or
add
adc
add
or
add
or
adc
add
adc
sbb
add
adc
cmp
sbb
sbb
and
adc
push
adc
push
sbb
push
adc
pop
push
adc
or
add
dec
push
add
add
or
sbb
sbb
or
or
sbb
or
or
add
push
add
or
or
or
sbb
or
add
sbb
add
add
pop
add
add
add
adc
pop
add
and
push
add
add
sbb
and
sbb
sbb
push
adc
add
adc
add
add
pop
add
push
sysret
or
adc
or
or
or
add
adc
sysret
or
adc
or
or
or
add
adc
add
and
add
sbb
add
imul
add
add
inc
sbb
sbb
add
push
add
adc
add
gs
add
jno
pop
or
adc
add
or
or
or
add
jne
or
adc
add
add
or
add
adc
and
add
adc
jns
jge
add
adc
adc
jns
jge
push
adc
add
add
cmp
or
and
add
add
add
or
pop
or
or
or
add
push
add
jno
or
or
or
sbb
or
add
push
push
or
pop
or
or
add
add
add
add
add
adc
add
inc
adc
and
sbb
sbb
sbb
dec
sbb
sbb
add
add
add
jno
add
add
jno
add
sbb
or
add
jno
pop
add
or
or
or
or
or
or
add
add
add
push
or
add
adc
add
add
push
pop
add
add
adc
adc
add
sbb
or
push
and
add
adc
adc
add
sbb
or
or
add
add
sbb
add
sbb
sbb
add
adc
push
add
push
add
push
add
add
add
add
sbb
and
add
adc
or
or
or
add
adc
add
push
push
add
adc
inc
add
add
jns
push
adc
adc
push
adc
mov
push
add
add
push
or
or
rol
add
adc
adc
push
sbb
or
or
adc
or
push
adc
add
push
adc
add
sbb
sbb
and
or
add
add
and
adc
adc
pop
and
add
add
add
add
adc
add
mov
sbb
add
leave
add
push
add
sbb
and
add
add
or
add
or
add
sbb
or
add
add
or
push
pop
add
sbb
or
add
add
push
add
push
push
sbb
push
add
adc
add
push
add
add
sbb
add
adc
add
cmp
add
adc
push
push
sbb
or
or
sbb
and
push
add
push
add
add
push
push
and
add
add
add
add
add
add
outs
add
add
add
pop
add
add
pop
add
add
cmp
add
inc
adc
add
adc
add
pop
add
or
cmp
add
or
or
add
or
or
adc
add
sbb
add
or
and
sbb
or
add
sbb
add
and
xor
adc
or
or
sbb
sbb
sbb
pushf
sbb
or
sbb
add
sbb
sbb
adc
or
adc
sbb
sbb
and
adc
adc
add
add
sbb
add
sbb
sbb
pop
add
sbb
or
pop
add
sbb
sbb
add
or
sbb
add
or
or
add
or
or
push
sbb
or
push
adc
adc
push
or
or
or
or
pop
or
or
or
or
or
or
add
or
or
add
or
pop
add
or
or
add
or
sub
or
sub
add
and
add
or
pop
pop
add
or
and
or
or
pop
add
pop
adc
or
or
or
or
or
or
or
or
or
and
or
or
push
add
or
or
or
add
adc
sbb
adc
add
adc
sub
add
sbb
add
sub
or
adc
add
sub
or
add
add
or
or
add
add
sbb
push
adc
add
and
add
sbb
pop
push
sbb
or
adc
invd
or
or
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
push
and
add
and
sysret
or
or
or
or
push
or
or
add
add
add
or
or
add
or
push
add
add
or
adc
cmp
push
adc
or
push
adc
adc
add
adc
add
sbb
sbb
sbb
add
jns
add
or
or
sbb
sbb
add
adc
add
sbb
add
gs
add
adc
add
push
add
or
push
add
sbb
add
sbb
add
sbb
add
sbb
add
push
add
sbb
add
adc
add
sbb
add
adc
push
add
push
push
push
push
add
sbb
add
add
xor
xor
add
sbb
adc
push
adc
or
popa
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
ins
jae
arpl
and
add
add
adc
push
outs
and
jb
outs
jb
je
outs
outs
and
add
add
dec
gs
inc
jb
and
gs
jns
add
and
jb
jo
outs
addr16
jo
imul
gs
outs
and
outs
imul
add
or
inc
sub
xor
xor
add
add
add
add
and
bound
xor
cmp
sub
sub
sub
sub
xor
add
sgdtd
or
ss
xor
add
add
or
dec
scas
or
add
add
inc
scas
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
