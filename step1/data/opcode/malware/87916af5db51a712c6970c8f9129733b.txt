mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
mov
mov
lods
call
xchg
push
mov
jmp
aad
or
mov
(bad)
mov
jns
popa
jl
mov
stos
(bad)
fisubr
shl
lea
enter
loope
add
frstor
movs
sbb
push
call
(bad)
push
add
out
dec
(bad)
pop
pop
xchg
xchg
add
out
mov
sbb
icebp
mov
cmp
call
popf
add
mov
loopne
push
ins
aas
pushf
push
xchg
push
push
ds
outs
repz
fisub
push
out
xchg
mov
mov
cmp
div
mov
repz
ins
mov
gs
mov
add
inc
icebp
and
sbb
fisttp
ror
pop
pop
dec
adc
jecxz
push
mov
repz
sub
push
jae
and
xor
or
loope
test
bound
test
int
sti
idiv
loope
repnz
arpl
mov
xchg
mov
rep
ds
les
mov
pop
mov
xchg
call
mov
hlt
inc
aas
sub
fbld
not
cmp
ja
push
jo
ror
cmp
call
cdq
adc
mov
and
push
push
push
cmps
xlat
scas
movs
gs
mov
ret
icebp
mov
add
adc
sub
aaa
push
and
dec
adc
push
inc
(bad)
pop
icebp
dec
fstp
cmp
and
pusha
or
test
dec
xor
add
xor
leave
mov
mov
(bad)
pop
sub
test
in
or
and
retf
add
movs
jl
frstor
sbb
xchg
mov
mov
iret
inc
and
sbb
not
sub
pop
loope
movs
mov
xlat
sub
xlat
cli
and
add
in
leave
cld
loop
in
inc
mov
sbb
jle
adc
jnp
push
stc
shl
js
push
xor
gs
ret
xor
std
jmp
int
cmc
inc
dec
and
leave
sub
out
jle
test
sub
dec
cmp
jbe
push
mov
pushf
cwde
test
movs
inc
sub
push
rcl
xchg
jnp
sub
xchg
dec
movs
xchg
pop
xor
pusha
scas
mov
adc
test
push
call
push
pop
lock
xchg
ins
jmp
(bad)
push
jmp
stos
mov
pop
aas
test
mov
mov
js
in
adc
shl
popa
shr
aaa
ja
enter
fild
add
xor
retf
push
cli
rcl
add
neg
in
mov
add
and
mov
xchg
popa
fild
cdq
in
nop
outs
jb
cmp
shl
or
pop
repz
loop
fisttp
daa
es
mov
jb
xchg
mov
dec
lea
pop
push
in
inc
or
mov
sub
pop
inc
ds
push
data16
pop
push
sub
mov
clc
repnz
ret
movs
push
cdq
inc
jmp
rcl
nop
or
js
jae
loop
das
dec
add
imul
hlt
add
pcmpeqd
into
call
ins
into
lods
imul
inc
xchg
sbb
ror
push
jnp
mov
es
fisub
mov
sub
in
sub
pop
pop
test
pop
mov
enter
adc
test
out
shr
cmp
in
mov
xor
dec
push
jle
xchg
mov
jmp
hlt
adc
xor
repz
sub
add
stc
int3
jo
cwde
xchg
mov
and
jb
xchg
mov
loopne
shr
hlt
sub
push
adc
push
or
cs
sub
cdq
or
xchg
push
or
jle
call
mov
(bad)
mov
mov
scas
adc
rcr
pop
mov
ds
shr
inc
dec
lock
in
addr16
xlat
push
in
mov
aaa
jmp
xor
ds
xor
cmp
cmp
mov
aad
lds
inc
dec
cld
and
movs
add
loop
outs
fadd
test
xchg
nop
jle
repz
xchg
adc
add
xor
sbb
aad
int3
xchg
retf
loope
adc
xor
dec
pushf
div
imul
xchg
int3
aam
fdiv
outs
adc
cdq
and
xchg
jge
lea
retf
lods
mov
dec
dec
pop
pop
push
adc
(bad)
cli
mov
mov
dec
(bad)
push
push
call
shr
or
gs
imul
or
and
or
pop
(bad)
test
scas
mov
dec
cmp
in
movs
into
push
dec
into
es
adc
loop
jbe
out
xchg
aaa
(bad)
cmp
outs
xor
cmps
mov
into
xchg
(bad)
add
dec
scas
xchg
test
fmul
push
xchg
mov
sub
push
sub
or
icebp
dec
xlat
mov
inc
xlat
movs
loope
mov
jne
jns
cwde
jbe
fcomi
clc
(bad)
(bad)
daa
jbe
and
cmps
das
(bad)
call
icebp
xchg
and
and
add
mov
push
cmps
xor
dec
fdiv
stos
aad
sub
ins
outs
and
std
cmc
xor
xor
lods
jnp
mov
mov
or
stc
retf
sbb
and
leave
dec
add
out
sbb
push
pop
das
int
dec
xchg
inc
dec
out
sbb
movs
jbe
sbb
or
pop
push
imul
test
mov
jo
int
push
and
call
sbb
out
and
adc
xchg
xchg
xor
js
iret
in
jbe
in
loopne
popf
mov
mov
adc
or
popf
mov
mov
mov
mov
inc
or
push
sti
lahf
sub
and
dec
sub
dec
inc
jge
xor
push
cli
(bad)
fchs
jmp
ins
or
call
inc
xor
scas
mov
and
mov
cmp
(bad)
push
subps
ret
mov
out
mov
dec
sub
movs
and
ja
cld
icebp
mov
xchg
daa
pop
and
sbb
jge
xchg
adc
mov
lods
lahf
push
vmread
dec
push
mov
jno
retf
xchg
hlt
out
lods
sahf
inc
mov
mov
dec
retf
mov
sti
fwait
pop
dec
inc
push
or
dec
mov
leave
sub
icebp
push
xchg
mov
sub
test
or
ffree
mov
mov
add
test
push
sub
pop
shr
sbb
btr
mov
cs
test
mov
cs
add
add
cmps
adc
mov
mov
(bad)
dec
loope
lods
outs
xchg
add
rol
lock
mov
movs
nop
mov
test
fild
xchg
pop
cmp
int
add
dec
mov
or
ins
mul
dec
mov
fcom
push
gs
sar
or
sahf
les
sbb
mov
add
cmp
rcl
or
into
pusha
out
or
dec
adc
add
dec
pusha
mov
idiv
jnp
(bad)
(bad)
adc
sbb
scas
sbb
sub
jp
sub
mov
sub
(bad)
sub
cmp
fs
mov
loop
mov
imul
dec
cwde
inc
push
loop
lods
cmp
ret
movs
fmul
inc
test
xchg
call
jns
mov
imul
mov
fwait
dec
(bad)
xchg
and
push
push
adc
ins
mov
pop
sub
cld
es
mov
push
cmp
ds
out
inc
jmp
push
pushf
adc
cmp
sti
push
mov
popa
dec
cld
mov
cmps
out
sbb
dec
bound
aad
js
neg
push
dec
adc
cs
add
cmp
call
or
dec
sbb
sub
mov
(bad)
imul
movs
and
loope
xor
ficomp
sbb
push
cmps
fiadd
jae
test
fsub
fst
ins
pop
adc
and
outs
jmp
mov
jo
fidivr
movs
cmp
mov
pop
jp
dec
stos
dec
inc
mov
adc
cmp
movs
shl
adc
mov
cmp
stos
jae
lahf
add
aaa
sub
inc
mov
xchg
jp
lahf
daa
add
dec
retf
mov
dec
call
mov
jns
pop
call
add
je
ins
pop
sbb
rol
stc
push
pushf
add
repnz
pop
movs
inc
mov
int3
jo
xchg
mov
xor
cmp
cmp
in
dec
dec
dec
ficomp
popf
mov
sar
mov
push
cmps
loop
(bad)
jge
xchg
fsqrt
mov
mov
icebp
or
adc
add
xchg
(bad)
fild
sar
xchg
dec
loop
hlt
aaa
or
sub
or
(bad)
int
push
stc
mov
sub
rol
sti
dec
cmp
repz
ret
test
outs
adc
and
adc
int3
clc
aad
jae
bound
xor
das
loop
mov
push
mov
inc
mov
neg
aad
mov
(bad)
push
mov
add
movs
fidiv
fidivr
xchg
add
in
lea
mov
xchg
adc
imul
imul
fisubr
xor
push
sub
mov
pushf
retf
pop
adc
mov
cmp
adc
xchg
pop
adc
jbe
push
dec
mov
lahf
int
into
aaa
setno
retf
ret
stc
xor
xlat
push
repnz
mov
adc
xor
inc
(bad)
fisubr
mov
repz
repz
icebp
fs
push
retf
sub
sub
hlt
jmp
push
push
hlt
shl
pusha
inc
xor
add
dec
pop
fcom
lea
lds
(bad)
add
aas
xchg
push
pushf
jbe
mov
mov
mov
inc
je
push
sub
in
stos
xor
pop
inc
leave
xor
test
cdq
push
gs
sti
pusha
or
int3
cmp
mov
pop
int
xchg
(bad)
aad
xor
enter
repnz
inc
inc
jae
dec
push
mov
adc
out
popf
mov
sbb
pop
mov
movs
(bad)
jecxz
sbb
shl
fidiv
ss
mov
movs
aad
dec
ja
mov
cs
or
pop
out
dec
ret
ror
cli
push
push
push
cmp
leave
loope
call
adc
dec
jle
in
call
cmp
adc
xchg
clc
icebp
inc
adc
add
pushf
dec
push
aaa
(bad)
scas
sub
lock
test
push
sub
mov
mov
ss
mov
xlat
push
mov
out
mov
and
lahf
push
xchg
rcr
loope
pop
sbb
add
daa
mov
or
loop
ror
fidiv
aas
mov
pop
out
sub
mov
(bad)
adc
sub
cwde
sbb
rol
mov
jle
jmp
call
daa
add
lock
int3
out
fwait
gs
dec
cmp
and
cmp
inc
loope
lea
cwde
add
mov
mov
loope
scas
(bad)
dec
xchg
js
retf
mov
cmp
add
mov
lods
inc
cmc
dec
out
push
call
dec
sub
jmp
clc
cwde
div
jo
lods
mov
stos
inc
(bad)
stos
mov
inc
pop
mov
movs
cli
jp
cdq
(bad)
aaa
bound
push
pop
inc
shr
add
rcr
cwde
xor
mov
clc
(bad)
in
cmp
stos
adc
popf
pushf
pop
jae
repnz
aas
add
popa
mov
stc
cld
retf
ss
into
xor
loopne
dec
popa
mul
add
movs
scas
inc
mov
pop
retf
pop
popf
mov
movs
add
daa
adc
cmp
xor
adc
mov
inc
aas
shr
das
pop
lods
jbe
in
xchg
mov
fcmovnb
mov
imul
les
add
push
(bad)
add
and
ds
cmps
xchg
fdiv
inc
inc
in
xchg
inc
mov
pop
loop
out
mov
mov
inc
pop
push
jl
sar
cwde
pop
adc
fld
xlat
inc
add
arpl
aam
clc
ds
jnp
push
jb
jmp
jmp
xchg
movs
jb
inc
cmps
xor
sbb
and
inc
cmp
mul
sub
or
test
adc
dec
ss
das
cmp
or
push
inc
xlat
lahf
push
mov
mov
push
out
and
xor
add
mov
pusha
dec
test
sbb
cmps
and
and
out
mov
int3
or
enter
pop
imul
cmp
(bad)
imul
and
into
jae
sub
mov
push
arpl
pusha
ins
fstp
lock
ins
xchg
je
mov
je
out
jp
hlt
cmp
pop
xor
nop
pop
outs
mov
iret
pop
out
test
les
sub
js
xchg
jmp
popa
ss
sbb
inc
out
jbe
or
out
mov
iret
scas
or
jle
(bad)
scas
pop
shr
ds
arpl
(bad)
gs
and
mov
pop
sub
jmp
cmp
cmp
popa
scas
xor
ss
leave
pop
mov
add
inc
mov
xchg
and
inc
cwde
mov
xchg
scas
and
arpl
mov
ins
adc
xor
icebp
(bad)
fst
repnz
cmp
xor
hlt
loop
dec
xchg
rol
jnp
mov
or
jmp
daa
icebp
sub
popf
mov
dec
mov
or
jnp
and
dec
push
adc
dec
cmps
iret
ss
pop
cs
int
movs
loope
pop
jns
or
mov
jb
cmp
ja
jl
ins
mov
xchg
sbb
adc
xor
xchg
xor
dec
push
adc
pop
mov
out
dec
sub
or
test
mov
and
int3
push
adc
mov
mov
mov
jmp
dec
push
dec
cmp
fmul
das
or
clc
loope
fiadd
loopne
mov
mov
inc
fst
fwait
not
push
fs
xchg
mov
or
lds
int
mov
aas
push
adc
dec
std
stos
cmp
popa
test
(bad)
fwait
jne
mov
fucomip
aad
fwait
cmps
popa
mov
pop
stos
pusha
sbb
or
and
mov
cmp
adc
imul
aaa
lods
lods
or
ret
mov
cmc
(bad)
(bad)
js
hlt
sub
sub
iret
adc
aaa
std
std
mov
adc
dec
push
test
rol
ror
mov
sti
sub
rcr
and
push
ins
inc
xor
cmp
dec
add
leave
sub
cwde
js
mov
stos
xchg
cwde
jmp
scas
clc
cmp
ins
fwait
jl
neg
inc
outs
cmp
dec
scas
push
jbe
lea
mov
shld
or
pop
dec
sahf
push
not
pusha
xor
and
dec
shl
stos
jmp
sbb
cmc
and
pop
outs
mov
cmp
daa
and
cmps
dec
jnp
jae
movs
fistp
adc
inc
jecxz
add
inc
shl
test
inc
out
and
inc
xor
jmp
mov
aas
aam
ror
pop
hlt
inc
fs
in
popf
repz
fdivr
neg
ret
inc
addr16
jle
push
jmp
iret
iret
and
and
mov
jg
pop
jo
mov
cli
xor
cmps
imul
xchg
std
jns
or
test
outs
cwde
jno
sub
pop
xor
dec
sahf
or
out
in
sub
jae
fmul
ss
xchg
clc
sub
mov
xchg
add
mov
inc
retf
out
and
fwait
mov
or
bound
mov
imul
pop
bound
repz
or
mov
xchg
jcxz
popa
push
fwait
mov
mov
es
jns
cs
mov
test
pop
sub
ja
sub
xchg
and
cwde
xor
cld
xor
mov
inc
jo
mov
cs
outs
cmp
cmp
xchg
add
sti
xor
cmc
pop
mov
sub
adc
mov
sub
xor
lods
in
jle
mov
scas
add
and
loope
jmp
xchg
retf
dec
jo
sahf
push
pop
test
mov
loope
dec
fld
outs
(bad)
push
aaa
push
or
sub
mov
xor
mov
dec
push
in
sahf
mov
iret
cdq
cwde
xlat
outs
inc
cmp
push
pushf
xchg
mov
in
pop
xchg
mov
in
and
ins
cmps
imul
jne
push
dec
stc
pusha
inc
add
dec
ss
xchg
pop
add
clc
push
or
aas
adc
mov
pop
shl
cmp
xor
pop
loope
cmp
add
mov
inc
fistp
std
shl
mov
cdq
cmp
ret
outs
(bad)
dec
and
shl
cmp
inc
js
hlt
dec
lds
cmp
nop
dec
jg
sbb
cmp
popf
inc
out
jmp
inc
mov
sub
inc
xchg
or
mov
iret
(bad)
push
loop
mov
neg
push
pop
push
stos
out
lea
sbb
dec
fsubr
push
push
jnp
jmp
mov
xlat
sub
test
xor
push
es
xor
mov
int3
loope
outs
mov
cmp
outs
arpl
add
pusha
sti
pop
rol
and
clc
and
adc
int
loop
adc
inc
inc
xchg
sbb
lahf
add
mov
adc
xlat
mov
cmp
in
pop
ins
dec
in
clc
jl
call
xor
mov
iret
es
scas
pop
or
push
pop
add
out
dec
call
cmp
sub
or
push
retf
sar
jl
ret
pop
mov
inc
dec
push
out
xor
setno
xchg
mov
and
xchg
mov
scas
bound
inc
push
cwde
push
pop
pusha
inc
dec
inc
jle
retf
out
les
pop
std
outs
mov
ja
enter
push
(bad)
and
xchg
mov
cmps
xchg
push
xor
cmc
cmp
push
pop
pop
fisttp
mov
xor
adc
out
inc
xchg
jl
int
aam
jns
leave
adc
sub
addr16
xor
or
aam
add
jmp
daa
jbe
inc
sbb
mov
cdq
adc
push
repnz
push
lahf
cmp
mov
dec
push
jmp
mov
bound
fcomip
push
or
out
ret
aad
mov
adc
mov
inc
pusha
pop
push
jbe
sub
sub
retf
iret
cli
cmp
arpl
sbb
inc
sbb
hlt
mov
fmul
inc
xor
xchg
sbb
test
inc
inc
mov
dec
sar
jle
and
fcmovnbe
imul
push
scas
pushf
mov
add
sbb
and
add
retf
(bad)
adc
retf
cmp
(bad)
es
sbb
rcr
sub
adc
push
mov
push
jb
adc
xor
push
mov
je
inc
(bad)
int
out
test
bound
data16
loopne
and
out
mov
fisubr
(bad)
jbe
push
ds
mov
es
nop
(bad)
inc
cmc
retf
mov
and
push
into
arpl
out
stos
aam
xor
ss
or
pop
or
dec
mov
mov
ret
sub
sar
jmp
enter
inc
je
shr
xchg
jp
hlt
pop
dec
addr16
cli
enter
inc
add
rcr
xchg
add
lods
inc
fwait
out
pop
out
push
ja
and
out
xor
rcr
dec
xor
jp
cmps
rol
div
int3
pusha
pushf
fs
sbb
and
jo
or
sub
xor
das
dec
mov
hlt
jne
inc
fidiv
mov
dec
sub
daa
mov
stos
jnp
in
push
xchg
xor
movs
enter
mov
mov
mov
in
stos
push
or
neg
cmc
lahf
push
push
xchg
out
es
inc
mov
paddd
cmp
or
int3
add
test
into
pop
dec
jb
out
adc
out
push
sub
sub
cmp
adc
add
adc
jnp
js
cmp
in
inc
push
sbb
pop
fldcw
outs
inc
jmp
cld
sub
cmps
adc
push
mov
jecxz
dec
lahf
inc
clc
adc
fsub
push
(bad)
cmp
and
xchg
mov
loope
pop
add
cmp
(bad)
push
pop
es
and
jo
mov
mov
imul
dec
add
pop
ret
in
les
jl
icebp
inc
inc
and
mov
and
sbb
lock
or
mov
push
xchg
mov
fsubrp
or
movsx
and
stos
into
cmovle
je
mov
aad
jmp
xchg
rol
iret
ret
mov
pop
retf
inc
cwde
rcl
aas
hlt
add
aas
jl
add
jl
mov
cld
sbb
int3
mov
lahf
push
fdivr
mov
fstp
call
xchg
int
and
adc
lds
stos
arpl
cwde
inc
mov
xchg
mov
fs
repz
inc
out
fwait
int3
xchg
js
push
pop
adc
shr
mov
xchg
adc
sub
lahf
sbb
and
jb
pop
push
push
xchg
(bad)
int3
push
push
mov
push
lods
or
(bad)
dec
push
xor
jle
mov
adc
jmp
push
lods
xchg
pop
mov
pop
shl
fcom
retf
pop
mov
add
and
adc
adc
sub
xor
mov
push
mov
jmp
xchg
cmp
sti
push
mov
test
std
aas
xchg
cmp
pop
inc
leave
xor
in
enter
fdivp
mov
jno
leave
mov
and
pop
in
inc
and
inc
push
sbb
fidivr
in
pop
test
push
push
lods
mov
adc
stos
jg
les
sub
lds
in
sub
rcpps
nop
ja
ret
dec
es
fst
mov
shl
mov
hlt
inc
pop
in
push
jmp
xlat
repz
cmp
mov
sub
push
in
lahf
or
mov
ins
xor
inc
loop
pop
dec
jnp
(bad)
add
and
cmovns
pushf
inc
push
call
adc
scas
iret
mov
jecxz
ret
mov
or
and
pop
sub
(bad)
sub
fisub
xor
sbb
mov
fwait
retf
xor
scas
xchg
hlt
fdivr
mov
fwait
scas
lds
mov
mov
in
mov
sub
pop
jl
movs
jne
push
cmp
cmp
ins
xor
sbb
and
repnz
in
sti
mov
sub
mov
lea
fist
loope
(bad)
popa
lea
pop
pushf
adc
or
xchg
inc
xchg
sbb
aas
out
push
jae
mov
jge
sub
int3
(bad)
shl
adc
repz
cld
retf
dec
xchg
loopne
push
in
(bad)
and
call
in
inc
pusha
jmp
fisub
not
pop
lods
or
int
pop
(bad)
and
jle
adc
xchg
cmp
outs
sbb
popa
dec
mov
gs
loopne
pop
inc
sub
and
clc
xchg
cmps
(bad)
cmp
mov
or
cmp
ds
and
mov
cmp
enter
push
popa
or
mov
push
mov
push
loop
aam
or
jg
and
fwait
pusha
mov
cwde
dec
mov
adc
mov
xchg
retf
pusha
addr16
push
fnstenv
fcomp
lds
call
dec
imul
jecxz
ins
loop
cmps
scas
mov
xchg
icebp
push
adc
push
je
push
aam
lods
jmp
mov
es
and
add
movs
xchg
(bad)
hlt
cvtpi2ps
xchg
xchg
dec
popa
fwait
and
ins
movs
xchg
push
pop
and
mov
js
(bad)
or
je
adc
xchg
ret
pop
aas
sahf
fistp
outs
mov
dec
pop
leave
test
sub
jnp
out
lods
fwait
mov
xchg
ja
movs
mov
jecxz
or
fistp
aad
lock
mov
jnp
mov
(bad)
stc
or
cmp
mov
xchg
enter
mov
dec
xor
ins
loopne
push
imul
mov
push
mov
pop
push
mov
scas
test
mov
lock
mov
mov
inc
pop
loopne
ret
push
lods
ja
push
in
pop
daa
rcr
sbb
addr16
xor
mov
repz
and
out
mov
mov
iret
outs
push
jb
loopne
dec
shl
jno
xor
loopne
jg
pop
pop
mov
jmp
lds
ficomp
sbb
dec
scas
call
inc
inc
add
(bad)
and
cs
movs
or
sbb
sahf
cli
retf
imul
jo
jns
lock
fnstsw
sahf
and
test
mov
mov
lds
inc
mov
jl
sub
push
icebp
xchg
xor
fdivr
push
inc
imul
and
push
mov
std
rcr
call
(bad)
xor
loop
div
dec
add
sbb
pop
adc
or
and
or
test
or
cs
dec
and
adc
sub
outs
ds
fdivr
sub
les
ins
mul
cmp
push
mov
int3
push
jns
cmp
and
jle
in
add
xchg
pop
fcmovne
adc
lahf
pop
test
mov
mov
xchg
cmp
cmp
inc
ins
pop
rcl
mov
jno
mov
xchg
pop
sbb
fst
add
inc
mov
lods
mov
jno
test
in
or
stc
gs
test
iret
leave
dec
jle
aaa
xor
(bad)
sub
sti
add
jo
xor
sub
ffree
and
dec
mov
sub
inc
mov
shr
push
cld
jp
dec
push
aas
sahf
fidiv
mov
adc
mov
adc
sbb
mov
nop
lods
inc
mov
shr
pop
inc
sbb
xchg
int
cmp
or
add
call
mov
pop
cld
fistp
push
dec
jns
into
push
arpl
out
push
imul
inc
aam
aaa
retf
jae
cmp
out
fldenv
nop
js
cmc
sub
xor
shl
shl
push
sahf
push
push
cmp
jmp
mov
sub
push
push
loopne
pop
loopne
sbb
inc
js
inc
int
inc
cmps
clc
adc
mov
repnz
hlt
cs
out
retf
out
and
ret
push
ins
sahf
push
sub
and
shr
aad
dec
imul
js
xchg
add
inc
xchg
mov
popa
jecxz
pop
cmps
fistp
pop
mov
daa
mov
ror
sti
imul
mov
jle
mov
in
xchg
xchg
cld
mov
mov
mov
push
dec
test
sub
dec
retf
ins
retf
aaa
pop
out
jb
push
push
inc
cmps
popa
(bad)
push
push
jge
sbb
lods
dec
loop
aam
mov
pushf
popf
inc
inc
pop
(bad)
popf
mov
jp
nop
and
call
and
adc
out
(bad)
fcmovu
and
and
test
icebp
fs
jbe
mov
(bad)
xchg
fndisi(8087
lahf
outs
fiadd
push
jg
adc
pop
shr
aad
fwait
xchg
cs
icebp
xchg
mov
add
(bad)
sbb
(bad)
lea
sbb
icebp
jl
inc
mov
lods
dec
dec
inc
retf
icebp
cmp
int
shl
std
jnp
jge
pop
retf
mov
lock
fst
arpl
mov
aad
outs
(bad)
cli
sub
je
adc
mov
mov
sub
adc
sub
mov
jns
mov
fiadd
dec
dec
mov
movs
adc
popa
xor
mov
inc
(bad)
mov
(bad)
fbstp
pusha
adc
rcl
fdecstp
aam
sahf
adc
cmp
shl
div
in
test
out
mov
aad
retf
sar
add
loope
scas
fisttp
or
add
add
loopne
add
scas
mov
lods
mov
sbb
inc
sub
lahf
pop
sahf
mov
sti
(bad)
pop
mov
lods
and
fs
or
jns
call
push
dec
aaa
push
sub
pop
aam
jmp
pop
add
js
mov
rcr
push
xchg
ror
test
xor
ror
sbb
lahf
add
fcomp
inc
aaa
(bad)
fist
and
in
push
xor
and
pop
and
push
sbb
adc
xor
xchg
sbb
sbb
enter
out
test
imul
sbb
retf
inc
test
dec
push
add
mov
push
mov
imul
sbb
je
(bad)
and
repnz
mov
jb
pusha
(bad)
movs
in
pop
jg
xchg
es
in
mov
movs
adc
xchg
cli
out
in
mov
pop
xchg
cmc
or
inc
fbld
mov
mov
pop
sub
jmp
mov
mov
pop
fsubr
pop
fnstenv
xor
lods
test
dec
or
add
neg
mov
jge
cld
pop
popf
(bad)
and
mov
test
test
cld
mov
inc
adc
xor
push
inc
(bad)
retf
and
and
xor
pop
test
cwde
lods
cld
das
in
ja
xchg
dec
ficomp
mov
mov
lods
push
lock
and
(bad)
dec
fcom
mov
(bad)
or
push
mov
ret
sbb
(bad)
pushf
pop
enter
mov
push
fwait
push
lea
xchg
popf
add
pop
inc
or
dec
jp
(bad)
xor
pop
jmp
fwait
push
jno
push
imul
aam
add
push
push
or
xor
adc
shl
out
adc
pusha
xchg
jnp
sti
pop
sub
vunpcklps
into
lds
jno
pop
ret
std
sbb
rcr
jmp
push
push
popa
dec
popf
dec
sub
jnp
or
jl
leave
fwait
dec
adc
popf
push
fistp
test
xchg
or
and
push
adc
call
add
repz
out
imul
fisttp
retf
cdq
jle
daa
and
ja
sbb
cli
fld
daa
fwait
xor
inc
and
rol
cs
enter
adc
inc
mov
fbstp
push
aas
adc
mov
xor
in
xor
mov
jne
repnz
cmp
cmp
call
adc
aad
fsubr
pushf
nop
xchg
and
loope
sub
mov
and
(bad)
std
cmps
push
cmp
adc
aas
mov
gs
std
outs
sbb
sbb
cmc
sahf
push
sbb
cld
add
xor
cld
(bad)
cmc
loope
out
cwde
std
jbe
dec
pop
lds
(bad)
shl
xor
stc
ret
scas
repz
(bad)
xor
shl
mov
ret
dec
in
repz
scas
xor
add
rol
mov
hlt
jmp
mov
cmp
cli
and
pushf
xor
mov
sbb
dec
(bad)
dec
ror
popf
jg
stc
test
sbb
inc
and
aad
sbb
sbb
test
mov
jno
shl
into
or
or
scas
inc
mov
imul
and
call
and
dec
dec
sbb
add
mov
cwde
mul
aad
fnstcw
mov
(bad)
in
jp
and
(bad)
inc
rcl
mov
add
jmp
push
nop
or
xchg
jmp
pop
retf
push
dec
outs
loopne
stos
lods
ret
aam
(bad)
and
lods
lods
jge
rcl
rcr
and
sub
cmc
ror
xlat
(bad)
leave
push
iret
pop
cmp
mov
fwait
jo
movzx
sbb
pop
ja
jno
inc
es
jo
fcomp
outs
jnp
data16
or
lahf
jmp
loopne
and
inc
es
mov
out
movs
scas
mov
aaa
test
add
shr
ja
mov
xor
lds
mov
cmp
ins
mov
or
inc
loop
adc
cmps
pop
loope
dec
xchg
xor
test
pop
xchg
test
pop
es
mov
neg
push
test
inc
jbe
popa
sub
in
jns
rcl
sahf
adc
mov
sbb
inc
aad
(bad)
addr16
sbb
sbb
xchg
xchg
ds
mov
or
movs
in
and
xchg
dec
icebp
push
xchg
popf
repz
shl
fwait
(bad)
mov
hlt
loope
dec
sti
or
xlat
mov
cmp
jb
pop
pusha
test
cmc
data16
xor
and
mov
test
das
mov
outs
fiadd
and
jecxz
rol
pusha
ret
xor
xor
sub
std
jge
inc
lods
push
rcr
and
mov
xlat
aad
mov
popf
ret
and
leave
fsub
scas
outs
pop
or
int3
jno
out
adc
pop
inc
dec
scas
mov
(bad)
shl
pop
dec
push
into
mov
or
push
outs
je
int
call
loop
shl
ss
(bad)
es
mov
push
jg
popf
mov
pushf
inc
push
or
jmp
jno
mov
popa
jl
sbb
int
sub
and
in
xor
mov
ret
retf
popa
leave
mov
pushf
iret
jmp
test
in
(bad)
sub
and
or
les
cmp
pusha
sbb
lods
jmp
(bad)
loope
fisttp
mov
fbstp
lods
mov
loop
retf
bound
and
in
pop
(bad)
xchg
je
mov
pop
sbb
or
loopne
and
mov
pop
inc
add
mov
mov
pop
cli
mov
cs
and
into
add
fcom
call
push
xchg
fs
(bad)
jae
fcom
inc
pop
scas
(bad)
jo
pop
(bad)
add
out
push
inc
sti
mov
push
jnp
fcomp
cli
dec
aaa
dec
pop
sub
ins
es
jle
shl
cdq
xor
in
xchg
sub
sub
imul
mov
cmp
adc
cmp
rcl
mov
jmp
push
popf
cmp
or
outs
pop
rcl
mov
jnp
loopne
inc
iret
lds
enter
mov
(bad)
sub
jbe
xor
mov
ss
ficomp
into
inc
bnd
xchg
fisttp
(bad)
icebp
mov
sub
arpl
sbb
pop
imul
dec
cmp
xchg
inc
daa
pushf
jo
popa
loop
test
retf
add
dec
pxor
add
jb
mov
lods
and
in
inc
clc
movs
pop
mov
fwait
cli
sub
jge
call
push
loopne
lods
popf
jle
fwait
(bad)
cmp
dec
mov
mov
mov
lods
out
sub
dec
xor
cwde
cwde
iret
bound
adc
shl
cmp
push
xchg
lahf
push
fistp
nop
inc
imul
sub
cmp
push
(bad)
fist
sub
pop
cwde
sbb
(bad)
push
sub
cmp
push
inc
stos
push
cmp
adc
cmp
outs
adc
push
scas
sti
push
add
sbb
pop
mov
mov
gs
or
xor
pop
jbe
out
shl
mov
ins
xchg
xchg
inc
mov
call
ja
mov
xchg
cmp
leave
add
ins
sub
sub
cmp
loop
inc
dec
xlat
dec
mul
fwait
icebp
test
das
popf
retf
xchg
rsm
adc
jo
pop
sbb
sbb
movs
adc
(bad)
lock
mov
push
xchg
(bad)
mov
mov
push
into
cmp
dec
movs
pop
push
(bad)
xor
out
pop
push
pop
pop
pop
cmp
enter
jmp
ror
out
leave
inc
sbb
lea
(bad)
fdiv
pop
(bad)
outs
les
stos
sbb
test
idiv
and
in
and
sbb
or
mov
adc
out
sahf
xor
jne
push
xor
add
pmaxsw
pop
dec
lahf
dec
in
push
sub
cli
mov
or
mul
out
test
push
pop
jmp
fidiv
retf
out
out
and
inc
inc
lods
lock
cmp
loop
ret
sub
sbb
dec
adc
(bad)
aad
outs
inc
mov
pop
rol
test
das
ja
dec
imul
in
fs
pushf
mov
push
cwde
and
call
sbb
xor
and
xlat
test
cmps
fisttp
movs
cmp
xchg
nop
mov
add
jne
push
test
das
jbe
ror
ins
in
or
inc
xchg
and
push
sbb
add
movs
rcl
xchg
fcom
push
jmp
pusha
or
(bad)
pop
mov
cdq
out
adc
les
cmc
jbe
xchg
xchg
movs
mov
gs
xor
retf
or
inc
in
jnp
jno
loope
lea
cmps
mov
push
fdivr
mov
push
test
dec
retf
out
test
in
sub
or
xchg
mov
(bad)
lds
push
repnz
dec
out
jbe
xor
outs
mov
jnp
push
and
mov
inc
lods
jbe
jnp
pop
pop
call
loopne
ins
inc
jle
pop
idiv
cld
xor
mov
adc
das
jmp
fucomip
xchg
imul
aaa
mov
icebp
(bad)
xchg
jmp
and
cmp
sub
fsin
cli
outs
imul
int
arpl
cmp
dec
pop
jnp
mov
ins
cmp
popa
push
mov
push
sbb
or
je
cmc
and
stc
test
pop
mov
gs
cwde
or
mov
or
inc
adc
and
add
in
push
adc
cmc
or
sbb
imul
jo
call
fst
push
add
in
int3
cmp
div
aaa
mov
icebp
mov
scas
cmp
ds
push
les
(bad)
div
sub
test
mov
and
jns
rcr
icebp
loope
xlat
lock
inc
arpl
not
and
inc
push
xchg
aam
pusha
sbb
es
popa
pop
cmp
fstp
cmp
outs
dec
inc
ja
adc
movs
outs
lahf
es
mov
sbb
jg
xor
xchg
int3
mov
jp
jo
imul
int
push
inc
sbb
icebp
cwde
mov
jno
mov
aam
in
stos
dec
int3
aam
sbb
jno
xchg
imul
and
shr
jne
xor
push
and
adc
sti
sbb
pop
vcvtpd2dq
and
xchg
adc
add
xor
(bad)
daa
jl
lds
push
push
mov
fstp
mov
cmp
add
lods
out
inc
jle
sub
push
pusha
xor
mov
daa
inc
cmc
gs
fild
and
test
mov
and
sub
pop
sub
dec
ret
xchg
int3
push
mov
cmp
loope
into
rcl
sbb
push
inc
jmp
jecxz
mov
fnstcw
sbb
pop
jmp
xchg
xor
pop
cmc
push
(bad)
icebp
ja
pusha
test
aad
jno
adc
mov
cld
lods
push
fisttp
mov
dec
ds
cmp
retf
(bad)
int3
mov
dec
aaa
inc
test
std
add
jo
sub
push
js
and
test
xchg
ss
cmp
repz
repnz
mul
out
cmp
sub
das
sub
cmc
add
test
sar
lahf
xchg
cwde
cwde
stos
push
jo
xchg
stos
dec
mov
test
pop
ja
and
mov
je
mov
cmp
adc
aaa
aas
jecxz
fcom
shr
inc
xchg
sub
jp
sub
pusha
loop
in
nop
add
jmp
cli
xor
test
cdq
in
sub
jno
adc
jmp
jb
retf
sbb
fs
ret
and
or
inc
mov
repnz
retf
lock
ror
cmp
add
mov
mov
mov
jbe
imul
inc
cmps
scas
mov
sbb
mov
and
fimul
(bad)
retf
push
and
sub
cwde
repnz
not
inc
into
les
aas
cli
xchg
jno
xchg
ret
add
pop
aaa
ficomp
mov
ror
lods
push
xor
inc
dec
rcr
cs
stc
pop
pavgw
and
add
inc
dec
into
test
jbe
repnz
mov
add
pop
sub
js
mov
inc
add
jno
jg
call
cmp
mov
emms
stos
cmp
fdivr
jl
xchg
icebp
in
out
cmp
add
fidiv
cmps
push
fnsave
or
xchg
arpl
(bad)
jmp
(bad)
lods
or
mov
loope
pop
ret
dec
fisub
xchg
pop
lea
fistp
push
and
loopne
faddp
mov
into
jmp
mov
add
mov
outs
mov
and
cdq
push
mov
gs
in
(bad)
jne
sub
test
es
xor
ds
or
repz
push
iret
imul
push
cs
adc
stc
stos
cmps
pop
adc
mov
stos
lods
lock
pop
daa
rol
scas
scas
ror
or
rcl
mov
mov
sub
mov
push
ins
push
out
nop
out
mov
mov
out
adc
rcr
sbb
and
push
sub
lods
pop
jmp
and
jb
inc
rol
push
mov
mov
sti
sar
and
cmp
cli
lds
add
(bad)
cmp
sbb
and
push
mul
dec
imul
mov
ins
fwait
(bad)
sahf
xor
repz
jnp
push
sbb
or
ret
sahf
je
add
gs
jp
imul
outs
or
or
jecxz
fs
icebp
or
jae
aaa
xchg
pop
mov
pushf
mov
add
pop
xor
xchg
fild
inc
mov
aaa
fsubr
mov
xchg
mov
push
mov
pop
(bad)
or
(bad)
or
cmp
dec
ds
mov
loope
stos
mov
dec
add
ret
call
pop
jne
and
in
fcmovb
(bad)
jns
mov
jnp
add
jbe
inc
lock
mov
or
xchg
enter
pop
dec
jmp
jp
aam
in
loop
dec
mov
aam
pop
and
and
stos
and
mov
jmp
and
pop
aaa
movs
hlt
and
push
cmp
data16
fadd
pop
pop
adc
mov
push
ud2
sbb
push
or
pop
js
inc
lods
out
call
inc
add
dec
fs
clc
pop
retf
in
dec
jge
or
ss
xor
jo
es
nop
dec
sub
jg
adc
test
xchg
sbb
or
movs
enter
test
pop
adc
outs
dec
mov
xor
push
inc
out
cmps
cdq
push
mov
addr16
fldcw
retf
adc
rcl
in
lahf
push
or
cmps
or
call
call
adc
xor
in
mov
ins
sar
test
fadd
pop
adc
ss
xchg
shl
mov
mov
leave
push
ja
xchg
fdiv
jl
xchg
cmp
loopne
mov
cmp
out
rcl
jmp
scas
in
or
fwait
xchg
mov
cld
mov
mov
xchg
jae
add
pop
cs
repz
sahf
add
sub
jo
mov
test
daa
add
daa
mov
jmp
jb
ret
dec
pop
add
push
xor
push
cdq
xor
dec
in
hlt
aad
aam
pop
jmp
test
dec
pop
and
jp
cmp
fidiv
scas
fild
hlt
sub
mov
dec
imul
jg
pop
push
test
aad
in
sbb
pop
sbb
test
repnz
sbb
mov
and
hlt
aam
test
neg
aam
mov
adc
hlt
cmps
xor
jo
or
fldcw
inc
aam
aaa
cmps
leave
xor
cmp
cmp
or
popf
ret
js
fwait
repz
jl
imul
shr
mov
jecxz
in
cmp
add
retf
jno
scas
outs
ins
or
enter
xchg
daa
adc
ret
or
ror
pop
mov
mov
and
rcr
and
mov
les
pop
xchg
leave
adc
sar
mov
and
xchg
xchg
icebp
mov
ret
gs
clc
ja
loope
leave
pop
mov
mov
xor
or
aas
cmp
arpl
sar
in
jge
jns
fwait
sahf
fst
push
sbb
xchg
fist
ja
sub
dec
das
mov
popf
cdq
imul
push
movs
jae
sub
(bad)
das
lds
push
movs
lock
add
in
sti
lahf
std
std
xchg
xchg
jns
push
push
lea
addr16
ss
add
sbb
shl
lds
or
xlat
mov
cmp
jb
movlps
in
pop
jae
dec
cmps
adc
mov
xchg
leave
pop
test
mov
test
mov
leave
(bad)
(bad)
das
test
popa
loop
adc
mov
call
nop
push
pop
test
out
(bad)
sbb
cld
mov
lds
stos
aaa
in
adc
push
retf
sub
dec
and
mov
icebp
dec
push
add
add
mov
adc
xchg
movs
shr
fist
test
fcomip
jmp
outs
out
cmp
loope
loopne
pop
xchg
movs
xor
pop
and
cmp
cmp
pop
lds
xor
fcmovnb
sub
je
xor
adc
cwde
movs
and
jmp
icebp
mov
and
or
sbb
out
imul
loop
xor
xchg
mov
cmps
jp
retf
lock
fidiv
xchg
ins
jbe
call
fmul
sbb
and
hlt
sub
sub
imul
push
or
push
xchg
push
scas
mov
lods
jg
leave
aam
cdq
test
mov
mov
jle
or
sbb
movs
xor
fdivr
jge
inc
mov
movs
ins
cli
fld
and
lea
cmc
ins
mov
cmps
ja
mov
sub
sub
push
push
adc
js
sbb
sub
hlt
jo
mov
push
jns
push
hlt
or
mov
aad
mov
sub
das
dec
pop
(bad)
hlt
int
cmp
stos
ja
nop
jmp
jg
popa
or
jmp
jbe
mov
or
add
lahf
cmp
in
and
mov
fsubr
iret
es
adc
xchg
or
sub
add
dec
jge
int3
mov
retf
jle
imul
inc
gs
jo
pushf
outs
xchg
cwde
jo
jno
ins
ins
pop
into
(bad)
mov
retf
int
cmp
mov
cwde
cwde
movs
ds
dec
mov
leave
(bad)
dec
pop
sbb
mov
xchg
mov
mov
je
fadd
sub
jnp
mov
or
(bad)
pop
xchg
dec
in
jmp
call
xchg
pop
adc
aam
call
push
stos
mov
ds
call
add
out
inc
das
sbb
xchg
data16
imul
jmp
arpl
cdq
popa
add
jl
pop
sbb
(bad)
test
sar
in
rcr
xchg
arpl
jns
xchg
imul
add
sbb
repnz
call
repz
in
imul
sub
iret
outs
pop
clc
jbe
xchg
sub
sbb
push
or
bnd
cmps
and
cwde
retf
and
jge
sbb
sti
xor
test
or
dec
or
push
(bad)
adc
rcl
ins
ficomp
ja
es
sub
add
mov
jge
mov
pop
cs
xor
sbb
test
ins
loop
jp
mov
popa
sahf
nop
push
pushf
es
xchg
jecxz
test
sub
fisttp
movs
push
es
dec
mov
mov
es
movs
jmp
loopne
test
out
xor
push
push
in
mov
aad
jle
push
mov
xchg
adc
bound
push
mov
(bad)
fldz
sbb
ss
pcmpeqw
xor
mov
xchg
xlat
lea
push
pop
inc
dec
movs
in
add
xor
push
adc
aam
jmp
add
or
(bad)
fpatan
stos
mov
jno
mov
fdivr
icebp
inc
mov
and
data16
cmp
and
mov
fs
mov
fld
jp
pop
dec
pop
gs
lea
mov
imul
pop
aad
push
sar
jmp
sahf
les
ror
dec
push
mov
cmp
xor
xor
ror
dec
fist
popa
cmp
mov
mov
pop
test
pop
movs
xor
cwde
jnp
and
das
mov
(bad)
mov
jle
cmp
mov
pcmpeqd
dec
dec
xchg
fisttp
jle
pop
pop
and
adc
femms
cdq
stc
les
arpl
xchg
test
inc
push
cmp
loopne
loop
cmp
mov
fcomp
pop
retf
adc
jno
jo
xchg
sbb
jmp
int
xor
aas
cmp
aas
and
das
int
rcr
loop
inc
sub
into
shl
lods
addr16
(bad)
mov
mov
and
cmp
(bad)
adc
sbb
call
aam
repnz
and
jne
dec
fucomp
icebp
add
push
push
mov
xchg
pop
adc
pop
shr
mov
rcr
sti
lock
out
adc
dec
fs
adc
push
sbb
hlt
mov
in
call
and
je
sbb
push
aaa
sub
in
nop
mov
cmps
shl
add
emms
or
in
cmp
sub
pushf
add
or
pop
mov
mul
ret
push
add
sbb
dec
dec
jnp
mov
fwait
push
and
sub
cmp
mov
mov
pop
or
xchg
ins
ret
call
mov
shr
retf
adc
cmp
(bad)
xchg
pop
jecxz
jg
add
mov
lahf
xor
sub
push
pop
mov
mov
sbb
in
adc
(bad)
cmc
pop
pop
ror
adc
mov
push
call
fs
imul
sub
dec
stos
ret
xchg
jbe
retf
push
cli
int3
sbb
out
mov
stc
fdivr
div
pop
(bad)
dec
cmp
dec
aad
dec
xchg
dec
ins
fdiv
jge
cmp
xchg
add
adc
mov
jecxz
fild
std
xor
inc
xchg
add
inc
imul
jo
add
movs
mov
or
shl
inc
dec
dec
loope
cmc
cld
lea
(bad)
jnp
dec
pop
test
sbb
and
movs
inc
add
jge
call
sbb
call
outs
sbb
jb
js
hlt
in
ins
in
push
push
fist
rcl
add
pop
and
call
shr
sub
sub
lods
movs
(bad)
sub
or
mov
mov
(bad)
ja
push
scas
mov
push
(bad)
fild
add
sbb
mov
scas
xor
push
add
repz
in
inc
mov
sbb
mov
cdq
loope
sub
lods
cmp
in
or
mov
dec
fcomi
ret
add
push
pop
mov
je
dec
das
stc
pop
add
jmp
inc
call
jmp
movs
and
sbb
pop
pop
(bad)
xchg
or
cmp
mul
loop
push
fwait
pop
fadd
cmp
mov
push
pop
push
mov
mov
idiv
inc
je
fwait
shr
dec
test
sbb
std
dec
adc
adc
shl
div
sbb
in
push
jno
inc
inc
mov
cs
jmp
sbb
or
inc
mov
jecxz
test
sbb
pop
inc
sti
push
sub
add
mov
scas
cmps
xor
inc
div
test
push
xchg
jae
out
inc
in
in
hlt
stos
mov
aas
retf
sub
jge
popf
pop
dec
js
mov
pushf
and
sbb
mov
jb
mov
mov
mov
cli
fdivr
loop
inc
ins
dec
mov
xchg
pop
sbb
call
std
push
cdq
lds
int3
ret
push
sar
pop
sub
sub
sti
pop
rcl
sub
mov
mov
jl
mov
movs
clc
cmps
lods
cmps
shr
jo
cmp
scas
jp
push
js
lahf
jae
xchg
repnz
mov
push
std
js
das
arpl
loop
push
movs
inc
push
enter
jmp
xor
cmp
ins
neg
mov
mov
dec
lahf
dec
mov
test
pop
xchg
mov
dec
jb
add
dec
cmc
xor
xlat
push
das
mov
por
mov
mov
jnp
xlat
add
pushf
jb
test
enter
int
(bad)
arpl
scas
inc
jb
retf
pop
and
fs
pop
aaa
in
jle
(bad)
mov
adc
test
inc
jmp
int
sahf
dec
rcl
push
pop
mov
push
ds
cmp
in
dec
fcom
cmp
shl
pop
xchg
mov
sub
inc
movs
(bad)
push
(bad)
imul
popf
or
ret
les
std
mov
(bad)
stc
lods
sbb
push
ret
and
and
hlt
xlat
sahf
push
pop
fdiv
fwait
test
fst
dec
ja
rol
pop
test
xor
pop
push
mov
jbe
lea
loop
fcomp
cmp
ja
iret
xchg
cmp
dec
into
(bad)
fdiv
jbe
jle
scas
xor
(bad)
push
call
outs
push
dec
or
out
movs
enter
push
or
call
inc
xchg
mov
scas
or
pop
cdq
cmps
mov
rcr
addr16
mov
mov
xchg
and
lds
fs
daa
es
popf
push
xchg
mov
addr16
cmp
(bad)
mov
mov
dec
dec
jne
adc
test
adc
pop
jge
pop
pop
add
push
mov
inc
dec
add
cmp
(bad)
jo
cmps
mov
(bad)
(bad)
xor
add
daa
fimul
cmp
jle
call
push
out
xchg
add
enter
pusha
es
es
fs
mov
or
add
jbe
sbb
sbb
in
mov
pop
in
(bad)
sbb
push
mov
cli
ror
cmps
test
fdivr
jns
mul
mov
xchg
push
xchg
test
push
out
dec
mov
xor
add
mov
aaa
shr
or
loopne
into
mov
leave
fs
icebp
add
outs
bswap
push
ins
push
movs
inc
push
add
lea
mov
jo
add
or
lds
mov
adc
je
cmp
push
xor
or
jns
push
ss
fidivr
call
mov
xor
mov
dec
xlat
loop
hlt
mov
inc
hlt
lds
and
(bad)
pop
data16
mov
add
jecxz
arpl
mov
adc
cmp
and
pop
aaa
xchg
and
adc
dec
sub
mov
jno
pop
(bad)
mov
pop
push
mov
retf
xor
add
cmc
adc
cmp
mov
fs
mov
inc
fisub
cmp
dec
mov
adc
and
leave
imul
movs
stc
pop
mov
aam
repz
movs
push
add
pop
push
fs
imul
in
or
mov
imul
gs
pop
xor
cmps
out
mov
data16
movs
or
mov
dec
push
fisub
pushf
sar
dec
pop
add
cmps
fst
mov
mov
mov
dec
cmp
mov
mov
xor
jbe
jge
adc
jns
mov
cmc
xchg
neg
(bad)
pop
jne
mov
mov
aam
outs
jbe
test
out
clc
fcom
enter
push
sub
mov
or
adc
xchg
fs
fbstp
sub
inc
sub
dec
fdivr
pop
outs
aad
dec
xor
loop
push
push
push
xor
jg
and
dec
mov
xor
sub
jb
and
fild
ror
fwait
sbb
cs
jg
test
imul
push
jle
lahf
mov
data16
or
mov
popa
stc
pop
(bad)
out
or
adc
stc
push
imul
xchg
mov
jo
test
push
jb
cmp
sbb
cs
inc
mov
shl
fldcw
push
out
pop
dec
push
sar
pop
imul
dec
jp
push
mov
xchg
dec
mov
adc
jo
xchg
in
jl
mov
or
sbb
inc
loop
fisubr
dec
sti
cmc
xchg
jg
mov
retf
add
in
pusha
les
mov
in
adc
dec
inc
fisubr
lock
out
mov
ret
scas
fcom
rcl
jbe
push
xchg
ret
mov
in
clc
pop
mov
stc
(bad)
xchg
sub
fs
ins
fwait
mov
dec
lock
sbb
jmp
lods
and
retf
adc
test
movs
pop
repnz
inc
outs
sar
mov
or
(bad)
mov
ret
loope
gs
mov
xchg
sbb
(bad)
cld
xor
call
mov
xchg
aaa
inc
adc
push
sbb
jge
in
out
test
retf
gs
call
cmp
cmc
test
lea
sar
fstp
dec
loope
push
leave
xchg
sbb
jmp
pop
fwait
xor
ret
hlt
fisub
cwde
dec
adc
adc
retf
or
cmps
movs
push
(bad)
call
fild
push
mov
aam
jl
and
enter
imul
(bad)
lea
push
ret
dec
sub
shl
int3
jle
cld
test
xor
fmul
xchg
lods
shl
and
in
and
ficomp
shl
adc
enter
out
pop
test
ss
test
jp
cmp
pusha
mov
enter
push
inc
mov
stos
mov
and
jle
dec
xchg
xchg
call
call
aas
lods
jo
adc
xlat
sub
xor
mov
leave
mov
mov
dec
xchg
jae
sbb
adc
push
and
mov
dec
or
hlt
push
xchg
pop
mov
mov
jmp
iret
mov
and
cwde
pop
fbld
sbb
cli
cwde
fcom
mov
imul
mov
dec
addr16
int3
pushf
jnp
push
cmp
mov
or
movs
test
jmp
jnp
cdq
cwde
cmps
adc
movs
sub
int3
mov
mov
leave
jo
adc
int3
mov
pop
cmp
aas
jle
call
mov
cmc
mov
and
loopne
xor
in
or
dec
pusha
in
pop
mov
and
shr
(bad)
lock
dec
fs
jge
inc
xor
ror
or
dec
aas
jb
dec
ret
stos
lahf
out
stos
movs
jecxz
or
sbb
lea
movs
xchg
cmp
retf
push
dec
sbb
mov
(bad)
lods
ins
in
stc
fadd
sbb
add
jge
ret
hlt
cmp
adc
imul
dec
mov
xlat
out
cmps
push
int
sbb
mov
cdq
jmp
push
sub
inc
popf
mov
loopne
adc
das
mov
jne
pop
pushf
sub
sub
push
jbe
mov
sub
push
push
cmc
xor
pop
adc
push
out
movs
push
xor
mov
xchg
les
pop
pop
pop
aas
scas
and
lds
add
popa
xchg
bound
cwde
fld
mov
jmp
add
dec
scas
or
jnp
fisub
jb
push
sub
push
clc
in
lock
mov
push
call
(bad)
dec
inc
clc
push
shl
cmp
add
add
addr16
jl
or
int3
out
int
pop
cmps
add
cmp
dec
mov
test
popa
lock
ja
push
cmp
sahf
add
adc
inc
adc
loopne
mov
jp
sbb
jnp
cmps
adc
push
scas
js
and
dec
xor
out
cdq
neg
cmc
test
adc
adc
sub
into
and
cs
dec
fmul
xlat
jp
push
loop
out
pop
sub
mov
adc
movs
or
cli
mov
cmc
cs
pop
or
push
or
sahf
jle
sub
jb
pop
dec
in
mov
lods
ins
sub
movaps
push
sub
mov
(bad)
fild
mov
xchg
or
cli
mov
aad
cmp
int3
add
xchg
gs
push
out
jmp
xor
inc
dec
stc
cmc
lods
shr
imul
cld
mov
jmp
ror
(bad)
rol
ins
stos
dec
es
push
leave
push
push
xor
loope
fwait
adc
stc
jb
sbb
dec
jp
test
mov
mov
add
jg
and
pop
inc
popf
pop
call
lods
dec
sbb
loopne
sub
pop
pop
in
jg
and
loopne
pop
xchg
icebp
mov
pop
push
gs
push
jmp
pushf
mov
mov
rol
mov
std
push
imul
enter
mov
cmps
mov
sahf
ret
mov
lahf
pop
jmp
lods
sub
iret
pop
int3
push
adc
lahf
cmp
sub
scas
ins
cmps
sub
(bad)
mov
push
ds
out
fwait
adc
mov
push
sbb
mov
movs
inc
lea
ja
pop
mov
cmove
xchg
aam
push
or
xchg
jbe
lods
scas
push
and
shl
jmp
cdq
leave
and
outs
es
idiv
dec
inc
das
mov
jo
cwde
cmps
stc
pop
inc
stos
xchg
or
fcom
dec
je
pop
mov
and
cmp
add
adc
and
mov
fst
bnd
lods
and
cli
mov
inc
cmps
sub
and
not
call
sub
fstp
cmp
cmc
inc
retf
inc
call
arpl
lods
mov
fwait
mov
(bad)
clc
sub
ret
mov
xor
mov
adc
addr16
test
or
inc
or
xchg
test
jne
lds
enter
call
mov
mov
push
xchg
and
cdq
cmp
fs
ins
xchg
pop
or
jae
inc
je
add
jno
mov
mov
enter
or
inc
adc
scas
jne
(bad)
repz
cs
mov
pop
or
or
in
dec
adc
jl
jne
mov
mov
mov
(bad)
sbb
gs
pop
mov
mov
push
mov
ins
and
rol
adc
fistp
sbb
push
loop
push
stos
(bad)
xchg
gs
sub
imul
mov
ins
ja
nop
cmp
sbb
movs
cmps
cmp
lahf
mov
bound
mov
scas
sbb
ficom
test
and
stos
retf
xchg
mov
sbb
fbstp
test
mov
pusha
shr
aas
mov
adc
cmps
vunpcklps
aam
inc
adc
vmread
ret
lea
pop
mov
and
add
enter
sub
fsubr
and
ja
(bad)
sti
push
dec
push
cmp
add
sbb
pop
(bad)
push
mov
aaa
test
hlt
push
sahf
pop
inc
pop
out
out
outs
or
mov
ss
mov
cld
mov
push
ror
out
jno
enter
je
sbb
ror
inc
ret
xor
dec
add
mov
and
jecxz
ja
push
pop
popf
pushf
sahf
pop
iret
mov
add
iret
ret
dec
movs
enter
pop
adc
int3
stc
into
pop
pop
sub
add
push
mov
mov
push
test
xor
sbb
xor
push
daa
pusha
popa
in
popa
test
scas
call
jbe
sbb
pop
xchg
pop
cs
and
adc
out
test
jae
in
mov
cmps
inc
(bad)
mov
dec
movs
or
xchg
cmp
clc
fistp
adc
mov
pushf
daa
xchg
xchg
mul
inc
cmp
in
mov
jne
mov
xchg
push
aam
pop
push
scas
xor
push
sbb
adc
inc
das
addr16
shl
pop
sbb
add
push
js
ss
add
sub
xor
pop
push
xchg
fbld
mov
ja
jne
cwde
call
cmp
adc
nop
arpl
dec
in
jmp
popa
pop
lock
retf
es
pop
jnp
(bad)
mov
push
ins
cmp
es
sbb
(bad)
scas
jno
push
and
fsub
neg
retf
sahf
mov
call
xchg
cmp
mov
or
xor
cmps
loop
test
mov
xchg
(bad)
(bad)
mov
loopne
sub
fdiv
xor
xchg
or
cli
int
adc
cmc
pop
and
faddp
rcr
xor
js
loope
mov
daa
jmp
scas
jo
iret
sbb
or
xor
jns
sub
scas
sbb
or
inc
popf
dec
das
or
iret
(bad)
jl
fwait
clc
stc
icebp
add
ret
push
lods
nop
pusha
xor
clc
loop
mov
cmp
adc
gs
push
inc
leave
push
xchg
fld
pop
in
adc
push
aas
fcomp
jle
dec
xchg
aas
icebp
mov
cmp
test
xor
ds
fild
fsub
sub
out
jg
pop
mov
xchg
and
repnz
rcl
pop
mov
aas
mov
push
pop
sub
push
fisub
in
cli
jb
dec
mov
mov
jecxz
xor
ins
mov
in
fstp
push
ficomp
shl
ror
scas
sar
cli
imul
outs
pop
es
addr16
retf
int3
out
enter
add
push
mov
enter
popa
aaa
(bad)
imul
mov
xchg
inc
mov
mov
loope
jno
mov
dec
push
push
mov
mov
push
leave
cmpxchg
jp
js
sub
(bad)
xchg
movs
cwde
pop
push
and
pop
stc
xlat
sbb
pop
scas
mov
(bad)
(bad)
std
dec
pusha
push
jp
sbb
jbe
mov
cmp
(bad)
cld
fninit
std
mov
jo
sub
xchg
out
iret
outs
sbb
xor
outs
xchg
adc
js
and
jge
pusha
imul
jno
add
xlat
cwde
mov
ja
push
fistp
xchg
pop
in
sbb
in
mov
test
shl
pusha
pop
sbb
retf
mov
dec
jl
not
sbb
or
mov
jge
jnp
mov
repz
cs
cdq
shl
ja
and
sbb
mov
and
call
cs
js
sub
jns
adc
dec
call
clc
inc
or
sbb
jae
adc
gs
imul
mov
(bad)
sub
xchg
push
iret
mov
xchg
cmp
icebp
mov
mov
aam
scas
dec
mov
gs
icebp
test
icebp
(bad)
jl
push
popf
jp
push
xchg
(bad)
pop
retf
pop
mov
adc
ins
movs
and
fbstp
popa
inc
ror
mov
out
int
imul
fild
and
(bad)
sbb
jg
inc
lds
dec
lock
sbb
mov
fadd
mov
pop
push
into
xchg
mov
ds
ss
in
movs
imul
xchg
xchg
mov
dec
out
dec
sbb
jp
popa
inc
cmp
adc
sbb
mov
sbb
outs
retf
sub
(bad)
jle
cmc
stc
pop
int
xchg
(bad)
fucomi
cmps
cmps
sbb
xchg
dec
cmp
xchg
shr
scas
scas
mov
(bad)
dec
ins
pushf
ret
adc
cmp
pop
sbb
or
test
aaa
dec
ds
xor
test
xchg
jo
xchg
push
in
std
push
or
xlat
or
adc
jnp
mov
add
lds
imul
test
jg
push
jge
mov
jae
not
push
jp
es
fst
or
sbb
clc
mov
repz
test
xchg
mov
xor
js
push
out
iret
mov
stc
std
xor
loop
push
sbb
fadd
pop
xchg
or
jnp
sub
test
fstp
call
lods
(bad)
jb
mov
inc
jecxz
sub
into
pop
xchg
movs
cmp
adc
push
xchg
xchg
lock
sbb
mov
push
ss
jbe
sbb
push
xor
cmps
sbb
leave
pop
in
stc
das
mov
inc
add
mov
mov
ins
fisubr
ficom
shl
mov
add
cwde
fcom
into
shr
or
mov
sub
xchg
cmp
or
mov
fild
leave
or
cmp
sti
xchg
lods
inc
outs
movs
enter
fidiv
mov
push
jns
es
test
sbb
outs
mov
(bad)
(bad)
adc
sub
cdq
mov
cmp
or
in
cmp
fwait
jmp
mov
das
daa
repz
cmps
and
rcl
popa
and
push
popf
xchg
shl
ret
jecxz
in
sbb
gs
fs
mov
mov
mov
inc
fstp
inc
in
shr
bound
and
nop
or
or
xchg
sar
ror
mov
push
xchg
or
mov
aaa
mov
clc
stos
dec
nop
and
aas
ja
pop
add
push
lock
scas
pop
xor
(bad)
(bad)
mov
cmps
sub
fsubr
dec
mov
jle
adc
rcl
loopne
mov
sub
jmp
or
fcomp
adc
in
ja
ins
stos
sbb
sub
xor
outs
inc
into
mov
sub
add
and
hlt
(bad)
std
repnz
lock
ins
call
iret
imul
test
sbb
cmp
inc
dec
loope
test
mov
mov
and
inc
popf
dec
inc
fist
sbb
lea
sbb
push
pusha
mov
movs
ret
sbb
addr16
pop
mov
stc
adc
scas
popa
(bad)
mov
pushf
add
jne
lds
(bad)
xor
inc
out
call
cdq
lds
sub
scas
jp
outs
fucomp
in
cld
aad
add
int
xchg
les
popf
cmp
mov
out
add
ret
inc
mov
imul
jno
test
mov
fnstcw
enter
ins
test
in
imul
movs
and
repz
sbb
cdq
lods
or
pusha
pop
leave
sbb
repnz
test
sbb
int
je
pop
inc
dec
or
ret
pop
and
jge
cmp
fs
or
(bad)
adc
fsub
dec
ds
cmc
pop
xchg
and
xlat
add
data16
das
(bad)
xchg
inc
repz
pusha
cmp
mov
dec
cmc
jne
test
dec
mov
dec
jne
in
int3
icebp
retf
mov
fs
frstor
xchg
mov
stos
out
mov
in
mov
frstor
pop
pop
frstor
push
repz
mov
imul
dec
jecxz
xor
movs
daa
dec
call
jle
lock
test
mov
bound
push
mov
icebp
sbb
mov
mov
aam
fwait
jl
repnz
fwait
xchg
adc
popf
call
push
test
mov
mov
mov
and
dec
std
inc
mov
sbb
dec
pop
fidiv
sub
rol
xchg
sub
add
pop
sti
push
cmps
sbb
shl
xchg
and
mov
xchg
jmp
sbb
adc
xor
cdq
shl
ja
sti
es
lods
sahf
(bad)
retf
sbb
and
sbb
enter
aad
dec
mov
loop
mov
fimul
adc
aaa
or
les
jns
rcl
(bad)
and
jg
xchg
mov
or
sub
stos
test
(bad)
aad
and
push
push
add
repnz
sahf
sub
push
jmp
cdq
mov
xor
sub
cld
std
add
or
jecxz
pop
push
xor
data16
fwait
sti
call
scas
jno
mov
push
mov
mov
mov
pop
push
mov
test
(bad)
pop
jne
fnsave
call
pop
in
fiadd
dec
cmp
cmp
adc
pop
(bad)
push
fld
test
std
arpl
jne
mov
or
call
ficom
sbb
jmp
out
jb
cld
adc
add
imul
and
jns
jg
mov
hlt
push
xchg
ins
xchg
(bad)
pop
mov
mov
dec
cmps
push
ror
cli
scas
mov
dec
sub
std
lods
add
mov
push
cmp
pop
mov
cwde
pop
inc
dec
les
pop
repz
pop
aas
pop
jb
xchg
popf
ins
cmp
cmc
push
jle
jno
ins
mov
dec
leave
imul
add
lahf
imul
or
test
out
ins
xchg
aam
jno
adc
jno
test
jns
fld
or
out
mov
cmps
std
sub
adc
inc
sahf
add
or
xchg
movs
pop
mov
or
sahf
lods
mov
or
mov
xchg
and
icebp
cmp
sub
pop
movs
cmps
xlat
and
in
fcomp
jnp
mov
fldcw
popf
mov
xor
(bad)
iret
pusha
xor
inc
repnz
or
mov
mov
xchg
ret
loop
jbe
stos
mov
pop
sar
loop
sub
int3
jo
cmp
addr16
cmp
or
(bad)
fs
mov
mov
jmp
inc
sub
mov
ret
sbb
adc
cs
xchg
adc
dec
jp
inc
or
push
icebp
jg
add
mov
out
stos
loop
ror
xor
sub
cmp
adc
mov
mov
xor
es
pop
or
ja
push
xchg
fs
clc
push
mov
mov
sub
(bad)
push
test
call
cmp
mov
sahf
mov
in
retf
in
sbb
xor
xchg
outs
inc
mov
cmp
mov
icebp
mov
in
sbb
mov
xchg
adc
mov
leave
iret
adc
int3
pop
out
aad
dec
loope
adc
into
lds
ja
inc
lds
shl
push
cld
out
mov
scas
push
(bad)
sbb
cmps
mov
mov
jmp
cdq
sbb
xor
xchg
and
lea
dec
and
pop
adc
or
sbb
sub
cwde
ins
mov
fwait
or
dec
ins
(bad)
push
fisttp
push
jbe
les
outs
jl
ret
in
repnz
cli
sub
ins
pop
dec
dec
cmp
dec
mov
inc
and
test
xchg
jmp
test
mov
mov
cmp
add
jo
(bad)
jmp
jmp
cmp
xor
sbb
popf
cmps
xchg
sub
lods
jge
push
dec
popf
add
adc
add
scas
ss
ret
jle
mov
jp
mov
lods
mov
call
mov
sbb
push
cmc
loopne
mov
xchg
xchg
xor
int
int3
das
mov
push
inc
dec
xor
xchg
add
adc
add
mov
int
daa
mov
dec
lods
push
iret
rcl
and
nop
ror
ret
xchg
(bad)
cli
(bad)
je
rcr
fsubr
cld
sub
mov
mov
sbb
retf
mov
out
and
imul
push
scas
inc
or
and
outs
sbb
sbb
in
mov
pop
add
ja
push
hlt
mov
ins
xor
mov
(bad)
mov
sub
rcl
push
mov
push
adc
movs
leave
and
shl
mov
jno
into
into
jno
call
xchg
adc
lea
je
(bad)
fst
imul
inc
xor
push
adc
movntps
xor
dec
cmove
out
loop
push
fnsave
shl
xchg
xchg
jge
ror
shl
cmp
mov
(bad)
mov
ins
jb
popf
ja
sbb
inc
dec
repz
inc
mov
sti
arpl
pop
add
cmp
adc
mov
popa
ds
mov
test
dec
pop
mov
call
lock
out
movs
mov
xchg
push
add
adc
addr16
xor
pop
and
mov
mov
sar
and
or
sub
fs
add
test
cmp
lods
pusha
xor
test
imul
fs
push
push
mov
sbb
ficom
mov
mov
and
hlt
xor
pushf
stc
outs
enter
mov
cmp
repz
mov
outs
movs
inc
or
fdiv
call
test
mov
xor
and
fcmovnbe
div
xor
sub
push
sbb
sub
fwait
test
pop
cmp
adc
and
mov
inc
into
jnp
sub
adc
cmp
repnz
sub
retf
mov
aaa
repnz
push
dec
pop
ds
xchg
mov
add
out
cmp
lods
scas
cld
scas
es
int
fs
scas
or
into
push
ins
(bad)
std
(bad)
sub
ror
cmp
loopne
pop
cwde
mov
and
xor
and
retf
sub
ss
inc
pop
sbb
push
inc
icebp
inc
sar
inc
xchg
and
(bad)
push
sub
out
mov
cmc
hlt
inc
test
jl
in
sbb
push
jge
pop
stc
mov
pop
(bad)
cmp
std
js
int3
std
cmovge
mul
mov
sub
mov
dec
ret
push
stc
pop
jbe
add
das
mov
cmc
add
mov
test
mov
push
(bad)
dec
cmps
fstp
ja
movs
xchg
sbb
jae
fstp
(bad)
into
int3
inc
outs
loope
nop
lods
adc
add
mov
inc
push
stc
imul
xor
mov
sbb
das
sub
(bad)
push
jbe
mov
fisttp
dec
lds
and
movs
xor
jl
test
fisub
ffreep
arpl
cmp
pop
xchg
jge
push
sbb
fmul
adc
(bad)
xor
movs
pop
xor
shl
and
pop
sub
xchg
jnp
adc
aas
cmp
jg
push
mov
loopne
push
sbb
stos
cld
jle
or
test
jecxz
jmp
aas
jno
or
jp
aam
add
jle
inc
inc
ds
mov
lock
call
xchg
lds
cdq
(bad)
ds
fld
in
jnp
cmps
(bad)
push
or
pop
mov
popa
ret
fcomp
xchg
inc
adc
pop
xlat
mov
fs
popa
cmp
add
std
or
xchg
cli
jb
mov
sbb
dec
mov
sti
adc
stos
xor
shl
mov
push
push
sub
sbb
ret
xchg
test
lea
and
push
inc
shr
xor
mov
sbb
sub
fs
or
loopne
and
in
repz
mov
sti
cmps
lea
fadd
fidivr
jecxz
mov
xchg
ret
adc
icebp
mov
xor
jns
jecxz
jae
dec
sub
les
fidivr
repz
out
jg
(bad)
out
mov
dec
push
jl
in
mov
addr16
mov
nop
sbb
xor
adc
clc
popf
cmp
push
ret
fstp
inc
les
xchg
scas
push
xchg
add
xchg
pop
mov
cli
push
retf
mov
in
cmps
popf
xor
adc
jmp
shl
jne
push
daa
add
stos
aas
add
inc
sbb
jnp
and
xor
shl
ins
lahf
xor
hlt
push
cmp
retf
dec
sbb
rcr
fdiv
xchg
pop
jle
push
data16
int3
xchg
(bad)
iret
mov
int
or
imul
mov
loopne
jno
jne
jmp
(bad)
sub
mov
lahf
shl
hlt
xlat
jg
pop
jl
push
jg
add
icebp
bound
jle
or
mov
push
gs
in
mov
or
imul
outs
lahf
loop
push
or
fcom
jbe
inc
rcl
icebp
and
xor
stos
cld
sbb
cmp
mov
fnsave
gs
push
ficom
ficomp
data16
xor
mov
adc
cmps
cdq
or
lods
(bad)
mov
sub
jno
push
jne
loope
fstp
mov
adc
shl
adc
mov
add
xchg
jns
inc
fwait
shr
test
cmp
push
mov
adc
push
sub
mov
dec
jae
cdq
mov
push
inc
lea
in
dec
sbb
imul
cdq
xchg
dec
jae
ins
pop
push
push
(bad)
pop
leave
rcl
lea
adc
add
cmp
add
push
fbstp
jle
sub
push
pop
push
xor
cmp
loopne
xchg
jg
js
sbb
mov
or
mov
scas
ja
cmp
les
cmp
push
dec
or
cdq
repnz
dec
nop
frstor
mov
icebp
imul
cmc
sbb
ins
loopne
call
loope
inc
fmul
in
(bad)
fst
cld
mov
xor
mov
fwait
mov
mov
dec
ins
shl
out
movs
pop
retf
leave
sar
mov
xchg
and
aad
mul
add
dec
sub
sbb
mov
mov
and
clc
in
pop
or
cmp
sub
fdiv
add
cmps
xchg
(bad)
rcr
push
test
iret
ds
jo
or
mov
jbe
inc
xchg
cmp
scas
test
loopne
mov
jns
add
cmp
repnz
dec
std
sub
mov
fild
mul
sti
hlt
ret
les
ins
imul
sub
or
sbb
adc
test
inc
adc
mov
ja
std
(bad)
sbb
into
push
xor
jne
pop
jbe
xchg
push
jg
stos
xchg
(bad)
enter
pop
inc
jmp
cld
dec
sti
enter
dec
mov
sub
xchg
popa
popf
loope
mov
jge
imul
js
or
inc
cmp
cmp
xchg
inc
adc
mov
mov
outs
fild
test
shr
(bad)
call
jae
mov
mov
outs
(bad)
xor
adc
jmp
add
jl
aaa
adc
and
sub
data16
push
xor
scas
rcl
lods
idiv
push
push
mov
push
pushf
or
pop
jge
mov
pushf
jecxz
inc
inc
(bad)
adc
sub
and
dec
xchg
xor
(bad)
addr16
adc
adc
mov
ss
jbe
pop
jbe
or
imul
add
inc
dec
cmp
mov
rcl
fst
jo
and
out
or
dec
aaa
add
outs
add
push
pop
pushf
icebp
push
ins
jle
or
mov
retf
mov
cmp
mov
out
push
(bad)
outs
mov
cdq
xchg
retf
push
pop
vsubsd
test
xchg
fsub
dec
add
dec
shr
mov
inc
adc
fwait
(bad)
lods
adc
sub
and
ins
add
jo
jmp
jge
pop
lahf
or
bound
inc
cmp
sbb
stos
lahf
lds
mov
(bad)
xor
inc
sbb
in
lods
test
mov
(bad)
jbe
dec
mov
ret
lods
fild
out
dec
add
jae
push
xlat
jmp
mov
ds
push
dec
xchg
mov
lahf
push
adc
mov
xchg
ja
addr16
jl
jmp
into
jg
and
scas
xor
or
xchg
xor
adc
add
sbb
cmps
jecxz
pop
or
imul
out
pop
cwde
add
mov
hlt
inc
hlt
and
cmp
pop
jne
sub
int
mov
enter
loope
data16
push
mov
pop
cli
push
popf
jp
stos
pusha
jecxz
push
leave
imul
cdq
pop
xor
adc
cmp
cmps
jmp
in
jae
xchg
or
push
ret
and
sti
pop
add
btc
mov
mov
xchg
shl
fld
xor
aad
pop
daa
cmp
add
daa
cld
mov
adc
push
call
pop
adc
ins
call
lahf
je
ss
cs
(bad)
mov
sub
neg
xchg
sbb
pop
dec
inc
pop
sub
adc
push
dec
test
sahf
push
or
loope
sti
push
sbb
jnp
jmp
ret
pushf
pop
pop
xchg
std
pop
cli
ss
mov
add
jmp
stc
inc
ja
jmp
popa
fnstcw
jp
cwde
inc
xchg
xchg
and
add
push
(bad)
mov
out
lods
aam
inc
ror
sahf
xchg
xor
pop
int
jo
fist
cmps
mov
std
push
imul
fsub
mov
and
pop
mov
movs
mov
inc
mov
cmp
add
and
adc
pop
rol
hlt
neg
pop
inc
xchg
jae
out
sbb
std
in
test
scas
inc
cmp
mov
pushf
push
or
and
out
pop
adc
into
xchg
lods
push
xor
mov
stos
movs
test
fisttp
mov
out
or
(bad)
popa
cli
jmp
xor
(bad)
outs
mov
lods
push
pop
and
sahf
pxor
lock
into
xor
sbb
pop
jge
push
jno
add
pop
sbb
fidiv
jbe
shr
sbb
ins
mov
test
inc
add
lds
mov
jno
xlat
push
push
inc
cmps
out
adc
out
and
jae
es
dec
xor
pop
fild
inc
or
add
(bad)
xor
or
xor
enter
jmp
pop
popa
and
xor
enter
(bad)
std
dec
out
in
jmp
rol
in
and
push
xchg
sub
cmp
sub
adc
ret
sub
rcl
cmp
add
shl
xor
fstp
(bad)
and
repz
in
sti
mov
xchg
cmp
sbb
add
dec
fdiv
cmp
jno
(bad)
pop
std
fld
xchg
pop
daa
jp
not
sbb
or
scas
cmp
call
not
jo
xchg
das
mov
pop
icebp
mov
out
and
pop
(bad)
leave
jecxz
xor
test
jns
xchg
and
(bad)
jno
adc
(bad)
out
xchg
push
and
cmp
jmp
or
sub
or
jle
cwde
pop
sahf
cs
sti
sti
jno
(bad)
(bad)
add
int3
xchg
push
adc
and
pop
xor
div
(bad)
push
cmp
fiadd
out
ss
shr
adc
mov
(bad)
push
shl
add
mov
push
and
jmp
fstp
push
popw
icebp
jmp
ret
ret
hlt
xchg
(bad)
in
mov
gs
fs
dec
pop
jmp
loope
loopne
push
stc
xchg
repnz
shl
dec
iret
daa
and
pop
or
mov
sub
ins
push
mov
cmp
arpl
push
pop
or
enter
xor
jle
and
mov
js
or
cld
dec
call
call
dec
add
dec
push
or
sub
mov
stos
mov
and
inc
loopne
ss
add
push
xor
jno
sahf
add
movs
imul
aam
dec
aas
and
xchg
inc
mov
dec
idiv
xchg
(bad)
test
or
loop
cmp
mov
retf
and
or
sbb
out
inc
xor
clc
add
mov
(bad)
stc
mov
jmp
mov
mov
cmp
jbe
sub
fadd
retf
lods
dec
jecxz
mov
pop
mov
xchg
mov
xor
or
adc
cdq
mov
loope
scas
jae
jecxz
mov
jmp
mov
daa
cwde
push
std
fst
xlat
pop
sub
call
dec
add
and
pop
mov
nop
cmps
jp
mov
out
xor
into
adc
fild
adc
(bad)
cmps
and
mul
mov
repnz
imul
push
scas
fwait
or
cmp
outs
dec
out
sti
xchg
xchg
dec
(bad)
hlt
or
jge
add
loopne
stc
sbb
mov
xchg
mov
shr
sub
dec
stc
xchg
pop
xchg
test
lods
mov
xor
ins
push
pop
gs
cwde
and
leave
into
daa
test
jnp
bound
lods
xchg
cmp
sti
mov
adc
(bad)
enter
dec
mov
mov
push
fisttp
es
xor
pusha
inc
sub
(bad)
loope
les
fstp
adc
in
jno
rcl
aam
push
cmp
mov
mov
xor
imul
(bad)
adc
js
xor
sar
and
dec
jnp
mov
jo
cmps
pop
mov
mov
(bad)
pop
mov
push
xor
ins
adc
sub
xor
int3
(bad)
push
(bad)
ds
xchg
add
out
jmp
jge
sbb
data16
pop
sahf
jge
inc
or
fisubr
cmps
push
out
lds
sub
gs
mov
out
mov
fcmovb
arpl
and
ret
mov
mov
or
jl
or
jg
stc
sub
xchg
jl
lock
dec
imul
jbe
inc
or
push
adc
out
jge
mov
xchg
xchg
pop
leave
in
mov
push
pop
and
jns
shl
js
jae
(bad)
cld
scas
stos
xchg
mov
xchg
fist
div
xchg
retfw
outs
fadd
push
pop
ins
pop
nop
mov
std
mov
jmp
loop
xor
in
xchg
pop
adc
add
pop
jecxz
jmp
repz
sub
lahf
repz
rcr
pop
test
movs
pop
mov
sbb
add
xor
and
lods
dec
inc
ins
cmp
adc
adc
cmp
out
stc
in
cmc
lods
mov
enter
and
dec
jne
shl
mov
sub
cmc
cmp
cwde
jp
xor
aas
iret
stos
call
mov
mov
ficom
rol
call
sub
adc
mov
inc
or
rol
mov
fisttp
shl
push
or
inc
cli
stos
lds
jge
mov
repnz
mov
push
sbb
adc
xchg
cmp
das
leave
inc
add
mov
cmp
sbb
repnz
or
mov
cmps
outs
das
and
and
stos
jno
xor
dec
popf
sub
fsub
pop
icebp
xor
dec
pop
out
xor
add
in
sbb
or
retf
xor
sub
cmp
lock
push
pop
mov
jmp
into
jge
mov
clc
sbb
mov
mov
fcomp
or
lods
lock
push
mov
mov
jecxz
mov
jne
loope
and
mov
xor
outs
aaa
shr
mov
repz
(bad)
pusha
sub
push
sar
or
cmp
ret
push
mov
rcl
popf
scas
les
iret
pop
lea
test
xor
int
jo
mov
pop
ret
repnz
fwait
loope
jo
lock
hlt
mov
and
jmp
and
mov
sti
adc
mov
push
call
pop
into
sbb
mov
imul
and
mov
pop
xor
movs
add
pop
pusha
mov
mov
cmp
jnp
mov
jmp
sub
vpaddsb
sbb
out
cwde
mov
cmc
arpl
xchg
sbb
out
push
mov
call
lds
outs
mov
mov
inc
or
jge
adc
mul
sbb
ja
(bad)
icebp
sar
or
mov
jae
xor
xor
push
sar
mov
push
mov
leave
pop
ret
(bad)
jmp
rcl
push
jmp
or
leave
lods
test
jge
pushf
jno
inc
adc
sub
dec
xor
mov
int3
xchg
xor
xchg
clc
out
scas
xchg
cmp
movs
mov
jl
cmps
mov
push
stos
cmp
adc
cmovb
sbb
mov
hlt
fsub
dec
mov
(bad)
(bad)
test
cmps
inc
inc
add
jg
loope
cmp
jno
out
mov
mov
and
inc
push
pop
out
sbb
loop
aam
fs
and
(bad)
shl
outs
xchg
push
mov
clc
push
mov
push
push
xchg
mov
(bad)
inc
pop
pop
or
shl
jno
cmp
loopne
pusha
or
sbb
int
adc
sbb
inc
adc
je
mov
scas
lods
jmp
pop
loopne
in
cmp
icebp
(bad)
in
loope
pop
mov
jmp
movs
imul
mov
pop
mov
aam
fstp
mov
mov
test
movd
movs
xchg
pop
out
(bad)
cmp
mov
jne
dec
sub
ja
movs
std
dec
inc
mov
sub
inc
xchg
sbb
lock
fadd
push
stos
add
mov
fnstsw
push
inc
sahf
jb
xchg
(bad)
pop
push
sbb
push
sub
popa
movs
mov
and
ds
jo
ds
mov
xor
adc
cli
retf
ja
push
add
or
sti
mov
nop
iret
(bad)
fmul
jno
cmp
or
outs
inc
pop
push
or
cmc
int3
out
adc
aaa
mov
dec
lods
mov
mov
icebp
(bad)
xchg
lds
ss
arpl
lea
adc
pop
in
cmp
sub
or
sbb
cmp
mov
cmps
jne
inc
psrlw
cmp
sar
lods
jmp
aad
dec
fcomp
inc
or
cmp
mov
out
outs
push
mov
sbb
sbb
loopne
mov
(bad)
and
(bad)
jne
(bad)
or
sub
xchg
sbb
jbe
dec
and
retf
ja
scas
fstp
addr16
nop
loop
sbb
ja
or
add
imul
inc
jnp
jecxz
push
dec
mov
adc
(bad)
scas
cmp
mov
inc
loopne
lahf
ret
sub
mov
sub
shr
mov
ret
inc
xchg
mov
mov
adc
out
adc
xchg
push
cmps
jbe
or
ret
movs
inc
mov
hlt
mov
cmps
pop
call
or
inc
arpl
cmps
call
mov
stos
fstp
jo
push
add
add
xor
jno
daa
in
adc
push
jmp
in
ror
pushf
nop
cwde
inc
popa
je
enter
cld
retf
inc
jg
or
mov
inc
push
sar
push
outs
mov
hlt
mov
repz
(bad)
mov
fist
pusha
mov
mov
sub
enter
cmp
cmps
mov
das
ss
add
xor
cmps
xchg
mov
jo
loop
aaa
or
stc
shl
or
int3
or
pop
in
cmp
pop
and
cmp
hlt
out
inc
xchg
mov
push
jl
jl
test
sbb
sbb
mov
and
inc
repz
xor
out
mov
ret
push
rcr
aad
push
add
add
ins
cmp
xchg
xor
je
mov
xor
addr16
add
push
xor
in
int3
sub
mov
mov
(bad)
fsub
dec
add
repz
gs
lods
jns
mov
es
mov
test
dec
sub
in
push
adc
aad
mov
fild
in
imul
xor
xchg
leave
ins
loope
into
mov
sbb
imul
test
sbb
xlat
js
jp
push
arpl
ret
ret
mov
aaa
add
adc
ret
lea
xchg
ret
mov
push
neg
test
inc
jmp
jnp
xchg
push
icebp
cdq
ss
(bad)
and
mov
sbb
jecxz
add
inc
pusha
sub
mov
outs
jo
icebp
addr16
mov
sub
push
popa
pop
mov
(bad)
cdq
push
shr
test
into
mov
(bad)
je
ret
stc
imul
mov
xchg
ins
ss
xchg
jl
test
test
mov
repz
out
pop
mov
adc
lock
push
imul
pop
mov
call
std
je
pop
xor
jmp
and
dec
lahf
dec
adc
sar
inc
add
dec
sar
les
cmp
enter
sti
(bad)
leave
jns
push
imul
mov
sbb
shl
cs
std
and
push
adc
push
data16
retf
sub
or
mov
mov
ss
jae
inc
pop
xchg
pop
jne
pushf
ja
dec
pop
inc
shl
pop
mov
fbld
das
loopne
pop
pop
ss
push
icebp
arpl
mov
cld
(bad)
loopne
mov
inc
pop
pop
jmp
out
sbb
add
sub
xchg
fs
shl
sub
int
test
ins
sbb
jmp
push
in
iret
push
mov
pop
mov
outs
jl
in
rol
dec
out
jmp
cwde
and
cs
cmp
jb
test
mov
jae
pop
shr
push
iret
rol
ror
test
push
jo
mov
sub
test
xchg
mov
adc
and
test
pop
pop
jne
dec
push
jb
add
movs
ja
mov
aas
xchg
rol
push
fwait
arpl
retf
jne
push
push
and
dec
jnp
shl
mov
stos
or
jns
adc
fs
cmp
dec
and
cmp
pop
mov
push
test
(bad)
add
pop
imul
arpl
fnstsw
push
inc
fs
pop
inc
pop
push
jge
out
jp
sub
aad
dec
(bad)
cmp
jmp
jle
daa
push
cdq
mov
xchg
pop
or
jne
mov
push
(bad)
out
mov
out
fldenv
dec
cpuid
and
icebp
mov
dec
inc
adc
xchg
sub
icebp
outs
sub
cmp
jb
(bad)
out
aam
mov
popf
xor
add
jmp
pop
sahf
inc
mov
stc
push
in
mov
mov
fild
adc
test
cmp
xor
sbb
mov
or
jecxz
shl
adc
movs
stos
mov
leave
jne
lods
jns
sahf
cmp
ret
call
rol
test
out
ins
call
cmps
sbb
jne
push
xchg
push
jb
imul
icebp
cmp
xor
add
out
sub
call
and
mov
pop
mov
imul
sub
sar
out
jns
dec
jo
adc
retf
mov
in
xchg
rcl
sbb
sub
mov
dec
push
dec
jne
cwde
mov
dec
ret
push
cmp
pusha
dec
outs
fldenv
cmps
xor
push
xor
imul
(bad)
cld
xlat
mov
jp
push
mov
cmp
test
jle
fwait
out
cmc
sbb
ins
scas
adc
jmp
mov
jo
dec
push
(bad)
cmp
stos
outs
or
pop
cmp
pop
mov
or
mov
fmul
or
ds
push
pop
gs
add
adc
jnp
loope
pusha
(bad)
pop
push
out
or
pop
test
inc
inc
mov
or
mov
stc
cdq
push
add
movups
push
or
icebp
add
pop
pop
out
fnstcw
ja
aam
xchg
mov
stc
cmps
pop
mov
push
pop
(bad)
arpl
mov
mov
mov
add
pop
pop
xchg
fisttp
js
scas
(bad)
mov
out
mov
sbb
mov
mov
cmp
test
int
jae
stos
out
lods
sti
data16
and
lds
mov
imul
inc
sbb
lock
in
inc
xor
inc
retf
out
push
mul
cli
cmps
adc
retf
dec
add
adc
aas
or
das
cld
dec
into
jb
aam
cmp
leave
pop
pop
or
test
xor
pop
jmp
cli
jb
sbb
rcl
xor
mov
inc
dec
into
sub
cmp
jmp
sub
leave
mov
test
jp
push
into
lds
xor
push
xchg
inc
retf
call
shr
in
cs
fcomp
aad
cs
dec
dec
cmps
in
outs
aam
pop
ror
popa
jp
inc
sbb
jmp
in
sub
adc
push
cmps
cwde
(bad)
jp
cmps
cmp
in
nop
pop
daa
xchg
icebp
shr
lods
sahf
jns
jbe
lods
(bad)
sti
(bad)
lock
fwait
rcr
dec
dec
jp
mov
mov
adc
test
or
jne
jb
cmp
or
sub
dec
mov
(bad)
xor
(bad)
or
sub
cdq
ja
mov
jae
pop
and
mov
daa
popf
(bad)
sbb
loope
dec
leave
and
ret
aam
or
add
cwde
lea
movs
jmp
nop
in
mov
dec
std
dec
pop
and
stc
jno
(bad)
mov
cmovo
mov
dec
dec
iret
mov
push
in
pop
hlt
push
pop
add
lods
cmp
pusha
dec
idiv
mov
ds
sbb
dec
mov
xor
arpl
mov
shl
(bad)
repz
push
fidiv
es
ins
leave
pop
fldenv
or
in
xlat
xchg
stc
add
lahf
inc
addr16
rep
xchg
and
(bad)
pop
pop
hlt
push
in
jmp
xor
mov
mov
pcmpgtd
jecxz
xchg
sbb
shl
inc
sbb
cmps
jg
sbb
fsub
mov
imul
test
adc
pushf
or
stos
cmp
cli
xor
cmp
fs
sbb
jno
cmp
lock
movs
fwait
cmp
sahf
rol
cmp
pop
es
pop
out
iret
dec
inc
push
sbb
enter
xchg
fcomp
xchg
mov
in
in
push
(bad)
pop
inc
pusha
test
loopne
pop
daa
jle
mov
cmps
in
cmps
inc
movs
sub
inc
fs
or
int
neg
pop
retf
sahf
sub
mov
inc
cmc
xchg
sbb
or
stc
retf
fs
mov
shl
lock
cmp
mov
sbb
or
mov
xlat
stc
add
jmp
(bad)
jno
call
jns
xlat
adc
enter
add
inc
inc
hlt
xor
and
mov
mov
es
ja
fisttp
rcl
jmp
mov
adc
repz
hlt
xchg
xchg
mov
push
loope
fiadd
lock
sub
fnsave
out
retf
jb
stos
aam
(bad)
mov
pop
cmps
iret
(bad)
mov
addr16
rcr
and
sub
out
sub
pminub
idiv
mov
mov
in
jge
pop
add
popf
test
(bad)
enter
mov
inc
xor
imul
mov
aam
xor
sbb
icebp
mov
xor
mov
mov
call
leave
push
mov
dec
stos
pop
and
sub
cmp
ret
inc
pop
imul
fs
push
sahf
xchg
stc
inc
push
data16
pop
push
lock
dec
and
fs
clc
adc
les
cs
(bad)
mov
jmp
pop
repnz
daa
ror
mov
xor
fmul
xor
enter
mov
leave
bound
or
mov
leave
and
xor
loope
aam
push
jge
pop
and
out
test
jg
or
in
pop
sahf
ds
jnp
inc
sub
pop
mov
call
data16
and
test
out
jns
ja
stos
sbb
daa
pop
dec
test
stos
int
int
mov
rol
dec
add
sbb
mov
dec
inc
js
xchg
adc
push
jge
in
lahf
int
dec
pop
push
adc
clc
cmc
leave
sub
push
fnstsw
xor
bound
vmwrite
push
into
imul
(bad)
into
cmp
ficom
pop
push
adc
sub
mov
fstp
sbb
sti
cmp
data16
mov
mov
fst
cmp
(bad)
mov
and
das
jo
sub
hlt
lds
xor
sbb
mov
dec
ins
adc
adc
add
inc
mov
scas
in
mov
inc
imul
mov
fsubr
or
movs
push
add
push
push
xchg
mov
jle
jo
cmp
add
adc
aam
call
pop
(bad)
dec
inc
and
dec
(bad)
inc
mov
push
pop
stc
retf
cmp
mov
scas
push
fbld
dec
pop
jmp
cmp
mov
ins
push
or
cs
and
xor
loopne
lock
and
adc
ins
rcr
or
fdivr
jmp
jle
dec
jne
sub
adc
in
xchg
xor
mov
dec
dec
fwait
mov
popf
cdq
dec
fistp
or
rcl
xor
rol
cmp
dec
ret
div
retf
je
test
xor
jp
and
mov
add
outs
xlat
clc
pop
xor
dec
sbb
sbb
push
mov
push
mov
sbb
cmps
dec
xlat
xor
or
jg
inc
mov
push
add
es
dec
jge
xlat
mov
inc
imul
pop
lea
push
in
or
or
imul
push
mov
jg
inc
test
shr
iret
xor
mov
push
std
dec
test
sbb
add
(bad)
and
fisub
mov
push
xlat
mov
add
pop
cmc
movs
iret
inc
or
ss
nop
ja
xchg
loopne
dec
sbb
mov
sahf
jnp
cld
pop
adc
adc
inc
bound
push
mov
inc
fnstcw
pop
shr
ins
and
jp
shl
je
dec
movs
xor
ja
aad
lahf
cmc
jno
cmp
or
outs
fistp
sbb
loope
dec
xor
(bad)
xchg
enter
lods
push
xor
rcr
jecxz
xchg
dec
xchg
aam
mov
retf
lods
lods
push
xchg
cmp
jne
mov
inc
hlt
mov
jns
push
push
or
js
les
pop
lahf
and
push
hlt
cld
cmp
das
push
imul
pop
cmps
xor
sbb
into
pop
ins
and
aaa
xchg
je
xchg
rep
loope
and
outs
and
les
cmp
fild
call
gs
dec
push
pop
stos
cwde
add
or
cdq
(bad)
imul
daa
pop
lods
sbb
adc
pop
sbb
leave
dec
sahf
push
jno
add
(bad)
push
inc
bound
xlat
ficomp
xchg
scas
outs
fsubrp
sbb
sub
mov
not
(bad)
dec
cli
les
sar
or
pop
xchg
aad
mov
jmp
ins
jae
cli
and
and
sahf
imul
movs
xchg
call
shl
mov
pop
jmp
cwde
out
xchg
enter
int
ss
xchg
mov
mov
(bad)
jmp
jae
xor
jo
jb
cli
add
mov
test
jmp
jnp
clc
xchg
mov
sub
pop
jns
and
cmc
push
jns
or
fcmovnb
pop
daa
ror
imul
cmp
dec
sub
in
or
sub
ds
xchg
xchg
mov
mov
mov
pop
pop
mov
sbb
mov
sbb
sbb
jmp
movs
dec
ret
mov
xor
cwde
imul
or
dec
in
ss
and
dec
out
inc
popf
es
out
jmp
xchg
push
test
mov
jo
ret
popf
sbb
jo
mov
mov
push
pop
jg
int3
adc
mov
add
add
imul
mul
cmp
pop
pop
mov
bswap
loope
clc
js
pop
cmps
mov
ret
leave
push
retf
dec
jcxz
dec
test
jp
fwait
xor
pop
mov
sub
in
mov
xchg
rcl
or
jge
jnp
aam
addr16
add
or
stos
and
xor
pop
stc
mov
mov
adc
scas
push
push
je
repnz
adc
jbe
or
or
call
xlat
add
jae
mov
and
daa
in
jmp
cmp
inc
push
sbb
ds
fiadd
jns
push
push
cmps
sub
mov
mov
and
jo
xchg
nop
mov
cmp
lock
aaa
pusha
xchg
clc
dec
scas
sti
movs
hlt
mov
push
popf
and
sub
retf
push
call
sbb
sub
sub
mov
hlt
test
mov
push
xchg
(bad)
cld
cmp
arpl
vaddsd
mov
xor
mov
scas
sub
cmps
in
xor
dec
xchg
pushf
inc
xchg
push
add
push
(bad)
sbb
or
jmp
pushf
retf
pop
sbb
push
sbb
push
ret
sub
cmp
shl
das
mov
fxch
pop
out
mov
sbb
jle
test
retf
test
cmc
pslld
jmp
lods
jae
cmp
pop
imul
pop
imul
push
adc
sub
test
jno
jg
jg
mov
jnp
mov
(bad)
loope
and
dec
sub
sbb
jo
fwait
jae
jp
pushf
stc
pop
jno
aam
push
jle
loope
cmp
jae
test
repz
test
es
aaa
scas
pop
xchg
ror
xor
or
add
sbb
dec
push
in
retf
cmps
adc
aas
dec
rol
out
push
ret
je
gs
sbb
icebp
jl
loop
daa
inc
jecxz
(bad)
fcomp
cmp
or
popf
and
lods
mov
stos
cld
jmp
clc
icebp
stc
mov
adc
pop
cmp
xor
test
fdivr
mov
dec
out
push
std
or
adc
inc
mov
cmp
(bad)
loopne
mov
int3
outs
cmp
repnz
in
idiv
push
cmp
mov
out
mov
xor
push
push
sbb
aad
cld
jp
jae
cmp
in
or
or
xlat
push
push
das
jp
cwde
push
fsub
jecxz
test
in
js
repnz
xchg
jmp
sub
ret
xchg
push
jp
pop
xor
or
sub
mov
cmp
rcl
das
sti
push
pop
lahf
js
js
les
mov
test
scas
pop
xchg
jno
lock
mov
mov
jmp
test
mov
(bad)
mov
leave
mov
push
gs
or
hlt
sub
(bad)
and
or
ss
add
pop
pushf
cwde
outs
inc
ret
shl
cld
pop
adc
jmp
mov
jbe
push
pop
bound
lds
fwait
sub
sub
xor
inc
dec
jae
in
add
inc
pop
bound
pop
lock
fcom
pop
dec
aas
jne
push
mov
or
push
xor
aad
daa
leave
out
out
jmp
or
xchg
and
sub
xchg
out
ja
pop
xchg
fist
je
mov
xchg
sahf
hlt
mov
mov
cmp
xchg
popf
das
(bad)
cdq
push
add
cmp
sub
bnd
inc
in
jecxz
adc
jno
movs
pop
movs
test
sub
fldenv
add
cld
cmps
imul
push
xchg
pop
(bad)
mov
mov
push
mov
rol
cmp
push
sbb
daa
(bad)
pop
das
lea
sub
(bad)
pop
jo
out
retf
popf
mov
stos
ins
inc
out
adc
in
mov
and
cmp
daa
sub
jnp
fstp
test
rcl
lahf
jno
retf
je
inc
and
fimul
push
push
jb
inc
icebp
sbb
stos
je
out
and
jp
mov
inc
rol
mov
mov
add
mov
push
mov
and
fmul
cmp
inc
push
push
nop
popf
adc
movs
ret
neg
(bad)
gs
sub
ins
popf
cmc
and
xor
inc
nop
fstp
iret
gs
sbb
xchg
and
retf
ficomp
push
mov
cmp
and
movs
pop
iret
je
push
sbb
loopne
push
adc
pusha
lods
ret
cmp
jge
add
push
aas
add
or
std
jmp
pmaddwd
mov
and
daa
imul
mov
cmc
rcl
cmp
in
lds
inc
jmp
stos
cmp
jl
xor
sub
icebp
mov
xchg
sahf
mov
sub
(bad)
f2xm1
loope
add
pop
adc
xchg
and
cli
nop
pop
imul
test
mov
movs
add
and
movs
and
xor
sahf
xor
add
adc
mov
repz
out
push
pop
sub
fwait
data16
aas
mov
ss
push
sbb
std
daa
sub
daa
iret
outs
(bad)
imul
sbb
adc
ror
ja
inc
unpcklps
cwde
xchg
push
mov
std
xor
pop
and
sbb
rcl
xor
mov
mov
xchg
jl
add
push
sub
sti
adc
aas
sahf
cwde
xor
mov
cs
add
jb
retf
mov
sub
jecxz
aas
gs
ficom
dec
mov
in
pop
loopne
push
cmc
sub
mov
mov
les
push
(bad)
cmp
add
repz
pop
and
mov
jl
sub
xchg
lods
sbb
mov
pushf
inc
test
aaa
lock
inc
iretw
mov
dec
in
in
push
outs
cli
retf
pop
fisttp
stos
mov
jno
fs
mov
jae
or
test
div
add
in
push
call
rcr
pop
sbb
into
rcl
adc
and
ss
push
stos
rcl
in
adc
sbb
jo
cld
mov
out
or
xchg
cmp
mov
jns
sub
and
jns
jnp
sub
mov
inc
nop
xchg
dec
leave
clc
and
hlt
mov
in
dec
imul
call
mov
sub
jp
cmp
xor
icebp
or
xor
mov
out
jge
jne
stos
les
je
pop
mov
mov
aaa
xor
fsubr
pusha
into
and
mov
cmps
mov
mov
lock
sar
adc
stos
adc
mov
retf
fnstsw
frstor
aad
(bad)
jbe
fsubr
pusha
rcl
dec
cmp
mov
push
mov
ret
dec
cld
jbe
inc
scas
and
retf
add
in
out
aas
jle
dec
adc
mov
out
pop
pop
cld
jle
mov
xchg
dec
jl
push
mov
mov
(bad)
mov
xchg
in
pop
mov
in
repz
dec
out
inc
fild
daa
xchg
mov
xchg
dec
lods
mov
jmp
daa
sub
inc
inc
xor
jb
mov
je
xor
or
mov
and
fwait
sbb
out
sbb
shr
add
mov
in
xor
out
(bad)
push
dec
adc
or
lds
clc
xor
dec
dec
jmp
push
stos
push
jp
or
push
sub
scas
(bad)
push
rol
jbe
in
call
adc
retf
push
cli
inc
push
out
test
pop
jl
mov
sar
jecxz
mov
push
cmp
cmps
es
hlt
or
mov
pop
dec
aaa
push
cli
dec
aaa
bnd
pop
xchg
adc
(bad)
gs
pop
int
xchg
mov
jne
sub
in
dec
mov
cmp
fwait
lock
mov
(bad)
inc
test
pop
es
adc
outs
pop
xor
(bad)
iret
mov
adc
jno
and
out
mov
jne
xlat
dec
mov
mov
fmul
xlat
or
push
jno
stos
aam
dec
xchg
in
sar
(bad)
popa
lods
fisub
mov
daa
call
into
mov
clc
pop
cwde
ss
ds
jnp
sub
xchg
jmp
stc
xchg
stos
cld
retf
mov
cld
mov
js
daa
jns
fwait
cmp
mov
jno
mov
mov
cwde
lods
js
mov
in
xor
shl
repnz
(bad)
push
dec
jmp
mov
mov
sbb
test
retf
ss
push
adc
mov
dec
fdivp
dec
fidivr
arpl
fld
push
adc
rcr
mov
sbb
mov
mov
ss
mov
fcmovb
pusha
jmp
mov
(bad)
je
fnstcw
sbb
and
mov
push
cs
mov
stc
add
out
fistp
in
pop
repz
push
adc
js
into
push
mov
push
iret
xchg
cmps
arpl
movs
adc
cli
dec
pop
dec
pop
sub
mov
push
lods
mov
into
sbb
imul
call
sbb
pop
mov
gs
inc
fstp
gs
inc
call
lea
cmps
push
mov
test
push
js
pop
jns
cwde
pop
xor
fcom
les
pop
and
ret
cmps
sbb
adc
mov
adc
enter
jl
ss
into
scas
(bad)
push
jne
sub
std
xchg
sub
lock
test
add
ret
into
aam
sar
add
sbb
jb
mov
outs
mov
and
div
xchg
xchg
jg
shl
pop
sbb
je
jecxz
repnz
(bad)
adc
sbb
xor
loope
jne
jae
fadd
dec
cmp
clc
jmp
xchg
dec
adc
loop
loopne
sar
cmp
adc
push
test
xlat
lods
pop
push
sub
lods
in
nop
mov
cmovns
ja
fbstp
pusha
dec
mov
dec
xchg
jo
je
stos
test
inc
test
dec
push
mov
bound
mov
pop
xlat
movs
pop
xor
es
loop
loop
aad
inc
stos
adc
das
shl
fdiv
mov
and
pop
nop
icebp
sar
sub
add
daa
cmp
sti
adc
push
add
mov
mov
pop
push
jle
mov
ror
push
fimul
hlt
test
mov
mov
jne
call
loopne
xor
pushf
ss
test
xchg
dec
inc
lods
sub
mov
xchg
dec
ins
add
fldenv
fcmovnu
push
aas
add
jg
lods
add
ins
dec
or
sbb
aam
mov
icebp
mov
sti
adc
outs
sub
dec
call
inc
xor
outs
leave
or
inc
test
fisubr
ins
adc
pop
in
jo
jmp
xchg
loop
xor
sub
xchg
dec
test
xor
lea
int3
js
adc
pop
xor
popa
and
jp
lds
push
or
mov
cli
into
push
pop
jne
inc
jno
add
mov
test
mov
and
sar
jecxz
test
mov
inc
sti
aad
gs
(bad)
js
fst
(bad)
push
jg
xor
xlat
xor
scas
xlat
add
jle
cmc
pop
dec
and
pop
xchg
push
xchg
jae
mov
pop
leave
cs
loop
popf
ret
out
jae
lods
fs
fidivr
ret
addr16
cmps
xchg
stc
xor
das
neg
jl
ror
cmps
adc
(bad)
in
inc
(bad)
test
js
push
in
mov
les
pop
inc
adc
xor
mov
push
xlat
mov
inc
add
jne
call
mov
add
mov
ret
pop
jb
push
push
rol
add
xchg
popf
mul
mov
cmp
or
adc
neg
xchg
mov
sub
xchg
sub
xchg
call
pop
mov
scas
dec
dec
stc
movs
mov
mov
out
cmp
sub
pop
pop
test
or
pop
jbe
ins
(bad)
jbe
xchg
cmp
jle
mov
pop
mov
les
jp
jo
scas
outs
cmps
jge
sub
dec
adc
cmp
sub
or
pop
xor
mov
pop
sub
stc
test
retf
xlat
jmp
dec
push
cmp
xor
shl
icebp
test
sbb
wbinvd
(bad)
xor
cmp
xchg
mov
mov
pusha
into
sub
lahf
js
popa
ins
and
dec
lahf
dec
mov
or
and
mov
das
cdq
push
sub
lods
shr
jno
int3
test
call
stc
jl
pop
xchg
jno
(bad)
cmp
std
cmp
dec
mov
fild
inc
pop
ss
sub
bound
push
ret
jb
imul
gs
jo
bound
cs
xlat
loopne
loop
sbb
jecxz
or
repz
adc
(bad)
adc
pop
aam
scas
inc
inc
rol
pusha
push
out
sub
cmp
mov
or
mov
cmp
popf
mov
mov
(bad)
fisttp
jnp
shr
mov
inc
xor
jb
adc
sahf
imul
scas
inc
jle
xlat
je
fs
fs
ja
jg
mov
cmc
out
loope
(bad)
imul
push
dec
jp
or
add
cmp
sbb
jno
fistp
mov
loope
push
and
xor
call
jns
xchg
fsub
lods
jne
cmps
pop
enter
out
mov
sahf
test
inc
jge
out
enter
popf
add
jo
inc
cmp
pop
or
fnstenv
imul
add
lods
sub
(bad)
out
or
pusha
jl
daa
test
scas
inc
mov
fucomi
enter
cmp
mov
jmp
je
leave
fwait
xor
js
out
add
add
jns
cmp
adc
jmp
mov
sub
repnz
bound
loope
iret
hlt
es
jne
std
cmp
out
adc
cmp
sbb
sar
or
test
xor
outs
popa
je
call
call
xchg
iret
sbb
mov
fimul
jno
sbb
addr16
pop
test
aad
jns
mov
mov
sahf
test
dec
inc
jge
aam
mov
jne
mov
add
adc
cmp
dec
pop
icebp
inc
cmps
fcmovnb
test
push
xchg
aas
int
pop
jne
std
adc
inc
fistp
xor
mov
pop
retf
jl
pop
(bad)
pop
inc
(bad)
adc
iret
sti
je
jbe
push
shr
lock
pop
loop
rcl
sub
jle
and
outs
push
rcl
add
xchg
cwde
(bad)
xchg
fsubr
jae
dec
aam
push
pop
push
or
fmul
lahf
leave
ret
aaa
adc
lds
aaa
ja
lods
fcomp
loop
stos
cmp
leave
cmp
mov
sub
imul
add
dec
aaa
mov
mov
les
fwait
aad
popa
jo
add
test
fs
inc
jl
js
call
or
movs
arpl
(bad)
fisttp
add
aaa
adc
sbb
call
leave
xor
push
add
add
xlat
(bad)
scas
dec
xor
mov
mov
mov
les
push
mov
(bad)
sahf
and
inc
je
imul
mov
in
and
mov
sbb
(bad)
cs
out
jle
inc
xchg
inc
add
push
aas
adc
jecxz
loop
push
push
jne
addr16
sub
out
push
int3
sub
dec
ds
xchg
xor
sub
lds
sub
or
test
movs
push
pusha
fwait
mov
retf
out
js
aaa
into
test
scas
sub
pop
sbb
mov
push
mov
nop
mov
arpl
push
lods
xchg
idiv
pop
jecxz
sub
or
adc
adc
in
mov
arpl
add
xchg
dec
inc
icebp
outs
mov
not
aaa
jle
pop
mov
inc
into
and
inc
cmp
inc
jmp
cwde
(bad)
cmp
scas
sar
pop
in
das
daa
jg
mov
pop
inc
sub
std
(bad)
mov
movs
out
in
movs
and
and
fwait
sahf
mov
pop
xor
jmp
inc
ins
in
inc
add
out
(bad)
push
adc
push
mov
in
test
les
aaa
xor
add
add
push
xchg
(bad)
repnz
addr16
push
dec
xor
push
es
xchg
inc
je
data16
push
clc
cmc
xchg
call
test
repz
fadd
daa
pop
arpl
cmp
cmps
aam
out
mov
movs
mul
sub
lods
cmp
repnz
hlt
movs
cli
inc
les
and
loope
xchg
sub
clc
and
retf
push
adc
sar
or
ds
hlt
or
dec
push
jnp
leave
push
cmp
js
push
outs
fadd
inc
inc
es
sbb
ins
(bad)
mov
jg
sub
popa
jbe
mov
sub
lods
sbb
das
leave
fadd
add
xchg
jmp
sbb
in
es
not
(bad)
adc
add
call
mov
mul
push
sbb
jnp
sbb
add
add
push
mov
imul
inc
loopne
in
cmp
hlt
out
mov
pop
push
mov
iret
clc
inc
or
pop
jne
mov
(bad)
aam
out
inc
push
dec
dec
sti
out
call
sti
mov
int
call
xchg
pop
lods
and
cld
push
leave
inc
dec
xor
stos
adc
push
gs
cmps
xchg
movs
mov
lea
lods
test
mov
in
add
cmp
sbb
dec
mov
sbb
add
cld
int
outs
cmps
cmp
cmp
sub
push
dec
lods
pop
outs
add
daa
jg
xchg
xchg
mov
pop
xor
jmp
mov
arpl
push
fbstp
jae
pop
dec
rol
jmp
mov
shl
sbb
call
inc
mov
fs
push
scas
jno
je
inc
adc
inc
xchg
inc
frstor
(bad)
out
inc
fsub
pop
into
sub
add
sbb
call
jmp
mov
pop
jle
in
xchg
sbb
hlt
pop
(bad)
les
arpl
xchg
jmp
mov
test
push
sbb
rcl
dec
cmps
sbb
add
adc
movs
jae
scas
int3
ror
jae
pop
pop
ss
std
lea
and
pop
movs
cwde
jo
or
cmp
mov
fist
fisttp
and
cmc
adc
repnz
xchg
ds
mov
in
lea
movs
sub
sbb
jecxz
int3
push
ret
ss
sub
and
jo
cmp
and
mov
shl
in
bound
or
rcr
push
sub
push
outs
scas
out
xor
dec
push
mov
push
add
ds
cwde
push
cmps
cmp
sub
cmps
adc
xchg
and
sbb
test
sub
and
stos
das
push
xchg
loopne
call
push
push
sbb
les
inc
pusha
icebp
jmp
iret
retf
addr16
fcomp
je
xchg
dec
scas
mov
and
(bad)
not
xchg
retf
ds
daa
pop
loope
aas
inc
mov
jno
je
or
pop
das
sbb
popa
retf
pop
inc
repnz
push
push
cmp
mov
mov
jp
or
arpl
leave
and
outs
fisttp
pop
cmp
jae
inc
add
(bad)
pusha
(bad)
mov
into
clc
mov
movs
xchg
inc
xor
test
cmp
inc
fwait
outs
leave
sbb
add
dec
xchg
mov
adc
fnsave
fs
dec
sbb
loope
mov
lds
cmp
(bad)
repnz
mov
sahf
es
retf
stos
pop
cmp
xchg
movs
(bad)
mov
mov
mov
test
push
or
retf
les
mov
jo
sbb
lods
sti
stos
xchg
mov
sub
sbb
std
and
jne
sbb
rcr
ret
add
stos
retf
push
dec
test
cmp
sbb
xchg
push
pop
inc
cmp
xchg
push
cmp
mov
sub
data16
sbb
popf
mov
and
out
call
jmp
sub
stos
call
fistp
pushf
in
or
stos
pop
rol
and
jmp
xchg
sbb
sbb
xlat
jmp
push
cmp
int
dec
add
jmp
test
imul
(bad)
pop
xchg
dec
dec
mov
ins
and
retf
inc
push
shl
mov
jno
mov
push
sub
mov
jle
mov
mov
retf
sbb
adc
aad
push
js
jecxz
cli
loop
pusha
or
popf
movs
push
mov
mov
jnp
cwde
push
xor
ja
mov
pop
imul
ja
fdivp
lods
leave
mov
and
push
jle
shr
sahf
sub
xor
ret
test
jo
mov
rol
push
xchg
cmp
cwde
adc
mov
or
repnz
cdq
or
xor
adc
push
and
int
mov
scas
movs
cmp
inc
ds
loope
push
sbb
movs
int
jae
inc
push
xor
mov
pushf
retf
cmp
pop
loop
sbb
retf
inc
sub
or
jno
jge
(bad)
ss
popf
cmp
jecxz
popa
adc
retf
adc
fs
not
scas
cmp
mov
into
mov
dec
out
fld1
cdq
add
jmp
adc
je
mov
test
push
inc
loop
imul
and
add
jmp
(bad)
call
sub
test
das
nop
add
lea
jno
pop
xchg
sar
mov
aas
push
mov
iret
aad
push
push
adc
loopne
mov
push
cmp
and
xor
fadd
pushf
push
popf
repz
xchg
inc
(bad)
mov
pop
xchg
sbb
fdivrp
dec
jge
sbb
add
inc
cmps
call
dec
retf
in
mov
mov
test
fistp
movs
xlat
inc
push
sub
aam
gs
mov
push
rcl
nop
fcomp
out
adc
and
fldenv
add
pop
icebp
sub
movs
into
ds
dec
lea
scas
or
cmps
or
mul
stc
xchg
retf
lods
leave
mov
xor
fldcw
inc
mov
stos
rcl
inc
fsubr
pmullw
lds
mov
mov
mov
xor
mov
(bad)
xor
mov
pop
jg
push
repz
or
fild
stc
cdq
int
push
or
push
loope
sti
lods
inc
xchg
xchg
(bad)
(bad)
xchg
sti
in
call
dec
fwait
adc
jae
push
repz
aas
mov
mov
dec
inc
add
and
test
retf
and
push
fs
and
test
pop
jno
mov
cmp
fiadd
cmps
or
test
aaa
mov
fdivr
mov
add
mov
data16
je
cmps
mov
cmp
js
inc
dec
pop
pop
sub
and
loop
ss
das
fstp
mov
test
aaa
adc
sbb
jge
shl
sub
jns
cwde
call
jmp
movs
and
mov
sub
xchg
dec
jnp
inc
stos
inc
and
xor
or
(bad)
je
in
pop
test
jno
and
movzx
leave
dec
sbb
ja
out
lahf
movs
cmp
ror
lea
sbb
out
pushf
mov
fldl2e
push
repz
jmp
push
xor
stc
mov
cmp
jo
and
push
mov
jmp
fnstcw
repz
lds
dec
pop
in
adc
mov
test
mov
xor
nop
fcom
test
push
adc
adc
ror
shr
or
pushf
addr16
hlt
loop
and
adc
ss
test
xor
icebp
inc
ds
jbe
mov
sti
and
aaa
into
out
imul
pop
iret
je
add
enter
push
dec
jl
ds
or
push
cs
sub
cmp
(bad)
cmp
sti
leave
leave
adc
push
fwait
and
xor
outs
xor
jno
es
out
loope
jb
stc
pop
lods
and
pop
movs
sub
mov
pop
aas
test
sahf
(bad)
fiadd
pop
adc
push
int3
div
arpl
sahf
stos
adc
stc
sbb
and
or
dec
call
xor
out
jns
jg
mov
cmp
sub
cmp
div
mov
sub
pmaxsw
push
jne
adc
push
xor
lds
ret
call
test
xor
pusha
loopne
sbb
loopne
inc
mov
push
inc
movs
in
and
rol
push
and
cmps
inc
stc
xor
mov
jp
rol
adc
jmp
fldenv
add
stos
push
mov
test
sub
sbb
jo
or
push
sti
rol
fnstcw
mov
fstp
ret
jp
shr
mov
mov
outs
cmp
aaa
mov
dec
gs
int
enter
push
pushf
icebp
rcr
dec
pop
cmp
imul
xchg
pop
cmp
xor
in
mov
push
call
leave
in
dec
jb
mov
push
xchg
loop
cmc
push
das
cs
sbb
bound
sbb
dec
cdq
xor
and
and
dec
aas
mov
mov
mov
cli
rcr
jp
xchg
pop
pop
sub
mov
arpl
pop
or
push
gs
push
push
push
mov
and
ret
lods
out
jnp
add
xor
leave
popf
test
ffreep
jmp
cli
mov
xchg
xchg
xchg
in
pushf
sbb
into
mov
(bad)
adc
sub
into
jge
mov
push
cmp
inc
test
enter
cmp
loopne
jb
dec
push
(bad)
out
mov
pop
jne
dec
in
cdq
sub
je
jo
ror
sti
and
aaa
outs
mov
or
jno
cli
jg
fist
dec
into
mov
in
ja
mov
sbb
inc
call
ins
stos
test
int3
aam
cmp
(bad)
mov
jo
loop
xchg
cmc
cs
dec
push
getsec
inc
out
xor
xlat
sub
adc
rcl
pusha
pop
inc
test
push
xor
and
jno
cmp
jbe
ds
lock
and
int3
adc
aas
inc
cwde
(bad)
dec
sbb
xor
(bad)
or
out
(bad)
(bad)
not
test
mov
xchg
call
and
fs
cld
pop
rcr
cmp
sub
inc
mov
aad
cmp
retf
ins
mov
je
cmp
push
inc
iret
pushf
aad
ins
scas
shl
fdiv
call
mov
xchg
cwde
cmps
inc
fiadd
push
das
mov
mov
iret
sbb
in
pop
sub
in
pop
xchg
and
cmp
cmp
pop
mov
test
fbstp
pop
adc
aas
adc
and
fistp
mov
stc
outs
push
ds
xchg
mov
sti
in
xor
sbb
ja
mov
loopne
aaa
adc
push
(bad)
cmp
mov
pop
mov
mov
outs
push
in
xchg
pop
frstor
jmp
into
pop
test
das
or
popa
mov
lea
stc
out
xchg
pushf
cmps
icebp
xor
dec
jne
or
mov
imul
xchg
ja
mov
call
mov
mov
cmp
out
leave
std
cmp
mov
(bad)
loopne
inc
mov
hlt
in
xchg
outs
dec
pop
ss
(bad)
imul
xchg
lock
or
adc
pushf
jo
pop
sub
mov
clc
fs
retf
es
out
mov
into
cli
or
inc
scas
or
sti
add
sbb
shr
or
loope
aad
out
mov
and
in
jmp
ret
pop
inc
ds
dec
or
or
ret
aaa
sbb
test
data16
and
retf
xor
pop
or
sub
mov
mov
dec
mov
imul
push
cmp
cmp
and
scas
sub
pop
mov
js
xor
pop
push
sti
popa
sbb
mov
popf
or
push
cmps
je
xchg
or
shl
aam
ret
fistp
outs
and
cmps
outs
inc
(bad)
shl
(bad)
jmp
sbb
das
in
test
and
pop
xchg
mov
cmps
or
clc
xchg
push
scas
mov
pop
rcl
rcr
sub
das
rcl
xchg
das
and
rol
stos
imul
adc
aas
std
enter
leave
jno
aaa
dec
cdq
lods
dec
xchg
mov
nop
repnz
stc
xchg
ret
lods
xlat
fs
test
cld
mov
pop
mov
out
push
cmps
loope
int3
xor
pop
out
(bad)
shr
dec
stc
dec
rcr
int
fcom
xchg
ins
fs
xchg
push
into
lods
push
jl
cmp
(bad)
push
dec
sub
sub
lea
(bad)
aad
inc
out
data16
xor
jecxz
movs
cmp
rol
shr
imul
fdivr
jmp
cld
icebp
sbb
mov
mov
cmp
and
pop
and
dec
xor
dec
icebp
fwait
mov
dec
lods
fwait
lods
push
dec
out
ins
jg
leave
daa
jne
(bad)
adc
cmc
lods
call
jns
(bad)
fstp
mov
push
mov
and
in
mov
cwde
movlps
push
test
mov
push
mov
fnstenv
shl
ss
adc
jmp
out
or
jne
(bad)
push
ficomp
ret
in
push
jbe
xchg
mov
stos
mov
sbb
jmp
jle
jmp
arpl
push
jne
scas
dec
xchg
sub
cs
mov
(bad)
test
cmps
dec
fxam
sub
shr
mov
test
sub
cld
clc
jecxz
sbb
(bad)
jb
inc
stc
pop
and
loop
sahf
shr
outs
stos
test
jno
cmp
sub
cmps
dec
add
fstp
adc
sbb
sub
jg
pop
iret
and
xchg
es
sub
inc
jmp
and
inc
push
nop
mov
push
and
xchg
add
hlt
retf
sti
jmp
inc
mov
lea
movs
xchg
fs
xor
imul
pop
or
hlt
push
sub
add
fnsave
mov
add
dec
aad
jno
fcmovu
fcmovu
and
test
ds
ret
in
jno
test
jmp
gs
dec
test
inc
jnp
in
popf
add
in
lds
and
ss
add
hlt
dec
fstp
mov
inc
jp
xlat
xchg
int3
xchg
ror
scas
mov
sbb
xor
nop
addr16
jle
retf
or
xchg
in
mov
xor
je
push
in
loopne
push
fst
gs
test
jns
das
popa
lahf
inc
stos
inc
mov
stos
inc
loope
jns
mov
stc
cli
nop
dec
(bad)
in
jne
cmp
xchg
push
aam
out
iret
mov
(bad)
fisubr
sub
sub
ret
frstor
ds
adc
cmp
dec
mov
imul
push
sbb
(bad)
(bad)
enter
jle
xor
adc
adc
inc
cmp
pop
fdivr
imul
lahf
mov
and
add
enter
je
js
or
int3
clc
popa
dec
inc
xor
jl
cmp
and
js
xlat
into
aad
jbe
retf
pop
pop
jmp
ins
mov
inc
dec
adc
pop
icebp
scas
out
ds
xor
jne
movs
cmp
arpl
push
rol
pop
and
sub
pop
jecxz
fld
mov
adc
mov
cld
add
lss
adc
or
sbb
dec
jnp
pushf
mov
jmp
lahf
sbb
jge
mov
push
add
cmp
dec
in
push
cmps
shl
cmc
cwde
js
mov
cmp
cld
xor
sbb
jne
outs
push
add
push
or
nop
dec
xor
add
and
mov
and
ins
jno
mov
movlps
aad
int3
hlt
jmp
(bad)
arpl
mov
pop
inc
inc
movs
aas
cmp
in
jmp
shr
or
push
imul
cmps
dec
sbb
or
pop
fld
(bad)
xor
aam
pop
cmp
push
int3
jmp
cs
push
push
pop
adc
ret
(bad)
push
(bad)
outs
and
sub
ja
push
sar
and
jbe
add
or
mov
fwait
clc
sbb
jecxz
ins
dec
pop
ret
test
mov
cld
mov
mov
enter
jge
js
xchg
in
push
or
call
lods
sbb
in
out
jns
lods
push
xchg
mov
gs
scas
and
(bad)
pop
enter
sahf
add
movs
imul
addr16
xor
leave
push
dec
cli
jmp
int3
xor
(bad)
shl
sbb
gs
call
push
sbb
jge
pop
xchg
movs
test
mov
leave
es
in
add
test
stos
xchg
dec
stc
out
push
mov
or
out
inc
and
add
push
pop
mov
adc
mov
bound
aas
cld
push
push
cdq
dec
xchg
(bad)
lds
sar
das
aam
cdq
ins
cmps
adc
add
xor
or
mov
cmp
cmp
ret
and
and
loopne
rol
mov
cmc
sti
mov
or
aad
and
sbb
and
mov
add
push
in
pop
jns
out
sub
xchg
push
fsubr
fsubr
clc
jmp
(bad)
fsubr
adc
xchg
pop
loopne
lea
rcr
sbb
xor
pusha
fcomip
xor
sti
sbb
or
cwde
ins
cmp
aad
in
or
scas
or
call
xor
jl
std
and
sbb
lods
out
gs
gs
inc
stos
(bad)
push
add
mov
pop
cwde
dec
dec
daa
pop
int
dec
js
iretw
add
adc
mov
aas
inc
(bad)
lock
rol
jge
pop
call
test
movs
fistp
aaa
cld
int3
dec
cmp
mov
dec
dec
arpl
xchg
dec
int
adc
adc
in
dec
mov
and
cpuid
mov
cmps
ffreep
ins
leave
sbb
adc
jp
sub
retf
movs
jo
fidivr
mov
std
movs
scas
jb
dec
fidivr
adc
in
cmp
test
xor
add
sti
test
pop
mov
push
pop
inc
movs
arpl
test
pop
scas
shl
add
int
inc
adc
jnp
xchg
pop
push
cli
jmp
or
cmc
pop
push
push
(bad)
fcmovnbe
scas
in
adc
imul
fadd
outs
popf
xlat
xchg
adc
inc
test
inc
mov
and
leave
shl
(bad)
jecxz
icebp
mov
mov
imul
lock
pushf
push
lea
mov
stos
sub
ds
jmp
inc
pop
idiv
aas
add
test
and
std
pop
mov
jg
out
ficomp
cld
enter
popa
mov
(bad)
ja
dec
jle
jge
pop
(bad)
xchg
lods
and
or
cmp
push
stos
aas
fisttp
sub
pushf
mov
xor
cmp
out
dec
fidiv
enter
and
push
pop
sbb
outs
popa
mov
pop
xor
lds
int3
mov
jmp
lock
xchg
inc
inc
mov
xchg
test
inc
cmp
pop
or
scas
cmps
xchg
hlt
cld
adc
mov
or
pop
(bad)
fdivrp
pusha
jmp
or
sub
push
fbstp
mov
xor
(bad)
pushf
aad
lea
cmp
sub
aad
fsubr
(bad)
inc
push
test
scas
mov
or
xor
sbb
addr16
sub
or
and
(bad)
sub
bound
add
and
(bad)
(bad)
loop
fnstsw
push
sbb
jns
inc
out
inc
mov
int3
mov
cli
leave
push
stos
or
mov
jle
int
cmps
stos
mov
dec
inc
outs
xchg
cld
mov
sbb
push
sar
inc
xchg
push
shr
mov
icebp
mov
xchg
bound
push
pop
jl
mov
in
sbb
in
push
data16
or
ficom
cmc
pop
fisubr
gs
pop
adc
add
adc
cmp
jo
stos
push
inc
fidiv
pushf
ds
popf
mov
or
xor
push
ja
mov
jle
mov
jo
std
call
stos
test
push
ds
mov
fmulp
fnstsw
mov
pop
ss
fdivr
push
sub
(bad)
cmp
pop
ret
or
xchg
mov
inc
imul
or
fcomp
and
jl
or
rcr
fisubr
imul
xor
fldenv
cmp
inc
cli
cld
repnz
push
into
in
imul
not
sub
fdivp
pusha
mov
inc
ins
mov
(bad)
aam
repz
test
scas
shr
jae
int3
das
adc
(bad)
or
aam
fsubrp
mov
fisttp
cwde
adc
mov
cmp
pusha
mov
pop
in
jb
xchg
cmp
lahf
adc
mov
mov
imul
stos
mov
mov
sub
sbb
and
retf
mov
pop
js
es
dec
sbb
jmp
or
dec
jae
idiv
dec
ds
scas
shl
cmp
fisttp
xor
retf
mov
xlat
add
or
xor
cwde
adc
in
pushf
mov
repz
sub
aad
popf
es
jmp
sahf
push
cwde
mov
dec
out
(bad)
sub
jge
xor
xor
jp
jl
leave
or
(bad)
sbb
inc
ds
stos
mov
xlat
mov
jg
push
hlt
test
jle
add
enter
add
scas
or
in
sub
idiv
ins
jnp
dec
jge
push
ret
xor
add
push
xchg
mov
mov
and
and
adc
(bad)
nop
and
scas
scas
sbb
xchg
mov
pavgb
pop
mov
push
scas
mov
sub
idiv
mov
js
sub
dec
pop
in
add
mov
xlat
jge
mov
push
sub
(bad)
mov
out
adc
jae
dec
and
mov
inc
pop
mov
xchg
sbb
cs
clc
jecxz
enter
std
xor
or
std
jnp
lahf
adc
push
push
loop
push
stc
cmp
jne
cli
push
inc
mov
mov
jmp
xchg
stos
pusha
dec
outs
mov
sub
xlat
cwde
xor
cli
in
mov
pop
popf
inc
add
or
sti
sti
sub
jno
or
dec
aad
inc
sbb
leave
push
inc
addr16
ds
mov
fistp
or
add
and
jle
(bad)
pop
sub
(bad)
cmp
inc
adc
pop
pushf
jge
add
sbb
cmp
fdivr
jne
scas
or
mov
mov
mov
xchg
lds
jp
int
xchg
mov
inc
icebp
xor
cli
ins
or
in
jg
in
xchg
push
mov
and
sti
sbb
aas
std
lahf
ins
(bad)
and
xor
xchg
repz
pop
shl
ret
sbb
mov
loopne
pop
jae
jmp
cwde
(bad)
jp
loope
mov
jmp
jnp
out
cmp
add
inc
in
aad
fild
push
mov
jb
js
aad
pusha
fld
inc
out
scas
mov
loopne
(bad)
call
dec
pop
inc
inc
fcmovbe
cmps
lods
cmps
mov
shl
jl
mov
mov
das
in
mov
and
dec
jmp
hlt
imul
xchg
xchg
or
repz
lahf
aad
add
push
pop
push
(bad)
and
out
and
jbe
xchg
shr
and
jnp
out
sbb
sbb
pop
sbb
lds
or
adc
(bad)
and
dec
test
or
int3
push
rcl
mov
xor
mov
movs
daa
daa
fnstsw
adc
xchg
sub
stos
jmp
and
push
pop
adc
xchg
add
pop
cmp
push
adc
cmps
mov
or
and
adc
xchg
add
sbb
lahf
mov
cmc
shl
lea
test
or
stos
fild
xor
lods
ins
mov
jg
test
in
scas
leave
mov
adc
imul
mov
add
div
jno
sbb
rcl
adc
imul
out
(bad)
ja
frstor
(bad)
dec
or
cs
xchg
int
xor
and
inc
and
cmps
xlat
ret
or
xchg
ds
mov
jne
mov
mov
pop
adc
pop
retf
and
dec
xor
aaa
es
fs
out
mov
lds
jmp
hlt
mov
das
inc
pop
mov
retf
je
loope
push
fidivr
or
das
push
fcmovne
stc
(bad)
fwait
out
inc
repnz
mov
xchg
aam
cmp
lds
cmp
cwde
(bad)
sub
mov
test
and
cmp
mov
test
rol
pop
hlt
repnz
cmp
cdq
dec
jl
inc
or
(bad)
repnz
movs
xchg
mov
xchg
lahf
popa
mov
mov
xor
and
(bad)
fnstcw
adc
xchg
imul
sbb
jp
mul
pop
jmp
jbe
test
out
stos
ja
jne
push
mov
pop
dec
pop
and
les
loopne
rcr
scas
or
idiv
xor
sub
ins
ds
sub
mov
inc
pop
call
stos
addr16
rcl
pop
or
nop
mov
mov
inc
push
int3
(bad)
push
mov
fidivr
pop
scas
out
outs
imul
retf
in
sub
cs
loop
ret
mov
ins
pop
adc
jecxz
push
(bad)
lods
or
xchg
outs
ins
mov
mov
pop
dec
shl
pop
leave
lods
cmp
pusha
mul
cmps
and
dec
out
lock
and
(bad)
fisub
mov
mov
pop
fist
sti
imul
stc
mov
gs
in
aaa
mov
inc
(bad)
pop
fistp
mov
mov
repnz
add
repz
adc
pop
adc
mov
xchg
and
je
out
add
jne
inc
push
pop
(bad)
jne
cld
stos
mov
push
lds
int
(bad)
xchg
es
sbb
repnz
adc
icebp
dec
push
lods
idiv
jmp
aaa
jo
inc
mov
inc
sub
xchg
add
jnp
sub
(bad)
xor
xor
adc
inc
add
pushf
cmc
inc
adc
std
je
rcr
jmp
xor
mov
ret
lock
cld
xchg
adc
dec
movs
xchg
xchg
outs
int3
out
in
hlt
push
push
jge
mov
add
or
cmps
rol
test
rcr
add
in
and
sub
mov
inc
sahf
in
and
xchg
mov
jns
sbb
ss
aad
inc
enter
clc
idiv
jbe
add
fadd
and
and
lods
(bad)
sub
inc
jle
mov
sub
mov
mov
inc
cmp
out
pusha
(bad)
call
push
mov
outs
adc
add
jmp
cmp
lods
aam
fisub
mov
xchg
shl
in
out
pop
outs
cwde
(bad)
mov
add
fadd
push
pop
push
aas
adc
xor
and
push
test
sti
fwait
push
stc
(bad)
(bad)
cmp
lds
xor
in
aaa
push
call
sub
shr
inc
add
xchg
fs
xlat
dec
inc
cmp
fiadd
lods
jb
mov
dec
in
bnd
fst
push
(bad)
lahf
ja
nop
mov
adc
in
pop
dec
sahf
pop
cdq
sahf
and
or
sub
icebp
movs
mov
adc
or
shl
ins
dec
fsubr
xor
in
fnstsw
imul
mov
loop
or
mov
pop
mov
mov
sbb
xor
js
inc
or
sbb
adc
cmps
add
push
xlat
pop
pop
loop
pop
out
ret
(bad)
push
in
call
jg
inc
shl
add
es
es
push
push
xchg
es
push
aam
(bad)
arpl
inc
test
stc
or
into
add
jg
mul
fldcw
leave
mul
or
pop
jns
dec
js
test
sbb
jae
js
rcl
push
add
ss
push
and
cmp
cmps
aas
inc
pop
mov
lahf
les
loop
daa
jnp
mov
lahf
push
adc
xor
jmp
leave
hlt
enter
outs
push
add
xor
add
dec
je
jae
mov
mov
add
jmp
and
or
(bad)
jo
stos
jb
dec
ret
aad
test
dec
mov
push
xchg
fbstp
mov
add
pop
nop
xor
repnz
jne
outs
test
mov
std
pop
rcr
enter
mov
ss
in
stos
cli
sub
int3
push
inc
sub
push
mov
aad
movs
inc
jp
test
push
dec
inc
js
jge
xchg
lods
repz
mov
adc
xchg
sub
scas
loope
cmc
push
xor
cmp
jb
lock
mov
mov
mov
add
enter
stos
cld
sbb
dec
les
std
ror
aaa
(bad)
outs
inc
mov
mov
mov
repnz
out
or
aaa
dec
int3
or
xchg
scas
hlt
and
stos
(bad)
push
add
dec
iret
jg
jmp
adc
sub
repz
xor
mov
xor
add
sbb
sbb
push
fcom
pop
pusha
pop
fdiv
pop
mov
dec
pushf
(bad)
call
mov
push
or
shl
xor
(bad)
aas
repnz
push
ds
ins
jno
iret
jl
sub
or
sbb
shr
pop
ins
adc
cmc
mov
and
push
add
mov
jbe
sti
ins
xchg
mov
data16
add
mov
jnp
mov
jmp
outs
das
sti
leave
loop
fadd
inc
outs
fld
pop
and
stos
cli
and
test
jge
clc
(bad)
dec
mov
hlt
cmps
aam
(bad)
fldcw
cmc
mov
sbb
xchg
out
mov
push
xor
out
stos
mov
push
push
das
fistp
xchg
(bad)
pop
clc
and
mov
jno
out
dec
call
repz
addr16
adc
xor
(bad)
movs
mov
icebp
outs
and
mov
push
mul
movs
jmp
push
cmp
jg
retf
dec
(bad)
and
inc
shl
mov
or
jo
test
aas
mov
std
aas
arpl
pop
test
xlat
aam
lea
inc
cmc
push
xchg
push
dec
cmp
stos
jnp
arpl
ja
pop
repz
adc
lds
pop
push
gs
popa
xlat
jb
inc
in
jb
cli
adc
arpl
popf
add
sub
adc
mov
mov
cmp
pop
mov
pusha
mov
aad
or
mov
xor
nop
mov
cs
dec
sar
mov
cli
sub
cmc
jge
or
xor
mov
iret
fprem1
imul
in
in
jmp
dec
xchg
fwait
aaa
sahf
cmp
push
push
jl
mov
sub
nop
push
lahf
das
shl
pop
pop
jg
pushf
mov
fld
and
cdq
xor
xchg
mov
dec
xchg
jb
xchg
mov
rcr
(bad)
repz
pop
push
or
stc
cdq
mov
stc
call
jp
imul
ins
loope
fs
icebp
fs
cmc
dec
or
sbb
sub
adc
inc
push
jp
bound
scas
push
pop
jbe
or
jns
xchg
imul
inc
les
out
xchg
rep
aad
push
ss
pusha
rol
xchg
fs
adc
inc
xor
jb
jp
in
add
and
adc
daa
mov
sahf
jmp
sar
xor
add
mov
popa
pushf
fist
push
mov
sbb
push
lds
icebp
jnp
sbb
and
jno
xchg
cld
dec
not
movs
and
aam
shl
jnp
or
cmp
aad
out
mov
cmp
shl
out
push
lock
push
scas
mov
out
pop
mov
dec
adc
adc
leave
or
aad
std
mov
mov
jo
loopne
and
pop
out
cdq
cdq
mov
pushf
cmps
xchg
in
inc
(bad)
jae
dec
add
and
and
fiadd
dec
in
ret
je
xchg
inc
jg
cwde
out
jle
rcl
fld
push
dec
psubq
nop
stos
xchg
enter
sub
jo
test
clc
mov
rcr
fdiv
cdq
inc
inc
push
sbb
mov
retf
adc
xchg
sub
and
call
xchg
out
jne
and
fdiv
rcl
mov
mov
fdivr
(bad)
repnz
mov
and
stos
add
jo
call
push
in
dec
jno
sbb
and
and
sar
fmul
sub
stos
rcl
sub
xchg
test
jg
pop
imul
aaa
add
sub
mov
fidiv
jmp
test
mov
adc
iret
sub
out
pop
loopne
push
mov
hlt
out
mov
mov
mov
lock
loopne
scas
fs
xchg
adc
retf
in
je
or
lods
leave
sbb
mov
xchg
fs
dec
lods
sbb
ret
ds
pop
fild
xor
movs
cmps
xchg
pop
jg
inc
pushf
pop
xor
je
mov
sahf
or
movs
ss
sti
fcmovne
inc
es
mov
hlt
pop
adc
mov
sbb
mov
retf
mov
(bad)
dec
sar
dec
cld
and
mov
cs
arpl
ret
dec
inc
sti
cld
imul
cmp
int3
jnp
movs
out
or
das
iret
jne
loope
outs
dec
jmp
pop
or
shr
xor
add
nop
fnstcw
sbb
(bad)
loope
cmp
cdq
jle
mov
int
shl
je
aam
mov
add
jp
dec
cmp
mov
ins
aaa
fimul
aam
mov
sahf
lock
sbb
dec
popa
fcmovne
ins
jb
pop
mov
daa
and
cmp
out
mov
aad
sbb
mov
mov
in
scas
(bad)
daa
inc
mul
pop
call
sub
cmp
or
stos
and
pusha
inc
mov
mov
div
inc
xor
aad
mov
sub
ret
pop
clc
into
xchg
popa
jno
push
adc
mov
nop
sub
inc
and
pop
imul
ret
jmp
mov
cld
add
in
jne
add
push
clc
(bad)
sahf
loopne
mov
arpl
iret
mov
lods
leave
mov
mov
daa
movs
xor
int
into
cmp
jb
inc
mov
daa
scas
rol
(bad)
aad
arpl
xor
(bad)
jae
retf
(bad)
retf
test
mov
and
push
pushf
daa
fyl2xp1
inc
scas
xor
jnp
shl
lahf
or
sti
jle
rcl
loopne
adc
cdq
xchg
(bad)
gs
test
test
cmp
lahf
fstp
(bad)
mov
dec
cmp
mov
enter
lea
pop
and
in
addr16
push
(bad)
xchg
mov
loope
sub
jbe
pop
imul
(bad)
arpl
mov
es
lods
mov
xchg
mov
jnp
stc
jb
jb
nop
xor
nop
pop
sub
pop
dec
xchg
add
mov
inc
push
mov
lods
in
dec
popa
inc
push
int
add
scas
mov
xchg
sbb
sbb
shr
stc
les
shr
inc
pop
test
je
(bad)
fwait
mov
lahf
and
push
int
cli
sar
jmp
mov
mov
sub
jle
retf
lahf
movs
jl
mov
iret
mov
push
pop
mov
(bad)
pop
(bad)
push
adc
fwait
arpl
mov
lods
outs
inc
fisub
pushf
adc
imul
out
push
push
inc
outs
daa
xor
and
adc
pop
ins
into
std
es
add
sub
dec
popf
sbb
test
pop
jb
ins
les
jae
xchg
test
mov
mov
outs
ficom
cmp
cmc
sub
jo
pop
inc
push
cmps
lahf
(bad)
div
sahf
mov
mov
dec
mov
outs
mov
lds
and
neg
mov
rcl
push
push
pop
dec
and
sahf
lods
lods
addr16
outs
mov
outs
or
mov
dec
pop
add
jmp
repz
repz
cmp
loop
add
mov
mov
inc
xchg
pop
aad
jle
sub
dec
mov
pop
mul
pop
add
mov
(bad)
dec
sub
icebp
loop
sub
ss
or
sub
in
adc
sub
lahf
xchg
add
cs
pop
dec
dec
push
std
push
sbb
mov
cwde
stc
jmp
shl
dec
sub
movs
fild
mov
sbb
push
dec
jg
mov
popa
stos
mov
xchg
fidiv
mov
cwde
cmc
fwait
push
and
inc
imul
add
(bad)
push
outs
sbb
stc
pop
add
jle
or
cmps
push
call
call
xor
sub
adc
dec
jne
ficom
mov
cmp
out
mov
and
push
loop
push
(bad)
mov
push
mov
inc
rol
cwde
or
or
jb
cmp
cmp
adc
fiadd
fadd
clc
xchg
sbb
call
cmp
and
mov
fs
sub
int
or
dec
push
mov
shr
add
scas
(bad)
jle
cmc
sbb
sub
pop
xchg
mov
sub
jbe
sbb
cmp
xchg
daa
jbe
add
or
sbb
push
out
sub
pop
sub
add
sbb
pusha
mov
cmc
in
adc
jns
inc
jmp
adc
sbb
(bad)
or
and
fnstcw
je
cmp
into
mov
frstor
sub
int
xor
faddp
pop
cli
popa
aad
pop
lock
std
mov
cmp
les
fidiv
xlat
scas
scas
cmp
or
push
and
add
mov
iret
push
arpl
fwait
fs
out
movs
je
cmp
outs
js
push
push
pop
fdiv
adc
sti
ror
mov
mov
cdq
(bad)
fdiv
lahf
int3
pusha
outs
scas
fnsave
lgs
ret
jg
test
jbe
dec
jmp
sbb
test
adc
pop
jns
and
inc
test
jmp
mov
pop
jmp
adc
and
iret
cmp
push
and
jp
outs
xor
push
in
js
aad
inc
pop
hlt
add
xchg
sbb
inc
cwde
lock
ins
push
pushf
test
mov
int
shl
mov
nop
fisubr
adc
inc
xchg
mov
dec
fwait
dec
mov
dec
mov
out
(bad)
and
push
xor
aad
pop
sti
inc
cmc
cwde
lock
pop
add
gs
retf
ins
push
pushf
xor
xchg
inc
retf
scas
sub
cli
add
add
jmp
mov
push
scas
mov
stos
rcr
inc
and
sub
push
(bad)
pushf
mov
cs
cwde
clc
fldcw
es
sbb
jg
mov
adc
addr16
sbb
push
mov
int3
pop
cdq
mov
pop
xchg
push
xchg
push
repnz
add
(bad)
jge
loopne
mov
jbe
sahf
jb
push
fadd
ret
test
loope
das
mov
pop
outs
pop
or
jnp
sbb
outs
pop
jg
dec
lods
cld
push
fnstcw
enter
dec
mov
mov
bnd
movs
and
mov
push
push
sbb
hlt
dec
inc
xchg
pop
test
fsubr
aam
sbb
aad
scas
pop
mov
xchg
pusha
xchg
inc
ja
mov
call
fsub
stos
sub
fsubr
cmp
fcomp
push
out
fs
jle
pushf
popa
cdq
(bad)
in
rol
pop
inc
mov
xor
mov
xchg
aad
xor
mov
jge
fstp
pop
mov
mov
dec
mov
jnp
popf
fidiv
imul
jmp
mov
pop
inc
jg
pop
addr16
sbb
leave
add
mov
mov
aad
jnp
adc
jmp
shl
adc
pushf
add
mov
daa
xor
inc
mov
es
mov
jbe
repnz
fild
jle
dec
fcmovnb
es
movd
adc
jl
fcmovnu
cmp
jns
test
ret
mov
daa
loopne
sbb
sub
popa
jns
sub
mov
cs
fstp
and
mov
cmp
cmp
scas
mov
(bad)
mov
adc
sbb
(bad)
loopne
(bad)
shr
cli
push
rol
pop
mov
push
cmps
adc
int3
movs
sub
add
xor
mov
out
sub
xor
fnstenv
les
je
jle
shl
js
das
test
cmp
call
scas
xchg
sbb
mov
cmps
and
mov
inc
int3
jnp
stc
out
cwde
inc
test
xchg
xchg
fs
addr16
retf
cmp
lods
popf
enter
pop
shl
shl
xchg
xchg
inc
and
(bad)
cmps
popf
push
fstp
rcr
mov
adc
clc
ins
pop
icebp
jmp
xchg
pushf
jmp
pop
sub
out
xor
ret
add
(bad)
iret
out
xchg
jns
or
xor
sar
inc
clc
inc
(bad)
out
les
arpl
shr
retf
es
popa
mov
loope
inc
mov
mov
dec
jle
retf
add
lock
into
dec
int
imul
mov
inc
sti
add
sahf
icebp
sub
dec
test
sbb
dec
mov
daa
outs
cwde
mov
cwde
xor
leave
mov
imul
inc
int3
and
dec
and
call
out
movs
sub
(bad)
sbb
sti
scas
test
inc
pop
pop
cmps
in
adc
or
out
jne
mov
out
dec
loop
push
bound
jmp
scas
rcr
adc
dec
mov
bound
jb
scas
xchg
mov
bound
inc
mov
test
lock
lods
repnz
mov
mov
push
popw
mov
mov
and
or
aad
stc
inc
popa
sahf
push
rcr
ret
shl
jge
jne
std
retf
popf
stc
jecxz
xor
mov
mov
adc
and
rcr
mov
mov
jp
fstp
xchg
cmp
xor
mov
call
xor
jecxz
dec
inc
push
pushf
jmp
xor
and
test
std
push
int
jo
cdq
test
sbb
sub
pop
aad
mov
mov
mov
mov
sbb
leave
movs
inc
cmp
arpl
rcr
(bad)
push
adc
icebp
scas
mov
xchg
mul
and
ins
mov
fwait
mov
sbb
lds
mov
lea
inc
sbb
call
xchg
pop
pop
int
fadd
daa
cmp
push
mov
xor
cmps
jge
sbb
in
mov
data16
rol
addr16
leave
inc
in
mov
cmc
jno
lds
nop
cmp
mov
push
rcr
mov
cli
call
sbb
push
lods
inc
fidivr
mov
inc
adc
repnz
pop
xor
mov
mov
fwait
dec
push
inc
cmp
inc
iret
pop
mov
and
loope
into
popa
add
jecxz
fsubr
es
psubd
dec
ret
inc
in
or
xchg
jne
xor
ficomp
(bad)
je
push
adc
(bad)
call
sub
mov
nop
ss
push
fistp
out
pop
mov
test
cdq
fxch
mov
and
loop
inc
push
sbb
fisttp
sbb
or
lods
push
shl
in
mov
mov
adc
dec
xlat
and
push
(bad)
dec
stc
inc
(bad)
in
mov
loopne
movs
add
idiv
mov
out
pop
cs
xchg
push
adc
call
adc
xchg
jbe
cwde
xchg
inc
sar
xchg
or
pop
inc
pop
hlt
aas
push
push
sbb
dec
mov
add
push
and
push
sar
nop
ret
sbb
push
dec
cli
btc
and
ss
xchg
rcr
lods
scas
add
std
add
call
int3
cmp
mov
je
mov
xor
gs
data16
push
cmp
add
test
inc
mov
inc
mov
sub
xchg
in
mov
hlt
fcom
push
clc
rcl
lods
mov
nop
repz
pop
test
mov
or
scas
out
aam
movs
in
aad
ins
mov
mov
inc
cmps
push
ja
xor
mov
stos
push
out
xchg
jl
movs
adc
int
popa
jecxz
adc
loop
mov
mov
ins
test
arpl
out
(bad)
push
ss
xchg
jecxz
sar
pop
mov
or
fisub
loopne
xlat
add
cmp
mov
in
jmp
retf
fwait
sub
data16
mov
shl
mov
ds
int
out
sar
popa
test
shl
cmp
(bad)
repnz
ins
mov
mov
sbb
mov
mov
test
pusha
dec
outs
iret
test
jle
mov
pop
dec
jg
fucomi
icebp
(bad)
dec
ds
(bad)
test
pop
mov
jecxz
cmp
leave
xor
lock
scas
aaa
xor
mov
xor
pop
arpl
popf
pop
dec
adc
jo
test
cmc
sbb
cmp
pusha
push
je
bound
das
or
pop
fwait
popa
outs
and
sbb
mov
cmp
adc
loop
icebp
fistp
xchg
ret
ret
push
ss
push
test
inc
xchg
xchg
ret
ret
push
in
rcr
add
xchg
loopne
shr
pusha
imul
div
push
pusha
cmps
shr
loope
test
jmp
aam
and
mov
mov
dec
js
leave
mov
cwde
xchg
and
xchg
mov
fiadd
mov
daa
int
retf
or
xchg
pushf
add
mov
xchg
fist
arpl
dec
adc
imul
pop
iret
add
xchg
popf
fdivr
ret
xor
outs
adc
or
jg
fstp
jmp
sbb
fisttp
fwait
daa
and
ret
es
in
adc
mov
loop
loopne
inc
or
dec
xchg
mov
sbb
or
push
lds
iret
in
inc
push
lds
ins
jbe
or
cs
inc
pop
inc
inc
idiv
push
xor
lods
fs
(bad)
std
pop
into
dec
test
repz
mov
mov
jbe
psadbw
out
je
lahf
ror
ja
icebp
inc
dec
pop
xor
mov
mov
mov
lods
sub
jle
ror
sbb
out
xchg
xchg
sbb
rol
or
(bad)
cmp
fptan
call
(bad)
mov
in
adc
popa
cs
adc
xchg
xchg
cmps
cmp
mov
rcr
ret
lds
iret
cmp
mov
add
icebp
jl
cwde
jb
mov
sub
inc
inc
mov
sub
or
jg
(bad)
shl
mov
icebp
loope
sbb
xchg
add
sub
cmps
push
pop
je
mov
(bad)
and
and
pop
push
cmps
cdq
pop
inc
pop
xor
loop
addr16
jmp
aad
aad
xchg
dec
adc
or
or
or
and
sbb
cmp
test
mov
out
(bad)
mov
xchg
dec
bound
(bad)
xor
xlat
cmp
adc
xor
test
pop
mov
mov
in
jne
dec
inc
sub
leave
repz
ret
ja
mov
push
sub
adc
push
cmp
test
inc
xchg
xchg
pop
std
retf
add
jecxz
test
ud1
or
cs
aad
je
enter
mov
bound
xlat
daa
daa
xchg
lds
scas
fcmovu
xchg
adc
scas
std
dec
and
in
lods
pop
out
shr
and
(bad)
gs
mov
frstor
icebp
mov
xlat
dec
add
jg
cli
dec
dec
jmp
stos
mov
adc
add
es
sbb
inc
xor
out
cmp
cmc
mov
inc
mov
jle
mov
pop
inc
cmps
sti
add
sub
and
ins
ds
scas
rcl
or
dec
mov
jne
stos
aas
jns
xchg
inc
sub
xchg
les
push
lahf
mov
ror
xor
jmp
xchg
adc
inc
lods
js
loope
jbe
sub
xacquire
jb
lds
sub
lock
retf
(bad)
xlat
or
cmps
xchg
loopne
jmp
inc
and
dec
test
adc
mov
lahf
sub
in
test
mov
push
inc
jnp
dec
leave
lods
sub
cmc
add
pop
repz
inc
add
jb
std
sub
jb
mov
and
adc
mov
mov
stos
cmps
data16
popa
jne
jo
jbe
push
mov
push
lock
in
adc
add
hlt
push
jbe
push
outs
sahf
lods
mov
lods
mov
out
lea
fidiv
jmp
cdq
fmul
es
xchg
ds
mov
movs
enter
xchg
cmp
or
cmps
cli
cld
mov
sub
inc
outs
lahf
sbb
int3
in
inc
test
stos
push
push
mov
sbb
mov
rcr
mov
outs
fst
clc
lds
xor
addr16
pop
(bad)
bound
jg
jg
sub
popf
stc
xchg
iret
imul
adc
push
sar
add
jno
jmp
repz
ja
mov
or
das
fwait
jl
sti
popa
dec
sub
mov
sti
(bad)
fs
and
(bad)
imul
fisttp
xor
fsub
(bad)
scas
and
inc
adc
int3
push
mov
cmc
mov
sub
cmc
hlt
mov
fdiv
gs
fcmovnb
mov
mov
sbb
cmp
icebp
jecxz
out
mov
adc
push
stos
or
adc
push
mov
mov
sbb
push
sbb
out
xchg
jo
jmp
loopne
dec
dec
mov
adc
or
sub
add
push
stos
ds
mov
std
dec
adc
retf
and
movs
imul
cmp
retf
fdiv
pop
inc
and
cs
pusha
bnd
js
jge
and
lea
xchg
inc
jmp
icebp
(bad)
pushf
xor
ja
cdq
xor
cmp
outs
pop
outs
ror
mov
pop
xor
imul
adc
jle
addr16
xchg
movs
popf
pop
xchg
mov
sub
pop
inc
fsubr
mov
dec
xlat
jge
mov
mov
adc
xor
fist
mov
cmps
push
dec
mov
out
adc
shl
mov
cld
cmp
test
pop
lods
fnclex
aas
sbb
(bad)
cs
dec
sub
jb
movs
and
mov
sbb
pop
jbe
push
je
in
push
lea
adc
loop
inc
mov
jno
xlat
push
das
scas
cmp
js
in
and
ins
aam
arpl
dec
pop
scas
stc
pop
inc
inc
ds
dec
mov
mov
inc
jge
lods
cmp
fcom
adc
lods
sbb
or
pop
push
sbb
xchg
lds
mov
inc
jecxz
adc
mov
adc
test
xchg
test
cmps
mov
fldz
pop
fstp
cdq
inc
xor
mov
mov
movs
in
outs
outs
fstp
fdivr
(bad)
xchg
xchg
sbb
fdivr
mov
xchg
gs
push
xchg
retf
push
or
xchg
fbld
or
fmul
pop
cmp
cmps
cs
(bad)
cld
mov
dec
mov
mov
cs
rcr
inc
sahf
jns
xor
bound
cmps
pop
add
(bad)
(bad)
in
(bad)
es
(bad)
(bad)
jmp
cwde
push
popf
int3
clc
mov
shr
iret
cli
repnz
aas
mov
cdq
aas
mov
into
lea
mov
cmp
fsubr
in
rol
mov
pusha
out
bound
ror
daa
push
push
pop
pop
(bad)
xlat
mov
xchg
adc
loop
sub
fiadd
repz
dec
pop
cdq
outs
lods
dec
inc
mov
push
arpl
push
push
mov
lock
jecxz
inc
(bad)
popa
mov
and
pusha
loopne
add
daa
imul
mov
fimul
in
inc
cmps
mov
stos
push
rcl
xchg
or
sbb
and
inc
pop
adc
or
and
rdmsr
fsubr
clc
hlt
xchg
les
test
mov
dec
and
xchg
mov
inc
jbe
gs
movs
ror
in
mov
pop
dec
pop
push
mov
ds
into
mov
jle
or
ja
dec
mov
clc
inc
mov
pop
ds
xor
xchg
mov
inc
popw
and
imul
mov
ja
mov
mov
push
pop
and
ds
jge
retf
dec
and
push
dec
cs
jno
mov
iret
inc
mov
je
ss
(bad)
enter
sub
jecxz
inc
inc
adc
es
pop
push
pop
or
mov
das
add
mov
push
ror
adc
push
fcomp
(bad)
xor
push
pop
sbb
pop
psrlw
push
fwait
push
dec
xor
inc
and
imul
stc
hlt
cmp
fs
outs
mov
std
or
cmps
sub
push
jae
push
mov
add
fyl2x
cmps
push
and
rcr
jae
sub
pop
dec
cmp
sub
sti
ret
mov
pop
stos
out
sbb
jecxz
add
push
scas
mov
test
test
add
loope
mov
cmp
gs
mov
inc
jbe
mov
(bad)
xchg
out
mov
add
retf
lock
in
outs
gs
mov
fs
adc
add
mov
or
jmp
add
or
sahf
jecxz
out
xor
adc
test
cwde
mov
dec
fstp
mov
(bad)
mov
call
mov
rol
xchg
or
mov
shl
xchg
movs
pop
xor
arpl
mov
(bad)
(bad)
(bad)
fs
cld
mov
sbb
pusha
sti
idiv
out
rcr
fs
mov
imul
push
mov
cmp
inc
in
and
out
pop
data16
jp
cmp
push
sub
dec
and
sbb
or
xor
cmp
out
movs
idiv
mov
fild
add
jl
mov
into
sbb
mov
jmp
cmps
shr
and
mov
mov
sub
xor
or
pop
pop
and
xor
out
add
xor
gs
out
mov
dec
mov
mov
inc
in
cld
loope
or
and
in
inc
adc
dec
dec
mov
jno
xchg
mov
push
pop
lock
pop
test
xor
dec
dec
test
outs
xor
add
jns
aaa
sub
jge
ds
push
pop
xchg
sbb
push
(bad)
jb
and
add
cld
ins
stos
xor
fwait
pushf
inc
dec
cmp
cmp
sbb
jp
sahf
out
ja
loope
hlt
xor
mov
lods
mov
(bad)
in
ja
std
and
clc
xor
test
add
pop
xor
mov
adc
loop
pop
aaa
retf
clc
out
xchg
rol
dec
fist
pop
ret
aad
mov
test
and
sar
xchg
in
mov
je
(bad)
imul
bswap
sbb
mov
idiv
sbb
inc
aam
les
push
test
push
aaa
adc
in
addr16
push
inc
outs
fwait
inc
movs
adc
pop
and
jmp
mov
addr16
arpl
gs
arpl
aam
push
jg
jg
add
imul
xchg
ret
mov
sub
js
mov
lahf
fisttp
or
out
push
rcl
mov
mov
popf
pop
inc
jb
loop
movs
adc
xlat
or
push
adc
imul
stos
sub
mov
test
sbb
fbld
xchg
data16
test
lods
inc
sahf
sub
inc
jmp
dec
cmp
pop
push
out
sub
dec
inc
push
adc
popa
adc
lods
out
mov
add
lahf
(bad)
loop
and
icebp
or
lods
dec
fstp
push
stos
add
xor
enter
out
fcmovnb
xor
mov
lods
sub
xchg
sub
add
les
dec
sub
xchg
sub
xor
dec
out
leave
mov
push
test
movs
push
idiv
and
push
jg
or
or
out
cld
repnz
jl
inc
pop
push
xor
sub
push
adc
lds
data16
(bad)
xor
movs
pop
mov
sbb
stc
jecxz
mov
add
add
lahf
or
lods
adc
cwde
cdq
lods
sub
pop
jns
mov
add
cld
loope
jp
xor
ret
call
icebp
pop
je
pop
cmp
cs
lfs
dec
jne
ss
push
xor
sti
jne
add
cs
xchg
outs
in
sub
xchg
sub
scas
out
pop
daa
fnstcw
pushf
push
pop
adc
sti
inc
mov
sub
fcmovne
and
sbb
add
mov
sbb
ins
inc
dec
jbe
xchg
xchg
stos
mov
push
and
cs
inc
ins
add
xchg
mov
sbb
jbe
pop
cmp
or
enter
jnp
loopne
mov
out
cwde
push
pop
mov
mov
outs
addr16
xchg
data16
int3
js
mov
mov
mov
cmp
mov
sbb
xor
movs
jns
outs
stos
mov
movs
jb
daa
imul
mov
cmp
aas
xchg
dec
les
add
push
sahf
xchg
pop
sti
arpl
dec
icebp
mov
jmp
mov
loop
jp
imul
rol
es
cdq
adc
xchg
cli
adc
mov
jle
or
int3
cmp
xchg
daa
push
jmp
test
cmps
data16
xor
xchg
pop
movs
xchg
stc
cmp
(bad)
clc
and
push
les
imul
test
add
mov
xchg
jnp
ret
push
aas
cwde
xchg
addr16
outs
xchg
adc
or
inc
fldcw
xor
xor
ins
in
ins
call
lds
sbb
call
adc
add
rcl
push
push
mov
ffree
mov
mov
jl
mov
aam
add
push
cld
or
ins
mov
fld
fs
int3
mov
jae
and
loop
add
inc
(bad)
cs
push
test
loop
and
mov
test
imul
and
ret
xlat
xchg
stc
or
sbb
jbe
test
retf
repnz
xchg
cdq
ret
je
dec
sbb
ret
lods
sub
in
mov
mov
cmp
outs
jmp
loop
stos
or
js
jnp
pop
mov
daa
inc
arpl
fimul
mov
inc
mov
in
xor
push
(bad)
outs
add
out
movs
xchg
cmp
xor
daa
outs
xchg
(bad)
(bad)
jg
int3
out
adc
leave
cmp
cmc
pusha
mov
dec
pusha
cmps
mov
mov
cli
sbb
sbb
and
stos
out
ja
jge
mov
dec
pop
xor
lods
ror
fisub
clc
in
push
mov
push
aam
adc
sbb
(bad)
pushf
fistp
mov
fbld
pop
stos
lods
mov
aad
dec
mov
in
outs
leave
dec
mov
popf
jns
and
lock
lock
lods
fsubr
data16
add
fs
sub
add
cld
pop
outs
dec
inc
imul
arpl
jae
stos
imul
sub
push
pop
popa
ds
jp
pop
sub
in
jge
adc
cmps
push
jp
nop
(bad)
push
mov
adc
jno
int
fbld
repnz
fwait
sub
jnp
dec
call
adc
pop
pop
std
jbe
jp
dec
add
fstp
add
stos
xlat
mov
dec
jne
pushf
test
sbb
not
jae
imul
push
or
add
pop
or
dec
mov
retf
aad
sub
xor
xchg
cs
cdq
mov
mov
cli
shl
push
mov
jmp
adc
xchg
push
xchg
movs
mov
mov
pop
sbb
lea
jecxz
movs
loope
sbb
popf
out
mov
loop
xchg
jg
push
xor
jp
cmc
pop
gs
cmc
pop
sub
xchg
data16
mov
push
jbe
mov
or
jbe
out
and
fwait
imul
jbe
cmps
pop
mov
mov
fs
and
fstp
xchg
call
daa
stc
push
jbe
mov
xchg
sbb
mov
shl
jle
lods
push
std
mov
jbe
in
pop
adc
cmps
cmp
jnp
es
xchg
fild
cdq
jmp
shl
cld
out
jne
imul
or
pusha
adc
bound
arpl
test
cmp
jmp
sar
ins
sbb
aas
movs
mov
inc
pop
mov
sbb
addr16
pop
(bad)
(bad)
sub
jo
push
xchg
fsub
loope
lock
push
adc
jmp
or
push
or
retf
inc
mov
mov
xchg
loop
xchg
ins
pop
shl
sbb
iret
xor
std
xchg
cmc
pop
push
add
add
out
sbb
xchg
mov
je
enter
add
lea
sub
sub
or
sbb
push
inc
and
xchg
mov
mov
push
test
lahf
add
js
jbe
sbb
leave
sbb
std
mov
popa
sub
xor
mov
jo
mov
sbb
(bad)
xor
dec
xor
mov
xor
pop
test
inc
popf
add
iret
int
sub
xchg
pop
(bad)
enter
mov
mov
xchg
sti
idiv
mov
xor
cmp
ja
jmp
sti
fprem
aam
inc
lahf
dec
dec
repz
iret
and
and
cdq
lahf
cmps
cmc
data16
inc
sub
popf
outs
outs
repz
xchg
push
addr16
stos
xchg
int3
out
movs
cmps
in
jne
imul
push
push
inc
(bad)
ds
das
jp
xlat
sbb
pop
pop
ret
cld
call
aam
fwait
mov
pop
xlat
call
fs
mov
je
in
and
cdq
or
mov
inc
xchg
retf
enter
cmp
aas
cld
and
scas
pop
and
dec
mov
jnp
mov
jecxz
std
cdq
clc
mov
jmp
loope
mov
sar
sub
mov
ret
aam
pop
dec
stc
mov
mov
cmp
movs
fisubr
dec
add
pop
mov
mov
push
ret
test
scas
mov
mov
sahf
in
jg
jno
imul
out
mov
and
jle
inc
nop
sbb
cmp
jo
ja
adc
dec
ds
scas
pop
pushf
add
cmp
xor
or
and
xor
(bad)
xchg
inc
outs
stos
mov
inc
and
jb
mov
setge
adc
or
(bad)
push
retf
in
cmps
mov
mov
xchg
cmp
or
in
in
pop
test
mov
ss
pop
repnz
jecxz
or
pop
sub
and
inc
push
mov
cld
xchg
outs
pop
pop
cmp
pushf
fidivr
or
cmp
rol
pop
add
xor
push
daa
fs
loop
jns
cmp
dec
jl
pusha
adc
dec
pop
pop
mov
cld
inc
add
or
mov
xchg
dec
fdiv
sbb
xchg
mov
out
ror
and
out
jns
inc
test
repnz
pop
sbb
repz
loope
std
dec
cmp
scas
js
add
rcr
popf
mov
dec
test
sbb
pop
dec
icebp
xchg
jl
xchg
and
or
cmp
add
ficomp
xor
std
frstor
ror
js
icebp
aam
int3
push
jno
adc
and
adc
sub
inc
test
lea
or
stos
xor
in
pop
mov
rcr
lea
fcom
outs
sbb
xchg
jmp
movs
sub
cmp
push
aaa
addr16
movs
mov
fmul
(bad)
call
into
xchg
add
test
ret
aad
cmps
jne
jmp
call
adc
icebp
jne
jnp
(bad)
(bad)
das
xor
aad
sub
adc
fnstcw
stos
jae
sub
push
xchg
cmp
test
mov
inc
addr16
(bad)
push
push
ds
adc
jae
lods
xor
std
loop
pushf
shl
add
inc
int3
pop
sbb
or
rcr
jae
mov
fdivrp
sub
mov
cwde
add
jae
jmp
mov
lods
or
clc
adc
ja
adc
out
inc
jne
cmp
ret
jnp
xor
xlat
add
rol
call
pop
push
fimul
lock
push
inc
imul
movs
pop
ins
xchg
fldenv
movs
js
add
stos
push
push
mov
div
popa
iret
fcomip
xor
push
loope
pop
sub
bound
inc
imul
std
aam
adc
mov
push
mov
in
jmp
ror
ja
inc
mov
mov
shl
add
cmc
lahf
mov
leave
fcompp
sahf
clc
daa
sahf
mov
push
pusha
mov
jae
xchg
jnp
ds
imul
cdq
dec
mov
scas
(bad)
dec
xchg
or
(bad)
mov
mov
mov
loope
icebp
out
jns
cs
add
out
and
retf
pop
xor
daa
in
jecxz
cmp
dec
cmps
and
shl
rcl
jbe
push
jmp
ret
imul
cmp
mov
loopne
fidiv
lods
inc
push
ins
mov
loop
sub
ret
mov
mov
jecxz
cmp
and
into
add
push
fwait
add
push
ins
mov
sahf
shl
leave
enter
dec
jp
movs
or
jb
inc
jns
mov
mov
test
and
mov
mov
jmp
dec
call
cmps
or
(bad)
js
push
mov
xlat
stos
scas
imul
xor
scas
lods
hlt
push
dec
sub
mov
xchg
xlat
cmp
xor
xor
pop
daa
sbb
stos
push
aaa
push
dec
fmul
pop
pop
cmc
scas
inc
jnp
push
mov
sahf
in
mov
jg
add
lds
aas
mov
cmc
aad
and
in
mov
pop
mov
add
adc
dec
test
daa
movs
fld
xchg
mov
mov
xor
jae
push
and
adc
or
or
leave
scas
stc
pushf
mov
sbb
gs
aas
test
pop
mov
aas
jmp
xchg
cmp
jg
ins
xchg
icebp
inc
push
adc
ins
mov
das
push
inc
in
iret
sbb
(bad)
ja
in
aam
jmp
inc
fild
jb
or
rcl
xchg
ja
or
adc
add
dec
adc
(bad)
stc
xchg
pop
scas
mov
ret
fwait
sub
dec
ficomp
pop
es
in
jle
and
jb
mov
jnp
cmp
mov
jmp
push
ror
sbb
xchg
mov
pop
ss
mov
and
aad
push
xchg
in
cmp
push
inc
sub
jg
pop
in
mov
xchg
imul
lods
jmp
outs
data16
or
inc
cmc
pusha
mov
cwde
js
inc
push
loope
xlat
push
dec
je
ror
sbb
dec
sbb
popf
adc
xor
inc
adc
mov
out
sbb
shl
pop
xor
xlat
clc
mov
in
pop
cmc
add
mov
jae
bound
or
inc
ret
mov
adc
jne
dec
repz
outs
push
sbb
test
xor
scas
sti
stos
add
fstp
xchg
jmp
pop
daa
dec
sbb
cld
call
or
sbb
xor
lds
pop
inc
(bad)
iret
mov
call
inc
adc
and
js
scas
dec
push
pop
cmps
push
cmp
cmps
jp
pop
xchg
sbb
jmp
or
push
mov
sbb
or
cmp
jo
push
xchg
pop
jbe
jae
xor
push
scas
in
ret
dec
xor
pushf
jmp
sub
sbb
out
pop
cmp
fwait
xchg
pop
hlt
mov
icebp
push
rcr
cmp
inc
(bad)
adc
js
mov
ret
enter
mov
outs
daa
sub
imul
out
adc
inc
mov
jg
dec
mov
popa
dec
ret
pusha
jecxz
sub
retf
push
inc
ds
push
pop
(bad)
(bad)
repnz
pop
inc
pushf
ds
xor
jns
(bad)
xchg
mov
fxch
mov
jg
lods
lods
jge
fst
sub
fcom
stc
test
jg
inc
inc
xchg
iret
adc
xchg
push
mov
inc
sbb
int
push
mov
push
push
(bad)
scas
inc
(bad)
adc
mov
icebp
or
outs
pop
dec
jl
jg
inc
mov
xor
imul
(bad)
sbb
pop
gs
in
xchg
movs
pop
pushf
pop
jo
in
push
xor
xor
fiadd
sbb
sahf
movs
cld
pop
in
add
pop
int3
ja
cmp
or
jae
imul
xchg
es
dec
or
jae
inc
in
pop
repz
dec
mov
push
aam
popf
add
in
out
sub
push
and
test
or
mov
in
dec
icebp
jmp
dec
pop
sub
cmp
lahf
mov
sub
add
add
mov
lds
jecxz
shl
add
aas
mov
inc
xor
inc
je
add
and
mov
jl
jp
xor
fisttp
int
and
dec
ins
inc
cmp
mov
in
je
aam
in
adc
pop
sbb
shl
mov
mov
mov
and
mov
cmp
jle
push
push
out
loope
out
mov
movs
inc
sub
pop
mov
lea
add
mov
mov
adc
(bad)
out
jmp
cmp
and
add
pop
mov
push
out
push
cmp
fist
mov
mov
shl
jno
popf
inc
repz
sub
fucom
mov
call
push
cmp
mov
inc
(bad)
xlat
test
into
or
(bad)
cli
int
je
in
bnd
popf
sub
cmp
pop
adc
in
pop
xchg
jecxz
sub
and
xchg
adc
out
mov
popf
jp
jge
sbb
mov
test
add
test
js
ficomp
in
push
(bad)
push
mov
loopne
popf
(bad)
cs
mov
pusha
repz
(bad)
out
aad
sub
mov
adc
cmps
popa
and
fwait
cmp
loopne
xchg
in
sbb
rcl
push
lock
pop
call
daa
sbb
dec
cld
xchg
sub
push
(bad)
pop
leave
bound
xlat
and
and
xor
xor
repz
dec
xchg
je
xor
call
xlat
mov
sbb
ja
push
ins
xchg
xor
xor
cmp
hlt
fmul
push
movs
stos
adc
jns
mov
inc
stos
add
sbb
xchg
mov
aaa
and
mov
xchg
loopne
jp
add
pop
cmp
shl
dec
add
and
adc
mov
loop
add
dec
xchg
fs
fidivr
inc
and
push
movs
cmp
enter
jae
(bad)
retf
pop
push
sub
add
mov
cld
js
cmp
mov
dec
mov
xchg
popf
ds
inc
push
call
adc
sbb
and
sbb
mov
imul
push
cld
xor
std
xlat
lods
lods
loopne
arpl
lahf
add
fldcw
or
cli
jecxz
fnstcw
cmp
fld
lds
jo
in
mov
mov
dec
push
inc
jo
test
xchg
fs
inc
mov
nop
aad
cmp
xor
test
mov
je
stos
and
addr16
call
bound
and
enter
push
pop
sub
ins
xor
mov
pop
add
test
and
jecxz
dec
pushf
add
sub
xor
loopne
mov
js
das
cmp
movs
and
sub
add
fistp
dec
outs
adc
mov
adc
mov
push
and
shl
loop
shl
retf
cmc
jae
xchg
les
xor
and
ret
xor
jns
sbb
mov
push
push
rcl
dec
mov
leave
adc
xor
gs
call
jge
mov
jle
push
add
sbb
and
sbb
mov
cmp
push
jno
mov
shl
cmp
mov
lea
mov
inc
sar
dec
sbb
(bad)
retf
aam
xlat
je
aas
jmp
rol
(bad)
ss
shl
repz
inc
sbb
cmc
inc
pop
(bad)
dec
ficom
jl
jmp
xchg
outs
and
push
pop
iret
cmp
sub
jle
out
ds
(bad)
(bad)
cmps
movs
pop
xbegin
xor
dec
mov
xchg
mov
inc
stos
into
sar
outs
lahf
dec
mov
fldenv
add
in
stos
push
inc
(bad)
sub
adc
xchg
mov
test
mov
pop
xchg
dec
cwde
and
sub
in
mov
iret
or
pop
pushf
push
jne
jmp
adc
loop
ret
fnsave
sbb
std
mov
fcmovnb
lea
cmp
push
test
sbb
ret
mov
jnp
loope
fabs
xchg
xchg
ret
inc
push
add
icebp
pop
rcl
xor
inc
out
jl
ss
pop
push
xchg
xchg
imul
mov
test
loope
and
aas
adc
sbb
and
ror
mov
jae
repz
sbb
iret
inc
adc
in
leave
loop
push
push
sbb
cmp
dec
test
pop
add
es
push
sub
lods
jle
sbb
sbb
lods
adc
hlt
mov
jmp
loopne
push
mov
sub
pusha
jae
cwde
in
pop
dec
call
int3
fcomp
(bad)
shr
cmp
add
sub
and
sti
and
ret
movs
mov
mov
data16
xchg
in
adc
add
mov
or
nop
sub
fld
test
nop
pop
jo
cmps
int3
dec
xor
repnz
lods
pop
idiv
xor
fidivr
rol
jne
stc
aaa
or
in
lea
jb
dec
sbb
retf
stc
fwait
xchg
int
xor
in
pop
dec
fstp
aaa
cmps
mov
hlt
ret
and
and
stos
sub
(bad)
mov
pop
mov
jp
test
dec
mov
add
mov
pusha
mov
es
out
push
mov
xchg
push
sbb
les
and
leave
ror
or
ja
pop
ret
mov
daa
lods
push
imul
inc
sbb
and
pushf
push
dec
xlat
mov
nop
sub
out
lahf
add
push
fsubr
mov
in
fist
adc
addr16
add
aad
mov
sub
cli
mov
mov
push
or
dec
sti
mov
push
add
xchg
arpl
(bad)
in
inc
mov
outs
jecxz
fidivr
mov
jno
mov
paddd
dec
push
int
xchg
ror
xchg
test
dec
popa
fiadd
cmp
push
inc
mov
rcr
sub
(bad)
pop
ret
adc
outs
xchg
pop
lods
ins
test
mov
scas
(bad)
fnstcw
jecxz
jb
push
sub
add
dec
mov
popa
xor
ret
test
mov
test
xchg
mov
mov
mov
push
neg
mov
sbb
cmp
mov
test
sbb
mov
sbb
jp
js
mul
hlt
mov
cmps
mov
out
mov
mov
and
jmp
mov
fmul
das
int
daa
frstor
outs
add
xor
or
lods
jo
hlt
adc
loopne
jg
(bad)
and
test
les
cmps
es
jp
movs
inc
xor
retf
(bad)
jnp
mov
sub
mov
xchg
mov
std
outs
pop
cmp
movs
pop
or
lock
xchg
mov
adc
gs
scas
sbb
aad
pop
lods
aad
cdq
inc
or
xor
jge
dec
sub
popf
lock
cs
gs
fs
shl
fnstsw
cld
sbb
popa
dec
ins
push
cli
adc
sar
mov
ss
movs
test
leave
jae
in
sub
leave
sahf
mov
cmp
fs
mov
push
cdq
clc
push
adc
pop
(bad)
enter
sbb
cmp
test
movs
pop
clc
mov
lahf
pop
shr
push
ins
cmp
xor
movs
icebp
movs
push
dec
imul
mov
or
pop
aaa
lods
pop
out
mov
retf
pandn
push
ins
mov
jbe
leave
xchg
mov
test
loop
into
leave
(bad)
cmp
rcr
push
push
sbb
(bad)
jp
or
fld
mov
or
gs
out
inc
sahf
jno
inc
dec
out
mov
shl
test
rol
stos
jp
mov
test
sub
loopne
mov
inc
jne
out
push
cmc
repz
imul
fistp
daa
pop
shl
pusha
jp
xor
or
fcomp
mov
arpl
(bad)
push
repz
dec
pop
js
push
sub
sub
scas
mov
scas
into
xchg
outs
and
mov
mov
xor
bound
in
loope
dec
loopne
mov
sar
out
push
add
aas
rcr
xchg
jg
pop
dec
stos
sbb
out
xchg
xchg
std
push
fucom
xor
nop
adc
test
lds
fs
pop
repz
aaa
aad
sbb
cmp
outs
jmp
movs
mov
push
in
jns
cmc
shl
or
mov
mov
repnz
push
dec
pop
sti
push
aad
jb
jmp
jbe
cli
dec
and
cmps
(bad)
fwait
inc
mov
jecxz
push
or
call
pop
lods
iret
lea
jecxz
nop
lea
movs
jae
mov
xchg
mov
daa
es
push
out
ds
mov
std
fild
cmp
iret
(bad)
std
mov
arpl
or
pop
mov
push
pop
in
cmp
ins
dec
cmp
pop
mov
popf
ret
push
cmp
adc
inc
xlat
int
sbb
outs
ja
push
sahf
dec
or
push
test
ja
call
jno
neg
js
xchg
jge
mov
sar
call
(bad)
mov
xchg
in
dec
mov
push
loope
jmp
sar
test
mov
add
ins
xor
dec
sbb
mov
push
sbb
(bad)
sbb
sub
fs
int3
mov
jmp
cmp
retf
push
(bad)
aam
dec
jnp
adc
mov
shl
js
pop
and
and
inc
xchg
and
jge
ficomp
adc
xchg
and
sub
add
mov
ss
mov
shl
jge
cwde
aad
std
jo
pop
repnz
rol
pop
and
push
ret
mov
loop
rol
or
xor
and
cmp
sbb
pushf
sbb
or
fcomi
and
test
test
rcr
mov
retf
mov
mov
test
pop
nop
add
xchg
add
popa
div
outs
sbb
fsub
leave
pop
stc
pop
ret
outs
cld
sbb
mov
xchg
jmp
es
out
add
dec
sbb
cmp
es
jb
das
outs
jae
dec
lahf
stc
cs
pop
push
add
mov
sar
sbb
pop
and
jmp
retf
popf
rcl
fild
test
jp
or
push
sti
pop
mov
push
adc
pop
pop
ficom
(bad)
push
fwait
sti
stc
cs
cli
and
inc
mov
sar
add
dec
pop
mov
sub
out
loope
ret
movs
pop
and
stc
lods
xor
ror
or
iret
mov
call
and
cli
xchg
stos
xor
cmp
xor
pushf
ret
or
int
add
pop
mov
cmp
mov
(bad)
fsub
or
loop
js
repz
mov
sbb
and
pop
sub
iret
and
mul
inc
test
push
call
test
fstp
xchg
mov
and
mov
add
lahf
std
mov
jl
out
sbb
stc
or
rcr
(bad)
fbstp
dec
fcom
push
sub
and
ja
stos
mov
jmp
(bad)
fdiv
jo
adc
clc
daa
loope
sti
repz
jg
or
dec
stos
mov
ss
push
(bad)
cmps
push
mov
pop
inc
push
cmp
cmps
push
in
or
test
jo
sub
fnstenv
(bad)
iret
loope
push
jmp
nop
pop
push
sub
xchg
mov
sbb
(bad)
and
imul
inc
mov
push
sbb
xchg
js
pop
mov
or
popa
bound
repz
ins
scas
inc
sahf
nop
or
sbb
sbb
shl
jmp
ins
adc
and
mov
mov
(bad)
cmps
jae
pop
jmp
(bad)
adc
lods
jle
fwait
ss
jmp
pop
(bad)
dec
icebp
dec
or
mov
shr
retf
and
outs
jae
pop
pop
jge
sbb
adc
xchg
stc
mov
je
jmp
call
lock
dec
pop
mov
ins
outs
test
fimul
dec
rol
sbb
xchg
cmps
out
gs
pop
mov
dec
mov
ror
sub
mov
or
jg
adc
push
xor
shl
popa
xlat
mov
pop
or
xchg
jmp
and
add
js
jae
lods
sub
pop
iret
add
sbb
(bad)
fmul
pop
mov
(bad)
outs
sar
popa
in
jle
mov
jns
in
lds
sbb
loope
mov
ret
js
fmul
sbb
sub
cdq
dec
lock
pushw
pop
imul
sub
inc
jmp
mov
and
pop
xchg
enter
mov
repnz
inc
mov
mov
mov
jg
mov
push
cmp
mov
pop
xlat
idiv
adc
popa
in
dec
setae
jmp
test
es
mov
jecxz
add
sub
mov
je
push
ins
pop
fisttp
dec
add
dec
mov
ret
out
stos
pop
inc
int3
sbb
dec
gs
neg
xchg
push
sub
inc
pop
sbb
div
retf
jl
xor
add
sub
xchg
inc
sbb
ja
xchg
fmul
pop
push
dec
cmc
jmp
mov
mov
adc
arpl
icebp
stos
test
pusha
arpl
push
mov
xchg
push
outs
sub
cdq
mov
mov
fstp
mov
jbe
and
and
sbb
or
jmp
xor
(bad)
in
pushf
scas
push
fidivr
iret
jbe
pop
mov
push
xchg
out
lods
and
xchg
fstp
fdivr
xor
dec
movs
pop
cli
xor
add
call
mov
hlt
mov
pop
adc
(bad)
sti
or
mov
fstp
push
ret
fwait
jnp
pushf
jmp
cmp
rol
scas
pop
jns
xchg
mov
pop
pop
popf
shl
cs
sub
fs
dec
add
fstp
cmp
sub
int
int3
mov
clc
(bad)
out
or
lds
push
je
int
mov
lea
push
mov
lahf
popa
loop
xchg
aam
xor
fnstenv
clc
xor
sub
push
jle
inc
loopne
adc
dec
arpl
xchg
mov
enter
jl
adc
xchg
pop
push
stos
outs
cmp
dec
push
(bad)
ds
mov
mov
jnp
cmp
scas
test
addr16
push
int3
(bad)
retf
test
adc
add
xor
popa
inc
cmps
mov
mov
or
call
sub
adc
xor
dec
fisub
imul
pop
adc
xor
mov
inc
in
daa
adc
das
aaa
outs
movs
add
lea
pop
mov
enter
push
imul
in
xrelease
jnp
movs
cld
dec
or
cmps
imul
mov
popa
jp
push
xchg
jae
mov
jb
mov
imul
imul
sub
mov
inc
cmp
push
mov
in
movs
mov
popf
push
movs
adc
jno
repnz
cdq
lods
xchg
pop
push
leave
ja
and
fist
and
pop
jle
jle
bound
xchg
adc
mov
mov
jmp
jmp
dec
(bad)
ror
mov
fisttp
das
pop
push
pop
xor
xor
add
pop
mov
and
add
adc
bound
jmp
rcl
mov
imul
pushf
(bad)
dec
adc
sub
scas
add
je
imul
or
pusha
pop
aaa
push
or
xor
das
jmp
inc
daa
leave
xor
call
je
add
jo
gs
sub
call
mov
out
cmp
into
dec
sub
sub
cmp
xchg
push
sbb
(bad)
jge
jno
cmp
imul
jmp
mov
jle
(bad)
ja
mov
xor
cmp
add
add
sar
fcomp
repnz
leave
in
xor
mov
popa
adc
shr
and
fldenv
fnstcw
icebp
jnp
stos
mov
inc
push
out
xor
sub
sub
or
dec
in
cmp
cmc
stos
pop
inc
pushf
in
cmp
pop
add
pop
jge
mov
adc
lods
sbb
mov
hlt
mov
(bad)
outs
jns
dec
jbe
gs
mov
outs
sbb
cs
dec
inc
out
jo
cmc
das
pop
mov
push
xchg
or
pop
pop
jge
rcl
pop
pop
jb
jb
mov
in
mov
into
test
inc
clc
jae
loop
pop
mov
addr16
push
(bad)
mov
sub
pushf
aas
in
cdq
sub
out
iret
xchg
xchg
push
das
mov
push
jne
dec
sub
mov
inc
or
and
and
fistp
(bad)
adc
imul
out
(bad)
push
ss
(bad)
call
call
outs
(bad)
scas
pop
mov
and
dec
xor
fwait
sub
add
mov
enter
mov
and
xchg
daa
fnstcw
rcr
rol
push
(bad)
call
sbb
icebp
push
mov
or
adc
jle
pop
stos
daa
push
sbb
jo
and
or
ficom
addr16
out
inc
fidiv
addr16
xor
mov
xlat
outs
popa
es
cmp
shl
ins
mov
int
clc
pusha
xchg
int3
push
sub
push
jecxz
lahf
xchg
jns
and
pop
xchg
and
jmp
sub
retf
cmp
inc
in
(bad)
int3
(bad)
stc
sub
cwde
cmp
or
and
popa
jo
xchg
retf
jmp
xor
and
retf
(bad)
(bad)
stc
je
adc
loope
add
test
mov
mov
std
xchg
out
(bad)
pop
pop
xor
push
test
mov
imul
retf
push
cli
dec
loop
inc
imul
ret
retf
ds
push
add
into
dec
mov
inc
dec
cmps
or
and
out
adc
or
loop
and
in
xchg
and
xor
retf
out
sub
into
out
push
cmp
shr
ficom
lahf
fisub
dec
xchg
mov
lock
mov
inc
cld
sub
jp
inc
add
clc
add
(bad)
pop
inc
outs
jle
into
cmp
jbe
add
and
cmp
icebp
and
push
fsubr
jbe
and
and
sbb
push
in
enter
movs
lds
ficom
shl
dec
jle
sahf
push
push
mov
mov
nop
dec
pop
rcl
mov
stc
loop
push
(bad)
cdq
mov
mov
shl
mov
mov
xchg
in
mov
ret
leave
cli
pop
xlat
jae
outs
lea
fld
sahf
jb
dec
adc
je
loope
sbb
mov
pop
out
je
mov
xchg
dec
mov
xchg
jmp
xchg
and
movs
adc
pop
ror
call
xchg
out
mov
pop
popf
mov
scas
push
mov
std
and
xchg
ins
bnd
movs
loope
sbb
pop
pop
pop
mov
jo
adc
out
add
add
stc
mov
mov
retf
(bad)
pusha
ins
jp
das
loopne
movs
jecxz
cmp
stos
or
into
test
dec
cmp
mov
inc
pop
add
fs
sbb
hlt
mov
(bad)
sub
sub
imul
mov
call
or
push
aas
and
jl
dec
push
jge
and
adc
mov
pusha
movs
imul
jnp
movs
call
mov
call
dec
xchg
mov
loope
jnp
jne
add
fst
push
loope
imul
ret
xchg
fisub
mov
jmp
stc
or
ins
jne
(bad)
jb
push
cmp
jg
mov
out
sbb
xchg
jae
sar
push
or
or
les
push
mov
cld
inc
test
rcr
pop
mov
mov
adc
jg
jp
xchg
xor
add
call
ret
adc
jae
sbb
dec
jge
add
scas
inc
dec
mov
stc
push
mov
repnz
mov
leave
outs
mov
test
ret
push
jl
cmp
cdq
(bad)
popa
adc
mov
mov
mov
fnstenv
xor
or
adc
movs
js
and
sti
mov
imul
cmps
adc
mov
rol
bsf
jp
jmp
mov
add
and
(bad)
bound
ins
cmp
aad
xchg
popa
popf
test
push
cld
jne
ds
inc
imul
clc
and
aad
and
xor
xchg
xchg
cs
call
int3
push
out
(bad)
sahf
cmps
(bad)
fxam
jne
cmc
sub
xchg
pop
jp
ins
dec
out
cmp
test
fld
or
ret
(bad)
jg
pop
cmp
push
daa
js
sub
and
sub
add
fwait
cmp
lahf
push
rol
cmp
sahf
repz
or
push
push
mov
fistp
or
fcomp
jg
imul
pop
fwait
icebp
adc
rcr
xchg
into
push
lock
daa
idiv
(bad)
inc
mul
adc
(bad)
aam
icebp
inc
pop
(bad)
loopne
and
dec
xor
into
aad
cmp
mov
push
jl
int
mov
sbb
in
nop
or
sub
f2xm1
movs
push
rcr
cmp
mov
test
les
add
inc
bound
jmp
(bad)
mov
or
pop
call
sbb
int
mov
int
imul
adc
sbb
ror
leave
and
push
int
data16
ret
int
and
cdq
ror
scas
mov
js
stos
shl
jecxz
or
xor
mov
sub
mov
xor
mov
inc
pop
ret
dec
das
retf
pop
fist
hlt
xchg
cmps
inc
mov
fdivr
push
mov
in
fdivr
stc
cmp
push
imul
mov
inc
pop
lods
cmp
inc
jnp
iret
(bad)
stc
not
arpl
adc
cmc
and
lods
mov
lock
clc
mov
add
fs
add
adc
fwait
dec
ror
mov
and
aas
and
cmp
(bad)
jmp
icebp
push
xchg
imul
je
jmp
push
xchg
push
lods
(bad)
fimul
fdiv
ja
mov
cmps
bswap
mov
fwait
ins
adc
dec
sub
scas
push
and
call
add
xchg
pushf
and
std
ss
inc
bound
jmp
lods
(bad)
and
mov
dec
std
push
daa
stos
loop
outs
cmp
outs
pop
out
xchg
pop
mov
jp
arpl
fs
outs
jo
fwait
inc
and
not
xor
jnp
inc
sub
pop
inc
addr16
cwde
jecxz
lea
cwde
xchg
je
cmp
fs
shl
outs
jno
push
dec
test
gs
cmp
jg
adc
int3
rol
jecxz
dec
ins
xchg
sub
sbb
fs
jmp
data16
mov
mov
sbb
mov
jae
leave
mov
push
ret
jmp
push
ficomp
das
(bad)
clc
or
and
jecxz
cdq
jmp
jb
jo
fstp
test
popa
shl
js
arpl
das
sub
lahf
div
ret
pop
cmp
stos
add
cmp
in
mov
es
call
jno
in
clc
stos
fld
or
mov
push
movs
les
sub
pop
push
ja
int
add
xchg
xchg
jmp
push
push
repz
mov
or
bound
std
inc
retf
test
rol
out
push
in
in
xchg
or
call
inc
cwde
dec
dec
mov
mov
lds
mov
jbe
add
and
dec
arpl
and
scas
or
xchg
add
push
aas
popf
cmp
(bad)
out
jno
mov
mov
test
lods
mov
js
fild
mov
push
(bad)
fld
adc
pop
xor
jge
pusha
push
mov
shr
mov
dec
jp
and
shl
adc
inc
enter
pop
jbe
cmc
sub
cmps
and
add
sub
cmp
mov
jp
ss
push
sbb
xor
icebp
push
ret
aas
out
stos
jns
(bad)
dec
xor
fbstp
(bad)
xchg
add
and
mov
or
or
mov
fwait
rcl
or
ficomp
loope
jle
ins
and
sub
popf
fisub
out
sub
sbb
push
jne
inc
cmps
hlt
js
sub
pushf
mov
or
pushf
leave
push
xor
test
data16
shr
test
inc
sar
das
push
fdivr
stos
push
neg
xchg
inc
push
(bad)
mov
push
inc
or
inc
stos
hlt
test
dec
inc
gs
ins
xchg
in
ds
mov
ret
in
arpl
adc
sub
dec
dec
out
dec
add
lahf
cmps
push
aaa
adc
jp
xor
jb
in
int3
xor
in
cmps
repnz
shl
(bad)
iret
mov
or
in
jecxz
jae
add
rol
lds
xor
jns
call
test
sbb
sbb
xchg
or
cmp
cmps
clts
inc
jbe
icebp
add
icebp
sub
mov
inc
hlt
inc
xchg
loop
sbb
add
cli
repnz
xchg
cmps
inc
xor
cmp
xor
sar
jp
lods
hlt
sbb
dec
push
mov
lahf
mov
(bad)
arpl
dec
add
gs
dec
ret
leave
and
bound
xlat
out
call
add
and
add
push
arpl
imul
inc
or
lods
retf
xchg
ins
cwde
adc
inc
outs
(bad)
dec
popf
sbb
or
es
stos
into
push
pop
push
mov
movs
jmp
jb
cmp
pop
and
cmp
jb
push
pop
xor
jmp
(bad)
pop
nop
call
bswap
mov
das
test
xor
jae
xchg
xor
test
scas
xor
push
neg
out
fist
loop
mov
(bad)
xchg
(bad)
mov
movs
daa
sbb
adc
pop
and
push
test
jecxz
push
shl
jp
jne
pop
cdq
sbb
pop
mul
xchg
mov
adc
ficom
inc
mov
cmc
scas
xchg
std
arpl
push
arpl
add
pop
cmp
add
out
xlat
pushf
aam
dec
mov
xor
retf
in
aad
cmp
sbb
ja
pushw
arpl
lock
cmps
inc
(bad)
clc
outs
adc
daa
int3
ds
out
xchg
ins
xchg
and
sti
mov
cli
(bad)
icebp
ret
fisubr
pop
adc
cmc
out
cmp
or
sbb
and
fisttp
(bad)
test
inc
rcl
push
lock
pop
cmps
stc
mov
jp
fist
iret
mov
ss
or
mov
ja
popa
clc
popf
cmps
add
inc
cdq
stos
les
xchg
mov
add
pusha
fld
mov
into
and
mov
cld
xchg
ja
dec
or
frstor
arpl
cmp
jl
inc
mov
imul
mov
mov
lods
addr16
mov
rol
popf
mov
jmp
test
rcr
sub
cdq
out
cmp
lods
fdivp
in
sbb
adc
add
outs
xor
pusha
push
cmp
mov
inc
and
mov
xchg
aam
gs
scas
ds
pop
add
arpl
ret
aas
fstp
mov
fadd
arpl
nop
inc
dec
pop
retf
mov
(bad)
fld
xchg
and
mov
shl
xchg
daa
leave
mov
daa
int
stos
fnstcw
arpl
xchg
pop
sbb
icebp
mov
fwait
jae
popf
fimul
mov
lds
ss
mov
outs
inc
das
pop
push
mov
sub
ret
cmp
into
lods
xchg
imul
sub
mov
jmp
mov
and
xchg
sahf
xlat
out
mov
(bad)
and
sbb
adc
repnz
push
xor
scas
mov
mov
mov
jmp
(bad)
lods
fstp
adc
or
jns
sub
je
cmp
dec
pop
xor
push
js
add
mov
push
cmp
pusha
xor
xchg
mov
gs
and
jmp
ins
mov
push
sbb
mov
xor
pop
fwait
and
xchg
xchg
xor
popf
(bad)
mov
add
pushaw
xchg
not
std
clc
hlt
cmc
(bad)
jb
sbb
ins
dec
das
dec
arpl
aaa
(bad)
(bad)
(bad)
hlt
mov
add
nop
mov
sub
mov
nop
mov
nop
mov
nop
mov
nop
nop
mov
jmp
add
add
add
add
add
add
add
and
add
add
add
add
div
test
out
pop
aam
aam
mov
mov
dec
stos
stos
stos
push
test
test
test
test
stos
stos
stos
push
mov
mov
ret
cmp
fcomp
es
add
cmc
cmc
or
(bad)
and
rol
mov
xchg
xchg
jl
jbe
jge
jbe
jg
jns
add
mov
jp
test
mov
movs
pop
(bad)
(bad)
les
loop
loop
div
test
add
add
jmp
enter
fwait
fs
jnp
jp
jb
xchg
mov
test
lock
les
dec
int3
mov
enter
shr
repnz
jle
mov
mov
int
xor
in
in
adc
add
add
loopne
push
mov
mov
add
mov
lea
mov
mov
rol
dec
iret
mov
(bad)
fstp
int3
(bad)
fnstsw
sar
fnstsw
sar
(bad)
sar
fmul
int
rol
enter
mov
(bad)
test
mov
mov
ret
xchg
mov
in
(bad)
fldenv
jbe
je
cmp
test
mov
dec
(bad)
test
jmp
loopne
jmp
in
jmp
out
(bad)
mov
fs
jmp
(bad)
jmp
fstp
(bad)
fcom
sar
int3
(bad)
mov
movs
mov
jmp
cmps
cmps
cmps
push
fstp
frstor
loop
loop
movs
movs
movs
pop
ja
jae
lea
call
mov
lds
jmp
(bad)
jmp
out
(bad)
jmp
leave
mov
jmp
adc
cmp
jmp
loopne
jmp
(bad)
call
rcl
dec
mov
jmp
xor
test
test
in
in
in
in
in
adc
jne
xchg
test
in
xchg
addr16
mov
jnp
leave
mov
mov
(bad)
enter
(bad)
(bad)
jmp
enter
mov
call
xchg
add
outs
push
or
inc
inc
cmp
jmp
(bad)
(bad)
fstp
(bad)
rcl
sar
(bad)
leave
(bad)
mov
jmp
lea
xchg
mov
in
in
in
adc
add
add
into
into
xor
outs
imul
mov
mov
imul
rol
test
jmp
fmul
jmp
loop
dec
retf
test
cmp
jmp
add
call
add
lock
add
ja
push
push
ss
(bad)
fstp
(bad)
(bad)
(bad)
dec
ror
(bad)
mov
mov
call
mov
lea
into
xor
add
add
jecxz
sbb
push
mov
jnp
cld
test
pop
(bad)
mov
mov
scas
(bad)
fst
mov
jmp
loope
inc
mov
(bad)
jmp
mov
(bad)
jmp
push
(bad)
dec
add
mov
call
(bad)
call
fcmovbe
dec
aad
inc
into
(bad)
jmp
scas
lahf
call
jle
aam
mov
jecxz
mov
add
xchg
scas
lahf
(bad)
inc
scas
jge
sar
(bad)
(bad)
mov
loope
mov
jmp
fstp
(bad)
call
movs
(bad)
dec
xchg
(bad)
push
xor
sbb
(bad)
(bad)
(bad)
(bad)
fcmovu
(bad)
rcr
xlat
dec
aam
(bad)
mov
(bad)
mov
call
xchg
mov
lds
add
add
jmp
jmp
test
test
jb
ins
mov
outs
push
cld
mov
inc
mov
call
rcl
loopne
scas
jmp
aam
jmp
fadd
jmp
(bad)
(bad)
mov
fnstsw
(bad)
inc
xchg
(bad)
push
dec
fstp
call
fcmovu
dec
xlat
sar
rcl
push
mov
jmp
xchg
ins
call
cmps
cmps
pop
jmp
and
bound
addr16
inc
cmps
arpl
mov
rcl
int
jmp
shl
loop
ret
(bad)
mov
fidivr
inc
xchg
(bad)
push
sub
test
dec
(bad)
sar
rcl
push
int3
ret
retf
movs
ret
mov
cwde
jae
cdq
sbb
(bad)
fldenv
cmp
out
data16
inc
test
jge
mov
(bad)
call
shr
jmp
aam
push
shr
call
scas
jne
mov
jmp
xlat
sar
mov
rol
jmp
int3
mov
jmp
mov
call
sbb
jle
lods
(bad)
(bad)
les
(bad)
(bad)
les
jge
js
jo
pop
mul
pop
inc
mov
mov
mov
xchg
(bad)
mov
shl
(bad)
fcmovbe
mov
loope
mov
fcmovne
lods
(bad)
(bad)
mov
xlat
shr
dec
(bad)
mov
rol
(bad)
mov
ror
jmp
mov
jmp
mov
cdq
jmp
mov
pop
call
mov
dec
rol
ds
jne
jo
data16
push
shl
retf
mov
aad
(bad)
mov
fisubr
iret
fnsave
(bad)
(bad)
mov
(bad)
fnop
mov
rcl
mov
rol
push
retf
test
mov
test
mov
movs
ret
test
jmp
xchg
jmp
mov
lahf
movs
ja
pushf
xchg
xchg
outs
dec
in
lods
lods
push
mov
jo
mov
push
lds
jmp
(bad)
scas
push
fdivr
enter
int3
loopne
call
loope
call
loopne
call
fcmovb
dec
fnstcw
jmp
retf
movs
jmp
mov
xchg
jmp
mov
mov
cmps
mov
jmp
lahf
imul
cdq
push
test
mov
jo
mov
addr16
jle
mov
mov
sahf
rcl
push
fld
inc
fnsave
call
fsubr
jmp
fsub
jmp
mov
jmp
stos
xchg
mov
lods
test
mov
stos
jle
mov
movs
jbe
mov
xchg
popa
call
arpl
push
ret
cmp
jb
lahf
jo
push
(bad)
jp
ins
dec
test
stos
rcl
inc
fsubr
call
fdiv
(bad)
fstp
test
(bad)
cmps
(bad)
fcom
cmps
dec
xlat
mov
call
scas
xchg
call
movs
xchg
mov
cmps
test
mov
mov
outs
jmp
xchg
pop
call
gs
call
enter
xor
jno
pop
mul
push
(bad)
jnp
pop
dec
(bad)
jnp
mov
xchg
inc
(bad)
cmps
dec
(bad)
jmp
ffreep
jmp
fnstsw
(bad)
fcmovnu
scas
call
fldcw
(bad)
mov
mov
jmp
mov
jmp
cmps
mov
mov
mov
ja
mov
xchg
arpl
popf
xchg
jno
call
mov
dec
rcl
shr
mov
pop
lock
call
retf
mov
ffreep
(bad)
fucom
aam
jecxz
fcos
loop
aam
fstp
leave
(bad)
fcmovnbe
(bad)
aad
dec
sar
dec
iret
mov
inc
int3
mov
push
mov
lahf
mov
call
stos
fwait
call
cdq
jge
xchg
mov
xchg
js
dec
ret
ret
cmp
jecxz
sbb
fs
jne
cmp
(bad)
xchg
call
aad
dec
in
jmp
in
call
(bad)
jmp
jmp
jmp
(bad)
fsub
(bad)
aam
(bad)
shl
(bad)
shl
(bad)
out
call
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
call
lock
fsubr
inc
shr
push
(bad)
loopne
lea
fwait
call
icebp
or
jns
jae
jp
cmp
lds
(bad)
mov
in
out
call
div
push
div
(bad)
out
hlt
repz
jmp
jmp
aad
(bad)
aam
(bad)
call
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
call
fdiv
inc
shr
push
mov
stos
in
movs
cmps
test
jmp
add
aad
sub
addr16
jp
call
fmul
jmp
lock
into
(bad)
jmp
iret
xlat
call
jmp
movs
mov
dec
jbe
push
bound
int
aam
jge
lahf
dec
jge
dec
lock
jmp
in
jmp
mov
call
add
add
add
add
in
in
adc
push
xchg
cld
mov
mov
mov
int
out
out
dec
shr
dec
jbe
push
cmp
call
jg
push
scas
call
xor
call
cmp
aam
inc
push
cwde
jmp
call
push
lock
out
out
lock
fucom
jmp
(bad)
jnp
lods
repz
mov
jecxz
fstp
frstor
popf
fwait
pushf
push
mov
ret
(bad)
fucomip
call
dec
int
mov
scas
(bad)
mov
mov
aad
sahf
stos
(bad)
(bad)
mov
push
dec
into
in
test
cmps
fcos
xchg
iret
push
lock
in
in
in
(bad)
(bad)
loopne
xchg
test
xchg
stos
int
into
xor
div
or
add
add
repz
int3
int3
xor
jl
jmp
into
dec
fucom
jmp
mov
jmp
push
fdivr
ret
jmp
shl
call
fsubr
call
ret
jecxz
mov
xchg
sar
out
out
out
jmp
jecxz
jmp
lea
dec
in
in
in
adc
add
add
in
in
adc
js
mov
mov
int3
dec
(bad)
jmp
jmp
in
jmp
call
jmp
in
(bad)
(bad)
jmp
in
(bad)
in
out
lock
call
in
jmp
jecxz
(bad)
call
in
(bad)
mov
lea
imul
in
call
mov
test
xchg
ret
inc
loop
(bad)
fsubr
jecxz
in
jmp
out
in
(bad)
jmp
(bad)
out
lock
icebp
icebp
push
icebp
icebp
push
icebp
lock
out
out
out
(bad)
in
in
in
jmp
jecxz
push
xchg
popf
aam
cmps
test
and
add
add
in
in
adc
int3
int3
xor
imul
std
cdq
int3
mov
inc
in
call
call
jecxz
fsubr
in
jmp
in
(bad)
out
out
out
(bad)
in
in
in
jmp
out
(bad)
(bad)
(bad)
mov
mov
cwde
cmps
mov
in
sbb
add
add
hlt
hlt
or
(bad)
and
xchg
enter
out
jb
movs
cli
jge
scas
std
xchg
mov
(bad)
fwait
rol
dec
(bad)
(bad)
rcl
fsin
(bad)
retf
stos
mov
cli
mov
xchg
mov
rcl
shl
out
out
out
adc
add
add
in
in
adc
(bad)
(bad)
sub
xchg
fwait
jg
jle
scas
outs
jl
retf
ins
jg
fsubr
pushf
fnsave
mov
fld
mov
mov
(bad)
enter
in
sbb
add
add
repnz
in
sbb
aam
sub
enter
ret
mov
mov
sar
(bad)
les
int3
int3
int3
xor
(bad)
and
in
in
adc
add
add
add
inc
add
add
aas
clc
add
pop
lock
pavgb
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
inc
add
inc
add
dec
cmps
scas
cmp
add
add
add
add
add
mov
add
pop
xchg
add
adc
add
daa
pop
add
and
add
mov
add
add
pop
and
add
pop
pop
add
xlat
outs
add
add
push
add
and
add
and
add
and
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
scas
and
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
xchg
add
mov
add
add
add
add
test
add
test
add
les
add
xchg
add
int3
xchg
add
lock
add
aam
add
adc
add
xor
add
push
xchg
add
in
xchg
add
jl
add
hlt
xchg
add
mov
xchg
add
mov
xchg
add
imul
gs
xor
cs
ins
add
add
add
dec
outs
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
ins
ins
outs
arpl
add
add
jb
jne
ins
inc
jb
add
add
gs
xor
fs
ins
add
add
inc
gs
gs
outs
popa
jb
push
jns
add
add
jbe
jo
xor
cs
ins
add
add
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
outs
ins
gs
jne
xor
cs
ins
add
add
add
push
jns
inc
jb
gs
je
imul
add
jb
fs
ins
add
add
gs
popa
outs
arpl
inc
outs
outs
outs
arpl
outs
inc
add
add
add
imul
ins
add
add
add
jb
popa
ins
imul
arpl
add
gs
ins
xor
cs
ins
add
add
gs
ins
inc
js
arpl
gs
js
add
add
xor
cs
ins
add
add
add
push
outs
imul
imul
ja
outs
imul
ins
add
add
je
jb
gs
gs
outs
outs
outs
arpl
push
je
je
add
add
add
dec
dec
dec
dec
cs
dec
dec
add
add
push
push
dec
inc
outs
ja
ins
outs
popa
fs
outs
inc
imul
ja
outs
arpl
xor
fs
ins
add
add
inc
inc
ins
gs
outs
jne
add
add
outs
gs
jo
xor
cs
ins
add
add
add
dec
gs
gs
outs
je
push
dec
inc
add
je
add
add
add
add
add
int3
fnsave
outs
pushw
add
(bad)
sub
in
pop
retf
test
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rol
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
(bad)
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
push
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adc
loope
add
or
xchg
jae
and
or
xor
or
loopne
xchg
ds
out
or
or
cmp
(bad)
jo
test
sub
(bad)
xor
sub
cdq
sub
dec
aam
jmp
inc
fmul
add
inc
add
imul
add
pop
lea
lods
or
ins
lahf
in
inc
lock
push
call
or
sub
hlt
shl
nop
push
push
jne
and
addr16
mov
and
xchg
cmps
inc
pop
jne
sbb
inc
out
mov
or
repz
fadd
dec
int
xchg
adc
(bad)
mov
fmul
adc
ds
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
(bad)
lock
pushf
outs
sub
xor
lock
adc
in
and
add
mov
(bad)
cmp
cmps
or
inc
jmp
xor
pop
ins
sti
add
mov
cmp
push
mov
rol
jmp
push
cmps
iret
lea
xchg
mov
lods
inc
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
sub
mov
clc
xor
call
(bad)
cmps
push
ret
mov
movs
mov
mov
push
inc
push
(bad)
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movs
hlt
add
popf
ror
mov
pop
or
mov
lea
or
jmp
cwde
sub
popf
jno
sub
jo
lods
adc
repnz
adc
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
(bad)
push
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outs
and
repnz
pop
jecxz
and
ins
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
(bad)
in
test
leave
or
es
shl
int
push
sti
fcom
and
add
idiv
and
sbb
xor
xchg
jmp
repz
mov
ins
movs
cs
mov
sbb
add
cli
xchg
jmp
out
inc
mov
and
outs
addr16
sbb
out
ins
add
jb
js
std
sub
cmp
push
adc
outs
dec
xchg
mov
mov
and
shl
mov
jne
sub
out
nop
jo
fimul
mov
shl
retf
stc
es
adc
add
ret
jge
pop
(bad)
sti
popa
add
(bad)
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adc
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
(bad)
push
push
jno
hlt
add
fidiv
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
sub
xor
inc
ret
call
out
jne
mov
inc
add
cdq
push
pop
div
cmp
pop
jl
push
mov
push
xchg
cdq
mul
jge
mov
in
movs
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xor
or
call
add
or
pop
mov
cmp
push
dec
rcl
jo
inc
add
pop
xchg
add
add
movs
or
call
sar
gs
inc
adc
sub
xor
push
cmp
xor
or
rcr
push
cmp
sbb
or
adc
or
pop
or
or
adc
adc
lods
sbb
inc
push
add
sbb
out
pop
add
adc
lds
add
add
dec
loope
clc
ret
push
push
loop
add
popa
adc
mov
add
cmp
lock
fimul
push
adc
add
lea
lods
stos
add
cmp
add
jae
test
mov
add
inc
push
cli
rep
fistp
jb
xor
add
(bad)
jge
call
or
call
xor
mov
sbb
inc
xchg
jecxz
push
inc
xchg
xchg
aaa
and
mov
push
test
jb
sbb
ss
ror
inc
mov
push
dec
pop
nop
dec
add
xor
leave
xor
or
inc
inc
push
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
mov
push
sbb
mov
aas
pop
mov
sbb
cmp
push
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficom
and
push
dec
inc
mov
mov
add
pop
int
and
inc
and
repnz
dec
(bad)
ds
xor
sbb
dec
cmps
cmp
adc
add
(bad)
pop
pop
pop
pop
ret
les
and
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
aad
push
mov
sbb
xchg
sti
sbb
push
push
neg
ret
push
enter
xor
pop
add
add
in
and
leave
push
add
int
rcr
adc
bswap
ret
or
hlt
dec
cdq
or
je
push
inc
call
sbb
xchg
leave
add
je
les
dec
(bad)
xor
push
jmp
cmp
mov
clc
movzx
test
jge
pop
xchg
xchg
shr
xor
jne
cmp
iret
jge
dec
push
inc
or
add
cmp
je
dec
mov
jne
(bad)
sub
ret
shr
or
rcl
les
pushf
cmp
add
out
or
enter
mov
outs
cmp
stos
xor
and
push
cdq
pop
test
js
loopne
pop
push
mov
adc
add
in
add
jbe
pop
push
repnz
sbb
pusha
aas
push
call
inc
pop
aas
mov
retf
adc
in
pop
xchg
xchg
dec
jae
xor
dec
or
loop
push
add
movs
pop
sub
(bad)
jnp
xchg
cli
movs
jnp
push
rcr
stos
clc
retf
stos
pop
cmps
xchg
cmp
sar
ret
or
mov
adc
push
call
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
mov
bound
mov
hlt
push
xchg
dec
or
dec
in
xor
push
into
push
in
iret
rol
enter
xchg
mov
out
adc
(bad)
(bad)
(bad)
adc
retf
sbb
popa
jne
stc
jmp
inc
ficomp
add
adc
loopne
sub
test
(bad)
pushf
pushf
fimul
mov
or
and
in
sbb
(bad)
pop
fwait
movs
mov
cwde
pop
mov
and
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
jae
ins
jae
(bad)
retf
lods
retf
in
(bad)
sbb
or
sub
test
test
xchg
out
bound
retf
out
mov
aas
dec
inc
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
mov
push
adc
rcl
add
(bad)
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmps
(bad)
data16
pop
push
inc
sbb
inc
pop
pop
shr
ins
outs
dec
popa
mov
pop
mov
inc
pushf
lods
jb
mov
stos
outs
div
mov
icebp
mov
movs
call
dec
or
adc
repz
ret
dec
ins
xchg
sbb
sbb
ror
inc
cmp
inc
dec
adc
jl
add
add
mov
pusha
loope
push
lea
mov
dec
add
sti
push
add
add
mov
sbb
sbb
test
test
dec
xor
das
and
cmps
xchg
or
and
dec
hlt
scas
mov
xchg
jnp
mov
mov
lock
sub
dec
ja
inc
jo
ins
imul
outs
and
cmp
cmp
and
jne
fsubr
pop
push
push
arpl
push
xor
outs
iret
je
bound
sti
imul
sbb
and
frstor
jmp
dec
push
daa
cmp
ins
dec
jne
jae
xor
jbe
icebp
in
test
js
push
ja
pop
js
data16
imul
fsubr
js
imul
pusha
shr
outs
fs
sti
or
inc
stc
je
jmp
orps
je
mov
arpl
call
stos
mov
cdq
cmp
or
adc
cmp
dec
xor
dec
pushf
sbb
movs
sbb
add
je
and
jl
sub
mov
xor
movs
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
or
add
mov
add
lods
xchg
add
add
inc
add
xchg
add
mov
lea
mov
mov
mov
mov
add
sub
mov
xor
ret
mov
pop
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
push
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
inc
add
inc
add
add
adc
add
add
add
add
or
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
adc
adc
add
and
xchg
add
add
add
or
add
add
add
xchg
add
std
add
add
add
add
add
xchg
add
add
add
lldt
add
add
add
xchg
add
std
add
add
add
add
add
add
in
add
cli
add
add
add
add
add
add
in
xchg
add
test
add
add
add
add
add
hlt
xchg
add
std
add
add
add
add
add
add
cld
xchg
add
std
add
add
add
add
add
add
add
add
cmc
add
add
dec
outs
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
ins
ins
outs
arpl
jb
jne
ins
inc
jb
gs
gs
gs
outs
popa
jb
push
jns
gs
gs
jne
jb
push
popa
ins
jne
inc
js
push
jns
inc
jb
gs
je
imul
inc
popa
outs
arpl
inc
outs
outs
outs
arpl
outs
inc
push
outs
jb
popa
ins
imul
arpl
gs
ins
inc
js
arpl
gs
js
inc
outs
push
outs
imul
imul
jb
gs
gs
outs
outs
outs
arpl
push
je
je
push
push
dec
inc
outs
ja
ins
outs
popa
fs
outs
inc
imul
ins
gs
outs
jne
dec
gs
gs
outs
je
push
dec
inc
