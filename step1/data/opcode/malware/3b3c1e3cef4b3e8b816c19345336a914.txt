arpl
idiv
and
inc
bsf
fnstcw
adc
test
loope
icebp
cmps
pop
or
xor
xor
aaa
enter
and
movs
fmul
sub
jne
ins
fdivr
in
xchg
out
test
jns
fcmovu
inc
push
or
cmc
ja
and
jno
mov
xchg
(bad)
cmps
das
push
sub
fisttp
cwde
outs
pop
mov
es
hlt
mov
cmps
xlat
scas
adc
in
mov
mov
(bad)
stos
out
mov
and
fucomi
out
mov
xchg
int
jmp
popf
out
jge
shr
fisttp
jno
cmp
pop
rol
xor
xchg
retf
leave
jmp
sar
or
sub
cmp
retf
mov
xor
xchg
ret
dec
out
xchg
mov
dec
(bad)
out
dec
outs
dec
pop
popa
xor
xchg
pushf
mov
cmp
dec
push
cmps
je
add
aam
bound
add
(bad)
dec
jg
ss
dec
inc
push
out
retf
scas
add
addr16
bound
or
pop
lahf
or
fcmovb
std
mov
mov
xchg
push
or
inc
xor
fstp
bound
ret
inc
xchg
sub
pop
arpl
(bad)
(bad)
mov
sti
js
push
or
ds
sahf
popf
stc
inc
ror
fdiv
and
ins
pop
pop
xor
xchg
dec
cmp
mov
popf
pop
iret
test
test
jmp
add
push
and
(bad)
jecxz
mov
ret
(bad)
imul
push
ja
mov
mov
or
xchg
loope
jno
in
mov
adc
fwait
xchg
pop
xchg
scas
inc
mov
jmp
cld
mov
adc
sub
arpl
leave
popa
gs
cwde
(bad)
jg
mov
outs
push
iret
scas
cld
in
outs
std
fwait
jp
cmps
fcomp
add
dec
addr16
lock
add
xor
gs
repnz
rol
xchg
dec
fst
jg
outs
out
dec
mov
loope
fistp
ss
in
mov
outs
jge
mov
shr
hlt
jp
jae
(bad)
(bad)
lea
mov
cdq
out
pop
or
out
cmp
push
ss
test
adc
sbb
dec
cld
nop
cld
shl
lock
or
test
shl
ret
xor
test
dec
out
das
pop
pop
cmps
sbb
out
fnstsw
fadd
push
popf
icebp
stc
(bad)
push
xor
and
mov
pop
repz
push
aaa
mov
(bad)
nop
inc
jl
push
lods
adc
jae
scas
ss
add
mov
(bad)
(bad)
inc
fistp
imul
adc
(bad)
sbb
cli
aas
ins
ins
arpl
sbb
and
xchg
movs
pop
pop
(bad)
jb
mul
jecxz
nop
xor
sub
(bad)
push
xchg
in
(bad)
cmp
and
mov
mov
dec
mov
cmps
(bad)
sub
cmp
mov
cmps
mov
jg
imul
xchg
xor
add
dec
iret
or
add
xchg
mov
xchg
or
push
jb
xor
cmp
scas
xlat
xor
push
mov
dec
mov
xor
push
push
sbb
jbe
push
sbb
xchg
cs
cmp
mov
pop
pop
mov
cli
xchg
test
in
push
lea
mov
xchg
push
jbe
xchg
arpl
cwde
xor
enter
pop
push
push
mov
and
bound
mov
push
sti
mov
das
add
or
cmps
lods
dec
icebp
test
sub
(bad)
xor
pop
dec
and
popf
jne
rcr
sub
pop
push
sti
xor
cmp
clc
mov
cld
add
mov
mov
sub
xchg
fwait
movs
pop
js
enter
add
add
movs
addr16
out
add
test
xchg
push
scas
inc
mov
mov
test
mov
in
jl
das
movs
mov
sbb
sar
mov
xchg
ja
in
sar
test
sbb
sar
test
mov
push
pushf
jmp
add
sbb
jp
jmp
pop
xlat
data16
mov
dec
lods
inc
mov
hlt
loopne
mov
inc
add
pop
adc
cmp
mov
dec
mov
shl
mov
repz
test
fnstsw
movs
addr16
pop
or
daa
xchg
sub
ret
test
cmp
add
jmp
dec
or
jmp
add
loopne
das
bnd
xlat
nop
pop
pop
pop
(bad)
and
sbb
cmp
jmp
scas
aas
and
adc
mov
aam
pop
jge
push
and
xor
pop
ret
lock
add
push
push
bnd
aas
inc
xor
repz
mov
out
push
push
jl
add
es
sub
cmps
cmp
aad
bound
mov
aaa
fwait
and
rcl
(bad)
mov
cmc
mov
adc
xchg
mov
sub
jo
(bad)
add
mov
dec
cmp
stos
in
push
das
cdq
push
mov
mov
jmp
xchg
jo
test
shl
sbb
sub
mov
and
xchg
mov
xor
test
pop
aas
add
xchg
jb
push
iret
test
mov
(bad)
icebp
pop
lods
fldenv
mov
bound
cmps
push
and
cmp
push
and
ins
adc
test
cmps
add
or
dec
xlat
cmp
dec
in
push
mov
sbb
mov
pop
jecxz
mov
xlat
or
iret
ror
outs
sbb
test
cs
pop
stos
jle
std
dec
mov
add
xor
dec
inc
cmc
xchg
imul
xlat
lods
inc
pop
ds
stos
iret
pop
shr
mov
ret
jmp
pop
xchg
ss
(bad)
cdq
mov
adc
xchg
xor
sti
cmp
leave
pop
fsub
mov
ds
imul
push
ins
xchg
outs
scas
mov
(bad)
jl
jecxz
dec
adc
xchg
(bad)
shl
add
ja
sub
add
cmp
ret
stos
repnz
stos
xchg
mov
dec
pop
pop
lea
push
dec
ret
mov
push
movs
adc
into
std
cmp
nop
cmp
shr
lock
and
jbe
fstp
or
and
dec
sub
or
jmp
mov
mov
mov
xchg
mov
xor
leave
jae
or
cld
jle
xchg
clc
scas
in
inc
js
sub
jmp
repnz
sub
sub
sti
fst
adc
xor
mov
cmc
lock
pusha
enter
(bad)
ror
shl
ret
outs
inc
cdq
addr16
fisttp
cmp
add
lock
xchg
and
or
pop
xor
mov
mov
jno
adc
or
add
test
cmp
xor
pop
push
sbb
lods
call
jle
xor
repnz
sti
push
fistp
bound
mov
push
adc
xor
or
xchg
push
out
pop
outs
xchg
mov
sub
mov
dec
adc
out
in
inc
and
push
das
popa
sub
push
imul
rcr
fmul
push
pop
push
jnp
cmps
pop
inc
add
push
in
inc
nop
xchg
mov
sbb
out
jae
and
adc
push
mov
mov
call
sub
mov
lds
jbe
push
pusha
mov
ins
xlat
mov
in
in
icebp
retf
repz
out
xor
mov
scas
xchg
gs
lock
pop
pop
xchg
push
das
in
fisttp
int
nop
cmp
mov
jecxz
xchg
int3
xlat
push
and
into
mov
enter
mov
mov
and
sbb
add
push
and
cmp
inc
outs
and
inc
mov
sbb
cwde
ret
pop
jge
jae
sub
mov
pop
push
inc
mov
xchg
outs
push
gs
mov
icebp
mov
scas
sahf
push
xor
inc
xor
lock
sbb
dec
pop
cli
mov
enter
xor
jp
loopne
push
cdq
sar
idiv
popf
test
sbb
dec
add
dec
push
lahf
adc
xor
in
sub
icebp
out
mov
add
mov
sbb
jp
nop
rol
adc
pop
and
test
test
in
inc
pusha
leave
int
mov
xchg
xor
test
mov
xchg
push
test
adc
jmp
sbb
mov
xchg
retf
pop
in
sub
in
mov
inc
dec
xchg
ins
mov
ja
loopne
jl
jge
sbb
fcom
aad
add
push
jge
pop
jne
or
loopne
(bad)
adc
cmovs
jl
or
sti
test
or
fidiv
or
mov
adc
leave
add
enter
mov
mov
icebp
aam
rcl
(bad)
ins
sub
cwde
daa
push
jo
das
add
adc
scas
add
sbb
jp
rol
sahf
lahf
nop
jge
in
fwait
add
jl
(bad)
icebp
and
cmp
sub
mov
mov
sahf
retf
jo
mov
cs
aas
hlt
mov
sub
or
jne
jae
dec
enter
mov
pop
cmp
(bad)
jecxz
cmc
cs
xchg
call
outs
fsub
adc
leave
movs
jne
std
cmc
push
(bad)
pushf
push
add
sbb
adc
ficomp
in
cdq
sub
(bad)
in
adc
sar
sahf
and
sbb
push
xor
std
paddusb
out
imul
into
jle
push
inc
call
imul
ss
cli
mov
adc
fcomp
pop
or
and
cdq
jae
jmp
cmps
sub
jmp
test
(bad)
xchg
add
push
mov
push
sbb
xchg
xor
mov
imul
cwde
icebp
adc
fdivr
frstor
xor
add
mov
iret
mov
pop
mov
push
lods
test
fistp
ret
add
popf
das
faddp
or
movs
cmps
or
pop
(bad)
jmp
bound
inc
jg
xor
add
push
ret
repz
mov
mov
and
test
mov
inc
repnz
adc
pusha
lock
mov
in
sub
in
inc
and
jo
cmp
retf
mov
add
icebp
int3
lods
imul
fcomp
pop
retf
mov
mov
xor
sub
cdq
sbb
imul
fcomp
lods
mov
out
push
xor
popa
mov
dec
fbstp
fdiv
pop
not
clc
mov
imul
(bad)
add
jge
mov
inc
icebp
mov
aad
xchg
xchg
pop
shl
(bad)
mov
pop
cmc
jae
daa
rol
in
call
xchg
daa
push
push
out
cld
test
mov
rol
inc
and
push
lahf
xchg
cmp
pop
pop
push
mov
icebp
mov
xor
push
jnp
sub
mov
xchg
add
test
pop
and
lods
xor
fdivr
imul
dec
fmul
pop
aas
icebp
dec
fimul
leave
sbb
(bad)
cmps
push
lahf
xchg
push
mov
mov
iret
jmp
xor
fcmovne
xor
ins
loop
fucomi
in
cmp
mov
adc
shl
xor
cdq
call
scas
in
pop
enter
les
inc
cmp
sahf
sbb
sub
mov
and
pop
xchg
sbb
mov
cmps
or
movzx
push
fcomp
jae
into
pop
mov
xchg
in
push
or
cmp
pushf
popa
xlat
stc
cli
fisub
data16
pop
sbb
retf
xchg
sbb
jge
retf
or
inc
aam
loopne
pop
xchg
and
loopne
add
xchg
movs
sbb
inc
adc
dec
pop
lea
xor
sbb
fwait
sub
jle
(bad)
fadd
add
mov
xchg
dec
inc
popf
sbb
clc
sar
andps
aas
lea
cmp
add
and
in
repz
push
test
dec
in
cmps
fisttp
ins
sahf
sbb
and
mov
(bad)
retf
das
in
xor
jecxz
xchg
stc
jo
inc
dec
and
jge
lahf
dec
iret
sub
cmc
aaa
xchg
dec
loopne
in
xchg
dec
xchg
leave
mov
cmp
int
adc
cmp
imul
shr
pop
adc
mov
pop
push
sub
es
add
add
ins
out
ja
and
imul
sbb
mov
shl
xor
stc
frstor
out
mov
adc
mov
ficomp
ja
xchg
xchg
sbb
repnz
xor
aad
add
lods
in
cli
pop
scas
add
imul
jecxz
ficom
jno
pop
mov
push
sub
dec
aad
jle
ins
inc
mov
ret
mov
hlt
out
lahf
mov
xchg
imul
pop
sub
iret
or
jne
leave
sbb
iret
push
jg
cld
adc
push
mov
ss
or
xor
das
add
jp
retf
push
clc
push
ds
pop
sub
push
xchg
mov
in
sub
mov
cmps
bound
xor
mov
sub
fild
xor
(bad)
xor
or
data16
sbb
mov
ins
retf
nop
out
lahf
pop
and
sub
in
lahf
sbb
addr16
inc
retf
test
ds
mov
xor
mov
inc
(bad)
pop
jns
fisub
add
fsubrp
fdivr
cs
repnz
and
jne
sbb
ret
add
loopne
mov
xchg
and
in
mov
push
mov
inc
pop
inc
inc
dec
or
xor
outs
test
movs
adc
mov
fld
inc
gs
adc
xor
ins
pop
inc
(bad)
sbb
std
add
mov
popa
leave
and
push
pushf
je
jns
mov
push
jmp
inc
push
retf
sahf
jb
aas
pop
cmc
aad
cs
inc
(bad)
mov
in
add
jnp
xor
pop
mov
sbb
ds
sbb
xor
mov
or
or
mov
ins
inc
sar
jle
js
add
xchg
sbb
adc
int3
daa
das
adc
xor
mov
mov
xor
mov
xor
xchg
repnz
xchg
outs
mov
clc
pop
xor
je
mov
dec
mov
jbe
je
das
pop
xor
scas
outs
xor
loope
jnp
popa
cmps
fistp
ja
add
sub
add
xor
xchg
add
sbb
mov
or
imul
fcomp
lods
jmp
mov
xchg
sti
cmp
mov
popf
mov
lahf
inc
cmp
out
es
sub
cs
lea
sbb
and
mov
ds
popf
stos
pop
jmp
lea
cmp
jecxz
jle
je
cld
pop
sti
push
repz
cmp
mov
ins
jb
nop
push
pop
fwait
mov
(bad)
dec
sbb
popf
mov
(bad)
sti
ficomp
adc
adc
dec
sti
mov
int3
jecxz
pop
das
ds
sub
push
sbb
jnp
pop
dec
out
and
jae
ss
ss
sahf
pop
dec
push
int3
push
cmps
xchg
jmp
adc
stos
js
jae
ins
out
cmp
outs
and
add
hlt
lea
retf
mov
sbb
adc
retf
and
shl
ret
daa
jp
in
sub
mov
retf
mov
push
cmc
call
inc
bound
fmul
push
(bad)
scas
jecxz
pop
pusha
xchg
adc
sbb
fild
jno
stos
push
out
push
jnp
hlt
push
and
fwait
mov
outs
sbb
add
and
push
xor
ret
loopne
fbstp
std
fsubp
repz
mov
callw
int3
and
sbb
add
dec
xchg
jp
neg
cmps
sbb
rol
cld
pop
push
xor
sub
mov
retf
add
ds
xlat
fwait
sub
jmp
inc
lds
stc
cmp
pop
mov
daa
dec
jne
push
mov
add
jl
mov
clc
pop
sbb
fs
in
inc
out
int3
and
jl
xchg
jmp
push
pop
sub
mov
ins
inc
sub
and
mov
mov
inc
inc
cmovge
mov
pushf
ins
cs
push
push
mov
add
imul
fcmovbe
pop
out
dec
push
adc
xchg
xchg
mov
pop
adc
add
sub
mov
stos
or
lods
add
scas
mov
jne
imul
out
push
add
retf
out
retf
jb
mov
cdq
iret
xchg
sbb
jno
int
sbb
mov
retf
fstp
imul
sub
push
aam
xchg
push
pop
in
retf
xor
js
mov
xchg
fwait
nop
push
jmp
in
adc
or
cmp
pop
fscale
inc
cmp
jge
mov
push
adc
int3
push
or
ret
mov
sub
inc
lock
inc
adc
add
xchg
ror
ret
frstor
add
xchg
int3
fild
ja
dec
lods
leave
inc
xor
push
and
lods
(bad)
xor
jnp
xchg
push
jmp
adc
mov
pop
inc
out
mov
repnz
xchg
sub
inc
inc
clc
iret
xchg
pop
push
mov
lahf
mov
lods
mov
sub
sahf
imul
push
iret
test
repz
jne
(bad)
sub
retf
push
popa
inc
push
or
je
xchg
pusha
adc
aas
inc
mov
nop
jmp
aam
pop
push
lods
cmp
dec
cmp
and
xor
cmp
jecxz
in
mov
add
dec
iret
test
in
push
xchg
xor
sahf
push
jp
xchg
mov
ret
and
adc
imul
fsub
out
int
imul
fild
mov
mov
jae
and
xchg
nop
ret
mov
pop
cmp
inc
(bad)
in
or
stos
popa
lds
aad
popa
xchg
jge
mov
clc
mov
retf
sahf
cmp
sbb
ins
je
in
and
mov
inc
cmp
das
push
mov
xlat
stos
and
jmp
mov
sbb
cmc
hlt
inc
add
add
mul
mov
xlat
test
xor
lds
jnp
lods
push
stc
cwde
dec
jmp
or
not
cmc
retf
or
cmps
rcr
out
pop
and
enter
jg
pop
adc
push
cmp
jg
sub
(bad)
fwait
push
int
ss
and
jns
call
inc
mov
sbb
test
and
jno
cmp
call
pop
mov
ret
jnp
sbb
push
test
push
outs
repnz
add
pop
add
mov
dec
sub
xchg
ss
popa
inc
sbb
lea
or
jbe
fld
add
mov
cmps
les
icebp
sbb
jle
rcr
xor
xor
sub
mov
inc
pop
sar
mov
push
fcomp
leave
push
shl
loopne
lock
shr
(bad)
nop
cmp
pop
sbb
cs
and
inc
pushf
xor
mov
fsubr
les
nop
daa
adc
add
mov
test
test
aam
movs
jl
pop
pop
xor
inc
mov
sub
push
hlt
cmps
out
imul
mov
test
cmps
call
loop
les
movs
xchg
lahf
xor
push
fldcw
dec
cmc
test
xchg
ins
cmp
shr
std
call
or
rol
and
push
lods
mov
test
rcl
int3
cmp
mov
es
and
lods
pop
cmp
fisttp
hlt
jp
frstor
fstp
push
cdq
and
aas
inc
mov
test
sahf
push
cdq
add
pop
out
mov
(bad)
out
xchg
sub
inc
mov
lods
sub
cli
xor
cli
das
int3
loopne
cmps
mov
dec
push
pop
int
retf
inc
fcom
mov
jne
out
mov
jge
xor
call
jge
mov
dec
clc
or
mov
hlt
repnz
sub
pusha
and
iret
pop
out
jp
mov
sbb
mov
inc
movs
fcomip
sub
mov
xlat
pop
cmp
cmp
and
add
adc
mov
retf
sbb
jno
fisttp
jg
mov
test
dec
xchg
mov
mov
mov
(bad)
or
in
lods
dec
mov
pop
add
ret
pop
test
mov
hlt
pop
add
std
cmp
or
je
icebp
out
call
mov
sub
adc
xchg
cmp
lahf
(bad)
jg
xchg
dec
lahf
xchg
push
jae
fcmovnb
xlat
test
mov
add
and
lea
pop
and
inc
inc
pushf
mov
ins
pop
jle
or
and
in
outs
add
fnsave
mov
loop
push
data16
mov
das
mov
imul
xor
lods
add
mov
fwait
in
mov
sbb
jge
mov
aaa
xchg
or
lds
loope
adc
mov
push
inc
add
pop
cmps
aam
test
imul
ds
cmp
xchg
jmp
imul
aad
out
xor
dec
xchg
jp
or
or
cld
mov
cwde
aam
inc
push
pop
bound
xor
in
ret
pop
jno
cmp
lahf
out
cmps
xor
cmps
or
xchg
jg
xchg
dec
mov
popf
xchg
adc
lods
and
iret
mov
popf
stc
sub
into
movs
imul
movs
fild
in
jl
mov
fst
mov
or
jge
xor
cld
jecxz
inc
sub
repz
mov
dec
or
into
test
mov
mov
mov
push
test
sub
pop
std
xchg
test
or
adc
hlt
stos
or
cs
xchg
adc
xchg
jns
scas
pusha
jns
mov
or
xchg
jb
jmp
and
and
add
fidiv
sub
and
sub
(bad)
retf
push
(bad)
jmp
sub
sbb
cdq
inc
dec
xchg
(bad)
call
shr
lahf
mov
mov
mov
imul
out
inc
stc
stos
loop
and
dec
jb
clc
int3
fsubr
lock
stos
cld
sbb
fnstsw
xor
cli
ds
nop
pop
mov
lds
daa
xchg
sbb
mov
clc
xchg
pusha
iret
ficomp
cs
pop
ins
cli
cmp
dec
and
rol
out
mov
cmp
mov
or
loopne
es
cmp
mov
imul
push
iret
add
pusha
ret
or
test
and
shr
in
xor
or
outs
arpl
jmp
adc
inc
clc
adc
and
jge
out
mov
movs
and
and
cdq
or
test
clc
stos
data16
div
push
xor
aas
dec
pshufw
bound
cwde
mov
pop
push
push
rcr
rol
sub
mov
adc
nop
push
mov
and
jno
sbb
jns
ins
das
jecxz
jg
mov
nop
rol
sar
cdq
pop
(bad)
lea
aad
ds
in
dec
imul
push
sbb
fdivr
push
push
popa
mov
bound
xchg
xor
xchg
shr
adc
and
rcr
mov
movs
jle
hlt
fwait
rol
enter
xchg
popf
lods
push
out
cmp
pop
pusha
and
pop
ins
les
xchg
mov
(bad)
ficomp
(bad)
lea
mov
xchg
pop
push
cmp
or
mov
jmp
cmp
pusha
mov
adc
(bad)
sbb
add
mov
(bad)
and
add
mov
xchg
loope
push
into
mov
adc
mov
fst
mov
jl
jb
pop
mov
ins
hlt
xchg
cmp
js
outs
mov
mov
mov
xor
mov
mov
mov
ins
in
cmps
mov
in
gs
cmp
sub
mov
scas
mov
into
cmp
mov
sahf
retf
push
push
loopne
pop
rcl
xchg
mov
xlat
mov
sbb
shl
adc
loopne
dec
add
or
fild
leave
add
scas
jecxz
or
pushf
mov
js
mov
jne
(bad)
out
push
push
xchg
outs
iret
cwde
aas
daa
ins
jp
sbb
dec
rol
sub
xchg
retf
jno
mov
dec
(bad)
and
out
ffreep
inc
pop
jge
sub
jne
movs
mov
mov
aaa
fstp
dec
dec
sbb
clc
pop
(bad)
mov
bound
arpl
hlt
sbb
lods
(bad)
sahf
loop
cmp
or
mov
cmp
sbb
push
ror
sbb
or
dec
in
pop
mov
push
cmc
scas
adc
mov
lahf
cwde
dec
xchg
in
ja
out
pushf
fcmovnbe
ja
add
aaa
jns
or
loope
not
push
sub
sub
cwde
pusha
xchg
push
adc
add
push
ins
bound
loopne
je
add
fimul
adc
xor
pusha
out
dec
push
clc
and
fwait
inc
lea
jg
cmps
jns
test
ds
fdiv
xlat
loop
stos
inc
ret
xchg
mov
jo
test
rcl
(bad)
(bad)
and
std
jb
xchg
data16
pop
aas
add
xor
and
mov
inc
add
ja
push
movs
jl
xchg
not
rcr
das
sub
adc
(bad)
sahf
sbb
sar
aaa
or
push
xchg
hlt
outs
neg
dec
xor
mov
sbb
adc
pop
ficom
and
inc
hlt
mov
push
stc
cld
push
retf
call
dec
out
retf
mov
adc
or
pusha
jmp
mov
into
xchg
sbb
pushf
cs
cdq
sub
cmp
ror
(bad)
icebp
rcr
in
rcr
int
xchg
jmp
ins
ins
dec
mov
push
fwait
inc
mov
ret
fisub
jge
shr
xchg
sub
add
leave
inc
imul
aam
lea
bound
adc
xchg
mov
and
mov
ret
mov
cwde
and
je
adc
loopne
pop
popf
push
sub
adc
imul
pop
add
cmp
cwde
outs
retf
xor
dec
pop
dec
shl
sub
pop
nop
jbe
xlat
jle
outs
inc
or
(bad)
aas
mov
inc
mov
mov
jnp
lock
sub
push
not
mov
cmp
aas
add
mov
cmp
das
pop
xor
gs
push
icebp
pop
imul
ficom
out
enter
ds
adc
ins
inc
retf
imul
data16
add
or
push
xchg
sbb
clc
jl
loope
int3
lea
cmp
mov
jae
jae
ret
xchg
push
cmc
jmp
fcmovnbe
push
test
jp
in
xlat
dec
es
jmp
pop
test
sub
push
jle
gs
dec
push
or
adc
adc
stc
jge
call
shl
fstp
lock
dec
es
pop
mov
sti
sti
sbb
push
popf
dec
jmp
and
(bad)
popa
stos
pop
cdq
setl
inc
test
add
aas
jne
rol
push
pop
pop
aam
test
les
jb
sub
and
sbb
(bad)
sbb
gs
mov
dec
(bad)
sbb
bound
outs
push
inc
popf
into
dec
outs
mov
js
pop
fstp
retf
jmp
mov
stos
shr
push
pusha
std
mov
(bad)
rcl
cmp
mov
xchg
(bad)
mov
inc
(bad)
fimul
bound
into
movs
movs
addr16
jmp
je
pop
(bad)
mov
add
cli
cdq
mov
or
pushf
xchg
inc
cmp
or
sub
cs
imul
jl
dec
push
fimul
retf
jmp
jne
push
sbb
xchg
xchg
sub
adc
loopne
shr
add
(bad)
xchg
adc
mov
out
stos
cmps
or
fcom
lea
adc
push
cld
cmps
jne
pop
retf
sbb
jl
outs
cmp
mov
mov
pop
sar
jbe
push
in
or
xlat
add
inc
jno
ret
das
fwait
and
pop
cmp
int3
xchg
(bad)
mov
xor
dec
pop
dec
jo
dec
dec
ss
adc
lods
out
outs
jo
stos
scas
sbb
pop
fistp
xchg
inc
cmp
cs
(bad)
mov
xchg
jnp
leave
mov
push
mov
dec
aaa
daa
daa
xor
inc
addr16
and
adc
arpl
or
ficom
lods
sbb
sub
or
aas
add
fs
adc
test
in
push
and
sub
inc
lea
out
sar
out
dec
inc
(bad)
cmp
xchg
adc
addr16
pop
iret
inc
mov
outs
dec
mov
mov
loop
popf
jg
fnstenv
xchg
je
popf
arpl
jnp
(bad)
or
sar
sub
or
lods
aad
lods
inc
cmp
rcr
push
jnp
fsub
stos
jo
test
leave
and
jbe
cmp
pop
repz
imul
(bad)
int3
mov
lds
js
dec
lods
mov
sub
call
pop
rcl
mov
cmp
pop
and
jno
or
(bad)
push
cmp
jg
and
adc
dec
ret
pop
movs
aaa
lock
lock
ins
es
and
leave
adc
or
leave
pusha
clc
inc
or
shr
ss
xor
rcr
jo
push
mov
xchg
cli
je
cwde
fsubr
lods
shl
mov
fs
mov
jl
jb
sbb
xor
jmp
cmp
or
and
pop
cmps
inc
cdq
cmp
xchg
jns
(bad)
repz
adc
sahf
stos
ror
test
arpl
icebp
mov
je
and
repz
xchg
call
mov
push
sbb
(bad)
cmc
xchg
pushf
sbb
js
mov
sub
test
fwait
rep
aad
xor
push
pop
sub
enter
daa
stos
cmps
sub
push
and
xchg
xchg
xchg
adc
(bad)
neg
mov
push
out
add
jno
cwd
xchg
aam
jg
dec
mov
pop
dec
mov
js
lahf
add
inc
xor
cwde
dec
call
add
stc
sub
pop
sub
pop
sar
out
ins
jl
mov
loop
inc
les
xchg
ins
cld
xchg
std
stos
or
mov
clc
push
mov
cmc
das
mov
sub
cmps
inc
sti
cwde
push
sub
mov
test
cmp
push
test
cmp
mov
cmp
add
(bad)
into
jmp
nop
lock
sbb
cmp
mov
mov
nop
add
push
lea
stos
mov
xlat
bound
jns
mov
jl
mov
pop
cmps
cmc
in
pop
in
ds
es
lods
xor
pop
rcr
pusha
inc
mov
scas
(bad)
call
arpl
loopne
sub
pop
rcr
loope
mov
cmp
lahf
xchg
lods
pop
push
js
sbb
cmp
pop
inc
pop
add
ret
or
cmp
xchg
adc
sub
stc
cmp
(bad)
cwde
gs
cli
sahf
and
imul
jne
dec
mov
ror
jl
adc
push
in
dec
iret
adc
int3
sar
or
loopne
iret
pop
mov
mov
xchg
scas
out
sbb
mov
sub
dec
pop
aad
add
loope
icebp
int3
pop
icebp
adc
shl
push
ss
dec
icebp
repnz
psubsw
js
lods
pop
mov
cmp
lods
outs
dec
adc
hlt
xchg
xor
cmp
mov
mov
outs
into
rol
inc
mov
inc
int
jbe
sbb
inc
dec
movs
popf
call
aaa
loope
outs
or
lds
int
pop
jmp
into
hlt
nop
cmp
mov
mov
mov
(bad)
push
shl
imul
cmps
das
mov
cld
xchg
sub
sub
mov
ins
or
pushf
xchg
shr
fdivr
std
std
mov
(bad)
imul
mov
sub
xchg
out
xchg
mov
and
push
outs
gs
pop
cmps
add
lods
xchg
mov
sub
xrelease
mov
cwde
test
ror
push
aad
adc
out
daa
sub
sub
inc
pop
dec
scas
adc
aad
enter
jo
outs
call
adc
and
outs
or
fnstenv
icebp
sub
(bad)
jo
or
dec
cmps
pop
int3
dec
sbb
or
cdq
cmps
addr16
xchg
test
mov
fcomp
sti
cli
adc
pop
fld
cmp
dec
lea
ror
out
adc
retf
xchg
add
das
sti
imul
mov
and
cmp
push
pop
pmulhuw
loope
mov
js
lods
jno
push
call
sbb
mov
ret
jne
cmps
ret
imul
retf
xlat
dec
sbb
jg
mov
xor
shl
popf
pop
xchg
mov
mov
xor
xchg
push
xchg
mov
inc
cmp
ins
xchg
dec
dec
lock
sbb
or
xchg
mov
fsubr
jae
aam
mov
jmp
mov
fst
mov
(bad)
pop
in
in
popf
test
dec
jmp
sub
mov
pushf
stos
add
mov
inc
lock
out
nop
jnp
(bad)
pop
jmp
push
scas
std
aad
out
in
xlat
add
call
into
xchg
xor
pop
xchg
xor
dec
pop
and
xor
into
cdq
cmc
pop
dec
push
retf
pushf
jecxz
push
bound
sub
push
fadd
sbb
xchg
pop
stos
pop
pop
mov
jge
shl
sub
in
iret
scas
mov
sbb
or
(bad)
mov
lock
call
xor
loope
sub
push
push
inc
out
ret
mov
(bad)
aam
sbb
aas
test
aaa
imul
add
sub
ror
test
je
seto
in
es
or
mov
jmp
fsubr
push
mov
cmp
mov
test
ror
mov
loope
(bad)
hlt
xchg
cwde
ficom
pop
(bad)
enter
sbb
ficomp
mov
mov
xchg
mov
mov
inc
xor
inc
cmp
jnp
mov
loope
int
and
mov
dec
stos
out
in
pop
adc
dec
loope
in
(bad)
or
mov
sbb
imul
mov
push
add
mov
xchg
jmp
and
xor
in
stc
fwait
sti
fwait
dec
xor
inc
jecxz
push
xor
or
jmp
adc
add
adc
test
jmp
leave
sbb
frstor
push
int3
cmp
mov
cmp
xor
arpl
inc
or
popf
test
jl
test
push
lods
int
push
in
push
sar
mov
std
call
dec
sahf
inc
out
sbb
cmp
inc
fistp
int
ss
push
sar
aam
pop
cdq
cld
mov
sti
or
leave
dec
js
out
push
popa
mov
lods
push
(bad)
cmps
sbb
adc
dec
jb
outs
push
ret
mov
pop
test
or
(bad)
jmp
xor
in
mov
fstp
xchg
fsubr
sbb
xchg
out
pop
cmps
js
jb
push
rcl
cmp
jp
fidiv
loop
stc
imul
retf
inc
mov
adc
push
mov
mov
sbb
mov
shr
sahf
dec
xchg
mov
pop
dec
pop
and
test
popf
scas
dec
and
sbb
or
and
push
std
jge
jne
popf
movs
sbb
push
std
lahf
imul
movs
push
or
test
sbb
std
sbb
push
(bad)
shr
outs
or
pop
lahf
call
aam
hlt
cld
xor
unpcklps
ins
iret
shr
test
inc
das
fld
fucomp
or
push
sub
cmc
in
mov
test
inc
add
sbb
jg
cmp
mov
popa
pop
push
mov
jne
scas
sub
js
sbb
xchg
mov
adc
shr
mov
sbb
mov
std
add
imul
inc
lea
ret
das
add
rcr
dec
retf
in
inc
push
ja
sub
aaa
pop
mov
imul
mov
adc
sti
(bad)
xor
and
jno
and
imul
xchg
popa
xchg
js
dec
in
push
gs
cld
pop
sbb
in
test
jno
fs
mov
out
stc
sahf
dec
push
lds
sub
std
scas
sub
pop
stos
sbb
cwde
movs
pusha
(bad)
scas
test
lods
(bad)
xchg
std
push
jae
js
sahf
add
adc
dec
or
jge
dec
out
je
mov
mov
add
or
in
(bad)
dec
loop
push
nop
into
loop
cld
(bad)
jecxz
std
sub
sbb
jns
pop
cmp
jb
inc
sub
stos
cmp
addr16
stos
fist
jne
and
sbb
(bad)
dec
xchg
push
sbb
loope
out
add
jns
pop
sub
pop
loope
sti
inc
stos
push
hlt
ror
fstp
xchg
push
cmc
out
and
lods
jl
push
xlat
pop
push
jl
mov
in
hlt
(bad)
icebp
push
lea
dec
out
sbb
(bad)
in
xchg
cmps
xlat
mov
cmp
mov
ss
mov
mov
dec
inc
mov
or
mov
mov
cmp
ret
fisubr
mov
push
mov
add
je
shl
rcl
fcomp
jle
sbb
jmp
test
xchg
stos
adc
(bad)
call
stc
add
ret
dec
mov
call
xchg
mov
daa
fstp
sti
test
jnp
push
ds
popf
push
mov
dec
mov
sub
jmp
sub
jle
cmps
push
add
fiadd
add
pop
aam
mov
fcomp
das
dec
call
in
enter
mov
jo
adc
and
daa
mov
jmp
and
fistp
pop
push
rcr
(bad)
xlat
dec
dec
pop
std
sbb
mov
xchg
sti
movs
lods
(bad)
jmp
into
(bad)
pop
mov
pushf
aam
scas
out
sub
push
fild
mov
xchg
adc
adc
rcr
xchg
popa
adc
in
push
jbe
push
xor
mov
sbb
(bad)
cli
hlt
or
fdivr
cmp
outs
stos
daa
aaa
cmp
cmp
xchg
mov
stos
in
fidiv
dec
in
jmp
xor
mov
fstp
sub
in
xor
or
cs
nop
mov
inc
js
pushf
je
xchg
inc
outs
mov
retf
adc
movs
xlat
(bad)
out
jge
inc
call
movs
js
jmp
sahf
mov
adc
inc
add
and
mov
pusha
loope
add
icebp
and
or
call
xlat
(bad)
sub
arpl
dec
inc
xlat
out
sbb
mov
jmp
mov
(bad)
pop
fcmovu
jnp
jns
data16
mov
scas
jae
xor
push
sub
adc
mov
lds
jo
repz
mov
popw
cmps
adc
sub
or
movs
imul
xchg
mov
out
repz
push
or
std
mov
loop
jp
sub
mov
pop
mov
in
leave
xor
inc
seta
loopne
jo
test
js
dec
jae
into
dec
mov
jae
leave
addr16
iret
sbb
sub
pop
sub
xor
adc
hlt
cmp
stos
sub
xchg
sub
cmp
popa
and
lods
test
lahf
(bad)
cmp
add
cwde
mov
out
imul
test
jo
mov
and
sub
or
bound
push
aad
arpl
ss
jg
setae
push
add
stc
mov
or
imul
das
and
(bad)
mov
into
in
jg
and
test
add
clc
mov
mov
in
pop
pop
xchg
fisubr
sahf
inc
data16
and
out
mov
ja
stos
push
popa
sbb
jl
xor
adc
out
int3
xchg
adc
out
xor
scas
add
sub
mov
mov
popf
adc
push
mov
mov
in
ret
inc
dec
push
jnp
stos
pop
neg
clc
addr16
inc
pop
js
mov
dec
add
out
or
mov
adc
mov
lea
retf
jae
lods
or
retf
add
loop
and
push
cmp
sbb
inc
sbb
push
rol
inc
lahf
dec
push
inc
push
jb
(bad)
pop
mov
int3
xor
add
add
cld
scas
stos
hlt
cmp
mov
xchg
les
mov
sbb
sub
and
jnp
not
retf
retf
cmp
sbb
xor
mov
xchg
inc
lods
inc
imul
mov
retf
mov
sub
fnsave
lock
add
inc
repz
sbb
add
stos
and
sbb
push
test
lahf
clc
cdq
mov
or
jmp
inc
rol
xor
retf
iret
retf
sub
mov
clc
cmps
xor
es
rol
out
and
in
test
sub
fwait
mov
adc
ins
div
mov
dec
shl
aaa
stc
aad
jmp
add
cmp
loope
rcr
imul
push
fs
pop
(bad)
jmp
sbb
push
xchg
aad
inc
jns
test
stos
mov
sbb
ins
push
add
mov
mov
ret
outs
cmps
inc
cwde
push
test
pop
sti
sub
cmp
mov
sub
retf
push
sub
add
cdq
jge
loopne
mov
push
mov
mov
xlat
inc
or
mov
nop
push
mov
add
fnsave
retf
imul
std
jp
pop
inc
mov
xchg
loope
loopne
jge
int3
inc
mov
add
pop
and
push
cmps
outs
rcl
xchg
in
cld
(bad)
retf
mov
or
fsub
pushf
repnz
cmp
(bad)
out
test
and
mov
mov
cli
imul
lods
fisub
cmc
push
and
adc
adc
aas
cmp
call
movs
in
cmps
pop
(bad)
jle
mov
in
mov
adc
mov
push
movs
xchg
xchg
loope
outs
xchg
cmp
add
bound
add
jg
sub
sbb
mov
aas
dec
call
int3
(bad)
inc
rcr
nop
push
adc
(bad)
xchg
aam
popf
sahf
push
or
pushf
jbe
sbb
leave
cld
jp
mov
add
sub
xchg
stos
inc
icebp
imul
push
mov
or
add
mov
dec
std
sbb
test
call
mov
mov
push
add
inc
mov
in
mov
in
call
mov
mov
ins
add
inc
and
dec
movs
rol
lea
xor
jl
xchg
adc
ficomp
in
sub
loopne
(bad)
xor
inc
sbb
stos
or
aaa
dec
cmps
ins
arpl
jo
es
jmp
ja
scas
dec
jp
int3
out
xor
mov
mov
sub
ret
inc
cmp
imul
inc
pop
pop
inc
xchg
test
cmp
or
xchg
sti
out
(bad)
or
push
out
out
fld
clc
retf
aam
in
fcomi
jmp
jp
pusha
or
in
(bad)
retf
mov
inc
jb
stc
shl
stc
sbb
test
pop
xor
sahf
push
jns
call
dec
sbb
test
sub
stos
jno
pop
push
cmp
dec
pop
jns
mov
test
push
and
mov
adc
xchg
lods
mov
xor
mov
mov
adc
sbb
sub
cmp
xor
push
lods
outs
xlat
mov
dec
retf
jl
sti
add
or
dec
adc
sbb
aam
push
mov
xor
out
loopne
mov
clc
mov
daa
icebp
xchg
(bad)
jns
std
jl
lods
fadd
ficomp
inc
fldcw
xchg
shr
sub
pop
adc
fcomip
mov
mov
xor
sbb
jno
test
pop
(bad)
pop
mov
in
call
fnstsw
mov
mov
out
daa
lea
dec
cmps
je
jo
add
pop
jmp
mov
out
loope
movaps
test
adc
jge
or
sbb
mov
jnp
into
or
add
or
fs
in
scas
mov
pop
test
jg
cs
mov
ins
in
inc
ret
lds
loopne
push
xchg
push
leave
add
jmp
popf
fsub
xor
cmps
fwait
in
xor
inc
sub
and
mov
add
in
adc
dec
xchg
xchg
test
pop
add
aam
idiv
or
ss
js
cmp
int3
movs
xchg
pmulhw
repnz
mov
pop
jnp
outs
inc
xor
xor
dec
std
leave
push
and
add
jmp
pop
js
inc
or
jns
out
xchg
mov
faddp
jns
mov
pusha
sbb
mov
rcl
jne
call
rcr
out
ja
ror
xor
js
mov
test
or
call
sbb
mov
or
mov
xchg
push
fcomp
repz
(bad)
push
inc
or
pop
jmp
jns
adc
add
lea
mov
or
mov
pop
fst
mov
dec
sbb
pop
xchg
lock
pop
cmp
lea
call
and
and
loope
dec
pop
mov
mov
sub
into
jmp
mov
and
leave
std
sub
dec
aas
pop
movs
out
inc
neg
out
sahf
ss
arpl
cmps
inc
mov
inc
scas
out
or
jae
mov
call
cmps
aas
push
xor
or
sub
adc
pop
lahf
xchg
imul
mov
mov
pop
mov
push
fcom
in
xchg
jns
sub
and
and
nop
dec
mov
jp
outs
pop
ret
xchg
inc
add
mov
xchg
or
popf
jnp
push
cmps
test
xchg
into
jg
fisubr
dec
sbb
mov
es
push
enter
dec
popf
pop
test
mov
xor
stc
xor
mov
mov
jl
adc
sub
(bad)
(bad)
and
jns
pop
push
xchg
mov
cwde
xchg
imul
jle
xchg
xor
add
sub
pushf
aam
std
mov
(bad)
inc
(bad)
shl
mov
daa
push
pop
daa
push
and
jmp
ss
aam
pop
push
sub
or
add
jmp
or
or
pop
mov
push
jno
ret
ficomp
fsub
dec
(bad)
ins
sbb
das
test
std
ret
jge
push
pop
xchg
cmps
cmp
xor
inc
ja
jno
cmovbe
and
xchg
and
jnp
inc
iret
jle
out
std
push
jp
std
push
dec
inc
aam
test
ret
cmps
imul
aas
xor
add
inc
je
dec
ja
ins
mov
das
test
cmp
ins
pop
arpl
lods
and
cld
dec
shl
xchg
sbb
inc
xor
cmp
or
mov
cmps
aas
adc
into
das
fldcw
cmp
test
call
movs
ins
ins
adc
push
rol
mov
cdq
cmc
inc
xor
(bad)
fnstsw
push
bound
pop
or
mov
sar
inc
xchg
ret
int3
sbb
movs
cmps
xlat
jmp
fldcw
jne
xchg
loopne
dec
stos
xchg
dec
sti
cmc
sub
sahf
aas
data16
push
(bad)
cli
xor
mov
fstp
mov
pop
pop
aas
fdiv
cmp
and
push
retf
imul
sbb
inc
fstp
jmp
int3
rcr
and
push
(bad)
cld
rcr
ffreep
movs
leave
mov
rol
std
sbb
lock
mov
frstor
test
lahf
and
jg
fdivr
sub
addr16
ror
out
sti
in
iret
sub
cmps
(bad)
inc
adc
mov
sbb
mov
(bad)
sbb
mov
pop
jo
xor
adc
dec
retf
popf
mov
dec
cmp
xchg
push
mov
je
add
test
xor
jge
add
xchg
mov
mov
cmp
jae
push
pop
movs
in
les
push
cmp
bts
out
addr16
mov
popf
pop
xchg
lock
das
mov
mov
xchg
mov
inc
push
dec
sbb
cmps
jo
data16
inc
stos
xor
arpl
cld
inc
jne
xor
lahf
xchg
sub
sub
sbb
neg
loop
mov
sar
sbb
ds
jb
int3
lods
rcl
add
sub
push
add
xchg
dec
mov
jmp
imul
scas
mov
dec
jbe
jns
std
sub
lds
and
jge
push
sbb
out
dec
lods
pop
popf
push
imul
out
push
xchg
fld
jg
rcl
cmps
stc
rol
cmp
xor
adc
adc
adc
jl
fwait
dec
(bad)
lock
test
out
std
fcomp
out
frstor
and
or
enter
adc
adc
ds
mov
cmp
shl
or
cmp
dec
mov
adc
inc
mov
pusha
or
cld
adc
dec
and
cli
xchg
enter
pusha
retf
dec
fs
cli
cmp
mov
das
int
arpl
xchg
clc
sub
cs
call
jns
movs
xchg
xchg
sbb
fistp
xchg
call
cmp
cmps
mov
or
sti
pop
inc
sub
inc
sti
sar
adc
popa
dec
test
dec
arpl
pop
adc
adc
fxch
jb
jnp
sti
sub
ficom
sub
popa
adc
xor
add
pop
or
(bad)
push
cmps
test
mov
cmps
retf
cmps
push
in
pop
(bad)
outs
lds
das
and
adc
push
mov
outs
or
jge
repz
or
mov
stos
push
leave
rol
mov
mov
mov
call
shr
inc
scas
push
enter
inc
fwait
scas
dec
adc
sub
sbb
adc
dec
jg
sbb
sub
test
sbb
mov
pushf
(bad)
xchg
lock
dec
mov
sbb
jge
push
dec
pop
or
and
stos
into
data16
dec
dec
fmul
sar
xchg
adc
jl
sbb
mov
daa
addr16
push
push
std
and
out
(bad)
lods
adc
pop
jg
and
jge
loope
out
cli
jne
ins
inc
(bad)
test
movs
and
xchg
clc
(bad)
pop
pop
inc
push
jmp
in
mov
cmp
shl
fstp
jno
ficomp
rcl
(bad)
in
mov
mov
push
stos
dec
cmp
xchg
sub
push
imul
icebp
fstp
cli
pop
cld
and
or
mov
jnp
cmps
repz
mov
and
mov
push
jmp
scas
push
mov
retf
xor
cmp
cmc
lods
xchg
pop
or
sub
cmp
ins
ror
adc
adc
imul
sbb
in
test
imul
daa
jmp
in
(bad)
stc
or
or
push
test
mov
pop
cli
lods
retf
and
fdiv
addr16
jmp
ds
sbb
test
call
xchg
in
add
add
jg
movs
inc
(bad)
push
push
add
imul
stc
sub
dec
push
retf
dec
ins
xor
shl
add
pop
mov
movs
add
leave
es
and
(bad)
fldenv
imul
sub
xor
pop
inc
rcl
mov
add
loop
xor
aad
sub
repnz
cdq
mov
xchg
mov
enter
fisubr
loope
mov
lods
sub
or
mov
loope
dec
inc
rcr
cmc
cdq
pop
xchg
cmp
push
push
jnp
hlt
inc
mov
ret
(bad)
jnp
ficomp
sbb
test
ret
add
leave
cld
or
repz
(bad)
jg
xor
adc
adc
sbb
movups
dec
pusha
ins
inc
xchg
xchg
in
adc
add
int3
push
ret
fucomip
leave
and
or
fsubr
cmp
sub
xor
push
xchg
push
xchg
xor
rcl
ins
rcl
repz
sub
inc
push
mov
ins
xor
sub
lods
mov
in
out
or
int
out
push
loopne
cmp
mov
xchg
jne
pushf
cwde
add
add
adc
xchg
scas
sbb
xor
test
out
pop
mov
pop
cmp
iret
nop
lds
inc
mov
xor
inc
movs
popf
pop
jmp
fs
ficom
ss
lods
push
or
dec
jl
jmp
test
lahf
and
xchg
cmp
push
xlat
mov
mov
dec
pushfw
out
xor
stc
lea
sbb
sub
(bad)
adc
add
cmp
(bad)
in
push
xor
in
fst
cmp
movs
xchg
dec
push
cld
ficom
popf
push
loopne
and
sar
adc
scas
jno
jo
lahf
dec
iret
add
stos
(bad)
xchg
inc
xor
mov
sbb
pop
js
mov
push
xor
jge
push
(bad)
jg
mov
push
mov
pusha
das
xchg
lahf
jp
mov
xchg
xchg
xchg
call
sub
cmp
cmp
push
in
pop
mov
loopne
mov
mov
push
xor
push
or
add
or
xlat
add
sub
xchg
scas
jne
xor
jb
je
in
int
loop
and
push
das
dec
pop
movs
icebp
es
hlt
cmp
mov
loopne
sub
cmp
mul
cmp
gs
cmc
pop
mov
pushf
mov
test
mov
loopne
cli
pushf
cmp
jnp
push
mov
hlt
jl
push
mov
retf
push
cmp
popa
xor
jae
cld
mov
outs
repnz
or
push
test
mov
ficomp
and
ret
ret
mov
shr
pop
loope
fild
dec
stos
adc
hlt
jb
push
inc
fwait
repnz
(bad)
jecxz
xchg
push
xchg
and
mov
sub
or
cdq
mov
outs
jmp
dec
popa
or
fsub
add
add
movs
adc
or
jb
sbb
mov
dec
packuswb
sbb
fidiv
test
(bad)
sub
adc
sar
sub
movs
mov
push
or
(bad)
dec
push
xchg
(bad)
mov
sbb
imul
leave
jb
mov
sub
aad
mov
repnz
or
in
movs
pop
imul
mov
test
adc
push
xchg
repnz
jmp
or
push
clc
adc
add
push
cmove
mov
call
cs
jo
mov
das
or
in
mov
jmp
(bad)
ficomp
std
loope
adc
sub
and
ds
aad
sub
and
push
loop
es
cmps
inc
pop
hlt
lock
loope
mov
cmp
or
sub
das
in
xchg
mov
shr
pop
outs
jns
xor
inc
cmp
cmp
sub
test
or
sub
movs
fild
daa
loopne
mov
imul
cmp
mov
jns
jne
pop
mov
xchg
inc
cmp
push
scas
mov
iret
cld
das
sbb
cmp
cmp
iret
(bad)
(bad)
fld
sub
cmc
leave
xor
cdq
pop
ret
popa
or
scas
or
or
dec
into
push
sti
pop
fbstp
xchg
push
dec
aad
rol
sub
shl
jo
dec
sti
test
arpl
pop
cmp
mov
push
jp
fiadd
retf
pop
mov
pop
dec
cmp
loop
adc
sub
cmp
jp
leave
xchg
lea
in
xchg
sub
js
(bad)
cwde
xor
(bad)
mov
inc
in
(bad)
inc
mov
mov
mov
push
dec
mov
retf
and
xlat
sub
pushf
shl
ss
jl
test
pushf
cmp
aam
add
mov
mov
pop
add
and
fwait
retf
adc
add
push
jp
imul
mov
jns
cs
aam
inc
dec
repnz
mov
sbb
out
imul
jb
inc
mov
inc
pop
inc
pop
scas
add
inc
inc
or
inc
dec
outs
xchg
ret
and
xor
retf
sub
pop
xor
call
adc
movs
icebp
adc
loopne
pop
mov
ds
(bad)
enter
popa
and
or
mov
mov
mov
pop
add
inc
sbb
(bad)
add
out
cmps
xor
fs
jbe
or
dec
test
push
adc
mov
and
inc
mov
push
push
jmp
jp
mov
mov
das
sbb
jl
imul
aaa
jg
retf
pop
sbb
aam
retf
in
inc
enter
fisttp
adc
bound
jne
shl
out
imul
lds
push
inc
retf
lods
mov
inc
xor
pop
ror
mov
retf
stos
and
mov
(bad)
icebp
lods
bnd
(bad)
push
push
bound
call
icebp
stos
sub
sub
pop
clc
xor
sahf
inc
cmc
aad
xchg
pop
jbe
add
retf
mov
inc
mov
xlat
jp
mov
xor
mov
sub
cmp
cmp
push
sub
mov
xchg
out
ret
sbb
(bad)
inc
xchg
adc
cmp
sub
add
mov
sub
pop
(bad)
inc
inc
sub
or
mov
xor
movs
lods
test
out
jmp
or
test
or
xlat
xchg
test
xor
adc
pop
sbb
in
push
pop
sub
shl
out
sbb
fdivp
cs
pusha
xor
and
or
push
push
fmul
mov
out
add
dec
cmps
cli
vpunpckhbw
repnz
rol
sub
(bad)
pop
mov
push
fs
sub
int3
xchg
or
or
data16
add
pop
sti
aaa
js
push
bound
arpl
or
in
stc
sub
int3
push
mov
push
in
mov
add
mov
mov
sbb
or
in
or
xchg
mov
das
in
adc
cmp
in
adc
dec
inc
in
or
inc
xchg
sbb
not
(bad)
sbb
pop
mov
call
aas
mov
push
sar
call
cwde
sub
sub
dec
scas
sub
adc
loop
xchg
mov
dec
pop
int
enter
fistp
dec
sub
adc
sub
fdiv
mov
test
sub
add
sbb
pop
in
enter
inc
sbb
retf
xchg
pop
jmp
out
push
sbb
in
add
push
inc
les
pop
sbb
mov
ret
and
dec
cmc
xchg
fsubr
dec
les
pop
mov
xchg
xor
int3
jnp
cmp
enter
fsub
sbb
jae
cmp
xchg
push
add
lds
add
and
jbe
sbb
pop
mov
adc
cmp
cmp
inc
mov
(bad)
out
sbb
popa
xchg
inc
inc
dec
or
fimul
push
mov
dec
mov
mov
test
clc
pop
cmp
retf
test
xchg
xor
xchg
push
mov
mov
fwait
inc
jbe
xor
mul
pop
div
xor
or
pop
es
call
fsubr
mov
daa
mov
adc
sub
cmp
mov
jmp
(bad)
fs
adc
repnz
mov
mov
lods
(bad)
loop
ins
scas
das
push
push
lods
or
push
retf
mov
fidivr
in
cmp
(bad)
cmp
mov
cmp
dec
dec
xlat
lds
mov
idiv
adc
stos
mov
push
add
hlt
ror
dec
add
stos
inc
cmp
xor
and
push
add
inc
test
inc
pushf
xchg
xchg
or
jmp
js
dec
xchg
mov
(bad)
pop
jne
jge
mov
sub
std
push
push
mov
ja
jae
test
jmp
hlt
cmp
fadd
sbb
imul
pop
mov
(bad)
arpl
cmp
enter
push
inc
popf
arpl
adc
rcr
adc
fadd
clc
inc
jne
jle
pop
cli
data16
into
lea
push
mov
and
add
lods
jbe
dec
mov
xchg
pop
movs
into
dec
stos
mov
nop
xchg
mov
xchg
jmp
jp
(bad)
lods
mov
test
dec
lea
pushf
jle
dec
fldcw
test
jne
imul
daa
ror
pop
out
and
mov
add
adc
xchg
adc
not
mov
lds
pop
xor
xor
sub
jge
push
cli
lds
cwde
jno
loope
add
jp
xchg
in
scas
add
pop
out
fist
mov
push
inc
mov
ficom
call
push
imul
inc
cmp
mov
shl
mov
jmp
inc
cmp
push
sub
std
int
cmp
test
clc
push
adc
das
fmul
lods
add
adc
xor
xchg
js
xchg
sar
mov
stos
faddp
dec
mov
cmp
xchg
add
xchg
sub
mov
mov
test
dec
aad
inc
push
sub
aam
mov
xchg
popa
ret
cli
mov
imul
ret
retf
add
retf
and
inc
xchg
into
ds
mov
and
rol
inc
data16
ins
adc
test
xor
arpl
inc
xchg
or
fiadd
imul
lock
mov
jl
loope
and
cli
push
stc
lods
pop
jmp
into
daa
test
and
daa
pop
pop
shr
cs
loop
mov
(bad)
jmp
xor
and
add
push
push
out
rcr
test
jmp
mov
imul
dec
pushf
mov
add
xchg
mov
dec
cmp
push
sbb
icebp
sub
xor
xor
mov
or
into
es
les
and
into
mov
xchg
xor
pop
mov
or
pop
mov
xor
xchg
pop
add
retf
std
mov
jge
inc
mov
dec
lahf
mov
and
(bad)
out
outs
sbb
stos
jns
xor
add
ficomp
mov
push
fucomi
mov
lea
addr16
and
das
stos
cmp
jecxz
jl
sbb
inc
hlt
inc
xchg
movs
inc
(bad)
sahf
jmp
mov
stos
ret
pop
cmp
loope
pop
or
mov
out
scas
ds
fst
fimul
adc
and
push
stos
dec
mov
jmp
inc
das
pop
scas
movs
sbb
addr16
je
(bad)
push
fs
stos
outs
ffree
stos
push
scas
mov
mov
mov
fiadd
mov
test
pop
jbe
repz
xchg
int3
inc
retf
or
leave
cs
pop
xchg
mov
test
push
xor
mov
push
cmps
rol
adc
jo
sbb
cmp
pop
adc
ins
cld
out
inc
adc
out
cld
sub
scas
int3
push
push
xchg
leave
je
repz
and
sbb
dec
cmovb
cmp
or
mov
call
gs
(bad)
adc
mov
mov
ins
push
out
or
pop
and
add
mov
adc
movs
loopne
inc
fwait
mov
imul
jp
stos
push
add
xor
popa
mov
je
jg
pusha
out
add
into
xor
adc
inc
mov
(bad)
adc
test
and
imul
arpl
adc
test
ss
jl
ror
in
jp
stc
cmps
repnz
jge
retf
stos
clc
js
sar
cmp
neg
and
cli
bound
or
jge
and
push
(bad)
cmp
cmp
repnz
loop
xor
(bad)
adc
clc
scas
inc
add
add
cs
clc
mov
dec
cmps
(bad)
cmc
pop
cmp
add
mov
adc
mov
sub
loopne
cld
fisubr
and
xlat
inc
mov
or
add
adc
(bad)
xchg
loope
mov
ret
mov
leave
and
mov
mov
gs
out
(bad)
ins
add
lds
imul
pop
cdq
jno
or
mov
sbb
sbb
sub
mov
fs
mov
sub
xor
aam
jecxz
mov
mov
cmp
xchg
xlat
test
push
cmc
fcmovnb
dec
pop
dec
jo
(bad)
les
shl
or
dec
cld
test
dec
std
pusha
mov
stos
push
mov
lds
inc
jmp
push
mov
jp
or
jmp
cmp
sysenter
mov
stos
mov
pushf
cmp
push
xchg
retf
xor
int
fisttp
in
jno
ins
movs
mov
int3
and
push
fldcw
cmps
gs
dec
js
xchg
mov
scas
fcomp
mov
in
push
shl
fstp
scas
inc
mov
aas
mov
clc
(bad)
pushf
sbb
push
push
xor
pop
retf
and
imul
les
push
mov
ficomp
loopne
lods
ss
jae
data16
outs
out
loopne
clc
cmp
mov
mov
inc
push
loop
mov
mov
clc
xor
inc
sub
movs
stos
mov
xchg
pop
pop
adc
dec
loop
cmp
mov
call
cmp
imul
fisub
cmp
sbb
daa
retf
js
mov
pop
ss
xchg
add
ins
daa
ds
cmps
in
or
jno
repnz
and
es
arpl
popa
fiadd
fdivr
cli
inc
dec
loope
ins
add
in
pop
dec
call
dec
cmps
shl
shr
xchg
inc
shr
loope
ds
cmp
cdq
inc
sbb
mov
scas
stos
callw
fwait
add
mov
out
push
xor
or
inc
std
loope
out
aam
add
push
ja
jmp
jle
sub
inc
ret
sub
(bad)
out
jae
inc
sub
and
sub
mov
lods
cmp
out
ins
dec
arpl
mov
shl
mov
retf
in
sahf
sbb
mov
mov
and
inc
or
cmp
push
pop
(bad)
in
sub
inc
jae
sub
lods
clc
fisttp
mov
fimul
mov
loop
(bad)
fnstsw
push
mov
xor
adc
call
push
pop
mov
add
jae
mov
jb
cmp
int
mov
out
adc
(bad)
repnz
shr
test
lea
nop
in
sti
jp
xchg
movs
pop
stc
scas
fmul
xor
test
pop
jno
fiadd
lods
repz
or
cmp
icebp
push
jne
popa
les
mov
sbb
push
in
ins
push
sub
sub
jns
cli
sub
xchg
push
push
dec
add
adc
inc
push
je
das
and
ins
call
div
popf
jbe
pop
xlat
les
imul
fucomp
mov
mov
pop
mov
lds
cmp
nop
mov
push
loopne
xchg
mov
pop
cmp
adc
ret
dec
sub
iret
xchg
jg
stos
lods
adc
mov
pop
inc
dec
lahf
push
imul
sbb
out
fwait
mov
aam
ins
cmp
rcl
int3
add
mov
xchg
aam
cs
loop
jae
push
cmps
movs
fadd
mov
into
cmps
das
mov
jge
mov
fwait
add
mov
push
test
bound
jbe
call
or
enter
ret
ins
(bad)
cmps
inc
cld
inc
push
pop
cdq
cmp
and
cld
mov
dec
imul
leave
ret
jnp
(bad)
xor
sbb
iret
cmc
pushf
addr16
call
mov
jb
xlat
mov
dec
repnz
stos
sbb
das
stos
aam
fnstcw
xchg
inc
shl
out
mov
push
mov
jno
je
mov
imul
cmp
pop
cmps
jns
mov
xor
xchg
inc
ds
lods
enter
cmp
dec
jecxz
(bad)
jns
push
xchg
es
(bad)
fcomp
push
popa
mov
mov
dec
dec
add
(bad)
xlat
jmp
xor
add
inc
and
enter
ja
jecxz
fucomip
jo
ins
sti
imul
stos
in
call
jmp
cmp
sub
out
xchg
push
inc
lods
daa
gs
xchg
pop
mov
add
scas
push
nop
mov
xlat
mov
jmp
jno
fmul
inc
aas
cdq
jns
out
adc
mov
mov
mov
je
inc
out
(bad)
pop
movzx
sahf
fsub
pop
ds
into
xor
adc
mov
xor
outs
stc
in
sub
dec
add
adc
and
push
push
ss
sbb
(bad)
ret
mov
push
(bad)
sbb
xor
(bad)
sub
repz
inc
sub
add
mov
call
jnp
xlat
(bad)
sbb
adc
and
lods
xor
sub
or
fsubr
loope
cmps
test
jmp
and
aas
mov
xchg
push
mov
mov
mov
dec
inc
rcr
lock
or
mov
mov
ret
mov
push
ins
inc
ror
and
mov
inc
xchg
out
ins
retf
ja
push
popa
ja
js
fwait
mov
dec
jge
test
xchg
inc
enter
xchg
xchg
add
mov
shl
cmp
icebp
rcr
pushf
iret
xor
fs
dec
adc
dec
movs
iret
hlt
stc
test
(bad)
cmc
or
leave
add
call
add
mov
repz
scas
shr
std
jecxz
cmps
pop
sbb
or
test
push
into
sbb
dec
push
inc
inc
or
std
enter
rcl
pushf
mov
push
pop
jnp
(bad)
mov
and
pop
iret
mov
jge
call
sbb
mov
lea
fldenv
repnz
rcl
dec
sbb
push
mov
shl
cld
xchg
xor
(bad)
hlt
and
scas
push
loope
test
adc
pushf
shr
cdq
xchg
les
(bad)
push
ins
ret
data16
(bad)
rcl
or
cmp
dec
ds
icebp
movs
inc
aas
or
sbb
(bad)
fcmovbe
xor
adc
inc
sub
push
pop
cmps
pop
mov
mov
mov
xor
jns
ins
pop
mov
add
mov
or
xchg
fwait
mov
dec
push
cmc
mov
sbb
int3
imul
xchg
sub
call
fs
mov
int
(bad)
jle
shl
mov
(bad)
sbb
pop
sti
ror
int3
push
dec
aaa
and
pop
and
jle
push
pop
push
adc
push
inc
adc
adc
push
ins
dec
mov
or
fistp
iret
mov
dec
aad
pushf
xchg
adc
or
inc
sbb
pop
mov
push
pop
std
mov
cmps
bound
push
add
repz
mov
inc
adc
rep
lock
lods
xor
xchg
dec
lods
sub
cwde
retf
ja
mov
dec
(bad)
lock
push
sub
jne
aad
push
sub
retf
push
pop
xor
ins
outs
cmps
mov
lods
pusha
push
test
enter
cmps
cmc
dec
imul
pop
ret
ja
sbb
fsubr
int3
xchg
xlat
cmps
push
dec
adc
adc
or
dec
pop
test
mov
(bad)
dec
ins
dec
dec
stos
inc
or
mov
out
repnz
xor
popf
ins
jp
call
pop
dec
pop
popf
inc
mov
rcl
add
inc
sub
fdivr
inc
jmp
jmp
and
fist
push
push
push
sar
cdq
mov
cwde
cmps
scas
sub
jmp
jae
pop
xor
pop
pop
mov
lahf
jge
mov
(bad)
or
inc
hlt
xchg
lahf
fld
xchg
nop
pop
fdivp
shr
repnz
test
cmp
addr16
lods
clc
ds
xchg
jne
fwait
mov
sahf
dec
std
and
sbb
ret
cmp
inc
dec
ficom
mov
or
gs
test
push
push
or
pop
xor
fidiv
sub
idiv
(bad)
leave
jecxz
(bad)
stos
jg
das
stos
inc
aad
mov
mov
test
mov
lods
mov
mov
dec
ins
mov
cmp
inc
jg
add
ins
leave
popa
lods
cmps
mov
push
out
fisttp
ds
fist
(bad)
xor
cmps
mov
jns
clc
add
adc
in
dec
mov
mov
fwait
dec
dec
jmp
and
jae
into
fst
pusha
cli
clc
scas
jb
xchg
out
repz
or
inc
clc
cli
adc
add
xor
imul
or
jl
or
jae
repnz
or
ins
cdq
inc
jmp
jae
mov
jmp
adc
push
lea
mov
enter
add
out
pusha
mov
mov
mov
sbb
movs
xor
mov
cmp
xlat
stos
dec
xchg
mov
mov
adc
repnz
dec
shr
imul
adc
mov
rcr
or
aas
inc
push
retf
bound
ret
push
(bad)
pop
fist
and
or
jmp
dec
xchg
in
retf
fs
xchg
adc
test
jne
je
out
hlt
clc
stos
inc
retf
jg
mov
in
sti
fsub
or
scas
fadd
lahf
daa
(bad)
je
test
ins
mov
lahf
addr16
hlt
int
fcom
das
fcmovu
jns
mov
sub
mov
addr16
movs
popa
or
jmp
sub
iret
jbe
aaa
pop
in
(bad)
xchg
(bad)
xor
push
jae
(bad)
jb
bound
mov
es
xchg
and
jecxz
retf
fild
xchg
imul
dec
inc
push
inc
ret
aad
test
and
adc
jae
cmp
retf
dec
ins
pop
mov
sbb
push
jns
fild
fst
pop
dec
popa
sbb
push
(bad)
aam
bound
hlt
pop
pop
fistp
mov
cmc
(bad)
idiv
sbb
repz
push
stos
push
fldenv
push
mov
out
or
sub
adc
pop
fist
cli
push
inc
sar
into
jl
stos
mov
dec
fld
fwait
repnz
lods
cmp
adc
fnstenv
sbb
inc
add
jne
dec
mov
cdq
fisttp
push
cmc
mov
loopne
xchg
inc
pop
dec
and
addr16
jle
jnp
cmc
mov
mov
cmc
add
in
(bad)
mov
es
pop
daa
jmp
cmps
or
jne
add
xor
rol
sbb
add
fmul
fwait
push
lahf
xchg
gs
jp
sbb
aad
sbb
dec
xchg
xor
es
inc
adc
call
jp
fcomip
popa
xchg
sub
mov
neg
mov
xchg
fsubr
add
hlt
xor
jno
das
inc
jae
xchg
jmp
push
fisub
movs
je
pushf
aas
xor
push
pop
fsubr
cli
cmp
xor
xchg
add
sub
lods
jle
sub
addr16
xchg
and
or
imul
mov
xchg
rcr
cwde
add
cmp
inc
inc
repnz
into
pop
fndisi(8087
dec
fstp
mov
aaa
(bad)
fcomp
loopne
ja
or
data16
push
push
xchg
jle
popf
into
ret
sbb
pop
inc
pop
sub
mov
and
stc
mov
aaa
pusha
xor
arpl
add
(bad)
cwde
fbstp
repnz
mov
mov
neg
pop
jge
sbb
cmp
push
push
pop
mov
mov
add
sub
xchg
cwde
adc
cmc
mov
or
mov
xchg
xor
cmp
(bad)
xor
mov
xchg
fst
fimul
sbb
cwde
jge
scas
push
pop
jmp
loopne
fs
imul
adc
dec
stos
or
dec
pop
dec
(bad)
lock
push
scas
mov
mov
daa
movs
xchg
push
es
bound
ret
test
sbb
out
jmp
fst
frstor
adc
mov
inc
pop
or
mov
xor
idiv
vmwrite
loop
sbb
out
stc
daa
and
adc
or
push
wbinvd
adc
pop
cmp
retf
and
or
test
push
cdq
mov
jno
lds
mov
pop
cmc
test
dec
mov
or
fld
push
sub
mov
outs
xor
loopne
xor
rcl
jmp
inc
jns
shr
sub
outs
mov
movs
clc
lods
int3
repz
and
fmul
adc
shr
icebp
or
(bad)
xor
or
sub
xor
jge
daa
call
or
xor
ja
in
hlt
xor
dec
outs
add
(bad)
outs
jne
call
sbb
lea
rol
cmc
xchg
(bad)
adc
repnz
(bad)
mov
sahf
lods
lock
inc
and
pop
lea
pop
pop
push
xor
mov
enter
leave
adc
movsx
mov
imul
mov
fmulp
repz
stos
lds
nop
jmp
sub
retf
loope
mov
cmps
push
retf
or
jmp
pop
jnp
xchg
ror
rcr
add
mov
test
ins
in
xchg
inc
add
and
outs
push
mov
mov
rol
push
test
loopne
sti
xchg
data16
fdivp
inc
sbb
or
shl
(bad)
push
data16
lock
repz
adc
cs
dec
mov
jmp
fsubr
daa
dec
push
mov
es
jnp
inc
ret
popa
xlat
pop
data16
in
sub
inc
pushf
loopne
mov
and
pop
push
dec
clc
adc
adc
(bad)
xchg
repnz
xor
jg
add
pop
xchg
add
sub
jb
mov
mov
in
(bad)
fmul
lahf
dec
dec
jns
(bad)
cs
pop
xor
jo
mov
jle
stos
xchg
sub
or
cmc
sub
shl
xchg
lahf
mov
test
mov
jnp
enter
(bad)
inc
fbld
push
fbld
xor
icebp
push
cdq
inc
mov
(bad)
cmp
push
gs
cmp
mov
sbb
fucomip
adc
xor
sub
mov
cmc
std
cmp
movaps
lods
add
pop
sbb
adc
scas
loope
jne
lea
fld
mov
(bad)
xchg
in
adc
sub
or
dec
pop
cmp
in
push
aad
jnp
pop
test
in
nop
dec
cmp
pop
int
sahf
clc
daa
cmc
jmp
retf
sbb
jge
dec
call
rol
cwde
icebp
add
jno
jns
dec
imul
lahf
repnz
sub
xor
lea
jmp
test
add
inc
add
retf
xchg
mov
xchg
mov
mov
mov
jnp
mov
scas
imul
jge
pop
fnsave
leave
jno
call
imul
jmp
out
fmul
pop
adc
push
mov
dec
outs
fwait
sbb
push
push
retf
pop
mov
xchg
cld
test
jl
sub
fbld
jns
rol
push
fld
mov
test
add
dec
and
retf
add
pop
dec
mov
icebp
push
or
add
sub
mov
popa
ins
js
inc
xchg
mov
fadd
gs
ins
adc
mov
les
les
jmp
sbb
adc
loop
imul
fimul
in
xchg
cmp
mov
or
mov
(bad)
jge
xchg
es
or
das
pop
sub
xchg
or
inc
cs
int3
(bad)
mov
ffreep
push
sub
push
or
cdq
inc
stos
adc
and
lock
dec
int3
imul
cmp
(bad)
repnz
mov
icebp
xchg
add
(bad)
cmp
cmp
jg
(bad)
dec
cwde
(bad)
out
aam
out
inc
add
xor
(bad)
ret
and
lock
add
es
dec
xchg
outs
xchg
test
mov
dec
outs
xchg
push
fs
and
cli
jp
xlat
jg
sbb
add
(bad)
mov
imul
popw
bound
int3
push
ret
cmp
xor
ss
retf
sbb
or
inc
cwde
std
cmp
enter
imul
sti
fadd
and
inc
jmp
icebp
pop
nop
movs
imul
push
rol
add
jmp
mov
mov
shr
add
inc
repz
sar
xchg
addr16
aas
fisttp
stos
pop
scas
ret
(bad)
and
lods
pop
cmp
popf
push
loopne
jmp
je
int3
xor
imul
and
inc
movs
sub
add
fsubrp
cmovl
add
push
xchg
ss
in
sbb
dec
cs
loopne
retf
imul
cmc
in
fs
xchg
or
outs
(bad)
cli
out
pop
and
aas
(bad)
cmp
ins
adc
push
sbb
dec
jl
arpl
loopne
jge
(bad)
mov
fdivr
pop
retf
mov
sbb
dec
popf
dec
jmp
jp
(bad)
dec
push
and
xor
int
test
call
(bad)
mov
sub
rcr
add
push
ret
mov
mov
push
leave
pop
xchg
repnz
sbb
addr16
dec
shl
movs
aas
into
mov
scas
mov
jge
inc
inc
jnp
push
sti
outs
inc
sbb
mov
je
scas
xor
add
mov
xchg
inc
pop
jp
xor
pop
or
xchg
rol
pop
sbb
mov
adc
mov
inc
add
dec
call
jnp
out
lods
pop
call
add
and
mov
pop
mov
enter
and
pop
mov
call
arpl
xchg
cs
push
sbb
dec
ret
push
mov
or
bound
loop
addr16
mul
out
ficomp
pop
jp
cwde
fldcw
lods
shl
xchg
test
mov
xchg
in
(bad)
leave
adc
cmc
into
ja
or
cs
jbe
lock
ds
xchg
push
push
(bad)
outs
pusha
xlat
or
add
push
div
repnz
(bad)
movs
mov
stos
inc
test
mov
xor
cdq
pop
jge
mov
data16
cmp
sbb
add
inc
mov
aas
jl
xchg
scas
push
mov
sti
daa
mov
xchg
cmc
jmp
jle
inc
clc
sub
je
jns
or
cmp
adc
iret
mov
shr
xor
lds
adc
in
or
(bad)
pop
jp
cmp
lds
outs
das
in
mov
add
mov
inc
sar
nop
out
inc
loopne
xchg
lods
adc
or
pop
(bad)
rcr
jbe
aas
mov
hlt
mov
dec
push
inc
hlt
add
loopne
adc
and
ret
xchg
mov
cmp
into
pushf
inc
popa
pusha
mov
xchg
aaa
and
cmp
and
xchg
xchg
add
and
add
dec
fdiv
sbb
ficom
xor
call
pop
xchg
jo
jns
ins
jae
aam
aaa
inc
cmp
outs
and
mov
mov
ret
adc
pop
sub
mov
std
movs
in
les
popa
push
and
in
daa
inc
add
jl
mov
or
out
(bad)
xor
jns
outs
lahf
push
iret
xchg
mov
add
dec
ret
mov
and
leave
cmp
pusha
vmovq
enter
mov
int
lods
dec
push
into
stos
adc
pop
sub
(bad)
adc
jp
ins
out
arpl
je
sub
mov
jno
ret
pop
fisttp
popf
sub
dec
xor
std
add
pusha
cwde
mov
inc
pushf
test
lods
stos
push
sub
mov
fist
hlt
sbb
ds
xor
mov
dec
stc
and
and
push
jmp
pushf
shr
dec
scas
mov
mov
mov
loop
sub
iret
aad
inc
jnp
dec
test
stos
int3
ja
in
pop
sbb
lods
(bad)
shl
in
(bad)
mov
stos
jo
cwde
rcl
push
add
in
fucomip
(bad)
(bad)
rol
sub
hlt
pushf
push
retf
mov
mov
leave
adc
push
into
loope
xchg
mov
mov
test
mov
mov
and
imul
pop
push
jno
stos
cmp
and
out
(bad)
sub
dec
ret
gs
dec
popa
(bad)
cld
stos
xor
arpl
fwait
adc
push
and
xor
cmp
inc
jmp
sub
mov
fisubr
cmp
pop
es
push
cmps
jle
cmc
sub
adc
xchg
and
pop
fdivr
(bad)
shl
shr
in
ror
rol
ret
jnp
mov
int
leave
pop
and
push
adc
out
mov
jb
jecxz
mov
jae
jnp
inc
movs
popf
cmp
jmp
imul
inc
rol
and
dec
inc
xchg
enter
fsubr
aaa
xor
add
xor
push
pop
js
mov
mov
test
jmp
sbb
rcr
sar
les
push
inc
loopne
mov
jne
aad
cwde
jp
or
pop
cs
cmp
sbb
imul
cld
dec
xlat
adc
pop
or
push
lods
push
out
call
xchg
fsqrt
sbb
mov
push
out
or
dec
rcl
jno
dec
rcr
dec
(bad)
ror
and
mov
clc
daa
add
cmp
ror
add
mov
arpl
stos
jecxz
in
fdiv
icebp
mov
xor
pop
loope
(bad)
stos
pop
cmp
cmps
dec
mov
call
lea
xchg
xlat
jg
scas
test
rcr
out
xor
sub
adc
stos
mov
sbb
popf
rcl
xchg
arpl
imul
retf
sbb
push
sub
leave
in
mov
unpcklps
pusha
fxch
cli
inc
ret
rcl
std
push
fdivr
cmp
es
pop
xor
mov
mov
out
push
push
icebp
fwait
test
daa
jno
add
in
std
jbe
mov
call
fstp
cmp
leave
mov
jmp
mov
xchg
inc
loope
sbb
push
inc
test
pop
neg
leave
jmp
sbb
int3
test
gs
sbb
pop
cdq
jle
out
mov
rol
adc
jbe
nop
fs
jae
out
pop
or
(bad)
push
or
shl
enter
outs
xchg
adc
das
or
sbb
popa
xor
xchg
fisub
push
jl
mov
shl
out
xchg
push
and
into
add
push
iret
ja
ret
jnp
dec
add
jo
sbb
inc
loop
dec
int
movs
mov
call
(bad)
mov
in
cmp
in
pop
dec
cmps
inc
dec
sbb
sub
lea
add
push
push
scas
jae
rcl
rol
push
cli
into
jg
adc
inc
xlat
fucom
xor
gs
mov
in
jbe
jo
jp
push
pop
loope
shl
loopne
mov
pop
push
mov
xor
sub
and
sub
inc
(bad)
mov
add
sbb
ret
cmps
nop
repz
jp
cwde
pusha
mov
xchg
jl
sub
aaa
pop
movs
add
pop
push
(bad)
dec
cmp
mov
je
cmp
and
pusha
cld
popa
int
dec
xchg
push
or
or
rcr
rol
adc
xchg
call
in
and
(bad)
fadd
mov
scas
sbb
push
pop
mov
inc
not
movs
das
and
into
popa
inc
and
cmp
repnz
mov
test
inc
je
pop
fldenv
std
ret
cmc
mov
xor
fcmovbe
inc
mov
ins
jne
mov
addr16
sub
scas
pusha
mov
clc
dec
rcr
movs
xchg
add
or
mov
movs
icebp
mov
adc
push
xchg
bound
mov
rcr
out
mov
ds
sti
sub
fld
int
mov
dec
(bad)
fimul
mov
mov
(bad)
sbb
inc
movs
add
cmps
push
push
pop
xor
out
dec
out
push
test
scas
lea
aas
pop
and
add
mov
cmc
pusha
mov
pop
gs
pop
xchg
pop
xor
sbb
inc
pop
js
push
jl
jo
std
or
popf
mov
loope
and
xchg
ss
cmp
add
icebp
or
into
nop
rol
inc
inc
xor
jge
mov
inc
lods
call
or
and
adc
xlat
dec
aad
mov
or
stos
int
mov
outs
sub
sahf
loopne
data16
je
xchg
cmps
cld
sbb
mov
or
and
mov
xor
int
jb
mov
and
in
push
push
adc
mov
pushf
add
cmp
xchg
jae
push
cld
ins
mov
jns
jb
out
(bad)
(bad)
ins
ret
cld
retf
(bad)
fwait
cmc
push
sbb
push
inc
mov
push
xchg
and
rol
and
lods
mov
sbb
sub
addr16
cmp
cwde
movs
movs
repz
out
sub
mov
clc
test
mov
mov
mov
sbb
test
adc
pusha
repz
dec
in
rcl
aas
push
mov
fldcw
ret
je
mov
lods
aas
frstor
push
out
int
ins
popf
scas
ror
ret
lods
mov
lods
jge
push
rol
repz
repz
aad
cmc
sbb
mov
out
add
fcmovnu
push
nop
or
add
xor
fisubr
pop
es
repnz
daa
pop
add
popf
stos
cdq
lods
add
bound
iret
or
dec
in
pop
jnp
fisubr
push
ja
push
aaa
scas
cmp
push
mov
addr16
xor
das
imul
(bad)
ja
sbb
pop
cmp
push
fs
loop
fsubr
stos
cmp
dec
mov
push
hlt
xchg
jne
and
mov
jb
in
lods
sbb
jle
mov
scas
xchg
mov
cmp
and
push
xchg
cli
addr16
ficom
inc
adc
push
jne
add
cmp
rol
pushf
or
cmp
mov
add
gs
movs
add
dec
outs
mov
jnp
into
loope
jg
mov
inc
push
cli
(bad)
push
or
(bad)
outs
ret
pushf
xchg
mov
xor
lods
xor
sbb
(bad)
dec
mov
xor
mov
xchg
test
sub
inc
or
jno
adc
jl
out
or
xchg
jp
in
call
push
out
mov
lods
icebp
mov
sub
ss
add
(bad)
xchg
daa
mov
retf
movs
mov
mov
es
adc
xor
pushf
sub
ret
imul
and
or
rcl
inc
pop
add
imul
popa
lds
test
shr
cmps
js
mov
sub
scas
jge
mov
push
jne
dec
xor
fs
jp
sbb
and
cmp
dec
movs
pop
test
shl
jl
fld
sub
ret
mov
pop
scas
out
out
jle
pusha
sbb
into
out
repz
in
es
sub
xchg
movs
add
imul
pop
sti
dec
bound
sahf
add
cmp
fbstp
xchg
and
in
fcomp
iret
mov
stos
jmp
lods
or
jmp
pusha
clc
and
sti
add
push
pop
mov
call
movs
inc
jp
push
add
imul
mov
cmp
xor
adc
pop
pop
jmp
push
pop
je
or
xchg
imul
xchg
in
ret
ja
in
ficom
adc
(bad)
push
cmps
cmp
mov
test
and
xchg
daa
xchg
(bad)
jge
mov
shr
ficomp
loopne
sahf
(bad)
dec
ss
adc
rol
aas
sbb
mov
xchg
fist
xchg
cmc
or
(bad)
cmp
inc
xchg
in
jle
fs
pop
fild
inc
dec
pop
sub
and
sub
outs
aas
adc
sbb
mov
push
jmp
sub
rol
(bad)
sahf
jmp
aad
mov
mov
(bad)
outs
sub
sahf
mov
or
add
cmc
int
outs
test
rol
