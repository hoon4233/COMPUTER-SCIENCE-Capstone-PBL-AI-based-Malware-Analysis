push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
mov
mov
jmp
xor
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
mov
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
shr
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
add
mov
jle
sub
mov
sar
jmp
call
or
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
inc
or
jge
xor
cmp
dec
dec
jmp
mov
push
mov
mov
push
pop
mov
pop
push
ret
ror
ror
mov
jbe
xchg
add
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jns
jne
jne
lea
mov
lahf
adc
nop
add
xlat
mov
popf
pop
pusha
dec
and
jg
adc
daa
jecxz
inc
sbb
lahf
mov
mov
cli
and
(bad)
jb
add
scas
mov
sub
mov
jg
popa
mov
inc
fistp
hlt
cld
cmps
push
mov
xor
aad
shr
add
push
call
mov
and
mov
sbb
or
add
mov
jnp
or
lock
jecxz
xor
ret
push
or
add
fiadd
sub
mov
xchg
mov
push
add
loope
(bad)
pop
sub
mov
out
je
jmp
adc
ins
jecxz
mov
adc
add
add
push
loopne
or
inc
and
xor
ret
add
je
loope
inc
mov
movs
(bad)
hlt
add
push
adc
add
push
mov
xor
pop
inc
call
add
add
rol
and
sub
mov
pop
test
cli
add
jecxz
add
mov
sub
dec
nop
and
je
jmp
mov
das
pushf
xor
lds
xor
add
add
and
sub
fistp
aam
jmp
mov
and
(bad)
lods
lods
test
popf
mov
retf
mov
mov
sti
mov
mov
sbb
ror
add
push
lea
mov
mov
sbb
inc
add
and
mov
(bad)
in
jg
scas
dec
dec
push
inc
add
mov
aaa
and
dec
call
push
and
mov
sbb
rol
add
and
xchg
ret
hlt
add
je
add
cli
add
push
pop
(bad)
mov
add
fmul
and
jl
add
cmps
jne
mov
and
and
int3
and
inc
std
cs
mov
mov
and
jmp
mov
mov
mov
push
jmp
sub
dec
fisttp
test
jmp
mov
or
lea
add
das
pushf
xor
cmp
mov
adc
add
retf
jl
pop
pop
pop
ret
add
jmp
fild
in
or
add
mov
adc
inc
and
add
xor
hlt
mov
loope
push
xchg
fcom
push
push
and
sub
jmp
push
mov
pop
push
mov
push
pop
mov
mov
push
mov
mov
mov
jmp
ror
jl
test
add
add
jmp
call
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
shl
jg
shl
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
shl
jg
test
xchg
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outs
or
mov
jae
xchg
add
dec
and
mov
mov
mov
pop
adc
mov
mov
cmp
pusha
clc
rol
ins
mov
dec
xchg
mov
mov
jg
rcl
sbb
and
cmps
xchg
addr16
sub
test
adc
repz
sub
sar
int
(bad)
sbb
ret
xor
test
sub
mov
je
sar
pop
jo
scas
or
clc
mov
and
setle
add
lahf
add
inc
jge
enter
neg
inc
ficomp
test
add
mov
add
inc
neg
in
inc
and
push
(bad)
out
add
jmp
call
sar
mov
and
int3
mov
push
cli
add
inc
mov
mov
mov
mov
and
test
pop
add
add
jnp
push
cld
cwde
inc
xor
mov
add
add
ret
inc
and
sub
mov
je
jmp
jmp
sub
fsub
push
jbe
std
mov
cmp
sti
mov
(bad)
rcl
lahf
add
inc
and
dec
cmps
inc
mov
mov
xchg
inc
fimul
add
jmp
add
add
mov
and
jmp
test
mov
push
(bad)
and
mov
jo
adc
xor
inc
sub
push
gs
pop
rcr
(bad)
ins
and
inc
pusha
dec
imul
jl
add
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
mov
or
jl
cmp
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
sub
shl
jb
cmp
jmp
mov
mov
push
mov
mov
pop
mov
push
pop
mov
push
ret
or
test
jmp
call
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
dec
xchg
inc
jae
and
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
je
dec
or
push
or
pushf
add
sub
mov
add
test
add
push
fisubr
out
nop
adc
outs
scas
sub
mov
mov
mov
(bad)
sbb
add
sub
add
mov
gs
sub
mov
les
xchg
jbe
mov
add
xchg
sbb
jp
push
sub
movs
sub
imul
add
fiadd
push
out
dec
outs
inc
and
jns
lods
dec
add
add
repnz
repz
mov
push
(bad)
fisub
gs
inc
add
loopne
push
scas
add
xchg
and
jg
push
dec
add
test
add
in
mov
mov
pushf
mov
cmps
jbe
add
jmp
mov
js
cmp
cmp
ins
jmp
mov
add
and
add
add
mov
and
lea
add
jmp
test
and
add
rcr
lods
xor
inc
loopne
jge
jmp
call
retf
pop
sub
and
je
js
add
pushf
mov
mov
add
sub
mov
and
sub
fiadd
add
lock
and
add
sub
inc
inc
xor
jecxz
add
aas
add
(bad)
sbb
pop
inc
mov
ud0
add
add
sub
mov
inc
sub
jns
loopne
psrlw
scas
add
sbb
add
mov
les
outs
add
mov
por
add
xchg
jmp
mov
mov
add
or
and
push
or
add
in
lock
inc
mov
add
mov
movs
jg
jmp
out
jbe
mov
call
daa
test
cmps
add
jmp
mov
jl
add
inc
repnz
jo
and
out
jmp
mov
dec
dec
cmp
int3
mov
je
jmp
das
cmps
inc
jb
add
inc
mov
sbb
setle
add
jmp
mov
sub
mov
and
repz
push
test
mov
add
mov
and
les
xchg
add
add
in
and
dec
add
dec
add
retf
sbb
jecxz
test
or
cmps
inc
mov
add
scas
jecxz
push
loope
and
retf
(bad)
mov
add
jmp
mov
loopne
xchg
cs
mov
inc
(bad)
push
add
add
xchg
xor
add
rcr
les
mov
add
movs
add
inc
mov
das
jns
pop
jmp
mov
repnz
mov
add
push
adc
mov
je
stos
xchg
lock
add
aaa
add
mov
adc
test
add
syscall
add
mov
sub
mov
arpl
add
das
test
mov
add
jnp
push
cmps
les
or
add
xor
inc
jle
xchg
xor
mov
je
dec
cmp
add
mov
frstor
popa
movs
jne
add
je
jmp
rdtsc
add
add
dec
rcr
repnz
mov
add
in
pushf
add
inc
xor
add
dec
add
mov
mov
and
add
add
cld
add
add
mov
out
mov
std
xchg
popf
cwde
dec
fs
mov
cmp
setne
ins
jg
jnp
and
add
sub
movs
add
lods
add
(bad)
cli
js
inc
idiv
mov
add
ret
cmp
mov
(bad)
jbe
dec
jmp
mov
mov
jmp
mov
sete
mov
ficomp
mov
cmp
cmovl
dec
test
add
or
and
jg
add
imul
add
push
jo
pop
sub
add
test
and
add
add
popa
inc
stc
add
push
add
add
xchg
les
test
dec
add
(bad)
ficom
sub
or
xchg
and
add
inc
ror
and
add
(bad)
jmp
(bad)
ror
adc
add
test
inc
add
out
enter
out
add
test
add
jmp
mov
stos
into
add
push
add
add
scas
add
mov
jmp
add
ins
test
mov
repnz
xor
repz
test
add
add
ja
aam
add
mov
jmp
(bad)
fs
add
add
add
(bad)
repnz
fisub
or
bound
test
add
or
dec
mov
jmp
mov
mov
es
xor
mov
jmp
(bad)
cmp
in
add
pop
sub
nop
add
add
mov
add
in
loopne
add
mov
mov
jmp
test
add
or
sbb
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xchg
sub
rol
jmp
mov
mov
mov
mov
mov
pop
push
mov
mov
mov
ret
shl
cmp
jmp
call
dec
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sub
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
sbb
popf
sbb
ret
hlt
jge
gs
or
add
mov
stc
and
add
add
mov
mov
fadd
add
pop
cmp
add
rol
sti
and
mov
add
mov
mov
movzx
and
pop
sbb
mov
mov
test
fdivr
test
add
add
mov
(bad)
rcr
jg
pop
add
add
jg
cmp
mov
fcom
retf
sahf
dec
add
add
pop
test
jle
out
popf
mov
lods
test
mov
jg
pop
add
add
mov
sub
mov
je
pop
adc
push
mov
add
mov
dec
shl
add
(bad)
add
rol
add
mov
and
add
sub
mov
clts
outs
or
jmp
mov
sub
pop
sbb
xor
add
fmul
add
mov
mov
add
mov
scas
xchg
bound
jg
rol
add
mov
adc
add
sub
mov
rcl
mov
add
add
adc
add
inc
jns
sbb
mov
add
jg
pop
add
jle
test
add
test
sbb
add
xchg
(bad)
push
scas
xor
xchg
add
out
mov
test
mov
sub
mov
add
jns
or
xlat
pop
sbb
xor
add
(bad)
ins
dec
cmp
mov
add
push
xchg
add
xlat
add
sub
xor
fdiv
cmps
out
add
add
pop
in
add
das
mov
paddsw
xlat
shr
sahf
movs
xor
hlt
test
push
push
add
sub
mov
bound
popf
add
jmp
mov
in
movs
add
imul
mov
icebp
cld
or
add
mov
cmp
psubsw
mov
xchg
leave
jmp
xor
pop
ret
or
jmp
cmc
ss
test
ins
sub
jmp
xchg
cwde
add
rcl
add
add
add
jle
sub
mov
stc
(bad)
push
bound
add
bound
mov
push
mov
sub
imul
and
mov
(bad)
sbb
mov
cmp
add
je
xchg
dec
xor
test
subps
js
out
pop
push
add
mov
cmp
test
sbb
add
fmul
cmp
sahf
add
add
xchg
mov
fimul
add
add
test
add
mov
sub
mov
punpcklwd
mov
add
jle
cmp
push
mov
test
rol
sahf
jg
cmp
add
add
lahf
mov
mov
mov
xchg
paddsw
add
jmp
mov
sbb
cmp
xchg
lds
add
rol
mov
add
push
cmps
mov
add
loope
mov
add
mov
dec
adc
xchg
dec
jecxz
or
mov
aas
pop
add
jle
mov
sub
mov
jg
jmp
adc
add
push
fist
mov
mov
test
loop
repz
jge
add
pop
push
and
add
mov
pop
test
add
add
ins
imul
adc
add
add
mov
movsx
jp
mov
add
mov
ss
add
add
mov
and
add
mov
ds
add
rol
jg
mov
test
(bad)
lods
add
jmp
mov
and
add
sub
mov
movsx
push
mov
mov
and
test
ins
fist
jcxz
test
arpl
aam
movs
jmp
gs
ins
jg
cmp
mov
ins
(bad)
jecxz
xlat
shl
add
jle
add
mov
test
cmps
imul
inc
xor
rcl
mov
rcr
or
add
add
add
push
mov
sub
sub
out
mov
fsubr
add
ins
test
add
mov
jg
cmp
add
add
jle
shl
dec
ret
push
(bad)
and
mov
xlat
rcr
in
out
add
fimul
add
add
ins
test
mov
inc
push
add
shr
mov
and
add
add
pop
add
mov
jle
cmp
inc
mov
sti
mov
test
jg
dec
xor
sar
xor
in
mov
sub
or
add
stc
(bad)
lods
xchg
bound
jmp
mov
in
add
scas
mov
add
mov
xchg
add
and
xchg
bound
lods
sub
sar
popa
dec
add
mov
mov
add
mov
push
outs
scas
iret
js
and
rol
jg
aas
inc
mov
add
je
add
mov
xor
rol
xchg
(bad)
jae
add
jmp
mov
popf
mov
test
bound
add
jmp
mov
sub
mov
addps
xor
add
mov
and
add
add
mov
push
mov
ins
test
pusha
sldt
jmp
mov
xor
sahf
movs
sbb
mov
jnp
add
jle
jmp
mov
mov
sub
mov
and
add
rcl
rcl
cmp
and
add
sub
mov
dec
or
add
adc
and
pop
or
push
retf
movs
add
and
add
mov
add
push
outs
add
pop
test
mov
xlat
sub
mov
xor
add
je
pop
xor
in
add
sub
mov
xchg
retf
add
ins
pop
push
xchg
bound
lahf
movs
xor
add
shl
and
add
mov
test
pop
add
add
add
sub
mov
and
imul
(bad)
dec
rcl
add
mov
add
mov
in
add
int3
mov
and
cmp
test
test
imul
or
repz
add
popa
test
shl
pop
add
(bad)
add
ins
mov
mov
xchg
add
mov
fistp
add
add
out
cmp
push
mov
pop
cmp
test
push
xchg
je
ja
add
xor
retf
add
sub
mov
je
jmp
jmp
add
sub
mov
and
add
je
pop
je
add
mov
cmp
in
dec
int3
xchg
bound
rdpmc
retf
fiadd
sahf
jmp
mov
and
out
add
popf
outs
mov
enter
bound
pop
add
cmp
add
mov
call
and
add
xor
push
(bad)
add
add
add
add
lahf
std
test
and
ins
test
test
sahf
add
sub
add
adc
add
push
adc
test
add
prefetch
add
push
adc
(bad)
rcr
aam
push
pop
push
mov
add
aaa
pop
jle
pop
cli
xchg
mov
sub
sbb
mov
fild
jno
add
gs
mov
mov
sub
or
push
je
jmp
mov
xchg
in
add
cli
cmp
and
jg
jg
loope
daa
add
mov
add
add
test
sub
jmp
and
add
add
test
cdq
add
dec
js
rol
hlt
test
push
add
push
movs
mov
test
and
ins
add
test
add
jge
mov
xlat
pop
sbb
add
cli
mov
and
out
mov
pop
or
jmp
mov
mov
jecxz
std
pop
and
add
mov
add
add
mov
sub
jecxz
and
add
add
add
rcr
in
add
(bad)
mov
test
cli
sti
mov
add
outs
imul
test
sub
pop
sti
retf
push
add
cmp
xchg
xchg
mov
and
xchg
bound
sub
mov
xchg
and
rol
xchg
jbe
add
mov
mov
add
push
xor
(bad)
adc
push
bound
add
add
add
jg
sub
mov
je
jmp
mov
call
mov
je
jmp
test
add
add
mov
and
jno
imul
jmp
mov
sub
mov
lfs
out
add
push
add
add
or
cmp
mov
and
stc
out
xor
add
jmp
pop
test
push
mov
inc
lods
jo
cli
pop
mov
test
test
xchg
add
or
leave
cmp
xchg
test
add
jmp
mov
jp
jge
lea
test
push
add
(bad)
rcr
inc
imul
mov
mov
pop
cmp
test
push
dec
loopne
pop
xchg
mov
cmp
add
inc
add
add
out
mov
rol
inc
mov
jno
test
add
jmp
loope
and
arpl
mov
push
out
add
push
add
add
test
mov
jle
sbb
push
in
and
gs
arpl
add
xlat
add
adc
add
sub
mov
mov
jle
loop
ins
test
add
mov
je
jmp
mov
and
out
add
call
mov
enter
cmp
hlt
jp
add
(bad)
xchg
es
mov
ss
pop
add
jmp
mov
mov
mov
add
mov
and
je
jmp
mov
ins
add
jle
popa
ficom
out
inc
rcl
test
arpl
add
rcr
inc
add
add
addr16
jae
je
ins
ss
add
jge
and
add
push
int3
in
lock
pop
inc
and
andps
sub
add
test
dec
mov
lock
and
xor
ins
pop
push
bound
pop
pop
or
xlat
mov
mov
mov
cmp
xchg
test
call
ret
add
push
adc
mov
adc
add
push
cli
add
add
mov
pop
pop
cmp
test
push
add
dec
test
xor
xchg
and
pushf
add
cmp
cmove
mov
out
mov
popa
or
sub
mov
xchg
pop
inc
mov
cmp
fmul
test
call
xchg
or
mov
mov
mov
dec
and
imul
cli
xchg
bound
mov
inc
ror
xor
dec
ja
mov
mov
(bad)
xor
test
mov
push
jmp
add
adc
jg
cmp
and
mov
add
add
mov
and
push
mov
push
inc
repz
push
add
push
mov
out
push
add
mov
mov
inc
inc
dec
add
add
mov
and
aas
scas
jb
add
mov
and
add
jg
add
xchg
sub
adc
add
test
bound
sub
jb
fnstenv
movs
mul
jge
out
inc
xchg
mov
shl
imul
pop
add
mov
jmp
mov
mov
mov
pop
repz
in
add
mov
mov
mov
pop
hlt
and
push
call
shl
cs
jmp
mov
movaps
and
add
add
inc
add
mov
test
mov
add
movzx
push
adc
adc
inc
add
fwait
or
pop
mov
mov
push
mov
push
or
jg
and
inc
and
add
mov
pop
inc
mov
add
mov
inc
popa
mov
mov
(bad)
mov
ins
imul
bound
and
add
sar
add
out
add
inc
push
cmp
jecxz
and
arpl
add
push
xlat
add
sub
adc
jge
mov
add
adc
inc
add
and
add
add
ins
test
mov
cmp
pop
adc
inc
add
sub
xor
mov
xchg
add
out
cmp
movzx
push
pop
add
add
or
adc
inc
add
mov
shr
bound
pushf
add
inc
add
add
add
cmp
cmp
mov
and
jg
and
mov
xchg
or
xchg
mov
add
mov
hlt
mov
or
push
mov
add
mov
and
add
push
mov
add
and
pop
push
and
mov
mov
call
mov
cmp
pop
pushf
ret
and
add
xchg
sub
add
mov
dec
push
imul
mov
add
mov
mov
pop
jmp
sub
add
inc
xchg
add
and
ins
test
mov
cmp
out
shr
test
(bad)
add
jmp
mov
pop
add
shl
jg
cmp
test
add
test
add
repz
cmp
mov
and
add
out
adc
cmp
and
add
mov
add
add
fisub
add
xchg
jmp
xchg
pop
test
out
inc
and
call
mov
mov
ja
push
or
(bad)
xchg
mov
add
lods
outs
add
or
cmp
test
xor
push
daa
xchg
fist
in
retf
xchg
fist
add
push
fwait
daa
retf
hlt
jbe
add
dec
or
retf
push
add
cmp
jmp
mov
mov
mov
and
pusha
add
aad
add
add
adc
sub
inc
and
push
sbb
add
ja
and
jg
add
ror
inc
outs
xchg
add
xlat
rcl
jg
cmp
mov
out
and
push
inc
mov
and
mov
or
xchg
pop
(bad)
pop
sub
out
cs
mov
add
retf
and
imul
mov
xlat
rcr
and
xor
jg
add
dec
add
add
mov
sar
push
jae
test
test
mov
shl
mov
and
out
add
fmul
hlt
mov
mov
test
outs
add
mov
fsincos
sar
push
push
ret
add
jmp
mov
adc
add
bound
mov
xchg
push
xor
mov
sub
sar
test
add
mov
xchg
add
add
shl
mov
mov
and
add
push
ret
daa
ror
sahf
dec
scas
add
jg
push
add
add
ins
add
(bad)
mov
ins
ss
in
jg
add
adc
pushf
movs
xor
jg
mov
test
add
sbb
inc
ins
ins
add
add
mov
cmp
fcom
call
inc
jl
out
cmp
mov
add
test
push
loopne
cmps
jge
add
mov
sub
jg
pop
mov
arpl
xchg
retf
js
push
add
add
arpl
add
pop
test
add
rol
std
inc
ins
fisttp
mov
xchg
pop
sub
add
inc
clc
add
shr
add
rol
add
js
push
add
ins
add
mov
mov
dec
cli
xchg
rol
ins
fistp
inc
add
mov
mov
jmp
imul
xchg
fist
add
add
xchg
or
dec
(bad)
add
add
ja
xor
jg
and
dec
pusha
mov
cmp
ins
test
btr
mov
and
xchg
add
jmp
mov
mov
pop
xchg
push
mov
xchg
fist
mov
mov
add
lods
xchg
xchg
fist
bound
and
add
jg
(bad)
push
pop
add
sbb
pusha
xchg
pop
cmp
test
add
(bad)
push
and
add
movs
scas
in
ja
jmp
cmp
and
mov
(bad)
xlat
hlt
fs
pop
fldcw
add
mov
rcl
add
hlt
pop
xchg
add
push
mov
xchg
ds
and
in
and
call
rcl
pop
hlt
or
xor
shl
or
sub
jae
add
add
jle
sbb
jmp
js
push
add
test
adc
xor
pop
rcr
and
add
rol
movzx
cmp
lods
mov
dec
push
imul
pushf
add
inc
add
mov
add
cmp
add
and
mov
cmp
hlt
push
jmp
inc
add
adc
cmp
sahf
jl
add
inc
add
add
mov
mov
add
add
add
pop
inc
retf
and
cmp
lods
or
jle
adc
xor
add
mov
pop
mov
pusha
add
mov
mov
mov
pop
cwde
adc
je
xlat
idiv
and
mov
pop
aad
add
std
add
imul
inc
and
jmp
mov
jmp
(bad)
mov
push
rol
jmp
mov
pop
inc
push
mov
test
add
test
xchg
mov
add
add
add
mov
add
push
add
pop
push
and
add
mov
nop
test
sbb
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
add
xor
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
not
dec
jb
shl
inc
add
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
and
inc
mov
jmp
call
mov
jns
dec
cmp
test
xchg
jmp
mov
mov
mov
push
pop
mov
push
pop
mov
mov
mov
mov
push
jmp
ror
jg
shr
ror
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
sub
push
arpl
add
js
jg
nop
lods
dec
(bad)
mov
push
dec
mov
or
fnsave
mov
mov
add
fiadd
lods
add
or
mov
mov
jg
jmp
test
and
sub
bound
inc
add
add
add
add
or
inc
(bad)
cmp
(bad)
fiadd
cmp
jmp
mov
sub
mov
xor
repnz
push
add
outs
mov
out
inc
and
cmp
mov
add
add
add
stos
dec
js
icebp
sub
mov
sub
sbb
add
add
mov
push
dec
sahf
mov
lds
addr16
add
sub
xor
fidivr
stos
je
icebp
pusha
xor
dec
and
std
dec
sbb
(bad)
push
stos
add
jmp
mov
mov
dec
stos
push
sbb
xor
add
mov
movs
mov
and
xor
sbb
mov
(bad)
sub
mov
xor
add
xor
lods
cs
mov
test
sti
or
add
xor
cmovne
bound
xor
pop
mov
mov
or
or
inc
iret
cmp
sub
mov
call
push
in
or
inc
and
out
push
sbb
inc
and
jmp
mov
call
push
push
aad
xor
cmp
out
mov
mov
stos
mov
mov
inc
or
or
add
adc
mov
mov
dec
mov
mov
mov
in
xchg
cmp
mov
mov
jmp
jmp
and
jmp
fdivr
pop
pop
push
sub
frstor
jmp
cmp
add
add
xor
push
adc
add
push
and
fs
pop
out
push
inc
and
jl
push
std
fld
fbld
bound
pop
pop
fnstcw
jle
ss
arpl
retf
adc
push
lahf
sbb
das
inc
lahf
xor
push
test
(bad)
fcom
loope
imul
fld
pop
adc
and
pushf
inc
cmp
hlt
mov
pop
sbb
int3
jg
pop
cmp
rcr
push
xor
add
lods
enter
dec
pushf
cmp
test
iret
push
xchg
sub
pop
add
and
cli
inc
leave
dec
push
xor
or
sub
fst
rcr
retf
pop
test
mov
fimul
xor
pand
push
pop
pusha
movs
call
fcom
inc
fs
add
clc
lahf
or
mov
test
jnp
int3
xchg
sti
sti
fstp
pop
pushf
ins
sub
inc
xchg
jne
mov
cli
in
sbb
jge
jno
inc
fucomip
aaa
jo
(bad)
pop
mov
push
repnz
shr
dec
pop
or
test
es
push
cmp
dec
cld
xchg
adc
and
lock
fidiv
xchg
repz
cmc
jae
mov
mov
sbb
xor
dec
pop
enter
push
stos
ficomp
push
psraw
sbb
mov
push
cld
dec
stos
jne
xor
rsm
cmps
pop
icebp
sti
cmp
push
sbb
mov
addr16
xor
or
fcom
out
mov
add
(bad)
fdivr
data16
pop
aam
adc
mov
mov
lods
cmp
dec
ficom
jmp
dec
ds
push
ins
inc
int
dec
(bad)
pop
push
fild
les
es
mov
mov
cdq
inc
sub
adc
or
and
aas
jmp
xchg
add
sub
xchg
xor
outs
jae
rcr
pop
cmp
cld
mov
add
or
or
add
(bad)
mov
fwait
cli
(bad)
fstp
mov
mov
data16
sbb
leave
(bad)
addr16
jns
cmps
shl
jns
sbb
mov
popa
mov
in
outs
dec
jp
fcomip
leave
sub
cmps
push
repnz
in
cmp
addr16
(bad)
sub
cmp
xchg
sbb
inc
in
jne
sub
push
add
adc
mov
sub
test
cmps
cmp
daa
enter
pop
mov
cmps
imul
jecxz
sub
loop
xor
push
ror
mov
es
pop
stos
xor
jle
pop
push
ss
gs
into
hlt
outs
dec
xor
mov
lea
jae
rcl
popf
pop
aaa
xlat
push
stos
inc
dec
arpl
cmp
mov
jle
sbb
fbstp
xchg
outs
test
inc
(bad)
adc
stos
popf
loopne
add
xchg
call
jmp
sbb
vmread
aam
mov
mov
ror
aad
fcom
inc
pop
stc
arpl
das
lea
gs
push
push
jb
inc
ds
mov
loope
stc
dec
push
mov
mov
fimul
sub
sbb
xlat
lahf
cmp
arpl
test
pop
jnp
imul
neg
jns
or
jl
cmc
div
mov
loop
addr16
cmp
cmove
inc
fisttp
mov
mov
jmp
jmp
(bad)
leave
cmp
enter
or
fisttp
inc
xchg
imul
sbb
jmp
addr16
sahf
xchg
add
jb
retf
test
push
mov
jne
mov
dec
test
(bad)
xor
mov
mov
pop
daa
(bad)
in
push
inc
ret
jl
or
test
push
mov
pop
imul
mov
cmp
cs
mov
outs
test
jp
sbb
cli
stc
push
or
and
sub
mov
xchg
mov
call
movs
sar
and
shl
xor
(bad)
stc
inc
jecxz
daa
sub
fiadd
jmp
in
mov
mov
fnstcw
lea
pop
xchg
shl
xor
arpl
add
fcmovnu
sbb
out
mov
clc
mov
inc
adc
adc
mov
shl
mov
inc
(bad)
icebp
stc
paddusb
popf
mov
dec
jmp
xchg
popf
jle
test
push
scas
(bad)
mov
dec
out
pop
adc
fs
and
pop
mov
or
mov
shr
(bad)
ret
(bad)
ds
fs
cmp
xchg
dec
in
xchg
xlat
mov
retf
jne
aaa
inc
jns
pushf
xor
and
mov
sub
cmp
cmps
fcmovnu
adc
inc
or
add
and
in
fsubr
mov
hlt
test
push
add
mov
in
xor
stos
adc
jne
mov
daa
fs
mov
mov
sti
pop
inc
jns
push
addr16
jle
lods
adc
test
dec
call
rcr
je
movs
push
or
cmp
mov
hlt
test
mov
(bad)
imul
xchg
cmp
mov
sbb
fs
lahf
mov
shl
jp
ja
or
fdivr
fnop
fs
lods
push
sahf
cli
div
mov
inc
jb
cdq
mov
cmp
int3
mov
push
out
mov
cmc
mov
or
or
pop
sub
fdivr
sub
xchg
cdq
lock
xor
xor
popf
jns
mov
sbb
push
aas
push
out
idiv
inc
ins
xchg
(bad)
aam
mov
int3
inc
add
xor
mov
sbb
sub
dec
loope
fst
daa
and
add
lods
aaa
in
pop
pop
inc
mov
(bad)
adc
mov
fwait
pop
hlt
xor
je
lods
mov
(bad)
(bad)
fisttp
dec
jmp
int
xor
fcom
mov
imul
stc
ret
ja
push
lea
xor
jl
jbe
mov
mov
jno
test
out
mov
dec
(bad)
ret
fwait
ins
aas
data16
cdq
imul
push
in
loop
outs
popf
xor
dec
leave
sbb
sbb
sar
dec
out
jne
jge
es
in
jne
add
cmps
jno
cmp
push
or
inc
(bad)
push
call
mov
adc
out
jle
pop
pusha
mov
inc
push
and
sbb
mov
test
leave
repnz
test
jl
jg
ins
nop
add
jae
sahf
aas
lods
lods
imul
int3
in
out
aam
leave
enter
hlt
cwde
sti
pop
scas
loope
and
add
push
retf
mov
into
cmp
test
push
mov
iret
inc
mov
test
shl
mov
je
pop
mov
das
ret
adc
clc
fwait
sbb
out
retf
adc
pop
dec
fisub
lahf
mov
es
add
mov
and
push
pusha
repz
arpl
mov
push
add
or
stos
push
leave
leave
mov
es
cmp
pusha
mov
shl
or
(bad)
mov
push
mov
fxch
sbb
in
sub
loope
mov
mov
icebp
(bad)
leave
lds
js
aaa
mov
push
xchg
mov
push
dec
test
cmp
sub
call
push
xor
retf
sub
sbb
arpl
adc
mov
fs
inc
mov
cmps
xor
xchg
into
retf
cmp
mov
pop
push
lds
aam
leave
and
rol
fsubr
inc
leave
jne
dec
jbe
xchg
pop
bound
sub
cld
xchg
cli
hlt
add
pop
dec
xor
xchg
gs
cmp
aad
jmp
cmps
stos
or
cmp
jmp
ror
mov
push
sahf
cmp
jns
(bad)
dec
cmp
sub
push
and
mov
cmps
sbb
(bad)
(bad)
repz
das
(bad)
clc
pop
pushf
push
clc
and
icebp
into
pop
cs
add
sbb
mov
test
lods
out
jno
dec
jmp
mov
retf
ins
pop
out
mov
aam
cmps
push
dec
in
pop
ret
push
cmp
mov
les
push
(bad)
in
stos
ja
jnp
pop
std
mov
cmp
(bad)
clc
pushf
ret
add
jae
movs
iret
stc
mov
and
or
add
in
ret
nop
shr
shl
push
sub
sbb
cwde
pop
pop
mov
and
loopne
dec
sar
cmp
or
arpl
pop
test
cmp
sub
mov
pushf
(bad)
lods
cli
push
pop
cmp
fcomp
cmps
sub
sti
add
or
cld
xor
call
call
sub
dec
fcomp
mov
rcl
sbb
enter
int
rcl
fst
sub
mov
dec
retf
mov
mov
and
cmp
mov
cmp
jmp
rcr
fisub
or
jg
xor
push
cwde
push
outs
and
popa
mov
push
cmp
xor
mov
xor
xchg
pop
cmps
repnz
outs
mov
mov
inc
shl
das
mov
and
xlat
mov
jae
cdq
jle
into
in
test
fst
dec
shr
ret
mov
mov
xchg
(bad)
clc
retf
sbb
xchg
mov
gs
imul
in
leave
jl
or
and
sub
pop
lods
sahf
aas
fwait
aas
jge
inc
lods
mov
add
test
shr
loop
sub
cmps
test
add
(bad)
shr
in
imul
sub
dec
fwait
addr16
dec
push
or
loopne
lods
loope
xchg
ror
jmp
aas
iret
addr16
push
adc
push
aaa
ret
inc
jae
fisttp
xchg
pop
leave
pusha
inc
cmc
jae
xchg
sbb
push
in
xlat
out
jae
xchg
es
popa
(bad)
mov
ret
data16
out
and
mov
not
mov
mov
sbb
xlat
test
cmovp
mov
push
mov
push
push
cmp
jnp
movs
ins
mov
int
and
lods
sub
ins
pop
add
cmps
daa
jmp
fstp
dec
lea
neg
pop
scas
add
aad
test
dec
sub
push
push
pop
and
fiadd
int3
add
jnp
push
xchg
pop
(bad)
jmp
dec
cmp
and
dec
push
fistp
mov
mov
inc
sahf
cli
gs
or
pop
xchg
adc
cmp
call
rcr
lock
retf
out
sub
add
test
ret
ror
jmp
fisttp
leave
das
cmp
lock
sbb
sub
repnz
or
and
cdq
dec
cmp
dec
hlt
not
jo
mov
xchg
jge
dec
in
pop
cdq
jo
cli
add
call
push
and
pop
cmp
movs
jp
add
or
out
or
adc
cwde
or
and
ror
repz
loopne
les
add
xlat
dec
or
shl
pop
fdiv
pop
push
aad
enter
shl
aad
ss
je
xchg
cli
add
(bad)
cmp
cmp
fwait
ret
leave
mov
pop
cmp
gs
loopne
icebp
inc
sbb
push
inc
and
in
mov
xlat
lods
cmps
mov
retf
(bad)
and
mov
enter
jne
adc
xor
loop
(bad)
add
cld
aaa
mov
mov
cmp
push
lahf
push
cmp
mov
pop
lds
std
mov
scas
push
jp
xlat
addr16
jno
rcr
arpl
xor
xchg
mov
adc
int3
leave
pusha
add
out
scas
dec
xor
fistp
stos
out
lods
adc
jbe
jg
mov
adc
sub
loope
mov
repz
div
mov
imul
leave
ds
and
add
inc
retf
pop
dec
into
cmp
xor
pusha
inc
div
mov
int3
adc
xchg
ins
inc
paddusb
push
(bad)
rol
loopne
mov
jb
repnz
popf
inc
jne
ja
shl
sbb
rcl
pop
mov
gs
movs
loop
inc
dec
sar
cdq
or
jmp
fs
loop
gs
lock
frstor
test
and
mov
fcom
ins
lods
into
clc
add
je
neg
jne
mov
inc
xor
mov
sbb
adc
test
movs
cmp
xchg
push
outs
jb
in
jl
pop
inc
hlt
add
push
lods
loope
imul
int
mov
and
aad
test
adc
icebp
dec
pop
push
mov
or
fsub
fst
imul
retf
xchg
xor
pop
inc
xchg
arpl
sbb
ss
aas
(bad)
pop
push
adc
pop
jmp
out
pusha
inc
es
dec
xor
push
(bad)
jb
loope
xchg
cdq
xor
(bad)
je
jle
and
mov
mov
pushf
fdivr
push
sub
dec
ret
adc
aas
retf
bound
and
test
jb
pop
je
sub
out
push
loope
or
mov
mov
and
retf
mov
push
mov
jmp
jmp
or
out
iret
push
cdq
gs
stos
mov
test
cmp
mov
aas
xor
adc
cmp
sbb
movs
cmp
xor
mov
fbld
sti
ret
jb
iret
imul
pop
data16
xchg
pop
aaa
jge
xchg
js
retf
and
xchg
imul
repnz
test
mov
jmp
rcr
xchg
mov
or
ins
ss
outs
mov
int
add
(bad)
call
adc
adc
pusha
outs
cdq
retf
mov
xchg
fiadd
adc
js
cli
and
shl
inc
dec
cwde
sar
push
sub
dec
sub
inc
dec
pop
xchg
mov
pop
cmp
mov
loopne
lods
bound
fbstp
bound
mov
and
nop
sub
aad
mov
icebp
add
sbb
mov
pop
cwde
jmp
cmp
jmp
pop
cmc
rol
shl
fucom
sahf
sub
jb
fcom
pop
pop
cmps
fimul
jns
push
aam
in
jge
or
adc
inc
or
mov
jns
or
dec
sub
fmul
inc
pop
add
out
jo
arpl
xlat
push
retf
movs
push
pop
das
ds
pop
add
and
repz
ins
int
movs
test
data16
call
in
inc
sbb
pop
mov
sbb
pop
cld
inc
pop
loope
dec
cmp
cdq
enter
fs
add
out
sub
rcl
popa
pop
rcl
xor
pop
adc
pop
fmulp
sbb
mov
dec
or
fnsave
xchg
push
imul
jmp
push
rol
jmp
mov
fcomp
loopne
nop
add
test
daa
cmps
inc
sti
mov
stos
push
aas
sub
or
fwait
sahf
fiadd
aad
dec
and
es
dec
fild
dec
loope
xchg
sub
mov
sti
(bad)
add
outs
dec
dec
push
stos
jmp
ds
add
dec
xlat
dec
mov
xchg
and
and
scas
jmp
cdq
mov
add
push
and
adc
cli
or
mov
and
push
imul
sub
push
push
xchg
sahf
adc
aas
pop
adc
jnp
mov
inc
fs
pop
pop
pop
push
int3
push
ja
and
mov
test
jecxz
cmp
jbe
repnz
retf
cmp
mov
mov
ins
das
ins
icebp
ja
inc
mov
lahf
xchg
inc
sub
mov
push
mov
xchg
pop
cmps
lock
pop
jno
and
fmul
repnz
mov
je
scas
mov
inc
das
and
out
inc
jae
push
cmp
mov
inc
xchg
pusha
test
jmp
xchg
int3
pop
pop
fcomp
pushf
cwde
mov
stos
push
fnstenv
gs
sbb
cmp
cwde
mov
jge
movs
or
xlat
pop
sahf
hlt
cmp
dec
mov
adc
mov
adc
xchg
xchg
(bad)
jmp
mov
xor
test
mov
pop
pusha
cwde
sbb
add
out
xchg
ret
mov
mov
adc
dec
mov
cld
test
jge
mov
xchg
mov
cli
mov
jp
sar
or
cmp
daa
cmp
cdq
xor
or
(bad)
push
push
shr
adc
scas
cmp
ret
cmp
sbb
je
pop
inc
jns
dec
lock
sbb
gs
ins
in
jg
fiadd
ret
fbstp
retf
lock
clc
loop
push
imul
mov
pop
in
and
xor
cmp
inc
mov
mov
sub
adc
loop
stc
ror
adc
mov
js
gs
push
(bad)
(bad)
pop
adc
jne
(bad)
jle
xchg
mov
adc
xor
xor
push
int3
and
ret
dec
icebp
cmp
jp
ds
xchg
and
dec
enter
push
out
or
sbb
(bad)
and
mov
adc
push
dec
sbb
jae
sbb
sub
mov
and
ss
jo
aad
frstor
ja
lds
aam
add
cld
mov
xor
and
outs
inc
ss
idiv
out
or
data16
imul
sbb
pop
jnp
and
sub
int
retf
push
ror
mov
addr16
retf
sub
mov
mov
int
push
or
push
stos
jae
lds
clc
sbb
sub
xchg
mov
push
add
call
push
or
fisubr
pop
xor
cmp
cld
adc
outs
mov
xor
cli
add
lea
jae
push
jmp
pop
clc
loope
icebp
and
dec
dec
mov
dec
aam
pop
clc
ins
or
mov
lock
jns
and
add
outs
and
das
pop
ror
je
mov
stos
mov
jne
lods
jmp
jne
inc
mov
mov
addr16
push
jnp
xchg
xchg
repnz
jnp
lods
mov
data16
xor
addr16
int3
test
jp
or
adc
test
or
scas
pinsrw
and
add
mov
mov
sbb
fld
outs
jg
cdq
ss
sub
cs
push
cdq
int3
adc
in
fldenv
add
mov
loop
sbb
and
mov
cli
inc
(bad)
push
pop
in
lods
fs
lods
lock
dec
dec
inc
iret
jne
xor
pop
call
(bad)
ins
lods
js
lock
call
(bad)
repnz
cmp
mov
hlt
inc
jmp
dec
jo
xchg
add
xchg
xchg
cdq
sbb
xor
inc
out
rdmsr
mov
stos
pop
jnp
popf
ror
push
jnp
sbb
push
fisubr
mov
jecxz
arpl
clc
sbb
cdq
aam
cld
mov
xchg
and
lahf
mov
ret
dec
jge
addr16
stc
or
loope
sub
sbb
push
inc
rol
fs
add
daa
push
loopne
dec
dec
aam
adc
inc
pop
rol
add
and
add
mov
(bad)
sub
jbe
test
jle
cli
movs
iret
and
test
loop
lds
jl
out
add
icebp
pop
inc
sti
jne
into
stc
daa
or
loopne
fcmove
push
mov
fimul
mov
pop
popf
add
aad
dec
mov
fld
(bad)
cld
dec
fidiv
loopne
adc
sub
push
std
shl
test
jmp
ror
pop
sub
jmp
sbb
shr
movs
mov
mov
jge
mov
retf
add
aam
sbb
mov
mov
rol
pop
mov
mov
mov
test
push
aam
sti
lods
clc
mov
imul
dec
add
int3
cmp
mov
nop
xchg
xlat
cmp
out
cmp
or
push
jo
icebp
push
push
xchg
adc
ss
xchg
ins
enter
retf
jmp
cs
sub
stos
jmp
movs
or
push
pop
test
aam
cmps
call
lods
data16
movs
add
sbb
call
and
retf
imul
or
stos
mov
in
dec
mov
dec
mov
push
jle
pop
cmp
jb
es
add
xchg
out
cmp
jae
arpl
imul
and
jbe
arpl
inc
popa
ins
mov
xor
and
add
gs
pushf
(bad)
fisubr
inc
pop
and
inc
jnp
push
sub
ins
test
(bad)
cmp
push
test
repz
cmp
inc
mov
jl
sbb
sub
push
call
mov
lahf
jl
mov
adc
clc
cdq
(bad)
out
jns
mov
mov
fwait
call
cmp
mov
dec
or
adc
push
dec
icebp
mov
out
imul
push
mov
sbb
mov
call
cmp
push
ror
push
xor
ins
cmp
push
cmp
test
in
enter
fcmovu
sbb
sub
test
cmp
and
add
jbe
(bad)
dec
je
fs
push
fadd
fldenv
mov
into
add
sahf
inc
mov
gs
(bad)
jle
popa
cmp
xor
out
js
(bad)
outs
add
and
cmps
nop
out
mov
cmp
imul
add
cli
test
popf
fndisi(8087
mov
fadd
add
mov
sub
fucomip
add
out
addr16
loop
(bad)
mov
out
test
out
rol
sbb
cmps
div
stc
xlat
dec
test
pop
aam
jbe
inc
push
dec
(bad)
xor
push
shl
in
cli
mov
jl
sbb
jmp
or
scas
xlat
pop
aam
mov
mov
pushf
xchg
outs
mov
popa
mov
mov
jl
repz
push
and
xchg
push
pop
clc
sbb
mov
jmp
ret
mov
cmc
sbb
cmp
dec
add
sub
push
mul
xlat
mov
rol
daa
jle
inc
cmc
jmp
in
test
push
mov
adc
adc
lods
cmp
cmps
addr16
outs
inc
ja
sti
call
jne
(bad)
mov
xor
mov
xor
xor
jns
cli
test
fisub
mov
adc
fldcw
dec
loop
mov
fcomp
fdivr
mov
xlat
nop
adc
xchg
dec
outs
call
mov
adc
sbb
push
add
jge
mul
add
cld
or
popf
mov
mov
inc
out
shr
shl
cdq
mov
xor
jmp
add
dec
aas
add
addr16
sbb
pop
push
shr
push
sbb
iret
outs
sbb
out
mov
call
pop
mov
sar
je
inc
(bad)
iret
mov
gs
adc
pop
xchg
pop
inc
mov
and
shl
mov
jle
inc
pop
lahf
ret
int3
clc
xor
or
fistp
sub
or
cmp
frstor
xlat
cmp
(bad)
shl
mov
ja
push
stos
iret
aam
pop
cmp
(bad)
ja
xchg
dec
inc
ret
cmc
xchg
xchg
adc
iret
sbb
clc
rcl
mov
in
xlat
das
mov
push
movs
cwde
xchg
bound
sahf
adc
nop
jge
imul
mov
adc
fsub
add
jb
daa
ficomp
xchg
cmp
pushf
cmp
xchg
fs
fisubr
retf
mov
mov
sub
mov
cs
mov
sub
in
cmp
jns
scas
scas
imul
mov
pop
cmp
cmc
scas
icebp
mov
cmp
mov
stc
push
add
push
in
scas
jo
sub
dec
loopne
out
hlt
into
clc
and
test
sar
fs
jmp
aam
xor
or
ins
jl
adc
and
jmp
sbb
xor
and
stos
scas
loope
les
pop
mov
jbe
je
cmove
and
adc
push
add
sbb
imul
fsubr
mov
dec
jo
dec
int
aas
enter
outs
out
loop
cmp
pop
cld
or
jg
push
adc
ds
jecxz
add
pushf
inc
mov
mov
mov
mov
into
mov
mov
mov
jns
call
scas
shl
xchg
mov
bnd
cmp
sub
xor
and
cli
ja
pushf
idiv
repz
les
(bad)
jecxz
dec
mov
mov
aad
ja
call
jp
jecxz
pop
pop
std
pushf
ficomp
push
mov
(bad)
mov
lods
outs
lock
push
add
inc
sbb
xchg
out
cmp
outs
out
mov
push
sbb
in
xor
ss
ret
(bad)
std
leave
and
mov
sub
jae
push
shr
loopne
jmp
ins
add
xchg
or
adc
ja
hlt
loope
cdq
(bad)
loope
call
push
in
iret
cdq
cli
sbb
out
rol
inc
and
mov
stc
jmp
in
iret
fs
out
shr
dec
cmps
outs
or
xor
and
jae
in
fsub
mov
push
push
fs
lea
mov
ret
jmp
gs
push
dec
div
mov
sar
jne
and
fwait
mov
ret
jecxz
mov
ds
inc
and
(bad)
mov
or
ins
inc
test
addr16
pop
mov
mov
test
push
loopne
xchg
(bad)
sbb
ret
outs
int
hlt
dec
mov
aad
or
sbb
sbb
out
adc
adc
hlt
and
mov
enter
jmp
adc
pop
jnp
ss
ficom
int
jmp
scas
mov
xlat
adc
inc
mov
xchg
(bad)
or
sbb
add
outs
clc
pop
cmp
dec
xor
or
pop
jno
push
dec
mov
(bad)
adc
and
aas
sub
test
jo
rcl
stos
popf
push
aad
mov
or
cmps
call
inc
jecxz
sbb
push
movs
ins
mov
and
mov
adc
push
ret
mov
mov
sbb
and
sub
adc
jg
call
ds
fs
adc
xor
sbb
mov
out
cdq
adc
mov
mov
mov
xor
mov
iret
xlat
cmp
dec
mul
and
mov
(bad)
out
mov
push
pop
xchg
add
push
mov
xchg
outs
or
aam
adc
popa
xchg
cmps
outs
test
gs
mov
xchg
ins
mov
loop
cmp
test
cmc
aad
outs
lahf
mov
or
or
pop
and
mov
pop
icebp
fs
or
daa
in
add
popf
outs
mov
jl
adc
mov
enter
fadd
inc
aad
popf
jno
adc
mov
jne
mov
xor
hlt
add
push
test
push
add
sar
out
jmp
push
fsubr
adc
ret
call
out
sbb
sti
or
ret
jae
repnz
mov
push
ss
in
xchg
ret
inc
sbb
and
push
not
in
lock
pop
aam
cld
sbb
mov
ins
or
in
iret
ret
mov
loopne
adc
cmp
dec
(bad)
fsubr
xchg
fs
and
jne
stos
xor
(bad)
jo
fmul
int
pop
jae
sbb
add
dec
aam
add
sub
push
xlat
jb
xor
pushf
inc
cmp
into
loop
fwait
(bad)
sub
mov
and
hlt
imul
or
jb
lds
ret
mov
bound
mov
adc
pop
push
or
int
ror
pop
add
jbe
and
jmp
shr
mov
call
cmps
cwde
loop
icebp
fwait
xchg
push
add
outs
sub
movs
dec
fcom
xchg
cwde
aam
out
int
jo
pop
or
adc
scas
push
push
sbb
retf
das
loope
fisub
in
xchg
inc
scas
sub
push
test
and
dec
mov
add
inc
(bad)
cmp
iret
xchg
mov
enter
cli
ds
test
push
add
add
sub
or
movs
lods
mov
xchg
scas
adc
fistp
jns
daa
nop
jp
ins
cmc
sbb
adc
push
pop
imul
ja
stos
pop
addr16
repnz
ss
aas
in
sbb
pop
pop
loop
ffreep
out
lea
pop
je
mov
push
cli
jns
pop
mov
or
dec
repz
outs
mov
xor
scas
and
test
int
in
pop
loope
xor
xchg
mov
dec
outs
sbb
inc
je
add
mov
xchg
mov
or
push
jmp
add
push
sbb
or
add
sbb
xchg
(bad)
(bad)
nop
fidivr
push
and
mov
iret
addr16
cmp
rcl
pop
inc
and
jno
hlt
cmp
or
cmp
fbstp
mov
shl
push
inc
push
adc
retf
adc
adc
push
xor
loope
cmp
xchg
iret
fldenv
mov
arpl
sti
xor
test
loope
pop
popa
push
in
(bad)
add
add
ja
push
xchg
rol
bound
inc
or
pop
mov
push
sbb
cmps
mov
fbld
xchg
inc
pop
sbb
jnp
pop
and
sbb
mov
and
imul
cmps
jnp
or
in
rcl
fidiv
sbb
in
and
shr
icebp
fistp
sti
int3
fs
mov
loopne
and
xchg
xor
icebp
and
mov
ret
mov
cmp
lods
aaa
popa
xchg
adc
sti
pop
gs
pusha
into
gs
fisub
pop
sbb
push
mov
inc
or
out
xchg
stc
sub
lods
push
mov
or
cmps
xchg
ret
add
push
adc
(bad)
(bad)
mov
lea
shl
xor
push
in
jno
jnp
das
mov
mov
and
ja
jmp
pop
js
xor
fmulp
add
mov
fiadd
sbb
push
das
mov
push
imul
js
call
sbb
push
stos
aam
mov
jp
inc
aas
mov
mov
pop
pop
ret
sbb
outs
push
pop
xchg
addr16
div
loop
mov
cmp
sar
xchg
sahf
(bad)
mov
sub
mov
cmc
add
xor
fild
stos
dec
adc
sub
shl
out
dec
bound
xor
cwde
push
cmps
in
fiadd
mov
fmul
jge
nop
cmc
cmp
ins
or
hlt
iret
jb
mov
xor
sbb
sub
cmp
jb
(bad)
cmp
xchg
jl
pop
jge
gs
pop
ret
pop
pop
in
stos
jbe
mov
xor
cmp
mov
bound
add
and
cs
add
inc
mov
xadd
jns
push
adc
shl
cld
xchg
dec
daa
and
leave
stc
and
pop
pop
(bad)
adc
cmps
push
mov
dec
pop
mov
imul
cmp
addr16
test
in
mov
ins
fisubr
lock
xchg
xor
out
or
icebp
mov
xor
xor
xor
or
dec
(bad)
retf
push
cmp
cld
xor
mov
iret
ss
daa
lock
sbb
dec
dec
test
inc
xchg
cmp
popa
(bad)
fs
nop
dec
and
mov
and
aam
inc
xlat
xor
shl
dec
enter
bound
out
add
jo
push
sahf
mov
pop
in
aas
add
mov
push
mov
dec
mul
mov
xchg
popa
cmp
loopne
adc
lds
push
inc
sub
leave
dec
jmp
fcomp
in
(bad)
mov
cli
daa
add
add
ret
or
in
sub
jb
in
aam
jbe
out
std
mov
inc
stos
inc
gs
pop
mov
sub
mov
sub
xor
xchg
(bad)
retf
ins
mov
add
xor
daa
or
dec
mov
mov
xchg
mov
lar
in
mov
add
jnp
pop
loop
icebp
mov
es
jmp
pop
push
xor
adc
ja
sahf
je
ror
cmp
dec
popa
test
dec
sar
popa
jg
jmp
daa
cmps
push
test
and
xor
mov
sbb
mov
mov
retf
pop
daa
or
test
retf
jo
mov
test
push
and
or
add
and
jecxz
lods
pop
dec
in
je
sbb
lods
scas
jmp
inc
ret
mov
enter
mov
mov
or
sub
out
stos
dec
into
(bad)
dec
(bad)
ins
jbe
std
pop
or
jne
std
mov
sbb
test
rcl
jmp
and
cmp
outs
jg
in
ret
out
test
ror
or
test
in
gs
jne
je
mov
std
jp
outs
pop
sub
cmps
ror
test
cmp
push
leave
dec
push
retf
dec
loope
push
js
bound
pop
jb
call
cmp
xor
call
cmp
repnz
cmp
cwde
les
cmp
add
mov
xchg
jl
test
pop
mov
int3
sbb
or
inc
mov
cli
ins
jae
dec
sub
cld
out
clc
in
sysret
or
xlat
in
rcr
mov
int3
pop
in
dec
aad
popf
dec
scas
popf
and
cmps
cmp
(bad)
push
cmp
sbb
fwait
not
dec
cmp
push
push
je
cmc
or
std
(bad)
aas
mov
and
lahf
add
jo
and
das
lea
clc
shl
inc
jecxz
xchg
cdq
mov
xlat
in
jle
cld
lock
ss
push
dec
pop
outs
jb
lods
mov
adc
push
or
fcom
and
sbb
(bad)
shr
adc
add
push
ds
pop
push
inc
mov
scas
imul
int
mov
sbb
lea
ins
add
add
xchg
movs
xor
fcmovnu
repnz
dec
in
test
cmps
mov
jg
dec
fcomp
cmps
push
dec
xchg
mov
int
and
in
stc
call
neg
es
xchg
aaa
mov
mov
inc
and
mov
cmp
push
cmp
sbb
ss
cmp
arpl
adc
add
dec
jg
iret
jmp
out
cmp
bound
outs
out
add
data16
bound
rcr
mov
(bad)
pop
dec
sar
sbb
sub
jae
mov
sub
out
(bad)
sub
aam
and
enter
mov
mov
dec
mov
iret
lahf
aam
add
xchg
jecxz
add
(bad)
cmp
cld
and
popa
mov
ret
sbb
bound
xchg
repnz
xchg
push
jo
cmp
push
(bad)
(bad)
xor
dec
jge
mov
push
shl
lahf
cmps
or
popf
js
or
mov
sub
fnstsw
jnp
shl
pop
sbb
mov
push
pop
pop
jb
loopne
or
push
loope
pop
jmp
pop
js
jg
sti
ret
shl
imul
mov
or
in
retf
pop
clc
cpuid
(bad)
fld1
(bad)
int
dec
jmp
jle
jle
(bad)
repz
mov
pop
je
shl
pop
pop
or
jnp
cli
hlt
in
ret
sti
jmp
push
dec
jbe
scas
out
icebp
fcomp
mov
sub
mov
add
fcomp
xchg
loop
int
cld
jmp
cmp
lock
hlt
sub
xor
out
clc
inc
fdivr
pop
mov
cmp
dec
repnz
popf
fs
mov
lods
dec
push
jl
addr16
repz
inc
test
mov
xor
ror
js
dec
dec
bnd
aad
adc
add
xchg
mov
arpl
add
mov
sbb
mov
and
sbb
shr
lea
(bad)
sar
pop
push
sub
adc
xlat
ja
jmp
xchg
mov
add
mov
sub
sbb
jae
add
dec
adc
and
jl
add
mov
shr
and
jbe
inc
add
nop
push
adc
and
dec
pop
repnz
pop
stos
aad
and
stos
dec
sbb
pusha
add
inc
mov
push
ins
adc
test
pop
es
add
xchg
jle
mov
aad
xchg
clc
cli
int3
xchg
cwde
add
aad
mov
ret
pop
aaa
jns
call
jne
xor
add
adc
jg
fs
inc
dec
jno
shr
adc
cs
mov
adc
jmp
sbb
outs
cmp
mov
mov
shr
(bad)
xchg
cmp
xor
mov
fcom
pop
push
(bad)
retf
sub
(bad)
adc
dec
xor
jo
cdq
mov
adc
push
adc
inc
int
push
inc
stc
ror
dec
xchg
xchg
adc
jae
pop
add
push
fimul
cmps
mov
shl
movs
pop
test
movs
and
pop
dec
xor
mov
or
jp
adc
mov
mov
add
in
jmp
xchg
sbb
mov
mov
sahf
retf
aaa
xor
bound
sub
push
add
jbe
fwait
mov
add
cmp
and
mov
xchg
sar
xlat
mov
sub
ja
and
jmp
rcr
outs
arpl
fcmovnb
fs
mov
ret
nop
not
add
stos
movs
xlat
dec
test
popa
lds
pop
xlat
sahf
rcl
sub
mov
adc
pop
dec
in
sti
sbb
cmp
out
out
jno
dec
jge
pop
xor
js
sahf
mov
xchg
mov
idiv
adc
je
mov
test
xchg
sahf
mov
outs
xor
pop
mov
shl
add
repnz
dec
sbb
hlt
bound
push
push
push
and
repz
xchg
fst
mov
int3
ror
aam
xor
xor
cmps
jg
arpl
aam
mov
cmp
inc
xchg
loop
std
icebp
repz
xor
xchg
rcr
out
fsubr
jns
not
sub
pop
dec
cmp
ss
mov
fldcw
push
cmps
adc
adc
hlt
cmp
push
cmp
jae
(bad)
jle
fwait
dec
jle
loop
push
push
or
pop
adc
test
je
minps
mov
cwde
fbld
fwait
jge
int3
adc
pop
mov
loop
add
mov
add
retf
mov
sbb
mov
xchg
pop
and
popa
push
fld
or
cmp
push
and
fs
leave
enter
push
jmp
xor
sbb
into
test
jmp
fwait
scas
lea
popf
cmps
or
push
xor
cmps
(bad)
dec
in
inc
int3
pop
add
sub
jmp
scas
xor
inc
stos
sub
sbb
jbe
ins
inc
push
pop
out
push
addr16
xchg
mov
mov
dec
xor
stc
ret
push
ret
fwait
inc
xchg
(bad)
lods
and
pop
cmps
leave
loopne
cmp
jge
sub
push
dec
pop
mov
into
add
lods
push
mov
leave
daa
push
test
pushf
push
push
mov
stc
jns
mov
lahf
rol
pop
cs
ins
lahf
cmp
and
adc
pop
add
dec
jns
mov
retf
(bad)
jno
sub
jo
gs
mov
xor
xor
dec
cwde
and
dec
ja
rol
dec
pop
lea
bound
xchg
or
ret
test
cli
popa
rol
clc
ja
jl
or
stos
mov
mov
fimul
pop
mov
pop
sub
js
cmp
mov
lea
out
xchg
xor
xchg
mov
add
jae
ret
leave
neg
stos
iret
pusha
stc
(bad)
repz
in
test
shl
add
jge
ins
xchg
sub
pop
mov
cmps
mov
shr
sub
cdq
call
mov
nop
mov
(bad)
sub
out
dec
and
fst
nop
das
shl
push
jp
std
mov
retf
add
dec
cmp
pop
sub
cmp
jmp
xchg
xchg
dec
dec
push
ja
pop
dec
pop
add
movs
jle
jge
pop
mov
add
in
mov
or
call
push
and
push
xchg
cdq
xor
jmp
xchg
popf
xchg
xlat
sbb
pop
movs
test
wrmsr
push
pop
mov
sbb
mov
leave
pop
nop
in
mov
pop
sub
pushf
pop
test
ja
lds
and
outs
ja
mov
push
pop
sbb
in
popa
xor
lea
jno
push
les
aad
xchg
int3
sub
data16
arpl
xlat
out
call
xchg
loope
jns
aam
jmp
xor
invd
lds
(bad)
xor
sbb
cld
sbb
and
mov
xor
scas
sbb
vunpcklps
ja
sub
mov
inc
sub
loopne
xchg
enter
popf
cmps
lods
sub
jg
pop
cmc
dec
cli
imul
adc
push
(bad)
mov
cmp
xor
rcl
dec
shr
inc
xor
mov
int
popaw
and
mov
fdivr
outs
adc
ins
cmp
jge
pavgw
jmp
(bad)
jmp
cmps
mov
or
dec
fwait
push
dec
mov
shl
call
fistp
enter
sbb
ret
jecxz
jmp
jge
imul
addr16
push
inc
add
out
cmp
push
sbb
mov
fld
(bad)
imul
enter
dec
add
mov
data16
mov
enter
xchg
retf
pop
ss
les
neg
mov
add
nop
sbb
xchg
push
cwde
loopne
imul
jmp
cmps
(bad)
jl
cmp
sub
aad
mov
xor
fwait
add
out
xor
jmp
dec
and
mov
xor
add
jo
mov
test
cmp
rol
fistp
retf
int3
pop
jle
mov
and
push
inc
(bad)
imul
sub
(bad)
popa
xor
hlt
and
add
sub
cmp
dec
and
add
mov
adc
(bad)
lds
in
ret
add
scas
(bad)
out
inc
bound
outs
mov
mov
cmc
test
sbb
jns
imul
inc
xor
dec
imul
arpl
push
inc
and
dec
jno
sbb
ror
js
call
lods
cld
sar
(bad)
cmc
mov
addr16
push
out
pop
gs
cwde
loopne
or
and
ret
xchg
loope
sbb
push
cdq
or
xchg
inc
in
sbb
cwde
dec
std
dec
(bad)
jge
pop
nop
movs
lea
mov
or
add
mov
sub
sbb
mov
js
mul
dec
cmp
xor
ficomp
outs
lock
add
pop
lea
mov
fdiv
icebp
pop
cmp
and
xchg
jg
inc
and
push
test
mov
push
mov
loop
fimul
inc
push
jl
sub
mov
mov
imul
ss
pop
adc
dec
sub
jle
jg
add
mov
stos
jae
(bad)
out
cmp
sub
mov
add
loopne
in
or
test
shl
mov
fld
ss
pop
repz
cmp
xchg
and
jmp
frstor
je
retf
dec
cmp
adc
or
fwait
push
arpl
test
mov
xchg
pop
dec
sbb
or
(bad)
mov
push
pop
mov
fld
dec
std
in
retf
and
or
push
ret
pop
pop
inc
mov
push
sar
hlt
mov
mov
mov
fadd
inc
test
ja
mov
cmp
sbb
rol
push
mov
lds
add
shr
dec
fdivr
dec
mov
mov
cmps
jg
pop
mov
sbb
sub
js
mov
mov
add
dec
in
jns
jno
test
jb
shl
fiadd
mov
mov
(bad)
in
xlat
cmp
mov
ja
out
outs
xlat
stos
in
cmc
ror
repz
repnz
in
arpl
in
adc
mov
xchg
bound
repnz
mov
ss
mov
(bad)
popf
mov
sbb
push
popf
dec
jnp
adc
fisttp
and
sub
mov
lahf
xchg
ror
cmc
stos
mov
sub
les
sub
daa
jmp
mov
fidivr
lods
and
xor
imul
dec
and
test
push
or
sbb
pop
scas
sub
mov
inc
sub
sbb
data16
sbb
les
stos
mov
daa
inc
inc
mov
ss
mov
xor
bound
xchg
xchg
mov
repz
stos
pop
jno
fcom
push
jmp
mov
test
data16
and
test
loope
mul
pushf
icebp
leave
call
dec
sbb
fldcw
xchg
(bad)
stc
mov
aas
sub
imul
mov
jmp
(bad)
pop
fcomp
cmp
sub
xchg
call
test
sub
cld
sbb
jecxz
stc
(bad)
pushf
xchg
pop
dec
adc
shr
jno
xor
mov
xor
adc
cmp
pop
das
icebp
retf
jle
push
je
rcl
test
jp
pushf
nop
lods
clc
je
popf
loop
ret
xor
std
pop
cmp
fisttp
adc
mov
jmp
jae
xchg
jge
fiadd
mov
sbb
call
push
jl
stos
aad
lods
aas
and
(bad)
movs
jbe
cmp
mov
ficomp
fmulp
call
xchg
inc
or
lock
je
aad
in
stc
mov
daa
mov
cmp
popa
inc
inc
in
int
sbb
ror
sub
mov
je
sbb
sbb
adc
imul
mov
pop
popf
idiv
imul
bound
lahf
push
retf
in
push
cdq
dec
cli
xor
jne
push
lods
xor
xchg
jns
mul
inc
in
push
ins
mov
pop
jmp
sbb
mov
adc
jne
jae
mov
fs
mov
(bad)
inc
leave
sbb
or
dec
push
cwde
mov
add
std
jae
loopne
dec
mov
mov
sbb
out
push
ret
fdecstp
add
jmp
movs
daa
fcmove
jo
ds
sub
ss
add
jp
xor
pop
mov
pop
cmp
ret
inc
mov
in
inc
ret
or
aaa
test
out
lea
jns
jecxz
mov
cli
push
in
popa
lea
clc
xchg
ss
mov
cmp
cmp
fadd
mov
aam
rcl
test
lods
pusha
cmp
adc
mov
or
addr16
sub
out
jo
pop
inc
sub
xchg
jmp
inc
cmp
loope
xor
dec
or
les
push
dec
idiv
mov
inc
daa
out
mov
xchg
push
stc
sbb
das
pop
scas
popa
mov
cmp
fcomi
push
mov
scas
mov
daa
jl
je
adc
(bad)
in
(bad)
loope
daa
inc
sbb
jge
jecxz
out
push
sub
mov
into
pop
mov
cld
iret
mov
pop
and
mov
int3
fcmovb
jne
out
add
and
push
inc
out
or
push
mov
jecxz
lock
cli
push
sbb
(bad)
push
and
xor
and
jmp
push
inc
leave
cs
(bad)
cmps
ret
mov
leave
add
xchg
bound
jbe
loop
ret
das
push
add
push
aad
das
ins
cld
cmp
pop
shl
je
imul
fdivr
jae
stos
div
idiv
fwait
aam
test
jmp
or
pop
jnp
adc
add
xor
mov
push
retf
leave
rcl
push
push
xor
aad
ds
adc
lahf
mov
push
ja
add
ins
mov
sub
fcomp
cwde
xor
(bad)
cmp
nop
shl
pop
mov
les
cwde
xchg
sbb
rol
adc
xchg
xor
outs
mov
(bad)
icebp
or
sbb
dec
xchg
mov
adc
push
inc
and
test
xchg
xor
mov
and
movs
sub
repz
mov
neg
xchg
rcl
inc
jns
mov
mov
rep
test
imul
cmp
cmp
test
fcom
enter
retf
mov
test
mov
adc
mov
xor
xchg
ret
dec
jbe
sbb
inc
mov
dec
adc
push
mov
xor
out
push
mov
push
cmp
sahf
fdivr
push
dec
cmp
mov
pushf
cs
jno
out
pop
(bad)
fs
aam
or
pop
ret
iret
jge
ror
sbb
add
popf
mov
cli
outs
call
mov
sub
sub
dec
div
je
sub
pusha
pushf
push
ret
or
push
enter
pop
mov
dec
fstp
mov
pop
lahf
test
fdivr
adc
add
ins
je
inc
pushf
(bad)
jp
dec
shl
add
sbb
fistp
scas
mov
sub
jle
(bad)
xor
push
cmp
mov
adc
dec
lock
mov
iret
add
movs
shl
pusha
jmp
inc
jge
push
jmp
leave
sti
or
pop
add
in
cmp
jmp
add
icebp
out
test
out
or
lock
fcmovb
or
div
pop
push
or
clc
mov
call
push
call
pop
xor
hlt
adc
(bad)
cmc
fwait
add
xchg
fsub
imul
sub
or
push
push
add
pop
inc
imul
jb
jmp
add
movs
push
popa
pop
ins
stos
sbb
call
add
lods
and
scas
ins
push
mov
in
retf
gs
dec
fcmovnbe
pop
shl
mov
xchg
mov
call
aaa
out
mov
inc
cmc
pusha
and
adc
stc
pop
xchg
pop
into
adc
movs
or
push
push
rcl
iret
pop
lea
add
ret
in
ins
sub
push
mov
movs
inc
push
dec
jecxz
adc
call
adc
stos
test
ja
xchg
aas
jmp
(bad)
dec
in
ss
sbb
push
jge
(bad)
or
mov
xchg
jle
popf
sar
push
fisubr
cmp
out
and
fadd
pusha
xchg
inc
push
das
mov
(bad)
push
ds
cmps
or
add
push
xor
cmc
xor
xchg
pop
arpl
and
cmp
movs
push
pop
xchg
mov
mov
call
rcr
in
cmp
mov
jg
sub
pop
icebp
nop
clc
arpl
inc
sub
xchg
ss
repz
jno
mov
push
bound
test
clc
shr
xlat
jge
add
dec
stos
pushf
pop
inc
lahf
mov
outs
sbb
mov
jbe
mov
and
mov
mov
push
int3
into
sub
loop
icebp
add
div
inc
fwait
outs
xor
xchg
fcomp
mov
das
mov
jo
out
mov
imul
sub
xchg
sar
cmp
sub
mov
sub
fimul
enter
mov
repz
(bad)
push
ror
cld
adc
nop
jg
pop
fwait
sub
sar
icebp
movs
mov
dec
addr16
outs
push
sub
int
sub
dec
test
push
xlat
jge
or
cmp
mov
add
mov
dec
popf
xchg
lea
out
mov
(bad)
repnz
pusha
ror
cs
cmp
test
xchg
add
pusha
movs
sbb
stos
add
je
mov
mov
inc
jmp
jg
mov
outs
scas
push
or
popf
inc
out
mov
fisub
push
jnp
fnstsw
repnz
aam
mov
add
add
ins
inc
lods
ret
xchg
cs
push
jb
das
jo
and
lock
mov
and
jo
push
sbb
ja
out
out
mov
cdq
push
mov
mov
xor
add
xchg
xchg
and
cmp
retf
scas
int3
popf
sbb
ficom
dec
xchg
mov
or
xor
shl
jle
sahf
pop
cwde
pusha
call
pop
jle
mov
cmp
add
scas
pop
push
ins
fst
enter
xchg
call
xchg
mov
rol
ja
cmps
iret
sub
sub
dec
mov
jmp
dec
shl
pop
retf
stc
lods
xchg
movs
icebp
data16
inc
pop
xor
aad
pop
push
(bad)
fbld
pop
sub
add
inc
mov
mov
mov
rol
in
imul
outs
cmp
fdiv
dec
push
mov
or
xor
and
jecxz
cdq
sub
dec
clc
lea
hlt
and
push
cs
mov
ret
xchg
stc
and
cli
dec
jae
daa
inc
jp
iret
aas
shr
and
xchg
mov
fs
out
pop
data16
hlt
and
aad
lds
add
mov
pop
(bad)
and
call
inc
mov
push
ins
cmps
fucomip
(bad)
pusha
mov
sbb
push
cwde
sar
scas
repnz
das
xor
push
out
(bad)
pop
lahf
nop
lods
lods
lahf
add
call
pusha
repz
into
inc
daa
mov
dec
popf
pop
mov
pop
daa
mov
jmp
imul
mov
es
sub
or
push
jmp
cli
je
mov
sbb
aas
mov
mov
cmps
loopne
sub
leave
push
xlat
icebp
and
in
sub
lods
lds
les
inc
rcr
fs
pop
shr
jae
cmc
cwde
clc
leave
cwde
imul
jae
pop
call
repz
and
loopne
shr
fdiv
jecxz
sub
and
jb
adc
mov
lea
xchg
stos
sub
movs
cmps
fistp
adc
add
scas
fdivr
xchg
addr16
fidiv
shl
fwait
lock
daa
sar
stc
sbb
xchg
cmp
popf
test
adc
xchg
push
dec
je
enter
or
adc
jo
stc
xor
mov
xchg
mov
jns
ins
popa
and
(bad)
loop
int
test
neg
mov
jo
or
or
data16
mov
inc
cmp
out
inc
repnz
push
or
out
lods
ins
aam
sbb
add
loop
jp
mov
mov
push
lods
pushf
call
aas
(bad)
sbb
push
or
out
jno
xor
inc
mov
dec
add
daa
pop
lods
cdq
stos
loopne
mov
in
fisttp
sbb
loope
inc
pop
sbb
shl
int
cli
cmps
pop
pop
add
cmp
in
mov
pop
xchg
sub
loope
repnz
jmp
and
pop
mov
sbb
push
jl
sub
push
aaa
mov
mov
popf
rcr
scas
cmp
jo
mov
sbb
xchg
in
xchg
dec
iret
cs
out
sbb
adc
(bad)
loope
mov
(bad)
out
out
test
jb
push
push
xchg
adc
mov
sub
stc
hlt
and
out
in
mov
push
adc
popa
xor
push
pop
push
jl
ja
lds
jge
nop
ret
adc
lea
mov
shr
fld
adc
shl
lods
xchg
lods
mov
int
inc
mov
push
add
jle
pop
outs
aad
rol
mov
lea
and
fisub
ins
or
sub
nop
xchg
push
inc
movs
xchg
push
push
les
push
shl
jne
sub
ret
xchg
out
jl
ins
outs
or
bound
movs
lods
(bad)
shr
daa
fcmovu
push
sbb
fcom
fwait
loop
pusha
dec
xchg
fwait
sub
shl
sub
mov
inc
fisubr
icebp
mov
cmps
ret
push
dec
pop
je
pop
add
loope
xor
test
retf
int
add
cmps
cmc
cld
xor
add
aam
rol
(bad)
test
and
out
mov
pop
jge
iret
scas
push
mov
adc
call
mov
push
xchg
rcl
in
ret
sub
loope
add
movs
fimul
sub
ss
xchg
pop
enter
shl
mov
jne
rcl
xor
idiv
mov
ins
mov
xor
repnz
push
ret
sbb
loopne
adc
nop
(bad)
sti
sub
push
or
cmp
push
and
(bad)
ror
pop
stos
retw
js
imul
in
pop
rcl
in
inc
inc
outs
scas
das
mov
push
test
outs
xchg
add
ficomp
mov
hlt
cmp
inc
adc
mov
pop
bound
jp
inc
add
lea
call
dec
mov
popf
fs
or
call
push
xor
ins
mov
(bad)
iret
stos
pop
mov
inc
ins
pop
dec
repnz
into
ja
xchg
shl
fincstp
push
push
push
mov
mov
push
and
es
adc
xor
inc
jecxz
mov
les
jmp
dec
mov
cmp
call
jmp
out
and
das
sub
fwait
ja
stc
sbb
sbb
sahf
inc
xchg
outs
jmp
xlat
movzx
pop
sub
cmc
mov
mov
cwde
mul
pop
mov
int
cmp
jmp
loope
mov
or
loopne
mov
movs
mov
je
mov
sti
add
jno
popf
stos
leave
cmc
setp
rcr
jg
sub
fnstsw
inc
xor
imul
adc
mov
outs
loope
popf
fsub
pop
xchg
in
nop
cs
pop
mov
inc
jno
xor
sbb
imul
loope
xor
pop
aas
or
rcl
outs
and
js
pop
pop
adc
inc
jne
jl
iret
test
dec
or
cdq
jbe
cs
mov
sbb
pop
addr16
push
push
xor
sahf
mov
pop
mov
inc
daa
das
fsub
leave
cmp
push
push
ret
retf
enter
aaa
jmp
jle
test
cmps
movs
xor
inc
loopne
fs
pop
inc
lds
mov
push
rcr
or
stc
push
leave
and
adc
inc
test
dec
cmp
stc
dec
dec
sti
out
or
clc
das
not
mov
iret
xchg
jae
push
sub
xchg
jae
std
and
push
xchg
(bad)
(bad)
jmp
add
xchg
adc
or
sub
lds
js
jns
adc
sti
jmp
jmp
xchg
pop
inc
mov
int3
fst
es
pushw
dec
mov
cwde
daa
and
adc
add
jno
iret
jae
call
fild
fsubrp
ds
add
retf
mov
push
pushf
cmc
loopne
cmp
test
mov
ins
pop
imul
cs
enter
push
fs
iret
push
xchg
mov
(bad)
int
fstp
cmp
movs
mov
fninit
cli
xchg
push
ja
inc
leave
push
inc
fwait
pop
sbb
mov
add
xlat
data16
loop
adc
xor
int
sbb
mov
sbb
mov
loop
sbb
dec
sbb
sbb
stos
mov
das
xlat
ret
in
dec
add
aas
cmp
outs
mov
scas
sub
sahf
dec
inc
inc
and
adc
repz
icebp
jge
(bad)
out
mov
and
pop
add
fcomip
pop
jns
in
retf
cmp
jecxz
mov
test
xchg
imul
(bad)
or
lds
sahf
mov
sub
dec
sub
scas
(bad)
std
inc
pop
movntps
(bad)
xor
stos
popf
clc
cmps
adc
ds
inc
jnp
adc
in
mov
popa
jg
sub
sub
push
mov
cld
pop
pop
sub
sub
mov
fld
inc
or
sub
sub
inc
retf
ficom
or
pusha
scas
xchg
fild
mov
dec
inc
sub
ins
mov
arpl
push
lds
jl
jge
and
push
pop
sbb
pop
sti
adc
push
sbb
xchg
and
xor
jbe
js
add
icebp
sbb
imul
push
(bad)
add
ds
sub
mov
daa
ins
sbb
fnstcw
out
jg
and
sbb
cmps
or
ret
shl
jae
ins
jg
in
jl
inc
add
out
cdq
out
dec
mov
mov
or
xor
mov
hlt
jno
xor
test
repnz
cmp
jle
jmp
pusha
xchg
mov
add
loopne
mov
leave
and
fst
xchg
in
jmp
push
das
cmp
cmp
sbb
loop
fild
adc
mov
push
push
aas
pop
mov
daa
xor
in
idiv
inc
cmp
cli
adc
outs
jmp
inc
mov
dec
inc
pop
adc
mov
and
mov
sti
pop
cmc
push
adc
jle
ror
inc
dec
rsqrtps
fnsave
js
sar
mov
inc
arpl
(bad)
popf
cmp
lock
fld
push
add
push
loopne
test
xchg
adc
sbb
xchg
mov
hlt
ret
fcom
or
xchg
push
int3
inc
jne
test
arpl
inc
jp
ret
jp
cld
xchg
aam
xlat
jae
adc
inc
cmp
pop
and
jns
mov
jp
and
xor
jo
mov
mov
test
xchg
cmp
xor
je
sbb
dec
cmp
sub
mov
xor
adc
pop
jnp
int3
add
mov
es
mov
(bad)
jo
outs
pop
pop
or
xchg
aam
jecxz
mov
or
out
push
out
movs
sub
cwde
cld
mov
(bad)
lock
nop
aam
ret
sbb
push
lock
push
and
out
out
test
cmp
(bad)
call
mov
mov
imul
add
aam
adc
inc
fdivr
fdivp
mov
ja
imul
push
iret
sar
fwait
je
ins
outs
mov
icebp
(bad)
nop
adc
xchg
lea
aad
lods
gs
ss
ds
jbe
jle
jp
push
or
gs
mov
in
pop
ins
adc
shl
lahf
inc
jl
test
and
mov
ja
lahf
adc
sbb
ins
push
inc
cmps
outs
push
fnstcw
mov
mov
mov
out
rcr
shr
adc
lods
mov
push
sub
arpl
mov
stos
adc
cmc
sbb
lods
daa
add
mov
jae
inc
sbb
adc
ins
fidivr
test
xchg
sti
les
in
sbb
leave
sbb
sbb
int3
repz
fucomi
cmp
retfw
mov
pop
daa
xchg
clc
pop
daa
pop
lods
cli
jg
bound
add
adc
push
mov
ds
cld
out
or
(bad)
jl
ret
lock
js
leave
aas
imul
and
jge
popf
ror
test
in
mov
sub
cld
sti
pop
or
lahf
nop
add
pop
inc
mov
aas
sub
push
iret
std
push
jp
sahf
push
jl
dec
adc
(bad)
mov
pop
aam
push
cmc
cld
jae
add
inc
and
pop
jns
adc
xor
ins
and
or
cwde
jns
xor
stc
mov
pop
dec
xor
lahf
adc
jo
ficom
jno
dec
fisub
inc
push
retf
pop
mov
jo
inc
test
xor
inc
pop
push
sub
cdq
mul
pop
test
push
mov
(bad)
cmps
xchg
xchg
jmp
ja
stc
ds
mov
test
repnz
and
retf
adc
mov
pop
jecxz
nop
fdecstp
xchg
jg
test
dec
pop
scas
mov
jo
nop
es
jbe
in
pop
jecxz
xchg
xchg
mov
mov
scas
sbb
pop
add
pop
xchg
xor
stos
shl
shl
mov
jecxz
xchg
jle
ins
pop
pop
in
loop
or
mov
mov
bound
jmp
jle
mov
test
(bad)
gs
inc
xchg
daa
or
shl
aaa
scas
cli
jno
sbb
shl
scas
inc
repnz
or
add
stos
jmp
(bad)
stos
inc
fmul
jl
mov
xlat
fadd
inc
inc
mov
sbb
aam
int3
aas
sbb
(bad)
jne
adc
stos
mov
retf
mov
push
pusha
or
xor
(bad)
dec
dec
ja
jns
and
cld
inc
push
cmc
and
xlat
add
and
sbb
xlat
mov
imul
iret
jae
(bad)
ss
fnstsw
rol
pop
mov
xor
add
xchg
sbb
mov
or
push
fdivr
cmps
iret
mov
push
ins
fcomp
ins
inc
out
mov
aam
sbb
mov
mov
pop
cmps
push
je
dec
cmps
(bad)
pmaxub
mov
bound
repz
es
add
outs
stos
lock
fadd
dec
shr
sbb
lods
xchg
push
nop
inc
je
dec
jno
nop
inc
pop
mov
mov
mov
and
cmp
or
dec
fst
jbe
loope
adc
stos
mov
sbb
pop
inc
cli
xor
cmp
iret
in
inc
aam
mov
std
fwait
sub
push
jo
and
mov
inc
das
inc
test
mov
int
iret
pop
aaa
shl
fs
mov
cwde
inc
aad
inc
ret
cmp
push
ror
or
das
cmp
loope
inc
mov
or
push
retf
scas
in
xchg
inc
movs
cli
rcr
add
movs
fst
ins
stc
retf
ret
lock
mov
stc
(bad)
jp
add
jno
push
aad
scas
cld
cs
daa
or
mov
(bad)
cmp
out
cmp
sub
ins
clc
repnz
icebp
jge
sub
mov
hlt
push
jae
div
mov
std
inc
cmp
sbb
mov
mov
enter
add
pop
dec
cmp
sub
pop
push
(bad)
ss
pop
add
cld
cmc
in
mov
inc
adc
inc
popf
hlt
repnz
jbe
or
mov
inc
das
ja
mov
adc
and
imul
aas
inc
push
inc
jp
stc
lods
mov
adc
mov
push
jg
jae
pop
aas
push
popf
aas
data16
out
jecxz
loopne
cmp
test
or
or
dec
jecxz
lods
add
push
sub
stos
ret
mul
cmp
iret
lsl
sub
dec
sbb
sbb
pusha
hlt
xor
into
push
mov
inc
mov
cmp
arpl
mov
hlt
push
fucomp
and
stos
pusha
pop
or
add
(bad)
xor
sbb
test
dec
repnz
cdq
xchg
xor
inc
shr
or
inc
add
dec
mov
add
inc
call
adc
cmp
jo
fs
mov
(bad)
mov
iret
lods
lock
cli
mov
push
jns
mov
sub
mov
xchg
jnp
and
jmp
mov
mov
rcr
movs
aas
retf
scas
push
sahf
into
cmps
fstp
mov
fmul
ja
jo
pop
jl
(bad)
(bad)
cmp
lds
jg
xchg
jg
clc
mov
pop
imul
test
mov
push
inc
jbe
dec
jg
(bad)
and
inc
or
push
fnsave
hlt
inc
xor
jbe
fmul
mov
call
in
pop
test
push
jle
or
ret
push
xor
setae
fcmove
pop
jne
icebp
xlat
cwde
cmp
adc
push
clc
adc
out
inc
call
imul
adc
aam
pop
sti
sbb
jl
jnp
shl
loopne
push
mov
aas
sub
mov
jno
ret
aad
ss
push
push
scas
or
lahf
sub
enter
adc
xchg
test
adc
out
cwde
dec
jmp
dec
cdq
sbb
sub
sbb
rcl
adc
pop
es
repnz
fs
dec
sbb
jg
je
inc
lods
inc
pusha
inc
div
mov
adc
ins
in
sbb
cmc
mov
dec
sub
scas
mov
jmp
inc
dec
mov
inc
mov
jg
cmp
sbb
mov
loope
in
xchg
xor
add
aaa
jns
sub
(bad)
xchg
sar
fstp
and
in
pop
pop
ins
or
mov
(bad)
std
or
shr
repz
and
mov
dec
mov
(bad)
(bad)
scas
icebp
sti
adc
fistp
mov
(bad)
mov
(bad)
or
push
xchg
cmps
sbb
leave
push
and
ret
cmps
mov
inc
test
cwde
xchg
dec
mov
cdq
(bad)
adc
cmp
dec
xor
lock
loopne
inc
jg
mov
mov
lods
inc
xchg
sub
or
push
aam
popa
mov
rdmsr
test
test
mov
mov
jmp
aam
jne
mov
sbb
clc
fsubr
or
inc
mov
sar
repnz
std
xor
in
mov
mov
xor
in
imul
jg
mov
scas
push
(bad)
mov
sbb
adc
pop
xchg
ror
pop
dec
popa
add
adc
push
ror
addr16
(bad)
mov
ins
sbb
enter
push
mov
mov
pop
ins
jnp
mov
push
test
in
(bad)
jle
adc
out
xchg
adc
xchg
push
pop
xchg
jbe
movs
jecxz
push
or
(bad)
cmps
mov
ins
mov
jg
scas
sub
cmp
pop
je
mov
mov
cmps
in
int3
or
lahf
jmp
ins
test
sbb
les
push
xchg
mov
cmp
fadd
pop
push
push
int
xor
rcr
repnz
fwait
je
add
aad
jb
mov
mov
cmp
dec
cmps
sar
sar
scas
retf
mov
cmps
lods
les
retf
ins
add
aam
daa
in
call
retf
inc
inc
std
int
fstp
cmp
jg
pushf
ror
daa
xchg
cmps
sahf
add
pop
(bad)
imul
cdq
popf
dec
mov
test
jae
js
outs
push
ds
aas
ja
aam
jmp
jne
push
iret
repz
rcr
dec
sub
stos
je
stc
jmp
in
in
jmp
sbb
test
pop
fcom
jmp
mov
loop
call
std
call
icebp
mov
sub
sbb
inc
popa
(bad)
adc
in
test
je
shr
and
lock
outs
jecxz
aaa
push
stc
loope
mov
js
(bad)
jns
cmp
out
and
jmp
rol
mov
xchg
loop
lea
cmp
jge
(bad)
sbb
(bad)
add
in
dec
xor
sbb
xor
data16
fild
lahf
jmp
leave
pop
loopne
sbb
jb
bound
add
daa
out
mov
add
sbb
push
aas
rol
pop
mov
xchg
jg
cmps
adc
data16
mov
xchg
mov
dec
jnp
xchg
lock
mov
xor
sub
sub
pop
push
movs
add
pop
imul
push
sub
call
loopne
lahf
test
pusha
loopne
adc
cmovl
sbb
scas
rcr
mov
jmp
adc
adc
sbb
cmc
stos
ss
mov
push
loopne
pop
and
or
sub
xchg
mov
(bad)
sub
mov
in
aad
fst
dec
sbb
mov
test
sbb
mov
loope
stc
jmp
mov
mov
dec
sub
jmp
das
sar
xchg
and
outs
and
jmp
call
pop
in
or
add
(bad)
adc
pop
gs
xchg
jmp
or
jae
add
in
clc
popf
push
lock
(bad)
popf
lea
outs
test
fidivr
enter
jmp
outs
sahf
mov
fmul
mov
movs
or
cld
mov
mov
(bad)
xor
and
xchg
adc
mov
ins
clc
sbb
repnz
sbb
dec
imul
ss
cmp
imul
cmp
cli
fistp
repz
push
jno
sbb
sub
out
sub
mov
imul
jnp
push
adc
cmp
lds
sbb
xchg
or
or
mov
inc
inc
or
push
nop
pop
rcr
or
out
repz
add
cmp
frstor
in
jnp
xor
pop
(bad)
sbb
dec
in
jp
inc
rcl
mov
push
ret
sub
mov
xchg
sub
xor
sub
ins
xor
std
in
gs
in
cmp
in
retf
and
aas
xchg
sbb
repnz
jle
pop
pop
push
mov
std
xchg
jne
in
mov
add
push
push
cmp
retf
jg
push
push
not
jbe
jmp
push
retf
cmc
jne
pop
adc
jnp
push
mov
std
pop
inc
in
test
lea
jns
cmp
out
cmps
aaa
mov
cli
jns
push
push
jno
sub
sub
jne
push
and
dec
or
mov
mov
adc
fwait
push
sbb
sub
mov
outs
push
jmp
(bad)
out
adc
ins
push
(bad)
loop
mov
pop
stos
div
cmp
out
sub
push
aam
jns
push
sti
jb
pop
neg
xor
out
enter
stos
cmp
add
mov
cmp
xor
xor
arpl
mov
ins
lahf
(bad)
out
out
adc
sbb
jl
les
xor
int
pop
push
jbe
es
dec
mov
or
fidivr
mov
lock
xor
pop
or
cmc
clc
mov
pop
dec
sbb
jle
cs
iret
clc
cmp
push
xchg
mov
add
in
jbe
xchg
xchg
xor
pusha
ss
mov
sbb
(bad)
inc
movs
xor
jecxz
cmp
jo
(bad)
push
and
pop
mov
adc
push
aaa
jp
movs
add
in
loop
dec
aam
cmps
test
mov
ja
or
xor
xor
call
imul
push
or
cmp
mov
xor
pop
ror
jbe
xchg
inc
sbb
test
cwde
dec
adc
xor
lock
push
repnz
or
xor
xor
fidiv
xchg
dec
stc
aaa
fs
aaa
xor
xchg
add
aam
mov
or
sub
or
mov
cwde
sti
and
imul
int3
or
repnz
in
ins
xor
push
out
ins
aad
imul
movs
fcomp
je
or
jmp
dec
aaa
adc
jns
mov
dec
out
mov
icebp
out
scas
dec
and
cmp
out
je
xchg
fs
aas
add
outs
imul
pop
dec
cwde
bound
jne
lock
mov
push
jb
mov
and
pop
sub
or
mov
sbb
cmp
movs
add
outs
shl
iret
inc
(bad)
xchg
loope
sti
or
jbe
xor
popf
xlat
adc
std
inc
mov
outs
dec
pop
ins
and
sbb
scas
ja
cmp
mov
popf
(bad)
adc
sar
popa
inc
je
test
les
push
xor
push
xchg
prefetch
or
dec
(bad)
fwait
mov
add
pop
mov
stos
int3
ja
dec
cmps
pop
pop
dec
mov
int
fistp
and
movs
cld
mov
sar
push
add
je
lock
jne
dec
call
pop
imul
test
pmulhw
xchg
or
aam
arpl
out
xchg
(bad)
xchg
or
ins
mov
jae
das
pop
cmp
shl
sub
scas
std
adc
adc
push
cli
dec
inc
mov
mov
daa
cmp
inc
sbb
out
icebp
xor
sbb
popa
mov
test
cmps
nop
mov
or
loop
int3
dec
pop
fprem
adc
rcr
sub
xchg
in
pop
out
mov
movs
push
cdq
shl
xchg
shl
loope
scas
shl
or
xor
movs
xchg
adc
or
adc
cmp
(bad)
inc
dec
lods
jnp
mov
inc
or
aaa
data16
dec
test
sbb
pop
fnstcw
mov
mov
mov
xor
lahf
pop
ins
jmp
movs
jmp
shl
test
(bad)
xor
ja
retf
lahf
dec
mov
pop
add
not
push
jo
xchg
push
jle
pop
inc
dec
xor
push
call
sahf
jg
mov
iret
(bad)
in
pop
cmp
mov
sub
pushf
std
jo
sub
cmp
mov
add
sbb
out
in
jne
pop
shl
sahf
or
test
enter
mov
ds
and
pop
mov
mov
or
in
loope
mov
mov
push
hlt
sub
popf
(bad)
jns
lods
inc
mov
adc
ja
loop
pop
jns
fisubr
das
vshufps
movs
add
imul
int
cs
sub
sbb
mov
hlt
cmp
push
adc
xchg
cdq
repz
xor
add
adc
sbb
mov
sub
lods
pop
data16
inc
pop
push
cdq
or
push
sub
xchg
sub
or
pop
fidiv
rcl
sub
pop
and
adc
sub
dec
popa
xchg
ja
sti
(bad)
and
pop
push
push
in
jmp
inc
lahf
push
ror
repnz
jg
out
pop
rol
xor
jecxz
sbb
jne
and
lods
pop
mov
aam
and
jmp
ret
imul
fld
(bad)
not
stc
ror
mov
out
fsub
lea
sahf
dec
dec
push
test
mov
sar
sbb
push
or
mov
adc
gs
add
or
into
stos
push
jmp
sub
sub
fstp
aad
dec
cmc
addr16
in
popf
daa
sub
inc
dec
dec
adc
xchg
(bad)
in
mov
cmp
div
and
fmul
cmp
add
clc
xchg
jns
imul
je
cmp
sub
and
ror
sub
icebp
mov
imul
hlt
imul
push
xor
jae
hlt
adc
inc
jo
mov
push
fs
inc
push
test
xor
mov
or
cwde
repnz
rol
pop
inc
add
das
adc
repz
je
jnp
push
enter
into
cli
shl
call
mov
ja
dec
ins
int3
and
mov
and
pop
xor
test
dec
pop
frstor
jns
mov
push
adc
scas
dec
jb
ds
mov
sbb
inc
ret
xchg
cmp
add
inc
data16
inc
fwait
mov
inc
mov
adc
imul
lods
mov
mov
js
jle
imul
fadd
mov
imul
sbb
pushf
or
fild
mov
sub
aas
rol
add
sbb
cmp
inc
xchg
lahf
addr16
sub
mov
jns
ror
jbe
mov
sub
cmp
enter
sbb
aad
xchg
into
xchg
or
fld
cmp
cld
gs
dec
out
fiadd
xlat
inc
stos
(bad)
fisttp
mov
cld
out
cmp
xchg
ror
mov
sub
imul
clc
pusha
sub
sbb
dec
cld
xlat
push
das
cli
in
ins
clc
inc
xor
(bad)
or
ficom
cmp
add
and
sbb
xchg
bound
sub
stc
mov
ins
shl
fmul
movs
push
inc
fld
scas
pop
cmps
std
pmulhuw
mov
addr16
mov
pop
(bad)
and
cdq
ja
add
je
mov
jb
rol
pop
(bad)
das
adc
or
retf
mov
mov
aad
call
pop
push
mov
adc
addr16
jne
das
and
sub
xchg
bound
sbb
push
cdq
mov
leave
adc
shl
and
fcomp
in
inc
adc
add
leave
jno
repz
push
lock
ins
dec
cs
mov
push
push
inc
fwait
dec
xor
adc
jge
movs
cli
pushf
fimul
push
add
pop
xchg
addr16
xor
jns
mov
and
call
sbb
jmp
and
daa
add
std
fild
ficomp
or
sbb
push
ret
push
das
adc
popf
mov
into
or
scas
sbb
daa
jnp
and
push
das
ins
sub
dec
ds
or
mov
push
test
mov
mov
(bad)
adc
movs
test
retf
inc
cmp
pcmpgtw
add
sub
in
outs
ds
sub
xchg
rcl
mov
mov
jecxz
std
arpl
setle
sar
stos
sbb
pop
jbe
xor
push
push
cmp
outs
push
sbb
les
cmc
shl
fld
cwde
(bad)
imul
pop
add
mov
xchg
mov
pop
add
test
push
xor
push
xchg
nop
xchg
xchg
ret
xchg
hlt
aad
ret
add
das
push
dec
xchg
mov
scas
inc
push
xchg
cmp
popa
fidiv
stos
pop
inc
push
fistp
mov
scas
pop
add
es
imul
or
inc
jmp
stos
add
and
mov
not
fldcw
shl
shl
xchg
out
or
ss
mov
xlat
sbb
or
dec
push
add
jnp
or
dec
cmp
mov
push
jo
mov
mov
mov
cmp
sbb
bound
loopne
xchg
or
or
mov
adc
mov
imul
out
mov
cdq
lods
push
cmp
out
adc
jl
fistp
jnp
jns
je
pop
stos
movs
inc
jmp
popa
jns
and
aas
adc
mov
test
enter
dec
cmp
pop
pop
(bad)
nop
ss
add
repz
inc
adc
mov
dec
int3
lds
inc
lea
push
loope
xchg
cdq
into
int
xchg
mov
fnstenv
add
cmc
hlt
push
sbb
dec
mov
or
push
xchg
adc
(bad)
das
(bad)
js
(bad)
add
hlt
push
dec
imul
push
mov
test
cmp
sti
fcmovbe
test
cmp
push
mov
jns
dec
loopne
mov
retf
sahf
mov
imul
sbb
loope
pop
xor
sub
mov
add
sbb
or
jg
cmp
cmp
adc
ins
mov
jno
fcom
sub
jb
out
pop
or
mov
aas
sbb
imul
addr16
jb
rcl
inc
rdtsc
mov
leave
dec
stc
sub
call
loope
fwait
movs
inc
push
push
pop
hlt
cmp
jl
and
dec
(bad)
fsubr
cmps
(bad)
mov
jns
cmp
(bad)
pusha
adc
je
sbb
popw
pop
lock
iret
sub
inc
jae
push
movs
les
shr
xor
dec
cmp
lock
js
sub
fst
pop
push
retf
std
add
popa
xor
xchg
push
add
xchg
rol
ret
pop
fwait
cmp
popa
cmps
test
sub
adc
test
aas
pop
sbb
ret
aad
movs
inc
imul
dec
fcmovnbe
mov
adc
push
stc
inc
push
pop
sub
out
call
mov
scas
adc
or
es
mov
lods
in
div
ja
loop
sar
pop
push
stc
pop
push
outs
popf
or
push
mov
fild
cli
les
push
mov
ss
jb
call
lods
xor
bound
mov
push
pushf
sbb
jle
jo
adc
nop
aad
jp
push
sub
ret
out
rcl
test
push
xor
mov
inc
sbb
jmp
cdq
jge
push
inc
sbb
mov
jg
push
scas
in
les
jns
fbstp
pop
lock
add
das
sbb
sbb
mov
mov
and
dec
sbb
jno
sahf
popa
lahf
add
into
xchg
imul
mov
mov
sub
jecxz
cmp
(bad)
imul
jbe
and
outs
rol
neg
enter
pusha
mov
inc
jmp
jle
jle
cwde
frstor
ins
jns
rcr
pop
movs
jge
mov
jnp
fnstenv
add
je
add
ret
jo
mov
push
sub
inc
or
jmp
mov
call
js
xchg
mov
sbb
sti
adc
xchg
mov
fisub
xor
cdq
scas
inc
fimul
inc
cli
pop
jns
stos
cld
call
xor
sbb
aaa
jp
add
mov
retf
out
repnz
in
stc
lahf
adc
nop
(bad)
mov
cmp
xlat
push
stc
repnz
cli
lahf
pop
push
loop
cmp
(bad)
cmp
movs
std
jle
imul
jno
not
dec
dec
rcr
lock
sbb
jo
adc
mov
lods
mov
(bad)
xlat
xor
outs
fstp
xchg
retf
pop
and
mov
jl
cli
and
shl
mov
and
mov
cmp
shl
jmp
pop
stc
js
sub
xchg
add
jb
cwde
mov
add
push
sbb
popa
call
push
jp
call
xchg
lock
ret
xchg
xchg
dec
mov
jno
cmps
in
jb
sub
or
cld
mov
stc
shl
push
add
xchg
retf
mov
shl
inc
or
pop
mov
push
sub
dec
or
xchg
push
mov
cs
cs
or
jmp
add
movs
(bad)
dec
jecxz
test
pop
mov
imul
cmc
dec
pop
jbe
sub
jmp
mov
pop
mov
fmul
push
xchg
in
add
xchg
addr16
sbb
dec
je
call
pushw
cld
(bad)
ins
jle
push
in
jecxz
pop
ror
int
shl
(bad)
or
xor
inc
inc
cmp
sar
add
adc
out
mov
inc
mov
inc
pop
pop
imul
rcr
mov
cmp
sar
adc
cmps
mov
ins
xchg
push
xchg
out
(bad)
mov
mov
sbb
xor
shr
mov
mov
loope
idiv
dec
or
adc
mov
scas
fs
sub
sti
mov
ss
inc
xor
xor
xlat
add
dec
xchg
mov
ret
dec
repnz
jl
into
(bad)
pop
jecxz
sahf
arpl
cmp
and
sbb
shl
mov
in
fldlg2
or
popf
mov
or
xor
std
iret
or
add
inc
jb
je
and
inc
pushf
sub
sbb
inc
xor
lea
adc
(bad)
test
bound
or
cmp
test
bound
aaa
inc
scas
sbb
cdq
mov
bound
in
jg
xor
mov
add
gs
push
(bad)
popf
or
or
neg
cmp
cmp
int3
rcl
add
scas
jmp
fisttp
sbb
add
ret
imul
cmc
push
shl
pop
lea
xor
lods
jno
test
fs
add
daa
push
sti
mov
jg
mov
xor
retf
add
jae
js
rcr
xchg
fisttp
or
pop
cmp
(bad)
lock
jmp
ffree
add
call
and
fwait
sub
push
push
rol
mov
dec
out
push
popf
mov
loop
add
mov
pop
fld
inc
mov
and
pop
fcmovne
stc
push
sub
push
scas
sbb
fld
jnp
mov
xchg
sub
inc
pop
movs
(bad)
push
ror
rcr
(bad)
mov
movs
mov
sbb
jle
imul
sub
push
test
imul
outs
cmp
fdiv
mov
loopne
loope
lea
sahf
push
push
push
in
mov
out
sbb
ins
stos
repz
jg
repnz
push
shl
fldenv
cmps
in
mov
movs
pop
cmp
cmps
sbb
retf
sub
mov
mov
jo
inc
int
cmps
sub
in
pop
or
fld
push
fistp
vunpckhps
inc
stc
mov
jge
dec
in
adc
cwde
xor
sahf
and
jns
and
stos
and
jge
data16
push
jmp
dec
sahf
leave
sub
xchg
aam
mov
pop
fild
aaa
dec
outs
dec
pop
mov
loop
lahf
xor
or
dec
xchg
mov
pop
xchg
aas
fiadd
add
cmp
js
data16
and
push
jg
dec
je
pop
mov
imul
mov
and
fmul
add
(bad)
gs
inc
mov
and
pop
std
ror
shl
int
in
push
test
xor
cmp
dec
cmp
mov
pop
xchg
dec
xor
fwait
into
jmp
xchg
xchg
sahf
repz
lods
retf
es
mov
shl
out
pop
into
fsubr
push
mov
shr
enter
push
or
cs
stc
add
push
js
mov
push
shl
sub
cld
icebp
cmp
jns
jnp
lods
adc
add
xchg
pop
or
out
je
in
mov
mov
mov
sub
fisub
(bad)
jnp
dec
sub
shl
es
(bad)
out
jb
sub
out
sub
fs
hlt
cli
sub
rol
stos
lods
sub
adc
xchg
movs
mov
mov
shl
clc
cmp
xor
rol
push
dec
retf
add
aam
int
push
cmc
push
js
(bad)
mov
int3
fimul
int
jl
mov
add
jb
pop
and
in
cdq
stos
gs
in
and
mov
in
lahf
jbe
mov
jae
push
retf
ret
push
pop
inc
clc
xchg
out
pushf
cmps
add
mov
adc
push
ret
xchg
arpl
mov
and
inc
mov
repnz
cmps
fs
dec
push
add
loopne
ins
les
lds
push
das
fisub
in
mov
das
(bad)
jne
mov
push
clc
cs
pop
cmp
jmp
arpl
cmp
push
mov
pop
(bad)
push
inc
rol
xchg
inc
or
add
bound
ja
mov
sub
ss
and
inc
pop
push
stos
scas
cmp
scas
jbe
(bad)
cld
pushf
sahf
cmps
popf
outs
push
sbb
lods
shr
rcr
add
inc
or
adc
lahf
push
fwait
sbb
fsub
gs
int
cdq
lahf
into
enter
je
mov
movs
pop
jg
cmp
pusha
int3
pop
and
xchg
sub
and
jbe
fiadd
cmps
or
enter
add
(bad)
imul
fucomi
mov
or
data16
dec
xchg
idiv
sbb
mov
in
sti
sub
fisub
add
mov
out
mov
jg
imul
in
mov
cmps
mov
add
push
lahf
stos
ja
sub
ror
push
xchg
and
inc
ds
pop
or
push
repnz
dec
jne
data16
sbb
call
(bad)
mov
cmp
sub
dec
or
(bad)
and
ret
mov
imul
aaa
xchg
push
sbb
and
sub
cs
nop
(bad)
mov
(bad)
push
fnstcw
in
lea
ret
mov
call
ja
in
push
pop
or
cmps
pop
test
cmp
push
hlt
inc
mov
lea
dec
pop
pop
and
fdivr
and
(bad)
(bad)
inc
mov
(bad)
loopne
rcl
and
sub
push
jb
push
xchg
cs
jmp
dec
cmp
inc
add
xchg
arpl
in
jmp
outs
loopne
pop
loope
sub
call
add
imul
mov
push
fistp
sbb
(bad)
adc
cmps
sub
mov
std
mov
scas
test
dec
test
mov
lahf
jg
xchg
inc
in
test
dec
and
cmps
sar
mov
sub
mov
sar
stc
or
fnstenv
pop
imul
mov
sub
lods
pop
mov
push
call
and
inc
(bad)
nop
mov
mov
dec
and
sub
rol
aaa
out
ret
mov
scas
ins
inc
adc
jno
cmp
cmp
bound
(bad)
mov
mov
imul
jl
pushf
jbe
inc
scas
pop
adc
cld
pusha
(bad)
cld
retf
dec
imul
push
mov
pop
pop
adc
mov
cmp
dec
pop
inc
add
xchg
fistp
xlat
lea
mov
pop
push
mov
and
pop
fistp
push
xchg
push
xchg
in
xchg
cmp
mov
pop
sub
jb
jl
push
js
xchg
pop
dec
adc
pop
sbb
hlt
push
xchg
mov
jne
mov
xor
cmc
jmp
or
push
mov
sub
pop
movs
adc
in
or
mov
scas
ret
inc
dec
repz
pushf
xor
(bad)
xchg
popa
push
sub
adc
test
mov
ror
cmp
test
xchg
lock
mov
sub
sbb
in
push
nop
mov
ret
shl
mov
jmp
test
mov
pushf
scas
cwde
fwait
inc
pushf
push
lock
jge
(bad)
mov
add
ret
repz
mov
mov
in
stos
mov
arpl
mov
mov
push
lods
cmc
sbb
js
repnz
jg
dec
fldcw
push
pushf
fcomp
sub
les
sbb
pop
loopne
xor
stos
ja
and
jb
popa
inc
aaa
or
adc
jge
dec
xchg
jmp
les
lock
mov
jmp
and
mov
mov
arpl
in
stos
daa
sbb
xor
repz
xor
test
xor
jmp
add
push
and
sar
pop
out
mov
adc
imul
ret
test
mov
pop
xor
push
ins
sub
sti
(bad)
(bad)
aad
jne
cmp
rol
mov
cmp
fnstenv
aam
ret
jnp
mov
ret
repz
popf
leave
retf
pop
xor
mov
aad
jae
ror
ret
mov
out
fimul
stos
xchg
jns
fwait
call
jp
aad
push
pop
or
test
pop
nop
sti
dec
and
and
test
and
(bad)
imul
out
aas
in
(bad)
mov
add
in
sbb
into
int3
dec
adc
ins
mov
fimul
xchg
or
jle
sar
jnp
lea
jle
inc
dec
test
shr
aaa
pop
xchg
jmp
dec
outs
retf
fldcw
sub
mov
sar
push
cmp
xor
dec
out
rol
mov
in
push
mov
into
ja
xor
or
sbb
fnstenv
mov
mov
imul
cmps
ins
mov
nop
leave
out
jno
out
pop
lds
mov
add
or
pop
and
(bad)
aam
dec
mov
xchg
mov
icebp
xlat
scas
fsubr
dec
push
ficomp
add
dec
sti
enter
fldcw
in
inc
clc
push
adc
or
push
stos
sahf
add
fwait
sub
fsubr
stc
cld
or
ss
pushf
sub
cmp
adc
jb
sub
jg
jle
sar
and
mov
and
ds
pop
aad
fidiv
pop
cmc
popa
xchg
in
ror
jle
in
and
mov
sbb
or
pusha
inc
gs
in
mov
dec
rcr
xchg
outs
or
int
push
test
in
mov
jae
rol
ret
pop
xchg
dec
sbb
cs
fwait
adc
popa
sti
movs
xor
pop
jmp
or
cmps
sbb
inc
cdq
jge
inc
ins
scas
mov
inc
dec
es
mov
arpl
(bad)
jge
sub
sub
enter
aad
aaa
cmp
jno
mov
and
dec
inc
and
gs
lahf
add
dec
rcl
or
inc
xchg
enter
pop
dec
popf
or
add
call
inc
cmc
ins
dec
cmp
nop
mov
les
jne
sub
jmp
mov
test
pop
xor
int
out
cdq
jg
popf
mov
xchg
cs
sbb
sbb
test
mov
pop
movs
lahf
sub
push
mov
add
daa
xchg
out
ret
or
mov
lea
stc
ror
(bad)
xlat
mov
dec
cmp
repnz
lock
mov
int
and
mov
repnz
and
aas
fbstp
mov
inc
call
fimul
cmps
add
lods
dec
leave
repz
sbb
repnz
inc
lds
add
(bad)
dec
cdq
and
cmp
jmp
les
mov
(bad)
sbb
outs
inc
push
ins
mov
adc
xchg
icebp
dec
jo
cdq
popf
outs
xor
sti
in
xchg
cmp
loopne
loopne
jno
adc
push
xor
jg
icebp
add
sbb
call
add
adc
pop
push
outs
pusha
push
pop
(bad)
xchg
mov
sbb
sbb
stc
sahf
mov
cdq
dec
loopne
(bad)
adc
push
mov
inc
xchg
lea
cmp
scas
and
movs
adc
test
mov
arpl
mov
mov
sub
das
not
aaa
or
popa
mov
push
into
(bad)
lds
inc
(bad)
cmc
cmp
fmul
loope
loop
jge
xchg
or
inc
stc
fldl2t
inc
scas
in
push
sub
and
jp
sbb
push
ss
(bad)
test
into
mov
sbb
sub
xchg
aam
pop
stos
jge
pop
xchg
movs
movs
mov
jmp
adc
daa
ins
mov
js
pop
pop
cmc
inc
jp
push
in
xlat
rcr
lds
and
in
or
cmps
adc
stc
mov
mov
add
das
pop
movs
nop
sbb
enter
imul
and
test
xor
call
outs
inc
outs
xchg
push
push
in
subps
out
add
mov
ins
arpl
xor
mov
jp
inc
mov
push
lea
icebp
sbb
xchg
mov
pop
inc
ret
cmp
or
pusha
jmp
daa
and
mov
adc
inc
xchg
push
dec
out
(bad)
mov
or
fisub
pop
mov
inc
mov
xor
in
shl
mov
sub
imul
or
cld
sahf
mov
push
fnsave
inc
and
jle
stc
setl
(bad)
in
sub
mov
sahf
cmp
adc
mov
retf
das
outs
inc
ret
mov
mov
adc
dec
lds
nop
jb
jb
loope
cmp
pop
cmp
stc
int3
pop
add
or
ss
dec
xor
push
adc
mov
mov
int
cdq
mov
test
adc
xchg
or
lahf
rol
mov
fwait
ins
mov
mov
or
outs
test
mov
mov
outs
fs
sub
xchg
xor
xchg
loop
(bad)
inc
les
xchg
cmp
js
mov
scas
mov
call
cmp
xchg
test
fcom
and
test
lods
push
mov
cmp
inc
mov
cmps
leave
mov
inc
inc
paddsw
mov
dec
xchg
push
fild
loopne
mov
inc
frstor
leave
dec
(bad)
(bad)
dec
pusha
aas
loopne
jecxz
push
aad
arpl
inc
add
mov
scas
fist
outs
out
inc
xchg
data16
jl
int3
ds
xchg
stc
fwait
push
fisubr
xchg
loop
clc
pop
lods
rsqrtps
ss
xor
in
out
jmp
fidiv
lock
sub
aam
retf
loope
jle
sub
lea
add
inc
ret
xchg
cmp
(bad)
push
pop
jbe
pop
jmp
movs
cmp
and
mov
jge
fcomp
or
jp
std
jl
fimul
cwde
jecxz
test
iret
or
rol
(bad)
loopne
xor
xchg
iret
jge
fwait
add
into
in
or
movs
pop
pop
loope
cmp
push
and
ss
je
rcl
push
jl
pop
mov
jns
hlt
pop
ss
inc
in
and
movs
sahf
inc
sub
data16
mov
xor
push
jns
xchg
sahf
aaa
lahf
jecxz
dec
lds
or
repz
aam
loope
sahf
xchg
enter
repz
call
pop
push
(bad)
addr16
adc
sub
cli
dec
shl
test
sub
jmp
sahf
in
jmp
ja
push
xor
imul
fs
pop
sub
mov
cmp
fs
jmp
push
in
call
add
add
loope
shl
gs
xchg
dec
xor
adc
add
retf
add
sub
inc
or
imul
stos
sbb
xchg
(bad)
enter
sar
jbe
rcr
leave
scas
mov
push
cdq
sti
xlat
xchg
mov
ror
sub
fisttp
jne
push
push
inc
aam
retf
dec
fucomip
(bad)
inc
mov
cmp
outs
cmp
mov
and
shl
inc
aaa
pop
cmp
cmp
and
ficomp
scas
mov
loop
in
jecxz
xchg
and
jb
push
and
jne
pusha
stos
jae
xchg
pop
arpl
loop
mov
(bad)
rol
xchg
ret
(bad)
cmps
mov
mov
inc
inc
aas
inc
mov
pop
xor
sub
mov
pop
outs
sub
push
fnstcw
mov
bound
ror
push
out
mov
adc
sbb
out
mov
stc
fdivrp
inc
outs
xchg
aaa
mov
imul
sti
or
pop
test
stos
imul
clc
fstp
mov
push
out
jae
(bad)
xor
and
mov
push
aam
add
leave
jb
imul
xor
loopne
lahf
sbb
inc
inc
sub
jecxz
out
inc
push
ss
inc
dec
dec
or
push
mov
call
retf
movs
dec
dec
stos
sub
sar
popa
pop
sub
popa
out
and
add
fnstcw
gs
ins
jnp
xor
sar
dec
nop
xor
jge
inc
sub
sbb
sbb
sub
jg
repz
(bad)
les
jb
sahf
sar
cmc
nop
hlt
mov
jecxz
out
adc
sbb
sbb
fcmovnu
jmp
inc
mov
daa
push
jb
cld
sub
aam
cdq
push
xor
xchg
and
out
aas
std
repnz
inc
add
icebp
rcr
inc
inc
mov
lock
mov
sub
add
push
sbb
pushf
ja
mov
sbb
push
xchg
les
or
test
inc
ins
adc
cdq
lods
rcr
xchg
in
or
and
shl
(bad)
mov
fistp
sbb
setg
hlt
push
iret
xor
mov
aad
and
outs
sbb
and
sbb
sbb
inc
pushf
js
push
mov
xor
sbb
hlt
sbb
dec
pop
jmp
add
(bad)
push
jp
pop
push
(bad)
loopne
les
test
addr16
aam
inc
push
cwde
xchg
or
or
xchg
out
daa
mov
xchg
test
in
cmp
mov
pop
jnp
xor
mov
or
cmp
aaa
shl
iret
or
dec
shr
pop
mov
cwde
pushf
inc
ja
fiadd
dec
mov
sbb
or
dec
mov
nop
xchg
and
les
pop
pop
or
adc
jno
or
xchg
ds
push
and
inc
int3
ror
outs
sbb
cmp
xchg
aaa
xor
xchg
bound
mov
mov
pop
fisubr
je
not
movs
adc
repz
inc
pop
push
imul
pop
enter
mov
in
jmp
shr
iret
les
ror
(bad)
mov
lds
pushf
sbb
sti
xor
mov
xor
rcl
stos
popa
xchg
cmp
dec
(bad)
cmp
inc
lds
xor
xor
or
push
and
fisub
mov
in
ret
inc
xchg
data16
add
mov
pop
jmp
daa
xor
(bad)
(bad)
pop
sbb
xchg
xchg
out
jmp
jl
lds
lock
mov
test
mov
cli
bound
and
sub
ja
(bad)
stc
(bad)
jno
mov
pop
or
icebp
push
mov
xor
dec
sbb
scas
mov
xchg
xchg
cdq
repz
ds
imul
or
mov
cs
dec
mov
jb
jge
sub
push
dec
outs
sar
or
lahf
jb
pop
inc
push
push
xchg
inc
sub
fmulp
jge
in
add
mov
mov
jb
aaa
pusha
(bad)
cmp
out
ficom
mov
adc
or
mov
xor
fld
and
dec
setbe
iret
test
das
rcl
ret
or
mov
mov
push
mov
push
ss
push
cmps
dec
fs
mov
push
lahf
xor
or
call
stos
cmp
dec
(bad)
jg
xchg
(bad)
movs
mov
sbb
(bad)
mov
mov
std
xor
sbb
cli
jbe
mov
call
into
fs
mov
pop
push
or
std
inc
out
int
push
out
or
pop
cmp
add
jge
icebp
aad
outs
push
test
mov
fdiv
sub
cmp
mov
inc
cs
pop
sub
adc
push
xor
inc
add
mov
scas
lahf
cdq
mov
lods
ror
int3
call
cmp
stc
xchg
sbb
sub
pop
mov
dec
push
dec
mov
jmp
jle
xor
mov
loop
xor
dec
scas
mov
cmps
pop
rcl
mov
add
sbb
pushf
inc
push
inc
inc
lods
out
jp
popa
fadd
and
lods
xchg
mov
je
repz
shl
mov
sub
out
push
jge
imul
aad
into
mov
add
or
pop
nop
test
lds
(bad)
mov
mov
test
add
cmp
or
pop
repz
popf
dec
es
je
jne
pop
ins
stos
or
dec
add
mov
mov
cdq
and
movs
loopne
sub
imul
or
in
das
push
lahf
or
movs
or
pop
dec
fisttp
cli
aas
arpl
nop
retf
inc
xchg
loope
lock
jg
sbb
mov
dec
sbb
jnp
rcr
sahf
call
stos
pop
rol
or
arpl
out
lahf
and
jnp
sbb
lods
rol
aaa
or
push
(bad)
movs
or
xchg
in
mov
mov
imul
(bad)
data16
addr16
fld
cmp
xchg
inc
dec
sbb
movs
pop
cs
iret
and
dec
js
add
sub
cdq
push
or
push
push
retf
inc
dec
or
and
or
cmp
add
leave
rcl
repz
inc
xchg
xchg
mov
jns
sbb
push
mov
lds
out
sbb
rcr
iret
addr16
ret
sbb
cmp
mov
(bad)
pop
mov
test
xchg
mov
stos
cld
mov
adc
add
or
cmp
in
xor
lea
stos
sub
and
and
mov
xchg
jmp
mov
mov
add
xor
jle
mov
push
gs
xor
xchg
jp
dec
repnz
aaa
inc
sub
aas
push
push
ret
movs
enter
push
or
lds
enter
cmp
das
sbb
mov
inc
sbb
pop
retf
pop
int3
jne
pushf
(bad)
jge
ds
retf
cmps
or
jg
jnp
adc
mov
pusha
sub
mov
jle
loope
sbb
les
in
repz
pop
jl
fnstcw
mov
push
lock
mov
bound
les
jae
inc
les
popf
xchg
test
dec
inc
int
out
jp
lea
fimul
sub
test
mov
ss
dec
neg
test
cwde
mov
push
sub
mov
dec
xchg
mov
repz
shl
mov
jns
loop
cmps
cmc
add
cmp
pop
add
xor
call
mov
add
call
jne
mov
push
rcr
inc
inc
jnp
dec
scas
inc
and
cmpxchg
(bad)
icebp
adc
jl
fnclex
js
ins
cmp
add
lds
test
push
cmp
fdivr
jne
ins
xchg
xor
lods
js
cmp
jae
inc
xchg
ss
or
xchg
call
repz
aas
inc
mov
cmp
std
(bad)
jbe
pop
or
jmp
adc
dec
or
mov
(bad)
enter
sub
push
cmps
cmp
mov
mov
inc
stc
int3
adc
push
rcl
fsub
mov
imul
jle
jo
cmp
hlt
in
push
out
call
pop
dec
shr
mov
sbb
enter
cmps
lds
icebp
repnz
and
pop
inc
movs
or
aas
(bad)
mov
in
cmp
scas
adc
adc
sar
xor
lock
addps
adc
sar
mov
aas
(bad)
retf
out
xor
(bad)
mov
sti
push
sbb
push
mov
xchg
test
imul
cmp
mov
ds
inc
sbb
fcom
jge
sub
adc
or
mov
retf
mov
cwde
out
jg
cmp
lock
jle
push
retf
cmps
lahf
inc
das
push
hlt
sar
xchg
or
mov
add
outs
test
std
jge
dec
test
fild
aas
je
cs
adc
lea
ja
into
and
div
push
or
sbb
dec
not
dec
sbb
sbb
mov
inc
pop
psubd
stos
xchg
sbb
inc
stc
lahf
fidiv
push
pop
cdq
arpl
sub
xchg
adc
inc
sbb
mov
mov
fstp
mov
or
mov
mov
cmp
mov
aad
push
and
xchg
je
scas
xor
mov
ret
add
or
cmps
or
pop
and
enter
jno
iret
push
mov
js
repz
pop
in
fiadd
in
mov
cmp
ror
jp
inc
inc
test
mov
aas
ss
test
pop
cwde
xchg
pop
sbb
sbb
test
mov
and
push
cmps
adc
scas
add
add
inc
xor
std
aad
(bad)
push
pop
jno
add
outs
retf
fsub
mov
into
and
mov
lahf
add
and
xchg
aam
(bad)
movs
clc
dec
sub
cdq
push
push
enter
dec
lahf
inc
push
and
xor
lods
movs
(bad)
enter
or
ficom
cdq
jmp
xchg
push
lea
int
fmul
inc
(bad)
cmp
ret
adc
push
mov
cmp
cmp
fimul
sub
xor
fdiv
sub
add
mov
adc
test
adc
xchg
add
pop
mov
pop
addr16
jecxz
shl
cmps
data16
add
mov
int
mov
mov
and
jmp
stos
dec
jle
or
xchg
lods
cmps
lahf
push
mov
or
test
stos
pop
adc
xor
push
jge
fidiv
sub
inc
sar
dec
adc
pop
jge
aad
icebp
and
jl
daa
lahf
adc
retf
pop
movs
mov
jmp
xor
jbe
or
outs
outs
sub
or
out
sub
ss
dec
sub
mov
movs
mov
out
ror
xchg
out
stos
hlt
sub
xchg
mov
sub
mov
mov
sub
shl
gs
fwait
mov
mul
stos
stc
push
sbb
xchg
es
(bad)
cmp
test
stc
jle
pcmpgtw
push
clc
jg
sub
stc
dec
jge
cmps
lods
ret
push
std
es
cld
mov
pop
fnstcw
loope
lock
and
pusha
xchg
adc
sbb
sbb
cmps
arpl
gs
retf
xchg
jp
sahf
(bad)
ds
in
inc
mov
dec
and
and
jns
mov
or
inc
adc
popf
sbb
(bad)
sbb
mov
pop
add
and
cmp
jle
out
sbb
mov
lahf
jg
ins
xor
xlat
cmp
das
pusha
cmp
retf
pop
into
and
xchg
out
mov
xor
push
xor
mov
retf
repz
pop
test
sub
jo
inc
xchg
aad
rcr
mov
add
dec
div
mov
adc
pop
lds
fist
cmp
in
mov
jbe
sbb
pop
mov
cmp
add
je
jbe
xor
(bad)
pusha
outs
iret
mov
enter
add
adc
in
lods
xchg
mov
or
mov
push
mov
adc
xor
(bad)
jb
cmc
cld
daa
(bad)
and
mov
arpl
pop
pop
jnp
int
aas
and
xchg
(bad)
out
not
xchg
or
test
out
(bad)
push
cli
pop
xchg
and
ror
int3
(bad)
xor
mov
lods
cmp
fs
pop
lahf
or
sti
xchg
jl
mov
or
stos
jmp
in
and
mov
outs
div
push
mov
xchg
cs
movs
aas
test
sub
and
cmp
test
mov
sbb
mov
or
test
jne
mov
movaps
push
test
pop
pop
jecxz
aaa
test
add
mov
xchg
inc
jne
das
sbb
sbb
pop
icebp
cmp
leave
push
hlt
cmp
imul
and
mov
adc
in
arpl
data16
push
repnz
push
push
jnp
loope
cdq
mov
push
mov
loopne
aad
div
inc
sar
aas
ja
rol
ds
int
clc
xlat
adc
inc
and
enter
mov
and
mov
add
in
sbb
(bad)
push
mov
ror
push
repz
in
pusha
inc
cmp
mov
dec
adc
cld
popf
sub
ror
in
adc
xchg
shr
lods
and
cmp
ds
scas
fs
adc
jmp
jmp
push
imul
sahf
sub
mov
add
repnz
cmp
mov
push
fisubr
jecxz
push
cmp
(bad)
cmc
mov
jo
hlt
jl
mov
aas
inc
nop
fs
(bad)
outs
mov
cmc
sub
cmps
mov
pop
xor
push
and
out
sbb
mov
pop
cmp
xchg
ret
call
fbld
mov
add
adc
cdq
nop
add
dec
dec
test
pop
and
imul
xchg
rol
popa
jmp
xchg
imul
mov
hlt
add
loopne
pop
jb
jle
(bad)
adc
dec
push
gs
jb
sbb
or
pop
add
inc
mov
pop
shl
mov
(bad)
and
jb
push
add
inc
inc
mov
mov
or
add
cmp
add
mov
xor
popa
scas
icebp
stos
je
sti
daa
xchg
sub
xchg
cmp
pop
cmp
std
sub
lea
jp
mov
addr16
sbb
sub
inc
inc
outs
fcom
out
sub
(bad)
(bad)
loopne
fadd
sar
outs
test
mov
jmp
ss
pusha
mov
or
fcom
jbe
das
shl
aaa
pop
enter
sub
popf
add
into
and
(bad)
aaa
jle
inc
sub
mov
hlt
adc
fst
push
jge
test
mov
test
inc
jae
pushf
popw
div
xchg
xchg
and
xor
call
pushf
cs
ins
cmps
pop
pop
mov
les
mov
lahf
fmul
popf
xchg
xchg
push
xor
mov
(bad)
jns
in
inc
lahf
pushf
js
sub
pop
sbb
mov
in
push
jne
ret
gs
push
out
jae
scas
aam
inc
outs
jecxz
adc
push
mov
mov
ins
sub
ins
addr16
fiadd
mov
push
fcom
pop
jecxz
stc
push
mov
or
inc
push
scas
mov
in
leave
jge
mov
stc
shl
push
(bad)
sbb
arpl
call
lds
cmp
retf
pop
jmp
or
mov
int
sti
retf
or
xor
call
scas
rcl
scas
push
cwde
out
mov
ins
popa
ret
push
or
push
outs
inc
mov
cmps
jle
push
add
xchg
mov
xchg
adc
ret
stc
inc
fstp
stos
bound
cdq
and
test
out
add
shl
fnstsw
jmp
loop
imul
pop
test
aad
in
mov
ins
fdiv
ret
cli
and
xchg
in
fs
sub
mov
fild
rdpmc
jmp
das
jge
inc
or
test
xchg
aaa
xchg
cmps
shl
(bad)
retf
adc
scas
int3
xchg
jmp
dec
sub
sbb
leave
jb
or
lahf
movs
test
sub
sub
xlat
xchg
cmc
cli
mov
aaa
cs
cmp
add
pop
cmp
push
jmp
push
mov
cld
mov
movs
mov
adc
cli
jmp
out
jns
add
pop
mov
call
cmp
sbb
nop
xchg
dec
adc
aam
stos
outs
pop
and
sbb
scas
repnz
aas
ss
pop
cmp
inc
cmp
std
dec
mov
ret
repz
fcmovne
hlt
add
call
jge
mov
and
push
mov
mov
pop
pop
call
sub
movs
sbb
ins
cld
scas
mov
xlat
mov
jecxz
(bad)
jb
pop
pusha
inc
into
out
fyl2xp1
add
rcr
cld
je
cmps
popf
mov
pop
pop
outs
out
ins
jl
fucomp
jbe
xor
jg
mov
sbb
inc
inc
cmp
ror
in
push
test
mov
mov
push
jmp
and
xchg
enter
add
mov
das
daa
push
xor
mov
mov
push
into
arpl
mov
pop
retf
or
daa
std
cmps
xchg
cmps
ret
dec
stc
and
shr
pop
jnp
push
icebp
sub
push
pop
out
test
test
ins
(bad)
ins
not
cli
sub
sbb
out
dec
adc
scas
rcr
xchg
mov
inc
fdivrp
nop
or
jmp
jge
mov
mov
and
imul
adc
fmul
test
(bad)
scas
xchg
jg
xor
aas
xchg
in
add
not
push
jecxz
aaa
outs
shl
xor
jmp
imul
jge
push
and
popa
mov
cmps
sub
mov
adc
aas
stos
data16
or
std
xor
adc
test
iret
mov
jl
cld
xor
mov
rol
(bad)
jmp
mov
jmp
mov
push
imul
jo
cs
mov
lea
in
shr
pop
add
inc
jmp
mov
xchg
sbb
jnp
pop
popf
jbe
inc
sub
mov
inc
rol
aas
imul
cmp
mov
mov
(bad)
sti
sbb
mov
ins
dec
add
icebp
mov
outs
shl
jle
or
popf
fsub
jecxz
test
loopne
movs
ins
outs
(bad)
popa
nop
inc
jmp
xchg
inc
pop
mov
out
dec
jae
xor
cdq
fnsave
js
mov
ins
cdq
pop
sub
pusha
lahf
adc
jmp
fsubp
xchg
dec
sar
fld
pushf
shl
pop
and
pop
xchg
jecxz
cwde
mov
dec
jmp
rcl
dec
(bad)
hlt
mov
jns
jecxz
jmp
pop
jl
xchg
jl
addr16
xchg
xor
ds
shl
mov
or
dec
pop
pop
or
sbb
mov
js
or
test
hlt
out
mov
sar
(bad)
lock
xchg
loop
das
jmp
pop
jmp
lods
and
fwait
xchg
or
xor
popa
or
std
or
adc
iret
dec
pop
(bad)
push
jl
add
lock
in
int3
out
jb
repz
imul
mov
div
jno
adc
pushf
clc
xor
retf
jno
ins
mov
push
test
std
push
push
mov
fnstenv
scas
retf
push
push
repz
scas
jae
sbb
mov
bound
add
inc
js
adc
mov
add
or
aas
mov
add
mov
adc
aad
loop
sub
jo
popf
push
inc
rcr
outs
(bad)
push
repnz
inc
push
fdiv
pop
cmc
mov
gs
(bad)
movs
push
std
or
xor
or
jmp
sbb
cmp
mov
inc
outs
xor
sti
out
mov
inc
not
xchg
mov
mov
pop
fiadd
ds
sti
je
inc
(bad)
dec
call
mov
jl
das
ins
bound
rcl
fsubr
lods
pop
sti
scas
sub
cmp
fwait
cdq
(bad)
out
cmps
scas
retf
shl
icebp
shl
and
adc
std
push
cwde
sbb
fsub
mov
xor
xor
ret
lahf
push
mov
ins
jno
mov
(bad)
xchg
jg
or
push
or
dec
or
es
xchg
mov
stos
add
fst
inc
lahf
movs
xchg
imul
fcmovnb
in
movs
add
iret
inc
pop
scas
lds
mov
adc
gs
push
push
mov
cwde
push
sbb
mov
xlat
pushf
popa
dec
sbb
pop
dec
scas
aaa
push
mov
sub
and
ins
pcmpgtb
jbe
inc
mov
adc
or
adc
push
push
popf
xor
add
inc
repz
sbb
jns
xor
lds
jle
sub
dec
jle
mov
or
mov
mov
add
inc
cmp
movs
je
std
ins
mov
sbb
movs
dec
in
add
test
xor
push
xchg
mov
mov
in
jbe
aas
push
xchg
jg
adc
std
nop
inc
ds
fwait
xchg
hlt
xchg
and
cld
jecxz
jo
cdq
push
(bad)
iret
ss
jg
mov
out
pushf
(bad)
ins
(bad)
test
inc
ror
stos
daa
lods
mov
mov
imul
(bad)
push
jbe
pop
mov
pop
retf
pop
rcl
outs
fdiv
xchg
adc
cli
jge
push
shl
adc
add
dec
daa
in
dec
fdivr
int
movs
(bad)
dec
pop
ss
fxch
pop
imul
mov
push
arpl
call
mov
xchg
jecxz
mov
aas
movs
cmp
out
shl
lds
sbb
xchg
inc
cmps
outs
aas
in
push
(bad)
mov
xor
dec
ja
retf
jo
push
inc
test
popf
cmps
test
jge
outs
and
fnsave
ror
stos
mov
add
rol
arpl
or
mov
sbb
in
fucom
gs
jecxz
add
adc
movs
xchg
dec
cs
data16
mov
and
jp
sbb
jg
sbb
xlat
loop
xchg
push
popf
fnstsw
popf
and
dec
cmps
jb
cs
cld
(bad)
adc
aaa
icebp
popf
ficom
dec
add
xlat
out
sub
in
pop
ror
aam
adc
stos
les
(bad)
or
add
std
jge
clc
jle
sub
xor
pop
test
inc
dec
clc
xchg
repnz
mov
push
(bad)
fadd
fs
jb
div
dec
cmc
in
popf
(bad)
or
jp
ds
std
inc
pop
in
cmp
pusha
les
scas
and
js
out
inc
push
pop
push
inc
jge
cmp
inc
data16
ja
or
out
sbb
test
mov
test
jbe
jmp
ret
dec
and
jnp
pop
and
xchg
fbstp
dec
das
test
mov
(bad)
in
(bad)
xchg
loope
repz
cmp
sbb
and
mov
lock
popf
retf
mov
xchg
push
cmp
xor
jnp
inc
daa
xchg
cld
xor
lds
or
mov
xor
lods
pop
mov
push
test
rcr
jge
dec
and
jg
jl
lock
mov
inc
and
cmp
mov
out
popa
aam
fucomp
arpl
jp
and
jns
and
pop
in
pop
add
cmp
iret
out
mov
gs
pop
fild
mov
je
(bad)
sub
xchg
popf
pop
push
int3
movs
test
dec
push
ror
sbb
jle
fstp
retf
enter
xchg
ret
xchg
xchg
cmps
sub
pop
sub
aad
shr
jl
sbb
fsub
lds
cmp
xchg
not
outs
push
mov
jns
cmps
sub
xor
or
ret
mov
or
dec
loop
pusha
inc
xor
xchg
cmp
dec
test
fist
mov
test
sbb
dec
mov
test
add
dec
pop
and
mov
popa
hlt
mov
push
jns
add
pusha
mov
js
vdivss
jo
jnp
adc
lock
in
inc
sub
cld
fmul
mov
push
sbb
retf
xor
cli
or
jp
or
cmp
pop
cmp
cmc
xchg
jns
and
xor
xchg
push
push
in
xchg
mov
les
fs
shr
sti
mov
pushf
outs
out
mov
jmp
jo
retf
lods
mov
sbb
jg
push
test
retf
hlt
ins
pop
pop
cmp
xchg
ror
aas
xor
and
(bad)
jle
xor
(bad)
repnz
cmp
enter
ja
adc
mov
cdq
xchg
pop
test
push
xlat
push
dec
pop
pop
xchg
mov
mov
loope
pop
add
popa
leave
lahf
jl
cmp
or
push
les
cmp
aad
icebp
mov
inc
gs
cmp
cmps
push
out
jge
jle
icebp
sub
add
xor
rcr
or
xor
sub
mov
clc
bound
out
in
adc
icebp
xchg
out
add
idiv
mov
xchg
pop
push
cmp
out
push
ins
inc
popf
jle
out
leave
xor
leave
out
into
inc
mov
(bad)
xlat
add
stos
and
pushf
pop
dec
jle
sbb
mov
xchg
push
adc
dec
loope
mov
adc
mov
mov
retf
aaa
mov
inc
ret
icebp
movs
jbe
scas
aad
ror
xchg
jae
ret
inc
xchg
mov
jge
dec
stos
out
adc
mov
mov
or
jg
inc
or
or
jge
cmp
retf
call
sti
popf
das
mov
aas
xchg
dec
repnz
or
jmp
sbb
cmps
xor
(bad)
add
push
test
ret
xor
add
dec
ror
dec
xchg
push
xchg
mov
mov
les
lods
mov
jb
imul
je
cmc
inc
mov
sub
dec
ret
add
sbb
or
ficomp
lods
pop
sahf
mov
xor
mov
outs
aam
(bad)
stos
and
adc
int3
inc
pushf
sub
inc
fsub
mov
fsub
xchg
leave
mov
xchg
mov
xlat
sub
fist
push
sub
dec
mov
push
inc
push
mov
rol
fsubr
nop
sbb
je
adc
ud0
rcr
sub
aaa
ja
cs
pop
ret
cmp
jns
or
sar
nop
std
or
ret
ret
or
(bad)
fisub
ret
fsub
outs
out
ds
push
out
test
mov
and
outs
jns
(bad)
and
je
inc
jns
lods
and
mov
shl
or
add
leave
push
pop
lods
nop
ror
mov
addr16
jo
mov
inc
mov
xchg
aaa
pop
clc
inc
and
xchg
cwde
mov
pop
and
xchg
ins
rol
jp
mov
test
in
(bad)
retf
xchg
xchg
lds
(bad)
xchg
cli
sub
sub
(bad)
ror
cmc
sub
mov
mov
cmp
mov
ret
test
loopne
pop
xlat
neg
mov
jmp
addr16
add
cmps
push
and
scas
test
adc
xchg
sub
adc
arpl
dec
xchg
mov
repnz
icebp
sub
or
add
rcl
xchg
lods
dec
lock
jmp
out
nop
(bad)
jb
mov
aad
cmp
in
sub
push
and
outs
xor
xchg
xor
cdq
stos
out
ins
jg
popa
mov
movs
and
xchg
sub
retf
lds
test
std
movs
xchg
pop
loop
jg
adc
out
in
jno
ror
jb
mov
pop
(bad)
pop
push
gs
adc
pop
je
das
xchg
inc
xchg
xlat
push
mov
or
jae
inc
sbb
add
(bad)
mov
push
mov
fisub
data16
dec
mov
repnz
(bad)
mov
aad
dec
sbb
add
mov
jns
push
mov
xor
enter
mov
add
xor
dec
jns
test
sub
jne
call
dec
mov
ret
sbb
dec
sub
ins
push
call
(bad)
mov
push
cmps
jno
adc
inc
and
push
mov
cmp
sbb
out
sbb
xchg
dec
jno
js
cmp
adc
push
add
rol
arpl
jmp
sbb
aas
jo
fbstp
rcl
mov
push
es
es
mov
add
jp
dec
dec
pop
repz
mov
cmps
jno
iret
jno
xor
sub
cs
pop
dec
fcmovb
cwde
push
int3
stos
inc
xor
mov
jbe
hlt
jno
or
pop
and
stos
dec
mov
retf
jnp
jle
aas
pop
add
cmc
xchg
sar
sbb
push
jo
lahf
cmp
aad
inc
mov
fst
jle
int3
cdq
cwde
daa
pop
sub
js
(bad)
and
cmp
adc
pop
nop
and
sahf
xor
call
pop
fwait
add
(bad)
lods
or
enter
and
inc
xor
stos
pop
inc
ins
xchg
getsec
scas
cmp
icebp
aam
push
ret
adc
ret
and
fdivr
jns
test
cmps
pop
cli
(bad)
in
call
mov
sub
(bad)
(bad)
jb
pop
jns
mov
hlt
dec
adc
stc
jno
mov
add
mov
call
cmp
adc
ss
jno
pop
or
outs
mov
sub
or
lods
push
dec
lods
popa
pop
mov
xchg
ins
cmp
in
das
(bad)
int3
dec
jmp
add
je
arpl
aad
adc
addps
call
fsub
in
sbb
or
push
leave
mov
sahf
stos
push
imul
stc
or
outs
(bad)
idiv
xchg
fsub
pop
adc
mov
icebp
push
add
adc
xor
jp
outs
xchg
jecxz
lods
cmps
js
std
in
cmc
inc
imul
hlt
adc
jno
outs
loope
adc
adc
sub
xchg
ret
push
push
shr
add
movs
dec
mov
mov
mov
sub
mov
push
add
sub
inc
pop
adc
cmp
sub
and
inc
sbb
and
outs
pop
test
adc
inc
dec
jnp
push
jmp
into
push
in
shl
into
mov
inc
(bad)
out
inc
inc
cli
mov
(bad)
push
out
cmp
adc
icebp
mov
lahf
call
mov
push
int3
dec
add
jne
mov
adc
add
loopne
xchg
cmps
and
inc
das
popa
out
sub
lahf
leave
inc
sbb
out
sti
push
scas
xchg
icebp
and
sbb
xchg
jecxz
and
into
aaa
adc
mov
cmp
ss
div
ja
sbb
aam
loop
xor
add
sbb
call
das
lea
xchg
mov
outs
stos
outs
repz
mov
int
ins
mov
mov
mov
jp
sub
push
pushw
sbb
push
adc
xor
js
fld
cmc
in
repz
sub
aad
mov
stc
push
pop
pop
push
sbb
dec
jns
jno
ins
and
jl
aaa
pop
ss
mov
ss
into
inc
or
push
sub
or
ret
ja
cwde
mov
xor
xchg
imul
push
ror
popa
scas
dec
add
out
(bad)
mov
ins
sbb
mov
mov
outs
fild
adc
and
xchg
sub
pop
jmp
fstp
inc
push
test
imul
loope
xor
mov
xor
pushf
retf
dec
jmp
ja
bound
sbb
fwait
fs
cmp
cmps
clc
mov
(bad)
ficom
pop
cmc
cli
fst
pusha
sbb
in
lods
mov
inc
in
add
test
inc
jmp
pop
dec
jmp
and
add
jmp
daa
xor
xchg
mov
pop
ins
retf
sub
lods
inc
sbb
out
mov
dec
xchg
dec
mov
movs
push
xor
dec
gs
jne
mov
test
or
popf
pop
repz
sub
adc
inc
out
lahf
mov
dec
and
nop
mov
add
add
call
in
or
and
mov
mov
stos
jns
or
psllq
jo
sbb
mov
daa
cmp
dec
sub
pop
jmp
pop
in
lods
sbb
and
mov
cmp
push
cli
jecxz
inc
mov
and
xchg
mov
jns
jg
lock
lods
imul
ror
js
in
mov
xlat
in
and
jne
(bad)
xor
clc
sub
and
(bad)
leave
jl
stos
lds
mov
xchg
adc
push
test
scas
or
daa
adc
jg
lahf
pop
movnti
retf
add
pop
inc
and
loopne
popa
pop
movs
shl
sbb
test
jbe
inc
fs
inc
xchg
(bad)
mov
jno
aas
xor
arpl
mov
(bad)
cs
scas
mov
(bad)
out
pop
mov
ror
adc
push
jb
stc
add
or
ret
(bad)
mov
iret
cld
push
sar
bound
sbb
fidiv
xor
sti
mov
(bad)
enter
pushf
pop
jl
dec
les
jl
xchg
repnz
adc
sbb
xor
jb
fsubr
out
mov
int3
mov
push
add
mov
add
pop
pop
jg
into
repnz
or
inc
test
jle
scas
or
add
pop
out
in
mov
ins
adc
outs
cmp
jmp
or
(bad)
int3
jg
xor
pop
or
ins
in
push
sbb
push
cmps
cdq
mov
jmp
inc
mov
repz
sbb
jo
rcr
adc
aad
push
adc
stos
mov
lock
pusha
pop
xor
imul
cmc
outs
retf
mov
jo
sbb
ret
jmp
xor
lods
cmps
dec
fcmovne
pusha
std
mov
mov
pop
ret
popf
bound
push
sub
mov
(bad)
or
xchg
pop
loope
int
not
ja
lea
cmps
std
mov
(bad)
fdiv
xchg
dec
lods
push
sub
jae
xchg
sub
movs
jae
(bad)
fcomp
mov
mov
jecxz
jae
test
mov
(bad)
fdiv
int3
and
push
sahf
data16
add
lahf
cmp
sbb
jbe
cmc
sbb
and
pop
sbb
or
adc
dec
scas
pop
int3
in
push
(bad)
xor
out
pop
inc
leave
pop
aas
dec
repz
shl
inc
aaa
push
cmps
mov
jmp
in
xchg
sar
movs
out
push
adc
pop
pop
test
pop
push
stos
sub
dec
jb
arpl
mov
cld
push
jl
jg
ficom
sub
loopne
movs
ins
jmp
inc
fcomp
xor
xchg
(bad)
out
mov
dec
jbe
(bad)
sub
ror
pop
(bad)
dec
jl
cwde
mov
xchg
jle
in
outs
mov
xor
mov
inc
sbb
xor
inc
test
sub
sub
(bad)
and
imul
icebp
mov
mov
and
imul
imul
dec
push
fisubr
or
mov
out
dec
sbb
jno
cwde
daa
pusha
setl
retf
jle
sar
add
cli
push
ds
jmp
ss
mov
add
(bad)
fdiv
jle
sbb
lods
clc
leave
jb
push
sub
pushf
mov
out
clc
inc
dec
lods
stos
or
inc
scas
and
iret
xor
and
add
push
inc
adc
and
sub
loope
stc
ss
shl
pop
(bad)
jmp
(bad)
push
cmc
cmp
ret
hlt
add
addr16
jnp
xor
mov
in
cld
dec
popa
movs
mov
mov
xchg
retf
sti
leave
sbb
mov
scas
out
out
sub
fs
ret
out
adc
leave
inc
or
repnz
push
sbb
daa
sbb
shl
(bad)
push
xchg
sti
ficomp
js
stos
dec
call
leave
xor
stos
pop
adc
cwde
dec
push
mov
pop
inc
rcl
aad
cdq
cmp
jbe
ret
cs
test
jl
jl
and
imul
mov
enter
lahf
aad
movs
mov
push
cld
mov
aaa
daa
call
push
mov
inc
mov
push
mov
adc
push
xchg
(bad)
fidiv
jl
(bad)
inc
aad
out
dec
pop
jle
popf
push
adc
pop
mov
aas
pop
dec
dec
mov
push
cmps
xchg
inc
neg
mov
adc
popf
(bad)
aam
cmp
adc
test
jecxz
xlat
or
mov
xchg
(bad)
dec
xchg
adc
aas
imul
cwde
pop
push
leave
add
jmp
shl
jnp
nop
shl
cs
mov
shl
push
push
repz
mov
mov
push
xor
jb
gs
sbb
or
ror
data16
pop
out
sbb
test
scas
and
push
in
cmps
mov
jae
and
popa
xchg
inc
inc
adc
dec
shl
push
push
add
mov
xor
add
push
jns
lock
jae
popa
inc
cdq
fild
or
push
lahf
and
nop
out
aam
call
xchg
into
(bad)
icebp
loope
test
in
and
outs
xor
inc
movs
(bad)
into
shl
test
mov
cmp
push
(bad)
mov
pop
mov
jmp
cmp
test
mov
jle
mov
icebp
popa
mov
mov
inc
pusha
mov
lock
nop
cmp
jb
adc
mov
mov
mov
call
call
dec
ja
push
jecxz
inc
pop
sub
retf
xor
pop
mov
int3
je
pop
push
adc
shl
sub
mov
sub
int
jmp
or
push
jecxz
ins
js
mov
xchg
sub
in
push
and
fidiv
sbb
into
and
pop
pop
call
mov
(bad)
shl
stc
mov
imul
inc
cmp
mov
loopne
inc
or
in
mov
push
adc
ja
sub
xchg
sub
enter
cmps
std
mov
cwde
dec
mov
and
push
mov
nop
xchg
xor
pop
pop
jo
int3
fistp
test
sar
call
je
dec
mov
sbb
in
sar
or
mov
or
mov
cmp
(bad)
cmp
ds
mov
pop
ficom
jo
push
neg
test
pop
pop
sbb
dec
test
mov
push
mov
movs
mov
sbb
add
fistp
dec
leave
xchg
mov
bound
ds
add
lods
mov
add
adc
push
sub
adc
xor
mov
outs
ficomp
mov
movs
shl
and
jns
or
or
xor
xchg
jp
sbb
jns
sbb
cmps
fcmovnb
xchg
sbb
hlt
adc
mov
bound
inc
and
push
xor
les
pop
mov
(bad)
retf
sub
icebp
mov
and
or
sub
out
daa
add
std
push
mov
xor
dec
adc
test
sub
out
fstp
or
mov
xor
push
pop
std
aaa
arpl
adc
rcr
push
push
add
outs
pop
sub
mov
mov
pop
(bad)
std
sahf
pop
mov
mov
aam
scas
dec
lahf
pop
ficomp
iret
ins
add
xchg
fadd
fadd
sub
mov
out
cdq
cmp
xor
fdecstp
or
inc
cmp
jne
loop
fisubr
dec
popf
pop
(bad)
push
and
loop
jmp
xor
xchg
retf
(bad)
call
(bad)
fsub
sbb
mov
and
mov
jg
xchg
test
lds
push
mov
in
and
pop
cmp
int
test
fnstcw
mov
sub
add
mov
sti
imul
add
shl
(bad)
inc
cmp
test
xor
out
out
fs
(bad)
jle
sahf
mov
mov
jecxz
pop
sbb
or
iret
add
jg
leave
xor
cdq
jno
lds
dec
das
sub
sub
xor
mov
out
in
test
mov
enter
mov
retf
(bad)
add
xlat
mov
(bad)
fcmovb
mov
gs
mov
mov
jle
dec
fdiv
inc
cdq
pop
aam
add
stos
cmp
mov
pusha
into
test
lods
call
test
ss
loop
call
fcmovnbe
(bad)
mov
in
jmp
dec
adc
ds
ret
retf
int
lds
jecxz
mov
and
(bad)
shl
clc
sub
xor
pop
xor
mov
mov
mov
jmp
add
dec
clc
sub
cmc
sbb
pop
sub
popa
add
inc
mov
repnz
gs
pop
sbb
adc
mov
and
cmp
mov
mov
dec
mov
adc
cmp
jl
inc
push
popa
scas
pop
inc
push
cwde
call
out
sar
adc
add
cmp
scas
xlat
mov
call
push
adc
in
pop
popa
pop
(bad)
xor
aad
cmp
in
int
or
faddp
jmp
push
xor
cs
imul
das
dec
fs
xchg
add
add
mov
fadd
arpl
fsub
mov
pop
ss
dec
dec
sar
and
add
mov
enter
adc
adc
cmps
cmps
mov
test
mov
jb
gs
adc
dec
movs
aam
or
sbb
aam
mov
out
repz
aaa
rcr
jecxz
mov
and
ret
pop
sbb
xor
nop
and
shl
shr
ss
(bad)
jecxz
cmp
xchg
fsub
push
pop
arpl
or
push
ror
arpl
mov
sub
sbb
sahf
and
repnz
push
lods
pop
xchg
add
dec
xor
and
dec
(bad)
add
scas
loop
or
sbb
cs
mov
scas
jmp
cmp
aam
daa
push
scas
sbb
jbe
neg
mov
rcl
dec
movs
sub
sub
pusha
shl
mov
cmp
push
adc
icebp
jge
mov
mov
fldl2e
jp
in
mov
gs
(bad)
adc
inc
aaa
enter
jg
ret
lahf
stos
movs
xor
mov
fld
mov
mov
inc
push
xchg
cmp
lahf
add
bound
into
movs
and
or
mov
pop
sub
push
ins
aas
mov
ss
mov
retf
push
dec
paddw
cli
dec
or
cld
jmp
pop
dec
pop
stos
pop
fdivr
ret
cli
(bad)
sub
fild
retfw
or
adc
das
mov
mov
mov
imul
mov
jge
mov
dec
loop
ins
jno
mov
test
std
repz
pop
mov
dec
rol
sub
cmp
dec
push
imul
jns
and
lahf
mov
xchg
sub
into
xchg
fimul
jmp
xor
sbb
lock
xchg
pop
arpl
(bad)
repnz
lods
cli
cmps
push
not
or
nop
cli
mov
mov
mov
repnz
fsub
std
fs
adc
mov
pop
jne
or
cmp
mov
mov
bound
sar
icebp
outs
jbe
das
lock
inc
mov
(bad)
mov
aad
or
jmp
jle
jecxz
loopne
div
int3
mov
jns
cs
fnstsw
push
mov
jmp
sbb
aas
mov
xchg
sub
sbb
(bad)
dec
call
inc
mov
inc
shr
mov
jmp
out
mov
loopne
push
mov
xchg
adc
push
xchg
xchg
sbb
jb
out
or
or
and
add
leave
das
aaa
push
mov
xchg
xchg
sub
mov
inc
fsubrp
aaa
push
inc
cwde
loop
jp
shr
push
sti
repz
push
push
add
xor
push
aas
js
mov
add
push
pop
and
lds
(bad)
mov
jb
xchg
clc
stc
mov
addr16
sti
retf
dec
xchg
push
xor
inc
sub
int
(bad)
xchg
leave
daa
mov
mov
idiv
repnz
ret
or
mov
imul
xchg
xchg
cmp
adc
mov
loope
lds
xchg
jno
(bad)
push
(bad)
shl
fadd
mov
enter
loope
pop
lea
sub
mov
dec
inc
ror
mov
shr
movs
pop
push
loope
xchg
nop
retf
inc
push
les
pop
imul
mov
shl
dec
jmp
gs
jb
iret
scas
data16
push
mov
lods
sub
pop
pop
xor
lods
leave
movs
xor
addr16
mov
lahf
out
icebp
sbb
add
add
mov
je
mov
ja
scas
fcomi
cmp
pop
push
imul
(bad)
scas
pop
push
add
adc
nop
xor
push
dec
prefetch
xchg
movs
imul
ds
pop
add
xchg
stc
push
cmp
cmc
movs
jge
jo
imul
sbb
pushf
sbb
(bad)
sub
sub
fcomp
cmc
sbb
fucomip
cdq
neg
xlat
cmp
ds
inc
and
pop
hlt
fld
cmc
mov
add
adc
ds
mov
std
imul
outs
loop
or
xor
daa
shl
stos
jbe
std
sub
sbb
dec
cmp
xor
lods
hlt
nop
mov
pop
push
lds
push
push
mov
(bad)
dec
pop
dec
call
mul
test
in
ins
adc
mov
jmp
mov
int
inc
dec
movs
mov
inc
mov
or
mov
mov
dec
cmc
push
sbb
inc
cdq
sub
push
push
fs
cmp
ret
addr16
jecxz
mov
pop
sub
int
cld
jg
std
dec
fdiv
cmp
fisttp
popf
scas
push
lods
leave
cmps
jg
cbw
mov
pop
xchg
test
stos
push
adc
shr
push
aad
int
and
(bad)
(bad)
cdq
outs
mov
outs
(bad)
jle
aam
call
dec
sub
mov
xlat
and
shl
xchg
xor
in
jp
nop
mov
daa
rcr
cwde
stos
rcl
in
ja
sbb
into
ins
add
lahf
out
inc
outs
xchg
push
mov
test
push
mov
xor
pop
xchg
push
pop
add
jbe
xchg
and
and
lds
xchg
and
or
je
test
or
and
and
push
xchg
inc
iret
cdq
xor
fsubr
sub
push
idiv
cdq
jmp
push
xchg
loope
pop
add
cld
adc
sbb
(bad)
xchg
pushf
loopne
push
mov
and
sahf
mov
mov
mov
mov
scas
popf
leave
push
loopne
pop
sbb
push
fmul
out
gs
jae
jno
js
imul
sbb
test
xchg
mov
mov
(bad)
sbb
ins
dec
sar
push
add
shr
das
fist
add
fnsave
fsubrp
fistp
lahf
call
test
add
test
dec
mov
add
dec
call
add
sub
and
cmp
or
sti
dec
ja
test
adc
or
dec
call
sub
push
popf
cld
sbb
add
fcmovu
jmp
push
movs
sub
stos
xchg
xchg
sub
ret
mov
and
rcr
mov
or
or
dec
stos
pop
cdq
pusha
push
mov
or
jno
or
fisub
hlt
inc
lock
iret
inc
(bad)
call
sub
dec
gs
push
adc
jp
data16
jmp
imul
cmps
idiv
dec
lods
cmp
dec
nop
in
inc
mov
xor
sub
adc
or
mov
std
cmp
sahf
pop
mov
popf
add
or
ja
xor
popa
xlat
clc
or
mov
stc
jno
sbb
inc
(bad)
int
xor
inc
loopne
arpl
sub
fistp
cmp
mov
mul
sub
or
jnp
adc
jmp
test
fbstp
adc
scas
pop
test
jbe
(bad)
or
sub
or
test
out
aas
mov
rcl
jae
or
ja
xor
sub
mov
lea
(bad)
and
fsub
fnstsw
push
mov
jmp
adc
xor
xor
aas
imul
mov
and
cli
aaa
out
and
repz
retf
pop
leave
mov
outs
in
and
(bad)
fst
mov
and
sbb
dec
lock
sbb
outs
fcmovnb
cli
adc
sbb
inc
sbb
inc
(bad)
and
cwde
mov
xchg
adc
mov
sub
enter
or
push
inc
clc
add
push
add
and
mov
and
stc
daa
xchg
dec
je
cmps
or
adc
retf
cld
jl
sub
out
cmp
pop
shl
lods
imul
or
mov
sbb
sub
mov
inc
ds
jno
adc
cmc
cdq
int
mov
sbb
pop
mov
lahf
test
xchg
and
and
pop
or
jae
loop
push
xchg
mov
fisttp
inc
data16
dec
mov
out
jmp
stc
dec
jne
(bad)
nop
mov
retf
xchg
dec
pop
das
popf
pop
hlt
fimul
loopne
inc
scas
arpl
js
aaa
stos
rcr
enter
jge
or
add
pop
mov
inc
mov
data16
inc
push
and
outs
ja
repnz
aad
ret
inc
int
pop
dec
mov
int3
push
mov
dec
ja
cli
cmps
jle
cmp
dec
push
adc
xchg
xor
aam
lds
jmp
sub
sub
inc
mov
es
push
cli
mov
mov
xchg
outs
xchg
xchg
jmp
and
mov
out
hlt
fs
adc
ja
mov
sbb
sub
repz
iret
int3
pop
sbb
test
test
jb
cmp
mov
and
mov
jae
mov
fimul
xchg
sbb
push
mov
cmp
outs
mov
test
mov
ret
add
jb
mov
add
push
mov
or
retf
push
jne
dec
xchg
fisttp
movs
pop
sbb
aad
push
sub
mov
or
outs
or
or
xchg
cdq
iret
or
repnz
mov
jl
(bad)
push
jbe
cld
call
rcr
fwait
cmps
cmp
cwde
mov
push
fistp
dec
popf
fst
out
je
and
or
and
sar
retf
outs
mov
xchg
or
mov
fldenv
lods
sahf
pop
sbb
in
add
add
push
(bad)
pop
sbb
jg
xchg
xchg
xchg
ja
jl
test
shr
xor
fisttp
mov
in
aaa
mov
les
add
sub
ret
push
scas
out
sbb
jmp
and
mov
add
mov
sbb
sub
lahf
cwde
mov
or
xor
jg
imul
mov
dec
add
je
mov
xchg
fild
pop
sbb
daa
jl
jb
fisttp
inc
mov
jbe
inc
or
xor
xchg
cmps
sbb
icebp
push
jno
out
xchg
sbb
and
dec
add
xor
cmp
jmp
xor
or
sbb
adc
jle
(bad)
shl
push
sub
sbb
mov
repz
rcl
cli
add
dec
stos
out
jnp
jp
lods
std
xchg
pop
sar
xor
mov
cmp
daa
mov
jg
mov
or
inc
pop
(bad)
rcr
jecxz
push
push
mov
xchg
inc
jp
in
not
mov
and
jae
inc
stos
cpuid
ja
or
xor
mov
fucomp
cmps
pop
stc
xchg
jl
pop
mov
dec
(bad)
in
pop
pminsw
inc
setg
sahf
cmp
xchg
xor
sub
sbb
sub
mov
jmp
fs
add
and
ficom
sub
lsl
int
leave
inc
lods
adc
scas
rcl
clc
push
ss
xchg
xor
mov
ins
dec
push
pushf
push
test
imul
sti
cmp
fcmovu
and
jl
ins
cwde
sub
cs
daa
scas
inc
test
out
test
(bad)
mov
fwait
xor
adc
pop
pop
clc
push
dec
cmc
push
inc
and
aaa
inc
xor
mov
pop
push
ins
ja
fs
dec
icebp
mov
sub
stos
xor
aad
push
aam
inc
mov
mov
xchg
cli
jl
mov
mul
jno
cmps
xchg
mov
sbb
mov
xchg
movs
mov
mov
xor
data16
add
(bad)
xor
xchg
cdq
loop
neg
push
imul
ja
in
shr
and
sahf
jle
pop
ja
in
in
mov
(bad)
int3
ins
jmp
aam
clc
shl
sub
jge
mov
xchg
(bad)
push
mov
or
xor
jo
cmc
push
mov
lock
push
pop
ins
jmp
cmp
in
mov
jo
adc
jmp
jmp
dec
ins
into
fmul
push
test
xor
fwait
enter
sub
dec
rol
push
mov
inc
test
xchg
lea
jmp
mov
cdq
arpl
pop
aaa
movs
pop
or
addr16
loopne
rol
jo
imul
mov
cmp
retf
jle
idiv
sar
inc
jmp
ss
test
mov
xchg
shl
mov
cmps
mov
inc
mov
jne
arpl
jmp
inc
inc
cmp
loop
btc
daa
(bad)
icebp
and
aam
mov
fdiv
adc
nop
sbb
adc
(bad)
jge
push
cmc
(bad)
imul
iret
lsl
call
add
and
xlat
sub
dec
sbb
clc
les
dec
popa
push
sbb
cmp
mov
and
add
push
cmc
mov
push
xchg
icebp
aam
stos
imul
pop
les
mov
outs
(bad)
in
ret
fs
jmp
push
xlat
sbb
shr
loopne
cdq
or
mov
push
fmul
sti
and
inc
(bad)
les
dec
cmp
ret
loope
dec
push
mov
ins
inc
push
hlt
inc
or
(bad)
adc
adc
(bad)
fdivr
sti
inc
cmp
jbe
xchg
add
nop
(bad)
pushf
inc
ins
or
inc
in
mov
push
rcr
sub
xor
fcomp
mov
sbb
and
sbb
ins
movs
cmp
dec
push
or
jmp
and
add
je
test
xchg
inc
push
test
jo
and
(bad)
push
aaa
mov
sub
clc
sub
dec
inc
arpl
dec
(bad)
in
scas
(bad)
xor
repnz
mov
sub
pop
ins
mov
test
pushf
test
mov
cld
out
dec
into
inc
jo
or
or
push
push
mov
gs
leave
test
ins
cmp
mov
xlat
jp
add
outs
popa
sub
sbb
(bad)
movs
mov
icebp
mov
movs
enter
icebp
icebp
adc
in
mov
ja
ret
adc
lock
inc
das
aam
mov
jp
dec
rcl
mov
cmp
movaps
sub
pop
scas
popf
jns
add
js
popf
mov
mov
cs
cmps
mov
and
and
inc
or
or
xchg
and
adc
(bad)
icebp
fnstcw
pop
xor
jno
les
(bad)
jo
ss
mov
pop
cmps
mov
imul
pop
cmp
ror
pop
push
push
loopne
cmp
or
in
mov
out
shl
outs
mov
mov
sbb
xchg
sub
int
add
out
mov
pop
push
cmp
sbb
sti
xchg
ror
xchg
add
dec
mov
pop
inc
das
fcomp
int
pop
lahf
xchg
outs
push
fstp
ss
or
ins
out
mov
and
loop
xor
mov
loopne
sbb
ja
adc
mov
lock
int3
push
dec
test
fldenv
dec
and
mov
pop
icebp
daa
jns
leave
fucomp
int3
xor
inc
pop
jmp
adc
add
popf
out
mov
enter
sub
or
push
cmp
xlat
xchg
dec
cmp
sahf
cmps
out
int
sbb
lahf
push
mov
sub
mov
pop
sahf
push
mov
cmp
(bad)
jle
or
cdq
(bad)
xor
hlt
or
push
mov
jmp
inc
mov
ret
adc
cs
imul
cmc
cmp
mov
push
adc
pushf
lods
push
sbb
sbb
xor
cmp
pop
loope
or
dec
jno
stc
or
fstp
sbb
or
out
jae
inc
dec
scas
popf
mul
mov
mul
test
push
test
sti
test
inc
iret
mov
mov
mov
inc
retf
arpl
jb
and
xor
mov
out
test
lock
mov
pop
inc
in
test
sub
test
cmc
xor
loop
dec
sbb
(bad)
xchg
mov
cdq
add
mov
ins
jmp
mov
mov
in
add
push
xchg
mov
pop
retf
xor
inc
cmc
and
dec
or
icebp
gs
and
outs
mov
les
imul
xchg
adc
sub
fdivr
imul
mov
lds
jmp
push
mov
shl
in
mov
repz
and
lods
test
push
jbe
es
rol
or
push
lods
mov
jns
fistp
sbb
pusha
pop
jb
lds
inc
mov
and
sub
add
pop
ins
cmp
es
or
cld
repnz
push
lock
and
cmp
arpl
cmp
sub
xchg
lock
dec
cmp
push
cwde
into
mov
xchg
fs
pop
test
dec
jp
retf
jnp
aam
iret
xchg
fstp
xor
sti
retf
fnstsw
jmp
lock
dec
push
pushf
test
push
shr
cmp
jl
cwde
(bad)
std
lods
rcl
aam
sub
push
and
xchg
xchg
movs
mov
pop
push
add
(bad)
hlt
or
fs
shr
xchg
cmps
and
bound
fistp
pop
dec
nop
xor
inc
sub
aaa
popf
and
repz
mov
les
sahf
dec
and
jno
out
popa
pop
cmc
and
imul
cmp
cmps
inc
xor
push
dec
sti
ror
cld
fsub
mov
adc
mov
(bad)
(bad)
pusha
jmp
scas
pop
mov
sub
jbe
mov
dec
xor
adc
jae
imul
or
pop
out
jo
mov
and
push
fidiv
push
pop
test
dec
mov
jne
mov
mov
cs
or
cmp
repnz
mov
lahf
fdiv
hlt
inc
(bad)
xchg
xchg
fimul
dec
add
mov
pop
pop
pop
test
repz
test
push
add
jle
adc
sub
adc
pmulhuw
push
std
mov
addr16
push
inc
xor
add
cmps
xor
fistp
sbb
int
mov
jmp
cli
stos
pop
xchg
test
sbb
adc
je
dec
sub
cmp
cwde
outs
adc
push
sbb
(bad)
loopne
aaa
mov
test
and
mov
les
cs
mov
daa
pushf
pop
jae
fwait
scas
pop
adc
aas
dec
inc
adc
(bad)
pop
mov
sbb
mov
cli
hlt
push
mov
mov
icebp
mov
aad
sbb
sub
push
inc
cmp
outs
call
dec
cmc
xchg
cs
mov
push
icebp
std
fstp
outs
ds
jmp
or
sub
in
sub
in
stos
xchg
and
inc
enter
fst
pushf
xor
jecxz
mov
inc
repz
or
jmp
inc
xchg
lds
call
and
or
xor
into
hlt
test
icebp
ins
push
stos
mul
xchg
xor
mov
jl
and
jmp
jne
pop
add
mov
fist
ja
adc
mov
add
out
mov
mov
push
inc
adc
out
pop
les
or
mov
pop
ja
sub
add
cdq
sbb
(bad)
mov
mov
adc
lds
sti
xchg
movs
mov
hlt
xchg
(bad)
aaa
jns
fld
cmp
retw
jnp
in
nop
mov
pop
xchg
sbb
mov
cmp
or
fcmovbe
or
ror
and
inc
das
xor
or
adc
mov
lods
bound
ror
test
div
sbb
mov
xchg
in
jmp
jo
mov
pop
push
jmp
mov
aas
add
mov
jns
mov
into
sbb
cmc
in
(bad)
clc
out
fld
inc
jl
std
es
std
ret
mov
sub
pop
cwde
xchg
jo
xor
icebp
fldenv
outs
ret
fwait
or
push
xchg
push
movs
repz
mov
ret
xor
test
shl
xchg
loope
or
std
ins
mov
jle
je
daa
iret
and
sbb
icebp
arpl
daa
movs
mov
inc
test
xchg
fst
gs
retf
cmp
jo
loopne
pop
add
in
mov
fwait
jmp
adc
mov
jne
xchg
lds
dec
or
push
xor
rol
and
in
jnp
add
call
pop
imul
data16
push
movs
ins
sbb
pop
and
mov
or
shl
inc
sub
inc
js
mov
fs
inc
mov
in
mov
push
bound
mov
xchg
std
dec
adc
or
cmp
test
cmp
imul
pop
sub
nop
jp
push
inc
adc
mov
jns
mov
test
add
ja
neg
dec
mov
imul
call
push
(bad)
xor
inc
pushw
aam
inc
and
dec
cmp
outs
movs
pop
push
jo
mov
pop
jl
vdivss
or
and
mov
ss
cmp
xchg
fldcw
repz
sub
(bad)
out
add
mov
and
mov
cmp
fist
xlat
push
jl
mov
js
jle
mov
lods
dec
adc
jmp
daa
and
popf
mov
popf
cmp
in
jg
jle
mov
add
or
mov
sub
pusha
dec
mov
push
in
adc
xchg
sbb
inc
loope
aam
mov
out
mov
push
dec
popa
stos
loopne
(bad)
or
rcl
aas
jp
pop
jnp
das
jp
outs
inc
test
pop
pop
rcr
jno
jne
mov
sbb
data16
or
jno
fdivr
iret
cmp
fwait
pop
std
loopne
pop
dec
leave
inc
inc
repnz
adc
sub
inc
add
mov
loop
push
or
out
dec
xor
jg
ins
mov
and
inc
shrd
sub
jnp
dec
mov
and
inc
pop
cmp
sar
add
jl
xchg
out
lds
and
inc
repnz
inc
stos
pop
inc
pop
inc
sbb
adc
out
leave
add
mov
sub
jno
or
adc
or
cmps
(bad)
ss
outs
(bad)
xor
pop
inc
add
push
shl
mov
cs
(bad)
shr
js
pop
outs
mov
xchg
in
xchg
movs
inc
lds
rcl
push
push
dec
and
jnp
pop
out
mov
fwait
call
xor
dec
in
add
push
or
fcom
jns
ins
(bad)
adc
cmp
(bad)
dec
fcmovbe
retf
adc
mov
sub
sbb
sbb
in
arpl
cmp
icebp
lea
cmp
jnp
adc
stc
ror
dec
fwait
addr16
xor
sbb
(bad)
jg
add
sbb
jmp
xlat
sti
add
les
mov
dec
or
imul
mov
jo
push
xlat
pop
add
fs
jl
mov
xor
xchg
jmp
lahf
lods
cmp
ins
div
xor
cdq
push
cmp
push
(bad)
repnz
and
cmp
test
mov
mov
ja
js
(bad)
test
repnz
xchg
loop
(bad)
mov
sbb
sbb
xchg
psubq
adc
call
pusha
sub
arpl
add
aam
xchg
dec
and
std
xchg
adc
jnp
xor
xor
pop
xor
mov
bound
loop
(bad)
in
adc
jb
or
cs
hlt
adc
fsub
in
out
jb
dec
add
in
icebp
in
cwde
push
shl
mov
ins
or
mov
lahf
xchg
sbb
mov
mov
loope
cs
add
(bad)
sbb
sub
arpl
xchg
in
dec
ds
icebp
stc
jl
(bad)
adc
xchg
mov
jg
pop
daa
add
pusha
fstp
xchg
imul
xchg
lds
leave
sbb
push
adc
dec
test
arpl
aad
cmc
xchg
sub
cmc
fnstenv
int3
sbb
sbb
lods
dec
sub
(bad)
jae
sub
mov
pop
fistp
arpl
sbb
cmp
test
int3
dec
jl
mov
or
rcr
xchg
inc
sub
mov
test
xor
stos
inc
push
fnsave
sahf
mov
repz
aad
out
out
loop
(bad)
ja
fs
mov
(bad)
ja
(bad)
xor
adc
pop
fwait
stos
int
(bad)
mov
rcr
push
sub
pop
pusha
ins
cmps
pop
test
and
aad
aas
dec
icebp
cmp
xor
data16
sbb
mov
aaa
out
pop
adc
out
jle
inc
dec
jae
retf
xchg
push
repz
fcom
add
adc
xchg
inc
sbb
jb
and
(bad)
mov
repz
push
pop
pop
xor
test
add
out
fdivr
jmp
movs
fld
inc
lock
cmps
jge
jge
(bad)
fisub
int3
and
ret
out
iret
outs
adc
fwait
call
xor
push
cmc
xchg
add
(bad)
adc
out
sub
lds
add
call
cld
jl
sub
stos
add
imul
enter
inc
enter
mov
js
mov
ds
sub
jmp
test
and
movs
xchg
mov
adc
cld
imul
cmp
scas
push
stos
pop
push
sub
mov
adc
xchg
mov
sub
lock
fdivr
outs
outs
mov
dec
xor
mov
jl
pop
and
mov
shl
out
pop
push
lods
push
sti
test
jae
or
mov
stos
jmp
push
jo
adc
jbe
call
scas
neg
mov
cmp
in
jg
dec
inc
sub
(bad)
in
ret
sbb
mov
cdq
ins
retf
push
data16
push
and
push
mov
mov
mov
shr
jnp
arpl
(bad)
dec
(bad)
in
pop
pop
add
out
jo
adc
mov
out
mov
mov
gs
sar
out
in
in
fwait
sti
dec
and
dec
pop
mov
lahf
test
mov
sahf
scas
arpl
arpl
xchg
cmp
sbb
mov
jmp
jecxz
sub
push
pop
adc
popa
push
add
or
pop
jns
movs
inc
pop
mov
std
push
and
outs
push
pop
fist
sub
into
ds
shl
mov
cmc
add
add
js
enter
outs
adc
and
or
dec
xchg
jb
shr
add
arpl
retf
inc
mov
push
stc
or
add
shl
(bad)
pop
xchg
push
out
cmp
out
cli
cmc
rcr
(bad)
mov
aas
sti
int3
std
out
ins
cmp
pop
push
or
pop
aas
xchg
inc
xor
sub
jmp
jmp
mov
xor
sub
or
in
test
adc
in
pushf
adc
add
stos
mov
(bad)
in
rol
ret
cmp
jns
sti
mov
xchg
mov
pop
xchg
rcl
popa
add
ds
jb
addr16
(bad)
ss
test
mov
int3
dec
dec
dec
arpl
sub
xchg
pop
xchg
sbb
push
std
jl
and
data16
mov
cmps
outs
imul
cmp
std
add
dec
push
scas
pop
out
cdq
pusha
push
mov
push
dec
dec
shl
mov
add
and
jp
lea
adc
cmp
dec
xor
mov
iret
jmp
cmp
adc
xchg
sbb
xor
loop
repz
jl
xor
and
sbb
(bad)
mov
adc
or
out
loope
out
jne
dec
and
xor
es
lahf
dec
fs
test
imul
ja
outs
sub
iret
retf
popf
lods
xor
ret
add
fs
stos
inc
xchg
or
mov
dec
adc
nop
scas
jae
mov
cld
mov
add
scas
mov
push
mov
cwde
xlat
push
mov
sub
retf
cs
mov
loop
jns
(bad)
call
in
mov
mov
lea
xor
cmp
adc
cmp
movs
sbb
sub
cmps
loope
lods
xor
outs
adc
cdq
jg
test
mov
into
and
ins
dec
imul
or
dec
and
push
xlat
adc
pop
aad
jnp
and
and
fcmovne
fisttp
push
add
cmp
stos
pop
movs
cmp
ja
sbb
inc
xchg
pop
push
adc
dec
or
test
repnz
mov
push
mov
std
dec
enter
leave
and
sbb
jnp
jne
pop
fisttp
jno
adc
cld
sbb
adc
iret
out
xchg
je
sahf
out
sub
jl
test
bound
aad
cmc
in
push
ret
cld
add
jno
xor
hlt
cmp
aaa
dec
inc
pop
xor
mov
addr16
mov
and
inc
cdq
mov
adc
mov
mov
mov
test
ror
shl
in
push
mov
aad
div
xor
jne
rol
mov
imul
rcl
rcl
inc
mov
in
add
push
sbb
adc
retf
pop
cwde
mov
je
mov
mov
dec
(bad)
push
inc
mov
add
mov
stc
lahf
test
jg
loop
push
outs
cmp
push
test
mov
into
movs
pop
sub
add
into
bound
test
add
jl
mov
inc
lds
add
push
mov
lods
in
test
xor
jbe
or
mov
sti
mov
not
movs
push
rcl
sahf
int
mov
xchg
xor
push
mov
jmp
push
shl
rcl
shl
pop
(bad)
out
sbb
shr
adc
fisub
repz
(bad)
or
adc
push
mov
lahf
jge
mul
pop
retf
movs
(bad)
push
scas
gs
enter
inc
shl
or
rol
push
aaa
cs
pop
data16
call
xchg
jg
loope
cmp
mov
cmp
sbb
jae
arpl
mov
pop
idiv
and
sub
sbb
push
mov
xchg
inc
mov
mov
fild
push
stos
sbb
idiv
xchg
enter
xchg
push
sub
pop
mov
sbb
les
and
dec
push
int
stos
xchg
lock
add
aam
mov
adc
mov
movs
jmp
lds
xchg
adc
pop
out
jle
repz
cmp
aaa
in
stos
stos
sar
push
es
test
ss
or
and
cmp
cmc
(bad)
mov
clc
inc
and
(bad)
stc
in
call
scas
mov
cli
out
pop
push
retf
ss
cwde
xor
ret
pop
sbb
and
std
test
cmp
out
pop
aam
(bad)
cmp
cmps
iret
pop
mov
pop
xchg
fadd
push
hlt
pop
test
je
(bad)
lock
push
cmp
dec
sub
mov
cwde
sahf
or
ror
pop
cmp
repz
aaa
xlat
adc
or
(bad)
(bad)
(bad)
sbb
cmp
mov
mov
xchg
enter
dec
addr16
add
fldlg2
inc
dec
push
xchg
mov
mov
xchg
mov
jmp
pop
dec
mov
sub
mov
push
aas
scas
ds
test
data16
scas
dec
add
sbb
dec
out
popa
(bad)
push
fist
fs
pop
mov
jmp
pop
js
into
mov
je
test
out
xchg
into
fadd
mov
cdq
nop
cmc
fs
inc
inc
out
pop
clc
std
mov
push
push
dec
aam
retf
add
pop
mov
push
out
xchg
out
rol
adc
int
cmp
shl
dec
and
cmc
adc
retf
xchg
ror
cld
movs
push
ror
and
fwait
das
jmp
ds
(bad)
mov
mov
in
stc
push
ins
pusha
inc
popa
jb
jae
mul
(bad)
aam
xor
xchg
cmp
test
dec
outs
shl
mov
and
mov
sub
arpl
mov
sub
inc
cdq
and
fsubrp
jle
(bad)
out
jno
dec
in
mov
sar
or
jle
lock
mov
test
aad
std
dec
sar
popa
push
jno
clc
pop
inc
fisttp
and
xchg
imul
icebp
mov
mov
outs
lds
cs
aas
std
sub
icebp
mov
sub
test
imul
pop
jne
cdq
mov
mov
xor
rcr
es
fdivr
bound
sub
and
mov
clc
loope
es
shl
into
stc
in
(bad)
shl
popf
mov
push
push
or
sbb
scas
push
mov
xor
jae
or
test
dec
imul
retf
sub
and
adc
inc
ss
adc
pop
arpl
dec
cmp
or
cmp
fcmove
and
outs
mov
ret
jmp
mov
cld
or
mov
out
xor
jo
inc
xchg
mov
ins
inc
call
iret
push
jae
enter
icebp
js
outs
sar
test
sub
(bad)
pop
movs
sbb
mul
(bad)
push
inc
stc
imul
in
mov
fbld
mov
mov
pop
aas
hlt
jge
mov
nop
adc
test
(bad)
out
aaa
outs
push
jno
inc
in
nop
scas
lock
hlt
jb
ins
mov
sub
mov
sbb
jae
ss
mov
retf
cmp
fwait
rcl
(bad)
je
sbb
mov
sbb
cwde
mov
push
cld
inc
and
int
int
push
pop
aas
jmp
jnp
cmp
arpl
aad
movs
dec
sbb
jns
xchg
adc
jecxz
sbb
jecxz
jmp
mov
imul
outs
lea
cs
inc
stos
xchg
fist
mov
add
dec
and
fwait
lahf
test
popa
mov
call
mov
or
ror
jl
cli
repnz
add
or
fld
xchg
cmp
mov
fs
int3
std
adc
mov
mov
push
or
jge
adc
cdq
pusha
push
cmp
xor
scas
mov
inc
imul
lods
sti
gs
push
inc
sbb
in
jo
inc
xchg
pop
mov
pop
sub
jp
push
pusha
sub
and
imul
pop
sub
jae
pop
xor
test
mov
idiv
jmp
sub
out
jne
call
jne
lods
ficom
repnz
sbb
mov
xchg
ds
xor
jmp
enter
lods
add
in
fs
mov
imul
push
push
add
sub
jmp
mov
stos
mov
xlat
(bad)
pop
sahf
jecxz
fmul
and
adc
dec
jae
cwde
clc
mov
fnsave
cwde
dec
sub
sti
jmp
and
jno
hlt
mov
xchg
push
and
(bad)
out
ins
aaa
add
out
cmps
das
push
and
adc
popa
cld
jl
ins
xor
inc
jmp
xor
rcl
es
dec
and
and
stos
adc
shl
jmp
mov
jbe
mov
xor
mov
and
pushf
jae
fidiv
inc
xchg
out
cmp
pusha
mov
ret
ins
push
jns
and
ds
ret
add
dec
neg
jg
lahf
dec
cmp
outs
rcl
dec
xor
adc
mov
dec
xor
sbb
mov
shl
push
mov
outs
pop
in
repz
xchg
dec
mov
xchg
ins
ret
lahf
mov
dec
xor
add
sub
icebp
dec
jo
repz
sbb
(bad)
jecxz
jne
call
jae
out
cmp
cmp
mov
adc
ret
push
mov
xor
pop
cs
inc
or
inc
push
fs
shl
mov
cmp
and
clc
ret
aaa
gs
cs
repnz
jbe
fwait
int
cli
xlat
inc
push
xor
scas
cli
or
adc
stos
jecxz
iret
pop
scas
cmps
nop
not
mov
jmp
out
nop
fwait
loopne
aad
dec
sbb
inc
aaa
xchg
add
add
dec
cdq
jle
mov
pop
xchg
lock
and
cmps
cmp
fldcw
aaa
dec
push
mov
cmp
cmp
jl
test
cs
lds
lds
jb
(bad)
outs
pop
push
mov
nop
ror
xlat
adc
shl
inc
dec
in
xor
daa
adc
int
div
out
mov
iret
xchg
enter
pop
push
adc
in
pushf
pop
ins
push
mov
jge
adc
movs
add
sbb
ss
out
fdivr
test
setno
lea
sbb
aas
jb
popa
xchg
sbb
mov
fisub
mov
bound
mov
push
mov
loope
in
mov
dec
pop
lahf
xlat
mov
iret
jnp
ds
out
in
lea
dec
in
fs
std
inc
jne
mov
fwait
xor
pushf
icebp
push
scas
xchg
fnstcw
ins
shl
mov
sbb
sbb
arpl
cmp
dec
call
scas
xor
add
imul
(bad)
sub
mov
stos
out
adc
and
mov
pushf
xor
scas
movs
clc
lea
test
sahf
or
jb
mov
jae
cmp
cmp
das
cld
jne
shl
int
cmps
add
retf
and
and
mov
xchg
jmp
sbb
rol
cmc
arpl
in
scas
mov
sahf
les
dec
and
rol
sub
push
cmps
push
leave
daa
jmp
pop
in
xor
or
lea
mov
inc
cmps
inc
mov
push
std
adc
out
dec
cmp
fistp
mov
push
inc
cli
lahf
in
std
adc
pop
cli
cmp
into
retf
cmp
jg
cmc
jmp
jge
xchg
or
dec
mov
iret
sti
add
in
adc
stos
sub
outs
add
push
fisub
jp
imul
push
fwait
imul
adc
fadd
sbb
dec
jnp
mov
sub
lahf
call
call
dec
cdq
scas
stos
xchg
mov
sbb
cld
stos
repnz
push
(bad)
loop
leave
inc
retf
jmp
inc
cmp
xor
test
or
iret
mov
pop
xchg
xchg
push
jp
jp
sub
test
push
int
inc
cmp
mov
and
cmp
out
jae
and
mov
dec
mov
jbe
daa
sti
pop
mov
rcr
mov
aaa
movs
js
push
and
pop
popa
mov
fist
xchg
js
aaa
add
dec
in
xchg
clc
imul
fcomp
jmp
jmp
(bad)
das
loopne
in
sbb
jns
jge
push
js
xlat
mov
jns
fiadd
mov
add
addr16
sti
(bad)
fadd
pop
xor
cmps
scas
dec
jle
aad
mov
sbb
stos
and
aas
xor
call
sub
das
inc
xchg
adc
(bad)
loopne
push
cmp
loop
data16
jne
shl
sahf
jnp
mov
dec
into
adc
loope
fcmovnu
add
add
pop
xlat
mov
pop
adc
xor
jmp
retf
push
arpl
pusha
fwait
jmp
ret
mov
xchg
(bad)
and
mov
jp
aam
inc
push
in
sbb
in
sub
(bad)
in
xor
jmp
call
inc
cmp
push
mov
lods
retf
movs
xor
dec
cmp
cmps
mov
stos
jae
clc
push
mov
xchg
mov
push
lods
push
iret
loope
rcl
xor
jmp
add
jmp
retf
loop
lea
int
scas
int3
dec
ins
sar
dec
and
xchg
mov
xchg
jmp
in
ret
scas
cdq
xchg
pop
mov
js
dec
fsubr
mov
pusha
dec
outs
int3
js
sbb
mov
(bad)
enter
or
fsubr
stc
mov
jecxz
push
mov
inc
dec
std
mov
xchg
cmp
(bad)
sub
bswap
ror
scas
adc
in
dec
adc
shr
inc
out
or
in
cld
pop
and
dec
jmp
mov
icebp
ss
bound
mov
dec
sbb
cwde
adc
movs
push
hlt
sub
jmp
pop
or
sahf
js
out
xor
ds
lds
in
mov
fisub
xor
and
inc
ds
mov
lods
sbb
cmc
cld
int3
mov
xor
xchg
sub
cs
pop
imul
scas
dec
xor
cmp
or
dec
dec
cli
xor
imul
and
sub
ss
push
cld
cmp
movs
cdq
pop
sbb
arpl
cli
cmp
int3
and
out
xchg
push
jge
mov
mov
je
sub
cmp
dec
or
pop
xchg
lods
sbb
or
dec
adc
xchg
jae
cmp
jns
mov
daa
push
or
jge
jl
sub
div
sbb
xor
jne
inc
repz
mov
sub
cwde
dec
xchg
bound
imul
xchg
cmp
out
xchg
outs
xchg
sub
in
das
scas
mov
and
jecxz
clc
ror
add
xchg
jl
pop
cmp
dec
xchg
inc
cmp
pop
pop
fs
aad
fcom
lahf
cmps
lock
jp
fsub
push
cmp
data16
mov
xor
(bad)
mov
mov
pop
mov
pop
dec
add
arpl
retf
xor
sti
mov
and
mov
xor
fs
ret
mov
mov
iret
(bad)
shr
rcl
push
enter
out
out
sub
push
pop
idiv
pop
jmp
pop
xchg
mov
dec
lods
call
loope
pop
inc
cmps
fnsave
test
jl
scas
jb
das
movs
out
mov
je
inc
cmovp
mov
scas
sub
lock
push
mov
pop
int3
stc
xchg
or
inc
push
(bad)
lods
mov
aas
ins
aaa
add
add
adc
out
dec
push
int3
mov
test
jl
inc
mov
xchg
pop
data16
xor
or
nop
loop
mov
lahf
daa
mov
movs
mov
test
enter
ss
sub
adc
and
hlt
les
mov
test
fbld
int
(bad)
or
xchg
mov
dec
ret
les
lahf
(bad)
out
rcl
cmp
fiadd
mov
fdivr
mov
add
jne
jge
cmp
jmp
out
sub
std
loope
and
nop
outs
pop
sub
daa
call
or
shl
test
mov
jbe
mov
fstp
or
pop
xchg
cmps
inc
or
pop
(bad)
fcomp
jp
add
or
in
and
mov
xchg
sbb
lock
and
ss
dec
pop
jmp
movs
mov
movs
aaa
fsub
fwait
mov
pop
jbe
or
sti
xchg
pop
cli
mov
mov
scas
loop
je
repnz
mov
jne
add
add
xchg
pop
retf
cmp
jne
xor
cmp
test
call
test
sbb
cmp
fwait
mov
push
stc
mov
or
pop
(bad)
hlt
fstp
mov
or
xor
sbb
xchg
cmp
mov
push
lods
push
lods
push
aaa
inc
and
aaa
xor
ds
shl
or
cmp
inc
adc
mov
ins
mov
ret
fdivrp
mov
sbb
cmp
ins
mov
fcmovnu
sub
mov
mov
push
(bad)
push
test
les
mov
push
inc
push
add
inc
sbb
test
cmps
mov
aam
push
stos
adc
fwait
dec
loopne
inc
and
int3
jbe
adc
je
lds
mov
loope
outs
mov
pop
imul
push
or
or
xor
mov
test
inc
hlt
int
fisttp
lods
or
cs
nop
mov
or
add
mov
or
jg
popa
rcl
nop
inc
inc
jbe
out
out
mov
or
rcl
xor
out
xchg
cwde
sub
retf
push
push
and
sbb
mov
lahf
dec
cdq
push
xchg
dec
sbb
jno
loopne
icebp
data16
jmp
jmp
pop
xchg
lahf
cmp
js
xchg
dec
jg
loop
and
rol
mov
sub
xor
wrmsr
sub
push
sbb
ret
xchg
cs
xchg
mov
stos
popa
test
push
nop
cwde
outs
push
popa
pop
shl
sub
cmp
test
inc
add
xchg
xchg
inc
movs
add
imul
mov
pop
shr
sub
lea
call
pop
push
xchg
cmp
adc
or
fwait
pop
push
cs
sbb
fwait
adc
or
jp
clc
cmp
lock
adc
add
mov
inc
imul
jl
pop
ret
fnstcw
inc
mov
js
cli
leave
fsubp
(bad)
or
xchg
addr16
retf
add
cdq
out
(bad)
pop
out
and
aas
aas
popf
inc
mov
xchg
add
mov
int3
dec
jge
mov
jmp
sbb
mov
mov
out
(bad)
xor
and
dec
dec
or
mov
sub
push
es
pop
jns
cmps
mov
adc
cmps
jg
sahf
fs
sub
pop
pop
mul
jnp
fst
int
cmp
push
jge
push
clc
outs
xchg
mov
and
dec
sub
out
out
mov
and
dec
add
aad
cmp
dec
imul
mov
(bad)
stos
cli
cmp
sub
iret
data16
push
push
ins
jle
stc
ja
daa
imul
outs
(bad)
jle
pushf
dec
icebp
pusha
ss
sub
test
bound
or
mov
add
outs
and
imul
jb
cs
push
jg
pop
sar
loop
mov
pop
xchg
lds
or
xchg
icebp
rcl
xchg
sahf
mov
inc
jle
int
cmp
inc
pop
scas
ins
mov
push
cmc
(bad)
rol
dec
pop
and
jae
fdivr
ret
or
das
mov
repnz
mov
aas
sub
mov
jne
inc
or
stos
push
xchg
push
fstp
xchg
xlat
push
stos
mov
cld
xor
mov
scas
xor
sub
add
ret
test
cs
inc
dec
xchg
inc
in
mov
je
sbb
in
inc
xchg
xchg
add
sti
lods
fldcw
cmp
and
(bad)
mov
and
xor
call
jp
loope
ret
sub
das
dec
push
ds
and
stos
loopne
outs
(bad)
push
int
add
inc
test
xor
in
and
adc
lahf
cli
sbb
dec
sub
pop
clc
add
mov
inc
js
inc
test
inc
ins
dec
cmp
daa
in
sbb
pop
rcr
mov
inc
mov
pop
loop
aam
in
cs
push
mov
retf
push
sahf
or
fdiv
call
inc
cdq
arpl
pop
sar
push
fs
cmps
shl
cmp
sbb
ins
jno
out
inc
cmp
and
jmp
mov
jns
cli
ret
add
loop
mov
jg
and
test
cmp
retf
scas
sub
outs
or
push
clc
pop
xchg
push
and
imul
(bad)
fisttp
mov
dec
ins
(bad)
(bad)
bound
ins
in
push
pop
mov
pop
mov
or
outs
mov
fwait
sbb
fcomp
cmp
pusha
jl
clc
pop
mov
cmp
add
mov
or
je
gs
lods
rcr
xchg
imul
retf
mov
xor
jne
jle
or
and
in
mov
(bad)
add
test
adc
(bad)
push
stos
into
jp
cmp
mov
sub
mov
mov
push
cmp
fst
sbb
clc
rcl
push
rcr
pop
shl
and
cdq
js
test
stos
inc
inc
xchg
(bad)
xor
pop
call
ret
inc
jmp
add
push
(bad)
xor
pop
shr
or
pop
jl
test
mov
(bad)
fisttp
push
and
add
jg
mov
adc
or
imul
dec
data16
out
inc
adc
xor
sbb
gs
pushf
sub
jl
xor
sbb
sbb
imul
retf
push
inc
aaa
aas
push
or
repnz
popf
jne
push
int3
into
mov
mov
push
and
std
and
adc
int
mov
jge
mov
scas
mov
js
je
cmps
fldenv
mov
jne
mov
mov
rcr
pop
inc
ror
pusha
call
jle
cdq
push
nop
mov
push
xchg
mov
and
pop
push
imul
xor
and
adc
enter
aas
pushf
into
pop
jne
leave
sbb
push
sbb
mov
sbb
mov
aaa
dec
es
(bad)
stos
push
jle
xor
cli
hlt
mov
jbe
sub
push
cld
movs
(bad)
pop
jo
nop
xor
jecxz
je
jge
pusha
adc
int
inc
sbb
inc
outs
cmp
push
sbb
enter
rol
jecxz
int3
xor
dec
dec
adc
pop
cmp
push
cmc
in
enter
(bad)
cmps
iret
jae
adc
ins
iret
jp
inc
cmp
enter
sbb
inc
les
lea
fucomi
sub
repnz
push
inc
loop
pop
add
cmc
movs
cmp
stos
jecxz
aam
pop
mov
mov
pop
cmp
or
into
ret
hlt
in
add
js
fst
pop
je
outs
shl
test
dec
ins
icebp
jb
pusha
shr
fstp
add
out
pop
cld
in
je
adc
cmc
dec
std
or
jecxz
xchg
jns
pop
mov
movs
arpl
xchg
xchg
mov
inc
scas
sub
sub
je
cmps
rcr
jmp
aas
repz
cmp
je
or
lds
push
lds
stos
xlat
std
fwait
pop
jne
popf
daa
repnz
in
test
mov
inc
movs
jbe
mov
add
cmp
ficom
call
adc
or
clc
out
inc
les
push
or
outs
popa
(bad)
rcl
gs
cmps
fsubp
jns
cmp
adc
paddsw
fnstcw
sbb
int3
jp
fmulp
jp
mov
push
cmp
and
adc
lock
aas
cmp
mov
cs
in
ja
in
mov
stc
retf
test
ret
mov
jne
and
jb
and
add
inc
popa
fmul
imul
xlat
jbe
ja
repz
xchg
mov
cmc
loop
into
jmp
mov
xchg
nop
xor
mov
lock
add
cdq
stos
popf
xor
cdq
test
or
cmp
scas
mov
vpsubusb
fcomp
outs
xchg
lock
sub
fwait
xchg
cdq
retf
fiadd
aad
sar
imul
rcl
push
fs
clc
add
jl
dec
mov
jmp
and
or
nop
sbb
xor
xor
inc
(bad)
push
(bad)
retf
mov
dec
out
sbb
loop
mov
mov
mov
retf
lds
sub
imul
sub
aaa
inc
push
pop
fcom
push
leave
test
add
js
pop
pop
sub
dec
(bad)
out
fld
push
inc
imul
jne
enter
sub
je
mov
jmp
add
pop
fistp
jae
clc
dec
mov
xchg
outs
js
mov
dec
mov
pop
shl
jns
pop
sbb
test
aaa
cmp
jmp
add
daa
scas
mov
lock
imul
ins
jmp
add
popa
xor
retf
mov
jmp
jmp
(bad)
xchg
movs
cmps
dec
repnz
adc
push
push
xchg
les
sub
stos
pop
jnp
out
and
(bad)
ror
mov
xchg
pop
fcmovnbe
jb
cli
fild
xor
cmc
xchg
fnsave
sbb
(bad)
invd
movs
fld
cmp
std
cmps
test
adc
mov
cmc
je
gs
adc
xchg
fisub
pop
xchg
scas
push
(bad)
inc
xchg
push
(bad)
xchg
cmp
js
pop
sti
lods
push
jno
mov
jg
mov
aaa
ins
cmp
retf
shl
(bad)
pop
cmp
(bad)
(bad)
call
shl
pop
sti
jne
xor
add
hlt
ficom
mov
add
and
sbb
inc
sbb
xchg
bound
fstp
daa
clc
popa
mov
mov
sub
or
pop
es
lods
(bad)
jns
movs
xor
lea
out
jecxz
sbb
cmp
cmp
in
push
fcomp
enter
jae
nop
mov
loope
xor
sbb
inc
inc
ja
mov
inc
neg
aaa
les
inc
mov
add
(bad)
sti
call
outs
int3
xlat
add
aam
xchg
add
shr
xchg
movs
imul
push
jmp
fwait
stos
dec
(bad)
in
add
ret
mov
nop
push
sub
mov
cmp
nop
popa
fwait
fwait
movs
push
jp
fisubr
movs
push
lods
fist
imul
cmp
xor
add
cdq
xor
std
sub
fs
loop
(bad)
mov
fstp
pop
mov
jmp
cmp
mov
pop
loopne
add
mov
ja
mov
add
lods
pop
cdq
inc
in
xor
(bad)
std
imul
or
xor
test
stos
test
push
and
dec
add
loope
(bad)
clc
pop
fisttp
mov
add
out
mov
jle
dec
sub
adc
jb
dec
ret
mov
test
neg
or
es
ja
scas
out
(bad)
push
jge
shl
ret
in
and
fsub
nop
test
inc
mov
movs
xor
imul
cmp
cmps
cli
cmp
xchg
ins
add
add
addr16
push
ds
add
inc
inc
sub
sbb
push
mov
push
in
mov
sbb
outs
push
test
inc
push
or
jmp
movs
mov
ds
call
xor
mov
(bad)
sub
cdq
sub
pop
mov
call
dec
std
push
add
jne
sub
icebp
xchg
mov
test
enter
mov
js
push
pusha
ss
adc
pop
popa
lock
jne
les
inc
cmp
rol
stos
pop
cdq
retf
jle
jge
and
xor
adc
mov
xchg
scas
aaa
sub
xor
aas
jl
data16
add
inc
cmps
cmp
js
dec
dec
sub
mov
xlat
leave
push
rol
lea
jge
popf
ret
push
adc
rcr
ror
cdq
clc
lahf
jnp
mov
add
mov
cdq
repz
leave
adc
das
xchg
loop
clc
mov
adc
pop
jmp
inc
jb
add
int
sub
gs
add
push
jl
push
lds
mov
cmp
push
push
outs
sub
mov
mov
call
out
call
mov
iret
test
ret
mov
inc
mov
adc
aam
std
gs
or
inc
ret
ins
xchg
pop
adc
hlt
sbb
pop
daa
pop
xor
mov
cld
xchg
dec
out
inc
jmp
adc
popa
scas
xchg
sub
mov
inc
cwde
pop
enter
ins
sbb
in
jns
xchg
jle
jne
xor
(bad)
cmp
call
cwde
ins
test
cmp
push
fstp
movs
xor
ins
gs
call
out
(bad)
jge
imul
scas
fistp
jns
cli
scas
(bad)
jle
xchg
imul
js
clc
loopne
add
jmp
jecxz
shl
xor
sub
and
or
xchg
in
push
ins
jmp
out
dec
loope
div
and
cwde
(bad)
out
jmp
cmp
push
(bad)
xchg
mov
and
clc
push
loopne
jns
mov
jmp
stos
xlat
sub
pop
adc
fdiv
mov
xchg
mov
jg
sbb
xor
jnp
test
outs
pop
jne
lock
dec
scas
add
jno
inc
sub
jae
fimul
mov
outs
cmp
jmp
cld
in
jmp
shl
lods
retf
mov
mov
xlat
xchg
mul
xchg
cld
shr
mov
repz
xchg
or
popf
(bad)
xchg
mov
clc
fld
push
stos
mov
jb
call
adc
push
xor
pop
retf
push
les
les
mov
xchg
pusha
mov
adc
std
int3
or
push
mov
bound
sbb
in
sbb
and
clc
push
adc
cmp
js
jae
add
(bad)
sysret
xlat
jae
or
int3
ds
mov
cmp
mov
mov
add
inc
or
push
push
and
stos
mov
mov
ret
ret
jno
adc
pusha
and
sub
(bad)
aas
or
stos
aam
push
cmp
rol
enter
push
(bad)
pop
mov
or
ja
pop
mov
push
sbb
mov
hlt
popf
sar
rcr
xor
cmp
xchg
retf
or
test
xchg
cmp
in
jne
jecxz
loope
test
add
scas
fdivr
and
sub
outs
pop
daa
stos
mov
adc
adc
adc
ret
sub
std
stos
leave
ret
jmp
fwait
jns
dec
ds
leave
xor
mov
push
push
xor
sub
or
mov
push
(bad)
stc
cmp
add
push
call
or
xor
mov
(bad)
(bad)
xor
jl
mov
mov
lods
push
pop
pop
pop
mov
and
inc
xor
mov
lahf
push
ror
mov
mov
xchg
enter
ins
arpl
lock
jne
push
dec
or
cmp
out
add
and
or
adc
ror
jmp
or
xor
movs
mov
sub
mov
fild
inc
mov
(bad)
and
push
xchg
mov
(bad)
cli
add
cwde
cmp
loopne
out
xor
push
movs
mov
dec
push
mov
cmp
pop
cmps
adc
mov
call
cdq
mov
movs
push
and
test
fldcw
hlt
pusha
mov
lahf
repz
xor
outs
retf
xchg
and
xor
shl
data16
push
(bad)
std
lds
rcl
jne
push
(bad)
pusha
push
shr
dec
push
lahf
sub
in
or
mov
push
xlat
sahf
movs
xor
dec
fs
mov
sbb
or
pop
je
es
mov
jae
sub
cmp
mov
or
fld
les
cmps
cs
cmps
jb
and
xor
add
dec
outs
out
aam
push
and
and
sub
mov
imul
mov
mov
stos
push
jmp
add
pop
cld
mov
jnp
fwait
xor
in
mov
mov
rcl
dec
lahf
fdivr
stc
dec
movs
lahf
mov
pop
int3
arpl
jbe
jnp
loopne
std
mov
(bad)
sub
sar
inc
xor
fild
add
push
loope
xor
addr16
sbb
fst
stc
ds
jnp
push
dec
mov
and
mov
stos
das
es
shl
mov
mov
jno
dec
dec
jns
sar
cmp
ins
test
mov
aam
xchg
jmp
mov
cmp
cmp
dec
ja
je
pusha
jl
punpckhdq
pop
sbb
mov
sbb
ss
mov
cmp
ja
xchg
call
les
cli
jns
sbb
sti
sbb
sub
arpl
inc
cmp
mov
ja
mov
ret
adc
mov
jns
sahf
cmp
dec
in
retf
pop
sahf
std
(bad)
adc
jae
call
pop
pop
dec
fwait
cs
scas
jns
aaa
data16
js
sub
jne
lock
push
(bad)
or
jp
test
stos
(bad)
push
pop
adc
xchg
and
aam
lahf
js
retf
mov
aas
pop
xor
sahf
aaa
das
sbb
pop
and
push
fbld
adc
adc
mov
std
push
dec
lods
adc
fcomp
dec
nop
aas
jecxz
js
jae
pop
call
xor
adc
pop
arpl
ss
pushf
inc
cmc
xor
cmp
and
and
pop
cmp
dec
mov
sar
popa
shr
mov
test
mov
mov
fldenv
pop
push
sbb
push
fstp
adc
push
and
mov
mov
jge
outs
add
sbb
pop
jne
popa
sbb
push
sub
es
mov
movs
mov
pop
sub
out
jns
mov
pop
mov
jb
(bad)
loopne
pushf
cmp
dec
movhps
aad
sahf
les
mov
jle
mov
mov
mov
push
frstor
fnstenv
in
xchg
add
pop
fcmove
ds
inc
or
mov
fs
and
and
add
cmp
in
fdivp
mov
stc
nop
pop
fsubr
sub
xchg
cmp
fimul
sbb
mov
xor
cmp
and
stc
(bad)
cli
or
or
sbb
stos
mov
push
mov
bound
mov
jb
push
lock
jae
ret
js
imul
(bad)
xchg
leave
xchg
(bad)
xchg
xchg
into
test
dec
fistp
and
push
out
xor
jmp
adc
mov
(bad)
das
mov
loop
sbb
(bad)
add
in
retf
xor
mov
lods
cmp
mov
int3
(bad)
xchg
pop
test
daa
mov
pop
ficomp
sbb
adc
and
jmp
xor
(bad)
(bad)
fidivr
and
inc
and
add
int3
pop
in
cmc
cli
pop
sbb
ss
xchg
popa
xor
loopne
mov
div
sbb
scas
or
dec
mov
dec
and
push
loop
push
add
pminsw
fndisi(8087
or
dec
imul
xchg
adc
add
pop
or
jo
cwde
das
test
repz
ror
retf
sbb
xor
cmc
movs
sub
dec
push
mov
std
push
inc
adc
loope
push
and
ins
out
std
push
cmps
and
in
je
ja
inc
push
adc
clc
mov
mov
dec
fist
push
daa
jne
cmp
into
lea
(bad)
bnd
add
jne
icebp
in
dec
lods
jl
(bad)
jo
ins
out
je
lods
out
cld
(bad)
cmp
inc
adc
sub
fisttp
dec
add
mov
pusha
jl
sti
dec
mov
neg
bound
xchg
rcl
repz
out
scas
pop
mov
cdq
jge
test
mov
jb
adc
adc
mov
gs
not
add
clc
sti
cs
mov
mov
push
xchg
push
(bad)
jmp
xchg
push
mov
fbld
mov
xor
adc
adc
ins
popf
cmps
sar
popa
inc
bound
jp
movs
push
cmp
fwait
aam
fcom
xlat
jo
cmps
xchg
or
and
and
or
xchg
xor
sahf
outs
test
sbb
and
leave
jmp
clc
aam
sub
mov
imul
retf
lea
test
mov
cmp
mov
push
adc
loop
cmps
cmc
and
out
xor
mov
cmp
ret
retf
or
add
push
dec
pop
pop
popa
cld
lahf
push
(bad)
cmp
lods
and
cmp
in
mov
hlt
ret
jns
add
mov
push
jp
and
jno
xchg
test
rep
adc
pusha
test
cmps
jbe
cmps
mov
inc
cmp
xlat
mov
push
fnstsw
cmp
mov
fst
mov
sub
movs
mov
div
sub
add
and
pusha
add
xchg
push
or
adc
xlat
test
fnstcw
test
in
mov
mov
mov
mov
lods
lods
dec
jmp
sub
dec
fwait
mov
call
out
add
mov
out
cdq
test
sbb
aaa
or
push
iret
jo
(bad)
sub
pop
cmp
retf
mov
mov
ret
add
lods
mov
inc
stos
(bad)
xor
cmp
or
xor
inc
adc
adc
out
shl
lock
call
cli
jnp
cmp
pop
mov
call
clc
jns
push
jge
aaa
or
daa
sub
cmp
jae
inc
aaa
pop
loopne
jbe
inc
push
fiadd
add
inc
in
push
mov
and
test
out
mov
arpl
mov
mov
(bad)
(bad)
lock
dec
xchg
inc
or
cli
mov
std
dec
push
into
sub
jmp
cmp
xchg
sub
icebp
shr
mov
mul
test
popa
pop
repz
adc
sub
mov
les
fsubr
pop
push
cmp
into
sub
retf
sub
es
daa
clc
lea
sbb
std
in
js
or
fldcw
std
and
js
sbb
pop
adc
iret
cmc
pop
push
test
shl
xor
repnz
scas
xchg
xchg
cmp
dec
fild
in
jge
lahf
jmp
sub
repnz
pop
pop
enter
inc
out
xchg
mov
inc
pop
imul
sbb
mov
sub
inc
adc
leave
ret
and
jp
or
and
arpl
jae
bound
int
fsubr
out
loop
pop
call
mov
ins
sar
cmp
cmp
push
das
fcomp
mov
stos
jp
xchg
jnp
add
or
adc
(bad)
loopne
or
jmp
dec
sbb
cmp
rcl
xchg
retf
(bad)
adc
not
inc
dec
loopne
cmp
vmovd
add
adc
dec
sar
push
int3
imul
pop
inc
dec
pop
(bad)
out
scas
mov
mov
lea
loope
push
cmp
loop
add
jle
adc
xchg
aaa
push
mov
adc
dec
sbb
jg
(bad)
sub
xor
(bad)
push
cmp
cmp
es
adc
xor
(bad)
iret
fld
cmp
ror
test
pop
cmc
(bad)
sbb
push
xor
pushf
dec
xchg
test
mov
cmps
adc
data16
pop
pop
cmp
popa
lods
jmp
mov
inc
fcom
dec
adc
mov
inc
rcl
pop
adc
jns
pusha
pop
xor
pop
scas
bound
pop
icebp
es
cmp
cmc
add
xchg
inc
sub
inc
fnstsw
in
stos
mov
push
pop
fadd
mov
neg
xchg
sar
daa
and
pop
mov
das
mov
call
in
int3
dec
test
ret
mov
mov
dec
das
daa
leave
jmp
sbb
add
ret
inc
(bad)
cmp
ret
pop
in
ss
cmp
and
lahf
stos
inc
(bad)
push
arpl
aam
cmc
sbb
je
push
retf
adc
jnp
loop
sub
cmc
shr
movs
add
clc
ficomp
test
es
out
xchg
frstor
or
or
pop
rcl
push
or
dec
div
and
push
pop
pushf
or
cmp
ds
(bad)
bound
sub
xchg
pushf
mov
loopne
xor
out
retf
push
pop
dec
mov
and
dec
inc
jno
xchg
mov
retf
test
cld
mov
call
cmp
ds
movs
fwait
push
popa
movs
cwde
jmp
jmp
sbb
inc
xchg
ret
ret
mul
push
jae
cmc
xchg
mov
add
(bad)
adc
push
outs
je
cmps
inc
and
scas
retf
inc
jge
mov
lods
xchg
jl
cld
ds
fist
pop
xor
or
(bad)
jmp
and
popf
push
dec
fdivrp
(bad)
arpl
jbe
add
sub
aas
jl
xchg
je
test
(bad)
xor
jl
inc
adc
dec
fnstcw
lahf
jns
test
retf
lods
or
mov
pop
test
inc
aad
std
and
cdq
sbb
cs
stos
inc
jbe
lods
rol
(bad)
cwde
mov
loope
and
mul
fcomp
and
in
dec
cmp
call
movs
push
push
lods
mov
xchg
sub
pop
test
or
add
ins
test
cmps
sti
dec
lds
sub
dec
push
cmp
das
pmullw
pop
rep
fwait
dec
mov
push
pop
lods
inc
les
xor
and
mov
sbb
das
inc
aad
inc
mov
clc
popf
xchg
sub
leave
lock
push
inc
adc
cld
pop
inc
dec
mul
std
pop
add
dec
cwde
mov
push
dec
aam
push
popf
add
push
rcr
movs
xor
mov
test
pop
test
lods
stos
push
jnp
sub
jg
inc
fs
cld
mov
enter
mov
sahf
adc
cmp
pushf
nop
mov
test
sbb
sbb
fldenv
jb
in
loop
daa
fwait
inc
mov
cmps
dec
imul
ret
ja
add
mov
adc
xchg
jecxz
fs
adc
sub
popf
fisubr
gs
sub
mov
std
sub
push
imul
jmp
enter
jecxz
js
ret
lahf
jno
jo
movs
dec
lahf
mov
aaa
jne
dec
popa
ret
repz
mov
(bad)
add
pop
mov
mov
out
cmp
adc
sti
lock
bound
sbb
gs
bound
add
jl
fs
cdq
or
inc
mov
add
push
or
push
sub
add
das
jbe
jne
sbb
xchg
bound
call
stos
sbb
aad
xchg
add
push
lea
adc
xchg
cmp
mov
movs
dec
in
mov
adc
push
ja
clc
dec
sahf
(bad)
in
shl
daa
sub
push
jmp
mov
lods
aaa
rcr
(bad)
cs
cmp
sub
fld
cld
and
dec
fadd
icebp
jl
mov
out
inc
mov
xor
xor
xlat
cs
and
and
test
ficom
mov
popf
test
mov
push
(bad)
pop
xor
test
movs
mov
into
outs
pusha
xchg
js
mov
ins
mov
mov
aam
ret
mov
pop
lods
out
out
xchg
mov
mov
adc
or
ror
inc
add
sub
aas
mov
push
jae
loope
or
push
push
ins
sar
in
cmc
es
loope
ss
cli
pusha
out
sub
sti
gs
pusha
fsubr
test
aam
pop
xor
test
add
js
and
jmp
fst
out
jo
jae
jp
ret
mov
enter
push
fmulp
aaa
mov
mov
idiv
push
mov
mov
sub
jo
adc
ins
pop
mov
push
inc
into
adc
aad
fidivr
cmp
fs
(bad)
mov
push
and
jns
dec
sub
cmp
jbe
ja
in
leave
fist
adc
jmp
(bad)
mov
push
(bad)
stc
push
xor
(bad)
mov
in
pop
push
jl
cdq
(bad)
pop
call
add
arpl
(bad)
stos
add
push
jo
shl
jo
pushf
mov
xor
ret
mov
add
mov
mov
ret
jno
inc
aas
dec
idiv
jle
scas
rol
and
push
shr
(bad)
sbb
pop
cli
aam
mov
ret
mov
mov
js
cld
jns
sbb
jb
mov
aam
mov
mov
lock
movs
outs
mov
hlt
sub
jne
push
daa
add
nop
mov
jne
add
sub
in
(bad)
repnz
repnz
fdiv
retf
jae
pop
sub
fst
fldenv
xchg
mov
inc
sub
das
jl
fadd
mov
adc
frstor
lock
fisttp
test
mov
inc
jns
ret
adc
jb
dec
add
pop
sti
mov
jmp
xchg
lea
(bad)
xor
mov
mov
pop
adc
std
mov
clc
or
and
das
sub
xor
les
scas
cmc
aaa
outs
adc
push
mul
hlt
fadd
mov
test
dec
stos
ret
mov
mov
movs
ins
jecxz
icebp
cli
adc
xchg
mov
(bad)
outs
mov
sbb
sub
xchg
inc
rol
dec
repz
mov
and
push
scas
imul
jno
dec
aad
aas
lods
cmp
and
xor
jbe
sub
dec
pop
mov
jg
push
imul
scas
push
add
or
xor
cmp
or
jl
add
adc
aas
xchg
in
int3
cmp
gs
sbb
ins
and
popa
or
movs
mov
mov
xchg
jge
mov
fldenv
mov
repz
xchg
xchg
xor
xlat
test
out
xchg
mov
in
xchg
outs
retf
rcl
inc
enter
adc
rcl
ret
pop
pop
jp
aad
pop
xchg
rcl
addr16
adc
inc
je
lods
aad
lods
pop
sbb
scas
mov
and
js
inc
repz
mov
enter
std
add
mov
imul
out
pop
fstp
push
or
xor
jl
cmp
xor
dec
out
fwait
pop
lds
xlat
sbb
push
jns
ins
push
shr
sbb
into
test
ror
mov
xor
daa
mov
sahf
aas
loop
aaa
bound
xor
ret
adc
sar
push
cld
cmp
dec
mov
aas
dec
aad
cwde
dec
icebp
loope
jecxz
out
and
push
aaa
(bad)
inc
dec
into
ins
xor
add
fs
add
or
mov
stc
push
scas
xchg
fidivr
std
sub
imul
les
pop
xor
jl
inc
mov
std
movs
les
xchg
and
ss
pop
test
and
(bad)
rol
ins
mov
dec
cmps
int3
dec
and
loope
in
mov
xchg
lahf
pop
out
push
add
jbe
mul
cmp
cmp
out
shl
aas
in
(bad)
jbe
lods
je
mov
inc
stc
sar
or
dec
and
cmp
mov
mov
fisubr
xchg
ins
push
das
ins
mov
mov
adc
fcom
sub
and
add
xchg
mov
in
popf
cmp
xor
repnz
xor
cmps
sahf
adc
and
pop
ror
(bad)
(bad)
(bad)
ss
inc
lds
ffree
(bad)
mov
jno
adc
out
and
stos
sysenter
push
push
push
in
or
sbb
iret
dec
fwait
mov
xlat
mov
mov
rol
into
lods
bswap
stc
fldenv
push
mov
add
ins
fnstcw
mov
xchg
adc
or
xchg
popa
shr
out
nop
cmp
dec
pop
jb
out
hlt
xor
mov
push
arpl
sub
xchg
(bad)
fcmove
xchg
cmps
mov
movhps
jne
pop
cs
pop
fnstsw
or
pushf
out
ret
inc
pinsrw
push
sub
xor
int3
fwait
cmp
rcl
adc
(bad)
imul
scas
mov
jno
push
xor
xchg
imul
stos
je
mov
(bad)
mov
push
movs
aam
(bad)
(bad)
int
xor
test
cmps
ror
ret
add
sub
mov
call
mov
sar
push
lock
or
sti
jo
iret
sar
shl
xor
sub
imul
jp
jge
pop
mul
push
(bad)
mov
jns
call
out
pop
mov
push
inc
xor
push
sub
inc
push
jo
inc
mov
inc
dec
jmp
pop
(bad)
mov
push
mov
adc
xchg
ror
pop
mov
mov
adc
cli
jbe
adc
sbb
lahf
out
dec
xor
int
pushf
pop
xor
cmps
(bad)
test
sbb
adc
mov
pop
popf
cmp
mov
add
nop
fcom
jae
mov
adc
lahf
xchg
aas
sub
mov
inc
jmp
(bad)
jmp
cld
dec
(bad)
push
fistp
js
in
lahf
call
into
test
ret
push
cmc
mov
mov
js
lods
push
ins
push
sbb
sbb
mov
in
add
cmc
loope
repz
(bad)
jno
gs
ds
and
das
jle
into
popf
mov
mov
pusha
retf
stos
cmp
fs
jb
jae
je
cdq
sbb
dec
sbb
or
inc
sub
push
loope
xchg
test
cmp
(bad)
int
mov
sbb
pop
rcl
rcl
test
xchg
jmp
movs
test
add
mov
mov
xchg
repz
bound
dec
sahf
lods
clc
dec
push
pop
stc
dec
and
inc
test
rcl
loopne
in
ret
ja
jae
int3
cmp
or
dec
mov
pop
mov
xchg
lods
mov
sbb
and
push
es
mov
repz
mov
in
and
fisubr
dec
and
test
xchg
jle
sub
imul
jmp
nop
sbb
mov
xor
test
add
arpl
jae
add
(bad)
(bad)
enter
adc
or
imul
ret
mov
pop
dec
xchg
jno
xchg
push
div
or
xor
cdq
scas
xchg
cwde
mov
add
xor
lods
inc
mov
jp
test
icebp
mov
stc
and
stc
fcomp
dec
enter
fcomip
js
mov
fcom
test
dec
jo
mov
imul
aad
ja
jbe
dec
in
cmp
xchg
(bad)
addr16
clc
push
fist
into
or
pop
popf
(bad)
push
cwde
mov
lock
pushf
xor
or
lea
repnz
sbb
add
or
xchg
sbb
cmp
adc
add
sbb
cli
add
nop
popa
fist
mov
icebp
pop
cs
or
xchg
loop
inc
lods
mov
mov
xor
(bad)
cmps
mov
mov
dec
xor
push
adc
cmp
xchg
xor
int
pop
lods
mov
addr16
or
xchg
clc
lds
xor
inc
mov
pop
pop
mov
out
lds
jne
dec
add
das
cmp
mov
xor
push
mov
scas
out
mov
sub
cwde
mov
ins
jb
pop
jbe
or
sub
sar
aas
mov
sahf
scas
(bad)
mov
pop
dec
xor
pop
test
pop
jecxz
mov
sub
cs
ror
dec
xor
fcomp
sti
pop
outs
xchg
xor
pop
cmp
sub
jo
add
test
adc
mov
in
ds
cmp
mov
mov
enter
adc
inc
push
or
mov
ret
xlat
cld
les
sbb
lds
popf
cli
repz
outs
arpl
pop
push
cmp
jmp
jae
adc
xchg
jle
lea
(bad)
mov
popf
xor
(bad)
(bad)
nop
pop
mov
ja
retf
add
aad
push
push
lahf
dec
mov
std
push
call
call
dec
push
jmp
push
retf
in
xchg
pop
add
mov
cmps
push
shl
push
rcr
push
mov
outs
sbb
repnz
pop
cld
push
mov
sub
jns
inc
sbb
mov
(bad)
xor
bnd
inc
mov
pop
sbb
fisubr
push
fs
or
mov
cmp
jl
arpl
jns
pop
mov
(bad)
jns
idiv
sbb
sbb
inc
cmps
aaa
xor
xor
arpl
cmp
inc
cli
cmovl
inc
jne
adc
inc
adc
cli
add
jecxz
add
into
push
fisttp
push
sub
nop
xor
jb
ror
xor
cmp
jmp
push
pop
cmp
rcl
cli
lods
fcmovu
(bad)
out
icebp
cmp
in
aas
das
pop
popa
imul
test
sar
aaa
das
jae
adc
ss
pop
test
push
test
in
sbb
add
or
jnp
sbb
dec
mov
inc
dec
inc
movs
dec
jb
sbb
fst
(bad)
jl
(bad)
ret
xor
les
shr
aam
movs
xchg
inc
push
fbld
add
sub
sbb
push
cmp
push
pusha
test
inc
popa
imul
inc
jne
mov
in
cli
out
inc
inc
jmp
inc
ins
test
sti
or
pop
dec
es
jae
or
mov
mov
je
dec
div
sti
stc
stc
mov
dec
sbb
sahf
xchg
mov
jb
jmp
aad
mov
fadd
mov
ficomp
mov
or
xor
xchg
fld
pop
or
adc
ja
iret
cmp
xchg
ins
dec
ja
mov
sbb
mov
fisub
popa
popa
push
scas
outs
sbb
lds
(bad)
add
and
cmp
mov
popa
out
mov
mov
sbb
loope
daa
jb
les
sub
mov
hlt
test
pop
test
sbb
addr16
jno
ins
xchg
rcl
mov
retf
les
pop
xchg
mov
mov
pushf
xchg
jns
adc
or
jge
or
xchg
sbb
in
push
out
xlat
ficomp
mov
fld
(bad)
jg
lds
daa
ins
jo
stos
adc
dec
pop
ret
lods
fcmovbe
int3
inc
and
pop
xlat
inc
xchg
leave
push
xchg
test
loopne
xor
scas
pusha
inc
push
ss
aam
enter
fs
add
mov
ins
(bad)
ins
mov
(bad)
mov
fistp
xlat
nop
movs
pop
js
push
cmc
jbe
lea
mov
or
pusha
push
inc
out
jae
fistp
jnp
int
shl
adc
add
call
adc
cmc
mov
fst
fdiv
inc
loopne
test
fstp
adc
mov
sbb
dec
cli
dec
cld
push
adc
frndint
stos
mov
(bad)
stos
addr16
jmp
in
push
push
push
inc
mov
add
inc
ss
jmp
loop
mov
addr16
and
xchg
push
adc
push
stos
mov
ret
mov
sub
push
jge
retf
outs
js
push
stos
lea
scas
stos
sar
mov
loopne
out
mov
popa
out
icebp
repnz
adc
cmp
inc
leave
pop
mov
xchg
ss
mov
gs
cdq
jnp
mov
jno
cmps
push
popf
scas
in
cdq
push
xor
ror
jle
into
fild
mov
loop
ins
ficomp
mov
fcmovne
ficom
xor
ret
loope
jmp
into
cmc
leave
cmp
cmp
pop
inc
xor
cwde
in
loopne
arpl
test
in
xchg
add
test
inc
aad
cmp
cmp
or
hlt
stc
cmps
es
xchg
int
leave
add
push
or
mov
and
and
xor
scas
xchg
adc
lods
push
aas
mov
mov
mov
in
popf
xor
xchg
lea
mov
not
iret
sbb
jge
xor
retf
js
add
inc
xchg
mov
fdivr
and
sub
pop
dec
movs
pushf
outs
(bad)
int3
cmp
jo
cld
mov
std
add
mov
or
nop
lods
pop
loopne
jmp
mov
mov
scas
aas
dec
loope
and
ins
aam
int
mov
push
mov
loope
stos
ja
or
mov
test
js
push
repz
pushf
mov
jnp
add
xchg
clc
pop
hlt
mov
dec
adc
cmp
mov
test
dec
pop
lods
stos
mov
and
out
fdivp
in
pop
test
aad
mov
dec
iret
inc
push
push
or
push
cwde
call
xchg
push
inc
std
dec
xchg
cmps
push
cmp
ins
pop
xchg
or
ins
ficom
add
out
adc
stos
xlat
mov
and
inc
movs
(bad)
and
pop
mov
cmps
and
push
bound
or
push
int3
jnp
das
cdq
mov
inc
pop
test
leave
mov
icebp
push
adc
pop
xor
outs
hlt
mov
pop
xchg
pusha
into
jae
xchg
dec
push
test
sub
lock
or
mov
std
adc
mov
out
inc
into
test
xor
mov
xchg
cmps
mov
enter
adc
stos
nop
out
or
jl
cmps
fs
lods
inc
sbb
out
pop
loop
retf
mov
iret
adc
(bad)
lea
push
shl
xchg
shl
movs
mov
mov
sbb
movs
xchg
xchg
xchg
jle
inc
pop
idiv
xor
push
lods
scas
fwait
sbb
or
daa
sbb
les
mov
pop
push
and
ds
xchg
pop
sbb
inc
sub
sti
int
pop
cwde
sub
fimul
mov
add
xchg
mov
or
and
shl
push
mov
sbb
pop
sbb
jns
dec
jl
or
dec
in
dec
mov
push
test
fdivp
sub
mov
push
push
jp
movs
pop
push
push
lea
cmp
pop
push
add
sbb
jne
mov
push
xor
pusha
mov
xchg
jb
push
xlat
xor
mov
ins
int
(bad)
add
dec
dec
and
mov
inc
push
mov
push
fs
jns
mov
enter
xchg
popa
cmp
sahf
data16
ss
mov
xchg
movs
mov
xchg
xchg
dec
cmps
sbb
cmp
mov
adc
aam
icebp
shr
and
fimul
xchg
push
push
test
add
sbb
ret
in
jnp
and
ror
into
jle
mov
cmps
mov
out
cmp
jp
inc
lds
into
cmps
cs
movs
cli
mov
fninit
dec
leave
sbb
ret
(bad)
fldenv
mov
scas
shl
loope
ds
xchg
inc
out
mov
mov
mov
or
cld
movs
sub
stos
into
or
pop
popf
fnstsw
dec
cmc
test
jb
in
in
add
int3
loop
stos
stos
mov
leave
out
push
(bad)
retf
cmp
push
mov
add
ret
add
adc
add
arpl
ret
dec
std
xlat
data16
call
addr16
popf
push
out
push
sub
icebp
in
jbe
lea
push
stos
or
in
pop
add
inc
int
pop
mov
cmp
and
das
jecxz
jmp
fidiv
mov
nop
cmp
aaa
jmp
imul
push
push
hlt
or
fild
ret
xor
xchg
jmp
aad
add
shr
aaa
ins
dec
dec
jmp
inc
repz
cmp
pop
mov
pop
retf
aad
or
cmps
xchg
sbb
push
lods
cmp
mov
mov
mov
mov
sub
adc
and
mov
inc
fs
pusha
mov
(bad)
or
sub
sub
cmps
pop
and
inc
inc
or
daa
adc
aam
(bad)
ins
mov
xchg
sub
popf
in
inc
(bad)
popa
fsub
(bad)
js
cmps
mov
jmp
mov
repz
sbb
inc
mov
jl
jmp
or
add
jp
rcl
push
rol
xor
push
sti
xchg
jmp
outs
rcr
enter
adc
add
pop
dec
cmp
(bad)
es
pushf
aam
pop
lods
adc
add
adc
outs
push
push
in
inc
scas
or
pop
mov
out
and
ret
mov
fcom
cmc
lea
cwde
clc
stc
mov
cmp
clc
inc
sub
adc
xchg
out
ror
mov
hlt
dec
ss
out
dec
js
daa
inc
xchg
les
push
fisubr
or
inc
nop
nop
xor
jle
dec
test
out
pop
inc
aam
push
mov
dec
or
jg
jge
mov
movs
add
push
pop
xor
cmps
repz
jb
cmps
jmp
js
in
and
xor
sub
dec
push
int3
(bad)
cmp
icebp
lods
(bad)
mov
lods
sbb
(bad)
push
nop
pop
push
or
jle
fwait
jno
push
ds
adc
mov
imul
xor
mov
mov
out
pop
fs
fisubr
xor
fcomip
cmp
sbb
add
shr
out
addr16
loope
nop
les
sbb
cmp
data16
jg
dec
pop
push
out
div
mov
jne
lar
pop
not
inc
out
pop
ret
cmp
push
sti
icebp
mov
repz
imul
or
imul
jmp
scas
sub
mov
int3
xor
pop
or
add
fstp
sub
xchg
cmp
ds
jecxz
fbstp
mov
cmp
sti
jbe
jg
sbb
and
inc
clc
and
pop
xchg
ret
fisubr
add
mov
mov
scas
stos
in
dec
xor
sbb
cli
pop
adc
pop
mov
movs
add
sub
push
loope
xor
mov
sbb
icebp
cmp
inc
sahf
mov
out
jecxz
inc
out
inc
ret
arpl
push
xchg
test
jge
imul
inc
iret
test
cld
and
adc
mov
test
add
pusha
mov
mov
test
dec
int3
bound
xchg
cmps
or
inc
mov
(bad)
sahf
fimul
inc
inc
mov
out
jmp
pop
cmp
xlat
and
xor
adc
pop
addr16
ja
xchg
sbb
pop
pop
mov
ret
pop
cmps
shl
bound
mov
cmp
mov
stos
jno
call
pop
popf
idiv
jecxz
mov
cmp
dec
jmp
push
pop
or
adc
out
inc
lahf
cmp
mov
cs
out
xor
aad
fldcw
adc
aaa
jae
(bad)
cmp
mov
or
jp
ins
adc
or
xchg
adc
push
pop
repnz
stc
jae
shr
popf
sub
cmp
ss
xor
out
(bad)
dec
imul
cmps
xor
mov
cmp
loopne
test
pushf
pop
dec
sbb
or
aas
cdq
adc
mov
sub
mov
lods
push
adc
add
or
cmp
jbe
in
and
lds
leave
sbb
cmp
daa
sbb
pushf
xchg
dec
movs
dec
pushw
mov
lea
test
mov
pop
iret
sub
and
push
int3
cdq
lock
ds
push
adc
test
ret
add
mov
imul
mov
icebp
cdq
(bad)
aad
mov
sbb
dec
cld
mov
mov
adc
inc
and
xor
pop
aas
mov
push
inc
cld
or
rcr
loopne
jp
or
mov
sahf
adc
jae
(bad)
cld
(bad)
xchg
mov
test
outs
sub
fnsave
cmp
sbb
js
aaa
sub
xchg
and
aaa
(bad)
call
aad
inc
ss
out
or
jge
jb
pop
bound
xlat
inc
int
dec
out
jnp
popf
jmp
ret
iret
sbb
cmp
jbe
and
mov
sub
mov
cmps
push
and
ss
mov
daa
sbb
in
(bad)
les
retf
jecxz
rol
sbb
xchg
pop
mov
sar
cld
fisttp
push
jnp
(bad)
xchg
adc
mov
out
fild
jbe
imul
jbe
pop
retf
test
cmp
das
mov
es
pop
inc
imul
fcom
push
dec
xchg
fcmovnb
add
sub
ins
and
ret
aas
xchg
mov
push
or
pop
popf
lods
cwde
fdiv
cmp
sub
gs
sub
das
mov
test
loope
xlat
fadd
xor
mov
fst
and
adc
sub
bound
dec
and
push
push
and
adc
jnp
mov
xor
xor
ins
std
and
pop
add
ret
or
xchg
(bad)
pushf
fisttp
mov
or
add
add
sub
xchg
mov
pop
bound
push
into
into
jb
cmc
in
sub
aad
aas
test
push
xor
shl
sti
jne
xchg
push
adc
lods
cmp
jmp
int3
test
pop
repz
jmp
xor
xchg
in
int
imul
scas
in
mov
mov
clc
add
jae
jno
cmp
loop
leave
mov
adc
push
or
loop
pop
dec
xor
arpl
add
add
cmp
sti
mov
test
push
push
ja
dec
cli
je
mov
std
ja
push
mov
mov
retf
cmp
mov
shr
or
adc
xor
jmp
adc
jecxz
daa
repz
sti
ret
in
popa
add
mov
jge
fsub
xchg
out
xchg
jmp
call
jmp
push
mov
test
dec
mov
and
jl
fs
scas
popf
(bad)
mov
mov
imul
retf
in
shl
ins
(bad)
cli
xor
cmp
jae
mov
pushf
cmp
xchg
inc
cdq
loopne
imul
inc
pop
es
fisttp
test
jg
xchg
les
xchg
or
sar
ins
sbb
push
or
inc
rol
test
imul
(bad)
inc
cmps
add
inc
ror
out
adc
xor
std
bound
call
in
in
pop
inc
sub
sbb
test
js
push
jge
and
adc
adc
(bad)
fldenv
mov
jl
mov
push
pop
push
setg
out
xchg
sbb
jno
mov
dec
push
gs
pop
cmp
and
scas
cmc
ins
and
push
fcmovbe
push
cwde
or
rcl
mov
ret
and
into
xor
mov
test
ret
loop
push
cmp
cmp
push
xor
ja
movs
lahf
mov
push
xchg
jno
xchg
out
call
and
frstor
inc
push
mov
push
rcr
jmp
jne
loop
sar
stc
arpl
popf
in
stos
in
in
mov
add
inc
cmp
movs
mov
pusha
test
inc
lea
dec
add
sti
add
pusha
into
ja
adc
pop
fcmovnu
out
aas
out
scas
or
xrelease
leave
and
out
or
sbb
inc
jg
in
das
loope
xor
pop
not
xor
(bad)
scas
fisub
jmp
cmp
jg
not
sub
mov
out
inc
mov
shl
inc
add
lea
sahf
retf
sbb
jne
xor
cmp
push
dec
lahf
lock
pop
ret
fcomp
pop
mov
retf
test
dec
add
pop
clc
gs
dec
push
pop
fcomp
ja
fcomp
jl
jae
pop
call
ds
fild
jle
dec
push
dec
lods
add
xor
cwde
jle
retf
sub
int
sar
jmp
jecxz
pop
sbb
dec
push
dec
in
jno
fidivr
int
inc
cmp
push
sbb
or
out
sti
add
jp
cmps
mov
or
jae
inc
mov
shl
xchg
call
add
int3
push
ret
add
fadd
nop
pop
or
aaa
daa
test
sbb
mov
or
jns
pop
fs
xchg
add
sub
or
clc
sbb
mov
cld
mov
adc
stos
stc
ficomp
call
fs
in
add
in
arpl
stos
aad
das
pop
inc
mov
xchg
cmp
mov
mov
movs
push
inc
xchg
pushf
sub
cdq
add
scas
cmc
add
pop
push
bound
pop
sbb
push
(bad)
xchg
push
dec
stos
jno
xor
xchg
(bad)
push
loopne
mov
dec
mov
outs
adc
cli
dec
dec
mov
mov
cdq
and
enter
stos
loopne
rol
jg
icebp
dec
loope
js
adc
popf
pop
xor
shl
xor
cmp
arpl
and
adc
sbb
cli
or
cld
ins
retf
sub
mul
jne
or
fstp
jl
mov
pop
sbb
cmps
aam
scas
inc
xchg
daa
loop
and
pop
movs
lds
lock
pushf
out
xchg
scas
sbb
rol
lahf
out
arpl
cmp
jecxz
mov
cmp
sbb
xchg
cmps
mov
inc
test
fst
inc
ret
cmp
push
and
inc
sub
push
jno
cmp
aam
popa
lods
jo
enter
cld
fwait
xor
ss
aad
daa
sub
das
cmp
es
je
jmp
push
imul
jno
push
add
pop
xor
push
jge
or
ja
and
jl
clc
mov
push
xor
mov
jecxz
div
lock
sti
dec
in
inc
or
and
mov
pop
push
jle
adc
lods
test
add
add
sbb
jmp
sbb
es
xor
sbb
xlat
add
pop
lea
lods
xchg
enter
pop
sahf
mov
mov
pop
(bad)
pop
(bad)
in
sub
cmovo
mov
xchg
(bad)
push
cwde
ror
or
pushf
test
cmp
mov
adc
fbld
imul
xchg
jmp
xor
int
inc
mov
jae
scas
and
(bad)
dec
xor
or
mov
repz
stos
imul
pop
xchg
inc
mov
mov
jle
adc
inc
inc
aas
sahf
cld
lea
test
and
out
cmp
dec
mov
or
push
out
push
add
jmp
adc
fs
dec
cmp
outs
lds
pavgw
inc
icebp
mov
call
sbb
push
pop
(bad)
jle
repnz
nop
xchg
jns
arpl
dec
js
adc
sub
xlat
scas
sbb
or
and
jecxz
loopne
mov
mov
test
lea
and
dec
pop
mov
std
inc
mov
mov
test
and
adc
fcom
pop
ins
out
cwde
mov
jmp
adc
mov
inc
pusha
mov
ins
mov
inc
test
push
sub
xchg
pop
mov
stos
hlt
adc
and
cmp
ret
mov
xchg
xor
xchg
xchg
call
or
inc
sbb
rcr
in
(bad)
call
xlat
mov
in
lock
and
jp
jae
stos
jmp
aad
inc
push
jno
lock
fucomi
sub
into
cmp
pushw
loope
(bad)
pop
and
xor
xchg
aad
in
jbe
fwait
push
sub
outs
jno
sub
scas
or
jle
js
xor
cli
hlt
jae
lea
aas
pushf
mov
xchg
sbb
mov
(bad)
dec
fiadd
lahf
sub
mov
lea
add
inc
outs
movs
fmul
shr
and
inc
pop
inc
and
mov
retf
test
inc
or
sub
dec
add
loope
mov
aad
in
mov
inc
mov
cmp
ficomp
jl
mov
loope
jmp
push
cmp
(bad)
sub
adc
xchg
mov
mov
cmps
call
mul
aas
es
fs
push
js
inc
xchg
adc
mov
inc
lods
mov
call
jns
mul
neg
sbb
out
dec
jnp
or
sub
push
popa
push
imul
rol
inc
fmul
cld
ret
popa
and
xchg
and
aaa
add
inc
xchg
jecxz
enter
or
or
pop
cmp
popf
aas
lods
push
fistp
jae
and
push
test
push
scas
ret
jge
addr16
push
adc
ss
sbb
call
js
out
and
aam
out
mov
seto
es
sbb
aad
pushf
ret
push
add
sub
mov
fsubrp
into
push
inc
dec
fsubr
aas
or
neg
dec
mov
test
imul
bound
sbb
in
cli
cmps
mov
mov
add
pop
xor
das
pop
sub
retf
push
call
push
cmp
push
jb
cwde
mov
loope
sahf
daa
sbb
push
retf
add
dec
daa
mov
mov
into
sub
out
xchg
jecxz
jo
popf
test
sub
mov
or
shl
sub
xlat
retf
into
add
push
or
ret
adc
icebp
outs
dec
(bad)
aas
pop
sub
sbb
lods
or
das
jmp
arpl
xor
lods
xchg
mov
pop
jnp
adc
nop
mov
in
push
gs
xor
xchg
stos
ins
push
gs
jbe
sysexit
jmp
adc
inc
sbb
das
dec
hlt
int3
int3
vpaddsw
pmullw
imul
or
pop
mov
mov
cmp
pop
or
push
inc
mov
aaa
(bad)
aaa
(bad)
xlat
pop
or
push
sar
repz
jo
aas
mov
test
scas
dec
test
or
cmp
pop
jbe
icebp
lea
iret
stos
cmp
jnp
mov
mov
sar
and
or
in
das
leave
cmp
and
dec
movs
fistp
imul
rcl
mov
retf
sbb
cli
cwde
mov
mov
addr16
cmp
or
mov
mov
fiadd
pop
imul
dec
mov
test
movs
ins
nop
fistp
in
or
call
retf
(bad)
inc
jae
push
es
sti
sti
and
iret
inc
push
in
aas
mov
xchg
adc
aad
cld
mov
cmp
clc
xor
cmps
ins
mov
js
adc
and
rcr
mov
pushf
shl
xor
arpl
or
pop
jecxz
jmp
jbe
movs
aam
(bad)
out
xchg
mov
jl
retf
xchg
mov
std
scas
inc
add
outs
xchg
mov
xor
dec
sub
or
(bad)
mov
mov
or
shl
xor
xor
(bad)
movs
neg
cmp
push
push
(bad)
cmp
icebp
or
sub
mov
pop
inc
or
adc
mov
loopne
inc
mov
add
imul
dec
and
mov
clc
mov
dec
repnz
outs
lods
int
in
sub
xchg
jp
and
jle
test
addr16
inc
lock
dec
jbe
xor
cmp
add
sbb
add
aad
aas
and
in
cwde
movs
mov
lea
xchg
fdivr
stos
ja
sub
repnz
bound
pushf
shl
div
nop
sbb
push
sub
loop
pop
or
add
in
push
dec
mov
mov
push
movs
stos
cmp
and
int3
div
push
ficomp
jb
retf
jmp
pop
xchg
pusha
(bad)
(bad)
test
mov
adc
jno
pop
mov
ret
mov
xchg
xchg
cli
dec
jl
js
(bad)
lock
sbb
movs
cmp
pop
dec
cmp
aam
(bad)
loopne
xchg
inc
icebp
js
mov
add
mov
mov
cmp
pop
bound
dec
outs
and
xor
cwde
test
push
sub
pusha
or
add
sti
adc
cwde
lods
ror
fnstcw
int3
js
jmp
imul
in
jge
inc
xor
les
or
pop
mov
pop
jl
scas
(bad)
out
push
idiv
add
jg
xor
aas
ficom
cmp
sti
jmp
jl
daa
movs
rol
outs
mov
shl
add
xchg
mov
mov
and
pusha
shl
fwait
jge
mov
xor
fs
mov
aaa
sbb
cdq
mov
ds
jne
repnz
std
lahf
jnp
(bad)
sub
and
pusha
add
les
mov
push
das
inc
mov
out
xchg
retf
and
aam
sub
lea
aaa
or
pushf
iret
push
jmp
xor
pop
xchg
out
repz
retf
loopne
ins
xor
sub
retf
mov
dec
arpl
loopne
rcl
fwait
imul
adc
call
retf
outs
ds
push
sub
mov
push
int
sub
into
mov
push
ret
xor
push
sub
push
stos
push
rcl
out
push
fwait
ins
sbb
lods
mov
and
cmp
pusha
or
jmp
shr
stos
aad
sub
pop
or
xchg
in
lds
rol
lahf
movs
pop
out
inc
pop
mov
(bad)
retf
cmp
fdivp
mov
pop
stos
push
js
pop
add
jb
push
ja
inc
jge
sbb
dec
pop
popf
jmp
jo
jg
rol
xor
jmp
add
fs
pushf
cs
mov
dec
les
pop
(bad)
call
pop
std
popf
cmps
push
push
mov
mov
dec
in
rcr
xor
push
xor
adc
mov
mov
xchg
xchg
pop
xor
repz
xchg
in
sub
mov
inc
aad
fild
mov
and
call
mov
jae
dec
or
leave
daa
dec
push
fwait
cs
idiv
lea
aas
out
jb
les
mov
jmp
rcr
cld
fnsave
aam
div
xor
mov
jecxz
repz
sub
sub
xchg
retf
fs
sub
add
xor
outs
xlat
add
jge
pop
or
jl
mul
shl
sub
or
loopne
mov
mov
add
pop
gs
leave
addr16
or
cli
lds
push
pop
push
ss
mov
pop
pop
add
adc
xlat
push
retf
mov
mov
cmps
std
mov
or
sti
add
push
add
(bad)
xchg
cmc
jb
sub
mov
test
sbb
cwde
int
(bad)
nop
push
lea
icebp
pushw
ins
fmul
jb
xor
mov
mov
mov
xchg
xor
or
lahf
ret
xor
int
daa
jp
mov
mov
lods
adc
mov
fild
shr
jno
push
jno
mov
cmp
popf
outs
pop
and
imul
aas
icebp
and
cwde
test
and
adc
and
out
sbb
sahf
leave
cmc
(bad)
xchg
retf
sbb
xor
xor
xor
int
cmps
and
fs
loope
aam
mov
xchg
or
stc
mov
add
je
inc
shl
mov
movs
push
stc
pop
jno
xchg
adc
push
dec
rcr
cli
adc
xor
mov
nop
mov
ret
jae
popa
repz
repz
mov
fsub
mov
pop
(bad)
outs
xchg
inc
xchg
sub
push
mov
fstp
stos
adc
cmp
call
inc
mov
push
rcl
fucomi
adc
(bad)
jae
into
repz
push
and
xchg
pop
fld
(bad)
enter
stos
aam
inc
pop
popf
gs
addr16
popf
inc
mov
sub
fcom
mov
pop
stos
int
cmp
popf
stos
out
rcl
sbb
sbb
cwde
enter
stos
xchg
xor
mov
call
outs
or
(bad)
jg
popf
or
cli
dec
les
cli
call
(bad)
and
lods
jb
mov
push
mov
sti
std
jmp
adc
mov
mov
mov
fdivrp
out
(bad)
addr16
pop
jmp
lahf
out
pop
add
xor
scas
out
jbe
xchg
jne
mov
out
adc
out
adc
in
fs
push
(bad)
iret
inc
ins
(bad)
mov
push
cmp
lods
and
inc
imul
cmc
ins
and
rep
imul
push
pusha
cli
mov
or
cmp
dec
test
fsub
call
pop
push
in
pop
mov
mov
jge
pop
fnsave
sbb
xchg
add
leave
lock
and
in
mov
(bad)
jmp
mov
lods
xchg
cdq
pop
aaa
aad
push
push
mov
shl
cwde
daa
xor
push
adc
loopne
pop
popf
push
stc
js
xchg
rcl
lds
(bad)
adc
fsub
int
popf
mov
dec
sub
jmp
das
aam
lods
sahf
sbb
adc
jo
cmp
jmp
loope
lods
cmps
cwde
fwait
icebp
shl
popa
(bad)
js
mov
sub
hlt
fsub
adc
aam
adc
call
shl
ss
xor
popf
sti
jae
add
xchg
leave
sti
mov
mov
cmp
inc
bound
push
mov
cli
pop
hlt
mov
ret
mov
call
xchg
imul
outs
push
enter
push
xor
icebp
sti
fstp
push
xor
or
mov
iret
add
(bad)
cld
(bad)
add
movs
sbb
push
pop
mov
xchg
jbe
ja
cmp
nop
in
jo
pop
xchg
jge
jmp
dec
pop
pop
mov
hlt
cs
ins
xor
dec
xchg
or
jecxz
add
jecxz
idiv
test
mov
and
clc
(bad)
mov
and
push
xor
mov
mov
(bad)
xor
xchg
pop
add
jmp
xchg
sahf
lock
pop
inc
or
cmp
cmp
neg
cmp
rcl
and
shl
adc
push
sahf
cwde
dec
and
jns
jge
mov
movs
ins
pop
out
mov
cdq
ja
jg
mov
rcl
pop
xchg
daa
mov
into
arpl
test
ja
test
clc
into
nop
mov
fidivr
and
pop
xchg
push
and
or
fsub
enter
cs
fst
aas
cmp
xchg
aas
xlat
pop
(bad)
sahf
daa
mov
jp
loopne
xchg
mov
imul
jmp
test
jmp
pop
mov
xchg
ret
dec
ss
push
fwait
ss
in
hlt
(bad)
mov
push
pop
adc
popf
repnz
xor
cwde
lock
dec
and
call
movs
pop
mov
in
pop
mov
das
and
(bad)
in
add
jp
gs
pop
sahf
inc
push
cmp
mov
or
jle
xchg
pop
in
ins
xchg
outs
push
ss
es
inc
rcl
inc
fcmovnbe
movs
jmp
jle
push
add
and
sub
rcr
in
xchg
(bad)
cmp
sbb
push
adc
adc
scas
out
mov
cmp
mov
push
xchg
add
sbb
cmp
xor
inc
out
cdq
in
adc
and
jecxz
mov
clc
mov
cmps
xchg
mov
inc
pop
js
xchg
add
out
lahf
jb
pop
imul
outs
loopne
hlt
popf
push
mov
add
adc
mov
pop
jne
adc
test
aam
or
pop
jae
ret
adc
bound
inc
sub
sub
pop
outs
lods
mov
(bad)
in
lea
cmps
lea
push
and
add
jbe
pop
pop
pop
cmc
add
pop
inc
push
mov
mov
cld
mov
outs
std
mov
inc
mov
jb
add
popa
mov
push
xchg
js
repz
sub
imul
jb
push
mov
dec
ins
ins
lea
add
add
jo
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
mov
mov
cmp
cmove
mov
jmp
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
sub
add
add
mov
add
shl
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
sub
mov
sub
mov
sub
add
mov
sub
sub
sub
add
mov
mov
mov
mov
sub
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
sub
mov
mov
sub
add
sub
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
movzx
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
sub
sub
mov
add
shl
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
add
add
add
add
sub
add
sub
sub
mov
mov
mov
mov
add
add
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movdqu
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
dec
jne
mov
mov
mov
and
cmp
ja
movdqu
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
and
mov
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
mov
movd
pshuflw
push
pshufd
pxor
pop
mov
and
cmp
ja
movdqu
movdqa
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
movdqa
pcmpeqw
pcmpeqw
movdqa
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
push
mov
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
movzx
mov
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
ret
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
ret
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
ret
inc
add
inc
and
pop
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
inc
add
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
les
enter
rol
inc
add
les
loopne
inc
add
les
sti
les
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
inc
add
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
int3
int3
int3
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
sub
jo
shl
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
cmp
jmp
mov
mov
push
mov
pop
push
mov
mov
mov
mov
jmp
sar
shl
ja
sub
shr
jmp
call
inc
add
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
dec
mov
shl
je
add
xchg
xchg
or
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
sti
push
or
push
daa
mov
pop
add
add
(bad)
xchg
neg
add
add
add
repz
rol
dec
jns
and
std
add
pop
jo
fs
test
add
xor
sbb
sti
aad
add
add
push
dec
rdtsc
inc
add
jle
pushf
das
pop
test
dec
jmp
add
mov
jo
jmp
hlt
test
icebp
add
sub
mov
je
movs
stos
mov
and
das
add
sub
sbb
(bad)
rol
add
xchg
clc
add
(bad)
cmp
push
jle
pushf
add
pusha
and
jmp
hlt
jnp
xchg
outs
repnz
mov
and
jp
add
lds
and
std
add
jg
jne
add
sub
jmp
add
xchg
cmp
add
add
push
ds
adc
add
mov
hlt
cmps
push
or
add
pop
in
add
jmp
call
add
sub
mov
add
(bad)
stos
add
add
mov
add
push
or
and
add
pop
jb
psllq
jg
add
push
add
aaa
inc
retf
jl
(bad)
pop
add
sub
nop
add
fldenv
les
jno
inc
and
je
jmp
mov
push
popa
lds
iret
mov
and
in
mov
test
ltr
in
clc
add
inc
and
push
mov
jmp
cmc
sbb
add
add
push
fstp
int
inc
and
jg
mul
add
mov
push
(bad)
scas
mov
(bad)
push
jle
(bad)
jecxz
add
nop
hlt
add
cli
pop
and
jo
and
cmp
add
push
add
std
add
mov
bts
das
add
or
mov
sub
mov
push
(bad)
sbb
add
jmp
fcmovne
call
fiadd
adc
test
xchg
add
test
and
add
arpl
mov
push
mov
jp
clc
mov
mov
retf
test
std
jle
loopne
(bad)
sub
and
and
xchg
jb
push
mov
push
(bad)
adc
xor
ret
and
add
jmp
fs
(bad)
add
das
mov
jb
add
out
pop
add
mov
sub
push
popa
cmp
mov
and
push
add
add
fs
test
add
mov
mov
stos
je
sbb
clc
call
in
pop
dec
jns
inc
and
test
add
add
add
popa
cmp
inc
and
je
jmp
mov
pop
test
add
sub
mov
and
jg
jmp
mov
mov
(bad)
jge
inc
inc
mov
and
ins
test
mov
aam
test
out
add
jno
push
fldenv
test
hlt
(bad)
add
add
sub
mov
and
paddq
mov
pushf
das
aam
test
add
push
cmp
out
add
icebp
call
(bad)
cmp
add
std
push
xor
or
or
nop
add
mov
sub
jmp
add
jmp
fild
ret
push
push
pop
mov
sbb
add
mov
pop
add
add
xchg
adc
mov
jmp
push
gs
add
mov
mov
cmp
cmovnp
arpl
jg
aas
add
cmp
add
jno
and
call
mov
mov
jbe
pop
mov
(bad)
fild
push
psubsw
jno
add
dec
cld
fiadd
mov
add
shl
cmove
test
in
ins
add
mov
test
push
arpl
lea
jp
call
mov
mov
mov
lods
push
pop
jmp
add
sub
bound
add
mov
push
mov
adc
popf
das
add
or
add
mov
sbb
enter
add
fiadd
add
rol
adc
xor
jno
mov
push
mov
add
mov
or
xlat
push
add
pop
push
arpl
mov
mov
mov
and
(bad)
mov
add
aaa
dec
and
adc
mov
es
jecxz
fldpi
nop
add
cmovne
mov
jmp
(bad)
pop
add
add
add
mov
mov
jmp
mov
aam
xor
add
nop
xor
arpl
into
add
jp
mov
and
add
add
mov
jno
push
fldenv
add
add
and
(bad)
jae
sbb
pushf
jg
icebp
mov
mov
add
add
(bad)
or
out
std
jle
out
pusha
fsub
rcl
in
clc
xchg
(bad)
sti
and
icebp
add
mov
addr16
pop
dec
add
push
ret
adc
in
mov
lods
add
add
xlat
das
add
ins
add
das
jmp
add
mov
icebp
mov
jmp
(bad)
cmp
std
jle
mov
mov
xor
(bad)
repz
popa
xchg
or
icebp
add
(bad)
fsubr
out
xchg
push
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
dec
xor
jns
shr
jmp
call
rol
ror
mov
ja
cmp
ror
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
inc
test
cmp
jle
rol
inc
ror
and
jmp
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
or
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
shl
rol
jo
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
jge
cmp
add
add
jmp
add
add
pop
sub
mov
mov
push
test
aam
call
stc
add
loop
cmps
adc
mov
jmp
mov
and
and
xor
pop
stc
pushf
add
call
adc
std
add
mov
mov
sub
mov
and
add
jg
cmp
and
xor
std
add
sub
dec
dec
(bad)
mov
mov
scas
or
add
jmp
mov
mov
mov
or
add
push
rol
es
add
add
or
pop
sbb
jne
call
add
je
add
mov
and
(bad)
iret
add
mov
test
xor
aad
(bad)
adc
add
call
mov
in
ins
xchg
repnz
cmovo
mov
das
xor
aad
test
add
add
jle
in
std
test
out
pushf
(bad)
jg
bound
jle
das
mov
add
xor
cwde
add
cwde
punpcklwd
add
add
add
add
inc
addr16
jle
das
sub
mov
paddusw
std
add
je
add
mov
sub
dec
test
iret
add
packuswb
add
mov
test
mov
sbb
pop
add
idiv
cwde
add
jne
add
mov
sub
push
test
add
add
add
test
je
test
add
(bad)
loop
xchg
jnp
test
add
add
test
xor
jmp
scas
push
adc
ins
xchg
repnz
punpckhdq
ins
jle
add
xor
sub
mov
test
test
stc
je
jno
pushf
add
mov
push
inc
jae
add
pop
add
pop
add
mov
enter
ret
jnp
push
or
movs
inc
add
add
mov
aam
fwait
xor
packuswb
add
xchg
and
add
xlat
add
(bad)
sbb
inc
jmp
aam
out
pushf
inc
xor
cs
test
in
add
fsubr
add
and
je
add
adc
inc
test
add
add
jne
add
das
mov
add
and
mov
jge
dec
fld
inc
and
je
add
addr16
mov
add
jle
add
iret
inc
xor
push
add
add
cmps
and
push
pusha
mov
or
std
je
shl
scas
daa
push
and
add
add
jle
sub
push
add
stos
mov
and
adc
mov
sahf
mov
je
adc
call
and
ins
dec
in
push
add
jmp
add
and
mov
and
mov
mov
and
add
cwde
add
dec
push
jmp
add
xchg
and
add
add
jmp
cmps
scas
add
cmp
das
add
add
retf
and
add
cmp
push
add
xchg
and
stc
add
mov
mov
(bad)
fmul
xchg
mov
scas
pop
xchg
popf
and
add
xchg
cmp
push
add
pop
xchg
and
and
call
std
(bad)
mov
add
addr16
and
das
outs
and
add
sub
in
push
add
cmc
mov
int3
add
fisub
(bad)
jno
or
std
je
mov
and
add
sub
jmp
add
aad
mov
add
sbb
add
std
dec
mov
add
push
add
pushf
(bad)
mov
outs
fs
add
add
inc
and
out
and
add
xor
pop
dec
and
call
mov
cli
and
push
add
jb
fxch
add
je
mov
mov
add
and
mov
mov
add
mov
mov
cmp
add
pop
add
and
(bad)
fsub
out
pushf
add
mov
or
add
add
sub
jmp
add
and
mov
and
sbb
add
add
call
mov
mov
pop
je
push
add
out
add
and
mov
cmps
js
cmp
sub
fld
and
cmp
jmp
add
add
std
adc
mov
and
iret
add
jecxz
xor
add
jle
in
push
add
scas
push
and
xor
and
xor
pop
inc
and
pushf
(bad)
iret
add
and
leave
shl
add
xchg
add
push
add
mov
mov
mov
mov
pushf
mov
daa
mov
add
mov
or
push
add
mov
add
adc
inc
fisttp
add
je
mov
call
aas
add
push
add
and
adc
push
add
je
sub
xchg
pop
dec
cwde
sbb
add
std
cmp
loope
retf
and
add
iret
or
mov
add
and
inc
test
call
jmp
mov
inc
out
mov
push
add
add
mov
add
stc
add
std
inc
mov
add
push
pushf
add
add
push
add
jmp
add
and
jle
das
mov
icebp
push
pusha
mov
or
stc
add
mov
and
add
pushf
(bad)
iret
mov
inc
nop
jmp
add
xchg
and
jle
add
and
jecxz
and
add
fstp
xchg
and
add
add
in
push
add
dec
xchg
and
add
add
adc
test
add
frstor
dec
mov
add
mov
pop
hlt
in
push
add
push
add
(bad)
iret
mov
push
scas
jp
imul
frstor
add
dec
and
fnsave
and
add
add
add
mov
mov
dec
push
add
iret
push
scas
mov
and
(bad)
imul
add
add
mov
adc
or
add
mov
mov
sahf
stc
inc
in
push
add
inc
add
mov
es
ja
sahf
push
pop
in
add
or
add
fld
je
add
xor
mov
add
add
(bad)
inc
mov
add
add
adc
fwait
(bad)
xchg
xor
add
scas
or
mov
mov
mov
(bad)
xor
add
add
das
sbb
in
push
add
addr16
jle
add
add
and
mov
rol
add
rol
add
mov
jo
and
std
je
pop
movs
mov
shl
rcl
frstor
mov
xor
push
pop
out
pushf
add
sbb
jecxz
mov
lea
push
pop
mov
sbb
pop
(bad)
xchg
loope
jno
sbb
jmp
push
mov
push
push
push
and
sub
jmp
call
inc
test
shl
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
shr
ja
rol
jmp
mov
push
mov
mov
push
mov
mov
mov
pop
mov
push
pop
push
jmp
ror
and
xor
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
sar
dec
js
or
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
inc
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
cmp
cli
mov
int
(bad)
pop
or
adc
mov
mul
add
add
add
and
add
add
add
mov
imul
test
add
sahf
mov
mov
sub
inc
test
inc
inc
imul
add
(bad)
cmp
dec
jo
jl
add
lahf
test
add
shr
mov
add
ins
(bad)
dec
add
push
inc
add
add
test
movs
jno
sub
mov
jg
inc
add
xor
aam
sub
mov
inc
jg
jmp
mov
add
mov
xor
add
imul
dec
add
bound
add
add
mov
add
jg
jmp
mov
and
add
sub
mov
movsx
mov
add
xchg
inc
inc
add
add
enter
and
jno
sbb
cdq
add
jl
mov
sub
mov
cmovne
add
inc
inc
mul
add
sub
mov
jg
jmp
retf
test
dec
add
stos
inc
adc
sbb
add
jg
jmp
mov
sub
mov
jg
jmp
mov
lods
lahf
or
nop
and
add
stos
jg
fdivr
add
add
or
test
add
jg
jmp
cli
test
cld
add
aaa
data16
mov
and
imul
cmp
or
inc
add
test
dec
jmp
jo
bswap
and
add
stos
add
mov
stc
mov
test
add
or
mov
mul
dec
add
or
xchg
leave
test
mov
add
add
or
in
add
test
jle
and
jno
pop
cmp
adc
inc
add
lahf
xor
add
add
loop
and
add
add
(bad)
and
add
add
adc
xchg
or
xchg
sub
aaa
dec
jg
and
mov
jmp
mov
mov
mov
cdq
cmp
add
clc
sub
pop
aaa
jmp
retf
nop
and
add
add
mov
and
xor
mov
add
scas
leave
adc
xor
jno
sub
mov
dec
(bad)
in
add
add
test
xchg
pop
rol
(bad)
out
xchg
add
retf
adc
add
add
add
mov
sub
mov
ud0
inc
adc
jmp
mov
stos
cld
xor
mov
nop
adc
inc
mul
mov
jl
ins
jle
add
mov
and
mov
add
aaa
add
add
jmp
mov
cld
add
mov
cmp
test
add
add
(bad)
add
retf
test
add
add
mov
movsx
add
bound
xchg
inc
inc
inc
add
xchg
or
sbb
aaa
add
inc
(bad)
es
add
inc
adc
mov
out
stos
int
mov
fst
(bad)
add
add
inc
add
test
std
arpl
jae
ins
pop
add
mov
add
dec
mov
cli
and
je
scas
call
cld
add
aaa
sub
leave
inc
and
sbb
mov
mov
jmp
mov
and
sbb
mov
and
clc
and
aaa
xor
fs
mov
ror
mov
and
jo
and
inc
add
movs
jno
dec
sbb
test
inc
pop
and
test
stos
imul
add
cld
xor
mov
jo
test
add
add
imul
cmc
add
add
add
rcr
(bad)
popf
inc
xchg
pop
ucomiss
push
mov
and
bound
pop
in
cdq
inc
call
test
mov
mov
ins
jnp
retf
in
mov
dec
push
(bad)
icebp
add
or
cld
add
sub
mov
sbb
jp
dec
add
clc
fs
test
jne
dec
je
jmp
inc
test
add
add
mov
and
clc
and
inc
push
add
mov
jo
rcl
mov
(bad)
daa
mov
add
retf
call
aam
sbb
inc
and
sub
cdq
jb
add
test
sbb
mov
inc
xor
test
mov
movs
add
add
sub
mov
(bad)
je
xchg
cwde
adc
mov
test
stos
add
inc
idiv
enter
adc
add
add
mov
retf
(bad)
and
add
add
mov
push
push
je
cdq
fiadd
mov
cs
jb
add
dec
mov
add
xchg
add
add
pop
pop
loopne
gs
sub
test
add
adc
ins
mov
add
out
and
mov
add
mov
jns
jmp
mov
lea
es
sub
mov
and
push
add
add
or
jne
mov
je
dec
push
pop
aaa
mov
sub
mov
and
je
jmp
inc
or
mov
pop
test
bound
add
jmp
sti
add
add
mov
das
xchg
and
jo
pop
mov
add
inc
sub
popf
adc
ins
das
and
xor
and
call
(bad)
dec
and
add
add
inc
add
arpl
add
add
pop
push
sbb
jmp
mov
(bad)
mov
or
add
add
add
and
add
aam
frstor
add
mov
scas
enter
leave
xchg
or
mov
ss
jo
add
jo
dec
add
add
add
xor
add
jmp
(bad)
dec
and
mov
sbb
movs
leave
xchg
inc
push
sbb
dec
jo
add
nop
cmp
pop
xor
xor
rol
dec
loop
xlat
and
inc
add
mov
jmp
repz
pop
mov
sbb
out
mov
add
imul
mov
add
jmp
jb
(bad)
inc
push
aaa
(bad)
and
mul
add
mov
add
cmp
and
add
add
jmp
xchg
xlat
pop
mov
add
add
mov
and
jo
pop
mov
jl
movzx
pusha
xor
and
xor
xor
xor
and
and
push
xchg
mov
add
add
add
jmp
xor
and
add
ins
xchg
rol
daa
inc
add
jae
jno
add
fidivr
mov
scas
(bad)
mov
add
ret
(bad)
ror
add
jmp
mov
sub
add
jmp
enter
fwait
mov
mov
and
add
imul
mov
add
add
push
push
inc
inc
add
mov
xor
add
aaa
mov
mov
mov
and
add
mov
(bad)
mov
add
add
mov
loopne
and
mov
inc
test
add
jno
(bad)
shl
add
imul
retf
cwde
xchg
or
adc
stc
mov
sar
adc
mov
mov
or
adc
add
push
jo
add
test
add
dec
jo
std
pop
(bad)
jmp
mov
pop
mov
arpl
adc
mov
mov
shl
call
cli
mov
add
add
outs
pusha
xchg
into
push
(bad)
dec
pop
dec
je
add
add
add
push
in
outs
push
mov
xchg
jg
add
inc
xor
mov
shl
add
add
stc
inc
pop
or
call
dec
mov
(bad)
cs
add
xchg
cmp
or
test
sbb
add
add
add
jl
test
add
add
aas
pop
arpl
mov
add
mov
mov
mov
rol
std
adc
pop
(bad)
out
sub
adc
movs
jno
sub
outs
js
add
and
stos
imul
push
repnz
call
(bad)
and
(bad)
enter
or
mov
mov
mov
sbb
add
test
add
add
cmp
add
cmp
dec
add
mov
std
cdq
stos
imul
(bad)
out
sub
add
add
ret
mov
sub
jo
ds
iret
push
or
add
xor
push
mov
sub
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
inc
inc
sub
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jae
cmp
add
shl
jmp
call
sar
inc
rol
jmp
push
pop
mov
mov
mov
push
mov
mov
push
mov
mov
jmp
shl
or
or
jge
cmp
add
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
int3
fist
mov
mov
mov
push
xor
add
and
and
add
out
and
mov
add
xchg
or
mov
inc
and
call
adc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
push
mov
pop
mov
push
mov
mov
push
mov
pop
push
mov
mov
jmp
shl
cmp
jns
dec
cmp
not
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
shl
not
js
sar
and
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
ror
jg
inc
sar
test
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
sub
mov
jmp
call
rol
add
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
mov
mov
je
hlt
or
and
add
add
mov
repnz
dec
dec
and
aaa
adc
mov
add
pop
and
xchg
and
mov
dec
mov
xchg
mov
mov
add
add
push
xchg
test
mov
mov
and
dec
add
push
ds
add
(bad)
xchg
and
mov
fisttp
inc
and
stos
inc
fldcw
mov
pop
inc
inc
stos
sbb
(bad)
ins
xchg
add
add
add
mov
retf
and
das
jb
add
int3
jmp
mov
cmp
jg
jmp
push
inc
pop
push
sub
je
and
fild
cmp
add
or
sbb
into
sub
add
jge
out
add
mov
sar
and
je
addr16
stc
add
mov
and
sub
mov
std
(bad)
sbb
fild
add
mov
mov
je
and
ret
or
stc
add
add
add
push
inc
and
sub
add
add
add
fistp
mov
cmps
fldln2
mov
outs
ror
enter
xchg
sbb
repnz
xchg
and
sub
push
inc
ret
add
(bad)
sbb
add
and
aad
movs
pop
hlt
mov
and
mov
ret
add
add
fadd
add
bswap
and
add
and
jae
and
jno
mov
loope
ffree
add
jmp
test
push
sub
mov
je
jmp
mov
and
aad
fdiv
pcmpeqd
add
ret
jge
out
inc
add
sub
inc
inc
and
inc
jl
add
repnz
and
add
mov
mov
mov
mov
and
dec
add
jne
(bad)
sar
retf
mov
sar
inc
and
jmp
call
mov
pop
je
dec
add
test
add
xchg
dec
and
jmp
(bad)
retf
and
xchg
ret
jmp
call
pop
dec
stos
aaa
add
add
jo
mov
add
jmp
and
xchg
(bad)
and
inc
cmc
jnp
or
add
mov
add
dec
mov
push
xchg
add
jg
rcr
cdq
pop
ret
cmp
dec
(bad)
jmp
sbb
and
add
and
std
add
xchg
and
xor
shr
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
sub
jg
add
rol
and
jmp
mov
push
mov
mov
mov
pop
mov
push
mov
pop
push
jmp
sar
xchg
shl
jbe
rol
xchg
jmp
call
dec
sub
xor
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xor
jno
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jecxz
test
out
jnp
ins
mov
sub
sub
add
pusha
test
add
test
add
jge
ins
sub
add
lods
fild
lahf
mov
dec
movs
add
mov
outs
add
jg
jmp
lahf
and
add
add
mov
test
popf
add
push
(bad)
xor
add
sub
out
sub
shl
into
add
(bad)
iret
add
add
adc
movs
popf
test
clc
add
push
enter
mov
setne
ins
add
outs
test
add
into
jg
mov
mov
das
test
dec
add
xchg
add
and
xchg
mov
arpl
and
add
jmp
mov
sub
mov
lgs
add
repz
mov
lock
add
add
mov
(bad)
(bad)
jmp
add
add
mov
and
add
push
sbb
xor
and
mov
add
sub
jnp
mov
inc
test
push
add
sub
mov
add
sbb
sub
add
jmp
mov
sub
add
popa
push
jns
add
add
ins
dec
mov
test
jmp
cmp
xor
push
jmp
mov
add
aaa
outs
movs
outs
ins
inc
jmp
add
xchg
add
and
add
sub
mov
sbb
repz
fild
add
sub
mov
mov
and
cmp
add
mov
setne
add
jnp
test
add
dec
sub
fstp
loop
movs
push
adc
add
mov
sub
xchg
enter
(bad)
mov
ins
add
dec
in
add
inc
les
imul
(bad)
push
add
jnp
add
and
push
xor
in
inc
and
psubsb
out
into
jmp
sbb
and
movs
add
sub
mov
jne
test
add
dec
outs
test
movs
add
add
fild
je
jmp
lahf
test
mov
fwait
dec
cmps
mov
(bad)
fldenv
add
pop
add
jnp
add
ins
mov
(bad)
fiadd
xchg
and
sub
movs
push
mov
popf
add
sub
mov
sub
jne
ins
dec
outs
test
push
add
(bad)
repnz
cdq
sbb
outs
pop
add
mov
mov
mov
inc
arpl
jb
add
jmp
inc
(bad)
and
add
add
test
and
add
add
inc
add
add
sbb
add
sbb
adc
stos
lea
je
jmp
mov
sub
mov
das
test
add
movs
inc
test
add
mov
inc
xor
pop
test
loope
aaa
add
ins
jmp
mov
idiv
jmp
out
lahf
inc
and
je
jae
push
xor
push
add
mov
test
inc
and
rol
jmp
and
xchg
and
jno
mov
add
add
push
fild
ins
dec
leave
inc
cmc
pop
mov
adc
add
add
add
add
(bad)
cmc
sbb
lea
sbb
jmp
push
aad
mov
hlt
and
in
add
push
mov
cmc
adc
into
js
add
xchg
rol
movs
out
adc
test
fidiv
in
es
push
add
add
add
adc
adc
pushf
xchg
adc
test
inc
ror
ins
mov
jmp
add
add
add
mov
add
mov
adc
add
clc
and
add
in
test
test
(bad)
jmp
movs
sar
add
ins
jmp
xor
adc
add
mov
into
jmp
and
popf
add
into
sub
mov
(bad)
(bad)
(bad)
out
(bad)
sub
add
add
jbe
jmp
push
movs
push
mov
inc
add
mov
test
add
out
jmp
loope
adc
add
add
inc
add
jmp
pushf
xor
add
add
scas
jnp
popf
(bad)
dec
adc
sub
jl
dec
add
fild
push
add
xchg
mov
and
add
mov
and
push
xor
add
movs
(bad)
outs
xchg
gs
stos
out
pop
sbb
add
cwde
xchg
and
add
popf
dec
pop
and
mov
add
mov
push
retf
add
fidivr
mov
sbb
stos
mov
and
mov
mov
xor
ja
and
mov
mov
mov
imul
xchg
pcmpgtw
sub
fsubr
leave
pop
add
mov
add
sar
dec
and
mov
and
cli
(bad)
jmp
gs
aas
test
add
jnp
add
test
add
inc
sub
gs
mov
lea
nop
pop
or
mov
adc
mov
or
push
mov
add
inc
add
and
add
add
dec
cwde
fwait
test
and
clc
add
add
sub
mov
add
jmp
add
add
jb
jmp
(bad)
adc
add
add
mov
xchg
xchg
xor
add
pop
sbb
add
mov
inc
jnp
xchg
ins
jp
inc
add
add
out
mov
mov
push
clc
je
and
push
add
or
sub
mov
mov
out
mov
shl
xchg
fild
add
mov
jae
mov
mov
adc
mov
and
mov
loop
aaa
dec
adc
(bad)
pusha
and
add
popa
fdiv
add
(bad)
clc
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
dec
not
dec
jmp
push
mov
pop
mov
mov
push
pop
push
mov
mov
mov
pop
push
pop
push
jmp
sar
shl
rol
jo
shr
or
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
xchg
xor
test
jmp
call
test
dec
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
inc
sar
xchg
js
cmp
sar
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
dec
or
out
add
mov
inc
add
call
mov
(bad)
imul
mov
sub
(bad)
and
jle
sub
jl
daa
jo
dec
and
jg
jmp
mov
jo
cmp
xor
mov
movq
add
jmp
sbb
sub
mov
mov
sub
ins
jle
add
inc
and
dec
loop
sahf
dec
mov
sahf
(bad)
xor
add
mov
add
inc
and
sub
jle
ja
cli
and
jl
add
mov
sub
out
inc
push
pop
jg
movs
add
and
int
push
idiv
(bad)
outs
add
add
je
add
inc
add
mov
inc
or
and
dec
jmp
mov
and
punpckhbw
and
jg
jmp
movs
push
and
push
ds
idiv
test
push
es
add
add
mov
loopne
mov
jg
cmps
loop
add
mov
jo
jns
cdq
pop
mov
mov
add
mov
pop
mov
jl
and
or
xor
jl
jmp
mov
jno
out
inc
imul
add
push
mov
ja
jns
sti
pop
mov
and
jg
sbb
lods
add
mov
fild
xchg
out
mov
and
pop
leave
test
add
jmp
fldenv
jo
out
and
xor
jg
jmp
mov
pop
jo
jp
or
mov
and
pop
leave
iret
xchg
jmp
(bad)
cli
add
add
jae
and
mov
ja
je
jmp
mov
sub
mov
in
loop
adc
jmp
movs
push
pop
jo
stos
mov
sub
inc
and
jnp
dec
cmc
add
add
cmp
lea
stos
inc
and
je
jmp
mov
jg
mov
inc
sbb
xor
es
jmp
mov
jecxz
sahf
dec
out
data16
pop
leave
cmp
out
add
movs
push
and
sub
jle
and
pop
mov
jmp
jmp
idiv
sub
mov
mov
popa
aad
and
add
dec
sar
and
jmp
mov
mov
or
mov
in
xor
xchg
add
pop
call
lods
mov
retf
add
mov
jmp
sahf
retf
add
sub
std
sub
rol
jbe
push
add
sbb
fwait
icebp
(bad)
jp
imul
and
jae
popf
xchg
ret
add
push
mov
add
jl
lahf
(bad)
stos
fild
(bad)
pop
mov
add
loopne
nop
add
ror
push
es
call
mov
xchg
retf
out
and
add
inc
scas
lods
stos
pop
and
jmp
cmp
add
fdivr
mov
rcl
or
sub
jmp
mov
sub
cmc
cmp
push
add
push
push
sbb
mov
jmp
mov
sbb
jl
and
ficom
mov
mov
hlt
add
mov
mov
mov
add
push
pop
js
adc
imul
add
push
and
call
mov
mov
sbb
lods
jmp
add
aaa
push
mov
mov
and
pushf
test
add
mov
fadd
mov
es
and
mov
and
(bad)
cmps
and
call
mov
mov
ins
(bad)
pushf
mov
push
add
js
adc
imul
fwait
(bad)
hlt
add
mov
mov
ror
fsubr
mov
stc
and
mov
test
and
call
(bad)
push
add
or
mov
and
sbb
les
aaa
and
call
movs
aam
push
add
inc
and
jl
shr
add
push
add
dec
and
cmc
cmp
leave
stc
repz
mov
mov
mov
mov
stos
adc
mov
sbb
repz
mov
fld
test
enter
clc
push
and
sbb
push
mov
mov
inc
mov
add
mov
mov
jl
sub
jmp
add
push
(bad)
js
adc
stos
pop
and
les
pop
nop
repz
mov
imul
fldcw
shr
push
add
adc
sbb
mov
call
test
and
mov
mov
mov
add
or
call
inc
(bad)
in
push
add
data16
mov
mov
les
sbb
mov
mov
mov
in
and
xchg
test
pop
inc
or
inc
inc
add
add
dec
add
jns
ror
xchg
(bad)
(bad)
call
rcl
mov
jbe
mov
add
mov
(bad)
je
in
push
add
lods
rol
and
mov
sub
jp
(bad)
call
in
push
push
and
sub
jmp
mov
push
mov
pop
mov
push
mov
push
mov
pop
push
mov
jmp
and
or
shl
jns
test
shl
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
and
jg
or
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
inc
mov
xor
jle
xchg
shl
not
jmp
call
ror
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
rol
jo
shr
xchg
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
add
test
sbb
add
add
sbb
add
add
mov
mov
mov
mov
leave
xchg
adc
bound
retf
add
lea
add
add
inc
ficomp
add
add
inc
add
fild
push
popf
(bad)
call
cld
jmp
inc
(bad)
add
test
add
imul
add
sbb
pushf
xchg
add
add
add
sub
cmps
test
jle
add
add
das
inc
pop
in
outs
sbb
add
add
add
jno
xchg
mov
inc
je
xor
sbb
add
and
in
add
pushf
jo
jle
test
sbb
add
(bad)
out
add
cmp
add
add
adc
ins
(bad)
add
fstp
scas
and
into
lods
or
mov
adc
push
push
pop
mov
adc
int3
push
das
add
ror
adc
add
push
sub
mov
jg
jmp
mov
sbb
mov
add
(bad)
cmp
push
jg
mov
ins
add
iret
add
mov
outs
repnz
cmp
nop
test
dec
add
ret
jle
push
test
add
(bad)
mov
add
and
add
sub
mov
add
(bad)
xchg
add
add
adc
bound
push
ins
cld
push
push
xchg
add
add
add
jmp
pop
test
nop
add
add
outs
cmp
loope
or
jg
or
stc
add
add
daa
pusha
jmp
add
sbb
mov
xor
adc
add
inc
jmp
mov
sub
ins
test
aaa
sbb
rcl
stos
push
add
jmp
mov
clc
add
adc
push
mov
add
(bad)
jno
fst
leave
add
lods
add
jmp
outs
sbb
sub
mov
add
(bad)
cmp
adc
bound
mov
sub
inc
test
pusha
xchg
mov
add
test
nop
arpl
add
aam
adc
in
jg
rol
add
add
and
add
add
adc
mov
xchg
and
add
das
jg
test
mov
jecxz
sub
mov
and
sbb
cmp
pop
push
add
das
push
nop
add
add
sub
and
mov
outs
jmp
mov
mov
add
repnz
lds
cmp
add
iret
rol
add
add
add
mov
loop
rol
rcr
fiadd
add
(bad)
xchg
add
add
jmp
add
cmp
and
add
pavgb
add
jmp
mov
repnz
xchg
add
(bad)
jge
add
push
add
add
pop
xor
iret
add
mov
add
push
int3
add
add
add
add
add
cmp
lods
mov
jg
outs
sbb
ror
sbb
repnz
test
arpl
dec
(bad)
mov
add
jmp
mov
nop
in
outs
ss
ins
sti
mov
je
das
bound
(bad)
push
add
add
add
add
inc
mov
sbb
mov
or
das
mov
add
add
test
rol
fld
cmp
mov
adc
sbb
add
add
fild
mov
push
sub
stc
jns
add
cmovno
add
jmp
mov
inc
out
pop
iret
mov
add
mov
jmp
mov
push
out
retf
mov
mov
iret
jmp
mov
das
jl
xchg
mov
adc
add
in
and
jg
jmp
mov
add
into
sub
ins
test
outs
sbb
fstp
jmp
mov
and
adc
add
and
inc
xchg
leave
pop
and
adc
add
(bad)
and
add
mov
add
mov
(bad)
inc
jbe
push
jmp
mov
sub
mov
sbb
(bad)
and
add
jmp
mov
sub
mov
xchg
cdq
movs
jmp
add
rol
repnz
add
add
fild
add
shl
inc
fld
setg
and
add
lods
in
outs
mov
add
mov
shr
jmp
(bad)
(bad)
std
add
add
mov
in
iret
add
loopne
add
add
add
cmp
mov
xchg
fiadd
das
inc
jle
mov
cmp
or
aas
and
lods
mov
inc
retf
stos
mov
or
add
add
bound
and
fst
or
mov
fsubr
add
lahf
in
cmp
sbb
sub
push
out
add
add
or
sbb
lods
add
pop
add
add
add
cmp
es
add
push
enter
nop
fst
and
dec
in
or
outs
nop
mov
das
sub
cmps
test
bound
or
mov
adc
jmp
mov
sub
mov
not
add
fbld
test
sbb
add
(bad)
les
add
add
mov
les
add
movaps
iret
add
pop
add
mov
sub
push
stos
dec
aad
das
add
jp
push
add
mov
loop
jge
iret
mov
adc
and
sbb
and
add
movs
in
xor
sub
pop
xor
and
add
test
add
add
add
test
nop
add
add
mov
mov
add
or
add
in
add
mov
inc
mov
out
mov
add
je
jmp
mov
sub
mov
je
jmp
mov
cmp
cli
xor
call
test
add
jmp
outs
test
inc
add
sub
mov
int3
adc
test
add
test
mov
rcl
addr16
mov
test
pop
add
das
mov
ins
cmp
pushf
and
lods
jmp
scas
ins
sbb
shl
sbb
add
nop
add
sahf
cmc
mov
pop
sahf
add
add
inc
daa
add
jmp
mov
and
into
add
inc
enter
mov
aas
xchg
add
add
stos
push
adc
das
(bad)
hlt
and
add
cmp
mov
pusha
test
sbb
jmp
push
stos
dec
nop
adc
das
sub
pop
std
pushf
and
add
sub
add
mov
and
add
add
sahf
lods
movs
add
push
dec
test
add
adc
fwait
iret
lods
in
test
call
cmp
sub
mov
and
js
bound
jge
add
retf
test
fadd
adc
test
lods
add
test
iret
outs
repnz
add
nop
add
sub
mov
and
jo
push
inc
fst
leave
mov
lods
in
test
nop
add
lea
sbb
mov
je
mov
adc
pop
add
ins
jg
sub
mov
movaps
into
add
adc
lahf
es
add
add
inc
and
jo
ins
push
add
repz
add
in
sub
mov
and
adc
cmp
add
(bad)
mov
add
jmp
add
cmp
mov
in
add
jmp
mov
sub
mov
rol
add
outs
mov
sub
xchg
inc
and
bts
xchg
das
add
and
fld
sub
mov
shr
leave
add
xchg
rol
mov
add
jmp
pop
dec
test
fcom
and
lahf
add
add
add
inc
add
and
orps
add
add
add
add
test
nop
add
add
mov
jb
stc
sbb
and
mov
adc
pop
and
ss
sbb
add
jmp
xor
adc
sub
mov
sub
outs
cmove
mov
and
sbb
add
cmp
mov
movs
adc
test
xchg
arpl
out
ins
ficom
add
mov
xchg
lods
in
xchg
pop
cmp
(bad)
push
aas
xchg
fisubr
add
mov
xchg
jmp
fimul
in
push
add
and
and
lea
add
add
jnp
sbb
add
mov
call
add
shl
add
mov
fwait
mov
add
rcr
add
push
push
retf
or
add
test
jbe
jns
outs
mov
jmp
mov
loope
and
add
bound
(bad)
pop
xor
add
and
cmp
stos
add
mov
inc
jmp
lods
add
add
ja
add
push
test
add
push
and
add
inc
js
in
push
add
into
add
shl
retf
(bad)
jmp
mov
add
add
rol
nop
mov
movs
add
add
mov
or
cmps
es
adc
lods
add
test
and
add
add
xchg
shl
sbb
add
push
enter
pushf
pop
adc
add
push
inc
or
and
add
retf
add
sbb
pop
sub
imul
les
mov
mov
add
jg
cld
std
movs
adc
and
lods
in
pusha
xchg
fdivr
sti
mov
add
loope
or
add
xchg
clc
add
call
test
rol
test
sbb
shr
lahf
add
push
dec
stos
mov
jmp
mov
mov
shl
sbb
sbb
das
and
push
add
mov
push
mov
add
add
into
lods
mov
inc
and
mov
mov
call
bound
inc
add
add
shl
int3
mov
xor
mov
add
cmp
cmove
loope
or
add
add
xchg
xchg
adc
add
not
add
mov
xchg
add
ffreep
mov
add
fild
add
(bad)
aam
test
adc
inc
(bad)
loopne
pop
and
add
nop
xchg
sbb
mov
scas
scas
sbb
jnp
xchg
lods
in
je
(bad)
out
and
mov
and
call
mov
mov
(bad)
adc
mov
push
mov
and
add
adc
fimul
repnz
and
add
out
mov
add
add
add
ret
imul
std
test
add
mov
inc
xor
in
mov
mov
dec
mov
mov
das
add
shr
and
add
adc
adc
into
adc
iret
outs
add
mov
aas
pushf
add
fild
push
inc
(bad)
cmp
inc
fadd
add
mov
call
mov
mov
mov
cmp
adc
enter
xchg
add
add
pop
and
add
add
cmp
add
add
mov
aas
xchg
cmp
add
add
add
add
call
add
jg
mov
and
add
inc
shl
add
sbb
or
add
add
(bad)
imul
add
bound
sbb
lods
in
sub
mov
mov
mov
pop
mov
and
call
mov
jmp
and
add
add
pop
fiadd
add
test
add
add
cmp
iret
add
ror
sbb
mov
aas
xchg
add
add
clc
add
fist
pushf
stos
and
add
jmp
push
test
adc
add
cmp
jmp
mov
mov
push
cmps
es
add
add
das
push
stos
and
jle
add
mov
inc
add
in
push
add
add
xor
and
jmp
xchg
sbb
add
inc
imul
jmp
sub
inc
in
fisttp
gs
and
add
add
lods
jmp
push
out
and
add
add
mov
sbb
mov
cmps
loope
add
inc
lods
mov
test
inc
add
retf
sahf
retf
scas
cdq
inc
add
daa
xchg
out
outs
mov
mov
cld
add
add
mov
test
outs
add
sbb
sbb
lea
mov
ret
mov
add
add
das
add
test
add
ret
outs
leave
cmp
test
add
mov
mov
add
in
push
add
add
stc
rol
and
add
into
add
retf
sbb
add
or
push
imul
shr
mov
add
add
or
push
add
jo
lods
add
outs
mov
mov
mov
loope
add
push
add
mov
mov
test
in
(bad)
call
and
in
xor
movs
add
idiv
inc
and
pop
iret
stc
addr16
add
test
push
aaa
rol
add
add
mov
add
push
add
dec
xor
iret
lods
in
xchg
and
add
add
mov
test
sbb
mov
add
dec
(bad)
push
or
jle
inc
mov
jmp
(bad)
loopne
add
add
add
sbb
mov
idiv
loopne
cli
or
add
mov
sub
arpl
push
stc
lea
push
and
adc
and
test
cmp
add
sub
mov
and
fistp
(bad)
adc
bound
lea
mov
mov
mov
push
hlt
or
add
push
ret
push
fwait
add
mov
sub
jmp
push
icebp
leave
mov
add
mov
out
add
inc
mov
repz
rcl
jmp
add
arpl
push
clc
mov
test
push
add
xor
mov
mov
rol
rcr
add
(bad)
lahf
sbb
jmp
inc
and
jmp
movs
test
inc
fst
ror
add
daa
or
add
imul
jl
daa
repnz
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
cmp
cmovne
mov
jmp
mov
mov
jmp
lea
imul
add
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
ret
lea
imul
add
mov
mov
mov
mov
mov
mov
call
sub
lea
imul
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
shl
jo
mov
shl
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
dec
jge
rol
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
jno
shl
and
jmp
call
cmp
not
and
add
jne
xchg
and
add
xchg
jmp
mov
mov
mov
mov
mov
push
pop
mov
mov
push
jmp
and
cmp
and
xchg
jge
sar
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fwait
sar
test
and
add
add
mov
popf
mov
add
cld
add
add
pop
pusha
mov
add
mov
(bad)
sbb
and
add
add
mov
movzx
and
add
add
add
loop
sub
mov
xor
sbb
cld
pop
shr
mov
mov
test
out
rol
adc
arpl
push
push
enter
mov
add
lods
jmp
mov
enter
fstp
add
add
add
aas
adc
icebp
jl
add
je
fcomp
inc
and
call
loop
inc
or
pop
mov
adc
sub
test
pop
add
cmp
cmc
fst
mov
mov
ror
rol
mov
dec
mov
arpl
mov
cmp
adc
sti
call
(bad)
jle
sbb
jmp
rol
push
arpl
mov
in
add
jg
cmp
add
popf
jp
inc
lock
sub
popf
test
sub
jg
enter
add
fsubr
pop
das
cdq
sub
add
pop
adc
and
mov
mov
das
nop
or
add
pop
repnz
pop
mov
mov
sbb
jae
mov
add
mov
sub
jmp
jg
pop
movs
adc
add
fild
mul
lods
cmp
add
jg
mov
add
mov
mov
popf
mov
xchg
(bad)
shl
pop
mov
das
test
fsubr
pop
add
mov
rdmsr
add
add
mov
test
and
add
lea
arpl
pmullw
pop
fild
mov
rcl
mov
pop
add
add
and
add
add
sub
mov
aad
add
add
movs
jmp
mov
imul
lods
adc
loope
mov
je
or
add
add
add
sub
js
add
arpl
jg
jmp
mov
fild
sub
mov
pop
test
stc
add
jbe
add
rcl
popf
sub
shl
lods
movs
adc
and
mov
imul
stos
test
lock
cld
je
call
xchg
test
js
je
jmp
pop
xchg
and
icebp
add
sub
mov
setnp
sub
pop
jmp
stos
test
add
pop
sub
jne
and
add
mov
test
mov
adc
mov
sub
mov
sub
(bad)
and
pop
fild
data16
add
sub
ins
test
cwde
add
add
test
add
popf
sbb
add
mov
ja
or
mov
push
(bad)
cld
add
add
mov
lock
add
sub
hlt
cld
fwait
jne
add
je
stc
sbb
and
arpl
sub
mov
push
push
dec
and
pop
icebp
add
add
mov
sub
mov
mov
mov
add
add
stos
rol
mov
add
add
add
lock
pop
sub
mov
add
add
stc
aad
mov
rcl
mov
sub
jmp
add
sub
pop
dec
rcr
sbb
sub
aas
inc
and
jb
lock
mov
push
pop
xchg
mov
sub
mov
and
push
(bad)
and
mov
std
add
add
test
add
add
loop
add
clc
add
mov
add
mov
mov
retf
inc
and
xchg
jle
add
jmp
lahf
test
sub
add
xor
push
inc
and
cs
enter
jmp
repz
sub
lahf
xchg
and
setg
add
and
xchg
add
sub
mov
push
test
add
jmp
xchg
test
in
add
rcr
sbb
mov
jg
jmp
popf
push
and
add
add
mov
pop
movntq
add
add
xchg
add
add
add
shr
and
jne
(bad)
aas
sbb
add
mov
sub
pop
push
and
je
jmp
mov
push
adc
add
mov
pop
pop
add
add
cld
pop
add
mov
xor
dec
pop
pop
popa
add
cdq
movs
adc
mov
inc
je
jbe
mov
setnp
add
cld
add
xor
mov
jp
xor
test
popa
add
add
and
add
sub
mov
push
test
jge
xchg
addr16
push
mov
sub
jmp
mov
add
add
pop
dec
lock
add
(bad)
cmp
je
xchg
fidivr
and
icebp
add
sub
jmp
add
adc
mov
imul
inc
and
adc
ins
mov
add
mov
and
xor
mov
sub
pop
push
test
add
pop
xor
mov
and
je
push
ss
add
popf
icebp
or
add
test
nop
(bad)
sub
add
imul
pop
xor
aas
cmp
test
add
cmp
add
add
xchg
or
pop
fild
mov
add
mov
mov
cmp
setne
and
cwde
or
add
add
add
jmp
mov
mov
cmps
xchg
and
sub
pop
sub
push
ficom
jge
jmp
xor
and
pop
rcl
mov
aad
bound
pop
icebp
test
cmc
mov
add
clc
xor
jb
int3
ret
enter
pop
push
mov
adc
inc
out
jmp
lds
add
add
test
and
pop
xchg
popa
fsub
add
cmp
mov
add
inc
add
add
and
lock
mov
repnz
add
add
popf
mov
add
push
add
add
test
aam
fldcw
mov
add
shl
xor
popf
add
int3
stos
add
mov
cmp
cmps
mov
add
adc
add
sar
pop
and
js
xor
and
add
add
sbb
mov
add
popf
mov
hlt
arpl
add
imul
add
mov
popf
data16
pop
add
loope
xlat
mov
(bad)
xor
cld
pop
cmp
mov
and
push
xor
popf
add
jmp
fild
mov
(bad)
jmp
dec
imul
mov
ins
mov
int
xchg
idiv
xchg
xchg
rcl
mov
pop
push
add
push
scas
loopne
mov
enter
sbb
pop
mov
mov
in
adc
adc
add
push
test
adc
add
and
add
add
out
jle
add
push
add
or
call
sub
movs
test
pop
add
loopne
and
add
and
sbb
add
jne
xchg
xchg
sub
mov
xor
xchg
hlt
or
add
mov
push
out
arpl
mov
xor
xchg
iret
add
imul
xchg
and
sbb
add
(bad)
pop
add
mov
mov
test
andnps
aad
add
mov
mov
popf
test
hlt
add
add
mov
xchg
or
xchg
mov
std
add
test
add
xchg
scas
out
add
xchg
hlt
in
icebp
add
mov
mov
mov
rol
push
pop
jmp
imul
jmp
jmp
data16
pop
mov
mov
inc
add
(bad)
mov
setb
call
mov
popf
loop
inc
add
or
call
sub
mov
mov
add
add
mov
lock
push
ror
icebp
and
cld
adc
push
add
das
add
add
mov
aaa
rol
sbb
in
mov
icebp
movs
shl
add
sub
add
sub
frstor
imul
xor
data16
mov
mov
and
adc
scas
adc
add
mov
and
fiadd
add
in
push
test
add
pop
add
popa
xor
add
adc
add
out
nop
or
pop
add
jmp
lea
inc
pop
pop
inc
mov
jmp
outs
xchg
and
adc
and
add
sbb
mov
sbb
add
mov
add
lods
cmp
in
add
add
xchg
add
add
add
sbb
ja
stc
xchg
popf
icebp
add
mov
mov
pop
add
mov
add
mov
add
div
fwait
adc
push
rcr
js
mov
pushf
shl
mov
mov
add
add
(bad)
adc
add
sbb
in
add
shl
add
mov
and
mov
hlt
hlt
adc
add
jge
jmp
out
add
mov
jle
movs
adc
out
frstor
add
add
sar
add
test
add
popa
push
cmp
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
and
xchg
jmp
call
sub
inc
not
xchg
js
mov
sub
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
shl
jmp
mov
mov
mov
pop
mov
push
mov
pop
push
mov
mov
mov
mov
push
jmp
xor
add
and
jbe
shr
mov
inc
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
mov
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
pop
mov
mov
js
push
js
add
add
add
das
mov
mov
push
popa
or
scas
add
shr
cmp
sub
push
xchg
cmp
add
and
add
adc
inc
mov
and
outs
push
inc
inc
or
sahf
loope
inc
or
add
in
cmp
and
add
and
mov
add
movs
and
enter
add
add
cmp
push
add
add
sub
xchg
add
pop
mov
cmp
mov
mov
and
and
mov
stos
stos
inc
getsec
pop
pop
inc
add
xchg
add
test
retf
imul
jl
push
dec
add
cmp
mov
add
fs
add
outs
popf
or
and
inc
fild
jg
jmp
jecxz
and
add
add
mov
jle
xchg
add
(bad)
mov
and
and
add
das
mov
xchg
dec
test
mov
pop
add
out
add
fcom
push
adc
jp
and
adc
stos
add
inc
mov
and
fiadd
scas
sub
mov
add
push
inc
add
fiadd
cmp
xor
sub
mov
movs
(bad)
and
add
mov
test
add
(bad)
aas
pop
test
add
out
je
rcr
push
xchg
popf
mov
add
and
addr16
mov
add
outs
add
add
dec
or
add
sub
js
and
add
sub
add
adc
add
add
sub
test
and
xchg
add
and
add
inc
push
sub
add
add
mov
xchg
nop
add
jmp
aad
pop
add
movs
cld
mov
xsave
xchg
jmp
mov
dec
add
add
addr16
sbb
mov
push
add
jmp
mov
in
xor
lock
and
and
dec
push
mov
push
add
mov
sub
mov
pop
sbb
sbb
and
mov
mov
mov
and
add
add
(bad)
and
fld
add
out
icebp
sub
mov
and
and
pop
(bad)
mov
add
stos
mov
push
mov
addr16
dec
and
cmp
mov
sub
mov
je
push
sbb
and
imul
xchg
fisttp
icebp
cmp
jmp
and
addr16
xlat
imul
add
scas
addr16
add
inc
(bad)
call
add
add
xlat
cmps
xor
add
add
dec
and
add
add
add
(bad)
test
inc
fild
mov
push
out
mov
sub
mov
jg
jmp
enter
mov
or
dec
loope
and
and
scas
je
sar
test
pop
add
sub
mov
and
add
mov
xchg
fild
add
lahf
out
icebp
sub
push
test
sub
lods
or
add
dec
scas
add
mov
and
mov
adc
lods
mov
addr16
and
add
sahf
add
test
add
icebp
sub
mov
and
add
or
adc
add
fadd
add
push
mov
jg
inc
add
add
sahf
add
mov
test
cmp
mov
add
jmp
test
xor
les
mov
bswap
clc
add
add
add
push
add
xor
js
lahf
pop
add
add
test
add
(bad)
and
mov
dec
fisttp
les
push
add
jmp
mov
cmp
retf
fisttp
and
stos
inc
jmp
mov
stos
out
push
ror
push
add
cmp
add
add
mov
and
rol
comiss
cmps
add
inc
or
push
xchg
mov
mov
cmp
jg
jmp
mov
adc
dec
mov
xadd
add
loop
fld
add
scas
sub
mov
xchg
xchg
stos
jge
and
stos
mov
sub
mov
and
add
xchg
(bad)
fadd
add
jmp
jecxz
dec
add
add
cld
lods
int
addr16
sahf
mov
and
and
add
adc
mov
and
add
je
inc
push
add
sub
lahf
add
sub
push
sbb
add
and
and
add
add
sub
mov
dec
test
add
inc
add
and
cmp
xchg
sbb
pop
ss
and
pop
and
sbb
add
add
stos
add
inc
xor
inc
idiv
sub
sahf
add
inc
xlat
add
mov
inc
sub
mov
bswap
clc
scas
add
sub
and
lahf
out
add
mov
mov
je
sub
test
stos
test
xchg
loope
push
test
cwde
xchg
add
add
test
add
jp
mov
mov
mov
imul
lock
sub
lods
sbb
sub
loopne
stos
inc
push
add
and
(bad)
and
fisubr
enter
mov
test
pop
icebp
cmp
add
add
add
mov
movs
(bad)
mov
inc
mov
fs
scas
inc
jecxz
fimul
inc
mov
cmp
add
fs
add
in
outs
retf
cld
and
dec
or
inc
fild
jmp
mov
and
and
xor
je
jle
add
movs
stos
stos
inc
sub
mov
mov
fild
scas
add
sub
(bad)
(bad)
retf
inc
mov
add
add
inc
add
mov
sub
es
dec
xor
test
add
cmp
pushf
add
sub
xlat
inc
pop
dec
iret
das
in
add
add
add
jmp
sub
push
(bad)
push
add
add
mov
pop
add
sub
mov
and
ucomiss
add
lods
mov
add
test
fisubr
dec
ror
test
mov
sbb
cmp
add
aam
inc
lock
xchg
add
mov
jmp
mov
test
in
add
stos
sub
mov
dec
ins
call
and
scas
add
cmp
mov
and
movs
mov
mov
and
add
xlat
xchg
in
push
(bad)
lahf
add
pop
jle
cmp
or
adc
add
xor
inc
push
dec
add
sar
or
push
(bad)
jmp
jo
popf
add
add
mov
add
mov
add
inc
add
xor
add
mov
jmp
mov
mov
jmp
out
int3
in
ss
jl
jo
add
add
add
loope
mov
and
add
mov
retf
jmp
(bad)
cmps
rol
add
fld
out
xchg
mov
test
adc
out
ror
add
loope
bound
add
scas
jmp
push
retf
in
sbb
add
pop
and
and
add
add
stos
push
loopne
test
nop/reserved
add
cdq
cmp
mov
and
add
xor
jno
stos
add
mov
stos
shl
inc
add
cmp
addr16
mov
ja
test
cmp
mov
mov
pop
popf
shr
add
(bad)
vmwrite
add
xor
stos
dec
rcr
out
push
loop
gs
mov
add
add
test
push
push
add
in
pop
mov
mov
jmp
imul
sahf
out
icebp
xor
mov
cld
fld
stos
stos
mov
data16
(bad)
dec
fld
scas
sahf
add
cmp
add
and
int
iret
retw
pcmpgtd
mov
jmp
fisttp
and
lahf
out
icebp
mov
adc
sub
mov
ror
inc
xor
inc
fcomp
add
add
pcmpgtd
xor
cmc
data16
and
sub
inc
dec
and
mov
fwait
inc
loope
add
(bad)
in
and
imul
daa
mov
ja
add
(bad)
retf
test
pushf
and
adc
add
mov
into
sub
dec
inc
add
mov
mov
js
add
pushf
and
and
ins
and
add
cmp
mov
cmps
sbb
pushf
cmp
ins
and
loopne
sub
outs
data16
and
mov
cmps
mov
retf
mov
fst
push
aad
sub
mov
movs
hlt
or
mov
inc
lods
retf
cs
xchg
fst
add
inc
xchg
add
cmp
ins
jmp
push
mov
mov
pslld
sub
stc
add
es
dec
add
mov
add
add
mov
add
aaa
xor
data16
cmp
dec
fimul
and
cs
inc
das
push
ror
mov
mov
add
jmp
ins
pop
pushf
sub
add
inc
mov
call
shl
and
out
add
mov
jmp
push
sbb
push
ret
jmp
mov
data16
mov
ins
add
mov
mov
mov
mov
pop
sbb
stos
add
enter
repz
inc
dec
popa
sub
xor
jecxz
mov
clc
sbb
dec
push
popf
data16
and
or
cmp
sub
xchg
or
and
dec
xor
dec
mov
(bad)
adc
imul
push
popa
adc
or
adc
sbb
inc
gs
pop
pop
fsub
(bad)
cli
pop
data16
movzx
jmp
and
shl
push
adc
ins
pop
and
add
stos
mov
add
add
add
mov
loopne
idiv
and
jecxz
dec
sub
jmp
xchg
xor
sti
or
data16
xchg
and
and
cmps
mov
movzx
add
and
mov
pushf
add
add
test
add
retf
inc
jmp
call
push
add
fild
cmps
jle
add
add
fiadd
jge
add
jmp
std
outs
xchg
xchg
shufps
scas
add
jns
add
push
push
in
mov
mov
pop
and
add
add
mov
xchg
scas
add
stos
sub
mov
xchg
sbb
push
out
push
sbb
and
and
add
test
push
mov
enter
xchg
add
scas
add
in
mov
gs
cmp
and
cmp
mov
add
add
das
and
add
inc
adc
push
and
mov
lds
and
add
retf
(bad)
add
scas
mov
mov
sbb
add
jge
pop
dec
add
test
and
jns
lods
add
add
mov
mov
call
rol
add
add
add
add
mov
mov
inc
add
add
cmps
and
add
cmp
add
add
test
xchg
add
add
and
adc
stos
cmp
xchg
inc
mov
mov
in
and
and
add
mov
mov
mov
mov
inc
add
stos
add
mov
xor
inc
xor
push
call
mov
leave
pop
xchg
pcmpgtd
mov
mov
jle
adc
sar
and
data16
dec
and
or
int
dec
and
or
and
mov
mov
mov
out
xor
stos
and
inc
pop
call
add
add
adc
pop
call
mov
sub
mov
cmp
xchg
ficomp
mov
dec
pop
add
mov
stos
mov
inc
xchg
mov
scas
push
enter
(bad)
xor
data16
icebp
xor
fmul
mov
and
mov
and
push
and
pop
out
mov
inc
mov
stos
add
test
add
add
(bad)
retf
stos
aad
jmp
std
aas
and
pushf
and
xchg
sub
stos
stos
inc
jg
and
inc
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
movsx
mov
and
xor
or
mov
sub
add
add
mov
mov
shl
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
mov
ror
cmp
inc
inc
jns
cmp
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
or
test
xor
jmp
mov
push
pop
mov
push
mov
mov
mov
mov
mov
push
mov
jmp
and
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
or
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
pop
push
push
jmp
mov
pop
daa
mov
paddb
and
add
cdq
push
and
sub
dec
dec
movs
xchg
xor
add
fadd
add
mov
sub
push
inc
and
sahf
pop
sbb
add
call
cmc
sbb
stos
mov
sbb
inc
cs
or
mov
pop
div
sub
inc
and
seta
mov
add
mov
and
popa
sbb
inc
fstp
mov
stos
lahf
push
inc
add
push
xlat
mov
and
(bad)
sbb
mov
xchg
push
xor
and
stc
data16
jmp
scas
mov
fbld
sbb
inc
inc
add
jmp
mov
sub
mov
sahf
push
and
jge
addr16
and
sub
mov
call
inc
jmp
jmp
fcom
mov
xchg
js
dec
call
cld
sbb
fs
rcl
push
dec
dec
and
inc
aam
add
leave
int3
sbb
sbb
push
and
sete
mov
jae
add
lea
jb
push
in
mov
ja
rol
sbb
and
mov
mov
in
xchg
aas
jge
outs
add
add
cdq
(bad)
in
ds
jge
shl
ror
add
xchg
xchg
mov
in
mov
dec
clc
push
cdq
je
push
xlat
mov
inc
add
push
ret
sbb
add
and
xor
mov
inc
add
xchg
pop
jl
add
ret
and
rcr
and
jl
mov
jae
and
mov
call
(bad)
mov
sub
mov
add
mov
inc
js
xchg
xlat
add
cmps
mov
mov
call
rcr
dec
pop
ret
test
push
fbld
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
not
jl
xchg
inc
sar
inc
xchg
jmp
mov
mov
mov
mov
push
mov
mov
push
pop
mov
pop
mov
push
ret
test
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
shl
jns
add
mov
jmp
call
inc
sar
shl
je
rol
shr
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
jns
mov
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
dec
adc
inc
push
inc
and
jno
sub
and
gs
and
push
imul
movs
pop
add
mov
cmp
inc
push
loop
mov
fs
ret
sub
dec
inc
and
push
dec
and
cli
add
add
push
push
add
mov
and
imul
icebp
lods
inc
jle
bsr
add
dec
int3
mul
sub
mov
jge
jmp
mov
loop
dec
mov
enter
rol
inc
add
add
and
inc
and
sub
mov
xchg
ins
add
jmp
mov
sub
mov
dec
jge
mov
mov
mov
jecxz
inc
and
jg
jmp
mov
and
sub
mov
movzx
pop
dec
inc
add
sbb
jp
pop
pop
fmul
rol
test
movs
add
psrlw
sub
fld
jg
jmp
sub
sub
cmp
adc
dec
xor
stc
add
mov
sub
jmp
push
inc
ins
add
add
and
and
dec
pop
icebp
test
add
jmp
ret
inc
(bad)
pusha
sub
shl
and
pand
inc
ins
and
rol
xchg
pop
jecxz
sub
psubusw
pop
sbb
mov
sub
rol
jl
add
add
add
in
mov
xor
pop
fst
mov
sub
mov
add
jb
xchg
fadd
mov
add
jmp
mov
pusha
sub
mov
pop
je
int
add
pusha
(bad)
mov
mov
aam
push
je
repz
add
add
test
xor
or
push
and
jns
cwde
push
dec
inc
test
add
add
and
adc
mov
and
je
jmp
mov
arpl
loope
mov
or
add
dec
add
clc
jmp
dec
pop
push
ds
and
xchg
jo
add
int
and
and
add
in
inc
and
jmp
call
ins
mov
add
add
mov
clc
add
and
rol
call
iret
and
push
adc
mov
mov
rcr
inc
and
call
add
sbb
icebp
retf
or
lods
and
xor
jle
cmovb
scas
mov
(bad)
call
sub
sub
and
cmp
(bad)
std
sbb
int
jbe
jne
pop
test
(bad)
int
and
scas
dec
and
mov
(bad)
out
and
in
mov
jecxz
sub
add
inc
and
jmp
mov
mov
pop
shl
add
add
sbb
cmp
cmp
pop
ins
add
mov
dec
jo
dec
inc
lea
add
pop
ret
mov
in
push
cld
shr
inc
mov
add
xor
ins
push
push
add
mov
mov
stos
add
out
out
ins
adc
push
inc
cs
add
cmp
and
rol
mov
xchg
(bad)
cld
(bad)
dec
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
and
shl
and
xor
jl
shr
xchg
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
cmp
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
cmp
ja
test
or
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
cmp
shl
jmp
mov
push
mov
mov
pop
mov
mov
push
jmp
xchg
rol
ror
cmp
jl
xchg
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
or
call
mov
add
pop
jge
add
and
add
mov
push
test
adc
add
add
lds
mov
movs
sub
sbb
and
add
jo
mov
aad
add
add
mov
psubsw
mov
jl
test
add
jns
and
add
stc
(bad)
(bad)
sahf
fucom
add
add
mov
test
retf
(bad)
jb
fnstcw
cld
add
jle
mov
jmp
or
add
or
(bad)
jg
jmp
mov
mov
add
and
and
add
add
shl
sbb
pop
push
add
mov
ror
sub
fninit
jg
jmp
mov
jmp
mov
jae
add
je
inc
push
inc
add
mov
dec
push
stos
lock
add
add
add
test
and
cld
xchg
in
les
je
jmp
mov
imul
xor
pop
ins
cmp
add
lmsw
mov
test
add
fcmovne
sbb
(bad)
add
retf
test
pop
add
inc
cmps
add
and
pop
stos
inc
sub
out
or
jle
add
gs
push
test
out
js
sub
sbb
ud0
call
add
cld
and
pop
jmp
arpl
in
scas
(bad)
sbb
stc
add
push
test
add
add
sub
sbb
jg
int3
sbb
add
add
inc
repz
add
jmp
inc
mov
ucomiss
fild
add
mov
jl
mov
sub
dec
test
les
mov
add
js
mov
mov
enter
inc
mov
orps
add
jecxz
add
add
add
add
sbb
add
stos
dec
leave
aad
add
addr16
test
fucom
fwait
cmp
mov
mov
add
add
add
mov
lahf
jo
jg
or
shl
js
imul
mov
sub
push
and
add
mov
pop
mov
add
hlt
mov
jo
pushf
jmp
lods
inc
add
jmp
jmp
outs
test
sub
push
addr16
js
xchg
retf
(bad)
nop
add
test
jo
add
adc
and
add
push
sub
iret
cld
inc
sub
add
out
push
movs
sbb
add
mov
popa
icebp
stc
fdecstp
adc
cmc
mov
xchg
xor
add
and
jmp
(bad)
call
es
fwait
mov
add
mov
(bad)
or
cmps
sbb
xchg
add
mov
gs
push
test
cwde
jecxz
lds
sbb
xchg
add
adc
and
add
add
iret
cld
inc
sbb
add
test
add
mov
inc
hlt
add
stc
sub
dec
cld
and
mov
xchg
retf
mov
jmp
mov
inc
sub
pop
test
sub
add
sbb
sbb
add
add
mov
jne
mov
cs
jg
mov
add
stos
into
test
add
les
in
cmps
mov
cmp
xchg
in
ucomiss
add
gs
mov
into
inc
aam
cmps
mov
cvttps2pi
add
add
add
mov
add
mov
int
jg
jmp
outs
and
stc
sub
mov
in
test
add
js
mov
sub
add
pop
add
aam
iret
push
int3
inc
and
dec
test
add
jmp
add
add
sub
mov
aam
pop
sar
xchg
les
add
lahf
add
mov
adc
test
add
add
ins
add
add
sbb
sub
mov
and
je
mov
pop
mov
cmp
push
fs
fst
push
add
add
sbb
sub
mov
cmps
add
stc
jmp
mov
sar
sub
mov
push
pop
nop
test
sbb
stos
jmp
int
inc
add
add
(bad)
into
push
pop
imul
and
scas
test
add
sbb
add
add
lds
mov
sbb
and
je
jmp
and
sub
xchg
inc
stos
push
cdq
test
loope
mov
fst
and
add
add
cmp
clc
sbb
ret
add
add
xchg
add
add
push
stos
push
mov
int
pop
or
add
jmp
out
je
add
fld
sub
mov
inc
je
sub
mov
and
add
stos
sub
icebp
and
add
outs
and
fcmovne
add
into
mov
mov
cs
mov
sub
iret
inc
pop
cmp
pop
movs
sbb
jmp
mov
popa
icebp
stc
fdecstp
dec
scas
mov
xor
test
add
jmp
movs
test
test
and
mov
jne
test
jns
jmpw
add
bound
cmp
add
add
ins
inc
test
test
add
mov
test
out
js
sub
mov
sbb
call
stos
inc
int
and
add
xchg
retf
(bad)
jecxz
add
xchg
stc
(bad)
add
sub
mov
je
jmp
sbb
add
test
sub
mov
bound
shr
add
jmp
sbb
add
cdq
mov
mov
packuswb
add
xchg
mov
sub
mov
and
xadd
sbb
jmp
sbb
add
sub
ins
in
loopne
pop
dec
jecxz
(bad)
add
js
das
nop
les
adc
or
fsub
scas
out
pop
and
and
inc
js
out
add
push
ins
test
xor
add
add
and
shl
cmp
mov
add
inc
pushf
mov
add
in
add
dec
inc
mov
das
test
xchg
add
dec
aam
gs
mov
jp
add
outs
hlt
mov
into
add
mov
add
mov
scas
add
add
mov
and
add
in
mov
push
iret
(bad)
mov
aas
inc
mov
mov
push
sbb
test
add
pop
lahf
push
popa
push
jns
add
xchg
ret
and
push
pushf
mov
add
mov
fadd
add
dec
add
jecxz
cwde
sbb
mov
and
pop
push
stos
test
ins
and
add
add
sub
sbb
mov
mov
jmp
mov
mov
fcomp
jecxz
or
lds
mov
add
into
test
in
push
jno
pop
xchg
cs
add
inc
mov
pop
in
mov
and
call
mov
pop
(bad)
or
lock
test
and
add
jecxz
pop
add
sub
xchg
fmulp
mov
or
add
add
adc
test
add
jmp
mov
test
add
ds
fidivr
or
inc
or
or
add
add
adc
test
add
add
add
ins
and
cmps
sbb
arpl
add
mov
bound
add
pusha
xchg
jo
mov
add
cs
mov
test
pusha
test
jmp
outs
test
jo
and
jne
(bad)
(bad)
mov
mov
xchg
or
xchg
add
mov
scas
xchg
mov
push
sbb
fs
mov
jmp
mov
mov
mov
and
lds
add
hlt
and
add
add
pop
add
mov
lea
hlt
es
pop
cmp
and
sbb
add
push
fmul
add
call
mov
(bad)
(bad)
and
mov
add
or
cmp
pop
xchg
out
and
call
mov
(bad)
cld
and
add
add
daa
jl
mov
add
mov
les
add
pop
(bad)
jmp
add
daa
push
ficomp
cs
sub
or
lahf
add
pop
push
stos
mov
add
ret
das
jb
movs
jmp
and
add
add
(bad)
call
and
mov
push
jmpw
stc
add
test
jmp
js
add
cmc
push
(bad)
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
add
jg
inc
cmp
sub
jmp
mov
mov
mov
pop
mov
mov
mov
pop
mov
mov
mov
push
pop
mov
mov
mov
pop
push
ret
ror
cmp
dec
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
mov
dec
jmp
call
mov
sub
dec
and
jno
shl
sar
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ror
and
(bad)
push
inc
call
push
and
mov
adc
and
dec
and
sbb
and
mov
mov
mov
pusha
cmp
and
and
pop
add
sub
cmp
mov
push
mov
mov
mov
ins
in
push
icebp
(bad)
dec
gs
pop
mov
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
and
rol
inc
jns
shl
inc
jmp
call
add
xor
jno
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
add
shl
jbe
xor
xchg
xchg
jmp
push
mov
mov
mov
mov
mov
mov
mov
push
pop
mov
push
mov
push
ret
not
or
cmp
jl
add
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
sar
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
mov
and
mov
mov
and
mov
sub
mov
cdq
shl
(bad)
dec
mov
inc
sub
mov
popf
jg
ins
add
arpl
mov
sub
pop
mov
out
test
adc
jae
repnz
sub
sub
inc
inc
and
inc
(bad)
mov
daa
add
imul
cmp
shl
jg
call
push
cdq
test
daa
add
(bad)
fld
imul
mov
and
sti
out
pextrw
push
(bad)
outs
dec
add
add
pop
test
(bad)
sub
cmp
test
add
jmp
mov
sub
and
jg
jmp
jbe
and
sub
xor
inc
in
add
ins
retf
daa
mov
sub
mov
xchg
test
not
test
mov
ret
inc
and
je
jmp
mov
je
repnz
cmc
add
and
sbb
add
cld
add
push
pop
and
cwde
and
add
inc
daa
add
push
jmp
mov
adc
add
sahf
inc
fldenv
sub
mov
cmovns
add
add
arpl
sub
(bad)
inc
xchg
push
mov
stos
add
or
add
cmove
ror
inc
pop
sbb
test
add
test
add
add
cmp
retf
push
sbb
mov
sub
add
ror
add
jns
pushf
or
jmp
add
xchg
cmp
lods
xchg
rol
jae
push
and
jmp
mov
mov
mov
jae
ret
push
ror
add
add
xchg
mov
sub
imul
add
add
mov
pop
ins
xor
push
leave
call
mov
adc
je
fs
mov
cmp
sbb
dec
repnz
cld
rcl
test
rol
mov
and
sub
repz
and
add
mov
lods
dec
and
add
loop
and
sub
fs
les
mov
fs
or
jo
test
add
add
add
rol
jnp
add
add
sub
rol
mov
nop
adc
and
hlt
imul
mov
and
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
cmp
jbe
shl
cmp
test
jmp
call
mov
jno
inc
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
mov
jmp
mov
mov
mov
push
mov
pop
mov
push
ret
shr
test
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
sar
not
ja
not
and
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
ins
or
mov
xor
in
add
and
jmp
and
scas
add
cmp
add
add
add
or
ret
xor
mov
add
js
sub
sti
movs
add
mov
mov
mov
call
mov
mov
and
mov
mov
call
mov
add
jmp
je
imul
add
retf
mov
inc
and
sub
xor
cwde
add
add
mov
sub
je
lods
add
mov
sahf
test
leave
iret
add
test
add
xor
rol
mov
sahf
mov
add
jg
jmp
das
test
ja
cmp
mov
cvtpi2ps
add
add
sub
cmps
add
add
xchg
cmp
iret
test
imul
repz
ud2
cli
xor
test
and
iret
sub
sub
or
jg
push
add
add
mov
leave
shl
xor
and
add
cli
movzx
dec
add
jmp
mov
pop
mov
jno
mov
mov
maskmovq
or
add
add
jmp
add
sub
jae
jge
add
and
inc
fisttp
iret
add
add
mov
add
sub
mov
mov
maskmovq
mul
movs
add
add
and
add
add
mov
bsf
add
leave
add
retf
iret
mov
sub
mov
jg
add
movs
add
mov
and
add
je
inc
outs
push
ins
rol
jg
movaps
cmps
test
test
mov
xor
rcl
add
add
add
add
add
sub
outs
lods
and
xor
or
add
add
add
jp
add
mov
and
and
add
inc
dec
and
add
jg
test
mov
mov
add
js
in
add
and
jmp
into
pop
sub
pop
add
inc
add
cmps
test
out
shl
mov
mov
add
add
retf
iret
mov
ret
add
sub
xor
ror
and
add
popf
loope
add
daa
jle
add
add
outs
lods
push
mov
add
lods
mov
js
push
sub
add
arpl
fidiv
test
movs
out
movs
cmp
pop
add
js
(bad)
je
cmp
push
xchg
add
add
pop
leave
add
add
inc
and
add
add
mov
mov
ja
sbb
mov
outs
push
je
add
sub
jae
jge
retf
stos
imul
cmps
test
add
add
push
jge
add
mov
mov
jle
or
add
sub
dec
and
add
movs
sub
mov
sbb
jmp
data16
shl
xor
and
and
add
test
bswap
add
push
out
sub
mov
mov
cmps
test
and
jecxz
cmp
xor
inc
test
add
movs
mov
test
pop
add
cld
test
add
mov
movs
and
add
retf
shr
add
add
add
out
mov
add
mov
add
movs
in
iret
or
movs
add
mov
je
das
mov
test
out
es
jmp
test
add
pop
push
add
mov
and
add
ja
mov
leave
test
add
add
add
mov
loop
and
pushf
jl
add
pop
xchg
ja
jmp
daa
test
xor
out
mov
js
add
test
push
add
jmp
xor
jmp
or
mov
add
push
push
retf
add
add
add
mov
sub
add
add
push
add
add
add
add
test
add
jmp
les
jae
and
add
retf
shr
sub
add
add
pop
add
rol
sub
mov
add
pop
and
add
iret
bound
xor
add
mov
jg
cmp
movs
add
pusha
test
add
je
and
and
into
movs
add
(bad)
dec
sub
add
add
cmps
add
lods
add
mov
fsubr
in
add
cmp
lods
mov
xor
and
outs
lods
push
pop
add
cmps
jg
jmp
pushf
test
add
js
jbe
stos
adc
lock
add
add
jmp
inc
test
add
movs
sub
mov
test
add
js
add
mov
pop
call
jg
pop
add
scas
pop
add
iret
dec
out
add
mov
sub
mov
subps
jmp
jmp
mov
sub
mov
stos
imul
sub
mov
cmp
lahf
lock
add
add
add
lods
add
add
add
loop
iret
(bad)
jmp
test
add
out
mov
ins
add
lods
add
js
sub
sub
add
add
add
and
inc
and
in
add
mov
mov
pop
fild
add
cmps
in
ja
(bad)
mov
cli
push
sar
popf
mov
punpckhwd
add
sub
cmps
add
add
sub
add
mov
shl
add
movs
movq
(bad)
test
out
iret
add
movs
sub
mov
mov
js
add
add
add
ja
pop
sar
mov
add
add
mov
or
pop
leave
mov
add
mov
out
sub
sub
xor
stos
(bad)
and
add
add
add
and
loop
push
and
mov
add
je
jmp
mov
pop
call
sbb
add
inc
xchg
out
jmp
mov
xor
and
add
js
test
in
shr
mov
add
test
scas
cli
add
mov
punpckhwd
sub
add
cmps
add
pop
jp
ror
mov
fidivr
add
add
test
or
add
mov
add
movs
add
add
mov
add
sbb
dec
add
jmp
mov
sbb
push
sub
out
test
xor
test
pop
js
test
add
add
lahf
push
outs
xor
add
mov
add
and
add
mov
add
sub
sub
or
and
lods
add
mov
loopne
add
xchg
pop
add
add
and
add
adc
popa
shr
mov
stos
imul
test
and
add
add
mov
repz
cmp
pop
and
in
mov
and
xchg
add
mov
and
add
add
(bad)
lock
jmp
jmp
mov
and
add
add
mov
add
je
shl
add
sub
and
add
mov
ss
add
jnp
and
add
jmp
mov
mov
add
pop
sub
sub
or
je
xchg
stos
add
ror
ja
sub
jae
pop
loopne
add
(bad)
and
add
jmp
mov
add
test
in
mov
fadd
add
punpckhwd
add
add
xor
cs
mov
fsub
sub
cmp
cmps
ins
lods
mov
and
add
add
call
aam
jmp
(bad)
dec
or
lods
adc
add
add
retf
iret
mov
(bad)
call
sub
add
mov
add
push
adc
imul
sub
mov
je
jmp
mov
je
daa
push
aas
sub
or
test
mov
test
jmp
pushf
cld
leave
shl
in
cmp
xor
push
movs
(bad)
add
push
in
add
add
test
or
loopne
test
add
loop
mov
jbe
add
mov
add
pop
or
mov
test
ret
add
lods
jmp
mov
leave
add
add
mov
fidivr
test
stos
add
iret
test
sub
cmps
test
mov
inc
sahf
cld
leave
mov
movs
jmp
lock
scas
cli
add
inc
pop
add
inc
test
movs
in
xor
mov
and
add
pop
add
cmp
lock
sub
inc
and
test
cmps
test
pop
xchg
jmp
add
jmp
pop
pop
adc
sub
add
add
mov
jmp
test
add
add
mov
and
add
or
in
cmp
add
add
add
sub
mov
and
xor
das
dec
mov
out
jmp
push
sub
add
add
icebp
test
pushf
add
add
and
(bad)
inc
xlat
sbb
aam
shl
jmp
add
jno
cmps
add
test
add
outs
sbb
add
mov
jle
add
inc
cli
xor
test
and
add
scas
xchg
mov
mov
add
and
in
mov
mov
or
std
mov
xor
fucom
daa
add
jmp
mov
pop
frndint
sar
pop
add
imul
jno
pop
pop
and
iret
sub
mov
je
jmp
mov
sub
(bad)
push
mov
mov
add
add
jbe
movs
add
and
sub
add
out
leave
jno
mov
(bad)
sub
in
cmp
add
jmp
lock
cmp
mov
movzx
pop
and
dec
add
movs
mov
add
xor
push
pop
je
imul
inc
sub
mov
paddusw
iret
add
hlt
add
add
cmps
add
and
and
sbb
jbe
movs
add
ss
add
test
scas
add
xlat
cmp
mov
pop
add
rcr
cmps
test
cmp
add
in
sub
mov
js
dec
push
add
jmp
adc
cmp
add
fsubrp
por
das
jmp
xchg
movs
test
cmp
ja
sub
test
jmp
or
add
iret
movs
(bad)
bound
cmp
test
add
mov
mov
popf
iret
xor
add
add
mov
mov
inc
add
ret
xor
mov
in
ror
xchg
ret
add
pushf
and
jbe
lods
mov
jmp
sbb
nop
outs
adc
adc
add
not
movs
cmovne
mov
cmp
pop
cwde
sub
test
pop
or
cmps
mov
push
or
mov
and
jmp
test
jmp
and
in
(bad)
xor
pop
and
and
pop
rol
and
jl
add
cmps
test
xchg
ret
sub
and
out
add
sub
cmp
mov
and
(bad)
mov
mov
xor
test
psrad
xor
jp
ror
jg
add
daa
mov
sbb
add
xchg
and
add
add
lea
add
mov
in
shl
cmp
lods
jmp
mov
dec
mov
mov
adc
add
push
retf
and
add
shr
mov
je
mov
jae
and
add
xor
js
add
loope
add
retf
inc
mov
mov
and
jecxz
add
mov
pop
mov
ins
(bad)
(bad)
(bad)
mov
(bad)
lock
scas
cli
xor
pushf
out
cmp
add
movs
out
add
xchg
ret
test
add
mov
add
sub
add
mov
mov
mov
and
add
cmp
ret
mov
dec
add
retf
jmp
mov
sahf
loope
add
xchg
test
add
(bad)
dec
adc
xor
(bad)
test
ret
jbe
add
or
in
push
add
add
inc
cmp
add
push
cmp
add
and
sub
add
rcr
test
out
mov
(bad)
jne
sbb
cmp
ins
mov
push
(bad)
jl
adc
je
lods
add
mov
fild
iret
add
fadd
out
mov
test
xor
out
add
add
mov
xchg
jbe
add
mov
mov
jb
mov
call
sub
sbb
hlt
mov
jmp
cmp
ja
daa
mov
add
ja
or
frstor
add
iret
dec
std
pop
add
movs
mov
push
or
mov
push
mov
mov
push
add
add
add
dec
jae
jae
and
add
pop
stos
mov
int
out
cmp
les
mov
add
shl
add
ret
in
add
add
add
lods
add
pop
rcr
inc
mov
or
stos
dec
add
lea
add
add
wbinvd
sahf
mov
out
add
mov
iret
outs
add
add
adc
ss
out
jae
and
and
iret
mov
sub
add
mov
dec
add
or
sbb
movs
add
add
cld
inc
mov
dec
add
add
pop
inc
and
retf
mov
and
call
mov
xor
add
lea
push
and
xor
mov
inc
mov
(bad)
call
nop
add
add
mov
mov
pushf
push
fnstsw
lods
add
and
xor
jmp
mov
jbe
mov
and
add
xor
add
inc
ins
mov
add
add
and
add
add
mov
nop
add
lods
jae
and
inc
and
fistp
retf
(bad)
jmp
iret
outs
hlt
xchg
mov
fld
add
cmps
xadd
mov
jmp
mov
mov
shl
dec
add
and
add
add
mov
movs
add
bound
add
xor
pop
lahf
jne
clc
mov
and
rol
add
pop
mov
add
mov
mov
jmp
mov
mov
mov
xchg
xor
inc
add
push
inc
mov
loope
mov
shl
sahf
or
add
pop
adc
pop
and
push
(bad)
jmp
and
popf
imul
jmp
and
sahf
test
add
cmp
ja
stc
mov
cli
mov
mov
mov
lods
test
add
iret
mov
sub
cmps
mov
mov
add
arpl
cmp
out
out
xor
retf
or
add
sub
mov
(bad)
cli
or
add
add
inc
adc
shl
mov
cmp
push
mov
and
mov
outs
movs
and
add
cmps
jmp
scas
int
dec
mov
mov
test
ss
ins
mov
adc
add
adc
iret
add
cs
add
mov
jg
pop
enter
mov
movs
adc
imul
xor
mov
mov
add
add
shl
mov
cmp
add
mov
jbe
test
loop
add
enter
add
add
and
inc
and
cmp
add
pop
mov
in
shl
mov
jmp
iret
mov
lods
sbb
pop
dec
and
add
imul
in
push
add
and
add
xor
loop
(bad)
push
push
sub
pop
sbb
add
mov
jmp
(bad)
repz
adc
add
mov
jno
jmp
sahf
movs
out
adc
add
popf
cld
jg
rcr
mov
xor
jmp
push
data16
test
add
lods
add
cmp
rcr
add
add
inc
test
cmps
out
jmp
mov
mov
mov
in
and
mov
test
cmp
lods
jmp
mov
inc
add
call
(bad)
and
adc
xor
dec
pop
and
jmp
(bad)
call
shl
push
add
add
mov
and
add
lods
ret
daa
xchg
test
jno
add
cs
pushf
sub
xor
pop
in
call
mov
mov
sub
add
and
xor
fst
add
push
add
add
shl
xchg
and
add
add
mov
mov
fidivr
mov
xor
scas
inc
mov
xchg
inc
out
add
sbb
add
ja
mov
sub
and
inc
and
retf
add
ret
aaa
sar
mov
inc
test
(bad)
js
fild
add
cmp
mov
cmc
test
lods
and
add
add
sub
sub
test
dec
add
icebp
popa
and
cmps
add
mov
and
cmp
dec
add
pop
and
sub
ret
cmps
add
xor
add
mov
leave
and
add
sub
push
cmp
mov
and
and
dec
and
cmps
out
mov
mov
dec
add
and
mov
pop
sbb
add
mov
mov
dec
add
fs
dec
cmps
mov
mov
ficom
pop
and
mov
dec
add
inc
sub
rol
pop
cmp
out
les
and
je
mov
add
add
inc
mov
sub
call
lea
mov
icebp
or
mov
cmp
inc
and
add
jmp
cs
mov
fidivr
jmp
cmp
add
inc
cs
mov
inc
add
shl
pushf
adc
pop
js
cmps
inc
ror
sub
add
mov
pop
mov
mov
inc
inc
sub
xor
add
and
add
js
add
adc
sbb
jmp
add
lods
add
mov
add
mov
add
iret
movs
mov
out
inc
or
xor
cmps
mov
xchg
in
sub
test
add
je
xchg
lea
inc
and
shl
cli
add
sahf
add
add
add
or
and
int
add
jo
jbe
xor
out
mov
in
push
add
cmps
add
mov
adc
add
lds
sbb
or
xor
movs
and
int
out
jnp
lahf
dec
int
(bad)
dec
pop
inc
add
in
push
push
and
push
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
sub
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
cmp
jbe
xor
xor
shl
jmp
call
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
inc
jg
shl
xor
dec
jmp
mov
mov
mov
mov
mov
push
mov
mov
push
mov
push
pop
mov
push
ret
add
dec
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
pushf
fist
gs
xor
push
std
dec
pop
push
pusha
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
int3
int3
push
mov
push
push
push
and
sub
jmp
call
mov
ror
js
test
mov
sub
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
rol
jae
sar
xchg
or
jmp
push
mov
mov
push
pop
mov
mov
mov
mov
mov
mov
ret
not
shl
or
jb
xchg
inc
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
jns
ror
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
idiv
sahf
sbb
mov
xchg
loopne
add
add
add
sub
ret
xchg
and
add
add
sbb
pop
push
mov
(bad)
jmp
mov
movs
mov
dec
cmp
add
cwde
mov
add
inc
add
les
jns
in
sub
ret
pop
ins
nop
mov
mulps
add
jmp
cmps
jecxz
jge
add
push
adc
dec
test
pminsw
test
jmp
mov
fst
out
addr16
test
inc
add
clc
mov
or
add
xchg
out
add
mov
sub
mov
add
mov
pop
sub
add
test
cwde
mov
and
les
add
and
add
iret
sub
mov
push
mov
sbb
out
mov
stc
xor
or
push
scas
pushf
and
pop
add
mov
add
mov
jg
jmp
mov
sub
sub
mov
je
jmp
mov
add
in
in
xchg
iret
les
lods
mov
ret
repz
fdivr
or
push
xor
inc
and
add
xor
out
xchg
add
pop
add
add
mov
push
scas
iret
les
and
cdq
mov
and
add
ret
mov
adc
js
mov
and
fadd
add
movs
test
idiv
pop
call
add
les
out
jns
aad
sub
sub
lea
cvtps2pi
add
add
sub
mov
mov
les
scas
jg
jmp
mov
and
test
fistp
and
jns
mov
add
in
pop
sub
jecxz
jge
cmp
sub
mov
mov
add
add
add
sub
out
aad
fs
(bad)
cld
and
add
mov
cli
or
sub
sub
xchg
out
add
out
xor
mov
and
fs
test
xor
sub
add
ret
add
add
sub
push
out
jle
pop
sub
add
call
jmp
mov
call
mov
retf
(bad)
rol
std
jmp
push
cmp
sub
add
sub
clc
or
pop
and
add
cmp
xchg
add
out
lds
dec
test
add
(bad)
adc
add
sub
and
test
pop
call
add
add
into
les
les
test
add
adc
add
jmp
mov
sub
out
test
pop
cmp
add
sbb
add
add
and
add
dec
jecxz
xor
xor
or
ja
pop
fdivrp
or
add
add
add
test
and
mov
add
popa
jecxz
add
inc
add
iret
add
add
sub
or
and
add
add
xor
add
ret
add
mov
pop
sub
mov
add
cwde
mov
xchg
out
jmp
mov
and
into
add
dec
mov
push
out
je
cdq
std
ret
ja
jnp
cli
add
add
add
aam
and
add
sub
xor
push
loope
test
jmp
add
call
add
add
out
jns
in
add
add
mov
add
sbb
jmp
in
test
cmp
inc
stc
fstp
mov
repnz
sub
jmp
repz
fadd
cli
sub
mov
or
add
cmp
(bad)
mov
add
jl
add
add
iret
les
sbb
and
add
test
add
add
mov
movntps
add
mov
xor
add
xchg
out
sub
iret
les
jns
push
add
je
mov
ja
jne
cli
or
sub
cmps
jae
inc
xchg
out
lds
dec
test
std
test
adc
mov
push
sti
add
and
test
xlat
sub
pop
add
pop
jl
lds
lods
test
add
dec
test
test
add
ja
sbb
cli
or
add
add
pop
add
mov
jmp
add
vmwrite
sub
add
mov
js
mov
push
pop
add
add
fcmovnb
sub
addr16
mov
push
add
add
aad
sbb
mov
mov
test
push
iret
add
push
data16
jbe
and
mov
out
mov
inc
xor
jnp
or
jmp
aam
push
push
add
sub
adc
adc
cmp
xchg
je
inc
cwde
add
add
add
sub
mov
add
add
cmps
test
cmp
pop
sub
mov
add
iret
retf
test
sbb
test
add
jecxz
fdiv
jnp
sub
addr16
repz
(bad)
push
sub
lds
rol
ins
xor
inc
xor
fcompp
cli
add
rol
add
test
push
data16
sub
mov
punpckhdq
add
add
scas
inc
inc
and
add
sub
mov
add
cmp
mov
cli
add
add
sahf
inc
and
je
es
add
add
jns
push
add
mov
cmc
mov
ja
fild
(bad)
in
sub
mov
or
add
fisub
and
stc
sahf
shl
retf
lods
iret
(bad)
jmp
mov
sub
dec
cld
sti
jae
and
pand
sub
add
push
das
test
xchg
add
sub
mov
retf
test
cli
test
jmp
mov
sub
mov
dec
or
add
pop
add
sub
add
cmp
xor
loope
sub
les
test
cld
test
sub
dec
push
and
(bad)
sub
retf
sti
add
scas
or
add
jmp
sbb
inc
and
je
pop
mov
add
dec
test
sub
mov
sbb
ret
xchg
and
mov
push
cmp
inc
push
push
push
ins
bound
add
mov
add
push
mov
dec
inc
and
push
jge
mov
add
repz
fdivr
or
lock
lock
mov
push
std
add
push
jg
add
mov
and
les
add
shl
lods
les
fld
jno
sub
sub
add
movs
inc
rol
sbb
add
scas
mov
xor
pusha
or
pop
dec
push
and
je
jmp
xchg
and
sub
sub
mov
sbb
dec
add
add
sbb
test
push
add
test
mov
and
cli
add
mov
sub
cmps
jno
bound
and
xor
jecxz
add
jmp
dec
test
into
add
sub
or
or
adc
jmp
jno
and
add
sub
mov
sub
mov
jmp
mov
sub
dec
inc
and
vmwrite
add
js
adc
lea
cli
add
(bad)
outs
and
pavgw
add
jmp
push
test
push
add
add
dec
inc
and
push
popa
add
add
sbb
mov
push
add
sbb
js
dec
jnp
xsave
sub
pop
add
mov
cdq
mov
mov
adc
fs
ror
add
cmp
add
fisub
xchg
mov
inc
(bad)
dec
lds
xchg
(bad)
(bad)
(bad)
push
mul
repnz
mov
sbb
or
(bad)
lods
inc
add
cmovne
jle
xor
add
lds
add
iret
jl
add
mov
(bad)
push
jno
(bad)
and
inc
sbb
xor
sbb
outs
jecxz
cmp
test
mov
push
inc
and
mov
stc
loop
or
sub
mov
jns
adc
ret
pushf
adc
call
xchg
mov
push
mov
(bad)
pop
and
sti
or
xchg
pop
inc
mov
idiv
mov
cli
into
les
jmp
mov
mov
sahf
dec
jno
xor
test
and
sub
and
cmp
pop
jl
jmp
add
stos
jecxz
fsubr
sub
loopne
aad
push
push
and
add
add
daa
add
add
shl
cmp
nop
jmp
stc
mov
mov
add
psllw
mov
xchg
fbld
cmc
ds
mov
mov
add
mov
xchg
loope
shl
jmp
lds
add
aad
mov
je
mov
add
cli
or
cmove
(bad)
scas
and
add
sub
xchg
add
add
mov
mov
jo
add
cmp
movaps
add
cld
ins
add
mov
mov
mov
add
cmp
sbb
das
mov
and
mov
mov
(bad)
in
and
mov
add
add
shl
pop
jmp
mov
jl
lds
mov
lea
test
add
inc
shr
stc
scas
add
jmp
(bad)
jecxz
pop
sub
cmp
pop
add
into
add
xor
loopne
add
mov
mov
and
add
sub
or
mov
lock
mov
out
test
xchg
pop
jbe
scas
iret
add
xor
mov
test
pop
jns
add
add
add
jle
push
or
jno
jmp
mov
sbb
retf
add
jmp
inc
push
xor
cdq
pop
sub
ret
add
icebp
test
in
sub
mov
jl
mov
push
fs
test
jno
mov
adc
add
outs
bound
(bad)
or
scas
and
add
add
add
add
pop
mov
adc
iret
add
rcr
sub
add
inc
ret
xor
push
add
mov
push
xor
pusha
add
add
add
add
add
cmp
test
mov
xor
or
call
adc
mov
retf
add
addr16
add
add
popf
add
add
mov
inc
push
and
cld
test
test
(bad)
add
add
retf
test
add
call
rcr
idiv
add
jno
push
out
mov
cmps
add
add
mov
or
add
(bad)
cld
and
add
or
add
popf
push
xstore-rng
cmps
les
test
add
add
mov
retf
iret
(bad)
in
ret
or
sub
add
sub
pop
add
cli
retf
fisttp
push
add
add
mov
add
xchg
mov
add
add
out
add
imul
jmp
xchg
push
and
adc
js
rcr
add
mov
aam
or
movs
mov
js
pop
xchg
mov
cli
add
iret
jmp
out
jns
js
test
xor
pop
pop
jb
ret
add
add
into
inc
mov
jmp
cmp
pop
add
add
sub
test
add
addr16
push
push
adc
ins
add
xchg
sub
xchg
add
add
gs
mov
in
pop
add
js
xor
push
add
or
mov
idiv
pushf
push
nop
mov
pusha
add
add
iret
add
adc
mov
or
icebp
std
shl
push
mov
mov
aad
sub
jmp
add
jmp
mov
add
test
or
push
pop
lods
cmp
ins
sub
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
not
xchg
rol
jg
shr
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
sub
or
jmp
mov
push
mov
push
mov
push
pop
mov
push
jmp
xchg
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ss
scas
add
mov
and
add
mov
ret
and
and
add
test
mov
xor
mov
rcr
adc
xchg
mov
mov
jg
add
test
mov
cld
mov
adc
sub
mov
add
test
ds
add
mov
push
mov
mov
sub
ret
test
and
sub
mov
fcom
mov
pop
or
jne
mov
and
add
add
mov
scas
add
add
inc
and
and
add
push
test
adc
sbb
add
jo
add
test
add
(bad)
data16
stos
add
add
add
(bad)
daa
adc
adc
cmp
pop
add
add
xor
xor
outs
cwde
inc
add
(bad)
add
and
mov
add
push
mov
jns
mov
cdq
push
add
add
add
jmp
and
add
add
(bad)
int3
adc
cmp
adc
pop
scas
mov
and
add
jo
mov
test
add
pop
bts
mov
add
pop
pop
mov
add
cmp
mov
and
add
cmp
(bad)
mov
mov
jge
mov
lods
xor
add
push
(bad)
cmps
cmp
xchg
jmp
mov
fwait
or
fsub
test
add
add
dec
repz
jmp
repz
add
adc
pop
xor
and
push
(bad)
sub
pop
mov
scas
inc
pop
xor
fcom
ins
dec
in
sbb
add
mov
mov
pop
ret
jns
add
push
call
je
(bad)
adc
adc
adc
add
mov
and
scas
cmp
or
packsswb
rcr
mov
fdivr
test
mov
daa
mov
(bad)
dec
add
mov
(bad)
and
jge
sub
cwde
inc
xor
lfs
add
xchg
add
mov
mov
mov
add
xchg
add
test
jge
js
mov
push
ror
aam
mov
test
add
add
add
arpl
and
add
pusha
call
pop
pop
push
xchg
cdq
cmp
add
add
pop
scas
mov
mov
mov
inc
test
add
add
mov
test
add
add
mov
setne
add
cmp
retf
add
add
sub
add
cmp
shl
and
je
scas
mov
and
dec
test
and
add
mov
ja
add
cmp
xchg
add
mov
pop
fwait
aas
add
mov
jns
cmovae
pop
add
add
add
sub
fwait
sbb
jb
pop
jmp
add
outs
mov
inc
add
mov
cmovae
and
ins
inc
jl
js
test
adc
add
inc
push
mov
cdq
hlt
cmps
add
add
mov
(bad)
push
mov
and
je
stc
push
add
add
adc
sub
mov
je
cdq
test
test
sub
mov
sub
and
add
add
adc
push
sbb
mov
hlt
rcr
add
mov
ret
jns
mov
ja
mov
cmp
add
jmp
and
pop
add
fwait
sub
adc
sub
xchg
jge
mov
xor
aas
xor
fldenv
and
jg
hlt
add
data16
dec
add
int3
test
pop
and
sub
or
test
inc
cmp
pop
and
push
and
jo
fwait
loop
sbb
sub
add
add
add
sub
aam
and
xor
mov
push
add
scas
test
(bad)
and
cwde
push
and
je
mov
add
add
dec
xchg
jo
push
aas
add
inc
sbb
mov
cmp
test
mov
xor
add
stos
jle
inc
mov
jmp
cmp
add
ret
or
push
fiadd
add
dec
ja
or
ret
sbb
pop
into
add
pop
mov
jmp
enter
call
(bad)
and
test
jb
shl
xor
sti
mov
lock
mov
mov
add
repz
push
jecxz
test
jge
and
test
mov
push
pop
jo
mov
test
pop
and
cs
test
rcr
push
inc
stos
ins
sti
sbb
and
pop
add
add
and
and
add
pop
add
test
xchg
fist
mov
add
js
test
cmp
add
scas
add
mov
leave
fwait
and
add
and
add
movs
cli
pop
(bad)
and
and
add
add
and
add
in
sahf
mov
pop
pop
xchg
dec
inc
mov
dec
cs
push
add
add
mov
and
add
adc
rcl
pop
scas
mov
jmp
mov
and
mov
add
mov
mov
jmp
in
sub
xchg
jo
mov
add
(bad)
mov
movs
ret
jmp
call
and
adc
pop
mov
mov
stc
dec
pop
aas
cdq
call
mov
test
test
jl
fucomip
bound
adc
add
mov
bound
pop
sub
pushf
fadd
add
or
dec
inc
pop
pop
sbb
jne
inc
add
adc
test
mov
pusha
sbb
xchg
add
add
add
pop
add
sahf
jmp
mov
adc
rcl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
add
xor
jb
and
xor
jmp
call
test
shr
ja
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
shl
rol
js
or
dec
sub
sub
jmp
mov
push
mov
push
mov
mov
mov
pop
mov
push
ret
rol
ror
sub
ja
mov
cmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jp
xchg
or
retf
test
ins
or
fdivr
jbe
pushf
add
mov
xchg
add
inc
and
add
sbb
add
loop
and
add
add
fwait
mov
test
add
add
test
cli
add
xor
cmp
fidiv
scas
add
jmp
add
mov
add
cmp
or
add
add
imul
add
add
dec
mov
shl
or
scas
dec
cmp
add
add
dec
sbb
js
(bad)
and
idiv
add
adc
sub
dec
sti
cs
jle
add
int
stos
fiadd
add
fidivr
scas
add
movs
inc
inc
out
(bad)
and
add
pop
mov
xchg
and
add
add
jecxz
fwait
ins
add
add
ins
add
or
add
sub
mov
jg
jmp
mov
sub
call
adc
rol
sbb
add
mov
rcpps
add
add
sub
xchg
sub
sbb
and
sbb
jno
add
cli
push
ret
mov
cli
add
sub
mov
and
jg
push
scas
add
add
loop
jg
sti
mov
je
pop
jb
mov
mov
repz
mov
fs
ret
add
push
add
add
int
fsubr
mov
mov
add
push
lds
test
add
add
inc
aaa
jae
(bad)
and
add
adc
ret
mov
in
pop
mov
inc
add
add
jno
mov
aam
stos
lss
(bad)
and
cmp
xchg
adc
add
mov
and
mov
popfw
add
adc
int3
add
mov
jle
scas
movs
sub
mov
and
mov
mov
adc
sbb
sub
ss
mov
or
mov
dec
scas
add
das
test
add
loop
push
imul
shl
vmwrite
adc
adc
test
test
push
mov
ds
inc
fsubp
je
pop
mov
test
jg
mov
and
mov
and
mov
adc
out
and
add
add
jae
jmp
fld
mov
jge
add
loop
add
mov
and
stc
and
xchg
mov
add
adc
paddusb
pop
loop
and
je
push
pop
add
add
int
sub
mov
je
mov
mov
and
add
data16
push
pop
adc
test
pop
adc
add
imul
and
add
jno
mov
and
cmc
test
add
or
xor
mov
mov
fst
mov
mov
lods
repnz
rcr
adc
rcr
ins
pusha
sbb
jb
int
xor
inc
mov
cli
xor
data16
sub
add
test
mov
mov
add
add
pop
add
hlt
sub
add
xor
cs
add
call
mov
fdiv
mov
(bad)
fiadd
sub
in
add
add
and
mov
and
cmp
sbb
jmp
mov
inc
cmp
mov
cmp
fisub
scas
add
mov
mov
add
movzx
pop
jl
test
mov
push
mov
add
add
imul
xor
das
or
add
int
pop
cmp
add
mov
shr
add
test
jb
xor
add
inc
test
fwait
add
imul
hlt
jmp
or
jmp
mov
add
mov
test
movs
loop
in
lea
loopne
push
add
add
add
idiv
add
or
push
dec
jmp
mov
dec
mov
add
add
ror
scas
outs
retf
and
add
cmp
adc
fs
ret
add
adc
cli
int
test
mov
add
je
mov
xchg
add
push
cmp
sub
sub
mov
mov
shl
add
jmp
sahf
and
add
xchg
add
add
and
xor
mov
and
call
out
mov
daa
mov
xchg
retf
mov
(bad)
mov
rol
pop
dec
jmp
mov
lea
pop
push
xchg
(bad)
xor
add
push
(bad)
test
in
xchg
xchg
jecxz
imul
cmp
jecxz
push
adc
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
test
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
xchg
cmp
ror
jmp
mov
mov
push
mov
pop
push
mov
pop
push
pop
push
jmp
sar
sub
shr
jb
shl
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
mov
jg
mov
mov
jmp
call
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
(bad)
mov
xor
add
add
inc
dec
xor
inc
and
mov
fucomi
pop
test
and
mov
dec
jmp
imul
push
ja
mov
mov
push
stos
mov
dec
fmul
int
add
xchg
setno
out
add
add
push
and
xchg
sbb
push
out
les
imul
jmp
xchg
add
sub
jg
mul
push
and
sub
out
inc
and
pinsrw
or
add
sub
hlt
inc
retf
stos
and
je
jmp
mov
jo
outs
bound
sub
iret
sub
mov
inc
and
ret
pop
test
xor
add
je
(bad)
fadd
add
mov
inc
jmp
gs
jmp
mov
and
sub
mov
je
scas
dec
push
inc
jmpw
dec
add
mov
push
add
mov
mov
mov
and
mov
or
dec
fcom
cmp
push
les
xor
push
push
dec
ret
mov
pop
outs
xchg
cmp
push
arpl
mov
ror
add
xor
ds
test
push
add
add
ret
mov
sub
out
mov
mov
les
add
sub
pop
pop
std
pop
sub
retf
out
sub
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
test
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
je
cmp
add
xchg
jmp
call
not
shr
and
js
cmp
or
jmp
mov
push
mov
mov
mov
push
mov
pop
mov
mov
push
mov
jmp
cmp
xor
dec
shr
js
shl
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sub
xchg
cmp
jle
mov
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
mov
xchg
and
add
jle
add
add
je
add
and
popa
add
mov
(bad)
mov
add
pushf
add
mov
push
and
je
je
ret
and
call
mov
mov
mov
add
or
adc
shr
out
ins
es
add
add
sbb
add
add
cmp
pop
dec
mov
dec
sar
cmp
push
(bad)
cmp
add
add
sub
pop
mov
adc
test
add
add
clc
add
push
jo
inc
and
nop/reserved
mov
sbb
test
scas
push
inc
in
sub
mov
add
mov
add
(bad)
ins
add
stos
fs
add
add
and
cmp
out
fisttp
(bad)
sbb
mov
add
mov
rol
inc
inc
bound
scas
loope
inc
int3
jmp
pop
inc
and
arpl
mov
sbb
jnp
add
cmp
and
cmc
je
jmp
lods
inc
inc
push
repnz
les
add
fidiv
and
mov
push
rcr
je
dec
and
add
mov
and
in
cmp
dec
mov
jg
and
add
pushf
mov
and
sub
mov
icebp
test
jge
xchg
jnp
inc
mov
mov
ss
and
jg
jmp
mov
mov
mov
and
les
add
dec
arpl
inc
add
and
mov
mov
add
std
push
add
add
inc
and
mov
ret
iret
jp
add
(bad)
nop
sub
inc
inc
and
jecxz
out
add
call
lea
jle
add
add
jmp
push
dec
dec
inc
and
je
xlat
add
mov
dec
mov
xchg
jl
mov
dec
pop
add
pushf
cmps
dec
mov
add
test
mov
adc
inc
aas
jg
ds
xor
xchg
mov
or
jne
inc
mov
ret
dec
(bad)
into
pushf
dec
arpl
add
add
stos
mov
or
test
scas
add
add
jle
jmp
or
inc
inc
jl
adc
inc
int3
mov
lds
cmp
or
sbb
add
jle
jp
int
adc
movs
xor
cwde
push
jns
pushf
dec
test
fwait
aas
and
and
jmp
lahf
test
add
push
enter
sub
add
popa
add
(bad)
(bad)
inc
and
dec
aas
(bad)
(bad)
(bad)
jmp
push
inc
(bad)
in
mov
push
jp
add
mov
scas
adc
mov
inc
xchg
cli
test
add
add
iret
inc
and
and
imul
inc
stos
lea
mov
add
inc
jmp
sub
mov
je
add
add
add
mov
dec
mov
inc
mov
push
rcr
jmp
lods
popa
xchg
shl
sbb
add
add
jl
in
in
add
jl
jmp
add
add
add
stos
add
add
ds
jecxz
mov
add
and
dec
fsubr
or
add
mov
in
sub
inc
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
ror
and
inc
ja
dec
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
jg
sar
inc
jmp
push
mov
push
mov
push
mov
mov
push
ret
cmp
mov
and
not
jae
not
shl
ror
jmp
call
mov
shl
test
jae
ror
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
ds
push
mov
test
iret
mov
add
add
add
fsubp
inc
test
int3
rcl
fst
pop
mov
pusha
mov
pop
inc
and
add
inc
fstp
cld
out
mov
push
mov
and
jmp
mov
lock
test
outs
add
add
test
jmp
xor
xor
les
inc
add
mov
sub
cmp
test
xchg
add
add
mov
add
inc
jbe
and
jmp
mov
pusha
sbb
add
adc
mov
mov
mov
mov
imul
inc
add
mov
add
and
add
pop
push
add
add
jecxz
out
mov
adc
dec
bound
call
mov
ja
cwde
or
adc
mov
add
fst
cmp
call
lea
xor
call
sbb
dec
jmp
inc
push
mov
add
add
mov
and
add
je
jo
(bad)
add
push
add
mul
sbb
and
xchg
dec
add
xor
cmp
xchg
push
push
clc
add
add
add
add
add
lock
add
fisttp
and
xor
and
mov
dec
mov
add
repnz
jns
in
push
add
and
mov
mov
xchg
inc
add
add
aam
inc
and
call
sub
mov
cmps
inc
cmp
jae
push
js
add
lea
jmp
dec
mov
test
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
inc
or
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
shl
jmp
mov
push
pop
mov
mov
mov
mov
push
pop
mov
push
pop
push
mov
ret
shl
rol
jmp
call
shr
sar
jae
sar
or
and
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
ss
sub
mov
inc
mov
sub
add
das
inc
lods
mov
mov
cmps
pop
mov
mov
mov
test
add
adc
and
add
add
das
or
and
add
retf
add
dec
test
cmps
pop
pop
push
dec
(bad)
dec
add
mov
repnz
and
call
test
test
add
mov
dec
and
add
add
stos
movs
rol
gs
sub
pop
test
add
jg
mov
add
sub
(bad)
and
mov
add
mov
sub
rcr
mov
out
(bad)
aad
add
add
mov
and
add
add
sub
or
add
add
cmps
jmp
rol
sub
mov
push
jnp
jg
test
fadd
mov
mov
inc
adc
add
fimul
packsswb
aad
add
add
add
test
inc
std
xor
and
add
add
mov
enter
add
mov
scas
(bad)
mov
das
add
add
add
mov
and
retf
lea
or
add
je
push
ja
add
ins
aam
sub
iret
test
add
add
dec
faddp
inc
leave
and
test
add
int
and
add
aad
cli
ins
int3
mov
xchg
pop
ins
shrd
dec
dec
pushf
add
add
cmps
pop
sub
mov
and
jg
xchg
add
(bad)
add
mov
sahf
out
leave
and
mov
add
jmp
int
and
add
add
mov
inc
pop
dec
jg
jmp
mov
and
add
retf
mov
mov
push
sub
add
(bad)
pop
jmp
jg
add
mov
and
and
and
test
add
call
pop
or
retf
add
sub
test
retf
lea
mov
push
mov
add
mov
add
add
int
loop
add
jnp
cmp
inc
outs
dec
je
dec
pop
add
aam
retf
add
mov
jg
add
pop
sti
or
add
sub
mov
inc
sub
sub
jl
add
scas
call
and
(bad)
sar
outs
xchg
mov
jbe
or
test
(bad)
cmps
add
stos
pop
add
and
and
in
mov
mov
cwde
dec
add
inc
scas
test
lea
cmps
sub
mov
(bad)
fmul
inc
mov
add
mov
iret
test
das
add
enter
add
and
jg
pop
add
add
mov
and
in
(bad)
aad
enter
mov
xchg
mov
das
inc
and
dec
test
jae
test
and
test
add
add
add
jg
mov
xchg
inc
and
add
add
pop
aad
and
add
sub
mov
je
jmp
shl
add
rol
mov
push
test
pop
add
add
add
push
mov
cld
outs
sbb
add
add
add
ss
lea
mov
out
xor
mov
cli
cli
(bad)
jg
add
inc
jns
iret
and
add
stos
add
lods
test
lea
cmps
jmp
pop
jg
rcl
pop
test
jg
sub
push
add
mov
jmp
retf
mov
add
add
in
add
pop
mov
lods
add
add
or
mov
and
sub
call
(bad)
stos
fs
add
or
gs
neg
add
aad
add
setae
test
jp
add
retf
push
sub
add
in
mov
iret
and
add
jg
xor
mov
cmps
push
fs
dec
and
add
and
call
loope
xor
mov
inc
rol
mov
test
jne
add
sti
and
sub
leave
mov
add
(bad)
jmp
cdq
sub
add
add
mov
das
sar
add
dec
add
add
rol
lods
pop
add
mov
and
mov
in
mov
add
push
jmp
and
cmps
mov
add
(bad)
or
add
add
push
add
in
add
(bad)
adc
and
(bad)
jg
loopne
or
add
popf
sub
dec
xor
pop
pop
add
dec
push
and
add
xchg
jge
add
xor
test
add
add
test
dec
test
sub
pop
iret
test
vcvtpd2ps
add
mov
mov
jmp
adc
sub
scas
add
retf
(bad)
aad
pop
test
add
add
sub
and
add
test
nop
shl
test
add
add
dec
in
add
add
retf
test
rcr
(bad)
dec
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
jmp
add
pop
ret
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
or
test
ja
mov
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
js
xor
xor
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
sub
jmp
push
mov
push
mov
push
mov
mov
mov
ret
add
mov
js
or
shl
jmp
call
sub
or
cmp
jg
or
xor
xchg
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
stos
add
add
pop
pop
pop
lds
add
add
cmc
lahf
and
movs
add
push
test
les
add
adc
mov
add
mov
popf
add
mov
and
(bad)
loopne
mov
and
add
add
xchg
pop
pop
lds
psubsb
cmp
add
mov
jl
adc
mov
mov
rol
jge
or
jne
add
add
mov
mov
adc
pop
rol
add
and
add
add
mov
mov
pop
loopne
add
mov
nop
ins
outs
sbb
sub
add
dec
and
sldt
jg
jmp
not
rol
jae
hlt
xchg
mov
out
and
and
popf
mov
cwde
adc
movs
cs
test
add
add
test
add
clc
xor
and
add
jge
popf
mov
pop
mov
add
(bad)
mov
adc
sbb
jno
sub
mov
push
out
arpl
add
test
pop
mov
or
scas
dec
test
add
add
jmp
fisubr
mov
jno
movs
mov
mov
add
add
lods
add
add
les
push
mov
mov
jb
add
jmp
mov
lock
adc
sub
mov
jl
jmp
call
xchg
js
mov
je
jmp
mov
push
stc
jge
neg
(bad)
and
jge
mov
add
and
retf
data16
push
sub
mov
add
jmp
not
add
mov
mov
and
lldt
and
popf
add
add
inc
ds
jae
mov
cli
add
add
call
cwde
add
add
mov
and
psllq
add
add
dec
out
and
add
sub
mov
setle
add
jge
xor
and
and
je
jmp
mov
and
add
add
and
test
inc
and
jg
jmp
mov
call
mov
xchg
test
jle
add
jp
add
das
xchg
add
add
xchg
jmp
and
retf
(bad)
push
jge
add
add
stc
lahf
cwde
lds
cmp
and
stos
sub
test
add
add
add
mov
mov
mov
dec
jecxz
cmps
test
and
add
adc
add
mov
sub
mov
add
je
aad
adc
add
inc
mov
inc
sub
pmaxub
add
add
mov
popf
sub
adc
and
(bad)
icebp
add
movs
jmp
loope
and
add
add
clc
inc
and
push
(bad)
movs
push
call
add
test
mov
pop
test
or
inc
add
add
mov
cmc
pop
cwde
adc
push
mov
loope
xor
mov
add
jmp
mov
rol
lods
fwait
mov
push
push
call
add
mov
popf
sub
mov
and
jmp
or
sub
or
int3
popa
mov
ret
and
add
cmp
add
in
jmp
ins
lods
clc
cmp
mov
push
add
add
mov
popf
sub
mov
adc
test
add
add
add
add
mov
cmp
or
add
jge
add
inc
ror
add
in
aam
xbegin
movs
pop
ret
jmp
leave
inc
jae
fimul
jge
sub
cmp
jl
movs
mov
add
xchg
and
add
or
jno
and
in
mov
mov
loope
call
mov
mov
pavgb
and
mov
mov
sub
cmp
mov
mov
(bad)
(bad)
add
out
xchg
inc
adc
add
add
dec
add
add
sti
scas
lods
clc
stc
and
add
add
mov
daa
jle
movs
hlt
aas
loope
add
cmp
sub
add
sbb
ror
push
inc
and
add
add
add
(bad)
stc
xor
daa
sbb
jmp
mov
mov
add
add
add
push
inc
ror
and
les
clc
fld
add
inc
mov
out
add
add
aam
call
(bad)
mov
mov
test
add
cwde
aad
add
(bad)
xchg
and
add
test
or
and
add
mov
(bad)
push
pop
mov
fs
pusha
jmp
loope
and
jno
add
je
movzx
ret
xor
lods
cmp
and
adc
not
mov
mov
les
dec
xor
mov
mov
call
jl
and
(bad)
and
jae
ret
and
jmp
mov
add
js
cs
jmp
mov
clc
jns
ins
mov
call
add
sub
jl
jno
bound
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
and
add
sar
jno
shr
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sub
inc
ror
dec
jmp
push
mov
mov
mov
pop
mov
mov
mov
mov
push
jmp
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
test
dec
jbe
test
cmp
jmp
call
xchg
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
in
add
add
scas
xchg
xchg
add
add
or
mov
dec
sub
xor
push
aad
sti
iret
add
mov
mov
mov
add
inc
mov
mov
pusha
xor
loop
pushf
add
(bad)
sbb
ret
inc
add
and
sbb
mov
sub
test
sub
ins
pushf
add
add
mov
nop
add
add
neg
(bad)
call
add
jns
jno
jno
cmp
xchg
lods
arpl
and
pushf
add
(bad)
mov
add
jmp
mov
sub
mov
aam
mov
sbb
(bad)
add
add
add
(bad)
ror
rcr
sahf
mov
add
add
js
add
add
inc
fwait
cmps
sub
jl
(bad)
mov
dec
add
xor
sbb
mov
iret
(bad)
div
adc
pop
push
or
add
test
into
nop
dec
and
jge
sar
add
ret
sbb
mov
or
mov
mov
add
jmp
mov
sub
mov
jg
jmp
mov
sub
aas
dec
and
stc
push
mov
dec
pop
jmp
push
test
add
add
mov
jg
jmp
mov
fwait
push
lods
jb
mov
bswap
out
add
add
mov
add
mov
add
je
lods
loop
jns
and
jg
jmp
mov
add
mov
xchg
das
mov
add
xor
add
push
test
iret
add
fisttp
inc
and
shld
add
cmc
sub
inc
mov
jb
push
add
sti
stc
xchg
jo
mov
cmps
add
jmp
mov
xor
jbe
aas
inc
and
jg
pop
add
and
add
sub
inc
inc
aam
je
ret
sub
mov
fild
in
or
(bad)
adc
add
arpl
add
pop
pop
test
cmp
xor
or
div
add
mov
add
mov
lock
mov
jg
jmp
call
add
pop
jbe
or
mov
cmp
test
push
add
add
test
pop
out
xor
adc
ins
icebp
sub
add
add
fwait
pop
in
pop
cmp
test
add
dec
add
add
sbb
adc
cmp
daa
and
shl
sub
sub
cmp
mov
mov
sub
add
ss
add
push
mov
lock
xchg
ins
and
je
loopne
add
les
add
xor
or
mov
and
divps
pop
add
add
lock
arpl
add
mov
(bad)
shl
jb
adc
sahf
into
cwde
ficomp
cmove
mov
jmp
mov
mov
add
and
test
iret
mov
jmp
movs
dec
aam
add
add
xor
jmp
int3
test
sub
add
inc
dec
(bad)
jmp
call
dec
mov
or
jo
sub
into
repnz
jmp
lock
sti
imul
pop
and
pop
arpl
es
lock
stos
or
inc
add
shl
dec
xchg
mov
cmp
fiadd
shl
jmp
je
lock
mov
mov
mov
test
mov
push
pop
add
rcl
add
movs
pop
add
mov
jns
mov
mov
inc
add
lahf
lds
test
add
mov
xchg
cmp
inc
rcr
jae
add
mov
(bad)
mov
cmp
lock
mov
mov
jmp
cmp
pop
test
sbb
pop
add
mov
jmp
(bad)
fld
add
lock
in
cmp
or
add
mov
jmp
push
mov
push
push
push
and
sub
jmp
call
rol
cmp
js
shr
jmp
push
mov
mov
mov
push
mov
pop
mov
push
mov
push
mov
pop
jmp
cmp
sar
cmp
jo
add
ror
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
sar
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
dec
lods
adc
inc
inc
(bad)
inc
inc
mov
aaa
seta
dec
cmp
inc
and
mov
mov
xchg
inc
ins
cmp
(bad)
sub
dec
and
jg
mov
dec
xor
ja
dec
(bad)
pop
mov
add
add
push
add
retf
mov
cmovbe
add
call
leave
pusha
scas
in
fiadd
sbb
sbb
add
lods
add
js
out
xchg
xchg
lahf
cmp
test
ret
jmp
mov
sahf
daa
lods
or
inc
cmp
retf
add
and
call
sub
in
and
or
cmp
push
repnz
or
test
dec
inc
and
stos
push
outs
inc
add
jmp
adc
and
sub
call
add
arpl
ins
add
inc
lea
sub
push
and
je
mov
mov
and
sub
mov
setns
add
jmp
push
iret
dec
push
arpl
clc
int3
shl
pop
call
inc
jno
inc
and
sub
add
add
js
or
idiv
add
add
inc
shl
arpl
inc
mov
(bad)
(bad)
inc
inc
and
add
cld
in
mov
fistp
ret
hlt
out
add
das
(bad)
cmp
inc
mov
add
fidivr
stos
pop
add
ja
cmps
and
cmp
cvtdq2ps
mov
cli
jmp
mov
daa
repnz
pusha
int3
pop
jmp
mov
mov
xchg
dec
inc
push
inc
inc
or
mov
dec
sbb
add
mov
pop
or
add
dec
repz
ds
pop
pop
inc
xchg
or
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
call
xchg
test
dec
jmp
mov
push
mov
mov
push
pop
mov
mov
push
mov
mov
pop
push
jmp
not
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
cmp
cmp
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shl
jbe
sub
test
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
mov
mov
ror
fcom
mov
add
mov
jbe
loopne
add
mov
outs
mov
push
jge
loop
mov
mov
scas
push
and
add
add
and
sbb
mov
cld
add
and
adc
mov
and
push
add
mov
add
sbb
jns
jmp
jns
add
add
sub
test
add
add
cmp
add
push
mov
scas
xchg
aam
inc
mov
andnps
hlt
add
add
xchg
test
cmp
xchg
mov
jg
jmp
pop
test
shl
es
lea
mov
test
pop
add
jmp
mov
cmp
retf
cmps
rcr
and
jns
sub
mov
ds
sub
mov
add
add
pop
add
mov
sub
pop
mov
sub
pop
adc
jmp
mov
push
add
repnz
test
add
add
add
fisttp
sub
xor
movs
add
jns
pop
add
add
mov
int3
add
add
inc
push
setg
add
test
add
jmp
mov
or
mov
cmp
and
mov
repnz
add
call
add
add
mov
jmp
mov
sub
mov
and
add
mov
add
add
add
add
mov
add
add
fbstp
add
ins
or
push
mov
jns
sub
xchg
add
jns
(bad)
and
repnz
test
add
sub
rol
cvttps2pi
cmp
add
fiadd
xor
test
mov
shl
add
add
or
add
mov
mov
test
add
add
sub
cmp
jns
add
out
and
(bad)
and
add
imul
add
mov
add
fsubr
and
push
jmp
dec
std
loopne
rol
add
or
jnp
lds
pop
test
mov
add
call
jbe
js
add
jmp
mov
adc
aam
xor
inc
jge
pop
(bad)
and
add
jmp
mov
cmp
scas
mov
push
sahf
jnp
(bad)
jmp
mov
int3
repnz
sub
mov
and
push
(bad)
push
add
sub
pop
add
retf
push
scas
xor
push
jg
jmp
mov
add
mov
push
cmps
or
add
out
cdq
and
ret
jmp
mov
pop
btr
add
sub
pop
test
(bad)
and
add
add
or
and
je
sub
add
mov
scas
cmp
push
mov
(bad)
and
push
add
test
add
xor
inc
loopne
fiadd
xchg
rol
repnz
add
mov
jg
mov
and
jl
push
xor
cmp
rol
sbb
add
mov
and
add
sub
shr
and
xor
jmp
mov
(bad)
mov
aas
cmp
bound
(bad)
cmc
sbb
sub
test
test
add
lods
ss
shr
inc
and
jg
nop
add
mov
push
repnz
rcl
or
test
add
cmp
push
fild
and
sbb
imul
minps
add
cmp
add
test
lods
addr16
mov
add
xchg
push
add
add
add
add
movs
scas
inc
cmps
adc
add
pop
push
add
add
add
add
sub
mov
clts
dec
add
gs
repnz
and
rcl
repnz
jno
pop
mov
(bad)
fstp
les
jne
push
add
scas
pop
lods
data16
inc
out
je
cmp
add
lods
push
and
add
sub
xor
inc
and
and
fadd
add
jmp
(bad)
aad
dec
add
sub
sub
pop
add
in
sbb
and
add
sub
mov
das
adc
aad
add
or
add
mov
mov
ret
(bad)
adc
hlt
pop
push
add
or
inc
nop
mov
jmp
mov
sbb
dec
jmp
add
mov
mov
fidivr
or
push
push
lea
in
xchg
and
add
jmp
push
test
shl
add
dec
(bad)
cld
or
jg
add
add
mov
sar
loope
add
or
and
add
xchg
add
mov
xchg
mov
push
mov
cmp
sub
pop
retf
sbb
add
push
mov
inc
test
add
jmp
mov
mov
add
and
cmp
mov
test
push
or
xchg
dec
out
mov
jne
dec
push
ins
cmp
cmp
(bad)
retf
mov
cmp
add
add
test
push
add
iret
and
sub
lds
add
test
add
push
jmp
(bad)
sti
test
add
add
add
jmp
and
test
add
cld
xor
push
mov
mov
add
mov
add
mov
cmp
std
mov
add
cmp
add
pop
mov
or
popa
or
push
mov
cmp
mov
add
mul
cmovne
pop
test
and
es
add
pushf
imul
mov
push
cmp
inc
and
jns
mov
mov
mov
lea
add
add
cli
inc
add
or
add
scas
test
inc
int
add
mov
and
sbb
cmp
dec
fcomp
adc
mov
add
add
add
movups
or
dec
push
repnz
cmp
mov
call
sahf
ror
mov
add
jmp
mov
fld
inc
int
ret
mov
mov
pop
mov
add
adc
add
mov
jmp
jmp
mov
nop
pop
les
inc
pop
lods
mov
add
add
add
mov
movs
mov
sub
cmp
jo
add
add
pop
cmp
add
mov
mov
cdq
add
ret
test
add
dec
jmp
(bad)
fbld
test
add
packsswb
pushf
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
not
cmp
jno
cmp
xchg
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
dec
cmp
jns
and
dec
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
shl
not
jmp
push
mov
mov
pop
mov
mov
push
mov
mov
jmp
test
cmp
jl
and
test
jmp
call
xor
sub
or
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
repnz
call
mov
add
pop
je
dec
add
inc
inc
add
adc
xchg
or
and
xchg
adc
jmp
mov
push
outs
aaa
dec
and
pmaxsw
add
and
jmp
push
in
xchg
mov
(bad)
add
jmp
mov
adc
(bad)
cmc
xchg
fwait
mov
and
mov
lea
adc
add
and
jmp
add
and
xcrypt-cfb
cmps
pusha
pop
add
jmp
mov
sahf
sub
rcl
pop
sub
inc
fistp
push
add
pusha
add
mov
mov
mov
mov
cmp
cmove
xchg
jmp
shl
(bad)
jmp
mov
popa
dec
adc
inc
and
sub
sbb
push
inc
inc
and
add
and
imul
add
push
mov
and
aam
and
ret
mov
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
ror
ja
cmp
cmp
jmp
push
mov
push
pop
mov
push
mov
mov
pop
mov
push
mov
mov
pop
jmp
rol
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
add
test
shr
jmp
call
shr
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fiadd
lea
and
mov
mov
enter
mov
cmc
fbstp
jno
and
scas
jle
dec
cmp
mov
sbb
lods
add
mov
call
mov
pop
mov
mov
mov
js
dec
add
mov
inc
add
inc
call
add
icebp
mov
rol
add
js
dec
add
add
mul
mov
add
outs
and
mov
mov
test
mov
add
add
push
and
call
add
add
push
add
add
cmp
mov
and
bound
out
cmp
inc
and
cmp
fidivr
mov
aaa
adc
and
cmp
add
mov
mov
add
scas
cmc
or
mov
lea
lock
xchg
and
push
sbb
mov
or
push
mov
push
push
push
and
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
and
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
setl
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
call
lea
sub
mov
mov
call
add
lea
mov
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
add
mov
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
sub
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
inc
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
call
add
mov
mov
call
mov
imul
sub
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
lea
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
shl
add
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
sub
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
and
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
call
mov
xor
div
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
sub
mov
mov
mov
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
shl
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
call
add
shl
mov
mov
mov
jmp
mov
mov
add
add
mov
mov
add
add
mov
mov
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
sub
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
sub
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
sub
mov
call
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
sub
mov
call
add
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
lea
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
inc
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
mov
call
add
mov
mov
sub
mov
mov
call
add
mov
mov
call
mov
imul
sub
mov
call
add
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
push
mov
push
push
push
and
sub
jmp
call
xchg
shr
xchg
jb
mov
or
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
test
jae
sar
ror
inc
jmp
push
mov
push
mov
mov
mov
pop
mov
pop
mov
mov
mov
push
mov
mov
push
ret
ror
jae
ror
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
jge
mov
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
mov
mov
mov
out
add
add
add
add
add
(bad)
adc
add
pop
fucom
mov
mov
or
daa
add
add
and
adc
add
add
add
xchg
in
fdivr
push
mov
or
test
test
or
daa
add
mov
add
rcr
mov
add
add
add
or
fild
std
xchg
xor
add
jno
cmp
xchg
add
retf
(bad)
and
ret
push
sti
add
pushf
add
add
imul
add
jmp
mov
ret
js
(bad)
mov
nop
xchg
in
jg
jmp
and
and
retf
or
test
popf
mov
je
mov
mov
sub
mov
and
xchg
or
add
daa
fild
ret
fiadd
cs
in
mov
fadd
fld
je
jmp
mov
and
mov
bound
add
add
fidiv
add
add
add
pushf
in
(bad)
add
jl
(bad)
xor
add
add
xchg
add
rcr
adc
xchg
jmp
xor
and
retf
sub
fadd
or
dec
add
add
xchg
add
in
pop
les
and
mov
jo
inc
(bad)
fld
ret
jmp
mov
daa
pushf
add
add
mov
or
add
fcmovnb
push
adc
xchg
add
mov
add
retf
mov
add
mov
daa
bnd
jmp
imul
pushf
or
xchg
scas
lahf
out
pop
popf
rol
add
jge
add
add
add
sub
paddsb
ret
jmp
and
add
loopne
nop
mov
and
push
mov
add
add
mov
sub
ins
inc
jl
movq
mov
das
pushf
retf
imul
fnstcw
mov
clc
xchg
add
mov
mov
sub
mov
cmovl
xchg
in
pop
push
fs
add
or
mov
das
or
mov
add
jmp
push
inc
jno
add
add
mov
or
push
add
add
pop
and
add
mov
jno
lea
in
fwait
inc
je
into
add
fild
mov
leave
add
adc
(bad)
lods
ja
inc
jl
shl
add
jecxz
add
test
cmp
push
daa
fild
out
add
out
mov
and
je
jmp
imul
sbb
add
test
out
mov
mov
add
jmp
mov
sub
mov
punpcklbw
add
or
add
or
add
jmp
ror
rol
add
sub
add
pop
test
xchg
add
sub
imul
xchg
add
mov
fisttp
ss
xchg
add
cmps
push
inc
and
je
jmp
or
add
add
fwait
out
or
test
add
jmp
mov
sub
mov
add
or
jbe
add
push
inc
and
push
add
sub
mov
or
or
in
mov
fucom
mov
mov
es
mov
and
int3
shl
add
add
adc
add
pop
add
int
sar
add
mov
imul
ret
fiadd
sub
mov
je
jmp
mov
sub
mov
and
mov
mov
xor
test
pushf
add
push
aas
(bad)
mov
daa
add
pusha
ins
pop
add
jmp
mov
and
add
xchg
mov
lds
adc
add
mov
or
xchg
and
add
add
add
sti
ror
daa
jmp
mov
mov
sbb
add
imul
or
add
mov
cmps
and
push
ror
add
jne
mov
inc
mov
fld
add
sbb
add
jmp
mov
or
add
retf
out
fldenv
add
add
add
cmp
shl
adc
sbb
mov
and
fcmovnb
add
sub
out
ja
mov
or
fwait
xchg
jmp
pop
push
fs
test
add
add
or
fcmovnb
mov
mov
add
stc
jmp
add
mov
mov
daa
push
inc
jno
add
add
push
add
add
mov
mov
test
maskmovq
mov
inc
outs
mov
add
add
mov
add
xchg
mov
mov
mov
js
mov
add
add
test
test
or
fnstenv
add
sbb
mov
call
mov
add
ror
mov
cmp
punpcklwd
push
test
cmc
adc
add
add
add
dec
add
loopne
add
or
add
xchg
imul
inc
test
fild
ret
mov
les
and
in
(bad)
mov
add
mov
test
movs
add
add
mov
mov
add
test
movs
xchg
add
mov
add
mov
add
add
add
lds
add
mov
movzx
mov
and
add
add
and
pop
add
(bad)
fs
mov
jmp
add
dec
add
fcmovnb
push
adc
xchg
add
test
xchg
in
mov
mov
push
add
mov
mov
add
pop
pop
xchg
pop
in
pop
and
push
adc
mov
add
cmp
test
pop
fucom
(bad)
ss
add
or
adc
jmp
or
ret
push
fcom
lock
jmp
(bad)
fsub
pop
push
loope
add
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
imul
and
cmp
sete
mov
cmp
setl
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
seta
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
shl
add
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
sub
cmp
jge
mov
mov
mov
mov
sub
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
add
mov
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
add
mov
mov
mov
add
mov
and
mov
mov
mov
mov
mov
shl
mov
movzx
mov
sub
mov
mov
mov
sar
add
imul
shl
add
mov
mov
mov
cmp
jl
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
mov
cmp
je
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jl
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
sub
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
sub
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
cmp
jge
mov
mov
add
mov
mov
mov
add
mov
cmp
mov
jge
mov
mov
mov
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
add
mov
cmp
jne
mov
mov
sub
mov
cmp
jl
mov
mov
sar
sub
mov
mov
mov
and
or
mov
mov
cmp
jge
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
sub
shl
add
add
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
sub
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
jb
mov
mov
mov
mov
sub
mov
mov
mov
or
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
add
mov
cmp
sete
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
jmp
mov
mov
add
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
mov
cmp
seta
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
cmp
setne
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
mov
mov
mov
mov
add
sub
mov
mov
sub
mov
cmp
jge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
cmp
setl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
shl
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
shl
mov
mov
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
add
add
mov
jmp
jmp
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
sub
mov
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
or
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
add
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
add
add
mov
jmp
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sar
mov
movzx
add
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
mov
mov
mov
mov
mov
add
add
mov
jmp
mov
mov
sub
mov
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
shl
add
mov
mov
jmp
mov
mov
add
mov
jmp
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
mov
jmp
jmp
jmp
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
xchg
sub
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shl
add
js
mov
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
cmp
jno
sar
sub
rol
jmp
call
cmp
cmp
or
jmp
mov
mov
mov
push
mov
mov
mov
push
mov
mov
ret
cmp
shl
jge
or
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwde
(bad)
aam
inc
and
ds
(bad)
mov
inc
and
ins
and
mov
cmps
xor
cmc
retf
jmp
mov
mov
and
inc
(bad)
fst
add
shr
mov
and
push
jmp
add
jo
and
ss
dec
dec
xchg
pop
not
mov
scas
xor
adc
pcmpgtw
xor
add
or
scas
adc
sahf
rol
sbb
pop
fadd
push
pop
nop
loop
add
jb
xor
enter
arpl
call
mov
mov
js
(bad)
mov
and
push
test
add
add
fcmovnu
push
mov
iret
and
sub
mov
test
add
jmp
jo
xor
test
xor
inc
and
movups
mov
inc
and
sub
add
movs
inc
mov
repnz
add
imul
fild
bswap
je
add
add
mov
add
lea
gs
mov
inc
outs
sahf
imul
cmove
dec
into
xor
dec
add
xlat
push
add
or
lock
cli
out
add
mov
(bad)
and
add
mov
jmp
sub
mov
loope
pop
inc
(bad)
test
or
add
out
popw
shl
or
xor
xor
add
add
(bad)
fmul
dec
scas
jb
inc
loope
jmp
mov
lea
pop
mov
(bad)
ret
mov
mov
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
jmp
mov
mov
pop
push
mov
pop
mov
push
mov
push
jmp
not
mov
jmp
call
rol
cmp
jno
cmp
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
mov
js
shr
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
sbb
mul
push
inc
inc
jnp
and
addr16
in
pop
in
and
or
xchg
jp
inc
and
mov
setge
add
mov
cwde
and
sub
aad
and
maxps
add
cmp
test
(bad)
push
ror
(bad)
fsub
pop
pop
add
aas
inc
push
test
mov
add
pop
test
pop
or
mov
sbb
(bad)
sbb
add
add
xchg
sahf
mov
inc
and
mov
sub
and
je
mov
ss
mov
add
arpl
cmp
lods
push
pop
in
rol
adc
mov
add
add
addr16
xchg
add
pop
outs
lock
test
data16
add
add
mov
rcl
ret
wrmsr
xchg
add
jmp
mov
mov
and
je
jmp
jmp
lea
stos
inc
or
and
cmp
cmove
mov
pop
jb
fadd
mov
jbe
and
ja
dec
fidivr
hlt
add
add
mov
or
bound
ss
test
xor
paddd
mov
add
mov
mov
xlat
inc
or
jmp
mov
cdq
(bad)
and
divps
mov
and
jmp
mov
pop
hlt
out
cmp
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
dec
and
jmp
mov
push
mov
push
mov
mov
mov
pop
push
mov
mov
mov
jmp
mov
sar
add
ja
add
sar
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
cmp
and
inc
je
inc
dec
sar
jmp
call
add
cmp
jbe
shl
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
shl
test
jg
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
pop
xlat
push
add
dec
sbb
int
cmp
enter
jmp
mov
and
movd
add
dec
add
mov
and
cmp
paddd
add
movs
mov
lds
and
sbb
je
sub
push
inc
and
je
dec
lods
add
add
mov
ret
inc
adc
pop
hlt
sbb
clc
add
sub
mov
sub
into
add
int
js
add
pop
in
ret
inc
and
je
fld
push
jnp
mov
sub
xchg
inc
and
je
out
push
add
add
sub
and
add
fnstenv
add
add
aas
and
sub
mov
in
add
jmp
inc
pushf
and
inc
movs
push
popf
mov
mov
add
add
xor
add
jmp
mov
adc
mov
loopne
add
cmp
ret
mov
dec
out
in
and
xor
xor
adc
add
aaa
cmp
mov
pop
xlat
push
add
sbb
mov
enter
add
ret
lods
movs
mov
sbb
add
adc
add
add
lea
mov
je
inc
and
add
sbb
inc
cld
or
add
or
movs
movs
out
outs
add
add
aaa
aad
aas
inc
and
adc
add
mov
mov
retf
je
out
sbb
push
mov
add
out
and
mov
das
lds
ja
test
inc
adc
xchg
and
clc
add
mov
lea
pop
pop
pop
fadd
mov
fstp
mov
test
std
(bad)
jmp
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
shl
jo
sub
add
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
jg
sub
or
jmp
call
shl
inc
or
jmp
mov
push
mov
mov
pop
mov
mov
pop
mov
mov
mov
mov
mov
pop
mov
ret
sar
sub
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
cmp
nop
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
inc
cwde
or
(bad)
jmp
cmp
test
inc
and
add
fdivr
int3
mov
jno
and
mov
push
add
cmp
mov
sub
dec
int3
mov
jg
mov
mov
add
daa
sti
or
jg
rol
add
inc
mov
bound
fwait
cwde
out
loope
xchg
in
dec
iret
and
add
into
mov
and
push
mov
pushf
or
test
pop
stos
lds
add
fcomp
sub
inc
inc
and
or
rol
add
mov
bound
mov
sub
add
add
and
sub
mov
mov
jmp
ja
mov
cdq
mov
je
jg
clc
pop
add
add
mov
pop
sbb
add
xor
idiv
inc
shl
in
cmp
test
add
add
mov
add
add
jmp
cmovns
cs
add
mov
push
dec
int3
js
mov
and
je
jmp
mov
xchg
mov
or
test
pop
mov
inc
(bad)
pop
inc
push
or
inc
fmul
nop
je
stos
dec
int3
and
mov
mov
and
inc
dec
mov
add
jmp
and
push
pop
mov
mov
je
jmp
sub
add
add
dec
mov
repz
inc
push
and
adc
inc
ror
cmp
fcomp
mov
jmp
adc
push
daa
mov
mov
(bad)
add
and
mov
mov
xchg
add
mov
jb
jmp
test
and
popa
pop
clc
pop
add
xchg
into
add
mov
jne
sub
retf
jne
add
add
xor
les
dec
mov
les
xchg
dec
add
(bad)
fmul
lea
pop
sub
ret
mov
add
mov
mov
and
mov
mov
(bad)
pop
add
into
mov
sub
add
mov
xchg
xchg
mov
dec
mov
xor
nop
jmp
data16
push
mov
push
push
push
and
push
jmp
call
shl
shr
shr
js
inc
mov
dec
or
jmp
mov
mov
push
mov
pop
push
pop
mov
mov
pop
jmp
cmp
not
jno
rol
xchg
not
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
and
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
not
sub
jg
not
dec
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
test
jg
mov
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pusha
add
mov
lea
pop
pop
xchg
add
nop
push
mov
push
push
push
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
cmp
inc
or
jmp
call
xor
mov
inc
dec
jmp
push
pop
push
mov
mov
mov
pop
mov
push
mov
pop
mov
jmp
test
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
imul
std
inc
add
in
ds
xlat
out
add
int3
jmp
jo
push
add
or
xchg
icebp
(bad)
(bad)
(bad)
dec
inc
add
adc
outs
cdq
mov
(bad)
(bad)
(bad)
jmp
aad
enter
jmp
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
mov
mov
push
mov
mov
mov
jmp
xor
ja
xor
dec
not
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
mov
test
ja
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
test
jmp
call
shr
inc
mov
and
jb
and
xor
add
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
xor
mov
jg
add
cmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
pushf
mov
mov
mov
lea
mov
jo
and
add
dec
mov
je
and
sbb
add
and
xchg
xchg
add
add
add
add
mov
cmp
mov
and
add
add
ins
mov
mov
adc
add
add
add
(bad)
adc
add
xor
mov
pop
aas
add
push
add
add
in
dec
and
inc
fld
add
add
pop
out
or
add
pop
or
sti
and
add
cmp
mov
xchg
mov
dec
ds
add
add
call
arpl
add
add
(bad)
mov
add
add
adc
fadd
xchg
xchg
in
(bad)
mov
dec
adc
mov
(bad)
ja
add
add
or
add
add
cmps
mov
dec
dec
inc
je
and
pop
out
add
and
sub
mov
and
add
add
gs
push
call
icebp
data16
mov
add
add
ret
mov
mov
movzx
cwde
test
add
inc
add
sbb
test
je
add
sub
jb
and
inc
add
fndisi(8087
or
hlt
cmps
xchg
test
jo
add
mov
add
sbb
and
inc
add
add
rcl
add
inc
cmp
and
inc
add
add
inc
je
add
mov
int3
rol
je
out
push
and
mov
and
mov
add
cmp
xchg
and
add
mov
mov
movs
jge
inc
add
and
add
jo
and
out
add
xor
sbb
push
sbb
add
aas
add
mov
sbb
(bad)
dec
call
test
add
fmul
dec
add
xchg
fst
sbb
outs
xor
inc
test
sbb
add
cmp
call
or
and
mov
fnstenv
in
call
xchg
mov
mov
add
pop
add
add
add
add
mov
add
add
mov
fnsave
mov
add
sbb
add
in
inc
rcl
je
or
push
mov
rol
xor
add
sbb
mov
(bad)
div
add
add
mov
and
add
add
aam
in
and
jge
lock
(bad)
jns
ins
sbb
ret
shr
stos
mov
mov
sahf
test
mov
add
add
call
add
ret
rcr
in
sbb
xchg
mov
push
mov
mov
add
sahf
(bad)
add
add
add
mov
mov
mov
lds
add
add
psubw
mov
mov
sbb
jmp
xor
je
test
add
mov
and
pop
call
jo
mov
and
inc
std
in
(bad)
loopne
add
(bad)
xchg
add
jbe
add
sub
xor
add
sub
mov
sub
mov
jmp
dec
rol
add
xchg
add
xchg
mov
push
mov
test
or
push
je
test
pusha
add
mov
sub
xchg
test
add
xor
xchg
add
add
mov
sub
mov
xor
cmps
cld
add
ins
sub
inc
std
sub
mov
cmp
xchg
add
add
add
lahf
mov
sbb
add
add
test
or
add
and
ins
sub
add
ds
sahf
dec
mov
in
(bad)
push
rcl
add
mov
repz
test
push
add
je
adc
dec
inc
mov
xor
jecxz
sub
(bad)
xchg
and
add
add
(bad)
adc
mov
inc
add
sub
sub
int3
test
call
test
xchg
add
xlat
xchg
add
cmp
mov
xchg
mov
sbb
call
imul
inc
adc
in
add
rcl
mov
adc
mov
(bad)
fwait
inc
add
mov
and
add
add
mov
test
stc
add
arpl
and
add
mov
mov
into
pop
pop
call
add
aaa
add
cmp
sub
jmp
and
std
add
jg
jmp
pop
test
sub
xor
lods
mov
je
jmp
mov
inc
adc
out
lds
stc
add
imul
jmp
xchg
test
retf
xor
xchg
mov
mov
add
mov
push
add
dec
push
add
pop
mov
sub
mov
inc
(bad)
and
add
add
add
xchg
inc
(bad)
sbb
popa
loope
sar
and
add
xor
aas
jmp
arpl
add
mov
fstp
sbb
jg
(bad)
add
xchg
sbb
sub
cmp
and
inc
add
add
jmp
mov
gs
push
mov
and
std
add
jmp
jecxz
add
add
add
mov
and
add
add
test
add
pop
mov
and
pop
call
adc
in
int3
and
std
in
adc
add
add
add
pop
test
add
retf
outs
xchg
mov
add
lds
add
call
add
dec
add
ins
test
ret
jecxz
fisttp
jmp
mov
sub
sub
cmp
ins
into
inc
ins
jmp
into
jns
sub
add
aaa
gs
fsubr
mov
nop
add
add
ja
cmp
sub
sub
mov
imul
enter
mov
inc
add
add
aaa
jbe
mov
mov
minps
add
add
mov
and
add
mov
sub
and
add
add
test
add
into
jns
sub
sbb
sub
mov
xchg
add
clc
mov
add
xor
sub
and
push
add
adc
pop
loope
mov
and
jmp
outs
test
ret
sub
sbb
xchg
add
pop
adc
jmp
sub
sub
mov
add
add
mov
inc
add
add
in
mov
sub
add
mov
ret
xor
mov
test
imul
aaa
std
in
inc
and
dec
jb
add
add
ret
add
jecxz
test
xchg
xchg
add
idiv
(bad)
push
aas
add
test
add
cmp
jmp
xor
je
and
int3
test
jecxz
jmp
sbb
sub
mov
and
cmp
mov
add
dec
mov
add
mov
sub
mov
je
jmp
mov
and
in
add
je
lock
and
sahf
test
push
adc
add
mov
sub
mov
out
rol
add
repz
add
mov
sub
mov
add
jecxz
or
sub
add
sub
mov
and
xor
or
add
jmp
jb
and
ins
add
sub
mov
test
jecxz
jmp
pop
test
add
add
pop
fmul
mov
and
adc
mov
test
sub
mov
or
popa
mov
ins
jecxz
rcr
adc
cmp
xchg
jnp
dec
xor
jge
add
mov
gs
push
pop
mov
je
jmp
pop
test
sub
mov
cmp
movs
add
mov
sbb
pop
aas
retf
shr
push
cmp
mov
sub
jecxz
jmp
js
add
add
mov
mov
rol
call
shl
ins
sub
add
jmp
mov
outs
rcl
add
test
mov
add
test
popf
inc
pop
mov
sub
mov
add
inc
cmove
je
and
in
sbb
mov
adc
jl
mov
out
mov
aas
xchg
call
mov
add
je
dec
mov
push
sbb
push
add
int
inc
(bad)
cmp
rol
es
inc
pushf
add
add
psllw
mov
jmp
xchg
mov
idiv
ins
add
int3
popa
adc
mov
pop
jecxz
ss
mov
xchg
add
jge
movs
call
mov
mov
cmp
(bad)
retf
and
dec
inc
std
or
rol
pop
adc
sub
pop
test
nop
add
add
mov
mov
add
push
das
test
add
add
loopne
inc
add
cmp
sbb
mov
mov
mov
add
adc
mov
stc
test
add
dec
mov
mov
mov
sub
ja
inc
clc
mov
jmp
fadd
mov
sbb
add
mov
ret
leave
and
loop
sbb
call
dec
adc
ja
mov
mov
ds
inc
sbb
call
fisttp
mov
and
call
mov
inc
test
jb
je
push
add
fst
ret
jecxz
xor
mov
in
fld
adc
hlt
and
pop
mov
sahf
add
fst
in
ins
ins
add
inc
adc
sbb
ret
pop
add
je
push
add
add
add
add
add
add
push
and
sub
cmp
(bad)
out
int3
cmp
or
pop
mov
adc
inc
add
mov
lea
fst
cmp
add
in
dec
mov
add
xchg
and
mov
mov
sub
ror
mov
repnz
mov
add
stc
add
inc
std
or
ret
mov
mov
mov
pop
mul
cmovne
add
add
mov
dec
inc
pop
je
push
add
test
push
add
(bad)
and
jne
add
mov
mov
test
push
add
add
xchg
add
add
inc
pop
or
jae
and
ins
jmp
push
test
stos
pop
loope
inc
ret
sbb
test
add
add
test
cmp
mov
pop
mov
mov
and
add
sub
pop
add
int3
and
pop
inc
add
jg
(bad)
jnp
popf
sahf
dec
mov
xchg
jmp
(bad)
mov
mov
and
add
jmp
and
pop
add
ins
add
gs
int3
and
add
add
call
lea
mov
test
loopne
mov
add
inc
ror
and
add
call
ins
out
int3
and
pop
std
add
jg
inc
inc
and
add
add
pop
enter
add
push
test
in
jo
add
(bad)
(bad)
call
mov
mov
and
(bad)
lock
or
pop
stc
ins
lea
pop
cmp
pop
ret
add
or
(bad)
jmp
mov
mov
sbb
jl
push
add
add
adc
mov
mov
and
mov
int3
sbb
shl
add
push
rol
test
inc
add
mov
lea
mov
sbb
jae
inc
xor
mov
rcl
cmp
sub
jbe
gs
test
pop
add
ins
push
and
popf
jle
inc
test
pop
rcl
in
addr16
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
push
mov
pop
mov
mov
mov
push
mov
pop
push
mov
pop
mov
jmp
xchg
inc
jle
dec
test
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
xor
test
jbe
or
dec
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
shl
and
jge
shr
test
jmp
call
xor
sub
jbe
not
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
rol
xor
inc
dec
jl
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
mov
rol
mov
and
add
sbb
(bad)
jge
movs
add
and
and
mov
add
mov
add
daa
addr16
pop
add
add
add
mov
pop
add
jg
sti
jb
mov
add
(bad)
sub
inc
add
out
xor
jl
jo
std
call
clc
int3
fild
xchg
test
add
pop
xchg
jae
cmp
icebp
inc
pop
outs
das
test
add
scas
mov
mov
clc
int3
push
jne
add
mov
jbe
sub
hlt
inc
add
and
sub
add
mov
dec
lods
loope
mov
inc
and
in
addr16
add
add
mov
sub
(bad)
lahf
add
mov
sahf
and
ret
and
sub
push
and
jg
jmp
mov
jb
and
mov
add
test
mov
scas
(bad)
in
ret
xor
adc
adc
pop
setae
push
add
idiv
daa
das
inc
and
or
or
mov
mov
call
add
xchg
test
mov
pop
(bad)
sbb
add
pop
out
add
inc
in
mov
je
jmp
arpl
aam
movs
mov
adc
(bad)
dec
idiv
into
movs
mov
scas
mov
and
sub
mov
and
packuswb
jmp
adc
rol
add
in
dec
adc
(bad)
dec
idiv
jmp
cmp
and
sub
cmp
mov
adc
or
add
mov
sub
mov
pandn
add
pop
push
jl
and
push
ret
dec
cmp
and
imul
arpl
dec
push
addr16
sbb
vmread
add
jmp
in
popa
out
sahf
or
push
or
jne
clc
int3
mov
aam
jbe
sub
mov
and
jg
sub
inc
int3
js
ss
cmovae
pushf
sbb
push
idiv
mov
fcomp
lods
xchg
syscall
mov
pusha
add
jecxz
inc
int3
js
out
cs
je
cmc
pop
push
test
or
int3
fimul
test
add
add
mov
and
sahf
mov
lods
dec
test
jl
add
sub
mov
je
pop
scas
jecxz
fucomi
dec
adc
add
jmp
mov
add
daa
add
movs
mov
and
add
ret
mov
add
dec
xor
mov
stc
out
into
add
(bad)
das
push
push
add
add
movs
add
test
int3
cmp
add
mov
mov
adc
push
add
and
pop
add
add
add
mov
scas
and
inc
and
add
stos
jmp
mov
jne
dec
into
ret
and
jge
movs
ss
and
ror
sub
fist
inc
out
loop
push
add
jmp
test
inc
ret
out
test
add
mov
xchg
fist
clc
mov
sbb
push
add
add
mov
and
add
call
xchg
retf
call
add
fisttp
hlt
push
and
scas
inc
or
call
scas
mov
dec
lds
jmp
(bad)
addr16
add
call
and
and
pop
push
add
nop
add
add
sub
out
test
add
call
mov
add
inc
add
sub
mov
mov
test
in
dec
jmp
cmp
mov
sbb
and
int3
add
and
jmp
mov
lock
pop
pop
jl
ret
(bad)
xor
mov
add
add
add
add
fcomp
add
mov
jl
cmps
mov
loop
test
ret
mov
and
call
rcr
add
push
jl
xchg
jl
lods
sub
dec
movs
mov
mov
mov
int3
push
push
and
mov
add
pop
test
add
out
jl
adc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
cmp
jmp
call
sar
sub
rol
jmp
mov
mov
push
pop
push
mov
mov
mov
mov
push
pop
mov
jmp
not
rol
test
test
jae
shr
not
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
shl
jo
not
and
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
not
cmp
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
mov
cld
mov
add
mov
mov
dec
hlt
add
add
loopne
or
in
pop
add
bound
add
add
mov
pop
pop
and
add
add
cmovg
mov
je
(bad)
call
mov
mov
fadd
add
mov
add
test
mov
scas
add
sahf
idiv
mov
mov
xchg
jmp
mov
add
mov
fadd
add
pavgb
or
lods
test
xchg
and
nop
and
add
sahf
xchg
(bad)
xchg
add
push
add
outs
mov
rcl
repnz
and
(bad)
cmp
sahf
cdq
loopne
test
add
sub
mov
jg
loop
add
add
add
or
sbb
push
xor
int3
mov
adc
adc
xor
jmp
mov
and
cmp
outs
aad
aas
cdq
jl
(bad)
add
mov
add
add
add
nop
and
out
sahf
cdq
sub
mov
push
stos
add
add
pop
inc
daa
movs
mov
loopne
add
loopne
add
test
mov
sbb
add
jmp
mov
sbb
sub
daa
add
add
popa
add
add
sbb
push
pop
lock
mov
add
add
mov
or
add
scas
mov
mov
mov
out
sahf
cdq
jg
jmp
mov
push
loopne
add
inc
call
pop
pop
add
outs
add
jmp
cdq
imul
pop
pop
and
lods
add
in
push
and
add
stc
mov
sub
imul
add
cmp
push
cld
add
mov
sub
mov
or
daa
movs
jg
xchg
add
mov
add
sbb
ret
and
outs
clc
mov
ss
adc
daa
mov
inc
jl
cmps
cmp
out
add
mov
add
mov
fcomp
add
es
stos
repz
mov
stc
popa
or
adc
out
jmp
mov
push
adc
jno
pushf
xchg
add
jecxz
and
add
mov
adc
add
mov
pusha
test
add
jmp
mov
add
pop
mov
pushf
mov
add
popa
pop
and
add
out
add
add
add
sub
mov
dec
mov
fisttp
or
fimul
movs
mov
loope
or
imul
cdq
jg
jmp
mov
push
loopne
add
sub
mov
add
add
push
psubd
mov
mov
arpl
aam
cld
and
bswap
sbb
outs
add
add
add
mov
es
jno
dec
scas
loope
or
out
jmp
xor
outs
aad
jmp
jmp
jb
je
arpl
add
pop
jmp
mov
pushf
sbb
outs
mov
mov
loopne
rcr
mov
fiadd
outs
add
xchg
or
aam
(bad)
and
ss
add
add
fisub
dec
add
movs
sub
mov
packssdw
lea
mov
cmps
cmp
sub
mov
fs
jle
add
jmp
mov
cmp
and
out
test
add
add
int3
test
cmp
sub
mov
pop
psrlw
add
mov
loopne
mov
cmp
fbld
push
data16
add
add
inc
add
cmp
jl
(bad)
add
or
mov
pushf
push
pcmpeqd
outs
mov
jmp
mov
sub
mov
je
scas
retf
add
add
jl
loopne
add
es
push
icebp
mov
mov
add
stc
add
or
hlt
add
add
mov
cmp
test
stc
add
or
in
jae
hlt
fwait
and
aaa
fld
add
xchg
mov
sbb
add
xor
mov
and
mov
mov
pop
in
pop
scas
lods
test
sub
mov
and
xchg
jmp
mov
push
sar
and
test
add
or
mov
pushf
sbb
add
jp
scas
sub
sbb
add
add
add
add
inc
add
mov
add
ss
lods
and
imul
mov
test
mov
cmp
test
add
add
jmp
sub
and
mov
add
add
add
mov
fs
xor
and
mov
jmp
mov
fcomp
add
sbb
inc
and
mov
movs
jmp
mov
mov
mov
mov
out
test
add
push
outs
inc
cmp
test
add
add
das
out
imul
test
add
fst
sahf
adc
add
add
mov
and
idiv
xor
add
lods
and
fst
jne
inc
mov
mov
cmp
add
add
xchg
jae
cmps
ins
sbb
mov
add
add
outs
mov
push
add
sahf
mov
mov
in
and
mov
or
pop
scas
packssdw
and
add
outs
jmp
lods
jl
mov
add
mov
cmp
add
inc
add
and
add
add
mov
mov
mov
jmp
sahf
cdq
sbb
or
ror
push
cmp
add
xor
in
out
mov
jae
mov
imul
je
dec
add
xchg
and
add
mov
cmp
jg
add
jae
pushf
clc
add
or
jp
add
add
add
popa
pushf
add
add
inc
lahf
imul
cmp
cmp
clc
add
add
in
pop
(bad)
sub
add
add
jnp
xchg
mov
add
test
out
add
jmp
mov
mov
adc
mov
ins
std
dec
adc
movs
add
adc
inc
data16
add
add
mov
xor
mov
mov
and
add
mov
or
test
scas
daa
movs
loope
add
out
call
daa
call
and
and
add
add
add
ret
test
add
ss
xchg
daa
stos
and
add
add
xor
imul
in
sahf
add
xor
fs
jmp
in
add
clc
jmp
mov
jmp
sbb
mov
in
out
sahf
cdq
jmp
mov
xor
add
mov
add
mov
loop
fs
jp
movs
mov
mov
adc
and
sahf
cdq
mov
mov
mov
and
add
cmovne
mov
into
pop
add
add
lahf
sub
dec
add
jmp
mov
mov
out
add
jmp
icebp
test
add
in
rol
stc
add
add
add
mov
mov
leave
retf
cmp
add
inc
cmp
retf
mov
mov
jmp
mov
mov
mov
adc
mov
jmp
mov
add
gs
pop
pop
pop
xor
push
jbe
std
dec
push
cmp
scas
add
jb
dec
mov
jmp
popa
fnstcw
rcl
ror
clc
mov
inc
or
movs
mov
stc
outs
add
outs
lods
fsubr
sbb
cdq
loopne
test
mov
lock
in
cdq
test
add
add
push
not
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
mov
and
xor
or
test
mov
mov
jne
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
movzx
cmp
jl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
movzx
cmp
setge
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
movzx
sub
add
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
movzx
cmp
jl
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
movzx
sub
add
mov
mov
mov
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
movzx
mov
shl
mov
mov
shl
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
movzx
mov
shl
mov
mov
mov
shl
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
and
cmp
shr
jle
shl
mov
jmp
call
or
dec
not
jl
add
jmp
mov
mov
push
mov
push
mov
push
mov
mov
jmp
xor
cmp
shl
js
dec
sub
ror
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
xchg
cmp
inc
dec
jl
dec
shl
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
xchg
not
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
in
mov
mov
add
mov
add
add
adc
aam
and
add
aad
xor
int3
add
sbb
add
cmp
sub
or
and
adc
add
shl
pop
aad
inc
cmp
popf
enter
add
enter
sub
mov
and
add
add
test
mov
adc
(bad)
push
and
dec
mov
in
mov
and
loope
add
mov
add
add
add
arpl
push
jmp
add
mov
add
pop
add
retf
add
add
jmp
jg
jmp
mov
in
push
inc
add
mov
or
and
add
arpl
add
lds
jo
nop
inc
cmp
mov
mov
add
pop
pop
add
pop
test
add
shl
add
jg
cli
add
dec
mov
in
enter
sub
cmp
movs
rol
add
test
jle
adc
mov
jo
out
stos
aam
icebp
mov
inc
and
add
je
add
add
test
xchg
mov
sub
mov
sbb
add
ins
xchg
push
retf
add
cmps
mov
test
add
aad
test
xor
add
sbb
mov
add
add
rol
add
jecxz
test
and
aad
dec
mov
enter
add
mov
xchg
sub
add
lods
leave
std
ror
mov
nop
add
psrld
adc
jmp
mov
add
pop
mov
push
pop
add
out
add
into
jmp
(bad)
test
add
pop
clc
xchg
jno
outs
inc
test
(bad)
and
xchg
add
add
daa
enter
sub
mov
test
pop
adc
push
ror
pop
sub
frstor
xchg
add
sub
mov
add
int3
add
add
add
(bad)
test
add
add
inc
retf
neg
cmp
sbb
mov
loope
rol
add
or
inc
fiadd
into
dec
sub
mov
fiadd
ins
retf
mov
lahf
inc
xor
ins
(bad)
and
adc
daa
dec
pop
add
(bad)
push
outs
enter
cdq
(bad)
retf
test
and
mov
add
and
pop
add
add
arpl
(bad)
push
or
pop
and
add
mov
enter
in
xchg
add
daa
loope
inc
imul
push
test
mov
test
pop
aad
cdq
cmp
in
cmp
add
ror
fadd
add
into
sub
mov
sbb
inc
add
add
add
add
mov
int3
mov
out
adc
sbb
pop
sbb
add
pop
aad
add
test
in
or
or
test
add
add
adc
adc
mov
(bad)
(bad)
mov
add
add
add
int3
mov
out
xchg
shl
ss
ror
add
jmp
shl
add
add
pop
rcl
and
(bad)
and
add
adc
and
into
dec
pop
sub
aam
and
je
jmp
mov
sub
sbb
xchg
inc
jg
jmp
mov
sub
mov
sbb
adc
add
aad
rol
xor
sbb
and
loope
jmp
rol
ds
inc
mov
and
cmovl
add
jmp
mov
int3
cmp
and
(bad)
inc
adc
dec
jmp
mov
sub
inc
inc
and
push
test
mov
jmp
mov
sbb
in
adc
jg
pop
enter
rol
sub
mov
movntq
mov
test
add
adc
mov
nop
in
xchg
dec
popa
xchg
add
jmp
mov
nop
arpl
add
push
shl
imul
jmp
sbb
sub
shl
and
setbe
ins
adc
pop
mov
jl
enter
push
add
push
push
jecxz
add
imul
test
into
add
dec
add
push
pop
seto
dec
sub
add
test
add
cmp
sub
inc
or
aad
jmp
mov
sahf
jno
mov
inc
movs
or
out
iret
dec
add
pop
add
add
mov
mov
out
adc
pop
add
add
inc
ror
shr
popa
add
inc
retf
pop
add
mov
mov
add
jb
imul
fcmovnbe
je
or
mov
add
sbb
arpl
mov
in
mov
push
pop
fbld
add
add
xchg
add
xlat
ror
add
cmc
add
sar
cmp
mov
mov
ss
add
into
cmps
in
pop
adc
stos
btc
aas
or
mov
popf
add
mov
or
add
add
and
arpl
add
mov
mov
add
mov
ret
push
enter
adc
add
mov
mov
loop
(bad)
pop
sete
xor
pop
xchg
and
dec
add
mov
and
xchg
add
sub
xchg
push
cdq
enter
lods
add
pop
not
pop
seto
enter
pop
pop
add
stos
mov
add
inc
add
add
call
adc
add
mov
add
nop
add
nop
ja
ja
sbb
mov
mov
imul
pop
pusha
test
test
add
dec
mov
add
adc
cmc
mov
test
jge
add
add
test
push
add
xor
xor
add
into
add
add
out
dec
rol
push
jmp
xchg
mov
pop
add
add
add
and
pop
add
mov
pop
jmp
mov
pop
mov
dec
add
add
mov
or
add
test
arpl
add
dec
add
or
jmp
in
fadd
add
(bad)
sbb
enter
jae
dec
jmp
les
dec
pop
add
mov
jmp
mov
mov
jmp
sahf
pop
xchg
int3
mov
add
push
jmp
mov
jmp
int3
push
mov
push
push
push
and
sub
jmp
push
mov
pop
push
pop
mov
push
mov
mov
pop
mov
mov
push
pop
jmp
cmp
mov
je
and
mov
jmp
call
sar
shl
jns
inc
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
ror
shl
and
js
mov
cmp
not
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
dec
mov
je
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
shl
jns
inc
mov
inc
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
and
in
push
and
mov
and
or
shl
mov
cmps
dec
and
pminub
add
add
mov
sub
xchg
pushf
adc
push
mov
or
imul
mov
call
add
add
add
inc
fdiv
add
sbb
cmp
mov
mov
adc
lods
add
add
add
ror
push
xlat
push
add
pop
and
movs
sbb
add
push
add
not
(bad)
(bad)
(bad)
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
ret
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
push
mov
push
push
push
and
sub
jmp
mov
mov
mov
mov
push
mov
mov
pop
push
mov
push
ret
add
test
jle
add
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
nop
xor
or
jmp
call
or
rol
cmp
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
xchg
dec
sar
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
(bad)
push
sbb
add
lock
and
push
das
xchg
cmp
(bad)
cwde
add
sti
sti
iret
mov
dec
add
jg
jmp
mov
sub
mov
pi2fw
fadd
add
inc
and
sti
out
stos
ror
sbb
inc
add
add
sub
and
je
in
add
add
xor
jne
mov
ins
add
add
add
push
add
mov
inc
and
jg
jmp
mov
xor
add
push
in
mov
adc
push
xchg
lods
and
sub
sub
and
test
sub
add
out
mov
cmp
aaa
mov
push
push
inc
cmp
add
xor
add
mov
dec
mov
inc
and
out
loopne
add
jmp
mov
push
mov
mov
aas
je
xor
aaa
or
and
in
mov
mov
sbb
add
packssdw
inc
and
push
push
mov
loopne
push
add
and
and
or
inc
add
stos
mov
mov
xlat
repnz
dec
mov
arpl
movzx
or
dec
and
mov
mov
rol
add
or
add
mov
push
push
sub
or
mov
dec
imul
mov
and
jl
in
sub
or
dec
and
scas
(bad)
in
jmp
scas
cmp
(bad)
int3
jmp
mov
mov
and
add
mov
mov
add
imul
xor
push
ficom
xchg
inc
and
loopne
sub
add
inc
and
inc
shl
arpl
mov
mov
std
retf
fld
add
loop
aad
rol
add
push
ror
inc
sbb
jo
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
jb
and
and
mov
dec
jmp
mov
mov
mov
mov
mov
push
mov
mov
pop
mov
mov
jmp
xchg
inc
cmp
shr
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
xchg
ror
jns
shl
shr
jmp
call
cmp
ror
test
jle
dec
test
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
xor
jo
cmp
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
loope
iret
mov
imul
add
mov
repnz
and
or
sub
out
inc
(bad)
dec
lock
or
(bad)
rol
loopne
ror
in
xchg
xchg
mov
das
out
test
es
cmp
jns
inc
and
sub
or
jecxz
jecxz
xor
int
add
pop
add
and
sub
lahf
inc
dec
fisttp
add
add
loop
jp
jecxz
jecxz
out
pop
add
add
add
add
das
mov
(bad)
mov
jecxz
pop
mov
in
lods
sub
push
mov
xor
popf
add
add
add
pop
mov
inc
mov
in
jle
sub
(bad)
dec
test
add
add
or
or
mov
and
je
jmp
mov
and
in
jbe
in
das
lds
test
add
add
data16
add
adc
cs
out
test
pop
add
rol
xchg
add
and
sub
mov
lgdtd
add
sub
and
in
xchg
inc
xor
dec
inc
pop
sbb
test
add
add
loopne
mov
mov
inc
add
mov
jmp
repnz
and
mov
adc
sub
mov
add
jmp
pop
pusha
add
enter
mov
scas
mov
ds
push
and
cmp
cmovne
jmp
mov
cld
mov
add
inc
add
xlat
push
add
add
jmp
mov
mov
fisubr
add
cmp
les
xchg
add
mov
call
inc
adc
jmp
mov
aad
jg
jno
add
dec
aaa
pusha
xlat
push
add
retf
push
add
les
lahf
aas
and
or
add
or
add
jecxz
push
mov
cmp
add
jg
daa
xchg
push
jmp
mov
mov
mov
push
and
jmp
mov
mov
pop
pop
and
sbb
(bad)
(bad)
std
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
not
jo
inc
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
or
shr
jb
and
and
xor
cmp
jmp
call
and
dec
ror
je
and
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
dec
not
test
jmp
mov
mov
mov
mov
mov
push
mov
pop
mov
jmp
shl
jo
cmp
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
inc
adc
dec
retf
cmp
fdivr
dec
dec
jns
push
adc
aas
pop
and
pusha
add
pop
sbb
mov
add
lea
mov
aam
dec
imul
mov
pusha
dec
sahf
and
pop
sbb
loop
cmp
or
hlt
fcomp
outs
sar
cmps
sbb
add
add
add
inc
sbb
sub
mov
xchg
add
clc
jmp
sub
mov
sbb
dec
add
add
mov
and
mov
(bad)
sbb
xor
scas
clc
bound
sub
mov
adc
mov
add
icebp
sub
mov
setne
pop
add
cmc
add
xor
mov
sub
mov
je
inc
mov
aam
inc
jnp
popf
pop
aas
inc
and
outs
(bad)
nop
add
add
add
add
adc
sub
add
jl
add
dec
cwde
pop
and
fstp
daa
add
and
jg
jmp
dec
jo
cmps
sbb
sub
adc
(bad)
popf
or
add
add
add
sub
mov
add
jmp
shl
and
dec
dec
(bad)
mov
mov
or
add
jmp
mov
sub
mov
or
imul
xchg
jl
jno
cmps
mov
pop
jmp
fcmovu
add
xor
mov
and
lock
and
xadd
add
adc
inc
xchg
jl
xor
sub
jp
adc
fidiv
fisttp
add
add
leave
(bad)
cld
lds
xadd
add
add
adc
(bad)
and
sub
inc
inc
jp
je
xor
add
mov
jl
inc
(bad)
jmp
test
dec
add
jmp
mov
and
sub
jmp
fidiv
sbb
add
mov
(bad)
(bad)
mov
inc
test
add
adc
add
cwde
inc
jg
fwait
ror
cmps
mov
rol
add
xor
dec
and
add
rol
inc
imul
fld
add
mov
add
rol
dec
inc
and
je
cmc
dec
add
mov
jne
loop
inc
cmp
test
lock
jmp
mov
fwait
ret
(bad)
sub
mov
adc
dec
test
add
inc
mov
push
inc
adc
mov
or
jl
add
dec
cmps
mov
dec
imul
add
jmp
fucompp
sbb
or
pop
nop
retf
inc
lds
and
dec
mov
pop
pop
add
mov
cmps
sbb
cmc
sbb
and
dec
xor
sbb
add
xor
frstor
add
add
cmc
cmc
fist
mov
loop
jg
add
iret
rcl
add
sub
add
jge
mov
js
dec
dec
jmp
stos
xchg
and
xor
cwde
lea
sbb
into
add
test
add
xor
mov
fsubr
add
push
jns
mov
lods
push
aaa
fild
mov
add
pusha
(bad)
or
add
add
push
add
add
mov
add
clc
jmp
mov
mov
mov
inc
sbb
fbld
dec
add
setne
inc
jecxz
mov
xchg
xor
add
add
jmp
mov
mov
mov
inc
ret
inc
ror
add
jb
add
inc
adc
xor
and
dec
add
jnp
inc
(bad)
fbstp
test
mov
fild
xor
not
fwait
xor
dec
dec
inc
pop
inc
push
call
jmp
mov
mov
add
cmp
fs
add
jns
or
and
add
mov
dec
xchg
pop
mov
push
pusha
lea
or
sbb
or
mov
mov
sub
call
xor
add
test
add
test
add
pop
add
add
sub
cwde
add
jmp
add
test
dec
pop
add
add
add
pop
imul
xor
add
add
add
add
fiadd
add
test
add
movs
add
jmp
cmp
add
xchg
inc
and
pop
sbb
jmp
xor
add
sbb
xor
into
test
inc
adc
sbb
cli
(bad)
call
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
rol
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
sub
jmp
push
mov
mov
push
mov
mov
mov
push
jmp
add
mov
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
jmp
call
xchg
shl
jb
add
and
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
inc
or
fnsave
mov
and
test
push
push
sub
mov
add
(bad)
mov
cmp
ret
cmp
pusha
add
ret
bound
mov
inc
and
das
ins
outs
add
stos
cdq
fld
lods
adc
sub
lds
add
mov
inc
sub
pcmpeqd
add
jae
mov
sub
scas
xchg
sete
add
inc
mov
mov
and
sub
mov
int3
in
sbb
add
sub
cmps
inc
add
jo
and
packuswb
inc
add
test
cdq
dec
pusha
inc
ja
xchg
push
add
jmp
adc
sub
mov
pandn
add
adc
add
add
xchg
imul
jae
xchg
daa
add
add
add
jmp
mov
jmp
adc
push
cmp
jecxz
inc
inc
mov
mov
add
sbb
and
mov
add
lods
pop
js
sbb
xchg
dec
xor
add
add
mov
and
xchg
adc
movs
and
mov
cli
inc
and
jmp
arpl
sub
or
cmp
adc
and
adc
mov
ret
in
inc
and
les
sbb
inc
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
cmp
xor
shr
jns
xchg
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
dec
mov
jmp
call
cmp
mov
mov
dec
jmp
push
mov
mov
mov
pop
mov
mov
mov
pop
push
ret
mov
xchg
cmp
add
jo
shr
sar
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
add
not
jo
sub
cmp
ror
not
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
mov
xchg
daa
mov
push
add
push
and
mov
mov
(bad)
(bad)
lock
or
mov
and
mov
inc
and
mov
cwde
pusha
push
mov
dec
mov
stos
cmp
inc
and
dec
xchg
(bad)
aad
pop
mov
sub
cmp
jmp
ja
and
sub
mov
adc
add
into
add
cmp
test
mov
and
jmp
cmp
add
std
dec
cmc
ds
push
push
inc
fsub
paddd
cmp
jmp
inc
inc
and
inc
fidiv
inc
push
jmp
add
add
std
ror
es
aaa
mov
mov
cmp
jmp
adc
push
mov
adc
test
add
add
dec
add
or
mov
or
pop
and
xor
stos
adc
xor
sub
inc
inc
and
je
jmp
mov
and
sbb
or
and
je
jmp
jmp
mov
adc
mov
push
and
or
fbld
jmp
mov
(bad)
and
xchg
and
test
add
add
add
cmp
cmp
cmp
mov
hlt
jmp
sar
and
jmp
test
mov
(bad)
dec
ret
(bad)
and
adc
add
dec
repnz
pop
mov
cld
pop
and
dec
int
mov
mov
mov
push
push
push
and
sub
jmp
call
add
jb
mov
cmp
not
jmp
mov
push
pop
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
jmp
ror
add
xchg
xor
jbe
dec
shr
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
or
shr
jle
xor
xchg
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
xchg
and
xchg
jl
add
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
or
retf
or
mov
mov
mov
and
add
xor
push
and
add
add
pop
add
cmp
lods
add
add
(bad)
(bad)
jo
mov
aas
inc
mov
mov
add
(bad)
ror
int3
or
inc
es
add
push
mov
add
arpl
add
add
dec
cmp
sub
mov
je
jmp
mov
xchg
mov
push
(bad)
and
mov
out
dec
test
(bad)
mov
dec
push
push
ins
xchg
xchg
test
add
pop
add
sbb
fild
mov
mov
mov
ins
cmp
cs
mov
arpl
(bad)
and
sbb
xchg
call
shl
mov
arpl
mov
mov
mov
mov
add
add
sub
inc
xchg
fild
add
mov
adc
and
(bad)
(bad)
mov
test
cdq
add
es
iret
xor
inc
or
add
ss
xor
aaa
add
inc
and
enter
add
add
or
mov
sub
mov
push
test
mov
add
out
dec
test
sub
xchg
shl
(bad)
hlt
add
mov
sub
pop
add
pop
and
add
pop
sub
add
and
ins
cmp
jmp
mov
sub
mov
das
pop
adc
jmp
xchg
test
cmp
pop
sub
mov
xchg
mov
add
add
mov
cdq
or
sbb
add
sub
mov
lds
add
mov
test
xchg
(bad)
mov
dec
fwait
xchg
push
syscall
dec
push
popa
add
cmp
pop
add
add
sub
dec
retf
and
ins
push
or
add
add
sbb
mov
and
sub
popa
sub
mov
jnp
test
iret
arpl
add
(bad)
pop
mov
sub
mov
ret
dec
add
pop
mov
fild
add
mov
sti
mov
jg
jmp
mov
sub
mov
and
mov
jmp
mov
and
add
sub
ds
and
nop
add
xchg
test
repnz
lahf
enter
scas
xor
test
add
stos
xchg
add
mov
mov
aad
shl
lods
sub
add
inc
cmp
mov
dec
or
inc
and
enter
arpl
add
add
sub
push
jg
sub
push
in
aaa
add
or
test
es
mov
mov
add
not
(bad)
add
add
cmp
ud2
lock
loop
sbb
add
add
add
mov
call
fcmovnu
add
arpl
mov
sub
mov
add
add
mov
pop
mov
sti
scas
pop
add
sub
mov
xchg
adc
inc
rol
add
add
add
xor
add
add
ins
test
out
add
cs
arpl
test
test
push
jg
push
test
mov
add
jmp
cmp
xchg
mov
push
imul
and
add
into
add
add
xor
test
add
add
push
jg
add
test
mov
mov
add
add
sub
adc
cmp
add
add
add
pop
fnstcw
sbb
mov
call
add
cmp
enter
out
cwde
cdq
add
loop
xchg
enter
inc
cwde
fistp
add
(bad)
jmp
ja
add
add
push
add
cwde
pop
add
add
test
push
add
xor
imul
mov
cdq
jmp
mov
(bad)
push
and
add
add
popa
add
mov
cwde
add
add
loope
add
dec
cmp
arpl
jno
bound
dec
stos
mov
or
add
mov
add
mov
sti
sar
mov
cmps
mov
mov
sbb
ror
xchg
mov
pushf
add
pop
mov
mov
mov
and
add
mov
sbb
sbb
jmp
mov
jmp
aam
scas
pushf
mov
push
iret
push
mov
(bad)
pop
add
mov
(bad)
cwde
and
xchg
mov
jl
jmp
mov
mov
ficom
add
mov
mov
mov
sub
arpl
mov
add
mov
xlat
sub
mov
and
fistp
pop
add
(bad)
xor
add
mov
data16
(bad)
(bad)
mov
out
xchg
add
sbb
mov
cmp
test
mov
arpl
out
add
hlt
pop
call
test
sbb
test
test
fistp
add
enter
add
add
cmp
push
(bad)
mov
out
cwde
cdq
add
or
jb
add
mov
mov
mov
add
mov
mov
mov
mov
das
add
add
or
or
mov
add
sub
aaa
std
dec
jo
push
stos
pushf
mov
add
add
inc
add
add
sub
call
cmp
mov
push
mov
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
ror
cmp
xchg
mov
jae
sar
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
not
not
dec
jmp
call
and
cmp
add
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
dec
or
inc
jb
and
shr
xchg
jmp
mov
push
mov
push
pop
mov
pop
mov
push
mov
mov
jmp
sar
not
jno
sar
mov
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
and
add
int3
ret
add
ret
push
add
sar
and
add
xchg
xlat
(bad)
jmp
mov
mov
movs
push
cpuid
fucom
or
repnz
xor
add
cmp
loop
dec
stos
sti
sbb
adc
add
mov
rol
cmp
test
movs
push
add
imul
movs
rol
push
inc
and
add
arpl
test
and
sbb
cmp
mov
or
test
mov
lods
and
add
retf
add
arpl
add
cwde
ffree
sbb
mov
add
push
jmp
mov
sbb
mov
dec
addr16
arpl
cmp
add
call
mov
add
mov
loop
pushf
test
sbb
rol
and
add
add
mov
mov
popf
ja
ror
add
stos
(bad)
pop
add
or
add
imul
xchg
out
retf
arpl
mov
inc
hlt
add
add
mov
and
fistp
and
xor
out
and
sbb
add
(bad)
ins
add
retf
add
mov
and
add
mov
aad
inc
and
test
fild
add
(bad)
adc
add
test
add
sbb
test
add
add
in
jnp
mov
jmp
mov
hlt
add
fild
mov
sub
das
inc
sbb
retf
add
test
sub
mov
sti
mov
(bad)
add
add
or
mov
mov
mov
add
mov
retf
int
call
mov
and
add
or
push
xchg
inc
movs
jl
jmp
ret
jmp
call
add
pop
adc
mov
js
and
imul
test
mov
and
xchg
je
mov
mov
inc
hlt
add
add
add
fild
sub
(bad)
xchg
mov
add
test
retf
arpl
adc
or
cmp
and
jg
jae
mov
and
movs
add
sub
loop
and
jg
jmp
mov
out
arpl
add
xor
add
cmp
das
test
mov
adc
(bad)
mul
xchg
add
test
add
add
mov
xchg
adc
scas
sub
mov
sbb
and
add
retf
dec
gs
xchg
cmp
and
je
jmp
sub
mov
mov
mov
je
jmp
mov
sub
int
mov
add
mov
and
add
add
dec
pusha
dec
mov
and
int3
test
add
retf
jmp
mov
mov
out
out
loopne
dec
add
xchg
mov
and
fs
out
push
test
mov
je
jmp
mov
adc
add
sub
loop
and
setle
pushf
retf
mov
repz
add
imul
fisub
lods
test
inc
cmp
and
add
or
ins
mov
ds
add
mov
add
add
add
aad
sub
xor
push
add
add
imul
xchg
lahf
sbb
(bad)
out
add
mov
repz
sbb
mov
add
sub
test
setno
add
mov
sub
retf
arpl
or
jp
inc
mov
cmps
push
add
mov
test
out
xor
inc
and
bsr
inc
sbb
fbstp
adc
jp
mov
out
les
xchg
mov
mov
xor
lock
test
add
ins
movs
push
or
add
imul
inc
inc
jb
dec
cli
add
jmp
test
add
imul
mov
and
add
xor
mov
mov
ret
add
mov
and
rdtsc
pop
add
xlat
lods
push
call
add
push
sub
mov
lods
setle
and
mov
lahf
(bad)
in
icebp
mov
sub
mov
cmp
test
mov
pop
add
test
add
retf
mov
(bad)
xor
add
xlat
lahf
(bad)
icebp
icebp
jmp
addr16
mov
mov
rcr
add
mov
mov
mov
jmp
add
sbb
add
movs
aaa
loope
xchg
jmp
mov
mov
mov
enter
add
sqrtps
es
test
adc
(bad)
(bad)
mov
mov
jne
cmp
or
mov
and
adc
add
dec
lods
jecxz
out
fild
cmp
jmp
movs
call
pusha
push
or
imul
popa
mov
mov
(bad)
out
and
ret
add
(bad)
fbld
cwde
add
mov
inc
mov
jmp
sbb
pop
ins
int3
mov
mov
and
cdq
idiv
and
sbb
and
int3
inc
add
cmp
pop
mov
dec
cli
into
mov
out
add
add
sahf
mov
mov
(bad)
mov
sar
add
xor
xchg
lock
fist
push
movs
add
mov
jmp
inc
test
add
mov
add
add
call
cmp
push
or
jo
sub
xchg
or
mov
shr
mov
add
mov
ds
movs
push
add
add
mov
enter
mov
loop
leave
or
and
mov
inc
fidiv
dec
jmp
mov
or
jle
sub
add
mov
xchg
pop
inc
add
cmp
add
loop
xchg
cmp
lahf
add
inc
out
fild
cmp
add
gs
mov
test
jmp
lea
push
(bad)
mov
add
and
retf
arpl
mov
push
cld
ds
call
test
add
add
retf
add
sub
pusha
mov
pop
sbb
add
ret
jmp
test
add
xchg
cmc
ret
in
test
(bad)
dec
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
add
pop
ret
mov
mov
call
mov
jmp
mov
jmp
push
mov
push
push
push
and
sub
jmp
call
xchg
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
and
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
mov
jle
inc
rol
cmp
inc
not
jmp
push
pop
mov
mov
push
mov
mov
mov
mov
mov
mov
pop
mov
jmp
xchg
ror
mov
jl
add
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
mov
jb
xor
test
test
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
add
ret
adc
out
mov
add
add
or
add
mov
mov
jp
xor
(bad)
(bad)
(bad)
dec
stos
xor
test
fadd
add
add
xor
or
add
mov
add
test
sbb
adc
popf
retf
jmp
mov
and
pop
loop
cmc
mov
lds
popa
push
add
test
ins
add
(bad)
add
test
jmp
dec
inc
mov
mov
mov
add
stos
mov
add
sub
stos
jns
xchg
movs
add
test
outs
pop
jmp
mov
mov
and
add
psubb
stos
add
add
add
mov
sub
push
data16
add
add
xchg
add
bound
push
mov
les
stc
cmps
xor
cmove
add
stos
add
add
fsub
daa
jp
sbb
mov
and
add
test
add
jmp
mov
and
add
add
mov
sbb
add
add
imul
shl
sub
imul
jmp
add
mov
and
movs
test
add
loop
mov
test
pop
add
sub
mov
pavgb
ins
add
pop
jg
add
and
add
shl
test
add
inc
mov
test
inc
add
add
mov
jg
mov
add
out
jp
jg
jmp
cmc
sbb
test
push
test
and
loop
add
or
dec
pop
add
add
add
push
rol
mov
cmp
popf
inc
repz
wrmsr
pop
loop
mov
fcomp
inc
and
jg
mov
outs
ins
mov
jp
jmp
(bad)
push
xor
and
mov
add
add
retf
popf
add
mov
ret
add
sub
push
add
add
inc
add
add
test
push
add
sub
in
inc
push
push
lock
add
add
jmp
adc
adc
lods
sub
inc
inc
push
sub
(bad)
pop
jmp
mov
add
mov
psubsw
jmp
add
adc
inc
xor
movs
mov
xor
add
or
std
add
int3
push
mov
arpl
add
jmp
add
add
(bad)
dec
je
mov
loop
add
and
add
and
push
mov
je
inc
dec
cmp
call
jmp
pop
xlat
cdq
mov
lods
add
jnp
movs
and
psllq
stos
add
repz
imul
dec
cwde
mov
je
xchg
ins
pop
mov
(bad)
xchg
test
inc
sbb
test
add
cmp
add
mov
(bad)
and
je
jmp
mov
sub
mov
sbb
push
add
call
test
pop
add
mov
movs
push
mov
and
je
jmp
mov
and
ja
sub
cmp
mov
mov
add
jmp
mov
jl
shr
inc
and
jo
push
add
xchg
mov
ss
mov
xchg
and
fsub
sbb
and
jbe
and
add
add
mov
por
add
add
jmp
sub
into
ficomp
retf
mov
cmp
cmove
mov
dec
add
add
cs
add
mov
rcl
dec
cmps
pop
add
add
add
inc
shl
test
add
jge
mov
pusha
fcmovnbe
inc
test
add
loop
pop
ins
add
lds
popa
add
jmp
(bad)
call
add
je
jmp
call
pop
mov
add
test
adc
inc
dec
push
add
inc
and
inc
mov
(bad)
dec
pop
cmp
push
mov
cmp
arpl
mov
add
pop
xchg
imul
and
add
push
loop
fadd
retf
mov
mov
and
xor
add
mov
or
std
mov
fmul
mov
mov
(bad)
jmp
out
test
stos
cmp
pop
and
xchg
dec
retf
and
add
mov
and
add
stos
fnstcw
loop
mov
call
dec
retf
ins
mul
sti
and
jmp
add
mov
add
popf
pop
sbb
stos
xor
fadd
je
loop
and
add
mov
add
ja
test
mov
xor
xor
and
ja
mov
adc
add
loop
and
xchg
sar
leave
sub
push
outs
add
add
mov
add
add
push
es
hlt
fwait
cmp
retf
add
popf
test
imul
dec
add
fsubr
ja
add
imul
call
(bad)
jns
jmp
ss
xchg
pop
mov
lea
mov
pop
pop
push
xchg
test
fidiv
(bad)
shr
cmp
data16
or
and
ss
call
ins
mov
inc
and
jge
mov
xor
out
mov
dec
sahf
(bad)
stc
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
or
or
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shl
xor
and
js
xor
sub
cmp
jmp
push
mov
pop
mov
mov
mov
mov
mov
mov
push
mov
jmp
sar
sub
rol
jne
inc
sar
sar
jmp
call
test
mov
xor
jae
and
inc
and
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lds
inc
push
adc
or
stc
and
jp
test
xor
rol
and
mov
lds
aas
loope
es
mov
mov
mov
jp
test
dec
inc
and
call
mov
and
mov
mov
mov
sti
(bad)
sbb
and
call
hlt
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
cmp
inc
xchg
test
jg
mov
shr
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
push
pop
mov
jmp
dec
shr
jg
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xchg
ror
dec
add
jae
not
xchg
sub
sub
jmp
call
shl
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
push
mov
fild
add
mov
fild
add
mov
adc
push
jmp
dec
fild
push
or
mov
sbb
mov
inc
mov
xchg
cmc
lods
add
jb
add
and
push
lods
push
fs
mov
pmuludq
add
push
push
inc
and
sub
mov
mov
(bad)
aad
jb
jmp
mov
sub
idiv
movs
sub
test
add
add
inc
dec
cmp
mov
and
(bad)
jb
jp
jmp
cmc
aas
movs
cmp
inc
inc
and
je
jmp
adc
and
sub
mov
adc
dec
add
push
loop
mov
sbb
fs
mov
inc
pop
cmp
mov
inc
add
add
nop
inc
jnp
add
mov
and
mov
pop
jle
add
xchg
add
ror
add
add
mov
dec
add
jns
mov
xchg
xchg
add
add
jp
add
add
add
inc
and
xchg
push
(bad)
push
push
and
ucomiss
mov
call
mov
pop
icebp
aas
and
mov
mov
call
mov
jle
jnp
add
add
movzx
or
dec
jmp
sub
add
imul
xor
jge
(bad)
add
outs
inc
mov
add
lock
mov
cmp
mov
inc
shl
push
push
cmp
dec
add
(bad)
call
mov
xchg
or
std
dec
inc
and
cwde
aaa
ror
iret
fistp
ds
out
cwde
jp
jl
sub
pushf
mov
jnp
add
lea
push
pop
mov
dec
pop
test
add
add
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
shl
mov
sub
sub
shl
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
call
mov
mov
cmp
cmovne
mov
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
seta
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
sub
add
add
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
add
sub
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
shl
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
mov
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
shl
jb
test
rol
jmp
mov
push
mov
pop
push
pop
mov
push
mov
mov
mov
ret
sar
cmp
not
xchg
jmp
call
shr
not
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
xor
sub
jno
dec
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
shr
ja
and
sub
rol
dec
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
jo
ror
mov
dec
jne
data16
mov
stos
test
pop
jl
add
add
inc
and
mov
add
and
test
or
mov
mov
mov
inc
and
das
dec
add
add
xor
inc
and
sub
adc
iret
ins
movd
in
jmp
sub
cmp
inc
and
jg
jmp
mov
and
mov
arpl
mov
(bad)
lock
add
sub
cmp
je
add
out
inc
adc
cmp
add
add
inc
pop
adc
xlat
nop
test
and
test
add
mov
dec
xor
inc
xchg
pop
jg
test
mov
mov
mov
stos
mov
xor
add
mov
call
gs
(bad)
sbb
test
cli
and
cmp
dec
scas
enter
test
add
add
pop
jge
retf
xchg
sub
mov
mov
add
in
fistp
mov
sub
mov
je
mov
xor
add
xor
inc
bound
fs
and
or
add
bound
pop
and
inc
and
psubw
add
add
mov
ret
add
mov
jg
jmp
out
inc
and
sub
mov
dec
(bad)
add
adc
fwait
and
push
mov
ins
cmp
(bad)
add
jge
add
dec
sbb
sub
pop
mov
add
jmp
mov
je
jl
cld
shl
add
jmp
rcr
add
add
mov
sub
mov
je
jmp
pop
sbb
call
fs
fcomi
test
jmp
add
add
outs
fwait
and
or
lock
cmc
aam
adc
add
test
add
push
scas
and
sub
ins
inc
sti
fs
jmp
jmp
lea
push
mov
and
add
cmp
shr
into
inc
add
add
cmp
inc
cmp
inc
adc
inc
add
inc
dec
inc
and
(bad)
frstor
call
push
pop
shr
outs
push
sti
push
in
outs
add
add
add
jge
add
mov
adc
test
packuswb
fwait
pop
pop
dec
int3
add
dec
push
pop
call
and
add
add
add
inc
pop
or
and
jmp
mov
das
mov
gs
xchg
add
test
add
add
sbb
add
add
in
inc
in
push
add
cmps
es
xchg
and
xor
and
jge
ret
retf
in
xor
jae
stos
pop
jmp
push
add
cmp
shl
jns
xor
fs
jmp
mov
mov
add
add
outs
mov
mov
add
mov
add
loop
pop
gs
pop
add
mov
adc
add
jge
gs
pop
pop
sbb
ret
add
add
cmp
dec
push
addr16
arpl
jmp
mov
push
sbb
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
mov
jo
mov
mov
cmp
xor
jmp
push
mov
mov
pop
push
pop
push
mov
pop
mov
push
pop
mov
mov
jmp
not
and
sub
not
jmp
call
and
sub
xor
ror
je
shl
xchg
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
jne
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xor
rol
js
and
rol
not
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
arpl
(bad)
in
and
ficomp
js
mov
adc
jns
bound
cmc
icebp
mov
(bad)
shl
add
add
add
(bad)
cdq
and
add
out
cwde
(bad)
mov
or
fisttp
add
inc
add
ins
add
mov
sbb
add
mov
and
mov
stc
sub
cwde
hlt
pop
mov
out
inc
mov
add
test
add
add
add
std
inc
jo
dec
ins
add
mov
mov
add
pop
pop
sub
add
adc
test
sub
fisttp
mov
xor
add
das
mov
add
push
add
add
sbb
add
sbb
add
js
(bad)
sti
outs
mov
loope
nop
adc
add
pop
lods
test
sbb
add
jns
test
or
add
lods
add
add
add
push
or
sub
jge
and
pop
add
sub
jmp
mov
sub
in
and
add
icebp
mov
add
push
and
stc
cmp
out
add
mov
pop
and
fstp
add
std
push
sub
mov
and
repz
mov
add
add
add
mov
add
adc
mov
int
mov
add
add
das
std
popf
xchg
and
add
sub
fsub
adc
add
retf
add
add
es
mov
pop
(bad)
outs
out
add
jmp
popf
xchg
and
add
add
mov
mov
call
and
add
add
sub
mov
add
ficom
add
(bad)
std
push
push
add
ins
add
and
adc
sub
adc
and
adc
sub
mov
loopne
add
push
mov
add
cmc
mov
sub
mov
add
jg
loope
and
add
add
sub
scas
test
inc
add
scas
(bad)
adc
add
std
add
ins
cmc
fsubr
movs
xor
aam
mov
int3
add
jmp
mov
sub
mov
dec
inc
mov
adc
std
jmp
popf
and
and
and
push
add
add
xor
out
cwde
hlt
mov
and
add
add
sub
jg
jmp
mov
sub
xor
and
add
cwde
sti
pop
adc
add
mov
and
adc
das
sar
xor
and
add
(bad)
and
add
add
add
fiadd
cmp
pop
and
add
out
movhps
pop
add
fst
(bad)
and
mov
dec
push
mov
cdq
add
add
imul
add
loop
adc
mov
push
xlat
mov
jmp
jg
and
add
pop
or
or
mov
das
std
sbb
in
add
add
test
sbb
fucomi
xor
xchg
sub
fild
and
pop
stos
sysret
add
add
pop
es
test
inc
add
das
cmps
test
(bad)
es
cmc
add
add
icebp
lods
mov
sbb
push
add
mov
dec
add
push
pop
add
add
add
mov
sub
mov
setg
add
add
add
add
cs
sub
and
add
xor
add
cld
or
frstor
test
inc
cmp
cli
adc
test
(bad)
and
add
ins
add
aad
scas
add
sub
mov
lods
call
add
add
add
sub
mov
and
add
fst
add
add
add
movs
jns
push
add
add
and
sub
mov
call
and
out
mov
pop
add
add
push
test
inc
add
add
jmp
mov
add
sbb
lahf
sbb
jne
test
out
add
(bad)
push
or
adc
mov
je
(bad)
retf
sub
ret
add
push
jmp
mov
sub
mov
sub
and
rol
and
add
add
ficomp
fimul
cdq
stos
and
add
std
sbb
jmp
jp
and
scas
out
xor
pop
mov
add
pop
jecxz
pop
es
add
sub
ror
pop
push
mov
or
jmp
fs
cmp
out
test
in
cwde
add
(bad)
lahf
or
pop
mov
fstp
sbb
push
push
sub
jl
and
add
icebp
mov
add
add
xor
sbb
add
and
hlt
add
(bad)
daa
or
pop
iret
fstp
data16
add
sub
cmps
jns
pusha
add
add
mov
add
sbb
add
lods
mov
dec
add
add
mov
shrd
add
add
mov
add
sub
mov
setns
add
add
add
sbb
nop
imul
xchg
and
fild
and
pop
ret
or
add
add
and
add
cwde
outs
ret
out
test
lods
add
push
setns
or
cmc
jmp
jp
mov
in
xor
dec
push
pushf
test
fbld
out
xchg
(bad)
mov
add
add
mov
lock
fisub
pop
sub
and
cmc
add
test
add
sub
inc
fild
add
test
ss
cwde
sbb
lods
test
stos
outs
sub
xor
add
std
sbb
sbb
add
sbb
add
add
dec
push
pop
add
add
add
push
sbb
sbb
add
outs
stos
retf
mov
cmp
and
push
add
add
ins
cmc
jp
and
add
out
sbb
outs
cmps
sub
add
sbb
cwde
hlt
out
sahf
sub
cwde
leave
and
or
add
imul
test
add
bound
lods
out
xor
adc
and
add
mov
and
add
fst
mov
add
add
call
test
div
lods
loopne
jbe
and
add
test
and
add
cwde
sub
mov
data16
adc
add
push
push
push
mov
sub
js
and
in
add
cmp
dec
adc
cmps
retf
add
je
ins
sbb
inc
add
add
jmp
mov
sub
mov
mov
add
and
add
cwde
add
pop
pop
or
stos
and
add
add
sbb
xlat
loop
push
mov
(bad)
mov
in
pop
pop
jg
jmp
leave
test
aam
mov
or
cmc
icebp
movaps
into
or
xor
fisub
add
mov
jg
jmp
mov
shl
mov
lahf
and
test
or
cmp
mov
sub
sbb
(bad)
xlat
pop
add
fstp
and
add
std
sub
mov
mov
add
push
pop
and
sbb
or
push
ins
xor
clc
push
add
pop
inc
mov
xor
add
add
jl
and
add
add
test
add
jmp
mov
sub
mov
lock
pop
rcl
and
inc
add
das
std
add
push
add
and
and
and
add
test
sbb
add
stos
rol
add
add
mov
cmp
shl
mov
push
add
add
lods
add
mov
push
sub
jb
add
and
cwde
add
mov
dec
das
xor
add
mov
add
popf
xchg
and
push
add
sub
mov
fdiv
add
out
xor
mov
or
and
mov
test
daa
add
ror
dec
adc
add
mov
add
rcr
bound
and
add
xor
and
add
mov
sub
test
add
push
mov
inc
mov
and
inc
push
sub
lahf
test
int3
ins
cmc
add
test
mov
mov
or
adc
movhps
add
add
mov
sub
lahf
test
shr
test
or
add
nop
or
mov
pop
inc
iret
stos
push
cmps
and
add
cwde
jg
jmp
mov
lock
cdq
test
cs
je
inc
add
mov
add
and
add
sub
adc
add
and
pop
add
iret
jg
test
add
sbb
das
jmp
mov
add
mov
mov
add
mov
out
xor
mov
sbb
and
ret
sbb
rcl
and
add
add
add
xchg
and
push
add
lds
and
xor
add
stos
adc
add
gs
sbb
hlt
add
mov
rol
das
or
adc
push
push
sub
mov
shl
(bad)
int3
add
add
push
and
and
add
lods
mov
test
pushf
add
and
push
or
or
mov
mov
fsubr
xchg
mov
mov
push
add
mov
ins
add
jmp
es
sub
movs
inc
inc
cmps
sbb
or
pop
xchg
inc
mov
add
add
mov
ins
cli
(bad)
rol
add
jmp
mov
sub
pushf
mov
and
cwde
sti
cmp
add
or
cwde
leave
and
aaa
(bad)
push
add
jl
and
add
add
xor
or
add
sub
jge
and
push
add
test
add
add
add
cmp
and
add
add
(bad)
mov
out
add
add
xor
or
pop
jmp
daa
jge
and
add
add
mov
arpl
mov
in
push
push
sub
or
cmp
add
mov
add
add
and
push
add
and
test
in
cmc
add
or
hlt
paddusw
add
test
push
or
(bad)
and
lods
out
fadd
push
add
scas
test
push
in
inc
cmp
test
push
add
je
jno
dec
add
mov
aaa
add
push
sub
in
and
add
lods
punpcklbw
xor
add
sbb
add
mov
nop
jmp
cld
inc
mov
sldt
(bad)
push
push
add
mov
shr
add
and
mov
add
add
add
retf
add
mov
sub
mov
rcr
pop
or
add
and
add
mov
cmc
out
add
or
xor
out
cwde
hlt
mov
sub
mov
scas
test
sbb
std
push
popf
and
mov
xor
add
sub
and
add
jno
hlt
add
mov
sub
mov
or
sti
stos
out
xor
add
and
ret
stc
dec
add
and
(bad)
and
cwde
add
hlt
add
add
add
lock
stos
or
and
add
adc
stos
xchg
adc
push
(bad)
mov
test
sbb
mov
and
add
adc
add
jmp
adc
sbb
pop
add
inc
or
mov
dec
or
add
lods
test
sbb
add
pushf
test
(bad)
jg
add
jmp
lods
pop
and
inc
add
hlt
mov
jg
inc
test
jmp
and
xchg
adc
(bad)
adc
cwde
hlt
out
pop
es
adc
shr
xchg
and
ins
add
movd
add
fadd
push
add
scas
daa
xor
add
and
jge
and
fstp
std
push
jmp
mov
sub
mov
punpcklbw
push
and
adc
or
(bad)
mov
or
adc
fucomp
cwde
add
inc
sub
sub
lahf
test
jno
add
movaps
and
pop
pop
sbb
add
mov
rcl
mov
xchg
(bad)
mov
jne
std
push
popf
test
sbb
add
inc
mov
mov
mov
test
pop
add
add
and
sub
mov
rcr
lods
add
(bad)
cmp
add
popf
xchg
and
add
ins
sub
data16
pop
add
add
mov
jmp
mov
pop
sub
retf
and
or
add
repnz
ins
adc
lock
add
add
js
xor
pushf
test
add
add
cmps
aas
push
cwde
add
sub
and
add
pop
je
clc
mov
and
adc
das
repnz
xchg
or
push
in
shr
jp
and
add
adc
and
add
add
test
xlat
add
jmp
mov
pop
pop
add
or
ror
outs
mov
repnz
test
mov
add
out
sub
lods
test
sub
mov
addr16
hlt
mov
sub
mov
je
dec
add
out
add
sbb
mov
in
add
(bad)
xor
sub
add
add
add
mov
and
adc
std
je
test
test
repnz
or
pusha
fimul
or
shl
jmp
shl
add
mov
je
jmp
mov
and
add
icebp
sub
fadd
lods
test
outs
daa
add
mov
sub
retf
test
test
sbb
add
clc
icebp
icebp
lods
mov
dec
add
pop
mov
hlt
je
jmp
mov
pop
add
jp
mov
sbb
push
ins
add
and
fisub
add
std
mov
cmp
add
je
jmp
fwait
stos
(bad)
adc
(bad)
retf
vmread
and
out
add
adc
out
cwde
jg
and
add
sub
mov
xchg
mov
add
push
add
out
aad
in
add
and
xchg
sub
add
and
sbb
stc
add
jmp
lods
pop
mov
sub
mov
add
test
ins
add
add
add
and
in
xor
cmp
mov
je
jmp
mov
pop
mov
fistp
mov
cmc
icebp
mov
add
mov
and
sbb
out
add
mov
add
mov
sub
push
mov
fsub
sar
mov
mov
add
xor
add
out
mov
sub
scas
test
xor
mov
add
jmp
mov
inc
ret
mov
and
add
sub
pmaxub
add
rcr
add
add
push
sbb
add
add
sete
add
add
repnz
adc
adc
int3
xchg
hlt
add
rcr
add
add
sub
mov
and
add
add
std
push
test
enter
mov
add
jmp
mov
sub
shl
adc
stos
and
add
sbb
lods
add
push
in
or
fsub
add
pop
push
out
add
pop
test
rol
outs
(bad)
xchg
cmp
(bad)
test
int3
add
add
add
sub
mov
xcrypt-ofb
cmps
outs
or
add
and
fwait
add
sbb
and
std
add
setb
add
add
ins
cmc
jp
retf
sub
ret
dec
mov
test
add
cmp
cwde
add
and
aaa
inc
push
sub
mov
popf
cmp
add
daa
xor
fisub
add
fist
dec
rol
je
jno
inc
add
sub
sub
mov
shl
test
movs
out
xor
and
push
or
lock
xchg
add
cwde
jae
jmp
adc
test
add
add
lahf
inc
and
bound
mov
xor
sbb
mov
hlt
push
addr16
and
je
jmp
mov
add
cmp
mov
or
xchg
(bad)
icebp
lods
push
sub
add
and
cmp
cdq
and
sub
inc
cdq
hlt
pop
jmp
mov
mov
(bad)
jne
lahf
inc
and
or
(bad)
or
add
xor
or
shr
sub
addr16
nop
add
add
fadd
add
test
fiadd
cwde
sub
mov
and
bts
add
inc
add
add
icebp
add
mov
cmp
mov
frstor
add
pop
pop
sub
mov
dec
je
jmp
mov
sub
mov
inc
je
test
test
add
xor
ins
pushf
inc
and
je
jmp
jg
jge
add
add
mov
shufps
adc
jmp
mov
sub
mov
(bad)
fcomi
add
inc
sbb
out
add
and
dec
imul
or
pop
pop
es
or
inc
xchg
mov
cmp
mov
add
mov
sub
add
sbb
sub
add
in
dec
retf
or
add
sbb
and
add
add
jo
push
add
add
add
mov
pop
or
add
(bad)
and
push
outs
cmp
mov
cmp
rcl
mov
xchg
add
mov
jmp
mov
mov
daa
jnp
rol
add
inc
leave
push
cmps
and
add
cwde
jmp
mov
mov
add
fwait
add
lock
add
mov
jmp
xor
mov
cli
or
sbb
dec
outs
sub
fld
retf
cwde
hlt
mov
add
and
fwait
inc
add
adc
adc
mov
push
add
cmc
add
ins
ret
add
add
add
or
in
cwde
mov
lahf
pop
aad
cmp
das
std
test
rcpps
mov
shr
repnz
out
fcomp
add
daa
xor
or
add
or
add
add
push
add
add
inc
add
mov
mov
mov
jl
push
push
dec
dec
add
sub
mov
rol
shl
mov
mov
mov
mov
push
mov
cmp
adc
repnz
mov
in
(bad)
div
lods
out
mov
mov
sub
pop
and
adc
mov
mov
call
stos
fcom
xlat
push
add
or
dec
push
or
std
push
mov
add
pop
add
or
adc
xchg
or
adc
sub
add
mov
fwait
add
adc
add
xchg
mov
rol
add
add
mov
and
mov
ror
mov
scas
dec
stc
adc
and
call
add
add
adc
mov
adc
scas
sar
cs
dec
stc
cwde
mov
add
cmovl
mov
add
add
add
mov
push
cmps
retf
add
out
lods
or
add
mov
jmp
rol
mov
cmp
add
mov
sub
jmp
push
es
in
push
add
and
and
dec
and
and
add
mov
movs
inc
add
jge
pop
lea
js
and
scas
out
xor
adc
mov
mov
cwde
mov
add
in
mov
jmp
add
mov
sub
add
fcom
push
and
shr
hlt
add
inc
push
es
pop
mov
mov
and
add
(bad)
clc
inc
in
push
add
add
aad
pop
xchg
cmp
add
fwait
jo
mov
and
mov
jno
add
jmp
pop
(bad)
and
mov
dec
in
(bad)
jmp
nop
lods
movs
dec
mov
cld
fisttp
frstor
lea
lea
mov
and
dec
rol
call
loopne
jmp
mov
add
inc
ret
add
xchg
and
add
add
push
add
mov
add
and
fimul
fld
test
loope
ror
cwde
jmp
mov
stc
inc
pop
std
push
scas
inc
mov
shr
repnz
push
test
cmp
push
add
sbb
inc
add
stc
daa
push
mov
push
or
cwde
inc
scas
mov
and
sahf
xchg
xor
jge
test
out
xor
and
clc
mov
mov
icebp
ret
inc
out
test
(bad)
push
add
inc
leave
mov
jno
test
add
add
adc
mov
jmp
(bad)
xchg
and
add
or
ins
add
repnz
add
adc
and
adc
das
jmp
lea
loopne
loopne
inc
add
mov
cmp
add
add
add
lods
mov
pop
rol
jp
adc
hlt
add
pop
es
and
icebp
mov
xchg
pop
pop
mov
popf
add
push
test
cmovne
test
add
add
lock
fistp
mov
cwde
jmp
mov
mov
(bad)
ds
(bad)
sub
ss
add
and
add
mov
mov
fadd
add
jmp
mov
mov
call
sub
mov
adc
add
sub
add
jmp
xchg
mov
add
pop
push
jmp
mov
jge
and
add
xor
popf
add
scas
cld
or
push
add
push
add
or
and
and
and
and
pop
ds
outs
xor
jnp
enter
add
push
not
add
sub
jl
and
scas
add
jmp
mov
mov
and
mov
add
xchg
outs
jle
cmp
add
pop
pop
sub
ret
mov
mov
in
daa
lock
adc
pushf
xor
xchg
sub
add
out
test
xchg
mov
rol
stc
or
fadd
ror
add
out
add
mov
retf
cld
jmp
mov
stos
test
sub
cwde
add
out
add
add
test
das
add
in
call
inc
add
pop
adc
sub
add
add
mov
pusha
daa
adc
add
add
cmp
rol
mov
and
add
and
movs
pushf
hlt
add
test
mov
rcpps
mov
jmp
dec
js
push
add
cld
jmp
add
add
sub
add
fld
scas
add
add
or
stc
jns
sbb
add
push
push
add
jne
sub
add
inc
cmp
xor
int
lods
daa
xor
add
(bad)
leave
pushf
add
push
xchg
fist
mov
call
sahf
pop
inc
aaa
dec
pop
add
inc
add
sub
add
inc
add
(bad)
xchg
and
add
push
or
dec
dec
jmp
mov
mov
and
or
add
sub
das
mov
out
xchg
add
add
cdq
stos
fnstcw
add
add
mov
or
mov
add
aam
mov
xchg
xlat
and
or
in
add
test
frstor
pop
fst
test
pushf
and
add
test
(bad)
call
sub
mov
add
mov
mov
xor
add
fwait
stos
and
add
push
mov
mov
cmc
jno
add
jmp
add
mov
call
and
or
and
xlat
(bad)
(bad)
fwait
hlt
pop
mov
add
add
pop
mov
sbb
idiv
jmp
mov
mov
cmp
loopne
xchg
lods
test
xor
and
add
mov
shl
stc
jo
leave
cld
inc
add
push
xchg
adc
retf
add
xor
sub
add
les
nop
jmp
sbb
or
mov
jmp
mov
mov
mov
jmp
call
push
push
dec
pop
pop
imul
repz
push
and
push
sbb
lea
pusha
in
push
add
mov
inc
add
pop
add
and
fiadd
cwde
retf
movs
xor
dec
or
jno
std
(bad)
cmp
in
and
dec
mov
retf
sbb
pusha
add
sub
add
jmp
mov
mov
je
cwde
inc
mov
call
test
aad
add
and
sub
add
lods
add
mov
sub
push
and
jmp
adc
add
add
add
jo
xor
add
test
inc
mov
add
mov
imul
push
and
xor
stos
add
and
add
add
and
aam
add
or
add
test
and
or
mov
mov
cmp
push
add
push
dec
inc
add
and
pop
fbstp
add
repnz
mov
dec
push
inc
pop
bnd
(bad)
frstor
add
fst
iret
addr16
push
cs
lea
xor
push
add
add
and
mov
jno
sub
lods
out
sub
jl
sub
xor
out
cwde
hlt
rcr
push
add
fnsave
mov
jmp
popf
and
test
(bad)
inc
test
add
and
iret
pop
pop
(bad)
fwait
hlt
pop
enter
jmp
pop
mov
add
add
rol
ins
cdq
dec
mov
and
add
(bad)
cld
call
or
frstor
add
mov
iret
xchg
fld
add
test
sub
std
dec
add
add
mov
jl
aad
add
cld
inc
add
out
add
xor
mov
daa
jmp
mov
iret
xchg
add
cwde
leave
and
pop
inc
push
popf
add
stc
lods
add
repnz
add
add
push
test
inc
add
in
in
mov
mov
cdq
and
stos
mov
adc
(bad)
stos
fnstcw
push
jmp
test
add
add
jp
jmp
int3
int3
int3
push
mov
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
mov
ja
add
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xchg
test
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
mov
sub
jmp
call
xchg
ror
mov
js
add
cmp
jmp
push
pop
mov
push
mov
pop
mov
push
jmp
or
mov
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
or
sbb
dec
and
add
add
add
std
fisub
xchg
add
sub
and
add
xor
and
sub
and
add
aaa
mov
lock
bound
jmp
mov
jnp
test
and
ret
push
test
xchg
jb
fstp
add
pushf
xor
data16
sub
(bad)
jg
or
add
add
and
cmp
add
test
add
add
sbb
mov
enter
test
mov
lea
mov
lahf
add
jg
jmp
mov
sub
mov
lfs
add
add
mov
add
sub
mov
hlt
sub
bound
(bad)
and
add
push
movs
add
fld
int3
pop
cmp
mov
pushf
cmp
pop
and
addr16
add
mov
add
aaa
sub
mov
jg
mov
cmp
movs
fld
call
mov
and
add
xchg
jge
outs
add
lahf
add
clc
inc
jns
fidivr
lods
push
movs
add
(bad)
jne
lahf
add
add
fiadd
mov
sub
mov
(bad)
ret
add
cld
jmp
mov
sub
(bad)
shl
sub
add
pop
add
jmp
das
test
add
add
mov
je
sub
cmp
pop
movs
adc
xor
add
adc
int3
add
(bad)
pop
data16
add
add
add
lea
add
mov
jl
test
add
and
lahf
cmp
in
div
in
(bad)
sahf
add
int3
jmp
mov
jns
pop
(bad)
aam
jp
je
mov
mov
mov
sub
dec
fistp
jo
aad
xchg
add
add
add
mov
xchg
jns
mov
mov
jnp
add
lock
bound
movs
add
pop
jo
mov
loop
add
jbe
add
cmp
add
push
(bad)
inc
and
xchg
cmp
add
jmp
in
jl
inc
add
push
sub
mov
sbb
(bad)
jbe
add
dec
add
add
gs
add
ret
pop
sub
cmps
rcl
repz
sub
add
into
aaa
add
add
sub
mov
pand
bound
cmp
push
movs
add
mov
and
lahf
add
sub
dec
inc
and
nop
test
add
add
add
adc
inc
and
aaa
adc
add
add
cmp
jnp
cmp
lods
retf
fiadd
ret
add
add
das
add
mov
aas
(bad)
and
cld
add
sub
add
data16
sar
arpl
inc
xor
jmp
mov
and
lahf
loope
sub
mov
lgs
xchg
jb
xor
cld
sub
test
mov
or
out
adc
shrd
add
jmp
mov
int3
lock
inc
mov
ror
lahf
add
mov
xchg
jb
mov
sub
mov
test
mov
push
mov
jbe
inc
dec
call
add
jmp
ja
and
add
fwait
mov
daa
out
add
add
sub
push
mov
lds
fiadd
out
or
and
bndstx
jb
xor
cld
sub
int3
aaa
add
jbe
inc
mov
add
int3
cmp
push
das
sar
sub
mov
and
push
xor
add
add
pushf
add
clc
jmp
mov
ins
mov
jmp
push
cli
mov
mov
push
pop
sbb
(bad)
adc
sub
mov
add
shl
stos
out
jns
jp
adc
rcr
xchg
lahf
loope
inc
cli
mov
(bad)
daa
nop
sub
(bad)
adc
cld
sub
add
aaa
in
test
add
add
mov
mov
mov
mov
and
add
pop
popf
sbb
adc
vmread
sahf
add
jmp
mov
add
sub
mov
(bad)
stos
add
add
add
push
add
test
lahf
add
call
mov
je
jge
jb
add
xchg
inc
add
aaa
test
rol
add
in
adc
or
jmp
add
add
xchg
rol
in
add
cmps
test
jb
xor
mov
mov
xchg
jo
add
(bad)
enter
inc
ror
lahf
or
add
fidivr
es
add
les
xor
daa
and
inc
movsx
aas
cmps
cmovne
mov
jmp
mov
out
(bad)
jmp
push
and
vcmpss
xchg
add
xchg
jge
push
(bad)
dec
pop
aaa
test
rol
aaa
add
inc
inc
ficom
sub
mov
mov
adc
loope
ret
push
mov
add
test
jmp
inc
jns
dec
out
fld
jmp
(bad)
cmc
imul
loope
fiadd
ret
mov
jb
mov
sub
mov
jmp
mov
mov
jmp
nop
mov
test
add
cmp
inc
add
loope
fdivp
pushf
mov
mov
mov
(bad)
fild
add
mov
(bad)
jmp
(bad)
sar
sti
mov
add
add
mov
add
xor
pushf
mov
aaa
add
ds
push
add
mov
das
fidivr
sub
sub
mov
popf
stos
mov
add
add
cld
mov
adc
pop
test
mov
clc
inc
test
push
add
inc
bnd
jmp
mov
fild
aaa
test
ret
outs
cmp
rol
add
mov
fadd
pushf
mov
add
aaa
jmp
mov
push
add
(bad)
pop
cmp
and
add
loope
loope
dec
jmp
std
fisub
xchg
jb
add
add
out
test
mov
mov
(bad)
sar
add
xchg
lods
inc
sar
add
or
add
loope
test
fiadd
ret
daa
movs
mov
xchg
add
mov
adc
add
pushf
aaa
inc
and
push
sahf
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xchg
jle
inc
rol
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xchg
ja
xor
not
dec
not
jmp
mov
mov
mov
mov
mov
mov
pop
mov
mov
push
mov
jmp
sub
sub
inc
jmp
call
shl
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
sub
and
xchg
jae
or
shl
dec
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
shl
add
test
add
call
and
fisub
mov
int3
add
push
mov
fld
mov
adc
inc
es
(bad)
sti
fisttp
stc
and
ret
and
add
idiv
(bad)
sub
jmp
fadd
add
mov
mov
pop
or
add
cwde
sub
lds
sub
xchg
mov
add
jg
jmp
popa
test
aad
add
cwde
test
sti
(bad)
mov
sub
sub
sbb
jae
and
aad
psrlw
add
hlt
cdq
test
add
sub
mov
add
setb
lods
jmp
test
add
outs
cmp
sub
jg
add
add
leave
loope
and
add
add
jae
xchg
inc
add
(bad)
and
add
jmp
add
add
jbe
test
adc
push
add
ret
jno
add
mov
add
sub
xchg
test
and
inc
aad
jmp
sub
and
push
add
fldenv
ins
xchg
sub
fwait
mov
in
leave
add
mov
and
or
add
mov
smsw
add
pop
jmp
xor
and
add
neg
int
mov
pushf
add
sub
lods
inc
nop
add
fisttp
add
add
and
push
sbb
lahf
mov
dec
(bad)
and
mov
jmp
mov
sub
mov
and
add
add
test
add
inc
movs
sub
xchg
mov
leave
inc
and
pop
mov
test
add
jg
cmp
add
mov
push
sub
mov
jmp
push
add
je
push
or
sub
add
sub
pop
test
add
add
(bad)
and
add
add
(bad)
sub
inc
test
add
add
mov
push
add
sub
test
add
add
xlat
test
stc
jnp
adc
xchg
add
add
sub
xchg
pop
and
je
jmp
add
pop
adc
jge
and
jg
ret
sub
enter
xor
and
jg
jmp
sub
jae
add
add
retf
xor
mov
and
xchg
fucomip
add
add
test
sbb
ret
xchg
xrelease
mov
add
xor
fnstenv
fisub
(bad)
add
add
add
leave
push
cdq
je
or
add
pop
loopne
out
mov
jg
jmp
cdq
das
and
add
sub
mov
clc
push
or
jmp
mov
jp
add
add
jg
mul
add
add
jmp
enter
xor
fist
fcmovnu
dec
mov
aad
mov
add
add
jae
hlt
add
sub
mov
push
jg
jmp
mov
enter
xor
inc
mov
outs
cmp
mov
ins
add
add
add
inc
xchg
rcl
and
je
jmp
mov
enter
sub
and
test
add
add
xor
and
add
add
fld
out
jae
ins
and
je
add
add
inc
test
sbb
ret
and
push
pop
add
add
adc
enter
aas
pop
scas
jne
and
fxrstor
add
xchg
test
add
add
dec
jo
jmp
aas
inc
aad
mov
cmps
add
hlt
adc
out
mov
ins
stos
add
add
mov
je
add
add
pop
inc
stos
xor
test
add
add
mov
ror
hlt
adc
lds
call
add
add
and
mov
add
xor
mov
pop
jb
adc
stos
jmp
mov
les
lods
add
add
fiadd
aad
cld
adc
ds
add
and
and
adc
add
add
outs
add
leave
mov
cmp
add
add
cwde
fwait
xchg
arpl
icebp
xchg
pminub
movs
add
jmp
mov
and
hlt
adc
aam
jb
icebp
(bad)
out
and
push
add
dec
add
add
add
jle
cdq
dec
retf
xchg
stos
dec
push
test
add
push
test
add
mov
dec
arpl
sbb
add
xchg
sub
mov
and
je
jmp
pop
sbb
adc
int3
mov
mov
repnz
mov
add
cmp
sbb
mov
hlt
add
mov
xchg
mov
add
mov
in
add
lods
mov
xlat
xchg
adc
add
bound
adc
lods
(bad)
lods
mov
add
ss
dec
and
push
push
jmp
(bad)
mov
scas
and
mov
cwde
test
jmp
dec
icebp
(bad)
ins
mov
mov
xchg
add
gs
fsubr
push
adc
into
or
xchg
icebp
jns
pop
adc
test
jmp
xchg
pop
mov
cmp
mov
neg
sbb
psubsw
mov
jmp
call
push
ret
repz
adc
fsubr
out
add
jge
mov
mov
add
push
sbb
mov
and
dec
cdq
enter
pop
pop
adc
jmp
mov
fadd
add
pop
xor
shl
mov
(bad)
add
leave
(bad)
out
and
add
shr
sgdtd
jmp
push
xchg
cmp
add
rol
idiv
xchg
cli
stos
add
sub
sar
pusha
mov
shr
sbb
lods
popa
(bad)
and
add
mov
xor
(bad)
add
div
xchg
(bad)
rol
add
and
in
jmp
jno
test
ja
cdq
and
push
or
inc
fld
add
jb
sub
push
test
shl
retf
xchg
mov
add
add
leave
add
push
imul
xchg
mov
jmp
jmp
(bad)
ds
add
hlt
or
mov
ss
pop
mov
xlat
inc
out
and
add
add
fstp
sbb
aam
and
mov
mov
xor
mov
int
or
mov
jmp
sbb
jl
add
xchg
add
adc
add
add
mov
repnz
add
out
adc
cmp
leave
push
ds
jmp
lea
pop
sbb
or
cmps
add
(bad)
das
and
add
add
cmc
mov
fbstp
cdq
je
add
lods
and
add
mov
xchg
and
add
mov
add
mov
icebp
test
add
leave
pop
out
fld
jne
add
aad
add
popf
and
add
test
je
cs
mov
test
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
push
mov
pop
mov
push
mov
push
mov
mov
push
jmp
dec
mov
shl
jo
add
not
and
and
jmp
call
shl
cmp
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
xor
rol
js
not
sub
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
or
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
not
mov
and
sbb
add
cwde
and
add
add
add
mov
aam
and
add
add
scas
ds
add
test
add
add
and
adc
add
pop
jp
fiadd
mov
cmp
test
sub
add
sbb
add
mov
add
cmp
test
inc
add
mov
psrlw
mov
xor
sahf
test
sub
add
mov
and
add
lods
jg
jl
add
test
call
sub
je
nop
and
xchg
add
movsx
add
rol
add
push
test
cmp
scas
adc
stos
push
mov
jne
inc
ror
jge
add
add
push
push
add
sbb
add
and
add
aam
add
xchg
mov
jecxz
scas
stos
and
add
add
(bad)
mov
xchg
add
xor
add
sub
mov
and
cmp
add
daa
mov
test
push
sbb
push
cdq
jns
mov
add
mov
sbb
add
sbb
lods
add
lds
jg
jmp
fiadd
sbb
add
and
cmp
mov
add
xor
dec
mov
push
add
jge
jle
xor
mov
cmp
jmp
mov
sub
and
movs
sar
add
into
dec
call
test
hlt
add
dec
cmp
mov
test
(bad)
xor
add
mov
lods
ret
lahf
sbb
and
inc
into
(bad)
dec
jne
add
or
push
mov
mov
mov
add
jg
jmp
push
lahf
sbb
add
xor
add
test
movs
add
sbb
test
adc
add
mov
sbb
mov
lods
add
cmp
hlt
add
(bad)
jecxz
mov
pop
mov
je
js
add
add
adc
(bad)
xchg
mov
xor
mov
inc
jmp
mov
sub
(bad)
nop
mov
xor
add
xchg
clc
push
add
add
add
sub
fwait
adc
and
add
add
mov
add
dec
add
add
jge
adc
not
test
or
add
cmp
jmp
nop
mov
lods
lods
and
jp
mov
jg
mov
lds
sbb
xor
test
nop
lea
cmp
mov
cmp
and
mov
sbb
mov
and
dec
adc
aas
(bad)
mov
add
adc
hlt
lea
cmp
dec
(bad)
xchg
add
add
sbb
inc
push
call
add
mov
sub
mov
jg
rol
adc
add
add
mov
inc
das
adc
add
jmp
ficomp
add
popf
aad
dec
cmp
cli
add
lea
nop
test
pop
add
add
enter
mov
fidiv
add
xchg
add
add
scas
shl
add
mov
mov
(bad)
dec
cmp
add
lods
add
or
add
pop
dec
packuswb
mov
jmp
mov
sub
mov
je
jmp
mov
mov
dec
add
jecxz
hlt
out
hlt
popa
and
adc
loope
add
cmps
out
xchg
xor
adc
xchg
inc
mov
je
aam
dec
inc
mov
sbb
and
sub
mov
sahf
mov
add
add
mov
adc
jns
add
sub
and
movs
popa
movups
pop
mov
pop
hlt
and
stos
mov
sbb
es
sahf
push
add
aad
add
add
add
sti
mov
je
daa
inc
add
test
jae
test
mov
sbb
js
add
mov
sub
mov
and
bswap
(bad)
int
mov
add
test
push
add
arpl
sbb
je
pop
es
mov
add
adc
test
hlt
add
jp
mov
(bad)
std
add
add
repz
mov
rcl
add
mov
sahf
mov
xor
adc
adc
add
xlat
in
nop
mov
push
retf
add
add
add
out
mov
test
xchg
mov
sahf
scas
add
mov
mov
mov
and
icebp
dec
push
add
add
outs
jge
add
add
sub
mov
and
sbb
ins
adc
test
ss
or
or
sub
enter
call
add
push
add
sbb
je
jmp
push
test
cmp
ds
test
push
mov
push
add
adc
mov
mov
test
add
add
inc
mov
add
mov
mov
jmp
mov
int3
and
xchg
and
sbb
xchg
stos
add
xor
setne
popf
ret
add
das
leave
lods
and
int3
add
mov
xor
and
fstp
mov
sub
cli
(bad)
pop
cmp
pop
sub
fild
xchg
and
cmp
xchg
test
stc
and
add
adc
mov
sbb
popf
sbb
mov
mov
movs
cld
cmp
push
cld
add
call
add
sbb
jp
std
add
stos
stos
mov
cmp
xlat
icebp
scas
add
cmp
add
into
add
xchg
and
add
add
push
ins
aad
(bad)
nop
xor
add
into
mov
and
sbb
cmp
jmp
sub
add
cmp
mov
push
inc
sub
adc
jge
mov
or
fmul
xor
add
mov
call
nop
int3
clc
popf
call
or
add
add
cmp
jge
add
xchg
ret
xor
add
into
adc
add
test
mov
in
add
test
cmovne
test
add
add
sar
add
test
add
add
ds
xor
sahf
test
add
add
shr
mov
add
and
mov
retf
pop
sub
jmp
sbb
sub
add
aas
cld
add
mov
push
pop
jne
jmp
not
mov
mov
add
ss
sbb
lods
movs
cld
(bad)
mov
mov
or
cmp
movups
(bad)
cwde
and
add
adc
add
mov
add
aam
cmp
stos
mov
into
add
dec
cmp
(bad)
mov
add
dec
add
add
mov
add
cld
add
into
mov
lods
xchg
jno
sbb
mov
adc
aas
rol
ds
add
add
mov
lds
and
add
pop
(bad)
push
mov
test
sar
iret
(bad)
mov
add
push
mov
shr
add
add
mov
add
add
push
(bad)
ins
and
and
aaa
movs
mov
fld
add
add
stos
push
adc
scas
mov
adc
test
add
add
add
add
lds
ins
cmpxchg8b
adc
jmp
mov
add
sahf
sub
movs
cld
push
mov
jmp
mov
pop
clc
stc
out
and
add
or
sub
scas
test
add
scas
cmovne
sbb
xchg
dec
(bad)
daa
cdq
jmp
stos
(bad)
jecxz
nop
and
add
add
sub
and
add
lea
mov
lods
and
or
jmp
cmp
or
jp
jmp
mov
out
xchg
test
and
add
adc
xchg
dec
lea
pop
sub
test
cmp
jg
mov
add
add
lods
sub
lea
mov
mov
loope
add
add
stos
iret
mov
inc
mov
cld
add
add
shr
jge
and
mov
cld
dec
add
sbb
add
aam
test
add
pop
mov
movs
or
add
mov
(bad)
adc
dec
add
push
fmul
push
sbb
dec
(bad)
nop
and
add
or
cmp
add
add
add
call
stc
test
lods
add
xchg
push
jmp
jne
and
mov
and
xchg
mov
jno
add
aam
(bad)
enter
jmp
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
not
mov
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
xor
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
cmp
add
shl
jmp
mov
mov
mov
mov
mov
push
pop
mov
pop
push
mov
push
jmp
add
cmp
cmp
inc
jno
ror
mov
and
jmp
call
sar
or
inc
ror
jg
mov
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movs
mov
mov
in
inc
and
lea
cmp
mov
ss
jae
push
cmc
popa
dec
and
mov
mov
mov
mov
mov
mov
repz
rcr
add
sbb
inc
add
push
jp
xchg
adc
pop
dec
(bad)
mov
adc
add
mov
adc
call
into
mov
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
sub
jmp
call
xchg
or
jmp
mov
push
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
push
mov
push
ret
xchg
sub
jge
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
xor
and
jns
shl
shl
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
sar
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
jg
mov
mov
add
clc
bound
jp
sub
jmp
cwde
mov
mov
jg
jmp
retf
inc
and
sub
cdq
cmps
mov
and
xchg
jo
jmp
mov
and
sub
mov
jg
jmp
mov
pop
lds
or
stos
inc
out
jmp
mov
sbb
sbb
jae
mov
jl
add
mov
mov
in
xacquire
test
dec
add
pop
push
add
add
ds
cmps
mov
xor
sbb
add
add
sub
pop
les
xchg
and
out
mov
add
jmp
mov
sub
rol
jg
je
add
adc
and
push
or
pop
aaa
sbb
add
in
add
add
add
mov
sub
jo
and
mov
inc
push
add
mov
sub
cmps
inc
out
sub
jmp
add
add
repz
out
js
rol
rol
add
inc
mov
(bad)
pop
sub
cmps
inc
and
lds
or
add
out
and
sub
mov
int3
add
cdq
jmp
mov
and
ins
jecxz
push
icebp
rol
mov
add
or
add
movs
mov
mov
in
and
jmp
mov
stc
add
add
mov
inc
and
je
jmp
mov
sub
imul
adc
cmp
add
xor
xchg
jo
gs
sub
ins
inc
and
andps
sbb
dec
dec
sahf
jb
mov
bound
add
xor
popf
add
push
sub
push
add
and
cmovae
dec
mov
std
mov
cdq
add
mov
inc
fs
pushf
xor
adc
outs
add
xchg
or
daa
jecxz
fsubr
test
dec
mov
sbb
repz
pusha
in
push
add
das
add
adc
mov
ret
mov
jbe
inc
inc
and
popf
cwde
ret
mov
loop
loopne
add
push
add
call
sub
push
xor
and
add
into
sub
int3
dec
mov
add
push
inc
jb
mov
or
fs
add
add
mov
push
lods
add
mov
sbb
push
and
arpl
add
add
lahf
inc
cli
mov
jl
and
or
lods
and
js
test
fist
mov
popa
cwde
mov
mov
adc
mov
mov
test
loope
push
adc
inc
and
stc
lods
add
nop
mov
mov
and
add
add
inc
push
pusha
jmp
int
add
add
ror
daa
in
shr
mov
addr16
cdq
dec
mov
(bad)
sbb
sar
stc
repnz
add
into
sub
pusha
add
push
icebp
enter
call
in
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
sub
xchg
shl
jmp
push
pop
mov
push
pop
push
mov
mov
pop
mov
push
pop
mov
jmp
xchg
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
and
cmp
jl
cmp
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
mov
dec
je
mov
add
mov
and
jmp
call
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
or
adc
ffreep
add
ds
test
sub
add
test
add
mov
xchg
sets
out
xchg
das
add
stos
and
ds
add
add
xchg
pop
mov
lods
(bad)
stc
add
mov
and
xchg
maxps
rol
pushf
loopne
inc
and
ds
sbb
xchg
adc
push
stc
pop
mov
inc
add
pop
xchg
sti
add
call
int3
xor
and
stc
add
repz
dec
mov
test
add
xchg
mov
fsubrp
adc
jne
test
adc
sbb
call
mov
push
add
stc
mov
sub
mov
jg
(bad)
sti
add
rol
sbb
jge
cwde
pop
inc
add
pop
jmp
sahf
call
sti
adc
out
cmp
test
xadd
add
add
sbb
lds
jbe
adc
and
das
add
sti
ds
add
movs
dec
add
jns
pop
adc
sub
shr
das
add
mov
lds
retf
jo
pop
add
(bad)
or
add
jg
pop
lds
mov
and
add
adc
stc
mov
jg
jmp
mov
and
add
add
push
pop
mov
sub
lds
jg
mov
ds
ins
and
add
add
adc
jbe
add
add
test
movs
add
sub
mov
and
jg
adc
add
pop
mov
mov
mov
and
(bad)
shr
add
mov
sub
(bad)
inc
and
cmovp
add
jle
add
add
add
sub
mov
add
dec
jmp
into
test
add
popa
mov
and
mov
ds
mov
sub
push
or
je
pop
retf
add
movs
pop
add
sub
mov
bts
ins
add
sti
add
rol
sub
mov
and
test
maxps
mov
mov
das
add
sub
mov
pop
hlt
mov
jmp
mov
frstor
add
mov
sbb
pandn
xor
sti
add
add
fs
ret
and
cmpxchg
add
adc
add
mov
sub
rcl
and
bts
sub
add
jo
and
add
ds
mov
add
jmp
mov
sub
mov
and
push
test
pop
xchg
add
out
add
movs
test
sti
add
sub
mov
push
add
jmp
into
test
add
mov
clc
es
stc
(bad)
inc
loope
cwde
stos
rcl
ins
(bad)
mov
mov
xchg
sub
mov
pop
sti
pop
add
test
jb
pop
adc
imul
je
adc
test
pushf
xor
pshufw
xor
xchg
jmp
mov
mov
mov
psubsb
das
add
xlat
push
add
mov
sub
mov
and
prefetcht1
jns
push
stc
rol
and
add
xchg
sub
(bad)
and
xchg
das
jmp
mov
add
mov
(bad)
retf
xor
add
int
add
mov
mov
mov
mov
pop
xchg
add
adc
test
push
ds
call
xor
in
pop
and
add
mov
std
aad
push
jne
mov
add
pop
push
call
add
mov
jmp
ud1
cmp
add
jmp
mov
mov
sub
push
pop
aaa
(bad)
js
add
add
add
rol
mov
xchg
sti
add
add
mov
sub
popf
les
add
les
mov
add
add
and
das
adc
jmp
call
std
mov
dec
inc
mov
cmp
and
maxps
call
add
or
div
xlat
add
stc
add
cmp
adc
mov
adc
add
and
mov
rcr
add
adc
push
add
in
or
inc
loopne
or
jnp
lds
pop
not
and
mov
mov
xchg
pushf
add
dec
add
sbb
inc
xor
pop
add
ss
inc
add
shr
out
add
test
pushf
add
(bad)
mov
and
adc
pop
inc
add
sub
xor
add
pop
jle
pop
ins
das
mov
les
add
pushf
add
jmp
retf
lods
adc
out
add
rol
imul
add
cmc
sbb
les
ror
and
add
aam
or
mov
add
sti
mov
stos
fisttp
push
add
stc
mov
pop
mov
push
jb
and
pop
inc
add
cs
jmp
sub
add
push
out
xchg
xor
div
mov
arpl
mov
pop
in
in
xchg
cmp
mov
popa
or
loope
pop
add
xor
add
add
add
call
sbb
pop
fisttp
mov
pop
popa
push
pop
add
mov
aas
add
add
rep
add
mov
mov
and
add
add
add
push
stc
pop
jmp
test
loope
pop
xchg
das
lea
xor
pop
cmp
test
xchg
pushf
retf
es
retf
jo
pop
inc
mov
cs
pop
lds
xchg
add
das
mov
add
cdq
imul
xor
mov
ror
inc
mov
leave
jbe
mov
sub
add
push
ret
sub
inc
rol
add
add
add
arpl
cmp
add
add
xchg
mov
xchg
das
add
inc
pop
test
add
and
ds
call
or
mov
push
stc
sub
mov
mov
lea
and
add
add
add
lahf
inc
add
add
push
add
add
add
mov
jl
add
call
adc
xchg
push
add
mov
into
mov
mov
paddq
mov
push
ret
add
in
and
add
add
add
sub
mov
dec
add
push
aas
(bad)
test
mov
sub
sub
mov
jp
bound
pop
mov
add
xbegin
xor
push
add
add
add
sub
add
push
iret
cwde
mov
add
repz
mov
arpl
sub
mov
fist
pop
add
lds
pop
xchg
add
add
xchg
and
add
add
movs
mov
jle
add
xor
add
add
cmp
inc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
rol
test
jb
shl
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
or
inc
inc
jmp
mov
mov
mov
push
mov
mov
mov
pop
mov
mov
pop
mov
jmp
ror
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
and
dec
jmp
call
sub
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
and
in
aas
mov
mov
call
scas
xchg
and
add
add
stos
(bad)
mov
mov
(bad)
push
cmp
jmp
push
mov
scas
rcl
and
sahf
mov
(bad)
call
mov
xor
add
retf
add
mov
add
gs
cmp
mov
xchg
add
jno
ror
ins
pop
or
in
mov
test
jns
add
or
gs
stos
mov
add
mov
jg
jmp
add
and
in
aas
sub
mov
sub
sub
add
mov
add
cmps
inc
sar
push
xor
add
add
add
bound
mov
and
jbe
test
add
hlt
add
daa
mov
cmps
stos
cmp
push
mov
adc
add
add
add
mov
add
mov
test
cmp
and
xchg
jmp
mov
add
xor
call
mov
aas
retf
nop
mov
daa
mov
mov
das
sub
mov
or
add
jno
lea
popf
stc
and
stos
pop
lahf
push
cmp
add
add
jecxz
add
test
lods
mov
add
pop
add
add
add
sub
and
in
call
jns
mov
dec
call
jle
fmul
pop
jno
add
mov
add
mov
clc
inc
dec
jmp
and
or
retf
add
add
mov
daa
add
into
std
push
or
mov
or
xor
neg
inc
sbb
add
scas
ins
jnp
cmp
or
into
add
jecxz
mov
add
lods
or
mov
lds
push
add
neg
mov
add
(bad)
mov
add
jmp
mov
sub
mov
and
movsx
jecxz
add
add
in
mov
pop
call
inc
call
add
add
out
mov
push
sub
mov
push
test
add
add
sub
movs
das
push
mov
add
in
inc
or
je
jmp
mov
mov
mov
add
adc
add
stos
and
cmp
mov
mov
stc
test
fmul
frstor
pop
sub
mov
and
je
jmp
mov
dec
sbb
jmp
mov
lods
std
and
nop
lea
int3
mov
sub
jmp
mov
je
out
add
daa
mov
dec
lods
mov
lods
cmc
and
add
jno
ins
add
lea
and
stc
lods
add
sbb
btc
retf
loope
daa
add
mov
cmps
stos
cmp
movs
jmp
jbe
or
add
stos
stc
lods
add
add
push
xchg
je
inc
sbb
cmp
add
loope
mov
lods
jns
jbe
enter
stc
add
jmp
jmp
mov
mov
inc
xchg
pop
test
add
sbb
(bad)
movs
cmps
test
add
add
rol
add
adc
mov
cmp
add
jno
outs
jno
xor
fst
in
add
sub
and
add
add
addr16
das
stos
add
and
adc
(bad)
add
and
mov
add
add
stos
add
in
or
mov
push
or
cmp
cld
(bad)
mov
mov
mov
mov
add
fiadd
cmovae
mov
int3
popf
add
inc
add
in
retf
movs
mov
cmps
nop
aas
or
add
jmp
sahf
pop
loopne
pop
or
add
add
add
jbe
mov
je
add
add
sub
bound
add
add
xchg
add
aas
and
lods
mov
in
add
or
push
and
add
add
pop
adc
das
mov
mov
jno
add
movs
js
arpl
shl
sub
add
add
and
das
stos
add
stos
add
add
and
add
add
push
push
or
add
mov
int3
add
add
aas
add
jnp
mov
add
fld
test
sbb
add
jmp
leave
push
int
sub
jne
movs
add
add
add
aas
retf
jmp
mov
daa
mov
pop
push
add
or
xor
retf
mov
add
popf
add
xor
jl
test
nop
add
(bad)
mov
or
jmp
jmp
(bad)
das
and
add
add
jb
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
xor
shl
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
mov
cmp
cmp
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
rol
mov
jmp
call
xor
xor
jge
xor
sar
not
not
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
pop
push
mov
push
jmp
xchg
add
shr
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
jg
adc
or
dec
shr
and
mov
movs
inc
adc
xor
fldenv
fiadd
mov
sub
pop
mov
fidiv
mov
and
xchg
dec
ficom
jnp
add
xor
add
add
dec
repnz
dec
(bad)
popf
sub
sub
jmp
mov
jne
int3
imul
movzx
sbb
(bad)
hlt
push
je
push
dec
mov
cwde
mov
popf
dec
add
add
mov
and
sub
mov
jg
jmp
mov
sbb
mov
(bad)
add
pushf
add
sbb
sub
mov
mov
seta
add
hlt
jmp
call
or
in
sub
test
out
aaa
pop
pop
pop
jg
and
sub
mov
pop
(bad)
repz
hlt
xor
xor
add
jl
or
cwde
mov
add
add
sbb
and
jb
ins
in
jge
sbb
pop
(bad)
lods
(bad)
hlt
fldl2t
xor
das
mov
push
sub
sub
mov
(bad)
jge
add
mov
pop
add
mov
movs
push
mov
jg
jmp
mov
sub
nop
inc
xchg
test
add
sub
test
pop
add
out
add
mov
cmp
icebp
test
add
das
mov
jmp
popa
cmps
test
add
add
retf
ds
and
test
xor
jmp
mov
out
jge
push
dec
add
add
out
add
add
xor
mov
xor
test
add
(bad)
icebp
shl
fld
mov
sbb
adc
and
lods
test
jne
pop
add
add
inc
sar
jp
add
fldl2t
xor
das
jmp
jno
jecxz
and
in
and
mov
(bad)
mov
mov
and
ret
add
inc
and
(bad)
(bad)
out
ucomiss
push
cmp
push
xchg
ret
inc
ror
test
pop
out
pop
and
and
jge
mov
add
xor
je
ins
movq
mov
or
push
mov
aaa
(bad)
fimul
ficomp
and
setge
mov
fstp
add
sbb
in
inc
add
add
mov
jmp
mov
rol
jmp
mov
mov
add
add
inc
adc
ins
add
xor
add
add
push
inc
and
int3
sbb
add
sub
pusha
mov
mov
arpl
jmp
lea
pop
pop
pop
gs
mov
pop
cld
fnstenv
arpl
imul
out
cld
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
dec
xor
xchg
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
not
inc
ja
xor
inc
or
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
add
not
sub
jno
xchg
cmp
or
shr
jmp
push
mov
push
mov
pop
mov
mov
mov
mov
mov
mov
push
jmp
or
test
shl
jo
test
shr
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
test
sub
not
cmp
jo
inc
xchg
mov
cmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cs
inc
mov
(bad)
jnp
cs
mov
jge
mov
cli
dec
and
mov
mov
pop
push
jmp
dec
(bad)
dec
pop
scas
add
and
add
js
(bad)
loope
pop
mov
inc
and
dec
sar
mov
cli
dec
adc
add
(bad)
jnp
sbb
nop
xchg
inc
pop
mov
and
dec
aas
dec
add
sti
outs
or
add
and
sub
cmc
inc
push
xor
sbb
add
jmp
lock
gs
mov
jae
jecxz
lock
movs
sti
outs
or
pop
into
mov
sub
imul
mov
mov
inc
jnp
psubsb
dec
add
jo
dec
cmp
sub
push
sbb
jmp
mov
push
loope
dec
mov
and
mov
sti
add
outs
add
or
aaa
and
sbb
mov
and
je
setbe
out
mov
cdq
jb
mov
and
bswap
pop
add
add
mov
adc
fwait
ror
nop
sub
jnp
jg
add
out
inc
pop
xor
(bad)
inc
and
int
pushf
lds
add
inc
dec
add
mov
cmps
fst
or
inc
adc
jbe
psubsw
jnp
out
inc
and
sub
mov
mov
ret
pop
lock
mov
sub
mov
and
setg
add
pushf
jl
add
jmp
mov
mov
ret
fdivr
movs
out
arpl
ret
mov
fist
xchg
lods
mov
mov
push
adc
inc
xchg
retf
(bad)
mov
test
xchg
mov
test
stos
sbb
jmp
cmc
adc
sub
cmps
mov
gs
xor
je
inc
movzx
push
mov
outs
popa
mov
add
jl
push
movzx
dec
shl
je
dec
mov
sbb
and
rdmsr
aad
aas
and
pminub
out
mov
(bad)
sub
adc
aaa
add
dec
cmp
cs
sub
add
mov
jns
add
mov
(bad)
mov
mov
add
loope
hlt
pushf
pop
stos
cwde
ret
(bad)
jp
inc
fst
or
sahf
std
(bad)
dec
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
shr
mov
mov
jno
sar
add
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
nop
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
inc
mov
add
ror
jmp
mov
push
mov
mov
mov
pop
mov
mov
push
pop
mov
mov
jmp
mov
inc
ror
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
cmp
rol
jl
mov
ror
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
add
mov
and
cmps
sbb
ror
int3
xor
dec
add
add
mov
add
in
and
sub
and
test
repnz
add
add
add
add
xor
add
jmp
mov
mov
add
mov
test
jmp
mov
fld
dec
test
sbb
ficomp
(bad)
and
add
popa
sbb
add
mov
add
xchg
leave
xchg
pop
mov
xchg
das
add
fiadd
ret
(bad)
mov
(bad)
xchg
add
cmps
xor
mov
setne
les
mov
mov
sub
xor
je
inc
cmp
sub
(bad)
add
dec
and
add
sbb
(bad)
std
add
mov
les
xor
mov
js
xor
aas
mov
(bad)
rol
add
test
push
add
ret
fild
mov
xor
test
add
add
(bad)
and
ficom
jmp
mov
add
test
dec
jecxz
aas
outs
pusha
add
call
jmp
mov
(bad)
xchg
add
add
movs
test
outs
mov
add
(bad)
and
add
mov
mov
sub
push
test
ja
fld
add
sahf
add
add
and
add
and
xchg
inc
and
ds
or
and
add
add
jbe
add
inc
fstp
and
fild
lods
std
jmp
fiadd
add
add
ret
test
inc
daa
and
add
sub
fild
sub
repnz
sub
ins
pop
add
fistp
dec
add
add
mov
pop
adc
and
fiadd
sub
cmp
(bad)
lods
sbb
jnp
add
cmp
add
add
mov
movzx
add
jmp
rol
in
add
xchg
jne
xlat
mov
push
and
add
pop
add
add
push
sub
in
add
add
dec
test
add
add
add
add
add
les
sub
mov
cmps
sahf
js
mov
add
add
add
add
and
add
cmove
jb
add
push
test
pop
mov
sub
mov
add
add
mov
sub
mov
add
movaps
fst
mov
les
pop
mov
mov
mov
mov
add
add
mov
add
sub
mov
mov
cmps
add
pop
pop
lea
add
xor
add
add
dec
mov
outs
test
test
(bad)
and
add
add
test
add
add
mov
xchg
iret
mov
inc
cmps
sbb
rol
movs
(bad)
xor
mov
add
pop
jmp
jg
jae
add
push
scas
xchg
in
add
fild
mov
setl
pop
add
add
add
dec
test
in
add
xchg
in
mov
xchg
add
add
add
add
mov
repnz
test
sub
sbb
pop
jmp
dec
test
add
add
icebp
nop
and
sysenter
rol
dec
add
add
call
mov
popf
iret
xor
mov
mov
add
jnp
cmps
add
ficomp
add
pop
cmp
mov
cmps
maskmovdqu
mul
add
aam
dec
add
push
(bad)
in
push
fstp
mov
(bad)
pusha
pmuludq
add
shr
add
xor
mov
sub
mov
clc
dec
add
add
dec
test
js
and
xor
push
ret
fbstp
add
in
cmps
add
sub
xchg
inc
loopne
cmp
add
mov
stc
push
call
and
unpckhps
add
add
add
sub
(bad)
in
lods
repnz
xlat
retf
imul
pop
cli
pop
xchg
add
add
mov
rol
mov
fstp
mov
add
mov
and
cli
in
sub
add
and
inc
(bad)
sbb
fsubrp
mov
sbb
and
ds
add
mov
and
cmps
push
cwde
imul
jmp
push
pop
and
add
jnp
sub
cmp
push
push
lods
es
xlat
mov
xchg
add
add
mov
mov
add
jmp
mov
sub
mov
std
test
sbb
add
push
test
in
mov
add
mov
and
or
aam
call
das
and
fisubr
add
jnp
and
test
mov
xchg
pop
mov
add
pop
jge
movs
mov
movmskps
add
mov
stos
jecxz
paddsb
add
sub
mov
je
sbb
add
add
cmp
pop
mov
jmp
mov
and
sysret
hlt
add
jmp
rol
add
inc
and
je
ret
add
mov
and
fld
mov
rcl
repz
xor
jmp
repnz
push
sti
js
mov
shr
and
test
add
adc
hlt
cli
fadd
add
cmp
cmovne
test
sub
add
dec
test
xchg
push
xor
add
mov
xor
lea
(bad)
cld
lock
add
add
mov
add
fist
and
dec
and
mov
mov
in
dec
xchg
call
aad
inc
mov
add
xor
xor
add
aam
add
push
bound
add
inc
mov
add
in
test
xchg
fsub
inc
shl
jnp
mov
sbb
pop
add
mov
cmps
add
add
mov
or
(bad)
xchg
add
fisub
add
push
sbb
mov
mov
mov
in
movzx
push
inc
lods
or
and
cli
(bad)
mov
mov
cmp
cmovl
mov
inc
icebp
add
or
in
and
sub
lods
repnz
mov
jmp
cmc
mov
js
or
push
jmp
mov
rcr
dec
sub
addr16
add
iret
loop
xchg
test
out
add
les
mov
jmp
mov
mov
call
mov
mov
mov
jmp
sbb
lock
bnd
and
sbb
mov
mov
mov
aam
add
shl
cli
lock
mov
movs
fisubr
rol
cs
call
fild
add
add
cmc
test
lock
add
pop
leave
not
mov
jmp
mov
mov
xchg
pop
add
sar
test
pop
add
add
and
les
mov
jl
mov
add
push
data16
pop
cs
add
ret
or
repnz
and
sbb
add
ret
push
add
and
mul
add
add
mov
imul
cli
cmp
add
mov
sub
add
push
mov
add
add
ret
inc
ror
aam
rol
add
fwait
stos
push
fld
call
test
add
lods
addr16
cs
scas
fnstenv
or
add
js
aam
add
inc
in
pop
mov
dec
sub
bnd
test
mov
add
repnz
imul
add
pop
mov
inc
jmp
mov
es
pop
ret
(bad)
xor
add
add
pop
or
push
lods
repnz
ficom
mov
call
(bad)
sahf
loopne
aas
dec
add
add
and
dec
test
iret
out
cmp
mov
test
sub
add
jmp
cmps
add
inc
and
mov
add
inc
and
xor
add
ret
cli
mov
dec
pop
inc
add
in
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
sar
xchg
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shl
cmp
jmp
mov
mov
push
mov
mov
pop
push
mov
mov
push
jmp
rol
mov
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
shl
inc
rol
jb
inc
mov
or
cmp
jmp
call
shr
and
rol
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sar
push
add
daa
(bad)
aad
adc
mov
mov
jmp
mov
mov
scas
pop
mov
jmp
popf
inc
and
xor
jno
sahf
clc
inc
and
jg
inc
arpl
jecxz
mov
sub
jbe
and
pop
test
ds
stc
add
add
inc
scas
inc
sub
fwait
inc
adc
(bad)
sbb
daa
add
jno
fisttp
loopne
mov
push
aas
add
cmp
add
sub
add
daa
pop
jmp
call
sbb
or
leave
btr
jns
jmp
loopne
scas
inc
scas
mov
push
and
icebp
(bad)
or
daa
pop
jmp
and
fucomi
pop
ror
jnp
push
std
ds
lock
imul
and
sub
mov
add
jno
jmp
mov
sub
mov
(bad)
outs
push
std
ds
fld
mov
(bad)
sbb
ja
mov
bound
jno
jb
scas
arpl
mov
or
cmp
mov
fs
dec
mov
adc
or
adc
scas
sub
mov
arpl
cmp
and
adc
pop
and
je
push
add
add
pop
mov
and
je
jmp
mov
xor
(bad)
cmp
mov
and
packuswb
add
add
xor
and
rcl
and
dec
or
jmp
mov
pop
aas
repz
and
nop
add
push
jmp
mov
mov
mov
add
add
add
sbb
xor
jno
scas
mov
mov
jmp
mov
je
and
loope
cld
inc
cmc
jno
adc
push
add
add
add
daa
fadd
dec
mov
mov
inc
aam
repz
clc
cmp
add
sbb
ucomiss
add
clc
mov
mov
and
jmp
xchg
xchg
fist
mov
call
scas
or
sbb
fwait
scas
mov
(bad)
aad
jge
std
add
cmp
add
jmp
lahf
shl
js
push
add
lahf
and
inc
data16
inc
data16
push
add
cmp
add
rcl
jns
xchg
fist
loop
and
and
inc
fist
add
adc
mov
(bad)
cmp
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
not
add
shr
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
not
and
add
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
inc
inc
jo
and
mov
add
jmp
push
mov
mov
push
mov
mov
mov
push
ret
dec
mov
inc
not
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
inc
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
or
add
cmp
rol
mov
cmp
add
mov
mov
add
call
test
pop
cmp
test
and
loope
and
sti
add
std
test
ja
add
or
inc
add
mov
into
ror
pop
pop
add
cmp
mov
pop
add
test
add
cmp
repnz
sti
cmp
cld
add
add
clc
icebp
push
pop
cmp
jno
and
test
add
lods
lock
mov
movq
cdq
inc
dec
sub
add
cmp
lods
mov
and
push
push
out
add
and
add
cmp
test
lock
add
and
add
add
test
add
int
mov
ins
add
add
mov
jmp
mov
test
test
int
and
mov
add
repz
add
rol
add
cmp
movs
and
add
sub
mov
pmullw
or
add
add
and
jnp
add
mov
jg
jmp
mov
jbe
adc
movs
mov
cmc
mov
jmp
mov
and
cwde
inc
add
push
in
scas
cmp
cmp
mov
pop
and
push
mov
jbe
data16
stos
stos
or
add
xchg
test
dec
add
dec
add
pop
cmp
pop
add
loope
and
add
cmp
push
jmp
mov
sub
mov
test
add
aas
add
test
xlat
push
pop
fidivr
or
mov
dec
shl
add
shl
and
pop
and
sub
mov
push
jns
push
add
jmp
iret
test
add
add
mov
and
cmp
push
scas
pop
add
push
cli
mov
add
mov
repz
lods
mov
mov
call
mov
pop
cmp
and
cmps
push
mov
test
add
cmp
(bad)
and
add
jmp
mov
and
add
inc
fisttp
add
inc
lods
iret
push
add
jmp
xlat
mov
add
jge
fwait
loope
movs
mov
cli
cmp
ficom
add
cdq
mov
sub
mov
pop
je
jmp
jecxz
movs
push
sti
add
sub
or
mov
inc
(bad)
and
add
jmp
mov
js
add
cmp
or
jecxz
cld
dec
and
test
push
jbe
or
add
add
add
mov
cld
cmp
add
(bad)
and
add
jmp
or
pop
call
sbb
test
sbb
jmp
mov
sub
rol
or
add
add
loopne
test
sub
mov
pop
cmp
fistp
jle
add
jbe
add
mov
pop
or
and
add
add
mov
add
add
cmp
adc
test
js
push
add
jmp
clc
cmp
mov
sub
or
pop
adc
inc
add
and
sub
cmp
js
sub
mov
mov
mov
add
pop
add
sub
mov
push
scas
and
add
push
test
ds
add
sahf
lea
nop
add
jmp
mov
imul
mov
popf
pop
pop
sub
mul
add
push
(bad)
and
test
pop
mov
inc
lods
sbb
mov
jmp
mov
and
or
jo
(bad)
and
push
jbe
loopne
test
icebp
sbb
add
push
sub
test
aas
cmp
mov
jp
or
xchg
inc
inc
mov
inc
dec
sub
mov
add
mov
js
cmp
jbe
cs
sub
inc
es
xor
add
test
mov
mov
sub
mov
mov
add
jl
add
mov
and
cmp
int
pop
icebp
sub
pop
jge
jmp
std
test
add
add
mov
and
jg
jmp
mov
jg
and
js
pushf
pop
fdiv
mov
clc
push
add
add
and
inc
add
sub
mov
sub
(bad)
sbb
add
jmp
stos
test
imul
and
out
add
sub
and
dec
add
lahf
sub
pop
dec
xor
xchg
push
jle
add
sub
mov
jne
jp
dec
add
repz
jl
test
add
cmp
jbe
xor
mov
movntq
add
push
add
add
sub
mov
mov
dec
sub
add
add
sub
mov
addr16
jmp
fiadd
sub
mov
pusha
jnp
test
add
mov
add
add
mov
and
cmp
jbe
jne
adc
inc
movs
xor
add
push
add
add
outs
jno
inc
pop
jo
test
cmp
jmp
mov
lods
mov
cs
inc
and
pslld
add
jp
shr
sub
inc
mov
and
test
push
cli
add
jbe
test
cs
and
repz
dec
add
add
sub
jmp
mov
xor
mov
and
and
cli
add
sti
fdiv
les
mov
cdq
mov
mov
add
jl
mov
pop
or
imul
(bad)
mov
mov
or
add
shr
mov
mov
sub
hlt
call
(bad)
fistp
movs
and
imul
test
add
lods
xchg
sbb
loope
cmp
dec
mov
jns
add
add
mov
mov
add
mov
mov
test
cmp
jmp
add
mov
mov
or
add
cmp
icebp
adc
add
add
rcl
shl
ret
cmp
add
and
in
and
add
add
iret
clc
cmp
mov
iret
ins
cmps
push
fisubr
and
jnp
add
ret
inc
ror
add
lods
mov
add
xor
xchg
clc
mov
and
add
mov
jp
or
jmp
mov
mov
test
sbb
adc
loopne
cmp
add
add
xchg
jmp
add
jo
lds
push
jbe
imul
cdq
int
or
xchg
sbb
add
mov
xor
fdivr
sbb
stos
ror
push
dec
add
add
wrmsr
popf
mov
shr
dec
stos
pop
jl
pop
pop
(bad)
mov
test
jp
cli
fwait
inc
dec
sub
inc
ror
add
jecxz
mov
inc
jns
xchg
and
push
jbe
popa
jg
add
cmove
retf
or
mov
add
add
test
push
and
test
dec
add
push
std
fs
add
add
push
add
rol
in
add
test
dec
add
adc
js
jmp
(bad)
fild
cmp
mov
cli
add
mov
test
and
add
add
inc
test
and
test
add
sub
add
in
jp
icebp
mov
and
inc
dec
add
test
retf
in
ud1
das
add
cmp
mov
cmp
or
add
rcr
add
mov
mov
cwde
in
add
rol
push
add
mov
mov
pop
and
add
loope
movs
adc
sbb
add
(bad)
mov
loopne
mov
add
ret
fwait
pop
cmp
aad
add
mov
mov
dec
and
add
sti
add
mov
push
or
add
ins
and
jp
iret
retf
or
icebp
gs
arpl
pop
loop
cld
dec
mov
cli
add
xchg
loopne
add
mov
mov
inc
add
(bad)
call
adc
add
rol
and
jge
cmp
js
and
add
jle
xor
add
lock
mov
(bad)
enter
xor
inc
add
sar
in
pop
mov
add
mov
(bad)
aad
or
add
mov
jmp
(bad)
lods
and
add
push
leave
movs
dec
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
pop
push
pop
push
mov
mov
mov
push
jmp
ror
jns
mov
shl
mov
dec
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
cmp
jmp
call
sar
inc
jl
xor
inc
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
add
test
jne
not
not
mov
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
shr
cmp
shl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
mov
or
add
mov
loopne
ja
xchg
and
add
sub
add
div
pusha
les
or
add
add
add
dec
add
mov
mov
mov
cmpxchg
mov
jg
rcl
add
dec
add
cld
inc
frstor
test
fdiv
and
add
out
pop
push
shl
sub
mov
mov
(bad)
and
add
jne
add
mov
push
(bad)
mov
xor
test
fld
inc
dec
cmpxchg
pop
push
add
cwde
fabs
add
ja
cmp
and
test
(bad)
or
jmp
mov
sub
mov
and
add
or
add
fcom
xchg
popa
add
sub
outs
mov
bswap
bnd
add
cld
add
iret
mov
pop
xchg
add
push
sub
add
add
(bad)
mov
add
pusha
ja
test
xchg
sub
add
mov
push
xor
iret
pop
jb
lods
mov
add
add
and
inc
dec
xor
jge
aad
pop
gs
add
shld
add
mov
sub
sub
and
(bad)
pop
or
push
cmp
pusha
ja
mov
sub
mov
jb
clc
mov
add
rol
xchg
(bad)
loop
mov
push
movs
and
add
add
rol
fld
dec
jne
jmp
add
add
arpl
add
test
xchg
push
add
xchg
mov
xor
add
mov
sub
add
add
sar
pop
jge
sub
sub
jg
mov
mov
cmp
stos
(bad)
inc
rol
(bad)
mov
iret
pop
add
imul
out
fadd
mov
rol
movd
jo
sub
jg
mov
and
add
add
jp
sub
add
add
inc
sub
add
mov
les
add
bound
cdq
xor
dec
add
retf
or
iret
pop
add
mov
or
mov
cld
cmps
and
push
add
jg
jmp
jmp
push
xchg
add
add
fcom
sbb
test
dec
cld
add
(bad)
fwait
push
add
mov
add
jge
test
add
bswap
iret
adc
push
add
pop
(bad)
out
ja
sub
ins
rol
jne
sub
inc
frstor
jl
add
out
push
inc
add
mov
xchg
add
int3
and
test
cmp
mov
add
inc
add
js
int
sub
jb
enter
add
add
(bad)
mov
push
add
add
push
shr
and
jbe
sub
mov
and
add
add
retf
jle
jne
jmp
cmps
test
js
xchg
add
xor
(bad)
adc
add
ja
scas
cdq
xchg
add
jg
sub
sbb
into
add
(bad)
or
add
add
sub
xchg
out
push
ins
sahf
mov
fld
sbb
jmp
mov
and
std
add
je
int
jmp
test
add
loop
inc
jmp
mov
int3
test
out
mov
add
inc
(bad)
pop
jno
cld
add
sub
add
test
sbb
dec
xor
fistp
push
add
jmp
mov
sub
mov
jo
cmps
jbe
dec
adc
imul
add
mov
and
add
add
fbld
loope
ja
mov
add
inc
retf
outs
or
add
push
repnz
mov
add
push
add
add
ins
jbe
stc
mov
mov
pop
rol
loope
(bad)
dec
add
jmp
mov
and
dec
inc
jne
push
sub
stc
jne
jmp
add
pop
pslld
das
mov
jmp
retf
fild
add
sub
mov
add
out
(bad)
xlat
jne
add
mov
int
xchg
add
add
ret
test
xor
sub
add
jmp
mov
outs
mov
add
test
add
add
jnp
dec
cld
es
jge
add
add
retf
cmp
adc
loop
add
jmp
pushf
scas
cdq
jmp
dec
add
cld
into
fdiv
iret
add
(bad)
add
out
add
mov
data16
int
xchg
ficom
or
(bad)
cld
add
pop
jmp
mov
loop
aad
xchg
mov
and
add
out
inc
jmp
mov
sub
jmp
add
rdmsr
ins
add
lods
jne
cld
iret
mov
and
add
add
mov
add
xlat
xor
push
cmp
pusha
add
test
mov
les
ret
test
adc
add
repnz
add
mov
xchg
inc
add
mov
gs
fadd
add
cwde
je
add
xchg
add
inc
inc
sub
mov
jb
xlat
and
mov
add
fild
add
push
add
je
jmp
iret
test
add
add
jne
jge
add
and
fadd
add
add
lds
add
add
mov
push
and
loope
add
mov
pop
add
fiadd
mov
dec
inc
jne
fwait
(bad)
in
mov
pop
fisttp
mov
add
test
add
xor
push
jg
pop
push
add
js
out
or
add
and
add
test
add
addr16
popa
and
hlt
test
or
or
add
retf
add
push
fadd
sub
mov
je
jmp
iret
test
dec
cld
add
lods
stc
inc
xchg
rol
mov
push
jmp
mov
add
int3
cdq
inc
imul
jg
je
pushf
ins
clc
add
mov
sub
mov
and
add
push
pextrw
add
add
cmp
add
mov
jae
rol
loope
adc
mov
cmp
add
psllw
pop
add
jmp
test
add
in
fld
je
ret
mov
xchg
add
dec
sub
mov
mov
test
jmp
fiadd
sub
mov
je
push
out
dec
add
outs
xchg
add
cld
loop
ins
stc
mov
test
add
jge
xor
out
jmp
mov
push
sub
mov
je
jmp
iret
icebp
and
add
dec
rcl
or
ror
ss
push
push
pop
gs
jecxz
sub
sub
int
and
cld
add
paddusw
sbb
mov
mov
and
push
add
ins
and
test
jg
cli
dec
inc
add
cld
add
fdivr
mov
bound
add
test
fadd
push
push
mov
hlt
jbe
pop
push
arpl
scas
mov
add
iret
push
stc
test
mov
movsx
add
add
sub
mov
fsub
pop
pusha
add
hlt
test
add
sub
jne
and
jb
pushw
sub
mov
xchg
add
sbb
xor
and
js
jb
mov
add
mov
sub
mov
je
xchg
jg
mov
mov
sub
ficom
xor
add
and
sub
add
sub
ret
mov
scas
jne
sub
add
lds
dec
add
push
test
sub
add
jle
add
mov
push
xchg
dec
cld
iret
sub
hlt
imul
out
jmp
fcmovnbe
and
add
add
bound
ins
sahf
outs
cdq
pop
psubq
inc
jne
jmp
ja
jmp
pop
add
dec
mov
jno
je
jmp
mov
and
push
add
sub
mov
pmulhuw
jmp
fdivrp
add
je
sbb
and
dec
test
dec
add
dec
push
add
mov
dec
pop
iret
daa
xchg
inc
and
inc
test
add
inc
pushf
pop
dec
cld
add
jmp
mov
dec
inc
fadd
jae
add
jmp
mov
jecxz
add
sub
mov
icebp
aas
dec
cld
add
out
add
stc
and
add
fmul
inc
outs
inc
cmp
jns
add
out
add
add
test
add
cmp
inc
or
mov
psubq
add
add
mov
jne
mov
sub
mov
lods
test
push
inc
jmp
mov
not
jns
push
mov
setae
add
inc
mov
sub
mov
xchg
je
test
add
add
push
add
pop
inc
lds
stos
sub
jg
dec
mov
push
xchg
add
sub
mov
and
ins
out
inc
mov
sub
mov
out
test
ja
jp
mov
xchg
jle
inc
pop
sub
and
push
test
ss
and
add
ins
push
call
jnp
adc
out
test
add
mov
add
dec
inc
sub
mov
je
les
pop
add
addr16
mov
jae
mov
mov
idiv
cli
pusha
ja
sub
and
std
add
jmp
mov
mov
mov
and
push
inc
dec
mov
push
and
add
ja
pushf
scas
add
test
into
add
mov
jge
(bad)
test
add
(bad)
jmp
xor
repz
ja
xchg
dec
pop
sub
mov
rcl
mov
rol
add
sub
mov
out
aad
mov
ins
push
xchg
loope
cmovne
inc
jmp
mov
mov
inc
int
xchg
mov
out
not
mov
or
loope
and
mov
jg
mov
cmp
(bad)
(bad)
(bad)
inc
test
add
push
add
pop
sbb
scas
and
jle
dec
jmp
mov
mov
cmps
xchg
and
mov
retf
xor
add
mov
add
pop
gs
popa
ja
jmp
(bad)
cmp
add
bound
push
mov
cmp
and
add
add
add
add
add
ds
in
out
add
mov
pop
mov
and
loopne
add
ja
and
mov
add
dec
adc
imul
add
push
inc
add
mov
call
mov
jmp
nop
dec
mov
push
out
add
cld
cmp
lods
sub
add
ret
add
or
add
push
and
add
add
mov
add
add
mov
in
add
call
lods
sub
mov
test
push
add
mov
push
inc
inc
pop
test
fadd
add
scas
and
jle
dec
mov
push
add
cld
add
mov
in
jl
sub
out
inc
lods
stc
or
add
dec
pushf
ja
test
mov
jg
jmp
mov
mov
leave
sub
mov
cmp
add
add
rol
mov
xor
add
mov
cwde
add
jmp
add
lock
push
mov
sub
fwait
add
cmp
mov
test
add
add
mov
mov
mov
hlt
ss
dec
pop
add
lods
repnz
das
or
mov
cmc
fs
and
cmp
cmovne
add
loope
dec
add
pop
mov
mov
jmp
iret
test
add
mov
add
xor
out
push
retf
sti
xor
loope
ja
das
cdq
call
mov
test
mov
test
dec
add
hlt
test
jl
mov
ss
loop
ret
mov
add
mov
cwde
loopne
add
mov
bound
adc
rol
xchg
fsubr
pop
jge
out
add
ret
push
add
mov
mov
and
add
loope
cmp
mov
dec
add
jb
cld
or
inc
inc
clc
iret
add
(bad)
sbb
add
add
sbb
les
dec
or
add
fsub
add
add
icebp
add
add
ret
test
cwde
into
pop
jge
cmp
add
xchg
adc
dec
cwde
mov
inc
add
mov
and
dec
add
sbb
jb
sub
add
(bad)
fldenv
inc
(bad)
add
mov
and
dec
and
mov
jne
dec
mov
idiv
push
or
cmps
and
mov
outs
mov
xor
jge
cld
add
mov
mov
ja
aaa
(bad)
push
inc
add
add
inc
jmp
cmps
lods
add
mov
icebp
cmp
jae
push
add
loope
and
mov
add
add
inc
add
mov
push
pop
add
dec
xor
jmp
mov
mov
jmp
shr
add
in
and
add
inc
frstor
cwde
in
add
lahf
shl
mov
add
push
(bad)
rol
add
(bad)
pop
sub
add
enter
cld
add
jge
sub
mov
add
jmp
mov
jmp
scas
ror
in
add
jmp
mov
mov
setp
add
mov
cwde
push
add
xchg
ins
stc
mov
mov
cwde
jno
dec
mov
jne
adc
loope
add
mov
enter
mov
cmp
mov
mov
and
add
lods
sidtd
mov
mov
jl
mov
(bad)
std
jb
mov
and
xor
rol
loope
(bad)
pop
rol
add
mov
add
add
add
jae
ret
add
gs
jmp
jmp
xor
sub
sub
pop
ret
ja
jmp
add
mul
push
add
mov
adc
push
add
push
and
loopne
pusha
jge
inc
push
jmp
mov
cld
jno
lds
jecxz
mov
mov
mov
add
add
push
sub
ss
ins
mov
jne
stc
int
add
sar
pop
test
cmc
add
add
lds
add
push
dec
push
or
ja
add
test
add
add
(bad)
inc
test
add
jg
mov
jne
add
js
mov
sub
mov
sub
in
add
add
xor
add
push
sub
(bad)
cmp
dec
inc
jne
pop
arpl
add
and
add
stos
mov
fld
push
push
mov
mov
enter
pop
adc
add
shl
inc
mov
outs
cwde
add
cld
cwde
mov
mov
add
test
out
add
mov
je
push
rol
(bad)
pop
jne
sahf
or
aam
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
sar
shr
jae
rol
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
or
shl
jmp
mov
push
pop
push
pop
mov
push
mov
pop
mov
mov
mov
pop
jmp
shl
add
jmp
call
dec
mov
inc
ja
mov
dec
xor
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
dec
cmp
jbe
or
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
adc
or
add
stos
mov
cld
aas
add
mov
je
pop
xchg
add
or
lds
add
dec
add
hlt
add
add
pop
add
add
and
add
das
stos
test
add
add
and
lock
add
(bad)
dec
and
add
inc
add
iret
and
add
hlt
cli
add
test
clc
pop
fcomp
or
add
and
test
jmp
lock
ret
in
enter
js
xchg
add
or
add
retf
sbb
dec
sub
test
add
pop
mov
jnp
out
add
add
pushf
xlat
xchg
sbb
inc
dec
jge
and
dec
sub
jns
jmp
test
and
add
add
dec
imul
movups
add
inc
movs
jmp
cmp
pop
add
cmp
mov
pop
add
punpckldq
add
inc
mov
or
add
add
fs
rcl
mov
mov
add
(bad)
jae
aas
add
lods
hlt
pop
add
and
enter
jmp
test
add
inc
inc
(bad)
and
hlt
cli
jmp
mov
out
add
add
stos
cmps
and
add
add
test
jno
add
inc
lds
or
add
mov
and
add
add
jnp
add
dec
lds
add
mov
sub
stos
cmps
and
push
aas
add
rol
add
sub
add
inc
mov
sub
mov
shufps
pop
add
add
add
mov
out
and
add
mov
and
add
add
(bad)
xchg
out
enter
add
add
hlt
xlat
movs
mov
pop
pop
rcl
pop
sub
and
and
aas
add
add
xor
fdiv
jg
sbb
mov
sub
mov
je
retf
add
lea
ret
sar
and
add
xchg
dec
hlt
jmp
(bad)
fldenv
fcomp
cli
dec
mov
fild
add
cmova
test
and
pop
inc
dec
sub
mov
or
mov
pop
add
jmp
mov
sub
mov
jl
mov
jmp
mov
pusha
inc
call
rcpps
add
add
add
lea
jb
fsubr
fimul
fcom
or
mov
add
(bad)
jo
rol
add
cmp
xchg
aam
js
push
and
and
(bad)
lock
add
dec
test
in
add
in
pusha
cmp
mov
and
movups
add
add
test
popf
fadd
add
mov
outs
jg
jmp
mov
in
mov
mov
jl
jmp
mov
sub
mov
sub
es
lock
mov
and
add
add
add
cmps
adc
jle
dec
sub
jmp
movs
cmps
pop
mov
lock
mov
call
pop
xchg
or
mov
imul
or
push
mov
push
push
pop
ins
add
add
push
mov
and
lock
ret
sub
mov
mov
js
jmp
mov
in
add
pop
sub
stos
inc
pop
dec
xor
push
pop
add
dec
imul
sub
mov
jg
jmp
jno
and
add
add
(bad)
sar
not
imul
cmps
rol
aas
jmp
aam
and
in
add
sub
mov
and
pop
(bad)
daa
add
inc
movs
hlt
cli
dec
sub
fprem
pushf
add
das
push
daa
sub
jle
inc
jnp
int3
imul
out
add
add
dec
add
pusha
test
or
or
ret
add
pop
das
and
test
sbb
lock
ret
shr
hlt
pop
inc
inc
gs
inc
add
add
hlt
mov
in
add
push
jo
sbb
jg
jmp
jnp
jnp
in
enter
add
and
dec
test
cli
dec
add
mov
add
and
and
je
(bad)
lock
add
mov
rol
inc
jno
dec
daa
dec
mov
aas
add
add
mov
sub
stos
inc
and
xcrypt-cfb
cmps
mov
mov
test
add
sub
mov
je
jmp
mov
fs
push
bound
mov
cwde
add
and
add
jnp
in
enter
push
imul
dec
lds
pop
mov
rcr
popa
inc
jns
jns
jnp
loop
mov
pop
jmp
mov
cli
sub
aam
and
je
out
add
lock
rcr
scas
jne
sbb
add
add
test
mov
pop
sub
mov
and
je
out
add
add
sbb
add
add
mov
xlat
add
or
pop
sar
add
add
inc
xor
add
add
cmp
pop
mov
mov
mov
and
in
enter
and
add
add
dec
hlt
cmc
(bad)
adc
fmul
inc
rcl
or
add
add
add
add
mov
mov
and
add
mov
mov
loope
add
rol
add
cli
hlt
sbb
fsub
jg
pop
inc
xchg
popa
inc
jns
test
and
add
add
ret
add
sahf
cmp
xchg
and
add
inc
dec
hlt
add
or
push
test
add
and
xchg
add
add
mov
ret
add
and
pop
xchg
or
mov
and
push
add
setne
mov
and
add
add
add
sub
sahf
xchg
or
inc
inc
cmp
cmc
cli
dec
test
or
mov
jmp
clc
je
pop
add
enter
push
jmp
retf
fdiv
cli
dec
mov
pop
inc
push
stos
cmps
and
push
add
clc
test
les
add
jmp
add
retf
dec
add
add
hlt
cli
dec
ins
and
add
xlat
test
retf
add
add
out
add
inc
xlat
test
add
add
add
mov
and
add
cli
mov
and
push
pop
(bad)
mov
retf
and
add
sbb
test
loopne
ret
add
imul
xchg
or
xchg
aam
(bad)
mov
fsub
adc
test
mov
add
xchg
out
in
add
cmovb
enter
xchg
add
jmp
mov
mov
add
xchg
and
add
pop
add
mov
aas
lock
and
in
enter
and
push
aas
std
jmp
mov
les
ret
int3
push
pop
add
test
add
das
sub
retf
and
push
add
jmp
mov
and
add
add
in
mov
add
and
pop
inc
add
or
mov
sbb
add
add
(bad)
fldenv
pop
das
add
cmps
pop
les
push
add
mov
pop
ret
sub
cmp
mov
test
add
inc
dec
add
cli
dec
mov
pop
call
add
and
add
add
test
inc
pop
add
adc
dec
(bad)
jo
dec
sub
pop
fadd
fwait
test
and
add
mov
add
mov
mov
add
inc
add
mov
mov
and
add
mov
adc
add
test
cdq
fadd
add
cmp
mov
lea
add
pop
ret
sub
inc
add
js
jmp
mov
jmp
fwait
test
and
and
out
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
inc
jg
inc
shr
ror
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
shr
sar
and
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
jmp
inc
rol
inc
jl
dec
xor
sub
inc
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
and
and
jmp
call
cmp
inc
xor
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
loope
dec
or
and
add
ror
add
add
fnstsw
mov
add
add
mov
clc
mov
add
mov
test
cmps
in
mov
add
pop
cmpps
xchg
push
cmp
and
mov
xchg
add
mov
test
int3
add
add
mov
add
mov
(bad)
lods
or
add
add
inc
retf
loop
adc
add
add
add
xlat
in
out
mov
mov
and
jno
add
fstp
test
add
add
aam
fs
lea
add
mov
mov
imul
mov
in
mov
mov
jmp
sbb
(bad)
call
xchg
sub
loopne
pop
and
xor
lods
cmps
in
jmp
mov
call
mov
pop
mov
and
push
inc
or
add
mov
pop
test
call
xor
pop
and
and
in
push
ret
add
(bad)
out
add
mov
rcl
test
add
mov
(bad)
pop
retf
add
add
test
rol
dec
mov
out
add
add
bound
out
shr
add
add
mov
add
mov
and
add
mov
add
or
test
add
ret
aam
mov
and
push
add
jg
or
add
rol
test
out
mov
jbe
test
xchg
add
push
test
add
test
mov
imul
pop
shl
add
mov
and
mov
in
ja
test
jg
mov
add
add
test
add
xchg
test
mov
pop
add
mov
mov
sub
mov
xrstors
mov
imul
fdiv
scas
loope
test
mov
add
xchg
jno
test
sub
mov
(bad)
add
mov
test
out
pop
cld
and
bound
xchg
add
out
dec
add
add
sub
add
and
loopne
mov
mov
add
test
add
in
sub
mov
sbb
dec
loopne
or
dec
sub
mov
jg
add
add
ret
and
add
add
mov
jg
jmp
sbb
push
or
mov
sub
mov
jnp
out
mov
in
add
add
add
mov
aaa
in
xor
adc
dec
jno
pusha
add
stc
mov
ins
mov
out
mov
cmps
fs
popa
loop
add
mov
add
add
mov
je
add
dec
add
mov
add
mov
shl
xchg
pop
cmpeqps
add
mov
jmp
cli
lods
adc
inc
cwde
mov
add
add
cmp
add
data16
add
add
mov
and
pop
test
stc
add
fcom
and
add
loopne
aas
in
xor
ret
test
aaa
and
add
add
sub
mov
leave
je
inc
add
add
jmp
pop
cmpps
sub
mov
pmaddwd
add
dec
add
cmps
and
mov
mov
retf
loopne
in
loop
xor
or
jns
ins
icebp
inc
mov
je
adc
dec
add
test
pop
mov
in
or
rol
sbb
mov
out
mov
shl
rcl
xchg
xchg
add
dec
mov
push
pop
mov
pop
push
mov
leave
mov
add
jmp
sbb
fucomi
mov
add
mov
adc
stc
jmp
mov
call
nop
bound
push
mov
outs
add
cmps
in
push
dec
test
in
loop
sub
outs
enter
jnp
mov
mov
inc
int3
jnp
add
mov
adc
inc
out
punpckhwd
add
(bad)
call
test
add
test
test
inc
test
and
out
push
pop
cmps
in
push
mov
sub
xchg
xchg
and
je
jmp
mov
mov
add
loopne
outs
hlt
pop
and
push
test
add
mov
ret
(bad)
call
lahf
and
int
inc
and
je
jle
inc
add
add
pop
mov
inc
and
invd
movs
add
add
iret
add
test
add
xchg
xchg
adc
push
mov
cmovbe
loop
jmp
mov
sub
mov
fstp
xchg
jmp
jb
and
mov
add
add
stos
adc
inc
jnp
sub
cmps
add
ret
mov
call
mov
sub
invd
pop
xchg
push
add
sbb
inc
mov
pop
dec
call
and
add
out
mov
jmp
mov
sub
repnz
xchg
cmp
test
sar
(bad)
in
mov
stc
jmp
(bad)
fild
in
add
add
retf
mov
pop
add
add
test
add
in
add
add
inc
and
add
in
cli
jecxz
or
add
mov
mov
hlt
mov
xchg
mov
mov
or
and
pop
and
push
sbb
add
ret
inc
add
rol
mov
add
mov
add
stc
(bad)
call
push
jmp
in
and
outs
loopne
(bad)
fmul
add
loop
push
dec
jmp
xchg
push
je
and
add
mov
fnsave
fld
add
and
add
inc
and
mov
mov
sub
xchg
add
add
clc
test
mov
add
and
int3
add
push
jecxz
das
push
cmp
test
add
mov
sbb
mov
push
inc
fild
into
mov
push
loopne
mov
and
fs
(bad)
(bad)
mov
in
jmp
inc
and
int
aas
arpl
rol
mov
mov
mov
sti
add
add
xor
add
add
inc
and
jmp
mov
mov
push
stos
add
cmps
mov
mov
add
mov
mov
add
mov
std
(bad)
mov
add
push
in
add
loopne
into
add
in
dec
add
cmps
mov
add
and
sar
in
std
push
dec
outs
stos
push
push
(bad)
(bad)
call
mov
mov
jne
push
repz
mov
cmp
or
mov
jbe
dec
call
adc
mov
add
fmul
sub
add
fld
jmp
das
push
mov
scas
mov
stc
add
jmp
lock
add
mov
pop
mov
and
add
les
sbb
ror
xchg
mov
(bad)
add
add
mov
mov
lock
int3
ret
xchg
jnp
and
add
and
dec
lahf
add
inc
or
imul
mov
loope
imul
(bad)
in
add
add
test
add
add
push
mov
xchg
mov
les
mov
add
add
ins
pop
add
add
and
add
mov
dec
and
adc
call
push
ins
or
imul
out
add
mov
jmp
dec
test
movs
pop
add
push
pop
bound
add
cmps
add
shr
add
and
ror
jle
add
add
mov
lock
add
add
mov
inc
ror
add
add
scas
add
add
mov
and
out
(bad)
(bad)
push
dec
inc
add
test
lahf
loopne
sub
retfw
stos
jmp
add
add
add
add
fst
addr16
mov
call
int
xor
loopne
xlat
stc
add
xor
das
xor
add
add
and
ret
leave
push
sbb
add
mov
test
add
add
pop
retf
jnp
je
xchg
jno
add
add
int
mov
mov
and
xor
call
popa
imul
in
shl
mov
xchg
add
(bad)
add
xchg
and
xchg
jno
mov
sub
sub
add
out
ror
push
mov
mov
cld
add
add
inc
add
scas
lock
add
add
fild
xor
push
std
inc
test
add
mov
dec
jmp
and
mov
jmp
