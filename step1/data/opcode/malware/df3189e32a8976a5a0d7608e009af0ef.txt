adc
and
scas
gs
pop
and
add
inc
push
push
scas
push
push
dec
lods
add
pop
and
ja
ja
and
pusha
and
or
pop
pop
xor
ja
(bad)
adc
add
ja
and
xor
das
push
scas
jo
fcmovnu
inc
js
je
jl
sbb
ins
push
mov
scas
dec
push
push
scas
dec
jnp
pop
mov
pop
push
xlat
mov
or
and
ja
loopne
sub
jg
and
rcl
jno
ja
and
in
add
and
sub
jp
(bad)
mov
ret
mov
sub
and
jno
sub
jg
test
xor
call
and
ja
and
repnz
add
popa
clc
cld
sbb
xchg
xor
push
or
and
mov
and
cli
push
push
or
and
add
xor
xor
xor
sbb
and
inc
ja
data16
pusha
xchg
inc
ja
jae
into
dec
and
ja
sbb
sbb
inc
ins
xchg
inc
ja
or
(bad)
sbb
sub
fist
jns
cld
add
or
inc
rcr
and
push
dec
aad
adc
or
ret
mov
test
(bad)
cld
sbb
jmp
xlat
sub
or
test
(bad)
sahf
cmp
dec
or
fist
int
dec
pop
jecxz
addr16
and
sbb
pop
and
mov
sub
add
pop
sub
ja
dec
or
fneni(8087
or
push
pop
iret
pop
and
ja
add
daa
cmps
adc
(bad)
sbb
cmp
pushf
sub
inc
dec
xchg
inc
ja
add
cmps
les
and
pop
sub
lods
in
sub
data16
and
pushf
mov
sub
sbb
jl
les
pop
and
ja
repz
pop
and
ja
lods
in
cmps
dec
sbb
sbb
in
dec
add
cmp
and
hlt
mov
push
and
lods
gs
or
cmp
movs
or
pop
daa
fstp
cmps
les
and
ja
or
xor
sbb
push
call
pop
add
adc
(bad)
sbb
inc
jl
inc
ja
adc
(bad)
sbb
push
dec
xchg
inc
ja
push
jbe
pop
cmps
les
in
mov
movs
je
cmp
fwait
inc
mov
mov
jno
xchg
loopne
dec
jbe
int3
scas
add
push
and
fwait
mov
(bad)
scas
ret
mov
test
dec
xor
je
and
ja
and
ja
dec
and
sbb
and
(bad)
fwait
pushf
cmp
nop
shl
mov
pop
adc
add
fst
mov
cmps
je
jg
and
mov
cmps
je
lahf
mov
add
retf
fisttp
and
lahf
pop
push
add
shr
xor
inc
mov
int3
daa
jbe
and
mov
sbb
mov
je
imul
(bad)
data16
pop
ja
shl
(bad)
(bad)
mov
cmps
lods
(bad)
dec
in
shl
inc
cwde
jnp
sub
out
(bad)
mov
fwait
jmp
push
sbb
cwde
aas
inc
add
popa
clc
daa
aad
cld
daa
xor
dec
pop
sub
sbb
pop
(bad)
cmps
push
or
shl
xor
imul
sbb
inc
dec
add
movs
int3
(bad)
push
pop
and
mov
push
cld
lahf
rcr
push
shl
in
popa
fistp
jbe
and
pushf
push
movs
(bad)
cmp
and
inc
cwde
fs
sub
cmps
in
jnp
jae
mov
js
ins
inc
add
ret
mov
mov
fcom
inc
and
ja
and
add
jg
jo
ja
lods
(bad)
jle
push
add
cwde
iret
mov
(bad)
xor
add
jne
mov
jns
pop
lods
(bad)
mov
and
jle
push
add
cwde
iret
push
inc
cwde
fs
rcr
not
lahf
jnp
mov
fcmovne
adc
jae
add
(bad)
scas
xor
(bad)
call
jb
nop
inc
ja
inc
hlt
ja
inc
cld
ja
dec
xor
and
push
nop
inc
ja
fucomi
xor
popa
cld
jbe
scas
push
jg
call
popa
hlt
jne
sbb
inc
mul
add
fild
shl
dec
sbb
popa
cld
pushf
addr16
cmp
pop
and
adc
popa
clc
xor
aad
mov
pop
and
mov
jb
cmps
popa
cld
cld
sbb
in
push
fcomp
add
fnstsw
xor
dec
cmps
fild
ja
jp
mov
loopne
add
int3
cmp
pop
and
and
scas
jne
sar
mov
fdivr
mov
scas
test
call
mov
data16
sbb
in
push
fcomp
add
fnstsw
mov
sub
dec
scas
iret
adc
mov
sub
arpl
xchg
jb
and
mov
sbb
test
fstp
dec
cmps
(bad)
cmp
dec
cmps
(bad)
(bad)
fstp
dec
test
test
and
mov
test
(bad)
sub
jg
mov
lods
in
mov
push
and
scas
pop
jnp
popa
cld
shl
bswap
mov
add
inc
cld
(bad)
sbb
adc
aaa
addps
or
sar
cmp
(bad)
cdq
shr
mov
and
mov
retf
jge
mov
out
dec
dec
xchg
cld
sbb
and
xor
lock
inc
mov
jp
mov
or
imul
lahf
popa
cld
inc
jae
dec
cld
sbb
out
and
iret
add
mov
push
sahf
sar
cmp
(bad)
cdq
shr
mov
and
mov
retf
jge
mov
out
dec
dec
xchg
iret
adc
cld
(bad)
sbb
fild
cld
sbb
and
sub
in
ret
and
rcl
jae
add
pop
arpl
rol
sbb
out
and
add
scas
iret
sbb
sbb
sbb
lea
mov
push
sub
add
shl
sub
xchg
div
and
mov
jp
mov
or
imul
out
ss
lods
clc
inc
mov
push
mov
pop
(bad)
xor
xor
movs
(bad)
(bad)
sbb
addr16
pop
push
lds
push
int3
xor
add
int3
jecxz
cmps
fild
(bad)
mov
fmul
mov
or
imul
out
push
and
pushf
mov
shl
(bad)
lahf
(bad)
mov
je
pop
lods
(bad)
sbb
cmps
cmp
ja
jb
add
add
pop
and
xor
add
shl
(bad)
jae
and
xchg
jp
mov
or
and
push
or
sub
stos
das
(bad)
cdq
sub
les
or
les
sbb
pop
(bad)
sar
and
scas
push
mov
sbb
scas
ret
mov
movs
lods
(bad)
lahf
adc
fwait
jno
xchg
fcmovne
sbb
push
jae
add
inc
dec
jmp
mov
fild
add
and
sbb
pop
and
xor
data16
shl
mov
imul
sar
enter
jb
pop
call
and
aad
lock
mov
jo
pop
lods
ret
inc
cwde
sub
mov
mov
rol
lods
lock
cwde
and
clc
lds
shl
inc
xor
arpl
add
lods
ret
div
adc
pushf
mov
popa
in
cwde
push
add
js
fadd
(bad)
shl
push
lahf
pop
(bad)
mov
adc
leave
mov
lods
in
je
add
nop
jo
pop
ja
and
test
fcomp
lods
ret
mul
mov
pop
(bad)
ja
push
pop
hlt
jge
mov
pop
and
paddsb
dec
sbb
and
or
and
sub
or
inc
ja
push
sbb
les
xor
shl
ja
add
cmps
fild
ja
mov
push
mov
and
sbb
sbb
mov
int3
sub
sbb
mov
jne
fild
pushf
aam
and
sahf
add
add
xlat
cmc
jg
and
test
ja
popa
hlt
daa
shl
cld
sbb
push
cld
pusha
fist
shl
hlt
and
pop
add
cmps
jge
pop
sub
hlt
cmp
pop
mov
pop
(bad)
ja
push
sub
adc
(bad)
(bad)
dec
pop
pop
mov
pop
scas
inc
and
ret
sbb
jo
add
and
(bad)
and
inc
ja
popa
clc
neg
dec
add
add
ret
adc
scas
inc
(bad)
shl
aam
nop
inc
ja
popa
lock
aad
loopne
mov
mov
pop
xlat
movs
cld
and
jae
dec
cmps
jae
(bad)
sbb
(bad)
mov
sbb
mov
out
or
mov
xchg
sbb
xor
xor
(bad)
sbb
adc
mov
mov
push
(bad)
les
cmp
pop
lods
inc
mov
jne
lahf
and
and
mov
mov
push
sbb
inc
movs
repz
add
gs
je
stc
mov
mov
jb
mov
sbb
sub
les
inc
jl
and
xchg
shl
mov
jno
xchg
fcmovne
adc
jae
mov
mov
jl
pop
adc
not
and
hlt
cmp
sub
dec
push
and
ja
push
lahf
popa
cld
jbe
and
(bad)
stos
lods
clc
cmp
jmp
rcl
sub
sub
scas
inc
je
sbb
push
sbb
mov
inc
jg
pusha
add
dec
nop
aad
and
ins
sub
hlt
pushf
sub
(bad)
scas
ret
mov
mov
test
sbb
push
add
cmp
fadd
add
test
and
adc
data16
lods
(bad)
hlt
cmp
lods
clc
cmp
jmp
push
push
xlat
jne
mov
mov
push
scas
add
fs
jge
fild
ja
fdiv
(bad)
shl
inc
cld
sbb
and
repnz
mov
inc
cld
ja
pop
cld
ja
sub
add
xor
sbb
movs
xor
movs
(bad)
in
and
sbb
pop
dec
add
pop
fs
lahf
jns
add
popa
clc
sbb
pop
je
inc
aaa
and
cld
sbb
in
push
fcomp
add
fisttp
cmp
inc
mov
and
ja
popa
hlt
daa
xor
push
mov
and
(bad)
mov
aam
xor
fsubr
lea
jg
mov
lods
in
lock
ja
add
pop
ja
and
inc
jns
inc
pushf
mov
pop
and
xchg
shl
mov
and
repnz
(bad)
mov
in
sbb
adc
fst
dec
cmps
(bad)
daa
mov
sti
mov
mov
mov
xor
pop
sub
lahf
xor
mov
mov
cmps
xchg
int3
mov
(bad)
mov
int3
jmp
cmps
cmp
ja
out
mov
cmp
(bad)
(bad)
fwait
test
jmp
stc
mov
mov
jae
(bad)
sbb
xchg
repnz
(bad)
mov
out
repnz
dec
sbb
repnz
scas
cmp
pop
and
xor
or
movs
ret
fisttp
and
cli
fucom
dec
sti
data16
rcr
and
lods
inc
mov
pslld
add
je
ss
(bad)
lahf
mov
loopne
(bad)
lahf
arpl
mov
mov
mov
inc
test
jmp
stc
mov
mov
jae
(bad)
sbb
mov
data16
in
dec
xlat
add
cdq
std
mov
mov
add
push
lds
aad
std
mov
sar
mov
loopne
(bad)
lahf
inc
mov
(bad)
(bad)
mov
out
dec
pop
and
rcr
dec
pop
and
repz
add
xchg
test
cmps
(bad)
aaa
or
jmp
xor
pop
int3
sti
sbb
xor
(bad)
mov
add
sub
xor
fwait
and
rcl
and
jbe
icebp
loopne
pop
dec
push
xlat
sbb
pop
scas
(bad)
hlt
pushf
sub
add
add
xchg
les
aad
std
mov
sar
mov
loopne
dec
cmps
fild
ja
cs
repnz
mov
add
and
add
or
mov
(bad)
ja
push
daa
sbb
sbb
mov
int3
retf
and
dec
lahf
mov
add
and
jbe
mov
xor
sbb
shr
sub
add
add
loope
inc
ja
cdq
std
mov
sar
mov
loopne
dec
cmps
fild
ja
cs
repnz
mov
add
and
add
or
mov
(bad)
ja
push
daa
sbb
sbb
mov
int3
inc
and
dec
lahf
mov
add
and
scas
scas
(bad)
mov
clc
(bad)
mov
out
jbe
mov
xor
sbb
popa
lods
(bad)
hlt
pushf
sub
add
test
cmps
(bad)
jbe
and
sbb
sbb
daa
clc
add
fneni(8087
or
cmps
fild
ja
cs
repnz
mov
add
and
add
or
mov
(bad)
ja
push
inc
sbb
sbb
mov
int3
scas
and
dec
xor
add
in
dec
lods
(bad)
hlt
pushf
sub
add
test
cmps
(bad)
jbe
and
imul
cmps
mov
ja
xor
jb
nop
inc
ja
test
jmp
mov
cli
mov
and
sbb
(bad)
or
inc
ja
inc
mov
pop
lods
fadd
lods
ret
mov
fcos
mov
and
imul
test
jmp
shl
push
cld
pusha
fist
shl
jle
sub
cli
fstp
repnz
mov
scas
cmp
movs
lods
fdiv
lods
ret
hlt
and
loope
ja
cmps
movs
mov
(bad)
stos
aas
pop
and
ror
cmps
mov
jbe
stos
mov
pop
and
mov
pop
add
jecxz
out
cmps
(bad)
pusha
pop
jecxz
xlat
cmps
(bad)
jbe
and
cli
(bad)
repnz
mov
scas
test
rcl
and
cmp
(bad)
(bad)
fwait
test
jmp
xor
out
(bad)
daa
rcr
arpl
add
lods
inc
mov
pslld
add
mov
push
cld
(bad)
dec
cmps
mov
ja
and
xor
ret
hlt
and
and
ja
test
jmp
shl
push
cld
pusha
fist
shl
jle
sub
imul
iret
das
cli
(bad)
dec
test
dec
nop
adc
shl
mov
mov
(bad)
repnz
scas
test
rcr
and
mov
cld
xor
movs
and
repnz
add
iret
jno
pop
and
shr
(bad)
pop
or
mov
dec
add
loopne
hlt
std
enter
and
ja
and
sbb
pop
and
test
xchg
in
mov
(bad)
mov
dec
gs
sbb
mov
int3
aas
sbb
xor
lods
ret
adc
fild
ja
mov
mov
enter
aad
pushf
mov
lods
dec
rol
mov
test
test
push
mov
mov
pop
xlat
movs
cld
in
dec
cmps
jae
(bad)
sbb
mov
adc
(bad)
mov
ret
mov
and
cli
fld
push
cld
fnstsw
mov
xor
(bad)
sbb
mov
add
fist
fld
mov
jae
(bad)
sbb
mov
adc
(bad)
mov
loope
pop
and
ja
fsubr
pop
jge
scas
imul
test
cmps
(bad)
jne
scas
test
cmps
(bad)
(bad)
fstp
cmps
test
jmp
aad
jo
cmps
fild
into
pop
and
ja
or
(bad)
mov
and
rcl
cdq
movs
mov
fist
shl
iret
sub
ja
(bad)
mov
add
dec
movs
and
repnz
add
cmps
je
pop
mov
movs
dec
cmps
xor
(bad)
sbb
mov
or
(bad)
mov
test
and
cli
fld
cmps
je
ja
xchg
hlt
mov
(bad)
mov
scas
cmp
movs
lods
fcomp
lods
ret
hlt
and
inc
ja
inc
or
(bad)
mov
test
in
dec
cwde
and
ja
mov
push
mov
dec
dec
cmps
fild
xor
cdq
pop
mov
add
cdq
pop
mov
stos
add
jecxz
xchg
and
sbb
cmps
(bad)
cli
fstp
dec
mov
fcos
mov
and
hlt
pushf
xor
mov
in
push
fcomp
add
fisttp
mov
iret
sbb
pop
and
ret
std
mov
mov
push
cld
fstp
dec
movs
(bad)
mov
int3
lahf
push
pop
and
mov
dec
add
fstp
dec
mov
fcos
mov
and
hlt
pushf
xor
test
popa
add
cdq
test
pop
scas
test
cmps
(bad)
daa
rcl
and
fadd
cmps
(bad)
(bad)
fild
cld
fld
fbld
sub
mov
(bad)
daa
rcl
and
test
cmps
(bad)
daa
rcl
and
test
ffree
dec
cmps
(bad)
js
retf
cmps
cmps
mov
ja
and
repnz
(bad)
mov
and
xchg
shl
mov
fist
push
cdq
ror
push
scas
test
rcl
and
mov
ja
sub
mov
scas
xor
sbb
mov
scas
xor
test
dec
push
sub
scas
imul
loopne
cmps
fist
push
add
mov
out
(bad)
mov
nop
inc
ja
mov
mov
daa
cmp
and
hlt
mov
push
and
lods
gs
lahf
popa
in
outs
mov
scas
cmp
(bad)
xor
inc
xchg
nop
add
ja
jl
ja
int3
or
pop
and
mov
int3
jb
cmps
fild
ja
push
ficomp
(bad)
mov
and
inc
xchg
fwait
scas
gs
lahf
popa
fsubr
fadd
cld
and
fimul
mov
fdivr
mov
mov
xor
and
out
out
ja
lods
in
setnp
jp
mov
movs
lods
(bad)
pop
fcom
push
xor
aaa
pop
dec
add
pop
and
mov
int3
out
pop
and
mov
fcmovne
adc
push
scas
pop
jg
pop
cmp
jbe
lods
(bad)
mov
mov
pop
lods
fxtract
jge
nop
aaa
pop
and
xchg
mov
sbb
hlt
jge
lahf
ss
and
push
push
mov
ja
jecxz
fwait
lds
jae
and
mov
pusha
cdq
ss
and
ja
lods
enter
mov
js
and
sbb
mov
test
jne
and
mov
add
push
add
(bad)
enter
fsubr
sbb
sbb
sahf
cmp
add
and
and
mov
sbb
dec
hlt
mov
fadd
jb
mov
add
movs
or
aaa
scas
and
add
rol
jbe
sub
jbe
sbb
ss
iret
push
mov
lahf
ss
lods
lock
jmp
mov
lahf
ss
int
jbe
and
jb
nop
inc
ja
and
call
pop
adc
add
sar
jo
and
jp
mov
inc
out
sbb
addr16
imul
sbb
sbb
add
rcr
rol
pop
and
jp
mov
js
inc
mov
pop
inc
cwde
int
jne
and
mov
inc
add
sub
call
sbb
mov
mov
mov
pop
inc
cwde
int
jne
and
xchg
mov
sbb
mov
enter
add
int
mov
mov
pop
inc
cwde
int
jne
and
cdq
push
sub
ja
sub
call
pop
pusha
cdq
ss
add
int
mov
nop
inc
ja
and
call
pop
aam
mov
sub
call
pop
and
popf
ss
and
add
inc
dec
add
ret
test
(bad)
not
lahf
ss
fs
(bad)
mov
inc
ja
in
jbe
sbb
ss
int
ja
and
xor
add
sub
aaa
pop
int
ja
and
fwait
lds
jbe
sbb
ss
int
ja
and
jb
nop
inc
ja
and
call
les
ja
aam
xchg
loop
jb
mov
mov
and
mov
jmp
(bad)
add
loop
jns
and
mov
or
daa
clc
data16
pop
push
hlt
mov
add
dec
fsub
ja
gs
or
and
cwde
xchg
inc
ja
sub
call
outs
fild
pushf
ja
in
jmp
inc
ja
push
push
mov
xor
inc
mov
or
jbe
and
xor
and
and
jb
mov
test
nop
mov
push
mov
pop
test
(bad)
js
and
sbb
call
push
mov
jo
popa
cli
js
popa
sti
dec
cwde
and
ja
mov
or
fs
cmps
and
out
and
cdq
inc
data16
xchg
inc
mov
add
push
or
sbb
inc
ja
and
out
and
dec
sbb
inc
ja
push
adc
add
movs
jge
pop
push
dec
hlt
pop
sub
aaa
pop
es
fcomp
jae
add
ja
lods
lock
lods
(bad)
(bad)
nop
mov
rcr
mov
les
call
and
fcomp
ja
and
ja
lods
lock
test
(bad)
hlt
jge
nop
aaa
pop
and
outs
shr
inc
cld
dec
sub
call
out
sbb
jb
mov
ja
sub
aaa
pop
sbb
add
jle
add
jge
nop
aaa
pop
and
outs
shr
inc
cld
dec
sub
call
aam
and
jb
mov
ja
sbb
ss
sbb
add
in
data16
nop
or
inc
ja
in
sub
in
ret
and
rcl
jae
cmp
adc
xchg
pusha
add
ret
movs
lods
(bad)
mov
mov
pop
dec
or
sbb
add
and
(bad)
lahf
dec
adc
sbb
lahf
fnstcw
ja
js
xor
sbb
lahf
sub
ja
xor
ss
pushf
inc
jl
and
xchg
shl
(bad)
sahf
dec
cmp
lahf
or
rcr
int
and
lahf
sbb
adc
ss
dec
pop
int
and
lahf
ins
jnp
ja
jl
xor
fwait
jno
xchg
fcmovne
jo
push
jae
scas
outs
and
and
add
data16
fcomp
test
cmps
xor
and
xor
lods
fdiv
lods
ret
hlt
cmp
mov
sbb
add
iret
xchg
and
adc
and
jb
nop
inc
ja
inc
shl
cld
xor
mov
xor
jecxz
stos
pop
and
ja
inc
daa
ja
shl
(bad)
sbb
and
and
xor
data16
pop
and
sbb
and
cmp
(bad)
xor
and
gs
pop
test
ror
pop
and
ja
or
cli
sbb
rcr
inc
sub
sbb
or
sbb
pop
(bad)
mov
popa
ja
test
jne
aad
mov
xor
add
pop
dec
add
xor
jae
and
add
mov
cmp
inc
mov
and
jb
nop
inc
ja
popa
call
cli
sbb
rcr
xchg
mov
sbb
jno
xchg
fcmovne
and
sbb
imul
shl
cmp
inc
mov
popa
or
sbb
lods
dec
(bad)
fild
ja
test
xor
push
xor
lea
mov
inc
mov
rcl
cmps
(bad)
cmps
xor
call
lods
iret
pop
div
and
mov
lods
in
setnp
push
inc
cmp
mov
and
and
add
dec
pop
pushf
out
pop
and
nop
shl
(bad)
lahf
jnp
mov
lods
in
mov
push
and
scas
jne
sar
mov
mov
pop
adc
ds
cmps
and
ja
adc
rcr
dec
cmps
and
ja
or
rcr
dec
cmps
and
ja
cmp
rcr
dec
cmps
and
ja
xor
rcr
dec
cmps
and
ja
mov
mov
dec
test
adc
shl
cmp
out
popa
(bad)
js
and
js
xor
dec
call
(bad)
mov
xor
mov
mov
mov
out
xor
dec
call
je
xchg
adc
popa
out
sbb
fadd
jae
sbb
ja
and
sub
inc
mov
in
cli
pop
and
sbb
lahf
add
ja
xchg
push
mov
not
dec
xor
retf
sbb
daa
mov
pop
ja
lods
inc
(bad)
fucomi
(bad)
cld
or
and
(bad)
fcmovne
add
mov
inc
(bad)
fcmovne
add
sbb
test
clc
hlt
mov
mov
lods
lods
adc
pop
and
ja
add
rcr
cmp
mov
maskmovq
neg
(bad)
mov
and
dec
data16
rcr
dec
mul
add
lods
clc
hlt
mov
or
jne
rcr
sbb
push
xor
jae
xchg
add
fs
je
gs
mov
sbb
push
sub
popa
adc
or
add
mov
lods
add
pop
and
ja
sbb
jne
inc
mov
pop
push
pop
(bad)
mov
sbb
jne
jne
(bad)
fcmovne
add
and
add
lods
clc
hlt
mov
xadd
lahf
pop
and
add
jmp
pop
fucomi
(bad)
cld
or
and
(bad)
fcmovne
add
mov
mov
mov
pusha
add
fadd
(bad)
shl
add
mul
add
lods
clc
aas
fcomp
push
jbe
ins
mov
and
add
clc
hlt
mov
or
jne
rcr
sbb
sbb
ja
and
jo
fild
ja
push
sbb
shl
cli
or
add
jae
and
xor
fild
jae
and
cmc
out
fcos
mov
jp
mov
fcmovne
or
push
jae
jb
nop
inc
ja
push
or
movs
cmp
pop
push
or
(bad)
call
xchg
fucomi
je
and
gs
scas
inc
jnp
int3
add
sbb
jmp
mov
fild
js
jno
mov
mov
add
aaa
pop
adc
fsub
mov
test
nop
inc
ja
xchg
add
gs
add
push
daa
dec
mov
add
add
adc
add
movs
scas
adc
shl
push
mov
add
fdiv
mov
mov
lods
add
aad
pop
jbe
and
xor
or
fidiv
lods
inc
adc
push
jbe
jno
dec
sbb
hlt
mov
in
(bad)
(bad)
stos
and
cli
jbe
and
mov
mov
test
push
(bad)
shl
jb
nop
inc
ja
in
call
test
shl
mov
mov
mov
and
and
sub
jne
adc
lahf
sub
dec
push
jg
mov
lods
in
add
add
call
push
and
loop
xchg
xchg
push
pushf
pop
ja
sbb
ja
movs
jae
sahf
mov
add
cmps
and
jb
nop
inc
ja
movs
mov
ja
xor
out
mov
cwde
inc
ja
push
sbb
in
fisttp
push
xchg
test
and
sbb
add
pop
js
mov
cwde
cmps
fisttp
mov
out
psubd
retf
sbb
lahf
icebp
jge
ja
mov
test
int
cdq
ss
sub
mov
out
push
cli
push
sub
int3
sbb
mov
es
cld
cli
dec
shl
mov
mov
test
dec
add
aaa
pop
movs
test
xchg
test
cmp
xor
adc
mov
add
mov
cwde
cmps
fcmovnb
xchg
pop
cmps
cmp
js
inc
ja
sub
out
mov
cwde
cmps
fcmovnb
xchg
pop
scas
adc
or
aam
cmps
(bad)
jb
nop
inc
ja
cdq
jecxz
cmps
fild
js
mov
ja
int3
aas
mov
sti
dec
sbb
loop
sti
dec
dec
in
popa
sar
add
(bad)
fst
out
mov
dec
add
and
lahf
cmc
jl
ja
loop
sbb
mov
xor
out
addr16
and
jmp
(bad)
repnz
dec
pop
and
jb
nop
inc
ja
sub
sahf
aam
add
(bad)
ja
(bad)
mov
cld
fisttp
cmps
fild
mov
je
fild
add
lds
inc
cmps
lods
fidiv
pop
daa
push
mov
adc
ret
in
out
mov
fild
jae
and
stos
(bad)
push
jb
sar
add
(bad)
frstor
neg
movs
sti
ja
and
add
(bad)
mov
cli
mov
retf
dec
shl
sub
dec
(bad)
out
mov
(bad)
mov
mov
pop
(bad)
lahf
popa
jae
ja
add
sub
mov
xor
out
and
loop
retf
dec
cmps
fild
cld
int
out
mov
std
rcr
imul
sti
dec
int3
fisttp
mov
push
cdq
int
mov
add
movs
and
push
lods
retf
dec
cmps
fild
jae
and
shl
or
sti
dec
push
cdq
inc
ja
mov
pop
lods
test
xchg
(bad)
(bad)
call
ja
mov
test
and
add
fnstsw
xlat
xchg
(bad)
cld
int
fimul
pop
es
int3
cli
dec
cmps
fisttp
mov
mov
enter
shl
mov
mov
dec
cmps
fld
aad
mov
mov
clc
fisttp
pop
and
repnz
dec
cmps
(bad)
shl
mov
in
sti
dec
cmps
fild
mov
ret
pop
pop
and
push
xor
loop
sti
dec
shl
rcr
and
fisttp
pop
push
mov
pop
sub
mov
clc
fisttp
xchg
(bad)
(bad)
push
xor
loop
and
ror
out
mov
xor
dec
shr
mov
and
lahf
gs
ja
mov
or
pop
and
or
psllq
add
mov
xadd
jmp
js
pop
or
mov
jmp
cld
fst
out
mov
and
ja
into
(bad)
cli
sbb
add
ffree
fisttp
xchg
push
mov
test
fild
mov
sbb
add
lock
mov
or
push
(bad)
test
call
add
hlt
mov
or
or
test
call
add
jmp
cmps
and
and
ror
fimul
rcl
push
fld
xadd
jmp
popa
shl
xor
hlt
mov
lea
push
sti
dec
mov
mov
lods
retf
dec
shl
mov
pop
mov
add
xchg
push
xchg
xchg
aam
(bad)
mov
es
dec
sbb
cmps
loop
ja
sbb
ja
or
dec
gs
and
imul
and
ja
xor
ja
and
jge
sbb
ja
daa
inc
pushf
nop
sub
mov
jg
fcomp
jbe
cmp
rcr
out
mov
sti
dec
cmps
fucomi
add
sub
mov
inc
hlt
std
shr
mov
retf
dec
and
add
mov
dec
int3
fisttp
cmps
mov
or
pop
and
ja
hlt
push
nop
inc
ja
or
mov
(bad)
jbe
xchg
test
cmp
xor
ja
dec
fwait
jno
xchg
fcmovne
cmp
push
jae
sub
inc
(bad)
cmps
push
loope
(bad)
gs
add
and
cdq
inc
ja
xor
movs
cld
sbb
lods
inc
mov
sbb
test
test
sbb
js
and
test
test
xchg
retf
mov
test
movs
ins
pop
add
pop
add
xor
and
ret
lods
push
(bad)
sahf
popa
(bad)
ja
xor
mov
adc
xor
popa
(bad)
jbe
pop
(bad)
data16
(bad)
xor
and
std
pop
sub
bound
and
neg
and
xor
and
add
cmp
mov
pop
add
ja
and
(bad)
sbb
neg
addr16
call
add
cli
jb
sub
add
sbb
add
rol
cmps
loopne
fcmovnu
add
mov
inc
(bad)
shl
sub
out
add
and
ja
movs
add
push
add
sbb
daa
cmp
add
inc
jbe
push
add
sbb
fld
mul
jb
mov
iret
push
std
pop
sub
bound
fild
pushf
push
movs
inc
mov
jge
pop
push
in
xor
and
rcr
ja
and
jae
popa
push
xchg
inc
mov
jp
mov
or
cld
sub
clc
dec
div
dec
push
and
sbb
pop
and
xchg
in
push
fcomp
add
fisttp
dec
data16
jo
pusha
aaa
jbe
iret
push
cmp
fild
or
lods
ret
sub
jg
mov
lods
in
pop
add
ja
add
ja
jb
enter
pop
rcr
not
cmps
fisttp
mov
push
or
cmps
push
or
frstor
mov
and
cli
frstor
mov
and
hlt
pushf
xor
(bad)
mov
rcr
xchg
out
(bad)
mov
lea
div
dec
add
xor
jmp
add
cmps
in
jnp
jb
enter
pusha
(bad)
dec
jbe
and
ja
movs
add
dec
add
pop
and
mul
jbe
ja
loop
mov
sub
add
inc
jnp
add
(bad)
mov
ror
and
pop
jne
ja
out
mov
je
aaa
mov
push
ja
lods
inc
mov
retf
movs
je
and
ja
pop
or
sub
mov
push
lods
inc
xor
inc
and
cld
and
jb
popf
or
cld
sbb
fsubr
(bad)
shl
pop
sub
in
ret
and
rcl
jae
inc
jbe
sub
mov
dec
add
fsub
ja
and
xor
ja
and
mov
and
(bad)
sahf
movs
(bad)
ds
and
hlt
cmps
(bad)
imul
push
xor
lahf
fnstenv
ja
popa
or
cdq
cmps
enter
cmp
pop
push
stc
(bad)
fwait
dec
add
or
push
or
mov
push
ja
dec
add
sbb
dec
lock
sbb
lahf
loope
add
rcr
pop
pop
and
lahf
or
loopne
add
jnp
sub
out
(bad)
mov
jae
les
adc
jnp
add
ret
mov
mov
dec
xor
push
xor
ja
and
ja
(bad)
mov
push
ja
lods
(bad)
(bad)
mov
ror
add
pushf
jne
add
mov
push
ja
dec
add
sbb
xor
add
dec
or
(bad)
mov
jb
mov
cwde
fs
sub
jne
and
scas
jne
lahf
popa
cld
sahf
cmp
(bad)
push
pop
and
lods
sar
jmp
push
xchg
add
pop
out
dec
and
(bad)
xor
xor
pop
and
add
cmp
or
hlt
pushf
xor
lods
mov
xadd
pop
ins
les
mov
push
ja
cmps
les
pop
pop
jnp
int3
xor
data16
jae
and
pop
pop
pop
jge
and
push
pop
jo
inc
ja
or
pop
cmps
les
popa
cld
(bad)
call
sub
in
ret
and
rcl
jae
sub
jne
lahf
popa
cld
movs
dec
in
neg
and
dec
mov
jbe
ja
adc
mov
arpl
mov
jbe
ja
loopne
xor
jb
xor
loopne
pop
int3
iret
and
sbb
out
and
push
(bad)
mov
jb
int3
fsubr
inc
sar
add
sbb
inc
in
ja
inc
call
ja
pop
repnz
ins
mov
add
and
shl
mov
jecxz
sbb
pop
adc
and
sbb
popa
or
fs
sbb
retf
pop
shl
(bad)
sbb
xchg
inc
mov
inc
jb
cmps
shr
in
mul
cmps
ins
fwait
pop
movs
jmp
ins
and
div
fild
add
xchg
inc
jne
popa
(bad)
pushf
jnp
jmp
push
and
js
popa
(bad)
js
pusha
add
jbe
int3
or
es
fisttp
jne
dec
(bad)
jbe
pop
(bad)
ja
xrelease
sub
rcr
jg
xchg
adc
dec
rcr
and
js
jno
js
out
xor
ret
cld
adc
popa
in
js
imul
mov
sbb
and
and
out
jno
js
out
xor
inc
jg
jno
js
jbe
pop
mov
in
pop
lods
fdiv
lods
ret
sub
jg
mov
mov
out
mov
ja
fs
jecxz
mov
pop
mov
cmova
pop
out
in
out
mov
pop
enter
imul
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
scas
enter
sub
mov
ja
data16
jecxz
loope
pop
mov
xor
inc
out
in
out
mov
imul
nop
out
sub
out
mov
mov
mov
out
cld
nop
out
mov
fwait
enter
cmp
sahf
shl
nop
out
mov
adc
jl
out
mov
jb
sbb
enter
sbb
cld
inc
mov
out
scas
dec
jae
mov
cld
or
out
adc
nop
hlt
fwait
and
out
mov
or
sar
nop
hlt
pusha
and
out
push
enter
nop
push
enter
enter
dec
fcos
ja
fs
(bad)
add
inc
xor
call
data16
push
out
mov
mov
out
mov
ja
fs
xor
nop
out
mov
out
mov
out
fadd
out
mov
and
jecxz
mov
pop
mov
scas
enter
jno
nop
out
mov
movs
enter
or
mov
scas
rcl
out
mov
out
mov
out
mov
cmova
pop
out
adc
out
mov
(bad)
out
(bad)
nop
out
mov
ja
data16
fcmovnu
add
enter
enter
jecxz
loope
pop
mov
scas
enter
jno
nop
out
mov
movs
enter
or
mov
scas
rcl
out
mov
out
mov
out
mov
xor
inc
out
adc
out
mov
(bad)
out
(bad)
nop
out
mov
out
mov
out
int
movs
fcmovnb
mov
lods
in
mov
push
and
scas
pop
jg
popa
or
shl
mov
fsubr
xor
mov
movs
lods
ret
lods
push
mov
data16
aam
ja
inc
ja
lods
fdiv
je
jmp
shl
mov
mov
push
push
mov
fiadd
pushf
jb
push
cmp
mov
mov
dec
pop
and
jo
and
js
jno
(bad)
mov
fisttp
out
scas
fisttp
iret
and
(bad)
sbb
scas
add
fs
jb
fs
ja
sar
add
push
xchg
dec
lea
mov
xchg
add
mov
pop
push
adc
and
js
imul
neg
and
jg
mov
ja
test
scas
cmp
xadd
and
bnd
jno
jbe
je
std
push
and
sbb
or
call
hlt
pushf
add
mov
add
fild
push
xchg
inc
jnp
sbb
dec
xchg
out
(bad)
mov
jb
int3
cdq
xor
ins
(bad)
mov
pop
and
sbb
and
int
and
mov
lods
rol
sub
mov
retf
jge
mov
jno
hlt
gs
xor
imul
add
sbb
sub
int3
mov
sub
mov
in
repz
add
xchg
jge
cdq
ret
add
dec
sbb
mov
cmp
pop
call
cwde
cdq
ret
add
sbb
sbb
retf
push
lahf
cdq
imul
ja
aam
jb
cdq
inc
ja
popa
call
ja
cmps
les
in
mov
mov
push
add
aam
xor
add
cmps
inc
mov
retf
add
cdq
inc
ja
popa
cld
add
sbb
xor
ja
ja
(bad)
mov
test
inc
(bad)
shl
fmul
sbb
(bad)
jae
lock
scas
in
add
fdiv
mov
dec
ja
lods
inc
stos
mov
dec
ja
scas
jge
push
xchg
(bad)
(bad)
call
jle
lods
cmp
div
int3
inc
cmp
mov
or
cmp
mov
sub
mov
out
ror
mov
cdq
inc
ja
fs
(bad)
test
add
daa
mov
dec
ja
cmps
les
in
mov
xor
add
aam
xor
add
cmps
inc
sbb
sbb
jb
cdq
inc
ja
popa
hlt
add
sbb
xor
daa
inc
xchg
xor
retf
xor
popa
lock
lock
scas
in
add
aam
test
rol
dec
pushf
cdq
inc
ja
xchg
push
cwde
mov
mov
les
cmps
in
add
push
push
mov
sbb
ror
xchg
xchg
in
add
push
clc
mov
dec
(bad)
and
pop
and
or
dec
call
lahf
or
mov
fisub
push
xor
jne
and
ja
and
ja
(bad)
mov
dec
ja
lods
inc
xchg
(bad)
js
pop
and
ja
popa
call
and
ins
add
push
in
inc
ins
add
int3
(bad)
aas
pop
and
mov
iret
or
pop
sbb
ja
(bad)
mov
mov
leave
mov
lods
in
mov
add
ja
and
cli
xor
push
pop
and
xchg
shl
mov
sbb
ja
and
push
sti
inc
ja
aam
xchg
loop
leave
adc
int
imul
mov
cli
jo
fstp
pop
xchg
lods
shr
shl
xor
(bad)
mov
iret
cs
leave
outs
add
xchg
jge
loop
dec
adc
scas
into
ror
out
mov
call
mov
scas
inc
mov
mov
cmps
fild
lahf
or
out
mov
push
push
mov
and
mov
(bad)
mov
imul
and
cli
fstp
dec
stc
data16
lods
sti
inc
ja
mov
push
lahf
ins
outs
add
and
ja
es
xor
ja
and
cli
fstp
std
mov
and
(bad)
fst
std
mov
lods
retf
je
jno
and
sbb
movs
(bad)
daa
xor
clc
retf
inc
lods
fcos
mov
lods
lock
lods
(bad)
mov
sar
mov
and
jb
nop
inc
ja
dec
(bad)
cmps
(bad)
mov
int3
mov
repnz
dec
fsubr
cmps
(bad)
mov
dec
add
movs
call
iret
fldcw
ja
ret
mov
dec
sub
inc
ja
out
xor
sbb
mov
dec
add
movs
call
and
dec
fbstp
sbb
jne
and
lahf
push
and
ja
loopne
imul
jnp
sub
out
(bad)
mov
jb
cld
sub
mov
clc
(bad)
lahf
fild
(bad)
mov
ror
ja
popa
clc
daa
aad
cld
daa
xor
dec
pop
sub
sbb
pop
(bad)
cmps
push
or
rcl
cmp
and
mov
popa
clc
mov
dec
add
movs
int3
das
ds
and
cwde
addr16
cld
lahf
movs
ins
add
jp
mov
setnp
cwde
dec
add
push
adc
push
arpl
ja
and
inc
dec
(bad)
cmps
push
or
fneni(8087
sbb
add
jne
enter
pop
rcr
not
lahf
dec
add
pop
test
jne
cmps
push
or
sub
and
hlt
pushf
cmp
mov
or
loopne
out
cmp
shl
lea
mov
je
ja
and
jne
dec
add
sub
int3
pop
aas
pop
and
mov
and
mov
adc
add
jne
cmps
push
sbb
pop
(bad)
cmps
push
cld
lahf
xor
in
jnp
push
cld
lahf
gs
add
in
rcr
sub
movs
int3
sub
pop
and
mov
jnp
mov
lods
in
mov
push
and
push
adc
sbb
cmp
int3
adc
imul
loop
ja
fdiv
(bad)
shl
lea
movs
je
outs
pop
add
cmps
push
or
push
in
jae
in
dec
aad
sbb
push
dec
add
cmps
push
cld
lahf
mov
in
jnp
push
cld
lahf
cdq
arpl
ja
in
ins
cmps
push
cld
lahf
in
arpl
ja
xchg
inc
outs
mov
mov
cmp
pop
sub
jne
and
fwait
cmps
adc
inc
add
sbb
mov
jnp
pop
xor
push
lahf
stc
bound
ja
popa
clc
(bad)
mov
test
mov
mov
fs
xor
mov
and
sbb
pop
dec
popa
test
and
sub
movs
icebp
inc
ja
rcl
mov
and
mov
xor
inc
movs
icebp
inc
ja
ins
inc
ja
lods
inc
mov
add
jp
mov
ja
out
dec
lods
enter
sar
add
dec
inc
fbstp
fwait
jno
xchg
or
and
push
or
add
js
jmp
inc
mov
out
mov
jno
inc
sbb
pop
xor
cld
push
mov
and
hlt
pushf
sub
and
add
pop
lods
clc
hlt
cwde
es
fldenv
mov
fcomp
ds
loope
lods
sub
or
jne
rcr
dec
mul
add
inc
addr16
and
neg
and
scas
sbb
ss
test
fsub
mov
inc
ja
lods
(bad)
neg
and
mov
mov
sub
and
cld
sbb
out
and
add
jnp
sub
out
(bad)
mov
jb
cld
add
shl
pop
movs
jne
jl
add
int3
push
xor
mov
mov
cmps
(bad)
jg
dec
inc
lahf
fldenv
ja
popa
hlt
inc
scas
iret
push
js
and
hlt
test
or
pop
pop
add
pop
jne
sub
sbb
pop
inc
(bad)
xor
sub
dec
arpl
add
sar
dec
lods
clc
into
inc
and
ja
imul
push
shl
mov
daa
mov
mov
xlat
hlt
lahf
inc
push
cld
and
sti
inc
ja
int3
jnp
pop
and
mov
inc
push
cmps
sub
(bad)
xor
push
(bad)
mov
and
or
and
and
jae
cmp
fdivr
mov
and
mov
movs
fwait
cmps
fcos
ja
mov
push
mov
(bad)
hlt
pushf
sub
mov
aam
xchg
loop
lods
sub
or
ja
cmps
mov
ja
sub
icebp
data16
in
gs
and
mov
and
(bad)
(bad)
dec
pop
and
shl
mov
mov
sbb
mov
cdq
fmul
int
dec
pop
and
ja
dec
inc
lahf
or
mov
xor
pop
and
inc
ja
lods
lock
test
(bad)
cld
sbb
(bad)
mov
in
mov
pop
and
mov
jecxz
jg
mov
mov
int3
outs
mov
push
dec
push
test
and
add
(bad)
xor
xor
and
ret
dec
pop
cmps
les
sbb
ja
popf
or
and
and
push
mov
fdivr
mov
and
mov
lods
lock
test
(bad)
lahf
push
popa
add
add
mov
add
xor
mov
out
scas
fst
in
dec
xchg
and
cmps
les
cld
inc
ja
popf
or
and
and
push
mov
fdivr
mov
and
mov
dec
aaa
test
and
ret
dec
pop
cmps
les
test
popf
or
and
and
push
mov
fdivr
mov
and
mov
int3
jnp
pop
and
jge
and
out
scas
fld
lahf
xor
ja
inc
add
mov
mov
and
sbb
xor
sbb
add
pushf
xor
add
test
and
repnz
(bad)
mov
dec
and
adc
ja
loopne
div
int3
and
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
jge
data16
cmps
int3
das
xor
xor
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
je
data16
cmps
int3
div
and
mov
int3
mov
pop
and
jge
and
out
scas
fld
lahf
stc
add
inc
add
mov
mov
and
sbb
xor
sbb
hlt
pushf
xor
add
lods
test
sahf
int3
outs
xor
and
lahf
pop
and
out
scas
fst
movs
cli
inc
ja
cdq
fimul
xor
mov
push
mov
(bad)
mov
dec
shr
or
ja
loopne
lahf
imul
ja
mov
add
xor
and
adc
and
out
scas
fst
in
dec
xchg
and
cmps
les
aam
xchg
shl
mov
pop
popf
or
and
and
push
mov
fdivr
mov
and
mov
int3
retf
xor
pop
and
out
scas
fld
pop
xchg
cli
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
rcr
and
into
push
and
ja
sar
hlt
mov
aam
xor
cmps
(bad)
lahf
popf
data16
loopne
(bad)
test
lock
sahf
dec
xchg
test
dec
scas
test
xor
call
hlt
pushf
xor
sub
and
into
push
and
ja
sar
hlt
mov
out
fidiv
cmps
(bad)
lahf
and
loopne
lahf
popa
data16
add
mov
add
xchg
sbb
ret
dec
pop
cmps
les
xor
pop
popf
or
and
and
call
into
cmp
ja
sar
and
cmps
fist
data16
inc
ja
int3
push
pop
and
mov
cmps
jge
pop
sub
std
loopne
mov
and
mov
and
mov
push
add
add
pushf
daa
scas
test
fucom
dec
cmps
(bad)
add
scas
mov
je
in
mov
lods
clc
into
inc
and
ja
sar
hlt
call
ja
and
cmp
jmp
fisttp
and
cdq
add
fist
add
inc
ja
cdq
add
fist
xor
ja
loopne
iret
jo
add
ret
loopne
std
mov
loop
repnz
(bad)
mov
cdq
ror
and
cmc
sub
dec
cmps
(bad)
add
test
(bad)
daa
shl
push
pop
cmp
inc
ja
int3
pop
ss
and
mov
int3
push
pop
and
jge
and
out
scas
fld
pop
add
xchg
cld
mov
and
hlt
pushf
sub
lods
sbb
into
push
and
ja
sar
hlt
mov
out
fidiv
cmps
(bad)
lahf
mov
loopne
(bad)
test
lock
sahf
int3
scas
aaa
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
repnz
(bad)
mov
and
ja
mov
mov
mov
mov
pmaddwd
(bad)
mov
mov
mov
cwde
(bad)
mov
loop
or
and
cld
sbb
(bad)
mov
movs
mov
ja
mov
mov
shl
jb
in
add
mov
pmuludq
and
clc
mov
(bad)
mov
cli
inc
ja
mov
push
lahf
inc
add
loopne
cli
aad
dec
sbb
(bad)
lahf
inc
mov
sahf
(bad)
mov
aam
xchg
loop
repnz
and
mov
sub
mov
mov
jmp
mov
cmp
test
jmp
mov
clc
mov
mov
inc
lods
(bad)
mov
aam
mov
(bad)
daa
xor
xor
addr16
hlt
pushf
cmp
icebp
addr16
into
push
and
ja
sar
hlt
mov
jns
xor
cmps
(bad)
lahf
std
sbb
ja
loopne
(bad)
test
lock
sahf
int3
pop
dec
pop
and
jge
and
out
scas
fld
pop
xchg
cli
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
inc
addr16
into
push
and
ja
sar
hlt
mov
aam
xor
cmps
(bad)
lahf
or
loopne
mov
aam
mov
and
mov
xor
ja
mov
(bad)
repnz
and
mov
(bad)
and
or
mov
mov
or
cmps
fld
xchg
mov
fdivr
mov
and
mov
int3
ret
dec
pop
and
jge
and
out
scas
fld
pop
add
xchg
cld
mov
and
hlt
pushf
sub
jmp
push
and
ja
sar
hlt
mov
out
fidiv
cmps
(bad)
lahf
in
add
loopne
(bad)
test
out
fucom
dec
xor
add
mov
add
xchg
sbb
ret
dec
pop
cmps
les
push
fidiv
cmps
(bad)
lahf
and
add
loopne
lahf
ins
sbb
ja
add
mov
add
dec
pop
and
adc
and
out
scas
fst
in
dec
xchg
and
cmps
les
and
ja
popf
or
and
and
push
mov
fdivr
mov
and
mov
movs
imul
add
loope
add
mov
add
test
movs
(bad)
mov
cmps
les
xchg
cmp
ja
and
and
push
mov
fdivr
mov
and
mov
int3
mov
and
jge
and
out
scas
fld
lahf
and
add
inc
add
mov
mov
and
sbb
xor
gs
hlt
pushf
xor
pop
xchg
mov
fdivr
mov
and
mov
lods
lock
test
(bad)
lahf
sbb
ja
add
mov
add
xchg
sbb
ret
dec
pop
cmps
les
cmp
xor
cmps
(bad)
lahf
adc
add
loopne
lahf
pop
sbb
ja
add
mov
add
xchg
sbb
ret
dec
pop
cmps
les
fidiv
cmps
(bad)
lahf
dec
sbb
ja
loopne
imul
int3
(bad)
dec
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
repnz
std
mov
scas
test
xor
fidiv
fs
hlt
pushf
xor
icebp
fs
into
push
and
ja
sar
hlt
mov
aam
xor
cmps
(bad)
lahf
std
sbb
ja
loopne
pop
pop
cli
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
cmp
into
push
and
ja
sar
hlt
mov
aam
xor
cmps
(bad)
lahf
xor
loopne
iret
das
pop
add
ret
cwde
(bad)
mov
loop
ins
fs
into
mov
add
sar
dec
and
and
cdq
cld
mov
stc
inc
ja
int3
cmovnp
xor
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
test
in
fdivr
mov
and
mov
int3
mov
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
xchg
cld
mov
and
hlt
pushf
sub
sub
test
ja
popf
or
and
and
call
into
cmp
ja
sar
and
cmps
fist
data16
inc
ja
int3
ja
pop
and
mov
dec
shr
movs
(bad)
mov
cmps
les
and
ja
es
xor
ja
and
mov
and
(bad)
(bad)
dec
and
fdivr
mov
and
ja
cdq
hlt
mov
xchg
cld
mov
(bad)
mov
(bad)
lahf
mov
xchg
cld
mov
and
(bad)
test
lock
sahf
ja
loope
and
cld
(bad)
dec
xchg
out
(bad)
mov
and
and
ins
add
lods
clc
cmp
(bad)
(bad)
lahf
loop
mov
cmp
popa
jmp
xor
test
mov
cmp
lods
clc
inc
mov
dec
xchg
cmps
(bad)
mov
dec
add
movs
call
hlt
pushf
cmp
xor
dec
add
pusha
stc
inc
ja
outs
fnsave
pop
movs
call
pop
mov
inc
ja
(bad)
fdiv
sbb
je
and
lahf
rcl
dec
mov
dec
ja
jnp
mov
lods
in
mov
add
ja
and
(bad)
or
sub
(bad)
hlt
std
mov
mov
push
movs
cmp
mov
hlt
mov
fcos
mov
popa
or
pop
and
ja
and
repnz
dec
shl
xor
cmps
(bad)
jb
int3
dec
inc
pop
and
and
push
jne
mov
clc
fcos
mov
int3
aaa
inc
pop
and
repnz
dec
cmps
fucomi
push
outs
and
cld
or
fcos
mov
jo
jb
jo
jbe
lods
xchg
out
movs
(bad)
(bad)
mov
jb
jne
and
(bad)
fstp
cmps
(bad)
lahf
test
mov
inc
rcr
mov
scas
push
jg
test
lea
push
and
mov
jo
jbe
jo
jbe
lods
xchg
jmp
inc
xor
dec
add
ins
and
(bad)
fnsave
neg
dec
dec
add
fld
call
lahf
or
int3
aas
dec
pop
and
jae
and
cli
fst
push
pop
in
clc
inc
ja
add
int3
push
xchg
sub
call
inc
cwde
int
jne
and
js
(bad)
pop
pop
and
cld
mov
nop
std
mov
and
mov
mov
mov
(bad)
mov
test
mov
(bad)
mov
mov
mov
movs
(bad)
and
mov
push
lahf
push
(bad)
dec
fnstsw
rol
jb
dec
ins
and
inc
cwde
int
jbe
and
xlat
test
cli
fstp
dec
pusha
and
(bad)
mov
test
jmp
aad
cld
mov
sbb
ja
aad
mov
(bad)
sbb
fstp
popa
pusha
and
hlt
pushf
cmp
mov
mov
inc
ja
and
repnz
and
ja
jecxz
lahf
cmps
(bad)
ja
cmps
mov
ja
cmp
(bad)
dec
lahf
cmp
pop
test
jmp
mov
lock
fcos
mov
test
jmp
xor
ja
add
ja
and
ja
mov
push
sbb
pop
and
mov
mov
inc
lock
mov
lods
clc
pop
mov
mov
mov
and
or
dec
outs
and
hlt
pushf
xor
repnz
dec
scas
das
pop
ja
test
jmp
xor
xor
pop
and
mov
in
ins
xor
add
int3
imul
xor
fcos
mov
test
push
enter
push
pop
pop
pop
add
push
mov
ja
cs
lahf
popa
adc
ja
and
ja
test
jmp
or
mov
pop
and
jbe
dec
fdiv
cmps
(bad)
daa
mov
mov
jnp
(bad)
ja
push
and
mov
sbb
pop
iret
or
mov
adc
ja
mov
push
lahf
add
mov
ja
shl
(bad)
fst
cmps
lods
(bad)
and
dec
add
cmps
int3
ret
inc
pop
and
ret
dec
pop
scas
test
movs
(bad)
pushf
push
pushf
pop
jge
and
nop
shl
mov
call
fwait
dec
ja
and
jns
enter
xor
fdiv
(bad)
shl
inc
push
int3
iret
inc
pop
and
mov
lods
push
mov
fdiv
(bad)
shl
inc
push
int3
mov
mov
lods
push
mov
pop
add
out
dec
pop
add
out
dec
fimul
ror
push
sbb
lea
dec
or
sbb
pop
and
mov
retf
push
cmp
xor
push
mov
(bad)
sbb
and
xchg
je
int
and
hlt
pushf
sub
add
lock
cwde
and
popa
adc
or
out
popa
(bad)
cli
sbb
add
inc
pop
and
(bad)
jno
mov
out
popa
(bad)
cli
sbb
add
cli
sbb
add
mov
xor
ja
rcr
xadd
xchg
push
adc
int3
jmp
pop
and
xor
dec
jecxz
sbb
ja
and
lea
add
sahf
movs
out
mov
sbb
push
add
sbb
adc
ja
jb
sub
sbb
in
ret
and
sar
fst
ja
jb
cld
add
cmp
mov
pushf
mov
and
nop
shl
mov
cmps
fild
pop
and
repnz
dec
mov
inc
fdiv
pop
and
mov
in
repz
(bad)
inc
popa
pop
and
mov
loopne
mov
and
mov
sub
mov
mov
sub
pop
push
shl
(bad)
fst
mov
mov
inc
push
in
dec
mov
int3
outs
pop
pop
and
mov
adc
mov
(bad)
lahf
ins
adc
ja
loopne
jle
push
sbb
cmps
(bad)
mov
das
ja
adc
sbb
pop
jp
mov
loopne
and
int3
xchg
pop
pop
and
and
scas
pop
jg
(bad)
pop
add
(bad)
push
outs
and
(bad)
test
lock
sahf
ja
jae
and
lahf
add
ja
std
cmp
and
mov
jecxz
jg
inc
lea
int3
and
cmps
fild
test
and
lahf
sbb
loopne
imul
lods
lock
test
(bad)
pop
push
sti
inc
ja
mov
push
lahf
pop
adc
ja
loopne
lahf
mov
add
mov
add
xchg
sbb
mov
int3
inc
xor
and
jge
and
out
scas
fld
lahf
icebp
pop
add
inc
add
mov
mov
and
jl
xor
mov
test
ja
cmps
les
movs
xor
popf
or
and
and
push
cli
frstor
mov
and
hlt
pushf
sub
xchg
mov
pop
test
jmp
mov
xor
cmps
les
xor
popf
or
and
and
push
cli
frstor
mov
and
hlt
pushf
sub
ins
imul
push
and
ja
sar
hlt
mov
sub
ja
popf
arpl
and
and
dec
sbb
mov
int3
inc
and
mov
(bad)
xor
fbstp
mov
add
test
(bad)
daa
mov
xor
cmps
les
aam
xchg
shl
mov
pop
popf
or
and
and
push
cli
frstor
mov
and
hlt
pushf
sub
jge
data16
frstor
mov
and
hlt
pushf
sub
add
add
push
and
ja
sar
hlt
mov
aam
xor
mov
mov
ja
cmps
les
daa
fbstp
mov
movs
xor
cmps
les
aam
xchg
shl
mov
pop
popf
or
and
and
call
into
cmp
ja
sar
and
cmps
fist
add
inc
ja
cdq
add
dec
push
add
loopne
pop
jno
inc
ja
mov
push
lahf
jge
add
loopne
lahf
mov
add
mov
add
xchg
sbb
mov
int3
inc
and
mov
dec
dec
stos
sbb
mov
int3
jmp
pop
and
mov
lods
lock
test
(bad)
lahf
stc
adc
add
mov
add
xchg
sbb
mov
int3
mov
mov
dec
sbb
pop
(bad)
dec
pop
and
mov
int3
addr16
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
mov
push
lahf
fst
or
scas
mov
ja
(bad)
aad
add
jbe
inc
ja
mov
push
lahf
gs
adc
loope
add
mov
add
xchg
sbb
mov
int3
cmp
and
mov
dec
add
pop
(bad)
dec
pop
and
mov
int3
jecxz
pop
and
jge
and
out
scas
fld
pop
test
inc
ja
mov
push
lahf
pop
adc
or
addr16
add
ret
mov
dec
push
daa
add
sar
dec
and
and
cdq
add
dec
clc
inc
ja
cdq
add
lds
ja
loopne
lahf
and
add
mov
add
xchg
sbb
mov
int3
fwait
inc
pop
and
mov
dec
fisubr
pop
(bad)
dec
pop
and
mov
movs
out
lds
and
lahf
gs
ja
add
mov
add
xchg
sbb
mov
int3
pop
inc
pop
and
mov
int3
pop
inc
pop
and
jge
and
out
scas
fld
lahf
pop
adc
ja
inc
add
mov
mov
and
jl
xor
mov
fsubr
ja
cmps
les
hlt
fnsave
mov
sub
ja
cmps
les
and
ja
es
xor
ja
and
and
lods
sub
pop
lods
test
sahf
in
pop
ja
test
jmp
mov
sub
cli
in
fisttp
in
loopne
cmps
jae
ret
dec
pop
(bad)
lahf
and
in
pushf
pop
lods
lock
test
(bad)
sub
jg
mov
lods
in
mov
add
pop
ja
and
retf
xor
test
mov
cmps
movs
jmp
(bad)
ja
rol
ja
jns
and
test
pop
scas
push
jg
jo
jbe
mov
mov
ret
mov
fcomp
dec
jae
add
mov
das
ja
int3
cmp
mov
add
and
xor
pop
and
repnz
fcos
mov
xor
ja
mov
push
lahf
cdq
or
ja
and
ja
test
jmp
xor
mov
sbb
jne
and
lahf
mov
loopne
jle
sub
pop
and
cld
mov
nop
std
mov
and
(bad)
mov
(bad)
and
mov
push
lahf
jno
dec
cwde
sub
clc
clc
inc
ja
mov
push
lahf
icebp
or
ja
mov
push
cli
fstp
dec
jbe
add
shl
mov
xor
ja
mov
push
lahf
dec
or
ja
loopne
neg
jecxz
iret
cmps
(bad)
xor
add
cmps
and
mov
ja
cmp
(bad)
dec
lahf
push
push
pop
test
jmp
mov
out
cmps
jge
repnz
fcos
mov
test
jmp
xor
ja
add
ja
and
ja
mov
push
sbb
pop
and
mov
mov
inc
lock
mov
lods
clc
jbe
lods
(bad)
mov
test
mov
and
or
dec
jne
add
pushf
xor
repnz
(bad)
mov
neg
test
jmp
xor
xor
pop
and
mov
in
ins
xor
add
int3
jae
pop
and
repnz
(bad)
mov
test
mov
push
enter
test
and
pop
pop
aam
ja
je
ja
lods
clc
pop
mov
and
nop
mov
in
sub
dec
add
xor
inc
ja
mov
push
lahf
or
loopne
dec
cmps
fild
ja
mov
(bad)
repnz
dec
scas
(bad)
hlt
pushf
sub
mov
mov
push
cmps
xchg
xchg
mov
(bad)
mov
int3
dec
pop
pop
and
and
add
mov
push
mov
mov
mov
fisttp
mov
and
pop
push
clc
inc
ja
cmp
ja
je
jl
data16
mov
sub
pop
cmps
les
in
pop
xor
fdiv
pop
and
jmp
cmp
out
test
(bad)
lahf
outs
cld
dec
inc
scas
test
movs
(bad)
hlt
mov
push
and
fucomi
ins
sbb
hlt
pushf
sub
ja
int3
pop
pop
pop
and
repnz
fcos
mov
add
mov
push
lahf
xchg
or
add
cmps
xchg
movs
mov
and
mov
cmp
cmps
int3
pop
pop
pop
and
repnz
fcos
mov
inc
add
jp
mov
rol
sbb
jns
enter
push
(bad)
(bad)
and
push
lahf
or
popa
clc
mov
and
cld
or
xor
sbb
pop
and
mov
jb
push
jg
add
lahf
push
ja
ret
mov
lods
lods
(bad)
and
add
ja
(bad)
aad
push
jbe
int3
pop
push
pop
and
lahf
add
add
popa
cld
daa
xor
pop
idiv
ja
and
ja
xor
ja
lods
(bad)
sbb
jo
add
mov
aam
mov
popa
cld
daa
push
int3
inc
push
pop
and
lahf
xor
popa
cld
sub
jg
mov
lods
in
pop
xor
ja
mov
ja
jb
enter
push
(bad)
or
and
jb
push
or
shl
mov
push
shl
imul
emms
pop
test
jmp
push
int3
out
pop
and
jbe
push
or
frstor
call
hlt
pushf
sub
add
pushf
dec
movs
imul
and
sbb
jo
add
sahf
iret
scas
sub
in
ret
and
rol
pop
mov
imul
inc
(bad)
xor
sub
jno
data16
sbb
push
add
shr
cs
and
xor
add
(bad)
lahf
jno
add
xchg
inc
mov
in
daa
xor
(bad)
or
lahf
pop
pop
and
mov
test
add
sbb
sub
sbb
lea
add
cmps
popa
(bad)
js
popa
(bad)
hlt
mov
in
ret
and
rol
sub
sbb
loopne
or
shl
(bad)
sbb
and
jne
and
ja
and
xor
ja
and
out
and
sbb
pop
dec
adc
shl
mov
cmp
push
cmovle
mov
mov
pop
pop
and
jbe
dec
xor
pop
int3
jg
pop
and
jbe
dec
xor
pop
int3
outs
pop
pop
and
jbe
dec
xor
pop
int3
pop
pop
pop
and
jbe
dec
xor
pop
int3
dec
pop
pop
and
cdq
(bad)
jb
ja
and
xor
lahf
popa
or
ja
and
xor
lahf
jno
add
and
xor
lahf
inc
or
ja
and
xor
lahf
push
or
ja
aam
xchg
loop
jbe
dec
xor
pop
int3
repz
pop
and
jbe
dec
xor
pop
int3
jecxz
pop
and
jbe
dec
xor
pop
int3
rcl
and
jbe
dec
xor
pop
int3
ret
push
pop
and
ret
jo
add
shl
pop
sub
cmp
jge
and
mov
and
xor
add
js
inc
ja
xor
aaa
pop
dec
cld
mov
popf
ss
int3
cmp
and
mov
and
push
jg
add
fs
xchg
pop
dec
cld
mov
mov
push
pop
and
sbb
add
fdivr
inc
je
inc
ja
fsub
ja
xchg
sbb
fbld
sbb
(bad)
add
xor
inc
mov
ja
lock
xchg
out
and
fbld
sbb
int
add
xor
inc
mov
es
xchg
sbb
fbld
sbb
(bad)
add
xor
inc
mov
es
xchg
sbb
fbld
sbb
(bad)
add
rcr
xor
cmps
adc
jle
add
inc
mov
xchg
pop
dec
cld
mov
mov
push
pop
and
mov
lods
in
mov
push
and
sar
inc
movs
out
stos
jnp
add
lods
inc
cmps
push
or
shl
push
and
cmps
les
sub
ss
dec
add
mov
es
movs
div
inc
and
cli
sbb
dec
and
mov
lahf
ss
dec
add
shl
pop
sbb
fsubr
xor
and
ja
movs
push
pop
test
inc
ja
(bad)
pop
dec
add
and
dec
jle
add
sbb
inc
ja
and
inc
ins
mov
push
sbb
jae
lock
mov
push
sbb
pop
and
daa
xor
(bad)
sbb
ja
sub
ja
xchg
sbb
(bad)
jno
mov
ins
mov
inc
test
xor
(bad)
jae
lock
mov
push
sbb
push
and
daa
xor
fbstp
sbb
ja
loopne
ja
xchg
sbb
ja
es
xor
jb
and
push
xor
add
dec
int3
pop
push
pop
and
mov
and
xor
lahf
cmp
and
inc
ins
mov
inc
test
xor
inc
pop
and
sbb
pop
and
daa
xor
xor
sbb
ja
jl
ja
xchg
and
sub
ja
and
inc
ins
mov
inc
test
xor
push
pop
and
sbb
pop
and
daa
xor
xor
sbb
ja
cmp
aam
and
ja
adc
sbb
ja
adc
and
addr16
add
dec
mov
pop
xor
ja
dec
into
lods
sbb
lods
and
pop
int3
jecxz
pop
and
jnp
add
(bad)
add
clc
add
pop
and
leave
pop
and
sbb
pop
je
stc
and
cmp
ja
and
fnstsw
aam
mov
inc
mov
inc
test
xor
adc
mov
ja
dec
adc
pop
and
daa
xor
fbstp
sbb
ja
push
and
pop
xchg
jmp
add
pop
fidiv
sbb
xor
and
add
dec
inc
jbe
and
inc
mov
inc
ja
cmp
pop
dec
add
pop
dec
add
pop
dec
sub
pop
and
inc
xor
jp
pop
and
daa
xor
fbstp
sbb
ja
sub
pop
xchg
mov
arpl
ja
and
inc
ins
mov
inc
test
xor
add
dec
cmp
repnz
ja
mov
ja
dec
add
je
stos
xchg
pop
(bad)
inc
ja
and
mov
je
inc
ja
push
cli
mov
adc
mov
mov
sbb
pop
and
pop
pop
and
pop
pop
and
daa
xor
xor
sbb
ja
test
ja
xchg
(bad)
scas
ret
mov
mov
(bad)
sbb
(bad)
add
clc
add
pop
and
mov
add
dec
and
add
dec
push
lods
sbb
lods
and
pop
int3
inc
push
pop
and
add
data16
(bad)
add
clc
add
inc
and
add
dec
add
je
xor
cmp
ja
and
jns
and
aam
mov
inc
mov
inc
test
xor
mov
add
imul
push
pop
dec
inc
xor
(bad)
lea
add
aam
ss
dec
add
pop
dec
add
pop
dec
adc
pop
and
xlat
pop
and
pop
pop
and
daa
xor
fidiv
sbb
ja
mov
xchg
aam
and
ja
adc
sbb
ja
adc
sbb
outs
xor
add
dec
xchg
ja
and
arpl
and
test
and
jbe
data16
pop
add
inc
and
xchg
cmps
adc
sbb
ja
adc
sbb
outs
xor
ret
ja
and
arpl
and
test
and
jbe
data16
pop
add
add
ja
xchg
sbb
(bad)
jno
mov
ins
mov
inc
test
xor
pop
xor
add
dec
adc
pop
and
daa
xor
fbstp
sbb
ja
and
lahf
mov
or
ss
dec
add
pop
dec
add
pop
dec
sbb
pop
and
arpl
and
test
and
jbe
data16
pop
add
mov
ja
xchg
call
cmps
adc
sbb
ja
adc
and
pusha
xor
test
imul
dec
jecxz
sbb
lea
int3
jae
pop
and
out
sti
data16
rcr
sub
mov
in
ret
and
rol
outs
dec
out
rcr
xor
and
sub
(bad)
(bad)
sahf
dec
in
lods
sbb
lahf
inc
sar
mov
loopne
aam
mov
sub
cmps
adc
call
jns
add
sbb
and
ja
dec
add
pop
dec
add
shl
pop
sbb
fsubr
xor
and
ja
movs
push
pop
test
inc
ja
(bad)
pop
dec
add
and
movs
js
add
sbb
inc
ja
and
inc
ins
mov
push
sbb
jae
lock
mov
push
sbb
pop
and
daa
xor
fnstenv
sbb
ja
mov
add
sbb
cwde
xor
and
inc
ins
mov
inc
test
xor
add
scas
inc
(bad)
jae
lock
mov
push
sbb
push
and
daa
xor
fbstp
sbb
ja
jl
ja
xchg
sbb
ja
es
xor
jb
and
push
xor
add
dec
int3
fwait
push
pop
and
mov
and
xor
lahf
mov
and
inc
ins
mov
inc
test
xor
adc
xor
xor
add
or
sbb
repnz
pop
int3
out
push
lds
div
dec
jp
sbb
ja
add
je
fld
add
sub
and
xor
and
mov
popf
ss
int3
xchg
push
enter
ins
push
push
sbb
push
and
call
or
dec
dec
add
pop
and
inc
mov
inc
ja
inc
pop
ja
dec
add
pop
dec
add
pop
dec
sub
pop
and
inc
xor
push
xor
add
or
sbb
repnz
pop
int3
push
push
stc
data16
mov
dec
add
pop
dec
add
pop
dec
sub
pop
and
dec
xor
push
pop
pop
and
daa
xor
fbstp
sbb
ja
cmp
ja
xchg
sbb
shrd
call
(bad)
add
clc
add
pop
and
sbb
xor
ja
dec
add
je
and
data16
cmp
ja
and
lods
inc
and
aam
test
xor
inc
ins
mov
inc
test
xor
adc
mov
ret
ja
and
ja
and
pop
sbb
inc
ja
(bad)
(bad)
stc
cmp
ja
adc
ss
pushf
jmp
nop
shl
(bad)
lahf
dec
add
pop
dec
add
pop
dec
adc
movs
and
ja
test
ja
dec
fs
pop
and
daa
xor
fidiv
sbb
ja
js
ja
xchg
jmp
xor
sbb
ja
adc
and
xor
into
pop
and
pop
clc
and
ja
and
ja
dec
push
lods
sbb
lods
and
pop
int3
and
and
jecxz
data16
(bad)
add
clc
add
pop
and
xchg
pop
and
sbb
pop
je
or
inc
xor
popf
inc
and
aam
test
xor
inc
ins
mov
inc
test
xor
mov
add
cmps
and
ja
cmp
pop
and
pop
paddw
xor
(bad)
jmp
test
mov
lahf
ss
dec
add
pop
dec
sbb
fisub
ja
or
xor
test
and
jbe
data16
pop
add
pop
sbb
loop
and
sbb
add
and
inc
ins
mov
inc
test
xor
pop
xor
arpl
and
test
and
jbe
data16
pop
add
sbb
call
cmps
adc
sbb
ja
adc
sbb
outs
xor
sub
xor
pop
movs
push
pop
test
inc
ja
and
add
and
jno
and
aam
mov
inc
mov
inc
test
xor
push
pop
sbb
push
pop
mov
fcompp
xor
xchg
cmp
ja
mov
mov
cmps
fstp
cmp
call
sub
in
ret
and
rol
out
ss
push
lods
clc
cmp
push
xor
sbb
pop
and
mul
add
loop
mov
and
sbb
inc
and
(bad)
fwait
jb
rol
hlt
cmp
rol
pop
and
(bad)
scas
ret
mov
mov
(bad)
cli
sbb
rcl
sbb
xor
dec
in
data16
pop
and
div
cmps
les
jns
add
dec
add
and
ja
push
or
sub
(bad)
hlt
pushf
cmp
xor
dec
add
pop
test
jne
xor
mov
pop
dec
add
movs
call
hlt
pushf
cmp
(bad)
mov
jp
mov
fxch
or
and
and
xchg
imul
inc
ja
dec
mov
repnz
(bad)
mov
int3
pop
outs
pop
and
lea
into
push
and
ja
sar
dec
pop
push
xor
add
frstor
mov
and
(bad)
test
lock
sahf
movs
jge
pop
push
adc
adc
cmps
fist
inc
cmp
ja
pop
push
push
cli
frstor
mov
and
mul
dec
adc
sbb
mov
int3
jmp
pop
and
xchg
mov
sub
data16
frstor
mov
and
mul
dec
dec
(bad)
sbb
mov
int3
mov
pop
and
or
inc
mov
pop
test
jmp
mov
pop
ja
movs
jge
push
push
adc
fist
add
shl
add
aam
xchg
loop
or
xchg
ja
(bad)
daa
mov
pop
ja
movs
jge
push
push
adc
xchg
add
or
pop
(bad)
jl
xor
add
frstor
mov
and
mul
dec
and
sbb
mov
int3
daa
pusha
pop
and
or
sbb
test
(bad)
daa
mov
pop
ja
lods
lock
(bad)
(bad)
sahf
movs
jge
push
push
adc
or
mov
push
lahf
mov
add
and
ja
fnstenvw
sbb
mov
dec
add
sbb
fwait
mov
std
inc
ja
call
sbb
sub
add
ja
aam
ja
cmps
les
aam
xchg
shl
mov
cmps
jp
mov
rol
push
and
scas
jne
out
add
or
(bad)
(bad)
scas
jb
icebp
inc
and
cli
add
add
or
or
push
sub
add
mov
sbb
jnp
sub
out
ja
lods
in
mov
or
ja
and
and
movs
test
and
div
dec
jb
sbb
mov
int3
sub
and
mov
and
into
push
and
ja
sar
dec
xlat
clc
mov
(bad)
jbe
xor
add
(bad)
test
in
clc
mov
loop
xor
scas
(bad)
daa
mov
adc
test
xor
add
(bad)
test
cld
xor
mov
mov
loop
retf
dec
pop
xchg
inc
ja
mov
push
lahf
stc
xor
ja
cdq
repz
cmps
fild
les
and
repnz
dec
pop
and
retf
dec
ins
xchg
inc
ja
mov
push
lahf
xor
cdq
repz
cmps
fild
add
dec
les
and
repnz
dec
pop
and
xchg
mov
cmps
fisttp
add
ins
les
and
repnz
dec
pop
and
retf
dec
rcl
in
and
add
cdq
repz
cmps
fisttp
add
stos
les
and
repnz
dec
pop
and
retf
dec
xchg
xchg
inc
ja
mov
push
lahf
mov
aam
xchg
shl
mov
cmps
fisttp
dec
dec
call
repnz
dec
pop
and
retf
dec
pop
nop
inc
ja
mov
push
lahf
std
xor
ja
cdq
repz
cmps
fisttp
add
and
sbb
mov
int3
mov
and
pop
clc
data16
(bad)
test
test
out
(bad)
test
xor
stc
fwait
cmps
fild
lahf
scas
(bad)
mul
xlat
clc
mov
cdq
call
js
pop
add
movs
out
not
add
test
out
(bad)
test
or
sub
mov
mov
or
pop
and
jbe
and
mul
fdivr
mov
add
cdq
cld
mov
pop
add
movs
mov
dec
push
mov
(bad)
repnz
fdivr
mov
dec
inc
pop
and
xchg
shl
mov
cmps
fist
ins
std
inc
ja
mov
push
lahf
fnstcw
ja
loopne
hlt
in
clc
mov
sbb
sahf
ret
loopne
inc
push
(bad)
cdq
shr
mov
and
mov
retf
jge
mov
pop
mov
js
push
cmp
jne
adc
stc
data16
jb
inc
ja
mov
push
lahf
dec
cmp
ja
aam
xchg
loop
out
data16
inc
std
inc
ja
mov
push
lahf
mov
loopne
pushf
adc
add
and
repnz
fdivr
mov
int3
and
and
les
add
scas
(bad)
(bad)
sahf
test
jmp
xor
xor
cmps
(bad)
daa
mov
pop
ja
dec
add
movs
fdivr
mov
int3
iret
pusha
pop
and
mov
test
jmp
mov
adc
mov
push
cli
fstp
clc
mov
data16
fstp
clc
mov
and
hlt
pushf
xor
ja
mov
push
lahf
std
xor
ja
and
add
fstp
cld
mov
(bad)
hlt
pushf
sub
mov
mov
(bad)
repnz
fdivr
mov
in
daa
mov
push
ja
jge
repnz
aam
xchg
shl
mov
cmps
fisttp
js
adc
ja
(bad)
pop
enter
xor
fdiv
mov
and
ja
cmps
les
stos
mov
pop
test
jmp
mov
adc
test
jmp
mov
adc
pop
lods
test
jle
test
in
cld
mov
scas
test
fsub
cld
mov
fisttp
hlt
in
test
shl
mov
cmps
fisttp
mov
dec
(bad)
scas
sbb
mov
int3
jg
pop
and
mov
test
jmp
mov
adc
lods
test
in
dec
dec
and
cld
in
test
mov
adc
lods
test
scas
(bad)
adc
test
jmp
cmps
xchg
hlt
(bad)
cmps
fucomi
add
add
fstp
clc
mov
and
cli
in
dec
lods
fdivr
mov
pop
pop
jbe
int3
push
pop
and
repnz
dec
add
cmps
dec
loop
sbb
ja
and
sub
mov
adc
test
jmp
or
mov
mov
jmp
or
fwait
sub
std
mov
(bad)
lahf
add
retf
pop
and
aaa
das
aas
add
add
lods
lea
in
ret
jno
xchg
loopne
adc
int3
mov
and
lahf
mov
scas
imul
mov
pop
dec
add
pop
and
ja
add
ja
lods
test
mov
(bad)
jle
push
adc
mov
adc
dec
add
add
add
sbb
add
pop
mov
ja
lods
fadd
mov
(bad)
(bad)
fwait
dec
push
jmp
add
cmps
and
ja
mov
xor
pop
and
inc
dec
and
daa
mov
adc
mov
and
pop
pop
and
mov
cmps
fist
sub
and
sbb
sbb
mov
int3
or
cmps
fild
mov
pslld
add
and
and
cmps
jge
mov
pop
fild
neg
int3
mov
movs
adc
in
popf
cdq
fiadd
mov
cmp
mov
lahf
cmps
(bad)
ss
mov
sti
leave
dec
cmps
fild
pushf
outs
int3
jae
pop
and
shl
in
mov
xor
(bad)
cdq
shr
mov
and
mov
retf
jge
mov
loop
(bad)
stos
lods
xchg
dec
sti
leave
dec
cmps
fild
std
fst
or
cwde
movs
ret
or
add
cmps
and
push
dec
and
(bad)
call
repnz
leave
dec
mov
inc
mov
push
pop
enter
xor
fdiv
mov
jmp
mov
adc
pop
movs
repz
add
mov
jmp
aad
mov
cmps
fist
adc
ja
mov
push
lahf
push
loope
mov
mov
push
lahf
nop
jecxz
mov
loopne
sbb
mov
jmp
mov
adc
dec
add
(bad)
not
and
retf
add
enter
xor
fdiv
sbb
aad
and
cli
in
out
mov
data16
jns
add
inc
movs
pop
in
cld
inc
ja
mov
xor
sbb
pop
clc
data16
sar
sub
jo
dec
sbb
push
and
test
sub
enter
xor
fdiv
sbb
xor
in
in
mov
data16
jnp
add
inc
movs
pop
cli
cld
inc
ja
mov
xor
sbb
ja
add
fneni(8087
inc
cli
in
in
mov
data16
push
and
ja
or
ja
and
xor
ja
and
pop
pop
mov
emms
pop
lods
inc
ret
xor
push
xor
lahf
cmc
sub
ja
popa
mov
cli
sbb
xchg
out
mov
and
cli
aad
out
mov
movs
cmp
pop
push
stc
sbb
push
je
retf
dec
mov
emms
pop
dec
add
sbb
dec
lock
sbb
add
int3
(bad)
js
and
pushf
inc
bound
ja
popa
mov
cli
sbb
xchg
out
mov
and
cli
aad
out
mov
movs
cmp
pop
push
stc
sbb
push
je
retf
dec
mov
emms
pop
dec
add
sbb
dec
lock
sbb
add
int3
outs
js
and
add
int3
or
and
mov
mov
(bad)
cld
fst
cli
pop
(bad)
pop
lods
inc
xchg
stc
adc
mov
sbb
xor
and
ja
cwde
emms
pop
lods
inc
mov
pop
dec
add
shl
div
jecxz
stos
pop
and
ja
and
in
and
(bad)
sbb
daa
add
lods
fcomp
lods
ret
mov
loopne
ja
and
xor
test
xchg
js
and
ja
adc
sbb
ja
and
ja
and
ja
and
ja
out
add
mov
(bad)
pop
dec
add
sti
and
ss
dec
xchg
(bad)
sbb
ja
and
xor
pop
int3
mov
mov
int3
jae
pop
and
ja
and
add
sbb
ins
push
and
pop
es
inc
ja
int3
daa
jp
and
repnz
leave
dec
pop
and
mov
and
sbb
hlt
leave
dec
cmps
fild
pop
and
scas
jno
mov
fist
fisttp
push
pop
and
inc
ja
je
xor
pop
movs
call
hlt
pushf
cmp
mov
and
ja
jecxz
sbb
data16
and
lahf
int3
mov
mov
cld
sub
lock
or
sbb
sbb
ja
and
jns
and
daa
mov
or
pop
test
jmp
xor
ja
cmp
pop
dec
add
pop
and
lahf
xor
add
and
sbb
sbb
(bad)
add
mov
lea
mov
and
neg
test
mov
pop
and
ja
and
ja
popa
in
mov
push
ja
sub
pop
sub
out
ja
lods
in
mov
add
ja
and
cmp
and
pop
and
cld
sbb
sub
push
cmps
clc
jne
mov
jmp
dec
dec
and
jb
pop
and
fs
and
add
adc
and
sti
cmc
sub
ja
sbb
ja
sub
lds
ja
sbb
sbb
js
lock
dec
cmc
lods
sbb
inc
xor
in
cmps
lods
test
mov
dec
in
lods
sbb
ret
dec
cmps
cmps
les
mov
(bad)
repnz
mov
(bad)
lahf
dec
sub
ja
in
repz
ja
mov
push
mov
mov
jnp
and
mov
dec
mov
mov
mov
sbb
(bad)
pop
int
std
mov
scas
test
(bad)
std
mov
mov
mov
fcos
mov
je
xor
dec
cmps
fist
ffree
std
mov
(bad)
daa
xor
ja
adc
and
fst
add
scas
or
ja
cmps
cmp
ja
mov
mov
aam
nop
inc
ja
shl
dec
pop
and
push
cmp
inc
ja
movs
cmp
ja
and
cmps
iret
dec
in
data16
mov
inc
nop
inc
ja
pop
out
cmps
jge
or
and
(bad)
mov
test
call
push
sub
sbb
pop
and
sub
and
(bad)
pop
mov
or
push
(bad)
mov
or
pop
pop
and
nop
shl
mov
pop
scas
inc
arpl
mov
add
sbb
xor
je
sbb
dec
arpl
xor
sbb
inc
arpl
lock
xchg
aam
and
push
arpl
jl
sbb
imul
aam
and
arpl
or
sbb
jnp
and
sbb
repnz
ja
and
add
jecxz
pop
and
repnz
and
and
arpl
mov
jg
and
sbb
addr16
(bad)
mov
or
pop
dec
dec
dec
int3
lahf
jnp
and
pop
je
add
movs
(bad)
(bad)
lahf
cmps
movs
stos
movs
(bad)
ja
and
cli
(bad)
std
mov
and
(bad)
(bad)
std
mov
and
sahf
push
and
ja
fsubr
(bad)
shl
push
cli
frstor
inc
mov
or
movs
mov
ja
add
ja
and
and
data16
pop
and
inc
mov
inc
ja
and
ja
int
jb
and
(bad)
mov
mov
mov
lods
fcos
mov
fild
mul
mov
pop
and
add
fild
ja
test
jmp
cmps
adc
push
and
cli
aad
dec
sbb
hlt
mov
and
add
lds
call
hlt
pushf
sub
add
add
sbb
ja
in
or
(bad)
lahf
sub
inc
add
dec
pop
and
nop
shl
mov
cmps
fist
fst
std
mov
data16
fst
std
mov
and
hlt
pushf
xor
mov
add
frstor
inc
mov
ja
enter
movs
mov
ja
add
ja
and
jns
data16
pop
and
inc
inc
mov
ja
and
ja
int
jae
and
cli
pop
(bad)
mov
in
push
fcomp
add
fld
sbb
mov
and
push
push
and
mov
xchg
aaa
pop
int3
iret
jle
and
mov
and
mov
and
mov
xchg
test
(bad)
std
fsub
add
and
cmp
es
ja
and
nop
(bad)
data16
pop
and
inc
inc
mov
ja
mov
ja
int
jae
and
repnz
(bad)
mov
test
(bad)
dec
dec
push
mov
(bad)
lahf
test
jmp
aad
cmc
mov
cld
inc
ja
mov
push
lahf
int
add
loopne
pop
cmps
and
ja
mov
push
mov
mov
jg
and
retf
dec
pop
dec
add
lahf
repz
ja
and
sbb
ins
movs
mov
jle
and
jle
and
div
test
jmp
aad
cmc
mov
cld
inc
ja
mov
push
lahf
jne
add
loopne
pop
cmps
and
ja
mov
push
mov
lahf
ss
int3
xchg
jg
and
retf
dec
pop
dec
add
lock
ja
and
jne
and
mov
lahf
ss
int3
scas
jg
and
(bad)
pop
and
(bad)
mov
test
jmp
aad
cmc
mov
repz
ja
mov
push
lahf
popf
add
loopne
pop
cmps
and
ja
mov
push
mov
lahf
ss
int3
das
jg
and
retf
dec
pop
dec
add
xor
inc
ja
and
in
push
and
mov
lahf
ss
int3
inc
jg
and
dec
pop
and
cli
aad
dec
sbb
hlt
mov
and
ja
or
xor
cmp
adc
call
push
and
sahf
pop
daa
add
mov
add
(bad)
mov
mov
dec
pop
add
popa
pop
and
je
inc
ja
and
push
push
and
mov
lahf
ss
int3
shl
and
mov
and
neg
(bad)
mov
(bad)
mov
into
rcr
sub
pop
(bad)
mov
test
jmp
xor
fdiv
movs
(bad)
daa
mov
or
cmps
les
fild
ja
test
jmp
cmps
adc
call
pop
and
mul
and
jne
xor
ja
xor
add
cmps
adc
call
pop
and
sahf
adc
add
mov
add
(bad)
mov
mov
dec
pop
add
popa
pop
and
mov
inc
ja
and
sbb
add
pop
int3
sbb
and
jp
and
neg
(bad)
mov
(bad)
mov
in
push
fcomp
add
fisttp
ror
dec
lock
clc
inc
mov
and
(bad)
repnz
fcos
mov
dec
sub
repnz
fcos
mov
int3
movd
xor
and
nop
shl
mov
mov
dec
xor
jae
and
ja
and
ja
dec
inc
call
pop
and
(bad)
fst
dec
pop
dec
add
cmps
int3
mov
dec
sub
inc
cli
push
adc
aaa
pop
cmps
enter
cmp
pop
push
stc
(bad)
fwait
dec
add
int
std
mov
mov
hlt
mov
and
sbb
movs
(bad)
daa
xor
push
mov
sar
mov
and
cli
lods
fcos
mov
in
push
fcomp
add
(bad)
aad
lock
mov
push
mov
sar
mov
and
ja
mov
push
sbb
sbb
ret
dec
pop
(bad)
lahf
dec
and
ja
adc
and
leave
pop
and
sbb
pop
dec
add
pop
fs
lahf
loope
add
mov
mov
mov
mov
mov
xor
ret
dec
pop
test
add
nop
fild
fs
ret
sbb
movs
(bad)
and
sbb
ret
dec
pop
dec
add
fst
std
mov
enter
(bad)
lahf
and
hlt
mov
and
mov
dec
mov
pop
and
clc
pop
mov
dec
add
xor
inc
ja
pop
fdiv
sbb
jbe
and
lahf
fisubr
sbb
(bad)
add
loopne
sbb
shl
(bad)
ffree
std
mov
(bad)
cmps
push
adc
push
int3
jecxz
pop
and
sub
in
ret
jno
xchg
fcmovne
adc
jae
add
popa
jl
inc
mov
shl
dec
pop
and
shl
and
or
pslld
adc
cmps
adc
jmp
add
mov
fmul
jmp
adc
and
cmc
pop
and
dec
ins
movs
mov
mov
lahf
ss
int3
outs
jae
and
inc
je
inc
ja
das
inc
mov
ja
js
ja
lods
clc
cmp
cmp
mov
ja
das
inc
mov
add
pop
pop
xor
add
xor
lahf
jne
add
adc
call
fcomp
jo
sbb
add
xor
lahf
dec
and
ja
adc
call
fcomp
jo
sbb
add
xor
lahf
lods
daa
add
sub
mov
test
mov
add
pop
scas
sbb
dec
ins
movs
mov
cld
inc
sbb
pop
(bad)
add
pop
scas
sbb
div
pop
xor
add
sbb
dec
ins
or
ss
push
push
cld
inc
pop
mov
push
(bad)
add
pop
scas
sbb
dec
ins
mov
push
cld
inc
cmp
add
jne
cmps
push
adc
mov
add
pop
iret
push
neg
jnp
sub
out
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
jno
xchg
or
leave
pop
and
(bad)
lahf
movs
aas
push
sub
fadd
mov
add
jg
popa
cld
jle
push
sub
lahf
arpl
jbe
movs
aas
push
sub
jmp
pop
sub
jb
fsub
add
call
mov
and
mov
and
sbb
or
cmp
fwait
jge
fwait
pop
xor
ja
and
ja
mov
adc
push
jmp
pushf
mov
add
scas
push
push
push
adc
dec
scas
std
lea
cmps
scas
inc
push
push
mov
or
ror
mov
add
push
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
(bad)
out
and
ja
