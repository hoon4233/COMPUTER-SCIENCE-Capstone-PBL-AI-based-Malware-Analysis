dec
sti
(bad)
dec
pop
push
call
pop
ret
mov
xor
mov
add
or
in
jg
mov
adc
mov
sbb
or
mov
test
in
(bad)
fisttp
mov
jmp
mov
inc
or
add
push
push
fucomip
ficom
adc
aaa
dec
mov
pop
ret
mov
sti
out
ret
imul
push
mov
mov
test
inc
jl
add
pop
int3
inc
add
and
mov
call
dec
and
adc
inc
js
add
dec
cld
dec
ret
xchg
ret
lods
or
fwait
std
jmp
inc
push
pop
cmp
ja
mov
ret
add
and
cmp
(bad)
jle
or
add
ret
test
jne
ret
imul
rol
or
inc
sbb
jmp
inc
sbb
push
neg
sbb
and
add
mov
outs
jne
push
sub
adc
sub
dec
repnz
xor
leave
inc
mov
or
leave
cmovb
add
enter
jns
bound
div
bound
sar
adc
pop
sbb
rcl
push
jle
add
or
or
add
xor
adc
dec
adc
mov
push
mov
push
fcmovne
in
sbb
aaa
sbb
pop
mov
jmp
xor
xor
cmp
sete
ret
xor
push
js
cmp
jne
sub
punpckldq
push
mov
jge
cmp
pop
sbb
pop
popa
fisttp
sub
push
push
cmp
sbb
outs
pop
ss
mov
and
std
xor
pop
sti
aam
fmul
xchg
pop
or
jmp
cmp
or
outs
or
cmp
jbe
and
inc
ins
lea
paddd
in
mov
call
pop
mov
mov
or
call
push
and
pop
pop
mov
mov
jne
ret
push
mov
mov
mov
jo
fmul
sub
jne
push
cmp
push
and
jno
add
mov
mov
mov
pop
push
shl
into
adc
sub
sbb
rcl
mov
add
mov
mov
mov
or
inc
add
lds
add
inc
sub
out
aad
cmp
xchg
ds
pop
jmp
sub
mov
xlat
mov
pop
and
or
ins
(bad)
test
xor
mov
pusha
push
ret
jnp
stc
mov
mov
mov
mov
add
fild
pop
cld
push
pop
(bad)
clc
adc
and
inc
cld
add
sub
or
dec
or
add
adc
int3
mov
push
mov
mov
add
dec
mov
dec
pop
jmp
and
pop
mov
adc
xchg
add
pop
dec
sbb
inc
add
fadd
sti
lock
fcom
ja
xchg
or
jb
xor
ret
jnp
xchg
push
ss
sub
rol
ret
rcl
shr
(bad)
loopne
lock
or
jno
cwde
cmp
inc
mov
dec
mov
mov
movs
iret
xor
inc
and
mov
call
cld
cmp
xchg
(bad)
int3
mov
in
(bad)
mov
ds
pop
and
mov
jo
inc
mov
mov
and
push
in
test
retf
inc
add
mov
or
rcl
std
or
or
aas
sub
test
jbe
dec
aad
je
push
jmp
dec
jne
ror
ret
movs
mov
inc
dec
mov
jo
inc
mov
aas
test
cmp
add
cmp
push
or
movs
enter
xor
push
ret
push
or
aas
lock
inc
push
call
icebp
adc
lahf
lods
adc
mov
pop
mov
lea
push
pop
and
mov
push
cwde
(bad)
push
stc
je
sbb
aam
add
pop
loopne
and
add
pop
cmp
mov
or
fidiv
cmp
(bad)
cmp
xor
or
lea
mov
movs
add
pusha
test
dec
or
loop
push
sbb
jb
jmp
mov
jmp
scas
fsubr
addr16
cld
ins
dec
and
ror
(bad)
call
jne
(bad)
div
jge
stc
dec
and
add
cmp
mov
lods
ds
and
lock
fs
cmp
jle
mov
je
inc
movs
inc
cmp
jb
jmp
xor
mov
dec
adc
add
mov
add
arpl
mov
pop
add
inc
cmp
jb
call
fs
and
mov
mov
dec
scas
add
add
or
daa
xchg
lods
aad
jmp
inc
add
pop
dec
adc
push
add
sub
or
jb
outs
ja
sub
fnstsw
shr
or
out
jmp
push
dec
bound
std
ds
xor
pop
dec
jmp
xchg
(bad)
repnz
jmp
in
push
push
jne
jo
mov
cmp
call
fdivr
clc
jb
mov
cmp
jbe
out
sub
dec
or
sbb
loopne
out
push
mov
fimul
pop
into
push
mov
sahf
or
mov
clc
sbb
shr
je
cmp
(bad)
push
pushf
push
div
or
fist
mov
xor
add
or
inc
adc
ror
pop
or
xchg
enter
sub
mov
ja
nop
or
pop
pop
test
jne
(bad)
or
div
or
or
adc
jecxz
sbb
sbb
hlt
mov
fadd
add
or
sti
icebp
dec
aad
cmps
pop
mov
ins
jns
sbb
push
xor
mov
inc
shl
nop
or
retf
addr16
and
xor
add
add
test
add
repnz
mov
xor
inc
push
push
inc
fistp
sahf
mov
loope
mov
clc
adc
mov
jp
cmps
pop
aaa
(bad)
pop
sete
pop
pop
pop
mov
iret
clc
pop
cdq
add
pop
sub
test
inc
mov
popf
mov
or
out
cmp
inc
nop
fbld
cmp
shl
mov
call
jne
in
jbe
dec
add
jo
mov
(bad)
xor
xor
je
add
nop
pushf
inc
sahf
fimul
and
enter
stos
pop
leave
nop
lods
out
cld
dec
shl
stos
ins
shl
repnz
sbb
and
push
jp
js
fcmovb
inc
or
mov
push
or
inc
cmp
adc
push
ror
push
jnp
(bad)
sbb
das
xor
repnz
and
sahf
loopne
mov
inc
adc
stos
cld
push
cdq
std
and
push
in
cmp
xchg
or
call
je
int3
mov
or
adc
mov
mov
sbb
dec
adc
jg
sbb
lea
cmp
jb
adc
add
scas
mov
int3
push
sub
iretw
jnp
add
push
sbb
jne
xchg
mov
push
mov
xchg
jo
call
add
adc
fst
add
add
stos
mov
xchg
test
pushw
lods
imul
or
ins
cmp
and
pop
cs
add
fcom
xchg
dec
jno
test
stos
lods
bts
adc
(bad)
cmp
push
test
inc
out
or
test
mov
add
sbb
lods
sbb
test
jnp
push
loop
jb
xor
sbb
fiadd
pushf
les
clc
push
nop
cmp
sub
jae
push
call
push
sub
and
add
ja
mov
ds
retf
xor
addr16
(bad)
pusha
loopne
mov
pop
int3
in
mov
stc
fdivr
aas
(bad)
jge
dec
push
sub
enter
push
jl
mov
add
aas
jbe
fidivr
xchg
cmps
ins
xor
enter
mov
inc
in
pop
xor
inc
shl
lea
rcr
push
push
std
add
or
mov
xor
dec
push
sbb
mov
movs
movs
mov
shr
add
nop
jae
push
xchg
call
or
loopne
jge
add
fneni(8087
mov
cmps
push
or
adc
inc
mov
mov
dec
push
inc
mov
jo
mov
or
adc
jmp
dec
aas
(bad)
dec
ret
clc
test
lds
js
and
add
inc
mov
push
test
cli
and
mov
push
fadd
fcomp
bound
cmp
add
nop
dec
sub
lods
add
popa
add
inc
xchg
cmp
call
push
in
out
in
jae
push
mov
jno
pop
mov
ins
mov
xor
add
xor
fadd
add
jmp
and
cwde
movups
comiss
nop
adc
xor
mov
push
enter
ds
cwde
xorps
push
jmp
push
sub
push
mov
sahf
daa
cmps
pop
inc
push
push
adc
add
adc
dec
rol
ins
clc
xchg
aaa
xor
aaa
frstor
inc
and
and
push
push
sub
mov
xor
int
mov
and
lea
cmp
jbe
cld
in
sbb
retf
adc
les
or
add
pop
adc
or
or
repnz
inc
push
in
add
aam
ss
cmp
imul
gs
dec
or
mov
adc
mov
dec
pop
and
or
or
aam
sbb
sub
cmp
lods
jo
jne
lods
jns
jl
js
call
(bad)
cmp
leave
cmps
stos
or
add
fsub
xchg
jo
comiss
lods
push
pusha
jmp
retf
inc
pop
cmc
mov
hlt
mov
add
leave
and
rcr
cmp
repnz
enter
add
inc
scas
sub
and
test
mov
mov
retf
call
pop
fild
nop
iret
dec
sahf
inc
cmp
jb
cmp
mov
fdivr
sbb
and
pop
cmp
jmp
sbb
add
and
inc
adc
add
sub
xor
mov
leave
stc
push
cmc
cld
xchg
pop
or
shl
jecxz
ret
mov
mov
stos
add
sub
pop
hlt
pop
push
dec
sbb
dec
pop
je
mov
cmp
adc
adc
cmp
es
dec
pop
mov
add
pop
or
cmps
test
push
cmp
cli
inc
jb
ret
dec
pusha
cmp
jae
add
cmp
mov
adc
dec
icebp
inc
in
adc
inc
or
adc
add
sbb
pop
jmp
or
inc
pop
jb
mov
fstp
adc
pop
add
push
inc
push
pop
xor
fcomi
ror
mov
lods
jae
sbb
int3
adc
(bad)
mov
mov
cmp
jbe
mov
pusha
scas
loope
jp
int
adc
retf
frstor
dec
jb
mov
push
add
(bad)
pop
inc
sbb
(bad)
dec
sub
mov
cmp
ja
imul
xchg
add
adc
xchg
add
add
je
pop
xor
xlat
movs
jb
adc
jae
inc
adc
pop
mov
loop
mov
jle
add
lods
loopne
es
adc
fld
pop
faddp
es
cld
fmul
mov
jg
mov
mov
mov
fisubr
test
call
adc
inc
cmp
sbb
ds
inc
sbb
inc
and
dec
(bad)
(bad)
inc
inc
jp
sbb
mov
adc
int3
add
adc
mov
fiadd
gs
scas
sbb
call
scas
lods
test
lea
aaa
mov
in
lods
(bad)
sti
adc
jo
or
(bad)
jmp
sbb
pushf
push
cwde
add
push
sbb
sbb
daa
in
(bad)
xor
xchg
fsubr
pop
push
hlt
ins
adc
fld
in
es
inc
sahf
or
cld
cmps
gs
adc
fs
mov
and
add
(bad)
fadd
lea
int3
test
mov
iret
enter
xchg
lods
sbb
test
cmps
mov
pushf
in
add
je
push
jl
add
pop
dec
mov
leave
(bad)
jmp
lea
mov
nop
imul
jo
enter
sbb
sub
in
xchg
pop
sub
jl
xor
pop
pop
xchg
push
aaa
pop
hlt
sbb
or
or
psllq
pop
inc
adc
sbb
ds
add
sub
pop
pop
sbb
cmp
mov
int
mov
sub
ins
sub
mov
inc
in
test
xor
dec
call
fsubr
in
(bad)
jbe
call
es
(bad)
sbb
stos
inc
fsubr
add
adc
mov
add
mov
adc
push
in
out
jnp
test
rcl
int3
dec
cmps
mov
cmps
inc
cmps
inc
fdiv
enter
xchg
loopne
push
or
retf
xchg
pusha
scas
mov
or
mov
mov
xchg
adc
add
push
sahf
icebp
leave
addr16
push
inc
adc
inc
and
jbe
add
dec
mov
fadd
clc
sub
test
jg
add
add
imul
loopne
arpl
xor
push
outs
sub
je
mov
or
or
clc
sub
mov
mov
sti
neg
add
jl
call
mov
mov
jbe
ins
dec
jmp
mov
xchg
inc
cmps
cmp
mov
add
pop
mov
pop
dec
add
push
test
popa
xchg
jp
leave
fcmovnu
add
nop
mov
arpl
je
arpl
dec
cmp
push
and
scas
mov
jno
cld
out
fcom
or
shl
repnz
add
lea
cmp
pop
test
(bad)
cmps
jmp
(bad)
into
scas
inc
test
stos
add
add
push
pusha
pop
int3
dec
push
and
add
xor
iret
mov
jp
pushf
mov
xor
cmps
add
(bad)
or
and
adc
jo
outs
push
(bad)
dec
imul
add
aas
and
(bad)
xchg
ja
loopne
in
sub
push
sbb
lods
push
xchg
mov
stc
pop
inc
lea
push
cmp
sbb
and
ret
push
mov
sbb
int
ficomp
rol
dec
cmc
jmp
imul
add
lock
cmp
or
fadd
out
ret
or
push
lds
mov
xor
mov
cmp
push
jne
jnp
xor
(bad)
pop
rol
jb
repz
push
pop
cmp
arpl
inc
stc
(bad)
sbb
mov
aaa
loope
not
dec
dec
mov
gs
je
sub
out
neg
out
dec
es
add
test
nop
or
call
pop
jmp
lock
je
imul
or
jp
adc
sahf
jo
sbb
ror
sub
xchg
pop
sti
jae
rcl
sbb
push
adc
xor
mov
leave
bt
ror
leave
sub
ins
pop
push
pusha
sub
pop
xor
repz
inc
or
cmp
inc
imul
add
add
xor
add
dec
dec
ins
inc
fiadd
aas
pop
xor
push
cmp
xor
pop
pop
or
push
mov
nop
dec
pusha
xor
rol
sbb
cmp
inc
dec
jo
(bad)
inc
mov
cmp
stos
fild
push
fs
xor
lea
cwde
sbb
push
dec
cli
jmp
mov
or
mov
push
adc
xor
sbb
sbb
inc
scas
inc
inc
push
or
dec
repz
mov
or
mov
mov
out
xor
ror
xor
pop
ret
pusha
fs
and
in
in
and
sub
dec
in
xchg
sar
dec
or
dec
std
dec
inc
xchg
out
add
mov
retf
add
imul
fcomp
sti
cmp
inc
jae
stos
inc
inc
fnstenv
mov
ret
sar
dec
in
jmp
shl
add
loopne
inc
push
stc
enter
rcl
sbb
and
push
push
xchg
nop
nop
sbb
push
sbb
scas
test
push
lods
ror
adc
and
popf
cmp
out
call
xor
xchg
push
pop
fisub
xor
and
push
out
(bad)
mov
(bad)
inc
add
cmps
mov
pusha
mov
pop
sub
or
sbb
fs
add
(bad)
(bad)
jecxz
sub
daa
inc
adc
push
push
inc
js
push
pop
cdq
nop
push
pop
das
mov
pop
and
xor
mov
inc
xor
test
rcl
or
add
(bad)
and
cmp
jne
mov
and
add
pop
adc
ret
sbb
sub
movs
inc
push
sub
push
pop
movs
xchg
cmpps
add
lods
lock
scas
ins
leave
ret
sahf
jecxz
and
ret
leave
mov
icebp
inc
lods
cdq
mov
mov
and
mov
icebp
nop
out
sbb
dec
jne
xor
int3
fisttp
inc
and
sbb
sbb
js
ja
pop
ret
fs
mov
inc
sbb
sbb
xor
mov
add
or
jnp
xor
pushf
pop
dec
mul
inc
les
pop
nop
inc
jb
pop
aam
xor
sbb
dec
jle
and
(bad)
cmp
movs
mov
cmp
data16
mov
out
jge
ror
mov
jnp
popa
push
push
adc
pop
jmp
xchg
scas
inc
pop
enter
ds
in
adc
pop
fwait
xchg
pop
in
xchg
cld
xchg
pushf
and
movs
lods
xchg
cmp
xor
ss
mov
shl
sbb
cmp
ss
popa
xor
mov
jo
ss
pop
xchg
cs
xchg
repnz
sbb
movs
adc
xor
adc
pop
jne
mov
ja
jb
in
fisub
push
cmc
test
in
cdq
shr
mov
jbe
movs
add
mov
push
arpl
mov
fimul
mov
add
int
xchg
test
jmp
sbb
cmp
adc
popa
jns
shl
sub
pop
ror
ins
repnz
cmp
ja
inc
cmps
sub
mov
jno
pop
popa
cmp
inc
sub
jmp
(bad)
popa
and
xchg
mov
and
aas
xor
sbb
cmps
bound
lea
adc
cmp
movs
data16
pop
mov
pop
push
or
push
call
push
ds
aas
lahf
xor
out
pop
loopne
sbb
movs
lea
stos
add
in
xchg
pusha
inc
sub
push
ror
fs
push
les
jg
jle
retf
cmp
jne
sbb
inc
add
xlat
adc
stc
or
sbb
lea
les
inc
adc
push
cld
xor
push
cdq
jbe
inc
ins
inc
aas
cmp
push
cdq
inc
dec
add
push
push
cli
pop
jo
fsubr
inc
cmp
jne
ret
or
int
sub
ins
add
add
sbb
xor
pushw
fild
ins
jmp
cmp
xor
cs
cmp
les
inc
push
(bad)
loope
mov
mov
push
push
daa
push
jo
sti
push
mov
xchg
push
je
inc
sbb
jp
sbb
inc
fwait
add
or
inc
sbb
or
and
inc
lock
mov
cmp
inc
loopne
mov
adc
add
add
push
add
retf
adc
pusha
pop
xor
pusha
pop
mov
lea
push
and
sub
or
and
or
or
pushf
mov
add
lods
jge
jo
or
or
je
fiadd
add
push
fs
enter
push
push
mov
jne
enter
aam
dec
inc
push
ficom
addr16
jecxz
movs
stos
jle
jbe
dec
mov
outs
fstp
add
dec
pushf
mov
inc
cmps
std
(bad)
loope
clc
ins
jne
push
cmp
gs
dec
dec
dec
loop
inc
rol
push
mov
cdq
sar
(bad)
pop
lea
dec
xor
das
nop
sub
gs
and
and
adc
and
rol
rcr
push
push
daa
sahf
lods
mov
inc
test
sub
add
jmp
adc
sub
sub
clc
add
sti
cmp
mov
test
pop
xchg
in
cdq
aaa
push
loop
mov
inc
jne
cmp
je
sbb
add
sbb
add
int3
push
mov
push
sub
sti
in
mov
ret
aad
ds
mov
mov
jmp
dec
sti
pushw
cmp
jne
push
call
sbb
and
sub
push
adc
cmp
xchg
pop
push
adc
cdq
sub
imul
pop
enter
xchg
push
mov
repnz
push
mov
fs
push
test
sbb
adc
or
ja
les
test
scas
fnop
mov
or
pop
ins
mov
adc
fiadd
and
push
cmp
jo
outs
and
push
cmp
je
adc
pcmpeqb
mov
gs
lock
arpl
push
loopne
test
pop
or
push
pop
adc
arpl
pop
inc
fistp
or
and
sbb
test
dec
or
push
push
push
mov
lock
dec
cmps
mov
popf
sti
and
xor
adc
das
inc
mov
or
mov
pusha
in
ins
jne
fistp
shr
mov
push
daa
adc
imul
js
hlt
dec
sbb
scas
or
out
or
push
cs
sbb
xor
out
ret
fs
sbb
sbb
nop
or
sbb
adc
mov
inc
lock
cmp
je
push
das
in
push
cld
jmp
mov
mov
xor
and
mov
mov
xchg
inc
xchg
xchg
cmp
das
sub
leave
or
xor
inc
pop
ficom
push
xchg
push
add
pop
cmp
fmul
daa
jo
add
cmps
shl
inc
orps
push
je
pushf
lods
cmp
sub
or
icebp
pop
push
je
add
lock
mov
stos
ror
push
xor
and
push
and
or
or
dec
cmp
je
or
movs
push
dec
add
sub
nop
out
sub
fisubr
pop
xor
jne
cmp
pop
and
mov
les
stc
hlt
(bad)
pop
mov
cmp
push
rcl
and
adc
add
cmp
mov
xlat
and
inc
inc
sbb
push
icebp
nop
adc
push
pop
cmp
mov
rol
or
mov
mov
pop
jne
ja
push
mov
jmp
call
jae
gs
pop
add
add
repz
xchg
and
sar
mov
sub
nop
pop
leave
inc
dec
jnp
push
mov
loop
inc
add
xchg
adc
xchg
mov
sbb
cmps
adc
jno
xor
mov
lods
sbb
sahf
retf
out
inc
lods
inc
add
les
add
fwait
sar
or
dec
sar
or
sbb
pop
std
loopne
fdivrp
cmp
pop
sub
dec
add
cmp
(bad)
or
xor
pop
cmp
or
adc
sub
xchg
cmp
ror
popa
xor
pop
push
push
(bad)
outs
adc
push
rol
cmp
lea
sbb
test
enter
xchg
nop
aam
mov
rol
cmp
loop
pop
and
ret
ja
xchg
sbb
and
push
mov
les
scas
cmp
or
adc
ret
je
xchg
sub
ins
cmp
nop
add
cmp
push
repnz
push
sar
and
sbb
shl
neg
add
dec
jecxz
out
adc
adc
jne
adc
pop
jb
pop
or
pusha
inc
pop
fisub
test
adc
jns
adc
mov
pop
add
cwde
fs
lods
add
cmp
push
scas
loope
push
add
fs
mov
xchg
pop
inc
jns
push
dec
adc
or
lea
cdq
in
jg
sbb
xor
xchg
xchg
sbb
push
test
aad
nop
dec
pop
mov
mov
jo
enter
lds
js
sbb
jl
lods
dec
push
dec
push
push
push
pushf
mov
or
ins
xchg
das
push
sbb
adc
or
mov
fs
inc
sbb
and
dec
inc
fsub
dec
cs
xchg
xor
and
mov
and
and
cmp
rol
and
xchg
inc
xchg
and
mov
rcl
jb
add
imul
dec
push
sub
call
sahf
add
sub
mov
jmp
jns
sub
push
pop
ret
pop
fwait
mov
stos
punpckhbw
mov
jno
in
lahf
inc
pop
push
loope
and
xor
je
mov
xor
pusha
and
inc
sahf
mov
xor
jp
popa
and
lahf
test
cmp
in
aad
add
pop
jmp
xor
inc
adc
movs
repnz
ret
or
and
or
mov
add
sub
retf
and
mov
sub
in
out
pusha
cmp
aaa
cwde
call
or
mov
cmp
push
add
int3
dec
rol
or
push
and
add
push
mov
push
loope
(bad)
sbb
inc
sbb
test
and
push
call
sbb
inc
xor
xchg
(bad)
loopne
pop
xor
(bad)
cmp
pop
sub
enter
or
mov
cmp
rcr
lock
pop
or
or
push
dec
xor
or
dec
dec
jmp
dec
rol
adc
jne
call
loopne
add
cwde
inc
pop
js
dec
push
pusha
dec
aas
dec
cmp
push
xor
mov
or
jmp
rcr
retf
aam
outs
cli
push
sub
push
or
inc
stos
mov
cmp
push
mov
arpl
sub
lods
mov
loopne
shl
mov
fsub
inc
mov
mov
and
or
ja
xor
inc
adc
out
push
xor
sbb
jb
xchg
jl
push
in
inc
pop
fadd
pop
mov
inc
nop
push
fisub
pop
push
push
imul
rcl
mov
jg
push
scas
inc
cmp
xor
push
pop
addr16
call
lock
mov
hlt
pop
jmp
push
out
mov
in
mov
or
cdq
test
or
cwde
push
je
leave
push
push
jno
adc
ror
mov
retf
(bad)
out
add
ds
xor
in
pop
or
push
push
in
pop
movs
enter
in
shl
mov
imul
inc
add
or
ret
mov
sbb
or
push
sub
int3
add
mov
mov
mov
cld
mov
jo
push
push
test
les
xor
std
xchg
inc
or
push
xor
imul
cdq
in
mov
sahf
mov
fmul
and
cmp
(bad)
aaa
push
and
mov
mov
inc
add
or
jmp
sbb
ret
add
mov
inc
add
sub
xchg
data16
add
push
lds
xchg
push
cmp
push
mov
fwait
sub
stos
fs
in
jns
pop
mov
hlt
adc
aaa
out
add
and
es
icebp
nop
data16
arpl
mov
pop
sbb
add
jo
hlt
jecxz
inc
out
mov
mov
ror
xor
mov
dec
call
daa
stc
outs
fcmovnu
cmp
loopne
sbb
cmp
mov
xchg
push
pop
push
xchg
in
jge
or
lahf
(bad)
call
xchg
mov
add
shl
xchg
enter
adc
lahf
inc
test
adc
mov
pop
mov
leave
shr
ror
fidiv
sbb
inc
push
in
inc
push
ficom
pop
fsub
sahf
mov
xor
or
je
pop
lods
cmp
fmul
in
fadd
push
dec
and
pop
xchg
icebp
(bad)
mov
sar
jb
and
fidivr
loopne
mov
mov
pop
add
inc
and
(bad)
leave
shr
stos
xor
mov
punpckhwd
add
sub
sbb
inc
dec
jmp
enter
and
in
mov
xchg
inc
ds
(bad)
and
cmps
xchg
pop
xchg
nop
jl
or
retf
xchg
mov
jge
lock
retf
retf
rol
push
jmp
test
adc
les
add
inc
rcr
and
and
jb
or
sub
daa
pop
leave
in
sbb
mov
xchg
dec
add
add
test
or
rcl
add
sub
mov
jae
jne
mov
adc
add
dec
cmp
fisttp
lock
push
mov
xor
ss
mov
or
pusha
ins
push
push
lds
sub
daa
cs
and
sub
adc
push
mov
cmp
or
enter
inc
mov
jecxz
sub
ret
add
add
enter
shr
cmp
mov
adc
cmp
test
icebp
mov
xchg
xchg
inc
mov
and
popf
add
test
dec
push
adc
add
enter
add
cmp
mov
pop
fcom
xchg
stos
push
ret
cmp
sbb
mov
cs
pop
outs
out
mov
in
inc
lea
sbb
inc
pop
aaa
loopne
or
in
jb
dec
sub
cmps
nop
and
dec
mov
mov
push
cs
mov
xor
pop
mov
fmul
or
(bad)
adc
inc
sbb
sub
sub
stos
leave
adc
sbb
pop
les
nop
jo
mov
push
dec
gs
mov
mov
add
test
cli
jns
enter
sub
sub
in
jb
and
pushf
and
in
or
(bad)
sbb
and
add
sub
cmp
add
mov
push
leave
adc
xchg
mov
in
nop
or
dec
jmp
cs
or
imul
xor
inc
sub
push
add
and
xchg
add
inc
and
pop
nop
(bad)
retf
mov
nop
pop
xchg
or
push
pop
sub
das
mov
add
retf
rol
dec
loope
inc
xchg
test
adc
imul
in
repnz
cmp
and
and
imul
jmp
inc
add
call
sahf
ret
cmp
inc
add
aaa
cmp
je
or
je
and
in
(bad)
fist
and
inc
add
clc
pusha
add
push
add
add
mov
push
in
cdq
pop
xor
push
or
rol
aas
test
movs
dec
pop
icebp
(bad)
adc
pop
ret
push
push
mov
mov
and
(bad)
inc
pcmpeqd
cmp
jae
dec
movzx
lea
jne
sbb
call
outs
fnstsw
xchg
jns
pop
pop
jne
shr
inc
dec
shr
sbb
stos
or
test
das
or
dec
repz
adc
pop
or
inc
adc
repnz
push
ret
sub
push
mov
loopne
dec
add
jnp
shl
and
push
push
jecxz
pop
fistp
inc
mov
loopne
(bad)
mov
(bad)
jmp
mov
lea
cmp
jne
push
push
das
into
mov
(bad)
(bad)
inc
or
lock
dec
test
jg
mov
adc
push
add
xor
xor
test
jnp
add
adc
inc
jne
sub
sar
inc
push
jnp
cmp
add
push
pop
or
ret
cli
fwait
xor
xor
ins
iret
sti
mov
cld
jmp
cmp
jle
push
jmp
(bad)
jecxz
inc
hlt
mov
and
push
(bad)
push
mov
xor
pushf
ins
ja
lods
clc
push
les
xchg
shr
and
dec
imul
xor
xchg
(bad)
pop
or
sub
push
push
or
xor
jne
inc
pusha
dec
jmp
add
and
and
mov
push
mov
adc
cmp
fwait
stos
pop
pop
cmp
push
or
or
mov
jmp
or
iret
sbb
inc
sub
fsubp
pop
hlt
sub
dec
clc
xchg
sbb
inc
adc
pop
mov
call
lea
xchg
xor
mov
cli
inc
cmp
pop
adc
xor
add
cdq
leave
mov
rcl
inc
clc
ret
rol
mov
les
cmp
cmp
jl
cmp
pop
sub
sahf
add
lods
pop
jle
test
ret
push
je
or
cmp
sub
xchg
js
add
jo
jbe
and
fs
xchg
(bad)
out
sbb
enter
sub
inc
lock
jb
aas
ficom
jle
int
movs
jb
(bad)
jle
xchg
push
sar
add
xchg
jmp
mov
(bad)
jge
mov
xchg
cmp
jle
jmp
dec
cmp
push
(bad)
(bad)
ja
or
dec
hlt
nop
inc
sub
enter
and
ror
ja
inc
lods
popf
aam
and
rol
mov
jb
xor
inc
add
rol
mov
cmc
outs
loopne
mov
cmp
jae
pop
xor
or
or
mov
ret
aas
jle
imul
mov
pop
addr16
push
sbb
int
inc
aam
add
(bad)
mov
dec
cmp
sub
add
cmp
jne
lods
dec
add
pusha
aam
jp
fldl2t
cmp
mov
xor
fcmovnb
mov
sub
sar
out
cmp
add
fcomip
pop
and
lea
push
adc
jmp
jnp
mov
sbb
xor
scas
pop
mov
das
push
lock
pop
fst
jns
(bad)
adc
stos
fnstenv
cmp
cdq
je
push
idiv
push
(bad)
cmp
mov
push
add
int3
(bad)
jne
scas
adc
pop
enter
mov
xchg
add
push
lods
stos
xchg
mov
cld
dec
hlt
and
adc
inc
jp
push
pusha
mov
push
xor
push
call
(bad)
cmp
jnp
dec
loopne
adc
retf
and
jbe
loopne
push
enter
rcl
sbb
push
xor
or
xor
add
mov
rol
cmp
mov
dec
and
adc
adc
xor
xchg
pop
add
adc
push
cmp
repnz
inc
cmps
nop
or
aam
lods
push
or
add
inc
cmps
mov
xchg
jb
pushf
sbb
sub
push
mov
xchg
mov
pusha
pushf
xor
mov
sbb
sbb
adc
aaa
jge
pusha
mov
cmps
or
mov
mov
es
fcom
and
lock
cmp
dec
sbb
pusha
fadd
loopne
mov
imul
add
sbb
cmp
je
nop
mov
cmp
jae
shl
(bad)
or
xor
popa
mov
cs
mov
shl
outs
ss
cmp
call
mov
lock
push
sbb
and
in
xor
mov
push
jno
and
jae
inc
dec
or
data16
in
xor
enter
xor
add
sbb
adc
add
inc
out
xor
out
jl
call
cmp
xlat
push
mov
pop
mov
adc
xchg
test
dec
call
and
jo
(bad)
sub
cmp
xor
push
add
push
sbb
add
cmovnp
popf
shl
test
or
and
add
push
jb
or
inc
add
xchg
mov
add
add
or
adc
mov
push
inc
lea
inc
cmps
popa
push
daa
mov
sub
enter
out
rcl
xor
inc
test
lock
ret
mov
and
inc
add
test
pop
add
mov
popf
xchg
add
retf
cmp
or
sbb
sbb
movs
jo
(bad)
push
push
push
push
or
jo
cld
xchg
xor
or
push
xchg
adc
add
jns
lock
add
ins
lods
nop
push
adc
dec
call
inc
out
fidiv
popa
mov
adc
mov
imul
mov
sbb
outs
mov
push
cmp
sbb
ror
mov
xor
cmps
jns
pop
add
or
daa
movs
mov
ins
push
out
sub
pop
lea
jp
and
add
push
mov
fcmovu
aam
mov
lea
adc
adc
cmp
sub
mov
cmp
push
xchg
dec
jnp
pop
jne
mov
pop
jne
cmp
xchg
lds
pop
cli
push
hlt
inc
mov
push
mov
sbb
add
ror
mov
cdq
xor
ja
test
pop
sub
sbb
sbb
xor
in
and
adc
pop
add
cmp
and
sub
fwait
sub
inc
inc
hlt
movs
xchg
and
pop
jmp
push
cmp
in
aaa
push
mov
xchg
retf
ror
cld
lock
gs
adc
pop
or
jge
xchg
je
scas
mov
pop
xchg
pushf
adc
arpl
jo
int
xchg
lock
jmp
add
xchg
add
and
dec
push
sbb
and
or
and
inc
sub
adc
sbb
pop
xor
push
lea
(bad)
sar
pop
rdpmc
lock
jnp
ds
cld
fild
or
cmp
jg
push
inc
pop
lock
push
inc
or
mov
jb
cmp
in
add
adc
xchg
pop
sub
(bad)
cs
xchg
(bad)
loop
or
push
push
push
push
mov
jo
jns
and
sahf
add
pop
add
pop
pop
xchg
mov
dec
mov
into
aam
icebp
inc
sub
retf
or
cmp
shr
pop
inc
je
adc
mov
cmps
imul
ror
and
xchg
int
leave
adc
and
mov
add
jl
cmp
scas
xor
fadd
jmp
mov
add
dec
adc
sub
jp
leave
ret
add
push
xchg
dec
loopne
fisttp
retf
imul
popf
xchg
add
or
inc
pop
sbb
xor
push
lods
test
rcr
pop
mov
pop
sbb
push
call
mov
aaa
push
std
mov
pop
popf
push
sub
jne
xchg
or
jmp
je
adc
mov
xchg
push
push
test
inc
jne
push
xchg
inc
jnp
cs
or
imul
cmp
xchg
sbb
mov
pop
jno
pop
les
arpl
jb
jns
push
mov
out
adc
out
or
add
or
adc
mov
into
sub
push
adc
pop
cmps
jns
loopne
popa
ja
and
add
pop
scas
push
adc
or
xchg
jnp
adc
aad
mov
push
fs
cld
sub
push
xor
fs
jmp
shr
out
repnz
mov
jae
or
or
sbb
jmp
pop
push
in
xchg
ret
xchg
or
rol
push
nop
(bad)
pusha
fist
mov
pop
dec
add
mov
popf
mov
test
add
mov
add
fwait
adc
out
loope
imul
dec
mov
jle
or
push
adc
pop
cmp
add
adc
and
mov
aad
pop
push
add
pop
sub
add
pop
cld
inc
retf
xor
adc
repz
and
push
push
popa
inc
add
lea
lahf
sub
cmp
rcl
fild
push
jns
fimul
fadd
cmp
lea
pop
outs
shl
in
out
test
sub
xor
and
mov
adc
call
mov
jle
jbe
or
inc
push
fbld
repnz
xchg
(bad)
nop
inc
add
retf
pusha
test
pop
int3
push
ins
push
or
ret
ins
mov
and
inc
test
push
adc
inc
call
adc
dec
int
adc
add
cld
out
push
rcl
xor
mov
popa
adc
std
mov
(bad)
and
ret
push
inc
nop
out
clc
add
clc
xor
enter
loope
and
pop
dec
cmp
fcomp
jmp
es
xor
aaa
add
push
iret
jo
rcl
call
xor
pop
and
mov
push
push
int3
add
add
push
push
sub
cmp
mov
lea
retf
in
or
mov
mov
mov
sbb
out
inc
cmp
aam
xor
jmp
gs
leave
imul
(bad)
cmp
outs
adc
(bad)
lods
push
push
push
in
pop
push
ret
popa
rcl
push
push
mov
out
dec
dec
lds
(bad)
cs
or
in
jbe
or
cmp
icebp
and
jmp
or
mov
cmp
popf
add
dec
inc
push
(bad)
jnp
xchg
loope
mov
jle
(bad)
xlat
and
ins
cmp
and
add
fs
dec
jo
(bad)
and
and
sbb
pop
jp
imul
pusha
pushf
sbb
retf
sbb
loopne
push
add
mov
dec
mov
add
push
fs
aad
pop
or
and
repz
rol
and
and
cmc
lea
mov
cmp
out
stos
and
int
ret
mov
xor
mov
cs
rol
dec
repz
pop
mov
cwde
xor
pop
shl
pusha
ds
rcr
push
enter
add
or
fwait
in
mov
add
xchg
test
in
mov
dec
adc
add
push
in
push
stos
add
in
jg
outs
inc
je
cmp
jae
push
adc
mov
inc
cmp
jmp
jmp
push
or
cmp
nop
add
pop
and
sub
pop
push
dec
add
mov
sbb
push
adc
cdq
add
mov
ins
cmp
adc
add
push
or
mov
les
push
jbe
call
sub
add
and
xchg
push
push
or
or
add
icebp
xchg
add
or
cs
cmp
adc
test
aas
mov
xchg
fs
xchg
call
jo
mov
adc
lahf
inc
pop
enter
data16
sbb
push
test
lahf
mov
cs
jmp
call
loopne
sbb
push
(bad)
cmp
shr
push
xchg
sub
sbb
in
(bad)
clc
cmp
(bad)
jbe
pop
pop
shl
call
mov
sub
ret
push
in
cmp
inc
mov
sbb
mov
xchg
xchg
fstp
and
mov
ja
cld
cli
in
inc
push
inc
pushf
and
push
fimul
or
repnz
div
lods
xor
clc
push
or
jno
sbb
xchg
jge
dec
adc
outs
mov
(bad)
jmp
inc
call
xchg
ja
cmp
jb
and
mov
add
addr16
push
sti
push
clc
and
push
push
adc
xchg
push
push
pushf
jge
add
out
push
dec
push
xor
xor
adc
ja
imul
push
adc
lods
xchg
bswap
lds
cmp
je
inc
pop
in
or
retf
adc
test
aas
cmp
jle
jne
hlt
jmp
push
and
dec
push
je
out
sbb
mov
jl
dec
mov
xor
push
icebp
or
dec
in
mov
clc
cdq
aaa
mov
jl
xchg
add
mov
ss
out
inc
out
fidiv
mov
sbb
sar
mov
and
and
jo
push
push
inc
mov
in
sbb
je
push
inc
clc
jp
or
fsubr
ficom
fcomp
fcmovbe
(bad)
ja
aam
jge
jae
mov
push
outs
inc
or
rcl
mov
test
int
inc
jmp
or
push
mov
adc
dec
mov
xchg
cwde
and
sub
and
stos
jle
mov
pop
adc
mov
inc
pop
sbb
adc
addr16
call
(bad)
lock
rcr
not
push
rcl
scas
jns
cwde
outs
loop
pusha
adc
scas
cdq
jbe
aad
cmp
aad
leave
(bad)
pop
cmp
jne
push
or
(bad)
js
sub
cwde
xor
or
inc
xchg
xor
add
jmp
mov
push
ret
or
lock
mov
push
jmp
lea
mov
pop
les
sub
push
cmp
pop
add
sbb
jns
loopne
push
push
push
sbb
or
loopne
ret
adc
fdivr
or
jne
scas
or
xchg
retf
repnz
dec
add
and
pop
push
add
and
or
in
add
xchg
add
pop
enter
xchg
xor
push
mov
call
or
add
inc
xchg
call
jmp
imul
aas
and
shr
pop
retf
mov
sbb
adc
cmc
sub
adc
mov
inc
je
add
aaa
aam
fisttp
or
aad
adc
add
or
or
jmp
push
clc
sub
jbe
jmp
mov
adc
dec
add
xchg
dec
cmps
cli
jg
adc
js
sbb
sar
lods
les
sub
mov
mov
jne
and
add
movs
adc
lods
mov
js
stos
aam
xchg
pop
xor
xor
(bad)
jb
pop
enter
daa
add
push
loopne
int3
xor
and
loopne
or
shl
aam
or
retf
and
fimul
pusha
add
dec
bound
cmp
pop
leave
mov
data16
adc
mov
pop
or
cmp
push
pop
mov
push
push
sbb
sbb
pop
in
inc
dec
cmp
inc
in
in
add
es
jecxz
mov
call
verw
push
loop
data16
dec
jb
xchg
clc
pop
rcl
aaa
add
imul
xchg
jp
push
xchg
lea
enter
and
xchg
cmp
xchg
inc
and
inc
stos
push
xchg
dec
and
and
pop
std
mov
push
sub
xor
dec
int
dec
in
add
enter
mov
pop
jmp
mov
xor
inc
add
pop
xlat
sub
std
movs
or
and
cmp
inc
mov
dec
push
in
pop
mov
add
test
icebp
jle
ror
cwde
mov
retf
add
mov
cs
(bad)
int
out
in
or
mov
adc
loopne
mov
mov
add
lock
clc
enter
shl
nop
lock
out
xchg
jecxz
ins
dec
enter
data16
jmp
xchg
cwde
sbb
call
dec
shr
ins
jmp
xor
(bad)
fsub
push
mov
jne
and
add
xchg
dec
nop
inc
push
mov
movs
dec
shl
mov
stos
adc
inc
arpl
push
std
test
adc
out
daa
lods
add
mov
cmp
es
mov
mov
ins
mov
outs
addr16
cmp
das
cmp
xchg
(bad)
icebp
test
cmp
adc
mov
fst
mov
xchg
xlat
inc
adc
ss
jo
js
add
jo
and
push
test
inc
mul
adc
and
shl
ins
fstp
ret
xor
jns
and
and
add
loopne
pop
ins
scas
imul
test
add
mov
or
aam
popf
scas
add
or
or
mov
mov
cmp
push
mov
repnz
shl
mov
inc
mov
neg
cwde
inc
aam
dec
imul
adc
xor
mov
add
inc
mov
ret
sbb
dec
and
or
popa
jns
fiadd
push
or
or
stc
pop
jo
popa
inc
add
jl
aad
fnstcw
inc
mov
(bad)
sbb
clc
ret
sub
pop
mov
push
int3
mov
popa
movs
jp
dec
lods
in
mov
xchg
mov
mov
sbb
dec
add
jecxz
push
jae
sbb
rcl
pop
and
push
shl
rcr
sub
jno
ret
sbb
sbb
sar
pop
ret
mov
das
push
jle
fadd
dec
hlt
lea
jb
and
lock
loope
fmul
add
fwait
in
mov
xor
test
add
mov
push
je
call
sbb
loope
jl
push
add
repz
popf
retf
movs
sub
lock
call
and
and
or
add
scas
or
sbb
nop
mov
int3
dec
mov
imul
scas
retf
ss
cli
int3
pop
enter
and
pop
jo
cvtdq2ps
cmp
cmps
stc
mov
push
cld
loopne
(bad)
adc
mov
xchg
bound
inc
or
xor
or
mov
push
sar
cmp
jne
push
cmp
(bad)
cmp
push
push
aam
mov
test
dec
enter
aam
adc
inc
xchg
out
add
mov
dec
mov
jns
dec
mov
inc
mov
push
mov
xchg
and
in
gs
push
pop
sub
push
xlat
stos
iret
mov
push
int3
fs
hlt
pop
sbb
push
shr
inc
loope
xor
mov
(bad)
mov
push
hlt
ja
arpl
mov
shl
(bad)
and
cmp
mov
test
mov
jo
pop
fnstsw
sbb
sub
imul
(bad)
daa
adc
clc
jb
sbb
js
jmp
push
add
ror
cmp
clc
jg
pusha
ror
jecxz
add
test
adc
push
sbb
jbe
adc
inc
xchg
lods
pop
out
or
jl
js
test
mov
mov
outs
add
data16
mov
nop
xchg
ror
jge
add
test
or
mov
jne
sbb
sbb
sbb
inc
and
ss
std
sbb
enter
sbb
jl
push
sbb
mov
test
sbb
adc
gs
bound
cmp
sbb
sbb
or
test
jp
or
xchg
dec
(bad)
push
and
adc
xchg
pop
jo
sub
mov
or
into
push
mov
test
mov
push
leave
xchg
add
xor
sub
dec
das
test
xor
inc
shl
call
push
or
sbb
je
loope
in
call
mov
and
call
adc
and
xor
xor
sbb
cs
push
mov
push
add
mov
add
mov
mov
div
push
ret
and
add
mov
daa
or
push
ret
sub
loopne
icebp
push
jae
mov
aas
fstp
leave
push
xor
add
add
and
and
lods
add
mov
test
dec
repnz
inc
xchg
xchg
inc
repnz
adc
test
rol
xor
mov
adc
xchg
ins
mov
mov
push
mov
push
push
push
sub
shr
cmp
adc
gs
cmp
lss
dec
mov
jl
cmps
sub
push
jl
jbe
push
cmps
mov
test
add
dec
call
mov
push
add
push
mov
pop
add
in
xor
pop
add
pop
push
scas
test
pop
inc
sub
movs
push
jo
mov
sbb
and
push
push
lea
call
sub
pop
lds
pusha
sete
cmps
(bad)
push
pop
cmp
xor
add
(bad)
jae
lock
mov
cmp
pop
(bad)
adc
enter
adc
repz
or
mov
pushaw
enter
sbb
(bad)
sar
lea
push
xor
das
xchg
or
jecxz
sub
mov
mov
mov
adc
lsl
or
shl
ror
loop
ror
mov
lods
aam
movs
push
inc
sub
enter
das
daa
push
adc
jns
aaa
inc
cmp
xchg
aam
xor
xor
mov
xchg
pop
push
sbb
and
or
mov
ins
mov
dec
cmp
rcl
push
cs
push
sbb
hlt
popf
inc
ja
retf
ret
and
ja
test
cmp
xchg
lock
xor
in
push
and
or
bound
add
push
inc
and
sbb
pusha
nop
retf
sbb
or
sbb
cs
sbb
and
pop
mov
scas
sbb
sbb
xor
aaa
xchg
sbb
mov
xor
popa
daa
cmp
dec
add
push
xor
push
jecxz
popf
pop
ret
push
fidivr
xor
fwait
aam
mov
fldcw
add
pop
xor
lods
inc
inc
mov
xor
pop
(bad)
adc
jge
retf
xchg
mov
ins
stc
or
stos
push
dec
mov
(bad)
bnd
add
dec
sti
(bad)
fisubr
js
lock
movs
add
xor
lods
aad
test
and
sub
push
dec
std
cwde
fwait
xor
and
test
push
bound
dec
js
test
sbb
xchg
adc
and
and
shl
jl
js
inc
(bad)
je
and
daa
cmp
sete
jg
mov
push
mov
mov
cmp
sbb
adc
cmp
mov
jle
inc
sub
xor
mov
add
mov
adc
xchg
mov
int3
mov
shr
rol
stos
pop
adc
repnz
adc
push
and
sar
sbb
jb
pop
sbb
jne
push
dec
xlat
push
rcl
rcl
in
pop
pop
sbb
fwait
dec
mov
das
jecxz
ins
xchg
mov
adc
leave
scas
jge
and
and
jbe
add
or
loop
and
mov
mov
mov
fidivr
out
je
push
or
jmp
push
jno
out
xchg
gs
or
jo
jg
je
push
cli
xchg
cmp
fadd
js
dec
xchg
mov
movs
or
fmul
push
data16
dec
in
fisttp
(bad)
or
jno
je
inc
dec
mov
pusha
and
and
in
dec
xchg
jp
mov
call
repz
leave
mov
movs
xchg
adc
(bad)
or
push
or
sub
add
fmul
xchg
sub
mov
xor
test
les
mov
add
jge
push
push
inc
sub
or
xor
lea
fistp
das
adc
cmp
mov
mov
xlat
and
or
xchg
sbb
or
push
mov
ret
and
jne
dec
aaa
je
add
sbb
inc
enter
dec
js
add
xor
add
lds
enter
ss
jne
pop
and
mov
sbb
pop
add
enter
(bad)
adc
xchg
ror
or
ins
and
dec
inc
aad
enter
jo
nop
lods
das
or
cwde
(bad)
add
inc
lods
dec
sbb
or
push
dec
mov
es
mov
adc
mov
xor
sbb
popa
in
ins
jne
call
ds
jmp
inc
and
sbb
cld
jne
test
daa
hlt
and
int3
xor
mov
js
in
adc
xchg
std
cmp
add
inc
cld
in
inc
jmp
and
adc
adc
xor
inc
or
inc
loopne
stc
jb
imul
jmp
push
lea
push
loop
add
or
add
cmp
mov
or
sbb
and
pop
(bad)
cmp
push
es
ins
test
leave
xchg
jne
xchg
adc
pop
xor
xchg
add
dec
push
pop
xor
dec
jns
rcr
loop
dec
add
call
or
fadd
jmp
fst
std
cmp
jle
mov
out
or
test
mov
pop
cmc
sub
add
sub
cmp
add
popa
lea
push
xor
pop
xor
and
iret
or
mov
inc
pop
in
mov
std
cmp
and
jne
sti
add
xor
push
adc
je
xor
sbb
push
add
pop
or
dec
scas
mov
xchg
or
cmp
loop
xor
dec
push
inc
js
cmp
arpl
dec
inc
pop
xchg
pushf
push
nop
dec
mov
or
pushf
nop
daa
add
mov
nop
or
les
ret
or
mov
mov
adc
xchg
adc
mov
jmp
shr
mov
call
(bad)
lds
add
fcom
pop
sub
jecxz
gs
mov
dec
loopne
adc
js
sbb
inc
xor
sub
push
dec
pop
test
sbb
ror
mov
sub
push
mov
pop
adc
inc
lods
inc
bound
pop
test
xchg
imul
pop
adc
xchg
mov
fld
pop
popa
or
dec
rcr
retf
inc
cmp
or
pushf
push
in
iret
add
adc
and
or
xchg
sbb
add
xchg
stos
mov
cwde
arpl
xor
adc
mov
push
mov
dec
dec
sub
icebp
leave
xor
sub
fsub
lds
movs
and
and
enter
mov
add
add
dec
test
xchg
add
dec
(bad)
adc
fadd
adc
adc
lock
cmp
and
cmove
sub
push
push
xchg
in
pop
imul
ror
jbe
in
in
mov
push
push
sbb
inc
fcmovu
or
jle
(bad)
in
push
jle
call
call
aaa
push
fisubr
popf
ja
add
pop
mov
shl
jo
loope
mov
and
sub
adc
ror
jo
clc
xchg
and
jmp
push
js
outs
ret
dec
xchg
push
mul
aam
iret
xor
lock
pop
push
pop
call
push
push
sbb
pop
jmp
mov
imul
rcr
lahf
call
cmp
js
rol
mov
aam
fsubr
pop
push
imul
data16
add
icebp
sub
fcom
mov
or
cmp
sbb
iret
dec
push
add
dec
pop
cmp
je
jae
clc
jge
sub
jno
sti
jge
or
arpl
(bad)
repnz
mov
xchg
dec
push
pushf
xor
dec
and
mov
into
and
ret
xchg
inc
iret
test
sbb
or
movs
je
dec
xor
and
mov
add
lahf
or
xchg
mov
adc
xchg
jmp
mov
pop
into
(bad)
(bad)
js
add
mov
(bad)
das
mov
mov
popa
push
push
and
ror
jbe
or
pop
shr
push
nop
sub
sbb
xchg
ins
push
dec
call
xchg
adc
jmp
ret
and
cld
stc
fimul
mov
push
in
fldcw
in
push
aaa
add
out
cs
jle
repz
das
sub
aam
data16
cmp
cmp
(bad)
inc
pop
push
xor
dec
mov
cmp
imul
pop
mov
nop
ins
inc
pop
jmp
add
jo
cmp
jmp
jmp
(bad)
jl
(bad)
or
daa
ret
dec
loopne
pop
shl
sbb
push
add
jno
jle
or
stc
add
and
dec
dec
jns
mov
or
jae
or
popa
mov
cdq
jno
or
pop
pop
cmps
or
mov
push
xor
je
mov
icebp
pop
add
adc
js
mov
adc
rol
mov
jb
pop
jnp
sbb
clc
sub
rcr
ret
add
nop
jl
pop
test
ss
mov
sub
or
cmp
push
loopne
and
sbb
jns
or
cmp
nop
retf
rcl
adc
pop
sub
call
add
sti
cdq
or
call
add
inc
add
add
mulps
test
dec
sub
and
push
sub
xor
scas
(bad)
xlat
dec
sbb
mov
icebp
push
add
mov
mov
das
push
or
xor
or
xchg
icebp
jecxz
xchg
lods
dec
or
sub
or
xor
popa
and
test
add
popa
popa
add
ins
pop
and
lods
cmp
mov
or
pusha
adc
daa
nop
enter
mov
dec
adc
xchg
int3
add
aam
jge
test
mov
fst
xor
sbb
add
sub
dec
dec
push
add
rol
bound
pop
aad
or
jle
(bad)
sbb
sbb
dec
cdq
mov
xchg
cmp
sbb
xlat
jne
adc
push
sub
bound
cli
add
movs
jae
adc
push
push
(bad)
icebp
mov
adc
pusha
and
push
sbb
pop
mov
ins
test
movs
mov
inc
mov
cmp
mov
and
dec
shr
or
dec
ds
repz
mov
push
outs
mov
mov
or
sub
add
pop
mov
gs
mov
xor
push
or
(bad)
sub
add
adc
pop
xor
not
xchg
dec
and
adc
xor
cmp
je
das
add
adc
lods
cmp
mov
sbb
enter
jo
xchg
adc
adc
jmp
pushf
adc
mov
jmp
inc
popa
and
add
inc
pop
dec
mov
lock
cwde
mov
out
add
enter
scas
call
pop
ror
push
sbb
lds
(bad)
jp
into
xchg
xchg
loopne
xchg
xor
jae
std
mov
test
cmc
cmp
outs
les
push
(bad)
pop
cmp
ds
mov
inc
add
mov
push
push
push
lods
inc
add
and
pop
lods
dec
loope
ins
cmc
mov
(bad)
in
mov
in
add
fbld
cmp
add
aam
clc
inc
enter
ror
xchg
xor
(bad)
mov
xlat
cli
pop
cwde
push
mov
sar
jne
jge
cmp
fsubr
stos
or
jae
cmc
clc
retf
cli
add
fcom
fdivr
ins
aam
jb
jp
mov
mov
inc
push
stos
in
in
pop
xor
test
in
shl
daa
int3
mov
data16
je
sti
sbb
lea
pop
jb
jbe
ret
fadd
jle
imul
jmp
and
paddusw
xchg
adc
or
in
jnp
mov
inc
and
lods
mov
scas
pop
hlt
cmc
retf
push
shr
lods
(bad)
pop
repnz
in
mov
mov
fld
test
sbb
bound
and
mov
xchg
ds
push
sub
dec
inc
(bad)
aam
test
aad
add
lea
xlat
jae
out
fucomp
mov
adc
icebp
std
dec
push
repz
mov
cmp
xchg
mov
fucomi
lea
scas
sub
mov
jp
sbb
cmps
mov
out
fimul
ffreep
lea
data16
test
add
movs
jo
xlat
xlat
sub
xchg
jns
push
dec
jo
iret
call
xor
push
or
or
ret
rcr
(bad)
cmp
shl
xchg
push
jmp
dec
or
push
(bad)
mov
push
xchg
add
add
es
sbb
or
add
cmp
add
mov
push
push
ret
clc
pop
sar
sar
movs
mov
mov
inc
push
xor
outs
push
push
mov
xchg
arpl
xchg
imul
imul
daa
push
or
dec
jne
or
and
shl
jb
push
cdq
adc
cmp
mov
daa
cmp
rcl
rdpmc
mov
add
add
and
add
fadd
or
push
dec
mov
adc
add
or
mov
je
pop
push
sbb
in
or
int3
mov
mov
test
or
xchg
mov
idiv
and
mov
dec
add
movs
or
ret
dec
jp
mov
mov
dec
mov
pop
mov
ret
adc
lods
scas
and
(bad)
mov
sub
in
jns
ror
aam
aad
sahf
xchg
call
pop
ficom
mov
or
aam
xor
invd
movs
icebp
xchg
and
mov
frstor
sub
push
cmp
arpl
loopne
add
pop
push
mov
add
je
sub
int
push
jnp
and
cmp
nop
cmp
daa
mov
mov
mov
int
jmp
test
mov
sbb
push
mov
add
sub
xchg
pop
movs
cmp
sti
jecxz
push
into
loope
push
jae
mov
adc
sbb
pop
and
mov
enter
test
test
mov
mov
sbb
rcl
lock
out
jne
rcl
jae
sahf
daa
inc
shl
mov
sbb
rol
xchg
(bad)
pop
mov
mov
push
les
call
mov
jecxz
xlat
pop
and
push
popw
pop
mov
int3
xchg
jne
and
jns
or
push
pop
mov
jecxz
mov
cwde
sub
sbb
or
jg
mov
pop
sbb
rol
imul
push
int3
test
or
movs
stc
push
pop
pop
push
enter
pop
push
and
mov
inc
push
in
adc
mov
push
pop
or
movs
fstp
or
adc
pop
mov
mov
shld
je
ret
xlat
xchg
jnp
lea
xchg
push
jne
push
mov
ret
xchg
or
jns
cmp
dec
rcl
add
movs
jns
jns
add
inc
add
test
sub
pcmpeqb
icebp
xchg
shr
(bad)
adc
ja
mov
ror
ja
add
fadd
mov
dec
fcomp
push
jmp
jns
dec
fsubr
loopne
test
xchg
or
mov
ror
inc
xor
test
call
daa
pop
push
jp
and
sbb
pop
int3
inc
dec
jmp
out
(bad)
jge
nop
mov
cmp
dec
rol
or
push
out
add
jmp
xchg
ror
add
push
fs
imul
xor
scas
jmp
daa
test
push
fisubr
(bad)
in
pop
add
mov
pop
shl
dec
push
adc
movs
push
or
sbb
cs
in
cdq
dec
jo
lds
call
je
pop
rol
popa
add
jb
imul
mov
dec
(bad)
pop
ret
pusha
jg
enter
in
call
vpshld
stos
aaa
call
cmp
mov
and
in
cmp
cli
pop
enter
lods
and
out
(bad)
mov
dec
or
pop
mov
pop
mov
mov
or
lock
daa
jp
hlt
mov
jo
inc
jecxz
rcl
sbb
mov
or
xor
inc
add
sbb
cmp
sub
and
lds
test
cld
repz
adc
scas
jb
xchg
pushf
in
add
add
adc
add
(bad)
lock
jne
adc
xor
push
ja
cli
adc
pop
push
and
xlat
(bad)
push
cmp
je
sbb
jne
inc
jmp
arpl
cmp
cmp
test
and
mov
and
dec
inc
adc
push
into
repnz
sub
out
push
add
test
pop
push
jmp
rcl
xor
dec
or
dec
mov
jl
fadd
test
dec
mov
push
mov
dec
(bad)
mov
repnz
cmp
push
sub
or
aam
cmp
push
call
retf
rol
dec
arpl
sub
popa
cli
pop
je
mov
pusha
or
sub
stos
iret
inc
mov
out
cmp
shr
or
out
cmp
fdivr
push
pop
add
imul
pop
mov
sbb
jmp
fwait
int
xchg
dec
adc
adc
shl
dec
dec
push
cdq
add
push
or
div
xor
mov
in
xor
mov
jg
movsx
call
in
scas
pop
inc
inc
aaa
jmp
das
stc
xchg
sub
xor
and
shl
add
mov
push
test
or
ds
or
jl
mov
in
pop
cwde
pop
pop
or
dec
ret
ret
adc
stos
loopne
(bad)
shl
mov
dec
lock
std
and
jno
dec
js
adc
hlt
cmps
push
add
or
ds
ror
cld
and
div
daa
das
and
mov
fdiv
jge
adc
cmp
fiadd
stos
ror
and
cmp
mov
adc
enter
sub
arpl
rol
cmp
fldlg2
adc
or
lock
mov
test
dec
adc
leave
fdiv
fdivr
mov
daa
out
jne
and
mov
adc
rcl
in
pop
aam
mov
adc
push
push
lock
xor
ins
sbb
cmp
mov
push
aas
cmp
push
push
mov
jo
add
out
cmp
imul
icebp
inc
mul
iret
mov
sbb
shl
in
xchg
sub
sbb
xchg
or
fsubr
ins
nop
jmp
mov
fdivr
repnz
lea
jle
clc
scas
dec
push
push
add
add
add
test
(bad)
outs
sub
icebp
adc
fidivr
mov
test
jnp
lods
cmp
sub
push
jmp
aad
add
mov
out
push
aam
js
xchg
cmps
sbb
imul
mov
cs
inc
jmp
out
mov
in
fdiv
jmp
push
xchg
out
jae
out
movs
pop
xchg
fcom
ret
or
adc
and
jmp
push
adc
inc
nop
mov
mov
mul
dec
dec
in
movs
mov
push
loopne
pusha
xchg
mov
mul
jne
in
sahf
push
dec
xchg
in
add
les
gs
icebp
and
adc
in
in
inc
sub
or
or
loopne
inc
nop
call
adc
loopne
or
ror
leave
and
or
rcl
call
pop
pop
call
es
fs
adc
in
cdq
fs
call
mov
sbb
inc
je
jnp
popa
pushf
add
adc
pop
adc
loope
add
dec
inc
ja
mov
push
or
lods
push
pop
lea
xchg
mov
shl
stc
pop
clc
movs
dec
push
scas
enter
xor
nop
mov
mov
enter
cmc
add
push
popa
ror
and
mov
mov
inc
inc
sbb
fsub
or
aam
fcom
sub
or
ret
dec
(bad)
test
mov
iret
ss
dec
cmp
fadd
rcl
and
jb
push
je
mov
inc
fadd
cmp
add
push
push
dec
xchg
inc
jnp
pavgw
add
retf
mov
fidivr
push
xor
test
fisubr
cmp
sbb
mov
adc
and
push
xor
fwait
cmp
sar
out
mov
ret
and
in
pop
dec
mov
es
add
sahf
nop
retf
inc
bound
add
aam
push
jo
adc
xor
fldenv
adc
int3
add
sbb
add
push
pop
sbb
sbb
cwde
mov
or
out
sbb
xor
push
loopne
pop
or
push
push
xchg
and
or
and
inc
push
(bad)
adc
push
rcl
sub
adc
(bad)
je
xchg
or
dec
aad
dec
(bad)
pop
fst
or
sbb
sub
bound
jmp
inc
and
push
push
rol
mov
fcom
shl
cdq
push
cdq
or
push
or
xchg
xchg
addr16
or
push
push
jecxz
mov
in
or
data16
imul
inc
call
sar
fsub
mov
in
or
jb
(bad)
stc
adc
outs
cmp
pop
in
adc
add
in
jecxz
imul
dec
aam
sub
jo
int3
aad
xor
les
pop
adc
repnz
ret
xchg
sub
rol
lods
pop
push
ds
data16
adc
and
xor
xchg
inc
push
std
adc
jmp
bound
nop
inc
sbb
xlat
in
inc
rol
sbb
mov
mov
xchg
sbb
adc
retf
cli
adc
mov
sub
nop
lds
out
fisubr
mov
popa
mov
cmp
pusha
and
mov
and
les
popa
add
push
sub
pop
les
adc
pop
shl
(bad)
push
push
and
adc
rcr
fcomp
sar
jae
lea
mov
retf
(bad)
jmp
cwde
pop
fld
mov
add
push
mov
movs
hlt
dec
inc
sbb
mov
push
cdq
push
add
and
or
pop
jle
sub
or
test
jns
movs
adc
xchg
rol
sub
aas
fdivrp
adc
add
shl
jns
or
ficomp
add
or
pop
ror
mov
jg
lea
enterw
imul
or
rol
xor
or
sub
ret
xor
push
enter
pop
cmp
mov
push
fadd
jno
xchg
adc
jbe
aam
leave
adc
sti
imul
jbe
inc
cmp
nop
cmp
test
inc
sub
mov
push
pop
dec
mov
cmc
fild
fxch
fld
lea
sbb
popf
adc
aam
mov
mov
data16
pop
leave
dec
(bad)
(bad)
adc
mul
rcl
test
ja
out
push
mov
ret
dec
leave
sbb
jl
add
cmp
jne
ja
int
in
sbb
sbb
push
add
jge
adc
ficomp
aaa
mov
movs
mov
jmp
sar
shl
pusha
int3
xor
xor
or
nop
cli
imul
cld
add
jbe
sbb
je
test
jmp
xor
cs
iret
or
cmp
dec
mov
pop
sti
push
adc
fnsave
push
mov
jecxz
or
fist
jg
pop
mov
cmp
je
in
(bad)
push
pop
div
push
nop
shl
or
push
inc
ja
push
sbb
xchg
adc
xchg
aad
enter
mov
iret
shl
push
inc
sub
outs
xor
ret
lea
inc
jb
xor
pop
and
cmp
adc
dec
mov
adc
xor
jo
mov
and
je
push
or
xchg
mov
add
push
push
cs
adc
movs
pusha
fisubr
inc
call
repz
push
pop
(bad)
adc
icebp
sub
push
outs
imul
or
stos
adc
jl
mov
sbb
add
div
lea
inc
int
test
retf
lods
or
call
aaa
inc
jb
push
xchg
dec
push
xchg
retf
sti
test
lds
in
and
popa
cld
xor
adc
arpl
fisubr
push
ds
adc
cld
mov
aas
jmp
mov
rol
push
mov
add
sbb
cld
sbb
lea
sbb
jb
mov
(bad)
scas
mov
xchg
jp
push
leave
jle
push
mov
mov
add
test
or
iret
je
(bad)
add
popa
icebp
cmp
js
cmp
jbe
loop
ins
inc
adc
pop
test
cmp
adc
fcom
add
xor
inc
mov
mov
out
data16
inc
inc
or
in
add
ins
fstp
inc
adc
xor
(bad)
add
je
data16
pop
sub
(bad)
jmp
out
xchg
add
jns
push
mov
push
add
inc
jp
fsub
mov
cmp
mov
and
push
daa
and
sub
push
jmp
jmp
push
xchg
mov
push
inc
sub
pop
movs
dec
shl
inc
es
pop
std
xor
ja
mov
add
loopne
dec
js
push
gs
pop
mov
sbb
fsub
push
xor
aaa
or
leave
dec
add
or
or
inc
sub
repnz
sub
mov
add
jge
mov
daa
loope
std
xor
or
mov
and
shr
sbb
in
mov
je
fisttp
add
inc
add
mov
inc
popa
retf
adc
push
push
mov
xor
sub
jmp
cli
mov
and
push
les
jmp
imul
sub
mov
pop
add
push
inc
mov
ins
sar
clc
jb
and
ror
cmp
and
data16
sub
(bad)
out
jmp
mov
or
add
imul
xor
jmp
mov
sbb
lods
imul
dec
add
jl
adc
dec
push
mov
movs
cmp
nop
call
inc
mov
push
rol
retf
shl
or
aam
(bad)
inc
jp
mov
cwde
lea
pusha
inc
aaa
aad
setge
jno
cdq
or
inc
add
adc
sbb
test
sbb
push
inc
aam
dec
loope
mov
xor
fs
enter
sbb
aam
ins
test
adc
out
je
or
or
(bad)
and
adc
sbb
ds
sbb
gs
mov
add
das
fild
dec
lds
call
imul
les
dec
cs
mov
pavgb
or
or
sub
sub
dec
ins
xchg
or
ret
xor
pop
cdq
ret
ror
push
or
loopne
and
sub
ins
and
int
nop
sbb
mov
push
xchg
retf
jne
cmp
sbb
or
addr16
ss
prefetch
and
add
scas
loope
or
repz
ror
(bad)
or
(bad)
stos
xor
pop
or
add
xchg
adc
pop
ins
in
loopne
add
add
push
in
ds
add
adc
in
call
cmp
sbb
adc
scas
test
in
inc
ds
add
adc
cmp
xor
in
or
nop
sbb
push
add
rol
push
pop
pop
or
stos
pop
movs
fs
out
push
pop
(bad)
(bad)
and
cmp
cwde
xchg
sbb
aad
add
pop
lock
adc
mov
adc
enter
or
repz
dec
loopne
xor
repz
fsub
in
mov
sub
xor
mov
xchg
push
cmp
rcl
adc
sbb
fstp
rol
cmp
push
ficomp
xchg
pop
sub
lock
in
pop
jmp
sub
lea
inc
push
mov
pop
pop
jge
pusha
xor
jno
lock
push
inc
sbb
in
or
mov
add
(bad)
ret
inc
or
or
popa
push
jmp
adc
mov
cs
sbb
push
(bad)
push
cld
outs
leave
out
xor
mov
jle
movs
fisttp
rol
loop
add
dec
cmp
jl
cs
mov
shr
call
mov
dec
sti
pop
push
ret
call
(bad)
inc
mov
jmp
pop
xchg
popa
lock
addr16
jo
loopne
cmp
lods
jne
or
dec
cmp
mov
sub
inc
sbb
dec
and
or
data16
push
fistp
sub
aaa
mov
push
push
sub
(bad)
gs
mov
jne
push
and
(bad)
push
outs
and
add
mov
stos
in
add
cmp
rol
push
fstp
rcl
mov
ins
adc
or
into
dec
xchg
or
inc
cwde
jo
ins
adc
sbb
push
cld
and
xchg
ds
push
icebp
and
jmp
mov
jne
dec
sbb
xchg
adc
mov
sar
mov
xchg
arpl
add
fdiv
fs
sub
pop
and
outs
inc
fisubr
and
jg
fs
adc
push
mov
adc
test
sbb
or
push
loopne
mov
sub
push
cdq
test
enter
sub
mov
lock
bound
repnz
jo
fwait
icebp
mov
icebp
mov
adc
sub
or
or
sbb
lea
mov
jge
shr
cdq
push
fisub
inc
(bad)
out
push
or
inc
clc
push
rol
je
adc
cdq
and
and
and
jg
mov
fdivr
aaa
je
add
adc
mov
mov
enter
in
movs
push
push
pop
pop
xor
xchg
adc
scas
pop
or
cmp
mov
or
clc
jle
xor
sub
or
adc
inc
outs
sub
dec
push
retf
xchg
js
and
cmp
push
jmp
adc
mov
lods
add
call
mov
dec
sbb
loopne
cmp
popf
ucomiss
cwde
sbb
nop
dec
dec
and
inc
or
movs
dec
repnz
sbb
jb
sbb
dec
pop
test
test
mov
sbb
pop
jb
pop
movs
and
inc
jb
adc
fs
daa
pop
and
nop
or
dec
repnz
and
add
popf
in
loope
dec
sub
and
sub
xchg
cmp
sub
jnp
inc
jb
pop
adc
fs
push
and
jnp
xchg
or
cmps
xor
xchg
dec
xor
xor
leave
ss
jp
cmp
cmp
cmp
xlat
or
dec
push
addr16
inc
cmp
outs
cmps
add
push
inc
lock
and
mov
or
inc
inc
jbe
dec
repnz
jns
inc
inc
cmp
xchg
cmp
inc
clc
js
inc
jb
pop
inc
push
dec
and
mov
and
enter
leave
add
enter
js
dec
add
inc
add
pop
jb
push
cmp
sbb
adc
add
adc
jb
pop
and
daa
pop
and
pop
les
pop
pop
add
dec
mov
pop
add
pop
cmp
pusha
cmp
ja
mov
jp
or
push
push
fs
dec
push
cmp
gs
inc
data16
inc
addr16
cmp
or
push
and
imul
test
ins
xor
xchg
sub
jbe
add
jo
enter
mov
dec
xor
nop
je
out
add
leave
xchg
jbe
inc
ja
or
mov
repnz
jne
jb
dec
jnp
inc
es
jge
je
pop
and
or
cdq
sub
jae
push
mov
add
daa
js
mov
inc
push
jg
lahf
test
xor
sbb
in
adc
ins
inc
test
call
inc
jg
add
cmp
rcr
je
js
rcr
inc
and
dec
ror
and
in
pop
push
sbb
jle
or
and
and
ror
test
or
inc
push
cmp
ins
and
cld
pop
jo
or
mov
pop
xor
je
loopne
loopne
aaa
sbb
inc
adc
cmp
cmp
push
dec
gs
or
or
into
lods
out
mov
das
xor
mov
sbb
push
jne
dec
fwait
ins
jnp
xchg
mov
movs
movs
pop
loopne
push
loope
loop
mov
ins
ss
in
in
out
ss
int
out
call
shr
(bad)
ja
fldcw
in
ret
out
or
pushf
movs
mov
icebp
outs
jnp
jmp
push
lahf
pop
xor
cmp
jne
push
shr
push
push
sbb
fadd
and
int3
shr
pusha
int3
jle
adc
dec
cmps
push
push
push
add
cs
lea
ret
jne
push
enter
add
es
push
push
or
imul
sub
repz
or
(bad)
lods
(bad)
xor
mov
or
in
pop
cmp
adc
push
sbb
add
inc
adc
mov
(bad)
sub
add
push
sbb
inc
test
test
or
sbb
push
arpl
adc
jmp
test
popa
xchg
inc
adc
inc
mov
adc
push
bound
or
std
mov
fcmovnbe
icebp
iret
add
test
add
leave
test
std
rcr
mov
push
nop
sbb
enter
inc
mov
int3
sar
rol
adc
adc
cwde
ins
movlps
add
adc
mov
dec
inc
add
jg
push
jne
mov
jmp
adc
jne
push
jmp
sub
rol
push
pop
hlt
push
mov
(bad)
pop
pop
sub
push
lea
xchg
cmp
in
les
pusha
pop
or
mov
add
or
shr
mov
cmps
lock
test
movs
pop
jmp
cmp
push
xchg
or
ficomp
mov
dec
movs
adc
movzx
scas
cmp
jae
xlat
bound
in
push
rcl
dec
jne
xor
cmc
sub
push
sbb
add
pop
outs
add
push
or
ds
lock
cmp
sbb
jmp
cmp
fcomp
add
cmp
dec
je
cwde
dec
dec
ror
or
cwde
push
aaa
pop
xchg
and
pop
pop
out
jle
sub
or
or
add
shr
in
pop
add
push
sbb
fs
inc
mov
pop
pusha
pop
pop
sahf
sub
data16
shl
rol
inc
push
cmps
jmp
test
add
mov
add
add
add
jbe
mov
push
test
pop
call
mov
cmp
pusha
fadd
push
sbb
push
std
out
jbe
fsub
cmp
cmp
lahf
add
push
rol
sub
xor
adc
push
imul
clc
add
rcr
add
cmp
mov
neg
sbb
and
add
test
cmp
mov
repz
test
lods
inc
or
dec
mov
pop
inc
test
sbb
inc
fs
or
push
arpl
jp
adc
pop
push
mov
ret
loopne
or
push
mov
ror
adc
inc
mov
jbe
fisubr
inc
lea
sbb
fnstcw
mov
add
mov
or
pop
mov
repz
mov
lea
inc
push
hlt
(bad)
or
lea
adc
lea
mov
mov
fidiv
out
fisttp
mov
js
mov
lods
lea
dec
cld
mov
add
cmp
pushf
add
pusha
mov
mov
or
pop
mov
dec
hlt
push
arpl
aaa
mov
mov
jg
mov
ja
pop
sub
jmp
and
mov
jb
cli
pop
jne
sub
loopne
jmp
add
je
cmp
cmp
pusha
sbb
cmp
pop
or
and
out
push
imul
xor
sbb
xchg
xchg
xor
inc
sbb
sbb
and
mov
push
outs
add
ret
xor
and
cwde
(bad)
push
xlat
or
hlt
sbb
fcmove
retf
push
xor
xlat
cmp
pushf
pusha
dec
popf
dec
xor
add
push
pop
in
fimul
or
add
movs
rcr
in
sub
mov
adc
cmp
fidivr
add
sub
jbe
sub
or
and
inc
cmp
pop
pop
loopne
jmp
xchg
cmp
je
sub
div
outs
mov
cmp
push
push
push
(bad)
or
fisttp
jmp
cmc
or
add
or
pop
leave
inc
enter
mov
aam
std
jo
or
shl
and
les
das
jbe
mov
and
adc
(bad)
push
fisttp
add
loopne
rol
ret
push
push
xor
fcomp
add
or
call
in
sub
call
and
or
push
add
jne
sub
xor
mov
cmp
cs
xchg
sbb
or
add
loopne
push
pop
mov
ss
data16
(bad)
push
movs
adc
xchg
fst
push
or
xor
test
das
mov
loopne
and
pushf
jbe
sub
inc
fcom
adc
sbb
in
jmp
sbb
imul
dec
jno
sbb
add
xchg
or
sub
or
imul
or
or
mov
sti
jo
add
push
push
dec
movs
mov
clc
rcl
je
pop
ret
ss
mul
lea
inc
sbb
dec
inc
call
cmp
fcomp
rcr
xchg
sbb
retf
repz
jge
test
xchg
dec
mov
and
push
mov
pop
push
pop
sbb
pop
ret
aam
jl
sub
pop
xor
std
sahf
test
and
dec
push
lea
adc
fwait
push
and
ins
mov
sbb
xor
jle
stc
adc
add
xchg
or
movs
and
test
mov
inc
aaa
add
lock
out
in
fbld
mov
cmp
pop
ja
pop
cdq
ror
pop
jb
mov
add
add
adc
push
lock
loope
xchg
sub
xor
aad
pop
or
push
xchg
push
or
mov
and
js
jne
and
sub
xchg
add
ror
or
int3
je
mov
frstor
ret
lock
inc
xchg
add
or
xor
dec
cmp
cdq
jecxz
dec
dec
add
pop
add
out
scas
aaa
cmps
dec
push
mov
cmps
pop
outs
pop
ins
dec
or
lock
sbb
call
call
rcr
jbe
xchg
pushw
iret
leave
sahf
imul
push
iret
lock
and
jp
adc
pop
js
lock
cmps
pop
add
mov
in
daa
mov
and
cwde
sub
adc
and
je
loopne
adc
imul
xchg
in
sbb
adc
add
cmp
je
adc
jno
sahf
popa
js
jle
je
add
ja
ficomp
ins
mov
add
fadd
add
inc
push
xchg
adc
push
jnp
jge
leave
mov
fld
jne
test
add
add
xchg
jbe
imul
xor
movs
mov
add
loopne
dec
or
in
in
inc
and
jmp
addr16
adc
and
add
mov
adc
sbb
or
scas
fsubr
shufps
xor
or
sub
mov
adc
jb
push
aaa
push
dec
(bad)
sbb
add
and
mov
arpl
cwde
or
mov
inc
movs
loopne
mov
cmps
mov
fucom
popf
sbb
jmp
pop
mov
and
cmp
cmp
enter
jbe
dec
dec
jbe
rcl
and
jbe
add
inc
test
aas
daa
cmp
movs
mov
or
mov
fisttp
jle
mov
adc
in
loope
adc
fsubr
adc
test
(bad)
cmp
push
and
mov
xor
adc
and
fiadd
jae
std
inc
and
or
shr
pop
div
pusha
mov
or
call
add
pop
add
add
call
retf
int3
adc
in
sbb
pushf
pop
in
xor
cmps
or
mov
jo
pushf
icebp
mov
cmp
push
xor
inc
inc
sub
mov
ds
les
sbb
xchg
dec
fadd
push
out
call
add
js
pop
add
pop
and
mov
adc
push
dec
scas
add
(bad)
out
add
fsub
pop
test
inc
pop
push
setp
jbe
adc
pop
or
or
shr
jmp
in
add
jae
imul
clc
xchg
or
push
mov
jmp
test
or
mov
(bad)
jbe
repnz
imul
xor
pushf
retf
imul
dec
shl
fdivr
push
clc
fadd
or
pop
xor
sbb
cmp
jbe
je
cmp
xor
cmp
and
cmc
das
hlt
push
aam
mov
adc
inc
outs
cmp
cmp
adc
les
inc
aad
jne
mov
sbb
mov
dec
and
stc
movs
sahf
pop
and
lods
inc
push
mov
fdiv
mov
mov
cmp
loopne
jg
test
cwde
mov
add
add
jmp
fisttp
shr
xchg
sbb
mov
mov
aas
enter
dec
fmul
outs
leave
int
movs
mov
adc
pop
add
adc
jmp
ins
mov
jmp
scas
in
cs
in
in
test
or
and
cs
or
add
dec
retf
and
ds
pop
int
imul
stos
cmps
or
test
add
pop
add
inc
cmp
rcl
adc
pop
inc
push
pushf
nop
inc
retf
leave
add
and
enter
and
sbb
stc
and
push
push
mul
imul
mov
loop
loope
(bad)
sbb
rcpps
adc
mov
xchg
inc
fiadd
mov
rol
or
adc
mov
add
push
nop
sbb
(bad)
gs
enter
mov
data16
(bad)
jno
lods
ins
and
lods
jne
add
jbe
inc
out
ins
sbb
and
xor
jns
enter
adc
loopne
mov
or
mov
cs
jle
dec
inc
in
aam
mov
into
cmp
in
jmp
jl
jb
adc
in
mov
push
movs
inc
pop
and
and
not
sbb
shr
add
or
in
fneni(8087
jbe
xchg
mov
or
rol
jbe
sbb
pop
pop
lea
mov
mov
xor
add
sbb
and
adc
or
mov
adc
retf
push
mov
in
or
mov
adc
aaa
push
sbb
xchg
dec
xor
daa
adc
cmps
ja
xchg
adc
paddsw
pop
inc
and
test
call
cmc
jbe
aaa
test
jne
inc
aam
jl
lock
push
and
rol
iret
lds
rol
ss
and
lock
rol
sti
es
push
or
call
outs
adc
sbb
pop
or
pop
lea
rep
xchg
jno
loope
xor
fsubr
push
or
enter
ret
div
out
adc
leave
jg
inc
leave
cld
jge
adc
movs
pop
jmp
ss
cmp
sub
cmp
or
sbb
xor
sbb
pop
mov
mov
fninit
add
fs
sub
scas
push
inc
sbb
aad
cmp
and
mov
fdivr
sub
loope
stc
dec
hlt
jg
aaa
lea
jmp
sub
sar
jmp
inc
sbb
inc
out
add
andnps
clc
pushf
add
push
bound
push
lods
gs
add
jg
push
mov
cmp
jne
push
inc
stos
inc
xchg
cmp
fild
cmp
je
push
inc
or
mov
inc
or
mov
lock
mov
jmp
and
inc
mov
rcl
jo
xchg
les
out
data16
inc
call
mov
dec
inc
add
inc
scas
add
or
fs
or
(bad)
push
sar
jle
sbb
jbe
lea
jbe
fs
loope
jp
js
xchg
enter
cld
lahf
jb
xchg
sbb
test
adc
push
hlt
and
hlt
ficom
test
jmp
ins
dec
sbb
scas
pop
(bad)
in
inc
mov
ss
das
add
jle
xchg
jne
push
and
rcr
rcl
scas
sbb
cmova
fstp
lea
sar
je
scas
pop
push
not
outs
push
jne
push
push
mov
dec
loope
gs
jne
add
sbb
cs
jmp
enter
sbb
jns
mov
clc
dec
push
pop
in
or
dec
(bad)
cmp
dec
(bad)
jnp
div
test
pop
dec
or
add
sub
add
(bad)
xchg
test
and
add
sub
push
add
mov
sub
out
fidivr
jnp
jns
dec
aas
sbb
push
sub
push
movs
inc
(bad)
xchg
nop
add
mov
js
shl
loop
inc
xor
loope
push
xchg
or
add
sti
inc
mov
push
mov
add
add
pop
add
and
test
sub
add
push
bound
jae
cmp
xchg
push
mov
or
jge
inc
dec
fsubr
int3
in
test
movs
add
add
lds
test
cmc
clc
pop
bts
cs
jnp
pop
call
push
or
test
add
in
add
or
add
es
and
mov
xchg
lods
repz
and
dec
fadd
jno
jnp
or
mov
ret
cmp
sub
push
sbb
fs
xor
push
pop
cmp
and
test
lds
or
call
loope
fs
pop
pop
xor
sbb
test
test
pop
pop
xchg
push
mov
push
aas
cwde
ins
nop
test
mov
(bad)
cmps
lea
jne
rol
fisttp
push
push
cmp
add
in
dec
sub
push
add
jg
cs
movzx
and
je
or
mov
fiadd
ss
push
shl
add
dec
adc
push
inc
xchg
stos
mov
lea
loopne
enter
jns
push
lock
push
lds
ins
adc
ja
pop
test
jmp
and
call
sbb
bound
push
and
retf
mov
cmps
and
icebp
or
sub
in
xchg
rol
inc
lods
jae
mov
mov
add
or
xchg
mov
test
add
int
jge
ror
ja
pusha
ret
sub
dec
retf
or
jg
mov
fidivr
dec
aaa
sahf
or
inc
(bad)
fsub
rcl
xchg
loopne
inc
in
xor
call
sub
jnp
loopne
push
or
fmul
fadd
add
inc
and
sub
mov
fnstsw
mov
xor
enter
mov
movs
gs
sahf
(bad)
mov
jl
mov
add
jge
dec
mov
sbb
jb
pop
jg
inc
jl
adc
shr
lea
call
push
fadd
push
mov
lea
adc
bound
pop
push
pop
cwde
sbb
and
cmp
add
mov
mov
or
outs
mov
imul
jg
fs
out
push
iret
push
shr
and
pop
test
or
push
inc
call
dec
and
cmps
ret
shl
clc
ins
in
add
loopne
push
xor
loop
or
adc
fs
lods
ins
or
add
arpl
or
and
and
push
adc
sbb
scas
cmp
jne
adc
add
mov
cmp
sbb
add
clc
xchg
cmp
jmp
outs
jl
inc
and
lods
fild
loope
pushf
stos
dec
lahf
and
mov
dec
dec
test
jl
rcl
movs
cmp
jg
and
push
sub
cdq
je
pop
movs
fucom
leave
cmp
add
inc
rol
jge
fdivr
lea
sbb
inc
(bad)
rcl
daa
sti
or
push
mov
jge
inc
pop
dec
xchg
(bad)
fstp
add
inc
bound
cmp
nop
jle
mov
sub
outs
pop
dec
fdivr
cmp
imul
inc
sub
inc
xor
xor
mov
fs
push
push
push
push
jo
std
mov
aad
sub
sti
push
pop
mov
xchg
sbb
pop
in
sbb
xchg
add
adc
add
xchg
sbb
dec
and
test
bound
jle
add
sub
popf
and
mov
push
jmp
imul
fs
pop
jne
push
add
inc
pop
cmp
ss
pop
dec
push
add
push
retf
nop
xchg
mov
mov
cld
daa
and
pop
jo
jge
push
xor
adc
cmp
jns
jp
ja
bound
dec
sub
pop
stc
repnz
add
jmp
add
js
ja
cmc
jbe
aad
jge
xor
xor
data16
xlat
fidivr
pop
outs
sbb
es
push
dec
dec
xor
jo
cs
pop
add
inc
shl
pop
daa
cmp
ins
inc
xor
ror
fcmovbe
xor
jo
cwde
dec
mov
sbb
push
jns
stc
sub
sar
cdq
xor
and
gs
xor
and
rcr
jno
(bad)
push
sub
or
mov
adc
pop
in
adc
dec
aaa
add
in
mov
inc
(bad)
and
lock
sbb
jge
mov
pop
push
stos
mov
push
xor
xchg
push
pop
push
fs
jns
or
jb
sbb
mov
jecxz
add
xor
rcr
clc
mov
fsubr
and
push
push
outs
pushf
movs
inc
dec
mov
ss
or
aaa
ins
mov
(bad)
cmp
lock
push
jge
sub
pop
clc
inc
cmp
stos
inc
clc
fstp
pop
sub
xchg
push
cmp
and
xchg
push
sbb
and
sub
xchg
std
mov
movs
jo
inc
scas
in
push
ins
or
xor
adc
sub
mov
cmp
loopne
push
adc
mov
xchg
push
or
and
rcl
xchg
jmp
test
sbb
sbb
push
loopne
pop
sar
inc
add
xchg
mov
mov
ss
xchg
or
and
cmps
scas
popa
popa
(bad)
(bad)
lea
cmc
pop
test
aad
popa
xlat
cmp
adc
pop
and
pop
dec
stos
jae
xchg
dec
sub
test
sbb
pop
mov
in
mov
sub
in
pop
adc
jmp
push
test
dec
dec
and
lds
push
pop
inc
clc
shl
sub
jmp
xchg
push
ret
or
sub
push
pop
mov
adc
xlat
retf
sub
imul
inc
adc
inc
adc
or
fistp
pop
mov
or
add
xor
add
retf
adc
mov
or
sbb
push
push
out
inc
or
push
push
pop
or
test
add
mov
movs
ret
adc
call
das
loop
fst
pop
leave
inc
nop
mov
xchg
ins
and
sbb
jge
mov
or
jb
mov
loopne
mov
sbb
pop
test
jmp
or
clc
mov
push
popf
movs
pusha
adc
ja
push
in
push
cmc
push
jmp
adc
in
jg
and
nop
add
push
out
dec
add
fnstcw
movs
hlt
sub
add
je
stos
sbb
dec
sahf
dec
mov
adc
add
mov
adc
or
adc
ret
popa
add
add
adc
pusha
and
pop
mov
cmp
js
shr
add
mov
movs
or
aad
mov
neg
iret
and
popf
cld
aaa
je
stos
loop
orps
jo
push
xchg
add
dec
jmp
xchg
push
xchg
xchg
and
(bad)
and
sub
adc
lods
xor
fdiv
push
outs
sub
or
pop
pop
das
aaa
pop
in
pop
xor
aaa
cmp
cli
arpl
and
je
mov
dec
jo
add
ds
inc
jge
lock
mov
arpl
add
(bad)
jecxz
ret
out
cmp
je
pusha
aam
add
pop
mov
or
in
xor
adc
add
inc
inc
xchg
scas
cmp
je
(bad)
cmp
lds
xor
stc
add
xor
fdiv
shr
jo
jle
or
dec
xor
arpl
add
or
inc
or
xchg
push
cli
pusha
dec
add
lea
and
movs
pushf
adc
not
fmul
add
imul
dec
add
dec
inc
rcl
shr
icebp
cmc
jmp
jmp
sub
bound
test
push
aam
push
dec
pop
fcmovnb
xchg
and
das
cmp
inc
add
sti
pop
or
repnz
inc
adc
mov
sar
daa
adc
std
push
in
out
or
js
pusha
or
inc
jle
jae
push
(bad)
fcomp
inc
jne
sbb
mov
int3
(bad)
or
pop
inc
cli
fcom
dec
pop
push
xchg
jmp
push
push
cmp
mov
mov
cmps
js
imul
scas
pusha
repnz
or
jecxz
xchg
pop
xor
loopne
sbb
dec
fsub
jne
sbb
imul
adc
pop
inc
loopne
loopne
cs
push
push
push
popa
(bad)
je
mov
js
leave
jb
stos
sbb
inc
jge
cli
sbb
shr
xchg
mov
fdiv
mov
loopne
sub
pop
mov
push
in
jg
not
test
cmp
jmp
adc
outs
jg
cmp
jne
cmp
dec
loopne
mov
mov
shl
or
cmp
bound
inc
cmp
lock
xchg
int
push
dec
mov
ret
inc
push
push
adc
or
cs
push
(bad)
(bad)
jb
add
inc
or
enter
inc
repnz
fadd
js
int
push
test
cmc
addr16
pop
fisttp
mov
fcom
pop
sbb
movs
jg
sub
or
adc
jmp
jl
ror
int3
aaa
jmp
loopne
pusha
cs
cmp
add
xchg
adc
bound
sti
cmps
lods
xor
dec
or
loopne
sbb
icebp
cmp
xor
pop
or
xor
repnz
xor
mov
loop
sbb
push
adc
repnz
xor
dec
cwde
jb
xor
mov
mov
push
imul
sbb
xor
or
in
lods
inc
sbb
and
bound
mov
mov
pop
wrmsr
bound
sub
fcomp
xchg
cli
xchg
jo
jge
aaa
test
std
ds
cmp
adc
xchg
sar
mov
sbb
jmp
sub
test
ret
(bad)
mov
add
rcr
pop
lods
test
bound
(bad)
cmp
push
push
push
js
push
(bad)
mov
test
pop
adc
xchg
icebp
pop
pop
push
sahf
cmp
cmp
adc
fs
adc
xchg
mov
mov
popf
and
pop
mov
jbe
dec
push
add
sbb
adc
retf
push
push
mov
fnsave
jge
add
jl
cmp
add
add
jmp
lods
cdq
add
aam
mov
cmp
cmp
or
inc
js
mov
add
sub
ret
inc
and
mov
mov
push
jnp
pop
mov
jb
cmp
ret
outs
je
mov
hlt
das
js
and
add
push
push
mov
push
inc
and
and
mov
ss
sbb
mov
jmp
ret
or
pushf
in
cmp
sti
and
(bad)
into
cmp
popa
fisttp
cmp
push
or
daa
imul
and
add
pop
mov
push
call
push
dec
pop
dec
imul
sbb
dec
pop
push
repnz
push
adc
in
push
push
mov
push
add
xchg
sub
pop
in
cdq
mov
mov
add
fs
setne
mov
ss
sub
or
pusha
call
arpl
add
adc
mov
or
iret
push
push
adc
mov
push
mov
stos
inc
arpl
outs
sub
sub
sbb
inc
inc
jae
add
call
sub
pop
js
je
push
mov
mov
mov
daa
or
pop
cmp
cwde
fnstsw
sub
jg
pop
jmp
nop
jns
and
dec
cld
data16
shr
cmp
mov
push
sbb
std
or
test
gs
xor
or
push
test
lds
gs
jno
(bad)
pop
inc
pop
mov
data16
cwde
push
nop
lock
in
push
push
out
std
pop
adc
mov
sahf
ret
sub
push
jae
mov
cmp
mov
daa
mov
inc
ror
daa
(bad)
push
sbb
push
leave
out
adc
test
jle
push
sbb
push
pop
je
push
sbb
cwde
add
fistp
cmps
mov
xchg
and
jmp
xchg
xchg
pop
xchg
scas
add
add
lahf
nop
daa
jns
imul
or
mov
sbb
adc
aad
ins
push
in
or
rcr
pop
js
and
js
sbb
je
lea
xor
jl
xchg
jmp
sub
scas
les
cmp
push
cmp
dec
jne
xlat
push
jmp
push
jecxz
or
je
push
and
push
push
cmp
pop
sbb
test
adc
xchg
mov
jge
dec
stc
xor
rcr
xchg
or
jb
dec
ror
add
movs
or
das
sub
cwde
jl
fidivr
jne
sar
xchg
out
mov
mov
mov
rol
xchg
pop
or
scas
fcmovnb
push
nop
pushf
and
sbb
gs
cmp
pusha
pop
mov
ja
or
sbb
addr16
push
or
xchg
add
mov
arpl
inc
jo
sub
(bad)
cwde
test
and
add
push
mov
lock
inc
shl
dec
popf
aam
sbb
sub
sub
push
movs
push
mov
sbb
aam
enter
cmp
jne
push
ror
imul
inc
fs
jne
ret
sub
(bad)
xor
add
loopne
shl
in
ss
shl
call
mov
push
rcl
ret
xchg
ret
xchg
inc
fcmovnbe
cmp
dec
call
cmp
enter
test
cmp
add
mov
cld
popa
and
inc
add
and
ja
pop
push
js
or
lea
adc
cmp
enter
xchg
push
xor
or
daa
iret
fmul
inc
mov
shr
add
jge
mov
mov
xor
mov
jo
ror
inc
cmp
daa
pop
sar
cmp
je
sub
sar
ins
(bad)
mov
and
cmp
jae
inc
sbb
mov
inc
inc
inc
call
jne
cmp
adc
(bad)
pop
enter
rcr
jl
clc
sub
push
jae
mov
ret
adc
icebp
jge
int3
xchg
and
loopne
bound
(bad)
les
cmp
cdq
push
outs
xchg
mov
out
push
mov
push
dec
and
and
add
mov
jo
push
outs
add
lock
mov
movs
mov
jmp
test
sbb
jg
nop
mov
add
jns
fisttp
das
add
sub
ret
xor
pop
inc
aam
xor
loope
out
stc
les
and
push
aas
or
or
outs
cdq
mov
or
mov
adc
mov
mov
jp
(bad)
dec
xor
ret
enter
ror
in
jo
fsubr
pop
push
xor
mov
xchg
popa
dec
sbb
sbb
fisubr
dec
add
cmp
and
leave
push
sbb
push
add
add
sbb
or
sar
je
int
stos
mov
push
or
add
mov
xor
cmp
or
ins
pop
test
(bad)
xlat
cmp
test
enter
or
push
into
add
cmc
dec
add
lods
mov
std
std
ins
and
cs
pop
es
fstp
dec
jmp
sub
loop
cmp
jno
cmp
push
and
inc
adc
sbb
and
sbb
leave
or
div
push
popa
lea
xor
ret
push
xchg
test
cmps
add
jmp
push
jne
enter
ror
cmp
es
and
stos
loopne
push
jns
test
fistp
mov
popf
je
push
jne
mov
int
ret
cmp
data16
ret
push
cmp
and
je
add
enter
mov
jnp
je
inc
dec
inc
sbb
and
add
mov
mov
ss
add
rcr
fucomi
(bad)
fst
call
sysret
jbe
clc
pop
mov
cmp
pop
jbe
jo
push
xchg
push
(bad)
sbb
nop
movs
mov
xor
inc
sub
mov
dec
or
je
add
push
push
jmp
clc
xchg
std
sub
pushf
jmp
sub
sbb
pop
push
push
fist
or
ds
sub
sbb
adc
push
hlt
fcom
and
adc
aad
int3
xchg
or
aam
sar
jmp
cmp
or
or
push
xchg
jnp
test
jg
push
jmp
push
pushf
aas
sub
xor
pop
out
add
pop
add
int3
jg
sahf
or
mov
xchg
scas
sar
or
or
loopne
dec
test
test
inc
ror
or
jno
loopne
push
cmp
ins
aam
xor
inc
in
adc
in
inc
sub
inc
and
jne
(bad)
cmp
xchg
sysret
jae
inc
inc
lahf
rcr
xor
repnz
ja
add
push
cmp
jbe
add
and
push
dec
xchg
add
mov
add
loop
inc
cld
dec
mov
mov
es
ss
and
test
jne
sbb
push
js
rol
int3
pop
add
(bad)
jecxz
cmp
arpl
push
je
stos
leave
lea
clc
push
pop
out
outs
call
adc
(bad)
xlat
fiadd
jge
mov
popf
adc
jne
ret
dec
adc
sbb
stc
sub
jle
imul
dec
xchg
icebp
pop
je
jp
jmp
shld
ins
mov
loop
xchg
xor
add
or
je
adc
or
addr16
jmp
(bad)
fimul
mov
movs
jmp
mov
js
loopne
fcomp
or
mov
pop
int
cmp
xchg
imul
xor
and
push
jecxz
dec
fcomp
or
cmps
in
cs
in
adc
xchg
fdiv
inc
mov
add
pop
pop
retf
push
fwait
loopne
inc
mov
push
(bad)
sbb
add
pop
int3
loop
pop
pop
jg
adc
jne
mov
call
jno
js
jmp
in
and
inc
and
cmp
push
jnp
mov
or
add
das
cmp
pushf
cmp
or
pop
cmp
xor
mov
inc
push
push
enter
shl
adc
or
mov
adc
or
aaa
repnz
mov
sbb
call
mov
arpl
mov
add
fwait
push
dec
adc
sub
cwde
ret
nop
xchg
and
pop
je
cli
pop
xchg
inc
add
aaa
inc
adc
add
sbb
lock
xchg
ror
add
mov
ins
or
or
call
sbb
add
xchg
lock
fidiv
or
or
jb
add
cmp
and
cld
outs
xchg
pop
dec
sbb
sbb
mov
test
movs
adc
add
or
add
adc
dec
or
out
div
pop
adc
enter
test
ins
xor
or
inc
arpl
adc
xchg
dec
nop
push
jmp
test
ja
xor
imul
push
inc
leave
ret
cmps
das
js
call
sbb
push
mov
xchg
mov
je
shl
push
sar
out
jg
jns
jae
ds
lds
fstp
adc
fisubr
addr16
push
stos
add
pop
push
push
nop
aaa
fisttp
jb
push
push
stos
(bad)
in
push
push
ja
jae
sub
das
push
loop
or
jae
dec
std
outs
ja
mov
je
push
cmp
retf
mov
or
inc
push
dec
add
jne
jnp
jbe
ret
adc
cmp
retf
dec
(bad)
fcomp
sbb
pop
ins
test
mov
sar
pop
or
(bad)
js
in
es
clc
adc
enter
add
add
mov
ret
rcr
or
jne
lahf
dec
in
xchg
mov
cs
mov
xor
imul
nop
inc
push
add
mov
(bad)
push
cmp
add
and
adc
jb
test
pop
cvtpi2ps
(bad)
cli
mov
dec
inc
stos
adc
jns
fs
sub
dec
imul
jo
ret
retf
add
les
pop
rol
mov
and
mov
nop
lock
pop
jge
pop
and
ficomp
lea
retf
adc
cmp
sbb
shufps
mov
xchg
addr16
sub
jmp
or
jl
test
dec
daa
jbe
and
and
cmp
dec
add
cmp
sub
fdiv
jb
jl
add
inc
test
cs
repz
je
sbb
sbb
mov
pop
mov
adc
sub
test
sub
xor
adc
add
inc
call
loop
lea
sbb
shr
sbb
sbb
adc
jne
fcomip
add
add
push
push
sub
push
add
push
jmp
sub
inc
mov
pop
ficomp
sbb
sbb
inc
cmp
jle
cwde
in
into
vmread
jbe
inc
xor
lods
jne
inc
mov
shr
pop
popa
loop
mov
mov
hlt
or
(bad)
pop
sub
ret
ret
lock
pop
ret
or
pop
mov
movs
dec
cs
mov
cmps
sbb
mov
inc
inc
dec
xor
mov
shl
daa
sub
and
adc
inc
fmul
mov
and
fdivp
sbb
test
fisttp
sbb
xor
sbb
mov
mov
ret
or
add
aaa
test
and
call
clc
or
ror
xchg
cmp
and
ins
cmp
andnps
mov
mov
or
fsubrp
mov
out
(bad)
and
std
push
sbb
lock
imul
sti
rol
icebp
push
mov
add
mov
ss
or
dec
lea
xchg
adc
mov
or
mov
mov
mov
shl
jl
ret
adc
and
sbb
jecxz
jnp
jge
(bad)
(bad)
lods
jbe
imul
jae
ret
into
push
adc
jecxz
adc
je
dec
adc
sar
jae
iret
int3
call
xchg
or
mov
sbb
push
ret
xor
xchg
jbe
add
add
xchg
add
fs
mov
leave
pop
mov
out
repnz
pop
push
lds
cmp
mov
push
adc
push
ja
cs
mov
bound
mov
cmp
cmp
push
add
push
add
xchg
sbb
stos
popf
std
pop
jmp
adc
test
or
loopne
test
or
push
mov
or
jmp
adc
sbb
sub
test
push
imul
sub
pushf
inc
inc
sub
loopne
std
ret
push
push
popa
test
cmp
and
lods
and
mov
loope
mov
mov
in
call
daa
or
movs
out
stos
js
ret
push
pop
adc
inc
cli
inc
aaa
cmp
xor
pusha
xchg
jno
aas
rcr
pop
dec
jp
add
add
dec
pop
daa
xchg
xchg
nop
push
ins
in
sbb
test
in
add
add
and
ror
xchg
mov
add
jnp
sub
sbb
push
inc
jg
xchg
aam
xchg
call
push
add
or
jno
xor
jnp
xor
or
fst
stc
jmp
push
adc
sub
jne
jno
add
test
inc
add
dec
and
or
push
mov
jle
neg
cmp
jne
pop
adc
cmc
mov
jb
mov
stos
test
jp
pop
test
dec
cwde
cmp
add
add
inc
mov
pop
outs
or
sbb
test
sbb
jo
or
(bad)
clc
push
mov
neg
in
sbb
stc
dec
add
sbb
mov
mov
push
pop
or
dec
adc
adc
add
and
cmps
aaa
mov
sbb
in
(bad)
bound
add
jo
adc
xchg
push
mov
mov
sub
aas
shl
adc
jbe
pusha
mov
xor
inc
sbb
je
jge
fcomp
hlt
sub
or
movs
jmp
rcl
ja
div
push
iret
adc
test
mov
out
mul
adc
inc
push
fs
jo
or
outs
push
add
call
mov
cmp
ds
aaa
cmp
push
in
mov
adc
adc
push
mov
in
mov
or
xchg
ret
pop
inc
sbb
or
clc
ds
ins
test
adc
(bad)
pop
adc
sbb
jle
xchg
mov
adc
dec
adc
push
pop
xchg
push
(bad)
loope
pop
je
pop
pop
cwde
jl
sbb
and
and
lock
inc
popa
iret
in
jge
cmp
sub
dec
mov
(bad)
jnp
cmps
ins
scas
leave
(bad)
jmp
or
or
or
and
mov
cwde
xchg
pop
test
clc
inc
pop
sar
add
fild
into
or
cmp
add
xor
pushf
or
mov
jo
push
mov
add
xor
push
add
(bad)
xor
mov
test
sub
add
mov
imul
xchg
inc
add
mov
adc
mov
sub
dec
dec
sub
adc
push
sub
shr
inc
add
sti
pop
mov
inc
in
sub
push
cmp
xchg
xlat
mov
call
cmps
std
xor
sub
sbb
mov
jmp
or
and
int3
rcr
push
cmps
test
sbb
shr
enter
inc
or
add
add
ror
movd
jbe
aam
or
xor
push
push
push
add
pop
and
movs
lds
pop
call
lods
sub
int3
cwde
adc
inc
aam
mov
pop
push
or
xor
xor
jmp
mov
rcl
push
dec
mov
xor
ss
and
cmps
jb
sbb
sub
leave
add
or
and
rol
xchg
nop
pop
mov
cmps
sbb
out
ins
sbb
imul
xchg
dec
inc
les
add
push
pop
and
adc
or
push
out
jmp
daa
push
js
mov
cli
call
pop
shl
or
es
inc
cmovge
lahf
movs
inc
add
movs
das
or
adc
mov
cmc
xchg
jle
pop
or
clc
jae
inc
nop
cmp
sbb
xchg
inc
ss
inc
add
je
ds
cmps
inc
xor
xchg
sub
add
dec
cmp
frstor
nop
fcomp
cmp
sub
cmps
sbb
and
add
sub
add
rol
inc
out
rcl
out
pop
in
test
xlat
sub
add
pop
xchg
sub
mov
adc
add
jns
mov
jne
add
(bad)
jmp
add
xchg
cmp
and
sbb
mov
test
jmp
or
sbb
mov
dec
icebp
pusha
or
in
sbb
cmp
fmul
push
aaa
fld
je
cmps
push
repnz
out
nop
retf
adc
xchg
push
jecxz
sahf
xchg
cmp
add
adc
pop
and
or
add
jae
neg
outs
out
and
inc
and
sbb
nop
sbb
nop
stos
jmp
test
add
push
xchg
jb
call
and
xchg
lods
xchg
sub
add
xchg
xchg
mov
stos
pop
in
mov
xchg
dec
inc
repz
(bad)
out
and
outs
repz
inc
inc
out
sbb
sbb
je
inc
xchg
sbb
test
mov
sub
ret
repz
das
enter
hlt
into
mov
sbb
lea
dec
or
mul
jno
push
add
mov
aaa
pusha
das
(bad)
ret
fdivrp
outs
and
or
mov
mov
xor
cmp
sub
hlt
inc
cmps
push
rol
iret
or
or
xchg
push
adc
ja
jne
cmp
inc
sbb
pusha
jne
out
leave
mov
pop
push
sub
adc
cmp
xchg
lods
jb
cmp
cmp
dec
out
mov
test
(bad)
and
and
pop
adc
(bad)
jecxz
sub
push
mov
push
xchg
mov
add
movs
xchg
xor
outs
enter
ds
sbb
nop
loopne
scas
cmp
mov
push
jns
mov
dec
int
aaa
jl
cmp
jb
or
jbe
aaa
je
cmp
cmp
xor
fld
repz
mov
cmp
xor
sbb
cmp
mov
dec
add
sub
pop
rcl
sub
loopne
sub
data16
loop
nop
mov
fs
fcomp
jne
scas
pop
mov
mov
cmps
mov
cmp
xchg
(bad)
push
and
xor
adc
or
push
fs
pop
shl
push
jae
call
xor
cmp
inc
in
pop
lods
sbb
add
xor
adc
inc
call
inc
sbb
mov
cli
or
push
cmp
arpl
xor
or
sub
sub
shl
clc
jmp
sub
push
jp
jmp
movs
fucomp
inc
pusha
mov
cwde
mov
loopne
sub
and
xchg
gs
movs
ins
ins
loope
push
bnd
cs
js
xor
add
cmp
inc
add
cmp
addr16
push
inc
cwde
mov
xchg
dec
mov
les
iret
sbb
pop
(bad)
mov
adc
push
std
mov
aas
or
jecxz
mov
push
sub
jle
cmp
jle
jl
movs
mov
mov
mov
enter
inc
leave
mov
movs
or
nop
mov
adc
fs
mov
ror
es
jle
outs
loope
test
movs
pop
jb
push
xchg
addr16
fcom
stc
mov
push
push
add
jo
pop
mov
sub
xchg
outs
inc
cmp
or
adc
jne
mov
mov
push
test
push
aaa
xor
sub
push
arpl
push
fcomp
jo
dec
push
mov
mov
fwait
call
push
or
ret
mov
ins
aaa
cmp
or
dec
jge
imul
add
addr16
adc
pop
cmp
jmp
adc
sbb
out
lods
jnp
mov
sbb
lods
or
cs
fwait
jge
js
pop
and
lea
rcr
nop
pushf
sbb
mov
outs
push
imul
nop
sub
out
and
pop
cvttps2pi
pop
inc
daa
ret
xor
sbb
dec
arpl
cmp
clc
setb
cmp
or
mov
add
cs
jmp
ror
in
cmps
in
jne
cmp
hlt
pop
push
fisub
inc
ror
bound
data16
xchg
xor
push
xchg
inc
mov
mov
add
xchg
mov
jge
cld
jmp
dec
push
hlt
dec
or
and
hlt
adc
retf
movs
sbb
add
loop
adc
push
les
jmp
rol
int3
jae
push
cld
sahf
(bad)
icebp
and
mov
movs
adc
ins
push
mov
push
nop
jmp
pop
mov
pop
popa
dec
inc
or
xor
clc
mov
es
jbe
iret
push
sar
cmp
mov
lahf
push
je
push
into
neg
(bad)
push
ins
loop
and
dec
sbb
jno
mov
sub
add
sbb
mov
dec
mov
xchg
push
in
jmp
repnz
hlt
jp
adc
xchg
sub
test
sbb
cs
push
push
in
pop
add
daa
or
hlt
add
cmps
xchg
pop
jl
clc
fsubr
push
sbb
rol
cld
xchg
mov
or
jns
cmp
mov
push
push
push
and
fwait
ret
add
sub
and
(bad)
and
cwde
sub
(bad)
or
add
je
imul
add
pop
(bad)
fdiv
shr
mov
loopne
dec
push
addr16
lahf
sub
stos
ret
xchg
jle
push
shr
add
cmp
int
je
push
not
xchg
out
jno
scas
add
inc
fimul
push
popf
rol
out
add
fidivr
stos
inc
xchg
imul
xor
xor
and
out
mov
les
add
mov
or
mov
pop
mov
test
jne
clc
popf
scas
fwait
inc
rcl
lahf
aad
inc
adc
pop
cmp
xchg
or
scas
test
ffree
mov
and
push
sbb
cmp
inc
adc
rol
mov
arpl
and
ds
pop
ja
ins
jle
adc
ss
pop
push
data16
cs
push
test
mov
or
pop
pop
adc
xor
std
push
leave
test
xor
mov
dec
xchg
adc
xor
adc
adc
sbb
shr
xor
sub
movs
and
rcr
movs
push
out
push
inc
push
cld
mov
fwait
int
mov
add
or
mov
rcl
cld
shl
sbb
jmp
push
test
cmc
nop
push
add
in
nop
and
mov
mov
lods
retf
dec
mov
not
aad
push
cs
push
neg
or
push
mov
iret
sub
call
and
jg
add
jne
xor
push
add
test
sub
dec
mov
in
pushf
lea
sbb
dec
inc
mov
fs
(bad)
ffree
mov
mov
lods
adc
outs
mov
push
inc
add
ins
pop
cmp
out
or
ficomp
(bad)
pop
jge
(bad)
adc
ret
push
out
or
shl
jbe
ret
sbb
cmp
jbe
push
ins
xabort
push
xchg
sahf
inc
inc
adc
shl
movs
or
cli
fwait
add
call
push
pop
jmp
sub
outs
ret
in
jp
push
adc
or
cmp
jae
test
sub
or
jmp
cmp
shl
xchg
mov
jl
or
ror
mov
add
mov
or
or
adc
shl
or
adc
xchg
xlat
xchg
rcl
adc
mov
clc
add
xor
and
xchg
in
push
mov
popa
out
pop
cwde
push
add
or
mov
loopne
popa
add
add
pop
mov
push
js
mov
mov
add
(bad)
jb
out
and
not
loop
mov
push
add
xchg
pop
test
and
push
and
dec
add
xor
push
mov
pop
mov
dec
icebp
jmp
jl
or
inc
ret
or
xchg
pop
out
jne
arpl
pop
or
inc
jmp
jb
jbe
and
push
addr16
push
pop
mov
mov
adc
mov
dec
add
iret
sub
imul
gs
jecxz
js
add
sbb
test
movs
mov
push
inc
and
in
mov
sub
add
mov
lods
add
add
pop
jno
mov
xchg
dec
call
xor
xor
pop
mov
mov
mov
cmp
push
test
cwde
in
loopne
jecxz
add
push
inc
xchg
jmp
push
ins
add
test
jmp
pcmpgtw
(bad)
xor
hlt
jl
dec
jmp
adc
mov
sub
push
and
inc
pop
test
push
lods
pop
arpl
sti
div
jg
scas
inc
popa
cmp
mov
adc
push
test
xchg
(bad)
jmp
pop
pop
push
pusha
jnp
inc
xor
ja
and
mov
and
(bad)
push
jb
mov
xor
inc
xchg
push
jmp
sbb
sub
add
jmp
add
dec
stos
xor
mov
jmp
retf
add
mov
or
cdq
add
js
push
gs
xchg
xlat
or
add
mov
lds
lock
jbe
mov
mov
mov
push
mov
lea
cmps
push
rcr
adc
fucomip
and
jmp
mov
lea
and
lea
adc
xor
push
inc
fcmove
popf
and
cmps
mov
lds
or
inc
cmps
in
sbb
add
mov
inc
and
cwde
sti
sti
push
sub
test
mov
ss
bound
add
lea
test
and
pop
stos
fadd
adc
xchg
fdivr
push
dec
jne
je
xchg
sar
push
inc
xchg
add
cmp
scas
jne
nop
mov
cmp
cwde
sub
xor
movs
cmp
mov
cmp
and
ins
mov
cmp
cmp
ss
push
pushf
rcl
mov
movs
add
add
inc
je
outs
push
ins
movs
adc
jl
or
mov
xor
popa
jl
or
ja
xor
jle
outs
outs
outs
outs
or
je
inc
je
pop
je
sub
fild
and
ret
cdq
push
cmps
and
push
and
rcr
mov
lods
adc
fimul
mov
data16
fisttp
add
ret
or
mul
mov
dec
jmp
das
add
push
aad
dec
mov
in
ins
jge
and
cmps
scas
cmp
inc
ds
inc
and
jb
jb
xchg
mov
add
pop
cmp
shl
xlat
fsubr
pushf
sbb
and
pusha
xor
rcl
loopne
jo
adc
dec
xchg
add
test
add
dec
cli
jmp
sub
cmp
in
pop
add
ja
sbb
jns
(bad)
je
push
adc
add
loopne
daa
or
push
jne
push
out
mov
push
pop
in
mov
dec
sbb
sbb
mov
push
xchg
or
push
pop
nop
mov
push
cdq
sub
in
and
pop
mov
inc
fld1
lds
xchg
xchg
ret
inc
mov
push
mov
pop
jge
add
rcr
pop
ret
add
xchg
sub
add
mov
rcl
mov
je
pop
fdivr
add
xchg
movs
push
sbb
push
fistp
jmp
pop
dec
or
mov
cmp
dec
cmp
loopne
xor
daa
ins
inc
or
jo
in
mov
push
bound
add
mov
dec
inc
push
les
inc
push
mov
or
lock
inc
or
push
sbb
adc
movs
and
jecxz
jnp
inc
or
sbb
mov
inc
push
xchg
test
or
jo
cmp
add
mov
and
inc
xchg
xor
pop
aad
dec
jo
fs
call
add
clc
dec
add
or
xor
dec
sahf
add
add
rol
in
sbb
push
inc
xchg
or
or
mov
add
push
push
cmp
xchg
add
in
in
xchg
push
shl
xlat
and
cs
adc
and
and
add
adc
aaa
lea
cmp
or
push
adc
ins
jo
test
add
into
and
or
fsub
mov
xor
add
xchg
push
mov
hlt
les
dec
ror
inc
loopne
pushf
js
add
push
ret
mov
inc
iret
add
loopne
dec
stos
iret
mov
mov
movs
or
xor
clc
or
cmps
pop
je
repnz
lahf
add
fistp
(bad)
ret
imul
adc
mov
nop
jno
ror
jge
je
jecxz
les
loopne
inc
add
cwde
sar
enter
dec
xor
mov
add
push
or
lock
pop
outs
sbb
or
push
pusha
sub
daa
mov
xchg
jo
mov
pop
mov
inc
les
inc
lahf
push
or
add
aad
cmps
pop
or
xor
call
clc
adc
push
xchg
aam
pop
rcr
popf
jnp
not
xor
movs
in
call
icebp
jo
mov
inc
call
jmp
and
fstp
test
popa
and
in
sbb
sbb
in
pop
or
add
push
icebp
fild
ffree
push
mov
cld
lods
call
sub
mov
out
inc
push
xor
push
adc
inc
fist
fwait
hlt
xchg
test
mov
dec
and
cmps
pushf
ret
and
ds
push
fs
jl
mov
std
outs
push
mov
les
fiadd
lahf
les
xchg
(bad)
jne
pushf
jnp
ret
push
cmp
lods
leave
leave
retf
adc
or
add
inc
leave
or
in
adc
jge
cmp
push
push
leave
sahf
sub
jae
and
in
fcom
or
xchg
dec
cs
ret
push
mov
neg
sbb
push
ins
and
shl
ret
out
pop
in
push
sbb
pop
inc
ins
add
cwde
jno
enter
ins
int3
sub
xor
or
xchg
sbb
push
retf
call
lock
les
call
xchg
pop
and
enter
mov
repnz
pop
add
ret
sahf
mov
add
retf
and
repz
ret
add
mov
(bad)
adc
fsubr
sbb
ret
dec
enter
dec
(bad)
adc
and
or
cmps
push
or
sub
adc
iret
rcr
pop
mov
mov
into
and
cmp
push
rcl
add
mov
push
push
sbb
push
inc
stos
xchg
pushf
je
fs
add
pusha
out
test
push
fadd
ror
xor
out
and
xor
xlat
mov
sar
cmp
fadd
lods
arpl
in
push
sahf
dec
xchg
add
sbb
jmp
stos
sbb
sub
or
add
or
mov
adc
jo
xor
push
sbb
test
or
lods
ret
and
cli
add
imul
imul
fwait
in
push
in
push
mov
push
push
daa
cmp
xor
cmp
mov
dec
jne
pop
push
jb
enter
push
xchg
pushf
pop
adc
or
les
mov
or
push
scas
push
cmp
scas
inc
test
lods
jnp
inc
je
jnp
mov
pusha
loope
pop
push
aad
cmp
inc
fild
and
push
sbb
mov
mov
add
mov
add
mov
mov
pusha
ja
mov
sar
sar
push
jns
and
fimul
inc
sbb
mov
cmp
es
sbb
or
add
push
in
lods
(bad)
or
das
add
shr
das
cs
sbb
push
lods
add
loopne
pop
ret
cmps
int
js
mov
(bad)
in
mov
xchg
add
lds
cmp
push
call
adc
adc
push
mov
dec
or
xor
or
adc
mov
push
out
popa
mov
sbb
pop
and
imul
jecxz
xor
aam
push
fiadd
push
or
add
push
imul
jb
aas
mov
fild
adc
add
push
sar
xchg
sbb
ret
lods
pop
icebp
add
push
and
jno
adc
cld
popf
test
xchg
add
lahf
je
mov
fwait
xchg
(bad)
dec
fwait
(bad)
lock
and
sti
fldenv
or
dec
inc
add
mov
mov
and
xchg
push
shl
outs
push
sub
sar
int3
test
seto
sub
mov
es
mov
das
and
mov
enter
test
rol
xor
mov
add
add
and
push
adc
cmp
mov
(bad)
leave
or
xor
xchg
sar
add
mov
ret
ja
push
jns
nop
mov
jl
jmp
inc
lock
sahf
push
pop
les
xchg
dec
int
sub
push
fs
mov
shl
add
dec
xor
fisttp
sub
or
and
(bad)
mov
mov
adc
lock
pop
or
mov
test
push
popa
fst
inc
sub
in
loop
adc
mov
jo
lock
jae
add
fstp
jmp
pop
cmp
xchg
test
xchg
add
leave
jne
mov
loopne
add
aam
and
jns
sub
retf
xor
je
inc
gs
jo
lock
lea
test
lock
xchg
mov
jns
inc
add
add
iret
inc
cmp
mov
lea
dec
pop
lahf
mov
mov
mov
(bad)
ss
sub
cld
and
pop
iret
xchg
daa
test
mov
jbe
nop
mov
inc
push
test
shl
mov
arpl
ucomiss
pushf
sub
leave
les
jns
and
jb
ficom
sub
adc
inc
add
sbb
leave
mov
in
retf
ins
loopne
mov
or
pop
sub
jb
mov
stos
sub
pop
fcom
inc
int
sub
mov
mov
mov
test
adc
jns
lods
mov
or
(bad)
repz
jno
es
inc
int3
(bad)
xor
jno
mov
test
cmp
mov
enter
bswap
imul
mov
cmp
repnz
retf
fwait
enter
fadd
cdq
pop
and
int3
lock
adc
add
xchg
mov
mov
lods
std
sbb
dec
pop
sbb
dec
push
sbb
xor
test
xor
outs
add
test
adc
cwde
arpl
push
rcl
mov
push
jmp
imul
test
sub
lea
mov
mov
call
jnp
cmp
push
call
or
xchg
or
sar
je
push
or
mov
outs
jno
or
lock
xchg
jns
push
popa
mov
dec
inc
pusha
sub
fiadd
int
mov
ror
xchg
mov
mov
hlt
cwde
jp
cmps
vgf2p8mulb
(bad)
push
cmp
adc
call
adc
mov
pushaw
lods
inc
jge
cmp
je
or
push
mov
inc
cs
mov
adc
add
nop
nop
adc
call
sbb
adc
not
fcom
add
and
mov
ss
pop
cmp
jbe
pushf
xchg
mov
mov
dec
mov
nop
sbb
gs
add
mov
xchg
ror
add
pop
pop
mov
sbb
and
lea
sar
and
sbb
test
add
and
add
sbb
sub
mov
jmp
xchg
call
mov
or
lea
fwait
and
add
lods
jne
rcr
mov
rcr
sbb
mov
ins
sub
add
jae
pop
and
add
dec
test
test
mov
dec
enter
jo
dec
jbe
adc
ds
dec
xchg
add
dec
sub
(bad)
stos
fistp
sub
cmp
inc
mov
les
adc
lods
ins
cmp
mov
and
mov
dec
adc
and
call
add
xchg
xor
imul
mov
(bad)
mov
fld
xor
xor
cmps
add
and
cdq
movs
add
in
in
add
add
xlat
add
clc
and
in
add
dec
jae
push
mov
and
mov
pop
(bad)
fld
ret
ja
pop
jmp
out
dec
mov
push
stc
dec
mov
push
add
or
or
sub
pop
or
cmc
sub
loopne
pop
add
push
lods
push
add
fcomp
push
inc
push
sub
push
daa
push
or
mov
mov
mov
fcom
hlt
add
ja
fist
xchg
pop
push
outs
fild
mov
loopne
or
pop
adc
mov
(bad)
test
movs
lods
fdiv
vshufpd
sub
or
fcomp
(bad)
(bad)
(bad)
aaa
fs
xor
lea
jo
mov
sbb
jmp
push
add
shl
push
cmp
push
(bad)
in
adc
mov
adc
adc
adc
and
inc
les
mov
rol
and
jl
jno
cwde
lods
mov
sbb
inc
pop
mov
mov
stos
and
mov
add
popa
mov
pop
push
nop
push
stc
ja
sub
sbb
lahf
mov
in
add
sbb
ds
outs
mov
fisttp
add
fcmovnbe
sbb
imul
push
add
aam
fst
push
es
aaa
xchg
test
stos
adc
enter
jmp
and
sar
sbb
xchg
and
call
ds
jmp
je
jno
mov
popa
sbb
clc
and
enter
add
jle
and
mov
(bad)
int3
cmp
add
add
stc
mov
cmp
xchg
xchg
iret
or
jnp
shl
pop
inc
cwde
enter
dec
rcl
popf
les
shl
es
add
js
ins
pop
or
out
rol
inc
daa
dec
popa
or
xchg
cmp
es
mov
mov
call
or
imul
pop
fiadd
jae
cli
dec
jmp
add
add
(bad)
cmp
or
les
pop
sub
dec
xor
std
push
retf
sbb
push
sbb
push
adc
sub
addr16
int3
xor
adc
mov
adc
cmps
add
shr
jne
mov
pop
sbb
jns
call
push
push
push
es
push
cli
fcomip
add
jb
pop
add
pop
scas
add
retf
test
in
adc
xchg
fadd
lahf
cmps
push
scas
push
in
dec
rol
push
iret
mov
jmp
and
cmps
(bad)
adc
movs
movs
add
fwait
push
push
ja
pusha
jmp
jbe
push
jl
out
or
mov
push
add
cmp
(bad)
push
xchg
dec
add
sbb
into
fisttp
sub
add
or
mov
add
clc
shl
jmp
or
inc
inc
add
mov
mov
push
cld
mov
mov
xor
scas
cmp
aam
idiv
pop
mov
sub
jle
dec
lea
mov
sub
dec
rcr
xor
cmp
imul
push
add
pop
add
pusha
fs
lea
and
inc
xor
into
or
ins
xor
mov
pushf
mov
add
repz
jns
loopne
ja
pop
or
cmp
dec
imul
add
sbb
aaa
int
shl
fldz
fstp
mov
js
mov
test
cwde
movs
fadd
mov
add
popa
test
test
adc
fild
inc
and
add
sbb
inc
rcr
out
cmpps
sub
push
mov
fcom
add
push
inc
leave
push
cmp
or
push
cmp
adc
xchg
mov
sbb
rcl
add
sbb
in
push
push
gs
test
add
test
add
andnps
into
and
pop
inc
arpl
dec
cs
and
or
dec
xchg
inc
jne
cdq
stos
push
mov
int
mov
sahf
jo
inc
push
sbb
add
dec
idiv
fcom
fdivr
jno
fsub
add
push
loop
add
jg
and
lahf
nop
pop
call
sub
dec
loopne
mov
mov
pop
mov
and
xlat
fisttp
add
jg
xor
dec
mov
into
sbb
fidivr
gs
or
movs
xor
jg
xor
test
je
mov
out
adc
cmp
add
pop
sbb
loop
inc
add
imul
sahf
cmps
sbb
xor
outs
inc
mov
adc
push
xor
or
in
cwde
movs
sbb
add
sbb
jp
test
fmul
(bad)
mov
add
outs
cwde
or
icebp
das
wrmsr
sbb
pop
mov
clc
pushf
neg
loopne
or
pop
xchg
cmp
add
clts
in
fcom
jne
and
and
int
leave
add
adc
leave
add
adc
subps
and
mov
imul
push
jle
or
sbb
cmp
repnz
call
sbb
mov
rol
jnp
gs
icebp
je
jge
mov
jge
and
and
movs
stos
or
shl
lea
sbb
ja
jp
xchg
jle
test
mov
sbb
shl
dec
mov
xchg
pop
push
fadd
jne
xor
enter
lock
dec
jno
cmp
add
cmp
or
je
fcomp
dec
(bad)
arpl
push
test
stos
pop
push
and
add
sbb
psubusb
cli
mov
fucom
inc
aaa
add
scas
dec
(bad)
(bad)
sub
jb
enter
cld
and
ror
cli
add
mov
jae
call
jne
push
inc
sub
into
sbb
lahf
cmp
je
sbb
mov
jmp
pop
fwait
(bad)
adc
test
push
mov
xor
shl
icebp
add
pushf
pop
add
lock
or
or
push
add
sbb
inc
mov
and
shr
add
push
cmp
ja
inc
in
inc
cli
pop
inc
push
fsubrp
imul
test
push
jp
ja
jb
adc
data16
sbb
mov
or
xor
inc
or
cmp
sub
cs
mov
ss
inc
sbb
mov
sbb
call
dec
add
clc
and
mov
and
(bad)
(bad)
cmp
pusha
adc
mov
mov
mov
xor
repz
test
xor
add
xor
or
add
inc
aam
int3
sbb
js
jb
xchg
push
dec
dec
jp
or
es
cli
sbb
pop
push
push
and
sbb
or
inc
push
test
iret
js
push
pop
sub
fimul
enter
add
adc
sbb
mov
imul
loopne
add
xchg
inc
ret
inc
and
add
push
(bad)
imul
jmp
arpl
fisub
sbb
data16
mov
push
and
in
xor
xlat
mov
inc
fadd
not
push
mov
adc
in
add
jmp
jns
xchg
imul
mov
mov
(bad)
mov
adc
outs
push
clc
pop
and
sbb
adc
push
rcr
iret
dec
lock
loopne
push
mov
mov
retf
popa
xchg
jne
shl
fild
push
mov
xor
jg
daa
and
cmp
imul
or
fbstp
enter
xchg
dec
cs
shr
xchg
retf
retf
outs
jecxz
xor
gs
lods
popf
test
adc
mov
ja
cmps
aaa
xchg
dec
stos
clc
shl
mov
imul
or
dec
adc
in
cmps
imul
imul
cmps
imul
imul
imul
cmps
imul
repnz
test
mov
cmp
pop
ins
add
adc
push
ret
push
xchg
push
adc
pop
add
pop
cmp
lea
inc
inc
or
inc
int3
nop
xchg
push
jo
ins
sub
and
imul
fs
inc
mov
shl
or
nop
mov
or
movs
push
dec
mov
shr
je
in
arpl
mov
push
dec
push
sub
cmp
dec
pusha
mov
jo
jp
jmp
add
mov
dec
stos
aad
in
ror
in
mov
rcl
pop
dec
and
lock
add
je
sub
cmp
scas
or
xor
les
loope
dec
enter
test
jae
and
retf
and
pop
pop
add
pop
push
mov
dec
sub
ror
aas
cld
mov
mov
loopne
mov
ret
jecxz
lock
xchg
shl
aaa
sub
mov
dec
push
and
adc
push
mov
or
inc
xchg
xchg
sbb
and
add
fld
and
fadd
push
icebp
pop
xchg
fwait
out
je
sbb
lods
jo
mov
and
mov
adc
test
sub
sbb
in
popf
jmp
mov
cmp
pop
adc
test
push
jmp
jmp
(bad)
jl
lds
push
shl
cmp
call
adc
and
add
push
cs
add
xor
add
add
inc
cmp
fdiv
ret
mov
movs
pop
sar
pushf
dec
imul
int3
inc
fs
xchg
enter
sub
xchg
call
add
into
pop
sub
and
inc
nop
sbb
out
mov
enter
jp
loope
in
mov
test
aaa
jns
add
fld
jmp
fnstsw
test
jnp
aaa
lods
cmp
sbb
push
add
pop
add
(bad)
xchg
in
push
jmp
xor
outs
jae
push
sbb
jmp
push
cmp
jno
push
sub
xchg
sub
pop
out
nop
retf
xchg
cmp
or
nop
sbb
in
test
in
loopne
and
dec
xchg
add
stos
repnz
push
in
mov
adc
imul
neg
push
test
add
push
xchg
outs
jb
fstp
fld1
and
cmp
or
aaa
dec
scas
enter
(bad)
xor
adc
jo
mov
jmp
ret
and
cmovo
lock
or
jmp
push
fstp
enter
push
enter
adc
adc
push
in
pop
das
sub
add
and
push
dec
adc
add
pop
inc
pop
sub
jne
pop
xor
jmp
push
jg
mov
and
cld
mov
lea
cmp
pop
pandn
or
xor
cmp
dec
mov
jne
push
outs
or
adc
pop
jb
repnz
jle
jne
mov
xchg
ins
movs
hlt
imul
cmps
add
ds
pusha
xchg
(bad)
(bad)
jg
mov
add
test
cmp
repnz
jmp
loopne
nop
js
cld
int
jmp
add
jmp
dec
push
test
sub
cmp
clc
sub
repnz
push
lea
or
or
sub
mov
cmp
mov
data16
ja
rcl
test
inc
in
mov
adc
imul
les
pushf
pusha
cld
push
popf
inc
inc
inc
loopne
mov
xchg
rol
push
jae
(bad)
mov
inc
cmp
cmp
or
fnstcw
lea
push
sbb
loop
mov
movs
pusha
mov
outs
mov
xchg
fisttp
jecxz
adc
cmps
imul
imul
cmps
imul
mov
sub
xchg
inc
or
dec
shl
dec
test
and
xor
mov
outs
mov
in
rcl
push
mov
cs
xchg
push
push
push
ins
or
call
sub
je
cmp
and
xor
xor
or
mov
nop
dec
cmp
sbb
pop
push
inc
add
clc
into
dec
cwde
jg
sbb
outs
(bad)
inc
lods
and
call
add
clc
inc
xor
mov
xlat
push
add
ss
ins
adc
mov
add
and
aas
jmp
mov
xor
mov
cmp
inc
rcl
fild
lods
daa
mov
(bad)
and
adc
pop
cli
mov
fchs
add
dec
lock
ins
jbe
sti
and
in
push
xor
fdivrp
sbb
loope
pop
adc
mov
mov
dec
jecxz
stos
xchg
push
push
xor
inc
mov
imul
push
sbb
cmp
sub
push
pusha
add
xchg
xchg
push
mov
ret
stc
adc
clc
lock
inc
aam
inc
ret
sub
sbb
fadd
dec
or
inc
enter
mov
es
enter
add
fsub
inc
xchg
cmps
cdq
rcr
mov
or
sbb
arpl
and
sbb
jns
daa
adc
mov
shl
iret
and
add
add
sbb
xchg
inc
jo
add
add
cmp
add
enter
cmp
pop
sub
and
aam
and
push
enter
and
xor
lock
test
xchg
rcl
movs
push
sub
(bad)
fs
into
into
addr16
imul
push
xchg
push
hlt
jp
rcl
add
std
bound
sub
push
mov
jo
mov
mov
xor
repnz
mov
adc
sbb
xor
rcr
mov
xor
sub
sub
shl
rol
aam
dec
aam
mov
mov
pop
push
ins
inc
dec
imul
test
je
mov
mov
adc
cwde
sbb
pop
cwde
push
(bad)
fadd
adc
cmp
mov
xchg
out
loop
aam
jge
loop
das
mov
inc
stos
mov
ror
jp
aas
cmp
test
test
(bad)
jae
jb
pop
sub
xor
mov
dec
icebp
int3
and
cmp
das
rcl
or
jo
mov
movs
xor
movs
or
sbb
adc
sub
pop
mov
mov
mov
sbb
fdivrp
or
inc
or
and
aam
pop
xor
rol
push
inc
push
add
shl
inc
sbb
adc
inc
jbe
out
mov
mov
xchg
jns
xchg
aam
mov
fs
dec
inc
xor
and
or
adc
fisub
daa
daa
adc
xor
imul
(bad)
dec
jg
inc
outs
nop
sub
scas
pop
xor
stos
jle
jl
add
retf
pop
and
mov
retf
mov
jo
jle
xlat
sahf
fld
jne
pop
xchg
adc
xchg
or
push
imul
shl
add
or
adc
test
outs
js
fwait
mov
add
push
dec
push
mov
or
adc
and
inc
out
leave
add
jbe
(bad)
loopne
ret
push
xchg
inc
(bad)
rcr
shl
cmps
add
in
inc
sub
push
sbb
xor
in
mov
cmps
mov
cmp
mov
push
mov
loop
add
sub
mov
nop
mov
adc
sub
or
inc
aam
mov
lds
(bad)
xchg
jl
sbb
and
sbb
sub
pusha
hlt
sub
jns
cdq
in
cmp
sbb
and
adc
pop
repnz
cmp
sbb
push
imul
sbb
mov
and
and
or
cmp
cmp
lods
test
jl
push
mov
sub
add
loope
clc
or
es
mov
leave
sbb
daa
in
aas
sub
add
rcr
jno
push
pop
sub
inc
call
call
add
in
mov
(bad)
sub
sub
sub
inc
push
movs
and
sub
lods
in
and
fstp
mov
cmp
xchg
jo
xchg
das
sub
adc
out
pop
shl
inc
lods
or
xor
and
jns
jge
xor
mov
or
(bad)
je
and
pop
inc
mov
cmp
gs
add
add
xor
outs
stos
mov
stos
sahf
add
cdq
pop
cmp
mov
popa
in
or
or
fstp
out
push
shl
stos
inc
jl
lea
jne
fcom
lods
mov
fs
xor
sbb
add
inc
clc
push
xor
and
cmps
pop
xor
add
retf
pop
mov
sbb
push
mov
and
dec
mov
pop
cmps
psllw
push
fadd
jl
es
sbb
in
adc
cmps
cmps
cdq
push
jecxz
pop
add
inc
int
gs
mov
dec
adc
jl
jl
es
adc
push
mov
mov
ret
inc
mov
outs
and
inc
sbb
xor
xor
loope
(bad)
fiadd
mov
test
push
sub
repz
mov
cwde
pushf
mov
test
(bad)
clc
sbb
xor
cdq
hlt
jno
movs
and
mov
daa
xchg
or
jae
and
dec
repnz
inc
fild
dec
mov
cmp
push
push
dec
pop
loop
sbb
cmp
clc
inc
inc
mov
cmc
xchg
inc
cs
sbb
adc
mov
dec
sbb
or
dec
pop
mov
sbb
and
cmp
xor
and
pop
sahf
inc
sub
and
es
mov
push
ss
dec
sub
jne
out
cmp
or
cmp
sbb
and
ss
jmp
xchg
dec
cs
inc
sub
and
pop
pusha
xchg
adc
sub
neg
fs
outs
add
push
loopne
fld
xchg
or
fsubr
pop
fldcw
add
push
or
adc
sub
jmp
sbb
shr
jo
out
hlt
rcl
pop
mov
push
xor
mov
push
inc
sub
or
pushf
lods
adc
sbb
sub
xchg
push
dec
jb
(bad)
nop
out
inc
dec
dec
or
out
cmp
push
xchg
pop
pop
and
imul
pop
pusha
fs
pop
cs
pop
or
cwde
or
inc
popa
ror
shl
fsub
and
fs
jge
shl
adc
sbb
leave
test
push
mov
ins
or
mov
jecxz
jo
fbld
ja
je
pop
enter
adc
pop
js
pop
push
es
jl
jb
xchg
push
push
mov
mov
dec
push
mov
dec
daa
cmp
call
xchg
dec
inc
xchg
push
add
xor
mov
xchg
imul
in
or
(bad)
adc
xchg
cmps
dec
dec
cli
inc
or
fdivrp
mov
cmp
pop
mov
or
xor
int3
mov
ss
dec
popa
pusha
xlat
push
jb
dec
call
mov
movzx
je
and
les
retf
scas
add
(bad)
adc
nop
fldcw
xor
mov
data16
adc
xchg
dec
call
or
mov
adc
sar
popa
push
enter
mov
sub
push
add
push
rcr
xor
sbb
cs
sbb
sbb
in
dec
in
xor
retf
in
(bad)
(bad)
cmp
mov
mov
mov
inc
and
shl
inc
pusha
pop
shl
push
push
mov
inc
and
pop
adc
(bad)
icebp
ja
les
push
(bad)
xor
lea
movs
out
cmps
imul
xor
cmp
mov
and
mov
and
push
mov
mov
sbb
push
sbb
cmp
dec
dec
cmp
lahf
stc
or
sbb
inc
call
or
dec
rcr
stos
xchg
dec
xor
dec
cwde
pop
lods
pop
adc
imul
adc
xor
and
imul
xlat
rcr
cmp
shr
or
arpl
inc
add
cmp
lds
and
nop
fstp
mov
mov
nop
out
mov
(bad)
in
xor
xchg
fild
mov
ror
mov
dec
lods
jno
jp
xchg
pop
je
(bad)
lock
pop
call
mov
lea
jmp
dec
repz
cwde
push
push
push
add
push
hlt
enter
push
cmp
ins
adc
dec
ds
gs
push
ins
dec
add
in
shl
repnz
test
das
sub
xchg
xchg
pusha
adc
hlt
xchg
or
dec
cmp
xor
enter
xor
and
jg
ins
jns
cmp
and
rol
add
sbb
call
pushf
retf
je
icebp
or
repz
jmp
xchg
xor
in
or
adc
dec
aaa
jno
lods
in
loopne
adc
test
pop
xchg
mov
adc
pop
and
sub
inc
cwde
test
mov
jb
jb
adc
dec
pop
or
test
and
push
in
cdq
jo
xchg
popf
or
test
pop
test
(bad)
imul
test
adc
inc
or
fadd
cli
sbb
lds
scas
test
ror
and
nop
sub
mov
cmp
sahf
(bad)
fld
mov
adc
jb
in
xor
mov
cs
icebp
dec
adc
pusha
jno
mov
dec
xchg
pop
add
inc
mov
mov
ficomp
in
movs
ja
cwde
mov
mov
inc
test
xchg
(bad)
cmc
call
rcr
jne
mov
jmp
add
or
add
push
call
or
imul
(bad)
sub
lea
mov
jb
adc
xchg
imul
(bad)
mov
loopne
adc
adc
dec
mov
les
mov
adc
pop
(bad)
rcl
lods
pop
out
inc
pop
dec
test
adc
mov
call
or
aaa
test
sbb
je
enter
bound
sub
sub
xchg
adc
inc
mov
jo
btc
add
icebp
push
les
or
scas
or
sbb
iret
es
stc
xor
lfs
retf
inc
push
jmp
pop
pop
call
adc
or
stos
dec
jge
cmp
sub
mov
out
es
mov
xchg
stc
mov
jae
adc
iret
call
mov
xchg
xor
not
mov
push
pop
pusha
lods
inc
or
ret
mov
stc
pop
and
cmps
rcr
aaa
or
enter
add
call
rcr
cmp
mov
inc
pop
(bad)
popa
cdq
jne
jle
lock
sub
test
ficomp
jne
stos
mov
test
dec
xor
add
push
stc
adc
add
in
push
xor
sbb
add
gs
pop
inc
pop
cmp
pop
or
ret
or
push
fcom
xor
pop
cli
and
push
push
sbb
movs
retf
in
mov
xor
push
lock
and
sbb
push
ror
das
pop
sbb
cdq
in
test
mov
inc
ja
sub
daa
scas
pop
lods
mov
mov
fs
(bad)
cmps
and
in
shl
rcl
retf
gs
pop
pusha
enter
daa
mov
outs
(bad)
adc
xor
stc
push
(bad)
or
jne
cmp
pop
xor
or
or
loopne
fmul
cmp
and
push
in
push
and
nop
pop
aam
add
and
or
or
dec
xor
sbb
adc
les
ja
das
cmp
inc
lea
pop
cmp
fnstcw
lock
in
data16
or
in
add
adc
cmp
ss
fadd
test
jl
cmp
mov
mov
dec
jecxz
xchg
call
or
add
inc
mov
jmp
add
add
adc
sti
sub
add
gs
cs
fdiv
or
retf
mov
xlat
add
cwde
fadd
call
enter
xchg
mov
inc
in
push
pop
add
push
popa
call
mov
movs
sub
mov
daa
stc
xor
test
push
add
inc
mov
sbb
retf
or
inc
stos
xor
add
call
add
in
xchg
data16
fadd
loopne
sbb
add
adc
or
ret
ret
aam
pusha
pop
shl
dec
pusha
fcomp
(bad)
(bad)
sar
(bad)
cmp
push
call
lds
scas
les
imul
dec
dec
fdivr
sar
hlt
loopne
push
mov
inc
fs
and
pop
or
push
xor
xor
xor
jl
sbb
cli
int3
(bad)
ret
inc
repnz
call
cs
test
mov
push
jb
and
hlt
ins
jecxz
data16
adc
loope
jl
call
imul
push
nop
outs
dec
imul
and
shl
(bad)
test
enter
ja
add
push
jno
nop
aaa
xchg
sbb
mov
push
xchg
xchg
push
popa
push
mov
mov
add
aam
xchg
rcl
cmp
sub
sbb
add
xchg
ret
repnz
jbe
jmp
mov
arpl
mov
lahf
xchg
push
xchg
mov
imul
sbb
and
in
scas
xor
imul
mov
mov
imul
mov
add
js
mov
mov
xor
and
mov
ret
fisub
adc
jp
pop
pop
add
jb
cmc
dec
mov
ror
add
cmp
in
rol
pop
push
loopne
add
repnz
shr
sub
or
enter
fs
aad
or
inc
adc
sbb
xlat
xchg
enter
and
mov
adc
or
or
push
scas
adc
fldcw
arpl
jg
lds
daa
add
int
mov
rcr
lods
xor
(bad)
or
push
jg
and
cli
xchg
sbb
push
mov
aad
adc
or
sbb
sub
mov
arpl
test
add
cdq
dec
cmp
and
xor
xor
cmp
fstp
retf
retf
fnstcw
out
bound
and
pop
mov
xlat
shr
(bad)
xchg
pop
xor
lock
push
fnstenv
movs
push
xor
mov
shr
nop
or
aaa
jp
push
xchg
and
aam
push
jecxz
loope
and
or
or
or
xor
or
mov
add
pop
jno
or
test
push
test
aad
(bad)
or
imul
add
xor
imul
dec
enter
lock
enter
in
adc
hlt
mov
or
mov
daa
mov
adc
and
inc
adc
sub
es
cmp
xchg
fbld
jo
out
pop
ror
mov
fistp
sar
jmp
in
dec
and
dec
call
test
pushf
pop
adc
ror
cmp
scas
gs
sar
pop
ja
mov
cmps
cdq
retf
push
nop
xor
hlt
xchg
cwde
fistp
lds
jnp
sbb
cmc
retf
mov
or
or
adc
xchg
daa
repnz
adc
in
push
arpl
shr
neg
or
mov
lods
push
cmp
mov
add
sbb
pop
lds
pop
sbb
js
das
movs
cmps
mov
rcl
sub
pop
add
test
rcr
mov
test
mov
xchg
test
mov
retf
pop
mov
inc
add
push
inc
pop
in
clc
fsub
das
add
add
xor
(bad)
out
pusha
xor
outs
ret
popa
repnz
sub
clc
fadd
and
pop
inc
push
push
xor
ds
add
inc
xor
add
and
xchg
inc
cld
push
lods
adc
cmp
push
pop
imul
xchg
lods
ficomp
adc
add
add
shl
jnp
cmp
imul
inc
and
or
add
fadd
daa
test
xor
fmul
push
imul
or
cdq
mov
aam
aam
mov
inc
cwde
jg
ror
jbe
cs
adc
pop
enter
pop
rcl
movs
les
jne
rcr
adc
or
enter
sbb
test
inc
cmp
test
imul
dec
mov
imul
leave
and
mov
repnz
fld
rcl
adc
pop
aas
mov
jmp
or
jbe
int
add
sbb
lea
push
rcl
mov
add
iret
push
shld
mov
int
cmp
sbb
lods
rcr
test
nop
push
lods
shl
and
lea
fidivr
in
jmp
inc
les
push
ds
add
add
push
mov
pop
repnz
and
dec
and
xchg
xor
jl
and
test
iret
jne
and
cs
sbb
sbb
and
scas
imul
leave
pop
bound
xor
or
push
gs
movs
adc
mov
xchg
dec
add
mov
dec
lahf
or
sbb
pop
xor
inc
inc
or
ret
push
je
stos
or
push
out
dec
push
call
push
cmps
arpl
lods
adc
ins
add
fs
mov
and
fisttp
(bad)
fild
jp
outs
pop
adc
adc
or
add
fcomp
inc
imul
inc
js
jo
xchg
(bad)
sub
repz
imul
sbb
inc
adc
ja
adc
and
mov
mov
pop
sar
mov
or
shl
cmps
jne
xlat
ins
sub
cmp
retf
pop
fcom
retf
adc
sub
jg
xchg
cwde
or
push
xchg
sbb
call
pop
add
arpl
push
int
(bad)
jns
sub
sbb
iret
and
xor
and
nop
out
daa
adc
push
or
je
fst
sbb
int3
fmul
gs
mov
pop
cwde
cs
push
push
sbb
mov
adc
call
xor
sbb
push
xor
sbb
cmps
pop
mov
xor
mov
adc
pop
aad
dec
arpl
ffree
shl
xchg
ins
or
retf
and
in
and
retf
dec
mov
stc
sub
into
inc
add
sub
inc
push
push
adc
(bad)
sub
clc
mov
(bad)
rcr
outs
dec
je
pop
enter
or
loop
fs
div
add
jb
and
mov
pop
xor
sbb
push
rcl
sbb
or
out
mov
dec
jbe
shl
inc
cmp
or
and
loopne
arpl
(bad)
cmp
scas
mov
xor
add
sub
xor
(bad)
push
xor
rcl
cmp
(bad)
bts
mov
inc
inc
and
or
add
leave
push
or
or
rol
or
mov
mov
push
jmp
mov
push
ret
or
out
repz
mov
dec
add
lahf
ins
fwait
add
sub
add
push
adc
test
sub
ds
sub
stos
sub
push
push
in
xchg
into
fstp
(bad)
or
push
push
ret
fstp
sub
fstp
imul
cmp
enter
sub
jae
jo
jne
push
pop
ja
sub
lea
cld
rep
and
jle
pushf
mov
iret
sbb
xchg
cmps
out
aaa
jbe
dec
jp
jge
or
fs
jl
adc
pop
je
sub
mov
adc
or
data16
fidivr
and
or
jmp
xchg
mov
add
retf
retf
push
dec
in
and
or
add
lahf
aaa
pop
pushf
pusha
xchg
adc
sub
pusha
push
enter
push
sub
push
xor
mov
sbb
mov
add
pop
xchg
xchg
mov
data16
inc
inc
inc
dec
nop
out
(bad)
dec
cli
or
add
adc
icebp
xor
jne
(bad)
jge
sbb
or
push
xchg
cli
pop
pop
dec
cmp
mov
sahf
adc
and
add
push
add
xor
sub
add
test
or
out
push
xor
mov
les
arpl
jb
xor
push
pop
and
fwait
cmps
ss
call
mov
add
js
mov
fiadd
xchg
dec
loopne
pop
pause
ror
xor
cwde
or
sar
mov
jns
test
mov
adc
nop
dec
mov
push
stc
or
add
test
xor
lahf
xor
jmp
lea
or
cmp
push
mov
adc
add
and
sbb
repnz
imul
or
sbb
ror
(bad)
into
add
xchg
or
daa
shl
shr
std
test
das
loopne
stos
popa
push
fidivr
lahf
or
push
cmp
push
push
adc
inc
ds
add
add
retf
mov
sbb
xor
sbb
cmp
or
ss
cmc
add
call
xor
inc
sti
push
jecxz
popa
lods
in
cmp
jecxz
jmp
push
pop
mov
push
xor
retf
shl
mov
adc
inc
pop
adc
test
or
mov
sub
rcl
repz
sar
sub
pop
and
push
push
push
sbb
aaa
mov
nop
adc
test
test
jb
sub
dec
and
clc
push
lock
xchg
(bad)
adc
test
(bad)
and
add
mov
sahf
movs
and
lods
das
das
repnz
cmps
int
push
xor
mov
scas
das
arpl
inc
ja
or
inc
mov
pop
sbb
push
je
enter
add
lea
(bad)
movs
fs
popf
and
rcl
fdivr
pop
sbb
mov
movs
add
fadd
xchg
dec
scas
lock
loopne
cdq
shl
dec
jmp
xchg
push
clc
inc
(bad)
idiv
mov
sbb
sub
add
push
cmp
xor
adc
ret
jo
adc
shr
add
sub
out
pop
leave
mov
sbb
ficom
push
fst
or
ja
and
push
repnz
cmp
je
mov
mov
mov
add
mov
mov
dec
add
mov
push
sub
sub
mov
and
repnz
inc
or
lahf
xchg
imul
es
and
aam
cmp
arpl
imul
mov
jae
js
jmp
cdq
rcl
je
jns
jmp
dec
fsub
clc
sar
mov
dec
stos
int3
inc
inc
sbb
cmp
and
dec
dec
mov
je
les
pop
dec
fsubr
xchg
dec
push
push
sbb
or
sub
(bad)
je
add
mov
pop
nop
rcr
adc
jb
lods
rol
adc
push
push
ja
fmul
or
mov
pop
jno
xor
add
imul
lock
and
push
jne
adc
dec
add
fiadd
mov
test
fucomp
jl
sub
adc
daa
je
jl
mov
inc
sbb
add
xchg
dec
and
shl
(bad)
jmp
sbb
shl
sub
mov
in
pusha
scas
pop
enter
shr
sbb
add
and
sbb
sub
shl
add
jo
and
sub
push
jne
scas
or
test
test
cwde
cmp
add
jae
pop
xchg
dec
xor
xor
jb
push
sbb
mov
jecxz
mov
call
aas
loop
inc
fcomp
adc
xchg
inc
lahf
jl
sub
xchg
sbb
pop
cmp
inc
scas
rcl
add
(bad)
xor
add
adc
xor
iret
es
push
cmp
(bad)
xchg
rcr
pop
lods
cmp
cmp
lahf
cmp
into
push
fcomp
mov
inc
jl
mov
cmp
dec
ret
imul
jmp
jl
mov
jo
(bad)
jmp
push
pop
into
xor
cmps
pop
and
shl
loope
daa
ret
mov
dec
or
loope
mov
push
mov
jno
inc
or
cmp
cmp
pop
inc
addr16
push
fld
fsub
pop
dec
jmp
mov
mov
xchg
or
jno
adc
xor
sub
std
cmp
pandn
sub
in
push
(bad)
jmp
loope
pop
and
xchg
(bad)
aam
mov
shr
xchg
add
mov
jb
and
ficom
cmp
ja
dec
pop
nop
aaa
dec
cmps
imul
or
pop
pop
lods
imul
and
loopne
es
push
xchg
repz
push
leave
jae
outs
aas
push
and
dec
imul
sbb
jl
xor
and
call
or
shl
inc
or
mov
sbb
or
adc
cmp
enter
dec
adc
and
fsubr
and
movs
xor
push
aam
and
(bad)
add
cwde
fxch
push
push
jmp
jno
mov
push
icebp
jno
push
push
adc
inc
stos
or
loopne
or
adc
inc
js
enter
add
add
fprem
dec
jmp
sub
lea
jg
inc
xchg
in
out
rcl
mov
inc
push
push
xchg
pop
or
jmp
jl
rcpps
test
pushf
lods
sbb
jne
mov
cdq
inc
jmp
(bad)
cmp
xchg
outs
mov
mov
add
xor
and
push
sub
ins
loop
xor
loop
dec
test
shr
pop
xor
mov
push
rep
xor
scas
xchg
pop
push
xor
mov
mov
imul
inc
test
cmp
je
das
xchg
mov
xchg
adc
jmp
cs
daa
dec
pop
mov
mov
mov
mov
(bad)
mov
sub
cmps
xor
popa
sahf
stc
cmp
push
dec
pusha
mov
and
pop
cmp
pop
add
in
dec
jge
inc
mov
jmp
dec
rol
inc
aad
jno
xor
jno
inc
pop
push
sar
jne
cmc
lock
mov
mov
cmc
add
cmps
or
adc
dec
dec
inc
or
mov
enter
imul
cld
dec
enter
sbb
mov
retf
mov
out
add
ss
or
jns
mov
in
dec
xor
add
add
mov
pushaw
lock
inc
pop
add
push
inc
arpl
out
jecxz
or
out
mov
das
cmp
dec
(bad)
cwde
inc
push
cli
sub
cmp
sub
mov
adc
pop
daa
out
push
sbb
je
inc
cmp
fsubr
lods
and
into
daa
rcl
sbb
pop
and
cwde
inc
mov
adc
inc
jns
jmp
lds
dec
sbb
shl
data16
fadd
lahf
sbb
movs
test
(bad)
mov
mov
push
or
or
sub
and
add
inc
push
ror
cdq
xor
or
leave
mov
dec
test
adc
mov
lds
xchg
adc
dec
push
sahf
mov
mov
into
and
outs
dec
js
je
or
or
jo
ins
add
imul
dec
movs
xchg
ret
mov
daa
mov
dec
jge
push
cmc
or
cmp
inc
cdq
sub
mov
movs
inc
and
sbb
pop
pop
jae
xor
cwde
pop
or
clc
mov
jo
lea
pop
test
sbb
int3
popa
jae
pushf
mov
ins
sub
cmp
push
fst
add
inc
mov
retf
jnp
or
dec
push
cmps
pop
clc
loope
jne
fbld
xchg
and
and
inc
jbe
nop
sub
or
add
in
dec
add
dec
or
or
ret
sub
push
ret
inc
inc
sbb
rol
pop
and
mov
xchg
hlt
mov
movs
cmp
repz
or
add
je
lods
ss
sub
lds
xchg
(bad)
arpl
and
push
cs
mov
mov
add
push
(bad)
and
sbb
ror
push
pop
cwde
add
fwait
pop
movs
cmp
dec
sbb
or
mov
mov
jae
jge
inc
imul
les
imul
add
neg
or
jbe
push
adc
or
mov
pop
add
xor
std
add
(bad)
call
sub
cmp
call
inc
inc
jmp
pop
add
pop
push
add
in
lock
icebp
and
mov
sub
call
jno
cmp
mov
jp
scas
pop
push
mov
pop
cmp
push
xor
ss
gs
das
dec
cs
pushf
fld
jp
fistp
imul
or
js
imul
out
mov
or
add
and
or
add
push
out
jne
cmp
jmp
cmp
mov
lods
sbb
int3
adc
push
loope
cmp
outs
movs
jnp
push
push
push
fldenv
loope
test
ds
hlt
add
mov
inc
sub
inc
sbb
xchg
lods
push
jmp
popa
add
pop
lods
inc
mov
movs
mov
test
inc
pop
jecxz
xor
mov
or
or
push
xor
jp
fldenv
push
mov
ret
lock
inc
je
push
mov
test
lea
xchg
out
adc
fdiv
dec
int3
aaa
mov
sbb
loope
int
or
dec
rcl
xlat
xor
mov
sbb
sub
call
repz
cmp
push
in
jle
xchg
and
dec
cmp
(bad)
mov
fsub
xor
jmp
or
loope
jo
sub
imul
rcr
retf
int
cmp
push
(bad)
test
mov
dec
mov
ss
je
mov
(bad)
fdiv
lahf
repz
adc
xchg
xor
cmps
push
mov
test
gs
bound
stos
push
sub
add
push
mov
xchg
push
cmp
sbb
add
or
nop
adc
in
es
add
lds
xor
push
mov
and
(bad)
push
add
xor
repnz
and
lahf
popa
loope
leave
or
inc
or
add
aaa
push
adc
add
pop
add
inc
jmp
mov
ret
sbb
je
in
xlat
ret
or
xor
inc
or
adc
jecxz
hlt
les
aam
add
rol
cmp
ins
dec
sbb
push
hlt
or
cmps
push
push
dec
add
push
out
jp
or
and
cmp
int3
jl
cmp
bound
or
inc
push
jae
xor
mov
add
add
adc
pop
lock
pop
push
or
aam
or
loopne
sub
jp
sub
adc
mov
push
mov
pop
push
push
xor
cmp
and
xlat
push
(bad)
and
xor
and
in
adc
sahf
sbb
mov
test
in
push
out
idiv
cmp
mov
sub
test
dec
add
fdiv
lock
or
nop
pop
test
mov
fist
push
mov
adc
mov
adc
pop
adc
adc
sub
add
sub
nop
add
push
add
add
jno
(bad)
xor
jno
dec
sbb
dec
les
fdiv
mov
xor
inc
adc
sub
mov
adc
or
mov
xchg
mov
mov
ins
sub
or
sub
xor
fst
and
jmp
lods
in
or
jns
add
inc
sub
in
sbb
loopne
inc
and
dec
shl
jmp
js
mov
repnz
cmp
cmp
fsub
jg
lea
(bad)
push
std
or
cwde
add
and
inc
lods
cld
xor
or
mov
jg
test
add
and
out
adc
jno
cmp
dec
mov
fcomp
test
adc
dec
fld
push
add
push
iret
and
mov
add
push
inc
mov
ins
dec
cmp
arpl
pushf
push
dec
add
pushf
dec
enter
pop
(bad)
dec
movs
sbb
jge
dec
ret
push
inc
cmps
push
and
loopne
mov
cmp
jne
lea
push
mul
push
fdivr
(bad)
add
and
aas
add
test
push
cmp
jmp
mov
adc
jne
jnp
idiv
inc
aaa
fst
pushf
ja
add
mov
ja
fdiv
mov
out
dec
dec
inc
xchg
push
ds
push
outs
aam
inc
inc
xchg
and
or
test
mov
dec
or
jbe
cli
adc
inc
and
push
push
mov
jne
cmp
cmp
mov
and
(bad)
out
gs
xchg
(bad)
jne
sti
add
push
jp
inc
cmps
push
push
and
and
dec
outs
dec
add
and
icebp
jo
scas
dec
xchg
xchg
mov
shr
add
inc
outs
add
aaa
mov
mov
aaa
sbb
fsubr
test
mov
enter
push
jmp
mov
sub
or
shl
pusha
cmps
push
pop
push
ds
sbb
and
mov
stc
inc
inc
pop
sub
scas
cmp
iret
fld
dec
ret
dec
xchg
add
sti
out
pop
cdq
push
popa
xor
sbb
mov
lods
popf
xchg
test
mov
(bad)
in
add
push
pop
and
inc
adc
ficomp
in
sti
lahf
pop
aas
xor
cmp
add
aas
push
push
add
inc
cld
add
scas
xchg
das
inc
add
add
xchg
mov
add
cld
push
sbb
jns
cld
clc
cld
repnz
push
jae
pop
std
and
adc
fs
and
inc
dec
mov
in
mov
mov
inc
and
inc
mov
or
popa
imul
jo
add
les
mov
add
cmp
push
and
inc
jg
fdiv
xchg
leave
mov
adc
lahf
icebp
bound
add
fadd
lea
and
scas
data16
lock
test
adc
xchg
jmp
loop
clc
cmps
sbb
repz
dec
sar
dec
push
in
dec
dec
in
jl
sbb
dec
dec
cmps
add
sub
das
lmsw
cmps
enter
inc
mov
cmps
adc
dec
mov
cmp
(bad)
stc
call
add
add
ret
imul
inc
pop
pop
ja
mov
or
sar
or
add
outs
push
lock
mov
jo
jmp
jl
inc
retf
dec
xchg
add
mov
xor
nop
jecxz
add
cmps
mov
add
xchg
mov
lahf
or
jl
dec
and
pop
sbb
and
xchg
mov
pop
cmps
mov
dec
imul
jae
cmps
jns
repnz
add
std
jns
add
sub
jge
xchg
inc
or
cli
lock
xchg
mov
fs
mov
iret
mov
fs
or
mov
push
fs
dec
or
or
test
mov
pop
adc
mov
cdq
sbb
cmps
or
xchg
sahf
xchg
cmps
lods
push
sub
xor
cmp
pop
ins
xor
xor
cli
inc
lea
xchg
(bad)
or
push
mov
leave
and
add
xchg
dec
add
repz
jno
xor
loope
mov
or
ds
jb
es
add
mov
and
inc
push
test
dec
in
dec
fdivr
cmp
in
jb
pop
test
imul
push
jecxz
sub
mov
push
popa
imul
inc
int3
add
imul
push
cmp
cmp
sub
fbstp
lds
nop
sbb
enter
stc
in
in
enter
dec
mov
or
or
mov
(bad)
pop
jae
and
test
pop
out
loope
jo
ja
adc
jno
cmps
jno
lods
xchg
aam
inc
cmp
inc
mov
lods
inc
pusha
data16
add
enter
ds
push
push
add
xcrypt-ctr
cmps
fld
lahf
and
add
pop
sub
mov
push
in
fadd
xchg
add
pop
or
mov
scas
les
push
sbb
xor
xor
retf
dec
xor
leave
adc
std
adc
test
enter
jp
adc
test
push
imul
mov
or
and
sub
dec
lods
test
test
dec
test
dec
adc
sub
add
dec
fs
jns
enter
sbb
adc
sub
add
dec
jns
in
pop
add
daa
add
ror
leave
or
add
mov
pop
stos
sub
or
push
shr
(bad)
jns
mov
add
jmp
inc
pop
jp
leave
test
in
xchg
sbb
xor
fsub
dec
adc
iret
ret
dec
loopne
nop
dec
cmps
repz
or
or
xchg
and
push
ret
imul
or
ins
push
push
pop
fisttp
jne
ins
jo
out
test
bnd
and
or
fdivr
adc
cmp
stc
mov
inc
inc
fmul
fcomp
fst
out
sbb
sbb
mov
mov
stc
push
dec
(bad)
(bad)
sub
les
and
loopne
xlat
jnp
xchg
pop
pop
fdivr
lds
sbb
fdivr
mov
dec
xor
shl
mov
pusha
iret
push
mov
add
loope
repnz
or
push
into
(bad)
data16
dec
jecxz
push
pop
leave
dec
in
jl
push
xor
xchg
fcmovnu
out
movs
and
lock
inc
pop
jp
xor
enter
sbb
sti
sbb
stos
jae
dec
sub
sar
pop
mov
call
pop
add
xchg
mov
fstp
in
in
in
add
outs
dec
add
inc
mov
sbb
ror
mov
or
(bad)
pusha
std
adc
push
dec
(bad)
and
fcomp
push
and
les
mov
pusha
xor
retf
shr
in
cwde
dec
push
retf
jmp
mov
push
ret
in
jno
inc
lods
scas
xchg
lea
mov
adc
sub
cmp
aad
lock
add
pop
nop
or
lea
add
sub
mov
sbb
adc
push
or
leave
dec
pop
jnp
test
and
mov
aas
mov
ins
dec
xor
pop
in
adc
icebp
jnp
ins
clc
aas
retf
scas
or
jp
jb
les
mov
bound
ror
inc
es
ret
cmp
xor
sub
outs
test
jno
jge
leave
das
sbb
arpl
inc
les
mov
sub
mov
mov
loop
(bad)
int
or
xor
add
or
pushf
push
stos
inc
mov
dec
push
ror
adc
cmp
or
jp
add
(bad)
gs
je
xor
push
sbb
repz
ret
rol
aas
or
push
mov
mov
cmovs
push
push
lods
add
add
pop
sbb
and
popa
cmp
shl
cmovs
jns
mov
ret
scas
push
mov
add
jb
push
add
dec
add
adc
enter
jne
push
mov
add
mov
cmp
in
adc
aam
adc
loopne
adc
retf
adc
(bad)
out
stos
cmp
leave
mov
dec
adc
push
jb
adc
dec
sub
dec
invd
(bad)
adc
stos
adc
or
xchg
adc
in
in
call
add
cs
daa
das
pop
adc
in
ror
(bad)
(bad)
add
ret
jns
imul
adc
test
mov
stos
popa
add
or
inc
imul
jb
and
cld
neg
lea
jb
sub
fldenv
(bad)
out
cmp
cld
mov
lods
in
adc
nop
cmp
dec
cmp
dec
push
enter
adc
adc
rol
inc
in
or
ret
ret
push
xchg
adc
xchg
(bad)
xlat
add
or
enter
xchg
cwde
sbb
add
cmp
add
adc
add
push
push
jb
xchg
xchg
outs
lods
mov
in
adc
lds
inc
mov
jmp
lods
mov
rol
mov
and
xchg
inc
bound
ins
inc
leave
add
xor
cmp
push
leave
sar
mov
push
push
enter
ret
push
jb
in
pop
dec
mov
or
xchg
loop
lods
cs
sbb
mov
pop
pop
xor
and
xchg
sbb
xor
mov
jb
pop
cwde
push
sbb
lods
sub
cdq
sub
cmp
or
lods
jno
inc
push
cwde
sbb
in
repnz
cdq
mov
enter
or
add
jb
inc
test
mov
(bad)
lods
xchg
adc
cmp
and
sbb
scas
sub
sbb
bound
enter
lds
cmp
movs
in
jb
sub
call
add
sbb
or
sbb
mov
jnp
nop
push
inc
repz
add
cmp
pop
dec
es
or
or
add
xchg
or
cdq
fs
daa
and
shl
es
adc
test
add
(bad)
(bad)
xor
xchg
sbb
push
push
loope
cdq
pusha
xchg
mov
sbb
or
and
mov
test
xchg
sbb
jle
pushf
mov
xchg
jns
sahf
dec
sahf
fmul
in
and
cmps
mov
pop
sbb
adc
mov
xchg
pushf
sub
sbb
fstp
mov
add
jns
push
and
pushf
or
call
xchg
pop
test
(bad)
jl
in
mov
push
stc
out
jp
xchg
sub
ss
mov
nop
in
loopne
mov
in
pop
add
xchg
or
mov
jae
xchg
mov
xchg
or
loopne
popa
dec
das
jmp
mov
or
daa
dec
in
loopne
or
and
and
dec
ja
aad
xchg
sub
and
je
sbb
mov
push
sbb
js
inc
leave
adc
cmps
stos
and
js
repnz
pop
stos
adc
push
pushf
outs
xchg
aam
mov
and
sub
shl
and
pop
les
popa
push
and
add
setge
and
dec
mov
rcl
pusha
sbb
movs
in
stos
ds
mov
mov
inc
cdq
outs
ja
shl
fstp
sbb
jp
mov
mov
mov
xchg
gs
push
add
cmp
cwde
test
repnz
or
jecxz
and
push
mov
xchg
dec
dec
adc
shl
call
jp
(bad)
xchg
push
stos
cmp
jne
push
mov
add
ret
mov
dec
jmp
imul
push
or
push
jmp
sub
mov
sti
loope
or
out
sahf
add
add
or
sub
loopne
adc
push
lock
or
mov
add
or
or
adc
sbb
leave
repz
cmp
inc
xor
das
mov
push
je
mov
ins
outs
pop
and
push
cmp
sub
or
pop
outs
adc
pop
mov
and
test
push
add
imul
or
repz
je
push
add
bswap
repz
or
je
sbb
push
dec
cmps
imul
or
imul
out
or
xor
add
sub
sub
jle
call
mov
cmps
push
inc
add
add
and
push
adc
adc
pop
or
or
adc
or
jb
adc
pop
or
pop
push
push
adc
jb
jae
add
enter
test
rol
fcom
shl
inc
enter
sbb
data16
mov
in
add
mov
repnz
mov
jno
aad
inc
jo
mov
jno
inc
jno
inc
jno
aad
jb
inc
jae
jno
aad
inc
je
mov
jno
inc
jne
inc
jno
aad
jbe
inc
ja
jno
aad
inc
js
xchg
adc
inc
jns
pop
mov
mov
popa
mov
fldcw
(bad)
adc
or
jle
mov
outs
adc
pop
ret
mov
jecxz
inc
push
sbb
xchg
inc
mov
lods
imul
in
pop
jno
jecxz
pop
inc
mov
dec
push
test
push
leave
or
inc
jb
test
arpl
and
add
mov
add
mov
push
pop
sbb
scas
add
inc
add
inc
mov
add
mov
and
and
and
and
and
sub
pop
nop
adc
xchg
push
jno
add
mov
adc
mov
fchs
add
jo
xchg
and
jl
cwde
add
enter
inc
dec
mov
nop
xchg
pop
and
arpl
or
enter
mul
jb
nop
push
loopne
loopne
pop
jno
cmp
ret
and
and
sbb
add
push
popf
mov
or
rol
inc
add
cld
jne
and
adc
or
fld
mov
push
pop
rol
add
push
enter
mov
add
in
and
push
shl
nop
test
adc
xchg
or
mov
and
lock
in
or
out
pusha
es
scas
mov
adc
pop
and
fsub
in
jb
mov
fsub
nop
adc
mov
mov
stos
add
add
fistp
in
pop
lds
dec
jo
xchg
push
jne
dec
sbb
and
and
shr
movs
test
das
push
mov
xchg
inc
shr
das
jns
cmps
mov
cmp
mov
and
enter
(bad)
mov
sub
mov
cwde
pop
or
xchg
ret
and
mov
sub
push
and
mov
mov
in
dec
lock
mov
sub
mov
inc
pusha
xor
sub
sbb
stos
pusha
cmp
cmp
or
ret
push
and
jne
push
inc
push
mov
dec
add
push
pop
and
jmp
loop
xor
ins
add
je
inc
add
lods
fild
mov
inc
mov
or
imul
sub
push
adc
push
iret
test
and
in
add
gs
or
sub
loopne
fsubr
nop
popa
inc
jb
push
or
cmp
xchg
xchg
sub
add
add
sbb
cdq
xchg
add
cdq
xchg
xchg
or
xchg
xchg
xchg
sub
add
cdq
cwde
add
cdq
xchg
xchg
push
add
fld
add
mov
add
pushf
jo
enter
adc
push
sahf
cdq
dec
leave
inc
or
mov
xchg
adc
or
or
or
or
sub
cdq
adc
cmps
sbb
or
push
nop
sub
cdq
push
or
sbb
or
lods
sti
adc
xchg
sbb
scas
dec
or
adc
mov
add
mov
adc
add
test
call
inc
imul
fsubr
jle
rol
call
mov
rcl
shl
or
inc
jnp
mov
ins
pusha
mov
mov
loope
in
push
ficom
enter
dec
leave
dec
jae
lods
shr
retf
and
enter
mov
int3
push
nop
add
rol
inc
and
shr
in
xchg
stos
or
dec
lock
test
je
push
pop
leave
enter
add
aaa
outs
les
inc
mov
mov
fs
jmp
push
pop
sbb
out
lds
pusha
je
inc
scas
add
or
nop
mov
add
fs
push
idiv
dec
les
inc
dec
cwde
jl
mov
sub
fwait
add
call
mov
add
xor
or
or
nop
mov
adc
inc
cs
add
sbb
sbb
and
inc
cs
es
add
push
je
in
je
sbb
add
outs
in
loopne
inc
mov
sbb
inc
xor
in
xchg
test
push
jnp
nop
add
mov
sbb
push
dec
sbb
push
xor
pop
jnp
inc
test
cmp
adc
mov
push
imul
cmps
or
outs
sbb
jns
add
and
dec
cmps
add
add
pop
jo
mul
add
es
cs
nop
xchg
or
add
cdq
lahf
nop
or
and
or
add
lods
add
and
add
mov
mov
loopne
les
and
vmovhps
mov
push
dec
and
enter
shl
adc
cmps
inc
push
mov
mov
cdq
fimul
mov
sbb
and
enter
or
sub
and
enter
icebp
sbb
xor
jb
or
bnd
pop
adc
add
sbb
leave
and
add
add
add
or
add
add
add
or
das
push
loope
stos
inc
sub
push
rcr
pop
sbb
cwde
push
jp
adc
and
(bad)
xchg
cmp
add
xchg
inc
enter
add
lods
movs
popa
jb
ror
fmul
sbb
xlat
clc
shl
dec
inc
adc
adc
or
lock
cmp
jne
test
and
jbe
sbb
push
and
jo
push
jl
loop
push
bound
rcr
test
pop
out
jle
push
into
dec
sbb
leave
add
lods
test
enter
mov
stc
pusha
movs
add
xchg
inc
leave
and
les
outs
je
xchg
push
mov
pop
(bad)
out
aam
popa
mov
js
call
jbe
popa
mov
mov
mov
adc
push
jb
sbb
(bad)
fistp
ror
sub
cli
mov
into
inc
je
inc
pushf
jl
fisttp
push
mov
mov
dec
mov
and
or
pop
ret
adc
or
dec
shl
dec
inc
mov
sub
dec
cmp
outs
in
mov
cmps
lgdtd
inc
add
or
dec
(bad)
ds
rol
or
push
inc
add
inc
data16
cmp
pop
stc
test
xchg
mov
mov
imul
in
sar
mov
retf
sub
xor
cmp
mov
in
add
dec
jmp
adc
add
push
movs
fbld
hlt
movs
std
lock
xor
pop
add
cdq
movs
pop
iret
fisubr
or
dec
add
and
rol
ret
adc
add
mov
daa
or
popa
loopne
shl
mov
push
popa
xor
and
sbb
popa
jne
pop
add
mov
cmp
and
aaa
retf
lock
adc
gs
jge
mov
je
push
ss
popa
add
push
push
and
outs
push
and
popa
mov
cmp
push
adc
fidiv
push
enter
mov
lock
pop
add
or
jb
pop
shl
mov
add
loopne
std
repnz
dec
std
mov
test
sub
xchg
cld
dec
or
aam
xor
or
mov
mov
cmp
in
xchg
inc
fimul
add
jmp
ret
cmp
pop
dec
ud2
or
xor
mov
xchg
rcl
and
or
mov
bnd
inc
mov
out
popa
jle
jmp
adc
jmp
icebp
and
inc
add
dec
stos
pop
push
sub
jns
xor
inc
(bad)
push
ret
fist
push
add
sub
cmp
hlt
push
jne
sbb
nop
aad
lods
or
add
mov
mov
inc
inc
pop
dec
mov
sbb
outs
shl
push
or
int3
dec
mov
add
pop
push
shr
and
inc
pop
adc
adc
xchg
cmp
sub
int3
daa
mov
xor
pusha
mov
adc
outs
out
in
loopne
mov
aaa
pop
lds
xchg
popf
ret
sbb
push
jb
movs
fld
mov
mov
push
pusha
fs
and
in
add
nop
mov
push
push
popf
dec
mov
xchg
dec
mov
adc
sub
(bad)
neg
jp
loope
daa
add
(bad)
das
inc
cmp
fidiv
ds
xor
adc
pop
mov
xchg
les
and
pop
retf
jno
adc
sbb
in
mov
clc
sbb
lock
ja
arpl
jbe
es
fisttp
int3
mov
fld
or
inc
je
xchg
pop
add
add
inc
sbb
dec
pop
and
push
or
mov
inc
xchg
lods
lahf
xchg
xchg
sbb
loop
ret
sti
test
dec
add
add
sub
dec
xor
mov
push
rol
adc
xlat
ins
sbb
add
sahf
js
mov
shl
pop
or
les
mov
xor
sub
loope
retf
scas
cmp
sbb
inc
cmp
jne
daa
xor
fistp
mov
cdq
sbb
push
imul
mov
or
xchg
add
int3
jnp
or
mov
es
pop
(bad)
xor
and
dec
push
cwde
sub
and
push
sub
cmp
sbb
dec
jl
inc
inc
jmp
mov
or
js
repnz
loopne
mov
cli
fcomp
xchg
xor
(bad)
das
add
jmp
sar
push
push
and
push
or
cmp
loopne
jo
cmp
outs
shr
add
pop
jbe
mul
and
xchg
mov
sbb
add
adc
adc
dec
and
(bad)
out
sahf
in
ret
imul
enter
in
and
push
mov
icebp
xor
dec
movs
pop
mov
xchg
add
inc
adc
mov
dec
sbb
icebp
fist
call
mov
mov
jp
pop
fild
sub
test
fdiv
push
sbb
pop
mov
lock
lock
(bad)
dec
aad
push
out
push
pop
mov
jbe
out
aad
adc
popa
popa
ret
imul
cmc
dec
hlt
psubb
jge
add
and
add
pop
cmp
cmp
or
(bad)
adc
sbb
push
jb
test
add
mov
jmp
sub
dec
imul
or
movs
jl
mov
push
movs
cmp
xchg
dec
std
xchg
mov
push
aam
fadd
push
and
mov
fadd
and
inc
stc
push
add
out
test
loopne
mov
mov
pop
inc
popf
mov
aam
jmp
pop
add
push
adc
mov
jg
das
cld
dec
sahf
aas
mov
dec
mov
push
dec
int
fmul
mov
in
pop
xchg
in
in
mov
xor
add
jo
dec
and
outs
or
imul
add
adc
cmp
jne
cmp
add
movs
push
sbb
xor
loope
mov
xchg
sub
sub
lahf
sub
lods
add
jbe
dec
cmp
les
or
push
pushf
in
hlt
ror
bound
xor
inc
cmp
and
xor
xor
movs
adc
push
sti
dec
mov
pop
es
(bad)
retf
iret
mov
test
jns
xchg
lock
push
jg
es
pop
xor
pop
lock
pop
add
add
or
push
nop
lds
dec
or
cdq
mov
out
sar
and
mov
cmp
inc
adc
push
push
or
mov
mov
sbb
ins
mov
push
cmp
xor
imul
inc
test
loopne
test
ins
std
fisub
ss
and
outs
ja
xchg
fstp
fsubr
mov
pusha
ja
cmps
pop
inc
shr
jno
lds
xor
xor
mov
and
mov
xlat
sub
popf
sbb
or
pop
push
adc
jae
or
repnz
hlt
cmps
or
push
add
lock
or
or
xor
mov
fisttp
pop
xor
add
imul
adc
push
cmps
ins
mov
sar
push
push
or
rcl
and
(bad)
rol
retf
and
rol
int
popa
cmp
out
inc
rcr
ror
sbb
mov
push
lods
ret
xchg
sub
add
pushf
mov
sub
fs
nop
push
push
mov
cmp
sub
loope
mov
jl
lods
iret
xor
xor
cmp
inc
mov
xchg
fldcw
lods
xor
cmp
in
mov
or
sub
inc
pop
jo
int3
aad
in
pusha
push
pop
mov
sti
fimul
mov
pop
pop
add
sbb
inc
test
cmps
sub
cwde
sub
test
mov
or
je
imul
je
mov
scas
xchg
cs
shr
add
int
jo
dec
ret
fwait
shr
sar
dec
xor
cld
pop
push
pusha
daa
dec
std
and
inc
out
dec
shl
test
pop
mov
ret
adc
lea
stc
or
cmp
or
pop
outs
xlat
cmp
dec
or
ss
add
adc
add
sbb
pop
and
cmp
movs
mov
add
or
or
add
pop
xchg
mov
add
mov
xchg
inc
cmp
inc
xor
les
mov
(bad)
cli
add
inc
inc
add
cmp
les
xchg
lock
outs
int3
mov
cs
cmp
push
inc
sahf
add
cmc
add
or
movs
mov
add
test
clc
ret
push
push
fdivr
mov
push
out
inc
and
jp
rcl
femms
sub
cdq
ret
push
out
or
xchg
xor
and
fiadd
stc
mov
lods
adc
cmp
std
icebp
cli
or
aaa
mov
dec
(bad)
mov
ja
inc
cmp
or
xchg
add
push
xor
ss
xor
xor
leave
pop
test
lods
xor
icebp
inc
dec
xor
test
int
repz
out
and
xor
dec
fwait
xchg
add
jne
add
mov
adc
mov
push
rcl
add
mov
out
add
inc
push
mov
sub
fdivr
mov
add
dec
jmp
imul
push
and
movs
aas
sbb
push
loopne
pop
mov
add
mov
imul
push
lock
cmp
inc
fidiv
jp
aam
rol
sub
pop
pusha
adc
popf
xchg
ret
in
sbb
sub
sbb
mov
xor
push
jns
mov
push
pminub
retf
js
push
mov
or
pop
add
stc
xor
sub
cdq
mov
jl
rol
push
inc
add
jp
(bad)
mov
jnp
sbb
leave
mov
and
dec
sbb
dec
ret
das
xor
push
jb
mov
pop
sbb
sti
dec
xchg
add
nop
jmp
add
pop
popf
xchg
iret
or
xchg
inc
and
icebp
leave
lock
mov
mov
xor
hlt
test
sub
xchg
add
ret
add
push
mov
xor
or
xchg
mov
mov
scas
add
sti
add
inc
ja
xor
stc
jns
mov
or
out
or
or
jmp
imul
js
lods
out
pop
mov
sub
push
pusha
lahf
or
sbb
aas
(bad)
(bad)
pop
push
adc
loop
inc
xchg
jl
in
jmp
stos
movs
push
pop
and
js
movzx
and
jmp
push
and
sub
xchg
outs
add
ret
shl
and
(bad)
or
in
jmp
push
je
addps
fstp
xchg
and
dec
push
inc
add
or
adc
jo
cdq
and
cmp
ins
add
mov
push
jnp
mov
idiv
(bad)
fiadd
mov
and
xor
lea
inc
push
mov
dec
pusha
xor
pop
cwde
xchg
xlat
ror
shl
out
push
fld
fcom
pop
pop
sub
clc
cmp
fsubr
or
clc
aaa
xchg
outs
mov
pop
or
jp
bound
(bad)
fistp
popa
jp
pop
jbe
push
shr
fstp
push
or
inc
or
jecxz
nop
jns
jge
sbb
and
(bad)
add
into
in
or
pop
pop
cld
or
sub
cmp
add
add
jle
pusha
and
inc
sub
sub
idiv
jmp
pop
inc
cmp
jne
fs
lock
in
fadd
imul
fmulp
test
add
mov
adc
in
shl
imul
idiv
or
stos
repnz
add
sbb
call
mov
add
mov
cmps
je
mov
xchg
lock
sub
leave
in
add
sub
loopne
add
mov
popf
xchg
adc
or
lods
cs
or
adc
in
add
fisttp
mov
or
or
xchg
sbb
repnz
mov
jo
and
push
push
mov
cmp
(bad)
adc
sbb
cli
mov
(bad)
dec
inc
pusha
inc
repz
add
mov
mov
sub
fs
xchg
nop
shl
cmp
jo
(bad)
mov
pop
inc
and
bound
mov
fcompp
pop
xchg
cmp
or
mov
jae
mov
xchg
push
inc
jo
adc
es
add
pop
mov
xchg
ins
mov
loope
(bad)
sub
leave
adc
fs
sbb
push
mov
test
push
lock
mov
inc
in
add
dec
adc
cmp
push
and
add
xchg
sbb
add
xchg
xchg
call
mov
push
rol
call
clc
mov
dec
jae
jge
jne
push
cmps
repz
cmp
jns
dec
(bad)
out
jne
out
dec
out
test
in
mov
sbb
and
in
mov
(bad)
mul
leave
lahf
test
fdivr
shl
jle
fcomp
nop
dec
mov
or
rcl
add
xor
and
mov
loope
add
xchg
pop
in
inc
and
and
out
pop
sahf
sub
call
das
shl
dec
fnstenv
dec
repz
aam
les
xchg
mov
add
cdq
mov
lods
test
pop
inc
or
imul
out
pop
push
dec
movs
in
sub
test
pop
mov
xor
and
les
sub
jg
xor
bound
xor
loopne
sub
inc
es
shr
out
repz
mov
and
(bad)
mov
mov
mov
or
mov
or
mov
inc
xlat
nop
sbb
or
cmp
push
add
adc
ins
xor
mov
xchg
adc
mov
retf
test
int3
xchg
inc
cmp
and
cmp
lods
mov
je
lods
add
sub
or
mov
or
jecxz
cmpxchg
cs
adc
inc
sbb
add
shl
cwd
addr16
scas
add
je
ret
les
and
inc
and
jecxz
sbb
iret
add
sub
stos
aam
xor
cmp
or
and
push
and
repz
in
inc
mov
fwait
add
dec
mov
adc
nop
inc
aam
fiadd
push
pop
xchg
fs
xchg
mov
or
ins
mov
test
add
sti
xchg
fisttp
jae
test
jle
in
stos
add
inc
mov
ret
xor
jge
mov
out
mov
js
jae
push
push
aam
sub
ja
jo
and
pop
cdq
retf
push
push
or
movs
sub
ret
dec
sti
inc
pusha
sub
rol
sar
or
mov
cmp
or
mov
push
icebp
sub
push
add
test
push
jmp
add
push
test
sub
sbb
test
ss
out
jp
push
add
mov
mov
fxch
mov
push
cmp
add
sbb
push
fdivr
xor
jg
aaa
lahf
int3
sbb
jg
mov
shr
pop
or
loope
(bad)
dec
cwde
aaa
(bad)
enter
adc
pop
mov
cmps
mov
out
and
call
add
hlt
jb
or
pushf
or
popa
bound
jb
popa
adc
sub
inc
sub
cmp
add
mov
(bad)
pop
cmps
lock
stos
test
pop
pop
stos
lds
xchg
pop
dec
outs
leave
shl
sbb
out
mov
rcr
adc
sub
enter
add
push
xchg
inc
or
loop
ret
push
loopne
dec
(bad)
mov
or
or
hlt
adc
clc
outs
inc
hlt
mov
cmp
out
pop
leave
ret
inc
jae
xchg
sbb
or
inc
add
jmp
movs
out
out
shr
or
mov
gs
mov
aam
mov
test
fmul
sbb
loopne
and
sbb
adc
pop
leave
and
jns
(bad)
test
pop
ror
arpl
cmp
or
outs
xchg
jne
push
mov
cld
push
and
jg
rol
test
test
inc
mov
add
inc
add
or
stos
xchg
adc
cwde
mov
int3
sbb
or
sbb
add
pushf
add
lock
sbb
cmp
sbb
aad
adc
mov
pusha
add
das
ret
adc
dec
dec
sbb
adc
pop
inc
pop
add
loope
aas
mov
and
pop
fisttp
test
mov
or
retf
mov
add
icebp
dec
jo
enter
jge
in
mov
or
into
cmps
or
xchg
or
or
arpl
call
pop
jmp
daa
mov
jle
repz
dec
fwait
push
into
inc
adc
add
nop
imul
push
in
test
push
loopne
aad
in
or
inc
push
jns
les
adc
sbb
mov
mov
mov
test
imul
lods
in
mov
mov
rcl
dec
outs
push
add
mov
push
aad
pop
lods
pop
shr
jo
cmc
es
cmc
jmp
movs
cs
push
ror
ror
mov
jae
xor
sbb
lds
pop
cmc
and
nop
push
push
xchg
cmp
jb
pop
inc
mov
icebp
popf
inc
inc
movs
pop
mov
test
pop
outs
popa
mov
pop
inc
push
dec
or
push
or
pop
pop
add
dec
dec
sub
add
push
sbb
mov
into
xchg
or
je
sub
push
cmps
daa
pop
xchg
xor
div
sbb
pop
mov
or
pop
fadd
inc
push
dec
fstp
adc
xchg
in
push
std
outs
cdq
or
lods
imul
jp
cmp
es
fcmovb
push
dec
fidivr
jne
push
push
lods
dec
pop
and
push
cmps
dec
daa
mov
xor
add
movs
pushf
adc
retf
mov
sub
push
sbb
push
das
ror
jmp
jp
sbb
xor
js
push
xor
xchg
pop
adc
pop
dec
xchg
or
dec
sub
mov
jne
mov
ret
mov
cld
or
jecxz
nop
sub
xchg
dec
cld
jmp
xchg
js
mov
xchg
rcl
dec
pop
test
mov
push
dec
sbb
mov
push
pop
cli
mov
mov
lock
dec
push
fwait
js
inc
and
pusha
cmc
sub
or
daa
movs
mov
push
mov
cvtdq2ps
sub
xor
push
mov
mov
lock
xor
cmp
fsubr
loope
jmp
or
test
pop
push
lods
std
rol
or
pushf
mov
adc
lds
lods
sub
leave
dec
mov
xchg
pop
cmps
and
or
mov
jne
gs
cmp
nop
mov
adc
mov
lock
cmp
call
lds
pusha
mov
stc
aad
or
int3
push
sbb
mov
test
pop
add
or
mov
call
adc
pop
test
jne
adc
sbb
cs
lds
push
sbb
or
add
pusha
push
add
adc
(bad)
jmp
dec
add
lods
xor
mov
push
int3
daa
pop
adc
jno
mov
mov
prefetch
(bad)
sub
mov
xor
adc
add
not
push
mov
(bad)
sbb
or
test
pusha
sbb
loopne
push
les
jno
mov
push
sub
mov
push
popa
pop
sub
mov
cld
jmp
cwde
push
add
aas
cmp
adc
xchg
or
sbb
push
add
or
jns
adc
icebp
loopne
pusha
or
sbb
test
add
inc
cmc
lsl
adc
push
sbb
cld
cmp
adc
inc
push
leave
das
or
pop
pop
and
push
in
les
cmp
mov
or
je
dec
psrlq
cmp
(bad)
adc
fadd
cmp
inc
cmp
imul
add
push
push
jmp
xor
dec
mov
es
aad
fidivr
adc
and
push
xchg
jmp
ins
aad
sbb
movs
jo
push
or
mov
pop
(bad)
xor
dec
mov
cli
scas
push
push
fnstcw
and
adc
lds
or
retf
sahf
fnstcw
(bad)
outs
shl
movs
mov
xlat
xchg
add
gs
and
dec
fcom
repz
inc
test
add
retf
and
in
cmp
cmp
(bad)
lock
push
call
into
mov
adc
pop
(bad)
jmp
std
jne
xchg
lock
adc
or
pop
pop
sub
mov
jne
and
mov
adc
mov
mov
cs
ror
lds
jbe
fmul
add
xchg
lods
push
mov
cmp
imul
or
sub
add
sbb
push
cwde
sti
mov
pop
pop
lock
push
cmp
pop
cld
sub
add
mov
and
or
adc
je
arpl
fldenv
sub
lods
(bad)
xor
mov
inc
mov
ret
loopne
xor
xor
jmp
icebp
or
pop
ja
push
shr
add
mov
xchg
and
push
test
or
jecxz
cmc
or
or
rcl
pop
int3
push
pop
rcr
add
mov
scas
sbb
test
int
test
or
fldenv
cs
out
fs
pop
or
add
cmps
pop
cmp
add
sbb
inc
lds
sar
repz
push
test
lock
cmp
call
jle
sbb
cmp
loope
or
sub
bound
int
cmp
sbb
mov
push
push
jmp
push
ret
scas
sub
aas
cmp
les
daa
lock
lods
or
(bad)
sbb
loop
test
clc
mov
sub
push
test
fst
int3
leave
scas
and
xchg
push
add
in
(bad)
fst
sbb
loopne
xlat
mov
imul
sahf
adc
jge
push
sbb
sbb
mov
adc
sub
pop
xchg
pop
pop
inc
inc
cdq
into
mov
or
add
lea
dec
es
or
adc
push
adc
aas
shr
push
in
cmps
ret
jne
out
enter
scas
xor
mov
fistp
adc
inc
or
add
add
and
(bad)
bound
sbb
aas
sbb
mov
mov
or
dec
xchg
add
leave
mov
aam
stos
ror
or
jno
fmul
push
in
scas
jp
adc
add
(bad)
sub
cmp
inc
(bad)
rol
push
in
loopne
add
mov
mov
dec
dec
rcl
adc
mov
loopne
call
adc
and
fdiv
and
ret
cmp
enter
adc
push
ror
call
xchg
pop
sbb
test
test
xchg
or
mov
fcom
sbb
mov
push
sbb
lock
je
mov
sahf
mov
jmp
neg
and
int
xchg
push
es
push
sbb
sbb
int
pop
cmc
mov
mov
rcr
stos
mov
add
mov
and
je
xor
mov
pop
pop
jmp
cli
push
cmp
xor
jle
outs
jle
jp
pop
mov
push
xchg
imul
fs
adc
sbb
and
push
adc
cmp
adc
jnp
pusha
test
movs
xor
in
paddq
mov
mov
or
mov
mov
mov
pusha
add
hlt
mov
mov
add
shr
inc
shl
les
jnp
sbb
and
dec
cld
and
dec
xchg
dec
es
mov
sub
mov
mov
sub
in
and
dec
retf
ja
je
xchg
sub
fisubr
push
lea
mov
mov
es
add
or
or
push
sub
loopne
cmp
lods
and
or
sbb
jns
inc
or
mov
ins
mov
jl
inc
jae
rcl
push
test
inc
cmp
clc
dec
call
inc
add
jmp
das
imul
aas
and
enter
or
push
dec
popa
xchg
xchg
inc
fnsave
mov
dec
xchg
and
or
cmp
push
ror
adc
sti
ins
pop
(bad)
cmp
dec
xchg
pop
iret
ds
jge
add
adc
xor
xor
popa
icebp
or
cdq
push
js
bound
inc
mov
ds
xor
cmp
js
idiv
mov
cwde
cdq
into
sbb
push
add
push
inc
mov
fisttp
int
inc
and
inc
outs
out
clc
jl
jge
jae
or
fwait
add
xchg
dec
shr
xor
cmp
lods
mov
cmps
inc
outs
ror
ja
dec
sub
test
in
and
imul
aaa
add
add
mov
add
inc
cmps
and
push
loopne
add
pusha
cmp
in
push
push
jne
outs
bound
or
std
inc
loope
out
xchg
daa
mov
test
inc
add
mov
mov
icebp
jmp
int3
sub
pop
or
popf
inc
or
cs
dec
pop
add
mov
mov
xor
stos
jns
mov
dec
repnz
loop
push
nop
gs
clc
add
push
aam
mov
add
jae
pop
xor
ret
repz
dec
mov
mov
sahf
out
ins
(bad)
push
dec
jge
push
aad
repnz
mov
enter
mov
popa
pop
loope
leave
xor
inc
loop
nop
aad
in
vmovups
imul
lock
bound
fadd
adc
les
leave
xor
cmp
pusha
pop
cmp
shl
pusha
sub
adc
push
or
push
jb
pusha
into
movs
or
jb
push
jb
or
inc
mov
popa
movs
ja
hlt
or
jne
push
loop
aas
icebp
ins
and
sbb
push
test
add
scas
lock
repz
mov
sbb
cmps
int3
sub
sub
add
sbb
adc
jge
aaa
push
sub
inc
sbb
inc
imul
test
pop
cmp
and
sub
or
xchg
adc
and
call
mov
lods
or
adc
adc
adc
sbb
mov
push
or
inc
fdivr
and
loopne
or
dec
jb
adc
or
enter
cmp
rcr
test
or
addr16
scas
cmps
std
pop
cmp
es
test
das
mov
pop
ret
pop
dec
stos
dec
lods
scas
jp
and
xchg
inc
pop
mov
xor
xchg
and
adc
xchg
push
cmps
ja
and
scas
test
leave
in
call
loope
push
in
loopne
pop
int3
pop
mov
in
dec
push
xor
jmp
adc
pop
fld
mov
push
xor
stos
add
cmp
xchg
call
pop
int3
jo
or
xchg
aaa
pop
or
sub
pop
dec
adc
sbb
push
push
add
and
push
fs
sbb
clc
movs
leave
cmp
cmp
xor
inc
and
fld
jmp
or
js
push
jno
push
or
or
push
js
test
xchg
xor
fwait
or
pop
jecxz
test
add
adc
ins
je
not
cli
mov
je
call
ror
or
aam
mov
in
lahf
adc
inc
xor
jbe
clc
add
jge
movs
add
and
cmp
mov
test
mov
mov
cld
std
xor
lock
mov
out
out
dec
inc
stos
lea
mov
inc
and
(bad)
movs
push
mov
mov
xchg
mov
add
rep
sbb
cld
add
sbb
in
int3
push
pushf
movs
(bad)
push
pop
push
or
mov
sbb
mov
pop
add
lea
mov
or
or
mov
add
sbb
inc
ret
sbb
and
loopne
xchg
xchg
stos
sub
add
push
scas
pop
push
and
clc
cmps
or
outs
loopne
sub
cld
test
jmp
and
inc
ja
in
fdivr
and
adc
shr
xor
add
mov
pop
jmp
jp
ja
repz
cli
xchg
jmp
inc
xchg
ds
enter
je
outs
sbb
jmp
ins
gs
add
(bad)
xlat
inc
push
neg
push
or
add
pop
adc
and
cmp
add
cmp
les
mov
adc
inc
sub
xchg
ret
jo
add
push
ss
dec
mov
enter
inc
or
js
pop
add
sar
xchg
mov
and
inc
add
lea
hlt
sbb
inc
add
loopne
loopne
mov
ror
div
mov
jp
popa
add
sbb
test
mov
cmp
test
and
cld
mov
(bad)
sti
loope
adc
ss
mov
pop
inc
pop
add
and
mov
clc
in
jbe
inc
jp
mov
inc
add
lock
jbe
dec
mov
popa
cmps
mov
call
cmp
push
cdq
xchg
int
dec
cld
test
lods
mov
lods
mov
pop
inc
inc
add
and
movs
into
push
cmc
pop
mov
push
pop
je
test
jns
std
dec
push
sbb
dec
jo
scas
sbb
push
ja
dec
sbb
mov
pop
pop
pop
mov
fild
scas
mov
sbb
push
adc
std
or
push
push
mov
stos
adc
out
and
mov
sub
or
imul
adc
ds
int
sub
scas
pop
cld
sub
add
xchg
scas
push
les
add
inc
shl
div
xor
out
add
cwde
mov
and
popa
pop
jbe
repnz
jns
rol
loop
lea
inc
clc
not
and
ror
mov
pop
fiadd
add
sub
adc
mov
pop
rcr
adc
jne
sbb
mov
pusha
arpl
ret
inc
add
daa
cld
cmp
cli
mov
lea
sbb
pop
or
adc
mov
pop
je
pop
loop
mov
push
and
and
sub
dec
and
or
sbb
ror
not
inc
pop
ds
movs
mov
clc
cmp
sub
lea
sbb
jns
pop
jmp
dec
xlat
dec
inc
inc
add
add
xchg
les
add
sbb
adc
jle
bound
push
add
add
dec
adc
ins
je
lods
or
inc
add
jmp
(bad)
jbe
dec
in
push
add
imul
mov
pop
scas
fst
shl
bound
scas
cmp
pop
sub
clc
pop
ja
push
sbb
dec
scas
inc
or
push
cmp
pop
push
int3
jns
mov
sub
mov
adc
pop
aas
cmp
xor
cmp
mov
pop
pop
cmp
or
xor
push
or
je
pop
gs
(bad)
jnp
sbb
mov
jmp
xor
mov
loop
loop
sbb
cmp
clts
mov
call
jne
xchg
push
fadd
test
mov
jmp
lods
and
xchg
xchg
aam
ins
sub
xor
bound
pop
dec
cmp
mov
xor
pop
sub
and
icebp
dec
cmp
je
jge
je
xor
test
and
ds
push
inc
int3
cmp
neg
or
outs
js
push
dec
cmp
push
jecxz
xchg
mov
inc
adc
and
in
xchg
adc
shr
sub
pop
mov
mov
(bad)
call
repnz
adc
mov
or
scas
pop
cli
js
add
cmp
mov
stos
add
fisttp
push
movs
inc
xchg
pop
inc
stc
lods
ja
icebp
xchg
mov
xor
aas
mov
jno
daa
or
adc
cmp
cmp
jb
mov
pop
jbe
or
mov
es
add
jmp
lds
loop
add
hlt
inc
xlat
bound
call
dec
adc
push
jle
mov
sub
add
add
adc
xor
sub
mov
or
dec
clc
bswap
xchg
fwait
retf
push
push
push
sub
push
xchg
unpcklps
dec
hlt
jne
ret
loop
rol
in
mov
push
call
cmp
not
or
push
ins
mov
push
ret
outs
add
cmps
and
jmp
test
mov
shr
mov
ds
add
jne
cwde
cmp
pop
cmp
or
imul
mov
clc
or
mov
add
or
add
fisttp
add
and
add
add
fdivr
adc
or
mov
or
arpl
daa
push
mov
inc
es
push
adc
inc
shl
cmp
or
adc
inc
cmp
and
scas
(bad)
js
data16
rcr
sbb
sbb
xchg
adc
ins
je
inc
jne
xor
ja
into
mov
xor
das
xor
push
in
add
inc
das
and
cdq
add
inc
rcr
or
cmps
add
or
sti
adc
xchg
stc
mov
or
enter
mov
and
shl
push
movs
ret
inc
and
pop
pop
push
or
loopne
add
adc
or
add
movzx
aam
out
xchg
sub
push
sub
inc
jl
je
add
fadd
push
rcl
movs
mov
cwde
(bad)
daa
cmp
call
pop
sbb
retf
xchg
and
mov
sbb
and
aad
mov
and
adc
sub
xchg
in
adc
push
mov
pop
xor
push
daa
xor
add
cmp
jb
xlat
and
cdq
lahf
add
adc
mov
ret
fs
sbb
retf
retf
push
mov
mov
jg
mov
push
add
leave
jg
or
pop
and
push
scas
jmp
ss
mov
push
push
jmp
xchg
dec
mov
and
xor
(bad)
out
and
mov
add
jno
push
xor
jae
add
push
lds
pop
sub
loopne
int
pop
xlat
mov
nop
adc
sub
mov
mov
xlat
lahf
in
dec
enter
and
push
aam
inc
cli
inc
es
ficomp
test
and
cmp
mov
or
pop
dec
add
cdq
js
cdq
lock
test
mov
push
jmp
and
adc
mov
and
xchg
lock
sar
push
sbb
int
daa
mov
popf
and
adc
xor
push
sar
dec
add
aam
cmp
cwde
lock
cmp
cmp
fisubr
push
xlat
and
mov
adc
fdivr
xchg
xchg
call
movs
dec
cmp
sar
push
jl
mov
iret
or
pusha
push
clc
iret
mov
mov
cmp
je
jne
push
mov
add
add
sub
imul
add
xchg
pop
pushf
cmp
cmp
push
sub
inc
cmp
or
mov
adc
mov
int3
cmp
ror
ja
jne
adc
or
mov
jg
scas
cmp
retf
cmp
loopne
jo
or
mov
je
rcl
enter
mov
rcr
mov
jecxz
fsub
pop
mov
jl
call
push
push
repz
pushf
fcomp
(bad)
sbb
mov
jmp
(bad)
shr
jge
jmp
xchg
cs
jo
ss
add
adc
xchg
inc
ins
mul
sbb
adc
cmp
fadd
mov
das
or
push
push
(bad)
test
mov
rcl
jmp
shl
or
je
or
inc
inc
push
aaa
and
xchg
mov
(bad)
aas
inc
dec
xchg
fidiv
add
push
retf
lods
mov
mov
ficom
dec
out
imul
icebp
sbb
sub
mov
retf
push
jecxz
pop
jg
fwait
(bad)
xor
adc
call
or
mov
dec
pop
add
sub
or
push
rol
imul
or
test
rcl
adc
add
mov
nop
inc
movs
add
inc
add
mov
dec
push
ja
pop
push
mov
inc
adc
(bad)
sbb
adc
jno
clc
inc
or
iret
stos
mov
cmp
or
fisubr
add
jne
xor
jmp
dec
jecxz
inc
bound
dec
mov
inc
jbe
cmp
jne
pop
inc
add
js
fnstsw
or
xchg
test
js
or
sub
mov
pop
mov
out
or
out
inc
int
push
jae
dec
add
sub
add
cmps
outs
jae
adc
add
or
jbe
push
jle
mov
pop
jmp
sub
fwait
inc
push
lea
jmp
sbb
data16
aaa
push
test
sbb
mov
jns
ja
add
inc
cmp
and
jb
lock
aam
stc
loopne
mov
in
call
jb
sbb
sbb
fwait
mov
mov
jbe
xor
loopne
clc
push
pop
mov
sbb
leave
lock
pop
pop
sub
sub
ja
jnp
test
jo
ja
neg
pop
mov
xor
add
dec
pop
sbb
xor
dec
jne
adc
repz
rol
inc
xchg
rol
inc
pop
add
add
xchg
push
das
jmp
sti
stos
add
hlt
inc
cmp
test
jne
int
push
jae
push
arpl
mov
push
jo
or
xor
call
mov
and
pop
xor
mov
jbe
into
inc
xor
scas
xchg
add
sub
sub
cmp
jbe
das
js
movs
outs
or
xor
inc
sbb
icebp
xchg
icebp
inc
sub
cmp
sbb
popf
jp
push
ret
les
xor
(bad)
(bad)
imul
sti
cmp
mov
lea
mov
shl
clc
jne
out
xor
sub
xor
cmp
je
pop
pop
sub
inc
(bad)
fsubrp
mov
cwde
je
jbe
xchg
mov
or
jbe
push
sub
sbb
xor
or
in
jb
jo
push
pop
sub
es
or
add
mov
push
sysret
sbb
cmp
loope
aas
and
cmp
jb
and
and
arpl
push
inc
lea
rcl
sahf
pop
mov
sbb
ins
pop
outs
and
test
pop
cmp
push
es
(bad)
mov
pop
mov
pop
dec
sub
xor
adc
pop
mov
imul
add
dec
sub
ins
sbb
pusha
cmp
dec
or
cdq
jecxz
xor
push
xor
push
mov
or
or
(bad)
pop
sub
dec
push
adc
pop
vcvtsd2si
mov
sub
or
gs
daa
and
mov
and
jg
push
sbb
std
retf
adc
dec
and
or
fsubr
mov
dec
(bad)
and
inc
mov
dec
xchg
and
adc
mov
sbb
push
pop
inc
sbb
sub
sbb
sub
dec
push
push
jno
or
push
sub
push
js
push
sti
mul
sbb
(bad)
(bad)
sub
cmp
sub
mov
mov
adc
daa
mov
sub
add
fidivr
push
dec
or
jbe
push
ret
cmp
push
mov
imul
push
jnp
out
push
ret
int3
je
sbb
jae
adc
dec
ror
push
mov
mov
xchg
or
rol
sbb
add
sub
cmp
pop
jmp
xor
xchg
push
outs
and
push
mov
pushf
sbb
adc
pop
pop
push
call
mov
adc
call
sbb
or
das
test
mov
sar
inc
and
ja
cmp
adc
adc
dec
call
aaa
in
xor
stc
enter
or
adc
into
or
add
push
xchg
inc
push
sbb
dec
or
mov
sub
pop
sub
sbb
or
push
jmp
push
inc
xor
mov
adc
pop
inc
shl
push
mov
(bad)
loopne
add
cdq
cmp
sub
xor
outs
and
or
dec
or
xor
pop
mov
je
and
inc
pushf
cmp
mov
fist
cmps
test
or
in
mov
repnz
test
clc
aas
bound
clc
(bad)
jne
arpl
fucomi
mov
push
pop
ror
mov
cmp
xchg
adc
jae
lock
sbb
pop
or
inc
sahf
push
movs
mov
fs
push
mov
jo
ret
loopne
xor
hlt
cmp
dec
xor
lock
xor
sbb
pop
pop
pop
dec
fucom
or
scas
mov
cmp
aaa
mov
add
xchg
or
mov
xor
pop
mov
xor
mov
jo
add
adc
int
call
test
xchg
add
cmp
and
lds
sbb
int3
dec
ret
xchg
les
jno
and
sbb
mov
inc
push
mov
fwait
ret
data16
add
jl
push
push
or
add
shl
pusha
jg
xor
ins
sub
inc
push
push
ret
and
adc
dec
mov
push
xor
out
int
rcr
clc
and
mul
pop
adc
dec
xchg
mov
inc
loopne
popa
fadd
sub
and
enter
pop
enter
nop
pop
mov
(bad)
mov
mov
pushf
sbb
jne
adc
fdivr
or
or
pop
sbb
pop
xchg
imul
push
xor
sbb
adc
push
inc
pusha
mov
iret
inc
jl
jmp
adc
pop
jb
scas
sbb
js
int
push
sbb
add
or
push
in
in
mov
test
ret
popf
jns
jmp
call
arpl
pop
push
in
pusha
test
cmps
dec
jb
fcomp
push
pusha
cmp
sbb
call
cmp
into
push
cs
pop
xor
retf
xchg
cmps
imul
retf
sbb
adc
mov
xor
cmp
add
nop
loopne
bound
mov
mov
mov
sbb
mov
retf
fstp
ss
movs
cs
xchg
sub
test
mov
mov
push
sar
iret
and
mov
pushf
mov
mov
sbb
mov
loopne
fsub
inc
and
dec
inc
sub
dec
ja
push
xchg
or
nop
das
pusha
(bad)
aad
sbb
jl
mov
aas
inc
push
enter
mov
clc
pusha
adc
(bad)
push
xor
inc
sub
inc
mov
cmp
jae
cld
pop
sti
stos
shr
jne
sbb
mov
inc
jmp
popa
ret
sti
push
add
mov
sub
sub
and
inc
test
lock
lea
popa
push
push
jmp
into
xor
sbb
xor
mov
pop
pop
add
test
push
add
clc
adc
repz
mov
xchg
dec
test
sub
mov
lods
push
adc
sub
and
test
pop
enter
lods
cmp
dec
push
ins
stos
loope
aad
cmp
loopne
and
xchg
or
adc
test
pop
jno
xor
and
test
rep
pop
dec
dec
mov
shl
or
or
rcr
mov
xchg
add
dec
shl
xchg
pop
inc
or
enter
push
pop
pop
and
or
mov
stc
or
mov
push
xor
mov
push
shl
pop
mov
inc
sar
pop
xchg
adc
call
daa
int
xchg
loopne
push
and
xchg
inc
jge
and
adc
loopne
mov
cmp
push
push
push
in
sbb
or
sbb
sbb
adc
rcr
sbb
lock
mov
and
sbb
and
jae
ret
and
loop
les
and
shr
push
je
lods
and
inc
lods
and
enter
sub
sbb
adc
sbb
cs
jb
imul
inc
push
jl
movs
call
fld
pop
add
ins
retf
xchg
add
inc
lds
adc
daa
dec
test
xor
stc
jb
dec
inc
xor
loopne
sar
pop
stos
mov
and
push
add
jae
xlat
add
or
lock
lea
mov
pop
pop
daa
js
bound
add
push
arpl
pop
jne
sub
add
push
xchg
xchg
pop
adc
push
mov
cmps
mov
and
jmp
adc
mov
mov
leave
ret
test
push
add
or
inc
mov
aam
dec
pop
jmp
fadd
dec
jns
aaa
pop
or
popa
xchg
scas
pusha
ret
bound
xchg
inc
jbe
fimul
fst
icebp
mov
and
adc
and
sbb
lock
push
nop
data16
lock
in
sub
add
jb
add
sbb
lock
retf
adc
jb
pop
cmc
dec
inc
jmp
pop
mov
dec
push
test
xlat
pop
push
daa
pop
xchg
jbe
push
pop
dec
fiadd
je
mov
aaa
in
clc
(bad)
shr
rcl
jl
add
mov
pop
xor
and
lock
mov
gs
in
xor
call
or
bound
sub
jecxz
push
push
cmp
repnz
sub
mov
ins
mov
dec
xchg
pop
mov
movs
es
xor
jae
ftst
or
rol
mov
cmp
jb
aam
and
or
jb
test
pop
mov
retf
les
and
cmp
aaa
int3
daa
add
daa
fmul
in
sbb
loopne
mov
push
loopne
movs
jg
add
sub
sub
push
sub
push
and
cmp
sbb
push
wrmsr
push
cmps
xchg
push
cwde
adc
mov
cmp
cdq
nop
and
adc
adc
loopne
push
mov
adc
inc
retf
out
imul
push
fmulp
adc
jo
add
popa
mov
push
and
popa
pop
enter
int3
and
jge
lahf
cmp
dec
dec
call
pop
daa
sub
push
into
jne
xchg
or
scas
rol
sub
push
adc
xor
add
inc
das
sbb
or
rol
sub
or
push
lahf
lods
pop
sar
and
sbb
add
inc
adc
inc
xchg
sbb
push
sbb
daa
mov
push
xchg
inc
and
xor
popa
pop
movs
mov
lods
or
fisttp
dec
ror
or
cmp
add
xor
pop
pop
inc
mov
push
mov
mov
clc
(bad)
(bad)
jmp
adc
dec
je
iret
xor
nop
or
lods
push
das
inc
dec
add
fcom
inc
in
add
arpl
es
and
xchg
xchg
adc
add
int3
push
bndstx
sub
test
and
mov
add
call
cmp
gs
bound
push
push
imul
push
fild
adc
daa
push
sub
mov
pushf
out
mov
mov
dec
sbb
mov
int
pop
cmp
add
sbb
mov
push
adc
pushf
popa
scas
loope
xchg
or
je
add
aam
lock
out
pop
inc
pop
outs
pushf
fcmovnb
xchg
inc
push
push
dec
add
mov
sbb
pop
cmp
fstp
sbb
or
jo
xchg
test
xchg
inc
mov
adc
pushf
les
jno
cdq
adc
xor
push
adc
es
add
je
dec
out
push
pushf
bound
ret
fisttp
das
cs
shl
enter
movs
movs
shl
mov
jns
(bad)
fild
imul
and
sbb
mov
and
mov
dec
ss
nop
es
sub
mov
sub
in
imul
push
mov
adc
mov
inc
mov
daa
in
cdq
sbb
loope
lods
mov
in
xchg
sbb
nop
sbb
add
(bad)
out
adc
or
das
sbb
call
shr
mov
mov
pop
xchg
inc
and
adc
xor
adc
and
push
or
mov
xor
inc
ins
sbb
and
leave
(bad)
cld
repz
test
std
add
dec
or
pop
into
xor
scas
dec
pusha
and
mov
jmp
cmp
imul
and
es
iret
mov
arpl
sub
mov
add
adc
adc
add
mov
(bad)
imul
sbb
add
mov
mov
push
aam
test
add
adc
add
int3
leave
cwde
sub
arpl
movs
and
pushf
mov
xor
sub
push
dec
jo
add
xor
out
adc
inc
pop
pop
dec
sbb
cmp
xchg
push
and
inc
fcomp
sar
push
lods
add
push
mov
add
lods
or
in
stc
mov
in
popa
and
(bad)
xchg
movs
adc
nop
retf
repnz
cmps
into
and
and
dec
and
and
inc
iret
jmp
dec
je
mov
cli
lods
and
pop
add
and
fst
outs
retf
push
cmp
jnp
shl
nop
dec
sahf
adc
scas
adc
adc
pop
adc
por
je
add
shr
and
test
xor
xchg
cmp
inc
add
stos
push
add
push
mov
sub
push
xlat
xchg
push
cmp
pop
jb
sbb
imul
cmps
rol
loopne
xchg
xor
ret
mov
pushf
sbb
mov
dec
sbb
fdiv
dec
popa
stos
adc
push
cmp
in
xlat
and
add
rol
sar
mov
xor
mov
movs
add
and
int
inc
scas
jbe
push
fnstenv
push
ins
xchg
cmp
mov
hlt
(bad)
call
jmp
mov
(bad)
leave
add
push
fmul
xor
adc
sbb
sub
mov
fisub
lea
cwde
pop
bound
lahf
add
mov
inc
add
iret
daa
sub
mov
or
pop
add
es
add
ret
xchg
xor
in
pop
cmp
sbb
push
jmp
sbb
adc
enter
ins
inc
jle
(bad)
imul
mov
and
mov
leave
cmp
pop
stos
add
sub
jo
shl
loop
clc
fisttp
sbb
adc
pop
shl
gs
pop
repnz
repnz
jmp
add
rol
aam
dec
xor
and
jecxz
in
jmp
ror
loopne
add
pop
je
aad
pop
in
jne
sub
sub
jmp
mov
fisttp
pop
cmp
mov
push
pusha
mov
xchg
outs
inc
popa
adc
es
popf
clc
pop
repnz
push
jno
mov
pop
xor
sub
push
mov
ret
add
leave
xor
fwait
inc
xor
dec
pop
test
cmc
push
gs
mov
xchg
test
outs
pop
gs
adc
popa
les
inc
arpl
inc
sub
fs
pmaddubsw
push
aaa
pop
cmp
xor
jne
pop
pop
shl
shl
sbb
or
daa
push
mov
xchg
add
jg
or
outs
popa
xor
out
outs
or
lea
push
jae
out
movs
pop
xchg
shr
jo
ror
rcr
mov
add
or
push
push
lods
ret
jno
or
pop
xchg
imul
frstor
push
ret
or
mov
inc
cmp
jb
add
ja
rcl
mov
adc
rol
xor
adc
and
adc
inc
dec
cmp
xchg
add
push
inc
mov
cmp
js
pop
and
pop
push
cmp
add
inc
xor
mov
push
fist
xor
cmp
xor
cmp
add
inc
fcom
xor
jne
adc
cdq
dec
enter
dec
mov
cmp
jo
mov
inc
shl
or
call
push
dec
fwait
out
and
or
push
inc
pop
mov
xchg
jns
ins
push
xchg
seto
dec
mov
add
test
inc
inc
or
loopne
sbb
or
xor
dec
push
in
sbb
add
sub
imul
enter
jb
mov
add
pop
or
pop
adc
push
inc
cmc
sub
stos
cmps
fld
aaa
push
cld
rol
test
stos
not
ret
mov
inc
jae
inc
and
jns
lock
add
dec
xor
push
mov
or
xor
movs
add
call
ret
pop
es
mov
pop
sub
setae
jg
inc
cmp
jb
enter
push
inc
data16
pop
sbb
aas
jl
and
dec
imul
dec
xor
fisttp
cmps
cmp
jmp
mov
into
push
nop
jo
lahf
ins
shl
push
add
outs
or
int3
mov
add
cmp
jbe
dec
cmp
xor
ficom
push
lock
mov
sahf
pop
arpl
je
loope
orps
push
cld
pop
push
fldcw
dec
addr16
sbb
push
add
sbb
push
jo
add
lods
sbb
inc
loop
adc
push
stc
sub
xchg
inc
mov
sub
push
pusha
sbb
(bad)
idiv
int3
adc
mov
imul
imul
adc
cmp
loopne
and
add
mov
test
add
loope
enter
mov
sub
pop
mov
and
mov
scas
add
push
adc
push
inc
xor
add
cwde
popa
mov
sbb
lds
rcr
push
fsub
add
fist
push
das
int3
and
add
es
push
sub
xchg
jle
popa
pusha
int
pop
aad
daa
xchg
jl
in
add
loopne
dec
imul
loopne
mov
aam
mov
je
ins
mov
fmul
dec
dec
xchg
int3
stos
add
and
daa
jbe
or
mov
mov
dec
add
fidivr
mov
sbb
jge
push
push
push
push
jnp
popa
push
cmp
ja
push
dec
pusha
add
lods
mov
jno
and
sbb
add
cmp
adc
aam
adc
adc
je
cmc
jo
retf
loope
xchg
jne
dec
out
dec
inc
pop
ret
sbb
dec
addr16
push
int3
jl
fistp
test
push
jo
loopne
mov
add
ins
je
sbb
dec
push
sbb
rol
jb
cwde
jno
inc
and
pop
mov
pop
stos
pushw
popa
mov
clc
mov
cmp
ds
lahf
xchg
inc
(bad)
add
dec
repnz
es
stos
inc
add
int3
ja
mov
adc
std
and
pop
imul
dec
inc
imul
daa
mov
xor
jbe
cmp
fld
dec
das
and
(bad)
jmp
adc
jno
fs
xor
aas
cmps
outs
test
push
or
adc
xor
or
ja
xor
push
xor
or
add
push
push
in
popf
sbb
push
pop
(bad)
aam
sbb
outs
mov
test
add
jns
test
jg
push
shr
xor
jne
movups
sbb
mov
adc
adc
pop
ins
add
sub
xor
test
cmp
jmp
jmp
pop
mov
js
test
fistp
push
xor
dec
ds
inc
inc
add
idiv
and
jmp
xor
xchg
int
aam
xor
push
inc
mov
mov
dec
loopne
sub
or
jge
sub
jg
cmp
xor
pop
inc
(bad)
mov
test
cmps
test
mov
push
clc
push
fimul
fcom
mov
add
and
jne
adc
jge
jle
bound
arpl
adc
(bad)
fistp
lea
cmp
dec
sbb
fadd
jbe
push
or
adc
xor
dec
push
add
sub
dec
mov
hlt
dec
test
out
sar
lea
ds
fidivr
cmps
fcomp
lea
sar
or
xor
inc
xchg
loopne
mov
sub
repz
mov
mov
xchg
dec
or
inc
inc
inc
hlt
jmp
pop
into
push
jle
push
js
and
cmp
jle
movs
sbb
sbb
sub
outs
dec
sbb
jge
out
test
js
fimul
adc
push
jle
inc
dec
sbb
dec
dec
jns
mov
sahf
inc
arpl
add
pop
sbb
add
mov
adc
popa
jge
sbb
jle
cmp
cld
in
fnsave
jmp
ds
cmp
nop
or
mov
sbb
mov
add
mov
rcl
add
or
adc
or
xor
das
(bad)
xchg
not
je
push
dec
pop
jns
jmp
arpl
xor
mov
outs
mov
push
(bad)
in
or
cmp
loop
lea
dec
sub
pop
or
jmp
ds
cli
cmp
mov
iret
nop
test
or
add
shr
add
shl
sahf
test
add
ins
mov
out
ret
cmp
jg
sbb
mov
mov
leave
push
es
loopne
arpl
add
sbb
sub
pop
adc
js
dec
mov
hlt
or
jmp
nop
and
dec
mov
xor
cmp
or
push
sbb
dec
lock
xor
cmp
lods
jg
call
test
stos
call
fiadd
push
repnz
sar
test
push
outs
cmp
jo
adc
pop
inc
xor
gs
call
dec
mov
jp
push
dec
add
cmp
inc
test
sub
push
or
ds
sub
popa
add
and
inc
mov
dec
xor
adc
lods
mov
add
aad
test
je
push
inc
add
scas
mov
push
mov
sbb
and
mov
lods
jge
push
rcl
jge
dec
add
cmp
test
push
movs
xchg
mov
or
push
je
add
test
or
hlt
xchg
lds
icebp
jne
adc
int
ins
aad
out
shr
test
sbb
pusha
inc
dec
inc
sbb
and
sub
fcomi
test
add
push
stos
add
pushf
xor
sub
or
adc
pop
into
hlt
je
xlat
call
mov
adc
fimul
mov
add
push
inc
dec
pop
jne
pop
xor
fstp
lea
in
fld
rol
mov
(bad)
mov
popf
jmp
dec
call
inc
in
jecxz
sti
ret
scas
add
int3
mov
rcl
sbb
xor
mov
loop
in
loope
adc
xor
sar
cmp
add
clc
ja
inc
jmp
cdq
cmp
sbb
pop
and
iret
mov
xchg
test
popf
sbb
cmp
lahf
xlat
js
or
div
rol
test
fsubr
dec
outs
mov
cmp
and
mov
ret
sbb
bsf
push
sbb
mov
dec
aas
push
mov
add
push
or
cwde
jns
xor
inc
pop
push
mov
dec
add
mov
jb
adc
mov
sbb
fs
mov
(bad)
pop
retf
push
scas
jmp
es
nop
fnstsw
push
adc
hlt
or
into
je
sbb
add
add
fs
pop
pop
push
sub
fdivr
stc
jp
add
out
call
mov
popa
jge
test
je
sbb
xchg
jmp
adc
jecxz
nop
ins
icebp
jmp
mov
inc
adc
in
adc
jmp
adc
in
mov
mov
add
cmp
cmp
fwait
je
fwait
inc
add
shl
nop
push
pop
jecxz
in
xchg
adc
cdq
mov
dec
pushf
sbb
stos
jo
test
(bad)
ss
push
dec
mov
scas
pop
nop
push
add
aad
mov
ret
add
dec
test
xchg
fs
fs
dec
cmp
call
arpl
mov
push
shl
pop
push
test
test
ret
push
inc
xor
movs
push
cmp
shl
in
adc
lahf
dec
and
adc
sub
mov
xor
dec
pushf
cwde
loop
ret
mov
jbe
and
nop
repnz
std
dec
add
dec
sbb
int3
and
push
cli
fldenv
je
dec
ret
adc
push
cmps
cmp
jg
test
push
dec
jle
into
xor
bound
arpl
and
cs
scas
mov
push
lea
mov
inc
test
jle
mov
loopne
push
push
repz
xchg
lea
adc
sbb
pop
test
inc
aad
adc
scas
leave
sbb
sbb
rol
or
mov
push
pusha
xor
pop
inc
or
popa
inc
(bad)
nop
rcr
add
cmp
sub
add
call
sbb
sbb
(bad)
(bad)
push
je
and
jp
movs
xor
mov
sbb
pop
cmps
cmp
dec
mov
sub
push
xchg
into
outs
fidivr
adc
mov
add
cmp
mov
mov
mov
xor
xchg
adc
add
mov
xchg
mov
jo
inc
adc
cmp
cmp
mov
nop
js
ror
pusha
mov
pusha
mov
xchg
fisttp
pushf
mov
jmp
push
or
in
shr
cmp
in
pop
mov
jge
and
cmps
icebp
mov
loope
cmp
mov
cwde
je
adc
fnop
leave
jb
mov
pushf
add
pop
mov
cdq
inc
add
in
int
xor
mov
or
jne
cmp
xor
les
dec
push
add
adc
cwde
ins
mov
adc
and
add
fs
nop
(bad)
push
add
popa
or
dec
dec
js
test
mov
popa
or
cmp
pop
(bad)
inc
repnz
pop
lock
jmp
das
or
push
pop
xchg
rol
add
mov
or
jno
mov
rcl
xor
fnstcw
aas
dec
imul
es
cs
ror
push
into
or
xor
xlat
fistp
sahf
xchg
mov
or
sbb
mov
test
scas
lods
jle
leave
and
mov
push
or
mov
test
xor
stos
inc
dec
push
movs
mov
xor
push
ins
inc
mov
pop
dec
push
fild
call
sbb
and
sbb
sbb
add
imul
out
in
sahf
mov
pop
adc
dec
xchg
mov
out
xchg
cwde
add
call
mov
jae
jmp
test
xchg
adc
pop
sbb
imul
adc
loopne
ret
aaa
push
push
sbb
jmp
adc
addr16
sbb
push
rol
sub
(bad)
mov
test
ds
add
sbb
pop
mov
lock
cwde
jo
inc
in
push
shl
es
push
(bad)
dec
adc
clc
sub
or
jbe
inc
jmp
or
add
cmc
push
xor
pop
add
add
cmp
hlt
add
movnti
xlat
leave
xchg
xchg
sbb
in
xchg
jge
sbb
test
lods
popa
fld
clc
aas
arpl
pushf
fist
ds
(bad)
sbb
test
bound
loope
cdq
cmp
or
ins
xchg
and
add
movs
dec
(bad)
and
sbb
ins
inc
(bad)
push
and
mov
dec
ds
push
mov
and
xchg
js
cmp
out
sub
dec
shl
dec
push
mov
test
in
int
lahf
in
lock
pushf
(bad)
push
nop
sbb
push
push
inc
xchg
sub
sbb
mov
inc
xlat
push
shl
and
das
int
call
cmps
and
or
jmp
or
mov
inc
and
int
pop
call
ins
loop
mov
and
xchg
inc
add
sub
je
stos
add
dec
mov
(bad)
je
sti
in
iret
clc
dec
movs
lock
shl
inc
mov
xchg
adc
ret
int
add
push
xor
add
push
stos
sahf
dec
cs
or
or
fwait
out
push
dec
mov
xchg
push
enter
leave
or
in
mov
add
(bad)
hlt
and
(bad)
test
hlt
ins
adc
xor
je
cmp
bound
comiss
xor
jae
outs
add
fmul
inc
and
nop
popf
les
test
mov
adc
push
or
jae
or
jno
add
xlat
lds
cmp
mov
mov
dec
mov
icebp
mov
and
push
push
or
inc
dec
or
js
mov
nop
das
adc
inc
pop
in
aad
arpl
xchg
ret
jl
sete
xchg
call
add
cs
ss
sbb
dec
fild
xor
popf
push
fldcw
outs
pop
and
inc
mov
ret
aam
mov
ror
dec
fadd
in
push
sbb
mov
enter
adc
pop
xchg
sbb
fs
xchg
or
jne
stos
or
dec
and
push
nop
pop
cmc
inc
or
and
icebp
push
outs
inc
mov
push
pop
pushf
int
(bad)
int
ror
lock
jnp
imul
pop
pop
dec
inc
xlat
popa
lods
pop
adc
(bad)
leave
or
pop
loopne
pop
add
xor
mov
xchg
dec
daa
push
mov
sbb
int
enter
adc
icebp
movs
mov
in
js
sub
je
arpl
(bad)
pop
xor
or
dec
pop
inc
out
mov
shl
ret
dec
out
mov
rol
js
dec
jmp
push
inc
loopne
xchg
es
pop
and
pop
sub
mov
ret
add
int
repnz
outs
pop
std
jge
mov
push
(bad)
cld
sbb
arpl
pop
cmp
xor
cwde
pushf
mov
lods
ins
jbe
push
lods
xchg
mov
xor
dec
(bad)
jne
jb
xchg
push
inc
jge
pop
dec
aad
movs
sbb
mov
xchg
daa
add
or
add
(bad)
test
addr16
sbb
mov
std
scas
out
fimul
and
mov
cdq
cli
out
sub
push
leave
sbb
pop
adc
adc
and
lds
and
popf
mov
addr16
sahf
add
shr
and
fs
push
out
pop
fstp
add
pop
xor
sbb
inc
push
pop
fstp
shr
mov
mov
xor
sbb
or
hlt
mov
pop
into
stos
aam
js
arpl
js
xchg
std
inc
mov
or
test
mov
dec
jmp
sub
push
cmp
mov
adc
loop
in
adc
jo
and
das
add
xlat
fs
mov
in
inc
pop
and
xor
mov
mov
xchg
mov
dec
cli
jp
paddsb
add
aam
sbb
or
lock
or
adc
xor
lods
jmp
cmps
fistp
inc
mov
nop
pop
cmps
in
push
add
call
sub
repz
adc
add
xor
repz
dec
dec
push
jle
add
sbb
add
mov
dec
jmp
ins
(bad)
adc
in
and
add
in
push
popf
push
loop
es
mulps
or
or
ret
std
lds
push
sbb
(bad)
fcmove
loopne
push
pushf
cli
aam
cmc
ret
add
or
xor
test
mov
sub
sbb
ret
pop
mov
or
movs
sahf
adc
aad
cmp
sbb
dec
loopne
add
mov
call
test
xor
xor
scas
adc
jno
xor
xor
add
inc
xchg
dec
sub
cs
xor
dec
rcr
nop
xchg
cwde
or
dec
mov
dec
in
clc
mov
cmp
lock
cmc
sub
fstp
dec
mov
inc
sahf
pop
retf
push
add
adc
stc
lock
and
icebp
test
inc
or
scas
imul
mov
push
or
ret
add
jmp
dec
xor
add
jno
push
xor
adc
icebp
loope
dec
mov
scas
jo
fadd
xor
adc
pop
sbb
dec
jle
mov
lock
add
jnp
push
jo
jns
xchg
mov
addr16
sbb
js
test
adc
and
sbb
jno
(bad)
and
push
xchg
sbb
outs
and
sub
push
or
sub
ja
(bad)
out
fucomp
cwde
jb
push
sub
fld
in
pop
or
jmp
jp
mov
sti
add
mov
cmp
call
retf
or
clc
les
sbb
add
jge
push
mov
gs
jmp
cs
jecxz
add
shl
inc
ja
mov
and
sbb
mov
jo
push
mov
rcr
xchg
and
stos
cs
and
push
pop
cpuid
and
sub
push
dec
fcmovb
je
fdiv
jmp
(bad)
add
cwde
retf
outs
pop
mov
mov
outs
outs
cld
or
push
dec
or
push
push
outs
arpl
dec
push
arpl
push
adc
and
(bad)
xor
mov
jns
loop
mov
inc
je
jg
mov
pushf
cs
call
scas
iret
and
les
mov
mov
cmp
dec
sti
xchg
mov
jo
add
pushf
pushf
cmp
xchg
fadd
fldenv
dec
test
inc
and
movs
movs
shl
and
lods
lods
shr
int3
add
and
out
sar
ror
and
and
xchg
enter
dec
push
add
shl
adc
and
movs
pop
adc
fs
cdq
je
sub
xor
popf
adc
sbb
and
xchg
cmp
pop
or
add
aaa
enter
pop
add
push
lea
and
hlt
test
cmp
dec
and
ja
or
adc
push
push
add
cmp
int
shr
add
add
inc
test
test
lds
jns
jae
fs
pop
(bad)
cdq
jge
jle
sbb
xor
mov
aas
test
jbe
pusha
in
pop
adc
xchg
enter
sbb
inc
seto
scas
sbb
sub
nop
retf
and
pop
test
dec
fwait
cmp
gs
fdiv
dec
dec
add
movntps
mov
rol
add
pop
and
sar
hlt
fsubr
jns
call
hlt
aam
in
jae
int3
ror
push
mov
or
or
xchg
les
jne
call
cwde
mov
or
xor
rcr
jb
sahf
cs
cld
mov
mov
mov
clc
out
and
dec
adc
jb
xchg
inc
scas
cmp
lea
or
fdivr
(bad)
sbb
fld
xchg
xor
sub
stos
je
rol
movs
fdiv
push
or
aas
sbb
dec
xchg
loopne
jb
adc
mov
inc
dec
out
push
in
dec
(bad)
ja
push
mov
fisttp
sub
add
ja
jae
loopne
aaa
xor
sbb
dec
mov
sar
retf
pop
xchg
add
push
mov
dec
or
(bad)
or
je
ds
pop
je
mov
jb
jne
mov
add
cmp
push
inc
xor
jmp
je
or
jmp
sub
pop
xchg
inc
inc
pop
lods
inc
push
(bad)
dec
movs
jb
or
div
sub
sbb
test
and
and
mov
or
or
call
cmp
imul
jl
pop
or
pop
rol
(bad)
push
test
mov
fcmovne
inc
in
mov
test
(bad)
shr
sti
push
and
cmp
and
or
pop
in
lea
popf
nop
fidivr
push
mov
ins
or
rol
sub
outs
movs
adc
jbe
pop
mov
xor
div
push
xor
dec
in
inc
sub
ror
adc
clc
sub
mov
mov
outs
pop
push
mov
add
pop
lea
sub
aas
xchg
das
add
pop
add
mov
fs
add
mov
or
add
cmp
rcr
ja
js
sub
pop
aad
mov
or
fld
shr
mov
push
out
or
cld
add
imul
lods
add
clc
mov
aas
arpl
ds
dec
push
mov
daa
sahf
cmps
push
in
and
ror
or
xchg
jg
push
push
inc
push
jl
shl
adc
pop
adc
sbb
and
sub
fsubr
pop
sbb
cmp
lock
add
arpl
aad
add
adc
adc
add
sub
xchg
mov
call
mov
loope
xor
push
sbb
push
sub
and
push
or
pop
and
jecxz
dec
mov
daa
es
xchg
or
sub
test
and
retf
lods
ja
jbe
dec
call
and
add
mov
adc
adc
sub
stos
push
xor
test
cli
mov
or
sbb
mov
into
ss
fs
out
scas
aaa
cmp
(bad)
loopne
add
ins
jmp
push
pop
sub
adc
fs
add
sub
push
(bad)
xor
test
ror
sub
je
rol
data16
scas
test
xchg
fwait
scas
aaa
in
mov
sub
xor
out
leave
shld
hlt
ret
jmp
daa
enter
inc
stos
dec
aas
mov
in
xor
nop
push
adc
inc
mov
dec
pop
js
out
pop
push
dec
sub
jl
or
push
inc
fdiv
(bad)
xor
xor
add
pop
add
xor
popf
ret
test
mov
mov
push
mov
popa
arpl
mov
ret
dec
lahf
retf
push
ins
call
inc
aaa
xchg
jp
pop
scas
nop
test
(bad)
xor
les
fisttp
retf
add
inc
mov
into
fsub
jge
das
pop
push
pop
mov
push
push
test
lea
xchg
mov
pop
add
ins
dec
in
sbb
(bad)
aaa
inc
test
imul
ret
in
lods
mov
imul
mov
jne
or
popa
stc
repz
inc
inc
dec
push
xor
push
shl
in
into
jne
push
pop
add
je
xlat
or
jno
repz
pop
(bad)
les
or
sbb
and
push
lods
mul
into
mov
jne
mov
push
mov
or
add
and
or
xchg
push
cli
dec
push
xchg
jbe
shl
sub
bswap
mov
push
lock
jecxz
repnz
xor
jne
shl
dec
pop
xor
or
mov
xor
call
xchg
push
scas
add
or
les
add
add
sub
aaa
and
inc
daa
jl
mov
or
push
pop
add
fisttp
add
les
in
dec
rcl
adc
sbb
push
sbb
dec
xor
sbb
cmp
xor
push
je
dec
loope
jmp
mov
push
mov
jno
and
es
or
mov
test
jb
sub
and
enter
xor
jb
jae
mov
test
xor
jnp
xor
sbb
ds
movs
sar
shl
pop
in
fsqrt
mov
mov
xchg
add
and
jb
inc
dec
shl
sbb
jne
xchg
jne
pop
sbb
inc
ss
out
adc
sub
or
pusha
addr16
call
cmps
xor
jae
(bad)
loopne
test
or
sbb
sbb
jmp
push
pop
pop
enter
mov
pop
enter
aaa
cmp
xor
pop
jb
inc
dec
out
and
or
stos
inc
std
nop
sub
adc
jne
cmps
pop
or
xchg
or
aam
add
sbb
mov
into
or
(bad)
icebp
mov
cmp
nop
or
and
or
push
mov
xchg
push
es
xor
daa
pop
xchg
push
cmp
loopne
xor
sub
add
and
mov
mov
or
xor
stc
js
aaa
add
dec
cmp
and
rcr
inc
mov
cmp
(bad)
sbb
mov
mov
pop
jo
movs
shl
xor
cmps
pop
inc
outs
xor
out
stc
sbb
xlat
dec
nop
sbb
repz
js
add
test
push
or
cmp
mov
mov
test
pop
leave
icebp
and
xor
pop
enter
dec
pop
or
jne
lahf
cwde
pop
mov
retf
xchg
aaa
push
adc
sub
sub
or
and
mov
mov
push
pop
scas
mov
sub
test
sub
adc
adc
jmp
ret
fs
or
sub
xor
or
(bad)
xor
sub
ret
pop
push
xchg
inc
cmp
or
psrad
jbe
inc
mov
push
gs
xchg
mov
aaa
scas
mov
aam
icebp
jmp
and
daa
(bad)
das
mov
loopne
add
fs
enter
push
shl
ins
mov
shl
jmp
pushf
sbb
xchg
pushf
and
aaa
xchg
add
add
push
sub
inc
mov
adc
leave
shl
(bad)
xor
(bad)
and
mov
(bad)
mov
push
xor
mov
loop
test
sti
ficomp
ror
(bad)
ror
inc
cdq
mov
aad
add
jo
call
nop
sub
addr16
(bad)
jge
cmp
cmp
jb
mov
je
les
mov
mov
in
idiv
leave
mov
retf
rol
mov
rol
xor
rol
and
jle
jo
xor
xor
push
daa
outs
ror
cli
or
and
lahf
xor
mov
int3
dec
cmps
js
pusha
xor
adc
mov
xor
div
sbb
cmp
add
stos
cld
mov
xor
add
cmp
leave
test
xor
sbb
pop
xchg
fnsave
cli
or
adc
bound
enter
or
sbb
out
push
push
dec
xlat
mov
cmp
in
mov
dec
sub
mov
repnz
push
hlt
dec
and
hlt
jae
or
icebp
lahf
cld
inc
adc
inc
das
jb
adc
mov
adc
jg
cmp
popa
loope
es
ins
cmp
fmul
pop
sbb
and
stos
pop
adc
push
xor
add
inc
or
or
or
lods
ret
xor
into
push
push
ins
push
fxch
je
gs
fiadd
and
xchg
mov
and
adc
lock
mov
mov
lea
or
mov
push
dec
out
(bad)
jmp
cmp
mov
sub
(bad)
(bad)
add
out
fidiv
or
out
sbb
and
cmp
add
xor
sbb
fnsave
outs
or
add
mov
xor
call
dec
and
mov
adc
fstp
push
adc
sbb
cmps
adc
test
call
clc
fsubr
cmp
push
push
jmp
sub
sbb
pop
cwde
jge
or
fild
in
lea
pusha
stos
(bad)
xchg
xchg
jo
sbb
mov
outs
adc
or
fdiv
loopne
add
xor
in
and
jmp
out
xor
dec
adc
hlt
stos
pop
cs
adc
call
mov
sbb
xchg
adc
clc
lock
and
or
sbb
sub
push
xchg
sub
adc
jb
push
adc
dec
push
js
jb
pop
mov
push
(bad)
mov
sub
retf
add
xor
mov
and
fmul
push
(bad)
shl
rol
shl
retf
xlat
imul
xchg
(bad)
(bad)
and
add
xor
xor
mov
sub
ror
fwait
scas
fisttp
push
ror
sbb
bound
clc
pop
add
dec
mov
inc
scas
test
dec
(bad)
pop
adc
data16
mov
dec
or
xor
xor
ret
sbb
mov
xor
in
mov
push
xor
fs
lock
xor
call
jmp
jle
dec
fprem1
imul
xor
das
mov
sbb
fisub
in
in
jle
xor
adc
push
xor
dec
pop
clc
jnp
or
dec
xlat
(bad)
sbb
fnstenv
ja
lods
(bad)
jo
jmp
mov
xor
add
inc
test
push
outs
dec
clc
loopne
jge
adc
adc
jl
push
sbb
lods
nop
or
hlt
shr
inc
sti
pop
mov
xchg
mov
dec
icebp
lods
jge
shr
or
dec
rcl
mov
cmc
push
in
rcr
cmp
jae
jno
loopne
jo
jo
mov
shr
nop
xor
ja
or
jl
shr
ja
ret
add
shr
pop
mov
ret
adc
jnp
shl
xor
pop
xchg
ins
leave
mov
xchg
mov
ins
pop
xchg
adc
dec
mov
mov
jae
or
inc
cmp
xchg
xor
ficomp
inc
fcmovbe
mov
cmps
loopne
dec
ja
push
cmc
in
xor
dec
mov
xchg
adc
push
push
push
test
ret
push
sbb
or
jns
jmp
mov
and
ror
ret
inc
mov
daa
adc
xchg
psllw
jo
sbb
push
mov
fisub
icebp
push
add
clc
add
pusha
pop
rcl
and
dec
dec
daa
push
pop
mov
xchg
xchg
mov
loopne
fnstenv
stos
ds
adc
dec
ret
mov
repz
rcl
adc
jecxz
fiadd
test
push
imul
dec
imul
or
xor
mov
jmp
adc
rcl
ja
sbb
rcr
cmp
in
icebp
jo
icebp
adc
leave
lods
xor
in
jge
es
xor
iret
fcmove
in
movs
test
inc
in
sbb
fstp
xchg
xchg
mov
lock
or
into
dec
and
jmp
imul
shr
mov
pop
(bad)
jge
and
sub
adc
sbb
ret
mov
sbb
xor
cmc
or
cmps
mov
sub
xchg
in
jb
nop
loopne
fdiv
sub
or
jno
xor
stos
ror
cmps
jne
jb
loopne
or
sar
in
jns
push
cmp
xor
mov
jecxz
loopne
sar
push
shl
mov
push
pop
pop
dec
hlt
push
mov
js
ins
jb
ret
sti
jge
pop
ror
or
pop
lock
sub
inc
mov
pop
outs
adc
xchg
mov
hlt
(bad)
push
sbb
lods
xor
and
or
mov
push
xchg
xchg
shr
leave
js
mov
mov
loopne
test
sub
pop
jg
pop
xchg
pop
cmp
cmp
sub
outs
push
or
and
js
(bad)
call
push
pop
pushf
mov
loopne
inc
inc
ins
lea
stc
cdq
dec
test
adc
scas
add
loopne
or
clc
push
jns
mov
add
xchg
inc
xchg
mov
enter
and
cmp
mov
sbb
or
or
(bad)
jmp
mov
js
imul
add
mov
push
movs
loopne
neg
add
gs
addr16
xor
ret
and
pop
and
and
xchg
pop
call
rep
lock
xchg
cmps
sbb
mov
scas
sbb
or
jge
xor
mov
xchg
cli
das
shl
retf
xchg
or
jnp
retf
(bad)
mov
test
push
sbb
sbb
stos
pop
lods
test
jo
lods
adc
ret
pop
mov
pop
mov
pop
push
rol
pop
lods
scas
sub
(bad)
cmp
push
mov
push
lea
repz
ins
xor
outs
adc
sti
jmp
popa
pop
dec
push
ret
dec
jle
(bad)
pop
ret
test
lea
outs
lock
push
(bad)
repnz
xor
cld
pop
retf
adc
out
push
mov
popf
retf
jo
aaa
push
neg
sahf
xlat
js
adc
cli
push
jo
addr16
jae
push
cmp
mov
mov
ins
add
mov
or
cli
fimul
call
push
in
test
adc
xlat
xchg
jp
or
xor
add
in
stos
dec
movs
sub
js
repnz
mov
mov
das
adc
xchg
sbb
mov
cmp
lods
push
addr16
sbb
clc
jmp
mov
addr16
xchg
hlt
mov
clc
xor
push
in
xchg
inc
sub
clc
adc
in
outs
mov
adc
push
test
in
adc
sub
mov
adc
repnz
xor
pop
cmps
rol
clc
std
push
mov
push
mov
fst
jne
in
fist
dec
jp
adc
sbb
sub
xor
(bad)
in
push
pop
in
leave
cmp
or
xor
inc
(bad)
hlt
in
mov
cs
lahf
in
leave
mov
movs
sbb
(bad)
ins
xchg
imul
inc
lods
imul
cld
adc
out
jmp
mov
out
frstor
nop
imul
add
hlt
adc
out
or
enter
clc
clc
call
hlt
or
add
pop
cli
in
rcl
or
mov
add
inc
test
mov
mov
lahf
sti
or
std
inc
mov
adc
bound
inc
sti
cs
sub
xor
jecxz
mov
cmc
push
(bad)
call
adc
push
or
add
inc
mov
movs
or
std
push
test
jne
xchg
stc
mov
sub
repnz
jmp
sub
pop
sti
ret
adc
nop
bound
mov
cli
sti
sbb
jo
clc
pop
mov
or
add
dec
outs
mov
or
cmc
add
cmp
sti
pop
sahf
push
inc
popf
xchg
jmp
mov
sbb
mov
jle
fwait
out
out
ret
test
mov
nop
jmp
fsub
push
push
cmp
hlt
ss
mov
jne
sub
xlat
fwait
sub
sbb
inc
mov
adc
call
adc
xor
aam
jno
loope
adc
add
adc
mov
dec
dec
jp
xchg
movddup
hlt
xchg
inc
fwait
push
sub
lahf
clc
pop
or
xchg
inc
cbw
and
xor
pop
ja
xor
lds
or
or
jecxz
lds
jo
jno
jmp
xor
fwait
push
sbb
out
das
retf
rol
sbb
cmps
test
fsubr
push
mov
xchg
out
jb
and
sbb
int
in
sbb
sbb
retf
loopne
int3
and
inc
pop
in
mov
xor
dec
call
xchg
adc
adc
jmp
push
push
push
or
movs
dec
call
mov
loope
je
cmc
ja
mov
sbb
dec
push
inc
mov
cmp
push
shr
push
cwde
lods
jmp
loop
mov
mov
add
adc
dec
add
mov
retf
(bad)
and
xchg
xchg
or
ja
ja
or
jl
push
in
and
pop
mov
js
or
jae
sub
and
pop
pop
ss
mov
inc
in
ret
push
adc
ret
pop
jle
push
jl
ret
ds
rcr
and
or
mov
ret
mov
jle
or
add
mov
mov
add
rol
cmp
and
mov
adc
repz
mov
adc
or
cmc
ficom
mov
cmc
adc
and
inc
jnp
adc
sbb
jns
jg
or
cmps
push
add
test
mov
xchg
stos
lock
fld
inc
dec
xchg
sbb
mov
pop
lods
mov
xchg
jb
push
into
outs
mov
mov
xchg
cmp
mov
add
inc
ror
xchg
cmc
jecxz
push
xchg
int
js
inc
inc
mov
rcl
enter
add
test
mov
pop
dec
lods
mov
leave
rcl
pushf
jmp
mov
xor
pop
jb
mov
stc
sub
pop
ins
fs
pop
inc
arpl
jl
jmp
mov
mov
add
add
or
push
(bad)
lods
dec
adc
popa
(bad)
addr16
xor
nop
retfw
push
lock
add
movs
adc
or
js
adc
movs
inc
clc
add
mov
mov
adc
mov
mov
add
test
xchg
cmp
inc
sub
mov
mov
dec
and
out
or
sub
fdivr
pusha
adc
mov
test
icebp
jbe
fs
mov
mov
xor
mov
(bad)
pmullw
outs
fst
inc
fnstsw
jae
xor
push
push
or
inc
ins
lahf
and
lods
push
adc
push
push
cli
rcr
adc
pop
frndint
cmps
push
push
and
push
add
or
ret
inc
and
and
and
daa
pop
sub
sub
and
add
neg
xor
add
add
dec
xchg
cs
sub
or
mov
xor
add
and
push
nop
pop
mov
fwait
push
stc
adc
mov
adc
xchg
dec
add
sub
nop
xchg
(bad)
jecxz
adc
test
push
cmp
cmp
add
in
add
adc
test
push
pop
push
cmp
add
mov
mov
rol
sbb
inc
add
inc
mov
push
push
inc
mov
cmp
jae
push
adc
push
jmp
jge
push
add
or
or
repnz
xchg
mov
cwde
sbb
sbb
ret
pop
fwait
sbb
je
jo
push
ror
sub
or
rol
fist
loopne
xchg
out
ins
or
and
mov
push
or
addr16
dec
ins
jmp
ret
cmp
fcmovnb
dec
pop
mov
test
lea
add
inc
wbinvd
iret
jmp
push
add
xor
adc
add
pop
sbb
inc
inc
adc
mov
sub
xor
push
jbe
fist
jmp
fcmovnb
stos
mov
add
jbe
xchg
enter
and
mov
je
push
push
test
add
or
(bad)
retf
ja
inc
leave
pop
out
and
sbb
xor
dec
jge
push
sub
or
push
sbb
cmp
mov
cmp
gs
ja
mov
cdq
outs
fcom
add
(bad)
fstp
xor
rcr
or
adc
les
out
push
lock
push
test
mov
mov
adc
test
push
adc
adc
inc
inc
sbb
pop
int3
pop
xor
push
xlat
push
aas
add
push
and
inc
shl
test
cmp
sbb
xchg
or
or
cs
push
inc
in
add
nop
inc
and
pusha
add
sub
xchg
dec
jp
mov
inc
xchg
inc
sub
rol
bound
and
mov
fadd
ror
mov
mov
(bad)
rcl
add
dec
fcom
in
xchg
mov
lods
push
pop
aam
push
add
sbb
xor
imul
enter
test
aam
mov
push
add
or
rol
int3
test
fild
cmp
dec
les
aaa
leave
jl
adc
jno
mov
(bad)
retf
faddp
stos
in
retf
outs
push
xchg
pop
pop
stos
pop
ret
jle
outs
outs
add
push
pop
mov
rep
in
and
push
xor
push
add
pop
add
xor
test
add
cli
dec
adc
pop
and
xor
aas
or
shl
add
adc
shl
loope
fwait
add
sub
arpl
inc
or
in
sub
add
sub
push
inc
ret
push
jge
fwait
cmp
inc
or
mov
mov
push
and
cli
cmps
loope
es
pop
push
pusha
cmps
lds
pop
cld
xchg
push
and
scas
cmps
leave
out
add
jns
inc
or
inc
cmp
adc
ins
stos
movs
add
adc
mov
fiadd
or
rcl
adc
push
and
sbb
push
xor
or
and
clc
out
daa
push
jb
xchg
fidiv
pop
add
call
sbb
sbb
jp
mov
pop
lea
dec
rcl
adc
sbb
mov
sti
aaa
mov
jmp
adc
cmp
add
je
enter
xor
scas
push
daa
cmp
shr
push
push
arpl
mov
js
jns
pop
inc
push
mov
leave
mov
mov
jmp
shr
and
jmp
pop
inc
dec
in
mov
or
gs
jo
js
ins
popf
je
cmc
and
ret
rcl
jbe
push
fsub
mov
sbb
movs
scas
dec
mov
mov
dec
add
xchg
inc
sub
dec
lds
or
fisub
cmp
sub
ins
push
gs
or
pop
ret
in
popa
jns
pop
movs
pop
cld
(bad)
fucomip
shr
cmp
mov
adc
sbb
inc
mov
add
pop
jne
xchg
lea
data16
add
push
je
fld
push
icebp
call
jne
mov
in
popf
push
stos
dec
push
cmp
add
jnp
ror
add
je
retf
adc
adc
loopne
and
inc
push
add
(bad)
cmc
add
ss
lea
adc
inc
test
in
pushf
fimul
xor
mov
add
test
inc
jb
pop
retf
and
add
js
mov
add
(bad)
retf
lea
pushf
adc
(bad)
mov
cmp
push
or
mov
popf
nop
or
je
(bad)
cld
(bad)
cmps
adc
into
or
mov
and
cmc
inc
mov
inc
push
pop
push
lods
add
add
cli
mov
add
push
xchg
push
cmp
je
sbb
ins
pop
scas
adc
add
sbb
mov
lock
loopne
sbb
pusha
pop
jo
mov
sbb
or
cmp
cmp
lods
adc
in
lds
inc
add
test
pop
loopne
adc
xor
int3
mov
in
mov
ins
or
xor
add
repnz
add
cmp
(bad)
loopne
(bad)
fild
movsx
mov
pop
xor
test
adc
imul
cmp
rcr
or
jbe
sbb
and
inc
fnstcw
repnz
sbb
sub
jmp
push
je
dec
mov
scas
or
jno
inc
(bad)
push
test
loopne
loope
push
mul
shr
mov
imul
out
out
iret
mov
clc
cmp
and
stc
or
nop
(bad)
sbb
repnz
push
add
xor
mov
in
dec
(bad)
mov
std
call
mov
je
adc
popa
in
dec
jne
pop
aam
xchg
mov
outs
add
jmp
adc
or
push
loopne
xor
mov
inc
es
in
or
pop
sub
add
adc
add
popf
mov
loope
sbb
ret
adc
dec
mov
mov
sbb
push
fmul
xchg
push
fist
adc
das
inc
test
fisttp
jle
sub
mov
and
inc
fidiv
mov
jl
or
out
cwde
je
cmp
push
stos
xor
adc
push
mov
jmp
fcom
push
mov
popa
and
xchg
push
mov
rol
jg
hlt
cmp
popf
xor
je
pop
jl
push
xchg
jbe
shl
push
pop
xor
std
xchg
loopne
cmp
adc
dec
xor
pop
adc
sub
jne
xchg
cmp
push
icebp
pop
pop
rol
cmp
rol
cmp
jns
dec
js
jl
sbb
in
dec
iret
add
adc
lahf
xchg
xor
mov
jns
clc
bound
daa
sbb
pop
mov
pop
jmp
add
test
sbb
xor
out
or
adc
mov
fwait
mov
cwde
or
sti
pop
add
xor
jbe
push
adc
or
pushf
out
pop
jg
test
mov
adc
inc
adc
hlt
push
jmp
std
inc
cmp
jae
test
adc
push
test
icebp
dec
cwde
rcr
dec
bound
int3
test
test
sbb
xchg
(bad)
mov
test
sub
nop
add
movs
je
dec
cmp
or
leave
pop
adc
(bad)
push
pop
shr
repnz
add
dec
push
cmp
imul
push
fwait
inc
ret
repz
into
xor
loop
and
das
mov
(bad)
sahf
jns
add
sub
das
push
and
das
test
imul
inc
(bad)
pop
add
mov
neg
ret
hlt
add
loop
lock
add
pop
xor
push
aad
dec
inc
outs
cmps
ret
jle
je
in
rcr
jge
ds
(bad)
arpl
pusha
jo
jecxz
cwde
js
mov
lahf
pop
pop
push
rol
jne
dec
sahf
or
add
sub
dec
ins
movs
sbb
inc
adc
(bad)
out
mov
adc
fmul
xor
inc
jle
inc
in
xor
iret
xor
fiadd
and
outs
cli
aad
dec
js
inc
jle
ret
push
leave
add
pop
shr
leave
mov
rol
fst
nop
pop
push
sbb
add
jle
sar
jb
add
rcr
test
inc
or
ja
ins
mov
inc
inc
cmp
jb
or
add
jp
xor
in
ss
add
ret
nop
hlt
mov
sti
mov
std
cli
add
mov
jp
cmp
xor
or
sbb
ins
or
imul
xchg
pop
adc
out
lods
mov
push
xor
enter
push
pop
xor
xchg
shl
or
fistp
pusha
iret
adc
push
rol
push
mov
jbe
mov
adc
movs
or
test
sub
xor
mov
dec
inc
or
dec
pop
add
sub
test
clc
cmp
xchg
push
push
xor
xor
icebp
jg
(bad)
cmp
xor
add
or
cmp
jb
mov
shl
pusha
jae
cmp
cmp
leave
cwde
inc
pop
ja
push
sti
sub
adc
inc
inc
cmp
mov
(bad)
cmc
add
add
adc
or
shl
inc
mov
cli
jbe
sub
out
fild
jmp
jbe
sub
ss
xor
mov
shr
push
outs
or
or
add
inc
pop
adc
loopne
or
sbb
jl
cmp
push
clc
pushf
and
sahf
cmp
and
fld
xor
sub
pop
mov
cmp
ret
or
aad
in
jg
sub
jle
mov
sub
add
add
ror
xchg
fwait
stc
sbb
jne
xor
jg
cdq
mov
pop
lds
test
or
pop
pop
(bad)
aam
adc
xor
jbe
mov
cmp
xchg
xor
popa
int
push
push
inc
pop
mov
fld
pop
rcl
mov
cmp
nop
xor
xchg
fistp
add
cdq
jae
dec
or
cmps
loopne
and
or
rcl
lock
cmp
pop
or
inc
add
adc
xchg
ret
popa
aaa
adc
xchg
pop
and
inc
add
adc
lahf
or
sub
mov
nop
stc
push
loopne
jb
mov
adc
adc
jg
add
add
inc
addr16
out
outs
or
mov
fdivr
xor
mov
mov
rol
enter
add
push
push
sub
xchg
sub
outs
or
je
pop
mov
push
push
shrd
push
mov
jmp
pop
sub
sar
jb
mov
push
dec
add
push
hlt
pop
mov
mov
adc
jne
fcmovu
push
lods
and
inc
aam
inc
jns
shl
or
adc
or
xchg
test
xchg
sub
ja
rol
cli
adc
shl
mov
xor
loop
sbb
and
cli
push
sub
xor
ret
add
std
test
mov
cdq
jns
pop
mov
sub
xor
and
rol
cmp
sbb
fild
shr
(bad)
sti
into
add
sbb
fisub
fnstenv
or
and
xchg
ins
mov
dec
ror
mov
pop
mov
rol
jne
mov
cmp
(bad)
cmp
int3
inc
div
lahf
dec
sbb
cli
and
xor
inc
ror
dec
fstcw
and
cmp
dec
push
mov
(bad)
cmp
push
ins
outs
ds
ror
add
inc
and
push
dec
jl
cmp
das
inc
adc
adc
ds
fdivr
cld
or
inc
dec
mov
dec
into
enter
sbb
ror
ss
cmovge
add
int3
dec
std
enter
push
pop
pop
dec
stc
adc
push
dec
fild
inc
xchg
pop
pusha
xor
add
inc
push
add
pop
inc
cmp
cmp
push
pusha
dec
add
push
mov
push
mov
add
dec
rol
gs
push
sub
pop
push
dec
adc
das
mov
xor
jbe
rol
xchg
aam
mov
add
pusha
push
add
lea
pop
sub
in
popfw
fstp
mov
xor
into
jl
shl
(bad)
and
mov
push
ror
fmulp
xor
and
push
jbe
pop
sbb
enter
sti
xchg
dec
sbb
bound
dec
aam
bound
mov
int
adc
cmp
jne
xor
pop
add
rol
shl
xchg
mov
jp
js
ss
data16
xchg
fadd
and
fdiv
cmp
(bad)
or
or
test
push
cmp
mov
pop
xlat
sub
adc
jmp
outs
and
pop
mov
pop
in
inc
cmp
or
imul
pop
imul
sub
mov
push
int
loopne
(bad)
icebp
loope
nop
ss
inc
bnd
aam
movs
imul
sbb
xor
call
imul
movs
cmp
fs
in
add
jmp
pop
push
or
imul
sub
cwde
dec
push
jle
pop
(bad)
loopne
add
sar
adc
out
(bad)
push
and
push
pop
or
mov
pop
inc
pop
sub
fist
fcmove
pop
lods
test
int3
nop
or
adc
lock
mov
shl
ds
mov
ret
shl
or
lock
in
lock
add
mov
mov
pusha
aam
(bad)
or
mov
add
enter
cmp
mov
push
repnz
add
ret
les
sub
movs
ss
mov
aaa
fdiv
pop
movs
jge
in
jl
fs
scas
retf
scas
gs
and
push
xchg
mov
jmp
sub
dec
movs
(bad)
add
je
mov
hlt
or
lea
add
imul
enter
imul
pop
or
loopne
shr
adc
fld
adc
add
ins
iret
leave
add
or
pop
xlat
dec
xchg
rcl
push
and
iret
push
mov
into
add
in
adc
daa
mov
sbb
cs
mov
in
rcr
and
iret
and
retf
add
loopne
and
xor
mov
repz
mov
(bad)
mov
shl
rol
rol
xchg
push
or
adc
in
lock
inc
inc
ja
in
jbe
mov
jno
add
imul
xlat
mov
add
and
sub
sbb
or
jge
dec
mov
adc
nop
(bad)
sti
xor
pusha
add
cld
mov
sbb
cdq
jbe
add
fs
in
inc
sub
call
(bad)
mov
js
gs
ds
jge
sbb
xchg
stos
(bad)
sub
(bad)
or
cdq
test
xchg
or
and
ins
jbe
add
cmp
bound
mov
mov
push
cld
jne
lods
xor
push
xlat
push
add
rcl
and
out
mov
lock
aam
js
dec
in
aam
outs
push
fsub
add
fbstp
xor
mov
mov
mov
jno
cs
xlat
push
sbb
je
cmps
jmp
sbb
dec
xor
adc
hlt
or
jns
jecxz
aam
add
push
retf
sar
or
clc
popa
xor
popa
clc
aaa
clc
int
ret
xchg
sub
adc
add
addr16
sub
or
sbb
in
push
out
add
and
jno
fcom
(bad)
aaa
clc
dec
xchg
inc
adc
jb
movq
jecxz
or
dec
jae
inc
in
hlt
call
or
outs
call
mov
dec
call
in
push
mov
jno
es
ret
leave
loopne
dec
imul
sbb
hlt
pop
inc
add
push
fidivr
fmul
adc
mov
rol
test
lock
(bad)
shl
and
push
sub
cmps
and
lock
dec
out
xchg
mov
pushf
or
inc
sti
jb
add
or
dec
aam
call
pop
and
mov
in
lea
and
push
aas
data16
loopne
psubusw
repz
add
into
jne
fnstsw
cdq
(bad)
ret
loopne
mov
jns
loope
xor
adc
ja
fadd
xor
sbb
sbb
sub
popa
sub
ret
retf
clc
mov
push
pop
and
jnp
cwde
idiv
fdivr
movs
or
add
imul
fisub
xor
(bad)
or
sbb
xchg
xor
add
pusha
cs
loop
loopne
and
shl
(bad)
in
add
mov
in
into
in
loope
enter
popa
add
dec
or
or
or
lods
mov
loopne
sbb
mov
data16
ds
mov
in
or
and
and
movs
fiadd
pop
sub
dec
fst
addr16
inc
mov
adc
adc
mov
dec
scas
inc
in
push
js
(bad)
pop
dec
hlt
mov
hlt
cmp
pavgw
sub
test
adc
ins
sbb
hlt
dec
dec
cdq
fistp
popa
lock
pop
lea
popa
(bad)
shl
ret
add
sti
fld
pushf
pop
cmp
lahf
xchg
adc
je
ret
fs
sub
in
adc
div
cld
(bad)
rol
ror
iret
sti
xor
mov
pop
into
mov
mov
mov
add
mov
and
push
mov
add
push
ror
stos
xor
jae
adc
aaa
leave
rcl
push
mov
lock
test
xchg
and
adc
sbb
and
sbb
push
cdq
nop
sbb
and
shl
rcr
xor
and
and
push
sbb
sbb
xchg
add
je
es
stc
inc
and
xor
cmp
es
inc
dec
dec
and
cmps
mov
loopne
dec
inc
push
pusha
inc
and
sbb
cmp
and
(bad)
loopne
dec
sbb
mov
cmp
aaa
pop
pop
and
and
push
aad
ror
xor
aaa
sbb
jo
pushf
stc
mov
in
add
and
aam
push
idiv
shl
jb
dec
pop
fiadd
push
xor
xor
ror
dec
ins
sbb
pusha
ror
popf
pusha
nop
and
dec
lods
pop
xor
push
sub
nop
inc
or
retf
push
enter
dec
in
or
test
loopne
xor
cmp
js
push
bound
mov
dec
in
add
cmp
sbb
cmp
aam
loopne
adc
fs
and
sbb
dec
pop
and
or
inc
jp
sbb
xor
pop
inc
cmp
popa
sbb
fst
loopne
sbb
fstp
adc
pusha
fiadd
arpl
or
jno
or
mov
adc
add
add
cwde
pop
cmp
outs
adc
iret
xor
jecxz
cmp
(bad)
sub
cli
es
sub
sub
jns
fdivr
jp
or
or
rcl
mov
into
mov
aas
xchg
add
dec
add
iret
popf
and
je
mov
mov
stc
gs
sahf
lock
sub
ins
cld
adc
scas
or
or
repz
xlat
push
into
gs
push
adc
test
nop
and
cld
add
ret
shl
retf
dec
rcl
in
sbb
lock
(bad)
(bad)
pop
movs
ret
adc
call
xor
ins
ja
or
or
aam
into
loopne
div
out
je
mov
in
mov
sub
cmp
mov
test
inc
sti
push
shl
inc
and
icebp
jbe
jge
xchg
dec
repz
jne
xor
aaa
mov
es
retf
mov
adc
sbb
das
(bad)
movs
loopne
icebp
icebp
int3
xchg
dec
iret
lods
lods
or
inc
pop
cmp
pop
jmp
jmp
or
pop
js
inc
in
outs
sub
clc
cmps
rol
sbb
mov
call
fdiv
aam
aas
test
ficomp
mov
pushf
inc
add
test
hlt
cmp
enter
fistp
xlat
inc
shl
xchg
pop
fwait
jno
iret
(bad)
mov
rol
or
mov
nop
aaa
sbb
xchg
fisttp
xchg
and
cmp
dec
in
(bad)
push
sbb
jno
hlt
loopne
xor
push
jno
adc
mov
sar
and
mov
sbb
loopne
or
cmp
or
lock
cmp
sbb
sbb
jl
xlat
and
(bad)
or
push
fdiv
sub
fs
out
and
in
cmp
lock
xor
aaa
call
call
rol
scas
fdivr
push
add
es
shl
fcomp
add
jo
push
dec
imul
int3
je
call
jne
test
mov
or
xchg
or
xchg
stc
iret
dec
mov
fsub
or
(bad)
(bad)
data16
mov
fmul
ds
cmps
xlat
inc
movs
push
arpl
inc
call
fisub
jbe
cld
ret
sbb
mov
cli
or
inc
pop
and
or
mov
das
or
fcmove
ins
and
push
pop
aas
or
and
outs
mov
mov
nop
xlat
retf
dec
in
adc
adc
gs
and
mov
push
xchg
cmp
cmp
inc
test
out
rol
retf
and
jns
in
push
icebp
mov
imul
jo
push
jno
jge
add
add
add
aam
retf
push
dec
cdq
dec
cmp
cld
fcom
jno
mov
cmp
jns
pop
outs
cmc
or
xchg
in
add
and
aaa
out
xchg
or
jno
and
and
cld
mov
jbe
mov
test
mov
adc
jnp
out
ret
push
fs
clc
lock
(bad)
pop
xor
sbb
mov
scas
mov
hlt
cmp
push
ret
push
adc
pop
data16
dec
sub
cld
and
in
addr16
outs
ror
adc
push
outs
or
int3
hlt
or
sbb
xchg
aam
pusha
jno
test
dec
push
dec
enter
gs
fimul
shr
or
sub
pop
inc
and
mov
movs
cld
mov
in
sbb
cs
ds
mov
push
mov
loopne
sbb
add
popa
icebp
mov
jo
mov
pop
add
pop
repnz
push
fist
out
jne
loopne
pop
loopne
sub
pop
lds
push
mov
scas
add
rcr
fidiv
add
enter
in
in
popa
adc
push
xor
in
add
test
popa
adc
rcl
sbb
add
cld
mov
cmp
dec
in
push
rol
shl
fdivr
hlt
icebp
dec
movs
mov
in
add
and
pop
outs
lock
lock
inc
rcr
cli
xor
add
jns
ret
add
or
cdq
add
pusha
mov
adc
xor
mov
cld
or
or
rol
punpckhdq
adc
xchg
jg
lock
mov
cmp
mov
mov
out
dec
test
pusha
add
add
push
int3
inc
push
push
inc
movs
add
push
jb
fisttp
das
inc
cli
adc
pop
dec
push
xor
mov
sub
or
mov
push
lock
add
es
int3
sub
mov
pop
push
adc
loope
sub
cwde
scas
stc
sub
jmp
adc
mov
mov
inc
dec
xchg
leave
shld
shl
add
pop
inc
pop
rol
pop
adc
cs
pop
add
les
jecxz
mov
mov
push
mov
add
sbb
push
sub
adc
outs
sub
test
jnp
ror
lods
fidivr
clc
data16
jbe
inc
fprem
and
test
mov
xor
push
sbb
adc
sti
lock
sbb
cmp
dec
cli
adc
mov
or
or
sub
and
add
push
pop
fwait
xor
js
xchg
outs
rcl
cmps
mov
hlt
inc
fidivr
je
xor
xor
add
gs
outs
dec
or
(bad)
fdivrp
add
mov
arpl
cwde
les
xor
push
call
mov
push
unpcklps
pop
clc
mov
ss
popf
out
pop
ds
add
mov
jmp
shl
dec
popa
jl
jo
pop
add
nop
lahf
das
push
call
ficomp
inc
add
mov
push
push
ror
xor
lock
dec
imul
pusha
test
or
lock
je
test
fistp
or
mov
push
dec
movs
xor
sub
jo
push
adc
push
push
daa
or
fiadd
or
test
add
lds
add
mov
rcr
mov
push
and
mov
jmp
mov
sub
pop
dec
cmp
mov
push
out
pop
push
mov
das
movs
dec
xor
in
xchg
mov
adc
dec
in
inc
and
cmp
adc
mov
or
(bad)
imul
push
leave
adc
add
mov
das
inc
add
push
test
inc
push
jb
sub
add
inc
push
in
sub
pop
push
enter
sub
pop
sbb
xor
repnz
push
sub
pop
dec
pop
and
push
sub
adc
or
test
les
jns
or
or
ins
les
adc
adc
ja
dec
add
pop
dec
test
je
pop
push
outs
push
adc
cwde
pop
adc
and
and
or
and
add
or
adc
inc
add
push
les
retf
jbe
mov
cmp
xor
mov
or
mov
mov
adc
cmp
nop
xor
(bad)
or
out
xlat
cmp
and
clc
add
cwde
adc
iret
outs
retf
adc
scas
lea
adc
scas
or
sbb
jbe
add
inc
mov
sbb
jecxz
and
add
fs
mov
aam
in
dec
pusha
and
sbb
adc
pop
xchg
mov
sub
mov
sbb
xor
adc
xchg
xchg
rcl
dec
jbe
mov
or
call
rcr
adc
xor
retf
lock
or
mov
add
das
add
dec
dec
shl
inc
call
xor
inc
push
sub
add
rcl
sub
or
xor
int
or
or
jns
pushf
or
add
add
mov
sbb
jb
sub
add
add
add
das
inc
push
sbb
push
xor
xor
xor
or
leave
dec
cmp
or
or
mov
sbb
or
mov
sbb
pop
mov
push
xor
xor
xor
in
enter
or
ja
jns
add
xor
xlat
rcl
xchg
sbb
or
in
xchg
inc
or
cmp
cmp
inc
or
inc
or
xchg
xchg
and
pusha
pmulhuw
pop
dec
or
or
or
nop
dec
pop
push
or
and
in
add
or
mov
dec
or
pop
or
inc
xchg
dec
ret
pop
or
test
call
sbb
push
and
xlat
retf
lds
add
in
cmp
and
jne
and
cmp
mov
or
and
pop
or
or
sub
xchg
mov
xor
retf
vmwrite
push
inc
add
pusha
add
pop
jns
push
push
retf
sbb
jecxz
and
pop
enter
cmp
xchg
sub
adc
or
in
cmp
and
sub
jge
retf
xchg
daa
fs
fs
fs
inc
xor
fs
inc
xor
adc
mov
jo
(bad)
or
xor
clc
aaa
mov
push
sbb
dec
out
and
inc
mov
mov
mov
test
aam
mov
mov
add
in
ret
push
push
aas
sbb
inc
push
pop
es
push
jbe
add
inc
sbb
xchg
dec
test
loop
out
data16
push
in
out
sbb
lock
fist
jo
cmp
je
lods
jbe
cmp
jbe
fnstsw
sub
mov
xchg
or
stos
ret
dec
mov
cmp
mov
cmp
mov
mov
cmp
jne
dec
aad
mov
mov
rol
lea
cmp
jb
sbb
(bad)
int
or
xlat
mov
mov
sub
xchg
add
sub
cmp
cmp
jb
dec
inc
mov
or
dec
jns
hlt
fsubr
ror
jge
add
fs
mov
jmp
push
mov
jge
xchg
add
inc
cmp
add
lods
cmp
jb
mov
ins
and
loopne
xchg
aaa
aam
imul
dec
cld
cli
adc
cs
cmp
sub
and
push
dec
push
mov
sbb
xchg
icebp
xor
push
xor
aas
or
mov
xchg
xchg
arpl
pop
push
mov
int
mov
or
sbb
retf
and
adc
mov
add
jl
mul
lods
icebp
jnp
push
js
add
mov
dec
xchg
ins
adc
mov
push
aaa
fcomp
(bad)
fcom
pop
add
mov
jns
pop
cmp
and
lock
clc
div
stos
push
add
inc
add
push
cmp
jb
pushf
(bad)
mov
jbe
or
mov
into
shl
ss
add
pop
xchg
sub
sbb
push
sbb
inc
sbb
push
cli
add
pop
push
jb
jb
xchg
adc
es
pop
loop
mov
cmp
add
cmp
mov
mov
sbb
sbb
cmps
ret
push
dec
xor
fistp
push
test
xchg
dec
fdiv
(bad)
adc
push
fdivr
outs
mov
test
pop
or
sub
stos
inc
je
lock
fild
ror
lds
jno
(bad)
push
in
bound
pop
aad
cmp
loopne
cli
push
push
mov
push
mov
cwde
outs
jle
lock
cld
push
cmp
dec
mov
cmp
pusha
loope
sub
aam
popa
mov
sub
shl
pushf
adc
loope
fdiv
add
in
push
or
add
mov
icebp
jmp
outs
mov
cmp
or
or
nop
push
inc
cli
ins
in
fs
add
sub
loop
mov
mov
and
push
add
cld
into
mov
mov
std
inc
xchg
fadd
int3
or
repnz
or
rcl
loope
jno
and
jmp
out
jecxz
lods
cmp
int3
and
test
rol
inc
retf
sbb
ss
or
aad
xchg
dec
xchg
push
lock
and
int3
(bad)
adc
mov
ud2
test
loopne
xadd
push
jb
mov
push
sar
out
mov
sub
push
cld
lea
xor
add
ss
sti
dec
aam
mov
mov
lods
loope
lods
out
sub
imul
or
sub
jnp
add
sub
sbb
sub
push
pop
sbb
fidiv
imul
or
pusha
and
repnz
add
or
(bad)
retf
mov
xor
cmp
mov
pusha
cs
jae
mov
pop
inc
push
movs
(bad)
in
mov
xor
js
into
pop
cmp
add
xlat
icebp
push
nop
add
sahf
or
push
fild
jmp
out
jge
movs
or
jo
cdq
dec
leave
mov
cmp
jge
push
shr
arpl
test
pop
mov
push
fs
clc
test
inc
pop
jbe
adc
out
push
loopne
xchg
or
mov
imul
bound
mov
pop
jb
repz
(bad)
mov
scas
push
call
adc
scas
call
sub
cmps
dec
and
iret
add
(bad)
pop
cli
push
jb
pop
dec
sbb
gs
jno
imul
add
sbb
add
(bad)
pop
adc
lods
xlat
shl
shl
jno
int
dec
call
in
add
and
xchg
push
sub
call
mov
lods
imul
pop
push
in
cmp
inc
int
pop
dec
xlat
pop
hlt
arpl
dec
mov
(bad)
in
push
pop
pop
sub
xchg
enter
ror
or
(bad)
jb
jp
xor
sahf
pop
xchg
pop
cmp
inc
imul
fsub
inc
leave
scas
loopne
mov
call
in
cdq
fs
in
enter
movs
enter
gs
cs
xchg
xchg
pushf
inc
in
and
daa
daa
call
sbb
(bad)
in
mov
scas
(bad)
ds
ret
and
aaa
and
mov
pushf
jl
or
push
hlt
cmp
je
sub
cmc
jmp
jo
out
cmp
push
pop
jl
cmp
add
jmp
test
repz
xor
mov
sbb
fdivr
call
xor
fisub
(bad)
sub
cmp
jae
add
shl
inc
in
icebp
or
or
jne
and
lock
shl
loopne
lea
(bad)
in
sub
or
adc
lods
add
or
push
sub
jne
sbb
daa
or
adc
jl
cmp
bound
jmp
call
pop
mov
push
inc
mov
loop
adc
adc
or
loope
lea
push
push
sbb
fstp
cmp
mov
dec
push
pop
ror
add
or
in
test
add
cld
and
jp
retf
dec
call
or
push
add
push
lock
je
mov
cmp
dec
fs
in
test
and
mov
and
aas
xchg
lock
ret
cmp
push
jecxz
cli
je
aam
scas
add
mov
and
movs
sbb
inc
outs
cmp
add
cmp
das
(bad)
enter
xor
cmp
(bad)
push
int3
jmp
mov
inc
mov
sahf
fistp
mov
mov
cmp
(bad)
dec
lahf
add
push
dec
xor
push
jl
data16
or
add
stc
or
adc
lock
mov
vmwrite
jecxz
les
add
and
dec
cmp
sub
(bad)
push
cmps
inc
dec
mov
lock
int3
mov
lock
les
ins
push
xor
add
and
sub
cmp
loopne
push
les
push
dec
jnp
add
or
push
mov
jb
data16
or
pop
loop
inc
arpl
(bad)
movs
push
and
mov
push
add
adc
(bad)
sub
mov
in
cmp
or
push
inc
cmps
xor
inc
and
in
pop
dec
jb
cld
in
adc
push
pop
rol
cld
add
push
jae
mov
lock
xchg
sub
in
bound
loopne
cld
xor
lods
add
daa
rcr
sbb
ss
or
inc
sbb
hlt
inc
mov
xlat
mov
ss
sbb
fnsetpm(287
movs
adc
mov
push
sbb
cwde
mov
js
add
cdq
add
inc
lock
add
nop
jl
mov
lock
leave
leave
repz
add
aam
rol
je
cmp
add
inc
bound
cmp
shl
mov
test
ins
mov
fsub
ds
(bad)
adc
dec
sbb
ins
sbb
or
in
mov
mov
ret
adc
inc
xor
shl
and
loope
rcl
lock
adc
enter
adc
dec
xchg
jne
mov
add
sub
clc
test
jae
nop
and
cmp
or
(bad)
sub
movs
(bad)
add
sar
or
and
addr16
retf
clc
js
loopne
cld
in
test
int3
cdq
call
retf
mov
lock
sbb
xchg
mov
xchg
mov
push
repnz
clc
mov
adc
mov
out
nop
mov
and
clc
inc
scas
in
clc
clc
dec
jb
nop
clc
dec
mov
nop
cld
mov
test
lock
iret
jae
enter
and
leave
and
push
xor
enter
pop
inc
enter
cmp
test
or
clc
push
jns
sbb
sub
hlt
jae
xor
inc
aam
inc
movs
mov
xor
xor
add
pushf
cld
into
js
test
mov
mov
cmp
inc
push
jnp
and
jns
fistp
ret
or
mov
or
xor
cmp
pop
inc
or
push
jno
ror
xlat
sub
pop
ret
add
repnz
in
mov
xchg
adc
jl
test
pusha
pusha
sub
loop
sbb
outs
inc
mov
push
mov
(bad)
stos
movs
inc
ins
sar
jae
mov
cdq
push
dec
inc
sub
inc
(bad)
call
dec
or
call
sub
sub
cld
test
pop
enter
sub
js
mov
into
ret
ror
ss
jo
push
ror
push
add
xchg
sbb
dec
or
js
adc
mov
inc
in
les
cmp
add
into
jmp
shr
fidiv
pop
lods
test
das
loopne
pop
js
sbb
adc
(bad)
retf
sub
ja
jp
jmp
add
jl
out
mov
cmp
shl
or
mov
mov
adc
jmp
mov
(bad)
mov
mov
test
mov
imul
adc
or
sub
mov
mov
sub
stos
scas
mov
adc
lods
jae
test
movs
push
mov
retf
loopne
add
cmp
push
mov
add
rcl
and
cmp
push
(bad)
jmp
inc
test
test
lods
jle
jno
mov
add
sbb
mov
pusha
retf
jo
push
pop
xor
adc
(bad)
jmp
sbb
jmp
dec
(bad)
fwait
adc
in
dec
test
int
leave
enter
or
or
pop
xchg
sbb
dec
repz
dec
loopne
and
jge
jne
ror
mov
call
and
dec
push
mov
push
dec
cmp
shr
fwait
add
fiadd
sub
icebp
lea
ror
push
or
mov
mov
test
adc
push
sub
ds
data16
jb
sub
icebp
pop
add
in
or
sbb
stc
dec
(bad)
sbb
push
push
push
leave
ret
test
jae
inc
add
or
ins
mov
popf
data16
sbb
sub
lods
dec
adc
add
adc
and
xor
popf
or
mov
mov
mov
adc
iret
jge
imul
or
movs
add
xor
mov
sbb
add
in
bt
(bad)
mov
sbb
push
cmp
xor
hlt
sbb
pusha
sbb
gs
mov
mov
inc
shl
adc
sbb
test
js
inc
mov
loopne
in
push
sub
mov
mov
and
sbb
fs
xor
lods
jl
dec
push
mov
xor
mov
mov
pop
pop
(bad)
out
and
leave
xor
adc
ret
aas
pop
(bad)
(bad)
push
cmp
and
xor
aaa
aam
cwde
mov
loopne
sahf
or
call
push
push
shl
pusha
daa
dec
jne
and
mov
sub
mov
mov
scas
lock
pop
cmp
jbe
gs
mov
mov
xchg
fs
pop
mov
jge
imul
not
add
in
push
inc
hlt
je
push
add
xchg
and
arpl
imul
movs
mov
(bad)
cmp
jmp
movs
(bad)
jae
mov
mov
jb
mov
cmps
push
and
dec
sub
sub
push
js
add
test
add
and
pop
sbb
call
add
stos
(bad)
lock
xor
stos
push
push
(bad)
enter
cmp
sahf
xor
push
add
add
je
mov
mov
adc
das
cmp
xchg
adc
add
adc
or
fldcw
mov
sub
or
enter
(bad)
or
out
mov
xchg
mov
xchg
mov
daa
pop
add
add
xor
dec
and
jns
push
and
mov
sbb
fs
nop
inc
movs
push
push
arpl
mov
adc
inc
and
push
js
push
fwait
adc
(bad)
call
sbb
lods
in
push
sbb
jnp
push
enter
popf
inc
mov
push
int3
pusha
(bad)
ror
mov
sbb
add
add
or
xchg
sub
(bad)
sti
push
je
cli
pop
mov
pop
ret
pop
mov
aam
push
push
mov
adc
ins
push
inc
int3
add
mov
je
or
lock
cmp
add
sbb
inc
xor
xchg
cli
out
sbb
shl
pop
mov
xor
push
dec
fs
inc
jo
(bad)
retf
test
add
inc
jmp
push
cmp
cmp
imul
adc
cmp
dec
fisubr
push
aaa
sar
and
and
inc
sbb
sub
jne
and
cmp
jecxz
and
popa
mov
cld
in
dec
mov
jge
xchg
neg
jmp
or
movs
adc
cli
add
fisubr
outs
cmp
jge
and
push
cwde
mov
ja
push
fs
jge
pop
ds
jl
dec
and
shr
lock
(bad)
mov
ret
into
mov
fisttp
push
sbb
in
cmp
(bad)
ins
jae
jb
xor
call
and
mov
xchg
leave
rcr
sub
add
aam
pop
xor
sub
cmps
hlt
adc
pop
loop
fisub
imul
and
jnp
xor
mov
mov
jl
push
sub
scas
push
mov
jmp
(bad)
pop
push
mov
je
inc
cmp
(bad)
movs
cmp
add
jb
cld
lods
jmp
je
inc
cmps
dec
sub
sub
push
push
mov
mov
push
hlt
pop
hlt
and
mov
lods
clc
into
add
inc
sub
dec
and
ins
out
add
dec
jmp
outs
cmp
add
push
test
jl
jge
fwait
adc
mov
or
fwait
cmps
inc
movs
adc
test
or
dec
aam
xchg
adc
add
movs
mov
mov
xchg
push
js
cmovo
mov
push
sub
fdiv
push
pop
sar
and
(bad)
xor
pop
pop
or
out
push
shl
adc
adc
mov
rol
jne
(bad)
mul
lock
shl
pop
and
cmp
mov
and
retfw
sbb
adc
sub
mov
dec
cmp
mov
inc
pop
add
mov
inc
test
mov
loopne
mov
or
inc
add
in
pop
es
or
div
and
sub
push
retf
mov
sub
xor
and
mov
out
add
dec
mov
adc
inc
inc
dec
dec
xchg
lods
push
rol
pushf
fs
clc
push
pop
jg
and
or
mov
jbe
mov
aas
xor
add
adc
cmp
mov
mov
cmp
jnp
movs
inc
jg
ret
add
push
jae
lods
or
add
xor
xchg
in
jne
popa
inc
xchg
je
clc
(bad)
sbb
or
and
lea
cmp
fs
enter
mov
retf
push
jecxz
sub
push
nop
fistp
dec
out
in
mov
push
push
add
sbb
and
push
push
and
jbe
dec
ja
add
add
test
xchg
dec
mov
push
dec
(bad)
jbe
adc
cmc
hlt
cmp
add
pop
push
xor
xchg
shl
shl
xchg
inc
push
push
test
mov
xor
out
mov
iret
or
into
xor
add
inc
mov
add
outs
add
or
out
dec
mov
sbb
add
in
shr
ror
add
cdq
push
cmp
and
loop
push
mov
popf
inc
movzx
cmp
sar
imul
adc
pusha
sar
cmc
or
or
push
or
nop
push
sub
idiv
loop
add
jge
loope
and
cmp
or
mov
dec
fimul
pop
or
sub
in
aaa
sub
or
add
enter
push
xchg
cli
icebp
pop
cld
dec
or
add
lea
aam
push
cs
or
jl
shr
xchg
add
inc
push
ins
add
bound
or
fstp
in
out
add
pop
mov
dec
or
sbb
lea
xchg
jl
ficomp
jnp
jbe
popf
sub
in
sbb
add
xchg
pushf
mov
rol
pop
pop
not
sar
inc
test
mov
push
add
dec
cmp
cmps
test
cs
imul
or
dec
clc
xchg
fisttp
push
rol
ss
mov
dec
inc
cmp
and
fs
je
enter
hlt
add
adc
sub
pop
xor
sub
push
cs
test
cmp
inc
push
ja
(bad)
cli
push
adc
in
pusha
fnstcw
mov
push
jmp
push
lock
sub
adc
fisttp
push
pusha
cs
aad
jno
push
mov
pop
ja
into
scas
es
push
add
jb
mov
jae
mov
ins
das
xor
push
dec
inc
jb
lea
add
jne
inc
inc
lea
dec
ds
fiadd
adc
push
push
jl
adc
ror
ins
mov
dec
test
xlat
adc
pop
add
cmp
adc
adc
inc
dec
and
sub
mov
or
in
pushf
mov
jbe
sbb
or
nop
data16
sbb
jge
push
loopne
ja
sbb
(bad)
out
xor
bnd
fbstp
enter
hlt
and
lods
pop
jb
cmp
and
sbb
dec
les
mov
mov
int3
test
add
test
ret
adc
add
ins
mov
pop
dec
push
or
inc
dec
dec
xchg
stos
sbb
pushf
lods
add
pushf
cmp
adc
add
shl
add
jge
pop
inc
pop
add
push
nop
dec
(bad)
inc
mov
outs
pop
iret
xchg
out
jg
pop
mov
ds
stos
repnz
add
sub
adc
xchg
xchg
cmp
sbb
cmp
mov
pop
aad
fwait
mov
dec
sub
cmp
into
test
mov
and
mov
add
adc
fisub
push
dec
sbb
mov
push
fs
push
dec
jmp
mov
mov
inc
inc
bound
inc
loopne
push
iret
(bad)
and
jns
mov
mov
push
jb
clc
add
push
mov
push
pop
adc
adc
into
xor
xchg
std
in
arpl
push
mov
ja
xor
fld
inc
dec
ss
xadd
imul
or
push
inc
fcmovbe
hlt
sub
out
mov
int
retf
aad
sbb
cmp
jbe
mov
fs
ins
cmp
mov
dec
test
jne
std
xchg
call
push
fsubr
or
shr
dec
jge
push
(bad)
adc
test
cdq
add
sub
push
in
in
dec
inc
stc
pop
and
(bad)
add
mov
ss
ret
jb
pop
mov
fisttp
iret
leave
sub
mov
add
popa
xchg
mov
mov
inc
or
ja
sbb
ror
imul
adc
enter
loopne
cmp
pop
das
add
ja
pusha
sbb
sub
push
mov
es
push
aas
test
add
and
inc
dec
jne
nop
stos
nop
test
push
enter
arpl
dec
mov
add
rol
mov
in
jne
cmp
and
inc
mov
jmp
lahf
xchg
add
cmp
and
neg
cmp
(bad)
push
loope
pop
push
mov
cmp
mov
adc
sub
imul
aaa
mov
pop
sub
push
and
int3
imul
shr
or
or
sub
mov
clc
dec
adc
sub
int3
ss
or
mov
fdiv
aam
es
lock
popf
jns
and
adc
mov
sbb
mov
jne
xchg
add
sub
inc
add
imul
pop
lock
les
sub
dec
mov
push
add
inc
add
add
mov
push
cs
and
jmp
push
push
mov
push
outs
xor
inc
xor
retf
jne
(bad)
stc
lock
cmps
(bad)
or
sbb
dec
adc
or
lea
das
(bad)
enter
adc
pop
not
rol
arpl
es
inc
sbb
test
pop
sbb
mov
or
mov
in
jbe
js
arpl
call
push
dec
push
jl
add
adc
sub
pop
sahf
dec
mov
add
xor
and
push
cmp
adc
int3
mov
xor
or
add
mov
outs
and
and
push
aas
sbb
mov
adc
sbb
imul
add
sbb
jl
popa
enter
sub
mov
pop
adc
inc
pop
jbe
push
add
mov
xor
push
push
push
nop
sub
vpshlw
and
inc
shl
imul
adc
add
and
xor
cmc
nop
adc
jle
xchg
ret
call
in
xor
dec
mov
dec
push
add
repnz
rol
in
arpl
sub
imul
addr16
data16
push
out
push
sahf
out
lods
adc
repnz
ins
jl
iret
rol
adc
int
rcl
dec
je
int
fnstcw
dec
jbe
and
int
imul
in
ins
dec
ins
cmp
movs
das
gs
je
dec
add
xchg
ret
adc
outs
xlat
mov
or
push
sti
lods
rcl
sbb
mov
ds
pop
pop
mov
sahf
add
scas
sub
jo
popa
mov
xchg
aaa
sahf
mov
shl
inc
adc
pop
xchg
push
sti
or
cmp
and
jno
or
add
lea
sti
in
push
dec
and
fsubr
xor
shl
sub
inc
fcomp
aam
ficom
loopne
adc
push
cmp
sar
cmp
loopne
les
sub
subps
sahf
add
xor
dec
sbb
mov
and
add
push
adc
add
out
retf
mov
js
xchg
ja
(bad)
nop
adc
movs
xor
jnp
mov
retf
lea
shl
sar
in
int3
jbe
jne
inc
inc
dec
pop
loopne
inc
outs
push
push
jmp
push
and
add
sti
dec
and
add
cli
jnp
mov
addr16
push
add
push
gs
push
les
jae
loopne
sbb
cli
and
mov
jbe
enter
sub
ret
ins
cmp
push
sbb
jb
mov
aam
jmp
sbb
loopne
jp
test
push
pusha
pusha
mov
(bad)
fcompp
inc
sahf
add
adc
xor
cmp
sbb
test
sbb
xor
scas
mov
or
mov
enter
ret
dec
inc
xacquire
adc
(bad)
(bad)
dec
dec
stos
unpcklps
sbb
dec
loopne
call
dec
mov
jne
jmp
adc
push
mov
icebp
cdq
cmc
imul
dec
push
sub
aas
cmps
xor
mov
pop
mov
mov
fwait
push
retf
adc
sub
jg
test
xor
stos
add
loop
pop
adc
fsubr
inc
jg
inc
add
mov
inc
cmps
mov
add
add
dec
mov
mov
mov
jne
loope
sahf
inc
call
jbe
mov
mov
sub
jg
add
je
pop
imul
sti
mov
add
fld
dec
pop
push
add
fidivr
cwde
jae
lock
aam
dec
sbb
mov
sbb
add
das
fidivr
repz
jmp
push
inc
or
sbb
out
mov
scas
or
add
add
enter
sub
adc
add
jb
mov
movs
add
es
add
xchg
shr
ficomp
push
fs
mov
sbb
mov
mov
and
ss
sub
sahf
push
loope
or
stc
adc
ins
mov
rcr
pop
jne
cmp
cmp
lods
mov
out
hlt
retf
retf
pop
lea
dec
pop
xor
inc
inc
push
cmc
pop
add
xor
add
cmp
call
mov
dec
xor
repnz
sub
pop
pop
rol
push
xor
in
or
add
and
call
test
out
jns
jge
pmaxub
loopne
xchg
cmps
rcr
sbb
pop
xor
shr
adc
or
sub
mov
push
leave
hlt
jge
mov
sbb
sub
js
push
jmp
test
jle
inc
pop
dec
loop
mov
lock
clc
jno
enter
push
inc
mov
and
fdiv
add
into
sub
jl
jb
fadd
adc
sbb
loopne
(bad)
xchg
jne
mov
sbb
sbb
fld
adc
dec
(bad)
sub
nop
inc
or
and
adc
sar
sbb
add
test
sbb
stos
adc
sbb
adc
es
add
push
cs
lea
bound
dec
imul
sbb
sub
cmp
sub
mov
cli
inc
stc
outs
push
mov
clc
pop
mov
sub
mov
scas
add
ja
sbb
and
call
sub
rcr
add
data16
mov
xchg
inc
mov
xor
das
mov
jbe
shr
movs
push
or
lea
in
imul
jne
pop
dec
ins
stos
and
pop
test
cli
or
js
and
retf
adc
xchg
nop
lods
dec
and
add
xchg
add
jne
in
mov
aas
(bad)
ret
adc
out
pusha
cmp
adc
and
movs
adc
xchg
add
jne
pop
mov
push
test
pop
icebp
add
or
cmp
jae
test
fcomp
nop
lods
or
dec
mov
lock
xor
or
push
fcmovbe
out
jge
sbb
jmp
or
or
ret
jae
push
adc
add
push
xor
dec
add
popa
adc
movs
sub
rcl
mov
xor
lock
xor
movs
inc
mov
mov
pop
push
pop
ss
sbb
mov
rcl
fsub
push
mov
xor
ss
mov
(bad)
cmp
or
icebp
add
jne
(bad)
mov
add
xor
(bad)
or
rcl
iret
shr
inc
mov
sbb
loopne
mov
pop
dec
sbb
cmp
xchg
test
mov
adc
fmul
mov
sub
(bad)
neg
shl
add
push
mov
mov
add
stc
lar
add
dec
dec
dec
add
dec
dec
dec
or
or
dec
dec
dec
or
js
or
dec
jne
inc
push
sub
push
add
inc
xor
xlat
cmp
cmc
mov
mul
punpckhwd
xchg
cdq
cs
mov
jp
loop
mov
(bad)
pop
mov
rcr
and
js
not
xchg
and
in
rol
sbb
adc
rol
or
call
adc
outs
push
add
fadd
fcomp
es
fild
or
adc
xchg
dec
popf
dec
cdq
jl
pop
addr16
sbb
mov
dec
popf
cld
pop
leave
cli
push
add
and
ins
int3
mov
fidivr
ins
test
inc
or
aam
or
stos
mov
sti
inc
inc
mov
das
adc
clc
sub
mov
or
and
dec
rol
add
(bad)
push
bnd
adc
(bad)
adc
xchg
sub
cmp
mov
jne
push
pop
sub
nop
adc
mov
pop
ret
jg
xor
shl
hlt
cdq
cli
add
cmp
and
ror
pushf
and
mov
xchg
fs
add
movs
mov
enter
jge
or
or
pop
jns
mov
shl
sbb
pop
xchg
add
push
jo
nop
mov
(bad)
imul
or
rdtsc
ins
les
nop
adc
mov
and
test
popa
or
mov
stc
cmps
xor
push
ins
push
js
arpl
ja
adc
xor
adc
test
adc
int
cwde
add
adc
sbb
loopne
sbb
repnz
ror
and
ret
and
mov
xchg
push
fnop
jne
push
push
xor
loopne
out
jmp
mov
shl
mov
push
rol
repnz
or
pop
cli
add
dec
cmp
or
mov
or
mov
or
or
cli
sub
xor
ins
aaa
sbb
leave
dec
push
or
push
dec
mov
push
leave
fsubr
test
call
inc
push
cwde
js
loopne
ja
xchg
push
loopne
inc
push
add
mov
hlt
adc
and
into
push
cmp
inc
fdivr
(bad)
cmps
jno
test
or
jmp
cmp
jne
retf
sbb
inc
ret
(bad)
js
xor
add
mov
pushf
cmp
dec
cmp
and
les
dec
lahf
(bad)
loopne
int
sbb
or
dec
loop
add
imul
outs
pop
and
add
xor
mov
push
test
ins
scas
test
inc
cmp
jl
pop
mov
xchg
xor
inc
loopne
mov
dec
mov
and
sbb
xchg
shl
cmp
pusha
sbb
loopne
inc
xor
xchg
xor
pop
aas
mov
pop
icebp
inc
dec
cmp
bnd
inc
xchg
jl
push
inc
outs
fwait
arpl
sahf
jmp
push
pop
popa
fnstsw
xchg
mov
jmp
xor
leave
jnp
jge
adc
push
push
sub
pop
retf
mov
mov
pusha
pop
and
push
or
mov
or
add
sub
imul
xlat
test
jo
sub
mov
ret
repz
int
or
ror
in
jb
jmp
sbb
jne
add
fdivrp
add
or
call
add
inc
sti
or
lods
cwde
xor
pop
pop
adc
and
cmp
xchg
and
or
aam
xor
dec
ds
jp
test
popa
adc
test
pop
mov
pop
push
imul
xor
add
pop
pushf
pop
(bad)
pop
mov
test
loopne
adc
je
adc
arpl
fist
js
es
inc
ret
cs
cld
clc
pop
ret
adc
jo
pop
cld
loope
ins
add
xor
push
adc
(bad)
add
add
jae
push
xor
pop
cmp
cmp
(bad)
(bad)
or
sbb
cmc
mov
ret
push
cmp
ret
push
mov
adc
outs
pop
stos
imul
bound
in
cmp
je
je
out
push
fdiv
push
stc
cmp
inc
or
sub
inc
enter
push
mov
ret
fdivr
out
add
movs
adc
scas
mov
iret
mov
sub
das
mov
int3
rcl
imul
lods
or
push
sub
mov
in
lock
sub
cmp
pop
push
jne
and
jne
push
xor
fmul
icebp
loope
and
sti
inc
shr
loopne
pop
add
push
fld
push
icebp
pusha
sub
jp
cmp
jp
xchg
pop
add
pop
imul
(bad)
jmp
lea
lock
sbb
push
push
aad
nop
mov
inc
add
mov
dec
dec
push
push
cs
retf
in
nop
cmp
mov
jb
pop
mov
retf
js
jo
push
fs
pop
clc
pop
test
or
fs
int
inc
lea
mov
ins
push
arpl
mov
loopne
pop
pop
xchg
push
push
fiadd
pop
dec
pusha
xor
idiv
mov
inc
out
iret
add
xor
and
and
(bad)
out
dec
mov
or
inc
add
pop
push
out
inc
mov
sub
sar
push
or
jae
xor
dec
(bad)
cmp
jp
inc
adc
sbb
and
into
lds
jbe
(bad)
call
adc
or
jne
cmp
jge
call
je
jmp
das
xchg
sub
mov
adc
xor
push
sbb
movs
pushf
mov
jne
xchg
movs
aam
push
adc
jg
push
mov
sbb
cs
mov
not
mov
das
nop
push
daa
push
sahf
add
(bad)
sbb
(bad)
mov
or
aam
pop
push
or
or
es
imul
pop
pusha
fmul
gs
xor
xor
push
dec
aas
fadd
out
data16
push
inc
mov
push
or
push
add
(bad)
mov
or
rcl
or
or
add
jg
push
add
xchg
shl
(bad)
pop
cmp
pop
cld
arpl
imul
fwait
dec
(bad)
cmp
inc
shl
inc
ja
mov
mov
add
mov
jo
cmp
xor
xor
add
lods
or
mov
sbb
outs
sti
outs
icebp
adc
mov
adc
ja
cmp
jbe
or
lock
mov
int
and
aas
pop
retf
mov
and
mov
rcl
popa
je
push
icebp
int3
lock
(bad)
pop
push
inc
xchg
cmp
and
mov
test
add
icebp
push
shl
shl
icebp
jle
pop
mov
push
lahf
push
shl
call
jmp
inc
mov
push
mov
push
ror
call
nop
sbb
repz
dec
loope
outs
rol
sub
cmp
div
repz
jmp
das
jl
retf
pop
cld
sub
sub
push
mov
mov
fidiv
sbb
mov
add
in
fnsave
aam
dec
test
add
lock
in
ficomp
sub
mov
dec
movs
inc
sbb
push
daa
xor
test
or
ror
xor
repnz
dec
xor
xor
sub
pusha
and
ja
push
ret
jmp
(bad)
ror
sbb
xchg
mov
arpl
enter
xor
shl
xor
stos
inc
jge
std
loopne
xchg
add
or
test
pop
call
sbb
xlat
push
or
aaa
push
cmp
fistp
add
cmp
sbb
sub
xchg
mov
fild
pop
call
inc
(bad)
pusha
lock
xchg
push
xor
call
lods
int
movd
cmp
pop
je
gs
test
sub
dec
mov
or
bound
sub
add
and
imul
add
cmp
out
mov
inc
rol
push
push
sbb
out
mov
test
cwde
mov
jl
fidiv
jmp
inc
jne
xor
gs
ins
mov
jo
push
add
sbb
div
push
jl
xchg
enter
call
push
daa
inc
mov
push
dec
mov
fs
add
pop
mov
pop
loopne
movs
(bad)
jae
ins
call
push
add
dec
out
sbb
sbb
add
add
mov
stc
and
push
sbb
fstp
retf
xchg
je
jb
lock
dec
push
pop
fs
stos
sbb
out
hlt
popf
aaa
adc
xor
scas
pusha
call
sbb
(bad)
add
inc
call
xor
xchg
cmp
sub
and
call
call
nop
neg
dec
add
sbb
add
gs
and
xchg
and
inc
cld
add
sbb
add
or
cmp
push
ins
jmp
in
sar
pop
jb
push
sar
outs
(bad)
xchg
shr
into
push
hlt
ror
sub
sub
mov
or
inc
xchg
sbb
mov
jbe
pop
inc
cmc
daa
mov
push
aad
jns
sahf
push
inc
mov
or
test
nop
jno
inc
xchg
ret
pop
test
test
in
dec
mov
and
jmp
fs
sub
(bad)
push
jl
mov
arpl
fcom
pop
jl
test
xor
add
aad
sub
jl
push
xor
cmp
push
push
pusha
mov
in
dec
pop
push
iret
push
inc
xor
sub
adc
adc
push
add
div
inc
loop
in
push
pusha
or
cmp
xchg
es
outs
or
sbb
xchg
mov
mov
or
jb
outs
stos
mov
retf
inc
adc
stos
push
dec
dec
dec
dec
(bad)
push
adc
inc
ja
sub
xlat
xor
mov
clc
sub
jmp
fild
hlt
sbb
jbe
mov
xor
loope
add
cmps
not
and
loopne
mov
add
and
shr
call
call
push
mov
mov
adc
fnop
ss
inc
or
push
adc
cmps
imul
sub
lock
pop
ja
mov
clc
pop
push
xor
(bad)
es
mov
das
inc
add
mov
cmp
dec
jae
test
hlt
or
mov
pusha
mov
jne
sbb
mov
or
shl
jne
into
rol
mov
cmp
scas
cs
jmp
cs
lods
sbb
add
adc
jmp
jnp
leave
jo
sbb
add
(bad)
sbb
dec
push
jecxz
rcr
rol
xchg
ror
lock
test
mov
dec
or
xor
cs
rol
adc
or
sub
xchg
iret
ret
lods
mov
mov
cld
loopne
push
inc
sbb
ja
add
sub
jmp
ficomp
jp
aad
mov
in
push
push
push
sbb
fcmovnbe
or
in
dec
test
enter
mov
sbb
loopne
enter
enter
add
cli
mov
or
pop
xchg
test
add
ret
sub
xor
push
cli
test
dec
mov
adc
inc
lea
push
mov
scas
fbld
inc
dec
adc
or
or
mov
dec
sbb
add
cdq
pusha
pop
(bad)
sahf
mov
dec
pop
jbe
add
je
xor
retf
pop
je
inc
sub
mov
(bad)
jb
in
mov
sahf
push
mov
icebp
adc
sbb
jne
fsub
adc
lock
add
cmps
and
loopne
sar
adc
fiadd
fs
out
add
rcl
popa
push
jge
mov
cmp
push
ins
shl
mov
sbb
lock
sar
mov
ret
sbb
and
sbb
dec
je
xor
test
push
or
jns
in
shl
inc
test
int
ret
int
loope
mov
add
rcl
movs
jg
icebp
sbb
sub
xor
pop
div
inc
out
sbb
adc
arpl
scas
xor
daa
ins
pop
scas
imul
mov
push
push
mov
gs
mov
sbb
add
adc
push
loop
mov
or
ror
dec
ret
add
lahf
jp
scas
push
mov
push
jb
or
pop
call
fld
in
sub
leave
cmp
push
or
scas
mov
push
push
mov
add
fistp
add
es
ins
sbb
pop
or
mov
arpl
out
cmovs
mov
sbb
hlt
cmp
adc
ds
or
rep
jmp
jmp
(bad)
and
inc
mov
mov
mul
add
xor
push
iret
jnp
cmps
push
fcomp
mov
adc
pop
mov
mov
or
scas
adc
(bad)
cmp
mov
add
mov
cmps
inc
add
add
inc
sub
and
jns
out
adc
add
sahf
xlat
inc
std
push
mov
pop
in
call
jns
in
lock
hlt
jns
out
clc
clc
cld
cld
(bad)
loopne
and
(bad)
lock
(bad)
xlat
jmp
and
leave
ret
nop
ins
or
or
pop
sti
and
and
mov
xor
jl
cld
or
std
(bad)
cld
out
loopne
neg
xchg
mov
nop
xchg
daa
stc
cmp
xchg
xchg
sub
mov
xor
shr
adc
fiadd
jl
mov
mov
sub
mov
add
popa
inc
push
out
push
add
nop
dec
dec
sbb
pop
add
jmp
xchg
or
push
movs
ds
repz
mov
(bad)
xlat
mov
aaa
sbb
sbb
adc
iret
repz
adc
or
test
repz
add
push
jl
xchg
or
push
or
xor
dec
push
add
and
daa
add
inc
xor
mov
cmp
je
movzx
sbb
sub
sub
adc
pop
stos
xor
sbb
adc
je
movzx
pushf
ret
shr
(bad)
inc
inc
ds
push
imul
inc
jmp
xchg
leave
cmp
rcr
scas
fs
xchg
nop
jl
stos
push
mov
adc
das
inc
and
adc
fdiv
sbb
(bad)
fiadd
mov
sbb
out
pusha
jnp
sbb
cs
xor
jg
jnp
add
mov
adc
push
shl
imul
fdiv
push
daa
shr
shl
shr
rcr
or
jne
lock
jecxz
ja
movs
out
shl
cmp
adc
mov
pusha
pop
or
add
push
jne
fsub
jg
fs
fiadd
pop
inc
bound
mov
movs
mov
xor
rol
adc
xchg
out
jg
mov
sub
je
out
repnz
inc
inc
xor
cmovs
push
pushf
cmps
repnz
cmp
fiadd
add
sbb
push
sbb
and
fisttp
sub
sub
sbb
sti
ss
icebp
cvttps2pi
mov
adc
add
cmp
pop
nop
ret
fwait
out
ins
loopne
push
clc
jg
rcr
lock
fldcw
jns
fcmovnu
rcl
ins
push
cmp
fild
jmp
cwde
mov
xor
mov
rcl
adc
mov
out
mov
shr
cmp
fsubrp
call
ret
mov
add
jmp
test
test
ins
imul
sub
push
arpl
cmc
sub
dec
jmp
outs
ret
push
fidiv
push
sub
push
mov
add
enter
inc
sar
or
retf
pop
mov
rep
mov
dec
jmp
lahf
ret
test
mov
sbb
push
std
and
dec
mov
inc
test
adc
mov
shr
add
adc
add
push
or
jge
xchg
(bad)
and
(bad)
call
aas
test
shl
cli
in
js
add
xchg
dec
dec
in
(bad)
shl
add
sti
inc
add
cmp
call
adc
add
loopne
xchg
push
test
sti
adc
pop
out
xchg
xor
push
add
pushf
add
cwde
and
imul
(bad)
jne
in
jno
out
jecxz
jnp
jge
cmp
mov
(bad)
aam
aaa
pop
retf
lods
jno
mov
or
call
inc
sub
push
jl
sbb
adc
ins
or
fsub
lock
push
dec
and
xchg
leave
add
mov
ret
test
iret
pop
pop
dec
loopne
sar
shl
mov
jne
or
fimul
pop
je
pop
mov
add
push
or
dec
mov
shl
jle
std
jge
test
or
or
dec
sub
sahf
leave
sbb
push
popa
add
scas
or
mov
pop
cmp
adc
inc
inc
invlpg
inc
inc
inc
adc
imul
adc
(bad)
mov
jne
stc
inc
cs
mov
cmp
mov
pop
or
adc
pminub
dec
jo
add
jp
push
cmp
iret
mov
adc
push
shl
out
add
sbb
dec
sub
call
dec
or
sbb
adc
sbb
jg
test
das
inc
inc
xchg
sub
push
push
aas
xor
sbb
mov
jo
mov
add
ins
jecxz
and
xor
cmp
mov
sub
lea
or
pop
xor
ja
and
lock
inc
xchg
cmc
pop
inc
inc
inc
inc
inc
mov
inc
adc
enter
enter
and
mov
inc
and
cmp
sub
add
int
and
stos
icebp
lods
and
mov
push
jne
nop
add
push
ror
test
pop
fs
adc
int
sub
mov
adc
inc
or
sbb
je
sub
popa
inc
and
sbb
ins
call
ja
sbb
lods
sub
push
ss
cmp
in
mov
adc
loop
outs
sti
sbb
inc
call
jne
cmp
das
add
outs
xor
sbb
push
(bad)
add
xchg
mov
mul
ss
pop
ins
adc
push
xor
mov
add
fcom
and
mov
sub
inc
or
mov
inc
add
hlt
pop
or
pop
cmps
xor
sbb
xchg
fisubr
shl
clc
inc
push
inc
int
lods
retf
inc
jecxz
and
cmp
add
nop
vcvtps2udq
in
or
add
push
sbb
mov
hlt
push
test
mov
jge
dec
mov
in
dec
or
scas
sahf
pop
pop
and
jnp
fwait
push
ja
das
push
nop
out
fwait
gs
cwde
or
cmp
adc
mov
fadd
mov
push
jp
std
add
or
lea
or
jne
mov
data16
lock
xchg
pop
jo
inc
ins
outs
dec
loopne
push
test
in
outs
mov
pushf
pop
add
mov
(bad)
nop
es
fadd
mov
dec
push
retf
js
xor
fs
rol
test
adc
out
xor
adc
xchg
adc
scas
(bad)
(bad)
adc
push
das
inc
call
jbe
mov
jmp
and
adc
arpl
add
loopne
mov
in
add
in
mov
je
imul
loopne
adc
mov
and
mov
jl
mov
lea
std
add
jo
sbb
loope
push
inc
dec
cmp
pop
jae
out
fs
adc
test
mov
xlat
mov
add
sahf
sbb
es
or
je
sti
int3
cmp
push
lock
ja
sbb
mov
(bad)
or
or
sub
add
dec
add
and
cmps
pop
push
inc
dec
idiv
or
cs
pop
cs
dec
mov
loope
xor
fisttp
add
jge
xchg
outs
or
xlat
sahf
inc
xchg
iret
es
pop
dec
xlat
data16
inc
(bad)
rol
data16
inc
inc
(bad)
jne
test
loopne
adc
fcom
clc
add
out
cs
pop
mov
xchg
gs
pop
(bad)
inc
sbb
or
iret
imul
mov
cmc
ss
mov
inc
push
aaa
add
dec
mov
add
xor
mov
and
adc
jp
or
ins
inc
call
or
mov
ret
(bad)
std
dec
inc
push
dec
xor
jb
adc
push
adc
data16
repz
jl
xchg
push
inc
mov
scas
dec
cmp
leave
pop
push
repz
xchg
sahf
mov
or
mov
sbb
ss
or
inc
jo
xor
(bad)
leave
xor
movs
in
pop
lock
adc
pop
pop
movs
cs
push
ins
pop
repnz
adc
jl
sub
call
mov
icebp
int3
or
retf
pop
jo
mov
adc
cs
inc
fst
scas
retf
add
mov
or
test
ds
gs
repz
daa
leave
cmp
nop
out
mov
mov
stos
je
push
mov
mov
or
shl
and
and
jb
stos
mov
sbb
inc
bound
inc
retf
and
sbb
fisttp
sbb
mov
push
push
cmp
icebp
adc
stc
lock
inc
(bad)
xor
es
inc
mov
jno
sbb
jecxz
push
test
and
in
sbb
xchg
mov
jb
inc
push
dec
mov
das
and
xor
mov
shl
cld
sbb
add
scas
adc
inc
sbb
stos
push
xor
jmp
inc
jp
pop
pop
xor
jmp
jp
fwait
leave
repz
adc
or
test
or
add
adc
push
push
or
mov
sbb
xor
adc
pusha
sbb
cmp
cmp
jns
sbb
or
add
sub
or
fsub
lock
mov
loopne
test
gs
movs
adc
add
loope
dec
pop
adc
add
ror
es
cmp
outs
fdiv
scas
repnz
pop
xor
cmp
arpl
xlat
popa
pop
jmp
inc
pushf
sbb
mov
adc
addr16
and
(bad)
xlat
inc
test
and
fwait
movs
daa
xor
cli
je
sub
and
xchg
xchg
movs
je
mov
ja
push
fwait
jo
dec
and
jg
or
or
test
pop
test
aaa
xor
in
fxch
fyl2x
mov
mov
mov
mov
pop
mov
pop
jmp
test
and
leave
xor
jg
push
and
fcomp
sub
(bad)
mov
jmp
mul
jmp
push
lds
inc
mov
xlat
push
pop
cmps
nop
xor
int
sbb
dec
js
jmp
adc
mov
in
shr
js
mov
loopne
push
ds
ss
fadd
int
jmp
push
cmp
dec
dec
add
pop
cdq
fwait
cmp
add
fisttp
sub
lock
mov
dec
or
adc
jecxz
(bad)
adc
sub
sub
fst
(bad)
push
movs
pop
cdq
sbb
pop
mov
sub
xchg
push
retf
inc
into
sbb
mov
retf
xor
inc
dec
jne
test
je
stos
mov
sbb
mov
sbb
xchg
stc
jmp
add
fmul
popa
mov
rcl
movs
push
(bad)
jo
int3
test
push
mov
mov
arpl
jo
call
mov
loop
add
cmp
sbb
or
add
cmp
ins
fmul
add
mov
adc
inc
xchg
and
cdq
sbb
pushf
inc
xor
ins
xor
add
jns
push
adc
push
adc
push
inc
loop
jg
push
push
push
mov
and
adc
cs
or
and
push
addr16
sub
test
or
push
or
inc
popa
gs
add
mov
pop
bound
and
adc
sbb
int3
lods
mov
inc
mov
or
push
adc
add
das
ret
xor
xor
mov
fild
pop
cld
mov
pop
cmp
mov
jl
retf
sub
bound
outs
mov
dec
pop
sbb
test
inc
rcr
sbb
sub
loop
push
int3
push
cli
sahf
add
les
stos
push
popa
nop
loope
fucom
stos
or
jmp
das
aam
xor
adc
pop
mov
fsub
adc
xor
mov
(bad)
addr16
cmps
dec
push
push
sbb
and
adc
nop
hlt
rcl
adc
push
aaa
shr
or
vpcmpeqd
sub
push
pop
push
sbb
and
rcl
unpcklps
mov
mov
inc
inc
cmp
add
loopne
sbb
loope
xchg
hlt
out
jns
mov
push
sub
popa
mov
jp
mov
push
inc
call
(bad)
xor
leave
cwde
leave
sbb
push
or
cmp
lods
xchg
loop
out
test
(bad)
cmp
or
jmp
mov
push
pop
fstp
lock
outs
das
push
jne
outs
sub
popa
and
je
dec
inc
mov
sub
dec
push
ret
adc
sti
adc
je
mov
in
cmp
je
sar
in
ins
mul
pop
out
dec
mov
(bad)
jle
rol
mov
cs
ins
rol
mov
xor
sbb
ss
mov
jbe
sbb
push
push
cmp
xchg
stos
ds
mov
mov
(bad)
jmp
imul
mov
loope
les
adc
ins
cmp
push
mov
sub
jle
push
push
inc
pop
loope
add
cmp
pop
xor
mov
jmp
dec
or
or
push
add
jo
xchg
lock
jbe
dec
add
or
stos
fs
pop
add
xchg
cmc
js
ins
addr16
xor
mul
cmp
adc
cmp
push
call
or
add
(bad)
adc
jg
lahf
(bad)
shl
cmp
lock
add
adc
add
in
jge
add
jg
xor
lods
push
push
cld
inc
mov
sub
cmp
cmp
jne
inc
push
add
mov
inc
js
sbb
pop
daa
rcl
mov
xor
jmp
push
inc
jmp
movs
loopne
push
leave
adc
cmps
rol
leave
les
je
mov
inc
cwde
xchg
jo
add
in
pusha
test
cmp
add
mov
dec
and
shl
sbb
push
adc
jnp
xchg
and
pop
mov
mov
inc
imul
push
sbb
push
pop
fdiv
cmp
or
ret
aam
add
push
cmp
lock
dec
pushf
and
lods
or
mov
shl
sub
mov
push
sbb
movs
sub
cmp
mov
add
push
fild
aam
xchg
add
pop
jne
lds
add
or
movs
call
cli
sub
out
mov
iret
ja
add
jbe
js
sbb
mov
ret
jbe
ss
jb
xor
add
in
(bad)
jge
xchg
dec
inc
sbb
or
xchg
ds
or
nop
xchg
mov
sbb
cmps
bound
inc
scas
adc
adc
push
test
jmp
inc
push
and
fimul
es
test
call
aaa
pop
adc
pusha
dec
inc
lods
repnz
sbb
pop
push
dec
fcomp
js
ja
xchg
sub
fdiv
in
lods
mov
call
lock
lock
sub
dec
push
gs
add
(bad)
push
sbb
loope
repz
and
rcl
daa
add
or
adc
dec
jmp
push
retf
test
xlat
or
clc
inc
scas
aam
repnz
stc
in
dec
fisttp
sti
ret
add
add
inc
jecxz
adc
fld
cmp
adc
push
fs
retf
stc
or
add
push
push
add
scas
sti
out
sbb
inc
scas
in
scas
inc
enter
lahf
xchg
ror
xchg
adc
sub
mov
in
or
lahf
adc
rcl
mov
push
jo
pusha
sbb
dec
rcr
shr
push
mov
int3
rcr
ret
loopne
xor
inc
loope
cmp
inc
push
push
in
enter
xor
mov
in
in
push
hlt
jl
out
cld
add
or
daa
ret
sbb
shr
inc
mov
out
inc
or
pop
ins
ret
lahf
mov
jg
and
or
bnd
inc
pop
test
fdiv
loope
push
or
xchg
inc
jbe
add
cmps
xor
sub
loopne
push
or
dec
call
adc
push
sub
sbb
jbe
shr
xchg
sti
and
cmp
inc
dec
das
push
test
xor
fiadd
int3
sbb
loopne
jbe
mov
adc
int
ret
daa
rcr
cmps
mov
cmp
xor
mov
mov
push
rol
test
mov
sbb
fwait
add
cld
mov
inc
pop
jmp
cmp
cmp
jne
jmp
sub
add
loop
iret
mov
sbb
push
push
push
dec
push
inc
shl
popa
cwde
inc
rcl
cwde
or
push
cs
push
aad
pop
ret
dec
gs
or
hlt
add
cmp
xor
dec
lods
dec
mov
jp
ja
movs
ret
test
test
inc
sar
push
mul
mov
push
into
js
nop
hlt
push
push
out
inc
xor
push
adc
add
sub
pop
and
sbb
ret
shl
push
adc
xor
pusha
div
retf
cmp
icebp
mov
es
xor
jne
iret
sub
and
lods
xchg
xchg
les
cmp
and
push
mov
cmp
je
test
je
div
cmp
xor
xchg
pop
dec
rol
inc
loopne
std
sub
retf
rol
mov
or
xor
sub
inc
mov
popa
jae
add
add
or
fcmovb
ja
jl
or
jp
mov
arpl
ds
call
loop
and
mov
sub
shr
adc
leave
jl
inc
scas
add
(bad)
cmp
loopne
or
sub
sub
mov
mov
fadd
cmp
sub
inc
adc
(bad)
aaa
daa
add
add
je
push
mov
xor
pop
cmp
je
cmp
and
push
in
adc
pushf
jne
pop
jne
ret
mov
jne
inc
lds
popa
cdq
pop
mov
call
test
je
retf
sub
jmp
test
(bad)
inc
add
retf
sub
cmp
or
es
mov
sbb
or
mov
daa
sahf
and
add
jne
shl
outs
pushf
dec
test
jne
sbb
push
mov
pop
xor
mov
mov
push
in
or
test
and
xor
or
fimul
cld
jbe
cmp
mov
add
mov
xor
and
add
pop
add
ins
mov
mov
test
jge
sbb
pop
mov
mov
mov
movs
ret
stos
add
retf
pop
call
call
nop
dec
jecxz
jecxz
ret
loop
nop
add
push
sbb
jne
push
mov
inc
retf
jle
and
push
jne
mov
pop
fs
(bad)
jge
push
shr
out
sbb
bound
out
mov
sub
sbb
and
cmps
mov
loop
jmp
mul
dec
and
add
in
cmp
dec
and
loope
fucomp
(bad)
hlt
jmp
test
call
int
inc
dec
sub
ret
dec
push
cmp
push
add
inc
add
sub
rol
lea
loopne
add
push
sub
loope
nop
clc
(bad)
rcl
shr
enter
cmp
and
mov
xor
shl
fs
loopne
xor
jnp
mov
out
add
jmp
pop
adc
sub
inc
mov
or
out
in
mov
in
dec
push
add
test
and
sbb
mov
je
lea
xchg
add
outs
xchg
push
sub
xlat
push
or
in
add
xor
mov
jne
cmp
or
sbb
pop
mov
or
mov
cmp
pop
add
outs
cmp
add
add
loopne
inc
cmp
xor
stos
pop
popa
jo
sub
dec
push
imul
test
imul
add
aaa
push
cmp
lahf
and
or
jmp
(bad)
pop
mov
retf
mov
clc
push
int3
mov
xchg
pop
and
mov
push
or
clc
mov
test
cmps
data16
out
lock
test
test
je
fwait
jae
call
or
test
cdq
inc
jnp
or
das
inc
jg
pop
fsqrt
cmp
xor
xchg
scas
fld
sub
mov
and
call
or
add
movs
xchg
mov
test
daa
or
mov
sahf
call
and
imul
mov
adc
gs
add
sub
loopne
dec
inc
mov
xor
rcr
or
shl
mov
sbb
ds
add
aam
xchg
test
(bad)
xchg
or
call
mov
jae
xlat
sahf
inc
push
in
rcl
lds
ret
inc
push
dec
shl
or
xor
and
and
pushf
cmps
or
push
js
(bad)
mov
idiv
jnp
mov
pop
pop
xchg
(bad)
push
jp
dec
dec
ins
pop
aam
sub
into
sbb
adc
cmp
inc
mov
jg
out
push
and
ins
or
or
push
retf
sub
mov
jns
(bad)
dec
jl
add
pop
and
dec
sub
or
or
mov
jmp
in
jno
add
jle
sub
and
sbb
dec
adc
test
lea
jle
xchg
arpl
add
jne
adc
push
push
jbe
xor
inc
sbb
mov
(bad)
dec
lods
dec
cli
pop
jg
jmp
add
push
pop
jl
or
push
sbb
dec
cdq
push
mov
aam
(bad)
and
cs
je
sbb
sub
jne
sbb
loope
fsub
jne
pop
or
inc
push
fmul
add
nop
sahf
cmp
push
mov
jmp
shl
aaa
loope
fdiv
sub
pcmpgtb
imul
xchg
jg
lock
(bad)
inc
mov
sub
sbb
add
pop
cmp
and
cmps
or
xor
ins
hlt
inc
mov
out
je
cmps
jle
mov
jg
pop
dec
rcr
mov
mov
loopne
in
aam
or
dec
push
add
mov
popa
sbb
sbb
sub
lods
cmp
mov
rcl
fcomi
movs
push
jle
cld
adc
jg
rol
push
cmp
and
jge
ja
add
lods
cs
pop
inc
dec
pslld
(bad)
push
add
shl
sub
mov
sub
push
or
dec
or
fxch
jne
test
mov
push
and
or
jnp
in
cmp
test
mov
in
sbb
push
es
mov
mov
loope
dec
rcr
sar
in
(bad)
mov
repz
mov
xchg
inc
mov
dec
(bad)
mov
cdq
aam
push
or
mov
adc
mov
sbb
(bad)
dec
cld
jmp
cmp
(bad)
ja
fdivr
je
mov
enter
sbb
jmp
outs
sub
adc
iret
sub
pop
adc
xchg
jl
mov
dec
push
or
retf
sbb
stos
adc
adc
shl
or
loope
sbb
push
dec
mov
mov
pop
add
jne
push
hlt
adc
inc
in
scas
mov
push
sti
jmp
xor
push
add
xor
xchg
out
movs
arpl
(bad)
rcr
jle
dec
mov
cmp
movs
and
push
cli
cmp
and
jmp
push
cmps
hlt
inc
jl
sbb
ss
dec
or
mov
cmp
or
jns
pop
jnp
mov
add
or
aad
aas
sbb
fdivr
pop
je
pop
fild
aad
sub
into
adc
adc
xor
movs
icebp
xor
ret
loop
jb
mov
scas
mov
cmp
xor
push
cmp
jl
and
jg
call
adc
sbb
xor
pop
imul
jne
clc
cld
mov
ja
mov
add
into
ret
dec
or
push
loop
(bad)
jb
sub
lea
or
or
scas
mov
dec
test
and
pop
mov
fld
ds
retf
add
mov
cdq
sub
gs
or
mov
ins
dec
adc
sbb
adc
push
and
mov
xchg
xchg
ds
lds
add
imul
xor
jne
jne
frstor
fcmovnu
out
scas
xlat
or
push
aad
das
enter
add
adc
dec
sahf
mov
mov
sub
pop
cmp
jle
xchg
mov
mov
mov
inc
jl
adc
jl
or
pop
jnp
aam
or
dec
adc
adc
call
inc
pop
mov
aam
add
imul
jno
add
xchg
sbb
cmp
ins
(bad)
sti
cmp
sub
xchg
rcl
enter
pop
push
jg
clc
dec
call
int
dec
cmp
in
jle
push
dec
adc
data16
sbb
push
mov
push
cmp
call
ja
cdq
push
mov
call
jmp
pop
hlt
popa
jne
repz
cmc
or
dec
cmp
lock
pop
lds
mov
fmul
scas
ins
jl
push
lods
lock
pop
and
mov
pushf
and
push
adc
mov
mov
lock
add
xor
and
or
retf
xlat
adc
mov
fmul
cmp
push
scas
shl
ja
sbb
jbe
inc
retf
and
stos
push
cmps
clc
push
test
call
push
push
retf
inc
hlt
sub
xor
adc
cmp
fyl2x
mov
xlat
je
cmp
(bad)
clc
adc
shl
test
mov
inc
add
fadd
rol
jge
fmulp
dec
dec
push
jmp
inc
(bad)
and
je
cmp
inc
in
call
jb
dec
fisub
sbb
sub
hlt
mov
loope
push
mov
and
pop
das
jmp
and
ret
retf
push
aas
ins
add
sub
aas
push
mov
mov
and
pop
rcl
mov
adc
clc
add
or
mov
rcr
push
jmp
sbb
out
pusha
push
cmp
xlat
cld
imul
mov
movs
adc
sahf
add
out
shr
fcmovnb
sub
xor
ret
mov
jae
stc
inc
lock
or
ins
push
outs
ja
cmp
xor
mov
icebp
jmp
lods
mov
and
fs
xchg
xor
inc
pop
lock
add
ret
mov
pusha
mov
popf
aaa
aam
or
push
cld
std
ins
(bad)
mov
fadd
dec
add
or
test
dec
mov
mov
sub
call
test
test
mov
test
sbb
call
addr16
imul
test
cmp
mov
xor
dec
mov
add
or
xor
test
xchg
dec
jg
loope
js
mov
retf
(bad)
jno
adc
add
push
wbinvd
cmps
jne
(bad)
cmp
shr
inc
and
sbb
jb
pop
xor
inc
mov
jb
dec
pop
cmp
xor
push
mov
push
les
imul
jno
mov
retf
jmp
imul
pushf
adc
cmp
lds
or
(bad)
jne
popa
inc
out
mov
(bad)
(bad)
cmc
add
pop
pop
jmp
daa
popf
pop
or
cmp
push
pop
gs
sub
scas
push
mov
ror
or
pop
ficomp
mov
xor
sub
arpl
mov
pop
iret
in
retf
xor
retf
pop
mov
mov
sbb
xchg
xchg
js
jl
inc
cdq
pushf
mov
iret
loopne
dec
rcr
jbe
or
jle
mov
mov
jns
or
sbb
ja
cmps
cli
add
push
pop
outs
loope
push
retf
clc
imul
sbb
mov
xchg
jl
cmp
inc
mov
push
aam
and
push
je
inc
scas
cmps
dec
mov
pop
push
add
sbb
or
jmp
sbb
outs
inc
js
push
inc
mov
cmps
sub
and
add
pop
jl
push
push
and
sbb
and
dec
mov
ins
push
sub
punpckhwd
mov
add
push
cmp
(bad)
ins
or
jp
push
sbb
in
push
cmp
pop
es
jmp
ja
xor
add
fcomp
sub
test
mov
adc
gs
jl
mov
in
or
je
jo
xor
sub
mov
aam
(bad)
stc
add
cwde
push
mov
(bad)
into
add
add
ja
add
mov
iret
ins
sub
adc
cmp
pushf
dec
je
xor
loop
pop
fdivr
imul
test
ins
sub
fdiv
jmp
add
call
mov
sbb
push
sbb
sti
imul
mov
lods
or
cld
mov
fsubr
or
cwde
pop
dec
add
jecxz
fs
cmp
and
pop
cmps
xor
inc
aas
int3
lds
sbb
push
test
std
cmps
jmp
stc
mov
lds
or
fwait
aam
js
lea
xchg
and
ret
sub
lods
sub
xchg
je
test
or
dec
dec
mov
rcr
mov
xchg
sbb
or
movs
adc
sbb
and
push
nop
or
mov
ins
shl
add
imul
into
pushf
cmp
(bad)
dec
add
or
push
jb
loopne
adc
sar
pop
jmp
adc
jg
jbe
sbb
mov
cmp
add
or
cmp
and
add
inc
test
inc
cmps
sub
not
xchg
dec
jl
add
mov
mov
call
nop
sbb
shl
clc
add
xchg
(bad)
sbb
dec
jnp
sbb
fsubr
add
in
mov
dec
add
mov
mov
cmc
aam
sar
outs
ss
lea
mov
dec
cld
add
xchg
inc
mov
adc
rcl
sti
add
and
int
jmp
icebp
jp
add
mov
or
sub
or
push
and
and
(bad)
jmp
outs
pop
xor
inc
jl
push
pop
aaa
or
push
push
aas
out
out
mov
lds
movs
(bad)
das
mov
jne
ins
jl
adc
and
jmp
pop
inc
loopne
imul
pop
cmp
push
jo
lea
outs
push
adc
test
mov
out
push
push
lock
xor
ja
retf
xchg
or
cmc
or
jne
adc
xor
mov
(bad)
mov
rol
and
icebp
or
add
mov
adc
(bad)
push
mov
(bad)
sub
and
jbe
xchg
xchg
popa
xchg
pop
call
mov
add
xchg
and
fadd
nop
or
mov
call
pop
or
leave
addr16
outs
mov
jmp
adc
push
or
inc
push
cmp
in
jmp
jge
jmp
jns
sub
mov
cld
shr
mov
imul
scas
cmps
int3
add
push
dec
test
test
scas
mov
xor
adc
push
cld
adc
jmp
or
cmp
jbe
push
or
nop
cmp
inc
push
and
pop
push
clc
data16
jmp
dec
add
shl
pop
mov
lock
jne
add
sbb
(bad)
xor
pop
sbb
inc
mov
addr16
loope
mov
mov
or
add
push
or
imul
cld
pop
clc
and
pop
hlt
(bad)
mov
jne
and
scas
sub
sti
add
jp
pop
cmp
mov
fimul
and
mov
jno
mov
push
data16
cmp
mov
loopne
out
not
and
jne
ja
std
push
sub
jmp
lea
das
mov
xor
push
jle
cmps
cdq
cmc
and
add
and
add
(bad)
popa
pop
lock
repz
mov
or
mov
pop
or
or
lock
adc
mov
mov
inc
push
rcl
test
xor
xchg
cmps
push
or
pop
ret
test
dec
adc
(bad)
push
mov
ret
outs
or
in
or
xor
test
or
aam
add
xor
or
outs
adc
push
shl
add
mov
std
shr
aas
gs
div
ficom
sbb
mov
add
jnp
add
dec
adc
inc
dec
aad
lods
xchg
call
jo
mov
adc
in
adc
leave
or
sub
fld
enter
push
lea
add
mov
lahf
mov
test
add
popf
push
call
ret
mov
sbb
outs
mov
cmps
jle
js
jne
mov
sub
jae
pop
and
cmps
pop
cmps
cmp
mov
scas
(bad)
pop
push
push
sbb
mov
jne
push
mov
push
xor
inc
inc
fs
add
xchg
ds
dec
mov
ins
jmp
xchg
or
pusha
pop
xchg
and
add
add
mov
xchg
in
pop
shl
jno
jle
hlt
add
stc
mov
imul
xchg
fsub
xchg
dec
add
push
dec
jne
mov
mov
sahf
adc
jns
push
adc
mov
mov
xchg
add
cli
repnz
test
sub
mov
into
mov
dec
clc
inc
nop
sub
loop
and
inc
cld
lock
fnsave
push
add
sub
sbb
lea
jbe
add
inc
adc
aaa
add
adc
fs
inc
shl
fmul
mov
inc
mov
in
mov
clc
bound
pop
js
adc
jo
shl
sbb
call
leave
xchg
ins
test
int
mov
call
push
pusha
push
cld
cwde
dec
cmp
ds
pop
cs
movs
ss
ss
test
jmp
adc
adc
fstp
cmp
or
sar
dec
cmp
push
push
xchg
pop
xchg
fwait
add
pop
mov
inc
cmp
sub
sbb
clc
mov
jge
es
add
cmp
nop
dec
or
pusha
pop
add
jns
sub
add
add
mov
sub
mov
cli
aas
mov
aad
dec
lea
clc
pop
jg
or
je
jle
sbb
pop
cmp
shl
pop
adc
pop
adc
adc
jmp
data16
and
jo
mov
imul
jb
ins
xor
inc
cmp
pop
adc
sub
fist
scas
out
fisttp
lea
mov
(bad)
pop
add
inc
dec
ins
pop
xor
sar
(bad)
movs
or
movs
pop
not
push
and
rol
cld
repnz
dec
cwde
inc
je
fisttp
or
dec
push
fnstcw
rcr
aam
shl
mov
jo
(bad)
inc
mov
or
dec
lea
mov
out
sbb
dec
add
iret
pause
stos
lods
push
paddd
movs
jb
mov
cmp
retf
xor
jns
pusha
leave
xor
xor
mov
outs
test
ret
jmp
sub
loope
lock
inc
sub
push
cmp
push
push
jge
scas
lods
fld
or
out
cmp
or
call
inc
loope
push
inc
or
jo
push
mov
and
and
or
pusha
stos
mov
ret
adc
fdiv
call
mov
sbb
add
inc
fnstenv
jmp
daa
outs
mov
push
lock
or
loop
jnp
arpl
int3
sahf
sbb
and
das
xor
sub
mov
lods
sbb
mov
cli
xchg
test
add
cld
push
aaa
fdiv
inc
mov
mov
dec
pop
iret
jne
push
ins
dec
mov
xchg
push
and
stos
pop
fwait
icebp
enter
shr
(bad)
cs
into
jne
mov
repz
or
leavew
inc
test
pop
adc
cmp
push
pushf
mov
jb
or
sub
pop
push
and
das
xor
dec
adc
enter
cmp
int3
iret
dec
adc
int
mov
loop
icebp
not
inc
mov
dec
jne
cwde
popf
out
xor
lock
sub
dec
mov
adc
sbb
dec
bound
aaa
pop
sbb
dec
push
and
shl
jp
hlt
dec
inc
sbb
rol
push
or
das
pop
fsub
and
das
or
or
ret
aas
jge
out
or
inc
cld
or
pop
adc
inc
or
or
mov
lock
or
mov
mov
or
test
add
cmp
test
ret
or
pop
xor
jns
ds
cmp
das
mov
cmp
add
add
xchg
xchg
and
adc
mov
pop
push
lea
shl
lods
(bad)
or
arpl
fadd
orps
pop
push
and
and
jb
push
adc
add
leave
test
xchg
icebp
adc
ror
je
adc
loopne
fmul
jp
mov
pop
or
pop
sar
xor
dec
push
pop
enter
inc
or
enter
dec
hlt
stos
icebp
jl
test
xor
je
or
push
xchg
int3
jnp
jmp
push
aam
sub
cmp
mov
or
cmps
cmp
(bad)
out
aaa
repnz
or
sub
stc
shl
jb
sbb
inc
mov
cmps
cmp
mov
adc
data16
inc
aaa
test
xchg
(bad)
cmp
je
mov
push
inc
and
or
rcr
pushf
or
daa
mov
add
call
or
mov
aaa
or
sub
dec
mov
jg
mov
mov
jae
call
mov
push
mov
push
mov
adc
dec
adc
push
cmp
enter
and
jnp
and
push
push
mov
mov
loope
inc
add
mov
sbb
fld
add
sbb
(bad)
xor
out
daa
clflush
cld
pop
hlt
sahf
(bad)
loope
push
sbb
vmovapd
xor
div
sbb
or
add
cmp
frstor
add
sbb
mov
jg
in
push
push
jbe
mov
sub
xor
in
xchg
adc
or
into
outs
push
mov
jecxz
mov
sar
jle
frstor
std
clc
sub
jl
or
xor
stos
push
push
push
xchg
xchg
mov
xchg
and
inc
test
(bad)
pusha
mov
cld
add
mov
movs
adc
push
mov
xor
fisubr
push
int
jno
cmp
add
or
es
adc
vmread
mov
sub
fwait
or
cmp
sub
add
mov
mov
push
stos
jbe
or
test
and
pushf
jne
call
les
push
in
lock
push
ins
or
and
fsub
mov
push
push
pop
and
or
mov
and
dec
push
fisub
mov
dec
nop
in
mov
or
push
loope
loope
mov
je
pop
add
in
pop
jne
jecxz
call
rol
pop
outs
(bad)
push
add
mov
movs
adc
stc
sub
lea
push
adc
or
sub
hlt
ret
add
pop
cmp
iret
sub
ret
xor
mov
sbb
add
jmp
pop
dec
push
ins
mov
adc
movs
inc
add
icebp
in
ins
xor
mov
mov
test
fiadd
push
xchg
mov
sbb
fnsave
adc
out
and
and
nop
pop
pop
dec
pusha
adc
push
push
mov
ds
sbb
outs
aam
push
rol
sar
enter
or
inc
bound
mov
xor
add
loop
cmp
cdq
shl
dec
fxch
in
cmp
inc
ret
outs
jo
inc
sti
je
cmp
add
in
dec
jmp
(bad)
cmp
das
push
popa
push
cdq
jno
add
test
cmps
call
arpl
cmp
push
mov
or
and
sbb
add
enter
or
mov
out
test
or
or
pop
dec
mov
mov
test
pushf
and
sbb
xor
and
fcomp
test
push
mov
mov
or
imul
in
push
xchg
dec
(bad)
rcr
jbe
arpl
push
adc
add
push
les
dec
jge
aam
push
repnz
dec
cmp
in
mov
jmp
dec
dec
out
mov
aam
xchg
shr
bound
or
sub
xchg
out
loopne
(bad)
mov
out
add
inc
ss
add
mov
push
mov
adc
shl
xchg
(bad)
and
xor
add
adc
dec
jb
ret
mov
fcomp
cmp
pushf
dec
mov
xchg
test
pop
pop
clc
test
dec
adc
dec
sub
mov
in
xor
cs
dec
ret
add
jmp
mov
(bad)
js
xchg
pop
cli
mov
mov
pop
add
cmp
sbb
pop
add
sar
and
push
jecxz
dec
in
add
add
inc
mov
lods
mov
shl
shl
and
sbb
mov
movs
jle
sub
lea
and
out
or
pop
(bad)
inc
add
dec
or
inc
pushf
lock
nop
out
xchg
sbb
sub
sar
inc
out
add
aas
or
push
rcr
inc
sub
jne
or
or
std
fld
xchg
test
push
mov
xor
test
mov
sub
int3
xchg
jno
adc
lods
mov
cs
or
lock
aas
and
and
ja
movsx
movzx
cmp
mov
and
test
pusha
and
pop
add
stos
mov
ja
add
push
pop
mov
cs
ins
dec
add
cmovns
add
pop
mov
adc
dec
cmp
xor
adc
xor
jmp
or
mov
dec
aaa
adc
add
lea
push
and
dec
clc
sub
adc
test
jae
(bad)
push
add
sbb
dec
scas
mov
out
div
or
cmp
into
ds
push
repnz
ins
and
cld
mov
mov
scas
dec
retf
mov
adc
or
ss
inc
(bad)
inc
adc
add
xor
cs
imul
fs
test
cmp
push
inc
sub
out
js
pop
fidiv
test
push
and
in
push
(bad)
pop
adc
out
sbb
in
or
and
mov
ficomp
inc
test
(bad)
push
outs
inc
jg
lock
jb
push
rcr
stos
dec
or
inc
je
inc
push
or
dec
push
adc
mov
jl
sbb
js
add
call
ja
lea
mov
scas
loope
cwde
faddp
cmp
push
das
inc
clc
retf
and
inc
outs
push
xor
jne
ja
sub
ins
and
cmp
add
mov
mov
adc
test
dec
ret
sub
shr
sub
fldcw
add
mov
sar
cmp
push
pop
mov
fs
popa
sahf
outs
lahf
pusha
lock
mov
cmp
xor
test
push
inc
lds
test
jae
mov
ret
or
cmc
push
not
fucom
shl
mov
(bad)
xchg
and
cs
mov
cdq
movsx
je
sahf
scas
rcl
aaa
xor
and
push
mov
pop
cs
ret
hlt
jo
je
sahf
mov
push
pop
jmp
adc
mov
clc
imul
test
xchg
pop
ins
and
sub
inc
dec
jg
push
inc
loopne
jnp
aaa
out
add
ret
aad
push
sub
nop
pop
xor
data16
mov
pusha
push
fiadd
cmp
xchg
or
call
sub
mov
pop
jo
pop
cdq
mov
jne
push
addr16
rcl
not
xor
cmp
jle
push
scas
or
mov
inc
into
shr
pop
cmp
add
pusha
jo
inc
lods
je
fdivr
cwde
mov
popf
mov
(bad)
mov
sbb
mov
mov
scas
push
dec
or
les
js
cwde
xchg
push
test
sbb
or
out
out
inc
add
jae
dec
push
sub
and
lock
test
sub
mov
popa
lods
inc
push
push
mov
cmp
sar
mov
and
je
std
test
cld
(bad)
into
xor
call
add
adc
leave
mov
add
into
(bad)
mov
enter
xor
add
or
add
je
inc
cs
shl
inc
imul
clc
loope
mov
jmp
or
adc
add
loop
push
push
aas
fimul
(bad)
jg
jl
jae
cmc
jecxz
ja
rol
neg
imul
test
and
clc
jne
fild
and
add
pop
mov
or
jne
lods
jbe
icebp
lea
or
dec
cmp
push
xor
es
pusha
push
mov
scas
add
cmp
aaa
xor
mov
jl
sbb
push
popa
rol
cmc
add
xchg
sbb
mov
jecxz
cmp
fwait
retf
inc
movs
push
add
add
inc
jmp
dec
dec
mov
and
inc
inc
push
hlt
sub
or
mov
addr16
dec
cmp
cmp
mov
bound
or
in
mov
mov
adc
jmp
pop
ja
nop
or
hlt
les
in
sbb
fadd
and
repnz
push
int
jae
xor
daa
xchg
pop
or
inc
dec
or
add
xorps
adc
popa
pop
add
clc
fdiv
add
dec
pushf
test
push
mov
mov
(bad)
jne
nop
inc
push
inc
push
jne
cmp
jnp
pop
or
jne
(bad)
lea
xchg
dec
push
js
add
cs
mov
xor
int3
xor
adc
and
int
sbb
aam
lods
sbb
sbb
mov
scas
out
ret
push
dec
mov
and
arpl
js
or
sub
mov
cdq
inc
inc
(bad)
mov
clc
fs
xchg
test
int
sub
stc
dec
cli
or
mov
clc
push
enter
repnz
dec
push
inc
adc
adc
cmp
or
push
cmp
xor
clc
ja
outs
ret
mov
ficom
xor
nop
test
in
push
pop
sahf
aam
aas
add
xor
ret
jl
add
xchg
jge
sbb
pop
jecxz
lea
sbb
mov
jo
and
or
or
dec
sbb
xchg
mov
mov
xor
sbb
test
ds
xchg
jbe
mov
add
ss
outs
fadd
leave
sbb
and
xor
jne
mov
and
jne
fs
xchg
add
out
in
test
sbb
fld
and
xor
push
xor
mov
ss
adc
loopne
repnz
(bad)
pop
add
pop
cmp
add
adc
xor
movq
push
dec
adc
push
and
jg
mov
dec
and
push
jg
outs
inc
or
ds
jl
pusha
jle
xor
jg
jg
scas
adc
jo
mov
mov
in
dec
jne
loopne
xor
or
xor
mov
int3
ret
ror
xor
sub
or
sub
mov
or
mov
mov
ds
scas
xor
faddp
adc
icebp
lahf
push
int3
xchg
repz
add
add
lahf
fiadd
shl
in
add
mov
inc
repz
jmp
sbb
push
mov
sbb
in
mov
lock
and
xchg
fbld
push
push
ret
jmp
ins
popa
add
xor
jmp
inc
js
add
cmp
hlt
and
out
mov
and
mov
pop
inc
add
movzx
xchg
sbb
mov
inc
nop
mov
or
push
inc
xor
mov
add
pop
pop
dec
loope
inc
sbb
dec
pushf
adc
mov
cmp
push
in
das
jne
loope
ss
cmp
lods
popa
in
gs
or
out
add
inc
xor
mov
or
call
sbb
sbb
add
or
inc
mov
jne
jecxz
add
fdivr
fldz
mov
test
sub
inc
jp
inc
dec
retf
cmp
clc
sub
je
push
add
dec
and
leave
mov
jge
cmp
cmc
or
out
sub
pop
push
mov
xor
stos
jae
lahf
push
inc
jnp
cmp
stos
dec
je
and
div
sub
jge
xor
mov
test
movs
movs
xchg
and
push
fidiv
lods
lds
pusha
iret
sbb
rcl
repnz
cmp
mov
jle
and
mov
popf
dec
pop
loop
or
jmp
push
(bad)
fist
test
into
ror
sar
pusha
xchg
add
sub
mov
pop
cmp
cmp
or
push
mov
lea
add
add
mov
icebp
and
push
cld
inc
mov
lock
adc
inc
pop
add
add
movs
add
or
sub
js
dec
or
add
rol
jl
ja
lea
popf
(bad)
push
repnz
es
mov
cs
dec
jns
neg
es
fistp
or
inc
push
mov
push
or
or
mov
add
js
jno
ds
push
push
rcl
or
dec
sub
daa
sub
or
sbb
fimul
adc
nop
fnstcw
jbe
add
push
push
push
lock
add
jns
xor
pop
call
push
inc
nop
add
cli
enter
push
mov
scas
sub
rcr
adc
lahf
adc
out
push
push
cs
xor
sbb
test
pusha
cmps
xchg
lds
inc
and
add
pop
jmp
push
aam
lock
pushf
adc
jle
push
adc
imul
xchg
jmp
in
inc
sbb
push
cmp
test
neg
mov
rcr
out
retf
in
in
cld
xchg
cmp
xchg
ret
inc
ror
dec
inc
test
(bad)
xchg
ins
rol
inc
loope
or
mov
ss
xchg
call
out
mov
out
and
lea
out
adc
daa
push
stc
push
jno
call
sbb
add
or
popa
or
retf
push
xor
mov
cli
(bad)
dec
and
add
cmp
popf
jbe
jl
cmps
sbb
dec
inc
popf
popa
xlat
jmp
leave
and
add
mov
and
outs
enter
mov
mov
cli
inc
div
in
inc
clc
out
jg
add
xchg
ret
daa
xor
or
jne
pop
add
dec
inc
cmp
add
(bad)
jmp
or
out
xor
inc
mov
jno
in
scas
adc
subps
or
stos
inc
popa
test
mov
arpl
jbe
mov
push
sub
push
xor
pop
inc
or
mov
inc
sbb
add
into
stos
jl
add
das
(bad)
iret
add
add
add
aad
ins
jo
fiadd
movs
push
imul
adc
jge
ss
jl
cmps
jge
aad
cwde
or
cld
inc
rol
(bad)
stos
or
add
dec
jmp
fild
xchg
mov
cmp
ror
inc
or
add
add
dec
fild
sbb
push
das
dec
push
and
adc
or
mov
mov
fsub
pop
and
jl
cli
pop
call
jg
xor
push
sub
or
ja
cmp
fidivr
ror
inc
lahf
cmps
sub
inc
shl
fisubr
push
push
jno
add
inc
sbb
mov
sbb
jmp
jg
mov
dec
scas
jl
fiadd
pop
dec
pop
or
pushf
or
jns
nop
sbb
push
sub
or
lock
push
add
dec
rol
sub
sub
cmp
std
test
int
(bad)
push
dec
mov
or
add
(bad)
data16
icebp
or
and
xor
sbb
imul
push
call
jmp
lock
adc
and
jp
sbb
jge
mov
ins
loopne
stos
sbb
dec
add
xor
popa
push
xchg
pop
sub
add
sub
mov
into
xchg
cmp
sbb
sbb
adc
xor
cmp
jo
xor
pop
push
rcr
jb
inc
repz
cmp
push
push
jmp
imul
aam
sub
dec
dec
jo
fdivr
dec
inc
adc
sub
and
loope
inc
push
push
imul
mov
pushf
sar
jl
rcl
ror
mov
xchg
push
paddb
mov
das
rcr
popa
xchg
loop
mov
jmp
xor
(bad)
imul
inc
je
jne
sbb
mov
aaa
daa
jmp
push
inc
je
sti
lds
dec
inc
xor
lods
or
stc
stc
and
pop
cmp
xor
xor
and
add
inc
sbb
lea
pushf
sbb
sbb
jmp
dec
add
dec
and
shr
in
or
adc
add
jno
mov
in
add
and
fnstsw
enter
call
fdiv
fmul
ins
push
pop
clc
fstp
or
push
cmp
shr
fadd
push
push
cmp
add
sub
inc
cmps
xor
pxor
jecxz
mov
inc
adc
and
push
movs
push
test
rcr
cs
rcl
lods
lea
cmp
mov
mov
cmp
sub
aas
add
push
loope
mov
add
sahf
dec
push
dec
hlt
rep
cmps
jnp
mov
pushf
mov
sub
xchg
lock
sbb
sbb
jbe
add
xchg
out
sbb
cmp
fnstcw
mov
add
inc
push
add
sub
mov
sub
stc
adc
and
popa
cmp
pop
pop
inc
shr
and
cmp
mov
stos
mov
out
imul
xor
mov
rcr
xor
and
add
into
test
xchg
mov
push
jo
scas
inc
sbb
sbb
inc
pop
push
add
pop
or
dec
std
movs
lock
push
out
imul
xor
jb
push
mov
or
jecxz
leave
add
rol
mov
arpl
mov
inc
sub
lods
jge
mov
push
pop
inc
add
inc
and
cmp
push
call
pop
pop
add
(bad)
repnz
pop
lea
push
add
aaa
nop
pop
adc
aad
inc
(bad)
sbb
movs
mov
mov
sti
daa
or
add
mov
mov
push
adc
sbb
jne
ret
test
xor
loopne
mov
mov
adc
imul
xor
mov
push
and
mov
mov
popa
mov
ja
jmp
mov
mov
push
stc
mov
out
mov
(bad)
pop
inc
push
(bad)
ret
or
or
add
outs
add
add
enter
or
(bad)
push
lods
xchg
cmp
dec
scas
or
fdivrp
xor
scas
call
cmp
rol
sub
push
and
dec
fisub
pop
in
(bad)
into
rcr
jge
cmp
cmp
mov
icebp
rcr
cmp
and
cmp
sbb
aas
dec
test
xor
(bad)
hlt
inc
inc
or
dec
jne
test
les
ins
mov
call
pop
jne
push
mov
dec
call
xchg
shr
push
loope
push
adc
dec
add
adc
pop
inc
mov
or
push
daa
or
or
add
xor
repz
jl
out
and
add
dec
es
add
add
nop
gs
add
dec
mov
or
aam
push
adc
xlat
dec
jl
fwait
push
pop
outs
adc
pop
daa
mov
ret
push
or
add
rol
cdq
in
add
push
mov
pop
outs
jo
jmp
nop
jbe
xchg
pop
xchg
retf
inc
push
push
pop
dec
adc
lock
jns
adc
jmp
cmp
je
out
add
clc
les
or
sub
test
push
add
or
mov
pushf
or
jmp
mov
daa
lar
mov
adc
cmp
js
mov
cli
cmp
sbb
sub
or
sbb
call
adc
or
dec
push
sbb
or
lods
ss
or
int3
mov
sbb
clc
cmp
inc
retf
dec
adc
scas
inc
mov
shr
mov
(bad)
fucomi
outs
push
add
inc
add
mov
or
and
ins
lock
je
push
push
je
das
mov
or
jl
or
jge
ret
add
(bad)
inc
jo
jne
adc
pop
xchg
add
mov
and
shr
or
jmp
adc
adc
fadd
or
fcomp
add
jp
jg
push
test
sub
push
mov
ret
lods
dec
gs
lods
and
cs
add
mov
es
add
push
test
push
imul
in
cmp
ss
sub
adc
sub
sub
adc
ror
out
sub
push
sbb
mov
fidivr
mov
or
add
loope
movs
mov
test
sbb
and
and
xchg
lea
das
pop
jb
sbb
inc
sar
cmp
pop
int3
adc
lea
pop
lods
inc
shl
add
into
ret
or
jb
dec
add
test
xor
jle
(bad)
rcr
or
(bad)
imul
inc
mov
out
ret
js
jae
cmp
test
(bad)
pop
xlat
sbb
ss
pusha
jo
push
jae
cmp
mov
cmp
enter
add
or
dec
call
pop
inc
and
push
adc
adc
in
cli
push
inc
scas
push
hlt
push
push
scas
mov
lahf
push
(bad)
(bad)
jae
aas
xor
ret
xor
inc
jmp
sbb
cmp
mov
cli
adc
bnd
lea
lea
or
or
inc
loopne
jne
push
das
inc
in
and
(bad)
cmovo
mov
(bad)
pop
je
xchg
xchg
inc
mov
adc
and
mov
mov
push
hlt
add
adc
js
add
add
push
inc
mov
sub
add
sub
push
lods
movs
sbb
push
mov
and
and
sub
and
rcr
push
test
xor
inc
inc
cmp
xor
out
loope
loop
pop
push
test
loopne
loope
jge
je
pop
sub
push
je
fwait
xor
push
mov
je
or
xchg
lock
push
or
sub
sar
aas
lock
xor
dec
ins
in
adc
or
add
push
(bad)
mov
mov
inc
dec
jne
lea
add
mov
mov
sti
sbb
cwde
loopne
pop
cmp
cmc
(bad)
fcomp
sar
mov
clc
and
inc
sbb
test
dec
sub
lods
aas
add
sub
dec
ja
add
xchg
or
sub
push
mov
jnp
cmp
cwde
enter
push
es
jmp
in
or
ja
sub
cmp
push
bound
inc
inc
ficom
dec
call
adc
inc
mov
sub
adc
push
jp
(bad)
xchg
or
mov
or
sbb
add
call
mov
test
sub
ror
sbb
mov
test
sub
shufps
dec
in
cmps
and
and
loope
inc
and
mov
sbb
mov
push
dec
rcl
push
xchg
clc
mov
mov
ins
(bad)
rcr
adc
mov
sbb
movs
push
xchg
and
and
in
movups
outs
xlat
cmp
(bad)
push
pop
dec
mov
inc
push
sub
dec
dec
push
mov
pop
ins
aam
xor
xor
addr16
sbb
add
push
imul
or
xor
pop
inc
mov
jmp
push
std
jne
inc
sub
mov
gs
sub
arpl
sbb
cmp
les
add
inc
cs
and
dec
fsqrt
div
inc
imul
ret
or
ret
push
pop
pxor
enter
dec
(bad)
dec
xor
push
mov
pop
stc
lea
lds
dec
xor
sub
ss
clc
sbb
imul
sbb
je
out
mov
test
repz
bound
fiadd
push
leave
out
lea
dec
cli
imul
jle
sbb
add
fimul
push
mov
adc
fild
cmp
mov
inc
inc
or
imul
or
adc
add
add
or
cmp
inc
(bad)
mov
in
push
sub
adc
mov
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
stos
inc
xor
jp
push
sub
sbb
icebp
dec
mov
xor
jo
stos
xchg
mov
mov
lods
stc
xor
les
movs
xor
das
mov
js
mov
(bad)
mov
xor
nop
add
xor
sub
adc
add
mov
or
ins
sbb
int3
dec
or
push
and
stc
rcl
mov
inc
mov
or
and
add
sbb
push
mov
scas
lock
and
xor
iret
inc
ss
mov
mov
xlat
jmp
jo
fwait
test
inc
fld
and
movs
mov
add
or
or
lods
mov
mov
sti
mov
inc
jmp
xor
in
jge
mov
mov
jmp
das
jmp
jmp
jmp
test
sbb
jge
inc
cmc
adc
xor
cmp
imul
add
xchg
sub
int
push
inc
rcl
std
paddd
scas
loope
fs
out
and
out
mov
lds
outs
cmp
es
inc
fisubr
je
cmp
jne
sbb
jo
push
push
inc
mov
int3
pop
and
lahf
das
jnp
mov
inc
inc
sbb
sub
lods
or
(bad)
and
adc
sbb
ins
int
pop
push
test
push
jne
add
push
pop
sub
jg
xchg
cmp
not
pop
cld
or
cmp
cmp
or
jo
inc
dec
jne
xchg
sub
mov
aad
push
xlat
mov
sbb
mov
js
in
sbb
pop
cmp
jnp
fsubr
pop
ret
adc
fsub
loopne
shl
cdq
or
into
inc
mov
jg
adc
dec
or
xchg
adc
aaa
fs
cs
push
xor
in
mov
mov
pop
or
in
or
int
or
adc
inc
jo
and
or
jo
sub
data16
or
jmp
nop
mov
adc
jmp
jae
xor
push
push
shl
dec
and
adc
inc
push
cmp
lahf
popf
push
dec
in
mov
icebp
or
push
adc
pusha
adc
mov
and
pop
mov
lahf
jne
sub
std
push
retf
in
mov
dec
inc
mov
mov
mov
cmp
imul
popf
xor
imul
add
push
add
pop
clc
and
xor
ds
and
test
test
cmp
sbb
add
mov
test
adc
sub
xor
or
xor
jg
sub
and
sbb
test
cmp
add
or
aaa
inc
cwde
dec
push
sar
adc
bound
pop
adc
cld
or
inc
mov
and
movs
lock
fidivr
push
mov
ret
imul
and
scas
lods
adc
cmp
movs
adc
adc
xor
or
lds
xor
dec
mov
inc
enter
sbb
add
jbe
or
add
ja
push
jge
stc
jb
je
sti
jb
sub
sub
(bad)
jb
or
add
mov
js
shr
mov
hlt
dec
xor
sub
fdivr
sbb
in
mov
mov
inc
and
not
or
add
add
lahf
outs
or
adc
jnp
mov
add
cli
push
pop
mov
retf
cmp
push
adc
rol
in
jb
aad
jmp
pop
push
xchg
mov
loopne
mov
std
bound
push
adc
enter
push
nop
cmp
icebp
pusha
mov
ror
adc
ins
(bad)
push
jp
test
cmp
scas
rol
stc
cmp
jge
je
jle
push
mov
cmp
xor
cs
pop
or
add
adc
mov
sbb
repnz
dec
cmp
and
cmp
lea
sbb
cmp
rcl
retf
fs
ror
out
pop
leave
push
mov
xchg
les
inc
pusha
or
inc
lods
jnp
loope
lock
sbb
mov
adc
adc
push
sub
das
inc
mov
adc
shr
(bad)
jg
(bad)
sub
sub
add
cmp
out
out
rcr
mov
enter
data16
push
pop
pop
sar
int
out
pusha
push
fldcw
dec
or
add
clc
push
mov
jns
enter
pop
xchg
and
mov
imul
repnz
repnz
shr
lock
(bad)
pop
add
pusha
(bad)
out
mov
xlat
pop
imul
lock
ja
push
lock
ret
ret
shr
(bad)
push
cwde
sub
fst
aad
or
or
adc
fldcw
mov
sar
fsubr
loopne
repnz
stos
out
fdiv
xor
repz
(bad)
and
fld
dec
outs
ret
leave
faddp
sub
in
mov
fmulp
or
adc
mul
pop
call
and
or
inc
and
fcmovnb
push
(bad)
jmp
sbb
jb
push
sub
xchg
jb
ja
pop
sbb
adc
cli
(bad)
jb
loop
push
or
or
ret
mov
popfw
jmp
add
loopne
cs
in
outs
loope
sbb
push
jne
jae
sbb
xchg
cmp
mov
in
jmp
pushf
and
sbb
ja
push
adc
sbb
and
sbb
push
ret
or
mov
jmp
mov
push
dec
nop
inc
jae
or
bound
add
adc
dec
in
jne
and
or
jmp
sbb
add
fdiv
mov
rcl
ficomp
call
jne
fnstenv
mov
or
push
and
outs
popf
or
pop
std
jle
mov
not
mov
xor
and
or
fisttp
ret
add
aad
fstsw
jnp
fwait
loope
jne
es
inc
add
scas
or
leave
jne
pop
in
fdivr
pushf
cmp
scas
inc
mov
mov
mov
fldz
dec
sub
shl
xchg
xor
jmp
mov
pop
ja
or
pusha
and
rcpps
or
lea
cmp
or
jmp
dec
jnp
xchg
cmp
fisttp
sub
jbe
lock
fdivr
jp
out
mul
sahf
jne
push
fmul
je
in
or
ret
mov
jmp
mov
(bad)
mov
or
push
or
jbe
iret
sub
data16
jbe
sbb
pop
out
rcl
ins
lea
xor
adc
push
mov
fdivrp
sbb
ret
cmc
jl
arpl
dec
call
mov
pop
fst
sub
jnp
sar
cld
add
or
cmp
push
loope
(bad)
and
fst
xchg
add
jbe
add
iret
mov
(bad)
xchg
jne
mov
mov
push
(bad)
je
adc
push
hlt
push
xor
xlat
or
mov
cmp
mov
adc
inc
(bad)
dec
fst
fild
ss
and
push
cmp
data16
das
and
add
jecxz
push
(bad)
call
cmp
sbb
lds
xchg
jae
mov
push
jmp
pop
jns
and
push
(bad)
std
stc
cmps
lock
push
mov
jbe
mov
(bad)
mov
rcl
xor
scas
movs
movs
cmp
fneni(8087
div
adc
pop
mov
push
push
add
ficom
xor
pop
xchg
fld
(bad)
sub
push
lods
or
xchg
mov
add
push
adc
mov
dec
(bad)
and
or
mov
push
add
shld
cli
push
jo
sub
neg
ins
sub
or
call
dec
js
pop
jo
mov
mov
(bad)
or
sbb
adc
in
push
lock
pop
loopne
les
and
(bad)
mov
loope
mov
(bad)
push
pop
hlt
icebp
(bad)
rep
(bad)
push
les
push
mov
pop
mov
pop
add
stc
std
jl
xchg
inc
push
inc
add
pop
sub
sub
shl
add
jae
cmp
mov
retf
aaa
shl
sar
mov
push
adc
test
fcmovne
daa
shl
xchg
pop
and
push
ds
inc
dec
call
cld
outs
repnz
or
fldenv
adc
rcl
cmps
ss
push
mov
ret
popa
mov
or
xchg
clc
cld
ror
xor
imul
push
add
adc
ret
dec
test
push
stc
mov
mov
pop
dec
pop
rcl
or
loopne
xor
pop
mov
and
jbe
in
clc
or
dec
push
leave
jp
mov
cwde
sti
dec
rcl
add
xor
sub
inc
jg
out
jae
and
rcr
or
pop
jle
pusha
and
push
add
inc
or
mov
mov
jmp
mov
pop
mov
sbb
in
nop
add
aas
in
aas
xor
xchg
shl
sar
rol
mov
and
xlat
and
add
fisubr
fsub
jmp
int
fwait
gs
or
cmp
and
jmp
sar
rol
mov
mov
or
in
pusha
sub
cld
push
pusha
fadd
adc
test
out
sti
call
test
lods
or
test
jp
daa
ret
pop
test
xor
pop
pop
push
mov
neg
shr
adc
loopne
mov
sub
sub
jg
fsub
mov
f2xm1
retf
xor
ret
rcl
stos
movs
retf
bound
push
ret
test
push
jo
mov
dec
add
mov
mov
je
(bad)
and
add
push
or
scas
sbb
mov
jle
add
mov
push
or
and
sub
or
in
fimul
test
dec
clc
scas
xchg
and
aad
jne
mov
clc
pop
ret
ins
cmp
sbb
loopne
adc
ret
fist
cmps
jbe
push
ror
daa
je
and
(bad)
data16
pop
mov
jne
mov
push
retf
cli
sbb
stos
dec
pop
mov
(bad)
pop
loope
sbb
mov
or
addr16
or
and
add
sub
jbe
xor
lahf
dec
pop
inc
loop
loopne
lock
fsubr
sub
xor
movs
(bad)
and
and
adc
inc
movs
dec
dec
enter
clc
and
fld
outs
jge
ins
or
push
push
test
rcr
mov
and
fsubr
inc
loop
ret
stos
fsubr
jg
or
jmp
in
add
lock
inc
mov
jnp
das
loop
sub
aaa
inc
inc
(bad)
loope
retf
cmp
neg
mov
push
sub
jb
mov
(bad)
shl
jae
xor
pop
jne
xchg
fbld
or
xor
call
pusha
pop
add
push
adc
addr16
or
jne
out
add
mov
xor
inc
mov
lock
or
lds
xor
dec
nop
push
out
in
aaa
js
inc
jb
pop
jbe
lea
xchg
sbb
ja
adc
(bad)
dec
call
cmp
jae
mov
fisub
or
mov
dec
jl
retf
mov
adc
adc
fwait
add
jne
es
jb
ja
pusha
call
jbe
sbb
xor
cmp
push
sbb
and
test
pop
mov
pop
xor
ja
sti
leave
add
adc
aas
push
cld
cmps
dec
daa
jmp
xor
or
add
lahf
sub
es
sub
mov
ds
ja
push
pop
mov
in
cmp
cmp
push
sub
out
sbb
rol
push
mov
add
enter
add
fucom
xor
aas
push
push
or
jp
ins
sbb
(bad)
mov
es
dec
inc
add
jnp
mov
repz
jns
add
pop
inc
push
sbb
mov
shr
adc
data16
arpl
lods
xor
add
inc
add
repnz
cdq
ror
add
call
jle
aad
and
mov
mov
nop
dec
pop
and
xor
jne
mov
mov
in
pop
dec
xchg
mov
lock
adc
xchg
and
mov
dec
fnsave
push
cmp
mov
cs
pop
arpl
clc
and
and
jp
push
jmp
stc
ficomp
sti
mov
rcl
bound
mov
cmps
sbb
cwde
retf
sub
jb
cmp
sub
cmp
jp
out
or
push
push
ret
jne
js
mov
cwde
fimul
mov
jg
in
push
inc
popa
mov
inc
cmp
cld
push
js
or
inc
or
jnp
pop
je
push
push
sti
fld
or
loopne
ins
loope
cmp
scas
cdq
adc
outs
inc
cmp
mov
sbb
mov
repz
adc
xor
in
push
add
rcl
and
loop
xchg
jmp
xlat
and
sub
adc
cmp
adc
push
test
mov
mov
cmp
adc
(bad)
inc
scas
or
push
or
ins
mov
cmp
xchg
test
cmp
jo
push
outs
nop
inc
sbb
mov
je
fidiv
add
aaa
(bad)
sti
and
or
jne
xchg
add
inc
dec
test
jns
in
jmp
ins
sub
or
lock
div
dec
jmp
xor
and
mov
je
sbb
ret
inc
inc
inc
pop
je
pop
lods
out
push
inc
es
je
test
mov
rcl
mov
xchg
jmp
sbb
inc
xchg
cmp
pop
cli
ins
inc
or
and
adc
push
xor
and
or
add
jp
into
inc
repz
mov
inc
dec
sub
push
popf
inc
add
adc
call
arpl
add
aas
push
test
push
mov
fdiv
pop
mov
mov
mov
push
rol
xlat
movs
cld
les
cmp
jp
inc
cmp
sbb
mov
(bad)
out
mov
aam
push
push
daa
neg
retf
sub
(bad)
push
push
or
sub
fisubr
stos
dec
sub
mov
pop
cmp
cs
ret
pushf
dec
loope
push
pop
jne
call
stos
sbb
inc
dec
add
and
pop
lds
test
mov
arpl
(bad)
(bad)
mov
add
push
cs
add
adc
jne
or
repnz
add
sub
push
push
or
fcom
mov
xchg
jecxz
cmp
fisubr
dec
(bad)
cld
and
mov
add
in
dec
inc
in
loope
cmp
adc
jo
out
loop
jo
fwait
or
pop
sbb
jne
or
inc
imul
ins
xchg
imul
add
retf
inc
(bad)
iret
fistp
test
in
and
fld
std
sub
xchg
pop
or
push
push
js
mov
out
mov
jg
xchg
push
push
pop
push
xor
pop
lods
out
mov
ret
and
das
adc
add
mov
adc
dec
and
push
and
ins
or
rcl
xchg
rcl
ins
jge
xchg
std
cwde
inc
xlat
cmc
stc
shr
pop
rol
or
loop
sub
test
push
or
adc
or
add
add
lea
rcr
or
add
inc
jb
inc
cmp
add
sbb
push
push
push
ins
sub
(bad)
push
or
std
push
mov
and
or
dec
xor
inc
pusha
pop
adc
cmp
(bad)
push
push
and
adc
imul
push
pusha
mov
and
ins
lods
test
sbb
das
inc
dec
add
jne
xor
add
xchg
sahf
repz
push
cmp
ret
push
adc
jb
pusha
test
into
neg
push
aam
jmp
mov
push
scas
sbb
pop
cmc
adc
inc
inc
stos
aas
push
aaa
xor
ds
fwait
and
inc
jmp
adc
jne
cmp
aaa
and
mov
jl
pop
loop
scas
mov
adc
aam
pop
out
sti
out
jne
mov
mov
pop
and
mov
sub
xchg
add
mov
adc
push
mov
bound
es
js
or
mov
enter
push
aaa
xchg
cwde
aas
or
add
cmp
lea
add
pop
dec
lock
outs
push
aad
inc
hlt
xor
xor
jmp
pop
test
or
lock
div
(bad)
push
rcl
call
add
adc
and
jns
cli
cld
mov
push
jg
dec
cmp
es
mov
xor
mov
in
push
fld
mov
jmp
popa
aam
pop
add
mov
add
sar
inc
scas
adc
cmp
mov
in
cmp
jl
add
repz
adc
mov
sbb
ins
cmc
cmps
mov
mov
lods
ins
retf
xchg
jnp
push
jno
pop
imul
jnp
adc
sbb
sbb
loop
dec
addr16
call
push
inc
push
mov
loop
push
mov
or
jmp
in
pusha
pop
sbb
mov
push
data16
jbe
xor
popf
lock
adc
pop
(bad)
or
retf
sub
push
bound
sbb
adc
dec
mov
and
push
xor
loopne
or
add
call
inc
lock
int3
xor
ret
pusha
add
adc
ss
cld
bound
add
push
pop
in
imul
and
cld
mov
inc
mov
ret
cs
add
add
cmp
and
int
js
mov
ret
xchg
jmp
cmp
out
shl
rcr
dec
mov
inc
inc
pop
movs
neg
movs
fld
mov
jbe
xchg
sub
cmp
ficom
jl
mov
and
push
call
lock
cmp
lock
xor
add
xchg
test
mov
shl
rcr
mov
mov
inc
xchg
outs
xchg
dec
pushf
dec
cmp
jg
add
mov
cmp
jbe
or
jne
rol
in
mov
adc
cmp
add
shl
ror
mov
mov
xchg
lds
mov
and
rol
pop
outs
jb
popa
cmp
xor
pop
dec
dec
popf
retf
bound
iret
inc
xor
sbb
repz
mov
or
leave
sub
inc
pushf
stos
mov
adc
sbb
inc
(bad)
or
and
xchg
jmp
sub
dec
movs
mov
test
inc
inc
jecxz
pop
dec
sub
ds
aad
xchg
movs
add
inc
or
add
mov
mov
inc
adc
mov
add
outs
jmp
xchg
mov
int3
outs
or
or
sub
sub
jmp
inc
mov
imul
(bad)
popf
imul
nop
mov
lods
push
(bad)
js
call
jmp
xor
lock
mov
and
clc
xor
test
mov
add
cmp
push
pushf
push
(bad)
lods
popf
adc
cmp
stos
sub
add
push
push
mov
or
stos
fwait
add
mov
inc
popf
jae
ins
mov
inc
sbb
add
cwde
add
bound
and
add
(bad)
or
sbb
ss
push
cmp
test
push
xchg
inc
and
fild
xchg
pop
adc
pop
jb
mov
adc
cmp
cmps
or
in
sbb
cdq
in
nop
xchg
sar
push
cmp
xor
(bad)
pop
pop
push
xor
adc
cdq
cwde
add
mov
out
push
in
push
push
or
inc
push
push
or
cmp
in
dec
sub
jb
jb
daa
dec
mov
mov
add
je
aam
jecxz
push
popa
je
cmp
je
cmp
bound
lods
push
mov
lea
push
fstp
or
popf
in
fadd
inc
inc
ins
push
sub
add
mov
je
test
add
je
es
repnz
and
cs
(bad)
in
adc
xor
or
test
inc
pop
inc
inc
mov
and
xor
or
xchg
pop
mov
outs
push
cld
or
and
retf
ret
stc
ss
jmp
cwde
pop
xor
inc
in
out
or
xchg
ss
mov
and
sbb
mov
cld
and
jl
or
fs
jmp
pop
sub
jnp
pop
xchg
xor
mov
and
mov
shr
or
dec
leave
scas
push
out
ins
pop
add
add
sbb
or
dec
enter
push
mov
inc
sbb
ss
xor
mov
jmp
and
mov
repnz
or
loop
mov
pop
sbb
or
dec
fwait
mov
dec
ret
cmp
call
in
sbb
cmp
add
adc
mov
dec
pop
fidiv
dec
jmp
inc
pop
sar
add
and
enter
dec
pop
dec
shl
add
dec
ficomp
xchg
inc
inc
pusha
add
out
inc
mov
cmp
cmp
hlt
add
lods
and
sbb
jmp
adc
nop
cmp
cdq
into
inc
inc
xchg
in
mov
and
(bad)
mov
mov
inc
fwait
idiv
dec
adc
or
loopne
clc
add
fnstenv
les
mov
mov
and
rcl
adc
out
mov
les
pop
stos
push
pop
hlt
adc
rol
retf
xor
rol
dec
push
enter
test
dec
inc
ror
cmp
ret
jnp
adc
dec
scas
jno
aas
inc
movs
test
inc
jnp
cmp
aas
xchg
jg
push
hlt
cmp
je
mov
push
add
lods
adc
inc
or
fild
push
push
add
jmp
sub
add
push
mov
sub
jns
add
jbe
push
inc
inc
scas
jb
test
pop
ret
lock
push
pop
push
cmp
xchg
or
test
fld
push
xchg
ins
mov
clc
lock
call
add
xor
sbb
scas
mov
mov
ja
enter
xchg
(bad)
cld
cmp
je
mov
inc
jg
mov
fs
(bad)
or
push
mov
fmul
and
or
inc
and
pusha
or
adc
push
jmp
mov
rcl
mov
jmp
loopne
mov
mov
fmul
adc
pop
dec
add
push
dec
cmp
test
nop
or
or
dec
imul
and
pop
imul
loope
jl
inc
add
push
into
dec
dec
lds
lea
add
xadd
mov
rol
out
sub
pop
stc
mov
xchg
push
stc
adc
inc
stc
adc
clc
nop
pusha
mov
(bad)
jge
es
push
sub
or
cmp
cmps
add
and
add
or
jl
nop
dec
and
cmps
int3
sub
sbb
add
sub
add
adc
ja
inc
jnp
inc
xor
dec
cld
add
adc
push
jmp
and
mov
add
ret
push
push
push
mov
jb
push
inc
push
mov
sub
sar
inc
push
or
cmp
sbb
or
mov
call
jl
push
pop
inc
mov
lock
and
inc
jmp
ins
jo
movs
or
jnp
mov
cmp
xchg
inc
pop
shl
or
mov
dec
or
mov
clc
stos
mov
or
push
push
pop
pop
sub
jo
xchg
shr
sbb
inc
mov
xchg
xor
jo
in
ret
les
sub
out
or
add
mov
test
inc
mov
cmp
sbb
inc
mov
fwait
fwait
retf
jmp
inc
dec
ds
jl
push
jg
pop
adc
xor
data16
outs
fstp
jne
or
push
and
add
mov
adc
xchg
cmp
jmp
test
or
outs
and
test
adc
fcomi
sub
sahf
jg
cmp
jg
dec
xlat
cmp
push
sub
mov
jmp
retf
and
in
ret
or
xchg
xchg
adc
ja
mov
or
jmp
push
out
je
inc
mov
ins
mov
inc
or
and
bound
and
sbb
lea
push
mov
mov
out
or
mov
and
or
xor
ret
jbe
pop
sub
inc
cmps
je
das
jecxz
mov
mov
std
push
and
jae
(bad)
mov
or
fisubr
lods
fst
dec
neg
adc
xor
loope
inc
add
and
inc
ss
pop
das
outs
mov
je
push
adc
stos
mov
shr
add
sbb
add
or
mov
add
jbe
js
cwde
das
jle
inc
sbb
add
mov
pusha
hlt
nop
inc
mov
arpl
aaa
dec
mov
cmp
pop
cmp
sbb
scas
adc
fadd
shl
mov
sar
stos
fld
(bad)
adc
cmps
pusha
repnz
fld
int3
data16
ror
mov
jmp
(bad)
mov
sbb
adc
pop
mov
inc
xor
sub
(bad)
movs
or
std
popa
push
sub
add
jns
jnp
cmp
fisub
and
push
pop
push
dec
cmp
xor
pop
sbb
and
xchg
add
cmc
xchg
loope
popa
sbb
mov
dec
mov
adc
add
jnp
jp
push
lea
jp
mov
lock
cmp
add
out
pop
adc
pusha
sbb
dec
pop
ret
or
stos
mov
or
jae
ret
enter
fs
inc
jbe
sub
pop
push
jecxz
mov
xchg
mov
dec
repz
call
or
shl
pop
sbb
sar
data16
push
or
xchg
mov
push
es
loopne
repz
or
push
aaa
push
push
jno
mov
mov
retf
sbb
jmp
dec
mov
inc
inc
xchg
mov
mov
clc
retf
ror
(bad)
ficom
pop
mov
inc
push
jg
push
push
pop
cmp
push
jae
push
add
sbb
or
dec
mov
je
call
inc
inc
movs
add
adc
sti
jmp
inc
or
fist
mov
les
mov
adc
pop
pop
inc
call
shl
sar
xor
push
sbb
fadd
pop
xor
in
in
mov
and
(bad)
sbb
or
and
or
jo
xor
out
ret
xchg
cmp
(bad)
xor
lods
cmp
and
push
cmp
push
into
and
or
adc
mov
mov
mov
xor
sbb
jo
and
dec
push
pop
or
fs
add
adc
xor
pop
repnz
pop
and
jge
jbe
sbb
ja
mov
out
add
movs
cmp
sar
ins
movs
int3
inc
xor
or
ds
add
adc
sahf
sub
data16
neg
sar
ds
push
xchg
push
sbb
add
loop
mov
mov
sbb
pop
call
inc
ja
arpl
mov
ror
or
and
cmc
dec
mov
dec
enter
imul
or
pop
sub
leave
mov
fcom
xor
push
es
push
mov
les
mov
sbb
mov
(bad)
and
inc
inc
call
in
sub
sub
inc
cld
add
or
adc
lock
fild
jbe
sub
xchg
xchg
call
mov
mov
dec
sbb
pop
ja
rcr
dec
sub
inc
sar
inc
xor
adc
popa
mov
or
data16
or
cs
or
xchg
mov
mov
or
call
push
(bad)
aam
and
dec
imul
addr16
xor
push
xlat
xchg
fwait
sub
pop
cmps
js
out
jne
loope
or
sbb
adc
or
and
sbb
or
pop
add
(bad)
push
iret
fs
lods
sub
sbb
mov
push
cs
sub
or
cmp
mov
test
pop
icebp
stos
or
es
jae
mov
mov
or
push
in
adc
stos
ins
test
sub
xor
mul
shl
test
mov
ins
clc
push
sbb
in
inc
push
mov
test
mov
push
sbb
add
sbb
xor
mov
xlat
(bad)
mov
(bad)
pop
jns
sti
es
or
sar
or
inc
or
jle
shl
add
gs
push
or
adc
jb
cmp
mov
int
ret
sbb
adc
xor
push
ret
test
clc
enter
add
pop
loope
xchg
clc
cdq
mov
mov
push
test
jp
ins
fadd
sbb
push
cwde
jp
dec
sbb
push
cmp
iret
push
cmp
sub
add
mov
rcl
xor
push
leave
test
mov
mov
or
shr
loopne
xchg
loopne
dec
frstor
xchg
cmp
(bad)
leave
mov
push
mov
adc
mov
aaa
es
or
push
cmp
das
inc
mov
or
add
shr
inc
add
jne
shl
nop
cmp
push
inc
cmp
cmp
jle
jne
cmp
daa
and
adc
dec
sti
pop
enter
mov
(bad)
adc
or
ror
adc
fmul
retf
(bad)
mov
cs
sbb
adc
mov
jmp
ja
rcr
imul
fsubrp
pop
outs
adc
or
cmp
(bad)
xlat
dec
cdq
jne
aad
sub
repnz
mov
cdq
adc
cli
jle
test
call
mov
and
inc
retf
lahf
out
sbb
mov
or
not
fmul
dec
sbb
cmp
inc
cmps
sbb
cld
mov
mov
or
out
scas
loope
scas
cmp
push
jge
push
sub
loopne
sub
scas
sahf
loopne
lea
les
(bad)
fidiv
or
mov
sbb
pop
loope
pop
xchg
and
ins
loopne
xor
loopne
sbb
pop
mov
push
add
jb
addr16
popf
mov
in
test
add
add
inc
js
ins
jmp
mov
sub
loop
push
sub
sub
or
je
push
dec
cmp
inc
add
mov
dec
rol
lahf
std
cmp
das
jmp
into
js
std
xor
mov
mov
add
mov
pop
icebp
add
push
xor
stos
adc
dec
or
mov
lock
push
lds
or
dec
das
pop
loope
retf
sub
adc
imul
xor
dec
push
xor
xor
cli
dec
add
cmp
xor
fwait
mov
mov
cmp
push
cwde
mov
add
or
ds
jg
dec
sar
jp
and
inc
push
pop
jle
cmp
jl
lahf
xor
jle
cmp
jb
jbe
test
inc
inc
mov
push
xor
push
lods
push
push
sbb
push
push
inc
(bad)
mov
repnz
and
mov
jmp
sbb
add
or
jne
pcmpeqw
cmp
es
nop
mov
add
and
jp
mov
lea
clc
je
add
jnp
dec
sub
push
and
add
cli
ins
and
add
pop
loopne
push
cmp
jmp
dec
sub
dec
cld
sub
inc
sub
lods
and
inc
icebp
mov
jge
inc
mov
mov
add
jg
jl
cmp
jae
pop
lock
mov
ficom
rol
add
xchg
in
sbb
pop
rcl
mov
add
sub
mov
enter
add
jge
add
inc
jmp
inc
stc
push
adc
xchg
and
sub
scas
in
or
test
fwait
call
jnp
jae
dec
dec
sahf
ins
data16
std
es
cld
inc
or
cwde
fiadd
dec
jns
and
sub
(bad)
lock
sub
xor
pop
xor
ret
mov
sub
push
mov
jne
dec
mov
rol
test
aad
retf
adc
inc
mov
or
outs
mov
or
add
add
cmp
out
test
jne
sub
push
sbb
lock
or
es
jmp
push
push
xchg
add
push
add
sub
(bad)
and
inc
add
mov
pop
add
pop
bound
daa
adc
adc
pop
inc
mov
dec
adc
push
jmp
sbb
pop
jb
lock
push
test
icebp
cmps
fadd
jnp
shr
test
xchg
push
ja
or
lahf
push
push
and
inc
sub
xchg
outs
or
push
xor
add
mov
repz
pop
sbb
aas
je
cmp
push
push
push
ds
adc
(bad)
and
push
jo
push
cmp
mov
and
push
mov
les
std
xlat
loopne
add
clc
pop
pop
mov
inc
cmp
inc
pop
add
pop
push
mov
sub
adc
xlat
not
pop
imul
or
js
adc
push
mov
mov
mov
jmp
mov
add
repnz
loopne
dec
outs
(bad)
fnstcw
ret
cmp
fsubr
cmp
mov
mov
push
adc
neg
sub
push
sub
pop
push
rol
jge
and
pop
shl
sbb
push
sbb
sbb
cmc
jle
pop
cdq
push
in
test
shl
in
add
aam
std
shl
imul
inc
pop
inc
or
mov
xchg
fwait
mov
and
pop
mov
retf
inc
ds
add
(bad)
pop
push
int
xor
push
mov
lds
jne
inc
(bad)
test
rol
mov
pop
mov
inc
pop
cwde
push
dec
inc
aaa
add
jo
cdq
inc
cmp
inc
xor
push
sub
push
sub
add
dec
xor
xor
jbe
dec
jne
retf
cdq
push
hlt
jmp
cmc
inc
test
and
mov
cmp
jg
enter
repz
call
ret
add
pop
xchg
clc
cmp
imul
ret
push
inc
or
jne
mov
mov
push
push
pusha
pop
jg
add
daa
cdq
mov
sti
cmp
ds
pushf
nop
or
mov
adc
scas
add
das
add
push
out
add
pop
ja
jmp
inc
and
cld
xor
adc
or
push
fisttp
fwait
jo
out
call
mov
jne
mov
jl
lahf
jle
add
cmp
dec
jns
or
xchg
mov
aam
or
fisttp
iret
jae
loop
cmps
lsl
icebp
in
popf
add
(bad)
jo
push
ins
div
jo
ret
pop
pop
je
xor
push
sar
je
pop
int
das
js
push
(bad)
jne
(bad)
shr
xor
lods
adc
mov
loopne
xor
outs
pop
das
aad
in
xor
jmp
and
in
sub
and
sbb
xchg
xor
rol
cmp
xor
jne
inc
test
or
inc
push
mov
pop
jb
push
adc
pop
and
cs
push
xor
push
push
push
xchg
or
cmp
fmul
xchg
stos
inc
mov
push
xchg
mov
mov
in
add
jg
dec
add
(bad)
iret
sbb
add
sub
cs
sub
and
sub
call
(bad)
or
pop
add
inc
mov
or
pop
push
push
fcom
inc
dec
dec
sub
push
loop
inc
adc
add
or
in
shl
adc
sbb
xor
adc
enter
cmp
pop
mov
mov
pop
and
and
and
add
or
or
out
xor
pop
push
cld
in
push
out
imul
push
gs
pusha
sub
ret
pushf
adc
and
cmp
ins
pop
(bad)
mov
(bad)
fadd
fild
das
int3
test
fsub
adc
cmp
adc
xor
in
sbb
fist
sub
outs
or
sbb
outs
fild
pop
es
cs
xchg
sbb
jp
adc
sbb
das
jg
shl
or
push
imul
and
lock
imul
cmp
add
cmp
cld
cmp
cli
add
dec
out
push
ja
and
movs
and
in
xchg
dec
jns
test
das
fild
jp
iret
je
add
push
add
lahf
mov
adc
adc
fdiv
std
mov
inc
jne
(bad)
jecxz
and
mov
sub
pusha
imul
pop
sahf
sbb
data16
push
test
sub
imul
add
mov
fstp
imul
push
outs
and
pop
adc
adc
pop
adc
(bad)
hlt
mov
bnd
inc
or
imul
dec
and
jmp
sahf
cmp
push
sub
imul
jne
adc
jp
ja
sub
repnz
leave
pop
add
mov
xchg
push
mov
adc
jg
add
repnz
fimul
dec
inc
dec
or
jne
cli
hlt
adc
pop
adc
sbb
rcr
mov
mov
adc
fs
std
push
dec
mov
cli
hlt
iret
ja
push
mov
adc
call
cwde
mov
push
repnz
inc
ja
or
cs
push
push
ds
pop
or
movs
test
js
xchg
xchg
pop
add
jl
push
xchg
pop
fadd
mov
jl
pop
mov
movs
mov
push
(bad)
dec
dec
dec
lock
xor
and
mov
shl
adc
mov
adc
xor
es
mov
dec
aaa
data16
jecxz
das
inc
pop
cmp
xor
adc
xchg
pop
mov
ret
cld
mov
push
pop
lods
cmp
push
cld
retf
hlt
push
ret
fs
cmp
(bad)
mov
aad
push
add
loope
jnp
xchg
xchg
dec
inc
jle
jl
or
sbb
data16
icebp
lods
sub
mov
push
je
dec
je
add
and
dec
movs
lods
ss
vgatherdps
rol
retf
ret
or
test
je
xor
adc
imul
cmp
jne
fs
cmp
mov
fbstp
frstor
push
jmp
cmp
mov
jo
ja
sub
push
pop
fxch
and
enter
push
push
gs
xor
daa
jbe
rol
and
mov
and
lock
sub
int
call
cmps
inc
mov
mov
lock
xchg
or
loopne
add
adc
movs
jb
loopne
adc
xor
add
scas
push
sti
mov
gs
outs
in
call
jno
lock
jne
cmps
mov
in
inc
mov
cmp
push
icebp
call
cmp
xchg
mov
jne
fmul
leave
leave
push
in
fsubr
add
test
stos
enter
mov
jmp
dec
test
xor
dec
pop
js
loopne
sahf
rcl
sar
and
pop
xlat
in
dec
leave
and
in
sub
in
xchg
pop
lea
inc
daa
in
xor
clc
add
mov
add
imul
pop
sub
add
fwait
jb
push
mov
cld
mov
ror
mov
add
xor
sbb
jg
ficomp
or
fimul
sbb
push
loop
fs
fdivr
je
lock
add
adc
adc
pusha
fs
int3
push
adc
ret
clc
imul
xchg
sub
jl
cmp
pop
cmps
cmc
das
and
lods
repnz
pop
ins
pop
ds
xor
std
sti
fs
add
mov
cld
loopne
sbb
jne
xchg
in
jle
inc
sbb
daa
(bad)
loopne
add
or
loope
(bad)
xchg
fidiv
push
test
data16
into
add
shr
hlt
adc
pop
je
bound
sar
neg
out
mov
into
inc
stc
inc
jge
addr16
ret
inc
xchg
movs
adc
mov
ret
dec
cmp
xchg
add
xchg
xor
adc
jmp
xchg
das
mov
pop
jmp
pop
dec
lea
or
aas
pop
inc
xchg
movs
aas
rcl
cmp
jle
aam
lds
pop
ja
jo
jne
adc
jo
pop
mov
cmp
sbb
jae
inc
(bad)
cdq
(bad)
je
mov
lods
das
xor
es
lods
lods
add
fstp
or
pop
fs
push
std
inc
dec
out
mov
hlt
stos
dec
xchg
mov
sub
push
aad
call
sar
xor
clc
xor
ror
push
push
fdiv
clc
shl
xchg
cli
and
xor
xlat
xor
lahf
aas
test
inc
fsub
inc
and
pop
xchg
or
in
aas
inc
aam
xchg
sub
aad
icebp
sbb
sub
pop
pusha
imul
pop
pop
icebp
mov
dec
adc
pop
js
imul
ret
or
in
push
ins
imul
gs
pop
sbb
inc
cdq
push
int3
je
inc
pop
loop
mov
push
mov
xor
cmps
pop
call
pop
jbe
scas
cmp
inc
test
mov
std
inc
jle
inc
xlat
push
fmul
inc
jle
cld
dec
jmp
in
enter
pop
and
inc
aas
jne
adc
inc
cmps
sbb
dec
mov
leave
dec
dec
jo
push
dec
ds
and
in
sbb
ins
pop
xor
jb
pushf
sbb
outs
js
out
dec
xor
or
mov
scas
xlat
fcom
cmp
inc
sub
js
push
push
jno
(bad)
sub
cli
inc
inc
push
mov
(bad)
fcom
das
mov
jmp
and
mov
add
jno
sbb
inc
test
inc
outs
mov
loope
mov
repnz
jmp
pop
xchg
and
push
push
shr
xor
out
nop
dec
pop
or
and
fs
mov
adc
adc
dec
js
std
addr16
sbb
test
or
mov
cmp
or
repz
test
or
dec
mov
cmp
push
add
call
outs
xchg
in
(bad)
jno
ret
clc
dec
xchg
jmp
test
test
pop
pop
inc
or
cs
or
leave
sbb
or
inc
push
pop
dec
addr16
(bad)
ja
imul
fdivr
les
push
test
cmp
jne
inc
sbb
adc
je
add
sbb
adc
sub
enter
sub
xlat
pop
or
inc
adc
jb
fadd
pusha
lods
je
push
ins
push
or
pop
imul
jmp
aaa
adc
jbe
cmp
sub
in
scas
push
or
inc
push
pushf
ins
call
out
sbb
dec
and
popa
pop
popa
adc
pop
jmp
push
outs
dec
mov
clc
pop
setno
out
mov
jmp
xor
shr
mov
jae
sbb
xchg
jno
test
and
sbb
dec
shr
inc
xchg
jmp
fucom
mov
sub
call
and
jb
add
pop
xor
or
ret
adc
cmps
dec
xor
not
inc
and
push
inc
push
cmps
push
loope
loop
xchg
div
xor
jo
mov
add
mov
dec
aas
adc
dec
cmp
call
adc
mov
lock
sahf
adc
jb
outs
push
test
xchg
mov
sar
ror
push
inc
push
add
jl
xchg
hlt
hlt
movs
retf
dec
cmp
lock
outs
mov
cmp
sbb
jmp
sbb
lea
mov
(bad)
mov
sub
pop
mov
or
and
iret
add
add
sub
push
in
push
call
inc
stc
add
(bad)
jmp
dec
je
add
mov
shl
lock
sub
mov
push
pop
inc
aam
mov
shl
xor
dec
arpl
cmp
ret
ins
fadd
push
out
or
addr16
xchg
dec
xor
das
imul
cwde
xor
sbb
out
dec
in
adc
and
adc
xor
ja
(bad)
dec
lods
mov
inc
call
cmp
lock
or
xchg
xchg
adc
or
sahf
ret
mov
ss
and
xchg
sbb
loopne
into
push
clc
aas
sbb
in
je
cmp
adc
or
or
(bad)
sbb
adc
cwde
sub
je
xchg
cmp
xchg
jo
js
push
mov
call
inc
pop
sub
ins
or
dec
mov
loop
add
mov
sbb
mov
xlat
push
ja
xchg
mov
push
jne
adc
jns
mov
dec
mov
fst
test
imul
add
push
les
or
push
add
push
pop
and
std
cmps
iret
in
xchg
lods
push
adc
dec
shl
(bad)
xor
into
and
int3
xor
(bad)
jno
aas
jns
xchg
enter
shl
imul
push
(bad)
int3
in
in
sbb
dec
mov
je
lahf
inc
mov
xor
pop
out
jne
pop
mov
pop
nop
add
push
les
xchg
mov
add
sbb
mov
call
push
inc
sbb
add
xchg
mov
retf
adc
cs
(bad)
mov
and
jo
add
mov
lods
xchg
and
sbb
lds
vphaddwq
and
icebp
gs
pop
and
(bad)
sbb
sbb
mov
or
pop
push
adc
mov
mov
push
je
iret
push
sbb
repnz
inc
rcl
cli
adc
mov
add
lock
sbb
pushf
push
lahf
cmp
jne
jecxz
push
adc
and
sub
xor
mov
and
jns
sbb
int3
movs
pushf
jmp
pop
repnz
popf
fcomp
jmp
push
test
xor
and
(bad)
hlt
xor
xchg
ror
loope
sbb
push
inc
cmps
pushf
xchg
movs
and
pop
and
lods
int
aam
sbb
outs
or
adc
ret
stos
jmp
mov
xchg
outs
(bad)
jmp
add
add
cmp
imul
in
mov
sub
adc
and
je
call
xchg
retf
adc
in
mov
lods
add
hlt
(bad)
shl
push
addr16
cmp
mov
mov
dec
in
jle
lock
mov
xchg
shl
mul
dec
jmp
jle
sbb
sti
sub
sbb
cmp
dec
pop
mov
sub
shr
push
mov
push
test
mov
hlt
xor
push
mov
dec
push
or
add
push
stos
mov
pop
test
pop
push
or
test
(bad)
icebp
punpckhbw
mov
shl
js
mov
xor
and
xchg
sbb
fnstenv
fcomp
ins
mov
sbb
pop
or
test
js
mov
jo
lock
(bad)
sub
add
sub
pop
lea
jmp
push
in
cdq
add
je
cs
add
push
outs
pop
sub
iret
or
dec
mov
test
adc
add
gs
push
loope
lock
mul
sub
jecxz
push
adc
mov
shr
js
inc
xor
pop
je
dec
push
and
xor
jne
xchg
sbb
jl
pop
jmp
fadd
xlat
add
mov
shr
jae
inc
mul
or
or
push
xor
sbb
or
push
cdq
cmp
ret
out
cdq
or
jne
pop
shr
fdiv
shl
test
push
adc
push
or
add
ins
into
sbb
(bad)
dec
inc
jge
cmp
xchg
fcomp
ja
sbb
xchg
jp
in
fist
xor
cmp
int3
lock
test
push
call
push
sub
cmp
jae
jnp
inc
enter
aas
(bad)
push
xlat
clc
loopne
jmp
lahf
ins
mov
or
sub
gs
pop
adc
je
or
out
sbb
test
repz
enter
aam
jecxz
hlt
and
scas
lds
lods
lock
mov
mov
shl
mov
dec
xchg
xchg
adc
xor
repz
loopne
imul
xor
clc
adc
mov
je
idiv
aaa
lock
and
je
inc
(bad)
sahf
push
pop
rcl
mov
sbb
(bad)
test
add
push
and
hlt
popa
lock
lods
push
pop
test
jno
jge
je
mov
push
out
mov
cmp
sub
mov
jne
add
shr
xorps
stos
jg
fsubr
jl
fwait
aaa
(bad)
cmp
fadd
aam
cmp
ror
and
(bad)
std
movs
push
mov
in
inc
push
adc
or
lods
lods
(bad)
aaa
jmp
cmp
inc
inc
shl
test
and
and
xor
ret
clc
call
je
inc
neg
jl
dec
jl
xor
int3
fadd
mov
ret
mov
jns
std
cmp
inc
pop
jne
cmp
jne
sbb
adc
xor
ins
das
inc
inc
or
mov
je
push
daa
scas
cmp
movs
push
enter
jmp
rcl
sti
ins
je
pushf
sbb
dec
xchg
pop
jle
lea
jmp
inc
dec
cld
aam
add
push
push
push
sub
inc
add
imul
jo
fld
jp
mov
pop
and
sub
and
out
push
fs
xchg
aam
and
shl
pop
push
test
lods
dec
fstp
cmp
pop
je
clc
loop
sar
push
fld
sti
sub
xor
iret
xlat
cwde
xchg
push
sub
xchg
cmp
jmp
shl
mov
in
add
cmp
jne
lds
scas
es
adc
adc
mov
call
mov
imul
and
stos
xchg
cmc
xchg
push
push
sub
xchg
inc
lods
jl
sbb
test
not
push
je
jnp
jno
lock
ret
add
pop
add
sub
shr
iret
push
clc
call
mov
repnz
retf
loopne
shr
inc
lods
cwde
jmp
cmp
fcomp
mov
mov
sub
or
rcl
inc
push
sbb
clc
sub
mov
cwde
adc
rcr
test
xchg
ror
and
shl
call
xor
fdivr
mov
out
adc
inc
bound
or
cmp
clc
inc
push
adc
push
pop
call
or
pushf
xor
mov
push
daa
push
inc
shl
sub
in
fsubr
add
add
jne
cmp
fs
mov
xchg
and
mov
push
mov
sbb
mov
pop
jg
imul
(bad)
and
add
sub
movs
mov
imul
sbb
ret
adc
xchg
mov
pop
dec
je
sbb
add
or
mov
jg
in
push
mov
xlat
cmp
loope
or
inc
(bad)
in
mov
in
jnp
and
xchg
mov
mov
or
les
xchg
in
mov
adc
ds
cmp
dec
sbb
rol
cmps
and
loopne
femms
test
in
sbb
fisub
adc
xor
fidiv
xor
mov
sti
pop
(bad)
sti
push
mov
imul
fild
pop
mov
icebp
push
ficom
aas
pop
fnstenv
enter
and
push
(bad)
adc
mov
dec
loope
stc
mov
pop
jns
xor
add
cld
dec
je
popf
sti
mov
inc
jmp
sbb
jne
lods
gs
sahf
inc
jp
mov
push
mov
mov
arpl
xchg
inc
push
mov
jne
test
rcr
cmp
and
jmp
and
jmp
add
enter
stc
push
shl
dec
rol
mov
jne
cmp
sbb
pop
mov
dec
pop
fsub
adc
push
cmp
push
mov
fidiv
push
jns
jnp
test
jo
adc
pop
test
mov
jmp
ror
mov
movs
loopne
imul
cs
sub
mov
mov
mov
push
or
ror
mov
adc
stos
(bad)
and
sbb
xor
ror
popf
mov
adc
mov
and
out
imul
loopne
push
cmp
sub
add
(bad)
cmp
movs
cmp
mov
in
mov
pop
fwait
push
pop
add
add
inc
adc
les
xor
or
pop
and
xor
sahf
pop
rcl
jne
je
or
clc
arpl
or
sbb
and
ds
push
aas
adc
or
jns
pop
in
mov
sbb
int3
inc
push
jmp
fmul
dec
or
jmp
inc
pop
jecxz
ror
cmp
mov
jne
adc
xchg
test
push
imul
lea
push
mov
cwde
bound
popa
lea
mov
aaa
or
pop
adc
es
sbb
pop
fadd
repnz
jge
sub
mov
inc
cld
arpl
sbb
cmc
inc
mov
xchg
fst
(bad)
push
imul
movs
fnsave
ins
ficomp
adc
rcl
add
mov
push
ret
push
ror
add
mov
pop
shl
(bad)
(bad)
cmp
aaa
push
in
out
clc
or
addr16
pop
hlt
movzx
aas
jp
dec
dec
mov
mov
das
test
cmp
inc
inc
xchg
inc
push
inc
xor
and
xor
pop
and
aaa
sub
sub
loope
push
std
dec
clc
dec
jg
je
sub
xchg
or
adc
fistp
(bad)
lahf
add
lods
mov
clc
sar
in
popa
adc
in
in
aad
add
loope
cmp
xor
mov
mov
jge
push
adc
mov
push
imul
adc
push
or
stc
dec
jg
je
inc
jg
inc
jge
dec
ror
adc
mov
(bad)
mov
add
fisttp
or
(bad)
call
aam
sahf
in
stos
jmp
int3
dec
jl
jb
(bad)
or
cmovnp
push
in
sbb
lods
add
shl
dec
test
cmp
mov
outs
test
push
jl
xchg
hlt
or
adc
test
pop
push
out
or
jl
adc
or
sti
dec
add
dec
je
and
adc
lea
adc
mov
sbb
xchg
push
test
or
add
stos
ret
push
fdivr
(bad)
retf
out
mov
push
jmp
pop
sahf
mov
mov
jns
cmc
cmp
xor
sub
adc
fidivr
push
adc
adc
or
or
fs
add
cmp
shl
lahf
(bad)
jmp
sbb
jmp
mov
in
fwait
or
scas
push
or
and
xor
adc
pop
cmp
push
push
loope
add
adc
mov
push
xor
mov
pusha
test
mov
leave
rcl
ret
outs
xor
test
cld
sub
je
clc
sbb
fild
ror
jb
jne
dec
(bad)
fldcw
xchg
inc
and
adc
xor
daa
sub
fwait
or
and
and
test
mov
cmp
pop
cmp
jg
or
pop
cmp
mov
xchg
and
xor
lahf
mov
and
call
mov
add
test
sbb
cmp
dec
inc
dec
and
aad
sbb
push
(bad)
bound
fsubr
sbb
dec
shl
mov
jge
aas
je
fimul
(bad)
fnstenv
add
mov
mov
popa
xchg
or
inc
sbb
aad
push
mov
ins
mov
(bad)
mov
lods
push
cmp
dec
sub
(bad)
aad
bnd
ss
popa
mov
bt
enter
outs
adc
ror
mov
mov
xor
dec
lea
push
push
rcl
jmp
mov
push
les
(bad)
je
push
mov
cmp
xchg
pop
jns
fmul
push
pop
ins
sbb
push
sub
push
fcom
sub
pop
or
cmp
adc
mov
and
fsubr
in
sub
dec
movs
sti
push
sub
xor
mov
js
cmp
mov
pop
pop
fs
push
add
inc
sbb
pusha
jb
imul
dec
xchg
jmp
aad
loop
inc
xchg
mov
rol
call
fcom
dec
std
mov
or
adc
lock
or
and
inc
or
mov
jp
rcr
xchg
cs
mov
ja
mov
stos
add
(bad)
mov
pop
inc
out
(bad)
mov
je
outs
push
je
bound
mov
test
scas
mov
mov
xchg
mov
push
xchg
icebp
or
add
cmp
jne
imul
inc
pusha
sub
test
push
scas
or
or
or
test
in
jnp
inc
pusha
cs
sbb
inc
fs
xchg
or
sub
adc
sbb
jge
mov
inc
inc
add
adc
jnp
fcomp
mov
mov
adc
call
es
ins
fsubr
test
aaa
xor
mov
xchg
sub
pop
xchg
jp
cmp
mov
cmc
jge
in
es
sub
test
leave
call
test
sub
and
pop
push
add
cdq
cmp
mov
lea
fs
aaa
out
int3
jne
xor
js
mov
cs
sub
dec
xor
mov
loopne
and
jge
mov
fisttp
push
inc
push
mov
stos
into
out
xor
sub
ret
or
icebp
sti
cmp
xor
in
dec
inc
sbb
push
push
or
xor
adc
cli
inc
add
push
rcl
das
sub
and
or
jp
adc
mov
push
int3
mov
pop
arpl
imul
xor
xor
adc
mov
add
mov
xchg
push
leave
dec
ins
movs
push
jl
cmp
jle
cli
mov
js
ret
or
mov
sbb
add
add
push
cwde
pop
shr
adc
add
inc
dec
xchg
and
jo
enter
inc
mov
shl
das
iret
pushf
jmp
cmc
adc
mov
add
gs
add
or
shl
xchg
mov
xor
out
iret
add
mov
pop
inc
(bad)
aad
sbb
loopne
jmp
cmp
and
mov
or
mov
xchg
xchg
mov
add
(bad)
clc
iret
jb
dec
add
retf
and
and
push
xor
cmp
push
clc
xchg
and
movs
mov
fs
adc
cdq
pop
sub
and
jne
or
ret
pop
pop
and
adc
sub
sbb
inc
or
jns
or
cmps
pop
mov
xor
(bad)
outs
or
fcom
lods
mov
cmc
sbb
and
sbb
jno
adc
xor
adc
add
or
jl
xchg
push
adc
add
xor
ja
push
push
lea
ret
xchg
or
cdq
js
rol
inc
add
pusha
ss
add
lods
and
and
pusha
add
loopne
inc
push
cmp
or
(bad)
mov
sbb
in
ror
jg
sbb
xchg
xchg
cmps
mov
cmp
(bad)
rol
nop
cmp
jbe
int3
and
icebp
push
outs
les
push
push
mov
retf
adc
inc
mov
lods
sar
cs
jl
or
jmp
call
add
xchg
loopne
test
js
cdq
icebp
cmps
mov
pusha
adc
sbb
ror
fcom
je
cmp
je
shr
ror
cwde
inc
mov
dec
out
xchg
jno
imul
jbe
add
adc
icebp
imul
push
cmps
lock
nop
sub
dec
add
or
add
or
or
xor
push
les
dec
sbb
add
or
movs
sti
fld
or
dec
jge
out
pop
nop
add
cdq
movs
pushf
cwde
repnz
movs
sbb
es
adc
mov
mov
add
fisttp
or
mov
add
cs
mov
mov
ins
loop
fchs
retf
and
out
movs
cld
in
aam
(bad)
and
test
mov
push
push
stos
pop
xchg
mov
push
into
cmp
int3
int
nop
rcr
fstp
push
xlat
cli
push
shl
jb
movs
retf
pop
push
sub
or
hlt
adc
ss
adc
cmp
les
jnp
adc
ss
fld
sahf
xor
add
inc
repnz
test
sub
pop
stc
scas
mov
movs
retf
retf
(bad)
repnz
(bad)
stc
add
adc
shr
and
bound
adc
push
push
call
add
add
std
cmc
in
in
scas
ror
ss
sub
add
mov
je
jl
movs
retf
lods
in
in
pop
inc
dec
mov
dec
in
xchg
jge
xchg
stos
add
jl
ins
test
add
inc
inc
arpl
inc
add
das
push
ins
test
scas
dec
cmp
fwait
js
add
push
test
push
xchg
retf
sbb
cld
cmps
in
es
add
jl
inc
cwde
add
add
inc
ret
mov
dec
ds
clc
inc
mov
scas
or
inc
mov
adc
xchg
pop
mov
cmps
fld
sti
movs
mov
mov
(bad)
cmp
cld
movs
inc
int3
fimul
std
add
mov
xchg
dec
pushf
in
fs
jne
pop
and
pushf
jae
fs
mov
stos
nop
pop
in
rol
fs
pushf
dec
adc
xor
sbb
mov
test
inc
push
jns
test
cwde
jb
in
xchg
xchg
mov
test
mov
add
int3
es
and
add
call
mov
cmp
es
or
adc
sti
push
cmc
scas
inc
add
push
ja
(bad)
xor
cmps
stc
pop
scas
cmp
in
jecxz
sbb
and
sub
and
(bad)
clc
cmp
and
fisubr
pop
scas
inc
push
xor
lahf
hlt
pop
dec
push
pushf
pop
mov
xor
pop
sub
je
push
popf
fiadd
ins
ds
cmp
(bad)
neg
mov
clc
pop
(bad)
or
adc
sbb
or
sbb
mov
push
fist
scas
aad
adc
shr
add
std
sbb
or
cld
pop
sub
cmps
push
ins
ins
mov
adc
xchg
adc
imul
push
stc
stc
jl
in
push
or
out
js
loope
mov
push
add
push
adc
push
loope
and
and
sub
jne
add
add
pusha
push
jmp
dec
dec
dec
inc
test
inc
hlt
cmp
mov
jns
mov
int
and
nop
shr
sbb
cmps
ret
cmp
les
xor
or
jle
sbb
mov
pop
xchg
movs
pop
fs
cmp
lock
xor
sbb
aas
xor
sbb
adc
(bad)
push
push
sub
xchg
adc
loopne
aas
push
pop
push
dec
adc
loopne
adc
xchg
add
cwde
push
push
out
mov
dec
call
or
dec
mov
fnstcw
push
ss
push
xlat
sahf
mov
sub
sub
in
adc
stos
or
push
mov
fistp
add
clc
lahf
gs
shl
or
or
lock
loop
test
mov
mov
mov
bound
call
add
or
cmp
je
(bad)
(bad)
or
pop
or
sub
xchg
adc
fcmovu
xchg
icebp
test
pop
pop
xlat
push
pop
or
loop
xor
cld
inc
lds
push
ins
add
shl
jo
repnz
inc
les
movsx
dec
repnz
lock
leave
inc
or
adc
adc
mov
jecxz
inc
inc
dec
mov
add
sub
cdq
mov
push
sbb
adc
or
add
push
adc
sbb
pop
sub
and
arpl
adc
ss
xchg
pop
int3
cwde
jae
and
or
push
or
add
sub
add
dec
ret
out
add
jmp
enter
lock
push
je
or
loope
fmul
dec
ret
push
or
in
or
(bad)
pop
jmp
js
or
push
retf
(bad)
jno
mov
push
jl
cmp
or
inc
sti
jae
xchg
add
add
out
xchg
mov
jmp
or
jmp
adc
dec
mov
cmp
dec
or
std
ret
in
add
(bad)
pop
cmp
push
mov
jbe
(bad)
mov
cmp
test
movs
das
nop
cmps
loopne
sub
add
or
pop
adc
jo
call
mov
sbb
(bad)
add
xor
sbb
add
sub
xor
push
je
cmc
add
jo
jo
sub
inc
mov
ret
xchg
add
or
sbb
pop
and
mov
mov
inc
sub
and
sbb
sbb
or
cwde
nop
pop
jmp
add
push
movs
and
xchg
xchg
or
outs
add
nop
push
mov
xchg
je
mov
inc
jp
mov
mov
cmp
(bad)
js
inc
jge
movs
jl
cmp
add
mov
(bad)
ret
xor
sbb
jnp
add
mov
adc
test
adc
push
mov
adc
loope
xor
mov
out
lock
dec
mov
jmp
lea
and
sti
mov
out
dec
dec
sub
push
adc
push
pop
xchg
enter
jl
cmp
and
or
das
push
lods
jae
enter
mov
mov
jg
pop
test
sub
jbe
test
mov
pop
adc
push
(bad)
mov
jl
cmp
or
jmp
nop
(bad)
sub
scas
aad
xchg
mov
inc
mov
adc
add
mov
cmp
pusha
jge
test
add
inc
out
mov
cmps
xchg
jns
loop
rcr
dec
adc
movs
mov
cmp
cmp
or
sbb
push
sub
mov
scas
je
push
and
jmp
dec
push
lea
mov
and
cmp
push
fwait
xchg
add
pop
or
dec
add
js
and
and
push
add
mov
push
rol
outs
pminsw
or
dec
pop
pop
nop
add
pop
cmp
je
mov
add
aam
mov
bnd
(bad)
hlt
push
xor
sub
cmps
rcl
push
lock
and
pusha
int
cld
mov
mov
sub
inc
and
cmps
mov
cmp
add
data16
data16
sbb
js
mov
mov
dec
cwde
mov
or
add
xor
mov
adc
retf
add
mov
push
test
lds
xor
mov
dec
or
and
xor
mov
dec
xchg
imul
cs
and
and
xor
test
xor
or
das
pop
or
jmp
cmp
and
pop
sbb
cmp
mul
or
pop
aaa
and
bound
push
mov
(bad)
cmp
mov
pop
add
lahf
or
jbe
push
push
inc
mov
jge
rol
push
and
pop
adc
cld
add
ret
adc
test
or
iret
mov
xor
push
xor
cmps
sar
bound
push
test
imul
xor
jbe
adc
sti
or
je
jbe
adc
(bad)
loopne
inc
fdiv
add
xor
test
mov
mov
dec
shl
shl
or
inc
daa
jmp
mov
leave
mov
add
adc
push
and
jmp
(bad)
lods
and
loopne
(bad)
iret
mov
loop
fcom
push
loopne
adc
jle
ss
jl
popa
mov
cli
mov
mov
push
rcl
popf
add
pop
hlt
inc
and
xchg
es
push
pop
ja
loopne
and
call
mov
mov
mov
in
rol
push
sub
pop
push
in
dec
fcom
es
adc
fs
pop
or
mov
sub
add
test
sbb
mov
xchg
inc
sub
mov
sub
test
sbb
jg
fdivr
add
mov
dec
je
or
aaa
xor
and
les
adc
cmp
ret
push
es
enter
adc
and
fs
pop
fild
jne
enter
jb
es
gs
ja
sbb
data16
fs
and
imul
jne
in
jns
js
add
sbb
loope
fcom
and
lea
pop
mov
mov
sbb
sbb
out
outs
inc
push
or
xor
lods
scas
sbb
mov
call
in
jne
cdq
cmc
jge
push
clc
std
into
mov
int3
mov
fwait
adc
xor
rcr
add
sub
or
mov
sub
dec
mov
inc
and
inc
or
dec
fs
pop
adc
pop
sub
retf
cmp
fisttp
(bad)
dec
and
in
jmp
adc
daa
push
add
adc
push
dec
fld1
rcl
scas
aas
test
scas
inc
cmp
mov
aam
inc
cli
mov
push
add
(bad)
int3
push
nop
je
mov
jg
mov
mov
lock
nop
xlat
mov
add
xor
sub
stos
ror
icebp
xchg
out
pusha
xchg
stc
es
nop
mov
(bad)
pop
stos
jae
call
mul
add
and
jb
pop
cmc
push
in
or
jmp
add
and
add
dec
cmc
aam
mov
iret
aam
mov
movlhps
jg
ins
inc
test
fimul
mov
cmp
imul
push
add
jl
loop
and
pop
idiv
add
loopne
xchg
fsubr
pop
je
in
std
sub
mov
fwait
xor
pop
outs
sar
mov
movsx
or
jl
loopne
das
and
in
jecxz
inc
scas
pushf
call
fcom
mov
add
fstp
stc
add
inc
cmps
aad
dec
mov
or
push
pop
jg
or
add
sub
add
push
mov
xchg
mov
add
cmp
imul
cmps
mov
dec
xor
cmp
lods
pop
je
or
sub
into
push
inc
inc
adc
addr16
add
pusha
xor
packuswb
jns
sahf
cmp
in
call
cmp
out
call
fs
test
jmp
sub
inc
or
pop
push
cmp
mov
sbb
mov
inc
xchg
inc
adc
add
test
adc
aas
in
clc
nop
jl
clc
cmp
(bad)
in
sub
lahf
sub
xchg
test
sub
test
je
hlt
or
add
or
bound
mov
stc
repnz
stos
xor
adc
daa
or
mov
ds
aam
(bad)
dec
stos
xor
scas
pop
add
fmul
sub
aas
jbe
add
lock
add
add
pop
jg
ficomp
adc
aam
vmulsd
sbb
push
push
imul
add
jge
(bad)
fsubr
adc
fst
fcmovnu
fcom
mov
push
rol
pop
mov
xor
mov
aam
(bad)
lock
add
lds
cmp
push
pop
dec
repz
movs
fsubp
push
(bad)
or
sub
add
call
xlat
pop
fcomp
and
xor
pushf
adc
adc
mov
ds
sbb
sub
sbb
fdiv
and
dec
cmp
fsubr
cmp
xchg
add
or
add
ret
mov
aad
pop
js
cmp
add
inc
or
rcr
add
mov
(bad)
in
jbe
adc
sahf
aaa
sbb
out
xchg
dec
inc
jne
mov
pop
pop
clc
jmp
and
adc
push
jge
test
jno
movs
mov
int3
and
sub
dec
rdmsr
hlt
sar
adc
sub
je
and
adc
test
cmp
adc
shl
repnz
in
(bad)
mov
cmp
pusha
pop
loopne
nop
push
cmp
enter
ret
adc
rcl
(bad)
adc
js
pop
iret
shl
rol
cld
add
add
ficomp
js
clc
add
je
or
mov
sti
jnp
adc
or
adc
add
push
pusha
shr
outs
lods
aas
inc
shl
xor
pop
mov
push
stos
loopne
mov
pop
ins
dec
pop
pop
stc
or
inc
or
add
add
dec
(bad)
clc
adc
xlat
xor
add
sbb
cs
jle
jo
mov
mov
fwait
(bad)
dec
adc
add
dec
xor
adc
and
mov
fwait
outs
mov
mov
dec
std
and
sbb
pusha
test
jmp
and
push
(bad)
cmc
cmps
and
clc
add
cmp
aas
dec
or
jne
mov
sbb
scas
and
fs
pop
ret
mov
iret
and
clc
jmp
test
je
out
mov
inc
inc
xor
sub
or
(bad)
fadd
in
and
dec
adc
cmp
inc
cmp
and
add
add
cmp
adc
add
pop
mov
in
and
ret
retf
add
sbb
lock
cmc
or
hlt
adc
movs
call
shl
xor
lock
mov
int3
xchg
sub
xor
jbe
add
inc
push
retf
es
es
shr
ja
pop
adc
or
sbb
or
fisttp
push
and
sub
pop
inc
lea
or
(bad)
xor
imul
cmp
in
cmp
dec
rol
jmp
ja
arpl
movs
inc
sub
mov
jl
or
test
mov
adc
call
mov
lock
mov
cmp
ds
test
fld
std
sbb
js
inc
adc
mov
sbb
cmp
ins
inc
and
cmp
or
jg
clc
adc
jg
retf
mov
jg
mov
xor
and
xor
inc
inc
adc
sub
loope
and
aas
jne
clc
or
cmp
jle
add
je
and
or
mov
test
push
fild
sbb
(bad)
adc
cli
adc
or
lea
adc
into
adc
jg
or
mov
mov
mov
cwde
cmp
xchg
xor
pop
mov
sbb
or
lods
add
adc
and
arpl
int
daa
lea
cmps
ffreep
jge
fwait
xchg
sbb
int3
test
sahf
add
mov
data16
cmp
movs
(bad)
inc
inc
inc
inc
jmp
and
or
rol
cld
mov
cmp
and
jne
ret
mov
cmp
repnz
imul
jp
mov
sub
in
sbb
mov
nop
retf
sbb
adc
and
in
stos
add
test
ja
popf
jmp
popa
adc
imul
outs
cmp
push
adc
xor
ret
lock
fstp
or
stos
pop
sbb
or
or
sbb
xchg
push
sbb
mov
sbb
mov
fmul
sub
pop
lds
inc
mov
or
pop
fadd
or
call
add
in
(bad)
lea
push
add
add
pop
ret
pushf
add
xchg
adc
add
or
adc
jb
mov
(bad)
sub
jb
sub
xor
cmps
ss
cmp
inc
in
jbe
and
inc
cmovs
in
push
push
pop
add
cmp
push
ins
jo
js
fadd
nop
jl
sbb
test
fs
xchg
cwde
es
fs
pushf
mov
jmp
imul
xor
inc
add
add
retf
and
xchg
aas
nop
pushf
jbe
cmp
imul
jle
or
movs
adc
imul
lods
movs
pusha
inc
call
or
and
inc
inc
mov
outs
out
add
jmp
rol
jbe
or
push
inc
mov
mov
cs
mov
xor
(bad)
mov
or
push
lea
add
icebp
int
mov
enter
jb
lea
imul
mov
mov
out
std
pop
rcl
cld
jne
mov
push
cmp
jne
cmc
imul
and
adc
dec
push
xor
or
jb
mul
clc
ret
movzx
push
dec
(bad)
jmp
adc
(bad)
jmp
jns
sahf
cmp
std
jmp
cld
aas
cmp
data16
pmaxub
xchg
lods
dec
(bad)
inc
inc
inc
in
add
sbb
sub
sub
jmp
pop
ins
add
adc
add
cmp
adc
cmc
ins
mov
or
jmp
jo
popa
loope
sbb
stos
cmps
aas
push
cmp
lds
push
push
adc
clc
cmps
loopne
fs
ss
sub
push
push
pop
pop
(bad)
sbb
leave
or
mov
ins
retf
fwait
(bad)
push
cmp
jbe
xchg
adc
pop
pop
cmp
add
or
mov
fld
adc
push
jo
or
popf
stos
loope
mov
jmp
inc
jno
clc
add
lea
clc
push
sub
lods
test
fisttp
cmps
aaa
mov
sbb
add
xchg
or
aas
pop
div
jnp
adc
adc
loop
mov
mov
mov
and
mov
je
cmp
jg
adc
sbb
pop
jge
adc
inc
adc
rol
add
jne
stos
dec
loope
aaa
xchg
push
or
cmp
xchg
adc
push
clc
hlt
pop
lea
dec
rol
inc
pop
adc
jg
mov
test
mov
or
sbb
pop
push
test
inc
movs
jno
cmp
sub
add
dec
nop
sbb
test
fcom
push
test
jmp
inc
and
pop
sub
imul
cdq
and
dec
sub
or
hlt
call
mov
pop
popa
or
sbb
sbb
lock
mov
scas
rcr
int
dec
stos
jl
mov
inc
popa
adc
enter
or
push
add
or
mov
cmp
fstp
push
fld
rol
cmps
sbb
push
lock
push
mov
stos
cli
into
fild
into
dec
enter
ja
dec
lea
data16
add
fld
lods
repnz
int
pop
in
das
in
mov
xchg
dec
je
add
add
sbb
repnz
adc
xchg
ins
add
ins
mov
sbb
test
push
pop
fnstenv
add
jbe
jmp
rcr
xor
or
or
imul
add
push
ficom
mov
xchg
adc
mov
pushf
mov
add
lods
push
sahf
push
xchg
test
adc
mov
push
pop
cmp
aaa
adc
jo
jne
das
and
inc
lock
push
call
push
outs
ds
repz
or
fisub
(bad)
add
test
and
xor
sti
shl
addr16
jge
das
xor
or
pusha
cmp
sbb
dec
clc
add
xchg
or
cmp
sahf
adc
fld
adc
cmp
lods
mov
movs
outs
adc
(bad)
cmp
cmp
jne
push
fcom
mov
icebp
fstp
fstp
cmp
(bad)
jmp
js
addr16
lods
mov
pop
xor
mov
or
mov
cmp
sti
dec
lods
xchg
fcompp
daa
jb
or
rcl
sub
sbb
pop
push
mov
(bad)
or
jne
adc
fcomp
addr16
neg
jmp
out
pop
or
imul
test
xchg
ins
loop
mov
jne
ror
push
cs
cdq
sahf
xor
loopne
daa
fdivr
shl
dec
pop
fcomi
or
loope
xor
push
dec
dec
or
loope
xlat
shl
add
stc
jo
les
movs
sbb
mov
fisttp
mov
je
cmp
or
sbb
aas
add
adc
and
stos
and
jg
xchg
sbb
or
jb
out
test
inc
sbb
sub
hlt
mov
or
mov
fidiv
(bad)
adc
ins
fcomp
adc
sub
adc
leave
push
in
imul
fist
test
fwait
out
aam
add
or
inc
xor
ds
ret
push
int
fsubr
mov
fisub
sub
ja
stos
or
fstp
adc
rcl
out
jno
or
pusha
mov
or
jnp
sbb
lea
cs
inc
pop
mov
and
das
lds
adc
(bad)
lods
pop
fisub
out
xor
das
inc
retf
nop
retf
retf
cmp
or
mov
(bad)
cs
mov
out
xor
das
inc
retf
fwait
sbb
in
int3
retf
cmp
or
mov
imul
movs
and
pusha
das
inc
int3
dec
push
in
int3
int
movs
cwde
sub
mov
jge
xor
das
inc
int
pop
jb
int
int
int3
xchg
fdivr
movs
sub
xor
das
inc
into
xchg
add
sub
outs
cmp
rcl
jnp
jge
xor
das
push
cmp
test
rcr
ja
push
or
loopne
cmp
out
cs
fnstenv
dec
(bad)
sbb
xchg
dec
les
outs
sub
xchg
rol
xor
or
dec
je
movs
fmul
xchg
or
fs
sub
fisttp
jae
dec
push
fisttp
add
or
add
(bad)
sbb
lods
addr16
enter
call
xchg
jl
enter
xchg
jl
add
test
adc
jmp
cmp
sub
mov
or
or
call
inc
int3
cmp
mov
pmaxsw
dec
es
enter
cs
push
cdq
in
ret
test
pop
adc
ja
out
ret
aas
adc
and
sbb
fdiv
xor
js
sbb
sub
or
mov
and
or
sub
mov
es
arpl
retf
mov
push
adc
jb
loopne
fstp
jmp
pop
sahf
sti
mov
jne
aaa
es
xor
cmp
xor
cmp
sub
(bad)
cmp
aas
jbe
aaa
adc
ret
add
add
mov
int3
cmp
loope
sub
add
pop
and
fadd
inc
leave
fmul
retf
and
jns
push
sbb
sub
jb
xor
scas
adc
mov
or
sbb
push
fnsave
xchg
sbb
test
pop
jg
sub
scas
rcl
sbb
xor
cli
pop
xor
sbb
cmp
xor
and
scas
call
and
pop
pop
xor
xor
xor
jbe
test
idiv
xor
mov
inc
clc
and
jb
jns
or
cmp
out
add
(bad)
repz
cmp
dec
add
sub
rcl
fsubrp
and
es
jb
je
sbb
iret
nop
and
or
inc
ret
inc
and
leave
cmc
cmc
adc
fild
fisttp
and
fmul
fst
pushf
outs
sbb
iret
in
sub
or
mov
aam
les
mov
dec
push
xchg
and
sbb
icebp
jmp
ins
push
push
xor
out
add
jmp
push
jl
jmp
mov
or
sbb
retf
es
push
push
dec
pop
lahf
inc
fwait
rol
gs
or
je
(bad)
call
(bad)
jmp
mov
fnsave
jecxz
loopne
mov
and
dec
sbb
retf
lea
mov
lock
or
xchg
jle
imul
inc
sbb
cmp
adc
das
in
and
daa
(bad)
in
sar
jo
sbb
and
dec
add
or
xor
push
pop
ret
or
jge
test
pop
sub
pop
or
lmsw
xor
mov
imul
clc
or
push
sbb
push
ret
(bad)
push
jae
sub
dec
lock
push
and
jb
jb
mov
jo
jb
mov
retf
add
mov
out
int3
jl
jb
daa
fdiv
imul
and
imul
cmp
mov
or
cs
xchg
ss
pop
or
push
push
imul
sar
or
pop
ficom
test
push
xchg
xchg
data16
dec
jb
sldt
mov
ss
adc
(bad)
loopne
and
pop
fdivr
xor
adc
sbb
int
jmp
sbb
ror
xor
inc
rcr
in
mov
enter
jl
jne
cmp
lds
bound
test
and
xor
cmc
or
aad
push
inc
xor
sbb
rol
loope
xor
dec
dec
and
iret
mov
mov
bound
lea
out
lods
shl
add
ja
jne
xor
mov
add
pushf
and
inc
shr
test
fimul
cmps
gs
mov
xchg
movs
ror
adc
push
fwait
mov
sub
daa
xchg
retf
fcomp
loopne
mov
push
mov
aam
xor
leave
push
add
jno
in
les
fwait
cld
mov
sbb
ja
mov
nop
inc
push
out
sbb
cs
mov
rol
pop
and
enter
add
and
adc
inc
push
loope
call
push
call
cli
nop
scas
inc
or
pop
adc
jg
hlt
bound
test
add
fisubr
xchg
and
sahf
lock
push
push
in
xchg
pop
or
pop
rcl
leave
push
push
mov
mov
inc
adc
jp
jo
stos
cmps
pop
ss
cmpxchg
ins
xlat
enter
mov
push
add
push
push
sbb
or
lock
lock
pop
or
enterw
sbb
rcr
jg
ins
mov
sbb
ror
sbb
push
inc
mov
rcr
repnz
rol
fsub
dec
add
cmp
mov
call
push
adc
sub
add
dec
push
mov
pop
push
int
sub
(bad)
cmp
dec
jmp
inc
out
in
and
fild
adc
add
sbb
jmp
push
mov
outs
lea
stc
add
inc
inc
or
sub
movs
scas
adc
jge
cmp
es
daa
das
sbb
mov
leave
inc
add
fs
test
mov
out
sub
aam
jns
inc
cmp
xchg
adc
cmp
cmp
js
jbe
sar
push
sar
icebp
mov
pop
ss
xlat
dec
(bad)
adc
je
lock
loope
fcom
shl
and
(bad)
mov
jl
dec
fidivr
out
out
test
or
je
dec
rcr
loopne
nop
aas
and
inc
(bad)
and
je
dec
lock
jmp
and
push
sub
js
cmp
(bad)
add
xchg
call
or
pop
shl
loopne
movs
(bad)
jmp
xchg
(bad)
aam
push
sub
push
inc
or
test
bound
jge
mov
dec
sbb
pop
add
test
loop
icebp
or
push
dec
adc
pop
pop
mov
mov
icebp
dec
and
push
test
pop
cmp
pushf
xor
push
inc
jb
stos
pusha
ss
daa
adc
sub
out
retf
xchg
shl
or
jne
ret
add
mov
(bad)
mov
in
ficomp
jle
je
adc
in
test
adc
popf
mov
jg
int3
jp
test
inc
adc
dec
js
adc
dec
leave
xchg
adc
push
sbb
dec
pop
add
push
or
adc
sub
std
inc
je
inc
push
dec
sub
sbb
pop
int3
loopne
mov
and
test
cmp
dec
dec
loop
adc
aaa
sub
or
call
xor
leave
or
pop
mov
movs
add
pop
sbb
or
push
fcmovnb
inc
or
cmps
pop
ror
loopne
xor
mov
adc
add
dec
sub
ins
in
stos
add
es
pop
daa
jp
or
mov
jne
inc
shl
lock
div
loopne
stos
outs
xchg
js
movs
stos
pop
pop
and
rcl
push
xor
push
call
add
xor
bound
push
dec
add
or
adc
fdiv
add
inc
lea
pop
call
dec
or
clc
test
jge
pop
dec
pop
inc
ds
loop
rol
test
jmp
push
sahf
or
idiv
mov
cdq
ins
pop
and
mov
out
mov
mov
loopne
into
push
dec
loope
xor
mov
add
inc
xor
sub
mov
jmp
cmp
dec
jne
add
cmp
jb
pop
retf
mov
daa
dec
adc
cli
mov
mov
hlt
jns
jmp
and
jge
pop
ja
js
adc
add
push
fadd
aas
jmp
(bad)
add
push
cvttps2pi
nop
loope
jne
dec
xor
cmp
add
push
imul
lods
inc
es
mov
add
je
dec
cs
push
sar
push
push
or
jne
shl
aam
add
and
and
xchg
bound
inc
call
xchg
sub
sar
call
aam
adc
mov
jge
popa
pop
pushw
lds
dec
mov
sub
adc
push
dec
adc
mov
hlt
push
or
test
or
invd
add
xor
pop
push
movs
cmp
sub
repnz
fisub
punpcklbw
jns
sahf
inc
inc
sub
mov
push
ret
jecxz
add
inc
mov
(bad)
(bad)
jae
cmp
mov
test
arpl
adc
add
mov
adc
ret
out
cmp
mov
xchg
push
scas
or
out
inc
jmp
(bad)
loopne
jp
mov
push
out
and
loopne
xchg
xor
sub
add
or
mov
jge
js
xor
stos
pop
scas
xor
push
lock
pusha
inc
sub
pop
mov
mov
push
cmp
add
mov
loop
sub
dec
add
das
mov
cmp
mov
cmp
and
sbb
aam
xchg
sbb
jo
pop
add
cmp
nop
je
jl
sub
jl
imul
add
xchg
or
push
test
mov
or
push
imul
or
call
xchg
setp
(bad)
dec
lea
mov
adc
or
mov
(bad)
cmp
cld
or
(bad)
bnd
xor
stc
call
sub
adc
mov
sub
or
hlt
stc
or
retf
frstor
mov
mov
in
inc
adc
add
jmp
xchg
push
je
in
shl
mov
into
jmp
jmp
mov
sub
push
jmp
cmps
mov
inc
push
inc
sub
xchg
sub
and
sti
out
push
cmp
pushf
cmp
jle
cmp
push
xor
adc
les
push
aam
push
jnp
or
stos
jbe
sbb
sub
sbb
retfw
cmp
clc
fs
add
sbb
mov
jae
call
pop
push
adc
jnp
into
ror
out
cld
add
scas
xchg
jbe
movs
jne
in
push
mov
jmp
mov
sar
enter
in
mov
pushf
(bad)
push
xchg
and
dec
(bad)
xor
pop
push
ja
outs
js
mov
mov
sti
inc
or
or
pop
pop
pop
add
and
stos
mov
xor
jbe
popa
ins
xchg
sub
mov
retf
scas
call
mov
aaa
mov
es
mov
add
push
pop
cmp
ud0
sahf
test
or
pusha
pusha
and
shr
popa
pop
or
dec
mov
js
test
add
mov
push
mov
push
pop
rol
jg
adc
ins
call
sbb
or
mov
xor
test
ficom
into
dec
dec
mov
inc
or
imul
jne
and
pop
lock
bnd
adc
adc
aaa
dec
sbb
test
shl
jmp
mov
adc
fadd
mov
iret
ds
pusha
cmp
ja
sti
inc
int3
and
or
sub
xor
push
les
pop
rcr
inc
xchg
(bad)
lods
sar
jne
xor
pop
and
xchg
or
jb
push
or
(bad)
cmps
cmp
std
nop
jb
mov
xor
test
or
mov
pop
inc
cmp
push
into
das
sbb
js
add
call
pop
mov
or
dec
aad
lea
pop
push
mov
and
adc
(bad)
std
mov
enter
aas
ja
fwait
enter
aas
or
push
pop
inc
test
jge
enter
pop
dec
or
or
repnz
popf
or
and
mov
and
or
cmp
jne
cmp
mov
xchg
dec
popf
sbb
mov
cwde
(bad)
aam
add
xor
sbb
add
pop
pushf
jle
or
sub
mov
mov
xor
scas
retf
lock
or
movs
(bad)
or
ss
in
ins
mov
xor
mov
in
mov
cwde
and
mov
sbb
cmp
add
jmp
aam
gs
jmp
test
cs
jmp
retf
call
sub
adc
dec
sub
mov
neg
cmp
add
sbb
movs
js
mov
mov
loope
shl
fnstcw
shl
push
aam
add
xchg
stos
mov
or
dec
enter
outs
add
xor
call
(bad)
add
ficomp
adc
add
inc
lock
(bad)
ss
xchg
dec
mov
in
adc
or
fcmovu
pop
pop
jmp
(bad)
cmp
xor
sbb
pushf
(bad)
mov
iret
cmp
or
(bad)
sub
clc
push
retf
mov
shl
movs
clc
adc
jns
dec
or
or
jmp
leave
call
inc
sbb
dec
ins
jbe
retf
or
xor
mov
xchg
repz
movups
add
es
dec
test
inc
mov
(bad)
inc
inc
mov
ja
mov
arpl
cmp
mov
sbb
inc
add
cmc
cmp
repz
cmps
jb
loope
dec
or
xor
dec
inc
out
push
fnstenv
lea
adc
jge
rcr
pop
clc
mov
out
and
and
xchg
jle
ror
repz
rol
rcl
rcl
aad
repz
(bad)
xlat
fcomp
(bad)
loopne
push
rcr
jge
xchg
push
jnp
and
inc
add
xchg
rcr
rcl
add
xor
sub
cmp
cmp
xor
or
mov
push
add
push
add
mov
mov
or
fld
cmp
fbstp
retf
push
add
test
or
(bad)
fcomip
push
pusha
test
(bad)
es
cmp
cmp
das
or
sub
add
shr
div
cmovb
sub
ficom
add
push
push
or
or
imul
xor
mov
sbb
inc
or
pusha
ror
xchg
push
fdivr
add
loopne
(bad)
fild
cmp
out
loop
pop
or
scas
mov
stc
dec
sub
xchg
sub
push
dec
sub
add
out
jnp
sti
add
loopne
leave
stos
push
add
inc
fidivr
xchg
push
icebp
jb
mov
test
ss
or
in
xor
jns
rol
sub
retf
and
xor
test
push
cwde
stos
sub
add
ins
pop
xor
mov
cmp
lock
or
pop
rcl
and
addr16
(bad)
cld
add
cmp
sbb
and
mov
push
or
or
mov
xor
pushf
dec
inc
(bad)
and
xor
cwde
add
mov
mov
ret
loope
fisub
shl
jle
movs
sub
jle
lea
test
xor
jle
add
pusha
cmp
lods
cwde
add
in
movs
ror
nop
js
pop
mov
pop
out
nop
sub
test
in
pop
test
fsubrp
jns
mov
jg
inc
inc
mov
sbb
push
clc
jg
add
jmp
clc
adc
in
ror
dec
cli
jb
out
adc
sbb
adc
or
add
lock
outs
add
sar
jge
mov
test
push
or
mov
fucomi
scas
rcr
mov
adc
mov
movs
add
iret
repnz
dec
lock
lock
retf
jae
div
cli
cli
stos
push
mov
repnz
or
jmp
adc
shl
xchg
loop
or
push
out
into
mov
sbb
jmp
fs
xor
ins
add
stos
loopne
shl
jecxz
jmp
inc
inc
pop
aas
mov
push
add
inc
jne
mov
sbb
repz
ror
ror
inc
cmp
test
sbb
pop
cmps
xchg
xor
jmp
cmp
stc
rcl
push
sub
inc
pop
sahf
fwait
dec
jmp
jecxz
shr
shl
cs
push
mov
lods
push
shl
push
mov
mov
mov
mov
cmp
cmps
fcmove
(bad)
sub
pop
mov
xchg
mov
mov
mov
jle
repnz
pop
fisttp
fidivr
dec
arpl
pop
mov
pop
or
jge
mov
neg
dec
sub
icebp
pop
add
lahf
test
push
ret
fwait
in
or
dec
(bad)
cmp
cs
sbb
xor
mov
mov
jne
xchg
adc
dec
sbb
jo
inc
mov
mov
bound
outs
addr16
daa
lock
ss
dec
shl
inc
inc
inc
inc
inc
stc
sbb
xor
mov
loopne
xchg
test
and
inc
inc
jae
jg
mov
xor
mov
xchg
daa
jno
lods
push
and
xchg
pop
mov
lahf
cmovne
in
inc
add
xchg
inc
shl
fs
clc
add
push
pop
xor
test
fdivr
aam
out
(bad)
fisubr
xchg
adc
enter
or
call
lods
mov
ss
inc
addr16
neg
and
lods
jle
inc
ins
push
loopne
fcom
call
or
imul
adc
xchg
retf
lea
xor
je
ret
(bad)
mov
(bad)
neg
xlat
into
in
xchg
loopne
add
or
or
ds
and
or
(bad)
pusha
xor
sub
adc
shr
or
ror
mul
add
push
push
adc
fwait
lock
lock
inc
jge
pop
ret
rcl
cmp
out
shl
push
sbb
xor
mov
aas
pop
les
jno
ja
add
push
or
into
or
shl
stos
aas
and
dec
mov
dec
sub
inc
lock
jge
out
inc
cmp
xchg
jne
pop
inc
add
dec
cmp
or
je
add
push
inc
sub
and
sub
pop
add
test
sbb
adc
push
test
push
jno
mov
inc
mov
dec
and
add
push
add
inc
test
push
or
cwde
add
xchg
cmps
ror
add
add
add
sub
add
adc
out
and
push
mov
mov
sbb
mov
psrad
add
pop
(bad)
mov
imul
jne
inc
or
les
int
dec
lods
cmp
je
adc
sbb
xchg
sbb
mov
sbb
fwait
push
mov
xor
adc
or
jae
push
ficomp
ret
mov
(bad)
mov
mov
or
pop
cmp
xor
into
pusha
loopne
mov
imul
pop
pop
pop
adc
mov
nop
cvtpi2ps
push
ret
or
pop
sbb
int3
mov
js
sub
pop
mov
imul
or
or
jo
dec
push
add
add
ins
leave
gs
rcr
sbb
inc
and
mov
sahf
cmps
or
or
jne
jmp
aad
or
outs
add
jmp
mov
sbb
jo
mov
mov
sub
push
and
and
ins
adc
and
cld
jo
ret
inc
sbb
pop
fadd
or
shl
xchg
cmp
pop
pop
xchg
adc
leave
add
dec
xchg
jae
add
dec
scas
jnp
or
adc
and
pop
push
mov
adc
push
jb
add
xor
(bad)
adc
adc
add
jns
jns
sbb
or
add
sahf
retf
or
adc
popa
in
push
enter
mov
cli
je
push
inc
add
jo
int
push
dec
sbb
push
xchg
xchg
into
into
mov
sbb
mov
push
lock
outs
lock
mov
pop
push
ret
ins
popa
call
jl
or
dec
ret
push
lahf
xchg
inc
int3
or
in
jle
mov
pop
xchg
sub
xor
push
ss
inc
pop
jg
(bad)
test
retf
xchg
or
retf
daa
pop
cwde
and
(bad)
adc
(bad)
jg
pushf
pushf
or
retf
jb
enter
shl
ror
test
add
or
arpl
pop
inc
movs
sahf
gs
push
cmps
addr16
nop
push
ins
pop
pop
lods
test
and
out
mov
aam
aam
scas
push
sub
adc
ret
ins
rcl
sub
sbb
and
outs
dec
and
aad
gs
outs
push
or
pop
adc
and
out
pop
call
cwde
mov
out
inc
daa
mov
and
xchg
adc
mov
or
shl
adc
cli
or
inc
mov
adc
ins
and
je
retf
xor
sub
retf
inc
xor
icebp
inc
jmp
lock
js
push
and
mov
rol
push
aam
xchg
xor
cmp
mov
xchg
add
pushf
pusha
jns
push
push
jno
out
xor
pushf
scas
jl
jg
movs
jb
add
add
cmp
dec
mov
fucomip
pop
ss
sti
js
jg
test
ja
mov
cmps
add
lea
pop
or
fimul
adc
and
add
rcl
hlt
jmp
cmp
jg
jl
and
push
stos
jg
pop
xchg
pop
pop
xor
cmp
dec
cdq
pop
push
jae
jne
mov
out
push
jbe
add
cmp
jne
(bad)
call
lea
cmp
ss
test
daa
cwde
push
pop
cmp
call
add
inc
jnp
adc
or
inc
lods
or
push
xchg
imul
dec
rcl
mov
add
pop
fcmovnb
fucomip
shr
cmp
inc
les
jp
out
call
jno
in
push
add
sub
jmp
push
cs
push
push
test
lock
push
or
loop
mov
fimul
repnz
imul
je
mov
mov
outs
push
mov
mov
cmp
or
push
inc
inc
push
add
dec
push
and
xchg
(bad)
mov
add
and
repnz
dec
add
or
dec
sub
xor
neg
mov
sbb
mov
js
inc
and
in
adc
test
les
add
adc
or
add
push
lock
outs
mov
cmp
jno
or
test
shr
in
jne
inc
ret
xchg
push
push
add
out
jb
push
xor
cmp
mov
inc
jge
mov
cli
and
add
dec
pop
lea
jecxz
inc
jae
push
adc
cmp
add
ret
sub
pop
pop
dec
adc
add
pop
(bad)
inc
in
sub
mov
jmp
or
ins
dec
inc
(bad)
rcl
jo
xchg
inc
outs
mov
loop
ret
je
mov
or
(bad)
call
xchg
ss
jmp
sbb
xor
ret
pop
add
fcom
jb
push
clc
adc
jo
jmp
dec
imul
cmp
push
dec
mov
jmp
push
leave
push
inc
mov
sub
push
data16
ins
jg
seto
clc
jb
dec
push
cmovo
call
mov
sbb
movsx
sbb
out
add
arpl
in
add
test
inc
(bad)
data16
mov
jl
jo
mov
fcmovb
and
jne
es
sub
ss
pop
rol
add
enter
mov
not
jg
nop
loope
pusha
call
mov
inc
inc
das
push
or
sbb
aam
jbe
mov
fild
jne
(bad)
test
jl
loop
and
add
lods
xor
or
test
push
fucom
or
mov
inc
inc
inc
inc
fsubr
or
sub
aaa
mov
or
stos
add
inc
aaa
test
jae
inc
gs
mov
xchg
and
fsub
scas
mov
popf
sar
(bad)
lods
(bad)
cmps
sub
jmp
pop
pop
push
sbb
mov
inc
int
sbb
sbb
push
push
sub
pusha
add
enter
add
push
or
adc
push
dec
mov
inc
pop
pop
cmp
loop
jmp
push
and
jne
xor
push
dec
and
push
mov
adc
cwde
adc
enterw
pop
add
push
jno
cmp
sbb
sbb
sbb
mov
sub
or
shr
or
inc
dec
mov
sub
mov
and
lock
mov
sar
(bad)
push
cmp
xor
es
cs
push
loop
or
push
mov
and
loop
es
rol
sub
call
xor
and
aam
xor
inc
and
fs
adc
sub
sub
push
arpl
mov
xor
xor
mov
mov
inc
sbb
lea
inc
cmp
and
scas
add
mov
pop
sub
xchg
xor
mov
shl
fist
push
sbb
daa
sub
adc
jmp
dec
push
sub
popa
mov
add
fs
fidiv
add
xor
inc
dec
mov
add
sub
bound
shr
lock
loope
cmp
or
push
call
push
sbb
sub
xor
dec
jmp
pop
dec
xchg
daa
neg
pop
add
dec
mov
sub
push
mov
mov
mov
or
(bad)
mov
cmc
movs
xchg
cmp
inc
aad
sbb
addr16
pop
imul
sbb
jno
enter
push
sbb
inc
ss
shl
stos
sbb
jne
lahf
adc
push
mov
xchg
jne
pop
in
in
lods
imul
or
add
push
fst
clc
test
cmp
mov
jmp
xchg
cmp
mov
aaa
cmp
add
aaa
dec
pop
scas
mov
in
std
pusha
cmp
xor
ret
ret
add
andnps
clc
inc
pop
pushf
or
add
dec
pop
jbe
call
push
adc
xor
mov
pop
inc
in
adc
retf
rol
mov
retf
inc
mov
lea
jmp
(bad)
mov
mov
mov
sbb
sbb
xchg
push
pop
outs
push
cmpps
mov
shl
jno
call
dec
cwde
cmp
mov
push
adc
or
push
lds
mov
adc
sub
sub
add
cli
push
fldz
push
mov
mov
jp
aaa
loopne
movs
test
add
adc
jp
jo
(bad)
push
push
aaa
inc
add
dec
sbb
push
dec
or
aaa
aad
shr
and
rol
push
or
mov
and
mov
cmp
inc
adc
jmp
je
into
pop
sbb
add
pop
inc
or
push
lea
push
jp
rcr
in
xchg
push
push
rsqrtps
call
scas
or
call
cmps
shl
mov
xchg
lock
add
or
adc
out
gs
out
call
push
adc
jmp
sbb
and
mov
pusha
mov
push
push
shr
push
xchg
ret
test
outs
jmp
sub
pop
jp
adc
(bad)
sbb
or
adc
rcl
mov
or
bound
dec
imul
sti
mov
dec
add
and
test
and
movs
or
add
or
iret
and
push
and
mov
js
adc
or
add
and
shr
add
add
xor
nop
out
gs
add
fisttp
lea
or
test
adc
or
add
sub
int3
xor
daa
push
shr
mov
aam
aad
and
add
adc
lock
and
mov
out
dec
fisub
jl
and
jecxz
jge
outs
sbb
xchg
jmp
sbb
adc
push
or
push
add
loopne
xor
sub
pop
mov
hlt
fild
cmc
and
data16
and
pop
adc
pusha
push
pusha
pusha
loope
pop
sub
dec
sub
sbb
inc
jecxz
pop
fnsave
mov
fnstsw
pusha
pusha
(bad)
dec
sbb
push
pop
or
aas
cmc
ret
inc
test
es
adc
push
sahf
retf
add
add
test
or
jge
(bad)
loopne
cmc
or
add
jp
das
add
lock
or
add
dec
jne
mov
mov
jno
xor
stos
and
dec
fsubr
cmp
and
and
xor
imul
push
and
add
adc
std
fwait
les
inc
push
fstp
jmp
fisttp
test
jns
sbb
inc
jb
add
adc
dec
pop
inc
sub
sbb
add
adc
cwde
rcpps
icebp
mov
(bad)
pop
sub
jmp
popa
stos
inc
xchg
sub
shl
push
inc
cmp
cdq
add
or
cmp
aaa
mov
scas
sbb
sbb
sbb
imul
fimul
sub
sub
and
pop
jbe
xor
jp
push
shr
jae
mov
lods
dec
repz
inc
(bad)
test
int
repnz
sbb
icebp
in
add
ret
fcomp
xlat
or
or
jnp
pop
push
sbb
push
or
pushf
adc
xchg
jnp
ficom
or
fmul
mov
inc
lock
shl
cmp
fadd
adc
(bad)
dec
push
popa
loope
enter
push
enter
adc
sbb
mov
das
stos
lock
int3
ss
mov
push
imul
pop
pop
sub
sbb
gs
std
mov
loop
inc
sbb
and
je
push
inc
push
jae
fcomp
add
mov
sub
push
jg
inc
inc
clc
sub
fstsw
movsx
adc
fnclex
pop
pushf
fstcw
add
ds
mov
rol
mov
inc
ficomp
sar
in
ss
fldcw
dec
sbb
outs
adc
inc
dec
add
lock
sub
sbb
push
cmps
xchg
fist
jbe
mul
fstp
sbb
xchg
loope
xchg
mov
scas
mov
fcomp
cli
fldpi
xor
lahf
xchg
or
push
pop
pop
push
je
out
inc
xor
fidiv
enter
add
xor
imul
xchg
jo
and
sub
bound
or
out
ret
mov
add
fmul
mov
push
xchg
lock
ins
xchg
aad
jo
xchg
cs
js
lock
das
mov
xor
pop
lds
fild
xor
push
addr16
inc
mov
arpl
test
inc
in
test
pop
clc
test
scas
movs
inc
add
jmp
pop
lea
lea
or
cwde
test
leave
or
rol
lock
push
and
add
in
bound
cmp
lods
sahf
or
int3
push
data16
in
sbb
cmp
add
inc
test
push
je
inc
pop
int3
cld
push
inc
sub
fstp
and
cwde
and
inc
inc
add
fld
lea
mov
shl
pop
in
cmp
mov
gs
jbe
fimul
lahf
xor
icebp
sub
popf
in
push
inc
sub
add
out
test
or
push
jbe
pop
jmp
imul
jmp
imul
mov
rol
or
add
mov
jo
pushf
lods
and
xor
and
aad
wrmsr
xchg
sub
or
daa
sbb
dec
xchg
xor
or
test
fsub
je
data16
adc
in
fst
call
lock
je
loop
mov
mov
mov
or
es
mov
je
jg
add
jb
jl
out
push
cmp
ja
cmc
iret
sti
add
out
(bad)
adc
(bad)
cmp
jne
cmp
add
shl
leave
adc
mov
jecxz
push
lock
and
adc
jae
(bad)
add
adc
push
es
pusha
lock
sbb
xor
xor
or
fdivp
hlt
lock
jl
mov
loop
dec
xor
or
push
es
popf
pop
push
movs
data16
jnp
inc
xchg
push
cli
push
cmp
jne
psubsb
cld
and
inc
cmp
int
mov
(bad)
(bad)
rol
hlt
movs
cmp
add
and
mov
mov
and
jne
push
test
xchg
xor
inc
aas
push
sub
jb
sub
inc
icebp
mov
lock
pop
xchg
mov
aad
das
add
jne
in
jp
inc
movs
cdq
cld
and
(bad)
push
sahf
fisub
outs
movs
dec
jnp
(bad)
or
bound
push
lahf
adc
in
mov
pop
fadd
xchg
fwait
xchg
lock
mov
rcl
xor
inc
leave
in
and
ja
xchg
sbb
das
cmp
ret
or
push
jbe
dec
push
or
push
mov
mov
xor
or
inc
adc
pop
or
xor
neg
sub
and
adc
sub
cmp
cmps
inc
or
sahf
(bad)
mov
cs
out
cmp
nop
inc
xchg
loope
(bad)
scas
mov
xchg
movs
enter
xor
add
mov
in
dec
shl
mov
mov
or
loop
loopne
loopne
push
pop
jb
mov
iret
lock
jo
or
and
adc
loop
xor
outs
daa
pop
repz
scas
pop
fwait
pop
xor
pop
daa
xchg
stc
jo
jo
adc
lds
mov
lods
in
xor
das
sub
jbe
in
nop
xor
jecxz
or
test
jno
sbb
or
aas
pop
pop
adc
xchg
imul
ins
mov
test
scas
jae
popa
aam
pop
jne
mov
mov
loopne
pop
and
cvtdq2ps
vmovsldup
dec
enter
les
mov
in
ds
mov
inc
je
lea
fmul
push
das
in
rol
mov
inc
pop
jnp
mov
mov
pop
out
dec
(bad)
ins
(bad)
fs
pop
aas
sbb
leave
push
imul
aaa
mov
xor
bound
add
xor
adc
push
sar
pop
adc
(bad)
gs
dec
xor
adc
jb
cs
xor
mov
and
popa
fwait
ins
jmp
pusha
das
sub
mov
pop
je
dec
add
xor
(bad)
out
cmps
xchg
pushf
lock
inc
gs
xor
div
inc
xchg
retf
dec
sub
add
test
cmp
int3
ror
sbb
cmp
mov
inc
xchg
sub
ds
mov
out
xlat
lds
cmp
das
add
sub
push
pop
lahf
cwde
push
xor
pop
pop
cmp
jecxz
dec
cmp
jns
and
mov
cmp
add
add
and
dec
add
add
or
out
and
in
popf
mov
add
xchg
sub
shl
pop
mov
icebp
test
(bad)
sbb
das
cmps
push
movs
test
xor
dec
jo
test
cdq
inc
cmps
fsub
push
and
test
xor
adc
jnp
jb
cmp
mov
test
add
in
lds
stos
call
fsubr
pop
enter
in
test
inc
jb
mov
or
in
stos
pusha
or
xor
in
in
adc
jne
bound
gs
ror
aam
jne
pop
push
push
fcom
and
inc
shl
in
aas
nop
or
xchg
cwde
xor
dec
mov
enter
inc
es
rol
les
inc
inc
or
shl
xchg
push
loopne
inc
inc
jo
jo
rol
jecxz
mov
xchg
nop
inc
lahf
cmp
test
in
in
or
loopne
or
mov
test
push
leave
test
test
push
leave
fsub
push
and
dec
cmps
dec
mov
or
inc
and
test
cmp
push
leave
mov
pop
mov
sbb
rcr
leave
xlat
lods
push
or
jnp
cld
push
das
inc
mov
cmps
push
and
push
and
mov
in
adc
std
imul
sub
test
test
sbb
push
sbb
pop
add
cdq
mov
rol
push
xor
movs
movs
rcl
fdivr
or
adc
or
push
add
int3
pop
cmp
pop
mov
call
xchg
in
cmp
or
push
jbe
add
test
dec
inc
xchg
pop
and
sbb
nop
imul
inc
dec
push
fwait
lock
pop
push
push
xchg
jne
push
xchg
nop
pop
fimul
adc
sub
stc
inc
rol
es
(bad)
call
in
mov
inc
dec
pop
xchg
in
sub
(bad)
adc
mov
dec
or
call
ss
lock
xchg
cmp
test
enter
adc
sub
jo
sub
mov
fst
add
pop
sub
or
scas
ret
jge
imul
pushf
sub
pop
in
nop
pop
leave
add
sub
fcomp
and
pop
xor
enter
lea
mov
xchg
outs
jb
lods
in
dec
mov
cmps
dec
dec
cmp
sbb
mov
adc
loopne
dec
mov
lods
pop
icebp
mov
jb
rol
pushf
adc
cmp
loopne
nop
add
movs
ins
xchg
adc
jecxz
fidiv
cmp
das
jno
cmovae
lods
mov
mov
xchg
popa
sub
cwde
inc
jg
std
(bad)
cwde
test
test
push
mov
aas
push
(bad)
loopne
fsubr
aam
pop
ds
sub
lock
or
das
das
in
mov
dec
pop
je
stos
push
cmp
push
arpl
fmul
cmp
ror
popa
pusha
dec
icebp
lods
dec
mov
push
gs
and
adc
bound
cmp
(bad)
or
enter
push
cmp
in
add
sub
xor
(bad)
pushf
addr16
dec
xor
mov
adc
adc
fcmovbe
xlat
in
adc
dec
xor
add
and
cdq
in
or
in
in
in
fs
dec
es
in
in
nop
fiadd
pmulhuw
cmp
mov
and
push
inc
test
lock
inc
inc
sbb
cmp
xor
scas
test
or
mov
mov
jae
cwde
mov
cs
mov
(bad)
pop
sbb
adc
pop
enter
pop
push
leave
mov
jg
adc
test
aam
inc
ins
paddusw
or
pop
fcmovb
ins
push
jns
pop
inc
ret
cs
in
popf
fmul
pinsrw
pop
inc
outs
daa
sub
add
jnp
ret
scas
cmp
xor
sbb
add
inc
test
lea
ss
sub
retf
or
call
pop
xor
jl
popa
(bad)
rcr
(bad)
pushf
rol
fs
in
push
test
(bad)
cmc
aas
or
or
jne
xchg
lods
imul
jb
cmp
loop
in
das
(bad)
outs
jmp
aas
dec
in
shl
cmp
repz
xchg
dec
outs
push
xchg
call
jmp
add
sbb
sub
dec
jnp
sub
outs
test
ja
cwde
jbe
xor
lea
cmp
add
mov
cmp
popf
adc
mov
push
push
adc
movs
pop
mov
push
and
cmp
sub
jns
in
call
in
les
push
add
jno
cmp
xchg
pop
in
jno
add
push
inc
test
jnp
jno
dec
aaa
add
retf
xchg
jbe
jge
push
icebp
push
leave
leave
leave
dec
sub
sbb
retf
leave
leave
sbb
popf
dec
mov
or
pavgb
leave
leave
leave
(bad)
aam
movs
pop
adc
int3
std
jne
inc
mov
push
cmp
push
dec
mov
in
and
popa
ja
movs
push
pop
ror
pop
adc
movups
inc
je
adc
fmul
xchg
and
nop
xor
cmp
dec
fcomp
push
inc
xchg
test
mov
popa
lea
lea
jnp
cmp
(bad)
in
cmp
jge
jne
das
in
jno
push
mov
leave
in
in
mov
sbb
mov
xchg
cli
cli
fsubrp
das
push
dec
das
xchg
repz
fcmovnb
push
mov
test
call
aam
test
rol
or
and
movs
mov
int3
imul
dec
shr
push
sub
shl
mov
scas
push
in
add
in
shl
add
cwde
sbb
and
jo
inc
test
imul
mul
imul
(bad)
lahf
mov
mov
cmp
xchg
pop
adc
bnd
loopne
rcl
jb
inc
rcl
test
pop
push
and
jbe
in
sub
and
pop
adc
jno
mov
or
repz
rol
movs
arpl
xchg
pop
call
sub
pop
add
aaa
mov
mov
inc
(bad)
mov
call
pop
fsubr
fdivr
xchg
mov
mov
mov
test
in
test
jae
inc
arpl
adc
adc
jle
lds
push
xor
inc
in
jg
mov
shl
pop
push
xchg
ss
lods
in
ret
loopne
add
dec
push
std
lahf
jbe
popa
mov
arpl
jmp
clc
lock
mov
sub
or
cli
in
aam
mov
getsec
pop
fs
sub
fdiv
lds
mov
lock
aad
add
lods
mov
pop
lahf
int3
test
inc
repnz
and
push
fild
mul
dec
mov
lock
sub
mov
sbb
fdivr
xchg
pop
lds
loope
adc
call
nop
in
jge
test
call
test
cmp
imul
js
xchg
pop
add
push
cmp
pop
jns
cmps
jbe
xchg
inc
add
nop
sub
ror
pop
mov
je
fs
xchg
mov
sub
stos
inc
jno
sub
xchg
in
mov
addr16
mov
addr16
mov
aam
fwait
xchg
jne
les
int
or
push
in
and
fisub
inc
pop
les
in
lahf
bound
or
lods
dec
mov
sub
stos
aas
mov
test
test
jg
mov
sub
(bad)
sub
mov
adc
or
pop
je
mov
mov
pushf
dec
fdiv
adc
or
mov
enter
add
mov
sub
and
int3
mov
fist
pop
xor
fisubr
dec
xor
inc
adc
cmp
push
xchg
in
pop
arpl
adc
or
push
or
(bad)
cmp
dec
mov
mov
call
lods
mov
adc
cwde
rcr
or
ja
adc
rcl
inc
rcl
fsubr
push
xor
adc
xor
pop
dec
(bad)
test
jb
popa
mov
(bad)
sbb
add
call
inc
out
mov
test
or
xor
jg
jbe
imul
fidivr
mov
mov
fsubr
mov
pop
mov
sub
jp
jns
aad
mov
int3
add
test
dec
outs
inc
or
test
mov
shr
ins
add
das
gs
leave
cmp
jo
movs
add
jns
xchg
pop
enter
pop
xchg
inc
test
test
xor
mov
jecxz
dec
push
shr
sbb
cmp
arpl
push
in
cmp
jmp
xlat
adc
outs
jne
xlat
mov
movs
add
add
cmp
retf
mov
xchg
les
cmp
enter
push
aam
syscall
mov
fdivr
and
or
xchg
daa
mov
enter
and
xchg
push
and
xchg
jno
loop
cmp
sbb
jbe
mov
in
es
adc
ret
mov
push
dec
dec
dec
outs
ja
sbb
adc
xchg
fbld
inc
ins
jno
jmp
sub
push
mov
or
in
fs
nop
push
jb
in
adc
or
stos
and
or
xor
push
sbb
adc
mov
inc
xchg
inc
in
dec
cmc
jb
inc
scas
fsub
cdq
fsub
pop
cmp
bound
popa
lods
xor
rcl
test
mov
les
mov
mov
mov
shl
or
mov
push
jns
fwait
call
aas
xor
jmp
(bad)
outs
add
inc
or
daa
bound
adc
test
pushf
mov
out
pandn
add
enter
inc
cmp
push
stos
pop
lea
push
pop
xor
cmp
int3
stos
mov
paddusb
fwait
(bad)
pusha
ins
ins
dec
pop
jg
dec
xor
xor
lock
test
adc
les
lahf
xor
leave
fsubr
xor
loopne
xchg
mov
jno
call
sub
sub
mov
pop
add
dec
leave
mov
mov
daa
fs
into
xchg
mov
clc
(bad)
retf
les
xor
cmps
nop
sub
xor
test
test
lahf
and
or
and
inc
scas
add
xor
xor
push
in
dec
sbb
or
adc
or
fwait
sbb
dec
jge
movs
(bad)
push
fisubr
push
jmp
pop
xor
test
jae
ins
inc
enter
cmps
mov
cmps
cdq
adc
clc
add
call
and
mov
hlt
mov
arpl
add
fdiv
imul
call
movaps
test
pushf
jecxz
pop
xchg
stc
shr
dec
bound
xacquire
mov
push
mov
mov
jmp
mov
cmp
xchg
stos
addr16
stos
pop
enter
mov
les
mov
mov
pushf
push
stos
mov
xchg
xor
push
ret
jge
in
push
adc
ror
or
fmul
bound
mov
pop
int3
mov
loope
pop
js
nop
or
or
inc
lods
cmc
pop
fcom
pop
shr
fcmovb
mov
sub
fcmovbe
stc
lock
shl
push
cmps
nop
scas
add
in
dec
mov
sbb
add
jmp
sti
nop
add
dec
add
xchg
arpl
jne
mov
inc
ret
cmp
popa
mov
push
mov
bound
gs
xor
(bad)
mov
gs
bound
rcl
mov
int3
or
add
test
jne
mov
das
mov
mov
popf
pushf
aas
and
push
pop
mov
movs
nop
xchg
xchg
dec
mov
mov
mov
lods
jg
sbb
movs
ins
sbb
je
call
cwde
jno
mov
mov
cmps
push
jbe
and
cmps
push
popa
call
in
pop
ss
pop
fcom
imul
ret
aam
aam
gs
aam
mov
nop
fldcw
aam
mov
sub
mov
(bad)
mov
and
mov
int3
xchg
or
cmp
push
and
ins
jns
loopne
pop
es
rcr
push
cmp
mov
inc
cmp
adc
jae
and
dec
repnz
or
pop
outs
shr
inc
xor
rol
xchg
pop
sub
push
or
mov
fild
sub
pop
jns
adc
lods
gs
or
pop
sbb
iret
mov
add
jae
bound
cmp
arpl
xchg
in
adc
sbb
or
dec
push
sbb
lods
or
cmp
cwde
xchg
sbb
pop
rcr
mov
xchg
pop
in
test
mov
lods
pop
adc
and
clc
mov
pop
mov
fidivr
add
mov
in
cdq
lock
jp
lods
or
js
inc
adc
dec
sub
shr
cmp
jne
inc
in
mov
xchg
in
mov
mov
arpl
pop
stos
or
pusha
test
in
mov
int
movs
sbb
(bad)
pop
mov
lahf
mov
xchg
push
lods
cmp
mov
loope
jbe
cmovl
cmp
xchg
sbb
and
lock
xor
mov
push
xchg
mov
xchg
pop
cmp
enter
cmp
push
push
aas
xchg
out
test
inc
pop
push
int
pop
jl
and
in
jmp
nop
xchg
mov
out
das
sub
add
mov
imul
jb
sub
add
fild
xchg
setae
test
xor
dec
(bad)
push
xchg
mov
cmp
ja
inc
jae
mov
push
sub
out
jp
pop
pop
cmp
sbb
jb
inc
mov
fsubr
dec
push
fs
lods
leave
cmp
pop
(bad)
outs
pop
sbb
das
xor
mov
inc
call
cs
push
cs
std
(bad)
xor
cmp
in
dec
dec
adc
dec
(bad)
pop
mov
jecxz
lock
inc
push
add
mov
mov
cmps
xor
cmp
xchg
and
push
push
xchg
add
hlt
jmp
js
call
mov
shl
adc
pusha
js
push
pop
(bad)
aaa
dec
shl
inc
pop
loopne
lds
jb
pop
xor
das
rol
inc
loopne
mov
in
jb
lods
push
push
lods
ins
sbb
add
jnp
ret
inc
mov
or
mov
push
ins
leave
jae
loopne
in
test
add
test
cmp
inc
mov
sbb
fdivr
pushf
sbb
cwde
aam
fs
dec
loopne
lods
add
and
pop
or
lea
inc
icebp
mov
fcom
iret
lods
pop
mov
fbstp
push
sub
add
test
(bad)
pop
sub
fdivr
rol
sti
xchg
push
inc
int3
or
sbb
inc
enter
and
nop
imul
(bad)
jne
jnp
je
pop
test
pop
bnd
fsubr
(bad)
sar
das
ror
mov
xchg
push
scas
ret
rcr
push
popf
outs
pushf
jne
imul
(bad)
or
sub
(bad)
mov
mul
inc
adc
jb
aam
fcomp
mov
jmp
sub
push
mov
les
inc
test
sub
or
test
pop
retf
add
dec
test
and
sbb
mov
pop
imul
mov
aas
mov
loop
test
in
adc
ficom
pop
das
jb
or
sub
les
jg
and
adc
sub
sub
push
or
cmp
xchg
push
lds
fstp
mov
lds
invd
mov
imul
adc
fmul
lds
add
mov
sbb
mov
mov
into
push
daa
jo
xchg
ror
into
enter
mov
xor
push
cmp
xchg
adc
inc
shl
push
dec
dec
pop
shl
sbb
mov
out
adc
push
test
dec
mov
test
leave
mov
sbb
xor
je
or
inc
dec
and
jl
shr
aam
shl
sub
imul
inc
cmps
nop
rcl
aam
mov
aam
inc
aad
cmps
fcom
pushf
xor
or
mov
xor
and
adc
and
shr
gs
fnstenv
loopne
cmps
(bad)
movs
sub
inc
xor
or
adc
and
mov
mov
mov
pop
sbb
fs
pop
cmp
in
cmp
movs
mov
push
fstp
add
sub
adc
imul
adc
js
and
adc
or
ins
or
inc
(bad)
fidivr
adc
xor
cmp
(bad)
xchg
mov
sbb
cmps
dec
frstor
push
ficomp
in
sbb
push
and
fild
add
push
daa
iret
jl
movs
sub
jl
add
sbb
(bad)
loopne
sub
mov
dec
cmps
xor
cmp
dec
loope
cmp
aam
in
xchg
stos
push
rol
dec
jecxz
inc
xchg
jecxz
xor
push
adc
stc
(bad)
stc
pop
arpl
mov
dec
fdiv
sbb
adc
test
movs
mov
movs
enter
xchg
mov
repnz
psubsb
rol
and
adc
xchg
xor
clc
push
out
cmp
fisttp
or
cmp
nop
lock
out
ss
cmp
enter
jl
cmp
stos
shr
test
jmp
jmp
mov
test
jmp
and
xor
js
inc
pop
xor
in
in
sbb
xor
nop
and
pop
lods
leave
xchg
add
cmp
out
or
lock
adc
jne
leave
scas
mov
icebp
pop
xor
stc
(bad)
in
jmp
cwde
dec
sub
push
and
xor
xchg
and
jo
xor
lea
xor
push
cmc
test
cdq
inc
mov
adc
or
pusha
test
cld
clc
bound
fs
xor
sbb
jo
aam
lods
sub
adc
stc
out
cli
push
cmp
sti
sub
sub
jge
pop
pop
bound
adc
pop
jb
test
ud2
push
and
jns
jl
mov
inc
or
cmp
fwait
sar
dec
das
test
ja
fcmovnbe
and
in
fcom
push
pop
aam
(bad)
aas
outs
xchg
mov
(bad)
das
lods
pop
mov
test
or
inc
and
dec
mov
add
sub
inc
xor
and
fsubr
enter
mov
and
cmovge
shl
inc
cmps
stos
bound
cmp
or
ja
cdq
inc
and
push
pushf
add
mov
lock
pop
imul
scas
mov
push
dec
mov
add
cmp
sbb
and
pop
inc
mov
xor
cdq
fcmovu
shr
hlt
cmp
or
add
or
sub
add
ret
and
dec
push
mov
in
adc
fadd
clc
push
stos
cmps
add
xor
test
xchg
ret
mov
xchg
xchg
adc
lea
dec
push
ret
fdivr
in
sub
outs
add
aam
jae
and
rcr
or
fcom
and
xchg
cmps
clc
and
das
ins
enter
mov
repnz
mov
popa
sbb
sbb
or
add
mov
es
and
rol
fdiv
setae
cmp
or
pop
xor
inc
test
or
test
ins
arpl
cwde
inc
std
adc
ins
and
add
shr
inc
loopne
leave
jno
sub
or
or
or
rol
xor
and
(bad)
mov
movs
mov
xor
test
mov
inc
push
in
and
add
push
add
repnz
lahf
xor
pop
sti
dec
add
jns
outs
dec
add
test
and
adc
jp
sahf
daa
jge
mov
pop
cmp
dec
jae
rcl
mov
adc
pop
cmp
adc
or
in
cmp
pop
cmps
adc
mov
cmc
out
jnp
repnz
inc
or
sbb
cmp
rcr
loopne
inc
pop
xchg
lods
adc
sub
add
inc
add
push
sbb
lods
gs
xchg
loop
int
inc
push
cwde
fmul
sub
dec
adc
mov
or
fcomp
fdivr
nop
dec
es
fadd
cmp
add
nop
fcomp
fadd
sub
or
test
scas
arpl
in
test
mov
ins
xchg
dec
inc
add
pop
mov
jae
pusha
or
inc
fcmovu
inc
lahf
loopne
das
imul
xchg
cmp
jo
nop
inc
fcom
icebp
arpl
mov
xchg
push
sbb
jecxz
xchg
pop
add
mov
add
fdivr
jecxz
call
fcmove
in
cwde
jbe
inc
aas
inc
push
in
ins
mov
dec
or
or
mov
sbb
or
inc
adc
aas
mov
gs
dec
or
sub
jmp
pop
mov
push
adc
xchg
cmp
add
aad
enter
lock
test
inc
in
sub
mov
adc
fcom
aam
push
test
test
fild
and
jge
xchg
mov
call
sub
inc
xchg
pop
pop
mov
sub
mov
dec
mov
das
or
or
(bad)
xlat
add
imul
mov
push
bound
movs
outs
pop
movs
cmp
pushf
jns
dec
ja
push
cwde
push
dec
or
pcmpgtb
or
loope
adc
leave
add
adc
add
inc
dec
adc
aad
mov
inc
adc
movs
sbb
or
loopne
arpl
pop
add
mov
loopne
ficom
jg
ficom
and
pop
push
bound
popa
and
and
imul
inc
test
paddusw
pop
pop
inc
and
inc
inc
out
loopne
and
mov
adc
in
adc
and
sbb
mov
mov
dec
call
pop
in
sub
sar
retf
cmc
nop
shr
sbb
sbb
jge
or
popf
adc
sub
aaa
mov
or
pop
pop
inc
cmp
jnp
ss
cmp
popa
mov
shl
(bad)
lea
outs
out
mov
mov
sbb
sbb
mov
mov
rcr
sbb
jns
xor
sbb
push
jmp
inc
jnp
sbb
or
xor
in
in
jmp
test
push
icebp
xchg
jns
ror
push
iret
test
push
sbb
cmc
dec
pop
adc
stos
inc
lfs
popf
pop
push
repnz
popa
(bad)
mov
mov
loopne
rcr
sub
in
dec
jb
aaa
dec
and
inc
ja
xchg
add
mov
inc
xchg
daa
mov
fnstsw
cmp
and
dec
or
jmp
mov
sbb
add
or
je
jno
and
rol
es
dec
and
nop
cmps
mov
or
std
jno
jbe
or
push
push
shl
inc
and
and
repnz
xor
push
push
daa
dec
mov
in
jnp
shl
out
add
test
pop
xor
das
pusha
mov
ret
mov
pop
xor
jmp
xor
movs
ret
(bad)
fcomp
xor
push
pop
xor
mov
enter
or
inc
rcl
and
pop
or
or
cdq
sbb
(bad)
sbb
push
add
sub
ins
aam
adc
repnz
inc
jp
add
es
xor
and
mov
or
pushf
and
iret
aam
daa
inc
pop
adc
push
sub
test
imul
xchg
xchg
pop
sub
add
cmp
sub
call
test
idiv
adc
jmp
sub
aad
loop
repnz
cmp
xor
xor
inc
and
mov
cmps
inc
sub
dec
out
pop
inc
jnp
push
test
mov
inc
retf
ins
fcmovb
mov
enter
sub
(bad)
mov
sub
test
jae
(bad)
in
das
sub
leave
mov
or
leave
lock
pop
mov
sti
lods
add
stos
sub
les
mov
mov
or
das
add
cmps
xor
sbb
ret
pop
aam
sbb
sbb
xchg
loop
dec
and
sub
nop
popa
inc
daa
popa
lods
stos
enter
and
or
pop
mov
or
pop
xchg
and
cmps
adc
add
test
dec
xchg
sbb
mov
mov
dec
addr16
xor
into
jg
xchg
mov
jne
movs
cs
fnsave
inc
sub
or
in
xchg
test
add
xor
or
inc
or
inc
push
inc
xor
push
xchg
sbb
in
cmp
pusha
sbb
dec
test
test
movs
add
add
sub
mov
jae
test
test
test
ficom
pop
xchg
test
sbb
and
rol
aaa
push
pushf
adc
lods
lds
add
cdq
sub
je
mov
pop
out
test
pop
ror
popf
add
dec
test
adc
inc
or
xchg
or
imul
sub
adc
pop
add
jne
pop
int3
or
add
mov
aaa
(bad)
fcom
cmc
or
mov
mov
adc
das
cmp
sub
adc
jmp
mov
popa
pop
int3
or
mov
pop
pop
push
xor
cmp
pop
mov
ins
adc
in
mov
push
lods
jmp
pop
dec
cmps
aam
cmc
loopne
daa
mov
fwait
outs
adc
ror
add
rol
pop
ror
mov
out
dec
xor
push
lds
and
ret
inc
repz
or
retf
or
shl
cmp
push
and
and
sbb
jg
and
lods
or
mov
inc
jmp
pop
adc
inc
js
call
fcom
movs
out
pop
popf
mov
sbb
or
jo
dec
adc
mov
arpl
and
sub
dec
sub
ins
sub
jmp
or
in
mov
mov
test
das
inc
bound
jns
mov
or
dec
xor
xor
cmps
jbe
shl
ret
mov
inc
pop
inc
jne
add
jmp
mov
daa
add
int3
inc
movs
push
pusha
mov
ret
or
and
ins
dec
push
mov
leave
movs
in
push
fcom
fisubr
adc
inc
fwait
adc
arpl
fisubr
jo
mov
xchg
pop
jno
or
nop
inc
mov
xor
test
scas
add
xchg
adc
lock
xchg
pop
add
popa
xchg
push
mov
cmc
jge
inc
pop
jne
sbb
sub
jmp
sub
pop
xchg
xchg
test
jnp
(bad)
loope
and
stos
add
xor
xchg
mov
gs
int3
mov
push
gs
retf
ror
repnz
aaa
enter
gs
add
mov
xor
or
dec
cmp
in
sub
mov
rcr
loope
push
jb
xchg
or
aam
add
inc
nop
dec
fmul
or
shl
adc
add
mov
mov
setae
rol
add
ret
popa
fisttp
test
xchg
xor
dec
lahf
push
loopne
mov
push
jnp
push
cmp
dec
aad
push
mov
adc
adc
ja
xchg
sub
jl
retf
adc
mov
adc
or
pop
push
jns
add
mov
call
sub
dec
test
loope
cdq
lea
add
sub
aas
fdivr
adc
xchg
in
push
adc
sti
add
test
scas
or
nop
outs
mov
mov
outs
in
or
clc
or
js
push
imul
sub
push
loopne
outs
pushf
dec
movs
sub
je
loope
mov
mov
out
jmp
fnstcw
xlat
jmp
mov
int
push
push
adc
mov
adc
add
shr
or
sahf
push
push
(bad)
dec
pusha
imul
out
or
and
fild
sub
adc
pushf
and
cmp
aas
shl
bound
scas
push
jmp
jg
pop
and
cmp
or
popa
je
outs
outs
sbb
fdivrp
in
imul
jb
inc
outs
fs
addr16
aas
or
outs
fs
gs
arpl
dec
and
lods
std
outs
inc
and
and
jbe
cmps
dec
ds
gs
outs
je
jae
fild
jae
sbb
mov
push
jb
and
sbb
jb
iret
(bad)
fld
addr16
jo
ins
imul
daa
jo
ins
(bad)
or
bound
imul
mov
popa
arpl
push
arpl
outs
enter
mov
mov
popa
ins
sti
aas
shr
xor
xor
xor
or
cmp
mov
push
add
sub
xchg
sbb
ins
cmp
outs
imul
add
sbb
inc
push
loope
ins
adc
iret
repz
mov
dec
push
mov
loope
into
lods
popf
inc
and
es
sub
arpl
cmp
mov
jae
dec
mov
ins
cmp
std
push
int3
lock
pop
es
pop
arpl
dec
xchg
dec
outs
inc
outs
mov
sti
inc
shr
and
push
addr16
imul
xor
pop
adc
mov
push
xchg
not
mov
ins
pop
mov
dec
jne
cmp
fistp
data16
jo
pop
inc
jns
ins
push
jnp
or
retf
mov
inc
cli
jb
xor
sub
xor
sub
xor
xchg
test
or
pusha
xchg
jo
dec
outs
push
ins
imul
cli
mov
jb
ins
sub
fadd
popa
stos
xchg
and
fild
data16
or
test
xacquire
sbb
fcmovnbe
dec
jae
imul
xlat
and
ins
mov
and
adc
xchg
and
daa
sbb
fild
lds
push
xor
rcl
inc
jae
mov
loop
adc
cmp
les
pop
mov
cmp
or
push
cmp
ret
mov
sahf
cmp
les
aam
les
jns
in
inc
inc
inc
ins
add
inc
mov
cmp
sub
dec
pop
mov
mov
ds
pusha
pop
pop
jno
jmp
pop
or
cmp
add
(bad)
shl
or
ins
push
sbb
jns
dec
add
jg
dec
pusha
or
inc
lods
(bad)
jno
or
sub
aaa
or
aam
add
and
push
mov
pusha
dec
iret
or
push
or
jnp
gs
lea
in
adc
sub
mov
jnp
gs
imul
pop
aas
mov
and
mov
sbb
add
movs
dec
dec
ins
aad
adc
in
pop
push
pushf
jecxz
call
(bad)
add
add
fs
sti
mov
jb
and
outs
add
outs
push
cmps
push
fs
mov
addr16
mov
jp
pop
imul
imul
and
test
sbb
cmp
push
mov
sbb
inc
imul
jb
adc
push
jb
imul
popa
stc
adc
lods
xchg
inc
push
popa
and
cwde
test
stos
add
cmp
es
outs
push
push
out
jo
arpl
bound
lock
arpl
imul
mov
xchg
jmp
xchg
and
mov
xchg
jl
es
sbb
cmp
or
imul
fbstp
jp
mov
mov
mov
sub
stos
dec
aas
pop
or
jle
xchg
imul
js
rcl
jo
je
stos
sub
pop
leave
add
pop
jae
or
jnp
mov
jnp
call
aad
stos
jno
mov
jmp
and
test
outs
out
je
and
or
inc
push
in
mov
dec
pop
pop
in
in
cmp
stos
mov
jae
xchg
arpl
pop
arpl
push
test
xor
mov
jae
es
push
push
sti
faddp
sub
fwait
jb
not
push
ins
jo
scas
je
neg
test
iret
sbb
outs
pusha
in
push
jp
ins
out
push
gs
scas
aaa
adc
stos
push
lods
jbe
je
jo
dec
mov
rol
add
push
pop
scas
and
retf
movs
rcpps
mov
ins
ficom
push
addr16
pop
fnsave
lds
cwde
adc
push
jo
sub
pop
js
sbb
sbb
and
mov
adc
push
bound
or
xor
jo
outs
adc
xchg
les
mov
loopne
je
in
movs
out
mov
jae
push
push
ins
add
fld
adc
sbb
push
and
popa
fisttp
mov
bound
mov
push
gs
ins
out
sub
jb
ins
sbb
jne
mov
sbb
jae
jb
add
retf
into
jbe
add
popaw
es
push
pusha
icebp
movs
ins
add
(bad)
cmc
(bad)
push
andpd
push
mov
in
pop
push
jmp
fs
sbb
pshufw
(bad)
(bad)
or
sahf
out
sahf
sub
popa
in
dec
repz
sub
cdq
je
inc
cmp
out
mov
dec
dec
mov
scas
pushf
push
retf
shl
mov
cmp
mov
repnz
xor
out
push
ins
ror
inc
fild
out
aad
mov
imul
in
jo
jo
jae
call
inc
sub
and
xor
and
push
rcl
(bad)
leave
fwait
add
xchg
mov
addr16
xlat
lods
push
sbb
push
ss
jmp
scas
imul
inc
inc
mov
imul
push
lea
jns
jmp
pop
je
cmps
inc
adc
push
ja
sub
cmp
cmp
adc
cs
mov
cmp
push
faddp
mov
stos
jg
ins
adc
(bad)
jae
ds
cmp
mov
add
push
dec
dec
cmps
pmaxub
jnp
xor
aaa
fisubr
stos
xor
push
cmp
ja
cdq
fiadd
xor
mov
mov
xor
pop
xor
xor
neg
jnp
jge
sub
xlat
out
idiv
cmps
cmp
pop
xor
xor
sub
fistp
push
inc
jecxz
and
jbe
and
stos
outs
add
in
pop
mov
je
outs
fs
and
push
sbb
pop
loope
sub
gs
jb
or
mov
pop
scas
add
das
dec
hlt
xor
popa
out
js
scas
or
imul
bound
daa
je
mov
out
popa
out
and
push
pop
fucomip
lods
jnp
adc
sub
add
push
and
mov
xor
shl
pop
in
inc
ret
pop
imul
rcl
sub
inc
js
mov
arpl
inc
adc
int3
adc
push
cmp
dec
xchg
add
jo
adc
or
sub
adc
aam
adc
(bad)
loopne
or
mov
dec
jb
ja
mov
outs
push
fild
mov
or
arpl
mov
and
cmp
push
addr16
push
mov
pop
inc
cwde
sbb
push
sbb
push
push
call
dec
aam
push
scas
pop
push
lods
push
test
lds
out
outs
mov
test
mov
mov
dec
scas
jbe
push
(bad)
(bad)
sub
nop
test
sub
mov
ret
pop
inc
xor
pop
fistp
fwait
loopne
dec
sub
mov
and
mov
adc
fwait
mov
mov
call
pusha
push
push
ss
fs
jb
rol
cmp
not
jb
inc
add
push
sub
iret
inc
sub
in
jnp
int3
ins
ror
and
jo
sbb
jne
outs
mov
sub
cmp
outs
jne
push
movs
or
fucomp
ds
sub
sub
jmp
cmp
pop
mov
add
sbb
sbb
xchg
ror
dec
imul
jo
push
fisubr
ja
push
push
jne
push
dec
sbb
and
add
scas
imul
sub
popa
cmp
repz
lods
mov
push
sub
inc
push
fist
jecxz
and
jns
mov
pop
sbb
push
pusha
xchg
sub
mov
push
out
mov
lock
iret
jne
inc
or
mov
and
mov
jae
add
jnp
push
cmovp
mov
mov
inc
shl
inc
push
mov
popa
mov
mov
or
jo
jg
mov
jae
mov
lds
int
dec
in
movs
or
popa
and
or
fbld
je
xchg
adc
imul
test
adc
(bad)
scas
or
outs
lea
jo
jb
cdq
sub
fsubr
push
xor
out
push
outs
lea
push
jo
cdq
scas
xchg
inc
mov
ret
push
lahf
push
or
xlat
or
mov
ins
imul
inc
popa
xor
jne
test
gs
push
pop
test
adc
add
pop
inc
xchg
push
out
push
popf
mov
pop
mov
inc
je
lods
mov
mov
sub
stc
inc
dec
gs
ins
cmp
imul
pusha
dec
out
and
xor
aaa
mov
add
in
mov
ror
mov
lock
inc
imul
inc
jno
push
outs
jb
popa
add
sti
aad
and
cmps
inc
jp
test
push
cmp
fs
mov
mov
inc
push
dec
mov
pusha
dec
or
fnstcw
or
push
inc
pop
ror
add
ins
xor
inc
fsub
fmul
push
xor
ror
push
inc
adc
jmp
mov
sbb
loop
data16
mov
xlat
pop
cmp
dec
mov
xlat
or
addr16
push
call
sub
inc
mov
add
imul
pusha
jne
mov
pushf
inc
stos
retf
push
cmp
pop
mov
into
icebp
push
and
pop
aas
lods
pusha
add
mov
outs
inc
xchg
mov
inc
add
ret
lea
dec
ins
xor
jl
adc
adc
dec
addr16
add
pop
mov
sbb
pop
fld
push
jbe
bound
or
mov
or
sahf
and
repz
push
adc
dec
sahf
loop
add
push
push
daa
pop
je
mov
mov
cmp
dec
outs
popa
fs
pop
mov
mov
mul
ins
or
fistp
inc
scas
inc
dec
add
mov
xchg
mov
dec
jo
push
bound
jo
aaa
inc
ret
xor
int3
push
popa
jg
push
add
ins
in
push
mov
and
push
loopne
jmp
and
fs
imul
mov
pop
sbb
mov
inc
pop
xchg
push
(bad)
push
sub
mov
sub
inc
pop
aad
inc
add
push
mov
xor
dec
push
jbe
ja
jo
jne
add
test
sbb
ins
fwait
sub
push
adc
fcom
popa
jns
shr
jg
ins
aad
(bad)
cmp
pusha
pop
pop
mov
in
fimul
lds
inc
mov
out
lds
mov
cdq
xchg
jne
in
inc
sbb
xor
pop
push
mov
add
xor
mov
push
mov
push
ret
loopne
mov
in
fiadd
sbb
arpl
push
mov
sub
pop
adc
fs
cdq
xor
and
pop
in
push
sahf
das
outs
pop
sub
cmp
xchg
dec
jae
jae
je
mov
(bad)
cld
dec
push
inc
push
push
dec
dec
dec
dec
dec
inc
dec
push
inc
pop
pusha
imul
lods
loopne
and
mov
xor
outs
arpl
fcomp
cmp
inc
push
jnp
lock
and
sub
dec
dec
inc
pop
add
inc
mov
and
mov
fisttp
mov
lods
jmp
and
mov
shr
and
and
push
push
xchg
outs
ret
and
das
push
ins
pop
jecxz
cmp
test
mov
xchg
inc
push
push
lods
test
cmps
mov
inc
add
out
mov
cmp
cmp
mov
push
push
inc
cmp
sub
outs
ss
cmp
cmp
add
inc
js
mov
xor
cmp
aaa
bound
xor
int
(bad)
repnz
mov
adc
xor
add
sub
sub
adc
xchg
cmps
mov
dec
push
mov
movs
inc
and
xor
(bad)
out
movs
mov
push
xchg
pop
mov
dec
or
out
sbb
bound
push
jo
imul
and
popf
imul
sar
xor
jns
mov
je
push
jae
and
inc
outs
mov
mov
stos
ret
sub
in
or
push
dec
je
ja
je
ins
add
fist
sbb
rcl
inc
out
jnp
fsubr
cmp
jne
cs
fisub
mov
bound
retf
lods
or
rol
cs
mov
mov
dec
call
push
call
sbb
rcr
mov
jae
stc
sub
sbb
arpl
and
jbe
xor
int
sbb
adc
fs
jb
addr16
inc
xor
cmc
arpl
gs
dec
xor
or
inc
sti
ds
inc
mov
push
sub
pop
retf
mov
inc
inc
sub
stos
test
sbb
dec
jo
lea
arpl
pop
aaa
or
jge
stos
jg
dec
ins
dec
xor
outs
mov
lods
(bad)
push
add
dec
sub
push
xor
mov
mov
scas
cdq
add
jbe
inc
sub
add
das
mov
dec
ret
ror
scas
aaa
jno
cmp
data16
and
mov
(bad)
(bad)
in
stc
or
cmps
pop
js
scas
mov
ror
out
out
out
sar
push
sbb
inc
pushf
out
lea
or
or
push
pop
cmp
cs
in
mov
jbe
push
(bad)
rol
or
mov
mov
fcom
mov
sbb
push
sbb
pop
leave
std
pop
or
sub
pop
and
pop
test
ss
fdiv
and
adc
push
stos
add
repnz
mov
std
pop
dec
add
inc
js
cmp
adc
or
add
and
jb
sbb
sbb
jne
inc
bound
shr
lock
jns
push
add
jo
jg
mov
adc
(bad)
(bad)
imul
ins
add
int
ret
add
pop
jnp
cmp
jbe
lock
ja
ja
or
cmp
shl
(bad)
adc
mov
and
mov
cs
push
and
cmp
sbb
and
mov
imul
js
sub
xor
outs
sbb
add
lahf
inc
adc
fs
loop
test
ja
and
pop
or
outs
xchg
cs
sub
ins
inc
push
xlat
push
or
fist
inc
xlat
cmps
outs
push
in
add
or
push
sbb
ret
je
inc
jae
bndstx
fild
dec
dec
test
sbb
dec
bound
xchg
inc
jno
ja
and
lahf
aaa
(bad)
jae
ins
in
cmp
xchg
xchg
(bad)
(bad)
dec
dec
les
int
popa
mov
mov
pop
les
iret
mov
and
xchg
(bad)
(bad)
(bad)
jmp
add
adc
dec
push
pop
loope
ret
mov
in
add
sub
push
xchg
call
aam
pop
adc
jo
mov
dec
cmp
xchg
mov
add
mov
sub
add
outs
(bad)
enter
inc
pop
outs
ret
je
and
pop
and
(bad)
mov
xor
and
ret
and
and
push
shr
pop
outs
ja
push
into
mov
sub
add
(bad)
push
push
aam
ds
repz
inc
add
sub
jge
loop
inc
jo
jmp
xchg
inc
ror
pop
test
ficomp
int
enter
inc
add
or
xchg
push
or
push
push
pop
xor
pop
pop
jne
icebp
push
xor
push
ja
inc
add
jae
popa
dec
cdq
icebp
(bad)
fs
fnstsw
push
push
int
fs
ret
lahf
jae
sub
adc
xchg
mov
sub
xor
loopne
sub
inc
loop
xchg
push
aam
inc
js
popa
js
push
xor
inc
ja
push
or
add
fsubr
stc
xor
or
push
jmp
push
mov
adc
sub
mov
ins
pop
inc
add
inc
jb
mov
aam
jo
repnz
or
dec
adc
and
push
mov
and
add
push
xor
repz
scas
loop
xchg
dec
dec
jno
ins
and
into
jl
inc
scas
or
mov
sbb
mov
or
sub
adc
pop
movs
or
lahf
add
push
xor
lahf
sub
stos
fcom
sti
inc
outs
arpl
je
xchg
loop
dec
addr16
add
sbb
mov
fcom
das
das
pop
retf
cmc
imul
dec
inc
sbb
ins
cmp
jg
sti
sub
jg
js
mov
xor
jbe
ret
repz
cmp
das
inc
or
fiadd
je
mov
cmp
aaa
es
movs
push
inc
inc
cmp
cmps
out
repz
dec
adc
vmread
ret
retf
seto
mov
adc
xor
jge
clc
shl
push
sbb
shl
mov
jae
inc
mov
xchg
pop
das
pop
sub
test
add
int
pushf
or
pop
and
xor
test
and
pusha
shl
stos
jg
pop
fwait
push
mov
stos
rol
cmp
ins
mov
cs
sub
mov
addr16
rol
sub
or
sub
pop
sub
inc
and
xor
mov
or
shr
mov
in
mov
imul
sbb
xchg
outs
jmp
xor
adc
inc
rol
xchg
push
jmp
popa
sbb
jge
sub
stos
popa
add
rol
(bad)
cmp
push
fld
cmp
xchg
cmc
int
loopne
push
push
push
das
mov
cmp
or
cmp
sbb
sub
ss
(bad)
sbb
stc
sub
jo
aam
push
gs
fbld
add
ds
gs
ror
das
adc
(bad)
cmp
xchg
jo
mov
inc
sub
dec
cmp
pop
inc
and
cmc
fdivr
aas
outs
xor
(bad)
or
nop
xor
xor
ss
or
and
fs
and
inc
dec
mov
loop
add
pop
pop
cli
pop
out
jbe
shr
or
jp
jne
jmp
or
xlat
aaa
jmp
inc
fadd
outs
fs
fnsave
pusha
sahf
pop
cmp
cmp
cli
mov
inc
mov
jp
jp
push
or
xchg
sub
inc
dec
adc
aaa
test
pop
aaa
mov
ret
xchg
xor
xchg
cmp
aaa
pop
jp
imul
and
fisub
ret
inc
ja
and
out
push
mov
mov
jno
xor
fldenv
add
or
mov
mov
dec
scas
adc
pop
sbb
and
addr16
add
dec
fwait
dec
repz
or
xchg
fldcw
add
pop
or
int
mov
add
das
adc
sbb
and
fldcw
sub
xor
inc
mov
mov
out
adc
mov
ror
sub
ret
sub
add
or
int
fst
and
add
fldcw
add
dec
(bad)
ss
int
lea
and
das
add
push
aam
test
xor
pop
inc
jno
mov
jo
sub
inc
sub
dec
ret
sub
dec
inc
or
ret
and
add
fdiv
cmp
jae
push
(bad)
rcl
cmp
sub
fist
push
add
inc
xor
into
pop
push
xchg
shl
push
gs
cwde
fistp
add
ss
inc
add
dec
adc
fwait
inc
lea
js
pusha
ja
sub
add
push
dec
xor
inc
or
bound
nop
mov
jae
mov
dec
pop
and
mov
mov
aas
pop
pop
pushf
cmp
push
das
mov
push
push
cmp
aam
adc
inc
push
or
dec
pusha
inc
and
mov
(bad)
adc
out
or
imul
jns
sub
test
inc
fs
dec
pop
or
adc
pop
inc
add
mov
mov
or
pop
lahf
pop
sub
mov
mov
push
test
mov
and
xchg
push
add
mov
pop
inc
add
adc
gs
sbb
cmc
mov
or
mov
add
into
out
xchg
dec
push
mov
fistp
movs
or
and
ret
ins
push
loopne
repz
push
sub
push
jmp
push
jl
mov
mov
sub
sbb
stos
add
ret
js
imul
mov
pusha
jnp
mov
jmp
or
dec
jae
xor
sub
test
das
push
(bad)
div
pop
bound
adc
mov
xchg
mov
aad
pop
push
dec
outs
dec
call
and
or
jg
dec
sbb
mov
je
dec
ret
fisttp
jg
fwait
sub
push
sbb
adc
xchg
mov
out
or
ja
stos
fdiv
pop
imul
gs
in
add
sbb
add
js
inc
cmp
(bad)
push
mov
test
or
pop
fimul
ss
jbe
add
bound
call
dec
inc
outs
sub
jne
mov
(bad)
cs
mov
ins
aas
mov
dec
lahf
lahf
and
lods
ficomp
pop
ja
out
es
or
mov
cmp
and
not
mov
xor
stos
sub
(bad)
mov
mov
daa
push
or
and
mov
xchg
push
adc
xchg
(bad)
daa
es
arpl
pop
add
add
les
ins
push
dec
rcl
adc
xchg
arpl
xchg
cmp
inc
jbe
test
sbb
pop
or
and
mov
xchg
inc
iret
imul
gs
jno
or
xlat
push
add
mov
movs
inc
rol
or
push
ja
push
inc
rcr
mov
add
ficom
je
ds
stos
dec
pop
ja
jge
cmp
dec
retf
fs
in
mov
daa
fbld
add
imul
or
ja
sbb
sbb
sbb
inc
ins
ins
pusha
fs
imul
mov
adc
jbe
or
jl
loop
shl
xor
add
and
and
mov
mov
cmp
push
ss
sbb
sbb
hlt
push
scas
or
ret
or
add
sub
imul
jecxz
push
jmp
(bad)
sub
(bad)
jb
aaa
jae
pop
inc
cmp
sub
push
jp
outs
jg
loop
popa
mov
mov
jo
xlat
jae
aaa
ins
sbb
push
dec
sbb
fs
adc
xor
xor
adc
push
jb
and
xlat
cmp
xor
add
ficom
cs
mov
adc
iret
scas
push
js
lods
mov
push
add
dec
xlat
inc
push
dec
cmp
or
call
xor
dec
add
das
es
cwde
and
mov
mov
jne
lods
retf
adc
dec
ja
imul
xor
cmps
cmp
xor
fs
jns
add
xor
cdq
or
(bad)
xchg
xor
add
add
adc
jne
pop
aaa
pop
add
push
outs
outs
(bad)
xor
sbb
jae
push
ins
xor
xor
dec
push
push
inc
dec
inc
inc
call
xor
popa
add
jmp
stos
fsubr
dec
jbe
out
popa
push
and
inc
sub
arpl
jne
iret
or
retf
or
fsubr
push
(bad)
das
lahf
push
push
xchg
mov
les
sub
cmp
pusha
mov
fs
cmp
or
loopne
cmp
adc
add
sub
push
scas
cmp
(bad)
clts
pop
mov
xor
bound
push
add
xchg
mov
ret
cs
aad
sbb
pop
mov
rol
mov
addr16
sahf
jo
into
cli
inc
sub
pusha
sub
mov
push
mov
pop
xor
lock
jnp
pop
push
js
js
dec
bound
push
sub
dec
mov
mov
mov
stos
inc
xchg
call
push
inc
cmp
inc
jae
outs
mov
mov
xor
out
es
add
inc
loop
int
dec
push
imul
mov
add
add
adc
cmp
inc
or
outs
es
mov
inc
ss
push
test
jg
jae
push
fild
jo
jp
bound
sti
mov
and
imul
sbb
dec
adc
xor
and
add
jecxz
inc
mov
leavew
push
add
cmps
inc
arpl
fwait
or
xchg
psrld
inc
loopne
sub
cld
es
pop
xchg
push
je
or
push
pop
mov
fiadd
and
imul
cs
xor
xor
fs
cmp
mov
pop
lsl
dec
lea
ins
cmp
pusha
bound
(bad)
movs
pop
jnp
sub
add
ins
daa
mov
aas
loopne
sti
and
or
add
cmp
mov
mul
or
arpl
cmp
int
in
xor
cmps
adc
add
mov
fistp
add
add
xor
xor
out
popf
dec
xor
arpl
adc
sar
sub
push
inc
push
xor
cmp
inc
jbe
dec
pusha
jmp
pusha
clc
aam
movs
jb
cmp
inc
sbb
sar
add
or
add
scas
inc
ror
dec
sub
push
mov
lds
cmps
add
xor
pop
add
add
mov
or
inc
push
push
or
push
in
mov
loope
mov
mov
jg
cmps
test
(bad)
iret
frstor
xchg
cmp
rol
inc
xchg
xchg
jb
popa
aad
mov
arpl
mov
fbld
dec
xchg
arpl
mov
stos
mov
retf
push
pusha
hlt
mov
mov
push
sbb
dec
outs
das
cld
scas
push
inc
mov
pop
test
xchg
inc
mov
push
rol
sbb
xchg
xchg
popa
bound
inc
cmps
(bad)
and
test
xor
add
pop
jo
pop
pop
xchg
adc
sar
inc
jno
cwde
mov
cmp
int
dec
or
fcmovnu
(bad)
punpckldq
imul
ret
(bad)
pop
add
sub
cmp
inc
out
lods
and
popa
and
adc
jae
scas
test
fisub
fnstcw
mov
loopne
ins
mov
adc
aas
movs
fisubr
loopne
sub
bound
scas
add
mov
popa
jne
sbb
arpl
hlt
ror
adc
scas
and
addr16
add
dec
jbe
add
sbb
inc
pusha
jne
jnp
or
adc
cmovo
fimul
aaa
pop
lahf
lea
mov
nop
xor
adc
xchg
push
inc
pusha
adc
or
or
sbb
sbb
in
push
(bad)
xchg
inc
popa
add
adc
inc
xor
sub
push
sub
loop
imul
jmp
ja
or
adc
lahf
les
or
cmc
sub
sbb
stos
or
icebp
pop
dec
adc
je
rcl
push
push
xchg
jo
fistp
cmc
fidivr
in
push
mov
and
sbb
scas
cmp
push
shl
mov
adc
xor
and
inc
shr
movs
cmp
out
out
rol
inc
push
inc
add
ins
in
sbb
xor
je
sub
and
xor
sbb
or
xchg
or
cmp
adc
or
xor
inc
mov
xchg
pop
shr
cs
jo
gs
inc
and
cmp
cmps
jmp
adc
out
ror
push
aaa
addr16
jp
add
xor
xor
sbb
xchg
sbb
es
sub
mov
xchg
jp
inc
or
pop
arpl
les
fcmovu
inc
dec
push
dec
inc
push
out
fidiv
not
cmp
or
mov
movs
sub
(bad)
jo
push
movs
push
fcom
cmp
push
xor
push
dec
add
pop
inc
or
or
inc
data16
in
inc
fs
mov
xor
ret
fs
push
xchg
xchg
fcmovnb
dec
dec
dec
(bad)
fnstsw
add
adc
inc
adc
arpl
bound
jb
push
aaa
mov
fstp
stos
sbb
mov
test
pop
inc
out
and
mov
scas
xchg
arpl
mov
xchg
pop
push
cmp
call
popa
ret
adc
inc
in
sbb
inc
push
jmp
inc
loopne
rol
fild
and
sub
mov
inc
pop
add
add
daa
xor
and
retf
or
test
rol
sbb
sbb
and
imul
xchg
xchg
dec
clc
sbb
mov
cmp
adc
pop
jecxz
xor
scas
add
xchg
aam
add
jne
popa
pop
fbstp
and
ja
push
gs
jne
pop
adc
push
mov
cmp
cmps
inc
ins
adc
push
test
sub
das
dec
outs
jbe
pusha
push
push
test
inc
push
cmp
inc
mov
stos
fisttp
ins
mov
mov
mov
adc
(bad)
test
outs
dec
and
pusha
mov
mov
sub
mov
sub
arpl
popa
xor
mov
xchg
loop
cld
inc
ins
addr16
xchg
(bad)
call
dec
dec
push
dec
jo
test
jo
popa
mov
cmp
mov
sbb
aam
sbb
xlat
dec
inc
push
in
sbb
sbb
adc
mov
sbb
shl
push
and
(bad)
pop
mov
rcl
(bad)
lahf
enter
mov
inc
stos
test
mov
in
ja
add
mov
push
enter
sbb
movs
and
mov
or
mov
movs
or
daa
add
push
sub
cmp
or
xchg
js
xor
ins
xor
mov
or
sbb
inc
cs
or
test
pop
and
jo
aaa
test
push
mov
jae
mov
rol
adc
imul
lds
push
call
mov
mov
ja
(bad)
inc
and
ja
ins
shl
inc
mov
dec
mov
and
lds
push
mov
loop
and
push
mov
push
ror
mov
fcomip
pop
push
dec
jbe
dec
inc
push
dec
inc
aaa
xor
xchg
jnp
inc
adc
and
and
inc
pop
adc
pop
sub
rcl
test
(bad)
sbb
or
mov
outs
mov
das
adc
repz
arpl
pop
cli
cmp
xchg
add
stos
jbe
sbb
and
aad
sbb
mov
(bad)
je
outs
mov
bound
outs
add
add
ror
push
sahf
in
mov
mov
mov
ins
neg
lahf
inc
in
or
xchg
ss
scas
enter
adc
push
pusha
scas
jecxz
pusha
push
scas
adc
adc
xor
jne
adc
bound
push
sbb
dec
mov
loope
ja
push
sbb
dec
ja
xor
mov
adc
lea
ds
mov
mov
test
xor
dec
mov
(bad)
xor
add
icebp
mov
add
rol
sbb
inc
mul
sub
movs
clc
xor
pop
pop
and
push
outs
push
popf
add
mov
outs
shl
mov
scas
dec
outs
inc
sahf
call
add
scas
mov
cs
arpl
inc
aam
and
idiv
pop
inc
cmp
push
jno
sbb
xchg
(bad)
jle
jg
sub
rol
dec
mov
xor
mov
sbb
outs
mov
sub
sbb
mov
push
es
push
bound
add
xlat
fist
and
lldt
and
fcmovnu
inc
dec
and
test
outs
shr
mov
test
push
movs
sbb
popa
mov
inc
cmp
addr16
imul
inc
adc
mul
xchg
xchg
cs
or
push
stos
push
scas
test
icebp
and
ins
jo
jo
mov
(bad)
pop
jne
sbb
es
sub
and
aam
pop
dec
jnp
cmp
jb
or
jp
push
xchg
aaa
loopne
pop
cs
aaa
outs
xor
ror
mov
xor
sub
pop
push
rol
sbb
adc
test
mov
je
es
and
mov
retf
mov
aad
sub
popf
mov
ja
or
sbb
pop
xor
push
sub
cmp
push
push
and
or
repnz
push
jo
mov
fild
xor
jl
je
cmp
pusha
hlt
sub
jg
bound
inc
add
push
dec
sbb
adc
inc
sub
test
fist
imul
adc
scas
icebp
or
cs
add
bound
and
repnz
ret
jbe
adc
ins
fisttp
(bad)
adc
jb
es
les
adc
cmp
inc
ins
mov
pop
pop
jp
adc
rcl
sub
test
lods
sub
dec
add
push
and
pop
add
mov
cwde
sbb
sub
inc
clc
out
pcmpeqd
repnz
imul
xchg
cmp
sub
mov
and
out
dec
pop
jnp
lea
xor
jbe
pop
sbb
ret
sti
dec
or
push
iret
popw
(bad)
(bad)
or
mov
js
mov
and
or
or
xor
test
adc
inc
add
and
pop
xchg
add
inc
adc
jmp
fwait
mov
add
sbb
xor
adc
mov
push
fwait
rol
mov
(bad)
cmps
inc
or
fcomp
inc
daa
xor
stos
push
push
push
dec
xchg
sbb
(bad)
mov
lahf
xor
sub
push
out
jnp
ss
arpl
xchg
imul
xor
adc
loopne
pop
sbb
or
dec
imul
cmp
imul
pop
fild
xor
(bad)
push
and
and
call
lods
repz
adc
or
sti
jle
sti
adc
cmp
xor
add
inc
jp
xchg
cmp
scas
daa
mov
cs
cmp
outs
jmp
xor
add
mov
cs
push
xor
fiadd
xor
xor
fisubr
aam
or
sub
inc
cli
cmp
xor
add
push
or
adc
icebp
add
jecxz
pop
rcr
imul
mov
push
imul
fwait
int
pop
ror
aam
out
xor
push
data16
push
pop
repnz
add
xor
push
ins
ss
int
sbb
and
fcmovnbe
sub
daa
shr
(bad)
sub
jl
sub
outs
rol
mov
lea
pop
ficom
jno
outs
(bad)
jno
test
outs
and
jne
fdivr
and
dec
sub
adc
cmp
test
ja
js
mov
pop
fisubr
mov
add
test
xchg
cmps
push
gs
ss
adc
shr
xor
inc
fmul
fiadd
dec
push
adc
cmps
mov
or
out
jae
or
mov
push
cs
mov
in
ss
(bad)
push
dec
scas
fisttp
add
or
and
mov
fdiv
popa
sub
and
(bad)
sub
lods
or
jne
cmps
mov
lahf
inc
outs
pop
outs
jne
popa
(bad)
outs
push
adc
adc
or
jecxz
idiv
xchg
stos
adc
mov
dec
arpl
outs
ret
mov
push
pop
push
sbb
test
pop
pop
test
and
inc
lahf
ss
inc
mov
add
dec
imul
push
mov
xor
scas
mov
sub
mov
push
xor
fist
cmp
fild
adc
jae
cmp
je
jge
push
add
scas
test
push
pop
xchg
mov
mov
ret
jecxz
jge
repz
sbb
les
mov
adc
dec
add
rcr
pop
jmp
daa
outs
jb
test
and
xlat
xchg
test
add
jmp
jg
les
mov
jb
outs
pop
in
mov
out
movs
outs
mov
ja
sub
bound
jecxz
pusha
or
ret
(bad)
xchg
mov
aas
sub
mov
pop
(bad)
sub
out
jb
scas
cmp
push
add
pop
mov
push
and
std
icebp
stos
add
lods
pop
mov
or
stos
lahf
and
sahf
imul
lds
test
adc
sub
xchg
pop
iret
fist
adc
daa
lahf
sti
xchg
xlat
or
jne
aas
mov
cdq
(bad)
in
xchg
push
outs
shl
rcl
dec
or
mov
sub
or
pop
push
nop
pusha
cmp
add
jno
cs
or
add
mov
xchg
rol
iret
popa
test
pop
div
mov
add
ret
jecxz
and
mov
push
addr16
inc
sub
xchg
ret
cmp
shr
inc
imul
xchg
arpl
mov
push
ror
rol
mov
and
(bad)
push
adc
add
pop
mov
imul
push
add
jnp
adc
es
add
push
mov
icebp
test
in
pop
inc
pavgb
rcl
mov
loope
test
mov
add
add
cmps
pop
mov
mov
fwait
inc
jno
retf
mov
addr16
ds
mov
out
ret
pop
inc
into
inc
outs
js
or
popa
and
add
mov
adc
push
or
mov
sub
ja
lds
or
daa
jbe
xor
lods
mov
sub
cwde
adc
or
imul
test
jle
push
jp
test
dec
or
mov
mov
jno
ins
inc
test
jnp
cs
sub
shr
cmp
loope
lahf
adc
sbb
call
mov
mov
sub
sub
imul
test
cs
mov
sub
fcomip
outs
cwde
or
pop
inc
xor
push
xor
sub
rcl
leave
adc
sbb
cmp
sbb
sbb
add
mov
retf
add
sub
inc
adc
popf
inc
repz
xchg
and
cli
or
dec
add
and
ins
ss
push
push
xor
lahf
call
ins
push
push
mov
jmp
pusha
push
adc
xchg
je
sti
dec
addr16
or
test
mov
add
sub
lods
dec
push
sbb
test
adc
test
mov
(bad)
sbb
nop
dec
pusha
ffree
push
loop
dec
or
outs
(bad)
movs
or
dec
rcl
inc
(bad)
mov
jg
mov
jne
aas
lds
popa
add
push
sub
mov
adc
adc
pop
aad
pop
dec
xor
push
push
mov
cmps
cmp
imul
add
inc
das
push
adc
imul
test
push
pop
rol
push
cmp
out
sbb
dec
cmp
or
lock
ins
mov
sub
test
push
lea
dec
imul
mov
xchg
ins
test
push
sub
pop
mov
sub
loop
push
pop
pop
pop
inc
mov
sbb
pop
mov
pop
sbb
test
add
imul
pop
mov
xor
add
push
mov
lods
sub
mov
sbb
push
fist
and
adc
mov
and
push
sbb
test
add
pop
rol
push
(bad)
shr
and
and
mov
mov
push
inc
and
inc
lea
cmp
aas
std
inc
and
and
add
aam
push
leave
out
xchg
lds
mov
inc
add
stos
fcmovu
add
inc
or
mov
add
sub
and
mov
push
test
shr
sbb
pop
pop
jbe
mov
pop
cmps
mov
add
js
xchg
lea
pop
mov
pop
les
lahf
mov
add
popa
pop
push
add
and
ins
imul
or
inc
dec
ret
xor
outs
add
shr
pop
jmp
gs
pop
add
pop
out
push
add
pusha
add
pop
pop
inc
adc
xchg
or
mov
fwait
add
fsub
popf
jl
pop
fld
shl
xchg
ret
scas
ins
push
iret
ins
add
mov
pop
sar
push
inc
test
mov
adc
add
mov
inc
inc
add
add
aam
rol
jo
mov
sub
add
inc
xor
mov
or
mov
pusha
push
add
mov
movq
push
lds
mov
popa
push
and
outs
mov
arpl
push
cmps
lea
or
jne
mov
add
xor
mov
push
movs
shl
mov
xchg
push
sbb
movs
mov
adc
movs
sbb
adc
inc
inc
mov
sbb
lahf
xor
sub
scas
inc
xor
jns
inc
and
mov
xor
adc
xor
xor
and
xor
add
jmp
jle
scas
shl
in
mov
aam
ins
push
pop
mov
push
sub
outs
fbld
shl
mov
add
stos
xchg
mov
mov
pop
into
mov
or
mov
sub
ja
push
adc
aas
xor
xor
sbb
and
lds
jg
aad
cwde
xor
repz
fs
test
stos
mov
mov
inc
add
or
repz
xchg
out
jecxz
adc
mov
ret
stos
pop
and
out
mov
(bad)
mov
mov
test
out
adc
sbb
cmp
inc
popf
jp
inc
jge
daa
push
inc
pop
jmp
push
cmps
pop
rcl
mov
fisttp
inc
test
outs
push
outs
dec
jne
cmps
pop
mov
shl
mov
das
jnp
push
or
test
je
in
inc
pop
fldcw
cwde
push
outs
cmc
add
lahf
inc
or
push
icebp
cmovo
aad
icebp
fild
inc
hlt
sub
xchg
xor
inc
and
mov
(bad)
fbstp
iret
inc
add
and
or
xor
inc
(bad)
and
cmp
mov
xor
ins
push
mov
push
adc
push
add
push
sbb
inc
movs
mov
leave
mul
stc
iret
adc
fucomi
inc
add
rol
add
sub
out
and
(bad)
mov
add
adc
inc
xor
or
xor
and
sbb
push
mov
mov
mov
push
mov
mov
adc
pop
push
push
sub
(bad)
and
and
adc
add
and
push
mov
mov
stos
dec
scas
or
sbb
cmp
pushf
xchg
fisttp
lea
add
xchg
add
dec
loope
add
loopne
xchg
and
cmp
push
ror
das
adc
add
jmp
fs
or
ja
js
lods
mov
push
xchg
xchg
ins
mov
add
add
adc
add
add
add
xchg
ror
popa
in
fs
(bad)
mov
sbb
sub
ret
int3
push
adc
mov
jl
and
jnp
mov
ins
gs
push
add
add
mov
cmp
dec
cs
adc
mov
push
add
enter
call
psubb
call
cmc
enter
cli
cmp
fucom
in
adc
jnp
sub
not
push
or
lds
sbb
push
xchg
rol
or
add
fwait
mov
cmp
pop
shl
add
ret
call
sub
adc
push
scas
fmul
nop
jne
arpl
inc
ret
adc
xchg
aas
xchg
ss
shr
jb
dec
add
push
out
pop
sbb
sahf
dec
pop
cmp
add
gs
and
jbe
les
popa
pop
xor
je
movs
cmps
inc
adc
sub
inc
dec
(bad)
in
fs
fnstenv
inc
out
pop
add
xor
push
pop
jle
adc
lock
call
pop
adc
cdq
xor
add
repz
clc
imul
add
test
and
hlt
rcr
inc
cmps
rcr
add
cmps
(bad)
or
test
(bad)
arpl
loopne
gs
call
repz
sbb
xor
add
lea
das
aad
mov
push
add
cmp
sub
mov
loopne
mov
mov
mov
fsub
mov
and
push
add
or
(bad)
fisttp
mov
push
add
cmp
shl
loopne
icebp
mov
add
imul
jmp
pop
cmp
dec
cmp
jne
aas
push
fsub
fwait
ret
mov
dec
mov
and
mov
rcr
and
sub
or
jb
enter
fist
jno
or
sub
inc
push
js
dec
loop
cmp
faddp
inc
mov
popa
add
pop
mov
imul
adc
or
(bad)
or
cmp
into
jne
adc
mov
add
inc
push
add
aad
cmps
mov
fld
xlat
popf
mov
push
or
shl
movs
stos
test
mov
les
addr16
jle
adc
imul
pop
lahf
pop
cmp
mov
out
xchg
add
xor
rol
inc
mov
pop
repnz
loop
sub
sub
iret
xchg
cmps
inc
and
xchg
jg
push
mov
inc
pop
and
nop
pusha
push
ja
jle
cwde
bound
add
push
xor
fist
int
fiadd
push
pusha
pusha
xchg
jo
pop
dec
fild
fisubr
fld
pop
mov
push
sub
adc
mov
jo
pop
dec
arpl
push
dec
arpl
movs
retf
cli
aam
(bad)
xchg
xchg
je
push
pusha
outs
das
and
cmp
sar
push
push
daa
shl
jnp
push
aaa
jae
inc
imul
daa
scas
adc
and
rol
mov
aam
adc
out
daa
dec
test
adc
cmp
xchg
sub
dec
jmp
mov
fnstcw
mov
pop
ja
cmp
inc
xchg
push
ds
inc
mov
and
scas
and
pop
arpl
push
adc
dec
inc
pusha
mov
(bad)
fild
add
push
inc
and
xor
dec
sub
call
sbb
sbb
stos
and
xor
or
pop
push
sub
push
or
jge
bound
xor
mov
xor
shl
or
push
pop
add
stos
sub
pop
sbb
retf
push
das
aas
call
or
cmps
jle
std
ins
pop
jne
sub
sub
(bad)
ins
inc
mov
xor
(bad)
rep
mov
xchg
mov
inc
movs
push
push
jno
inc
add
dec
and
punpcklbw
push
fld
imul
and
add
sbb
scas
sub
arpl
and
outs
jecxz
push
ds
xor
stos
and
xor
loop
cmps
das
ret
jo
push
mov
daa
aas
pcmpgtw
and
mov
pop
dec
inc
push
push
inc
push
inc
pop
dec
push
inc
inc
bound
xor
add
leave
push
(bad)
in
mov
dec
push
pop
push
push
inc
push
pop
or
pop
jnp
js
jo
div
arpl
fbld
mov
xchg
in
push
add
mov
retf
mov
dec
jae
ja
scas
pop
jnp
sub
das
and
add
adc
imul
mov
mov
pop
mov
or
iret
mov
punpckhbw
add
push
dec
fs
and
add
mov
mov
inc
pop
xor
inc
add
aaa
imul
push
mov
(bad)
cs
pop
cmp
adc
inc
aaa
movs
mov
daa
pop
js
push
arpl
add
(bad)
dec
sbb
enter
les
push
outs
jl
jmp
and
xchg
jno
push
push
jmp
(bad)
daa
aaa
loope
inc
and
push
pop
in
add
(bad)
fmul
mov
or
out
mov
add
mov
ret
add
cmps
xor
cmps
push
imul
add
sbb
sti
out
or
adc
sbb
pop
inc
inc
sbb
xor
cdq
inc
loopne
sub
inc
add
fstp
push
daa
sahf
ja
mov
xor
add
jge
cmp
mov
outs
push
cmp
mov
dec
add
(bad)
ins
xchg
in
aam
add
pop
pop
sbb
dec
jle
and
call
add
dec
sbb
inc
ja
cdq
or
xor
hlt
push
int3
fs
xchg
pop
jg
sbb
adc
sbb
or
mov
dec
add
cmp
leave
pop
xor
fldcw
(bad)
mov
enter
jne
mov
cmp
js
bound
push
shr
mov
imul
inc
push
cmp
jns
mul
cmp
inc
push
push
addr16
fdiv
jg
adc
outs
popf
inc
out
imul
push
popf
loop
or
outs
mov
shl
into
pop
inc
or
mov
fsubr
pop
push
sbb
rcl
pop
ins
retf
rol
push
(bad)
lods
mov
and
sub
fcmovnbe
xor
and
ficomp
out
pusha
dec
and
fisubr
pop
shr
xor
fdivrp
xor
out
inc
push
inc
push
xchg
inc
cld
rol
sub
add
pop
dec
pop
nop
mov
xchg
addr16
fstp
outs
mov
jbe
pop
sti
sub
sbb
nop
ret
aas
pop
adc
push
stos
inc
fisubr
cdq
sbb
sub
dec
cmp
aaa
dec
je
mov
jo
mov
mov
inc
pop
xor
push
arpl
ror
pop
adc
lods
pop
ror
adc
or
inc
pop
test
in
pusha
lods
or
cwde
push
push
cwde
sbb
fadd
aad
out
mov
dec
popa
(bad)
adc
clc
pop
pop
mov
xchg
fild
pop
xchg
adc
lahf
ins
add
jg
loopne
jae
cmp
pop
mov
loope
adc
mov
nop
aam
add
and
(bad)
cmp
in
pop
ins
cwde
pop
lock
pop
adc
inc
es
or
jb
mov
dec
xor
adc
or
in
push
fdiv
add
pop
js
add
add
mov
jecxz
mov
mov
add
aas
pop
aas
adc
js
dec
push
nop
sbb
jo
popf
push
(bad)
imul
mov
dec
outs
ins
jbe
jne
sub
inc
xor
and
or
xchg
adc
push
dec
mov
xor
mov
add
cwde
fisttp
dec
pop
dec
cmp
or
in
inc
adc
neg
popf
dec
pop
in
sub
imul
retf
sub
jp
sub
pop
add
push
or
enter
paddsb
mov
enter
or
mov
daa
stc
dec
nop
lea
or
pop
enter
or
and
outs
xchg
add
es
jb
push
bnd
inc
fwait
jno
push
iret
lahf
or
shl
aad
push
ret
mov
mov
(bad)
mov
popa
add
jno
mov
mov
cmps
sahf
sar
push
xchg
ins
fcomp
sub
jle
jbe
js
ins
mov
ja
mov
jb
inc
sti
sbb
jb
and
pop
int3
adc
cmc
pop
xor
adc
out
sub
xchg
jne
and
out
jcxz
int3
(bad)
in
js
and
bound
stos
mov
add
dec
arpl
pop
adc
adc
(bad)
cdq
jp
sbb
ds
pusha
push
sub
test
jns
outs
in
jge
and
mov
mov
jg
or
sub
jno
push
aad
inc
add
fnstenv
dec
jmp
mov
mov
das
adc
add
call
push
dec
xchg
inc
ins
mov
and
jl
gs
push
cs
nop
(bad)
jns
stc
dec
ret
lods
adc
lea
mov
sbb
xchg
sahf
cmp
inc
push
add
sub
mov
mov
cmc
add
jg
(bad)
push
test
jo
jecxz
add
sbb
cmp
imul
sbb
cmp
out
fisubr
loope
dec
hlt
cmove
hlt
dec
or
xchg
adc
movs
push
xor
cmp
test
push
pop
rol
add
and
cmp
sub
push
jo
dec
(bad)
retf
push
arpl
test
adc
sbb
(bad)
fmul
aaa
sub
inc
ins
sub
outs
or
mov
adc
push
je
add
cdq
or
and
test
push
xor
sbb
js
ret
mov
mov
or
push
and
dec
sbb
add
push
jle
aaa
outs
sub
sbb
arpl
inc
xchg
xchg
cwde
cmp
mov
shl
add
clc
div
sbb
pop
jg
adc
aam
dec
fisubr
adc
mov
inc
jb
lods
jne
xchg
push
das
ret
scas
push
lods
iret
ret
daa
jns
and
mov
and
dec
stos
sub
inc
sti
daa
repz
outs
adc
mov
scas
fcomp
push
int
test
push
inc
iret
fcom
jmp
pop
test
mov
popf
mov
test
pop
mov
sar
push
mov
das
ins
pop
movs
dec
push
adc
dec
mov
jno
push
cmp
test
imul
or
add
inc
dec
mov
cmps
ss
adc
test
shl
call
dec
pop
pop
inc
lock
dec
aam
sub
push
push
xchg
stos
out
mov
push
lds
and
add
jg
dec
les
sub
mov
add
mov
ja
push
xchg
and
inc
sub
adc
test
mov
xor
mul
pop
in
and
jg
dec
popa
push
cwde
sbb
sbb
push
ins
sub
sbb
stos
outs
adc
lock
mov
cmp
and
test
add
mov
lods
or
iret
sub
xchg
or
int3
push
outs
push
test
aad
sbb
mov
cmp
and
lock
add
(bad)
adc
bound
dec
inc
xor
sti
xchg
push
lods
nop
or
(bad)
jg
adc
popa
mov
mov
daa
das
pop
mov
nop
aam
sbb
pop
mov
xor
push
and
outs
ins
jl
xor
and
push
dec
or
arpl
push
cmp
ja
frstor
inc
jbe
les
shr
jbe
rol
pop
jle
dec
or
aas
je
adc
cwde
push
arpl
push
push
sti
push
mov
adc
jns
jae
sbb
pusha
push
fcom
pop
sahf
daa
and
mov
aas
data16
jns
cmp
jmp
je
(bad)
or
sub
sbb
(bad)
int
loopne
sbb
push
cmp
xchg
movs
nop
scas
stc
fnstcw
clc
ds
push
lock
push
das
jae
or
push
sbb
pop
test
xor
inc
sub
inc
inc
inc
inc
mov
jle
mov
lock
arpl
and
sub
mov
movs
push
shr
cwde
aas
inc
inc
outs
jae
inc
mov
inc
sub
adc
bound
adc
and
inc
inc
js
mov
pop
xchg
cwde
pop
xor
(bad)
fstp
cmps
pop
push
inc
push
dec
push
je
fild
inc
push
push
push
inc
push
push
inc
push
or
lds
push
bound
push
sbb
dec
pop
cld
xchg
lds
inc
dec
dec
inc
push
dec
dec
inc
add
pop
adc
iret
das
ss
sub
pop
dec
lods
xchg
gs
cmp
cvtdq2ps
sub
in
sahf
daa
pop
inc
outs
ins
adc
push
imul
ja
add
inc
jge
xchg
scas
jns
arpl
fs
pop
movs
(bad)
pop
movs
push
mov
mov
add
je
sub
mov
push
das
mov
dec
repz
dec
dec
dec
dec
dec
dec
dec
inc
lods
mov
push
aad
jge
sub
pop
popa
bound
xchg
ins
outs
outs
jo
xchg
jne
ja
jns
cmp
sub
aas
(bad)
push
cdq
or
cmp
add
or
or
(bad)
aas
repnz
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
add
jmp
sub
sub
sub
cs
add
jmp
inc
push
dec
add
adc
nop
sbb
inc
sub
loope
or
jo
fld
inc
sbb
out
adc
sbb
push
ins
xor
rcl
ds
adc
inc
xchg
cmps
sbb
inc
mov
aas
fild
fistp
fistp
sahf
std
xor
ins
addr16
test
das
xlat
sbb
inc
sub
bound
mov
mov
scas
imul
not
push
lahf
xor
paddq
in
mov
xor
fwait
(bad)
ss
cwde
and
arpl
lods
push
add
movs
xor
sbb
mov
aaa
jg
pusha
sub
(bad)
test
test
jne
call
dec
aad
jbe
shl
sub
inc
inc
mov
xchg
xor
repz
aaa
xchg
aaa
push
fcmovnbe
aam
jae
aas
shr
mov
mov
in
mov
rol
das
dec
retf
and
sbb
or
add
sub
mov
fs
inc
jl
cmp
mov
add
push
push
or
pop
jae
adc
mov
in
cmps
dec
pop
adc
fstp
fbstp
and
sub
pop
pop
ret
mov
xor
add
add
sbb
enter
xlat
ror
stos
jo
rol
pop
leave
mov
(bad)
cmp
dec
(bad)
push
bound
es
push
daa
mov
and
pop
or
sub
pop
xchg
pusha
das
jp
or
sub
imul
loope
push
movs
mov
call
addr16
inc
mov
(bad)
adc
mov
push
mov
or
adc
adc
loop
pop
pop
push
jo
out
out
xor
rol
pop
or
pusha
and
push
pop
cmp
loopne
push
pop
iret
repz
jns
nop
add
pop
cmp
cmp
repz
repz
pop
adc
mov
iret
repz
mov
add
adc
cmp
repz
xor
iret
repz
or
test
mov
lahf
pop
push
sbb
iret
repz
cwde
add
push
jl
fcomp
jns
ins
sub
or
out
sahf
out
clc
add
sahf
out
sahf
mov
or
out
bound
movs
add
inc
in
pop
sbb
inc
jp
aam
jns
out
push
mov
mov
jns
out
hlt
add
or
jns
out
xor
int3
movntq
out
lods
push
xchg
in
or
pushf
jnp
out
arpl
fcomp
push
cmp
cmp
push
push
push
mov
sbb
icebp
cld
call
adc
push
ret
cmp
repz
add
repz
pop
sbb
pushf
cmp
imul
repz
dec
repnz
adc
push
mov
push
repz
leave
retf
stos
add
test
pop
sbb
call
iret
repz
pushf
cmp
leave
cli
push
adc
jae
iret
leave
repz
arpl
cmps
pushf
cmp
repz
iret
leave
repz
iret
repz
imul
or
dec
not
repz
cmp
ja
into
addr16
leave
repz
scas
pop
xchg
repz
cmp
pop
pop
sahf
jg
mov
outs
push
das
mov
inc
aad
push
dec
(bad)
inc
pop
enter
loope
test
shl
icebp
leave
test
jmp
jb
mov
pop
lds
test
enter
pop
jb
pop
lods
in
popf
and
jb
fnstsw
std
ret
mov
jecxz
leave
test
mov
pop
jb
pop
retf
stos
jmp
pop
jb
fistp
jb
sti
mov
enter
pop
jb
pop
test
and
lahf
jbe
pop
jb
mov
mov
add
add
int
jle
adc
adc
inc
ds
(bad)
push
ficomp
push
add
adc
sahf
jne
pop
add
add
sbb
pop
push
popa
push
call
xor
or
add
pushf
push
repnz
outs
mov
retf
cdq
shr
dec
out
push
mov
add
aas
cdq
test
cmp
rcr
xor
sub
mov
jecxz
mov
mov
bound
aas
in
inc
pop
pop
in
ins
call
fstp
addr16
jae
je
add
cmp
jo
cwde
lea
xchg
add
mov
imul
ins
jae
add
jns
rcr
mov
(bad)
ret
cld
push
inc
aas
push
inc
and
xor
call
ret
mov
(bad)
bound
xchg
ss
aaa
pop
ret
ss
(bad)
mov
popa
ret
mov
jmp
dec
(bad)
arpl
xchg
sbb
add
ret
(bad)
pop
adc
arpl
(bad)
sbb
ja
mov
xlat
dec
jae
imul
cmp
mov
mov
jbe
dec
pop
aam
loop
mov
outs
fisubr
gs
or
arpl
popa
xchg
(bad)
push
jnp
add
enter
(bad)
in
iret
lods
cwde
mov
jo
outs
popa
mov
jg
rol
out
jb
addr16
xor
sub
and
call
ins
add
bound
sar
ds
add
or
cs
leave
push
call
retf
mov
and
mov
jb
add
jecxz
dec
movs
xor
dec
dec
dec
adc
push
ss
mov
push
aad
pop
pop
jg
jb
and
leave
ret
retf
inc
push
xor
fadd
mov
es
ret
push
test
ss
jns
ss
xlat
(bad)
push
add
out
sahf
out
sbb
sbb
jg
sahf
sbb
pop
ja
popa
push
out
mov
les
(bad)
(bad)
inc
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
(bad)
(bad)
dec
mov
sub
mov
sbb
dec
jno
repz
test
(bad)
(bad)
(bad)
call
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
(bad)
(bad)
call
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
(bad)
(bad)
(bad)
cmp
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdivr
(bad)
(bad)
push
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
(bad)
(bad)
jmp
and
mov
cdq
xchg
mov
mov
or
or
and
or
(bad)
(bad)
jmp
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
push
mov
push
movs
in
lahf
xor
mov
js
stc
and
test
xchg
sbb
push
loope
or
ins
or
pop
arpl
hlt
push
imul
cmps
fist
dec
sbb
in
xchg
push
ins
jnp
add
shl
adc
(bad)
(bad)
(bad)
push
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
push
xor
mov
into
pop
cmp
mov
inc
movs
fisttp
(bad)
(bad)
(bad)
fist
movs
sti
hlt
(bad)
shr
imul
mov
sar
add
(bad)
(bad)
inc
add
pop
dec
or
cmp
add
daa
adc
or
and
pop
loopne
mov
cs
mov
popa
into
push
stc
ficomp
leave
fldcw
and
push
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
(bad)
(bad)
(bad)
inc
call
jmp
fild
push
fdiv
or
test
fs
ds
(bad)
(bad)
(bad)
dec
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
out
call
inc
push
imul
xor
sbb
push
jbe
aam
loopne
ror
pop
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
(bad)
(bad)
(bad)
push
dec
add
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
jmp
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
call
push
pop
cmps
call
ret
shl
sbb
ret
es
push
std
(bad)
call
ins
add
ss
jmp
addr16
jb
push
sub
dec
mov
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
sar
(bad)
(bad)
inc
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
std
(bad)
(bad)
cmp
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
call
mov
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
call
dec
(bad)
ds
push
scas
fcomp
fldenv
fild
(bad)
dec
jb
push
scas
mov
fidivr
mov
jmp
repnz
retf
(bad)
(bad)
call
mov
add
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
add
(bad)
call
push
sub
mov
or
sbb
add
sub
pop
xor
sbb
push
sub
hlt
(bad)
(bad)
(bad)
push
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
(bad)
(bad)
jmp
sahf
iret
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
das
xor
mov
sbb
test
test
add
call
out
ins
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
idiv
(bad)
call
cmps
popa
ja
mov
out
repz
gs
fisubr
(bad)
(bad)
jmp
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fild
push
push
push
jo
add
call
sub
xchg
sbb
xor
pop
nop
sti
mov
call
and
out
mov
(bad)
jns
jae
dec
call
cli
(bad)
inc
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
adc
(bad)
(bad)
(bad)
mov
and
or
hlt
mov
or
xchg
lea
or
mov
push
fild
xlat
inc
mov
outs
retf
(bad)
dec
mov
aas
lea
push
cwde
xlat
ficom
test
loope
call
loopne
xchg
retf
les
jb
out
imul
push
inc
lahf
test
pop
adc
dec
and
and
inc
and
inc
out
and
cmp
(bad)
fcomip
ror
scas
lods
loop
mov
and
cmps
xor
mov
lods
out
sar
mov
(bad)
call
fcom
lahf
ins
mov
xchg
adc
jle
push
jns
das
(bad)
(bad)
(bad)
push
sbb
sbb
repnz
dec
push
jo
gs
out
jle
(bad)
repz
(bad)
(bad)
(bad)
(bad)
mov
xchg
rcl
cmp
mov
js
mov
test
cwde
cmp
(bad)
(bad)
dec
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
inc
cwde
cli
add
inc
jmp
inc
xlat
ss
(bad)
(bad)
(bad)
inc
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
call
ss
sub
add
adc
cwde
mov
push
out
scas
mov
push
mov
push
(bad)
push
hlt
out
les
fdecstp
jmp
ret
fcomip
test
sbb
inc
xor
push
retf
jo
outs
sbb
jg
call
sub
loope
fisub
lds
push
call
dec
in
mov
movs
(bad)
(bad)
(bad)
inc
test
xor
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
(bad)
(bad)
call
cdq
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
icebp
das
cli
call
imul
inc
jp
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
(bad)
fisttp
dec
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
xor
cwde
dec
add
sar
push
or
cmp
popf
cmps
push
(bad)
(bad)
(bad)
push
sbb
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
jnp
sbb
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
and
das
mov
adc
test
pusha
(bad)
(bad)
cmp
gs
adc
jns
movs
dec
mov
movs
daa
sub
repnz
loopne
jmp
in
and
out
mov
shl
es
xchg
aas
mov
and
jo
adc
out
sar
mov
gs
pop
jle
aaa
or
cmps
icebp
(bad)
push
dec
div
lahf
adc
jb
and
jg
push
xlat
push
add
test
pop
mov
mov
ret
mov
lea
mov
inc
push
adc
(bad)
cmp
test
or
fs
sbb
sub
mov
jmp
in
push
ja
pop
sub
das
sbb
fild
sbb
(bad)
(bad)
(bad)
push
xor
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
(bad)
(bad)
inc
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
call
pop
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
jmp
stos
cli
in
and
(bad)
mov
fsub
leave
pop
sub
and
mov
and
cdq
out
adc
mov
sub
fidivr
sub
ds
sbb
sub
jecxz
jmp
enter
mov
call
pop
cmp
xor
jb
and
xchg
ja
dec
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jmp
inc
js
mov
(bad)
jnp
cs
fdivrp
cmp
(bad)
jg
scas
nop
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
dec
stos
sub
shr
aam
cmps
gs
fs
imul
addr16
xlat
dec
pop
mov
outs
jns
dec
cld
(bad)
(bad)
(bad)
jmp
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
adc
(bad)
push
int
jae
cmovo
out
inc
sbb
push
(bad)
dec
ds
mov
mov
clc
push
mov
adc
push
aad
mov
(bad)
(bad)
cmp
pop
fist
pop
xchg
pop
mov
movs
pop
lock
add
sub
outs
pop
(bad)
(bad)
(bad)
jmp
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
inc
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
mov
imul
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
dec
dec
(bad)
call
jp
sti
inc
les
clc
dec
jmp
(bad)
(bad)
repnz
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
(bad)
(bad)
(bad)
call
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
(bad)
(bad)
(bad)
(bad)
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
jb
cld
loop
(bad)
sti
cmp
ret
mov
call
dec
retf
lahf
lds
adc
jg
inc
js
inc
int3
inc
ins
xchg
sbb
ror
mov
jmp
cld
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
lds
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
(bad)
(bad)
call
xor
dec
mov
or
(bad)
in
popf
or
(bad)
jg
or
mov
(bad)
mov
push
pop
and
push
clc
(bad)
(bad)
inc
push
int3
xchg
test
push
test
sbb
xchg
shl
test
(bad)
inc
in
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
(bad)
(bad)
jmp
shl
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
(bad)
(bad)
push
push
dec
adc
mov
mov
fidivr
pop
pop
(bad)
push
cwde
mov
mov
out
scas
mov
push
xchg
bound
mov
or
mov
lds
(bad)
(bad)
jmp
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
call
adc
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
(bad)
(bad)
(bad)
sti
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
(bad)
(bad)
(bad)
push
add
das
or
in
xchg
loop
pop
test
xchg
(bad)
(bad)
mov
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
sub
les
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
aad
sar
jmp
mov
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
(bad)
push
hlt
adc
call
fwait
pop
aas
test
mov
sbb
mov
jbe
ud0
(bad)
jmp
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
shl
(bad)
jg
inc
retf
jnp
dec
ja
prefetchw
or
jae
mov
(bad)
(bad)
(bad)
push
cwde
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
cld
(bad)
call
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
inc
mov
das
(bad)
(bad)
(bad)
call
push
pusha
inc
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
(bad)
dec
push
add
in
mov
dec
leave
xor
inc
arpl
(bad)
(bad)
(bad)
inc
shl
jns
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
movs
call
aaa
push
clc
inc
add
and
push
cdq
scas
xlat
add
mov
xor
mov
in
pop
shl
push
mov
inc
(bad)
(bad)
(bad)
call
sbb
jmp
bound
inc
xchg
out
xor
or
sub
push
in
outs
(bad)
(bad)
(bad)
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
sub
(bad)
(bad)
dec
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
xlat
sub
(bad)
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
pop
(bad)
(bad)
jg
imul
xlat
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
(bad)
call
hlt
push
jmp
xor
(bad)
and
push
(bad)
(bad)
(bad)
(bad)
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
ud0
(bad)
dec
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
(bad)
(bad)
(bad)
jmp
icebp
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
call
call
das
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
lock
(bad)
(bad)
call
pop
imul
ss
test
(bad)
cs
mov
call
(bad)
push
dec
cs
out
add
add
pop
std
(bad)
(bad)
(bad)
call
dec
cwde
ds
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
(bad)
(bad)
dec
retf
(bad)
sbb
loope
push
adc
cmp
adc
jg
(bad)
jmp
jle
cmp
pushf
in
adc
add
sbb
cmps
push
data16
(bad)
(bad)
inc
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
(bad)
(bad)
jmp
neg
jmp
pop
test
or
xchg
popa
mov
fdivrp
push
add
pop
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fs
mov
jns
mov
push
xchg
rcr
mov
mov
sub
jl
(bad)
(bad)
(bad)
jmp
mov
sbb
fs
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
call
hlt
aam
push
sub
push
imul
mov
in
adc
pop
(bad)
(bad)
(bad)
dec
push
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
(bad)
(bad)
call
dec
add
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jg
(bad)
jmp
inc
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
jmp
and
and
mov
movs
movaps
mov
call
retf
mov
or
and
outs
jl
pop
push
sbb
(bad)
(bad)
jmp
nop
add
jno
cwde
shl
mov
jno
test
lahf
mov
add
js
leave
les
and
or
jmp
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
adc
push
bound
dec
ins
push
xchg
in
sbb
hlt
sar
les
mov
(bad)
adc
mov
jl
fstp
shl
dec
mov
jl
sti
aam
gs
mov
test
into
mov
(bad)
(bad)
(bad)
(bad)
mov
movs
inc
cmp
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
(bad)
(bad)
(bad)
jmp
rol
jae
add
pop
fisttp
jno
daa
add
mov
(bad)
mov
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwde
(bad)
(bad)
(bad)
push
xlat
test
pop
mov
pop
cs
xor
mov
mov
(bad)
(bad)
mov
sub
inc
cmp
(bad)
adc
jecxz
or
jmp
cmp
pop
test
push
iret
or
(bad)
(bad)
fild
mov
pop
sahf
mov
setae
mov
push
idiv
(bad)
(bad)
jmp
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
aaa
std
(bad)
(bad)
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
(bad)
(bad)
jg
dec
repnz
sar
addr16
mov
fisttp
ss
fmul
and
scas
or
dec
add
mov
pusha
out
ret
test
fist
outs
mov
(bad)
mov
cmp
sbb
outs
shl
int3
or
(bad)
(bad)
push
mov
add
mov
lds
or
sub
add
xlat
(bad)
(bad)
(bad)
(bad)
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
fmul
ss
jb
test
add
xchg
mov
dec
and
jp
jnp
sub
xchg
ror
repnz
mov
(bad)
(bad)
(bad)
(bad)
fcmovnu
and
aam
inc
push
fiadd
int
mov
ja
sbb
(bad)
mov
repnz
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
jmp
call
push
ins
iret
inc
mov
or
adc
ret
es
shl
idiv
(bad)
(bad)
dec
inc
dec
outs
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
(bad)
inc
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
(bad)
jmp
(bad)
push
ficom
and
addr16
jp
les
mov
sub
xchg
mov
mov
aaa
ret
or
mov
sub
sbb
xor
bound
(bad)
jmp
jge
hlt
inc
push
pop
cmps
xchg
xchg
(bad)
enter
jmp
xchg
in
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
cmp
(bad)
jmp
iret
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
(bad)
(bad)
(bad)
push
xchg
sbb
pop
fwait
add
fld
ja
pop
jmp
aam
(bad)
(bad)
(bad)
(bad)
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fdivrp
(bad)
mov
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
push
std
(bad)
dec
pop
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
(bad)
(bad)
(bad)
push
mov
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
dec
lock
dec
push
lds
jge
fisubr
cmp
jns
add
ret
(bad)
(bad)
(bad)
inc
xchg
adc
mov
cmp
lds
or
dec
pop
int3
add
inc
xlat
xor
cli
bound
out
xor
adc
xchg
xchg
push
xchg
fdivrp
(bad)
(bad)
call
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
dec
adc
adc
jo
cmp
std
imul
(bad)
(bad)
dec
and
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
adc
(bad)
dec
ins
leave
dec
and
rcl
jmp
ja
das
aas
jns
push
std
jmp
mov
or
je
adc
xor
dec
lea
pusha
jle
xor
(bad)
(bad)
jmp
out
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
gs
(bad)
(bad)
(bad)
cmp
test
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
(bad)
(bad)
(bad)
push
pop
adc
inc
and
shr
ja
adc
out
movs
add
test
inc
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
daa
mov
pushf
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
xchg
(bad)
call
rcl
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
(bad)
push
dec
nop
cld
arpl
lods
mov
in
test
(bad)
(bad)
inc
es
scas
mov
(bad)
repz
cmp
call
imul
(bad)
(bad)
call
cmp
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
dec
(bad)
inc
arpl
ja
cli
xlat
dec
shl
out
stc
add
xlat
(bad)
(bad)
fist
xchg
adc
lea
or
mov
pop
inc
sbb
ins
je
aas
(bad)
(bad)
(bad)
inc
sub
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
(bad)
(bad)
(bad)
call
in
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
xchg
(bad)
int3
in
sub
xchg
mov
xchg
push
mov
repz
inc
gs
(bad)
(bad)
inc
lods
ins
dec
xchg
outs
jne
mov
call
or
push
aas
gs
add
in
mov
sbb
mov
daa
repnz
mov
mov
(bad)
(bad)
(bad)
(bad)
out
and
loope
or
mov
jle
shl
imul
inc
cmp
jmp
(bad)
pop
std
ja
fsub
push
jle
hlt
out
push
or
test
mov
adc
lock
int3
xor
ret
add
(bad)
jg
mov
push
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
xchg
test
or
out
loope
sbb
fs
xchg
push
or
cmp
jmp
mov
inc
pop
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
(bad)
(bad)
push
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
(bad)
(bad)
dec
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
(bad)
(bad)
(bad)
call
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
das
mov
mov
cmps
daa
aam
es
dec
dec
and
(bad)
jnp
out
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
(bad)
(bad)
inc
cs
enter
mov
shl
div
pop
scas
jb
xor
jbe
dec
(bad)
(bad)
(bad)
jmp
je
icebp
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xlat
ja
call
jnp
retf
mov
xchg
cli
fisub
cld
(bad)
mov
xchg
in
pop
push
repz
arpl
(bad)
push
popa
sub
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
add
scas
cli
and
mov
dec
fs
(bad)
call
fisub
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
(bad)
jmp
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
(bad)
(bad)
call
or
ror
adc
push
mov
cmp
pop
and
pop
in
xchg
(bad)
(bad)
(bad)
inc
xor
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
push
cld
mov
out
fldcw
jp
add
(bad)
(bad)
(bad)
(bad)
out
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
(bad)
(bad)
(bad)
cld
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
(bad)
(bad)
(bad)
push
ret
lock
adc
or
cmc
retf
sub
test
fnstcw
pusha
(bad)
(bad)
(bad)
(bad)
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
(bad)
(bad)
call
test
fdiv
shl
add
mov
jo
shl
pop
lds
adc
(bad)
(bad)
inc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
call
retf
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
sub
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
(bad)
jg
jmp
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
(bad)
(bad)
fisttp
adc
repz
mov
pop
mov
mov
sbb
mov
fisttp
(bad)
and
sbb
sbb
out
(bad)
rol
call
cmps
arpl
aad
or
test
mov
into
stos
movs
outs
stc
scas
jmp
(bad)
(bad)
(bad)
(bad)
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
inc
mov
(bad)
inc
mov
jl
stos
mov
les
mov
sbb
mov
cmps
mov
mov
(bad)
(bad)
(bad)
dec
cmpxchg
mov
punpckldq
xlat
and
adc
test
xchg
pushf
xor
push
pop
pop
fidivr
mov
or
mov
mov
jg
(bad)
(bad)
out
(bad)
bound
xor
xlat
cmp
or
outs
mov
loopne
xlat
add
mov
fucom
fbstp
pop
arpl
dec
lahf
call
adc
jno
jnp
fcomip
(bad)
dec
addr16
cmps
lods
jne
or
into
outs
es
lods
jg
sub
mov
xchg
(bad)
(bad)
(bad)
call
sahf
sbb
call
inc
mov
and
xor
pop
or
addr16
xchg
(bad)
(bad)
inc
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
aaa
dec
cld
mov
in
xchg
ja
inc
in
jbe
pop
mov
push
mov
xchg
lahf
les
xor
scas
push
push
dec
jg
outs
test
or
rcr
lahf
(bad)
(bad)
(bad)
call
dec
lea
mov
lahf
xchg
sbb
daa
sub
mov
inc
and
(bad)
xchg
test
call
(bad)
(bad)
call
and
nop
mov
mov
iret
push
retf
mov
ret
pusha
test
push
cli
push
out
pop
mov
test
(bad)
pop
cld
fcomip
out
imul
ret
ja
imul
setl
(bad)
jmp
(bad)
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
(bad)
(bad)
jmp
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
inc
nop
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
(bad)
(bad)
(bad)
in
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
(bad)
(bad)
(bad)
call
ss
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
push
aaa
out
mov
(bad)
jmp
cli
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
mov
mov
in
sbb
bound
and
inc
sbb
jmp
push
cld
inc
nop
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
or
inc
or
inc
loope
add
sub
scas
cmc
test
(bad)
(bad)
push
and
mov
mov
sbb
ror
sar
add
push
movs
(bad)
dec
sbb
sub
jns
and
dec
imul
cmc
xlat
jle
out
shr
sar
dec
ret
push
jp
jmp
fnop
add
mov
push
(bad)
and
stc
popa
call
rcr
mov
ss
or
sbb
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
(bad)
(bad)
call
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
dec
(bad)
(bad)
cmp
jbe
out
push
into
icebp
mov
inc
pop
hlt
(bad)
fild
jns
inc
xchg
push
xor
es
jmp
fdiv
(bad)
(bad)
(bad)
inc
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
(bad)
(bad)
call
jno
xor
push
ja
ss
adc
out
mov
loopne
jbe
(bad)
(bad)
(bad)
call
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
(bad)
(bad)
inc
es
jl
mov
pop
sbb
mov
repz
in
test
adc
push
jmp
mov
ret
add
cmp
cdq
in
or
call
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
mov
(bad)
(bad)
jmp
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
dec
pop
aam
icebp
retf
lahf
ret
xor
das
jo
adc
inc
add
push
ds
repz
sti
lds
icebp
aas
out
imul
pop
das
mov
gs
dec
ret
clc
push
or
cmp
rcl
cmp
cmc
dec
jns
mov
cmps
xor
outs
jo
push
fsubr
mov
jae
mov
mov
sar
xchg
mov
xor
xor
sub
cmp
popa
pop
out
jle
push
add
and
data16
push
dec
leave
and
cmc
(bad)
aam
popa
loopne
jo
daa
add
fadd
je
loopne
cmp
xor
sti
sbb
and
sub
dec
push
dec
dec
imul
jmp
pop
arpl
lock
ja
mov
sbb
cmp
scas
pop
data16
and
push
mov
jae
stc
dec
ficom
ds
js
adc
mov
push
adc
mov
add
mov
mov
dec
sub
inc
mov
dec
inc
dec
inc
push
(bad)
gs
js
aas
inc
ins
jae
addps
in
xchg
icebp
pop
inc
ins
inc
into
retf
(bad)
push
ja
loopne
pop
inc
js
into
push
adc
lahf
ins
jae
xchg
push
cmps
adc
or
cmps
push
dec
dec
push
push
sbb
fisubr
sbb
and
aas
sbb
es
xor
inc
outs
adc
dec
pusha
and
ret
fsubr
loop
sbb
test
and
aas
add
or
jns
or
or
mov
xor
jae
fild
data16
inc
add
add
add
xor
add
or
sbb
push
pop
(bad)
aam
push
add
jne
cmp
dec
jp
or
pop
mov
fs
add
ret
and
dec
sar
jns
je
add
(bad)
(bad)
or
cmps
cmp
(bad)
shr
fcom
push
les
gs
lahf
test
sub
arpl
sbb
popa
sub
neg
loopne
clc
add
inc
xchg
xchg
push
pop
sub
out
xor
dec
adc
or
loop
xchg
shr
mov
popa
xor
adc
popa
pop
sbb
mov
xor
jnp
movs
jns
fistp
push
je
cs
aaa
xlat
push
out
or
xchg
shl
outs
aas
xor
jne
xor
pop
add
adc
inc
(bad)
ja
outs
outs
test
ss
fs
mov
xor
jnp
test
push
mov
xor
push
and
push
xor
pushf
mov
mov
mov
xchg
or
call
fisubr
adc
jmp
pop
repnz
cmp
ins
jp
pop
inc
scas
sbb
xchg
pop
das
imul
push
push
or
sbb
pusha
aad
leave
nop
je
xor
or
mov
fnstsw
adc
xor
add
aaa
inc
jge
push
cmp
or
jae
xchg
and
xor
xchg
jne
popa
xor
arpl
rcl
sub
mov
in
sbb
or
add
fsubr
sbb
cmp
ja
inc
inc
fisttp
xchg
fisub
into
pop
dec
pop
and
dec
cmp
jbe
or
xor
sbb
or
not
jge
and
add
adc
add
pop
and
push
pop
mov
pop
push
js
sahf
push
push
pop
add
push
add
jne
stc
or
pusha
adc
add
inc
popf
xchg
jno
mov
add
inc
call
add
jle
push
inc
push
add
mov
test
dec
jae
add
std
adc
and
push
pop
scas
sub
sbb
xchg
test
pop
push
jbe
xor
add
es
inc
ror
sbb
movs
(bad)
and
ds
inc
pop
pop
pop
les
imul
pop
jg
jl
jle
jae
or
xchg
lock
cmp
punpckldq
dec
add
add
inc
sysret
stc
(bad)
xor
sub
inc
adc
inc
inc
xchg
cmp
sahf
mov
not
icebp
in
shl
push
add
stc
stc
inc
aas
sub
es
push
movs
aas
jnp
(bad)
fistp
add
mov
add
mov
xor
sub
adc
addr16
je
adc
out
aaa
popa
enter
mul
enter
inc
xchg
pop
cmps
call
jns
rcr
cmp
rcl
xor
jecxz
mov
arpl
outs
push
mov
rol
adc
add
lock
lds
call
aas
push
bound
test
cmp
jb
push
adc
mov
outs
jmp
stc
dec
pop
mov
imul
call
aam
ret
cmps
inc
inc
outs
aaa
(bad)
(bad)
dec
mov
push
add
xchg
test
jecxz
mov
outs
jp
repnz
cld
jmp
call
fnstsw
inc
imul
or
test
fwait
(bad)
fbstp
aaa
mov
add
cmps
test
mov
mov
jne
cmp
xor
inc
add
dec
clc
rcr
fisttp
mov
cmp
jge
int3
mov
mov
cmp
test
mov
jae
shl
xor
cmps
ins
(bad)
mov
cmps
dec
lahf
test
xor
dec
cmps
fiadd
mov
mul
or
push
(bad)
inc
adc
cmp
mov
or
add
cmp
cmp
(bad)
jmp
mov
xchg
nop
jbe
daa
sub
aad
mov
int3
(bad)
call
cmps
sub
jbe
stc
pop
out
shl
popf
push
sub
jg
(bad)
std
sbb
daa
mov
inc
outs
or
loope
nop
cmp
push
dec
fld
stos
sti
int
outs
xor
xor
outs
out
mov
cdq
test
sahf
fistp
cmp
fiadd
push
xor
fisttp
push
jno
mov
cmp
sahf
mov
xchg
xchg
sbb
mov
stos
or
jle
idiv
call
cmps
pop
mov
popa
sahf
enter
jmp
push
(bad)
mov
inc
lods
inc
mov
jae
mov
loope
gs
dec
iret
(bad)
(bad)
jmp
ss
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
(bad)
(bad)
in
xchg
inc
fldcw
jmp
(bad)
inc
pop
fistp
push
pop
xor
cmp
ja
cdq
scas
icebp
cmp
push
pushf
mov
int
aaa
(bad)
in
mov
aaa
or
stos
(bad)
stc
and
call
lahf
cmp
into
xchg
sub
scas
jno
nop
stos
(bad)
mov
xchg
les
ins
fwait
cmp
in
jnp
or
add
fistp
cwde
mov
pop
and
push
mov
jae
test
cmp
std
jns
imul
fwait
sahf
xchg
retf
xchg
ja
mov
call
data16
icebp
dec
sahf
cli
adc
or
scas
add
inc
sti
bnd
out
mov
push
int
pop
or
push
ror
int3
mov
scas
xor
cld
(bad)
call
or
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
pop
icebp
fwait
jmp
cmp
nop
out
fsub
mov
cdq
fbstp
or
jnp
pop
dec
sub
cmps
cmps
pop
cmp
movs
sti
fdivr
(bad)
fistp
pop
push
lods
xchg
rcl
pop
mov
test
jae
cwde
loop
(bad)
cmp
fwait
jnp
xchg
cld
pop
ror
idiv
mov
cs
mov
dec
or
fst
push
(bad)
(bad)
dec
and
cmp
pop
popa
out
sbb
out
test
xor
inc
outs
pop
jbe
cwde
(bad)
call
add
mov
fcom
das
cmc
cmc
es
or
cmp
scas
xlat
mov
aas
rol
(bad)
fild
fsubr
out
pop
adc
push
retf
pop
push
push
add
sets
sub
(bad)
(bad)
psubb
and
jg
cmp
call
aas
out
xor
xchg
push
repz
add
das
mov
mov
(bad)
jg
idiv
or
aas
adc
and
iret
mov
lds
enter
mov
aas
push
jp
cwde
cdq
cdq
leave
aas
sbb
loopne
pop
xor
or
out
push
scas
in
es
dec
inc
fsubr
jb
das
in
push
lods
jmp
nop
pop
xor
jmp
in
jmp
call
lods
bound
and
repnz
shl
mov
pop
jb
add
out
mov
enter
push
retf
pop
enter
push
out
inc
cs
mov
repnz
cs
adc
jecxz
jb
adc
jb
and
loop
nop
or
mov
enter
clc
loope
test
enter
pop
ss
pop
enter
loopne
inc
cs
cs
bound
add
cmp
test
(bad)
sahf
dec
jle
daa
leave
fidivr
js
fwait
jp
aas
xlat
out
outs
(bad)
mov
and
ret
cmps
aas
shl
test
pop
inc
adc
xor
mov
(bad)
or
jo
push
xchg
fwait
pop
inc
mov
rcl
sar
sti
jmp
add
pusha
add
aas
inc
push
push
cmp
ror
ins
xchg
mov
(bad)
scas
les
dec
jns
ds
jo
and
(bad)
aas
inc
cmp
add
stc
call
jl
xlat
sar
dec
js
and
mov
(bad)
fsub
sahf
sub
dec
les
mov
sub
std
(bad)
mov
jbe
add
aas
in
(bad)
xlat
push
(bad)
push
push
push
or
push
bound
inc
add
call
pop
addr16
aas
(bad)
(bad)
cld
call
adc
test
sub
jmp
aaa
call
push
mov
inc
out
ds
jmp
and
xchg
into
aas
sbb
xchg
and
xor
outs
fdiv
test
repz
iret
pop
mov
jmp
or
out
xor
sahf
(bad)
(bad)
call
sar
mov
or
sbb
js
sti
sub
test
sti
fistp
jmp
adc
and
dec
mov
aas
lahf
jmp
add
pushf
ret
aam
(bad)
int
or
adc
sbb
pushf
or
push
lock
les
mov
fwait
daa
clc
dec
and
test
aas
sbb
mov
das
jb
or
add
cmp
aas
loop
outs
inc
jbe
neg
and
cwde
movs
aas
mov
mov
inc
addr16
(bad)
inc
rcr
push
pop
data16
pusha
add
add
mov
imul
mov
inc
repnz
call
cld
cdq
fidivr
adc
adc
fstp
sti
fwait
outs
(bad)
(bad)
mov
xor
cmp
daa
sahf
int
push
fwait
xchg
outs
mov
(bad)
(bad)
out
pop
cld
mov
mov
(bad)
adc
nop
push
fnstsw
(bad)
cmove
fld
push
shl
stos
aam
sbb
sub
js
sar
mov
aas
mov
mov
ins
movups
aas
fdiv
aaa
popf
ja
sub
loop
jg
pushf
enter
(bad)
push
adc
movs
and
mov
cwde
dec
ins
sub
push
fadd
push
jb
(bad)
out
push
mov
cmp
cmp
xchg
pushf
mov
outs
dec
cs
jmp
loope
out
sub
adc
mov
int
jg
shl
movs
or
movs
test
sub
div
(bad)
outs
addr16
stos
cmp
mov
loop
jnp
(bad)
stc
dec
outs
push
cld
cmp
push
sahf
ja
jns
xor
sbb
add
sub
cmp
xor
pop
jecxz
jnp
outs
lock
fwait
jg
test
dec
push
mov
inc
sbb
int3
in
inc
xchg
mov
mov
fist
call
push
test
int
sub
sbb
aas
test
push
mov
fist
push
lods
retf
aad
sub
xor
call
outs
fs
xchg
test
adc
xor
shl
les
aas
leave
mov
push
sbb
xchg
ins
stc
fwait
(bad)
fistp
jnp
cmp
add
pop
push
stos
cli
arpl
jp
aad
fsubr
sbb
sub
inc
fimul
add
lods
cs
xor
fimul
leave
ds
sti
out
mov
xchg
jae
push
push
inc
sub
cli
jle
ss
inc
daa
dec
dec
inc
mov
and
movs
and
and
fisub
xchg
daa
aaa
xlat
dec
imul
arpl
and
ins
daa
adc
daa
ja
dec
pop
bound
pop
add
sub
retf
pop
pop
pop
push
mov
popf
cmp
xor
ins
in
addr16
cmp
iret
push
adc
xor
arpl
int3
sbb
add
outs
xchg
fisub
jbe
(bad)
push
push
imul
aad
icebp
and
pop
add
ins
f2xm1
pop
cmp
push
push
adc
mov
dec
lahf
aaa
xchg
and
rcr
pop
pop
jmp
xor
cmp
add
cmp
loopne
jbe
nop
push
sub
or
mov
mov
data16
add
xchg
fst
mov
test
push
jne
repnz
push
push
jnp
mov
outs
inc
mov
fild
sbb
jg
jmp
dec
sub
or
adc
pandn
or
outs
mov
push
shr
in
xchg
loope
les
fild
loop
jbe
sub
or
push
mov
xlat
arpl
nop
outs
xchg
daa
xchg
mov
fisub
daa
popw
pop
cmp
sub
cmp
ds
and
sahf
out
sub
es
(bad)
out
push
jle
sub
sub
pop
add
xchg
jle
sub
sub
add
cmp
push
add
inc
dec
dec
and
inc
je
lahf
cmp
or
mov
stos
loopne
addr16
jb
imul
push
adc
xor
in
cld
sbb
ins
mov
pop
movs
dec
jmp
mov
js
jbe
push
out
sub
push
mov
push
in
int3
cli
cmp
repz
int
aaa
ds
mov
jnp
mov
test
iret
repz
je
ins
sahf
out
iret
pusha
pop
push
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
and
out
sahf
and
adc
or
lahf
out
or
cld
int
repz
repz
lock
call
iret
fmul
les
repz
pusha
inc
and
jns
cmps
stc
loopne
mov
jns
out
sbb
add
retf
mov
push
enter
mov
jge
out
inc
sbb
retf
test
sahf
out
test
or
leave
ficom
xor
inc
add
dec
(bad)
mov
inc
pop
dec
push
pop
sub
dec
add
jae
ss
js
pop
(bad)
pop
add
and
aas
adc
aad
in
push
psubsb
outs
fstp
call
sub
and
adc
pop
add
xor
pop
ins
loop
mov
xchg
pusha
gs
mov
push
pop
fimul
arpl
jo
arpl
outs
jae
sbb
inc
or
jle
or
or
mov
add
retf
cmp
push
pop
add
mov
stos
jnp
dec
out
daa
das
popa
adc
js
jns
jle
sub
cmp
xor
dec
addr16
ficomp
in
test
jbe
cwde
push
cmp
inc
js
xor
cmps
test
lahf
mov
and
imul
pop
sub
and
daa
push
and
pop
out
mov
dec
push
es
(bad)
nop
mov
sbb
push
loopne
inc
pop
xor
inc
rcl
mov
loope
jo
xchg
mov
inc
jmp
sbb
pop
sbb
cmps
test
inc
popa
fs
sub
in
cmp
xor
mov
push
jge
adc
aas
je
fisub
jbe
ins
dec
inc
push
pop
jnp
pop
aad
sbb
mov
jno
jmp
aam
and
lahf
mov
dec
push
dec
loope
mov
mov
xor
pop
xor
and
pop
add
aaa
cmp
mov
aaa
aas
push
inc
xchg
mov
pop
mov
push
sbb
dec
add
mov
int3
in
jnp
or
psubsw
sar
sbb
hlt
mov
test
sub
mov
jo
mov
daa
pop
lea
jns
int3
add
outs
adc
adc
push
add
in
outs
aad
add
xchg
inc
add
outs
pop
xor
sub
cmp
jmp
xor
inc
pop
mov
mov
sub
sti
fwait
mov
jb
push
pop
js
jo
add
fcomp
in
push
and
and
add
adc
add
add
and
or
add
mov
mov
dec
cmp
add
add
shr
lods
popf
cs
add
rol
mov
aaa
add
pop
ins
add
and
popf
add
add
add
mov
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
push
add
ret
push
lds
stos
dec
aas
clc
pop
add
dec
dec
cmp
cmp
ficom
and
adc
scas
imul
push
or
mov
cmp
outs
jbe
dec
cwde
xchg
call
mov
push
jne
jne
dec
jne
xchg
outs
pop
ret
pop
inc
and
dec
dec
jg
imul
bound
out
ficomp
adc
into
cmp
xchg
xchg
sub
inc
fisub
imul
lahf
mov
jae
push
gs
fstp
adc
outs
and
(bad)
into
cmp
ja
pop
dec
inc
aas
test
sub
pop
loopne
scas
or
out
add
sbb
jg
(bad)
cld
sti
or
dec
jno
icebp
pusha
inc
mov
clc
ret
movs
add
mov
or
imul
sahf
out
xor
cli
jne
popa
dec
push
or
dec
stc
gs
xor
pusha
das
imul
add
xor
push
dec
inc
dec
add
dec
dec
inc
add
or
add
fsubr
clc
jo
jo
push
adc
daa
push
xchg
loope
(bad)
test
pop
sub
and
cmp
mov
lds
ss
fucomp
mov
pop
clc
bound
jns
mov
mov
data16
(bad)
or
test
push
fild
add
fs
sbb
(bad)
jno
xlat
xor
iret
shl
pop
aaa
paddq
out
ss
mov
push
push
and
adc
call
sbb
mov
push
inc
test
outs
in
das
mov
inc
mov
std
jle
sub
(bad)
cmp
shl
stos
pop
or
aaa
push
outs
pop
pop
push
pop
push
mov
or
and
push
and
imul
(bad)
xor
ss
jae
daa
and
mov
and
xor
sub
add
dec
inc
jne
fs
popa
pusha
mov
clc
fistp
jo
outs
jae
cs
bound
dec
shl
loopne
inc
loopne
sbb
ds
fistp
(bad)
pop
sbb
fs
sub
xor
pop
idiv
addr16
jo
daa
sahf
imul
push
jl
jo
jns
in
pusha
mov
enter
xchg
in
nop
or
mov
dec
loop
rcr
add
hlt
fs
ds
dec
loop
loop
loop
imul
hlt
addr16
sahf
or
mov
test
mov
enter
call
and
fdiv
daa
xor
cmp
mov
iret
mov
addr16
loopne
pop
enter
and
test
js
or
push
mov
add
leave
out
jecxz
jecxz
sbb
ins
mov
xor
add
les
in
xor
ds
jb
cld
pop
dec
in
shl
pop
ins
in
pop
iret
mov
pusha
lahf
ja
jl
pop
enter
mov
sbb
pushf
jl
in
in
mov
out
dec
in
mov
ja
fcom
in
in
in
pop
jb
and
nop
mov
daa
adc
inc
je
jmp
pop
outs
out
sahf
and
daa
pop
sahf
outs
ins
ror
xchg
out
js
jl
out
cs
in
ror
das
in
nop
mov
clc
or
mov
out
clc
cdq
nop
int
add
inc
out
mov
repnz
add
addr16
or
(bad)
xor
cwde
mov
xor
xchg
out
sahf
fs
call
rcr
(bad)
call
outs
ins
ror
test
inc
jo
sub
imul
enter
jnp
and
in
call
enter
in
mov
and
add
adc
outs
xor
xchg
inc
out
outs
mov
sbb
jmp
push
or
push
jo
cmps
sbb
or
pop
cmp
push
mov
ficomp
push
add
jae
push
mov
ins
pop
add
adc
cwde
in
and
hlt
rol
mul
push
push
push
xor
das
inc
jmp
es
jmp
inc
cwde
lahf
sbb
xchg
add
ja
mov
scas
call
cmp
aas
push
jmp
jmp
or
xchg
cmp
jl
js
daa
add
ins
daa
aas
add
out
fsubr
hlt
mov
fsubr
and
xor
cmp
call
addr16
and
jns
pop
dec
ins
jl
and
jnp
add
daa
sub
push
fadd
hlt
in
(bad)
out
pop
or
mov
add
js
adc
out
and
scas
in
adc
inc
ss
push
in
pop
in
cld
nop
out
mov
(bad)
sub
mov
in
pushf
movs
sub
pop
repnz
enter
in
sbb
sbb
sub
imul
fs
test
(bad)
clc
jl
lods
fs
cmps
je
push
lds
pop
inc
sahf
or
ja
shl
int3
shl
mov
out
cmp
mov
pop
xor
sub
out
out
sub
ja
sahf
pushf
or
inc
sahf
lods
mov
nop
pushf
pusha
in
out
outs
xchg
addr16
cld
push
adc
cmps
pusha
add
lahf
or
dec
enter
lock
and
xchg
stos
sub
int3
test
push
mov
lock
mov
daa
ds
pop
pop
call
pop
fdiv
push
xor
das
inc
daa
jbe
pop
pop
outs
jmp
mov
lods
fistp
addr16
jl
aas
add
fs
pop
enter
les
enter
hlt
add
jb
mov
xchg
hlt
addr16
ds
les
dec
lods
sub
cmp
push
iret
aam
scas
add
cwde
repnz
mov
cmp
mov
or
jmp
repnz
or
jb
iret
test
in
jae
ds
push
cmp
dec
rep
sbb
pop
push
or
and
repz
mov
cwde
fsubr
push
enter
adc
cwde
js
xchg
outs
mov
out
aaa
sub
xchg
mov
daa
addr16
imul
adc
das
(bad)
push
outs
pop
hlt
shl
sub
push
loopne
xlat
hlt
out
sub
rcr
ret
call
xor
aas
imul
dec
lahf
ja
sbb
pushf
neg
cmc
cmp
cmc
dec
xchg
daa
iret
dec
sahf
imul
add
js
in
pushf
loopne
cs
xchg
out
clc
pushf
loopne
enter
sub
cmp
inc
push
pusha
das
int3
daa
mov
call
mov
inc
mov
xor
push
(bad)
mul
int
div
lahf
and
or
lea
div
daa
aas
cdq
lods
lods
add
addr16
cmp
in
pushf
movs
fs
cs
mov
aaa
and
push
lock
mov
pop
mov
push
outs
test
add
clc
dec
pop
push
cmp
push
dec
mov
aas
fsubr
mov
mov
sub
mov
movs
clc
mov
xchg
or
mov
mov
add
pop
push
lods
in
aaa
and
and
stc
(bad)
nop
adc
stc
dec
mov
or
stc
or
cdq
nop
out
mov
stc
daa
inc
push
sub
stc
fisttp
repz
mov
push
cmp
out
pop
mov
(bad)
addr16
in
mov
rcl
nop
or
mov
outs
inc
les
sar
inc
inc
aas
push
pop
inc
mov
cmp
sti
mov
sti
sbb
mov
addr16
cmp
sahf
or
pop
pusha
cmp
or
sub
jle
cmps
cmps
out
push
les
loopne
fisttp
sub
jns
mov
mov
mov
inc
cmp
cld
iret
dec
mov
push
mov
mov
or
shr
jg
inc
or
push
cmps
and
outs
in
int
stc
enter
cld
cld
sbb
outs
or
ret
sbb
std
push
xor
iret
outs
dec
es
nop
test
xchg
ret
mov
clc
push
mov
ret
push
push
cmps
and
outs
fiadd
(bad)
adc
xor
mov
(bad)
out
ja
enter
lahf
lods
outs
ins
inc
loope
jl
outs
dec
and
mov
aaa
int3
push
hlt
jg
pop
ins
fadd
fwait
nop
int
outs
or
push
xchg
push
(bad)
out
ja
pushf
pusha
clc
lods
lahf
xor
outs
movs
jmp
outs
fnstcw
adc
hlt
jmp
xchg
push
aad
push
add
not
mov
test
stos
shl
mov
xor
rol
xchg
imul
mov
das
adc
mov
call
fcomp
nop
stos
lahf
mov
and
add
mov
mov
or
in
nop
or
(bad)
lods
mov
push
les
repz
sub
(bad)
xor
hlt
add
or
aas
ds
jb
(bad)
hlt
pop
cmp
nop
xchg
addr16
dec
push
pop
loope
lods
sub
add
mov
movs
push
(bad)
(bad)
push
enter
das
mov
iret
test
in
mov
mov
aam
fcomp
xor
xor
fsub
xor
xchg
ins
dec
enter
add
dec
call
sub
xchg
rol
dec
sub
adc
mov
add
push
enter
sbb
cwde
imul
(bad)
outs
das
cwde
daa
shr
dec
call
fs
ds
cs
(bad)
dec
shl
inc
movs
mov
addr16
out
pop
adc
xchg
ins
call
clc
ds
enter
add
mov
add
xchg
mov
outs
xchg
mov
sahf
or
test
mov
loopne
icebp
mov
add
mov
fwait
out
dec
ss
fs
sbb
sub
add
outs
(bad)
out
or
xor
jl
push
mov
push
(bad)
push
add
pop
fwait
inc
and
xchg
dec
add
ins
rol
imul
repnz
mov
mov
add
(bad)
mov
pusha
jo
in
jns
movs
inc
ss
push
mov
outs
int3
scas
in
pop
add
mov
loopne
or
jge
and
inc
or
and
sbb
sbb
jo
int3
add
mov
hlt
or
mov
int3
fstp
or
dec
or
cwde
xchg
mov
push
add
loopne
pushf
or
mov
push
or
dec
ss
fmul
call
jb
scas
int3
or
cmp
sub
xor
sbb
iret
mov
inc
outs
xchg
cmp
jae
je
or
fs
dec
or
pop
mov
rcr
push
repnz
pop
add
mov
or
or
or
fs
mov
pop
bnd
mov
pusha
jo
pop
enter
repnz
enter
mov
test
loopne
call
sahf
lock
or
aad
fadd
fnsave
add
scas
sub
pop
mov
push
scas
pop
push
je
sub
(bad)
push
repnz
jns
in
mov
mov
movs
jo
cmp
adc
and
fiadd
jns
dec
jo
jg
enter
mov
or
in
push
jl
mov
out
scas
fsubr
aam
lods
daa
xchg
inc
sbb
push
add
dec
sub
sbb
jg
ins
pop
push
mov
dec
ss
push
mov
lahf
pushf
fucomi
mov
test
mov
jb
je
add
test
enter
lock
adc
pop
jb
dec
fdiv
add
and
dec
push
fs
fsubr
push
ja
inc
call
add
nop
pfcmpgt
or
enter
jo
daa
inc
mov
int
adc
je
nop
out
sbb
pushf
je
mov
pushf
xor
in
mov
adc
pop
leave
cmps
imul
call
stos
imul
enter
sbb
sub
cmp
shl
aaa
dec
dec
and
shr
shl
js
mov
or
adc
mov
cmp
adc
adc
mov
pusha
ins
outs
fistp
or
mov
jge
sbb
sub
lahf
dec
cmp
mov
fbstp
dec
pop
jb
iret
test
dec
clc
pop
enter
test
or
iret
mov
bound
enter
scas
mov
adc
add
pop
adc
sbb
jle
or
mov
add
pop
push
cmp
dec
sub
cwde
call
and
dec
movs
test
dec
lahf
in
shl
iret
clc
or
in
enter
call
adc
movs
test
pop
adc
push
xor
imul
mov
iret
test
add
out
lock
inc
and
jb
loopne
pop
pop
icebp
outs
inc
pop
mov
int
stc
dec
adc
rcr
cdq
mov
outs
in
dec
enter
adc
or
push
int
cmps
enter
shr
adc
iret
push
cmps
enter
in
lock
cs
push
mov
test
push
adc
mov
adc
call
les
mov
cwde
jo
out
cmp
add
and
adc
and
hlt
outs
mov
push
push
pop
pusha
push
js
or
sub
imul
test
mov
sub
retf
push
pop
xor
nop
int
iret
adc
and
pushf
cmps
sahf
outs
sub
push
outs
jnp
xlat
daa
add
push
push
stos
or
addr16
in
dec
sbb
sbb
push
enter
lahf
in
and
cmp
clc
or
or
popf
or
shr
sbb
xchg
pop
pushf
les
jg
xchg
repnz
(bad)
push
jg
cwde
mov
xchg
cmp
pushf
mov
jns
and
mov
out
loopne
cdq
or
out
enter
add
inc
loopne
sbb
push
push
sbb
and
dec
dec
dec
mov
cmps
sbb
push
adc
dec
jmp
test
fld
cs
hlt
dec
jl
in
lahf
aam
and
adc
sbb
iret
mov
pusha
lahf
ja
pushf
je
jmp
sbb
lahf
or
les
pop
in
dec
adc
aam
call
push
repnz
in
xchg
int
jns
sbb
sbb
sbb
add
fimul
sbb
or
sub
jno
cmps
push
(bad)
mov
jo
inc
int3
inc
lock
lock
dec
inc
inc
ds
xor
mov
sbb
xor
lahf
or
sbb
adc
aaa
jo
sbb
nop
pop
pusha
sbb
stos
cmp
push
jae
add
jmp
in
push
adc
sub
jl
or
dec
mov
pop
daa
mov
push
je
push
bnd
xchg
add
leave
jae
call
sub
daa
dec
pop
mov
and
movs
push
or
fwait
adc
sbb
or
hlt
cmps
push
dec
pop
in
sahf
or
push
bnd
or
mov
pop
lods
shl
clc
lock
add
adc
clc
mov
and
lock
lods
inc
and
xchg
cmp
push
push
imul
dec
cwde
cwde
and
test
jg
push
mov
das
jae
add
xchg
shl
addr16
push
cld
daa
aas
adc
mov
sbb
xor
jno
inc
ss
and
pop
push
pop
add
dec
outs
movs
cmp
lock
mov
lock
mov
fild
addr16
push
clc
lahf
dec
and
ja
cwde
sub
or
cwde
cmps
mov
jo
js
(bad)
fstp
add
mov
xlat
sahf
mov
xchg
pusha
pop
enter
test
and
pop
repnz
add
adc
jae
pop
enter
cs
in
and
xchg
iret
mov
inc
outs
xchg
mov
jb
jae
pushf
test
stos
pop
enter
nop
or
xchg
repz
retf
add
ss
add
cmps
stc
cmp
je
cmc
sbb
cmp
out
sahf
pop
sub
aam
cmp
sbb
dec
repz
push
cdq
cmp
push
sub
jns
ds
loope
aas
bound
pusha
inc
jnp
test
xor
mov
in
inc
sahf
cmps
stc
xor
add
jbe
ds
sar
push
mov
fucom
imul
xor
rcl
and
out
call
jo
out
repz
idiv
dec
ds
xchg
jns
iret
retf
push
xchg
(bad)
out
cmp
sbb
scas
repnz
sahf
mov
es
jno
iret
sahf
cmps
stc
cmp
sbb
cmp
repz
sbb
mov
stc
inc
push
call
iret
shr
jecxz
push
xchg
imul
push
mov
cmp
out
xor
dec
jb
out
ds
mov
jno
sar
stc
imul
pmaxub
ins
mov
sahf
push
pop
test
pop
push
mov
out
stos
(bad)
std
cmp
jns
out
mov
pusha
bound
out
and
js
fidivr
out
bound
push
in
cmps
fnstcw
dec
gs
sbb
repz
out
push
jl
xlat
cli
adc
lahf
cmps
stc
cmp
pop
imul
ins
stc
cmp
ja
push
add
fld
out
sahf
cmps
pop
xchg
cmp
push
outs
pop
test
cmp
inc
je
in
mov
cmp
das
jbe
leave
and
call
fadd
jp
repz
aas
jae
out
xor
sahf
ja
ja
jl
push
outs
retf
repz
sar
xchg
sahf
out
jle
pop
and
cmp
sahf
out
cmp
ficom
adc
int
jns
out
lea
out
repz
sub
sar
out
mov
iret
repz
aas
pop
jne
stos
(bad)
sahf
cmps
stc
cmp
je
lahf
out
scas
leave
in
pop
test
call
xor
xor
out
jecxz
xchg
out
mov
in
mov
repz
pusha
mov
out
call
es
repz
lea
ds
and
dec
repz
pop
popf
fisub
xchg
jl
cmp
out
xchg
inc
push
stos
xchg
dec
xchg
xchg
int3
xor
cmps
stc
pop
xchg
inc
jge
cwde
mov
popa
cdq
mov
ds
mov
mov
not
(bad)
sahf
lahf
push
aas
pop
jne
repz
nop
stos
(bad)
jmp
jns
pop
cmp
mov
cmp
repz
adc
cmp
repz
mov
sahf
out
mov
out
ss
jmp
iret
sar
iret
pop
movs
cmp
repz
test
jns
out
dec
fs
mov
mov
pop
cmps
push
inc
cmps
mul
test
inc
pop
ja
jns
iret
rep
enter
lods
repz
repz
stos
push
sbb
aam
or
jl
pop
mov
lods
sbb
repz
mov
mov
lods
enter
out
sbb
scas
lahf
cmps
stc
xor
inc
mov
test
fidivr
mov
inc
pop
jbe
repz
xchg
lods
sti
push
mov
dec
cmp
repz
sbb
repz
or
jns
out
cwde
mov
adc
lgs
outs
and
push
jnp
rcl
push
ins
(bad)
retf
or
cmp
gs
xlat
adc
xor
sbb
out
mov
jl
iret
repz
pop
mov
lahf
out
int3
or
cmp
cmp
repz
sub
lahf
cmps
pusha
aam
lds
jns
iret
loopne
(bad)
dec
mov
enter
dec
rol
mov
jns
out
int3
pop
(bad)
retf
stc
cmp
cmp
xchg
sar
cmps
inc
iret
popf
ror
out
call
jne
sar
bound
xor
cmps
push
cdq
mov
aam
jns
cmps
and
cwde
mov
mov
jno
pop
(bad)
out
push
mov
int3
jmp
xlat
ins
sar
cmp
repz
sbb
cmps
jae
pop
fidiv
iret
rcl
fisttp
sar
mov
stos
or
inc
test
lahf
cmps
stc
add
jo
and
jne
lahf
cmps
stc
sub
(bad)
loope
loope
cmp
out
retf
mov
adc
ja
repz
out
out
push
rol
xor
fnsave
cmps
stc
inc
jmp
cmp
repz
in
jmp
jge
cmp
out
or
dec
jecxz
in
repz
cmps
push
add
xor
cmps
stc
cmp
je
icebp
adc
das
pusha
adc
out
das
sbb
adc
dec
jl
xlat
sbb
push
dec
push
lock
xchg
iret
test
jge
ja
scas
pop
jecxz
inc
aaa
leave
push
add
sar
rol
(bad)
jbe
sbb
fs
add
daa
aaa
pop
aaa
pop
aaa
ja
les
cmp
pop
push
cmp
(bad)
mov
jae
adc
retf
lock
inc
adc
cs
push
xor
sar
cld
pushf
in
jae
pop
mov
in
xchg
mov
pop
push
cmp
retf
lea
sbb
and
dec
add
call
in
or
xlat
push
inc
pop
movs
mov
dec
loopne
mov
lods
outs
lock
add
inc
prefetchnta
cmps
call
dec
sub
dec
iret
adc
in
pop
xor
pop
dec
xor
jl
add
adc
mov
jl
lods
pop
pop
pop
das
(bad)
xor
daa
daa
iret
rol
or
mov
jne
xor
enter
ret
in
xchg
(bad)
pop
xchg
daa
mov
out
push
bswap
call
cmp
mov
jg
sbb
idiv
outs
pusha
xor
and
adc
inc
adc
dec
mov
dec
dec
leave
pop
daa
movs
xor
xlat
movs
loope
repnz
sbb
jne
dec
ss
(bad)
das
mov
out
in
or
out
xor
and
ds
cmp
sub
adc
xor
mov
push
xor
cmp
jno
pop
iret
repz
add
shl
mov
out
push
psubusw
daa
daa
daa
leave
xchg
lahf
cmps
mov
repnz
mov
mov
into
cld
cmp
(bad)
push
dec
and
adc
lahf
sub
jb
dec
xor
xor
xor
inc
dec
and
push
sub
push
cmp
ins
xor
add
and
and
add
int3
jns
iret
repz
mov
xchg
add
pop
cmps
push
imul
xchg
mov
mov
(bad)
iret
xlat
fistp
idiv
dec
dec
inc
sahf
pop
cmp
jns
dec
dec
dec
dec
imul
dec
pop
sbb
daa
pop
cmp
leave
leave
das
aaa
aas
and
xlat
icebp
pushf
push
add
mov
xchg
pushf
in
mov
ss
loopne
fnsave
add
and
ss
mov
js
add
and
cmp
mov
nop
ret
inc
cmp
scas
call
mov
dec
dec
inc
scas
sbb
inc
and
ins
aaa
xor
mov
cmp
jns
xchg
jae
fistp
push
out
sahf
out
pop
scas
or
or
jns
in
xlat
jg
push
push
xchg
jg
sahf
xchg
out
xchg
adc
jns
cmps
cmp
inc
add
iret
repz
out
daa
pop
ds
sbb
jns
jnp
jmp
push
pop
sbb
jno
mul
and
cmp
fcomp
inc
ins
mov
mov
nop
(bad)
cwde
ds
in
dec
jb
ds
(bad)
ror
fnstenv
pushf
in
xchg
cld
add
or
xor
push
out
xchg
dec
addr16
(bad)
fld
xchg
ins
cmp
cmp
inc
pop
int3
cmp
nop
fist
xor
int
inc
add
xlat
popf
push
(bad)
adc
mov
push
imul
xlat
add
loopne
pop
adc
shl
outs
jge
test
(bad)
repnz
daa
xchg
popf
push
movs
mov
mov
aad
fnstsw
cmp
cmp
mov
jo
(bad)
pop
loopne
jns
loope
cmp
test
xchg
out
add
aaa
sbb
inc
lahf
xchg
iret
mov
cmp
repnz
daa
or
adc
push
inc
out
sbb
sub
inc
aas
push
add
dec
push
push
out
or
pop
scas
iret
adc
xor
push
lahf
ds
push
jb
out
lods
cmp
cmp
in
cld
cwde
inc
sahf
add
adc
jo
cmp
test
push
and
mov
xchg
and
and
pop
and
cmp
xchg
(bad)
mov
jg
jb
popa
mov
pop
inc
pushf
pushf
fsub
popa
punpckhwd
pushf
pushf
pushf
pushf
or
scas
rcl
push
fnstcw
xchg
xchg
loope
icebp
adc
leave
repz
inc
or
sub
leave
leave
leave
xor
adc
iret
leave
leave
leave
and
push
add
mov
adc
dec
jp
sbb
mov
popf
push
enter
cmp
and
jmp
cwde
xor
inc
sbb
pop
sub
sub
ds
cmps
shl
jo
add
cmp
or
inc
and
inc
iret
repz
mov
inc
inc
push
push
dec
pop
pushf
je
inc
addr16
push
maxps
pushf
pushf
pushf
outs
ja
xchg
mov
pushf
mov
(bad)
int3
pushf
pushf
pushf
pushf
aam
out
dec
inc
sahf
pushf
cli
add
adc
sbb
dec
dec
dec
inc
dec
push
pop
dec
dec
dec
dec
data16
jbe
inc
lds
(bad)
pop
xchg
daa
dec
stos
pop
add
adc
lods
dec
enter
pop
(bad)
adc
scas
add
ja
inc
jb
and
js
jb
and
jb
iret
adc
xchg
or
inc
inc
pop
imul
imul
or
add
inc
pop
jb
cmp
cmp
dec
andnps
iret
jae
pop
gs
ins
jne
cmp
daa
jge
scas
dec
in
xchg
imul
dec
or
sub
lock
inc
add
addr16
cmp
fstp
shl
xor
cs
fmul
loopne
xchg
call
in
lock
mov
(bad)
push
test
popa
pop
xchg
inc
repnz
inc
in
pop
fstp
inc
jo
dec
inc
jmp
neg
inc
pop
imul
and
pop
pop
adc
add
ds
jecxz
sub
arpl
ja
inc
and
repnz
pop
or
mov
pop
push
add
jno
sub
xchg
inc
repnz
cmp
adc
xlat
leave
outs
pop
or
inc
or
inc
cmp
cdq
dec
xchg
cdq
mov
test
leave
and
and
xchg
dec
pushf
in
pushf
pushf
pushf
pop
fsub
in
hlt
inc
sahf
pushf
pushf
hlt
cld
add
pushf
in
pushf
ja
sub
je
mov
inc
das
inc
imul
add
(bad)
push
xor
inc
inc
pop
dec
in
imul
jb
jb
xor
jb
mov
add
xchg
mov
leave
xchg
pop
inc
mov
vpmullw
ffree
or
pop
in
ins
pop
fs
push
fsub
in
stc
add
mov
inc
jbe
dec
pop
sahf
pop
push
add
movaps
adc
or
xor
ins
xchg
daa
xchg
pushf
ins
inc
mov
inc
dec
dec
dec
es
pop
arpl
dec
dec
dec
imul
dec
ror
cld
and
repnz
or
in
in
sahf
cmps
scas
mov
add
(bad)
jo
leave
and
test
xchg
daa
daa
daa
pop
loope
icebp
stc
cdq
xchg
daa
daa
stc
add
jb
push
bnd
dec
push
dec
cmp
cmp
and
sub
cmps
sub
add
inc
push
repnz
jb
pop
leave
leave
and
daa
daa
daa
outs
ja
jg
pop
and
xchg
jae
inc
dec
jb
dec
fs
sub
pushf
pushf
pushf
dec
stos
mov
ret
pushf
pushf
ret
jne
in
sub
mov
cmc
std
or
prefetchw
enter
cmp
dec
in
mov
cmp
xor
dec
jb
xor
dec
dec
dec
push
dec
cmps
in
jae
mov
cs
xchg
cld
les
dec
dec
dec
dec
or
inc
test
dec
mov
cmp
cmp
mov
repnz
(bad)
fistp
mov
or
aam
in
xchg
stc
add
dec
adc
in
shr
dec
unpckhps
leave
and
dec
dec
xchg
pop
dec
leave
leave
enter
inc
dec
pop
enter
push
pop
dec
and
cdq
xchg
jl
sbb
in
pushf
pop
and
xchg
xchg
xchg
lahf
xor
sub
jge
dec
movs
in
and
dec
ret
in
in
fcmovu
loop
dec
leave
or
das
xchg
xchg
dec
hlt
add
mov
add
jo
dec
paddsw
jns
leave
ins
dec
mov
dec
in
in
dec
push
pop
pusha
leave
or
in
push
xchg
dec
hlt
cmp
add
daa
daa
daa
adc
and
daa
mov
dec
jb
jl
les
(bad)
fiadd
out
in
cmps
in
add
push
add
inc
jb
push
adc
mov
dec
push
add
repnz
rdtsc
dec
push
mov
mov
out
push
mov
xchg
mov
pushf
jg
push
push
movs
push
rol
dec
mov
mov
and
push
leave
leave
inc
jb
push
mov
leave
mov
cmpps
loopne
fisttp
in
mov
xchg
in
cmc
std
std
pushf
xchg
adc
add
push
adc
xchg
xchg
js
inc
push
sub
sahf
fnstenv
ja
fistp
add
in
shl
enter
add
daa
daa
pop
imul
pop
and
daa
or
dec
inc
push
mov
cmp
cdq
dec
scas
mov
add
cmp
mov
in
push
repnz
mov
stc
ror
add
push
add
dec
syscall
(bad)
hlt
add
xchg
inc
xchg
bswap
xchg
addr16
push
or
xchg
adc
cmp
inc
adc
push
push
scas
daa
nop
dec
cmp
fs
cmps
xchg
add
cmp
das
daa
daa
pop
leave
clc
xchg
daa
lahf
xcrypt-ecb
cmps
(bad)
cmp
push
mov
adc
pushf
pushf
pushf
pushf
(bad)
loop
xchg
sub
lock
clc
jo
cmp
inc
push
or
dec
jns
xor
das
dec
pop
push
add
cvtps2pi
cmp
adc
cs
or
nop
push
pop
sahf
out
fisttp
pusha
pop
push
cmp
js
or
cmp
pop
call
jb
pop
das
sub
out
jbe
leave
stos
mov
mov
or
inc
fwait
in
dec
dec
test
lock
mov
out
idiv
sahf
dec
fmulp
push
push
push
push
add
pop
dec
dec
and
dec
push
push
mov
pop
mov
push
pop
in
xchg
adc
dec
push
push
push
shl
pop
inc
adc
add
shr
pop
sbb
sahf
out
and
dec
dec
movs
lods
inc
jo
imul
sahf
cmp
cmp
pop
aas
add
pop
adc
and
sahf
and
mov
repnz
repnz
adc
dec
push
cmp
pop
pushf
pusha
mov
arpl
mov
xchg
cmp
outs
cmp
mov
push
ja
add
sub
jb
dec
push
push
out
icebp
push
pop
inc
push
inc
ss
leave
and
in
cmps
add
out
rol
das
seto
mov
dec
sahf
ja
add
xchg
aad
ret
add
jmp
inc
add
dec
pop
sub
or
out
jb
push
sbb
and
xchg
sbb
jno
jns
mov
cmp
mov
mov
in
jbe
xchg
addr16
hlt
rcr
pop
test
pop
adc
add
push
pop
loope
add
push
push
fild
add
or
enter
loope
out
daa
jg
mov
pusha
lds
pop
pop
mov
inc
push
daa
push
(bad)
jae
mov
das
add
in
push
mov
in
in
gs
cmps
xchg
icebp
scas
xor
repnz
mov
pusha
and
dec
and
nop
daa
pop
pop
das
or
or
pop
pop
xor
lods
push
aaa
mov
mov
das
add
aam
sbb
mov
call
push
xlat
and
iret
enter
jge
mov
addr16
movs
stc
dec
jo
mov
sbb
add
repz
dec
popa
push
push
pop
jns
mov
push
pop
sbb
loopne
adc
in
sbb
shl
iret
leave
fwait
nop
push
sub
add
in
jmp
dec
out
sahf
out
or
arpl
js
sahf
or
or
mov
mov
fwait
mov
test
repnz
mov
xor
js
cmp
(bad)
adc
(bad)
clc
push
mov
movs
xchg
push
psubsb
dec
cmp
pop
mov
inc
test
clc
shl
sahf
out
xchg
push
xor
add
inc
or
out
add
call
and
clc
sub
cmp
pop
push
pushf
arpl
arpl
add
xchg
xor
push
dec
mov
test
mov
lmsw
cmp
iret
push
nop
cwde
or
or
sbb
leave
jae
mov
rcl
jb
mul
add
enter
out
div
mov
or
(bad)
inc
adc
pop
sub
idiv
cmp
cld
sahf
out
cmp
or
xchg
outs
cmp
and
clts
xor
push
out
pop
jle
enter
mov
out
stc
cmp
gs
pop
dec
call
push
pop
sbb
pop
leave
int
mov
or
cdq
fmul
in
xchg
cmp
jns
mov
push
pop
cmp
inc
repnz
rcr
pop
mov
iret
test
mov
mov
add
adc
mov
addr16
and
adc
sub
pusha
addr16
mov
xchg
rol
addr16
mov
out
sahf
ja
push
add
jns
add
lock
xchg
out
adc
bswap
mov
xor
ins
push
jb
sbb
daa
pop
xor
pop
xchg
xchg
out
dec
push
add
cmp
out
fmul
mov
addr16
add
mov
jns
mov
imul
out
out
maskmovq
neg
sub
inc
pop
outs
push
cmp
push
(bad)
mov
out
retf
inc
das
add
aaa
addr16
bound
mov
cmps
sub
rcl
pop
clc
imul
push
or
mov
das
icebp
add
pop
xor
cmp
cmp
inc
dec
pop
pushf
je
movs
aas
out
inc
pop
cmovp
repz
popf
pop
(bad)
push
push
ret
xchg
out
dec
sar
bound
adc
daa
daa
mov
(bad)
or
call
repnz
das
fimul
loop
cmp
leave
jmp
iret
jae
add
or
bndldx
dec
dec
and
xor
js
out
pushf
imul
sbb
add
jnp
(bad)
rol
iret
sar
in
repnz
dec
ins
rcl
or
adc
cmp
jns
imul
and
out
daa
sub
ja
jne
in
xchg
lods
mov
pop
test
repz
cmp
xchg
push
push
popf
movs
or
or
mov
or
or
or
sahf
out
paddusw
in
mov
pop
cmc
push
adc
sahf
out
jns
pop
or
sahf
out
sbb
sub
sbb
out
dec
sahf
push
dec
push
push
pop
cmp
fild
and
ja
xchg
pcmpeqw
jge
add
(bad)
fcmovne
call
pop
in
outs
mov
xadd
enter
loop
in
fmul
loopne
pop
test
clc
add
or
adc
fild
sub
push
outs
push
cs
mov
inc
das
ror
mov
mov
out
mov
dec
and
adc
pop
pop
xchg
mov
leave
sbb
addr16
xchg
mov
xchg
push
jo
mov
outs
addr16
movs
jae
shr
sbb
fiadd
mul
daa
xchg
out
push
xchg
dec
jo
pusha
pop
outs
in
xchg
pusha
daa
pusha
das
pusha
cmp
add
xchg
out
cmp
pop
jge
mov
sahf
fst
in
(bad)
repnz
inc
loopne
enter
push
jo
jbe
enter
add
fcmove
add
in
ins
out
push
call
movs
pop
or
mul
jno
push
adc
call
popa
in
mov
inc
popa
lea
xor
cmp
(bad)
in
popa
adc
jno
in
push
popa
in
push
jb
repnz
cs
js
jb
jp
push
xlat
loopne
das
and
pushf
dec
bound
jns
enter
popa
fimul
add
out
out
pop
test
ret
es
popa
sahf
adc
mov
and
bound
bound
cmp
mov
repnz
xchg
bound
bound
push
jo
cmps
ror
jecxz
repnz
mov
arpl
nop
xchg
pushf
pop
push
arpl
jae
call
add
pop
push
je
cmc
in
rol
cmovp
lea
xor
inc
pop
in
mov
fsub
arpl
test
rcr
cmp
arpl
frstor
lds
arpl
mov
mov
iret
or
ud2
int
fwait
cmp
aad
or
hlt
sub
icebp
das
fs
xor
lods
jne
jne
dec
enter
or
cmp
addr16
pushf
cmp
jae
repnz
and
jbe
les
fs
cmps
inc
fs
into
lock
dec
fs
fs
xchg
xchg
cmps
fistp
clts
arpl
sbb
shl
ja
and
add
inc
xchg
fs
cmp
jle
stos
mov
adc
adc
adc
sar
shr
movlhps
pop
jecxz
repnz
repz
fs
cmp
repnz
push
sbb
iret
mov
sub
sbb
push
and
out
enter
stc
mov
ja
jb
xor
and
in
mov
jb
jp
leave
cmp
add
jns
out
mov
test
pop
cmp
xchg
push
inc
repnz
scas
ja
cmps
clc
and
add
repnz
scas
pop
ins
js
js
pop
xor
data16
icebp
in
(bad)
outs
psubw
call
movs
in
mov
and
push
xor
dec
mov
stos
cmp
call
and
inc
sbb
mov
or
jns
aaa
imul
iret
inc
das
sbb
pusha
inc
mov
mov
pop
pushf
psllq
jae
add
add
(bad)
push
iret
imul
cmp
mov
paddq
or
fst
in
hlt
push
bnd
sahf
paddb
adc
mov
jg
pop
adc
jns
xchg
xor
sbb
and
sub
sbb
out
add
addr16
stc
push
push
fdivr
sbb
mov
mov
ja
inc
das
es
cmp
fs
xchg
out
push
emms
jg
xchg
rcl
addr16
add
push
xcrypt-ofb
cmps
scas
idiv
jns
(bad)
mov
pop
xrstors
iret
ss
aas
push
repnz
(bad)
mov
inc
inc
scas
adc
out
mov
add
daa
pushf
jns
jns
out
xchg
push
jns
pop
jns
push
fidivr
pop
aas
push
or
inc
jns
leave
jnp
push
dec
push
push
or
jns
out
addr16
out
jg
xchg
jns
mov
ds
bswap
stc
or
stc
mov
adc
cmp
imul
repz
add
imul
imul
repnz
or
or
cmp
iret
jae
or
mov
bnd
scas
scas
js
dec
dec
jl
push
or
mov
imul
mov
mov
add
and
out
lea
inc
fild
jle
cmp
dec
ja
daa
dec
scas
adc
mov
mov
loop
leave
mov
in
clc
ficom
jmp
jg
push
daa
push
repnz
(bad)
aas
mov
push
cmp
mov
xchg
sbb
xchg
xchg
xchg
pop
enter
push
sub
add
lock
jg
or
cmps
pop
enter
mov
daa
fnsave
jb
push
pop
lar
addr16
cmp
or
imul
scas
xchg
imul
iret
or
cmovb
add
cmps
fdivr
in
imul
add
xchg
adc
es
gs
(bad)
jns
or
jge
mov
out
test
sahf
out
xchg
popf
or
sbb
mov
sbb
or
xor
pop
nop
mov
enter
jb
fsub
call
lock
add
js
or
adc
mov
sbb
sbb
sbb
scas
fadd
out
movs
inc
not
scas
xor
je
cmp
add
iret
repz
or
je
iret
shr
(bad)
jl
xchg
nop
push
es
add
pop
cmp
add
add
adc
sbb
lahf
ins
cmps
ins
xor
pop
xor
jmp
pop
(bad)
or
jbe
mov
call
in
sahf
lock
clc
iret
pop
leave
arpl
xchg
jb
ins
and
mov
aas
dec
push
add
test
jb
in
jg
inc
mov
out
mov
aas
leave
push
pop
add
popf
ror
push
and
pushf
test
outs
outs
outs
dec
mov
push
dec
jae
outs
mov
les
xchg
mov
clc
les
add
add
xadd
fdiv
ja
rol
sub
mov
xor
add
cmp
inc
leave
retf
inc
outs
cmp
mov
xchg
(bad)
jge
mov
cmpxchg
mov
sub
out
mov
shr
outs
xchg
outs
jmp
repz
add
imul
aaa
inc
test
or
mov
jo
ucomiss
ss
cmp
ds
daa
iret
pop
push
pop
or
leave
in
jbe
pcmpeqd
jle
push
cmp
setle
scas
mov
push
repz
jo
into
pop
(bad)
sbb
out
out
div
cmp
xchg
inc
jno
push
add
iret
leave
leave
push
push
es
dec
outs
xchg
xchg
jno
pop
inc
dec
and
dec
push
sub
push
call
jno
jb
fwait
jle
shl
push
es
push
lock
fmul
fsubp
cmp
jno
repnz
paddd
jb
movs
lds
push
push
inc
push
sahf
xchg
fisttp
ss
push
pushf
fsub
orps
out
ss
daa
mov
or
setbe
push
push
mov
shl
cmp
xchg
push
iret
leave
(bad)
ficomp
jb
js
outs
psadbw
pop
push
pushf
pushf
pushf
jae
jae
out
in
jae
jae
pushf
fsub
xchg
gs
push
pop
ss
jae
dec
and
jle
outs
push
daa
daa
mov
sahf
cmps
scas
jae
mov
shufps
ins
sar
jae
fsubp
jp
xchg
xchg
push
push
jae
pushf
pushf
pushf
push
je
je
sahf
(bad)
test
pusha
xlat
jns
pop
mov
push
jns
je
je
aaa
leave
out
xor
mov
mov
jbe
(bad)
iret
mov
ds
aad
(bad)
je
xchg
jl
pop
adc
pop
lea
jne
and
add
repz
sub
xor
iret
repz
push
push
pop
jae
mov
jne
imul
daa
iret
or
jg
rcr
jne
fwait
jne
add
or
xchg
xchg
into
fsub
es
enter
add
fucomi
mov
ja
movd
leave
mov
ja
mov
test
dec
call
dec
add
hlt
lahf
in
sbb
mov
ja
sbb
inc
jp
inc
add
mov
and
(bad)
(bad)
inc
push
arpl
and
icebp
dec
ja
push
ja
ja
out
mov
sbb
pop
ja
mov
pop
leave
add
enter
fmul
movs
lods
push
daa
mov
in
xchg
adc
ja
ja
ja
sahf
fld
das
fmul
in
in
outs
int3
add
ja
ja
dec
dec
fsubp
add
or
or
iret
repz
sbb
and
jns
iret
adc
xor
push
cmp
in
in
inc
dec
push
dec
pop
vmwrite
je
jl
out
cmp
jns
pushf
and
loope
mov
dec
mov
loope
sar
push
pop
mov
dec
xchg
sbb
mov
cdq
sbb
cli
js
jns
or
cmp
cmp
sbb
cmp
sub
cmp
out
inc
cmovp
push
sahf
xchg
out
pop
adc
adc
sahf
out
jb
jp
push
popf
ret
lods
jns
xchg
call
adc
repz
out
psubq
xchg
or
push
shl
pop
daa
and
fcom
es
sub
mul
fcom
fisttp
daa
(bad)
fwait
jp
push
or
jp
xchg
mov
mov
inc
(bad)
jns
add
inc
sbb
imul
mov
fistp
and
and
and
nop
xchg
or
jnp
iret
xchg
sbb
jnp
ss
inc
dec
cs
test
xchg
xchg
xchg
or
sub
mov
nop
and
cmp
add
out
in
es
call
mov
cmp
repz
pop
ret
lock
repz
or
or
iret
jae
loop
jmp
arpl
jmp
push
les
es
cs
add
(bad)
pop
bound
xchg
imul
cmp
daa
daa
test
in
sbb
(bad)
(bad)
lock
xchg
ja
jl
jl
cmps
js
xchg
jl
cdq
jl
dec
mov
jns
add
push
cmps
jmp
and
inc
fwait
stos
jge
inc
push
ins
jge
ja
jns
push
push
add
xchg
mov
cs
ins
mov
xchg
pop
(bad)
fsub
and
xchg
xchg
or
pop
leave
xor
pusha
pop
leave
and
and
pushf
jl
pop
leave
in
jle
int
fstp
repnz
xor
xchg
ret
outs
sub
les
scas
mov
cmps
cmp
cwde
scas
dec
jne
pop
xor
loopne
test
dec
js
das
bound
xchg
fwait
and
dec
call
mov
jg
jg
test
mov
sbb
jl
add
call
fwait
clc
call
out
bts
pop
push
inc
lahf
into
jg
jg
add
fwait
idiv
add
daa
jns
mov
add
setl
mov
pop
(bad)
mov
outs
inc
mov
jg
fild
es
pushf
out
es
and
xor
xchg
cmp
or
test
xchg
je
add
pop
xor
xor
popf
dec
(bad)
test
xchg
add
pop
popf
outs
mov
xchg
jg
leave
leave
leave
repz
add
pop
sar
mov
add
jae
mov
adc
pushf
popf
adc
popf
lods
dec
dec
es
popf
xor
or
js
cmp
add
or
dec
adc
mov
sub
xchg
pop
and
(bad)
inc
mov
sbb
pop
lahf
out
scas
pop
mov
xchg
stos
inc
scas
mov
icebp
add
pushf
enter
(bad)
lahf
xor
aad
hlt
sahf
push
lahf
dec
and
scas
sub
dec
lahf
pop
ins
cs
mov
xor
scas
in
dec
cmps
cld
or
sbb
dec
push
in
mov
xchg
inc
iret
jno
iret
mov
mov
jbe
push
xor
fistp
mov
pop
call
cmp
ja
sbb
cmp
xchg
out
ds
(bad)
and
gs
or
mov
iret
enter
aaa
in
inc
aas
and
mov
aas
mul
mov
les
shl
and
sbb
(bad)
or
jbe
fwait
in
mov
scas
and
mov
leave
mov
xchg
xchg
xchg
pop
clc
or
and
and
jo
movs
and
xchg
dec
test
enter
pop
lds
movs
adc
push
ja
jb
stos
pop
pop
inc
push
pop
test
popa
test
push
enter
movs
movs
sub
ror
jmp
test
movs
push
stos
jb
and
movs
jbe
dec
movs
and
movs
dec
mov
jns
cmp
stos
inc
out
mov
xchg
dec
enter
enter
xchg
pushf
pop
mov
push
inc
das
(bad)
aam
add
adc
and
enter
scas
pop
cmps
fs
loopne
cmps
mov
mov
sub
mov
je
pop
pop
rol
leave
in
data16
jbe
cmps
pop
ss
xchg
ja
fidivr
pop
pop
cmps
or
in
cmps
pushf
test
scas
push
add
push
cs
pop
mov
aam
push
add
push
xchg
mov
dec
test
push
dec
dec
mov
dec
add
es
xor
mov
pmaddwd
lahf
std
pop
syscall
xchg
clts
ja
xchg
mov
inc
lds
add
test
(bad)
adc
in
shl
aaa
add
xchg
test
fsub
pop
ret
das
cmps
ss
mov
pop
enter
je
push
jb
and
jno
inc
ret
fistp
and
cs
pop
addr16
(bad)
aas
xchg
xchg
xchg
jns
adc
(bad)
pop
pop
pop
xor
fs
push
xchg
inc
repnz
bound
mov
ret
inc
aas
jbe
mov
xchg
mov
fsub
enter
stos
je
cmp
pop
rcl
or
scas
repnz
mov
(bad)
das
add
int3
(bad)
mov
in
push
(bad)
stos
or
das
mov
aaa
push
cmps
fild
iret
aas
mov
clts
sub
pop
inc
push
mov
es
enter
push
lods
and
mov
lods
in
in
jp
or
xchg
call
stos
dec
or
pop
(bad)
pusha
retf
lods
jmp
mov
mov
lods
aam
and
ja
lods
push
retf
iret
xchg
and
in
lods
or
or
cdq
mov
push
or
lods
out
mov
enter
scas
fsubr
cmp
adc
mov
xchg
or
dec
scas
jnp
dec
and
mov
cmps
mov
scas
xlat
jns
mov
mov
inc
jnp
and
mov
and
push
sub
mov
add
push
or
mov
ja
in
scas
scas
out
call
dec
enter
lea
imul
fild
and
pop
mov
mov
or
in
ror
sbb
das
sbb
outs
adc
nop
mov
jmp
repz
push
fimul
sti
mov
(bad)
xchg
lock
mov
cmp
and
pop
add
jo
dec
ficomp
ficomp
in
outs
data16
sbb
cdq
call
dec
sahf
out
push
pop
add
imul
jno
das
or
mov
iret
cmp
mov
ud1
cmp
jbe
ror
shr
adc
mov
loope
psllw
pop
mov
sbb
mov
push
sbb
enter
mov
rcl
mov
test
xchg
cmps
xor
and
das
fwait
retf
lods
mov
hlt
mov
mov
call
mov
push
add
mov
scas
mov
bts
bswap
out
cmp
rcr
loop
enter
jmp
cmp
or
jns
repz
sbb
dec
pop
aaa
dec
sbb
dec
nop
pop
(bad)
mul
jo
inc
daa
cmp
push
outs
mov
in
mov
mov
outs
mov
add
fmul
jecxz
in
in
mov
jl
add
ror
sbb
jmp
pop
sbb
pop
xchg
dec
adc
push
sub
sbb
mov
pop
out
sahf
(bad)
(bad)
adc
mov
xor
mov
add
repz
repz
add
add
iret
push
jge
mov
xchg
xchg
mov
ja
mov
mov
retf
repz
adc
leave
xor
mov
push
pop
in
addr16
mov
jl
inc
mov
je
cmp
outs
mov
str
(bad)
pop
add
mov
das
and
cs
das
das
sub
xor
cmp
inc
cmp
leave
rep
or
repz
repz
outs
adc
repz
jbe
jle
xchg
pushf
jmp
(bad)
in
and
jno
sbb
add
mov
adc
mov
push
test
mov
and
paddq
aas
pop
sbb
in
sbb
mov
adc
mov
nop
nop
ror
repz
xchg
daa
iret
in
push
mov
mov
mov
or
fcomp
lock
inc
ds
int3
out
or
fdiv
cmp
nop
out
pop
adc
enter
xchg
pop
xchg
iret
pop
push
repnz
xchg
xchg
aam
not
cmp
fs
inc
xchg
dec
xchg
push
cmp
leave
pop
fs
aam
sub
xlat
pop
(bad)
mov
inc
xchg
xchg
xlat
mov
ror
fidivr
mov
aad
xchg
pop
in
xchg
hlt
xchg
cld
xchg
repz
add
dec
or
adc
enter
sbb
push
es
cs
iret
repz
push
adc
push
cmp
repz
pop
adc
inc
push
adc
xchg
xchg
xchg
mov
pop
and
out
or
jb
test
cmp
mov
adc
xchg
sbb
out
mov
ds
repz
xchg
inc
dec
xorps
pop
jb
cmp
cs
xchg
hlt
cmp
push
push
jg
cs
repz
xchg
adc
jns
xlat
adc
push
xchg
push
fwait
sbb
cmps
jle
scas
mov
sbb
out
jns
mov
out
jns
iret
and
and
dec
aaa
jns
mov
out
out
in
push
es
sysret
xchg
out
in
sahf
sub
and
pop
push
sub
out
cmp
das
dec
cmp
jns
out
inc
xor
push
js
jb
pop
(bad)
imul
outs
cmp
fcom
lahf
xchg
daa
iret
das
xor
daa
nop
and
xchg
rol
pushf
nop
xchg
fst
mov
and
xchg
stc
punpckhwd
jb
xchg
jns
or
cdq
xchg
mov
mov
cmpxchg
jae
leave
rcl
jae
loope
sbb
sbb
sbb
stc
add
repnz
push
sbb
and
and
inc
xchg
scas
add
imul
out
push
and
pop
sub
jnp
(bad)
xchg
sub
sub
repz
dec
sub
sub
pop
sahf
xchg
jbe
dec
xor
push
jno
jmp
push
add
outs
ret
std
sbb
jae
push
(bad)
mov
pop
leave
mov
mov
inc
(bad)
les
xchg
dec
leave
imul
sbb
sbb
xchg
xchg
shl
out
inc
dec
dec
dec
idiv
call
sbb
cwde
sbb
xchg
cmp
shl
sub
xor
mov
sbb
sbb
jb
xchg
mov
pop
gs
jb
jb
jne
movs
cmp
inc
fbld
sbb
push
shl
repnz
cwde
pusha
sar
push
call
dec
sahf
ja
push
add
clts
dec
mov
not
ja
cmp
ror
fsub
push
lock
or
adc
ins
jbe
pop
or
adc
adc
repz
cmp
ds
outs
daa
iret
pop
cmp
dec
sbb
sbb
in
push
cwde
arpl
xor
inc
mov
outs
or
ret
and
cwde
ret
ja
pop
ds
cmps
xchg
cwde
call
pop
stos
dec
mov
int3
xchg
daa
iret
enter
adc
ret
es
and
ret
aad
fmul
fucom
paddsw
div
bnd
(bad)
ds
pop
cdq
femms
sahf
out
sahf
or
add
or
cmp
repz
das
ds
or
repz
dec
push
adc
pop
push
repnz
xchg
cdq
fdivr
clc
inc
les
(bad)
dec
aas
xchg
cdq
cdq
aas
test
push
outs
mov
mov
inc
xor
or
xchg
xchg
rcr
dec
dec
out
cs
add
dec
sub
in
dec
dec
adc
pop
lds
lds
enter
sub
sbb
cmp
daa
iret
enter
sub
adc
adc
test
jb
jb
jbe
cdq
out
daa
iret
add
mov
leave
jnp
pop
retf
shr
xchg
outs
repnz
or
fimul
add
sahf
push
loop
call
jl
jo
mov
sbb
add
in
in
aaa
pop
fwait
xor
in
push
fwait
pop
fwait
jb
jp
jbe
jne
outs
pop
or
aas
add
or
(bad)
rol
push
(bad)
je
inc
es
(bad)
fwait
ja
outs
daa
daa
daa
(bad)
fsubp
pmaxsw
mov
ja
paddd
push
pushf
femms
fucomi
in
or
push
das
es
mov
xchg
cs
inc
adc
cmp
repz
adc
jno
repz
adc
adc
outs
repnz
xchg
pop
sbb
cdq
popf
xchg
cmps
fwait
bndstx
iretw
mov
jg
xchg
pop
jb
enter
enter
mov
mov
and
call
and
mov
adc
adc
leave
cmps
cmp
popf
out
sbb
and
sub
push
addr16
ins
in
popf
cmp
invd
inc
sahf
out
cmp
or
daa
xor
jmp
popf
mov
in
push
popf
pop
test
mov
(bad)
stos
popf
aaa
mov
cs
and
es
daa
push
retf
dec
mov
scas
add
jns
add
popf
push
add
jo
mov
pandn
daa
dec
mov
aas
out
pop
(bad)
idiv
cmp
daa
pop
sahf
iret
adc
iret
sbb
push
adc
adc
iret
repz
adc
or
dec
daa
daa
daa
daa
push
pop
popa
imul
jno
jns
out
sahf
out
sbb
sbb
sahf
push
cdq
mov
xchg
mov
leave
mov
mov
or
das
scas
inc
daa
jb
xor
mov
dec
aam
pushf
retf
jbe
fadd
xchg
int3
pop
add
(bad)
lahf
(bad)
pusha
add
aas
xchg
and
sbb
sub
xchg
das
test
dec
cmp
dec
inc
dec
cs
push
je
xchg
xor
int3
jae
pushf
pop
fsubr
in
jb
push
leave
loopne
int
int
jb
cmp
dec
adc
mov
push
dec
aam
mov
xchg
in
push
push
cmp
lahf
sub
and
or
pop
into
push
sar
pushf
pop
jb
rcl
sub
dec
and
dec
sbb
sub
sub
dec
pusha
jo
xor
mov
enter
xchg
xchg
pushf
stos
aaa
adc
and
and
jp
add
call
(bad)
js
pop
cwde
mov
cmp
repz
add
add
ret
repz
add
add
in
cmps
xchg
push
call
fiadd
shr
inc
ror
shl
dec
scas
xchg
fistp
xchg
mov
leave
xchg
xchg
add
adc
fcom
rcr
and
push
mov
mov
cmp
das
cdq
dec
clc
or
sbb
jno
xchg
sar
pop
mov
mov
je
js
fdivr
and
and
daa
jns
pop
lods
or
sbb
and
aam
push
and
xchg
dec
pusha
jo
push
jo
pop
fdivr
and
fsubr
repz
inc
dec
jb
adc
and
xor
xor
dec
and
pop
scas
push
js
mov
rcl
xor
adc
call
stc
add
mov
mov
movs
mov
add
jns
out
add
inc
bnd
or
add
das
scas
iret
mov
and
das
sub
mov
repz
push
or
outs
dec
and
xchg
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
ret
into
ftst
xchg
mov
pushf
out
cli
pop
dec
adc
inc
dec
sahf
dec
xlat
push
xlat
xlat
cmp
stc
and
movs
leave
int
dec
dec
in
pusha
inc
leave
in
inc
push
hlt
xlat
pop
xchg
fiadd
(bad)
fadd
nop
push
fwait
dec
popa
iret
pop
fcom
xchg
and
mov
ins
dec
mov
xchg
cmp
in
movs
(bad)
movs
(bad)
fmul
scas
imul
pop
dec
fxch
enter
fincstp
movs
movs
es
enter
movs
lds
ds
addr16
ins
inc
jmp
and
pop
mov
scas
mov
leave
and
xchg
push
fnstenv
fiadd
setb
jae
inc
dec
cs
mov
mov
inc
repnz
add
lock
push
cmp
dec
fistp
test
nop
setp
in
mov
push
jne
vmwrite
(bad)
fdivr
fistp
push
and
movs
add
pop
pop
sbb
fs
test
pop
mov
fs
scas
rcr
xchg
shl
pop
ja
xchg
pushf
dec
sbb
sub
pop
and
cli
jo
and
xchg
adc
dec
enter
sub
add
repnz
ficomp
cmp
cmps
js
dec
jp
in
xor
fisub
jns
mov
mov
retf
cld
fidivr
cmps
and
push
xor
vmwrite
ins
sbb
cmps
cmps
jns
jns
ins
cmps
jne
jge
test
lea
stos
cmps
jns
ja
mov
rcr
or
dec
sahf
out
or
push
repnz
ins
and
or
sbb
jge
in
xchg
push
push
loopne
jo
scas
xchg
mov
test
das
xchg
xchg
mov
push
repnz
add
adc
and
fs
cmp
pop
out
cmp
dec
scas
xchg
(bad)
mov
dec
and
or
mov
enter
sub
leave
and
pusha
jo
addr16
loop
or
loop
enter
test
test
test
sbb
jb
test
and
sub
push
or
jmp
(bad)
jecxz
xchg
xchg
out
jecxz
popa
(bad)
xchg
xchg
out
scas
punpckhwd
test
dec
sahf
xchg
jecxz
jns
and
in
shr
mov
aam
xchg
or
in
inc
and
leave
enter
test
in
jbe
fild
pxor
jae
repnz
pop
stos
movhps
xor
xlat
push
xchg
in
push
loopne
push
rol
sbb
outs
xchg
push
jbe
fwait
in
in
push
daa
sub
and
xchg
fs
enter
in
test
dec
mov
(bad)
mov
sbb
leave
test
xor
xchg
stos
ss
mov
ins
leave
mov
in
mov
popf
leave
leave
and
dec
pop
and
xchg
mov
enter
out
xchg
xchg
dec
scas
je
xchg
and
mov
lock
cmp
bnd
jle
add
iret
popf
add
in
lahf
sbb
pusha
push
pushf
or
shl
sub
into
(bad)
aaa
sahf
pushf
pushf
loope
imul
inc
dec
mov
xchg
call
pop
mov
scas
lock
cmps
xchg
adc
adc
and
dec
jmp
pop
push
and
dec
pop
and
mov
das
or
sbb
test
xchg
mov
jo
dec
pop
and
mov
cs
das
(bad)
outs
pop
add
fisubr
jmp
jmp
in
inc
mov
jmp
lods
add
in
lods
adc
lods
in
in
sub
lods
dec
lods
sbb
in
push
lods
popa
lods
ins
aas
xchg
in
jmp
jmp
popf
dec
mov
xor
jb
in
push
in
fs
pushf
lods
push
repnz
mov
js
hlt
add
iret
adc
dec
dec
mov
jns
scas
dec
in
jns
nop
xchg
pop
ins
in
fdivr
mov
(bad)
leave
push
repnz
test
jns
out
sbb
sbb
push
out
fs
fld
mov
push
jb
pop
pop
push
mov
scas
xchg
scas
sahf
scas
dec
fld
mov
sub
cmp
cmp
or
idiv
scas
enter
lahf
or
scas
leave
xor
retf
scas
ss
pop
or
pop
scas
fs
ins
scas
mov
jb
scas
jl
test
dec
inc
call
fdiv
or
loope
in
in
icebp
stc
add
or
pop
mov
mov
pop
and
jecxz
aas
mov
mov
mov
lock
inc
pusha
adc
cmp
inc
movd
test
ins
mov
mov
xchg
cwde
lahf
xchg
daa
sbb
add
bnd
mov
icebp
dec
adc
sbb
mov
enter
mov
mov
push
cmc
add
cvtpi2ps
daa
cmp
icebp
in
icebp
mov
icebp
icebp
shr
pushf
in
repnz
repnz
repnz
ret
pushf
push
repnz
lods
sbb
or
hlt
add
dec
dec
dec
mov
jb
scas
cmp
cmp
enter
pop
in
retf
jb
xchg
movs
mov
sub
and
in
dec
je
mov
xor
repnz
inc
aaa
push
inc
hlt
mov
in
add
push
hlt
(bad)
mov
mov
in
in
mov
mov
mov
cdq
stos
sar
stos
cmp
(bad)
scas
and
cmc
sub
cmp
in
mov
and
mov
jb
leave
push
int3
fsubr
xchg
push
leave
inc
(bad)
and
jb
cmp
test
jb
leave
push
jl
pushf
and
aam
pop
leave
leave
in
xor
jb
and
sub
cmp
dec
not
retf
test
movs
mov
in
scas
fcomp
cld
dec
and
int3
xor
mov
enter
push
clc
xchg
dec
cmps
fimul
int
mov
imul
and
cs
add
inc
into
xchg
xchg
pushf
dec
cmp
dec
stc
in
mov
pop
(bad)
nop
mov
lods
xchg
inc
das
jg
retf
inc
push
and
cmp
pop
leave
loopne
rcr
cli
cmp
mov
mov
inc
or
adc
mov
sar
cli
jns
jns
icebp
mov
mov
mov
mov
inc
repnz
aam
cli
loope
mov
mov
sti
mov
cs
push
cmovae
mov
pop
and
(bad)
sbb
pusha
pop
push
dec
pop
push
repz
sahf
xchg
add
outs
cs
ja
jg
jg
xchg
lahf
cmps
scas
cmp
cmp
mov
(bad)
iret
cmp
cmp
xlat
(bad)
out
sub
cmp
idiv
pop
mov
or
(bad)
out
inc
aaa
xchg
xchg
mov
rcr
mov
pushf
and
cld
add
bound
movs
ficom
outs
xlat
mov
outs
bound
nop
es
sbb
es
fisub
scas
sub
mov
dec
mov
leave
and
aas
fs
loope
cmp
push
xchg
repz
dec
call
call
xor
mov
pop
ds
setns
jns
out
add
outs
xchg
arpl
or
cmp
repz
or
or
add
add
inc
ss
sbb
or
aam
into
hlt
inc
call
and
(bad)
(bad)
push
test
fs
(bad)
(bad)
scas
or
push
pushf
cmp
inc
or
fmul
jo
(bad)
mov
mov
xchg
repz
nop
dec
pusha
add
pushf
xchg
inc
inc
loope
jmp
adc
push
test
inc
and
or
pop
in
imul
dec
push
enter
mov
inc
add
or
dec
call
outs
fstp
aaa
add
fdiv
mov
aas
hlt
push
mov
loopne
push
xor
stc
inc
xchg
pop
push
mov
and
sub
xlat
push
ja
out
inc
xchg
int3
test
pop
lahf
mov
repnz
cmp
out
loop
shr
call
sar
add
dec
nop
sbb
rol
xlat
into
sub
push
cmp
cmps
mov
das
in
add
mov
cdq
loopne
adc
pop
cld
test
stos
push
xlat
iret
push
add
mov
inc
jno
ret
inc
xor
push
dec
and
nop
add
aas
fidivr
test
aas
add
add
out
add
add
in
xchg
prefetchnta
fisub
inc
adc
pop
or
push
add
daa
mov
clc
lods
in
pushf
lods
das
sahf
dec
pop
and
push
iret
int
cmps
mov
repz
es
add
cli
jbe
cs
addr16
mov
adc
push
out
repnz
mov
or
dec
cmp
push
mov
dec
mov
outs
adc
inc
add
add
fmulp
stos
les
add
adc
mov
push
xchg
stos
div
dec
adc
movs
xchg
dec
ja
test
add
repnz
mov
cwde
mov
jns
retf
ror
ficomp
jns
jb
sti
add
cmp
sbb
jge
adc
pop
lods
adc
inc
das
fwait
or
push
mov
xchg
mov
jno
inc
inc
push
xor
(bad)
es
test
inc
test
repz
jbe
add
inc
inc
pop
leave
jae
leave
push
add
pop
leave
and
ror
addr16
xchg
scas
rcl
dec
sbb
pop
dec
pusha
out
jecxz
dec
or
ret
dec
push
pop
in
in
mov
imul
(bad)
xchg
mov
pop
pop
lods
cmp
inc
xor
pop
inc
pop
mov
cwde
popa
(bad)
sbb
or
or
xlat
push
loopne
adc
iret
push
or
mov
xlat
sbb
movs
or
fcmovnb
pand
pop
aaa
cmp
(bad)
(bad)
or
aas
pop
das
jno
(bad)
dec
dec
outs
daa
lods
das
mov
(bad)
lahf
out
adc
adc
mov
jns
adc
dec
cmp
popf
out
sbb
js
add
and
mov
dec
xchg
cmp
daa
sub
or
or
jno
push
jbe
mov
xor
cwde
push
daa
lahf
fs
and
in
pop
imul
int
pop
in
mov
sahf
out
xchg
mov
xor
cmps
ins
jnp
iret
pandn
sub
add
xchg
or
daa
bound
push
jb
jl
add
fwait
cmp
repz
jo
mov
pop
shld
cs
or
aaa
pop
das
nop
dec
xor
xor
jg
xor
lock
mov
das
dec
push
pusha
or
push
add
inc
popa
arpl
aas
fcomp
out
jns
xor
cmp
jnp
sahf
inc
inc
mov
in
push
out
(bad)
out
out
mov
cli
mov
push
ror
and
sar
dec
shl
jb
push
shl
or
stc
sub
add
cmovle
or
in
adc
out
fwait
cmp
prefetch
enter
rcr
jecxz
shl
in
adc
shl
iret
jae
repnz
xor
cmp
and
push
sub
mov
pop
ins
pcmpeqw
xchg
out
test
(bad)
repz
jns
push
xchg
setge
movs
lods
pop
mov
mov
rdpmc
cmp
int
repz
aad
fstp
push
inc
in
inc
cmc
inc
xchg
push
cmp
cs
daa
xchg
iret
adc
push
cmp
(bad)
sbb
jb
inc
ret
push
ret
int3
inc
mov
ret
dec
sahf
ja
dec
or
mov
ss
movs
dec
lods
push
iret
repz
sahf
push
mov
push
adc
adc
into
repz
adc
add
push
xchg
das
cmp
call
aaa
out
or
push
btc
sub
lahf
je
sub
push
popa
ja
es
and
scas
(bad)
test
sbb
adc
movnti
add
je
add
adc
sub
mov
lock
enter
inc
cmp
xor
push
icebp
nop
ret
dec
adc
push
mov
js
pushf
je
and
leave
inc
repnz
retf
es
and
iret
sub
(bad)
add
mov
das
pop
(bad)
pop
leave
jae
cmp
dec
or
mov
ins
mov
jnp
pop
sbb
jb
mov
dec
add
aam
int3
outs
inc
js
out
rol
out
fwait
cwde
push
sub
fsub
das
test
or
sub
outs
daa
iret
dec
xlat
push
add
cmp
pop
lds
dec
or
lock
or
adc
xor
adc
jg
outs
add
popf
dec
xchg
and
pop
test
add
mov
addr16
cmps
repz
xor
je
hlt
loopne
push
outs
and
jb
pop
adc
xor
mov
jns
out
xchg
pop
xchg
add
loopne
out
dec
stos
push
mov
in
push
test
xor
out
pushf
ror
lahf
add
pushf
arpl
int
mov
xlat
adc
pop
push
add
dec
loope
cs
mov
loope
pop
inc
(bad)
dec
outs
lds
cmp
mov
jp
in
jbe
jmp
daa
and
xchg
push
pop
enter
dec
dec
outs
pmaxub
out
mul
and
inc
(bad)
push
push
daa
daa
daa
daa
push
es
daa
daa
ds
dec
adc
iret
repz
adc
das
outs
cmp
mov
jle
mov
out
xchg
sbb
jbe
scas
das
mov
mov
cmp
into
and
inc
cmp
leave
ins
pmaxsw
inc
push
enter
daa
daa
mov
enter
inc
jb
daa
daa
dec
push
enter
xchg
mov
xor
in
fwait
cmp
daa
mov
bts
leave
lods
ret
bswap
xlat
adc
sbb
es
out
enter
daa
enter
cmp
push
push
xlat
daa
mov
fs
xchg
in
dec
outs
(bad)
jp
or
leave
in
mov
stos
mov
and
dec
es
sbb
fimul
out
pushf
pushf
pushf
out
idiv
push
retf
dec
inc
push
push
push
es
ja
dec
cs
ds
in
push
rol
mov
stc
sahf
xchg
and
leave
xchg
jae
popa
retf
retf
sbb
cmp
sbb
cmps
sbb
fwait
dec
in
iret
lods
mov
in
in
mov
jecxz
in
in
push
retf
aas
vmwrite
out
or
es
cs
cs
fcmovne
repz
(bad)
jns
xchg
data16
push
jbe
daa
daa
daa
dec
sahf
xchg
lahf
cmps
scas
mov
dec
mov
cmp
cmp
xlat
(bad)
out
sbb
cmp
idiv
pop
pop
int3
bswap
xchg
and
pop
int3
pop
int3
daa
int3
and
das
aas
das
add
push
and
add
sbb
jne
jge
in
rcl
dec
push
repnz
dec
sbb
pushf
mov
ins
scas
js
scas
mov
jnp
ja
popf
movs
xchg
mov
cmp
lea
nop
loopne
ja
sbb
jl
sbb
mov
das
cmp
mov
inc
ss
punpckhbw
scas
adc
push
xchg
loopne
rcl
scas
in
in
int3
cmc
sub
lahf
mov
or
fcomp
int
mov
loope
sahf
sub
fbstp
rdmsr
xor
push
xchg
push
int
int
in
mov
xchg
test
mov
ja
je
(bad)
mov
fsubp
mov
rcl
add
pop
push
lahf
xchg
or
jno
mov
sub
loopne
push
and
sub
pop
add
cmps
adc
inc
and
(bad)
pop
mov
lahf
jecxz
inc
out
cmp
into
dec
pushf
pop
dec
ja
and
call
dec
pop
jo
scas
lea
cmp
out
into
iret
sbb
adc
and
in
adc
cmp
daa
mov
ins
stc
das
add
or
adc
mov
outs
daa
loope
jmp
fcom
daa
ror
add
rol
cmp
add
iret
out
frstor
pcmpeqw
jge
out
mov
test
test
add
fdiv
jbe
pop
leave
add
sbb
inc
push
jmp
mov
(bad)
mov
add
sti
in
addr16
shl
rcr
(bad)
push
push
add
out
ja
test
xchg
out
and
jp
shl
ror
xchg
xchg
sbb
cmps
sub
dec
sbb
mov
outs
pop
xor
sub
jg
jecxz
pop
mov
fs
out
pop
mov
outs
nop
fistp
out
inc
xchg
dec
add
mov
cmp
jge
scas
mov
test
and
or
jbe
in
mov
(bad)
jb
fucom
fiadd
das
out
das
fcmove
pop
pop
in
out
shl
outs
and
rdmsr
rcl
cmp
inc
jb
fwait
nop
ror
push
pop
in
push
push
inc
pushf
and
xchg
cmp
or
pop
jo
xchg
fild
out
mov
test
jns
inc
out
push
pop
pop
pop
das
and
shl
push
rcr
aas
push
or
bound
dec
ds
ins
stos
xchg
shl
pop
outs
dec
ja
xchg
xchg
xchg
xchg
or
(bad)
rcr
cwde
es
ficomp
cmp
aam
add
call
int3
xor
jbe
aad
outs
nop
xchg
aaa
dec
add
xchg
ret
fild
addr16
psubw
lahf
push
pop
mov
(bad)
sbb
iret
mov
ds
(bad)
mov
addr16
add
add
mov
aam
imul
sub
jo
push
aam
out
(bad)
and
xchg
iret
add
sub
jb
cmp
xrelease
mov
add
xchg
sub
test
les
jmp
xor
mov
and
mov
imul
add
xchg
jmp
pushf
movs
fild
xchg
or
leave
cmps
cmp
push
pop
sub
in
outs
daa
xlat
pandn
out
jbe
in
sahf
setno
and
(bad)
(bad)
adc
(bad)
xchg
fldlg2
jne
outs
and
cmp
dec
jle
leave
or
sub
and
cdq
inc
xchg
ins
push
xchg
dec
mov
inc
xchg
inc
jno
mov
fsubr
or
(bad)
mov
dec
dec
(bad)
push
(bad)
aas
or
add
sub
outs
push
sub
add
popf
in
out
push
mov
in
(bad)
inc
in
popa
sub
push
sub
enter
(bad)
addr16
inc
xchg
mov
lahf
adc
in
in
xlat
and
inc
push
addr16
sub
adc
xchg
sub
mov
pop
out
gs
bnd
sub
mov
int3
daa
pushf
fild
xchg
aaa
push
test
movs
pop
or
push
ror
push
jb
call
out
jb
ret
push
sub
push
xchg
cmps
xchg
xchg
cmp
cs
cmc
and
pop
jo
scas
add
mov
dec
sbb
lea
nop
pushf
in
fsubr
dec
addr16
mov
xchg
sahf
add
outs
pop
leave
add
int3
or
mov
addr16
repnz
test
ja
clc
add
inc
cmp
inc
xor
xchg
movs
out
outs
xchg
add
mov
mov
inc
jecxz
pushf
cmp
dec
adc
in
xor
push
cmp
imul
imul
sub
dec
es
leave
cmps
movs
daa
daa
adc
jl
test
xchg
adc
mov
das
or
cdq
sub
repnz
lock
popf
push
aas
xor
and
fld1
pop
ins
jo
push
jg
fldenv
mov
fxtract
frndint
ftst
enter
xor
fisubr
fcmove
leave
inc
fwait
test
push
daa
iret
jae
inc
xchg
bound
jb
cmp
mov
jb
mov
loopne
jb
(bad)
in
div
or
xor
fcmovnb
jae
push
call
add
fistp
jle
add
(bad)
xchg
xchg
(bad)
test
adc
iret
jae
cdq
mov
mov
shl
add
hlt
inc
into
fimul
(bad)
fcom
repnz
inc
fsubr
fsubr
push
cmp
fsubr
pusha
cmovl
cmps
sub
mov
fwait
aas
mov
push
xor
daa
daa
into
(bad)
mov
loopne
add
repnz
sub
jmp
(bad)
mov
punpcklbw
daa
iret
add
add
jbe
mov
mov
dec
inc
xlat
jecxz
mov
psrlq
aas
cld
cmps
and
ja
iret
cmps
daa
fidivr
cmp
dec
push
add
fisubr
pusha
fimul
xchg
imul
popf
pushf
fmul
lods
mov
mov
nop
out
les
int3
mov
stos
push
push
es
jne
pop
xchg
aaa
jg
mov
fistp
gs
pop
and
jbe
out
adc
mov
cmps
mov
pop
outs
fisttp
sar
mov
fabs
dec
jmp
xor
in
add
or
xor
iret
add
add
jmp
daa
xchg
dec
pop
cmp
mov
xchg
aas
test
cs
out
fs
lock
test
pop
ror
fld
jmp
ficom
(bad)
cmp
cld
add
xor
addr16
push
sbb
(bad)
into
and
push
sbb
push
jge
mov
inc
dec
xchg
iret
pop
dec
push
loope
add
cmp
dec
and
xor
jp
and
jns
jp
shl
jg
shrd
out
loope
test
mov
pushf
pop
and
out
loop
mov
xchg
dec
movhps
iret
jae
cmp
daa
das
pop
aaa
daa
daa
daa
daa
aas
inc
dec
push
outs
pop
in
add
pop
dec
addr16
leave
repz
outs
adc
leave
leave
leave
leave
xchg
leave
leave
cmps
scas
mov
leave
leave
leave
leave
(bad)
iret
xlat
fbstp
movntq
maskmovq
not
pop
jecxz
or
xchg
xchg
dec
push
pop
jecxz
out
outs
mov
dec
pop
(bad)
xor
sahf
cmp
popa
aas
imul
jno
jns
cmp
jns
add
xor
cmp
adc
add
loopne
cdq
cwde
or
and
cmp
jbe
mov
std
das
add
aaa
or
(bad)
jbe
js
in
jl
push
push
add
fimul
xchg
daa
ret
setbe
in
dec
sahf
add
scas
sbb
bswap
rol
xchg
cmp
daa
pop
cli
add
(bad)
add
iret
jae
adc
add
sub
daa
daa
daa
xor
inc
dec
jb
cmp
push
or
cmp
jns
out
je
add
fstp
cmp
jle
pop
(bad)
daa
daa
iret
mov
mov
movs
pop
lods
pop
jl
jae
mov
cmovle
mov
jg
pinsrw
pushf
pushf
fmul
iret
xchg
pushf
movs
cmp
in
hlt
cmp
cmp
cld
lods
mov
in
mov
unpcklps
leave
in
in
les
jns
add
and
sub
repz
daa
cmp
add
cmp
add
das
test
fcomi
das
dec
pop
out
andps
inc
dec
test
leave
inc
inc
out
ds
jns
add
pop
(bad)
gs
fimul
ins
test
nop
out
shr
lods
out
in
jb
fdiv
add
aad
lock
dec
call
cwde
in
and
sub
inc
popf
xor
mov
xchg
out
and
cmps
pop
rol
dec
imul
cmp
leave
idiv
inc
dec
fild
in
pushf
dec
inc
fs
rcl
aaa
aad
cmp
repnz
push
inc
dec
and
and
push
inc
xchg
xchg
xchg
add
call
adc
sbb
and
sub
xor
xchg
jmp
in
fld
xchg
out
cmc
(bad)
fs
dec
add
test
ret
xchg
cmova
pop
jmp
and
inc
test
pop
ret
dec
ja
sub
scas
xchg
seto
jbe
lahf
cmps
out
in
and
lods
pop
cmp
test
js
push
dec
leave
or
pop
leave
push
nop
call
addr16
fist
cmps
sti
pop
sbb
repnz
test
push
xchg
and
(bad)
addr16
jmp
pop
jmp
cmps
xchg
fwait
jmp
fst
cwde
or
xchg
pop
and
les
lock
xchg
pop
and
sbb
jb
or
movs
jmp
mov
mov
cmp
jmp
xchg
pop
mov
js
in
dec
mov
in
mov
xchg
jno
in
ja
lahf
outs
test
mov
pushf
dec
and
lea
push
pop
stos
mov
mov
retf
psrlq
ret
cmp
ja
push
in
push
in
and
mov
in
push
outs
mov
ja
add
push
adc
add
jns
call
in
xor
in
repnz
clc
fbstp
cmps
cmp
dec
aas
mov
mov
fidiv
leave
fst
out
mov
dec
pop
loopne
hlt
dec
inc
or
rol
or
repnz
ror
mov
adc
out
adc
xchg
and
fs
xchg
pop
dec
adc
dec
pop
leave
idiv
inc
pop
in
lods
dec
cmps
mul
dec
mov
in
test
xchg
mov
out
call
out
mov
pusha
dec
dec
dec
outs
cwde
sar
out
add
mov
ja
out
push
loopne
sub
ss
mov
nop
mov
jmp
adc
xchg
aas
jnp
push
out
xchg
retf
dec
dec
pop
scas
lods
sub
pop
xchg
push
jl
imul
add
lods
sahf
cmps
lock
ja
or
add
in
sub
mov
adc
leave
mov
cvttps2pi
dec
and
ss
cmp
xor
nop
mov
inc
stos
dec
ror
pushf
leave
mov
movs
aas
int
and
xchg
adc
adc
dec
jb
xchg
rcpps
fwait
push
mov
ja
and
push
pop
mov
iret
(bad)
mov
fld
aas
push
pushf
dec
push
cmp
cmp
dec
lock
in
mov
out
int3
inc
fmul
inc
aad
scas
push
aam
ret
lods
into
inc
aaa
in
and
dec
dec
push
pusha
mov
outs
mov
(bad)
mov
in
push
push
pop
iret
(bad)
push
xor
adc
rol
sar
fst
push
cmp
dec
lock
es
pop
dec
push
cwde
and
mov
ds
por
pushf
pusha
cmp
adc
add
fimul
cmovs
adc
aas
cmp
call
jecxz
icebp
(bad)
nop
jl
sahf
rcl
inc
jg
adc
jns
sbb
sbb
adc
push
fisub
inc
jmp
fstp
inc
hlt
inc
mov
jnp
call
jns
adc
and
ret
jbe
mov
rcl
jns
movs
adc
jno
lea
mov
fnstcw
les
js
dec
inc
jno
popf
sbb
aas
(bad)
clc
(bad)
fs
mov
ins
xchg
add
sti
xchg
lahf
test
push
neg
div
fnstcw
ins
or
add
push
cs
jle
push
xor
pop
addr16
mov
call
mov
retf
jb
add
jbe
add
outs
int
jnp
push
or
fldcw
jne
jle
jno
sbb
(bad)
inc
jnp
ins
arpl
ss
int
push
popf
(bad)
xchg
or
xchg
sahf
int
jnp
push
jbe
retf
cwde
nop
int
mov
push
sti
xchg
dec
mov
mov
ss
mov
xchg
out
mov
mov
lahf
or
lahf
cmps
inc
dec
iret
mov
push
push
mov
imul
and
xor
out
cmp
jns
out
dec
push
push
dec
add
imul
dec
pause
stos
ret
icebp
mov
pop
cmps
or
out
popf
out
pop
data16
pop
mov
jl
ficomp
push
jno
inc
pop
js
sahf
out
xchg
mov
repz
shl
push
jb
test
imul
jae
dec
sahf
out
sahf
ins
mov
dec
repz
or
fs
cmp
repz
jns
cmps
sub
bound
int
jns
mov
fdiv
adc
cmp
repz
pop
push
popf
stc
cmp
rep
mov
out
sahf
cmps
inc
pop
push
(bad)
lahf
out
sahf
scas
(bad)
(bad)
adc
iret
repz
xor
jo
cmp
repz
movs
mov
out
ds
(bad)
push
jns
daa
xor
adc
dec
sbb
push
or
dec
xor
mov
stos
and
sbb
xchg
xchg
push
fisub
sbb
imul
test
or
sub
or
cs
inc
movs
or
xor
xchg
aaa
xor
add
sub
or
sar
add
mov
rol
inc
xchg
inc
sub
je
push
mov
dec
add
inc
test
jbe
xchg
nop
ss
jg
gs
sub
test
add
test
ins
jns
inc
daa
ins
in
mov
mov
add
push
mov
inc
ins
sbb
shl
add
mov
add
pop
xor
inc
adc
add
adc
add
add
add
ins
inc
add
je
mov
pusha
mov
pop
repz
pusha
mov
ja
nop
xchg
pop
push
sbb
add
lea
ficomp
sub
scas
inc
scas
add
jnp
mov
mov
push
fcom
and
inc
add
add
jno
add
popa
push
sub
adc
and
dec
mov
add
ins
or
icebp
das
inc
mov
add
add
aas
add
add
add
pop
mov
sbb
push
add
sbb
add
push
cmps
ins
or
ins
inc
(bad)
or
sbb
ret
pop
push
push
ret
xchg
and
or
rcl
ret
jb
mov
sub
mov
test
aas
add
push
les
shl
add
dec
int3
pop
pop
xchg
or
mov
dec
call
inc
mov
xlat
cmp
dec
push
fiadd
inc
or
js
adc
push
popa
(bad)
pusha
ret
inc
(bad)
fisubr
movs
mov
pop
xor
shl
sbb
inc
jbe
mov
in
sbb
jmp
loop
outs
dec
inc
aas
xchg
jae
dec
fcmovnu
cmp
ja
sub
pushf
sub
and
fsubr
retf
das
cmps
test
sbb
or
jl
mov
outs
imul
inc
loop
leave
sub
xlat
or
push
xchg
mov
push
(bad)
adc
in
adc
push
sub
sbb
xor
pop
(bad)
sbb
xor
xor
gs
and
adc
retf
gs
imul
push
aaa
add
cld
mov
xor
xor
sub
cmp
xor
xor
inc
inc
inc
xor
xor
inc
aaa
cmp
inc
inc
mov
dec
js
or
out
push
push
sbb
add
lods
out
cs
inc
push
dec
xchg
xor
icebp
inc
int3
sti
es
dec
popa
mov
fbld
mov
xchg
add
mov
mov
dec
punpckhwd
and
jo
dec
xlat
inc
push
fadd
push
fsubr
test
pop
rcl
add
ins
(bad)
fmul
add
mov
pop
cmps
add
mov
scas
lds
test
adc
outs
dec
pop
dec
loope
add
iret
push
mov
bound
aad
mov
ss
cmp
mov
inc
adc
add
inc
shl
retf
pop
dec
jno
bound
jne
js
inc
pusha
pop
mov
fist
and
pop
scas
mov
lea
mov
mov
mov
sbb
pop
outs
mov
dec
dec
or
push
or
das
arpl
inc
(bad)
mov
sub
inc
mov
aaa
jns
sbb
or
mov
adc
inc
popa
inc
mov
mov
xchg
or
mov
pop
test
cmp
add
xor
and
dec
mov
movs
ficom
loope
sbb
push
ins
outs
adc
mov
ss
inc
jmp
pusha
push
test
push
mov
mov
add
addr16
or
mov
push
das
sbb
add
mov
sub
xchg
and
div
push
test
int
push
iret
rcl
inc
dec
or
in
xor
xchg
or
pusha
and
ja
(bad)
std
inc
fld
adc
bound
push
aas
mov
add
lahf
sbb
ins
inc
cmp
add
add
(bad)
pop
cmp
mov
outs
and
pusha
dec
push
xor
imul
mov
add
push
ins
sbb
mov
test
adc
inc
dec
push
imul
fimul
inc
inc
imul
pop
sub
pop
sbb
push
jg
mov
lods
cmp
rol
cdq
adc
mov
das
dec
xchg
ficomp
lods
cmp
xchg
aaa
fwait
push
inc
adc
(bad)
add
pop
sbb
and
sar
ins
stc
pop
test
mov
scas
outs
jne
pop
outs
pop
mov
and
push
lds
fist
push
stos
add
mov
push
cmp
pop
pop
add
leave
cwde
inc
push
in
dec
add
in
xchg
or
or
fsub
es
gs
mov
and
js
mov
dec
std
xchg
lahf
sub
adc
bound
imul
dec
pop
inc
stos
add
pop
and
inc
rol
inc
xchg
and
out
movs
sub
sub
cmps
rol
mov
push
out
xchg
jmp
add
aaa
sub
daa
pop
or
jg
add
cmc
jge
pop
inc
mov
pop
cmp
sub
add
add
in
and
add
sbb
cmp
iret
jae
call
shr
add
lahf
and
pop
add
lahf
fcmovnb
pop
add
xchg
repnz
mov
aas
add
jnp
xlat
pop
sbb
loop
add
mov
or
sbb
and
pop
mov
aas
or
cs
pop
push
pop
or
in
lahf
nop
or
mov
push
ucomiss
pop
adc
sar
movs
add
adc
mov
xor
cs
pop
es
daa
pop
mov
bound
das
pop
ds
add
jb
push
aas
adc
fistp
aas
sbb
lahf
outs
in
push
sbb
add
mov
xchg
add
lahf
and
and
mov
sbb
inc
call
pop
fisubr
inc
sahf
out
pop
mov
mov
and
inc
inc
cmp
mov
jmp
mov
xchg
ret
xchg
adc
sbb
or
push
icebp
and
cmp
sub
pop
inc
jmp
mov
or
sbb
dec
push
inc
xor
inc
xor
add
inc
mov
add
nop
test
mov
adc
xchg
push
ins
scas
sub
aas
mov
lahf
or
nop
fadd
and
mov
aas
xor
sub
rdtsc
ret
inc
and
loope
es
imul
fwait
inc
mov
ret
push
cs
pandn
cmp
sbb
jmp
sub
imul
jnp
xchg
push
sar
jmp
test
leave
inc
pusha
aaa
lahf
push
enter
leave
ret
sub
xchg
aaa
xor
or
xor
mov
push
ja
mov
adc
das
adc
fldenv
lods
bound
fisttp
pop
mov
rol
loope
push
push
into
dec
push
dec
sub
xchg
xchg
inc
dec
sbb
inc
inc
pusha
jmp
push
adc
or
enter
or
push
stos
add
inc
sub
xor
jns
comiss
mov
cmps
aam
sub
iret
ins
adc
fiadd
mov
jns
test
inc
dec
movs
and
mov
pop
test
push
xchg
jg
shl
and
in
or
lds
pushf
jno
iret
mov
mov
or
inc
add
out
(bad)
or
push
and
adc
pop
adc
inc
inc
xchg
and
and
push
dec
and
sbb
jnp
pop
add
xchg
cmp
add
jb
pushf
pop
jo
or
add
dec
rol
call
adc
pop
xor
add
push
xor
xor
orps
fbstp
addr16
int
pop
dec
adc
and
das
daa
adc
scas
pop
mov
mov
jne
rol
sbb
mov
scas
loope
test
mov
fcomp
das
sub
shl
das
dec
ins
push
and
mov
sbb
pop
add
popa
sub
inc
add
pop
mov
test
pop
sub
pop
dec
inc
or
xchg
adc
lahf
arpl
and
in
cdq
mov
(bad)
(bad)
jle
sub
addr16
imul
jnp
ror
(bad)
je
inc
add
push
iret
ins
sub
test
and
sub
mov
cli
xor
xor
mov
add
imul
test
add
lods
sbb
jg
sub
cmp
ja
inc
(bad)
jle
or
imul
outs
fwait
push
or
sub
adc
mov
imul
or
sti
push
nop
lock
pop
and
cmc
aas
nop
lock
les
or
pop
inc
out
push
pop
outs
retf
je
pop
pop
jmp
fcomp
adc
inc
shl
mov
or
jne
jae
sbb
fadd
add
ss
cmp
push
(bad)
jo
inc
sub
add
xchg
add
fcmovu
inc
ins
aas
pop
lahf
lea
inc
out
jo
icebp
xchg
mov
pop
pop
push
or
enter
call
jl
out
dec
adc
in
repz
rcr
mov
repz
dec
sbb
push
add
mov
mov
push
jns
repz
jns
out
out
jp
push
cld
or
add
dec
xchg
movs
out
add
push
repz
ins
(bad)
sbb
iret
push
or
or
fst
aaa
or
outs
(bad)
imul
daa
mov
adc
and
cmp
inc
push
addr16
das
push
femms
outs
mov
push
mov
ins
push
and
sbb
push
pop
and
fild
aas
add
sub
popf
movs
fbld
sbb
pop
data16
cld
into
stos
add
mov
mov
mov
dec
sgdtd
add
cs
add
add
push
xlat
add
and
jb
add
xor
xchg
add
or
cdq
add
test
shr
pop
add
inc
inc
adc
adc
add
inc
pusha
and
ffree
jns
scas
cmps
fisttp
mov
jl
lahf
loopne
inc
jle
int3
push
push
cld
push
shl
cmovo
mov
inc
mov
out
adc
dec
mov
in
call
adc
mov
push
add
mov
xor
fcomp
add
fneni(8087
stc
jb
jle
fmul
mov
inc
mov
cmp
add
mov
mov
scas
fmul
fdivr
xor
push
xlat
dec
dec
fiadd
shl
add
dec
dec
sahf
dec
lea
mov
mov
xchg
xchg
imul
cmp
js
(bad)
jg
sub
(bad)
pop
(bad)
fsub
jno
or
lock
div
inc
or
sbb
xchg
std
xchg
or
inc
sub
adc
adc
adc
inc
mov
rol
and
or
or
mov
add
xchg
or
dec
sub
xor
rdmsr
inc
loop
pop
add
ins
cmp
(bad)
sub
sub
jge
inc
ja
jns
in
adc
xor
sub
out
sahf
out
and
adc
sar
add
fucomp
loopne
cmp
repz
int3
enter
cmp
mov
pop
lods
sahf
out
sahf
test
pushf
nop
mov
js
jo
pop
push
repz
repz
cmp
xor
push
dec
cmp
adc
or
push
inc
lea
cmps
xchg
fs
imul
cs
cs
mov
sbb
test
movs
in
push
jo
mov
pop
outs
ret
loope
add
inc
(bad)
inc
fs
repz
imul
loope
cli
push
inc
sahf
out
push
sbb
ds
out
sahf
inc
pop
pop
jp
sahf
jns
out
scas
into
shr
repnz
repz
es
jb
repz
ja
xchg
mov
loop
cmps
stc
cmp
push
in
xor
jns
outs
xchg
out
(bad)
(bad)
adc
iret
repz
sub
pop
arpl
ds
repz
mov
loop
out
sahf
out
pop
and
inc
pop
push
test
xchg
fwait
cmps
inc
cmps
cld
fidivr
inc
inc
add
cmp
mov
add
add
or
icebp
jo
aaa
xor
out
icebp
ss
push
rol
jle
nop
mov
idiv
ss
push
cmp
pop
js
iret
repz
mov
repz
outs
(bad)
imul
cmp
pop
cmp
repz
xchg
mov
bnd
cmps
stc
adc
das
dec
ins
xchg
es
test
call
adc
fiadd
sahf
sbb
xchg
xchg
jp
sbb
pop
jle
ffreep
jmp
push
fdivr
fimul
inc
ds
push
sahf
test
mov
or
mov
iret
mov
pop
sbb
lods
sbb
jns
repz
adc
nop
sbb
push
adc
and
out
and
ins
and
fs
outs
adc
or
add
sahf
in
inc
add
inc
pop
repnz
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
(bad)
(bad)
(bad)
inc
xchg
inc
push
add
inc
stc
mov
adc
mov
(bad)
(bad)
(bad)
(bad)
in
dec
pop
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
(bad)
(bad)
(bad)
(bad)
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
inc
(bad)
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
(bad)
(bad)
push
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
(bad)
(bad)
(bad)
(bad)
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
(bad)
call
sub
fwait
xchg
and
and
lahf
pop
int3
add
sti
aas
jno
or
mov
pop
fs
dec
jg
and
lea
push
sub
sbb
pop
pop
mov
(bad)
(bad)
call
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
(bad)
(bad)
jmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
(bad)
(bad)
(bad)
inc
push
cmp
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
(bad)
(bad)
dec
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
movs
(bad)
(bad)
(bad)
(bad)
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
(bad)
cmp
jp
and
cmp
mov
cmp
(bad)
push
pusha
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
and
call
and
xor
dec
nop
pop
cmp
(bad)
(bad)
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
std
fstp
pop
ficomp
frstor
mov
push
and
add
test
mov
add
and
add
nop
push
add
add
add
or
push
add
nop
inc
add
add
test
pop
fwait
dec
pusha
lock
adc
xchg
push
daa
sub
das
nop
xor
imul
add
fist
add
sub
or
outs
adc
popa
mov
push
outs
adc
push
xor
cmp
fst
xchg
mov
je
cwde
push
popa
movs
popa
fcmovne
jae
dec
or
or
(bad)
or
movs
pop
jmp
and
imul
push
jbe
sub
cdq
mov
pusha
daa
retf
mov
fsub
dec
jb
fs
imul
popf
inc
js
dec
push
xchg
add
imul
jo
mov
adc
ins
sbb
sub
fadd
(bad)
jb
sar
push
mov
mov
cdq
add
mov
or
dec
shl
rol
int
test
sbb
mov
int3
xchg
aas
fs
retf
aaa
int
adc
mov
lahf
daa
sbb
lods
bound
stc
mov
arpl
xor
adc
and
pusha
dec
push
sub
sbb
movs
lods
or
inc
fcomp
xor
push
inc
jns
xor
repz
sub
outs
dec
sub
jnp
sti
ret
adc
or
xor
inc
ss
sub
xchg
pusha
std
test
and
arpl
retf
push
sub
sub
xor
shr
gs
push
mov
sub
inc
mov
push
push
xchg
into
ss
popf
jbe
jmp
pop
mov
push
ret
ins
repz
and
xchg
sub
sbb
pop
mov
xlat
das
push
dec
add
hlt
jbe
jecxz
mov
dec
mov
lods
sub
stos
xchg
dec
inc
dec
movs
jae
or
jno
inc
and
dec
icebp
adc
add
mov
xchg
aaa
push
push
or
addr16
xor
push
sub
adc
add
mov
inc
aad
jecxz
dec
cmc
cmp
mov
inc
push
inc
aaa
sub
sbb
leave
dec
inc
es
sbb
dec
inc
call
into
push
add
ja
mov
jp
sbb
lahf
ins
add
cmp
xor
push
xor
shl
cmp
adc
xchg
jo
jae
ins
jne
xchg
sbb
mov
mov
inc
mov
mov
movs
ins
inc
mov
xchg
and
adc
push
popa
fcomp
jo
push
cmps
xchg
sbb
daa
mov
jb
push
jecxz
and
mov
inc
push
pop
push
xor
(bad)
rol
jae
pop
js
add
out
inc
jb
or
loope
retf
push
dec
fld
data16
sti
adc
push
jns
and
dec
cmp
xchg
stos
pop
cmps
mov
mov
push
test
or
cs
push
pusha
mov
mov
fnsave
fwait
inc
aaa
pop
jo
fmul
movs
or
adc
sbb
mov
lea
std
push
sbb
test
push
nop
call
stc
push
lea
cmp
xchg
pop
hlt
fsubr
push
push
push
inc
test
xlat
imul
aad
pop
test
jnp
add
xor
and
pop
lods
inc
pop
push
es
lea
and
mov
ja
call
movs
pop
(bad)
aas
add
imul
mov
xor
nop
jo
jle
fnstcw
sti
inc
arpl
imul
xchg
mov
inc
mov
add
sbb
jae
and
cmp
mov
or
jp
xor
icebp
push
fwait
adc
sub
pop
fisub
or
sub
mov
fdiv
fwait
pop
jo
xor
and
push
lahf
inc
cmp
inc
scas
lods
ror
je
inc
inc
pop
cdq
inc
push
add
in
(bad)
add
pop
repz
test
pushf
dec
mov
sbb
hlt
mov
imul
xor
fcmove
int3
fidivr
inc
dec
fnsave
(bad)
call
and
arpl
or
sbb
movs
in
ins
je
and
fimul
cld
scas
and
cmp
or
jle
bound
xor
jb
fstp
and
imul
mov
dec
xchg
js
sbb
push
sar
inc
icebp
push
xor
sbb
nop
cmp
cwde
imul
inc
ss
adc
inc
lods
dec
in
loope
add
pop
stc
je
adc
shl
dec
pop
inc
jge
cmp
loop
fistp
xor
and
xor
mov
mov
ins
lea
mov
fcom
mov
push
mov
popa
cmp
addr16
ja
ins
pusha
jb
jbe
repnz
or
xor
adc
ins
pop
sub
nop
add
pusha
dec
xor
aam
add
jae
sub
das
fwait
and
add
or
xlat
cdq
adc
pusha
jae
mov
mov
push
adc
fstp
add
sub
push
pusha
sbb
sub
push
push
cdq
inc
test
push
inc
add
sub
xor
jno
lods
adc
add
sub
ins
inc
out
xchg
ss
pop
jbe
ins
nop
lods
xor
jo
lds
pop
out
xor
xchg
mov
push
push
push
sbb
xchg
clc
jne
push
ins
or
add
pusha
dec
push
cdq
add
in
adc
sub
xchg
ja
dec
and
push
scas
inc
add
gs
and
adc
xor
lea
adc
pop
mov
xor
xor
ret
in
push
mov
adc
je
jo
jo
cmp
ret
inc
repz
sub
xchg
fwait
push
nop
and
mov
mov
push
adc
loope
imul
icebp
dec
jae
sub
or
mov
cmp
add
adc
dec
ins
pusha
cmp
cld
fdiv
push
sub
mov
jl
sbb
pop
xchg
and
or
jo
iret
cmc
fimul
jo
retf
or
sti
and
cmp
mov
data16
addr16
cld
push
adc
or
shl
add
add
xor
adc
add
inc
stos
push
inc
add
dec
add
add
or
or
sbb
and
adc
mov
dec
les
sbb
or
ror
or
or
xor
push
(bad)
jbe
enter
xor
iret
nop
or
jo
out
add
cs
or
inc
cmp
cwde
add
(bad)
pop
(bad)
clc
push
jno
push
and
vmsave
aad
ret
cmp
jb
popa
adc
jns
mov
add
or
out
inc
cs
add
dec
add
out
in
cmovg
cs
jb
xlat
out
pop
push
out
ror
xor
dec
test
dec
fs
mov
stc
adc
loopne
xchg
pop
and
adc
jg
mov
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
push
lods
dec
add
and
add
